
31a079b5bdd155cb58860afa1e068f8564d7a4a9492aab347e35a724db1849e9.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rax,[rip+0x49149]        # 0x14004a150
   140001007:	ret    
   140001008:	int3   
   140001009:	int3   
   14000100a:	int3   
   14000100b:	int3   
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	mov    QWORD PTR [rsp+0x8],rcx
   140001015:	push   rsi
   140001016:	push   rdi
   140001017:	push   r12
   140001019:	sub    rsp,0x30
   14000101d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001026:	mov    QWORD PTR [rsp+0x58],rbx
   14000102b:	mov    QWORD PTR [rsp+0x60],rbp
   140001030:	mov    rdi,rcx
   140001033:	call   0x14001d278
   140001038:	xor    r12d,r12d
   14000103b:	mov    QWORD PTR [rdi+0xe8],r12
   140001042:	lea    rax,[rip+0x4919f]        # 0x14004a1e8
   140001049:	mov    QWORD PTR [rdi],rax
   14000104c:	lea    rcx,[rdi+0xf0]
   140001053:	call   0x140016de8
   140001058:	lea    rbp,[rip+0x4bf49]        # 0x14004cfa8
   14000105f:	mov    QWORD PTR [rdi+0xf0],rbp
   140001066:	mov    QWORD PTR [rdi+0x198],r12
   14000106d:	mov    DWORD PTR [rdi+0x1a0],r12d
   140001074:	lea    rcx,[rdi+0x1a8]
   14000107b:	call   0x140016de8
   140001080:	lea    r11,[rip+0x44c11]        # 0x140045c98
   140001087:	mov    QWORD PTR [rdi+0x1a8],r11
   14000108e:	lea    rcx,[rdi+0x250]
   140001095:	call   0x140016de8
   14000109a:	lea    rsi,[rip+0x44937]        # 0x1400459d8
   1400010a1:	mov    QWORD PTR [rdi+0x250],rsi
   1400010a8:	lea    rcx,[rdi+0x2f8]
   1400010af:	call   0x140016de8
   1400010b4:	mov    QWORD PTR [rdi+0x2f8],rsi
   1400010bb:	lea    rcx,[rdi+0x3a0]
   1400010c2:	call   0x140016de8
   1400010c7:	mov    QWORD PTR [rdi+0x3a0],rbp
   1400010ce:	mov    QWORD PTR [rdi+0x448],r12
   1400010d5:	mov    DWORD PTR [rdi+0x450],r12d
   1400010dc:	lea    rax,[rip+0x49c4d]        # 0x14004ad30
   1400010e3:	mov    QWORD PTR [rdi+0x458],rax
   1400010ea:	mov    QWORD PTR [rdi+0x460],r12
   1400010f1:	mov    QWORD PTR [rdi+0x468],r12
   1400010f8:	mov    DWORD PTR [rdi+0x470],r12d
   1400010ff:	mov    DWORD PTR [rdi+0x474],r12d
   140001106:	mov    DWORD PTR [rdi+0x478],r12d
   14000110d:	mov    DWORD PTR [rdi+0x47c],r12d
   140001114:	mov    BYTE PTR [rdi+0x480],r12b
   14000111b:	mov    BYTE PTR [rdi+0x481],r12b
   140001122:	mov    DWORD PTR [rdi+0x484],0xffffffff
   14000112c:	mov    QWORD PTR [rdi+0x488],r12
   140001133:	mov    DWORD PTR [rdi+0x490],r12d
   14000113a:	mov    QWORD PTR [rdi+0x498],r12
   140001141:	lea    rcx,[rip+0x60b88]        # 0x140061cd0
   140001148:	call   QWORD PTR [rip+0x423f2]        # 0x140043540
   14000114e:	add    DWORD PTR [rip+0x60ba3],0x1        # 0x140061cf8
   140001155:	lea    rcx,[rip+0x60b74]        # 0x140061cd0
   14000115c:	call   QWORD PTR [rip+0x423d6]        # 0x140043538
   140001162:	lea    r11,[rip+0x49adf]        # 0x14004ac48
   140001169:	mov    QWORD PTR [rdi+0x458],r11
   140001170:	mov    QWORD PTR [rdi+0x4a0],r12
   140001177:	mov    QWORD PTR [rdi+0x4a8],r12
   14000117e:	mov    rax,rdi
   140001181:	mov    rbx,QWORD PTR [rsp+0x58]
   140001186:	mov    rbp,QWORD PTR [rsp+0x60]
   14000118b:	add    rsp,0x30
   14000118f:	pop    r12
   140001191:	pop    rdi
   140001192:	pop    rsi
   140001193:	ret    
   140001194:	int3   
   140001195:	int3   
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	rex push rbp
   1400011a2:	sub    rsp,0x20
   1400011a6:	mov    rbp,rdx
   1400011a9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400011ad:	call   0x14000dd20
   1400011b2:	add    rsp,0x20
   1400011b6:	pop    rbp
   1400011b7:	ret    
   1400011b8:	int3   
   1400011b9:	int3   
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	rex push rbp
   1400011c2:	sub    rsp,0x20
   1400011c6:	mov    rbp,rdx
   1400011c9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400011cd:	add    rcx,0xf0
   1400011d4:	call   0x140012760
   1400011d9:	add    rsp,0x20
   1400011dd:	pop    rbp
   1400011de:	ret    
   1400011df:	int3   
   1400011e0:	rex push rbp
   1400011e2:	sub    rsp,0x20
   1400011e6:	mov    rbp,rdx
   1400011e9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400011ed:	add    rcx,0x1a8
   1400011f4:	call   0x14001e2f4
   1400011f9:	add    rsp,0x20
   1400011fd:	pop    rbp
   1400011fe:	ret    
   1400011ff:	int3   
   140001200:	rex push rbp
   140001202:	sub    rsp,0x20
   140001206:	mov    rbp,rdx
   140001209:	mov    rcx,QWORD PTR [rbp+0x50]
   14000120d:	add    rcx,0x250
   140001214:	call   0x14001e22c
   140001219:	add    rsp,0x20
   14000121d:	pop    rbp
   14000121e:	ret    
   14000121f:	int3   
   140001220:	rex push rbp
   140001222:	sub    rsp,0x20
   140001226:	mov    rbp,rdx
   140001229:	mov    rcx,QWORD PTR [rbp+0x50]
   14000122d:	add    rcx,0x2f8
   140001234:	call   0x14001e22c
   140001239:	add    rsp,0x20
   14000123d:	pop    rbp
   14000123e:	ret    
   14000123f:	int3   
   140001240:	mov    QWORD PTR [rsp+0x8],rbx
   140001245:	push   rdi
   140001246:	sub    rsp,0x20
   14000124a:	mov    ebx,edx
   14000124c:	mov    rdi,rcx
   14000124f:	call   0x140001270
   140001254:	test   bl,0x1
   140001257:	je     0x140001261
   140001259:	mov    rcx,rdi
   14000125c:	call   0x14001490c
   140001261:	mov    rax,rdi
   140001264:	mov    rbx,QWORD PTR [rsp+0x30]
   140001269:	add    rsp,0x20
   14000126d:	pop    rdi
   14000126e:	ret    
   14000126f:	int3   
   140001270:	mov    QWORD PTR [rsp+0x8],rcx
   140001275:	push   rdi
   140001276:	sub    rsp,0x30
   14000127a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001283:	mov    QWORD PTR [rsp+0x48],rbx
   140001288:	mov    rbx,rcx
   14000128b:	lea    rax,[rip+0x48f56]        # 0x14004a1e8
   140001292:	mov    QWORD PTR [rcx],rax
   140001295:	lea    rax,[rip+0x49a94]        # 0x14004ad30
   14000129c:	mov    QWORD PTR [rcx+0x458],rax
   1400012a3:	mov    rcx,QWORD PTR [rcx+0x460]
   1400012aa:	xor    edi,edi
   1400012ac:	test   rcx,rcx
   1400012af:	je     0x1400012f5
   1400012b1:	mov    QWORD PTR [rbx+0x460],rdi
   1400012b8:	mov    QWORD PTR [rbx+0x468],rdi
   1400012bf:	mov    DWORD PTR [rbx+0x470],edi
   1400012c5:	mov    DWORD PTR [rbx+0x474],edi
   1400012cb:	mov    DWORD PTR [rbx+0x47c],edi
   1400012d1:	mov    DWORD PTR [rbx+0x478],edi
   1400012d7:	mov    DWORD PTR [rbx+0x484],0xffffffff
   1400012e1:	mov    BYTE PTR [rbx+0x481],dil
   1400012e8:	mov    BYTE PTR [rbx+0x480],dil
   1400012ef:	call   QWORD PTR [rip+0x41e7b]        # 0x140043170
   1400012f5:	lea    rcx,[rip+0x609d4]        # 0x140061cd0
   1400012fc:	call   QWORD PTR [rip+0x4223e]        # 0x140043540
   140001302:	sub    DWORD PTR [rip+0x609ef],0x1        # 0x140061cf8
   140001309:	jne    0x14000133d
   14000130b:	lea    rcx,[rip+0x609be]        # 0x140061cd0
   140001312:	call   QWORD PTR [rip+0x42228]        # 0x140043540
   140001318:	mov    rcx,QWORD PTR [rip+0x609a9]        # 0x140061cc8
   14000131f:	test   rcx,rcx
   140001322:	je     0x140001329
   140001324:	call   0x140040d10
   140001329:	mov    QWORD PTR [rip+0x60998],rdi        # 0x140061cc8
   140001330:	lea    rcx,[rip+0x60999]        # 0x140061cd0
   140001337:	call   QWORD PTR [rip+0x421fb]        # 0x140043538
   14000133d:	lea    rcx,[rip+0x6098c]        # 0x140061cd0
   140001344:	call   QWORD PTR [rip+0x421ee]        # 0x140043538
   14000134a:	lea    rcx,[rbx+0x3a0]
   140001351:	lea    rdi,[rip+0x4bc50]        # 0x14004cfa8
   140001358:	mov    QWORD PTR [rcx],rdi
   14000135b:	call   0x14001e22c
   140001360:	nop
   140001361:	lea    rcx,[rbx+0x2f8]
   140001368:	call   0x14001e22c
   14000136d:	nop
   14000136e:	lea    rcx,[rbx+0x250]
   140001375:	call   0x14001e22c
   14000137a:	nop
   14000137b:	lea    rcx,[rbx+0x1a8]
   140001382:	call   0x14001e2f4
   140001387:	nop
   140001388:	lea    rcx,[rbx+0xf0]
   14000138f:	mov    QWORD PTR [rcx],rdi
   140001392:	call   0x14001e22c
   140001397:	nop
   140001398:	lea    rax,[rip+0x4a8f9]        # 0x14004bc98
   14000139f:	mov    QWORD PTR [rbx],rax
   1400013a2:	mov    rcx,rbx
   1400013a5:	mov    rbx,QWORD PTR [rsp+0x48]
   1400013aa:	add    rsp,0x30
   1400013ae:	pop    rdi
   1400013af:	jmp    0x14001d2ac
   1400013b4:	int3   
   1400013b5:	int3   
   1400013b6:	int3   
   1400013b7:	int3   
   1400013b8:	int3   
   1400013b9:	int3   
   1400013ba:	int3   
   1400013bb:	int3   
   1400013bc:	int3   
   1400013bd:	int3   
   1400013be:	int3   
   1400013bf:	int3   
   1400013c0:	rex push rbp
   1400013c2:	sub    rsp,0x20
   1400013c6:	mov    rbp,rdx
   1400013c9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400013cd:	call   0x14000dd20
   1400013d2:	add    rsp,0x20
   1400013d6:	pop    rbp
   1400013d7:	ret    
   1400013d8:	int3   
   1400013d9:	int3   
   1400013da:	int3   
   1400013db:	int3   
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	rex push rbp
   1400013e2:	sub    rsp,0x20
   1400013e6:	mov    rbp,rdx
   1400013e9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400013ed:	add    rcx,0xf0
   1400013f4:	call   0x140012760
   1400013f9:	add    rsp,0x20
   1400013fd:	pop    rbp
   1400013fe:	ret    
   1400013ff:	int3   
   140001400:	rex push rbp
   140001402:	sub    rsp,0x20
   140001406:	mov    rbp,rdx
   140001409:	mov    rcx,QWORD PTR [rbp+0x40]
   14000140d:	add    rcx,0x1a8
   140001414:	call   0x14001e2f4
   140001419:	add    rsp,0x20
   14000141d:	pop    rbp
   14000141e:	ret    
   14000141f:	int3   
   140001420:	rex push rbp
   140001422:	sub    rsp,0x20
   140001426:	mov    rbp,rdx
   140001429:	mov    rcx,QWORD PTR [rbp+0x40]
   14000142d:	add    rcx,0x250
   140001434:	call   0x14001e22c
   140001439:	add    rsp,0x20
   14000143d:	pop    rbp
   14000143e:	ret    
   14000143f:	int3   
   140001440:	rex push rbp
   140001442:	sub    rsp,0x20
   140001446:	mov    rbp,rdx
   140001449:	mov    rcx,QWORD PTR [rbp+0x40]
   14000144d:	add    rcx,0x2f8
   140001454:	call   0x14001e22c
   140001459:	add    rsp,0x20
   14000145d:	pop    rbp
   14000145e:	ret    
   14000145f:	int3   
   140001460:	mov    QWORD PTR [rsp+0x8],rbx
   140001465:	push   rdi
   140001466:	sub    rsp,0x20
   14000146a:	mov    rdi,rdx
   14000146d:	lea    r8,[rcx+0xf0]
   140001474:	mov    rbx,rcx
   140001477:	mov    rcx,rdi
   14000147a:	mov    edx,0x3ff
   14000147f:	call   0x14001e4c0
   140001484:	lea    r8,[rbx+0x1a8]
   14000148b:	mov    edx,0x400
   140001490:	mov    rcx,rdi
   140001493:	call   0x14001e4c0
   140001498:	lea    r8,[rbx+0x250]
   14000149f:	mov    edx,0x402
   1400014a4:	mov    rcx,rdi
   1400014a7:	call   0x14001e4c0
   1400014ac:	lea    r8,[rbx+0x2f8]
   1400014b3:	mov    edx,0x403
   1400014b8:	mov    rcx,rdi
   1400014bb:	call   0x14001e4c0
   1400014c0:	lea    r8,[rbx+0x3a0]
   1400014c7:	mov    edx,0x404
   1400014cc:	mov    rcx,rdi
   1400014cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014d4:	add    rsp,0x20
   1400014d8:	pop    rdi
   1400014d9:	jmp    0x14001e4c0
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	lea    rax,[rip+0x48cd9]        # 0x14004a1c0
   1400014e7:	ret    
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	rex push rbx
   1400014f2:	sub    rsp,0x60
   1400014f6:	cmp    QWORD PTR [rcx+0xe8],0x0
   1400014fe:	mov    rbx,rcx
   140001501:	je     0x14000171a
   140001507:	mov    QWORD PTR [rsp+0x70],rbp
   14000150c:	mov    r8d,0x13a3
   140001512:	mov    rdx,rcx
   140001515:	mov    QWORD PTR [rsp+0x78],rsi
   14000151a:	mov    QWORD PTR [rsp+0x80],rdi
   140001522:	call   0x14000ddd0
   140001527:	mov    rax,QWORD PTR [rbx+0xe8]
   14000152e:	mov    ecx,0x13b2
   140001533:	mov    r8d,0x13a1
   140001539:	bt     DWORD PTR [rax],0xd
   14000153d:	lea    rdi,[rbx+0xf0]
   140001544:	cmovb  r8d,ecx
   140001548:	mov    rcx,rbx
   14000154b:	mov    rdx,rdi
   14000154e:	call   0x14000ddd0
   140001553:	lea    rsi,[rbx+0x1a8]
   14000155a:	mov    r8d,0x13a0
   140001560:	mov    rdx,rsi
   140001563:	mov    rcx,rbx
   140001566:	call   0x14000ddd0
   14000156b:	lea    rdx,[rbx+0x250]
   140001572:	mov    r8d,0x13a5
   140001578:	mov    rcx,rbx
   14000157b:	call   0x14000ddd0
   140001580:	lea    rdx,[rbx+0x2f8]
   140001587:	mov    r8d,0x13a4
   14000158d:	mov    rcx,rbx
   140001590:	call   0x14000ddd0
   140001595:	mov    r8,QWORD PTR [rip+0x6083c]        # 0x140061dd8
   14000159c:	add    r8,0x20
   1400015a0:	je     0x1400015a6
   1400015a2:	mov    r8,QWORD PTR [r8+0x8]
   1400015a6:	mov    rcx,QWORD PTR [rbx+0x130]
   1400015ad:	xor    r9d,r9d
   1400015b0:	lea    edx,[r9+0x30]
   1400015b4:	call   QWORD PTR [rip+0x4242e]        # 0x1400439e8
   1400015ba:	mov    r8,QWORD PTR [rip+0x60817]        # 0x140061dd8
   1400015c1:	add    r8,0x20
   1400015c5:	je     0x1400015cb
   1400015c7:	mov    r8,QWORD PTR [r8+0x8]
   1400015cb:	mov    rcx,QWORD PTR [rbx+0x1e8]
   1400015d2:	xor    r9d,r9d
   1400015d5:	lea    edx,[r9+0x30]
   1400015d9:	call   QWORD PTR [rip+0x42409]        # 0x1400439e8
   1400015df:	mov    r8,QWORD PTR [rip+0x607f2]        # 0x140061dd8
   1400015e6:	add    r8,0x20
   1400015ea:	je     0x1400015f0
   1400015ec:	mov    r8,QWORD PTR [r8+0x8]
   1400015f0:	mov    rcx,QWORD PTR [rbx+0x290]
   1400015f7:	xor    r9d,r9d
   1400015fa:	lea    edx,[r9+0x30]
   1400015fe:	call   QWORD PTR [rip+0x423e4]        # 0x1400439e8
   140001604:	mov    r8,QWORD PTR [rip+0x607cd]        # 0x140061dd8
   14000160b:	add    r8,0x20
   14000160f:	je     0x140001615
   140001611:	mov    r8,QWORD PTR [r8+0x8]
   140001615:	mov    rcx,QWORD PTR [rbx+0x338]
   14000161c:	xor    r9d,r9d
   14000161f:	lea    edx,[r9+0x30]
   140001623:	call   QWORD PTR [rip+0x423bf]        # 0x1400439e8
   140001629:	mov    r11,QWORD PTR [rip+0x607a8]        # 0x140061dd8
   140001630:	mov    ebp,DWORD PTR [r11+0x30]
   140001634:	test   ebp,ebp
   140001636:	je     0x140001651
   140001638:	xor    r9d,r9d
   14000163b:	xor    edx,edx
   14000163d:	mov    rcx,rdi
   140001640:	lea    r8d,[r9+0xd]
   140001644:	call   0x14001ff4c
   140001649:	mov    DWORD PTR [rdi+0xb0],ebp
   14000164f:	jmp    0x14000166d
   140001651:	xor    r9d,r9d
   140001654:	xor    r8d,r8d
   140001657:	mov    rcx,rdi
   14000165a:	lea    edx,[r9+0xd]
   14000165e:	call   0x14001ff4c
   140001663:	mov    DWORD PTR [rdi+0xb0],0x0
   14000166d:	mov    rax,QWORD PTR [rip+0x60764]        # 0x140061dd8
   140001674:	mov    rdx,rdi
   140001677:	mov    rcx,rbx
   14000167a:	mov    r8d,DWORD PTR [rax+0x30]
   14000167e:	call   0x14000e090
   140001683:	test   rdi,rdi
   140001686:	mov    rbp,QWORD PTR [rsp+0x70]
   14000168b:	je     0x1400016a9
   14000168d:	mov    rcx,QWORD PTR [rdi+0x40]
   140001691:	lea    rdx,[rsp+0x40]
   140001696:	call   QWORD PTR [rip+0x42324]        # 0x1400439c0
   14000169c:	lea    rdx,[rsp+0x40]
   1400016a1:	mov    rcx,rbx
   1400016a4:	call   0x1400209b4
   1400016a9:	test   rsi,rsi
   1400016ac:	mov    rdi,QWORD PTR [rsp+0x80]
   1400016b4:	je     0x1400016d2
   1400016b6:	mov    rcx,QWORD PTR [rsi+0x40]
   1400016ba:	lea    rdx,[rsp+0x50]
   1400016bf:	call   QWORD PTR [rip+0x422fb]        # 0x1400439c0
   1400016c5:	lea    rdx,[rsp+0x50]
   1400016ca:	mov    rcx,rbx
   1400016cd:	call   0x1400209b4
   1400016d2:	movsd  xmm0,QWORD PTR [rip+0x5b4ae]        # 0x14005cb88
   1400016da:	mov    r9d,DWORD PTR [rsp+0x4c]
   1400016df:	mov    r8d,DWORD PTR [rsp+0x50]
   1400016e4:	mov    DWORD PTR [rsp+0x30],0x15
   1400016ec:	xor    edx,edx
   1400016ee:	mov    rcx,rsi
   1400016f1:	mulsd  xmm0,QWORD PTR [rip+0x4c55f]        # 0x14004dc58
   1400016f9:	mov    DWORD PTR [rsp+0x28],0x0
   140001701:	mov    DWORD PTR [rsp+0x20],0x0
   140001709:	cvttsd2si eax,xmm0
   14000170d:	sub    r9d,eax
   140001710:	call   0x140020160
   140001715:	mov    rsi,QWORD PTR [rsp+0x78]
   14000171a:	add    rsp,0x60
   14000171e:	pop    rbx
   14000171f:	ret    
   140001720:	mov    QWORD PTR [rsp+0x8],rbx
   140001725:	push   rdi
   140001726:	sub    rsp,0x30
   14000172a:	mov    rbx,rcx
   14000172d:	call   0x14001d8b8
   140001732:	call   0x14001f2e8
   140001737:	mov    rdx,QWORD PTR [rax+0x10]
   14000173b:	lea    rdi,[rbx+0x458]
   140001742:	lea    r9,[rip+0x48a87]        # 0x14004a1d0
   140001749:	mov    r8d,0x9d
   14000174f:	mov    rcx,rdi
   140001752:	mov    DWORD PTR [rsp+0x20],0x1
   14000175a:	call   0x140004e30
   14000175f:	test   rdi,rdi
   140001762:	mov    eax,0x1
   140001767:	je     0x140001770
   140001769:	mov    QWORD PTR [rbx+0x448],rdi
   140001770:	mov    rbx,QWORD PTR [rsp+0x40]
   140001775:	add    rsp,0x30
   140001779:	pop    rdi
   14000177a:	ret    
   14000177b:	int3   
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	sub    rsp,0x28
   140001784:	call   0x14001f3b8
   140001789:	test   rax,rax
   14000178c:	je     0x14000179c
   14000178e:	mov    rdx,QWORD PTR [rax]
   140001791:	mov    rcx,rax
   140001794:	call   QWORD PTR [rdx+0xe8]
   14000179a:	jmp    0x14000179e
   14000179c:	xor    eax,eax
   14000179e:	mov    rcx,QWORD PTR [rax+0x40]
   1400017a2:	xor    r9d,r9d
   1400017a5:	mov    edx,0x111
   1400017aa:	lea    r8d,[r9+0x1]
   1400017ae:	add    rsp,0x28
   1400017b2:	rex.W jmp QWORD PTR [rip+0x4223f]        # 0x1400439f8
   1400017b9:	int3   
   1400017ba:	int3   
   1400017bb:	int3   
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	sub    rsp,0x28
   1400017c4:	call   0x14001f3b8
   1400017c9:	test   rax,rax
   1400017cc:	je     0x1400017dc
   1400017ce:	mov    rdx,QWORD PTR [rax]
   1400017d1:	mov    rcx,rax
   1400017d4:	call   QWORD PTR [rdx+0xe8]
   1400017da:	jmp    0x1400017de
   1400017dc:	xor    eax,eax
   1400017de:	mov    rcx,QWORD PTR [rax+0x40]
   1400017e2:	xor    r9d,r9d
   1400017e5:	xor    r8d,r8d
   1400017e8:	lea    edx,[r9+0x10]
   1400017ec:	add    rsp,0x28
   1400017f0:	rex.W jmp QWORD PTR [rip+0x42201]        # 0x1400439f8
   1400017f7:	int3   
   1400017f8:	int3   
   1400017f9:	int3   
   1400017fa:	int3   
   1400017fb:	int3   
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	rex push rdi
   140001802:	sub    rsp,0x20
   140001806:	cmp    QWORD PTR [rcx+0xe8],0x0
   14000180e:	mov    rdi,rcx
   140001811:	je     0x14000186d
   140001813:	mov    rcx,QWORD PTR [rcx+0x1e8]
   14000181a:	xor    r9d,r9d
   14000181d:	xor    r8d,r8d
   140001820:	mov    edx,0xf0
   140001825:	mov    QWORD PTR [rsp+0x30],rbx
   14000182a:	call   QWORD PTR [rip+0x421b8]        # 0x1400439e8
   140001830:	mov    rcx,QWORD PTR [rdi+0x4a8]
   140001837:	xor    ebx,ebx
   140001839:	cmp    eax,0x1
   14000183c:	sete   bl
   14000183f:	mov    edx,ebx
   140001841:	call   0x140009ec0
   140001846:	mov    r11,QWORD PTR [rdi+0xe8]
   14000184d:	shl    ebx,0xa
   140001850:	xor    ebx,DWORD PTR [r11]
   140001853:	mov    rcx,rdi
   140001856:	and    ebx,0x400
   14000185c:	xor    DWORD PTR [r11],ebx
   14000185f:	mov    rax,QWORD PTR [rdi]
   140001862:	call   QWORD PTR [rax+0x2b8]
   140001868:	mov    rbx,QWORD PTR [rsp+0x30]
   14000186d:	add    rsp,0x20
   140001871:	pop    rdi
   140001872:	ret    
   140001873:	int3   
   140001874:	int3   
   140001875:	int3   
   140001876:	int3   
   140001877:	int3   
   140001878:	int3   
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	rex push rbx
   140001882:	sub    rsp,0x20
   140001886:	mov    rax,QWORD PTR [rcx+0xe8]
   14000188d:	mov    rbx,rcx
   140001890:	test   rax,rax
   140001893:	je     0x1400018dd
   140001895:	mov    ecx,DWORD PTR [rax]
   140001897:	test   cl,0x40
   14000189a:	je     0x1400018a8
   14000189c:	test   cl,0x10
   14000189f:	je     0x1400018a8
   1400018a1:	mov    edx,0x1
   1400018a6:	jmp    0x1400018aa
   1400018a8:	xor    edx,edx
   1400018aa:	lea    rcx,[rbx+0x1a8]
   1400018b1:	call   0x1400200c4
   1400018b6:	mov    rax,QWORD PTR [rbx+0xe8]
   1400018bd:	xor    r9d,r9d
   1400018c0:	mov    ecx,DWORD PTR [rax]
   1400018c2:	mov    edx,0xf1
   1400018c7:	shr    ecx,0xa
   1400018ca:	and    ecx,0x1
   1400018cd:	movsxd r8,ecx
   1400018d0:	mov    rcx,QWORD PTR [rbx+0x1e8]
   1400018d7:	call   QWORD PTR [rip+0x4210b]        # 0x1400439e8
   1400018dd:	add    rsp,0x20
   1400018e1:	pop    rbx
   1400018e2:	ret    
   1400018e3:	int3   
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	movzx  edx,dx
   1400018f3:	jmp    0x14001e148
   1400018f8:	int3   
   1400018f9:	int3   
   1400018fa:	int3   
   1400018fb:	int3   
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	mov    rcx,QWORD PTR [rcx+0x40]
   140001904:	mov    edx,0x1
   140001909:	rex.W jmp QWORD PTR [rip+0x420e0]        # 0x1400439f0
   140001910:	mov    rcx,QWORD PTR [rcx+0x40]
   140001914:	xor    edx,edx
   140001916:	rex.W jmp QWORD PTR [rip+0x420d3]        # 0x1400439f0
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	ret    0x0
   140001923:	int3   
   140001924:	int3   
   140001925:	int3   
   140001926:	int3   
   140001927:	int3   
   140001928:	int3   
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	jmp    0x14001490c
   140001935:	int3   
   140001936:	int3   
   140001937:	int3   
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	int3   
   14000193d:	int3   
   14000193e:	int3   
   14000193f:	int3   
   140001940:	mov    QWORD PTR [rsp+0x8],rbx
   140001945:	push   rdi
   140001946:	sub    rsp,0x20
   14000194a:	mov    ebx,edx
   14000194c:	mov    rdi,rcx
   14000194f:	call   0x14001e22c
   140001954:	test   bl,0x1
   140001957:	je     0x140001961
   140001959:	mov    rcx,rdi
   14000195c:	call   0x14001490c
   140001961:	mov    rax,rdi
   140001964:	mov    rbx,QWORD PTR [rsp+0x30]
   140001969:	add    rsp,0x20
   14000196d:	pop    rdi
   14000196e:	ret    
   14000196f:	int3   
   140001970:	mov    QWORD PTR [rsp+0x8],rbx
   140001975:	push   rdi
   140001976:	sub    rsp,0x20
   14000197a:	mov    ebx,edx
   14000197c:	mov    rdi,rcx
   14000197f:	call   0x14001e2f4
   140001984:	test   bl,0x1
   140001987:	je     0x140001991
   140001989:	mov    rcx,rdi
   14000198c:	call   0x14001490c
   140001991:	mov    rax,rdi
   140001994:	mov    rbx,QWORD PTR [rsp+0x30]
   140001999:	add    rsp,0x20
   14000199d:	pop    rdi
   14000199e:	ret    
   14000199f:	int3   
   1400019a0:	sub    rsp,0x148
   1400019a7:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400019b0:	lea    rcx,[rsp+0x50]
   1400019b5:	call   0x14001d278
   1400019ba:	nop
   1400019bb:	mov    DWORD PTR [rsp+0x30],0x0
   1400019c3:	mov    DWORD PTR [rsp+0x34],0x0
   1400019cb:	mov    DWORD PTR [rsp+0x38],0x3e8
   1400019d3:	mov    DWORD PTR [rsp+0x3c],0x3e8
   1400019db:	xor    r8d,r8d
   1400019de:	mov    edx,0x98
   1400019e3:	lea    rcx,[rsp+0x50]
   1400019e8:	call   0x14001e148
   1400019ed:	test   eax,eax
   1400019ef:	je     0x140001a6d
   1400019f1:	mov    eax,DWORD PTR [rsp+0x3c]
   1400019f5:	mov    r8d,DWORD PTR [rsp+0x34]
   1400019fa:	sub    eax,r8d
   1400019fd:	mov    r9d,DWORD PTR [rsp+0x38]
   140001a02:	mov    edx,DWORD PTR [rsp+0x30]
   140001a06:	sub    r9d,edx
   140001a09:	mov    DWORD PTR [rsp+0x28],0x0
   140001a11:	mov    DWORD PTR [rsp+0x20],eax
   140001a15:	lea    rcx,[rsp+0x50]
   140001a1a:	call   0x14002001c
   140001a1f:	lea    rdx,[rsp+0x30]
   140001a24:	mov    rcx,QWORD PTR [rsp+0x90]
   140001a2c:	call   QWORD PTR [rip+0x41f96]        # 0x1400439c8
   140001a32:	mov    r11d,DWORD PTR [rsp+0x38]
   140001a37:	sub    r11d,DWORD PTR [rsp+0x30]
   140001a3c:	cvtsi2sd xmm0,r11d
   140001a41:	divsd  xmm0,QWORD PTR [rip+0x4bc37]        # 0x14004d680
   140001a49:	movsd  QWORD PTR [rip+0x5b12f],xmm0        # 0x14005cb80
   140001a51:	mov    eax,DWORD PTR [rsp+0x3c]
   140001a55:	sub    eax,DWORD PTR [rsp+0x34]
   140001a59:	cvtsi2sd xmm0,eax
   140001a5d:	divsd  xmm0,QWORD PTR [rip+0x4bc13]        # 0x14004d678
   140001a65:	movsd  QWORD PTR [rip+0x5b11b],xmm0        # 0x14005cb88
   140001a6d:	lea    rcx,[rsp+0x50]
   140001a72:	call   0x1400191b0
   140001a77:	nop
   140001a78:	lea    rcx,[rsp+0x50]
   140001a7d:	call   0x14001d2ac
   140001a82:	add    rsp,0x148
   140001a89:	ret    
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	int3   
   140001a8d:	int3   
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	rex push rbp
   140001a92:	sub    rsp,0x20
   140001a96:	mov    rbp,rdx
   140001a99:	lea    rcx,[rbp+0x50]
   140001a9d:	call   0x14001d2ac
   140001aa2:	add    rsp,0x20
   140001aa6:	pop    rbp
   140001aa7:	ret    
   140001aa8:	int3   
   140001aa9:	int3   
   140001aaa:	int3   
   140001aab:	int3   
   140001aac:	int3   
   140001aad:	int3   
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	test   rcx,rcx
   140001ab3:	jne    0x140001ab8
   140001ab5:	xor    eax,eax
   140001ab7:	ret    
   140001ab8:	mov    rax,QWORD PTR [rcx+0x8]
   140001abc:	ret    
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ac5:	mov    QWORD PTR [rsp+0x10],rbp
   140001aca:	mov    QWORD PTR [rsp+0x18],rsi
   140001acf:	mov    QWORD PTR [rsp+0x20],rdi
   140001ad4:	push   r12
   140001ad6:	sub    rsp,0x50
   140001ada:	add    DWORD PTR [rcx+0x38],0x1
   140001ade:	cmp    QWORD PTR [rcx+0x30],0x0
   140001ae3:	mov    edi,r9d
   140001ae6:	mov    esi,r8d
   140001ae9:	mov    rbp,rdx
   140001aec:	mov    rbx,rcx
   140001aef:	lea    r12,[rip+0x601b2]        # 0x140061ca8
   140001af6:	jne    0x140001b33
   140001af8:	xor    r10d,r10d
   140001afb:	xchg   ax,ax
   140001afd:	data16 xchg ax,ax
   140001b00:	xor    ecx,ecx
   140001b02:	movsxd rax,r10d
   140001b05:	xchg   QWORD PTR [r12+rax*8],rcx
   140001b09:	test   rcx,rcx
   140001b0c:	jne    0x140001b21
   140001b0e:	add    r10d,0x1
   140001b12:	cmp    r10d,0x4
   140001b16:	jl     0x140001b00
   140001b18:	call   QWORD PTR [rip+0x415ba]        # 0x1400430d8
   140001b1e:	mov    rcx,rax
   140001b21:	mov    rdx,QWORD PTR [rbx+0x8]
   140001b25:	mov    QWORD PTR [rbx+0x30],rcx
   140001b29:	call   QWORD PTR [rip+0x415b1]        # 0x1400430e0
   140001b2f:	mov    QWORD PTR [rbx+0x40],rax
   140001b33:	mov    eax,DWORD PTR [rsp+0x98]
   140001b3a:	mov    r9d,DWORD PTR [rsp+0x80]
   140001b42:	mov    DWORD PTR [rsp+0x40],0xcc0020
   140001b4a:	mov    DWORD PTR [rsp+0x38],eax
   140001b4e:	mov    eax,DWORD PTR [rsp+0x90]
   140001b55:	mov    r8d,edi
   140001b58:	mov    DWORD PTR [rsp+0x30],eax
   140001b5c:	mov    rax,QWORD PTR [rbx+0x30]
   140001b60:	mov    edx,esi
   140001b62:	mov    QWORD PTR [rsp+0x28],rax
   140001b67:	mov    eax,DWORD PTR [rsp+0x88]
   140001b6e:	mov    rcx,rbp
   140001b71:	mov    DWORD PTR [rsp+0x20],eax
   140001b75:	call   QWORD PTR [rip+0x4156d]        # 0x1400430e8
   140001b7b:	add    DWORD PTR [rbx+0x38],0xffffffff
   140001b7f:	mov    edi,eax
   140001b81:	jne    0x140001bc6
   140001b83:	mov    rdx,QWORD PTR [rbx+0x40]
   140001b87:	mov    rcx,QWORD PTR [rbx+0x30]
   140001b8b:	call   QWORD PTR [rip+0x4154f]        # 0x1400430e0
   140001b91:	mov    rcx,QWORD PTR [rbx+0x30]
   140001b95:	xor    r8d,r8d
   140001b98:	data16 data16 xchg ax,ax
   140001b9c:	data16 data16 xchg ax,ax
   140001ba0:	movsxd rdx,r8d
   140001ba3:	xchg   QWORD PTR [r12+rdx*8],rcx
   140001ba7:	test   rcx,rcx
   140001baa:	je     0x140001bbc
   140001bac:	add    r8d,0x1
   140001bb0:	cmp    r8d,0x4
   140001bb4:	jl     0x140001ba0
   140001bb6:	call   QWORD PTR [rip+0x41534]        # 0x1400430f0
   140001bbc:	mov    QWORD PTR [rbx+0x30],0x0
   140001bc4:	mov    eax,edi
   140001bc6:	mov    rbx,QWORD PTR [rsp+0x60]
   140001bcb:	mov    rbp,QWORD PTR [rsp+0x68]
   140001bd0:	mov    rsi,QWORD PTR [rsp+0x70]
   140001bd5:	mov    rdi,QWORD PTR [rsp+0x78]
   140001bda:	add    rsp,0x50
   140001bde:	pop    r12
   140001be0:	ret    
   140001be1:	int3   
   140001be2:	int3   
   140001be3:	int3   
   140001be4:	int3   
   140001be5:	int3   
   140001be6:	int3   
   140001be7:	int3   
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	rex push rbx
   140001bf2:	sub    rsp,0x20
   140001bf6:	add    DWORD PTR [rcx+0x38],0x1
   140001bfa:	cmp    QWORD PTR [rcx+0x30],0x0
   140001bff:	mov    rbx,rcx
   140001c02:	jne    0x140001c4b
   140001c04:	xor    edx,edx
   140001c06:	lea    r8,[rip+0x6009b]        # 0x140061ca8
   140001c0d:	data16 xchg ax,ax
   140001c10:	xor    ecx,ecx
   140001c12:	movsxd rax,edx
   140001c15:	xchg   QWORD PTR [r8+rax*8],rcx
   140001c19:	test   rcx,rcx
   140001c1c:	jne    0x140001c2f
   140001c1e:	add    edx,0x1
   140001c21:	cmp    edx,0x4
   140001c24:	jl     0x140001c10
   140001c26:	call   QWORD PTR [rip+0x414ac]        # 0x1400430d8
   140001c2c:	mov    rcx,rax
   140001c2f:	mov    rdx,QWORD PTR [rbx+0x8]
   140001c33:	mov    QWORD PTR [rbx+0x30],rcx
   140001c37:	call   QWORD PTR [rip+0x414a3]        # 0x1400430e0
   140001c3d:	mov    QWORD PTR [rbx+0x40],rax
   140001c41:	mov    rax,QWORD PTR [rbx+0x30]
   140001c45:	add    rsp,0x20
   140001c49:	pop    rbx
   140001c4a:	ret    
   140001c4b:	mov    rax,QWORD PTR [rcx+0x30]
   140001c4f:	add    rsp,0x20
   140001c53:	pop    rbx
   140001c54:	ret    
   140001c55:	int3   
   140001c56:	int3   
   140001c57:	int3   
   140001c58:	int3   
   140001c59:	int3   
   140001c5a:	int3   
   140001c5b:	int3   
   140001c5c:	int3   
   140001c5d:	int3   
   140001c5e:	int3   
   140001c5f:	int3   
   140001c60:	rex push rbx
   140001c62:	sub    rsp,0x20
   140001c66:	add    DWORD PTR [rcx+0x38],0xffffffff
   140001c6a:	mov    rbx,rcx
   140001c6d:	jne    0x140001cb2
   140001c6f:	mov    rdx,QWORD PTR [rcx+0x40]
   140001c73:	mov    rcx,QWORD PTR [rcx+0x30]
   140001c77:	call   QWORD PTR [rip+0x41463]        # 0x1400430e0
   140001c7d:	mov    rcx,QWORD PTR [rbx+0x30]
   140001c81:	xor    edx,edx
   140001c83:	lea    r8,[rip+0x6001e]        # 0x140061ca8
   140001c8a:	data16 xchg ax,ax
   140001c8d:	data16 xchg ax,ax
   140001c90:	movsxd rax,edx
   140001c93:	xchg   QWORD PTR [r8+rax*8],rcx
   140001c97:	test   rcx,rcx
   140001c9a:	je     0x140001caa
   140001c9c:	add    edx,0x1
   140001c9f:	cmp    edx,0x4
   140001ca2:	jl     0x140001c90
   140001ca4:	call   QWORD PTR [rip+0x41446]        # 0x1400430f0
   140001caa:	mov    QWORD PTR [rbx+0x30],0x0
   140001cb2:	add    rsp,0x20
   140001cb6:	pop    rbx
   140001cb7:	ret    
   140001cb8:	int3   
   140001cb9:	int3   
   140001cba:	int3   
   140001cbb:	int3   
   140001cbc:	int3   
   140001cbd:	int3   
   140001cbe:	int3   
   140001cbf:	int3   
   140001cc0:	lea    rax,[rip+0x48809]        # 0x14004a4d0
   140001cc7:	ret    
   140001cc8:	int3   
   140001cc9:	int3   
   140001cca:	int3   
   140001ccb:	int3   
   140001ccc:	int3   
   140001ccd:	int3   
   140001cce:	int3   
   140001ccf:	int3   
   140001cd0:	mov    rax,rsp
   140001cd3:	mov    QWORD PTR [rax+0x8],rcx
   140001cd7:	push   rdi
   140001cd8:	push   r12
   140001cda:	push   r13
   140001cdc:	push   r14
   140001cde:	push   r15
   140001ce0:	sub    rsp,0x40
   140001ce4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001ced:	mov    QWORD PTR [rax+0x10],rbx
   140001cf1:	mov    QWORD PTR [rax+0x18],rbp
   140001cf5:	mov    QWORD PTR [rax+0x20],rsi
   140001cf9:	mov    rdi,rcx
   140001cfc:	call   0x14001d278
   140001d01:	xor    r15d,r15d
   140001d04:	mov    QWORD PTR [rdi+0xe8],r15
   140001d0b:	lea    rax,[rip+0x488c6]        # 0x14004a5d8
   140001d12:	mov    QWORD PTR [rdi],rax
   140001d15:	call   0x14002157c
   140001d1a:	mov    rcx,rax
   140001d1d:	mov    edx,r15d
   140001d20:	test   rax,rax
   140001d23:	setne  dl
   140001d26:	test   edx,edx
   140001d28:	jne    0x140001d35
   140001d2a:	mov    ecx,0x80004005
   140001d2f:	call   0x140003dc0
   140001d34:	int3   
   140001d35:	mov    rax,QWORD PTR [rax]
   140001d38:	call   QWORD PTR [rax+0x18]
   140001d3b:	add    rax,0x18
   140001d3f:	mov    QWORD PTR [rdi+0xf8],rax
   140001d46:	lea    rcx,[rdi+0x100]
   140001d4d:	call   0x140016de8
   140001d52:	lea    r14,[rip+0x43f3f]        # 0x140045c98
   140001d59:	mov    QWORD PTR [rdi+0x100],r14
   140001d60:	lea    rcx,[rdi+0x1a8]
   140001d67:	call   0x140016de8
   140001d6c:	mov    QWORD PTR [rdi+0x1a8],r14
   140001d73:	lea    rcx,[rdi+0x250]
   140001d7a:	call   0x140016de8
   140001d7f:	mov    QWORD PTR [rdi+0x250],r14
   140001d86:	lea    rcx,[rdi+0x2f8]
   140001d8d:	call   0x14000e8c0
   140001d92:	mov    DWORD PTR [rsp+0x28],r15d
   140001d97:	mov    DWORD PTR [rsp+0x2c],r15d
   140001d9c:	mov    DWORD PTR [rsp+0x30],r15d
   140001da1:	mov    DWORD PTR [rsp+0x34],r15d
   140001da6:	lea    rcx,[rsp+0x28]
   140001dab:	mov    eax,DWORD PTR [rcx]
   140001dad:	mov    DWORD PTR [rdi+0x448],eax
   140001db3:	mov    eax,DWORD PTR [rcx+0x4]
   140001db6:	mov    DWORD PTR [rdi+0x44c],eax
   140001dbc:	mov    eax,DWORD PTR [rcx+0x8]
   140001dbf:	mov    DWORD PTR [rdi+0x450],eax
   140001dc5:	mov    eax,DWORD PTR [rcx+0xc]
   140001dc8:	mov    DWORD PTR [rdi+0x454],eax
   140001dce:	mov    DWORD PTR [rsp+0x28],r15d
   140001dd3:	mov    DWORD PTR [rsp+0x2c],r15d
   140001dd8:	mov    DWORD PTR [rsp+0x30],r15d
   140001ddd:	mov    DWORD PTR [rsp+0x34],r15d
   140001de2:	lea    rcx,[rsp+0x28]
   140001de7:	mov    eax,DWORD PTR [rcx]
   140001de9:	mov    DWORD PTR [rdi+0x458],eax
   140001def:	mov    eax,DWORD PTR [rcx+0x4]
   140001df2:	mov    DWORD PTR [rdi+0x45c],eax
   140001df8:	mov    eax,DWORD PTR [rcx+0x8]
   140001dfb:	mov    DWORD PTR [rdi+0x460],eax
   140001e01:	mov    eax,DWORD PTR [rcx+0xc]
   140001e04:	mov    DWORD PTR [rdi+0x464],eax
   140001e0a:	mov    DWORD PTR [rsp+0x28],r15d
   140001e0f:	mov    DWORD PTR [rsp+0x2c],r15d
   140001e14:	mov    DWORD PTR [rsp+0x30],r15d
   140001e19:	mov    DWORD PTR [rsp+0x34],r15d
   140001e1e:	lea    rcx,[rsp+0x28]
   140001e23:	mov    eax,DWORD PTR [rcx]
   140001e25:	mov    DWORD PTR [rdi+0x468],eax
   140001e2b:	mov    eax,DWORD PTR [rcx+0x4]
   140001e2e:	mov    DWORD PTR [rdi+0x46c],eax
   140001e34:	mov    eax,DWORD PTR [rcx+0x8]
   140001e37:	mov    DWORD PTR [rdi+0x470],eax
   140001e3d:	mov    eax,DWORD PTR [rcx+0xc]
   140001e40:	mov    DWORD PTR [rdi+0x474],eax
   140001e46:	lea    rax,[rip+0x4924b]        # 0x14004b098
   140001e4d:	mov    QWORD PTR [rdi+0x2f8],rax
   140001e54:	mov    DWORD PTR [rdi+0x478],r15d
   140001e5b:	lea    rcx,[rdi+0x480]
   140001e62:	call   0x140016de8
   140001e67:	lea    r12,[rip+0x4b13a]        # 0x14004cfa8
   140001e6e:	mov    QWORD PTR [rdi+0x480],r12
   140001e75:	mov    QWORD PTR [rdi+0x528],r15
   140001e7c:	mov    DWORD PTR [rdi+0x530],r15d
   140001e83:	lea    rcx,[rdi+0x538]
   140001e8a:	call   0x140016de8
   140001e8f:	lea    r13,[rip+0x43b42]        # 0x1400459d8
   140001e96:	mov    QWORD PTR [rdi+0x538],r13
   140001e9d:	lea    rcx,[rdi+0x5e0]
   140001ea4:	call   0x140016de8
   140001ea9:	mov    QWORD PTR [rdi+0x5e0],r13
   140001eb0:	lea    rcx,[rdi+0x688]
   140001eb7:	call   0x140016de8
   140001ebc:	mov    QWORD PTR [rdi+0x688],r13
   140001ec3:	lea    rcx,[rdi+0x730]
   140001eca:	call   0x140016de8
   140001ecf:	mov    QWORD PTR [rdi+0x730],r13
   140001ed6:	lea    rcx,[rdi+0x7d8]
   140001edd:	call   0x140016de8
   140001ee2:	mov    QWORD PTR [rdi+0x7d8],r13
   140001ee9:	lea    rcx,[rdi+0x880]
   140001ef0:	call   0x140016de8
   140001ef5:	mov    QWORD PTR [rdi+0x880],r13
   140001efc:	lea    rcx,[rdi+0x928]
   140001f03:	call   0x140016de8
   140001f08:	mov    QWORD PTR [rdi+0x928],r13
   140001f0f:	lea    rcx,[rdi+0x9d0]
   140001f16:	call   0x140016de8
   140001f1b:	mov    QWORD PTR [rdi+0x9d0],r13
   140001f22:	lea    rcx,[rdi+0xa78]
   140001f29:	call   0x140016de8
   140001f2e:	mov    QWORD PTR [rdi+0xa78],r13
   140001f35:	lea    rcx,[rdi+0xb20]
   140001f3c:	call   0x140016de8
   140001f41:	mov    QWORD PTR [rdi+0xb20],r12
   140001f48:	mov    QWORD PTR [rdi+0xbc8],r15
   140001f4f:	mov    DWORD PTR [rdi+0xbd0],r15d
   140001f56:	lea    rbp,[rip+0x48dd3]        # 0x14004ad30
   140001f5d:	mov    QWORD PTR [rdi+0xbd8],rbp
   140001f64:	mov    QWORD PTR [rdi+0xbe0],r15
   140001f6b:	mov    QWORD PTR [rdi+0xbe8],r15
   140001f72:	mov    DWORD PTR [rdi+0xbf0],r15d
   140001f79:	mov    DWORD PTR [rdi+0xbf4],r15d
   140001f80:	mov    DWORD PTR [rdi+0xbf8],r15d
   140001f87:	mov    DWORD PTR [rdi+0xbfc],r15d
   140001f8e:	mov    BYTE PTR [rdi+0xc00],0x0
   140001f95:	mov    BYTE PTR [rdi+0xc01],0x0
   140001f9c:	mov    DWORD PTR [rdi+0xc04],0xffffffff
   140001fa6:	mov    QWORD PTR [rdi+0xc08],r15
   140001fad:	mov    DWORD PTR [rdi+0xc10],r15d
   140001fb4:	mov    QWORD PTR [rdi+0xc18],r15
   140001fbb:	lea    rcx,[rip+0x5fd0e]        # 0x140061cd0
   140001fc2:	call   QWORD PTR [rip+0x41578]        # 0x140043540
   140001fc8:	add    DWORD PTR [rip+0x5fd29],0x1        # 0x140061cf8
   140001fcf:	lea    rcx,[rip+0x5fcfa]        # 0x140061cd0
   140001fd6:	call   QWORD PTR [rip+0x4155c]        # 0x140043538
   140001fdc:	lea    rsi,[rip+0x48c65]        # 0x14004ac48
   140001fe3:	mov    QWORD PTR [rdi+0xbd8],rsi
   140001fea:	mov    QWORD PTR [rdi+0xc20],r15
   140001ff1:	lea    rcx,[rdi+0xc28]
   140001ff8:	call   0x140016de8
   140001ffd:	mov    QWORD PTR [rdi+0xc28],r12
   140002004:	mov    QWORD PTR [rdi+0xcd0],r15
   14000200b:	mov    DWORD PTR [rdi+0xcd8],r15d
   140002012:	lea    rcx,[rdi+0xce0]
   140002019:	call   0x140016de8
   14000201e:	mov    QWORD PTR [rdi+0xce0],r12
   140002025:	mov    QWORD PTR [rdi+0xd88],r15
   14000202c:	mov    DWORD PTR [rdi+0xd90],r15d
   140002033:	lea    rcx,[rdi+0xd98]
   14000203a:	call   0x140016de8
   14000203f:	mov    QWORD PTR [rdi+0xd98],r12
   140002046:	mov    QWORD PTR [rdi+0xe40],r15
   14000204d:	mov    DWORD PTR [rdi+0xe48],r15d
   140002054:	mov    QWORD PTR [rdi+0xe50],rbp
   14000205b:	mov    QWORD PTR [rdi+0xe58],r15
   140002062:	mov    QWORD PTR [rdi+0xe60],r15
   140002069:	mov    DWORD PTR [rdi+0xe68],r15d
   140002070:	mov    DWORD PTR [rdi+0xe6c],r15d
   140002077:	mov    DWORD PTR [rdi+0xe70],r15d
   14000207e:	mov    DWORD PTR [rdi+0xe74],r15d
   140002085:	mov    BYTE PTR [rdi+0xe78],0x0
   14000208c:	mov    BYTE PTR [rdi+0xe79],0x0
   140002093:	mov    DWORD PTR [rdi+0xe7c],0xffffffff
   14000209d:	mov    QWORD PTR [rdi+0xe80],r15
   1400020a4:	mov    DWORD PTR [rdi+0xe88],r15d
   1400020ab:	mov    QWORD PTR [rdi+0xe90],r15
   1400020b2:	lea    rcx,[rip+0x5fc17]        # 0x140061cd0
   1400020b9:	call   QWORD PTR [rip+0x41481]        # 0x140043540
   1400020bf:	add    DWORD PTR [rip+0x5fc32],0x1        # 0x140061cf8
   1400020c6:	lea    rcx,[rip+0x5fc03]        # 0x140061cd0
   1400020cd:	call   QWORD PTR [rip+0x41465]        # 0x140043538
   1400020d3:	mov    QWORD PTR [rdi+0xe50],rsi
   1400020da:	mov    QWORD PTR [rdi+0xe98],r15
   1400020e1:	mov    QWORD PTR [rdi+0xea0],rbp
   1400020e8:	mov    QWORD PTR [rdi+0xea8],r15
   1400020ef:	mov    QWORD PTR [rdi+0xeb0],r15
   1400020f6:	mov    DWORD PTR [rdi+0xeb8],r15d
   1400020fd:	mov    DWORD PTR [rdi+0xebc],r15d
   140002104:	mov    DWORD PTR [rdi+0xec0],r15d
   14000210b:	mov    DWORD PTR [rdi+0xec4],r15d
   140002112:	mov    BYTE PTR [rdi+0xec8],0x0
   140002119:	mov    BYTE PTR [rdi+0xec9],0x0
   140002120:	mov    DWORD PTR [rdi+0xecc],0xffffffff
   14000212a:	mov    QWORD PTR [rdi+0xed0],r15
   140002131:	mov    DWORD PTR [rdi+0xed8],r15d
   140002138:	mov    QWORD PTR [rdi+0xee0],r15
   14000213f:	lea    rcx,[rip+0x5fb8a]        # 0x140061cd0
   140002146:	call   QWORD PTR [rip+0x413f4]        # 0x140043540
   14000214c:	add    DWORD PTR [rip+0x5fba5],0x1        # 0x140061cf8
   140002153:	lea    rcx,[rip+0x5fb76]        # 0x140061cd0
   14000215a:	call   QWORD PTR [rip+0x413d8]        # 0x140043538
   140002160:	mov    QWORD PTR [rdi+0xea0],rsi
   140002167:	mov    QWORD PTR [rdi+0xee8],r15
   14000216e:	mov    QWORD PTR [rdi+0xef0],rbp
   140002175:	mov    QWORD PTR [rdi+0xef8],r15
   14000217c:	mov    QWORD PTR [rdi+0xf00],r15
   140002183:	mov    DWORD PTR [rdi+0xf08],r15d
   14000218a:	mov    DWORD PTR [rdi+0xf0c],r15d
   140002191:	mov    DWORD PTR [rdi+0xf10],r15d
   140002198:	mov    DWORD PTR [rdi+0xf14],r15d
   14000219f:	mov    BYTE PTR [rdi+0xf18],0x0
   1400021a6:	mov    BYTE PTR [rdi+0xf19],0x0
   1400021ad:	mov    DWORD PTR [rdi+0xf1c],0xffffffff
   1400021b7:	mov    QWORD PTR [rdi+0xf20],r15
   1400021be:	mov    DWORD PTR [rdi+0xf28],r15d
   1400021c5:	mov    QWORD PTR [rdi+0xf30],r15
   1400021cc:	lea    rcx,[rip+0x5fafd]        # 0x140061cd0
   1400021d3:	call   QWORD PTR [rip+0x41367]        # 0x140043540
   1400021d9:	add    DWORD PTR [rip+0x5fb18],0x1        # 0x140061cf8
   1400021e0:	lea    rcx,[rip+0x5fae9]        # 0x140061cd0
   1400021e7:	call   QWORD PTR [rip+0x4134b]        # 0x140043538
   1400021ed:	mov    QWORD PTR [rdi+0xef0],rsi
   1400021f4:	mov    QWORD PTR [rdi+0xf38],r15
   1400021fb:	lea    rcx,[rdi+0xf40]
   140002202:	call   0x140016de8
   140002207:	mov    QWORD PTR [rdi+0xf40],r14
   14000220e:	lea    rcx,[rdi+0xfe8]
   140002215:	call   0x140016de8
   14000221a:	mov    QWORD PTR [rdi+0xfe8],r14
   140002221:	lea    rcx,[rdi+0x1090]
   140002228:	call   0x140016de8
   14000222d:	mov    QWORD PTR [rdi+0x1090],r14
   140002234:	lea    rcx,[rdi+0x1138]
   14000223b:	call   0x140016de8
   140002240:	mov    QWORD PTR [rdi+0x1138],r13
   140002247:	lea    rcx,[rdi+0x11e0]
   14000224e:	call   0x140016de8
   140002253:	mov    QWORD PTR [rdi+0x11e0],r13
   14000225a:	lea    rcx,[rdi+0x1288]
   140002261:	call   0x140016de8
   140002266:	mov    QWORD PTR [rdi+0x1288],r13
   14000226d:	lea    rcx,[rdi+0x1330]
   140002274:	call   0x140016de8
   140002279:	mov    QWORD PTR [rdi+0x1330],r13
   140002280:	mov    QWORD PTR [rdi+0xf0],r15
   140002287:	mov    rax,rdi
   14000228a:	lea    r11,[rsp+0x40]
   14000228f:	mov    rbx,QWORD PTR [r11+0x38]
   140002293:	mov    rbp,QWORD PTR [r11+0x40]
   140002297:	mov    rsi,QWORD PTR [r11+0x48]
   14000229b:	mov    rsp,r11
   14000229e:	pop    r15
   1400022a0:	pop    r14
   1400022a2:	pop    r13
   1400022a4:	pop    r12
   1400022a6:	pop    rdi
   1400022a7:	ret    
   1400022a8:	int3   
   1400022a9:	int3   
   1400022aa:	int3   
   1400022ab:	int3   
   1400022ac:	int3   
   1400022ad:	int3   
   1400022ae:	int3   
   1400022af:	int3   
   1400022b0:	rex push rbp
   1400022b2:	sub    rsp,0x20
   1400022b6:	mov    rbp,rdx
   1400022b9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400022bd:	call   0x14000dd20
   1400022c2:	add    rsp,0x20
   1400022c6:	pop    rbp
   1400022c7:	ret    
   1400022c8:	int3   
   1400022c9:	int3   
   1400022ca:	int3   
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	rex push rbp
   1400022d2:	sub    rsp,0x20
   1400022d6:	mov    rbp,rdx
   1400022d9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400022dd:	add    rcx,0xf8
   1400022e4:	call   0x140003de0
   1400022e9:	add    rsp,0x20
   1400022ed:	pop    rbp
   1400022ee:	ret    
   1400022ef:	int3   
   1400022f0:	rex push rbp
   1400022f2:	sub    rsp,0x20
   1400022f6:	mov    rbp,rdx
   1400022f9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400022fd:	add    rcx,0x100
   140002304:	call   0x14001e2f4
   140002309:	add    rsp,0x20
   14000230d:	pop    rbp
   14000230e:	ret    
   14000230f:	int3   
   140002310:	rex push rbp
   140002312:	sub    rsp,0x20
   140002316:	mov    rbp,rdx
   140002319:	mov    rcx,QWORD PTR [rbp+0x70]
   14000231d:	add    rcx,0x1a8
   140002324:	call   0x14001e2f4
   140002329:	add    rsp,0x20
   14000232d:	pop    rbp
   14000232e:	ret    
   14000232f:	int3   
   140002330:	rex push rbp
   140002332:	sub    rsp,0x20
   140002336:	mov    rbp,rdx
   140002339:	mov    rcx,QWORD PTR [rbp+0x70]
   14000233d:	add    rcx,0x250
   140002344:	call   0x14001e2f4
   140002349:	add    rsp,0x20
   14000234d:	pop    rbp
   14000234e:	ret    
   14000234f:	int3   
   140002350:	rex push rbp
   140002352:	sub    rsp,0x20
   140002356:	mov    rbp,rdx
   140002359:	mov    rcx,QWORD PTR [rbp+0x70]
   14000235d:	add    rcx,0x2f8
   140002364:	call   0x1400071e0
   140002369:	add    rsp,0x20
   14000236d:	pop    rbp
   14000236e:	ret    
   14000236f:	int3   
   140002370:	rex push rbp
   140002372:	sub    rsp,0x20
   140002376:	mov    rbp,rdx
   140002379:	mov    rcx,QWORD PTR [rbp+0x70]
   14000237d:	add    rcx,0x480
   140002384:	call   0x140012760
   140002389:	add    rsp,0x20
   14000238d:	pop    rbp
   14000238e:	ret    
   14000238f:	int3   
   140002390:	rex push rbp
   140002392:	sub    rsp,0x20
   140002396:	mov    rbp,rdx
   140002399:	mov    rcx,QWORD PTR [rbp+0x70]
   14000239d:	add    rcx,0x538
   1400023a4:	call   0x14001e22c
   1400023a9:	add    rsp,0x20
   1400023ad:	pop    rbp
   1400023ae:	ret    
   1400023af:	int3   
   1400023b0:	rex push rbp
   1400023b2:	sub    rsp,0x20
   1400023b6:	mov    rbp,rdx
   1400023b9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400023bd:	add    rcx,0x5e0
   1400023c4:	call   0x14001e22c
   1400023c9:	add    rsp,0x20
   1400023cd:	pop    rbp
   1400023ce:	ret    
   1400023cf:	int3   
   1400023d0:	rex push rbp
   1400023d2:	sub    rsp,0x20
   1400023d6:	mov    rbp,rdx
   1400023d9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400023dd:	add    rcx,0x688
   1400023e4:	call   0x14001e22c
   1400023e9:	add    rsp,0x20
   1400023ed:	pop    rbp
   1400023ee:	ret    
   1400023ef:	int3   
   1400023f0:	rex push rbp
   1400023f2:	sub    rsp,0x20
   1400023f6:	mov    rbp,rdx
   1400023f9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400023fd:	add    rcx,0x730
   140002404:	call   0x14001e22c
   140002409:	add    rsp,0x20
   14000240d:	pop    rbp
   14000240e:	ret    
   14000240f:	int3   
   140002410:	rex push rbp
   140002412:	sub    rsp,0x20
   140002416:	mov    rbp,rdx
   140002419:	mov    rcx,QWORD PTR [rbp+0x70]
   14000241d:	add    rcx,0x7d8
   140002424:	call   0x14001e22c
   140002429:	add    rsp,0x20
   14000242d:	pop    rbp
   14000242e:	ret    
   14000242f:	int3   
   140002430:	rex push rbp
   140002432:	sub    rsp,0x20
   140002436:	mov    rbp,rdx
   140002439:	mov    rcx,QWORD PTR [rbp+0x70]
   14000243d:	add    rcx,0x880
   140002444:	call   0x14001e22c
   140002449:	add    rsp,0x20
   14000244d:	pop    rbp
   14000244e:	ret    
   14000244f:	int3   
   140002450:	rex push rbp
   140002452:	sub    rsp,0x20
   140002456:	mov    rbp,rdx
   140002459:	mov    rcx,QWORD PTR [rbp+0x70]
   14000245d:	add    rcx,0x928
   140002464:	call   0x14001e22c
   140002469:	add    rsp,0x20
   14000246d:	pop    rbp
   14000246e:	ret    
   14000246f:	int3   
   140002470:	rex push rbp
   140002472:	sub    rsp,0x20
   140002476:	mov    rbp,rdx
   140002479:	mov    rcx,QWORD PTR [rbp+0x70]
   14000247d:	add    rcx,0x9d0
   140002484:	call   0x14001e22c
   140002489:	add    rsp,0x20
   14000248d:	pop    rbp
   14000248e:	ret    
   14000248f:	int3   
   140002490:	rex push rbp
   140002492:	sub    rsp,0x20
   140002496:	mov    rbp,rdx
   140002499:	mov    rcx,QWORD PTR [rbp+0x70]
   14000249d:	add    rcx,0xa78
   1400024a4:	call   0x14001e22c
   1400024a9:	add    rsp,0x20
   1400024ad:	pop    rbp
   1400024ae:	ret    
   1400024af:	int3   
   1400024b0:	rex push rbp
   1400024b2:	sub    rsp,0x20
   1400024b6:	mov    rbp,rdx
   1400024b9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400024bd:	add    rcx,0xb20
   1400024c4:	call   0x140012760
   1400024c9:	add    rsp,0x20
   1400024cd:	pop    rbp
   1400024ce:	ret    
   1400024cf:	int3   
   1400024d0:	rex push rbp
   1400024d2:	sub    rsp,0x20
   1400024d6:	mov    rbp,rdx
   1400024d9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400024dd:	add    rcx,0xbd8
   1400024e4:	call   0x140004d90
   1400024e9:	add    rsp,0x20
   1400024ed:	pop    rbp
   1400024ee:	ret    
   1400024ef:	int3   
   1400024f0:	rex push rbp
   1400024f2:	sub    rsp,0x20
   1400024f6:	mov    rbp,rdx
   1400024f9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400024fd:	add    rcx,0xc28
   140002504:	call   0x140012760
   140002509:	add    rsp,0x20
   14000250d:	pop    rbp
   14000250e:	ret    
   14000250f:	int3   
   140002510:	rex push rbp
   140002512:	sub    rsp,0x20
   140002516:	mov    rbp,rdx
   140002519:	mov    rcx,QWORD PTR [rbp+0x70]
   14000251d:	add    rcx,0xce0
   140002524:	call   0x140012760
   140002529:	add    rsp,0x20
   14000252d:	pop    rbp
   14000252e:	ret    
   14000252f:	int3   
   140002530:	rex push rbp
   140002532:	sub    rsp,0x20
   140002536:	mov    rbp,rdx
   140002539:	mov    rcx,QWORD PTR [rbp+0x70]
   14000253d:	add    rcx,0xd98
   140002544:	call   0x140012760
   140002549:	add    rsp,0x20
   14000254d:	pop    rbp
   14000254e:	ret    
   14000254f:	int3   
   140002550:	rex push rbp
   140002552:	sub    rsp,0x20
   140002556:	mov    rbp,rdx
   140002559:	mov    rcx,QWORD PTR [rbp+0x70]
   14000255d:	add    rcx,0xe50
   140002564:	call   0x140004d90
   140002569:	add    rsp,0x20
   14000256d:	pop    rbp
   14000256e:	ret    
   14000256f:	int3   
   140002570:	rex push rbp
   140002572:	sub    rsp,0x20
   140002576:	mov    rbp,rdx
   140002579:	mov    rcx,QWORD PTR [rbp+0x70]
   14000257d:	add    rcx,0xea0
   140002584:	call   0x140004d90
   140002589:	add    rsp,0x20
   14000258d:	pop    rbp
   14000258e:	ret    
   14000258f:	int3   
   140002590:	rex push rbp
   140002592:	sub    rsp,0x20
   140002596:	mov    rbp,rdx
   140002599:	mov    rcx,QWORD PTR [rbp+0x70]
   14000259d:	add    rcx,0xef0
   1400025a4:	call   0x140004d90
   1400025a9:	add    rsp,0x20
   1400025ad:	pop    rbp
   1400025ae:	ret    
   1400025af:	int3   
   1400025b0:	rex push rbp
   1400025b2:	sub    rsp,0x20
   1400025b6:	mov    rbp,rdx
   1400025b9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400025bd:	add    rcx,0xf40
   1400025c4:	call   0x14001e2f4
   1400025c9:	add    rsp,0x20
   1400025cd:	pop    rbp
   1400025ce:	ret    
   1400025cf:	int3   
   1400025d0:	rex push rbp
   1400025d2:	sub    rsp,0x20
   1400025d6:	mov    rbp,rdx
   1400025d9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400025dd:	add    rcx,0xfe8
   1400025e4:	call   0x14001e2f4
   1400025e9:	add    rsp,0x20
   1400025ed:	pop    rbp
   1400025ee:	ret    
   1400025ef:	int3   
   1400025f0:	rex push rbp
   1400025f2:	sub    rsp,0x20
   1400025f6:	mov    rbp,rdx
   1400025f9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400025fd:	add    rcx,0x1090
   140002604:	call   0x14001e2f4
   140002609:	add    rsp,0x20
   14000260d:	pop    rbp
   14000260e:	ret    
   14000260f:	int3   
   140002610:	rex push rbp
   140002612:	sub    rsp,0x20
   140002616:	mov    rbp,rdx
   140002619:	mov    rcx,QWORD PTR [rbp+0x70]
   14000261d:	add    rcx,0x1138
   140002624:	call   0x14001e22c
   140002629:	add    rsp,0x20
   14000262d:	pop    rbp
   14000262e:	ret    
   14000262f:	int3   
   140002630:	rex push rbp
   140002632:	sub    rsp,0x20
   140002636:	mov    rbp,rdx
   140002639:	mov    rcx,QWORD PTR [rbp+0x70]
   14000263d:	add    rcx,0x11e0
   140002644:	call   0x14001e22c
   140002649:	add    rsp,0x20
   14000264d:	pop    rbp
   14000264e:	ret    
   14000264f:	int3   
   140002650:	rex push rbp
   140002652:	sub    rsp,0x20
   140002656:	mov    rbp,rdx
   140002659:	mov    rcx,QWORD PTR [rbp+0x70]
   14000265d:	add    rcx,0x1288
   140002664:	call   0x14001e22c
   140002669:	add    rsp,0x20
   14000266d:	pop    rbp
   14000266e:	ret    
   14000266f:	int3   
   140002670:	mov    QWORD PTR [rsp+0x8],rbx
   140002675:	push   rdi
   140002676:	sub    rsp,0x20
   14000267a:	mov    ebx,edx
   14000267c:	mov    rdi,rcx
   14000267f:	call   0x1400026a0
   140002684:	test   bl,0x1
   140002687:	je     0x140002691
   140002689:	mov    rcx,rdi
   14000268c:	call   0x14001490c
   140002691:	mov    rax,rdi
   140002694:	mov    rbx,QWORD PTR [rsp+0x30]
   140002699:	add    rsp,0x20
   14000269d:	pop    rdi
   14000269e:	ret    
   14000269f:	int3   
   1400026a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400026a5:	push   rsi
   1400026a6:	push   rdi
   1400026a7:	push   r12
   1400026a9:	sub    rsp,0x30
   1400026ad:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400026b6:	mov    QWORD PTR [rsp+0x58],rbx
   1400026bb:	mov    QWORD PTR [rsp+0x60],rbp
   1400026c0:	mov    rbx,rcx
   1400026c3:	lea    rax,[rip+0x47f0e]        # 0x14004a5d8
   1400026ca:	mov    QWORD PTR [rcx],rax
   1400026cd:	add    rcx,0x1330
   1400026d4:	call   0x14001e22c
   1400026d9:	nop
   1400026da:	lea    rcx,[rbx+0x1288]
   1400026e1:	call   0x14001e22c
   1400026e6:	nop
   1400026e7:	lea    rcx,[rbx+0x11e0]
   1400026ee:	call   0x14001e22c
   1400026f3:	nop
   1400026f4:	lea    rcx,[rbx+0x1138]
   1400026fb:	call   0x14001e22c
   140002700:	nop
   140002701:	lea    rcx,[rbx+0x1090]
   140002708:	call   0x14001e2f4
   14000270d:	nop
   14000270e:	lea    rcx,[rbx+0xfe8]
   140002715:	call   0x14001e2f4
   14000271a:	nop
   14000271b:	lea    rcx,[rbx+0xf40]
   140002722:	call   0x14001e2f4
   140002727:	nop
   140002728:	lea    rbp,[rip+0x48601]        # 0x14004ad30
   14000272f:	mov    QWORD PTR [rbx+0xef0],rbp
   140002736:	mov    rcx,QWORD PTR [rbx+0xef8]
   14000273d:	xor    esi,esi
   14000273f:	or     edi,0xffffffff
   140002742:	test   rcx,rcx
   140002745:	je     0x140002787
   140002747:	mov    QWORD PTR [rbx+0xef8],rsi
   14000274e:	mov    QWORD PTR [rbx+0xf00],rsi
   140002755:	mov    DWORD PTR [rbx+0xf08],esi
   14000275b:	mov    DWORD PTR [rbx+0xf0c],esi
   140002761:	mov    DWORD PTR [rbx+0xf14],esi
   140002767:	mov    DWORD PTR [rbx+0xf10],esi
   14000276d:	mov    DWORD PTR [rbx+0xf1c],edi
   140002773:	mov    BYTE PTR [rbx+0xf19],sil
   14000277a:	mov    BYTE PTR [rbx+0xf18],sil
   140002781:	call   QWORD PTR [rip+0x409e9]        # 0x140043170
   140002787:	lea    rcx,[rip+0x5f542]        # 0x140061cd0
   14000278e:	call   QWORD PTR [rip+0x40dac]        # 0x140043540
   140002794:	sub    DWORD PTR [rip+0x5f55d],0x1        # 0x140061cf8
   14000279b:	jne    0x1400027cf
   14000279d:	lea    rcx,[rip+0x5f52c]        # 0x140061cd0
   1400027a4:	call   QWORD PTR [rip+0x40d96]        # 0x140043540
   1400027aa:	mov    rcx,QWORD PTR [rip+0x5f517]        # 0x140061cc8
   1400027b1:	test   rcx,rcx
   1400027b4:	je     0x1400027bb
   1400027b6:	call   0x140040d10
   1400027bb:	mov    QWORD PTR [rip+0x5f506],rsi        # 0x140061cc8
   1400027c2:	lea    rcx,[rip+0x5f507]        # 0x140061cd0
   1400027c9:	call   QWORD PTR [rip+0x40d69]        # 0x140043538
   1400027cf:	lea    rcx,[rip+0x5f4fa]        # 0x140061cd0
   1400027d6:	call   QWORD PTR [rip+0x40d5c]        # 0x140043538
   1400027dc:	nop
   1400027dd:	mov    QWORD PTR [rbx+0xea0],rbp
   1400027e4:	mov    rcx,QWORD PTR [rbx+0xea8]
   1400027eb:	test   rcx,rcx
   1400027ee:	je     0x140002830
   1400027f0:	mov    QWORD PTR [rbx+0xea8],rsi
   1400027f7:	mov    QWORD PTR [rbx+0xeb0],rsi
   1400027fe:	mov    DWORD PTR [rbx+0xeb8],esi
   140002804:	mov    DWORD PTR [rbx+0xebc],esi
   14000280a:	mov    DWORD PTR [rbx+0xec4],esi
   140002810:	mov    DWORD PTR [rbx+0xec0],esi
   140002816:	mov    DWORD PTR [rbx+0xecc],edi
   14000281c:	mov    BYTE PTR [rbx+0xec9],0x0
   140002823:	mov    BYTE PTR [rbx+0xec8],0x0
   14000282a:	call   QWORD PTR [rip+0x40940]        # 0x140043170
   140002830:	lea    rcx,[rip+0x5f499]        # 0x140061cd0
   140002837:	call   QWORD PTR [rip+0x40d03]        # 0x140043540
   14000283d:	sub    DWORD PTR [rip+0x5f4b4],0x1        # 0x140061cf8
   140002844:	jne    0x140002878
   140002846:	lea    rcx,[rip+0x5f483]        # 0x140061cd0
   14000284d:	call   QWORD PTR [rip+0x40ced]        # 0x140043540
   140002853:	mov    rcx,QWORD PTR [rip+0x5f46e]        # 0x140061cc8
   14000285a:	test   rcx,rcx
   14000285d:	je     0x140002864
   14000285f:	call   0x140040d10
   140002864:	mov    QWORD PTR [rip+0x5f45d],rsi        # 0x140061cc8
   14000286b:	lea    rcx,[rip+0x5f45e]        # 0x140061cd0
   140002872:	call   QWORD PTR [rip+0x40cc0]        # 0x140043538
   140002878:	lea    rcx,[rip+0x5f451]        # 0x140061cd0
   14000287f:	call   QWORD PTR [rip+0x40cb3]        # 0x140043538
   140002885:	nop
   140002886:	mov    QWORD PTR [rbx+0xe50],rbp
   14000288d:	mov    rcx,QWORD PTR [rbx+0xe58]
   140002894:	test   rcx,rcx
   140002897:	je     0x1400028d9
   140002899:	mov    QWORD PTR [rbx+0xe58],rsi
   1400028a0:	mov    QWORD PTR [rbx+0xe60],rsi
   1400028a7:	mov    DWORD PTR [rbx+0xe68],esi
   1400028ad:	mov    DWORD PTR [rbx+0xe6c],esi
   1400028b3:	mov    DWORD PTR [rbx+0xe74],esi
   1400028b9:	mov    DWORD PTR [rbx+0xe70],esi
   1400028bf:	mov    DWORD PTR [rbx+0xe7c],edi
   1400028c5:	mov    BYTE PTR [rbx+0xe79],0x0
   1400028cc:	mov    BYTE PTR [rbx+0xe78],0x0
   1400028d3:	call   QWORD PTR [rip+0x40897]        # 0x140043170
   1400028d9:	lea    rcx,[rip+0x5f3f0]        # 0x140061cd0
   1400028e0:	call   QWORD PTR [rip+0x40c5a]        # 0x140043540
   1400028e6:	sub    DWORD PTR [rip+0x5f40b],0x1        # 0x140061cf8
   1400028ed:	jne    0x140002921
   1400028ef:	lea    rcx,[rip+0x5f3da]        # 0x140061cd0
   1400028f6:	call   QWORD PTR [rip+0x40c44]        # 0x140043540
   1400028fc:	mov    rcx,QWORD PTR [rip+0x5f3c5]        # 0x140061cc8
   140002903:	test   rcx,rcx
   140002906:	je     0x14000290d
   140002908:	call   0x140040d10
   14000290d:	mov    QWORD PTR [rip+0x5f3b4],rsi        # 0x140061cc8
   140002914:	lea    rcx,[rip+0x5f3b5]        # 0x140061cd0
   14000291b:	call   QWORD PTR [rip+0x40c17]        # 0x140043538
   140002921:	lea    rcx,[rip+0x5f3a8]        # 0x140061cd0
   140002928:	call   QWORD PTR [rip+0x40c0a]        # 0x140043538
   14000292e:	nop
   14000292f:	lea    rcx,[rbx+0xd98]
   140002936:	lea    r12,[rip+0x4a66b]        # 0x14004cfa8
   14000293d:	mov    QWORD PTR [rcx],r12
   140002940:	call   0x14001e22c
   140002945:	nop
   140002946:	lea    rcx,[rbx+0xce0]
   14000294d:	mov    QWORD PTR [rcx],r12
   140002950:	call   0x14001e22c
   140002955:	nop
   140002956:	lea    rcx,[rbx+0xc28]
   14000295d:	mov    QWORD PTR [rcx],r12
   140002960:	call   0x14001e22c
   140002965:	nop
   140002966:	mov    QWORD PTR [rbx+0xbd8],rbp
   14000296d:	mov    rcx,QWORD PTR [rbx+0xbe0]
   140002974:	test   rcx,rcx
   140002977:	je     0x1400029b9
   140002979:	mov    QWORD PTR [rbx+0xbe0],rsi
   140002980:	mov    QWORD PTR [rbx+0xbe8],rsi
   140002987:	mov    DWORD PTR [rbx+0xbf0],esi
   14000298d:	mov    DWORD PTR [rbx+0xbf4],esi
   140002993:	mov    DWORD PTR [rbx+0xbfc],esi
   140002999:	mov    DWORD PTR [rbx+0xbf8],esi
   14000299f:	mov    DWORD PTR [rbx+0xc04],edi
   1400029a5:	mov    BYTE PTR [rbx+0xc01],0x0
   1400029ac:	mov    BYTE PTR [rbx+0xc00],0x0
   1400029b3:	call   QWORD PTR [rip+0x407b7]        # 0x140043170
   1400029b9:	lea    rcx,[rip+0x5f310]        # 0x140061cd0
   1400029c0:	call   QWORD PTR [rip+0x40b7a]        # 0x140043540
   1400029c6:	sub    DWORD PTR [rip+0x5f32b],0x1        # 0x140061cf8
   1400029cd:	jne    0x140002a01
   1400029cf:	lea    rcx,[rip+0x5f2fa]        # 0x140061cd0
   1400029d6:	call   QWORD PTR [rip+0x40b64]        # 0x140043540
   1400029dc:	mov    rcx,QWORD PTR [rip+0x5f2e5]        # 0x140061cc8
   1400029e3:	test   rcx,rcx
   1400029e6:	je     0x1400029ed
   1400029e8:	call   0x140040d10
   1400029ed:	mov    QWORD PTR [rip+0x5f2d4],rsi        # 0x140061cc8
   1400029f4:	lea    rcx,[rip+0x5f2d5]        # 0x140061cd0
   1400029fb:	call   QWORD PTR [rip+0x40b37]        # 0x140043538
   140002a01:	lea    rcx,[rip+0x5f2c8]        # 0x140061cd0
   140002a08:	call   QWORD PTR [rip+0x40b2a]        # 0x140043538
   140002a0e:	nop
   140002a0f:	lea    rcx,[rbx+0xb20]
   140002a16:	mov    QWORD PTR [rcx],r12
   140002a19:	call   0x14001e22c
   140002a1e:	nop
   140002a1f:	lea    rcx,[rbx+0xa78]
   140002a26:	call   0x14001e22c
   140002a2b:	nop
   140002a2c:	lea    rcx,[rbx+0x9d0]
   140002a33:	call   0x14001e22c
   140002a38:	nop
   140002a39:	lea    rcx,[rbx+0x928]
   140002a40:	call   0x14001e22c
   140002a45:	nop
   140002a46:	lea    rcx,[rbx+0x880]
   140002a4d:	call   0x14001e22c
   140002a52:	nop
   140002a53:	lea    rcx,[rbx+0x7d8]
   140002a5a:	call   0x14001e22c
   140002a5f:	nop
   140002a60:	lea    rcx,[rbx+0x730]
   140002a67:	call   0x14001e22c
   140002a6c:	nop
   140002a6d:	lea    rcx,[rbx+0x688]
   140002a74:	call   0x14001e22c
   140002a79:	nop
   140002a7a:	lea    rcx,[rbx+0x5e0]
   140002a81:	call   0x14001e22c
   140002a86:	nop
   140002a87:	lea    rcx,[rbx+0x538]
   140002a8e:	call   0x14001e22c
   140002a93:	nop
   140002a94:	lea    rcx,[rbx+0x480]
   140002a9b:	mov    QWORD PTR [rcx],r12
   140002a9e:	call   0x14001e22c
   140002aa3:	nop
   140002aa4:	lea    rcx,[rbx+0x2f8]
   140002aab:	lea    rax,[rip+0x497a6]        # 0x14004c258
   140002ab2:	mov    QWORD PTR [rcx],rax
   140002ab5:	call   0x14000ea60
   140002aba:	nop
   140002abb:	lea    rcx,[rbx+0x250]
   140002ac2:	call   0x14001e2f4
   140002ac7:	nop
   140002ac8:	lea    rcx,[rbx+0x1a8]
   140002acf:	call   0x14001e2f4
   140002ad4:	nop
   140002ad5:	lea    rcx,[rbx+0x100]
   140002adc:	call   0x14001e2f4
   140002ae1:	nop
   140002ae2:	mov    rdx,QWORD PTR [rbx+0xf8]
   140002ae9:	sub    rdx,0x18
   140002aed:	lock xadd DWORD PTR [rdx+0x10],edi
   140002af2:	add    edi,0xffffffff
   140002af5:	test   edi,edi
   140002af7:	jg     0x140002b03
   140002af9:	mov    rcx,QWORD PTR [rdx]
   140002afc:	mov    rax,QWORD PTR [rcx]
   140002aff:	call   QWORD PTR [rax+0x8]
   140002b02:	nop
   140002b03:	lea    rax,[rip+0x4918e]        # 0x14004bc98
   140002b0a:	mov    QWORD PTR [rbx],rax
   140002b0d:	mov    rcx,rbx
   140002b10:	mov    rbx,QWORD PTR [rsp+0x58]
   140002b15:	mov    rbp,QWORD PTR [rsp+0x60]
   140002b1a:	add    rsp,0x30
   140002b1e:	pop    r12
   140002b20:	pop    rdi
   140002b21:	pop    rsi
   140002b22:	jmp    0x14001d2ac
   140002b27:	int3   
   140002b28:	int3   
   140002b29:	int3   
   140002b2a:	int3   
   140002b2b:	int3   
   140002b2c:	int3   
   140002b2d:	int3   
   140002b2e:	int3   
   140002b2f:	int3   
   140002b30:	rex push rbp
   140002b32:	sub    rsp,0x20
   140002b36:	mov    rbp,rdx
   140002b39:	mov    rcx,QWORD PTR [rbp+0x50]
   140002b3d:	call   0x14000dd20
   140002b42:	add    rsp,0x20
   140002b46:	pop    rbp
   140002b47:	ret    
   140002b48:	int3   
   140002b49:	int3   
   140002b4a:	int3   
   140002b4b:	int3   
   140002b4c:	int3   
   140002b4d:	int3   
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	rex push rbp
   140002b52:	sub    rsp,0x20
   140002b56:	mov    rbp,rdx
   140002b59:	mov    rcx,QWORD PTR [rbp+0x50]
   140002b5d:	add    rcx,0xf8
   140002b64:	call   0x140003de0
   140002b69:	add    rsp,0x20
   140002b6d:	pop    rbp
   140002b6e:	ret    
   140002b6f:	int3   
   140002b70:	rex push rbp
   140002b72:	sub    rsp,0x20
   140002b76:	mov    rbp,rdx
   140002b79:	mov    rcx,QWORD PTR [rbp+0x50]
   140002b7d:	add    rcx,0x100
   140002b84:	call   0x14001e2f4
   140002b89:	add    rsp,0x20
   140002b8d:	pop    rbp
   140002b8e:	ret    
   140002b8f:	int3   
   140002b90:	rex push rbp
   140002b92:	sub    rsp,0x20
   140002b96:	mov    rbp,rdx
   140002b99:	mov    rcx,QWORD PTR [rbp+0x50]
   140002b9d:	add    rcx,0x1a8
   140002ba4:	call   0x14001e2f4
   140002ba9:	add    rsp,0x20
   140002bad:	pop    rbp
   140002bae:	ret    
   140002baf:	int3   
   140002bb0:	rex push rbp
   140002bb2:	sub    rsp,0x20
   140002bb6:	mov    rbp,rdx
   140002bb9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002bbd:	add    rcx,0x250
   140002bc4:	call   0x14001e2f4
   140002bc9:	add    rsp,0x20
   140002bcd:	pop    rbp
   140002bce:	ret    
   140002bcf:	int3   
   140002bd0:	rex push rbp
   140002bd2:	sub    rsp,0x20
   140002bd6:	mov    rbp,rdx
   140002bd9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002bdd:	add    rcx,0x2f8
   140002be4:	call   0x1400071e0
   140002be9:	add    rsp,0x20
   140002bed:	pop    rbp
   140002bee:	ret    
   140002bef:	int3   
   140002bf0:	rex push rbp
   140002bf2:	sub    rsp,0x20
   140002bf6:	mov    rbp,rdx
   140002bf9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002bfd:	add    rcx,0x480
   140002c04:	call   0x140012760
   140002c09:	add    rsp,0x20
   140002c0d:	pop    rbp
   140002c0e:	ret    
   140002c0f:	int3   
   140002c10:	rex push rbp
   140002c12:	sub    rsp,0x20
   140002c16:	mov    rbp,rdx
   140002c19:	mov    rcx,QWORD PTR [rbp+0x50]
   140002c1d:	add    rcx,0x538
   140002c24:	call   0x14001e22c
   140002c29:	add    rsp,0x20
   140002c2d:	pop    rbp
   140002c2e:	ret    
   140002c2f:	int3   
   140002c30:	rex push rbp
   140002c32:	sub    rsp,0x20
   140002c36:	mov    rbp,rdx
   140002c39:	mov    rcx,QWORD PTR [rbp+0x50]
   140002c3d:	add    rcx,0x5e0
   140002c44:	call   0x14001e22c
   140002c49:	add    rsp,0x20
   140002c4d:	pop    rbp
   140002c4e:	ret    
   140002c4f:	int3   
   140002c50:	rex push rbp
   140002c52:	sub    rsp,0x20
   140002c56:	mov    rbp,rdx
   140002c59:	mov    rcx,QWORD PTR [rbp+0x50]
   140002c5d:	add    rcx,0x688
   140002c64:	call   0x14001e22c
   140002c69:	add    rsp,0x20
   140002c6d:	pop    rbp
   140002c6e:	ret    
   140002c6f:	int3   
   140002c70:	rex push rbp
   140002c72:	sub    rsp,0x20
   140002c76:	mov    rbp,rdx
   140002c79:	mov    rcx,QWORD PTR [rbp+0x50]
   140002c7d:	add    rcx,0x730
   140002c84:	call   0x14001e22c
   140002c89:	add    rsp,0x20
   140002c8d:	pop    rbp
   140002c8e:	ret    
   140002c8f:	int3   
   140002c90:	rex push rbp
   140002c92:	sub    rsp,0x20
   140002c96:	mov    rbp,rdx
   140002c99:	mov    rcx,QWORD PTR [rbp+0x50]
   140002c9d:	add    rcx,0x7d8
   140002ca4:	call   0x14001e22c
   140002ca9:	add    rsp,0x20
   140002cad:	pop    rbp
   140002cae:	ret    
   140002caf:	int3   
   140002cb0:	rex push rbp
   140002cb2:	sub    rsp,0x20
   140002cb6:	mov    rbp,rdx
   140002cb9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002cbd:	add    rcx,0x880
   140002cc4:	call   0x14001e22c
   140002cc9:	add    rsp,0x20
   140002ccd:	pop    rbp
   140002cce:	ret    
   140002ccf:	int3   
   140002cd0:	rex push rbp
   140002cd2:	sub    rsp,0x20
   140002cd6:	mov    rbp,rdx
   140002cd9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002cdd:	add    rcx,0x928
   140002ce4:	call   0x14001e22c
   140002ce9:	add    rsp,0x20
   140002ced:	pop    rbp
   140002cee:	ret    
   140002cef:	int3   
   140002cf0:	rex push rbp
   140002cf2:	sub    rsp,0x20
   140002cf6:	mov    rbp,rdx
   140002cf9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002cfd:	add    rcx,0x9d0
   140002d04:	call   0x14001e22c
   140002d09:	add    rsp,0x20
   140002d0d:	pop    rbp
   140002d0e:	ret    
   140002d0f:	int3   
   140002d10:	rex push rbp
   140002d12:	sub    rsp,0x20
   140002d16:	mov    rbp,rdx
   140002d19:	mov    rcx,QWORD PTR [rbp+0x50]
   140002d1d:	add    rcx,0xa78
   140002d24:	call   0x14001e22c
   140002d29:	add    rsp,0x20
   140002d2d:	pop    rbp
   140002d2e:	ret    
   140002d2f:	int3   
   140002d30:	rex push rbp
   140002d32:	sub    rsp,0x20
   140002d36:	mov    rbp,rdx
   140002d39:	mov    rcx,QWORD PTR [rbp+0x50]
   140002d3d:	add    rcx,0xb20
   140002d44:	call   0x140012760
   140002d49:	add    rsp,0x20
   140002d4d:	pop    rbp
   140002d4e:	ret    
   140002d4f:	int3   
   140002d50:	rex push rbp
   140002d52:	sub    rsp,0x20
   140002d56:	mov    rbp,rdx
   140002d59:	mov    rcx,QWORD PTR [rbp+0x50]
   140002d5d:	add    rcx,0xbd8
   140002d64:	call   0x140004d90
   140002d69:	add    rsp,0x20
   140002d6d:	pop    rbp
   140002d6e:	ret    
   140002d6f:	int3   
   140002d70:	rex push rbp
   140002d72:	sub    rsp,0x20
   140002d76:	mov    rbp,rdx
   140002d79:	mov    rcx,QWORD PTR [rbp+0x50]
   140002d7d:	add    rcx,0xc28
   140002d84:	call   0x140012760
   140002d89:	add    rsp,0x20
   140002d8d:	pop    rbp
   140002d8e:	ret    
   140002d8f:	int3   
   140002d90:	rex push rbp
   140002d92:	sub    rsp,0x20
   140002d96:	mov    rbp,rdx
   140002d99:	mov    rcx,QWORD PTR [rbp+0x50]
   140002d9d:	add    rcx,0xce0
   140002da4:	call   0x140012760
   140002da9:	add    rsp,0x20
   140002dad:	pop    rbp
   140002dae:	ret    
   140002daf:	int3   
   140002db0:	rex push rbp
   140002db2:	sub    rsp,0x20
   140002db6:	mov    rbp,rdx
   140002db9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002dbd:	add    rcx,0xd98
   140002dc4:	call   0x140012760
   140002dc9:	add    rsp,0x20
   140002dcd:	pop    rbp
   140002dce:	ret    
   140002dcf:	int3   
   140002dd0:	rex push rbp
   140002dd2:	sub    rsp,0x20
   140002dd6:	mov    rbp,rdx
   140002dd9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002ddd:	add    rcx,0xe50
   140002de4:	call   0x140004d90
   140002de9:	add    rsp,0x20
   140002ded:	pop    rbp
   140002dee:	ret    
   140002def:	int3   
   140002df0:	rex push rbp
   140002df2:	sub    rsp,0x20
   140002df6:	mov    rbp,rdx
   140002df9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002dfd:	add    rcx,0xea0
   140002e04:	call   0x140004d90
   140002e09:	add    rsp,0x20
   140002e0d:	pop    rbp
   140002e0e:	ret    
   140002e0f:	int3   
   140002e10:	rex push rbp
   140002e12:	sub    rsp,0x20
   140002e16:	mov    rbp,rdx
   140002e19:	mov    rcx,QWORD PTR [rbp+0x50]
   140002e1d:	add    rcx,0xef0
   140002e24:	call   0x140004d90
   140002e29:	add    rsp,0x20
   140002e2d:	pop    rbp
   140002e2e:	ret    
   140002e2f:	int3   
   140002e30:	rex push rbp
   140002e32:	sub    rsp,0x20
   140002e36:	mov    rbp,rdx
   140002e39:	mov    rcx,QWORD PTR [rbp+0x50]
   140002e3d:	add    rcx,0xf40
   140002e44:	call   0x14001e2f4
   140002e49:	add    rsp,0x20
   140002e4d:	pop    rbp
   140002e4e:	ret    
   140002e4f:	int3   
   140002e50:	rex push rbp
   140002e52:	sub    rsp,0x20
   140002e56:	mov    rbp,rdx
   140002e59:	mov    rcx,QWORD PTR [rbp+0x50]
   140002e5d:	add    rcx,0xfe8
   140002e64:	call   0x14001e2f4
   140002e69:	add    rsp,0x20
   140002e6d:	pop    rbp
   140002e6e:	ret    
   140002e6f:	int3   
   140002e70:	rex push rbp
   140002e72:	sub    rsp,0x20
   140002e76:	mov    rbp,rdx
   140002e79:	mov    rcx,QWORD PTR [rbp+0x50]
   140002e7d:	add    rcx,0x1090
   140002e84:	call   0x14001e2f4
   140002e89:	add    rsp,0x20
   140002e8d:	pop    rbp
   140002e8e:	ret    
   140002e8f:	int3   
   140002e90:	rex push rbp
   140002e92:	sub    rsp,0x20
   140002e96:	mov    rbp,rdx
   140002e99:	mov    rcx,QWORD PTR [rbp+0x50]
   140002e9d:	add    rcx,0x1138
   140002ea4:	call   0x14001e22c
   140002ea9:	add    rsp,0x20
   140002ead:	pop    rbp
   140002eae:	ret    
   140002eaf:	int3   
   140002eb0:	rex push rbp
   140002eb2:	sub    rsp,0x20
   140002eb6:	mov    rbp,rdx
   140002eb9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002ebd:	add    rcx,0x11e0
   140002ec4:	call   0x14001e22c
   140002ec9:	add    rsp,0x20
   140002ecd:	pop    rbp
   140002ece:	ret    
   140002ecf:	int3   
   140002ed0:	rex push rbp
   140002ed2:	sub    rsp,0x20
   140002ed6:	mov    rbp,rdx
   140002ed9:	mov    rcx,QWORD PTR [rbp+0x50]
   140002edd:	add    rcx,0x1288
   140002ee4:	call   0x14001e22c
   140002ee9:	add    rsp,0x20
   140002eed:	pop    rbp
   140002eee:	ret    
   140002eef:	int3   
   140002ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ef5:	push   rdi
   140002ef6:	sub    rsp,0x20
   140002efa:	mov    rdi,rdx
   140002efd:	lea    r8,[rcx+0x1a8]
   140002f04:	mov    rbx,rcx
   140002f07:	mov    rcx,rdi
   140002f0a:	mov    edx,0x3e8
   140002f0f:	call   0x14001e4c0
   140002f14:	lea    r8,[rbx+0x2f8]
   140002f1b:	mov    edx,0x3f3
   140002f20:	mov    rcx,rdi
   140002f23:	call   0x14001e4c0
   140002f28:	lea    r8,[rbx+0x480]
   140002f2f:	mov    edx,0x3f6
   140002f34:	mov    rcx,rdi
   140002f37:	call   0x14001e4c0
   140002f3c:	lea    r8,[rbx+0x5e0]
   140002f43:	mov    edx,0x3fa
   140002f48:	mov    rcx,rdi
   140002f4b:	call   0x14001e4c0
   140002f50:	lea    r8,[rbx+0x688]
   140002f57:	mov    edx,0x3fb
   140002f5c:	mov    rcx,rdi
   140002f5f:	call   0x14001e4c0
   140002f64:	lea    r8,[rbx+0x730]
   140002f6b:	mov    edx,0x3fc
   140002f70:	mov    rcx,rdi
   140002f73:	call   0x14001e4c0
   140002f78:	lea    r8,[rbx+0x7d8]
   140002f7f:	mov    edx,0x401
   140002f84:	mov    rcx,rdi
   140002f87:	call   0x14001e4c0
   140002f8c:	lea    r8,[rbx+0x880]
   140002f93:	mov    edx,0x406
   140002f98:	mov    rcx,rdi
   140002f9b:	call   0x14001e4c0
   140002fa0:	lea    r8,[rbx+0x538]
   140002fa7:	mov    edx,0x40e
   140002fac:	mov    rcx,rdi
   140002faf:	call   0x14001e4c0
   140002fb4:	lea    r8,[rbx+0x928]
   140002fbb:	mov    edx,0x40f
   140002fc0:	mov    rcx,rdi
   140002fc3:	call   0x14001e4c0
   140002fc8:	lea    r8,[rbx+0x9d0]
   140002fcf:	mov    edx,0x3f8
   140002fd4:	mov    rcx,rdi
   140002fd7:	call   0x14001e4c0
   140002fdc:	lea    r8,[rbx+0xa78]
   140002fe3:	mov    edx,0x40b
   140002fe8:	mov    rcx,rdi
   140002feb:	call   0x14001e4c0
   140002ff0:	lea    r8,[rbx+0xf40]
   140002ff7:	mov    edx,0x408
   140002ffc:	mov    rcx,rdi
   140002fff:	call   0x14001e4c0
   140003004:	lea    r8,[rbx+0xfe8]
   14000300b:	mov    edx,0x409
   140003010:	mov    rcx,rdi
   140003013:	call   0x14001e4c0
   140003018:	lea    r8,[rbx+0x1090]
   14000301f:	mov    edx,0x40a
   140003024:	mov    rcx,rdi
   140003027:	call   0x14001e4c0
   14000302c:	lea    r8,[rbx+0xb20]
   140003033:	mov    edx,0x405
   140003038:	mov    rcx,rdi
   14000303b:	call   0x14001e4c0
   140003040:	lea    r8,[rbx+0xc28]
   140003047:	mov    edx,0x40d
   14000304c:	mov    rcx,rdi
   14000304f:	call   0x14001e4c0
   140003054:	lea    r8,[rbx+0xce0]
   14000305b:	mov    edx,0x410
   140003060:	mov    rcx,rdi
   140003063:	call   0x14001e4c0
   140003068:	lea    r8,[rbx+0xd98]
   14000306f:	mov    edx,0x40c
   140003074:	mov    rcx,rdi
   140003077:	call   0x14001e4c0
   14000307c:	lea    r8,[rbx+0x100]
   140003083:	mov    edx,0x3ed
   140003088:	mov    rcx,rdi
   14000308b:	call   0x14001e4c0
   140003090:	lea    r8,[rbx+0x1138]
   140003097:	mov    edx,0x411
   14000309c:	mov    rcx,rdi
   14000309f:	call   0x14001e4c0
   1400030a4:	lea    r8,[rbx+0x11e0]
   1400030ab:	mov    edx,0x412
   1400030b0:	mov    rcx,rdi
   1400030b3:	call   0x14001e4c0
   1400030b8:	lea    r8,[rbx+0x1288]
   1400030bf:	mov    edx,0x413
   1400030c4:	mov    rcx,rdi
   1400030c7:	call   0x14001e4c0
   1400030cc:	lea    r8,[rbx+0x1330]
   1400030d3:	mov    edx,0x414
   1400030d8:	mov    rcx,rdi
   1400030db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400030e0:	add    rsp,0x20
   1400030e4:	pop    rdi
   1400030e5:	jmp    0x14001e4c0
   1400030ea:	int3   
   1400030eb:	int3   
   1400030ec:	int3   
   1400030ed:	int3   
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	lea    rax,[rip+0x474c9]        # 0x14004a5c0
   1400030f7:	ret    
   1400030f8:	int3   
   1400030f9:	int3   
   1400030fa:	int3   
   1400030fb:	int3   
   1400030fc:	int3   
   1400030fd:	int3   
   1400030fe:	int3   
   1400030ff:	int3   
   140003100:	mov    QWORD PTR [rsp+0x8],rbx
   140003105:	mov    QWORD PTR [rsp+0x10],rbp
   14000310a:	mov    QWORD PTR [rsp+0x18],rsi
   14000310f:	push   rdi
   140003110:	push   r12
   140003112:	push   r13
   140003114:	push   r14
   140003116:	push   r15
   140003118:	sub    rsp,0x60
   14000311c:	mov    r8d,0x13b8
   140003122:	mov    rdx,rcx
   140003125:	mov    rbx,rcx
   140003128:	call   0x14000ddd0
   14000312d:	lea    rdx,[rbx+0x1a8]
   140003134:	mov    r8d,0x13b9
   14000313a:	mov    rcx,rbx
   14000313d:	call   0x14000ddd0
   140003142:	lea    rdx,[rbx+0x480]
   140003149:	mov    r8d,0x13a8
   14000314f:	mov    rcx,rbx
   140003152:	call   0x14000ddd0
   140003157:	lea    r12,[rbx+0x7d8]
   14000315e:	mov    r8d,0x13b7
   140003164:	mov    rdx,r12
   140003167:	mov    rcx,rbx
   14000316a:	call   0x14000ddd0
   14000316f:	lea    r13,[rbx+0x538]
   140003176:	mov    r8d,0x13a9
   14000317c:	mov    rdx,r13
   14000317f:	mov    rcx,rbx
   140003182:	call   0x14000ddd0
   140003187:	lea    rdx,[rbx+0x100]
   14000318e:	mov    r8d,0x138e
   140003194:	mov    rcx,rbx
   140003197:	call   0x14000ddd0
   14000319c:	lea    rdx,[rbx+0x1138]
   1400031a3:	mov    r8d,0x13b1
   1400031a9:	mov    rcx,rbx
   1400031ac:	call   0x14000ddd0
   1400031b1:	lea    rdx,[rbx+0xf40]
   1400031b8:	mov    r8d,0x13aa
   1400031be:	mov    rcx,rbx
   1400031c1:	call   0x14000ddd0
   1400031c6:	lea    rdx,[rbx+0xfe8]
   1400031cd:	mov    r8d,0x13ab
   1400031d3:	mov    rcx,rbx
   1400031d6:	call   0x14000ddd0
   1400031db:	lea    rdx,[rbx+0x1090]
   1400031e2:	mov    r8d,0x13ac
   1400031e8:	mov    rcx,rbx
   1400031eb:	call   0x14000ddd0
   1400031f0:	lea    rdx,[rbx+0x11e0]
   1400031f7:	mov    r8d,0x13ad
   1400031fd:	mov    rcx,rbx
   140003200:	call   0x14000ddd0
   140003205:	lea    rdx,[rbx+0x1288]
   14000320c:	mov    r8d,0x13ae
   140003212:	mov    rcx,rbx
   140003215:	call   0x14000ddd0
   14000321a:	lea    rdx,[rbx+0x1330]
   140003221:	mov    r8d,0x13af
   140003227:	mov    rcx,rbx
   14000322a:	call   0x14000ddd0
   14000322f:	lea    r14,[rbx+0x9d0]
   140003236:	mov    r8d,0x13b0
   14000323c:	mov    rdx,r14
   14000323f:	mov    rcx,rbx
   140003242:	call   0x14000ddd0
   140003247:	mov    rsi,QWORD PTR [rip+0x5eb8a]        # 0x140061dd8
   14000324e:	or     rcx,0xffffffffffffffff
   140003252:	xor    eax,eax
   140003254:	lea    rdi,[rip+0x4764d]        # 0x14004a8a8
   14000325b:	lea    rdx,[rip+0x47646]        # 0x14004a8a8
   140003262:	repnz scas ax,WORD PTR es:[rdi]
   140003265:	not    rcx
   140003268:	lea    r8d,[rcx-0x1]
   14000326c:	lea    rcx,[rbx+0xf8]
   140003273:	call   0x140004590
   140003278:	call   0x14001f2e8
   14000327d:	movzx  r9d,WORD PTR [rsi+0xc]
   140003282:	mov    rdx,QWORD PTR [rax+0x10]
   140003286:	lea    rcx,[rbx+0xf8]
   14000328d:	mov    r8d,0x139c
   140003293:	call   0x140006d10
   140003298:	mov    rsi,QWORD PTR [rbx+0xf8]
   14000329f:	lea    rdi,[rip+0x47602]        # 0x14004a8a8
   1400032a6:	mov    ecx,0x1
   1400032ab:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400032ae:	jne    0x1400032d0
   1400032b0:	call   0x14001f2e8
   1400032b5:	lea    rcx,[rbx+0xf8]
   1400032bc:	mov    r9w,0x409
   1400032c1:	mov    rdx,QWORD PTR [rax+0x10]
   1400032c5:	mov    r8d,0x139c
   1400032cb:	call   0x140006d10
   1400032d0:	mov    rax,QWORD PTR [rip+0x5eb01]        # 0x140061dd8
   1400032d7:	add    rax,0x20
   1400032db:	jne    0x1400032e2
   1400032dd:	xor    r8d,r8d
   1400032e0:	jmp    0x1400032e6
   1400032e2:	mov    r8,QWORD PTR [rax+0x8]
   1400032e6:	mov    rcx,QWORD PTR [rbx+0x1e8]
   1400032ed:	xor    r9d,r9d
   1400032f0:	lea    edx,[r9+0x30]
   1400032f4:	call   QWORD PTR [rip+0x406ee]        # 0x1400439e8
   1400032fa:	mov    r8,QWORD PTR [rip+0x5ead7]        # 0x140061dd8
   140003301:	add    r8,0x20
   140003305:	je     0x14000330b
   140003307:	mov    r8,QWORD PTR [r8+0x8]
   14000330b:	mov    rcx,QWORD PTR [rbx+0x4c0]
   140003312:	xor    r9d,r9d
   140003315:	lea    edx,[r9+0x30]
   140003319:	call   QWORD PTR [rip+0x406c9]        # 0x1400439e8
   14000331f:	mov    r8,QWORD PTR [rip+0x5eab2]        # 0x140061dd8
   140003326:	add    r8,0x10
   14000332a:	je     0x140003330
   14000332c:	mov    r8,QWORD PTR [r8+0x8]
   140003330:	mov    rcx,QWORD PTR [rbx+0x818]
   140003337:	xor    r9d,r9d
   14000333a:	lea    edx,[r9+0x30]
   14000333e:	call   QWORD PTR [rip+0x406a4]        # 0x1400439e8
   140003344:	mov    r8,QWORD PTR [rip+0x5ea8d]        # 0x140061dd8
   14000334b:	add    r8,0x10
   14000334f:	je     0x140003355
   140003351:	mov    r8,QWORD PTR [r8+0x8]
   140003355:	mov    rcx,QWORD PTR [rbx+0x578]
   14000335c:	xor    r9d,r9d
   14000335f:	lea    edx,[r9+0x30]
   140003363:	call   QWORD PTR [rip+0x4067f]        # 0x1400439e8
   140003369:	mov    r8,QWORD PTR [rip+0x5ea68]        # 0x140061dd8
   140003370:	add    r8,0x10
   140003374:	je     0x14000337a
   140003376:	mov    r8,QWORD PTR [r8+0x8]
   14000337a:	mov    rcx,QWORD PTR [rbx+0xa10]
   140003381:	xor    r9d,r9d
   140003384:	lea    edx,[r9+0x30]
   140003388:	call   QWORD PTR [rip+0x4065a]        # 0x1400439e8
   14000338e:	mov    r8,QWORD PTR [rip+0x5ea43]        # 0x140061dd8
   140003395:	add    r8,0x20
   140003399:	je     0x14000339f
   14000339b:	mov    r8,QWORD PTR [r8+0x8]
   14000339f:	mov    rcx,QWORD PTR [rbx+0x620]
   1400033a6:	xor    r9d,r9d
   1400033a9:	lea    edx,[r9+0x30]
   1400033ad:	call   QWORD PTR [rip+0x40635]        # 0x1400439e8
   1400033b3:	mov    r8,QWORD PTR [rip+0x5ea1e]        # 0x140061dd8
   1400033ba:	add    r8,0x20
   1400033be:	je     0x1400033c4
   1400033c0:	mov    r8,QWORD PTR [r8+0x8]
   1400033c4:	mov    rcx,QWORD PTR [rbx+0x6c8]
   1400033cb:	xor    r9d,r9d
   1400033ce:	lea    edx,[r9+0x30]
   1400033d2:	call   QWORD PTR [rip+0x40610]        # 0x1400439e8
   1400033d8:	mov    r8,QWORD PTR [rip+0x5e9f9]        # 0x140061dd8
   1400033df:	add    r8,0x20
   1400033e3:	je     0x1400033e9
   1400033e5:	mov    r8,QWORD PTR [r8+0x8]
   1400033e9:	mov    rcx,QWORD PTR [rbx+0x140]
   1400033f0:	xor    r9d,r9d
   1400033f3:	lea    edx,[r9+0x30]
   1400033f7:	call   QWORD PTR [rip+0x405eb]        # 0x1400439e8
   1400033fd:	mov    r8,QWORD PTR [rip+0x5e9d4]        # 0x140061dd8
   140003404:	add    r8,0x20
   140003408:	je     0x14000340e
   14000340a:	mov    r8,QWORD PTR [r8+0x8]
   14000340e:	mov    rcx,QWORD PTR [rbx+0x1178]
   140003415:	xor    r9d,r9d
   140003418:	lea    edx,[r9+0x30]
   14000341c:	call   QWORD PTR [rip+0x405c6]        # 0x1400439e8
   140003422:	mov    r8,QWORD PTR [rip+0x5e9af]        # 0x140061dd8
   140003429:	add    r8,0x20
   14000342d:	je     0x140003433
   14000342f:	mov    r8,QWORD PTR [r8+0x8]
   140003433:	mov    rcx,QWORD PTR [rbx+0xf80]
   14000343a:	xor    r9d,r9d
   14000343d:	lea    edx,[r9+0x30]
   140003441:	call   QWORD PTR [rip+0x405a1]        # 0x1400439e8
   140003447:	mov    r8,QWORD PTR [rip+0x5e98a]        # 0x140061dd8
   14000344e:	add    r8,0x20
   140003452:	je     0x140003458
   140003454:	mov    r8,QWORD PTR [r8+0x8]
   140003458:	mov    rcx,QWORD PTR [rbx+0x1028]
   14000345f:	xor    r9d,r9d
   140003462:	lea    edx,[r9+0x30]
   140003466:	call   QWORD PTR [rip+0x4057c]        # 0x1400439e8
   14000346c:	mov    r8,QWORD PTR [rip+0x5e965]        # 0x140061dd8
   140003473:	add    r8,0x20
   140003477:	je     0x14000347d
   140003479:	mov    r8,QWORD PTR [r8+0x8]
   14000347d:	mov    rcx,QWORD PTR [rbx+0x10d0]
   140003484:	xor    r9d,r9d
   140003487:	lea    edx,[r9+0x30]
   14000348b:	call   QWORD PTR [rip+0x40557]        # 0x1400439e8
   140003491:	mov    r8,QWORD PTR [rip+0x5e940]        # 0x140061dd8
   140003498:	add    r8,0x20
   14000349c:	je     0x1400034a2
   14000349e:	mov    r8,QWORD PTR [r8+0x8]
   1400034a2:	mov    rcx,QWORD PTR [rbx+0x1220]
   1400034a9:	xor    r9d,r9d
   1400034ac:	lea    edx,[r9+0x30]
   1400034b0:	call   QWORD PTR [rip+0x40532]        # 0x1400439e8
   1400034b6:	mov    r8,QWORD PTR [rip+0x5e91b]        # 0x140061dd8
   1400034bd:	add    r8,0x20
   1400034c1:	je     0x1400034c7
   1400034c3:	mov    r8,QWORD PTR [r8+0x8]
   1400034c7:	mov    rcx,QWORD PTR [rbx+0x12c8]
   1400034ce:	xor    r9d,r9d
   1400034d1:	lea    edx,[r9+0x30]
   1400034d5:	call   QWORD PTR [rip+0x4050d]        # 0x1400439e8
   1400034db:	mov    r8,QWORD PTR [rip+0x5e8f6]        # 0x140061dd8
   1400034e2:	add    r8,0x20
   1400034e6:	je     0x1400034ec
   1400034e8:	mov    r8,QWORD PTR [r8+0x8]
   1400034ec:	mov    rcx,QWORD PTR [rbx+0x1370]
   1400034f3:	xor    r9d,r9d
   1400034f6:	lea    edx,[r9+0x30]
   1400034fa:	call   QWORD PTR [rip+0x404e8]        # 0x1400439e8
   140003500:	mov    rdx,QWORD PTR [rip+0x5e8d1]        # 0x140061dd8
   140003507:	xor    r9d,r9d
   14000350a:	mov    edi,DWORD PTR [rdx+0x30]
   14000350d:	lea    rcx,[rbx+0x480]
   140003514:	test   edi,edi
   140003516:	je     0x14000352b
   140003518:	lea    r8d,[r9+0xd]
   14000351c:	xor    edx,edx
   14000351e:	call   0x14001ff4c
   140003523:	mov    DWORD PTR [rbx+0x530],edi
   140003529:	jmp    0x140003541
   14000352b:	xor    r8d,r8d
   14000352e:	lea    edx,[r8+0xd]
   140003532:	call   0x14001ff4c
   140003537:	mov    DWORD PTR [rbx+0x530],0x0
   140003541:	mov    rax,QWORD PTR [rip+0x5e890]        # 0x140061dd8
   140003548:	lea    rdx,[rbx+0x480]
   14000354f:	mov    rcx,rbx
   140003552:	mov    r8d,DWORD PTR [rax+0x30]
   140003556:	call   0x14000e090
   14000355b:	mov    rdx,r13
   14000355e:	mov    rcx,rbx
   140003561:	call   0x14000e4f0
   140003566:	mov    rdx,r12
   140003569:	mov    rcx,rbx
   14000356c:	call   0x14000e4f0
   140003571:	mov    rdx,r14
   140003574:	mov    rcx,rbx
   140003577:	call   0x14000e4f0
   14000357c:	test   r12,r12
   14000357f:	je     0x14000359e
   140003581:	mov    rcx,QWORD PTR [r12+0x40]
   140003586:	lea    rdx,[rsp+0x50]
   14000358b:	call   QWORD PTR [rip+0x4042f]        # 0x1400439c0
   140003591:	lea    rdx,[rsp+0x50]
   140003596:	mov    rcx,rbx
   140003599:	call   0x1400209b4
   14000359e:	lea    rdi,[rbx+0x880]
   1400035a5:	test   rdi,rdi
   1400035a8:	je     0x1400035c6
   1400035aa:	mov    rcx,QWORD PTR [rdi+0x40]
   1400035ae:	lea    rdx,[rsp+0x40]
   1400035b3:	call   QWORD PTR [rip+0x40407]        # 0x1400439c0
   1400035b9:	lea    rdx,[rsp+0x40]
   1400035be:	mov    rcx,rbx
   1400035c1:	call   0x1400209b4
   1400035c6:	mov    edx,DWORD PTR [rsp+0x4c]
   1400035ca:	mov    r9d,DWORD PTR [rsp+0x44]
   1400035cf:	mov    eax,DWORD PTR [rsp+0x48]
   1400035d3:	mov    r8d,DWORD PTR [rsp+0x58]
   1400035d8:	sub    edx,r9d
   1400035db:	mov    DWORD PTR [rsp+0x30],0x14
   1400035e3:	mov    DWORD PTR [rsp+0x28],edx
   1400035e7:	sub    eax,r8d
   1400035ea:	mov    rcx,rdi
   1400035ed:	xor    edx,edx
   1400035ef:	mov    DWORD PTR [rsp+0x20],eax
   1400035f3:	call   0x140020160
   1400035f8:	test   r13,r13
   1400035fb:	je     0x140003619
   1400035fd:	mov    rcx,QWORD PTR [r13+0x40]
   140003601:	lea    rdx,[rsp+0x50]
   140003606:	call   QWORD PTR [rip+0x403b4]        # 0x1400439c0
   14000360c:	lea    rdx,[rsp+0x50]
   140003611:	mov    rcx,rbx
   140003614:	call   0x1400209b4
   140003619:	lea    rdi,[rbx+0x928]
   140003620:	test   rdi,rdi
   140003623:	je     0x140003641
   140003625:	mov    rcx,QWORD PTR [rdi+0x40]
   140003629:	lea    rdx,[rsp+0x40]
   14000362e:	call   QWORD PTR [rip+0x4038c]        # 0x1400439c0
   140003634:	lea    rdx,[rsp+0x40]
   140003639:	mov    rcx,rbx
   14000363c:	call   0x1400209b4
   140003641:	mov    edx,DWORD PTR [rsp+0x4c]
   140003645:	mov    r9d,DWORD PTR [rsp+0x44]
   14000364a:	mov    eax,DWORD PTR [rsp+0x48]
   14000364e:	mov    r8d,DWORD PTR [rsp+0x58]
   140003653:	sub    edx,r9d
   140003656:	mov    DWORD PTR [rsp+0x30],0x14
   14000365e:	mov    DWORD PTR [rsp+0x28],edx
   140003662:	sub    eax,r8d
   140003665:	mov    rcx,rdi
   140003668:	xor    edx,edx
   14000366a:	mov    DWORD PTR [rsp+0x20],eax
   14000366e:	call   0x140020160
   140003673:	test   r14,r14
   140003676:	je     0x140003694
   140003678:	mov    rcx,QWORD PTR [r14+0x40]
   14000367c:	lea    rdx,[rsp+0x50]
   140003681:	call   QWORD PTR [rip+0x40339]        # 0x1400439c0
   140003687:	lea    rdx,[rsp+0x50]
   14000368c:	mov    rcx,rbx
   14000368f:	call   0x1400209b4
   140003694:	lea    rdi,[rbx+0xa78]
   14000369b:	test   rdi,rdi
   14000369e:	je     0x1400036bc
   1400036a0:	mov    rcx,QWORD PTR [rdi+0x40]
   1400036a4:	lea    rdx,[rsp+0x40]
   1400036a9:	call   QWORD PTR [rip+0x40311]        # 0x1400439c0
   1400036af:	lea    rdx,[rsp+0x40]
   1400036b4:	mov    rcx,rbx
   1400036b7:	call   0x1400209b4
   1400036bc:	mov    ecx,DWORD PTR [rsp+0x4c]
   1400036c0:	mov    r9d,DWORD PTR [rsp+0x44]
   1400036c5:	mov    eax,DWORD PTR [rsp+0x48]
   1400036c9:	mov    r8d,DWORD PTR [rsp+0x58]
   1400036ce:	sub    ecx,r9d
   1400036d1:	mov    DWORD PTR [rsp+0x30],0x14
   1400036d9:	mov    DWORD PTR [rsp+0x28],ecx
   1400036dd:	sub    eax,r8d
   1400036e0:	xor    edx,edx
   1400036e2:	mov    rcx,rdi
   1400036e5:	mov    DWORD PTR [rsp+0x20],eax
   1400036e9:	call   0x140020160
   1400036ee:	lea    r11,[rsp+0x60]
   1400036f3:	mov    rbx,QWORD PTR [r11+0x30]
   1400036f7:	mov    rbp,QWORD PTR [r11+0x38]
   1400036fb:	mov    rsi,QWORD PTR [r11+0x40]
   1400036ff:	mov    rsp,r11
   140003702:	pop    r15
   140003704:	pop    r14
   140003706:	pop    r13
   140003708:	pop    r12
   14000370a:	pop    rdi
   14000370b:	ret    
   14000370c:	int3   
   14000370d:	int3   
   14000370e:	int3   
   14000370f:	int3   
   140003710:	mov    QWORD PTR [rsp+0x8],rbx
   140003715:	mov    QWORD PTR [rsp+0x10],rbp
   14000371a:	mov    QWORD PTR [rsp+0x18],rsi
   14000371f:	push   rdi
   140003720:	sub    rsp,0x40
   140003724:	mov    rbx,rcx
   140003727:	call   0x14001d8b8
   14000372c:	mov    edx,0xfffffff1
   140003731:	lea    rsi,[rbx+0x2f8]
   140003738:	lea    r9d,[rdx+0x10]
   14000373c:	lea    r8d,[rdx+0x1e]
   140003740:	mov    rcx,rsi
   140003743:	call   0x1400214a4
   140003748:	mov    rcx,QWORD PTR [rbx+0x338]
   14000374f:	xor    r9d,r9d
   140003752:	lea    r8d,[r9+0x1]
   140003756:	mov    edx,0x414
   14000375b:	call   QWORD PTR [rip+0x40287]        # 0x1400439e8
   140003761:	lea    rcx,[rbx+0x100]
   140003768:	mov    edx,0x1
   14000376d:	call   0x1400200c4
   140003772:	call   0x14001f2e8
   140003777:	lea    rdi,[rbx+0xbd8]
   14000377e:	mov    rdx,QWORD PTR [rax+0x10]
   140003782:	lea    r9,[rip+0x46a47]        # 0x14004a1d0
   140003789:	mov    r8d,0xa3
   14000378f:	mov    rcx,rdi
   140003792:	mov    DWORD PTR [rsp+0x20],0x1
   14000379a:	call   0x140004e30
   14000379f:	test   rdi,rdi
   1400037a2:	je     0x1400037ab
   1400037a4:	mov    QWORD PTR [rbx+0xbc8],rdi
   1400037ab:	call   0x14001f2e8
   1400037b0:	lea    rdi,[rbx+0xe50]
   1400037b7:	lea    r9,[rip+0x46a12]        # 0x14004a1d0
   1400037be:	mov    rdx,QWORD PTR [rax+0x10]
   1400037c2:	mov    r8d,0xa6
   1400037c8:	mov    rcx,rdi
   1400037cb:	mov    DWORD PTR [rsp+0x20],0x1
   1400037d3:	call   0x140004e30
   1400037d8:	test   rdi,rdi
   1400037db:	je     0x1400037e4
   1400037dd:	mov    QWORD PTR [rbx+0xcd0],rdi
   1400037e4:	call   0x14001f2e8
   1400037e9:	lea    rdi,[rbx+0xea0]
   1400037f0:	lea    r9,[rip+0x469d9]        # 0x14004a1d0
   1400037f7:	mov    rdx,QWORD PTR [rax+0x10]
   1400037fb:	mov    r8d,0xa5
   140003801:	mov    rcx,rdi
   140003804:	mov    DWORD PTR [rsp+0x20],0x1
   14000380c:	call   0x140004e30
   140003811:	test   rdi,rdi
   140003814:	je     0x14000381d
   140003816:	mov    QWORD PTR [rbx+0xd88],rdi
   14000381d:	call   0x14001f2e8
   140003822:	lea    rdi,[rbx+0xef0]
   140003829:	lea    r9,[rip+0x469a0]        # 0x14004a1d0
   140003830:	mov    rdx,QWORD PTR [rax+0x10]
   140003834:	mov    r8d,0xa4
   14000383a:	mov    rcx,rdi
   14000383d:	mov    DWORD PTR [rsp+0x20],0x1
   140003845:	call   0x140004e30
   14000384a:	test   rdi,rdi
   14000384d:	je     0x140003856
   14000384f:	mov    QWORD PTR [rbx+0xe40],rdi
   140003856:	xor    ebp,ebp
   140003858:	test   rsi,rsi
   14000385b:	mov    rdi,rbp
   14000385e:	je     0x140003864
   140003860:	mov    rdi,QWORD PTR [rsi+0x40]
   140003864:	mov    rcx,rsi
   140003867:	call   0x14001fee4
   14000386c:	mov    edx,0xfffffff0
   140003871:	mov    rcx,rdi
   140003874:	or     eax,0x40
   140003877:	mov    r8d,eax
   14000387a:	call   QWORD PTR [rip+0x400f8]        # 0x140043978
   140003880:	mov    rcx,QWORD PTR [rsi+0x40]
   140003884:	xor    r9d,r9d
   140003887:	movsd  xmm5,QWORD PTR [rip+0x592f1]        # 0x14005cb80
   14000388f:	mov    edx,0x41b
   140003894:	mulsd  xmm5,QWORD PTR [rip+0x49d64]        # 0x14004d600
   14000389c:	cvttsd2si eax,xmm5
   1400038a0:	movsxd r8,eax
   1400038a3:	call   QWORD PTR [rip+0x4013f]        # 0x1400439e8
   1400038a9:	mov    DWORD PTR [rsp+0x30],0xb4
   1400038b1:	mov    DWORD PTR [rsp+0x34],0xa
   1400038b9:	mov    DWORD PTR [rsp+0x38],ebp
   1400038bd:	mov    DWORD PTR [rsp+0x3c],ebp
   1400038c1:	lea    rcx,[rsp+0x30]
   1400038c6:	mov    eax,DWORD PTR [rcx]
   1400038c8:	mov    DWORD PTR [rbx+0x448],eax
   1400038ce:	mov    eax,DWORD PTR [rcx+0x4]
   1400038d1:	mov    DWORD PTR [rbx+0x44c],eax
   1400038d7:	mov    eax,DWORD PTR [rcx+0x8]
   1400038da:	mov    DWORD PTR [rbx+0x450],eax
   1400038e0:	mov    eax,DWORD PTR [rcx+0xc]
   1400038e3:	lea    rcx,[rsp+0x30]
   1400038e8:	mov    DWORD PTR [rbx+0x454],eax
   1400038ee:	mov    DWORD PTR [rsp+0x30],ebp
   1400038f2:	mov    DWORD PTR [rsp+0x34],ebp
   1400038f6:	mov    DWORD PTR [rsp+0x38],ebp
   1400038fa:	mov    DWORD PTR [rsp+0x3c],ebp
   1400038fe:	mov    eax,DWORD PTR [rcx]
   140003900:	mov    DWORD PTR [rbx+0x468],eax
   140003906:	mov    eax,DWORD PTR [rcx+0x4]
   140003909:	mov    DWORD PTR [rbx+0x46c],eax
   14000390f:	mov    eax,DWORD PTR [rcx+0x8]
   140003912:	mov    DWORD PTR [rbx+0x470],eax
   140003918:	mov    eax,DWORD PTR [rcx+0xc]
   14000391b:	mov    DWORD PTR [rbx+0x474],eax
   140003921:	call   0x14001f2e8
   140003926:	lea    rcx,[rsi+0xb0]
   14000392d:	mov    rdx,QWORD PTR [rax+0x10]
   140003931:	lea    r9,[rip+0x46898]        # 0x14004a1d0
   140003938:	mov    r8d,0xa8
   14000393e:	mov    DWORD PTR [rsp+0x20],0x1
   140003946:	call   0x140004e30
   14000394b:	call   0x14001f2e8
   140003950:	mov    rdx,QWORD PTR [rax+0x10]
   140003954:	lea    rcx,[rsi+0x100]
   14000395b:	lea    r9,[rip+0x4686e]        # 0x14004a1d0
   140003962:	mov    r8d,0xa7
   140003968:	mov    DWORD PTR [rsp+0x20],0x1
   140003970:	call   0x140004e30
   140003975:	mov    rbx,QWORD PTR [rsp+0x50]
   14000397a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000397f:	mov    rsi,QWORD PTR [rsp+0x60]
   140003984:	mov    eax,0x1
   140003989:	add    rsp,0x40
   14000398d:	pop    rdi
   14000398e:	ret    
   14000398f:	int3   
   140003990:	rex push rbx
   140003992:	sub    rsp,0x20
   140003996:	cmp    QWORD PTR [rcx+0xe8],0x0
   14000399e:	mov    rbx,rcx
   1400039a1:	je     0x140003aac
   1400039a7:	mov    rcx,QWORD PTR [rcx+0x1e8]
   1400039ae:	xor    r9d,r9d
   1400039b1:	xor    r8d,r8d
   1400039b4:	mov    edx,0xf0
   1400039b9:	mov    QWORD PTR [rsp+0x30],rdi
   1400039be:	call   QWORD PTR [rip+0x40024]        # 0x1400439e8
   1400039c4:	xor    edx,edx
   1400039c6:	cmp    eax,0x1
   1400039c9:	mov    rax,QWORD PTR [rbx+0xe8]
   1400039d0:	mov    edi,edx
   1400039d2:	mov    ecx,DWORD PTR [rax]
   1400039d4:	sete   dil
   1400039d8:	test   cl,0x40
   1400039db:	je     0x140003a47
   1400039dd:	test   cl,0x10
   1400039e0:	je     0x140003a47
   1400039e2:	test   edi,edi
   1400039e4:	je     0x1400039f1
   1400039e6:	bt     ecx,0x9
   1400039ea:	jb     0x1400039f1
   1400039ec:	mov    edx,0x1
   1400039f1:	lea    rcx,[rbx+0x2f8]
   1400039f8:	call   0x1400200c4
   1400039fd:	lea    rcx,[rbx+0x5e0]
   140003a04:	mov    edx,edi
   140003a06:	call   0x1400200c4
   140003a0b:	lea    rcx,[rbx+0x688]
   140003a12:	mov    edx,edi
   140003a14:	call   0x1400200c4
   140003a19:	lea    rcx,[rbx+0x730]
   140003a20:	mov    edx,edi
   140003a22:	call   0x1400200c4
   140003a27:	lea    rcx,[rbx+0xf40]
   140003a2e:	mov    edx,edi
   140003a30:	call   0x1400200c4
   140003a35:	lea    rcx,[rbx+0xfe8]
   140003a3c:	mov    edx,edi
   140003a3e:	call   0x1400200c4
   140003a43:	mov    edx,edi
   140003a45:	jmp    0x140003a9b
   140003a47:	lea    rcx,[rbx+0x2f8]
   140003a4e:	call   0x1400200c4
   140003a53:	lea    rcx,[rbx+0x5e0]
   140003a5a:	xor    edx,edx
   140003a5c:	call   0x1400200c4
   140003a61:	lea    rcx,[rbx+0x688]
   140003a68:	xor    edx,edx
   140003a6a:	call   0x1400200c4
   140003a6f:	lea    rcx,[rbx+0x730]
   140003a76:	xor    edx,edx
   140003a78:	call   0x1400200c4
   140003a7d:	lea    rcx,[rbx+0xf40]
   140003a84:	xor    edx,edx
   140003a86:	call   0x1400200c4
   140003a8b:	lea    rcx,[rbx+0xfe8]
   140003a92:	xor    edx,edx
   140003a94:	call   0x1400200c4
   140003a99:	xor    edx,edx
   140003a9b:	lea    rcx,[rbx+0x1090]
   140003aa2:	call   0x1400200c4
   140003aa7:	mov    rdi,QWORD PTR [rsp+0x30]
   140003aac:	add    rsp,0x20
   140003ab0:	pop    rbx
   140003ab1:	ret    
   140003ab2:	int3   
   140003ab3:	int3   
   140003ab4:	int3   
   140003ab5:	int3   
   140003ab6:	int3   
   140003ab7:	int3   
   140003ab8:	int3   
   140003ab9:	int3   
   140003aba:	int3   
   140003abb:	int3   
   140003abc:	int3   
   140003abd:	int3   
   140003abe:	int3   
   140003abf:	int3   
   140003ac0:	rex push rsi
   140003ac2:	sub    rsp,0x20
   140003ac6:	mov    rax,QWORD PTR [rcx+0xe8]
   140003acd:	mov    rsi,rcx
   140003ad0:	test   rax,rax
   140003ad3:	je     0x140003c1a
   140003ad9:	cmp    QWORD PTR [rcx+0xf0],0x0
   140003ae1:	je     0x140003c1a
   140003ae7:	mov    ecx,DWORD PTR [rax]
   140003ae9:	mov    QWORD PTR [rsp+0x30],rbx
   140003aee:	mov    QWORD PTR [rsp+0x38],rdi
   140003af3:	test   cl,0x40
   140003af6:	je     0x140003b04
   140003af8:	test   cl,0x10
   140003afb:	je     0x140003b04
   140003afd:	mov    edx,0x1
   140003b02:	jmp    0x140003b06
   140003b04:	xor    edx,edx
   140003b06:	lea    rcx,[rsi+0x1a8]
   140003b0d:	call   0x1400200c4
   140003b12:	mov    rax,QWORD PTR [rsi+0xe8]
   140003b19:	xor    r9d,r9d
   140003b1c:	mov    ecx,DWORD PTR [rax]
   140003b1e:	mov    edx,0xf1
   140003b23:	shr    ecx,0x5
   140003b26:	and    ecx,0x1
   140003b29:	movsxd r8,ecx
   140003b2c:	mov    rcx,QWORD PTR [rsi+0x1e8]
   140003b33:	call   QWORD PTR [rip+0x3feaf]        # 0x1400439e8
   140003b39:	mov    rcx,QWORD PTR [rsi+0xf0]
   140003b40:	call   0x140009100
   140003b45:	mov    rcx,QWORD PTR [rsi+0x338]
   140003b4c:	mov    edx,0x405
   140003b51:	movsxd r9,eax
   140003b54:	mov    r8d,0x1
   140003b5a:	call   QWORD PTR [rip+0x3fe88]        # 0x1400439e8
   140003b60:	lea    r8,[rip+0x478a9]        # 0x14004b410
   140003b67:	lea    rdx,[rip+0x478b2]        # 0x14004b420
   140003b6e:	lea    rcx,[rip+0x5e2cb]        # 0x140061e40
   140003b75:	mov    r9d,0x2
   140003b7b:	call   0x140022254
   140003b80:	mov    rcx,QWORD PTR [rsi+0xf80]
   140003b87:	xor    edi,edi
   140003b89:	test   eax,eax
   140003b8b:	mov    r8,rdi
   140003b8e:	mov    edx,0xf1
   140003b93:	sete   r8b
   140003b97:	xor    r9d,r9d
   140003b9a:	mov    ebx,eax
   140003b9c:	call   QWORD PTR [rip+0x3fe46]        # 0x1400439e8
   140003ba2:	mov    rcx,QWORD PTR [rsi+0x1028]
   140003ba9:	mov    r8,rdi
   140003bac:	cmp    ebx,0x1
   140003baf:	mov    edx,0xf1
   140003bb4:	sete   r8b
   140003bb8:	xor    r9d,r9d
   140003bbb:	call   QWORD PTR [rip+0x3fe27]        # 0x1400439e8
   140003bc1:	mov    rcx,QWORD PTR [rsi+0x10d0]
   140003bc8:	cmp    ebx,0x2
   140003bcb:	sete   dil
   140003bcf:	mov    edx,0xf1
   140003bd4:	xor    r9d,r9d
   140003bd7:	mov    r8,rdi
   140003bda:	call   QWORD PTR [rip+0x3fe08]        # 0x1400439e8
   140003be0:	mov    r11,QWORD PTR [rsi+0xe8]
   140003be7:	mov    rcx,QWORD PTR [rsi+0x140]
   140003bee:	mov    eax,DWORD PTR [r11]
   140003bf1:	xor    r9d,r9d
   140003bf4:	mov    edx,0xf1
   140003bf9:	shr    eax,0x8
   140003bfc:	and    eax,0x1
   140003bff:	movsxd r8,eax
   140003c02:	call   QWORD PTR [rip+0x3fde0]        # 0x1400439e8
   140003c08:	mov    rcx,rsi
   140003c0b:	call   0x140003990
   140003c10:	mov    rdi,QWORD PTR [rsp+0x38]
   140003c15:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c1a:	add    rsp,0x20
   140003c1e:	pop    rsi
   140003c1f:	ret    
   140003c20:	rex push rbx
   140003c22:	sub    rsp,0x20
   140003c26:	cmp    QWORD PTR [rcx+0xe8],0x0
   140003c2e:	mov    rbx,rcx
   140003c31:	je     0x140003d82
   140003c37:	mov    rcx,QWORD PTR [rcx+0x1e8]
   140003c3e:	mov    QWORD PTR [rsp+0x30],rbp
   140003c43:	mov    QWORD PTR [rsp+0x38],rsi
   140003c48:	xor    r9d,r9d
   140003c4b:	xor    r8d,r8d
   140003c4e:	mov    edx,0xf0
   140003c53:	mov    QWORD PTR [rsp+0x40],rdi
   140003c58:	mov    QWORD PTR [rsp+0x48],r12
   140003c5d:	call   QWORD PTR [rip+0x3fd85]        # 0x1400439e8
   140003c63:	mov    rcx,QWORD PTR [rbx+0x338]
   140003c6a:	xor    esi,esi
   140003c6c:	cmp    eax,0x1
   140003c6f:	mov    ebp,esi
   140003c71:	sete   bpl
   140003c75:	xor    r9d,r9d
   140003c78:	xor    r8d,r8d
   140003c7b:	mov    edx,0x400
   140003c80:	call   QWORD PTR [rip+0x3fd62]        # 0x1400439e8
   140003c86:	mov    rcx,QWORD PTR [rbx+0x10d0]
   140003c8d:	xor    r9d,r9d
   140003c90:	xor    r8d,r8d
   140003c93:	mov    edx,0xf0
   140003c98:	mov    r12,rax
   140003c9b:	call   QWORD PTR [rip+0x3fd47]        # 0x1400439e8
   140003ca1:	cmp    eax,0x1
   140003ca4:	jne    0x140003cab
   140003ca6:	lea    edi,[rsi+0x2]
   140003ca9:	jmp    0x140003ccc
   140003cab:	mov    rcx,QWORD PTR [rbx+0x1028]
   140003cb2:	xor    r9d,r9d
   140003cb5:	xor    r8d,r8d
   140003cb8:	mov    edx,0xf0
   140003cbd:	call   QWORD PTR [rip+0x3fd25]        # 0x1400439e8
   140003cc3:	mov    edi,esi
   140003cc5:	cmp    eax,0x1
   140003cc8:	sete   dil
   140003ccc:	mov    rax,QWORD PTR [rbx+0xe8]
   140003cd3:	mov    edx,ebp
   140003cd5:	or     DWORD PTR [rax],0x200
   140003cdb:	mov    rcx,QWORD PTR [rbx+0xf0]
   140003ce2:	call   0x140008cc0
   140003ce7:	mov    rcx,QWORD PTR [rbx+0xf0]
   140003cee:	mov    edx,r12d
   140003cf1:	call   0x1400092c0
   140003cf6:	mov    rcx,QWORD PTR [rbx+0xf0]
   140003cfd:	mov    edx,edi
   140003cff:	call   0x140008ed0
   140003d04:	mov    r11,QWORD PTR [rbx+0xe8]
   140003d0b:	shl    ebp,0x5
   140003d0e:	xor    ebp,DWORD PTR [r11]
   140003d11:	xor    r9d,r9d
   140003d14:	xor    r8d,r8d
   140003d17:	and    ebp,0x20
   140003d1a:	mov    edx,0xf0
   140003d1f:	xor    DWORD PTR [r11],ebp
   140003d22:	mov    rcx,QWORD PTR [rbx+0x140]
   140003d29:	call   QWORD PTR [rip+0x3fcb9]        # 0x1400439e8
   140003d2f:	mov    rcx,QWORD PTR [rip+0x5e0aa]        # 0x140061de0
   140003d36:	mov    edx,0x87d0
   140003d3b:	mov    rcx,QWORD PTR [rcx+0x40]
   140003d3f:	cmp    eax,0x1
   140003d42:	mov    rax,QWORD PTR [rbx+0xe8]
   140003d49:	mov    r8b,BYTE PTR [rax]
   140003d4c:	sete   sil
   140003d50:	shr    r8b,0x7
   140003d54:	mov    r9,rsi
   140003d57:	and    r8d,0x1
   140003d5b:	call   QWORD PTR [rip+0x3fc87]        # 0x1400439e8
   140003d61:	mov    r11,QWORD PTR [rbx]
   140003d64:	mov    rcx,rbx
   140003d67:	call   QWORD PTR [r11+0x2b8]
   140003d6e:	mov    r12,QWORD PTR [rsp+0x48]
   140003d73:	mov    rdi,QWORD PTR [rsp+0x40]
   140003d78:	mov    rsi,QWORD PTR [rsp+0x38]
   140003d7d:	mov    rbp,QWORD PTR [rsp+0x30]
   140003d82:	add    rsp,0x20
   140003d86:	pop    rbx
   140003d87:	ret    
   140003d88:	int3   
   140003d89:	int3   
   140003d8a:	int3   
   140003d8b:	int3   
   140003d8c:	int3   
   140003d8d:	int3   
   140003d8e:	int3   
   140003d8f:	int3   
   140003d90:	sub    rsp,0x28
   140003d94:	call   0x140003990
   140003d99:	mov    rcx,QWORD PTR [rip+0x5e040]        # 0x140061de0
   140003da0:	test   rcx,rcx
   140003da3:	je     0x140003dba
   140003da5:	mov    rcx,QWORD PTR [rcx+0x40]
   140003da9:	xor    r9d,r9d
   140003dac:	xor    r8d,r8d
   140003daf:	mov    edx,0x5dd
   140003db4:	call   QWORD PTR [rip+0x3fc2e]        # 0x1400439e8
   140003dba:	add    rsp,0x28
   140003dbe:	ret    
   140003dbf:	int3   
   140003dc0:	sub    rsp,0x28
   140003dc4:	cmp    ecx,0x8007000e
   140003dca:	jne    0x140003dd2
   140003dcc:	call   0x140021878
   140003dd1:	int3   
   140003dd2:	call   0x140021628
   140003dd7:	int3   
   140003dd8:	int3   
   140003dd9:	int3   
   140003dda:	int3   
   140003ddb:	int3   
   140003ddc:	int3   
   140003ddd:	int3   
   140003dde:	int3   
   140003ddf:	int3   
   140003de0:	sub    rsp,0x28
   140003de4:	mov    rdx,QWORD PTR [rcx]
   140003de7:	sub    rdx,0x18
   140003deb:	or     eax,0xffffffff
   140003dee:	lock xadd DWORD PTR [rdx+0x10],eax
   140003df3:	add    eax,0xffffffff
   140003df6:	test   eax,eax
   140003df8:	jg     0x140003e03
   140003dfa:	mov    rcx,QWORD PTR [rdx]
   140003dfd:	mov    rax,QWORD PTR [rcx]
   140003e00:	call   QWORD PTR [rax+0x8]
   140003e03:	add    rsp,0x28
   140003e07:	ret    
   140003e08:	int3   
   140003e09:	int3   
   140003e0a:	int3   
   140003e0b:	int3   
   140003e0c:	int3   
   140003e0d:	int3   
   140003e0e:	int3   
   140003e0f:	int3   
   140003e10:	mov    rax,rsp
   140003e13:	mov    QWORD PTR [rax+0x8],rcx
   140003e17:	push   rdi
   140003e18:	push   r12
   140003e1a:	push   r13
   140003e1c:	push   r14
   140003e1e:	push   r15
   140003e20:	sub    rsp,0x70
   140003e24:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140003e2d:	mov    QWORD PTR [rax+0x10],rbx
   140003e31:	mov    QWORD PTR [rax+0x18],rbp
   140003e35:	mov    QWORD PTR [rax+0x20],rsi
   140003e39:	mov    rbx,r9
   140003e3c:	mov    rdi,rdx
   140003e3f:	mov    rbp,rcx
   140003e42:	call   0x14002157c
   140003e47:	mov    rcx,rax
   140003e4a:	xor    r15d,r15d
   140003e4d:	mov    eax,r15d
   140003e50:	test   rcx,rcx
   140003e53:	setne  al
   140003e56:	test   eax,eax
   140003e58:	jne    0x140003e65
   140003e5a:	mov    ecx,0x80004005
   140003e5f:	call   0x140003dc0
   140003e64:	int3   
   140003e65:	mov    rax,QWORD PTR [rcx]
   140003e68:	call   QWORD PTR [rax+0x18]
   140003e6b:	add    rax,0x18
   140003e6f:	mov    QWORD PTR [rbp+0x498],rax
   140003e76:	mov    QWORD PTR [rbp+0x488],rdi
   140003e7d:	mov    DWORD PTR [rbp+0x480],0x8002
   140003e87:	mov    QWORD PTR [rbp+0x490],r15
   140003e8e:	test   rbx,rbx
   140003e91:	je     0x1400040c8
   140003e97:	xor    eax,eax
   140003e99:	or     rcx,0xffffffffffffffff
   140003e9d:	lea    rdi,[rip+0x46a04]        # 0x14004a8a8
   140003ea4:	repnz scas ax,WORD PTR es:[rdi]
   140003ea7:	not    rcx
   140003eaa:	lea    r8d,[rcx-0x1]
   140003eae:	lea    rdx,[rip+0x469f3]        # 0x14004a8a8
   140003eb5:	lea    rcx,[rbp+0x498]
   140003ebc:	call   0x140004590
   140003ec1:	xor    eax,eax
   140003ec3:	or     rcx,0xffffffffffffffff
   140003ec7:	mov    rdi,rbx
   140003eca:	repnz scas ax,WORD PTR es:[rdi]
   140003ecd:	not    rcx
   140003ed0:	lea    r14,[rcx-0x1]
   140003ed4:	mov    rax,QWORD PTR [rbp+0x498]
   140003edb:	mov    rsi,rbx
   140003ede:	sub    rsi,rax
   140003ee1:	sar    rsi,1
   140003ee4:	mov    r12d,DWORD PTR [rax-0x10]
   140003ee8:	lea    edi,[r12+rcx*1-0x1]
   140003eed:	mov    edx,0x1
   140003ef2:	sub    edx,DWORD PTR [rax-0x8]
   140003ef5:	mov    eax,DWORD PTR [rax-0xc]
   140003ef8:	sub    eax,edi
   140003efa:	or     eax,edx
   140003efc:	jge    0x140003f0c
   140003efe:	mov    edx,edi
   140003f00:	lea    rcx,[rbp+0x498]
   140003f07:	call   0x140004370
   140003f0c:	mov    rax,QWORD PTR [rbp+0x498]
   140003f13:	cmp    rsi,r12
   140003f16:	ja     0x140003f1c
   140003f18:	lea    rbx,[rax+rsi*2]
   140003f1c:	movsxd rdx,r14d
   140003f1f:	add    rdx,rdx
   140003f22:	lea    rcx,[rax+r12*2]
   140003f26:	mov    r9,rdx
   140003f29:	mov    r8,rbx
   140003f2c:	call   0x140029bf0
   140003f31:	test   edi,edi
   140003f33:	js     0x1400040bd
   140003f39:	mov    rax,QWORD PTR [rbp+0x498]
   140003f40:	cmp    edi,DWORD PTR [rax-0xc]
   140003f43:	jg     0x1400040bd
   140003f49:	mov    DWORD PTR [rax-0x10],edi
   140003f4c:	movsxd rcx,edi
   140003f4f:	mov    rax,QWORD PTR [rbp+0x498]
   140003f56:	mov    WORD PTR [rax+rcx*2],0x0
   140003f5c:	mov    rbx,rbp
   140003f5f:	mov    esi,0x5c00
   140003f64:	data16 data16 xchg ax,ax
   140003f68:	data16 data16 xchg ax,ax
   140003f6c:	data16 data16 xchg ax,ax
   140003f70:	mov    QWORD PTR [rbx+0x8],r15
   140003f74:	xor    r9d,r9d
   140003f77:	xor    r8d,r8d
   140003f7a:	xor    edx,edx
   140003f7c:	xor    ecx,ecx
   140003f7e:	call   QWORD PTR [rip+0x3f5e4]        # 0x140043568
   140003f84:	mov    QWORD PTR [rbx],rax
   140003f87:	test   rax,rax
   140003f8a:	je     0x140004058
   140003f90:	lea    rcx,[rsp+0x60]
   140003f95:	mov    QWORD PTR [rcx],rax
   140003f98:	mov    rax,QWORD PTR [rbx+0x8]
   140003f9c:	mov    QWORD PTR [rcx+0x8],rax
   140003fa0:	mov    QWORD PTR [rsp+0x48],r15
   140003fa5:	xor    eax,eax
   140003fa7:	mov    QWORD PTR [rsp+0x50],rax
   140003fac:	mov    edi,esi
   140003fae:	or     edi,0x220000
   140003fb4:	mov    QWORD PTR [rsp+0x30],r15
   140003fb9:	mov    DWORD PTR [rsp+0x28],r15d
   140003fbe:	mov    DWORD PTR [rsp+0x20],0x3
   140003fc6:	xor    r9d,r9d
   140003fc9:	mov    edx,0xc0000000
   140003fce:	lea    r8d,[rax+0x3]
   140003fd2:	mov    rcx,QWORD PTR [rbp+0x498]
   140003fd9:	call   QWORD PTR [rip+0x3f5a1]        # 0x140043580
   140003fdf:	mov    r12,rax
   140003fe2:	cmp    rax,0xffffffffffffffff
   140003fe6:	jne    0x140003fef
   140003fe8:	mov    QWORD PTR [rsp+0x48],r15
   140003fed:	jmp    0x140004044
   140003fef:	mov    QWORD PTR [rsp+0x38],r15
   140003ff4:	lea    rax,[rsp+0xa0]
   140003ffc:	mov    QWORD PTR [rsp+0x30],rax
   140004001:	mov    DWORD PTR [rsp+0x28],0x10
   140004009:	lea    rax,[rsp+0x48]
   14000400e:	mov    QWORD PTR [rsp+0x20],rax
   140004013:	mov    r9d,0x10
   140004019:	lea    r8,[rsp+0x60]
   14000401e:	mov    edx,edi
   140004020:	mov    rcx,r12
   140004023:	call   QWORD PTR [rip+0x3f54f]        # 0x140043578
   140004029:	mov    edi,eax
   14000402b:	mov    rcx,r12
   14000402e:	call   QWORD PTR [rip+0x3f554]        # 0x140043588
   140004034:	mov    rdx,QWORD PTR [rsp+0x48]
   140004039:	test   edi,edi
   14000403b:	cmove  rdx,r15
   14000403f:	mov    QWORD PTR [rsp+0x48],rdx
   140004044:	lea    rcx,[rsp+0x48]
   140004049:	mov    rax,QWORD PTR [rcx]
   14000404c:	mov    QWORD PTR [rbx+0x10],rax
   140004050:	mov    rax,QWORD PTR [rcx+0x8]
   140004054:	mov    QWORD PTR [rbx+0x18],rax
   140004058:	add    esi,0xc
   14000405b:	add    rbx,0x20
   14000405f:	cmp    esi,0x5d98
   140004065:	jl     0x140003f70
   14000406b:	mov    QWORD PTR [rbp+0x448],r15
   140004072:	xor    r9d,r9d
   140004075:	xor    r8d,r8d
   140004078:	xor    edx,edx
   14000407a:	xor    ecx,ecx
   14000407c:	call   QWORD PTR [rip+0x3f4e6]        # 0x140043568
   140004082:	mov    QWORD PTR [rbp+0x440],rax
   140004089:	test   rax,rax
   14000408c:	je     0x1400040c8
   14000408e:	lea    rax,[rsp+0xa0]
   140004096:	mov    QWORD PTR [rsp+0x28],rax
   14000409b:	mov    DWORD PTR [rsp+0x20],r15d
   1400040a0:	mov    r9,rbp
   1400040a3:	lea    r8,[rip+0x1f6]        # 0x1400042a0
   1400040aa:	xor    edx,edx
   1400040ac:	xor    ecx,ecx
   1400040ae:	call   QWORD PTR [rip+0x3f4ac]        # 0x140043560
   1400040b4:	mov    QWORD PTR [rbp+0x490],rax
   1400040bb:	jmp    0x1400040c8
   1400040bd:	mov    ecx,0x80070057
   1400040c2:	call   0x140003dc0
   1400040c7:	nop
   1400040c8:	mov    rax,rbp
   1400040cb:	lea    r11,[rsp+0x70]
   1400040d0:	mov    rbx,QWORD PTR [r11+0x38]
   1400040d4:	mov    rbp,QWORD PTR [r11+0x40]
   1400040d8:	mov    rsi,QWORD PTR [r11+0x48]
   1400040dc:	mov    rsp,r11
   1400040df:	pop    r15
   1400040e1:	pop    r14
   1400040e3:	pop    r13
   1400040e5:	pop    r12
   1400040e7:	pop    rdi
   1400040e8:	ret    
   1400040e9:	int3   
   1400040ea:	int3   
   1400040eb:	int3   
   1400040ec:	int3   
   1400040ed:	int3   
   1400040ee:	int3   
   1400040ef:	int3   
   1400040f0:	rex push rbp
   1400040f2:	sub    rsp,0x20
   1400040f6:	mov    rbp,rdx
   1400040f9:	mov    rcx,QWORD PTR [rbp+0xa0]
   140004100:	add    rcx,0x498
   140004107:	call   0x140003de0
   14000410c:	add    rsp,0x20
   140004110:	pop    rbp
   140004111:	ret    
   140004112:	int3   
   140004113:	int3   
   140004114:	int3   
   140004115:	int3   
   140004116:	int3   
   140004117:	int3   
   140004118:	int3   
   140004119:	int3   
   14000411a:	int3   
   14000411b:	int3   
   14000411c:	int3   
   14000411d:	int3   
   14000411e:	int3   
   14000411f:	int3   
   140004120:	mov    rax,rsp
   140004123:	sub    rsp,0x68
   140004127:	cmp    QWORD PTR [rcx+0x490],0x0
   14000412f:	mov    QWORD PTR [rax+0x10],rbx
   140004133:	mov    QWORD PTR [rax+0x18],rbp
   140004137:	mov    QWORD PTR [rax+0x20],rsi
   14000413b:	mov    QWORD PTR [rax-0x8],rdi
   14000413f:	mov    QWORD PTR [rax-0x18],r13
   140004143:	mov    rsi,rcx
   140004146:	je     0x14000416a
   140004148:	mov    rcx,QWORD PTR [rcx+0x440]
   14000414f:	test   rcx,rcx
   140004152:	je     0x14000416a
   140004154:	call   QWORD PTR [rip+0x3f3fe]        # 0x140043558
   14000415a:	mov    rcx,QWORD PTR [rsi+0x490]
   140004161:	or     edx,0xffffffff
   140004164:	call   QWORD PTR [rip+0x3f426]        # 0x140043590
   14000416a:	mov    rbx,rsi
   14000416d:	mov    edi,0x5c04
   140004172:	mov    ebp,0x22
   140004177:	xor    r13d,r13d
   14000417a:	mov    QWORD PTR [rsp+0x58],r12
   14000417f:	nop
   140004180:	cmp    QWORD PTR [rbx],r13
   140004183:	je     0x140004222
   140004189:	cmp    QWORD PTR [rbx+0x10],r13
   14000418d:	je     0x140004219
   140004193:	mov    rax,QWORD PTR [rbx+0x10]
   140004197:	lea    rcx,[rsp+0x40]
   14000419c:	xor    r9d,r9d
   14000419f:	mov    QWORD PTR [rcx],rax
   1400041a2:	mov    rax,QWORD PTR [rbx+0x18]
   1400041a6:	mov    QWORD PTR [rsp+0x30],r13
   1400041ab:	mov    QWORD PTR [rcx+0x8],rax
   1400041af:	mov    rcx,QWORD PTR [rsi+0x498]
   1400041b6:	lea    r8d,[r9+0x3]
   1400041ba:	mov    edx,0xc0000000
   1400041bf:	mov    DWORD PTR [rsp+0x28],r13d
   1400041c4:	mov    DWORD PTR [rsp+0x20],0x3
   1400041cc:	call   QWORD PTR [rip+0x3f3ae]        # 0x140043580
   1400041d2:	cmp    rax,0xffffffffffffffff
   1400041d6:	mov    r12,rax
   1400041d9:	je     0x140004219
   1400041db:	mov    QWORD PTR [rsp+0x38],r13
   1400041e0:	lea    rax,[rsp+0x70]
   1400041e5:	mov    edx,edi
   1400041e7:	mov    QWORD PTR [rsp+0x30],rax
   1400041ec:	lea    r8,[rsp+0x40]
   1400041f1:	mov    r9d,0x10
   1400041f7:	or     edx,0x220000
   1400041fd:	mov    rcx,r12
   140004200:	mov    DWORD PTR [rsp+0x28],r13d
   140004205:	mov    QWORD PTR [rsp+0x20],r13
   14000420a:	call   QWORD PTR [rip+0x3f368]        # 0x140043578
   140004210:	mov    rcx,r12
   140004213:	call   QWORD PTR [rip+0x3f36f]        # 0x140043588
   140004219:	mov    rcx,QWORD PTR [rbx]
   14000421c:	call   QWORD PTR [rip+0x3f366]        # 0x140043588
   140004222:	add    edi,0xc
   140004225:	add    rbx,0x20
   140004229:	sub    rbp,0x1
   14000422d:	jne    0x140004180
   140004233:	mov    rcx,QWORD PTR [rsi+0x440]
   14000423a:	mov    r13,QWORD PTR [rsp+0x50]
   14000423f:	mov    r12,QWORD PTR [rsp+0x58]
   140004244:	test   rcx,rcx
   140004247:	mov    rdi,QWORD PTR [rsp+0x60]
   14000424c:	mov    rbp,QWORD PTR [rsp+0x80]
   140004254:	mov    rbx,QWORD PTR [rsp+0x78]
   140004259:	je     0x140004261
   14000425b:	call   QWORD PTR [rip+0x3f327]        # 0x140043588
   140004261:	mov    rdx,QWORD PTR [rsi+0x498]
   140004268:	sub    rdx,0x18
   14000426c:	or     eax,0xffffffff
   14000426f:	lock xadd DWORD PTR [rdx+0x10],eax
   140004274:	mov    rsi,QWORD PTR [rsp+0x88]
   14000427c:	add    eax,0xffffffff
   14000427f:	test   eax,eax
   140004281:	jg     0x14000428c
   140004283:	mov    rcx,QWORD PTR [rdx]
   140004286:	mov    rax,QWORD PTR [rcx]
   140004289:	call   QWORD PTR [rax+0x8]
   14000428c:	add    rsp,0x68
   140004290:	ret    
   140004291:	int3   
   140004292:	int3   
   140004293:	int3   
   140004294:	int3   
   140004295:	int3   
   140004296:	int3   
   140004297:	int3   
   140004298:	int3   
   140004299:	int3   
   14000429a:	int3   
   14000429b:	int3   
   14000429c:	int3   
   14000429d:	int3   
   14000429e:	int3   
   14000429f:	int3   
   1400042a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400042a5:	push   rdi
   1400042a6:	sub    rsp,0x140
   1400042ad:	mov    rdi,rcx
   1400042b0:	xor    r9d,r9d
   1400042b3:	xor    r8d,r8d
   1400042b6:	xor    ecx,ecx
   1400042b8:	xor    edx,edx
   1400042ba:	call   QWORD PTR [rip+0x3f2a8]        # 0x140043568
   1400042c0:	xor    edx,edx
   1400042c2:	lea    r8,[rsp+0x20]
   1400042c7:	mov    rbx,rax
   1400042ca:	mov    r9,rdi
   1400042cd:	data16 xchg ax,ax
   1400042d0:	cmp    edx,0x17
   1400042d3:	jne    0x1400042da
   1400042d5:	mov    QWORD PTR [r8],rbx
   1400042d8:	jmp    0x1400042e0
   1400042da:	mov    rax,QWORD PTR [r9]
   1400042dd:	mov    QWORD PTR [r8],rax
   1400042e0:	add    edx,0x1
   1400042e3:	add    r9,0x20
   1400042e7:	add    r8,0x8
   1400042eb:	cmp    edx,0x22
   1400042ee:	jbe    0x1400042d0
   1400042f0:	xor    r8d,r8d
   1400042f3:	lea    rdx,[rsp+0x20]
   1400042f8:	or     r9d,0xffffffff
   1400042fc:	lea    ecx,[r8+0x23]
   140004300:	call   QWORD PTR [rip+0x3f26a]        # 0x140043570
   140004306:	cmp    eax,0x22
   140004309:	je     0x140004344
   14000430b:	xchg   ax,ax
   14000430d:	data16 xchg ax,ax
   140004310:	mov    edx,DWORD PTR [rdi+0x480]
   140004316:	mov    rcx,QWORD PTR [rdi+0x488]
   14000431d:	mov    r8d,eax
   140004320:	xor    r9d,r9d
   140004323:	call   QWORD PTR [rip+0x3f6cf]        # 0x1400439f8
   140004329:	xor    r8d,r8d
   14000432c:	lea    rdx,[rsp+0x20]
   140004331:	lea    ecx,[r8+0x23]
   140004335:	or     r9d,0xffffffff
   140004339:	call   QWORD PTR [rip+0x3f231]        # 0x140043570
   14000433f:	cmp    eax,0x22
   140004342:	jne    0x140004310
   140004344:	test   rbx,rbx
   140004347:	je     0x140004352
   140004349:	mov    rcx,rbx
   14000434c:	call   QWORD PTR [rip+0x3f236]        # 0x140043588
   140004352:	xor    eax,eax
   140004354:	mov    rbx,QWORD PTR [rsp+0x150]
   14000435c:	add    rsp,0x140
   140004363:	pop    rdi
   140004364:	ret    
   140004365:	int3   
   140004366:	int3   
   140004367:	int3   
   140004368:	int3   
   140004369:	int3   
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	sub    rsp,0x28
   140004374:	mov    r8d,edx
   140004377:	mov    rdx,QWORD PTR [rcx]
   14000437a:	mov    eax,DWORD PTR [rdx-0x10]
   14000437d:	cmp    eax,r8d
   140004380:	cmovg  r8d,eax
   140004384:	cmp    DWORD PTR [rdx-0x8],0x1
   140004388:	jle    0x140004396
   14000438a:	mov    edx,r8d
   14000438d:	add    rsp,0x28
   140004391:	jmp    0x1400043d0
   140004396:	mov    edx,DWORD PTR [rdx-0xc]
   140004399:	cmp    edx,r8d
   14000439c:	jge    0x1400043ca
   14000439e:	cmp    edx,0x400
   1400043a4:	jle    0x1400043bc
   1400043a6:	add    edx,0x400
   1400043ac:	cmp    edx,r8d
   1400043af:	cmovl  edx,r8d
   1400043b3:	add    rsp,0x28
   1400043b7:	jmp    0x140004490
   1400043bc:	add    edx,edx
   1400043be:	cmp    edx,r8d
   1400043c1:	cmovl  edx,r8d
   1400043c5:	call   0x140004490
   1400043ca:	add    rsp,0x28
   1400043ce:	ret    
   1400043cf:	int3   
   1400043d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400043d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400043da:	mov    QWORD PTR [rsp+0x18],rsi
   1400043df:	mov    QWORD PTR [rsp+0x20],rdi
   1400043e4:	push   r12
   1400043e6:	sub    rsp,0x20
   1400043ea:	mov    rbx,QWORD PTR [rcx]
   1400043ed:	mov    rsi,rcx
   1400043f0:	mov    edi,edx
   1400043f2:	mov    rcx,QWORD PTR [rbx-0x18]
   1400043f6:	mov    ebp,DWORD PTR [rbx-0x10]
   1400043f9:	mov    rax,QWORD PTR [rcx]
   1400043fc:	call   QWORD PTR [rax+0x20]
   1400043ff:	mov    r8d,0x2
   140004405:	mov    edx,edi
   140004407:	mov    r9,QWORD PTR [rax]
   14000440a:	mov    rcx,rax
   14000440d:	call   QWORD PTR [r9]
   140004410:	test   rax,rax
   140004413:	mov    r12,rax
   140004416:	jne    0x14000441e
   140004418:	call   0x140004480
   14000441d:	int3   
   14000441e:	cmp    ebp,edi
   140004420:	mov    r8,rbx
   140004423:	cmovl  edi,ebp
   140004426:	add    edi,0x1
   140004429:	movsxd rdx,edi
   14000442c:	lea    rdi,[rax+0x18]
   140004430:	add    rdx,rdx
   140004433:	mov    rcx,rdi
   140004436:	mov    r9,rdx
   140004439:	call   0x140029bf0
   14000443e:	mov    DWORD PTR [r12+0x8],ebp
   140004443:	or     eax,0xffffffff
   140004446:	lock xadd DWORD PTR [rbx-0x8],eax
   14000444b:	add    eax,0xffffffff
   14000444e:	test   eax,eax
   140004450:	jg     0x140004460
   140004452:	mov    rcx,QWORD PTR [rbx-0x18]
   140004456:	lea    rdx,[rbx-0x18]
   14000445a:	mov    rax,QWORD PTR [rcx]
   14000445d:	call   QWORD PTR [rax+0x8]
   140004460:	mov    rbx,QWORD PTR [rsp+0x30]
   140004465:	mov    rbp,QWORD PTR [rsp+0x38]
   14000446a:	mov    QWORD PTR [rsi],rdi
   14000446d:	mov    rsi,QWORD PTR [rsp+0x40]
   140004472:	mov    rdi,QWORD PTR [rsp+0x48]
   140004477:	add    rsp,0x20
   14000447b:	pop    r12
   14000447d:	ret    
   14000447e:	int3   
   14000447f:	int3   
   140004480:	sub    rsp,0x28
   140004484:	mov    ecx,0x8007000e
   140004489:	call   0x140003dc0
   14000448e:	int3   
   14000448f:	int3   
   140004490:	rex push rbx
   140004492:	sub    rsp,0x20
   140004496:	mov    r8d,edx
   140004499:	mov    rdx,QWORD PTR [rcx]
   14000449c:	mov    rbx,rcx
   14000449f:	mov    rcx,QWORD PTR [rdx-0x18]
   1400044a3:	sub    rdx,0x18
   1400044a7:	cmp    DWORD PTR [rdx+0xc],r8d
   1400044ab:	jge    0x1400044d6
   1400044ad:	test   r8d,r8d
   1400044b0:	jle    0x1400044d6
   1400044b2:	mov    rax,QWORD PTR [rcx]
   1400044b5:	mov    r9d,0x2
   1400044bb:	call   QWORD PTR [rax+0x10]
   1400044be:	test   rax,rax
   1400044c1:	jne    0x1400044c9
   1400044c3:	call   0x140004480
   1400044c8:	int3   
   1400044c9:	add    rax,0x18
   1400044cd:	mov    QWORD PTR [rbx],rax
   1400044d0:	add    rsp,0x20
   1400044d4:	pop    rbx
   1400044d5:	ret    
   1400044d6:	call   0x140004480
   1400044db:	int3   
   1400044dc:	int3   
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400044e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400044ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400044ef:	push   rdi
   1400044f0:	push   r12
   1400044f2:	push   r13
   1400044f4:	sub    rsp,0x20
   1400044f8:	mov    rax,QWORD PTR [rcx]
   1400044fb:	mov    rsi,rdx
   1400044fe:	mov    r9d,0x1
   140004504:	mov    r12d,DWORD PTR [rax-0x10]
   140004508:	sub    r9d,DWORD PTR [rax-0x8]
   14000450c:	sub    rsi,rax
   14000450f:	mov    eax,DWORD PTR [rax-0xc]
   140004512:	movsxd r13,r8d
   140004515:	sar    rsi,1
   140004518:	lea    ebx,[r12+r13*1]
   14000451c:	mov    rbp,rdx
   14000451f:	mov    rdi,rcx
   140004522:	sub    eax,ebx
   140004524:	or     r9d,eax
   140004527:	jge    0x140004530
   140004529:	mov    edx,ebx
   14000452b:	call   0x140004370
   140004530:	cmp    rsi,r12
   140004533:	mov    rax,QWORD PTR [rdi]
   140004536:	ja     0x14000453c
   140004538:	lea    rbp,[rax+rsi*2]
   14000453c:	mov    rdx,r13
   14000453f:	lea    rcx,[rax+r12*2]
   140004543:	mov    r8,rbp
   140004546:	add    rdx,rdx
   140004549:	mov    r9,rdx
   14000454c:	call   0x140029bf0
   140004551:	test   ebx,ebx
   140004553:	js     0x140004585
   140004555:	mov    rax,QWORD PTR [rdi]
   140004558:	cmp    ebx,DWORD PTR [rax-0xc]
   14000455b:	jg     0x140004585
   14000455d:	mov    rbp,QWORD PTR [rsp+0x48]
   140004562:	mov    rsi,QWORD PTR [rsp+0x50]
   140004567:	mov    DWORD PTR [rax-0x10],ebx
   14000456a:	mov    rax,QWORD PTR [rdi]
   14000456d:	movsxd rcx,ebx
   140004570:	mov    rbx,QWORD PTR [rsp+0x40]
   140004575:	mov    WORD PTR [rax+rcx*2],0x0
   14000457b:	add    rsp,0x20
   14000457f:	pop    r13
   140004581:	pop    r12
   140004583:	pop    rdi
   140004584:	ret    
   140004585:	mov    ecx,0x80070057
   14000458a:	call   0x140003dc0
   14000458f:	int3   
   140004590:	mov    QWORD PTR [rsp+0x18],rbx
   140004595:	mov    QWORD PTR [rsp+0x20],rbp
   14000459a:	push   rdi
   14000459b:	sub    rsp,0x20
   14000459f:	test   r8d,r8d
   1400045a2:	movsxd rdi,r8d
   1400045a5:	mov    rbp,rdx
   1400045a8:	mov    rbx,rcx
   1400045ab:	jne    0x140004634
   1400045b1:	mov    rax,QWORD PTR [rcx]
   1400045b4:	cmp    DWORD PTR [rax-0x10],r8d
   1400045b8:	mov    rdi,QWORD PTR [rax-0x18]
   1400045bc:	lea    rdx,[rax-0x18]
   1400045c0:	je     0x1400046c9
   1400045c6:	cmp    DWORD PTR [rdx+0x10],r8d
   1400045ca:	jge    0x1400045fc
   1400045cc:	cmp    DWORD PTR [rax-0xc],r8d
   1400045d0:	jge    0x1400045dd
   1400045d2:	mov    ecx,0x80070057
   1400045d7:	call   0x140003dc0
   1400045dc:	int3   
   1400045dd:	mov    DWORD PTR [rax-0x10],0x0
   1400045e4:	mov    rax,QWORD PTR [rcx]
   1400045e7:	mov    WORD PTR [rax],0x0
   1400045ec:	mov    rbx,QWORD PTR [rsp+0x40]
   1400045f1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400045f6:	add    rsp,0x20
   1400045fa:	pop    rdi
   1400045fb:	ret    
   1400045fc:	or     eax,0xffffffff
   1400045ff:	lock xadd DWORD PTR [rdx+0x10],eax
   140004604:	add    eax,0xffffffff
   140004607:	test   eax,eax
   140004609:	jg     0x140004614
   14000460b:	mov    rcx,QWORD PTR [rdx]
   14000460e:	mov    rax,QWORD PTR [rcx]
   140004611:	call   QWORD PTR [rax+0x8]
   140004614:	mov    rax,QWORD PTR [rdi]
   140004617:	mov    rcx,rdi
   14000461a:	call   QWORD PTR [rax+0x18]
   14000461d:	add    rax,0x18
   140004621:	mov    QWORD PTR [rbx],rax
   140004624:	mov    rbx,QWORD PTR [rsp+0x40]
   140004629:	mov    rbp,QWORD PTR [rsp+0x48]
   14000462e:	add    rsp,0x20
   140004632:	pop    rdi
   140004633:	ret    
   140004634:	test   rdx,rdx
   140004637:	jne    0x140004644
   140004639:	mov    ecx,0x80070057
   14000463e:	call   0x140003dc0
   140004643:	int3   
   140004644:	mov    rax,QWORD PTR [rcx]
   140004647:	mov    QWORD PTR [rsp+0x30],rsi
   14000464c:	mov    QWORD PTR [rsp+0x38],r12
   140004651:	mov    esi,DWORD PTR [rax-0x10]
   140004654:	mov    r12,rdx
   140004657:	mov    ecx,0x1
   14000465c:	sub    ecx,DWORD PTR [rax-0x8]
   14000465f:	sub    r12,rax
   140004662:	mov    eax,DWORD PTR [rax-0xc]
   140004665:	sub    eax,edi
   140004667:	sar    r12,1
   14000466a:	or     ecx,eax
   14000466c:	jge    0x140004678
   14000466e:	mov    edx,edi
   140004670:	mov    rcx,rbx
   140004673:	call   0x140004370
   140004678:	cmp    r12,rsi
   14000467b:	mov    rcx,QWORD PTR [rbx]
   14000467e:	ja     0x140004695
   140004680:	lea    rsi,[rdi+rdi*1]
   140004684:	lea    r8,[rcx+r12*2]
   140004688:	mov    r9,rsi
   14000468b:	mov    rdx,rsi
   14000468e:	call   0x140029b60
   140004693:	jmp    0x1400046a7
   140004695:	lea    rsi,[rdi+rdi*1]
   140004699:	mov    r8,rbp
   14000469c:	mov    r9,rsi
   14000469f:	mov    rdx,rsi
   1400046a2:	call   0x140029bf0
   1400046a7:	test   edi,edi
   1400046a9:	mov    r12,QWORD PTR [rsp+0x38]
   1400046ae:	js     0x1400046d9
   1400046b0:	mov    rax,QWORD PTR [rbx]
   1400046b3:	cmp    edi,DWORD PTR [rax-0xc]
   1400046b6:	jg     0x1400046d9
   1400046b8:	mov    DWORD PTR [rax-0x10],edi
   1400046bb:	mov    rax,QWORD PTR [rbx]
   1400046be:	mov    WORD PTR [rsi+rax*1],0x0
   1400046c4:	mov    rsi,QWORD PTR [rsp+0x30]
   1400046c9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400046ce:	mov    rbp,QWORD PTR [rsp+0x48]
   1400046d3:	add    rsp,0x20
   1400046d7:	pop    rdi
   1400046d8:	ret    
   1400046d9:	mov    ecx,0x80070057
   1400046de:	call   0x140003dc0
   1400046e3:	int3   
   1400046e4:	int3   
   1400046e5:	int3   
   1400046e6:	int3   
   1400046e7:	int3   
   1400046e8:	int3   
   1400046e9:	int3   
   1400046ea:	int3   
   1400046eb:	int3   
   1400046ec:	int3   
   1400046ed:	int3   
   1400046ee:	int3   
   1400046ef:	int3   
   1400046f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400046f5:	push   rdi
   1400046f6:	sub    rsp,0x20
   1400046fa:	mov    rax,QWORD PTR [rcx]
   1400046fd:	mov    rbx,rcx
   140004700:	cmp    DWORD PTR [rax-0x10],0x0
   140004704:	mov    rdi,QWORD PTR [rax-0x18]
   140004708:	lea    rdx,[rax-0x18]
   14000470c:	je     0x140004767
   14000470e:	cmp    DWORD PTR [rdx+0x10],0x0
   140004712:	jge    0x14000473f
   140004714:	cmp    DWORD PTR [rax-0xc],0x0
   140004718:	jge    0x140004725
   14000471a:	mov    ecx,0x80070057
   14000471f:	call   0x140003dc0
   140004724:	int3   
   140004725:	mov    DWORD PTR [rax-0x10],0x0
   14000472c:	mov    rax,QWORD PTR [rcx]
   14000472f:	mov    WORD PTR [rax],0x0
   140004734:	mov    rbx,QWORD PTR [rsp+0x30]
   140004739:	add    rsp,0x20
   14000473d:	pop    rdi
   14000473e:	ret    
   14000473f:	or     eax,0xffffffff
   140004742:	lock xadd DWORD PTR [rdx+0x10],eax
   140004747:	add    eax,0xffffffff
   14000474a:	test   eax,eax
   14000474c:	jg     0x140004757
   14000474e:	mov    rcx,QWORD PTR [rdx]
   140004751:	mov    rax,QWORD PTR [rcx]
   140004754:	call   QWORD PTR [rax+0x8]
   140004757:	mov    rax,QWORD PTR [rdi]
   14000475a:	mov    rcx,rdi
   14000475d:	call   QWORD PTR [rax+0x18]
   140004760:	add    rax,0x18
   140004764:	mov    QWORD PTR [rbx],rax
   140004767:	mov    rbx,QWORD PTR [rsp+0x30]
   14000476c:	add    rsp,0x20
   140004770:	pop    rdi
   140004771:	ret    
   140004772:	int3   
   140004773:	int3   
   140004774:	int3   
   140004775:	int3   
   140004776:	int3   
   140004777:	int3   
   140004778:	int3   
   140004779:	int3   
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	int3   
   14000477d:	int3   
   14000477e:	int3   
   14000477f:	int3   
   140004780:	lea    rax,[rip+0x46139]        # 0x14004a8c0
   140004787:	ret    
   140004788:	int3   
   140004789:	int3   
   14000478a:	int3   
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	mov    QWORD PTR [rsp+0x8],rcx
   140004795:	push   rbp
   140004796:	push   rsi
   140004797:	push   rdi
   140004798:	sub    rsp,0x30
   14000479c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400047a5:	mov    QWORD PTR [rsp+0x58],rbx
   1400047aa:	mov    edi,edx
   1400047ac:	mov    rsi,rcx
   1400047af:	lea    rax,[rip+0x461d2]        # 0x14004a988
   1400047b6:	mov    QWORD PTR [rcx],rax
   1400047b9:	lea    rbx,[rcx+0xe8]
   1400047c0:	mov    QWORD PTR [rsp+0x60],rbx
   1400047c5:	lea    rax,[rip+0x4681c]        # 0x14004afe8
   1400047cc:	mov    QWORD PTR [rbx],rax
   1400047cf:	lea    rcx,[rbx+0x20]
   1400047d3:	lea    rbp,[rip+0x4364e]        # 0x140047e28
   1400047da:	mov    QWORD PTR [rcx],rbp
   1400047dd:	call   0x140005860
   1400047e2:	nop
   1400047e3:	lea    rcx,[rbx+0x10]
   1400047e7:	mov    QWORD PTR [rcx],rbp
   1400047ea:	call   0x140005860
   1400047ef:	nop
   1400047f0:	mov    rcx,rsi
   1400047f3:	call   0x14001d2ac
   1400047f8:	test   dil,0x1
   1400047fc:	je     0x14000480b
   1400047fe:	mov    rcx,rsi
   140004801:	call   0x14001490c
   140004806:	mov    rax,rsi
   140004809:	jmp    0x14000480e
   14000480b:	mov    rax,rsi
   14000480e:	mov    rbx,QWORD PTR [rsp+0x58]
   140004813:	add    rsp,0x30
   140004817:	pop    rdi
   140004818:	pop    rsi
   140004819:	pop    rbp
   14000481a:	ret    
   14000481b:	int3   
   14000481c:	int3   
   14000481d:	int3   
   14000481e:	int3   
   14000481f:	int3   
   140004820:	rex push rbp
   140004822:	sub    rsp,0x20
   140004826:	mov    rbp,rdx
   140004829:	mov    rcx,QWORD PTR [rbp+0x50]
   14000482d:	call   0x14001d2ac
   140004832:	add    rsp,0x20
   140004836:	pop    rbp
   140004837:	ret    
   140004838:	int3   
   140004839:	int3   
   14000483a:	int3   
   14000483b:	int3   
   14000483c:	int3   
   14000483d:	int3   
   14000483e:	int3   
   14000483f:	int3   
   140004840:	rex push rbp
   140004842:	sub    rsp,0x20
   140004846:	mov    rbp,rdx
   140004849:	mov    rcx,QWORD PTR [rbp+0x60]
   14000484d:	add    rcx,0x10
   140004851:	call   0x140007190
   140004856:	add    rsp,0x20
   14000485a:	pop    rbp
   14000485b:	ret    
   14000485c:	int3   
   14000485d:	int3   
   14000485e:	int3   
   14000485f:	int3   
   140004860:	lea    rax,[rip+0x46109]        # 0x14004a970
   140004867:	ret    
   140004868:	int3   
   140004869:	int3   
   14000486a:	int3   
   14000486b:	int3   
   14000486c:	int3   
   14000486d:	int3   
   14000486e:	int3   
   14000486f:	int3   
   140004870:	mov    QWORD PTR [rsp+0x8],rbx
   140004875:	push   rdi
   140004876:	sub    rsp,0x20
   14000487a:	mov    rdi,rcx
   14000487d:	call   0x14001d8b8
   140004882:	mov    WORD PTR [rdi+0x11c],0x409
   14000488b:	call   QWORD PTR [rip+0x3ec67]        # 0x1400434f8
   140004891:	test   ax,ax
   140004894:	movzx  r11d,ax
   140004898:	je     0x140004936
   14000489e:	lea    r10,[rip+0x58143]        # 0x14005c9e8
   1400048a5:	movzx  r9d,r11w
   1400048a9:	xor    edx,edx
   1400048ab:	mov    r8,r10
   1400048ae:	mov    ax,0x409
   1400048b2:	and    r9w,0x3ff
   1400048b8:	data16 data16 xchg ax,ax
   1400048bc:	data16 data16 xchg ax,ax
   1400048c0:	movzx  ecx,WORD PTR [r8]
   1400048c4:	and    cx,0x3ff
   1400048c9:	cmp    r9w,cx
   1400048cd:	je     0x1400048dd
   1400048cf:	add    edx,0x1
   1400048d2:	add    r8,0x10
   1400048d6:	cmp    edx,0x1a
   1400048d9:	jb     0x1400048c0
   1400048db:	jmp    0x1400048e9
   1400048dd:	movsxd rax,edx
   1400048e0:	shl    rax,0x4
   1400048e4:	mov    ax,WORD PTR [rax+r10*1]
   1400048e9:	mov    cx,r11w
   1400048ed:	and    ecx,0x3ff
   1400048f3:	cmp    ecx,0x4
   1400048f6:	je     0x140004915
   1400048f8:	cmp    ecx,0x16
   1400048fb:	jne    0x14000492f
   1400048fd:	and    r11w,0xfc00
   140004903:	mov    eax,0x816
   140004908:	mov    ecx,0x416
   14000490d:	cmp    r11w,0x400
   140004913:	jmp    0x14000492b
   140004915:	and    r11w,0xfc00
   14000491b:	mov    eax,0x404
   140004920:	mov    ecx,0x804
   140004925:	cmp    r11w,0x800
   14000492b:	cmove  ax,cx
   14000492f:	mov    WORD PTR [rdi+0x11c],ax
   140004936:	movzx  eax,WORD PTR [rdi+0x11c]
   14000493d:	mov    r8d,0x139a
   140004943:	mov    rdx,rdi
   140004946:	mov    rcx,rdi
   140004949:	mov    DWORD PTR [rdi+0xf0],0x1
   140004953:	mov    WORD PTR [rdi+0xf4],ax
   14000495a:	call   0x1400049a0
   14000495f:	cmp    DWORD PTR [rdi+0x124],0x0
   140004966:	mov    ecx,0x13b3
   14000496b:	mov    ebx,0x139b
   140004970:	mov    edx,0x3f9
   140004975:	cmovne ebx,ecx
   140004978:	mov    rcx,rdi
   14000497b:	call   0x14001fe30
   140004980:	mov    r8d,ebx
   140004983:	mov    rcx,rdi
   140004986:	mov    rdx,rax
   140004989:	call   0x1400049a0
   14000498e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004993:	mov    eax,0x1
   140004998:	add    rsp,0x20
   14000499c:	pop    rdi
   14000499d:	ret    
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	test   rdx,rdx
   1400049a3:	je     0x140004c1e
   1400049a9:	push   rdi
   1400049aa:	push   r12
   1400049ac:	push   r13
   1400049ae:	push   r14
   1400049b0:	push   r15
   1400049b2:	sub    rsp,0x30
   1400049b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400049bf:	mov    QWORD PTR [rsp+0x60],rbx
   1400049c4:	mov    QWORD PTR [rsp+0x70],rbp
   1400049c9:	mov    QWORD PTR [rsp+0x78],rsi
   1400049ce:	mov    r14d,r8d
   1400049d1:	mov    r13,rdx
   1400049d4:	mov    r15,rcx
   1400049d7:	call   0x14002157c
   1400049dc:	mov    rcx,rax
   1400049df:	xor    ebx,ebx
   1400049e1:	mov    eax,ebx
   1400049e3:	test   rcx,rcx
   1400049e6:	setne  al
   1400049e9:	test   eax,eax
   1400049eb:	jne    0x1400049f8
   1400049ed:	mov    ecx,0x80004005
   1400049f2:	call   0x140003dc0
   1400049f7:	int3   
   1400049f8:	mov    rax,QWORD PTR [rcx]
   1400049fb:	call   QWORD PTR [rax+0x18]
   1400049fe:	lea    rsi,[rax+0x18]
   140004a02:	mov    QWORD PTR [rsp+0x68],rsi
   140004a07:	lea    rdx,[rsi-0x18]
   140004a0b:	mov    rdi,QWORD PTR [rdx]
   140004a0e:	or     rbp,0xffffffffffffffff
   140004a12:	cmp    DWORD PTR [rdx+0x8],0x0
   140004a16:	je     0x140004a62
   140004a18:	cmp    DWORD PTR [rdx+0x10],0x0
   140004a1c:	jge    0x140004a39
   140004a1e:	cmp    DWORD PTR [rsi-0xc],0x0
   140004a22:	jge    0x140004a2f
   140004a24:	mov    ecx,0x80070057
   140004a29:	call   0x140003dc0
   140004a2e:	int3   
   140004a2f:	mov    DWORD PTR [rsi-0x10],ebx
   140004a32:	mov    WORD PTR [rsi],0x0
   140004a37:	jmp    0x140004a62
   140004a39:	mov    eax,ebp
   140004a3b:	lock xadd DWORD PTR [rdx+0x10],eax
   140004a40:	add    eax,0xffffffff
   140004a43:	test   eax,eax
   140004a45:	jg     0x140004a50
   140004a47:	mov    rcx,QWORD PTR [rdx]
   140004a4a:	mov    rax,QWORD PTR [rcx]
   140004a4d:	call   QWORD PTR [rax+0x8]
   140004a50:	mov    rax,QWORD PTR [rdi]
   140004a53:	mov    rcx,rdi
   140004a56:	call   QWORD PTR [rax+0x18]
   140004a59:	lea    rsi,[rax+0x18]
   140004a5d:	mov    QWORD PTR [rsp+0x68],rsi
   140004a62:	xor    eax,eax
   140004a64:	mov    rcx,rbp
   140004a67:	lea    rdi,[rip+0x45e3a]        # 0x14004a8a8
   140004a6e:	repnz scas ax,WORD PTR es:[rdi]
   140004a71:	not    rcx
   140004a74:	sub    rcx,0x1
   140004a78:	mov    rdi,rcx
   140004a7b:	test   ecx,ecx
   140004a7d:	jne    0x140004add
   140004a7f:	lea    rdx,[rsi-0x18]
   140004a83:	mov    rdi,QWORD PTR [rdx]
   140004a86:	cmp    DWORD PTR [rdx+0x8],eax
   140004a89:	je     0x140004b65
   140004a8f:	cmp    DWORD PTR [rdx+0x10],eax
   140004a92:	jge    0x140004aaf
   140004a94:	cmp    DWORD PTR [rsi-0xc],eax
   140004a97:	jge    0x140004aa4
   140004a99:	mov    ecx,0x80070057
   140004a9e:	call   0x140003dc0
   140004aa3:	int3   
   140004aa4:	mov    DWORD PTR [rsi-0x10],ebx
   140004aa7:	mov    WORD PTR [rsi],ax
   140004aaa:	jmp    0x140004b65
   140004aaf:	mov    eax,ebp
   140004ab1:	lock xadd DWORD PTR [rdx+0x10],eax
   140004ab6:	add    eax,0xffffffff
   140004ab9:	test   eax,eax
   140004abb:	jg     0x140004ac6
   140004abd:	mov    rcx,QWORD PTR [rdx]
   140004ac0:	mov    rax,QWORD PTR [rcx]
   140004ac3:	call   QWORD PTR [rax+0x8]
   140004ac6:	mov    rax,QWORD PTR [rdi]
   140004ac9:	mov    rcx,rdi
   140004acc:	call   QWORD PTR [rax+0x18]
   140004acf:	add    rax,0x18
   140004ad3:	mov    QWORD PTR [rsp+0x68],rax
   140004ad8:	jmp    0x140004b65
   140004add:	mov    ebx,DWORD PTR [rsi-0x10]
   140004ae0:	lea    r12,[rip+0x45dc1]        # 0x14004a8a8
   140004ae7:	sub    r12,rsi
   140004aea:	sar    r12,1
   140004aed:	mov    ecx,0x1
   140004af2:	sub    ecx,DWORD PTR [rsi-0x8]
   140004af5:	mov    eax,DWORD PTR [rsi-0xc]
   140004af8:	sub    eax,edi
   140004afa:	or     eax,ecx
   140004afc:	jge    0x140004b0f
   140004afe:	mov    edx,edi
   140004b00:	lea    rcx,[rsp+0x68]
   140004b05:	call   0x140004370
   140004b0a:	mov    rsi,QWORD PTR [rsp+0x68]
   140004b0f:	cmp    r12,rbx
   140004b12:	ja     0x140004b2f
   140004b14:	movsxd rax,edi
   140004b17:	lea    rbx,[rax+rax*1]
   140004b1b:	lea    r8,[rsi+r12*2]
   140004b1f:	mov    r9,rbx
   140004b22:	mov    rdx,rbx
   140004b25:	mov    rcx,rsi
   140004b28:	call   0x140029b60
   140004b2d:	jmp    0x140004b4b
   140004b2f:	movsxd rax,edi
   140004b32:	lea    rbx,[rax+rax*1]
   140004b36:	mov    r9,rbx
   140004b39:	lea    r8,[rip+0x45d68]        # 0x14004a8a8
   140004b40:	mov    rdx,rbx
   140004b43:	mov    rcx,rsi
   140004b46:	call   0x140029bf0
   140004b4b:	test   edi,edi
   140004b4d:	js     0x140004bf7
   140004b53:	cmp    edi,DWORD PTR [rsi-0xc]
   140004b56:	jg     0x140004bf7
   140004b5c:	mov    DWORD PTR [rsi-0x10],edi
   140004b5f:	mov    WORD PTR [rbx+rsi*1],0x0
   140004b65:	call   0x14001f2e8
   140004b6a:	movzx  r9d,WORD PTR [r15+0xf4]
   140004b72:	mov    r8d,r14d
   140004b75:	mov    rdx,QWORD PTR [rax+0x10]
   140004b79:	lea    rcx,[rsp+0x68]
   140004b7e:	call   0x140006d10
   140004b83:	xor    r11d,r11d
   140004b86:	lea    rdi,[rip+0x45d1b]        # 0x14004a8a8
   140004b8d:	mov    rbx,QWORD PTR [rsp+0x68]
   140004b92:	mov    rsi,rbx
   140004b95:	mov    ecx,0x1
   140004b9a:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140004b9d:	je     0x140004ba6
   140004b9f:	sbb    r11d,r11d
   140004ba2:	sbb    r11d,0xffffffff
   140004ba6:	test   r11d,r11d
   140004ba9:	sete   al
   140004bac:	test   al,al
   140004bae:	je     0x140004bd0
   140004bb0:	call   0x14001f2e8
   140004bb5:	mov    r9w,0x409
   140004bba:	mov    r8d,r14d
   140004bbd:	mov    rdx,QWORD PTR [rax+0x10]
   140004bc1:	lea    rcx,[rsp+0x68]
   140004bc6:	call   0x140006d10
   140004bcb:	mov    rbx,QWORD PTR [rsp+0x68]
   140004bd0:	mov    rdx,rbx
   140004bd3:	mov    rcx,r13
   140004bd6:	call   0x14001ffac
   140004bdb:	nop
   140004bdc:	lea    rdx,[rbx-0x18]
   140004be0:	lock xadd DWORD PTR [rdx+0x10],ebp
   140004be5:	add    ebp,0xffffffff
   140004be8:	test   ebp,ebp
   140004bea:	jg     0x140004c02
   140004bec:	mov    rcx,QWORD PTR [rdx]
   140004bef:	mov    rax,QWORD PTR [rcx]
   140004bf2:	call   QWORD PTR [rax+0x8]
   140004bf5:	jmp    0x140004c02
   140004bf7:	mov    ecx,0x80070057
   140004bfc:	call   0x140003dc0
   140004c01:	nop
   140004c02:	mov    rbx,QWORD PTR [rsp+0x60]
   140004c07:	mov    rbp,QWORD PTR [rsp+0x70]
   140004c0c:	mov    rsi,QWORD PTR [rsp+0x78]
   140004c11:	add    rsp,0x30
   140004c15:	pop    r15
   140004c17:	pop    r14
   140004c19:	pop    r13
   140004c1b:	pop    r12
   140004c1d:	pop    rdi
   140004c1e:	ret    0x0
   140004c21:	int3   
   140004c22:	int3   
   140004c23:	int3   
   140004c24:	int3   
   140004c25:	int3   
   140004c26:	int3   
   140004c27:	int3   
   140004c28:	int3   
   140004c29:	int3   
   140004c2a:	int3   
   140004c2b:	int3   
   140004c2c:	int3   
   140004c2d:	int3   
   140004c2e:	int3   
   140004c2f:	int3   
   140004c30:	rex push rbp
   140004c32:	sub    rsp,0x20
   140004c36:	mov    rbp,rdx
   140004c39:	lea    rcx,[rbp+0x68]
   140004c3d:	call   0x140003de0
   140004c42:	add    rsp,0x20
   140004c46:	pop    rbp
   140004c47:	ret    
   140004c48:	int3   
   140004c49:	int3   
   140004c4a:	int3   
   140004c4b:	int3   
   140004c4c:	int3   
   140004c4d:	int3   
   140004c4e:	int3   
   140004c4f:	int3   
   140004c50:	mov    QWORD PTR [rsp+0x8],rbx
   140004c55:	push   rdi
   140004c56:	sub    rsp,0x20
   140004c5a:	mov    rdi,rdx
   140004c5d:	mov    rbx,rcx
   140004c60:	call   0x140018d54
   140004c65:	cmp    DWORD PTR [rbx+0x120],0x0
   140004c6c:	je     0x140004c7d
   140004c6e:	or     DWORD PTR [rdi+0x20],0x40
   140004c72:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c77:	add    rsp,0x20
   140004c7b:	pop    rdi
   140004c7c:	ret    
   140004c7d:	and    DWORD PTR [rdi+0x20],0xffffffbf
   140004c81:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c86:	add    rsp,0x20
   140004c8a:	pop    rdi
   140004c8b:	ret    
   140004c8c:	int3   
   140004c8d:	int3   
   140004c8e:	int3   
   140004c8f:	int3   
   140004c90:	rex push rbx
   140004c92:	sub    rsp,0x20
   140004c96:	mov    rbx,rcx
   140004c99:	call   0x140018d54
   140004c9e:	xor    edx,edx
   140004ca0:	mov    rcx,rbx
   140004ca3:	mov    DWORD PTR [rbx+0x120],0x0
   140004cad:	add    rsp,0x20
   140004cb1:	pop    rbx
   140004cb2:	jmp    0x140020064
   140004cb7:	int3   
   140004cb8:	int3   
   140004cb9:	int3   
   140004cba:	int3   
   140004cbb:	int3   
   140004cbc:	int3   
   140004cbd:	int3   
   140004cbe:	int3   
   140004cbf:	int3   
   140004cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140004cc5:	mov    QWORD PTR [rsp+0x10],rsi
   140004cca:	push   rdi
   140004ccb:	sub    rsp,0x20
   140004ccf:	lea    rax,[rip+0x4605a]        # 0x14004ad30
   140004cd6:	mov    rbx,rcx
   140004cd9:	xor    esi,esi
   140004cdb:	mov    QWORD PTR [rcx],rax
   140004cde:	mov    rcx,QWORD PTR [rcx+0x8]
   140004ce2:	mov    edi,edx
   140004ce4:	test   rcx,rcx
   140004ce7:	je     0x140004d12
   140004ce9:	mov    QWORD PTR [rbx+0x8],rsi
   140004ced:	mov    QWORD PTR [rbx+0x10],rsi
   140004cf1:	mov    DWORD PTR [rbx+0x18],esi
   140004cf4:	mov    DWORD PTR [rbx+0x1c],esi
   140004cf7:	mov    DWORD PTR [rbx+0x24],esi
   140004cfa:	mov    DWORD PTR [rbx+0x20],esi
   140004cfd:	mov    DWORD PTR [rbx+0x2c],0xffffffff
   140004d04:	mov    BYTE PTR [rbx+0x29],sil
   140004d08:	mov    BYTE PTR [rbx+0x28],sil
   140004d0c:	call   QWORD PTR [rip+0x3e45e]        # 0x140043170
   140004d12:	lea    rcx,[rip+0x5cfb7]        # 0x140061cd0
   140004d19:	call   QWORD PTR [rip+0x3e821]        # 0x140043540
   140004d1f:	sub    DWORD PTR [rip+0x5cfd2],0x1        # 0x140061cf8
   140004d26:	jne    0x140004d5a
   140004d28:	lea    rcx,[rip+0x5cfa1]        # 0x140061cd0
   140004d2f:	call   QWORD PTR [rip+0x3e80b]        # 0x140043540
   140004d35:	mov    rcx,QWORD PTR [rip+0x5cf8c]        # 0x140061cc8
   140004d3c:	test   rcx,rcx
   140004d3f:	je     0x140004d46
   140004d41:	call   0x140040d10
   140004d46:	lea    rcx,[rip+0x5cf83]        # 0x140061cd0
   140004d4d:	mov    QWORD PTR [rip+0x5cf74],rsi        # 0x140061cc8
   140004d54:	call   QWORD PTR [rip+0x3e7de]        # 0x140043538
   140004d5a:	lea    rcx,[rip+0x5cf6f]        # 0x140061cd0
   140004d61:	call   QWORD PTR [rip+0x3e7d1]        # 0x140043538
   140004d67:	test   dil,0x1
   140004d6b:	je     0x140004d75
   140004d6d:	mov    rcx,rbx
   140004d70:	call   0x14001490c
   140004d75:	mov    rsi,QWORD PTR [rsp+0x38]
   140004d7a:	mov    rax,rbx
   140004d7d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d82:	add    rsp,0x20
   140004d86:	pop    rdi
   140004d87:	ret    
   140004d88:	int3   
   140004d89:	int3   
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	int3   
   140004d8d:	int3   
   140004d8e:	int3   
   140004d8f:	int3   
   140004d90:	rex push rbx
   140004d92:	sub    rsp,0x20
   140004d96:	lea    rax,[rip+0x45f93]        # 0x14004ad30
   140004d9d:	xor    ebx,ebx
   140004d9f:	mov    QWORD PTR [rcx],rax
   140004da2:	mov    rax,QWORD PTR [rcx+0x8]
   140004da6:	test   rax,rax
   140004da9:	je     0x140004dd5
   140004dab:	mov    QWORD PTR [rcx+0x8],rbx
   140004daf:	mov    QWORD PTR [rcx+0x10],rbx
   140004db3:	mov    DWORD PTR [rcx+0x18],ebx
   140004db6:	mov    DWORD PTR [rcx+0x1c],ebx
   140004db9:	mov    DWORD PTR [rcx+0x24],ebx
   140004dbc:	mov    DWORD PTR [rcx+0x20],ebx
   140004dbf:	mov    DWORD PTR [rcx+0x2c],0xffffffff
   140004dc6:	mov    BYTE PTR [rcx+0x29],bl
   140004dc9:	mov    BYTE PTR [rcx+0x28],bl
   140004dcc:	mov    rcx,rax
   140004dcf:	call   QWORD PTR [rip+0x3e39b]        # 0x140043170
   140004dd5:	lea    rcx,[rip+0x5cef4]        # 0x140061cd0
   140004ddc:	call   QWORD PTR [rip+0x3e75e]        # 0x140043540
   140004de2:	sub    DWORD PTR [rip+0x5cf0f],0x1        # 0x140061cf8
   140004de9:	jne    0x140004e1d
   140004deb:	lea    rcx,[rip+0x5cede]        # 0x140061cd0
   140004df2:	call   QWORD PTR [rip+0x3e748]        # 0x140043540
   140004df8:	mov    rcx,QWORD PTR [rip+0x5cec9]        # 0x140061cc8
   140004dff:	test   rcx,rcx
   140004e02:	je     0x140004e09
   140004e04:	call   0x140040d10
   140004e09:	lea    rcx,[rip+0x5cec0]        # 0x140061cd0
   140004e10:	mov    QWORD PTR [rip+0x5ceb1],rbx        # 0x140061cc8
   140004e17:	call   QWORD PTR [rip+0x3e71b]        # 0x140043538
   140004e1d:	lea    rcx,[rip+0x5ceac]        # 0x140061cd0
   140004e24:	add    rsp,0x20
   140004e28:	pop    rbx
   140004e29:	rex.W jmp QWORD PTR [rip+0x3e708]        # 0x140043538
   140004e30:	mov    QWORD PTR [rsp+0x8],rbx
   140004e35:	mov    QWORD PTR [rsp+0x10],rbp
   140004e3a:	mov    QWORD PTR [rsp+0x18],rsi
   140004e3f:	push   rdi
   140004e40:	push   r12
   140004e42:	push   r13
   140004e44:	sub    rsp,0x40
   140004e48:	mov    rbp,rdx
   140004e4b:	movzx  edx,r8w
   140004e4f:	mov    rsi,rcx
   140004e52:	xor    r13d,r13d
   140004e55:	lea    r8,[rip+0x45374]        # 0x14004a1d0
   140004e5c:	mov    rcx,rbp
   140004e5f:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140004e64:	mov    rbx,r13
   140004e67:	mov    QWORD PTR [rsp+0x20],r13
   140004e6c:	call   QWORD PTR [rip+0x3e6be]        # 0x140043530
   140004e72:	test   rax,rax
   140004e75:	mov    r12,rax
   140004e78:	je     0x140005001
   140004e7e:	mov    rdx,rax
   140004e81:	mov    rcx,rbp
   140004e84:	call   QWORD PTR [rip+0x3e69e]        # 0x140043528
   140004e8a:	test   eax,eax
   140004e8c:	mov    edi,eax
   140004e8e:	je     0x140005001
   140004e94:	mov    rdx,r12
   140004e97:	mov    rcx,rbp
   140004e9a:	call   QWORD PTR [rip+0x3e678]        # 0x140043518
   140004ea0:	mov    rcx,rax
   140004ea3:	call   QWORD PTR [rip+0x3e677]        # 0x140043520
   140004ea9:	test   rax,rax
   140004eac:	mov    rbp,rax
   140004eaf:	je     0x140005001
   140004eb5:	lea    ecx,[r13+0x2]
   140004eb9:	mov    rdx,rdi
   140004ebc:	call   QWORD PTR [rip+0x3e64e]        # 0x140043510
   140004ec2:	test   rax,rax
   140004ec5:	mov    rbx,rax
   140004ec8:	je     0x140005001
   140004ece:	mov    rcx,rax
   140004ed1:	call   QWORD PTR [rip+0x3e631]        # 0x140043508
   140004ed7:	test   rax,rax
   140004eda:	movsd  xmm6,QWORD PTR [rip+0x486f6]        # 0x14004d5d8
   140004ee2:	je     0x140004fa4
   140004ee8:	mov    r8,rdi
   140004eeb:	mov    rdx,rbp
   140004eee:	mov    rcx,rax
   140004ef1:	call   0x14002b7a0
   140004ef6:	lea    r8,[rsp+0x20]
   140004efb:	xor    edx,edx
   140004efd:	mov    rcx,rbx
   140004f00:	mov    QWORD PTR [rsp+0x20],r13
   140004f05:	call   QWORD PTR [rip+0x3ebd5]        # 0x140043ae0
   140004f0b:	test   eax,eax
   140004f0d:	js     0x140005001
   140004f13:	mov    rdx,QWORD PTR [rsp+0x20]
   140004f18:	mov    rcx,rsi
   140004f1b:	call   0x140005b50
   140004f20:	test   eax,eax
   140004f22:	js     0x140005001
   140004f28:	movsd  xmm0,QWORD PTR [rip+0x57c50]        # 0x14005cb80
   140004f30:	ucomisd xmm0,xmm6
   140004f34:	jp     0x140004f48
   140004f36:	jne    0x140004f48
   140004f38:	movsd  xmm0,QWORD PTR [rip+0x57c48]        # 0x14005cb88
   140004f40:	ucomisd xmm0,xmm6
   140004f44:	jp     0x140004f48
   140004f46:	je     0x140004f90
   140004f48:	mov    rbp,QWORD PTR [rsp+0x20]
   140004f4d:	mov    ecx,0x18
   140004f52:	call   0x140040d28
   140004f57:	test   rax,rax
   140004f5a:	mov    rdi,rax
   140004f5d:	je     0x140004f89
   140004f5f:	lea    rax,[rip+0x45d9a]        # 0x14004ad00
   140004f66:	lea    rdx,[rsp+0x28]
   140004f6b:	mov    rcx,rbp
   140004f6e:	mov    QWORD PTR [rdi],rax
   140004f71:	mov    QWORD PTR [rsp+0x28],r13
   140004f76:	call   0x140040d3a
   140004f7b:	mov    rcx,QWORD PTR [rsp+0x28]
   140004f80:	mov    DWORD PTR [rdi+0x10],eax
   140004f83:	mov    QWORD PTR [rdi+0x8],rcx
   140004f87:	jmp    0x140004f8c
   140004f89:	mov    rdi,r13
   140004f8c:	mov    QWORD PTR [rsi+0x48],rdi
   140004f90:	mov    rcx,QWORD PTR [rsp+0x20]
   140004f95:	mov    rax,QWORD PTR [rcx]
   140004f98:	call   QWORD PTR [rax+0x10]
   140004f9b:	mov    rcx,rbx
   140004f9e:	call   QWORD PTR [rip+0x3e5ac]        # 0x140043550
   140004fa4:	mov    rcx,rbx
   140004fa7:	call   QWORD PTR [rip+0x3e59b]        # 0x140043548
   140004fad:	mov    rcx,rsi
   140004fb0:	call   0x140005050
   140004fb5:	movsd  xmm0,QWORD PTR [rip+0x57bc3]        # 0x14005cb80
   140004fbd:	ucomisd xmm0,xmm6
   140004fc1:	jp     0x140004fd5
   140004fc3:	jne    0x140004fd5
   140004fc5:	movsd  xmm0,QWORD PTR [rip+0x57bbb]        # 0x14005cb88
   140004fcd:	ucomisd xmm0,xmm6
   140004fd1:	jp     0x140004fd5
   140004fd3:	je     0x140004ffa
   140004fd5:	mov    edx,0x7
   140004fda:	mov    rcx,rsi
   140004fdd:	call   0x140005150
   140004fe2:	mov    rcx,QWORD PTR [rsi+0x48]
   140004fe6:	test   rcx,rcx
   140004fe9:	je     0x140004ffa
   140004feb:	mov    r8,QWORD PTR [rcx]
   140004fee:	mov    edx,0x1
   140004ff3:	call   QWORD PTR [r8]
   140004ff6:	mov    QWORD PTR [rsi+0x48],r13
   140004ffa:	mov    eax,0x1
   140004fff:	jmp    0x14000502f
   140005001:	mov    rcx,QWORD PTR [rsp+0x20]
   140005006:	test   rcx,rcx
   140005009:	je     0x140005016
   14000500b:	mov    rax,QWORD PTR [rcx]
   14000500e:	call   QWORD PTR [rax+0x10]
   140005011:	mov    QWORD PTR [rsp+0x20],r13
   140005016:	test   rbx,rbx
   140005019:	je     0x14000502d
   14000501b:	mov    rcx,rbx
   14000501e:	call   QWORD PTR [rip+0x3e52c]        # 0x140043550
   140005024:	mov    rcx,rbx
   140005027:	call   QWORD PTR [rip+0x3e51b]        # 0x140043548
   14000502d:	xor    eax,eax
   14000502f:	mov    rbx,QWORD PTR [rsp+0x60]
   140005034:	mov    rbp,QWORD PTR [rsp+0x68]
   140005039:	mov    rsi,QWORD PTR [rsp+0x70]
   14000503e:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140005043:	add    rsp,0x40
   140005047:	pop    r13
   140005049:	pop    r12
   14000504b:	pop    rdi
   14000504c:	ret    
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	sub    rsp,0x8
   140005054:	cmp    DWORD PTR [rcx+0x24],0x20
   140005058:	mov    r10,rcx
   14000505b:	jne    0x140005142
   140005061:	movsxd rax,DWORD PTR [rcx+0x20]
   140005065:	mov    r11,QWORD PTR [rcx+0x10]
   140005069:	mov    QWORD PTR [rsp+0x10],rbx
   14000506e:	mov    QWORD PTR [rsp+0x18],rbp
   140005073:	mov    QWORD PTR [rsp+0x20],rsi
   140005078:	xor    esi,esi
   14000507a:	test   eax,eax
   14000507c:	sets   sil
   140005080:	or     rbp,0xffffffffffffffff
   140005084:	test   esi,esi
   140005086:	je     0x140005099
   140005088:	mov    rcx,rax
   14000508b:	mov    eax,ebp
   14000508d:	shr    rcx,0x2
   140005091:	sub    eax,ecx
   140005093:	cdqe   
   140005095:	lea    r11,[r11+rax*4]
   140005099:	xor    ebx,ebx
   14000509b:	cmp    DWORD PTR [r10+0x18],ebx
   14000509f:	jle    0x140005133
   1400050a5:	mov    eax,DWORD PTR [r10+0x1c]
   1400050a9:	mov    QWORD PTR [rsp],rdi
   1400050ad:	data16 xchg ax,ax
   1400050b0:	xor    edi,edi
   1400050b2:	test   eax,eax
   1400050b4:	jle    0x140005126
   1400050b6:	test   esi,esi
   1400050b8:	mov    r9d,0x1
   1400050be:	cmovne r9,rbp
   1400050c2:	shl    r9,0x2
   1400050c6:	data16 data16 xchg ax,ax
   1400050ca:	data16 xchg ax,ax
   1400050cd:	data16 xchg ax,ax
   1400050d0:	movzx  ecx,BYTE PTR [r11]
   1400050d4:	movzx  r8d,BYTE PTR [r11+0x3]
   1400050d9:	mov    eax,0x80808081
   1400050de:	add    edi,0x1
   1400050e1:	imul   ecx,r8d
   1400050e5:	mul    ecx
   1400050e7:	movzx  ecx,BYTE PTR [r11+0x1]
   1400050ec:	shr    edx,0x7
   1400050ef:	mov    BYTE PTR [r11],dl
   1400050f2:	mov    eax,0x80808081
   1400050f7:	imul   ecx,r8d
   1400050fb:	mul    ecx
   1400050fd:	movzx  ecx,BYTE PTR [r11+0x2]
   140005102:	shr    edx,0x7
   140005105:	mov    BYTE PTR [r11+0x1],dl
   140005109:	mov    eax,0x80808081
   14000510e:	imul   ecx,r8d
   140005112:	mul    ecx
   140005114:	shr    edx,0x7
   140005117:	mov    BYTE PTR [r11+0x2],dl
   14000511b:	mov    eax,DWORD PTR [r10+0x1c]
   14000511f:	add    r11,r9
   140005122:	cmp    edi,eax
   140005124:	jl     0x1400050d0
   140005126:	add    ebx,0x1
   140005129:	cmp    ebx,DWORD PTR [r10+0x18]
   14000512d:	jl     0x1400050b0
   14000512f:	mov    rdi,QWORD PTR [rsp]
   140005133:	mov    rbp,QWORD PTR [rsp+0x18]
   140005138:	mov    rbx,QWORD PTR [rsp+0x10]
   14000513d:	mov    rsi,QWORD PTR [rsp+0x20]
   140005142:	add    rsp,0x8
   140005146:	ret    
   140005147:	int3   
   140005148:	int3   
   140005149:	int3   
   14000514a:	int3   
   14000514b:	int3   
   14000514c:	int3   
   14000514d:	int3   
   14000514e:	int3   
   14000514f:	int3   
   140005150:	mov    rax,rsp
   140005153:	push   rdi
   140005154:	push   r12
   140005156:	push   r13
   140005158:	push   r14
   14000515a:	push   r15
   14000515c:	sub    rsp,0x90
   140005163:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000516c:	mov    QWORD PTR [rax+0x10],rbx
   140005170:	mov    QWORD PTR [rax+0x18],rbp
   140005174:	mov    QWORD PTR [rax+0x20],rsi
   140005178:	mov    esi,edx
   14000517a:	mov    rdi,rcx
   14000517d:	cmp    QWORD PTR [rcx+0x8],0x0
   140005182:	je     0x1400054f5
   140005188:	cmp    BYTE PTR [rcx+0x28],0x0
   14000518c:	je     0x1400054f5
   140005192:	cmp    QWORD PTR [rcx+0x48],0x0
   140005197:	je     0x1400054f5
   14000519d:	lea    rcx,[rax-0x50]
   1400051a1:	call   0x140020544
   1400051a6:	nop
   1400051a7:	xor    r14d,r14d
   1400051aa:	mov    QWORD PTR [rsp+0x60],r14
   1400051af:	lea    r15,[rip+0x41a2a]        # 0x140046be0
   1400051b6:	mov    QWORD PTR [rsp+0x58],r15
   1400051bb:	cvtsi2sd xmm0,DWORD PTR [rdi+0x18]
   1400051c0:	mulsd  xmm0,QWORD PTR [rip+0x579b8]        # 0x14005cb80
   1400051c8:	cvttsd2si r12d,xmm0
   1400051cd:	cvtsi2sd xmm1,DWORD PTR [rdi+0x1c]
   1400051d2:	mulsd  xmm1,QWORD PTR [rip+0x579ae]        # 0x14005cb88
   1400051da:	cvttsd2si ebp,xmm1
   1400051de:	cmp    DWORD PTR [rdi+0x24],0x20
   1400051e2:	je     0x140005203
   1400051e4:	mov    QWORD PTR [rsp+0x58],r15
   1400051e9:	lea    rcx,[rsp+0x58]
   1400051ee:	call   0x140005860
   1400051f3:	nop
   1400051f4:	lea    rcx,[rsp+0x68]
   1400051f9:	call   0x140020cd4
   1400051fe:	jmp    0x1400054f5
   140005203:	mov    rcx,rdi
   140005206:	call   0x140001bf0
   14000520b:	mov    rcx,rax
   14000520e:	call   0x140020c14
   140005213:	mov    rbx,rax
   140005216:	test   rax,rax
   140005219:	jne    0x14000523a
   14000521b:	mov    QWORD PTR [rsp+0x58],r15
   140005220:	lea    rcx,[rsp+0x58]
   140005225:	call   0x140005860
   14000522a:	nop
   14000522b:	lea    rcx,[rsp+0x68]
   140005230:	call   0x140020cd4
   140005235:	jmp    0x1400054f5
   14000523a:	mov    rcx,QWORD PTR [rax+0x8]
   14000523e:	call   QWORD PTR [rip+0x3de94]        # 0x1400430d8
   140005244:	mov    rdx,rax
   140005247:	lea    rcx,[rsp+0x68]
   14000524c:	call   0x140020c38
   140005251:	mov    r8d,ebp
   140005254:	mov    edx,r12d
   140005257:	mov    rcx,QWORD PTR [rbx+0x8]
   14000525b:	call   QWORD PTR [rip+0x3de6f]        # 0x1400430d0
   140005261:	mov    rdx,rax
   140005264:	lea    rcx,[rsp+0x58]
   140005269:	call   0x140020fa8
   14000526e:	mov    rdx,QWORD PTR [rsp+0x60]
   140005273:	mov    rcx,QWORD PTR [rsp+0x70]
   140005278:	call   0x14002107c
   14000527d:	mov    rcx,QWORD PTR [rbx+0x10]
   140005281:	call   QWORD PTR [rip+0x3de39]        # 0x1400430c0
   140005287:	mov    edx,eax
   140005289:	lea    rcx,[rsp+0x68]
   14000528e:	call   0x1400203bc
   140005293:	mov    r9d,ebp
   140005296:	mov    r8d,r12d
   140005299:	lea    rdx,[rsp+0xc0]
   1400052a1:	lea    rcx,[rsp+0x68]
   1400052a6:	call   0x1400208bc
   1400052ab:	mov    r9d,ebp
   1400052ae:	mov    r8d,r12d
   1400052b1:	lea    rdx,[rsp+0xc0]
   1400052b9:	lea    rcx,[rsp+0x68]
   1400052be:	call   0x1400207c4
   1400052c3:	mov    rcx,rdi
   1400052c6:	call   0x140001c60
   1400052cb:	mov    r13,QWORD PTR [rsp+0x70]
   1400052d0:	mov    ecx,0x10
   1400052d5:	call   0x140040d28
   1400052da:	mov    rbx,rax
   1400052dd:	test   rax,rax
   1400052e0:	je     0x1400054db
   1400052e6:	mov    QWORD PTR [rsp+0xc0],r14
   1400052ee:	lea    rdx,[rsp+0xc0]
   1400052f6:	mov    rcx,r13
   1400052f9:	call   0x140040d22
   1400052fe:	mov    DWORD PTR [rbx+0x8],eax
   140005301:	mov    rcx,QWORD PTR [rsp+0xc0]
   140005309:	mov    QWORD PTR [rbx],rcx
   14000530c:	mov    edx,esi
   14000530e:	call   0x140040d34
   140005313:	test   eax,eax
   140005315:	je     0x14000531a
   140005317:	mov    DWORD PTR [rbx+0x8],eax
   14000531a:	mov    rax,QWORD PTR [rdi+0x48]
   14000531e:	test   rax,rax
   140005321:	je     0x140005329
   140005323:	mov    rdx,QWORD PTR [rax+0x8]
   140005327:	jmp    0x14000532c
   140005329:	mov    rdx,r14
   14000532c:	mov    DWORD PTR [rsp+0x28],ebp
   140005330:	mov    DWORD PTR [rsp+0x20],r12d
   140005335:	xor    r9d,r9d
   140005338:	xor    r8d,r8d
   14000533b:	mov    rcx,QWORD PTR [rbx]
   14000533e:	call   0x140040d40
   140005343:	test   eax,eax
   140005345:	je     0x14000534a
   140005347:	mov    DWORD PTR [rbx+0x8],eax
   14000534a:	mov    rcx,QWORD PTR [rbx]
   14000534d:	call   0x140040cf2
   140005352:	mov    rcx,rbx
   140005355:	call   0x140040d04
   14000535a:	mov    rcx,rdi
   14000535d:	call   0x1400057d0
   140005362:	mov    rbx,r14
   140005365:	mov    ecx,0x438
   14000536a:	call   0x14002a110
   14000536f:	test   rax,rax
   140005372:	jne    0x140005379
   140005374:	mov    rsi,r14
   140005377:	jmp    0x140005383
   140005379:	mov    QWORD PTR [rax],r14
   14000537c:	mov    rbx,rax
   14000537f:	lea    rsi,[rax+0x10]
   140005383:	test   rsi,rsi
   140005386:	jne    0x1400053a6
   140005388:	test   rbx,rbx
   14000538b:	je     0x1400054db
   140005391:	mov    rcx,rbx
   140005394:	mov    rbx,QWORD PTR [rbx]
   140005397:	call   0x14002a380
   14000539c:	test   rbx,rbx
   14000539f:	jne    0x140005391
   1400053a1:	jmp    0x1400054db
   1400053a6:	xor    edx,edx
   1400053a8:	lea    r8d,[rdx+0x28]
   1400053ac:	mov    rcx,rsi
   1400053af:	call   0x14002ac20
   1400053b4:	mov    DWORD PTR [rsi],0x28
   1400053ba:	mov    DWORD PTR [rsi+0x4],r12d
   1400053be:	mov    DWORD PTR [rsi+0x8],ebp
   1400053c1:	mov    WORD PTR [rsi+0xc],0x1
   1400053c7:	mov    WORD PTR [rsi+0xe],0x20
   1400053cd:	mov    DWORD PTR [rsi+0x10],r14d
   1400053d1:	lea    r9,[rdi+0x10]
   1400053d5:	mov    DWORD PTR [rsp+0x28],r14d
   1400053da:	mov    QWORD PTR [rsp+0x20],r14
   1400053df:	xor    r8d,r8d
   1400053e2:	mov    rdx,rsi
   1400053e5:	xor    ecx,ecx
   1400053e7:	call   QWORD PTR [rip+0x3dd93]        # 0x140043180
   1400053ed:	test   rax,rax
   1400053f0:	jne    0x140005415
   1400053f2:	test   rbx,rbx
   1400053f5:	je     0x1400054db
   1400053fb:	xchg   ax,ax
   1400053fd:	data16 xchg ax,ax
   140005400:	mov    rcx,rbx
   140005403:	mov    rbx,QWORD PTR [rbx]
   140005406:	call   0x14002a380
   14000540b:	test   rbx,rbx
   14000540e:	jne    0x140005400
   140005410:	jmp    0x1400054db
   140005415:	mov    r8d,r14d
   140005418:	test   ebp,ebp
   14000541a:	setns  r8b
   14000541e:	add    r8d,0x1
   140005422:	mov    rdx,rax
   140005425:	mov    rcx,rdi
   140005428:	call   0x1400056c0
   14000542d:	mov    BYTE PTR [rdi+0x29],0x1
   140005431:	test   rbx,rbx
   140005434:	je     0x140005450
   140005436:	data16 data16 xchg ax,ax
   14000543a:	data16 xchg ax,ax
   14000543d:	data16 xchg ax,ax
   140005440:	mov    rcx,rbx
   140005443:	mov    rbx,QWORD PTR [rbx]
   140005446:	call   0x14002a380
   14000544b:	test   rbx,rbx
   14000544e:	jne    0x140005440
   140005450:	mov    rcx,rdi
   140005453:	call   0x140001bf0
   140005458:	mov    rcx,rax
   14000545b:	call   0x140020c14
   140005460:	mov    rcx,rax
   140005463:	test   rax,rax
   140005466:	jne    0x140005484
   140005468:	mov    QWORD PTR [rsp+0x58],r15
   14000546d:	lea    rcx,[rsp+0x58]
   140005472:	call   0x140005860
   140005477:	nop
   140005478:	lea    rcx,[rsp+0x68]
   14000547d:	call   0x140020cd4
   140005482:	jmp    0x1400054f5
   140005484:	mov    DWORD PTR [rsp+0x40],0xcc0020
   14000548c:	mov    DWORD PTR [rsp+0x38],r14d
   140005491:	mov    DWORD PTR [rsp+0x30],r14d
   140005496:	mov    rax,QWORD PTR [rsp+0x70]
   14000549b:	mov    QWORD PTR [rsp+0x28],rax
   1400054a0:	mov    DWORD PTR [rsp+0x20],ebp
   1400054a4:	mov    r9d,r12d
   1400054a7:	xor    r8d,r8d
   1400054aa:	xor    edx,edx
   1400054ac:	mov    rcx,QWORD PTR [rcx+0x8]
   1400054b0:	call   QWORD PTR [rip+0x3dc32]        # 0x1400430e8
   1400054b6:	mov    rcx,rdi
   1400054b9:	call   0x140001c60
   1400054be:	nop
   1400054bf:	mov    QWORD PTR [rsp+0x58],r15
   1400054c4:	lea    rcx,[rsp+0x58]
   1400054c9:	call   0x140005860
   1400054ce:	nop
   1400054cf:	lea    rcx,[rsp+0x68]
   1400054d4:	call   0x140020cd4
   1400054d9:	jmp    0x1400054f5
   1400054db:	mov    QWORD PTR [rsp+0x58],r15
   1400054e0:	lea    rcx,[rsp+0x58]
   1400054e5:	call   0x140005860
   1400054ea:	nop
   1400054eb:	lea    rcx,[rsp+0x68]
   1400054f0:	call   0x140020cd4
   1400054f5:	lea    r11,[rsp+0x90]
   1400054fd:	mov    rbx,QWORD PTR [r11+0x38]
   140005501:	mov    rbp,QWORD PTR [r11+0x40]
   140005505:	mov    rsi,QWORD PTR [r11+0x48]
   140005509:	mov    rsp,r11
   14000550c:	pop    r15
   14000550e:	pop    r14
   140005510:	pop    r13
   140005512:	pop    r12
   140005514:	pop    rdi
   140005515:	ret    
   140005516:	int3   
   140005517:	int3   
   140005518:	int3   
   140005519:	int3   
   14000551a:	int3   
   14000551b:	int3   
   14000551c:	int3   
   14000551d:	int3   
   14000551e:	int3   
   14000551f:	int3   
   140005520:	rex push rbp
   140005522:	sub    rsp,0x20
   140005526:	mov    rbp,rdx
   140005529:	lea    rcx,[rbp+0x68]
   14000552d:	call   0x140020cd4
   140005532:	add    rsp,0x20
   140005536:	pop    rbp
   140005537:	ret    
   140005538:	int3   
   140005539:	int3   
   14000553a:	int3   
   14000553b:	int3   
   14000553c:	int3   
   14000553d:	int3   
   14000553e:	int3   
   14000553f:	int3   
   140005540:	rex push rbp
   140005542:	sub    rsp,0x20
   140005546:	mov    rbp,rdx
   140005549:	lea    rcx,[rbp+0x58]
   14000554d:	call   0x140005810
   140005552:	add    rsp,0x20
   140005556:	pop    rbp
   140005557:	ret    
   140005558:	int3   
   140005559:	int3   
   14000555a:	int3   
   14000555b:	int3   
   14000555c:	int3   
   14000555d:	int3   
   14000555e:	int3   
   14000555f:	int3   
   140005560:	mov    QWORD PTR [rsp+0x8],rbx
   140005565:	mov    QWORD PTR [rsp+0x10],rbp
   14000556a:	mov    QWORD PTR [rsp+0x18],rsi
   14000556f:	mov    QWORD PTR [rsp+0x20],rdi
   140005574:	push   r12
   140005576:	push   r13
   140005578:	push   r14
   14000557a:	sub    rsp,0x30
   14000557e:	mov    rbp,rcx
   140005581:	xor    esi,esi
   140005583:	mov    ecx,0x438
   140005588:	mov    r12d,r9d
   14000558b:	mov    r13d,r8d
   14000558e:	mov    r14d,edx
   140005591:	mov    rbx,rsi
   140005594:	call   0x14002a110
   140005599:	test   rax,rax
   14000559c:	jne    0x1400055a3
   14000559e:	mov    rdi,rsi
   1400055a1:	jmp    0x1400055ad
   1400055a3:	mov    QWORD PTR [rax],rsi
   1400055a6:	mov    rbx,rax
   1400055a9:	lea    rdi,[rax+0x10]
   1400055ad:	test   rdi,rdi
   1400055b0:	jne    0x1400055d7
   1400055b2:	test   rbx,rbx
   1400055b5:	je     0x1400055d0
   1400055b7:	data16 xchg ax,ax
   1400055ba:	data16 xchg ax,ax
   1400055bd:	data16 xchg ax,ax
   1400055c0:	mov    rcx,rbx
   1400055c3:	mov    rbx,QWORD PTR [rbx]
   1400055c6:	call   0x14002a380
   1400055cb:	test   rbx,rbx
   1400055ce:	jne    0x1400055c0
   1400055d0:	xor    eax,eax
   1400055d2:	jmp    0x140005695
   1400055d7:	xor    edx,edx
   1400055d9:	mov    rcx,rdi
   1400055dc:	lea    r8d,[rdx+0x28]
   1400055e0:	call   0x14002ac20
   1400055e5:	cmp    r12d,0x8
   1400055e9:	mov    DWORD PTR [rdi],0x28
   1400055ef:	mov    DWORD PTR [rdi+0x4],r14d
   1400055f3:	mov    DWORD PTR [rdi+0x8],r13d
   1400055f7:	mov    WORD PTR [rdi+0xc],0x1
   1400055fd:	mov    WORD PTR [rdi+0xe],r12w
   140005602:	mov    DWORD PTR [rdi+0x10],esi
   140005605:	jg     0x140005618
   140005607:	lea    rcx,[rdi+0x28]
   14000560b:	xor    edx,edx
   14000560d:	mov    r8d,0x400
   140005613:	call   0x14002ac20
   140005618:	lea    r9,[rbp+0x10]
   14000561c:	xor    r8d,r8d
   14000561f:	mov    rdx,rdi
   140005622:	xor    ecx,ecx
   140005624:	mov    DWORD PTR [rsp+0x28],esi
   140005628:	mov    QWORD PTR [rsp+0x20],rsi
   14000562d:	call   QWORD PTR [rip+0x3db4d]        # 0x140043180
   140005633:	test   rax,rax
   140005636:	jne    0x140005654
   140005638:	test   rbx,rbx
   14000563b:	je     0x140005650
   14000563d:	data16 xchg ax,ax
   140005640:	mov    rcx,rbx
   140005643:	mov    rbx,QWORD PTR [rbx]
   140005646:	call   0x14002a380
   14000564b:	test   rbx,rbx
   14000564e:	jne    0x140005640
   140005650:	xor    eax,eax
   140005652:	jmp    0x140005695
   140005654:	test   r13d,r13d
   140005657:	mov    rdx,rax
   14000565a:	mov    rcx,rbp
   14000565d:	setns  sil
   140005661:	lea    r8d,[rsi+0x1]
   140005665:	call   0x1400056c0
   14000566a:	test   BYTE PTR [rsp+0x80],0x1
   140005672:	je     0x140005678
   140005674:	mov    BYTE PTR [rbp+0x29],0x1
   140005678:	test   rbx,rbx
   14000567b:	je     0x140005690
   14000567d:	data16 xchg ax,ax
   140005680:	mov    rcx,rbx
   140005683:	mov    rbx,QWORD PTR [rbx]
   140005686:	call   0x14002a380
   14000568b:	test   rbx,rbx
   14000568e:	jne    0x140005680
   140005690:	mov    eax,0x1
   140005695:	mov    rbx,QWORD PTR [rsp+0x50]
   14000569a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000569f:	mov    rsi,QWORD PTR [rsp+0x60]
   1400056a4:	mov    rdi,QWORD PTR [rsp+0x68]
   1400056a9:	add    rsp,0x30
   1400056ad:	pop    r14
   1400056af:	pop    r13
   1400056b1:	pop    r12
   1400056b3:	ret    
   1400056b4:	int3   
   1400056b5:	int3   
   1400056b6:	int3   
   1400056b7:	int3   
   1400056b8:	int3   
   1400056b9:	int3   
   1400056ba:	int3   
   1400056bb:	int3   
   1400056bc:	int3   
   1400056bd:	int3   
   1400056be:	int3   
   1400056bf:	int3   
   1400056c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400056c5:	push   rdi
   1400056c6:	sub    rsp,0x90
   1400056cd:	mov    rax,rdx
   1400056d0:	mov    QWORD PTR [rcx+0x8],rdx
   1400056d4:	mov    edi,r8d
   1400056d7:	mov    rbx,rcx
   1400056da:	lea    r8,[rsp+0x20]
   1400056df:	mov    edx,0x68
   1400056e4:	mov    rcx,rax
   1400056e7:	call   QWORD PTR [rip+0x3d9db]        # 0x1400430c8
   1400056ed:	cmp    eax,0x68
   1400056f0:	jne    0x140005782
   1400056f6:	mov    r8d,DWORD PTR [rsp+0x44]
   1400056fb:	mov    r9d,DWORD PTR [rsp+0x48]
   140005700:	mov    BYTE PTR [rbx+0x28],0x1
   140005704:	mov    eax,r9d
   140005707:	mov    DWORD PTR [rbx+0x18],r8d
   14000570b:	cdq    
   14000570c:	mov    ecx,eax
   14000570e:	movzx  eax,WORD PTR [rsp+0x4e]
   140005713:	xor    ecx,edx
   140005715:	mov    DWORD PTR [rbx+0x24],eax
   140005718:	sub    ecx,edx
   14000571a:	mov    DWORD PTR [rbx+0x1c],ecx
   14000571d:	imul   eax,r8d
   140005721:	mov    r8,QWORD PTR [rsp+0x38]
   140005726:	add    eax,0x1f
   140005729:	cdq    
   14000572a:	mov    QWORD PTR [rbx+0x10],r8
   14000572e:	and    edx,0x1f
   140005731:	add    edx,eax
   140005733:	sar    edx,0x5
   140005736:	shl    edx,0x2
   140005739:	test   edi,edi
   14000573b:	mov    DWORD PTR [rbx+0x20],edx
   14000573e:	jne    0x14000574c
   140005740:	xor    edi,edi
   140005742:	test   r9d,r9d
   140005745:	setg   dil
   140005749:	add    edi,0x1
   14000574c:	cmp    edi,0x2
   14000574f:	mov    DWORD PTR [rbx+0x2c],0xffffffff
   140005756:	mov    BYTE PTR [rbx+0x29],0x0
   14000575a:	jne    0x1400057b0
   14000575c:	lea    eax,[rcx-0x1]
   14000575f:	imul   eax,edx
   140005762:	movsxd rcx,eax
   140005765:	add    rcx,r8
   140005768:	neg    edx
   14000576a:	mov    DWORD PTR [rbx+0x20],edx
   14000576d:	mov    QWORD PTR [rbx+0x10],rcx
   140005771:	mov    rbx,QWORD PTR [rsp+0xa0]
   140005779:	add    rsp,0x90
   140005780:	pop    rdi
   140005781:	ret    
   140005782:	mov    eax,DWORD PTR [rsp+0x24]
   140005786:	xor    edi,edi
   140005788:	mov    BYTE PTR [rbx+0x28],0x0
   14000578c:	mov    DWORD PTR [rbx+0x18],eax
   14000578f:	mov    eax,DWORD PTR [rsp+0x28]
   140005793:	mov    DWORD PTR [rbx+0x20],edi
   140005796:	mov    DWORD PTR [rbx+0x1c],eax
   140005799:	movzx  eax,WORD PTR [rsp+0x32]
   14000579e:	mov    QWORD PTR [rbx+0x10],rdi
   1400057a2:	mov    DWORD PTR [rbx+0x2c],0xffffffff
   1400057a9:	mov    BYTE PTR [rbx+0x29],dil
   1400057ad:	mov    DWORD PTR [rbx+0x24],eax
   1400057b0:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400057b8:	add    rsp,0x90
   1400057bf:	pop    rdi
   1400057c0:	ret    
   1400057c1:	int3   
   1400057c2:	int3   
   1400057c3:	int3   
   1400057c4:	int3   
   1400057c5:	int3   
   1400057c6:	int3   
   1400057c7:	int3   
   1400057c8:	int3   
   1400057c9:	int3   
   1400057ca:	int3   
   1400057cb:	int3   
   1400057cc:	int3   
   1400057cd:	int3   
   1400057ce:	int3   
   1400057cf:	int3   
   1400057d0:	sub    rsp,0x28
   1400057d4:	mov    rax,QWORD PTR [rcx+0x8]
   1400057d8:	test   rax,rax
   1400057db:	je     0x140005809
   1400057dd:	xor    edx,edx
   1400057df:	mov    DWORD PTR [rcx+0x2c],0xffffffff
   1400057e6:	mov    QWORD PTR [rcx+0x8],rdx
   1400057ea:	mov    QWORD PTR [rcx+0x10],rdx
   1400057ee:	mov    DWORD PTR [rcx+0x18],edx
   1400057f1:	mov    DWORD PTR [rcx+0x1c],edx
   1400057f4:	mov    DWORD PTR [rcx+0x24],edx
   1400057f7:	mov    DWORD PTR [rcx+0x20],edx
   1400057fa:	mov    BYTE PTR [rcx+0x29],dl
   1400057fd:	mov    BYTE PTR [rcx+0x28],dl
   140005800:	mov    rcx,rax
   140005803:	call   QWORD PTR [rip+0x3d967]        # 0x140043170
   140005809:	add    rsp,0x28
   14000580d:	ret    
   14000580e:	int3   
   14000580f:	int3   
   140005810:	lea    rax,[rip+0x413c9]        # 0x140046be0
   140005817:	mov    QWORD PTR [rcx],rax
   14000581a:	jmp    0x140005860
   14000581f:	int3   
   140005820:	mov    QWORD PTR [rsp+0x8],rbx
   140005825:	push   rdi
   140005826:	sub    rsp,0x20
   14000582a:	lea    rax,[rip+0x413af]        # 0x140046be0
   140005831:	mov    ebx,edx
   140005833:	mov    rdi,rcx
   140005836:	mov    QWORD PTR [rcx],rax
   140005839:	call   0x140005860
   14000583e:	test   bl,0x1
   140005841:	je     0x14000584b
   140005843:	mov    rcx,rdi
   140005846:	call   0x14001490c
   14000584b:	mov    rax,rdi
   14000584e:	mov    rbx,QWORD PTR [rsp+0x30]
   140005853:	add    rsp,0x20
   140005857:	pop    rdi
   140005858:	ret    
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	int3   
   14000585f:	int3   
   140005860:	sub    rsp,0x468
   140005867:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140005870:	mov    rax,QWORD PTR [rip+0x55709]        # 0x14005af80
   140005877:	xor    rax,rsp
   14000587a:	mov    QWORD PTR [rsp+0x450],rax
   140005882:	lea    rax,[rip+0x40f4f]        # 0x1400467d8
   140005889:	mov    QWORD PTR [rcx],rax
   14000588c:	call   0x140021028
   140005891:	nop
   140005892:	mov    rcx,QWORD PTR [rsp+0x450]
   14000589a:	xor    rcx,rsp
   14000589d:	call   0x140029b40
   1400058a2:	add    rsp,0x468
   1400058a9:	ret    
   1400058aa:	int3   
   1400058ab:	int3   
   1400058ac:	int3   
   1400058ad:	int3   
   1400058ae:	int3   
   1400058af:	int3   
   1400058b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400058b5:	push   rbx
   1400058b6:	push   rbp
   1400058b7:	sub    rsp,0x38
   1400058bb:	mov    rbp,rdx
   1400058be:	call   0x14002157c
   1400058c3:	mov    r11,rax
   1400058c6:	xor    ecx,ecx
   1400058c8:	test   rax,rax
   1400058cb:	setne  cl
   1400058ce:	test   ecx,ecx
   1400058d0:	jne    0x1400058dd
   1400058d2:	mov    ecx,0x80004005
   1400058d7:	call   0x140003dc0
   1400058dc:	int3   
   1400058dd:	mov    rax,QWORD PTR [rax]
   1400058e0:	mov    rcx,r11
   1400058e3:	call   QWORD PTR [rax+0x18]
   1400058e6:	add    rax,0x18
   1400058ea:	mov    QWORD PTR [rbp+0x30],rax
   1400058ee:	mov    rcx,QWORD PTR [rbp+0x38]
   1400058f2:	mov    rax,QWORD PTR [rcx]
   1400058f5:	xor    r9d,r9d
   1400058f8:	mov    r8d,0x200
   1400058fe:	lea    rdx,[rbp+0x50]
   140005902:	call   QWORD PTR [rax+0x18]
   140005905:	test   eax,eax
   140005907:	je     0x14000593a
   140005909:	lea    rax,[rbp+0x50]
   14000590d:	mov    QWORD PTR [rsp+0x28],rax
   140005912:	mov    DWORD PTR [rsp+0x20],0x6d
   14000591a:	lea    r9,[rip+0x4532f]        # 0x14004ac50
   140005921:	lea    r8,[rip+0x45378]        # 0x14004aca0
   140005928:	lea    rdx,[rip+0x45391]        # 0x14004acc0
   14000592f:	lea    rcx,[rbp+0x30]
   140005933:	call   0x140005a00
   140005938:	jmp    0x140005960
   14000593a:	mov    DWORD PTR [rsp+0x20],0x6d
   140005942:	lea    r9,[rip+0x45307]        # 0x14004ac50
   140005949:	lea    r8,[rip+0x45350]        # 0x14004aca0
   140005950:	lea    rdx,[rip+0x45389]        # 0x14004ace0
   140005957:	lea    rcx,[rbp+0x30]
   14000595b:	call   0x140005a00
   140005960:	xor    r8d,r8d
   140005963:	xor    edx,edx
   140005965:	mov    rbx,QWORD PTR [rbp+0x30]
   140005969:	mov    rcx,rbx
   14000596c:	call   0x140021d08
   140005971:	nop
   140005972:	lea    rdx,[rbx-0x18]
   140005976:	or     eax,0xffffffff
   140005979:	lock xadd DWORD PTR [rdx+0x10],eax
   14000597e:	add    eax,0xffffffff
   140005981:	test   eax,eax
   140005983:	jg     0x14000598e
   140005985:	mov    rcx,QWORD PTR [rdx]
   140005988:	mov    rax,QWORD PTR [rcx]
   14000598b:	call   QWORD PTR [rax+0x8]
   14000598e:	mov    rcx,QWORD PTR [rbp+0x38]
   140005992:	mov    rax,QWORD PTR [rcx]
   140005995:	mov    edx,0x1
   14000599a:	call   QWORD PTR [rax+0x8]
   14000599d:	nop
   14000599e:	lea    rax,[rip+0xfffffffffffffeed]        # 0x140005892
   1400059a5:	jmp    0x1400059a7
   1400059a7:	add    rsp,0x38
   1400059ab:	pop    rbp
   1400059ac:	pop    rbx
   1400059ad:	ret    
   1400059ae:	int3   
   1400059af:	int3   
   1400059b0:	rex push rbp
   1400059b2:	sub    rsp,0x20
   1400059b6:	mov    rbp,rdx
   1400059b9:	lea    rcx,[rbp+0x30]
   1400059bd:	call   0x140003de0
   1400059c2:	add    rsp,0x20
   1400059c6:	pop    rbp
   1400059c7:	ret    
   1400059c8:	int3   
   1400059c9:	int3   
   1400059ca:	int3   
   1400059cb:	int3   
   1400059cc:	int3   
   1400059cd:	int3   
   1400059ce:	int3   
   1400059cf:	int3   
   1400059d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400059d5:	push   rdi
   1400059d6:	sub    rsp,0x20
   1400059da:	mov    ebx,edx
   1400059dc:	mov    rdi,rcx
   1400059df:	call   0x140005860
   1400059e4:	test   bl,0x1
   1400059e7:	je     0x1400059f1
   1400059e9:	mov    rcx,rdi
   1400059ec:	call   0x14001490c
   1400059f1:	mov    rax,rdi
   1400059f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400059f9:	add    rsp,0x20
   1400059fd:	pop    rdi
   1400059fe:	ret    
   1400059ff:	int3   
   140005a00:	mov    QWORD PTR [rsp+0x10],rdx
   140005a05:	mov    QWORD PTR [rsp+0x18],r8
   140005a0a:	mov    QWORD PTR [rsp+0x20],r9
   140005a0f:	push   rbp
   140005a10:	push   rsi
   140005a11:	push   rdi
   140005a12:	sub    rsp,0x30
   140005a16:	test   rdx,rdx
   140005a19:	mov    rsi,rdx
   140005a1c:	mov    rdi,rcx
   140005a1f:	lea    rbp,[rsp+0x60]
   140005a24:	jne    0x140005a31
   140005a26:	mov    ecx,0x80070057
   140005a2b:	call   0x140003dc0
   140005a30:	int3   
   140005a31:	mov    rdx,rbp
   140005a34:	mov    rcx,rsi
   140005a37:	mov    QWORD PTR [rsp+0x28],rbx
   140005a3c:	call   0x140029cc0
   140005a41:	mov    rcx,QWORD PTR [rdi]
   140005a44:	mov    edx,0x1
   140005a49:	sub    edx,DWORD PTR [rcx-0x8]
   140005a4c:	mov    ecx,DWORD PTR [rcx-0xc]
   140005a4f:	movsxd rbx,eax
   140005a52:	sub    ecx,ebx
   140005a54:	or     edx,ecx
   140005a56:	jge    0x140005a62
   140005a58:	mov    edx,ebx
   140005a5a:	mov    rcx,rdi
   140005a5d:	call   0x140004370
   140005a62:	mov    rcx,QWORD PTR [rdi]
   140005a65:	lea    eax,[rbx+0x1]
   140005a68:	mov    r9,rbp
   140005a6b:	movsxd rdx,eax
   140005a6e:	mov    r8,rsi
   140005a71:	call   0x140029f10
   140005a76:	test   ebx,ebx
   140005a78:	js     0x140005a9b
   140005a7a:	mov    rax,QWORD PTR [rdi]
   140005a7d:	cmp    ebx,DWORD PTR [rax-0xc]
   140005a80:	jg     0x140005a9b
   140005a82:	mov    DWORD PTR [rax-0x10],ebx
   140005a85:	mov    rax,QWORD PTR [rdi]
   140005a88:	mov    WORD PTR [rax+rbx*2],0x0
   140005a8e:	mov    rbx,QWORD PTR [rsp+0x28]
   140005a93:	add    rsp,0x30
   140005a97:	pop    rdi
   140005a98:	pop    rsi
   140005a99:	pop    rbp
   140005a9a:	ret    
   140005a9b:	mov    ecx,0x80070057
   140005aa0:	call   0x140003dc0
   140005aa5:	int3   
   140005aa6:	int3   
   140005aa7:	int3   
   140005aa8:	int3   
   140005aa9:	int3   
   140005aaa:	int3   
   140005aab:	int3   
   140005aac:	int3   
   140005aad:	int3   
   140005aae:	int3   
   140005aaf:	int3   
   140005ab0:	rex push rbx
   140005ab2:	sub    rsp,0x20
   140005ab6:	mov    rbx,rcx
   140005ab9:	mov    rcx,QWORD PTR [rcx+0x8]
   140005abd:	lea    rdx,[rsp+0x30]
   140005ac2:	mov    QWORD PTR [rsp+0x30],0x0
   140005acb:	call   0x140040d1c
   140005ad0:	test   eax,eax
   140005ad2:	je     0x140005ad7
   140005ad4:	mov    DWORD PTR [rbx+0x10],eax
   140005ad7:	mov    ecx,0x18
   140005adc:	call   0x140040d28
   140005ae1:	test   rax,rax
   140005ae4:	je     0x140005b05
   140005ae6:	mov    edx,DWORD PTR [rbx+0x10]
   140005ae9:	mov    rcx,QWORD PTR [rsp+0x30]
   140005aee:	lea    r8,[rip+0x45223]        # 0x14004ad18
   140005af5:	mov    QWORD PTR [rax+0x8],rcx
   140005af9:	mov    DWORD PTR [rax+0x10],edx
   140005afc:	mov    QWORD PTR [rax],r8
   140005aff:	add    rsp,0x20
   140005b03:	pop    rbx
   140005b04:	ret    
   140005b05:	xor    eax,eax
   140005b07:	add    rsp,0x20
   140005b0b:	pop    rbx
   140005b0c:	ret    
   140005b0d:	int3   
   140005b0e:	int3   
   140005b0f:	int3   
   140005b10:	mov    QWORD PTR [rsp+0x8],rbx
   140005b15:	push   rdi
   140005b16:	sub    rsp,0x20
   140005b1a:	lea    rax,[rip+0x451f7]        # 0x14004ad18
   140005b21:	mov    rdi,rcx
   140005b24:	mov    ebx,edx
   140005b26:	mov    QWORD PTR [rcx],rax
   140005b29:	mov    rcx,QWORD PTR [rcx+0x8]
   140005b2d:	call   0x140040cfe
   140005b32:	test   bl,0x1
   140005b35:	je     0x140005b3f
   140005b37:	mov    rcx,rdi
   140005b3a:	call   0x140040d04
   140005b3f:	mov    rax,rdi
   140005b42:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b47:	add    rsp,0x20
   140005b4b:	pop    rdi
   140005b4c:	ret    
   140005b4d:	int3   
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	mov    QWORD PTR [rsp+0x8],rbx
   140005b55:	mov    QWORD PTR [rsp+0x10],rbp
   140005b5a:	mov    QWORD PTR [rsp+0x20],rsi
   140005b5f:	push   rdi
   140005b60:	sub    rsp,0x50
   140005b64:	mov    rdi,rcx
   140005b67:	lea    rcx,[rip+0x5c162]        # 0x140061cd0
   140005b6e:	mov    rsi,rdx
   140005b71:	call   QWORD PTR [rip+0x3d9c9]        # 0x140043540
   140005b77:	xor    ebp,ebp
   140005b79:	mov    bl,0x1
   140005b7b:	cmp    QWORD PTR [rip+0x5c146],rbp        # 0x140061cc8
   140005b82:	jne    0x140005bb7
   140005b84:	lea    r8,[rsp+0x20]
   140005b89:	lea    rdx,[rsp+0x30]
   140005b8e:	lea    rcx,[rip+0x5c133]        # 0x140061cc8
   140005b95:	mov    DWORD PTR [rsp+0x30],0x1
   140005b9d:	mov    QWORD PTR [rsp+0x38],rbp
   140005ba2:	mov    DWORD PTR [rsp+0x40],ebp
   140005ba6:	mov    DWORD PTR [rsp+0x44],ebp
   140005baa:	call   0x140040d16
   140005baf:	movzx  ebx,bl
   140005bb2:	test   eax,eax
   140005bb4:	cmovne ebx,ebp
   140005bb7:	lea    rcx,[rip+0x5c112]        # 0x140061cd0
   140005bbe:	call   QWORD PTR [rip+0x3d974]        # 0x140043538
   140005bc4:	test   bl,bl
   140005bc6:	je     0x140005bfd
   140005bc8:	lea    rax,[rip+0x45131]        # 0x14004ad00
   140005bcf:	lea    rdx,[rsp+0x70]
   140005bd4:	mov    rcx,rsi
   140005bd7:	mov    QWORD PTR [rsp+0x30],rax
   140005bdc:	mov    QWORD PTR [rsp+0x70],rbp
   140005be1:	call   0x140040d3a
   140005be6:	test   eax,eax
   140005be8:	mov    rcx,QWORD PTR [rsp+0x70]
   140005bed:	mov    DWORD PTR [rsp+0x40],ebp
   140005bf1:	mov    QWORD PTR [rsp+0x38],rcx
   140005bf6:	je     0x140005c04
   140005bf8:	call   0x140040cfe
   140005bfd:	mov    eax,0x80004005
   140005c02:	jmp    0x140005c1f
   140005c04:	lea    rdx,[rsp+0x30]
   140005c09:	mov    rcx,rdi
   140005c0c:	call   0x140005c40
   140005c11:	mov    rcx,QWORD PTR [rsp+0x38]
   140005c16:	mov    ebx,eax
   140005c18:	call   0x140040cfe
   140005c1d:	mov    eax,ebx
   140005c1f:	mov    rbx,QWORD PTR [rsp+0x60]
   140005c24:	mov    rbp,QWORD PTR [rsp+0x68]
   140005c29:	mov    rsi,QWORD PTR [rsp+0x78]
   140005c2e:	add    rsp,0x50
   140005c32:	pop    rdi
   140005c33:	ret    
   140005c34:	int3   
   140005c35:	int3   
   140005c36:	int3   
   140005c37:	int3   
   140005c38:	int3   
   140005c39:	int3   
   140005c3a:	int3   
   140005c3b:	int3   
   140005c3c:	int3   
   140005c3d:	int3   
   140005c3e:	int3   
   140005c3f:	int3   
   140005c40:	rex push rbp
   140005c42:	push   r12
   140005c44:	push   r13
   140005c46:	push   r14
   140005c48:	push   r15
   140005c4a:	sub    rsp,0x4b0
   140005c51:	lea    rbp,[rsp+0x40]
   140005c56:	mov    QWORD PTR [rbp+0x4a0],rbx
   140005c5d:	mov    QWORD PTR [rbp+0x4a8],rsi
   140005c64:	mov    QWORD PTR [rbp+0x4b0],rdi
   140005c6b:	mov    rax,QWORD PTR [rip+0x5530e]        # 0x14005af80
   140005c72:	xor    rax,rbp
   140005c75:	mov    QWORD PTR [rbp+0x460],rax
   140005c7c:	mov    r14,rdx
   140005c7f:	mov    rsi,rcx
   140005c82:	lea    rdx,[rbp+0x4]
   140005c86:	mov    rcx,QWORD PTR [r14+0x8]
   140005c8a:	call   0x140040cec
   140005c8f:	test   eax,eax
   140005c91:	je     0x140005c97
   140005c93:	mov    DWORD PTR [r14+0x10],eax
   140005c97:	mov    r13d,DWORD PTR [rbp+0x4]
   140005c9b:	xor    edi,edi
   140005c9d:	mov    r15d,0x20
   140005ca3:	bt     r13d,0x11
   140005ca8:	mov    DWORD PTR [rbp+0x0],r15d
   140005cac:	mov    ebx,edi
   140005cae:	mov    DWORD PTR [rbp+0x8],0x22009
   140005cb5:	jae    0x140005cc9
   140005cb7:	mov    eax,r13d
   140005cba:	mov    DWORD PTR [rbp+0x8],r13d
   140005cbe:	sar    eax,0x8
   140005cc1:	movzx  r15d,al
   140005cc5:	mov    DWORD PTR [rbp+0x0],r15d
   140005cc9:	bt     r13d,0x12
   140005cce:	jae    0x140005ce5
   140005cd0:	mov    r15d,0x20
   140005cd6:	mov    DWORD PTR [rbp+0x8],0x26200a
   140005cdd:	lea    ebx,[r15-0x1f]
   140005ce1:	mov    DWORD PTR [rbp+0x0],r15d
   140005ce5:	mov    rcx,QWORD PTR [r14+0x8]
   140005ce9:	lea    rdx,[rbp+0x14]
   140005ced:	mov    DWORD PTR [rbp+0x14],edi
   140005cf0:	call   0x140040d52
   140005cf5:	test   eax,eax
   140005cf7:	je     0x140005cfd
   140005cf9:	mov    DWORD PTR [r14+0x10],eax
   140005cfd:	mov    rcx,QWORD PTR [r14+0x8]
   140005d01:	mov    r12d,DWORD PTR [rbp+0x14]
   140005d05:	lea    rdx,[rbp+0x10]
   140005d09:	mov    DWORD PTR [rbp+0x10],edi
   140005d0c:	call   0x140040d4c
   140005d11:	test   eax,eax
   140005d13:	je     0x140005d19
   140005d15:	mov    DWORD PTR [r14+0x10],eax
   140005d19:	mov    edx,DWORD PTR [rbp+0x10]
   140005d1c:	mov    DWORD PTR [rsp+0x30],ebx
   140005d20:	mov    r9d,r15d
   140005d23:	mov    r8d,r12d
   140005d26:	mov    rcx,rsi
   140005d29:	mov    QWORD PTR [rsp+0x28],rdi
   140005d2e:	mov    DWORD PTR [rsp+0x20],edi
   140005d32:	call   0x140005560
   140005d37:	test   eax,eax
   140005d39:	jne    0x140005d45
   140005d3b:	mov    eax,0x80004005
   140005d40:	jmp    0x140006082
   140005d45:	bt     r13d,0x10
   140005d4a:	mov    rbx,rdi
   140005d4d:	jae    0x140005f16
   140005d53:	mov    rcx,QWORD PTR [r14+0x8]
   140005d57:	lea    rdx,[rbp+0xc]
   140005d5b:	mov    DWORD PTR [rbp+0xc],edi
   140005d5e:	call   0x140040d46
   140005d63:	test   eax,eax
   140005d65:	je     0x140005d6b
   140005d67:	mov    DWORD PTR [r14+0x10],eax
   140005d6b:	mov    r15d,DWORD PTR [rbp+0xc]
   140005d6f:	cmp    r15d,0x400
   140005d76:	ja     0x140005daa
   140005d78:	mov    rcx,r15
   140005d7b:	call   0x1400060c0
   140005d80:	test   al,al
   140005d82:	je     0x140005daa
   140005d84:	lea    rax,[r15+0xf]
   140005d88:	cmp    rax,r15
   140005d8b:	ja     0x140005d97
   140005d8d:	movabs rax,0xffffffffffffff0
   140005d97:	and    rax,0xfffffffffffffff0
   140005d9b:	call   0x140041ad0
   140005da0:	sub    rsp,rax
   140005da3:	lea    r12,[rsp+0x40]
   140005da8:	jmp    0x140005ddb
   140005daa:	or     rax,0xffffffffffffffff
   140005dae:	mov    rcx,r15
   140005db1:	sub    rax,r15
   140005db4:	cmp    rax,0x10
   140005db8:	jb     0x140005f7b
   140005dbe:	add    rcx,0x10
   140005dc2:	call   0x14002a110
   140005dc7:	test   rax,rax
   140005dca:	jne    0x140005dd1
   140005dcc:	mov    r12,rdi
   140005dcf:	jmp    0x140005ddb
   140005dd1:	mov    QWORD PTR [rax],rdi
   140005dd4:	mov    rbx,rax
   140005dd7:	lea    r12,[rax+0x10]
   140005ddb:	test   r12,r12
   140005dde:	jne    0x140005dff
   140005de0:	test   rbx,rbx
   140005de3:	je     0x140005df5
   140005de5:	mov    rcx,rbx
   140005de8:	mov    rbx,QWORD PTR [rbx]
   140005deb:	call   0x14002a380
   140005df0:	test   rbx,rbx
   140005df3:	jne    0x140005de5
   140005df5:	mov    eax,0x8007000e
   140005dfa:	jmp    0x140006082
   140005dff:	mov    rcx,QWORD PTR [r14+0x8]
   140005e03:	mov    r8d,r15d
   140005e06:	mov    rdx,r12
   140005e09:	call   0x140040d2e
   140005e0e:	test   eax,eax
   140005e10:	je     0x140005e16
   140005e12:	mov    DWORD PTR [r14+0x10],eax
   140005e16:	cmp    DWORD PTR [r12+0x4],edi
   140005e1b:	mov    r8d,edi
   140005e1e:	jbe    0x140005e5d
   140005e20:	lea    rdx,[rbp+0x61]
   140005e24:	lea    r9,[r12+0x8]
   140005e29:	data16 xchg ax,ax
   140005e2c:	data16 data16 xchg ax,ax
   140005e30:	mov    ecx,DWORD PTR [r9]
   140005e33:	mov    BYTE PTR [rdx+0x2],dil
   140005e37:	add    r8d,0x1
   140005e3b:	mov    BYTE PTR [rdx-0x1],cl
   140005e3e:	mov    eax,ecx
   140005e40:	add    rdx,0x4
   140005e44:	shr    eax,0x10
   140005e47:	add    r9,0x4
   140005e4b:	mov    BYTE PTR [rdx-0x3],al
   140005e4e:	mov    eax,ecx
   140005e50:	shr    eax,0x8
   140005e53:	mov    BYTE PTR [rdx-0x4],al
   140005e56:	cmp    r8d,DWORD PTR [r12+0x4]
   140005e5b:	jb     0x140005e30
   140005e5d:	mov    r12d,DWORD PTR [r12+0x4]
   140005e62:	add    DWORD PTR [rsi+0x38],0x1
   140005e66:	cmp    QWORD PTR [rsi+0x30],rdi
   140005e6a:	lea    r15,[rip+0x5be37]        # 0x140061ca8
   140005e71:	jne    0x140005ebb
   140005e73:	mov    ecx,edi
   140005e75:	data16 data16 xchg ax,ax
   140005e79:	data16 xchg ax,ax
   140005e7c:	data16 data16 xchg ax,ax
   140005e80:	movsxd rax,ecx
   140005e83:	mov    r8,rdi
   140005e86:	xchg   QWORD PTR [r15+rax*8],r8
   140005e8a:	test   r8,r8
   140005e8d:	jne    0x140005ea2
   140005e8f:	add    ecx,0x1
   140005e92:	cmp    ecx,0x4
   140005e95:	jl     0x140005e80
   140005e97:	xor    ecx,ecx
   140005e99:	call   QWORD PTR [rip+0x3d239]        # 0x1400430d8
   140005e9f:	mov    r8,rax
   140005ea2:	mov    rdx,QWORD PTR [rsi+0x8]
   140005ea6:	mov    rcx,r8
   140005ea9:	mov    QWORD PTR [rsi+0x30],r8
   140005ead:	call   QWORD PTR [rip+0x3d22d]        # 0x1400430e0
   140005eb3:	mov    r13d,DWORD PTR [rbp+0x4]
   140005eb7:	mov    QWORD PTR [rsi+0x40],rax
   140005ebb:	mov    rcx,QWORD PTR [rsi+0x30]
   140005ebf:	lea    r9,[rbp+0x60]
   140005ec3:	mov    r8d,r12d
   140005ec6:	xor    edx,edx
   140005ec8:	call   QWORD PTR [rip+0x3d2aa]        # 0x140043178
   140005ece:	add    DWORD PTR [rsi+0x38],0xffffffff
   140005ed2:	jne    0x140005f12
   140005ed4:	mov    rdx,QWORD PTR [rsi+0x40]
   140005ed8:	mov    rcx,QWORD PTR [rsi+0x30]
   140005edc:	call   QWORD PTR [rip+0x3d1fe]        # 0x1400430e0
   140005ee2:	mov    rcx,QWORD PTR [rsi+0x30]
   140005ee6:	mov    edx,edi
   140005ee8:	data16 data16 xchg ax,ax
   140005eec:	data16 data16 xchg ax,ax
   140005ef0:	movsxd rax,edx
   140005ef3:	xchg   QWORD PTR [r15+rax*8],rcx
   140005ef7:	test   rcx,rcx
   140005efa:	je     0x140005f0a
   140005efc:	add    edx,0x1
   140005eff:	cmp    edx,0x4
   140005f02:	jl     0x140005ef0
   140005f04:	call   QWORD PTR [rip+0x3d1e6]        # 0x1400430f0
   140005f0a:	mov    r13d,DWORD PTR [rbp+0x4]
   140005f0e:	mov    QWORD PTR [rsi+0x30],rdi
   140005f12:	mov    r15d,DWORD PTR [rbp+0x0]
   140005f16:	mov    r9d,DWORD PTR [rbp+0x8]
   140005f1a:	cmp    r9d,r13d
   140005f1d:	jne    0x14000600a
   140005f23:	mov    eax,DWORD PTR [rsi+0x18]
   140005f26:	mov    rcx,QWORD PTR [r14+0x8]
   140005f2a:	lea    rdx,[rbp+0x28]
   140005f2e:	mov    DWORD PTR [rbp+0x30],eax
   140005f31:	mov    eax,DWORD PTR [rsi+0x1c]
   140005f34:	mov    r9d,r13d
   140005f37:	mov    DWORD PTR [rbp+0x34],eax
   140005f3a:	lea    rax,[rbp+0x38]
   140005f3e:	mov    r8d,0x1
   140005f44:	mov    DWORD PTR [rbp+0x28],edi
   140005f47:	mov    DWORD PTR [rbp+0x2c],edi
   140005f4a:	mov    QWORD PTR [rsp+0x20],rax
   140005f4f:	call   0x140040d0a
   140005f54:	test   eax,eax
   140005f56:	je     0x140005f86
   140005f58:	test   rbx,rbx
   140005f5b:	mov    DWORD PTR [r14+0x10],eax
   140005f5f:	je     0x140005f71
   140005f61:	mov    rcx,rbx
   140005f64:	mov    rbx,QWORD PTR [rbx]
   140005f67:	call   0x14002a380
   140005f6c:	test   rbx,rbx
   140005f6f:	jne    0x140005f61
   140005f71:	mov    eax,0x8007000e
   140005f76:	jmp    0x140006082
   140005f7b:	mov    ecx,0x80070057
   140005f80:	call   0x140003dc0
   140005f85:	int3   
   140005f86:	mov    eax,DWORD PTR [rsi+0x18]
   140005f89:	mov    r12,QWORD PTR [rsi+0x10]
   140005f8d:	mov    r13,QWORD PTR [rbp+0x48]
   140005f91:	imul   eax,r15d
   140005f95:	lea    r15d,[rax+0x7]
   140005f99:	shr    r15,0x3
   140005f9d:	cmp    DWORD PTR [rsi+0x1c],edi
   140005fa0:	jle    0x140005fe1
   140005fa2:	mov    r9,r15
   140005fa5:	mov    r8,r13
   140005fa8:	mov    rdx,r15
   140005fab:	mov    rcx,r12
   140005fae:	call   0x140029bf0
   140005fb3:	test   eax,eax
   140005fb5:	je     0x140005fcb
   140005fb7:	cmp    eax,0xc
   140005fba:	je     0x140006004
   140005fbc:	cmp    eax,0x16
   140005fbf:	je     0x140005ffe
   140005fc1:	cmp    eax,0x22
   140005fc4:	je     0x140005ffe
   140005fc6:	cmp    eax,0x50
   140005fc9:	jne    0x140005ff8
   140005fcb:	movsxd rax,DWORD PTR [rsi+0x20]
   140005fcf:	add    edi,0x1
   140005fd2:	add    r12,rax
   140005fd5:	movsxd rax,DWORD PTR [rbp+0x40]
   140005fd9:	add    r13,rax
   140005fdc:	cmp    edi,DWORD PTR [rsi+0x1c]
   140005fdf:	jl     0x140005fa2
   140005fe1:	mov    rcx,QWORD PTR [r14+0x8]
   140005fe5:	lea    rdx,[rbp+0x38]
   140005fe9:	call   0x140040cf8
   140005fee:	test   eax,eax
   140005ff0:	je     0x140006069
   140005ff2:	mov    DWORD PTR [r14+0x10],eax
   140005ff6:	jmp    0x140006069
   140005ff8:	call   0x1400218c0
   140005ffd:	int3   
   140005ffe:	call   0x1400218c0
   140006003:	int3   
   140006004:	call   0x140021878
   140006009:	int3   
   14000600a:	mov    rax,QWORD PTR [rsi+0x10]
   14000600e:	mov    r8d,DWORD PTR [rsi+0x20]
   140006012:	mov    edx,DWORD PTR [rsi+0x1c]
   140006015:	lea    rcx,[rbp+0x20]
   140006019:	mov    QWORD PTR [rbp+0x20],rdi
   14000601d:	mov    QWORD PTR [rsp+0x28],rcx
   140006022:	mov    ecx,DWORD PTR [rsi+0x18]
   140006025:	mov    QWORD PTR [rsp+0x20],rax
   14000602a:	call   0x140040ce6
   14000602f:	mov    rsi,QWORD PTR [rbp+0x20]
   140006033:	lea    rdx,[rbp+0x18]
   140006037:	mov    rcx,rsi
   14000603a:	mov    QWORD PTR [rbp+0x18],rdi
   14000603e:	call   0x140040ce0
   140006043:	mov    rdi,QWORD PTR [rbp+0x18]
   140006047:	mov    rdx,QWORD PTR [r14+0x8]
   14000604b:	mov    rcx,rdi
   14000604e:	xor    r9d,r9d
   140006051:	xor    r8d,r8d
   140006054:	call   0x140040cda
   140006059:	mov    rcx,rdi
   14000605c:	call   0x140040cf2
   140006061:	mov    rcx,rsi
   140006064:	call   0x140040cfe
   140006069:	test   rbx,rbx
   14000606c:	je     0x140006080
   14000606e:	xchg   ax,ax
   140006070:	mov    rcx,rbx
   140006073:	mov    rbx,QWORD PTR [rbx]
   140006076:	call   0x14002a380
   14000607b:	test   rbx,rbx
   14000607e:	jne    0x140006070
   140006080:	xor    eax,eax
   140006082:	mov    rcx,QWORD PTR [rbp+0x460]
   140006089:	xor    rcx,rbp
   14000608c:	call   0x140029b40
   140006091:	mov    rbx,QWORD PTR [rbp+0x4a0]
   140006098:	mov    rsi,QWORD PTR [rbp+0x4a8]
   14000609f:	mov    rdi,QWORD PTR [rbp+0x4b0]
   1400060a6:	lea    rsp,[rbp+0x470]
   1400060ad:	pop    r15
   1400060af:	pop    r14
   1400060b1:	pop    r13
   1400060b3:	pop    r12
   1400060b5:	pop    rbp
   1400060b6:	ret    
   1400060b7:	int3   
   1400060b8:	int3   
   1400060b9:	int3   
   1400060ba:	int3   
   1400060bb:	int3   
   1400060bc:	int3   
   1400060bd:	int3   
   1400060be:	int3   
   1400060bf:	int3   
   1400060c0:	rex push rbp
   1400060c2:	sub    rsp,0x30
   1400060c6:	lea    rbp,[rsp+0x20]
   1400060cb:	mov    QWORD PTR [rbp+0x20],rbx
   1400060cf:	mov    rax,QWORD PTR [rip+0x54eaa]        # 0x14005af80
   1400060d6:	xor    rax,rbp
   1400060d9:	mov    QWORD PTR [rbp+0x8],rax
   1400060dd:	mov    bl,0x1
   1400060df:	or     rax,0xffffffffffffffff
   1400060e3:	sub    rax,rcx
   1400060e6:	cmp    rax,0x4000
   1400060ec:	jb     0x140006119
   1400060ee:	lea    rax,[rcx+0x4000]
   1400060f5:	lea    rcx,[rax+0xf]
   1400060f9:	cmp    rcx,rax
   1400060fc:	ja     0x140006108
   1400060fe:	movabs rcx,0xffffffffffffff0
   140006108:	and    rcx,0xfffffffffffffff0
   14000610c:	mov    rax,rcx
   14000610f:	call   0x140041ad0
   140006114:	sub    rsp,rcx
   140006117:	jmp    0x14000611e
   140006119:	xor    bl,bl
   14000611b:	mov    BYTE PTR [rbp+0x0],bl
   14000611e:	jmp    0x14000612b
   140006120:	xor    bl,bl
   140006122:	mov    BYTE PTR [rbp+0x0],bl
   140006125:	call   0x14002a1e0
   14000612a:	nop
   14000612b:	mov    al,bl
   14000612d:	mov    rcx,QWORD PTR [rbp+0x8]
   140006131:	xor    rcx,rbp
   140006134:	call   0x140029b40
   140006139:	mov    rbx,QWORD PTR [rbp+0x20]
   14000613d:	lea    rsp,[rbp+0x10]
   140006141:	pop    rbp
   140006142:	ret    
   140006143:	int3   
   140006144:	int3   
   140006145:	int3   
   140006146:	int3   
   140006147:	int3   
   140006148:	int3   
   140006149:	int3   
   14000614a:	int3   
   14000614b:	int3   
   14000614c:	int3   
   14000614d:	int3   
   14000614e:	int3   
   14000614f:	int3   
   140006150:	rex push rbp
   140006152:	sub    rsp,0x20
   140006156:	lea    rbp,[rdx+0x20]
   14000615a:	mov    rax,QWORD PTR [rcx]
   14000615d:	xor    ecx,ecx
   14000615f:	cmp    DWORD PTR [rax],0xc00000fd
   140006165:	sete   cl
   140006168:	mov    eax,ecx
   14000616a:	mov    eax,ecx
   14000616c:	add    rsp,0x20
   140006170:	pop    rbp
   140006171:	ret    
   140006172:	int3   
   140006173:	int3   
   140006174:	int3   
   140006175:	int3   
   140006176:	int3   
   140006177:	int3   
   140006178:	int3   
   140006179:	int3   
   14000617a:	int3   
   14000617b:	int3   
   14000617c:	int3   
   14000617d:	int3   
   14000617e:	int3   
   14000617f:	int3   
   140006180:	mov    QWORD PTR [rsp+0x8],rcx
   140006185:	push   rdi
   140006186:	sub    rsp,0x30
   14000618a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006193:	mov    QWORD PTR [rsp+0x48],rbx
   140006198:	mov    QWORD PTR [rsp+0x50],rsi
   14000619d:	mov    ebx,edx
   14000619f:	mov    rdi,rcx
   1400061a2:	lea    rax,[rip+0x44e3f]        # 0x14004afe8
   1400061a9:	mov    QWORD PTR [rcx],rax
   1400061ac:	add    rcx,0x20
   1400061b0:	lea    rsi,[rip+0x41c71]        # 0x140047e28
   1400061b7:	mov    QWORD PTR [rcx],rsi
   1400061ba:	call   0x140005860
   1400061bf:	nop
   1400061c0:	lea    rcx,[rdi+0x10]
   1400061c4:	mov    QWORD PTR [rcx],rsi
   1400061c7:	call   0x140005860
   1400061cc:	test   bl,0x1
   1400061cf:	je     0x1400061de
   1400061d1:	mov    rcx,rdi
   1400061d4:	call   0x14001490c
   1400061d9:	mov    rax,rdi
   1400061dc:	jmp    0x1400061e1
   1400061de:	mov    rax,rdi
   1400061e1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400061e6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400061eb:	add    rsp,0x30
   1400061ef:	pop    rdi
   1400061f0:	ret    
   1400061f1:	int3   
   1400061f2:	int3   
   1400061f3:	int3   
   1400061f4:	int3   
   1400061f5:	int3   
   1400061f6:	int3   
   1400061f7:	int3   
   1400061f8:	int3   
   1400061f9:	int3   
   1400061fa:	int3   
   1400061fb:	int3   
   1400061fc:	int3   
   1400061fd:	int3   
   1400061fe:	int3   
   1400061ff:	int3   
   140006200:	rex push rbp
   140006202:	sub    rsp,0x20
   140006206:	mov    rbp,rdx
   140006209:	mov    rcx,QWORD PTR [rbp+0x40]
   14000620d:	add    rcx,0x10
   140006211:	call   0x140007190
   140006216:	add    rsp,0x20
   14000621a:	pop    rbp
   14000621b:	ret    
   14000621c:	int3   
   14000621d:	int3   
   14000621e:	int3   
   14000621f:	int3   
   140006220:	mov    QWORD PTR [rsp+0x8],rcx
   140006225:	push   rdi
   140006226:	sub    rsp,0x30
   14000622a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006233:	mov    QWORD PTR [rsp+0x48],rbx
   140006238:	mov    rbx,rcx
   14000623b:	lea    rax,[rip+0x44da6]        # 0x14004afe8
   140006242:	mov    QWORD PTR [rcx],rax
   140006245:	add    rcx,0x20
   140006249:	lea    rdi,[rip+0x41bd8]        # 0x140047e28
   140006250:	mov    QWORD PTR [rcx],rdi
   140006253:	call   0x140005860
   140006258:	nop
   140006259:	lea    rcx,[rbx+0x10]
   14000625d:	mov    QWORD PTR [rcx],rdi
   140006260:	mov    rbx,QWORD PTR [rsp+0x48]
   140006265:	add    rsp,0x30
   140006269:	pop    rdi
   14000626a:	jmp    0x140005860
   14000626f:	int3   
   140006270:	rex push rbp
   140006272:	sub    rsp,0x20
   140006276:	mov    rbp,rdx
   140006279:	mov    rcx,QWORD PTR [rbp+0x40]
   14000627d:	add    rcx,0x10
   140006281:	call   0x140007190
   140006286:	add    rsp,0x20
   14000628a:	pop    rbp
   14000628b:	ret    
   14000628c:	int3   
   14000628d:	int3   
   14000628e:	int3   
   14000628f:	int3   
   140006290:	mov    rax,rsp
   140006293:	mov    QWORD PTR [rax+0x18],r8
   140006297:	push   rdi
   140006298:	sub    rsp,0x80
   14000629f:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   1400062a8:	mov    QWORD PTR [rax+0x8],rbx
   1400062ac:	mov    QWORD PTR [rax+0x10],rsi
   1400062b0:	mov    rbx,r8
   1400062b3:	mov    rdi,rdx
   1400062b6:	test   rdx,rdx
   1400062b9:	jne    0x1400062e1
   1400062bb:	mov    rdx,QWORD PTR [r8]
   1400062be:	sub    rdx,0x18
   1400062c2:	or     eax,0xffffffff
   1400062c5:	lock xadd DWORD PTR [rdx+0x10],eax
   1400062ca:	add    eax,0xffffffff
   1400062cd:	test   eax,eax
   1400062cf:	jg     0x1400062da
   1400062d1:	mov    rcx,QWORD PTR [rdx]
   1400062d4:	mov    rax,QWORD PTR [rcx]
   1400062d7:	call   QWORD PTR [rax+0x8]
   1400062da:	xor    eax,eax
   1400062dc:	jmp    0x1400063b6
   1400062e1:	call   0x14001f3b8
   1400062e6:	xor    esi,esi
   1400062e8:	test   rax,rax
   1400062eb:	je     0x1400062fb
   1400062ed:	mov    rdx,QWORD PTR [rax]
   1400062f0:	mov    rcx,rax
   1400062f3:	call   QWORD PTR [rdx+0xe8]
   1400062f9:	jmp    0x1400062fe
   1400062fb:	mov    rax,rsi
   1400062fe:	mov    rcx,QWORD PTR [rax+0x40]
   140006302:	call   QWORD PTR [rip+0x3d6a8]        # 0x1400439b0
   140006308:	mov    rcx,rax
   14000630b:	call   0x140020c14
   140006310:	test   rax,rax
   140006313:	jne    0x14000631a
   140006315:	mov    rcx,rsi
   140006318:	jmp    0x14000631e
   14000631a:	mov    rcx,QWORD PTR [rax+0x8]
   14000631e:	mov    edx,0x5a
   140006323:	call   QWORD PTR [rip+0x3ce3f]        # 0x140043168
   140006329:	mov    edx,eax
   14000632b:	mov    ecx,0x9
   140006330:	lea    r8d,[rcx+0x3f]
   140006334:	call   QWORD PTR [rip+0x3d1b6]        # 0x1400434f0
   14000633a:	mov    ecx,eax
   14000633c:	neg    ecx
   14000633e:	mov    rax,QWORD PTR [rbx]
   140006341:	mov    QWORD PTR [rsp+0x68],rax
   140006346:	mov    DWORD PTR [rsp+0x60],0x20
   14000634e:	mov    DWORD PTR [rsp+0x58],esi
   140006352:	mov    DWORD PTR [rsp+0x50],esi
   140006356:	mov    DWORD PTR [rsp+0x48],esi
   14000635a:	mov    DWORD PTR [rsp+0x40],0x1
   140006362:	mov    DWORD PTR [rsp+0x38],esi
   140006366:	mov    DWORD PTR [rsp+0x30],esi
   14000636a:	mov    DWORD PTR [rsp+0x28],esi
   14000636e:	mov    eax,DWORD PTR [rsp+0xb0]
   140006375:	mov    DWORD PTR [rsp+0x20],eax
   140006379:	xor    r9d,r9d
   14000637c:	xor    r8d,r8d
   14000637f:	xor    edx,edx
   140006381:	call   QWORD PTR [rip+0x3cdd9]        # 0x140043160
   140006387:	mov    rdx,rax
   14000638a:	mov    rcx,rdi
   14000638d:	call   0x140020fa8
   140006392:	mov    edi,eax
   140006394:	mov    rdx,QWORD PTR [rbx]
   140006397:	sub    rdx,0x18
   14000639b:	or     eax,0xffffffff
   14000639e:	lock xadd DWORD PTR [rdx+0x10],eax
   1400063a3:	add    eax,0xffffffff
   1400063a6:	test   eax,eax
   1400063a8:	jg     0x1400063b4
   1400063aa:	mov    rcx,QWORD PTR [rdx]
   1400063ad:	mov    r8,QWORD PTR [rcx]
   1400063b0:	call   QWORD PTR [r8+0x8]
   1400063b4:	mov    eax,edi
   1400063b6:	lea    r11,[rsp+0x80]
   1400063be:	mov    rbx,QWORD PTR [r11+0x10]
   1400063c2:	mov    rsi,QWORD PTR [r11+0x18]
   1400063c6:	mov    rsp,r11
   1400063c9:	pop    rdi
   1400063ca:	ret    
   1400063cb:	int3   
   1400063cc:	int3   
   1400063cd:	int3   
   1400063ce:	int3   
   1400063cf:	int3   
   1400063d0:	rex push rbp
   1400063d2:	sub    rsp,0x20
   1400063d6:	mov    rbp,rdx
   1400063d9:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400063e0:	call   0x140003de0
   1400063e5:	add    rsp,0x20
   1400063e9:	pop    rbp
   1400063ea:	ret    
   1400063eb:	int3   
   1400063ec:	int3   
   1400063ed:	int3   
   1400063ee:	int3   
   1400063ef:	int3   
   1400063f0:	rex push rbp
   1400063f2:	push   rsi
   1400063f3:	push   rdi
   1400063f4:	push   r12
   1400063f6:	push   r13
   1400063f8:	push   r14
   1400063fa:	push   r15
   1400063fc:	sub    rsp,0x80
   140006403:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14000640c:	mov    QWORD PTR [rsp+0xc8],rbx
   140006414:	movzx  edi,dx
   140006417:	mov    rsi,rcx
   14000641a:	add    rcx,0x10
   14000641e:	call   0x140021028
   140006423:	lea    rcx,[rsi+0x20]
   140006427:	call   0x140021028
   14000642c:	mov    r12d,edi
   14000642f:	mov    edx,edi
   140006431:	sub    edx,0x404
   140006437:	je     0x1400069e0
   14000643d:	sub    edx,0xd
   140006440:	je     0x14000688a
   140006446:	sub    edx,0x1
   140006449:	je     0x140006734
   14000644f:	cmp    edx,0x3f2
   140006455:	je     0x1400065cf
   14000645b:	lea    rax,[rsp+0xc0]
   140006463:	mov    QWORD PTR [rsp+0x30],rax
   140006468:	call   0x14002157c
   14000646d:	mov    rdx,rax
   140006470:	xor    ebx,ebx
   140006472:	mov    ecx,ebx
   140006474:	test   rax,rax
   140006477:	setne  cl
   14000647a:	test   ecx,ecx
   14000647c:	jne    0x140006489
   14000647e:	mov    ecx,0x80004005
   140006483:	call   0x140003dc0
   140006488:	int3   
   140006489:	mov    rax,QWORD PTR [rax]
   14000648c:	mov    rcx,rdx
   14000648f:	call   QWORD PTR [rax+0x18]
   140006492:	add    rax,0x18
   140006496:	mov    QWORD PTR [rsp+0xc0],rax
   14000649e:	lea    r15,[rip+0x44b23]        # 0x14004afc8
   1400064a5:	mov    rbp,r15
   1400064a8:	shr    rbp,0x10
   1400064ac:	jne    0x1400064d3
   1400064ae:	movzx  edi,r15w
   1400064b2:	mov    ecx,edi
   1400064b4:	call   0x140021f1c
   1400064b9:	test   rax,rax
   1400064bc:	je     0x1400064f7
   1400064be:	mov    r8d,edi
   1400064c1:	mov    rdx,rax
   1400064c4:	lea    rcx,[rsp+0xc0]
   1400064cc:	call   0x140007010
   1400064d1:	jmp    0x1400064f7
   1400064d3:	xor    eax,eax
   1400064d5:	or     rcx,0xffffffffffffffff
   1400064d9:	mov    rdi,r15
   1400064dc:	repnz scas ax,WORD PTR es:[rdi]
   1400064df:	not    rcx
   1400064e2:	lea    r8d,[rcx-0x1]
   1400064e6:	mov    rdx,r15
   1400064e9:	lea    rcx,[rsp+0xc0]
   1400064f1:	call   0x140004590
   1400064f6:	nop
   1400064f7:	mov    DWORD PTR [rsp+0x20],0x2bc
   1400064ff:	mov    r9d,0x9
   140006505:	lea    r8,[rsp+0xc0]
   14000650d:	lea    rdx,[rsi+0x10]
   140006511:	mov    rcx,rsi
   140006514:	call   0x140006290
   140006519:	lea    rdx,[rsp+0xd0]
   140006521:	mov    QWORD PTR [rsp+0x30],rdx
   140006526:	call   0x14002157c
   14000652b:	mov    rdx,rax
   14000652e:	mov    ecx,ebx
   140006530:	test   rax,rax
   140006533:	setne  cl
   140006536:	test   ecx,ecx
   140006538:	jne    0x140006545
   14000653a:	mov    ecx,0x80004005
   14000653f:	call   0x140003dc0
   140006544:	int3   
   140006545:	mov    rax,QWORD PTR [rax]
   140006548:	mov    rcx,rdx
   14000654b:	call   QWORD PTR [rax+0x18]
   14000654e:	add    rax,0x18
   140006552:	mov    QWORD PTR [rsp+0xd0],rax
   14000655a:	test   rbp,rbp
   14000655d:	jne    0x140006584
   14000655f:	movzx  edi,r15w
   140006563:	mov    ecx,edi
   140006565:	call   0x140021f1c
   14000656a:	test   rax,rax
   14000656d:	je     0x1400065a8
   14000656f:	mov    r8d,edi
   140006572:	mov    rdx,rax
   140006575:	lea    rcx,[rsp+0xd0]
   14000657d:	call   0x140007010
   140006582:	jmp    0x1400065a8
   140006584:	xor    eax,eax
   140006586:	or     rcx,0xffffffffffffffff
   14000658a:	mov    rdi,r15
   14000658d:	repnz scas ax,WORD PTR es:[rdi]
   140006590:	not    rcx
   140006593:	lea    r8d,[rcx-0x1]
   140006597:	mov    rdx,r15
   14000659a:	lea    rcx,[rsp+0xd0]
   1400065a2:	call   0x140004590
   1400065a7:	nop
   1400065a8:	mov    DWORD PTR [rsp+0x20],0x190
   1400065b0:	mov    r9d,0x9
   1400065b6:	lea    r8,[rsp+0xd0]
   1400065be:	lea    rdx,[rsi+0x20]
   1400065c2:	mov    rcx,rsi
   1400065c5:	call   0x140006290
   1400065ca:	jmp    0x140006b31
   1400065cf:	lea    rax,[rsp+0xd8]
   1400065d7:	mov    QWORD PTR [rsp+0x30],rax
   1400065dc:	call   0x14002157c
   1400065e1:	mov    rdx,rax
   1400065e4:	xor    ebx,ebx
   1400065e6:	mov    ecx,ebx
   1400065e8:	test   rax,rax
   1400065eb:	setne  cl
   1400065ee:	test   ecx,ecx
   1400065f0:	jne    0x1400065fd
   1400065f2:	mov    ecx,0x80004005
   1400065f7:	call   0x140003dc0
   1400065fc:	int3   
   1400065fd:	mov    rax,QWORD PTR [rax]
   140006600:	mov    rcx,rdx
   140006603:	call   QWORD PTR [rax+0x18]
   140006606:	add    rax,0x18
   14000660a:	mov    QWORD PTR [rsp+0xd8],rax
   140006612:	lea    r15,[rip+0x44937]        # 0x14004af50
   140006619:	mov    rbp,r15
   14000661c:	shr    rbp,0x10
   140006620:	jne    0x140006647
   140006622:	movzx  edi,r15w
   140006626:	mov    ecx,edi
   140006628:	call   0x140021f1c
   14000662d:	test   rax,rax
   140006630:	je     0x14000666b
   140006632:	mov    r8d,edi
   140006635:	mov    rdx,rax
   140006638:	lea    rcx,[rsp+0xd8]
   140006640:	call   0x140007010
   140006645:	jmp    0x14000666b
   140006647:	xor    eax,eax
   140006649:	or     rcx,0xffffffffffffffff
   14000664d:	mov    rdi,r15
   140006650:	repnz scas ax,WORD PTR es:[rdi]
   140006653:	not    rcx
   140006656:	lea    r8d,[rcx-0x1]
   14000665a:	mov    rdx,r15
   14000665d:	lea    rcx,[rsp+0xd8]
   140006665:	call   0x140004590
   14000666a:	nop
   14000666b:	mov    DWORD PTR [rsp+0x20],0x2bc
   140006673:	mov    r9d,0x9
   140006679:	lea    r8,[rsp+0xd8]
   140006681:	lea    rdx,[rsi+0x10]
   140006685:	mov    rcx,rsi
   140006688:	call   0x140006290
   14000668d:	lea    rdx,[rsp+0x58]
   140006692:	mov    QWORD PTR [rsp+0x30],rdx
   140006697:	call   0x14002157c
   14000669c:	mov    rdx,rax
   14000669f:	mov    ecx,ebx
   1400066a1:	test   rax,rax
   1400066a4:	setne  cl
   1400066a7:	test   ecx,ecx
   1400066a9:	jne    0x1400066b6
   1400066ab:	mov    ecx,0x80004005
   1400066b0:	call   0x140003dc0
   1400066b5:	int3   
   1400066b6:	mov    rax,QWORD PTR [rax]
   1400066b9:	mov    rcx,rdx
   1400066bc:	call   QWORD PTR [rax+0x18]
   1400066bf:	add    rax,0x18
   1400066c3:	mov    QWORD PTR [rsp+0x58],rax
   1400066c8:	test   rbp,rbp
   1400066cb:	jne    0x1400066ef
   1400066cd:	movzx  edi,r15w
   1400066d1:	mov    ecx,edi
   1400066d3:	call   0x140021f1c
   1400066d8:	test   rax,rax
   1400066db:	je     0x140006710
   1400066dd:	mov    r8d,edi
   1400066e0:	mov    rdx,rax
   1400066e3:	lea    rcx,[rsp+0x58]
   1400066e8:	call   0x140007010
   1400066ed:	jmp    0x140006710
   1400066ef:	xor    eax,eax
   1400066f1:	or     rcx,0xffffffffffffffff
   1400066f5:	mov    rdi,r15
   1400066f8:	repnz scas ax,WORD PTR es:[rdi]
   1400066fb:	not    rcx
   1400066fe:	lea    r8d,[rcx-0x1]
   140006702:	mov    rdx,r15
   140006705:	lea    rcx,[rsp+0x58]
   14000670a:	call   0x140004590
   14000670f:	nop
   140006710:	mov    DWORD PTR [rsp+0x20],0x190
   140006718:	mov    r9d,0x9
   14000671e:	lea    r8,[rsp+0x58]
   140006723:	lea    rdx,[rsi+0x20]
   140006727:	mov    rcx,rsi
   14000672a:	call   0x140006290
   14000672f:	jmp    0x140006b31
   140006734:	lea    rax,[rsp+0x60]
   140006739:	mov    QWORD PTR [rsp+0x30],rax
   14000673e:	call   0x14002157c
   140006743:	mov    rdx,rax
   140006746:	xor    ebx,ebx
   140006748:	mov    ecx,ebx
   14000674a:	test   rax,rax
   14000674d:	setne  cl
   140006750:	test   ecx,ecx
   140006752:	jne    0x14000675f
   140006754:	mov    ecx,0x80004005
   140006759:	call   0x140003dc0
   14000675e:	int3   
   14000675f:	mov    rax,QWORD PTR [rax]
   140006762:	mov    rcx,rdx
   140006765:	call   QWORD PTR [rax+0x18]
   140006768:	add    rax,0x18
   14000676c:	mov    QWORD PTR [rsp+0x60],rax
   140006771:	lea    r15,[rip+0x44830]        # 0x14004afa8
   140006778:	mov    rbp,r15
   14000677b:	shr    rbp,0x10
   14000677f:	jne    0x1400067a3
   140006781:	movzx  edi,r15w
   140006785:	mov    ecx,edi
   140006787:	call   0x140021f1c
   14000678c:	test   rax,rax
   14000678f:	je     0x1400067c4
   140006791:	mov    r8d,edi
   140006794:	mov    rdx,rax
   140006797:	lea    rcx,[rsp+0x60]
   14000679c:	call   0x140007010
   1400067a1:	jmp    0x1400067c4
   1400067a3:	xor    eax,eax
   1400067a5:	or     rcx,0xffffffffffffffff
   1400067a9:	mov    rdi,r15
   1400067ac:	repnz scas ax,WORD PTR es:[rdi]
   1400067af:	not    rcx
   1400067b2:	lea    r8d,[rcx-0x1]
   1400067b6:	mov    rdx,r15
   1400067b9:	lea    rcx,[rsp+0x60]
   1400067be:	call   0x140004590
   1400067c3:	nop
   1400067c4:	mov    DWORD PTR [rsp+0x20],0x2bc
   1400067cc:	mov    r9d,0x9
   1400067d2:	lea    r8,[rsp+0x60]
   1400067d7:	lea    rdx,[rsi+0x10]
   1400067db:	mov    rcx,rsi
   1400067de:	call   0x140006290
   1400067e3:	lea    rdx,[rsp+0x48]
   1400067e8:	mov    QWORD PTR [rsp+0x30],rdx
   1400067ed:	call   0x14002157c
   1400067f2:	mov    rdx,rax
   1400067f5:	mov    ecx,ebx
   1400067f7:	test   rax,rax
   1400067fa:	setne  cl
   1400067fd:	test   ecx,ecx
   1400067ff:	jne    0x14000680c
   140006801:	mov    ecx,0x80004005
   140006806:	call   0x140003dc0
   14000680b:	int3   
   14000680c:	mov    rax,QWORD PTR [rax]
   14000680f:	mov    rcx,rdx
   140006812:	call   QWORD PTR [rax+0x18]
   140006815:	add    rax,0x18
   140006819:	mov    QWORD PTR [rsp+0x48],rax
   14000681e:	test   rbp,rbp
   140006821:	jne    0x140006845
   140006823:	movzx  edi,r15w
   140006827:	mov    ecx,edi
   140006829:	call   0x140021f1c
   14000682e:	test   rax,rax
   140006831:	je     0x140006866
   140006833:	mov    r8d,edi
   140006836:	mov    rdx,rax
   140006839:	lea    rcx,[rsp+0x48]
   14000683e:	call   0x140007010
   140006843:	jmp    0x140006866
   140006845:	xor    eax,eax
   140006847:	or     rcx,0xffffffffffffffff
   14000684b:	mov    rdi,r15
   14000684e:	repnz scas ax,WORD PTR es:[rdi]
   140006851:	not    rcx
   140006854:	lea    r8d,[rcx-0x1]
   140006858:	mov    rdx,r15
   14000685b:	lea    rcx,[rsp+0x48]
   140006860:	call   0x140004590
   140006865:	nop
   140006866:	mov    DWORD PTR [rsp+0x20],0x190
   14000686e:	mov    r9d,0x9
   140006874:	lea    r8,[rsp+0x48]
   140006879:	lea    rdx,[rsi+0x20]
   14000687d:	mov    rcx,rsi
   140006880:	call   0x140006290
   140006885:	jmp    0x140006b31
   14000688a:	lea    rax,[rsp+0x68]
   14000688f:	mov    QWORD PTR [rsp+0x30],rax
   140006894:	call   0x14002157c
   140006899:	mov    rdx,rax
   14000689c:	xor    ebx,ebx
   14000689e:	mov    ecx,ebx
   1400068a0:	test   rax,rax
   1400068a3:	setne  cl
   1400068a6:	test   ecx,ecx
   1400068a8:	jne    0x1400068b5
   1400068aa:	mov    ecx,0x80004005
   1400068af:	call   0x140003dc0
   1400068b4:	int3   
   1400068b5:	mov    rax,QWORD PTR [rax]
   1400068b8:	mov    rcx,rdx
   1400068bb:	call   QWORD PTR [rax+0x18]
   1400068be:	add    rax,0x18
   1400068c2:	mov    QWORD PTR [rsp+0x68],rax
   1400068c7:	lea    r15,[rip+0x446ca]        # 0x14004af98
   1400068ce:	mov    rbp,r15
   1400068d1:	shr    rbp,0x10
   1400068d5:	jne    0x1400068f9
   1400068d7:	movzx  edi,r15w
   1400068db:	mov    ecx,edi
   1400068dd:	call   0x140021f1c
   1400068e2:	test   rax,rax
   1400068e5:	je     0x14000691a
   1400068e7:	mov    r8d,edi
   1400068ea:	mov    rdx,rax
   1400068ed:	lea    rcx,[rsp+0x68]
   1400068f2:	call   0x140007010
   1400068f7:	jmp    0x14000691a
   1400068f9:	xor    eax,eax
   1400068fb:	or     rcx,0xffffffffffffffff
   1400068ff:	mov    rdi,r15
   140006902:	repnz scas ax,WORD PTR es:[rdi]
   140006905:	not    rcx
   140006908:	lea    r8d,[rcx-0x1]
   14000690c:	mov    rdx,r15
   14000690f:	lea    rcx,[rsp+0x68]
   140006914:	call   0x140004590
   140006919:	nop
   14000691a:	mov    DWORD PTR [rsp+0x20],0x2bc
   140006922:	mov    r9d,0x9
   140006928:	lea    r8,[rsp+0x68]
   14000692d:	lea    rdx,[rsi+0x10]
   140006931:	mov    rcx,rsi
   140006934:	call   0x140006290
   140006939:	lea    rdx,[rsp+0x38]
   14000693e:	mov    QWORD PTR [rsp+0x30],rdx
   140006943:	call   0x14002157c
   140006948:	mov    rdx,rax
   14000694b:	mov    ecx,ebx
   14000694d:	test   rax,rax
   140006950:	setne  cl
   140006953:	test   ecx,ecx
   140006955:	jne    0x140006962
   140006957:	mov    ecx,0x80004005
   14000695c:	call   0x140003dc0
   140006961:	int3   
   140006962:	mov    rax,QWORD PTR [rax]
   140006965:	mov    rcx,rdx
   140006968:	call   QWORD PTR [rax+0x18]
   14000696b:	add    rax,0x18
   14000696f:	mov    QWORD PTR [rsp+0x38],rax
   140006974:	test   rbp,rbp
   140006977:	jne    0x14000699b
   140006979:	movzx  edi,r15w
   14000697d:	mov    ecx,edi
   14000697f:	call   0x140021f1c
   140006984:	test   rax,rax
   140006987:	je     0x1400069bc
   140006989:	mov    r8d,edi
   14000698c:	mov    rdx,rax
   14000698f:	lea    rcx,[rsp+0x38]
   140006994:	call   0x140007010
   140006999:	jmp    0x1400069bc
   14000699b:	xor    eax,eax
   14000699d:	or     rcx,0xffffffffffffffff
   1400069a1:	mov    rdi,r15
   1400069a4:	repnz scas ax,WORD PTR es:[rdi]
   1400069a7:	not    rcx
   1400069aa:	lea    r8d,[rcx-0x1]
   1400069ae:	mov    rdx,r15
   1400069b1:	lea    rcx,[rsp+0x38]
   1400069b6:	call   0x140004590
   1400069bb:	nop
   1400069bc:	mov    DWORD PTR [rsp+0x20],0x190
   1400069c4:	mov    r9d,0x9
   1400069ca:	lea    r8,[rsp+0x38]
   1400069cf:	lea    rdx,[rsi+0x20]
   1400069d3:	mov    rcx,rsi
   1400069d6:	call   0x140006290
   1400069db:	jmp    0x140006b31
   1400069e0:	lea    rax,[rsp+0x40]
   1400069e5:	mov    QWORD PTR [rsp+0x30],rax
   1400069ea:	call   0x14002157c
   1400069ef:	mov    rdx,rax
   1400069f2:	xor    ebx,ebx
   1400069f4:	mov    ecx,ebx
   1400069f6:	test   rax,rax
   1400069f9:	setne  cl
   1400069fc:	test   ecx,ecx
   1400069fe:	jne    0x140006a0b
   140006a00:	mov    ecx,0x80004005
   140006a05:	call   0x140003dc0
   140006a0a:	int3   
   140006a0b:	mov    rax,QWORD PTR [rax]
   140006a0e:	mov    rcx,rdx
   140006a11:	call   QWORD PTR [rax+0x18]
   140006a14:	add    rax,0x18
   140006a18:	mov    QWORD PTR [rsp+0x40],rax
   140006a1d:	lea    r15,[rip+0x4454c]        # 0x14004af70
   140006a24:	mov    rbp,r15
   140006a27:	shr    rbp,0x10
   140006a2b:	jne    0x140006a4f
   140006a2d:	movzx  edi,r15w
   140006a31:	mov    ecx,edi
   140006a33:	call   0x140021f1c
   140006a38:	test   rax,rax
   140006a3b:	je     0x140006a70
   140006a3d:	mov    r8d,edi
   140006a40:	mov    rdx,rax
   140006a43:	lea    rcx,[rsp+0x40]
   140006a48:	call   0x140007010
   140006a4d:	jmp    0x140006a70
   140006a4f:	xor    eax,eax
   140006a51:	or     rcx,0xffffffffffffffff
   140006a55:	mov    rdi,r15
   140006a58:	repnz scas ax,WORD PTR es:[rdi]
   140006a5b:	not    rcx
   140006a5e:	lea    r8d,[rcx-0x1]
   140006a62:	mov    rdx,r15
   140006a65:	lea    rcx,[rsp+0x40]
   140006a6a:	call   0x140004590
   140006a6f:	nop
   140006a70:	mov    DWORD PTR [rsp+0x20],0x2bc
   140006a78:	mov    r9d,0x9
   140006a7e:	lea    r8,[rsp+0x40]
   140006a83:	lea    rdx,[rsi+0x10]
   140006a87:	mov    rcx,rsi
   140006a8a:	call   0x140006290
   140006a8f:	lea    rdx,[rsp+0x50]
   140006a94:	mov    QWORD PTR [rsp+0x30],rdx
   140006a99:	call   0x14002157c
   140006a9e:	mov    rdx,rax
   140006aa1:	mov    ecx,ebx
   140006aa3:	test   rax,rax
   140006aa6:	setne  cl
   140006aa9:	test   ecx,ecx
   140006aab:	jne    0x140006ab8
   140006aad:	mov    ecx,0x80004005
   140006ab2:	call   0x140003dc0
   140006ab7:	int3   
   140006ab8:	mov    rax,QWORD PTR [rax]
   140006abb:	mov    rcx,rdx
   140006abe:	call   QWORD PTR [rax+0x18]
   140006ac1:	add    rax,0x18
   140006ac5:	mov    QWORD PTR [rsp+0x50],rax
   140006aca:	test   rbp,rbp
   140006acd:	jne    0x140006af1
   140006acf:	movzx  edi,r15w
   140006ad3:	mov    ecx,edi
   140006ad5:	call   0x140021f1c
   140006ada:	test   rax,rax
   140006add:	je     0x140006b12
   140006adf:	mov    r8d,edi
   140006ae2:	mov    rdx,rax
   140006ae5:	lea    rcx,[rsp+0x50]
   140006aea:	call   0x140007010
   140006aef:	jmp    0x140006b12
   140006af1:	xor    eax,eax
   140006af3:	or     rcx,0xffffffffffffffff
   140006af7:	mov    rdi,r15
   140006afa:	repnz scas ax,WORD PTR es:[rdi]
   140006afd:	not    rcx
   140006b00:	lea    r8d,[rcx-0x1]
   140006b04:	mov    rdx,r15
   140006b07:	lea    rcx,[rsp+0x50]
   140006b0c:	call   0x140004590
   140006b11:	nop
   140006b12:	mov    DWORD PTR [rsp+0x20],0x190
   140006b1a:	mov    r9d,0x9
   140006b20:	lea    r8,[rsp+0x50]
   140006b25:	lea    rdx,[rsi+0x20]
   140006b29:	mov    rcx,rsi
   140006b2c:	call   0x140006290
   140006b31:	cmp    r12d,0x404
   140006b38:	je     0x140006b5a
   140006b3a:	cmp    r12d,0x410
   140006b41:	jle    0x140006b55
   140006b43:	cmp    r12d,0x412
   140006b4a:	jle    0x140006b5a
   140006b4c:	cmp    r12d,0x804
   140006b53:	je     0x140006b5a
   140006b55:	mov    DWORD PTR [rsi+0x30],ebx
   140006b58:	jmp    0x140006bb2
   140006b5a:	call   0x14001f3b8
   140006b5f:	test   rax,rax
   140006b62:	je     0x140006b72
   140006b64:	mov    rdx,QWORD PTR [rax]
   140006b67:	mov    rcx,rax
   140006b6a:	call   QWORD PTR [rdx+0xe8]
   140006b70:	jmp    0x140006b75
   140006b72:	mov    rax,rbx
   140006b75:	mov    rcx,QWORD PTR [rax+0x40]
   140006b79:	call   QWORD PTR [rip+0x3ce31]        # 0x1400439b0
   140006b7f:	mov    rcx,rax
   140006b82:	call   0x140020c14
   140006b87:	test   rax,rax
   140006b8a:	je     0x140006b90
   140006b8c:	mov    rbx,QWORD PTR [rax+0x8]
   140006b90:	mov    edx,0x5a
   140006b95:	mov    rcx,rbx
   140006b98:	call   QWORD PTR [rip+0x3c5ca]        # 0x140043168
   140006b9e:	mov    edx,eax
   140006ba0:	mov    ecx,0xe
   140006ba5:	lea    r8d,[rcx+0x3a]
   140006ba9:	call   QWORD PTR [rip+0x3c941]        # 0x1400434f0
   140006baf:	mov    DWORD PTR [rsi+0x30],eax
   140006bb2:	mov    rbx,QWORD PTR [rsp+0xc8]
   140006bba:	add    rsp,0x80
   140006bc1:	pop    r15
   140006bc3:	pop    r14
   140006bc5:	pop    r13
   140006bc7:	pop    r12
   140006bc9:	pop    rdi
   140006bca:	pop    rsi
   140006bcb:	pop    rbp
   140006bcc:	ret    
   140006bcd:	int3   
   140006bce:	int3   
   140006bcf:	int3   
   140006bd0:	rex push rbp
   140006bd2:	sub    rsp,0x20
   140006bd6:	mov    rbp,rdx
   140006bd9:	mov    rcx,QWORD PTR [rbp+0x30]
   140006bdd:	call   0x140003de0
   140006be2:	add    rsp,0x20
   140006be6:	pop    rbp
   140006be7:	ret    
   140006be8:	int3   
   140006be9:	int3   
   140006bea:	int3   
   140006beb:	int3   
   140006bec:	int3   
   140006bed:	int3   
   140006bee:	int3   
   140006bef:	int3   
   140006bf0:	rex push rbp
   140006bf2:	sub    rsp,0x20
   140006bf6:	mov    rbp,rdx
   140006bf9:	mov    rcx,QWORD PTR [rbp+0x30]
   140006bfd:	call   0x140003de0
   140006c02:	add    rsp,0x20
   140006c06:	pop    rbp
   140006c07:	ret    
   140006c08:	int3   
   140006c09:	int3   
   140006c0a:	int3   
   140006c0b:	int3   
   140006c0c:	int3   
   140006c0d:	int3   
   140006c0e:	int3   
   140006c0f:	int3   
   140006c10:	rex push rbp
   140006c12:	sub    rsp,0x20
   140006c16:	mov    rbp,rdx
   140006c19:	mov    rcx,QWORD PTR [rbp+0x30]
   140006c1d:	call   0x140003de0
   140006c22:	add    rsp,0x20
   140006c26:	pop    rbp
   140006c27:	ret    
   140006c28:	int3   
   140006c29:	int3   
   140006c2a:	int3   
   140006c2b:	int3   
   140006c2c:	int3   
   140006c2d:	int3   
   140006c2e:	int3   
   140006c2f:	int3   
   140006c30:	rex push rbp
   140006c32:	sub    rsp,0x20
   140006c36:	mov    rbp,rdx
   140006c39:	mov    rcx,QWORD PTR [rbp+0x30]
   140006c3d:	call   0x140003de0
   140006c42:	add    rsp,0x20
   140006c46:	pop    rbp
   140006c47:	ret    
   140006c48:	int3   
   140006c49:	int3   
   140006c4a:	int3   
   140006c4b:	int3   
   140006c4c:	int3   
   140006c4d:	int3   
   140006c4e:	int3   
   140006c4f:	int3   
   140006c50:	rex push rbp
   140006c52:	sub    rsp,0x20
   140006c56:	mov    rbp,rdx
   140006c59:	mov    rcx,QWORD PTR [rbp+0x30]
   140006c5d:	call   0x140003de0
   140006c62:	add    rsp,0x20
   140006c66:	pop    rbp
   140006c67:	ret    
   140006c68:	int3   
   140006c69:	int3   
   140006c6a:	int3   
   140006c6b:	int3   
   140006c6c:	int3   
   140006c6d:	int3   
   140006c6e:	int3   
   140006c6f:	int3   
   140006c70:	rex push rbp
   140006c72:	sub    rsp,0x20
   140006c76:	mov    rbp,rdx
   140006c79:	mov    rcx,QWORD PTR [rbp+0x30]
   140006c7d:	call   0x140003de0
   140006c82:	add    rsp,0x20
   140006c86:	pop    rbp
   140006c87:	ret    
   140006c88:	int3   
   140006c89:	int3   
   140006c8a:	int3   
   140006c8b:	int3   
   140006c8c:	int3   
   140006c8d:	int3   
   140006c8e:	int3   
   140006c8f:	int3   
   140006c90:	rex push rbp
   140006c92:	sub    rsp,0x20
   140006c96:	mov    rbp,rdx
   140006c99:	mov    rcx,QWORD PTR [rbp+0x30]
   140006c9d:	call   0x140003de0
   140006ca2:	add    rsp,0x20
   140006ca6:	pop    rbp
   140006ca7:	ret    
   140006ca8:	int3   
   140006ca9:	int3   
   140006caa:	int3   
   140006cab:	int3   
   140006cac:	int3   
   140006cad:	int3   
   140006cae:	int3   
   140006caf:	int3   
   140006cb0:	rex push rbp
   140006cb2:	sub    rsp,0x20
   140006cb6:	mov    rbp,rdx
   140006cb9:	mov    rcx,QWORD PTR [rbp+0x30]
   140006cbd:	call   0x140003de0
   140006cc2:	add    rsp,0x20
   140006cc6:	pop    rbp
   140006cc7:	ret    
   140006cc8:	int3   
   140006cc9:	int3   
   140006cca:	int3   
   140006ccb:	int3   
   140006ccc:	int3   
   140006ccd:	int3   
   140006cce:	int3   
   140006ccf:	int3   
   140006cd0:	rex push rbp
   140006cd2:	sub    rsp,0x20
   140006cd6:	mov    rbp,rdx
   140006cd9:	mov    rcx,QWORD PTR [rbp+0x30]
   140006cdd:	call   0x140003de0
   140006ce2:	add    rsp,0x20
   140006ce6:	pop    rbp
   140006ce7:	ret    
   140006ce8:	int3   
   140006ce9:	int3   
   140006cea:	int3   
   140006ceb:	int3   
   140006cec:	int3   
   140006ced:	int3   
   140006cee:	int3   
   140006cef:	int3   
   140006cf0:	rex push rbp
   140006cf2:	sub    rsp,0x20
   140006cf6:	mov    rbp,rdx
   140006cf9:	mov    rcx,QWORD PTR [rbp+0x30]
   140006cfd:	call   0x140003de0
   140006d02:	add    rsp,0x20
   140006d06:	pop    rbp
   140006d07:	ret    
   140006d08:	int3   
   140006d09:	int3   
   140006d0a:	int3   
   140006d0b:	int3   
   140006d0c:	int3   
   140006d0d:	int3   
   140006d0e:	int3   
   140006d0f:	int3   
   140006d10:	mov    QWORD PTR [rsp+0x8],rbx
   140006d15:	mov    QWORD PTR [rsp+0x10],rbp
   140006d1a:	mov    QWORD PTR [rsp+0x18],rsi
   140006d1f:	mov    QWORD PTR [rsp+0x20],rdi
   140006d24:	push   r12
   140006d26:	sub    rsp,0x20
   140006d2a:	mov    eax,r8d
   140006d2d:	mov    rbp,rdx
   140006d30:	mov    ebx,r8d
   140006d33:	shr    eax,0x4
   140006d36:	mov    rsi,rcx
   140006d39:	mov    edx,0x6
   140006d3e:	add    ax,0x1
   140006d42:	mov    rcx,rbp
   140006d45:	movzx  r8d,ax
   140006d49:	call   QWORD PTR [rip+0x3c7b1]        # 0x140043500
   140006d4f:	test   rax,rax
   140006d52:	mov    r12,rax
   140006d55:	je     0x140006e72
   140006d5b:	mov    rdx,rax
   140006d5e:	mov    rcx,rbp
   140006d61:	call   QWORD PTR [rip+0x3c7b1]        # 0x140043518
   140006d67:	test   rax,rax
   140006d6a:	je     0x140006e72
   140006d70:	mov    rcx,rax
   140006d73:	call   QWORD PTR [rip+0x3c7a7]        # 0x140043520
   140006d79:	test   rax,rax
   140006d7c:	mov    rdi,rax
   140006d7f:	je     0x140006e72
   140006d85:	mov    rdx,r12
   140006d88:	mov    rcx,rbp
   140006d8b:	call   QWORD PTR [rip+0x3c797]        # 0x140043528
   140006d91:	mov    r11d,eax
   140006d94:	add    r11,rdi
   140006d97:	and    ebx,0xf
   140006d9a:	jbe    0x140006db6
   140006d9c:	data16 data16 xchg ax,ax
   140006da0:	cmp    rdi,r11
   140006da3:	jae    0x140006e72
   140006da9:	add    ebx,0xffffffff
   140006dac:	movzx  eax,WORD PTR [rdi]
   140006daf:	lea    rdi,[rdi+rax*2+0x2]
   140006db4:	jne    0x140006da0
   140006db6:	cmp    rdi,r11
   140006db9:	jae    0x140006e72
   140006dbf:	movzx  eax,WORD PTR [rdi]
   140006dc2:	test   ax,ax
   140006dc5:	je     0x140006e72
   140006dcb:	movzx  ebx,ax
   140006dce:	mov    rax,QWORD PTR [rsi]
   140006dd1:	mov    ecx,0x1
   140006dd6:	sub    ecx,DWORD PTR [rax-0x8]
   140006dd9:	mov    eax,DWORD PTR [rax-0xc]
   140006ddc:	sub    eax,ebx
   140006dde:	or     ecx,eax
   140006de0:	jge    0x140006dec
   140006de2:	mov    edx,ebx
   140006de4:	mov    rcx,rsi
   140006de7:	call   0x140004370
   140006dec:	movzx  ecx,WORD PTR [rdi]
   140006def:	lea    r8,[rdi+0x2]
   140006df3:	cmp    ecx,0xffffffff
   140006df6:	jne    0x140006e09
   140006df8:	or     rcx,0xffffffffffffffff
   140006dfc:	xor    eax,eax
   140006dfe:	mov    rdi,r8
   140006e01:	repnz scas ax,WORD PTR es:[rdi]
   140006e04:	not    rcx
   140006e07:	and    ecx,ecx
   140006e09:	movsxd r9,ecx
   140006e0c:	mov    rcx,QWORD PTR [rsi]
   140006e0f:	lea    rdi,[rbx+rbx*1]
   140006e13:	mov    rdx,rdi
   140006e16:	add    r9,r9
   140006e19:	call   0x140029bf0
   140006e1e:	test   eax,eax
   140006e20:	je     0x140006e48
   140006e22:	cmp    eax,0xc
   140006e25:	je     0x140006e42
   140006e27:	cmp    eax,0x16
   140006e2a:	je     0x140006e3c
   140006e2c:	cmp    eax,0x22
   140006e2f:	je     0x140006e3c
   140006e31:	cmp    eax,0x50
   140006e34:	je     0x140006e48
   140006e36:	call   0x1400218c0
   140006e3b:	int3   
   140006e3c:	call   0x1400218c0
   140006e41:	int3   
   140006e42:	call   0x140021878
   140006e47:	int3   
   140006e48:	test   ebx,ebx
   140006e4a:	js     0x140006e67
   140006e4c:	mov    rcx,QWORD PTR [rsi]
   140006e4f:	cmp    ebx,DWORD PTR [rcx-0xc]
   140006e52:	jg     0x140006e67
   140006e54:	mov    DWORD PTR [rcx-0x10],ebx
   140006e57:	mov    rcx,QWORD PTR [rsi]
   140006e5a:	mov    eax,0x1
   140006e5f:	mov    WORD PTR [rdi+rcx*1],0x0
   140006e65:	jmp    0x140006e74
   140006e67:	mov    ecx,0x80070057
   140006e6c:	call   0x140003dc0
   140006e71:	int3   
   140006e72:	xor    eax,eax
   140006e74:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e79:	mov    rbp,QWORD PTR [rsp+0x38]
   140006e7e:	mov    rsi,QWORD PTR [rsp+0x40]
   140006e83:	mov    rdi,QWORD PTR [rsp+0x48]
   140006e88:	add    rsp,0x20
   140006e8c:	pop    r12
   140006e8e:	ret    
   140006e8f:	int3   
   140006e90:	mov    QWORD PTR [rsp+0x10],rbp
   140006e95:	mov    QWORD PTR [rsp+0x18],rsi
   140006e9a:	push   rdi
   140006e9b:	sub    rsp,0x20
   140006e9f:	mov    edi,r8d
   140006ea2:	mov    rsi,rdx
   140006ea5:	mov    rbp,rcx
   140006ea8:	call   QWORD PTR [rip+0x3c66a]        # 0x140043518
   140006eae:	test   rax,rax
   140006eb1:	jne    0x140006ec3
   140006eb3:	mov    rbp,QWORD PTR [rsp+0x38]
   140006eb8:	mov    rsi,QWORD PTR [rsp+0x40]
   140006ebd:	add    rsp,0x20
   140006ec1:	pop    rdi
   140006ec2:	ret    
   140006ec3:	mov    rcx,rax
   140006ec6:	mov    QWORD PTR [rsp+0x30],rbx
   140006ecb:	call   QWORD PTR [rip+0x3c64f]        # 0x140043520
   140006ed1:	test   rax,rax
   140006ed4:	mov    rbx,rax
   140006ed7:	je     0x140006f07
   140006ed9:	mov    rdx,rsi
   140006edc:	mov    rcx,rbp
   140006edf:	call   QWORD PTR [rip+0x3c643]        # 0x140043528
   140006ee5:	mov    r11d,eax
   140006ee8:	add    r11,rbx
   140006eeb:	and    edi,0xf
   140006eee:	jbe    0x140006f02
   140006ef0:	cmp    rbx,r11
   140006ef3:	jae    0x140006f07
   140006ef5:	add    edi,0xffffffff
   140006ef8:	movzx  eax,WORD PTR [rbx]
   140006efb:	lea    rbx,[rbx+rax*2+0x2]
   140006f00:	jne    0x140006ef0
   140006f02:	cmp    rbx,r11
   140006f05:	jb     0x140006f0b
   140006f07:	xor    eax,eax
   140006f09:	jmp    0x140006f17
   140006f0b:	xor    eax,eax
   140006f0d:	cmp    WORD PTR [rbx],ax
   140006f10:	cmove  rbx,rax
   140006f14:	mov    rax,rbx
   140006f17:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f1c:	mov    rbp,QWORD PTR [rsp+0x38]
   140006f21:	mov    rsi,QWORD PTR [rsp+0x40]
   140006f26:	add    rsp,0x20
   140006f2a:	pop    rdi
   140006f2b:	ret    
   140006f2c:	int3   
   140006f2d:	int3   
   140006f2e:	int3   
   140006f2f:	int3   
   140006f30:	mov    QWORD PTR [rsp+0x8],rcx
   140006f35:	push   rdi
   140006f36:	sub    rsp,0x30
   140006f3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006f43:	mov    QWORD PTR [rsp+0x48],rbx
   140006f48:	mov    QWORD PTR [rsp+0x50],rsi
   140006f4d:	mov    rbx,rdx
   140006f50:	mov    rsi,rcx
   140006f53:	call   0x14002157c
   140006f58:	mov    rcx,rax
   140006f5b:	xor    eax,eax
   140006f5d:	test   rcx,rcx
   140006f60:	setne  al
   140006f63:	test   eax,eax
   140006f65:	jne    0x140006f72
   140006f67:	mov    ecx,0x80004005
   140006f6c:	call   0x140003dc0
   140006f71:	int3   
   140006f72:	mov    rax,QWORD PTR [rcx]
   140006f75:	call   QWORD PTR [rax+0x18]
   140006f78:	add    rax,0x18
   140006f7c:	mov    QWORD PTR [rsi],rax
   140006f7f:	test   rbx,rbx
   140006f82:	je     0x140006fc1
   140006f84:	test   rbx,0xffffffffffff0000
   140006f8b:	jne    0x140006fac
   140006f8d:	movzx  edi,bx
   140006f90:	mov    ecx,edi
   140006f92:	call   0x140021f1c
   140006f97:	test   rax,rax
   140006f9a:	je     0x140006fd2
   140006f9c:	mov    r8d,edi
   140006f9f:	mov    rdx,rax
   140006fa2:	mov    rcx,rsi
   140006fa5:	call   0x140007010
   140006faa:	jmp    0x140006fd2
   140006fac:	xor    eax,eax
   140006fae:	or     rcx,0xffffffffffffffff
   140006fb2:	mov    rdi,rbx
   140006fb5:	repnz scas ax,WORD PTR es:[rdi]
   140006fb8:	not    rcx
   140006fbb:	sub    rcx,0x1
   140006fbf:	jmp    0x140006fc3
   140006fc1:	xor    ecx,ecx
   140006fc3:	mov    r8d,ecx
   140006fc6:	mov    rdx,rbx
   140006fc9:	mov    rcx,rsi
   140006fcc:	call   0x140004590
   140006fd1:	nop
   140006fd2:	mov    rax,rsi
   140006fd5:	mov    rbx,QWORD PTR [rsp+0x48]
   140006fda:	mov    rsi,QWORD PTR [rsp+0x50]
   140006fdf:	add    rsp,0x30
   140006fe3:	pop    rdi
   140006fe4:	ret    
   140006fe5:	int3   
   140006fe6:	int3   
   140006fe7:	int3   
   140006fe8:	int3   
   140006fe9:	int3   
   140006fea:	int3   
   140006feb:	int3   
   140006fec:	int3   
   140006fed:	int3   
   140006fee:	int3   
   140006fef:	int3   
   140006ff0:	rex push rbp
   140006ff2:	sub    rsp,0x20
   140006ff6:	mov    rbp,rdx
   140006ff9:	mov    rcx,QWORD PTR [rbp+0x40]
   140006ffd:	call   0x140003de0
   140007002:	add    rsp,0x20
   140007006:	pop    rbp
   140007007:	ret    
   140007008:	int3   
   140007009:	int3   
   14000700a:	int3   
   14000700b:	int3   
   14000700c:	int3   
   14000700d:	int3   
   14000700e:	int3   
   14000700f:	int3   
   140007010:	mov    QWORD PTR [rsp+0x8],rbx
   140007015:	mov    QWORD PTR [rsp+0x10],rbp
   14000701a:	mov    QWORD PTR [rsp+0x18],rsi
   14000701f:	mov    QWORD PTR [rsp+0x20],rdi
   140007024:	push   r12
   140007026:	sub    rsp,0x20
   14000702a:	mov    eax,r8d
   14000702d:	mov    rbp,rdx
   140007030:	mov    ebx,r8d
   140007033:	shr    eax,0x4
   140007036:	mov    rsi,rcx
   140007039:	mov    r8d,0x6
   14000703f:	add    ax,0x1
   140007043:	mov    rcx,rbp
   140007046:	movzx  edx,ax
   140007049:	call   QWORD PTR [rip+0x3c4e1]        # 0x140043530
   14000704f:	test   rax,rax
   140007052:	mov    r12,rax
   140007055:	je     0x140007172
   14000705b:	mov    rdx,rax
   14000705e:	mov    rcx,rbp
   140007061:	call   QWORD PTR [rip+0x3c4b1]        # 0x140043518
   140007067:	test   rax,rax
   14000706a:	je     0x140007172
   140007070:	mov    rcx,rax
   140007073:	call   QWORD PTR [rip+0x3c4a7]        # 0x140043520
   140007079:	test   rax,rax
   14000707c:	mov    rdi,rax
   14000707f:	je     0x140007172
   140007085:	mov    rdx,r12
   140007088:	mov    rcx,rbp
   14000708b:	call   QWORD PTR [rip+0x3c497]        # 0x140043528
   140007091:	mov    r11d,eax
   140007094:	add    r11,rdi
   140007097:	and    ebx,0xf
   14000709a:	jbe    0x1400070b6
   14000709c:	data16 data16 xchg ax,ax
   1400070a0:	cmp    rdi,r11
   1400070a3:	jae    0x140007172
   1400070a9:	add    ebx,0xffffffff
   1400070ac:	movzx  eax,WORD PTR [rdi]
   1400070af:	lea    rdi,[rdi+rax*2+0x2]
   1400070b4:	jne    0x1400070a0
   1400070b6:	cmp    rdi,r11
   1400070b9:	jae    0x140007172
   1400070bf:	movzx  eax,WORD PTR [rdi]
   1400070c2:	test   ax,ax
   1400070c5:	je     0x140007172
   1400070cb:	movzx  ebx,ax
   1400070ce:	mov    rax,QWORD PTR [rsi]
   1400070d1:	mov    ecx,0x1
   1400070d6:	sub    ecx,DWORD PTR [rax-0x8]
   1400070d9:	mov    eax,DWORD PTR [rax-0xc]
   1400070dc:	sub    eax,ebx
   1400070de:	or     ecx,eax
   1400070e0:	jge    0x1400070ec
   1400070e2:	mov    edx,ebx
   1400070e4:	mov    rcx,rsi
   1400070e7:	call   0x140004370
   1400070ec:	movzx  ecx,WORD PTR [rdi]
   1400070ef:	lea    r8,[rdi+0x2]
   1400070f3:	cmp    ecx,0xffffffff
   1400070f6:	jne    0x140007109
   1400070f8:	or     rcx,0xffffffffffffffff
   1400070fc:	xor    eax,eax
   1400070fe:	mov    rdi,r8
   140007101:	repnz scas ax,WORD PTR es:[rdi]
   140007104:	not    rcx
   140007107:	and    ecx,ecx
   140007109:	movsxd r9,ecx
   14000710c:	mov    rcx,QWORD PTR [rsi]
   14000710f:	lea    rdi,[rbx+rbx*1]
   140007113:	mov    rdx,rdi
   140007116:	add    r9,r9
   140007119:	call   0x140029bf0
   14000711e:	test   eax,eax
   140007120:	je     0x140007148
   140007122:	cmp    eax,0xc
   140007125:	je     0x140007142
   140007127:	cmp    eax,0x16
   14000712a:	je     0x14000713c
   14000712c:	cmp    eax,0x22
   14000712f:	je     0x14000713c
   140007131:	cmp    eax,0x50
   140007134:	je     0x140007148
   140007136:	call   0x1400218c0
   14000713b:	int3   
   14000713c:	call   0x1400218c0
   140007141:	int3   
   140007142:	call   0x140021878
   140007147:	int3   
   140007148:	test   ebx,ebx
   14000714a:	js     0x140007167
   14000714c:	mov    rcx,QWORD PTR [rsi]
   14000714f:	cmp    ebx,DWORD PTR [rcx-0xc]
   140007152:	jg     0x140007167
   140007154:	mov    DWORD PTR [rcx-0x10],ebx
   140007157:	mov    rcx,QWORD PTR [rsi]
   14000715a:	mov    eax,0x1
   14000715f:	mov    WORD PTR [rdi+rcx*1],0x0
   140007165:	jmp    0x140007174
   140007167:	mov    ecx,0x80070057
   14000716c:	call   0x140003dc0
   140007171:	int3   
   140007172:	xor    eax,eax
   140007174:	mov    rbx,QWORD PTR [rsp+0x30]
   140007179:	mov    rbp,QWORD PTR [rsp+0x38]
   14000717e:	mov    rsi,QWORD PTR [rsp+0x40]
   140007183:	mov    rdi,QWORD PTR [rsp+0x48]
   140007188:	add    rsp,0x20
   14000718c:	pop    r12
   14000718e:	ret    
   14000718f:	int3   
   140007190:	lea    rax,[rip+0x40c91]        # 0x140047e28
   140007197:	mov    QWORD PTR [rcx],rax
   14000719a:	jmp    0x140005860
   14000719f:	int3   
   1400071a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400071a5:	push   rdi
   1400071a6:	sub    rsp,0x20
   1400071aa:	lea    rax,[rip+0x40c77]        # 0x140047e28
   1400071b1:	mov    ebx,edx
   1400071b3:	mov    rdi,rcx
   1400071b6:	mov    QWORD PTR [rcx],rax
   1400071b9:	call   0x140005860
   1400071be:	test   bl,0x1
   1400071c1:	je     0x1400071cb
   1400071c3:	mov    rcx,rdi
   1400071c6:	call   0x14001490c
   1400071cb:	mov    rax,rdi
   1400071ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400071d3:	add    rsp,0x20
   1400071d7:	pop    rdi
   1400071d8:	ret    
   1400071d9:	int3   
   1400071da:	int3   
   1400071db:	int3   
   1400071dc:	int3   
   1400071dd:	int3   
   1400071de:	int3   
   1400071df:	int3   
   1400071e0:	lea    rax,[rip+0x45071]        # 0x14004c258
   1400071e7:	mov    QWORD PTR [rcx],rax
   1400071ea:	jmp    0x14000ea60
   1400071ef:	int3   
   1400071f0:	lea    rax,[rip+0x43e89]        # 0x14004b080
   1400071f7:	ret    
   1400071f8:	int3   
   1400071f9:	int3   
   1400071fa:	int3   
   1400071fb:	int3   
   1400071fc:	int3   
   1400071fd:	int3   
   1400071fe:	int3   
   1400071ff:	int3   
   140007200:	mov    QWORD PTR [rsp+0x8],rbx
   140007205:	mov    QWORD PTR [rsp+0x18],r8
   14000720a:	push   rdi
   14000720b:	sub    rsp,0x50
   14000720f:	mov    rdi,rcx
   140007212:	mov    rcx,QWORD PTR [rcx+0x40]
   140007216:	mov    rbx,r8
   140007219:	lea    r9,[rsp+0x20]
   14000721e:	xor    r8d,r8d
   140007221:	mov    edx,0x419
   140007226:	call   QWORD PTR [rip+0x3c7bc]        # 0x1400439e8
   14000722c:	mov    r11,QWORD PTR [rsp+0x20]
   140007231:	cmp    ebx,r11d
   140007234:	jl     0x14000725b
   140007236:	mov    ecx,DWORD PTR [rsp+0x74]
   14000723a:	shr    r11,0x20
   14000723e:	cmp    ecx,r11d
   140007241:	jl     0x14000725b
   140007243:	mov    rax,QWORD PTR [rsp+0x28]
   140007248:	cmp    ebx,eax
   14000724a:	jg     0x14000725b
   14000724c:	shr    rax,0x20
   140007250:	cmp    ecx,eax
   140007252:	jg     0x14000725b
   140007254:	mov    eax,0x1
   140007259:	jmp    0x14000725d
   14000725b:	xor    eax,eax
   14000725d:	cmp    eax,DWORD PTR [rdi+0x180]
   140007263:	je     0x140007283
   140007265:	mov    rcx,QWORD PTR [rdi+0x40]
   140007269:	lea    rdx,[rsp+0x20]
   14000726e:	mov    r9d,0x101
   140007274:	xor    r8d,r8d
   140007277:	mov    DWORD PTR [rdi+0x180],eax
   14000727d:	call   QWORD PTR [rip+0x3c715]        # 0x140043998
   140007283:	mov    rax,QWORD PTR [rdi+0x40]
   140007287:	lea    rcx,[rsp+0x30]
   14000728c:	mov    DWORD PTR [rsp+0x30],0x18
   140007294:	mov    DWORD PTR [rsp+0x34],0x2
   14000729c:	mov    DWORD PTR [rsp+0x40],0xffffffff
   1400072a4:	mov    QWORD PTR [rsp+0x38],rax
   1400072a9:	call   QWORD PTR [rip+0x3c6e1]        # 0x140043990
   1400072af:	mov    rcx,rdi
   1400072b2:	call   0x140018d54
   1400072b7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400072bc:	add    rsp,0x50
   1400072c0:	pop    rdi
   1400072c1:	ret    
   1400072c2:	int3   
   1400072c3:	int3   
   1400072c4:	int3   
   1400072c5:	int3   
   1400072c6:	int3   
   1400072c7:	int3   
   1400072c8:	int3   
   1400072c9:	int3   
   1400072ca:	int3   
   1400072cb:	int3   
   1400072cc:	int3   
   1400072cd:	int3   
   1400072ce:	int3   
   1400072cf:	int3   
   1400072d0:	rex push rbx
   1400072d2:	sub    rsp,0x30
   1400072d6:	cmp    DWORD PTR [rcx+0x180],0x0
   1400072dd:	mov    rbx,rcx
   1400072e0:	je     0x14000731b
   1400072e2:	mov    rcx,QWORD PTR [rcx+0x40]
   1400072e6:	lea    r9,[rsp+0x20]
   1400072eb:	xor    r8d,r8d
   1400072ee:	mov    edx,0x419
   1400072f3:	call   QWORD PTR [rip+0x3c6ef]        # 0x1400439e8
   1400072f9:	mov    rcx,QWORD PTR [rbx+0x40]
   1400072fd:	lea    rdx,[rsp+0x20]
   140007302:	mov    r9d,0x101
   140007308:	xor    r8d,r8d
   14000730b:	mov    DWORD PTR [rbx+0x180],0x0
   140007315:	call   QWORD PTR [rip+0x3c67d]        # 0x140043998
   14000731b:	xor    eax,eax
   14000731d:	add    rsp,0x30
   140007321:	pop    rbx
   140007322:	ret    
   140007323:	int3   
   140007324:	int3   
   140007325:	int3   
   140007326:	int3   
   140007327:	int3   
   140007328:	int3   
   140007329:	int3   
   14000732a:	int3   
   14000732b:	int3   
   14000732c:	int3   
   14000732d:	int3   
   14000732e:	int3   
   14000732f:	int3   
   140007330:	test   rdx,rdx
   140007333:	je     0x140007513
   140007339:	mov    rax,rsp
   14000733c:	mov    QWORD PTR [rax+0x18],rbx
   140007340:	mov    QWORD PTR [rax+0x20],rdi
   140007344:	push   r12
   140007346:	sub    rsp,0xa0
   14000734d:	cmp    QWORD PTR [rcx+0x108],0x0
   140007355:	mov    r12d,r8d
   140007358:	mov    rdi,rdx
   14000735b:	mov    rbx,rcx
   14000735e:	je     0x1400074fe
   140007364:	mov    QWORD PTR [rax+0x8],rbp
   140007368:	mov    QWORD PTR [rax+0x10],rsi
   14000736c:	call   0x14001fee4
   140007371:	mov    rcx,QWORD PTR [rbx+0x40]
   140007375:	lea    rdx,[rsp+0x90]
   14000737d:	mov    ebp,eax
   14000737f:	call   QWORD PTR [rip+0x3c65b]        # 0x1400439e0
   140007385:	mov    rcx,QWORD PTR [rbx+0x40]
   140007389:	lea    r9,[rsp+0x70]
   14000738e:	xor    r8d,r8d
   140007391:	mov    edx,0x419
   140007396:	call   QWORD PTR [rip+0x3c64c]        # 0x1400439e8
   14000739c:	mov    rcx,QWORD PTR [rbx+0x40]
   1400073a0:	lea    r9,[rsp+0x60]
   1400073a5:	xor    r8d,r8d
   1400073a8:	mov    edx,0x41a
   1400073ad:	call   QWORD PTR [rip+0x3c635]        # 0x1400439e8
   1400073b3:	mov    rcx,QWORD PTR [rbx+0x40]
   1400073b7:	call   QWORD PTR [rip+0x3c613]        # 0x1400439d0
   1400073bd:	mov    rcx,rax
   1400073c0:	call   0x140018e70
   1400073c5:	test   rax,rax
   1400073c8:	mov    rsi,rax
   1400073cb:	je     0x1400073ef
   1400073cd:	mov    rcx,QWORD PTR [rbx+0x40]
   1400073d1:	lea    rdx,[rsp+0x80]
   1400073d9:	call   QWORD PTR [rip+0x3c5e1]        # 0x1400439c0
   1400073df:	lea    rdx,[rsp+0x80]
   1400073e7:	mov    rcx,rsi
   1400073ea:	call   0x1400209b4
   1400073ef:	mov    rsi,QWORD PTR [rsp+0xb8]
   1400073f7:	test   bpl,0x2
   1400073fb:	mov    rbp,QWORD PTR [rsp+0xb0]
   140007403:	je     0x140007465
   140007405:	mov    r8d,DWORD PTR [rbx+0x118]
   14000740c:	mov    eax,DWORD PTR [rbx+0x11c]
   140007412:	mov    edx,DWORD PTR [rsp+0x68]
   140007416:	sub    edx,DWORD PTR [rsp+0x60]
   14000741a:	mov    BYTE PTR [rsp+0x58],0x0
   14000741f:	mov    ecx,0x64
   140007424:	cmp    edx,eax
   140007426:	mov    r10d,0xff
   14000742c:	cmovle eax,edx
   14000742f:	test   r12d,r12d
   140007432:	cmovne r10d,ecx
   140007436:	xor    r9d,r9d
   140007439:	mov    BYTE PTR [rsp+0x50],r10b
   14000743e:	mov    DWORD PTR [rsp+0x48],eax
   140007442:	mov    DWORD PTR [rsp+0x40],r8d
   140007447:	xor    r10d,r10d
   14000744a:	mov    DWORD PTR [rsp+0x38],r10d
   14000744f:	mov    DWORD PTR [rsp+0x30],r10d
   140007454:	mov    DWORD PTR [rsp+0x28],edx
   140007458:	mov    DWORD PTR [rsp+0x20],r8d
   14000745d:	xor    r8d,r8d
   140007460:	jmp    0x1400074ee
   140007465:	mov    edx,DWORD PTR [rbx+0x118]
   14000746b:	mov    eax,DWORD PTR [rsp+0x68]
   14000746f:	mov    ecx,DWORD PTR [rsp+0x7c]
   140007473:	movsd  xmm0,QWORD PTR [rip+0x5570d]        # 0x14005cb88
   14000747b:	movsd  xmm1,QWORD PTR [rip+0x556fd]        # 0x14005cb80
   140007483:	mulsd  xmm0,QWORD PTR [rip+0x461b5]        # 0x14004d640
   14000748b:	mulsd  xmm1,QWORD PTR [rip+0x461a5]        # 0x14004d638
   140007493:	sub    eax,DWORD PTR [rsp+0x60]
   140007497:	sub    ecx,DWORD PTR [rsp+0x74]
   14000749b:	mov    BYTE PTR [rsp+0x58],0x0
   1400074a0:	cvttsd2si r9d,xmm0
   1400074a5:	cvttsd2si r8d,xmm1
   1400074aa:	cmp    eax,edx
   1400074ac:	mov    r10d,0xff
   1400074b2:	cmovle edx,eax
   1400074b5:	mov    eax,DWORD PTR [rbx+0x11c]
   1400074bb:	cmp    ecx,eax
   1400074bd:	cmovle eax,ecx
   1400074c0:	test   r12d,r12d
   1400074c3:	mov    ecx,0x64
   1400074c8:	cmovne r10d,ecx
   1400074cc:	mov    BYTE PTR [rsp+0x50],r10b
   1400074d1:	mov    DWORD PTR [rsp+0x48],eax
   1400074d5:	mov    DWORD PTR [rsp+0x40],edx
   1400074d9:	xor    r10d,r10d
   1400074dc:	mov    DWORD PTR [rsp+0x38],r10d
   1400074e1:	mov    DWORD PTR [rsp+0x30],r10d
   1400074e6:	mov    DWORD PTR [rsp+0x28],eax
   1400074ea:	mov    DWORD PTR [rsp+0x20],edx
   1400074ee:	mov    rdx,QWORD PTR [rdi+0x8]
   1400074f2:	lea    rcx,[rbx+0x100]
   1400074f9:	call   0x140007630
   1400074fe:	lea    r11,[rsp+0xa0]
   140007506:	mov    rbx,QWORD PTR [r11+0x20]
   14000750a:	mov    rdi,QWORD PTR [r11+0x28]
   14000750e:	mov    rsp,r11
   140007511:	pop    r12
   140007513:	ret    0x0
   140007516:	int3   
   140007517:	int3   
   140007518:	int3   
   140007519:	int3   
   14000751a:	int3   
   14000751b:	int3   
   14000751c:	int3   
   14000751d:	int3   
   14000751e:	int3   
   14000751f:	int3   
   140007520:	test   rdx,rdx
   140007523:	je     0x140007623
   140007529:	mov    rax,rsp
   14000752c:	mov    QWORD PTR [rax+0x10],rbp
   140007530:	mov    QWORD PTR [rax+0x18],rsi
   140007534:	push   rdi
   140007535:	sub    rsp,0x70
   140007539:	cmp    QWORD PTR [rcx+0xb8],0x0
   140007541:	mov    ebp,r8d
   140007544:	mov    rsi,rdx
   140007547:	mov    rdi,rcx
   14000754a:	je     0x140007612
   140007550:	mov    rcx,QWORD PTR [rcx+0x40]
   140007554:	lea    r9,[rax-0x18]
   140007558:	xor    r8d,r8d
   14000755b:	mov    edx,0x419
   140007560:	mov    QWORD PTR [rax+0x8],rbx
   140007564:	call   QWORD PTR [rip+0x3c47e]        # 0x1400439e8
   14000756a:	mov    ecx,DWORD PTR [rsp+0x60]
   14000756e:	mov    r11d,DWORD PTR [rdi+0x160]
   140007575:	mov    r10d,DWORD PTR [rdi+0x164]
   14000757c:	mov    eax,DWORD PTR [rdi+0xc8]
   140007582:	mov    r9d,DWORD PTR [rdi+0xcc]
   140007589:	sub    r9d,DWORD PTR [rdi+0x16c]
   140007590:	cdq    
   140007591:	mov    BYTE PTR [rsp+0x58],0x0
   140007596:	sub    eax,edx
   140007598:	sub    r9d,r10d
   14000759b:	sar    eax,1
   14000759d:	mov    ebx,eax
   14000759f:	mov    eax,DWORD PTR [rsp+0x68]
   1400075a3:	sub    ebx,DWORD PTR [rdi+0x168]
   1400075a9:	sub    eax,ecx
   1400075ab:	sub    ebx,r11d
   1400075ae:	sub    eax,ebx
   1400075b0:	cdq    
   1400075b1:	sub    eax,edx
   1400075b3:	xor    edx,edx
   1400075b5:	sar    eax,1
   1400075b7:	cmp    DWORD PTR [rdi+0x180],edx
   1400075bd:	lea    r8d,[rcx+rax*1]
   1400075c1:	cmovne edx,ebx
   1400075c4:	mov    eax,0xff
   1400075c9:	add    edx,r11d
   1400075cc:	test   ebp,ebp
   1400075ce:	mov    ecx,0x80
   1400075d3:	cmovne eax,ecx
   1400075d6:	lea    rcx,[rdi+0xb0]
   1400075dd:	mov    BYTE PTR [rsp+0x50],al
   1400075e1:	mov    DWORD PTR [rsp+0x48],r9d
   1400075e6:	mov    DWORD PTR [rsp+0x40],ebx
   1400075ea:	mov    DWORD PTR [rsp+0x38],r10d
   1400075ef:	mov    DWORD PTR [rsp+0x30],edx
   1400075f3:	mov    rdx,QWORD PTR [rsi+0x8]
   1400075f7:	mov    DWORD PTR [rsp+0x28],r9d
   1400075fc:	mov    r9d,DWORD PTR [rsp+0x64]
   140007601:	mov    DWORD PTR [rsp+0x20],ebx
   140007605:	call   0x140007630
   14000760a:	mov    rbx,QWORD PTR [rsp+0x80]
   140007612:	lea    r11,[rsp+0x70]
   140007617:	mov    rbp,QWORD PTR [r11+0x18]
   14000761b:	mov    rsi,QWORD PTR [r11+0x20]
   14000761f:	mov    rsp,r11
   140007622:	pop    rdi
   140007623:	ret    0x0
   140007626:	int3   
   140007627:	int3   
   140007628:	int3   
   140007629:	int3   
   14000762a:	int3   
   14000762b:	int3   
   14000762c:	int3   
   14000762d:	int3   
   14000762e:	int3   
   14000762f:	int3   
   140007630:	mov    r11,rsp
   140007633:	mov    QWORD PTR [r11+0x8],rbx
   140007637:	mov    QWORD PTR [r11+0x10],rbp
   14000763b:	mov    QWORD PTR [r11+0x18],rsi
   14000763f:	mov    QWORD PTR [r11+0x20],rdi
   140007643:	push   r12
   140007645:	sub    rsp,0x60
   140007649:	movzx  eax,BYTE PTR [rsp+0xc0]
   140007651:	cmp    BYTE PTR [rcx+0x29],0x0
   140007655:	mov    edi,r9d
   140007658:	setne  BYTE PTR [r11+0x5b]
   14000765d:	add    DWORD PTR [rcx+0x38],0x1
   140007661:	cmp    QWORD PTR [rcx+0x30],0x0
   140007666:	mov    esi,r8d
   140007669:	mov    rbp,rdx
   14000766c:	mov    rbx,rcx
   14000766f:	mov    BYTE PTR [r11+0x5a],al
   140007673:	mov    BYTE PTR [r11+0x58],0x0
   140007678:	mov    BYTE PTR [r11+0x59],0x0
   14000767d:	lea    r12,[rip+0x5a624]        # 0x140061ca8
   140007684:	jne    0x1400076c7
   140007686:	xor    ecx,ecx
   140007688:	data16 data16 xchg ax,ax
   14000768c:	data16 data16 xchg ax,ax
   140007690:	xor    r8d,r8d
   140007693:	movsxd rax,ecx
   140007696:	xchg   QWORD PTR [r12+rax*8],r8
   14000769a:	test   r8,r8
   14000769d:	jne    0x1400076b2
   14000769f:	add    ecx,0x1
   1400076a2:	cmp    ecx,0x4
   1400076a5:	jl     0x140007690
   1400076a7:	xor    ecx,ecx
   1400076a9:	call   QWORD PTR [rip+0x3ba29]        # 0x1400430d8
   1400076af:	mov    r8,rax
   1400076b2:	mov    rdx,QWORD PTR [rbx+0x8]
   1400076b6:	mov    rcx,r8
   1400076b9:	mov    QWORD PTR [rbx+0x30],r8
   1400076bd:	call   QWORD PTR [rip+0x3ba1d]        # 0x1400430e0
   1400076c3:	mov    QWORD PTR [rbx+0x40],rax
   1400076c7:	mov    eax,DWORD PTR [rsp+0xc0]
   1400076ce:	mov    r9d,DWORD PTR [rsp+0x90]
   1400076d6:	mov    r8d,edi
   1400076d9:	mov    DWORD PTR [rsp+0x50],eax
   1400076dd:	mov    eax,DWORD PTR [rsp+0xb8]
   1400076e4:	mov    edx,esi
   1400076e6:	mov    DWORD PTR [rsp+0x48],eax
   1400076ea:	mov    eax,DWORD PTR [rsp+0xb0]
   1400076f1:	mov    rcx,rbp
   1400076f4:	mov    DWORD PTR [rsp+0x40],eax
   1400076f8:	mov    eax,DWORD PTR [rsp+0xa8]
   1400076ff:	mov    DWORD PTR [rsp+0x38],eax
   140007703:	mov    eax,DWORD PTR [rsp+0xa0]
   14000770a:	mov    DWORD PTR [rsp+0x30],eax
   14000770e:	mov    rax,QWORD PTR [rbx+0x30]
   140007712:	mov    QWORD PTR [rsp+0x28],rax
   140007717:	mov    eax,DWORD PTR [rsp+0x98]
   14000771e:	mov    DWORD PTR [rsp+0x20],eax
   140007722:	call   QWORD PTR [rip+0x3be80]        # 0x1400435a8
   140007728:	add    DWORD PTR [rbx+0x38],0xffffffff
   14000772c:	mov    edi,eax
   14000772e:	jne    0x140007776
   140007730:	mov    rdx,QWORD PTR [rbx+0x40]
   140007734:	mov    rcx,QWORD PTR [rbx+0x30]
   140007738:	call   QWORD PTR [rip+0x3b9a2]        # 0x1400430e0
   14000773e:	mov    rcx,QWORD PTR [rbx+0x30]
   140007742:	xor    r8d,r8d
   140007745:	data16 data16 xchg ax,ax
   140007749:	data16 xchg ax,ax
   14000774c:	data16 data16 xchg ax,ax
   140007750:	movsxd rdx,r8d
   140007753:	xchg   QWORD PTR [r12+rdx*8],rcx
   140007757:	test   rcx,rcx
   14000775a:	je     0x14000776c
   14000775c:	add    r8d,0x1
   140007760:	cmp    r8d,0x4
   140007764:	jl     0x140007750
   140007766:	call   QWORD PTR [rip+0x3b984]        # 0x1400430f0
   14000776c:	mov    QWORD PTR [rbx+0x30],0x0
   140007774:	mov    eax,edi
   140007776:	lea    r11,[rsp+0x60]
   14000777b:	mov    rbx,QWORD PTR [r11+0x10]
   14000777f:	mov    rbp,QWORD PTR [r11+0x18]
   140007783:	mov    rsi,QWORD PTR [r11+0x20]
   140007787:	mov    rdi,QWORD PTR [r11+0x28]
   14000778b:	mov    rsp,r11
   14000778e:	pop    r12
   140007790:	ret    
   140007791:	int3   
   140007792:	int3   
   140007793:	int3   
   140007794:	int3   
   140007795:	int3   
   140007796:	int3   
   140007797:	int3   
   140007798:	int3   
   140007799:	int3   
   14000779a:	int3   
   14000779b:	int3   
   14000779c:	int3   
   14000779d:	int3   
   14000779e:	int3   
   14000779f:	int3   
   1400077a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400077a5:	push   rdi
   1400077a6:	sub    rsp,0x30
   1400077aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400077b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400077b8:	mov    QWORD PTR [rsp+0x50],rbp
   1400077bd:	mov    QWORD PTR [rsp+0x58],rsi
   1400077c2:	mov    rbx,rcx
   1400077c5:	add    rcx,0x1c
   1400077c9:	lea    rax,[rcx+0x85]
   1400077d0:	mov    edx,0x8
   1400077d5:	xor    ebp,ebp
   1400077d7:	data16 xchg ax,ax
   1400077da:	data16 xchg ax,ax
   1400077dd:	data16 xchg ax,ax
   1400077e0:	and    DWORD PTR [rcx],0xffffff00
   1400077e6:	and    DWORD PTR [rax-0x81],0xfffffff0
   1400077ed:	and    DWORD PTR [rax-0x7d],0xfff00000
   1400077f4:	mov    DWORD PTR [rax-0x79],ebp
   1400077f7:	and    DWORD PTR [rax-0x5],0xffffff00
   1400077fe:	mov    BYTE PTR [rax-0x1],bpl
   140007802:	mov    BYTE PTR [rax],bpl
   140007805:	and    DWORD PTR [rax+0x17],0xffffff00
   14000780c:	and    DWORD PTR [rax+0x1b],0xfffffff0
   140007810:	and    DWORD PTR [rax+0x1f],0xfff00000
   140007817:	mov    DWORD PTR [rax+0x23],ebp
   14000781a:	and    DWORD PTR [rax+0x97],0xffffff00
   140007824:	mov    BYTE PTR [rax+0x9b],bpl
   14000782b:	mov    BYTE PTR [rax+0x9c],bpl
   140007832:	and    DWORD PTR [rax+0xb3],0xffffff00
   14000783c:	and    DWORD PTR [rax+0xb7],0xfffffff0
   140007843:	and    DWORD PTR [rax+0xbb],0xfff00000
   14000784d:	mov    DWORD PTR [rax+0xbf],ebp
   140007853:	and    DWORD PTR [rax+0x133],0xffffff00
   14000785d:	mov    BYTE PTR [rax+0x137],bpl
   140007864:	mov    BYTE PTR [rax+0x138],bpl
   14000786b:	and    DWORD PTR [rax+0x14f],0xffffff00
   140007875:	and    DWORD PTR [rax+0x153],0xfffffff0
   14000787c:	and    DWORD PTR [rax+0x157],0xfff00000
   140007886:	mov    DWORD PTR [rax+0x15b],ebp
   14000788c:	and    DWORD PTR [rax+0x1cf],0xffffff00
   140007896:	mov    BYTE PTR [rax+0x1d3],bpl
   14000789d:	mov    BYTE PTR [rax+0x1d4],bpl
   1400078a4:	add    rcx,0x270
   1400078ab:	add    rax,0x270
   1400078b1:	sub    rdx,0x1
   1400078b5:	jne    0x1400077e0
   1400078bb:	call   0x14002157c
   1400078c0:	mov    rdx,rax
   1400078c3:	mov    ecx,ebp
   1400078c5:	test   rax,rax
   1400078c8:	setne  cl
   1400078cb:	test   ecx,ecx
   1400078cd:	jne    0x1400078da
   1400078cf:	mov    ecx,0x80004005
   1400078d4:	call   0x140003dc0
   1400078d9:	int3   
   1400078da:	mov    rax,QWORD PTR [rax]
   1400078dd:	mov    rcx,rdx
   1400078e0:	call   QWORD PTR [rax+0x18]
   1400078e3:	add    rax,0x18
   1400078e7:	mov    QWORD PTR [rbx+0x13a0],rax
   1400078ee:	call   0x14002157c
   1400078f3:	mov    rdx,rax
   1400078f6:	mov    ecx,ebp
   1400078f8:	test   rax,rax
   1400078fb:	setne  cl
   1400078fe:	test   ecx,ecx
   140007900:	jne    0x14000790d
   140007902:	mov    ecx,0x80004005
   140007907:	call   0x140003dc0
   14000790c:	int3   
   14000790d:	mov    rax,QWORD PTR [rax]
   140007910:	mov    rcx,rdx
   140007913:	call   QWORD PTR [rax+0x18]
   140007916:	add    rax,0x18
   14000791a:	mov    QWORD PTR [rbx+0x13a8],rax
   140007921:	mov    QWORD PTR [rbx+0x8],rbp
   140007925:	xor    eax,eax
   140007927:	or     rcx,0xffffffffffffffff
   14000792b:	lea    rdi,[rip+0x42f76]        # 0x14004a8a8
   140007932:	repnz scas ax,WORD PTR es:[rdi]
   140007935:	not    rcx
   140007938:	lea    r8d,[rcx-0x1]
   14000793c:	lea    rdx,[rip+0x42f65]        # 0x14004a8a8
   140007943:	lea    rcx,[rbx+0x13a8]
   14000794a:	call   0x140004590
   14000794f:	mov    WORD PTR [rbx+0x10],0x58
   140007955:	mov    WORD PTR [rbx+0x12],0x54
   14000795b:	mov    DWORD PTR [rbx+0x14],0x19
   140007962:	mov    DWORD PTR [rbx+0x18],ebp
   140007965:	mov    rax,rbx
   140007968:	mov    rbx,QWORD PTR [rsp+0x48]
   14000796d:	mov    rbp,QWORD PTR [rsp+0x50]
   140007972:	mov    rsi,QWORD PTR [rsp+0x58]
   140007977:	add    rsp,0x30
   14000797b:	pop    rdi
   14000797c:	ret    
   14000797d:	int3   
   14000797e:	int3   
   14000797f:	int3   
   140007980:	rex push rbp
   140007982:	sub    rsp,0x20
   140007986:	mov    rbp,rdx
   140007989:	mov    rcx,QWORD PTR [rbp+0x40]
   14000798d:	add    rcx,0x13a0
   140007994:	call   0x140003de0
   140007999:	add    rsp,0x20
   14000799d:	pop    rbp
   14000799e:	ret    
   14000799f:	int3   
   1400079a0:	rex push rbp
   1400079a2:	sub    rsp,0x20
   1400079a6:	mov    rbp,rdx
   1400079a9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400079ad:	add    rcx,0x13a8
   1400079b4:	call   0x140003de0
   1400079b9:	add    rsp,0x20
   1400079bd:	pop    rbp
   1400079be:	ret    
   1400079bf:	int3   
   1400079c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400079c5:	push   rdi
   1400079c6:	sub    rsp,0x30
   1400079ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400079d3:	mov    QWORD PTR [rsp+0x48],rbx
   1400079d8:	mov    rbx,rcx
   1400079db:	mov    rdi,QWORD PTR [rcx+0x8]
   1400079df:	test   rdi,rdi
   1400079e2:	je     0x1400079fc
   1400079e4:	mov    rcx,rdi
   1400079e7:	call   0x140004120
   1400079ec:	mov    rcx,rdi
   1400079ef:	call   0x14001490c
   1400079f4:	mov    QWORD PTR [rbx+0x8],0x0
   1400079fc:	mov    QWORD PTR [rbx+0x8],0x0
   140007a04:	call   QWORD PTR [rip+0x3c0de]        # 0x140043ae8
   140007a0a:	nop
   140007a0b:	mov    rdx,QWORD PTR [rbx+0x13a8]
   140007a12:	sub    rdx,0x18
   140007a16:	or     edi,0xffffffff
   140007a19:	mov    eax,edi
   140007a1b:	lock xadd DWORD PTR [rdx+0x10],eax
   140007a20:	add    eax,edi
   140007a22:	test   eax,eax
   140007a24:	jg     0x140007a30
   140007a26:	mov    rcx,QWORD PTR [rdx]
   140007a29:	mov    rax,QWORD PTR [rcx]
   140007a2c:	call   QWORD PTR [rax+0x8]
   140007a2f:	nop
   140007a30:	mov    rdx,QWORD PTR [rbx+0x13a0]
   140007a37:	sub    rdx,0x18
   140007a3b:	lock xadd DWORD PTR [rdx+0x10],edi
   140007a40:	add    edi,0xffffffff
   140007a43:	test   edi,edi
   140007a45:	jg     0x140007a50
   140007a47:	mov    rcx,QWORD PTR [rdx]
   140007a4a:	mov    rax,QWORD PTR [rcx]
   140007a4d:	call   QWORD PTR [rax+0x8]
   140007a50:	mov    rbx,QWORD PTR [rsp+0x48]
   140007a55:	add    rsp,0x30
   140007a59:	pop    rdi
   140007a5a:	ret    
   140007a5b:	int3   
   140007a5c:	int3   
   140007a5d:	int3   
   140007a5e:	int3   
   140007a5f:	int3   
   140007a60:	rex push rbp
   140007a62:	sub    rsp,0x20
   140007a66:	mov    rbp,rdx
   140007a69:	mov    rcx,QWORD PTR [rbp+0x40]
   140007a6d:	add    rcx,0x13a0
   140007a74:	call   0x140003de0
   140007a79:	add    rsp,0x20
   140007a7d:	pop    rbp
   140007a7e:	ret    
   140007a7f:	int3   
   140007a80:	rex push rbp
   140007a82:	sub    rsp,0x20
   140007a86:	mov    rbp,rdx
   140007a89:	mov    rcx,QWORD PTR [rbp+0x40]
   140007a8d:	add    rcx,0x13a8
   140007a94:	call   0x140003de0
   140007a99:	add    rsp,0x20
   140007a9d:	pop    rbp
   140007a9e:	ret    
   140007a9f:	int3   
   140007aa0:	rex push rbx
   140007aa2:	push   rbp
   140007aa3:	push   rsi
   140007aa4:	push   rdi
   140007aa5:	push   r12
   140007aa7:	sub    rsp,0x30
   140007aab:	mov    rbx,rcx
   140007aae:	mov    edx,0x2
   140007ab3:	xor    ecx,ecx
   140007ab5:	call   QWORD PTR [rip+0x3c035]        # 0x140043af0
   140007abb:	lea    r8,[rsp+0x20]
   140007ac0:	lea    rdx,[rsp+0x28]
   140007ac5:	lea    rcx,[rip+0x43904]        # 0x14004b3d0
   140007acc:	mov    QWORD PTR [rsp+0x28],0x0
   140007ad5:	mov    QWORD PTR [rsp+0x20],0x0
   140007ade:	call   0x14000ab50
   140007ae3:	mov    r12,QWORD PTR [rsp+0x20]
   140007ae8:	test   eax,eax
   140007aea:	mov    ebp,eax
   140007aec:	je     0x140007c3d
   140007af2:	mov    QWORD PTR [rsp+0x68],r13
   140007af7:	lea    rdx,[r12+0x4]
   140007afc:	mov    QWORD PTR [rsp+0x70],r14
   140007b01:	test   rdx,rdx
   140007b04:	mov    QWORD PTR [rsp+0x78],r15
   140007b09:	jne    0x140007b0f
   140007b0b:	xor    ecx,ecx
   140007b0d:	jmp    0x140007b22
   140007b0f:	or     rcx,0xffffffffffffffff
   140007b13:	xor    eax,eax
   140007b15:	mov    rdi,rdx
   140007b18:	repnz scas ax,WORD PTR es:[rdi]
   140007b1b:	not    rcx
   140007b1e:	sub    rcx,0x1
   140007b22:	mov    r8d,ecx
   140007b25:	lea    rcx,[rbx+0x13a8]
   140007b2c:	call   0x140004590
   140007b31:	lea    rdx,[rbx+0x13a8]
   140007b38:	lea    rcx,[rbx+0x13a0]
   140007b3f:	call   0x14000b6c0
   140007b44:	mov    rcx,QWORD PTR [rbx+0x13a0]
   140007b4b:	mov    dx,0x5c
   140007b4f:	call   0x14002a3d0
   140007b54:	test   rax,rax
   140007b57:	jne    0x140007b5e
   140007b59:	or     eax,0xffffffff
   140007b5c:	jmp    0x140007b68
   140007b5e:	sub    rax,QWORD PTR [rbx+0x13a0]
   140007b65:	sar    rax,1
   140007b68:	lea    edx,[rax+0x1]
   140007b6b:	mov    rax,QWORD PTR [rbx+0x13a0]
   140007b72:	lea    rcx,[rbx+0x13a0]
   140007b79:	mov    r8d,DWORD PTR [rax-0x10]
   140007b7d:	sub    r8d,edx
   140007b80:	call   0x14000b510
   140007b85:	xor    eax,eax
   140007b87:	or     rcx,0xffffffffffffffff
   140007b8b:	lea    r14,[rip+0x43856]        # 0x14004b3e8
   140007b92:	mov    edx,0x1
   140007b97:	mov    rdi,r14
   140007b9a:	mov    r13,r14
   140007b9d:	repnz scas ax,WORD PTR es:[rdi]
   140007ba0:	mov    rax,QWORD PTR [rbx+0x13a0]
   140007ba7:	mov    r15d,DWORD PTR [rax-0x10]
   140007bab:	sub    edx,DWORD PTR [rax-0x8]
   140007bae:	sub    r13,rax
   140007bb1:	mov    eax,DWORD PTR [rax-0xc]
   140007bb4:	not    rcx
   140007bb7:	sar    r13,1
   140007bba:	sub    rcx,0x1
   140007bbe:	mov    r8,rcx
   140007bc1:	mov    QWORD PTR [rsp+0x20],rcx
   140007bc6:	lea    edi,[r15+rcx*1]
   140007bca:	sub    eax,edi
   140007bcc:	or     edx,eax
   140007bce:	jge    0x140007be3
   140007bd0:	lea    rcx,[rbx+0x13a0]
   140007bd7:	mov    edx,edi
   140007bd9:	call   0x140004370
   140007bde:	mov    r8,QWORD PTR [rsp+0x20]
   140007be3:	mov    rax,QWORD PTR [rbx+0x13a0]
   140007bea:	mov    rcx,r15
   140007bed:	mov    r15,QWORD PTR [rsp+0x78]
   140007bf2:	cmp    r13,rcx
   140007bf5:	ja     0x140007bfb
   140007bf7:	lea    r14,[rax+r13*2]
   140007bfb:	movsxd rdx,r8d
   140007bfe:	lea    rcx,[rax+rcx*2]
   140007c02:	mov    r8,r14
   140007c05:	add    rdx,rdx
   140007c08:	mov    r9,rdx
   140007c0b:	call   0x140029bf0
   140007c10:	test   edi,edi
   140007c12:	mov    r14,QWORD PTR [rsp+0x70]
   140007c17:	mov    r13,QWORD PTR [rsp+0x68]
   140007c1c:	js     0x140007c71
   140007c1e:	mov    rax,QWORD PTR [rbx+0x13a0]
   140007c25:	cmp    edi,DWORD PTR [rax-0xc]
   140007c28:	jg     0x140007c71
   140007c2a:	mov    DWORD PTR [rax-0x10],edi
   140007c2d:	mov    rax,QWORD PTR [rbx+0x13a0]
   140007c34:	movsxd rcx,edi
   140007c37:	mov    WORD PTR [rax+rcx*2],0x0
   140007c3d:	mov    rcx,QWORD PTR [rsp+0x28]
   140007c42:	call   QWORD PTR [rip+0x3b898]        # 0x1400434e0
   140007c48:	mov    rcx,r12
   140007c4b:	call   QWORD PTR [rip+0x3b88f]        # 0x1400434e0
   140007c51:	test   ebp,ebp
   140007c53:	je     0x140007c8c
   140007c55:	mov    rcx,rbx
   140007c58:	call   0x140008660
   140007c5d:	test   eax,eax
   140007c5f:	jne    0x140007c7c
   140007c61:	mov    rcx,rbx
   140007c64:	call   0x14000a2f0
   140007c69:	test   eax,eax
   140007c6b:	jne    0x140007c7c
   140007c6d:	xor    ebp,ebp
   140007c6f:	jmp    0x140007c81
   140007c71:	mov    ecx,0x80070057
   140007c76:	call   0x140003dc0
   140007c7b:	int3   
   140007c7c:	mov    ebp,0x1
   140007c81:	mov    rcx,rbx
   140007c84:	call   0x140007ca0
   140007c89:	mov    DWORD PTR [rbx+0x14],eax
   140007c8c:	mov    eax,ebp
   140007c8e:	add    rsp,0x30
   140007c92:	pop    r12
   140007c94:	pop    rdi
   140007c95:	pop    rsi
   140007c96:	pop    rbp
   140007c97:	pop    rbx
   140007c98:	ret    
   140007c99:	int3   
   140007c9a:	int3   
   140007c9b:	int3   
   140007c9c:	int3   
   140007c9d:	int3   
   140007c9e:	int3   
   140007c9f:	int3   
   140007ca0:	rex push rbx
   140007ca2:	push   rdi
   140007ca3:	sub    rsp,0x78
   140007ca7:	mov    rax,QWORD PTR [rip+0x43672]        # 0x14004b320
   140007cae:	mov    rdi,QWORD PTR [rcx+0x13a8]
   140007cb5:	lea    rdx,[rsp+0x40]
   140007cba:	mov    QWORD PTR [rdx],rax
   140007cbd:	mov    rax,QWORD PTR [rip+0x43664]        # 0x14004b328
   140007cc4:	mov    DWORD PTR [rsp+0x90],0x19
   140007ccf:	mov    rcx,QWORD PTR [rdi-0x18]
   140007cd3:	mov    QWORD PTR [rdx+0x8],rax
   140007cd7:	mov    rax,QWORD PTR [rcx]
   140007cda:	call   QWORD PTR [rax+0x20]
   140007cdd:	cmp    DWORD PTR [rdi-0x8],0x0
   140007ce1:	mov    rcx,rax
   140007ce4:	jl     0x140007cf7
   140007ce6:	cmp    rax,QWORD PTR [rdi-0x18]
   140007cea:	jne    0x140007cf7
   140007cec:	lea    rbx,[rdi-0x18]
   140007cf0:	lock add DWORD PTR [rdi-0x8],0x1
   140007cf5:	jmp    0x140007d34
   140007cf7:	mov    rax,QWORD PTR [rax]
   140007cfa:	mov    edx,DWORD PTR [rdi-0x10]
   140007cfd:	mov    r8d,0x2
   140007d03:	call   QWORD PTR [rax]
   140007d05:	test   rax,rax
   140007d08:	mov    rbx,rax
   140007d0b:	jne    0x140007d13
   140007d0d:	call   0x140004480
   140007d12:	int3   
   140007d13:	mov    eax,DWORD PTR [rdi-0x10]
   140007d16:	lea    rcx,[rbx+0x18]
   140007d1a:	mov    r8,rdi
   140007d1d:	mov    DWORD PTR [rbx+0x8],eax
   140007d20:	mov    eax,DWORD PTR [rdi-0x10]
   140007d23:	add    eax,0x1
   140007d26:	movsxd rdx,eax
   140007d29:	add    rdx,rdx
   140007d2c:	mov    r9,rdx
   140007d2f:	call   0x140029bf0
   140007d34:	add    rbx,0x18
   140007d38:	mov    QWORD PTR [rsp+0x70],rsi
   140007d3d:	lea    rdi,[rip+0x42b64]        # 0x14004a8a8
   140007d44:	mov    rsi,rbx
   140007d47:	mov    ecx,0x1
   140007d4c:	mov    QWORD PTR [rsp+0xa0],rbx
   140007d54:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140007d57:	jne    0x140007d6f
   140007d59:	lea    rdx,[rbx-0x18]
   140007d5d:	or     eax,0xffffffff
   140007d60:	lock xadd DWORD PTR [rdx+0x10],eax
   140007d65:	add    eax,0xffffffff
   140007d68:	test   eax,eax
   140007d6a:	jmp    0x140007e3c
   140007d6f:	xor    esi,esi
   140007d71:	xor    r9d,r9d
   140007d74:	mov    edx,0xc0000000
   140007d79:	mov    QWORD PTR [rsp+0x30],rsi
   140007d7e:	lea    r8d,[rsi+0x3]
   140007d82:	mov    rcx,rbx
   140007d85:	mov    DWORD PTR [rsp+0x28],esi
   140007d89:	mov    DWORD PTR [rsp+0x20],0x3
   140007d91:	call   QWORD PTR [rip+0x3b7e9]        # 0x140043580
   140007d97:	cmp    rax,0xffffffffffffffff
   140007d9b:	mov    rdi,rax
   140007d9e:	je     0x140007d59
   140007da0:	lea    rdx,[rsp+0x50]
   140007da5:	lea    rcx,[rsp+0x40]
   140007daa:	mov    QWORD PTR [rsp+0x38],rsi
   140007daf:	mov    rax,QWORD PTR [rcx]
   140007db2:	lea    r9d,[rsi+0x18]
   140007db6:	lea    r8,[rsp+0x50]
   140007dbb:	mov    QWORD PTR [rdx],rax
   140007dbe:	mov    rax,QWORD PTR [rcx+0x8]
   140007dc2:	mov    rcx,rdi
   140007dc5:	mov    QWORD PTR [rdx+0x8],rax
   140007dc9:	lea    rax,[rsp+0x98]
   140007dd1:	mov    edx,0x2f0003
   140007dd6:	mov    QWORD PTR [rsp+0x30],rax
   140007ddb:	lea    rax,[rsp+0x90]
   140007de3:	mov    DWORD PTR [rsp+0x28],0x4
   140007deb:	mov    DWORD PTR [rsp+0x64],0x1
   140007df3:	mov    DWORD PTR [rsp+0x60],0xb
   140007dfb:	mov    DWORD PTR [rsp+0x98],esi
   140007e02:	mov    QWORD PTR [rsp+0x20],rax
   140007e07:	call   QWORD PTR [rip+0x3b76b]        # 0x140043578
   140007e0d:	mov    esi,eax
   140007e0f:	call   QWORD PTR [rip+0x3b6d3]        # 0x1400434e8
   140007e15:	test   rdi,rdi
   140007e18:	je     0x140007e23
   140007e1a:	mov    rcx,rdi
   140007e1d:	call   QWORD PTR [rip+0x3b765]        # 0x140043588
   140007e23:	test   esi,esi
   140007e25:	je     0x140007d59
   140007e2b:	lea    rdx,[rbx-0x18]
   140007e2f:	or     eax,0xffffffff
   140007e32:	lock xadd DWORD PTR [rdx+0x10],eax
   140007e37:	add    eax,0xffffffff
   140007e3a:	test   eax,eax
   140007e3c:	jg     0x140007e47
   140007e3e:	mov    rcx,QWORD PTR [rdx]
   140007e41:	mov    rax,QWORD PTR [rcx]
   140007e44:	call   QWORD PTR [rax+0x8]
   140007e47:	mov    eax,DWORD PTR [rsp+0x90]
   140007e4e:	mov    rsi,QWORD PTR [rsp+0x70]
   140007e53:	add    rsp,0x78
   140007e57:	pop    rdi
   140007e58:	pop    rbx
   140007e59:	ret    
   140007e5a:	int3   
   140007e5b:	int3   
   140007e5c:	int3   
   140007e5d:	int3   
   140007e5e:	int3   
   140007e5f:	int3   
   140007e60:	rex push rbx
   140007e62:	push   rdi
   140007e63:	push   r13
   140007e65:	push   r15
   140007e67:	sub    rsp,0x248
   140007e6e:	mov    r13,rcx
   140007e71:	lea    rcx,[rsp+0x130]
   140007e79:	xor    r15d,r15d
   140007e7c:	xor    edx,edx
   140007e7e:	mov    r8d,0x100
   140007e84:	mov    DWORD PTR [rsp+0x270],r15d
   140007e8c:	call   0x14002ac20
   140007e91:	mov    rax,QWORD PTR [rip+0x43518]        # 0x14004b3b0
   140007e98:	mov    rdi,QWORD PTR [r13+0x13a8]
   140007e9f:	mov    rcx,QWORD PTR [rdi-0x18]
   140007ea3:	lea    rdx,[rsp+0x60]
   140007ea8:	mov    QWORD PTR [rdx],rax
   140007eab:	mov    rax,QWORD PTR [rip+0x43506]        # 0x14004b3b8
   140007eb2:	mov    QWORD PTR [rdx+0x8],rax
   140007eb6:	mov    rax,QWORD PTR [rcx]
   140007eb9:	call   QWORD PTR [rax+0x20]
   140007ebc:	cmp    DWORD PTR [rdi-0x8],r15d
   140007ec0:	mov    rcx,rax
   140007ec3:	jl     0x140007ed6
   140007ec5:	cmp    rax,QWORD PTR [rdi-0x18]
   140007ec9:	jne    0x140007ed6
   140007ecb:	lea    rbx,[rdi-0x18]
   140007ecf:	lock add DWORD PTR [rdi-0x8],0x1
   140007ed4:	jmp    0x140007f13
   140007ed6:	mov    rax,QWORD PTR [rax]
   140007ed9:	mov    edx,DWORD PTR [rdi-0x10]
   140007edc:	mov    r8d,0x2
   140007ee2:	call   QWORD PTR [rax]
   140007ee4:	test   rax,rax
   140007ee7:	mov    rbx,rax
   140007eea:	jne    0x140007ef2
   140007eec:	call   0x140004480
   140007ef1:	int3   
   140007ef2:	mov    eax,DWORD PTR [rdi-0x10]
   140007ef5:	lea    rcx,[rbx+0x18]
   140007ef9:	mov    r8,rdi
   140007efc:	mov    DWORD PTR [rbx+0x8],eax
   140007eff:	mov    eax,DWORD PTR [rdi-0x10]
   140007f02:	add    eax,0x1
   140007f05:	movsxd rdx,eax
   140007f08:	add    rdx,rdx
   140007f0b:	mov    r9,rdx
   140007f0e:	call   0x140029bf0
   140007f13:	add    rbx,0x18
   140007f17:	mov    QWORD PTR [rsp+0x278],rbp
   140007f1f:	mov    QWORD PTR [rsp+0x240],rsi
   140007f27:	lea    rdi,[rip+0x4297a]        # 0x14004a8a8
   140007f2e:	mov    ecx,0x1
   140007f33:	mov    rsi,rbx
   140007f36:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140007f39:	mov    QWORD PTR [rsp+0xa0],rbx
   140007f41:	jne    0x140007f6b
   140007f43:	lea    rdx,[rbx-0x18]
   140007f47:	or     rbp,0xffffffffffffffff
   140007f4b:	lock xadd DWORD PTR [rdx+0x10],ebp
   140007f50:	add    ebp,0xffffffff
   140007f53:	test   ebp,ebp
   140007f55:	jg     0x140008071
   140007f5b:	mov    rcx,QWORD PTR [rdx]
   140007f5e:	mov    rax,QWORD PTR [rcx]
   140007f61:	call   QWORD PTR [rax+0x8]
   140007f64:	xor    eax,eax
   140007f66:	jmp    0x14000844d
   140007f6b:	xor    r9d,r9d
   140007f6e:	mov    QWORD PTR [rsp+0x30],r15
   140007f73:	mov    edx,0xc0000000
   140007f78:	lea    r8d,[r9+0x3]
   140007f7c:	mov    rcx,rbx
   140007f7f:	mov    DWORD PTR [rsp+0x28],r15d
   140007f84:	mov    DWORD PTR [rsp+0x20],0x3
   140007f8c:	call   QWORD PTR [rip+0x3b5ee]        # 0x140043580
   140007f92:	cmp    rax,0xffffffffffffffff
   140007f96:	mov    rdi,rax
   140007f99:	jne    0x140007fc1
   140007f9b:	lea    rdx,[rbx-0x18]
   140007f9f:	or     rbp,rax
   140007fa2:	lock xadd DWORD PTR [rdx+0x10],ebp
   140007fa7:	add    ebp,eax
   140007fa9:	test   ebp,ebp
   140007fab:	jg     0x140008071
   140007fb1:	mov    rcx,QWORD PTR [rdx]
   140007fb4:	mov    rax,QWORD PTR [rcx]
   140007fb7:	call   QWORD PTR [rax+0x8]
   140007fba:	xor    eax,eax
   140007fbc:	jmp    0x14000844d
   140007fc1:	lea    rdx,[rsp+0x88]
   140007fc9:	lea    rcx,[rsp+0x60]
   140007fce:	mov    QWORD PTR [rsp+0x38],r15
   140007fd3:	mov    rax,QWORD PTR [rcx]
   140007fd6:	lea    r8,[rsp+0x88]
   140007fde:	mov    r9d,0x18
   140007fe4:	mov    QWORD PTR [rdx],rax
   140007fe7:	mov    rax,QWORD PTR [rcx+0x8]
   140007feb:	mov    rcx,rdi
   140007fee:	mov    QWORD PTR [rdx+0x8],rax
   140007ff2:	lea    rax,[rsp+0x288]
   140007ffa:	mov    edx,0x2f0003
   140007fff:	mov    QWORD PTR [rsp+0x30],rax
   140008004:	lea    rax,[rsp+0x270]
   14000800c:	mov    DWORD PTR [rsp+0x28],0x4
   140008014:	mov    DWORD PTR [rsp+0x9c],0x1
   14000801f:	mov    DWORD PTR [rsp+0x98],r15d
   140008027:	mov    DWORD PTR [rsp+0x288],r15d
   14000802f:	mov    QWORD PTR [rsp+0x20],rax
   140008034:	call   QWORD PTR [rip+0x3b53e]        # 0x140043578
   14000803a:	mov    esi,eax
   14000803c:	call   QWORD PTR [rip+0x3b4a6]        # 0x1400434e8
   140008042:	test   rdi,rdi
   140008045:	je     0x140008050
   140008047:	mov    rcx,rdi
   14000804a:	call   QWORD PTR [rip+0x3b538]        # 0x140043588
   140008050:	test   esi,esi
   140008052:	jne    0x140008078
   140008054:	lea    rdx,[rbx-0x18]
   140008058:	or     rbp,0xffffffffffffffff
   14000805c:	lock xadd DWORD PTR [rdx+0x10],ebp
   140008061:	add    ebp,0xffffffff
   140008064:	test   ebp,ebp
   140008066:	jg     0x140008071
   140008068:	mov    rcx,QWORD PTR [rdx]
   14000806b:	mov    rax,QWORD PTR [rcx]
   14000806e:	call   QWORD PTR [rax+0x8]
   140008071:	xor    eax,eax
   140008073:	jmp    0x14000844d
   140008078:	or     rbp,0xffffffffffffffff
   14000807c:	lea    rdx,[rbx-0x18]
   140008080:	mov    ecx,ebp
   140008082:	lock xadd DWORD PTR [rdx+0x10],ecx
   140008087:	add    ecx,ebp
   140008089:	test   ecx,ecx
   14000808b:	jg     0x140008096
   14000808d:	mov    rcx,QWORD PTR [rdx]
   140008090:	mov    rax,QWORD PTR [rcx]
   140008093:	call   QWORD PTR [rax+0x8]
   140008096:	mov    ecx,DWORD PTR [rsp+0x270]
   14000809d:	test   ecx,ecx
   14000809f:	jne    0x1400080a9
   1400080a1:	lea    eax,[rcx+0x1]
   1400080a4:	jmp    0x14000844d
   1400080a9:	lea    rdx,[rcx+rcx*2]
   1400080ad:	mov    DWORD PTR [r13+0x0],ecx
   1400080b1:	mov    eax,0x4
   1400080b6:	mov    QWORD PTR [rsp+0x238],r12
   1400080be:	mul    rdx
   1400080c1:	cmovo  rax,rbp
   1400080c5:	mov    rcx,rax
   1400080c8:	call   0x140014904
   1400080cd:	test   rax,rax
   1400080d0:	mov    r12,rax
   1400080d3:	je     0x140008445
   1400080d9:	mov    eax,DWORD PTR [rsp+0x270]
   1400080e0:	mov    rdi,QWORD PTR [r13+0x13a8]
   1400080e7:	lea    rcx,[rsp+0x60]
   1400080ec:	mov    QWORD PTR [rsp+0x230],r14
   1400080f4:	lea    r14d,[rax+rax*2]
   1400080f8:	mov    rax,QWORD PTR [rip+0x432b1]        # 0x14004b3b0
   1400080ff:	mov    QWORD PTR [rcx],rax
   140008102:	mov    rax,QWORD PTR [rip+0x432af]        # 0x14004b3b8
   140008109:	shl    r14d,0x2
   14000810d:	mov    QWORD PTR [rcx+0x8],rax
   140008111:	mov    rcx,QWORD PTR [rdi-0x18]
   140008115:	mov    rax,QWORD PTR [rcx]
   140008118:	call   QWORD PTR [rax+0x20]
   14000811b:	cmp    DWORD PTR [rdi-0x8],r15d
   14000811f:	mov    rcx,rax
   140008122:	jl     0x140008135
   140008124:	cmp    rax,QWORD PTR [rdi-0x18]
   140008128:	jne    0x140008135
   14000812a:	lea    rbx,[rdi-0x18]
   14000812e:	lock add DWORD PTR [rdi-0x8],0x1
   140008133:	jmp    0x140008172
   140008135:	mov    rax,QWORD PTR [rax]
   140008138:	mov    edx,DWORD PTR [rdi-0x10]
   14000813b:	mov    r8d,0x2
   140008141:	call   QWORD PTR [rax]
   140008143:	test   rax,rax
   140008146:	mov    rbx,rax
   140008149:	jne    0x140008151
   14000814b:	call   0x140004480
   140008150:	int3   
   140008151:	mov    eax,DWORD PTR [rdi-0x10]
   140008154:	lea    rcx,[rbx+0x18]
   140008158:	mov    r8,rdi
   14000815b:	mov    DWORD PTR [rbx+0x8],eax
   14000815e:	mov    eax,DWORD PTR [rdi-0x10]
   140008161:	add    eax,0x1
   140008164:	movsxd rdx,eax
   140008167:	add    rdx,rdx
   14000816a:	mov    r9,rdx
   14000816d:	call   0x140029bf0
   140008172:	add    rbx,0x18
   140008176:	lea    rdi,[rip+0x4272b]        # 0x14004a8a8
   14000817d:	mov    ecx,0x1
   140008182:	mov    rsi,rbx
   140008185:	mov    QWORD PTR [rsp+0x40],rbx
   14000818a:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000818d:	jne    0x1400081bb
   14000818f:	lea    rdx,[rbx-0x18]
   140008193:	lock xadd DWORD PTR [rdx+0x10],ebp
   140008198:	add    ebp,0xffffffff
   14000819b:	test   ebp,ebp
   14000819d:	jg     0x1400082ae
   1400081a3:	mov    rcx,QWORD PTR [rdx]
   1400081a6:	mov    rax,QWORD PTR [rcx]
   1400081a9:	call   QWORD PTR [rax+0x8]
   1400081ac:	mov    rcx,r12
   1400081af:	call   0x14001490c
   1400081b4:	xor    eax,eax
   1400081b6:	jmp    0x14000843d
   1400081bb:	xor    r9d,r9d
   1400081be:	mov    QWORD PTR [rsp+0x30],r15
   1400081c3:	mov    edx,0xc0000000
   1400081c8:	lea    r8d,[r9+0x3]
   1400081cc:	mov    rcx,rbx
   1400081cf:	mov    DWORD PTR [rsp+0x28],r15d
   1400081d4:	mov    DWORD PTR [rsp+0x20],0x3
   1400081dc:	call   QWORD PTR [rip+0x3b39e]        # 0x140043580
   1400081e2:	cmp    rax,0xffffffffffffffff
   1400081e6:	mov    rdi,rax
   1400081e9:	jne    0x140008216
   1400081eb:	lea    rdx,[rbx-0x18]
   1400081ef:	lock xadd DWORD PTR [rdx+0x10],ebp
   1400081f4:	add    ebp,eax
   1400081f6:	test   ebp,ebp
   1400081f8:	jg     0x1400082ae
   1400081fe:	mov    rcx,QWORD PTR [rdx]
   140008201:	mov    rax,QWORD PTR [rcx]
   140008204:	call   QWORD PTR [rax+0x8]
   140008207:	mov    rcx,r12
   14000820a:	call   0x14001490c
   14000820f:	xor    eax,eax
   140008211:	jmp    0x14000843d
   140008216:	lea    rdx,[rsp+0x70]
   14000821b:	lea    rcx,[rsp+0x60]
   140008220:	mov    QWORD PTR [rsp+0x38],r15
   140008225:	mov    rax,QWORD PTR [rcx]
   140008228:	lea    r8,[rsp+0x70]
   14000822d:	mov    r9d,0x18
   140008233:	mov    QWORD PTR [rdx],rax
   140008236:	mov    rax,QWORD PTR [rcx+0x8]
   14000823a:	mov    rcx,rdi
   14000823d:	mov    QWORD PTR [rdx+0x8],rax
   140008241:	lea    rax,[rsp+0x50]
   140008246:	mov    edx,0x2f0003
   14000824b:	mov    QWORD PTR [rsp+0x30],rax
   140008250:	mov    DWORD PTR [rsp+0x28],r14d
   140008255:	mov    DWORD PTR [rsp+0x84],0x1
   140008260:	mov    QWORD PTR [rsp+0x20],r12
   140008265:	mov    DWORD PTR [rsp+0x80],0x1
   140008270:	mov    DWORD PTR [rsp+0x50],r15d
   140008275:	call   QWORD PTR [rip+0x3b2fd]        # 0x140043578
   14000827b:	mov    esi,eax
   14000827d:	call   QWORD PTR [rip+0x3b265]        # 0x1400434e8
   140008283:	test   rdi,rdi
   140008286:	je     0x140008291
   140008288:	mov    rcx,rdi
   14000828b:	call   QWORD PTR [rip+0x3b2f7]        # 0x140043588
   140008291:	test   esi,esi
   140008293:	jne    0x1400082bd
   140008295:	lea    rdx,[rbx-0x18]
   140008299:	lock xadd DWORD PTR [rdx+0x10],ebp
   14000829e:	add    ebp,0xffffffff
   1400082a1:	test   ebp,ebp
   1400082a3:	jg     0x1400082ae
   1400082a5:	mov    rcx,QWORD PTR [rdx]
   1400082a8:	mov    rax,QWORD PTR [rcx]
   1400082ab:	call   QWORD PTR [rax+0x8]
   1400082ae:	mov    rcx,r12
   1400082b1:	call   0x14001490c
   1400082b6:	xor    eax,eax
   1400082b8:	jmp    0x14000843d
   1400082bd:	lea    rdx,[rbx-0x18]
   1400082c1:	mov    eax,ebp
   1400082c3:	lock xadd DWORD PTR [rdx+0x10],eax
   1400082c8:	add    eax,0xffffffff
   1400082cb:	test   eax,eax
   1400082cd:	jg     0x1400082d8
   1400082cf:	mov    rcx,QWORD PTR [rdx]
   1400082d2:	mov    rax,QWORD PTR [rcx]
   1400082d5:	call   QWORD PTR [rax+0x8]
   1400082d8:	mov    esi,DWORD PTR [rsp+0x270]
   1400082df:	lea    rcx,[rsp+0x130]
   1400082e7:	mov    rdx,r12
   1400082ea:	lea    rdi,[rsi*8+0x0]
   1400082f2:	mov    rbx,rsi
   1400082f5:	mov    r8,rdi
   1400082f8:	call   0x14002b7a0
   1400082fd:	shr    rdi,0x2
   140008301:	lea    r8,[rsi*4+0x0]
   140008309:	lea    rdx,[r12+rdi*4]
   14000830d:	lea    rcx,[rsp+0xb0]
   140008315:	call   0x14002b7a0
   14000831a:	test   esi,esi
   14000831c:	je     0x140008438
   140008322:	mov    r12d,DWORD PTR [rsp+0x48]
   140008327:	mov    esi,DWORD PTR [rsp+0x44]
   14000832b:	mov    r8d,DWORD PTR [rsp+0x40]
   140008330:	mov    r9d,DWORD PTR [rsp+0x274]
   140008338:	mov    r10d,DWORD PTR [rsp+0x270]
   140008340:	lea    rdx,[r13+0x9c]
   140008347:	add    r13,0xa8
   14000834e:	lea    r11,[rsp+0xb0]
   140008356:	lea    rdi,[rsp+0x134]
   14000835e:	xchg   ax,ax
   140008360:	mov    ecx,DWORD PTR [rdi-0x4]
   140008363:	mov    eax,r8d
   140008366:	add    rdx,0x9c
   14000836d:	xor    eax,ecx
   14000836f:	add    r13,0x9c
   140008376:	add    rdi,0x8
   14000837a:	movzx  eax,al
   14000837d:	add    r11,0x4
   140008381:	xor    r8d,eax
   140008384:	mov    eax,ecx
   140008386:	shr    ecx,0xc
   140008389:	shr    eax,0x8
   14000838c:	mov    DWORD PTR [rsp+0x40],r8d
   140008391:	xor    eax,esi
   140008393:	and    eax,0xf
   140008396:	xor    esi,eax
   140008398:	mov    eax,r12d
   14000839b:	mov    r12d,ecx
   14000839e:	and    eax,0xfff00000
   1400083a3:	lea    rcx,[rsp+0x40]
   1400083a8:	mov    DWORD PTR [rsp+0x44],esi
   1400083ac:	or     r12d,eax
   1400083af:	mov    DWORD PTR [rsp+0x48],r12d
   1400083b4:	mov    eax,DWORD PTR [rcx]
   1400083b6:	mov    DWORD PTR [rdx-0x11c],eax
   1400083bc:	mov    eax,DWORD PTR [rcx+0x4]
   1400083bf:	mov    DWORD PTR [rdx-0x118],eax
   1400083c5:	mov    eax,DWORD PTR [rcx+0x8]
   1400083c8:	mov    ecx,DWORD PTR [rdi-0x8]
   1400083cb:	mov    DWORD PTR [rdx-0x114],eax
   1400083d1:	mov    eax,r10d
   1400083d4:	xor    eax,ecx
   1400083d6:	shr    ecx,0x8
   1400083d9:	movzx  eax,al
   1400083dc:	xor    ecx,r9d
   1400083df:	xor    r10d,eax
   1400083e2:	movzx  eax,cx
   1400083e5:	xor    r9d,eax
   1400083e8:	mov    DWORD PTR [rsp+0x270],r10d
   1400083f0:	mov    DWORD PTR [rsp+0x274],r9d
   1400083f8:	mov    rax,QWORD PTR [rsp+0x270]
   140008400:	mov    QWORD PTR [rdx-0x9c],rax
   140008407:	mov    eax,DWORD PTR [r11-0x4]
   14000840b:	mov    DWORD PTR [rdx-0x94],eax
   140008411:	xor    eax,eax
   140008413:	sub    rbx,0x1
   140008417:	mov    DWORD PTR [r13-0x9c],eax
   14000841e:	mov    DWORD PTR [r13-0x98],eax
   140008425:	mov    DWORD PTR [r13-0x94],eax
   14000842c:	mov    DWORD PTR [rdx-0x84],ebp
   140008432:	jne    0x140008360
   140008438:	mov    eax,0x1
   14000843d:	mov    r14,QWORD PTR [rsp+0x230]
   140008445:	mov    r12,QWORD PTR [rsp+0x238]
   14000844d:	mov    rbp,QWORD PTR [rsp+0x278]
   140008455:	mov    rsi,QWORD PTR [rsp+0x240]
   14000845d:	add    rsp,0x248
   140008464:	pop    r15
   140008466:	pop    r13
   140008468:	pop    rdi
   140008469:	pop    rbx
   14000846a:	ret    
   14000846b:	int3   
   14000846c:	int3   
   14000846d:	int3   
   14000846e:	int3   
   14000846f:	int3   
   140008470:	mov    QWORD PTR [rsp+0x18],rbx
   140008475:	push   rbp
   140008476:	push   rsi
   140008477:	push   rdi
   140008478:	push   r12
   14000847a:	push   r13
   14000847c:	sub    rsp,0x70
   140008480:	mov    ebp,edx
   140008482:	mov    r13d,edx
   140008485:	mov    r12,rcx
   140008488:	imul   rbp,rbp,0x9c
   14000848f:	cmp    DWORD PTR [rcx+rbp*1+0xb4],0xffffffff
   140008497:	jne    0x140008639
   14000849d:	mov    rax,QWORD PTR [rip+0x42f0c]        # 0x14004b3b0
   1400084a4:	mov    rdi,QWORD PTR [r12+0x13a8]
   1400084ac:	lea    rcx,[rsp+0x40]
   1400084b1:	mov    QWORD PTR [rcx],rax
   1400084b4:	mov    rax,QWORD PTR [rip+0x42efd]        # 0x14004b3b8
   1400084bb:	mov    QWORD PTR [rcx+0x8],rax
   1400084bf:	mov    rcx,QWORD PTR [rdi-0x18]
   1400084c3:	mov    rax,QWORD PTR [rcx]
   1400084c6:	call   QWORD PTR [rax+0x20]
   1400084c9:	cmp    DWORD PTR [rdi-0x8],0x0
   1400084cd:	mov    rcx,rax
   1400084d0:	jl     0x1400084e3
   1400084d2:	cmp    rax,QWORD PTR [rdi-0x18]
   1400084d6:	jne    0x1400084e3
   1400084d8:	lea    rbx,[rdi-0x18]
   1400084dc:	lock add DWORD PTR [rdi-0x8],0x1
   1400084e1:	jmp    0x140008520
   1400084e3:	mov    rax,QWORD PTR [rax]
   1400084e6:	mov    edx,DWORD PTR [rdi-0x10]
   1400084e9:	mov    r8d,0x2
   1400084ef:	call   QWORD PTR [rax]
   1400084f1:	test   rax,rax
   1400084f4:	mov    rbx,rax
   1400084f7:	jne    0x1400084ff
   1400084f9:	call   0x140004480
   1400084fe:	int3   
   1400084ff:	mov    eax,DWORD PTR [rdi-0x10]
   140008502:	lea    rcx,[rbx+0x18]
   140008506:	mov    r8,rdi
   140008509:	mov    DWORD PTR [rbx+0x8],eax
   14000850c:	mov    eax,DWORD PTR [rdi-0x10]
   14000850f:	add    eax,0x1
   140008512:	movsxd rdx,eax
   140008515:	add    rdx,rdx
   140008518:	mov    r9,rdx
   14000851b:	call   0x140029bf0
   140008520:	add    rbx,0x18
   140008524:	lea    rdi,[rip+0x4237d]        # 0x14004a8a8
   14000852b:	mov    ecx,0x1
   140008530:	mov    rsi,rbx
   140008533:	mov    QWORD PTR [rsp+0xa0],rbx
   14000853b:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000853e:	je     0x1400085fd
   140008544:	xor    esi,esi
   140008546:	xor    r9d,r9d
   140008549:	mov    edx,0xc0000000
   14000854e:	mov    QWORD PTR [rsp+0x30],rsi
   140008553:	lea    r8d,[rsi+0x3]
   140008557:	mov    rcx,rbx
   14000855a:	mov    DWORD PTR [rsp+0x28],esi
   14000855e:	mov    DWORD PTR [rsp+0x20],0x3
   140008566:	call   QWORD PTR [rip+0x3b014]        # 0x140043580
   14000856c:	cmp    rax,0xffffffffffffffff
   140008570:	mov    rdi,rax
   140008573:	je     0x1400085fd
   140008579:	lea    rdx,[rsp+0x50]
   14000857e:	lea    rcx,[rsp+0x40]
   140008583:	mov    QWORD PTR [rsp+0x38],rsi
   140008588:	mov    rax,QWORD PTR [rcx]
   14000858b:	lea    r9d,[rsi+0x18]
   14000858f:	lea    r8,[rsp+0x50]
   140008594:	mov    QWORD PTR [rdx],rax
   140008597:	mov    rax,QWORD PTR [rcx+0x8]
   14000859b:	lea    rcx,[rsp+0xa8]
   1400085a3:	mov    QWORD PTR [rdx+0x8],rax
   1400085a7:	mov    QWORD PTR [rsp+0x30],rcx
   1400085ac:	lea    eax,[r13+0x2]
   1400085b0:	mov    DWORD PTR [rsp+0x60],eax
   1400085b4:	lea    rax,[r12+rbp*1+0x28]
   1400085b9:	mov    edx,0x2f0003
   1400085be:	mov    rcx,rdi
   1400085c1:	mov    DWORD PTR [rsp+0x28],0x74
   1400085c9:	mov    DWORD PTR [rsp+0x64],0x1
   1400085d1:	mov    QWORD PTR [rsp+0x20],rax
   1400085d6:	mov    DWORD PTR [rsp+0xa8],esi
   1400085dd:	call   QWORD PTR [rip+0x3af95]        # 0x140043578
   1400085e3:	mov    esi,eax
   1400085e5:	call   QWORD PTR [rip+0x3aefd]        # 0x1400434e8
   1400085eb:	test   rdi,rdi
   1400085ee:	je     0x1400085f9
   1400085f0:	mov    rcx,rdi
   1400085f3:	call   QWORD PTR [rip+0x3af8f]        # 0x140043588
   1400085f9:	test   esi,esi
   1400085fb:	jne    0x14000861d
   1400085fd:	lea    rdx,[rbx-0x18]
   140008601:	or     eax,0xffffffff
   140008604:	lock xadd DWORD PTR [rdx+0x10],eax
   140008609:	add    eax,0xffffffff
   14000860c:	test   eax,eax
   14000860e:	jg     0x140008619
   140008610:	mov    rcx,QWORD PTR [rdx]
   140008613:	mov    rax,QWORD PTR [rcx]
   140008616:	call   QWORD PTR [rax+0x8]
   140008619:	xor    eax,eax
   14000861b:	jmp    0x14000863e
   14000861d:	lea    rdx,[rbx-0x18]
   140008621:	or     eax,0xffffffff
   140008624:	lock xadd DWORD PTR [rdx+0x10],eax
   140008629:	add    eax,0xffffffff
   14000862c:	test   eax,eax
   14000862e:	jg     0x140008639
   140008630:	mov    rcx,QWORD PTR [rdx]
   140008633:	mov    rax,QWORD PTR [rcx]
   140008636:	call   QWORD PTR [rax+0x8]
   140008639:	mov    eax,0x1
   14000863e:	mov    rbx,QWORD PTR [rsp+0xb0]
   140008646:	add    rsp,0x70
   14000864a:	pop    r13
   14000864c:	pop    r12
   14000864e:	pop    rdi
   14000864f:	pop    rsi
   140008650:	pop    rbp
   140008651:	ret    
   140008652:	int3   
   140008653:	int3   
   140008654:	int3   
   140008655:	int3   
   140008656:	int3   
   140008657:	int3   
   140008658:	int3   
   140008659:	int3   
   14000865a:	int3   
   14000865b:	int3   
   14000865c:	int3   
   14000865d:	int3   
   14000865e:	int3   
   14000865f:	int3   
   140008660:	rex push rbx
   140008662:	push   rdi
   140008663:	push   r12
   140008665:	sub    rsp,0x80
   14000866c:	mov    rax,QWORD PTR [rip+0x42cad]        # 0x14004b320
   140008673:	mov    rdi,QWORD PTR [rcx+0x13a8]
   14000867a:	lea    rdx,[rsp+0x40]
   14000867f:	mov    QWORD PTR [rdx],rax
   140008682:	mov    rax,QWORD PTR [rip+0x42c9f]        # 0x14004b328
   140008689:	xor    r12d,r12d
   14000868c:	mov    DWORD PTR [rsp+0xa0],r12d
   140008694:	mov    rcx,QWORD PTR [rdi-0x18]
   140008698:	mov    QWORD PTR [rdx+0x8],rax
   14000869c:	mov    rax,QWORD PTR [rcx]
   14000869f:	call   QWORD PTR [rax+0x20]
   1400086a2:	cmp    DWORD PTR [rdi-0x8],r12d
   1400086a6:	mov    rcx,rax
   1400086a9:	jl     0x1400086bc
   1400086ab:	cmp    rax,QWORD PTR [rdi-0x18]
   1400086af:	jne    0x1400086bc
   1400086b1:	lea    rbx,[rdi-0x18]
   1400086b5:	lock add DWORD PTR [rdi-0x8],0x1
   1400086ba:	jmp    0x1400086f9
   1400086bc:	mov    rax,QWORD PTR [rax]
   1400086bf:	mov    edx,DWORD PTR [rdi-0x10]
   1400086c2:	mov    r8d,0x2
   1400086c8:	call   QWORD PTR [rax]
   1400086ca:	test   rax,rax
   1400086cd:	mov    rbx,rax
   1400086d0:	jne    0x1400086d8
   1400086d2:	call   0x140004480
   1400086d7:	int3   
   1400086d8:	mov    eax,DWORD PTR [rdi-0x10]
   1400086db:	lea    rcx,[rbx+0x18]
   1400086df:	mov    r8,rdi
   1400086e2:	mov    DWORD PTR [rbx+0x8],eax
   1400086e5:	mov    eax,DWORD PTR [rdi-0x10]
   1400086e8:	add    eax,0x1
   1400086eb:	movsxd rdx,eax
   1400086ee:	add    rdx,rdx
   1400086f1:	mov    r9,rdx
   1400086f4:	call   0x140029bf0
   1400086f9:	add    rbx,0x18
   1400086fd:	mov    QWORD PTR [rsp+0x78],rbp
   140008702:	mov    QWORD PTR [rsp+0x70],rsi
   140008707:	mov    ebp,0x1
   14000870c:	lea    rdi,[rip+0x42195]        # 0x14004a8a8
   140008713:	mov    rsi,rbx
   140008716:	mov    rcx,rbp
   140008719:	mov    QWORD PTR [rsp+0xb0],rbx
   140008721:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140008724:	jne    0x14000874b
   140008726:	lea    rdx,[rbx-0x18]
   14000872a:	or     eax,0xffffffff
   14000872d:	lock xadd DWORD PTR [rdx+0x10],eax
   140008732:	add    eax,0xffffffff
   140008735:	test   eax,eax
   140008737:	jg     0x14000882b
   14000873d:	mov    rcx,QWORD PTR [rdx]
   140008740:	mov    rax,QWORD PTR [rcx]
   140008743:	call   QWORD PTR [rax+0x8]
   140008746:	jmp    0x14000882b
   14000874b:	xor    r9d,r9d
   14000874e:	mov    QWORD PTR [rsp+0x30],r12
   140008753:	mov    edx,0xc0000000
   140008758:	lea    r8d,[r9+0x3]
   14000875c:	mov    rcx,rbx
   14000875f:	mov    DWORD PTR [rsp+0x28],r12d
   140008764:	mov    DWORD PTR [rsp+0x20],0x3
   14000876c:	call   QWORD PTR [rip+0x3ae0e]        # 0x140043580
   140008772:	cmp    rax,0xffffffffffffffff
   140008776:	mov    rdi,rax
   140008779:	je     0x140008726
   14000877b:	lea    rdx,[rsp+0x50]
   140008780:	lea    rcx,[rsp+0x40]
   140008785:	mov    QWORD PTR [rsp+0x38],r12
   14000878a:	mov    rax,QWORD PTR [rcx]
   14000878d:	lea    r8,[rsp+0x50]
   140008792:	mov    r9d,0x18
   140008798:	mov    QWORD PTR [rdx],rax
   14000879b:	mov    rax,QWORD PTR [rcx+0x8]
   14000879f:	mov    rcx,rdi
   1400087a2:	mov    QWORD PTR [rdx+0x8],rax
   1400087a6:	lea    rax,[rsp+0xa8]
   1400087ae:	mov    edx,0x2f0003
   1400087b3:	mov    QWORD PTR [rsp+0x30],rax
   1400087b8:	lea    rax,[rsp+0xa0]
   1400087c0:	mov    DWORD PTR [rsp+0x28],0x4
   1400087c8:	mov    DWORD PTR [rsp+0x64],ebp
   1400087cc:	mov    DWORD PTR [rsp+0x60],0x2
   1400087d4:	mov    DWORD PTR [rsp+0xa8],r12d
   1400087dc:	mov    QWORD PTR [rsp+0x20],rax
   1400087e1:	call   QWORD PTR [rip+0x3ad91]        # 0x140043578
   1400087e7:	mov    esi,eax
   1400087e9:	call   QWORD PTR [rip+0x3acf9]        # 0x1400434e8
   1400087ef:	test   rdi,rdi
   1400087f2:	je     0x1400087fd
   1400087f4:	mov    rcx,rdi
   1400087f7:	call   QWORD PTR [rip+0x3ad8b]        # 0x140043588
   1400087fd:	test   esi,esi
   1400087ff:	je     0x140008726
   140008805:	lea    rdx,[rbx-0x18]
   140008809:	or     eax,0xffffffff
   14000880c:	lock xadd DWORD PTR [rdx+0x10],eax
   140008811:	add    eax,0xffffffff
   140008814:	test   eax,eax
   140008816:	jg     0x140008821
   140008818:	mov    rcx,QWORD PTR [rdx]
   14000881b:	mov    rax,QWORD PTR [rcx]
   14000881e:	call   QWORD PTR [rax+0x8]
   140008821:	cmp    DWORD PTR [rsp+0xa0],r12d
   140008829:	je     0x14000882e
   14000882b:	mov    ebp,r12d
   14000882e:	mov    rsi,QWORD PTR [rsp+0x70]
   140008833:	mov    eax,ebp
   140008835:	mov    rbp,QWORD PTR [rsp+0x78]
   14000883a:	add    rsp,0x80
   140008841:	pop    r12
   140008843:	pop    rdi
   140008844:	pop    rbx
   140008845:	ret    
   140008846:	int3   
   140008847:	int3   
   140008848:	int3   
   140008849:	int3   
   14000884a:	int3   
   14000884b:	int3   
   14000884c:	int3   
   14000884d:	int3   
   14000884e:	int3   
   14000884f:	int3   
   140008850:	mov    QWORD PTR [rsp+0x20],rbp
   140008855:	push   rdi
   140008856:	sub    rsp,0x170
   14000885d:	mov    rax,QWORD PTR [rip+0x5271c]        # 0x14005af80
   140008864:	xor    rax,rsp
   140008867:	mov    QWORD PTR [rsp+0x160],rax
   14000886f:	mov    rdi,rcx
   140008872:	lea    rcx,[rsp+0x80]
   14000887a:	xor    edx,edx
   14000887c:	mov    r8d,0xdc
   140008882:	call   0x14002ac20
   140008887:	lea    r8,[rsp+0x80]
   14000888f:	xor    ebp,ebp
   140008891:	or     edx,0xffffffff
   140008894:	xor    ecx,ecx
   140008896:	mov    WORD PTR [rsp+0xc4],0xdc
   1400088a0:	mov    DWORD PTR [rsp+0x40],ebp
   1400088a4:	call   QWORD PTR [rip+0x3b0de]        # 0x140043988
   1400088aa:	test   eax,eax
   1400088ac:	je     0x1400088ea
   1400088ae:	mov    eax,DWORD PTR [rsp+0xd4]
   1400088b5:	test   eax,eax
   1400088b7:	je     0x1400088e6
   1400088b9:	sub    eax,0x1
   1400088bc:	je     0x1400088dc
   1400088be:	sub    eax,0x1
   1400088c1:	je     0x1400088d2
   1400088c3:	cmp    eax,0x1
   1400088c6:	jne    0x1400088ea
   1400088c8:	mov    DWORD PTR [rsp+0x40],0x10e
   1400088d0:	jmp    0x1400088ea
   1400088d2:	mov    DWORD PTR [rsp+0x40],0xb4
   1400088da:	jmp    0x1400088ea
   1400088dc:	mov    DWORD PTR [rsp+0x40],0x5a
   1400088e4:	jmp    0x1400088ea
   1400088e6:	mov    DWORD PTR [rsp+0x40],ebp
   1400088ea:	mov    rax,QWORD PTR [rip+0x42a2f]        # 0x14004b320
   1400088f1:	mov    rdi,QWORD PTR [rdi+0x13a8]
   1400088f8:	lea    rcx,[rsp+0x70]
   1400088fd:	mov    QWORD PTR [rcx],rax
   140008900:	mov    rax,QWORD PTR [rip+0x42a21]        # 0x14004b328
   140008907:	mov    QWORD PTR [rsp+0x188],rbx
   14000890f:	mov    QWORD PTR [rcx+0x8],rax
   140008913:	mov    rcx,QWORD PTR [rdi-0x18]
   140008917:	mov    rax,QWORD PTR [rcx]
   14000891a:	call   QWORD PTR [rax+0x20]
   14000891d:	cmp    DWORD PTR [rdi-0x8],ebp
   140008920:	mov    rcx,rax
   140008923:	jl     0x140008936
   140008925:	cmp    rax,QWORD PTR [rdi-0x18]
   140008929:	jne    0x140008936
   14000892b:	lea    rbx,[rdi-0x18]
   14000892f:	lock add DWORD PTR [rdi-0x8],0x1
   140008934:	jmp    0x140008973
   140008936:	mov    rax,QWORD PTR [rax]
   140008939:	mov    edx,DWORD PTR [rdi-0x10]
   14000893c:	mov    r8d,0x2
   140008942:	call   QWORD PTR [rax]
   140008944:	test   rax,rax
   140008947:	mov    rbx,rax
   14000894a:	jne    0x140008952
   14000894c:	call   0x140004480
   140008951:	int3   
   140008952:	mov    eax,DWORD PTR [rdi-0x10]
   140008955:	lea    rcx,[rbx+0x18]
   140008959:	mov    r8,rdi
   14000895c:	mov    DWORD PTR [rbx+0x8],eax
   14000895f:	mov    eax,DWORD PTR [rdi-0x10]
   140008962:	add    eax,0x1
   140008965:	movsxd rdx,eax
   140008968:	add    rdx,rdx
   14000896b:	mov    r9,rdx
   14000896e:	call   0x140029bf0
   140008973:	add    rbx,0x18
   140008977:	mov    QWORD PTR [rsp+0x190],rsi
   14000897f:	lea    rdi,[rip+0x41f22]        # 0x14004a8a8
   140008986:	mov    rsi,rbx
   140008989:	mov    ecx,0x1
   14000898e:	mov    QWORD PTR [rsp+0x60],rbx
   140008993:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140008996:	jne    0x1400089bd
   140008998:	lea    rdx,[rbx-0x18]
   14000899c:	or     eax,0xffffffff
   14000899f:	lock xadd DWORD PTR [rdx+0x10],eax
   1400089a4:	add    eax,0xffffffff
   1400089a7:	test   eax,eax
   1400089a9:	jg     0x140008a91
   1400089af:	mov    rcx,QWORD PTR [rdx]
   1400089b2:	mov    rax,QWORD PTR [rcx]
   1400089b5:	call   QWORD PTR [rax+0x8]
   1400089b8:	jmp    0x140008a91
   1400089bd:	xor    r9d,r9d
   1400089c0:	mov    QWORD PTR [rsp+0x30],rbp
   1400089c5:	mov    edx,0xc0000000
   1400089ca:	lea    r8d,[r9+0x3]
   1400089ce:	mov    rcx,rbx
   1400089d1:	mov    DWORD PTR [rsp+0x28],ebp
   1400089d5:	mov    DWORD PTR [rsp+0x20],0x3
   1400089dd:	call   QWORD PTR [rip+0x3ab9d]        # 0x140043580
   1400089e3:	cmp    rax,0xffffffffffffffff
   1400089e7:	mov    rdi,rax
   1400089ea:	je     0x140008998
   1400089ec:	lea    rdx,[rsp+0x48]
   1400089f1:	lea    rcx,[rsp+0x70]
   1400089f6:	mov    QWORD PTR [rsp+0x38],rbp
   1400089fb:	mov    rax,QWORD PTR [rcx]
   1400089fe:	lea    r8,[rsp+0x48]
   140008a03:	mov    r9d,0x18
   140008a09:	mov    QWORD PTR [rdx],rax
   140008a0c:	mov    rax,QWORD PTR [rcx+0x8]
   140008a10:	mov    rcx,rdi
   140008a13:	mov    QWORD PTR [rdx+0x8],rax
   140008a17:	lea    rax,[rsp+0x44]
   140008a1c:	mov    edx,0x2f0003
   140008a21:	mov    QWORD PTR [rsp+0x30],rax
   140008a26:	lea    rax,[rsp+0x40]
   140008a2b:	mov    DWORD PTR [rsp+0x28],0x4
   140008a33:	mov    DWORD PTR [rsp+0x5c],0x2
   140008a3b:	mov    DWORD PTR [rsp+0x58],0xc
   140008a43:	mov    DWORD PTR [rsp+0x44],ebp
   140008a47:	mov    QWORD PTR [rsp+0x20],rax
   140008a4c:	call   QWORD PTR [rip+0x3ab26]        # 0x140043578
   140008a52:	mov    esi,eax
   140008a54:	call   QWORD PTR [rip+0x3aa8e]        # 0x1400434e8
   140008a5a:	test   rdi,rdi
   140008a5d:	je     0x140008a68
   140008a5f:	mov    rcx,rdi
   140008a62:	call   QWORD PTR [rip+0x3ab20]        # 0x140043588
   140008a68:	test   esi,esi
   140008a6a:	je     0x140008998
   140008a70:	lea    rdx,[rbx-0x18]
   140008a74:	or     eax,0xffffffff
   140008a77:	lock xadd DWORD PTR [rdx+0x10],eax
   140008a7c:	add    eax,0xffffffff
   140008a7f:	test   eax,eax
   140008a81:	jg     0x140008a8c
   140008a83:	mov    rcx,QWORD PTR [rdx]
   140008a86:	mov    rax,QWORD PTR [rcx]
   140008a89:	call   QWORD PTR [rax+0x8]
   140008a8c:	mov    ebp,0x1
   140008a91:	mov    rsi,QWORD PTR [rsp+0x190]
   140008a99:	mov    rbx,QWORD PTR [rsp+0x188]
   140008aa1:	mov    eax,ebp
   140008aa3:	mov    rcx,QWORD PTR [rsp+0x160]
   140008aab:	xor    rcx,rsp
   140008aae:	call   0x140029b40
   140008ab3:	mov    rbp,QWORD PTR [rsp+0x198]
   140008abb:	add    rsp,0x170
   140008ac2:	pop    rdi
   140008ac3:	ret    
   140008ac4:	int3   
   140008ac5:	int3   
   140008ac6:	int3   
   140008ac7:	int3   
   140008ac8:	int3   
   140008ac9:	int3   
   140008aca:	int3   
   140008acb:	int3   
   140008acc:	int3   
   140008acd:	int3   
   140008ace:	int3   
   140008acf:	int3   
   140008ad0:	rex push rbx
   140008ad2:	push   rdi
   140008ad3:	push   r12
   140008ad5:	sub    rsp,0x80
   140008adc:	mov    rax,QWORD PTR [rip+0x4283d]        # 0x14004b320
   140008ae3:	mov    rdi,QWORD PTR [rcx+0x13a8]
   140008aea:	lea    rdx,[rsp+0x40]
   140008aef:	mov    QWORD PTR [rdx],rax
   140008af2:	mov    rax,QWORD PTR [rip+0x4282f]        # 0x14004b328
   140008af9:	xor    r12d,r12d
   140008afc:	mov    DWORD PTR [rsp+0xa0],r12d
   140008b04:	mov    rcx,QWORD PTR [rdi-0x18]
   140008b08:	mov    QWORD PTR [rdx+0x8],rax
   140008b0c:	mov    rax,QWORD PTR [rcx]
   140008b0f:	call   QWORD PTR [rax+0x20]
   140008b12:	cmp    DWORD PTR [rdi-0x8],r12d
   140008b16:	mov    rcx,rax
   140008b19:	jl     0x140008b2c
   140008b1b:	cmp    rax,QWORD PTR [rdi-0x18]
   140008b1f:	jne    0x140008b2c
   140008b21:	lea    rbx,[rdi-0x18]
   140008b25:	lock add DWORD PTR [rdi-0x8],0x1
   140008b2a:	jmp    0x140008b69
   140008b2c:	mov    rax,QWORD PTR [rax]
   140008b2f:	mov    edx,DWORD PTR [rdi-0x10]
   140008b32:	mov    r8d,0x2
   140008b38:	call   QWORD PTR [rax]
   140008b3a:	test   rax,rax
   140008b3d:	mov    rbx,rax
   140008b40:	jne    0x140008b48
   140008b42:	call   0x140004480
   140008b47:	int3   
   140008b48:	mov    eax,DWORD PTR [rdi-0x10]
   140008b4b:	lea    rcx,[rbx+0x18]
   140008b4f:	mov    r8,rdi
   140008b52:	mov    DWORD PTR [rbx+0x8],eax
   140008b55:	mov    eax,DWORD PTR [rdi-0x10]
   140008b58:	add    eax,0x1
   140008b5b:	movsxd rdx,eax
   140008b5e:	add    rdx,rdx
   140008b61:	mov    r9,rdx
   140008b64:	call   0x140029bf0
   140008b69:	add    rbx,0x18
   140008b6d:	mov    QWORD PTR [rsp+0x78],rbp
   140008b72:	mov    QWORD PTR [rsp+0x70],rsi
   140008b77:	mov    ebp,0x1
   140008b7c:	lea    rdi,[rip+0x41d25]        # 0x14004a8a8
   140008b83:	mov    rsi,rbx
   140008b86:	mov    rcx,rbp
   140008b89:	mov    QWORD PTR [rsp+0xb0],rbx
   140008b91:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140008b94:	jne    0x140008bbb
   140008b96:	lea    rdx,[rbx-0x18]
   140008b9a:	or     eax,0xffffffff
   140008b9d:	lock xadd DWORD PTR [rdx+0x10],eax
   140008ba2:	add    eax,0xffffffff
   140008ba5:	test   eax,eax
   140008ba7:	jg     0x140008c9b
   140008bad:	mov    rcx,QWORD PTR [rdx]
   140008bb0:	mov    rax,QWORD PTR [rcx]
   140008bb3:	call   QWORD PTR [rax+0x8]
   140008bb6:	jmp    0x140008c9b
   140008bbb:	xor    r9d,r9d
   140008bbe:	mov    QWORD PTR [rsp+0x30],r12
   140008bc3:	mov    edx,0xc0000000
   140008bc8:	lea    r8d,[r9+0x3]
   140008bcc:	mov    rcx,rbx
   140008bcf:	mov    DWORD PTR [rsp+0x28],r12d
   140008bd4:	mov    DWORD PTR [rsp+0x20],0x3
   140008bdc:	call   QWORD PTR [rip+0x3a99e]        # 0x140043580
   140008be2:	cmp    rax,0xffffffffffffffff
   140008be6:	mov    rdi,rax
   140008be9:	je     0x140008b96
   140008beb:	lea    rdx,[rsp+0x50]
   140008bf0:	lea    rcx,[rsp+0x40]
   140008bf5:	mov    QWORD PTR [rsp+0x38],r12
   140008bfa:	mov    rax,QWORD PTR [rcx]
   140008bfd:	lea    r8,[rsp+0x50]
   140008c02:	mov    r9d,0x18
   140008c08:	mov    QWORD PTR [rdx],rax
   140008c0b:	mov    rax,QWORD PTR [rcx+0x8]
   140008c0f:	mov    rcx,rdi
   140008c12:	mov    QWORD PTR [rdx+0x8],rax
   140008c16:	lea    rax,[rsp+0xa8]
   140008c1e:	mov    edx,0x2f0003
   140008c23:	mov    QWORD PTR [rsp+0x30],rax
   140008c28:	lea    rax,[rsp+0xa0]
   140008c30:	mov    DWORD PTR [rsp+0x28],0x4
   140008c38:	mov    DWORD PTR [rsp+0x64],ebp
   140008c3c:	mov    DWORD PTR [rsp+0x60],0x4
   140008c44:	mov    DWORD PTR [rsp+0xa8],r12d
   140008c4c:	mov    QWORD PTR [rsp+0x20],rax
   140008c51:	call   QWORD PTR [rip+0x3a921]        # 0x140043578
   140008c57:	mov    esi,eax
   140008c59:	call   QWORD PTR [rip+0x3a889]        # 0x1400434e8
   140008c5f:	test   rdi,rdi
   140008c62:	je     0x140008c6d
   140008c64:	mov    rcx,rdi
   140008c67:	call   QWORD PTR [rip+0x3a91b]        # 0x140043588
   140008c6d:	test   esi,esi
   140008c6f:	je     0x140008b96
   140008c75:	lea    rdx,[rbx-0x18]
   140008c79:	or     eax,0xffffffff
   140008c7c:	lock xadd DWORD PTR [rdx+0x10],eax
   140008c81:	add    eax,0xffffffff
   140008c84:	test   eax,eax
   140008c86:	jg     0x140008c91
   140008c88:	mov    rcx,QWORD PTR [rdx]
   140008c8b:	mov    rax,QWORD PTR [rcx]
   140008c8e:	call   QWORD PTR [rax+0x8]
   140008c91:	cmp    DWORD PTR [rsp+0xa0],r12d
   140008c99:	jne    0x140008c9e
   140008c9b:	mov    ebp,r12d
   140008c9e:	mov    rsi,QWORD PTR [rsp+0x70]
   140008ca3:	mov    eax,ebp
   140008ca5:	mov    rbp,QWORD PTR [rsp+0x78]
   140008caa:	add    rsp,0x80
   140008cb1:	pop    r12
   140008cb3:	pop    rdi
   140008cb4:	pop    rbx
   140008cb5:	ret    
   140008cb6:	int3   
   140008cb7:	int3   
   140008cb8:	int3   
   140008cb9:	int3   
   140008cba:	int3   
   140008cbb:	int3   
   140008cbc:	int3   
   140008cbd:	int3   
   140008cbe:	int3   
   140008cbf:	int3   
   140008cc0:	mov    DWORD PTR [rsp+0x10],edx
   140008cc4:	push   rbx
   140008cc5:	push   rdi
   140008cc6:	sub    rsp,0x78
   140008cca:	mov    rax,QWORD PTR [rip+0x4264f]        # 0x14004b320
   140008cd1:	mov    rdi,QWORD PTR [rcx+0x13a8]
   140008cd8:	lea    rdx,[rsp+0x40]
   140008cdd:	mov    rcx,QWORD PTR [rdi-0x18]
   140008ce1:	mov    QWORD PTR [rdx],rax
   140008ce4:	mov    rax,QWORD PTR [rip+0x4263d]        # 0x14004b328
   140008ceb:	mov    QWORD PTR [rdx+0x8],rax
   140008cef:	mov    rax,QWORD PTR [rcx]
   140008cf2:	call   QWORD PTR [rax+0x20]
   140008cf5:	cmp    DWORD PTR [rdi-0x8],0x0
   140008cf9:	mov    rcx,rax
   140008cfc:	jl     0x140008d0f
   140008cfe:	cmp    rax,QWORD PTR [rdi-0x18]
   140008d02:	jne    0x140008d0f
   140008d04:	lea    rbx,[rdi-0x18]
   140008d08:	lock add DWORD PTR [rdi-0x8],0x1
   140008d0d:	jmp    0x140008d4c
   140008d0f:	mov    rax,QWORD PTR [rax]
   140008d12:	mov    edx,DWORD PTR [rdi-0x10]
   140008d15:	mov    r8d,0x2
   140008d1b:	call   QWORD PTR [rax]
   140008d1d:	test   rax,rax
   140008d20:	mov    rbx,rax
   140008d23:	jne    0x140008d2b
   140008d25:	call   0x140004480
   140008d2a:	int3   
   140008d2b:	mov    eax,DWORD PTR [rdi-0x10]
   140008d2e:	lea    rcx,[rbx+0x18]
   140008d32:	mov    r8,rdi
   140008d35:	mov    DWORD PTR [rbx+0x8],eax
   140008d38:	mov    eax,DWORD PTR [rdi-0x10]
   140008d3b:	add    eax,0x1
   140008d3e:	movsxd rdx,eax
   140008d41:	add    rdx,rdx
   140008d44:	mov    r9,rdx
   140008d47:	call   0x140029bf0
   140008d4c:	add    rbx,0x18
   140008d50:	mov    QWORD PTR [rsp+0x70],rsi
   140008d55:	lea    rdi,[rip+0x41b4c]        # 0x14004a8a8
   140008d5c:	mov    rsi,rbx
   140008d5f:	mov    ecx,0x1
   140008d64:	mov    QWORD PTR [rsp+0xa0],rbx
   140008d6c:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140008d6f:	jne    0x140008d9d
   140008d71:	lea    rdx,[rbx-0x18]
   140008d75:	or     eax,0xffffffff
   140008d78:	lock xadd DWORD PTR [rdx+0x10],eax
   140008d7d:	add    eax,0xffffffff
   140008d80:	test   eax,eax
   140008d82:	jg     0x140008d8d
   140008d84:	mov    rcx,QWORD PTR [rdx]
   140008d87:	mov    rax,QWORD PTR [rcx]
   140008d8a:	call   QWORD PTR [rax+0x8]
   140008d8d:	mov    rsi,QWORD PTR [rsp+0x70]
   140008d92:	xor    edi,edi
   140008d94:	mov    eax,edi
   140008d96:	add    rsp,0x78
   140008d9a:	pop    rdi
   140008d9b:	pop    rbx
   140008d9c:	ret    
   140008d9d:	xor    edi,edi
   140008d9f:	xor    r9d,r9d
   140008da2:	mov    edx,0xc0000000
   140008da7:	mov    QWORD PTR [rsp+0x30],rdi
   140008dac:	lea    r8d,[rdi+0x3]
   140008db0:	mov    rcx,rbx
   140008db3:	mov    DWORD PTR [rsp+0x28],edi
   140008db7:	mov    DWORD PTR [rsp+0x20],0x3
   140008dbf:	call   QWORD PTR [rip+0x3a7bb]        # 0x140043580
   140008dc5:	cmp    rax,0xffffffffffffffff
   140008dc9:	mov    rsi,rax
   140008dcc:	jne    0x140008dfc
   140008dce:	lea    rdx,[rbx-0x18]
   140008dd2:	or     eax,0xffffffff
   140008dd5:	lock xadd DWORD PTR [rdx+0x10],eax
   140008dda:	add    eax,0xffffffff
   140008ddd:	test   eax,eax
   140008ddf:	jg     0x140008eba
   140008de5:	mov    rcx,QWORD PTR [rdx]
   140008de8:	mov    rax,QWORD PTR [rcx]
   140008deb:	call   QWORD PTR [rax+0x8]
   140008dee:	mov    rsi,QWORD PTR [rsp+0x70]
   140008df3:	mov    eax,edi
   140008df5:	add    rsp,0x78
   140008df9:	pop    rdi
   140008dfa:	pop    rbx
   140008dfb:	ret    
   140008dfc:	lea    rdx,[rsp+0x50]
   140008e01:	lea    rcx,[rsp+0x40]
   140008e06:	mov    QWORD PTR [rsp+0x38],rdi
   140008e0b:	mov    rax,QWORD PTR [rcx]
   140008e0e:	lea    r8,[rsp+0x50]
   140008e13:	mov    r9d,0x18
   140008e19:	mov    QWORD PTR [rdx],rax
   140008e1c:	mov    rax,QWORD PTR [rcx+0x8]
   140008e20:	mov    rcx,rsi
   140008e23:	mov    QWORD PTR [rdx+0x8],rax
   140008e27:	lea    rax,[rsp+0x90]
   140008e2f:	mov    edx,0x2f0003
   140008e34:	mov    QWORD PTR [rsp+0x30],rax
   140008e39:	lea    rax,[rsp+0x98]
   140008e41:	mov    DWORD PTR [rsp+0x28],0x4
   140008e49:	mov    QWORD PTR [rsp+0xa8],rbp
   140008e51:	mov    DWORD PTR [rsp+0x64],0x2
   140008e59:	mov    DWORD PTR [rsp+0x60],0x4
   140008e61:	mov    QWORD PTR [rsp+0x20],rax
   140008e66:	mov    DWORD PTR [rsp+0x90],edi
   140008e6d:	call   QWORD PTR [rip+0x3a705]        # 0x140043578
   140008e73:	mov    ebp,eax
   140008e75:	call   QWORD PTR [rip+0x3a66d]        # 0x1400434e8
   140008e7b:	test   rsi,rsi
   140008e7e:	je     0x140008e89
   140008e80:	mov    rcx,rsi
   140008e83:	call   QWORD PTR [rip+0x3a6ff]        # 0x140043588
   140008e89:	test   ebp,ebp
   140008e8b:	mov    rbp,QWORD PTR [rsp+0xa8]
   140008e93:	je     0x140008dce
   140008e99:	lea    rdx,[rbx-0x18]
   140008e9d:	or     eax,0xffffffff
   140008ea0:	lock xadd DWORD PTR [rdx+0x10],eax
   140008ea5:	add    eax,0xffffffff
   140008ea8:	test   eax,eax
   140008eaa:	jg     0x140008eb5
   140008eac:	mov    rcx,QWORD PTR [rdx]
   140008eaf:	mov    rax,QWORD PTR [rcx]
   140008eb2:	call   QWORD PTR [rax+0x8]
   140008eb5:	mov    edi,0x1
   140008eba:	mov    eax,edi
   140008ebc:	mov    rsi,QWORD PTR [rsp+0x70]
   140008ec1:	add    rsp,0x78
   140008ec5:	pop    rdi
   140008ec6:	pop    rbx
   140008ec7:	ret    
   140008ec8:	int3   
   140008ec9:	int3   
   140008eca:	int3   
   140008ecb:	int3   
   140008ecc:	int3   
   140008ecd:	int3   
   140008ece:	int3   
   140008ecf:	int3   
   140008ed0:	mov    DWORD PTR [rsp+0x10],edx
   140008ed4:	push   rbx
   140008ed5:	push   rdi
   140008ed6:	sub    rsp,0x78
   140008eda:	mov    rax,QWORD PTR [rip+0x4243f]        # 0x14004b320
   140008ee1:	mov    rdi,QWORD PTR [rcx+0x13a8]
   140008ee8:	lea    rdx,[rsp+0x40]
   140008eed:	mov    rcx,QWORD PTR [rdi-0x18]
   140008ef1:	mov    QWORD PTR [rdx],rax
   140008ef4:	mov    rax,QWORD PTR [rip+0x4242d]        # 0x14004b328
   140008efb:	mov    QWORD PTR [rdx+0x8],rax
   140008eff:	mov    rax,QWORD PTR [rcx]
   140008f02:	call   QWORD PTR [rax+0x20]
   140008f05:	cmp    DWORD PTR [rdi-0x8],0x0
   140008f09:	mov    rcx,rax
   140008f0c:	jl     0x140008f1f
   140008f0e:	cmp    rax,QWORD PTR [rdi-0x18]
   140008f12:	jne    0x140008f1f
   140008f14:	lea    rbx,[rdi-0x18]
   140008f18:	lock add DWORD PTR [rdi-0x8],0x1
   140008f1d:	jmp    0x140008f5c
   140008f1f:	mov    rax,QWORD PTR [rax]
   140008f22:	mov    edx,DWORD PTR [rdi-0x10]
   140008f25:	mov    r8d,0x2
   140008f2b:	call   QWORD PTR [rax]
   140008f2d:	test   rax,rax
   140008f30:	mov    rbx,rax
   140008f33:	jne    0x140008f3b
   140008f35:	call   0x140004480
   140008f3a:	int3   
   140008f3b:	mov    eax,DWORD PTR [rdi-0x10]
   140008f3e:	lea    rcx,[rbx+0x18]
   140008f42:	mov    r8,rdi
   140008f45:	mov    DWORD PTR [rbx+0x8],eax
   140008f48:	mov    eax,DWORD PTR [rdi-0x10]
   140008f4b:	add    eax,0x1
   140008f4e:	movsxd rdx,eax
   140008f51:	add    rdx,rdx
   140008f54:	mov    r9,rdx
   140008f57:	call   0x140029bf0
   140008f5c:	add    rbx,0x18
   140008f60:	mov    QWORD PTR [rsp+0x70],rsi
   140008f65:	lea    rdi,[rip+0x4193c]        # 0x14004a8a8
   140008f6c:	mov    rsi,rbx
   140008f6f:	mov    ecx,0x1
   140008f74:	mov    QWORD PTR [rsp+0xa0],rbx
   140008f7c:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140008f7f:	jne    0x140008fad
   140008f81:	lea    rdx,[rbx-0x18]
   140008f85:	or     eax,0xffffffff
   140008f88:	lock xadd DWORD PTR [rdx+0x10],eax
   140008f8d:	add    eax,0xffffffff
   140008f90:	test   eax,eax
   140008f92:	jg     0x140008f9d
   140008f94:	mov    rcx,QWORD PTR [rdx]
   140008f97:	mov    rax,QWORD PTR [rcx]
   140008f9a:	call   QWORD PTR [rax+0x8]
   140008f9d:	mov    rsi,QWORD PTR [rsp+0x70]
   140008fa2:	xor    edi,edi
   140008fa4:	mov    eax,edi
   140008fa6:	add    rsp,0x78
   140008faa:	pop    rdi
   140008fab:	pop    rbx
   140008fac:	ret    
   140008fad:	xor    edi,edi
   140008faf:	xor    r9d,r9d
   140008fb2:	mov    edx,0xc0000000
   140008fb7:	mov    QWORD PTR [rsp+0x30],rdi
   140008fbc:	lea    r8d,[rdi+0x3]
   140008fc0:	mov    rcx,rbx
   140008fc3:	mov    DWORD PTR [rsp+0x28],edi
   140008fc7:	mov    DWORD PTR [rsp+0x20],0x3
   140008fcf:	call   QWORD PTR [rip+0x3a5ab]        # 0x140043580
   140008fd5:	cmp    rax,0xffffffffffffffff
   140008fd9:	mov    rsi,rax
   140008fdc:	jne    0x14000900c
   140008fde:	lea    rdx,[rbx-0x18]
   140008fe2:	or     eax,0xffffffff
   140008fe5:	lock xadd DWORD PTR [rdx+0x10],eax
   140008fea:	add    eax,0xffffffff
   140008fed:	test   eax,eax
   140008fef:	jg     0x1400090ec
   140008ff5:	mov    rcx,QWORD PTR [rdx]
   140008ff8:	mov    rax,QWORD PTR [rcx]
   140008ffb:	call   QWORD PTR [rax+0x8]
   140008ffe:	mov    rsi,QWORD PTR [rsp+0x70]
   140009003:	mov    eax,edi
   140009005:	add    rsp,0x78
   140009009:	pop    rdi
   14000900a:	pop    rbx
   14000900b:	ret    
   14000900c:	lea    rdx,[rsp+0x50]
   140009011:	lea    rcx,[rsp+0x40]
   140009016:	mov    QWORD PTR [rsp+0x38],rdi
   14000901b:	mov    rax,QWORD PTR [rcx]
   14000901e:	lea    r8,[rsp+0x50]
   140009023:	mov    r9d,0x18
   140009029:	mov    QWORD PTR [rdx],rax
   14000902c:	mov    rax,QWORD PTR [rcx+0x8]
   140009030:	mov    rcx,rsi
   140009033:	mov    QWORD PTR [rdx+0x8],rax
   140009037:	lea    rax,[rsp+0x90]
   14000903f:	mov    edx,0x2f0003
   140009044:	mov    QWORD PTR [rsp+0x30],rax
   140009049:	lea    rax,[rsp+0x98]
   140009051:	mov    DWORD PTR [rsp+0x28],0x4
   140009059:	mov    QWORD PTR [rsp+0xa8],rbp
   140009061:	mov    DWORD PTR [rsp+0x64],0x2
   140009069:	mov    DWORD PTR [rsp+0x60],0xd
   140009071:	mov    QWORD PTR [rsp+0x20],rax
   140009076:	mov    DWORD PTR [rsp+0x90],edi
   14000907d:	call   QWORD PTR [rip+0x3a4f5]        # 0x140043578
   140009083:	mov    ebp,eax
   140009085:	call   QWORD PTR [rip+0x3a45d]        # 0x1400434e8
   14000908b:	test   rsi,rsi
   14000908e:	je     0x140009099
   140009090:	mov    rcx,rsi
   140009093:	call   QWORD PTR [rip+0x3a4ef]        # 0x140043588
   140009099:	test   ebp,ebp
   14000909b:	mov    rbp,QWORD PTR [rsp+0xa8]
   1400090a3:	je     0x140008fde
   1400090a9:	lea    rdx,[rbx-0x18]
   1400090ad:	or     eax,0xffffffff
   1400090b0:	lock xadd DWORD PTR [rdx+0x10],eax
   1400090b5:	add    eax,0xffffffff
   1400090b8:	test   eax,eax
   1400090ba:	jg     0x1400090c5
   1400090bc:	mov    rcx,QWORD PTR [rdx]
   1400090bf:	mov    rax,QWORD PTR [rcx]
   1400090c2:	call   QWORD PTR [rax+0x8]
   1400090c5:	mov    r9d,DWORD PTR [rsp+0x98]
   1400090cd:	lea    r8,[rip+0x4233c]        # 0x14004b410
   1400090d4:	lea    rdx,[rip+0x42345]        # 0x14004b420
   1400090db:	lea    rcx,[rip+0x58d5e]        # 0x140061e40
   1400090e2:	mov    edi,0x1
   1400090e7:	call   0x1400222f4
   1400090ec:	mov    eax,edi
   1400090ee:	mov    rsi,QWORD PTR [rsp+0x70]
   1400090f3:	add    rsp,0x78
   1400090f7:	pop    rdi
   1400090f8:	pop    rbx
   1400090f9:	ret    
   1400090fa:	int3   
   1400090fb:	int3   
   1400090fc:	int3   
   1400090fd:	int3   
   1400090fe:	int3   
   1400090ff:	int3   
   140009100:	rex push rbx
   140009102:	push   rbp
   140009103:	push   rdi
   140009104:	sub    rsp,0x70
   140009108:	mov    rax,QWORD PTR [rip+0x42211]        # 0x14004b320
   14000910f:	mov    rdi,QWORD PTR [rcx+0x13a8]
   140009116:	lea    rdx,[rsp+0x40]
   14000911b:	mov    QWORD PTR [rdx],rax
   14000911e:	mov    rax,QWORD PTR [rip+0x42203]        # 0x14004b328
   140009125:	xor    ebp,ebp
   140009127:	mov    DWORD PTR [rsp+0x90],ebp
   14000912e:	mov    rcx,QWORD PTR [rdi-0x18]
   140009132:	mov    QWORD PTR [rdx+0x8],rax
   140009136:	mov    rax,QWORD PTR [rcx]
   140009139:	call   QWORD PTR [rax+0x20]
   14000913c:	cmp    DWORD PTR [rdi-0x8],ebp
   14000913f:	mov    rcx,rax
   140009142:	jl     0x140009155
   140009144:	cmp    rax,QWORD PTR [rdi-0x18]
   140009148:	jne    0x140009155
   14000914a:	lea    rbx,[rdi-0x18]
   14000914e:	lock add DWORD PTR [rdi-0x8],0x1
   140009153:	jmp    0x140009192
   140009155:	mov    rax,QWORD PTR [rax]
   140009158:	mov    edx,DWORD PTR [rdi-0x10]
   14000915b:	mov    r8d,0x2
   140009161:	call   QWORD PTR [rax]
   140009163:	test   rax,rax
   140009166:	mov    rbx,rax
   140009169:	jne    0x140009171
   14000916b:	call   0x140004480
   140009170:	int3   
   140009171:	mov    eax,DWORD PTR [rdi-0x10]
   140009174:	lea    rcx,[rbx+0x18]
   140009178:	mov    r8,rdi
   14000917b:	mov    DWORD PTR [rbx+0x8],eax
   14000917e:	mov    eax,DWORD PTR [rdi-0x10]
   140009181:	add    eax,0x1
   140009184:	movsxd rdx,eax
   140009187:	add    rdx,rdx
   14000918a:	mov    r9,rdx
   14000918d:	call   0x140029bf0
   140009192:	add    rbx,0x18
   140009196:	mov    QWORD PTR [rsp+0xa8],rsi
   14000919e:	lea    rdi,[rip+0x41703]        # 0x14004a8a8
   1400091a5:	mov    rsi,rbx
   1400091a8:	mov    ecx,0x1
   1400091ad:	mov    QWORD PTR [rsp+0xa0],rbx
   1400091b5:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400091b8:	jne    0x1400091d0
   1400091ba:	lea    rdx,[rbx-0x18]
   1400091be:	or     eax,0xffffffff
   1400091c1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400091c6:	add    eax,0xffffffff
   1400091c9:	test   eax,eax
   1400091cb:	jmp    0x14000929d
   1400091d0:	xor    r9d,r9d
   1400091d3:	mov    QWORD PTR [rsp+0x30],rbp
   1400091d8:	mov    edx,0xc0000000
   1400091dd:	lea    r8d,[r9+0x3]
   1400091e1:	mov    rcx,rbx
   1400091e4:	mov    DWORD PTR [rsp+0x28],ebp
   1400091e8:	mov    DWORD PTR [rsp+0x20],0x3
   1400091f0:	call   QWORD PTR [rip+0x3a38a]        # 0x140043580
   1400091f6:	cmp    rax,0xffffffffffffffff
   1400091fa:	mov    rdi,rax
   1400091fd:	je     0x1400091ba
   1400091ff:	lea    rdx,[rsp+0x50]
   140009204:	lea    rcx,[rsp+0x40]
   140009209:	mov    QWORD PTR [rsp+0x38],rbp
   14000920e:	mov    rax,QWORD PTR [rcx]
   140009211:	lea    r8,[rsp+0x50]
   140009216:	mov    r9d,0x18
   14000921c:	mov    QWORD PTR [rdx],rax
   14000921f:	mov    rax,QWORD PTR [rcx+0x8]
   140009223:	mov    rcx,rdi
   140009226:	mov    QWORD PTR [rdx+0x8],rax
   14000922a:	lea    rax,[rsp+0x98]
   140009232:	mov    edx,0x2f0003
   140009237:	mov    QWORD PTR [rsp+0x30],rax
   14000923c:	lea    rax,[rsp+0x90]
   140009244:	mov    DWORD PTR [rsp+0x28],0x4
   14000924c:	mov    DWORD PTR [rsp+0x64],0x1
   140009254:	mov    DWORD PTR [rsp+0x60],0x8
   14000925c:	mov    DWORD PTR [rsp+0x98],ebp
   140009263:	mov    QWORD PTR [rsp+0x20],rax
   140009268:	call   QWORD PTR [rip+0x3a30a]        # 0x140043578
   14000926e:	mov    esi,eax
   140009270:	call   QWORD PTR [rip+0x3a272]        # 0x1400434e8
   140009276:	test   rdi,rdi
   140009279:	je     0x140009284
   14000927b:	mov    rcx,rdi
   14000927e:	call   QWORD PTR [rip+0x3a304]        # 0x140043588
   140009284:	test   esi,esi
   140009286:	je     0x1400091ba
   14000928c:	lea    rdx,[rbx-0x18]
   140009290:	or     eax,0xffffffff
   140009293:	lock xadd DWORD PTR [rdx+0x10],eax
   140009298:	add    eax,0xffffffff
   14000929b:	test   eax,eax
   14000929d:	jg     0x1400092a8
   14000929f:	mov    rcx,QWORD PTR [rdx]
   1400092a2:	mov    rax,QWORD PTR [rcx]
   1400092a5:	call   QWORD PTR [rax+0x8]
   1400092a8:	mov    eax,DWORD PTR [rsp+0x90]
   1400092af:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400092b7:	add    rsp,0x70
   1400092bb:	pop    rdi
   1400092bc:	pop    rbp
   1400092bd:	pop    rbx
   1400092be:	ret    
   1400092bf:	int3   
   1400092c0:	mov    DWORD PTR [rsp+0x10],edx
   1400092c4:	push   rbx
   1400092c5:	push   rbp
   1400092c6:	push   rsi
   1400092c7:	push   rdi
   1400092c8:	push   r12
   1400092ca:	push   r13
   1400092cc:	push   r14
   1400092ce:	push   r15
   1400092d0:	sub    rsp,0x108
   1400092d7:	cmp    DWORD PTR [rcx+0x18],0x0
   1400092db:	mov    r15,rcx
   1400092de:	mov    r13d,0x4
   1400092e4:	je     0x140009680
   1400092ea:	mov    rdi,QWORD PTR [r15+0x13a8]
   1400092f1:	mov    ecx,0xfffffff1
   1400092f6:	mov    eax,0xf
   1400092fb:	cmp    edx,ecx
   1400092fd:	lea    r14,[rip+0xffffffffffff6cfc]        # 0x140000000
   140009304:	cmovg  ecx,edx
   140009307:	cmp    ecx,eax
   140009309:	cmovl  eax,ecx
   14000930c:	lea    rcx,[rsp+0x50]
   140009311:	mov    DWORD PTR [rsp+0x158],eax
   140009318:	mov    rax,QWORD PTR [r14+0x4b320]
   14000931f:	mov    QWORD PTR [rcx],rax
   140009322:	mov    rax,QWORD PTR [r14+0x4b328]
   140009329:	mov    QWORD PTR [rcx+0x8],rax
   14000932d:	mov    rcx,QWORD PTR [rdi-0x18]
   140009331:	mov    rax,QWORD PTR [rcx]
   140009334:	call   QWORD PTR [rax+0x20]
   140009337:	cmp    DWORD PTR [rdi-0x8],0x0
   14000933b:	mov    rcx,rax
   14000933e:	jl     0x140009351
   140009340:	cmp    rax,QWORD PTR [rdi-0x18]
   140009344:	jne    0x140009351
   140009346:	lea    rbx,[rdi-0x18]
   14000934a:	lock add DWORD PTR [rdi-0x8],0x1
   14000934f:	jmp    0x14000938e
   140009351:	mov    rax,QWORD PTR [rax]
   140009354:	mov    edx,DWORD PTR [rdi-0x10]
   140009357:	mov    r8d,0x2
   14000935d:	call   QWORD PTR [rax]
   14000935f:	test   rax,rax
   140009362:	mov    rbx,rax
   140009365:	jne    0x14000936d
   140009367:	call   0x140004480
   14000936c:	int3   
   14000936d:	mov    eax,DWORD PTR [rdi-0x10]
   140009370:	lea    rcx,[rbx+0x18]
   140009374:	mov    r8,rdi
   140009377:	mov    DWORD PTR [rbx+0x8],eax
   14000937a:	mov    eax,DWORD PTR [rdi-0x10]
   14000937d:	add    eax,0x1
   140009380:	movsxd rdx,eax
   140009383:	add    rdx,rdx
   140009386:	mov    r9,rdx
   140009389:	call   0x140029bf0
   14000938e:	add    rbx,0x18
   140009392:	lea    rdi,[rip+0x4150f]        # 0x14004a8a8
   140009399:	mov    ecx,0x1
   14000939e:	mov    rsi,rbx
   1400093a1:	xor    r12d,r12d
   1400093a4:	mov    QWORD PTR [rsp+0xe0],rbx
   1400093ac:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400093af:	jne    0x1400093d7
   1400093b1:	or     ebp,0xffffffff
   1400093b4:	lea    rdx,[rbx-0x18]
   1400093b8:	mov    eax,ebp
   1400093ba:	lock xadd DWORD PTR [rdx+0x10],eax
   1400093bf:	add    eax,ebp
   1400093c1:	test   eax,eax
   1400093c3:	jg     0x1400094f7
   1400093c9:	mov    rcx,QWORD PTR [rdx]
   1400093cc:	mov    rax,QWORD PTR [rcx]
   1400093cf:	call   QWORD PTR [rax+0x8]
   1400093d2:	jmp    0x1400094f7
   1400093d7:	xor    r9d,r9d
   1400093da:	mov    QWORD PTR [rsp+0x30],r12
   1400093df:	mov    edx,0xc0000000
   1400093e4:	lea    r8d,[r9+0x3]
   1400093e8:	mov    rcx,rbx
   1400093eb:	mov    DWORD PTR [rsp+0x28],r12d
   1400093f0:	mov    DWORD PTR [rsp+0x20],0x3
   1400093f8:	call   QWORD PTR [rip+0x3a182]        # 0x140043580
   1400093fe:	cmp    rax,0xffffffffffffffff
   140009402:	mov    rdi,rax
   140009405:	jne    0x14000942c
   140009407:	or     ebp,eax
   140009409:	lea    rdx,[rbx-0x18]
   14000940d:	mov    eax,ebp
   14000940f:	lock xadd DWORD PTR [rdx+0x10],eax
   140009414:	add    eax,edi
   140009416:	test   eax,eax
   140009418:	jg     0x1400094f7
   14000941e:	mov    rcx,QWORD PTR [rdx]
   140009421:	mov    rax,QWORD PTR [rcx]
   140009424:	call   QWORD PTR [rax+0x8]
   140009427:	jmp    0x1400094f7
   14000942c:	lea    rdx,[rsp+0x68]
   140009431:	lea    rcx,[rsp+0x50]
   140009436:	mov    QWORD PTR [rsp+0x38],r12
   14000943b:	mov    rax,QWORD PTR [rcx]
   14000943e:	lea    r8,[rsp+0x68]
   140009443:	mov    r9d,0x18
   140009449:	mov    QWORD PTR [rdx],rax
   14000944c:	mov    rax,QWORD PTR [rcx+0x8]
   140009450:	mov    rcx,rdi
   140009453:	mov    QWORD PTR [rdx+0x8],rax
   140009457:	lea    rax,[rsp+0x150]
   14000945f:	mov    edx,0x2f0003
   140009464:	mov    QWORD PTR [rsp+0x30],rax
   140009469:	lea    rax,[rsp+0x158]
   140009471:	mov    DWORD PTR [rsp+0x28],r13d
   140009476:	mov    DWORD PTR [rsp+0x7c],0x2
   14000947e:	mov    DWORD PTR [rsp+0x78],0x8
   140009486:	mov    DWORD PTR [rsp+0x150],r12d
   14000948e:	mov    QWORD PTR [rsp+0x20],rax
   140009493:	call   QWORD PTR [rip+0x3a0df]        # 0x140043578
   140009499:	mov    esi,eax
   14000949b:	call   QWORD PTR [rip+0x3a047]        # 0x1400434e8
   1400094a1:	test   rdi,rdi
   1400094a4:	je     0x1400094af
   1400094a6:	mov    rcx,rdi
   1400094a9:	call   QWORD PTR [rip+0x3a0d9]        # 0x140043588
   1400094af:	test   esi,esi
   1400094b1:	mov    r13d,DWORD PTR [rsp+0x150]
   1400094b9:	jne    0x1400094da
   1400094bb:	or     ebp,0xffffffff
   1400094be:	lea    rdx,[rbx-0x18]
   1400094c2:	mov    eax,ebp
   1400094c4:	lock xadd DWORD PTR [rdx+0x10],eax
   1400094c9:	add    eax,ebp
   1400094cb:	test   eax,eax
   1400094cd:	jg     0x1400094f7
   1400094cf:	mov    rcx,QWORD PTR [rdx]
   1400094d2:	mov    rax,QWORD PTR [rcx]
   1400094d5:	call   QWORD PTR [rax+0x8]
   1400094d8:	jmp    0x1400094f7
   1400094da:	or     ebp,0xffffffff
   1400094dd:	lea    rdx,[rbx-0x18]
   1400094e1:	mov    eax,ebp
   1400094e3:	lock xadd DWORD PTR [rdx+0x10],eax
   1400094e8:	add    eax,ebp
   1400094ea:	test   eax,eax
   1400094ec:	jg     0x1400094f7
   1400094ee:	mov    rcx,QWORD PTR [rdx]
   1400094f1:	mov    rax,QWORD PTR [rcx]
   1400094f4:	call   QWORD PTR [rax+0x8]
   1400094f7:	mov    rax,QWORD PTR [r14+0x4b320]
   1400094fe:	mov    rdi,QWORD PTR [r15+0x13a8]
   140009505:	lea    rcx,[rsp+0x50]
   14000950a:	mov    QWORD PTR [rcx],rax
   14000950d:	mov    rax,QWORD PTR [r14+0x4b328]
   140009514:	mov    DWORD PTR [rsp+0x40],0xffffffff
   14000951c:	mov    QWORD PTR [rcx+0x8],rax
   140009520:	mov    rcx,QWORD PTR [rdi-0x18]
   140009524:	mov    rax,QWORD PTR [rcx]
   140009527:	call   QWORD PTR [rax+0x20]
   14000952a:	cmp    DWORD PTR [rdi-0x8],r12d
   14000952e:	mov    rcx,rax
   140009531:	jl     0x140009544
   140009533:	cmp    rax,QWORD PTR [rdi-0x18]
   140009537:	jne    0x140009544
   140009539:	lea    rbx,[rdi-0x18]
   14000953d:	lock add DWORD PTR [rdi-0x8],0x1
   140009542:	jmp    0x140009581
   140009544:	mov    rax,QWORD PTR [rax]
   140009547:	mov    edx,DWORD PTR [rdi-0x10]
   14000954a:	mov    r8d,0x2
   140009550:	call   QWORD PTR [rax]
   140009552:	test   rax,rax
   140009555:	mov    rbx,rax
   140009558:	jne    0x140009560
   14000955a:	call   0x140004480
   14000955f:	int3   
   140009560:	mov    eax,DWORD PTR [rdi-0x10]
   140009563:	lea    rcx,[rbx+0x18]
   140009567:	mov    r8,rdi
   14000956a:	mov    DWORD PTR [rbx+0x8],eax
   14000956d:	mov    eax,DWORD PTR [rdi-0x10]
   140009570:	add    eax,0x1
   140009573:	movsxd rdx,eax
   140009576:	add    rdx,rdx
   140009579:	mov    r9,rdx
   14000957c:	call   0x140029bf0
   140009581:	add    rbx,0x18
   140009585:	lea    rdi,[rip+0x4131c]        # 0x14004a8a8
   14000958c:	mov    ecx,0x1
   140009591:	mov    rsi,rbx
   140009594:	mov    QWORD PTR [rsp+0xd0],rbx
   14000959c:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000959f:	je     0x1400099a7
   1400095a5:	xor    r9d,r9d
   1400095a8:	mov    QWORD PTR [rsp+0x30],r12
   1400095ad:	mov    edx,0xc0000000
   1400095b2:	lea    r8d,[r9+0x3]
   1400095b6:	mov    rcx,rbx
   1400095b9:	mov    DWORD PTR [rsp+0x28],r12d
   1400095be:	mov    DWORD PTR [rsp+0x20],0x3
   1400095c6:	call   QWORD PTR [rip+0x39fb4]        # 0x140043580
   1400095cc:	cmp    rax,0xffffffffffffffff
   1400095d0:	mov    rdi,rax
   1400095d3:	je     0x1400099a7
   1400095d9:	lea    rdx,[rsp+0x80]
   1400095e1:	lea    rcx,[rsp+0x50]
   1400095e6:	mov    QWORD PTR [rsp+0x38],r12
   1400095eb:	mov    rax,QWORD PTR [rcx]
   1400095ee:	lea    r8,[rsp+0x80]
   1400095f6:	mov    r9d,0x18
   1400095fc:	mov    QWORD PTR [rdx],rax
   1400095ff:	mov    rax,QWORD PTR [rcx+0x8]
   140009603:	mov    rcx,rdi
   140009606:	mov    QWORD PTR [rdx+0x8],rax
   14000960a:	lea    rax,[rsp+0x168]
   140009612:	mov    edx,0x2f0003
   140009617:	mov    QWORD PTR [rsp+0x30],rax
   14000961c:	lea    rax,[rsp+0x40]
   140009621:	mov    DWORD PTR [rsp+0x28],r13d
   140009626:	mov    DWORD PTR [rsp+0x94],0x2
   140009631:	mov    DWORD PTR [rsp+0x90],0xa
   14000963c:	mov    DWORD PTR [rsp+0x168],r12d
   140009644:	mov    QWORD PTR [rsp+0x20],rax
   140009649:	call   QWORD PTR [rip+0x39f29]        # 0x140043578
   14000964f:	mov    esi,eax
   140009651:	call   QWORD PTR [rip+0x39e91]        # 0x1400434e8
   140009657:	test   rdi,rdi
   14000965a:	je     0x140009665
   14000965c:	mov    rcx,rdi
   14000965f:	call   QWORD PTR [rip+0x39f23]        # 0x140043588
   140009665:	test   esi,esi
   140009667:	je     0x1400099a7
   14000966d:	lea    rdx,[rbx-0x18]
   140009671:	lock xadd DWORD PTR [rdx+0x10],ebp
   140009676:	add    ebp,0xffffffff
   140009679:	test   ebp,ebp
   14000967b:	jmp    0x140009a98
   140009680:	movsxd rax,edx
   140009683:	lea    r14,[rip+0xffffffffffff6976]        # 0x140000000
   14000968a:	movaps XMMWORD PTR [rsp+0xf0],xmm7
   140009692:	movss  xmm7,DWORD PTR [r14+rax*4+0x4b36c]
   14000969c:	movzx  eax,WORD PTR [rcx+0x10]
   1400096a0:	cvtsi2ss xmm0,eax
   1400096a4:	mulss  xmm0,xmm7
   1400096a8:	cvtss2sd xmm0,xmm0
   1400096ac:	subsd  xmm0,QWORD PTR [rip+0x441b4]        # 0x14004d868
   1400096b4:	call   0x140041280
   1400096b9:	movzx  eax,WORD PTR [r15+0x12]
   1400096be:	cvttsd2si edi,xmm0
   1400096c2:	cvtsi2ss xmm1,eax
   1400096c6:	mulss  xmm1,xmm7
   1400096ca:	cvtss2sd xmm0,xmm1
   1400096ce:	subsd  xmm0,QWORD PTR [rip+0x44192]        # 0x14004d868
   1400096d6:	call   0x140041280
   1400096db:	xor    r12d,r12d
   1400096de:	test   edi,edi
   1400096e0:	mov    eax,r12d
   1400096e3:	cmovg  eax,edi
   1400096e6:	mov    edi,0xff
   1400096eb:	cvttsd2si ecx,xmm0
   1400096ef:	cmp    eax,edi
   1400096f1:	mov    edx,edi
   1400096f3:	cmovl  edx,eax
   1400096f6:	test   ecx,ecx
   1400096f8:	mov    eax,r12d
   1400096fb:	cmovg  eax,ecx
   1400096fe:	lea    rcx,[rsp+0x50]
   140009703:	cmp    eax,edi
   140009705:	cmovl  edi,eax
   140009708:	mov    rax,QWORD PTR [r14+0x4b320]
   14000970f:	mov    QWORD PTR [rcx],rax
   140009712:	mov    rax,QWORD PTR [r14+0x4b328]
   140009719:	shl    edi,0x8
   14000971c:	add    edi,edx
   14000971e:	mov    QWORD PTR [rcx+0x8],rax
   140009722:	mov    DWORD PTR [rsp+0x60],edi
   140009726:	mov    rdi,QWORD PTR [r15+0x13a8]
   14000972d:	mov    rcx,QWORD PTR [rdi-0x18]
   140009731:	mov    rax,QWORD PTR [rcx]
   140009734:	call   QWORD PTR [rax+0x20]
   140009737:	cmp    DWORD PTR [rdi-0x8],r12d
   14000973b:	movaps xmm7,XMMWORD PTR [rsp+0xf0]
   140009743:	mov    rcx,rax
   140009746:	jl     0x140009759
   140009748:	cmp    rax,QWORD PTR [rdi-0x18]
   14000974c:	jne    0x140009759
   14000974e:	lea    rbx,[rdi-0x18]
   140009752:	lock add DWORD PTR [rdi-0x8],0x1
   140009757:	jmp    0x140009796
   140009759:	mov    rax,QWORD PTR [rax]
   14000975c:	mov    edx,DWORD PTR [rdi-0x10]
   14000975f:	mov    r8d,0x2
   140009765:	call   QWORD PTR [rax]
   140009767:	test   rax,rax
   14000976a:	mov    rbx,rax
   14000976d:	jne    0x140009775
   14000976f:	call   0x140004480
   140009774:	int3   
   140009775:	mov    eax,DWORD PTR [rdi-0x10]
   140009778:	lea    rcx,[rbx+0x18]
   14000977c:	mov    r8,rdi
   14000977f:	mov    DWORD PTR [rbx+0x8],eax
   140009782:	mov    eax,DWORD PTR [rdi-0x10]
   140009785:	add    eax,0x1
   140009788:	movsxd rdx,eax
   14000978b:	add    rdx,rdx
   14000978e:	mov    r9,rdx
   140009791:	call   0x140029bf0
   140009796:	add    rbx,0x18
   14000979a:	lea    rdi,[rip+0x41107]        # 0x14004a8a8
   1400097a1:	mov    ecx,0x1
   1400097a6:	mov    rsi,rbx
   1400097a9:	mov    QWORD PTR [rsp+0xc8],rbx
   1400097b1:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400097b4:	jne    0x1400097dc
   1400097b6:	or     ebp,0xffffffff
   1400097b9:	lea    rdx,[rbx-0x18]
   1400097bd:	mov    eax,ebp
   1400097bf:	lock xadd DWORD PTR [rdx+0x10],eax
   1400097c4:	add    eax,ebp
   1400097c6:	test   eax,eax
   1400097c8:	jg     0x140009905
   1400097ce:	mov    rcx,QWORD PTR [rdx]
   1400097d1:	mov    rax,QWORD PTR [rcx]
   1400097d4:	call   QWORD PTR [rax+0x8]
   1400097d7:	jmp    0x140009905
   1400097dc:	xor    r9d,r9d
   1400097df:	mov    QWORD PTR [rsp+0x30],r12
   1400097e4:	mov    edx,0xc0000000
   1400097e9:	lea    r8d,[r9+0x3]
   1400097ed:	mov    rcx,rbx
   1400097f0:	mov    DWORD PTR [rsp+0x28],r12d
   1400097f5:	mov    DWORD PTR [rsp+0x20],0x3
   1400097fd:	call   QWORD PTR [rip+0x39d7d]        # 0x140043580
   140009803:	cmp    rax,0xffffffffffffffff
   140009807:	mov    rdi,rax
   14000980a:	jne    0x140009831
   14000980c:	or     ebp,eax
   14000980e:	lea    rdx,[rbx-0x18]
   140009812:	mov    eax,ebp
   140009814:	lock xadd DWORD PTR [rdx+0x10],eax
   140009819:	add    eax,edi
   14000981b:	test   eax,eax
   14000981d:	jg     0x140009905
   140009823:	mov    rcx,QWORD PTR [rdx]
   140009826:	mov    rax,QWORD PTR [rcx]
   140009829:	call   QWORD PTR [rax+0x8]
   14000982c:	jmp    0x140009905
   140009831:	lea    rdx,[rsp+0xb0]
   140009839:	lea    rcx,[rsp+0x50]
   14000983e:	mov    QWORD PTR [rsp+0x38],r12
   140009843:	mov    rax,QWORD PTR [rcx]
   140009846:	lea    r8,[rsp+0xb0]
   14000984e:	mov    r9d,0x18
   140009854:	mov    QWORD PTR [rdx],rax
   140009857:	mov    rax,QWORD PTR [rcx+0x8]
   14000985b:	mov    rcx,rdi
   14000985e:	mov    QWORD PTR [rdx+0x8],rax
   140009862:	lea    rax,[rsp+0x160]
   14000986a:	mov    edx,0x2f0003
   14000986f:	mov    QWORD PTR [rsp+0x30],rax
   140009874:	lea    rax,[rsp+0x60]
   140009879:	mov    DWORD PTR [rsp+0x28],r13d
   14000987e:	mov    DWORD PTR [rsp+0xc4],0x2
   140009889:	mov    DWORD PTR [rsp+0xc0],0xa
   140009894:	mov    DWORD PTR [rsp+0x160],r12d
   14000989c:	mov    QWORD PTR [rsp+0x20],rax
   1400098a1:	call   QWORD PTR [rip+0x39cd1]        # 0x140043578
   1400098a7:	mov    esi,eax
   1400098a9:	call   QWORD PTR [rip+0x39c39]        # 0x1400434e8
   1400098af:	test   rdi,rdi
   1400098b2:	je     0x1400098bd
   1400098b4:	mov    rcx,rdi
   1400098b7:	call   QWORD PTR [rip+0x39ccb]        # 0x140043588
   1400098bd:	test   esi,esi
   1400098bf:	mov    r13d,DWORD PTR [rsp+0x160]
   1400098c7:	jne    0x1400098e8
   1400098c9:	or     ebp,0xffffffff
   1400098cc:	lea    rdx,[rbx-0x18]
   1400098d0:	mov    eax,ebp
   1400098d2:	lock xadd DWORD PTR [rdx+0x10],eax
   1400098d7:	add    eax,ebp
   1400098d9:	test   eax,eax
   1400098db:	jg     0x140009905
   1400098dd:	mov    rcx,QWORD PTR [rdx]
   1400098e0:	mov    rax,QWORD PTR [rcx]
   1400098e3:	call   QWORD PTR [rax+0x8]
   1400098e6:	jmp    0x140009905
   1400098e8:	or     ebp,0xffffffff
   1400098eb:	lea    rdx,[rbx-0x18]
   1400098ef:	mov    eax,ebp
   1400098f1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400098f6:	add    eax,ebp
   1400098f8:	test   eax,eax
   1400098fa:	jg     0x140009905
   1400098fc:	mov    rcx,QWORD PTR [rdx]
   1400098ff:	mov    rax,QWORD PTR [rcx]
   140009902:	call   QWORD PTR [rax+0x8]
   140009905:	mov    rax,QWORD PTR [r14+0x4b320]
   14000990c:	mov    rdi,QWORD PTR [r15+0x13a8]
   140009913:	lea    rcx,[rsp+0x50]
   140009918:	mov    QWORD PTR [rcx],rax
   14000991b:	mov    rax,QWORD PTR [r14+0x4b328]
   140009922:	mov    QWORD PTR [rcx+0x8],rax
   140009926:	mov    rcx,QWORD PTR [rdi-0x18]
   14000992a:	mov    rax,QWORD PTR [rcx]
   14000992d:	call   QWORD PTR [rax+0x20]
   140009930:	cmp    DWORD PTR [rdi-0x8],r12d
   140009934:	mov    rcx,rax
   140009937:	jl     0x14000994a
   140009939:	cmp    rax,QWORD PTR [rdi-0x18]
   14000993d:	jne    0x14000994a
   14000993f:	lea    rbx,[rdi-0x18]
   140009943:	lock add DWORD PTR [rdi-0x8],0x1
   140009948:	jmp    0x140009987
   14000994a:	mov    rax,QWORD PTR [rax]
   14000994d:	mov    edx,DWORD PTR [rdi-0x10]
   140009950:	mov    r8d,0x2
   140009956:	call   QWORD PTR [rax]
   140009958:	test   rax,rax
   14000995b:	mov    rbx,rax
   14000995e:	jne    0x140009966
   140009960:	call   0x140004480
   140009965:	int3   
   140009966:	mov    eax,DWORD PTR [rdi-0x10]
   140009969:	lea    rcx,[rbx+0x18]
   14000996d:	mov    r8,rdi
   140009970:	mov    DWORD PTR [rbx+0x8],eax
   140009973:	mov    eax,DWORD PTR [rdi-0x10]
   140009976:	add    eax,0x1
   140009979:	movsxd rdx,eax
   14000997c:	add    rdx,rdx
   14000997f:	mov    r9,rdx
   140009982:	call   0x140029bf0
   140009987:	add    rbx,0x18
   14000998b:	lea    rdi,[rip+0x40f16]        # 0x14004a8a8
   140009992:	mov    ecx,0x1
   140009997:	mov    rsi,rbx
   14000999a:	mov    QWORD PTR [rsp+0xd8],rbx
   1400099a2:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400099a5:	jne    0x1400099c9
   1400099a7:	lea    rdx,[rbx-0x18]
   1400099ab:	lock xadd DWORD PTR [rdx+0x10],ebp
   1400099b0:	add    ebp,0xffffffff
   1400099b3:	test   ebp,ebp
   1400099b5:	jg     0x140009aa9
   1400099bb:	mov    rcx,QWORD PTR [rdx]
   1400099be:	mov    rax,QWORD PTR [rcx]
   1400099c1:	call   QWORD PTR [rax+0x8]
   1400099c4:	jmp    0x140009aa9
   1400099c9:	xor    r9d,r9d
   1400099cc:	mov    QWORD PTR [rsp+0x30],r12
   1400099d1:	mov    edx,0xc0000000
   1400099d6:	lea    r8d,[r9+0x3]
   1400099da:	mov    rcx,rbx
   1400099dd:	mov    DWORD PTR [rsp+0x28],r12d
   1400099e2:	mov    DWORD PTR [rsp+0x20],0x3
   1400099ea:	call   QWORD PTR [rip+0x39b90]        # 0x140043580
   1400099f0:	cmp    rax,0xffffffffffffffff
   1400099f4:	mov    rdi,rax
   1400099f7:	je     0x1400099a7
   1400099f9:	lea    rdx,[rsp+0x98]
   140009a01:	lea    rcx,[rsp+0x50]
   140009a06:	mov    QWORD PTR [rsp+0x38],r12
   140009a0b:	mov    rax,QWORD PTR [rcx]
   140009a0e:	lea    r8,[rsp+0x98]
   140009a16:	mov    r9d,0x18
   140009a1c:	mov    QWORD PTR [rdx],rax
   140009a1f:	mov    rax,QWORD PTR [rcx+0x8]
   140009a23:	mov    rcx,rdi
   140009a26:	mov    QWORD PTR [rdx+0x8],rax
   140009a2a:	lea    rax,[rsp+0x64]
   140009a2f:	mov    edx,0x2f0003
   140009a34:	mov    QWORD PTR [rsp+0x30],rax
   140009a39:	lea    rax,[rsp+0x158]
   140009a41:	mov    DWORD PTR [rsp+0x28],r13d
   140009a46:	mov    DWORD PTR [rsp+0xac],0x2
   140009a51:	mov    DWORD PTR [rsp+0xa8],0x8
   140009a5c:	mov    DWORD PTR [rsp+0x64],r12d
   140009a61:	mov    QWORD PTR [rsp+0x20],rax
   140009a66:	call   QWORD PTR [rip+0x39b0c]        # 0x140043578
   140009a6c:	mov    esi,eax
   140009a6e:	call   QWORD PTR [rip+0x39a74]        # 0x1400434e8
   140009a74:	test   rdi,rdi
   140009a77:	je     0x140009a82
   140009a79:	mov    rcx,rdi
   140009a7c:	call   QWORD PTR [rip+0x39b06]        # 0x140043588
   140009a82:	test   esi,esi
   140009a84:	je     0x1400099a7
   140009a8a:	lea    rdx,[rbx-0x18]
   140009a8e:	lock xadd DWORD PTR [rdx+0x10],ebp
   140009a93:	add    ebp,0xffffffff
   140009a96:	test   ebp,ebp
   140009a98:	jg     0x140009aa3
   140009a9a:	mov    rcx,QWORD PTR [rdx]
   140009a9d:	mov    rax,QWORD PTR [rcx]
   140009aa0:	call   QWORD PTR [rax+0x8]
   140009aa3:	mov    r12d,0x1
   140009aa9:	mov    eax,r12d
   140009aac:	add    rsp,0x108
   140009ab3:	pop    r15
   140009ab5:	pop    r14
   140009ab7:	pop    r13
   140009ab9:	pop    r12
   140009abb:	pop    rdi
   140009abc:	pop    rsi
   140009abd:	pop    rbp
   140009abe:	pop    rbx
   140009abf:	ret    
   140009ac0:	rex push rbx
   140009ac2:	push   rdi
   140009ac3:	push   r12
   140009ac5:	sub    rsp,0x80
   140009acc:	mov    rax,QWORD PTR [rip+0x418ed]        # 0x14004b3c0
   140009ad3:	mov    rdi,QWORD PTR [rcx+0x13a0]
   140009ada:	lea    rdx,[rsp+0x40]
   140009adf:	mov    QWORD PTR [rdx],rax
   140009ae2:	mov    rax,QWORD PTR [rip+0x418df]        # 0x14004b3c8
   140009ae9:	xor    r12d,r12d
   140009aec:	mov    DWORD PTR [rsp+0xa0],r12d
   140009af4:	mov    rcx,QWORD PTR [rdi-0x18]
   140009af8:	mov    QWORD PTR [rdx+0x8],rax
   140009afc:	mov    rax,QWORD PTR [rcx]
   140009aff:	call   QWORD PTR [rax+0x20]
   140009b02:	cmp    DWORD PTR [rdi-0x8],r12d
   140009b06:	mov    rcx,rax
   140009b09:	jl     0x140009b1c
   140009b0b:	cmp    rax,QWORD PTR [rdi-0x18]
   140009b0f:	jne    0x140009b1c
   140009b11:	lea    rbx,[rdi-0x18]
   140009b15:	lock add DWORD PTR [rdi-0x8],0x1
   140009b1a:	jmp    0x140009b59
   140009b1c:	mov    rax,QWORD PTR [rax]
   140009b1f:	mov    edx,DWORD PTR [rdi-0x10]
   140009b22:	mov    r8d,0x2
   140009b28:	call   QWORD PTR [rax]
   140009b2a:	test   rax,rax
   140009b2d:	mov    rbx,rax
   140009b30:	jne    0x140009b38
   140009b32:	call   0x140004480
   140009b37:	int3   
   140009b38:	mov    eax,DWORD PTR [rdi-0x10]
   140009b3b:	lea    rcx,[rbx+0x18]
   140009b3f:	mov    r8,rdi
   140009b42:	mov    DWORD PTR [rbx+0x8],eax
   140009b45:	mov    eax,DWORD PTR [rdi-0x10]
   140009b48:	add    eax,0x1
   140009b4b:	movsxd rdx,eax
   140009b4e:	add    rdx,rdx
   140009b51:	mov    r9,rdx
   140009b54:	call   0x140029bf0
   140009b59:	add    rbx,0x18
   140009b5d:	mov    QWORD PTR [rsp+0x78],rbp
   140009b62:	mov    QWORD PTR [rsp+0x70],rsi
   140009b67:	mov    ebp,0x1
   140009b6c:	lea    rdi,[rip+0x40d35]        # 0x14004a8a8
   140009b73:	mov    rsi,rbx
   140009b76:	mov    rcx,rbp
   140009b79:	mov    QWORD PTR [rsp+0xb0],rbx
   140009b81:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140009b84:	jne    0x140009bab
   140009b86:	lea    rdx,[rbx-0x18]
   140009b8a:	or     eax,0xffffffff
   140009b8d:	lock xadd DWORD PTR [rdx+0x10],eax
   140009b92:	add    eax,0xffffffff
   140009b95:	test   eax,eax
   140009b97:	jg     0x140009c87
   140009b9d:	mov    rcx,QWORD PTR [rdx]
   140009ba0:	mov    rax,QWORD PTR [rcx]
   140009ba3:	call   QWORD PTR [rax+0x8]
   140009ba6:	jmp    0x140009c87
   140009bab:	xor    r9d,r9d
   140009bae:	mov    QWORD PTR [rsp+0x30],r12
   140009bb3:	mov    edx,0xc0000000
   140009bb8:	lea    r8d,[r9+0x3]
   140009bbc:	mov    rcx,rbx
   140009bbf:	mov    DWORD PTR [rsp+0x28],r12d
   140009bc4:	mov    DWORD PTR [rsp+0x20],0x3
   140009bcc:	call   QWORD PTR [rip+0x399ae]        # 0x140043580
   140009bd2:	cmp    rax,0xffffffffffffffff
   140009bd6:	mov    rdi,rax
   140009bd9:	je     0x140009b86
   140009bdb:	lea    rdx,[rsp+0x50]
   140009be0:	lea    rcx,[rsp+0x40]
   140009be5:	mov    QWORD PTR [rsp+0x38],r12
   140009bea:	mov    rax,QWORD PTR [rcx]
   140009bed:	lea    r8,[rsp+0x50]
   140009bf2:	mov    r9d,0x18
   140009bf8:	mov    QWORD PTR [rdx],rax
   140009bfb:	mov    rax,QWORD PTR [rcx+0x8]
   140009bff:	mov    rcx,rdi
   140009c02:	mov    QWORD PTR [rdx+0x8],rax
   140009c06:	lea    rax,[rsp+0xa8]
   140009c0e:	mov    edx,0x2f0003
   140009c13:	mov    QWORD PTR [rsp+0x30],rax
   140009c18:	lea    rax,[rsp+0xa0]
   140009c20:	mov    DWORD PTR [rsp+0x28],0x4
   140009c28:	mov    DWORD PTR [rsp+0x64],ebp
   140009c2c:	mov    DWORD PTR [rsp+0x60],ebp
   140009c30:	mov    DWORD PTR [rsp+0xa8],r12d
   140009c38:	mov    QWORD PTR [rsp+0x20],rax
   140009c3d:	call   QWORD PTR [rip+0x39935]        # 0x140043578
   140009c43:	mov    esi,eax
   140009c45:	call   QWORD PTR [rip+0x3989d]        # 0x1400434e8
   140009c4b:	test   rdi,rdi
   140009c4e:	je     0x140009c59
   140009c50:	mov    rcx,rdi
   140009c53:	call   QWORD PTR [rip+0x3992f]        # 0x140043588
   140009c59:	test   esi,esi
   140009c5b:	je     0x140009b86
   140009c61:	lea    rdx,[rbx-0x18]
   140009c65:	or     eax,0xffffffff
   140009c68:	lock xadd DWORD PTR [rdx+0x10],eax
   140009c6d:	add    eax,0xffffffff
   140009c70:	test   eax,eax
   140009c72:	jg     0x140009c7d
   140009c74:	mov    rcx,QWORD PTR [rdx]
   140009c77:	mov    rax,QWORD PTR [rcx]
   140009c7a:	call   QWORD PTR [rax+0x8]
   140009c7d:	cmp    DWORD PTR [rsp+0xa0],r12d
   140009c85:	jne    0x140009c8a
   140009c87:	mov    ebp,r12d
   140009c8a:	mov    rsi,QWORD PTR [rsp+0x70]
   140009c8f:	mov    eax,ebp
   140009c91:	mov    rbp,QWORD PTR [rsp+0x78]
   140009c96:	add    rsp,0x80
   140009c9d:	pop    r12
   140009c9f:	pop    rdi
   140009ca0:	pop    rbx
   140009ca1:	ret    
   140009ca2:	int3   
   140009ca3:	int3   
   140009ca4:	int3   
   140009ca5:	int3   
   140009ca6:	int3   
   140009ca7:	int3   
   140009ca8:	int3   
   140009ca9:	int3   
   140009caa:	int3   
   140009cab:	int3   
   140009cac:	int3   
   140009cad:	int3   
   140009cae:	int3   
   140009caf:	int3   
   140009cb0:	rex push rbx
   140009cb2:	push   rdi
   140009cb3:	sub    rsp,0x188
   140009cba:	mov    rdi,QWORD PTR [rcx+0x13a8]
   140009cc1:	lea    rcx,[rsp+0x70]
   140009cc6:	xor    edx,edx
   140009cc8:	mov    r8d,0x110
   140009cce:	call   0x14002ac20
   140009cd3:	mov    rax,QWORD PTR [rip+0x416d6]        # 0x14004b3b0
   140009cda:	mov    rcx,QWORD PTR [rdi-0x18]
   140009cde:	lea    rdx,[rsp+0x60]
   140009ce3:	mov    QWORD PTR [rdx],rax
   140009ce6:	mov    rax,QWORD PTR [rip+0x416cb]        # 0x14004b3b8
   140009ced:	mov    QWORD PTR [rdx+0x8],rax
   140009cf1:	mov    rax,QWORD PTR [rcx]
   140009cf4:	call   QWORD PTR [rax+0x20]
   140009cf7:	cmp    DWORD PTR [rdi-0x8],0x0
   140009cfb:	mov    rcx,rax
   140009cfe:	jl     0x140009d11
   140009d00:	cmp    rax,QWORD PTR [rdi-0x18]
   140009d04:	jne    0x140009d11
   140009d06:	lea    rbx,[rdi-0x18]
   140009d0a:	lock add DWORD PTR [rdi-0x8],0x1
   140009d0f:	jmp    0x140009d4e
   140009d11:	mov    rax,QWORD PTR [rax]
   140009d14:	mov    edx,DWORD PTR [rdi-0x10]
   140009d17:	mov    r8d,0x2
   140009d1d:	call   QWORD PTR [rax]
   140009d1f:	test   rax,rax
   140009d22:	mov    rbx,rax
   140009d25:	jne    0x140009d2d
   140009d27:	call   0x140004480
   140009d2c:	int3   
   140009d2d:	mov    eax,DWORD PTR [rdi-0x10]
   140009d30:	lea    rcx,[rbx+0x18]
   140009d34:	mov    r8,rdi
   140009d37:	mov    DWORD PTR [rbx+0x8],eax
   140009d3a:	mov    eax,DWORD PTR [rdi-0x10]
   140009d3d:	add    eax,0x1
   140009d40:	movsxd rdx,eax
   140009d43:	add    rdx,rdx
   140009d46:	mov    r9,rdx
   140009d49:	call   0x140029bf0
   140009d4e:	mov    QWORD PTR [rsp+0x1b0],rbp
   140009d56:	add    rbx,0x18
   140009d5a:	mov    QWORD PTR [rsp+0x1b8],rsi
   140009d62:	mov    ebp,0x1
   140009d67:	lea    rdi,[rip+0x40b3a]        # 0x14004a8a8
   140009d6e:	mov    rsi,rbx
   140009d71:	mov    rcx,rbp
   140009d74:	mov    QWORD PTR [rsp+0x180],r12
   140009d7c:	xor    r12d,r12d
   140009d7f:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140009d82:	mov    QWORD PTR [rsp+0x1a8],rbx
   140009d8a:	jne    0x140009db1
   140009d8c:	lea    rdx,[rbx-0x18]
   140009d90:	or     eax,0xffffffff
   140009d93:	lock xadd DWORD PTR [rdx+0x10],eax
   140009d98:	add    eax,0xffffffff
   140009d9b:	test   eax,eax
   140009d9d:	jg     0x140009e8f
   140009da3:	mov    rcx,QWORD PTR [rdx]
   140009da6:	mov    rax,QWORD PTR [rcx]
   140009da9:	call   QWORD PTR [rax+0x8]
   140009dac:	jmp    0x140009e8f
   140009db1:	xor    r9d,r9d
   140009db4:	mov    QWORD PTR [rsp+0x30],r12
   140009db9:	mov    edx,0xc0000000
   140009dbe:	lea    r8d,[r9+0x3]
   140009dc2:	mov    rcx,rbx
   140009dc5:	mov    DWORD PTR [rsp+0x28],r12d
   140009dca:	mov    DWORD PTR [rsp+0x20],0x3
   140009dd2:	call   QWORD PTR [rip+0x397a8]        # 0x140043580
   140009dd8:	cmp    rax,0xffffffffffffffff
   140009ddc:	mov    rdi,rax
   140009ddf:	je     0x140009d8c
   140009de1:	lea    rdx,[rsp+0x40]
   140009de6:	lea    rcx,[rsp+0x60]
   140009deb:	mov    QWORD PTR [rsp+0x38],r12
   140009df0:	mov    rax,QWORD PTR [rcx]
   140009df3:	lea    r8,[rsp+0x40]
   140009df8:	mov    r9d,0x18
   140009dfe:	mov    QWORD PTR [rdx],rax
   140009e01:	mov    rax,QWORD PTR [rcx+0x8]
   140009e05:	mov    rcx,rdi
   140009e08:	mov    QWORD PTR [rdx+0x8],rax
   140009e0c:	lea    rax,[rsp+0x1a0]
   140009e14:	mov    edx,0x2f0003
   140009e19:	mov    QWORD PTR [rsp+0x30],rax
   140009e1e:	lea    rax,[rsp+0x70]
   140009e23:	mov    DWORD PTR [rsp+0x28],0x110
   140009e2b:	mov    DWORD PTR [rsp+0x54],ebp
   140009e2f:	mov    DWORD PTR [rsp+0x50],0x19
   140009e37:	mov    DWORD PTR [rsp+0x1a0],r12d
   140009e3f:	mov    QWORD PTR [rsp+0x20],rax
   140009e44:	call   QWORD PTR [rip+0x3972e]        # 0x140043578
   140009e4a:	mov    esi,eax
   140009e4c:	call   QWORD PTR [rip+0x39696]        # 0x1400434e8
   140009e52:	test   rdi,rdi
   140009e55:	je     0x140009e60
   140009e57:	mov    rcx,rdi
   140009e5a:	call   QWORD PTR [rip+0x39728]        # 0x140043588
   140009e60:	test   esi,esi
   140009e62:	je     0x140009d8c
   140009e68:	lea    rdx,[rbx-0x18]
   140009e6c:	or     eax,0xffffffff
   140009e6f:	lock xadd DWORD PTR [rdx+0x10],eax
   140009e74:	add    eax,0xffffffff
   140009e77:	test   eax,eax
   140009e79:	jg     0x140009e84
   140009e7b:	mov    rcx,QWORD PTR [rdx]
   140009e7e:	mov    rax,QWORD PTR [rcx]
   140009e81:	call   QWORD PTR [rax+0x8]
   140009e84:	bt     DWORD PTR [rsp+0x80],0x1e
   140009e8d:	jb     0x140009e92
   140009e8f:	mov    ebp,r12d
   140009e92:	mov    r12,QWORD PTR [rsp+0x180]
   140009e9a:	mov    rsi,QWORD PTR [rsp+0x1b8]
   140009ea2:	mov    eax,ebp
   140009ea4:	mov    rbp,QWORD PTR [rsp+0x1b0]
   140009eac:	add    rsp,0x188
   140009eb3:	pop    rdi
   140009eb4:	pop    rbx
   140009eb5:	ret    
   140009eb6:	int3   
   140009eb7:	int3   
   140009eb8:	int3   
   140009eb9:	int3   
   140009eba:	int3   
   140009ebb:	int3   
   140009ebc:	int3   
   140009ebd:	int3   
   140009ebe:	int3   
   140009ebf:	int3   
   140009ec0:	mov    DWORD PTR [rsp+0x10],edx
   140009ec4:	push   rbx
   140009ec5:	push   rdi
   140009ec6:	sub    rsp,0x78
   140009eca:	mov    rax,QWORD PTR [rip+0x414ef]        # 0x14004b3c0
   140009ed1:	mov    rdi,QWORD PTR [rcx+0x13a0]
   140009ed8:	lea    rdx,[rsp+0x40]
   140009edd:	mov    rcx,QWORD PTR [rdi-0x18]
   140009ee1:	mov    QWORD PTR [rdx],rax
   140009ee4:	mov    rax,QWORD PTR [rip+0x414dd]        # 0x14004b3c8
   140009eeb:	mov    QWORD PTR [rdx+0x8],rax
   140009eef:	mov    rax,QWORD PTR [rcx]
   140009ef2:	call   QWORD PTR [rax+0x20]
   140009ef5:	cmp    DWORD PTR [rdi-0x8],0x0
   140009ef9:	mov    rcx,rax
   140009efc:	jl     0x140009f0f
   140009efe:	cmp    rax,QWORD PTR [rdi-0x18]
   140009f02:	jne    0x140009f0f
   140009f04:	lea    rbx,[rdi-0x18]
   140009f08:	lock add DWORD PTR [rdi-0x8],0x1
   140009f0d:	jmp    0x140009f4c
   140009f0f:	mov    rax,QWORD PTR [rax]
   140009f12:	mov    edx,DWORD PTR [rdi-0x10]
   140009f15:	mov    r8d,0x2
   140009f1b:	call   QWORD PTR [rax]
   140009f1d:	test   rax,rax
   140009f20:	mov    rbx,rax
   140009f23:	jne    0x140009f2b
   140009f25:	call   0x140004480
   140009f2a:	int3   
   140009f2b:	mov    eax,DWORD PTR [rdi-0x10]
   140009f2e:	lea    rcx,[rbx+0x18]
   140009f32:	mov    r8,rdi
   140009f35:	mov    DWORD PTR [rbx+0x8],eax
   140009f38:	mov    eax,DWORD PTR [rdi-0x10]
   140009f3b:	add    eax,0x1
   140009f3e:	movsxd rdx,eax
   140009f41:	add    rdx,rdx
   140009f44:	mov    r9,rdx
   140009f47:	call   0x140029bf0
   140009f4c:	add    rbx,0x18
   140009f50:	mov    QWORD PTR [rsp+0x70],rsi
   140009f55:	lea    rdi,[rip+0x4094c]        # 0x14004a8a8
   140009f5c:	mov    rsi,rbx
   140009f5f:	mov    ecx,0x1
   140009f64:	mov    QWORD PTR [rsp+0xa0],rbx
   140009f6c:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140009f6f:	jne    0x140009f9d
   140009f71:	lea    rdx,[rbx-0x18]
   140009f75:	or     eax,0xffffffff
   140009f78:	lock xadd DWORD PTR [rdx+0x10],eax
   140009f7d:	add    eax,0xffffffff
   140009f80:	test   eax,eax
   140009f82:	jg     0x140009f8d
   140009f84:	mov    rcx,QWORD PTR [rdx]
   140009f87:	mov    rax,QWORD PTR [rcx]
   140009f8a:	call   QWORD PTR [rax+0x8]
   140009f8d:	mov    rsi,QWORD PTR [rsp+0x70]
   140009f92:	xor    edi,edi
   140009f94:	mov    eax,edi
   140009f96:	add    rsp,0x78
   140009f9a:	pop    rdi
   140009f9b:	pop    rbx
   140009f9c:	ret    
   140009f9d:	xor    edi,edi
   140009f9f:	xor    r9d,r9d
   140009fa2:	mov    edx,0xc0000000
   140009fa7:	mov    QWORD PTR [rsp+0x30],rdi
   140009fac:	lea    r8d,[rdi+0x3]
   140009fb0:	mov    rcx,rbx
   140009fb3:	mov    DWORD PTR [rsp+0x28],edi
   140009fb7:	mov    DWORD PTR [rsp+0x20],0x3
   140009fbf:	call   QWORD PTR [rip+0x395bb]        # 0x140043580
   140009fc5:	cmp    rax,0xffffffffffffffff
   140009fc9:	mov    rsi,rax
   140009fcc:	jne    0x140009ffc
   140009fce:	lea    rdx,[rbx-0x18]
   140009fd2:	or     eax,0xffffffff
   140009fd5:	lock xadd DWORD PTR [rdx+0x10],eax
   140009fda:	add    eax,0xffffffff
   140009fdd:	test   eax,eax
   140009fdf:	jg     0x14000a0ba
   140009fe5:	mov    rcx,QWORD PTR [rdx]
   140009fe8:	mov    rax,QWORD PTR [rcx]
   140009feb:	call   QWORD PTR [rax+0x8]
   140009fee:	mov    rsi,QWORD PTR [rsp+0x70]
   140009ff3:	mov    eax,edi
   140009ff5:	add    rsp,0x78
   140009ff9:	pop    rdi
   140009ffa:	pop    rbx
   140009ffb:	ret    
   140009ffc:	lea    rdx,[rsp+0x50]
   14000a001:	lea    rcx,[rsp+0x40]
   14000a006:	mov    QWORD PTR [rsp+0x38],rdi
   14000a00b:	mov    rax,QWORD PTR [rcx]
   14000a00e:	lea    r8,[rsp+0x50]
   14000a013:	mov    r9d,0x18
   14000a019:	mov    QWORD PTR [rdx],rax
   14000a01c:	mov    rax,QWORD PTR [rcx+0x8]
   14000a020:	mov    rcx,rsi
   14000a023:	mov    QWORD PTR [rdx+0x8],rax
   14000a027:	lea    rax,[rsp+0x90]
   14000a02f:	mov    edx,0x2f0003
   14000a034:	mov    QWORD PTR [rsp+0x30],rax
   14000a039:	lea    rax,[rsp+0x98]
   14000a041:	mov    DWORD PTR [rsp+0x28],0x4
   14000a049:	mov    QWORD PTR [rsp+0xa8],rbp
   14000a051:	mov    DWORD PTR [rsp+0x64],0x2
   14000a059:	mov    DWORD PTR [rsp+0x60],0x1
   14000a061:	mov    QWORD PTR [rsp+0x20],rax
   14000a066:	mov    DWORD PTR [rsp+0x90],edi
   14000a06d:	call   QWORD PTR [rip+0x39505]        # 0x140043578
   14000a073:	mov    ebp,eax
   14000a075:	call   QWORD PTR [rip+0x3946d]        # 0x1400434e8
   14000a07b:	test   rsi,rsi
   14000a07e:	je     0x14000a089
   14000a080:	mov    rcx,rsi
   14000a083:	call   QWORD PTR [rip+0x394ff]        # 0x140043588
   14000a089:	test   ebp,ebp
   14000a08b:	mov    rbp,QWORD PTR [rsp+0xa8]
   14000a093:	je     0x140009fce
   14000a099:	lea    rdx,[rbx-0x18]
   14000a09d:	or     eax,0xffffffff
   14000a0a0:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a0a5:	add    eax,0xffffffff
   14000a0a8:	test   eax,eax
   14000a0aa:	jg     0x14000a0b5
   14000a0ac:	mov    rcx,QWORD PTR [rdx]
   14000a0af:	mov    rax,QWORD PTR [rcx]
   14000a0b2:	call   QWORD PTR [rax+0x8]
   14000a0b5:	mov    edi,0x1
   14000a0ba:	mov    eax,edi
   14000a0bc:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a0c1:	add    rsp,0x78
   14000a0c5:	pop    rdi
   14000a0c6:	pop    rbx
   14000a0c7:	ret    
   14000a0c8:	int3   
   14000a0c9:	int3   
   14000a0ca:	int3   
   14000a0cb:	int3   
   14000a0cc:	int3   
   14000a0cd:	int3   
   14000a0ce:	int3   
   14000a0cf:	int3   
   14000a0d0:	rex push rbx
   14000a0d2:	push   rdi
   14000a0d3:	push   r12
   14000a0d5:	sub    rsp,0x190
   14000a0dc:	mov    r12,rcx
   14000a0df:	lea    rcx,[rsp+0x70]
   14000a0e4:	xor    edx,edx
   14000a0e6:	mov    r8d,0x110
   14000a0ec:	call   0x14002ac20
   14000a0f1:	mov    rax,QWORD PTR [rip+0x412b8]        # 0x14004b3b0
   14000a0f8:	mov    rdi,QWORD PTR [r12+0x13a8]
   14000a100:	mov    rcx,QWORD PTR [rdi-0x18]
   14000a104:	lea    rdx,[rsp+0x60]
   14000a109:	mov    QWORD PTR [rdx],rax
   14000a10c:	mov    rax,QWORD PTR [rip+0x412a5]        # 0x14004b3b8
   14000a113:	mov    QWORD PTR [rdx+0x8],rax
   14000a117:	mov    rax,QWORD PTR [rcx]
   14000a11a:	call   QWORD PTR [rax+0x20]
   14000a11d:	cmp    DWORD PTR [rdi-0x8],0x0
   14000a121:	mov    rcx,rax
   14000a124:	jl     0x14000a137
   14000a126:	cmp    rax,QWORD PTR [rdi-0x18]
   14000a12a:	jne    0x14000a137
   14000a12c:	lea    rbx,[rdi-0x18]
   14000a130:	lock add DWORD PTR [rdi-0x8],0x1
   14000a135:	jmp    0x14000a174
   14000a137:	mov    rax,QWORD PTR [rax]
   14000a13a:	mov    edx,DWORD PTR [rdi-0x10]
   14000a13d:	mov    r8d,0x2
   14000a143:	call   QWORD PTR [rax]
   14000a145:	test   rax,rax
   14000a148:	mov    rbx,rax
   14000a14b:	jne    0x14000a153
   14000a14d:	call   0x140004480
   14000a152:	int3   
   14000a153:	mov    eax,DWORD PTR [rdi-0x10]
   14000a156:	lea    rcx,[rbx+0x18]
   14000a15a:	mov    r8,rdi
   14000a15d:	mov    DWORD PTR [rbx+0x8],eax
   14000a160:	mov    eax,DWORD PTR [rdi-0x10]
   14000a163:	add    eax,0x1
   14000a166:	movsxd rdx,eax
   14000a169:	add    rdx,rdx
   14000a16c:	mov    r9,rdx
   14000a16f:	call   0x140029bf0
   14000a174:	mov    QWORD PTR [rsp+0x1c0],rbp
   14000a17c:	add    rbx,0x18
   14000a180:	mov    QWORD PTR [rsp+0x188],rsi
   14000a188:	mov    ebp,0x1
   14000a18d:	lea    rdi,[rip+0x40714]        # 0x14004a8a8
   14000a194:	mov    rsi,rbx
   14000a197:	mov    rcx,rbp
   14000a19a:	mov    QWORD PTR [rsp+0x180],r13
   14000a1a2:	xor    r13d,r13d
   14000a1a5:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000a1a8:	mov    QWORD PTR [rsp+0x1b8],rbx
   14000a1b0:	jne    0x14000a1d7
   14000a1b2:	lea    rdx,[rbx-0x18]
   14000a1b6:	or     eax,0xffffffff
   14000a1b9:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a1be:	add    eax,0xffffffff
   14000a1c1:	test   eax,eax
   14000a1c3:	jg     0x14000a2b4
   14000a1c9:	mov    rcx,QWORD PTR [rdx]
   14000a1cc:	mov    rax,QWORD PTR [rcx]
   14000a1cf:	call   QWORD PTR [rax+0x8]
   14000a1d2:	jmp    0x14000a2b4
   14000a1d7:	xor    r9d,r9d
   14000a1da:	mov    QWORD PTR [rsp+0x30],r13
   14000a1df:	mov    edx,0xc0000000
   14000a1e4:	lea    r8d,[r9+0x3]
   14000a1e8:	mov    rcx,rbx
   14000a1eb:	mov    DWORD PTR [rsp+0x28],r13d
   14000a1f0:	mov    DWORD PTR [rsp+0x20],0x3
   14000a1f8:	call   QWORD PTR [rip+0x39382]        # 0x140043580
   14000a1fe:	cmp    rax,0xffffffffffffffff
   14000a202:	mov    rdi,rax
   14000a205:	je     0x14000a1b2
   14000a207:	lea    rdx,[rsp+0x40]
   14000a20c:	lea    rcx,[rsp+0x60]
   14000a211:	mov    QWORD PTR [rsp+0x38],r13
   14000a216:	mov    rax,QWORD PTR [rcx]
   14000a219:	lea    r8,[rsp+0x40]
   14000a21e:	mov    r9d,0x18
   14000a224:	mov    QWORD PTR [rdx],rax
   14000a227:	mov    rax,QWORD PTR [rcx+0x8]
   14000a22b:	mov    rcx,rdi
   14000a22e:	mov    QWORD PTR [rdx+0x8],rax
   14000a232:	lea    rax,[rsp+0x1b0]
   14000a23a:	mov    edx,0x2f0003
   14000a23f:	mov    QWORD PTR [rsp+0x30],rax
   14000a244:	lea    rax,[rsp+0x70]
   14000a249:	mov    DWORD PTR [rsp+0x28],0x110
   14000a251:	mov    DWORD PTR [rsp+0x54],ebp
   14000a255:	mov    DWORD PTR [rsp+0x50],0x19
   14000a25d:	mov    DWORD PTR [rsp+0x1b0],r13d
   14000a265:	mov    QWORD PTR [rsp+0x20],rax
   14000a26a:	call   QWORD PTR [rip+0x39308]        # 0x140043578
   14000a270:	mov    esi,eax
   14000a272:	call   QWORD PTR [rip+0x39270]        # 0x1400434e8
   14000a278:	test   rdi,rdi
   14000a27b:	je     0x14000a286
   14000a27d:	mov    rcx,rdi
   14000a280:	call   QWORD PTR [rip+0x39302]        # 0x140043588
   14000a286:	test   esi,esi
   14000a288:	je     0x14000a1b2
   14000a28e:	lea    rdx,[rbx-0x18]
   14000a292:	or     eax,0xffffffff
   14000a295:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a29a:	add    eax,0xffffffff
   14000a29d:	test   eax,eax
   14000a29f:	jg     0x14000a2aa
   14000a2a1:	mov    rcx,QWORD PTR [rdx]
   14000a2a4:	mov    rax,QWORD PTR [rcx]
   14000a2a7:	call   QWORD PTR [rax+0x8]
   14000a2aa:	test   BYTE PTR [rsp+0x12c],0x20
   14000a2b2:	jne    0x14000a2b7
   14000a2b4:	mov    ebp,r13d
   14000a2b7:	mov    r13,QWORD PTR [rsp+0x180]
   14000a2bf:	mov    rsi,QWORD PTR [rsp+0x188]
   14000a2c7:	mov    DWORD PTR [r12+0x18],ebp
   14000a2cc:	mov    eax,ebp
   14000a2ce:	mov    rbp,QWORD PTR [rsp+0x1c0]
   14000a2d6:	add    rsp,0x190
   14000a2dd:	pop    r12
   14000a2df:	pop    rdi
   14000a2e0:	pop    rbx
   14000a2e1:	ret    
   14000a2e2:	int3   
   14000a2e3:	int3   
   14000a2e4:	int3   
   14000a2e5:	int3   
   14000a2e6:	int3   
   14000a2e7:	int3   
   14000a2e8:	int3   
   14000a2e9:	int3   
   14000a2ea:	int3   
   14000a2eb:	int3   
   14000a2ec:	int3   
   14000a2ed:	int3   
   14000a2ee:	int3   
   14000a2ef:	int3   
   14000a2f0:	rex push rbx
   14000a2f2:	push   rdi
   14000a2f3:	sub    rsp,0x188
   14000a2fa:	mov    rdi,QWORD PTR [rcx+0x13a8]
   14000a301:	lea    rcx,[rsp+0x70]
   14000a306:	xor    edx,edx
   14000a308:	mov    r8d,0x110
   14000a30e:	call   0x14002ac20
   14000a313:	mov    rax,QWORD PTR [rip+0x41096]        # 0x14004b3b0
   14000a31a:	mov    rcx,QWORD PTR [rdi-0x18]
   14000a31e:	lea    rdx,[rsp+0x60]
   14000a323:	mov    QWORD PTR [rdx],rax
   14000a326:	mov    rax,QWORD PTR [rip+0x4108b]        # 0x14004b3b8
   14000a32d:	mov    QWORD PTR [rdx+0x8],rax
   14000a331:	mov    rax,QWORD PTR [rcx]
   14000a334:	call   QWORD PTR [rax+0x20]
   14000a337:	cmp    DWORD PTR [rdi-0x8],0x0
   14000a33b:	mov    rcx,rax
   14000a33e:	jl     0x14000a351
   14000a340:	cmp    rax,QWORD PTR [rdi-0x18]
   14000a344:	jne    0x14000a351
   14000a346:	lea    rbx,[rdi-0x18]
   14000a34a:	lock add DWORD PTR [rdi-0x8],0x1
   14000a34f:	jmp    0x14000a38e
   14000a351:	mov    rax,QWORD PTR [rax]
   14000a354:	mov    edx,DWORD PTR [rdi-0x10]
   14000a357:	mov    r8d,0x2
   14000a35d:	call   QWORD PTR [rax]
   14000a35f:	test   rax,rax
   14000a362:	mov    rbx,rax
   14000a365:	jne    0x14000a36d
   14000a367:	call   0x140004480
   14000a36c:	int3   
   14000a36d:	mov    eax,DWORD PTR [rdi-0x10]
   14000a370:	lea    rcx,[rbx+0x18]
   14000a374:	mov    r8,rdi
   14000a377:	mov    DWORD PTR [rbx+0x8],eax
   14000a37a:	mov    eax,DWORD PTR [rdi-0x10]
   14000a37d:	add    eax,0x1
   14000a380:	movsxd rdx,eax
   14000a383:	add    rdx,rdx
   14000a386:	mov    r9,rdx
   14000a389:	call   0x140029bf0
   14000a38e:	mov    QWORD PTR [rsp+0x1b0],rbp
   14000a396:	add    rbx,0x18
   14000a39a:	mov    QWORD PTR [rsp+0x1b8],rsi
   14000a3a2:	mov    ebp,0x1
   14000a3a7:	lea    rdi,[rip+0x404fa]        # 0x14004a8a8
   14000a3ae:	mov    rsi,rbx
   14000a3b1:	mov    rcx,rbp
   14000a3b4:	mov    QWORD PTR [rsp+0x180],r12
   14000a3bc:	xor    r12d,r12d
   14000a3bf:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000a3c2:	mov    QWORD PTR [rsp+0x1a8],rbx
   14000a3ca:	jne    0x14000a3f1
   14000a3cc:	lea    rdx,[rbx-0x18]
   14000a3d0:	or     eax,0xffffffff
   14000a3d3:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a3d8:	add    eax,0xffffffff
   14000a3db:	test   eax,eax
   14000a3dd:	jg     0x14000a4cf
   14000a3e3:	mov    rcx,QWORD PTR [rdx]
   14000a3e6:	mov    rax,QWORD PTR [rcx]
   14000a3e9:	call   QWORD PTR [rax+0x8]
   14000a3ec:	jmp    0x14000a4cf
   14000a3f1:	xor    r9d,r9d
   14000a3f4:	mov    QWORD PTR [rsp+0x30],r12
   14000a3f9:	mov    edx,0xc0000000
   14000a3fe:	lea    r8d,[r9+0x3]
   14000a402:	mov    rcx,rbx
   14000a405:	mov    DWORD PTR [rsp+0x28],r12d
   14000a40a:	mov    DWORD PTR [rsp+0x20],0x3
   14000a412:	call   QWORD PTR [rip+0x39168]        # 0x140043580
   14000a418:	cmp    rax,0xffffffffffffffff
   14000a41c:	mov    rdi,rax
   14000a41f:	je     0x14000a3cc
   14000a421:	lea    rdx,[rsp+0x40]
   14000a426:	lea    rcx,[rsp+0x60]
   14000a42b:	mov    QWORD PTR [rsp+0x38],r12
   14000a430:	mov    rax,QWORD PTR [rcx]
   14000a433:	lea    r8,[rsp+0x40]
   14000a438:	mov    r9d,0x18
   14000a43e:	mov    QWORD PTR [rdx],rax
   14000a441:	mov    rax,QWORD PTR [rcx+0x8]
   14000a445:	mov    rcx,rdi
   14000a448:	mov    QWORD PTR [rdx+0x8],rax
   14000a44c:	lea    rax,[rsp+0x1a0]
   14000a454:	mov    edx,0x2f0003
   14000a459:	mov    QWORD PTR [rsp+0x30],rax
   14000a45e:	lea    rax,[rsp+0x70]
   14000a463:	mov    DWORD PTR [rsp+0x28],0x110
   14000a46b:	mov    DWORD PTR [rsp+0x54],ebp
   14000a46f:	mov    DWORD PTR [rsp+0x50],0x19
   14000a477:	mov    DWORD PTR [rsp+0x1a0],r12d
   14000a47f:	mov    QWORD PTR [rsp+0x20],rax
   14000a484:	call   QWORD PTR [rip+0x390ee]        # 0x140043578
   14000a48a:	mov    esi,eax
   14000a48c:	call   QWORD PTR [rip+0x39056]        # 0x1400434e8
   14000a492:	test   rdi,rdi
   14000a495:	je     0x14000a4a0
   14000a497:	mov    rcx,rdi
   14000a49a:	call   QWORD PTR [rip+0x390e8]        # 0x140043588
   14000a4a0:	test   esi,esi
   14000a4a2:	je     0x14000a3cc
   14000a4a8:	lea    rdx,[rbx-0x18]
   14000a4ac:	or     eax,0xffffffff
   14000a4af:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a4b4:	add    eax,0xffffffff
   14000a4b7:	test   eax,eax
   14000a4b9:	jg     0x14000a4c4
   14000a4bb:	mov    rcx,QWORD PTR [rdx]
   14000a4be:	mov    rax,QWORD PTR [rcx]
   14000a4c1:	call   QWORD PTR [rax+0x8]
   14000a4c4:	bt     DWORD PTR [rsp+0x11c],0x19
   14000a4cd:	jb     0x14000a4d2
   14000a4cf:	mov    ebp,r12d
   14000a4d2:	mov    r12,QWORD PTR [rsp+0x180]
   14000a4da:	mov    rsi,QWORD PTR [rsp+0x1b8]
   14000a4e2:	mov    eax,ebp
   14000a4e4:	mov    rbp,QWORD PTR [rsp+0x1b0]
   14000a4ec:	add    rsp,0x188
   14000a4f3:	pop    rdi
   14000a4f4:	pop    rbx
   14000a4f5:	ret    
   14000a4f6:	int3   
   14000a4f7:	int3   
   14000a4f8:	int3   
   14000a4f9:	int3   
   14000a4fa:	int3   
   14000a4fb:	int3   
   14000a4fc:	int3   
   14000a4fd:	int3   
   14000a4fe:	int3   
   14000a4ff:	int3   
   14000a500:	rex push rbx
   14000a502:	push   rdi
   14000a503:	push   r13
   14000a505:	sub    rsp,0xf0
   14000a50c:	mov    rax,QWORD PTR [rip+0x40e0d]        # 0x14004b320
   14000a513:	mov    r13,rcx
   14000a516:	lea    rcx,[rsp+0x50]
   14000a51b:	mov    rdi,QWORD PTR [r13+0x13a8]
   14000a522:	mov    QWORD PTR [rcx],rax
   14000a525:	mov    rax,QWORD PTR [rip+0x40dfc]        # 0x14004b328
   14000a52c:	mov    QWORD PTR [rcx+0x8],rax
   14000a530:	mov    rcx,QWORD PTR [rdi-0x18]
   14000a534:	mov    rax,QWORD PTR [rcx]
   14000a537:	call   QWORD PTR [rax+0x20]
   14000a53a:	cmp    DWORD PTR [rdi-0x8],0x0
   14000a53e:	mov    rcx,rax
   14000a541:	jl     0x14000a554
   14000a543:	cmp    rax,QWORD PTR [rdi-0x18]
   14000a547:	jne    0x14000a554
   14000a549:	lea    rbx,[rdi-0x18]
   14000a54d:	lock add DWORD PTR [rdi-0x8],0x1
   14000a552:	jmp    0x14000a591
   14000a554:	mov    rax,QWORD PTR [rax]
   14000a557:	mov    edx,DWORD PTR [rdi-0x10]
   14000a55a:	mov    r8d,0x2
   14000a560:	call   QWORD PTR [rax]
   14000a562:	test   rax,rax
   14000a565:	mov    rbx,rax
   14000a568:	jne    0x14000a570
   14000a56a:	call   0x140004480
   14000a56f:	int3   
   14000a570:	mov    eax,DWORD PTR [rdi-0x10]
   14000a573:	lea    rcx,[rbx+0x18]
   14000a577:	mov    r8,rdi
   14000a57a:	mov    DWORD PTR [rbx+0x8],eax
   14000a57d:	mov    eax,DWORD PTR [rdi-0x10]
   14000a580:	add    eax,0x1
   14000a583:	movsxd rdx,eax
   14000a586:	add    rdx,rdx
   14000a589:	mov    r9,rdx
   14000a58c:	call   0x140029bf0
   14000a591:	mov    QWORD PTR [rsp+0xe8],rbp
   14000a599:	mov    QWORD PTR [rsp+0xe0],rsi
   14000a5a1:	mov    QWORD PTR [rsp+0xd8],r12
   14000a5a9:	add    rbx,0x18
   14000a5ad:	mov    r12d,0x1
   14000a5b3:	mov    QWORD PTR [rsp+0xd0],r14
   14000a5bb:	lea    rdi,[rip+0x402e6]        # 0x14004a8a8
   14000a5c2:	mov    rcx,r12
   14000a5c5:	mov    rsi,rbx
   14000a5c8:	mov    QWORD PTR [rsp+0xc8],r15
   14000a5d0:	xor    r15d,r15d
   14000a5d3:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000a5d6:	mov    QWORD PTR [rsp+0xb8],rbx
   14000a5de:	lea    r14d,[r12+0x3]
   14000a5e3:	jne    0x14000a60b
   14000a5e5:	or     ebp,0xffffffff
   14000a5e8:	lea    rdx,[rbx-0x18]
   14000a5ec:	mov    eax,ebp
   14000a5ee:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a5f3:	add    eax,ebp
   14000a5f5:	test   eax,eax
   14000a5f7:	jg     0x14000a71a
   14000a5fd:	mov    rcx,QWORD PTR [rdx]
   14000a600:	mov    rax,QWORD PTR [rcx]
   14000a603:	call   QWORD PTR [rax+0x8]
   14000a606:	jmp    0x14000a71a
   14000a60b:	xor    r9d,r9d
   14000a60e:	mov    QWORD PTR [rsp+0x30],r15
   14000a613:	mov    edx,0xc0000000
   14000a618:	lea    r8d,[r9+0x3]
   14000a61c:	mov    rcx,rbx
   14000a61f:	mov    DWORD PTR [rsp+0x28],r15d
   14000a624:	mov    DWORD PTR [rsp+0x20],0x3
   14000a62c:	call   QWORD PTR [rip+0x38f4e]        # 0x140043580
   14000a632:	cmp    rax,0xffffffffffffffff
   14000a636:	mov    rdi,rax
   14000a639:	jne    0x14000a660
   14000a63b:	or     ebp,eax
   14000a63d:	lea    rdx,[rbx-0x18]
   14000a641:	mov    eax,ebp
   14000a643:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a648:	add    eax,edi
   14000a64a:	test   eax,eax
   14000a64c:	jg     0x14000a71a
   14000a652:	mov    rcx,QWORD PTR [rdx]
   14000a655:	mov    rax,QWORD PTR [rcx]
   14000a658:	call   QWORD PTR [rax+0x8]
   14000a65b:	jmp    0x14000a71a
   14000a660:	lea    rdx,[rsp+0x60]
   14000a665:	lea    rcx,[rsp+0x50]
   14000a66a:	mov    QWORD PTR [rsp+0x38],r15
   14000a66f:	mov    rax,QWORD PTR [rcx]
   14000a672:	lea    r8,[rsp+0x60]
   14000a677:	mov    r9d,0x18
   14000a67d:	mov    QWORD PTR [rdx],rax
   14000a680:	mov    rax,QWORD PTR [rcx+0x8]
   14000a684:	mov    rcx,rdi
   14000a687:	mov    QWORD PTR [rdx+0x8],rax
   14000a68b:	lea    rax,[rsp+0x120]
   14000a693:	mov    edx,0x2f0003
   14000a698:	mov    QWORD PTR [rsp+0x30],rax
   14000a69d:	lea    rax,[rsp+0x40]
   14000a6a2:	mov    DWORD PTR [rsp+0x28],r14d
   14000a6a7:	mov    DWORD PTR [rsp+0x74],r12d
   14000a6ac:	mov    DWORD PTR [rsp+0x70],r12d
   14000a6b1:	mov    DWORD PTR [rsp+0x120],r15d
   14000a6b9:	mov    QWORD PTR [rsp+0x20],rax
   14000a6be:	call   QWORD PTR [rip+0x38eb4]        # 0x140043578
   14000a6c4:	mov    esi,eax
   14000a6c6:	call   QWORD PTR [rip+0x38e1c]        # 0x1400434e8
   14000a6cc:	test   rdi,rdi
   14000a6cf:	je     0x14000a6da
   14000a6d1:	mov    rcx,rdi
   14000a6d4:	call   QWORD PTR [rip+0x38eae]        # 0x140043588
   14000a6da:	test   esi,esi
   14000a6dc:	jne    0x14000a6fd
   14000a6de:	or     ebp,0xffffffff
   14000a6e1:	lea    rdx,[rbx-0x18]
   14000a6e5:	mov    eax,ebp
   14000a6e7:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a6ec:	add    eax,ebp
   14000a6ee:	test   eax,eax
   14000a6f0:	jg     0x14000a71a
   14000a6f2:	mov    rcx,QWORD PTR [rdx]
   14000a6f5:	mov    rax,QWORD PTR [rcx]
   14000a6f8:	call   QWORD PTR [rax+0x8]
   14000a6fb:	jmp    0x14000a71a
   14000a6fd:	or     ebp,0xffffffff
   14000a700:	lea    rdx,[rbx-0x18]
   14000a704:	mov    eax,ebp
   14000a706:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a70b:	add    eax,ebp
   14000a70d:	test   eax,eax
   14000a70f:	jg     0x14000a71a
   14000a711:	mov    rcx,QWORD PTR [rdx]
   14000a714:	mov    rax,QWORD PTR [rcx]
   14000a717:	call   QWORD PTR [rax+0x8]
   14000a71a:	mov    rax,QWORD PTR [rip+0x40bff]        # 0x14004b320
   14000a721:	mov    rdi,QWORD PTR [r13+0x13a8]
   14000a728:	lea    rcx,[rsp+0x50]
   14000a72d:	mov    QWORD PTR [rcx],rax
   14000a730:	mov    rax,QWORD PTR [rip+0x40bf1]        # 0x14004b328
   14000a737:	mov    QWORD PTR [rcx+0x8],rax
   14000a73b:	mov    rcx,QWORD PTR [rdi-0x18]
   14000a73f:	mov    rax,QWORD PTR [rcx]
   14000a742:	call   QWORD PTR [rax+0x20]
   14000a745:	cmp    DWORD PTR [rdi-0x8],r15d
   14000a749:	mov    rcx,rax
   14000a74c:	jl     0x14000a75f
   14000a74e:	cmp    rax,QWORD PTR [rdi-0x18]
   14000a752:	jne    0x14000a75f
   14000a754:	lea    rbx,[rdi-0x18]
   14000a758:	lock add DWORD PTR [rdi-0x8],r12d
   14000a75d:	jmp    0x14000a79c
   14000a75f:	mov    rax,QWORD PTR [rax]
   14000a762:	mov    edx,DWORD PTR [rdi-0x10]
   14000a765:	mov    r8d,0x2
   14000a76b:	call   QWORD PTR [rax]
   14000a76d:	test   rax,rax
   14000a770:	mov    rbx,rax
   14000a773:	jne    0x14000a77b
   14000a775:	call   0x140004480
   14000a77a:	int3   
   14000a77b:	mov    eax,DWORD PTR [rdi-0x10]
   14000a77e:	lea    rcx,[rbx+0x18]
   14000a782:	mov    r8,rdi
   14000a785:	mov    DWORD PTR [rbx+0x8],eax
   14000a788:	mov    eax,DWORD PTR [rdi-0x10]
   14000a78b:	add    eax,r12d
   14000a78e:	movsxd rdx,eax
   14000a791:	add    rdx,rdx
   14000a794:	mov    r9,rdx
   14000a797:	call   0x140029bf0
   14000a79c:	add    rbx,0x18
   14000a7a0:	lea    rdi,[rip+0x40101]        # 0x14004a8a8
   14000a7a7:	mov    rcx,r12
   14000a7aa:	mov    rsi,rbx
   14000a7ad:	mov    QWORD PTR [rsp+0xb0],rbx
   14000a7b5:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000a7b8:	jne    0x14000a7de
   14000a7ba:	lea    rdx,[rbx-0x18]
   14000a7be:	mov    eax,ebp
   14000a7c0:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a7c5:	add    eax,0xffffffff
   14000a7c8:	test   eax,eax
   14000a7ca:	jg     0x14000a901
   14000a7d0:	mov    rcx,QWORD PTR [rdx]
   14000a7d3:	mov    rax,QWORD PTR [rcx]
   14000a7d6:	call   QWORD PTR [rax+0x8]
   14000a7d9:	jmp    0x14000a901
   14000a7de:	xor    r9d,r9d
   14000a7e1:	mov    QWORD PTR [rsp+0x30],r15
   14000a7e6:	mov    edx,0xc0000000
   14000a7eb:	lea    r8d,[r9+0x3]
   14000a7ef:	mov    rcx,rbx
   14000a7f2:	mov    DWORD PTR [rsp+0x28],r15d
   14000a7f7:	mov    DWORD PTR [rsp+0x20],0x3
   14000a7ff:	call   QWORD PTR [rip+0x38d7b]        # 0x140043580
   14000a805:	cmp    rax,0xffffffffffffffff
   14000a809:	mov    rdi,rax
   14000a80c:	jne    0x14000a831
   14000a80e:	lea    rdx,[rbx-0x18]
   14000a812:	mov    eax,ebp
   14000a814:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a819:	add    eax,edi
   14000a81b:	test   eax,eax
   14000a81d:	jg     0x14000a901
   14000a823:	mov    rcx,QWORD PTR [rdx]
   14000a826:	mov    rax,QWORD PTR [rcx]
   14000a829:	call   QWORD PTR [rax+0x8]
   14000a82c:	jmp    0x14000a901
   14000a831:	lea    rdx,[rsp+0x90]
   14000a839:	lea    rcx,[rsp+0x50]
   14000a83e:	mov    QWORD PTR [rsp+0x38],r15
   14000a843:	mov    rax,QWORD PTR [rcx]
   14000a846:	lea    r8,[rsp+0x90]
   14000a84e:	mov    r9d,0x18
   14000a854:	mov    QWORD PTR [rdx],rax
   14000a857:	mov    rax,QWORD PTR [rcx+0x8]
   14000a85b:	mov    rcx,rdi
   14000a85e:	mov    QWORD PTR [rdx+0x8],rax
   14000a862:	lea    rax,[rsp+0x118]
   14000a86a:	mov    edx,0x2f0003
   14000a86f:	mov    QWORD PTR [rsp+0x30],rax
   14000a874:	lea    rax,[rsp+0x110]
   14000a87c:	mov    DWORD PTR [rsp+0x28],r14d
   14000a881:	mov    DWORD PTR [rsp+0xa4],r12d
   14000a889:	mov    DWORD PTR [rsp+0xa0],0x5
   14000a894:	mov    DWORD PTR [rsp+0x118],r15d
   14000a89c:	mov    QWORD PTR [rsp+0x20],rax
   14000a8a1:	call   QWORD PTR [rip+0x38cd1]        # 0x140043578
   14000a8a7:	mov    esi,eax
   14000a8a9:	call   QWORD PTR [rip+0x38c39]        # 0x1400434e8
   14000a8af:	test   rdi,rdi
   14000a8b2:	je     0x14000a8bd
   14000a8b4:	mov    rcx,rdi
   14000a8b7:	call   QWORD PTR [rip+0x38ccb]        # 0x140043588
   14000a8bd:	test   esi,esi
   14000a8bf:	mov    r14d,DWORD PTR [rsp+0x118]
   14000a8c7:	jne    0x14000a8e6
   14000a8c9:	lea    rdx,[rbx-0x18]
   14000a8cd:	mov    eax,ebp
   14000a8cf:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a8d4:	add    eax,0xffffffff
   14000a8d7:	test   eax,eax
   14000a8d9:	jg     0x14000a901
   14000a8db:	mov    rcx,QWORD PTR [rdx]
   14000a8de:	mov    rax,QWORD PTR [rcx]
   14000a8e1:	call   QWORD PTR [rax+0x8]
   14000a8e4:	jmp    0x14000a901
   14000a8e6:	lea    rdx,[rbx-0x18]
   14000a8ea:	mov    eax,ebp
   14000a8ec:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a8f1:	add    eax,0xffffffff
   14000a8f4:	test   eax,eax
   14000a8f6:	jg     0x14000a901
   14000a8f8:	mov    rcx,QWORD PTR [rdx]
   14000a8fb:	mov    rax,QWORD PTR [rcx]
   14000a8fe:	call   QWORD PTR [rax+0x8]
   14000a901:	mov    eax,DWORD PTR [rsp+0x110]
   14000a908:	mov    rdi,QWORD PTR [r13+0x13a8]
   14000a90f:	lea    rcx,[rsp+0x50]
   14000a914:	shr    eax,0x8
   14000a917:	mov    WORD PTR [r13+0x10],ax
   14000a91c:	mov    rax,QWORD PTR [rip+0x409fd]        # 0x14004b320
   14000a923:	mov    QWORD PTR [rcx],rax
   14000a926:	mov    rax,QWORD PTR [rip+0x409fb]        # 0x14004b328
   14000a92d:	mov    QWORD PTR [rcx+0x8],rax
   14000a931:	mov    rcx,QWORD PTR [rdi-0x18]
   14000a935:	mov    rax,QWORD PTR [rcx]
   14000a938:	call   QWORD PTR [rax+0x20]
   14000a93b:	cmp    DWORD PTR [rdi-0x8],r15d
   14000a93f:	mov    rcx,rax
   14000a942:	jl     0x14000a955
   14000a944:	cmp    rax,QWORD PTR [rdi-0x18]
   14000a948:	jne    0x14000a955
   14000a94a:	lea    rbx,[rdi-0x18]
   14000a94e:	lock add DWORD PTR [rdi-0x8],r12d
   14000a953:	jmp    0x14000a992
   14000a955:	mov    rax,QWORD PTR [rax]
   14000a958:	mov    edx,DWORD PTR [rdi-0x10]
   14000a95b:	mov    r8d,0x2
   14000a961:	call   QWORD PTR [rax]
   14000a963:	test   rax,rax
   14000a966:	mov    rbx,rax
   14000a969:	jne    0x14000a971
   14000a96b:	call   0x140004480
   14000a970:	int3   
   14000a971:	mov    eax,DWORD PTR [rdi-0x10]
   14000a974:	lea    rcx,[rbx+0x18]
   14000a978:	mov    r8,rdi
   14000a97b:	mov    DWORD PTR [rbx+0x8],eax
   14000a97e:	mov    eax,DWORD PTR [rdi-0x10]
   14000a981:	add    eax,r12d
   14000a984:	movsxd rdx,eax
   14000a987:	add    rdx,rdx
   14000a98a:	mov    r9,rdx
   14000a98d:	call   0x140029bf0
   14000a992:	add    rbx,0x18
   14000a996:	lea    rdi,[rip+0x3ff0b]        # 0x14004a8a8
   14000a99d:	mov    rcx,r12
   14000a9a0:	mov    rsi,rbx
   14000a9a3:	mov    QWORD PTR [rsp+0xa8],rbx
   14000a9ab:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000a9ae:	jne    0x14000a9d1
   14000a9b0:	lea    rdx,[rbx-0x18]
   14000a9b4:	lock xadd DWORD PTR [rdx+0x10],ebp
   14000a9b9:	add    ebp,0xffffffff
   14000a9bc:	test   ebp,ebp
   14000a9be:	jg     0x14000a9c9
   14000a9c0:	mov    rcx,QWORD PTR [rdx]
   14000a9c3:	mov    rax,QWORD PTR [rcx]
   14000a9c6:	call   QWORD PTR [rax+0x8]
   14000a9c9:	mov    eax,r15d
   14000a9cc:	jmp    0x14000aae5
   14000a9d1:	xor    r9d,r9d
   14000a9d4:	mov    QWORD PTR [rsp+0x30],r15
   14000a9d9:	mov    edx,0xc0000000
   14000a9de:	lea    r8d,[r9+0x3]
   14000a9e2:	mov    rcx,rbx
   14000a9e5:	mov    DWORD PTR [rsp+0x28],r15d
   14000a9ea:	mov    DWORD PTR [rsp+0x20],0x3
   14000a9f2:	call   QWORD PTR [rip+0x38b88]        # 0x140043580
   14000a9f8:	cmp    rax,0xffffffffffffffff
   14000a9fc:	mov    rdi,rax
   14000a9ff:	jne    0x14000aa21
   14000aa01:	lea    rdx,[rbx-0x18]
   14000aa05:	lock xadd DWORD PTR [rdx+0x10],ebp
   14000aa0a:	add    ebp,eax
   14000aa0c:	test   ebp,ebp
   14000aa0e:	jg     0x14000aa19
   14000aa10:	mov    rcx,QWORD PTR [rdx]
   14000aa13:	mov    rax,QWORD PTR [rcx]
   14000aa16:	call   QWORD PTR [rax+0x8]
   14000aa19:	mov    eax,r15d
   14000aa1c:	jmp    0x14000aae5
   14000aa21:	lea    rdx,[rsp+0x78]
   14000aa26:	lea    rcx,[rsp+0x50]
   14000aa2b:	mov    QWORD PTR [rsp+0x38],r15
   14000aa30:	mov    rax,QWORD PTR [rcx]
   14000aa33:	lea    r8,[rsp+0x78]
   14000aa38:	mov    r9d,0x18
   14000aa3e:	mov    QWORD PTR [rdx],rax
   14000aa41:	mov    rax,QWORD PTR [rcx+0x8]
   14000aa45:	mov    rcx,rdi
   14000aa48:	mov    QWORD PTR [rdx+0x8],rax
   14000aa4c:	lea    rax,[rsp+0x128]
   14000aa54:	mov    edx,0x2f0003
   14000aa59:	mov    QWORD PTR [rsp+0x30],rax
   14000aa5e:	lea    rax,[rsp+0x110]
   14000aa66:	mov    DWORD PTR [rsp+0x28],r14d
   14000aa6b:	mov    DWORD PTR [rsp+0x8c],r12d
   14000aa73:	mov    DWORD PTR [rsp+0x88],0x7
   14000aa7e:	mov    DWORD PTR [rsp+0x128],r15d
   14000aa86:	mov    QWORD PTR [rsp+0x20],rax
   14000aa8b:	call   QWORD PTR [rip+0x38ae7]        # 0x140043578
   14000aa91:	mov    esi,eax
   14000aa93:	call   QWORD PTR [rip+0x38a4f]        # 0x1400434e8
   14000aa99:	test   rdi,rdi
   14000aa9c:	je     0x14000aaa7
   14000aa9e:	mov    rcx,rdi
   14000aaa1:	call   QWORD PTR [rip+0x38ae1]        # 0x140043588
   14000aaa7:	test   esi,esi
   14000aaa9:	jne    0x14000aac9
   14000aaab:	lea    rdx,[rbx-0x18]
   14000aaaf:	lock xadd DWORD PTR [rdx+0x10],ebp
   14000aab4:	add    ebp,0xffffffff
   14000aab7:	test   ebp,ebp
   14000aab9:	jg     0x14000aac4
   14000aabb:	mov    rcx,QWORD PTR [rdx]
   14000aabe:	mov    rax,QWORD PTR [rcx]
   14000aac1:	call   QWORD PTR [rax+0x8]
   14000aac4:	mov    eax,r15d
   14000aac7:	jmp    0x14000aae5
   14000aac9:	lea    rdx,[rbx-0x18]
   14000aacd:	lock xadd DWORD PTR [rdx+0x10],ebp
   14000aad2:	add    ebp,0xffffffff
   14000aad5:	test   ebp,ebp
   14000aad7:	jg     0x14000aae2
   14000aad9:	mov    rcx,QWORD PTR [rdx]
   14000aadc:	mov    rax,QWORD PTR [rcx]
   14000aadf:	call   QWORD PTR [rax+0x8]
   14000aae2:	mov    eax,r12d
   14000aae5:	mov    ecx,DWORD PTR [rsp+0x110]
   14000aaec:	shr    ecx,0x8
   14000aaef:	test   eax,eax
   14000aaf1:	mov    WORD PTR [r13+0x12],cx
   14000aaf6:	je     0x14000ab0b
   14000aaf8:	cmp    DWORD PTR [rsp+0x40],r15d
   14000aafd:	je     0x14000ab0b
   14000aaff:	cmp    WORD PTR [r13+0x10],r15w
   14000ab04:	je     0x14000ab0b
   14000ab06:	test   cx,cx
   14000ab09:	jne    0x14000ab0e
   14000ab0b:	mov    r12d,r15d
   14000ab0e:	mov    r14,QWORD PTR [rsp+0xd0]
   14000ab16:	mov    rsi,QWORD PTR [rsp+0xe0]
   14000ab1e:	mov    rbp,QWORD PTR [rsp+0xe8]
   14000ab26:	mov    r15,QWORD PTR [rsp+0xc8]
   14000ab2e:	mov    eax,r12d
   14000ab31:	mov    r12,QWORD PTR [rsp+0xd8]
   14000ab39:	add    rsp,0xf0
   14000ab40:	pop    r13
   14000ab42:	pop    rdi
   14000ab43:	pop    rbx
   14000ab44:	ret    
   14000ab45:	int3   
   14000ab46:	int3   
   14000ab47:	int3   
   14000ab48:	int3   
   14000ab49:	int3   
   14000ab4a:	int3   
   14000ab4b:	int3   
   14000ab4c:	int3   
   14000ab4d:	int3   
   14000ab4e:	int3   
   14000ab4f:	int3   
   14000ab50:	rex push rbx
   14000ab52:	push   r14
   14000ab54:	push   r15
   14000ab56:	sub    rsp,0xa0
   14000ab5d:	mov    rax,QWORD PTR [rip+0x5041c]        # 0x14005af80
   14000ab64:	xor    rax,rsp
   14000ab67:	mov    QWORD PTR [rsp+0x78],rax
   14000ab6c:	test   rdx,rdx
   14000ab6f:	mov    rbx,r8
   14000ab72:	mov    r14,rdx
   14000ab75:	mov    r15,rcx
   14000ab78:	jne    0x14000ab81
   14000ab7a:	xor    eax,eax
   14000ab7c:	jmp    0x14000ae6a
   14000ab81:	test   rbx,rbx
   14000ab84:	je     0x14000ab7a
   14000ab86:	mov    QWORD PTR [rsp+0x98],rsi
   14000ab8e:	mov    QWORD PTR [rsp+0x90],rdi
   14000ab96:	xor    edi,edi
   14000ab98:	mov    QWORD PTR [rsp+0x80],r13
   14000aba0:	xor    r13d,r13d
   14000aba3:	lea    rcx,[rip+0x408a6]        # 0x14004b450
   14000abaa:	lea    r9d,[r13+0x12]
   14000abae:	xor    r8d,r8d
   14000abb1:	xor    edx,edx
   14000abb3:	mov    DWORD PTR [rsp+0x34],edi
   14000abb7:	mov    DWORD PTR [rsp+0x30],edi
   14000abbb:	call   QWORD PTR [rip+0x38a27]        # 0x1400435e8
   14000abc1:	cmp    rax,0xffffffffffffffff
   14000abc5:	mov    rsi,rax
   14000abc8:	jne    0x14000abd1
   14000abca:	xor    eax,eax
   14000abcc:	jmp    0x14000ae52
   14000abd1:	lea    r8,[rsp+0x38]
   14000abd6:	xor    edx,edx
   14000abd8:	mov    rcx,rax
   14000abdb:	mov    DWORD PTR [rsp+0x38],0x20
   14000abe3:	call   QWORD PTR [rip+0x389f7]        # 0x1400435e0
   14000abe9:	test   eax,eax
   14000abeb:	je     0x14000ae47
   14000abf1:	mov    QWORD PTR [rsp+0xd8],rbp
   14000abf9:	mov    QWORD PTR [rsp+0x88],r12
   14000ac01:	data16 xchg ax,ax
   14000ac04:	data16 data16 xchg ax,ax
   14000ac08:	data16 data16 xchg ax,ax
   14000ac0c:	data16 data16 xchg ax,ax
   14000ac10:	lea    rax,[rsp+0x34]
   14000ac15:	lea    rdx,[rsp+0x38]
   14000ac1a:	xor    r9d,r9d
   14000ac1d:	xor    r8d,r8d
   14000ac20:	mov    rcx,rsi
   14000ac23:	mov    QWORD PTR [rsp+0x20],rax
   14000ac28:	call   QWORD PTR [rip+0x389aa]        # 0x1400435d8
   14000ac2e:	mov    edx,DWORD PTR [rsp+0x34]
   14000ac32:	mov    ecx,0x40
   14000ac37:	add    rdx,rdx
   14000ac3a:	call   QWORD PTR [rip+0x38898]        # 0x1400434d8
   14000ac40:	test   rax,rax
   14000ac43:	mov    r12,rax
   14000ac46:	je     0x14000ae37
   14000ac4c:	mov    r9d,DWORD PTR [rsp+0x34]
   14000ac51:	lea    rdx,[rsp+0x38]
   14000ac56:	mov    r8,rax
   14000ac59:	mov    rcx,rsi
   14000ac5c:	mov    QWORD PTR [rsp+0x20],0x0
   14000ac65:	call   QWORD PTR [rip+0x3896d]        # 0x1400435d8
   14000ac6b:	test   eax,eax
   14000ac6d:	mov    edi,eax
   14000ac6f:	je     0x14000ae2e
   14000ac75:	or     rcx,0xffffffffffffffff
   14000ac79:	xor    eax,eax
   14000ac7b:	mov    rdi,r15
   14000ac7e:	repnz scas ax,WORD PTR es:[rdi]
   14000ac81:	not    rcx
   14000ac84:	mov    rdx,rcx
   14000ac87:	mov    rcx,r15
   14000ac8a:	call   0x14002a640
   14000ac8f:	or     rcx,0xffffffffffffffff
   14000ac93:	xor    eax,eax
   14000ac95:	mov    rdi,r12
   14000ac98:	repnz scas ax,WORD PTR es:[rdi]
   14000ac9b:	not    rcx
   14000ac9e:	mov    rdx,rcx
   14000aca1:	mov    rcx,r12
   14000aca4:	call   0x14002a640
   14000aca9:	mov    rdx,r15
   14000acac:	mov    rcx,r12
   14000acaf:	call   0x14002a720
   14000acb4:	test   rax,rax
   14000acb7:	je     0x14000adfa
   14000acbd:	lea    rax,[rsp+0x58]
   14000acc2:	lea    r8,[rip+0x40787]        # 0x14004b450
   14000acc9:	lea    rdx,[rsp+0x38]
   14000acce:	xor    r9d,r9d
   14000acd1:	mov    rcx,rsi
   14000acd4:	mov    DWORD PTR [rsp+0x58],0x20
   14000acdc:	mov    QWORD PTR [rsp+0x20],rax
   14000ace1:	xor    ebp,ebp
   14000ace3:	call   QWORD PTR [rip+0x38917]        # 0x140043600
   14000ace9:	test   eax,eax
   14000aceb:	mov    edi,eax
   14000aced:	je     0x14000adfc
   14000acf3:	nop
   14000acf4:	data16 data16 xchg ax,ax
   14000acf8:	data16 data16 xchg ax,ax
   14000acfc:	data16 data16 xchg ax,ax
   14000ad00:	lea    rax,[rsp+0x30]
   14000ad05:	xor    edi,edi
   14000ad07:	lea    rdx,[rsp+0x58]
   14000ad0c:	xor    r9d,r9d
   14000ad0f:	xor    r8d,r8d
   14000ad12:	mov    rcx,rsi
   14000ad15:	mov    QWORD PTR [rsp+0x28],rdi
   14000ad1a:	mov    QWORD PTR [rsp+0x20],rax
   14000ad1f:	call   QWORD PTR [rip+0x388d3]        # 0x1400435f8
   14000ad25:	mov    edx,DWORD PTR [rsp+0x30]
   14000ad29:	lea    ecx,[rdi+0x40]
   14000ad2c:	call   QWORD PTR [rip+0x387a6]        # 0x1400434d8
   14000ad32:	test   rax,rax
   14000ad35:	mov    QWORD PTR [rbx],rax
   14000ad38:	je     0x14000adb1
   14000ad3a:	mov    DWORD PTR [rax],0x8
   14000ad40:	mov    r9d,DWORD PTR [rsp+0x30]
   14000ad45:	mov    r8,QWORD PTR [rbx]
   14000ad48:	lea    rdx,[rsp+0x58]
   14000ad4d:	mov    rcx,rsi
   14000ad50:	mov    QWORD PTR [rsp+0x28],rdi
   14000ad55:	mov    QWORD PTR [rsp+0x20],rdi
   14000ad5a:	call   QWORD PTR [rip+0x38898]        # 0x1400435f8
   14000ad60:	test   eax,eax
   14000ad62:	mov    edi,eax
   14000ad64:	je     0x14000ade2
   14000ad66:	mov    r8,QWORD PTR [rbx]
   14000ad69:	or     rcx,0xffffffffffffffff
   14000ad6d:	xor    eax,eax
   14000ad6f:	lea    rdi,[r8+0x4]
   14000ad73:	repnz scas ax,WORD PTR es:[rdi]
   14000ad76:	not    rcx
   14000ad79:	mov    rdx,rcx
   14000ad7c:	lea    rcx,[r8+0x4]
   14000ad80:	call   0x14002a640
   14000ad85:	mov    rcx,QWORD PTR [rbx]
   14000ad88:	lea    rdx,[rip+0x406a1]        # 0x14004b430
   14000ad8f:	add    rcx,0x4
   14000ad93:	call   0x14002a720
   14000ad98:	test   rax,rax
   14000ad9b:	jne    0x14000ae24
   14000ada1:	mov    rcx,QWORD PTR [rbx]
   14000ada4:	call   QWORD PTR [rip+0x38736]        # 0x1400434e0
   14000adaa:	mov    QWORD PTR [rbx],0x0
   14000adb1:	lea    rax,[rsp+0x58]
   14000adb6:	add    ebp,0x1
   14000adb9:	lea    r8,[rip+0x40690]        # 0x14004b450
   14000adc0:	lea    rdx,[rsp+0x38]
   14000adc5:	mov    rcx,rsi
   14000adc8:	mov    r9d,ebp
   14000adcb:	mov    QWORD PTR [rsp+0x20],rax
   14000add0:	call   QWORD PTR [rip+0x3882a]        # 0x140043600
   14000add6:	test   eax,eax
   14000add8:	mov    edi,eax
   14000adda:	jne    0x14000ad00
   14000ade0:	jmp    0x14000adfc
   14000ade2:	call   QWORD PTR [rip+0x38700]        # 0x1400434e8
   14000ade8:	mov    rcx,QWORD PTR [rbx]
   14000adeb:	call   QWORD PTR [rip+0x386ef]        # 0x1400434e0
   14000adf1:	mov    QWORD PTR [rbx],0x0
   14000adf8:	jmp    0x14000adfc
   14000adfa:	xor    edi,edi
   14000adfc:	mov    rcx,r12
   14000adff:	call   QWORD PTR [rip+0x386db]        # 0x1400434e0
   14000ae05:	add    r13d,0x1
   14000ae09:	lea    r8,[rsp+0x38]
   14000ae0e:	mov    edx,r13d
   14000ae11:	mov    rcx,rsi
   14000ae14:	call   QWORD PTR [rip+0x387c6]        # 0x1400435e0
   14000ae1a:	test   eax,eax
   14000ae1c:	jne    0x14000ac10
   14000ae22:	jmp    0x14000ae37
   14000ae24:	mov    edi,0x1
   14000ae29:	mov    QWORD PTR [r14],r12
   14000ae2c:	jmp    0x14000ae37
   14000ae2e:	mov    rcx,r12
   14000ae31:	call   QWORD PTR [rip+0x386a9]        # 0x1400434e0
   14000ae37:	mov    r12,QWORD PTR [rsp+0x88]
   14000ae3f:	mov    rbp,QWORD PTR [rsp+0xd8]
   14000ae47:	mov    rcx,rsi
   14000ae4a:	call   QWORD PTR [rip+0x387a0]        # 0x1400435f0
   14000ae50:	mov    eax,edi
   14000ae52:	mov    rsi,QWORD PTR [rsp+0x98]
   14000ae5a:	mov    rdi,QWORD PTR [rsp+0x90]
   14000ae62:	mov    r13,QWORD PTR [rsp+0x80]
   14000ae6a:	mov    rcx,QWORD PTR [rsp+0x78]
   14000ae6f:	xor    rcx,rsp
   14000ae72:	call   0x140029b40
   14000ae77:	add    rsp,0xa0
   14000ae7e:	pop    r15
   14000ae80:	pop    r14
   14000ae82:	pop    rbx
   14000ae83:	ret    
   14000ae84:	int3   
   14000ae85:	int3   
   14000ae86:	int3   
   14000ae87:	int3   
   14000ae88:	int3   
   14000ae89:	int3   
   14000ae8a:	int3   
   14000ae8b:	int3   
   14000ae8c:	int3   
   14000ae8d:	int3   
   14000ae8e:	int3   
   14000ae8f:	int3   
   14000ae90:	mov    QWORD PTR [rsp+0x20],rbp
   14000ae95:	push   rdi
   14000ae96:	sub    rsp,0xc0
   14000ae9d:	mov    rax,QWORD PTR [rip+0x500dc]        # 0x14005af80
   14000aea4:	xor    rax,rsp
   14000aea7:	mov    QWORD PTR [rsp+0xb8],rax
   14000aeaf:	xor    ebp,ebp
   14000aeb1:	mov    rdi,rcx
   14000aeb4:	lea    rax,[rsp+0x50]
   14000aeb9:	lea    r9,[rip+0x405b0]        # 0x14004b470
   14000aec0:	lea    rcx,[rip+0x40599]        # 0x14004b460
   14000aec7:	lea    r8d,[rbp+0x17]
   14000aecb:	xor    edx,edx
   14000aecd:	mov    QWORD PTR [rsp+0x50],rbp
   14000aed2:	mov    QWORD PTR [rsp+0x48],rbp
   14000aed7:	mov    QWORD PTR [rsp+0x40],rbp
   14000aedc:	mov    QWORD PTR [rsp+0x20],rax
   14000aee1:	call   QWORD PTR [rip+0x38c11]        # 0x140043af8
   14000aee7:	test   eax,eax
   14000aee9:	js     0x14000b1e0
   14000aeef:	mov    rcx,QWORD PTR [rsp+0x50]
   14000aef4:	lea    r9,[rsp+0x48]
   14000aef9:	lea    edx,[rbp+0x2]
   14000aefc:	mov    rax,QWORD PTR [rcx]
   14000aeff:	lea    r8d,[rbp+0x9]
   14000af03:	call   QWORD PTR [rax+0x18]
   14000af06:	test   eax,eax
   14000af08:	js     0x14000b1e0
   14000af0e:	mov    rcx,QWORD PTR [rsp+0x50]
   14000af13:	lea    r9,[rsp+0x40]
   14000af18:	lea    r8d,[rbp+0x1]
   14000af1c:	mov    rax,QWORD PTR [rcx]
   14000af1f:	xor    edx,edx
   14000af21:	mov    QWORD PTR [rsp+0xd8],rbx
   14000af29:	call   QWORD PTR [rax+0x20]
   14000af2c:	test   eax,eax
   14000af2e:	jne    0x14000b17b
   14000af34:	mov    rcx,QWORD PTR [rsp+0x40]
   14000af39:	xor    eax,eax
   14000af3b:	test   rcx,rcx
   14000af3e:	mov    QWORD PTR [rsp+0x90],rax
   14000af46:	mov    QWORD PTR [rsp+0x98],rax
   14000af4e:	mov    QWORD PTR [rsp+0xa0],rax
   14000af56:	mov    QWORD PTR [rsp+0xa8],rax
   14000af5e:	mov    QWORD PTR [rsp+0xb0],rax
   14000af66:	je     0x14000af75
   14000af68:	lea    rdx,[rsp+0x90]
   14000af70:	call   0x14000b230
   14000af75:	movzx  eax,WORD PTR [rsp+0x9e]
   14000af7d:	mov    rdi,QWORD PTR [rdi+0x13a8]
   14000af84:	cmp    DWORD PTR [rsp+0x94],0xbb80
   14000af8f:	mov    ecx,ebp
   14000af91:	sete   cl
   14000af94:	shl    eax,0x10
   14000af97:	add    ecx,eax
   14000af99:	mov    rax,QWORD PTR [rip+0x40380]        # 0x14004b320
   14000afa0:	mov    DWORD PTR [rsp+0x5c],ecx
   14000afa4:	lea    rcx,[rsp+0x80]
   14000afac:	mov    QWORD PTR [rcx],rax
   14000afaf:	mov    rax,QWORD PTR [rip+0x40372]        # 0x14004b328
   14000afb6:	mov    QWORD PTR [rcx+0x8],rax
   14000afba:	mov    rcx,QWORD PTR [rdi-0x18]
   14000afbe:	mov    rax,QWORD PTR [rcx]
   14000afc1:	call   QWORD PTR [rax+0x20]
   14000afc4:	cmp    DWORD PTR [rdi-0x8],ebp
   14000afc7:	mov    rcx,rax
   14000afca:	jl     0x14000afdd
   14000afcc:	cmp    rax,QWORD PTR [rdi-0x18]
   14000afd0:	jne    0x14000afdd
   14000afd2:	lea    rbx,[rdi-0x18]
   14000afd6:	lock add DWORD PTR [rdi-0x8],0x1
   14000afdb:	jmp    0x14000b01a
   14000afdd:	mov    rax,QWORD PTR [rax]
   14000afe0:	mov    edx,DWORD PTR [rdi-0x10]
   14000afe3:	mov    r8d,0x2
   14000afe9:	call   QWORD PTR [rax]
   14000afeb:	test   rax,rax
   14000afee:	mov    rbx,rax
   14000aff1:	jne    0x14000aff9
   14000aff3:	call   0x140004480
   14000aff8:	int3   
   14000aff9:	mov    eax,DWORD PTR [rdi-0x10]
   14000affc:	lea    rcx,[rbx+0x18]
   14000b000:	mov    r8,rdi
   14000b003:	mov    DWORD PTR [rbx+0x8],eax
   14000b006:	mov    eax,DWORD PTR [rdi-0x10]
   14000b009:	add    eax,0x1
   14000b00c:	movsxd rdx,eax
   14000b00f:	add    rdx,rdx
   14000b012:	mov    r9,rdx
   14000b015:	call   0x140029bf0
   14000b01a:	add    rbx,0x18
   14000b01e:	mov    QWORD PTR [rsp+0xe0],rsi
   14000b026:	lea    rdi,[rip+0x3f87b]        # 0x14004a8a8
   14000b02d:	mov    rsi,rbx
   14000b030:	mov    ecx,0x1
   14000b035:	mov    QWORD PTR [rsp+0x78],rbx
   14000b03a:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000b03d:	jne    0x14000b064
   14000b03f:	lea    rdx,[rbx-0x18]
   14000b043:	or     eax,0xffffffff
   14000b046:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b04b:	add    eax,0xffffffff
   14000b04e:	test   eax,eax
   14000b050:	jg     0x14000b173
   14000b056:	mov    rcx,QWORD PTR [rdx]
   14000b059:	mov    rax,QWORD PTR [rcx]
   14000b05c:	call   QWORD PTR [rax+0x8]
   14000b05f:	jmp    0x14000b173
   14000b064:	xor    r9d,r9d
   14000b067:	mov    QWORD PTR [rsp+0x30],rbp
   14000b06c:	mov    edx,0xc0000000
   14000b071:	lea    r8d,[r9+0x3]
   14000b075:	mov    rcx,rbx
   14000b078:	mov    DWORD PTR [rsp+0x28],ebp
   14000b07c:	mov    DWORD PTR [rsp+0x20],0x3
   14000b084:	call   QWORD PTR [rip+0x384f6]        # 0x140043580
   14000b08a:	cmp    rax,0xffffffffffffffff
   14000b08e:	mov    rdi,rax
   14000b091:	jne    0x14000b0b6
   14000b093:	lea    rdx,[rbx-0x18]
   14000b097:	or     eax,eax
   14000b099:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b09e:	add    eax,edi
   14000b0a0:	test   eax,eax
   14000b0a2:	jg     0x14000b173
   14000b0a8:	mov    rcx,QWORD PTR [rdx]
   14000b0ab:	mov    rax,QWORD PTR [rcx]
   14000b0ae:	call   QWORD PTR [rax+0x8]
   14000b0b1:	jmp    0x14000b173
   14000b0b6:	lea    rdx,[rsp+0x60]
   14000b0bb:	lea    rcx,[rsp+0x80]
   14000b0c3:	mov    QWORD PTR [rsp+0x38],rbp
   14000b0c8:	mov    rax,QWORD PTR [rcx]
   14000b0cb:	lea    r8,[rsp+0x60]
   14000b0d0:	mov    r9d,0x18
   14000b0d6:	mov    QWORD PTR [rdx],rax
   14000b0d9:	mov    rax,QWORD PTR [rcx+0x8]
   14000b0dd:	mov    rcx,rdi
   14000b0e0:	mov    QWORD PTR [rdx+0x8],rax
   14000b0e4:	lea    rax,[rsp+0x58]
   14000b0e9:	mov    edx,0x2f0003
   14000b0ee:	mov    QWORD PTR [rsp+0x30],rax
   14000b0f3:	lea    rax,[rsp+0x5c]
   14000b0f8:	mov    DWORD PTR [rsp+0x28],0x4
   14000b100:	mov    DWORD PTR [rsp+0x74],0x2
   14000b108:	mov    DWORD PTR [rsp+0x70],0xe
   14000b110:	mov    DWORD PTR [rsp+0x58],ebp
   14000b114:	mov    QWORD PTR [rsp+0x20],rax
   14000b119:	call   QWORD PTR [rip+0x38459]        # 0x140043578
   14000b11f:	mov    esi,eax
   14000b121:	call   QWORD PTR [rip+0x383c1]        # 0x1400434e8
   14000b127:	test   rdi,rdi
   14000b12a:	je     0x14000b135
   14000b12c:	mov    rcx,rdi
   14000b12f:	call   QWORD PTR [rip+0x38453]        # 0x140043588
   14000b135:	test   esi,esi
   14000b137:	jne    0x14000b157
   14000b139:	lea    rdx,[rbx-0x18]
   14000b13d:	or     eax,0xffffffff
   14000b140:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b145:	add    eax,0xffffffff
   14000b148:	test   eax,eax
   14000b14a:	jg     0x14000b173
   14000b14c:	mov    rcx,QWORD PTR [rdx]
   14000b14f:	mov    rax,QWORD PTR [rcx]
   14000b152:	call   QWORD PTR [rax+0x8]
   14000b155:	jmp    0x14000b173
   14000b157:	lea    rdx,[rbx-0x18]
   14000b15b:	or     eax,0xffffffff
   14000b15e:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b163:	add    eax,0xffffffff
   14000b166:	test   eax,eax
   14000b168:	jg     0x14000b173
   14000b16a:	mov    rcx,QWORD PTR [rdx]
   14000b16d:	mov    rax,QWORD PTR [rcx]
   14000b170:	call   QWORD PTR [rax+0x8]
   14000b173:	mov    rsi,QWORD PTR [rsp+0xe0]
   14000b17b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b180:	test   rcx,rcx
   14000b183:	je     0x14000b190
   14000b185:	mov    rax,QWORD PTR [rcx]
   14000b188:	call   QWORD PTR [rax+0x10]
   14000b18b:	mov    QWORD PTR [rsp+0x40],rbp
   14000b190:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b195:	test   rcx,rcx
   14000b198:	je     0x14000b1a5
   14000b19a:	mov    rdx,QWORD PTR [rcx]
   14000b19d:	call   QWORD PTR [rdx+0x10]
   14000b1a0:	mov    QWORD PTR [rsp+0x48],rbp
   14000b1a5:	xor    edx,edx
   14000b1a7:	mov    ecx,0x2710
   14000b1ac:	call   QWORD PTR [rip+0x3894e]        # 0x140043b00
   14000b1b2:	mov    rbx,QWORD PTR [rsp+0xd8]
   14000b1ba:	mov    eax,0x1
   14000b1bf:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000b1c7:	xor    rcx,rsp
   14000b1ca:	call   0x140029b40
   14000b1cf:	mov    rbp,QWORD PTR [rsp+0xe8]
   14000b1d7:	add    rsp,0xc0
   14000b1de:	pop    rdi
   14000b1df:	ret    
   14000b1e0:	xor    edx,edx
   14000b1e2:	mov    ecx,0x2710
   14000b1e7:	call   QWORD PTR [rip+0x38913]        # 0x140043b00
   14000b1ed:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b1f2:	test   rcx,rcx
   14000b1f5:	je     0x14000b202
   14000b1f7:	mov    rax,QWORD PTR [rcx]
   14000b1fa:	call   QWORD PTR [rax+0x10]
   14000b1fd:	mov    QWORD PTR [rsp+0x48],rbp
   14000b202:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b207:	test   rcx,rcx
   14000b20a:	je     0x14000b217
   14000b20c:	mov    rax,QWORD PTR [rcx]
   14000b20f:	call   QWORD PTR [rax+0x10]
   14000b212:	mov    QWORD PTR [rsp+0x40],rbp
   14000b217:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b21c:	test   rcx,rcx
   14000b21f:	je     0x14000b227
   14000b221:	mov    rax,QWORD PTR [rcx]
   14000b224:	call   QWORD PTR [rax+0x10]
   14000b227:	xor    eax,eax
   14000b229:	jmp    0x14000b1bf
   14000b22b:	int3   
   14000b22c:	int3   
   14000b22d:	int3   
   14000b22e:	int3   
   14000b22f:	int3   
   14000b230:	rex push rbp
   14000b232:	push   rsi
   14000b233:	push   rdi
   14000b234:	sub    rsp,0x40
   14000b238:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000b241:	mov    QWORD PTR [rsp+0x60],rbx
   14000b246:	mov    rbp,rdx
   14000b249:	test   rdx,rdx
   14000b24c:	jne    0x14000b255
   14000b24e:	xor    eax,eax
   14000b250:	jmp    0x14000b47a
   14000b255:	mov    rax,QWORD PTR [rcx]
   14000b258:	lea    rdx,[rsp+0x78]
   14000b25d:	call   QWORD PTR [rax+0x28]
   14000b260:	test   eax,eax
   14000b262:	jns    0x14000b26b
   14000b264:	xor    eax,eax
   14000b266:	jmp    0x14000b47a
   14000b26b:	mov    rsi,QWORD PTR [rsp+0x78]
   14000b270:	call   0x14002157c
   14000b275:	mov    rdx,rax
   14000b278:	xor    ecx,ecx
   14000b27a:	test   rax,rax
   14000b27d:	setne  cl
   14000b280:	test   ecx,ecx
   14000b282:	jne    0x14000b28f
   14000b284:	mov    ecx,0x80004005
   14000b289:	call   0x140003dc0
   14000b28e:	int3   
   14000b28f:	mov    rax,QWORD PTR [rax]
   14000b292:	mov    rcx,rdx
   14000b295:	call   QWORD PTR [rax+0x18]
   14000b298:	lea    rdi,[rax+0x18]
   14000b29c:	mov    QWORD PTR [rsp+0x70],rdi
   14000b2a1:	or     rbx,0xffffffffffffffff
   14000b2a5:	test   rsi,rsi
   14000b2a8:	je     0x14000b2ed
   14000b2aa:	test   rsi,0xffffffffffff0000
   14000b2b1:	jne    0x14000b2d9
   14000b2b3:	movzx  esi,si
   14000b2b6:	mov    ecx,esi
   14000b2b8:	call   0x140021f1c
   14000b2bd:	test   rax,rax
   14000b2c0:	je     0x14000b304
   14000b2c2:	mov    r8d,esi
   14000b2c5:	mov    rdx,rax
   14000b2c8:	lea    rcx,[rsp+0x70]
   14000b2cd:	call   0x140007010
   14000b2d2:	mov    rdi,QWORD PTR [rsp+0x70]
   14000b2d7:	jmp    0x14000b304
   14000b2d9:	xor    eax,eax
   14000b2db:	mov    rcx,rbx
   14000b2de:	mov    rdi,rsi
   14000b2e1:	repnz scas ax,WORD PTR es:[rdi]
   14000b2e4:	not    rcx
   14000b2e7:	sub    rcx,0x1
   14000b2eb:	jmp    0x14000b2ef
   14000b2ed:	xor    ecx,ecx
   14000b2ef:	mov    r8d,ecx
   14000b2f2:	mov    rdx,rsi
   14000b2f5:	lea    rcx,[rsp+0x70]
   14000b2fa:	call   0x140004590
   14000b2ff:	mov    rdi,QWORD PTR [rsp+0x70]
   14000b304:	mov    rcx,QWORD PTR [rsp+0x78]
   14000b309:	call   QWORD PTR [rip+0x387f9]        # 0x140043b08
   14000b30f:	mov    QWORD PTR [rsp+0x68],0x0
   14000b318:	mov    QWORD PTR [rsp+0x30],0x0
   14000b321:	lea    rax,[rsp+0x68]
   14000b326:	mov    QWORD PTR [rsp+0x20],rax
   14000b32b:	lea    r9,[rip+0x4015e]        # 0x14004b490
   14000b332:	xor    edx,edx
   14000b334:	lea    r8d,[rdx+0x1]
   14000b338:	lea    rcx,[rip+0x40141]        # 0x14004b480
   14000b33f:	call   QWORD PTR [rip+0x387b3]        # 0x140043af8
   14000b345:	test   eax,eax
   14000b347:	jns    0x14000b37a
   14000b349:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b34e:	test   rcx,rcx
   14000b351:	je     0x14000b35a
   14000b353:	mov    rax,QWORD PTR [rcx]
   14000b356:	call   QWORD PTR [rax+0x10]
   14000b359:	nop
   14000b35a:	lea    rdx,[rdi-0x18]
   14000b35e:	lock xadd DWORD PTR [rdx+0x10],ebx
   14000b363:	add    ebx,0xffffffff
   14000b366:	test   ebx,ebx
   14000b368:	jg     0x14000b373
   14000b36a:	mov    rcx,QWORD PTR [rdx]
   14000b36d:	mov    rax,QWORD PTR [rcx]
   14000b370:	call   QWORD PTR [rax+0x8]
   14000b373:	xor    eax,eax
   14000b375:	jmp    0x14000b47a
   14000b37a:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b37f:	mov    rax,QWORD PTR [rcx]
   14000b382:	lea    r9,[rsp+0x30]
   14000b387:	xor    r8d,r8d
   14000b38a:	mov    rdx,rdi
   14000b38d:	call   QWORD PTR [rax+0x20]
   14000b390:	test   eax,eax
   14000b392:	jns    0x14000b3c5
   14000b394:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b399:	test   rcx,rcx
   14000b39c:	je     0x14000b3a5
   14000b39e:	mov    rax,QWORD PTR [rcx]
   14000b3a1:	call   QWORD PTR [rax+0x10]
   14000b3a4:	nop
   14000b3a5:	lea    rdx,[rdi-0x18]
   14000b3a9:	lock xadd DWORD PTR [rdx+0x10],ebx
   14000b3ae:	add    ebx,0xffffffff
   14000b3b1:	test   ebx,ebx
   14000b3b3:	jg     0x14000b3be
   14000b3b5:	mov    rcx,QWORD PTR [rdx]
   14000b3b8:	mov    rax,QWORD PTR [rcx]
   14000b3bb:	call   QWORD PTR [rax+0x8]
   14000b3be:	xor    eax,eax
   14000b3c0:	jmp    0x14000b47a
   14000b3c5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b3ca:	test   rcx,rcx
   14000b3cd:	jne    0x14000b3fd
   14000b3cf:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b3d4:	test   rcx,rcx
   14000b3d7:	je     0x14000b3e0
   14000b3d9:	mov    rax,QWORD PTR [rcx]
   14000b3dc:	call   QWORD PTR [rax+0x10]
   14000b3df:	nop
   14000b3e0:	lea    rdx,[rdi-0x18]
   14000b3e4:	lock xadd DWORD PTR [rdx+0x10],ebx
   14000b3e9:	add    ebx,0xffffffff
   14000b3ec:	test   ebx,ebx
   14000b3ee:	jg     0x14000b3f9
   14000b3f0:	mov    rcx,QWORD PTR [rdx]
   14000b3f3:	mov    rax,QWORD PTR [rcx]
   14000b3f6:	call   QWORD PTR [rax+0x8]
   14000b3f9:	xor    eax,eax
   14000b3fb:	jmp    0x14000b47a
   14000b3fd:	cmp    WORD PTR [rcx+0x10],0x16
   14000b402:	jne    0x14000b42d
   14000b404:	mov    rax,QWORD PTR [rcx]
   14000b407:	mov    QWORD PTR [rbp+0x0],rax
   14000b40b:	mov    rax,QWORD PTR [rcx+0x8]
   14000b40f:	mov    QWORD PTR [rbp+0x8],rax
   14000b413:	mov    rax,QWORD PTR [rcx+0x10]
   14000b417:	mov    QWORD PTR [rbp+0x10],rax
   14000b41b:	mov    rax,QWORD PTR [rcx+0x18]
   14000b41f:	mov    QWORD PTR [rbp+0x18],rax
   14000b423:	mov    rax,QWORD PTR [rcx+0x20]
   14000b427:	mov    QWORD PTR [rbp+0x20],rax
   14000b42b:	jmp    0x14000b444
   14000b42d:	mov    rax,QWORD PTR [rcx]
   14000b430:	mov    QWORD PTR [rbp+0x0],rax
   14000b434:	mov    rax,QWORD PTR [rcx+0x8]
   14000b438:	mov    QWORD PTR [rbp+0x8],rax
   14000b43c:	movzx  eax,WORD PTR [rcx+0x10]
   14000b440:	mov    WORD PTR [rbp+0x10],ax
   14000b444:	call   QWORD PTR [rip+0x386be]        # 0x140043b08
   14000b44a:	nop
   14000b44b:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b450:	test   rcx,rcx
   14000b453:	je     0x14000b45c
   14000b455:	mov    rax,QWORD PTR [rcx]
   14000b458:	call   QWORD PTR [rax+0x10]
   14000b45b:	nop
   14000b45c:	lea    rdx,[rdi-0x18]
   14000b460:	lock xadd DWORD PTR [rdx+0x10],ebx
   14000b465:	add    ebx,0xffffffff
   14000b468:	test   ebx,ebx
   14000b46a:	jg     0x14000b475
   14000b46c:	mov    rcx,QWORD PTR [rdx]
   14000b46f:	mov    rax,QWORD PTR [rcx]
   14000b472:	call   QWORD PTR [rax+0x8]
   14000b475:	mov    eax,0x1
   14000b47a:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b47f:	add    rsp,0x40
   14000b483:	pop    rdi
   14000b484:	pop    rsi
   14000b485:	pop    rbp
   14000b486:	ret    
   14000b487:	int3   
   14000b488:	int3   
   14000b489:	int3   
   14000b48a:	int3   
   14000b48b:	int3   
   14000b48c:	int3   
   14000b48d:	int3   
   14000b48e:	int3   
   14000b48f:	int3   
   14000b490:	rex push rbp
   14000b492:	sub    rsp,0x20
   14000b496:	mov    rbp,rdx
   14000b499:	lea    rcx,[rbp+0x70]
   14000b49d:	call   0x140003de0
   14000b4a2:	add    rsp,0x20
   14000b4a6:	pop    rbp
   14000b4a7:	ret    
   14000b4a8:	int3   
   14000b4a9:	int3   
   14000b4aa:	int3   
   14000b4ab:	int3   
   14000b4ac:	int3   
   14000b4ad:	int3   
   14000b4ae:	int3   
   14000b4af:	int3   
   14000b4b0:	rex push rbp
   14000b4b2:	sub    rsp,0x20
   14000b4b6:	mov    rbp,rdx
   14000b4b9:	lea    rcx,[rbp+0x70]
   14000b4bd:	call   0x140003de0
   14000b4c2:	add    rsp,0x20
   14000b4c6:	pop    rbp
   14000b4c7:	ret    
   14000b4c8:	int3   
   14000b4c9:	int3   
   14000b4ca:	int3   
   14000b4cb:	int3   
   14000b4cc:	int3   
   14000b4cd:	int3   
   14000b4ce:	int3   
   14000b4cf:	int3   
   14000b4d0:	rex push rbp
   14000b4d2:	sub    rsp,0x20
   14000b4d6:	mov    rbp,rdx
   14000b4d9:	lea    rcx,[rbp+0x68]
   14000b4dd:	call   0x14000b4f0
   14000b4e2:	add    rsp,0x20
   14000b4e6:	pop    rbp
   14000b4e7:	ret    
   14000b4e8:	int3   
   14000b4e9:	int3   
   14000b4ea:	int3   
   14000b4eb:	int3   
   14000b4ec:	int3   
   14000b4ed:	int3   
   14000b4ee:	int3   
   14000b4ef:	int3   
   14000b4f0:	sub    rsp,0x28
   14000b4f4:	mov    rcx,QWORD PTR [rcx]
   14000b4f7:	test   rcx,rcx
   14000b4fa:	je     0x14000b502
   14000b4fc:	mov    rax,QWORD PTR [rcx]
   14000b4ff:	call   QWORD PTR [rax+0x10]
   14000b502:	add    rsp,0x28
   14000b506:	ret    
   14000b507:	int3   
   14000b508:	int3   
   14000b509:	int3   
   14000b50a:	int3   
   14000b50b:	int3   
   14000b50c:	int3   
   14000b50d:	int3   
   14000b50e:	int3   
   14000b50f:	int3   
   14000b510:	mov    QWORD PTR [rsp+0x10],rbx
   14000b515:	mov    QWORD PTR [rsp+0x18],rbp
   14000b51a:	mov    QWORD PTR [rsp+0x20],rsi
   14000b51f:	push   r12
   14000b521:	sub    rsp,0x20
   14000b525:	xor    eax,eax
   14000b527:	test   edx,edx
   14000b529:	mov    r12d,edx
   14000b52c:	cmovs  r12d,eax
   14000b530:	test   r8d,r8d
   14000b533:	mov    ebx,r8d
   14000b536:	cmovs  ebx,eax
   14000b539:	mov    rbp,rcx
   14000b53c:	mov    rcx,QWORD PTR [rcx]
   14000b53f:	mov    esi,DWORD PTR [rcx-0x10]
   14000b542:	mov    eax,0x7fffffff
   14000b547:	sub    eax,ebx
   14000b549:	cmp    eax,r12d
   14000b54c:	jl     0x14000b620
   14000b552:	lea    eax,[r12+rbx*1]
   14000b556:	cmp    eax,esi
   14000b558:	jle    0x14000b55f
   14000b55a:	mov    ebx,esi
   14000b55c:	sub    ebx,r12d
   14000b55f:	test   ebx,ebx
   14000b561:	mov    QWORD PTR [rsp+0x30],rdi
   14000b566:	jle    0x14000b5f3
   14000b56c:	mov    edi,esi
   14000b56e:	sub    esi,r12d
   14000b571:	sub    esi,ebx
   14000b573:	sub    edi,ebx
   14000b575:	add    esi,0x1
   14000b578:	cmp    DWORD PTR [rcx-0x8],0x1
   14000b57c:	jle    0x14000b589
   14000b57e:	mov    edx,DWORD PTR [rcx-0x10]
   14000b581:	mov    rcx,rbp
   14000b584:	call   0x1400043d0
   14000b589:	mov    r9,QWORD PTR [rbp+0x0]
   14000b58d:	movsxd rcx,r12d
   14000b590:	movsxd rax,ebx
   14000b593:	add    rax,rcx
   14000b596:	lea    rcx,[r9+rcx*2]
   14000b59a:	movsxd rdx,esi
   14000b59d:	add    rdx,rdx
   14000b5a0:	lea    r8,[r9+rax*2]
   14000b5a4:	mov    r9,rdx
   14000b5a7:	call   0x140029b60
   14000b5ac:	test   eax,eax
   14000b5ae:	je     0x14000b5d6
   14000b5b0:	cmp    eax,0xc
   14000b5b3:	je     0x14000b5d0
   14000b5b5:	cmp    eax,0x16
   14000b5b8:	je     0x14000b5ca
   14000b5ba:	cmp    eax,0x22
   14000b5bd:	je     0x14000b5ca
   14000b5bf:	cmp    eax,0x50
   14000b5c2:	je     0x14000b5d6
   14000b5c4:	call   0x1400218c0
   14000b5c9:	int3   
   14000b5ca:	call   0x1400218c0
   14000b5cf:	int3   
   14000b5d0:	call   0x140021878
   14000b5d5:	int3   
   14000b5d6:	test   edi,edi
   14000b5d8:	js     0x14000b615
   14000b5da:	mov    rax,QWORD PTR [rbp+0x0]
   14000b5de:	cmp    edi,DWORD PTR [rax-0xc]
   14000b5e1:	jg     0x14000b615
   14000b5e3:	mov    DWORD PTR [rax-0x10],edi
   14000b5e6:	mov    rax,QWORD PTR [rbp+0x0]
   14000b5ea:	movsxd rcx,edi
   14000b5ed:	mov    WORD PTR [rax+rcx*2],0x0
   14000b5f3:	mov    rax,QWORD PTR [rbp+0x0]
   14000b5f7:	mov    rdi,QWORD PTR [rsp+0x30]
   14000b5fc:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b601:	mov    eax,DWORD PTR [rax-0x10]
   14000b604:	mov    rbp,QWORD PTR [rsp+0x40]
   14000b609:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b60e:	add    rsp,0x20
   14000b612:	pop    r12
   14000b614:	ret    
   14000b615:	mov    ecx,0x80070057
   14000b61a:	call   0x140003dc0
   14000b61f:	int3   
   14000b620:	mov    ecx,0x80070057
   14000b625:	call   0x140003dc0
   14000b62a:	int3   
   14000b62b:	int3   
   14000b62c:	int3   
   14000b62d:	int3   
   14000b62e:	int3   
   14000b62f:	int3   
   14000b630:	mov    QWORD PTR [rsp+0x8],rbx
   14000b635:	push   rdi
   14000b636:	sub    rsp,0x20
   14000b63a:	mov    rbx,rcx
   14000b63d:	mov    rcx,QWORD PTR [rcx]
   14000b640:	mov    rax,QWORD PTR [rcx]
   14000b643:	call   QWORD PTR [rax+0x20]
   14000b646:	cmp    DWORD PTR [rbx+0x10],0x0
   14000b64a:	mov    rcx,rax
   14000b64d:	jl     0x14000b66a
   14000b64f:	cmp    rax,QWORD PTR [rbx]
   14000b652:	jne    0x14000b66a
   14000b654:	mov    rdi,rbx
   14000b657:	lock add DWORD PTR [rbx+0x10],0x1
   14000b65c:	mov    rax,rbx
   14000b65f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b664:	add    rsp,0x20
   14000b668:	pop    rdi
   14000b669:	ret    
   14000b66a:	mov    rax,QWORD PTR [rax]
   14000b66d:	mov    edx,DWORD PTR [rbx+0x8]
   14000b670:	mov    r8d,0x2
   14000b676:	call   QWORD PTR [rax]
   14000b678:	test   rax,rax
   14000b67b:	mov    rdi,rax
   14000b67e:	jne    0x14000b686
   14000b680:	call   0x140004480
   14000b685:	int3   
   14000b686:	mov    eax,DWORD PTR [rbx+0x8]
   14000b689:	lea    r8,[rbx+0x18]
   14000b68d:	lea    rcx,[rdi+0x18]
   14000b691:	mov    DWORD PTR [rdi+0x8],eax
   14000b694:	mov    eax,DWORD PTR [rbx+0x8]
   14000b697:	add    eax,0x1
   14000b69a:	movsxd rdx,eax
   14000b69d:	add    rdx,rdx
   14000b6a0:	mov    r9,rdx
   14000b6a3:	call   0x140029bf0
   14000b6a8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b6ad:	mov    rax,rdi
   14000b6b0:	add    rsp,0x20
   14000b6b4:	pop    rdi
   14000b6b5:	ret    
   14000b6b6:	int3   
   14000b6b7:	int3   
   14000b6b8:	int3   
   14000b6b9:	int3   
   14000b6ba:	int3   
   14000b6bb:	int3   
   14000b6bc:	int3   
   14000b6bd:	int3   
   14000b6be:	int3   
   14000b6bf:	int3   
   14000b6c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b6c5:	mov    QWORD PTR [rsp+0x10],rbp
   14000b6ca:	mov    QWORD PTR [rsp+0x18],rsi
   14000b6cf:	push   rdi
   14000b6d0:	sub    rsp,0x20
   14000b6d4:	mov    rdx,QWORD PTR [rdx]
   14000b6d7:	mov    rbx,QWORD PTR [rcx]
   14000b6da:	mov    rsi,rcx
   14000b6dd:	lea    rdi,[rdx-0x18]
   14000b6e1:	sub    rbx,0x18
   14000b6e5:	cmp    rdi,rbx
   14000b6e8:	je     0x14000b790
   14000b6ee:	cmp    DWORD PTR [rbx+0x10],0x0
   14000b6f2:	jl     0x14000b784
   14000b6f8:	mov    rcx,QWORD PTR [rdi]
   14000b6fb:	cmp    rcx,QWORD PTR [rbx]
   14000b6fe:	jne    0x14000b784
   14000b704:	mov    rax,QWORD PTR [rcx]
   14000b707:	call   QWORD PTR [rax+0x20]
   14000b70a:	cmp    DWORD PTR [rdi+0x10],0x0
   14000b70e:	mov    rcx,rax
   14000b711:	jl     0x14000b722
   14000b713:	cmp    rax,QWORD PTR [rdi]
   14000b716:	jne    0x14000b722
   14000b718:	mov    rbp,rdi
   14000b71b:	lock add DWORD PTR [rdi+0x10],0x1
   14000b720:	jmp    0x14000b760
   14000b722:	mov    rax,QWORD PTR [rax]
   14000b725:	mov    edx,DWORD PTR [rdi+0x8]
   14000b728:	mov    r8d,0x2
   14000b72e:	call   QWORD PTR [rax]
   14000b730:	test   rax,rax
   14000b733:	mov    rbp,rax
   14000b736:	jne    0x14000b73e
   14000b738:	call   0x140004480
   14000b73d:	int3   
   14000b73e:	mov    eax,DWORD PTR [rdi+0x8]
   14000b741:	lea    r8,[rdi+0x18]
   14000b745:	lea    rcx,[rbp+0x18]
   14000b749:	mov    DWORD PTR [rbp+0x8],eax
   14000b74c:	mov    eax,DWORD PTR [rdi+0x8]
   14000b74f:	add    eax,0x1
   14000b752:	movsxd rdx,eax
   14000b755:	add    rdx,rdx
   14000b758:	mov    r9,rdx
   14000b75b:	call   0x140029bf0
   14000b760:	or     eax,0xffffffff
   14000b763:	lock xadd DWORD PTR [rbx+0x10],eax
   14000b768:	add    eax,0xffffffff
   14000b76b:	test   eax,eax
   14000b76d:	jg     0x14000b77b
   14000b76f:	mov    rcx,QWORD PTR [rbx]
   14000b772:	mov    rdx,rbx
   14000b775:	mov    rax,QWORD PTR [rcx]
   14000b778:	call   QWORD PTR [rax+0x8]
   14000b77b:	lea    rax,[rbp+0x18]
   14000b77f:	mov    QWORD PTR [rsi],rax
   14000b782:	jmp    0x14000b790
   14000b784:	mov    r8d,DWORD PTR [rdx-0x10]
   14000b788:	mov    rcx,rsi
   14000b78b:	call   0x140004590
   14000b790:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b795:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b79a:	mov    rax,rsi
   14000b79d:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b7a2:	add    rsp,0x20
   14000b7a6:	pop    rdi
   14000b7a7:	ret    
   14000b7a8:	int3   
   14000b7a9:	int3   
   14000b7aa:	int3   
   14000b7ab:	int3   
   14000b7ac:	int3   
   14000b7ad:	int3   
   14000b7ae:	int3   
   14000b7af:	int3   
   14000b7b0:	lea    rax,[rip+0x3fcf9]        # 0x14004b4b0
   14000b7b7:	ret    
   14000b7b8:	int3   
   14000b7b9:	int3   
   14000b7ba:	int3   
   14000b7bb:	int3   
   14000b7bc:	int3   
   14000b7bd:	int3   
   14000b7be:	int3   
   14000b7bf:	int3   
   14000b7c0:	mov    QWORD PTR [rsp+0x8],rcx
   14000b7c5:	push   rdi
   14000b7c6:	sub    rsp,0x30
   14000b7ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b7d3:	mov    QWORD PTR [rsp+0x48],rbx
   14000b7d8:	mov    QWORD PTR [rsp+0x50],rbp
   14000b7dd:	mov    QWORD PTR [rsp+0x58],rsi
   14000b7e2:	mov    rdi,rcx
   14000b7e5:	call   0x14001d278
   14000b7ea:	xor    ebp,ebp
   14000b7ec:	mov    QWORD PTR [rdi+0xe8],rbp
   14000b7f3:	lea    rax,[rip+0x3fdbe]        # 0x14004b5b8
   14000b7fa:	mov    QWORD PTR [rdi],rax
   14000b7fd:	call   0x14002157c
   14000b802:	mov    rcx,rax
   14000b805:	mov    edx,ebp
   14000b807:	test   rax,rax
   14000b80a:	setne  dl
   14000b80d:	test   edx,edx
   14000b80f:	jne    0x14000b81c
   14000b811:	mov    ecx,0x80004005
   14000b816:	call   0x140003dc0
   14000b81b:	int3   
   14000b81c:	mov    rax,QWORD PTR [rax]
   14000b81f:	call   QWORD PTR [rax+0x18]
   14000b822:	add    rax,0x18
   14000b826:	mov    QWORD PTR [rdi+0xf8],rax
   14000b82d:	lea    rcx,[rdi+0x100]
   14000b834:	call   0x140016de8
   14000b839:	lea    rsi,[rip+0x3a458]        # 0x140045c98
   14000b840:	mov    QWORD PTR [rdi+0x100],rsi
   14000b847:	lea    rcx,[rdi+0x1a8]
   14000b84e:	call   0x140016de8
   14000b853:	mov    QWORD PTR [rdi+0x1a8],rsi
   14000b85a:	lea    rcx,[rdi+0x250]
   14000b861:	call   0x140016de8
   14000b866:	lea    r11,[rip+0x3b46b]        # 0x140046cd8
   14000b86d:	mov    QWORD PTR [rdi+0x250],r11
   14000b874:	lea    rcx,[rdi+0x2f8]
   14000b87b:	call   0x140016de8
   14000b880:	lea    r11,[rip+0x41721]        # 0x14004cfa8
   14000b887:	mov    QWORD PTR [rdi+0x2f8],r11
   14000b88e:	mov    QWORD PTR [rdi+0x3a0],rbp
   14000b895:	mov    DWORD PTR [rdi+0x3a8],ebp
   14000b89b:	lea    rcx,[rdi+0x3b0]
   14000b8a2:	call   0x140016de8
   14000b8a7:	lea    rsi,[rip+0x3a12a]        # 0x1400459d8
   14000b8ae:	mov    QWORD PTR [rdi+0x3b0],rsi
   14000b8b5:	lea    rcx,[rdi+0x458]
   14000b8bc:	call   0x140016de8
   14000b8c1:	mov    QWORD PTR [rdi+0x458],rsi
   14000b8c8:	lea    rcx,[rdi+0x500]
   14000b8cf:	call   0x140016de8
   14000b8d4:	mov    QWORD PTR [rdi+0x500],rsi
   14000b8db:	lea    rcx,[rdi+0x5a8]
   14000b8e2:	call   0x140016de8
   14000b8e7:	mov    QWORD PTR [rdi+0x5a8],rsi
   14000b8ee:	lea    rcx,[rdi+0x650]
   14000b8f5:	call   0x140016de8
   14000b8fa:	mov    QWORD PTR [rdi+0x650],rsi
   14000b901:	lea    rcx,[rdi+0x6f8]
   14000b908:	call   0x140016de8
   14000b90d:	mov    QWORD PTR [rdi+0x6f8],rsi
   14000b914:	lea    rcx,[rdi+0x7a0]
   14000b91b:	call   0x140016de8
   14000b920:	mov    QWORD PTR [rdi+0x7a0],rsi
   14000b927:	mov    QWORD PTR [rdi+0xf0],rbp
   14000b92e:	mov    rax,rdi
   14000b931:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b936:	mov    rbp,QWORD PTR [rsp+0x50]
   14000b93b:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b940:	add    rsp,0x30
   14000b944:	pop    rdi
   14000b945:	ret    
   14000b946:	int3   
   14000b947:	int3   
   14000b948:	int3   
   14000b949:	int3   
   14000b94a:	int3   
   14000b94b:	int3   
   14000b94c:	int3   
   14000b94d:	int3   
   14000b94e:	int3   
   14000b94f:	int3   
   14000b950:	rex push rbp
   14000b952:	sub    rsp,0x20
   14000b956:	mov    rbp,rdx
   14000b959:	mov    rcx,QWORD PTR [rbp+0x40]
   14000b95d:	call   0x14000dd20
   14000b962:	add    rsp,0x20
   14000b966:	pop    rbp
   14000b967:	ret    
   14000b968:	int3   
   14000b969:	int3   
   14000b96a:	int3   
   14000b96b:	int3   
   14000b96c:	int3   
   14000b96d:	int3   
   14000b96e:	int3   
   14000b96f:	int3   
   14000b970:	rex push rbp
   14000b972:	sub    rsp,0x20
   14000b976:	mov    rbp,rdx
   14000b979:	mov    rcx,QWORD PTR [rbp+0x40]
   14000b97d:	add    rcx,0xf8
   14000b984:	call   0x140003de0
   14000b989:	add    rsp,0x20
   14000b98d:	pop    rbp
   14000b98e:	ret    
   14000b98f:	int3   
   14000b990:	rex push rbp
   14000b992:	sub    rsp,0x20
   14000b996:	mov    rbp,rdx
   14000b999:	mov    rcx,QWORD PTR [rbp+0x40]
   14000b99d:	add    rcx,0x100
   14000b9a4:	call   0x14001e2f4
   14000b9a9:	add    rsp,0x20
   14000b9ad:	pop    rbp
   14000b9ae:	ret    
   14000b9af:	int3   
   14000b9b0:	rex push rbp
   14000b9b2:	sub    rsp,0x20
   14000b9b6:	mov    rbp,rdx
   14000b9b9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000b9bd:	add    rcx,0x1a8
   14000b9c4:	call   0x14001e2f4
   14000b9c9:	add    rsp,0x20
   14000b9cd:	pop    rbp
   14000b9ce:	ret    
   14000b9cf:	int3   
   14000b9d0:	rex push rbp
   14000b9d2:	sub    rsp,0x20
   14000b9d6:	mov    rbp,rdx
   14000b9d9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000b9dd:	add    rcx,0x250
   14000b9e4:	call   0x1400212fc
   14000b9e9:	add    rsp,0x20
   14000b9ed:	pop    rbp
   14000b9ee:	ret    
   14000b9ef:	int3   
   14000b9f0:	rex push rbp
   14000b9f2:	sub    rsp,0x20
   14000b9f6:	mov    rbp,rdx
   14000b9f9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000b9fd:	add    rcx,0x2f8
   14000ba04:	call   0x140012760
   14000ba09:	add    rsp,0x20
   14000ba0d:	pop    rbp
   14000ba0e:	ret    
   14000ba0f:	int3   
   14000ba10:	rex push rbp
   14000ba12:	sub    rsp,0x20
   14000ba16:	mov    rbp,rdx
   14000ba19:	mov    rcx,QWORD PTR [rbp+0x40]
   14000ba1d:	add    rcx,0x3b0
   14000ba24:	call   0x14001e22c
   14000ba29:	add    rsp,0x20
   14000ba2d:	pop    rbp
   14000ba2e:	ret    
   14000ba2f:	int3   
   14000ba30:	rex push rbp
   14000ba32:	sub    rsp,0x20
   14000ba36:	mov    rbp,rdx
   14000ba39:	mov    rcx,QWORD PTR [rbp+0x40]
   14000ba3d:	add    rcx,0x458
   14000ba44:	call   0x14001e22c
   14000ba49:	add    rsp,0x20
   14000ba4d:	pop    rbp
   14000ba4e:	ret    
   14000ba4f:	int3   
   14000ba50:	rex push rbp
   14000ba52:	sub    rsp,0x20
   14000ba56:	mov    rbp,rdx
   14000ba59:	mov    rcx,QWORD PTR [rbp+0x40]
   14000ba5d:	add    rcx,0x500
   14000ba64:	call   0x14001e22c
   14000ba69:	add    rsp,0x20
   14000ba6d:	pop    rbp
   14000ba6e:	ret    
   14000ba6f:	int3   
   14000ba70:	rex push rbp
   14000ba72:	sub    rsp,0x20
   14000ba76:	mov    rbp,rdx
   14000ba79:	mov    rcx,QWORD PTR [rbp+0x40]
   14000ba7d:	add    rcx,0x5a8
   14000ba84:	call   0x14001e22c
   14000ba89:	add    rsp,0x20
   14000ba8d:	pop    rbp
   14000ba8e:	ret    
   14000ba8f:	int3   
   14000ba90:	rex push rbp
   14000ba92:	sub    rsp,0x20
   14000ba96:	mov    rbp,rdx
   14000ba99:	mov    rcx,QWORD PTR [rbp+0x40]
   14000ba9d:	add    rcx,0x650
   14000baa4:	call   0x14001e22c
   14000baa9:	add    rsp,0x20
   14000baad:	pop    rbp
   14000baae:	ret    
   14000baaf:	int3   
   14000bab0:	rex push rbp
   14000bab2:	sub    rsp,0x20
   14000bab6:	mov    rbp,rdx
   14000bab9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000babd:	add    rcx,0x6f8
   14000bac4:	call   0x14001e22c
   14000bac9:	add    rsp,0x20
   14000bacd:	pop    rbp
   14000bace:	ret    
   14000bacf:	int3   
   14000bad0:	mov    QWORD PTR [rsp+0x8],rcx
   14000bad5:	push   rdi
   14000bad6:	sub    rsp,0x30
   14000bada:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000bae3:	mov    QWORD PTR [rsp+0x48],rbx
   14000bae8:	mov    edi,edx
   14000baea:	mov    rbx,rcx
   14000baed:	lea    rax,[rip+0x3fac4]        # 0x14004b5b8
   14000baf4:	mov    QWORD PTR [rcx],rax
   14000baf7:	add    rcx,0x7a0
   14000bafe:	call   0x14001e22c
   14000bb03:	nop
   14000bb04:	lea    rcx,[rbx+0x6f8]
   14000bb0b:	call   0x14001e22c
   14000bb10:	nop
   14000bb11:	lea    rcx,[rbx+0x650]
   14000bb18:	call   0x14001e22c
   14000bb1d:	nop
   14000bb1e:	lea    rcx,[rbx+0x5a8]
   14000bb25:	call   0x14001e22c
   14000bb2a:	nop
   14000bb2b:	lea    rcx,[rbx+0x500]
   14000bb32:	call   0x14001e22c
   14000bb37:	nop
   14000bb38:	lea    rcx,[rbx+0x458]
   14000bb3f:	call   0x14001e22c
   14000bb44:	nop
   14000bb45:	lea    rcx,[rbx+0x3b0]
   14000bb4c:	call   0x14001e22c
   14000bb51:	nop
   14000bb52:	lea    rcx,[rbx+0x2f8]
   14000bb59:	lea    rax,[rip+0x41448]        # 0x14004cfa8
   14000bb60:	mov    QWORD PTR [rcx],rax
   14000bb63:	call   0x14001e22c
   14000bb68:	nop
   14000bb69:	lea    rcx,[rbx+0x250]
   14000bb70:	call   0x1400212fc
   14000bb75:	nop
   14000bb76:	lea    rcx,[rbx+0x1a8]
   14000bb7d:	call   0x14001e2f4
   14000bb82:	nop
   14000bb83:	lea    rcx,[rbx+0x100]
   14000bb8a:	call   0x14001e2f4
   14000bb8f:	nop
   14000bb90:	mov    rdx,QWORD PTR [rbx+0xf8]
   14000bb97:	sub    rdx,0x18
   14000bb9b:	or     eax,0xffffffff
   14000bb9e:	lock xadd DWORD PTR [rdx+0x10],eax
   14000bba3:	add    eax,0xffffffff
   14000bba6:	test   eax,eax
   14000bba8:	jg     0x14000bbb4
   14000bbaa:	mov    rcx,QWORD PTR [rdx]
   14000bbad:	mov    rax,QWORD PTR [rcx]
   14000bbb0:	call   QWORD PTR [rax+0x8]
   14000bbb3:	nop
   14000bbb4:	lea    rax,[rip+0x400dd]        # 0x14004bc98
   14000bbbb:	mov    QWORD PTR [rbx],rax
   14000bbbe:	mov    rcx,rbx
   14000bbc1:	call   0x14001d2ac
   14000bbc6:	test   dil,0x1
   14000bbca:	je     0x14000bbd9
   14000bbcc:	mov    rcx,rbx
   14000bbcf:	call   0x14001490c
   14000bbd4:	mov    rax,rbx
   14000bbd7:	jmp    0x14000bbdc
   14000bbd9:	mov    rax,rbx
   14000bbdc:	mov    rbx,QWORD PTR [rsp+0x48]
   14000bbe1:	add    rsp,0x30
   14000bbe5:	pop    rdi
   14000bbe6:	ret    
   14000bbe7:	int3   
   14000bbe8:	int3   
   14000bbe9:	int3   
   14000bbea:	int3   
   14000bbeb:	int3   
   14000bbec:	int3   
   14000bbed:	int3   
   14000bbee:	int3   
   14000bbef:	int3   
   14000bbf0:	rex push rbp
   14000bbf2:	sub    rsp,0x20
   14000bbf6:	mov    rbp,rdx
   14000bbf9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bbfd:	call   0x14000dd20
   14000bc02:	add    rsp,0x20
   14000bc06:	pop    rbp
   14000bc07:	ret    
   14000bc08:	int3   
   14000bc09:	int3   
   14000bc0a:	int3   
   14000bc0b:	int3   
   14000bc0c:	int3   
   14000bc0d:	int3   
   14000bc0e:	int3   
   14000bc0f:	int3   
   14000bc10:	rex push rbp
   14000bc12:	sub    rsp,0x20
   14000bc16:	mov    rbp,rdx
   14000bc19:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bc1d:	add    rcx,0xf8
   14000bc24:	call   0x140003de0
   14000bc29:	add    rsp,0x20
   14000bc2d:	pop    rbp
   14000bc2e:	ret    
   14000bc2f:	int3   
   14000bc30:	rex push rbp
   14000bc32:	sub    rsp,0x20
   14000bc36:	mov    rbp,rdx
   14000bc39:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bc3d:	add    rcx,0x100
   14000bc44:	call   0x14001e2f4
   14000bc49:	add    rsp,0x20
   14000bc4d:	pop    rbp
   14000bc4e:	ret    
   14000bc4f:	int3   
   14000bc50:	rex push rbp
   14000bc52:	sub    rsp,0x20
   14000bc56:	mov    rbp,rdx
   14000bc59:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bc5d:	add    rcx,0x1a8
   14000bc64:	call   0x14001e2f4
   14000bc69:	add    rsp,0x20
   14000bc6d:	pop    rbp
   14000bc6e:	ret    
   14000bc6f:	int3   
   14000bc70:	rex push rbp
   14000bc72:	sub    rsp,0x20
   14000bc76:	mov    rbp,rdx
   14000bc79:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bc7d:	add    rcx,0x250
   14000bc84:	call   0x1400212fc
   14000bc89:	add    rsp,0x20
   14000bc8d:	pop    rbp
   14000bc8e:	ret    
   14000bc8f:	int3   
   14000bc90:	rex push rbp
   14000bc92:	sub    rsp,0x20
   14000bc96:	mov    rbp,rdx
   14000bc99:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bc9d:	add    rcx,0x2f8
   14000bca4:	call   0x140012760
   14000bca9:	add    rsp,0x20
   14000bcad:	pop    rbp
   14000bcae:	ret    
   14000bcaf:	int3   
   14000bcb0:	rex push rbp
   14000bcb2:	sub    rsp,0x20
   14000bcb6:	mov    rbp,rdx
   14000bcb9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bcbd:	add    rcx,0x3b0
   14000bcc4:	call   0x14001e22c
   14000bcc9:	add    rsp,0x20
   14000bccd:	pop    rbp
   14000bcce:	ret    
   14000bccf:	int3   
   14000bcd0:	rex push rbp
   14000bcd2:	sub    rsp,0x20
   14000bcd6:	mov    rbp,rdx
   14000bcd9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bcdd:	add    rcx,0x458
   14000bce4:	call   0x14001e22c
   14000bce9:	add    rsp,0x20
   14000bced:	pop    rbp
   14000bcee:	ret    
   14000bcef:	int3   
   14000bcf0:	rex push rbp
   14000bcf2:	sub    rsp,0x20
   14000bcf6:	mov    rbp,rdx
   14000bcf9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bcfd:	add    rcx,0x500
   14000bd04:	call   0x14001e22c
   14000bd09:	add    rsp,0x20
   14000bd0d:	pop    rbp
   14000bd0e:	ret    
   14000bd0f:	int3   
   14000bd10:	rex push rbp
   14000bd12:	sub    rsp,0x20
   14000bd16:	mov    rbp,rdx
   14000bd19:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bd1d:	add    rcx,0x5a8
   14000bd24:	call   0x14001e22c
   14000bd29:	add    rsp,0x20
   14000bd2d:	pop    rbp
   14000bd2e:	ret    
   14000bd2f:	int3   
   14000bd30:	rex push rbp
   14000bd32:	sub    rsp,0x20
   14000bd36:	mov    rbp,rdx
   14000bd39:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bd3d:	add    rcx,0x650
   14000bd44:	call   0x14001e22c
   14000bd49:	add    rsp,0x20
   14000bd4d:	pop    rbp
   14000bd4e:	ret    
   14000bd4f:	int3   
   14000bd50:	rex push rbp
   14000bd52:	sub    rsp,0x20
   14000bd56:	mov    rbp,rdx
   14000bd59:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bd5d:	add    rcx,0x6f8
   14000bd64:	call   0x14001e22c
   14000bd69:	add    rsp,0x20
   14000bd6d:	pop    rbp
   14000bd6e:	ret    
   14000bd6f:	int3   
   14000bd70:	mov    QWORD PTR [rsp+0x8],rcx
   14000bd75:	push   rbx
   14000bd76:	sub    rsp,0x30
   14000bd7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000bd83:	mov    rbx,rcx
   14000bd86:	lea    rax,[rip+0x3f82b]        # 0x14004b5b8
   14000bd8d:	mov    QWORD PTR [rcx],rax
   14000bd90:	add    rcx,0x7a0
   14000bd97:	call   0x14001e22c
   14000bd9c:	nop
   14000bd9d:	lea    rcx,[rbx+0x6f8]
   14000bda4:	call   0x14001e22c
   14000bda9:	nop
   14000bdaa:	lea    rcx,[rbx+0x650]
   14000bdb1:	call   0x14001e22c
   14000bdb6:	nop
   14000bdb7:	lea    rcx,[rbx+0x5a8]
   14000bdbe:	call   0x14001e22c
   14000bdc3:	nop
   14000bdc4:	lea    rcx,[rbx+0x500]
   14000bdcb:	call   0x14001e22c
   14000bdd0:	nop
   14000bdd1:	lea    rcx,[rbx+0x458]
   14000bdd8:	call   0x14001e22c
   14000bddd:	nop
   14000bdde:	lea    rcx,[rbx+0x3b0]
   14000bde5:	call   0x14001e22c
   14000bdea:	nop
   14000bdeb:	lea    rcx,[rbx+0x2f8]
   14000bdf2:	lea    rax,[rip+0x411af]        # 0x14004cfa8
   14000bdf9:	mov    QWORD PTR [rcx],rax
   14000bdfc:	call   0x14001e22c
   14000be01:	nop
   14000be02:	lea    rcx,[rbx+0x250]
   14000be09:	call   0x1400212fc
   14000be0e:	nop
   14000be0f:	lea    rcx,[rbx+0x1a8]
   14000be16:	call   0x14001e2f4
   14000be1b:	nop
   14000be1c:	lea    rcx,[rbx+0x100]
   14000be23:	call   0x14001e2f4
   14000be28:	nop
   14000be29:	mov    rdx,QWORD PTR [rbx+0xf8]
   14000be30:	sub    rdx,0x18
   14000be34:	or     eax,0xffffffff
   14000be37:	lock xadd DWORD PTR [rdx+0x10],eax
   14000be3c:	add    eax,0xffffffff
   14000be3f:	test   eax,eax
   14000be41:	jg     0x14000be4d
   14000be43:	mov    rcx,QWORD PTR [rdx]
   14000be46:	mov    rax,QWORD PTR [rcx]
   14000be49:	call   QWORD PTR [rax+0x8]
   14000be4c:	nop
   14000be4d:	lea    rax,[rip+0x3fe44]        # 0x14004bc98
   14000be54:	mov    QWORD PTR [rbx],rax
   14000be57:	mov    rcx,rbx
   14000be5a:	add    rsp,0x30
   14000be5e:	pop    rbx
   14000be5f:	jmp    0x14001d2ac
   14000be64:	int3   
   14000be65:	int3   
   14000be66:	int3   
   14000be67:	int3   
   14000be68:	int3   
   14000be69:	int3   
   14000be6a:	int3   
   14000be6b:	int3   
   14000be6c:	int3   
   14000be6d:	int3   
   14000be6e:	int3   
   14000be6f:	int3   
   14000be70:	rex push rbp
   14000be72:	sub    rsp,0x20
   14000be76:	mov    rbp,rdx
   14000be79:	mov    rcx,QWORD PTR [rbp+0x40]
   14000be7d:	call   0x14000dd20
   14000be82:	add    rsp,0x20
   14000be86:	pop    rbp
   14000be87:	ret    
   14000be88:	int3   
   14000be89:	int3   
   14000be8a:	int3   
   14000be8b:	int3   
   14000be8c:	int3   
   14000be8d:	int3   
   14000be8e:	int3   
   14000be8f:	int3   
   14000be90:	rex push rbp
   14000be92:	sub    rsp,0x20
   14000be96:	mov    rbp,rdx
   14000be99:	mov    rcx,QWORD PTR [rbp+0x40]
   14000be9d:	add    rcx,0xf8
   14000bea4:	call   0x140003de0
   14000bea9:	add    rsp,0x20
   14000bead:	pop    rbp
   14000beae:	ret    
   14000beaf:	int3   
   14000beb0:	rex push rbp
   14000beb2:	sub    rsp,0x20
   14000beb6:	mov    rbp,rdx
   14000beb9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bebd:	add    rcx,0x100
   14000bec4:	call   0x14001e2f4
   14000bec9:	add    rsp,0x20
   14000becd:	pop    rbp
   14000bece:	ret    
   14000becf:	int3   
   14000bed0:	rex push rbp
   14000bed2:	sub    rsp,0x20
   14000bed6:	mov    rbp,rdx
   14000bed9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bedd:	add    rcx,0x1a8
   14000bee4:	call   0x14001e2f4
   14000bee9:	add    rsp,0x20
   14000beed:	pop    rbp
   14000beee:	ret    
   14000beef:	int3   
   14000bef0:	rex push rbp
   14000bef2:	sub    rsp,0x20
   14000bef6:	mov    rbp,rdx
   14000bef9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000befd:	add    rcx,0x250
   14000bf04:	call   0x1400212fc
   14000bf09:	add    rsp,0x20
   14000bf0d:	pop    rbp
   14000bf0e:	ret    
   14000bf0f:	int3   
   14000bf10:	rex push rbp
   14000bf12:	sub    rsp,0x20
   14000bf16:	mov    rbp,rdx
   14000bf19:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bf1d:	add    rcx,0x2f8
   14000bf24:	call   0x140012760
   14000bf29:	add    rsp,0x20
   14000bf2d:	pop    rbp
   14000bf2e:	ret    
   14000bf2f:	int3   
   14000bf30:	rex push rbp
   14000bf32:	sub    rsp,0x20
   14000bf36:	mov    rbp,rdx
   14000bf39:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bf3d:	add    rcx,0x3b0
   14000bf44:	call   0x14001e22c
   14000bf49:	add    rsp,0x20
   14000bf4d:	pop    rbp
   14000bf4e:	ret    
   14000bf4f:	int3   
   14000bf50:	rex push rbp
   14000bf52:	sub    rsp,0x20
   14000bf56:	mov    rbp,rdx
   14000bf59:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bf5d:	add    rcx,0x458
   14000bf64:	call   0x14001e22c
   14000bf69:	add    rsp,0x20
   14000bf6d:	pop    rbp
   14000bf6e:	ret    
   14000bf6f:	int3   
   14000bf70:	rex push rbp
   14000bf72:	sub    rsp,0x20
   14000bf76:	mov    rbp,rdx
   14000bf79:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bf7d:	add    rcx,0x500
   14000bf84:	call   0x14001e22c
   14000bf89:	add    rsp,0x20
   14000bf8d:	pop    rbp
   14000bf8e:	ret    
   14000bf8f:	int3   
   14000bf90:	rex push rbp
   14000bf92:	sub    rsp,0x20
   14000bf96:	mov    rbp,rdx
   14000bf99:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bf9d:	add    rcx,0x5a8
   14000bfa4:	call   0x14001e22c
   14000bfa9:	add    rsp,0x20
   14000bfad:	pop    rbp
   14000bfae:	ret    
   14000bfaf:	int3   
   14000bfb0:	rex push rbp
   14000bfb2:	sub    rsp,0x20
   14000bfb6:	mov    rbp,rdx
   14000bfb9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bfbd:	add    rcx,0x650
   14000bfc4:	call   0x14001e22c
   14000bfc9:	add    rsp,0x20
   14000bfcd:	pop    rbp
   14000bfce:	ret    
   14000bfcf:	int3   
   14000bfd0:	rex push rbp
   14000bfd2:	sub    rsp,0x20
   14000bfd6:	mov    rbp,rdx
   14000bfd9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000bfdd:	add    rcx,0x6f8
   14000bfe4:	call   0x14001e22c
   14000bfe9:	add    rsp,0x20
   14000bfed:	pop    rbp
   14000bfee:	ret    
   14000bfef:	int3   
   14000bff0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bff5:	push   rdi
   14000bff6:	sub    rsp,0x20
   14000bffa:	mov    rdi,rdx
   14000bffd:	lea    r8,[rcx+0x100]
   14000c004:	mov    rbx,rcx
   14000c007:	mov    rcx,rdi
   14000c00a:	mov    edx,0x3e8
   14000c00f:	call   0x14001e4c0
   14000c014:	lea    r8,[rbx+0x250]
   14000c01b:	mov    edx,0x3f3
   14000c020:	mov    rcx,rdi
   14000c023:	call   0x14001e4c0
   14000c028:	lea    r8,[rbx+0x1a8]
   14000c02f:	mov    edx,0x3e9
   14000c034:	mov    rcx,rdi
   14000c037:	call   0x14001e4c0
   14000c03c:	lea    r8,[rbx+0x2f8]
   14000c043:	mov    edx,0x3f6
   14000c048:	mov    rcx,rdi
   14000c04b:	call   0x14001e4c0
   14000c050:	lea    r8,[rbx+0x3b0]
   14000c057:	mov    edx,0x3f7
   14000c05c:	mov    rcx,rdi
   14000c05f:	call   0x14001e4c0
   14000c064:	lea    r8,[rbx+0x458]
   14000c06b:	mov    edx,0x3fa
   14000c070:	mov    rcx,rdi
   14000c073:	call   0x14001e4c0
   14000c078:	lea    r8,[rbx+0x500]
   14000c07f:	mov    edx,0x3fb
   14000c084:	mov    rcx,rdi
   14000c087:	call   0x14001e4c0
   14000c08c:	lea    r8,[rbx+0x5a8]
   14000c093:	mov    edx,0x3fc
   14000c098:	mov    rcx,rdi
   14000c09b:	call   0x14001e4c0
   14000c0a0:	lea    r8,[rbx+0x650]
   14000c0a7:	mov    edx,0x401
   14000c0ac:	mov    rcx,rdi
   14000c0af:	call   0x14001e4c0
   14000c0b4:	lea    r8,[rbx+0x6f8]
   14000c0bb:	mov    edx,0x406
   14000c0c0:	mov    rcx,rdi
   14000c0c3:	call   0x14001e4c0
   14000c0c8:	lea    r8,[rbx+0x7a0]
   14000c0cf:	mov    edx,0x407
   14000c0d4:	mov    rcx,rdi
   14000c0d7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c0dc:	add    rsp,0x20
   14000c0e0:	pop    rdi
   14000c0e1:	jmp    0x14001e4c0
   14000c0e6:	int3   
   14000c0e7:	int3   
   14000c0e8:	int3   
   14000c0e9:	int3   
   14000c0ea:	int3   
   14000c0eb:	int3   
   14000c0ec:	int3   
   14000c0ed:	int3   
   14000c0ee:	int3   
   14000c0ef:	int3   
   14000c0f0:	lea    rax,[rip+0x3f489]        # 0x14004b580
   14000c0f7:	ret    
   14000c0f8:	int3   
   14000c0f9:	int3   
   14000c0fa:	int3   
   14000c0fb:	int3   
   14000c0fc:	int3   
   14000c0fd:	int3   
   14000c0fe:	int3   
   14000c0ff:	int3   
   14000c100:	mov    rax,rsp
   14000c103:	push   rbp
   14000c104:	push   rsi
   14000c105:	push   rdi
   14000c106:	push   r12
   14000c108:	push   r13
   14000c10a:	push   r14
   14000c10c:	push   r15
   14000c10e:	sub    rsp,0x180
   14000c115:	mov    QWORD PTR [rsp+0x168],0xfffffffffffffffe
   14000c121:	mov    QWORD PTR [rax+0x10],rbx
   14000c125:	movaps XMMWORD PTR [rax-0x48],xmm6
   14000c129:	mov    rbp,rcx
   14000c12c:	mov    r8d,0x139d
   14000c132:	mov    rdx,rcx
   14000c135:	call   0x14000ddd0
   14000c13a:	lea    rdx,[rbp+0x100]
   14000c141:	mov    r8d,0x1389
   14000c147:	mov    rcx,rbp
   14000c14a:	call   0x14000ddd0
   14000c14f:	lea    rdx,[rbp+0x1a8]
   14000c156:	mov    r8d,0x138c
   14000c15c:	mov    rcx,rbp
   14000c15f:	call   0x14000ddd0
   14000c164:	lea    rdx,[rbp+0x2f8]
   14000c16b:	mov    r8d,0x138a
   14000c171:	mov    rcx,rbp
   14000c174:	call   0x14000ddd0
   14000c179:	mov    r8d,0x139d
   14000c17f:	lea    rdx,[rbp+0x650]
   14000c186:	mov    rcx,rbp
   14000c189:	call   0x14000ddd0
   14000c18e:	lea    rdx,[rbp+0x3b0]
   14000c195:	mov    r8d,0x138b
   14000c19b:	mov    rcx,rbp
   14000c19e:	call   0x14000ddd0
   14000c1a3:	mov    rsi,QWORD PTR [rip+0x55c2e]        # 0x140061dd8
   14000c1aa:	xor    eax,eax
   14000c1ac:	or     r12,0xffffffffffffffff
   14000c1b0:	mov    rcx,r12
   14000c1b3:	lea    rdi,[rip+0x3e6ee]        # 0x14004a8a8
   14000c1ba:	repnz scas ax,WORD PTR es:[rdi]
   14000c1bd:	not    rcx
   14000c1c0:	lea    r8d,[rcx-0x1]
   14000c1c4:	lea    rdx,[rip+0x3e6dd]        # 0x14004a8a8
   14000c1cb:	lea    rcx,[rbp+0xf8]
   14000c1d2:	call   0x140004590
   14000c1d7:	call   0x14001f2e8
   14000c1dc:	movzx  r9d,WORD PTR [rsi+0xc]
   14000c1e1:	mov    r8d,0x139c
   14000c1e7:	mov    rdx,QWORD PTR [rax+0x10]
   14000c1eb:	lea    rcx,[rbp+0xf8]
   14000c1f2:	call   0x140006d10
   14000c1f7:	xor    eax,eax
   14000c1f9:	lea    rdi,[rip+0x3e6a8]        # 0x14004a8a8
   14000c200:	mov    rsi,QWORD PTR [rbp+0xf8]
   14000c207:	mov    r15d,0x1
   14000c20d:	mov    rcx,r15
   14000c210:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000c213:	je     0x14000c21a
   14000c215:	sbb    eax,eax
   14000c217:	sbb    eax,r12d
   14000c21a:	test   eax,eax
   14000c21c:	sete   al
   14000c21f:	test   al,al
   14000c221:	je     0x14000c243
   14000c223:	call   0x14001f2e8
   14000c228:	mov    r9w,0x409
   14000c22d:	mov    r8d,0x139c
   14000c233:	mov    rdx,QWORD PTR [rax+0x10]
   14000c237:	lea    rcx,[rbp+0xf8]
   14000c23e:	call   0x140006d10
   14000c243:	call   0x14002157c
   14000c248:	mov    rdx,rax
   14000c24b:	xor    r14d,r14d
   14000c24e:	mov    ecx,r14d
   14000c251:	test   rax,rax
   14000c254:	setne  cl
   14000c257:	test   ecx,ecx
   14000c259:	jne    0x14000c266
   14000c25b:	mov    ecx,0x80004005
   14000c260:	call   0x140003dc0
   14000c265:	int3   
   14000c266:	mov    rax,QWORD PTR [rax]
   14000c269:	mov    rcx,rdx
   14000c26c:	call   QWORD PTR [rax+0x18]
   14000c26f:	lea    rbx,[rax+0x18]
   14000c273:	mov    QWORD PTR [rsp+0x1d0],rbx
   14000c27b:	lea    rdx,[rip+0x3f30e]        # 0x14004b590
   14000c282:	test   rdx,0xffffffffffff0000
   14000c289:	jne    0x14000c2be
   14000c28b:	movzx  edi,dx
   14000c28e:	mov    ecx,edi
   14000c290:	call   0x140021f1c
   14000c295:	test   rax,rax
   14000c298:	je     0x14000c3c5
   14000c29e:	mov    r8d,edi
   14000c2a1:	mov    rdx,rax
   14000c2a4:	lea    rcx,[rsp+0x1d0]
   14000c2ac:	call   0x140007010
   14000c2b1:	mov    rbx,QWORD PTR [rsp+0x1d0]
   14000c2b9:	jmp    0x14000c3c5
   14000c2be:	xor    eax,eax
   14000c2c0:	mov    rcx,r12
   14000c2c3:	mov    rdi,rdx
   14000c2c6:	repnz scas ax,WORD PTR es:[rdi]
   14000c2c9:	not    rcx
   14000c2cc:	sub    rcx,0x1
   14000c2d0:	mov    rdi,rcx
   14000c2d3:	test   ecx,ecx
   14000c2d5:	jne    0x14000c33a
   14000c2d7:	lea    rdx,[rbx-0x18]
   14000c2db:	mov    rdi,QWORD PTR [rdx]
   14000c2de:	cmp    DWORD PTR [rdx+0x8],eax
   14000c2e1:	je     0x14000c3c5
   14000c2e7:	cmp    DWORD PTR [rdx+0x10],eax
   14000c2ea:	jge    0x14000c308
   14000c2ec:	cmp    DWORD PTR [rbx-0xc],eax
   14000c2ef:	jge    0x14000c2fc
   14000c2f1:	mov    ecx,0x80070057
   14000c2f6:	call   0x140003dc0
   14000c2fb:	int3   
   14000c2fc:	mov    DWORD PTR [rbx-0x10],r14d
   14000c300:	mov    WORD PTR [rbx],ax
   14000c303:	jmp    0x14000c3c5
   14000c308:	mov    eax,r12d
   14000c30b:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c310:	add    eax,0xffffffff
   14000c313:	test   eax,eax
   14000c315:	jg     0x14000c320
   14000c317:	mov    rcx,QWORD PTR [rdx]
   14000c31a:	mov    rax,QWORD PTR [rcx]
   14000c31d:	call   QWORD PTR [rax+0x8]
   14000c320:	mov    rax,QWORD PTR [rdi]
   14000c323:	mov    rcx,rdi
   14000c326:	call   QWORD PTR [rax+0x18]
   14000c329:	lea    rbx,[rax+0x18]
   14000c32d:	mov    QWORD PTR [rsp+0x1d0],rbx
   14000c335:	jmp    0x14000c3c5
   14000c33a:	mov    esi,DWORD PTR [rbx-0x10]
   14000c33d:	mov    r13,rdx
   14000c340:	sub    r13,rbx
   14000c343:	sar    r13,1
   14000c346:	mov    ecx,r15d
   14000c349:	sub    ecx,DWORD PTR [rbx-0x8]
   14000c34c:	mov    eax,DWORD PTR [rbx-0xc]
   14000c34f:	sub    eax,edi
   14000c351:	or     eax,ecx
   14000c353:	jge    0x14000c373
   14000c355:	mov    edx,edi
   14000c357:	lea    rcx,[rsp+0x1d0]
   14000c35f:	call   0x140004370
   14000c364:	mov    rbx,QWORD PTR [rsp+0x1d0]
   14000c36c:	lea    rdx,[rip+0x3f21d]        # 0x14004b590
   14000c373:	cmp    r13,rsi
   14000c376:	ja     0x14000c393
   14000c378:	movsxd rax,edi
   14000c37b:	lea    rsi,[rax+rax*1]
   14000c37f:	lea    r8,[rbx+r13*2]
   14000c383:	mov    r9,rsi
   14000c386:	mov    rdx,rsi
   14000c389:	mov    rcx,rbx
   14000c38c:	call   0x140029b60
   14000c391:	jmp    0x14000c3ab
   14000c393:	movsxd rax,edi
   14000c396:	lea    rsi,[rax+rax*1]
   14000c39a:	mov    r9,rsi
   14000c39d:	mov    r8,rdx
   14000c3a0:	mov    rdx,rsi
   14000c3a3:	mov    rcx,rbx
   14000c3a6:	call   0x140029bf0
   14000c3ab:	test   edi,edi
   14000c3ad:	js     0x14000d03f
   14000c3b3:	cmp    edi,DWORD PTR [rbx-0xc]
   14000c3b6:	jg     0x14000d03f
   14000c3bc:	mov    DWORD PTR [rbx-0x10],edi
   14000c3bf:	mov    WORD PTR [rsi+rbx*1],0x0
   14000c3c5:	call   0x14002157c
   14000c3ca:	mov    rdx,rax
   14000c3cd:	mov    ecx,r14d
   14000c3d0:	test   rax,rax
   14000c3d3:	setne  cl
   14000c3d6:	test   ecx,ecx
   14000c3d8:	jne    0x14000c3e5
   14000c3da:	mov    ecx,0x80004005
   14000c3df:	call   0x140003dc0
   14000c3e4:	int3   
   14000c3e5:	mov    rax,QWORD PTR [rax]
   14000c3e8:	mov    rcx,rdx
   14000c3eb:	call   QWORD PTR [rax+0x18]
   14000c3ee:	lea    rsi,[rax+0x18]
   14000c3f2:	mov    QWORD PTR [rsp+0x1c0],rsi
   14000c3fa:	lea    rdx,[rip+0x3f193]        # 0x14004b594
   14000c401:	test   rdx,0xffffffffffff0000
   14000c408:	jne    0x14000c43d
   14000c40a:	movzx  edi,dx
   14000c40d:	mov    ecx,edi
   14000c40f:	call   0x140021f1c
   14000c414:	test   rax,rax
   14000c417:	je     0x14000c552
   14000c41d:	mov    r8d,edi
   14000c420:	mov    rdx,rax
   14000c423:	lea    rcx,[rsp+0x1c0]
   14000c42b:	call   0x140007010
   14000c430:	mov    rsi,QWORD PTR [rsp+0x1c0]
   14000c438:	jmp    0x14000c552
   14000c43d:	xor    eax,eax
   14000c43f:	mov    rcx,r12
   14000c442:	mov    rdi,rdx
   14000c445:	repnz scas ax,WORD PTR es:[rdi]
   14000c448:	not    rcx
   14000c44b:	sub    rcx,0x1
   14000c44f:	mov    rdi,rcx
   14000c452:	test   ecx,ecx
   14000c454:	jne    0x14000c4c1
   14000c456:	lea    rdx,[rsi-0x18]
   14000c45a:	mov    rdi,QWORD PTR [rdx]
   14000c45d:	cmp    DWORD PTR [rdx+0x8],eax
   14000c460:	je     0x14000c552
   14000c466:	cmp    DWORD PTR [rdx+0x10],eax
   14000c469:	jge    0x14000c487
   14000c46b:	cmp    DWORD PTR [rsi-0xc],eax
   14000c46e:	jge    0x14000c47b
   14000c470:	mov    ecx,0x80070057
   14000c475:	call   0x140003dc0
   14000c47a:	int3   
   14000c47b:	mov    DWORD PTR [rsi-0x10],r14d
   14000c47f:	mov    WORD PTR [rsi],ax
   14000c482:	jmp    0x14000c552
   14000c487:	mov    eax,r12d
   14000c48a:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c48f:	add    eax,0xffffffff
   14000c492:	test   eax,eax
   14000c494:	jg     0x14000c49f
   14000c496:	mov    rcx,QWORD PTR [rdx]
   14000c499:	mov    rax,QWORD PTR [rcx]
   14000c49c:	call   QWORD PTR [rax+0x8]
   14000c49f:	mov    rax,QWORD PTR [rdi]
   14000c4a2:	mov    rcx,rdi
   14000c4a5:	call   QWORD PTR [rax+0x18]
   14000c4a8:	lea    rsi,[rax+0x18]
   14000c4ac:	mov    QWORD PTR [rsp+0x1c0],rsi
   14000c4b4:	mov    rbx,QWORD PTR [rsp+0x1d0]
   14000c4bc:	jmp    0x14000c552
   14000c4c1:	mov    r13d,DWORD PTR [rsi-0x10]
   14000c4c5:	mov    r14,rdx
   14000c4c8:	sub    r14,rsi
   14000c4cb:	sar    r14,1
   14000c4ce:	mov    ecx,r15d
   14000c4d1:	sub    ecx,DWORD PTR [rsi-0x8]
   14000c4d4:	mov    eax,DWORD PTR [rsi-0xc]
   14000c4d7:	sub    eax,edi
   14000c4d9:	or     eax,ecx
   14000c4db:	jge    0x14000c4fb
   14000c4dd:	mov    edx,edi
   14000c4df:	lea    rcx,[rsp+0x1c0]
   14000c4e7:	call   0x140004370
   14000c4ec:	mov    rsi,QWORD PTR [rsp+0x1c0]
   14000c4f4:	lea    rdx,[rip+0x3f099]        # 0x14004b594
   14000c4fb:	cmp    r14,r13
   14000c4fe:	ja     0x14000c51b
   14000c500:	movsxd rax,edi
   14000c503:	lea    r13,[rax+rax*1]
   14000c507:	lea    r8,[rsi+r14*2]
   14000c50b:	mov    r9,r13
   14000c50e:	mov    rdx,r13
   14000c511:	mov    rcx,rsi
   14000c514:	call   0x140029b60
   14000c519:	jmp    0x14000c533
   14000c51b:	movsxd rax,edi
   14000c51e:	lea    r13,[rax+rax*1]
   14000c522:	mov    r9,r13
   14000c525:	mov    r8,rdx
   14000c528:	mov    rdx,r13
   14000c52b:	mov    rcx,rsi
   14000c52e:	call   0x140029bf0
   14000c533:	test   edi,edi
   14000c535:	js     0x14000d034
   14000c53b:	cmp    edi,DWORD PTR [rsi-0xc]
   14000c53e:	jg     0x14000d034
   14000c544:	mov    DWORD PTR [rsi-0x10],edi
   14000c547:	mov    WORD PTR [r13+rsi*1+0x0],0x0
   14000c54f:	xor    r14d,r14d
   14000c552:	mov    rax,QWORD PTR [rip+0x5587f]        # 0x140061dd8
   14000c559:	movzx  ecx,WORD PTR [rax+0xc]
   14000c55d:	cmp    ecx,0x404
   14000c563:	je     0x14000c585
   14000c565:	cmp    ecx,0x410
   14000c56b:	jle    0x14000c7a6
   14000c571:	cmp    ecx,0x412
   14000c577:	jle    0x14000c585
   14000c579:	cmp    ecx,0x804
   14000c57f:	jne    0x14000c7a6
   14000c585:	xor    eax,eax
   14000c587:	mov    rcx,r12
   14000c58a:	lea    rdi,[rip+0x3f007]        # 0x14004b598
   14000c591:	repnz scas ax,WORD PTR es:[rdi]
   14000c594:	not    rcx
   14000c597:	sub    rcx,0x1
   14000c59b:	mov    rdi,rcx
   14000c59e:	test   ecx,ecx
   14000c5a0:	jne    0x14000c60d
   14000c5a2:	lea    rdx,[rbx-0x18]
   14000c5a6:	mov    rdi,QWORD PTR [rdx]
   14000c5a9:	cmp    DWORD PTR [rdx+0x8],eax
   14000c5ac:	je     0x14000c69c
   14000c5b2:	cmp    DWORD PTR [rdx+0x10],eax
   14000c5b5:	jge    0x14000c5d3
   14000c5b7:	cmp    DWORD PTR [rbx-0xc],eax
   14000c5ba:	jge    0x14000c5c7
   14000c5bc:	mov    ecx,0x80070057
   14000c5c1:	call   0x140003dc0
   14000c5c6:	int3   
   14000c5c7:	mov    DWORD PTR [rbx-0x10],r14d
   14000c5cb:	mov    WORD PTR [rbx],ax
   14000c5ce:	jmp    0x14000c69c
   14000c5d3:	mov    eax,r12d
   14000c5d6:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c5db:	add    eax,0xffffffff
   14000c5de:	test   eax,eax
   14000c5e0:	jg     0x14000c5eb
   14000c5e2:	mov    rcx,QWORD PTR [rdx]
   14000c5e5:	mov    rax,QWORD PTR [rcx]
   14000c5e8:	call   QWORD PTR [rax+0x8]
   14000c5eb:	mov    rax,QWORD PTR [rdi]
   14000c5ee:	mov    rcx,rdi
   14000c5f1:	call   QWORD PTR [rax+0x18]
   14000c5f4:	add    rax,0x18
   14000c5f8:	mov    QWORD PTR [rsp+0x1d0],rax
   14000c600:	mov    rsi,QWORD PTR [rsp+0x1c0]
   14000c608:	jmp    0x14000c69c
   14000c60d:	mov    r13d,DWORD PTR [rbx-0x10]
   14000c611:	lea    r14,[rip+0x3ef80]        # 0x14004b598
   14000c618:	sub    r14,rbx
   14000c61b:	sar    r14,1
   14000c61e:	mov    ecx,r15d
   14000c621:	sub    ecx,DWORD PTR [rbx-0x8]
   14000c624:	mov    eax,DWORD PTR [rbx-0xc]
   14000c627:	sub    eax,edi
   14000c629:	or     eax,ecx
   14000c62b:	jge    0x14000c644
   14000c62d:	mov    edx,edi
   14000c62f:	lea    rcx,[rsp+0x1d0]
   14000c637:	call   0x140004370
   14000c63c:	mov    rbx,QWORD PTR [rsp+0x1d0]
   14000c644:	cmp    r14,r13
   14000c647:	ja     0x14000c664
   14000c649:	movsxd rax,edi
   14000c64c:	lea    r13,[rax+rax*1]
   14000c650:	lea    r8,[rbx+r14*2]
   14000c654:	mov    r9,r13
   14000c657:	mov    rdx,r13
   14000c65a:	mov    rcx,rbx
   14000c65d:	call   0x140029b60
   14000c662:	jmp    0x14000c680
   14000c664:	movsxd rax,edi
   14000c667:	lea    r13,[rax+rax*1]
   14000c66b:	mov    r9,r13
   14000c66e:	lea    r8,[rip+0x3ef23]        # 0x14004b598
   14000c675:	mov    rdx,r13
   14000c678:	mov    rcx,rbx
   14000c67b:	call   0x140029bf0
   14000c680:	test   edi,edi
   14000c682:	js     0x14000d029
   14000c688:	cmp    edi,DWORD PTR [rbx-0xc]
   14000c68b:	jg     0x14000d029
   14000c691:	mov    DWORD PTR [rbx-0x10],edi
   14000c694:	mov    WORD PTR [r13+rbx*1+0x0],0x0
   14000c69c:	xor    eax,eax
   14000c69e:	mov    rcx,r12
   14000c6a1:	lea    rdi,[rip+0x3eef8]        # 0x14004b5a0
   14000c6a8:	repnz scas ax,WORD PTR es:[rdi]
   14000c6ab:	not    rcx
   14000c6ae:	sub    rcx,0x1
   14000c6b2:	mov    rdi,rcx
   14000c6b5:	test   ecx,ecx
   14000c6b7:	jne    0x14000c71b
   14000c6b9:	lea    rdx,[rsi-0x18]
   14000c6bd:	mov    rdi,QWORD PTR [rdx]
   14000c6c0:	cmp    DWORD PTR [rdx+0x8],eax
   14000c6c3:	je     0x14000c7a6
   14000c6c9:	cmp    DWORD PTR [rdx+0x10],eax
   14000c6cc:	jge    0x14000c6e9
   14000c6ce:	cmp    DWORD PTR [rsi-0xc],eax
   14000c6d1:	jge    0x14000c6de
   14000c6d3:	mov    ecx,0x80070057
   14000c6d8:	call   0x140003dc0
   14000c6dd:	int3   
   14000c6de:	mov    DWORD PTR [rsi-0x10],eax
   14000c6e1:	mov    WORD PTR [rsi],ax
   14000c6e4:	jmp    0x14000c7a6
   14000c6e9:	mov    eax,r12d
   14000c6ec:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c6f1:	add    eax,0xffffffff
   14000c6f4:	test   eax,eax
   14000c6f6:	jg     0x14000c701
   14000c6f8:	mov    rcx,QWORD PTR [rdx]
   14000c6fb:	mov    rax,QWORD PTR [rcx]
   14000c6fe:	call   QWORD PTR [rax+0x8]
   14000c701:	mov    rax,QWORD PTR [rdi]
   14000c704:	mov    rcx,rdi
   14000c707:	call   QWORD PTR [rax+0x18]
   14000c70a:	add    rax,0x18
   14000c70e:	mov    QWORD PTR [rsp+0x1c0],rax
   14000c716:	jmp    0x14000c7a6
   14000c71b:	mov    ebx,DWORD PTR [rsi-0x10]
   14000c71e:	lea    r13,[rip+0x3ee7b]        # 0x14004b5a0
   14000c725:	sub    r13,rsi
   14000c728:	sar    r13,1
   14000c72b:	sub    r15d,DWORD PTR [rsi-0x8]
   14000c72f:	mov    eax,DWORD PTR [rsi-0xc]
   14000c732:	sub    eax,ecx
   14000c734:	or     eax,r15d
   14000c737:	jge    0x14000c750
   14000c739:	mov    edx,ecx
   14000c73b:	lea    rcx,[rsp+0x1c0]
   14000c743:	call   0x140004370
   14000c748:	mov    rsi,QWORD PTR [rsp+0x1c0]
   14000c750:	cmp    r13,rbx
   14000c753:	ja     0x14000c770
   14000c755:	movsxd rax,edi
   14000c758:	lea    rbx,[rax+rax*1]
   14000c75c:	lea    r8,[rsi+r13*2]
   14000c760:	mov    r9,rbx
   14000c763:	mov    rdx,rbx
   14000c766:	mov    rcx,rsi
   14000c769:	call   0x140029b60
   14000c76e:	jmp    0x14000c78c
   14000c770:	movsxd rax,edi
   14000c773:	lea    rbx,[rax+rax*1]
   14000c777:	mov    r9,rbx
   14000c77a:	lea    r8,[rip+0x3ee1f]        # 0x14004b5a0
   14000c781:	mov    rdx,rbx
   14000c784:	mov    rcx,rsi
   14000c787:	call   0x140029bf0
   14000c78c:	test   edi,edi
   14000c78e:	js     0x14000d01e
   14000c794:	cmp    edi,DWORD PTR [rsi-0xc]
   14000c797:	jg     0x14000d01e
   14000c79d:	mov    DWORD PTR [rsi-0x10],edi
   14000c7a0:	mov    WORD PTR [rbx+rsi*1],0x0
   14000c7a6:	lea    r8,[rsp+0x1d0]
   14000c7ae:	lea    rdx,[rbp+0xf8]
   14000c7b5:	lea    rcx,[rsp+0x1d8]
   14000c7bd:	call   0x14000d5c0
   14000c7c2:	nop
   14000c7c3:	lea    rsi,[rbp+0x458]
   14000c7ca:	mov    rdx,QWORD PTR [rax]
   14000c7cd:	mov    rcx,rsi
   14000c7d0:	call   0x14001ffac
   14000c7d5:	nop
   14000c7d6:	mov    rdx,QWORD PTR [rsp+0x1d8]
   14000c7de:	add    rdx,0xffffffffffffffe8
   14000c7e2:	mov    eax,r12d
   14000c7e5:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c7ea:	add    eax,0xffffffff
   14000c7ed:	test   eax,eax
   14000c7ef:	jg     0x14000c7fa
   14000c7f1:	mov    rcx,QWORD PTR [rdx]
   14000c7f4:	mov    rax,QWORD PTR [rcx]
   14000c7f7:	call   QWORD PTR [rax+0x8]
   14000c7fa:	lea    r8,[rsp+0x1c0]
   14000c802:	lea    rdx,[rbp+0xf8]
   14000c809:	lea    rcx,[rsp+0x60]
   14000c80e:	call   0x14000d5c0
   14000c813:	nop
   14000c814:	lea    rbx,[rbp+0x500]
   14000c81b:	mov    rdx,QWORD PTR [rax]
   14000c81e:	mov    rcx,rbx
   14000c821:	call   0x14001ffac
   14000c826:	nop
   14000c827:	mov    rdx,QWORD PTR [rsp+0x60]
   14000c82c:	add    rdx,0xffffffffffffffe8
   14000c830:	mov    eax,r12d
   14000c833:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c838:	add    eax,0xffffffff
   14000c83b:	test   eax,eax
   14000c83d:	jg     0x14000c848
   14000c83f:	mov    rcx,QWORD PTR [rdx]
   14000c842:	mov    rax,QWORD PTR [rcx]
   14000c845:	call   QWORD PTR [rax+0x8]
   14000c848:	mov    rax,QWORD PTR [rip+0x55589]        # 0x140061dd8
   14000c84f:	add    rax,0x20
   14000c853:	jne    0x14000c85a
   14000c855:	xor    r8d,r8d
   14000c858:	jmp    0x14000c85e
   14000c85a:	mov    r8,QWORD PTR [rax+0x8]
   14000c85e:	xor    r9d,r9d
   14000c861:	lea    edx,[r9+0x30]
   14000c865:	mov    rcx,QWORD PTR [rbp+0x140]
   14000c86c:	call   QWORD PTR [rip+0x37176]        # 0x1400439e8
   14000c872:	mov    r8,QWORD PTR [rip+0x5555f]        # 0x140061dd8
   14000c879:	add    r8,0x20
   14000c87d:	je     0x14000c883
   14000c87f:	mov    r8,QWORD PTR [r8+0x8]
   14000c883:	xor    r9d,r9d
   14000c886:	lea    edx,[r9+0x30]
   14000c88a:	mov    rcx,QWORD PTR [rbp+0x1e8]
   14000c891:	call   QWORD PTR [rip+0x37151]        # 0x1400439e8
   14000c897:	mov    r8,QWORD PTR [rip+0x5553a]        # 0x140061dd8
   14000c89e:	add    r8,0x20
   14000c8a2:	je     0x14000c8a8
   14000c8a4:	mov    r8,QWORD PTR [r8+0x8]
   14000c8a8:	xor    r9d,r9d
   14000c8ab:	lea    edx,[r9+0x30]
   14000c8af:	mov    rcx,QWORD PTR [rbp+0x338]
   14000c8b6:	call   QWORD PTR [rip+0x3712c]        # 0x1400439e8
   14000c8bc:	mov    r8,QWORD PTR [rip+0x55515]        # 0x140061dd8
   14000c8c3:	add    r8,0x10
   14000c8c7:	je     0x14000c8cd
   14000c8c9:	mov    r8,QWORD PTR [r8+0x8]
   14000c8cd:	xor    r9d,r9d
   14000c8d0:	lea    edx,[r9+0x30]
   14000c8d4:	mov    rcx,QWORD PTR [rbp+0x690]
   14000c8db:	call   QWORD PTR [rip+0x37107]        # 0x1400439e8
   14000c8e1:	mov    r8,QWORD PTR [rip+0x554f0]        # 0x140061dd8
   14000c8e8:	add    r8,0x10
   14000c8ec:	je     0x14000c8f2
   14000c8ee:	mov    r8,QWORD PTR [r8+0x8]
   14000c8f2:	xor    r9d,r9d
   14000c8f5:	lea    edx,[r9+0x30]
   14000c8f9:	mov    rcx,QWORD PTR [rbp+0x3f0]
   14000c900:	call   QWORD PTR [rip+0x370e2]        # 0x1400439e8
   14000c906:	mov    r8,QWORD PTR [rip+0x554cb]        # 0x140061dd8
   14000c90d:	add    r8,0x20
   14000c911:	je     0x14000c917
   14000c913:	mov    r8,QWORD PTR [r8+0x8]
   14000c917:	xor    r9d,r9d
   14000c91a:	lea    edx,[r9+0x30]
   14000c91e:	mov    rcx,QWORD PTR [rbp+0x498]
   14000c925:	call   QWORD PTR [rip+0x370bd]        # 0x1400439e8
   14000c92b:	mov    r8,QWORD PTR [rip+0x554a6]        # 0x140061dd8
   14000c932:	add    r8,0x20
   14000c936:	je     0x14000c93c
   14000c938:	mov    r8,QWORD PTR [r8+0x8]
   14000c93c:	xor    r9d,r9d
   14000c93f:	lea    edx,[r9+0x30]
   14000c943:	mov    rcx,QWORD PTR [rbp+0x540]
   14000c94a:	call   QWORD PTR [rip+0x37098]        # 0x1400439e8
   14000c950:	mov    rdx,QWORD PTR [rip+0x55481]        # 0x140061dd8
   14000c957:	mov    edi,DWORD PTR [rdx+0x30]
   14000c95a:	test   edi,edi
   14000c95c:	je     0x14000c97f
   14000c95e:	xor    r9d,r9d
   14000c961:	xor    edx,edx
   14000c963:	lea    r8d,[r9+0xd]
   14000c967:	lea    r13,[rbp+0x2f8]
   14000c96e:	mov    rcx,r13
   14000c971:	call   0x14001ff4c
   14000c976:	mov    DWORD PTR [r13+0xb0],edi
   14000c97d:	jmp    0x14000c9a3
   14000c97f:	xor    r9d,r9d
   14000c982:	xor    r8d,r8d
   14000c985:	lea    edx,[r9+0xd]
   14000c989:	lea    r13,[rbp+0x2f8]
   14000c990:	mov    rcx,r13
   14000c993:	call   0x14001ff4c
   14000c998:	mov    DWORD PTR [r13+0xb0],0x0
   14000c9a3:	mov    rax,QWORD PTR [rip+0x5542e]        # 0x140061dd8
   14000c9aa:	mov    r8d,DWORD PTR [rax+0x30]
   14000c9ae:	mov    rdx,r13
   14000c9b1:	mov    rcx,rbp
   14000c9b4:	call   0x14000e090
   14000c9b9:	lea    r14,[rbp+0x1a8]
   14000c9c0:	mov    rdx,r14
   14000c9c3:	mov    rcx,rbp
   14000c9c6:	call   0x14000e4f0
   14000c9cb:	lea    r15,[rbp+0x3b0]
   14000c9d2:	mov    rdx,r15
   14000c9d5:	mov    rcx,rbp
   14000c9d8:	call   0x14000e4f0
   14000c9dd:	lea    rdi,[rbp+0x650]
   14000c9e4:	mov    rdx,rdi
   14000c9e7:	mov    rcx,rbp
   14000c9ea:	call   0x14000e4f0
   14000c9ef:	test   rdi,rdi
   14000c9f2:	je     0x14000ca10
   14000c9f4:	lea    rdx,[rsp+0x40]
   14000c9f9:	mov    rcx,QWORD PTR [rdi+0x40]
   14000c9fd:	call   QWORD PTR [rip+0x36fbd]        # 0x1400439c0
   14000ca03:	lea    rdx,[rsp+0x40]
   14000ca08:	mov    rcx,rbp
   14000ca0b:	call   0x1400209b4
   14000ca10:	lea    rdi,[rbp+0x6f8]
   14000ca17:	test   rdi,rdi
   14000ca1a:	je     0x14000ca38
   14000ca1c:	lea    rdx,[rsp+0x50]
   14000ca21:	mov    rcx,QWORD PTR [rdi+0x40]
   14000ca25:	call   QWORD PTR [rip+0x36f95]        # 0x1400439c0
   14000ca2b:	lea    rdx,[rsp+0x50]
   14000ca30:	mov    rcx,rbp
   14000ca33:	call   0x1400209b4
   14000ca38:	mov    ecx,DWORD PTR [rsp+0x5c]
   14000ca3c:	mov    r9d,DWORD PTR [rsp+0x54]
   14000ca41:	sub    ecx,r9d
   14000ca44:	mov    eax,DWORD PTR [rsp+0x58]
   14000ca48:	mov    r8d,DWORD PTR [rsp+0x48]
   14000ca4d:	sub    eax,r8d
   14000ca50:	mov    DWORD PTR [rsp+0x30],0x14
   14000ca58:	mov    DWORD PTR [rsp+0x28],ecx
   14000ca5c:	mov    DWORD PTR [rsp+0x20],eax
   14000ca60:	xor    edx,edx
   14000ca62:	mov    rcx,rdi
   14000ca65:	call   0x140020160
   14000ca6a:	test   r15,r15
   14000ca6d:	je     0x14000ca8b
   14000ca6f:	lea    rdx,[rsp+0x40]
   14000ca74:	mov    rcx,QWORD PTR [r15+0x40]
   14000ca78:	call   QWORD PTR [rip+0x36f42]        # 0x1400439c0
   14000ca7e:	lea    rdx,[rsp+0x40]
   14000ca83:	mov    rcx,rbp
   14000ca86:	call   0x1400209b4
   14000ca8b:	lea    rdi,[rbp+0x7a0]
   14000ca92:	test   rdi,rdi
   14000ca95:	je     0x14000cab3
   14000ca97:	lea    rdx,[rsp+0x50]
   14000ca9c:	mov    rcx,QWORD PTR [rdi+0x40]
   14000caa0:	call   QWORD PTR [rip+0x36f1a]        # 0x1400439c0
   14000caa6:	lea    rdx,[rsp+0x50]
   14000caab:	mov    rcx,rbp
   14000caae:	call   0x1400209b4
   14000cab3:	mov    ecx,DWORD PTR [rsp+0x5c]
   14000cab7:	mov    r9d,DWORD PTR [rsp+0x54]
   14000cabc:	sub    ecx,r9d
   14000cabf:	mov    eax,DWORD PTR [rsp+0x58]
   14000cac3:	mov    r8d,DWORD PTR [rsp+0x48]
   14000cac8:	sub    eax,r8d
   14000cacb:	mov    DWORD PTR [rsp+0x30],0x14
   14000cad3:	mov    DWORD PTR [rsp+0x28],ecx
   14000cad7:	mov    DWORD PTR [rsp+0x20],eax
   14000cadb:	xor    edx,edx
   14000cadd:	mov    rcx,rdi
   14000cae0:	call   0x140020160
   14000cae5:	test   r14,r14
   14000cae8:	je     0x14000cb06
   14000caea:	lea    rdx,[rsp+0x40]
   14000caef:	mov    rcx,QWORD PTR [r14+0x40]
   14000caf3:	call   QWORD PTR [rip+0x36ec7]        # 0x1400439c0
   14000caf9:	lea    rdx,[rsp+0x40]
   14000cafe:	mov    rcx,rbp
   14000cb01:	call   0x1400209b4
   14000cb06:	movsd  xmm0,QWORD PTR [rip+0x50072]        # 0x14005cb80
   14000cb0e:	mulsd  xmm0,QWORD PTR [rip+0x41052]        # 0x14004db68
   14000cb16:	cvttsd2si eax,xmm0
   14000cb1a:	mov    r8d,DWORD PTR [rsp+0x40]
   14000cb1f:	sub    r8d,eax
   14000cb22:	sub    r8d,DWORD PTR [rsp+0x48]
   14000cb27:	mov    DWORD PTR [rsp+0x30],0x15
   14000cb2f:	xor    eax,eax
   14000cb31:	mov    DWORD PTR [rsp+0x28],eax
   14000cb35:	mov    DWORD PTR [rsp+0x20],eax
   14000cb39:	mov    r9d,DWORD PTR [rsp+0x44]
   14000cb3e:	xor    edx,edx
   14000cb40:	mov    rcx,r14
   14000cb43:	call   0x140020160
   14000cb48:	test   r13,r13
   14000cb4b:	je     0x14000cb6f
   14000cb4d:	lea    rdx,[rsp+0x128]
   14000cb55:	mov    rcx,QWORD PTR [r13+0x40]
   14000cb59:	call   QWORD PTR [rip+0x36e61]        # 0x1400439c0
   14000cb5f:	lea    rdx,[rsp+0x128]
   14000cb67:	mov    rcx,rbp
   14000cb6a:	call   0x1400209b4
   14000cb6f:	lea    r13,[rbp+0x100]
   14000cb76:	test   r13,r13
   14000cb79:	je     0x14000cb9d
   14000cb7b:	lea    rdx,[rsp+0x98]
   14000cb83:	mov    rcx,QWORD PTR [r13+0x40]
   14000cb87:	call   QWORD PTR [rip+0x36e33]        # 0x1400439c0
   14000cb8d:	lea    rdx,[rsp+0x98]
   14000cb95:	mov    rcx,rbp
   14000cb98:	call   0x1400209b4
   14000cb9d:	movsd  xmm0,QWORD PTR [rip+0x4ffe3]        # 0x14005cb88
   14000cba5:	mulsd  xmm0,QWORD PTR [rip+0x40fb3]        # 0x14004db60
   14000cbad:	cvttsd2si eax,xmm0
   14000cbb1:	mov    r9d,DWORD PTR [rsp+0x134]
   14000cbb9:	sub    r9d,eax
   14000cbbc:	mov    DWORD PTR [rsp+0x30],0x15
   14000cbc4:	xor    eax,eax
   14000cbc6:	mov    DWORD PTR [rsp+0x28],eax
   14000cbca:	mov    DWORD PTR [rsp+0x20],eax
   14000cbce:	mov    r8d,DWORD PTR [rsp+0x98]
   14000cbd6:	xor    edx,edx
   14000cbd8:	mov    rcx,r13
   14000cbdb:	call   0x140020160
   14000cbe0:	test   r13,r13
   14000cbe3:	je     0x14000cc07
   14000cbe5:	lea    rdx,[rsp+0x108]
   14000cbed:	mov    rcx,QWORD PTR [r13+0x40]
   14000cbf1:	call   QWORD PTR [rip+0x36dc9]        # 0x1400439c0
   14000cbf7:	lea    rdx,[rsp+0x108]
   14000cbff:	mov    rcx,rbp
   14000cc02:	call   0x1400209b4
   14000cc07:	test   rdi,rdi
   14000cc0a:	je     0x14000cc2e
   14000cc0c:	lea    rdx,[rsp+0xb8]
   14000cc14:	mov    rcx,QWORD PTR [rdi+0x40]
   14000cc18:	call   QWORD PTR [rip+0x36da2]        # 0x1400439c0
   14000cc1e:	lea    rdx,[rsp+0xb8]
   14000cc26:	mov    rcx,rbp
   14000cc29:	call   0x1400209b4
   14000cc2e:	movsd  xmm0,QWORD PTR [rip+0x4ff52]        # 0x14005cb88
   14000cc36:	mulsd  xmm0,QWORD PTR [rip+0x40f1a]        # 0x14004db58
   14000cc3e:	cvttsd2si eax,xmm0
   14000cc42:	mov    r9d,DWORD PTR [rsp+0x114]
   14000cc4a:	sub    r9d,eax
   14000cc4d:	mov    DWORD PTR [rsp+0x30],0x15
   14000cc55:	xor    eax,eax
   14000cc57:	mov    DWORD PTR [rsp+0x28],eax
   14000cc5b:	mov    DWORD PTR [rsp+0x20],eax
   14000cc5f:	mov    r8d,DWORD PTR [rsp+0xb8]
   14000cc67:	xor    edx,edx
   14000cc69:	mov    rcx,rdi
   14000cc6c:	call   0x140020160
   14000cc71:	test   r13,r13
   14000cc74:	je     0x14000cc98
   14000cc76:	lea    rdx,[rsp+0x148]
   14000cc7e:	mov    rcx,QWORD PTR [r13+0x40]
   14000cc82:	call   QWORD PTR [rip+0x36d38]        # 0x1400439c0
   14000cc88:	lea    rdx,[rsp+0x148]
   14000cc90:	mov    rcx,rbp
   14000cc93:	call   0x1400209b4
   14000cc98:	test   r15,r15
   14000cc9b:	je     0x14000ccb9
   14000cc9d:	lea    rdx,[rsp+0x68]
   14000cca2:	mov    rcx,QWORD PTR [r15+0x40]
   14000cca6:	call   QWORD PTR [rip+0x36d14]        # 0x1400439c0
   14000ccac:	lea    rdx,[rsp+0x68]
   14000ccb1:	mov    rcx,rbp
   14000ccb4:	call   0x1400209b4
   14000ccb9:	movsd  xmm0,QWORD PTR [rip+0x4fec7]        # 0x14005cb88
   14000ccc1:	movsd  xmm6,QWORD PTR [rip+0x40e87]        # 0x14004db50
   14000ccc9:	mulsd  xmm0,xmm6
   14000cccd:	cvttsd2si eax,xmm0
   14000ccd1:	mov    r9d,DWORD PTR [rsp+0x154]
   14000ccd9:	sub    r9d,eax
   14000ccdc:	mov    DWORD PTR [rsp+0x30],0x15
   14000cce4:	xor    r13d,r13d
   14000cce7:	mov    DWORD PTR [rsp+0x28],r13d
   14000ccec:	mov    DWORD PTR [rsp+0x20],r13d
   14000ccf1:	mov    r8d,DWORD PTR [rsp+0x68]
   14000ccf6:	xor    edx,edx
   14000ccf8:	mov    rcx,r15
   14000ccfb:	call   0x140020160
   14000cd00:	test   rdi,rdi
   14000cd03:	je     0x14000cd27
   14000cd05:	lea    rdx,[rsp+0xd8]
   14000cd0d:	mov    rcx,QWORD PTR [rdi+0x40]
   14000cd11:	call   QWORD PTR [rip+0x36ca9]        # 0x1400439c0
   14000cd17:	lea    rdx,[rsp+0xd8]
   14000cd1f:	mov    rcx,rbp
   14000cd22:	call   0x1400209b4
   14000cd27:	test   rsi,rsi
   14000cd2a:	je     0x14000cd48
   14000cd2c:	lea    rdx,[rsp+0x78]
   14000cd31:	mov    rcx,QWORD PTR [rsi+0x40]
   14000cd35:	call   QWORD PTR [rip+0x36c85]        # 0x1400439c0
   14000cd3b:	lea    rdx,[rsp+0x78]
   14000cd40:	mov    rcx,rbp
   14000cd43:	call   0x1400209b4
   14000cd48:	movsd  xmm0,QWORD PTR [rip+0x4fe38]        # 0x14005cb88
   14000cd50:	mulsd  xmm0,xmm6
   14000cd54:	cvttsd2si eax,xmm0
   14000cd58:	mov    r9d,DWORD PTR [rsp+0xe4]
   14000cd60:	sub    r9d,eax
   14000cd63:	mov    DWORD PTR [rsp+0x30],0x15
   14000cd6b:	mov    DWORD PTR [rsp+0x28],r13d
   14000cd70:	mov    DWORD PTR [rsp+0x20],r13d
   14000cd75:	mov    r8d,DWORD PTR [rsp+0x78]
   14000cd7a:	xor    edx,edx
   14000cd7c:	mov    rcx,rsi
   14000cd7f:	call   0x140020160
   14000cd84:	test   rdi,rdi
   14000cd87:	je     0x14000cdab
   14000cd89:	lea    rdx,[rsp+0x88]
   14000cd91:	mov    rcx,QWORD PTR [rdi+0x40]
   14000cd95:	call   QWORD PTR [rip+0x36c25]        # 0x1400439c0
   14000cd9b:	lea    rdx,[rsp+0x88]
   14000cda3:	mov    rcx,rbp
   14000cda6:	call   0x1400209b4
   14000cdab:	test   rbx,rbx
   14000cdae:	je     0x14000cdd2
   14000cdb0:	lea    rdx,[rsp+0xa8]
   14000cdb8:	mov    rcx,QWORD PTR [rbx+0x40]
   14000cdbc:	call   QWORD PTR [rip+0x36bfe]        # 0x1400439c0
   14000cdc2:	lea    rdx,[rsp+0xa8]
   14000cdca:	mov    rcx,rbp
   14000cdcd:	call   0x1400209b4
   14000cdd2:	movsd  xmm0,QWORD PTR [rip+0x4fdae]        # 0x14005cb88
   14000cdda:	mulsd  xmm0,xmm6
   14000cdde:	cvttsd2si eax,xmm0
   14000cde2:	mov    r9d,DWORD PTR [rsp+0x94]
   14000cdea:	sub    r9d,eax
   14000cded:	mov    DWORD PTR [rsp+0x30],0x15
   14000cdf5:	mov    DWORD PTR [rsp+0x28],r13d
   14000cdfa:	mov    DWORD PTR [rsp+0x20],r13d
   14000cdff:	mov    r8d,DWORD PTR [rsp+0xa8]
   14000ce07:	xor    edx,edx
   14000ce09:	mov    rcx,rbx
   14000ce0c:	call   0x140020160
   14000ce11:	lea    rsi,[rbp+0x250]
   14000ce18:	test   rdi,rdi
   14000ce1b:	je     0x14000ce3f
   14000ce1d:	lea    rdx,[rsp+0xc8]
   14000ce25:	mov    rcx,QWORD PTR [rdi+0x40]
   14000ce29:	call   QWORD PTR [rip+0x36b91]        # 0x1400439c0
   14000ce2f:	lea    rdx,[rsp+0xc8]
   14000ce37:	mov    rcx,rbp
   14000ce3a:	call   0x1400209b4
   14000ce3f:	test   rsi,rsi
   14000ce42:	je     0x14000ce66
   14000ce44:	lea    rdx,[rsp+0xf8]
   14000ce4c:	mov    rcx,QWORD PTR [rsi+0x40]
   14000ce50:	call   QWORD PTR [rip+0x36b6a]        # 0x1400439c0
   14000ce56:	lea    rdx,[rsp+0xf8]
   14000ce5e:	mov    rcx,rbp
   14000ce61:	call   0x1400209b4
   14000ce66:	movsd  xmm0,QWORD PTR [rip+0x4fd1a]        # 0x14005cb88
   14000ce6e:	mulsd  xmm0,QWORD PTR [rip+0x40cd2]        # 0x14004db48
   14000ce76:	cvttsd2si eax,xmm0
   14000ce7a:	mov    r9d,DWORD PTR [rsp+0xd4]
   14000ce82:	sub    r9d,eax
   14000ce85:	mov    DWORD PTR [rsp+0x30],0x15
   14000ce8d:	mov    DWORD PTR [rsp+0x28],r13d
   14000ce92:	mov    DWORD PTR [rsp+0x20],r13d
   14000ce97:	mov    r8d,DWORD PTR [rsp+0xf8]
   14000ce9f:	xor    edx,edx
   14000cea1:	mov    rcx,rsi
   14000cea4:	call   0x140020160
   14000cea9:	lea    rsi,[rbp+0x5a8]
   14000ceb0:	test   rdi,rdi
   14000ceb3:	je     0x14000ced7
   14000ceb5:	lea    rdx,[rsp+0x118]
   14000cebd:	mov    rcx,QWORD PTR [rdi+0x40]
   14000cec1:	call   QWORD PTR [rip+0x36af9]        # 0x1400439c0
   14000cec7:	lea    rdx,[rsp+0x118]
   14000cecf:	mov    rcx,rbp
   14000ced2:	call   0x1400209b4
   14000ced7:	test   rsi,rsi
   14000ceda:	je     0x14000cefe
   14000cedc:	lea    rdx,[rsp+0x138]
   14000cee4:	mov    rcx,QWORD PTR [rsi+0x40]
   14000cee8:	call   QWORD PTR [rip+0x36ad2]        # 0x1400439c0
   14000ceee:	lea    rdx,[rsp+0x138]
   14000cef6:	mov    rcx,rbp
   14000cef9:	call   0x1400209b4
   14000cefe:	movsd  xmm0,QWORD PTR [rip+0x4fc82]        # 0x14005cb88
   14000cf06:	mulsd  xmm0,QWORD PTR [rip+0x40c32]        # 0x14004db40
   14000cf0e:	cvttsd2si eax,xmm0
   14000cf12:	mov    r9d,DWORD PTR [rsp+0x124]
   14000cf1a:	sub    r9d,eax
   14000cf1d:	mov    DWORD PTR [rsp+0x30],0x15
   14000cf25:	mov    DWORD PTR [rsp+0x28],r13d
   14000cf2a:	mov    DWORD PTR [rsp+0x20],r13d
   14000cf2f:	mov    r8d,DWORD PTR [rsp+0x138]
   14000cf37:	xor    edx,edx
   14000cf39:	mov    rcx,rsi
   14000cf3c:	call   0x140020160
   14000cf41:	test   rdi,rdi
   14000cf44:	je     0x14000cf68
   14000cf46:	lea    rdx,[rsp+0x158]
   14000cf4e:	mov    rcx,QWORD PTR [rdi+0x40]
   14000cf52:	call   QWORD PTR [rip+0x36a68]        # 0x1400439c0
   14000cf58:	lea    rdx,[rsp+0x158]
   14000cf60:	mov    rcx,rbp
   14000cf63:	call   0x1400209b4
   14000cf68:	test   r14,r14
   14000cf6b:	je     0x14000cf8f
   14000cf6d:	lea    rdx,[rsp+0xe8]
   14000cf75:	mov    rcx,QWORD PTR [r14+0x40]
   14000cf79:	call   QWORD PTR [rip+0x36a41]        # 0x1400439c0
   14000cf7f:	lea    rdx,[rsp+0xe8]
   14000cf87:	mov    rcx,rbp
   14000cf8a:	call   0x1400209b4
   14000cf8f:	movsd  xmm0,QWORD PTR [rip+0x4fbf1]        # 0x14005cb88
   14000cf97:	mulsd  xmm0,QWORD PTR [rip+0x40b99]        # 0x14004db38
   14000cf9f:	cvttsd2si eax,xmm0
   14000cfa3:	mov    r9d,DWORD PTR [rsp+0x164]
   14000cfab:	sub    r9d,eax
   14000cfae:	mov    DWORD PTR [rsp+0x30],0x15
   14000cfb6:	mov    DWORD PTR [rsp+0x28],r13d
   14000cfbb:	mov    DWORD PTR [rsp+0x20],r13d
   14000cfc0:	mov    r8d,DWORD PTR [rsp+0xe8]
   14000cfc8:	xor    edx,edx
   14000cfca:	mov    rcx,r14
   14000cfcd:	call   0x140020160
   14000cfd2:	nop
   14000cfd3:	mov    rdx,QWORD PTR [rsp+0x1c0]
   14000cfdb:	add    rdx,0xffffffffffffffe8
   14000cfdf:	mov    eax,r12d
   14000cfe2:	lock xadd DWORD PTR [rdx+0x10],eax
   14000cfe7:	add    eax,0xffffffff
   14000cfea:	test   eax,eax
   14000cfec:	jg     0x14000cff8
   14000cfee:	mov    rcx,QWORD PTR [rdx]
   14000cff1:	mov    rax,QWORD PTR [rcx]
   14000cff4:	call   QWORD PTR [rax+0x8]
   14000cff7:	nop
   14000cff8:	mov    rdx,QWORD PTR [rsp+0x1d0]
   14000d000:	add    rdx,0xffffffffffffffe8
   14000d004:	lock xadd DWORD PTR [rdx+0x10],r12d
   14000d00a:	add    r12d,0xffffffff
   14000d00e:	test   r12d,r12d
   14000d011:	jg     0x14000d04a
   14000d013:	mov    rcx,QWORD PTR [rdx]
   14000d016:	mov    rax,QWORD PTR [rcx]
   14000d019:	call   QWORD PTR [rax+0x8]
   14000d01c:	jmp    0x14000d04a
   14000d01e:	mov    ecx,0x80070057
   14000d023:	call   0x140003dc0
   14000d028:	int3   
   14000d029:	mov    ecx,0x80070057
   14000d02e:	call   0x140003dc0
   14000d033:	nop
   14000d034:	mov    ecx,0x80070057
   14000d039:	call   0x140003dc0
   14000d03e:	nop
   14000d03f:	mov    ecx,0x80070057
   14000d044:	call   0x140003dc0
   14000d049:	nop
   14000d04a:	mov    rbx,QWORD PTR [rsp+0x1c8]
   14000d052:	movaps xmm6,XMMWORD PTR [rsp+0x170]
   14000d05a:	add    rsp,0x180
   14000d061:	pop    r15
   14000d063:	pop    r14
   14000d065:	pop    r13
   14000d067:	pop    r12
   14000d069:	pop    rdi
   14000d06a:	pop    rsi
   14000d06b:	pop    rbp
   14000d06c:	ret    
   14000d06d:	int3   
   14000d06e:	int3   
   14000d06f:	int3   
   14000d070:	rex push rbp
   14000d072:	sub    rsp,0x20
   14000d076:	mov    rbp,rdx
   14000d079:	lea    rcx,[rbp+0x1d0]
   14000d080:	call   0x140003de0
   14000d085:	add    rsp,0x20
   14000d089:	pop    rbp
   14000d08a:	ret    
   14000d08b:	int3   
   14000d08c:	int3   
   14000d08d:	int3   
   14000d08e:	int3   
   14000d08f:	int3   
   14000d090:	rex push rbp
   14000d092:	sub    rsp,0x20
   14000d096:	mov    rbp,rdx
   14000d099:	lea    rcx,[rbp+0x1d0]
   14000d0a0:	call   0x140003de0
   14000d0a5:	add    rsp,0x20
   14000d0a9:	pop    rbp
   14000d0aa:	ret    
   14000d0ab:	int3   
   14000d0ac:	int3   
   14000d0ad:	int3   
   14000d0ae:	int3   
   14000d0af:	int3   
   14000d0b0:	rex push rbp
   14000d0b2:	sub    rsp,0x20
   14000d0b6:	mov    rbp,rdx
   14000d0b9:	lea    rcx,[rbp+0x1c0]
   14000d0c0:	call   0x140003de0
   14000d0c5:	add    rsp,0x20
   14000d0c9:	pop    rbp
   14000d0ca:	ret    
   14000d0cb:	int3   
   14000d0cc:	int3   
   14000d0cd:	int3   
   14000d0ce:	int3   
   14000d0cf:	int3   
   14000d0d0:	rex push rbp
   14000d0d2:	sub    rsp,0x20
   14000d0d6:	mov    rbp,rdx
   14000d0d9:	lea    rcx,[rbp+0x1c0]
   14000d0e0:	call   0x140003de0
   14000d0e5:	add    rsp,0x20
   14000d0e9:	pop    rbp
   14000d0ea:	ret    
   14000d0eb:	int3   
   14000d0ec:	int3   
   14000d0ed:	int3   
   14000d0ee:	int3   
   14000d0ef:	int3   
   14000d0f0:	rex push rbp
   14000d0f2:	sub    rsp,0x20
   14000d0f6:	mov    rbp,rdx
   14000d0f9:	lea    rcx,[rbp+0x1d8]
   14000d100:	call   0x140003de0
   14000d105:	add    rsp,0x20
   14000d109:	pop    rbp
   14000d10a:	ret    
   14000d10b:	int3   
   14000d10c:	int3   
   14000d10d:	int3   
   14000d10e:	int3   
   14000d10f:	int3   
   14000d110:	rex push rbp
   14000d112:	sub    rsp,0x20
   14000d116:	mov    rbp,rdx
   14000d119:	lea    rcx,[rbp+0x60]
   14000d11d:	call   0x140003de0
   14000d122:	add    rsp,0x20
   14000d126:	pop    rbp
   14000d127:	ret    
   14000d128:	int3   
   14000d129:	int3   
   14000d12a:	int3   
   14000d12b:	int3   
   14000d12c:	int3   
   14000d12d:	int3   
   14000d12e:	int3   
   14000d12f:	int3   
   14000d130:	rex push rbx
   14000d132:	sub    rsp,0x20
   14000d136:	mov    rbx,rcx
   14000d139:	call   0x14001d8b8
   14000d13e:	mov    edx,0xfffffff1
   14000d143:	lea    r9d,[rdx+0x10]
   14000d147:	lea    r8d,[rdx+0x1e]
   14000d14b:	lea    rcx,[rbx+0x250]
   14000d152:	call   0x1400214a4
   14000d157:	mov    rcx,QWORD PTR [rbx+0x290]
   14000d15e:	xor    r9d,r9d
   14000d161:	lea    r8d,[r9+0x1]
   14000d165:	mov    edx,0x414
   14000d16a:	call   QWORD PTR [rip+0x36878]        # 0x1400439e8
   14000d170:	mov    eax,0x1
   14000d175:	add    rsp,0x20
   14000d179:	pop    rbx
   14000d17a:	ret    
   14000d17b:	int3   
   14000d17c:	int3   
   14000d17d:	int3   
   14000d17e:	int3   
   14000d17f:	int3   
   14000d180:	rex push rbx
   14000d182:	sub    rsp,0x20
   14000d186:	cmp    QWORD PTR [rcx+0xe8],0x0
   14000d18e:	mov    rbx,rcx
   14000d191:	je     0x14000d264
   14000d197:	mov    rcx,QWORD PTR [rcx+0x140]
   14000d19e:	xor    r9d,r9d
   14000d1a1:	xor    r8d,r8d
   14000d1a4:	mov    edx,0xf0
   14000d1a9:	mov    QWORD PTR [rsp+0x30],rdi
   14000d1ae:	call   QWORD PTR [rip+0x36834]        # 0x1400439e8
   14000d1b4:	xor    edx,edx
   14000d1b6:	cmp    eax,0x1
   14000d1b9:	mov    rax,QWORD PTR [rbx+0xe8]
   14000d1c0:	mov    edi,edx
   14000d1c2:	mov    ecx,DWORD PTR [rax]
   14000d1c4:	sete   dil
   14000d1c8:	test   cl,0x40
   14000d1cb:	je     0x14000d21b
   14000d1cd:	test   cl,0x10
   14000d1d0:	je     0x14000d21b
   14000d1d2:	test   edi,edi
   14000d1d4:	je     0x14000d1e1
   14000d1d6:	bt     ecx,0x9
   14000d1da:	jb     0x14000d1e1
   14000d1dc:	mov    edx,0x1
   14000d1e1:	lea    rcx,[rbx+0x250]
   14000d1e8:	call   0x1400200c4
   14000d1ed:	lea    rcx,[rbx+0x1a8]
   14000d1f4:	mov    edx,edi
   14000d1f6:	call   0x1400200c4
   14000d1fb:	lea    rcx,[rbx+0x458]
   14000d202:	mov    edx,edi
   14000d204:	call   0x1400200c4
   14000d209:	lea    rcx,[rbx+0x500]
   14000d210:	mov    edx,edi
   14000d212:	call   0x1400200c4
   14000d217:	mov    edx,edi
   14000d219:	jmp    0x14000d253
   14000d21b:	lea    rcx,[rbx+0x250]
   14000d222:	call   0x1400200c4
   14000d227:	lea    rcx,[rbx+0x1a8]
   14000d22e:	xor    edx,edx
   14000d230:	call   0x1400200c4
   14000d235:	lea    rcx,[rbx+0x458]
   14000d23c:	xor    edx,edx
   14000d23e:	call   0x1400200c4
   14000d243:	lea    rcx,[rbx+0x500]
   14000d24a:	xor    edx,edx
   14000d24c:	call   0x1400200c4
   14000d251:	xor    edx,edx
   14000d253:	lea    rcx,[rbx+0x5a8]
   14000d25a:	call   0x1400200c4
   14000d25f:	mov    rdi,QWORD PTR [rsp+0x30]
   14000d264:	add    rsp,0x20
   14000d268:	pop    rbx
   14000d269:	ret    
   14000d26a:	int3   
   14000d26b:	int3   
   14000d26c:	int3   
   14000d26d:	int3   
   14000d26e:	int3   
   14000d26f:	int3   
   14000d270:	rex push rbx
   14000d272:	sub    rsp,0x20
   14000d276:	mov    rax,QWORD PTR [rcx+0xe8]
   14000d27d:	mov    rbx,rcx
   14000d280:	test   rax,rax
   14000d283:	je     0x14000d30a
   14000d289:	cmp    QWORD PTR [rcx+0xf0],0x0
   14000d291:	je     0x14000d30a
   14000d293:	mov    ecx,DWORD PTR [rax]
   14000d295:	test   cl,0x40
   14000d298:	je     0x14000d2a6
   14000d29a:	test   cl,0x10
   14000d29d:	je     0x14000d2a6
   14000d29f:	mov    edx,0x1
   14000d2a4:	jmp    0x14000d2a8
   14000d2a6:	xor    edx,edx
   14000d2a8:	lea    rcx,[rbx+0x100]
   14000d2af:	call   0x1400200c4
   14000d2b4:	mov    rax,QWORD PTR [rbx+0xe8]
   14000d2bb:	xor    r9d,r9d
   14000d2be:	mov    ecx,DWORD PTR [rax]
   14000d2c0:	mov    edx,0xf1
   14000d2c5:	shr    ecx,0x5
   14000d2c8:	and    ecx,0x1
   14000d2cb:	movsxd r8,ecx
   14000d2ce:	mov    rcx,QWORD PTR [rbx+0x140]
   14000d2d5:	call   QWORD PTR [rip+0x3670d]        # 0x1400439e8
   14000d2db:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000d2e2:	call   0x140009100
   14000d2e7:	mov    rcx,QWORD PTR [rbx+0x290]
   14000d2ee:	mov    edx,0x405
   14000d2f3:	movsxd r9,eax
   14000d2f6:	mov    r8d,0x1
   14000d2fc:	call   QWORD PTR [rip+0x366e6]        # 0x1400439e8
   14000d302:	mov    rcx,rbx
   14000d305:	call   0x14000d180
   14000d30a:	add    rsp,0x20
   14000d30e:	pop    rbx
   14000d30f:	ret    
   14000d310:	rex push rsi
   14000d312:	sub    rsp,0x20
   14000d316:	cmp    QWORD PTR [rcx+0xe8],0x0
   14000d31e:	mov    rsi,rcx
   14000d321:	je     0x14000d3bf
   14000d327:	mov    rcx,QWORD PTR [rcx+0x140]
   14000d32e:	xor    r9d,r9d
   14000d331:	xor    r8d,r8d
   14000d334:	mov    edx,0xf0
   14000d339:	mov    QWORD PTR [rsp+0x30],rbx
   14000d33e:	mov    QWORD PTR [rsp+0x38],rdi
   14000d343:	call   QWORD PTR [rip+0x3669f]        # 0x1400439e8
   14000d349:	mov    rcx,QWORD PTR [rsi+0x290]
   14000d350:	xor    edi,edi
   14000d352:	cmp    eax,0x1
   14000d355:	mov    edx,0x400
   14000d35a:	sete   dil
   14000d35e:	xor    r9d,r9d
   14000d361:	xor    r8d,r8d
   14000d364:	call   QWORD PTR [rip+0x3667e]        # 0x1400439e8
   14000d36a:	mov    rcx,QWORD PTR [rsi+0xe8]
   14000d371:	mov    edx,edi
   14000d373:	or     DWORD PTR [rcx],0x200
   14000d379:	mov    rcx,QWORD PTR [rsi+0xf0]
   14000d380:	mov    rbx,rax
   14000d383:	call   0x140008cc0
   14000d388:	mov    rcx,QWORD PTR [rsi+0xf0]
   14000d38f:	mov    edx,ebx
   14000d391:	call   0x1400092c0
   14000d396:	mov    r11,QWORD PTR [rsi+0xe8]
   14000d39d:	shl    edi,0x5
   14000d3a0:	xor    edi,DWORD PTR [r11]
   14000d3a3:	mov    rcx,rsi
   14000d3a6:	and    edi,0x20
   14000d3a9:	xor    DWORD PTR [r11],edi
   14000d3ac:	mov    rax,QWORD PTR [rsi]
   14000d3af:	call   QWORD PTR [rax+0x2b8]
   14000d3b5:	mov    rdi,QWORD PTR [rsp+0x38]
   14000d3ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d3bf:	add    rsp,0x20
   14000d3c3:	pop    rsi
   14000d3c4:	ret    
   14000d3c5:	int3   
   14000d3c6:	int3   
   14000d3c7:	int3   
   14000d3c8:	int3   
   14000d3c9:	int3   
   14000d3ca:	int3   
   14000d3cb:	int3   
   14000d3cc:	int3   
   14000d3cd:	int3   
   14000d3ce:	int3   
   14000d3cf:	int3   
   14000d3d0:	sub    rsp,0x28
   14000d3d4:	mov    rcx,QWORD PTR [rcx+0x290]
   14000d3db:	xor    r9d,r9d
   14000d3de:	mov    edx,0x405
   14000d3e3:	lea    r8d,[r9+0x1]
   14000d3e7:	call   QWORD PTR [rip+0x365fb]        # 0x1400439e8
   14000d3ed:	mov    rcx,QWORD PTR [rip+0x549ec]        # 0x140061de0
   14000d3f4:	test   rcx,rcx
   14000d3f7:	je     0x14000d40e
   14000d3f9:	mov    rcx,QWORD PTR [rcx+0x40]
   14000d3fd:	xor    r9d,r9d
   14000d400:	xor    r8d,r8d
   14000d403:	mov    edx,0x5dd
   14000d408:	call   QWORD PTR [rip+0x365da]        # 0x1400439e8
   14000d40e:	add    rsp,0x28
   14000d412:	ret    
   14000d413:	int3   
   14000d414:	int3   
   14000d415:	int3   
   14000d416:	int3   
   14000d417:	int3   
   14000d418:	int3   
   14000d419:	int3   
   14000d41a:	int3   
   14000d41b:	int3   
   14000d41c:	int3   
   14000d41d:	int3   
   14000d41e:	int3   
   14000d41f:	int3   
   14000d420:	sub    rsp,0x28
   14000d424:	cmp    QWORD PTR [rcx+0xe8],0x0
   14000d42c:	mov    QWORD PTR [rsp+0x30],rbx
   14000d431:	mov    rbx,rcx
   14000d434:	je     0x14000d513
   14000d43a:	mov    rcx,QWORD PTR [rcx+0x140]
   14000d441:	xor    r9d,r9d
   14000d444:	xor    r8d,r8d
   14000d447:	mov    edx,0xf0
   14000d44c:	mov    QWORD PTR [rsp+0x20],rdi
   14000d451:	call   QWORD PTR [rip+0x36591]        # 0x1400439e8
   14000d457:	xor    edx,edx
   14000d459:	cmp    eax,0x1
   14000d45c:	mov    rax,QWORD PTR [rbx+0xe8]
   14000d463:	mov    edi,edx
   14000d465:	mov    ecx,DWORD PTR [rax]
   14000d467:	sete   dil
   14000d46b:	test   cl,0x40
   14000d46e:	je     0x14000d4ca
   14000d470:	test   cl,0x10
   14000d473:	je     0x14000d4ca
   14000d475:	test   edi,edi
   14000d477:	je     0x14000d484
   14000d479:	bt     ecx,0x9
   14000d47d:	jb     0x14000d484
   14000d47f:	mov    edx,0x1
   14000d484:	lea    rcx,[rbx+0x250]
   14000d48b:	call   0x1400200c4
   14000d490:	lea    rcx,[rbx+0x1a8]
   14000d497:	mov    edx,edi
   14000d499:	call   0x1400200c4
   14000d49e:	lea    rcx,[rbx+0x458]
   14000d4a5:	mov    edx,edi
   14000d4a7:	call   0x1400200c4
   14000d4ac:	lea    rcx,[rbx+0x500]
   14000d4b3:	mov    edx,edi
   14000d4b5:	call   0x1400200c4
   14000d4ba:	lea    rcx,[rbx+0x5a8]
   14000d4c1:	mov    edx,edi
   14000d4c3:	call   0x1400200c4
   14000d4c8:	jmp    0x14000d50e
   14000d4ca:	lea    rcx,[rbx+0x250]
   14000d4d1:	call   0x1400200c4
   14000d4d6:	lea    rcx,[rbx+0x1a8]
   14000d4dd:	xor    edx,edx
   14000d4df:	call   0x1400200c4
   14000d4e4:	lea    rcx,[rbx+0x458]
   14000d4eb:	xor    edx,edx
   14000d4ed:	call   0x1400200c4
   14000d4f2:	lea    rcx,[rbx+0x500]
   14000d4f9:	xor    edx,edx
   14000d4fb:	call   0x1400200c4
   14000d500:	lea    rcx,[rbx+0x5a8]
   14000d507:	xor    edx,edx
   14000d509:	call   0x1400200c4
   14000d50e:	mov    rdi,QWORD PTR [rsp+0x20]
   14000d513:	mov    rcx,QWORD PTR [rip+0x548c6]        # 0x140061de0
   14000d51a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d51f:	test   rcx,rcx
   14000d522:	je     0x14000d539
   14000d524:	mov    rcx,QWORD PTR [rcx+0x40]
   14000d528:	xor    r9d,r9d
   14000d52b:	xor    r8d,r8d
   14000d52e:	mov    edx,0x5dd
   14000d533:	call   QWORD PTR [rip+0x364af]        # 0x1400439e8
   14000d539:	add    rsp,0x28
   14000d53d:	ret    
   14000d53e:	int3   
   14000d53f:	int3   
   14000d540:	mov    QWORD PTR [rsp+0x8],rbx
   14000d545:	mov    QWORD PTR [rsp+0x10],rbp
   14000d54a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d54f:	push   rdi
   14000d550:	sub    rsp,0x20
   14000d554:	test   r9,r9
   14000d557:	mov    rbx,r9
   14000d55a:	mov    edi,r8d
   14000d55d:	mov    esi,edx
   14000d55f:	mov    rbp,rcx
   14000d562:	jne    0x14000d568
   14000d564:	xor    ecx,ecx
   14000d566:	jmp    0x14000d56c
   14000d568:	mov    rcx,QWORD PTR [r9+0x40]
   14000d56c:	call   QWORD PTR [rip+0x36446]        # 0x1400439b8
   14000d572:	cmp    eax,0x3f3
   14000d577:	jne    0x14000d59a
   14000d579:	mov    rcx,QWORD PTR [rip+0x54860]        # 0x140061de0
   14000d580:	test   rcx,rcx
   14000d583:	je     0x14000d59a
   14000d585:	mov    rcx,QWORD PTR [rcx+0x40]
   14000d589:	xor    r9d,r9d
   14000d58c:	xor    r8d,r8d
   14000d58f:	mov    edx,0x5dd
   14000d594:	call   QWORD PTR [rip+0x3644e]        # 0x1400439e8
   14000d59a:	mov    r9,rbx
   14000d59d:	mov    r8d,edi
   14000d5a0:	mov    edx,esi
   14000d5a2:	mov    rcx,rbp
   14000d5a5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5aa:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d5af:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d5b4:	add    rsp,0x20
   14000d5b8:	pop    rdi
   14000d5b9:	jmp    0x140019548
   14000d5be:	int3   
   14000d5bf:	int3   
   14000d5c0:	mov    QWORD PTR [rsp+0x8],rcx
   14000d5c5:	push   rsi
   14000d5c6:	push   rdi
   14000d5c7:	push   r12
   14000d5c9:	push   r13
   14000d5cb:	push   r14
   14000d5cd:	sub    rsp,0x30
   14000d5d1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d5da:	mov    QWORD PTR [rsp+0x70],rbx
   14000d5df:	mov    QWORD PTR [rsp+0x78],rbp
   14000d5e4:	mov    rbp,r8
   14000d5e7:	mov    rdi,rdx
   14000d5ea:	mov    rsi,rcx
   14000d5ed:	xor    ebx,ebx
   14000d5ef:	mov    DWORD PTR [rsp+0x68],ebx
   14000d5f3:	mov    rax,QWORD PTR [rdx]
   14000d5f6:	mov    rcx,QWORD PTR [rax-0x18]
   14000d5fa:	test   rcx,rcx
   14000d5fd:	je     0x14000d60d
   14000d5ff:	mov    rax,QWORD PTR [rcx]
   14000d602:	call   QWORD PTR [rax+0x20]
   14000d605:	mov    rcx,rax
   14000d608:	test   rax,rax
   14000d60b:	jne    0x14000d61e
   14000d60d:	call   0x14002157c
   14000d612:	mov    rdx,QWORD PTR [rax]
   14000d615:	mov    rcx,rax
   14000d618:	call   QWORD PTR [rdx+0x20]
   14000d61b:	mov    rcx,rax
   14000d61e:	test   rcx,rcx
   14000d621:	setne  bl
   14000d624:	test   ebx,ebx
   14000d626:	jne    0x14000d633
   14000d628:	mov    ecx,0x80004005
   14000d62d:	call   0x140003dc0
   14000d632:	int3   
   14000d633:	mov    rax,QWORD PTR [rcx]
   14000d636:	call   QWORD PTR [rax+0x18]
   14000d639:	add    rax,0x18
   14000d63d:	mov    QWORD PTR [rsi],rax
   14000d640:	mov    ecx,0x1
   14000d645:	mov    DWORD PTR [rsp+0x68],ecx
   14000d649:	mov    r13,QWORD PTR [rbp+0x0]
   14000d64d:	movsxd r12,DWORD PTR [r13-0x10]
   14000d651:	mov    r14,QWORD PTR [rdi]
   14000d654:	movsxd rbx,DWORD PTR [r14-0x10]
   14000d658:	lea    ebp,[rbx+r12*1]
   14000d65c:	sub    ecx,DWORD PTR [rax-0x8]
   14000d65f:	mov    eax,DWORD PTR [rax-0xc]
   14000d662:	sub    eax,ebp
   14000d664:	or     eax,ecx
   14000d666:	jge    0x14000d672
   14000d668:	mov    edx,ebp
   14000d66a:	mov    rcx,rsi
   14000d66d:	call   0x140004370
   14000d672:	mov    rdi,QWORD PTR [rsi]
   14000d675:	add    rbx,rbx
   14000d678:	mov    r9,rbx
   14000d67b:	mov    r8,r14
   14000d67e:	mov    rdx,rbx
   14000d681:	mov    rcx,rdi
   14000d684:	call   0x140029bf0
   14000d689:	mov    rdx,r12
   14000d68c:	add    rdx,rdx
   14000d68f:	lea    rcx,[rbx+rdi*1]
   14000d693:	mov    r9,rdx
   14000d696:	mov    r8,r13
   14000d699:	call   0x140029bf0
   14000d69e:	test   ebp,ebp
   14000d6a0:	js     0x14000d6be
   14000d6a2:	mov    rax,QWORD PTR [rsi]
   14000d6a5:	cmp    ebp,DWORD PTR [rax-0xc]
   14000d6a8:	jg     0x14000d6be
   14000d6aa:	mov    DWORD PTR [rax-0x10],ebp
   14000d6ad:	movsxd rcx,ebp
   14000d6b0:	mov    rax,QWORD PTR [rsi]
   14000d6b3:	mov    WORD PTR [rax+rcx*2],0x0
   14000d6b9:	mov    rax,rsi
   14000d6bc:	jmp    0x14000d6c9
   14000d6be:	mov    ecx,0x80070057
   14000d6c3:	call   0x140003dc0
   14000d6c8:	nop
   14000d6c9:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d6ce:	mov    rbp,QWORD PTR [rsp+0x78]
   14000d6d3:	add    rsp,0x30
   14000d6d7:	pop    r14
   14000d6d9:	pop    r13
   14000d6db:	pop    r12
   14000d6dd:	pop    rdi
   14000d6de:	pop    rsi
   14000d6df:	ret    
   14000d6e0:	int3   
   14000d6e1:	int3   
   14000d6e2:	int3   
   14000d6e3:	int3   
   14000d6e4:	int3   
   14000d6e5:	int3   
   14000d6e6:	int3   
   14000d6e7:	int3   
   14000d6e8:	int3   
   14000d6e9:	int3   
   14000d6ea:	int3   
   14000d6eb:	int3   
   14000d6ec:	int3   
   14000d6ed:	int3   
   14000d6ee:	int3   
   14000d6ef:	int3   
   14000d6f0:	rex push rbp
   14000d6f2:	sub    rsp,0x20
   14000d6f6:	mov    rbp,rdx
   14000d6f9:	mov    eax,DWORD PTR [rbp+0x68]
   14000d6fc:	and    eax,0x1
   14000d6ff:	test   eax,eax
   14000d701:	je     0x14000d710
   14000d703:	and    DWORD PTR [rbp+0x68],0xfffffffe
   14000d707:	mov    rcx,QWORD PTR [rbp+0x60]
   14000d70b:	call   0x140003de0
   14000d710:	add    rsp,0x20
   14000d714:	pop    rbp
   14000d715:	ret    
   14000d716:	int3   
   14000d717:	int3   
   14000d718:	int3   
   14000d719:	int3   
   14000d71a:	int3   
   14000d71b:	int3   
   14000d71c:	int3   
   14000d71d:	int3   
   14000d71e:	int3   
   14000d71f:	int3   
   14000d720:	mov    QWORD PTR [rsp+0x8],rbx
   14000d725:	mov    QWORD PTR [rsp+0x10],rbp
   14000d72a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d72f:	mov    QWORD PTR [rsp+0x20],rdi
   14000d734:	push   r12
   14000d736:	push   r13
   14000d738:	push   r14
   14000d73a:	sub    rsp,0x20
   14000d73e:	mov    rax,QWORD PTR [rcx]
   14000d741:	movsxd r12,DWORD PTR [rsp+0x60]
   14000d746:	mov    r10d,0x1
   14000d74c:	sub    r10d,DWORD PTR [rax-0x8]
   14000d750:	mov    eax,DWORD PTR [rax-0xc]
   14000d753:	movsxd rbx,r8d
   14000d756:	lea    esi,[rbx+r12*1]
   14000d75a:	mov    r13,r9
   14000d75d:	mov    r14,rdx
   14000d760:	sub    eax,esi
   14000d762:	mov    rbp,rcx
   14000d765:	or     r10d,eax
   14000d768:	jge    0x14000d771
   14000d76a:	mov    edx,esi
   14000d76c:	call   0x140004370
   14000d771:	mov    rdi,QWORD PTR [rbp+0x0]
   14000d775:	add    rbx,rbx
   14000d778:	mov    r8,r14
   14000d77b:	mov    rcx,rdi
   14000d77e:	mov    r9,rbx
   14000d781:	mov    rdx,rbx
   14000d784:	call   0x140029bf0
   14000d789:	mov    rdx,r12
   14000d78c:	lea    rcx,[rbx+rdi*1]
   14000d790:	add    rdx,rdx
   14000d793:	mov    r8,r13
   14000d796:	mov    r9,rdx
   14000d799:	call   0x140029bf0
   14000d79e:	test   esi,esi
   14000d7a0:	js     0x14000d7da
   14000d7a2:	mov    rax,QWORD PTR [rbp+0x0]
   14000d7a6:	cmp    esi,DWORD PTR [rax-0xc]
   14000d7a9:	jg     0x14000d7da
   14000d7ab:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d7b0:	mov    rdi,QWORD PTR [rsp+0x58]
   14000d7b5:	mov    DWORD PTR [rax-0x10],esi
   14000d7b8:	mov    rax,QWORD PTR [rbp+0x0]
   14000d7bc:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d7c1:	movsxd rcx,esi
   14000d7c4:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d7c9:	mov    WORD PTR [rax+rcx*2],0x0
   14000d7cf:	add    rsp,0x20
   14000d7d3:	pop    r14
   14000d7d5:	pop    r13
   14000d7d7:	pop    r12
   14000d7d9:	ret    
   14000d7da:	mov    ecx,0x80070057
   14000d7df:	call   0x140003dc0
   14000d7e4:	int3   
   14000d7e5:	int3   
   14000d7e6:	int3   
   14000d7e7:	int3   
   14000d7e8:	int3   
   14000d7e9:	int3   
   14000d7ea:	int3   
   14000d7eb:	int3   
   14000d7ec:	int3   
   14000d7ed:	int3   
   14000d7ee:	int3   
   14000d7ef:	int3   
   14000d7f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d7f5:	push   rdi
   14000d7f6:	sub    rsp,0x20
   14000d7fa:	mov    ebx,edx
   14000d7fc:	mov    rdi,rcx
   14000d7ff:	call   0x1400212fc
   14000d804:	test   bl,0x1
   14000d807:	je     0x14000d811
   14000d809:	mov    rcx,rdi
   14000d80c:	call   0x14001490c
   14000d811:	mov    rax,rdi
   14000d814:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d819:	add    rsp,0x20
   14000d81d:	pop    rdi
   14000d81e:	ret    
   14000d81f:	int3   
   14000d820:	lea    rax,[rip+0x3e079]        # 0x14004b8a0
   14000d827:	ret    
   14000d828:	int3   
   14000d829:	int3   
   14000d82a:	int3   
   14000d82b:	int3   
   14000d82c:	int3   
   14000d82d:	int3   
   14000d82e:	int3   
   14000d82f:	int3   
   14000d830:	mov    QWORD PTR [rsp+0x8],rcx
   14000d835:	push   rdi
   14000d836:	sub    rsp,0x30
   14000d83a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d843:	mov    QWORD PTR [rsp+0x48],rbx
   14000d848:	mov    ebx,edx
   14000d84a:	mov    rdi,rcx
   14000d84d:	lea    rax,[rip+0x3e0f4]        # 0x14004b948
   14000d854:	mov    QWORD PTR [rcx],rax
   14000d857:	add    rcx,0x240
   14000d85e:	call   0x14001e22c
   14000d863:	nop
   14000d864:	lea    rcx,[rdi+0x198]
   14000d86b:	call   0x14001e2f4
   14000d870:	nop
   14000d871:	lea    rcx,[rdi+0xf0]
   14000d878:	call   0x14001e2f4
   14000d87d:	nop
   14000d87e:	lea    rax,[rip+0x3e413]        # 0x14004bc98
   14000d885:	mov    QWORD PTR [rdi],rax
   14000d888:	mov    rcx,rdi
   14000d88b:	call   0x14001d2ac
   14000d890:	test   bl,0x1
   14000d893:	je     0x14000d8a2
   14000d895:	mov    rcx,rdi
   14000d898:	call   0x14001490c
   14000d89d:	mov    rax,rdi
   14000d8a0:	jmp    0x14000d8a5
   14000d8a2:	mov    rax,rdi
   14000d8a5:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d8aa:	add    rsp,0x30
   14000d8ae:	pop    rdi
   14000d8af:	ret    
   14000d8b0:	rex push rbp
   14000d8b2:	sub    rsp,0x20
   14000d8b6:	mov    rbp,rdx
   14000d8b9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000d8bd:	call   0x14000dd20
   14000d8c2:	add    rsp,0x20
   14000d8c6:	pop    rbp
   14000d8c7:	ret    
   14000d8c8:	int3   
   14000d8c9:	int3   
   14000d8ca:	int3   
   14000d8cb:	int3   
   14000d8cc:	int3   
   14000d8cd:	int3   
   14000d8ce:	int3   
   14000d8cf:	int3   
   14000d8d0:	rex push rbp
   14000d8d2:	sub    rsp,0x20
   14000d8d6:	mov    rbp,rdx
   14000d8d9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000d8dd:	add    rcx,0xf0
   14000d8e4:	call   0x14001e2f4
   14000d8e9:	add    rsp,0x20
   14000d8ed:	pop    rbp
   14000d8ee:	ret    
   14000d8ef:	int3   
   14000d8f0:	rex push rbp
   14000d8f2:	sub    rsp,0x20
   14000d8f6:	mov    rbp,rdx
   14000d8f9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000d8fd:	add    rcx,0x198
   14000d904:	call   0x14001e2f4
   14000d909:	add    rsp,0x20
   14000d90d:	pop    rbp
   14000d90e:	ret    
   14000d90f:	int3   
   14000d910:	mov    QWORD PTR [rsp+0x8],rcx
   14000d915:	push   rbx
   14000d916:	sub    rsp,0x30
   14000d91a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d923:	mov    rbx,rcx
   14000d926:	lea    rax,[rip+0x3e01b]        # 0x14004b948
   14000d92d:	mov    QWORD PTR [rcx],rax
   14000d930:	add    rcx,0x240
   14000d937:	call   0x14001e22c
   14000d93c:	nop
   14000d93d:	lea    rcx,[rbx+0x198]
   14000d944:	call   0x14001e2f4
   14000d949:	nop
   14000d94a:	lea    rcx,[rbx+0xf0]
   14000d951:	call   0x14001e2f4
   14000d956:	nop
   14000d957:	lea    rax,[rip+0x3e33a]        # 0x14004bc98
   14000d95e:	mov    QWORD PTR [rbx],rax
   14000d961:	mov    rcx,rbx
   14000d964:	add    rsp,0x30
   14000d968:	pop    rbx
   14000d969:	jmp    0x14001d2ac
   14000d96e:	int3   
   14000d96f:	int3   
   14000d970:	rex push rbp
   14000d972:	sub    rsp,0x20
   14000d976:	mov    rbp,rdx
   14000d979:	mov    rcx,QWORD PTR [rbp+0x40]
   14000d97d:	call   0x14000dd20
   14000d982:	add    rsp,0x20
   14000d986:	pop    rbp
   14000d987:	ret    
   14000d988:	int3   
   14000d989:	int3   
   14000d98a:	int3   
   14000d98b:	int3   
   14000d98c:	int3   
   14000d98d:	int3   
   14000d98e:	int3   
   14000d98f:	int3   
   14000d990:	rex push rbp
   14000d992:	sub    rsp,0x20
   14000d996:	mov    rbp,rdx
   14000d999:	mov    rcx,QWORD PTR [rbp+0x40]
   14000d99d:	add    rcx,0xf0
   14000d9a4:	call   0x14001e2f4
   14000d9a9:	add    rsp,0x20
   14000d9ad:	pop    rbp
   14000d9ae:	ret    
   14000d9af:	int3   
   14000d9b0:	rex push rbp
   14000d9b2:	sub    rsp,0x20
   14000d9b6:	mov    rbp,rdx
   14000d9b9:	mov    rcx,QWORD PTR [rbp+0x40]
   14000d9bd:	add    rcx,0x198
   14000d9c4:	call   0x14001e2f4
   14000d9c9:	add    rsp,0x20
   14000d9cd:	pop    rbp
   14000d9ce:	ret    
   14000d9cf:	int3   
   14000d9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d9d5:	push   rdi
   14000d9d6:	sub    rsp,0x20
   14000d9da:	mov    rdi,rdx
   14000d9dd:	lea    r8,[rcx+0xf0]
   14000d9e4:	mov    rbx,rcx
   14000d9e7:	mov    rcx,rdi
   14000d9ea:	mov    edx,0x3ec
   14000d9ef:	call   0x14001e4c0
   14000d9f4:	lea    r8,[rbx+0x198]
   14000d9fb:	mov    edx,0x3ed
   14000da00:	mov    rcx,rdi
   14000da03:	call   0x14001e4c0
   14000da08:	lea    r8,[rbx+0x240]
   14000da0f:	mov    edx,0x405
   14000da14:	mov    rcx,rdi
   14000da17:	mov    rbx,QWORD PTR [rsp+0x30]
   14000da1c:	add    rsp,0x20
   14000da20:	pop    rdi
   14000da21:	jmp    0x14001e4c0
   14000da26:	int3   
   14000da27:	int3   
   14000da28:	int3   
   14000da29:	int3   
   14000da2a:	int3   
   14000da2b:	int3   
   14000da2c:	int3   
   14000da2d:	int3   
   14000da2e:	int3   
   14000da2f:	int3   
   14000da30:	lea    rax,[rip+0x3def9]        # 0x14004b930
   14000da37:	ret    
   14000da38:	int3   
   14000da39:	int3   
   14000da3a:	int3   
   14000da3b:	int3   
   14000da3c:	int3   
   14000da3d:	int3   
   14000da3e:	int3   
   14000da3f:	int3   
   14000da40:	mov    QWORD PTR [rsp+0x8],rbx
   14000da45:	push   rdi
   14000da46:	sub    rsp,0x20
   14000da4a:	mov    r8d,0x13a2
   14000da50:	mov    rdx,rcx
   14000da53:	mov    rdi,rcx
   14000da56:	call   0x14000ddd0
   14000da5b:	lea    rdx,[rdi+0xf0]
   14000da62:	mov    r8d,0x138d
   14000da68:	mov    rcx,rdi
   14000da6b:	call   0x14000ddd0
   14000da70:	lea    rdx,[rdi+0x198]
   14000da77:	mov    r8d,0x138e
   14000da7d:	mov    rcx,rdi
   14000da80:	call   0x14000ddd0
   14000da85:	lea    rdx,[rdi+0x240]
   14000da8c:	mov    r8d,0x139f
   14000da92:	mov    rcx,rdi
   14000da95:	call   0x14000ddd0
   14000da9a:	mov    r8,QWORD PTR [rip+0x54337]        # 0x140061dd8
   14000daa1:	xor    ebx,ebx
   14000daa3:	add    r8,0x20
   14000daa7:	jne    0x14000daae
   14000daa9:	mov    r8,rbx
   14000daac:	jmp    0x14000dab2
   14000daae:	mov    r8,QWORD PTR [r8+0x8]
   14000dab2:	mov    rcx,QWORD PTR [rdi+0x130]
   14000dab9:	xor    r9d,r9d
   14000dabc:	lea    edx,[r9+0x30]
   14000dac0:	call   QWORD PTR [rip+0x35f22]        # 0x1400439e8
   14000dac6:	mov    r8,QWORD PTR [rip+0x5430b]        # 0x140061dd8
   14000dacd:	add    r8,0x20
   14000dad1:	jne    0x14000dad8
   14000dad3:	mov    r8,rbx
   14000dad6:	jmp    0x14000dadc
   14000dad8:	mov    r8,QWORD PTR [r8+0x8]
   14000dadc:	mov    rcx,QWORD PTR [rdi+0x1d8]
   14000dae3:	xor    r9d,r9d
   14000dae6:	lea    edx,[r9+0x30]
   14000daea:	call   QWORD PTR [rip+0x35ef8]        # 0x1400439e8
   14000daf0:	mov    r11,QWORD PTR [rip+0x542e1]        # 0x140061dd8
   14000daf7:	add    r11,0x20
   14000dafb:	je     0x14000db01
   14000dafd:	mov    rbx,QWORD PTR [r11+0x8]
   14000db01:	mov    rcx,QWORD PTR [rdi+0x280]
   14000db08:	xor    r9d,r9d
   14000db0b:	mov    r8,rbx
   14000db0e:	lea    edx,[r9+0x30]
   14000db12:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db17:	add    rsp,0x20
   14000db1b:	pop    rdi
   14000db1c:	rex.W jmp QWORD PTR [rip+0x35ec5]        # 0x1400439e8
   14000db23:	int3   
   14000db24:	int3   
   14000db25:	int3   
   14000db26:	int3   
   14000db27:	int3   
   14000db28:	int3   
   14000db29:	int3   
   14000db2a:	int3   
   14000db2b:	int3   
   14000db2c:	int3   
   14000db2d:	int3   
   14000db2e:	int3   
   14000db2f:	int3   
   14000db30:	mov    QWORD PTR [rsp+0x8],rbx
   14000db35:	push   rdi
   14000db36:	sub    rsp,0x20
   14000db3a:	mov    rdi,rcx
   14000db3d:	mov    rcx,QWORD PTR [rcx+0x1d8]
   14000db44:	xor    r9d,r9d
   14000db47:	xor    r8d,r8d
   14000db4a:	mov    edx,0xf0
   14000db4f:	call   QWORD PTR [rip+0x35e93]        # 0x1400439e8
   14000db55:	mov    rcx,QWORD PTR [rdi+0x130]
   14000db5c:	xor    r9d,r9d
   14000db5f:	xor    r8d,r8d
   14000db62:	mov    edx,0xf0
   14000db67:	mov    rbx,rax
   14000db6a:	call   QWORD PTR [rip+0x35e78]        # 0x1400439e8
   14000db70:	mov    rcx,QWORD PTR [rip+0x54269]        # 0x140061de0
   14000db77:	xor    r8d,r8d
   14000db7a:	mov    rcx,QWORD PTR [rcx+0x40]
   14000db7e:	cmp    ebx,0x1
   14000db81:	mov    r9,r8
   14000db84:	sete   r9b
   14000db88:	cmp    eax,0x1
   14000db8b:	mov    edx,0x87d0
   14000db90:	sete   r8b
   14000db94:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db99:	add    rsp,0x20
   14000db9d:	pop    rdi
   14000db9e:	rex.W jmp QWORD PTR [rip+0x35e43]        # 0x1400439e8
   14000dba5:	int3   
   14000dba6:	int3   
   14000dba7:	int3   
   14000dba8:	int3   
   14000dba9:	int3   
   14000dbaa:	int3   
   14000dbab:	int3   
   14000dbac:	int3   
   14000dbad:	int3   
   14000dbae:	int3   
   14000dbaf:	int3   
   14000dbb0:	rex push rbx
   14000dbb2:	sub    rsp,0x20
   14000dbb6:	mov    rbx,rcx
   14000dbb9:	mov    rcx,QWORD PTR [rcx+0x130]
   14000dbc0:	xor    r9d,r9d
   14000dbc3:	xor    r8d,r8d
   14000dbc6:	mov    edx,0xf0
   14000dbcb:	call   QWORD PTR [rip+0x35e17]        # 0x1400439e8
   14000dbd1:	lea    rcx,[rbx+0x198]
   14000dbd8:	test   eax,eax
   14000dbda:	jne    0x14000dbfd
   14000dbdc:	xor    edx,edx
   14000dbde:	call   0x1400200c4
   14000dbe3:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14000dbea:	xor    r9d,r9d
   14000dbed:	xor    r8d,r8d
   14000dbf0:	mov    edx,0xf1
   14000dbf5:	call   QWORD PTR [rip+0x35ded]        # 0x1400439e8
   14000dbfb:	jmp    0x14000dc07
   14000dbfd:	mov    edx,0x1
   14000dc02:	call   0x1400200c4
   14000dc07:	mov    rcx,QWORD PTR [rip+0x541d2]        # 0x140061de0
   14000dc0e:	test   rcx,rcx
   14000dc11:	je     0x14000dc28
   14000dc13:	mov    rcx,QWORD PTR [rcx+0x40]
   14000dc17:	xor    r9d,r9d
   14000dc1a:	xor    r8d,r8d
   14000dc1d:	mov    edx,0x5dd
   14000dc22:	call   QWORD PTR [rip+0x35dc0]        # 0x1400439e8
   14000dc28:	add    rsp,0x20
   14000dc2c:	pop    rbx
   14000dc2d:	ret    
   14000dc2e:	int3   
   14000dc2f:	int3   
   14000dc30:	sub    rsp,0x28
   14000dc34:	mov    rcx,QWORD PTR [rip+0x541a5]        # 0x140061de0
   14000dc3b:	test   rcx,rcx
   14000dc3e:	je     0x14000dc55
   14000dc40:	mov    rcx,QWORD PTR [rcx+0x40]
   14000dc44:	xor    r9d,r9d
   14000dc47:	xor    r8d,r8d
   14000dc4a:	mov    edx,0x5dd
   14000dc4f:	call   QWORD PTR [rip+0x35d93]        # 0x1400439e8
   14000dc55:	add    rsp,0x28
   14000dc59:	ret    
   14000dc5a:	int3   
   14000dc5b:	int3   
   14000dc5c:	int3   
   14000dc5d:	int3   
   14000dc5e:	int3   
   14000dc5f:	int3   
   14000dc60:	rex push rbx
   14000dc62:	sub    rsp,0x20
   14000dc66:	mov    rax,QWORD PTR [rcx+0xe8]
   14000dc6d:	mov    rbx,rcx
   14000dc70:	test   rax,rax
   14000dc73:	je     0x14000dcd9
   14000dc75:	mov    eax,DWORD PTR [rax]
   14000dc77:	mov    rcx,QWORD PTR [rcx+0x130]
   14000dc7e:	xor    r9d,r9d
   14000dc81:	shr    eax,0x7
   14000dc84:	mov    edx,0xf1
   14000dc89:	and    eax,0x1
   14000dc8c:	movsxd r8,eax
   14000dc8f:	call   QWORD PTR [rip+0x35d53]        # 0x1400439e8
   14000dc95:	mov    r11,QWORD PTR [rbx+0xe8]
   14000dc9c:	lea    rcx,[rbx+0x198]
   14000dca3:	mov    edx,DWORD PTR [r11]
   14000dca6:	shr    edx,0x7
   14000dca9:	and    edx,0x1
   14000dcac:	call   0x1400200c4
   14000dcb1:	mov    r11,QWORD PTR [rbx+0xe8]
   14000dcb8:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14000dcbf:	mov    eax,DWORD PTR [r11]
   14000dcc2:	xor    r9d,r9d
   14000dcc5:	mov    edx,0xf1
   14000dcca:	shr    eax,0x8
   14000dccd:	and    eax,0x1
   14000dcd0:	movsxd r8,eax
   14000dcd3:	call   QWORD PTR [rip+0x35d0f]        # 0x1400439e8
   14000dcd9:	add    rsp,0x20
   14000dcdd:	pop    rbx
   14000dcde:	ret    
   14000dcdf:	int3   
   14000dce0:	mov    QWORD PTR [rsp+0x8],rbx
   14000dce5:	push   rdi
   14000dce6:	sub    rsp,0x20
   14000dcea:	lea    rax,[rip+0x3dfa7]        # 0x14004bc98
   14000dcf1:	mov    ebx,edx
   14000dcf3:	mov    rdi,rcx
   14000dcf6:	mov    QWORD PTR [rcx],rax
   14000dcf9:	call   0x14001d2ac
   14000dcfe:	test   bl,0x1
   14000dd01:	je     0x14000dd0b
   14000dd03:	mov    rcx,rdi
   14000dd06:	call   0x14001490c
   14000dd0b:	mov    rax,rdi
   14000dd0e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd13:	add    rsp,0x20
   14000dd17:	pop    rdi
   14000dd18:	ret    
   14000dd19:	int3   
   14000dd1a:	int3   
   14000dd1b:	int3   
   14000dd1c:	int3   
   14000dd1d:	int3   
   14000dd1e:	int3   
   14000dd1f:	int3   
   14000dd20:	lea    rax,[rip+0x3df71]        # 0x14004bc98
   14000dd27:	mov    QWORD PTR [rcx],rax
   14000dd2a:	jmp    0x14001d2ac
   14000dd2f:	int3   
   14000dd30:	lea    rax,[rip+0x3df49]        # 0x14004bc80
   14000dd37:	ret    
   14000dd38:	int3   
   14000dd39:	int3   
   14000dd3a:	int3   
   14000dd3b:	int3   
   14000dd3c:	int3   
   14000dd3d:	int3   
   14000dd3e:	int3   
   14000dd3f:	int3   
   14000dd40:	rex push rbx
   14000dd42:	sub    rsp,0x30
   14000dd46:	mov    rcx,QWORD PTR [rcx+0x40]
   14000dd4a:	mov    rbx,rdx
   14000dd4d:	lea    rdx,[rsp+0x20]
   14000dd52:	call   QWORD PTR [rip+0x35c88]        # 0x1400439e0
   14000dd58:	mov    ecx,0x5
   14000dd5d:	call   QWORD PTR [rip+0x35c75]        # 0x1400439d8
   14000dd63:	lea    rdx,[rsp+0x20]
   14000dd68:	mov    rcx,rbx
   14000dd6b:	mov    r8d,eax
   14000dd6e:	call   0x1400211b4
   14000dd73:	mov    eax,0x1
   14000dd78:	add    rsp,0x30
   14000dd7c:	pop    rbx
   14000dd7d:	ret    
   14000dd7e:	int3   
   14000dd7f:	int3   
   14000dd80:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd85:	push   rdi
   14000dd86:	sub    rsp,0x20
   14000dd8a:	mov    ebx,r9d
   14000dd8d:	mov    rdi,rdx
   14000dd90:	call   0x1400195bc
   14000dd95:	cmp    ebx,0x6
   14000dd98:	je     0x14000dd9f
   14000dd9a:	cmp    ebx,0x3
   14000dd9d:	jne    0x14000ddc0
   14000dd9f:	mov    rbx,QWORD PTR [rdi]
   14000dda2:	mov    ecx,0x5
   14000dda7:	call   QWORD PTR [rip+0x35c2b]        # 0x1400439d8
   14000ddad:	mov    rcx,rdi
   14000ddb0:	mov    edx,eax
   14000ddb2:	call   QWORD PTR [rbx+0x58]
   14000ddb5:	mov    ecx,0x5
   14000ddba:	call   QWORD PTR [rip+0x35bc0]        # 0x140043980
   14000ddc0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ddc5:	add    rsp,0x20
   14000ddc9:	pop    rdi
   14000ddca:	ret    
   14000ddcb:	int3   
   14000ddcc:	int3   
   14000ddcd:	int3   
   14000ddce:	int3   
   14000ddcf:	int3   
   14000ddd0:	test   rdx,rdx
   14000ddd3:	je     0x14000e060
   14000ddd9:	push   rdi
   14000ddda:	push   r12
   14000dddc:	push   r13
   14000ddde:	push   r14
   14000dde0:	push   r15
   14000dde2:	sub    rsp,0x30
   14000dde6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ddef:	mov    QWORD PTR [rsp+0x60],rbx
   14000ddf4:	mov    QWORD PTR [rsp+0x70],rbp
   14000ddf9:	mov    QWORD PTR [rsp+0x78],rsi
   14000ddfe:	mov    r14d,r8d
   14000de01:	mov    r13,rdx
   14000de04:	cmp    QWORD PTR [rip+0x53fcc],0x0        # 0x140061dd8
   14000de0c:	je     0x14000e044
   14000de12:	call   0x14002157c
   14000de17:	mov    rdx,rax
   14000de1a:	xor    ebx,ebx
   14000de1c:	mov    ecx,ebx
   14000de1e:	test   rax,rax
   14000de21:	setne  cl
   14000de24:	test   ecx,ecx
   14000de26:	jne    0x14000de33
   14000de28:	mov    ecx,0x80004005
   14000de2d:	call   0x140003dc0
   14000de32:	int3   
   14000de33:	mov    rax,QWORD PTR [rax]
   14000de36:	mov    rcx,rdx
   14000de39:	call   QWORD PTR [rax+0x18]
   14000de3c:	lea    rsi,[rax+0x18]
   14000de40:	mov    QWORD PTR [rsp+0x68],rsi
   14000de45:	lea    rdx,[rsi-0x18]
   14000de49:	mov    rdi,QWORD PTR [rdx]
   14000de4c:	or     rbp,0xffffffffffffffff
   14000de50:	cmp    DWORD PTR [rdx+0x8],0x0
   14000de54:	je     0x14000dea0
   14000de56:	cmp    DWORD PTR [rdx+0x10],0x0
   14000de5a:	jge    0x14000de77
   14000de5c:	cmp    DWORD PTR [rsi-0xc],0x0
   14000de60:	jge    0x14000de6d
   14000de62:	mov    ecx,0x80070057
   14000de67:	call   0x140003dc0
   14000de6c:	int3   
   14000de6d:	mov    DWORD PTR [rsi-0x10],ebx
   14000de70:	mov    WORD PTR [rsi],0x0
   14000de75:	jmp    0x14000dea0
   14000de77:	mov    eax,ebp
   14000de79:	lock xadd DWORD PTR [rdx+0x10],eax
   14000de7e:	add    eax,0xffffffff
   14000de81:	test   eax,eax
   14000de83:	jg     0x14000de8e
   14000de85:	mov    rcx,QWORD PTR [rdx]
   14000de88:	mov    rax,QWORD PTR [rcx]
   14000de8b:	call   QWORD PTR [rax+0x8]
   14000de8e:	mov    rax,QWORD PTR [rdi]
   14000de91:	mov    rcx,rdi
   14000de94:	call   QWORD PTR [rax+0x18]
   14000de97:	lea    rsi,[rax+0x18]
   14000de9b:	mov    QWORD PTR [rsp+0x68],rsi
   14000dea0:	mov    r15,QWORD PTR [rip+0x53f31]        # 0x140061dd8
   14000dea7:	xor    eax,eax
   14000dea9:	mov    rcx,rbp
   14000deac:	lea    rdi,[rip+0x3c9f5]        # 0x14004a8a8
   14000deb3:	repnz scas ax,WORD PTR es:[rdi]
   14000deb6:	not    rcx
   14000deb9:	sub    rcx,0x1
   14000debd:	mov    rdi,rcx
   14000dec0:	test   ecx,ecx
   14000dec2:	jne    0x14000df22
   14000dec4:	lea    rdx,[rsi-0x18]
   14000dec8:	mov    rdi,QWORD PTR [rdx]
   14000decb:	cmp    DWORD PTR [rdx+0x8],eax
   14000dece:	je     0x14000dfaa
   14000ded4:	cmp    DWORD PTR [rdx+0x10],eax
   14000ded7:	jge    0x14000def4
   14000ded9:	cmp    DWORD PTR [rsi-0xc],eax
   14000dedc:	jge    0x14000dee9
   14000dede:	mov    ecx,0x80070057
   14000dee3:	call   0x140003dc0
   14000dee8:	int3   
   14000dee9:	mov    DWORD PTR [rsi-0x10],ebx
   14000deec:	mov    WORD PTR [rsi],ax
   14000deef:	jmp    0x14000dfaa
   14000def4:	mov    eax,ebp
   14000def6:	lock xadd DWORD PTR [rdx+0x10],eax
   14000defb:	add    eax,0xffffffff
   14000defe:	test   eax,eax
   14000df00:	jg     0x14000df0b
   14000df02:	mov    rcx,QWORD PTR [rdx]
   14000df05:	mov    rax,QWORD PTR [rcx]
   14000df08:	call   QWORD PTR [rax+0x8]
   14000df0b:	mov    rax,QWORD PTR [rdi]
   14000df0e:	mov    rcx,rdi
   14000df11:	call   QWORD PTR [rax+0x18]
   14000df14:	add    rax,0x18
   14000df18:	mov    QWORD PTR [rsp+0x68],rax
   14000df1d:	jmp    0x14000dfaa
   14000df22:	mov    ebx,DWORD PTR [rsi-0x10]
   14000df25:	lea    r12,[rip+0x3c97c]        # 0x14004a8a8
   14000df2c:	sub    r12,rsi
   14000df2f:	sar    r12,1
   14000df32:	mov    ecx,0x1
   14000df37:	sub    ecx,DWORD PTR [rsi-0x8]
   14000df3a:	mov    eax,DWORD PTR [rsi-0xc]
   14000df3d:	sub    eax,edi
   14000df3f:	or     eax,ecx
   14000df41:	jge    0x14000df54
   14000df43:	mov    edx,edi
   14000df45:	lea    rcx,[rsp+0x68]
   14000df4a:	call   0x140004370
   14000df4f:	mov    rsi,QWORD PTR [rsp+0x68]
   14000df54:	cmp    r12,rbx
   14000df57:	ja     0x14000df74
   14000df59:	movsxd rax,edi
   14000df5c:	lea    rbx,[rax+rax*1]
   14000df60:	lea    r8,[rsi+r12*2]
   14000df64:	mov    r9,rbx
   14000df67:	mov    rdx,rbx
   14000df6a:	mov    rcx,rsi
   14000df6d:	call   0x140029b60
   14000df72:	jmp    0x14000df90
   14000df74:	movsxd rax,edi
   14000df77:	lea    rbx,[rax+rax*1]
   14000df7b:	mov    r9,rbx
   14000df7e:	lea    r8,[rip+0x3c923]        # 0x14004a8a8
   14000df85:	mov    rdx,rbx
   14000df88:	mov    rcx,rsi
   14000df8b:	call   0x140029bf0
   14000df90:	test   edi,edi
   14000df92:	js     0x14000e039
   14000df98:	cmp    edi,DWORD PTR [rsi-0xc]
   14000df9b:	jg     0x14000e039
   14000dfa1:	mov    DWORD PTR [rsi-0x10],edi
   14000dfa4:	mov    WORD PTR [rbx+rsi*1],0x0
   14000dfaa:	call   0x14001f2e8
   14000dfaf:	movzx  r9d,WORD PTR [r15+0xc]
   14000dfb4:	mov    r8d,r14d
   14000dfb7:	mov    rdx,QWORD PTR [rax+0x10]
   14000dfbb:	lea    rcx,[rsp+0x68]
   14000dfc0:	call   0x140006d10
   14000dfc5:	xor    r11d,r11d
   14000dfc8:	lea    rdi,[rip+0x3c8d9]        # 0x14004a8a8
   14000dfcf:	mov    rbx,QWORD PTR [rsp+0x68]
   14000dfd4:	mov    rsi,rbx
   14000dfd7:	mov    ecx,0x1
   14000dfdc:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000dfdf:	je     0x14000dfe8
   14000dfe1:	sbb    r11d,r11d
   14000dfe4:	sbb    r11d,0xffffffff
   14000dfe8:	test   r11d,r11d
   14000dfeb:	sete   al
   14000dfee:	test   al,al
   14000dff0:	je     0x14000e012
   14000dff2:	call   0x14001f2e8
   14000dff7:	mov    r9w,0x409
   14000dffc:	mov    r8d,r14d
   14000dfff:	mov    rdx,QWORD PTR [rax+0x10]
   14000e003:	lea    rcx,[rsp+0x68]
   14000e008:	call   0x140006d10
   14000e00d:	mov    rbx,QWORD PTR [rsp+0x68]
   14000e012:	mov    rdx,rbx
   14000e015:	mov    rcx,r13
   14000e018:	call   0x14001ffac
   14000e01d:	nop
   14000e01e:	lea    rdx,[rbx-0x18]
   14000e022:	lock xadd DWORD PTR [rdx+0x10],ebp
   14000e027:	add    ebp,0xffffffff
   14000e02a:	test   ebp,ebp
   14000e02c:	jg     0x14000e044
   14000e02e:	mov    rcx,QWORD PTR [rdx]
   14000e031:	mov    rax,QWORD PTR [rcx]
   14000e034:	call   QWORD PTR [rax+0x8]
   14000e037:	jmp    0x14000e044
   14000e039:	mov    ecx,0x80070057
   14000e03e:	call   0x140003dc0
   14000e043:	nop
   14000e044:	mov    rbx,QWORD PTR [rsp+0x60]
   14000e049:	mov    rbp,QWORD PTR [rsp+0x70]
   14000e04e:	mov    rsi,QWORD PTR [rsp+0x78]
   14000e053:	add    rsp,0x30
   14000e057:	pop    r15
   14000e059:	pop    r14
   14000e05b:	pop    r13
   14000e05d:	pop    r12
   14000e05f:	pop    rdi
   14000e060:	ret    0x0
   14000e063:	int3   
   14000e064:	int3   
   14000e065:	int3   
   14000e066:	int3   
   14000e067:	int3   
   14000e068:	int3   
   14000e069:	int3   
   14000e06a:	int3   
   14000e06b:	int3   
   14000e06c:	int3   
   14000e06d:	int3   
   14000e06e:	int3   
   14000e06f:	int3   
   14000e070:	rex push rbp
   14000e072:	sub    rsp,0x20
   14000e076:	mov    rbp,rdx
   14000e079:	lea    rcx,[rbp+0x68]
   14000e07d:	call   0x140003de0
   14000e082:	add    rsp,0x20
   14000e086:	pop    rbp
   14000e087:	ret    
   14000e088:	int3   
   14000e089:	int3   
   14000e08a:	int3   
   14000e08b:	int3   
   14000e08c:	int3   
   14000e08d:	int3   
   14000e08e:	int3   
   14000e08f:	int3   
   14000e090:	test   rdx,rdx
   14000e093:	je     0x14000e47e
   14000e099:	mov    QWORD PTR [rsp+0x10],rdx
   14000e09e:	push   rbp
   14000e09f:	push   rsi
   14000e0a0:	push   rdi
   14000e0a1:	push   r12
   14000e0a3:	push   r13
   14000e0a5:	push   r14
   14000e0a7:	push   r15
   14000e0a9:	sub    rsp,0xa0
   14000e0b0:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14000e0b9:	mov    QWORD PTR [rsp+0xe0],rbx
   14000e0c1:	mov    DWORD PTR [rsp+0x4c],r8d
   14000e0c6:	mov    rsi,rdx
   14000e0c9:	call   0x14002157c
   14000e0ce:	mov    r11,rax
   14000e0d1:	xor    r14d,r14d
   14000e0d4:	mov    ecx,r14d
   14000e0d7:	test   rax,rax
   14000e0da:	setne  cl
   14000e0dd:	test   ecx,ecx
   14000e0df:	jne    0x14000e0ec
   14000e0e1:	mov    ecx,0x80004005
   14000e0e6:	call   0x140003dc0
   14000e0eb:	int3   
   14000e0ec:	mov    rax,QWORD PTR [rax]
   14000e0ef:	mov    rcx,r11
   14000e0f2:	call   QWORD PTR [rax+0x18]
   14000e0f5:	add    rax,0x18
   14000e0f9:	mov    QWORD PTR [rsp+0x40],rax
   14000e0fe:	lea    rdx,[rsp+0x40]
   14000e103:	mov    rcx,rsi
   14000e106:	call   0x14001a584
   14000e10b:	xor    r9d,r9d
   14000e10e:	xor    r8d,r8d
   14000e111:	lea    edx,[r9+0x31]
   14000e115:	mov    rcx,QWORD PTR [rsi+0x40]
   14000e119:	call   QWORD PTR [rip+0x358c9]        # 0x1400439e8
   14000e11f:	mov    rcx,rax
   14000e122:	call   0x140020f84
   14000e127:	mov    rbx,rax
   14000e12a:	mov    rdx,rsi
   14000e12d:	lea    rcx,[rsp+0x78]
   14000e132:	call   0x140020cfc
   14000e137:	nop
   14000e138:	mov    rdx,rbx
   14000e13b:	lea    rcx,[rsp+0x78]
   14000e140:	call   0x1400210e8
   14000e145:	mov    edx,0x20
   14000e14a:	lea    rcx,[rsp+0x78]
   14000e14f:	call   0x140020408
   14000e154:	mov    r13d,r14d
   14000e157:	mov    DWORD PTR [rsp+0xf8],r14d
   14000e15f:	lea    rdx,[rsp+0x58]
   14000e164:	mov    rcx,QWORD PTR [rsi+0x40]
   14000e168:	call   QWORD PTR [rip+0x35852]        # 0x1400439c0
   14000e16e:	mov    ebx,DWORD PTR [rsp+0x60]
   14000e172:	sub    ebx,DWORD PTR [rsp+0x58]
   14000e176:	mov    DWORD PTR [rsp+0x48],ebx
   14000e17a:	mov    r12d,r14d
   14000e17d:	or     r15d,0xffffffff
   14000e181:	mov    rdx,QWORD PTR [rsp+0x40]
   14000e186:	lea    rax,[rsp+0x50]
   14000e18b:	mov    QWORD PTR [rsp+0x30],rax
   14000e190:	mov    QWORD PTR [rsp+0x28],r14
   14000e195:	lea    rax,[rsp+0xf8]
   14000e19d:	mov    QWORD PTR [rsp+0x20],rax
   14000e1a2:	mov    r9d,ebx
   14000e1a5:	mov    r8d,DWORD PTR [rdx-0x10]
   14000e1a9:	mov    rcx,QWORD PTR [rsp+0x80]
   14000e1b1:	call   QWORD PTR [rip+0x34fa1]        # 0x140043158
   14000e1b7:	add    r13d,0x1
   14000e1bb:	cmp    DWORD PTR [rsp+0x50],ebx
   14000e1bf:	jl     0x14000e3fb
   14000e1c5:	mov    r8d,DWORD PTR [rsp+0xf8]
   14000e1cd:	lea    rdx,[rsp+0x68]
   14000e1d2:	lea    rcx,[rsp+0x40]
   14000e1d7:	call   0x14000e6b0
   14000e1dc:	nop
   14000e1dd:	mov    rbx,QWORD PTR [rsp+0x68]
   14000e1e2:	cmp    DWORD PTR [rbx-0x10],0x0
   14000e1e6:	jle    0x14000e2d8
   14000e1ec:	mov    dx,0xa
   14000e1f0:	mov    rcx,rbx
   14000e1f3:	call   0x14002a7d0
   14000e1f8:	mov    rbp,rax
   14000e1fb:	test   rax,rax
   14000e1fe:	je     0x14000e2d8
   14000e204:	sub    rbp,rbx
   14000e207:	sar    rbp,1
   14000e20a:	cmp    ebp,0xffffffff
   14000e20d:	jle    0x14000e2d8
   14000e213:	lea    edi,[rbp+0x1]
   14000e216:	test   edi,edi
   14000e218:	cmovs  edi,r14d
   14000e21c:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e221:	mov    esi,DWORD PTR [rcx-0x10]
   14000e224:	mov    eax,0x7fffffff
   14000e229:	cmp    eax,edi
   14000e22b:	js     0x14000e3c8
   14000e231:	cmp    edi,esi
   14000e233:	cmovg  edi,esi
   14000e236:	test   edi,edi
   14000e238:	jle    0x14000e2c3
   14000e23e:	sub    esi,edi
   14000e240:	lea    r14d,[rsi+0x1]
   14000e244:	cmp    DWORD PTR [rcx-0x8],0x1
   14000e248:	jle    0x14000e25c
   14000e24a:	mov    edx,DWORD PTR [rcx-0x10]
   14000e24d:	lea    rcx,[rsp+0x40]
   14000e252:	call   0x1400043d0
   14000e257:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e25c:	movsxd rdx,r14d
   14000e25f:	add    rdx,rdx
   14000e262:	movsxd rax,edi
   14000e265:	lea    r8,[rcx+rax*2]
   14000e269:	mov    r9,rdx
   14000e26c:	call   0x140029b60
   14000e271:	test   eax,eax
   14000e273:	je     0x14000e299
   14000e275:	cmp    eax,0xc
   14000e278:	je     0x14000e3b7
   14000e27e:	cmp    eax,0x16
   14000e281:	je     0x14000e3b1
   14000e287:	cmp    eax,0x22
   14000e28a:	je     0x14000e3b1
   14000e290:	cmp    eax,0x50
   14000e293:	jne    0x14000e3ab
   14000e299:	test   esi,esi
   14000e29b:	js     0x14000e3bd
   14000e2a1:	mov    rax,QWORD PTR [rsp+0x40]
   14000e2a6:	cmp    esi,DWORD PTR [rax-0xc]
   14000e2a9:	jg     0x14000e3bd
   14000e2af:	mov    DWORD PTR [rax-0x10],esi
   14000e2b2:	movsxd rcx,esi
   14000e2b5:	mov    rax,QWORD PTR [rsp+0x40]
   14000e2ba:	mov    WORD PTR [rax+rcx*2],0x0
   14000e2c0:	xor    r14d,r14d
   14000e2c3:	test   ebp,ebp
   14000e2c5:	jne    0x14000e2d0
   14000e2c7:	test   r12d,r12d
   14000e2ca:	je     0x14000e2d0
   14000e2cc:	sub    r13d,0x1
   14000e2d0:	mov    r12d,r14d
   14000e2d3:	jmp    0x14000e382
   14000e2d8:	mov    edi,DWORD PTR [rsp+0xf8]
   14000e2df:	test   edi,edi
   14000e2e1:	cmovs  edi,r14d
   14000e2e5:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e2ea:	mov    esi,DWORD PTR [rcx-0x10]
   14000e2ed:	mov    eax,0x7fffffff
   14000e2f2:	cmp    eax,edi
   14000e2f4:	js     0x14000e3f0
   14000e2fa:	cmp    edi,esi
   14000e2fc:	cmovg  edi,esi
   14000e2ff:	test   edi,edi
   14000e301:	jle    0x14000e37c
   14000e303:	sub    esi,edi
   14000e305:	lea    ebp,[rsi+0x1]
   14000e308:	cmp    DWORD PTR [rcx-0x8],0x1
   14000e30c:	jle    0x14000e320
   14000e30e:	mov    edx,DWORD PTR [rcx-0x10]
   14000e311:	lea    rcx,[rsp+0x40]
   14000e316:	call   0x1400043d0
   14000e31b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e320:	movsxd rdx,ebp
   14000e323:	add    rdx,rdx
   14000e326:	movsxd rax,edi
   14000e329:	lea    r8,[rcx+rax*2]
   14000e32d:	mov    r9,rdx
   14000e330:	call   0x140029b60
   14000e335:	test   eax,eax
   14000e337:	je     0x14000e359
   14000e339:	cmp    eax,0xc
   14000e33c:	je     0x14000e3df
   14000e342:	cmp    eax,0x16
   14000e345:	je     0x14000e3d9
   14000e34b:	cmp    eax,0x22
   14000e34e:	je     0x14000e3d9
   14000e354:	cmp    eax,0x50
   14000e357:	jne    0x14000e3d3
   14000e359:	test   esi,esi
   14000e35b:	js     0x14000e3e5
   14000e361:	mov    rax,QWORD PTR [rsp+0x40]
   14000e366:	cmp    esi,DWORD PTR [rax-0xc]
   14000e369:	jg     0x14000e3e5
   14000e36b:	mov    DWORD PTR [rax-0x10],esi
   14000e36e:	movsxd rcx,esi
   14000e371:	mov    rax,QWORD PTR [rsp+0x40]
   14000e376:	mov    WORD PTR [rax+rcx*2],0x0
   14000e37c:	mov    r12d,0x1
   14000e382:	lea    rdx,[rbx-0x18]
   14000e386:	mov    eax,r15d
   14000e389:	lock xadd DWORD PTR [rdx+0x10],eax
   14000e38e:	add    eax,0xffffffff
   14000e391:	test   eax,eax
   14000e393:	mov    ebx,DWORD PTR [rsp+0x48]
   14000e397:	jg     0x14000e181
   14000e39d:	mov    rcx,QWORD PTR [rdx]
   14000e3a0:	mov    rax,QWORD PTR [rcx]
   14000e3a3:	call   QWORD PTR [rax+0x8]
   14000e3a6:	jmp    0x14000e181
   14000e3ab:	call   0x1400218c0
   14000e3b0:	int3   
   14000e3b1:	call   0x1400218c0
   14000e3b6:	int3   
   14000e3b7:	call   0x140021878
   14000e3bc:	int3   
   14000e3bd:	mov    ecx,0x80070057
   14000e3c2:	call   0x140003dc0
   14000e3c7:	int3   
   14000e3c8:	mov    ecx,0x80070057
   14000e3cd:	call   0x140003dc0
   14000e3d2:	int3   
   14000e3d3:	call   0x1400218c0
   14000e3d8:	int3   
   14000e3d9:	call   0x1400218c0
   14000e3de:	int3   
   14000e3df:	call   0x140021878
   14000e3e4:	int3   
   14000e3e5:	mov    ecx,0x80070057
   14000e3ea:	call   0x140003dc0
   14000e3ef:	int3   
   14000e3f0:	mov    ecx,0x80070057
   14000e3f5:	call   0x140003dc0
   14000e3fa:	nop
   14000e3fb:	mov    edi,DWORD PTR [rsp+0x4c]
   14000e3ff:	test   edi,edi
   14000e401:	cmove  edi,DWORD PTR [rsp+0x54]
   14000e406:	imul   edi,r13d
   14000e40a:	mov    eax,DWORD PTR [rsp+0x60]
   14000e40e:	sub    eax,DWORD PTR [rsp+0x58]
   14000e412:	mov    DWORD PTR [rsp+0x30],0x1e
   14000e41a:	mov    DWORD PTR [rsp+0x28],edi
   14000e41e:	mov    DWORD PTR [rsp+0x20],eax
   14000e422:	xor    r9d,r9d
   14000e425:	xor    r8d,r8d
   14000e428:	xor    edx,edx
   14000e42a:	mov    rcx,QWORD PTR [rsp+0xe8]
   14000e432:	call   0x140020160
   14000e437:	nop
   14000e438:	lea    rcx,[rsp+0x78]
   14000e43d:	call   0x140020d84
   14000e442:	nop
   14000e443:	mov    rdx,QWORD PTR [rsp+0x40]
   14000e448:	add    rdx,0xffffffffffffffe8
   14000e44c:	lock xadd DWORD PTR [rdx+0x10],r15d
   14000e452:	add    r15d,0xffffffff
   14000e456:	test   r15d,r15d
   14000e459:	jg     0x14000e464
   14000e45b:	mov    rcx,QWORD PTR [rdx]
   14000e45e:	mov    rax,QWORD PTR [rcx]
   14000e461:	call   QWORD PTR [rax+0x8]
   14000e464:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000e46c:	add    rsp,0xa0
   14000e473:	pop    r15
   14000e475:	pop    r14
   14000e477:	pop    r13
   14000e479:	pop    r12
   14000e47b:	pop    rdi
   14000e47c:	pop    rsi
   14000e47d:	pop    rbp
   14000e47e:	ret    0x0
   14000e481:	int3   
   14000e482:	int3   
   14000e483:	int3   
   14000e484:	int3   
   14000e485:	int3   
   14000e486:	int3   
   14000e487:	int3   
   14000e488:	int3   
   14000e489:	int3   
   14000e48a:	int3   
   14000e48b:	int3   
   14000e48c:	int3   
   14000e48d:	int3   
   14000e48e:	int3   
   14000e48f:	int3   
   14000e490:	rex push rbp
   14000e492:	sub    rsp,0x20
   14000e496:	mov    rbp,rdx
   14000e499:	lea    rcx,[rbp+0x40]
   14000e49d:	call   0x140003de0
   14000e4a2:	add    rsp,0x20
   14000e4a6:	pop    rbp
   14000e4a7:	ret    
   14000e4a8:	int3   
   14000e4a9:	int3   
   14000e4aa:	int3   
   14000e4ab:	int3   
   14000e4ac:	int3   
   14000e4ad:	int3   
   14000e4ae:	int3   
   14000e4af:	int3   
   14000e4b0:	rex push rbp
   14000e4b2:	sub    rsp,0x20
   14000e4b6:	mov    rbp,rdx
   14000e4b9:	lea    rcx,[rbp+0x78]
   14000e4bd:	call   0x140020d84
   14000e4c2:	add    rsp,0x20
   14000e4c6:	pop    rbp
   14000e4c7:	ret    
   14000e4c8:	int3   
   14000e4c9:	int3   
   14000e4ca:	int3   
   14000e4cb:	int3   
   14000e4cc:	int3   
   14000e4cd:	int3   
   14000e4ce:	int3   
   14000e4cf:	int3   
   14000e4d0:	rex push rbp
   14000e4d2:	sub    rsp,0x20
   14000e4d6:	mov    rbp,rdx
   14000e4d9:	lea    rcx,[rbp+0x68]
   14000e4dd:	call   0x140003de0
   14000e4e2:	add    rsp,0x20
   14000e4e6:	pop    rbp
   14000e4e7:	ret    
   14000e4e8:	int3   
   14000e4e9:	int3   
   14000e4ea:	int3   
   14000e4eb:	int3   
   14000e4ec:	int3   
   14000e4ed:	int3   
   14000e4ee:	int3   
   14000e4ef:	int3   
   14000e4f0:	test   rdx,rdx
   14000e4f3:	je     0x14000e66c
   14000e4f9:	push   rdi
   14000e4fa:	sub    rsp,0x80
   14000e501:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000e50a:	mov    QWORD PTR [rsp+0x90],rbx
   14000e512:	mov    rdi,rdx
   14000e515:	call   0x14002157c
   14000e51a:	mov    r11,rax
   14000e51d:	xor    ecx,ecx
   14000e51f:	test   rax,rax
   14000e522:	setne  cl
   14000e525:	test   ecx,ecx
   14000e527:	jne    0x14000e534
   14000e529:	mov    ecx,0x80004005
   14000e52e:	call   0x140003dc0
   14000e533:	int3   
   14000e534:	mov    rax,QWORD PTR [rax]
   14000e537:	mov    rcx,r11
   14000e53a:	call   QWORD PTR [rax+0x18]
   14000e53d:	add    rax,0x18
   14000e541:	mov    QWORD PTR [rsp+0x98],rax
   14000e549:	lea    rdx,[rsp+0x98]
   14000e551:	mov    rcx,rdi
   14000e554:	call   0x14001a584
   14000e559:	xor    r9d,r9d
   14000e55c:	xor    r8d,r8d
   14000e55f:	lea    edx,[r9+0x31]
   14000e563:	mov    rcx,QWORD PTR [rdi+0x40]
   14000e567:	call   QWORD PTR [rip+0x3547b]        # 0x1400439e8
   14000e56d:	mov    rcx,rax
   14000e570:	call   0x140020f84
   14000e575:	mov    rbx,rax
   14000e578:	mov    rdx,rdi
   14000e57b:	lea    rcx,[rsp+0x58]
   14000e580:	call   0x140020cfc
   14000e585:	nop
   14000e586:	mov    rdx,rbx
   14000e589:	lea    rcx,[rsp+0x58]
   14000e58e:	call   0x1400210e8
   14000e593:	mov    edx,0x20
   14000e598:	lea    rcx,[rsp+0x58]
   14000e59d:	call   0x140020408
   14000e5a2:	mov    edx,0x8
   14000e5a7:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e5ac:	call   QWORD PTR [rip+0x34bb6]        # 0x140043168
   14000e5b2:	mov    rdx,QWORD PTR [rsp+0x98]
   14000e5ba:	lea    r9,[rsp+0xa0]
   14000e5c2:	mov    r8d,DWORD PTR [rdx-0x10]
   14000e5c6:	mov    rcx,QWORD PTR [rsp+0x60]
   14000e5cb:	call   QWORD PTR [rip+0x34b7f]        # 0x140043150
   14000e5d1:	test   eax,eax
   14000e5d3:	je     0x14000e62d
   14000e5d5:	lea    rdx,[rsp+0x48]
   14000e5da:	mov    rcx,QWORD PTR [rdi+0x40]
   14000e5de:	call   QWORD PTR [rip+0x353dc]        # 0x1400439c0
   14000e5e4:	mov    r11d,DWORD PTR [rsp+0x54]
   14000e5e9:	sub    r11d,DWORD PTR [rsp+0x4c]
   14000e5ee:	movsd  xmm0,QWORD PTR [rip+0x4e58a]        # 0x14005cb80
   14000e5f6:	mulsd  xmm0,QWORD PTR [rip+0x3f20a]        # 0x14004d808
   14000e5fe:	cvttsd2si eax,xmm0
   14000e602:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000e609:	sub    ecx,eax
   14000e60b:	mov    DWORD PTR [rsp+0x30],0x1e
   14000e613:	mov    DWORD PTR [rsp+0x28],r11d
   14000e618:	mov    DWORD PTR [rsp+0x20],ecx
   14000e61c:	xor    r9d,r9d
   14000e61f:	xor    r8d,r8d
   14000e622:	xor    edx,edx
   14000e624:	mov    rcx,rdi
   14000e627:	call   0x140020160
   14000e62c:	nop
   14000e62d:	lea    rcx,[rsp+0x58]
   14000e632:	call   0x140020d84
   14000e637:	nop
   14000e638:	mov    rdx,QWORD PTR [rsp+0x98]
   14000e640:	add    rdx,0xffffffffffffffe8
   14000e644:	or     eax,0xffffffff
   14000e647:	lock xadd DWORD PTR [rdx+0x10],eax
   14000e64c:	add    eax,0xffffffff
   14000e64f:	test   eax,eax
   14000e651:	jg     0x14000e65c
   14000e653:	mov    rcx,QWORD PTR [rdx]
   14000e656:	mov    rax,QWORD PTR [rcx]
   14000e659:	call   QWORD PTR [rax+0x8]
   14000e65c:	mov    rbx,QWORD PTR [rsp+0x90]
   14000e664:	add    rsp,0x80
   14000e66b:	pop    rdi
   14000e66c:	ret    0x0
   14000e66f:	int3   
   14000e670:	rex push rbp
   14000e672:	sub    rsp,0x20
   14000e676:	mov    rbp,rdx
   14000e679:	lea    rcx,[rbp+0x98]
   14000e680:	call   0x140003de0
   14000e685:	add    rsp,0x20
   14000e689:	pop    rbp
   14000e68a:	ret    
   14000e68b:	int3   
   14000e68c:	int3   
   14000e68d:	int3   
   14000e68e:	int3   
   14000e68f:	int3   
   14000e690:	rex push rbp
   14000e692:	sub    rsp,0x20
   14000e696:	mov    rbp,rdx
   14000e699:	lea    rcx,[rbp+0x58]
   14000e69d:	call   0x140020d84
   14000e6a2:	add    rsp,0x20
   14000e6a6:	pop    rbp
   14000e6a7:	ret    
   14000e6a8:	int3   
   14000e6a9:	int3   
   14000e6aa:	int3   
   14000e6ab:	int3   
   14000e6ac:	int3   
   14000e6ad:	int3   
   14000e6ae:	int3   
   14000e6af:	int3   
   14000e6b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e6b5:	mov    QWORD PTR [rsp+0x10],rsi
   14000e6ba:	push   rdi
   14000e6bb:	sub    rsp,0x20
   14000e6bf:	xor    eax,eax
   14000e6c1:	test   r8d,r8d
   14000e6c4:	mov    rsi,rcx
   14000e6c7:	mov    rcx,QWORD PTR [rcx]
   14000e6ca:	mov    ebx,r8d
   14000e6cd:	mov    rdi,rdx
   14000e6d0:	cmovs  ebx,eax
   14000e6d3:	mov    DWORD PTR [rsp+0x40],eax
   14000e6d7:	cmp    ebx,DWORD PTR [rcx-0x10]
   14000e6da:	jl     0x14000e75a
   14000e6dc:	lea    rbx,[rcx-0x18]
   14000e6e0:	mov    rcx,QWORD PTR [rcx-0x18]
   14000e6e4:	mov    rax,QWORD PTR [rcx]
   14000e6e7:	call   QWORD PTR [rax+0x20]
   14000e6ea:	cmp    DWORD PTR [rbx+0x10],0x0
   14000e6ee:	mov    rcx,rax
   14000e6f1:	jl     0x14000e702
   14000e6f3:	cmp    rax,QWORD PTR [rbx]
   14000e6f6:	jne    0x14000e702
   14000e6f8:	mov    rsi,rbx
   14000e6fb:	lock add DWORD PTR [rbx+0x10],0x1
   14000e700:	jmp    0x14000e740
   14000e702:	mov    rax,QWORD PTR [rax]
   14000e705:	mov    edx,DWORD PTR [rbx+0x8]
   14000e708:	mov    r8d,0x2
   14000e70e:	call   QWORD PTR [rax]
   14000e710:	test   rax,rax
   14000e713:	mov    rsi,rax
   14000e716:	jne    0x14000e71e
   14000e718:	call   0x140004480
   14000e71d:	int3   
   14000e71e:	mov    eax,DWORD PTR [rbx+0x8]
   14000e721:	lea    r8,[rbx+0x18]
   14000e725:	lea    rcx,[rsi+0x18]
   14000e729:	mov    DWORD PTR [rsi+0x8],eax
   14000e72c:	mov    eax,DWORD PTR [rbx+0x8]
   14000e72f:	add    eax,0x1
   14000e732:	movsxd rdx,eax
   14000e735:	add    rdx,rdx
   14000e738:	mov    r9,rdx
   14000e73b:	call   0x140029bf0
   14000e740:	lea    rax,[rsi+0x18]
   14000e744:	mov    QWORD PTR [rdi],rax
   14000e747:	mov    rax,rdi
   14000e74a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e74f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e754:	add    rsp,0x20
   14000e758:	pop    rdi
   14000e759:	ret    
   14000e75a:	mov    rcx,QWORD PTR [rcx-0x18]
   14000e75e:	test   rcx,rcx
   14000e761:	je     0x14000e771
   14000e763:	mov    rax,QWORD PTR [rcx]
   14000e766:	call   QWORD PTR [rax+0x20]
   14000e769:	test   rax,rax
   14000e76c:	mov    rcx,rax
   14000e76f:	jne    0x14000e782
   14000e771:	call   0x14002157c
   14000e776:	mov    rcx,rax
   14000e779:	mov    rdx,QWORD PTR [rax]
   14000e77c:	call   QWORD PTR [rdx+0x20]
   14000e77f:	mov    rcx,rax
   14000e782:	test   rcx,rcx
   14000e785:	mov    rsi,QWORD PTR [rsi]
   14000e788:	jne    0x14000e795
   14000e78a:	mov    ecx,0x80004005
   14000e78f:	call   0x140003dc0
   14000e794:	int3   
   14000e795:	test   rsi,rsi
   14000e798:	jne    0x14000e7a9
   14000e79a:	test   ebx,ebx
   14000e79c:	je     0x14000e7a9
   14000e79e:	mov    ecx,0x80070057
   14000e7a3:	call   0x140003dc0
   14000e7a8:	int3   
   14000e7a9:	mov    rax,QWORD PTR [rcx]
   14000e7ac:	mov    r8d,0x2
   14000e7b2:	mov    edx,ebx
   14000e7b4:	call   QWORD PTR [rax]
   14000e7b6:	test   rax,rax
   14000e7b9:	jne    0x14000e7c1
   14000e7bb:	call   0x140004480
   14000e7c0:	int3   
   14000e7c1:	add    rax,0x18
   14000e7c5:	test   ebx,ebx
   14000e7c7:	mov    QWORD PTR [rdi],rax
   14000e7ca:	js     0x14000e805
   14000e7cc:	cmp    ebx,DWORD PTR [rax-0xc]
   14000e7cf:	jg     0x14000e805
   14000e7d1:	mov    DWORD PTR [rax-0x10],ebx
   14000e7d4:	movsxd rax,ebx
   14000e7d7:	mov    r8,rsi
   14000e7da:	lea    rdx,[rax+rax*1]
   14000e7de:	mov    rax,QWORD PTR [rdi]
   14000e7e1:	mov    WORD PTR [rdx+rax*1],0x0
   14000e7e7:	mov    rcx,QWORD PTR [rdi]
   14000e7ea:	mov    r9,rdx
   14000e7ed:	call   0x140029bf0
   14000e7f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e7f7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e7fc:	mov    rax,rdi
   14000e7ff:	add    rsp,0x20
   14000e803:	pop    rdi
   14000e804:	ret    
   14000e805:	mov    ecx,0x80070057
   14000e80a:	call   0x140003dc0
   14000e80f:	int3   
   14000e810:	mov    QWORD PTR [rsp+0x8],rbx
   14000e815:	mov    QWORD PTR [rsp+0x10],rsi
   14000e81a:	push   rdi
   14000e81b:	sub    rsp,0x20
   14000e81f:	test   r9,r9
   14000e822:	movsxd rbx,r8d
   14000e825:	mov    rsi,rdx
   14000e828:	mov    rdi,rcx
   14000e82b:	jne    0x14000e838
   14000e82d:	mov    ecx,0x80004005
   14000e832:	call   0x140003dc0
   14000e837:	int3   
   14000e838:	test   rdx,rdx
   14000e83b:	jne    0x14000e84d
   14000e83d:	test   r8d,r8d
   14000e840:	je     0x14000e84d
   14000e842:	mov    ecx,0x80070057
   14000e847:	call   0x140003dc0
   14000e84c:	int3   
   14000e84d:	mov    rax,QWORD PTR [r9]
   14000e850:	mov    r8d,0x2
   14000e856:	mov    edx,ebx
   14000e858:	mov    rcx,r9
   14000e85b:	call   QWORD PTR [rax]
   14000e85d:	test   rax,rax
   14000e860:	jne    0x14000e868
   14000e862:	call   0x140004480
   14000e867:	int3   
   14000e868:	add    rax,0x18
   14000e86c:	test   ebx,ebx
   14000e86e:	mov    QWORD PTR [rdi],rax
   14000e871:	js     0x14000e8a9
   14000e873:	cmp    ebx,DWORD PTR [rax-0xc]
   14000e876:	jg     0x14000e8a9
   14000e878:	mov    DWORD PTR [rax-0x10],ebx
   14000e87b:	mov    rax,QWORD PTR [rdi]
   14000e87e:	lea    rdx,[rbx+rbx*1]
   14000e882:	mov    WORD PTR [rdx+rax*1],0x0
   14000e888:	mov    rcx,QWORD PTR [rdi]
   14000e88b:	mov    r9,rdx
   14000e88e:	mov    r8,rsi
   14000e891:	call   0x140029bf0
   14000e896:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e89b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e8a0:	mov    rax,rdi
   14000e8a3:	add    rsp,0x20
   14000e8a7:	pop    rdi
   14000e8a8:	ret    
   14000e8a9:	mov    ecx,0x80070057
   14000e8ae:	call   0x140003dc0
   14000e8b3:	int3   
   14000e8b4:	int3   
   14000e8b5:	int3   
   14000e8b6:	int3   
   14000e8b7:	int3   
   14000e8b8:	int3   
   14000e8b9:	int3   
   14000e8ba:	int3   
   14000e8bb:	int3   
   14000e8bc:	int3   
   14000e8bd:	int3   
   14000e8be:	int3   
   14000e8bf:	int3   
   14000e8c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e8c5:	mov    QWORD PTR [rsp+0x10],rbp
   14000e8ca:	mov    QWORD PTR [rsp+0x18],rsi
   14000e8cf:	push   rdi
   14000e8d0:	sub    rsp,0x20
   14000e8d4:	mov    rbx,rcx
   14000e8d7:	call   0x140016de8
   14000e8dc:	xor    ebp,ebp
   14000e8de:	mov    QWORD PTR [rbx+0xa8],rbp
   14000e8e5:	lea    rax,[rip+0x3d6dc]        # 0x14004bfc8
   14000e8ec:	lea    rsi,[rip+0x3c43d]        # 0x14004ad30
   14000e8f3:	mov    QWORD PTR [rbx],rax
   14000e8f6:	lea    rcx,[rip+0x533d3]        # 0x140061cd0
   14000e8fd:	mov    QWORD PTR [rbx+0xb0],rsi
   14000e904:	mov    QWORD PTR [rbx+0xb8],rbp
   14000e90b:	mov    QWORD PTR [rbx+0xc0],rbp
   14000e912:	mov    DWORD PTR [rbx+0xc8],ebp
   14000e918:	mov    DWORD PTR [rbx+0xcc],ebp
   14000e91e:	mov    DWORD PTR [rbx+0xd0],ebp
   14000e924:	mov    DWORD PTR [rbx+0xd4],ebp
   14000e92a:	mov    BYTE PTR [rbx+0xd8],bpl
   14000e931:	mov    BYTE PTR [rbx+0xd9],bpl
   14000e938:	mov    DWORD PTR [rbx+0xdc],0xffffffff
   14000e942:	mov    QWORD PTR [rbx+0xe0],rbp
   14000e949:	mov    DWORD PTR [rbx+0xe8],ebp
   14000e94f:	mov    QWORD PTR [rbx+0xf0],rbp
   14000e956:	call   QWORD PTR [rip+0x34be4]        # 0x140043540
   14000e95c:	add    DWORD PTR [rip+0x53395],0x1        # 0x140061cf8
   14000e963:	lea    rcx,[rip+0x53366]        # 0x140061cd0
   14000e96a:	call   QWORD PTR [rip+0x34bc8]        # 0x140043538
   14000e970:	mov    QWORD PTR [rbx+0xf8],rbp
   14000e977:	lea    rdi,[rip+0x3c2ca]        # 0x14004ac48
   14000e97e:	mov    QWORD PTR [rbx+0xb0],rdi
   14000e985:	lea    rcx,[rip+0x53344]        # 0x140061cd0
   14000e98c:	mov    QWORD PTR [rbx+0x100],rsi
   14000e993:	mov    QWORD PTR [rbx+0x108],rbp
   14000e99a:	mov    QWORD PTR [rbx+0x110],rbp
   14000e9a1:	mov    DWORD PTR [rbx+0x118],ebp
   14000e9a7:	mov    DWORD PTR [rbx+0x11c],ebp
   14000e9ad:	mov    DWORD PTR [rbx+0x120],ebp
   14000e9b3:	mov    DWORD PTR [rbx+0x124],ebp
   14000e9b9:	mov    BYTE PTR [rbx+0x128],bpl
   14000e9c0:	mov    BYTE PTR [rbx+0x129],bpl
   14000e9c7:	mov    DWORD PTR [rbx+0x12c],0xffffffff
   14000e9d1:	mov    QWORD PTR [rbx+0x130],rbp
   14000e9d8:	mov    DWORD PTR [rbx+0x138],ebp
   14000e9de:	mov    QWORD PTR [rbx+0x140],rbp
   14000e9e5:	call   QWORD PTR [rip+0x34b55]        # 0x140043540
   14000e9eb:	add    DWORD PTR [rip+0x53306],0x1        # 0x140061cf8
   14000e9f2:	lea    rcx,[rip+0x532d7]        # 0x140061cd0
   14000e9f9:	call   QWORD PTR [rip+0x34b39]        # 0x140043538
   14000e9ff:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ea04:	mov    QWORD PTR [rbx+0x148],rbp
   14000ea0b:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ea10:	mov    QWORD PTR [rbx+0x100],rdi
   14000ea17:	mov    rax,rbx
   14000ea1a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ea1f:	add    rsp,0x20
   14000ea23:	pop    rdi
   14000ea24:	ret    
   14000ea25:	int3   
   14000ea26:	int3   
   14000ea27:	int3   
   14000ea28:	int3   
   14000ea29:	int3   
   14000ea2a:	int3   
   14000ea2b:	int3   
   14000ea2c:	int3   
   14000ea2d:	int3   
   14000ea2e:	int3   
   14000ea2f:	int3   
   14000ea30:	mov    QWORD PTR [rsp+0x8],rbx
   14000ea35:	push   rdi
   14000ea36:	sub    rsp,0x20
   14000ea3a:	mov    ebx,edx
   14000ea3c:	mov    rdi,rcx
   14000ea3f:	call   0x14000ea60
   14000ea44:	test   bl,0x1
   14000ea47:	je     0x14000ea51
   14000ea49:	mov    rcx,rdi
   14000ea4c:	call   0x14001490c
   14000ea51:	mov    rax,rdi
   14000ea54:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ea59:	add    rsp,0x20
   14000ea5d:	pop    rdi
   14000ea5e:	ret    
   14000ea5f:	int3   
   14000ea60:	mov    QWORD PTR [rsp+0x8],rbx
   14000ea65:	mov    QWORD PTR [rsp+0x10],rsi
   14000ea6a:	push   rdi
   14000ea6b:	sub    rsp,0x20
   14000ea6f:	lea    rax,[rip+0x3d552]        # 0x14004bfc8
   14000ea76:	lea    rsi,[rip+0x3c2b3]        # 0x14004ad30
   14000ea7d:	mov    rbx,rcx
   14000ea80:	mov    QWORD PTR [rcx],rax
   14000ea83:	mov    QWORD PTR [rcx+0x100],rsi
   14000ea8a:	mov    rcx,QWORD PTR [rcx+0x108]
   14000ea91:	xor    edi,edi
   14000ea93:	test   rcx,rcx
   14000ea96:	je     0x14000eadc
   14000ea98:	mov    QWORD PTR [rbx+0x108],rdi
   14000ea9f:	mov    QWORD PTR [rbx+0x110],rdi
   14000eaa6:	mov    DWORD PTR [rbx+0x118],edi
   14000eaac:	mov    DWORD PTR [rbx+0x11c],edi
   14000eab2:	mov    DWORD PTR [rbx+0x124],edi
   14000eab8:	mov    DWORD PTR [rbx+0x120],edi
   14000eabe:	mov    DWORD PTR [rbx+0x12c],0xffffffff
   14000eac8:	mov    BYTE PTR [rbx+0x129],dil
   14000eacf:	mov    BYTE PTR [rbx+0x128],dil
   14000ead6:	call   QWORD PTR [rip+0x34694]        # 0x140043170
   14000eadc:	lea    rcx,[rip+0x531ed]        # 0x140061cd0
   14000eae3:	call   QWORD PTR [rip+0x34a57]        # 0x140043540
   14000eae9:	sub    DWORD PTR [rip+0x53208],0x1        # 0x140061cf8
   14000eaf0:	jne    0x14000eb24
   14000eaf2:	lea    rcx,[rip+0x531d7]        # 0x140061cd0
   14000eaf9:	call   QWORD PTR [rip+0x34a41]        # 0x140043540
   14000eaff:	mov    rcx,QWORD PTR [rip+0x531c2]        # 0x140061cc8
   14000eb06:	test   rcx,rcx
   14000eb09:	je     0x14000eb10
   14000eb0b:	call   0x140040d10
   14000eb10:	lea    rcx,[rip+0x531b9]        # 0x140061cd0
   14000eb17:	mov    QWORD PTR [rip+0x531aa],rdi        # 0x140061cc8
   14000eb1e:	call   QWORD PTR [rip+0x34a14]        # 0x140043538
   14000eb24:	lea    rcx,[rip+0x531a5]        # 0x140061cd0
   14000eb2b:	call   QWORD PTR [rip+0x34a07]        # 0x140043538
   14000eb31:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000eb38:	mov    QWORD PTR [rbx+0xb0],rsi
   14000eb3f:	test   rcx,rcx
   14000eb42:	je     0x14000eb88
   14000eb44:	mov    QWORD PTR [rbx+0xb8],rdi
   14000eb4b:	mov    QWORD PTR [rbx+0xc0],rdi
   14000eb52:	mov    DWORD PTR [rbx+0xc8],edi
   14000eb58:	mov    DWORD PTR [rbx+0xcc],edi
   14000eb5e:	mov    DWORD PTR [rbx+0xd4],edi
   14000eb64:	mov    DWORD PTR [rbx+0xd0],edi
   14000eb6a:	mov    DWORD PTR [rbx+0xdc],0xffffffff
   14000eb74:	mov    BYTE PTR [rbx+0xd9],dil
   14000eb7b:	mov    BYTE PTR [rbx+0xd8],dil
   14000eb82:	call   QWORD PTR [rip+0x345e8]        # 0x140043170
   14000eb88:	lea    rcx,[rip+0x53141]        # 0x140061cd0
   14000eb8f:	call   QWORD PTR [rip+0x349ab]        # 0x140043540
   14000eb95:	sub    DWORD PTR [rip+0x5315c],0x1        # 0x140061cf8
   14000eb9c:	jne    0x14000ebd0
   14000eb9e:	lea    rcx,[rip+0x5312b]        # 0x140061cd0
   14000eba5:	call   QWORD PTR [rip+0x34995]        # 0x140043540
   14000ebab:	mov    rcx,QWORD PTR [rip+0x53116]        # 0x140061cc8
   14000ebb2:	test   rcx,rcx
   14000ebb5:	je     0x14000ebbc
   14000ebb7:	call   0x140040d10
   14000ebbc:	lea    rcx,[rip+0x5310d]        # 0x140061cd0
   14000ebc3:	mov    QWORD PTR [rip+0x530fe],rdi        # 0x140061cc8
   14000ebca:	call   QWORD PTR [rip+0x34968]        # 0x140043538
   14000ebd0:	lea    rcx,[rip+0x530f9]        # 0x140061cd0
   14000ebd7:	call   QWORD PTR [rip+0x3495b]        # 0x140043538
   14000ebdd:	lea    r11,[rip+0x3d9b4]        # 0x14004c598
   14000ebe4:	mov    rcx,rbx
   14000ebe7:	mov    QWORD PTR [rbx],r11
   14000ebea:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ebef:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ebf4:	add    rsp,0x20
   14000ebf8:	pop    rdi
   14000ebf9:	jmp    0x1400212fc
   14000ebfe:	int3   
   14000ebff:	int3   
   14000ec00:	lea    rax,[rip+0x3d3a9]        # 0x14004bfb0
   14000ec07:	ret    
   14000ec08:	int3   
   14000ec09:	int3   
   14000ec0a:	int3   
   14000ec0b:	int3   
   14000ec0c:	int3   
   14000ec0d:	int3   
   14000ec0e:	int3   
   14000ec0f:	int3   
   14000ec10:	mov    QWORD PTR [rsp+0x8],rbx
   14000ec15:	mov    QWORD PTR [rsp+0x10],rbp
   14000ec1a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ec1f:	mov    QWORD PTR [rsp+0x20],rdi
   14000ec24:	push   r12
   14000ec26:	sub    rsp,0x30
   14000ec2a:	mov    rdi,rcx
   14000ec2d:	mov    rcx,QWORD PTR [rdx+0x20]
   14000ec31:	mov    rbp,r8
   14000ec34:	mov    rbx,rdx
   14000ec37:	call   0x140020c14
   14000ec3c:	mov    rcx,QWORD PTR [rdi+0x40]
   14000ec40:	mov    rsi,rax
   14000ec43:	call   QWORD PTR [rip+0x34d87]        # 0x1400439d0
   14000ec49:	mov    rcx,rax
   14000ec4c:	call   0x140018e70
   14000ec51:	mov    rcx,rdi
   14000ec54:	call   0x14001fee4
   14000ec59:	mov    rcx,rdi
   14000ec5c:	call   0x140020094
   14000ec61:	xor    r12d,r12d
   14000ec64:	mov    QWORD PTR [rbp+0x0],0x0
   14000ec6c:	test   eax,eax
   14000ec6e:	mov    eax,DWORD PTR [rbx+0x18]
   14000ec71:	sete   r12b
   14000ec75:	sub    eax,0x1
   14000ec78:	je     0x14000ed0a
   14000ec7e:	cmp    eax,0x1
   14000ec81:	jne    0x14000ed12
   14000ec87:	test   rsi,rsi
   14000ec8a:	je     0x14000ecb6
   14000ec8c:	mov    rcx,QWORD PTR [rdi+0x40]
   14000ec90:	lea    rdx,[rsp+0x20]
   14000ec95:	call   QWORD PTR [rip+0x34d45]        # 0x1400439e0
   14000ec9b:	mov    ecx,0x5
   14000eca0:	call   QWORD PTR [rip+0x34d32]        # 0x1400439d8
   14000eca6:	lea    rdx,[rsp+0x20]
   14000ecab:	mov    rcx,rsi
   14000ecae:	mov    r8d,eax
   14000ecb1:	call   0x1400211b4
   14000ecb6:	cmp    QWORD PTR [rdi+0x108],0x0
   14000ecbe:	je     0x14000ece4
   14000ecc0:	cmp    QWORD PTR [rdi+0xb8],0x0
   14000ecc8:	je     0x14000ed12
   14000ecca:	mov    rax,QWORD PTR [rdi]
   14000eccd:	mov    r8d,r12d
   14000ecd0:	mov    rdx,rsi
   14000ecd3:	mov    rcx,rdi
   14000ecd6:	call   QWORD PTR [rax+0x278]
   14000ecdc:	mov    QWORD PTR [rbp+0x0],0x4
   14000ece4:	cmp    QWORD PTR [rdi+0xb8],0x0
   14000ecec:	je     0x14000ed12
   14000ecee:	mov    rax,QWORD PTR [rdi]
   14000ecf1:	mov    r8d,r12d
   14000ecf4:	mov    rdx,rsi
   14000ecf7:	mov    rcx,rdi
   14000ecfa:	call   QWORD PTR [rax+0x280]
   14000ed00:	mov    QWORD PTR [rbp+0x0],0x4
   14000ed08:	jmp    0x14000ed12
   14000ed0a:	mov    QWORD PTR [rbp+0x0],0x10
   14000ed12:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ed17:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ed1c:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ed21:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ed26:	add    rsp,0x30
   14000ed2a:	pop    r12
   14000ed2c:	ret    
   14000ed2d:	int3   
   14000ed2e:	int3   
   14000ed2f:	int3   
   14000ed30:	test   rdx,rdx
   14000ed33:	je     0x14000ef08
   14000ed39:	mov    rax,rsp
   14000ed3c:	mov    QWORD PTR [rax+0x18],rbp
   14000ed40:	mov    QWORD PTR [rax+0x20],rsi
   14000ed44:	push   r12
   14000ed46:	sub    rsp,0x90
   14000ed4d:	cmp    QWORD PTR [rcx+0x108],0x0
   14000ed55:	mov    r12d,r8d
   14000ed58:	mov    rbp,rdx
   14000ed5b:	mov    rsi,rcx
   14000ed5e:	je     0x14000eef3
   14000ed64:	cmp    QWORD PTR [rcx+0xb8],0x0
   14000ed6c:	je     0x14000eef3
   14000ed72:	mov    QWORD PTR [rax+0x8],rbx
   14000ed76:	mov    QWORD PTR [rax+0x10],rdi
   14000ed7a:	call   0x14001fee4
   14000ed7f:	mov    rcx,QWORD PTR [rsi+0x40]
   14000ed83:	lea    rdx,[rsp+0x80]
   14000ed8b:	xor    edi,edi
   14000ed8d:	mov    ebx,eax
   14000ed8f:	call   QWORD PTR [rip+0x34c4b]        # 0x1400439e0
   14000ed95:	mov    rcx,QWORD PTR [rsi+0x40]
   14000ed99:	lea    r9,[rsp+0x60]
   14000ed9e:	xor    r8d,r8d
   14000eda1:	mov    edx,0x419
   14000eda6:	call   QWORD PTR [rip+0x34c3c]        # 0x1400439e8
   14000edac:	mov    rcx,QWORD PTR [rsi+0x40]
   14000edb0:	lea    r9,[rsp+0x70]
   14000edb5:	xor    r8d,r8d
   14000edb8:	mov    edx,0x41a
   14000edbd:	call   QWORD PTR [rip+0x34c25]        # 0x1400439e8
   14000edc3:	test   bl,0x2
   14000edc6:	je     0x14000ee44
   14000edc8:	mov    edx,DWORD PTR [rsp+0x6c]
   14000edcc:	mov    r8d,DWORD PTR [rsp+0x64]
   14000edd1:	mov    ecx,DWORD PTR [rsi+0xcc]
   14000edd7:	mov    eax,edx
   14000edd9:	sub    eax,r8d
   14000eddc:	cmp    ecx,eax
   14000edde:	jge    0x14000ede7
   14000ede0:	mov    edi,edx
   14000ede2:	sub    edi,ecx
   14000ede4:	sub    edi,r8d
   14000ede7:	mov    r8d,DWORD PTR [rsi+0x118]
   14000edee:	mov    eax,DWORD PTR [rsp+0x78]
   14000edf2:	mov    r9d,DWORD PTR [rsp+0x70]
   14000edf7:	mov    BYTE PTR [rsp+0x58],0x0
   14000edfc:	sub    eax,r9d
   14000edff:	mov    ebx,0x64
   14000ee04:	sub    eax,edi
   14000ee06:	test   r12d,r12d
   14000ee09:	mov    r11d,0xff
   14000ee0f:	cmovne r11d,ebx
   14000ee13:	mov    BYTE PTR [rsp+0x50],r11b
   14000ee18:	mov    DWORD PTR [rsp+0x48],eax
   14000ee1c:	mov    DWORD PTR [rsp+0x40],r8d
   14000ee21:	mov    DWORD PTR [rsp+0x38],0x0
   14000ee29:	mov    DWORD PTR [rsp+0x30],0x0
   14000ee31:	mov    DWORD PTR [rsp+0x28],eax
   14000ee35:	mov    DWORD PTR [rsp+0x20],r8d
   14000ee3a:	mov    r8d,DWORD PTR [rsp+0x60]
   14000ee3f:	jmp    0x14000eed3
   14000ee44:	mov    edx,DWORD PTR [rsp+0x68]
   14000ee48:	mov    r8d,DWORD PTR [rsp+0x60]
   14000ee4d:	mov    ecx,DWORD PTR [rsi+0xc8]
   14000ee53:	mov    eax,edx
   14000ee55:	sub    eax,r8d
   14000ee58:	cmp    ecx,eax
   14000ee5a:	jge    0x14000ee63
   14000ee5c:	mov    edi,edx
   14000ee5e:	sub    edi,ecx
   14000ee60:	sub    edi,r8d
   14000ee63:	mov    eax,DWORD PTR [rsi+0x11c]
   14000ee69:	mov    edx,DWORD PTR [rsp+0x6c]
   14000ee6d:	mov    r9d,DWORD PTR [rsp+0x64]
   14000ee72:	mov    ecx,eax
   14000ee74:	sub    ecx,edx
   14000ee76:	sub    edx,r9d
   14000ee79:	add    ecx,r9d
   14000ee7c:	cmp    eax,edx
   14000ee7e:	jg     0x14000ee82
   14000ee80:	mov    edx,eax
   14000ee82:	mov    r10d,DWORD PTR [rsp+0x78]
   14000ee87:	mov    r8d,DWORD PTR [rsp+0x70]
   14000ee8c:	mov    BYTE PTR [rsp+0x58],0x0
   14000ee91:	sub    r10d,r8d
   14000ee94:	mov    ebx,0x64
   14000ee99:	mov    r11d,0xff
   14000ee9f:	sub    r10d,edi
   14000eea2:	test   r12d,r12d
   14000eea5:	cmovne r11d,ebx
   14000eea9:	xor    eax,eax
   14000eeab:	test   ecx,ecx
   14000eead:	mov    BYTE PTR [rsp+0x50],r11b
   14000eeb2:	mov    DWORD PTR [rsp+0x48],edx
   14000eeb6:	mov    DWORD PTR [rsp+0x40],r10d
   14000eebb:	cmovns eax,ecx
   14000eebe:	mov    DWORD PTR [rsp+0x38],eax
   14000eec2:	mov    DWORD PTR [rsp+0x30],0x0
   14000eeca:	mov    DWORD PTR [rsp+0x28],edx
   14000eece:	mov    DWORD PTR [rsp+0x20],r10d
   14000eed3:	mov    rdx,QWORD PTR [rbp+0x8]
   14000eed7:	lea    rcx,[rsi+0x100]
   14000eede:	call   0x140007630
   14000eee3:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000eeeb:	mov    rdi,QWORD PTR [rsp+0xa8]
   14000eef3:	lea    r11,[rsp+0x90]
   14000eefb:	mov    rbp,QWORD PTR [r11+0x20]
   14000eeff:	mov    rsi,QWORD PTR [r11+0x28]
   14000ef03:	mov    rsp,r11
   14000ef06:	pop    r12
   14000ef08:	ret    0x0
   14000ef0b:	int3   
   14000ef0c:	int3   
   14000ef0d:	int3   
   14000ef0e:	int3   
   14000ef0f:	int3   
   14000ef10:	test   rdx,rdx
   14000ef13:	je     0x14000efc0
   14000ef19:	mov    QWORD PTR [rsp+0x8],rbx
   14000ef1e:	mov    QWORD PTR [rsp+0x10],rsi
   14000ef23:	push   rdi
   14000ef24:	sub    rsp,0x70
   14000ef28:	cmp    QWORD PTR [rcx+0xb8],0x0
   14000ef30:	mov    esi,r8d
   14000ef33:	mov    rdi,rdx
   14000ef36:	mov    rbx,rcx
   14000ef39:	je     0x14000efaf
   14000ef3b:	call   0x14001fee4
   14000ef40:	mov    rcx,QWORD PTR [rbx+0x40]
   14000ef44:	lea    r9,[rsp+0x60]
   14000ef49:	xor    r8d,r8d
   14000ef4c:	mov    edx,0x419
   14000ef51:	call   QWORD PTR [rip+0x34a91]        # 0x1400439e8
   14000ef57:	mov    BYTE PTR [rsp+0x58],0x0
   14000ef5c:	lea    rcx,[rbx+0xb0]
   14000ef63:	mov    r8d,DWORD PTR [rcx+0x1c]
   14000ef67:	mov    r9d,DWORD PTR [rcx+0x18]
   14000ef6b:	mov    eax,0xff
   14000ef70:	mov    edx,0x80
   14000ef75:	test   esi,esi
   14000ef77:	cmovne eax,edx
   14000ef7a:	mov    rdx,QWORD PTR [rdi+0x8]
   14000ef7e:	mov    BYTE PTR [rsp+0x50],al
   14000ef82:	mov    DWORD PTR [rsp+0x48],r8d
   14000ef87:	mov    DWORD PTR [rsp+0x40],r9d
   14000ef8c:	xor    eax,eax
   14000ef8e:	mov    DWORD PTR [rsp+0x38],eax
   14000ef92:	mov    DWORD PTR [rsp+0x30],eax
   14000ef96:	mov    DWORD PTR [rsp+0x28],r8d
   14000ef9b:	mov    r8d,DWORD PTR [rsp+0x60]
   14000efa0:	mov    DWORD PTR [rsp+0x20],r9d
   14000efa5:	mov    r9d,DWORD PTR [rsp+0x64]
   14000efaa:	call   0x140007630
   14000efaf:	lea    r11,[rsp+0x70]
   14000efb4:	mov    rbx,QWORD PTR [r11+0x10]
   14000efb8:	mov    rsi,QWORD PTR [r11+0x18]
   14000efbc:	mov    rsp,r11
   14000efbf:	pop    rdi
   14000efc0:	ret    0x0
   14000efc3:	int3   
   14000efc4:	int3   
   14000efc5:	int3   
   14000efc6:	int3   
   14000efc7:	int3   
   14000efc8:	int3   
   14000efc9:	int3   
   14000efca:	int3   
   14000efcb:	int3   
   14000efcc:	int3   
   14000efcd:	int3   
   14000efce:	int3   
   14000efcf:	int3   
   14000efd0:	mov    QWORD PTR [rsp+0x8],rbx
   14000efd5:	push   rdi
   14000efd6:	sub    rsp,0x20
   14000efda:	lea    rax,[rip+0x3d277]        # 0x14004c258
   14000efe1:	mov    ebx,edx
   14000efe3:	mov    rdi,rcx
   14000efe6:	mov    QWORD PTR [rcx],rax
   14000efe9:	call   0x14000ea60
   14000efee:	test   bl,0x1
   14000eff1:	je     0x14000effb
   14000eff3:	mov    rcx,rdi
   14000eff6:	call   0x14001490c
   14000effb:	mov    rax,rdi
   14000effe:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f003:	add    rsp,0x20
   14000f007:	pop    rdi
   14000f008:	ret    
   14000f009:	int3   
   14000f00a:	int3   
   14000f00b:	int3   
   14000f00c:	int3   
   14000f00d:	int3   
   14000f00e:	int3   
   14000f00f:	int3   
   14000f010:	test   rdx,rdx
   14000f013:	je     0x14000f252
   14000f019:	mov    rax,rsp
   14000f01c:	push   rdi
   14000f01d:	push   r13
   14000f01f:	push   r15
   14000f021:	sub    rsp,0xb0
   14000f028:	cmp    QWORD PTR [rcx+0x108],0x0
   14000f030:	mov    r15d,r8d
   14000f033:	mov    r13,rdx
   14000f036:	mov    rdi,rcx
   14000f039:	je     0x14000f246
   14000f03f:	cmp    QWORD PTR [rcx+0xb8],0x0
   14000f047:	je     0x14000f246
   14000f04d:	mov    QWORD PTR [rax+0x8],rbx
   14000f051:	mov    QWORD PTR [rax-0x20],rbp
   14000f055:	mov    QWORD PTR [rax-0x28],rsi
   14000f059:	mov    QWORD PTR [rax-0x30],r12
   14000f05d:	mov    QWORD PTR [rax-0x38],r14
   14000f061:	call   0x14001fee4
   14000f066:	mov    rcx,QWORD PTR [rdi+0x40]
   14000f06a:	lea    rdx,[rsp+0x80]
   14000f072:	mov    ebx,eax
   14000f074:	call   QWORD PTR [rip+0x34966]        # 0x1400439e0
   14000f07a:	mov    rcx,QWORD PTR [rdi+0x40]
   14000f07e:	lea    r9,[rsp+0x70]
   14000f083:	xor    r8d,r8d
   14000f086:	mov    edx,0x419
   14000f08b:	call   QWORD PTR [rip+0x34957]        # 0x1400439e8
   14000f091:	mov    rcx,QWORD PTR [rdi+0x40]
   14000f095:	lea    r9,[rsp+0x60]
   14000f09a:	xor    r8d,r8d
   14000f09d:	mov    edx,0x41a
   14000f0a2:	call   QWORD PTR [rip+0x34940]        # 0x1400439e8
   14000f0a8:	test   bl,0x2
   14000f0ab:	je     0x14000f165
   14000f0b1:	mov    r11d,DWORD PTR [rdi+0x118]
   14000f0b8:	mov    r10d,DWORD PTR [rsp+0x64]
   14000f0bd:	mov    edx,DWORD PTR [rsp+0x6c]
   14000f0c1:	mov    eax,DWORD PTR [rsp+0x7c]
   14000f0c5:	xor    r14d,r14d
   14000f0c8:	mov    ecx,r11d
   14000f0cb:	sub    ecx,edx
   14000f0cd:	mov    ebp,r11d
   14000f0d0:	mov    ebx,r14d
   14000f0d3:	add    ecx,r10d
   14000f0d6:	mov    r8d,r14d
   14000f0d9:	cmovns ebx,ecx
   14000f0dc:	sub    eax,DWORD PTR [rdi+0xcc]
   14000f0e2:	mov    ecx,DWORD PTR [rsp+0x60]
   14000f0e6:	sub    eax,DWORD PTR [rsp+0x74]
   14000f0ea:	mov    DWORD PTR [rsp+0xd8],ebx
   14000f0f1:	cmovns r8d,eax
   14000f0f5:	sub    ebp,DWORD PTR [rdi+0x158]
   14000f0fb:	mov    eax,edx
   14000f0fd:	sub    eax,r11d
   14000f100:	sub    ebp,ebx
   14000f102:	mov    ebx,DWORD PTR [rsp+0x68]
   14000f106:	sub    eax,r10d
   14000f109:	mov    esi,ebx
   14000f10b:	sub    esi,DWORD PTR [rdi+0x15c]
   14000f111:	cdq    
   14000f112:	sub    eax,edx
   14000f114:	mov    edx,DWORD PTR [rsp+0x6c]
   14000f118:	sub    esi,ecx
   14000f11a:	sar    eax,1
   14000f11c:	sub    esi,r8d
   14000f11f:	mov    r8d,DWORD PTR [rsp+0xd8]
   14000f127:	add    eax,DWORD PTR [rdi+0x150]
   14000f12d:	sub    edx,r10d
   14000f130:	shr    r8d,1
   14000f133:	add    eax,r10d
   14000f136:	cmp    r11d,edx
   14000f139:	mov    DWORD PTR [rsp+0xe8],eax
   14000f140:	mov    eax,DWORD PTR [rdi+0x154]
   14000f146:	cmovle edx,r11d
   14000f14a:	mov    r11d,DWORD PTR [rsp+0xe8]
   14000f152:	sub    ebx,ecx
   14000f154:	lea    r12d,[rcx+rax*1]
   14000f158:	mov    eax,DWORD PTR [rdi+0x11c]
   14000f15e:	cmp    eax,ebx
   14000f160:	cmovle ebx,eax
   14000f163:	jmp    0x14000f1d5
   14000f165:	mov    r10d,DWORD PTR [rdi+0x11c]
   14000f16c:	mov    r9d,DWORD PTR [rsp+0x74]
   14000f171:	mov    ebx,DWORD PTR [rsp+0x7c]
   14000f175:	mov    ebp,DWORD PTR [rsp+0x68]
   14000f179:	mov    r12d,DWORD PTR [rdi+0x154]
   14000f180:	mov    eax,DWORD PTR [rdi+0x150]
   14000f186:	xor    r14d,r14d
   14000f189:	mov    ecx,r10d
   14000f18c:	mov    esi,r10d
   14000f18f:	sub    ecx,ebx
   14000f191:	mov    r8d,r14d
   14000f194:	add    ecx,r9d
   14000f197:	cmovns r8d,ecx
   14000f19b:	mov    ecx,DWORD PTR [rsp+0x60]
   14000f19f:	sub    ebp,DWORD PTR [rdi+0x158]
   14000f1a5:	sub    esi,DWORD PTR [rdi+0x15c]
   14000f1ab:	mov    edx,r8d
   14000f1ae:	sub    ebx,r9d
   14000f1b1:	shr    edx,1
   14000f1b3:	sub    esi,r8d
   14000f1b6:	sub    ebp,ecx
   14000f1b8:	add    r12d,edx
   14000f1bb:	mov    r8d,r14d
   14000f1be:	mov    r14d,edx
   14000f1c1:	mov    edx,DWORD PTR [rdi+0x118]
   14000f1c7:	add    r12d,r9d
   14000f1ca:	cmp    r10d,ebx
   14000f1cd:	cmovle ebx,r10d
   14000f1d1:	lea    r11d,[rcx+rax*1]
   14000f1d5:	mov    BYTE PTR [rsp+0x58],0x0
   14000f1da:	mov    eax,0xff
   14000f1df:	mov    ecx,0x64
   14000f1e4:	test   r15d,r15d
   14000f1e7:	mov    r9d,r12d
   14000f1ea:	cmovne eax,ecx
   14000f1ed:	lea    rcx,[rdi+0x100]
   14000f1f4:	mov    BYTE PTR [rsp+0x50],al
   14000f1f8:	mov    DWORD PTR [rsp+0x48],ebx
   14000f1fc:	mov    DWORD PTR [rsp+0x40],edx
   14000f200:	mov    rdx,QWORD PTR [r13+0x8]
   14000f204:	mov    DWORD PTR [rsp+0x38],r14d
   14000f209:	mov    DWORD PTR [rsp+0x30],r8d
   14000f20e:	mov    r8d,r11d
   14000f211:	mov    DWORD PTR [rsp+0x28],esi
   14000f215:	mov    DWORD PTR [rsp+0x20],ebp
   14000f219:	call   0x140007630
   14000f21e:	mov    r14,QWORD PTR [rsp+0x90]
   14000f226:	mov    r12,QWORD PTR [rsp+0x98]
   14000f22e:	mov    rsi,QWORD PTR [rsp+0xa0]
   14000f236:	mov    rbp,QWORD PTR [rsp+0xa8]
   14000f23e:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000f246:	add    rsp,0xb0
   14000f24d:	pop    r15
   14000f24f:	pop    r13
   14000f251:	pop    rdi
   14000f252:	ret    0x0
   14000f255:	int3   
   14000f256:	int3   
   14000f257:	int3   
   14000f258:	int3   
   14000f259:	int3   
   14000f25a:	int3   
   14000f25b:	int3   
   14000f25c:	int3   
   14000f25d:	int3   
   14000f25e:	int3   
   14000f25f:	int3   
   14000f260:	test   rdx,rdx
   14000f263:	je     0x14000f3c2
   14000f269:	mov    r11,rsp
   14000f26c:	push   rbx
   14000f26d:	push   rsi
   14000f26e:	push   rdi
   14000f26f:	sub    rsp,0x80
   14000f276:	cmp    QWORD PTR [rcx+0xb8],0x0
   14000f27e:	mov    esi,r8d
   14000f281:	mov    rdi,rdx
   14000f284:	mov    rbx,rcx
   14000f287:	je     0x14000f3b8
   14000f28d:	mov    rcx,QWORD PTR [rcx+0x40]
   14000f291:	mov    QWORD PTR [r11+0x8],rbp
   14000f295:	xor    eax,eax
   14000f297:	mov    QWORD PTR [r11+0x10],r12
   14000f29b:	mov    QWORD PTR [r11+0x18],r13
   14000f29f:	mov    QWORD PTR [r11-0x20],r14
   14000f2a3:	lea    r9,[r11-0x38]
   14000f2a7:	xor    r8d,r8d
   14000f2aa:	mov    edx,0x419
   14000f2af:	mov    QWORD PTR [r11-0x28],r15
   14000f2b3:	mov    DWORD PTR [rsp+0x60],eax
   14000f2b7:	mov    DWORD PTR [rsp+0x64],eax
   14000f2bb:	mov    DWORD PTR [rsp+0x68],eax
   14000f2bf:	mov    DWORD PTR [rsp+0x6c],eax
   14000f2c3:	call   QWORD PTR [rip+0x3471f]        # 0x1400439e8
   14000f2c9:	mov    eax,DWORD PTR [rbx+0x170]
   14000f2cf:	mov    ecx,DWORD PTR [rsp+0x60]
   14000f2d3:	mov    edx,DWORD PTR [rbx+0x174]
   14000f2d9:	mov    r9d,DWORD PTR [rsp+0x64]
   14000f2de:	mov    r11d,DWORD PTR [rsp+0x68]
   14000f2e3:	mov    r8d,DWORD PTR [rsp+0x6c]
   14000f2e8:	sub    r11d,DWORD PTR [rbx+0x178]
   14000f2ef:	sub    r8d,DWORD PTR [rbx+0x17c]
   14000f2f6:	mov    r10d,DWORD PTR [rbx+0xcc]
   14000f2fd:	sub    r10d,DWORD PTR [rbx+0x16c]
   14000f304:	mov    ebp,DWORD PTR [rbx+0xc8]
   14000f30a:	mov    r13d,DWORD PTR [rbx+0x164]
   14000f311:	sub    ebp,DWORD PTR [rbx+0x168]
   14000f317:	mov    r12d,DWORD PTR [rbx+0x160]
   14000f31e:	sub    r11d,eax
   14000f321:	lea    r14d,[rax+rcx*1]
   14000f325:	mov    eax,r8d
   14000f328:	sub    r10d,r13d
   14000f32b:	sub    eax,edx
   14000f32d:	sub    ebp,r12d
   14000f330:	sub    r11d,ecx
   14000f333:	sub    eax,r9d
   14000f336:	lea    r15d,[rdx+r9*1]
   14000f33a:	cmp    r10d,eax
   14000f33d:	jg     0x14000f344
   14000f33f:	mov    r8d,r10d
   14000f342:	jmp    0x14000f34a
   14000f344:	sub    r8d,edx
   14000f347:	sub    r8d,r9d
   14000f34a:	mov    rdx,QWORD PTR [rdi+0x8]
   14000f34e:	mov    BYTE PTR [rsp+0x58],0x0
   14000f353:	mov    eax,0xff
   14000f358:	mov    ecx,0x80
   14000f35d:	test   esi,esi
   14000f35f:	lea    r9d,[r15-0x14]
   14000f363:	cmovne eax,ecx
   14000f366:	lea    rcx,[rbx+0xb0]
   14000f36d:	mov    BYTE PTR [rsp+0x50],al
   14000f371:	mov    DWORD PTR [rsp+0x48],r10d
   14000f376:	mov    DWORD PTR [rsp+0x40],ebp
   14000f37a:	mov    DWORD PTR [rsp+0x38],r13d
   14000f37f:	mov    DWORD PTR [rsp+0x30],r12d
   14000f384:	mov    DWORD PTR [rsp+0x28],r8d
   14000f389:	mov    r8d,r14d
   14000f38c:	mov    DWORD PTR [rsp+0x20],r11d
   14000f391:	call   0x140007630
   14000f396:	mov    r15,QWORD PTR [rsp+0x70]
   14000f39b:	mov    r14,QWORD PTR [rsp+0x78]
   14000f3a0:	mov    r13,QWORD PTR [rsp+0xb0]
   14000f3a8:	mov    r12,QWORD PTR [rsp+0xa8]
   14000f3b0:	mov    rbp,QWORD PTR [rsp+0xa0]
   14000f3b8:	add    rsp,0x80
   14000f3bf:	pop    rdi
   14000f3c0:	pop    rsi
   14000f3c1:	pop    rbx
   14000f3c2:	ret    0x0
   14000f3c5:	int3   
   14000f3c6:	int3   
   14000f3c7:	int3   
   14000f3c8:	int3   
   14000f3c9:	int3   
   14000f3ca:	int3   
   14000f3cb:	int3   
   14000f3cc:	int3   
   14000f3cd:	int3   
   14000f3ce:	int3   
   14000f3cf:	int3   
   14000f3d0:	lea    rax,[rip+0x3d119]        # 0x14004c4f0
   14000f3d7:	ret    
   14000f3d8:	int3   
   14000f3d9:	int3   
   14000f3da:	int3   
   14000f3db:	int3   
   14000f3dc:	int3   
   14000f3dd:	int3   
   14000f3de:	int3   
   14000f3df:	int3   
   14000f3e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f3e5:	push   rdi
   14000f3e6:	sub    rsp,0x20
   14000f3ea:	lea    rax,[rip+0x3d1a7]        # 0x14004c598
   14000f3f1:	mov    ebx,edx
   14000f3f3:	mov    rdi,rcx
   14000f3f6:	mov    QWORD PTR [rcx],rax
   14000f3f9:	call   0x1400212fc
   14000f3fe:	test   bl,0x1
   14000f401:	je     0x14000f40b
   14000f403:	mov    rcx,rdi
   14000f406:	call   0x14001490c
   14000f40b:	mov    rax,rdi
   14000f40e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f413:	add    rsp,0x20
   14000f417:	pop    rdi
   14000f418:	ret    
   14000f419:	int3   
   14000f41a:	int3   
   14000f41b:	int3   
   14000f41c:	int3   
   14000f41d:	int3   
   14000f41e:	int3   
   14000f41f:	int3   
   14000f420:	lea    rax,[rip+0x3d159]        # 0x14004c580
   14000f427:	ret    
   14000f428:	int3   
   14000f429:	int3   
   14000f42a:	int3   
   14000f42b:	int3   
   14000f42c:	int3   
   14000f42d:	int3   
   14000f42e:	int3   
   14000f42f:	int3   
   14000f430:	mov    QWORD PTR [rsp+0x8],rbx
   14000f435:	mov    QWORD PTR [rsp+0x10],rbp
   14000f43a:	mov    QWORD PTR [rsp+0x18],rsi
   14000f43f:	push   rdi
   14000f440:	sub    rsp,0x90
   14000f447:	mov    rbx,rcx
   14000f44a:	mov    rcx,QWORD PTR [rdx+0x20]
   14000f44e:	mov    rbp,r8
   14000f451:	mov    rsi,rdx
   14000f454:	call   0x140020c14
   14000f459:	mov    QWORD PTR [rbp+0x0],0x0
   14000f461:	mov    ecx,DWORD PTR [rsi+0x18]
   14000f464:	mov    rdi,rax
   14000f467:	sub    ecx,0x1
   14000f46a:	je     0x14000f5fe
   14000f470:	cmp    ecx,0x10000
   14000f476:	jne    0x14000f606
   14000f47c:	mov    rdx,QWORD PTR [rsi+0x38]
   14000f480:	sub    rdx,0x1
   14000f484:	je     0x14000f5c2
   14000f48a:	cmp    rdx,0x2
   14000f48e:	jne    0x14000f606
   14000f494:	test   rax,rax
   14000f497:	je     0x14000f606
   14000f49d:	mov    rax,QWORD PTR [rbx+0xa8]
   14000f4a4:	test   rax,rax
   14000f4a7:	je     0x14000f606
   14000f4ad:	cmp    QWORD PTR [rax+0x8],0x0
   14000f4b2:	je     0x14000f606
   14000f4b8:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f4bc:	call   QWORD PTR [rip+0x3450e]        # 0x1400439d0
   14000f4c2:	mov    rcx,rax
   14000f4c5:	call   0x140018e70
   14000f4ca:	mov    rcx,rbx
   14000f4cd:	mov    rsi,rax
   14000f4d0:	call   0x14001fee4
   14000f4d5:	test   rsi,rsi
   14000f4d8:	mov    ebp,eax
   14000f4da:	je     0x14000f606
   14000f4e0:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f4e4:	lea    rdx,[rsp+0x70]
   14000f4e9:	call   QWORD PTR [rip+0x344f1]        # 0x1400439e0
   14000f4ef:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f4f3:	lea    r9,[rsp+0x60]
   14000f4f8:	xor    r8d,r8d
   14000f4fb:	mov    edx,0x419
   14000f500:	call   QWORD PTR [rip+0x344e2]        # 0x1400439e8
   14000f506:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f50a:	lea    rdx,[rsp+0x50]
   14000f50f:	call   QWORD PTR [rip+0x344ab]        # 0x1400439c0
   14000f515:	lea    rdx,[rsp+0x50]
   14000f51a:	mov    rcx,rsi
   14000f51d:	call   0x1400209b4
   14000f522:	test   bpl,0x2
   14000f526:	mov    rdx,QWORD PTR [rdi+0x8]
   14000f52a:	mov    DWORD PTR [rsp+0x40],0xcc0020
   14000f532:	je     0x14000f57c
   14000f534:	mov    r8d,DWORD PTR [rsp+0x60]
   14000f539:	mov    eax,DWORD PTR [rsp+0x50]
   14000f53d:	mov    ecx,DWORD PTR [rsp+0x68]
   14000f541:	mov    r10d,DWORD PTR [rsp+0x7c]
   14000f546:	lea    r9d,[r8+rax*1]
   14000f54a:	mov    eax,DWORD PTR [rsp+0x54]
   14000f54e:	sub    r10d,DWORD PTR [rsp+0x74]
   14000f553:	mov    DWORD PTR [rsp+0x38],eax
   14000f557:	mov    DWORD PTR [rsp+0x30],r9d
   14000f55c:	sub    ecx,r8d
   14000f55f:	mov    DWORD PTR [rsp+0x28],r10d
   14000f564:	xor    r9d,r9d
   14000f567:	mov    DWORD PTR [rsp+0x20],ecx
   14000f56b:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000f572:	call   0x140001ac0
   14000f577:	jmp    0x14000f606
   14000f57c:	mov    r9d,DWORD PTR [rsp+0x64]
   14000f581:	mov    eax,DWORD PTR [rsp+0x54]
   14000f585:	mov    r8d,DWORD PTR [rsp+0x78]
   14000f58a:	sub    r8d,DWORD PTR [rsp+0x70]
   14000f58f:	mov    r10d,DWORD PTR [rsp+0x6c]
   14000f594:	lea    ecx,[r9+rax*1]
   14000f598:	mov    eax,DWORD PTR [rsp+0x50]
   14000f59c:	mov    DWORD PTR [rsp+0x38],ecx
   14000f5a0:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000f5a7:	mov    DWORD PTR [rsp+0x30],eax
   14000f5ab:	sub    r10d,r9d
   14000f5ae:	mov    DWORD PTR [rsp+0x28],r10d
   14000f5b3:	mov    DWORD PTR [rsp+0x20],r8d
   14000f5b8:	xor    r8d,r8d
   14000f5bb:	call   0x140001ac0
   14000f5c0:	jmp    0x14000f606
   14000f5c2:	test   rbx,rbx
   14000f5c5:	je     0x14000f606
   14000f5c7:	test   rax,rax
   14000f5ca:	je     0x14000f606
   14000f5cc:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f5d0:	lea    rdx,[rsp+0x80]
   14000f5d8:	call   QWORD PTR [rip+0x34402]        # 0x1400439e0
   14000f5de:	mov    ecx,0x5
   14000f5e3:	call   QWORD PTR [rip+0x343ef]        # 0x1400439d8
   14000f5e9:	lea    rdx,[rsp+0x80]
   14000f5f1:	mov    rcx,rdi
   14000f5f4:	mov    r8d,eax
   14000f5f7:	call   0x1400211b4
   14000f5fc:	jmp    0x14000f606
   14000f5fe:	mov    QWORD PTR [rbp+0x0],0x20
   14000f606:	lea    r11,[rsp+0x90]
   14000f60e:	mov    rbx,QWORD PTR [r11+0x10]
   14000f612:	mov    rbp,QWORD PTR [r11+0x18]
   14000f616:	mov    rsi,QWORD PTR [r11+0x20]
   14000f61a:	mov    rsp,r11
   14000f61d:	pop    rdi
   14000f61e:	ret    
   14000f61f:	int3   
   14000f620:	sub    rsp,0x28
   14000f624:	mov    rcx,rdx
   14000f627:	mov    edx,0x2
   14000f62c:	call   0x14002033c
   14000f631:	mov    ecx,0x5
   14000f636:	add    rsp,0x28
   14000f63a:	rex.W jmp QWORD PTR [rip+0x3433f]        # 0x140043980
   14000f641:	int3   
   14000f642:	int3   
   14000f643:	int3   
   14000f644:	int3   
   14000f645:	int3   
   14000f646:	int3   
   14000f647:	int3   
   14000f648:	int3   
   14000f649:	int3   
   14000f64a:	int3   
   14000f64b:	int3   
   14000f64c:	int3   
   14000f64d:	int3   
   14000f64e:	int3   
   14000f64f:	int3   
   14000f650:	lea    rax,[rip+0x3d1f9]        # 0x14004c850
   14000f657:	ret    
   14000f658:	int3   
   14000f659:	int3   
   14000f65a:	int3   
   14000f65b:	int3   
   14000f65c:	int3   
   14000f65d:	int3   
   14000f65e:	int3   
   14000f65f:	int3   
   14000f660:	mov    QWORD PTR [rsp+0x8],rbx
   14000f665:	push   rdi
   14000f666:	sub    rsp,0x20
   14000f66a:	mov    ebx,edx
   14000f66c:	mov    rdi,rcx
   14000f66f:	call   0x1400233a8
   14000f674:	test   bl,0x1
   14000f677:	je     0x14000f681
   14000f679:	mov    rcx,rdi
   14000f67c:	call   0x14001490c
   14000f681:	mov    rax,rdi
   14000f684:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f689:	add    rsp,0x20
   14000f68d:	pop    rdi
   14000f68e:	ret    
   14000f68f:	int3   
   14000f690:	rex push rsi
   14000f692:	push   rdi
   14000f693:	push   r12
   14000f695:	mov    eax,0x3ea0
   14000f69a:	call   0x140041ad0
   14000f69f:	sub    rsp,rax
   14000f6a2:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000f6ab:	mov    QWORD PTR [rsp+0x3ec8],rbx
   14000f6b3:	mov    QWORD PTR [rsp+0x3ed0],rbp
   14000f6bb:	mov    rax,QWORD PTR [rip+0x4b8be]        # 0x14005af80
   14000f6c2:	xor    rax,rsp
   14000f6c5:	mov    QWORD PTR [rsp+0x3e90],rax
   14000f6cd:	mov    rsi,rcx
   14000f6d0:	mov    DWORD PTR [rsp+0x20],0x8
   14000f6d8:	mov    DWORD PTR [rsp+0x24],0xff
   14000f6e0:	lea    rcx,[rsp+0x20]
   14000f6e5:	call   QWORD PTR [rip+0x33965]        # 0x140043050
   14000f6eb:	mov    rcx,rsi
   14000f6ee:	call   0x14002297c
   14000f6f3:	mov    DWORD PTR [rsp+0x28],0x1
   14000f6fb:	xor    ebp,ebp
   14000f6fd:	mov    QWORD PTR [rsp+0x30],rbp
   14000f702:	mov    DWORD PTR [rsp+0x38],ebp
   14000f706:	mov    DWORD PTR [rsp+0x3c],ebp
   14000f70a:	lea    rcx,[rsi+0x140]
   14000f711:	xor    r8d,r8d
   14000f714:	lea    rdx,[rsp+0x28]
   14000f719:	call   0x140040d16
   14000f71e:	lea    rdx,[rip+0x3d13b]        # 0x14004c860
   14000f725:	mov    rcx,rsi
   14000f728:	call   0x140022084
   14000f72d:	mov    rcx,rsi
   14000f730:	call   0x14000f8e0
   14000f735:	mov    edi,eax
   14000f737:	xor    r9d,r9d
   14000f73a:	lea    r12,[rip+0x3d14f]        # 0x14004c890
   14000f741:	mov    r8,r12
   14000f744:	xor    edx,edx
   14000f746:	xor    ecx,ecx
   14000f748:	call   QWORD PTR [rip+0x3421a]        # 0x140043968
   14000f74e:	mov    rbx,rax
   14000f751:	test   rax,rax
   14000f754:	je     0x14000f7c3
   14000f756:	mov    edx,edi
   14000f758:	test   edi,edi
   14000f75a:	je     0x14000f7a6
   14000f75c:	sub    edx,0x1
   14000f75f:	je     0x14000f78b
   14000f761:	sub    edx,0x1
   14000f764:	je     0x14000f7a6
   14000f766:	cmp    edx,0x1
   14000f769:	jne    0x14000f7c3
   14000f76b:	xor    r9d,r9d
   14000f76e:	mov    edx,0x5dc
   14000f773:	lea    r8d,[rbp+0x1]
   14000f777:	mov    rcx,rax
   14000f77a:	call   QWORD PTR [rip+0x34268]        # 0x1400439e8
   14000f780:	mov    rcx,rbx
   14000f783:	call   QWORD PTR [rip+0x341d7]        # 0x140043960
   14000f789:	jmp    0x14000f7cc
   14000f78b:	mov    r9d,0x9502
   14000f791:	xor    r8d,r8d
   14000f794:	lea    edx,[r8+0x10]
   14000f798:	mov    rcx,rax
   14000f79b:	call   QWORD PTR [rip+0x34247]        # 0x1400439e8
   14000f7a1:	jmp    0x14000f876
   14000f7a6:	xor    r9d,r9d
   14000f7a9:	xor    r8d,r8d
   14000f7ac:	mov    edx,0x5dc
   14000f7b1:	mov    rcx,rax
   14000f7b4:	call   QWORD PTR [rip+0x3422e]        # 0x1400439e8
   14000f7ba:	mov    rcx,rbx
   14000f7bd:	call   QWORD PTR [rip+0x3419d]        # 0x140043960
   14000f7c3:	cmp    edi,0x1
   14000f7c6:	je     0x14000f876
   14000f7cc:	test   rbx,rbx
   14000f7cf:	jne    0x14000f876
   14000f7d5:	call   0x14001f2e8
   14000f7da:	lea    r8,[rsp+0x50]
   14000f7df:	lea    rdx,[rip+0x3d09a]        # 0x14004c880
   14000f7e6:	mov    rcx,QWORD PTR [rax+0x10]
   14000f7ea:	call   QWORD PTR [rip+0x34180]        # 0x140043970
   14000f7f0:	mov    QWORD PTR [rsp+0x90],r12
   14000f7f8:	lea    rcx,[rsp+0x50]
   14000f7fd:	call   0x14001c95c
   14000f802:	call   0x1400019a0
   14000f807:	xor    edx,edx
   14000f809:	lea    rcx,[rsp+0xa0]
   14000f811:	call   0x14000fa30
   14000f816:	nop
   14000f817:	cmp    edi,0x2
   14000f81a:	jne    0x14000f830
   14000f81c:	mov    DWORD PTR [rsp+0x1a0],0x1
   14000f827:	mov    DWORD PTR [rsp+0x3e80],ebp
   14000f82e:	jmp    0x14000f84b
   14000f830:	cmp    edi,0x3
   14000f833:	jne    0x14000f84b
   14000f835:	mov    DWORD PTR [rsp+0x1a0],0x1
   14000f840:	mov    DWORD PTR [rsp+0x3e80],0x1
   14000f84b:	lea    rax,[rsp+0xa0]
   14000f853:	mov    QWORD PTR [rsi+0x40],rax
   14000f857:	lea    rcx,[rsp+0xa0]
   14000f85f:	call   0x14001ddac
   14000f864:	nop
   14000f865:	lea    rcx,[rsp+0xa0]
   14000f86d:	call   0x14000ffc0
   14000f872:	xor    eax,eax
   14000f874:	jmp    0x14000f878
   14000f876:	xor    eax,eax
   14000f878:	mov    rcx,QWORD PTR [rsp+0x3e90]
   14000f880:	xor    rcx,rsp
   14000f883:	call   0x140029b40
   14000f888:	lea    r11,[rsp+0x3ea0]
   14000f890:	mov    rbx,QWORD PTR [r11+0x28]
   14000f894:	mov    rbp,QWORD PTR [r11+0x30]
   14000f898:	mov    rsp,r11
   14000f89b:	pop    r12
   14000f89d:	pop    rdi
   14000f89e:	pop    rsi
   14000f89f:	ret    
   14000f8a0:	rex push rbp
   14000f8a2:	sub    rsp,0x20
   14000f8a6:	mov    rbp,rdx
   14000f8a9:	lea    rcx,[rbp+0xa0]
   14000f8b0:	call   0x14000ffc0
   14000f8b5:	add    rsp,0x20
   14000f8b9:	pop    rbp
   14000f8ba:	ret    
   14000f8bb:	int3   
   14000f8bc:	int3   
   14000f8bd:	int3   
   14000f8be:	int3   
   14000f8bf:	int3   
   14000f8c0:	sub    rsp,0x28
   14000f8c4:	mov    rcx,QWORD PTR [rcx+0x140]
   14000f8cb:	test   rcx,rcx
   14000f8ce:	je     0x14000f8d5
   14000f8d0:	call   0x140040d10
   14000f8d5:	xor    eax,eax
   14000f8d7:	add    rsp,0x28
   14000f8db:	ret    
   14000f8dc:	int3   
   14000f8dd:	int3   
   14000f8de:	int3   
   14000f8df:	int3   
   14000f8e0:	mov    r11,rsp
   14000f8e3:	push   rbx
   14000f8e4:	sub    rsp,0x230
   14000f8eb:	mov    rax,QWORD PTR [rip+0x4b68e]        # 0x14005af80
   14000f8f2:	xor    rax,rsp
   14000f8f5:	mov    QWORD PTR [rsp+0x220],rax
   14000f8fd:	mov    rbx,QWORD PTR [rcx+0x90]
   14000f904:	test   rbx,rbx
   14000f907:	je     0x14000fa14
   14000f90d:	mov    QWORD PTR [r11+0x10],rdi
   14000f911:	or     rcx,0xffffffffffffffff
   14000f915:	xor    eax,eax
   14000f917:	mov    rdi,rbx
   14000f91a:	repnz scas ax,WORD PTR es:[rdi]
   14000f91d:	mov    rdi,QWORD PTR [r11+0x10]
   14000f921:	not    rcx
   14000f924:	cmp    rcx,0x1
   14000f928:	je     0x14000fa14
   14000f92e:	lea    rcx,[rsp+0x20]
   14000f933:	xor    edx,edx
   14000f935:	mov    r8d,0x200
   14000f93b:	call   0x14002ac20
   14000f940:	lea    rcx,[rsp+0x20]
   14000f945:	mov    r8,rbx
   14000f948:	mov    edx,0xff
   14000f94d:	call   0x14002a9a0
   14000f952:	lea    rcx,[rsp+0x20]
   14000f957:	mov    edx,0x100
   14000f95c:	call   0x14002a640
   14000f961:	lea    rdx,[rip+0x3cf48]        # 0x14004c8b0
   14000f968:	lea    rcx,[rsp+0x20]
   14000f96d:	call   0x14002a720
   14000f972:	test   rax,rax
   14000f975:	jne    0x14000fa0d
   14000f97b:	lea    rdx,[rip+0x3cf36]        # 0x14004c8b8
   14000f982:	lea    rcx,[rsp+0x20]
   14000f987:	call   0x14002a720
   14000f98c:	test   rax,rax
   14000f98f:	jne    0x14000fa0d
   14000f991:	lea    rdx,[rip+0x3cf28]        # 0x14004c8c0
   14000f998:	lea    rcx,[rsp+0x20]
   14000f99d:	call   0x14002a720
   14000f9a2:	test   rax,rax
   14000f9a5:	jne    0x14000fa0d
   14000f9a7:	lea    rdx,[rip+0x3cf1a]        # 0x14004c8c8
   14000f9ae:	lea    rcx,[rsp+0x20]
   14000f9b3:	call   0x14002a720
   14000f9b8:	test   rax,rax
   14000f9bb:	jne    0x14000fa06
   14000f9bd:	lea    rdx,[rip+0x3cf0c]        # 0x14004c8d0
   14000f9c4:	lea    rcx,[rsp+0x20]
   14000f9c9:	call   0x14002a720
   14000f9ce:	test   rax,rax
   14000f9d1:	jne    0x14000fa06
   14000f9d3:	lea    rdx,[rip+0x3cefe]        # 0x14004c8d8
   14000f9da:	lea    rcx,[rsp+0x20]
   14000f9df:	call   0x14002a720
   14000f9e4:	test   rax,rax
   14000f9e7:	jne    0x14000f9ff
   14000f9e9:	lea    rdx,[rip+0x3cef0]        # 0x14004c8e0
   14000f9f0:	lea    rcx,[rsp+0x20]
   14000f9f5:	call   0x14002a720
   14000f9fa:	test   rax,rax
   14000f9fd:	je     0x14000fa14
   14000f9ff:	mov    eax,0x3
   14000fa04:	jmp    0x14000fa16
   14000fa06:	mov    eax,0x2
   14000fa0b:	jmp    0x14000fa16
   14000fa0d:	mov    eax,0x1
   14000fa12:	jmp    0x14000fa16
   14000fa14:	xor    eax,eax
   14000fa16:	mov    rcx,QWORD PTR [rsp+0x220]
   14000fa1e:	xor    rcx,rsp
   14000fa21:	call   0x140029b40
   14000fa26:	add    rsp,0x230
   14000fa2d:	pop    rbx
   14000fa2e:	ret    
   14000fa2f:	int3   
   14000fa30:	mov    rax,rsp
   14000fa33:	push   rsi
   14000fa34:	push   rdi
   14000fa35:	push   r12
   14000fa37:	push   r13
   14000fa39:	push   r14
   14000fa3b:	sub    rsp,0x170
   14000fa42:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000fa4b:	mov    QWORD PTR [rax+0x10],rbx
   14000fa4f:	mov    QWORD PTR [rax+0x18],rbp
   14000fa53:	mov    rax,QWORD PTR [rip+0x4b526]        # 0x14005af80
   14000fa5a:	xor    rax,rsp
   14000fa5d:	mov    QWORD PTR [rsp+0x160],rax
   14000fa65:	mov    rbp,rcx
   14000fa68:	mov    QWORD PTR [rsp+0x20],rcx
   14000fa6d:	xor    r8d,r8d
   14000fa70:	lea    edx,[r8+0x66]
   14000fa74:	call   0x14001d3b4
   14000fa79:	nop
   14000fa7a:	lea    rax,[rip+0x3d247]        # 0x14004ccc8
   14000fa81:	mov    QWORD PTR [rbp+0x0],rax
   14000fa85:	lea    rax,[rip+0x3b55c]        # 0x14004afe8
   14000fa8c:	mov    QWORD PTR [rbp+0x110],rax
   14000fa93:	xor    r14d,r14d
   14000fa96:	mov    QWORD PTR [rbp+0x128],r14
   14000fa9d:	lea    rax,[rip+0x38384]        # 0x140047e28
   14000faa4:	mov    QWORD PTR [rbp+0x120],rax
   14000faab:	mov    QWORD PTR [rbp+0x138],r14
   14000fab2:	mov    QWORD PTR [rbp+0x130],rax
   14000fab9:	mov    r12d,0x1
   14000fabf:	mov    DWORD PTR [rbp+0x118],r12d
   14000fac6:	mov    WORD PTR [rbp+0x144],r14w
   14000face:	mov    WORD PTR [rbp+0x11c],r14w
   14000fad6:	lea    rsi,[rbp+0x160]
   14000fadd:	mov    rcx,rsi
   14000fae0:	call   0x1400077a0
   14000fae5:	nop
   14000fae6:	lea    rcx,[rbp+0x1570]
   14000faed:	xor    edx,edx
   14000faef:	call   0x14000b7c0
   14000faf4:	nop
   14000faf5:	lea    rcx,[rbp+0x1db8]
   14000fafc:	xor    edx,edx
   14000fafe:	call   0x140001010
   14000fb03:	nop
   14000fb04:	lea    rdi,[rbp+0x2268]
   14000fb0b:	mov    QWORD PTR [rsp+0x28],rdi
   14000fb10:	mov    rcx,rdi
   14000fb13:	call   0x14001d278
   14000fb18:	mov    QWORD PTR [rdi+0xe8],r14
   14000fb1f:	lea    rax,[rip+0x3be22]        # 0x14004b948
   14000fb26:	mov    QWORD PTR [rdi],rax
   14000fb29:	lea    rcx,[rdi+0xf0]
   14000fb30:	call   0x140016de8
   14000fb35:	lea    r13,[rip+0x3615c]        # 0x140045c98
   14000fb3c:	mov    QWORD PTR [rdi+0xf0],r13
   14000fb43:	lea    rcx,[rdi+0x198]
   14000fb4a:	call   0x140016de8
   14000fb4f:	mov    QWORD PTR [rdi+0x198],r13
   14000fb56:	lea    rcx,[rdi+0x240]
   14000fb5d:	call   0x140016de8
   14000fb62:	lea    r11,[rip+0x35e6f]        # 0x1400459d8
   14000fb69:	mov    QWORD PTR [rdi+0x240],r11
   14000fb70:	lea    rcx,[rbp+0x2550]
   14000fb77:	xor    edx,edx
   14000fb79:	call   0x140001cd0
   14000fb7e:	nop
   14000fb7f:	lea    rcx,[rbp+0x3928]
   14000fb86:	call   0x140012ec0
   14000fb8b:	nop
   14000fb8c:	lea    rcx,[rbp+0x3a60]
   14000fb93:	call   0x140016de8
   14000fb98:	mov    QWORD PTR [rbp+0x3a60],r13
   14000fb9f:	lea    rcx,[rbp+0x3b08]
   14000fba6:	call   0x140016de8
   14000fbab:	mov    QWORD PTR [rbp+0x3b08],r13
   14000fbb2:	lea    rcx,[rbp+0x3bb0]
   14000fbb9:	call   0x140016de8
   14000fbbe:	mov    QWORD PTR [rbp+0x3bb0],r13
   14000fbc5:	lea    rcx,[rbp+0x3c58]
   14000fbcc:	call   0x140016de8
   14000fbd1:	lea    r11,[rip+0x36380]        # 0x140045f58
   14000fbd8:	mov    QWORD PTR [rbp+0x3c58],r11
   14000fbdf:	lea    rcx,[rbp+0x3d00]
   14000fbe6:	call   0x140016de8
   14000fbeb:	lea    r11,[rip+0x373b6]        # 0x140046fa8
   14000fbf2:	mov    QWORD PTR [rbp+0x3d00],r11
   14000fbf9:	lea    edx,[r14+0xa]
   14000fbfd:	lea    rcx,[rbp+0x3da8]
   14000fc04:	call   0x140023f30
   14000fc09:	lea    r11,[rip+0x3d378]        # 0x14004cf88
   14000fc10:	mov    QWORD PTR [rbp+0x3da8],r11
   14000fc17:	call   0x14001f2e8
   14000fc1c:	call   0x14001f2e8
   14000fc21:	mov    edx,0x93
   14000fc26:	mov    rcx,QWORD PTR [rax+0x18]
   14000fc2a:	call   QWORD PTR [rip+0x33cf8]        # 0x140043928
   14000fc30:	mov    QWORD PTR [rbp+0x148],rax
   14000fc37:	mov    QWORD PTR [rbp+0x1568],r14
   14000fc3e:	mov    DWORD PTR [rbp+0xf4],r14d
   14000fc45:	mov    DWORD PTR [rbp+0xe8],r14d
   14000fc4c:	mov    DWORD PTR [rbp+0xec],r14d
   14000fc53:	mov    DWORD PTR [rbp+0xf8],r14d
   14000fc5a:	mov    DWORD PTR [rbp+0xfc],r14d
   14000fc61:	mov    DWORD PTR [rbp+0xf0],r12d
   14000fc68:	mov    DWORD PTR [rbp+0x158],r14d
   14000fc6f:	mov    DWORD PTR [rbp+0x3de0],r14d
   14000fc76:	mov    DWORD PTR [rbp+0x100],r14d
   14000fc7d:	mov    QWORD PTR [rbp+0x1660],rsi
   14000fc84:	mov    QWORD PTR [rbp+0x2260],rsi
   14000fc8b:	mov    QWORD PTR [rbp+0x2640],rsi
   14000fc92:	xor    eax,eax
   14000fc94:	mov    DWORD PTR [rbp+0x104],eax
   14000fc9a:	mov    DWORD PTR [rbp+0x108],eax
   14000fca0:	xor    edx,edx
   14000fca2:	mov    r8d,0x11c
   14000fca8:	lea    rcx,[rsp+0x40]
   14000fcad:	call   0x14002ac20
   14000fcb2:	mov    DWORD PTR [rsp+0x40],0x114
   14000fcba:	lea    rcx,[rsp+0x40]
   14000fcbf:	call   QWORD PTR [rip+0x3380b]        # 0x1400434d0
   14000fcc5:	test   eax,eax
   14000fcc7:	je     0x14000fcfe
   14000fcc9:	cmp    DWORD PTR [rsp+0x50],0x2
   14000fcce:	jne    0x14000fd15
   14000fcd0:	mov    eax,DWORD PTR [rsp+0x44]
   14000fcd4:	cmp    eax,0x5
   14000fcd7:	jb     0x14000fd09
   14000fcd9:	xor    edx,edx
   14000fcdb:	mov    r8d,0x11c
   14000fce1:	lea    rcx,[rsp+0x40]
   14000fce6:	call   0x14002ac20
   14000fceb:	mov    DWORD PTR [rsp+0x40],0x11c
   14000fcf3:	lea    rcx,[rsp+0x40]
   14000fcf8:	call   QWORD PTR [rip+0x337d2]        # 0x1400434d0
   14000fcfe:	cmp    DWORD PTR [rsp+0x50],0x2
   14000fd03:	jne    0x14000fd15
   14000fd05:	mov    eax,DWORD PTR [rsp+0x44]
   14000fd09:	cmp    eax,0x5
   14000fd0c:	jne    0x14000fd15
   14000fd0e:	cmp    DWORD PTR [rsp+0x48],0x1
   14000fd13:	je     0x14000fd18
   14000fd15:	mov    r12d,r14d
   14000fd18:	and    DWORD PTR [rbp+0x104],0xfffffffe
   14000fd1f:	and    r12d,0x1
   14000fd23:	or     DWORD PTR [rbp+0x104],r12d
   14000fd2a:	mov    rax,rbp
   14000fd2d:	mov    rcx,QWORD PTR [rsp+0x160]
   14000fd35:	xor    rcx,rsp
   14000fd38:	call   0x140029b40
   14000fd3d:	lea    r11,[rsp+0x170]
   14000fd45:	mov    rbx,QWORD PTR [r11+0x38]
   14000fd49:	mov    rbp,QWORD PTR [r11+0x40]
   14000fd4d:	mov    rsp,r11
   14000fd50:	pop    r14
   14000fd52:	pop    r13
   14000fd54:	pop    r12
   14000fd56:	pop    rdi
   14000fd57:	pop    rsi
   14000fd58:	ret    
   14000fd59:	int3   
   14000fd5a:	int3   
   14000fd5b:	int3   
   14000fd5c:	int3   
   14000fd5d:	int3   
   14000fd5e:	int3   
   14000fd5f:	int3   
   14000fd60:	rex push rbp
   14000fd62:	sub    rsp,0x20
   14000fd66:	mov    rbp,rdx
   14000fd69:	mov    rcx,QWORD PTR [rbp+0x20]
   14000fd6d:	call   0x14001d2ac
   14000fd72:	add    rsp,0x20
   14000fd76:	pop    rbp
   14000fd77:	ret    
   14000fd78:	int3   
   14000fd79:	int3   
   14000fd7a:	int3   
   14000fd7b:	int3   
   14000fd7c:	int3   
   14000fd7d:	int3   
   14000fd7e:	int3   
   14000fd7f:	int3   
   14000fd80:	rex push rbp
   14000fd82:	sub    rsp,0x20
   14000fd86:	mov    rbp,rdx
   14000fd89:	mov    rcx,QWORD PTR [rbp+0x20]
   14000fd8d:	add    rcx,0x110
   14000fd94:	call   0x140006220
   14000fd99:	add    rsp,0x20
   14000fd9d:	pop    rbp
   14000fd9e:	ret    
   14000fd9f:	int3   
   14000fda0:	rex push rbp
   14000fda2:	sub    rsp,0x20
   14000fda6:	mov    rbp,rdx
   14000fda9:	mov    rcx,QWORD PTR [rbp+0x20]
   14000fdad:	add    rcx,0x160
   14000fdb4:	call   0x1400079c0
   14000fdb9:	add    rsp,0x20
   14000fdbd:	pop    rbp
   14000fdbe:	ret    
   14000fdbf:	int3   
   14000fdc0:	rex push rbp
   14000fdc2:	sub    rsp,0x20
   14000fdc6:	mov    rbp,rdx
   14000fdc9:	mov    rcx,QWORD PTR [rbp+0x20]
   14000fdcd:	add    rcx,0x1570
   14000fdd4:	call   0x14000bd70
   14000fdd9:	add    rsp,0x20
   14000fddd:	pop    rbp
   14000fdde:	ret    
   14000fddf:	int3   
   14000fde0:	rex push rbp
   14000fde2:	sub    rsp,0x20
   14000fde6:	mov    rbp,rdx
   14000fde9:	mov    rcx,QWORD PTR [rbp+0x20]
   14000fded:	add    rcx,0x1db8
   14000fdf4:	call   0x140001270
   14000fdf9:	add    rsp,0x20
   14000fdfd:	pop    rbp
   14000fdfe:	ret    
   14000fdff:	int3   
   14000fe00:	rex push rbp
   14000fe02:	sub    rsp,0x20
   14000fe06:	mov    rbp,rdx
   14000fe09:	mov    rcx,QWORD PTR [rbp+0x28]
   14000fe0d:	call   0x14000dd20
   14000fe12:	add    rsp,0x20
   14000fe16:	pop    rbp
   14000fe17:	ret    
   14000fe18:	int3   
   14000fe19:	int3   
   14000fe1a:	int3   
   14000fe1b:	int3   
   14000fe1c:	int3   
   14000fe1d:	int3   
   14000fe1e:	int3   
   14000fe1f:	int3   
   14000fe20:	rex push rbp
   14000fe22:	sub    rsp,0x20
   14000fe26:	mov    rbp,rdx
   14000fe29:	mov    rcx,QWORD PTR [rbp+0x28]
   14000fe2d:	add    rcx,0xf0
   14000fe34:	call   0x14001e2f4
   14000fe39:	add    rsp,0x20
   14000fe3d:	pop    rbp
   14000fe3e:	ret    
   14000fe3f:	int3   
   14000fe40:	rex push rbp
   14000fe42:	sub    rsp,0x20
   14000fe46:	mov    rbp,rdx
   14000fe49:	mov    rcx,QWORD PTR [rbp+0x28]
   14000fe4d:	add    rcx,0x198
   14000fe54:	call   0x14001e2f4
   14000fe59:	add    rsp,0x20
   14000fe5d:	pop    rbp
   14000fe5e:	ret    
   14000fe5f:	int3   
   14000fe60:	rex push rbp
   14000fe62:	sub    rsp,0x20
   14000fe66:	mov    rbp,rdx
   14000fe69:	mov    rcx,QWORD PTR [rbp+0x20]
   14000fe6d:	add    rcx,0x2268
   14000fe74:	call   0x14000d910
   14000fe79:	add    rsp,0x20
   14000fe7d:	pop    rbp
   14000fe7e:	ret    
   14000fe7f:	int3   
   14000fe80:	rex push rbp
   14000fe82:	sub    rsp,0x20
   14000fe86:	mov    rbp,rdx
   14000fe89:	mov    rcx,QWORD PTR [rbp+0x20]
   14000fe8d:	add    rcx,0x2550
   14000fe94:	call   0x1400026a0
   14000fe99:	add    rsp,0x20
   14000fe9d:	pop    rbp
   14000fe9e:	ret    
   14000fe9f:	int3   
   14000fea0:	rex push rbp
   14000fea2:	sub    rsp,0x20
   14000fea6:	mov    rbp,rdx
   14000fea9:	mov    rcx,QWORD PTR [rbp+0x20]
   14000fead:	add    rcx,0x3928
   14000feb4:	call   0x1400134d0
   14000feb9:	add    rsp,0x20
   14000febd:	pop    rbp
   14000febe:	ret    
   14000febf:	int3   
   14000fec0:	rex push rbp
   14000fec2:	sub    rsp,0x20
   14000fec6:	mov    rbp,rdx
   14000fec9:	mov    rcx,QWORD PTR [rbp+0x20]
   14000fecd:	add    rcx,0x3a60
   14000fed4:	call   0x14001e2f4
   14000fed9:	add    rsp,0x20
   14000fedd:	pop    rbp
   14000fede:	ret    
   14000fedf:	int3   
   14000fee0:	rex push rbp
   14000fee2:	sub    rsp,0x20
   14000fee6:	mov    rbp,rdx
   14000fee9:	mov    rcx,QWORD PTR [rbp+0x20]
   14000feed:	add    rcx,0x3b08
   14000fef4:	call   0x14001e2f4
   14000fef9:	add    rsp,0x20
   14000fefd:	pop    rbp
   14000fefe:	ret    
   14000feff:	int3   
   14000ff00:	rex push rbp
   14000ff02:	sub    rsp,0x20
   14000ff06:	mov    rbp,rdx
   14000ff09:	mov    rcx,QWORD PTR [rbp+0x20]
   14000ff0d:	add    rcx,0x3bb0
   14000ff14:	call   0x14001e2f4
   14000ff19:	add    rsp,0x20
   14000ff1d:	pop    rbp
   14000ff1e:	ret    
   14000ff1f:	int3   
   14000ff20:	rex push rbp
   14000ff22:	sub    rsp,0x20
   14000ff26:	mov    rbp,rdx
   14000ff29:	mov    rcx,QWORD PTR [rbp+0x20]
   14000ff2d:	add    rcx,0x3c58
   14000ff34:	call   0x14001e384
   14000ff39:	add    rsp,0x20
   14000ff3d:	pop    rbp
   14000ff3e:	ret    
   14000ff3f:	int3   
   14000ff40:	rex push rbp
   14000ff42:	sub    rsp,0x20
   14000ff46:	mov    rbp,rdx
   14000ff49:	mov    rcx,QWORD PTR [rbp+0x20]
   14000ff4d:	add    rcx,0x3d00
   14000ff54:	call   0x1400213c8
   14000ff59:	add    rsp,0x20
   14000ff5d:	pop    rbp
   14000ff5e:	ret    
   14000ff5f:	int3   
   14000ff60:	rex push rbp
   14000ff62:	sub    rsp,0x20
   14000ff66:	mov    rbp,rdx
   14000ff69:	mov    rcx,QWORD PTR [rbp+0x20]
   14000ff6d:	add    rcx,0x3da8
   14000ff74:	call   0x14000ffb0
   14000ff79:	add    rsp,0x20
   14000ff7d:	pop    rbp
   14000ff7e:	ret    
   14000ff7f:	int3   
   14000ff80:	mov    QWORD PTR [rsp+0x8],rbx
   14000ff85:	push   rdi
   14000ff86:	sub    rsp,0x20
   14000ff8a:	mov    ebx,edx
   14000ff8c:	mov    rdi,rcx
   14000ff8f:	call   0x14000ffc0
   14000ff94:	test   bl,0x1
   14000ff97:	je     0x14000ffa1
   14000ff99:	mov    rcx,rdi
   14000ff9c:	call   0x14001490c
   14000ffa1:	mov    rax,rdi
   14000ffa4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ffa9:	add    rsp,0x20
   14000ffad:	pop    rdi
   14000ffae:	ret    
   14000ffaf:	int3   
   14000ffb0:	jmp    0x140023f58
   14000ffb5:	int3   
   14000ffb6:	int3   
   14000ffb7:	int3   
   14000ffb8:	int3   
   14000ffb9:	int3   
   14000ffba:	int3   
   14000ffbb:	int3   
   14000ffbc:	int3   
   14000ffbd:	int3   
   14000ffbe:	int3   
   14000ffbf:	int3   
   14000ffc0:	mov    QWORD PTR [rsp+0x8],rcx
   14000ffc5:	push   rbp
   14000ffc6:	push   rsi
   14000ffc7:	push   rdi
   14000ffc8:	sub    rsp,0x30
   14000ffcc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ffd5:	mov    QWORD PTR [rsp+0x60],rbx
   14000ffda:	mov    rdi,rcx
   14000ffdd:	lea    rax,[rip+0x3cce4]        # 0x14004ccc8
   14000ffe4:	mov    QWORD PTR [rcx],rax
   14000ffe7:	mov    rcx,QWORD PTR [rcx+0x1568]
   14000ffee:	test   rcx,rcx
   14000fff1:	je     0x140010009
   14000fff3:	mov    rax,QWORD PTR [rcx]
   14000fff6:	mov    edx,0x1
   14000fffb:	call   QWORD PTR [rax+0x8]
   14000fffe:	mov    QWORD PTR [rdi+0x1568],0x0
   140010009:	lea    rcx,[rdi+0x3da8]
   140010010:	call   0x140023f58
   140010015:	nop
   140010016:	lea    rcx,[rdi+0x3d00]
   14001001d:	call   0x1400213c8
   140010022:	nop
   140010023:	lea    rcx,[rdi+0x3c58]
   14001002a:	call   0x14001e384
   14001002f:	nop
   140010030:	lea    rcx,[rdi+0x3bb0]
   140010037:	call   0x14001e2f4
   14001003c:	nop
   14001003d:	lea    rcx,[rdi+0x3b08]
   140010044:	call   0x14001e2f4
   140010049:	nop
   14001004a:	lea    rcx,[rdi+0x3a60]
   140010051:	call   0x14001e2f4
   140010056:	nop
   140010057:	lea    rcx,[rdi+0x3928]
   14001005e:	call   0x1400134d0
   140010063:	nop
   140010064:	lea    rcx,[rdi+0x2550]
   14001006b:	call   0x1400026a0
   140010070:	nop
   140010071:	lea    rbx,[rdi+0x2268]
   140010078:	mov    QWORD PTR [rsp+0x58],rbx
   14001007d:	lea    rax,[rip+0x3b8c4]        # 0x14004b948
   140010084:	mov    QWORD PTR [rbx],rax
   140010087:	lea    rcx,[rbx+0x240]
   14001008e:	call   0x14001e22c
   140010093:	nop
   140010094:	lea    rcx,[rbx+0x198]
   14001009b:	call   0x14001e2f4
   1400100a0:	nop
   1400100a1:	lea    rcx,[rbx+0xf0]
   1400100a8:	call   0x14001e2f4
   1400100ad:	nop
   1400100ae:	lea    rbp,[rip+0x3bbe3]        # 0x14004bc98
   1400100b5:	mov    QWORD PTR [rbx],rbp
   1400100b8:	mov    rcx,rbx
   1400100bb:	call   0x14001d2ac
   1400100c0:	nop
   1400100c1:	lea    rcx,[rdi+0x1db8]
   1400100c8:	call   0x140001270
   1400100cd:	nop
   1400100ce:	lea    rbx,[rdi+0x1570]
   1400100d5:	mov    QWORD PTR [rsp+0x58],rbx
   1400100da:	lea    rax,[rip+0x3b4d7]        # 0x14004b5b8
   1400100e1:	mov    QWORD PTR [rbx],rax
   1400100e4:	lea    rcx,[rbx+0x7a0]
   1400100eb:	call   0x14001e22c
   1400100f0:	nop
   1400100f1:	lea    rcx,[rbx+0x6f8]
   1400100f8:	call   0x14001e22c
   1400100fd:	nop
   1400100fe:	lea    rcx,[rbx+0x650]
   140010105:	call   0x14001e22c
   14001010a:	nop
   14001010b:	lea    rcx,[rbx+0x5a8]
   140010112:	call   0x14001e22c
   140010117:	nop
   140010118:	lea    rcx,[rbx+0x500]
   14001011f:	call   0x14001e22c
   140010124:	nop
   140010125:	lea    rcx,[rbx+0x458]
   14001012c:	call   0x14001e22c
   140010131:	nop
   140010132:	lea    rcx,[rbx+0x3b0]
   140010139:	call   0x14001e22c
   14001013e:	nop
   14001013f:	lea    rcx,[rbx+0x2f8]
   140010146:	lea    rax,[rip+0x3ce5b]        # 0x14004cfa8
   14001014d:	mov    QWORD PTR [rcx],rax
   140010150:	call   0x14001e22c
   140010155:	nop
   140010156:	lea    rcx,[rbx+0x250]
   14001015d:	call   0x1400212fc
   140010162:	nop
   140010163:	lea    rcx,[rbx+0x1a8]
   14001016a:	call   0x14001e2f4
   14001016f:	nop
   140010170:	lea    rcx,[rbx+0x100]
   140010177:	call   0x14001e2f4
   14001017c:	nop
   14001017d:	mov    rdx,QWORD PTR [rbx+0xf8]
   140010184:	sub    rdx,0x18
   140010188:	or     esi,0xffffffff
   14001018b:	mov    eax,esi
   14001018d:	lock xadd DWORD PTR [rdx+0x10],eax
   140010192:	add    eax,esi
   140010194:	test   eax,eax
   140010196:	jg     0x1400101a2
   140010198:	mov    rcx,QWORD PTR [rdx]
   14001019b:	mov    rax,QWORD PTR [rcx]
   14001019e:	call   QWORD PTR [rax+0x8]
   1400101a1:	nop
   1400101a2:	mov    QWORD PTR [rbx],rbp
   1400101a5:	mov    rcx,rbx
   1400101a8:	call   0x14001d2ac
   1400101ad:	nop
   1400101ae:	lea    rbx,[rdi+0x160]
   1400101b5:	mov    QWORD PTR [rsp+0x58],rbx
   1400101ba:	mov    rbp,QWORD PTR [rbx+0x8]
   1400101be:	test   rbp,rbp
   1400101c1:	je     0x1400101db
   1400101c3:	mov    rcx,rbp
   1400101c6:	call   0x140004120
   1400101cb:	mov    rcx,rbp
   1400101ce:	call   0x14001490c
   1400101d3:	mov    QWORD PTR [rbx+0x8],0x0
   1400101db:	mov    QWORD PTR [rbx+0x8],0x0
   1400101e3:	call   QWORD PTR [rip+0x338ff]        # 0x140043ae8
   1400101e9:	nop
   1400101ea:	mov    rdx,QWORD PTR [rbx+0x13a8]
   1400101f1:	sub    rdx,0x18
   1400101f5:	mov    eax,esi
   1400101f7:	lock xadd DWORD PTR [rdx+0x10],eax
   1400101fc:	add    eax,0xffffffff
   1400101ff:	test   eax,eax
   140010201:	jg     0x14001020d
   140010203:	mov    rcx,QWORD PTR [rdx]
   140010206:	mov    rax,QWORD PTR [rcx]
   140010209:	call   QWORD PTR [rax+0x8]
   14001020c:	nop
   14001020d:	mov    rdx,QWORD PTR [rbx+0x13a0]
   140010214:	sub    rdx,0x18
   140010218:	lock xadd DWORD PTR [rdx+0x10],esi
   14001021d:	add    esi,0xffffffff
   140010220:	test   esi,esi
   140010222:	jg     0x14001022e
   140010224:	mov    rcx,QWORD PTR [rdx]
   140010227:	mov    rax,QWORD PTR [rcx]
   14001022a:	call   QWORD PTR [rax+0x8]
   14001022d:	nop
   14001022e:	lea    rbx,[rdi+0x110]
   140010235:	mov    QWORD PTR [rsp+0x58],rbx
   14001023a:	lea    rax,[rip+0x3ada7]        # 0x14004afe8
   140010241:	mov    QWORD PTR [rbx],rax
   140010244:	lea    rcx,[rbx+0x20]
   140010248:	lea    rsi,[rip+0x37bd9]        # 0x140047e28
   14001024f:	mov    QWORD PTR [rcx],rsi
   140010252:	call   0x140005860
   140010257:	nop
   140010258:	lea    rcx,[rbx+0x10]
   14001025c:	mov    QWORD PTR [rcx],rsi
   14001025f:	call   0x140005860
   140010264:	nop
   140010265:	mov    rcx,rdi
   140010268:	mov    rbx,QWORD PTR [rsp+0x60]
   14001026d:	add    rsp,0x30
   140010271:	pop    rdi
   140010272:	pop    rsi
   140010273:	pop    rbp
   140010274:	jmp    0x14001d2ac
   140010279:	int3   
   14001027a:	int3   
   14001027b:	int3   
   14001027c:	int3   
   14001027d:	int3   
   14001027e:	int3   
   14001027f:	int3   
   140010280:	rex push rbp
   140010282:	sub    rsp,0x20
   140010286:	mov    rbp,rdx
   140010289:	mov    rcx,QWORD PTR [rbp+0x50]
   14001028d:	call   0x14001d2ac
   140010292:	add    rsp,0x20
   140010296:	pop    rbp
   140010297:	ret    
   140010298:	int3   
   140010299:	int3   
   14001029a:	int3   
   14001029b:	int3   
   14001029c:	int3   
   14001029d:	int3   
   14001029e:	int3   
   14001029f:	int3   
   1400102a0:	rex push rbp
   1400102a2:	sub    rsp,0x20
   1400102a6:	mov    rbp,rdx
   1400102a9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400102ad:	add    rcx,0x110
   1400102b4:	call   0x140006220
   1400102b9:	add    rsp,0x20
   1400102bd:	pop    rbp
   1400102be:	ret    
   1400102bf:	int3   
   1400102c0:	rex push rbp
   1400102c2:	sub    rsp,0x20
   1400102c6:	mov    rbp,rdx
   1400102c9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400102cd:	add    rcx,0x160
   1400102d4:	call   0x1400079c0
   1400102d9:	add    rsp,0x20
   1400102dd:	pop    rbp
   1400102de:	ret    
   1400102df:	int3   
   1400102e0:	rex push rbp
   1400102e2:	sub    rsp,0x20
   1400102e6:	mov    rbp,rdx
   1400102e9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400102ed:	add    rcx,0x1570
   1400102f4:	call   0x14000bd70
   1400102f9:	add    rsp,0x20
   1400102fd:	pop    rbp
   1400102fe:	ret    
   1400102ff:	int3   
   140010300:	rex push rbp
   140010302:	sub    rsp,0x20
   140010306:	mov    rbp,rdx
   140010309:	mov    rcx,QWORD PTR [rbp+0x50]
   14001030d:	add    rcx,0x1db8
   140010314:	call   0x140001270
   140010319:	add    rsp,0x20
   14001031d:	pop    rbp
   14001031e:	ret    
   14001031f:	int3   
   140010320:	rex push rbp
   140010322:	sub    rsp,0x20
   140010326:	mov    rbp,rdx
   140010329:	mov    rcx,QWORD PTR [rbp+0x50]
   14001032d:	add    rcx,0x2268
   140010334:	call   0x14000d910
   140010339:	add    rsp,0x20
   14001033d:	pop    rbp
   14001033e:	ret    
   14001033f:	int3   
   140010340:	rex push rbp
   140010342:	sub    rsp,0x20
   140010346:	mov    rbp,rdx
   140010349:	mov    rcx,QWORD PTR [rbp+0x50]
   14001034d:	add    rcx,0x2550
   140010354:	call   0x1400026a0
   140010359:	add    rsp,0x20
   14001035d:	pop    rbp
   14001035e:	ret    
   14001035f:	int3   
   140010360:	rex push rbp
   140010362:	sub    rsp,0x20
   140010366:	mov    rbp,rdx
   140010369:	mov    rcx,QWORD PTR [rbp+0x50]
   14001036d:	add    rcx,0x3928
   140010374:	call   0x1400134d0
   140010379:	add    rsp,0x20
   14001037d:	pop    rbp
   14001037e:	ret    
   14001037f:	int3   
   140010380:	rex push rbp
   140010382:	sub    rsp,0x20
   140010386:	mov    rbp,rdx
   140010389:	mov    rcx,QWORD PTR [rbp+0x50]
   14001038d:	add    rcx,0x3a60
   140010394:	call   0x14001e2f4
   140010399:	add    rsp,0x20
   14001039d:	pop    rbp
   14001039e:	ret    
   14001039f:	int3   
   1400103a0:	rex push rbp
   1400103a2:	sub    rsp,0x20
   1400103a6:	mov    rbp,rdx
   1400103a9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400103ad:	add    rcx,0x3b08
   1400103b4:	call   0x14001e2f4
   1400103b9:	add    rsp,0x20
   1400103bd:	pop    rbp
   1400103be:	ret    
   1400103bf:	int3   
   1400103c0:	rex push rbp
   1400103c2:	sub    rsp,0x20
   1400103c6:	mov    rbp,rdx
   1400103c9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400103cd:	add    rcx,0x3bb0
   1400103d4:	call   0x14001e2f4
   1400103d9:	add    rsp,0x20
   1400103dd:	pop    rbp
   1400103de:	ret    
   1400103df:	int3   
   1400103e0:	rex push rbp
   1400103e2:	sub    rsp,0x20
   1400103e6:	mov    rbp,rdx
   1400103e9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400103ed:	add    rcx,0x3c58
   1400103f4:	call   0x14001e384
   1400103f9:	add    rsp,0x20
   1400103fd:	pop    rbp
   1400103fe:	ret    
   1400103ff:	int3   
   140010400:	rex push rbp
   140010402:	sub    rsp,0x20
   140010406:	mov    rbp,rdx
   140010409:	mov    rcx,QWORD PTR [rbp+0x50]
   14001040d:	add    rcx,0x3d00
   140010414:	call   0x1400213c8
   140010419:	add    rsp,0x20
   14001041d:	pop    rbp
   14001041e:	ret    
   14001041f:	int3   
   140010420:	rex push rbp
   140010422:	sub    rsp,0x20
   140010426:	mov    rbp,rdx
   140010429:	mov    rcx,QWORD PTR [rbp+0x50]
   14001042d:	add    rcx,0x3da8
   140010434:	call   0x14000ffb0
   140010439:	add    rsp,0x20
   14001043d:	pop    rbp
   14001043e:	ret    
   14001043f:	int3   
   140010440:	rex push rbp
   140010442:	sub    rsp,0x20
   140010446:	mov    rbp,rdx
   140010449:	mov    rcx,QWORD PTR [rbp+0x58]
   14001044d:	call   0x14000dd20
   140010452:	add    rsp,0x20
   140010456:	pop    rbp
   140010457:	ret    
   140010458:	int3   
   140010459:	int3   
   14001045a:	int3   
   14001045b:	int3   
   14001045c:	int3   
   14001045d:	int3   
   14001045e:	int3   
   14001045f:	int3   
   140010460:	rex push rbp
   140010462:	sub    rsp,0x20
   140010466:	mov    rbp,rdx
   140010469:	mov    rcx,QWORD PTR [rbp+0x58]
   14001046d:	add    rcx,0xf0
   140010474:	call   0x14001e2f4
   140010479:	add    rsp,0x20
   14001047d:	pop    rbp
   14001047e:	ret    
   14001047f:	int3   
   140010480:	rex push rbp
   140010482:	sub    rsp,0x20
   140010486:	mov    rbp,rdx
   140010489:	mov    rcx,QWORD PTR [rbp+0x58]
   14001048d:	add    rcx,0x198
   140010494:	call   0x14001e2f4
   140010499:	add    rsp,0x20
   14001049d:	pop    rbp
   14001049e:	ret    
   14001049f:	int3   
   1400104a0:	rex push rbp
   1400104a2:	sub    rsp,0x20
   1400104a6:	mov    rbp,rdx
   1400104a9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400104ad:	call   0x14000dd20
   1400104b2:	add    rsp,0x20
   1400104b6:	pop    rbp
   1400104b7:	ret    
   1400104b8:	int3   
   1400104b9:	int3   
   1400104ba:	int3   
   1400104bb:	int3   
   1400104bc:	int3   
   1400104bd:	int3   
   1400104be:	int3   
   1400104bf:	int3   
   1400104c0:	rex push rbp
   1400104c2:	sub    rsp,0x20
   1400104c6:	mov    rbp,rdx
   1400104c9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400104cd:	add    rcx,0xf8
   1400104d4:	call   0x140003de0
   1400104d9:	add    rsp,0x20
   1400104dd:	pop    rbp
   1400104de:	ret    
   1400104df:	int3   
   1400104e0:	rex push rbp
   1400104e2:	sub    rsp,0x20
   1400104e6:	mov    rbp,rdx
   1400104e9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400104ed:	add    rcx,0x100
   1400104f4:	call   0x14001e2f4
   1400104f9:	add    rsp,0x20
   1400104fd:	pop    rbp
   1400104fe:	ret    
   1400104ff:	int3   
   140010500:	rex push rbp
   140010502:	sub    rsp,0x20
   140010506:	mov    rbp,rdx
   140010509:	mov    rcx,QWORD PTR [rbp+0x58]
   14001050d:	add    rcx,0x1a8
   140010514:	call   0x14001e2f4
   140010519:	add    rsp,0x20
   14001051d:	pop    rbp
   14001051e:	ret    
   14001051f:	int3   
   140010520:	rex push rbp
   140010522:	sub    rsp,0x20
   140010526:	mov    rbp,rdx
   140010529:	mov    rcx,QWORD PTR [rbp+0x58]
   14001052d:	add    rcx,0x250
   140010534:	call   0x1400212fc
   140010539:	add    rsp,0x20
   14001053d:	pop    rbp
   14001053e:	ret    
   14001053f:	int3   
   140010540:	rex push rbp
   140010542:	sub    rsp,0x20
   140010546:	mov    rbp,rdx
   140010549:	mov    rcx,QWORD PTR [rbp+0x58]
   14001054d:	add    rcx,0x2f8
   140010554:	call   0x140012760
   140010559:	add    rsp,0x20
   14001055d:	pop    rbp
   14001055e:	ret    
   14001055f:	int3   
   140010560:	rex push rbp
   140010562:	sub    rsp,0x20
   140010566:	mov    rbp,rdx
   140010569:	mov    rcx,QWORD PTR [rbp+0x58]
   14001056d:	add    rcx,0x3b0
   140010574:	call   0x14001e22c
   140010579:	add    rsp,0x20
   14001057d:	pop    rbp
   14001057e:	ret    
   14001057f:	int3   
   140010580:	rex push rbp
   140010582:	sub    rsp,0x20
   140010586:	mov    rbp,rdx
   140010589:	mov    rcx,QWORD PTR [rbp+0x58]
   14001058d:	add    rcx,0x458
   140010594:	call   0x14001e22c
   140010599:	add    rsp,0x20
   14001059d:	pop    rbp
   14001059e:	ret    
   14001059f:	int3   
   1400105a0:	rex push rbp
   1400105a2:	sub    rsp,0x20
   1400105a6:	mov    rbp,rdx
   1400105a9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400105ad:	add    rcx,0x500
   1400105b4:	call   0x14001e22c
   1400105b9:	add    rsp,0x20
   1400105bd:	pop    rbp
   1400105be:	ret    
   1400105bf:	int3   
   1400105c0:	rex push rbp
   1400105c2:	sub    rsp,0x20
   1400105c6:	mov    rbp,rdx
   1400105c9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400105cd:	add    rcx,0x5a8
   1400105d4:	call   0x14001e22c
   1400105d9:	add    rsp,0x20
   1400105dd:	pop    rbp
   1400105de:	ret    
   1400105df:	int3   
   1400105e0:	rex push rbp
   1400105e2:	sub    rsp,0x20
   1400105e6:	mov    rbp,rdx
   1400105e9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400105ed:	add    rcx,0x650
   1400105f4:	call   0x14001e22c
   1400105f9:	add    rsp,0x20
   1400105fd:	pop    rbp
   1400105fe:	ret    
   1400105ff:	int3   
   140010600:	rex push rbp
   140010602:	sub    rsp,0x20
   140010606:	mov    rbp,rdx
   140010609:	mov    rcx,QWORD PTR [rbp+0x58]
   14001060d:	add    rcx,0x6f8
   140010614:	call   0x14001e22c
   140010619:	add    rsp,0x20
   14001061d:	pop    rbp
   14001061e:	ret    
   14001061f:	int3   
   140010620:	rex push rbp
   140010622:	sub    rsp,0x20
   140010626:	mov    rbp,rdx
   140010629:	mov    rcx,QWORD PTR [rbp+0x58]
   14001062d:	add    rcx,0x13a0
   140010634:	call   0x140003de0
   140010639:	add    rsp,0x20
   14001063d:	pop    rbp
   14001063e:	ret    
   14001063f:	int3   
   140010640:	rex push rbp
   140010642:	sub    rsp,0x20
   140010646:	mov    rbp,rdx
   140010649:	mov    rcx,QWORD PTR [rbp+0x58]
   14001064d:	add    rcx,0x13a8
   140010654:	call   0x140003de0
   140010659:	add    rsp,0x20
   14001065d:	pop    rbp
   14001065e:	ret    
   14001065f:	int3   
   140010660:	rex push rbp
   140010662:	sub    rsp,0x20
   140010666:	mov    rbp,rdx
   140010669:	mov    rcx,QWORD PTR [rbp+0x58]
   14001066d:	add    rcx,0x10
   140010671:	call   0x140007190
   140010676:	add    rsp,0x20
   14001067a:	pop    rbp
   14001067b:	ret    
   14001067c:	int3   
   14001067d:	int3   
   14001067e:	int3   
   14001067f:	int3   
   140010680:	mov    QWORD PTR [rsp+0x8],rbx
   140010685:	push   rdi
   140010686:	sub    rsp,0x20
   14001068a:	mov    rdi,rdx
   14001068d:	lea    r8,[rcx+0x3b08]
   140010694:	mov    rbx,rcx
   140010697:	mov    rcx,rdi
   14001069a:	mov    edx,0x3f0
   14001069f:	call   0x14001e4c0
   1400106a4:	lea    r8,[rbx+0x3bb0]
   1400106ab:	mov    edx,0x3ef
   1400106b0:	mov    rcx,rdi
   1400106b3:	call   0x14001e4c0
   1400106b8:	lea    r8,[rbx+0x3a60]
   1400106bf:	mov    edx,0x3ee
   1400106c4:	mov    rcx,rdi
   1400106c7:	call   0x14001e4c0
   1400106cc:	lea    r8,[rbx+0x3c58]
   1400106d3:	mov    edx,0x3f4
   1400106d8:	mov    rcx,rdi
   1400106db:	call   0x14001e4c0
   1400106e0:	lea    r8,[rbx+0x3d00]
   1400106e7:	mov    edx,0x3fe
   1400106ec:	mov    rcx,rdi
   1400106ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400106f4:	add    rsp,0x20
   1400106f8:	pop    rdi
   1400106f9:	jmp    0x14001e4c0
   1400106fe:	int3   
   1400106ff:	int3   
   140010700:	lea    rax,[rip+0x3c5a9]        # 0x14004ccb0
   140010707:	ret    
   140010708:	int3   
   140010709:	int3   
   14001070a:	int3   
   14001070b:	int3   
   14001070c:	int3   
   14001070d:	int3   
   14001070e:	int3   
   14001070f:	int3   
   140010710:	rex push rdi
   140010712:	push   r12
   140010714:	push   r13
   140010716:	sub    rsp,0x40
   14001071a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010723:	mov    QWORD PTR [rsp+0x68],rbx
   140010728:	mov    QWORD PTR [rsp+0x70],rbp
   14001072d:	mov    QWORD PTR [rsp+0x78],rsi
   140010732:	mov    rax,QWORD PTR [rip+0x4a847]        # 0x14005af80
   140010739:	xor    rax,rsp
   14001073c:	mov    QWORD PTR [rsp+0x30],rax
   140010741:	mov    rbp,rcx
   140010744:	add    rcx,0x160
   14001074b:	call   0x140007aa0
   140010750:	cmp    eax,0x1
   140010753:	je     0x140010786
   140010755:	cmp    DWORD PTR [rbp+0xfc],0x0
   14001075c:	jne    0x140010775
   14001075e:	mov    r9d,0x9502
   140010764:	xor    r8d,r8d
   140010767:	lea    edx,[r8+0x10]
   14001076b:	mov    rcx,QWORD PTR [rbp+0x40]
   14001076f:	call   QWORD PTR [rip+0x33283]        # 0x1400439f8
   140010775:	xor    r12d,r12d
   140010778:	mov    DWORD PTR [rbp+0xf8],r12d
   14001077f:	xor    eax,eax
   140010781:	jmp    0x14001099a
   140010786:	xor    r12d,r12d
   140010789:	test   rbp,rbp
   14001078c:	jne    0x140010793
   14001078e:	mov    rsi,r12
   140010791:	jmp    0x140010797
   140010793:	mov    rsi,QWORD PTR [rbp+0x40]
   140010797:	mov    rdi,QWORD PTR [rbp+0x168]
   14001079e:	test   rdi,rdi
   1400107a1:	je     0x1400107ba
   1400107a3:	mov    rcx,rdi
   1400107a6:	call   0x140004120
   1400107ab:	mov    rcx,rdi
   1400107ae:	call   0x14001490c
   1400107b3:	mov    QWORD PTR [rbp+0x168],r12
   1400107ba:	mov    ecx,0x4a0
   1400107bf:	call   0x1400148c0
   1400107c4:	mov    QWORD PTR [rsp+0x28],rax
   1400107c9:	test   rax,rax
   1400107cc:	je     0x1400107e8
   1400107ce:	mov    r9,QWORD PTR [rbp+0x1508]
   1400107d5:	mov    r8d,0x8002
   1400107db:	mov    rdx,rsi
   1400107de:	mov    rcx,rax
   1400107e1:	call   0x140003e10
   1400107e6:	jmp    0x1400107eb
   1400107e8:	mov    rax,r12
   1400107eb:	mov    QWORD PTR [rbp+0x168],rax
   1400107f2:	lea    rcx,[rbp+0x17c]
   1400107f9:	xor    edx,edx
   1400107fb:	mov    r8d,0x1380
   140010801:	call   0x14002ac20
   140010806:	or     r8d,0xffffffff
   14001080a:	xor    edx,edx
   14001080c:	lea    rcx,[rbp+0x160]
   140010813:	call   0x140007e60
   140010818:	mov    r13d,DWORD PTR [rbp+0x174]
   14001081f:	mov    esi,r12d
   140010822:	cmp    DWORD PTR [rbp+0x160],r12d
   140010829:	jbe    0x140010865
   14001082b:	lea    rdi,[rbp+0x188]
   140010832:	cmp    DWORD PTR [rdi+0x7c],r13d
   140010836:	jne    0x140010853
   140010838:	mov    edx,esi
   14001083a:	lea    rcx,[rbp+0x160]
   140010841:	call   0x140008470
   140010846:	mov    r11b,BYTE PTR [rdi]
   140010849:	shr    r11d,1
   14001084c:	and    r11d,0x1
   140010850:	mov    r12d,r11d
   140010853:	add    esi,0x1
   140010856:	add    rdi,0x9c
   14001085d:	cmp    esi,DWORD PTR [rbp+0x160]
   140010863:	jb     0x140010832
   140010865:	and    DWORD PTR [rbp+0x104],0xffffffef
   14001086c:	and    r12d,0x1
   140010870:	shl    r12d,0x4
   140010874:	or     DWORD PTR [rbp+0x104],r12d
   14001087b:	lea    rcx,[rbp+0x160]
   140010882:	call   0x14000a0d0
   140010887:	and    DWORD PTR [rbp+0x104],0xffffdfff
   140010891:	and    eax,0x1
   140010894:	shl    eax,0xd
   140010897:	or     DWORD PTR [rbp+0x104],eax
   14001089d:	lea    rcx,[rbp+0x160]
   1400108a4:	call   0x14000a500
   1400108a9:	and    DWORD PTR [rbp+0x104],0xffffffbf
   1400108b0:	and    eax,0x1
   1400108b3:	shl    eax,0x6
   1400108b6:	or     DWORD PTR [rbp+0x104],eax
   1400108bc:	lea    rcx,[rbp+0x160]
   1400108c3:	call   0x140009ac0
   1400108c8:	and    DWORD PTR [rbp+0x104],0xfffffbff
   1400108d2:	and    eax,0x1
   1400108d5:	shl    eax,0xa
   1400108d8:	or     DWORD PTR [rbp+0x104],eax
   1400108de:	lea    rcx,[rbp+0x160]
   1400108e5:	call   0x140008ad0
   1400108ea:	and    DWORD PTR [rbp+0x104],0xffffffdf
   1400108f1:	and    eax,0x1
   1400108f4:	shl    eax,0x5
   1400108f7:	or     DWORD PTR [rbp+0x104],eax
   1400108fd:	lea    rcx,[rbp+0x160]
   140010904:	call   0x140009cb0
   140010909:	and    DWORD PTR [rbp+0x104],0xfffff7ff
   140010913:	and    eax,0x1
   140010916:	shl    eax,0xb
   140010919:	or     DWORD PTR [rbp+0x104],eax
   14001091f:	lea    rcx,[rbp+0x160]
   140010926:	call   0x14000a2f0
   14001092b:	and    DWORD PTR [rbp+0x104],0xffffefff
   140010935:	and    eax,0x1
   140010938:	shl    eax,0xc
   14001093b:	or     DWORD PTR [rbp+0x104],eax
   140010941:	lea    rcx,[rbp+0x160]
   140010948:	call   0x140008660
   14001094d:	and    DWORD PTR [rbp+0x104],0xfffffffd
   140010954:	and    eax,0x1
   140010957:	add    eax,eax
   140010959:	or     DWORD PTR [rbp+0x104],eax
   14001095f:	bt     DWORD PTR [rbp+0x104],0xc
   140010967:	jae    0x140010975
   140010969:	lea    rcx,[rbp+0x160]
   140010970:	call   0x140008850
   140010975:	bt     DWORD PTR [rbp+0x104],0xd
   14001097d:	jae    0x14001098b
   14001097f:	lea    rcx,[rbp+0x160]
   140010986:	call   0x14000ae90
   14001098b:	mov    DWORD PTR [rbp+0xf8],0x1
   140010995:	mov    eax,0x1
   14001099a:	mov    rcx,QWORD PTR [rsp+0x30]
   14001099f:	xor    rcx,rsp
   1400109a2:	call   0x140029b40
   1400109a7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400109ac:	mov    rbp,QWORD PTR [rsp+0x70]
   1400109b1:	mov    rsi,QWORD PTR [rsp+0x78]
   1400109b6:	add    rsp,0x40
   1400109ba:	pop    r13
   1400109bc:	pop    r12
   1400109be:	pop    rdi
   1400109bf:	ret    
   1400109c0:	rex push rbp
   1400109c2:	sub    rsp,0x20
   1400109c6:	mov    rbp,rdx
   1400109c9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400109cd:	call   0x14001490c
   1400109d2:	add    rsp,0x20
   1400109d6:	pop    rbp
   1400109d7:	ret    
   1400109d8:	int3   
   1400109d9:	int3   
   1400109da:	int3   
   1400109db:	int3   
   1400109dc:	int3   
   1400109dd:	int3   
   1400109de:	int3   
   1400109df:	int3   
   1400109e0:	rex push rbx
   1400109e2:	push   rdi
   1400109e3:	sub    rsp,0x58
   1400109e7:	mov    rax,QWORD PTR [rip+0x4a592]        # 0x14005af80
   1400109ee:	xor    rax,rsp
   1400109f1:	mov    QWORD PTR [rsp+0x48],rax
   1400109f6:	mov    rbx,rcx
   1400109f9:	call   0x14001d8b8
   1400109fe:	mov    r9,QWORD PTR [rbx+0x148]
   140010a05:	mov    rcx,QWORD PTR [rbx+0x40]
   140010a09:	mov    edx,0x80
   140010a0e:	lea    r8d,[rdx-0x7f]
   140010a12:	call   QWORD PTR [rip+0x32fd0]        # 0x1400439e8
   140010a18:	mov    r9,QWORD PTR [rbx+0x148]
   140010a1f:	mov    rcx,QWORD PTR [rbx+0x40]
   140010a23:	xor    r8d,r8d
   140010a26:	mov    edx,0x80
   140010a2b:	call   QWORD PTR [rip+0x32fb7]        # 0x1400439e8
   140010a31:	mov    eax,DWORD PTR [rip+0x3aa19]        # 0x14004b450
   140010a37:	lea    rcx,[rsp+0x34]
   140010a3c:	mov    DWORD PTR [rsp+0x28],0x20
   140010a44:	mov    DWORD PTR [rsp+0x2c],0x5
   140010a4c:	xor    edi,edi
   140010a4e:	mov    DWORD PTR [rsp+0x30],edi
   140010a52:	mov    DWORD PTR [rcx],eax
   140010a54:	mov    eax,DWORD PTR [rip+0x3a9fa]        # 0x14004b454
   140010a5a:	mov    DWORD PTR [rcx+0x4],eax
   140010a5d:	mov    eax,DWORD PTR [rip+0x3a9f5]        # 0x14004b458
   140010a63:	lea    rdx,[rsp+0x28]
   140010a68:	mov    DWORD PTR [rcx+0x8],eax
   140010a6b:	mov    eax,DWORD PTR [rip+0x3a9eb]        # 0x14004b45c
   140010a71:	xor    r8d,r8d
   140010a74:	mov    DWORD PTR [rcx+0xc],eax
   140010a77:	mov    rcx,QWORD PTR [rbx+0x40]
   140010a7b:	mov    WORD PTR [rsp+0x44],di
   140010a80:	call   QWORD PTR [rip+0x32e42]        # 0x1400438c8
   140010a86:	mov    rcx,rbx
   140010a89:	mov    QWORD PTR [rbx+0x150],rax
   140010a90:	call   0x140010710
   140010a95:	test   eax,eax
   140010a97:	je     0x140010dc0
   140010a9d:	mov    QWORD PTR [rsp+0x78],rbp
   140010aa2:	lea    rbp,[rbx+0x110]
   140010aa9:	mov    QWORD PTR [rsp+0x80],rsi
   140010ab1:	mov    QWORD PTR [rsp+0x50],r12
   140010ab6:	lea    r12,[rbx+0x104]
   140010abd:	lea    rax,[rbx+0x160]
   140010ac4:	test   r12,r12
   140010ac7:	mov    QWORD PTR [rip+0x5130a],rbp        # 0x140061dd8
   140010ace:	mov    QWORD PTR [rip+0x5130b],rbx        # 0x140061de0
   140010ad5:	mov    QWORD PTR [rbx+0x3a48],rbp
   140010adc:	mov    QWORD PTR [rbx+0x3a50],r12
   140010ae3:	mov    QWORD PTR [rbx+0x3a58],rax
   140010aea:	mov    QWORD PTR [rbx+0x3a40],rbx
   140010af1:	je     0x140010b94
   140010af7:	mov    ecx,DWORD PTR [r12]
   140010afb:	test   cl,0x1
   140010afe:	jne    0x140010b2b
   140010b00:	bt     ecx,0xd
   140010b04:	jb     0x140010b2b
   140010b06:	lea    r8,[rip+0x3c7d3]        # 0x14004d2e0
   140010b0d:	lea    rdx,[rip+0x3a90c]        # 0x14004b420
   140010b14:	lea    rcx,[rip+0x51325]        # 0x140061e40
   140010b1b:	mov    r9d,0x1
   140010b21:	call   0x140022254
   140010b26:	mov    r11d,eax
   140010b29:	jmp    0x140010b31
   140010b2b:	mov    r11d,0x1
   140010b31:	mov    rax,QWORD PTR [rbx+0x3a50]
   140010b38:	shl    r11d,0x7
   140010b3c:	xor    r11d,DWORD PTR [rax]
   140010b3f:	and    r11d,0x80
   140010b46:	xor    DWORD PTR [rax],r11d
   140010b49:	mov    rax,QWORD PTR [rbx+0x3a50]
   140010b50:	bt     DWORD PTR [rax],0xc
   140010b54:	jae    0x140010b61
   140010b56:	test   BYTE PTR [rax],0x2
   140010b59:	jne    0x140010b61
   140010b5b:	and    DWORD PTR [rax],0xffffff7f
   140010b61:	lea    r8,[rip+0x3c790]        # 0x14004d2f8
   140010b68:	lea    rdx,[rip+0x3a8b1]        # 0x14004b420
   140010b6f:	lea    rcx,[rip+0x512ca]        # 0x140061e40
   140010b76:	mov    r9d,0x1
   140010b7c:	call   0x140022254
   140010b81:	mov    rcx,QWORD PTR [rbx+0x3a50]
   140010b88:	shl    eax,0x8
   140010b8b:	xor    eax,DWORD PTR [rcx]
   140010b8d:	and    eax,0x100
   140010b92:	xor    DWORD PTR [rcx],eax
   140010b94:	cmp    QWORD PTR [rbx+0x3a50],rdi
   140010b9b:	je     0x140010c27
   140010ba1:	lea    rcx,[rbx+0x3928]
   140010ba8:	call   0x140013d00
   140010bad:	mov    rax,QWORD PTR [rbx+0x39d0]
   140010bb4:	test   rax,rax
   140010bb7:	je     0x140010bbe
   140010bb9:	mov    ecx,DWORD PTR [rax+0x14]
   140010bbc:	jmp    0x140010bc0
   140010bbe:	mov    ecx,edi
   140010bc0:	mov    rax,QWORD PTR [rbx+0x3a50]
   140010bc7:	mov    edx,DWORD PTR [rax]
   140010bc9:	shr    edx,0x7
   140010bcc:	and    edx,0x1
   140010bcf:	cmp    ecx,edx
   140010bd1:	je     0x140010bdf
   140010bd3:	lea    rcx,[rbx+0x3928]
   140010bda:	call   0x140013fd0
   140010bdf:	mov    r8,QWORD PTR [rbx+0x39d0]
   140010be6:	test   r8,r8
   140010be9:	je     0x140010c27
   140010beb:	mov    rax,QWORD PTR [rbx+0x3a50]
   140010bf2:	mov    ecx,DWORD PTR [rax]
   140010bf4:	test   cl,cl
   140010bf6:	jns    0x140010c27
   140010bf8:	test   cl,0x20
   140010bfb:	je     0x140010c0e
   140010bfd:	test   cl,0x40
   140010c00:	je     0x140010c0e
   140010c02:	test   cl,0x10
   140010c05:	je     0x140010c0e
   140010c07:	mov    eax,0x1
   140010c0c:	jmp    0x140010c10
   140010c0e:	mov    eax,edi
   140010c10:	mov    edx,0x9f
   140010c15:	mov    ecx,0x96
   140010c1a:	test   eax,eax
   140010c1c:	cmovne edx,ecx
   140010c1f:	mov    rcx,r8
   140010c22:	call   0x1400146b0
   140010c27:	mov    edx,DWORD PTR [r12]
   140010c2b:	lea    rcx,[rbx+0x3928]
   140010c32:	shr    edx,0x7
   140010c35:	and    edx,0x1
   140010c38:	call   0x140013fd0
   140010c3d:	mov    rcx,QWORD PTR [rbx+0x3d40]
   140010c44:	mov    r9d,0x1
   140010c4a:	xor    r8d,r8d
   140010c4d:	mov    edx,0x1331
   140010c52:	call   QWORD PTR [rip+0x32d90]        # 0x1400439e8
   140010c58:	mov    rcx,QWORD PTR [rbx+0x3d40]
   140010c5f:	xor    r8d,r8d
   140010c62:	movsd  xmm5,QWORD PTR [rip+0x4bf16]        # 0x14005cb80
   140010c6a:	movsd  xmm0,QWORD PTR [rip+0x4bf16]        # 0x14005cb88
   140010c72:	mov    edx,0x132b
   140010c77:	mulsd  xmm5,QWORD PTR [rip+0x3d101]        # 0x14004dd80
   140010c7f:	mulsd  xmm0,QWORD PTR [rip+0x3d0f1]        # 0x14004dd78
   140010c87:	cvttsd2si eax,xmm5
   140010c8b:	mov    DWORD PTR [rsp+0x20],eax
   140010c8f:	cvttsd2si eax,xmm0
   140010c93:	mov    DWORD PTR [rsp+0x24],eax
   140010c97:	mov    rax,QWORD PTR [rsp+0x20]
   140010c9c:	shr    rax,0x20
   140010ca0:	movzx  r9d,ax
   140010ca4:	movzx  eax,WORD PTR [rsp+0x20]
   140010ca9:	shl    r9d,0x10
   140010cad:	or     r9,rax
   140010cb0:	call   QWORD PTR [rip+0x32d32]        # 0x1400439e8
   140010cb6:	mov    rcx,rbx
   140010cb9:	call   0x140011080
   140010cbe:	mov    WORD PTR [rbp+0x34],0x409
   140010cc4:	call   QWORD PTR [rip+0x3282e]        # 0x1400434f8
   140010cca:	test   ax,ax
   140010ccd:	mov    r12,QWORD PTR [rsp+0x50]
   140010cd2:	mov    rsi,QWORD PTR [rsp+0x80]
   140010cda:	movzx  r11d,ax
   140010cde:	je     0x140010d76
   140010ce4:	lea    r9,[rip+0x4bcfd]        # 0x14005c9e8
   140010ceb:	movzx  r8d,r11w
   140010cef:	mov    ax,0x409
   140010cf3:	mov    rdx,r9
   140010cf6:	and    r8w,0x3ff
   140010cfc:	data16 data16 xchg ax,ax
   140010d00:	movzx  ecx,WORD PTR [rdx]
   140010d03:	and    cx,0x3ff
   140010d08:	cmp    r8w,cx
   140010d0c:	je     0x140010d1c
   140010d0e:	add    edi,0x1
   140010d11:	add    rdx,0x10
   140010d15:	cmp    edi,0x1a
   140010d18:	jb     0x140010d00
   140010d1a:	jmp    0x140010d28
   140010d1c:	movsxd rax,edi
   140010d1f:	shl    rax,0x4
   140010d23:	mov    ax,WORD PTR [rax+r9*1]
   140010d28:	mov    cx,r11w
   140010d2c:	and    ecx,0x3ff
   140010d32:	cmp    ecx,0x4
   140010d35:	je     0x140010d58
   140010d37:	cmp    ecx,0x16
   140010d3a:	jne    0x140010d72
   140010d3c:	and    r11w,0xfc00
   140010d42:	mov    eax,0x816
   140010d47:	mov    ecx,0x416
   140010d4c:	cmp    r11w,0x400
   140010d52:	cmove  ax,cx
   140010d56:	jmp    0x140010d72
   140010d58:	and    r11w,0xfc00
   140010d5e:	mov    eax,0x404
   140010d63:	mov    ecx,0x804
   140010d68:	cmp    r11w,0x800
   140010d6e:	cmove  ax,cx
   140010d72:	mov    WORD PTR [rbp+0x34],ax
   140010d76:	movzx  eax,WORD PTR [rbp+0x34]
   140010d7a:	mov    DWORD PTR [rbp+0x8],0x1
   140010d81:	mov    rcx,rbx
   140010d84:	mov    WORD PTR [rbp+0xc],ax
   140010d88:	movzx  edx,WORD PTR [rbx+0x11c]
   140010d8f:	call   0x140010de0
   140010d94:	cmp    DWORD PTR [rbx+0x100],0x0
   140010d9b:	mov    rbp,QWORD PTR [rsp+0x78]
   140010da0:	je     0x140010dbb
   140010da2:	movsxd r8,DWORD PTR [rbx+0x3de0]
   140010da9:	mov    rcx,QWORD PTR [rbx+0x40]
   140010dad:	xor    r9d,r9d
   140010db0:	mov    edx,0x5dc
   140010db5:	call   QWORD PTR [rip+0x32c3d]        # 0x1400439f8
   140010dbb:	mov    eax,0x1
   140010dc0:	mov    rcx,QWORD PTR [rsp+0x48]
   140010dc5:	xor    rcx,rsp
   140010dc8:	call   0x140029b40
   140010dcd:	add    rsp,0x58
   140010dd1:	pop    rdi
   140010dd2:	pop    rbx
   140010dd3:	ret    
   140010dd4:	int3   
   140010dd5:	int3   
   140010dd6:	int3   
   140010dd7:	int3   
   140010dd8:	int3   
   140010dd9:	int3   
   140010dda:	int3   
   140010ddb:	int3   
   140010ddc:	int3   
   140010ddd:	int3   
   140010dde:	int3   
   140010ddf:	int3   
   140010de0:	mov    QWORD PTR [rsp+0x8],rbx
   140010de5:	mov    QWORD PTR [rsp+0x10],rsi
   140010dea:	push   rdi
   140010deb:	sub    rsp,0x20
   140010def:	mov    rdi,rcx
   140010df2:	add    rcx,0x110
   140010df9:	movzx  ebx,dx
   140010dfc:	call   0x1400063f0
   140010e01:	mov    r8d,0x1388
   140010e07:	mov    rdx,rdi
   140010e0a:	mov    rcx,rdi
   140010e0d:	call   0x140011490
   140010e12:	lea    rdx,[rdi+0x3a60]
   140010e19:	mov    r8d,0x138f
   140010e1f:	mov    rcx,rdi
   140010e22:	call   0x140011490
   140010e27:	lea    rdx,[rdi+0x3b08]
   140010e2e:	mov    r8d,0x1391
   140010e34:	mov    rcx,rdi
   140010e37:	call   0x140011490
   140010e3c:	lea    rdx,[rdi+0x3bb0]
   140010e43:	mov    r8d,0x1390
   140010e49:	mov    rcx,rdi
   140010e4c:	call   0x140011490
   140010e51:	movzx  edx,bx
   140010e54:	mov    rcx,rdi
   140010e57:	call   0x140010f40
   140010e5c:	lea    rcx,[rdi+0x3928]
   140010e63:	movzx  edx,bx
   140010e66:	call   0x1400137f0
   140010e6b:	xor    esi,esi
   140010e6d:	lea    rbx,[rdi+0x130]
   140010e74:	test   rbx,rbx
   140010e77:	mov    r8,rsi
   140010e7a:	je     0x140010e80
   140010e7c:	mov    r8,QWORD PTR [rbx+0x8]
   140010e80:	mov    rcx,QWORD PTR [rdi+0x3d40]
   140010e87:	xor    r9d,r9d
   140010e8a:	lea    edx,[r9+0x30]
   140010e8e:	call   QWORD PTR [rip+0x32b54]        # 0x1400439e8
   140010e94:	test   rbx,rbx
   140010e97:	mov    r8,rsi
   140010e9a:	je     0x140010ea0
   140010e9c:	mov    r8,QWORD PTR [rbx+0x8]
   140010ea0:	mov    rcx,QWORD PTR [rdi+0x3aa0]
   140010ea7:	xor    r9d,r9d
   140010eaa:	lea    edx,[r9+0x30]
   140010eae:	call   QWORD PTR [rip+0x32b34]        # 0x1400439e8
   140010eb4:	test   rbx,rbx
   140010eb7:	mov    r8,rsi
   140010eba:	je     0x140010ec0
   140010ebc:	mov    r8,QWORD PTR [rbx+0x8]
   140010ec0:	mov    rcx,QWORD PTR [rdi+0x3b48]
   140010ec7:	xor    r9d,r9d
   140010eca:	lea    edx,[r9+0x30]
   140010ece:	call   QWORD PTR [rip+0x32b14]        # 0x1400439e8
   140010ed4:	test   rbx,rbx
   140010ed7:	mov    r8,rsi
   140010eda:	je     0x140010ee0
   140010edc:	mov    r8,QWORD PTR [rbx+0x8]
   140010ee0:	mov    rcx,QWORD PTR [rdi+0x3bf0]
   140010ee7:	xor    r9d,r9d
   140010eea:	lea    edx,[r9+0x30]
   140010eee:	call   QWORD PTR [rip+0x32af4]        # 0x1400439e8
   140010ef4:	lea    r11,[rdi+0x120]
   140010efb:	test   r11,r11
   140010efe:	je     0x140010f04
   140010f00:	mov    rsi,QWORD PTR [r11+0x8]
   140010f04:	mov    rcx,QWORD PTR [rdi+0x40]
   140010f08:	mov    r9d,0x1
   140010f0e:	mov    r8,rsi
   140010f11:	lea    edx,[r9+0x2f]
   140010f15:	call   QWORD PTR [rip+0x32acd]        # 0x1400439e8
   140010f1b:	mov    rcx,QWORD PTR [rdi+0x40]
   140010f1f:	xor    edx,edx
   140010f21:	lea    r8d,[rdx+0x1]
   140010f25:	mov    rbx,QWORD PTR [rsp+0x30]
   140010f2a:	mov    rsi,QWORD PTR [rsp+0x38]
   140010f2f:	add    rsp,0x20
   140010f33:	pop    rdi
   140010f34:	rex.W jmp QWORD PTR [rip+0x32995]        # 0x1400438d0
   140010f3b:	int3   
   140010f3c:	int3   
   140010f3d:	int3   
   140010f3e:	int3   
   140010f3f:	int3   
   140010f40:	rex push rdi
   140010f42:	push   r12
   140010f44:	push   r13
   140010f46:	sub    rsp,0x40
   140010f4a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140010f53:	mov    QWORD PTR [rsp+0x60],rbx
   140010f58:	mov    QWORD PTR [rsp+0x68],rbp
   140010f5d:	mov    QWORD PTR [rsp+0x78],rsi
   140010f62:	movzx  r12d,dx
   140010f66:	mov    rsi,rcx
   140010f69:	xor    r13d,r13d
   140010f6c:	mov    ebp,r13d
   140010f6f:	call   0x14002157c
   140010f74:	mov    rcx,rax
   140010f77:	mov    r8d,r13d
   140010f7a:	test   rax,rax
   140010f7d:	setne  r8b
   140010f81:	test   r8d,r8d
   140010f84:	jne    0x140010f91
   140010f86:	mov    ecx,0x80004005
   140010f8b:	call   0x140003dc0
   140010f90:	int3   
   140010f91:	mov    rax,QWORD PTR [rax]
   140010f94:	call   QWORD PTR [rax+0x18]
   140010f97:	add    rax,0x18
   140010f9b:	mov    QWORD PTR [rsp+0x70],rax
   140010fa0:	xor    r9d,r9d
   140010fa3:	xor    r8d,r8d
   140010fa6:	mov    edx,0x1309
   140010fab:	mov    rcx,QWORD PTR [rsi+0x3d40]
   140010fb2:	call   QWORD PTR [rip+0x32a30]        # 0x1400439e8
   140010fb8:	mov    rdi,QWORD PTR [rsi+0x3db0]
   140010fbf:	test   rdi,rdi
   140010fc2:	je     0x140011023
   140010fc4:	mov    rbx,rdi
   140010fc7:	test   rdi,rdi
   140010fca:	je     0x14001101d
   140010fcc:	mov    rdi,QWORD PTR [rdi]
   140010fcf:	mov    rbx,QWORD PTR [rbx+0x10]
   140010fd3:	mov    rax,QWORD PTR [rbx]
   140010fd6:	movzx  edx,r12w
   140010fda:	mov    rcx,rbx
   140010fdd:	call   QWORD PTR [rax+0x2c0]
   140010fe3:	lea    rdx,[rsp+0x70]
   140010fe8:	mov    rcx,rbx
   140010feb:	call   0x14001a584
   140010ff0:	lea    rcx,[rsi+0x3d00]
   140010ff7:	mov    QWORD PTR [rsp+0x28],r13
   140010ffc:	mov    DWORD PTR [rsp+0x20],r13d
   140011001:	mov    r9,QWORD PTR [rsp+0x70]
   140011006:	mov    r8d,ebp
   140011009:	mov    edx,0x1
   14001100e:	call   0x140021450
   140011013:	add    ebp,0x1
   140011016:	test   rdi,rdi
   140011019:	jne    0x140010fc4
   14001101b:	jmp    0x140011023
   14001101d:	call   0x1400218c0
   140011022:	nop
   140011023:	mov    rdx,QWORD PTR [rsp+0x70]
   140011028:	add    rdx,0xffffffffffffffe8
   14001102c:	or     eax,0xffffffff
   14001102f:	lock xadd DWORD PTR [rdx+0x10],eax
   140011034:	add    eax,0xffffffff
   140011037:	test   eax,eax
   140011039:	jg     0x140011044
   14001103b:	mov    rcx,QWORD PTR [rdx]
   14001103e:	mov    rax,QWORD PTR [rcx]
   140011041:	call   QWORD PTR [rax+0x8]
   140011044:	mov    rbx,QWORD PTR [rsp+0x60]
   140011049:	mov    rbp,QWORD PTR [rsp+0x68]
   14001104e:	mov    rsi,QWORD PTR [rsp+0x78]
   140011053:	add    rsp,0x40
   140011057:	pop    r13
   140011059:	pop    r12
   14001105b:	pop    rdi
   14001105c:	ret    
   14001105d:	int3   
   14001105e:	int3   
   14001105f:	int3   
   140011060:	rex push rbp
   140011062:	sub    rsp,0x20
   140011066:	mov    rbp,rdx
   140011069:	lea    rcx,[rbp+0x70]
   14001106d:	call   0x140003de0
   140011072:	add    rsp,0x20
   140011076:	pop    rbp
   140011077:	ret    
   140011078:	int3   
   140011079:	int3   
   14001107a:	int3   
   14001107b:	int3   
   14001107c:	int3   
   14001107d:	int3   
   14001107e:	int3   
   14001107f:	int3   
   140011080:	mov    QWORD PTR [rsp+0x18],rbx
   140011085:	push   rbp
   140011086:	push   rsi
   140011087:	push   rdi
   140011088:	push   r14
   14001108a:	push   r15
   14001108c:	sub    rsp,0xc0
   140011093:	lea    r14,[rcx+0x104]
   14001109a:	mov    rdi,rcx
   14001109d:	bt     DWORD PTR [r14],0xd
   1400110a2:	jae    0x1400110df
   1400110a4:	lea    rsi,[rcx+0x3da8]
   1400110ab:	lea    rdx,[rcx+0x2550]
   1400110b2:	mov    rcx,rsi
   1400110b5:	call   0x140023ff0
   1400110ba:	mov    rax,QWORD PTR [rdi+0x2550]
   1400110c1:	lea    rbp,[rdi+0x3d00]
   1400110c8:	lea    rcx,[rdi+0x2550]
   1400110cf:	mov    r8,rbp
   1400110d2:	mov    edx,0xa1
   1400110d7:	call   QWORD PTR [rax+0x268]
   1400110dd:	jmp    0x140011118
   1400110df:	lea    rsi,[rcx+0x3da8]
   1400110e6:	lea    rdx,[rcx+0x1570]
   1400110ed:	mov    rcx,rsi
   1400110f0:	call   0x140023ff0
   1400110f5:	mov    rax,QWORD PTR [rdi+0x1570]
   1400110fc:	lea    rbp,[rdi+0x3d00]
   140011103:	lea    rcx,[rdi+0x1570]
   14001110a:	mov    r8,rbp
   14001110d:	mov    edx,0xa0
   140011112:	call   QWORD PTR [rax+0x268]
   140011118:	bt     DWORD PTR [r14],0xb
   14001111d:	jae    0x14001114a
   14001111f:	mov    rax,QWORD PTR [rdi+0x1db8]
   140011126:	lea    rcx,[rdi+0x1db8]
   14001112d:	mov    r8,rbp
   140011130:	mov    edx,0x9c
   140011135:	call   QWORD PTR [rax+0x268]
   14001113b:	lea    rdx,[rdi+0x1db8]
   140011142:	mov    rcx,rsi
   140011145:	call   0x140023ff0
   14001114a:	bt     DWORD PTR [r14],0xd
   14001114f:	jb     0x14001117c
   140011151:	mov    rax,QWORD PTR [rdi+0x2268]
   140011158:	lea    rcx,[rdi+0x2268]
   14001115f:	mov    r8,rbp
   140011162:	mov    edx,0x9b
   140011167:	call   QWORD PTR [rax+0x268]
   14001116d:	lea    rdx,[rdi+0x2268]
   140011174:	mov    rcx,rsi
   140011177:	call   0x140023ff0
   14001117c:	mov    rcx,QWORD PTR [rdi+0x3d40]
   140011183:	lea    rdx,[rsp+0x70]
   140011188:	call   QWORD PTR [rip+0x32852]        # 0x1400439e0
   14001118e:	mov    rcx,QWORD PTR [rdi+0x3d40]
   140011195:	lea    r9,[rsp+0x60]
   14001119a:	xor    r8d,r8d
   14001119d:	mov    edx,0x130a
   1400111a2:	call   QWORD PTR [rip+0x32840]        # 0x1400439e8
   1400111a8:	lea    rdx,[rsp+0x60]
   1400111ad:	mov    rcx,rdi
   1400111b0:	call   0x140020a0c
   1400111b5:	lea    rdx,[rsp+0x60]
   1400111ba:	mov    rcx,rdi
   1400111bd:	call   0x1400209b4
   1400111c2:	test   rbp,rbp
   1400111c5:	je     0x1400111e3
   1400111c7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400111cb:	lea    rdx,[rsp+0x30]
   1400111d0:	call   QWORD PTR [rip+0x327ea]        # 0x1400439c0
   1400111d6:	lea    rdx,[rsp+0x30]
   1400111db:	mov    rcx,rdi
   1400111de:	call   0x1400209b4
   1400111e3:	movsd  xmm1,QWORD PTR [rip+0x4b99d]        # 0x14005cb88
   1400111eb:	xor    esi,esi
   1400111ed:	bt     DWORD PTR [r14],0xd
   1400111f2:	movsd  xmm0,xmm1
   1400111f6:	mulsd  xmm0,QWORD PTR [rip+0x3c3fa]        # 0x14004d5f8
   1400111fe:	cvttsd2si r15d,xmm0
   140011203:	jae    0x14001135f
   140011209:	mulsd  xmm1,QWORD PTR [rip+0x3c3df]        # 0x14004d5f0
   140011211:	mov    rcx,QWORD PTR [rdi+0x40]
   140011215:	mov    QWORD PTR [rsp+0xf0],r12
   14001121d:	lea    rdx,[rsp+0x50]
   140011222:	mov    QWORD PTR [rsp+0xf8],r13
   14001122a:	cvttsd2si r12d,xmm1
   14001122f:	call   QWORD PTR [rip+0x3278b]        # 0x1400439c0
   140011235:	mov    r11d,DWORD PTR [rsp+0x5c]
   14001123a:	mov    r8d,DWORD PTR [rsp+0x54]
   14001123f:	mov    r9d,DWORD PTR [rsp+0x58]
   140011244:	mov    edx,DWORD PTR [rsp+0x50]
   140011248:	add    r11d,r12d
   14001124b:	mov    DWORD PTR [rsp+0x5c],r11d
   140011250:	sub    r11d,r8d
   140011253:	mov    rcx,rdi
   140011256:	sub    r9d,edx
   140011259:	mov    DWORD PTR [rsp+0x28],esi
   14001125d:	mov    DWORD PTR [rsp+0x20],r11d
   140011262:	call   0x14002001c
   140011267:	mov    r11d,DWORD PTR [rsp+0x3c]
   14001126c:	mov    r8d,DWORD PTR [rsp+0x34]
   140011271:	mov    r9d,DWORD PTR [rsp+0x38]
   140011276:	mov    edx,DWORD PTR [rsp+0x30]
   14001127a:	add    r11d,r12d
   14001127d:	mov    DWORD PTR [rsp+0x3c],r11d
   140011282:	sub    r11d,r8d
   140011285:	mov    rcx,rbp
   140011288:	sub    r9d,edx
   14001128b:	mov    DWORD PTR [rsp+0x28],esi
   14001128f:	mov    DWORD PTR [rsp+0x20],r11d
   140011294:	call   0x14002001c
   140011299:	lea    rax,[rdi+0x3b08]
   1400112a0:	lea    r11,[rdi+0x3a60]
   1400112a7:	mov    QWORD PTR [rsp+0x88],rax
   1400112af:	lea    rax,[rdi+0x3bb0]
   1400112b6:	mov    QWORD PTR [rsp+0x80],r11
   1400112be:	mov    QWORD PTR [rsp+0x90],rax
   1400112c6:	lea    rax,[rdi+0x3c58]
   1400112cd:	lea    rbp,[rsp+0x80]
   1400112d5:	mov    QWORD PTR [rsp+0x98],rax
   1400112dd:	lea    r13d,[rsi+0x4]
   1400112e1:	mov    rbx,QWORD PTR [rbp+0x0]
   1400112e5:	test   rbx,rbx
   1400112e8:	je     0x140011306
   1400112ea:	mov    rcx,QWORD PTR [rbx+0x40]
   1400112ee:	lea    rdx,[rsp+0x40]
   1400112f3:	call   QWORD PTR [rip+0x326c7]        # 0x1400439c0
   1400112f9:	lea    rdx,[rsp+0x40]
   1400112fe:	mov    rcx,rdi
   140011301:	call   0x1400209b4
   140011306:	mov    eax,DWORD PTR [rsp+0x4c]
   14001130a:	mov    r8d,DWORD PTR [rsp+0x44]
   14001130f:	mov    r9d,DWORD PTR [rsp+0x48]
   140011314:	mov    edx,DWORD PTR [rsp+0x40]
   140011318:	add    eax,r12d
   14001131b:	add    r8d,r12d
   14001131e:	mov    DWORD PTR [rsp+0x4c],eax
   140011322:	sub    eax,r8d
   140011325:	mov    rcx,rbx
   140011328:	sub    r9d,edx
   14001132b:	mov    DWORD PTR [rsp+0x28],esi
   14001132f:	mov    DWORD PTR [rsp+0x44],r8d
   140011334:	mov    DWORD PTR [rsp+0x20],eax
   140011338:	call   0x14002001c
   14001133d:	add    rbp,0x8
   140011341:	sub    r13,0x1
   140011345:	jne    0x1400112e1
   140011347:	movsd  xmm1,QWORD PTR [rip+0x4b839]        # 0x14005cb88
   14001134f:	mov    r13,QWORD PTR [rsp+0xf8]
   140011357:	mov    r12,QWORD PTR [rsp+0xf0]
   14001135f:	mov    rbx,QWORD PTR [rdi+0x3db0]
   140011366:	test   rbx,rbx
   140011369:	je     0x14001146e
   14001136f:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   140011377:	movsd  xmm6,QWORD PTR [rip+0x3c269]        # 0x14004d5e8
   14001137f:	movaps XMMWORD PTR [rsp+0xa0],xmm7
   140011387:	movsd  xmm7,QWORD PTR [rip+0x3c251]        # 0x14004d5e0
   14001138f:	nop
   140011390:	test   rbx,rbx
   140011393:	mov    rbp,rbx
   140011396:	je     0x140011458
   14001139c:	mov    ecx,DWORD PTR [rsp+0x6c]
   1400113a0:	mov    r10d,DWORD PTR [rsp+0x64]
   1400113a5:	mov    r9d,DWORD PTR [rsp+0x38]
   1400113aa:	mulsd  xmm1,xmm6
   1400113ae:	mov    rbp,QWORD PTR [rbp+0x10]
   1400113b2:	mov    rbx,QWORD PTR [rbx]
   1400113b5:	cvttsd2si eax,xmm1
   1400113b9:	movsd  xmm1,QWORD PTR [rip+0x4b7bf]        # 0x14005cb80
   1400113c1:	sub    r10d,eax
   1400113c4:	movsd  xmm0,xmm1
   1400113c8:	lea    r8d,[rcx+r15*1]
   1400113cc:	cvttsd2si edx,xmm1
   1400113d0:	sub    r10d,DWORD PTR [rsp+0x34]
   1400113d5:	mov    DWORD PTR [rsp+0x28],0x1
   1400113dd:	mulsd  xmm0,xmm7
   1400113e1:	cvttsd2si eax,xmm0
   1400113e5:	sub    r10d,ecx
   1400113e8:	mov    rcx,rbp
   1400113eb:	add    r10d,DWORD PTR [rsp+0x3c]
   1400113f0:	sub    r9d,eax
   1400113f3:	sub    r9d,DWORD PTR [rsp+0x30]
   1400113f8:	mov    DWORD PTR [rsp+0x20],r10d
   1400113fd:	call   0x14002001c
   140011402:	mov    rax,QWORD PTR [rbp+0x0]
   140011406:	mov    rcx,rbp
   140011409:	mov    QWORD PTR [rbp+0xe8],r14
   140011410:	call   QWORD PTR [rax+0x2b8]
   140011416:	cmp    DWORD PTR [rdi+0x3de0],esi
   14001141c:	jne    0x140011443
   14001141e:	mov    edx,0x5
   140011423:	mov    rcx,rbp
   140011426:	call   0x140020064
   14001142b:	mov    rcx,QWORD PTR [rdi+0x3d40]
   140011432:	movsxd r8,esi
   140011435:	xor    r9d,r9d
   140011438:	mov    edx,0x130c
   14001143d:	call   QWORD PTR [rip+0x325a5]        # 0x1400439e8
   140011443:	add    esi,0x1
   140011446:	test   rbx,rbx
   140011449:	je     0x14001145e
   14001144b:	movsd  xmm1,QWORD PTR [rip+0x4b735]        # 0x14005cb88
   140011453:	jmp    0x140011390
   140011458:	call   0x1400218c0
   14001145d:	int3   
   14001145e:	movaps xmm6,XMMWORD PTR [rsp+0xb0]
   140011466:	movaps xmm7,XMMWORD PTR [rsp+0xa0]
   14001146e:	mov    rbx,QWORD PTR [rsp+0x100]
   140011476:	add    rsp,0xc0
   14001147d:	pop    r15
   14001147f:	pop    r14
   140011481:	pop    rdi
   140011482:	pop    rsi
   140011483:	pop    rbp
   140011484:	ret    
   140011485:	int3   
   140011486:	int3   
   140011487:	int3   
   140011488:	int3   
   140011489:	int3   
   14001148a:	int3   
   14001148b:	int3   
   14001148c:	int3   
   14001148d:	int3   
   14001148e:	int3   
   14001148f:	int3   
   140011490:	test   rdx,rdx
   140011493:	je     0x14001170e
   140011499:	push   rdi
   14001149a:	push   r12
   14001149c:	push   r13
   14001149e:	push   r14
   1400114a0:	push   r15
   1400114a2:	sub    rsp,0x30
   1400114a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400114af:	mov    QWORD PTR [rsp+0x60],rbx
   1400114b4:	mov    QWORD PTR [rsp+0x70],rbp
   1400114b9:	mov    QWORD PTR [rsp+0x78],rsi
   1400114be:	mov    r14d,r8d
   1400114c1:	mov    r13,rdx
   1400114c4:	mov    r15,rcx
   1400114c7:	call   0x14002157c
   1400114cc:	mov    rcx,rax
   1400114cf:	xor    ebx,ebx
   1400114d1:	mov    eax,ebx
   1400114d3:	test   rcx,rcx
   1400114d6:	setne  al
   1400114d9:	test   eax,eax
   1400114db:	jne    0x1400114e8
   1400114dd:	mov    ecx,0x80004005
   1400114e2:	call   0x140003dc0
   1400114e7:	int3   
   1400114e8:	mov    rax,QWORD PTR [rcx]
   1400114eb:	call   QWORD PTR [rax+0x18]
   1400114ee:	lea    rsi,[rax+0x18]
   1400114f2:	mov    QWORD PTR [rsp+0x68],rsi
   1400114f7:	lea    rdx,[rsi-0x18]
   1400114fb:	mov    rdi,QWORD PTR [rdx]
   1400114fe:	or     rbp,0xffffffffffffffff
   140011502:	cmp    DWORD PTR [rdx+0x8],0x0
   140011506:	je     0x140011552
   140011508:	cmp    DWORD PTR [rdx+0x10],0x0
   14001150c:	jge    0x140011529
   14001150e:	cmp    DWORD PTR [rsi-0xc],0x0
   140011512:	jge    0x14001151f
   140011514:	mov    ecx,0x80070057
   140011519:	call   0x140003dc0
   14001151e:	int3   
   14001151f:	mov    DWORD PTR [rsi-0x10],ebx
   140011522:	mov    WORD PTR [rsi],0x0
   140011527:	jmp    0x140011552
   140011529:	mov    eax,ebp
   14001152b:	lock xadd DWORD PTR [rdx+0x10],eax
   140011530:	add    eax,0xffffffff
   140011533:	test   eax,eax
   140011535:	jg     0x140011540
   140011537:	mov    rcx,QWORD PTR [rdx]
   14001153a:	mov    rax,QWORD PTR [rcx]
   14001153d:	call   QWORD PTR [rax+0x8]
   140011540:	mov    rax,QWORD PTR [rdi]
   140011543:	mov    rcx,rdi
   140011546:	call   QWORD PTR [rax+0x18]
   140011549:	lea    rsi,[rax+0x18]
   14001154d:	mov    QWORD PTR [rsp+0x68],rsi
   140011552:	xor    eax,eax
   140011554:	mov    rcx,rbp
   140011557:	lea    rdi,[rip+0x3934a]        # 0x14004a8a8
   14001155e:	repnz scas ax,WORD PTR es:[rdi]
   140011561:	not    rcx
   140011564:	sub    rcx,0x1
   140011568:	mov    rdi,rcx
   14001156b:	test   ecx,ecx
   14001156d:	jne    0x1400115cd
   14001156f:	lea    rdx,[rsi-0x18]
   140011573:	mov    rdi,QWORD PTR [rdx]
   140011576:	cmp    DWORD PTR [rdx+0x8],eax
   140011579:	je     0x140011655
   14001157f:	cmp    DWORD PTR [rdx+0x10],eax
   140011582:	jge    0x14001159f
   140011584:	cmp    DWORD PTR [rsi-0xc],eax
   140011587:	jge    0x140011594
   140011589:	mov    ecx,0x80070057
   14001158e:	call   0x140003dc0
   140011593:	int3   
   140011594:	mov    DWORD PTR [rsi-0x10],ebx
   140011597:	mov    WORD PTR [rsi],ax
   14001159a:	jmp    0x140011655
   14001159f:	mov    eax,ebp
   1400115a1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400115a6:	add    eax,0xffffffff
   1400115a9:	test   eax,eax
   1400115ab:	jg     0x1400115b6
   1400115ad:	mov    rcx,QWORD PTR [rdx]
   1400115b0:	mov    rax,QWORD PTR [rcx]
   1400115b3:	call   QWORD PTR [rax+0x8]
   1400115b6:	mov    rax,QWORD PTR [rdi]
   1400115b9:	mov    rcx,rdi
   1400115bc:	call   QWORD PTR [rax+0x18]
   1400115bf:	add    rax,0x18
   1400115c3:	mov    QWORD PTR [rsp+0x68],rax
   1400115c8:	jmp    0x140011655
   1400115cd:	mov    ebx,DWORD PTR [rsi-0x10]
   1400115d0:	lea    r12,[rip+0x392d1]        # 0x14004a8a8
   1400115d7:	sub    r12,rsi
   1400115da:	sar    r12,1
   1400115dd:	mov    ecx,0x1
   1400115e2:	sub    ecx,DWORD PTR [rsi-0x8]
   1400115e5:	mov    eax,DWORD PTR [rsi-0xc]
   1400115e8:	sub    eax,edi
   1400115ea:	or     eax,ecx
   1400115ec:	jge    0x1400115ff
   1400115ee:	mov    edx,edi
   1400115f0:	lea    rcx,[rsp+0x68]
   1400115f5:	call   0x140004370
   1400115fa:	mov    rsi,QWORD PTR [rsp+0x68]
   1400115ff:	cmp    r12,rbx
   140011602:	ja     0x14001161f
   140011604:	movsxd rax,edi
   140011607:	lea    rbx,[rax+rax*1]
   14001160b:	lea    r8,[rsi+r12*2]
   14001160f:	mov    r9,rbx
   140011612:	mov    rdx,rbx
   140011615:	mov    rcx,rsi
   140011618:	call   0x140029b60
   14001161d:	jmp    0x14001163b
   14001161f:	movsxd rax,edi
   140011622:	lea    rbx,[rax+rax*1]
   140011626:	mov    r9,rbx
   140011629:	lea    r8,[rip+0x39278]        # 0x14004a8a8
   140011630:	mov    rdx,rbx
   140011633:	mov    rcx,rsi
   140011636:	call   0x140029bf0
   14001163b:	test   edi,edi
   14001163d:	js     0x1400116e7
   140011643:	cmp    edi,DWORD PTR [rsi-0xc]
   140011646:	jg     0x1400116e7
   14001164c:	mov    DWORD PTR [rsi-0x10],edi
   14001164f:	mov    WORD PTR [rbx+rsi*1],0x0
   140011655:	call   0x14001f2e8
   14001165a:	movzx  r9d,WORD PTR [r15+0x11c]
   140011662:	mov    r8d,r14d
   140011665:	mov    rdx,QWORD PTR [rax+0x10]
   140011669:	lea    rcx,[rsp+0x68]
   14001166e:	call   0x140006d10
   140011673:	xor    r11d,r11d
   140011676:	lea    rdi,[rip+0x3922b]        # 0x14004a8a8
   14001167d:	mov    rbx,QWORD PTR [rsp+0x68]
   140011682:	mov    rsi,rbx
   140011685:	mov    ecx,0x1
   14001168a:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14001168d:	je     0x140011696
   14001168f:	sbb    r11d,r11d
   140011692:	sbb    r11d,0xffffffff
   140011696:	test   r11d,r11d
   140011699:	sete   al
   14001169c:	test   al,al
   14001169e:	je     0x1400116c0
   1400116a0:	call   0x14001f2e8
   1400116a5:	mov    r9w,0x409
   1400116aa:	mov    r8d,r14d
   1400116ad:	mov    rdx,QWORD PTR [rax+0x10]
   1400116b1:	lea    rcx,[rsp+0x68]
   1400116b6:	call   0x140006d10
   1400116bb:	mov    rbx,QWORD PTR [rsp+0x68]
   1400116c0:	mov    rdx,rbx
   1400116c3:	mov    rcx,r13
   1400116c6:	call   0x14001ffac
   1400116cb:	nop
   1400116cc:	lea    rdx,[rbx-0x18]
   1400116d0:	lock xadd DWORD PTR [rdx+0x10],ebp
   1400116d5:	add    ebp,0xffffffff
   1400116d8:	test   ebp,ebp
   1400116da:	jg     0x1400116f2
   1400116dc:	mov    rcx,QWORD PTR [rdx]
   1400116df:	mov    rax,QWORD PTR [rcx]
   1400116e2:	call   QWORD PTR [rax+0x8]
   1400116e5:	jmp    0x1400116f2
   1400116e7:	mov    ecx,0x80070057
   1400116ec:	call   0x140003dc0
   1400116f1:	nop
   1400116f2:	mov    rbx,QWORD PTR [rsp+0x60]
   1400116f7:	mov    rbp,QWORD PTR [rsp+0x70]
   1400116fc:	mov    rsi,QWORD PTR [rsp+0x78]
   140011701:	add    rsp,0x30
   140011705:	pop    r15
   140011707:	pop    r14
   140011709:	pop    r13
   14001170b:	pop    r12
   14001170d:	pop    rdi
   14001170e:	ret    0x0
   140011711:	int3   
   140011712:	int3   
   140011713:	int3   
   140011714:	int3   
   140011715:	int3   
   140011716:	int3   
   140011717:	int3   
   140011718:	int3   
   140011719:	int3   
   14001171a:	int3   
   14001171b:	int3   
   14001171c:	int3   
   14001171d:	int3   
   14001171e:	int3   
   14001171f:	int3   
   140011720:	rex push rbp
   140011722:	sub    rsp,0x20
   140011726:	mov    rbp,rdx
   140011729:	lea    rcx,[rbp+0x68]
   14001172d:	call   0x140003de0
   140011732:	add    rsp,0x20
   140011736:	pop    rbp
   140011737:	ret    
   140011738:	int3   
   140011739:	int3   
   14001173a:	int3   
   14001173b:	int3   
   14001173c:	int3   
   14001173d:	int3   
   14001173e:	int3   
   14001173f:	int3   
   140011740:	rex push rsi
   140011742:	sub    rsp,0xb0
   140011749:	mov    rax,QWORD PTR [rip+0x49830]        # 0x14005af80
   140011750:	xor    rax,rsp
   140011753:	mov    QWORD PTR [rsp+0xa0],rax
   14001175b:	mov    rsi,rcx
   14001175e:	mov    rcx,QWORD PTR [rcx+0x40]
   140011762:	call   QWORD PTR [rip+0x32148]        # 0x1400438b0
   140011768:	test   eax,eax
   14001176a:	je     0x140011823
   140011770:	lea    rcx,[rsp+0x30]
   140011775:	mov    rdx,rsi
   140011778:	mov    QWORD PTR [rsp+0xc8],rbx
   140011780:	mov    QWORD PTR [rsp+0xd0],rdi
   140011788:	call   0x140020ddc
   14001178d:	mov    r8,QWORD PTR [rsp+0x38]
   140011792:	mov    rcx,QWORD PTR [rsi+0x40]
   140011796:	xor    r9d,r9d
   140011799:	lea    edx,[r9+0x27]
   14001179d:	call   QWORD PTR [rip+0x32245]        # 0x1400439e8
   1400117a3:	mov    ecx,0xb
   1400117a8:	call   QWORD PTR [rip+0x321aa]        # 0x140043958
   1400117ae:	mov    ecx,0xc
   1400117b3:	mov    edi,eax
   1400117b5:	call   QWORD PTR [rip+0x3219d]        # 0x140043958
   1400117bb:	mov    rcx,QWORD PTR [rsi+0x40]
   1400117bf:	lea    rdx,[rsp+0x20]
   1400117c4:	mov    ebx,eax
   1400117c6:	call   QWORD PTR [rip+0x32214]        # 0x1400439e0
   1400117cc:	mov    eax,DWORD PTR [rsp+0x2c]
   1400117d0:	mov    r9,QWORD PTR [rsi+0x148]
   1400117d7:	sub    eax,DWORD PTR [rsp+0x24]
   1400117db:	mov    rcx,QWORD PTR [rsp+0x38]
   1400117e0:	sub    eax,ebx
   1400117e2:	add    eax,0x1
   1400117e5:	cdq    
   1400117e6:	sub    eax,edx
   1400117e8:	sar    eax,1
   1400117ea:	mov    r8d,eax
   1400117ed:	mov    eax,DWORD PTR [rsp+0x28]
   1400117f1:	sub    eax,DWORD PTR [rsp+0x20]
   1400117f5:	sub    eax,edi
   1400117f7:	add    eax,0x1
   1400117fa:	cdq    
   1400117fb:	sub    eax,edx
   1400117fd:	sar    eax,1
   1400117ff:	mov    edx,eax
   140011801:	call   QWORD PTR [rip+0x32141]        # 0x140043948
   140011807:	lea    rcx,[rsp+0x30]
   14001180c:	call   0x140020e54
   140011811:	mov    rdi,QWORD PTR [rsp+0xd0]
   140011819:	mov    rbx,QWORD PTR [rsp+0xc8]
   140011821:	jmp    0x14001182b
   140011823:	mov    rcx,rsi
   140011826:	call   0x14001d304
   14001182b:	mov    rcx,QWORD PTR [rsp+0xa0]
   140011833:	xor    rcx,rsp
   140011836:	call   0x140029b40
   14001183b:	add    rsp,0xb0
   140011842:	pop    rsi
   140011843:	ret    
   140011844:	int3   
   140011845:	int3   
   140011846:	int3   
   140011847:	int3   
   140011848:	int3   
   140011849:	int3   
   14001184a:	int3   
   14001184b:	int3   
   14001184c:	int3   
   14001184d:	int3   
   14001184e:	int3   
   14001184f:	int3   
   140011850:	mov    rax,QWORD PTR [rcx+0x148]
   140011857:	ret    
   140011858:	int3   
   140011859:	int3   
   14001185a:	int3   
   14001185b:	int3   
   14001185c:	int3   
   14001185d:	int3   
   14001185e:	int3   
   14001185f:	int3   
   140011860:	rex push rbx
   140011862:	sub    rsp,0x20
   140011866:	sub    rdx,0x3ec
   14001186d:	mov    rbx,rcx
   140011870:	je     0x140011909
   140011876:	cmp    rdx,0x1
   14001187a:	jne    0x14001197a
   140011880:	mov    rcx,QWORD PTR [rcx+0x40]
   140011884:	mov    edx,0x3ed
   140011889:	call   QWORD PTR [rip+0x320b1]        # 0x140043940
   14001188f:	cmp    DWORD PTR [rbx+0xf8],0x0
   140011896:	jne    0x140011982
   14001189c:	mov    rcx,rbx
   14001189f:	call   0x140010710
   1400118a4:	test   eax,eax
   1400118a6:	jne    0x1400118e1
   1400118a8:	add    DWORD PTR [rbx+0x158],0x1
   1400118af:	cmp    DWORD PTR [rbx+0x158],0xa
   1400118b6:	ja     0x14001197a
   1400118bc:	mov    rcx,QWORD PTR [rbx+0x40]
   1400118c0:	xor    r9d,r9d
   1400118c3:	mov    edx,0x3ed
   1400118c8:	mov    r8d,0x1388
   1400118ce:	call   QWORD PTR [rip+0x32064]        # 0x140043938
   1400118d4:	mov    rcx,rbx
   1400118d7:	add    rsp,0x20
   1400118db:	pop    rbx
   1400118dc:	jmp    0x140018d54
   1400118e1:	xor    eax,eax
   1400118e3:	xor    r8d,r8d
   1400118e6:	xor    edx,edx
   1400118e8:	mov    rcx,rbx
   1400118eb:	mov    DWORD PTR [rbx+0xfc],eax
   1400118f1:	mov    DWORD PTR [rbx+0x158],eax
   1400118f7:	call   0x140012020
   1400118fc:	mov    rcx,rbx
   1400118ff:	add    rsp,0x20
   140011903:	pop    rbx
   140011904:	jmp    0x140018d54
   140011909:	add    rcx,0x160
   140011910:	call   0x14000a500
   140011915:	test   eax,eax
   140011917:	je     0x14001197a
   140011919:	mov    rcx,QWORD PTR [rbx+0x40]
   14001191d:	mov    edx,0x3ec
   140011922:	call   QWORD PTR [rip+0x32018]        # 0x140043940
   140011928:	mov    rcx,QWORD PTR [rbx+0x1568]
   14001192f:	xor    r9d,r9d
   140011932:	mov    rcx,QWORD PTR [rcx+0x40]
   140011936:	lea    edx,[r9+0x10]
   14001193a:	xor    r8d,r8d
   14001193d:	call   QWORD PTR [rip+0x320b5]        # 0x1400439f8
   140011943:	mov    rax,QWORD PTR [rbx+0x3a50]
   14001194a:	test   rax,rax
   14001194d:	je     0x14001197a
   14001194f:	mov    rcx,QWORD PTR [rbx+0x39d0]
   140011956:	test   rcx,rcx
   140011959:	je     0x14001197a
   14001195b:	bt     DWORD PTR [rax],0x8
   14001195f:	jae    0x14001197a
   140011961:	mov    r8,QWORD PTR [rbx+0x3a00]
   140011968:	mov    rdx,QWORD PTR [rbx+0x39f8]
   14001196f:	mov    r9d,0x4
   140011975:	call   0x140014770
   14001197a:	mov    rcx,rbx
   14001197d:	call   0x140018d54
   140011982:	add    rsp,0x20
   140011986:	pop    rbx
   140011987:	ret    
   140011988:	int3   
   140011989:	int3   
   14001198a:	int3   
   14001198b:	int3   
   14001198c:	int3   
   14001198d:	int3   
   14001198e:	int3   
   14001198f:	int3   
   140011990:	rex push rbx
   140011992:	sub    rsp,0x20
   140011996:	mov    rbx,rcx
   140011999:	call   0x140018cec
   14001199e:	cmp    QWORD PTR [rax+0x18],0x9502
   1400119a6:	jne    0x1400119d1
   1400119a8:	mov    rcx,QWORD PTR [rbx+0x150]
   1400119af:	test   rcx,rcx
   1400119b2:	je     0x1400119ba
   1400119b4:	call   QWORD PTR [rip+0x31f96]        # 0x140043950
   1400119ba:	mov    rcx,rbx
   1400119bd:	call   0x140018d54
   1400119c2:	mov    r11,QWORD PTR [rbx]
   1400119c5:	mov    rcx,rbx
   1400119c8:	call   QWORD PTR [r11+0xc0]
   1400119cf:	jmp    0x1400119fd
   1400119d1:	lea    rcx,[rbx+0x3b08]
   1400119d8:	xor    edx,edx
   1400119da:	call   0x1400200c4
   1400119df:	xor    edx,edx
   1400119e1:	mov    rcx,rbx
   1400119e4:	mov    DWORD PTR [rbx+0xf4],0x0
   1400119ee:	call   0x140018578
   1400119f3:	xor    edx,edx
   1400119f5:	mov    rcx,rbx
   1400119f8:	call   0x140020064
   1400119fd:	mov    rcx,QWORD PTR [rbx+0x1568]
   140011a04:	test   rcx,rcx
   140011a07:	je     0x140011a3f
   140011a09:	mov    rcx,QWORD PTR [rcx+0x40]
   140011a0d:	xor    r9d,r9d
   140011a10:	xor    r8d,r8d
   140011a13:	lea    edx,[r9+0x10]
   140011a17:	call   QWORD PTR [rip+0x31fdb]        # 0x1400439f8
   140011a1d:	mov    rcx,QWORD PTR [rbx+0x1568]
   140011a24:	test   rcx,rcx
   140011a27:	je     0x140011a3f
   140011a29:	mov    rax,QWORD PTR [rcx]
   140011a2c:	mov    edx,0x1
   140011a31:	call   QWORD PTR [rax+0x8]
   140011a34:	mov    QWORD PTR [rbx+0x1568],0x0
   140011a3f:	add    rsp,0x20
   140011a43:	pop    rbx
   140011a44:	ret    
   140011a45:	int3   
   140011a46:	int3   
   140011a47:	int3   
   140011a48:	int3   
   140011a49:	int3   
   140011a4a:	int3   
   140011a4b:	int3   
   140011a4c:	int3   
   140011a4d:	int3   
   140011a4e:	int3   
   140011a4f:	int3   
   140011a50:	rex push rbx
   140011a52:	sub    rsp,0x20
   140011a56:	cmp    edx,0x8000
   140011a5c:	mov    rbx,rcx
   140011a5f:	jne    0x140011a95
   140011a61:	cmp    DWORD PTR [rcx+0xf8],0x0
   140011a68:	jne    0x140011a95
   140011a6a:	cmp    DWORD PTR [rcx+0xfc],0x0
   140011a71:	jne    0x140011a95
   140011a73:	mov    rcx,QWORD PTR [rcx+0x40]
   140011a77:	xor    r9d,r9d
   140011a7a:	mov    edx,0x3ed
   140011a7f:	mov    r8d,0x1388
   140011a85:	call   QWORD PTR [rip+0x31ead]        # 0x140043938
   140011a8b:	mov    DWORD PTR [rbx+0xfc],0x1
   140011a95:	xor    eax,eax
   140011a97:	add    rsp,0x20
   140011a9b:	pop    rbx
   140011a9c:	ret    
   140011a9d:	int3   
   140011a9e:	int3   
   140011a9f:	int3   
   140011aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140011aa5:	mov    QWORD PTR [rsp+0x10],rbp
   140011aaa:	mov    QWORD PTR [rsp+0x18],rsi
   140011aaf:	mov    QWORD PTR [rsp+0x20],rdi
   140011ab4:	push   r12
   140011ab6:	sub    rsp,0x60
   140011aba:	lea    rax,[rcx+0x3d00]
   140011ac1:	xor    r12d,r12d
   140011ac4:	mov    rdi,rdx
   140011ac7:	test   rax,rax
   140011aca:	mov    rbx,rcx
   140011acd:	jne    0x140011ad6
   140011acf:	mov    QWORD PTR [rsp+0x40],r12
   140011ad4:	jmp    0x140011adf
   140011ad6:	mov    rax,QWORD PTR [rax+0x40]
   140011ada:	mov    QWORD PTR [rsp+0x40],rax
   140011adf:	mov    rcx,QWORD PTR [rcx+0x40]
   140011ae3:	mov    QWORD PTR [rsp+0x48],rdx
   140011ae8:	mov    r8,rdx
   140011aeb:	lea    r9,[rsp+0x40]
   140011af0:	mov    edx,0x4e
   140011af5:	mov    DWORD PTR [rsp+0x50],0xfffffdd8
   140011afd:	call   QWORD PTR [rip+0x31ee5]        # 0x1400439e8
   140011b03:	test   rax,rax
   140011b06:	js     0x140011b41
   140011b08:	mov    rcx,QWORD PTR [rbx+0x3d40]
   140011b0f:	movsxd r8,edi
   140011b12:	xor    r9d,r9d
   140011b15:	mov    edx,0x130c
   140011b1a:	call   QWORD PTR [rip+0x31ec8]        # 0x1400439e8
   140011b20:	mov    r8,QWORD PTR [rsp+0x48]
   140011b25:	mov    rcx,QWORD PTR [rbx+0x40]
   140011b29:	lea    r9,[rsp+0x40]
   140011b2e:	mov    edx,0x4e
   140011b33:	mov    DWORD PTR [rsp+0x50],0xfffffdd9
   140011b3b:	call   QWORD PTR [rip+0x31ea7]        # 0x1400439e8
   140011b41:	xor    edx,edx
   140011b43:	mov    rcx,rbx
   140011b46:	mov    DWORD PTR [rbx+0xf4],0x1
   140011b50:	call   0x140018578
   140011b55:	mov    edx,0x1
   140011b5a:	mov    rcx,rbx
   140011b5d:	call   0x140020064
   140011b62:	mov    rbp,QWORD PTR [rbx+0x40]
   140011b66:	mov    edx,0xfffffff0
   140011b6b:	mov    rcx,rbp
   140011b6e:	call   QWORD PTR [rip+0x31dac]        # 0x140043920
   140011b74:	bt     eax,0x1d
   140011b78:	jae    0x140011b91
   140011b7a:	mov    edx,0x5
   140011b7f:	mov    rcx,rbp
   140011b82:	call   QWORD PTR [rip+0x31d90]        # 0x140043918
   140011b88:	mov    rcx,rbp
   140011b8b:	call   QWORD PTR [rip+0x31d7f]        # 0x140043910
   140011b91:	call   QWORD PTR [rip+0x31d69]        # 0x140043900
   140011b97:	xor    edx,edx
   140011b99:	mov    rcx,rax
   140011b9c:	call   QWORD PTR [rip+0x31d66]        # 0x140043908
   140011ba2:	mov    edi,eax
   140011ba4:	call   QWORD PTR [rip+0x31916]        # 0x1400434c0
   140011baa:	cmp    edi,eax
   140011bac:	mov    esi,eax
   140011bae:	je     0x140011bc0
   140011bb0:	mov    r8d,0x1
   140011bb6:	mov    edx,eax
   140011bb8:	mov    ecx,edi
   140011bba:	call   QWORD PTR [rip+0x31d38]        # 0x1400438f8
   140011bc0:	mov    rcx,rbp
   140011bc3:	call   QWORD PTR [rip+0x31d97]        # 0x140043960
   140011bc9:	cmp    edi,esi
   140011bcb:	je     0x140011bda
   140011bcd:	xor    r8d,r8d
   140011bd0:	mov    edx,esi
   140011bd2:	mov    ecx,edi
   140011bd4:	call   QWORD PTR [rip+0x31d1e]        # 0x1400438f8
   140011bda:	xor    edx,edx
   140011bdc:	mov    rcx,rbp
   140011bdf:	lea    r8d,[rdx+0x1]
   140011be3:	call   QWORD PTR [rip+0x31ce7]        # 0x1400438d0
   140011be9:	mov    DWORD PTR [rsp+0x30],0xb
   140011bf1:	lea    rdx,[rip+0x4e898]        # 0x140060490
   140011bf8:	xor    r9d,r9d
   140011bfb:	xor    r8d,r8d
   140011bfe:	mov    rcx,rbx
   140011c01:	mov    DWORD PTR [rsp+0x28],r12d
   140011c06:	mov    DWORD PTR [rsp+0x20],r12d
   140011c0b:	call   0x140020160
   140011c10:	mov    DWORD PTR [rsp+0x30],0x3
   140011c18:	lea    rdx,[rip+0x4e921]        # 0x140060540
   140011c1f:	xor    r9d,r9d
   140011c22:	xor    r8d,r8d
   140011c25:	mov    rcx,rbx
   140011c28:	mov    DWORD PTR [rsp+0x28],r12d
   140011c2d:	mov    DWORD PTR [rsp+0x20],r12d
   140011c32:	call   0x140020160
   140011c37:	mov    rcx,QWORD PTR [rbx+0x40]
   140011c3b:	call   QWORD PTR [rip+0x31c67]        # 0x1400438a8
   140011c41:	mov    rcx,rax
   140011c44:	call   0x140018e70
   140011c49:	mov    rcx,rbx
   140011c4c:	call   0x1400200f4
   140011c51:	lea    r11,[rsp+0x60]
   140011c56:	xor    eax,eax
   140011c58:	mov    rbx,QWORD PTR [r11+0x10]
   140011c5c:	mov    rbp,QWORD PTR [r11+0x18]
   140011c60:	mov    rsi,QWORD PTR [r11+0x20]
   140011c64:	mov    rdi,QWORD PTR [r11+0x28]
   140011c68:	mov    rsp,r11
   140011c6b:	pop    r12
   140011c6d:	ret    
   140011c6e:	int3   
   140011c6f:	int3   
   140011c70:	rex push rbx
   140011c72:	push   rbp
   140011c73:	push   rdi
   140011c74:	push   r12
   140011c76:	push   r13
   140011c78:	sub    rsp,0x30
   140011c7c:	mov    rax,QWORD PTR [rip+0x492fd]        # 0x14005af80
   140011c83:	xor    rax,rsp
   140011c86:	mov    QWORD PTR [rsp+0x20],rax
   140011c8b:	cmp    rdx,0xf
   140011c8f:	mov    rdi,rcx
   140011c92:	ja     0x140011dd5
   140011c98:	mov    rax,rdx
   140011c9b:	add    rcx,0x160
   140011ca2:	imul   rax,rax,0x9c
   140011ca9:	mov    ebx,DWORD PTR [rax+rcx*1+0xa4]
   140011cb0:	call   0x140008470
   140011cb5:	mov    r13d,DWORD PTR [rdi+0x174]
   140011cbc:	cmp    ebx,r13d
   140011cbf:	jne    0x140011f19
   140011cc5:	xor    ebp,ebp
   140011cc7:	mov    QWORD PTR [rsp+0x70],rsi
   140011ccc:	cmp    DWORD PTR [rdi+0x160],ebp
   140011cd2:	mov    esi,ebp
   140011cd4:	jbe    0x140011d13
   140011cd6:	lea    rbx,[rdi+0x188]
   140011cdd:	data16 xchg ax,ax
   140011ce0:	cmp    DWORD PTR [rbx+0x7c],r13d
   140011ce4:	jne    0x140011d01
   140011ce6:	lea    rcx,[rdi+0x160]
   140011ced:	mov    edx,esi
   140011cef:	call   0x140008470
   140011cf4:	mov    r11b,BYTE PTR [rbx]
   140011cf7:	shr    r11d,1
   140011cfa:	and    r11d,0x1
   140011cfe:	mov    ebp,r11d
   140011d01:	add    esi,0x1
   140011d04:	add    rbx,0x9c
   140011d0b:	cmp    esi,DWORD PTR [rdi+0x160]
   140011d11:	jb     0x140011ce0
   140011d13:	and    DWORD PTR [rdi+0x104],0xffffffef
   140011d1a:	and    ebp,0x1
   140011d1d:	mov    rcx,rdi
   140011d20:	shl    ebp,0x4
   140011d23:	or     DWORD PTR [rdi+0x104],ebp
   140011d29:	call   0x140011f40
   140011d2e:	xor    r8d,r8d
   140011d31:	xor    edx,edx
   140011d33:	mov    rcx,rdi
   140011d36:	call   0x140012020
   140011d3b:	test   BYTE PTR [rdi+0x104],0x10
   140011d42:	mov    rsi,QWORD PTR [rsp+0x70]
   140011d47:	je     0x140011da1
   140011d49:	mov    rax,QWORD PTR [rdi+0x3a50]
   140011d50:	test   rax,rax
   140011d53:	je     0x140011d80
   140011d55:	mov    rcx,QWORD PTR [rdi+0x39d0]
   140011d5c:	test   rcx,rcx
   140011d5f:	je     0x140011d80
   140011d61:	bt     DWORD PTR [rax],0x8
   140011d65:	jae    0x140011d80
   140011d67:	mov    r8,QWORD PTR [rdi+0x3a00]
   140011d6e:	mov    rdx,QWORD PTR [rdi+0x39f8]
   140011d75:	mov    r9d,0x4
   140011d7b:	call   0x140014770
   140011d80:	lea    rcx,[rdi+0x160]
   140011d87:	call   0x14000a500
   140011d8c:	test   eax,eax
   140011d8e:	jne    0x140011f19
   140011d94:	mov    rcx,rdi
   140011d97:	call   0x140012430
   140011d9c:	jmp    0x140011f19
   140011da1:	mov    rax,QWORD PTR [rdi+0x3a50]
   140011da8:	test   rax,rax
   140011dab:	je     0x140011f19
   140011db1:	mov    rcx,QWORD PTR [rdi+0x39d0]
   140011db8:	test   rcx,rcx
   140011dbb:	je     0x140011f19
   140011dc1:	bt     DWORD PTR [rax],0x8
   140011dc5:	jae    0x140011f19
   140011dcb:	call   0x140014820
   140011dd0:	jmp    0x140011f19
   140011dd5:	cmp    rdx,0x11
   140011dd9:	jne    0x140011ebd
   140011ddf:	call   0x140018cec
   140011de4:	xor    ebp,ebp
   140011de6:	cmp    QWORD PTR [rax+0x18],0x9502
   140011dee:	jne    0x140011e19
   140011df0:	mov    rcx,QWORD PTR [rdi+0x150]
   140011df7:	test   rcx,rcx
   140011dfa:	je     0x140011e02
   140011dfc:	call   QWORD PTR [rip+0x31b4e]        # 0x140043950
   140011e02:	mov    rcx,rdi
   140011e05:	call   0x140018d54
   140011e0a:	mov    r11,QWORD PTR [rdi]
   140011e0d:	mov    rcx,rdi
   140011e10:	call   QWORD PTR [r11+0xc0]
   140011e17:	jmp    0x140011e41
   140011e19:	lea    rcx,[rdi+0x3b08]
   140011e20:	xor    edx,edx
   140011e22:	call   0x1400200c4
   140011e27:	xor    edx,edx
   140011e29:	mov    rcx,rdi
   140011e2c:	mov    DWORD PTR [rdi+0xf4],ebp
   140011e32:	call   0x140018578
   140011e37:	xor    edx,edx
   140011e39:	mov    rcx,rdi
   140011e3c:	call   0x140020064
   140011e41:	mov    rcx,QWORD PTR [rdi+0x1568]
   140011e48:	test   rcx,rcx
   140011e4b:	je     0x140011e7f
   140011e4d:	mov    rcx,QWORD PTR [rcx+0x40]
   140011e51:	xor    r9d,r9d
   140011e54:	xor    r8d,r8d
   140011e57:	lea    edx,[r9+0x10]
   140011e5b:	call   QWORD PTR [rip+0x31b97]        # 0x1400439f8
   140011e61:	mov    rcx,QWORD PTR [rdi+0x1568]
   140011e68:	test   rcx,rcx
   140011e6b:	je     0x140011e7f
   140011e6d:	mov    rax,QWORD PTR [rcx]
   140011e70:	mov    edx,0x1
   140011e75:	call   QWORD PTR [rax+0x8]
   140011e78:	mov    QWORD PTR [rdi+0x1568],rbp
   140011e7f:	mov    rcx,QWORD PTR [rdi+0x3968]
   140011e86:	mov    edx,0x3ee
   140011e8b:	call   QWORD PTR [rip+0x31aaf]        # 0x140043940
   140011e91:	mov    rcx,QWORD PTR [rdi+0x39d0]
   140011e98:	test   rcx,rcx
   140011e9b:	je     0x140011eaf
   140011e9d:	mov    rax,QWORD PTR [rcx]
   140011ea0:	mov    edx,0x1
   140011ea5:	call   QWORD PTR [rax+0x8]
   140011ea8:	mov    QWORD PTR [rdi+0x39d0],rbp
   140011eaf:	mov    DWORD PTR [rdi+0xf8],ebp
   140011eb5:	mov    DWORD PTR [rdi+0xfc],ebp
   140011ebb:	jmp    0x140011f19
   140011ebd:	cmp    rdx,0x1f
   140011ec1:	je     0x140011f07
   140011ec3:	cmp    rdx,0x20
   140011ec7:	je     0x140011f07
   140011ec9:	cmp    rdx,0x21
   140011ecd:	jne    0x140011f19
   140011ecf:	and    DWORD PTR [rcx+0x104],0xfffffdff
   140011ed9:	bt     DWORD PTR [rcx+0x104],0xd
   140011ee1:	jae    0x140011ef5
   140011ee3:	add    rcx,0x2550
   140011eea:	mov    rax,QWORD PTR [rcx]
   140011eed:	call   QWORD PTR [rax+0x2b8]
   140011ef3:	jmp    0x140011f19
   140011ef5:	add    rcx,0x1570
   140011efc:	mov    rax,QWORD PTR [rcx]
   140011eff:	call   QWORD PTR [rax+0x2b8]
   140011f05:	jmp    0x140011f19
   140011f07:	call   0x140011f40
   140011f0c:	xor    r8d,r8d
   140011f0f:	xor    edx,edx
   140011f11:	mov    rcx,rdi
   140011f14:	call   0x140012020
   140011f19:	xor    eax,eax
   140011f1b:	mov    rcx,QWORD PTR [rsp+0x20]
   140011f20:	xor    rcx,rsp
   140011f23:	call   0x140029b40
   140011f28:	add    rsp,0x30
   140011f2c:	pop    r13
   140011f2e:	pop    r12
   140011f30:	pop    rdi
   140011f31:	pop    rbp
   140011f32:	pop    rbx
   140011f33:	ret    
   140011f34:	int3   
   140011f35:	int3   
   140011f36:	int3   
   140011f37:	int3   
   140011f38:	int3   
   140011f39:	int3   
   140011f3a:	int3   
   140011f3b:	int3   
   140011f3c:	int3   
   140011f3d:	int3   
   140011f3e:	int3   
   140011f3f:	int3   
   140011f40:	mov    QWORD PTR [rsp+0x8],rbx
   140011f45:	push   rdi
   140011f46:	sub    rsp,0x20
   140011f4a:	mov    rdi,rcx
   140011f4d:	add    rcx,0x160
   140011f54:	call   0x14000a500
   140011f59:	and    DWORD PTR [rdi+0x104],0xffffffbf
   140011f60:	lea    rcx,[rdi+0x160]
   140011f67:	and    eax,0x1
   140011f6a:	shl    eax,0x6
   140011f6d:	or     DWORD PTR [rdi+0x104],eax
   140011f73:	call   0x140009ac0
   140011f78:	and    DWORD PTR [rdi+0x104],0xfffffbff
   140011f82:	and    eax,0x1
   140011f85:	lea    rcx,[rdi+0x160]
   140011f8c:	shl    eax,0xa
   140011f8f:	or     DWORD PTR [rdi+0x104],eax
   140011f95:	call   0x140008ad0
   140011f9a:	and    DWORD PTR [rdi+0x104],0xffffffdf
   140011fa1:	and    eax,0x1
   140011fa4:	lea    rcx,[rdi+0x160]
   140011fab:	shl    eax,0x5
   140011fae:	or     DWORD PTR [rdi+0x104],eax
   140011fb4:	call   0x140009cb0
   140011fb9:	and    DWORD PTR [rdi+0x104],0xfffff7ff
   140011fc3:	and    eax,0x1
   140011fc6:	lea    rcx,[rdi+0x160]
   140011fcd:	shl    eax,0xb
   140011fd0:	or     DWORD PTR [rdi+0x104],eax
   140011fd6:	call   0x14000a2f0
   140011fdb:	and    DWORD PTR [rdi+0x104],0xffffefff
   140011fe5:	and    eax,0x1
   140011fe8:	lea    rcx,[rdi+0x160]
   140011fef:	shl    eax,0xc
   140011ff2:	or     DWORD PTR [rdi+0x104],eax
   140011ff8:	call   0x140008660
   140011ffd:	and    DWORD PTR [rdi+0x104],0xfffffffd
   140012004:	mov    rbx,QWORD PTR [rsp+0x30]
   140012009:	and    eax,0x1
   14001200c:	add    eax,eax
   14001200e:	or     DWORD PTR [rdi+0x104],eax
   140012014:	add    rsp,0x20
   140012018:	pop    rdi
   140012019:	ret    
   14001201a:	int3   
   14001201b:	int3   
   14001201c:	int3   
   14001201d:	int3   
   14001201e:	int3   
   14001201f:	int3   
   140012020:	rex push rbx
   140012022:	sub    rsp,0x20
   140012026:	mov    rbx,rcx
   140012029:	mov    rcx,QWORD PTR [rcx+0x3d40]
   140012030:	xor    r9d,r9d
   140012033:	xor    r8d,r8d
   140012036:	mov    edx,0x130b
   14001203b:	call   QWORD PTR [rip+0x319a7]        # 0x1400439e8
   140012041:	lea    rcx,[rbx+0x3da8]
   140012048:	movsxd rdx,eax
   14001204b:	call   0x140023f08
   140012050:	test   rax,rax
   140012053:	jne    0x14001205b
   140012055:	call   0x1400218c0
   14001205a:	int3   
   14001205b:	mov    rcx,QWORD PTR [rax+0x10]
   14001205f:	mov    rax,QWORD PTR [rcx]
   140012062:	call   QWORD PTR [rax+0x2b8]
   140012068:	cmp    QWORD PTR [rbx+0x3a50],0x0
   140012070:	je     0x140012104
   140012076:	lea    rcx,[rbx+0x3928]
   14001207d:	mov    QWORD PTR [rsp+0x30],rdi
   140012082:	call   0x140013d00
   140012087:	mov    rax,QWORD PTR [rbx+0x39d0]
   14001208e:	xor    edi,edi
   140012090:	test   rax,rax
   140012093:	je     0x14001209a
   140012095:	mov    ecx,DWORD PTR [rax+0x14]
   140012098:	jmp    0x14001209c
   14001209a:	mov    ecx,edi
   14001209c:	mov    rax,QWORD PTR [rbx+0x3a50]
   1400120a3:	mov    edx,DWORD PTR [rax]
   1400120a5:	shr    edx,0x7
   1400120a8:	and    edx,0x1
   1400120ab:	cmp    ecx,edx
   1400120ad:	je     0x1400120bb
   1400120af:	lea    rcx,[rbx+0x3928]
   1400120b6:	call   0x140013fd0
   1400120bb:	mov    r8,QWORD PTR [rbx+0x39d0]
   1400120c2:	test   r8,r8
   1400120c5:	je     0x1400120ff
   1400120c7:	mov    rax,QWORD PTR [rbx+0x3a50]
   1400120ce:	mov    ecx,DWORD PTR [rax]
   1400120d0:	test   cl,cl
   1400120d2:	jns    0x1400120ff
   1400120d4:	test   cl,0x20
   1400120d7:	je     0x1400120e8
   1400120d9:	test   cl,0x40
   1400120dc:	je     0x1400120e8
   1400120de:	test   cl,0x10
   1400120e1:	je     0x1400120e8
   1400120e3:	mov    edi,0x1
   1400120e8:	mov    edx,0x9f
   1400120ed:	mov    eax,0x96
   1400120f2:	test   edi,edi
   1400120f4:	cmovne edx,eax
   1400120f7:	mov    rcx,r8
   1400120fa:	call   0x1400146b0
   1400120ff:	mov    rdi,QWORD PTR [rsp+0x30]
   140012104:	xor    eax,eax
   140012106:	add    rsp,0x20
   14001210a:	pop    rbx
   14001210b:	ret    
   14001210c:	int3   
   14001210d:	int3   
   14001210e:	int3   
   14001210f:	int3   
   140012110:	sub    rsp,0x28
   140012114:	add    rcx,0x3b08
   14001211b:	mov    edx,0x1
   140012120:	call   0x1400200c4
   140012125:	xor    eax,eax
   140012127:	add    rsp,0x28
   14001212b:	ret    
   14001212c:	int3   
   14001212d:	int3   
   14001212e:	int3   
   14001212f:	int3   
   140012130:	sub    rsp,0x28
   140012134:	add    rcx,0x3928
   14001213b:	call   0x1400141d0
   140012140:	xor    eax,eax
   140012142:	add    rsp,0x28
   140012146:	ret    
   140012147:	int3   
   140012148:	int3   
   140012149:	int3   
   14001214a:	int3   
   14001214b:	int3   
   14001214c:	int3   
   14001214d:	int3   
   14001214e:	int3   
   14001214f:	int3   
   140012150:	rex push rsi
   140012152:	sub    rsp,0x20
   140012156:	mov    rsi,rcx
   140012159:	mov    rcx,QWORD PTR [rcx+0x3d40]
   140012160:	xor    r9d,r9d
   140012163:	xor    r8d,r8d
   140012166:	mov    edx,0x130b
   14001216b:	call   QWORD PTR [rip+0x31877]        # 0x1400439e8
   140012171:	lea    rcx,[rsi+0x3da8]
   140012178:	movsxd rdx,eax
   14001217b:	call   0x140023f08
   140012180:	test   rax,rax
   140012183:	jne    0x14001218b
   140012185:	call   0x1400218c0
   14001218a:	int3   
   14001218b:	mov    rcx,QWORD PTR [rax+0x10]
   14001218f:	mov    QWORD PTR [rsp+0x30],rbx
   140012194:	mov    rax,QWORD PTR [rcx]
   140012197:	call   QWORD PTR [rax+0x2c8]
   14001219d:	cmp    QWORD PTR [rsi+0x3a50],0x0
   1400121a5:	je     0x140012239
   1400121ab:	lea    rcx,[rsi+0x3928]
   1400121b2:	mov    QWORD PTR [rsp+0x38],rdi
   1400121b7:	call   0x140013d00
   1400121bc:	mov    rax,QWORD PTR [rsi+0x39d0]
   1400121c3:	xor    edi,edi
   1400121c5:	test   rax,rax
   1400121c8:	je     0x1400121cf
   1400121ca:	mov    ecx,DWORD PTR [rax+0x14]
   1400121cd:	jmp    0x1400121d1
   1400121cf:	mov    ecx,edi
   1400121d1:	mov    rax,QWORD PTR [rsi+0x3a50]
   1400121d8:	mov    edx,DWORD PTR [rax]
   1400121da:	shr    edx,0x7
   1400121dd:	and    edx,0x1
   1400121e0:	cmp    ecx,edx
   1400121e2:	je     0x1400121f0
   1400121e4:	lea    rcx,[rsi+0x3928]
   1400121eb:	call   0x140013fd0
   1400121f0:	mov    r8,QWORD PTR [rsi+0x39d0]
   1400121f7:	test   r8,r8
   1400121fa:	je     0x140012234
   1400121fc:	mov    rax,QWORD PTR [rsi+0x3a50]
   140012203:	mov    ecx,DWORD PTR [rax]
   140012205:	test   cl,cl
   140012207:	jns    0x140012234
   140012209:	test   cl,0x20
   14001220c:	je     0x14001221d
   14001220e:	test   cl,0x40
   140012211:	je     0x14001221d
   140012213:	test   cl,0x10
   140012216:	je     0x14001221d
   140012218:	mov    edi,0x1
   14001221d:	mov    edx,0x9f
   140012222:	mov    ecx,0x96
   140012227:	test   edi,edi
   140012229:	cmovne edx,ecx
   14001222c:	mov    rcx,r8
   14001222f:	call   0x1400146b0
   140012234:	mov    rdi,QWORD PTR [rsp+0x38]
   140012239:	lea    rcx,[rsi+0x3b08]
   140012240:	xor    edx,edx
   140012242:	call   0x1400200c4
   140012247:	mov    rbx,QWORD PTR [rsp+0x30]
   14001224c:	mov    eax,0x1
   140012251:	add    rsp,0x20
   140012255:	pop    rsi
   140012256:	ret    
   140012257:	int3   
   140012258:	int3   
   140012259:	int3   
   14001225a:	int3   
   14001225b:	int3   
   14001225c:	int3   
   14001225d:	int3   
   14001225e:	int3   
   14001225f:	int3   
   140012260:	rex push rbx
   140012262:	sub    rsp,0x20
   140012266:	mov    rbx,rcx
   140012269:	call   0x140012150
   14001226e:	xor    edx,edx
   140012270:	mov    rcx,rbx
   140012273:	mov    DWORD PTR [rbx+0xf4],0x0
   14001227d:	call   0x140018578
   140012282:	xor    edx,edx
   140012284:	mov    rcx,rbx
   140012287:	add    rsp,0x20
   14001228b:	pop    rbx
   14001228c:	jmp    0x140020064
   140012291:	int3   
   140012292:	int3   
   140012293:	int3   
   140012294:	int3   
   140012295:	int3   
   140012296:	int3   
   140012297:	int3   
   140012298:	int3   
   140012299:	int3   
   14001229a:	int3   
   14001229b:	int3   
   14001229c:	int3   
   14001229d:	int3   
   14001229e:	int3   
   14001229f:	int3   
   1400122a0:	jmp    0x140012150
   1400122a5:	int3   
   1400122a6:	int3   
   1400122a7:	int3   
   1400122a8:	int3   
   1400122a9:	int3   
   1400122aa:	int3   
   1400122ab:	int3   
   1400122ac:	int3   
   1400122ad:	int3   
   1400122ae:	int3   
   1400122af:	int3   
   1400122b0:	rex push rbx
   1400122b2:	sub    rsp,0x20
   1400122b6:	mov    rbx,rcx
   1400122b9:	xor    edx,edx
   1400122bb:	add    rcx,0x3b08
   1400122c2:	call   0x1400200c4
   1400122c7:	xor    edx,edx
   1400122c9:	mov    rcx,rbx
   1400122cc:	mov    DWORD PTR [rbx+0xf4],0x0
   1400122d6:	call   0x140018578
   1400122db:	xor    edx,edx
   1400122dd:	mov    rcx,rbx
   1400122e0:	add    rsp,0x20
   1400122e4:	pop    rbx
   1400122e5:	jmp    0x140020064
   1400122ea:	int3   
   1400122eb:	int3   
   1400122ec:	int3   
   1400122ed:	int3   
   1400122ee:	int3   
   1400122ef:	int3   
   1400122f0:	rex push rbx
   1400122f2:	sub    rsp,0x20
   1400122f6:	mov    rbx,rcx
   1400122f9:	mov    rcx,QWORD PTR [rcx+0x3c98]
   140012300:	xor    r9d,r9d
   140012303:	xor    r8d,r8d
   140012306:	mov    edx,0x147
   14001230b:	call   QWORD PTR [rip+0x316d7]        # 0x1400439e8
   140012311:	cmp    eax,0xffffffff
   140012314:	jle    0x140012339
   140012316:	lea    rdx,[rip+0xfffffffffffedce3]        # 0x140000000
   14001231d:	cdqe   
   14001231f:	mov    ecx,DWORD PTR [rdx+rax*4+0x5c9a0]
   140012326:	add    rcx,rcx
   140012329:	movzx  edx,WORD PTR [rdx+rcx*8+0x5c9e8]
   140012331:	mov    rcx,rbx
   140012334:	call   0x140010de0
   140012339:	add    rsp,0x20
   14001233d:	pop    rbx
   14001233e:	ret    
   14001233f:	int3   
   140012340:	mov    QWORD PTR [rsp+0x8],rbx
   140012345:	mov    QWORD PTR [rsp+0x10],rsi
   14001234a:	push   rdi
   14001234b:	sub    rsp,0x20
   14001234f:	movsxd rdx,DWORD PTR [rcx+0x3de0]
   140012356:	mov    rbx,rcx
   140012359:	add    rcx,0x3da8
   140012360:	mov    rdi,r8
   140012363:	call   0x140023f08
   140012368:	test   rax,rax
   14001236b:	jne    0x140012373
   14001236d:	call   0x1400218c0
   140012372:	int3   
   140012373:	mov    rcx,QWORD PTR [rax+0x10]
   140012377:	xor    edx,edx
   140012379:	call   0x140020064
   14001237e:	mov    rcx,QWORD PTR [rbx+0x3d40]
   140012385:	xor    r9d,r9d
   140012388:	xor    r8d,r8d
   14001238b:	mov    edx,0x130b
   140012390:	call   QWORD PTR [rip+0x31652]        # 0x1400439e8
   140012396:	lea    rcx,[rbx+0x3da8]
   14001239d:	movsxd rdx,eax
   1400123a0:	mov    DWORD PTR [rbx+0x3de0],eax
   1400123a6:	call   0x140023f08
   1400123ab:	test   rax,rax
   1400123ae:	jne    0x1400123b6
   1400123b0:	call   0x1400218c0
   1400123b5:	int3   
   1400123b6:	mov    rbx,QWORD PTR [rax+0x10]
   1400123ba:	mov    rcx,rbx
   1400123bd:	mov    rax,QWORD PTR [rbx]
   1400123c0:	call   QWORD PTR [rax+0x2b8]
   1400123c6:	mov    edx,0x5
   1400123cb:	mov    rcx,rbx
   1400123ce:	call   0x140020064
   1400123d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400123d8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400123dd:	mov    QWORD PTR [rdi],0x0
   1400123e4:	add    rsp,0x20
   1400123e8:	pop    rdi
   1400123e9:	ret    
   1400123ea:	int3   
   1400123eb:	int3   
   1400123ec:	int3   
   1400123ed:	int3   
   1400123ee:	int3   
   1400123ef:	int3   
   1400123f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400123f5:	push   rdi
   1400123f6:	sub    rsp,0x20
   1400123fa:	mov    rdi,rdx
   1400123fd:	mov    rbx,rcx
   140012400:	call   0x140018d54
   140012405:	cmp    DWORD PTR [rbx+0xf4],0x0
   14001240c:	je     0x14001241d
   14001240e:	or     DWORD PTR [rdi+0x20],0x40
   140012412:	mov    rbx,QWORD PTR [rsp+0x30]
   140012417:	add    rsp,0x20
   14001241b:	pop    rdi
   14001241c:	ret    
   14001241d:	and    DWORD PTR [rdi+0x20],0xffffffbf
   140012421:	mov    rbx,QWORD PTR [rsp+0x30]
   140012426:	add    rsp,0x20
   14001242a:	pop    rdi
   14001242b:	ret    
   14001242c:	int3   
   14001242d:	int3   
   14001242e:	int3   
   14001242f:	int3   
   140012430:	rex push rdi
   140012432:	sub    rsp,0x50
   140012436:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001243f:	mov    QWORD PTR [rsp+0x68],rbx
   140012444:	mov    QWORD PTR [rsp+0x70],rsi
   140012449:	mov    rbx,rcx
   14001244c:	mov    edx,0x3ec
   140012451:	mov    rcx,QWORD PTR [rcx+0x40]
   140012455:	call   QWORD PTR [rip+0x314e5]        # 0x140043940
   14001245b:	xor    r9d,r9d
   14001245e:	mov    edx,0x3ec
   140012463:	mov    r8d,0x12c
   140012469:	mov    rcx,QWORD PTR [rbx+0x40]
   14001246d:	call   QWORD PTR [rip+0x314c5]        # 0x140043938
   140012473:	mov    rcx,QWORD PTR [rbx+0x1568]
   14001247a:	xor    esi,esi
   14001247c:	test   rcx,rcx
   14001247f:	je     0x1400124b0
   140012481:	xor    r9d,r9d
   140012484:	xor    r8d,r8d
   140012487:	lea    edx,[rsi+0x10]
   14001248a:	mov    rcx,QWORD PTR [rcx+0x40]
   14001248e:	call   QWORD PTR [rip+0x31564]        # 0x1400439f8
   140012494:	mov    rcx,QWORD PTR [rbx+0x1568]
   14001249b:	test   rcx,rcx
   14001249e:	je     0x1400124b0
   1400124a0:	mov    rax,QWORD PTR [rcx]
   1400124a3:	lea    edx,[rsi+0x1]
   1400124a6:	call   QWORD PTR [rax+0x8]
   1400124a9:	mov    QWORD PTR [rbx+0x1568],rsi
   1400124b0:	mov    rcx,QWORD PTR [rbx+0x40]
   1400124b4:	call   QWORD PTR [rip+0x314a6]        # 0x140043960
   1400124ba:	mov    DWORD PTR [rbx+0xf4],esi
   1400124c0:	xor    edx,edx
   1400124c2:	mov    rcx,rbx
   1400124c5:	call   0x140018578
   1400124ca:	xor    edx,edx
   1400124cc:	mov    rcx,rbx
   1400124cf:	call   0x140020064
   1400124d4:	mov    ecx,0x128
   1400124d9:	call   0x1400148c0
   1400124de:	mov    rdi,rax
   1400124e1:	mov    QWORD PTR [rsp+0x60],rax
   1400124e6:	test   rax,rax
   1400124e9:	je     0x140012564
   1400124eb:	mov    r8,rbx
   1400124ee:	mov    edx,0x98
   1400124f3:	mov    rcx,rax
   1400124f6:	call   0x14001d3b4
   1400124fb:	lea    r11,[rip+0x38486]        # 0x14004a988
   140012502:	mov    QWORD PTR [rdi],r11
   140012505:	lea    rax,[rip+0x38adc]        # 0x14004afe8
   14001250c:	mov    QWORD PTR [rdi+0xe8],rax
   140012513:	mov    QWORD PTR [rdi+0x100],rsi
   14001251a:	lea    rax,[rip+0x35907]        # 0x140047e28
   140012521:	mov    QWORD PTR [rdi+0xf8],rax
   140012528:	mov    QWORD PTR [rdi+0x110],rsi
   14001252f:	mov    QWORD PTR [rdi+0x108],rax
   140012536:	mov    DWORD PTR [rdi+0xf0],0x1
   140012540:	mov    WORD PTR [rdi+0x11c],0x0
   140012549:	mov    WORD PTR [rdi+0xf4],0x0
   140012552:	mov    DWORD PTR [rdi+0x120],0x1
   14001255c:	mov    DWORD PTR [rdi+0x124],esi
   140012562:	jmp    0x140012567
   140012564:	mov    rdi,rsi
   140012567:	mov    QWORD PTR [rbx+0x1568],rdi
   14001256e:	mov    eax,DWORD PTR [rbx+0x104]
   140012574:	shr    eax,0xd
   140012577:	and    eax,0x1
   14001257a:	mov    DWORD PTR [rdi+0x124],eax
   140012580:	mov    rcx,QWORD PTR [rbx+0x1568]
   140012587:	mov    rax,QWORD PTR [rcx]
   14001258a:	mov    r8,rbx
   14001258d:	mov    edx,0x98
   140012592:	call   QWORD PTR [rax+0x268]
   140012598:	mov    edx,0x5
   14001259d:	mov    rcx,QWORD PTR [rbx+0x1568]
   1400125a4:	call   0x140020064
   1400125a9:	mov    rcx,QWORD PTR [rbx+0x1568]
   1400125b0:	mov    rcx,QWORD PTR [rcx+0x40]
   1400125b4:	call   QWORD PTR [rip+0x313a6]        # 0x140043960
   1400125ba:	mov    rcx,QWORD PTR [rbx+0x1568]
   1400125c1:	test   rcx,rcx
   1400125c4:	jne    0x1400125cb
   1400125c6:	mov    rcx,rsi
   1400125c9:	jmp    0x1400125cf
   1400125cb:	mov    rcx,QWORD PTR [rcx+0x40]
   1400125cf:	mov    DWORD PTR [rsp+0x30],0x3
   1400125d7:	mov    DWORD PTR [rsp+0x28],esi
   1400125db:	mov    DWORD PTR [rsp+0x20],esi
   1400125df:	xor    r9d,r9d
   1400125e2:	xor    r8d,r8d
   1400125e5:	or     rdx,0xffffffffffffffff
   1400125e9:	call   QWORD PTR [rip+0x31341]        # 0x140043930
   1400125ef:	mov    rcx,QWORD PTR [rbx+0x1568]
   1400125f6:	test   rcx,rcx
   1400125f9:	jne    0x140012600
   1400125fb:	mov    rcx,rsi
   1400125fe:	jmp    0x140012604
   140012600:	mov    rcx,QWORD PTR [rcx+0x40]
   140012604:	mov    DWORD PTR [rsp+0x30],0x3
   14001260c:	mov    DWORD PTR [rsp+0x28],esi
   140012610:	mov    DWORD PTR [rsp+0x20],esi
   140012614:	xor    r9d,r9d
   140012617:	xor    r8d,r8d
   14001261a:	lea    rdx,[r9-0x2]
   14001261e:	call   QWORD PTR [rip+0x3130c]        # 0x140043930
   140012624:	mov    rcx,QWORD PTR [rbx+0x1568]
   14001262b:	mov    rbx,QWORD PTR [rsp+0x68]
   140012630:	mov    rsi,QWORD PTR [rsp+0x70]
   140012635:	add    rsp,0x50
   140012639:	pop    rdi
   14001263a:	jmp    0x1400200f4
   14001263f:	int3   
   140012640:	rex push rbp
   140012642:	sub    rsp,0x20
   140012646:	mov    rbp,rdx
   140012649:	mov    rcx,QWORD PTR [rbp+0x60]
   14001264d:	call   0x140001930
   140012652:	add    rsp,0x20
   140012656:	pop    rbp
   140012657:	ret    
   140012658:	int3   
   140012659:	int3   
   14001265a:	int3   
   14001265b:	int3   
   14001265c:	int3   
   14001265d:	int3   
   14001265e:	int3   
   14001265f:	int3   
   140012660:	sub    rsp,0x28
   140012664:	bt     DWORD PTR [rcx+0x104],0xc
   14001266c:	jae    0x14001267a
   14001266e:	add    rcx,0x160
   140012675:	call   0x140008850
   14001267a:	xor    eax,eax
   14001267c:	add    rsp,0x28
   140012680:	ret    
   140012681:	int3   
   140012682:	int3   
   140012683:	int3   
   140012684:	int3   
   140012685:	int3   
   140012686:	int3   
   140012687:	int3   
   140012688:	int3   
   140012689:	int3   
   14001268a:	int3   
   14001268b:	int3   
   14001268c:	int3   
   14001268d:	int3   
   14001268e:	int3   
   14001268f:	int3   
   140012690:	mov    QWORD PTR [rsp+0x8],rbx
   140012695:	push   rdi
   140012696:	sub    rsp,0x20
   14001269a:	mov    ebx,edx
   14001269c:	mov    rdi,rcx
   14001269f:	call   0x140023f58
   1400126a4:	test   bl,0x1
   1400126a7:	je     0x1400126b1
   1400126a9:	mov    rcx,rdi
   1400126ac:	call   0x14001490c
   1400126b1:	mov    rax,rdi
   1400126b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400126b9:	add    rsp,0x20
   1400126bd:	pop    rdi
   1400126be:	ret    
   1400126bf:	int3   
   1400126c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400126c5:	push   rdi
   1400126c6:	sub    rsp,0x20
   1400126ca:	mov    ebx,edx
   1400126cc:	mov    rdi,rcx
   1400126cf:	call   0x1400213c8
   1400126d4:	test   bl,0x1
   1400126d7:	je     0x1400126e1
   1400126d9:	mov    rcx,rdi
   1400126dc:	call   0x14001490c
   1400126e1:	mov    rax,rdi
   1400126e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400126e9:	add    rsp,0x20
   1400126ed:	pop    rdi
   1400126ee:	ret    
   1400126ef:	int3   
   1400126f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400126f5:	push   rdi
   1400126f6:	sub    rsp,0x20
   1400126fa:	mov    ebx,edx
   1400126fc:	mov    rdi,rcx
   1400126ff:	call   0x14001e384
   140012704:	test   bl,0x1
   140012707:	je     0x140012711
   140012709:	mov    rcx,rdi
   14001270c:	call   0x14001490c
   140012711:	mov    rax,rdi
   140012714:	mov    rbx,QWORD PTR [rsp+0x30]
   140012719:	add    rsp,0x20
   14001271d:	pop    rdi
   14001271e:	ret    
   14001271f:	int3   
   140012720:	mov    QWORD PTR [rsp+0x8],rbx
   140012725:	push   rdi
   140012726:	sub    rsp,0x20
   14001272a:	lea    rax,[rip+0x3a877]        # 0x14004cfa8
   140012731:	mov    ebx,edx
   140012733:	mov    rdi,rcx
   140012736:	mov    QWORD PTR [rcx],rax
   140012739:	call   0x14001e22c
   14001273e:	test   bl,0x1
   140012741:	je     0x14001274b
   140012743:	mov    rcx,rdi
   140012746:	call   0x14001490c
   14001274b:	mov    rax,rdi
   14001274e:	mov    rbx,QWORD PTR [rsp+0x30]
   140012753:	add    rsp,0x20
   140012757:	pop    rdi
   140012758:	ret    
   140012759:	int3   
   14001275a:	int3   
   14001275b:	int3   
   14001275c:	int3   
   14001275d:	int3   
   14001275e:	int3   
   14001275f:	int3   
   140012760:	lea    rax,[rip+0x3a841]        # 0x14004cfa8
   140012767:	mov    QWORD PTR [rcx],rax
   14001276a:	jmp    0x14001e22c
   14001276f:	int3   
   140012770:	test   rdx,rdx
   140012773:	je     0x140012a12
   140012779:	push   rbp
   14001277a:	push   rsi
   14001277b:	push   rdi
   14001277c:	sub    rsp,0xb0
   140012783:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14001278c:	mov    QWORD PTR [rsp+0xd0],rbx
   140012794:	mov    rdi,rcx
   140012797:	mov    rcx,QWORD PTR [rdx+0x20]
   14001279b:	call   0x140020c14
   1400127a0:	mov    rbx,rax
   1400127a3:	lea    rcx,[rsp+0x88]
   1400127ab:	call   0x140020544
   1400127b0:	nop
   1400127b1:	xor    esi,esi
   1400127b3:	mov    QWORD PTR [rsp+0x80],rsi
   1400127bb:	lea    rbp,[rip+0x3441e]        # 0x140046be0
   1400127c2:	mov    QWORD PTR [rsp+0x78],rbp
   1400127c7:	lea    rdx,[rsp+0x68]
   1400127cc:	mov    rcx,QWORD PTR [rdi+0x40]
   1400127d0:	call   QWORD PTR [rip+0x3120a]        # 0x1400439e0
   1400127d6:	test   rbx,rbx
   1400127d9:	jne    0x1400127e0
   1400127db:	mov    rcx,rsi
   1400127de:	jmp    0x1400127e4
   1400127e0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400127e4:	call   QWORD PTR [rip+0x308ee]        # 0x1400430d8
   1400127ea:	mov    rdx,rax
   1400127ed:	lea    rcx,[rsp+0x88]
   1400127f5:	call   0x140020c38
   1400127fa:	mov    r8d,DWORD PTR [rsp+0x74]
   1400127ff:	sub    r8d,DWORD PTR [rsp+0x6c]
   140012804:	mov    edx,DWORD PTR [rsp+0x70]
   140012808:	sub    edx,DWORD PTR [rsp+0x68]
   14001280c:	mov    rcx,QWORD PTR [rbx+0x8]
   140012810:	call   QWORD PTR [rip+0x308ba]        # 0x1400430d0
   140012816:	mov    rdx,rax
   140012819:	lea    rcx,[rsp+0x78]
   14001281e:	call   0x140020fa8
   140012823:	lea    rcx,[rsp+0x88]
   14001282b:	call   0x140020260
   140012830:	mov    rdx,QWORD PTR [rsp+0x80]
   140012838:	mov    rcx,QWORD PTR [rsp+0x90]
   140012840:	call   0x14002107c
   140012845:	lea    rdx,[rsp+0xd8]
   14001284d:	mov    rcx,QWORD PTR [rbx+0x10]
   140012851:	call   QWORD PTR [rip+0x308f1]        # 0x140043148
   140012857:	mov    r11,QWORD PTR [rsp+0xd8]
   14001285f:	mov    r9,r11
   140012862:	shr    r9,0x20
   140012866:	mov    r8d,r11d
   140012869:	lea    rdx,[rsp+0xe0]
   140012871:	lea    rcx,[rsp+0x88]
   140012879:	mov    rax,QWORD PTR [rsp+0x88]
   140012881:	call   QWORD PTR [rax+0x90]
   140012887:	lea    rdx,[rsp+0xd8]
   14001288f:	mov    rcx,QWORD PTR [rbx+0x10]
   140012893:	call   QWORD PTR [rip+0x308a7]        # 0x140043140
   140012899:	mov    r11,QWORD PTR [rsp+0xd8]
   1400128a1:	mov    r9,r11
   1400128a4:	shr    r9,0x20
   1400128a8:	mov    r8d,r11d
   1400128ab:	lea    rdx,[rsp+0xe0]
   1400128b3:	lea    rcx,[rsp+0x88]
   1400128bb:	mov    rax,QWORD PTR [rsp+0x88]
   1400128c3:	call   QWORD PTR [rax+0x80]
   1400128c9:	xor    r9d,r9d
   1400128cc:	xor    r8d,r8d
   1400128cf:	lea    edx,[r9+0x31]
   1400128d3:	mov    rcx,QWORD PTR [rdi+0x40]
   1400128d7:	call   QWORD PTR [rip+0x3110b]        # 0x1400439e8
   1400128dd:	mov    rcx,rax
   1400128e0:	call   0x140020f84
   1400128e5:	mov    rdx,rax
   1400128e8:	lea    rcx,[rsp+0x88]
   1400128f0:	call   0x1400210e8
   1400128f5:	mov    edx,0x1
   1400128fa:	lea    rcx,[rsp+0x88]
   140012902:	call   0x14002033c
   140012907:	xor    edx,edx
   140012909:	lea    rcx,[rsp+0x88]
   140012911:	call   0x140020454
   140012916:	mov    ecx,0x5
   14001291b:	call   QWORD PTR [rip+0x310b7]        # 0x1400439d8
   140012921:	mov    r8d,eax
   140012924:	lea    rdx,[rsp+0x68]
   140012929:	lea    rcx,[rsp+0x88]
   140012931:	call   0x1400211b4
   140012936:	mov    rcx,QWORD PTR [rdi+0xa8]
   14001293d:	test   rcx,rcx
   140012940:	je     0x14001297d
   140012942:	mov    eax,DWORD PTR [rcx+0x1c]
   140012945:	mov    edx,DWORD PTR [rcx+0x18]
   140012948:	mov    BYTE PTR [rsp+0x58],0x0
   14001294d:	mov    BYTE PTR [rsp+0x50],0xff
   140012952:	mov    DWORD PTR [rsp+0x48],eax
   140012956:	mov    DWORD PTR [rsp+0x40],edx
   14001295a:	mov    DWORD PTR [rsp+0x38],esi
   14001295e:	mov    DWORD PTR [rsp+0x30],esi
   140012962:	mov    DWORD PTR [rsp+0x28],eax
   140012966:	mov    DWORD PTR [rsp+0x20],edx
   14001296a:	xor    r9d,r9d
   14001296d:	xor    r8d,r8d
   140012970:	mov    rdx,QWORD PTR [rsp+0x90]
   140012978:	call   0x140007630
   14001297d:	lea    rdx,[rsp+0x88]
   140012985:	mov    rcx,rdi
   140012988:	call   0x140012a60
   14001298d:	mov    r11d,DWORD PTR [rsp+0x74]
   140012992:	sub    r11d,DWORD PTR [rsp+0x6c]
   140012997:	mov    r9d,DWORD PTR [rsp+0x70]
   14001299c:	sub    r9d,DWORD PTR [rsp+0x68]
   1400129a1:	mov    DWORD PTR [rsp+0x40],0xcc0020
   1400129a9:	mov    DWORD PTR [rsp+0x38],esi
   1400129ad:	mov    DWORD PTR [rsp+0x30],esi
   1400129b1:	mov    rax,QWORD PTR [rsp+0x90]
   1400129b9:	mov    QWORD PTR [rsp+0x28],rax
   1400129be:	mov    DWORD PTR [rsp+0x20],r11d
   1400129c3:	xor    r8d,r8d
   1400129c6:	xor    edx,edx
   1400129c8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400129cc:	call   QWORD PTR [rip+0x30716]        # 0x1400430e8
   1400129d2:	or     edx,0xffffffff
   1400129d5:	lea    rcx,[rsp+0x88]
   1400129dd:	call   0x1400202a8
   1400129e2:	nop
   1400129e3:	mov    QWORD PTR [rsp+0x78],rbp
   1400129e8:	lea    rcx,[rsp+0x78]
   1400129ed:	call   0x140005860
   1400129f2:	nop
   1400129f3:	lea    rcx,[rsp+0x88]
   1400129fb:	call   0x140020cd4
   140012a00:	mov    rbx,QWORD PTR [rsp+0xd0]
   140012a08:	add    rsp,0xb0
   140012a0f:	pop    rdi
   140012a10:	pop    rsi
   140012a11:	pop    rbp
   140012a12:	ret    0x0
   140012a15:	int3   
   140012a16:	int3   
   140012a17:	int3   
   140012a18:	int3   
   140012a19:	int3   
   140012a1a:	int3   
   140012a1b:	int3   
   140012a1c:	int3   
   140012a1d:	int3   
   140012a1e:	int3   
   140012a1f:	int3   
   140012a20:	rex push rbp
   140012a22:	sub    rsp,0x20
   140012a26:	mov    rbp,rdx
   140012a29:	lea    rcx,[rbp+0x88]
   140012a30:	call   0x140020cd4
   140012a35:	add    rsp,0x20
   140012a39:	pop    rbp
   140012a3a:	ret    
   140012a3b:	int3   
   140012a3c:	int3   
   140012a3d:	int3   
   140012a3e:	int3   
   140012a3f:	int3   
   140012a40:	rex push rbp
   140012a42:	sub    rsp,0x20
   140012a46:	mov    rbp,rdx
   140012a49:	lea    rcx,[rbp+0x78]
   140012a4d:	call   0x140005810
   140012a52:	add    rsp,0x20
   140012a56:	pop    rbp
   140012a57:	ret    
   140012a58:	int3   
   140012a59:	int3   
   140012a5a:	int3   
   140012a5b:	int3   
   140012a5c:	int3   
   140012a5d:	int3   
   140012a5e:	int3   
   140012a5f:	int3   
   140012a60:	mov    QWORD PTR [rsp+0x8],rcx
   140012a65:	push   rbp
   140012a66:	push   rsi
   140012a67:	push   rdi
   140012a68:	push   r12
   140012a6a:	push   r13
   140012a6c:	push   r14
   140012a6e:	push   r15
   140012a70:	sub    rsp,0x70
   140012a74:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140012a7d:	mov    QWORD PTR [rsp+0xb8],rbx
   140012a85:	mov    r15,rdx
   140012a88:	mov    rsi,rcx
   140012a8b:	call   0x14002157c
   140012a90:	mov    rcx,rax
   140012a93:	xor    edi,edi
   140012a95:	mov    r8d,edi
   140012a98:	test   rax,rax
   140012a9b:	setne  r8b
   140012a9f:	test   r8d,r8d
   140012aa2:	jne    0x140012aaf
   140012aa4:	mov    ecx,0x80004005
   140012aa9:	call   0x140003dc0
   140012aae:	int3   
   140012aaf:	mov    rax,QWORD PTR [rax]
   140012ab2:	call   QWORD PTR [rax+0x18]
   140012ab5:	add    rax,0x18
   140012ab9:	mov    QWORD PTR [rsp+0x40],rax
   140012abe:	lea    rdx,[rsp+0x40]
   140012ac3:	mov    rcx,rsi
   140012ac6:	call   0x14001a584
   140012acb:	mov    r11,QWORD PTR [rsp+0x40]
   140012ad0:	cmp    DWORD PTR [r11-0x10],0x0
   140012ad5:	jne    0x140012afc
   140012ad7:	lea    rdx,[r11-0x18]
   140012adb:	or     ebp,0xffffffff
   140012ade:	lock xadd DWORD PTR [rdx+0x10],ebp
   140012ae3:	add    ebp,0xffffffff
   140012ae6:	test   ebp,ebp
   140012ae8:	jg     0x140012e65
   140012aee:	mov    rcx,QWORD PTR [rdx]
   140012af1:	mov    rax,QWORD PTR [rcx]
   140012af4:	call   QWORD PTR [rax+0x8]
   140012af7:	jmp    0x140012e65
   140012afc:	lea    rdx,[rsp+0x60]
   140012b01:	mov    rcx,QWORD PTR [rsi+0x40]
   140012b05:	call   QWORD PTR [rip+0x30eb5]        # 0x1400439c0
   140012b0b:	mov    r14d,DWORD PTR [rsp+0x68]
   140012b10:	sub    r14d,DWORD PTR [rsp+0x60]
   140012b15:	mov    r12d,edi
   140012b18:	mov    DWORD PTR [rsp+0xc8],edi
   140012b1f:	mov    r13d,edi
   140012b22:	mov    rbx,QWORD PTR [r15]
   140012b25:	mov    ecx,0x8
   140012b2a:	call   QWORD PTR [rip+0x30ea8]        # 0x1400439d8
   140012b30:	mov    edx,eax
   140012b32:	mov    rcx,r15
   140012b35:	call   QWORD PTR [rbx+0x60]
   140012b38:	or     ebp,0xffffffff
   140012b3b:	xchg   ax,ax
   140012b3d:	data16 xchg ax,ax
   140012b40:	mov    DWORD PTR [rsp+0xc0],edi
   140012b47:	mov    rbx,QWORD PTR [rsp+0x40]
   140012b4c:	mov    rcx,r15
   140012b4f:	call   0x140001ab0
   140012b54:	mov    rcx,rax
   140012b57:	lea    rax,[rsp+0x50]
   140012b5c:	mov    QWORD PTR [rsp+0x30],rax
   140012b61:	mov    QWORD PTR [rsp+0x28],rdi
   140012b66:	lea    rax,[rsp+0xc0]
   140012b6e:	mov    QWORD PTR [rsp+0x20],rax
   140012b73:	mov    r9d,r14d
   140012b76:	mov    r8d,DWORD PTR [rbx-0x10]
   140012b7a:	mov    rdx,rbx
   140012b7d:	call   QWORD PTR [rip+0x305d5]        # 0x140043158
   140012b83:	mov    r8d,DWORD PTR [rsp+0xc0]
   140012b8b:	lea    rdx,[rsp+0x48]
   140012b90:	lea    rcx,[rsp+0x40]
   140012b95:	call   0x14000e6b0
   140012b9a:	nop
   140012b9b:	mov    rbx,QWORD PTR [rsp+0x48]
   140012ba0:	cmp    DWORD PTR [rbx-0x10],0x0
   140012ba4:	jle    0x140012cc0
   140012baa:	mov    dx,0xa
   140012bae:	mov    rcx,rbx
   140012bb1:	call   0x14002a7d0
   140012bb6:	mov    rdi,rax
   140012bb9:	test   rax,rax
   140012bbc:	je     0x140012cc0
   140012bc2:	sub    rdi,rbx
   140012bc5:	sar    rdi,1
   140012bc8:	cmp    edi,0xffffffff
   140012bcb:	jle    0x140012cc0
   140012bd1:	test   edi,edi
   140012bd3:	jne    0x140012cb8
   140012bd9:	test   r13d,r13d
   140012bdc:	je     0x140012cb8
   140012be2:	mov    esi,0x1
   140012be7:	mov    rcx,QWORD PTR [rsp+0x40]
   140012bec:	mov    edi,DWORD PTR [rcx-0x10]
   140012bef:	cmp    edi,esi
   140012bf1:	jge    0x140012bfd
   140012bf3:	mov    esi,edi
   140012bf5:	test   edi,edi
   140012bf7:	jle    0x140012c87
   140012bfd:	sub    edi,esi
   140012bff:	lea    r12d,[rdi+0x1]
   140012c03:	cmp    DWORD PTR [rcx-0x8],0x1
   140012c07:	jle    0x140012c1b
   140012c09:	mov    edx,DWORD PTR [rcx-0x10]
   140012c0c:	lea    rcx,[rsp+0x40]
   140012c11:	call   0x1400043d0
   140012c16:	mov    rcx,QWORD PTR [rsp+0x40]
   140012c1b:	movsxd rdx,r12d
   140012c1e:	add    rdx,rdx
   140012c21:	movsxd rax,esi
   140012c24:	lea    r8,[rcx+rax*2]
   140012c28:	mov    r9,rdx
   140012c2b:	call   0x140029b60
   140012c30:	test   eax,eax
   140012c32:	je     0x140012c58
   140012c34:	cmp    eax,0xc
   140012c37:	je     0x140012df0
   140012c3d:	cmp    eax,0x16
   140012c40:	je     0x140012dea
   140012c46:	cmp    eax,0x22
   140012c49:	je     0x140012dea
   140012c4f:	cmp    eax,0x50
   140012c52:	jne    0x140012de4
   140012c58:	test   edi,edi
   140012c5a:	js     0x140012df6
   140012c60:	mov    rax,QWORD PTR [rsp+0x40]
   140012c65:	cmp    edi,DWORD PTR [rax-0xc]
   140012c68:	jg     0x140012df6
   140012c6e:	mov    DWORD PTR [rax-0x10],edi
   140012c71:	movsxd rcx,edi
   140012c74:	mov    rax,QWORD PTR [rsp+0x40]
   140012c79:	mov    WORD PTR [rax+rcx*2],0x0
   140012c7f:	mov    r12d,DWORD PTR [rsp+0xc8]
   140012c87:	lea    rdx,[rbx-0x18]
   140012c8b:	mov    eax,ebp
   140012c8d:	lock xadd DWORD PTR [rdx+0x10],eax
   140012c92:	add    eax,0xffffffff
   140012c95:	test   eax,eax
   140012c97:	mov    rsi,QWORD PTR [rsp+0xb0]
   140012c9f:	mov    edi,0x0
   140012ca4:	jg     0x140012b40
   140012caa:	mov    rcx,QWORD PTR [rdx]
   140012cad:	mov    rax,QWORD PTR [rcx]
   140012cb0:	call   QWORD PTR [rax+0x8]
   140012cb3:	jmp    0x140012b40
   140012cb8:	add    edi,0x1
   140012cbb:	xor    r13d,r13d
   140012cbe:	jmp    0x140012ccd
   140012cc0:	mov    edi,DWORD PTR [rsp+0xc0]
   140012cc7:	mov    r13d,0x1
   140012ccd:	mov    rax,QWORD PTR [r15]
   140012cd0:	mov    DWORD PTR [rsp+0x20],edi
   140012cd4:	mov    r9,QWORD PTR [rsp+0x40]
   140012cd9:	mov    r8d,r12d
   140012cdc:	xor    edx,edx
   140012cde:	mov    rcx,r15
   140012ce1:	call   QWORD PTR [rax+0xb8]
   140012ce7:	add    r12d,DWORD PTR [rsi+0xb0]
   140012cee:	mov    DWORD PTR [rsp+0xc8],r12d
   140012cf6:	test   edi,edi
   140012cf8:	mov    eax,0x0
   140012cfd:	cmovs  edi,eax
   140012d00:	mov    rcx,QWORD PTR [rsp+0x40]
   140012d05:	mov    esi,DWORD PTR [rcx-0x10]
   140012d08:	mov    eax,0x7fffffff
   140012d0d:	cmp    eax,edi
   140012d0f:	js     0x140012e5a
   140012d15:	cmp    edi,esi
   140012d17:	cmovg  edi,esi
   140012d1a:	test   edi,edi
   140012d1c:	jle    0x140012dac
   140012d22:	sub    esi,edi
   140012d24:	lea    r12d,[rsi+0x1]
   140012d28:	cmp    DWORD PTR [rcx-0x8],0x1
   140012d2c:	jle    0x140012d40
   140012d2e:	mov    edx,DWORD PTR [rcx-0x10]
   140012d31:	lea    rcx,[rsp+0x40]
   140012d36:	call   0x1400043d0
   140012d3b:	mov    rcx,QWORD PTR [rsp+0x40]
   140012d40:	movsxd rdx,r12d
   140012d43:	add    rdx,rdx
   140012d46:	movsxd rax,edi
   140012d49:	lea    r8,[rcx+rax*2]
   140012d4d:	mov    r9,rdx
   140012d50:	call   0x140029b60
   140012d55:	test   eax,eax
   140012d57:	je     0x140012d7d
   140012d59:	cmp    eax,0xc
   140012d5c:	je     0x140012e0d
   140012d62:	cmp    eax,0x16
   140012d65:	je     0x140012e07
   140012d6b:	cmp    eax,0x22
   140012d6e:	je     0x140012e07
   140012d74:	cmp    eax,0x50
   140012d77:	jne    0x140012e01
   140012d7d:	test   esi,esi
   140012d7f:	js     0x140012e13
   140012d85:	mov    rax,QWORD PTR [rsp+0x40]
   140012d8a:	cmp    esi,DWORD PTR [rax-0xc]
   140012d8d:	jg     0x140012e13
   140012d93:	mov    DWORD PTR [rax-0x10],esi
   140012d96:	movsxd rcx,esi
   140012d99:	mov    rax,QWORD PTR [rsp+0x40]
   140012d9e:	mov    WORD PTR [rax+rcx*2],0x0
   140012da4:	mov    r12d,DWORD PTR [rsp+0xc8]
   140012dac:	cmp    DWORD PTR [rsp+0x50],r14d
   140012db1:	jl     0x140012e1e
   140012db3:	lea    rdx,[rbx-0x18]
   140012db7:	mov    eax,ebp
   140012db9:	lock xadd DWORD PTR [rdx+0x10],eax
   140012dbe:	add    eax,0xffffffff
   140012dc1:	test   eax,eax
   140012dc3:	mov    rsi,QWORD PTR [rsp+0xb0]
   140012dcb:	mov    edi,0x0
   140012dd0:	jg     0x140012b40
   140012dd6:	mov    rcx,QWORD PTR [rdx]
   140012dd9:	mov    rax,QWORD PTR [rcx]
   140012ddc:	call   QWORD PTR [rax+0x8]
   140012ddf:	jmp    0x140012b40
   140012de4:	call   0x1400218c0
   140012de9:	int3   
   140012dea:	call   0x1400218c0
   140012def:	int3   
   140012df0:	call   0x140021878
   140012df5:	int3   
   140012df6:	mov    ecx,0x80070057
   140012dfb:	call   0x140003dc0
   140012e00:	int3   
   140012e01:	call   0x1400218c0
   140012e06:	int3   
   140012e07:	call   0x1400218c0
   140012e0c:	int3   
   140012e0d:	call   0x140021878
   140012e12:	int3   
   140012e13:	mov    ecx,0x80070057
   140012e18:	call   0x140003dc0
   140012e1d:	nop
   140012e1e:	lea    rdx,[rbx-0x18]
   140012e22:	mov    eax,ebp
   140012e24:	lock xadd DWORD PTR [rdx+0x10],eax
   140012e29:	add    eax,0xffffffff
   140012e2c:	test   eax,eax
   140012e2e:	jg     0x140012e3a
   140012e30:	mov    rcx,QWORD PTR [rdx]
   140012e33:	mov    rax,QWORD PTR [rcx]
   140012e36:	call   QWORD PTR [rax+0x8]
   140012e39:	nop
   140012e3a:	mov    rdx,QWORD PTR [rsp+0x40]
   140012e3f:	add    rdx,0xffffffffffffffe8
   140012e43:	lock xadd DWORD PTR [rdx+0x10],ebp
   140012e48:	add    ebp,0xffffffff
   140012e4b:	test   ebp,ebp
   140012e4d:	jg     0x140012e65
   140012e4f:	mov    rcx,QWORD PTR [rdx]
   140012e52:	mov    rax,QWORD PTR [rcx]
   140012e55:	call   QWORD PTR [rax+0x8]
   140012e58:	jmp    0x140012e65
   140012e5a:	mov    ecx,0x80070057
   140012e5f:	call   0x140003dc0
   140012e64:	nop
   140012e65:	mov    rbx,QWORD PTR [rsp+0xb8]
   140012e6d:	add    rsp,0x70
   140012e71:	pop    r15
   140012e73:	pop    r14
   140012e75:	pop    r13
   140012e77:	pop    r12
   140012e79:	pop    rdi
   140012e7a:	pop    rsi
   140012e7b:	pop    rbp
   140012e7c:	ret    
   140012e7d:	int3   
   140012e7e:	int3   
   140012e7f:	int3   
   140012e80:	rex push rbp
   140012e82:	sub    rsp,0x20
   140012e86:	mov    rbp,rdx
   140012e89:	lea    rcx,[rbp+0x40]
   140012e8d:	call   0x140003de0
   140012e92:	add    rsp,0x20
   140012e96:	pop    rbp
   140012e97:	ret    
   140012e98:	int3   
   140012e99:	int3   
   140012e9a:	int3   
   140012e9b:	int3   
   140012e9c:	int3   
   140012e9d:	int3   
   140012e9e:	int3   
   140012e9f:	int3   
   140012ea0:	rex push rbp
   140012ea2:	sub    rsp,0x20
   140012ea6:	mov    rbp,rdx
   140012ea9:	lea    rcx,[rbp+0x48]
   140012ead:	call   0x140003de0
   140012eb2:	add    rsp,0x20
   140012eb6:	pop    rbp
   140012eb7:	ret    
   140012eb8:	int3   
   140012eb9:	int3   
   140012eba:	int3   
   140012ebb:	int3   
   140012ebc:	int3   
   140012ebd:	int3   
   140012ebe:	int3   
   140012ebf:	int3   
   140012ec0:	mov    QWORD PTR [rsp+0x8],rcx
   140012ec5:	push   rbp
   140012ec6:	push   rsi
   140012ec7:	push   rdi
   140012ec8:	push   r12
   140012eca:	push   r13
   140012ecc:	sub    rsp,0x70
   140012ed0:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140012ed9:	mov    QWORD PTR [rsp+0xb0],rbx
   140012ee1:	mov    rbx,rcx
   140012ee4:	call   0x140016de8
   140012ee9:	nop
   140012eea:	lea    rax,[rip+0x3a437]        # 0x14004d328
   140012ef1:	mov    QWORD PTR [rbx],rax
   140012ef4:	lea    rax,[rip+0x34ed5]        # 0x140047dd0
   140012efb:	mov    QWORD PTR [rbx+0xb0],rax
   140012f02:	xor    r13d,r13d
   140012f05:	mov    QWORD PTR [rbx+0xb8],r13
   140012f0c:	call   0x14002157c
   140012f11:	mov    rdx,rax
   140012f14:	mov    ecx,r13d
   140012f17:	test   rax,rax
   140012f1a:	setne  cl
   140012f1d:	test   ecx,ecx
   140012f1f:	jne    0x140012f2c
   140012f21:	mov    ecx,0x80004005
   140012f26:	call   0x140003dc0
   140012f2b:	int3   
   140012f2c:	mov    rax,QWORD PTR [rax]
   140012f2f:	mov    rcx,rdx
   140012f32:	call   QWORD PTR [rax+0x18]
   140012f35:	add    rax,0x18
   140012f39:	mov    QWORD PTR [rbx+0xd0],rax
   140012f40:	call   0x14002157c
   140012f45:	mov    rdx,rax
   140012f48:	mov    ecx,r13d
   140012f4b:	test   rax,rax
   140012f4e:	setne  cl
   140012f51:	test   ecx,ecx
   140012f53:	jne    0x140012f60
   140012f55:	mov    ecx,0x80004005
   140012f5a:	call   0x140003dc0
   140012f5f:	int3   
   140012f60:	mov    rax,QWORD PTR [rax]
   140012f63:	mov    rcx,rdx
   140012f66:	call   QWORD PTR [rax+0x18]
   140012f69:	add    rax,0x18
   140012f6d:	mov    QWORD PTR [rbx+0xd8],rax
   140012f74:	call   0x14002157c
   140012f79:	mov    rdx,rax
   140012f7c:	mov    ecx,r13d
   140012f7f:	test   rax,rax
   140012f82:	setne  cl
   140012f85:	test   ecx,ecx
   140012f87:	jne    0x140012f94
   140012f89:	mov    ecx,0x80004005
   140012f8e:	call   0x140003dc0
   140012f93:	int3   
   140012f94:	mov    rax,QWORD PTR [rax]
   140012f97:	mov    rcx,rdx
   140012f9a:	call   QWORD PTR [rax+0x18]
   140012f9d:	add    rax,0x18
   140012fa1:	mov    QWORD PTR [rbx+0xe0],rax
   140012fa8:	call   0x14002157c
   140012fad:	mov    rdx,rax
   140012fb0:	mov    ecx,r13d
   140012fb3:	test   rax,rax
   140012fb6:	setne  cl
   140012fb9:	test   ecx,ecx
   140012fbb:	jne    0x140012fc8
   140012fbd:	mov    ecx,0x80004005
   140012fc2:	call   0x140003dc0
   140012fc7:	int3   
   140012fc8:	mov    rax,QWORD PTR [rax]
   140012fcb:	mov    rcx,rdx
   140012fce:	call   QWORD PTR [rax+0x18]
   140012fd1:	add    rax,0x18
   140012fd5:	mov    QWORD PTR [rbx+0xe8],rax
   140012fdc:	call   0x14002157c
   140012fe1:	mov    rdx,rax
   140012fe4:	mov    ecx,r13d
   140012fe7:	test   rax,rax
   140012fea:	setne  cl
   140012fed:	test   ecx,ecx
   140012fef:	jne    0x140012ffc
   140012ff1:	mov    ecx,0x80004005
   140012ff6:	call   0x140003dc0
   140012ffb:	int3   
   140012ffc:	mov    rax,QWORD PTR [rax]
   140012fff:	mov    rcx,rdx
   140013002:	call   QWORD PTR [rax+0x18]
   140013005:	add    rax,0x18
   140013009:	mov    QWORD PTR [rbx+0xf0],rax
   140013010:	call   0x14002157c
   140013015:	mov    rdx,rax
   140013018:	mov    ecx,r13d
   14001301b:	test   rax,rax
   14001301e:	setne  cl
   140013021:	test   ecx,ecx
   140013023:	jne    0x140013030
   140013025:	mov    ecx,0x80004005
   14001302a:	call   0x140003dc0
   14001302f:	int3   
   140013030:	mov    rax,QWORD PTR [rax]
   140013033:	mov    rcx,rdx
   140013036:	call   QWORD PTR [rax+0x18]
   140013039:	add    rax,0x18
   14001303d:	mov    QWORD PTR [rbx+0xf8],rax
   140013044:	call   0x14002157c
   140013049:	mov    rdx,rax
   14001304c:	mov    ecx,r13d
   14001304f:	test   rax,rax
   140013052:	setne  cl
   140013055:	test   ecx,ecx
   140013057:	jne    0x140013064
   140013059:	mov    ecx,0x80004005
   14001305e:	call   0x140003dc0
   140013063:	int3   
   140013064:	mov    rax,QWORD PTR [rax]
   140013067:	mov    rcx,rdx
   14001306a:	call   QWORD PTR [rax+0x18]
   14001306d:	add    rax,0x18
   140013071:	mov    QWORD PTR [rbx+0x100],rax
   140013078:	call   0x14002157c
   14001307d:	mov    rdx,rax
   140013080:	mov    ecx,r13d
   140013083:	test   rax,rax
   140013086:	setne  cl
   140013089:	test   ecx,ecx
   14001308b:	jne    0x140013098
   14001308d:	mov    ecx,0x80004005
   140013092:	call   0x140003dc0
   140013097:	int3   
   140013098:	mov    rax,QWORD PTR [rax]
   14001309b:	mov    rcx,rdx
   14001309e:	call   QWORD PTR [rax+0x18]
   1400130a1:	add    rax,0x18
   1400130a5:	mov    QWORD PTR [rbx+0x108],rax
   1400130ac:	call   0x14002157c
   1400130b1:	mov    rdx,rax
   1400130b4:	mov    ecx,r13d
   1400130b7:	test   rax,rax
   1400130ba:	setne  cl
   1400130bd:	test   ecx,ecx
   1400130bf:	jne    0x1400130cc
   1400130c1:	mov    ecx,0x80004005
   1400130c6:	call   0x140003dc0
   1400130cb:	int3   
   1400130cc:	mov    rax,QWORD PTR [rax]
   1400130cf:	mov    rcx,rdx
   1400130d2:	call   QWORD PTR [rax+0x18]
   1400130d5:	add    rax,0x18
   1400130d9:	mov    QWORD PTR [rbx+0x110],rax
   1400130e0:	mov    QWORD PTR [rbx+0xa8],r13
   1400130e7:	mov    QWORD PTR [rbx+0x118],r13
   1400130ee:	mov    QWORD PTR [rbx+0x120],r13
   1400130f5:	mov    QWORD PTR [rbx+0x128],r13
   1400130fc:	mov    QWORD PTR [rbx+0x130],r13
   140013103:	mov    DWORD PTR [rbx+0xc8],0x63
   14001310d:	xor    r9d,r9d
   140013110:	xor    r8d,r8d
   140013113:	xor    edx,edx
   140013115:	xor    ecx,ecx
   140013117:	call   0x14001ca44
   14001311c:	mov    rsi,rax
   14001311f:	call   0x14002157c
   140013124:	mov    rdx,rax
   140013127:	mov    ecx,r13d
   14001312a:	test   rax,rax
   14001312d:	setne  cl
   140013130:	test   ecx,ecx
   140013132:	jne    0x14001313f
   140013134:	mov    ecx,0x80004005
   140013139:	call   0x140003dc0
   14001313e:	int3   
   14001313f:	mov    rax,QWORD PTR [rax]
   140013142:	mov    rcx,rdx
   140013145:	call   QWORD PTR [rax+0x18]
   140013148:	lea    rdi,[rax+0x18]
   14001314c:	mov    QWORD PTR [rsp+0xa8],rdi
   140013154:	or     rbp,0xffffffffffffffff
   140013158:	test   rsi,rsi
   14001315b:	je     0x1400131a6
   14001315d:	test   rsi,0xffffffffffff0000
   140013164:	jne    0x140013192
   140013166:	movzx  esi,si
   140013169:	mov    ecx,esi
   14001316b:	call   0x140021f1c
   140013170:	test   rax,rax
   140013173:	je     0x1400131c4
   140013175:	mov    r8d,esi
   140013178:	mov    rdx,rax
   14001317b:	lea    rcx,[rsp+0xa8]
   140013183:	call   0x140007010
   140013188:	mov    rdi,QWORD PTR [rsp+0xa8]
   140013190:	jmp    0x1400131c4
   140013192:	xor    eax,eax
   140013194:	mov    rcx,rbp
   140013197:	mov    rdi,rsi
   14001319a:	repnz scas ax,WORD PTR es:[rdi]
   14001319d:	not    rcx
   1400131a0:	sub    rcx,0x1
   1400131a4:	jmp    0x1400131a9
   1400131a6:	mov    ecx,r13d
   1400131a9:	mov    r8d,ecx
   1400131ac:	mov    rdx,rsi
   1400131af:	lea    rcx,[rsp+0xa8]
   1400131b7:	call   0x140004590
   1400131bc:	mov    rdi,QWORD PTR [rsp+0xa8]
   1400131c4:	mov    QWORD PTR [rsp+0x58],r13
   1400131c9:	mov    QWORD PTR [rsp+0x50],r13
   1400131ce:	mov    QWORD PTR [rsp+0x48],r13
   1400131d3:	mov    DWORD PTR [rsp+0x40],r13d
   1400131d8:	mov    DWORD PTR [rsp+0x38],r13d
   1400131dd:	mov    DWORD PTR [rsp+0x30],r13d
   1400131e2:	mov    DWORD PTR [rsp+0x28],r13d
   1400131e7:	mov    DWORD PTR [rsp+0x20],0x80000000
   1400131ef:	lea    r9,[rip+0x3a082]        # 0x14004d278
   1400131f6:	mov    r8,rdi
   1400131f9:	xor    edx,edx
   1400131fb:	mov    rcx,rbx
   1400131fe:	call   0x14001b3d8
   140013203:	call   0x14001f2e8
   140013208:	mov    edx,0x97
   14001320d:	mov    rcx,QWORD PTR [rax+0x18]
   140013211:	call   QWORD PTR [rip+0x30659]        # 0x140043870
   140013217:	mov    rdx,rax
   14001321a:	lea    rcx,[rbx+0xb0]
   140013221:	call   0x1400241d4
   140013226:	nop
   140013227:	lea    rdx,[rdi-0x18]
   14001322b:	lock xadd DWORD PTR [rdx+0x10],ebp
   140013230:	add    ebp,0xffffffff
   140013233:	test   ebp,ebp
   140013235:	jg     0x140013241
   140013237:	mov    rcx,QWORD PTR [rdx]
   14001323a:	mov    rax,QWORD PTR [rcx]
   14001323d:	call   QWORD PTR [rax+0x8]
   140013240:	nop
   140013241:	mov    rax,rbx
   140013244:	mov    rbx,QWORD PTR [rsp+0xb0]
   14001324c:	add    rsp,0x70
   140013250:	pop    r13
   140013252:	pop    r12
   140013254:	pop    rdi
   140013255:	pop    rsi
   140013256:	pop    rbp
   140013257:	ret    
   140013258:	int3   
   140013259:	int3   
   14001325a:	int3   
   14001325b:	int3   
   14001325c:	int3   
   14001325d:	int3   
   14001325e:	int3   
   14001325f:	int3   
   140013260:	rex push rbp
   140013262:	sub    rsp,0x20
   140013266:	mov    rbp,rdx
   140013269:	mov    rcx,QWORD PTR [rbp+0xa0]
   140013270:	call   0x140019964
   140013275:	add    rsp,0x20
   140013279:	pop    rbp
   14001327a:	ret    
   14001327b:	int3   
   14001327c:	int3   
   14001327d:	int3   
   14001327e:	int3   
   14001327f:	int3   
   140013280:	rex push rbp
   140013282:	sub    rsp,0x20
   140013286:	mov    rbp,rdx
   140013289:	mov    rcx,QWORD PTR [rbp+0xa0]
   140013290:	add    rcx,0xb0
   140013297:	call   0x1400144b0
   14001329c:	add    rsp,0x20
   1400132a0:	pop    rbp
   1400132a1:	ret    
   1400132a2:	int3   
   1400132a3:	int3   
   1400132a4:	int3   
   1400132a5:	int3   
   1400132a6:	int3   
   1400132a7:	int3   
   1400132a8:	int3   
   1400132a9:	int3   
   1400132aa:	int3   
   1400132ab:	int3   
   1400132ac:	int3   
   1400132ad:	int3   
   1400132ae:	int3   
   1400132af:	int3   
   1400132b0:	rex push rbp
   1400132b2:	sub    rsp,0x20
   1400132b6:	mov    rbp,rdx
   1400132b9:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400132c0:	add    rcx,0xd0
   1400132c7:	call   0x140003de0
   1400132cc:	add    rsp,0x20
   1400132d0:	pop    rbp
   1400132d1:	ret    
   1400132d2:	int3   
   1400132d3:	int3   
   1400132d4:	int3   
   1400132d5:	int3   
   1400132d6:	int3   
   1400132d7:	int3   
   1400132d8:	int3   
   1400132d9:	int3   
   1400132da:	int3   
   1400132db:	int3   
   1400132dc:	int3   
   1400132dd:	int3   
   1400132de:	int3   
   1400132df:	int3   
   1400132e0:	rex push rbp
   1400132e2:	sub    rsp,0x20
   1400132e6:	mov    rbp,rdx
   1400132e9:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400132f0:	add    rcx,0xd8
   1400132f7:	call   0x140003de0
   1400132fc:	add    rsp,0x20
   140013300:	pop    rbp
   140013301:	ret    
   140013302:	int3   
   140013303:	int3   
   140013304:	int3   
   140013305:	int3   
   140013306:	int3   
   140013307:	int3   
   140013308:	int3   
   140013309:	int3   
   14001330a:	int3   
   14001330b:	int3   
   14001330c:	int3   
   14001330d:	int3   
   14001330e:	int3   
   14001330f:	int3   
   140013310:	rex push rbp
   140013312:	sub    rsp,0x20
   140013316:	mov    rbp,rdx
   140013319:	mov    rcx,QWORD PTR [rbp+0xa0]
   140013320:	add    rcx,0xe0
   140013327:	call   0x140003de0
   14001332c:	add    rsp,0x20
   140013330:	pop    rbp
   140013331:	ret    
   140013332:	int3   
   140013333:	int3   
   140013334:	int3   
   140013335:	int3   
   140013336:	int3   
   140013337:	int3   
   140013338:	int3   
   140013339:	int3   
   14001333a:	int3   
   14001333b:	int3   
   14001333c:	int3   
   14001333d:	int3   
   14001333e:	int3   
   14001333f:	int3   
   140013340:	rex push rbp
   140013342:	sub    rsp,0x20
   140013346:	mov    rbp,rdx
   140013349:	mov    rcx,QWORD PTR [rbp+0xa0]
   140013350:	add    rcx,0xe8
   140013357:	call   0x140003de0
   14001335c:	add    rsp,0x20
   140013360:	pop    rbp
   140013361:	ret    
   140013362:	int3   
   140013363:	int3   
   140013364:	int3   
   140013365:	int3   
   140013366:	int3   
   140013367:	int3   
   140013368:	int3   
   140013369:	int3   
   14001336a:	int3   
   14001336b:	int3   
   14001336c:	int3   
   14001336d:	int3   
   14001336e:	int3   
   14001336f:	int3   
   140013370:	rex push rbp
   140013372:	sub    rsp,0x20
   140013376:	mov    rbp,rdx
   140013379:	mov    rcx,QWORD PTR [rbp+0xa0]
   140013380:	add    rcx,0xf0
   140013387:	call   0x140003de0
   14001338c:	add    rsp,0x20
   140013390:	pop    rbp
   140013391:	ret    
   140013392:	int3   
   140013393:	int3   
   140013394:	int3   
   140013395:	int3   
   140013396:	int3   
   140013397:	int3   
   140013398:	int3   
   140013399:	int3   
   14001339a:	int3   
   14001339b:	int3   
   14001339c:	int3   
   14001339d:	int3   
   14001339e:	int3   
   14001339f:	int3   
   1400133a0:	rex push rbp
   1400133a2:	sub    rsp,0x20
   1400133a6:	mov    rbp,rdx
   1400133a9:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400133b0:	add    rcx,0xf8
   1400133b7:	call   0x140003de0
   1400133bc:	add    rsp,0x20
   1400133c0:	pop    rbp
   1400133c1:	ret    
   1400133c2:	int3   
   1400133c3:	int3   
   1400133c4:	int3   
   1400133c5:	int3   
   1400133c6:	int3   
   1400133c7:	int3   
   1400133c8:	int3   
   1400133c9:	int3   
   1400133ca:	int3   
   1400133cb:	int3   
   1400133cc:	int3   
   1400133cd:	int3   
   1400133ce:	int3   
   1400133cf:	int3   
   1400133d0:	rex push rbp
   1400133d2:	sub    rsp,0x20
   1400133d6:	mov    rbp,rdx
   1400133d9:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400133e0:	add    rcx,0x100
   1400133e7:	call   0x140003de0
   1400133ec:	add    rsp,0x20
   1400133f0:	pop    rbp
   1400133f1:	ret    
   1400133f2:	int3   
   1400133f3:	int3   
   1400133f4:	int3   
   1400133f5:	int3   
   1400133f6:	int3   
   1400133f7:	int3   
   1400133f8:	int3   
   1400133f9:	int3   
   1400133fa:	int3   
   1400133fb:	int3   
   1400133fc:	int3   
   1400133fd:	int3   
   1400133fe:	int3   
   1400133ff:	int3   
   140013400:	rex push rbp
   140013402:	sub    rsp,0x20
   140013406:	mov    rbp,rdx
   140013409:	mov    rcx,QWORD PTR [rbp+0xa0]
   140013410:	add    rcx,0x108
   140013417:	call   0x140003de0
   14001341c:	add    rsp,0x20
   140013420:	pop    rbp
   140013421:	ret    
   140013422:	int3   
   140013423:	int3   
   140013424:	int3   
   140013425:	int3   
   140013426:	int3   
   140013427:	int3   
   140013428:	int3   
   140013429:	int3   
   14001342a:	int3   
   14001342b:	int3   
   14001342c:	int3   
   14001342d:	int3   
   14001342e:	int3   
   14001342f:	int3   
   140013430:	rex push rbp
   140013432:	sub    rsp,0x20
   140013436:	mov    rbp,rdx
   140013439:	mov    rcx,QWORD PTR [rbp+0xa0]
   140013440:	add    rcx,0x110
   140013447:	call   0x140003de0
   14001344c:	add    rsp,0x20
   140013450:	pop    rbp
   140013451:	ret    
   140013452:	int3   
   140013453:	int3   
   140013454:	int3   
   140013455:	int3   
   140013456:	int3   
   140013457:	int3   
   140013458:	int3   
   140013459:	int3   
   14001345a:	int3   
   14001345b:	int3   
   14001345c:	int3   
   14001345d:	int3   
   14001345e:	int3   
   14001345f:	int3   
   140013460:	rex push rbp
   140013462:	sub    rsp,0x20
   140013466:	mov    rbp,rdx
   140013469:	lea    rcx,[rbp+0xa8]
   140013470:	call   0x140003de0
   140013475:	add    rsp,0x20
   140013479:	pop    rbp
   14001347a:	ret    
   14001347b:	int3   
   14001347c:	int3   
   14001347d:	int3   
   14001347e:	int3   
   14001347f:	int3   
   140013480:	rex push rbp
   140013482:	sub    rsp,0x20
   140013486:	mov    rbp,rdx
   140013489:	lea    rcx,[rbp+0xa8]
   140013490:	call   0x140003de0
   140013495:	add    rsp,0x20
   140013499:	pop    rbp
   14001349a:	ret    
   14001349b:	int3   
   14001349c:	int3   
   14001349d:	int3   
   14001349e:	int3   
   14001349f:	int3   
   1400134a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400134a5:	push   rdi
   1400134a6:	sub    rsp,0x20
   1400134aa:	mov    ebx,edx
   1400134ac:	mov    rdi,rcx
   1400134af:	call   0x1400134d0
   1400134b4:	test   bl,0x1
   1400134b7:	je     0x1400134c1
   1400134b9:	mov    rcx,rdi
   1400134bc:	call   0x14001490c
   1400134c1:	mov    rax,rdi
   1400134c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400134c9:	add    rsp,0x20
   1400134cd:	pop    rdi
   1400134ce:	ret    
   1400134cf:	int3   
   1400134d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400134d5:	push   rdi
   1400134d6:	sub    rsp,0x30
   1400134da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400134e3:	mov    QWORD PTR [rsp+0x48],rbx
   1400134e8:	mov    rbx,rcx
   1400134eb:	lea    rax,[rip+0x39e36]        # 0x14004d328
   1400134f2:	mov    QWORD PTR [rcx],rax
   1400134f5:	call   0x1400191b0
   1400134fa:	mov    rcx,QWORD PTR [rbx+0xa8]
   140013501:	test   rcx,rcx
   140013504:	je     0x14001351c
   140013506:	mov    rax,QWORD PTR [rcx]
   140013509:	mov    edx,0x1
   14001350e:	call   QWORD PTR [rax+0x8]
   140013511:	mov    QWORD PTR [rbx+0xa8],0x0
   14001351c:	mov    rdx,QWORD PTR [rbx+0x110]
   140013523:	sub    rdx,0x18
   140013527:	or     edi,0xffffffff
   14001352a:	mov    eax,edi
   14001352c:	lock xadd DWORD PTR [rdx+0x10],eax
   140013531:	add    eax,edi
   140013533:	test   eax,eax
   140013535:	jg     0x140013541
   140013537:	mov    rcx,QWORD PTR [rdx]
   14001353a:	mov    rax,QWORD PTR [rcx]
   14001353d:	call   QWORD PTR [rax+0x8]
   140013540:	nop
   140013541:	mov    rdx,QWORD PTR [rbx+0x108]
   140013548:	sub    rdx,0x18
   14001354c:	mov    eax,edi
   14001354e:	lock xadd DWORD PTR [rdx+0x10],eax
   140013553:	add    eax,0xffffffff
   140013556:	test   eax,eax
   140013558:	jg     0x140013564
   14001355a:	mov    rcx,QWORD PTR [rdx]
   14001355d:	mov    rax,QWORD PTR [rcx]
   140013560:	call   QWORD PTR [rax+0x8]
   140013563:	nop
   140013564:	mov    rdx,QWORD PTR [rbx+0x100]
   14001356b:	sub    rdx,0x18
   14001356f:	mov    eax,edi
   140013571:	lock xadd DWORD PTR [rdx+0x10],eax
   140013576:	add    eax,0xffffffff
   140013579:	test   eax,eax
   14001357b:	jg     0x140013587
   14001357d:	mov    rcx,QWORD PTR [rdx]
   140013580:	mov    rax,QWORD PTR [rcx]
   140013583:	call   QWORD PTR [rax+0x8]
   140013586:	nop
   140013587:	mov    rdx,QWORD PTR [rbx+0xf8]
   14001358e:	sub    rdx,0x18
   140013592:	mov    eax,edi
   140013594:	lock xadd DWORD PTR [rdx+0x10],eax
   140013599:	add    eax,0xffffffff
   14001359c:	test   eax,eax
   14001359e:	jg     0x1400135aa
   1400135a0:	mov    rcx,QWORD PTR [rdx]
   1400135a3:	mov    rax,QWORD PTR [rcx]
   1400135a6:	call   QWORD PTR [rax+0x8]
   1400135a9:	nop
   1400135aa:	mov    rdx,QWORD PTR [rbx+0xf0]
   1400135b1:	sub    rdx,0x18
   1400135b5:	mov    eax,edi
   1400135b7:	lock xadd DWORD PTR [rdx+0x10],eax
   1400135bc:	add    eax,0xffffffff
   1400135bf:	test   eax,eax
   1400135c1:	jg     0x1400135cd
   1400135c3:	mov    rcx,QWORD PTR [rdx]
   1400135c6:	mov    rax,QWORD PTR [rcx]
   1400135c9:	call   QWORD PTR [rax+0x8]
   1400135cc:	nop
   1400135cd:	mov    rdx,QWORD PTR [rbx+0xe8]
   1400135d4:	sub    rdx,0x18
   1400135d8:	mov    eax,edi
   1400135da:	lock xadd DWORD PTR [rdx+0x10],eax
   1400135df:	add    eax,0xffffffff
   1400135e2:	test   eax,eax
   1400135e4:	jg     0x1400135f0
   1400135e6:	mov    rcx,QWORD PTR [rdx]
   1400135e9:	mov    rax,QWORD PTR [rcx]
   1400135ec:	call   QWORD PTR [rax+0x8]
   1400135ef:	nop
   1400135f0:	mov    rdx,QWORD PTR [rbx+0xe0]
   1400135f7:	sub    rdx,0x18
   1400135fb:	mov    eax,edi
   1400135fd:	lock xadd DWORD PTR [rdx+0x10],eax
   140013602:	add    eax,0xffffffff
   140013605:	test   eax,eax
   140013607:	jg     0x140013613
   140013609:	mov    rcx,QWORD PTR [rdx]
   14001360c:	mov    rax,QWORD PTR [rcx]
   14001360f:	call   QWORD PTR [rax+0x8]
   140013612:	nop
   140013613:	mov    rdx,QWORD PTR [rbx+0xd8]
   14001361a:	sub    rdx,0x18
   14001361e:	mov    eax,edi
   140013620:	lock xadd DWORD PTR [rdx+0x10],eax
   140013625:	add    eax,0xffffffff
   140013628:	test   eax,eax
   14001362a:	jg     0x140013636
   14001362c:	mov    rcx,QWORD PTR [rdx]
   14001362f:	mov    rax,QWORD PTR [rcx]
   140013632:	call   QWORD PTR [rax+0x8]
   140013635:	nop
   140013636:	mov    rdx,QWORD PTR [rbx+0xd0]
   14001363d:	sub    rdx,0x18
   140013641:	lock xadd DWORD PTR [rdx+0x10],edi
   140013646:	add    edi,0xffffffff
   140013649:	test   edi,edi
   14001364b:	jg     0x140013657
   14001364d:	mov    rcx,QWORD PTR [rdx]
   140013650:	mov    rax,QWORD PTR [rcx]
   140013653:	call   QWORD PTR [rax+0x8]
   140013656:	nop
   140013657:	lea    rcx,[rbx+0xb0]
   14001365e:	lea    rax,[rip+0x3476b]        # 0x140047dd0
   140013665:	mov    QWORD PTR [rcx],rax
   140013668:	call   0x140024254
   14001366d:	nop
   14001366e:	mov    rcx,rbx
   140013671:	mov    rbx,QWORD PTR [rsp+0x48]
   140013676:	add    rsp,0x30
   14001367a:	pop    rdi
   14001367b:	jmp    0x140019964
   140013680:	rex push rbp
   140013682:	sub    rsp,0x20
   140013686:	mov    rbp,rdx
   140013689:	mov    rcx,QWORD PTR [rbp+0x40]
   14001368d:	call   0x140019964
   140013692:	add    rsp,0x20
   140013696:	pop    rbp
   140013697:	ret    
   140013698:	int3   
   140013699:	int3   
   14001369a:	int3   
   14001369b:	int3   
   14001369c:	int3   
   14001369d:	int3   
   14001369e:	int3   
   14001369f:	int3   
   1400136a0:	rex push rbp
   1400136a2:	sub    rsp,0x20
   1400136a6:	mov    rbp,rdx
   1400136a9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400136ad:	add    rcx,0xb0
   1400136b4:	call   0x1400144b0
   1400136b9:	add    rsp,0x20
   1400136bd:	pop    rbp
   1400136be:	ret    
   1400136bf:	int3   
   1400136c0:	rex push rbp
   1400136c2:	sub    rsp,0x20
   1400136c6:	mov    rbp,rdx
   1400136c9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400136cd:	add    rcx,0xd0
   1400136d4:	call   0x140003de0
   1400136d9:	add    rsp,0x20
   1400136dd:	pop    rbp
   1400136de:	ret    
   1400136df:	int3   
   1400136e0:	rex push rbp
   1400136e2:	sub    rsp,0x20
   1400136e6:	mov    rbp,rdx
   1400136e9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400136ed:	add    rcx,0xd8
   1400136f4:	call   0x140003de0
   1400136f9:	add    rsp,0x20
   1400136fd:	pop    rbp
   1400136fe:	ret    
   1400136ff:	int3   
   140013700:	rex push rbp
   140013702:	sub    rsp,0x20
   140013706:	mov    rbp,rdx
   140013709:	mov    rcx,QWORD PTR [rbp+0x40]
   14001370d:	add    rcx,0xe0
   140013714:	call   0x140003de0
   140013719:	add    rsp,0x20
   14001371d:	pop    rbp
   14001371e:	ret    
   14001371f:	int3   
   140013720:	rex push rbp
   140013722:	sub    rsp,0x20
   140013726:	mov    rbp,rdx
   140013729:	mov    rcx,QWORD PTR [rbp+0x40]
   14001372d:	add    rcx,0xe8
   140013734:	call   0x140003de0
   140013739:	add    rsp,0x20
   14001373d:	pop    rbp
   14001373e:	ret    
   14001373f:	int3   
   140013740:	rex push rbp
   140013742:	sub    rsp,0x20
   140013746:	mov    rbp,rdx
   140013749:	mov    rcx,QWORD PTR [rbp+0x40]
   14001374d:	add    rcx,0xf0
   140013754:	call   0x140003de0
   140013759:	add    rsp,0x20
   14001375d:	pop    rbp
   14001375e:	ret    
   14001375f:	int3   
   140013760:	rex push rbp
   140013762:	sub    rsp,0x20
   140013766:	mov    rbp,rdx
   140013769:	mov    rcx,QWORD PTR [rbp+0x40]
   14001376d:	add    rcx,0xf8
   140013774:	call   0x140003de0
   140013779:	add    rsp,0x20
   14001377d:	pop    rbp
   14001377e:	ret    
   14001377f:	int3   
   140013780:	rex push rbp
   140013782:	sub    rsp,0x20
   140013786:	mov    rbp,rdx
   140013789:	mov    rcx,QWORD PTR [rbp+0x40]
   14001378d:	add    rcx,0x100
   140013794:	call   0x140003de0
   140013799:	add    rsp,0x20
   14001379d:	pop    rbp
   14001379e:	ret    
   14001379f:	int3   
   1400137a0:	rex push rbp
   1400137a2:	sub    rsp,0x20
   1400137a6:	mov    rbp,rdx
   1400137a9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400137ad:	add    rcx,0x108
   1400137b4:	call   0x140003de0
   1400137b9:	add    rsp,0x20
   1400137bd:	pop    rbp
   1400137be:	ret    
   1400137bf:	int3   
   1400137c0:	rex push rbp
   1400137c2:	sub    rsp,0x20
   1400137c6:	mov    rbp,rdx
   1400137c9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400137cd:	add    rcx,0x110
   1400137d4:	call   0x140003de0
   1400137d9:	add    rsp,0x20
   1400137dd:	pop    rbp
   1400137de:	ret    
   1400137df:	int3   
   1400137e0:	lea    rax,[rip+0x39ae9]        # 0x14004d2d0
   1400137e7:	ret    
   1400137e8:	int3   
   1400137e9:	int3   
   1400137ea:	int3   
   1400137eb:	int3   
   1400137ec:	int3   
   1400137ed:	int3   
   1400137ee:	int3   
   1400137ef:	int3   
   1400137f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400137f5:	push   rsi
   1400137f6:	sub    rsp,0x20
   1400137fa:	mov    rsi,QWORD PTR [rcx+0x120]
   140013801:	mov    rbx,rcx
   140013804:	test   rsi,rsi
   140013807:	je     0x140013cf3
   14001380d:	or     rcx,0xffffffffffffffff
   140013811:	xor    eax,eax
   140013813:	mov    QWORD PTR [rsp+0x30],rbp
   140013818:	mov    QWORD PTR [rsp+0x38],rdi
   14001381d:	lea    rdi,[rip+0x37084]        # 0x14004a8a8
   140013824:	lea    rdx,[rip+0x3707d]        # 0x14004a8a8
   14001382b:	repnz scas ax,WORD PTR es:[rdi]
   14001382e:	not    rcx
   140013831:	lea    r8d,[rcx-0x1]
   140013835:	lea    rcx,[rbx+0xd0]
   14001383c:	call   0x140004590
   140013841:	call   0x14001f2e8
   140013846:	movzx  r9d,WORD PTR [rsi+0xc]
   14001384b:	mov    rdx,QWORD PTR [rax+0x10]
   14001384f:	lea    rcx,[rbx+0xd0]
   140013856:	mov    r8d,0x1392
   14001385c:	call   0x140006d10
   140013861:	mov    rsi,QWORD PTR [rbx+0xd0]
   140013868:	lea    rdi,[rip+0x37039]        # 0x14004a8a8
   14001386f:	mov    ecx,0x1
   140013874:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140013877:	jne    0x140013899
   140013879:	call   0x14001f2e8
   14001387e:	lea    rcx,[rbx+0xd0]
   140013885:	mov    r9w,0x409
   14001388a:	mov    rdx,QWORD PTR [rax+0x10]
   14001388e:	mov    r8d,0x1392
   140013894:	call   0x140006d10
   140013899:	mov    rsi,QWORD PTR [rbx+0x120]
   1400138a0:	or     rcx,0xffffffffffffffff
   1400138a4:	xor    eax,eax
   1400138a6:	lea    rdi,[rip+0x36ffb]        # 0x14004a8a8
   1400138ad:	lea    rdx,[rip+0x36ff4]        # 0x14004a8a8
   1400138b4:	repnz scas ax,WORD PTR es:[rdi]
   1400138b7:	not    rcx
   1400138ba:	lea    r8d,[rcx-0x1]
   1400138be:	lea    rcx,[rbx+0xd8]
   1400138c5:	call   0x140004590
   1400138ca:	call   0x14001f2e8
   1400138cf:	movzx  r9d,WORD PTR [rsi+0xc]
   1400138d4:	mov    rdx,QWORD PTR [rax+0x10]
   1400138d8:	lea    rcx,[rbx+0xd8]
   1400138df:	mov    r8d,0x1394
   1400138e5:	call   0x140006d10
   1400138ea:	mov    rsi,QWORD PTR [rbx+0xd8]
   1400138f1:	lea    rdi,[rip+0x36fb0]        # 0x14004a8a8
   1400138f8:	mov    ecx,0x1
   1400138fd:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140013900:	jne    0x140013922
   140013902:	call   0x14001f2e8
   140013907:	lea    rcx,[rbx+0xd8]
   14001390e:	mov    r9w,0x409
   140013913:	mov    rdx,QWORD PTR [rax+0x10]
   140013917:	mov    r8d,0x1394
   14001391d:	call   0x140006d10
   140013922:	mov    rsi,QWORD PTR [rbx+0x120]
   140013929:	or     rcx,0xffffffffffffffff
   14001392d:	xor    eax,eax
   14001392f:	lea    rdi,[rip+0x36f72]        # 0x14004a8a8
   140013936:	lea    rdx,[rip+0x36f6b]        # 0x14004a8a8
   14001393d:	repnz scas ax,WORD PTR es:[rdi]
   140013940:	not    rcx
   140013943:	lea    r8d,[rcx-0x1]
   140013947:	lea    rcx,[rbx+0xf0]
   14001394e:	call   0x140004590
   140013953:	call   0x14001f2e8
   140013958:	movzx  r9d,WORD PTR [rsi+0xc]
   14001395d:	mov    rdx,QWORD PTR [rax+0x10]
   140013961:	lea    rcx,[rbx+0xf0]
   140013968:	mov    r8d,0x13a6
   14001396e:	call   0x140006d10
   140013973:	mov    rsi,QWORD PTR [rbx+0xf0]
   14001397a:	lea    rdi,[rip+0x36f27]        # 0x14004a8a8
   140013981:	mov    ecx,0x1
   140013986:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140013989:	jne    0x1400139ab
   14001398b:	call   0x14001f2e8
   140013990:	lea    rcx,[rbx+0xf0]
   140013997:	mov    r9w,0x409
   14001399c:	mov    rdx,QWORD PTR [rax+0x10]
   1400139a0:	mov    r8d,0x13a6
   1400139a6:	call   0x140006d10
   1400139ab:	mov    rsi,QWORD PTR [rbx+0x120]
   1400139b2:	or     rcx,0xffffffffffffffff
   1400139b6:	xor    eax,eax
   1400139b8:	lea    rdi,[rip+0x36ee9]        # 0x14004a8a8
   1400139bf:	lea    rdx,[rip+0x36ee2]        # 0x14004a8a8
   1400139c6:	repnz scas ax,WORD PTR es:[rdi]
   1400139c9:	not    rcx
   1400139cc:	lea    r8d,[rcx-0x1]
   1400139d0:	lea    rcx,[rbx+0xf8]
   1400139d7:	call   0x140004590
   1400139dc:	call   0x14001f2e8
   1400139e1:	movzx  r9d,WORD PTR [rsi+0xc]
   1400139e6:	mov    rdx,QWORD PTR [rax+0x10]
   1400139ea:	lea    rcx,[rbx+0xf8]
   1400139f1:	mov    r8d,0x13a7
   1400139f7:	call   0x140006d10
   1400139fc:	mov    rsi,QWORD PTR [rbx+0xf8]
   140013a03:	lea    rdi,[rip+0x36e9e]        # 0x14004a8a8
   140013a0a:	mov    ecx,0x1
   140013a0f:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140013a12:	jne    0x140013a34
   140013a14:	call   0x14001f2e8
   140013a19:	lea    rcx,[rbx+0xf8]
   140013a20:	mov    r9w,0x409
   140013a25:	mov    rdx,QWORD PTR [rax+0x10]
   140013a29:	mov    r8d,0x13a7
   140013a2f:	call   0x140006d10
   140013a34:	mov    rsi,QWORD PTR [rbx+0x120]
   140013a3b:	or     rcx,0xffffffffffffffff
   140013a3f:	xor    eax,eax
   140013a41:	lea    rdi,[rip+0x36e60]        # 0x14004a8a8
   140013a48:	lea    rdx,[rip+0x36e59]        # 0x14004a8a8
   140013a4f:	repnz scas ax,WORD PTR es:[rdi]
   140013a52:	not    rcx
   140013a55:	lea    r8d,[rcx-0x1]
   140013a59:	lea    rcx,[rbx+0xe0]
   140013a60:	call   0x140004590
   140013a65:	call   0x14001f2e8
   140013a6a:	movzx  r9d,WORD PTR [rsi+0xc]
   140013a6f:	mov    rdx,QWORD PTR [rax+0x10]
   140013a73:	lea    rcx,[rbx+0xe0]
   140013a7a:	mov    r8d,0x1395
   140013a80:	call   0x140006d10
   140013a85:	mov    rsi,QWORD PTR [rbx+0xe0]
   140013a8c:	lea    rdi,[rip+0x36e15]        # 0x14004a8a8
   140013a93:	mov    ecx,0x1
   140013a98:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140013a9b:	jne    0x140013abd
   140013a9d:	call   0x14001f2e8
   140013aa2:	lea    rcx,[rbx+0xe0]
   140013aa9:	mov    r9w,0x409
   140013aae:	mov    rdx,QWORD PTR [rax+0x10]
   140013ab2:	mov    r8d,0x1395
   140013ab8:	call   0x140006d10
   140013abd:	mov    rsi,QWORD PTR [rbx+0x120]
   140013ac4:	or     rcx,0xffffffffffffffff
   140013ac8:	xor    eax,eax
   140013aca:	lea    rdi,[rip+0x36dd7]        # 0x14004a8a8
   140013ad1:	lea    rdx,[rip+0x36dd0]        # 0x14004a8a8
   140013ad8:	repnz scas ax,WORD PTR es:[rdi]
   140013adb:	not    rcx
   140013ade:	lea    r8d,[rcx-0x1]
   140013ae2:	lea    rcx,[rbx+0xe8]
   140013ae9:	call   0x140004590
   140013aee:	call   0x14001f2e8
   140013af3:	movzx  r9d,WORD PTR [rsi+0xc]
   140013af8:	mov    rdx,QWORD PTR [rax+0x10]
   140013afc:	lea    rcx,[rbx+0xe8]
   140013b03:	mov    r8d,0x1396
   140013b09:	call   0x140006d10
   140013b0e:	mov    rsi,QWORD PTR [rbx+0xe8]
   140013b15:	lea    rdi,[rip+0x36d8c]        # 0x14004a8a8
   140013b1c:	mov    ecx,0x1
   140013b21:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140013b24:	jne    0x140013b46
   140013b26:	call   0x14001f2e8
   140013b2b:	lea    rcx,[rbx+0xe8]
   140013b32:	mov    r9w,0x409
   140013b37:	mov    rdx,QWORD PTR [rax+0x10]
   140013b3b:	mov    r8d,0x1396
   140013b41:	call   0x140006d10
   140013b46:	mov    rsi,QWORD PTR [rbx+0x120]
   140013b4d:	or     rcx,0xffffffffffffffff
   140013b51:	xor    eax,eax
   140013b53:	lea    rdi,[rip+0x36d4e]        # 0x14004a8a8
   140013b5a:	lea    rdx,[rip+0x36d47]        # 0x14004a8a8
   140013b61:	repnz scas ax,WORD PTR es:[rdi]
   140013b64:	not    rcx
   140013b67:	lea    r8d,[rcx-0x1]
   140013b6b:	lea    rcx,[rbx+0x100]
   140013b72:	call   0x140004590
   140013b77:	call   0x14001f2e8
   140013b7c:	movzx  r9d,WORD PTR [rsi+0xc]
   140013b81:	mov    rdx,QWORD PTR [rax+0x10]
   140013b85:	lea    rcx,[rbx+0x100]
   140013b8c:	mov    r8d,0x1397
   140013b92:	call   0x140006d10
   140013b97:	mov    rsi,QWORD PTR [rbx+0x100]
   140013b9e:	lea    rdi,[rip+0x36d03]        # 0x14004a8a8
   140013ba5:	mov    ecx,0x1
   140013baa:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140013bad:	jne    0x140013bcf
   140013baf:	call   0x14001f2e8
   140013bb4:	lea    rcx,[rbx+0x100]
   140013bbb:	mov    r9w,0x409
   140013bc0:	mov    rdx,QWORD PTR [rax+0x10]
   140013bc4:	mov    r8d,0x1397
   140013bca:	call   0x140006d10
   140013bcf:	mov    rsi,QWORD PTR [rbx+0x120]
   140013bd6:	or     rcx,0xffffffffffffffff
   140013bda:	xor    eax,eax
   140013bdc:	lea    rdi,[rip+0x36cc5]        # 0x14004a8a8
   140013be3:	lea    rdx,[rip+0x36cbe]        # 0x14004a8a8
   140013bea:	repnz scas ax,WORD PTR es:[rdi]
   140013bed:	not    rcx
   140013bf0:	lea    r8d,[rcx-0x1]
   140013bf4:	lea    rcx,[rbx+0x108]
   140013bfb:	call   0x140004590
   140013c00:	call   0x14001f2e8
   140013c05:	movzx  r9d,WORD PTR [rsi+0xc]
   140013c0a:	mov    rdx,QWORD PTR [rax+0x10]
   140013c0e:	lea    rcx,[rbx+0x108]
   140013c15:	mov    r8d,0x1398
   140013c1b:	call   0x140006d10
   140013c20:	mov    rsi,QWORD PTR [rbx+0x108]
   140013c27:	lea    rdi,[rip+0x36c7a]        # 0x14004a8a8
   140013c2e:	mov    ecx,0x1
   140013c33:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140013c36:	jne    0x140013c58
   140013c38:	call   0x14001f2e8
   140013c3d:	lea    rcx,[rbx+0x108]
   140013c44:	mov    r9w,0x409
   140013c49:	mov    rdx,QWORD PTR [rax+0x10]
   140013c4d:	mov    r8d,0x1398
   140013c53:	call   0x140006d10
   140013c58:	mov    rsi,QWORD PTR [rbx+0x120]
   140013c5f:	or     rcx,0xffffffffffffffff
   140013c63:	xor    eax,eax
   140013c65:	lea    rdi,[rip+0x36c3c]        # 0x14004a8a8
   140013c6c:	lea    rdx,[rip+0x36c35]        # 0x14004a8a8
   140013c73:	repnz scas ax,WORD PTR es:[rdi]
   140013c76:	not    rcx
   140013c79:	lea    r8d,[rcx-0x1]
   140013c7d:	lea    rcx,[rbx+0x110]
   140013c84:	call   0x140004590
   140013c89:	call   0x14001f2e8
   140013c8e:	movzx  r9d,WORD PTR [rsi+0xc]
   140013c93:	mov    rdx,QWORD PTR [rax+0x10]
   140013c97:	lea    rcx,[rbx+0x110]
   140013c9e:	mov    r8d,0x1399
   140013ca4:	call   0x140006d10
   140013ca9:	mov    rsi,QWORD PTR [rbx+0x110]
   140013cb0:	lea    rdi,[rip+0x36bf1]        # 0x14004a8a8
   140013cb7:	mov    ecx,0x1
   140013cbc:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140013cbf:	mov    rdi,QWORD PTR [rsp+0x38]
   140013cc4:	jne    0x140013ce6
   140013cc6:	call   0x14001f2e8
   140013ccb:	lea    rcx,[rbx+0x110]
   140013cd2:	mov    r9w,0x409
   140013cd7:	mov    rdx,QWORD PTR [rax+0x10]
   140013cdb:	mov    r8d,0x1399
   140013ce1:	call   0x140006d10
   140013ce6:	mov    rcx,rbx
   140013ce9:	call   0x140013d00
   140013cee:	mov    rbp,QWORD PTR [rsp+0x30]
   140013cf3:	mov    rbx,QWORD PTR [rsp+0x40]
   140013cf8:	add    rsp,0x20
   140013cfc:	pop    rsi
   140013cfd:	ret    
   140013cfe:	int3   
   140013cff:	int3   
   140013d00:	rex push rbx
   140013d02:	sub    rsp,0x30
   140013d06:	mov    rax,QWORD PTR [rcx+0x128]
   140013d0d:	mov    rbx,rcx
   140013d10:	test   rax,rax
   140013d13:	je     0x140013fc4
   140013d19:	mov    ecx,DWORD PTR [rax]
   140013d1b:	mov    QWORD PTR [rsp+0x40],rsi
   140013d20:	mov    QWORD PTR [rsp+0x48],rdi
   140013d25:	xor    edi,edi
   140013d27:	test   cl,0x10
   140013d2a:	je     0x140013d35
   140013d2c:	test   cl,0x40
   140013d2f:	je     0x140013d35
   140013d31:	mov    esi,edi
   140013d33:	jmp    0x140013d3a
   140013d35:	mov    esi,0x1
   140013d3a:	cmp    DWORD PTR [rbx+0xc8],esi
   140013d40:	je     0x140013d66
   140013d42:	mov    rcx,QWORD PTR [rbx+0xb8]
   140013d49:	mov    edx,esi
   140013d4b:	call   QWORD PTR [rip+0x2fb4f]        # 0x1400438a0
   140013d51:	mov    rcx,rax
   140013d54:	call   0x140024184
   140013d59:	mov    DWORD PTR [rbx+0xc8],esi
   140013d5f:	mov    QWORD PTR [rbx+0xc0],rax
   140013d66:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013d6d:	mov    rcx,QWORD PTR [rcx+0x8]
   140013d71:	call   QWORD PTR [rip+0x2fb21]        # 0x140043898
   140013d77:	mov    rsi,QWORD PTR [rsp+0x40]
   140013d7c:	test   eax,eax
   140013d7e:	je     0x140013fbf
   140013d84:	data16 data16 xchg ax,ax
   140013d88:	data16 data16 xchg ax,ax
   140013d8c:	data16 data16 xchg ax,ax
   140013d90:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013d97:	mov    edx,edi
   140013d99:	mov    rcx,QWORD PTR [rcx+0x8]
   140013d9d:	call   QWORD PTR [rip+0x2faed]        # 0x140043890
   140013da3:	sub    eax,0x8003
   140013da8:	je     0x140013f5f
   140013dae:	sub    eax,0x1
   140013db1:	je     0x140013f07
   140013db7:	sub    eax,0x1
   140013dba:	je     0x140013e88
   140013dc0:	sub    eax,0x3
   140013dc3:	je     0x140013e40
   140013dc5:	cmp    eax,0x2
   140013dc8:	jne    0x140013fa3
   140013dce:	mov    rax,QWORD PTR [rbx+0x128]
   140013dd5:	mov    ecx,DWORD PTR [rax]
   140013dd7:	bt     ecx,0xb
   140013ddb:	jae    0x140013e1f
   140013ddd:	bt     ecx,0xa
   140013de1:	jae    0x140013dec
   140013de3:	lea    rax,[rbx+0xf8]
   140013dea:	jmp    0x140013df3
   140013dec:	lea    rax,[rbx+0xf0]
   140013df3:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013dfa:	mov    rax,QWORD PTR [rax]
   140013dfd:	mov    r9d,0x800a
   140013e03:	mov    rcx,QWORD PTR [rcx+0x8]
   140013e07:	mov    r8d,0x400
   140013e0d:	mov    edx,edi
   140013e0f:	mov    QWORD PTR [rsp+0x20],rax
   140013e14:	call   QWORD PTR [rip+0x2fa6e]        # 0x140043888
   140013e1a:	jmp    0x140013fa3
   140013e1f:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013e26:	mov    r8d,0x400
   140013e2c:	mov    edx,edi
   140013e2e:	mov    rcx,QWORD PTR [rcx+0x8]
   140013e32:	call   QWORD PTR [rip+0x2fa48]        # 0x140043880
   140013e38:	add    edi,0xffffffff
   140013e3b:	jmp    0x140013fa3
   140013e40:	mov    rax,QWORD PTR [rbx+0x128]
   140013e47:	test   BYTE PTR [rax],0x20
   140013e4a:	je     0x140013e55
   140013e4c:	lea    rax,[rbx+0xe8]
   140013e53:	jmp    0x140013e5c
   140013e55:	lea    rax,[rbx+0xe0]
   140013e5c:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013e63:	mov    rax,QWORD PTR [rax]
   140013e66:	mov    r9d,0x8008
   140013e6c:	mov    rcx,QWORD PTR [rcx+0x8]
   140013e70:	mov    r8d,0x400
   140013e76:	mov    edx,edi
   140013e78:	mov    QWORD PTR [rsp+0x20],rax
   140013e7d:	call   QWORD PTR [rip+0x2fa05]        # 0x140043888
   140013e83:	jmp    0x140013fa3
   140013e88:	mov    rax,QWORD PTR [rbx+0x128]
   140013e8f:	mov    ecx,DWORD PTR [rax]
   140013e91:	test   cl,0x1
   140013e94:	jne    0x140013ecc
   140013e96:	bt     ecx,0xd
   140013e9a:	jb     0x140013ecc
   140013e9c:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013ea3:	mov    rax,QWORD PTR [rbx+0x110]
   140013eaa:	mov    r9d,0x8005
   140013eb0:	mov    rcx,QWORD PTR [rcx+0x8]
   140013eb4:	mov    r8d,0x400
   140013eba:	mov    edx,edi
   140013ebc:	mov    QWORD PTR [rsp+0x20],rax
   140013ec1:	call   QWORD PTR [rip+0x2f9c1]        # 0x140043888
   140013ec7:	jmp    0x140013fa3
   140013ecc:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013ed3:	mov    r8d,0x400
   140013ed9:	mov    edx,edi
   140013edb:	mov    rcx,QWORD PTR [rcx+0x8]
   140013edf:	call   QWORD PTR [rip+0x2f99b]        # 0x140043880
   140013ee5:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013eec:	lea    edx,[rdi-0x1]
   140013eef:	mov    rcx,QWORD PTR [rcx+0x8]
   140013ef3:	mov    r8d,0x420
   140013ef9:	call   QWORD PTR [rip+0x2f981]        # 0x140043880
   140013eff:	add    edi,0xfffffffe
   140013f02:	jmp    0x140013fa3
   140013f07:	mov    rax,QWORD PTR [rbx+0x128]
   140013f0e:	bt     DWORD PTR [rax],0xd
   140013f12:	jae    0x140013f32
   140013f14:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013f1b:	mov    r8d,0x400
   140013f21:	mov    edx,edi
   140013f23:	mov    rcx,QWORD PTR [rcx+0x8]
   140013f27:	call   QWORD PTR [rip+0x2f953]        # 0x140043880
   140013f2d:	add    edi,0xffffffff
   140013f30:	jmp    0x140013fa3
   140013f32:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013f39:	mov    rax,QWORD PTR [rbx+0x108]
   140013f40:	mov    r9d,0x8004
   140013f46:	mov    rcx,QWORD PTR [rcx+0x8]
   140013f4a:	mov    r8d,0x400
   140013f50:	mov    edx,edi
   140013f52:	mov    QWORD PTR [rsp+0x20],rax
   140013f57:	call   QWORD PTR [rip+0x2f92b]        # 0x140043888
   140013f5d:	jmp    0x140013fa3
   140013f5f:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013f66:	mov    rax,QWORD PTR [rbx+0x100]
   140013f6d:	mov    r9d,0x8003
   140013f73:	mov    rcx,QWORD PTR [rcx+0x8]
   140013f77:	mov    r8d,0x480
   140013f7d:	mov    edx,edi
   140013f7f:	mov    QWORD PTR [rsp+0x20],rax
   140013f84:	call   QWORD PTR [rip+0x2f8fe]        # 0x140043888
   140013f8a:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013f91:	mov    rcx,QWORD PTR [rcx+0x8]
   140013f95:	mov    r8d,0x1
   140013f9b:	mov    edx,edi
   140013f9d:	call   QWORD PTR [rip+0x2f8d5]        # 0x140043878
   140013fa3:	mov    rcx,QWORD PTR [rbx+0xc0]
   140013faa:	add    edi,0x1
   140013fad:	mov    rcx,QWORD PTR [rcx+0x8]
   140013fb1:	call   QWORD PTR [rip+0x2f8e1]        # 0x140043898
   140013fb7:	cmp    edi,eax
   140013fb9:	jb     0x140013d90
   140013fbf:	mov    rdi,QWORD PTR [rsp+0x48]
   140013fc4:	add    rsp,0x30
   140013fc8:	pop    rbx
   140013fc9:	ret    
   140013fca:	int3   
   140013fcb:	int3   
   140013fcc:	int3   
   140013fcd:	int3   
   140013fce:	int3   
   140013fcf:	int3   
   140013fd0:	rex push rbx
   140013fd2:	push   rbp
   140013fd3:	push   r12
   140013fd5:	sub    rsp,0x400
   140013fdc:	mov    rax,QWORD PTR [rip+0x46f9d]        # 0x14005af80
   140013fe3:	xor    rax,rsp
   140013fe6:	mov    QWORD PTR [rsp+0x3f0],rax
   140013fee:	mov    rbp,rcx
   140013ff1:	mov    rcx,QWORD PTR [rcx+0x40]
   140013ff5:	mov    ebx,edx
   140013ff7:	mov    edx,0x3ee
   140013ffc:	call   QWORD PTR [rip+0x2f93e]        # 0x140043940
   140014002:	mov    rcx,QWORD PTR [rbp+0xa8]
   140014009:	xor    r12d,r12d
   14001400c:	test   rcx,rcx
   14001400f:	je     0x140014023
   140014011:	mov    rax,QWORD PTR [rcx]
   140014014:	lea    edx,[r12+0x1]
   140014019:	call   QWORD PTR [rax+0x8]
   14001401c:	mov    QWORD PTR [rbp+0xa8],r12
   140014023:	cmp    QWORD PTR [rbp+0x128],r12
   14001402a:	jne    0x140014033
   14001402c:	xor    eax,eax
   14001402e:	jmp    0x1400141af
   140014033:	test   ebx,ebx
   140014035:	mov    QWORD PTR [rsp+0x430],rdi
   14001403d:	je     0x1400141a2
   140014043:	mov    ecx,0x3e8
   140014048:	call   0x1400148c0
   14001404d:	test   rax,rax
   140014050:	mov    r11,rax
   140014053:	je     0x14001406d
   140014055:	lea    rax,[rip+0x3953c]        # 0x14004d598
   14001405c:	mov    QWORD PTR [r11+0x8],r12
   140014060:	mov    DWORD PTR [r11+0x10],r12d
   140014064:	mov    QWORD PTR [r11],rax
   140014067:	mov    DWORD PTR [r11+0x14],r12d
   14001406b:	jmp    0x140014070
   14001406d:	mov    r11,r12
   140014070:	mov    rax,QWORD PTR [rbp+0x40]
   140014074:	mov    QWORD PTR [rbp+0xa8],r11
   14001407b:	mov    QWORD PTR [r11+0x18],rax
   14001407f:	mov    rax,QWORD PTR [rbp+0x128]
   140014086:	mov    ecx,DWORD PTR [rax]
   140014088:	test   cl,0x20
   14001408b:	je     0x14001409e
   14001408d:	test   cl,0x40
   140014090:	je     0x14001409e
   140014092:	test   cl,0x10
   140014095:	je     0x14001409e
   140014097:	mov    eax,0x1
   14001409c:	jmp    0x1400140a1
   14001409e:	mov    eax,r12d
   1400140a1:	mov    edx,0x9f
   1400140a6:	mov    ecx,0x96
   1400140ab:	test   eax,eax
   1400140ad:	cmovne edx,ecx
   1400140b0:	mov    rcx,QWORD PTR [rbp+0xa8]
   1400140b7:	call   0x1400145c0
   1400140bc:	mov    rdi,QWORD PTR [rbp+0xa8]
   1400140c3:	cmp    QWORD PTR [rdi+0x8],r12
   1400140c7:	je     0x140014186
   1400140cd:	cmp    DWORD PTR [rdi+0x14],0x1
   1400140d1:	je     0x1400141a2
   1400140d7:	mov    QWORD PTR [rsp+0x428],rsi
   1400140df:	mov    DWORD PTR [rdi+0x14],0x1
   1400140e6:	mov    ebx,r12d
   1400140e9:	data16 xchg ax,ax
   1400140ec:	data16 data16 xchg ax,ax
   1400140f0:	lea    rdx,[rdi+0x20]
   1400140f4:	xor    ecx,ecx
   1400140f6:	call   QWORD PTR [rip+0x2f514]        # 0x140043610
   1400140fc:	add    ebx,0x1
   1400140ff:	test   eax,eax
   140014101:	jne    0x140014108
   140014103:	cmp    ebx,0xa
   140014106:	jl     0x1400140f0
   140014108:	cmp    ebx,0xa
   14001410b:	mov    rsi,QWORD PTR [rsp+0x428]
   140014113:	jne    0x14001411b
   140014115:	mov    DWORD PTR [rdi+0x14],r12d
   140014119:	jmp    0x140014182
   14001411b:	lea    rcx,[rsp+0x20]
   140014120:	xor    edx,edx
   140014122:	mov    r8d,0x3c8
   140014128:	call   0x14002ac20
   14001412d:	mov    DWORD PTR [rsp+0x20],0x3c8
   140014135:	call   0x14001f3b8
   14001413a:	test   rax,rax
   14001413d:	mov    rcx,rax
   140014140:	je     0x14001415b
   140014142:	mov    rax,QWORD PTR [rax]
   140014145:	call   QWORD PTR [rax+0xe8]
   14001414b:	test   rax,rax
   14001414e:	je     0x14001415b
   140014150:	mov    rax,QWORD PTR [rax+0x40]
   140014154:	mov    QWORD PTR [rsp+0x28],rax
   140014159:	jmp    0x140014160
   14001415b:	mov    QWORD PTR [rsp+0x28],r12
   140014160:	mov    eax,DWORD PTR [rdi+0x10]
   140014163:	lea    rdx,[rsp+0x20]
   140014168:	mov    ecx,0x4
   14001416d:	mov    DWORD PTR [rsp+0x30],eax
   140014171:	mov    DWORD PTR [rsp+0x350],0x3
   14001417c:	call   QWORD PTR [rip+0x2f48e]        # 0x140043610
   140014182:	test   eax,eax
   140014184:	jne    0x1400141a2
   140014186:	mov    rcx,QWORD PTR [rbp+0x40]
   14001418a:	xor    r9d,r9d
   14001418d:	mov    edx,0x3ee
   140014192:	mov    r8d,0x7d0
   140014198:	call   QWORD PTR [rip+0x2f79a]        # 0x140043938
   14001419e:	xor    eax,eax
   1400141a0:	jmp    0x1400141a7
   1400141a2:	mov    eax,0x1
   1400141a7:	mov    rdi,QWORD PTR [rsp+0x430]
   1400141af:	mov    rcx,QWORD PTR [rsp+0x3f0]
   1400141b7:	xor    rcx,rsp
   1400141ba:	call   0x140029b40
   1400141bf:	add    rsp,0x400
   1400141c6:	pop    r12
   1400141c8:	pop    rbp
   1400141c9:	pop    rbx
   1400141ca:	ret    
   1400141cb:	int3   
   1400141cc:	int3   
   1400141cd:	int3   
   1400141ce:	int3   
   1400141cf:	int3   
   1400141d0:	rex push rbx
   1400141d2:	sub    rsp,0x20
   1400141d6:	cmp    QWORD PTR [rcx+0x128],0x0
   1400141de:	mov    rbx,rcx
   1400141e1:	je     0x140014303
   1400141e7:	mov    rax,QWORD PTR [rcx+0x128]
   1400141ee:	shl    edx,0x7
   1400141f1:	mov    QWORD PTR [rsp+0x30],rdi
   1400141f6:	xor    edx,DWORD PTR [rax]
   1400141f8:	mov    edi,0x0
   1400141fd:	and    edx,0x80
   140014203:	xor    DWORD PTR [rax],edx
   140014205:	mov    rdx,QWORD PTR [rcx+0x128]
   14001420c:	mov    eax,edi
   14001420e:	test   BYTE PTR [rdx],0x80
   140014211:	cmovne eax,r8d
   140014215:	shl    eax,0x8
   140014218:	xor    eax,DWORD PTR [rdx]
   14001421a:	and    eax,0x100
   14001421f:	xor    DWORD PTR [rdx],eax
   140014221:	cmp    QWORD PTR [rcx+0x128],rdi
   140014228:	je     0x1400142a1
   14001422a:	call   0x140013d00
   14001422f:	mov    rax,QWORD PTR [rbx+0xa8]
   140014236:	test   rax,rax
   140014239:	je     0x140014240
   14001423b:	mov    ecx,DWORD PTR [rax+0x14]
   14001423e:	jmp    0x140014242
   140014240:	mov    ecx,edi
   140014242:	mov    rax,QWORD PTR [rbx+0x128]
   140014249:	mov    edx,DWORD PTR [rax]
   14001424b:	shr    edx,0x7
   14001424e:	and    edx,0x1
   140014251:	cmp    ecx,edx
   140014253:	je     0x14001425d
   140014255:	mov    rcx,rbx
   140014258:	call   0x140013fd0
   14001425d:	mov    r8,QWORD PTR [rbx+0xa8]
   140014264:	test   r8,r8
   140014267:	je     0x1400142a1
   140014269:	mov    rax,QWORD PTR [rbx+0x128]
   140014270:	mov    ecx,DWORD PTR [rax]
   140014272:	test   cl,cl
   140014274:	jns    0x1400142a1
   140014276:	test   cl,0x20
   140014279:	je     0x14001428a
   14001427b:	test   cl,0x40
   14001427e:	je     0x14001428a
   140014280:	test   cl,0x10
   140014283:	je     0x14001428a
   140014285:	mov    edi,0x1
   14001428a:	mov    edx,0x9f
   14001428f:	mov    eax,0x96
   140014294:	test   edi,edi
   140014296:	cmovne edx,eax
   140014299:	mov    rcx,r8
   14001429c:	call   0x1400146b0
   1400142a1:	mov    rax,QWORD PTR [rbx+0x128]
   1400142a8:	mov    rdi,QWORD PTR [rsp+0x30]
   1400142ad:	test   rax,rax
   1400142b0:	je     0x140014303
   1400142b2:	mov    r9d,DWORD PTR [rax]
   1400142b5:	lea    r8,[rip+0x39024]        # 0x14004d2e0
   1400142bc:	lea    rdx,[rip+0x3715d]        # 0x14004b420
   1400142c3:	shr    r9d,0x7
   1400142c7:	lea    rcx,[rip+0x4db72]        # 0x140061e40
   1400142ce:	and    r9d,0x1
   1400142d2:	call   0x1400222f4
   1400142d7:	mov    r11,QWORD PTR [rbx+0x128]
   1400142de:	lea    r8,[rip+0x39013]        # 0x14004d2f8
   1400142e5:	mov    r9d,DWORD PTR [r11]
   1400142e8:	lea    rdx,[rip+0x37131]        # 0x14004b420
   1400142ef:	lea    rcx,[rip+0x4db4a]        # 0x140061e40
   1400142f6:	shr    r9d,0x8
   1400142fa:	and    r9d,0x1
   1400142fe:	call   0x1400222f4
   140014303:	add    rsp,0x20
   140014307:	pop    rbx
   140014308:	ret    
   140014309:	int3   
   14001430a:	int3   
   14001430b:	int3   
   14001430c:	int3   
   14001430d:	int3   
   14001430e:	int3   
   14001430f:	int3   
   140014310:	rex push rbx
   140014312:	sub    rsp,0x30
   140014316:	cmp    rdx,0x96
   14001431d:	mov    rbx,rcx
   140014320:	je     0x14001432b
   140014322:	cmp    rdx,0x9f
   140014329:	jne    0x140014364
   14001432b:	sub    r8,0x203
   140014332:	je     0x140014343
   140014334:	sub    r8,0x1
   140014338:	je     0x14001436c
   14001433a:	cmp    r8,0x201
   140014341:	jne    0x140014364
   140014343:	mov    rcx,QWORD PTR [rcx+0x118]
   14001434a:	test   rcx,rcx
   14001434d:	je     0x140014364
   14001434f:	mov    edx,0x5dc
   140014354:	mov    rcx,QWORD PTR [rcx+0x40]
   140014358:	xor    r9d,r9d
   14001435b:	xor    r8d,r8d
   14001435e:	call   QWORD PTR [rip+0x2f684]        # 0x1400439e8
   140014364:	xor    eax,eax
   140014366:	add    rsp,0x30
   14001436a:	pop    rbx
   14001436b:	ret    
   14001436c:	mov    rcx,QWORD PTR [rcx+0x40]
   140014370:	call   QWORD PTR [rip+0x2f5ea]        # 0x140043960
   140014376:	test   eax,eax
   140014378:	jne    0x14001438a
   14001437a:	movabs rax,0x1
   140014384:	add    rsp,0x30
   140014388:	pop    rbx
   140014389:	ret    
   14001438a:	lea    rcx,[rsp+0x48]
   14001438f:	call   QWORD PTR [rip+0x2f4d3]        # 0x140043868
   140014395:	mov    r9d,DWORD PTR [rsp+0x4c]
   14001439a:	mov    r8d,DWORD PTR [rsp+0x48]
   14001439f:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400143a6:	mov    edx,0x108
   1400143ab:	mov    QWORD PTR [rsp+0x28],0x0
   1400143b4:	mov    QWORD PTR [rsp+0x20],rbx
   1400143b9:	call   0x140017084
   1400143be:	mov    rcx,QWORD PTR [rbx+0x130]
   1400143c5:	test   rcx,rcx
   1400143c8:	mov    r11d,eax
   1400143cb:	je     0x140014364
   1400143cd:	sub    r11d,0x8003
   1400143d4:	je     0x140014473
   1400143da:	sub    r11d,0x1
   1400143de:	je     0x14001446a
   1400143e4:	sub    r11d,0x1
   1400143e8:	je     0x14001445b
   1400143ea:	sub    r11d,0x3
   1400143ee:	je     0x14001442c
   1400143f0:	cmp    r11d,0x2
   1400143f4:	jne    0x140014494
   1400143fa:	mov    rdx,QWORD PTR [rbx+0x128]
   140014401:	mov    ecx,DWORD PTR [rdx]
   140014403:	not    ecx
   140014405:	xor    ecx,DWORD PTR [rdx]
   140014407:	and    ecx,0x400
   14001440d:	xor    DWORD PTR [rdx],ecx
   14001440f:	mov    rax,QWORD PTR [rbx+0x128]
   140014416:	mov    rcx,QWORD PTR [rbx+0x130]
   14001441d:	mov    edx,DWORD PTR [rax]
   14001441f:	shr    edx,0xa
   140014422:	and    edx,0x1
   140014425:	call   0x140009ec0
   14001442a:	jmp    0x140014494
   14001442c:	mov    rdx,QWORD PTR [rbx+0x128]
   140014433:	mov    ecx,DWORD PTR [rdx]
   140014435:	not    ecx
   140014437:	xor    ecx,DWORD PTR [rdx]
   140014439:	and    ecx,0x20
   14001443c:	xor    DWORD PTR [rdx],ecx
   14001443e:	mov    rax,QWORD PTR [rbx+0x128]
   140014445:	mov    rcx,QWORD PTR [rbx+0x130]
   14001444c:	mov    edx,DWORD PTR [rax]
   14001444e:	shr    edx,0x5
   140014451:	and    edx,0x1
   140014454:	call   0x140008cc0
   140014459:	jmp    0x140014494
   14001445b:	xor    r8d,r8d
   14001445e:	xor    edx,edx
   140014460:	mov    rcx,rbx
   140014463:	call   0x1400141d0
   140014468:	jmp    0x140014494
   14001446a:	xor    edx,edx
   14001446c:	call   0x1400092c0
   140014471:	jmp    0x140014494
   140014473:	mov    rcx,QWORD PTR [rbx+0x118]
   14001447a:	test   rcx,rcx
   14001447d:	je     0x140014494
   14001447f:	mov    rcx,QWORD PTR [rcx+0x40]
   140014483:	xor    r9d,r9d
   140014486:	xor    r8d,r8d
   140014489:	mov    edx,0x5dc
   14001448e:	call   QWORD PTR [rip+0x2f554]        # 0x1400439e8
   140014494:	mov    rcx,QWORD PTR [rbx+0x118]
   14001449b:	test   rcx,rcx
   14001449e:	je     0x140014364
   1400144a4:	mov    edx,0x87d3
   1400144a9:	jmp    0x140014354
   1400144ae:	int3   
   1400144af:	int3   
   1400144b0:	lea    rax,[rip+0x33919]        # 0x140047dd0
   1400144b7:	mov    QWORD PTR [rcx],rax
   1400144ba:	jmp    0x140024254
   1400144bf:	int3   
   1400144c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400144c5:	push   rdi
   1400144c6:	sub    rsp,0x20
   1400144ca:	lea    rax,[rip+0x338ff]        # 0x140047dd0
   1400144d1:	mov    ebx,edx
   1400144d3:	mov    rdi,rcx
   1400144d6:	mov    QWORD PTR [rcx],rax
   1400144d9:	call   0x140024254
   1400144de:	test   bl,0x1
   1400144e1:	je     0x1400144eb
   1400144e3:	mov    rcx,rdi
   1400144e6:	call   0x14001490c
   1400144eb:	mov    rax,rdi
   1400144ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400144f3:	add    rsp,0x20
   1400144f7:	pop    rdi
   1400144f8:	ret    
   1400144f9:	int3   
   1400144fa:	int3   
   1400144fb:	int3   
   1400144fc:	int3   
   1400144fd:	int3   
   1400144fe:	int3   
   1400144ff:	int3   
   140014500:	rex push rbx
   140014502:	sub    rsp,0x30
   140014506:	mov    rax,QWORD PTR [rip+0x46a73]        # 0x14005af80
   14001450d:	xor    rax,rsp
   140014510:	mov    QWORD PTR [rsp+0x20],rax
   140014515:	cmp    DWORD PTR [rcx+0x14],0x0
   140014519:	lea    rax,[rip+0x39078]        # 0x14004d598
   140014520:	mov    QWORD PTR [rsp+0x48],rbp
   140014525:	mov    QWORD PTR [rcx],rax
   140014528:	mov    ebp,edx
   14001452a:	mov    rbx,rcx
   14001452d:	je     0x140014581
   14001452f:	cmp    QWORD PTR [rcx+0x8],0x0
   140014534:	je     0x140014581
   140014536:	mov    QWORD PTR [rsp+0x50],rsi
   14001453b:	mov    QWORD PTR [rsp+0x58],rdi
   140014540:	xor    edi,edi
   140014542:	mov    DWORD PTR [rcx+0x14],edi
   140014545:	data16 data16 xchg ax,ax
   140014549:	data16 xchg ax,ax
   14001454c:	data16 data16 xchg ax,ax
   140014550:	lea    rdx,[rbx+0x20]
   140014554:	mov    ecx,0x2
   140014559:	add    edi,0x1
   14001455c:	call   QWORD PTR [rip+0x2f0ae]        # 0x140043610
   140014562:	test   eax,eax
   140014564:	jne    0x14001456b
   140014566:	cmp    edi,0xa
   140014569:	jl     0x140014550
   14001456b:	mov    rsi,QWORD PTR [rsp+0x50]
   140014570:	cmp    edi,0xa
   140014573:	mov    rdi,QWORD PTR [rsp+0x58]
   140014578:	jne    0x140014581
   14001457a:	mov    DWORD PTR [rbx+0x14],0x1
   140014581:	mov    rcx,QWORD PTR [rbx+0x8]
   140014585:	test   rcx,rcx
   140014588:	je     0x140014590
   14001458a:	call   QWORD PTR [rip+0x2f2d0]        # 0x140043860
   140014590:	test   bpl,0x1
   140014594:	mov    rbp,QWORD PTR [rsp+0x48]
   140014599:	je     0x1400145a3
   14001459b:	mov    rcx,rbx
   14001459e:	call   0x14001490c
   1400145a3:	mov    rax,rbx
   1400145a6:	mov    rcx,QWORD PTR [rsp+0x20]
   1400145ab:	xor    rcx,rsp
   1400145ae:	call   0x140029b40
   1400145b3:	add    rsp,0x30
   1400145b7:	pop    rbx
   1400145b8:	ret    
   1400145b9:	int3   
   1400145ba:	int3   
   1400145bb:	int3   
   1400145bc:	int3   
   1400145bd:	int3   
   1400145be:	int3   
   1400145bf:	int3   
   1400145c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400145c5:	push   rsi
   1400145c6:	sub    rsp,0x20
   1400145ca:	mov    ebx,edx
   1400145cc:	mov    rsi,rcx
   1400145cf:	call   0x14001f2e8
   1400145d4:	mov    rcx,QWORD PTR [rax+0x10]
   1400145d8:	movzx  edx,bx
   1400145db:	call   QWORD PTR [rip+0x2f347]        # 0x140043928
   1400145e1:	mov    DWORD PTR [rsi+0x10],ebx
   1400145e4:	test   rax,rax
   1400145e7:	mov    QWORD PTR [rsi+0x8],rax
   1400145eb:	jne    0x1400145f8
   1400145ed:	mov    rbx,QWORD PTR [rsp+0x38]
   1400145f2:	add    rsp,0x20
   1400145f6:	pop    rsi
   1400145f7:	ret    
   1400145f8:	call   0x14002157c
   1400145fd:	test   rax,rax
   140014600:	mov    rcx,rax
   140014603:	jne    0x140014610
   140014605:	mov    ecx,0x80004005
   14001460a:	call   0x140003dc0
   14001460f:	int3   
   140014610:	mov    rax,QWORD PTR [rax]
   140014613:	mov    QWORD PTR [rsp+0x30],rdi
   140014618:	call   QWORD PTR [rax+0x18]
   14001461b:	lea    rcx,[rsi+0x20]
   14001461f:	xor    edx,edx
   140014621:	mov    r8d,0x3c8
   140014627:	mov    rbx,rax
   14001462a:	call   0x14002ac20
   14001462f:	mov    rax,QWORD PTR [rsi+0x18]
   140014633:	lea    rcx,[rsi+0x48]
   140014637:	mov    QWORD PTR [rsi+0x28],rax
   14001463b:	mov    eax,DWORD PTR [rsi+0x10]
   14001463e:	lea    r8,[rbx+0x18]
   140014642:	mov    DWORD PTR [rsi+0x30],eax
   140014645:	mov    rax,QWORD PTR [rsi+0x8]
   140014649:	mov    edx,0x80
   14001464e:	mov    DWORD PTR [rsi+0x20],0x3c8
   140014655:	mov    DWORD PTR [rsi+0x38],0x8001
   14001465c:	mov    DWORD PTR [rsi+0x34],0x7
   140014663:	mov    QWORD PTR [rsi+0x40],rax
   140014667:	mov    DWORD PTR [rsi+0x3d4],0x4
   140014671:	call   0x14002a9a0
   140014676:	mov    rdx,rbx
   140014679:	or     eax,0xffffffff
   14001467c:	lock xadd DWORD PTR [rbx+0x10],eax
   140014681:	mov    rdi,QWORD PTR [rsp+0x30]
   140014686:	add    eax,0xffffffff
   140014689:	test   eax,eax
   14001468b:	jg     0x140014696
   14001468d:	mov    rcx,QWORD PTR [rbx]
   140014690:	mov    rax,QWORD PTR [rcx]
   140014693:	call   QWORD PTR [rax+0x8]
   140014696:	mov    eax,0x1
   14001469b:	mov    rbx,QWORD PTR [rsp+0x38]
   1400146a0:	add    rsp,0x20
   1400146a4:	pop    rsi
   1400146a5:	ret    
   1400146a6:	int3   
   1400146a7:	int3   
   1400146a8:	int3   
   1400146a9:	int3   
   1400146aa:	int3   
   1400146ab:	int3   
   1400146ac:	int3   
   1400146ad:	int3   
   1400146ae:	int3   
   1400146af:	int3   
   1400146b0:	rex push rbp
   1400146b2:	push   rdi
   1400146b3:	sub    rsp,0x28
   1400146b7:	cmp    DWORD PTR [rcx+0x14],0x1
   1400146bb:	mov    ebp,edx
   1400146bd:	mov    rdi,rcx
   1400146c0:	je     0x1400146ce
   1400146c2:	mov    eax,0x1
   1400146c7:	add    rsp,0x28
   1400146cb:	pop    rdi
   1400146cc:	pop    rbp
   1400146cd:	ret    
   1400146ce:	cmp    QWORD PTR [rcx+0x8],0x0
   1400146d3:	jne    0x1400146de
   1400146d5:	xor    eax,eax
   1400146d7:	add    rsp,0x28
   1400146db:	pop    rdi
   1400146dc:	pop    rbp
   1400146dd:	ret    
   1400146de:	mov    QWORD PTR [rsp+0x40],rbx
   1400146e3:	mov    QWORD PTR [rsp+0x48],rsi
   1400146e8:	mov    QWORD PTR [rsp+0x50],r12
   1400146ed:	mov    QWORD PTR [rsp+0x20],r13
   1400146f2:	call   0x14001f2e8
   1400146f7:	movzx  edx,bp
   1400146fa:	mov    rcx,QWORD PTR [rax+0x10]
   1400146fe:	call   QWORD PTR [rip+0x2f224]        # 0x140043928
   140014704:	mov    DWORD PTR [rdi+0x34],0x2
   14001470b:	xor    ebx,ebx
   14001470d:	mov    r13,rax
   140014710:	mov    QWORD PTR [rdi+0x40],rax
   140014714:	data16 data16 xchg ax,ax
   140014718:	data16 data16 xchg ax,ax
   14001471c:	data16 data16 xchg ax,ax
   140014720:	lea    rdx,[rdi+0x20]
   140014724:	mov    ecx,0x1
   140014729:	call   QWORD PTR [rip+0x2eee1]        # 0x140043610
   14001472f:	add    ebx,0x1
   140014732:	test   eax,eax
   140014734:	mov    esi,eax
   140014736:	jne    0x14001473d
   140014738:	cmp    ebx,0xa
   14001473b:	jl     0x140014720
   14001473d:	mov    rcx,QWORD PTR [rdi+0x8]
   140014741:	call   QWORD PTR [rip+0x2f119]        # 0x140043860
   140014747:	mov    r12,QWORD PTR [rsp+0x50]
   14001474c:	mov    rbx,QWORD PTR [rsp+0x40]
   140014751:	mov    QWORD PTR [rdi+0x8],r13
   140014755:	mov    r13,QWORD PTR [rsp+0x20]
   14001475a:	mov    eax,esi
   14001475c:	mov    rsi,QWORD PTR [rsp+0x48]
   140014761:	mov    DWORD PTR [rdi+0x10],ebp
   140014764:	add    rsp,0x28
   140014768:	pop    rdi
   140014769:	pop    rbp
   14001476a:	ret    
   14001476b:	int3   
   14001476c:	int3   
   14001476d:	int3   
   14001476e:	int3   
   14001476f:	int3   
   140014770:	mov    QWORD PTR [rsp+0x20],rbx
   140014775:	push   rdi
   140014776:	sub    rsp,0x30
   14001477a:	mov    rax,QWORD PTR [rip+0x467ff]        # 0x14005af80
   140014781:	xor    rax,rsp
   140014784:	mov    QWORD PTR [rsp+0x20],rax
   140014789:	cmp    DWORD PTR [rcx+0x14],0x0
   14001478d:	mov    rdi,r8
   140014790:	mov    rbx,rcx
   140014793:	je     0x140014801
   140014795:	cmp    QWORD PTR [rcx+0x8],0x0
   14001479a:	je     0x140014801
   14001479c:	test   rdx,rdx
   14001479f:	je     0x140014801
   1400147a1:	test   r8,r8
   1400147a4:	je     0x140014801
   1400147a6:	mov    DWORD PTR [rcx+0x38],0x8001
   1400147ad:	mov    DWORD PTR [rcx+0x34],0x11
   1400147b4:	mov    DWORD PTR [rcx+0x350],0x2710
   1400147be:	mov    r8,rdx
   1400147c1:	add    rcx,0x354
   1400147c8:	mov    edx,0x40
   1400147cd:	call   0x14002a9a0
   1400147d2:	lea    rcx,[rbx+0x150]
   1400147d9:	mov    r8,rdi
   1400147dc:	mov    edx,0x100
   1400147e1:	call   0x14002a9a0
   1400147e6:	lea    rdx,[rbx+0x20]
   1400147ea:	mov    ecx,0x1
   1400147ef:	mov    DWORD PTR [rbx+0x3d4],0x4
   1400147f9:	call   QWORD PTR [rip+0x2ee11]        # 0x140043610
   1400147ff:	jmp    0x140014803
   140014801:	xor    eax,eax
   140014803:	mov    rcx,QWORD PTR [rsp+0x20]
   140014808:	xor    rcx,rsp
   14001480b:	call   0x140029b40
   140014810:	mov    rbx,QWORD PTR [rsp+0x58]
   140014815:	add    rsp,0x30
   140014819:	pop    rdi
   14001481a:	ret    
   14001481b:	int3   
   14001481c:	int3   
   14001481d:	int3   
   14001481e:	int3   
   14001481f:	int3   
   140014820:	rex push rbx
   140014822:	sub    rsp,0x30
   140014826:	mov    rax,QWORD PTR [rip+0x46753]        # 0x14005af80
   14001482d:	xor    rax,rsp
   140014830:	mov    QWORD PTR [rsp+0x20],rax
   140014835:	cmp    DWORD PTR [rcx+0x14],0x0
   140014839:	mov    rbx,rcx
   14001483c:	jne    0x140014853
   14001483e:	xor    eax,eax
   140014840:	mov    rcx,QWORD PTR [rsp+0x20]
   140014845:	xor    rcx,rsp
   140014848:	call   0x140029b40
   14001484d:	add    rsp,0x30
   140014851:	pop    rbx
   140014852:	ret    
   140014853:	cmp    QWORD PTR [rcx+0x8],0x0
   140014858:	je     0x14001483e
   14001485a:	mov    DWORD PTR [rcx+0x34],0x10
   140014861:	add    rcx,0x150
   140014868:	xor    edx,edx
   14001486a:	mov    r8d,0x200
   140014870:	call   0x14002ac20
   140014875:	lea    rdx,[rbx+0x20]
   140014879:	mov    ecx,0x1
   14001487e:	mov    DWORD PTR [rbx+0x3d4],0x4
   140014888:	call   QWORD PTR [rip+0x2ed82]        # 0x140043610
   14001488e:	mov    rcx,QWORD PTR [rsp+0x20]
   140014893:	xor    rcx,rsp
   140014896:	call   0x140029b40
   14001489b:	add    rsp,0x30
   14001489f:	pop    rbx
   1400148a0:	ret    
   1400148a1:	int3   
   1400148a2:	int3   
   1400148a3:	int3   
   1400148a4:	sub    rsp,0x28
   1400148a8:	call   0x140021878
   1400148ad:	int3   
   1400148ae:	int3   
   1400148af:	int3   
   1400148b0:	mov    rax,QWORD PTR [rip+0x45749]        # 0x14005a000
   1400148b7:	mov    QWORD PTR [rip+0x45742],rcx        # 0x14005a000
   1400148be:	ret    
   1400148bf:	int3   
   1400148c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400148c5:	push   rdi
   1400148c6:	sub    rsp,0x20
   1400148ca:	mov    rdi,rcx
   1400148cd:	jmp    0x1400148e7
   1400148cf:	mov    rax,QWORD PTR [rip+0x4572a]        # 0x14005a000
   1400148d6:	test   rax,rax
   1400148d9:	je     0x1400148f4
   1400148db:	mov    rcx,rdi
   1400148de:	call   rax
   1400148e0:	test   eax,eax
   1400148e2:	je     0x1400148f4
   1400148e4:	mov    rcx,rdi
   1400148e7:	call   0x14002a110
   1400148ec:	test   rax,rax
   1400148ef:	mov    rbx,rax
   1400148f2:	je     0x1400148cf
   1400148f4:	mov    rax,rbx
   1400148f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400148fc:	add    rsp,0x20
   140014900:	pop    rdi
   140014901:	ret    
   140014902:	int3   
   140014903:	int3   
   140014904:	jmp    0x1400148c0
   140014909:	int3   
   14001490a:	int3   
   14001490b:	int3   
   14001490c:	jmp    0x14002a380
   140014911:	int3   
   140014912:	int3   
   140014913:	int3   
   140014914:	mov    QWORD PTR [rsp+0x8],rbx
   140014919:	push   rdi
   14001491a:	sub    rsp,0x20
   14001491e:	test   rcx,rcx
   140014921:	mov    r10,r9
   140014924:	jne    0x14001492c
   140014926:	call   0x1400218c0
   14001492b:	int3   
   14001492c:	mov    rax,QWORD PTR [rsp+0x60]
   140014931:	mov    ebx,0x1
   140014936:	test   rax,rax
   140014939:	je     0x140014947
   14001493b:	mov    QWORD PTR [rax],rcx
   14001493e:	mov    QWORD PTR [rax+0x8],r9
   140014942:	jmp    0x140014a89
   140014947:	mov    rax,QWORD PTR [rsp+0x58]
   14001494c:	cmp    rax,0x3e
   140014950:	ja     0x1400149fc
   140014956:	je     0x1400149dd
   14001495c:	sub    rax,0x38
   140014960:	je     0x1400149d5
   140014962:	sub    rax,rbx
   140014965:	je     0x1400149cd
   140014967:	sub    rax,rbx
   14001496a:	je     0x1400149c5
   14001496c:	sub    rax,rbx
   14001496f:	je     0x1400149bd
   140014971:	sub    rax,rbx
   140014974:	je     0x14001499e
   140014976:	cmp    rax,rbx
   140014979:	jne    0x140014a16
   14001497f:	mov    rdx,QWORD PTR [rsp+0x50]
   140014984:	test   rdx,rdx
   140014987:	jne    0x14001498f
   140014989:	call   0x1400218c0
   14001498e:	int3   
   14001498f:	mov    r8,QWORD PTR [rdx]
   140014992:	mov    rdx,QWORD PTR [rdx+0x8]
   140014996:	call   r10
   140014999:	jmp    0x140014a87
   14001499e:	mov    rdx,QWORD PTR [rsp+0x50]
   1400149a3:	test   rdx,rdx
   1400149a6:	jne    0x1400149ae
   1400149a8:	call   0x1400218c0
   1400149ad:	int3   
   1400149ae:	mov    r8,QWORD PTR [rdx]
   1400149b1:	mov    rdx,QWORD PTR [rdx+0x8]
   1400149b5:	call   r10
   1400149b8:	jmp    0x140014a89
   1400149bd:	call   r10
   1400149c0:	jmp    0x140014a87
   1400149c5:	call   r10
   1400149c8:	jmp    0x140014a89
   1400149cd:	call   r10
   1400149d0:	jmp    0x140014a87
   1400149d5:	call   r10
   1400149d8:	jmp    0x140014a89
   1400149dd:	mov    r8,QWORD PTR [rsp+0x50]
   1400149e2:	test   r8,r8
   1400149e5:	jne    0x1400149ed
   1400149e7:	call   0x1400218c0
   1400149ec:	int3   
   1400149ed:	mov    r9,QWORD PTR [r8]
   1400149f0:	mov    r8,QWORD PTR [r8+0x8]
   1400149f4:	call   r10
   1400149f7:	jmp    0x140014a89
   1400149fc:	sub    rax,0x3f
   140014a00:	je     0x140014a6d
   140014a02:	sub    rax,rbx
   140014a05:	je     0x140014a55
   140014a07:	sub    rax,rbx
   140014a0a:	je     0x140014a2e
   140014a0c:	sub    rax,rbx
   140014a0f:	je     0x140014a24
   140014a11:	cmp    rax,rbx
   140014a14:	je     0x140014a1a
   140014a16:	xor    eax,eax
   140014a18:	jmp    0x140014a8b
   140014a1a:	mov    rdx,QWORD PTR [rsp+0x50]
   140014a1f:	call   r10
   140014a22:	jmp    0x140014a87
   140014a24:	mov    rdx,QWORD PTR [rsp+0x50]
   140014a29:	call   r10
   140014a2c:	jmp    0x140014a89
   140014a2e:	mov    rdi,QWORD PTR [rsp+0x50]
   140014a33:	test   rdi,rdi
   140014a36:	jne    0x140014a3e
   140014a38:	call   0x1400218c0
   140014a3d:	int3   
   140014a3e:	mov    r8d,edx
   140014a41:	mov    rdx,rdi
   140014a44:	call   r10
   140014a47:	xor    eax,eax
   140014a49:	cmp    DWORD PTR [rdi+0x2c],eax
   140014a4c:	sete   al
   140014a4f:	and    DWORD PTR [rdi+0x2c],0x0
   140014a53:	jmp    0x140014a87
   140014a55:	mov    rdi,QWORD PTR [rsp+0x50]
   140014a5a:	test   rdi,rdi
   140014a5d:	jne    0x140014a65
   140014a5f:	call   0x1400218c0
   140014a64:	int3   
   140014a65:	mov    rdx,rdi
   140014a68:	call   r10
   140014a6b:	jmp    0x140014a47
   140014a6d:	mov    r8,QWORD PTR [rsp+0x50]
   140014a72:	test   r8,r8
   140014a75:	jne    0x140014a7d
   140014a77:	call   0x1400218c0
   140014a7c:	int3   
   140014a7d:	mov    r9,QWORD PTR [r8]
   140014a80:	mov    r8,QWORD PTR [r8+0x8]
   140014a84:	call   r10
   140014a87:	mov    ebx,eax
   140014a89:	mov    eax,ebx
   140014a8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140014a90:	add    rsp,0x20
   140014a94:	pop    rdi
   140014a95:	ret    
   140014a96:	int3   
   140014a97:	int3   
   140014a98:	mov    QWORD PTR [rsp+0x8],rbx
   140014a9d:	mov    QWORD PTR [rsp+0x10],rbp
   140014aa2:	mov    QWORD PTR [rsp+0x18],rsi
   140014aa7:	push   rdi
   140014aa8:	push   r12
   140014aaa:	push   r13
   140014aac:	sub    rsp,0x40
   140014ab0:	cmp    r8d,0xfffffffe
   140014ab4:	mov    r12,r9
   140014ab7:	mov    ebx,r8d
   140014aba:	mov    r13d,edx
   140014abd:	mov    rsi,rcx
   140014ac0:	jne    0x140014aff
   140014ac2:	call   0x14001f2e8
   140014ac7:	cmp    QWORD PTR [rax+0x68],0x0
   140014acc:	jne    0x140014ad4
   140014ace:	call   0x1400218c0
   140014ad3:	int3   
   140014ad4:	call   0x14001f2e8
   140014ad9:	mov    r9,r12
   140014adc:	mov    r8d,r13d
   140014adf:	mov    rcx,QWORD PTR [rax+0x68]
   140014ae3:	mov    rax,QWORD PTR [rsp+0x80]
   140014aeb:	mov    rdx,rsi
   140014aee:	mov    r10,QWORD PTR [rcx]
   140014af1:	mov    QWORD PTR [rsp+0x20],rax
   140014af6:	call   QWORD PTR [r10+0x8]
   140014afa:	jmp    0x140014bd2
   140014aff:	cmp    ebx,0xfffffffd
   140014b02:	jne    0x140014b8a
   140014b08:	xor    edi,edi
   140014b0a:	test   r9,r9
   140014b0d:	jne    0x140014b15
   140014b0f:	call   0x1400218c0
   140014b14:	int3   
   140014b15:	mov    rax,QWORD PTR [rcx]
   140014b18:	mov    rbp,QWORD PTR [r9+0x50]
   140014b1c:	call   QWORD PTR [rax+0x58]
   140014b1f:	test   rax,rax
   140014b22:	mov    rsi,rax
   140014b25:	je     0x140014b86
   140014b27:	test   edi,edi
   140014b29:	jne    0x140014b86
   140014b2b:	mov    rbx,QWORD PTR [rsi+0x8]
   140014b2f:	jmp    0x140014b77
   140014b31:	cmp    DWORD PTR [rbx+0xc],0x0
   140014b35:	je     0x140014b7e
   140014b37:	test   edi,edi
   140014b39:	jne    0x140014b7e
   140014b3b:	cmp    r13d,ecx
   140014b3e:	jne    0x140014b73
   140014b40:	test   rbp,rbp
   140014b43:	jne    0x140014b4c
   140014b45:	cmp    QWORD PTR [rbx],rbp
   140014b48:	je     0x140014b66
   140014b4a:	jmp    0x140014b73
   140014b4c:	mov    rdx,QWORD PTR [rbx]
   140014b4f:	test   rdx,rdx
   140014b52:	je     0x140014b73
   140014b54:	mov    r8d,0x10
   140014b5a:	mov    rcx,rbp
   140014b5d:	call   0x14002aa60
   140014b62:	test   eax,eax
   140014b64:	jne    0x140014b73
   140014b66:	mov    eax,DWORD PTR [rbx+0xc]
   140014b69:	mov    edi,0x1
   140014b6e:	mov    DWORD PTR [r12+0x8],eax
   140014b73:	add    rbx,0x10
   140014b77:	mov    ecx,DWORD PTR [rbx+0x8]
   140014b7a:	test   ecx,ecx
   140014b7c:	jne    0x140014b31
   140014b7e:	mov    rsi,QWORD PTR [rsi]
   140014b81:	test   rsi,rsi
   140014b84:	jne    0x140014b27
   140014b86:	mov    eax,edi
   140014b88:	jmp    0x140014bd2
   140014b8a:	cmp    ebx,0xffffffff
   140014b8d:	je     0x140014b9f
   140014b8f:	mov    eax,ebx
   140014b91:	movzx  ebx,bx
   140014b94:	shr    rax,0x10
   140014b98:	movzx  ebp,ax
   140014b9b:	test   ebp,ebp
   140014b9d:	jne    0x140014ba4
   140014b9f:	mov    ebp,0x111
   140014ba4:	mov    rax,QWORD PTR [rcx]
   140014ba7:	call   QWORD PTR [rax+0x50]
   140014baa:	jmp    0x140014bc7
   140014bac:	mov    rcx,QWORD PTR [rdi+0x8]
   140014bb0:	mov    r9d,r13d
   140014bb3:	mov    r8d,ebx
   140014bb6:	mov    edx,ebp
   140014bb8:	call   0x140016104
   140014bbd:	test   rax,rax
   140014bc0:	mov    r9,rax
   140014bc3:	jne    0x140014beb
   140014bc5:	call   QWORD PTR [rdi]
   140014bc7:	cmp    QWORD PTR [rax],0x0
   140014bcb:	mov    rdi,rax
   140014bce:	jne    0x140014bac
   140014bd0:	xor    eax,eax
   140014bd2:	mov    rbx,QWORD PTR [rsp+0x60]
   140014bd7:	mov    rbp,QWORD PTR [rsp+0x68]
   140014bdc:	mov    rsi,QWORD PTR [rsp+0x70]
   140014be1:	add    rsp,0x40
   140014be5:	pop    r13
   140014be7:	pop    r12
   140014be9:	pop    rdi
   140014bea:	ret    
   140014beb:	mov    rax,QWORD PTR [rsp+0x80]
   140014bf3:	mov    r8d,ebx
   140014bf6:	mov    edx,r13d
   140014bf9:	mov    QWORD PTR [rsp+0x30],rax
   140014bfe:	mov    rax,QWORD PTR [r9+0x10]
   140014c02:	mov    r9,QWORD PTR [r9+0x18]
   140014c06:	mov    QWORD PTR [rsp+0x28],rax
   140014c0b:	mov    rcx,rsi
   140014c0e:	mov    QWORD PTR [rsp+0x20],r12
   140014c13:	call   0x140014914
   140014c18:	jmp    0x140014bd2
   140014c1a:	int3   
   140014c1b:	int3   
   140014c1c:	mov    eax,0x80029c4a
   140014c21:	ret    
   140014c22:	int3   
   140014c23:	int3   
   140014c24:	lea    rax,[rip+0x2f1ad]        # 0x140043dd8
   140014c2b:	ret    
   140014c2c:	lea    rax,[rip+0x2f07d]        # 0x140043cb0
   140014c33:	ret    
   140014c34:	lea    rax,[rip+0x2f0dd]        # 0x140043d18
   140014c3b:	ret    
   140014c3c:	lea    rax,[rip+0x2f10d]        # 0x140043d50
   140014c43:	ret    
   140014c44:	rex push rbx
   140014c46:	sub    rsp,0x20
   140014c4a:	mov    rbx,rcx
   140014c4d:	mov    ecx,0xd
   140014c52:	call   0x14002431c
   140014c57:	mov    r11,QWORD PTR [rbx]
   140014c5a:	mov    rcx,rbx
   140014c5d:	call   QWORD PTR [r11+0x40]
   140014c61:	test   rax,rax
   140014c64:	je     0x140014c6e
   140014c66:	mov    rcx,rax
   140014c69:	call   0x14001e7c0
   140014c6e:	mov    ecx,0xd
   140014c73:	call   0x1400243b0
   140014c78:	mov    r11,QWORD PTR [rbx]
   140014c7b:	mov    edx,0x1
   140014c80:	mov    rcx,rbx
   140014c83:	add    rsp,0x20
   140014c87:	pop    rbx
   140014c88:	rex.WB jmp QWORD PTR [r11+0x8]
   140014c8c:	xor    eax,eax
   140014c8e:	ret    
   140014c8f:	int3   
   140014c90:	lea    rax,[rip+0x2f0d9]        # 0x140043d70
   140014c97:	ret    
   140014c98:	lea    rax,[rip+0x2f0f1]        # 0x140043d90
   140014c9f:	ret    
   140014ca0:	lea    rax,[rip+0x2f169]        # 0x140043e10
   140014ca7:	mov    QWORD PTR [rcx],rax
   140014caa:	xor    eax,eax
   140014cac:	mov    DWORD PTR [rcx+0x30],eax
   140014caf:	mov    DWORD PTR [rcx+0xc],eax
   140014cb2:	mov    DWORD PTR [rcx+0x8],eax
   140014cb5:	mov    QWORD PTR [rcx+0x38],rax
   140014cb9:	mov    QWORD PTR [rcx+0x18],rax
   140014cbd:	mov    QWORD PTR [rcx+0x10],rax
   140014cc1:	mov    QWORD PTR [rcx+0x20],rax
   140014cc5:	mov    DWORD PTR [rcx+0x2c],eax
   140014cc8:	mov    DWORD PTR [rcx+0x28],eax
   140014ccb:	mov    rax,rcx
   140014cce:	ret    
   140014ccf:	int3   
   140014cd0:	rex push rbx
   140014cd2:	sub    rsp,0x20
   140014cd6:	mov    rbx,rcx
   140014cd9:	call   0x14001f2e8
   140014cde:	mov    ecx,0x1
   140014ce3:	mov    QWORD PTR [rbx+0x38],rax
   140014ce7:	xor    eax,eax
   140014ce9:	mov    DWORD PTR [rbx+0x8],ecx
   140014cec:	mov    QWORD PTR [rbx+0x10],rax
   140014cf0:	mov    QWORD PTR [rbx+0x18],rax
   140014cf4:	mov    QWORD PTR [rbx+0x20],rax
   140014cf8:	mov    QWORD PTR [rbx+0x30],rax
   140014cfc:	mov    DWORD PTR [rbx+0x28],ecx
   140014cff:	mov    rax,rbx
   140014d02:	add    rsp,0x20
   140014d06:	pop    rbx
   140014d07:	ret    
   140014d08:	rex push rbx
   140014d0a:	sub    rsp,0x20
   140014d0e:	mov    rbx,rcx
   140014d11:	add    rcx,0x20
   140014d15:	mov    rax,QWORD PTR [rcx]
   140014d18:	test   rax,rax
   140014d1b:	je     0x140014d20
   140014d1d:	call   QWORD PTR [rax+0x38]
   140014d20:	and    QWORD PTR [rbx+0x38],0x0
   140014d25:	add    rsp,0x20
   140014d29:	pop    rbx
   140014d2a:	ret    
   140014d2b:	int3   
   140014d2c:	sub    rsp,0x28
   140014d30:	call   0x14001f2e8
   140014d35:	mov    edx,0x1
   140014d3a:	mov    rcx,QWORD PTR [rax+0x8]
   140014d3e:	mov    rax,QWORD PTR [rcx]
   140014d41:	add    rsp,0x28
   140014d45:	rex.W jmp QWORD PTR [rax+0x138]
   140014d4c:	sub    rsp,0x28
   140014d50:	call   0x14001f2e8
   140014d55:	or     edx,0xffffffff
   140014d58:	mov    rcx,QWORD PTR [rax+0x8]
   140014d5c:	mov    rax,QWORD PTR [rcx]
   140014d5f:	add    rsp,0x28
   140014d63:	rex.W jmp QWORD PTR [rax+0x138]
   140014d6a:	int3   
   140014d6b:	int3   
   140014d6c:	mov    QWORD PTR [rsp+0x8],rbx
   140014d71:	mov    QWORD PTR [rsp+0x10],rsi
   140014d76:	push   rdi
   140014d77:	sub    rsp,0x20
   140014d7b:	mov    rbx,rcx
   140014d7e:	mov    rcx,QWORD PTR [rcx+0x10]
   140014d82:	mov    edi,edx
   140014d84:	test   rcx,rcx
   140014d87:	je     0x140014dbf
   140014d89:	cmp    QWORD PTR [rbx+0x18],0x0
   140014d8e:	jne    0x140014e18
   140014d94:	mov    edx,DWORD PTR [rbx+0xc]
   140014d97:	cmp    edx,DWORD PTR [rbx+0x30]
   140014d9a:	jb     0x140014da2
   140014d9c:	call   0x1400218c0
   140014da1:	int3   
   140014da2:	mov    rcx,QWORD PTR [rcx+0x8]
   140014da6:	neg    edi
   140014da8:	sbb    r8d,r8d
   140014dab:	not    r8d
   140014dae:	and    r8d,0x3
   140014db2:	bts    r8d,0xa
   140014db7:	call   QWORD PTR [rip+0x2ea93]        # 0x140043850
   140014dbd:	jmp    0x140014e11
   140014dbf:	cmp    QWORD PTR [rbx+0x20],0x0
   140014dc4:	jne    0x140014dcc
   140014dc6:	call   0x1400218c0
   140014dcb:	int3   
   140014dcc:	test   edx,edx
   140014dce:	jne    0x140014e06
   140014dd0:	mov    rsi,QWORD PTR [rbx+0x20]
   140014dd4:	call   QWORD PTR [rip+0x2ea66]        # 0x140043840
   140014dda:	cmp    rax,QWORD PTR [rsi+0x40]
   140014dde:	jne    0x140014e06
   140014de0:	mov    rcx,QWORD PTR [rsi+0x40]
   140014de4:	call   QWORD PTR [rip+0x2ebe6]        # 0x1400439d0
   140014dea:	mov    rcx,rax
   140014ded:	call   0x140018e70
   140014df2:	xor    r9d,r9d
   140014df5:	xor    r8d,r8d
   140014df8:	mov    rcx,QWORD PTR [rax+0x40]
   140014dfc:	lea    edx,[r9+0x28]
   140014e00:	call   QWORD PTR [rip+0x2ebe2]        # 0x1400439e8
   140014e06:	mov    rcx,QWORD PTR [rbx+0x20]
   140014e0a:	mov    edx,edi
   140014e0c:	call   0x1400200c4
   140014e11:	mov    DWORD PTR [rbx+0x28],0x1
   140014e18:	mov    rbx,QWORD PTR [rsp+0x30]
   140014e1d:	mov    rsi,QWORD PTR [rsp+0x38]
   140014e22:	add    rsp,0x20
   140014e26:	pop    rdi
   140014e27:	ret    
   140014e28:	mov    QWORD PTR [rsp+0x8],rbx
   140014e2d:	push   rdi
   140014e2e:	sub    rsp,0x20
   140014e32:	mov    rbx,rcx
   140014e35:	mov    rcx,QWORD PTR [rcx+0x10]
   140014e39:	movsxd rdi,edx
   140014e3c:	test   rcx,rcx
   140014e3f:	je     0x140014e70
   140014e41:	cmp    QWORD PTR [rbx+0x18],0x0
   140014e46:	jne    0x140014eb4
   140014e48:	mov    edx,DWORD PTR [rbx+0xc]
   140014e4b:	cmp    edx,DWORD PTR [rbx+0x30]
   140014e4e:	jb     0x140014e56
   140014e50:	call   0x1400218c0
   140014e55:	int3   
   140014e56:	mov    rcx,QWORD PTR [rcx+0x8]
   140014e5a:	neg    edi
   140014e5c:	sbb    r8d,r8d
   140014e5f:	and    r8d,0x8
   140014e63:	bts    r8d,0xa
   140014e68:	call   QWORD PTR [rip+0x2e9ea]        # 0x140043858
   140014e6e:	jmp    0x140014eb4
   140014e70:	mov    rcx,QWORD PTR [rbx+0x20]
   140014e74:	test   rcx,rcx
   140014e77:	jne    0x140014e7f
   140014e79:	call   0x1400218c0
   140014e7e:	int3   
   140014e7f:	mov    rcx,QWORD PTR [rcx+0x40]
   140014e83:	xor    r9d,r9d
   140014e86:	xor    r8d,r8d
   140014e89:	mov    edx,0x87
   140014e8e:	call   QWORD PTR [rip+0x2eb54]        # 0x1400439e8
   140014e94:	bt     rax,0xd
   140014e99:	jae    0x140014eb4
   140014e9b:	mov    rcx,QWORD PTR [rbx+0x20]
   140014e9f:	mov    r8,rdi
   140014ea2:	xor    r9d,r9d
   140014ea5:	mov    rcx,QWORD PTR [rcx+0x40]
   140014ea9:	mov    edx,0xf1
   140014eae:	call   QWORD PTR [rip+0x2eb34]        # 0x1400439e8
   140014eb4:	mov    rbx,QWORD PTR [rsp+0x30]
   140014eb9:	add    rsp,0x20
   140014ebd:	pop    rdi
   140014ebe:	ret    
   140014ebf:	int3   
   140014ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140014ec5:	push   rdi
   140014ec6:	sub    rsp,0x30
   140014eca:	test   rdx,rdx
   140014ecd:	mov    rdi,rdx
   140014ed0:	mov    rbx,rcx
   140014ed3:	jne    0x140014edb
   140014ed5:	call   0x1400218c0
   140014eda:	int3   
   140014edb:	mov    rcx,QWORD PTR [rcx+0x10]
   140014edf:	test   rcx,rcx
   140014ee2:	je     0x140014f31
   140014ee4:	cmp    QWORD PTR [rbx+0x18],0x0
   140014ee9:	jne    0x140014f49
   140014eeb:	mov    edx,DWORD PTR [rbx+0xc]
   140014eee:	mov    rcx,QWORD PTR [rcx+0x8]
   140014ef2:	mov    r8d,0x400
   140014ef8:	call   QWORD PTR [rip+0x2e94a]        # 0x140043848
   140014efe:	mov    edx,DWORD PTR [rbx+0xc]
   140014f01:	and    eax,0xfffff6fb
   140014f06:	cmp    edx,DWORD PTR [rbx+0x30]
   140014f09:	jb     0x140014f11
   140014f0b:	call   0x1400218c0
   140014f10:	int3   
   140014f11:	mov    rcx,QWORD PTR [rbx+0x10]
   140014f15:	mov    r9d,DWORD PTR [rbx+0x8]
   140014f19:	bts    eax,0xa
   140014f1d:	mov    rcx,QWORD PTR [rcx+0x8]
   140014f21:	mov    r8d,eax
   140014f24:	mov    QWORD PTR [rsp+0x20],rdi
   140014f29:	call   QWORD PTR [rip+0x2e959]        # 0x140043888
   140014f2f:	jmp    0x140014f49
   140014f31:	mov    rcx,QWORD PTR [rbx+0x20]
   140014f35:	test   rcx,rcx
   140014f38:	jne    0x140014f40
   140014f3a:	call   0x1400218c0
   140014f3f:	int3   
   140014f40:	mov    rcx,QWORD PTR [rcx+0x40]
   140014f44:	call   0x1400243dc
   140014f49:	mov    rbx,QWORD PTR [rsp+0x40]
   140014f4e:	add    rsp,0x30
   140014f52:	pop    rdi
   140014f53:	ret    
   140014f54:	mov    rax,rsp
   140014f57:	mov    QWORD PTR [rax+0x8],rbx
   140014f5b:	mov    QWORD PTR [rax+0x10],rbp
   140014f5f:	mov    QWORD PTR [rax+0x18],rsi
   140014f63:	mov    QWORD PTR [rax+0x20],rdi
   140014f67:	push   r12
   140014f69:	sub    rsp,0xc0
   140014f70:	mov    rax,QWORD PTR [rip+0x46009]        # 0x14005af80
   140014f77:	xor    rax,rsp
   140014f7a:	mov    QWORD PTR [rsp+0xb0],rax
   140014f82:	call   QWORD PTR [rip+0x2e8a8]        # 0x140043830
   140014f88:	movsx  ebp,ax
   140014f8b:	shr    eax,0x10
   140014f8e:	cmp    ebp,0x4
   140014f91:	movsx  esi,ax
   140014f94:	jle    0x1400150a2
   140014f9a:	mov    edi,0x5
   140014f9f:	cmp    esi,edi
   140014fa1:	jle    0x1400150a2
   140014fa7:	lea    r8d,[rdi+0x1b]
   140014fab:	lea    rcx,[rsp+0x30]
   140014fb0:	cmp    ebp,r8d
   140014fb3:	cmovg  ebp,r8d
   140014fb7:	lea    eax,[rbp-0x4]
   140014fba:	lea    ebx,[rbp+0xf]
   140014fbd:	cdq    
   140014fbe:	sar    ebx,0x4
   140014fc1:	sub    eax,edx
   140014fc3:	mov    r12d,ebx
   140014fc6:	mov    edx,0xff
   140014fcb:	sar    eax,1
   140014fcd:	shl    r12d,0x4
   140014fd1:	add    r12d,eax
   140014fd4:	lea    eax,[rdi+0x7]
   140014fd7:	sub    r12d,ebp
   140014fda:	cmp    r12d,eax
   140014fdd:	cmovg  r12d,eax
   140014fe1:	cmp    esi,r8d
   140014fe4:	cmovg  esi,r8d
   140014fe8:	lea    r8d,[rdi+0x7b]
   140014fec:	call   0x14002ac20
   140014ff1:	movsxd r11,ebx
   140014ff4:	lea    eax,[rsi-0x6]
   140014ff7:	sar    eax,1
   140014ff9:	lea    r10,[rip+0x2eda0]        # 0x140043da0
   140015000:	movsxd rcx,eax
   140015003:	imul   rcx,r11
   140015007:	add    r11,r11
   14001500a:	lea    rdx,[rsp+rcx*2+0x30]
   14001500f:	movzx  r9d,BYTE PTR [r10]
   140015013:	mov    ecx,r12d
   140015016:	add    r10,0x1
   14001501a:	shl    r9w,cl
   14001501e:	not    r9w
   140015022:	movzx  eax,r9w
   140015026:	mov    BYTE PTR [rdx+0x1],r9b
   14001502a:	shr    ax,0x8
   14001502e:	mov    BYTE PTR [rdx],al
   140015030:	add    rdx,r11
   140015033:	sub    rdi,0x1
   140015037:	jne    0x14001500f
   140015039:	lea    r9d,[rdi+0x1]
   14001503d:	lea    rax,[rsp+0x30]
   140015042:	mov    edx,esi
   140015044:	mov    r8d,r9d
   140015047:	mov    ecx,ebp
   140015049:	mov    QWORD PTR [rsp+0x20],rax
   14001504e:	call   QWORD PTR [rip+0x2e0e4]        # 0x140043138
   140015054:	test   rax,rax
   140015057:	mov    QWORD PTR [rip+0x4bbe2],rax        # 0x140060c40
   14001505e:	jne    0x140015074
   140015060:	mov    edx,0x7fe3
   140015065:	xor    ecx,ecx
   140015067:	call   QWORD PTR [rip+0x2e7cb]        # 0x140043838
   14001506d:	mov    QWORD PTR [rip+0x4bbcc],rax        # 0x140060c40
   140015074:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001507c:	xor    rcx,rsp
   14001507f:	call   0x140029b40
   140015084:	lea    r11,[rsp+0xc0]
   14001508c:	mov    rbx,QWORD PTR [r11+0x10]
   140015090:	mov    rbp,QWORD PTR [r11+0x18]
   140015094:	mov    rsi,QWORD PTR [r11+0x20]
   140015098:	mov    rdi,QWORD PTR [r11+0x28]
   14001509c:	mov    rsp,r11
   14001509f:	pop    r12
   1400150a1:	ret    
   1400150a2:	call   0x1400218c0
   1400150a7:	int3   
   1400150a8:	rex push rbx
   1400150aa:	sub    rsp,0x30
   1400150ae:	mov    r8,QWORD PTR [rcx]
   1400150b1:	mov    eax,edx
   1400150b3:	xor    edx,edx
   1400150b5:	test   eax,eax
   1400150b7:	mov    rbx,rcx
   1400150ba:	setne  dl
   1400150bd:	call   QWORD PTR [r8+0x8]
   1400150c1:	cmp    QWORD PTR [rbx+0x10],0x0
   1400150c6:	je     0x140015119
   1400150c8:	cmp    QWORD PTR [rbx+0x18],0x0
   1400150cd:	jne    0x140015119
   1400150cf:	mov    eax,DWORD PTR [rbx+0x30]
   1400150d2:	cmp    DWORD PTR [rbx+0xc],eax
   1400150d5:	jb     0x1400150dd
   1400150d7:	call   0x1400218c0
   1400150dc:	int3   
   1400150dd:	mov    rax,QWORD PTR [rip+0x4bb5c]        # 0x140060c40
   1400150e4:	test   rax,rax
   1400150e7:	jne    0x1400150fa
   1400150e9:	call   0x140014f54
   1400150ee:	mov    rax,QWORD PTR [rip+0x4bb4b]        # 0x140060c40
   1400150f5:	test   rax,rax
   1400150f8:	je     0x140015119
   1400150fa:	mov    rcx,QWORD PTR [rbx+0x10]
   1400150fe:	mov    edx,DWORD PTR [rbx+0xc]
   140015101:	xor    r9d,r9d
   140015104:	mov    rcx,QWORD PTR [rcx+0x8]
   140015108:	mov    r8d,0x400
   14001510e:	mov    QWORD PTR [rsp+0x20],rax
   140015113:	call   QWORD PTR [rip+0x2e70f]        # 0x140043828
   140015119:	add    rsp,0x30
   14001511d:	pop    rbx
   14001511e:	ret    
   14001511f:	int3   
   140015120:	sub    rsp,0xd8
   140015127:	mov    rax,QWORD PTR [rip+0x45e52]        # 0x14005af80
   14001512e:	xor    rax,rsp
   140015131:	mov    QWORD PTR [rsp+0xc0],rax
   140015139:	lea    rcx,[rsp+0x24]
   14001513e:	xor    edx,edx
   140015140:	mov    r8d,0x90
   140015146:	call   0x14002ac20
   14001514b:	lea    rcx,[rsp+0x20]
   140015150:	mov    DWORD PTR [rsp+0x20],0x94
   140015158:	call   QWORD PTR [rip+0x2e35a]        # 0x1400434b8
   14001515e:	xor    eax,eax
   140015160:	cmp    DWORD PTR [rsp+0x30],0x2
   140015165:	sete   al
   140015168:	mov    rcx,QWORD PTR [rsp+0xc0]
   140015170:	xor    rcx,rsp
   140015173:	call   0x140029b40
   140015178:	add    rsp,0xd8
   14001517f:	ret    
   140015180:	mov    QWORD PTR [rsp+0x8],rbx
   140015185:	push   rdi
   140015186:	sub    rsp,0x20
   14001518a:	xor    ebx,ebx
   14001518c:	cmp    DWORD PTR [rip+0x4b186],ebx        # 0x140060318
   140015192:	je     0x1400151a3
   140015194:	cmp    QWORD PTR [rip+0x4b165],rbx        # 0x140060300
   14001519b:	setne  bl
   14001519e:	jmp    0x1400152e8
   1400151a3:	call   0x140015120
   1400151a8:	lea    rcx,[rip+0x2ee59]        # 0x140044008
   1400151af:	mov    DWORD PTR [rip+0x4b167],eax        # 0x14006031c
   1400151b5:	call   QWORD PTR [rip+0x2e2ed]        # 0x1400434a8
   1400151bb:	cmp    rax,rbx
   1400151be:	mov    rdi,rax
   1400151c1:	je     0x1400152ad
   1400151c7:	lea    rdx,[rip+0x2ee22]        # 0x140043ff0
   1400151ce:	mov    rcx,rax
   1400151d1:	call   QWORD PTR [rip+0x2e2d9]        # 0x1400434b0
   1400151d7:	cmp    rax,rbx
   1400151da:	mov    QWORD PTR [rip+0x4b0ff],rax        # 0x1400602e0
   1400151e1:	je     0x1400152ad
   1400151e7:	lea    rdx,[rip+0x2edea]        # 0x140043fd8
   1400151ee:	mov    rcx,rdi
   1400151f1:	call   QWORD PTR [rip+0x2e2b9]        # 0x1400434b0
   1400151f7:	cmp    rax,rbx
   1400151fa:	mov    QWORD PTR [rip+0x4b0e7],rax        # 0x1400602e8
   140015201:	je     0x1400152ad
   140015207:	lea    rdx,[rip+0x2edba]        # 0x140043fc8
   14001520e:	mov    rcx,rdi
   140015211:	call   QWORD PTR [rip+0x2e299]        # 0x1400434b0
   140015217:	cmp    rax,rbx
   14001521a:	mov    QWORD PTR [rip+0x4b0cf],rax        # 0x1400602f0
   140015221:	je     0x1400152ad
   140015227:	lea    rdx,[rip+0x2ed82]        # 0x140043fb0
   14001522e:	mov    rcx,rdi
   140015231:	call   QWORD PTR [rip+0x2e279]        # 0x1400434b0
   140015237:	cmp    rax,rbx
   14001523a:	mov    QWORD PTR [rip+0x4b0b7],rax        # 0x1400602f8
   140015241:	je     0x1400152ad
   140015243:	lea    rdx,[rip+0x2ed4e]        # 0x140043f98
   14001524a:	mov    rcx,rdi
   14001524d:	call   QWORD PTR [rip+0x2e25d]        # 0x1400434b0
   140015253:	cmp    rax,rbx
   140015256:	mov    QWORD PTR [rip+0x4b0ab],rax        # 0x140060308
   14001525d:	je     0x1400152ad
   14001525f:	lea    rdx,[rip+0x2ed1a]        # 0x140043f80
   140015266:	mov    rcx,rdi
   140015269:	call   QWORD PTR [rip+0x2e241]        # 0x1400434b0
   14001526f:	cmp    rax,rbx
   140015272:	mov    QWORD PTR [rip+0x4b097],rax        # 0x140060310
   140015279:	je     0x1400152ad
   14001527b:	cmp    DWORD PTR [rip+0x4b09b],ebx        # 0x14006031c
   140015281:	mov    rcx,rdi
   140015284:	lea    rdx,[rip+0x2ece5]        # 0x140043f70
   14001528b:	jne    0x140015294
   14001528d:	lea    rdx,[rip+0x2eccc]        # 0x140043f60
   140015294:	call   QWORD PTR [rip+0x2e216]        # 0x1400434b0
   14001529a:	cmp    rax,rbx
   14001529d:	mov    QWORD PTR [rip+0x4b05c],rax        # 0x140060300
   1400152a4:	je     0x1400152ad
   1400152a6:	mov    ebx,0x1
   1400152ab:	jmp    0x1400152de
   1400152ad:	mov    QWORD PTR [rip+0x4b02c],rbx        # 0x1400602e0
   1400152b4:	mov    QWORD PTR [rip+0x4b02d],rbx        # 0x1400602e8
   1400152bb:	mov    QWORD PTR [rip+0x4b02e],rbx        # 0x1400602f0
   1400152c2:	mov    QWORD PTR [rip+0x4b02f],rbx        # 0x1400602f8
   1400152c9:	mov    QWORD PTR [rip+0x4b030],rbx        # 0x140060300
   1400152d0:	mov    QWORD PTR [rip+0x4b031],rbx        # 0x140060308
   1400152d7:	mov    QWORD PTR [rip+0x4b032],rbx        # 0x140060310
   1400152de:	mov    DWORD PTR [rip+0x4b030],0x1        # 0x140060318
   1400152e8:	mov    eax,ebx
   1400152ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400152ef:	add    rsp,0x20
   1400152f3:	pop    rdi
   1400152f4:	ret    
   1400152f5:	int3   
   1400152f6:	int3   
   1400152f7:	int3   
   1400152f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400152fd:	push   rdi
   1400152fe:	sub    rsp,0x20
   140015302:	mov    edi,edx
   140015304:	mov    rbx,rcx
   140015307:	call   0x140015180
   14001530c:	test   eax,eax
   14001530e:	je     0x14001531d
   140015310:	mov    edx,edi
   140015312:	mov    rcx,rbx
   140015315:	call   QWORD PTR [rip+0x4afd5]        # 0x1400602f0
   14001531b:	jmp    0x140015359
   14001531d:	test   dil,0x3
   140015321:	jne    0x14001534f
   140015323:	cmp    DWORD PTR [rbx+0x8],0x0
   140015327:	jle    0x14001534b
   140015329:	cmp    DWORD PTR [rbx+0xc],0x0
   14001532d:	jle    0x14001534b
   14001532f:	xor    ecx,ecx
   140015331:	call   QWORD PTR [rip+0x2e621]        # 0x140043958
   140015337:	cmp    DWORD PTR [rbx],eax
   140015339:	jge    0x14001534b
   14001533b:	mov    ecx,0x1
   140015340:	call   QWORD PTR [rip+0x2e612]        # 0x140043958
   140015346:	cmp    DWORD PTR [rbx+0x4],eax
   140015349:	jl     0x14001534f
   14001534b:	xor    eax,eax
   14001534d:	jmp    0x140015359
   14001534f:	movabs rax,0x12340042
   140015359:	mov    rbx,QWORD PTR [rsp+0x30]
   14001535e:	add    rsp,0x20
   140015362:	pop    rdi
   140015363:	ret    
   140015364:	mov    QWORD PTR [rsp+0x8],rbx
   140015369:	push   rdi
   14001536a:	sub    rsp,0x50
   14001536e:	mov    ebx,edx
   140015370:	mov    rdi,rcx
   140015373:	call   0x140015180
   140015378:	test   eax,eax
   14001537a:	je     0x140015389
   14001537c:	mov    edx,ebx
   14001537e:	mov    rcx,rdi
   140015381:	call   QWORD PTR [rip+0x4af61]        # 0x1400602e8
   140015387:	jmp    0x1400153d6
   140015389:	test   bl,0x3
   14001538c:	je     0x14001539a
   14001538e:	movabs rax,0x12340042
   140015398:	jmp    0x1400153d6
   14001539a:	mov    rcx,rdi
   14001539d:	call   QWORD PTR [rip+0x2e50d]        # 0x1400438b0
   1400153a3:	mov    rcx,rdi
   1400153a6:	test   eax,eax
   1400153a8:	je     0x1400153b7
   1400153aa:	lea    rdx,[rsp+0x20]
   1400153af:	call   QWORD PTR [rip+0x2e46b]        # 0x140043820
   1400153b5:	jmp    0x1400153c2
   1400153b7:	lea    rdx,[rsp+0x3c]
   1400153bc:	call   QWORD PTR [rip+0x2e5fe]        # 0x1400439c0
   1400153c2:	test   eax,eax
   1400153c4:	je     0x1400153d4
   1400153c6:	lea    rcx,[rsp+0x3c]
   1400153cb:	mov    edx,ebx
   1400153cd:	call   0x1400152f8
   1400153d2:	jmp    0x1400153d6
   1400153d4:	xor    eax,eax
   1400153d6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400153db:	add    rsp,0x50
   1400153df:	pop    rdi
   1400153e0:	ret    
   1400153e1:	int3   
   1400153e2:	int3   
   1400153e3:	int3   
   1400153e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400153e9:	push   rdi
   1400153ea:	sub    rsp,0x40
   1400153ee:	mov    rbx,rdx
   1400153f1:	mov    rdi,rcx
   1400153f4:	call   0x140015180
   1400153f9:	test   eax,eax
   1400153fb:	je     0x140015440
   1400153fd:	mov    rdx,rbx
   140015400:	mov    rcx,rdi
   140015403:	call   QWORD PTR [rip+0x4aef7]        # 0x140060300
   140015409:	test   eax,eax
   14001540b:	mov    edi,eax
   14001540d:	je     0x14001543c
   14001540f:	cmp    DWORD PTR [rip+0x4af06],0x0        # 0x14006031c
   140015416:	jne    0x14001543c
   140015418:	cmp    DWORD PTR [rbx],0x68
   14001541b:	jb     0x14001543c
   14001541d:	lea    r8,[rbx+0x28]
   140015421:	mov    DWORD PTR [rsp+0x28],0x20
   140015429:	mov    QWORD PTR [rsp+0x20],r8
   14001542e:	or     r9d,0xffffffff
   140015432:	xor    edx,edx
   140015434:	xor    ecx,ecx
   140015436:	call   QWORD PTR [rip+0x2e08c]        # 0x1400434c8
   14001543c:	mov    eax,edi
   14001543e:	jmp    0x1400154bf
   140015440:	cmp    rdi,0x12340042
   140015447:	jne    0x1400154bd
   140015449:	test   rbx,rbx
   14001544c:	je     0x1400154bd
   14001544e:	cmp    DWORD PTR [rbx],0x28
   140015451:	jb     0x1400154bd
   140015453:	xor    edx,edx
   140015455:	lea    r8,[rsp+0x30]
   14001545a:	xor    r9d,r9d
   14001545d:	lea    ecx,[rdx+0x30]
   140015460:	call   QWORD PTR [rip+0x2e3b2]        # 0x140043818
   140015466:	test   eax,eax
   140015468:	je     0x1400154bd
   14001546a:	and    DWORD PTR [rbx+0x4],0x0
   14001546e:	and    DWORD PTR [rbx+0x8],0x0
   140015472:	xor    ecx,ecx
   140015474:	call   QWORD PTR [rip+0x2e4de]        # 0x140043958
   14001547a:	mov    edi,0x1
   14001547f:	mov    ecx,edi
   140015481:	mov    DWORD PTR [rbx+0xc],eax
   140015484:	call   QWORD PTR [rip+0x2e4ce]        # 0x140043958
   14001548a:	cmp    DWORD PTR [rbx],0x68
   14001548d:	mov    DWORD PTR [rbx+0x24],edi
   140015490:	movdqu xmm0,XMMWORD PTR [rsp+0x30]
   140015496:	movdqu XMMWORD PTR [rbx+0x14],xmm0
   14001549b:	mov    DWORD PTR [rbx+0x10],eax
   14001549e:	jb     0x14001543c
   1400154a0:	lea    rcx,[rbx+0x28]
   1400154a4:	mov    DWORD PTR [rsp+0x28],0x20
   1400154ac:	lea    r8,[rip+0x2eb65]        # 0x140044018
   1400154b3:	mov    QWORD PTR [rsp+0x20],rcx
   1400154b8:	jmp    0x14001542e
   1400154bd:	xor    eax,eax
   1400154bf:	mov    rbx,QWORD PTR [rsp+0x50]
   1400154c4:	add    rsp,0x40
   1400154c8:	pop    rdi
   1400154c9:	ret    
   1400154ca:	int3   
   1400154cb:	int3   
   1400154cc:	mov    rax,rsp
   1400154cf:	mov    QWORD PTR [rax+0x10],rbx
   1400154d3:	mov    QWORD PTR [rax+0x18],rbp
   1400154d7:	push   rsi
   1400154d8:	push   rdi
   1400154d9:	push   r12
   1400154db:	push   r13
   1400154dd:	push   r15
   1400154df:	sub    rsp,0xd0
   1400154e6:	and    WORD PTR [rax-0x48],0x0
   1400154eb:	test   rcx,rcx
   1400154ee:	mov    r13d,edx
   1400154f1:	mov    rbp,rcx
   1400154f4:	jne    0x140015500
   1400154f6:	mov    eax,0x80070057
   1400154fb:	jmp    0x140015d28
   140015500:	mov    rdi,QWORD PTR [rsp+0x128]
   140015508:	test   rdi,rdi
   14001550b:	jne    0x140015517
   14001550d:	mov    eax,0x80020008
   140015512:	jmp    0x140015d28
   140015517:	mov    r8d,DWORD PTR [rdi+0x10]
   14001551b:	cmp    r8d,0x5
   14001551f:	jbe    0x14001552b
   140015521:	mov    eax,0x8002000e
   140015526:	jmp    0x140015d28
   14001552b:	xor    r9d,r9d
   14001552e:	cmp    DWORD PTR [rdi+0x14],r9d
   140015532:	lea    r15d,[r9+0x1]
   140015536:	jbe    0x140015561
   140015538:	mov    r10,QWORD PTR [rdi+0x8]
   14001553c:	cmp    DWORD PTR [r10],r8d
   14001553f:	jae    0x140015521
   140015541:	mov    rax,QWORD PTR [rdi]
   140015544:	lea    rcx,[r9+r9*2]
   140015548:	add    r9d,r15d
   14001554b:	lea    rdx,[rax+rcx*8]
   14001554f:	movsxd rax,DWORD PTR [r10]
   140015552:	add    r10,0x4
   140015556:	cmp    r9d,DWORD PTR [rdi+0x14]
   14001555a:	mov    QWORD PTR [rsp+rax*8+0x50],rdx
   14001555f:	jb     0x14001553c
   140015561:	cmp    r9d,r8d
   140015564:	jae    0x14001558b
   140015566:	mov    rax,QWORD PTR [rdi]
   140015569:	lea    rcx,[r9+r9*2]
   14001556d:	lea    rdx,[rax+rcx*8]
   140015571:	mov    eax,r8d
   140015574:	sub    eax,r9d
   140015577:	add    r9d,r15d
   14001557a:	sub    eax,r15d
   14001557d:	mov    QWORD PTR [rsp+rax*8+0x50],rdx
   140015582:	add    rdx,0x18
   140015586:	cmp    r9d,r8d
   140015589:	jb     0x140015571
   14001558b:	mov    rax,QWORD PTR [rsp+0x140]
   140015593:	lea    r12,[rsp+0x100]
   14001559b:	lea    rsi,[rsp+0xb0]
   1400155a3:	test   rax,rax
   1400155a6:	lea    rcx,[rsp+0x78]
   1400155ab:	mov    ebx,0x80020003
   1400155b0:	cmovne r12,rax
   1400155b4:	mov    rax,QWORD PTR [rsp+0x130]
   1400155bc:	test   rax,rax
   1400155bf:	cmovne rsi,rax
   1400155c3:	call   QWORD PTR [rip+0x2dfff]        # 0x1400435c8
   1400155c9:	lea    r11d,[r13+0x139a]
   1400155d0:	cmp    r11d,0x12
   1400155d4:	ja     0x140015d1b
   1400155da:	lea    rdx,[rip+0xfffffffffffeaa1f]        # 0x140000000
   1400155e1:	movsxd rax,r11d
   1400155e4:	mov    ecx,DWORD PTR [rdx+rax*4+0x15d44]
   1400155eb:	movzx  eax,WORD PTR [rsp+0x120]
   1400155f3:	add    rcx,rdx
   1400155f6:	jmp    rcx
   1400155f8:	cmp    DWORD PTR [rdi+0x10],r15d
   1400155fc:	jne    0x140015ca5
   140015602:	mov    rcx,QWORD PTR [rsp+0x50]
   140015607:	lea    rdx,[rsp+0x30]
   14001560c:	mov    rax,QWORD PTR [rcx]
   14001560f:	mov    QWORD PTR [rdx],rax
   140015612:	mov    rax,QWORD PTR [rcx+0x8]
   140015616:	mov    QWORD PTR [rdx+0x8],rax
   14001561a:	mov    rax,QWORD PTR [rcx+0x10]
   14001561e:	mov    rcx,rbp
   140015621:	mov    QWORD PTR [rdx+0x10],rax
   140015625:	mov    rax,QWORD PTR [rbp+0x0]
   140015629:	lea    rdx,[rsp+0x30]
   14001562e:	call   QWORD PTR [rax+0xc8]
   140015634:	jmp    0x140015c9b
   140015639:	cmp    DWORD PTR [rdi+0x10],0x2
   14001563d:	jne    0x140015ca5
   140015643:	mov    rax,QWORD PTR [rsp+0x50]
   140015648:	cmp    WORD PTR [rax],0x3
   14001564c:	je     0x140015673
   14001564e:	lea    rcx,[rsp+0x78]
   140015653:	mov    r9w,0x3
   140015658:	xor    r8d,r8d
   14001565b:	mov    rdx,rax
   14001565e:	call   QWORD PTR [rip+0x2df5c]        # 0x1400435c0
   140015664:	test   eax,eax
   140015666:	mov    ebx,eax
   140015668:	js     0x140015925
   14001566e:	lea    rax,[rsp+0x78]
   140015673:	mov    rcx,QWORD PTR [rsp+0x58]
   140015678:	mov    edi,DWORD PTR [rax+0x8]
   14001567b:	cmp    WORD PTR [rcx],0x3
   14001567f:	je     0x1400156a6
   140015681:	mov    rdx,rcx
   140015684:	lea    rcx,[rsp+0x78]
   140015689:	mov    r9w,0x3
   14001568e:	xor    r8d,r8d
   140015691:	call   QWORD PTR [rip+0x2df29]        # 0x1400435c0
   140015697:	test   eax,eax
   140015699:	mov    ebx,eax
   14001569b:	js     0x140015c54
   1400156a1:	lea    rcx,[rsp+0x78]
   1400156a6:	mov    r8d,DWORD PTR [rcx+0x8]
   1400156aa:	mov    rax,QWORD PTR [rbp+0x0]
   1400156ae:	mov    r9,rsi
   1400156b1:	mov    edx,edi
   1400156b3:	mov    rcx,rbp
   1400156b6:	call   QWORD PTR [rax+0xc0]
   1400156bc:	jmp    0x140015c9b
   1400156c1:	cmp    DWORD PTR [rdi+0x10],0x2
   1400156c5:	jne    0x140015ca5
   1400156cb:	mov    rdx,QWORD PTR [rsp+0x50]
   1400156d0:	cmp    WORD PTR [rdx],0x3
   1400156d4:	je     0x1400156f8
   1400156d6:	lea    rcx,[rsp+0x78]
   1400156db:	mov    r9w,0x3
   1400156e0:	xor    r8d,r8d
   1400156e3:	call   QWORD PTR [rip+0x2ded7]        # 0x1400435c0
   1400156e9:	test   eax,eax
   1400156eb:	mov    ebx,eax
   1400156ed:	js     0x140015925
   1400156f3:	lea    rdx,[rsp+0x78]
   1400156f8:	mov    rcx,QWORD PTR [rsp+0x58]
   1400156fd:	mov    edx,DWORD PTR [rdx+0x8]
   140015700:	lea    r8,[rsp+0x30]
   140015705:	mov    rax,QWORD PTR [rcx]
   140015708:	mov    r9,rsi
   14001570b:	mov    QWORD PTR [r8],rax
   14001570e:	mov    rax,QWORD PTR [rcx+0x8]
   140015712:	mov    QWORD PTR [r8+0x8],rax
   140015716:	mov    rax,QWORD PTR [rcx+0x10]
   14001571a:	mov    rcx,rbp
   14001571d:	mov    QWORD PTR [r8+0x10],rax
   140015721:	mov    rax,QWORD PTR [rbp+0x0]
   140015725:	lea    r8,[rsp+0x30]
   14001572a:	call   QWORD PTR [rax+0xb8]
   140015730:	jmp    0x140015c9b
   140015735:	cmp    DWORD PTR [rdi+0x10],0x5
   140015739:	jne    0x140015ca5
   14001573f:	mov    rbx,QWORD PTR [rsp+0x50]
   140015744:	mov    rdx,QWORD PTR [rsp+0x90]
   14001574c:	bt     WORD PTR [rbx],0xe
   140015751:	jae    0x140015781
   140015753:	test   BYTE PTR [rbx],0xf
   140015756:	je     0x140015781
   140015758:	test   BYTE PTR [rbx],0xc
   14001575b:	je     0x14001577b
   14001575d:	mov    rcx,QWORD PTR [rbx+0x8]
   140015761:	call   QWORD PTR [rip+0x2de51]        # 0x1400435b8
   140015767:	mov    r11,QWORD PTR [rbx+0x8]
   14001576b:	mov    WORD PTR [r11],0x3
   140015771:	mov    rdx,QWORD PTR [rbx+0x8]
   140015775:	add    rdx,0x8
   140015779:	jmp    0x14001574c
   14001577b:	mov    rdx,QWORD PTR [rbx+0x8]
   14001577f:	jmp    0x14001574c
   140015781:	and    DWORD PTR [r12],0x0
   140015786:	mov    rcx,QWORD PTR [rsp+0x70]
   14001578b:	mov    r10,QWORD PTR [rbp+0x0]
   14001578f:	mov    rax,QWORD PTR [rcx]
   140015792:	mov    r9,QWORD PTR [rsp+0xa0]
   14001579a:	lea    r8,[rsp+0x30]
   14001579f:	mov    QWORD PTR [r8],rax
   1400157a2:	mov    rax,QWORD PTR [rcx+0x8]
   1400157a6:	mov    QWORD PTR [r8+0x8],rax
   1400157aa:	mov    rax,QWORD PTR [rcx+0x10]
   1400157ae:	mov    rcx,rbp
   1400157b1:	mov    QWORD PTR [r8+0x10],rax
   1400157b5:	mov    r8,QWORD PTR [rsp+0x98]
   1400157bd:	lea    rax,[rsp+0x30]
   1400157c2:	mov    QWORD PTR [rsp+0x28],rax
   1400157c7:	mov    rax,QWORD PTR [rsp+0xa8]
   1400157cf:	mov    QWORD PTR [rsp+0x20],rax
   1400157d4:	call   QWORD PTR [r10+0xb0]
   1400157db:	jmp    0x140015c9b
   1400157e0:	cmp    DWORD PTR [rdi+0x10],0x2
   1400157e4:	jne    0x140015ca5
   1400157ea:	mov    rdx,QWORD PTR [rsp+0x50]
   1400157ef:	cmp    WORD PTR [rdx],0x3
   1400157f3:	je     0x140015817
   1400157f5:	lea    rcx,[rsp+0x78]
   1400157fa:	mov    r9w,0x3
   1400157ff:	xor    r8d,r8d
   140015802:	call   QWORD PTR [rip+0x2ddb8]        # 0x1400435c0
   140015808:	test   eax,eax
   14001580a:	mov    ebx,eax
   14001580c:	js     0x140015925
   140015812:	lea    rdx,[rsp+0x78]
   140015817:	mov    rcx,QWORD PTR [rsp+0x58]
   14001581c:	mov    edx,DWORD PTR [rdx+0x8]
   14001581f:	lea    r8,[rsp+0x30]
   140015824:	mov    rax,QWORD PTR [rcx]
   140015827:	mov    QWORD PTR [r8],rax
   14001582a:	mov    rax,QWORD PTR [rcx+0x8]
   14001582e:	mov    QWORD PTR [r8+0x8],rax
   140015832:	mov    rax,QWORD PTR [rcx+0x10]
   140015836:	mov    rcx,rbp
   140015839:	mov    QWORD PTR [r8+0x10],rax
   14001583d:	mov    rax,QWORD PTR [rbp+0x0]
   140015841:	lea    r8,[rsp+0x30]
   140015846:	call   QWORD PTR [rax+0xa8]
   14001584c:	jmp    0x140015c9b
   140015851:	cmp    DWORD PTR [rdi+0x10],r15d
   140015855:	jne    0x140015ca5
   14001585b:	mov    rcx,QWORD PTR [rsp+0x50]
   140015860:	lea    rdx,[rsp+0x30]
   140015865:	lea    r8,[rsi+0x8]
   140015869:	mov    rax,QWORD PTR [rcx]
   14001586c:	mov    QWORD PTR [rdx],rax
   14001586f:	mov    rax,QWORD PTR [rcx+0x8]
   140015873:	mov    QWORD PTR [rdx+0x8],rax
   140015877:	mov    rax,QWORD PTR [rcx+0x10]
   14001587b:	mov    rcx,rbp
   14001587e:	mov    QWORD PTR [rdx+0x10],rax
   140015882:	mov    rax,QWORD PTR [rbp+0x0]
   140015886:	lea    rdx,[rsp+0x30]
   14001588b:	call   QWORD PTR [rax+0xa0]
   140015891:	jmp    0x140015be4
   140015896:	mov    rax,QWORD PTR [rbp+0x0]
   14001589a:	mov    rdx,rsi
   14001589d:	mov    rcx,rbp
   1400158a0:	call   QWORD PTR [rax+0x98]
   1400158a6:	jmp    0x140015c9b
   1400158ab:	mov    rax,QWORD PTR [rbp+0x0]
   1400158af:	mov    rdx,rsi
   1400158b2:	mov    rcx,rbp
   1400158b5:	call   QWORD PTR [rax+0x90]
   1400158bb:	jmp    0x140015c9b
   1400158c0:	cmp    DWORD PTR [rdi+0x10],r15d
   1400158c4:	jne    0x140015ca5
   1400158ca:	mov    rcx,QWORD PTR [rsp+0x50]
   1400158cf:	lea    rdx,[rsp+0x30]
   1400158d4:	lea    r8,[rsi+0x8]
   1400158d8:	mov    rax,QWORD PTR [rcx]
   1400158db:	mov    QWORD PTR [rdx],rax
   1400158de:	mov    rax,QWORD PTR [rcx+0x8]
   1400158e2:	mov    QWORD PTR [rdx+0x8],rax
   1400158e6:	mov    rax,QWORD PTR [rcx+0x10]
   1400158ea:	mov    rcx,rbp
   1400158ed:	mov    QWORD PTR [rdx+0x10],rax
   1400158f1:	mov    rax,QWORD PTR [rbp+0x0]
   1400158f5:	lea    rdx,[rsp+0x30]
   1400158fa:	call   QWORD PTR [rax+0x88]
   140015900:	jmp    0x140015be4
   140015905:	cmp    DWORD PTR [rdi+0x10],0x2
   140015909:	jne    0x140015ca5
   14001590f:	mov    rbx,QWORD PTR [rsp+0x50]
   140015914:	bt     WORD PTR [rbx],0xe
   140015919:	jae    0x14001592f
   14001591b:	test   BYTE PTR [rbx],0xc
   14001591e:	jne    0x14001592f
   140015920:	mov    ebx,0x80020005
   140015925:	and    DWORD PTR [r12],0x0
   14001592a:	jmp    0x140015d1b
   14001592f:	cmp    WORD PTR [rbx],0x400c
   140015934:	jne    0x140015954
   140015936:	mov    rcx,QWORD PTR [rbx+0x8]
   14001593a:	call   QWORD PTR [rip+0x2dc78]        # 0x1400435b8
   140015940:	mov    r11,QWORD PTR [rbx+0x8]
   140015944:	mov    WORD PTR [r11],0x8
   14001594a:	mov    rdx,QWORD PTR [rbx+0x8]
   14001594e:	add    rdx,0x8
   140015952:	jmp    0x140015973
   140015954:	cmp    WORD PTR [rbx],0x4008
   140015959:	jne    0x140015961
   14001595b:	mov    rdx,QWORD PTR [rbx+0x8]
   14001595f:	jmp    0x140015973
   140015961:	mov    rcx,rbx
   140015964:	call   QWORD PTR [rip+0x2dc4e]        # 0x1400435b8
   14001596a:	lea    rdx,[rbx+0x8]
   14001596e:	mov    WORD PTR [rbx],0x8
   140015973:	mov    rcx,QWORD PTR [rsp+0x58]
   140015978:	lea    r8,[rsp+0x30]
   14001597d:	lea    r9,[rsi+0x8]
   140015981:	mov    rax,QWORD PTR [rcx]
   140015984:	mov    QWORD PTR [r8],rax
   140015987:	mov    rax,QWORD PTR [rcx+0x8]
   14001598b:	mov    QWORD PTR [r8+0x8],rax
   14001598f:	mov    rax,QWORD PTR [rcx+0x10]
   140015993:	mov    rcx,rbp
   140015996:	mov    QWORD PTR [r8+0x10],rax
   14001599a:	mov    rax,QWORD PTR [rbp+0x0]
   14001599e:	lea    r8,[rsp+0x30]
   1400159a3:	call   QWORD PTR [rax+0x80]
   1400159a9:	jmp    0x140015cf5
   1400159ae:	cmp    DWORD PTR [rdi+0x10],r15d
   1400159b2:	jne    0x140015ca5
   1400159b8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400159bd:	lea    rdx,[rsp+0x30]
   1400159c2:	lea    r8,[rsi+0x8]
   1400159c6:	mov    rax,QWORD PTR [rcx]
   1400159c9:	mov    QWORD PTR [rdx],rax
   1400159cc:	mov    rax,QWORD PTR [rcx+0x8]
   1400159d0:	mov    QWORD PTR [rdx+0x8],rax
   1400159d4:	mov    rax,QWORD PTR [rcx+0x10]
   1400159d8:	mov    rcx,rbp
   1400159db:	mov    QWORD PTR [rdx+0x10],rax
   1400159df:	mov    rax,QWORD PTR [rbp+0x0]
   1400159e3:	lea    rdx,[rsp+0x30]
   1400159e8:	call   QWORD PTR [rax+0x78]
   1400159eb:	jmp    0x140015be4
   1400159f0:	cmp    DWORD PTR [rdi+0x10],r15d
   1400159f4:	jne    0x140015ca5
   1400159fa:	mov    rcx,QWORD PTR [rsp+0x50]
   1400159ff:	lea    rdx,[rsp+0x30]
   140015a04:	mov    r8,rsi
   140015a07:	mov    rax,QWORD PTR [rcx]
   140015a0a:	mov    QWORD PTR [rdx],rax
   140015a0d:	mov    rax,QWORD PTR [rcx+0x8]
   140015a11:	mov    QWORD PTR [rdx+0x8],rax
   140015a15:	mov    rax,QWORD PTR [rcx+0x10]
   140015a19:	mov    rcx,rbp
   140015a1c:	mov    QWORD PTR [rdx+0x10],rax
   140015a20:	mov    rax,QWORD PTR [rbp+0x0]
   140015a24:	lea    rdx,[rsp+0x30]
   140015a29:	call   QWORD PTR [rax+0x70]
   140015a2c:	jmp    0x140015c9b
   140015a31:	cmp    DWORD PTR [rdi+0x10],r15d
   140015a35:	jne    0x140015ca5
   140015a3b:	mov    rcx,QWORD PTR [rsp+0x50]
   140015a40:	lea    rdx,[rsp+0x30]
   140015a45:	mov    r8,rsi
   140015a48:	mov    rax,QWORD PTR [rcx]
   140015a4b:	mov    QWORD PTR [rdx],rax
   140015a4e:	mov    rax,QWORD PTR [rcx+0x8]
   140015a52:	mov    QWORD PTR [rdx+0x8],rax
   140015a56:	mov    rax,QWORD PTR [rcx+0x10]
   140015a5a:	mov    rcx,rbp
   140015a5d:	mov    QWORD PTR [rdx+0x10],rax
   140015a61:	mov    rax,QWORD PTR [rbp+0x0]
   140015a65:	lea    rdx,[rsp+0x30]
   140015a6a:	call   QWORD PTR [rax+0x68]
   140015a6d:	jmp    0x140015c9b
   140015a72:	cmp    DWORD PTR [rdi+0x10],r15d
   140015a76:	jne    0x140015ca5
   140015a7c:	mov    rcx,QWORD PTR [rsp+0x50]
   140015a81:	lea    rdx,[rsp+0x30]
   140015a86:	lea    r8,[rsi+0x8]
   140015a8a:	mov    rax,QWORD PTR [rcx]
   140015a8d:	mov    QWORD PTR [rdx],rax
   140015a90:	mov    rax,QWORD PTR [rcx+0x8]
   140015a94:	mov    QWORD PTR [rdx+0x8],rax
   140015a98:	mov    rax,QWORD PTR [rcx+0x10]
   140015a9c:	mov    rcx,rbp
   140015a9f:	mov    QWORD PTR [rdx+0x10],rax
   140015aa3:	mov    rax,QWORD PTR [rbp+0x0]
   140015aa7:	lea    rdx,[rsp+0x30]
   140015aac:	call   QWORD PTR [rax+0x60]
   140015aaf:	jmp    0x140015be4
   140015ab4:	test   al,0x2
   140015ab6:	je     0x140015afa
   140015ab8:	cmp    DWORD PTR [rdi+0x10],r15d
   140015abc:	jne    0x140015ca5
   140015ac2:	mov    rcx,QWORD PTR [rsp+0x50]
   140015ac7:	lea    rdx,[rsp+0x30]
   140015acc:	lea    r8,[rsi+0x8]
   140015ad0:	mov    rax,QWORD PTR [rcx]
   140015ad3:	mov    QWORD PTR [rdx],rax
   140015ad6:	mov    rax,QWORD PTR [rcx+0x8]
   140015ada:	mov    QWORD PTR [rdx+0x8],rax
   140015ade:	mov    rax,QWORD PTR [rcx+0x10]
   140015ae2:	mov    rcx,rbp
   140015ae5:	mov    QWORD PTR [rdx+0x10],rax
   140015ae9:	mov    rax,QWORD PTR [rbp+0x0]
   140015aed:	lea    rdx,[rsp+0x30]
   140015af2:	call   QWORD PTR [rax+0x58]
   140015af5:	jmp    0x140015be4
   140015afa:	test   al,0x4
   140015afc:	je     0x140015b9d
   140015b02:	cmp    DWORD PTR [rdi+0x10],0x2
   140015b06:	jne    0x140015ca5
   140015b0c:	mov    rcx,QWORD PTR [rsp+0x50]
   140015b11:	lea    rdx,[rsp+0x30]
   140015b16:	mov    rax,QWORD PTR [rcx]
   140015b19:	mov    QWORD PTR [rdx],rax
   140015b1c:	mov    rax,QWORD PTR [rcx+0x8]
   140015b20:	mov    QWORD PTR [rdx+0x8],rax
   140015b24:	mov    rax,QWORD PTR [rcx+0x10]
   140015b28:	mov    rcx,QWORD PTR [rsp+0x58]
   140015b2d:	cmp    WORD PTR [rcx],0x8
   140015b31:	mov    QWORD PTR [rdx+0x10],rax
   140015b35:	je     0x140015b5c
   140015b37:	mov    rdx,rcx
   140015b3a:	lea    rcx,[rsp+0x78]
   140015b3f:	mov    r9w,0x3
   140015b44:	xor    r8d,r8d
   140015b47:	call   QWORD PTR [rip+0x2da73]        # 0x1400435c0
   140015b4d:	test   eax,eax
   140015b4f:	mov    ebx,eax
   140015b51:	js     0x140015c54
   140015b57:	lea    rcx,[rsp+0x78]
   140015b5c:	lea    rdx,[rsp+0x30]
   140015b61:	lea    r8,[rsp+0x90]
   140015b69:	mov    rax,QWORD PTR [rdx]
   140015b6c:	mov    QWORD PTR [r8],rax
   140015b6f:	mov    rax,QWORD PTR [rdx+0x8]
   140015b73:	mov    QWORD PTR [r8+0x8],rax
   140015b77:	mov    rax,QWORD PTR [rdx+0x10]
   140015b7b:	lea    rdx,[rsp+0x90]
   140015b83:	mov    QWORD PTR [r8+0x10],rax
   140015b87:	mov    r8,QWORD PTR [rcx+0x8]
   140015b8b:	mov    rax,QWORD PTR [rbp+0x0]
   140015b8f:	mov    rcx,rbp
   140015b92:	call   QWORD PTR [rax+0xd8]
   140015b98:	jmp    0x140015c9b
   140015b9d:	test   al,0x2
   140015b9f:	je     0x140015bf8
   140015ba1:	cmp    DWORD PTR [rdi+0x10],r15d
   140015ba5:	jne    0x140015ca5
   140015bab:	mov    rcx,QWORD PTR [rsp+0x50]
   140015bb0:	lea    rdx,[rsp+0x90]
   140015bb8:	lea    r8,[rsi+0x8]
   140015bbc:	mov    rax,QWORD PTR [rcx]
   140015bbf:	mov    QWORD PTR [rdx],rax
   140015bc2:	mov    rax,QWORD PTR [rcx+0x8]
   140015bc6:	mov    QWORD PTR [rdx+0x8],rax
   140015bca:	mov    rax,QWORD PTR [rcx+0x10]
   140015bce:	mov    rcx,rbp
   140015bd1:	mov    QWORD PTR [rdx+0x10],rax
   140015bd5:	mov    rax,QWORD PTR [rbp+0x0]
   140015bd9:	lea    rdx,[rsp+0x90]
   140015be1:	call   QWORD PTR [rax+0x50]
   140015be4:	test   eax,eax
   140015be6:	mov    ebx,eax
   140015be8:	js     0x140015d1b
   140015bee:	mov    WORD PTR [rsi],0x8
   140015bf3:	jmp    0x140015d1b
   140015bf8:	test   al,0x4
   140015bfa:	je     0x140015c9f
   140015c00:	cmp    DWORD PTR [rdi+0x10],0x2
   140015c04:	jne    0x140015ca5
   140015c0a:	mov    rcx,QWORD PTR [rsp+0x50]
   140015c0f:	lea    rdx,[rsp+0x90]
   140015c17:	mov    rax,QWORD PTR [rcx]
   140015c1a:	mov    QWORD PTR [rdx],rax
   140015c1d:	mov    rax,QWORD PTR [rcx+0x8]
   140015c21:	mov    QWORD PTR [rdx+0x8],rax
   140015c25:	mov    rax,QWORD PTR [rcx+0x10]
   140015c29:	mov    rcx,QWORD PTR [rsp+0x58]
   140015c2e:	cmp    WORD PTR [rcx],0x8
   140015c32:	mov    QWORD PTR [rdx+0x10],rax
   140015c36:	je     0x140015c62
   140015c38:	mov    rdx,rcx
   140015c3b:	lea    rcx,[rsp+0x78]
   140015c40:	mov    r9w,0x3
   140015c45:	xor    r8d,r8d
   140015c48:	call   QWORD PTR [rip+0x2d972]        # 0x1400435c0
   140015c4e:	test   eax,eax
   140015c50:	mov    ebx,eax
   140015c52:	jns    0x140015c5d
   140015c54:	mov    DWORD PTR [r12],r15d
   140015c58:	jmp    0x140015d1b
   140015c5d:	lea    rcx,[rsp+0x78]
   140015c62:	lea    rdx,[rsp+0x90]
   140015c6a:	lea    r8,[rsp+0x30]
   140015c6f:	mov    rax,QWORD PTR [rdx]
   140015c72:	mov    QWORD PTR [r8],rax
   140015c75:	mov    rax,QWORD PTR [rdx+0x8]
   140015c79:	mov    QWORD PTR [r8+0x8],rax
   140015c7d:	mov    rax,QWORD PTR [rdx+0x10]
   140015c81:	lea    rdx,[rsp+0x30]
   140015c86:	mov    QWORD PTR [r8+0x10],rax
   140015c8a:	mov    r8,QWORD PTR [rcx+0x8]
   140015c8e:	mov    rax,QWORD PTR [rbp+0x0]
   140015c92:	mov    rcx,rbp
   140015c95:	call   QWORD PTR [rax+0xd0]
   140015c9b:	mov    ebx,eax
   140015c9d:	jmp    0x140015d1b
   140015c9f:	cmp    DWORD PTR [rdi+0x10],r15d
   140015ca3:	je     0x140015cac
   140015ca5:	mov    ebx,0x8002000e
   140015caa:	jmp    0x140015d1b
   140015cac:	mov    rcx,QWORD PTR [rsp+0x50]
   140015cb1:	lea    rdx,[rsp+0x90]
   140015cb9:	lea    r8,[rsi+0x8]
   140015cbd:	mov    rax,QWORD PTR [rcx]
   140015cc0:	mov    QWORD PTR [rdx],rax
   140015cc3:	mov    rax,QWORD PTR [rcx+0x8]
   140015cc7:	mov    QWORD PTR [rdx+0x8],rax
   140015ccb:	mov    rax,QWORD PTR [rcx+0x10]
   140015ccf:	mov    rcx,rbp
   140015cd2:	mov    QWORD PTR [rdx+0x10],rax
   140015cd6:	mov    rax,QWORD PTR [rbp+0x0]
   140015cda:	lea    rdx,[rsp+0x90]
   140015ce2:	call   QWORD PTR [rax+0x48]
   140015ce5:	jmp    0x140015d10
   140015ce7:	mov    rax,QWORD PTR [rbp+0x0]
   140015ceb:	lea    rdx,[rsi+0x8]
   140015cef:	mov    rcx,rbp
   140015cf2:	call   QWORD PTR [rax+0x40]
   140015cf5:	test   eax,eax
   140015cf7:	mov    ebx,eax
   140015cf9:	js     0x140015d1b
   140015cfb:	mov    WORD PTR [rsi],0x3
   140015d00:	jmp    0x140015d1b
   140015d02:	mov    rax,QWORD PTR [rbp+0x0]
   140015d06:	lea    rdx,[rsi+0x8]
   140015d0a:	mov    rcx,rbp
   140015d0d:	call   QWORD PTR [rax+0x38]
   140015d10:	test   eax,eax
   140015d12:	mov    ebx,eax
   140015d14:	js     0x140015d1b
   140015d16:	mov    WORD PTR [rsi],0x9
   140015d1b:	lea    rcx,[rsp+0x78]
   140015d20:	call   QWORD PTR [rip+0x2d892]        # 0x1400435b8
   140015d26:	mov    eax,ebx
   140015d28:	lea    r11,[rsp+0xd0]
   140015d30:	mov    rbx,QWORD PTR [r11+0x38]
   140015d34:	mov    rbp,QWORD PTR [r11+0x40]
   140015d38:	mov    rsp,r11
   140015d3b:	pop    r15
   140015d3d:	pop    r13
   140015d3f:	pop    r12
   140015d41:	pop    rdi
   140015d42:	pop    rsi
   140015d43:	ret    
   140015d44:	clc    
   140015d45:	push   rbp
   140015d46:	add    DWORD PTR [rax],eax
   140015d48:	cmp    DWORD PTR [rsi+0x1],edx
   140015d4b:	add    cl,al
   140015d4d:	push   rsi
   140015d4e:	add    DWORD PTR [rax],eax
   140015d50:	xor    eax,0xe0000157
   140015d55:	push   rdi
   140015d56:	add    DWORD PTR [rax],eax
   140015d58:	push   rcx
   140015d59:	pop    rax
   140015d5a:	add    DWORD PTR [rax],eax
   140015d5c:	xchg   esi,eax
   140015d5d:	pop    rax
   140015d5e:	add    DWORD PTR [rax],eax
   140015d60:	stos   DWORD PTR es:[rdi],eax
   140015d61:	pop    rax
   140015d62:	add    DWORD PTR [rax],eax
   140015d64:	rcr    BYTE PTR [rax+0x1],0x0
   140015d68:	add    eax,0xae000159
   140015d6d:	pop    rcx
   140015d6e:	add    DWORD PTR [rax],eax
   140015d70:	lock pop rcx
   140015d72:	add    DWORD PTR [rax],eax
   140015d74:	xor    DWORD PTR [rdx+0x1],ebx
   140015d77:	add    BYTE PTR [rdx+0x5a],dh
   140015d7a:	add    DWORD PTR [rax],eax
   140015d7c:	mov    ah,0x5a
   140015d7e:	add    DWORD PTR [rax],eax
   140015d80:	popf   
   140015d81:	pop    rbx
   140015d82:	add    DWORD PTR [rax],eax
   140015d84:	lahf   
   140015d85:	pop    rsp
   140015d86:	add    DWORD PTR [rax],eax
   140015d88:	out    0x5c,eax
   140015d8a:	add    DWORD PTR [rax],eax
   140015d8c:	add    bl,BYTE PTR [rbp+0x1]
   140015d8f:	add    BYTE PTR [rax-0x77],cl
   140015d92:	pop    rsp
   140015d93:	and    al,0x8
   140015d95:	mov    QWORD PTR [rsp+0x10],rbp
   140015d9a:	mov    QWORD PTR [rsp+0x18],rsi
   140015d9f:	push   rdi
   140015da0:	push   r12
   140015da2:	push   r13
   140015da4:	push   r14
   140015da6:	push   r15
   140015da8:	sub    rsp,0x20
   140015dac:	xor    ebx,ebx
   140015dae:	test   r8d,r8d
   140015db1:	mov    r12d,r8d
   140015db4:	mov    rsi,rdx
   140015db7:	je     0x140015e11
   140015db9:	mov    rdi,QWORD PTR [rsp+0x70]
   140015dbe:	xor    r14b,r14b
   140015dc1:	lea    rbp,[rip+0x44318]        # 0x14005a0e0
   140015dc8:	lea    r13,[rip+0x44271]        # 0x14005a040
   140015dcf:	mov    r15d,0x13
   140015dd5:	mov    rdx,QWORD PTR [r13+0x0]
   140015dd9:	mov    rcx,QWORD PTR [rsi]
   140015ddc:	call   QWORD PTR [rip+0x2d6be]        # 0x1400434a0
   140015de2:	test   eax,eax
   140015de4:	jne    0x140015dee
   140015de6:	mov    eax,DWORD PTR [rbp+0x0]
   140015de9:	mov    r14b,0x1
   140015dec:	mov    DWORD PTR [rdi],eax
   140015dee:	add    r13,0x8
   140015df2:	add    rbp,0x4
   140015df6:	sub    r15,0x1
   140015dfa:	jne    0x140015dd5
   140015dfc:	test   r14b,r14b
   140015dff:	je     0x140015e30
   140015e01:	add    ebx,0x1
   140015e04:	add    rsi,0x8
   140015e08:	add    rdi,0x4
   140015e0c:	cmp    ebx,r12d
   140015e0f:	jb     0x140015dbe
   140015e11:	xor    eax,eax
   140015e13:	mov    rbx,QWORD PTR [rsp+0x50]
   140015e18:	mov    rbp,QWORD PTR [rsp+0x58]
   140015e1d:	mov    rsi,QWORD PTR [rsp+0x60]
   140015e22:	add    rsp,0x20
   140015e26:	pop    r15
   140015e28:	pop    r14
   140015e2a:	pop    r13
   140015e2c:	pop    r12
   140015e2e:	pop    rdi
   140015e2f:	ret    
   140015e30:	mov    eax,0x80020006
   140015e35:	jmp    0x140015e13
   140015e37:	int3   
   140015e38:	mov    QWORD PTR [rsp+0x8],rbx
   140015e3d:	push   rdi
   140015e3e:	sub    rsp,0x20
   140015e42:	mov    rbx,rdx
   140015e45:	mov    rdi,rcx
   140015e48:	call   0x140014cd0
   140015e4d:	lea    rax,[rip+0x2e3d4]        # 0x140044228
   140015e54:	lea    r11,[rip+0x2e4ed]        # 0x140044348
   140015e5b:	mov    QWORD PTR [rdi],r11
   140015e5e:	mov    QWORD PTR [rdi+0x60],rax
   140015e62:	lea    rax,[rip+0x2e4a7]        # 0x140044310
   140015e69:	mov    QWORD PTR [rdi+0x68],rax
   140015e6d:	xor    eax,eax
   140015e6f:	mov    QWORD PTR [rdi+0x40],rbx
   140015e73:	mov    rbx,QWORD PTR [rsp+0x30]
   140015e78:	mov    BYTE PTR [rdi+0x48],al
   140015e7b:	mov    QWORD PTR [rdi+0x58],rax
   140015e7f:	mov    QWORD PTR [rdi+0x70],rax
   140015e83:	mov    DWORD PTR [rdi+0x78],eax
   140015e86:	mov    QWORD PTR [rdi+0x80],rax
   140015e8d:	mov    DWORD PTR [rdi+0x88],eax
   140015e93:	mov    QWORD PTR [rdi+0x90],rax
   140015e9a:	mov    QWORD PTR [rdi+0x98],rax
   140015ea1:	mov    QWORD PTR [rdi+0xa0],rax
   140015ea8:	mov    rax,rdi
   140015eab:	add    rsp,0x20
   140015eaf:	pop    rdi
   140015eb0:	ret    
   140015eb1:	int3   
   140015eb2:	int3   
   140015eb3:	int3   
   140015eb4:	mov    QWORD PTR [rsp+0x8],rbx
   140015eb9:	mov    QWORD PTR [rsp+0x10],rbp
   140015ebe:	mov    QWORD PTR [rsp+0x18],rsi
   140015ec3:	push   rdi
   140015ec4:	sub    rsp,0x40
   140015ec8:	mov    ebx,r9d
   140015ecb:	mov    esi,r8d
   140015ece:	mov    ebp,edx
   140015ed0:	mov    rdi,rcx
   140015ed3:	call   QWORD PTR [rip+0x2da47]        # 0x140043920
   140015ed9:	not    esi
   140015edb:	and    esi,eax
   140015edd:	or     esi,ebx
   140015edf:	cmp    eax,esi
   140015ee1:	jne    0x140015ee7
   140015ee3:	xor    eax,eax
   140015ee5:	jmp    0x140015f28
   140015ee7:	mov    r8d,esi
   140015eea:	mov    edx,ebp
   140015eec:	mov    rcx,rdi
   140015eef:	call   QWORD PTR [rip+0x2da83]        # 0x140043978
   140015ef5:	mov    r11d,DWORD PTR [rsp+0x70]
   140015efa:	test   r11d,r11d
   140015efd:	je     0x140015f23
   140015eff:	or     r11d,0x17
   140015f03:	xor    r9d,r9d
   140015f06:	xor    r8d,r8d
   140015f09:	mov    DWORD PTR [rsp+0x30],r11d
   140015f0e:	and    DWORD PTR [rsp+0x28],0x0
   140015f13:	and    DWORD PTR [rsp+0x20],0x0
   140015f18:	xor    edx,edx
   140015f1a:	mov    rcx,rdi
   140015f1d:	call   QWORD PTR [rip+0x2da0d]        # 0x140043930
   140015f23:	mov    eax,0x1
   140015f28:	mov    rbx,QWORD PTR [rsp+0x50]
   140015f2d:	mov    rbp,QWORD PTR [rsp+0x58]
   140015f32:	mov    rsi,QWORD PTR [rsp+0x60]
   140015f37:	add    rsp,0x40
   140015f3b:	pop    rdi
   140015f3c:	ret    
   140015f3d:	int3   
   140015f3e:	int3   
   140015f3f:	int3   
   140015f40:	sub    rsp,0x38
   140015f44:	mov    DWORD PTR [rsp+0x20],r9d
   140015f49:	mov    r9d,r8d
   140015f4c:	mov    r8d,edx
   140015f4f:	mov    edx,0xfffffff0
   140015f54:	call   0x140015eb4
   140015f59:	add    rsp,0x38
   140015f5d:	ret    
   140015f5e:	int3   
   140015f5f:	int3   
   140015f60:	sub    rsp,0x38
   140015f64:	mov    DWORD PTR [rsp+0x20],r9d
   140015f69:	mov    r9d,r8d
   140015f6c:	mov    r8d,edx
   140015f6f:	mov    edx,0xffffffec
   140015f74:	call   0x140015eb4
   140015f79:	add    rsp,0x38
   140015f7d:	ret    
   140015f7e:	int3   
   140015f7f:	int3   
   140015f80:	sub    rsp,0x28
   140015f84:	cmp    QWORD PTR [rcx+0x40],0x0
   140015f89:	mov    rax,QWORD PTR [rcx]
   140015f8c:	je     0x140015f96
   140015f8e:	call   QWORD PTR [rax+0xc0]
   140015f94:	jmp    0x140015f9c
   140015f96:	call   QWORD PTR [rax+0x228]
   140015f9c:	add    rsp,0x28
   140015fa0:	ret    
   140015fa1:	int3   
   140015fa2:	int3   
   140015fa3:	int3   
   140015fa4:	mov    rax,rsp
   140015fa7:	mov    QWORD PTR [rax+0x8],rbx
   140015fab:	mov    QWORD PTR [rax+0x10],rbp
   140015faf:	mov    QWORD PTR [rax+0x18],rsi
   140015fb3:	push   rdi
   140015fb4:	sub    rsp,0x30
   140015fb8:	mov    rbx,rcx
   140015fbb:	mov    rcx,QWORD PTR [rcx+0x80]
   140015fc2:	mov    rdi,r9
   140015fc5:	test   rcx,rcx
   140015fc8:	mov    rsi,r8
   140015fcb:	mov    ebp,edx
   140015fcd:	je     0x140015fdb
   140015fcf:	mov    QWORD PTR [rax-0x18],r9
   140015fd3:	mov    r9,r8
   140015fd6:	mov    r8d,edx
   140015fd9:	jmp    0x14001600e
   140015fdb:	mov    rax,QWORD PTR [rbx]
   140015fde:	mov    rcx,rbx
   140015fe1:	call   QWORD PTR [rax+0x1e0]
   140015fe7:	mov    rcx,QWORD PTR [rax]
   140015fea:	test   rcx,rcx
   140015fed:	jne    0x140016003
   140015fef:	mov    rcx,QWORD PTR [rbx+0x40]
   140015ff3:	mov    r9,rdi
   140015ff6:	mov    r8,rsi
   140015ff9:	mov    edx,ebp
   140015ffb:	call   QWORD PTR [rip+0x2d807]        # 0x140043808
   140016001:	jmp    0x140016018
   140016003:	mov    QWORD PTR [rsp+0x20],rdi
   140016008:	mov    r9,rsi
   14001600b:	mov    r8d,ebp
   14001600e:	mov    rdx,QWORD PTR [rbx+0x40]
   140016012:	call   QWORD PTR [rip+0x2d7f8]        # 0x140043810
   140016018:	mov    rbx,QWORD PTR [rsp+0x40]
   14001601d:	mov    rbp,QWORD PTR [rsp+0x48]
   140016022:	mov    rsi,QWORD PTR [rsp+0x50]
   140016027:	add    rsp,0x30
   14001602b:	pop    rdi
   14001602c:	ret    
   14001602d:	int3   
   14001602e:	int3   
   14001602f:	int3   
   140016030:	lea    rax,[rcx+0x80]
   140016037:	ret    
   140016038:	mov    QWORD PTR [rsp+0x8],rbx
   14001603d:	push   rdi
   14001603e:	sub    rsp,0x20
   140016042:	mov    rbx,rdx
   140016045:	mov    rdi,rcx
   140016048:	call   0x14001f2e8
   14001604d:	mov    r8,QWORD PTR [rax+0x60]
   140016051:	test   r8,r8
   140016054:	je     0x14001605f
   140016056:	mov    rdx,rdi
   140016059:	mov    rcx,rbx
   14001605c:	call   r8
   14001605f:	xor    eax,eax
   140016061:	mov    rbx,QWORD PTR [rsp+0x30]
   140016066:	add    rsp,0x20
   14001606a:	pop    rdi
   14001606b:	ret    
   14001606c:	mov    QWORD PTR [rsp+0x8],rbx
   140016071:	mov    QWORD PTR [rsp+0x10],rbp
   140016076:	mov    QWORD PTR [rsp+0x18],rsi
   14001607b:	push   rdi
   14001607c:	sub    rsp,0x20
   140016080:	mov    rbp,rcx
   140016083:	mov    rcx,QWORD PTR [rcx+0x40]
   140016087:	mov    rbx,r8
   14001608a:	call   0x1400245e4
   14001608f:	test   rax,rax
   140016092:	mov    rsi,rax
   140016095:	je     0x1400160e9
   140016097:	mov    rcx,rax
   14001609a:	call   QWORD PTR [rip+0x2d918]        # 0x1400439b8
   1400160a0:	test   rbx,rbx
   1400160a3:	movzx  edi,ax
   1400160a6:	je     0x1400160e4
   1400160a8:	cmp    DWORD PTR [rbx],0x38
   1400160ab:	jb     0x1400160e4
   1400160ad:	mov    rax,QWORD PTR [rbp+0x40]
   1400160b1:	or     DWORD PTR [rbx+0x4],0x1
   1400160b5:	or     QWORD PTR [rbx+0x30],0xffffffffffffffff
   1400160ba:	xor    r9d,r9d
   1400160bd:	xor    r8d,r8d
   1400160c0:	mov    edx,0x87
   1400160c5:	mov    rcx,rsi
   1400160c8:	mov    QWORD PTR [rbx+0x8],rax
   1400160cc:	mov    QWORD PTR [rbx+0x10],rsi
   1400160d0:	call   QWORD PTR [rip+0x2d912]        # 0x1400439e8
   1400160d6:	bt     rax,0xd
   1400160db:	jb     0x1400160e4
   1400160dd:	or     DWORD PTR [rbx+0x4],0x80000002
   1400160e4:	mov    rax,rdi
   1400160e7:	jmp    0x1400160ed
   1400160e9:	or     rax,0xffffffffffffffff
   1400160ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400160f2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400160f7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400160fc:	add    rsp,0x20
   140016100:	pop    rdi
   140016101:	ret    
   140016102:	int3   
   140016103:	int3   
   140016104:	xchg   ax,ax
   140016106:	cmp    QWORD PTR [rcx+0x10],0x0
   14001610b:	je     0x14001612d
   14001610d:	cmp    DWORD PTR [rcx],edx
   14001610f:	jne    0x140016123
   140016111:	cmp    DWORD PTR [rcx+0x4],r8d
   140016115:	jne    0x140016123
   140016117:	cmp    r9d,DWORD PTR [rcx+0x8]
   14001611b:	jb     0x140016123
   14001611d:	cmp    r9d,DWORD PTR [rcx+0xc]
   140016121:	jbe    0x140016129
   140016123:	add    rcx,0x20
   140016127:	jmp    0x140016106
   140016129:	mov    rax,rcx
   14001612c:	ret    
   14001612d:	xor    eax,eax
   14001612f:	ret    
   140016130:	mov    r11,rsp
   140016133:	mov    QWORD PTR [r11+0x10],rbx
   140016137:	mov    QWORD PTR [r11+0x18],rbp
   14001613b:	mov    QWORD PTR [r11+0x20],rsi
   14001613f:	push   rdi
   140016140:	sub    rsp,0x30
   140016144:	mov    rax,QWORD PTR [rcx]
   140016147:	and    QWORD PTR [r11+0x8],0x0
   14001614c:	mov    rbx,rcx
   14001614f:	lea    rcx,[r11+0x8]
   140016153:	mov    rdi,r9
   140016156:	mov    rsi,r8
   140016159:	mov    QWORD PTR [r11-0x18],rcx
   14001615d:	mov    rcx,rbx
   140016160:	mov    ebp,edx
   140016162:	call   QWORD PTR [rax+0x218]
   140016168:	test   eax,eax
   14001616a:	jne    0x140016182
   14001616c:	mov    rax,QWORD PTR [rbx]
   14001616f:	mov    r9,rdi
   140016172:	mov    r8,rsi
   140016175:	mov    edx,ebp
   140016177:	mov    rcx,rbx
   14001617a:	call   QWORD PTR [rax+0x220]
   140016180:	jmp    0x140016187
   140016182:	mov    rax,QWORD PTR [rsp+0x40]
   140016187:	mov    rbx,QWORD PTR [rsp+0x48]
   14001618c:	mov    rbp,QWORD PTR [rsp+0x50]
   140016191:	mov    rsi,QWORD PTR [rsp+0x58]
   140016196:	add    rsp,0x30
   14001619a:	pop    rdi
   14001619b:	ret    
   14001619c:	rex push rbx
   14001619e:	sub    rsp,0x20
   1400161a2:	mov    rbx,rcx
   1400161a5:	call   0x140014ca0
   1400161aa:	lea    r11,[rip+0x2e407]        # 0x1400445b8
   1400161b1:	mov    DWORD PTR [rbx+0x40],0x1
   1400161b8:	mov    rax,rbx
   1400161bb:	mov    QWORD PTR [rbx],r11
   1400161be:	add    rsp,0x20
   1400161c2:	pop    rbx
   1400161c3:	ret    
   1400161c4:	mov    DWORD PTR [rcx+0x40],edx
   1400161c7:	mov    DWORD PTR [rcx+0x28],0x1
   1400161ce:	ret    
   1400161cf:	int3   
   1400161d0:	ret    0x0
   1400161d3:	int3   
   1400161d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400161d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400161de:	mov    QWORD PTR [rsp+0x18],rsi
   1400161e3:	push   rdi
   1400161e4:	sub    rsp,0x20
   1400161e8:	mov    ebx,r8d
   1400161eb:	mov    rbp,rdx
   1400161ee:	mov    rsi,rcx
   1400161f1:	call   0x14001ff18
   1400161f6:	test   ebx,ebx
   1400161f8:	mov    edi,eax
   1400161fa:	jne    0x140016200
   1400161fc:	btr    edi,0x9
   140016200:	mov    rcx,rsi
   140016203:	call   0x14001fee4
   140016208:	mov    r9d,edi
   14001620b:	xor    r8d,r8d
   14001620e:	mov    edx,eax
   140016210:	mov    rcx,rbp
   140016213:	mov    rbx,QWORD PTR [rsp+0x30]
   140016218:	mov    rbp,QWORD PTR [rsp+0x38]
   14001621d:	mov    rsi,QWORD PTR [rsp+0x40]
   140016222:	add    rsp,0x20
   140016226:	pop    rdi
   140016227:	rex.W jmp QWORD PTR [rip+0x2d5ba]        # 0x1400437e8
   14001622e:	int3   
   14001622f:	int3   
   140016230:	lea    rax,[rip+0x2dce9]        # 0x140043f20
   140016237:	ret    
   140016238:	rex push rbx
   14001623a:	sub    rsp,0x30
   14001623e:	mov    rax,QWORD PTR [rsp+0x68]
   140016243:	mov    r10d,r9d
   140016246:	mov    r9d,DWORD PTR [rsp+0x60]
   14001624b:	mov    r11,r8
   14001624e:	mov    rcx,rdx
   140016251:	mov    r8d,r10d
   140016254:	mov    rdx,r11
   140016257:	mov    QWORD PTR [rsp+0x20],rax
   14001625c:	call   0x140015d90
   140016261:	add    rsp,0x30
   140016265:	pop    rbx
   140016266:	ret    
   140016267:	int3   
   140016268:	test   rdx,rdx
   14001626b:	jne    0x140016273
   14001626d:	mov    eax,0x80004003
   140016272:	ret    
   140016273:	mov    DWORD PTR [rdx],0x1
   140016279:	xor    eax,eax
   14001627b:	ret    
   14001627c:	mov    eax,0x80004001
   140016281:	ret    
   140016282:	int3   
   140016283:	int3   
   140016284:	test   rdx,rdx
   140016287:	jne    0x14001628f
   140016289:	mov    eax,0x80004003
   14001628e:	ret    
   14001628f:	and    QWORD PTR [rdx],0x0
   140016293:	mov    eax,0x80004001
   140016298:	ret    
   140016299:	int3   
   14001629a:	int3   
   14001629b:	int3   
   14001629c:	sub    rsp,0x28
   1400162a0:	lea    r9,[rcx+0x50]
   1400162a4:	cmp    QWORD PTR [r9],0x0
   1400162a8:	jne    0x1400162c3
   1400162aa:	mov    rcx,QWORD PTR [rcx+0x40]
   1400162ae:	lea    r8,[rip+0x2e323]        # 0x1400445d8
   1400162b5:	mov    edx,0xfffffffc
   1400162ba:	call   0x140040ddd
   1400162bf:	test   eax,eax
   1400162c1:	js     0x1400162c5
   1400162c3:	xor    eax,eax
   1400162c5:	add    rsp,0x28
   1400162c9:	ret    
   1400162ca:	int3   
   1400162cb:	int3   
   1400162cc:	mov    rcx,QWORD PTR [rcx+0x50]
   1400162d0:	mov    rax,QWORD PTR [rcx]
   1400162d3:	rex.W jmp QWORD PTR [rax+0x38]
   1400162d7:	int3   
   1400162d8:	jmp    0x14001490c
   1400162dd:	int3   
   1400162de:	int3   
   1400162df:	int3   
   1400162e0:	mov    rcx,QWORD PTR [rcx+0x50]
   1400162e4:	mov    rax,QWORD PTR [rcx]
   1400162e7:	rex.W jmp QWORD PTR [rax+0x40]
   1400162eb:	int3   
   1400162ec:	sub    rsp,0x48
   1400162f0:	mov    rax,QWORD PTR [rdx]
   1400162f3:	mov    rcx,QWORD PTR [rcx+0x50]
   1400162f7:	lea    r9,[rsp+0x20]
   1400162fc:	mov    QWORD PTR [r9],rax
   1400162ff:	mov    rax,QWORD PTR [rdx+0x8]
   140016303:	mov    QWORD PTR [r9+0x8],rax
   140016307:	mov    rax,QWORD PTR [rdx+0x10]
   14001630b:	lea    rdx,[rsp+0x20]
   140016310:	mov    QWORD PTR [r9+0x10],rax
   140016314:	mov    rax,QWORD PTR [rcx]
   140016317:	call   QWORD PTR [rax+0x48]
   14001631a:	add    rsp,0x48
   14001631e:	ret    
   14001631f:	int3   
   140016320:	sub    rsp,0x48
   140016324:	mov    rax,QWORD PTR [rdx]
   140016327:	mov    rcx,QWORD PTR [rcx+0x50]
   14001632b:	lea    r9,[rsp+0x20]
   140016330:	mov    QWORD PTR [r9],rax
   140016333:	mov    rax,QWORD PTR [rdx+0x8]
   140016337:	mov    QWORD PTR [r9+0x8],rax
   14001633b:	mov    rax,QWORD PTR [rdx+0x10]
   14001633f:	lea    rdx,[rsp+0x20]
   140016344:	mov    QWORD PTR [r9+0x10],rax
   140016348:	mov    rax,QWORD PTR [rcx]
   14001634b:	call   QWORD PTR [rax+0x50]
   14001634e:	add    rsp,0x48
   140016352:	ret    
   140016353:	int3   
   140016354:	sub    rsp,0x48
   140016358:	mov    rax,QWORD PTR [rdx]
   14001635b:	mov    rcx,QWORD PTR [rcx+0x50]
   14001635f:	lea    r9,[rsp+0x20]
   140016364:	mov    QWORD PTR [r9],rax
   140016367:	mov    rax,QWORD PTR [rdx+0x8]
   14001636b:	mov    QWORD PTR [r9+0x8],rax
   14001636f:	mov    rax,QWORD PTR [rdx+0x10]
   140016373:	lea    rdx,[rsp+0x20]
   140016378:	mov    QWORD PTR [r9+0x10],rax
   14001637c:	mov    rax,QWORD PTR [rcx]
   14001637f:	call   QWORD PTR [rax+0x58]
   140016382:	add    rsp,0x48
   140016386:	ret    
   140016387:	int3   
   140016388:	sub    rsp,0x48
   14001638c:	mov    rax,QWORD PTR [rdx]
   14001638f:	mov    rcx,QWORD PTR [rcx+0x50]
   140016393:	lea    r9,[rsp+0x20]
   140016398:	mov    QWORD PTR [r9],rax
   14001639b:	mov    rax,QWORD PTR [rdx+0x8]
   14001639f:	mov    QWORD PTR [r9+0x8],rax
   1400163a3:	mov    rax,QWORD PTR [rdx+0x10]
   1400163a7:	lea    rdx,[rsp+0x20]
   1400163ac:	mov    QWORD PTR [r9+0x10],rax
   1400163b0:	mov    rax,QWORD PTR [rcx]
   1400163b3:	call   QWORD PTR [rax+0x60]
   1400163b6:	add    rsp,0x48
   1400163ba:	ret    
   1400163bb:	int3   
   1400163bc:	sub    rsp,0x48
   1400163c0:	mov    rax,QWORD PTR [rdx]
   1400163c3:	mov    rcx,QWORD PTR [rcx+0x50]
   1400163c7:	lea    r9,[rsp+0x20]
   1400163cc:	mov    QWORD PTR [r9],rax
   1400163cf:	mov    rax,QWORD PTR [rdx+0x8]
   1400163d3:	mov    QWORD PTR [r9+0x8],rax
   1400163d7:	mov    rax,QWORD PTR [rdx+0x10]
   1400163db:	lea    rdx,[rsp+0x20]
   1400163e0:	mov    QWORD PTR [r9+0x10],rax
   1400163e4:	mov    rax,QWORD PTR [rcx]
   1400163e7:	call   QWORD PTR [rax+0x68]
   1400163ea:	add    rsp,0x48
   1400163ee:	ret    
   1400163ef:	int3   
   1400163f0:	sub    rsp,0x48
   1400163f4:	mov    rax,QWORD PTR [rdx]
   1400163f7:	mov    rcx,QWORD PTR [rcx+0x50]
   1400163fb:	lea    r9,[rsp+0x20]
   140016400:	mov    QWORD PTR [r9],rax
   140016403:	mov    rax,QWORD PTR [rdx+0x8]
   140016407:	mov    QWORD PTR [r9+0x8],rax
   14001640b:	mov    rax,QWORD PTR [rdx+0x10]
   14001640f:	lea    rdx,[rsp+0x20]
   140016414:	mov    QWORD PTR [r9+0x10],rax
   140016418:	mov    rax,QWORD PTR [rcx]
   14001641b:	call   QWORD PTR [rax+0x70]
   14001641e:	add    rsp,0x48
   140016422:	ret    
   140016423:	int3   
   140016424:	sub    rsp,0x48
   140016428:	mov    rax,QWORD PTR [rdx]
   14001642b:	mov    rcx,QWORD PTR [rcx+0x50]
   14001642f:	lea    r9,[rsp+0x20]
   140016434:	mov    QWORD PTR [r9],rax
   140016437:	mov    rax,QWORD PTR [rdx+0x8]
   14001643b:	mov    QWORD PTR [r9+0x8],rax
   14001643f:	mov    rax,QWORD PTR [rdx+0x10]
   140016443:	lea    rdx,[rsp+0x20]
   140016448:	mov    QWORD PTR [r9+0x10],rax
   14001644c:	mov    rax,QWORD PTR [rcx]
   14001644f:	call   QWORD PTR [rax+0x78]
   140016452:	add    rsp,0x48
   140016456:	ret    
   140016457:	int3   
   140016458:	sub    rsp,0x48
   14001645c:	mov    rax,QWORD PTR [r8]
   14001645f:	mov    rcx,QWORD PTR [rcx+0x50]
   140016463:	lea    r10,[rsp+0x20]
   140016468:	mov    QWORD PTR [r10],rax
   14001646b:	mov    rax,QWORD PTR [r8+0x8]
   14001646f:	mov    QWORD PTR [r10+0x8],rax
   140016473:	mov    rax,QWORD PTR [r8+0x10]
   140016477:	lea    r8,[rsp+0x20]
   14001647c:	mov    QWORD PTR [r10+0x10],rax
   140016480:	mov    rax,QWORD PTR [rcx]
   140016483:	call   QWORD PTR [rax+0x80]
   140016489:	add    rsp,0x48
   14001648d:	ret    
   14001648e:	int3   
   14001648f:	int3   
   140016490:	sub    rsp,0x48
   140016494:	mov    rax,QWORD PTR [rdx]
   140016497:	mov    rcx,QWORD PTR [rcx+0x50]
   14001649b:	lea    r9,[rsp+0x20]
   1400164a0:	mov    QWORD PTR [r9],rax
   1400164a3:	mov    rax,QWORD PTR [rdx+0x8]
   1400164a7:	mov    QWORD PTR [r9+0x8],rax
   1400164ab:	mov    rax,QWORD PTR [rdx+0x10]
   1400164af:	lea    rdx,[rsp+0x20]
   1400164b4:	mov    QWORD PTR [r9+0x10],rax
   1400164b8:	mov    rax,QWORD PTR [rcx]
   1400164bb:	call   QWORD PTR [rax+0x88]
   1400164c1:	add    rsp,0x48
   1400164c5:	ret    
   1400164c6:	int3   
   1400164c7:	int3   
   1400164c8:	mov    rcx,QWORD PTR [rcx+0x50]
   1400164cc:	mov    rax,QWORD PTR [rcx]
   1400164cf:	rex.W jmp QWORD PTR [rax+0x90]
   1400164d6:	int3   
   1400164d7:	int3   
   1400164d8:	mov    rcx,QWORD PTR [rcx+0x50]
   1400164dc:	mov    rax,QWORD PTR [rcx]
   1400164df:	rex.W jmp QWORD PTR [rax+0x98]
   1400164e6:	int3   
   1400164e7:	int3   
   1400164e8:	sub    rsp,0x48
   1400164ec:	mov    rax,QWORD PTR [rdx]
   1400164ef:	mov    rcx,QWORD PTR [rcx+0x50]
   1400164f3:	lea    r9,[rsp+0x20]
   1400164f8:	mov    QWORD PTR [r9],rax
   1400164fb:	mov    rax,QWORD PTR [rdx+0x8]
   1400164ff:	mov    QWORD PTR [r9+0x8],rax
   140016503:	mov    rax,QWORD PTR [rdx+0x10]
   140016507:	lea    rdx,[rsp+0x20]
   14001650c:	mov    QWORD PTR [r9+0x10],rax
   140016510:	mov    rax,QWORD PTR [rcx]
   140016513:	call   QWORD PTR [rax+0xa0]
   140016519:	add    rsp,0x48
   14001651d:	ret    
   14001651e:	int3   
   14001651f:	int3   
   140016520:	sub    rsp,0x48
   140016524:	mov    rax,QWORD PTR [r8]
   140016527:	mov    rcx,QWORD PTR [rcx+0x50]
   14001652b:	lea    r9,[rsp+0x20]
   140016530:	mov    QWORD PTR [r9],rax
   140016533:	mov    rax,QWORD PTR [r8+0x8]
   140016537:	mov    QWORD PTR [r9+0x8],rax
   14001653b:	mov    rax,QWORD PTR [r8+0x10]
   14001653f:	lea    r8,[rsp+0x20]
   140016544:	mov    QWORD PTR [r9+0x10],rax
   140016548:	mov    rax,QWORD PTR [rcx]
   14001654b:	call   QWORD PTR [rax+0xa8]
   140016551:	add    rsp,0x48
   140016555:	ret    
   140016556:	int3   
   140016557:	int3   
   140016558:	sub    rsp,0x58
   14001655c:	mov    r10,QWORD PTR [rsp+0x88]
   140016564:	mov    rcx,QWORD PTR [rcx+0x50]
   140016568:	lea    r11,[rsp+0x30]
   14001656d:	mov    rax,QWORD PTR [r10]
   140016570:	mov    QWORD PTR [r11],rax
   140016573:	mov    rax,QWORD PTR [r10+0x8]
   140016577:	mov    QWORD PTR [r11+0x8],rax
   14001657b:	mov    rax,QWORD PTR [r10+0x10]
   14001657f:	mov    r10,QWORD PTR [rcx]
   140016582:	mov    QWORD PTR [r11+0x10],rax
   140016586:	lea    rax,[rsp+0x30]
   14001658b:	mov    QWORD PTR [rsp+0x28],rax
   140016590:	mov    rax,QWORD PTR [rsp+0x80]
   140016598:	mov    QWORD PTR [rsp+0x20],rax
   14001659d:	call   QWORD PTR [r10+0xb0]
   1400165a4:	add    rsp,0x58
   1400165a8:	ret    
   1400165a9:	int3   
   1400165aa:	int3   
   1400165ab:	int3   
   1400165ac:	sub    rsp,0x48
   1400165b0:	mov    rax,QWORD PTR [r8]
   1400165b3:	mov    rcx,QWORD PTR [rcx+0x50]
   1400165b7:	lea    r10,[rsp+0x20]
   1400165bc:	mov    QWORD PTR [r10],rax
   1400165bf:	mov    rax,QWORD PTR [r8+0x8]
   1400165c3:	mov    QWORD PTR [r10+0x8],rax
   1400165c7:	mov    rax,QWORD PTR [r8+0x10]
   1400165cb:	lea    r8,[rsp+0x20]
   1400165d0:	mov    QWORD PTR [r10+0x10],rax
   1400165d4:	mov    rax,QWORD PTR [rcx]
   1400165d7:	call   QWORD PTR [rax+0xb8]
   1400165dd:	add    rsp,0x48
   1400165e1:	ret    
   1400165e2:	int3   
   1400165e3:	int3   
   1400165e4:	mov    rcx,QWORD PTR [rcx+0x50]
   1400165e8:	mov    rax,QWORD PTR [rcx]
   1400165eb:	rex.W jmp QWORD PTR [rax+0xc0]
   1400165f2:	int3   
   1400165f3:	int3   
   1400165f4:	sub    rsp,0x48
   1400165f8:	mov    rax,QWORD PTR [rdx]
   1400165fb:	mov    rcx,QWORD PTR [rcx+0x50]
   1400165ff:	lea    r8,[rsp+0x20]
   140016604:	mov    QWORD PTR [r8],rax
   140016607:	mov    rax,QWORD PTR [rdx+0x8]
   14001660b:	mov    QWORD PTR [r8+0x8],rax
   14001660f:	mov    rax,QWORD PTR [rdx+0x10]
   140016613:	lea    rdx,[rsp+0x20]
   140016618:	mov    QWORD PTR [r8+0x10],rax
   14001661c:	mov    rax,QWORD PTR [rcx]
   14001661f:	call   QWORD PTR [rax+0xc8]
   140016625:	add    rsp,0x48
   140016629:	ret    
   14001662a:	int3   
   14001662b:	int3   
   14001662c:	sub    rsp,0x48
   140016630:	mov    rax,QWORD PTR [rdx]
   140016633:	mov    rcx,QWORD PTR [rcx+0x50]
   140016637:	lea    r9,[rsp+0x20]
   14001663c:	mov    QWORD PTR [r9],rax
   14001663f:	mov    rax,QWORD PTR [rdx+0x8]
   140016643:	mov    QWORD PTR [r9+0x8],rax
   140016647:	mov    rax,QWORD PTR [rdx+0x10]
   14001664b:	lea    rdx,[rsp+0x20]
   140016650:	mov    QWORD PTR [r9+0x10],rax
   140016654:	mov    rax,QWORD PTR [rcx]
   140016657:	call   QWORD PTR [rax+0xd0]
   14001665d:	add    rsp,0x48
   140016661:	ret    
   140016662:	int3   
   140016663:	int3   
   140016664:	mov    QWORD PTR [rcx+0x58],rdx
   140016668:	xor    eax,eax
   14001666a:	ret    
   14001666b:	int3   
   14001666c:	mov    eax,0x1
   140016671:	ret    
   140016672:	int3   
   140016673:	int3   
   140016674:	sub    rsp,0x28
   140016678:	mov    eax,DWORD PTR [rdx+0x8]
   14001667b:	cmp    eax,0x100
   140016680:	jb     0x140016689
   140016682:	cmp    eax,0x109
   140016687:	jbe    0x140016697
   140016689:	cmp    eax,0x200
   14001668e:	jb     0x14001669e
   140016690:	cmp    eax,0x209
   140016695:	ja     0x14001669e
   140016697:	call   0x14001fea0
   14001669c:	jmp    0x1400166a0
   14001669e:	xor    eax,eax
   1400166a0:	add    rsp,0x28
   1400166a4:	ret    
   1400166a5:	int3   
   1400166a6:	int3   
   1400166a7:	int3   
   1400166a8:	mov    eax,DWORD PTR [rcx+0x78]
   1400166ab:	and    eax,0x10
   1400166ae:	ret    
   1400166af:	int3   
   1400166b0:	mov    edx,DWORD PTR [rcx+0x128]
   1400166b6:	xor    eax,eax
   1400166b8:	cmp    edx,eax
   1400166ba:	je     0x1400166d1
   1400166bc:	cmp    edx,0xe002
   1400166c2:	je     0x1400166d1
   1400166c4:	cmp    edx,0xe001
   1400166ca:	je     0x1400166d1
   1400166cc:	mov    eax,0x1
   1400166d1:	ret    
   1400166d2:	int3   
   1400166d3:	int3   
   1400166d4:	sub    rsp,0x28
   1400166d8:	test   rdx,rdx
   1400166db:	jne    0x1400166e3
   1400166dd:	call   0x1400218c0
   1400166e2:	int3   
   1400166e3:	and    QWORD PTR [rdx],0x0
   1400166e7:	mov    eax,0x1
   1400166ec:	add    rsp,0x28
   1400166f0:	ret    
   1400166f1:	int3   
   1400166f2:	int3   
   1400166f3:	int3   
   1400166f4:	sub    rsp,0x28
   1400166f8:	test   r8,r8
   1400166fb:	jne    0x140016703
   1400166fd:	call   0x1400218c0
   140016702:	int3   
   140016703:	and    QWORD PTR [r8],0x0
   140016707:	mov    eax,0x1
   14001670c:	add    rsp,0x28
   140016710:	ret    
   140016711:	int3   
   140016712:	int3   
   140016713:	int3   
   140016714:	lea    rax,[rip+0x2d815]        # 0x140043f30
   14001671b:	ret    
   14001671c:	mov    rax,QWORD PTR [rcx]
   14001671f:	xor    edx,edx
   140016721:	rex.W jmp QWORD PTR [rax+0x8]
   140016725:	int3   
   140016726:	int3   
   140016727:	int3   
   140016728:	sub    rsp,0x38
   14001672c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016735:	mov    ecx,0x1e0
   14001673a:	call   0x140024948
   14001673f:	mov    rcx,rax
   140016742:	mov    QWORD PTR [rsp+0x40],rax
   140016747:	xor    eax,eax
   140016749:	cmp    rcx,rax
   14001674c:	je     0x140016754
   14001674e:	call   0x14001e800
   140016753:	nop
   140016754:	add    rsp,0x38
   140016758:	ret    
   140016759:	int3   
   14001675a:	int3   
   14001675b:	int3   
   14001675c:	int3   
   14001675d:	int3   
   14001675e:	int3   
   14001675f:	int3   
   140016760:	int3   
   140016761:	int3   
   140016762:	int3   
   140016763:	int3   
   140016764:	int3   
   140016765:	int3   
   140016766:	int3   
   140016767:	int3   
   140016768:	rex push rbp
   14001676a:	sub    rsp,0x20
   14001676e:	mov    rbp,rdx
   140016771:	mov    rcx,QWORD PTR [rbp+0x40]
   140016775:	call   0x14002496c
   14001677a:	add    rsp,0x20
   14001677e:	pop    rbp
   14001677f:	ret    
   140016780:	mov    QWORD PTR [rsp+0x8],rbx
   140016785:	mov    QWORD PTR [rsp+0x20],rsi
   14001678a:	push   rdi
   14001678b:	sub    rsp,0x30
   14001678f:	mov    rdi,rcx
   140016792:	and    QWORD PTR [rsp+0x50],0x0
   140016798:	call   0x14001f2e8
   14001679d:	lea    rdx,[rsp+0x50]
   1400167a2:	mov    rcx,QWORD PTR [rax+0xd8]
   1400167a9:	call   0x14001e63c
   1400167ae:	mov    ebx,eax
   1400167b0:	mov    DWORD PTR [rsp+0x48],eax
   1400167b4:	and    WORD PTR [rsp+0x20],0x0
   1400167ba:	test   eax,eax
   1400167bc:	je     0x140016807
   1400167be:	mov    rcx,rdi
   1400167c1:	call   QWORD PTR [rip+0x2d019]        # 0x1400437e0
   1400167c7:	movzx  edi,ax
   1400167ca:	mov    WORD PTR [rsp+0x20],ax
   1400167cf:	cmp    ebx,0x2
   1400167d2:	je     0x140016804
   1400167d4:	xor    ebx,ebx
   1400167d6:	test   di,di
   1400167d9:	sete   bl
   1400167dc:	test   ebx,ebx
   1400167de:	je     0x1400167ea
   1400167e0:	call   QWORD PTR [rip+0x2cd02]        # 0x1400434e8
   1400167e6:	mov    esi,eax
   1400167e8:	jmp    0x1400167ec
   1400167ea:	xor    esi,esi
   1400167ec:	mov    rdx,QWORD PTR [rsp+0x50]
   1400167f1:	xor    ecx,ecx
   1400167f3:	call   0x14001e620
   1400167f8:	test   ebx,ebx
   1400167fa:	je     0x140016804
   1400167fc:	mov    ecx,esi
   1400167fe:	call   QWORD PTR [rip+0x2cc94]        # 0x140043498
   140016804:	mov    ax,di
   140016807:	mov    rbx,QWORD PTR [rsp+0x40]
   14001680c:	mov    rsi,QWORD PTR [rsp+0x58]
   140016811:	add    rsp,0x30
   140016815:	pop    rdi
   140016816:	ret    
   140016817:	int3   
   140016818:	int3   
   140016819:	int3   
   14001681a:	int3   
   14001681b:	int3   
   14001681c:	int3   
   14001681d:	int3   
   14001681e:	int3   
   14001681f:	int3   
   140016820:	rex push rbx
   140016822:	push   rbp
   140016823:	push   rdi
   140016824:	sub    rsp,0x20
   140016828:	mov    rbp,rdx
   14001682b:	cmp    DWORD PTR [rbp+0x48],0x2
   14001682f:	je     0x140016861
   140016831:	xor    ebx,ebx
   140016833:	cmp    WORD PTR [rbp+0x20],bx
   140016837:	sete   bl
   14001683a:	test   ebx,ebx
   14001683c:	je     0x140016848
   14001683e:	call   QWORD PTR [rip+0x2cca4]        # 0x1400434e8
   140016844:	mov    edi,eax
   140016846:	jmp    0x14001684a
   140016848:	xor    edi,edi
   14001684a:	mov    rdx,QWORD PTR [rbp+0x50]
   14001684e:	xor    ecx,ecx
   140016850:	call   0x14001e620
   140016855:	test   ebx,ebx
   140016857:	je     0x140016861
   140016859:	mov    ecx,edi
   14001685b:	call   QWORD PTR [rip+0x2cc37]        # 0x140043498
   140016861:	add    rsp,0x20
   140016865:	pop    rdi
   140016866:	pop    rbp
   140016867:	pop    rbx
   140016868:	ret    
   140016869:	int3   
   14001686a:	int3   
   14001686b:	int3   
   14001686c:	mov    rax,rsp
   14001686f:	mov    QWORD PTR [rax+0x8],rbx
   140016873:	mov    QWORD PTR [rax+0x10],rsi
   140016877:	mov    QWORD PTR [rax+0x18],rdi
   14001687b:	push   r12
   14001687d:	sub    rsp,0x30
   140016881:	mov    rdi,r8
   140016884:	mov    rsi,rdx
   140016887:	mov    r12,rcx
   14001688a:	and    QWORD PTR [rax-0x10],0x0
   14001688f:	call   0x14001f2e8
   140016894:	lea    rdx,[rsp+0x28]
   140016899:	mov    rcx,QWORD PTR [rax+0xd8]
   1400168a0:	call   0x14001e63c
   1400168a5:	mov    ebx,eax
   1400168a7:	mov    DWORD PTR [rsp+0x58],eax
   1400168ab:	and    DWORD PTR [rsp+0x20],0x0
   1400168b0:	test   eax,eax
   1400168b2:	je     0x1400168ff
   1400168b4:	mov    r8,rdi
   1400168b7:	mov    rdx,rsi
   1400168ba:	mov    rcx,r12
   1400168bd:	call   QWORD PTR [rip+0x2d0ad]        # 0x140043970
   1400168c3:	mov    esi,eax
   1400168c5:	mov    DWORD PTR [rsp+0x20],eax
   1400168c9:	cmp    ebx,0x2
   1400168cc:	je     0x1400168fd
   1400168ce:	xor    ebx,ebx
   1400168d0:	test   eax,eax
   1400168d2:	sete   bl
   1400168d5:	test   ebx,ebx
   1400168d7:	je     0x1400168e3
   1400168d9:	call   QWORD PTR [rip+0x2cc09]        # 0x1400434e8
   1400168df:	mov    edi,eax
   1400168e1:	jmp    0x1400168e5
   1400168e3:	xor    edi,edi
   1400168e5:	mov    rdx,QWORD PTR [rsp+0x28]
   1400168ea:	xor    ecx,ecx
   1400168ec:	call   0x14001e620
   1400168f1:	test   ebx,ebx
   1400168f3:	je     0x1400168fd
   1400168f5:	mov    ecx,edi
   1400168f7:	call   QWORD PTR [rip+0x2cb9b]        # 0x140043498
   1400168fd:	mov    eax,esi
   1400168ff:	mov    rbx,QWORD PTR [rsp+0x40]
   140016904:	mov    rsi,QWORD PTR [rsp+0x48]
   140016909:	mov    rdi,QWORD PTR [rsp+0x50]
   14001690e:	add    rsp,0x30
   140016912:	pop    r12
   140016914:	ret    
   140016915:	int3   
   140016916:	int3   
   140016917:	int3   
   140016918:	int3   
   140016919:	int3   
   14001691a:	int3   
   14001691b:	int3   
   14001691c:	rex push rbx
   14001691e:	push   rbp
   14001691f:	push   rdi
   140016920:	sub    rsp,0x20
   140016924:	mov    rbp,rdx
   140016927:	cmp    DWORD PTR [rbp+0x58],0x2
   14001692b:	je     0x14001695c
   14001692d:	xor    ebx,ebx
   14001692f:	cmp    DWORD PTR [rbp+0x20],ebx
   140016932:	sete   bl
   140016935:	test   ebx,ebx
   140016937:	je     0x140016943
   140016939:	call   QWORD PTR [rip+0x2cba9]        # 0x1400434e8
   14001693f:	mov    edi,eax
   140016941:	jmp    0x140016945
   140016943:	xor    edi,edi
   140016945:	mov    rdx,QWORD PTR [rbp+0x28]
   140016949:	xor    ecx,ecx
   14001694b:	call   0x14001e620
   140016950:	test   ebx,ebx
   140016952:	je     0x14001695c
   140016954:	mov    ecx,edi
   140016956:	call   QWORD PTR [rip+0x2cb3c]        # 0x140043498
   14001695c:	add    rsp,0x20
   140016960:	pop    rdi
   140016961:	pop    rbp
   140016962:	pop    rbx
   140016963:	ret    
   140016964:	mov    rax,rsp
   140016967:	mov    QWORD PTR [rax+0x8],rbx
   14001696b:	mov    QWORD PTR [rax+0x10],rsi
   14001696f:	mov    QWORD PTR [rax+0x18],rdi
   140016973:	push   r12
   140016975:	sub    rsp,0x30
   140016979:	mov    rdi,r8
   14001697c:	mov    rsi,rdx
   14001697f:	mov    r12,rcx
   140016982:	and    QWORD PTR [rax-0x10],0x0
   140016987:	call   0x14001f2e8
   14001698c:	lea    rdx,[rsp+0x28]
   140016991:	mov    rcx,QWORD PTR [rax+0xd8]
   140016998:	call   0x14001e63c
   14001699d:	mov    ebx,eax
   14001699f:	mov    DWORD PTR [rsp+0x58],eax
   1400169a3:	and    DWORD PTR [rsp+0x20],0x0
   1400169a8:	test   eax,eax
   1400169aa:	je     0x1400169f7
   1400169ac:	mov    r8,rdi
   1400169af:	mov    rdx,rsi
   1400169b2:	mov    rcx,r12
   1400169b5:	call   QWORD PTR [rip+0x2ce1d]        # 0x1400437d8
   1400169bb:	mov    esi,eax
   1400169bd:	mov    DWORD PTR [rsp+0x20],eax
   1400169c1:	cmp    ebx,0x2
   1400169c4:	je     0x1400169f5
   1400169c6:	xor    ebx,ebx
   1400169c8:	test   eax,eax
   1400169ca:	sete   bl
   1400169cd:	test   ebx,ebx
   1400169cf:	je     0x1400169db
   1400169d1:	call   QWORD PTR [rip+0x2cb11]        # 0x1400434e8
   1400169d7:	mov    edi,eax
   1400169d9:	jmp    0x1400169dd
   1400169db:	xor    edi,edi
   1400169dd:	mov    rdx,QWORD PTR [rsp+0x28]
   1400169e2:	xor    ecx,ecx
   1400169e4:	call   0x14001e620
   1400169e9:	test   ebx,ebx
   1400169eb:	je     0x1400169f5
   1400169ed:	mov    ecx,edi
   1400169ef:	call   QWORD PTR [rip+0x2caa3]        # 0x140043498
   1400169f5:	mov    eax,esi
   1400169f7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400169fc:	mov    rsi,QWORD PTR [rsp+0x48]
   140016a01:	mov    rdi,QWORD PTR [rsp+0x50]
   140016a06:	add    rsp,0x30
   140016a0a:	pop    r12
   140016a0c:	ret    
   140016a0d:	int3   
   140016a0e:	int3   
   140016a0f:	int3   
   140016a10:	int3   
   140016a11:	int3   
   140016a12:	int3   
   140016a13:	int3   
   140016a14:	rex push rbx
   140016a16:	push   rbp
   140016a17:	push   rdi
   140016a18:	sub    rsp,0x20
   140016a1c:	mov    rbp,rdx
   140016a1f:	cmp    DWORD PTR [rbp+0x58],0x2
   140016a23:	je     0x140016a54
   140016a25:	xor    ebx,ebx
   140016a27:	cmp    DWORD PTR [rbp+0x20],ebx
   140016a2a:	sete   bl
   140016a2d:	test   ebx,ebx
   140016a2f:	je     0x140016a3b
   140016a31:	call   QWORD PTR [rip+0x2cab1]        # 0x1400434e8
   140016a37:	mov    edi,eax
   140016a39:	jmp    0x140016a3d
   140016a3b:	xor    edi,edi
   140016a3d:	mov    rdx,QWORD PTR [rbp+0x28]
   140016a41:	xor    ecx,ecx
   140016a43:	call   0x14001e620
   140016a48:	test   ebx,ebx
   140016a4a:	je     0x140016a54
   140016a4c:	mov    ecx,edi
   140016a4e:	call   QWORD PTR [rip+0x2ca44]        # 0x140043498
   140016a54:	add    rsp,0x20
   140016a58:	pop    rdi
   140016a59:	pop    rbp
   140016a5a:	pop    rbx
   140016a5b:	ret    
   140016a5c:	mov    rax,rsp
   140016a5f:	mov    QWORD PTR [rax+0x8],rbx
   140016a63:	mov    QWORD PTR [rax+0x10],rsi
   140016a67:	mov    QWORD PTR [rax+0x18],rdi
   140016a6b:	mov    QWORD PTR [rax+0x20],r12
   140016a6f:	push   r13
   140016a71:	sub    rsp,0x80
   140016a78:	mov    edi,r9d
   140016a7b:	mov    rsi,r8
   140016a7e:	mov    r12,rdx
   140016a81:	mov    r13d,ecx
   140016a84:	and    QWORD PTR [rax-0x20],0x0
   140016a89:	call   0x14001f2e8
   140016a8e:	lea    rdx,[rsp+0x68]
   140016a93:	mov    rcx,QWORD PTR [rax+0xd8]
   140016a9a:	call   0x14001e63c
   140016a9f:	mov    ebx,eax
   140016aa1:	mov    DWORD PTR [rsp+0x60],eax
   140016aa5:	and    QWORD PTR [rsp+0x70],0x0
   140016aab:	test   eax,eax
   140016aad:	jne    0x140016ab6
   140016aaf:	xor    eax,eax
   140016ab1:	jmp    0x140016b68
   140016ab6:	mov    rax,QWORD PTR [rsp+0xe8]
   140016abe:	mov    QWORD PTR [rsp+0x58],rax
   140016ac3:	mov    rax,QWORD PTR [rsp+0xe0]
   140016acb:	mov    QWORD PTR [rsp+0x50],rax
   140016ad0:	mov    rax,QWORD PTR [rsp+0xd8]
   140016ad8:	mov    QWORD PTR [rsp+0x48],rax
   140016add:	mov    rax,QWORD PTR [rsp+0xd0]
   140016ae5:	mov    QWORD PTR [rsp+0x40],rax
   140016aea:	mov    eax,DWORD PTR [rsp+0xc8]
   140016af1:	mov    DWORD PTR [rsp+0x38],eax
   140016af5:	mov    eax,DWORD PTR [rsp+0xc0]
   140016afc:	mov    DWORD PTR [rsp+0x30],eax
   140016b00:	mov    eax,DWORD PTR [rsp+0xb8]
   140016b07:	mov    DWORD PTR [rsp+0x28],eax
   140016b0b:	mov    eax,DWORD PTR [rsp+0xb0]
   140016b12:	mov    DWORD PTR [rsp+0x20],eax
   140016b16:	mov    r9d,edi
   140016b19:	mov    r8,rsi
   140016b1c:	mov    rdx,r12
   140016b1f:	mov    ecx,r13d
   140016b22:	call   QWORD PTR [rip+0x2cca8]        # 0x1400437d0
   140016b28:	mov    rsi,rax
   140016b2b:	mov    QWORD PTR [rsp+0x70],rax
   140016b30:	cmp    ebx,0x2
   140016b33:	je     0x140016b65
   140016b35:	xor    ebx,ebx
   140016b37:	test   rax,rax
   140016b3a:	sete   bl
   140016b3d:	test   ebx,ebx
   140016b3f:	je     0x140016b4b
   140016b41:	call   QWORD PTR [rip+0x2c9a1]        # 0x1400434e8
   140016b47:	mov    edi,eax
   140016b49:	jmp    0x140016b4d
   140016b4b:	xor    edi,edi
   140016b4d:	mov    rdx,QWORD PTR [rsp+0x68]
   140016b52:	xor    ecx,ecx
   140016b54:	call   0x14001e620
   140016b59:	test   ebx,ebx
   140016b5b:	je     0x140016b65
   140016b5d:	mov    ecx,edi
   140016b5f:	call   QWORD PTR [rip+0x2c933]        # 0x140043498
   140016b65:	mov    rax,rsi
   140016b68:	lea    r11,[rsp+0x80]
   140016b70:	mov    rbx,QWORD PTR [r11+0x10]
   140016b74:	mov    rsi,QWORD PTR [r11+0x18]
   140016b78:	mov    rdi,QWORD PTR [r11+0x20]
   140016b7c:	mov    r12,QWORD PTR [r11+0x28]
   140016b80:	mov    rsp,r11
   140016b83:	pop    r13
   140016b85:	ret    
   140016b86:	int3   
   140016b87:	int3   
   140016b88:	int3   
   140016b89:	int3   
   140016b8a:	int3   
   140016b8b:	int3   
   140016b8c:	rex push rbx
   140016b8e:	push   rbp
   140016b8f:	push   rdi
   140016b90:	sub    rsp,0x60
   140016b94:	mov    rbp,rdx
   140016b97:	cmp    DWORD PTR [rbp+0x60],0x2
   140016b9b:	je     0x140016bcd
   140016b9d:	xor    ebx,ebx
   140016b9f:	cmp    QWORD PTR [rbp+0x70],rbx
   140016ba3:	sete   bl
   140016ba6:	test   ebx,ebx
   140016ba8:	je     0x140016bb4
   140016baa:	call   QWORD PTR [rip+0x2c938]        # 0x1400434e8
   140016bb0:	mov    edi,eax
   140016bb2:	jmp    0x140016bb6
   140016bb4:	xor    edi,edi
   140016bb6:	mov    rdx,QWORD PTR [rbp+0x68]
   140016bba:	xor    ecx,ecx
   140016bbc:	call   0x14001e620
   140016bc1:	test   ebx,ebx
   140016bc3:	je     0x140016bcd
   140016bc5:	mov    ecx,edi
   140016bc7:	call   QWORD PTR [rip+0x2c8cb]        # 0x140043498
   140016bcd:	add    rsp,0x60
   140016bd1:	pop    rdi
   140016bd2:	pop    rbp
   140016bd3:	pop    rbx
   140016bd4:	ret    
   140016bd5:	int3   
   140016bd6:	int3   
   140016bd7:	int3   
   140016bd8:	mov    rax,rsp
   140016bdb:	mov    QWORD PTR [rax+0x8],rbx
   140016bdf:	mov    QWORD PTR [rax+0x10],rsi
   140016be3:	mov    QWORD PTR [rax+0x18],rdi
   140016be7:	mov    QWORD PTR [rax+0x20],r12
   140016beb:	push   r13
   140016bed:	sub    rsp,0x30
   140016bf1:	mov    edi,r9d
   140016bf4:	mov    rsi,r8
   140016bf7:	mov    r12,rdx
   140016bfa:	mov    r13,rcx
   140016bfd:	and    QWORD PTR [rax-0x10],0x0
   140016c02:	call   0x14001f2e8
   140016c07:	lea    rdx,[rsp+0x28]
   140016c0c:	mov    rcx,QWORD PTR [rax+0xd8]
   140016c13:	call   0x14001e63c
   140016c18:	mov    ebx,eax
   140016c1a:	mov    DWORD PTR [rsp+0x24],eax
   140016c1e:	and    DWORD PTR [rsp+0x20],0x0
   140016c23:	test   eax,eax
   140016c25:	je     0x140016c75
   140016c27:	mov    r9d,edi
   140016c2a:	mov    r8,rsi
   140016c2d:	mov    rdx,r12
   140016c30:	mov    rcx,r13
   140016c33:	call   QWORD PTR [rip+0x2cb8f]        # 0x1400437c8
   140016c39:	mov    esi,eax
   140016c3b:	mov    DWORD PTR [rsp+0x20],eax
   140016c3f:	cmp    ebx,0x2
   140016c42:	je     0x140016c73
   140016c44:	xor    ebx,ebx
   140016c46:	test   eax,eax
   140016c48:	sete   bl
   140016c4b:	test   ebx,ebx
   140016c4d:	je     0x140016c59
   140016c4f:	call   QWORD PTR [rip+0x2c893]        # 0x1400434e8
   140016c55:	mov    edi,eax
   140016c57:	jmp    0x140016c5b
   140016c59:	xor    edi,edi
   140016c5b:	mov    rdx,QWORD PTR [rsp+0x28]
   140016c60:	xor    ecx,ecx
   140016c62:	call   0x14001e620
   140016c67:	test   ebx,ebx
   140016c69:	je     0x140016c73
   140016c6b:	mov    ecx,edi
   140016c6d:	call   QWORD PTR [rip+0x2c825]        # 0x140043498
   140016c73:	mov    eax,esi
   140016c75:	mov    rbx,QWORD PTR [rsp+0x40]
   140016c7a:	mov    rsi,QWORD PTR [rsp+0x48]
   140016c7f:	mov    rdi,QWORD PTR [rsp+0x50]
   140016c84:	mov    r12,QWORD PTR [rsp+0x58]
   140016c89:	add    rsp,0x30
   140016c8d:	pop    r13
   140016c8f:	ret    
   140016c90:	int3   
   140016c91:	int3   
   140016c92:	int3   
   140016c93:	int3   
   140016c94:	int3   
   140016c95:	int3   
   140016c96:	int3   
   140016c97:	int3   
   140016c98:	rex push rbx
   140016c9a:	push   rbp
   140016c9b:	push   rdi
   140016c9c:	sub    rsp,0x20
   140016ca0:	mov    rbp,rdx
   140016ca3:	cmp    DWORD PTR [rbp+0x24],0x2
   140016ca7:	je     0x140016cd8
   140016ca9:	xor    ebx,ebx
   140016cab:	cmp    DWORD PTR [rbp+0x20],ebx
   140016cae:	sete   bl
   140016cb1:	test   ebx,ebx
   140016cb3:	je     0x140016cbf
   140016cb5:	call   QWORD PTR [rip+0x2c82d]        # 0x1400434e8
   140016cbb:	mov    edi,eax
   140016cbd:	jmp    0x140016cc1
   140016cbf:	xor    edi,edi
   140016cc1:	mov    rdx,QWORD PTR [rbp+0x28]
   140016cc5:	xor    ecx,ecx
   140016cc7:	call   0x14001e620
   140016ccc:	test   ebx,ebx
   140016cce:	je     0x140016cd8
   140016cd0:	mov    ecx,edi
   140016cd2:	call   QWORD PTR [rip+0x2c7c0]        # 0x140043498
   140016cd8:	add    rsp,0x20
   140016cdc:	pop    rdi
   140016cdd:	pop    rbp
   140016cde:	pop    rbx
   140016cdf:	ret    
   140016ce0:	mov    QWORD PTR [rsp+0x8],rbx
   140016ce5:	mov    QWORD PTR [rsp+0x20],rsi
   140016cea:	push   rdi
   140016ceb:	sub    rsp,0x30
   140016cef:	mov    rdi,rcx
   140016cf2:	and    QWORD PTR [rsp+0x50],0x0
   140016cf8:	call   0x14001f2e8
   140016cfd:	lea    rdx,[rsp+0x50]
   140016d02:	mov    rcx,QWORD PTR [rax+0xd8]
   140016d09:	call   0x14001e63c
   140016d0e:	mov    ebx,eax
   140016d10:	mov    DWORD PTR [rsp+0x48],eax
   140016d14:	and    QWORD PTR [rsp+0x20],0x0
   140016d1a:	test   eax,eax
   140016d1c:	jne    0x140016d22
   140016d1e:	xor    eax,eax
   140016d20:	jmp    0x140016d6b
   140016d22:	mov    rcx,rdi
   140016d25:	call   QWORD PTR [rip+0x2c765]        # 0x140043490
   140016d2b:	mov    rdi,rax
   140016d2e:	mov    QWORD PTR [rsp+0x20],rax
   140016d33:	cmp    ebx,0x2
   140016d36:	je     0x140016d68
   140016d38:	xor    ebx,ebx
   140016d3a:	test   rax,rax
   140016d3d:	sete   bl
   140016d40:	test   ebx,ebx
   140016d42:	je     0x140016d4e
   140016d44:	call   QWORD PTR [rip+0x2c79e]        # 0x1400434e8
   140016d4a:	mov    esi,eax
   140016d4c:	jmp    0x140016d50
   140016d4e:	xor    esi,esi
   140016d50:	mov    rdx,QWORD PTR [rsp+0x50]
   140016d55:	xor    ecx,ecx
   140016d57:	call   0x14001e620
   140016d5c:	test   ebx,ebx
   140016d5e:	je     0x140016d68
   140016d60:	mov    ecx,esi
   140016d62:	call   QWORD PTR [rip+0x2c730]        # 0x140043498
   140016d68:	mov    rax,rdi
   140016d6b:	mov    rbx,QWORD PTR [rsp+0x40]
   140016d70:	mov    rsi,QWORD PTR [rsp+0x58]
   140016d75:	add    rsp,0x30
   140016d79:	pop    rdi
   140016d7a:	ret    
   140016d7b:	int3   
   140016d7c:	int3   
   140016d7d:	int3   
   140016d7e:	int3   
   140016d7f:	int3   
   140016d80:	rex push rbx
   140016d82:	push   rbp
   140016d83:	push   rdi
   140016d84:	sub    rsp,0x20
   140016d88:	mov    rbp,rdx
   140016d8b:	cmp    DWORD PTR [rbp+0x48],0x2
   140016d8f:	je     0x140016dc1
   140016d91:	xor    ebx,ebx
   140016d93:	cmp    QWORD PTR [rbp+0x20],rbx
   140016d97:	sete   bl
   140016d9a:	test   ebx,ebx
   140016d9c:	je     0x140016da8
   140016d9e:	call   QWORD PTR [rip+0x2c744]        # 0x1400434e8
   140016da4:	mov    edi,eax
   140016da6:	jmp    0x140016daa
   140016da8:	xor    edi,edi
   140016daa:	mov    rdx,QWORD PTR [rbp+0x50]
   140016dae:	xor    ecx,ecx
   140016db0:	call   0x14001e620
   140016db5:	test   ebx,ebx
   140016db7:	je     0x140016dc1
   140016db9:	mov    ecx,edi
   140016dbb:	call   QWORD PTR [rip+0x2c6d7]        # 0x140043498
   140016dc1:	add    rsp,0x20
   140016dc5:	pop    rdi
   140016dc6:	pop    rbp
   140016dc7:	pop    rbx
   140016dc8:	ret    
   140016dc9:	int3   
   140016dca:	int3   
   140016dcb:	int3   
   140016dcc:	sub    rsp,0x28
   140016dd0:	cmp    DWORD PTR [rcx+0x8],0x0
   140016dd4:	je     0x140016de0
   140016dd6:	mov    rdx,QWORD PTR [rcx]
   140016dd9:	xor    ecx,ecx
   140016ddb:	call   0x14001e620
   140016de0:	add    rsp,0x28
   140016de4:	ret    
   140016de5:	int3   
   140016de6:	int3   
   140016de7:	int3   
   140016de8:	rex push rbx
   140016dea:	sub    rsp,0x20
   140016dee:	mov    rbx,rcx
   140016df1:	call   0x140014cd0
   140016df6:	lea    rax,[rip+0x2d42b]        # 0x140044228
   140016dfd:	lea    r11,[rip+0x2d544]        # 0x140044348
   140016e04:	mov    QWORD PTR [rbx],r11
   140016e07:	mov    QWORD PTR [rbx+0x60],rax
   140016e0b:	lea    rax,[rip+0x2d4fe]        # 0x140044310
   140016e12:	mov    QWORD PTR [rbx+0x68],rax
   140016e16:	xor    eax,eax
   140016e18:	mov    QWORD PTR [rbx+0x40],rax
   140016e1c:	mov    BYTE PTR [rbx+0x48],al
   140016e1f:	mov    QWORD PTR [rbx+0x58],rax
   140016e23:	mov    QWORD PTR [rbx+0x50],rax
   140016e27:	mov    QWORD PTR [rbx+0x70],rax
   140016e2b:	mov    DWORD PTR [rbx+0x78],eax
   140016e2e:	mov    QWORD PTR [rbx+0x80],rax
   140016e35:	mov    DWORD PTR [rbx+0x88],eax
   140016e3b:	mov    QWORD PTR [rbx+0x90],rax
   140016e42:	mov    QWORD PTR [rbx+0x98],rax
   140016e49:	mov    QWORD PTR [rbx+0xa0],rax
   140016e50:	mov    rax,rbx
   140016e53:	add    rsp,0x20
   140016e57:	pop    rbx
   140016e58:	ret    
   140016e59:	int3   
   140016e5a:	int3   
   140016e5b:	int3   
   140016e5c:	mov    QWORD PTR [rsp+0x8],rbx
   140016e61:	push   rdi
   140016e62:	sub    rsp,0x20
   140016e66:	mov    rbx,rcx
   140016e69:	mov    rcx,QWORD PTR [rcx+0x40]
   140016e6d:	mov    rdi,r8
   140016e70:	call   QWORD PTR [rip+0x2cb4a]        # 0x1400439c0
   140016e76:	mov    rcx,rbx
   140016e79:	call   0x14001fee4
   140016e7e:	mov    rbx,QWORD PTR [rsp+0x30]
   140016e83:	mov    DWORD PTR [rdi],eax
   140016e85:	add    rsp,0x20
   140016e89:	pop    rdi
   140016e8a:	ret    
   140016e8b:	int3   
   140016e8c:	mov    rax,rsp
   140016e8f:	mov    QWORD PTR [rax+0x8],rbx
   140016e93:	mov    QWORD PTR [rax+0x10],rbp
   140016e97:	mov    QWORD PTR [rax+0x18],rsi
   140016e9b:	mov    QWORD PTR [rax+0x20],rdi
   140016e9f:	push   r12
   140016ea1:	sub    rsp,0x60
   140016ea5:	mov    rax,QWORD PTR [rsp+0xa0]
   140016ead:	xor    ebx,ebx
   140016eaf:	mov    rsi,r9
   140016eb2:	cmp    rax,rbx
   140016eb5:	mov    rbp,r8
   140016eb8:	mov    r12d,edx
   140016ebb:	mov    rdi,rcx
   140016ebe:	je     0x140016ec4
   140016ec0:	mov    rbx,QWORD PTR [rax+0x40]
   140016ec4:	mov    rax,QWORD PTR [rsp+0x98]
   140016ecc:	mov    r11,QWORD PTR [rcx]
   140016ecf:	mov    ecx,DWORD PTR [rsp+0xa8]
   140016ed6:	mov    r9d,DWORD PTR [rax+0x4]
   140016eda:	mov    r10d,DWORD PTR [rax]
   140016edd:	mov    r8d,DWORD PTR [rax+0xc]
   140016ee1:	mov    edx,DWORD PTR [rax+0x8]
   140016ee4:	mov    rax,QWORD PTR [rsp+0xb0]
   140016eec:	sub    r8d,r9d
   140016eef:	mov    QWORD PTR [rsp+0x58],rax
   140016ef4:	mov    eax,DWORD PTR [rsp+0x90]
   140016efb:	mov    QWORD PTR [rsp+0x50],rcx
   140016f00:	mov    QWORD PTR [rsp+0x48],rbx
   140016f05:	mov    DWORD PTR [rsp+0x40],r8d
   140016f0a:	sub    edx,r10d
   140016f0d:	mov    DWORD PTR [rsp+0x38],edx
   140016f11:	mov    DWORD PTR [rsp+0x30],r9d
   140016f16:	mov    DWORD PTR [rsp+0x28],r10d
   140016f1b:	mov    r9,rsi
   140016f1e:	mov    r8,rbp
   140016f21:	mov    edx,r12d
   140016f24:	mov    rcx,rdi
   140016f27:	mov    DWORD PTR [rsp+0x20],eax
   140016f2b:	call   QWORD PTR [r11+0xb8]
   140016f32:	lea    r11,[rsp+0x60]
   140016f37:	mov    rbx,QWORD PTR [r11+0x10]
   140016f3b:	mov    rbp,QWORD PTR [r11+0x18]
   140016f3f:	mov    rsi,QWORD PTR [r11+0x20]
   140016f43:	mov    rdi,QWORD PTR [r11+0x28]
   140016f47:	mov    rsp,r11
   140016f4a:	pop    r12
   140016f4c:	ret    
   140016f4d:	int3   
   140016f4e:	int3   
   140016f4f:	int3   
   140016f50:	mov    rax,rsp
   140016f53:	mov    QWORD PTR [rax+0x8],rbx
   140016f57:	mov    QWORD PTR [rax+0x10],rbp
   140016f5b:	mov    QWORD PTR [rax+0x18],rsi
   140016f5f:	mov    QWORD PTR [rax+0x20],rdi
   140016f63:	push   r12
   140016f65:	sub    rsp,0x60
   140016f69:	mov    rax,QWORD PTR [rsp+0x98]
   140016f71:	xor    ebx,ebx
   140016f73:	mov    edi,r9d
   140016f76:	cmp    rax,rbx
   140016f79:	mov    rbp,r8
   140016f7c:	mov    r12,rdx
   140016f7f:	mov    rsi,rcx
   140016f82:	je     0x140016f88
   140016f84:	mov    rbx,QWORD PTR [rax+0x40]
   140016f88:	mov    rax,QWORD PTR [rsp+0x90]
   140016f90:	mov    r11,QWORD PTR [rcx]
   140016f93:	mov    ecx,DWORD PTR [rsp+0xa0]
   140016f9a:	mov    r9d,DWORD PTR [rax+0x4]
   140016f9e:	mov    r10d,DWORD PTR [rax]
   140016fa1:	mov    r8d,DWORD PTR [rax+0xc]
   140016fa5:	mov    edx,DWORD PTR [rax+0x8]
   140016fa8:	mov    rax,QWORD PTR [rsp+0xa8]
   140016fb0:	sub    r8d,r9d
   140016fb3:	mov    QWORD PTR [rsp+0x58],rax
   140016fb8:	mov    QWORD PTR [rsp+0x50],rcx
   140016fbd:	mov    QWORD PTR [rsp+0x48],rbx
   140016fc2:	mov    DWORD PTR [rsp+0x40],r8d
   140016fc7:	sub    edx,r10d
   140016fca:	bts    edi,0x1e
   140016fce:	mov    DWORD PTR [rsp+0x38],edx
   140016fd2:	mov    DWORD PTR [rsp+0x30],r9d
   140016fd7:	mov    DWORD PTR [rsp+0x28],r10d
   140016fdc:	mov    r9,rbp
   140016fdf:	mov    r8,r12
   140016fe2:	xor    edx,edx
   140016fe4:	mov    rcx,rsi
   140016fe7:	mov    DWORD PTR [rsp+0x20],edi
   140016feb:	call   QWORD PTR [r11+0xb8]
   140016ff2:	lea    r11,[rsp+0x60]
   140016ff7:	mov    rbx,QWORD PTR [r11+0x10]
   140016ffb:	mov    rbp,QWORD PTR [r11+0x18]
   140016fff:	mov    rsi,QWORD PTR [r11+0x20]
   140017003:	mov    rdi,QWORD PTR [r11+0x28]
   140017007:	mov    rsp,r11
   14001700a:	pop    r12
   14001700c:	ret    
   14001700d:	int3   
   14001700e:	int3   
   14001700f:	int3   
   140017010:	mov    QWORD PTR [rsp+0x8],rbx
   140017015:	push   rdi
   140017016:	sub    rsp,0x20
   14001701a:	mov    edi,ecx
   14001701c:	call   0x14001f338
   140017021:	mov    rbx,rax
   140017024:	mov    rax,QWORD PTR [rax+0x78]
   140017028:	test   rax,rax
   14001702b:	je     0x140017047
   14001702d:	mov    rcx,QWORD PTR [rax+0x40]
   140017031:	test   rcx,rcx
   140017034:	je     0x140017047
   140017036:	xor    r9d,r9d
   140017039:	xor    r8d,r8d
   14001703c:	mov    edx,0x401
   140017041:	call   QWORD PTR [rip+0x2c9a1]        # 0x1400439e8
   140017047:	test   edi,edi
   140017049:	mov    rbx,QWORD PTR [rbx+0xa0]
   140017050:	je     0x140017077
   140017052:	test   rbx,rbx
   140017055:	je     0x140017077
   140017057:	mov    ecx,0x1
   14001705c:	call   QWORD PTR [rip+0x2c74e]        # 0x1400437b0
   140017062:	test   ax,ax
   140017065:	js     0x140017077
   140017067:	mov    rax,QWORD PTR [rbx]
   14001706a:	or     rdx,0xffffffffffffffff
   14001706e:	mov    rcx,rbx
   140017071:	call   QWORD PTR [rax+0x2d0]
   140017077:	mov    rbx,QWORD PTR [rsp+0x30]
   14001707c:	add    rsp,0x20
   140017080:	pop    rdi
   140017081:	ret    
   140017082:	int3   
   140017083:	int3   
   140017084:	mov    rax,rsp
   140017087:	mov    QWORD PTR [rax+0x8],rbx
   14001708b:	mov    QWORD PTR [rax+0x10],rbp
   14001708f:	mov    QWORD PTR [rax+0x18],rsi
   140017093:	mov    QWORD PTR [rax+0x20],rdi
   140017097:	push   r12
   140017099:	push   r13
   14001709b:	push   r14
   14001709d:	sub    rsp,0x30
   1400170a1:	mov    esi,r9d
   1400170a4:	mov    ebp,r8d
   1400170a7:	mov    r12d,edx
   1400170aa:	mov    rdi,rcx
   1400170ad:	call   0x14001ea28
   1400170b2:	mov    r11,QWORD PTR [rsp+0x70]
   1400170b7:	mov    r13,QWORD PTR [rax+0xc8]
   1400170be:	mov    r14,QWORD PTR [rax+0xd0]
   1400170c5:	xor    r10d,r10d
   1400170c8:	cmp    r11,r10
   1400170cb:	mov    rbx,rax
   1400170ce:	je     0x1400170d4
   1400170d0:	mov    r10,QWORD PTR [r11+0x40]
   1400170d4:	mov    QWORD PTR [rax+0xc8],r10
   1400170db:	mov    rax,QWORD PTR [rdi+0x8]
   1400170df:	mov    r9d,esi
   1400170e2:	mov    QWORD PTR [rbx+0xd0],rax
   1400170e9:	mov    rax,QWORD PTR [rsp+0x78]
   1400170ee:	mov    rcx,QWORD PTR [rdi+0x8]
   1400170f2:	mov    QWORD PTR [rsp+0x28],rax
   1400170f7:	mov    r8d,ebp
   1400170fa:	mov    edx,r12d
   1400170fd:	mov    QWORD PTR [rsp+0x20],r10
   140017102:	call   QWORD PTR [rip+0x2c6a0]        # 0x1400437a8
   140017108:	mov    rbp,QWORD PTR [rsp+0x58]
   14001710d:	mov    rsi,QWORD PTR [rsp+0x60]
   140017112:	mov    rdi,QWORD PTR [rsp+0x68]
   140017117:	mov    QWORD PTR [rbx+0xc8],r13
   14001711e:	mov    QWORD PTR [rbx+0xd0],r14
   140017125:	mov    rbx,QWORD PTR [rsp+0x50]
   14001712a:	add    rsp,0x30
   14001712e:	pop    r14
   140017130:	pop    r13
   140017132:	pop    r12
   140017134:	ret    
   140017135:	int3   
   140017136:	int3   
   140017137:	int3   
   140017138:	mov    QWORD PTR [rsp+0x8],rbx
   14001713d:	mov    QWORD PTR [rsp+0x10],rbp
   140017142:	mov    QWORD PTR [rsp+0x18],rsi
   140017147:	push   rdi
   140017148:	sub    rsp,0x20
   14001714c:	test   rcx,rcx
   14001714f:	mov    esi,edx
   140017151:	mov    rbx,rcx
   140017154:	jne    0x14001715c
   140017156:	call   0x1400218c0
   14001715b:	int3   
   14001715c:	mov    rcx,QWORD PTR [rcx+0x8]
   140017160:	call   QWORD PTR [rip+0x2c732]        # 0x140043898
   140017166:	xor    edi,edi
   140017168:	test   eax,eax
   14001716a:	mov    ebp,eax
   14001716c:	jle    0x1400171b5
   14001716e:	mov    rcx,QWORD PTR [rbx+0x8]
   140017172:	mov    edx,edi
   140017174:	call   QWORD PTR [rip+0x2c726]        # 0x1400438a0
   14001717a:	mov    rcx,rax
   14001717d:	call   0x140024184
   140017182:	test   rax,rax
   140017185:	je     0x14001719e
   140017187:	cmp    QWORD PTR [rax+0x8],rsi
   14001718b:	je     0x1400171cc
   14001718d:	mov    edx,esi
   14001718f:	mov    rcx,rax
   140017192:	call   0x140017138
   140017197:	test   rax,rax
   14001719a:	jne    0x1400171b7
   14001719c:	jmp    0x1400171ae
   14001719e:	mov    rcx,QWORD PTR [rbx+0x8]
   1400171a2:	mov    edx,edi
   1400171a4:	call   QWORD PTR [rip+0x2c6e6]        # 0x140043890
   1400171aa:	cmp    eax,esi
   1400171ac:	je     0x1400171cc
   1400171ae:	add    edi,0x1
   1400171b1:	cmp    edi,ebp
   1400171b3:	jl     0x14001716e
   1400171b5:	xor    eax,eax
   1400171b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400171bc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400171c1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400171c6:	add    rsp,0x20
   1400171ca:	pop    rdi
   1400171cb:	ret    
   1400171cc:	mov    rcx,QWORD PTR [rbx+0x8]
   1400171d0:	call   0x1400241a8
   1400171d5:	jmp    0x1400171b7
   1400171d7:	int3   
   1400171d8:	sub    rsp,0x28
   1400171dc:	lea    rax,[rip+0x2d445]        # 0x140044628
   1400171e3:	mov    QWORD PTR [rcx],rax
   1400171e6:	mov    rcx,QWORD PTR [rcx+0x8]
   1400171ea:	test   rcx,rcx
   1400171ed:	je     0x1400171f5
   1400171ef:	call   QWORD PTR [rip+0x2c28b]        # 0x140043480
   1400171f5:	add    rsp,0x28
   1400171f9:	ret    
   1400171fa:	int3   
   1400171fb:	int3   
   1400171fc:	mov    QWORD PTR [rsp+0x8],rbx
   140017201:	push   rdi
   140017202:	sub    rsp,0x20
   140017206:	mov    ebx,edx
   140017208:	mov    rdi,rcx
   14001720b:	call   0x1400171d8
   140017210:	test   bl,0x1
   140017213:	je     0x14001721d
   140017215:	mov    rcx,rdi
   140017218:	call   0x14002496c
   14001721d:	mov    rax,rdi
   140017220:	mov    rbx,QWORD PTR [rsp+0x30]
   140017225:	add    rsp,0x20
   140017229:	pop    rdi
   14001722a:	ret    
   14001722b:	int3   
   14001722c:	mov    QWORD PTR [rsp+0x8],rbx
   140017231:	mov    QWORD PTR [rsp+0x10],rsi
   140017236:	push   rdi
   140017237:	sub    rsp,0x20
   14001723b:	mov    ebx,r8d
   14001723e:	mov    rsi,rdx
   140017241:	mov    rdi,rcx
   140017244:	call   0x14001f2e8
   140017249:	mov    r8d,0x1
   14001724f:	mov    r9,QWORD PTR [rax+0x8]
   140017253:	cmp    DWORD PTR [r9+0xd8],r8d
   14001725a:	jne    0x14001728b
   14001725c:	cmp    ebx,r8d
   14001725f:	jne    0x140017269
   140017261:	mov    r8d,0xf
   140017267:	jmp    0x14001727a
   140017269:	cmp    ebx,0x3
   14001726c:	je     0x14001727a
   14001726e:	xor    eax,eax
   140017270:	mov    r8d,ebx
   140017273:	cmp    ebx,0xb
   140017276:	cmove  r8d,eax
   14001727a:	mov    rax,QWORD PTR [rdi]
   14001727d:	mov    rdx,rsi
   140017280:	mov    rcx,rdi
   140017283:	call   QWORD PTR [rax+0xf0]
   140017289:	jmp    0x14001729d
   14001728b:	mov    rax,QWORD PTR [rdi]
   14001728e:	mov    r8d,ebx
   140017291:	mov    rdx,rsi
   140017294:	mov    rcx,rdi
   140017297:	call   QWORD PTR [rax+0xe8]
   14001729d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400172a2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400172a7:	add    rsp,0x20
   1400172ab:	pop    rdi
   1400172ac:	ret    
   1400172ad:	int3   
   1400172ae:	int3   
   1400172af:	int3   
   1400172b0:	sub    rsp,0x28
   1400172b4:	test   dx,dx
   1400172b7:	jne    0x1400172db
   1400172b9:	call   0x14001f338
   1400172be:	mov    rcx,QWORD PTR [rax+0x90]
   1400172c5:	test   rcx,rcx
   1400172c8:	je     0x1400172db
   1400172ca:	bt     DWORD PTR [rcx+0x4],0x1e
   1400172cf:	jb     0x1400172db
   1400172d1:	mov    ecx,0x1
   1400172d6:	call   0x140017010
   1400172db:	xor    eax,eax
   1400172dd:	add    rsp,0x28
   1400172e1:	ret    
   1400172e2:	int3   
   1400172e3:	int3   
   1400172e4:	rex push rbx
   1400172e6:	sub    rsp,0x40
   1400172ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400172f3:	lea    rbx,[rcx-0x60]
   1400172f7:	mov    rdx,QWORD PTR [rbx+0x38]
   1400172fb:	lea    rcx,[rsp+0x28]
   140017300:	call   0x14001f364
   140017305:	nop
   140017306:	mov    rcx,rbx
   140017309:	call   0x14002587c
   14001730e:	mov    ebx,eax
   140017310:	cmp    DWORD PTR [rsp+0x30],0x0
   140017315:	je     0x140017323
   140017317:	mov    rdx,QWORD PTR [rsp+0x28]
   14001731c:	xor    ecx,ecx
   14001731e:	call   0x14001e620
   140017323:	mov    eax,ebx
   140017325:	add    rsp,0x40
   140017329:	pop    rbx
   14001732a:	ret    
   14001732b:	int3   
   14001732c:	int3   
   14001732d:	int3   
   14001732e:	int3   
   14001732f:	int3   
   140017330:	int3   
   140017331:	int3   
   140017332:	int3   
   140017333:	int3   
   140017334:	rex push rbp
   140017336:	sub    rsp,0x20
   14001733a:	mov    rbp,rdx
   14001733d:	lea    rcx,[rbp+0x28]
   140017341:	call   0x140016dcc
   140017346:	add    rsp,0x20
   14001734a:	pop    rbp
   14001734b:	ret    
   14001734c:	rex push rbx
   14001734e:	sub    rsp,0x40
   140017352:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001735b:	lea    rbx,[rcx-0x60]
   14001735f:	mov    rdx,QWORD PTR [rbx+0x38]
   140017363:	lea    rcx,[rsp+0x28]
   140017368:	call   0x14001f364
   14001736d:	nop
   14001736e:	mov    rcx,rbx
   140017371:	call   0x140025930
   140017376:	mov    ebx,eax
   140017378:	cmp    DWORD PTR [rsp+0x30],0x0
   14001737d:	je     0x14001738b
   14001737f:	mov    rdx,QWORD PTR [rsp+0x28]
   140017384:	xor    ecx,ecx
   140017386:	call   0x14001e620
   14001738b:	mov    eax,ebx
   14001738d:	add    rsp,0x40
   140017391:	pop    rbx
   140017392:	ret    
   140017393:	int3   
   140017394:	int3   
   140017395:	int3   
   140017396:	int3   
   140017397:	int3   
   140017398:	int3   
   140017399:	int3   
   14001739a:	int3   
   14001739b:	int3   
   14001739c:	rex push rbp
   14001739e:	sub    rsp,0x20
   1400173a2:	mov    rbp,rdx
   1400173a5:	lea    rcx,[rbp+0x28]
   1400173a9:	call   0x140016dcc
   1400173ae:	add    rsp,0x20
   1400173b2:	pop    rbp
   1400173b3:	ret    
   1400173b4:	rex push rdi
   1400173b6:	sub    rsp,0x40
   1400173ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400173c3:	mov    QWORD PTR [rsp+0x50],rbx
   1400173c8:	mov    QWORD PTR [rsp+0x58],rsi
   1400173cd:	mov    rdi,r8
   1400173d0:	mov    rsi,rdx
   1400173d3:	lea    rbx,[rcx-0x60]
   1400173d7:	mov    rdx,QWORD PTR [rbx+0x38]
   1400173db:	lea    rcx,[rsp+0x28]
   1400173e0:	call   0x14001f364
   1400173e5:	nop
   1400173e6:	mov    r8,rdi
   1400173e9:	mov    rdx,rsi
   1400173ec:	mov    rcx,rbx
   1400173ef:	call   0x1400259ac
   1400173f4:	mov    ebx,eax
   1400173f6:	cmp    DWORD PTR [rsp+0x30],0x0
   1400173fb:	je     0x140017409
   1400173fd:	mov    rdx,QWORD PTR [rsp+0x28]
   140017402:	xor    ecx,ecx
   140017404:	call   0x14001e620
   140017409:	mov    eax,ebx
   14001740b:	mov    rbx,QWORD PTR [rsp+0x50]
   140017410:	mov    rsi,QWORD PTR [rsp+0x58]
   140017415:	add    rsp,0x40
   140017419:	pop    rdi
   14001741a:	ret    
   14001741b:	int3   
   14001741c:	int3   
   14001741d:	int3   
   14001741e:	int3   
   14001741f:	int3   
   140017420:	int3   
   140017421:	int3   
   140017422:	int3   
   140017423:	int3   
   140017424:	rex push rbp
   140017426:	sub    rsp,0x20
   14001742a:	mov    rbp,rdx
   14001742d:	lea    rcx,[rbp+0x28]
   140017431:	call   0x140016dcc
   140017436:	add    rsp,0x20
   14001743a:	pop    rbp
   14001743b:	ret    
   14001743c:	mov    rax,rsp
   14001743f:	push   rdi
   140017440:	sub    rsp,0x70
   140017444:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14001744d:	mov    QWORD PTR [rax+0x8],rbx
   140017451:	mov    QWORD PTR [rax+0x10],rbp
   140017455:	mov    QWORD PTR [rax+0x18],rsi
   140017459:	mov    ebx,r9d
   14001745c:	mov    rdi,r8
   14001745f:	mov    esi,edx
   140017461:	mov    rbp,rcx
   140017464:	mov    rdx,QWORD PTR [rcx-0x28]
   140017468:	lea    rcx,[rax-0x20]
   14001746c:	call   0x14001f364
   140017471:	nop
   140017472:	mov    rax,QWORD PTR [rsp+0xc0]
   14001747a:	mov    QWORD PTR [rsp+0x40],rax
   14001747f:	mov    rax,QWORD PTR [rsp+0xb8]
   140017487:	mov    QWORD PTR [rsp+0x38],rax
   14001748c:	mov    rax,QWORD PTR [rsp+0xb0]
   140017494:	mov    QWORD PTR [rsp+0x30],rax
   140017499:	mov    rax,QWORD PTR [rsp+0xa8]
   1400174a1:	mov    QWORD PTR [rsp+0x28],rax
   1400174a6:	movzx  eax,WORD PTR [rsp+0xa0]
   1400174ae:	mov    WORD PTR [rsp+0x20],ax
   1400174b3:	mov    r9d,ebx
   1400174b6:	mov    r8,rdi
   1400174b9:	mov    edx,esi
   1400174bb:	mov    rcx,rbp
   1400174be:	call   0x1400154cc
   1400174c3:	mov    ebx,eax
   1400174c5:	cmp    DWORD PTR [rsp+0x60],0x0
   1400174ca:	je     0x1400174d8
   1400174cc:	mov    rdx,QWORD PTR [rsp+0x58]
   1400174d1:	xor    ecx,ecx
   1400174d3:	call   0x14001e620
   1400174d8:	mov    eax,ebx
   1400174da:	lea    r11,[rsp+0x70]
   1400174df:	mov    rbx,QWORD PTR [r11+0x10]
   1400174e3:	mov    rbp,QWORD PTR [r11+0x18]
   1400174e7:	mov    rsi,QWORD PTR [r11+0x20]
   1400174eb:	mov    rsp,r11
   1400174ee:	pop    rdi
   1400174ef:	ret    
   1400174f0:	int3   
   1400174f1:	int3   
   1400174f2:	int3   
   1400174f3:	int3   
   1400174f4:	int3   
   1400174f5:	int3   
   1400174f6:	int3   
   1400174f7:	int3   
   1400174f8:	int3   
   1400174f9:	int3   
   1400174fa:	int3   
   1400174fb:	int3   
   1400174fc:	rex push rbp
   1400174fe:	sub    rsp,0x20
   140017502:	mov    rbp,rdx
   140017505:	lea    rcx,[rbp+0x58]
   140017509:	call   0x140016dcc
   14001750e:	add    rsp,0x20
   140017512:	pop    rbp
   140017513:	ret    
   140017514:	rex push rdi
   140017516:	sub    rsp,0x40
   14001751a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017523:	mov    QWORD PTR [rsp+0x50],rbx
   140017528:	mov    rdi,rdx
   14001752b:	lea    rbx,[rcx-0x60]
   14001752f:	mov    rdx,QWORD PTR [rbx+0x38]
   140017533:	lea    rcx,[rsp+0x28]
   140017538:	call   0x14001f364
   14001753d:	nop
   14001753e:	mov    rax,QWORD PTR [rbx]
   140017541:	mov    rdx,rdi
   140017544:	mov    rcx,rbx
   140017547:	call   QWORD PTR [rax+0x118]
   14001754d:	mov    ebx,eax
   14001754f:	cmp    DWORD PTR [rsp+0x30],0x0
   140017554:	je     0x140017562
   140017556:	mov    rdx,QWORD PTR [rsp+0x28]
   14001755b:	xor    ecx,ecx
   14001755d:	call   0x14001e620
   140017562:	mov    eax,ebx
   140017564:	mov    rbx,QWORD PTR [rsp+0x50]
   140017569:	add    rsp,0x40
   14001756d:	pop    rdi
   14001756e:	ret    
   14001756f:	int3   
   140017570:	int3   
   140017571:	int3   
   140017572:	int3   
   140017573:	int3   
   140017574:	rex push rbp
   140017576:	sub    rsp,0x20
   14001757a:	mov    rbp,rdx
   14001757d:	lea    rcx,[rbp+0x28]
   140017581:	call   0x140016dcc
   140017586:	add    rsp,0x20
   14001758a:	pop    rbp
   14001758b:	ret    
   14001758c:	rex push rdi
   14001758e:	sub    rsp,0x40
   140017592:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001759b:	mov    QWORD PTR [rsp+0x50],rbx
   1400175a0:	mov    rdi,rdx
   1400175a3:	lea    rbx,[rcx-0x60]
   1400175a7:	mov    rdx,QWORD PTR [rbx+0x38]
   1400175ab:	lea    rcx,[rsp+0x28]
   1400175b0:	call   0x14001f364
   1400175b5:	nop
   1400175b6:	mov    rax,QWORD PTR [rbx]
   1400175b9:	mov    rdx,rdi
   1400175bc:	mov    rcx,rbx
   1400175bf:	call   QWORD PTR [rax+0x120]
   1400175c5:	mov    ebx,eax
   1400175c7:	cmp    DWORD PTR [rsp+0x30],0x0
   1400175cc:	je     0x1400175da
   1400175ce:	mov    rdx,QWORD PTR [rsp+0x28]
   1400175d3:	xor    ecx,ecx
   1400175d5:	call   0x14001e620
   1400175da:	mov    eax,ebx
   1400175dc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400175e1:	add    rsp,0x40
   1400175e5:	pop    rdi
   1400175e6:	ret    
   1400175e7:	int3   
   1400175e8:	int3   
   1400175e9:	int3   
   1400175ea:	int3   
   1400175eb:	int3   
   1400175ec:	rex push rbp
   1400175ee:	sub    rsp,0x20
   1400175f2:	mov    rbp,rdx
   1400175f5:	lea    rcx,[rbp+0x28]
   1400175f9:	call   0x140016dcc
   1400175fe:	add    rsp,0x20
   140017602:	pop    rbp
   140017603:	ret    
   140017604:	rex push rdi
   140017606:	sub    rsp,0x60
   14001760a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017613:	mov    QWORD PTR [rsp+0x70],rbx
   140017618:	mov    QWORD PTR [rsp+0x78],rsi
   14001761d:	mov    rsi,r8
   140017620:	mov    rbx,rdx
   140017623:	lea    rdi,[rcx-0x60]
   140017627:	mov    rdx,QWORD PTR [rdi+0x38]
   14001762b:	lea    rcx,[rsp+0x28]
   140017630:	call   0x14001f364
   140017635:	nop
   140017636:	lea    rcx,[rsp+0x40]
   14001763b:	mov    rax,QWORD PTR [rbx]
   14001763e:	mov    QWORD PTR [rcx],rax
   140017641:	mov    rax,QWORD PTR [rbx+0x8]
   140017645:	mov    QWORD PTR [rcx+0x8],rax
   140017649:	mov    rax,QWORD PTR [rbx+0x10]
   14001764d:	mov    QWORD PTR [rcx+0x10],rax
   140017651:	mov    rax,QWORD PTR [rdi]
   140017654:	mov    r8,rsi
   140017657:	lea    rdx,[rsp+0x40]
   14001765c:	mov    rcx,rdi
   14001765f:	call   QWORD PTR [rax+0x128]
   140017665:	mov    ebx,eax
   140017667:	cmp    DWORD PTR [rsp+0x30],0x0
   14001766c:	je     0x14001767a
   14001766e:	mov    rdx,QWORD PTR [rsp+0x28]
   140017673:	xor    ecx,ecx
   140017675:	call   0x14001e620
   14001767a:	mov    eax,ebx
   14001767c:	mov    rbx,QWORD PTR [rsp+0x70]
   140017681:	mov    rsi,QWORD PTR [rsp+0x78]
   140017686:	add    rsp,0x60
   14001768a:	pop    rdi
   14001768b:	ret    
   14001768c:	int3   
   14001768d:	int3   
   14001768e:	int3   
   14001768f:	int3   
   140017690:	int3   
   140017691:	int3   
   140017692:	int3   
   140017693:	int3   
   140017694:	rex push rbp
   140017696:	sub    rsp,0x20
   14001769a:	mov    rbp,rdx
   14001769d:	lea    rcx,[rbp+0x28]
   1400176a1:	call   0x140016dcc
   1400176a6:	add    rsp,0x20
   1400176aa:	pop    rbp
   1400176ab:	ret    
   1400176ac:	rex push rdi
   1400176ae:	sub    rsp,0x60
   1400176b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400176bb:	mov    QWORD PTR [rsp+0x70],rbx
   1400176c0:	mov    QWORD PTR [rsp+0x78],rsi
   1400176c5:	mov    rsi,r8
   1400176c8:	mov    rbx,rdx
   1400176cb:	lea    rdi,[rcx-0x60]
   1400176cf:	mov    rdx,QWORD PTR [rdi+0x38]
   1400176d3:	lea    rcx,[rsp+0x28]
   1400176d8:	call   0x14001f364
   1400176dd:	nop
   1400176de:	lea    rcx,[rsp+0x40]
   1400176e3:	mov    rax,QWORD PTR [rbx]
   1400176e6:	mov    QWORD PTR [rcx],rax
   1400176e9:	mov    rax,QWORD PTR [rbx+0x8]
   1400176ed:	mov    QWORD PTR [rcx+0x8],rax
   1400176f1:	mov    rax,QWORD PTR [rbx+0x10]
   1400176f5:	mov    QWORD PTR [rcx+0x10],rax
   1400176f9:	mov    rax,QWORD PTR [rdi]
   1400176fc:	mov    r8,rsi
   1400176ff:	lea    rdx,[rsp+0x40]
   140017704:	mov    rcx,rdi
   140017707:	call   QWORD PTR [rax+0x130]
   14001770d:	mov    ebx,eax
   14001770f:	cmp    DWORD PTR [rsp+0x30],0x0
   140017714:	je     0x140017722
   140017716:	mov    rdx,QWORD PTR [rsp+0x28]
   14001771b:	xor    ecx,ecx
   14001771d:	call   0x14001e620
   140017722:	mov    eax,ebx
   140017724:	mov    rbx,QWORD PTR [rsp+0x70]
   140017729:	mov    rsi,QWORD PTR [rsp+0x78]
   14001772e:	add    rsp,0x60
   140017732:	pop    rdi
   140017733:	ret    
   140017734:	int3   
   140017735:	int3   
   140017736:	int3   
   140017737:	int3   
   140017738:	int3   
   140017739:	int3   
   14001773a:	int3   
   14001773b:	int3   
   14001773c:	rex push rbp
   14001773e:	sub    rsp,0x20
   140017742:	mov    rbp,rdx
   140017745:	lea    rcx,[rbp+0x28]
   140017749:	call   0x140016dcc
   14001774e:	add    rsp,0x20
   140017752:	pop    rbp
   140017753:	ret    
   140017754:	rex push rdi
   140017756:	sub    rsp,0x60
   14001775a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017763:	mov    QWORD PTR [rsp+0x70],rbx
   140017768:	mov    QWORD PTR [rsp+0x78],rsi
   14001776d:	mov    rsi,r8
   140017770:	mov    rbx,rdx
   140017773:	lea    rdi,[rcx-0x60]
   140017777:	mov    rdx,QWORD PTR [rdi+0x38]
   14001777b:	lea    rcx,[rsp+0x28]
   140017780:	call   0x14001f364
   140017785:	nop
   140017786:	lea    rcx,[rsp+0x40]
   14001778b:	mov    rax,QWORD PTR [rbx]
   14001778e:	mov    QWORD PTR [rcx],rax
   140017791:	mov    rax,QWORD PTR [rbx+0x8]
   140017795:	mov    QWORD PTR [rcx+0x8],rax
   140017799:	mov    rax,QWORD PTR [rbx+0x10]
   14001779d:	mov    QWORD PTR [rcx+0x10],rax
   1400177a1:	mov    rax,QWORD PTR [rdi]
   1400177a4:	mov    r8,rsi
   1400177a7:	lea    rdx,[rsp+0x40]
   1400177ac:	mov    rcx,rdi
   1400177af:	call   QWORD PTR [rax+0x138]
   1400177b5:	mov    ebx,eax
   1400177b7:	cmp    DWORD PTR [rsp+0x30],0x0
   1400177bc:	je     0x1400177ca
   1400177be:	mov    rdx,QWORD PTR [rsp+0x28]
   1400177c3:	xor    ecx,ecx
   1400177c5:	call   0x14001e620
   1400177ca:	mov    eax,ebx
   1400177cc:	mov    rbx,QWORD PTR [rsp+0x70]
   1400177d1:	mov    rsi,QWORD PTR [rsp+0x78]
   1400177d6:	add    rsp,0x60
   1400177da:	pop    rdi
   1400177db:	ret    
   1400177dc:	int3   
   1400177dd:	int3   
   1400177de:	int3   
   1400177df:	int3   
   1400177e0:	int3   
   1400177e1:	int3   
   1400177e2:	int3   
   1400177e3:	int3   
   1400177e4:	rex push rbp
   1400177e6:	sub    rsp,0x20
   1400177ea:	mov    rbp,rdx
   1400177ed:	lea    rcx,[rbp+0x28]
   1400177f1:	call   0x140016dcc
   1400177f6:	add    rsp,0x20
   1400177fa:	pop    rbp
   1400177fb:	ret    
   1400177fc:	rex push rdi
   1400177fe:	sub    rsp,0x60
   140017802:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001780b:	mov    QWORD PTR [rsp+0x70],rbx
   140017810:	mov    QWORD PTR [rsp+0x78],rsi
   140017815:	mov    rsi,r8
   140017818:	mov    rbx,rdx
   14001781b:	lea    rdi,[rcx-0x60]
   14001781f:	mov    rdx,QWORD PTR [rdi+0x38]
   140017823:	lea    rcx,[rsp+0x28]
   140017828:	call   0x14001f364
   14001782d:	nop
   14001782e:	lea    rcx,[rsp+0x40]
   140017833:	mov    rax,QWORD PTR [rbx]
   140017836:	mov    QWORD PTR [rcx],rax
   140017839:	mov    rax,QWORD PTR [rbx+0x8]
   14001783d:	mov    QWORD PTR [rcx+0x8],rax
   140017841:	mov    rax,QWORD PTR [rbx+0x10]
   140017845:	mov    QWORD PTR [rcx+0x10],rax
   140017849:	mov    rax,QWORD PTR [rdi]
   14001784c:	mov    r8,rsi
   14001784f:	lea    rdx,[rsp+0x40]
   140017854:	mov    rcx,rdi
   140017857:	call   QWORD PTR [rax+0x140]
   14001785d:	mov    ebx,eax
   14001785f:	cmp    DWORD PTR [rsp+0x30],0x0
   140017864:	je     0x140017872
   140017866:	mov    rdx,QWORD PTR [rsp+0x28]
   14001786b:	xor    ecx,ecx
   14001786d:	call   0x14001e620
   140017872:	mov    eax,ebx
   140017874:	mov    rbx,QWORD PTR [rsp+0x70]
   140017879:	mov    rsi,QWORD PTR [rsp+0x78]
   14001787e:	add    rsp,0x60
   140017882:	pop    rdi
   140017883:	ret    
   140017884:	int3   
   140017885:	int3   
   140017886:	int3   
   140017887:	int3   
   140017888:	int3   
   140017889:	int3   
   14001788a:	int3   
   14001788b:	int3   
   14001788c:	rex push rbp
   14001788e:	sub    rsp,0x20
   140017892:	mov    rbp,rdx
   140017895:	lea    rcx,[rbp+0x28]
   140017899:	call   0x140016dcc
   14001789e:	add    rsp,0x20
   1400178a2:	pop    rbp
   1400178a3:	ret    
   1400178a4:	rex push rdi
   1400178a6:	sub    rsp,0x60
   1400178aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400178b3:	mov    QWORD PTR [rsp+0x70],rbx
   1400178b8:	mov    QWORD PTR [rsp+0x78],rsi
   1400178bd:	mov    rsi,r8
   1400178c0:	mov    rbx,rdx
   1400178c3:	lea    rdi,[rcx-0x60]
   1400178c7:	mov    rdx,QWORD PTR [rdi+0x38]
   1400178cb:	lea    rcx,[rsp+0x28]
   1400178d0:	call   0x14001f364
   1400178d5:	nop
   1400178d6:	lea    rcx,[rsp+0x40]
   1400178db:	mov    rax,QWORD PTR [rbx]
   1400178de:	mov    QWORD PTR [rcx],rax
   1400178e1:	mov    rax,QWORD PTR [rbx+0x8]
   1400178e5:	mov    QWORD PTR [rcx+0x8],rax
   1400178e9:	mov    rax,QWORD PTR [rbx+0x10]
   1400178ed:	mov    QWORD PTR [rcx+0x10],rax
   1400178f1:	mov    rax,QWORD PTR [rdi]
   1400178f4:	mov    r8,rsi
   1400178f7:	lea    rdx,[rsp+0x40]
   1400178fc:	mov    rcx,rdi
   1400178ff:	call   QWORD PTR [rax+0x148]
   140017905:	mov    ebx,eax
   140017907:	cmp    DWORD PTR [rsp+0x30],0x0
   14001790c:	je     0x14001791a
   14001790e:	mov    rdx,QWORD PTR [rsp+0x28]
   140017913:	xor    ecx,ecx
   140017915:	call   0x14001e620
   14001791a:	mov    eax,ebx
   14001791c:	mov    rbx,QWORD PTR [rsp+0x70]
   140017921:	mov    rsi,QWORD PTR [rsp+0x78]
   140017926:	add    rsp,0x60
   14001792a:	pop    rdi
   14001792b:	ret    
   14001792c:	int3   
   14001792d:	int3   
   14001792e:	int3   
   14001792f:	int3   
   140017930:	int3   
   140017931:	int3   
   140017932:	int3   
   140017933:	int3   
   140017934:	rex push rbp
   140017936:	sub    rsp,0x20
   14001793a:	mov    rbp,rdx
   14001793d:	lea    rcx,[rbp+0x28]
   140017941:	call   0x140016dcc
   140017946:	add    rsp,0x20
   14001794a:	pop    rbp
   14001794b:	ret    
   14001794c:	rex push rdi
   14001794e:	sub    rsp,0x60
   140017952:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001795b:	mov    QWORD PTR [rsp+0x70],rbx
   140017960:	mov    QWORD PTR [rsp+0x78],rsi
   140017965:	mov    rsi,r8
   140017968:	mov    rbx,rdx
   14001796b:	lea    rdi,[rcx-0x60]
   14001796f:	mov    rdx,QWORD PTR [rdi+0x38]
   140017973:	lea    rcx,[rsp+0x28]
   140017978:	call   0x14001f364
   14001797d:	nop
   14001797e:	lea    rcx,[rsp+0x40]
   140017983:	mov    rax,QWORD PTR [rbx]
   140017986:	mov    QWORD PTR [rcx],rax
   140017989:	mov    rax,QWORD PTR [rbx+0x8]
   14001798d:	mov    QWORD PTR [rcx+0x8],rax
   140017991:	mov    rax,QWORD PTR [rbx+0x10]
   140017995:	mov    QWORD PTR [rcx+0x10],rax
   140017999:	mov    rax,QWORD PTR [rdi]
   14001799c:	mov    r8,rsi
   14001799f:	lea    rdx,[rsp+0x40]
   1400179a4:	mov    rcx,rdi
   1400179a7:	call   QWORD PTR [rax+0x150]
   1400179ad:	mov    ebx,eax
   1400179af:	cmp    DWORD PTR [rsp+0x30],0x0
   1400179b4:	je     0x1400179c2
   1400179b6:	mov    rdx,QWORD PTR [rsp+0x28]
   1400179bb:	xor    ecx,ecx
   1400179bd:	call   0x14001e620
   1400179c2:	mov    eax,ebx
   1400179c4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400179c9:	mov    rsi,QWORD PTR [rsp+0x78]
   1400179ce:	add    rsp,0x60
   1400179d2:	pop    rdi
   1400179d3:	ret    
   1400179d4:	int3   
   1400179d5:	int3   
   1400179d6:	int3   
   1400179d7:	int3   
   1400179d8:	int3   
   1400179d9:	int3   
   1400179da:	int3   
   1400179db:	int3   
   1400179dc:	rex push rbp
   1400179de:	sub    rsp,0x20
   1400179e2:	mov    rbp,rdx
   1400179e5:	lea    rcx,[rbp+0x28]
   1400179e9:	call   0x140016dcc
   1400179ee:	add    rsp,0x20
   1400179f2:	pop    rbp
   1400179f3:	ret    
   1400179f4:	rex push rdi
   1400179f6:	sub    rsp,0x60
   1400179fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017a03:	mov    QWORD PTR [rsp+0x70],rbx
   140017a08:	mov    QWORD PTR [rsp+0x78],rsi
   140017a0d:	mov    rsi,r8
   140017a10:	mov    rbx,rdx
   140017a13:	lea    rdi,[rcx-0x60]
   140017a17:	mov    rdx,QWORD PTR [rdi+0x38]
   140017a1b:	lea    rcx,[rsp+0x28]
   140017a20:	call   0x14001f364
   140017a25:	nop
   140017a26:	lea    rcx,[rsp+0x40]
   140017a2b:	mov    rax,QWORD PTR [rbx]
   140017a2e:	mov    QWORD PTR [rcx],rax
   140017a31:	mov    rax,QWORD PTR [rbx+0x8]
   140017a35:	mov    QWORD PTR [rcx+0x8],rax
   140017a39:	mov    rax,QWORD PTR [rbx+0x10]
   140017a3d:	mov    QWORD PTR [rcx+0x10],rax
   140017a41:	mov    rax,QWORD PTR [rdi]
   140017a44:	mov    r8,rsi
   140017a47:	lea    rdx,[rsp+0x40]
   140017a4c:	mov    rcx,rdi
   140017a4f:	call   QWORD PTR [rax+0x158]
   140017a55:	mov    ebx,eax
   140017a57:	cmp    DWORD PTR [rsp+0x30],0x0
   140017a5c:	je     0x140017a6a
   140017a5e:	mov    rdx,QWORD PTR [rsp+0x28]
   140017a63:	xor    ecx,ecx
   140017a65:	call   0x14001e620
   140017a6a:	mov    eax,ebx
   140017a6c:	mov    rbx,QWORD PTR [rsp+0x70]
   140017a71:	mov    rsi,QWORD PTR [rsp+0x78]
   140017a76:	add    rsp,0x60
   140017a7a:	pop    rdi
   140017a7b:	ret    
   140017a7c:	int3   
   140017a7d:	int3   
   140017a7e:	int3   
   140017a7f:	int3   
   140017a80:	int3   
   140017a81:	int3   
   140017a82:	int3   
   140017a83:	int3   
   140017a84:	rex push rbp
   140017a86:	sub    rsp,0x20
   140017a8a:	mov    rbp,rdx
   140017a8d:	lea    rcx,[rbp+0x28]
   140017a91:	call   0x140016dcc
   140017a96:	add    rsp,0x20
   140017a9a:	pop    rbp
   140017a9b:	ret    
   140017a9c:	mov    rax,rsp
   140017a9f:	push   rdi
   140017aa0:	sub    rsp,0x60
   140017aa4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017aad:	mov    QWORD PTR [rax+0x8],rbx
   140017ab1:	mov    QWORD PTR [rax+0x10],rbp
   140017ab5:	mov    QWORD PTR [rax+0x18],rsi
   140017ab9:	mov    rsi,r9
   140017abc:	mov    rbx,r8
   140017abf:	mov    rbp,rdx
   140017ac2:	lea    rdi,[rcx-0x60]
   140017ac6:	mov    rdx,QWORD PTR [rdi+0x38]
   140017aca:	lea    rcx,[rax-0x40]
   140017ace:	call   0x14001f364
   140017ad3:	nop
   140017ad4:	lea    rcx,[rsp+0x40]
   140017ad9:	mov    rax,QWORD PTR [rbx]
   140017adc:	mov    QWORD PTR [rcx],rax
   140017adf:	mov    rax,QWORD PTR [rbx+0x8]
   140017ae3:	mov    QWORD PTR [rcx+0x8],rax
   140017ae7:	mov    rax,QWORD PTR [rbx+0x10]
   140017aeb:	mov    QWORD PTR [rcx+0x10],rax
   140017aef:	mov    rax,QWORD PTR [rdi]
   140017af2:	mov    r9,rsi
   140017af5:	lea    r8,[rsp+0x40]
   140017afa:	mov    rdx,rbp
   140017afd:	mov    rcx,rdi
   140017b00:	call   QWORD PTR [rax+0x160]
   140017b06:	mov    ebx,eax
   140017b08:	cmp    DWORD PTR [rsp+0x30],0x0
   140017b0d:	je     0x140017b1b
   140017b0f:	mov    rdx,QWORD PTR [rsp+0x28]
   140017b14:	xor    ecx,ecx
   140017b16:	call   0x14001e620
   140017b1b:	mov    eax,ebx
   140017b1d:	lea    r11,[rsp+0x60]
   140017b22:	mov    rbx,QWORD PTR [r11+0x10]
   140017b26:	mov    rbp,QWORD PTR [r11+0x18]
   140017b2a:	mov    rsi,QWORD PTR [r11+0x20]
   140017b2e:	mov    rsp,r11
   140017b31:	pop    rdi
   140017b32:	ret    
   140017b33:	int3   
   140017b34:	int3   
   140017b35:	int3   
   140017b36:	int3   
   140017b37:	int3   
   140017b38:	int3   
   140017b39:	int3   
   140017b3a:	int3   
   140017b3b:	int3   
   140017b3c:	rex push rbp
   140017b3e:	sub    rsp,0x20
   140017b42:	mov    rbp,rdx
   140017b45:	lea    rcx,[rbp+0x28]
   140017b49:	call   0x140016dcc
   140017b4e:	add    rsp,0x20
   140017b52:	pop    rbp
   140017b53:	ret    
   140017b54:	rex push rdi
   140017b56:	sub    rsp,0x60
   140017b5a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017b63:	mov    QWORD PTR [rsp+0x70],rbx
   140017b68:	mov    QWORD PTR [rsp+0x78],rsi
   140017b6d:	mov    rsi,r8
   140017b70:	mov    rbx,rdx
   140017b73:	lea    rdi,[rcx-0x60]
   140017b77:	mov    rdx,QWORD PTR [rdi+0x38]
   140017b7b:	lea    rcx,[rsp+0x28]
   140017b80:	call   0x14001f364
   140017b85:	nop
   140017b86:	lea    rcx,[rsp+0x40]
   140017b8b:	mov    rax,QWORD PTR [rbx]
   140017b8e:	mov    QWORD PTR [rcx],rax
   140017b91:	mov    rax,QWORD PTR [rbx+0x8]
   140017b95:	mov    QWORD PTR [rcx+0x8],rax
   140017b99:	mov    rax,QWORD PTR [rbx+0x10]
   140017b9d:	mov    QWORD PTR [rcx+0x10],rax
   140017ba1:	mov    rax,QWORD PTR [rdi]
   140017ba4:	mov    r8,rsi
   140017ba7:	lea    rdx,[rsp+0x40]
   140017bac:	mov    rcx,rdi
   140017baf:	call   QWORD PTR [rax+0x168]
   140017bb5:	mov    ebx,eax
   140017bb7:	cmp    DWORD PTR [rsp+0x30],0x0
   140017bbc:	je     0x140017bca
   140017bbe:	mov    rdx,QWORD PTR [rsp+0x28]
   140017bc3:	xor    ecx,ecx
   140017bc5:	call   0x14001e620
   140017bca:	mov    eax,ebx
   140017bcc:	mov    rbx,QWORD PTR [rsp+0x70]
   140017bd1:	mov    rsi,QWORD PTR [rsp+0x78]
   140017bd6:	add    rsp,0x60
   140017bda:	pop    rdi
   140017bdb:	ret    
   140017bdc:	int3   
   140017bdd:	int3   
   140017bde:	int3   
   140017bdf:	int3   
   140017be0:	int3   
   140017be1:	int3   
   140017be2:	int3   
   140017be3:	int3   
   140017be4:	rex push rbp
   140017be6:	sub    rsp,0x20
   140017bea:	mov    rbp,rdx
   140017bed:	lea    rcx,[rbp+0x28]
   140017bf1:	call   0x140016dcc
   140017bf6:	add    rsp,0x20
   140017bfa:	pop    rbp
   140017bfb:	ret    
   140017bfc:	rex push rdi
   140017bfe:	sub    rsp,0x40
   140017c02:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017c0b:	mov    QWORD PTR [rsp+0x50],rbx
   140017c10:	mov    rdi,rdx
   140017c13:	lea    rbx,[rcx-0x60]
   140017c17:	mov    rdx,QWORD PTR [rbx+0x38]
   140017c1b:	lea    rcx,[rsp+0x28]
   140017c20:	call   0x14001f364
   140017c25:	nop
   140017c26:	mov    rax,QWORD PTR [rbx]
   140017c29:	mov    rdx,rdi
   140017c2c:	mov    rcx,rbx
   140017c2f:	call   QWORD PTR [rax+0x170]
   140017c35:	mov    ebx,eax
   140017c37:	cmp    DWORD PTR [rsp+0x30],0x0
   140017c3c:	je     0x140017c4a
   140017c3e:	mov    rdx,QWORD PTR [rsp+0x28]
   140017c43:	xor    ecx,ecx
   140017c45:	call   0x14001e620
   140017c4a:	mov    eax,ebx
   140017c4c:	mov    rbx,QWORD PTR [rsp+0x50]
   140017c51:	add    rsp,0x40
   140017c55:	pop    rdi
   140017c56:	ret    
   140017c57:	int3   
   140017c58:	int3   
   140017c59:	int3   
   140017c5a:	int3   
   140017c5b:	int3   
   140017c5c:	rex push rbp
   140017c5e:	sub    rsp,0x20
   140017c62:	mov    rbp,rdx
   140017c65:	lea    rcx,[rbp+0x28]
   140017c69:	call   0x140016dcc
   140017c6e:	add    rsp,0x20
   140017c72:	pop    rbp
   140017c73:	ret    
   140017c74:	rex push rdi
   140017c76:	sub    rsp,0x40
   140017c7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017c83:	mov    QWORD PTR [rsp+0x50],rbx
   140017c88:	mov    rdi,rdx
   140017c8b:	lea    rbx,[rcx-0x60]
   140017c8f:	mov    rdx,QWORD PTR [rbx+0x38]
   140017c93:	lea    rcx,[rsp+0x28]
   140017c98:	call   0x14001f364
   140017c9d:	nop
   140017c9e:	mov    rax,QWORD PTR [rbx]
   140017ca1:	mov    rdx,rdi
   140017ca4:	mov    rcx,rbx
   140017ca7:	call   QWORD PTR [rax+0x178]
   140017cad:	mov    ebx,eax
   140017caf:	cmp    DWORD PTR [rsp+0x30],0x0
   140017cb4:	je     0x140017cc2
   140017cb6:	mov    rdx,QWORD PTR [rsp+0x28]
   140017cbb:	xor    ecx,ecx
   140017cbd:	call   0x14001e620
   140017cc2:	mov    eax,ebx
   140017cc4:	mov    rbx,QWORD PTR [rsp+0x50]
   140017cc9:	add    rsp,0x40
   140017ccd:	pop    rdi
   140017cce:	ret    
   140017ccf:	int3   
   140017cd0:	int3   
   140017cd1:	int3   
   140017cd2:	int3   
   140017cd3:	int3   
   140017cd4:	rex push rbp
   140017cd6:	sub    rsp,0x20
   140017cda:	mov    rbp,rdx
   140017cdd:	lea    rcx,[rbp+0x28]
   140017ce1:	call   0x140016dcc
   140017ce6:	add    rsp,0x20
   140017cea:	pop    rbp
   140017ceb:	ret    
   140017cec:	rex push rdi
   140017cee:	sub    rsp,0x60
   140017cf2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017cfb:	mov    QWORD PTR [rsp+0x70],rbx
   140017d00:	mov    QWORD PTR [rsp+0x78],rsi
   140017d05:	mov    rsi,r8
   140017d08:	mov    rbx,rdx
   140017d0b:	lea    rdi,[rcx-0x60]
   140017d0f:	mov    rdx,QWORD PTR [rdi+0x38]
   140017d13:	lea    rcx,[rsp+0x28]
   140017d18:	call   0x14001f364
   140017d1d:	nop
   140017d1e:	lea    rcx,[rsp+0x40]
   140017d23:	mov    rax,QWORD PTR [rbx]
   140017d26:	mov    QWORD PTR [rcx],rax
   140017d29:	mov    rax,QWORD PTR [rbx+0x8]
   140017d2d:	mov    QWORD PTR [rcx+0x8],rax
   140017d31:	mov    rax,QWORD PTR [rbx+0x10]
   140017d35:	mov    QWORD PTR [rcx+0x10],rax
   140017d39:	mov    rax,QWORD PTR [rdi]
   140017d3c:	mov    r8,rsi
   140017d3f:	lea    rdx,[rsp+0x40]
   140017d44:	mov    rcx,rdi
   140017d47:	call   QWORD PTR [rax+0x180]
   140017d4d:	mov    ebx,eax
   140017d4f:	cmp    DWORD PTR [rsp+0x30],0x0
   140017d54:	je     0x140017d62
   140017d56:	mov    rdx,QWORD PTR [rsp+0x28]
   140017d5b:	xor    ecx,ecx
   140017d5d:	call   0x14001e620
   140017d62:	mov    eax,ebx
   140017d64:	mov    rbx,QWORD PTR [rsp+0x70]
   140017d69:	mov    rsi,QWORD PTR [rsp+0x78]
   140017d6e:	add    rsp,0x60
   140017d72:	pop    rdi
   140017d73:	ret    
   140017d74:	int3   
   140017d75:	int3   
   140017d76:	int3   
   140017d77:	int3   
   140017d78:	int3   
   140017d79:	int3   
   140017d7a:	int3   
   140017d7b:	int3   
   140017d7c:	rex push rbp
   140017d7e:	sub    rsp,0x20
   140017d82:	mov    rbp,rdx
   140017d85:	lea    rcx,[rbp+0x28]
   140017d89:	call   0x140016dcc
   140017d8e:	add    rsp,0x20
   140017d92:	pop    rbp
   140017d93:	ret    
   140017d94:	rex push rdi
   140017d96:	sub    rsp,0x60
   140017d9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017da3:	mov    QWORD PTR [rsp+0x70],rbx
   140017da8:	mov    QWORD PTR [rsp+0x78],rsi
   140017dad:	mov    rbx,r8
   140017db0:	mov    esi,edx
   140017db2:	lea    rdi,[rcx-0x60]
   140017db6:	mov    rdx,QWORD PTR [rdi+0x38]
   140017dba:	lea    rcx,[rsp+0x28]
   140017dbf:	call   0x14001f364
   140017dc4:	nop
   140017dc5:	lea    rcx,[rsp+0x40]
   140017dca:	mov    rax,QWORD PTR [rbx]
   140017dcd:	mov    QWORD PTR [rcx],rax
   140017dd0:	mov    rax,QWORD PTR [rbx+0x8]
   140017dd4:	mov    QWORD PTR [rcx+0x8],rax
   140017dd8:	mov    rax,QWORD PTR [rbx+0x10]
   140017ddc:	mov    QWORD PTR [rcx+0x10],rax
   140017de0:	mov    rax,QWORD PTR [rdi]
   140017de3:	lea    r8,[rsp+0x40]
   140017de8:	mov    edx,esi
   140017dea:	mov    rcx,rdi
   140017ded:	call   QWORD PTR [rax+0x188]
   140017df3:	mov    ebx,eax
   140017df5:	cmp    DWORD PTR [rsp+0x30],0x0
   140017dfa:	je     0x140017e08
   140017dfc:	mov    rdx,QWORD PTR [rsp+0x28]
   140017e01:	xor    ecx,ecx
   140017e03:	call   0x14001e620
   140017e08:	mov    eax,ebx
   140017e0a:	mov    rbx,QWORD PTR [rsp+0x70]
   140017e0f:	mov    rsi,QWORD PTR [rsp+0x78]
   140017e14:	add    rsp,0x60
   140017e18:	pop    rdi
   140017e19:	ret    
   140017e1a:	int3   
   140017e1b:	int3   
   140017e1c:	int3   
   140017e1d:	int3   
   140017e1e:	int3   
   140017e1f:	int3   
   140017e20:	int3   
   140017e21:	int3   
   140017e22:	int3   
   140017e23:	int3   
   140017e24:	rex push rbp
   140017e26:	sub    rsp,0x20
   140017e2a:	mov    rbp,rdx
   140017e2d:	lea    rcx,[rbp+0x28]
   140017e31:	call   0x140016dcc
   140017e36:	add    rsp,0x20
   140017e3a:	pop    rbp
   140017e3b:	ret    
   140017e3c:	mov    rax,rsp
   140017e3f:	push   rdi
   140017e40:	sub    rsp,0x70
   140017e44:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140017e4d:	mov    QWORD PTR [rax+0x8],rbx
   140017e51:	mov    QWORD PTR [rax+0x10],rbp
   140017e55:	mov    QWORD PTR [rax+0x18],rsi
   140017e59:	mov    rdi,r9
   140017e5c:	mov    rsi,r8
   140017e5f:	mov    rbp,rdx
   140017e62:	lea    rbx,[rcx-0x60]
   140017e66:	mov    rdx,QWORD PTR [rbx+0x38]
   140017e6a:	lea    rcx,[rax-0x40]
   140017e6e:	call   0x14001f364
   140017e73:	nop
   140017e74:	lea    rcx,[rsp+0x50]
   140017e79:	mov    r10,QWORD PTR [rsp+0xa8]
   140017e81:	mov    rax,QWORD PTR [r10]
   140017e84:	mov    QWORD PTR [rcx],rax
   140017e87:	mov    rax,QWORD PTR [r10+0x8]
   140017e8b:	mov    QWORD PTR [rcx+0x8],rax
   140017e8f:	mov    rax,QWORD PTR [r10+0x10]
   140017e93:	mov    QWORD PTR [rcx+0x10],rax
   140017e97:	mov    r10,QWORD PTR [rbx]
   140017e9a:	lea    rax,[rsp+0x50]
   140017e9f:	mov    QWORD PTR [rsp+0x28],rax
   140017ea4:	mov    rax,QWORD PTR [rsp+0xa0]
   140017eac:	mov    QWORD PTR [rsp+0x20],rax
   140017eb1:	mov    r9,rdi
   140017eb4:	mov    r8,rsi
   140017eb7:	mov    rdx,rbp
   140017eba:	mov    rcx,rbx
   140017ebd:	call   QWORD PTR [r10+0x190]
   140017ec4:	mov    ebx,eax
   140017ec6:	cmp    DWORD PTR [rsp+0x40],0x0
   140017ecb:	je     0x140017ed9
   140017ecd:	mov    rdx,QWORD PTR [rsp+0x38]
   140017ed2:	xor    ecx,ecx
   140017ed4:	call   0x14001e620
   140017ed9:	mov    eax,ebx
   140017edb:	lea    r11,[rsp+0x70]
   140017ee0:	mov    rbx,QWORD PTR [r11+0x10]
   140017ee4:	mov    rbp,QWORD PTR [r11+0x18]
   140017ee8:	mov    rsi,QWORD PTR [r11+0x20]
   140017eec:	mov    rsp,r11
   140017eef:	pop    rdi
   140017ef0:	ret    
   140017ef1:	int3   
   140017ef2:	int3   
   140017ef3:	int3   
   140017ef4:	int3   
   140017ef5:	int3   
   140017ef6:	int3   
   140017ef7:	int3   
   140017ef8:	int3   
   140017ef9:	int3   
   140017efa:	int3   
   140017efb:	int3   
   140017efc:	rex push rbp
   140017efe:	sub    rsp,0x20
   140017f02:	mov    rbp,rdx
   140017f05:	lea    rcx,[rbp+0x38]
   140017f09:	call   0x140016dcc
   140017f0e:	add    rsp,0x20
   140017f12:	pop    rbp
   140017f13:	ret    
   140017f14:	mov    rax,rsp
   140017f17:	push   rdi
   140017f18:	sub    rsp,0x60
   140017f1c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017f25:	mov    QWORD PTR [rax+0x8],rbx
   140017f29:	mov    QWORD PTR [rax+0x10],rbp
   140017f2d:	mov    QWORD PTR [rax+0x18],rsi
   140017f31:	mov    rsi,r9
   140017f34:	mov    rbx,r8
   140017f37:	mov    ebp,edx
   140017f39:	lea    rdi,[rcx-0x60]
   140017f3d:	mov    rdx,QWORD PTR [rdi+0x38]
   140017f41:	lea    rcx,[rax-0x40]
   140017f45:	call   0x14001f364
   140017f4a:	nop
   140017f4b:	lea    rcx,[rsp+0x40]
   140017f50:	mov    rax,QWORD PTR [rbx]
   140017f53:	mov    QWORD PTR [rcx],rax
   140017f56:	mov    rax,QWORD PTR [rbx+0x8]
   140017f5a:	mov    QWORD PTR [rcx+0x8],rax
   140017f5e:	mov    rax,QWORD PTR [rbx+0x10]
   140017f62:	mov    QWORD PTR [rcx+0x10],rax
   140017f66:	mov    rax,QWORD PTR [rdi]
   140017f69:	mov    r9,rsi
   140017f6c:	lea    r8,[rsp+0x40]
   140017f71:	mov    edx,ebp
   140017f73:	mov    rcx,rdi
   140017f76:	call   QWORD PTR [rax+0x198]
   140017f7c:	mov    ebx,eax
   140017f7e:	cmp    DWORD PTR [rsp+0x30],0x0
   140017f83:	je     0x140017f91
   140017f85:	mov    rdx,QWORD PTR [rsp+0x28]
   140017f8a:	xor    ecx,ecx
   140017f8c:	call   0x14001e620
   140017f91:	mov    eax,ebx
   140017f93:	lea    r11,[rsp+0x60]
   140017f98:	mov    rbx,QWORD PTR [r11+0x10]
   140017f9c:	mov    rbp,QWORD PTR [r11+0x18]
   140017fa0:	mov    rsi,QWORD PTR [r11+0x20]
   140017fa4:	mov    rsp,r11
   140017fa7:	pop    rdi
   140017fa8:	ret    
   140017fa9:	int3   
   140017faa:	int3   
   140017fab:	int3   
   140017fac:	int3   
   140017fad:	int3   
   140017fae:	int3   
   140017faf:	int3   
   140017fb0:	int3   
   140017fb1:	int3   
   140017fb2:	int3   
   140017fb3:	int3   
   140017fb4:	rex push rbp
   140017fb6:	sub    rsp,0x20
   140017fba:	mov    rbp,rdx
   140017fbd:	lea    rcx,[rbp+0x28]
   140017fc1:	call   0x140016dcc
   140017fc6:	add    rsp,0x20
   140017fca:	pop    rbp
   140017fcb:	ret    
   140017fcc:	mov    rax,rsp
   140017fcf:	push   rdi
   140017fd0:	sub    rsp,0x40
   140017fd4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017fdd:	mov    QWORD PTR [rax+0x8],rbx
   140017fe1:	mov    QWORD PTR [rax+0x10],rbp
   140017fe5:	mov    QWORD PTR [rax+0x18],rsi
   140017fe9:	mov    rdi,r9
   140017fec:	mov    esi,r8d
   140017fef:	mov    ebp,edx
   140017ff1:	lea    rbx,[rcx-0x60]
   140017ff5:	mov    rdx,QWORD PTR [rbx+0x38]
   140017ff9:	lea    rcx,[rax-0x20]
   140017ffd:	call   0x14001f364
   140018002:	nop
   140018003:	mov    rax,QWORD PTR [rbx]
   140018006:	mov    r9,rdi
   140018009:	mov    r8d,esi
   14001800c:	mov    edx,ebp
   14001800e:	mov    rcx,rbx
   140018011:	call   QWORD PTR [rax+0x1a0]
   140018017:	mov    ebx,eax
   140018019:	cmp    DWORD PTR [rsp+0x30],0x0
   14001801e:	je     0x14001802c
   140018020:	mov    rdx,QWORD PTR [rsp+0x28]
   140018025:	xor    ecx,ecx
   140018027:	call   0x14001e620
   14001802c:	mov    eax,ebx
   14001802e:	mov    rbx,QWORD PTR [rsp+0x50]
   140018033:	mov    rbp,QWORD PTR [rsp+0x58]
   140018038:	mov    rsi,QWORD PTR [rsp+0x60]
   14001803d:	add    rsp,0x40
   140018041:	pop    rdi
   140018042:	ret    
   140018043:	int3   
   140018044:	int3   
   140018045:	int3   
   140018046:	int3   
   140018047:	int3   
   140018048:	int3   
   140018049:	int3   
   14001804a:	int3   
   14001804b:	int3   
   14001804c:	rex push rbp
   14001804e:	sub    rsp,0x20
   140018052:	mov    rbp,rdx
   140018055:	lea    rcx,[rbp+0x28]
   140018059:	call   0x140016dcc
   14001805e:	add    rsp,0x20
   140018062:	pop    rbp
   140018063:	ret    
   140018064:	rex push rdi
   140018066:	sub    rsp,0x60
   14001806a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018073:	mov    QWORD PTR [rsp+0x70],rbx
   140018078:	mov    rbx,rdx
   14001807b:	lea    rdi,[rcx-0x60]
   14001807f:	mov    rdx,QWORD PTR [rdi+0x38]
   140018083:	lea    rcx,[rsp+0x28]
   140018088:	call   0x14001f364
   14001808d:	nop
   14001808e:	lea    rcx,[rsp+0x40]
   140018093:	mov    rax,QWORD PTR [rbx]
   140018096:	mov    QWORD PTR [rcx],rax
   140018099:	mov    rax,QWORD PTR [rbx+0x8]
   14001809d:	mov    QWORD PTR [rcx+0x8],rax
   1400180a1:	mov    rax,QWORD PTR [rbx+0x10]
   1400180a5:	mov    QWORD PTR [rcx+0x10],rax
   1400180a9:	mov    rax,QWORD PTR [rdi]
   1400180ac:	lea    rdx,[rsp+0x40]
   1400180b1:	mov    rcx,rdi
   1400180b4:	call   QWORD PTR [rax+0x1a8]
   1400180ba:	mov    ebx,eax
   1400180bc:	cmp    DWORD PTR [rsp+0x30],0x0
   1400180c1:	je     0x1400180cf
   1400180c3:	mov    rdx,QWORD PTR [rsp+0x28]
   1400180c8:	xor    ecx,ecx
   1400180ca:	call   0x14001e620
   1400180cf:	mov    eax,ebx
   1400180d1:	mov    rbx,QWORD PTR [rsp+0x70]
   1400180d6:	add    rsp,0x60
   1400180da:	pop    rdi
   1400180db:	ret    
   1400180dc:	int3   
   1400180dd:	int3   
   1400180de:	int3   
   1400180df:	int3   
   1400180e0:	int3   
   1400180e1:	int3   
   1400180e2:	int3   
   1400180e3:	int3   
   1400180e4:	rex push rbp
   1400180e6:	sub    rsp,0x20
   1400180ea:	mov    rbp,rdx
   1400180ed:	lea    rcx,[rbp+0x28]
   1400180f1:	call   0x140016dcc
   1400180f6:	add    rsp,0x20
   1400180fa:	pop    rbp
   1400180fb:	ret    
   1400180fc:	rex push rdi
   1400180fe:	sub    rsp,0x60
   140018102:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001810b:	mov    QWORD PTR [rsp+0x70],rbx
   140018110:	mov    QWORD PTR [rsp+0x78],rsi
   140018115:	mov    rsi,r8
   140018118:	mov    rbx,rdx
   14001811b:	lea    rdi,[rcx-0x60]
   14001811f:	mov    rdx,QWORD PTR [rdi+0x38]
   140018123:	lea    rcx,[rsp+0x28]
   140018128:	call   0x14001f364
   14001812d:	nop
   14001812e:	lea    rcx,[rsp+0x40]
   140018133:	mov    rax,QWORD PTR [rbx]
   140018136:	mov    QWORD PTR [rcx],rax
   140018139:	mov    rax,QWORD PTR [rbx+0x8]
   14001813d:	mov    QWORD PTR [rcx+0x8],rax
   140018141:	mov    rax,QWORD PTR [rbx+0x10]
   140018145:	mov    QWORD PTR [rcx+0x10],rax
   140018149:	mov    rax,QWORD PTR [rdi]
   14001814c:	mov    r8,rsi
   14001814f:	lea    rdx,[rsp+0x40]
   140018154:	mov    rcx,rdi
   140018157:	call   QWORD PTR [rax+0x1b0]
   14001815d:	mov    ebx,eax
   14001815f:	cmp    DWORD PTR [rsp+0x30],0x0
   140018164:	je     0x140018172
   140018166:	mov    rdx,QWORD PTR [rsp+0x28]
   14001816b:	xor    ecx,ecx
   14001816d:	call   0x14001e620
   140018172:	mov    eax,ebx
   140018174:	mov    rbx,QWORD PTR [rsp+0x70]
   140018179:	mov    rsi,QWORD PTR [rsp+0x78]
   14001817e:	add    rsp,0x60
   140018182:	pop    rdi
   140018183:	ret    
   140018184:	int3   
   140018185:	int3   
   140018186:	int3   
   140018187:	int3   
   140018188:	int3   
   140018189:	int3   
   14001818a:	int3   
   14001818b:	int3   
   14001818c:	rex push rbp
   14001818e:	sub    rsp,0x20
   140018192:	mov    rbp,rdx
   140018195:	lea    rcx,[rbp+0x28]
   140018199:	call   0x140016dcc
   14001819e:	add    rsp,0x20
   1400181a2:	pop    rbp
   1400181a3:	ret    
   1400181a4:	rex push rdi
   1400181a6:	sub    rsp,0x60
   1400181aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400181b3:	mov    QWORD PTR [rsp+0x70],rbx
   1400181b8:	mov    QWORD PTR [rsp+0x78],rsi
   1400181bd:	mov    rsi,r8
   1400181c0:	mov    rbx,rdx
   1400181c3:	lea    rdi,[rcx-0x60]
   1400181c7:	mov    rdx,QWORD PTR [rdi+0x38]
   1400181cb:	lea    rcx,[rsp+0x28]
   1400181d0:	call   0x14001f364
   1400181d5:	nop
   1400181d6:	lea    rcx,[rsp+0x40]
   1400181db:	mov    rax,QWORD PTR [rbx]
   1400181de:	mov    QWORD PTR [rcx],rax
   1400181e1:	mov    rax,QWORD PTR [rbx+0x8]
   1400181e5:	mov    QWORD PTR [rcx+0x8],rax
   1400181e9:	mov    rax,QWORD PTR [rbx+0x10]
   1400181ed:	mov    QWORD PTR [rcx+0x10],rax
   1400181f1:	mov    rax,QWORD PTR [rdi]
   1400181f4:	mov    r8,rsi
   1400181f7:	lea    rdx,[rsp+0x40]
   1400181fc:	mov    rcx,rdi
   1400181ff:	call   QWORD PTR [rax+0x1b8]
   140018205:	mov    ebx,eax
   140018207:	cmp    DWORD PTR [rsp+0x30],0x0
   14001820c:	je     0x14001821a
   14001820e:	mov    rdx,QWORD PTR [rsp+0x28]
   140018213:	xor    ecx,ecx
   140018215:	call   0x14001e620
   14001821a:	mov    eax,ebx
   14001821c:	mov    rbx,QWORD PTR [rsp+0x70]
   140018221:	mov    rsi,QWORD PTR [rsp+0x78]
   140018226:	add    rsp,0x60
   14001822a:	pop    rdi
   14001822b:	ret    
   14001822c:	int3   
   14001822d:	int3   
   14001822e:	int3   
   14001822f:	int3   
   140018230:	int3   
   140018231:	int3   
   140018232:	int3   
   140018233:	int3   
   140018234:	rex push rbp
   140018236:	sub    rsp,0x20
   14001823a:	mov    rbp,rdx
   14001823d:	lea    rcx,[rbp+0x28]
   140018241:	call   0x140016dcc
   140018246:	add    rsp,0x20
   14001824a:	pop    rbp
   14001824b:	ret    
   14001824c:	rex push rbx
   14001824e:	sub    rsp,0x40
   140018252:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001825b:	lea    rbx,[rcx-0x68]
   14001825f:	mov    rdx,QWORD PTR [rbx+0x38]
   140018263:	lea    rcx,[rsp+0x28]
   140018268:	call   0x14001f364
   14001826d:	nop
   14001826e:	mov    rcx,rbx
   140018271:	call   0x14002587c
   140018276:	mov    ebx,eax
   140018278:	cmp    DWORD PTR [rsp+0x30],0x0
   14001827d:	je     0x14001828b
   14001827f:	mov    rdx,QWORD PTR [rsp+0x28]
   140018284:	xor    ecx,ecx
   140018286:	call   0x14001e620
   14001828b:	mov    eax,ebx
   14001828d:	add    rsp,0x40
   140018291:	pop    rbx
   140018292:	ret    
   140018293:	int3   
   140018294:	int3   
   140018295:	int3   
   140018296:	int3   
   140018297:	int3   
   140018298:	int3   
   140018299:	int3   
   14001829a:	int3   
   14001829b:	int3   
   14001829c:	rex push rbp
   14001829e:	sub    rsp,0x20
   1400182a2:	mov    rbp,rdx
   1400182a5:	lea    rcx,[rbp+0x28]
   1400182a9:	call   0x140016dcc
   1400182ae:	add    rsp,0x20
   1400182b2:	pop    rbp
   1400182b3:	ret    
   1400182b4:	rex push rbx
   1400182b6:	sub    rsp,0x40
   1400182ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400182c3:	lea    rbx,[rcx-0x68]
   1400182c7:	mov    rdx,QWORD PTR [rbx+0x38]
   1400182cb:	lea    rcx,[rsp+0x28]
   1400182d0:	call   0x14001f364
   1400182d5:	nop
   1400182d6:	mov    rcx,rbx
   1400182d9:	call   0x140025930
   1400182de:	mov    ebx,eax
   1400182e0:	cmp    DWORD PTR [rsp+0x30],0x0
   1400182e5:	je     0x1400182f3
   1400182e7:	mov    rdx,QWORD PTR [rsp+0x28]
   1400182ec:	xor    ecx,ecx
   1400182ee:	call   0x14001e620
   1400182f3:	mov    eax,ebx
   1400182f5:	add    rsp,0x40
   1400182f9:	pop    rbx
   1400182fa:	ret    
   1400182fb:	int3   
   1400182fc:	int3   
   1400182fd:	int3   
   1400182fe:	int3   
   1400182ff:	int3   
   140018300:	int3   
   140018301:	int3   
   140018302:	int3   
   140018303:	int3   
   140018304:	rex push rbp
   140018306:	sub    rsp,0x20
   14001830a:	mov    rbp,rdx
   14001830d:	lea    rcx,[rbp+0x28]
   140018311:	call   0x140016dcc
   140018316:	add    rsp,0x20
   14001831a:	pop    rbp
   14001831b:	ret    
   14001831c:	rex push rdi
   14001831e:	sub    rsp,0x40
   140018322:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001832b:	mov    QWORD PTR [rsp+0x50],rbx
   140018330:	mov    QWORD PTR [rsp+0x58],rsi
   140018335:	mov    rdi,r8
   140018338:	mov    rsi,rdx
   14001833b:	lea    rbx,[rcx-0x68]
   14001833f:	mov    rdx,QWORD PTR [rbx+0x38]
   140018343:	lea    rcx,[rsp+0x28]
   140018348:	call   0x14001f364
   14001834d:	nop
   14001834e:	mov    r8,rdi
   140018351:	mov    rdx,rsi
   140018354:	mov    rcx,rbx
   140018357:	call   0x1400259ac
   14001835c:	mov    ebx,eax
   14001835e:	cmp    DWORD PTR [rsp+0x30],0x0
   140018363:	je     0x140018371
   140018365:	mov    rdx,QWORD PTR [rsp+0x28]
   14001836a:	xor    ecx,ecx
   14001836c:	call   0x14001e620
   140018371:	mov    eax,ebx
   140018373:	mov    rbx,QWORD PTR [rsp+0x50]
   140018378:	mov    rsi,QWORD PTR [rsp+0x58]
   14001837d:	add    rsp,0x40
   140018381:	pop    rdi
   140018382:	ret    
   140018383:	int3   
   140018384:	int3   
   140018385:	int3   
   140018386:	int3   
   140018387:	int3   
   140018388:	int3   
   140018389:	int3   
   14001838a:	int3   
   14001838b:	int3   
   14001838c:	rex push rbp
   14001838e:	sub    rsp,0x20
   140018392:	mov    rbp,rdx
   140018395:	lea    rcx,[rbp+0x28]
   140018399:	call   0x140016dcc
   14001839e:	add    rsp,0x20
   1400183a2:	pop    rbp
   1400183a3:	ret    
   1400183a4:	rex push rdi
   1400183a6:	sub    rsp,0x40
   1400183aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400183b3:	mov    QWORD PTR [rsp+0x50],rbx
   1400183b8:	mov    rdi,rdx
   1400183bb:	lea    rbx,[rcx-0x68]
   1400183bf:	mov    rdx,QWORD PTR [rbx+0x38]
   1400183c3:	lea    rcx,[rsp+0x28]
   1400183c8:	call   0x14001f364
   1400183cd:	nop
   1400183ce:	mov    rax,QWORD PTR [rbx]
   1400183d1:	mov    rdx,rdi
   1400183d4:	mov    rcx,rbx
   1400183d7:	call   QWORD PTR [rax+0x1c0]
   1400183dd:	mov    ebx,eax
   1400183df:	cmp    DWORD PTR [rsp+0x30],0x0
   1400183e4:	je     0x1400183f2
   1400183e6:	mov    rdx,QWORD PTR [rsp+0x28]
   1400183eb:	xor    ecx,ecx
   1400183ed:	call   0x14001e620
   1400183f2:	mov    eax,ebx
   1400183f4:	mov    rbx,QWORD PTR [rsp+0x50]
   1400183f9:	add    rsp,0x40
   1400183fd:	pop    rdi
   1400183fe:	ret    
   1400183ff:	int3   
   140018400:	int3   
   140018401:	int3   
   140018402:	int3   
   140018403:	int3   
   140018404:	rex push rbp
   140018406:	sub    rsp,0x20
   14001840a:	mov    rbp,rdx
   14001840d:	lea    rcx,[rbp+0x28]
   140018411:	call   0x140016dcc
   140018416:	add    rsp,0x20
   14001841a:	pop    rbp
   14001841b:	ret    
   14001841c:	mov    QWORD PTR [rsp+0x8],rbx
   140018421:	push   rdi
   140018422:	sub    rsp,0x30
   140018426:	test   rdx,rdx
   140018429:	mov    rbx,rdx
   14001842c:	mov    rdi,rcx
   14001842f:	jne    0x140018438
   140018431:	mov    eax,0x80004003
   140018436:	jmp    0x140018462
   140018438:	mov    rdx,QWORD PTR [rcx-0x30]
   14001843c:	lea    rcx,[rsp+0x20]
   140018441:	call   0x14001f364
   140018446:	cmp    DWORD PTR [rsp+0x28],0x0
   14001844b:	mov    r11,QWORD PTR [rdi-0x28]
   14001844f:	mov    QWORD PTR [rbx],r11
   140018452:	je     0x140018460
   140018454:	mov    rdx,QWORD PTR [rsp+0x20]
   140018459:	xor    ecx,ecx
   14001845b:	call   0x14001e620
   140018460:	xor    eax,eax
   140018462:	mov    rbx,QWORD PTR [rsp+0x40]
   140018467:	add    rsp,0x30
   14001846b:	pop    rdi
   14001846c:	ret    
   14001846d:	int3   
   14001846e:	int3   
   14001846f:	int3   
   140018470:	sub    rsp,0x28
   140018474:	mov    rcx,QWORD PTR [rcx]
   140018477:	test   rcx,rcx
   14001847a:	je     0x140018482
   14001847c:	mov    rax,QWORD PTR [rcx]
   14001847f:	call   QWORD PTR [rax+0x10]
   140018482:	add    rsp,0x28
   140018486:	ret    
   140018487:	int3   
   140018488:	mov    rax,rsp
   14001848b:	push   rdi
   14001848c:	sub    rsp,0x50
   140018490:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018499:	mov    QWORD PTR [rax+0x20],rbx
   14001849d:	mov    rdi,rcx
   1400184a0:	mov    DWORD PTR [rax-0x28],edx
   1400184a3:	mov    QWORD PTR [rax-0x20],rcx
   1400184a7:	and    DWORD PTR [rax-0x18],0x0
   1400184ab:	call   0x14001ea28
   1400184b0:	mov    rbx,rax
   1400184b3:	mov    QWORD PTR [rsp+0x60],rax
   1400184b8:	mov    rdx,QWORD PTR [rax+0x198]
   1400184bf:	mov    QWORD PTR [rsp+0x70],rdx
   1400184c4:	mov    rdx,QWORD PTR [rdi+0x40]
   1400184c8:	mov    QWORD PTR [rax+0x198],rdx
   1400184cf:	and    DWORD PTR [rsp+0x68],0x0
   1400184d4:	mov    r8,QWORD PTR [rdi]
   1400184d7:	lea    rdx,[rsp+0x30]
   1400184dc:	mov    rcx,rdi
   1400184df:	call   QWORD PTR [r8+0x1e8]
   1400184e6:	mov    DWORD PTR [rsp+0x68],0x1
   1400184ee:	jmp    0x1400184fc
   1400184f0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400184f5:	jmp    0x1400184fc
   1400184f7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400184fc:	mov    rax,QWORD PTR [rsp+0x70]
   140018501:	mov    QWORD PTR [rbx+0x198],rax
   140018508:	mov    eax,DWORD PTR [rsp+0x68]
   14001850c:	mov    rbx,QWORD PTR [rsp+0x78]
   140018511:	add    rsp,0x50
   140018515:	pop    rdi
   140018516:	ret    
   140018517:	int3   
   140018518:	mov    QWORD PTR [rsp+0x10],rdx
   14001851d:	push   rbp
   14001851e:	sub    rsp,0x20
   140018522:	mov    rbp,rdx
   140018525:	lea    rax,[rip+0xffffffffffffffc4]        # 0x1400184f0
   14001852c:	jmp    0x14001852e
   14001852e:	add    rsp,0x20
   140018532:	pop    rbp
   140018533:	ret    
   140018534:	int3   
   140018535:	int3   
   140018536:	int3   
   140018537:	int3   
   140018538:	mov    QWORD PTR [rsp+0x10],rdx
   14001853d:	push   rbx
   14001853e:	push   rbp
   14001853f:	sub    rsp,0x28
   140018543:	mov    rbp,rdx
   140018546:	mov    rbx,QWORD PTR [rbp+0x28]
   14001854a:	mov    rax,QWORD PTR [rbx]
   14001854d:	mov    edx,0x30
   140018552:	mov    r8d,0xf108
   140018558:	mov    rcx,rbx
   14001855b:	call   QWORD PTR [rax+0x28]
   14001855e:	mov    rcx,rbx
   140018561:	call   0x140021780
   140018566:	nop
   140018567:	lea    rax,[rip+0xffffffffffffff89]        # 0x1400184f7
   14001856e:	jmp    0x140018570
   140018570:	add    rsp,0x28
   140018574:	pop    rbp
   140018575:	pop    rbx
   140018576:	ret    
   140018577:	int3   
   140018578:	mov    QWORD PTR [rsp+0x8],rbx
   14001857d:	mov    QWORD PTR [rsp+0x10],rbp
   140018582:	mov    QWORD PTR [rsp+0x18],rsi
   140018587:	push   rdi
   140018588:	sub    rsp,0xa0
   14001858f:	mov    rdi,rdx
   140018592:	mov    rsi,rcx
   140018595:	call   0x14001fee4
   14001859a:	xor    ebx,ebx
   14001859c:	mov    ebp,eax
   14001859e:	cmp    rdi,rbx
   1400185a1:	je     0x1400185a9
   1400185a3:	mov    rdi,QWORD PTR [rdi+0x40]
   1400185a7:	jmp    0x1400185e9
   1400185a9:	bt     eax,0x1e
   1400185ad:	mov    rcx,QWORD PTR [rsi+0x40]
   1400185b1:	jae    0x1400185bb
   1400185b3:	call   QWORD PTR [rip+0x2b417]        # 0x1400439d0
   1400185b9:	jmp    0x1400185c6
   1400185bb:	mov    edx,0x4
   1400185c0:	call   QWORD PTR [rip+0x2b3e2]        # 0x1400439a8
   1400185c6:	cmp    rax,rbx
   1400185c9:	mov    rdi,rax
   1400185cc:	je     0x1400185e9
   1400185ce:	xor    r9d,r9d
   1400185d1:	xor    r8d,r8d
   1400185d4:	mov    edx,0x36b
   1400185d9:	mov    rcx,rax
   1400185dc:	call   QWORD PTR [rip+0x2b406]        # 0x1400439e8
   1400185e2:	cmp    rax,rbx
   1400185e5:	cmovne rdi,rax
   1400185e9:	mov    rcx,QWORD PTR [rsi+0x40]
   1400185ed:	lea    rdx,[rsp+0x50]
   1400185f2:	call   QWORD PTR [rip+0x2b3c8]        # 0x1400439c0
   1400185f8:	bt     ebp,0x1e
   1400185fc:	jb     0x1400186c1
   140018602:	cmp    rdi,rbx
   140018605:	je     0x140018624
   140018607:	mov    edx,0xfffffff0
   14001860c:	mov    rcx,rdi
   14001860f:	call   QWORD PTR [rip+0x2b30b]        # 0x140043920
   140018615:	bt     eax,0x1c
   140018619:	jae    0x140018621
   14001861b:	bt     eax,0x1d
   14001861f:	jae    0x140018624
   140018621:	mov    rdi,rbx
   140018624:	cmp    rdi,rbx
   140018627:	mov    DWORD PTR [rsp+0x70],0x28
   14001862f:	jne    0x140018684
   140018631:	call   0x14001f3b8
   140018636:	cmp    rax,rbx
   140018639:	je     0x140018649
   14001863b:	mov    rdx,QWORD PTR [rax]
   14001863e:	mov    rcx,rax
   140018641:	call   QWORD PTR [rdx+0xe8]
   140018647:	jmp    0x14001864c
   140018649:	mov    rax,rbx
   14001864c:	cmp    rax,rbx
   14001864f:	je     0x140018655
   140018651:	mov    rbx,QWORD PTR [rax+0x40]
   140018655:	mov    edx,0x1
   14001865a:	mov    rcx,rbx
   14001865d:	call   0x140015364
   140018662:	lea    rdx,[rsp+0x70]
   140018667:	mov    rcx,rax
   14001866a:	call   0x1400153e4
   14001866f:	lea    rdx,[rsp+0x84]
   140018677:	lea    rcx,[rsp+0x60]
   14001867c:	call   QWORD PTR [rip+0x2b176]        # 0x1400437f8
   140018682:	jmp    0x1400186ac
   140018684:	lea    rdx,[rsp+0x60]
   140018689:	mov    rcx,rdi
   14001868c:	call   QWORD PTR [rip+0x2b32e]        # 0x1400439c0
   140018692:	mov    edx,0x2
   140018697:	mov    rcx,rdi
   14001869a:	call   0x140015364
   14001869f:	lea    rdx,[rsp+0x70]
   1400186a4:	mov    rcx,rax
   1400186a7:	call   0x1400153e4
   1400186ac:	lea    rdx,[rsp+0x84]
   1400186b4:	lea    rcx,[rsp+0x40]
   1400186b9:	call   QWORD PTR [rip+0x2b139]        # 0x1400437f8
   1400186bf:	jmp    0x140018701
   1400186c1:	mov    rcx,QWORD PTR [rsi+0x40]
   1400186c5:	call   QWORD PTR [rip+0x2b305]        # 0x1400439d0
   1400186cb:	lea    rdx,[rsp+0x40]
   1400186d0:	mov    rcx,rax
   1400186d3:	mov    rbx,rax
   1400186d6:	call   QWORD PTR [rip+0x2b304]        # 0x1400439e0
   1400186dc:	lea    rdx,[rsp+0x60]
   1400186e1:	mov    rcx,rdi
   1400186e4:	call   QWORD PTR [rip+0x2b2f6]        # 0x1400439e0
   1400186ea:	lea    r8,[rsp+0x60]
   1400186ef:	mov    r9d,0x2
   1400186f5:	mov    rdx,rbx
   1400186f8:	mov    rcx,rdi
   1400186fb:	call   QWORD PTR [rip+0x2b09f]        # 0x1400437a0
   140018701:	mov    ecx,DWORD PTR [rsp+0x60]
   140018705:	mov    eax,DWORD PTR [rsp+0x68]
   140018709:	mov    r10d,DWORD PTR [rsp+0x58]
   14001870e:	sub    r10d,DWORD PTR [rsp+0x50]
   140018713:	mov    r11d,DWORD PTR [rsp+0x5c]
   140018718:	add    eax,ecx
   14001871a:	sub    r11d,DWORD PTR [rsp+0x54]
   14001871f:	mov    ecx,DWORD PTR [rsp+0x64]
   140018723:	cdq    
   140018724:	sub    eax,edx
   140018726:	sar    eax,1
   140018728:	mov    r8d,eax
   14001872b:	mov    eax,r10d
   14001872e:	cdq    
   14001872f:	sub    eax,edx
   140018731:	sar    eax,1
   140018733:	sub    r8d,eax
   140018736:	mov    eax,DWORD PTR [rsp+0x6c]
   14001873a:	add    eax,ecx
   14001873c:	cdq    
   14001873d:	sub    eax,edx
   14001873f:	sar    eax,1
   140018741:	mov    r9d,eax
   140018744:	mov    eax,r11d
   140018747:	cdq    
   140018748:	sub    eax,edx
   14001874a:	sar    eax,1
   14001874c:	sub    r9d,eax
   14001874f:	cmp    r8d,DWORD PTR [rsp+0x40]
   140018754:	jge    0x14001875d
   140018756:	mov    r8d,DWORD PTR [rsp+0x40]
   14001875b:	jmp    0x140018776
   14001875d:	lea    eax,[r10+r8*1]
   140018761:	cmp    eax,DWORD PTR [rsp+0x48]
   140018765:	jle    0x140018776
   140018767:	mov    r8d,DWORD PTR [rsp+0x50]
   14001876c:	sub    r8d,DWORD PTR [rsp+0x58]
   140018771:	add    r8d,DWORD PTR [rsp+0x48]
   140018776:	cmp    r9d,DWORD PTR [rsp+0x44]
   14001877b:	jge    0x140018784
   14001877d:	mov    r9d,DWORD PTR [rsp+0x44]
   140018782:	jmp    0x14001879d
   140018784:	lea    eax,[r11+r9*1]
   140018788:	cmp    eax,DWORD PTR [rsp+0x4c]
   14001878c:	jle    0x14001879d
   14001878e:	mov    r9d,DWORD PTR [rsp+0x54]
   140018793:	sub    r9d,DWORD PTR [rsp+0x5c]
   140018798:	add    r9d,DWORD PTR [rsp+0x4c]
   14001879d:	or     eax,0xffffffff
   1400187a0:	mov    DWORD PTR [rsp+0x30],0x15
   1400187a8:	xor    edx,edx
   1400187aa:	mov    DWORD PTR [rsp+0x28],eax
   1400187ae:	mov    rcx,rsi
   1400187b1:	mov    DWORD PTR [rsp+0x20],eax
   1400187b5:	call   0x140020160
   1400187ba:	lea    r11,[rsp+0xa0]
   1400187c2:	mov    rbx,QWORD PTR [r11+0x10]
   1400187c6:	mov    rbp,QWORD PTR [r11+0x18]
   1400187ca:	mov    rsi,QWORD PTR [r11+0x20]
   1400187ce:	mov    rsp,r11
   1400187d1:	pop    rdi
   1400187d2:	ret    
   1400187d3:	int3   
   1400187d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400187d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400187de:	mov    QWORD PTR [rsp+0x18],rsi
   1400187e3:	push   rdi
   1400187e4:	push   r12
   1400187e6:	push   r13
   1400187e8:	push   r14
   1400187ea:	push   r15
   1400187ec:	sub    rsp,0x30
   1400187f0:	mov    r15d,0x1
   1400187f6:	xor    r12d,r12d
   1400187f9:	test   dl,0x4
   1400187fc:	mov    ebp,edx
   1400187fe:	mov    rbx,rcx
   140018801:	mov    esi,r15d
   140018804:	je     0x140018816
   140018806:	call   0x14001fee4
   14001880b:	bt     eax,0x1c
   14001880f:	jb     0x140018816
   140018811:	mov    edi,r15d
   140018814:	jmp    0x140018818
   140018816:	xor    edi,edi
   140018818:	mov    rcx,QWORD PTR [rbx+0x40]
   14001881c:	call   QWORD PTR [rip+0x2b1ae]        # 0x1400439d0
   140018822:	or     DWORD PTR [rbx+0x78],0x18
   140018826:	mov    r14,rax
   140018829:	call   0x14001f3cc
   14001882e:	mov    r13,rax
   140018831:	jmp    0x1400188b1
   140018833:	and    DWORD PTR [rsp+0x20],0x0
   140018838:	xor    r9d,r9d
   14001883b:	xor    r8d,r8d
   14001883e:	xor    edx,edx
   140018840:	mov    rcx,r13
   140018843:	call   QWORD PTR [rip+0x2af4f]        # 0x140043798
   140018849:	test   eax,eax
   14001884b:	jne    0x1400188b9
   14001884d:	test   edi,edi
   14001884f:	je     0x140018868
   140018851:	mov    edx,r15d
   140018854:	mov    rcx,rbx
   140018857:	call   0x140020064
   14001885c:	mov    rcx,QWORD PTR [rbx+0x40]
   140018860:	call   QWORD PTR [rip+0x2b0aa]        # 0x140043910
   140018866:	xor    edi,edi
   140018868:	test   r15b,bpl
   14001886b:	jne    0x14001888c
   14001886d:	test   r14,r14
   140018870:	je     0x14001888c
   140018872:	test   r12d,r12d
   140018875:	jne    0x14001888c
   140018877:	mov    r9,QWORD PTR [rbx+0x40]
   14001887b:	xor    r8d,r8d
   14001887e:	mov    edx,0x121
   140018883:	mov    rcx,r14
   140018886:	call   QWORD PTR [rip+0x2b15c]        # 0x1400439e8
   14001888c:	test   bpl,0x2
   140018890:	jne    0x1400188af
   140018892:	mov    rcx,QWORD PTR [rbx+0x40]
   140018896:	movsxd r9,r12d
   140018899:	xor    r8d,r8d
   14001889c:	mov    edx,0x36a
   1400188a1:	call   QWORD PTR [rip+0x2b141]        # 0x1400439e8
   1400188a7:	add    r12d,r15d
   1400188aa:	test   rax,rax
   1400188ad:	jne    0x1400188b1
   1400188af:	xor    esi,esi
   1400188b1:	test   esi,esi
   1400188b3:	jne    0x140018833
   1400188b9:	call   0x14001f97c
   1400188be:	test   eax,eax
   1400188c0:	je     0x14001893b
   1400188c2:	test   edi,edi
   1400188c4:	je     0x1400188f1
   1400188c6:	cmp    DWORD PTR [r13+0x8],0x118
   1400188ce:	je     0x1400188da
   1400188d0:	cmp    DWORD PTR [r13+0x8],0x104
   1400188d8:	jne    0x1400188f1
   1400188da:	mov    edx,r15d
   1400188dd:	mov    rcx,rbx
   1400188e0:	call   0x140020064
   1400188e5:	mov    rcx,QWORD PTR [rbx+0x40]
   1400188e9:	call   QWORD PTR [rip+0x2b021]        # 0x140043910
   1400188ef:	xor    edi,edi
   1400188f1:	mov    rax,QWORD PTR [rbx]
   1400188f4:	mov    rcx,rbx
   1400188f7:	call   QWORD PTR [rax+0x100]
   1400188fd:	test   eax,eax
   1400188ff:	je     0x14001892f
   140018901:	mov    rcx,r13
   140018904:	call   0x14001f810
   140018909:	test   eax,eax
   14001890b:	je     0x140018913
   14001890d:	mov    esi,r15d
   140018910:	xor    r12d,r12d
   140018913:	and    DWORD PTR [rsp+0x20],0x0
   140018918:	xor    r9d,r9d
   14001891b:	xor    r8d,r8d
   14001891e:	xor    edx,edx
   140018920:	mov    rcx,r13
   140018923:	call   QWORD PTR [rip+0x2ae6f]        # 0x140043798
   140018929:	test   eax,eax
   14001892b:	jne    0x1400188b9
   14001892d:	jmp    0x1400188b1
   14001892f:	and    DWORD PTR [rbx+0x78],0xffffffe7
   140018933:	mov    eax,DWORD PTR [rbx+0x88]
   140018939:	jmp    0x140018945
   14001893b:	xor    ecx,ecx
   14001893d:	call   0x1400226fc
   140018942:	or     eax,0xffffffff
   140018945:	mov    rbx,QWORD PTR [rsp+0x60]
   14001894a:	mov    rbp,QWORD PTR [rsp+0x68]
   14001894f:	mov    rsi,QWORD PTR [rsp+0x70]
   140018954:	add    rsp,0x30
   140018958:	pop    r15
   14001895a:	pop    r14
   14001895c:	pop    r13
   14001895e:	pop    r12
   140018960:	pop    rdi
   140018961:	ret    
   140018962:	int3   
   140018963:	int3   
   140018964:	sub    rsp,0x28
   140018968:	mov    eax,DWORD PTR [rcx+0x78]
   14001896b:	mov    DWORD PTR [rcx+0x88],edx
   140018971:	test   al,0x10
   140018973:	je     0x14001898d
   140018975:	and    eax,0xffffffef
   140018978:	xor    r9d,r9d
   14001897b:	xor    r8d,r8d
   14001897e:	mov    DWORD PTR [rcx+0x78],eax
   140018981:	mov    rcx,QWORD PTR [rcx+0x40]
   140018985:	xor    edx,edx
   140018987:	call   QWORD PTR [rip+0x2b06b]        # 0x1400439f8
   14001898d:	add    rsp,0x28
   140018991:	ret    
   140018992:	int3   
   140018993:	int3   
   140018994:	sub    rsp,0x38
   140018998:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400189a1:	mov    ecx,0xa8
   1400189a6:	call   0x1400148c0
   1400189ab:	mov    rcx,rax
   1400189ae:	mov    QWORD PTR [rsp+0x40],rax
   1400189b3:	xor    eax,eax
   1400189b5:	cmp    rcx,rax
   1400189b8:	je     0x1400189c0
   1400189ba:	call   0x140016de8
   1400189bf:	nop
   1400189c0:	add    rsp,0x38
   1400189c4:	ret    
   1400189c5:	int3   
   1400189c6:	int3   
   1400189c7:	int3   
   1400189c8:	int3   
   1400189c9:	int3   
   1400189ca:	int3   
   1400189cb:	int3   
   1400189cc:	int3   
   1400189cd:	int3   
   1400189ce:	int3   
   1400189cf:	int3   
   1400189d0:	int3   
   1400189d1:	int3   
   1400189d2:	int3   
   1400189d3:	int3   
   1400189d4:	rex push rbp
   1400189d6:	sub    rsp,0x20
   1400189da:	mov    rbp,rdx
   1400189dd:	mov    rcx,QWORD PTR [rbp+0x40]
   1400189e1:	call   0x140001930
   1400189e6:	add    rsp,0x20
   1400189ea:	pop    rbp
   1400189eb:	ret    
   1400189ec:	mov    QWORD PTR [rsp+0x8],rcx
   1400189f1:	sub    rsp,0x38
   1400189f5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400189fe:	mov    QWORD PTR [rsp+0x48],rcx
   140018a03:	test   rcx,rcx
   140018a06:	je     0x140018a0e
   140018a08:	call   0x140016de8
   140018a0d:	nop
   140018a0e:	add    rsp,0x38
   140018a12:	ret    
   140018a13:	int3   
   140018a14:	int3   
   140018a15:	int3   
   140018a16:	int3   
   140018a17:	int3   
   140018a18:	int3   
   140018a19:	int3   
   140018a1a:	int3   
   140018a1b:	int3   
   140018a1c:	rex push rbp
   140018a1e:	sub    rsp,0x20
   140018a22:	mov    rbp,rdx
   140018a25:	mov    rdx,QWORD PTR [rbp+0x40]
   140018a29:	mov    rcx,QWORD PTR [rbp+0x48]
   140018a2d:	call   0x1400162d8
   140018a32:	add    rsp,0x20
   140018a36:	pop    rbp
   140018a37:	ret    
   140018a38:	mov    QWORD PTR [rsp+0x8],rbx
   140018a3d:	push   rdi
   140018a3e:	sub    rsp,0x20
   140018a42:	cmp    QWORD PTR [rcx+0x20],0x0
   140018a47:	mov    rdi,rdx
   140018a4a:	mov    rbx,rcx
   140018a4d:	jne    0x140018a95
   140018a4f:	cmp    QWORD PTR [rcx+0x8],0x0
   140018a54:	jne    0x140018a80
   140018a56:	mov    rcx,QWORD PTR [rcx+0x18]
   140018a5a:	call   QWORD PTR [rip+0x2aa48]        # 0x1400434a8
   140018a60:	test   rax,rax
   140018a63:	mov    QWORD PTR [rbx+0x8],rax
   140018a67:	jne    0x140018a80
   140018a69:	mov    rcx,QWORD PTR [rbx+0x18]
   140018a6d:	call   QWORD PTR [rip+0x2aa05]        # 0x140043478
   140018a73:	test   rax,rax
   140018a76:	mov    QWORD PTR [rbx+0x8],rax
   140018a7a:	setne  al
   140018a7d:	mov    BYTE PTR [rbx+0x10],al
   140018a80:	mov    rcx,QWORD PTR [rbx+0x8]
   140018a84:	lea    rdx,[rip+0x2c0a5]        # 0x140044b30
   140018a8b:	call   QWORD PTR [rip+0x2aa1f]        # 0x1400434b0
   140018a91:	mov    QWORD PTR [rbx+0x20],rax
   140018a95:	mov    rax,QWORD PTR [rbx+0x20]
   140018a99:	mov    rbx,QWORD PTR [rsp+0x30]
   140018a9e:	mov    QWORD PTR [rdi],rax
   140018aa1:	mov    rax,rdi
   140018aa4:	add    rsp,0x20
   140018aa8:	pop    rdi
   140018aa9:	ret    
   140018aaa:	int3   
   140018aab:	int3   
   140018aac:	mov    QWORD PTR [rsp+0x8],rbx
   140018ab1:	push   rdi
   140018ab2:	sub    rsp,0x20
   140018ab6:	mov    rdi,rcx
   140018ab9:	and    QWORD PTR [rsp+0x40],0x0
   140018abf:	call   0x14001f2e8
   140018ac4:	lea    rdx,[rsp+0x40]
   140018ac9:	mov    rcx,QWORD PTR [rax+0xd8]
   140018ad0:	call   0x14001e63c
   140018ad5:	mov    ebx,eax
   140018ad7:	mov    DWORD PTR [rsp+0x38],eax
   140018adb:	test   eax,eax
   140018add:	je     0x140018b16
   140018adf:	lea    rdx,[rsp+0x48]
   140018ae4:	mov    rcx,rdi
   140018ae7:	call   0x140018a38
   140018aec:	mov    r11,QWORD PTR [rdi+0x20]
   140018af0:	xor    ecx,ecx
   140018af2:	test   r11,r11
   140018af5:	setne  cl
   140018af8:	test   ecx,ecx
   140018afa:	jne    0x140018b01
   140018afc:	call   0x1400218c0
   140018b01:	call   r11
   140018b04:	nop
   140018b05:	cmp    ebx,0x2
   140018b08:	je     0x140018b16
   140018b0a:	mov    rdx,QWORD PTR [rsp+0x40]
   140018b0f:	xor    ecx,ecx
   140018b11:	call   0x14001e620
   140018b16:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b1b:	add    rsp,0x20
   140018b1f:	pop    rdi
   140018b20:	ret    
   140018b21:	int3   
   140018b22:	int3   
   140018b23:	int3   
   140018b24:	int3   
   140018b25:	int3   
   140018b26:	int3   
   140018b27:	int3   
   140018b28:	int3   
   140018b29:	int3   
   140018b2a:	int3   
   140018b2b:	int3   
   140018b2c:	rex push rbp
   140018b2e:	sub    rsp,0x20
   140018b32:	mov    rbp,rdx
   140018b35:	cmp    DWORD PTR [rbp+0x38],0x2
   140018b39:	je     0x140018b46
   140018b3b:	mov    rdx,QWORD PTR [rbp+0x40]
   140018b3f:	xor    ecx,ecx
   140018b41:	call   0x14001e620
   140018b46:	add    rsp,0x20
   140018b4a:	pop    rbp
   140018b4b:	ret    
   140018b4c:	mov    QWORD PTR [rsp+0x8],rbx
   140018b51:	push   rdi
   140018b52:	sub    rsp,0x20
   140018b56:	cmp    QWORD PTR [rcx+0x28],0x0
   140018b5b:	mov    rdi,rdx
   140018b5e:	mov    rbx,rcx
   140018b61:	jne    0x140018ba9
   140018b63:	cmp    QWORD PTR [rcx+0x8],0x0
   140018b68:	jne    0x140018b94
   140018b6a:	mov    rcx,QWORD PTR [rcx+0x18]
   140018b6e:	call   QWORD PTR [rip+0x2a934]        # 0x1400434a8
   140018b74:	test   rax,rax
   140018b77:	mov    QWORD PTR [rbx+0x8],rax
   140018b7b:	jne    0x140018b94
   140018b7d:	mov    rcx,QWORD PTR [rbx+0x18]
   140018b81:	call   QWORD PTR [rip+0x2a8f1]        # 0x140043478
   140018b87:	test   rax,rax
   140018b8a:	mov    QWORD PTR [rbx+0x8],rax
   140018b8e:	setne  al
   140018b91:	mov    BYTE PTR [rbx+0x10],al
   140018b94:	mov    rcx,QWORD PTR [rbx+0x8]
   140018b98:	lea    rdx,[rip+0x2bfa9]        # 0x140044b48
   140018b9f:	call   QWORD PTR [rip+0x2a90b]        # 0x1400434b0
   140018ba5:	mov    QWORD PTR [rbx+0x28],rax
   140018ba9:	mov    rax,QWORD PTR [rbx+0x28]
   140018bad:	mov    rbx,QWORD PTR [rsp+0x30]
   140018bb2:	mov    QWORD PTR [rdi],rax
   140018bb5:	mov    rax,rdi
   140018bb8:	add    rsp,0x20
   140018bbc:	pop    rdi
   140018bbd:	ret    
   140018bbe:	int3   
   140018bbf:	int3   
   140018bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140018bc5:	mov    QWORD PTR [rsp+0x10],rsi
   140018bca:	push   rdi
   140018bcb:	sub    rsp,0x30
   140018bcf:	mov    rsi,rdx
   140018bd2:	mov    rdi,rcx
   140018bd5:	and    QWORD PTR [rsp+0x58],0x0
   140018bdb:	call   0x14001f2e8
   140018be0:	lea    rdx,[rsp+0x58]
   140018be5:	mov    rcx,QWORD PTR [rax+0xd8]
   140018bec:	call   0x14001e63c
   140018bf1:	mov    ebx,eax
   140018bf3:	mov    DWORD PTR [rsp+0x50],eax
   140018bf7:	and    DWORD PTR [rsp+0x20],0x0
   140018bfc:	test   eax,eax
   140018bfe:	je     0x140018c64
   140018c00:	lea    rdx,[rsp+0x28]
   140018c05:	mov    rcx,rdi
   140018c08:	call   0x140018b4c
   140018c0d:	mov    r11,QWORD PTR [rdi+0x28]
   140018c11:	xor    eax,eax
   140018c13:	test   r11,r11
   140018c16:	setne  al
   140018c19:	test   eax,eax
   140018c1b:	jne    0x140018c22
   140018c1d:	call   0x1400218c0
   140018c22:	mov    rcx,rsi
   140018c25:	call   r11
   140018c28:	mov    esi,eax
   140018c2a:	mov    DWORD PTR [rsp+0x20],eax
   140018c2e:	cmp    ebx,0x2
   140018c31:	je     0x140018c62
   140018c33:	xor    ebx,ebx
   140018c35:	test   eax,eax
   140018c37:	sete   bl
   140018c3a:	test   ebx,ebx
   140018c3c:	je     0x140018c48
   140018c3e:	call   QWORD PTR [rip+0x2a8a4]        # 0x1400434e8
   140018c44:	mov    edi,eax
   140018c46:	jmp    0x140018c4a
   140018c48:	xor    edi,edi
   140018c4a:	mov    rdx,QWORD PTR [rsp+0x58]
   140018c4f:	xor    ecx,ecx
   140018c51:	call   0x14001e620
   140018c56:	test   ebx,ebx
   140018c58:	je     0x140018c62
   140018c5a:	mov    ecx,edi
   140018c5c:	call   QWORD PTR [rip+0x2a836]        # 0x140043498
   140018c62:	mov    eax,esi
   140018c64:	mov    rbx,QWORD PTR [rsp+0x40]
   140018c69:	mov    rsi,QWORD PTR [rsp+0x48]
   140018c6e:	add    rsp,0x30
   140018c72:	pop    rdi
   140018c73:	ret    
   140018c74:	int3   
   140018c75:	int3   
   140018c76:	int3   
   140018c77:	int3   
   140018c78:	int3   
   140018c79:	int3   
   140018c7a:	int3   
   140018c7b:	int3   
   140018c7c:	int3   
   140018c7d:	int3   
   140018c7e:	int3   
   140018c7f:	int3   
   140018c80:	rex push rbx
   140018c82:	push   rbp
   140018c83:	push   rdi
   140018c84:	sub    rsp,0x20
   140018c88:	mov    rbp,rdx
   140018c8b:	cmp    DWORD PTR [rbp+0x50],0x2
   140018c8f:	je     0x140018cc0
   140018c91:	xor    ebx,ebx
   140018c93:	cmp    DWORD PTR [rbp+0x20],ebx
   140018c96:	sete   bl
   140018c99:	test   ebx,ebx
   140018c9b:	je     0x140018ca7
   140018c9d:	call   QWORD PTR [rip+0x2a845]        # 0x1400434e8
   140018ca3:	mov    edi,eax
   140018ca5:	jmp    0x140018ca9
   140018ca7:	xor    edi,edi
   140018ca9:	mov    rdx,QWORD PTR [rbp+0x58]
   140018cad:	xor    ecx,ecx
   140018caf:	call   0x14001e620
   140018cb4:	test   ebx,ebx
   140018cb6:	je     0x140018cc0
   140018cb8:	mov    ecx,edi
   140018cba:	call   QWORD PTR [rip+0x2a7d8]        # 0x140043498
   140018cc0:	add    rsp,0x20
   140018cc4:	pop    rdi
   140018cc5:	pop    rbp
   140018cc6:	pop    rbx
   140018cc7:	ret    
   140018cc8:	rex push rbx
   140018cca:	sub    rsp,0x20
   140018cce:	cmp    DWORD PTR [rcx],0x7fffffff
   140018cd4:	mov    rbx,rcx
   140018cd7:	je     0x140018ce6
   140018cd9:	mov    ecx,DWORD PTR [rcx]
   140018cdb:	call   0x1400243b0
   140018ce0:	mov    DWORD PTR [rbx],0x7fffffff
   140018ce6:	add    rsp,0x20
   140018cea:	pop    rbx
   140018ceb:	ret    
   140018cec:	rex push rbx
   140018cee:	sub    rsp,0x20
   140018cf2:	lea    rdx,[rip+0xffffffffffffda2f]        # 0x140016728
   140018cf9:	lea    rcx,[rip+0x47928]        # 0x140060628
   140018d00:	call   0x14002514c
   140018d05:	test   rax,rax
   140018d08:	mov    rbx,rax
   140018d0b:	jne    0x140018d13
   140018d0d:	call   0x1400218c0
   140018d12:	int3   
   140018d13:	call   QWORD PTR [rip+0x2aa6f]        # 0x140043788
   140018d19:	mov    DWORD PTR [rbx+0xb8],eax
   140018d1f:	call   QWORD PTR [rip+0x2aa6b]        # 0x140043790
   140018d25:	mov    r11d,eax
   140018d28:	cwde   
   140018d29:	mov    DWORD PTR [rsp+0x30],eax
   140018d2d:	shr    r11,0x10
   140018d31:	movsx  eax,r11w
   140018d35:	mov    DWORD PTR [rsp+0x34],eax
   140018d39:	mov    rax,QWORD PTR [rsp+0x30]
   140018d3e:	mov    QWORD PTR [rbx+0xbc],rax
   140018d45:	lea    rax,[rbx+0x98]
   140018d4c:	add    rsp,0x20
   140018d50:	pop    rbx
   140018d51:	ret    
   140018d52:	int3   
   140018d53:	int3   
   140018d54:	rex push rbx
   140018d56:	sub    rsp,0x20
   140018d5a:	mov    rbx,rcx
   140018d5d:	lea    rdx,[rip+0xffffffffffffd9c4]        # 0x140016728
   140018d64:	lea    rcx,[rip+0x478bd]        # 0x140060628
   140018d6b:	call   0x14002514c
   140018d70:	test   rax,rax
   140018d73:	mov    r11,rax
   140018d76:	jne    0x140018d7e
   140018d78:	call   0x1400218c0
   140018d7d:	int3   
   140018d7e:	mov    rax,QWORD PTR [rbx]
   140018d81:	mov    r9,QWORD PTR [r11+0xb0]
   140018d88:	mov    r8,QWORD PTR [r11+0xa8]
   140018d8f:	mov    edx,DWORD PTR [r11+0xa0]
   140018d96:	mov    rcx,rbx
   140018d99:	add    rsp,0x20
   140018d9d:	pop    rbx
   140018d9e:	rex.W jmp QWORD PTR [rax+0x220]
   140018da5:	int3   
   140018da6:	int3   
   140018da7:	int3   
   140018da8:	rex push rdi
   140018daa:	sub    rsp,0x40
   140018dae:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140018db7:	mov    QWORD PTR [rsp+0x50],rbx
   140018dbc:	mov    QWORD PTR [rsp+0x60],rsi
   140018dc1:	mov    esi,ecx
   140018dc3:	call   0x14001f338
   140018dc8:	mov    rdi,rax
   140018dcb:	xor    ebx,ebx
   140018dcd:	cmp    QWORD PTR [rax+0x28],rbx
   140018dd1:	jne    0x140018e37
   140018dd3:	cmp    esi,ebx
   140018dd5:	je     0x140018e37
   140018dd7:	lea    rcx,[rip+0xb732]        # 0x140024510
   140018dde:	call   0x1400148b0
   140018de3:	mov    rsi,rax
   140018de6:	mov    ecx,0xb8
   140018deb:	call   0x1400148c0
   140018df0:	mov    QWORD PTR [rsp+0x58],rax
   140018df5:	cmp    rax,rbx
   140018df8:	je     0x140018e2b
   140018dfa:	mov    DWORD PTR [rsp+0x28],0x1
   140018e02:	mov    QWORD PTR [rsp+0x20],0x40
   140018e0b:	lea    r9,[rip+0xffffffffffffd90a]        # 0x14001671c
   140018e12:	lea    r8,[rip+0xfffffffffffffbd3]        # 0x1400189ec
   140018e19:	lea    rdx,[rip+0x2b110]        # 0x140043f30
   140018e20:	mov    rcx,rax
   140018e23:	call   0x1400259e0
   140018e28:	mov    rbx,rax
   140018e2b:	mov    QWORD PTR [rdi+0x28],rbx
   140018e2f:	mov    rcx,rsi
   140018e32:	call   0x1400148b0
   140018e37:	mov    rax,QWORD PTR [rdi+0x28]
   140018e3b:	mov    rbx,QWORD PTR [rsp+0x50]
   140018e40:	mov    rsi,QWORD PTR [rsp+0x60]
   140018e45:	add    rsp,0x40
   140018e49:	pop    rdi
   140018e4a:	ret    
   140018e4b:	int3   
   140018e4c:	int3   
   140018e4d:	int3   
   140018e4e:	int3   
   140018e4f:	int3   
   140018e50:	int3   
   140018e51:	int3   
   140018e52:	int3   
   140018e53:	int3   
   140018e54:	int3   
   140018e55:	int3   
   140018e56:	int3   
   140018e57:	int3   
   140018e58:	rex push rbp
   140018e5a:	sub    rsp,0x20
   140018e5e:	mov    rbp,rdx
   140018e61:	mov    rcx,QWORD PTR [rbp+0x58]
   140018e65:	call   0x14001490c
   140018e6a:	add    rsp,0x20
   140018e6e:	pop    rbp
   140018e6f:	ret    
   140018e70:	mov    QWORD PTR [rsp+0x8],rbx
   140018e75:	push   rdi
   140018e76:	sub    rsp,0x20
   140018e7a:	mov    rbx,rcx
   140018e7d:	mov    ecx,0x1
   140018e82:	call   0x140018da8
   140018e87:	mov    rdx,rbx
   140018e8a:	mov    rcx,rax
   140018e8d:	mov    rdi,rax
   140018e90:	call   0x140025b1c
   140018e95:	mov    rdx,rdi
   140018e98:	mov    rcx,rax
   140018e9b:	mov    rbx,rax
   140018e9e:	call   0x1400201d8
   140018ea3:	mov    rax,rbx
   140018ea6:	mov    rbx,QWORD PTR [rsp+0x30]
   140018eab:	add    rsp,0x20
   140018eaf:	pop    rdi
   140018eb0:	ret    
   140018eb1:	int3   
   140018eb2:	int3   
   140018eb3:	int3   
   140018eb4:	rex push rbx
   140018eb6:	sub    rsp,0x20
   140018eba:	mov    rbx,rcx
   140018ebd:	call   0x14001f338
   140018ec2:	mov    rcx,QWORD PTR [rax+0x28]
   140018ec6:	xor    eax,eax
   140018ec8:	cmp    rcx,rax
   140018ecb:	je     0x140018ed9
   140018ecd:	add    rcx,0x30
   140018ed1:	mov    rdx,rbx
   140018ed4:	call   0x14002541c
   140018ed9:	add    rsp,0x20
   140018edd:	pop    rbx
   140018ede:	ret    
   140018edf:	int3   
   140018ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140018ee5:	mov    QWORD PTR [rsp+0x10],rsi
   140018eea:	push   rdi
   140018eeb:	sub    rsp,0x20
   140018eef:	test   rdx,rdx
   140018ef2:	mov    rdi,rdx
   140018ef5:	mov    rsi,rcx
   140018ef8:	jne    0x140018efe
   140018efa:	xor    eax,eax
   140018efc:	jmp    0x140018f2e
   140018efe:	mov    ecx,0x1
   140018f03:	call   0x140018da8
   140018f08:	mov    rdx,rdi
   140018f0b:	mov    QWORD PTR [rsi+0x40],rdi
   140018f0f:	lea    rcx,[rax+0x30]
   140018f13:	mov    rbx,rax
   140018f16:	call   0x14002566c
   140018f1b:	mov    rdx,rbx
   140018f1e:	mov    rcx,rsi
   140018f21:	mov    QWORD PTR [rax],rsi
   140018f24:	call   0x1400201d8
   140018f29:	mov    eax,0x1
   140018f2e:	mov    rbx,QWORD PTR [rsp+0x30]
   140018f33:	mov    rsi,QWORD PTR [rsp+0x38]
   140018f38:	add    rsp,0x20
   140018f3c:	pop    rdi
   140018f3d:	ret    
   140018f3e:	int3   
   140018f3f:	int3   
   140018f40:	mov    QWORD PTR [rsp+0x8],rbx
   140018f45:	push   rdi
   140018f46:	sub    rsp,0x20
   140018f4a:	mov    rdi,QWORD PTR [rcx+0x40]
   140018f4e:	mov    rbx,rcx
   140018f51:	test   rdi,rdi
   140018f54:	je     0x140018f76
   140018f56:	call   0x14001f338
   140018f5b:	mov    rcx,QWORD PTR [rax+0x28]
   140018f5f:	test   rcx,rcx
   140018f62:	je     0x140018f71
   140018f64:	mov    rdx,QWORD PTR [rbx+0x40]
   140018f68:	add    rcx,0x30
   140018f6c:	call   0x140025490
   140018f71:	and    QWORD PTR [rbx+0x40],0x0
   140018f76:	and    QWORD PTR [rbx+0xa0],0x0
   140018f7e:	mov    rbx,QWORD PTR [rsp+0x30]
   140018f83:	mov    rax,rdi
   140018f86:	add    rsp,0x20
   140018f8a:	pop    rdi
   140018f8b:	ret    
   140018f8c:	rex push rbx
   140018f8e:	sub    rsp,0x20
   140018f92:	lea    rdx,[rip+0xffffffffffffd78f]        # 0x140016728
   140018f99:	lea    rcx,[rip+0x47688]        # 0x140060628
   140018fa0:	call   0x14002514c
   140018fa5:	test   rax,rax
   140018fa8:	mov    rbx,rax
   140018fab:	jne    0x140018fb3
   140018fad:	call   0x1400218c0
   140018fb2:	int3   
   140018fb3:	call   0x14001f2e8
   140018fb8:	cmp    BYTE PTR [rax+0x28],0x0
   140018fbc:	je     0x140018fd2
   140018fbe:	mov    rcx,QWORD PTR [rbx+0x48]
   140018fc2:	test   rcx,rcx
   140018fc5:	je     0x140018fd2
   140018fc7:	call   QWORD PTR [rip+0x2a7b3]        # 0x140043780
   140018fcd:	and    QWORD PTR [rbx+0x48],0x0
   140018fd2:	cmp    QWORD PTR [rbx+0x28],0x0
   140018fd7:	je     0x140018fe2
   140018fd9:	and    QWORD PTR [rbx+0x28],0x0
   140018fde:	xor    eax,eax
   140018fe0:	jmp    0x140018fe7
   140018fe2:	mov    eax,0x1
   140018fe7:	add    rsp,0x20
   140018feb:	pop    rbx
   140018fec:	ret    
   140018fed:	int3   
   140018fee:	int3   
   140018fef:	int3   
   140018ff0:	rex push rbx
   140018ff2:	sub    rsp,0x20
   140018ff6:	mov    rbx,rcx
   140018ff9:	mov    rcx,QWORD PTR [rcx+0x98]
   140019000:	test   rcx,rcx
   140019003:	je     0x140019010
   140019005:	mov    rax,QWORD PTR [rcx]
   140019008:	mov    edx,0x1
   14001900d:	call   QWORD PTR [rax+0x8]
   140019010:	mov    rcx,QWORD PTR [rbx+0x58]
   140019014:	and    QWORD PTR [rbx+0x98],0x0
   14001901c:	test   rcx,rcx
   14001901f:	je     0x14001902c
   140019021:	mov    rax,QWORD PTR [rcx]
   140019024:	xor    r8d,r8d
   140019027:	xor    edx,edx
   140019029:	call   QWORD PTR [rax+0x18]
   14001902c:	mov    rcx,QWORD PTR [rbx+0x50]
   140019030:	test   rcx,rcx
   140019033:	je     0x14001903b
   140019035:	mov    rax,QWORD PTR [rcx]
   140019038:	call   QWORD PTR [rax+0x10]
   14001903b:	mov    rcx,rbx
   14001903e:	add    rsp,0x20
   140019042:	pop    rbx
   140019043:	jmp    0x140018d54
   140019048:	mov    QWORD PTR [rsp+0x8],rbx
   14001904d:	push   rdi
   14001904e:	sub    rsp,0x70
   140019052:	mov    rdi,rcx
   140019055:	call   0x14001f3b8
   14001905a:	test   rax,rax
   14001905d:	mov    rbx,rax
   140019060:	je     0x14001909e
   140019062:	cmp    QWORD PTR [rax+0x40],rdi
   140019066:	jne    0x140019093
   140019068:	call   0x14001f2e8
   14001906d:	cmp    BYTE PTR [rax+0x28],0x0
   140019071:	jne    0x14001908e
   140019073:	call   0x14001f2e8
   140019078:	cmp    rbx,QWORD PTR [rax+0x8]
   14001907c:	jne    0x140019087
   14001907e:	call   0x140025f00
   140019083:	test   eax,eax
   140019085:	je     0x14001908e
   140019087:	xor    ecx,ecx
   140019089:	call   0x1400226fc
   14001908e:	and    QWORD PTR [rbx+0x40],0x0
   140019093:	cmp    QWORD PTR [rbx+0x48],rdi
   140019097:	jne    0x14001909e
   140019099:	and    QWORD PTR [rbx+0x48],0x0
   14001909e:	mov    rcx,QWORD PTR [rdi+0x90]
   1400190a5:	test   rcx,rcx
   1400190a8:	je     0x1400190bb
   1400190aa:	mov    rax,QWORD PTR [rcx]
   1400190ad:	call   QWORD PTR [rax+0xa0]
   1400190b3:	and    QWORD PTR [rdi+0x90],0x0
   1400190bb:	mov    rcx,QWORD PTR [rdi+0x98]
   1400190c2:	test   rcx,rcx
   1400190c5:	je     0x1400190d2
   1400190c7:	mov    rax,QWORD PTR [rcx]
   1400190ca:	mov    edx,0x1
   1400190cf:	call   QWORD PTR [rax+0x8]
   1400190d2:	and    QWORD PTR [rdi+0x98],0x0
   1400190da:	test   BYTE PTR [rdi+0x78],0x1
   1400190de:	je     0x14001913a
   1400190e0:	call   0x14001f338
   1400190e5:	mov    rbx,QWORD PTR [rax+0x78]
   1400190e9:	test   rbx,rbx
   1400190ec:	je     0x14001913a
   1400190ee:	cmp    QWORD PTR [rbx+0x40],0x0
   1400190f3:	je     0x14001913a
   1400190f5:	xor    edx,edx
   1400190f7:	lea    rcx,[rsp+0x20]
   1400190fc:	lea    r8d,[rdx+0x48]
   140019100:	call   0x14002ac20
   140019105:	mov    rax,QWORD PTR [rdi+0x40]
   140019109:	mov    rcx,QWORD PTR [rbx+0x40]
   14001910d:	lea    r9,[rsp+0x20]
   140019112:	xor    r8d,r8d
   140019115:	mov    edx,0x433
   14001911a:	mov    QWORD PTR [rsp+0x28],rax
   14001911f:	mov    QWORD PTR [rsp+0x30],rax
   140019124:	mov    DWORD PTR [rsp+0x20],0x38
   14001912c:	mov    DWORD PTR [rsp+0x24],0x1
   140019134:	call   QWORD PTR [rip+0x2a8ae]        # 0x1400439e8
   14001913a:	mov    rcx,QWORD PTR [rdi+0x40]
   14001913e:	mov    edx,0xfffffffc
   140019143:	call   QWORD PTR [rip+0x2a627]        # 0x140043770
   140019149:	mov    rcx,rdi
   14001914c:	mov    rbx,rax
   14001914f:	call   0x140018d54
   140019154:	mov    rcx,QWORD PTR [rdi+0x40]
   140019158:	mov    edx,0xfffffffc
   14001915d:	call   QWORD PTR [rip+0x2a60d]        # 0x140043770
   140019163:	cmp    rax,rbx
   140019166:	jne    0x14001918b
   140019168:	mov    rax,QWORD PTR [rdi]
   14001916b:	mov    rcx,rdi
   14001916e:	call   QWORD PTR [rax+0x1e0]
   140019174:	mov    r8,QWORD PTR [rax]
   140019177:	test   r8,r8
   14001917a:	je     0x14001918b
   14001917c:	mov    rcx,QWORD PTR [rdi+0x40]
   140019180:	mov    edx,0xfffffffc
   140019185:	call   QWORD PTR [rip+0x2a5ed]        # 0x140043778
   14001918b:	mov    rcx,rdi
   14001918e:	call   0x140018f40
   140019193:	mov    r11,QWORD PTR [rdi]
   140019196:	mov    rcx,rdi
   140019199:	mov    rbx,QWORD PTR [rsp+0x80]
   1400191a1:	add    rsp,0x70
   1400191a5:	pop    rdi
   1400191a6:	rex.WB jmp QWORD PTR [r11+0x228]
   1400191ad:	int3   
   1400191ae:	int3   
   1400191af:	int3   
   1400191b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400191b5:	push   rdi
   1400191b6:	sub    rsp,0x20
   1400191ba:	xor    ebx,ebx
   1400191bc:	mov    rdi,rcx
   1400191bf:	cmp    QWORD PTR [rcx+0x40],rbx
   1400191c3:	jne    0x1400191d8
   1400191c5:	cmp    QWORD PTR [rcx+0xa0],rbx
   1400191cc:	jne    0x1400191d2
   1400191ce:	xor    eax,eax
   1400191d0:	jmp    0x140019230
   1400191d2:	cmp    QWORD PTR [rcx+0x40],rbx
   1400191d6:	je     0x1400191f9
   1400191d8:	call   0x14001f338
   1400191dd:	mov    rcx,QWORD PTR [rax+0x28]
   1400191e1:	cmp    rcx,rbx
   1400191e4:	jne    0x1400191ec
   1400191e6:	call   0x1400218c0
   1400191eb:	int3   
   1400191ec:	mov    rdx,QWORD PTR [rdi+0x40]
   1400191f0:	add    rcx,0x30
   1400191f4:	call   0x14002541c
   1400191f9:	mov    rcx,QWORD PTR [rdi+0x40]
   1400191fd:	cmp    rcx,rbx
   140019200:	jne    0x14001920b
   140019202:	cmp    QWORD PTR [rdi+0xa0],rbx
   140019209:	je     0x14001922e
   14001920b:	cmp    QWORD PTR [rdi+0xa0],rbx
   140019212:	jne    0x14001921c
   140019214:	call   QWORD PTR [rip+0x2a54e]        # 0x140043768
   14001921a:	jmp    0x14001922c
   14001921c:	mov    rcx,QWORD PTR [rdi+0xa0]
   140019223:	mov    rax,QWORD PTR [rcx]
   140019226:	call   QWORD PTR [rax+0xb0]
   14001922c:	mov    ebx,eax
   14001922e:	mov    eax,ebx
   140019230:	mov    rbx,QWORD PTR [rsp+0x30]
   140019235:	add    rsp,0x20
   140019239:	pop    rdi
   14001923a:	ret    
   14001923b:	int3   
   14001923c:	rex push rbx
   14001923e:	sub    rsp,0x40
   140019242:	mov    rbx,rcx
   140019245:	mov    QWORD PTR [rsp+0x28],rdx
   14001924a:	lea    rdx,[rip+0xffffffffffffd4d7]        # 0x140016728
   140019251:	lea    rcx,[rip+0x473d0]        # 0x140060628
   140019258:	mov    QWORD PTR [rsp+0x20],r8
   14001925d:	call   0x14002514c
   140019262:	test   rax,rax
   140019265:	jne    0x14001926d
   140019267:	call   0x1400218c0
   14001926c:	int3   
   14001926d:	mov    eax,DWORD PTR [rax+0xa0]
   140019273:	xor    r8d,r8d
   140019276:	lea    r9,[rsp+0x20]
   14001927b:	sub    eax,0x132
   140019280:	lea    edx,[r8+0x19]
   140019284:	mov    rcx,rbx
   140019287:	mov    DWORD PTR [rsp+0x30],eax
   14001928b:	mov    rax,QWORD PTR [rbx]
   14001928e:	call   QWORD PTR [rax+0x210]
   140019294:	add    rsp,0x40
   140019298:	pop    rbx
   140019299:	ret    
   14001929a:	int3   
   14001929b:	int3   
   14001929c:	mov    QWORD PTR [rsp+0x8],rbx
   1400192a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400192a6:	mov    QWORD PTR [rsp+0x18],rsi
   1400192ab:	push   rdi
   1400192ac:	sub    rsp,0x20
   1400192b0:	mov    edi,r8d
   1400192b3:	mov    ebp,edx
   1400192b5:	mov    rsi,rcx
   1400192b8:	call   QWORD PTR [rip+0x2a49a]        # 0x140043758
   1400192be:	test   rax,rax
   1400192c1:	mov    rbx,rax
   1400192c4:	je     0x1400192fe
   1400192c6:	mov    rcx,rax
   1400192c9:	call   QWORD PTR [rip+0x2a491]        # 0x140043760
   1400192cf:	test   rax,rax
   1400192d2:	je     0x1400192e6
   1400192d4:	mov    r8d,edi
   1400192d7:	mov    edx,ebp
   1400192d9:	mov    rcx,rbx
   1400192dc:	call   0x14001929c
   1400192e1:	test   rax,rax
   1400192e4:	jne    0x140019331
   1400192e6:	test   edi,edi
   1400192e8:	mov    rcx,rbx
   1400192eb:	jne    0x1400192f4
   1400192ed:	call   0x140018e70
   1400192f2:	jmp    0x140019331
   1400192f4:	call   0x140018eb4
   1400192f9:	test   rax,rax
   1400192fc:	jne    0x140019331
   1400192fe:	mov    rcx,rsi
   140019301:	call   QWORD PTR [rip+0x2a459]        # 0x140043760
   140019307:	jmp    0x140019327
   140019309:	mov    r8d,edi
   14001930c:	mov    edx,ebp
   14001930e:	mov    rcx,rbx
   140019311:	call   0x14001929c
   140019316:	test   rax,rax
   140019319:	jne    0x140019331
   14001931b:	lea    edx,[rax+0x2]
   14001931e:	mov    rcx,rbx
   140019321:	call   QWORD PTR [rip+0x2a681]        # 0x1400439a8
   140019327:	test   rax,rax
   14001932a:	mov    rbx,rax
   14001932d:	jne    0x140019309
   14001932f:	xor    eax,eax
   140019331:	mov    rbx,QWORD PTR [rsp+0x30]
   140019336:	mov    rbp,QWORD PTR [rsp+0x38]
   14001933b:	mov    rsi,QWORD PTR [rsp+0x40]
   140019340:	add    rsp,0x20
   140019344:	pop    rdi
   140019345:	ret    
   140019346:	int3   
   140019347:	int3   
   140019348:	mov    QWORD PTR [rsp+0x8],rbx
   14001934d:	mov    QWORD PTR [rsp+0x10],rsi
   140019352:	push   rdi
   140019353:	sub    rsp,0x20
   140019357:	mov    rbx,QWORD PTR [rdx]
   14001935a:	mov    rsi,rdx
   14001935d:	mov    rdi,rcx
   140019360:	test   rbx,rbx
   140019363:	je     0x1400193a3
   140019365:	mov    rcx,rbx
   140019368:	call   0x140018eb4
   14001936d:	test   rax,rax
   140019370:	je     0x140019386
   140019372:	mov    r8,QWORD PTR [rax]
   140019375:	mov    rdx,rsi
   140019378:	mov    rcx,rax
   14001937b:	call   QWORD PTR [r8+0x200]
   140019382:	test   eax,eax
   140019384:	jne    0x14001939c
   140019386:	cmp    rbx,rdi
   140019389:	je     0x1400193a3
   14001938b:	mov    rcx,rbx
   14001938e:	call   QWORD PTR [rip+0x2a63c]        # 0x1400439d0
   140019394:	mov    rbx,rax
   140019397:	test   rax,rax
   14001939a:	jmp    0x140019363
   14001939c:	mov    eax,0x1
   1400193a1:	jmp    0x1400193a5
   1400193a3:	xor    eax,eax
   1400193a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400193aa:	mov    rsi,QWORD PTR [rsp+0x38]
   1400193af:	add    rsp,0x20
   1400193b3:	pop    rdi
   1400193b4:	ret    
   1400193b5:	int3   
   1400193b6:	int3   
   1400193b7:	int3   
   1400193b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400193bd:	push   rdi
   1400193be:	sub    rsp,0x30
   1400193c2:	mov    rdi,rdx
   1400193c5:	mov    rbx,rcx
   1400193c8:	lea    rdx,[rip+0xffffffffffffd359]        # 0x140016728
   1400193cf:	lea    rcx,[rip+0x47252]        # 0x140060628
   1400193d6:	call   0x14002514c
   1400193db:	test   rax,rax
   1400193de:	mov    r11,rax
   1400193e1:	jne    0x1400193e9
   1400193e3:	call   0x1400218c0
   1400193e8:	int3   
   1400193e9:	mov    rax,QWORD PTR [rbx]
   1400193ec:	mov    r9,QWORD PTR [r11+0xb0]
   1400193f3:	mov    r8,QWORD PTR [r11+0xa8]
   1400193fa:	mov    edx,DWORD PTR [r11+0xa0]
   140019401:	mov    rcx,rbx
   140019404:	mov    QWORD PTR [rsp+0x20],rdi
   140019409:	call   QWORD PTR [rax+0x230]
   14001940f:	mov    rbx,QWORD PTR [rsp+0x40]
   140019414:	add    rsp,0x30
   140019418:	pop    rdi
   140019419:	ret    
   14001941a:	int3   
   14001941b:	int3   
   14001941c:	rex push rbx
   14001941e:	sub    rsp,0x20
   140019422:	cmp    QWORD PTR [rcx+0x98],0x0
   14001942a:	mov    rbx,rcx
   14001942d:	je     0x140019443
   14001942f:	mov    rcx,QWORD PTR [rcx+0x98]
   140019436:	mov    rax,QWORD PTR [rcx]
   140019439:	call   QWORD PTR [rax+0x120]
   14001943f:	test   eax,eax
   140019441:	jne    0x14001944b
   140019443:	mov    rcx,rbx
   140019446:	call   0x140018d54
   14001944b:	add    rsp,0x20
   14001944f:	pop    rbx
   140019450:	ret    
   140019451:	int3   
   140019452:	int3   
   140019453:	int3   
   140019454:	mov    QWORD PTR [rsp+0x8],rbx
   140019459:	mov    QWORD PTR [rsp+0x10],rsi
   14001945e:	push   rdi
   14001945f:	sub    rsp,0x20
   140019463:	mov    rsi,rcx
   140019466:	call   0x14001fee4
   14001946b:	xor    ebx,ebx
   14001946d:	bt     eax,0x1e
   140019471:	jb     0x1400194e5
   140019473:	call   0x14001f3b8
   140019478:	cmp    rax,rbx
   14001947b:	je     0x14001948e
   14001947d:	mov    rdx,QWORD PTR [rax]
   140019480:	mov    rcx,rax
   140019483:	call   QWORD PTR [rdx+0xe8]
   140019489:	mov    rdi,rax
   14001948c:	jmp    0x140019491
   14001948e:	mov    rdi,rbx
   140019491:	cmp    rdi,rbx
   140019494:	je     0x1400194e5
   140019496:	mov    ecx,0x10
   14001949b:	call   QWORD PTR [rip+0x2a30f]        # 0x1400437b0
   1400194a1:	cmp    ax,bx
   1400194a4:	jl     0x1400194e5
   1400194a6:	mov    ecx,0x11
   1400194ab:	call   QWORD PTR [rip+0x2a2ff]        # 0x1400437b0
   1400194b1:	cmp    ax,bx
   1400194b4:	jl     0x1400194e5
   1400194b6:	mov    ecx,0x12
   1400194bb:	call   QWORD PTR [rip+0x2a2ef]        # 0x1400437b0
   1400194c1:	cmp    ax,bx
   1400194c4:	jl     0x1400194e5
   1400194c6:	mov    rcx,QWORD PTR [rdi+0x40]
   1400194ca:	xor    r9d,r9d
   1400194cd:	mov    edx,0x111
   1400194d2:	mov    r8d,0xe146
   1400194d8:	call   QWORD PTR [rip+0x2a50a]        # 0x1400439e8
   1400194de:	mov    eax,0x1
   1400194e3:	jmp    0x1400194f5
   1400194e5:	mov    rcx,rsi
   1400194e8:	call   0x140018d54
   1400194ed:	cmp    rax,rbx
   1400194f0:	setne  bl
   1400194f3:	mov    eax,ebx
   1400194f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400194fa:	mov    rsi,QWORD PTR [rsp+0x38]
   1400194ff:	add    rsp,0x20
   140019503:	pop    rdi
   140019504:	ret    
   140019505:	int3   
   140019506:	int3   
   140019507:	int3   
   140019508:	rex push rbx
   14001950a:	sub    rsp,0x20
   14001950e:	cmp    BYTE PTR [rcx+0x48],0x0
   140019512:	mov    rbx,rcx
   140019515:	jne    0x14001951e
   140019517:	call   0x140018d54
   14001951c:	jmp    0x140019540
   14001951e:	mov    rax,QWORD PTR [rcx]
   140019521:	and    QWORD PTR [rsp+0x30],0x0
   140019527:	lea    r9,[rsp+0x30]
   14001952c:	call   QWORD PTR [rax+0x1c8]
   140019532:	test   eax,eax
   140019534:	jns    0x14001953b
   140019536:	mov    rcx,rbx
   140019539:	jmp    0x140019517
   14001953b:	mov    rax,QWORD PTR [rsp+0x30]
   140019540:	add    rsp,0x20
   140019544:	pop    rbx
   140019545:	ret    
   140019546:	int3   
   140019547:	int3   
   140019548:	rex push rbx
   14001954a:	sub    rsp,0x20
   14001954e:	test   r9,r9
   140019551:	mov    rbx,rcx
   140019554:	je     0x140019564
   140019556:	xor    edx,edx
   140019558:	mov    rcx,r9
   14001955b:	call   0x1400193b8
   140019560:	test   eax,eax
   140019562:	jne    0x14001956c
   140019564:	mov    rcx,rbx
   140019567:	call   0x140018d54
   14001956c:	add    rsp,0x20
   140019570:	pop    rbx
   140019571:	ret    
   140019572:	int3   
   140019573:	int3   
   140019574:	rex push rbx
   140019576:	sub    rsp,0x60
   14001957a:	mov    rbx,rcx
   14001957d:	jmp    0x14001958a
   14001957f:	lea    rcx,[rsp+0x30]
   140019584:	call   QWORD PTR [rip+0x2a1c6]        # 0x140043750
   14001958a:	mov    r9d,0x121
   140019590:	lea    rcx,[rsp+0x30]
   140019595:	xor    edx,edx
   140019597:	mov    r8d,r9d
   14001959a:	mov    DWORD PTR [rsp+0x20],0x1
   1400195a2:	call   QWORD PTR [rip+0x2a1f0]        # 0x140043798
   1400195a8:	test   eax,eax
   1400195aa:	jne    0x14001957f
   1400195ac:	mov    rcx,rbx
   1400195af:	add    rsp,0x60
   1400195b3:	pop    rbx
   1400195b4:	jmp    0x140018d54
   1400195b9:	int3   
   1400195ba:	int3   
   1400195bb:	int3   
   1400195bc:	rex push rbx
   1400195be:	sub    rsp,0x30
   1400195c2:	mov    rbx,rcx
   1400195c5:	lea    rdx,[rsp+0x20]
   1400195ca:	mov    rcx,r8
   1400195cd:	call   0x1400193b8
   1400195d2:	test   eax,eax
   1400195d4:	je     0x1400195dd
   1400195d6:	mov    rax,QWORD PTR [rsp+0x20]
   1400195db:	jmp    0x1400195e5
   1400195dd:	mov    rcx,rbx
   1400195e0:	call   0x140018d54
   1400195e5:	add    rsp,0x30
   1400195e9:	pop    rbx
   1400195ea:	ret    
   1400195eb:	int3   
   1400195ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400195f1:	mov    QWORD PTR [rsp+0x10],rsi
   1400195f6:	push   rdi
   1400195f7:	sub    rsp,0x20
   1400195fb:	mov    edi,edx
   1400195fd:	mov    rsi,rcx
   140019600:	xor    ebx,ebx
   140019602:	call   0x14001f2e8
   140019607:	lea    rdx,[rsp+0x40]
   14001960c:	mov    rcx,QWORD PTR [rax+0xc8]
   140019613:	mov    rcx,QWORD PTR [rcx]
   140019616:	call   0x140018b4c
   14001961b:	cmp    QWORD PTR [rax],rbx
   14001961e:	je     0x14001963f
   140019620:	call   0x14001f2e8
   140019625:	mov    rdx,rsi
   140019628:	mov    rcx,QWORD PTR [rax+0xc8]
   14001962f:	mov    rcx,QWORD PTR [rcx]
   140019632:	call   0x140018bc0
   140019637:	cmp    eax,ebx
   140019639:	je     0x140019662
   14001963b:	mov    ebx,edi
   14001963d:	jmp    0x140019662
   14001963f:	mov    eax,edi
   140019641:	mov    esi,0x3fc0
   140019646:	and    eax,esi
   140019648:	cmp    eax,edi
   14001964a:	jne    0x140019662
   14001964c:	call   0x14001f2e8
   140019651:	mov    rcx,QWORD PTR [rax+0xc8]
   140019658:	mov    rcx,QWORD PTR [rcx]
   14001965b:	call   0x140018aac
   140019660:	mov    ebx,esi
   140019662:	mov    rsi,QWORD PTR [rsp+0x38]
   140019667:	mov    eax,ebx
   140019669:	mov    rbx,QWORD PTR [rsp+0x30]
   14001966e:	add    rsp,0x20
   140019672:	pop    rdi
   140019673:	ret    
   140019674:	sub    rsp,0x28
   140019678:	mov    ecx,0x18
   14001967d:	call   0x140024948
   140019682:	test   rax,rax
   140019685:	je     0x140019693
   140019687:	lea    rcx,[rip+0x2af9a]        # 0x140044628
   14001968e:	mov    QWORD PTR [rax],rcx
   140019691:	jmp    0x140019695
   140019693:	xor    eax,eax
   140019695:	add    rsp,0x28
   140019699:	ret    
   14001969a:	int3   
   14001969b:	int3   
   14001969c:	bt     r8d,0x1c
   1400196a1:	jb     0x140019731
   1400196a7:	mov    QWORD PTR [rsp+0x8],rbx
   1400196ac:	push   rdi
   1400196ad:	sub    rsp,0x30
   1400196b1:	mov    rdi,rdx
   1400196b4:	mov    rbx,rcx
   1400196b7:	call   0x14001fee4
   1400196bc:	test   eax,0x50000000
   1400196c1:	jne    0x140019727
   1400196c3:	mov    rcx,QWORD PTR [rbx+0x40]
   1400196c7:	lea    rdx,[rsp+0x20]
   1400196cc:	call   QWORD PTR [rip+0x2a2ee]        # 0x1400439c0
   1400196d2:	mov    r11d,DWORD PTR [rsp+0x20]
   1400196d7:	cmp    DWORD PTR [rdi],r11d
   1400196da:	jne    0x140019727
   1400196dc:	mov    eax,DWORD PTR [rsp+0x24]
   1400196e0:	cmp    DWORD PTR [rdi+0x4],eax
   1400196e3:	jne    0x140019727
   1400196e5:	mov    rcx,QWORD PTR [rbx+0x40]
   1400196e9:	mov    edx,0x4
   1400196ee:	call   QWORD PTR [rip+0x2a2b4]        # 0x1400439a8
   1400196f4:	mov    rcx,rax
   1400196f7:	call   0x140018e70
   1400196fc:	test   rax,rax
   1400196ff:	je     0x14001970d
   140019701:	mov    rcx,rax
   140019704:	call   0x140020094
   140019709:	test   eax,eax
   14001970b:	jne    0x140019727
   14001970d:	mov    rax,QWORD PTR [rbx]
   140019710:	mov    rcx,rbx
   140019713:	call   QWORD PTR [rax+0x238]
   140019719:	test   eax,eax
   14001971b:	je     0x140019727
   14001971d:	xor    edx,edx
   14001971f:	mov    rcx,rbx
   140019722:	call   0x140018578
   140019727:	mov    rbx,QWORD PTR [rsp+0x40]
   14001972c:	add    rsp,0x30
   140019730:	pop    rdi
   140019731:	ret    
   140019732:	int3   
   140019733:	int3   
   140019734:	mov    rax,rsp
   140019737:	push   r13
   140019739:	push   r14
   14001973b:	push   r15
   14001973d:	sub    rsp,0x80
   140019744:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001974d:	mov    QWORD PTR [rax+0x8],rbx
   140019751:	mov    QWORD PTR [rax+0x10],rsi
   140019755:	mov    QWORD PTR [rax+0x18],rdi
   140019759:	mov    QWORD PTR [rax+0x20],r12
   14001975d:	mov    r15,r9
   140019760:	mov    r12d,r8d
   140019763:	mov    r14,rdx
   140019766:	mov    r13,rcx
   140019769:	lea    rdx,[rip+0xffffffffffffcfb8]        # 0x140016728
   140019770:	lea    rcx,[rip+0x46eb1]        # 0x140060628
   140019777:	call   0x14002514c
   14001977c:	mov    rsi,rax
   14001977f:	mov    QWORD PTR [rsp+0x28],rax
   140019784:	xor    edi,edi
   140019786:	mov    r10d,edi
   140019789:	cmp    rax,rdi
   14001978c:	setne  r10b
   140019790:	cmp    r10d,edi
   140019793:	jne    0x14001979b
   140019795:	call   0x1400218c0
   14001979a:	int3   
   14001979b:	lea    rcx,[rsp+0x50]
   1400197a0:	lea    rdx,[rax+0x98]
   1400197a7:	mov    r8d,0x30
   1400197ad:	call   0x14002b7a0
   1400197b2:	mov    QWORD PTR [rsi+0x98],r14
   1400197b9:	mov    DWORD PTR [rsi+0xa0],r12d
   1400197c0:	mov    QWORD PTR [rsi+0xa8],r15
   1400197c7:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400197cf:	mov    QWORD PTR [rsi+0xb0],rbx
   1400197d6:	cmp    r12d,0x2
   1400197da:	jne    0x1400197f7
   1400197dc:	cmp    QWORD PTR [r13+0x98],rdi
   1400197e3:	je     0x1400197f7
   1400197e5:	mov    rcx,QWORD PTR [r13+0x98]
   1400197ec:	mov    rax,QWORD PTR [rcx]
   1400197ef:	xor    edx,edx
   1400197f1:	call   QWORD PTR [rax+0xc0]
   1400197f7:	mov    DWORD PTR [rsp+0x20],edi
   1400197fb:	mov    r14d,0x110
   140019801:	cmp    r12d,r14d
   140019804:	jne    0x14001981c
   140019806:	lea    r8,[rsp+0x20]
   14001980b:	lea    rdx,[rsp+0x38]
   140019810:	mov    rcx,r13
   140019813:	call   0x140016e5c
   140019818:	mov    edi,DWORD PTR [rsp+0x20]
   14001981c:	mov    rax,QWORD PTR [r13+0x0]
   140019820:	mov    r9,rbx
   140019823:	mov    r8,r15
   140019826:	mov    edx,r12d
   140019829:	mov    rcx,r13
   14001982c:	call   QWORD PTR [rax+0x210]
   140019832:	mov    rbx,rax
   140019835:	cmp    r12d,r14d
   140019838:	jne    0x14001984b
   14001983a:	mov    r8d,edi
   14001983d:	lea    rdx,[rsp+0x38]
   140019842:	mov    rcx,r13
   140019845:	call   0x14001969c
   14001984a:	nop
   14001984b:	jmp    0x140019857
   14001984d:	mov    rbx,QWORD PTR [rsp+0x20]
   140019852:	mov    rsi,QWORD PTR [rsp+0x28]
   140019857:	lea    rcx,[rsi+0x98]
   14001985e:	lea    rdx,[rsp+0x50]
   140019863:	mov    r8d,0x30
   140019869:	call   0x14002b7a0
   14001986e:	mov    rax,rbx
   140019871:	lea    r11,[rsp+0x80]
   140019879:	mov    rbx,QWORD PTR [r11+0x20]
   14001987d:	mov    rsi,QWORD PTR [r11+0x28]
   140019881:	mov    rdi,QWORD PTR [r11+0x30]
   140019885:	mov    r12,QWORD PTR [r11+0x38]
   140019889:	mov    rsp,r11
   14001988c:	pop    r15
   14001988e:	pop    r14
   140019890:	pop    r13
   140019892:	ret    
   140019893:	int3   
   140019894:	mov    QWORD PTR [rsp+0x10],rdx
   140019899:	push   rbx
   14001989a:	push   rbp
   14001989b:	push   rdi
   14001989c:	sub    rsp,0x20
   1400198a0:	mov    rbp,rdx
   1400198a3:	mov    rdx,QWORD PTR [rbp+0x28]
   1400198a7:	add    rdx,0x98
   1400198ae:	mov    rbx,QWORD PTR [rbp+0x48]
   1400198b2:	mov    rcx,rbx
   1400198b5:	call   0x14001f40c
   1400198ba:	mov    QWORD PTR [rbp+0x20],rax
   1400198be:	xor    edi,edi
   1400198c0:	cmp    rbx,rdi
   1400198c3:	je     0x1400198ce
   1400198c5:	mov    rcx,rbx
   1400198c8:	call   0x140021780
   1400198cd:	nop
   1400198ce:	lea    rax,[rip+0xffffffffffffff78]        # 0x14001984d
   1400198d5:	jmp    0x1400198d7
   1400198d7:	add    rsp,0x20
   1400198db:	pop    rdi
   1400198dc:	pop    rbp
   1400198dd:	pop    rbx
   1400198de:	ret    
   1400198df:	int3   
   1400198e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400198e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400198ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400198ef:	push   rdi
   1400198f0:	sub    rsp,0x30
   1400198f4:	cmp    edx,0x360
   1400198fa:	mov    rsi,r9
   1400198fd:	mov    rbp,r8
   140019900:	mov    edi,edx
   140019902:	mov    rbx,rcx
   140019905:	jne    0x140019913
   140019907:	movabs rax,0x1
   140019911:	jmp    0x14001994c
   140019913:	call   0x140018eb4
   140019918:	test   rax,rax
   14001991b:	je     0x14001993b
   14001991d:	cmp    QWORD PTR [rax+0x40],rbx
   140019921:	jne    0x14001993b
   140019923:	mov    r9,rbp
   140019926:	mov    r8d,edi
   140019929:	mov    rdx,rbx
   14001992c:	mov    rcx,rax
   14001992f:	mov    QWORD PTR [rsp+0x20],rsi
   140019934:	call   0x140019734
   140019939:	jmp    0x14001994c
   14001993b:	mov    r9,rsi
   14001993e:	mov    r8,rbp
   140019941:	mov    edx,edi
   140019943:	mov    rcx,rbx
   140019946:	call   QWORD PTR [rip+0x29ebc]        # 0x140043808
   14001994c:	mov    rbx,QWORD PTR [rsp+0x40]
   140019951:	mov    rbp,QWORD PTR [rsp+0x48]
   140019956:	mov    rsi,QWORD PTR [rsp+0x50]
   14001995b:	add    rsp,0x30
   14001995f:	pop    rdi
   140019960:	ret    
   140019961:	int3   
   140019962:	int3   
   140019963:	int3   
   140019964:	mov    QWORD PTR [rsp+0x8],rcx
   140019969:	push   rbx
   14001996a:	sub    rsp,0x30
   14001996e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019977:	mov    rbx,rcx
   14001997a:	lea    rax,[rip+0x2a9c7]        # 0x140044348
   140019981:	mov    QWORD PTR [rcx],rax
   140019984:	cmp    QWORD PTR [rcx+0x40],0x0
   140019989:	je     0x1400199c0
   14001998b:	lea    rax,[rip+0x4699e]        # 0x140060330
   140019992:	cmp    rcx,rax
   140019995:	je     0x1400199c0
   140019997:	lea    rax,[rip+0x46a42]        # 0x1400603e0
   14001999e:	cmp    rcx,rax
   1400199a1:	je     0x1400199c0
   1400199a3:	lea    rax,[rip+0x46ae6]        # 0x140060490
   1400199aa:	cmp    rcx,rax
   1400199ad:	je     0x1400199c0
   1400199af:	lea    rax,[rip+0x46b8a]        # 0x140060540
   1400199b6:	cmp    rcx,rax
   1400199b9:	je     0x1400199c0
   1400199bb:	call   0x1400191b0
   1400199c0:	mov    rcx,QWORD PTR [rbx+0x98]
   1400199c7:	test   rcx,rcx
   1400199ca:	je     0x1400199d7
   1400199cc:	mov    rax,QWORD PTR [rcx]
   1400199cf:	mov    edx,0x1
   1400199d4:	call   QWORD PTR [rax+0x8]
   1400199d7:	mov    rax,QWORD PTR [rbx+0xa0]
   1400199de:	test   rax,rax
   1400199e1:	je     0x1400199ee
   1400199e3:	cmp    QWORD PTR [rax+0x50],rbx
   1400199e7:	jne    0x1400199ee
   1400199e9:	and    QWORD PTR [rax+0x50],0x0
   1400199ee:	mov    rcx,rbx
   1400199f1:	add    rsp,0x30
   1400199f5:	pop    rbx
   1400199f6:	jmp    0x140014d08
   1400199fb:	int3   
   1400199fc:	int3   
   1400199fd:	int3   
   1400199fe:	int3   
   1400199ff:	int3   
   140019a00:	int3   
   140019a01:	int3   
   140019a02:	int3   
   140019a03:	int3   
   140019a04:	rex push rbp
   140019a06:	sub    rsp,0x20
   140019a0a:	mov    rbp,rdx
   140019a0d:	mov    rcx,QWORD PTR [rbp+0x40]
   140019a11:	call   0x140014d08
   140019a16:	add    rsp,0x20
   140019a1a:	pop    rbp
   140019a1b:	ret    
   140019a1c:	rex push rbx
   140019a1e:	sub    rsp,0x20
   140019a22:	test   r8,r8
   140019a25:	mov    rbx,rcx
   140019a28:	je     0x140019a41
   140019a2a:	lea    rdx,[rsp+0x40]
   140019a2f:	mov    rcx,r8
   140019a32:	call   0x1400193b8
   140019a37:	test   eax,eax
   140019a39:	je     0x140019a41
   140019a3b:	mov    eax,DWORD PTR [rsp+0x40]
   140019a3f:	jmp    0x140019a49
   140019a41:	mov    rcx,rbx
   140019a44:	call   0x140018d54
   140019a49:	add    rsp,0x20
   140019a4d:	pop    rbx
   140019a4e:	ret    
   140019a4f:	int3   
   140019a50:	mov    QWORD PTR [rsp+0x8],rbx
   140019a55:	push   rdi
   140019a56:	sub    rsp,0x20
   140019a5a:	mov    rbx,r8
   140019a5d:	mov    r8d,0x1
   140019a63:	mov    rdi,rcx
   140019a66:	cmp    DWORD PTR [rbx],r8d
   140019a69:	jne    0x140019ad7
   140019a6b:	lea    rdx,[rip+0xffffffffffffccb6]        # 0x140016728
   140019a72:	lea    rcx,[rip+0x46baf]        # 0x140060628
   140019a79:	call   0x14002514c
   140019a7e:	test   rax,rax
   140019a81:	jne    0x140019a89
   140019a83:	call   0x1400218c0
   140019a88:	int3   
   140019a89:	mov    rcx,QWORD PTR [rdi+0x40]
   140019a8d:	cmp    QWORD PTR [rax+0xc8],rcx
   140019a94:	jne    0x140019a9f
   140019a96:	mov    rcx,QWORD PTR [rax+0xd0]
   140019a9d:	jmp    0x140019aa8
   140019a9f:	call   QWORD PTR [rip+0x29d1b]        # 0x1400437c0
   140019aa5:	mov    rcx,rax
   140019aa8:	call   0x140024184
   140019aad:	test   rax,rax
   140019ab0:	jne    0x140019ab8
   140019ab2:	call   0x1400218c0
   140019ab7:	int3   
   140019ab8:	mov    edx,DWORD PTR [rbx+0x8]
   140019abb:	mov    rcx,rax
   140019abe:	call   0x140017138
   140019ac3:	test   rax,rax
   140019ac6:	je     0x140019af6
   140019ac8:	mov    r8,QWORD PTR [rax]
   140019acb:	mov    rdx,rbx
   140019ace:	mov    rcx,rax
   140019ad1:	call   QWORD PTR [r8+0x20]
   140019ad5:	jmp    0x140019af6
   140019ad7:	mov    edx,DWORD PTR [rbx+0x4]
   140019ada:	mov    rcx,QWORD PTR [rcx+0x40]
   140019ade:	call   0x14001929c
   140019ae3:	test   rax,rax
   140019ae6:	je     0x140019af6
   140019ae8:	xor    edx,edx
   140019aea:	mov    rcx,rax
   140019aed:	call   0x1400193b8
   140019af2:	test   eax,eax
   140019af4:	jne    0x140019afe
   140019af6:	mov    rcx,rdi
   140019af9:	call   0x140018d54
   140019afe:	mov    rbx,QWORD PTR [rsp+0x30]
   140019b03:	add    rsp,0x20
   140019b07:	pop    rdi
   140019b08:	ret    
   140019b09:	int3   
   140019b0a:	int3   
   140019b0b:	int3   
   140019b0c:	rex push rbx
   140019b0e:	sub    rsp,0x20
   140019b12:	test   rcx,rcx
   140019b15:	je     0x140019b20
   140019b17:	mov    rcx,QWORD PTR [rcx+0x40]
   140019b1b:	test   rcx,rcx
   140019b1e:	jne    0x140019b3c
   140019b20:	xor    eax,eax
   140019b22:	add    rsp,0x20
   140019b26:	pop    rbx
   140019b27:	ret    
   140019b28:	mov    rdx,QWORD PTR [rbx]
   140019b2b:	mov    rcx,rbx
   140019b2e:	call   QWORD PTR [rdx+0x240]
   140019b34:	test   eax,eax
   140019b36:	jne    0x140019b54
   140019b38:	mov    rcx,QWORD PTR [rbx+0x40]
   140019b3c:	call   QWORD PTR [rip+0x29e8e]        # 0x1400439d0
   140019b42:	mov    rcx,rax
   140019b45:	call   0x140018e70
   140019b4a:	test   rax,rax
   140019b4d:	mov    rbx,rax
   140019b50:	jne    0x140019b28
   140019b52:	jmp    0x140019b20
   140019b54:	mov    rax,rbx
   140019b57:	jmp    0x140019b22
   140019b59:	int3   
   140019b5a:	int3   
   140019b5b:	int3   
   140019b5c:	rex push rbx
   140019b5e:	sub    rsp,0x20
   140019b62:	test   rcx,rcx
   140019b65:	mov    rbx,rcx
   140019b68:	je     0x140019ba8
   140019b6a:	cmp    QWORD PTR [rcx+0x40],0x0
   140019b6f:	je     0x140019ba8
   140019b71:	mov    rax,QWORD PTR [rcx]
   140019b74:	call   QWORD PTR [rax+0x240]
   140019b7a:	test   eax,eax
   140019b7c:	jne    0x140019b89
   140019b7e:	mov    rcx,rbx
   140019b81:	call   0x140019b0c
   140019b86:	mov    rbx,rax
   140019b89:	test   rbx,rbx
   140019b8c:	je     0x140019ba3
   140019b8e:	mov    rcx,rbx
   140019b91:	jmp    0x140019b99
   140019b93:	mov    rbx,rax
   140019b96:	mov    rcx,rax
   140019b99:	call   0x140019b0c
   140019b9e:	test   rax,rax
   140019ba1:	jne    0x140019b93
   140019ba3:	mov    rax,rbx
   140019ba6:	jmp    0x140019baa
   140019ba8:	xor    eax,eax
   140019baa:	add    rsp,0x20
   140019bae:	pop    rbx
   140019baf:	ret    
   140019bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140019bb5:	mov    QWORD PTR [rsp+0x18],r8
   140019bba:	mov    DWORD PTR [rsp+0x10],edx
   140019bbe:	push   rbp
   140019bbf:	push   rsi
   140019bc0:	push   rdi
   140019bc1:	sub    rsp,0x30
   140019bc5:	mov    rbp,r9
   140019bc8:	call   QWORD PTR [rip+0x29b92]        # 0x140043760
   140019bce:	test   rax,rax
   140019bd1:	mov    rbx,rax
   140019bd4:	je     0x140019c6a
   140019bda:	mov    edi,DWORD PTR [rsp+0x78]
   140019bde:	mov    esi,DWORD PTR [rsp+0x70]
   140019be2:	test   edi,edi
   140019be4:	mov    rcx,rbx
   140019be7:	je     0x140019c10
   140019be9:	call   0x140018eb4
   140019bee:	test   rax,rax
   140019bf1:	je     0x140019c22
   140019bf3:	mov    r9,QWORD PTR [rsp+0x60]
   140019bf8:	mov    r8d,DWORD PTR [rsp+0x58]
   140019bfd:	mov    rdx,QWORD PTR [rax+0x40]
   140019c01:	mov    rcx,rax
   140019c04:	mov    QWORD PTR [rsp+0x20],rbp
   140019c09:	call   0x140019734
   140019c0e:	jmp    0x140019c22
   140019c10:	mov    r8,QWORD PTR [rsp+0x60]
   140019c15:	mov    edx,DWORD PTR [rsp+0x58]
   140019c19:	mov    r9,rbp
   140019c1c:	call   QWORD PTR [rip+0x29dc6]        # 0x1400439e8
   140019c22:	test   esi,esi
   140019c24:	je     0x140019c50
   140019c26:	mov    rcx,rbx
   140019c29:	call   QWORD PTR [rip+0x29b31]        # 0x140043760
   140019c2f:	test   rax,rax
   140019c32:	je     0x140019c50
   140019c34:	mov    r8,QWORD PTR [rsp+0x60]
   140019c39:	mov    edx,DWORD PTR [rsp+0x58]
   140019c3d:	mov    r9,rbp
   140019c40:	mov    rcx,rbx
   140019c43:	mov    DWORD PTR [rsp+0x28],edi
   140019c47:	mov    DWORD PTR [rsp+0x20],esi
   140019c4b:	call   0x140019bb0
   140019c50:	mov    edx,0x2
   140019c55:	mov    rcx,rbx
   140019c58:	call   QWORD PTR [rip+0x29d4a]        # 0x1400439a8
   140019c5e:	test   rax,rax
   140019c61:	mov    rbx,rax
   140019c64:	jne    0x140019be2
   140019c6a:	mov    rbx,QWORD PTR [rsp+0x50]
   140019c6f:	add    rsp,0x30
   140019c73:	pop    rdi
   140019c74:	pop    rsi
   140019c75:	pop    rbp
   140019c76:	ret    
   140019c77:	int3   
   140019c78:	mov    rax,rsp
   140019c7b:	push   rdi
   140019c7c:	sub    rsp,0xe0
   140019c83:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019c8c:	mov    QWORD PTR [rax+0x8],rbx
   140019c90:	mov    QWORD PTR [rax+0x10],rbp
   140019c94:	mov    QWORD PTR [rax+0x18],rsi
   140019c98:	mov    rbp,rdx
   140019c9b:	mov    rdi,rcx
   140019c9e:	call   0x14001f338
   140019ca3:	mov    rcx,QWORD PTR [rax+0x28]
   140019ca7:	xor    ebx,ebx
   140019ca9:	cmp    rcx,rbx
   140019cac:	jne    0x140019cb5
   140019cae:	xor    eax,eax
   140019cb0:	jmp    0x140019d50
   140019cb5:	lea    rsi,[rcx+0x30]
   140019cb9:	mov    rdx,rdi
   140019cbc:	mov    rcx,rsi
   140019cbf:	call   0x14002541c
   140019cc4:	cmp    rax,rbx
   140019cc7:	jne    0x140019d45
   140019cc9:	mov    rcx,rdi
   140019ccc:	call   QWORD PTR [rip+0x29cfe]        # 0x1400439d0
   140019cd2:	mov    rdx,rax
   140019cd5:	mov    rcx,rsi
   140019cd8:	call   0x14002541c
   140019cdd:	cmp    rax,rbx
   140019ce0:	je     0x140019d41
   140019ce2:	mov    rcx,QWORD PTR [rax+0x98]
   140019ce9:	cmp    rcx,rbx
   140019cec:	je     0x140019d41
   140019cee:	add    rcx,0x48
   140019cf2:	mov    rdx,rdi
   140019cf5:	call   0x14002541c
   140019cfa:	mov    rsi,rax
   140019cfd:	cmp    rax,rbx
   140019d00:	je     0x140019d41
   140019d02:	mov    rdx,rdi
   140019d05:	lea    rcx,[rsp+0x30]
   140019d0a:	call   0x140015e38
   140019d0f:	nop
   140019d10:	mov    QWORD PTR [rsp+0xd0],rsi
   140019d18:	mov    rdx,rbp
   140019d1b:	lea    rcx,[rsp+0x30]
   140019d20:	call   0x1400193b8
   140019d25:	movsxd rcx,eax
   140019d28:	mov    QWORD PTR [rsp+0x70],rbx
   140019d2d:	cmp    rcx,rbx
   140019d30:	setne  bl
   140019d33:	lea    rcx,[rsp+0x30]
   140019d38:	call   0x140019964
   140019d3d:	mov    eax,ebx
   140019d3f:	jmp    0x140019d50
   140019d41:	xor    eax,eax
   140019d43:	jmp    0x140019d50
   140019d45:	mov    rdx,rbp
   140019d48:	mov    rcx,rax
   140019d4b:	call   0x1400193b8
   140019d50:	lea    r11,[rsp+0xe0]
   140019d58:	mov    rbx,QWORD PTR [r11+0x10]
   140019d5c:	mov    rbp,QWORD PTR [r11+0x18]
   140019d60:	mov    rsi,QWORD PTR [r11+0x20]
   140019d64:	mov    rsp,r11
   140019d67:	pop    rdi
   140019d68:	ret    
   140019d69:	int3   
   140019d6a:	int3   
   140019d6b:	int3   
   140019d6c:	int3   
   140019d6d:	int3   
   140019d6e:	int3   
   140019d6f:	int3   
   140019d70:	int3   
   140019d71:	int3   
   140019d72:	int3   
   140019d73:	int3   
   140019d74:	int3   
   140019d75:	int3   
   140019d76:	int3   
   140019d77:	int3   
   140019d78:	rex push rbp
   140019d7a:	sub    rsp,0x20
   140019d7e:	mov    rbp,rdx
   140019d81:	lea    rcx,[rbp+0x30]
   140019d85:	call   0x140019964
   140019d8a:	add    rsp,0x20
   140019d8e:	pop    rbp
   140019d8f:	ret    
   140019d90:	rex push rbx
   140019d92:	sub    rsp,0x20
   140019d96:	cmp    dx,0x1
   140019d9a:	mov    rbx,rcx
   140019d9d:	je     0x140019da5
   140019d9f:	cmp    dx,0x2
   140019da3:	jne    0x140019db3
   140019da5:	xor    edx,edx
   140019da7:	mov    rcx,r8
   140019daa:	call   0x140019c78
   140019daf:	test   eax,eax
   140019db1:	jne    0x140019dbb
   140019db3:	mov    rcx,rbx
   140019db6:	call   0x140018d54
   140019dbb:	add    rsp,0x20
   140019dbf:	pop    rbx
   140019dc0:	ret    
   140019dc1:	int3   
   140019dc2:	int3   
   140019dc3:	int3   
   140019dc4:	rex push rbx
   140019dc6:	sub    rsp,0x20
   140019dca:	mov    rbx,rcx
   140019dcd:	mov    rcx,QWORD PTR [r8+0x8]
   140019dd1:	lea    rdx,[rsp+0x40]
   140019dd6:	call   0x140019c78
   140019ddb:	test   eax,eax
   140019ddd:	je     0x140019de6
   140019ddf:	movsxd rax,DWORD PTR [rsp+0x40]
   140019de4:	jmp    0x140019df0
   140019de6:	mov    rcx,rbx
   140019de9:	call   0x140018d54
   140019dee:	cdqe   
   140019df0:	add    rsp,0x20
   140019df4:	pop    rbx
   140019df5:	ret    
   140019df6:	int3   
   140019df7:	int3   
   140019df8:	mov    QWORD PTR [rsp+0x8],rbx
   140019dfd:	push   rdi
   140019dfe:	sub    rsp,0x20
   140019e02:	mov    rdi,rdx
   140019e05:	mov    rbx,rcx
   140019e08:	call   0x140018ee0
   140019e0d:	test   eax,eax
   140019e0f:	je     0x140019e50
   140019e11:	mov    rax,QWORD PTR [rbx]
   140019e14:	mov    rcx,rbx
   140019e17:	call   QWORD PTR [rax+0xa0]
   140019e1d:	mov    r11,QWORD PTR [rbx]
   140019e20:	mov    rcx,rbx
   140019e23:	call   QWORD PTR [r11+0x1e0]
   140019e2a:	lea    r8,[rip+0xfffffffffffffaaf]        # 0x1400198e0
   140019e31:	mov    edx,0xfffffffc
   140019e36:	mov    rcx,rdi
   140019e39:	mov    rbx,rax
   140019e3c:	call   QWORD PTR [rip+0x29936]        # 0x140043778
   140019e42:	cmp    QWORD PTR [rbx],0x0
   140019e46:	jne    0x140019e4b
   140019e48:	mov    QWORD PTR [rbx],rax
   140019e4b:	mov    eax,0x1
   140019e50:	mov    rbx,QWORD PTR [rsp+0x30]
   140019e55:	add    rsp,0x20
   140019e59:	pop    rdi
   140019e5a:	ret    
   140019e5b:	int3   
   140019e5c:	sub    rsp,0x28
   140019e60:	cmp    QWORD PTR [rcx+0x10],0x0
   140019e65:	jne    0x140019e6e
   140019e67:	mov    eax,0x80010108
   140019e6c:	jmp    0x140019e84
   140019e6e:	test   rdx,rdx
   140019e71:	jne    0x140019e7a
   140019e73:	mov    eax,0x80004003
   140019e78:	jmp    0x140019e84
   140019e7a:	mov    rcx,QWORD PTR [rcx+0x10]
   140019e7e:	mov    rax,QWORD PTR [rcx]
   140019e81:	call   QWORD PTR [rax+0x38]
   140019e84:	add    rsp,0x28
   140019e88:	ret    
   140019e89:	int3   
   140019e8a:	int3   
   140019e8b:	int3   
   140019e8c:	sub    rsp,0x28
   140019e90:	cmp    QWORD PTR [rcx+0x10],0x0
   140019e95:	jne    0x140019e9e
   140019e97:	mov    eax,0x80010108
   140019e9c:	jmp    0x140019eb4
   140019e9e:	test   rdx,rdx
   140019ea1:	jne    0x140019eaa
   140019ea3:	mov    eax,0x80004003
   140019ea8:	jmp    0x140019eb4
   140019eaa:	mov    rcx,QWORD PTR [rcx+0x10]
   140019eae:	mov    rax,QWORD PTR [rcx]
   140019eb1:	call   QWORD PTR [rax+0x40]
   140019eb4:	add    rsp,0x28
   140019eb8:	ret    
   140019eb9:	int3   
   140019eba:	int3   
   140019ebb:	int3   
   140019ebc:	sub    rsp,0x48
   140019ec0:	cmp    QWORD PTR [rcx+0x10],0x0
   140019ec5:	jne    0x140019ece
   140019ec7:	mov    eax,0x80010108
   140019ecc:	jmp    0x140019f04
   140019ece:	test   r8,r8
   140019ed1:	jne    0x140019eda
   140019ed3:	mov    eax,0x80004003
   140019ed8:	jmp    0x140019f04
   140019eda:	mov    rax,QWORD PTR [rdx]
   140019edd:	mov    rcx,QWORD PTR [rcx+0x10]
   140019ee1:	lea    r9,[rsp+0x20]
   140019ee6:	mov    QWORD PTR [r9],rax
   140019ee9:	mov    rax,QWORD PTR [rdx+0x8]
   140019eed:	mov    QWORD PTR [r9+0x8],rax
   140019ef1:	mov    rax,QWORD PTR [rdx+0x10]
   140019ef5:	lea    rdx,[rsp+0x20]
   140019efa:	mov    QWORD PTR [r9+0x10],rax
   140019efe:	mov    rax,QWORD PTR [rcx]
   140019f01:	call   QWORD PTR [rax+0x48]
   140019f04:	add    rsp,0x48
   140019f08:	ret    
   140019f09:	int3   
   140019f0a:	int3   
   140019f0b:	int3   
   140019f0c:	sub    rsp,0x48
   140019f10:	cmp    QWORD PTR [rcx+0x10],0x0
   140019f15:	jne    0x140019f1e
   140019f17:	mov    eax,0x80010108
   140019f1c:	jmp    0x140019f54
   140019f1e:	test   r8,r8
   140019f21:	jne    0x140019f2a
   140019f23:	mov    eax,0x80004003
   140019f28:	jmp    0x140019f54
   140019f2a:	mov    rax,QWORD PTR [rdx]
   140019f2d:	mov    rcx,QWORD PTR [rcx+0x10]
   140019f31:	lea    r9,[rsp+0x20]
   140019f36:	mov    QWORD PTR [r9],rax
   140019f39:	mov    rax,QWORD PTR [rdx+0x8]
   140019f3d:	mov    QWORD PTR [r9+0x8],rax
   140019f41:	mov    rax,QWORD PTR [rdx+0x10]
   140019f45:	lea    rdx,[rsp+0x20]
   140019f4a:	mov    QWORD PTR [r9+0x10],rax
   140019f4e:	mov    rax,QWORD PTR [rcx]
   140019f51:	call   QWORD PTR [rax+0x50]
   140019f54:	add    rsp,0x48
   140019f58:	ret    
   140019f59:	int3   
   140019f5a:	int3   
   140019f5b:	int3   
   140019f5c:	sub    rsp,0x48
   140019f60:	cmp    QWORD PTR [rcx+0x10],0x0
   140019f65:	jne    0x140019f6e
   140019f67:	mov    eax,0x80010108
   140019f6c:	jmp    0x140019fa4
   140019f6e:	test   r8,r8
   140019f71:	jne    0x140019f7a
   140019f73:	mov    eax,0x80004003
   140019f78:	jmp    0x140019fa4
   140019f7a:	mov    rax,QWORD PTR [rdx]
   140019f7d:	mov    rcx,QWORD PTR [rcx+0x10]
   140019f81:	lea    r9,[rsp+0x20]
   140019f86:	mov    QWORD PTR [r9],rax
   140019f89:	mov    rax,QWORD PTR [rdx+0x8]
   140019f8d:	mov    QWORD PTR [r9+0x8],rax
   140019f91:	mov    rax,QWORD PTR [rdx+0x10]
   140019f95:	lea    rdx,[rsp+0x20]
   140019f9a:	mov    QWORD PTR [r9+0x10],rax
   140019f9e:	mov    rax,QWORD PTR [rcx]
   140019fa1:	call   QWORD PTR [rax+0x58]
   140019fa4:	add    rsp,0x48
   140019fa8:	ret    
   140019fa9:	int3   
   140019faa:	int3   
   140019fab:	int3   
   140019fac:	sub    rsp,0x48
   140019fb0:	cmp    QWORD PTR [rcx+0x10],0x0
   140019fb5:	jne    0x140019fbe
   140019fb7:	mov    eax,0x80010108
   140019fbc:	jmp    0x140019ff4
   140019fbe:	test   r8,r8
   140019fc1:	jne    0x140019fca
   140019fc3:	mov    eax,0x80004003
   140019fc8:	jmp    0x140019ff4
   140019fca:	mov    rax,QWORD PTR [rdx]
   140019fcd:	mov    rcx,QWORD PTR [rcx+0x10]
   140019fd1:	lea    r9,[rsp+0x20]
   140019fd6:	mov    QWORD PTR [r9],rax
   140019fd9:	mov    rax,QWORD PTR [rdx+0x8]
   140019fdd:	mov    QWORD PTR [r9+0x8],rax
   140019fe1:	mov    rax,QWORD PTR [rdx+0x10]
   140019fe5:	lea    rdx,[rsp+0x20]
   140019fea:	mov    QWORD PTR [r9+0x10],rax
   140019fee:	mov    rax,QWORD PTR [rcx]
   140019ff1:	call   QWORD PTR [rax+0x60]
   140019ff4:	add    rsp,0x48
   140019ff8:	ret    
   140019ff9:	int3   
   140019ffa:	int3   
   140019ffb:	int3   
   140019ffc:	sub    rsp,0x48
   14001a000:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a005:	jne    0x14001a00e
   14001a007:	mov    eax,0x80010108
   14001a00c:	jmp    0x14001a044
   14001a00e:	test   r8,r8
   14001a011:	jne    0x14001a01a
   14001a013:	mov    eax,0x80004003
   14001a018:	jmp    0x14001a044
   14001a01a:	mov    rax,QWORD PTR [rdx]
   14001a01d:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a021:	lea    r9,[rsp+0x20]
   14001a026:	mov    QWORD PTR [r9],rax
   14001a029:	mov    rax,QWORD PTR [rdx+0x8]
   14001a02d:	mov    QWORD PTR [r9+0x8],rax
   14001a031:	mov    rax,QWORD PTR [rdx+0x10]
   14001a035:	lea    rdx,[rsp+0x20]
   14001a03a:	mov    QWORD PTR [r9+0x10],rax
   14001a03e:	mov    rax,QWORD PTR [rcx]
   14001a041:	call   QWORD PTR [rax+0x68]
   14001a044:	add    rsp,0x48
   14001a048:	ret    
   14001a049:	int3   
   14001a04a:	int3   
   14001a04b:	int3   
   14001a04c:	sub    rsp,0x48
   14001a050:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a055:	jne    0x14001a05e
   14001a057:	mov    eax,0x80010108
   14001a05c:	jmp    0x14001a094
   14001a05e:	test   r8,r8
   14001a061:	jne    0x14001a06a
   14001a063:	mov    eax,0x80004003
   14001a068:	jmp    0x14001a094
   14001a06a:	mov    rax,QWORD PTR [rdx]
   14001a06d:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a071:	lea    r9,[rsp+0x20]
   14001a076:	mov    QWORD PTR [r9],rax
   14001a079:	mov    rax,QWORD PTR [rdx+0x8]
   14001a07d:	mov    QWORD PTR [r9+0x8],rax
   14001a081:	mov    rax,QWORD PTR [rdx+0x10]
   14001a085:	lea    rdx,[rsp+0x20]
   14001a08a:	mov    QWORD PTR [r9+0x10],rax
   14001a08e:	mov    rax,QWORD PTR [rcx]
   14001a091:	call   QWORD PTR [rax+0x70]
   14001a094:	add    rsp,0x48
   14001a098:	ret    
   14001a099:	int3   
   14001a09a:	int3   
   14001a09b:	int3   
   14001a09c:	sub    rsp,0x48
   14001a0a0:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a0a5:	jne    0x14001a0ae
   14001a0a7:	mov    eax,0x80010108
   14001a0ac:	jmp    0x14001a0e4
   14001a0ae:	test   r8,r8
   14001a0b1:	jne    0x14001a0ba
   14001a0b3:	mov    eax,0x80004003
   14001a0b8:	jmp    0x14001a0e4
   14001a0ba:	mov    rax,QWORD PTR [rdx]
   14001a0bd:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a0c1:	lea    r9,[rsp+0x20]
   14001a0c6:	mov    QWORD PTR [r9],rax
   14001a0c9:	mov    rax,QWORD PTR [rdx+0x8]
   14001a0cd:	mov    QWORD PTR [r9+0x8],rax
   14001a0d1:	mov    rax,QWORD PTR [rdx+0x10]
   14001a0d5:	lea    rdx,[rsp+0x20]
   14001a0da:	mov    QWORD PTR [r9+0x10],rax
   14001a0de:	mov    rax,QWORD PTR [rcx]
   14001a0e1:	call   QWORD PTR [rax+0x78]
   14001a0e4:	add    rsp,0x48
   14001a0e8:	ret    
   14001a0e9:	int3   
   14001a0ea:	int3   
   14001a0eb:	int3   
   14001a0ec:	sub    rsp,0x48
   14001a0f0:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a0f5:	jne    0x14001a0fe
   14001a0f7:	mov    eax,0x80010108
   14001a0fc:	jmp    0x14001a13c
   14001a0fe:	test   rdx,rdx
   14001a101:	jne    0x14001a10a
   14001a103:	mov    eax,0x80004003
   14001a108:	jmp    0x14001a13c
   14001a10a:	test   r9,r9
   14001a10d:	je     0x14001a103
   14001a10f:	mov    rax,QWORD PTR [r8]
   14001a112:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a116:	lea    r10,[rsp+0x20]
   14001a11b:	mov    QWORD PTR [r10],rax
   14001a11e:	mov    rax,QWORD PTR [r8+0x8]
   14001a122:	mov    QWORD PTR [r10+0x8],rax
   14001a126:	mov    rax,QWORD PTR [r8+0x10]
   14001a12a:	lea    r8,[rsp+0x20]
   14001a12f:	mov    QWORD PTR [r10+0x10],rax
   14001a133:	mov    rax,QWORD PTR [rcx]
   14001a136:	call   QWORD PTR [rax+0x80]
   14001a13c:	add    rsp,0x48
   14001a140:	ret    
   14001a141:	int3   
   14001a142:	int3   
   14001a143:	int3   
   14001a144:	sub    rsp,0x48
   14001a148:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a14d:	jne    0x14001a156
   14001a14f:	mov    eax,0x80010108
   14001a154:	jmp    0x14001a18f
   14001a156:	test   r8,r8
   14001a159:	jne    0x14001a162
   14001a15b:	mov    eax,0x80004003
   14001a160:	jmp    0x14001a18f
   14001a162:	mov    rax,QWORD PTR [rdx]
   14001a165:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a169:	lea    r9,[rsp+0x20]
   14001a16e:	mov    QWORD PTR [r9],rax
   14001a171:	mov    rax,QWORD PTR [rdx+0x8]
   14001a175:	mov    QWORD PTR [r9+0x8],rax
   14001a179:	mov    rax,QWORD PTR [rdx+0x10]
   14001a17d:	lea    rdx,[rsp+0x20]
   14001a182:	mov    QWORD PTR [r9+0x10],rax
   14001a186:	mov    rax,QWORD PTR [rcx]
   14001a189:	call   QWORD PTR [rax+0x88]
   14001a18f:	add    rsp,0x48
   14001a193:	ret    
   14001a194:	sub    rsp,0x28
   14001a198:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a19d:	jne    0x14001a1a6
   14001a19f:	mov    eax,0x80010108
   14001a1a4:	jmp    0x14001a1bf
   14001a1a6:	test   rdx,rdx
   14001a1a9:	jne    0x14001a1b2
   14001a1ab:	mov    eax,0x80004003
   14001a1b0:	jmp    0x14001a1bf
   14001a1b2:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a1b6:	mov    rax,QWORD PTR [rcx]
   14001a1b9:	call   QWORD PTR [rax+0x90]
   14001a1bf:	add    rsp,0x28
   14001a1c3:	ret    
   14001a1c4:	sub    rsp,0x28
   14001a1c8:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a1cd:	jne    0x14001a1d6
   14001a1cf:	mov    eax,0x80010108
   14001a1d4:	jmp    0x14001a1ef
   14001a1d6:	test   rdx,rdx
   14001a1d9:	jne    0x14001a1e2
   14001a1db:	mov    eax,0x80004003
   14001a1e0:	jmp    0x14001a1ef
   14001a1e2:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a1e6:	mov    rax,QWORD PTR [rcx]
   14001a1e9:	call   QWORD PTR [rax+0x98]
   14001a1ef:	add    rsp,0x28
   14001a1f3:	ret    
   14001a1f4:	sub    rsp,0x48
   14001a1f8:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a1fd:	jne    0x14001a206
   14001a1ff:	mov    eax,0x80010108
   14001a204:	jmp    0x14001a23f
   14001a206:	test   r8,r8
   14001a209:	jne    0x14001a212
   14001a20b:	mov    eax,0x80004003
   14001a210:	jmp    0x14001a23f
   14001a212:	mov    rax,QWORD PTR [rdx]
   14001a215:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a219:	lea    r9,[rsp+0x20]
   14001a21e:	mov    QWORD PTR [r9],rax
   14001a221:	mov    rax,QWORD PTR [rdx+0x8]
   14001a225:	mov    QWORD PTR [r9+0x8],rax
   14001a229:	mov    rax,QWORD PTR [rdx+0x10]
   14001a22d:	lea    rdx,[rsp+0x20]
   14001a232:	mov    QWORD PTR [r9+0x10],rax
   14001a236:	mov    rax,QWORD PTR [rcx]
   14001a239:	call   QWORD PTR [rax+0xa0]
   14001a23f:	add    rsp,0x48
   14001a243:	ret    
   14001a244:	sub    rsp,0x48
   14001a248:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a24d:	jne    0x14001a256
   14001a24f:	mov    eax,0x80010108
   14001a254:	jmp    0x14001a283
   14001a256:	mov    rax,QWORD PTR [r8]
   14001a259:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a25d:	lea    r9,[rsp+0x20]
   14001a262:	mov    QWORD PTR [r9],rax
   14001a265:	mov    rax,QWORD PTR [r8+0x8]
   14001a269:	mov    QWORD PTR [r9+0x8],rax
   14001a26d:	mov    rax,QWORD PTR [r8+0x10]
   14001a271:	lea    r8,[rsp+0x20]
   14001a276:	mov    QWORD PTR [r9+0x10],rax
   14001a27a:	mov    rax,QWORD PTR [rcx]
   14001a27d:	call   QWORD PTR [rax+0xa8]
   14001a283:	add    rsp,0x48
   14001a287:	ret    
   14001a288:	rex push rbx
   14001a28a:	sub    rsp,0x50
   14001a28e:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a293:	mov    r10,rdx
   14001a296:	mov    r11,rcx
   14001a299:	jne    0x14001a2a2
   14001a29b:	mov    eax,0x80010108
   14001a2a0:	jmp    0x14001a307
   14001a2a2:	test   rdx,rdx
   14001a2a5:	jne    0x14001a2ae
   14001a2a7:	mov    eax,0x80004003
   14001a2ac:	jmp    0x14001a307
   14001a2ae:	test   r8,r8
   14001a2b1:	je     0x14001a2a7
   14001a2b3:	test   r9,r9
   14001a2b6:	je     0x14001a2a7
   14001a2b8:	mov    rdx,QWORD PTR [rsp+0x80]
   14001a2c0:	test   rdx,rdx
   14001a2c3:	je     0x14001a2a7
   14001a2c5:	mov    rcx,QWORD PTR [rsp+0x88]
   14001a2cd:	lea    rbx,[rsp+0x30]
   14001a2d2:	mov    rax,QWORD PTR [rcx]
   14001a2d5:	mov    QWORD PTR [rbx],rax
   14001a2d8:	mov    rax,QWORD PTR [rcx+0x8]
   14001a2dc:	mov    QWORD PTR [rbx+0x8],rax
   14001a2e0:	mov    rax,QWORD PTR [rcx+0x10]
   14001a2e4:	mov    rcx,QWORD PTR [r11+0x10]
   14001a2e8:	lea    r11,[rsp+0x30]
   14001a2ed:	mov    QWORD PTR [rbx+0x10],rax
   14001a2f1:	mov    rax,QWORD PTR [rcx]
   14001a2f4:	mov    QWORD PTR [rsp+0x28],r11
   14001a2f9:	mov    QWORD PTR [rsp+0x20],rdx
   14001a2fe:	mov    rdx,r10
   14001a301:	call   QWORD PTR [rax+0xb0]
   14001a307:	add    rsp,0x50
   14001a30b:	pop    rbx
   14001a30c:	ret    
   14001a30d:	int3   
   14001a30e:	int3   
   14001a30f:	int3   
   14001a310:	sub    rsp,0x48
   14001a314:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a319:	jne    0x14001a322
   14001a31b:	mov    eax,0x80010108
   14001a320:	jmp    0x14001a35b
   14001a322:	test   r9,r9
   14001a325:	jne    0x14001a32e
   14001a327:	mov    eax,0x80004003
   14001a32c:	jmp    0x14001a35b
   14001a32e:	mov    rax,QWORD PTR [r8]
   14001a331:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a335:	lea    r10,[rsp+0x20]
   14001a33a:	mov    QWORD PTR [r10],rax
   14001a33d:	mov    rax,QWORD PTR [r8+0x8]
   14001a341:	mov    QWORD PTR [r10+0x8],rax
   14001a345:	mov    rax,QWORD PTR [r8+0x10]
   14001a349:	lea    r8,[rsp+0x20]
   14001a34e:	mov    QWORD PTR [r10+0x10],rax
   14001a352:	mov    rax,QWORD PTR [rcx]
   14001a355:	call   QWORD PTR [rax+0xb8]
   14001a35b:	add    rsp,0x48
   14001a35f:	ret    
   14001a360:	sub    rsp,0x28
   14001a364:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a369:	jne    0x14001a372
   14001a36b:	mov    eax,0x80010108
   14001a370:	jmp    0x14001a38b
   14001a372:	test   r9,r9
   14001a375:	jne    0x14001a37e
   14001a377:	mov    eax,0x80004003
   14001a37c:	jmp    0x14001a38b
   14001a37e:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a382:	mov    rax,QWORD PTR [rcx]
   14001a385:	call   QWORD PTR [rax+0xc0]
   14001a38b:	add    rsp,0x28
   14001a38f:	ret    
   14001a390:	sub    rsp,0x48
   14001a394:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a399:	jne    0x14001a3a2
   14001a39b:	mov    eax,0x80010108
   14001a3a0:	jmp    0x14001a3cf
   14001a3a2:	mov    rax,QWORD PTR [rdx]
   14001a3a5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a3a9:	lea    r8,[rsp+0x20]
   14001a3ae:	mov    QWORD PTR [r8],rax
   14001a3b1:	mov    rax,QWORD PTR [rdx+0x8]
   14001a3b5:	mov    QWORD PTR [r8+0x8],rax
   14001a3b9:	mov    rax,QWORD PTR [rdx+0x10]
   14001a3bd:	lea    rdx,[rsp+0x20]
   14001a3c2:	mov    QWORD PTR [r8+0x10],rax
   14001a3c6:	mov    rax,QWORD PTR [rcx]
   14001a3c9:	call   QWORD PTR [rax+0xc8]
   14001a3cf:	add    rsp,0x48
   14001a3d3:	ret    
   14001a3d4:	mov    rax,QWORD PTR [rcx+0x10]
   14001a3d8:	neg    rax
   14001a3db:	sbb    eax,eax
   14001a3dd:	and    eax,0xffff3ef9
   14001a3e2:	add    eax,0x80010108
   14001a3e7:	ret    
   14001a3e8:	mov    QWORD PTR [rcx+0x8],rdx
   14001a3ec:	mov    QWORD PTR [rcx+0x10],r8
   14001a3f0:	xor    eax,eax
   14001a3f2:	ret    
   14001a3f3:	int3   
   14001a3f4:	sub    rsp,0x58
   14001a3f8:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a3fd:	jne    0x14001a406
   14001a3ff:	mov    eax,0x80010108
   14001a404:	jmp    0x14001a452
   14001a406:	mov    rax,QWORD PTR [rsp+0xa0]
   14001a40e:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a412:	mov    r10,QWORD PTR [rcx]
   14001a415:	mov    QWORD PTR [rsp+0x40],rax
   14001a41a:	mov    rax,QWORD PTR [rsp+0x98]
   14001a422:	mov    QWORD PTR [rsp+0x38],rax
   14001a427:	mov    rax,QWORD PTR [rsp+0x90]
   14001a42f:	mov    QWORD PTR [rsp+0x30],rax
   14001a434:	mov    rax,QWORD PTR [rsp+0x88]
   14001a43c:	mov    QWORD PTR [rsp+0x28],rax
   14001a441:	movzx  eax,WORD PTR [rsp+0x80]
   14001a449:	mov    WORD PTR [rsp+0x20],ax
   14001a44e:	call   QWORD PTR [r10+0x30]
   14001a452:	add    rsp,0x58
   14001a456:	ret    
   14001a457:	int3   
   14001a458:	sub    rsp,0x38
   14001a45c:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a461:	jne    0x14001a46a
   14001a463:	mov    eax,0x80010108
   14001a468:	jmp    0x14001a487
   14001a46a:	mov    rax,QWORD PTR [rsp+0x68]
   14001a46f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a473:	mov    r10,QWORD PTR [rcx]
   14001a476:	mov    QWORD PTR [rsp+0x28],rax
   14001a47b:	mov    eax,DWORD PTR [rsp+0x60]
   14001a47f:	mov    DWORD PTR [rsp+0x20],eax
   14001a483:	call   QWORD PTR [r10+0x28]
   14001a487:	add    rsp,0x38
   14001a48b:	ret    
   14001a48c:	sub    rsp,0x28
   14001a490:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a495:	jne    0x14001a49e
   14001a497:	mov    eax,0x80010108
   14001a49c:	jmp    0x14001a4a8
   14001a49e:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a4a2:	mov    rax,QWORD PTR [rcx]
   14001a4a5:	call   QWORD PTR [rax+0x18]
   14001a4a8:	add    rsp,0x28
   14001a4ac:	ret    
   14001a4ad:	int3   
   14001a4ae:	int3   
   14001a4af:	int3   
   14001a4b0:	sub    rsp,0x28
   14001a4b4:	cmp    QWORD PTR [rcx+0x10],0x0
   14001a4b9:	jne    0x14001a4c2
   14001a4bb:	mov    eax,0x80010108
   14001a4c0:	jmp    0x14001a4cc
   14001a4c2:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a4c6:	mov    rax,QWORD PTR [rcx]
   14001a4c9:	call   QWORD PTR [rax+0x20]
   14001a4cc:	add    rsp,0x28
   14001a4d0:	ret    
   14001a4d1:	int3   
   14001a4d2:	int3   
   14001a4d3:	int3   
   14001a4d4:	mov    QWORD PTR [rsp+0x8],rbx
   14001a4d9:	mov    QWORD PTR [rsp+0x10],rbp
   14001a4de:	mov    QWORD PTR [rsp+0x18],rsi
   14001a4e3:	push   rdi
   14001a4e4:	sub    rsp,0x20
   14001a4e8:	mov    rax,QWORD PTR [rcx]
   14001a4eb:	mov    r8d,0x1
   14001a4f1:	movzx  ebp,dx
   14001a4f4:	mov    esi,DWORD PTR [rax-0x10]
   14001a4f7:	sub    r8d,DWORD PTR [rax-0x8]
   14001a4fb:	mov    eax,DWORD PTR [rax-0xc]
   14001a4fe:	lea    ebx,[rsi+0x1]
   14001a501:	mov    rdi,rcx
   14001a504:	sub    eax,ebx
   14001a506:	or     r8d,eax
   14001a509:	jge    0x14001a512
   14001a50b:	mov    edx,ebx
   14001a50d:	call   0x140004370
   14001a512:	test   ebx,ebx
   14001a514:	mov    rax,QWORD PTR [rdi]
   14001a517:	mov    WORD PTR [rax+rsi*2],bp
   14001a51b:	js     0x14001a548
   14001a51d:	mov    rax,QWORD PTR [rdi]
   14001a520:	cmp    ebx,DWORD PTR [rax-0xc]
   14001a523:	jg     0x14001a548
   14001a525:	mov    rbp,QWORD PTR [rsp+0x38]
   14001a52a:	mov    rsi,QWORD PTR [rsp+0x40]
   14001a52f:	mov    DWORD PTR [rax-0x10],ebx
   14001a532:	mov    rax,QWORD PTR [rdi]
   14001a535:	movsxd rcx,ebx
   14001a538:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a53d:	and    WORD PTR [rax+rcx*2],0x0
   14001a542:	add    rsp,0x20
   14001a546:	pop    rdi
   14001a547:	ret    
   14001a548:	mov    ecx,0x80070057
   14001a54d:	call   0x140003dc0
   14001a552:	int3   
   14001a553:	int3   
   14001a554:	mov    QWORD PTR [rsp+0x8],rbx
   14001a559:	push   rdi
   14001a55a:	sub    rsp,0x20
   14001a55e:	mov    ebx,edx
   14001a560:	mov    rdi,rcx
   14001a563:	call   0x140019964
   14001a568:	test   bl,0x1
   14001a56b:	je     0x14001a575
   14001a56d:	mov    rcx,rdi
   14001a570:	call   0x14001490c
   14001a575:	mov    rax,rdi
   14001a578:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a57d:	add    rsp,0x20
   14001a581:	pop    rdi
   14001a582:	ret    
   14001a583:	int3   
   14001a584:	mov    QWORD PTR [rsp+0x8],rbx
   14001a589:	mov    QWORD PTR [rsp+0x10],rsi
   14001a58e:	push   rdi
   14001a58f:	sub    rsp,0x20
   14001a593:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001a59b:	mov    rbx,rdx
   14001a59e:	mov    rsi,rcx
   14001a5a1:	jne    0x14001a63c
   14001a5a7:	mov    rcx,QWORD PTR [rcx+0x40]
   14001a5ab:	call   QWORD PTR [rip+0x29187]        # 0x140043738
   14001a5b1:	mov    r8,QWORD PTR [rbx]
   14001a5b4:	mov    edx,0x1
   14001a5b9:	mov    ecx,DWORD PTR [r8-0xc]
   14001a5bd:	sub    edx,DWORD PTR [r8-0x8]
   14001a5c1:	movsxd rdi,eax
   14001a5c4:	sub    ecx,edi
   14001a5c6:	or     edx,ecx
   14001a5c8:	jge    0x14001a5d4
   14001a5ca:	mov    edx,edi
   14001a5cc:	mov    rcx,rbx
   14001a5cf:	call   0x140004370
   14001a5d4:	test   edi,edi
   14001a5d6:	mov    rdx,QWORD PTR [rbx]
   14001a5d9:	js     0x14001a631
   14001a5db:	cmp    edi,DWORD PTR [rdx-0xc]
   14001a5de:	jg     0x14001a631
   14001a5e0:	mov    DWORD PTR [rdx-0x10],edi
   14001a5e3:	mov    rax,QWORD PTR [rbx]
   14001a5e6:	lea    r8d,[rdi+0x1]
   14001a5ea:	and    WORD PTR [rax+rdi*2],0x0
   14001a5ef:	mov    rcx,QWORD PTR [rsi+0x40]
   14001a5f3:	call   QWORD PTR [rip+0x29147]        # 0x140043740
   14001a5f9:	mov    rcx,QWORD PTR [rbx]
   14001a5fc:	test   rcx,rcx
   14001a5ff:	jne    0x14001a605
   14001a601:	xor    eax,eax
   14001a603:	jmp    0x14001a60e
   14001a605:	call   0x14002ad10
   14001a60a:	test   eax,eax
   14001a60c:	js     0x14001a626
   14001a60e:	mov    rcx,QWORD PTR [rbx]
   14001a611:	cmp    eax,DWORD PTR [rcx-0xc]
   14001a614:	jg     0x14001a626
   14001a616:	mov    DWORD PTR [rcx-0x10],eax
   14001a619:	movsxd rcx,eax
   14001a61c:	mov    rax,QWORD PTR [rbx]
   14001a61f:	and    WORD PTR [rax+rcx*2],0x0
   14001a624:	jmp    0x14001a64c
   14001a626:	mov    ecx,0x80070057
   14001a62b:	call   0x140003dc0
   14001a630:	int3   
   14001a631:	mov    ecx,0x80070057
   14001a636:	call   0x140003dc0
   14001a63b:	int3   
   14001a63c:	mov    rcx,QWORD PTR [rcx+0xa0]
   14001a643:	mov    rax,QWORD PTR [rcx]
   14001a646:	call   QWORD PTR [rax+0x118]
   14001a64c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a651:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a656:	add    rsp,0x20
   14001a65a:	pop    rdi
   14001a65b:	ret    
   14001a65c:	mov    QWORD PTR [rsp+0x8],rbx
   14001a661:	push   rdi
   14001a662:	sub    rsp,0x20
   14001a666:	cmp    DWORD PTR [r8],0x1
   14001a66a:	mov    rbx,r8
   14001a66d:	mov    rdi,rcx
   14001a670:	jne    0x14001a68f
   14001a672:	mov    rcx,QWORD PTR [r8+0x18]
   14001a676:	call   0x1400241a8
   14001a67b:	test   rax,rax
   14001a67e:	je     0x14001a68f
   14001a680:	mov    r9,QWORD PTR [rax]
   14001a683:	mov    rdx,rbx
   14001a686:	mov    rcx,rax
   14001a689:	call   QWORD PTR [r9+0x18]
   14001a68d:	jmp    0x14001a6a6
   14001a68f:	mov    rcx,QWORD PTR [rbx+0x18]
   14001a693:	xor    edx,edx
   14001a695:	call   0x140019c78
   14001a69a:	test   eax,eax
   14001a69c:	jne    0x14001a6a6
   14001a69e:	mov    rcx,rdi
   14001a6a1:	call   0x140018d54
   14001a6a6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a6ab:	add    rsp,0x20
   14001a6af:	pop    rdi
   14001a6b0:	ret    
   14001a6b1:	int3   
   14001a6b2:	int3   
   14001a6b3:	int3   
   14001a6b4:	rex push rbx
   14001a6b6:	sub    rsp,0x20
   14001a6ba:	mov    rbx,rcx
   14001a6bd:	mov    rcx,QWORD PTR [r8+0x8]
   14001a6c1:	lea    rdx,[rsp+0x40]
   14001a6c6:	call   0x140019c78
   14001a6cb:	test   eax,eax
   14001a6cd:	je     0x14001a6d5
   14001a6cf:	mov    eax,DWORD PTR [rsp+0x40]
   14001a6d3:	jmp    0x14001a6dd
   14001a6d5:	mov    rcx,rbx
   14001a6d8:	call   0x140018d54
   14001a6dd:	add    rsp,0x20
   14001a6e1:	pop    rbx
   14001a6e2:	ret    
   14001a6e3:	int3   
   14001a6e4:	rex push rbx
   14001a6e6:	sub    rsp,0x20
   14001a6ea:	mov    rbx,rcx
   14001a6ed:	mov    rcx,QWORD PTR [r8+0x10]
   14001a6f1:	xor    edx,edx
   14001a6f3:	call   0x140019c78
   14001a6f8:	test   eax,eax
   14001a6fa:	jne    0x14001a704
   14001a6fc:	mov    rcx,rbx
   14001a6ff:	call   0x140018d54
   14001a704:	add    rsp,0x20
   14001a708:	pop    rbx
   14001a709:	ret    
   14001a70a:	int3   
   14001a70b:	int3   
   14001a70c:	mov    rax,rsp
   14001a70f:	mov    QWORD PTR [rax+0x8],rbx
   14001a713:	mov    QWORD PTR [rax+0x10],rbp
   14001a717:	mov    QWORD PTR [rax+0x18],rsi
   14001a71b:	mov    QWORD PTR [rax+0x20],rdi
   14001a71f:	push   r12
   14001a721:	sub    rsp,0x20
   14001a725:	mov    r12,rcx
   14001a728:	mov    ecx,0xc
   14001a72d:	mov    rdi,r9
   14001a730:	mov    esi,r8d
   14001a733:	mov    rbp,rdx
   14001a736:	call   0x14002431c
   14001a73b:	lea    rdx,[rip+0xffffffffffffef32]        # 0x140019674
   14001a742:	lea    rcx,[rip+0x45ea7]        # 0x1400605f0
   14001a749:	call   0x140024a14
   14001a74e:	test   rax,rax
   14001a751:	mov    rbx,rax
   14001a754:	jne    0x14001a75c
   14001a756:	call   0x1400218c0
   14001a75b:	int3   
   14001a75c:	cmp    QWORD PTR [rax+0x10],0x0
   14001a761:	jne    0x14001a7a6
   14001a763:	lea    rcx,[rip+0x2a4a6]        # 0x140044c10
   14001a76a:	call   0x140016ce0
   14001a76f:	test   rax,rax
   14001a772:	mov    QWORD PTR [rbx+0x8],rax
   14001a776:	jne    0x14001a77c
   14001a778:	xor    eax,eax
   14001a77a:	jmp    0x14001a7bf
   14001a77c:	lea    rdx,[rip+0x2a47d]        # 0x140044c00
   14001a783:	mov    rcx,rax
   14001a786:	call   QWORD PTR [rip+0x28d24]        # 0x1400434b0
   14001a78c:	test   rax,rax
   14001a78f:	mov    QWORD PTR [rbx+0x10],rax
   14001a793:	jne    0x14001a7a6
   14001a795:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a799:	call   QWORD PTR [rip+0x28ce1]        # 0x140043480
   14001a79f:	and    QWORD PTR [rbx+0x8],0x0
   14001a7a4:	jmp    0x14001a778
   14001a7a6:	mov    ecx,0xc
   14001a7ab:	call   0x1400243b0
   14001a7b0:	mov    r9,rdi
   14001a7b3:	mov    r8d,esi
   14001a7b6:	mov    rdx,rbp
   14001a7b9:	mov    rcx,r12
   14001a7bc:	call   QWORD PTR [rbx+0x10]
   14001a7bf:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a7c4:	mov    rbp,QWORD PTR [rsp+0x38]
   14001a7c9:	mov    rsi,QWORD PTR [rsp+0x40]
   14001a7ce:	mov    rdi,QWORD PTR [rsp+0x48]
   14001a7d3:	add    rsp,0x20
   14001a7d7:	pop    r12
   14001a7d9:	ret    
   14001a7da:	int3   
   14001a7db:	int3   
   14001a7dc:	mov    QWORD PTR [rsp+0x8],rbx
   14001a7e1:	mov    QWORD PTR [rsp+0x10],rbp
   14001a7e6:	mov    QWORD PTR [rsp+0x18],rsi
   14001a7eb:	push   rdi
   14001a7ec:	sub    rsp,0x80
   14001a7f3:	movzx  ebx,dx
   14001a7f6:	shr    rdx,0x10
   14001a7fa:	test   r8,r8
   14001a7fd:	mov    rbp,r8
   14001a800:	mov    rdi,rcx
   14001a803:	movzx  esi,dx
   14001a806:	jne    0x14001a84d
   14001a808:	test   ebx,ebx
   14001a80a:	jne    0x14001a813
   14001a80c:	xor    eax,eax
   14001a80e:	jmp    0x14001a8a8
   14001a813:	lea    rcx,[rsp+0x30]
   14001a818:	call   0x14001619c
   14001a81d:	mov    rax,QWORD PTR [rdi]
   14001a820:	and    QWORD PTR [rsp+0x20],0x0
   14001a826:	lea    r9,[rsp+0x30]
   14001a82b:	or     r8d,0xffffffff
   14001a82f:	mov    edx,ebx
   14001a831:	mov    rcx,rdi
   14001a834:	mov    DWORD PTR [rsp+0x38],ebx
   14001a838:	call   QWORD PTR [rax+0x18]
   14001a83b:	cmp    DWORD PTR [rsp+0x70],0x0
   14001a840:	jne    0x14001a849
   14001a842:	mov    eax,0x1
   14001a847:	jmp    0x14001a8a8
   14001a849:	xor    esi,esi
   14001a84b:	jmp    0x14001a891
   14001a84d:	lea    rdx,[rip+0xffffffffffffbed4]        # 0x140016728
   14001a854:	lea    rcx,[rip+0x45dcd]        # 0x140060628
   14001a85b:	call   0x14002514c
   14001a860:	test   rax,rax
   14001a863:	mov    r11,rax
   14001a866:	jne    0x14001a86e
   14001a868:	call   0x1400218c0
   14001a86d:	int3   
   14001a86e:	mov    rax,QWORD PTR [rdi+0x40]
   14001a872:	cmp    QWORD PTR [r11+0x198],rax
   14001a879:	je     0x14001a842
   14001a87b:	xor    edx,edx
   14001a87d:	mov    rcx,rbp
   14001a880:	call   0x140019c78
   14001a885:	test   eax,eax
   14001a887:	jne    0x14001a842
   14001a889:	test   ebx,ebx
   14001a88b:	je     0x14001a80c
   14001a891:	mov    rax,QWORD PTR [rdi]
   14001a894:	and    QWORD PTR [rsp+0x20],0x0
   14001a89a:	xor    r9d,r9d
   14001a89d:	mov    r8d,esi
   14001a8a0:	mov    edx,ebx
   14001a8a2:	mov    rcx,rdi
   14001a8a5:	call   QWORD PTR [rax+0x18]
   14001a8a8:	lea    r11,[rsp+0x80]
   14001a8b0:	mov    rbx,QWORD PTR [r11+0x10]
   14001a8b4:	mov    rbp,QWORD PTR [r11+0x18]
   14001a8b8:	mov    rsi,QWORD PTR [r11+0x20]
   14001a8bc:	mov    rsp,r11
   14001a8bf:	pop    rdi
   14001a8c0:	ret    
   14001a8c1:	int3   
   14001a8c2:	int3   
   14001a8c3:	int3   
   14001a8c4:	mov    QWORD PTR [rsp+0x8],rbx
   14001a8c9:	mov    QWORD PTR [rsp+0x10],rbp
   14001a8ce:	mov    QWORD PTR [rsp+0x18],rsi
   14001a8d3:	push   rdi
   14001a8d4:	push   r12
   14001a8d6:	push   r13
   14001a8d8:	sub    rsp,0x40
   14001a8dc:	mov    rsi,QWORD PTR [r8]
   14001a8df:	mov    rbx,rcx
   14001a8e2:	mov    rdi,r9
   14001a8e5:	mov    rcx,rsi
   14001a8e8:	mov    rbp,r8
   14001a8eb:	call   QWORD PTR [rip+0x290c7]        # 0x1400439b8
   14001a8f1:	mov    r13d,DWORD PTR [rbp+0x10]
   14001a8f5:	lea    rdx,[rip+0xffffffffffffbe2c]        # 0x140016728
   14001a8fc:	lea    rcx,[rip+0x45d25]        # 0x140060628
   14001a903:	movzx  r12d,ax
   14001a907:	call   0x14002514c
   14001a90c:	test   rax,rax
   14001a90f:	mov    r11,rax
   14001a912:	jne    0x14001a91a
   14001a914:	call   0x1400218c0
   14001a919:	int3   
   14001a91a:	mov    rax,QWORD PTR [rbx+0x40]
   14001a91e:	cmp    QWORD PTR [r11+0x198],rax
   14001a925:	jne    0x14001a92e
   14001a927:	mov    eax,0x1
   14001a92c:	jmp    0x14001a969
   14001a92e:	mov    rdx,rdi
   14001a931:	mov    rcx,rsi
   14001a934:	call   0x140019c78
   14001a939:	test   eax,eax
   14001a93b:	jne    0x14001a927
   14001a93d:	mov    rax,QWORD PTR [rbx]
   14001a940:	and    QWORD PTR [rsp+0x20],0x0
   14001a946:	movzx  r8d,r13w
   14001a94a:	lea    r9,[rsp+0x30]
   14001a94f:	or     r8d,0x4e0000
   14001a956:	mov    edx,r12d
   14001a959:	mov    rcx,rbx
   14001a95c:	mov    QWORD PTR [rsp+0x30],rdi
   14001a961:	mov    QWORD PTR [rsp+0x38],rbp
   14001a966:	call   QWORD PTR [rax+0x18]
   14001a969:	mov    rbx,QWORD PTR [rsp+0x60]
   14001a96e:	mov    rbp,QWORD PTR [rsp+0x68]
   14001a973:	mov    rsi,QWORD PTR [rsp+0x70]
   14001a978:	add    rsp,0x40
   14001a97c:	pop    r13
   14001a97e:	pop    r12
   14001a980:	pop    rdi
   14001a981:	ret    
   14001a982:	int3   
   14001a983:	int3   
   14001a984:	mov    QWORD PTR [rsp+0x8],rbx
   14001a989:	push   rdi
   14001a98a:	sub    rsp,0x20
   14001a98e:	mov    rdi,rcx
   14001a991:	call   0x140018eb4
   14001a996:	xor    ebx,ebx
   14001a998:	cmp    rax,rbx
   14001a99b:	je     0x14001a9c6
   14001a99d:	mov    rcx,QWORD PTR [rax+0x70]
   14001a9a1:	cmp    rcx,rbx
   14001a9a4:	jne    0x14001a9b3
   14001a9a6:	mov    rcx,QWORD PTR [rax+0x40]
   14001a9aa:	call   QWORD PTR [rip+0x29020]        # 0x1400439d0
   14001a9b0:	mov    rcx,rax
   14001a9b3:	call   0x140018e70
   14001a9b8:	cmp    rax,rbx
   14001a9bb:	je     0x14001a9c1
   14001a9bd:	mov    rbx,QWORD PTR [rax+0x40]
   14001a9c1:	mov    rax,rbx
   14001a9c4:	jmp    0x14001a9f0
   14001a9c6:	mov    edx,0xfffffff0
   14001a9cb:	mov    rcx,rdi
   14001a9ce:	call   QWORD PTR [rip+0x28f4c]        # 0x140043920
   14001a9d4:	mov    rcx,rdi
   14001a9d7:	bt     eax,0x1e
   14001a9db:	jae    0x14001a9e5
   14001a9dd:	call   QWORD PTR [rip+0x28fed]        # 0x1400439d0
   14001a9e3:	jmp    0x14001a9f0
   14001a9e5:	mov    edx,0x4
   14001a9ea:	call   QWORD PTR [rip+0x28fb8]        # 0x1400439a8
   14001a9f0:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a9f5:	add    rsp,0x20
   14001a9f9:	pop    rdi
   14001a9fa:	ret    
   14001a9fb:	int3   
   14001a9fc:	rex push rbx
   14001a9fe:	sub    rsp,0x20
   14001aa02:	test   rcx,rcx
   14001aa05:	je     0x14001aa2f
   14001aa07:	mov    rbx,QWORD PTR [rcx+0x40]
   14001aa0b:	test   rbx,rbx
   14001aa0e:	je     0x14001aa2f
   14001aa10:	mov    rcx,rbx
   14001aa13:	jmp    0x14001aa1b
   14001aa15:	mov    rbx,rax
   14001aa18:	mov    rcx,rax
   14001aa1b:	call   0x14001a984
   14001aa20:	test   rax,rax
   14001aa23:	jne    0x14001aa15
   14001aa25:	mov    rcx,rbx
   14001aa28:	call   0x140018e70
   14001aa2d:	jmp    0x14001aa31
   14001aa2f:	xor    eax,eax
   14001aa31:	add    rsp,0x20
   14001aa35:	pop    rbx
   14001aa36:	ret    
   14001aa37:	int3   
   14001aa38:	rex push rbx
   14001aa3a:	sub    rsp,0x30
   14001aa3e:	mov    rbx,rcx
   14001aa41:	call   0x14001f2e8
   14001aa46:	mov    rcx,QWORD PTR [rax+0x8]
   14001aa4a:	test   rcx,rcx
   14001aa4d:	je     0x14001aa61
   14001aa4f:	cmp    QWORD PTR [rcx+0x40],rbx
   14001aa53:	jne    0x14001aa61
   14001aa55:	lea    rcx,[rip+0x46174]        # 0x140060bd0
   14001aa5c:	call   0x14002466c
   14001aa61:	mov    rcx,rbx
   14001aa64:	call   0x14001fee4
   14001aa69:	bt     eax,0x1e
   14001aa6d:	jb     0x14001aa8e
   14001aa6f:	mov    rcx,QWORD PTR [rbx+0x40]
   14001aa73:	mov    eax,0x1
   14001aa78:	xor    r9d,r9d
   14001aa7b:	mov    DWORD PTR [rsp+0x28],eax
   14001aa7f:	lea    edx,[rax+0x14]
   14001aa82:	xor    r8d,r8d
   14001aa85:	mov    DWORD PTR [rsp+0x20],eax
   14001aa89:	call   0x140019bb0
   14001aa8e:	mov    rcx,rbx
   14001aa91:	add    rsp,0x30
   14001aa95:	pop    rbx
   14001aa96:	jmp    0x140018d54
   14001aa9b:	int3   
   14001aa9c:	mov    QWORD PTR [rsp+0x8],rbx
   14001aaa1:	push   rdi
   14001aaa2:	sub    rsp,0x30
   14001aaa6:	mov    rdi,rdx
   14001aaa9:	mov    rbx,rcx
   14001aaac:	call   0x14001f2e8
   14001aab1:	mov    rcx,QWORD PTR [rax+0x8]
   14001aab5:	test   rcx,rcx
   14001aab8:	je     0x14001aac8
   14001aaba:	cmp    QWORD PTR [rcx+0x40],rbx
   14001aabe:	jne    0x14001aac8
   14001aac0:	mov    rdx,rdi
   14001aac3:	call   0x140022878
   14001aac8:	mov    rcx,rbx
   14001aacb:	call   0x14001fee4
   14001aad0:	bt     eax,0x1e
   14001aad4:	jb     0x14001aafc
   14001aad6:	call   0x140018cec
   14001aadb:	mov    ecx,0x1
   14001aae0:	mov    r9,QWORD PTR [rax+0x18]
   14001aae4:	mov    r8,QWORD PTR [rax+0x10]
   14001aae8:	mov    edx,DWORD PTR [rax+0x8]
   14001aaeb:	mov    DWORD PTR [rsp+0x28],ecx
   14001aaef:	mov    DWORD PTR [rsp+0x20],ecx
   14001aaf3:	mov    rcx,QWORD PTR [rbx+0x40]
   14001aaf7:	call   0x140019bb0
   14001aafc:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ab01:	add    rsp,0x30
   14001ab05:	pop    rdi
   14001ab06:	ret    
   14001ab07:	int3   
   14001ab08:	rex push rbx
   14001ab0a:	sub    rsp,0x30
   14001ab0e:	mov    rbx,rcx
   14001ab11:	call   0x14001f3b8
   14001ab16:	mov    rcx,rax
   14001ab19:	xor    eax,eax
   14001ab1b:	cmp    rcx,rax
   14001ab1e:	je     0x14001ab29
   14001ab20:	mov    rdx,QWORD PTR [rcx]
   14001ab23:	call   QWORD PTR [rdx+0xe8]
   14001ab29:	cmp    rax,rbx
   14001ab2c:	jne    0x14001ab3a
   14001ab2e:	lea    rcx,[rip+0x4609b]        # 0x140060bd0
   14001ab35:	call   0x1400246e0
   14001ab3a:	mov    rcx,rbx
   14001ab3d:	call   0x14001fee4
   14001ab42:	bt     eax,0x1e
   14001ab46:	jb     0x14001ab6e
   14001ab48:	call   0x140018cec
   14001ab4d:	mov    ecx,0x1
   14001ab52:	mov    r9,QWORD PTR [rax+0x18]
   14001ab56:	mov    r8,QWORD PTR [rax+0x10]
   14001ab5a:	mov    edx,DWORD PTR [rax+0x8]
   14001ab5d:	mov    DWORD PTR [rsp+0x28],ecx
   14001ab61:	mov    DWORD PTR [rsp+0x20],ecx
   14001ab65:	mov    rcx,QWORD PTR [rbx+0x40]
   14001ab69:	call   0x140019bb0
   14001ab6e:	mov    rcx,rbx
   14001ab71:	add    rsp,0x30
   14001ab75:	pop    rbx
   14001ab76:	jmp    0x140018d54
   14001ab7b:	int3   
   14001ab7c:	mov    rax,rsp
   14001ab7f:	mov    QWORD PTR [rax+0x8],rbx
   14001ab83:	mov    QWORD PTR [rax+0x10],rbp
   14001ab87:	mov    QWORD PTR [rax+0x18],rsi
   14001ab8b:	mov    QWORD PTR [rax+0x20],rdi
   14001ab8f:	push   r12
   14001ab91:	sub    rsp,0x20
   14001ab95:	test   rcx,rcx
   14001ab98:	mov    rsi,r9
   14001ab9b:	mov    rdi,r8
   14001ab9e:	mov    rbx,rdx
   14001aba1:	mov    r12,rcx
   14001aba4:	je     0x14001ac76
   14001abaa:	test   rdx,rdx
   14001abad:	je     0x14001ac76
   14001abb3:	test   r9,r9
   14001abb6:	jne    0x14001abc2
   14001abb8:	mov    eax,0x80004003
   14001abbd:	jmp    0x14001ac7b
   14001abc2:	and    QWORD PTR [r9],0x0
   14001abc6:	cmp    DWORD PTR [r8],0x0
   14001abca:	jne    0x14001abff
   14001abcc:	cmp    DWORD PTR [r8+0x4],0x0
   14001abd1:	jne    0x14001abff
   14001abd3:	cmp    DWORD PTR [r8+0x8],0xc0
   14001abdb:	jne    0x14001abff
   14001abdd:	cmp    DWORD PTR [r8+0xc],0x46000000
   14001abe5:	jne    0x14001abff
   14001abe7:	mov    rax,QWORD PTR [rdx+0x8]
   14001abeb:	lea    rbx,[rcx+rax*1]
   14001abef:	mov    rax,QWORD PTR [rbx]
   14001abf2:	mov    rcx,rbx
   14001abf5:	call   QWORD PTR [rax+0x8]
   14001abf8:	mov    QWORD PTR [rsi],rbx
   14001abfb:	xor    eax,eax
   14001abfd:	jmp    0x14001ac7b
   14001abff:	mov    r10,QWORD PTR [rdx+0x10]
   14001ac03:	jmp    0x14001ac5d
   14001ac05:	mov    rcx,QWORD PTR [rbx]
   14001ac08:	xor    ebp,ebp
   14001ac0a:	test   rcx,rcx
   14001ac0d:	sete   bpl
   14001ac11:	test   ebp,ebp
   14001ac13:	jne    0x14001ac33
   14001ac15:	mov    eax,DWORD PTR [rdi]
   14001ac17:	cmp    DWORD PTR [rcx],eax
   14001ac19:	jne    0x14001ac55
   14001ac1b:	mov    eax,DWORD PTR [rdi+0x4]
   14001ac1e:	cmp    DWORD PTR [rcx+0x4],eax
   14001ac21:	jne    0x14001ac55
   14001ac23:	mov    eax,DWORD PTR [rdi+0x8]
   14001ac26:	cmp    DWORD PTR [rcx+0x8],eax
   14001ac29:	jne    0x14001ac55
   14001ac2b:	mov    eax,DWORD PTR [rdi+0xc]
   14001ac2e:	cmp    DWORD PTR [rcx+0xc],eax
   14001ac31:	jne    0x14001ac55
   14001ac33:	cmp    r10,0x1
   14001ac37:	je     0x14001ac69
   14001ac39:	mov    r9,QWORD PTR [rbx+0x8]
   14001ac3d:	mov    r8,rsi
   14001ac40:	mov    rdx,rdi
   14001ac43:	mov    rcx,r12
   14001ac46:	call   r10
   14001ac49:	test   eax,eax
   14001ac4b:	je     0x14001ac7b
   14001ac4d:	test   ebp,ebp
   14001ac4f:	jne    0x14001ac55
   14001ac51:	test   eax,eax
   14001ac53:	js     0x14001ac7b
   14001ac55:	mov    r10,QWORD PTR [rbx+0x28]
   14001ac59:	add    rbx,0x18
   14001ac5d:	test   r10,r10
   14001ac60:	jne    0x14001ac05
   14001ac62:	mov    eax,0x80004002
   14001ac67:	jmp    0x14001ac7b
   14001ac69:	mov    rax,QWORD PTR [rbx+0x8]
   14001ac6d:	lea    rbx,[r12+rax*1]
   14001ac71:	jmp    0x14001abef
   14001ac76:	mov    eax,0x80070057
   14001ac7b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ac80:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ac85:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ac8a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001ac8f:	add    rsp,0x20
   14001ac93:	pop    r12
   14001ac95:	ret    
   14001ac96:	int3   
   14001ac97:	int3   
   14001ac98:	add    DWORD PTR [rcx+0x28],0x1
   14001ac9c:	mov    eax,DWORD PTR [rcx+0x28]
   14001ac9f:	ret    
   14001aca0:	rex push rbx
   14001aca2:	sub    rsp,0x20
   14001aca6:	add    DWORD PTR [rcx+0x28],0xffffffff
   14001acaa:	mov    ebx,DWORD PTR [rcx+0x28]
   14001acad:	jne    0x14001acc3
   14001acaf:	test   rcx,rcx
   14001acb2:	je     0x14001acc3
   14001acb4:	mov    r8,QWORD PTR [rcx]
   14001acb7:	mov    edx,0x1
   14001acbc:	call   QWORD PTR [r8+0xe0]
   14001acc3:	mov    eax,ebx
   14001acc5:	add    rsp,0x20
   14001acc9:	pop    rbx
   14001acca:	ret    
   14001accb:	int3   
   14001accc:	mov    r9,r8
   14001accf:	mov    r8,rdx
   14001acd2:	lea    rdx,[rip+0x2a097]        # 0x140044d70
   14001acd9:	jmp    0x14001ab7c
   14001acde:	int3   
   14001acdf:	int3   
   14001ace0:	mov    QWORD PTR [rsp+0x8],rbx
   14001ace5:	push   rdi
   14001ace6:	sub    rsp,0x20
   14001acea:	lea    rax,[rip+0x29f97]        # 0x140044c88
   14001acf1:	mov    rbx,rcx
   14001acf4:	mov    DWORD PTR [rcx+0x28],0xc0000001
   14001acfb:	mov    QWORD PTR [rcx],rax
   14001acfe:	lea    rax,[rip+0x29f53]        # 0x140044c58
   14001ad05:	mov    edi,edx
   14001ad07:	mov    QWORD PTR [rcx+0x8],rax
   14001ad0b:	lea    rax,[rip+0x29f16]        # 0x140044c28
   14001ad12:	mov    QWORD PTR [rcx+0x20],rax
   14001ad16:	mov    rcx,QWORD PTR [rcx+0x18]
   14001ad1a:	test   rcx,rcx
   14001ad1d:	je     0x14001ad27
   14001ad1f:	mov    rax,QWORD PTR [rcx]
   14001ad22:	xor    edx,edx
   14001ad24:	call   QWORD PTR [rax+0x18]
   14001ad27:	call   0x140025fa4
   14001ad2c:	test   dil,0x1
   14001ad30:	je     0x14001ad3a
   14001ad32:	mov    rcx,rbx
   14001ad35:	call   0x14001490c
   14001ad3a:	mov    rax,rbx
   14001ad3d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ad42:	add    rsp,0x20
   14001ad46:	pop    rdi
   14001ad47:	ret    
   14001ad48:	sub    rcx,0x8
   14001ad4c:	jmp    0x14001aca0
   14001ad51:	int3   
   14001ad52:	int3   
   14001ad53:	int3   
   14001ad54:	sub    rcx,0x8
   14001ad58:	jmp    0x14001ac98
   14001ad5d:	int3   
   14001ad5e:	int3   
   14001ad5f:	int3   
   14001ad60:	sub    rcx,0x20
   14001ad64:	jmp    0x14001accc
   14001ad69:	int3   
   14001ad6a:	int3   
   14001ad6b:	int3   
   14001ad6c:	sub    rcx,0x8
   14001ad70:	jmp    0x14001accc
   14001ad75:	int3   
   14001ad76:	int3   
   14001ad77:	int3   
   14001ad78:	sub    rcx,0x20
   14001ad7c:	jmp    0x14001aca0
   14001ad81:	int3   
   14001ad82:	int3   
   14001ad83:	int3   
   14001ad84:	sub    rcx,0x20
   14001ad88:	jmp    0x14001ac98
   14001ad8d:	int3   
   14001ad8e:	int3   
   14001ad8f:	int3   
   14001ad90:	mov    QWORD PTR [rsp+0x8],rbx
   14001ad95:	mov    QWORD PTR [rsp+0x10],rbp
   14001ad9a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ad9f:	push   rdi
   14001ada0:	sub    rsp,0x30
   14001ada4:	mov    rbx,r8
   14001ada7:	mov    rbp,rdx
   14001adaa:	mov    rsi,rcx
   14001adad:	call   0x14001fee4
   14001adb2:	bt     eax,0x1e
   14001adb6:	jb     0x14001ae1d
   14001adb8:	mov    rcx,rsi
   14001adbb:	call   0x14001a9fc
   14001adc0:	test   rax,rax
   14001adc3:	mov    rdi,rax
   14001adc6:	je     0x14001ae1d
   14001adc8:	test   rbx,rbx
   14001adcb:	je     0x14001ade8
   14001adcd:	mov    rcx,QWORD PTR [rbx+0x40]
   14001add1:	call   QWORD PTR [rip+0x28951]        # 0x140043728
   14001add7:	test   eax,eax
   14001add9:	je     0x14001ade8
   14001addb:	mov    rcx,rbx
   14001adde:	call   0x14001a9fc
   14001ade3:	cmp    rdi,rax
   14001ade6:	je     0x14001ae1d
   14001ade8:	test   rbx,rbx
   14001adeb:	mov    rax,QWORD PTR [rsi+0x40]
   14001adef:	mov    QWORD PTR [rsp+0x20],rax
   14001adf4:	jne    0x14001adfd
   14001adf6:	and    QWORD PTR [rsp+0x28],rbx
   14001adfb:	jmp    0x14001ae06
   14001adfd:	mov    rax,QWORD PTR [rbx+0x40]
   14001ae01:	mov    QWORD PTR [rsp+0x28],rax
   14001ae06:	mov    rcx,QWORD PTR [rdi+0x40]
   14001ae0a:	lea    r9,[rsp+0x20]
   14001ae0f:	mov    r8,rbp
   14001ae12:	mov    edx,0x36e
   14001ae17:	call   QWORD PTR [rip+0x28bcb]        # 0x1400439e8
   14001ae1d:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ae22:	mov    rbp,QWORD PTR [rsp+0x48]
   14001ae27:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ae2c:	add    rsp,0x30
   14001ae30:	pop    rdi
   14001ae31:	ret    
   14001ae32:	int3   
   14001ae33:	int3   
   14001ae34:	rex push rbx
   14001ae36:	sub    rsp,0x20
   14001ae3a:	cmp    edx,0xfffffffe
   14001ae3d:	jne    0x14001aeae
   14001ae3f:	cmp    r8d,0x201
   14001ae46:	je     0x14001ae5a
   14001ae48:	cmp    r8d,0x207
   14001ae4f:	je     0x14001ae5a
   14001ae51:	cmp    r8d,0x204
   14001ae58:	jne    0x14001aeae
   14001ae5a:	call   0x14001a9fc
   14001ae5f:	test   rax,rax
   14001ae62:	je     0x14001aeae
   14001ae64:	mov    rcx,QWORD PTR [rax+0x40]
   14001ae68:	call   QWORD PTR [rip+0x288da]        # 0x140043748
   14001ae6e:	mov    rcx,rax
   14001ae71:	call   0x140018e70
   14001ae76:	test   rax,rax
   14001ae79:	mov    rbx,rax
   14001ae7c:	je     0x14001aeae
   14001ae7e:	call   QWORD PTR [rip+0x28a7c]        # 0x140043900
   14001ae84:	mov    rcx,rax
   14001ae87:	call   0x140018e70
   14001ae8c:	cmp    rbx,rax
   14001ae8f:	je     0x14001aeae
   14001ae91:	mov    rcx,rbx
   14001ae94:	call   0x140020094
   14001ae99:	test   eax,eax
   14001ae9b:	je     0x14001aeae
   14001ae9d:	mov    rcx,QWORD PTR [rbx+0x40]
   14001aea1:	call   QWORD PTR [rip+0x28ab9]        # 0x140043960
   14001aea7:	mov    eax,0x1
   14001aeac:	jmp    0x14001aeb0
   14001aeae:	xor    eax,eax
   14001aeb0:	add    rsp,0x20
   14001aeb4:	pop    rbx
   14001aeb5:	ret    
   14001aeb6:	int3   
   14001aeb7:	int3   
   14001aeb8:	mov    rax,rsp
   14001aebb:	mov    QWORD PTR [rax+0x20],r9
   14001aebf:	mov    QWORD PTR [rax+0x18],r8
   14001aec3:	mov    DWORD PTR [rax+0x10],edx
   14001aec6:	mov    QWORD PTR [rax+0x8],rcx
   14001aeca:	push   rbx
   14001aecb:	push   rsi
   14001aecc:	push   rdi
   14001aecd:	push   r12
   14001aecf:	push   r13
   14001aed1:	push   r14
   14001aed3:	push   r15
   14001aed5:	sub    rsp,0x90
   14001aedc:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001aee5:	mov    r13,r9
   14001aee8:	mov    r15,r8
   14001aeeb:	mov    r14d,edx
   14001aeee:	mov    rsi,rcx
   14001aef1:	lea    rdx,[rip+0x29000]        # 0x140043ef8
   14001aef8:	call   QWORD PTR [rip+0x28822]        # 0x140043720
   14001aefe:	mov    r12,rax
   14001af01:	mov    QWORD PTR [rsp+0x30],rax
   14001af06:	xor    ebx,ebx
   14001af08:	lea    edi,[rbx+0x1]
   14001af0b:	mov    edx,r14d
   14001af0e:	sub    edx,0x6
   14001af11:	je     0x14001afe4
   14001af17:	sub    edx,0x1a
   14001af1a:	je     0x14001afbb
   14001af20:	sub    edx,0x62
   14001af23:	je     0x14001af82
   14001af25:	cmp    edx,0x8e
   14001af2b:	jne    0x14001b00e
   14001af31:	mov    rcx,rsi
   14001af34:	call   0x140018e70
   14001af39:	mov    rdi,rax
   14001af3c:	lea    r8,[rsp+0x30]
   14001af41:	lea    rdx,[rsp+0x48]
   14001af46:	mov    rcx,rax
   14001af49:	call   0x140016e5c
   14001af4e:	mov    QWORD PTR [rsp+0x20],r13
   14001af53:	mov    r9,r15
   14001af56:	mov    r8d,0x110
   14001af5c:	mov    rdx,rsi
   14001af5f:	mov    rcx,r12
   14001af62:	call   QWORD PTR [rip+0x288a8]        # 0x140043810
   14001af68:	mov    rbx,rax
   14001af6b:	mov    r8d,DWORD PTR [rsp+0x30]
   14001af70:	lea    rdx,[rsp+0x48]
   14001af75:	mov    rcx,rdi
   14001af78:	call   0x14001969c
   14001af7d:	jmp    0x14001b028
   14001af82:	mov    r8,rax
   14001af85:	mov    edx,0xfffffffc
   14001af8a:	mov    rcx,rsi
   14001af8d:	call   QWORD PTR [rip+0x287e5]        # 0x140043778
   14001af93:	lea    rdx,[rip+0x28f5e]        # 0x140043ef8
   14001af9a:	mov    rcx,rsi
   14001af9d:	call   QWORD PTR [rip+0x28945]        # 0x1400438e8
   14001afa3:	lea    rcx,[rip+0x28f4e]        # 0x140043ef8
   14001afaa:	call   QWORD PTR [rip+0x284b8]        # 0x140043468
   14001afb0:	movzx  ecx,ax
   14001afb3:	call   QWORD PTR [rip+0x284b7]        # 0x140043470
   14001afb9:	jmp    0x14001b00e
   14001afbb:	mov    rcx,rsi
   14001afbe:	call   0x140018e70
   14001afc3:	mov    rcx,r13
   14001afc6:	shr    rcx,0x10
   14001afca:	movzx  r8d,cx
   14001afce:	movsx  edx,r13w
   14001afd2:	mov    rcx,rax
   14001afd5:	call   0x14001ae34
   14001afda:	mov    edi,ebx
   14001afdc:	cmp    eax,ebx
   14001afde:	sete   dil
   14001afe2:	jmp    0x14001b00a
   14001afe4:	mov    rcx,r13
   14001afe7:	call   0x140018e70
   14001afec:	mov    r12,rax
   14001afef:	mov    rcx,rsi
   14001aff2:	call   0x140018e70
   14001aff7:	mov    r8,r12
   14001affa:	mov    rdx,r15
   14001affd:	mov    rcx,rax
   14001b000:	call   0x14001ad90
   14001b005:	mov    r12,QWORD PTR [rsp+0x30]
   14001b00a:	cmp    edi,ebx
   14001b00c:	je     0x14001b028
   14001b00e:	mov    QWORD PTR [rsp+0x20],r13
   14001b013:	mov    r9,r15
   14001b016:	mov    r8d,r14d
   14001b019:	mov    rdx,rsi
   14001b01c:	mov    rcx,r12
   14001b01f:	call   QWORD PTR [rip+0x287eb]        # 0x140043810
   14001b025:	mov    rbx,rax
   14001b028:	jmp    0x14001b02f
   14001b02a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b02f:	mov    rax,rbx
   14001b032:	add    rsp,0x90
   14001b039:	pop    r15
   14001b03b:	pop    r14
   14001b03d:	pop    r13
   14001b03f:	pop    r12
   14001b041:	pop    rdi
   14001b042:	pop    rsi
   14001b043:	pop    rbx
   14001b044:	ret    
   14001b045:	int3   
   14001b046:	int3   
   14001b047:	int3   
   14001b048:	mov    QWORD PTR [rsp+0x10],rdx
   14001b04d:	push   rbx
   14001b04e:	push   rbp
   14001b04f:	push   rdi
   14001b050:	sub    rsp,0x30
   14001b054:	mov    rbp,rdx
   14001b057:	mov    rax,QWORD PTR [rbp+0xd0]
   14001b05e:	mov    QWORD PTR [rbp+0x58],rax
   14001b062:	mov    eax,DWORD PTR [rbp+0xd8]
   14001b068:	mov    DWORD PTR [rbp+0x60],eax
   14001b06b:	mov    rax,QWORD PTR [rbp+0xe0]
   14001b072:	mov    QWORD PTR [rbp+0x68],rax
   14001b076:	mov    rax,QWORD PTR [rbp+0xe8]
   14001b07d:	mov    QWORD PTR [rbp+0x70],rax
   14001b081:	lea    rdx,[rbp+0x58]
   14001b085:	mov    rdi,QWORD PTR [rbp+0x40]
   14001b089:	mov    rcx,rdi
   14001b08c:	call   0x14001f40c
   14001b091:	mov    QWORD PTR [rbp+0x30],rax
   14001b095:	xor    ebx,ebx
   14001b097:	cmp    rdi,rbx
   14001b09a:	je     0x14001b0a5
   14001b09c:	mov    rcx,rdi
   14001b09f:	call   0x140021780
   14001b0a4:	nop
   14001b0a5:	lea    rax,[rip+0xffffffffffffff7e]        # 0x14001b02a
   14001b0ac:	jmp    0x14001b0ae
   14001b0ae:	add    rsp,0x30
   14001b0b2:	pop    rdi
   14001b0b3:	pop    rbp
   14001b0b4:	pop    rbx
   14001b0b5:	ret    
   14001b0b6:	int3   
   14001b0b7:	int3   
   14001b0b8:	mov    rax,rsp
   14001b0bb:	push   rbp
   14001b0bc:	push   rsi
   14001b0bd:	push   rdi
   14001b0be:	push   r12
   14001b0c0:	push   r13
   14001b0c2:	sub    rsp,0x2a0
   14001b0c9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001b0d2:	mov    QWORD PTR [rax+0x20],rbx
   14001b0d6:	mov    rax,QWORD PTR [rip+0x3fea3]        # 0x14005af80
   14001b0dd:	xor    rax,rsp
   14001b0e0:	mov    QWORD PTR [rsp+0x290],rax
   14001b0e8:	mov    r12,r8
   14001b0eb:	mov    rbx,rdx
   14001b0ee:	mov    esi,ecx
   14001b0f0:	lea    rdx,[rip+0xffffffffffffb631]        # 0x140016728
   14001b0f7:	lea    rcx,[rip+0x4552a]        # 0x140060628
   14001b0fe:	call   0x14002514c
   14001b103:	mov    rdi,rax
   14001b106:	xor    ecx,ecx
   14001b108:	test   rax,rax
   14001b10b:	setne  cl
   14001b10e:	test   ecx,ecx
   14001b110:	jne    0x14001b118
   14001b112:	call   0x1400218c0
   14001b117:	int3   
   14001b118:	cmp    esi,0x3
   14001b11b:	je     0x14001b134
   14001b11d:	mov    r9,r12
   14001b120:	mov    r8,rbx
   14001b123:	mov    edx,esi
   14001b125:	mov    rcx,QWORD PTR [rax+0x48]
   14001b129:	call   QWORD PTR [rip+0x285d1]        # 0x140043700
   14001b12f:	jmp    0x14001b318
   14001b134:	mov    rbp,QWORD PTR [r12]
   14001b138:	mov    rsi,QWORD PTR [rax+0x28]
   14001b13c:	call   0x14001f2e8
   14001b141:	movzx  r13d,BYTE PTR [rax+0x28]
   14001b146:	test   rsi,rsi
   14001b149:	jne    0x14001b27a
   14001b14f:	bt     DWORD PTR [rbp+0x30],0x1e
   14001b154:	jb     0x14001b2e9
   14001b15a:	test   r13d,r13d
   14001b15d:	jne    0x14001b2e9
   14001b163:	cmp    WORD PTR [rip+0x4547d],r13w        # 0x1400605e8
   14001b16b:	jne    0x14001b1e5
   14001b16d:	lea    esi,[r13+0x50]
   14001b171:	mov    r8,rsi
   14001b174:	xor    edx,edx
   14001b176:	lea    rcx,[rsp+0x40]
   14001b17b:	call   0x14002ac20
   14001b180:	mov    DWORD PTR [rsp+0x40],esi
   14001b184:	lea    r8,[rsp+0x40]
   14001b189:	lea    rdx,[rip+0x29cc8]        # 0x140044e58
   14001b190:	xor    ecx,ecx
   14001b192:	call   0x140016964
   14001b197:	mov    WORD PTR [rip+0x4544a],ax        # 0x1400605e8
   14001b19e:	test   ax,ax
   14001b1a1:	jne    0x14001b1e5
   14001b1a3:	mov    r8d,0x100
   14001b1a9:	lea    rdx,[rsp+0x90]
   14001b1b1:	mov    rcx,rbx
   14001b1b4:	call   QWORD PTR [rip+0x2854e]        # 0x140043708
   14001b1ba:	test   eax,eax
   14001b1bc:	je     0x14001b200
   14001b1be:	and    WORD PTR [rsp+0x28e],r13w
   14001b1c7:	lea    rdx,[rip+0x29c8a]        # 0x140044e58
   14001b1ce:	lea    rcx,[rsp+0x90]
   14001b1d6:	call   0x14002bae0
   14001b1db:	test   eax,eax
   14001b1dd:	je     0x14001b2e9
   14001b1e3:	jmp    0x14001b200
   14001b1e5:	mov    edx,0xffffffe0
   14001b1ea:	mov    rcx,rbx
   14001b1ed:	call   QWORD PTR [rip+0x2851d]        # 0x140043710
   14001b1f3:	cmp    ax,WORD PTR [rip+0x453ee]        # 0x1400605e8
   14001b1fa:	je     0x14001b2e9
   14001b200:	mov    edx,0xfffffffc
   14001b205:	mov    rcx,rbx
   14001b208:	call   QWORD PTR [rip+0x28562]        # 0x140043770
   14001b20e:	mov    rsi,rax
   14001b211:	test   rax,rax
   14001b214:	je     0x14001b2e9
   14001b21a:	lea    rbp,[rip+0x28cd7]        # 0x140043ef8
   14001b221:	mov    rdx,rbp
   14001b224:	mov    rcx,rbx
   14001b227:	call   QWORD PTR [rip+0x284f3]        # 0x140043720
   14001b22d:	test   rax,rax
   14001b230:	jne    0x14001b2e9
   14001b236:	mov    r8,rsi
   14001b239:	mov    rdx,rbp
   14001b23c:	mov    rcx,rbx
   14001b23f:	call   QWORD PTR [rip+0x284d3]        # 0x140043718
   14001b245:	mov    rdx,rbp
   14001b248:	mov    rcx,rbx
   14001b24b:	call   QWORD PTR [rip+0x284cf]        # 0x140043720
   14001b251:	cmp    rax,rsi
   14001b254:	jne    0x14001b2e9
   14001b25a:	mov    rcx,rbp
   14001b25d:	call   QWORD PTR [rip+0x281fd]        # 0x140043460
   14001b263:	lea    r8,[rip+0xfffffffffffffc4e]        # 0x14001aeb8
   14001b26a:	mov    edx,0xfffffffc
   14001b26f:	mov    rcx,rbx
   14001b272:	call   QWORD PTR [rip+0x28500]        # 0x140043778
   14001b278:	jmp    0x14001b2e9
   14001b27a:	mov    rdx,QWORD PTR [rsi+0x38]
   14001b27e:	lea    rcx,[rsp+0x20]
   14001b283:	call   0x14001f364
   14001b288:	nop
   14001b289:	mov    rdx,rbx
   14001b28c:	mov    rcx,rsi
   14001b28f:	call   0x140018ee0
   14001b294:	mov    r11,QWORD PTR [rsi]
   14001b297:	mov    rcx,rsi
   14001b29a:	call   QWORD PTR [r11+0xa0]
   14001b2a1:	mov    r11,QWORD PTR [rsi]
   14001b2a4:	mov    rcx,rsi
   14001b2a7:	call   QWORD PTR [r11+0x1e0]
   14001b2ae:	mov    rsi,rax
   14001b2b1:	lea    rbp,[rip+0xffffffffffffe628]        # 0x1400198e0
   14001b2b8:	mov    r8,rbp
   14001b2bb:	mov    edx,0xfffffffc
   14001b2c0:	mov    rcx,rbx
   14001b2c3:	call   QWORD PTR [rip+0x284af]        # 0x140043778
   14001b2c9:	cmp    rax,rbp
   14001b2cc:	je     0x14001b2d1
   14001b2ce:	mov    QWORD PTR [rsi],rax
   14001b2d1:	and    QWORD PTR [rdi+0x28],0x0
   14001b2d6:	cmp    DWORD PTR [rsp+0x28],0x0
   14001b2db:	je     0x14001b2e9
   14001b2dd:	mov    rdx,QWORD PTR [rsp+0x20]
   14001b2e2:	xor    ecx,ecx
   14001b2e4:	call   0x14001e620
   14001b2e9:	mov    r9,r12
   14001b2ec:	mov    r8,rbx
   14001b2ef:	mov    edx,0x3
   14001b2f4:	mov    rcx,QWORD PTR [rdi+0x48]
   14001b2f8:	call   QWORD PTR [rip+0x28402]        # 0x140043700
   14001b2fe:	mov    rbx,rax
   14001b301:	test   r13d,r13d
   14001b304:	je     0x14001b315
   14001b306:	mov    rcx,QWORD PTR [rdi+0x48]
   14001b30a:	call   QWORD PTR [rip+0x28470]        # 0x140043780
   14001b310:	and    QWORD PTR [rdi+0x48],0x0
   14001b315:	mov    rax,rbx
   14001b318:	mov    rcx,QWORD PTR [rsp+0x290]
   14001b320:	xor    rcx,rsp
   14001b323:	call   0x140029b40
   14001b328:	mov    rbx,QWORD PTR [rsp+0x2e8]
   14001b330:	add    rsp,0x2a0
   14001b337:	pop    r13
   14001b339:	pop    r12
   14001b33b:	pop    rdi
   14001b33c:	pop    rsi
   14001b33d:	pop    rbp
   14001b33e:	ret    
   14001b33f:	int3   
   14001b340:	int3   
   14001b341:	int3   
   14001b342:	int3   
   14001b343:	int3   
   14001b344:	int3   
   14001b345:	int3   
   14001b346:	int3   
   14001b347:	int3   
   14001b348:	rex push rbp
   14001b34a:	sub    rsp,0x20
   14001b34e:	mov    rbp,rdx
   14001b351:	lea    rcx,[rbp+0x20]
   14001b355:	call   0x140016dcc
   14001b35a:	add    rsp,0x20
   14001b35e:	pop    rbp
   14001b35f:	ret    
   14001b360:	mov    QWORD PTR [rsp+0x8],rbx
   14001b365:	push   rdi
   14001b366:	sub    rsp,0x20
   14001b36a:	mov    rdi,rcx
   14001b36d:	lea    rdx,[rip+0xffffffffffffb3b4]        # 0x140016728
   14001b374:	lea    rcx,[rip+0x452ad]        # 0x140060628
   14001b37b:	call   0x14002514c
   14001b380:	test   rax,rax
   14001b383:	mov    rbx,rax
   14001b386:	jne    0x14001b38e
   14001b388:	call   0x1400218c0
   14001b38d:	int3   
   14001b38e:	cmp    QWORD PTR [rax+0x28],rdi
   14001b392:	je     0x14001b3cb
   14001b394:	cmp    QWORD PTR [rax+0x48],0x0
   14001b399:	jne    0x14001b3c7
   14001b39b:	call   QWORD PTR [rip+0x2811f]        # 0x1400434c0
   14001b3a1:	xor    r8d,r8d
   14001b3a4:	lea    rdx,[rip+0xfffffffffffffd0d]        # 0x14001b0b8
   14001b3ab:	lea    ecx,[r8+0x5]
   14001b3af:	mov    r9d,eax
   14001b3b2:	call   QWORD PTR [rip+0x28340]        # 0x1400436f8
   14001b3b8:	test   rax,rax
   14001b3bb:	mov    QWORD PTR [rbx+0x48],rax
   14001b3bf:	jne    0x14001b3c7
   14001b3c1:	call   0x140021878
   14001b3c6:	int3   
   14001b3c7:	mov    QWORD PTR [rbx+0x28],rdi
   14001b3cb:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b3d0:	add    rsp,0x20
   14001b3d4:	pop    rdi
   14001b3d5:	ret    
   14001b3d6:	int3   
   14001b3d7:	int3   
   14001b3d8:	mov    rax,rsp
   14001b3db:	mov    QWORD PTR [rax+0x8],rbx
   14001b3df:	mov    QWORD PTR [rax+0x10],rbp
   14001b3e3:	mov    QWORD PTR [rax+0x18],rsi
   14001b3e7:	mov    QWORD PTR [rax+0x20],rdi
   14001b3eb:	push   r12
   14001b3ed:	sub    rsp,0xb0
   14001b3f4:	xor    ebx,ebx
   14001b3f6:	mov    rsi,r9
   14001b3f9:	mov    rbp,r8
   14001b3fc:	cmp    r9,rbx
   14001b3ff:	mov    r12d,edx
   14001b402:	mov    rdi,rcx
   14001b405:	je     0x14001b41c
   14001b407:	or     edx,0xffffffff
   14001b40a:	mov    rcx,r9
   14001b40d:	call   0x140025fc0
   14001b412:	cmp    eax,ebx
   14001b414:	jne    0x14001b41c
   14001b416:	call   0x1400218c0
   14001b41b:	int3   
   14001b41c:	mov    eax,DWORD PTR [rsp+0xe0]
   14001b423:	mov    DWORD PTR [rsp+0xa8],r12d
   14001b42b:	mov    QWORD PTR [rsp+0xa0],rbp
   14001b433:	mov    DWORD PTR [rsp+0x90],eax
   14001b43a:	mov    eax,DWORD PTR [rsp+0xe8]
   14001b441:	mov    QWORD PTR [rsp+0x98],rsi
   14001b449:	mov    DWORD PTR [rsp+0x8c],eax
   14001b450:	mov    eax,DWORD PTR [rsp+0xf0]
   14001b457:	mov    DWORD PTR [rsp+0x88],eax
   14001b45e:	mov    eax,DWORD PTR [rsp+0xf8]
   14001b465:	mov    DWORD PTR [rsp+0x84],eax
   14001b46c:	mov    eax,DWORD PTR [rsp+0x100]
   14001b473:	mov    DWORD PTR [rsp+0x80],eax
   14001b47a:	mov    rax,QWORD PTR [rsp+0x108]
   14001b482:	mov    QWORD PTR [rsp+0x78],rax
   14001b487:	mov    rax,QWORD PTR [rsp+0x110]
   14001b48f:	mov    QWORD PTR [rsp+0x70],rax
   14001b494:	call   0x14001f2e8
   14001b499:	lea    rdx,[rsp+0x60]
   14001b49e:	mov    rcx,QWORD PTR [rax+0x10]
   14001b4a2:	mov    rax,QWORD PTR [rsp+0x118]
   14001b4aa:	mov    QWORD PTR [rsp+0x60],rax
   14001b4af:	mov    rax,QWORD PTR [rdi]
   14001b4b2:	mov    QWORD PTR [rsp+0x68],rcx
   14001b4b7:	mov    rcx,rdi
   14001b4ba:	call   QWORD PTR [rax+0xc8]
   14001b4c0:	mov    rcx,rdi
   14001b4c3:	cmp    eax,ebx
   14001b4c5:	jne    0x14001b4d7
   14001b4c7:	mov    rax,QWORD PTR [rdi]
   14001b4ca:	call   QWORD PTR [rax+0x228]
   14001b4d0:	xor    eax,eax
   14001b4d2:	jmp    0x14001b574
   14001b4d7:	call   0x14001b360
   14001b4dc:	mov    rax,QWORD PTR [rsp+0x68]
   14001b4e1:	mov    r11,QWORD PTR [rsp+0x60]
   14001b4e6:	mov    r9d,DWORD PTR [rsp+0x90]
   14001b4ee:	mov    r8,QWORD PTR [rsp+0x98]
   14001b4f6:	mov    rdx,QWORD PTR [rsp+0xa0]
   14001b4fe:	mov    ecx,DWORD PTR [rsp+0xa8]
   14001b505:	mov    QWORD PTR [rsp+0x58],r11
   14001b50a:	mov    QWORD PTR [rsp+0x50],rax
   14001b50f:	mov    rax,QWORD PTR [rsp+0x70]
   14001b514:	mov    QWORD PTR [rsp+0x48],rax
   14001b519:	mov    rax,QWORD PTR [rsp+0x78]
   14001b51e:	mov    QWORD PTR [rsp+0x40],rax
   14001b523:	mov    eax,DWORD PTR [rsp+0x80]
   14001b52a:	mov    DWORD PTR [rsp+0x38],eax
   14001b52e:	mov    eax,DWORD PTR [rsp+0x84]
   14001b535:	mov    DWORD PTR [rsp+0x30],eax
   14001b539:	mov    eax,DWORD PTR [rsp+0x88]
   14001b540:	mov    DWORD PTR [rsp+0x28],eax
   14001b544:	mov    eax,DWORD PTR [rsp+0x8c]
   14001b54b:	mov    DWORD PTR [rsp+0x20],eax
   14001b54f:	call   0x140016a5c
   14001b554:	mov    rsi,rax
   14001b557:	call   0x140018f8c
   14001b55c:	cmp    eax,ebx
   14001b55e:	jne    0x14001b56c
   14001b560:	mov    rdx,QWORD PTR [rdi]
   14001b563:	mov    rcx,rdi
   14001b566:	call   QWORD PTR [rdx+0x228]
   14001b56c:	cmp    rsi,rbx
   14001b56f:	setne  bl
   14001b572:	mov    eax,ebx
   14001b574:	lea    r11,[rsp+0xb0]
   14001b57c:	mov    rbx,QWORD PTR [r11+0x10]
   14001b580:	mov    rbp,QWORD PTR [r11+0x18]
   14001b584:	mov    rsi,QWORD PTR [r11+0x20]
   14001b588:	mov    rdi,QWORD PTR [r11+0x28]
   14001b58c:	mov    rsp,r11
   14001b58f:	pop    r12
   14001b591:	ret    
   14001b592:	int3   
   14001b593:	int3   
   14001b594:	mov    QWORD PTR [rsp+0x8],rbx
   14001b599:	push   rdi
   14001b59a:	sub    rsp,0x30
   14001b59e:	mov    rax,QWORD PTR [rcx]
   14001b5a1:	mov    rbx,rcx
   14001b5a4:	call   QWORD PTR [rax+0x240]
   14001b5aa:	test   eax,eax
   14001b5ac:	je     0x14001b5ba
   14001b5ae:	mov    rax,QWORD PTR [rbx]
   14001b5b1:	mov    rcx,rbx
   14001b5b4:	call   QWORD PTR [rax+0x2e0]
   14001b5ba:	mov    rcx,QWORD PTR [rbx+0x40]
   14001b5be:	xor    r9d,r9d
   14001b5c1:	xor    r8d,r8d
   14001b5c4:	lea    edi,[r9+0x1f]
   14001b5c8:	mov    edx,edi
   14001b5ca:	call   QWORD PTR [rip+0x28418]        # 0x1400439e8
   14001b5d0:	mov    rcx,QWORD PTR [rbx+0x40]
   14001b5d4:	xor    r9d,r9d
   14001b5d7:	xor    r8d,r8d
   14001b5da:	mov    edx,edi
   14001b5dc:	mov    DWORD PTR [rsp+0x28],0x1
   14001b5e4:	mov    DWORD PTR [rsp+0x20],0x1
   14001b5ec:	call   0x140019bb0
   14001b5f1:	mov    rcx,rbx
   14001b5f4:	call   0x14001a9fc
   14001b5f9:	test   rax,rax
   14001b5fc:	mov    rbx,rax
   14001b5ff:	jne    0x14001b607
   14001b601:	call   0x1400218c0
   14001b606:	int3   
   14001b607:	mov    rcx,QWORD PTR [rax+0x40]
   14001b60b:	xor    r9d,r9d
   14001b60e:	xor    r8d,r8d
   14001b611:	mov    edx,edi
   14001b613:	call   QWORD PTR [rip+0x283cf]        # 0x1400439e8
   14001b619:	mov    rcx,QWORD PTR [rbx+0x40]
   14001b61d:	xor    r9d,r9d
   14001b620:	xor    r8d,r8d
   14001b623:	mov    edx,edi
   14001b625:	mov    DWORD PTR [rsp+0x28],0x1
   14001b62d:	mov    DWORD PTR [rsp+0x20],0x1
   14001b635:	call   0x140019bb0
   14001b63a:	call   QWORD PTR [rip+0x280b0]        # 0x1400436f0
   14001b640:	test   rax,rax
   14001b643:	je     0x14001b656
   14001b645:	xor    r9d,r9d
   14001b648:	xor    r8d,r8d
   14001b64b:	mov    edx,edi
   14001b64d:	mov    rcx,rax
   14001b650:	call   QWORD PTR [rip+0x28392]        # 0x1400439e8
   14001b656:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b65b:	add    rsp,0x30
   14001b65f:	pop    rdi
   14001b660:	ret    
   14001b661:	int3   
   14001b662:	int3   
   14001b663:	int3   
   14001b664:	mov    rax,rsp
   14001b667:	push   r12
   14001b669:	push   r13
   14001b66b:	push   r15
   14001b66d:	sub    rsp,0x120
   14001b674:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14001b67d:	mov    QWORD PTR [rax+0x8],rbx
   14001b681:	mov    QWORD PTR [rax+0x10],rbp
   14001b685:	mov    QWORD PTR [rax+0x18],rsi
   14001b689:	mov    QWORD PTR [rax+0x20],rdi
   14001b68d:	mov    rsi,r9
   14001b690:	mov    r12,r8
   14001b693:	mov    r13d,edx
   14001b696:	mov    rbp,rcx
   14001b699:	and    QWORD PTR [rsp+0x30],0x0
   14001b69f:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   14001b6a7:	mov    r15d,0x1
   14001b6ad:	cmp    edx,0x111
   14001b6b3:	jne    0x14001b6d9
   14001b6b5:	mov    rax,QWORD PTR [rcx]
   14001b6b8:	mov    r8,r9
   14001b6bb:	mov    rdx,r12
   14001b6be:	call   QWORD PTR [rax+0x1d0]
   14001b6c4:	test   eax,eax
   14001b6c6:	je     0x14001b6d2
   14001b6c8:	mov    QWORD PTR [rsp+0x30],r15
   14001b6cd:	jmp    0x14001c1a3
   14001b6d2:	xor    eax,eax
   14001b6d4:	jmp    0x14001c1d6
   14001b6d9:	cmp    edx,0x4e
   14001b6dc:	jne    0x14001b707
   14001b6de:	cmp    QWORD PTR [r9],0x0
   14001b6e2:	je     0x14001b700
   14001b6e4:	mov    rax,QWORD PTR [rcx]
   14001b6e7:	lea    r9,[rsp+0x30]
   14001b6ec:	mov    r8,rsi
   14001b6ef:	mov    rdx,r12
   14001b6f2:	call   QWORD PTR [rax+0x1d8]
   14001b6f8:	test   eax,eax
   14001b6fa:	jne    0x14001c1a3
   14001b700:	xor    eax,eax
   14001b702:	jmp    0x14001c1d6
   14001b707:	cmp    edx,0x6
   14001b70a:	jne    0x14001b722
   14001b70c:	mov    rcx,r9
   14001b70f:	call   0x140018e70
   14001b714:	mov    r8,rax
   14001b717:	mov    rdx,r12
   14001b71a:	mov    rcx,rbp
   14001b71d:	call   0x14001ad90
   14001b722:	cmp    r13d,0x20
   14001b726:	jne    0x14001b74c
   14001b728:	mov    rax,rsi
   14001b72b:	shr    rax,0x10
   14001b72f:	movzx  r8d,ax
   14001b733:	movsx  edx,si
   14001b736:	mov    rcx,rbp
   14001b739:	call   0x14001ae34
   14001b73e:	test   eax,eax
   14001b740:	je     0x14001b74c
   14001b742:	mov    QWORD PTR [rsp+0x30],r15
   14001b747:	jmp    0x14001c1a3
   14001b74c:	mov    rax,QWORD PTR [rbp+0x98]
   14001b753:	test   rax,rax
   14001b756:	je     0x14001b7bc
   14001b758:	cmp    DWORD PTR [rax+0xe0],0x0
   14001b75f:	jle    0x14001b7bc
   14001b761:	cmp    r13d,0x200
   14001b768:	jb     0x14001b773
   14001b76a:	cmp    r13d,0x209
   14001b771:	jbe    0x14001b791
   14001b773:	cmp    r13d,0x100
   14001b77a:	jb     0x14001b785
   14001b77c:	cmp    r13d,0x10f
   14001b783:	jbe    0x14001b791
   14001b785:	lea    eax,[r13-0x281]
   14001b78c:	cmp    eax,0x10
   14001b78f:	ja     0x14001b7bc
   14001b791:	mov    rcx,QWORD PTR [rbp+0x98]
   14001b798:	mov    rax,QWORD PTR [rcx]
   14001b79b:	lea    rdx,[rsp+0x30]
   14001b7a0:	mov    QWORD PTR [rsp+0x20],rdx
   14001b7a5:	mov    r9,rsi
   14001b7a8:	mov    r8,r12
   14001b7ab:	mov    edx,r13d
   14001b7ae:	call   QWORD PTR [rax+0x128]
   14001b7b4:	test   eax,eax
   14001b7b6:	jne    0x14001c1a3
   14001b7bc:	mov    rax,QWORD PTR [rbp+0x0]
   14001b7c0:	mov    rcx,rbp
   14001b7c3:	call   QWORD PTR [rax+0x50]
   14001b7c6:	mov    rdi,rax
   14001b7c9:	mov    ebx,eax
   14001b7cb:	xor    ebx,r13d
   14001b7ce:	and    ebx,0x1ff
   14001b7d4:	mov    eax,0x7
   14001b7d9:	mov    DWORD PTR [rsp+0x40],eax
   14001b7dd:	mov    ecx,eax
   14001b7df:	call   0x14002431c
   14001b7e4:	lea    rbx,[rbx+rbx*2]
   14001b7e8:	lea    rdx,[rip+0x41af1]        # 0x14005d2e0
   14001b7ef:	cmp    r13d,DWORD PTR [rdx+rbx*8]
   14001b7f3:	jne    0x14001b831
   14001b7f5:	cmp    rdi,QWORD PTR [rdx+rbx*8+0x10]
   14001b7fa:	jne    0x14001b831
   14001b7fc:	mov    rdi,QWORD PTR [rdx+rbx*8+0x8]
   14001b801:	mov    ecx,0x7
   14001b806:	call   0x1400243b0
   14001b80b:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   14001b813:	test   rdi,rdi
   14001b816:	jne    0x14001b81f
   14001b818:	xor    eax,eax
   14001b81a:	jmp    0x14001c1d6
   14001b81f:	cmp    r13d,0xc000
   14001b826:	jb     0x14001b8f7
   14001b82c:	jmp    0x14001c18e
   14001b831:	mov    DWORD PTR [rdx+rbx*8],r13d
   14001b835:	mov    QWORD PTR [rdx+rbx*8+0x10],rdi
   14001b83a:	mov    rcx,QWORD PTR [rdi]
   14001b83d:	xor    eax,eax
   14001b83f:	cmp    rcx,rax
   14001b842:	je     0x14001c1c4
   14001b848:	cmp    r13d,0xc000
   14001b84f:	jae    0x14001b87e
   14001b851:	mov    rdi,QWORD PTR [rdi+0x8]
   14001b855:	cmp    QWORD PTR [rdi+0x10],rax
   14001b859:	je     0x14001b874
   14001b85b:	cmp    DWORD PTR [rdi],r13d
   14001b85e:	jne    0x14001b86a
   14001b860:	cmp    DWORD PTR [rdi+0x4],eax
   14001b863:	jne    0x14001b86a
   14001b865:	cmp    DWORD PTR [rdi+0x8],eax
   14001b868:	jbe    0x14001b877
   14001b86a:	add    rdi,0x20
   14001b86e:	cmp    QWORD PTR [rdi+0x10],rax
   14001b872:	jne    0x14001b85b
   14001b874:	mov    rdi,rax
   14001b877:	cmp    rdi,rax
   14001b87a:	jne    0x14001b8d9
   14001b87c:	jmp    0x14001b8c1
   14001b87e:	mov    rdi,QWORD PTR [rdi+0x8]
   14001b882:	cmp    QWORD PTR [rdi+0x10],rax
   14001b886:	je     0x14001b8a4
   14001b888:	cmp    DWORD PTR [rdi],0xc000
   14001b88e:	jne    0x14001b89a
   14001b890:	cmp    DWORD PTR [rdi+0x4],eax
   14001b893:	jne    0x14001b89a
   14001b895:	cmp    DWORD PTR [rdi+0x8],eax
   14001b898:	jbe    0x14001b8a7
   14001b89a:	add    rdi,0x20
   14001b89e:	cmp    QWORD PTR [rdi+0x10],rax
   14001b8a2:	jne    0x14001b888
   14001b8a4:	mov    rdi,rax
   14001b8a7:	cmp    rdi,rax
   14001b8aa:	je     0x14001b8c1
   14001b8ac:	mov    rax,QWORD PTR [rdi+0x10]
   14001b8b0:	cmp    DWORD PTR [rax],r13d
   14001b8b3:	je     0x14001c170
   14001b8b9:	add    rdi,0x20
   14001b8bd:	xor    eax,eax
   14001b8bf:	jmp    0x14001b882
   14001b8c1:	call   rcx
   14001b8c3:	mov    rdi,rax
   14001b8c6:	mov    rcx,QWORD PTR [rax]
   14001b8c9:	xor    eax,eax
   14001b8cb:	cmp    rcx,rax
   14001b8ce:	je     0x14001c1bd
   14001b8d4:	jmp    0x14001b848
   14001b8d9:	lea    rax,[rip+0x41a00]        # 0x14005d2e0
   14001b8e0:	mov    QWORD PTR [rax+rbx*8+0x8],rdi
   14001b8e5:	mov    ecx,0x7
   14001b8ea:	call   0x1400243b0
   14001b8ef:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   14001b8f7:	mov    rbx,QWORD PTR [rdi+0x18]
   14001b8fb:	mov    rcx,QWORD PTR [rdi+0x10]
   14001b8ff:	cmp    rcx,0x1d
   14001b903:	ja     0x14001bd81
   14001b909:	cmp    rcx,0x1d
   14001b90d:	je     0x14001bd6f
   14001b913:	cmp    rcx,0xf
   14001b917:	ja     0x14001bc16
   14001b91d:	cmp    rcx,0xf
   14001b921:	je     0x14001bbed
   14001b927:	cmp    rcx,0x8
   14001b92b:	ja     0x14001badd
   14001b931:	cmp    rcx,0x8
   14001b935:	je     0x14001ba2f
   14001b93b:	sub    rcx,r15
   14001b93e:	je     0x14001ba12
   14001b944:	sub    rcx,r15
   14001b947:	je     0x14001b9fd
   14001b94d:	sub    rcx,r15
   14001b950:	je     0x14001b9e8
   14001b956:	sub    rcx,r15
   14001b959:	je     0x14001b9d3
   14001b95b:	sub    rcx,r15
   14001b95e:	je     0x14001b9a3
   14001b960:	sub    rcx,r15
   14001b963:	je     0x14001b983
   14001b965:	cmp    rcx,r15
   14001b968:	jne    0x14001c1a3
   14001b96e:	mov    rdx,rsi
   14001b971:	mov    rcx,rbp
   14001b974:	call   rbx
   14001b976:	movsxd rcx,eax
   14001b979:	mov    QWORD PTR [rsp+0x30],rcx
   14001b97e:	jmp    0x14001c1a3
   14001b983:	mov    rcx,r12
   14001b986:	call   0x140018e70
   14001b98b:	mov    rdx,rax
   14001b98e:	mov    r8,rsi
   14001b991:	mov    rcx,rbp
   14001b994:	call   rbx
   14001b996:	movsxd rcx,eax
   14001b999:	mov    QWORD PTR [rsp+0x30],rcx
   14001b99e:	jmp    0x14001c1a3
   14001b9a3:	mov    rax,rsi
   14001b9a6:	shr    rax,0x10
   14001b9aa:	movzx  edi,ax
   14001b9ad:	movzx  esi,si
   14001b9b0:	mov    rcx,r12
   14001b9b3:	call   0x140018e70
   14001b9b8:	mov    rdx,rax
   14001b9bb:	mov    r9d,edi
   14001b9be:	mov    r8d,esi
   14001b9c1:	mov    rcx,rbp
   14001b9c4:	call   rbx
   14001b9c6:	movsxd rcx,eax
   14001b9c9:	mov    QWORD PTR [rsp+0x30],rcx
   14001b9ce:	jmp    0x14001c1a3
   14001b9d3:	mov    rdx,r12
   14001b9d6:	mov    rcx,rbp
   14001b9d9:	call   rbx
   14001b9db:	movsxd rcx,eax
   14001b9de:	mov    QWORD PTR [rsp+0x30],rcx
   14001b9e3:	jmp    0x14001c1a3
   14001b9e8:	mov    edx,r12d
   14001b9eb:	mov    rcx,rbp
   14001b9ee:	call   rbx
   14001b9f0:	movsxd rcx,eax
   14001b9f3:	mov    QWORD PTR [rsp+0x30],rcx
   14001b9f8:	jmp    0x14001c1a3
   14001b9fd:	mov    edx,r12d
   14001ba00:	mov    rcx,rbp
   14001ba03:	call   rbx
   14001ba05:	movsxd rcx,eax
   14001ba08:	mov    QWORD PTR [rsp+0x30],rcx
   14001ba0d:	jmp    0x14001c1a3
   14001ba12:	mov    rcx,r12
   14001ba15:	call   0x140020c14
   14001ba1a:	mov    rdx,rax
   14001ba1d:	mov    rcx,rbp
   14001ba20:	call   rbx
   14001ba22:	movsxd rcx,eax
   14001ba25:	mov    QWORD PTR [rsp+0x30],rcx
   14001ba2a:	jmp    0x14001c1a3
   14001ba2f:	lea    rcx,[rsp+0x48]
   14001ba34:	call   0x140020544
   14001ba39:	nop
   14001ba3a:	mov    rax,QWORD PTR [rsi+0x8]
   14001ba3e:	mov    QWORD PTR [rsp+0x50],rax
   14001ba43:	lea    rcx,[rsp+0x70]
   14001ba48:	call   0x140016de8
   14001ba4d:	nop
   14001ba4e:	mov    rcx,QWORD PTR [rsi]
   14001ba51:	mov    QWORD PTR [rsp+0xb0],rcx
   14001ba59:	mov    edi,DWORD PTR [rsi+0x10]
   14001ba5c:	call   0x140018eb4
   14001ba61:	test   rax,rax
   14001ba64:	jne    0x14001ba9f
   14001ba66:	mov    rcx,QWORD PTR [rbp+0x98]
   14001ba6d:	test   rcx,rcx
   14001ba70:	je     0x14001ba9a
   14001ba72:	add    rcx,0x48
   14001ba76:	mov    rdx,QWORD PTR [rsp+0xb0]
   14001ba7e:	call   0x14002541c
   14001ba83:	mov    rcx,QWORD PTR [rsp+0x110]
   14001ba8b:	test   rax,rax
   14001ba8e:	cmovne rcx,rax
   14001ba92:	mov    QWORD PTR [rsp+0x110],rcx
   14001ba9a:	lea    rax,[rsp+0x70]
   14001ba9f:	mov    r9d,edi
   14001baa2:	mov    r8,rax
   14001baa5:	lea    rdx,[rsp+0x48]
   14001baaa:	mov    rcx,rbp
   14001baad:	call   rbx
   14001baaf:	and    QWORD PTR [rsp+0x50],0x0
   14001bab5:	and    QWORD PTR [rsp+0xb0],0x0
   14001babe:	mov    QWORD PTR [rsp+0x30],rax
   14001bac3:	lea    rcx,[rsp+0x70]
   14001bac8:	call   0x140019964
   14001bacd:	nop
   14001bace:	lea    rcx,[rsp+0x48]
   14001bad3:	call   0x140020cd4
   14001bad8:	jmp    0x14001c1a3
   14001badd:	sub    rcx,0x9
   14001bae1:	je     0x14001bbb1
   14001bae7:	sub    rcx,r15
   14001baea:	je     0x14001bb83
   14001baf0:	sub    rcx,r15
   14001baf3:	je     0x14001bb62
   14001baf5:	sub    rcx,r15
   14001baf8:	je     0x14001bb32
   14001bafa:	sub    rcx,r15
   14001bafd:	je     0x14001bb1d
   14001baff:	cmp    rcx,r15
   14001bb02:	jne    0x14001c1a3
   14001bb08:	mov    r8,rsi
   14001bb0b:	mov    rdx,r12
   14001bb0e:	mov    rcx,rbp
   14001bb11:	call   rbx
   14001bb13:	mov    QWORD PTR [rsp+0x30],rax
   14001bb18:	jmp    0x14001c1a3
   14001bb1d:	mov    rdx,rsi
   14001bb20:	mov    rcx,rbp
   14001bb23:	call   rbx
   14001bb25:	movsxd rcx,eax
   14001bb28:	mov    QWORD PTR [rsp+0x30],rcx
   14001bb2d:	jmp    0x14001c1a3
   14001bb32:	mov    rax,rsi
   14001bb35:	shr    rax,0x10
   14001bb39:	movzx  edi,ax
   14001bb3c:	movzx  esi,si
   14001bb3f:	mov    rcx,r12
   14001bb42:	call   0x140018e70
   14001bb47:	mov    rdx,rax
   14001bb4a:	mov    r9d,edi
   14001bb4d:	mov    r8d,esi
   14001bb50:	mov    rcx,rbp
   14001bb53:	call   rbx
   14001bb55:	movsxd rcx,eax
   14001bb58:	mov    QWORD PTR [rsp+0x30],rcx
   14001bb5d:	jmp    0x14001c1a3
   14001bb62:	mov    rax,r12
   14001bb65:	shr    rax,0x10
   14001bb69:	movzx  r8d,ax
   14001bb6d:	movzx  edx,r12w
   14001bb71:	mov    rcx,rbp
   14001bb74:	call   rbx
   14001bb76:	movsxd rcx,eax
   14001bb79:	mov    QWORD PTR [rsp+0x30],rcx
   14001bb7e:	jmp    0x14001c1a3
   14001bb83:	mov    rax,r12
   14001bb86:	shr    rax,0x10
   14001bb8a:	movzx  edi,ax
   14001bb8d:	mov    rcx,rsi
   14001bb90:	call   0x140018e70
   14001bb95:	mov    r8,rax
   14001bb98:	movzx  edx,r12w
   14001bb9c:	mov    r9d,edi
   14001bb9f:	mov    rcx,rbp
   14001bba2:	call   rbx
   14001bba4:	movsxd rcx,eax
   14001bba7:	mov    QWORD PTR [rsp+0x30],rcx
   14001bbac:	jmp    0x14001c1a3
   14001bbb1:	lea    rcx,[rsp+0x48]
   14001bbb6:	call   0x140020544
   14001bbbb:	nop
   14001bbbc:	mov    rax,QWORD PTR [rsi+0x8]
   14001bbc0:	mov    QWORD PTR [rsp+0x50],rax
   14001bbc5:	mov    r8d,DWORD PTR [rsi+0x10]
   14001bbc9:	lea    rdx,[rsp+0x48]
   14001bbce:	mov    rcx,rbp
   14001bbd1:	call   rbx
   14001bbd3:	and    QWORD PTR [rsp+0x50],0x0
   14001bbd9:	mov    QWORD PTR [rsp+0x30],rax
   14001bbde:	lea    rcx,[rsp+0x48]
   14001bbe3:	call   0x140020cd4
   14001bbe8:	jmp    0x14001c1a3
   14001bbed:	mov    rcx,rsi
   14001bbf0:	call   0x140024184
   14001bbf5:	mov    r9,rax
   14001bbf8:	mov    rax,r12
   14001bbfb:	shr    rax,0x10
   14001bbff:	movzx  r8d,ax
   14001bc03:	movzx  edx,r12w
   14001bc07:	mov    rcx,rbp
   14001bc0a:	call   rbx
   14001bc0c:	mov    QWORD PTR [rsp+0x30],rax
   14001bc11:	jmp    0x14001c1a3
   14001bc16:	cmp    rcx,0x16
   14001bc1a:	ja     0x14001bcb6
   14001bc20:	cmp    rcx,0x16
   14001bc24:	je     0x14001bc9d
   14001bc26:	sub    rcx,0x10
   14001bc2a:	je     0x14001bc8d
   14001bc2c:	sub    rcx,r15
   14001bc2f:	je     0x14001bc80
   14001bc31:	sub    rcx,r15
   14001bc34:	je     0x14001bc70
   14001bc36:	sub    rcx,r15
   14001bc39:	je     0x14001bc66
   14001bc3b:	sub    rcx,r15
   14001bc3e:	je     0x14001bc59
   14001bc40:	cmp    rcx,r15
   14001bc43:	jne    0x14001c1a3
   14001bc49:	mov    r8d,esi
   14001bc4c:	mov    edx,r12d
   14001bc4f:	mov    rcx,rbp
   14001bc52:	call   rbx
   14001bc54:	jmp    0x14001c1a3
   14001bc59:	mov    edx,r12d
   14001bc5c:	mov    rcx,rbp
   14001bc5f:	call   rbx
   14001bc61:	jmp    0x14001c1a3
   14001bc66:	mov    rcx,rbp
   14001bc69:	call   rbx
   14001bc6b:	jmp    0x14001c1a3
   14001bc70:	mov    r8,rsi
   14001bc73:	mov    rdx,r12
   14001bc76:	mov    rcx,rbp
   14001bc79:	call   rbx
   14001bc7b:	jmp    0x14001c1a3
   14001bc80:	mov    rdx,r12
   14001bc83:	mov    rcx,rbp
   14001bc86:	call   rbx
   14001bc88:	jmp    0x14001c1a3
   14001bc8d:	mov    r8,rsi
   14001bc90:	mov    edx,r12d
   14001bc93:	mov    rcx,rbp
   14001bc96:	call   rbx
   14001bc98:	jmp    0x14001c1a3
   14001bc9d:	mov    rax,r12
   14001bca0:	shr    rax,0x10
   14001bca4:	movzx  r8d,ax
   14001bca8:	movzx  edx,r12w
   14001bcac:	mov    rcx,rbp
   14001bcaf:	call   rbx
   14001bcb1:	jmp    0x14001c1a3
   14001bcb6:	sub    rcx,0x17
   14001bcba:	je     0x14001bd57
   14001bcc0:	sub    rcx,r15
   14001bcc3:	je     0x14001bd3b
   14001bcc5:	sub    rcx,r15
   14001bcc8:	je     0x14001bd1f
   14001bcca:	sub    rcx,r15
   14001bccd:	je     0x14001bd07
   14001bccf:	sub    rcx,r15
   14001bcd2:	je     0x14001bcf2
   14001bcd4:	cmp    rcx,r15
   14001bcd7:	jne    0x14001c1a3
   14001bcdd:	mov    edx,r12d
   14001bce0:	mov    rcx,rbp
   14001bce3:	call   rbx
   14001bce5:	mov    r11d,eax
   14001bce8:	mov    QWORD PTR [rsp+0x30],r11
   14001bced:	jmp    0x14001c1a3
   14001bcf2:	mov    edx,r12d
   14001bcf5:	mov    rcx,rbp
   14001bcf8:	call   rbx
   14001bcfa:	movsxd rcx,eax
   14001bcfd:	mov    QWORD PTR [rsp+0x30],rcx
   14001bd02:	jmp    0x14001c1a3
   14001bd07:	mov    rcx,rsi
   14001bd0a:	call   0x140018e70
   14001bd0f:	mov    r8,rax
   14001bd12:	mov    edx,r12d
   14001bd15:	mov    rcx,rbp
   14001bd18:	call   rbx
   14001bd1a:	jmp    0x14001c1a3
   14001bd1f:	mov    rax,rsi
   14001bd22:	shr    rax,0x10
   14001bd26:	movzx  r9d,ax
   14001bd2a:	movzx  r8d,si
   14001bd2e:	mov    edx,r12d
   14001bd31:	mov    rcx,rbp
   14001bd34:	call   rbx
   14001bd36:	jmp    0x14001c1a3
   14001bd3b:	mov    rax,rsi
   14001bd3e:	shr    rax,0x10
   14001bd42:	movzx  r9d,ax
   14001bd46:	movzx  r8d,si
   14001bd4a:	mov    edx,r12d
   14001bd4d:	mov    rcx,rbp
   14001bd50:	call   rbx
   14001bd52:	jmp    0x14001c1a3
   14001bd57:	mov    rax,rsi
   14001bd5a:	shr    rax,0x10
   14001bd5e:	movsx  r8d,ax
   14001bd62:	movsx  edx,si
   14001bd65:	mov    rcx,rbp
   14001bd68:	call   rbx
   14001bd6a:	jmp    0x14001c1a3
   14001bd6f:	mov    rcx,rbp
   14001bd72:	call   rbx
   14001bd74:	movsxd rcx,eax
   14001bd77:	mov    QWORD PTR [rsp+0x30],rcx
   14001bd7c:	jmp    0x14001c1a3
   14001bd81:	cmp    rcx,0x2c
   14001bd85:	ja     0x14001bfa8
   14001bd8b:	cmp    rcx,0x2c
   14001bd8f:	je     0x14001bf9b
   14001bd95:	cmp    rcx,0x24
   14001bd99:	ja     0x14001be88
   14001bd9f:	cmp    rcx,0x24
   14001bda3:	je     0x14001be73
   14001bda9:	sub    rcx,0x1e
   14001bdad:	je     0x14001be63
   14001bdb3:	sub    rcx,r15
   14001bdb6:	je     0x14001be37
   14001bdb8:	sub    rcx,r15
   14001bdbb:	je     0x14001be22
   14001bdbd:	sub    rcx,r15
   14001bdc0:	je     0x14001be0d
   14001bdc2:	sub    rcx,r15
   14001bdc5:	je     0x14001bde5
   14001bdc7:	cmp    rcx,r15
   14001bdca:	jne    0x14001c1a3
   14001bdd0:	mov    rcx,r12
   14001bdd3:	call   0x140018e70
   14001bdd8:	mov    rdx,rax
   14001bddb:	mov    rcx,rbp
   14001bdde:	call   rbx
   14001bde0:	jmp    0x14001c1a3
   14001bde5:	mov    rax,rsi
   14001bde8:	shr    rax,0x10
   14001bdec:	movsx  edi,ax
   14001bdef:	movsx  esi,si
   14001bdf2:	mov    rcx,r12
   14001bdf5:	call   0x140024184
   14001bdfa:	mov    rdx,rax
   14001bdfd:	mov    r9d,edi
   14001be00:	mov    r8d,esi
   14001be03:	mov    rcx,rbp
   14001be06:	call   rbx
   14001be08:	jmp    0x14001c1a3
   14001be0d:	mov    rcx,r12
   14001be10:	call   0x140024184
   14001be15:	mov    rdx,rax
   14001be18:	mov    rcx,rbp
   14001be1b:	call   rbx
   14001be1d:	jmp    0x14001c1a3
   14001be22:	mov    rcx,r12
   14001be25:	call   0x140020c14
   14001be2a:	mov    rdx,rax
   14001be2d:	mov    rcx,rbp
   14001be30:	call   rbx
   14001be32:	jmp    0x14001c1a3
   14001be37:	mov    rcx,r12
   14001be3a:	call   0x140018e70
   14001be3f:	mov    rdi,rax
   14001be42:	mov    rcx,rsi
   14001be45:	call   0x140018e70
   14001be4a:	mov    r8,rax
   14001be4d:	xor    edx,edx
   14001be4f:	cmp    QWORD PTR [rbp+0x40],rsi
   14001be53:	sete   dl
   14001be56:	mov    r9,rdi
   14001be59:	mov    rcx,rbp
   14001be5c:	call   rbx
   14001be5e:	jmp    0x14001c1a3
   14001be63:	mov    r8,rsi
   14001be66:	mov    rdx,r12
   14001be69:	mov    rcx,rbp
   14001be6c:	call   rbx
   14001be6e:	jmp    0x14001c1a3
   14001be73:	mov    rcx,rsi
   14001be76:	call   0x140018e70
   14001be7b:	mov    rdx,rax
   14001be7e:	mov    rcx,rbp
   14001be81:	call   rbx
   14001be83:	jmp    0x14001c1a3
   14001be88:	cmp    rcx,0x25
   14001be8c:	je     0x14001bf73
   14001be92:	cmp    rcx,0x26
   14001be96:	je     0x14001bf47
   14001be9c:	cmp    rcx,0x27
   14001bea0:	je     0x14001bf2f
   14001bea6:	cmp    rcx,0x28
   14001beaa:	je     0x14001bf20
   14001beac:	cmp    rcx,0x29
   14001beb0:	je     0x14001befa
   14001beb2:	lea    rax,[rcx-0x2a]
   14001beb6:	cmp    rax,r15
   14001beb9:	ja     0x14001c1a3
   14001bebf:	movsx  edi,r12w
   14001bec3:	shr    r12,0x10
   14001bec7:	movsx  r12d,r12w
   14001becb:	cmp    rcx,0x2a
   14001becf:	jne    0x14001beeb
   14001bed1:	mov    rcx,rsi
   14001bed4:	call   0x140018e70
   14001bed9:	mov    r9,rax
   14001bedc:	mov    r8d,r12d
   14001bedf:	mov    edx,edi
   14001bee1:	mov    rcx,rbp
   14001bee4:	call   rbx
   14001bee6:	jmp    0x14001c1a3
   14001beeb:	mov    r8d,r12d
   14001beee:	mov    edx,edi
   14001bef0:	mov    rcx,rbp
   14001bef3:	call   rbx
   14001bef5:	jmp    0x14001c1a3
   14001befa:	mov    rax,r12
   14001befd:	shr    rax,0x10
   14001bf01:	movzx  edi,ax
   14001bf04:	mov    rcx,rsi
   14001bf07:	call   0x140018e70
   14001bf0c:	mov    r8,rax
   14001bf0f:	movzx  edx,r12w
   14001bf13:	mov    r9d,edi
   14001bf16:	mov    rcx,rbp
   14001bf19:	call   rbx
   14001bf1b:	jmp    0x14001c1a3
   14001bf20:	mov    rcx,rbp
   14001bf23:	call   rbx
   14001bf25:	mov    QWORD PTR [rsp+0x30],rax
   14001bf2a:	jmp    0x14001c1a3
   14001bf2f:	mov    rcx,r12
   14001bf32:	call   0x140018e70
   14001bf37:	mov    rdx,rax
   14001bf3a:	mov    r8,rsi
   14001bf3d:	mov    rcx,rbp
   14001bf40:	call   rbx
   14001bf42:	jmp    0x14001c1a3
   14001bf47:	movsx  eax,si
   14001bf4a:	mov    DWORD PTR [rsp+0x38],eax
   14001bf4e:	shr    rsi,0x10
   14001bf52:	movsx  eax,si
   14001bf55:	mov    DWORD PTR [rsp+0x3c],eax
   14001bf59:	mov    rcx,r12
   14001bf5c:	call   0x140018e70
   14001bf61:	mov    rdx,rax
   14001bf64:	mov    r8,QWORD PTR [rsp+0x38]
   14001bf69:	mov    rcx,rbp
   14001bf6c:	call   rbx
   14001bf6e:	jmp    0x14001c1a3
   14001bf73:	mov    rax,rsi
   14001bf76:	shr    rax,0x10
   14001bf7a:	movzx  edi,ax
   14001bf7d:	movzx  esi,si
   14001bf80:	mov    rcx,r12
   14001bf83:	call   0x140018e70
   14001bf88:	mov    rdx,rax
   14001bf8b:	mov    r9d,edi
   14001bf8e:	mov    r8d,esi
   14001bf91:	mov    rcx,rbp
   14001bf94:	call   rbx
   14001bf96:	jmp    0x14001c1a3
   14001bf9b:	mov    rdx,rsi
   14001bf9e:	mov    rcx,rbp
   14001bfa1:	call   rbx
   14001bfa3:	jmp    0x14001c1a3
   14001bfa8:	cmp    rcx,0x33
   14001bfac:	ja     0x14001c078
   14001bfb2:	cmp    rcx,0x33
   14001bfb6:	je     0x14001c06b
   14001bfbc:	sub    rcx,0x2d
   14001bfc0:	je     0x14001c05b
   14001bfc6:	sub    rcx,r15
   14001bfc9:	je     0x14001c046
   14001bfcb:	sub    rcx,r15
   14001bfce:	je     0x14001c02e
   14001bfd0:	sub    rcx,r15
   14001bfd3:	je     0x14001c005
   14001bfd5:	sub    rcx,r15
   14001bfd8:	je     0x14001bff3
   14001bfda:	cmp    rcx,r15
   14001bfdd:	jne    0x14001c1a3
   14001bfe3:	mov    r8,rsi
   14001bfe6:	mov    edx,r12d
   14001bfe9:	mov    rcx,rbp
   14001bfec:	call   rbx
   14001bfee:	jmp    0x14001c1a3
   14001bff3:	mov    rcx,rbp
   14001bff6:	call   rbx
   14001bff8:	mov    r11d,eax
   14001bffb:	mov    QWORD PTR [rsp+0x30],r11
   14001c000:	jmp    0x14001c1a3
   14001c005:	movsx  eax,si
   14001c008:	mov    DWORD PTR [rsp+0x38],eax
   14001c00c:	shr    rsi,0x10
   14001c010:	movsx  eax,si
   14001c013:	mov    DWORD PTR [rsp+0x3c],eax
   14001c017:	mov    rdx,QWORD PTR [rsp+0x38]
   14001c01c:	mov    rcx,rbp
   14001c01f:	call   rbx
   14001c021:	mov    r11d,eax
   14001c024:	mov    QWORD PTR [rsp+0x30],r11
   14001c029:	jmp    0x14001c1a3
   14001c02e:	mov    r8,rsi
   14001c031:	mov    edx,r12d
   14001c034:	mov    rcx,rbp
   14001c037:	call   rbx
   14001c039:	movsxd rcx,eax
   14001c03c:	mov    QWORD PTR [rsp+0x30],rcx
   14001c041:	jmp    0x14001c1a3
   14001c046:	mov    r8,rsi
   14001c049:	mov    edx,r12d
   14001c04c:	mov    rcx,rbp
   14001c04f:	call   rbx
   14001c051:	mov    QWORD PTR [rsp+0x30],r15
   14001c056:	jmp    0x14001c1a3
   14001c05b:	mov    r8,rsi
   14001c05e:	mov    edx,r12d
   14001c061:	mov    rcx,rbp
   14001c064:	call   rbx
   14001c066:	jmp    0x14001c1a3
   14001c06b:	mov    rdx,rsi
   14001c06e:	mov    rcx,rbp
   14001c071:	call   rbx
   14001c073:	jmp    0x14001c1a3
   14001c078:	sub    rcx,0x34
   14001c07c:	je     0x14001c157
   14001c082:	sub    rcx,r15
   14001c085:	je     0x14001c136
   14001c08b:	sub    rcx,r15
   14001c08e:	je     0x14001c124
   14001c094:	sub    rcx,r15
   14001c097:	je     0x14001c0e8
   14001c099:	sub    rcx,0xd
   14001c09d:	je     0x14001c0ce
   14001c09f:	cmp    rcx,r15
   14001c0a2:	jne    0x14001c1a3
   14001c0a8:	movsx  eax,si
   14001c0ab:	mov    DWORD PTR [rsp+0x38],eax
   14001c0af:	shr    rsi,0x10
   14001c0b3:	movsx  eax,si
   14001c0b6:	mov    DWORD PTR [rsp+0x3c],eax
   14001c0ba:	mov    rdx,QWORD PTR [rsp+0x38]
   14001c0bf:	mov    rcx,rbp
   14001c0c2:	call   rbx
   14001c0c4:	mov    QWORD PTR [rsp+0x30],rax
   14001c0c9:	jmp    0x14001c1a3
   14001c0ce:	mov    rcx,rbp
   14001c0d1:	call   rbx
   14001c0d3:	mov    QWORD PTR [rsp+0x30],rax
   14001c0d8:	test   rax,rax
   14001c0db:	je     0x14001c1a3
   14001c0e1:	xor    eax,eax
   14001c0e3:	jmp    0x14001c1d6
   14001c0e8:	movsx  eax,si
   14001c0eb:	mov    DWORD PTR [rsp+0x38],eax
   14001c0ef:	shr    rsi,0x10
   14001c0f3:	movsx  eax,si
   14001c0f6:	mov    DWORD PTR [rsp+0x3c],eax
   14001c0fa:	mov    r8,r12
   14001c0fd:	shr    r8,0x10
   14001c101:	movzx  edx,r12w
   14001c105:	mov    r9,QWORD PTR [rsp+0x38]
   14001c10a:	mov    rcx,rbp
   14001c10d:	call   rbx
   14001c10f:	cdqe   
   14001c111:	mov    QWORD PTR [rsp+0x30],rax
   14001c116:	test   rax,rax
   14001c119:	jne    0x14001c1a3
   14001c11f:	jmp    0x14001c1d6
   14001c124:	mov    r8,rsi
   14001c127:	mov    edx,r12d
   14001c12a:	mov    rcx,rbp
   14001c12d:	call   rbx
   14001c12f:	mov    QWORD PTR [rsp+0x30],r15
   14001c134:	jmp    0x14001c1a3
   14001c136:	movsx  eax,si
   14001c139:	mov    DWORD PTR [rsp+0x38],eax
   14001c13d:	shr    rsi,0x10
   14001c141:	movsx  eax,si
   14001c144:	mov    DWORD PTR [rsp+0x3c],eax
   14001c148:	mov    r8,QWORD PTR [rsp+0x38]
   14001c14d:	mov    edx,r12d
   14001c150:	mov    rcx,rbp
   14001c153:	call   rbx
   14001c155:	jmp    0x14001c1a3
   14001c157:	mov    rax,r12
   14001c15a:	shr    rax,0x10
   14001c15e:	movzx  r8d,ax
   14001c162:	movzx  edx,r12w
   14001c166:	mov    r9,rsi
   14001c169:	mov    rcx,rbp
   14001c16c:	call   rbx
   14001c16e:	jmp    0x14001c1a3
   14001c170:	lea    rax,[rip+0x41169]        # 0x14005d2e0
   14001c177:	mov    QWORD PTR [rax+rbx*8+0x8],rdi
   14001c17c:	mov    ecx,0x7
   14001c181:	call   0x1400243b0
   14001c186:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   14001c18e:	mov    r9,QWORD PTR [rdi+0x18]
   14001c192:	mov    r8,rsi
   14001c195:	mov    rdx,r12
   14001c198:	mov    rcx,rbp
   14001c19b:	call   r9
   14001c19e:	mov    QWORD PTR [rsp+0x30],rax
   14001c1a3:	mov    rdx,QWORD PTR [rsp+0x160]
   14001c1ab:	test   rdx,rdx
   14001c1ae:	je     0x14001c1b8
   14001c1b0:	mov    rcx,QWORD PTR [rsp+0x30]
   14001c1b5:	mov    QWORD PTR [rdx],rcx
   14001c1b8:	mov    eax,r15d
   14001c1bb:	jmp    0x14001c1d6
   14001c1bd:	lea    rdx,[rip+0x4111c]        # 0x14005d2e0
   14001c1c4:	mov    QWORD PTR [rdx+rbx*8+0x8],rax
   14001c1c9:	mov    ecx,0x7
   14001c1ce:	call   0x1400243b0
   14001c1d3:	nop
   14001c1d4:	xor    eax,eax
   14001c1d6:	lea    r11,[rsp+0x120]
   14001c1de:	mov    rbx,QWORD PTR [r11+0x20]
   14001c1e2:	mov    rbp,QWORD PTR [r11+0x28]
   14001c1e6:	mov    rsi,QWORD PTR [r11+0x30]
   14001c1ea:	mov    rdi,QWORD PTR [r11+0x38]
   14001c1ee:	mov    rsp,r11
   14001c1f1:	pop    r15
   14001c1f3:	pop    r13
   14001c1f5:	pop    r12
   14001c1f7:	ret    
   14001c1f8:	int3   
   14001c1f9:	int3   
   14001c1fa:	int3   
   14001c1fb:	int3   
   14001c1fc:	int3   
   14001c1fd:	int3   
   14001c1fe:	int3   
   14001c1ff:	int3   
   14001c200:	int3   
   14001c201:	int3   
   14001c202:	int3   
   14001c203:	int3   
   14001c204:	rex push rbp
   14001c206:	sub    rsp,0x20
   14001c20a:	mov    rbp,rdx
   14001c20d:	lea    rcx,[rbp+0x40]
   14001c211:	call   0x140018cc8
   14001c216:	add    rsp,0x20
   14001c21a:	pop    rbp
   14001c21b:	ret    
   14001c21c:	int3   
   14001c21d:	int3   
   14001c21e:	int3   
   14001c21f:	int3   
   14001c220:	int3   
   14001c221:	int3   
   14001c222:	int3   
   14001c223:	int3   
   14001c224:	rex push rbp
   14001c226:	sub    rsp,0x20
   14001c22a:	mov    rbp,rdx
   14001c22d:	lea    rcx,[rbp+0x48]
   14001c231:	call   0x140020cd4
   14001c236:	add    rsp,0x20
   14001c23a:	pop    rbp
   14001c23b:	ret    
   14001c23c:	int3   
   14001c23d:	int3   
   14001c23e:	int3   
   14001c23f:	int3   
   14001c240:	int3   
   14001c241:	int3   
   14001c242:	int3   
   14001c243:	int3   
   14001c244:	rex push rbp
   14001c246:	sub    rsp,0x20
   14001c24a:	mov    rbp,rdx
   14001c24d:	lea    rcx,[rbp+0x70]
   14001c251:	call   0x140019964
   14001c256:	add    rsp,0x20
   14001c25a:	pop    rbp
   14001c25b:	ret    
   14001c25c:	int3   
   14001c25d:	int3   
   14001c25e:	int3   
   14001c25f:	int3   
   14001c260:	int3   
   14001c261:	int3   
   14001c262:	int3   
   14001c263:	int3   
   14001c264:	rex push rbp
   14001c266:	sub    rsp,0x20
   14001c26a:	mov    rbp,rdx
   14001c26d:	lea    rcx,[rbp+0x48]
   14001c271:	call   0x140020cd4
   14001c276:	add    rsp,0x20
   14001c27a:	pop    rbp
   14001c27b:	ret    
   14001c27c:	rex push rbx
   14001c27e:	sub    rsp,0x50
   14001c282:	cmp    edx,0x2b
   14001c285:	jb     0x14001c2ca
   14001c287:	cmp    edx,0x2f
   14001c28a:	jbe    0x14001c386
   14001c290:	cmp    edx,0x39
   14001c293:	je     0x14001c386
   14001c299:	cmp    edx,0x4e
   14001c29c:	je     0x14001c354
   14001c2a2:	cmp    edx,0x111
   14001c2a8:	je     0x14001c31a
   14001c2aa:	cmp    edx,0x113
   14001c2b0:	jbe    0x14001c2ca
   14001c2b2:	cmp    edx,0x115
   14001c2b8:	jbe    0x14001c386
   14001c2be:	cmp    edx,0x210
   14001c2c4:	je     0x14001c386
   14001c2ca:	lea    eax,[rdx-0x132]
   14001c2d0:	cmp    eax,0x6
   14001c2d3:	ja     0x14001c3a0
   14001c2d9:	mov    rbx,QWORD PTR [rsp+0x80]
   14001c2e1:	lea    eax,[rdx-0x132]
   14001c2e7:	mov    QWORD PTR [rsp+0x38],r8
   14001c2ec:	lea    r9,[rsp+0x30]
   14001c2f1:	xor    r8d,r8d
   14001c2f4:	mov    edx,0xbc19
   14001c2f9:	mov    QWORD PTR [rsp+0x20],rbx
   14001c2fe:	mov    DWORD PTR [rsp+0x40],eax
   14001c302:	call   0x14001b664
   14001c307:	mov    rcx,QWORD PTR [rbx]
   14001c30a:	mov    r11d,eax
   14001c30d:	neg    rcx
   14001c310:	sbb    eax,eax
   14001c312:	and    eax,r11d
   14001c315:	jmp    0x14001c3a2
   14001c31a:	and    QWORD PTR [rsp+0x20],0x0
   14001c320:	shr    r8,0x10
   14001c324:	xor    r9d,r9d
   14001c327:	movzx  r8d,r8w
   14001c32b:	xor    edx,edx
   14001c32d:	or     r8d,0xbd110000
   14001c334:	call   0x140014a98
   14001c339:	test   eax,eax
   14001c33b:	je     0x14001c3a0
   14001c33d:	mov    rcx,QWORD PTR [rsp+0x80]
   14001c345:	mov    eax,0x1
   14001c34a:	test   rcx,rcx
   14001c34d:	je     0x14001c3a2
   14001c34f:	mov    QWORD PTR [rcx],rax
   14001c352:	jmp    0x14001c3a2
   14001c354:	movzx  r8d,WORD PTR [r9+0x10]
   14001c359:	mov    rax,QWORD PTR [rsp+0x80]
   14001c361:	and    QWORD PTR [rsp+0x20],0x0
   14001c367:	mov    QWORD PTR [rsp+0x38],r9
   14001c36c:	lea    r9,[rsp+0x30]
   14001c371:	or     r8d,0xbc4e0000
   14001c378:	xor    edx,edx
   14001c37a:	mov    QWORD PTR [rsp+0x30],rax
   14001c37f:	call   0x140014a98
   14001c384:	jmp    0x14001c3a2
   14001c386:	mov    rax,QWORD PTR [rsp+0x80]
   14001c38e:	add    edx,0xbc00
   14001c394:	mov    QWORD PTR [rsp+0x20],rax
   14001c399:	call   0x14001b664
   14001c39e:	jmp    0x14001c3a2
   14001c3a0:	xor    eax,eax
   14001c3a2:	add    rsp,0x50
   14001c3a6:	pop    rbx
   14001c3a7:	ret    
   14001c3a8:	rex push rbx
   14001c3aa:	sub    rsp,0x20
   14001c3ae:	and    DWORD PTR [rip+0x40f1b],0x0        # 0x14005d2d0
   14001c3b5:	cmp    QWORD PTR [rcx+0x98],0x0
   14001c3bd:	mov    rbx,rcx
   14001c3c0:	je     0x14001c3d7
   14001c3c2:	mov    rcx,QWORD PTR [rcx+0x98]
   14001c3c9:	mov    edx,0xfffffd3f
   14001c3ce:	mov    rax,QWORD PTR [rcx]
   14001c3d1:	call   QWORD PTR [rax+0xa0]
   14001c3d7:	xor    r8d,r8d
   14001c3da:	xor    edx,edx
   14001c3dc:	mov    rcx,rbx
   14001c3df:	add    rsp,0x20
   14001c3e3:	pop    rbx
   14001c3e4:	jmp    0x14001ab08
   14001c3e9:	int3   
   14001c3ea:	int3   
   14001c3eb:	int3   
   14001c3ec:	mov    QWORD PTR [rsp+0x8],rcx
   14001c3f1:	push   rbx
   14001c3f2:	push   rsi
   14001c3f3:	push   rdi
   14001c3f4:	push   r12
   14001c3f6:	sub    rsp,0x38
   14001c3fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c403:	mov    rsi,rcx
   14001c406:	xor    ebx,ebx
   14001c408:	cmp    rcx,rbx
   14001c40b:	jne    0x14001c417
   14001c40d:	mov    eax,0x80004003
   14001c412:	jmp    0x14001c49b
   14001c417:	mov    QWORD PTR [rcx],rbx
   14001c41a:	mov    r12d,0x8007000e
   14001c420:	mov    DWORD PTR [rsp+0x68],r12d
   14001c425:	mov    QWORD PTR [rsp+0x70],rbx
   14001c42a:	mov    ecx,0x30
   14001c42f:	call   0x1400148c0
   14001c434:	mov    rdi,rax
   14001c437:	mov    QWORD PTR [rsp+0x78],rax
   14001c43c:	cmp    rax,rbx
   14001c43f:	je     0x14001c473
   14001c441:	mov    DWORD PTR [rax+0x28],ebx
   14001c444:	mov    QWORD PTR [rax+0x10],rbx
   14001c448:	mov    QWORD PTR [rax+0x18],rbx
   14001c44c:	lea    rax,[rip+0x28835]        # 0x140044c88
   14001c453:	mov    QWORD PTR [rdi],rax
   14001c456:	lea    rax,[rip+0x287fb]        # 0x140044c58
   14001c45d:	mov    QWORD PTR [rdi+0x8],rax
   14001c461:	lea    rax,[rip+0x287c0]        # 0x140044c28
   14001c468:	mov    QWORD PTR [rdi+0x20],rax
   14001c46c:	call   0x140025f18
   14001c471:	jmp    0x14001c476
   14001c473:	mov    rdi,rbx
   14001c476:	mov    QWORD PTR [rsp+0x70],rdi
   14001c47b:	jmp    0x14001c48e
   14001c47d:	xor    ebx,ebx
   14001c47f:	mov    rsi,QWORD PTR [rsp+0x60]
   14001c484:	mov    r12d,DWORD PTR [rsp+0x68]
   14001c489:	mov    rdi,QWORD PTR [rsp+0x70]
   14001c48e:	cmp    rdi,rbx
   14001c491:	cmovne r12d,ebx
   14001c495:	mov    QWORD PTR [rsi],rdi
   14001c498:	mov    eax,r12d
   14001c49b:	add    rsp,0x38
   14001c49f:	pop    r12
   14001c4a1:	pop    rdi
   14001c4a2:	pop    rsi
   14001c4a3:	pop    rbx
   14001c4a4:	ret    
   14001c4a5:	int3   
   14001c4a6:	int3   
   14001c4a7:	int3   
   14001c4a8:	int3   
   14001c4a9:	int3   
   14001c4aa:	int3   
   14001c4ab:	int3   
   14001c4ac:	rex push rbp
   14001c4ae:	sub    rsp,0x20
   14001c4b2:	mov    rbp,rdx
   14001c4b5:	mov    rcx,QWORD PTR [rbp+0x78]
   14001c4b9:	call   0x14001490c
   14001c4be:	add    rsp,0x20
   14001c4c2:	pop    rbp
   14001c4c3:	ret    
   14001c4c4:	int3   
   14001c4c5:	int3   
   14001c4c6:	int3   
   14001c4c7:	int3   
   14001c4c8:	int3   
   14001c4c9:	int3   
   14001c4ca:	int3   
   14001c4cb:	int3   
   14001c4cc:	mov    QWORD PTR [rsp+0x10],rdx
   14001c4d1:	push   rbp
   14001c4d2:	sub    rsp,0x20
   14001c4d6:	mov    rbp,rdx
   14001c4d9:	mov    rcx,QWORD PTR [rbp+0x28]
   14001c4dd:	call   0x140021780
   14001c4e2:	nop
   14001c4e3:	lea    rax,[rip+0xffffffffffffff93]        # 0x14001c47d
   14001c4ea:	jmp    0x14001c4ec
   14001c4ec:	add    rsp,0x20
   14001c4f0:	pop    rbp
   14001c4f1:	ret    
   14001c4f2:	int3   
   14001c4f3:	int3   
   14001c4f4:	sub    rsp,0x468
   14001c4fb:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001c504:	mov    rax,QWORD PTR [rip+0x3ea75]        # 0x14005af80
   14001c50b:	xor    rax,rsp
   14001c50e:	mov    QWORD PTR [rsp+0x450],rax
   14001c516:	call   0x14001f2e8
   14001c51b:	mov    rcx,QWORD PTR [rax+0x8]
   14001c51f:	call   0x140014d4c
   14001c524:	nop
   14001c525:	mov    rcx,QWORD PTR [rsp+0x450]
   14001c52d:	xor    rcx,rsp
   14001c530:	call   0x140029b40
   14001c535:	add    rsp,0x468
   14001c53c:	ret    
   14001c53d:	int3   
   14001c53e:	int3   
   14001c53f:	int3   
   14001c540:	int3   
   14001c541:	int3   
   14001c542:	int3   
   14001c543:	int3   
   14001c544:	mov    QWORD PTR [rsp+0x10],rdx
   14001c549:	push   rbx
   14001c54a:	push   rbp
   14001c54b:	sub    rsp,0x38
   14001c54f:	mov    rbp,rdx
   14001c552:	call   0x14002157c
   14001c557:	mov    r11,rax
   14001c55a:	xor    ecx,ecx
   14001c55c:	test   rax,rax
   14001c55f:	setne  cl
   14001c562:	test   ecx,ecx
   14001c564:	jne    0x14001c571
   14001c566:	mov    ecx,0x80004005
   14001c56b:	call   0x140003dc0
   14001c570:	int3   
   14001c571:	mov    rax,QWORD PTR [rax]
   14001c574:	mov    rcx,r11
   14001c577:	call   QWORD PTR [rax+0x18]
   14001c57a:	add    rax,0x18
   14001c57e:	mov    QWORD PTR [rbp+0x30],rax
   14001c582:	mov    rcx,QWORD PTR [rbp+0x38]
   14001c586:	mov    rax,QWORD PTR [rcx]
   14001c589:	xor    r9d,r9d
   14001c58c:	mov    r8d,0x200
   14001c592:	lea    rdx,[rbp+0x50]
   14001c596:	call   QWORD PTR [rax+0x18]
   14001c599:	test   eax,eax
   14001c59b:	je     0x14001c5ce
   14001c59d:	lea    rax,[rbp+0x50]
   14001c5a1:	mov    QWORD PTR [rsp+0x28],rax
   14001c5a6:	mov    DWORD PTR [rsp+0x20],0x443
   14001c5ae:	lea    r9,[rip+0x2892b]        # 0x140044ee0
   14001c5b5:	lea    r8,[rip+0x2e6e4]        # 0x14004aca0
   14001c5bc:	lea    rdx,[rip+0x2e6fd]        # 0x14004acc0
   14001c5c3:	lea    rcx,[rbp+0x30]
   14001c5c7:	call   0x140005a00
   14001c5cc:	jmp    0x14001c5f4
   14001c5ce:	mov    DWORD PTR [rsp+0x20],0x443
   14001c5d6:	lea    r9,[rip+0x28903]        # 0x140044ee0
   14001c5dd:	lea    r8,[rip+0x2e6bc]        # 0x14004aca0
   14001c5e4:	lea    rdx,[rip+0x2e6f5]        # 0x14004ace0
   14001c5eb:	lea    rcx,[rbp+0x30]
   14001c5ef:	call   0x140005a00
   14001c5f4:	xor    r8d,r8d
   14001c5f7:	xor    edx,edx
   14001c5f9:	mov    rbx,QWORD PTR [rbp+0x30]
   14001c5fd:	mov    rcx,rbx
   14001c600:	call   0x140021d08
   14001c605:	nop
   14001c606:	lea    rdx,[rbx-0x18]
   14001c60a:	or     eax,0xffffffff
   14001c60d:	lock xadd DWORD PTR [rdx+0x10],eax
   14001c612:	add    eax,0xffffffff
   14001c615:	test   eax,eax
   14001c617:	jg     0x14001c622
   14001c619:	mov    rcx,QWORD PTR [rdx]
   14001c61c:	mov    rax,QWORD PTR [rcx]
   14001c61f:	call   QWORD PTR [rax+0x8]
   14001c622:	mov    rcx,QWORD PTR [rbp+0x38]
   14001c626:	mov    rax,QWORD PTR [rcx]
   14001c629:	mov    edx,0x1
   14001c62e:	call   QWORD PTR [rax+0x8]
   14001c631:	nop
   14001c632:	lea    rax,[rip+0xfffffffffffffeec]        # 0x14001c525
   14001c639:	jmp    0x14001c63b
   14001c63b:	add    rsp,0x38
   14001c63f:	pop    rbp
   14001c640:	pop    rbx
   14001c641:	ret    
   14001c642:	int3   
   14001c643:	int3   
   14001c644:	rex push rbp
   14001c646:	sub    rsp,0x20
   14001c64a:	mov    rbp,rdx
   14001c64d:	lea    rcx,[rbp+0x30]
   14001c651:	call   0x140003de0
   14001c656:	add    rsp,0x20
   14001c65a:	pop    rbp
   14001c65b:	ret    
   14001c65c:	rex push rdi
   14001c65e:	sub    rsp,0x30
   14001c662:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c66b:	mov    QWORD PTR [rsp+0x40],rbx
   14001c670:	mov    QWORD PTR [rsp+0x48],rbp
   14001c675:	mov    QWORD PTR [rsp+0x50],rsi
   14001c67a:	mov    edi,r8d
   14001c67d:	mov    rsi,rdx
   14001c680:	mov    rbx,rcx
   14001c683:	call   0x14001f2e8
   14001c688:	mov    rbp,QWORD PTR [rax+0x8]
   14001c68c:	call   0x14001f2e8
   14001c691:	mov    rcx,QWORD PTR [rax+0x8]
   14001c695:	call   0x140014d2c
   14001c69a:	nop
   14001c69b:	mov    rcx,rbx
   14001c69e:	call   0x14001b594
   14001c6a3:	mov    rcx,rbx
   14001c6a6:	call   0x14001a9fc
   14001c6ab:	test   rax,rax
   14001c6ae:	jne    0x14001c6b6
   14001c6b0:	call   0x1400218c0
   14001c6b5:	int3   
   14001c6b6:	mov    r9,rsi
   14001c6b9:	mov    r8d,edi
   14001c6bc:	mov    rdx,QWORD PTR [rbp+0xc8]
   14001c6c3:	mov    rcx,QWORD PTR [rax+0x40]
   14001c6c7:	call   QWORD PTR [rip+0x2701b]        # 0x1400436e8
   14001c6cd:	test   eax,eax
   14001c6cf:	jne    0x14001c6e2
   14001c6d1:	or     r8d,0xffffffff
   14001c6d5:	xor    edx,edx
   14001c6d7:	mov    ecx,0xf107
   14001c6dc:	call   0x140021d60
   14001c6e1:	nop
   14001c6e2:	lea    rcx,[rsp+0x58]
   14001c6e7:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c6ec:	mov    rbp,QWORD PTR [rsp+0x48]
   14001c6f1:	mov    rsi,QWORD PTR [rsp+0x50]
   14001c6f6:	add    rsp,0x30
   14001c6fa:	pop    rdi
   14001c6fb:	jmp    0x14001c4f4
   14001c700:	int3   
   14001c701:	int3   
   14001c702:	int3   
   14001c703:	int3   
   14001c704:	int3   
   14001c705:	int3   
   14001c706:	int3   
   14001c707:	int3   
   14001c708:	int3   
   14001c709:	int3   
   14001c70a:	int3   
   14001c70b:	int3   
   14001c70c:	rex push rbp
   14001c70e:	sub    rsp,0x20
   14001c712:	mov    rbp,rdx
   14001c715:	lea    rcx,[rbp+0x58]
   14001c719:	call   0x14001c4f4
   14001c71e:	add    rsp,0x20
   14001c722:	pop    rbp
   14001c723:	ret    
   14001c724:	rex push rdi
   14001c726:	sub    rsp,0x30
   14001c72a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c733:	mov    QWORD PTR [rsp+0x40],rbx
   14001c738:	mov    QWORD PTR [rsp+0x48],rbp
   14001c73d:	mov    QWORD PTR [rsp+0x50],rsi
   14001c742:	mov    edi,r8d
   14001c745:	mov    rsi,rdx
   14001c748:	mov    rbx,rcx
   14001c74b:	call   0x14001f2e8
   14001c750:	mov    rbp,QWORD PTR [rax+0x8]
   14001c754:	call   0x14001f2e8
   14001c759:	mov    rcx,QWORD PTR [rax+0x8]
   14001c75d:	call   0x140014d2c
   14001c762:	nop
   14001c763:	mov    rcx,rbx
   14001c766:	call   0x14001b594
   14001c76b:	mov    rcx,rbx
   14001c76e:	call   0x14001a9fc
   14001c773:	test   rax,rax
   14001c776:	jne    0x14001c77e
   14001c778:	call   0x1400218c0
   14001c77d:	int3   
   14001c77e:	mov    r9,rsi
   14001c781:	mov    r8d,edi
   14001c784:	mov    rdx,QWORD PTR [rbp+0xc8]
   14001c78b:	mov    rcx,QWORD PTR [rax+0x40]
   14001c78f:	call   0x14001a70c
   14001c794:	test   rax,rax
   14001c797:	jne    0x14001c7aa
   14001c799:	or     r8d,0xffffffff
   14001c79d:	xor    edx,edx
   14001c79f:	mov    ecx,0xf107
   14001c7a4:	call   0x140021d60
   14001c7a9:	nop
   14001c7aa:	lea    rcx,[rsp+0x58]
   14001c7af:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c7b4:	mov    rbp,QWORD PTR [rsp+0x48]
   14001c7b9:	mov    rsi,QWORD PTR [rsp+0x50]
   14001c7be:	add    rsp,0x30
   14001c7c2:	pop    rdi
   14001c7c3:	jmp    0x14001c4f4
   14001c7c8:	int3   
   14001c7c9:	int3   
   14001c7ca:	int3   
   14001c7cb:	int3   
   14001c7cc:	int3   
   14001c7cd:	int3   
   14001c7ce:	int3   
   14001c7cf:	int3   
   14001c7d0:	int3   
   14001c7d1:	int3   
   14001c7d2:	int3   
   14001c7d3:	int3   
   14001c7d4:	rex push rbp
   14001c7d6:	sub    rsp,0x20
   14001c7da:	mov    rbp,rdx
   14001c7dd:	lea    rcx,[rbp+0x58]
   14001c7e1:	call   0x14001c4f4
   14001c7e6:	add    rsp,0x20
   14001c7ea:	pop    rbp
   14001c7eb:	ret    
   14001c7ec:	lea    rax,[rip+0x28775]        # 0x140044f68
   14001c7f3:	ret    
   14001c7f4:	rex push rbx
   14001c7f6:	sub    rsp,0x30
   14001c7fa:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001c802:	mov    ebx,edx
   14001c804:	je     0x14001c83d
   14001c806:	mov    rcx,QWORD PTR [rcx+0x40]
   14001c80a:	add    edx,0x2000
   14001c810:	call   QWORD PTR [rip+0x271d2]        # 0x1400439e8
   14001c816:	lea    ecx,[rbx-0x132]
   14001c81c:	cmp    ecx,0x6
   14001c81f:	mov    r11,rax
   14001c822:	ja     0x14001c829
   14001c824:	test   rax,rax
   14001c827:	je     0x14001c84c
   14001c829:	mov    rax,QWORD PTR [rsp+0x60]
   14001c82e:	test   rax,rax
   14001c831:	je     0x14001c836
   14001c833:	mov    QWORD PTR [rax],r11
   14001c836:	mov    eax,0x1
   14001c83b:	jmp    0x14001c84c
   14001c83d:	mov    rax,QWORD PTR [rsp+0x60]
   14001c842:	mov    QWORD PTR [rsp+0x20],rax
   14001c847:	call   0x14001c27c
   14001c84c:	add    rsp,0x30
   14001c850:	pop    rbx
   14001c851:	ret    
   14001c852:	int3   
   14001c853:	int3   
   14001c854:	rex push rdi
   14001c856:	sub    rsp,0x30
   14001c85a:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001c863:	mov    QWORD PTR [rsp+0x40],rbx
   14001c868:	mov    QWORD PTR [rsp+0x48],rbp
   14001c86d:	mov    QWORD PTR [rsp+0x58],rsi
   14001c872:	mov    rsi,r9
   14001c875:	mov    rbp,rdx
   14001c878:	mov    rdi,rcx
   14001c87b:	mov    ebx,0x80004005
   14001c880:	cmp    r8d,0xfffffffc
   14001c884:	jne    0x14001c92b
   14001c88a:	mov    rax,QWORD PTR [rcx]
   14001c88d:	call   QWORD PTR [rax+0x110]
   14001c893:	mov    ebx,eax
   14001c895:	test   eax,eax
   14001c897:	js     0x14001c92b
   14001c89d:	mov    r8,QWORD PTR [rdi+0x58]
   14001c8a1:	test   r8,r8
   14001c8a4:	jne    0x14001c917
   14001c8a6:	lea    rcx,[rsp+0x20]
   14001c8ab:	call   0x14001c3ec
   14001c8b0:	mov    ebx,eax
   14001c8b2:	test   eax,eax
   14001c8b4:	js     0x14001c92b
   14001c8b6:	and    QWORD PTR [rsp+0x50],0x0
   14001c8bc:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c8c1:	mov    rax,QWORD PTR [rcx]
   14001c8c4:	lea    r8,[rsp+0x50]
   14001c8c9:	lea    rdx,[rip+0x27d40]        # 0x140044610
   14001c8d0:	call   QWORD PTR [rax]
   14001c8d2:	test   eax,eax
   14001c8d4:	js     0x14001c903
   14001c8d6:	mov    rcx,QWORD PTR [rsp+0x50]
   14001c8db:	mov    QWORD PTR [rdi+0x58],rcx
   14001c8df:	mov    rax,QWORD PTR [rcx]
   14001c8e2:	lea    r8,[rdi+0x68]
   14001c8e6:	lea    rdx,[rdi+0x60]
   14001c8ea:	call   QWORD PTR [rax+0x18]
   14001c8ed:	mov    r8,QWORD PTR [rdi+0x58]
   14001c8f1:	mov    rdx,rbp
   14001c8f4:	lea    rcx,[rip+0x27cdd]        # 0x1400445d8
   14001c8fb:	call   0x140040def
   14001c900:	mov    QWORD PTR [rsi],rax
   14001c903:	xor    ebx,ebx
   14001c905:	mov    rcx,QWORD PTR [rsp+0x50]
   14001c90a:	test   rcx,rcx
   14001c90d:	je     0x14001c92b
   14001c90f:	mov    rax,QWORD PTR [rcx]
   14001c912:	call   QWORD PTR [rax+0x10]
   14001c915:	jmp    0x14001c92b
   14001c917:	mov    rdx,rbp
   14001c91a:	lea    rcx,[rip+0x27cb7]        # 0x1400445d8
   14001c921:	call   0x140040def
   14001c926:	mov    QWORD PTR [rsi],rax
   14001c929:	xor    ebx,ebx
   14001c92b:	mov    eax,ebx
   14001c92d:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c932:	mov    rbp,QWORD PTR [rsp+0x48]
   14001c937:	mov    rsi,QWORD PTR [rsp+0x58]
   14001c93c:	add    rsp,0x30
   14001c940:	pop    rdi
   14001c941:	ret    
   14001c942:	int3   
   14001c943:	int3   
   14001c944:	rex push rbp
   14001c946:	sub    rsp,0x20
   14001c94a:	mov    rbp,rdx
   14001c94d:	lea    rcx,[rbp+0x50]
   14001c951:	call   0x140018470
   14001c956:	add    rsp,0x20
   14001c95a:	pop    rbp
   14001c95b:	ret    
   14001c95c:	mov    rax,rsp
   14001c95f:	push   rdi
   14001c960:	sub    rsp,0x90
   14001c967:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c970:	mov    QWORD PTR [rax+0x8],rbx
   14001c974:	mov    QWORD PTR [rax+0x10],rsi
   14001c978:	mov    rdi,rcx
   14001c97b:	lea    r8,[rax-0x68]
   14001c97f:	mov    rdx,QWORD PTR [rcx+0x40]
   14001c983:	mov    rcx,QWORD PTR [rcx+0x18]
   14001c987:	call   0x14001686c
   14001c98c:	xor    ebx,ebx
   14001c98e:	cmp    eax,ebx
   14001c990:	je     0x14001c997
   14001c992:	lea    eax,[rbx+0x1]
   14001c995:	jmp    0x14001ca03
   14001c997:	mov    rcx,rdi
   14001c99a:	call   0x140016780
   14001c99f:	cmp    ax,bx
   14001c9a2:	jne    0x14001c9a8
   14001c9a4:	xor    eax,eax
   14001c9a6:	jmp    0x14001ca03
   14001c9a8:	call   0x14001f2e8
   14001c9ad:	cmp    BYTE PTR [rax+0x28],bl
   14001c9b0:	je     0x14001c9fe
   14001c9b2:	mov    ecx,0x1
   14001c9b7:	call   0x14002431c
   14001c9bc:	nop
   14001c9bd:	call   0x14001f2e8
   14001c9c2:	mov    rdi,QWORD PTR [rdi+0x40]
   14001c9c6:	lea    rsi,[rax+0x58]
   14001c9ca:	cmp    rdi,rbx
   14001c9cd:	je     0x14001c9d9
   14001c9cf:	mov    rcx,rdi
   14001c9d2:	call   0x14002ad10
   14001c9d7:	mov    ebx,eax
   14001c9d9:	mov    r8d,ebx
   14001c9dc:	mov    rdx,rdi
   14001c9df:	mov    rcx,rsi
   14001c9e2:	call   0x1400044e0
   14001c9e7:	mov    dx,0xa
   14001c9eb:	mov    rcx,rsi
   14001c9ee:	call   0x14001a4d4
   14001c9f3:	nop
   14001c9f4:	mov    ecx,0x1
   14001c9f9:	call   0x1400243b0
   14001c9fe:	mov    eax,0x1
   14001ca03:	lea    r11,[rsp+0x90]
   14001ca0b:	mov    rbx,QWORD PTR [r11+0x10]
   14001ca0f:	mov    rsi,QWORD PTR [r11+0x18]
   14001ca13:	mov    rsp,r11
   14001ca16:	pop    rdi
   14001ca17:	ret    
   14001ca18:	int3   
   14001ca19:	int3   
   14001ca1a:	int3   
   14001ca1b:	int3   
   14001ca1c:	mov    QWORD PTR [rsp+0x10],rdx
   14001ca21:	push   rbp
   14001ca22:	sub    rsp,0x20
   14001ca26:	mov    rbp,rdx
   14001ca29:	mov    ecx,0x1
   14001ca2e:	call   0x1400243b0
   14001ca33:	xor    edx,edx
   14001ca35:	xor    ecx,ecx
   14001ca37:	call   0x14002bb20
   14001ca3c:	nop
   14001ca3d:	add    rsp,0x20
   14001ca41:	pop    rbp
   14001ca42:	ret    
   14001ca43:	int3   
   14001ca44:	mov    rax,rsp
   14001ca47:	mov    QWORD PTR [rax+0x8],rbx
   14001ca4b:	mov    QWORD PTR [rax+0x10],rbp
   14001ca4f:	mov    QWORD PTR [rax+0x18],rsi
   14001ca53:	mov    QWORD PTR [rax+0x20],rdi
   14001ca57:	push   r12
   14001ca59:	push   r13
   14001ca5b:	push   r14
   14001ca5d:	sub    rsp,0xa0
   14001ca64:	mov    rsi,r9
   14001ca67:	mov    rbp,r8
   14001ca6a:	mov    r13,rdx
   14001ca6d:	mov    r14d,ecx
   14001ca70:	call   0x14001ea28
   14001ca75:	lea    rbx,[rax+0xd8]
   14001ca7c:	call   0x14001f2e8
   14001ca81:	test   r13,r13
   14001ca84:	mov    r12,QWORD PTR [rax+0x10]
   14001ca88:	jne    0x14001cac4
   14001ca8a:	test   rbp,rbp
   14001ca8d:	jne    0x14001cac4
   14001ca8f:	test   rsi,rsi
   14001ca92:	jne    0x14001cac4
   14001ca94:	call   0x14002bca0
   14001ca99:	mov    edi,DWORD PTR [rax]
   14001ca9b:	call   0x14002bca0
   14001caa0:	lea    r9,[rip+0x28911]        # 0x1400453b8
   14001caa7:	and    DWORD PTR [rax],esi
   14001caa9:	lea    edx,[rbp+0x60]
   14001caac:	lea    r8d,[r13+0x5f]
   14001cab0:	mov    rcx,rbx
   14001cab3:	mov    DWORD PTR [rsp+0x28],r14d
   14001cab8:	mov    QWORD PTR [rsp+0x20],r12
   14001cabd:	call   0x14002bc20
   14001cac2:	jmp    0x14001cb04
   14001cac4:	call   0x14002bca0
   14001cac9:	mov    edi,DWORD PTR [rax]
   14001cacb:	call   0x14002bca0
   14001cad0:	mov    QWORD PTR [rsp+0x40],rsi
   14001cad5:	and    DWORD PTR [rax],0x0
   14001cad8:	mov    QWORD PTR [rsp+0x38],rbp
   14001cadd:	mov    edx,0x60
   14001cae2:	mov    QWORD PTR [rsp+0x30],r13
   14001cae7:	lea    r9,[rip+0x288a2]        # 0x140045390
   14001caee:	lea    r8d,[rdx-0x1]
   14001caf2:	mov    rcx,rbx
   14001caf5:	mov    DWORD PTR [rsp+0x28],r14d
   14001cafa:	mov    QWORD PTR [rsp+0x20],r12
   14001caff:	call   0x14002bc20
   14001cb04:	call   0x14002bca0
   14001cb09:	cmp    DWORD PTR [rax],0x0
   14001cb0c:	je     0x14001cb4d
   14001cb0e:	call   0x14002bca0
   14001cb13:	cmp    DWORD PTR [rax],0x0
   14001cb16:	je     0x14001cb54
   14001cb18:	cmp    DWORD PTR [rax],0xc
   14001cb1b:	je     0x14001cb42
   14001cb1d:	cmp    DWORD PTR [rax],0x16
   14001cb20:	je     0x14001cb37
   14001cb22:	cmp    DWORD PTR [rax],0x22
   14001cb25:	je     0x14001cb37
   14001cb27:	cmp    DWORD PTR [rax],0x50
   14001cb2a:	je     0x14001cb54
   14001cb2c:	mov    ecx,0x80004005
   14001cb31:	call   0x140003dc0
   14001cb36:	int3   
   14001cb37:	mov    ecx,0x80070057
   14001cb3c:	call   0x140003dc0
   14001cb41:	int3   
   14001cb42:	mov    ecx,0x8007000e
   14001cb47:	call   0x140003dc0
   14001cb4c:	int3   
   14001cb4d:	call   0x14002bca0
   14001cb52:	mov    DWORD PTR [rax],edi
   14001cb54:	lea    r8,[rsp+0x50]
   14001cb59:	mov    rdx,rbx
   14001cb5c:	mov    rcx,r12
   14001cb5f:	call   0x14001686c
   14001cb64:	test   eax,eax
   14001cb66:	jne    0x14001cbbe
   14001cb68:	mov    rax,QWORD PTR [rip+0x26c99]        # 0x140043808
   14001cb6f:	and    DWORD PTR [rsp+0x64],0x0
   14001cb74:	and    DWORD PTR [rsp+0x60],0x0
   14001cb79:	and    QWORD PTR [rsp+0x88],0x0
   14001cb82:	lea    rcx,[rsp+0x50]
   14001cb87:	mov    QWORD PTR [rsp+0x58],rax
   14001cb8c:	mov    DWORD PTR [rsp+0x50],r14d
   14001cb91:	mov    QWORD PTR [rsp+0x68],r12
   14001cb96:	mov    QWORD PTR [rsp+0x70],rsi
   14001cb9b:	mov    QWORD PTR [rsp+0x78],r13
   14001cba0:	mov    QWORD PTR [rsp+0x80],rbp
   14001cba8:	mov    QWORD PTR [rsp+0x90],rbx
   14001cbb0:	call   0x14001c95c
   14001cbb5:	test   eax,eax
   14001cbb7:	jne    0x14001cbbe
   14001cbb9:	call   0x1400204fc
   14001cbbe:	lea    r11,[rsp+0xa0]
   14001cbc6:	mov    rax,rbx
   14001cbc9:	mov    rbx,QWORD PTR [r11+0x20]
   14001cbcd:	mov    rbp,QWORD PTR [r11+0x28]
   14001cbd1:	mov    rsi,QWORD PTR [r11+0x30]
   14001cbd5:	mov    rdi,QWORD PTR [r11+0x38]
   14001cbd9:	mov    rsp,r11
   14001cbdc:	pop    r14
   14001cbde:	pop    r13
   14001cbe0:	pop    r12
   14001cbe2:	ret    
   14001cbe3:	int3   
   14001cbe4:	mov    QWORD PTR [rsp+0x8],rbx
   14001cbe9:	mov    QWORD PTR [rsp+0x18],rbp
   14001cbee:	push   rsi
   14001cbef:	push   rdi
   14001cbf0:	push   r12
   14001cbf2:	push   r13
   14001cbf4:	push   r14
   14001cbf6:	sub    rsp,0x70
   14001cbfa:	xor    r13d,r13d
   14001cbfd:	mov    rbx,rdx
   14001cc00:	mov    rsi,rcx
   14001cc03:	cmp    rdx,r13
   14001cc06:	mov    edi,0x1
   14001cc0b:	je     0x14001cd23
   14001cc11:	mov    r14d,0x143
   14001cc17:	movzx  ebp,WORD PTR [rbx]
   14001cc1a:	cmp    bp,r13w
   14001cc1e:	je     0x14001cd1e
   14001cc24:	movzx  eax,WORD PTR [rbx+0x2]
   14001cc28:	mov    r12d,DWORD PTR [rbx+0x4]
   14001cc2c:	add    rbx,0x8
   14001cc30:	cmp    ax,0x1234
   14001cc34:	je     0x14001cc87
   14001cc36:	cmp    ax,0x401
   14001cc3a:	jne    0x14001cc42
   14001cc3c:	mov    ax,0x180
   14001cc40:	jmp    0x14001cc61
   14001cc42:	cmp    ax,0x403
   14001cc46:	cmove  ax,r14w
   14001cc4b:	cmp    ax,0x40b
   14001cc4f:	je     0x14001cc87
   14001cc51:	cmp    ax,0x180
   14001cc55:	je     0x14001cc61
   14001cc57:	cmp    ax,r14w
   14001cc5b:	jne    0x14001cd0f
   14001cc61:	mov    rcx,QWORD PTR [rsi+0x40]
   14001cc65:	movzx  r8d,ax
   14001cc69:	movzx  edx,bp
   14001cc6c:	xor    r9d,r9d
   14001cc6f:	mov    QWORD PTR [rsp+0x20],rbx
   14001cc74:	call   QWORD PTR [rip+0x26a5e]        # 0x1400436d8
   14001cc7a:	cmp    rax,0xffffffffffffffff
   14001cc7e:	cmove  edi,r13d
   14001cc82:	jmp    0x14001cd0f
   14001cc87:	xor    edx,edx
   14001cc89:	lea    rcx,[rsp+0x38]
   14001cc8e:	lea    r8d,[rdx+0x30]
   14001cc92:	call   0x14002ac20
   14001cc97:	or     QWORD PTR [rsp+0x38],0xffffffffffffffff
   14001cc9d:	lea    rcx,[rsp+0xa8]
   14001cca5:	mov    rdx,rbx
   14001cca8:	mov    DWORD PTR [rsp+0x30],0x1
   14001ccb0:	call   0x140006f30
   14001ccb5:	mov    r11,QWORD PTR [rsp+0xa8]
   14001ccbd:	mov    rcx,QWORD PTR [rsi+0x40]
   14001ccc1:	lea    rax,[rsp+0x30]
   14001ccc6:	movzx  edx,bp
   14001ccc9:	xor    r9d,r9d
   14001cccc:	mov    r8d,0x40b
   14001ccd2:	mov    QWORD PTR [rsp+0x40],r11
   14001ccd7:	mov    QWORD PTR [rsp+0x20],rax
   14001ccdc:	call   QWORD PTR [rip+0x269fe]        # 0x1400436e0
   14001cce2:	mov    rdx,QWORD PTR [rsp+0xa8]
   14001ccea:	cmp    rax,0xffffffffffffffff
   14001ccee:	cmove  edi,r13d
   14001ccf2:	add    rdx,0xffffffffffffffe8
   14001ccf6:	or     eax,0xffffffff
   14001ccf9:	lock xadd DWORD PTR [rdx+0x10],eax
   14001ccfe:	add    eax,0xffffffff
   14001cd01:	cmp    eax,r13d
   14001cd04:	jg     0x14001cd0f
   14001cd06:	mov    rcx,QWORD PTR [rdx]
   14001cd09:	mov    rax,QWORD PTR [rcx]
   14001cd0c:	call   QWORD PTR [rax+0x8]
   14001cd0f:	add    rbx,r12
   14001cd12:	cmp    edi,r13d
   14001cd15:	mov    rax,r12
   14001cd18:	jne    0x14001cc17
   14001cd1e:	cmp    edi,r13d
   14001cd21:	je     0x14001cd41
   14001cd23:	mov    rcx,QWORD PTR [rsi+0x40]
   14001cd27:	xor    r9d,r9d
   14001cd2a:	xor    r8d,r8d
   14001cd2d:	mov    edx,0x364
   14001cd32:	mov    DWORD PTR [rsp+0x28],r13d
   14001cd37:	mov    DWORD PTR [rsp+0x20],r13d
   14001cd3c:	call   0x140019bb0
   14001cd41:	lea    r11,[rsp+0x70]
   14001cd46:	mov    eax,edi
   14001cd48:	mov    rbx,QWORD PTR [r11+0x30]
   14001cd4c:	mov    rbp,QWORD PTR [r11+0x40]
   14001cd50:	mov    rsp,r11
   14001cd53:	pop    r14
   14001cd55:	pop    r13
   14001cd57:	pop    r12
   14001cd59:	pop    rdi
   14001cd5a:	pop    rsi
   14001cd5b:	ret    
   14001cd5c:	mov    QWORD PTR [rsp+0x8],rbx
   14001cd61:	push   rdi
   14001cd62:	sub    rsp,0x20
   14001cd66:	mov    ebx,r8d
   14001cd69:	mov    rdi,rcx
   14001cd6c:	mov    QWORD PTR [rcx+0x40],rdx
   14001cd70:	call   0x14001f2e8
   14001cd75:	movzx  edx,bx
   14001cd78:	mov    rcx,QWORD PTR [rax+0x18]
   14001cd7c:	call   QWORD PTR [rip+0x26ba6]        # 0x140043928
   14001cd82:	test   rax,rax
   14001cd85:	mov    QWORD PTR [rdi+0x20],rax
   14001cd89:	jne    0x14001cd9c
   14001cd8b:	mov    edx,0x7f00
   14001cd90:	xor    ecx,ecx
   14001cd92:	call   QWORD PTR [rip+0x26b90]        # 0x140043928
   14001cd98:	mov    QWORD PTR [rdi+0x20],rax
   14001cd9c:	mov    rcx,rdi
   14001cd9f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cda4:	add    rsp,0x20
   14001cda8:	pop    rdi
   14001cda9:	jmp    0x14001c95c
   14001cdae:	int3   
   14001cdaf:	int3   
   14001cdb0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cdb5:	mov    QWORD PTR [rsp+0x18],rbp
   14001cdba:	push   rsi
   14001cdbb:	push   rdi
   14001cdbc:	push   r12
   14001cdbe:	sub    rsp,0x70
   14001cdc2:	mov    edi,ecx
   14001cdc4:	call   0x14001f2e8
   14001cdc9:	mov    edx,DWORD PTR [rax+0x2c]
   14001cdcc:	mov    rbp,rax
   14001cdcf:	not    edx
   14001cdd1:	and    edi,edx
   14001cdd3:	jne    0x14001cddd
   14001cdd5:	lea    eax,[rdi+0x1]
   14001cdd8:	jmp    0x14001d143
   14001cddd:	xor    r12d,r12d
   14001cde0:	lea    rcx,[rsp+0x20]
   14001cde5:	xor    edx,edx
   14001cde7:	lea    r8d,[r12+0x48]
   14001cdec:	mov    ebx,r12d
   14001cdef:	call   0x14002ac20
   14001cdf4:	mov    r11,QWORD PTR [rip+0x26a0d]        # 0x140043808
   14001cdfb:	mov    QWORD PTR [rsp+0x28],r11
   14001ce00:	call   0x14001f2e8
   14001ce05:	lea    esi,[r12+0x1]
   14001ce0a:	test   sil,dil
   14001ce0d:	mov    rcx,QWORD PTR [rax+0x10]
   14001ce11:	mov    rax,QWORD PTR [rip+0x43e08]        # 0x140060c20
   14001ce18:	mov    QWORD PTR [rsp+0x48],rax
   14001ce1d:	mov    QWORD PTR [rsp+0x38],rcx
   14001ce22:	mov    DWORD PTR [rsp+0x98],0x8
   14001ce2d:	je     0x14001ce53
   14001ce2f:	lea    rax,[rip+0x27012]        # 0x140043e48
   14001ce36:	lea    rcx,[rsp+0x20]
   14001ce3b:	mov    DWORD PTR [rsp+0x20],0xb
   14001ce43:	mov    QWORD PTR [rsp+0x60],rax
   14001ce48:	call   0x14001c95c
   14001ce4d:	cmp    eax,r12d
   14001ce50:	cmovne ebx,esi
   14001ce53:	test   dil,0x20
   14001ce57:	je     0x14001ce7f
   14001ce59:	or     DWORD PTR [rsp+0x20],0x8b
   14001ce61:	lea    rax,[rip+0x27068]        # 0x140043ed0
   14001ce68:	lea    rcx,[rsp+0x20]
   14001ce6d:	mov    QWORD PTR [rsp+0x60],rax
   14001ce72:	call   0x14001c95c
   14001ce77:	cmp    eax,r12d
   14001ce7a:	je     0x14001ce7f
   14001ce7c:	or     ebx,0x20
   14001ce7f:	test   dil,0x2
   14001ce83:	je     0x14001ceb1
   14001ce85:	lea    rax,[rip+0x26fd4]        # 0x140043e60
   14001ce8c:	lea    rcx,[rsp+0x20]
   14001ce91:	mov    DWORD PTR [rsp+0x20],r12d
   14001ce96:	mov    QWORD PTR [rsp+0x60],rax
   14001ce9b:	mov    QWORD PTR [rsp+0x50],0x10
   14001cea4:	call   0x14001c95c
   14001cea9:	cmp    eax,r12d
   14001ceac:	je     0x14001ceb1
   14001ceae:	or     ebx,0x2
   14001ceb1:	test   dil,0x4
   14001ceb5:	je     0x14001cee3
   14001ceb7:	lea    rdx,[rip+0x26fca]        # 0x140043e88
   14001cebe:	lea    rcx,[rsp+0x20]
   14001cec3:	mov    r8d,0x7a01
   14001cec9:	mov    DWORD PTR [rsp+0x20],0x8
   14001ced1:	mov    QWORD PTR [rsp+0x50],r12
   14001ced6:	call   0x14001cd5c
   14001cedb:	cmp    eax,r12d
   14001cede:	je     0x14001cee3
   14001cee0:	or     ebx,0x4
   14001cee3:	test   dil,0x8
   14001cee7:	je     0x14001cf19
   14001cee9:	lea    rdx,[rip+0x26fb8]        # 0x140043ea8
   14001cef0:	lea    rcx,[rsp+0x20]
   14001cef5:	mov    r8d,0x7a02
   14001cefb:	mov    DWORD PTR [rsp+0x20],0xb
   14001cf03:	mov    QWORD PTR [rsp+0x50],0x6
   14001cf0c:	call   0x14001cd5c
   14001cf11:	cmp    eax,r12d
   14001cf14:	je     0x14001cf19
   14001cf16:	or     ebx,0x8
   14001cf19:	test   dil,0x10
   14001cf1d:	je     0x14001cf44
   14001cf1f:	lea    rcx,[rsp+0x98]
   14001cf27:	mov    edx,0x3fc0
   14001cf2c:	mov    DWORD PTR [rsp+0x9c],0xff
   14001cf37:	call   0x1400195ec
   14001cf3c:	or     ebx,eax
   14001cf3e:	and    edi,0xffffc03f
   14001cf44:	test   dil,0x40
   14001cf48:	je     0x14001cf69
   14001cf4a:	lea    rcx,[rsp+0x98]
   14001cf52:	mov    edx,0x40
   14001cf57:	mov    DWORD PTR [rsp+0x9c],0x10
   14001cf62:	call   0x1400195ec
   14001cf67:	or     ebx,eax
   14001cf69:	test   dil,dil
   14001cf6c:	jns    0x14001cf8d
   14001cf6e:	lea    rcx,[rsp+0x98]
   14001cf76:	mov    edx,0x80
   14001cf7b:	mov    DWORD PTR [rsp+0x9c],0x2
   14001cf86:	call   0x1400195ec
   14001cf8b:	or     ebx,eax
   14001cf8d:	bt     edi,0x8
   14001cf91:	jae    0x14001cfb2
   14001cf93:	lea    rcx,[rsp+0x98]
   14001cf9b:	mov    edx,0x100
   14001cfa0:	mov    DWORD PTR [rsp+0x9c],0x8
   14001cfab:	call   0x1400195ec
   14001cfb0:	or     ebx,eax
   14001cfb2:	bt     edi,0x9
   14001cfb6:	jae    0x14001cfd7
   14001cfb8:	lea    rcx,[rsp+0x98]
   14001cfc0:	mov    edx,0x200
   14001cfc5:	mov    DWORD PTR [rsp+0x9c],0x20
   14001cfd0:	call   0x1400195ec
   14001cfd5:	or     ebx,eax
   14001cfd7:	bt     edi,0xa
   14001cfdb:	jae    0x14001cff8
   14001cfdd:	lea    rcx,[rsp+0x98]
   14001cfe5:	mov    edx,0x400
   14001cfea:	mov    DWORD PTR [rsp+0x9c],esi
   14001cff1:	call   0x1400195ec
   14001cff6:	or     ebx,eax
   14001cff8:	bt     edi,0xb
   14001cffc:	mov    esi,0x800
   14001d001:	jae    0x14001d01f
   14001d003:	lea    rcx,[rsp+0x98]
   14001d00b:	mov    edx,esi
   14001d00d:	mov    DWORD PTR [rsp+0x9c],0x40
   14001d018:	call   0x1400195ec
   14001d01d:	or     ebx,eax
   14001d01f:	bt     edi,0xc
   14001d023:	jae    0x14001d044
   14001d025:	lea    rcx,[rsp+0x98]
   14001d02d:	mov    edx,0x1000
   14001d032:	mov    DWORD PTR [rsp+0x9c],0x4
   14001d03d:	call   0x1400195ec
   14001d042:	or     ebx,eax
   14001d044:	bt     edi,0xd
   14001d048:	jae    0x14001d069
   14001d04a:	lea    rcx,[rsp+0x98]
   14001d052:	mov    edx,0x2000
   14001d057:	mov    DWORD PTR [rsp+0x9c],0x80
   14001d062:	call   0x1400195ec
   14001d067:	or     ebx,eax
   14001d069:	bt     edi,0xe
   14001d06d:	jae    0x14001d08a
   14001d06f:	lea    rcx,[rsp+0x98]
   14001d077:	mov    edx,0x4000
   14001d07c:	mov    DWORD PTR [rsp+0x9c],esi
   14001d083:	call   0x1400195ec
   14001d088:	or     ebx,eax
   14001d08a:	bt     edi,0xf
   14001d08e:	mov    esi,0x8000
   14001d093:	jae    0x14001d0b1
   14001d095:	lea    rcx,[rsp+0x98]
   14001d09d:	mov    edx,esi
   14001d09f:	mov    DWORD PTR [rsp+0x9c],0x400
   14001d0aa:	call   0x1400195ec
   14001d0af:	or     ebx,eax
   14001d0b1:	bt     edi,0x10
   14001d0b5:	jae    0x14001d0d6
   14001d0b7:	lea    rcx,[rsp+0x98]
   14001d0bf:	mov    edx,0x10000
   14001d0c4:	mov    DWORD PTR [rsp+0x9c],0x200
   14001d0cf:	call   0x1400195ec
   14001d0d4:	or     ebx,eax
   14001d0d6:	bt     edi,0x11
   14001d0da:	jae    0x14001d0fb
   14001d0dc:	lea    rcx,[rsp+0x98]
   14001d0e4:	mov    edx,0x20000
   14001d0e9:	mov    DWORD PTR [rsp+0x9c],0x100
   14001d0f4:	call   0x1400195ec
   14001d0f9:	or     ebx,eax
   14001d0fb:	bt     edi,0x12
   14001d0ff:	jae    0x14001d11c
   14001d101:	lea    rcx,[rsp+0x98]
   14001d109:	mov    edx,0x40000
   14001d10e:	mov    DWORD PTR [rsp+0x9c],esi
   14001d115:	call   0x1400195ec
   14001d11a:	or     ebx,eax
   14001d11c:	or     DWORD PTR [rbp+0x2c],ebx
   14001d11f:	mov    edx,DWORD PTR [rbp+0x2c]
   14001d122:	mov    eax,0x3fc0
   14001d127:	mov    ecx,edx
   14001d129:	and    ecx,eax
   14001d12b:	cmp    ecx,eax
   14001d12d:	jne    0x14001d138
   14001d12f:	or     edx,0x10
   14001d132:	or     ebx,0x10
   14001d135:	mov    DWORD PTR [rbp+0x2c],edx
   14001d138:	and    ebx,edi
   14001d13a:	cmp    ebx,edi
   14001d13c:	sete   r12b
   14001d140:	mov    eax,r12d
   14001d143:	lea    r11,[rsp+0x70]
   14001d148:	mov    rbx,QWORD PTR [r11+0x20]
   14001d14c:	mov    rbp,QWORD PTR [r11+0x30]
   14001d150:	mov    rsp,r11
   14001d153:	pop    r12
   14001d155:	pop    rdi
   14001d156:	pop    rsi
   14001d157:	ret    
   14001d158:	rex push rbx
   14001d15a:	sub    rsp,0x20
   14001d15e:	cmp    QWORD PTR [rdx+0x40],0x0
   14001d163:	mov    rbx,rdx
   14001d166:	jne    0x14001d17d
   14001d168:	mov    ecx,0x1
   14001d16d:	call   0x14001cdb0
   14001d172:	lea    r11,[rip+0x26ccf]        # 0x140043e48
   14001d179:	mov    QWORD PTR [rbx+0x40],r11
   14001d17d:	mov    eax,0x1
   14001d182:	add    rsp,0x20
   14001d186:	pop    rbx
   14001d187:	ret    
   14001d188:	mov    rax,rsp
   14001d18b:	mov    QWORD PTR [rax+0x8],rbx
   14001d18f:	mov    QWORD PTR [rax+0x10],rbp
   14001d193:	mov    QWORD PTR [rax+0x18],rsi
   14001d197:	mov    QWORD PTR [rax+0x20],rdi
   14001d19b:	push   r12
   14001d19d:	sub    rsp,0x20
   14001d1a1:	xor    edi,edi
   14001d1a3:	xor    ebx,ebx
   14001d1a5:	test   rdx,rdx
   14001d1a8:	mov    rsi,rdx
   14001d1ab:	mov    rbp,rcx
   14001d1ae:	je     0x14001d1f0
   14001d1b0:	call   0x14001f2e8
   14001d1b5:	mov    r8d,0xf0
   14001d1bb:	mov    rdx,rsi
   14001d1be:	mov    r12,QWORD PTR [rax+0x18]
   14001d1c2:	mov    rcx,r12
   14001d1c5:	call   QWORD PTR [rip+0x26365]        # 0x140043530
   14001d1cb:	test   rax,rax
   14001d1ce:	je     0x14001d1f0
   14001d1d0:	mov    rdx,rax
   14001d1d3:	mov    rcx,r12
   14001d1d6:	call   QWORD PTR [rip+0x2633c]        # 0x140043518
   14001d1dc:	test   rax,rax
   14001d1df:	mov    rbx,rax
   14001d1e2:	je     0x14001d212
   14001d1e4:	mov    rcx,rax
   14001d1e7:	call   QWORD PTR [rip+0x26333]        # 0x140043520
   14001d1ed:	mov    rdi,rax
   14001d1f0:	mov    rdx,rdi
   14001d1f3:	mov    rcx,rbp
   14001d1f6:	call   0x14001cbe4
   14001d1fb:	test   rdi,rdi
   14001d1fe:	mov    esi,eax
   14001d200:	je     0x14001d210
   14001d202:	test   rbx,rbx
   14001d205:	je     0x14001d210
   14001d207:	mov    rcx,rbx
   14001d20a:	call   QWORD PTR [rip+0x26248]        # 0x140043458
   14001d210:	mov    eax,esi
   14001d212:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d217:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d21c:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d221:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d226:	add    rsp,0x20
   14001d22a:	pop    r12
   14001d22c:	ret    
   14001d22d:	int3   
   14001d22e:	int3   
   14001d22f:	int3   
   14001d230:	sub    rsp,0x28
   14001d234:	cmp    edx,0x110
   14001d23a:	jne    0x14001d271
   14001d23c:	call   0x140018eb4
   14001d241:	lea    rcx,[rip+0x281c0]        # 0x140045408
   14001d248:	mov    rdx,rax
   14001d24b:	call   0x14002201c
   14001d250:	test   rax,rax
   14001d253:	je     0x14001d265
   14001d255:	mov    rdx,QWORD PTR [rax]
   14001d258:	mov    rcx,rax
   14001d25b:	call   QWORD PTR [rdx+0x290]
   14001d261:	cdqe   
   14001d263:	jmp    0x14001d273
   14001d265:	movabs rax,0x1
   14001d26f:	jmp    0x14001d273
   14001d271:	xor    eax,eax
   14001d273:	add    rsp,0x28
   14001d277:	ret    
   14001d278:	rex push rbx
   14001d27a:	sub    rsp,0x20
   14001d27e:	mov    rbx,rcx
   14001d281:	call   0x140016de8
   14001d286:	xor    edx,edx
   14001d288:	lea    r11,[rip+0x281b9]        # 0x140045448
   14001d28f:	lea    rcx,[rbx+0xa8]
   14001d296:	lea    r8d,[rdx+0x40]
   14001d29a:	mov    QWORD PTR [rbx],r11
   14001d29d:	call   0x14002ac20
   14001d2a2:	mov    rax,rbx
   14001d2a5:	add    rsp,0x20
   14001d2a9:	pop    rbx
   14001d2aa:	ret    
   14001d2ab:	int3   
   14001d2ac:	mov    QWORD PTR [rsp+0x8],rcx
   14001d2b1:	push   rbx
   14001d2b2:	sub    rsp,0x30
   14001d2b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d2bf:	mov    rbx,rcx
   14001d2c2:	lea    rax,[rip+0x2817f]        # 0x140045448
   14001d2c9:	mov    QWORD PTR [rcx],rax
   14001d2cc:	cmp    QWORD PTR [rcx+0x40],0x0
   14001d2d1:	je     0x14001d2d9
   14001d2d3:	call   0x1400191b0
   14001d2d8:	nop
   14001d2d9:	mov    rcx,rbx
   14001d2dc:	add    rsp,0x30
   14001d2e0:	pop    rbx
   14001d2e1:	jmp    0x140019964
   14001d2e6:	int3   
   14001d2e7:	int3   
   14001d2e8:	int3   
   14001d2e9:	int3   
   14001d2ea:	int3   
   14001d2eb:	int3   
   14001d2ec:	rex push rbp
   14001d2ee:	sub    rsp,0x20
   14001d2f2:	mov    rbp,rdx
   14001d2f5:	mov    rcx,QWORD PTR [rbp+0x40]
   14001d2f9:	call   0x140019964
   14001d2fe:	add    rsp,0x20
   14001d302:	pop    rbp
   14001d303:	ret    
   14001d304:	rex push rbx
   14001d306:	sub    rsp,0xb0
   14001d30d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d316:	mov    rax,QWORD PTR [rip+0x3dc63]        # 0x14005af80
   14001d31d:	xor    rax,rsp
   14001d320:	mov    QWORD PTR [rsp+0xa0],rax
   14001d328:	mov    rbx,rcx
   14001d32b:	mov    rdx,rcx
   14001d32e:	lea    rcx,[rsp+0x30]
   14001d333:	call   0x140020ddc
   14001d338:	nop
   14001d339:	lea    rdx,[rsp+0x30]
   14001d33e:	mov    rcx,rbx
   14001d341:	call   0x14001fde0
   14001d346:	test   eax,eax
   14001d348:	je     0x14001d356
   14001d34a:	lea    rcx,[rsp+0x30]
   14001d34f:	call   0x140020e54
   14001d354:	jmp    0x14001d369
   14001d356:	mov    rcx,rbx
   14001d359:	call   0x140018d54
   14001d35e:	nop
   14001d35f:	lea    rcx,[rsp+0x30]
   14001d364:	call   0x140020e54
   14001d369:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001d371:	xor    rcx,rsp
   14001d374:	call   0x140029b40
   14001d379:	add    rsp,0xb0
   14001d380:	pop    rbx
   14001d381:	ret    
   14001d382:	int3   
   14001d383:	int3   
   14001d384:	rex push rbp
   14001d386:	sub    rsp,0x20
   14001d38a:	mov    rbp,rdx
   14001d38d:	lea    rcx,[rbp+0x30]
   14001d391:	call   0x140020e54
   14001d396:	add    rsp,0x20
   14001d39a:	pop    rbp
   14001d39b:	ret    
   14001d39c:	mov    QWORD PTR [rcx+0xe0],rdx
   14001d3a3:	mov    eax,0x1
   14001d3a8:	ret    
   14001d3a9:	int3   
   14001d3aa:	int3   
   14001d3ab:	int3   
   14001d3ac:	mov    rax,QWORD PTR [rcx+0xe0]
   14001d3b3:	ret    
   14001d3b4:	mov    QWORD PTR [rsp+0x8],rbx
   14001d3b9:	mov    QWORD PTR [rsp+0x10],rbp
   14001d3be:	mov    QWORD PTR [rsp+0x18],rsi
   14001d3c3:	push   rdi
   14001d3c4:	sub    rsp,0x20
   14001d3c8:	mov    rdi,r8
   14001d3cb:	mov    esi,edx
   14001d3cd:	mov    rbp,rcx
   14001d3d0:	call   0x140016de8
   14001d3d5:	xor    edx,edx
   14001d3d7:	lea    r11,[rip+0x2806a]        # 0x140045448
   14001d3de:	lea    r8d,[rdx+0x40]
   14001d3e2:	lea    rcx,[rbp+0xa8]
   14001d3e9:	mov    QWORD PTR [rbp+0x0],r11
   14001d3ed:	call   0x14002ac20
   14001d3f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d3f7:	movzx  eax,si
   14001d3fa:	mov    QWORD PTR [rbp+0xb0],rax
   14001d401:	mov    DWORD PTR [rbp+0xa8],esi
   14001d407:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d40c:	mov    rax,rbp
   14001d40f:	mov    QWORD PTR [rbp+0xd0],rdi
   14001d416:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d41b:	add    rsp,0x20
   14001d41f:	pop    rdi
   14001d420:	ret    
   14001d421:	int3   
   14001d422:	int3   
   14001d423:	int3   
   14001d424:	mov    QWORD PTR [rsp+0x8],rbx
   14001d429:	push   rdi
   14001d42a:	sub    rsp,0x20
   14001d42e:	test   BYTE PTR [rcx+0x78],0x18
   14001d432:	movsxd rdi,edx
   14001d435:	mov    rbx,rcx
   14001d438:	je     0x14001d445
   14001d43a:	mov    rax,QWORD PTR [rcx]
   14001d43d:	mov    edx,edi
   14001d43f:	call   QWORD PTR [rax+0x108]
   14001d445:	mov    rcx,QWORD PTR [rbx+0x40]
   14001d449:	mov    rdx,rdi
   14001d44c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d451:	add    rsp,0x20
   14001d455:	pop    rdi
   14001d456:	rex.W jmp QWORD PTR [rip+0x2626b]        # 0x1400436c8
   14001d45d:	int3   
   14001d45e:	int3   
   14001d45f:	int3   
   14001d460:	rex push rbx
   14001d462:	sub    rsp,0x20
   14001d466:	mov    edx,0x1
   14001d46b:	mov    rbx,rcx
   14001d46e:	call   0x140018488
   14001d473:	test   eax,eax
   14001d475:	je     0x14001d484
   14001d477:	mov    edx,0x1
   14001d47c:	mov    rcx,rbx
   14001d47f:	call   0x14001d424
   14001d484:	add    rsp,0x20
   14001d488:	pop    rbx
   14001d489:	ret    
   14001d48a:	int3   
   14001d48b:	int3   
   14001d48c:	mov    edx,0x2
   14001d491:	jmp    0x14001d424
   14001d496:	int3   
   14001d497:	int3   
   14001d498:	mov    eax,DWORD PTR [rcx+0xa8]
   14001d49e:	test   eax,eax
   14001d4a0:	je     0x14001d4a8
   14001d4a2:	add    eax,0x20000
   14001d4a7:	ret    
   14001d4a8:	xor    eax,eax
   14001d4aa:	ret    
   14001d4ab:	int3   
   14001d4ac:	lea    rax,[rip+0x27f55]        # 0x140045408
   14001d4b3:	ret    
   14001d4b4:	mov    rax,QWORD PTR [rcx]
   14001d4b7:	jmp    QWORD PTR [rax+0x2a8]
   14001d4bd:	int3   
   14001d4be:	int3   
   14001d4bf:	int3   
   14001d4c0:	mov    rax,QWORD PTR [rcx]
   14001d4c3:	jmp    QWORD PTR [rax+0x2a0]
   14001d4c9:	int3   
   14001d4ca:	int3   
   14001d4cb:	int3   
   14001d4cc:	mov    QWORD PTR [rsp+0x8],rbx
   14001d4d1:	push   rdi
   14001d4d2:	sub    rsp,0x20
   14001d4d6:	mov    rbx,rdx
   14001d4d9:	mov    rdi,rcx
   14001d4dc:	call   0x140016038
   14001d4e1:	test   eax,eax
   14001d4e3:	je     0x14001d4ef
   14001d4e5:	mov    eax,0x1
   14001d4ea:	jmp    0x14001d58f
   14001d4ef:	mov    rcx,rdi
   14001d4f2:	call   0x140019b5c
   14001d4f7:	test   rax,rax
   14001d4fa:	je     0x14001d50c
   14001d4fc:	cmp    DWORD PTR [rax+0xc4],0x0
   14001d503:	je     0x14001d50c
   14001d505:	xor    eax,eax
   14001d507:	jmp    0x14001d58f
   14001d50c:	cmp    DWORD PTR [rbx+0x8],0x100
   14001d513:	jne    0x14001d584
   14001d515:	cmp    QWORD PTR [rbx+0x10],0x1b
   14001d51a:	je     0x14001d523
   14001d51c:	cmp    QWORD PTR [rbx+0x10],0x3
   14001d521:	jne    0x14001d584
   14001d523:	mov    rcx,QWORD PTR [rbx]
   14001d526:	mov    edx,0xfffffff0
   14001d52b:	call   QWORD PTR [rip+0x263ef]        # 0x140043920
   14001d531:	test   al,0x4
   14001d533:	je     0x14001d584
   14001d535:	mov    rcx,QWORD PTR [rbx]
   14001d538:	lea    rdx,[rip+0x28211]        # 0x140045750
   14001d53f:	call   0x140024574
   14001d544:	test   eax,eax
   14001d546:	je     0x14001d584
   14001d548:	mov    rcx,QWORD PTR [rdi+0x40]
   14001d54c:	mov    edx,0x2
   14001d551:	call   QWORD PTR [rip+0x26201]        # 0x140043758
   14001d557:	test   rax,rax
   14001d55a:	je     0x14001d569
   14001d55c:	mov    rcx,rax
   14001d55f:	call   QWORD PTR [rip+0x26153]        # 0x1400436b8
   14001d565:	test   eax,eax
   14001d567:	je     0x14001d584
   14001d569:	mov    rcx,QWORD PTR [rdi+0x40]
   14001d56d:	xor    r9d,r9d
   14001d570:	mov    edx,0x111
   14001d575:	lea    r8d,[r9+0x2]
   14001d579:	call   QWORD PTR [rip+0x26469]        # 0x1400439e8
   14001d57f:	jmp    0x14001d4e5
   14001d584:	mov    rdx,rbx
   14001d587:	mov    rcx,rdi
   14001d58a:	call   0x140016674
   14001d58f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d594:	add    rsp,0x20
   14001d598:	pop    rdi
   14001d599:	ret    
   14001d59a:	int3   
   14001d59b:	int3   
   14001d59c:	mov    rax,rsp
   14001d59f:	mov    QWORD PTR [rax+0x8],rbx
   14001d5a3:	mov    QWORD PTR [rax+0x10],rbp
   14001d5a7:	mov    QWORD PTR [rax+0x18],rsi
   14001d5ab:	mov    QWORD PTR [rax+0x20],rdi
   14001d5af:	push   r12
   14001d5b1:	sub    rsp,0x30
   14001d5b5:	mov    r12,QWORD PTR [rsp+0x60]
   14001d5ba:	mov    rbp,r9
   14001d5bd:	mov    ebx,r8d
   14001d5c0:	mov    edi,edx
   14001d5c2:	mov    rsi,rcx
   14001d5c5:	mov    QWORD PTR [rax-0x18],r12
   14001d5c9:	call   0x140014a98
   14001d5ce:	test   eax,eax
   14001d5d0:	je     0x14001d5d9
   14001d5d2:	mov    eax,0x1
   14001d5d7:	jmp    0x14001d649
   14001d5d9:	test   ebx,ebx
   14001d5db:	je     0x14001d5e2
   14001d5dd:	cmp    ebx,0xffffffff
   14001d5e0:	jne    0x14001d647
   14001d5e2:	bt     edi,0xf
   14001d5e6:	jae    0x14001d647
   14001d5e8:	cmp    edi,0xf000
   14001d5ee:	jae    0x14001d647
   14001d5f0:	mov    rcx,QWORD PTR [rsi+0x40]
   14001d5f4:	call   QWORD PTR [rip+0x263d6]        # 0x1400439d0
   14001d5fa:	mov    rcx,rax
   14001d5fd:	call   0x140018e70
   14001d602:	test   rax,rax
   14001d605:	je     0x14001d622
   14001d607:	mov    r10,QWORD PTR [rax]
   14001d60a:	mov    r9,rbp
   14001d60d:	mov    r8d,ebx
   14001d610:	mov    edx,edi
   14001d612:	mov    rcx,rax
   14001d615:	mov    QWORD PTR [rsp+0x20],r12
   14001d61a:	call   QWORD PTR [r10+0x18]
   14001d61e:	test   eax,eax
   14001d620:	jne    0x14001d5d2
   14001d622:	call   0x14001f3b8
   14001d627:	test   rax,rax
   14001d62a:	je     0x14001d647
   14001d62c:	mov    r10,QWORD PTR [rax]
   14001d62f:	mov    r9,rbp
   14001d632:	mov    r8d,ebx
   14001d635:	mov    edx,edi
   14001d637:	mov    rcx,rax
   14001d63a:	mov    QWORD PTR [rsp+0x20],r12
   14001d63f:	call   QWORD PTR [r10+0x18]
   14001d643:	test   eax,eax
   14001d645:	jne    0x14001d5d2
   14001d647:	xor    eax,eax
   14001d649:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d64e:	mov    rbp,QWORD PTR [rsp+0x48]
   14001d653:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d658:	mov    rdi,QWORD PTR [rsp+0x58]
   14001d65d:	add    rsp,0x30
   14001d661:	pop    r12
   14001d663:	ret    
   14001d664:	mov    QWORD PTR [rsp+0x8],rbx
   14001d669:	push   rdi
   14001d66a:	sub    rsp,0x20
   14001d66e:	mov    ebx,edx
   14001d670:	mov    rdi,rcx
   14001d673:	call   0x14001d2ac
   14001d678:	test   bl,0x1
   14001d67b:	je     0x14001d685
   14001d67d:	mov    rcx,rdi
   14001d680:	call   0x14001490c
   14001d685:	mov    rax,rdi
   14001d688:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d68d:	add    rsp,0x20
   14001d691:	pop    rdi
   14001d692:	ret    
   14001d693:	int3   
   14001d694:	mov    QWORD PTR [rsp+0x8],rbx
   14001d699:	push   rdi
   14001d69a:	sub    rsp,0x20
   14001d69e:	mov    rdi,rcx
   14001d6a1:	call   0x14001f2e8
   14001d6a6:	xor    ebx,ebx
   14001d6a8:	mov    rcx,QWORD PTR [rax+0x8]
   14001d6ac:	cmp    rcx,rbx
   14001d6af:	je     0x14001d6b8
   14001d6b1:	xor    edx,edx
   14001d6b3:	call   0x140021b70
   14001d6b8:	mov    rax,QWORD PTR [rdi+0xd0]
   14001d6bf:	cmp    rax,rbx
   14001d6c2:	je     0x14001d6c8
   14001d6c4:	mov    rbx,QWORD PTR [rax+0x40]
   14001d6c8:	lea    rdx,[rdi+0xd8]
   14001d6cf:	mov    rcx,rbx
   14001d6d2:	call   0x140021a6c
   14001d6d7:	mov    rcx,rdi
   14001d6da:	mov    rbx,rax
   14001d6dd:	call   0x14001b360
   14001d6e2:	mov    rax,rbx
   14001d6e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d6ea:	add    rsp,0x20
   14001d6ee:	pop    rdi
   14001d6ef:	ret    
   14001d6f0:	rex push rbx
   14001d6f2:	sub    rsp,0x20
   14001d6f6:	mov    rbx,rcx
   14001d6f9:	call   0x140018f8c
   14001d6fe:	mov    rcx,rbx
   14001d701:	call   0x140018f40
   14001d706:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001d70d:	call   QWORD PTR [rip+0x26015]        # 0x140043728
   14001d713:	test   eax,eax
   14001d715:	je     0x14001d729
   14001d717:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001d71e:	mov    edx,0x1
   14001d723:	call   QWORD PTR [rip+0x262c7]        # 0x1400439f0
   14001d729:	and    QWORD PTR [rbx+0xd8],0x0
   14001d731:	call   0x14001f2e8
   14001d736:	mov    rcx,QWORD PTR [rax+0x8]
   14001d73a:	test   rcx,rcx
   14001d73d:	je     0x14001d749
   14001d73f:	mov    edx,0x1
   14001d744:	call   0x140021b70
   14001d749:	add    rsp,0x20
   14001d74d:	pop    rbx
   14001d74e:	ret    
   14001d74f:	int3   
   14001d750:	rex push rbx
   14001d752:	sub    rsp,0x20
   14001d756:	mov    rbx,rcx
   14001d759:	mov    rcx,rdx
   14001d75c:	call   0x140020f84
   14001d761:	mov    r8,QWORD PTR [rbx]
   14001d764:	mov    rcx,rbx
   14001d767:	mov    rdx,rax
   14001d76a:	call   QWORD PTR [r8+0x298]
   14001d771:	mov    rcx,rbx
   14001d774:	add    rsp,0x20
   14001d778:	pop    rbx
   14001d779:	jmp    0x140018d54
   14001d77e:	int3   
   14001d77f:	int3   
   14001d780:	mov    QWORD PTR [rsp+0x8],rbx
   14001d785:	push   rdi
   14001d786:	sub    rsp,0x20
   14001d78a:	mov    rax,QWORD PTR [rcx]
   14001d78d:	mov    rbx,rcx
   14001d790:	call   QWORD PTR [rax+0x2b0]
   14001d796:	call   0x14001f2e8
   14001d79b:	mov    rcx,QWORD PTR [rax+0x68]
   14001d79f:	test   rcx,rcx
   14001d7a2:	je     0x14001d7e4
   14001d7a4:	mov    r9,QWORD PTR [rbx+0xe0]
   14001d7ab:	test   r9,r9
   14001d7ae:	je     0x14001d7e4
   14001d7b0:	mov    r8,QWORD PTR [rbx+0xc8]
   14001d7b7:	mov    rax,QWORD PTR [rcx]
   14001d7ba:	mov    rdx,rbx
   14001d7bd:	test   r8,r8
   14001d7c0:	je     0x14001d7c7
   14001d7c2:	call   QWORD PTR [rax+0x40]
   14001d7c5:	jmp    0x14001d7d1
   14001d7c7:	mov    r8,QWORD PTR [rbx+0xb0]
   14001d7ce:	call   QWORD PTR [rax+0x48]
   14001d7d1:	test   eax,eax
   14001d7d3:	jne    0x14001d7e4
   14001d7d5:	or     edx,0xffffffff
   14001d7d8:	mov    rcx,rbx
   14001d7db:	call   0x14001d424
   14001d7e0:	xor    eax,eax
   14001d7e2:	jmp    0x14001d824
   14001d7e4:	mov    rcx,rbx
   14001d7e7:	call   0x140018d54
   14001d7ec:	test   rax,rax
   14001d7ef:	mov    rdi,rax
   14001d7f2:	je     0x14001d821
   14001d7f4:	bt     DWORD PTR [rbx+0x78],0x8
   14001d7f9:	jae    0x14001d821
   14001d7fb:	mov    rcx,QWORD PTR [rbx+0x40]
   14001d7ff:	xor    r8d,r8d
   14001d802:	xor    edx,edx
   14001d804:	call   QWORD PTR [rip+0x25eb6]        # 0x1400436c0
   14001d80a:	mov    rcx,rax
   14001d80d:	call   0x140018e70
   14001d812:	test   rax,rax
   14001d815:	je     0x14001d821
   14001d817:	mov    rcx,rax
   14001d81a:	call   0x1400200f4
   14001d81f:	xor    edi,edi
   14001d821:	mov    rax,rdi
   14001d824:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d829:	add    rsp,0x20
   14001d82d:	pop    rdi
   14001d82e:	ret    
   14001d82f:	int3   
   14001d830:	sub    rsp,0x48
   14001d834:	call   0x14001f2e8
   14001d839:	cmp    QWORD PTR [rax+0x8],0x0
   14001d83e:	jne    0x14001d844
   14001d840:	xor    eax,eax
   14001d842:	jmp    0x14001d8b0
   14001d844:	call   0x14001f3b8
   14001d849:	test   rax,rax
   14001d84c:	je     0x14001d85f
   14001d84e:	mov    rdx,QWORD PTR [rax]
   14001d851:	mov    rcx,rax
   14001d854:	call   QWORD PTR [rdx+0xe8]
   14001d85a:	mov    rcx,rax
   14001d85d:	jmp    0x14001d861
   14001d85f:	xor    ecx,ecx
   14001d861:	test   rcx,rcx
   14001d864:	je     0x14001d88c
   14001d866:	mov    rax,QWORD PTR [rcx]
   14001d869:	lea    rdx,[rsp+0x30]
   14001d86e:	xor    r9d,r9d
   14001d871:	mov    QWORD PTR [rsp+0x20],rdx
   14001d876:	mov    edx,0xe146
   14001d87b:	xor    r8d,r8d
   14001d87e:	call   QWORD PTR [rax+0x18]
   14001d881:	test   eax,eax
   14001d883:	je     0x14001d88c
   14001d885:	mov    eax,0x1
   14001d88a:	jmp    0x14001d8b0
   14001d88c:	call   0x14001f2e8
   14001d891:	lea    r8,[rsp+0x30]
   14001d896:	xor    r9d,r9d
   14001d899:	mov    rcx,QWORD PTR [rax+0x8]
   14001d89d:	mov    QWORD PTR [rsp+0x20],r8
   14001d8a2:	xor    r8d,r8d
   14001d8a5:	mov    rax,QWORD PTR [rcx]
   14001d8a8:	mov    edx,0xe146
   14001d8ad:	call   QWORD PTR [rax+0x18]
   14001d8b0:	add    rsp,0x48
   14001d8b4:	ret    
   14001d8b5:	int3   
   14001d8b6:	int3   
   14001d8b7:	int3   
   14001d8b8:	rex push rbx
   14001d8ba:	sub    rsp,0x20
   14001d8be:	mov    rdx,QWORD PTR [rcx+0xc8]
   14001d8c5:	mov    rbx,rcx
   14001d8c8:	test   rdx,rdx
   14001d8cb:	je     0x14001d8d4
   14001d8cd:	call   0x14001cbe4
   14001d8d2:	jmp    0x14001d8e0
   14001d8d4:	mov    rdx,QWORD PTR [rcx+0xb0]
   14001d8db:	call   0x14001d188
   14001d8e0:	test   eax,eax
   14001d8e2:	mov    rcx,rbx
   14001d8e5:	jne    0x14001d8f3
   14001d8e7:	or     edx,0xffffffff
   14001d8ea:	call   0x14001d424
   14001d8ef:	xor    eax,eax
   14001d8f1:	jmp    0x14001d92c
   14001d8f3:	xor    edx,edx
   14001d8f5:	call   0x140018488
   14001d8fa:	mov    rcx,rbx
   14001d8fd:	test   eax,eax
   14001d8ff:	je     0x14001d8e7
   14001d901:	mov    edx,0xe146
   14001d906:	call   0x14001fe30
   14001d90b:	test   rax,rax
   14001d90e:	mov    rbx,rax
   14001d911:	je     0x14001d927
   14001d913:	call   0x14001d830
   14001d918:	mov    rcx,rbx
   14001d91b:	neg    eax
   14001d91d:	sbb    edx,edx
   14001d91f:	and    edx,0x5
   14001d922:	call   0x140020064
   14001d927:	mov    eax,0x1
   14001d92c:	add    rsp,0x20
   14001d930:	pop    rbx
   14001d931:	ret    
   14001d932:	int3   
   14001d933:	int3   
   14001d934:	mov    QWORD PTR [rsp+0x8],rbx
   14001d939:	mov    QWORD PTR [rsp+0x10],rbp
   14001d93e:	mov    QWORD PTR [rsp+0x18],rsi
   14001d943:	push   rdi
   14001d944:	sub    rsp,0x20
   14001d948:	cmp    QWORD PTR [rcx+0xb0],0x0
   14001d950:	mov    rdi,QWORD PTR [rcx+0xc0]
   14001d957:	mov    rbp,QWORD PTR [rcx+0xb8]
   14001d95e:	mov    rsi,rcx
   14001d961:	je     0x14001d991
   14001d963:	call   0x14001f2e8
   14001d968:	mov    rdx,QWORD PTR [rsi+0xb0]
   14001d96f:	mov    r8d,0x5
   14001d975:	mov    rbx,QWORD PTR [rax+0x18]
   14001d979:	mov    rcx,rbx
   14001d97c:	call   QWORD PTR [rip+0x25bae]        # 0x140043530
   14001d982:	mov    rcx,rbx
   14001d985:	mov    rdx,rax
   14001d988:	call   QWORD PTR [rip+0x25b8a]        # 0x140043518
   14001d98e:	mov    rbp,rax
   14001d991:	test   rbp,rbp
   14001d994:	je     0x14001d9a2
   14001d996:	mov    rcx,rbp
   14001d999:	call   QWORD PTR [rip+0x25b81]        # 0x140043520
   14001d99f:	mov    rdi,rax
   14001d9a2:	test   rdi,rdi
   14001d9a5:	mov    ebx,0x1
   14001d9aa:	je     0x14001d9df
   14001d9ac:	cmp    WORD PTR [rdi+0x2],0xffff
   14001d9b2:	mov    ecx,DWORD PTR [rdi]
   14001d9b4:	jne    0x14001d9c3
   14001d9b6:	mov    ecx,DWORD PTR [rdi+0xc]
   14001d9b9:	movzx  edx,WORD PTR [rdi+0x12]
   14001d9bd:	movzx  eax,WORD PTR [rdi+0x14]
   14001d9c1:	jmp    0x14001d9cb
   14001d9c3:	mov    dx,WORD PTR [rdi+0xa]
   14001d9c7:	mov    ax,WORD PTR [rdi+0xc]
   14001d9cb:	test   ecx,0x1801
   14001d9d1:	jne    0x14001d9dd
   14001d9d3:	test   dx,dx
   14001d9d6:	jne    0x14001d9dd
   14001d9d8:	test   ax,ax
   14001d9db:	je     0x14001d9df
   14001d9dd:	xor    ebx,ebx
   14001d9df:	cmp    QWORD PTR [rsi+0xb0],0x0
   14001d9e7:	je     0x14001d9f2
   14001d9e9:	mov    rcx,rbp
   14001d9ec:	call   QWORD PTR [rip+0x25a66]        # 0x140043458
   14001d9f2:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d9f7:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d9fc:	mov    eax,ebx
   14001d9fe:	mov    rbx,QWORD PTR [rsp+0x30]
   14001da03:	add    rsp,0x20
   14001da07:	pop    rdi
   14001da08:	ret    
   14001da09:	int3   
   14001da0a:	int3   
   14001da0b:	int3   
   14001da0c:	rex push rbx
   14001da0e:	sub    rsp,0x20
   14001da12:	test   r8,r8
   14001da15:	mov    rbx,r8
   14001da18:	jne    0x14001da31
   14001da1a:	mov    eax,DWORD PTR [rcx+0xa8]
   14001da20:	test   eax,eax
   14001da22:	je     0x14001da2d
   14001da24:	add    eax,0x20000
   14001da29:	mov    ebx,eax
   14001da2b:	jne    0x14001da31
   14001da2d:	xor    eax,eax
   14001da2f:	jmp    0x14001da5c
   14001da31:	call   0x14001f2e8
   14001da36:	mov    rcx,QWORD PTR [rax+0x8]
   14001da3a:	test   rcx,rcx
   14001da3d:	je     0x14001da52
   14001da3f:	mov    r9,QWORD PTR [rcx]
   14001da42:	mov    r8d,0x1
   14001da48:	mov    rdx,rbx
   14001da4b:	call   QWORD PTR [r9+0x158]
   14001da52:	movabs rax,0x1
   14001da5c:	add    rsp,0x20
   14001da60:	pop    rbx
   14001da61:	ret    
   14001da62:	int3   
   14001da63:	int3   
   14001da64:	lea    rax,[rip+0x27cf5]        # 0x140045760
   14001da6b:	ret    
   14001da6c:	mov    rax,rsp
   14001da6f:	mov    QWORD PTR [rax+0x8],rcx
   14001da73:	push   rdi
   14001da74:	push   r12
   14001da76:	push   r13
   14001da78:	push   r14
   14001da7a:	push   r15
   14001da7c:	sub    rsp,0x90
   14001da83:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14001da8c:	mov    QWORD PTR [rax+0x10],rbx
   14001da90:	mov    QWORD PTR [rax+0x18],rsi
   14001da94:	mov    r14,r9
   14001da97:	mov    r15,r8
   14001da9a:	mov    r12,rdx
   14001da9d:	mov    rdi,rcx
   14001daa0:	xor    ebx,ebx
   14001daa2:	cmp    r9,rbx
   14001daa5:	jne    0x14001dab0
   14001daa7:	call   0x14001f2e8
   14001daac:	mov    r14,QWORD PTR [rax+0x18]
   14001dab0:	call   0x14001f2e8
   14001dab5:	mov    r13,QWORD PTR [rax+0x68]
   14001dab9:	mov    QWORD PTR [rsp+0x48],r13
   14001dabe:	mov    rsi,rbx
   14001dac1:	mov    QWORD PTR [rsp+0x38],rbx
   14001dac6:	mov    QWORD PTR [rsp+0x40],rbx
   14001dacb:	mov    ecx,0x10
   14001dad0:	call   0x14001cdb0
   14001dad5:	mov    ecx,0x7c000
   14001dada:	call   0x14001cdb0
   14001dadf:	cmp    r13,rbx
   14001dae2:	je     0x14001db15
   14001dae4:	mov    rax,QWORD PTR [rdi]
   14001dae7:	lea    rdx,[rsp+0x70]
   14001daec:	mov    rcx,rdi
   14001daef:	call   QWORD PTR [rax+0x258]
   14001daf5:	cmp    eax,ebx
   14001daf7:	jne    0x14001db00
   14001daf9:	xor    eax,eax
   14001dafb:	jmp    0x14001dd0d
   14001db00:	mov    rax,QWORD PTR [r13+0x0]
   14001db04:	mov    r8,r12
   14001db07:	lea    rdx,[rsp+0x70]
   14001db0c:	mov    rcx,r13
   14001db0f:	call   QWORD PTR [rax+0x28]
   14001db12:	mov    r12,rax
   14001db15:	cmp    r12,rbx
   14001db18:	jne    0x14001db21
   14001db1a:	xor    eax,eax
   14001db1c:	jmp    0x14001dd0d
   14001db21:	call   0x14002157c
   14001db26:	mov    r11,rax
   14001db29:	mov    ecx,ebx
   14001db2b:	cmp    rax,rbx
   14001db2e:	setne  cl
   14001db31:	cmp    ecx,ebx
   14001db33:	jne    0x14001db40
   14001db35:	mov    ecx,0x80004005
   14001db3a:	call   0x140003dc0
   14001db3f:	int3   
   14001db40:	mov    rax,QWORD PTR [rax]
   14001db43:	mov    rcx,r11
   14001db46:	call   QWORD PTR [rax+0x18]
   14001db49:	add    rax,0x18
   14001db4d:	mov    QWORD PTR [rsp+0x30],rax
   14001db52:	mov    WORD PTR [rsp+0xd8],bx
   14001db5a:	lea    r8,[rsp+0xd8]
   14001db62:	lea    rdx,[rsp+0x30]
   14001db67:	mov    rcx,r12
   14001db6a:	call   0x1400264e4
   14001db6f:	mov    ecx,ebx
   14001db71:	cmp    eax,ebx
   14001db73:	sete   cl
   14001db76:	cmp    DWORD PTR [rip+0x430cc],ebx        # 0x140060c48
   14001db7c:	je     0x14001dbca
   14001db7e:	cmp    ecx,ebx
   14001db80:	jne    0x14001dbce
   14001db82:	mov    ecx,0x2a
   14001db87:	call   QWORD PTR [rip+0x25dcb]        # 0x140043958
   14001db8d:	cmp    eax,ebx
   14001db8f:	je     0x14001dc1b
   14001db95:	lea    rdx,[rip+0x27cfc]        # 0x140045898
   14001db9c:	mov    rcx,QWORD PTR [rsp+0x30]
   14001dba1:	call   0x14002bae0
   14001dba6:	cmp    eax,ebx
   14001dba8:	sete   al
   14001dbab:	movzx  ecx,al
   14001dbae:	cmp    ecx,ebx
   14001dbb0:	je     0x14001dc1b
   14001dbb2:	movzx  eax,WORD PTR [rsp+0xd8]
   14001dbba:	cmp    ax,0x8
   14001dbbe:	cmove  ax,bx
   14001dbc2:	mov    WORD PTR [rsp+0xd8],ax
   14001dbca:	cmp    ecx,ebx
   14001dbcc:	je     0x14001dc1b
   14001dbce:	mov    rdx,r12
   14001dbd1:	lea    rcx,[rsp+0x50]
   14001dbd6:	call   0x140026498
   14001dbdb:	nop
   14001dbdc:	movzx  edx,WORD PTR [rsp+0xd8]
   14001dbe4:	lea    rcx,[rsp+0x50]
   14001dbe9:	call   0x1400263a0
   14001dbee:	lea    rcx,[rsp+0x50]
   14001dbf3:	call   0x140025fe4
   14001dbf8:	mov    rsi,rax
   14001dbfb:	mov    QWORD PTR [rsp+0x38],rax
   14001dc00:	lea    rcx,[rsp+0x50]
   14001dc05:	call   0x140025fcc
   14001dc0a:	cmp    rsi,rbx
   14001dc0d:	je     0x14001dc1b
   14001dc0f:	mov    rcx,rsi
   14001dc12:	call   QWORD PTR [rip+0x258f0]        # 0x140043508
   14001dc18:	mov    r12,rax
   14001dc1b:	or     DWORD PTR [rdi+0x88],0xffffffff
   14001dc22:	or     DWORD PTR [rdi+0x78],0x10
   14001dc26:	mov    rcx,rdi
   14001dc29:	call   0x14001b360
   14001dc2e:	cmp    r15,rbx
   14001dc31:	jne    0x14001dc38
   14001dc33:	mov    r8,rbx
   14001dc36:	jmp    0x14001dc3c
   14001dc38:	mov    r8,QWORD PTR [r15+0x40]
   14001dc3c:	mov    QWORD PTR [rsp+0x20],rbx
   14001dc41:	lea    r9,[rip+0xfffffffffffff5e8]        # 0x14001d230
   14001dc48:	mov    rdx,r12
   14001dc4b:	mov    rcx,r14
   14001dc4e:	call   QWORD PTR [rip+0x25a5c]        # 0x1400436b0
   14001dc54:	mov    r12,rax
   14001dc57:	mov    QWORD PTR [rsp+0x40],rax
   14001dc5c:	mov    rdx,QWORD PTR [rsp+0x30]
   14001dc61:	add    rdx,0xffffffffffffffe8
   14001dc65:	or     ecx,0xffffffff
   14001dc68:	lock xadd DWORD PTR [rdx+0x10],ecx
   14001dc6d:	add    ecx,0xffffffff
   14001dc70:	cmp    ecx,ebx
   14001dc72:	jg     0x14001dc7f
   14001dc74:	mov    rcx,QWORD PTR [rdx]
   14001dc77:	mov    r8,QWORD PTR [rcx]
   14001dc7a:	call   QWORD PTR [r8+0x8]
   14001dc7e:	nop
   14001dc7f:	jmp    0x14001dc9a
   14001dc81:	xor    ebx,ebx
   14001dc83:	mov    rdi,QWORD PTR [rsp+0xc0]
   14001dc8b:	mov    r13,QWORD PTR [rsp+0x48]
   14001dc90:	mov    rsi,QWORD PTR [rsp+0x38]
   14001dc95:	mov    r12,QWORD PTR [rsp+0x40]
   14001dc9a:	cmp    r13,rbx
   14001dc9d:	je     0x14001dcc2
   14001dc9f:	cmp    r12,rbx
   14001dca2:	je     0x14001dcc2
   14001dca4:	mov    rax,QWORD PTR [r13+0x0]
   14001dca8:	lea    rdx,[rsp+0x70]
   14001dcad:	mov    rcx,r13
   14001dcb0:	call   QWORD PTR [rax+0x30]
   14001dcb3:	mov    r11,QWORD PTR [rdi]
   14001dcb6:	xor    edx,edx
   14001dcb8:	mov    rcx,rdi
   14001dcbb:	call   QWORD PTR [r11+0x258]
   14001dcc2:	call   0x140018f8c
   14001dcc7:	cmp    eax,ebx
   14001dcc9:	jne    0x14001dcd7
   14001dccb:	mov    rax,QWORD PTR [rdi]
   14001dcce:	mov    rcx,rdi
   14001dcd1:	call   QWORD PTR [rax+0x228]
   14001dcd7:	cmp    r12,rbx
   14001dcda:	je     0x14001dcee
   14001dcdc:	test   BYTE PTR [rdi+0x78],0x10
   14001dce0:	jne    0x14001dcee
   14001dce2:	mov    rcx,r12
   14001dce5:	call   QWORD PTR [rip+0x25a7d]        # 0x140043768
   14001dceb:	mov    r12,rbx
   14001dcee:	cmp    rsi,rbx
   14001dcf1:	je     0x14001dd05
   14001dcf3:	mov    rcx,rsi
   14001dcf6:	call   QWORD PTR [rip+0x25854]        # 0x140043550
   14001dcfc:	mov    rcx,rsi
   14001dcff:	call   QWORD PTR [rip+0x25843]        # 0x140043548
   14001dd05:	cmp    r12,rbx
   14001dd08:	setne  bl
   14001dd0b:	mov    eax,ebx
   14001dd0d:	lea    r11,[rsp+0x90]
   14001dd15:	mov    rbx,QWORD PTR [r11+0x38]
   14001dd19:	mov    rsi,QWORD PTR [r11+0x40]
   14001dd1d:	mov    rsp,r11
   14001dd20:	pop    r15
   14001dd22:	pop    r14
   14001dd24:	pop    r13
   14001dd26:	pop    r12
   14001dd28:	pop    rdi
   14001dd29:	ret    
   14001dd2a:	int3   
   14001dd2b:	int3   
   14001dd2c:	rex push rbp
   14001dd2e:	sub    rsp,0x20
   14001dd32:	mov    rbp,rdx
   14001dd35:	lea    rcx,[rbp+0x30]
   14001dd39:	call   0x140003de0
   14001dd3e:	add    rsp,0x20
   14001dd42:	pop    rbp
   14001dd43:	ret    
   14001dd44:	int3   
   14001dd45:	int3   
   14001dd46:	int3   
   14001dd47:	int3   
   14001dd48:	int3   
   14001dd49:	int3   
   14001dd4a:	int3   
   14001dd4b:	int3   
   14001dd4c:	rex push rbp
   14001dd4e:	sub    rsp,0x20
   14001dd52:	mov    rbp,rdx
   14001dd55:	lea    rcx,[rbp+0x50]
   14001dd59:	call   0x140025fcc
   14001dd5e:	add    rsp,0x20
   14001dd62:	pop    rbp
   14001dd63:	ret    
   14001dd64:	int3   
   14001dd65:	int3   
   14001dd66:	int3   
   14001dd67:	int3   
   14001dd68:	int3   
   14001dd69:	int3   
   14001dd6a:	int3   
   14001dd6b:	int3   
   14001dd6c:	mov    QWORD PTR [rsp+0x10],rdx
   14001dd71:	push   rbx
   14001dd72:	push   rbp
   14001dd73:	sub    rsp,0x38
   14001dd77:	mov    rbp,rdx
   14001dd7a:	mov    rcx,QWORD PTR [rbp+0x60]
   14001dd7e:	xor    ebx,ebx
   14001dd80:	cmp    rcx,rbx
   14001dd83:	je     0x14001dd8a
   14001dd85:	call   0x140021780
   14001dd8a:	mov    rax,QWORD PTR [rbp+0xc0]
   14001dd91:	or     DWORD PTR [rax+0x88],0xffffffff
   14001dd98:	lea    rax,[rip+0xfffffffffffffee2]        # 0x14001dc81
   14001dd9f:	jmp    0x14001dda1
   14001dda1:	add    rsp,0x38
   14001dda5:	pop    rbp
   14001dda6:	pop    rbx
   14001dda7:	ret    
   14001dda8:	int3   
   14001dda9:	int3   
   14001ddaa:	int3   
   14001ddab:	int3   
   14001ddac:	mov    QWORD PTR [rsp+0x8],rcx
   14001ddb1:	push   rbx
   14001ddb2:	push   rsi
   14001ddb3:	push   rdi
   14001ddb4:	push   r12
   14001ddb6:	push   r13
   14001ddb8:	push   r14
   14001ddba:	push   r15
   14001ddbc:	sub    rsp,0x70
   14001ddc0:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001ddc9:	mov    rbx,rcx
   14001ddcc:	mov    r15,QWORD PTR [rcx+0xc0]
   14001ddd3:	mov    r12,QWORD PTR [rcx+0xb8]
   14001ddda:	mov    QWORD PTR [rsp+0x48],r12
   14001dddf:	call   0x14001f2e8
   14001dde4:	mov    rax,QWORD PTR [rax+0x18]
   14001dde8:	mov    QWORD PTR [rsp+0x40],rax
   14001dded:	cmp    QWORD PTR [rbx+0xb0],0x0
   14001ddf5:	je     0x14001de2f
   14001ddf7:	call   0x14001f2e8
   14001ddfc:	mov    rdi,QWORD PTR [rax+0x18]
   14001de00:	mov    QWORD PTR [rsp+0x40],rdi
   14001de05:	mov    r8d,0x5
   14001de0b:	mov    rdx,QWORD PTR [rbx+0xb0]
   14001de12:	mov    rcx,rdi
   14001de15:	call   QWORD PTR [rip+0x25715]        # 0x140043530
   14001de1b:	mov    rdx,rax
   14001de1e:	mov    rcx,rdi
   14001de21:	call   QWORD PTR [rip+0x256f1]        # 0x140043518
   14001de27:	mov    r12,rax
   14001de2a:	mov    QWORD PTR [rsp+0x48],rax
   14001de2f:	test   r12,r12
   14001de32:	je     0x14001de40
   14001de34:	mov    rcx,r12
   14001de37:	call   QWORD PTR [rip+0x256e3]        # 0x140043520
   14001de3d:	mov    r15,rax
   14001de40:	test   r15,r15
   14001de43:	jne    0x14001de4e
   14001de45:	or     rax,0xffffffffffffffff
   14001de49:	jmp    0x14001e035
   14001de4e:	mov    rcx,rbx
   14001de51:	call   0x14001d694
   14001de56:	mov    rdi,rax
   14001de59:	mov    QWORD PTR [rsp+0x50],rax
   14001de5e:	call   0x140018f8c
   14001de63:	xor    r14d,r14d
   14001de66:	mov    DWORD PTR [rsp+0xb8],r14d
   14001de6e:	xor    esi,esi
   14001de70:	mov    QWORD PTR [rsp+0xc8],rsi
   14001de78:	xor    r13d,r13d
   14001de7b:	mov    DWORD PTR [rsp+0xc0],r13d
   14001de83:	test   rdi,rdi
   14001de86:	je     0x14001df20
   14001de8c:	call   QWORD PTR [rip+0x25b0e]        # 0x1400439a0
   14001de92:	cmp    rdi,rax
   14001de95:	je     0x14001df20
   14001de9b:	mov    rcx,rdi
   14001de9e:	call   QWORD PTR [rip+0x25814]        # 0x1400436b8
   14001dea4:	test   eax,eax
   14001dea6:	je     0x14001df20
   14001dea8:	xor    edx,edx
   14001deaa:	mov    rcx,rdi
   14001dead:	call   QWORD PTR [rip+0x25b3d]        # 0x1400439f0
   14001deb3:	lea    r14d,[rsi+0x1]
   14001deb7:	mov    DWORD PTR [rsp+0xb8],r14d
   14001debf:	call   0x14001f3b8
   14001dec4:	test   rax,rax
   14001dec7:	je     0x14001dee2
   14001dec9:	mov    rdx,QWORD PTR [rax]
   14001decc:	mov    rcx,rax
   14001decf:	call   QWORD PTR [rdx+0xe8]
   14001ded5:	mov    rsi,rax
   14001ded8:	mov    QWORD PTR [rsp+0xc8],rax
   14001dee0:	jmp    0x14001deea
   14001dee2:	mov    QWORD PTR [rsp+0xc8],rsi
   14001deea:	test   rsi,rsi
   14001deed:	je     0x14001df20
   14001deef:	mov    rax,QWORD PTR [rsi]
   14001def2:	mov    rcx,rsi
   14001def5:	call   QWORD PTR [rax+0x240]
   14001defb:	test   eax,eax
   14001defd:	je     0x14001df20
   14001deff:	mov    rcx,rsi
   14001df02:	call   0x140020094
   14001df07:	test   eax,eax
   14001df09:	je     0x14001df20
   14001df0b:	xor    edx,edx
   14001df0d:	mov    rcx,rsi
   14001df10:	call   0x1400200c4
   14001df15:	mov    r13d,r14d
   14001df18:	mov    DWORD PTR [rsp+0xc0],r14d
   14001df20:	mov    rcx,rbx
   14001df23:	call   0x14001b360
   14001df28:	mov    rcx,rdi
   14001df2b:	call   0x140018e70
   14001df30:	mov    r9,QWORD PTR [rsp+0x40]
   14001df35:	mov    r8,rax
   14001df38:	mov    rdx,r15
   14001df3b:	mov    rcx,rbx
   14001df3e:	call   0x14001da6c
   14001df43:	test   eax,eax
   14001df45:	je     0x14001df9c
   14001df47:	test   BYTE PTR [rbx+0x78],0x10
   14001df4b:	je     0x14001df72
   14001df4d:	mov    r15d,0x4
   14001df53:	mov    rcx,rbx
   14001df56:	call   0x14001fee4
   14001df5b:	bt     eax,0x8
   14001df5f:	lea    eax,[r15+0x1]
   14001df63:	cmovb  r15d,eax
   14001df67:	mov    edx,r15d
   14001df6a:	mov    rcx,rbx
   14001df6d:	call   0x1400187d4
   14001df72:	cmp    QWORD PTR [rbx+0x40],0x0
   14001df77:	je     0x14001df9c
   14001df79:	mov    DWORD PTR [rsp+0x30],0x97
   14001df81:	and    DWORD PTR [rsp+0x28],0x0
   14001df86:	and    DWORD PTR [rsp+0x20],0x0
   14001df8b:	xor    r9d,r9d
   14001df8e:	xor    r8d,r8d
   14001df91:	xor    edx,edx
   14001df93:	mov    rcx,rbx
   14001df96:	call   0x140020160
   14001df9b:	nop
   14001df9c:	jmp    0x14001dfc8
   14001df9e:	mov    rbx,QWORD PTR [rsp+0xb0]
   14001dfa6:	mov    r12,QWORD PTR [rsp+0x48]
   14001dfab:	mov    rdi,QWORD PTR [rsp+0x50]
   14001dfb0:	mov    r14d,DWORD PTR [rsp+0xb8]
   14001dfb8:	mov    rsi,QWORD PTR [rsp+0xc8]
   14001dfc0:	mov    r13d,DWORD PTR [rsp+0xc0]
   14001dfc8:	test   r13d,r13d
   14001dfcb:	je     0x14001dfda
   14001dfcd:	mov    edx,0x1
   14001dfd2:	mov    rcx,rsi
   14001dfd5:	call   0x1400200c4
   14001dfda:	test   r14d,r14d
   14001dfdd:	je     0x14001dfed
   14001dfdf:	mov    edx,0x1
   14001dfe4:	mov    rcx,rdi
   14001dfe7:	call   QWORD PTR [rip+0x25a03]        # 0x1400439f0
   14001dfed:	test   rdi,rdi
   14001dff0:	je     0x14001e007
   14001dff2:	call   QWORD PTR [rip+0x256b0]        # 0x1400436a8
   14001dff8:	cmp    rax,QWORD PTR [rbx+0x40]
   14001dffc:	jne    0x14001e007
   14001dffe:	mov    rcx,rdi
   14001e001:	call   QWORD PTR [rip+0x258a1]        # 0x1400438a8
   14001e007:	mov    rax,QWORD PTR [rbx]
   14001e00a:	mov    rcx,rbx
   14001e00d:	call   QWORD PTR [rax+0xc0]
   14001e013:	mov    rcx,rbx
   14001e016:	call   0x14001d6f0
   14001e01b:	cmp    QWORD PTR [rbx+0xb0],0x0
   14001e023:	je     0x14001e02e
   14001e025:	mov    rcx,r12
   14001e028:	call   QWORD PTR [rip+0x2542a]        # 0x140043458
   14001e02e:	movsxd rax,DWORD PTR [rbx+0x88]
   14001e035:	add    rsp,0x70
   14001e039:	pop    r15
   14001e03b:	pop    r14
   14001e03d:	pop    r13
   14001e03f:	pop    r12
   14001e041:	pop    rdi
   14001e042:	pop    rsi
   14001e043:	pop    rbx
   14001e044:	ret    
   14001e045:	int3   
   14001e046:	int3   
   14001e047:	int3   
   14001e048:	int3   
   14001e049:	int3   
   14001e04a:	int3   
   14001e04b:	int3   
   14001e04c:	mov    QWORD PTR [rsp+0x10],rdx
   14001e051:	push   rbp
   14001e052:	sub    rsp,0x40
   14001e056:	mov    rbp,rdx
   14001e059:	mov    rcx,QWORD PTR [rbp+0x60]
   14001e05d:	test   rcx,rcx
   14001e060:	je     0x14001e067
   14001e062:	call   0x140021780
   14001e067:	mov    rax,QWORD PTR [rbp+0xb0]
   14001e06e:	or     DWORD PTR [rax+0x88],0xffffffff
   14001e075:	lea    rax,[rip+0xffffffffffffff22]        # 0x14001df9e
   14001e07c:	jmp    0x14001e07e
   14001e07e:	add    rsp,0x40
   14001e082:	pop    rbp
   14001e083:	ret    
   14001e084:	int3   
   14001e085:	int3   
   14001e086:	int3   
   14001e087:	int3   
   14001e088:	mov    QWORD PTR [rsp+0x8],rbx
   14001e08d:	mov    QWORD PTR [rsp+0x10],rsi
   14001e092:	push   rdi
   14001e093:	sub    rsp,0x20
   14001e097:	test   r8,r8
   14001e09a:	mov    rdi,r9
   14001e09d:	mov    rax,r8
   14001e0a0:	mov    rsi,rdx
   14001e0a3:	mov    rbx,rcx
   14001e0a6:	jne    0x14001e0c3
   14001e0a8:	call   0x14001f3b8
   14001e0ad:	test   rax,rax
   14001e0b0:	je     0x14001e0c1
   14001e0b2:	mov    r8,QWORD PTR [rax]
   14001e0b5:	mov    rcx,rax
   14001e0b8:	call   QWORD PTR [r8+0xe8]
   14001e0bf:	jmp    0x14001e0c3
   14001e0c1:	xor    eax,eax
   14001e0c3:	mov    r9,QWORD PTR [rsp+0x50]
   14001e0c8:	mov    r8,rax
   14001e0cb:	mov    rdx,rsi
   14001e0ce:	mov    rcx,rbx
   14001e0d1:	mov    QWORD PTR [rbx+0xc8],rdi
   14001e0d8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e0dd:	mov    rsi,QWORD PTR [rsp+0x38]
   14001e0e2:	add    rsp,0x20
   14001e0e6:	pop    rdi
   14001e0e7:	jmp    0x14001da6c
   14001e0ec:	mov    QWORD PTR [rsp+0x8],rbx
   14001e0f1:	mov    QWORD PTR [rsp+0x10],rsi
   14001e0f6:	push   rdi
   14001e0f7:	sub    rsp,0x30
   14001e0fb:	mov    rsi,rcx
   14001e0fe:	mov    rcx,rdx
   14001e101:	mov    rbx,r9
   14001e104:	mov    rdi,r8
   14001e107:	call   QWORD PTR [rip+0x25413]        # 0x140043520
   14001e10d:	xor    r9d,r9d
   14001e110:	mov    r8,rdi
   14001e113:	mov    rcx,rsi
   14001e116:	mov    rdx,rax
   14001e119:	mov    QWORD PTR [rsp+0x20],rbx
   14001e11e:	call   0x14001e088
   14001e123:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e128:	mov    rsi,QWORD PTR [rsp+0x48]
   14001e12d:	add    rsp,0x30
   14001e131:	pop    rdi
   14001e132:	ret    
   14001e133:	int3   
   14001e134:	sub    rsp,0x38
   14001e138:	and    QWORD PTR [rsp+0x20],0x0
   14001e13e:	call   0x14001e088
   14001e143:	add    rsp,0x38
   14001e147:	ret    
   14001e148:	mov    QWORD PTR [rsp+0x8],rbx
   14001e14d:	mov    QWORD PTR [rsp+0x10],rbp
   14001e152:	mov    QWORD PTR [rsp+0x18],rsi
   14001e157:	push   rdi
   14001e158:	sub    rsp,0x20
   14001e15c:	test   rdx,0xffffffffffff0000
   14001e163:	mov    rbp,r8
   14001e166:	mov    rdi,rdx
   14001e169:	mov    rsi,rcx
   14001e16c:	mov    QWORD PTR [rcx+0xb0],rdx
   14001e173:	jne    0x14001e187
   14001e175:	cmp    DWORD PTR [rcx+0xa8],0x0
   14001e17c:	jne    0x14001e187
   14001e17e:	movzx  eax,dx
   14001e181:	mov    DWORD PTR [rcx+0xa8],eax
   14001e187:	call   0x14001f2e8
   14001e18c:	mov    r8d,0x5
   14001e192:	mov    rdx,rdi
   14001e195:	mov    rbx,QWORD PTR [rax+0x18]
   14001e199:	mov    rcx,rbx
   14001e19c:	call   QWORD PTR [rip+0x2538e]        # 0x140043530
   14001e1a2:	mov    rcx,rbx
   14001e1a5:	mov    rdx,rax
   14001e1a8:	call   QWORD PTR [rip+0x2536a]        # 0x140043518
   14001e1ae:	mov    r9,rbx
   14001e1b1:	mov    r8,rbp
   14001e1b4:	mov    rdx,rax
   14001e1b7:	mov    rcx,rsi
   14001e1ba:	mov    rdi,rax
   14001e1bd:	call   0x14001e0ec
   14001e1c2:	mov    rcx,rdi
   14001e1c5:	mov    ebx,eax
   14001e1c7:	call   QWORD PTR [rip+0x2528b]        # 0x140043458
   14001e1cd:	mov    rbp,QWORD PTR [rsp+0x38]
   14001e1d2:	mov    rsi,QWORD PTR [rsp+0x40]
   14001e1d7:	mov    eax,ebx
   14001e1d9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e1de:	add    rsp,0x20
   14001e1e2:	pop    rdi
   14001e1e3:	ret    
   14001e1e4:	xor    r9d,r9d
   14001e1e7:	jmp    0x14001e0ec
   14001e1ec:	sub    rsp,0x48
   14001e1f0:	and    QWORD PTR [rsp+0x38],0x0
   14001e1f6:	mov    eax,DWORD PTR [rsp+0x78]
   14001e1fa:	mov    r10,QWORD PTR [rcx]
   14001e1fd:	mov    DWORD PTR [rsp+0x30],eax
   14001e201:	mov    rax,QWORD PTR [rsp+0x70]
   14001e206:	mov    QWORD PTR [rsp+0x28],rax
   14001e20b:	mov    QWORD PTR [rsp+0x20],r9
   14001e210:	mov    r9d,r8d
   14001e213:	mov    r8,rdx
   14001e216:	lea    rdx,[rip+0x27773]        # 0x140045990
   14001e21d:	call   QWORD PTR [r10+0xa8]
   14001e224:	add    rsp,0x48
   14001e228:	ret    
   14001e229:	int3   
   14001e22a:	int3   
   14001e22b:	int3   
   14001e22c:	mov    QWORD PTR [rsp+0x8],rcx
   14001e231:	push   rbx
   14001e232:	sub    rsp,0x30
   14001e236:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001e23f:	mov    rbx,rcx
   14001e242:	lea    rax,[rip+0x2778f]        # 0x1400459d8
   14001e249:	mov    QWORD PTR [rcx],rax
   14001e24c:	call   0x1400191b0
   14001e251:	nop
   14001e252:	mov    rcx,rbx
   14001e255:	add    rsp,0x30
   14001e259:	pop    rbx
   14001e25a:	jmp    0x140019964
   14001e25f:	int3   
   14001e260:	int3   
   14001e261:	int3   
   14001e262:	int3   
   14001e263:	int3   
   14001e264:	int3   
   14001e265:	int3   
   14001e266:	int3   
   14001e267:	int3   
   14001e268:	int3   
   14001e269:	int3   
   14001e26a:	int3   
   14001e26b:	int3   
   14001e26c:	rex push rbp
   14001e26e:	sub    rsp,0x20
   14001e272:	mov    rbp,rdx
   14001e275:	mov    rcx,QWORD PTR [rbp+0x40]
   14001e279:	call   0x140019964
   14001e27e:	add    rsp,0x20
   14001e282:	pop    rbp
   14001e283:	ret    
   14001e284:	sub    rsp,0x38
   14001e288:	cmp    edx,0x2b
   14001e28b:	je     0x14001e29e
   14001e28d:	mov    rax,QWORD PTR [rsp+0x60]
   14001e292:	mov    QWORD PTR [rsp+0x20],rax
   14001e297:	call   0x14001c7f4
   14001e29c:	jmp    0x14001e2af
   14001e29e:	mov    rax,QWORD PTR [rcx]
   14001e2a1:	mov    rdx,r9
   14001e2a4:	call   QWORD PTR [rax+0x270]
   14001e2aa:	mov    eax,0x1
   14001e2af:	add    rsp,0x38
   14001e2b3:	ret    
   14001e2b4:	sub    rsp,0x48
   14001e2b8:	and    QWORD PTR [rsp+0x38],0x0
   14001e2be:	mov    eax,DWORD PTR [rsp+0x78]
   14001e2c2:	mov    r10,QWORD PTR [rcx]
   14001e2c5:	mov    DWORD PTR [rsp+0x30],eax
   14001e2c9:	mov    rax,QWORD PTR [rsp+0x70]
   14001e2ce:	mov    QWORD PTR [rsp+0x28],rax
   14001e2d3:	mov    QWORD PTR [rsp+0x20],r9
   14001e2d8:	mov    r9d,r8d
   14001e2db:	mov    r8,rdx
   14001e2de:	lea    rdx,[rip+0x2796b]        # 0x140045c50
   14001e2e5:	call   QWORD PTR [r10+0xa8]
   14001e2ec:	add    rsp,0x48
   14001e2f0:	ret    
   14001e2f1:	int3   
   14001e2f2:	int3   
   14001e2f3:	int3   
   14001e2f4:	mov    QWORD PTR [rsp+0x8],rcx
   14001e2f9:	push   rbx
   14001e2fa:	sub    rsp,0x30
   14001e2fe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001e307:	mov    rbx,rcx
   14001e30a:	lea    rax,[rip+0x27987]        # 0x140045c98
   14001e311:	mov    QWORD PTR [rcx],rax
   14001e314:	call   0x1400191b0
   14001e319:	nop
   14001e31a:	mov    rcx,rbx
   14001e31d:	add    rsp,0x30
   14001e321:	pop    rbx
   14001e322:	jmp    0x140019964
   14001e327:	int3   
   14001e328:	int3   
   14001e329:	int3   
   14001e32a:	int3   
   14001e32b:	int3   
   14001e32c:	int3   
   14001e32d:	int3   
   14001e32e:	int3   
   14001e32f:	int3   
   14001e330:	int3   
   14001e331:	int3   
   14001e332:	int3   
   14001e333:	int3   
   14001e334:	rex push rbp
   14001e336:	sub    rsp,0x20
   14001e33a:	mov    rbp,rdx
   14001e33d:	mov    rcx,QWORD PTR [rbp+0x40]
   14001e341:	call   0x140019964
   14001e346:	add    rsp,0x20
   14001e34a:	pop    rbp
   14001e34b:	ret    
   14001e34c:	sub    rsp,0x48
   14001e350:	and    QWORD PTR [rsp+0x38],0x0
   14001e356:	mov    eax,DWORD PTR [rsp+0x70]
   14001e35a:	mov    r10,QWORD PTR [rcx]
   14001e35d:	mov    DWORD PTR [rsp+0x30],eax
   14001e361:	mov    QWORD PTR [rsp+0x28],r9
   14001e366:	mov    r9d,edx
   14001e369:	mov    QWORD PTR [rsp+0x20],r8
   14001e36e:	lea    rdx,[rip+0x27b9b]        # 0x140045f10
   14001e375:	xor    r8d,r8d
   14001e378:	call   QWORD PTR [r10+0xa8]
   14001e37f:	add    rsp,0x48
   14001e383:	ret    
   14001e384:	mov    QWORD PTR [rsp+0x8],rcx
   14001e389:	push   rbx
   14001e38a:	sub    rsp,0x30
   14001e38e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001e397:	mov    rbx,rcx
   14001e39a:	lea    rax,[rip+0x27bb7]        # 0x140045f58
   14001e3a1:	mov    QWORD PTR [rcx],rax
   14001e3a4:	call   0x1400191b0
   14001e3a9:	nop
   14001e3aa:	mov    rcx,rbx
   14001e3ad:	add    rsp,0x30
   14001e3b1:	pop    rbx
   14001e3b2:	jmp    0x140019964
   14001e3b7:	int3   
   14001e3b8:	int3   
   14001e3b9:	int3   
   14001e3ba:	int3   
   14001e3bb:	int3   
   14001e3bc:	int3   
   14001e3bd:	int3   
   14001e3be:	int3   
   14001e3bf:	int3   
   14001e3c0:	int3   
   14001e3c1:	int3   
   14001e3c2:	int3   
   14001e3c3:	int3   
   14001e3c4:	rex push rbp
   14001e3c6:	sub    rsp,0x20
   14001e3ca:	mov    rbp,rdx
   14001e3cd:	mov    rcx,QWORD PTR [rbp+0x40]
   14001e3d1:	call   0x140019964
   14001e3d6:	add    rsp,0x20
   14001e3da:	pop    rbp
   14001e3db:	ret    
   14001e3dc:	sub    rsp,0x38
   14001e3e0:	mov    eax,edx
   14001e3e2:	sub    eax,0x2b
   14001e3e5:	je     0x14001e43c
   14001e3e7:	sub    eax,0x1
   14001e3ea:	je     0x14001e42e
   14001e3ec:	sub    eax,0x1
   14001e3ef:	je     0x14001e420
   14001e3f1:	cmp    eax,0xc
   14001e3f4:	je     0x14001e407
   14001e3f6:	mov    rax,QWORD PTR [rsp+0x60]
   14001e3fb:	mov    QWORD PTR [rsp+0x20],rax
   14001e400:	call   0x14001c7f4
   14001e405:	jmp    0x14001e44e
   14001e407:	mov    rax,QWORD PTR [rcx]
   14001e40a:	mov    rdx,r9
   14001e40d:	call   QWORD PTR [rax+0x280]
   14001e413:	movsxd rcx,eax
   14001e416:	mov    rax,QWORD PTR [rsp+0x60]
   14001e41b:	mov    QWORD PTR [rax],rcx
   14001e41e:	jmp    0x14001e449
   14001e420:	mov    rax,QWORD PTR [rcx]
   14001e423:	mov    rdx,r9
   14001e426:	call   QWORD PTR [rax+0x288]
   14001e42c:	jmp    0x14001e449
   14001e42e:	mov    rax,QWORD PTR [rcx]
   14001e431:	mov    rdx,r9
   14001e434:	call   QWORD PTR [rax+0x278]
   14001e43a:	jmp    0x14001e449
   14001e43c:	mov    r8,QWORD PTR [rcx]
   14001e43f:	mov    rdx,r9
   14001e442:	call   QWORD PTR [r8+0x270]
   14001e449:	mov    eax,0x1
   14001e44e:	add    rsp,0x38
   14001e452:	ret    
   14001e453:	int3   
   14001e454:	lea    rax,[rip+0x274a5]        # 0x140045900
   14001e45b:	ret    
   14001e45c:	lea    rax,[rip+0x274cd]        # 0x140045930
   14001e463:	ret    
   14001e464:	lea    rax,[rip+0x274f5]        # 0x140045960
   14001e46b:	ret    
   14001e46c:	mov    QWORD PTR [rsp+0x10],rbx
   14001e471:	push   rdi
   14001e472:	sub    rsp,0x20
   14001e476:	mov    rbx,rcx
   14001e479:	mov    rcx,QWORD PTR [rcx+0x8]
   14001e47d:	lea    r8,[rsp+0x30]
   14001e482:	mov    edi,edx
   14001e484:	call   0x14001fe68
   14001e489:	mov    rax,QWORD PTR [rsp+0x30]
   14001e48e:	test   rax,rax
   14001e491:	jne    0x14001e4ae
   14001e493:	mov    rcx,QWORD PTR [rbx+0x8]
   14001e497:	mov    edx,edi
   14001e499:	call   0x14001fe08
   14001e49e:	test   rax,rax
   14001e4a1:	jne    0x14001e4a9
   14001e4a3:	call   0x14002189c
   14001e4a8:	int3   
   14001e4a9:	mov    rax,QWORD PTR [rsp+0x30]
   14001e4ae:	and    DWORD PTR [rbx+0x14],0x0
   14001e4b2:	mov    DWORD PTR [rbx+0x10],edi
   14001e4b5:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e4ba:	add    rsp,0x20
   14001e4be:	pop    rdi
   14001e4bf:	ret    
   14001e4c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e4c5:	mov    QWORD PTR [rsp+0x10],rsi
   14001e4ca:	push   rdi
   14001e4cb:	sub    rsp,0x20
   14001e4cf:	cmp    QWORD PTR [r8+0x40],0x0
   14001e4d4:	mov    rbx,r8
   14001e4d7:	mov    esi,edx
   14001e4d9:	mov    rdi,rcx
   14001e4dc:	jne    0x14001e568
   14001e4e2:	mov    rcx,rbx
   14001e4e5:	call   0x14001fdc8
   14001e4ea:	test   rax,rax
   14001e4ed:	jne    0x14001e568
   14001e4ef:	mov    edx,esi
   14001e4f1:	mov    rcx,rdi
   14001e4f4:	call   0x14001e46c
   14001e4f9:	mov    rcx,QWORD PTR [rdi+0x8]
   14001e4fd:	lea    r8,[rsp+0x40]
   14001e502:	mov    edx,esi
   14001e504:	call   0x14001fe68
   14001e509:	mov    rdx,QWORD PTR [rsp+0x40]
   14001e50e:	test   rdx,rdx
   14001e511:	je     0x14001e549
   14001e513:	mov    rcx,rbx
   14001e516:	call   0x140019df8
   14001e51b:	test   eax,eax
   14001e51d:	jne    0x14001e525
   14001e51f:	call   0x14002189c
   14001e524:	int3   
   14001e525:	cmp    QWORD PTR [rsp+0x40],0x0
   14001e52b:	je     0x14001e549
   14001e52d:	mov    rcx,QWORD PTR [rbx+0x40]
   14001e531:	mov    rdi,QWORD PTR [rdi+0x8]
   14001e535:	call   QWORD PTR [rip+0x25495]        # 0x1400439d0
   14001e53b:	cmp    QWORD PTR [rdi+0x40],rax
   14001e53f:	je     0x14001e568
   14001e541:	xor    r8d,r8d
   14001e544:	mov    rdx,rdi
   14001e547:	jmp    0x14001e560
   14001e549:	mov    rcx,QWORD PTR [rdi+0x8]
   14001e54d:	mov    edx,esi
   14001e54f:	call   0x14001fe08
   14001e554:	test   rax,rax
   14001e557:	je     0x14001e568
   14001e559:	mov    rdx,QWORD PTR [rdi+0x8]
   14001e55d:	mov    r8d,esi
   14001e560:	mov    rcx,rbx
   14001e563:	call   0x14002012c
   14001e568:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e56d:	mov    rsi,QWORD PTR [rsp+0x38]
   14001e572:	add    rsp,0x20
   14001e576:	pop    rdi
   14001e577:	ret    
   14001e578:	jmp    0x14002522c
   14001e57d:	int3   
   14001e57e:	int3   
   14001e57f:	int3   
   14001e580:	sub    rsp,0x28
   14001e584:	cmp    QWORD PTR [rip+0x4208c],0x0        # 0x140060618
   14001e58c:	jne    0x14001e619
   14001e592:	lea    rcx,[rip+0x27c9f]        # 0x140046238
   14001e599:	call   QWORD PTR [rip+0x24f09]        # 0x1400434a8
   14001e59f:	test   rax,rax
   14001e5a2:	mov    QWORD PTR [rip+0x4206f],rax        # 0x140060618
   14001e5a9:	jne    0x14001e5b1
   14001e5ab:	call   0x1400218c0
   14001e5b0:	int3   
   14001e5b1:	lea    rdx,[rip+0x27c70]        # 0x140046228
   14001e5b8:	mov    rcx,rax
   14001e5bb:	call   QWORD PTR [rip+0x24eef]        # 0x1400434b0
   14001e5c1:	mov    rcx,QWORD PTR [rip+0x42050]        # 0x140060618
   14001e5c8:	lea    rdx,[rip+0x27c49]        # 0x140046218
   14001e5cf:	mov    QWORD PTR [rip+0x42022],rax        # 0x1400605f8
   14001e5d6:	call   QWORD PTR [rip+0x24ed4]        # 0x1400434b0
   14001e5dc:	mov    rcx,QWORD PTR [rip+0x42035]        # 0x140060618
   14001e5e3:	lea    rdx,[rip+0x27c1e]        # 0x140046208
   14001e5ea:	mov    QWORD PTR [rip+0x4200f],rax        # 0x140060600
   14001e5f1:	call   QWORD PTR [rip+0x24eb9]        # 0x1400434b0
   14001e5f7:	mov    rcx,QWORD PTR [rip+0x4201a]        # 0x140060618
   14001e5fe:	lea    rdx,[rip+0x27beb]        # 0x1400461f0
   14001e605:	mov    QWORD PTR [rip+0x41ffc],rax        # 0x140060608
   14001e60c:	call   QWORD PTR [rip+0x24e9e]        # 0x1400434b0
   14001e612:	mov    QWORD PTR [rip+0x41ff7],rax        # 0x140060610
   14001e619:	add    rsp,0x28
   14001e61d:	ret    
   14001e61e:	int3   
   14001e61f:	int3   
   14001e620:	sub    rsp,0x28
   14001e624:	mov    r8,QWORD PTR [rip+0x41fe5]        # 0x140060610
   14001e62b:	xor    eax,eax
   14001e62d:	cmp    r8,rax
   14001e630:	je     0x14001e635
   14001e632:	call   r8
   14001e635:	add    rsp,0x28
   14001e639:	ret    
   14001e63a:	int3   
   14001e63b:	int3   
   14001e63c:	rex push rbx
   14001e63e:	sub    rsp,0x20
   14001e642:	xor    ebx,ebx
   14001e644:	cmp    rdx,rbx
   14001e647:	jne    0x14001e64f
   14001e649:	call   0x1400218c0
   14001e64e:	int3   
   14001e64f:	mov    rax,QWORD PTR [rip+0x41fb2]        # 0x140060608
   14001e656:	cmp    rax,rbx
   14001e659:	je     0x14001e664
   14001e65b:	call   rax
   14001e65d:	cmp    eax,ebx
   14001e65f:	setne  bl
   14001e662:	jmp    0x14001e669
   14001e664:	mov    ebx,0x2
   14001e669:	mov    eax,ebx
   14001e66b:	add    rsp,0x20
   14001e66f:	pop    rbx
   14001e670:	ret    
   14001e671:	int3   
   14001e672:	int3   
   14001e673:	int3   
   14001e674:	mov    QWORD PTR [rsp+0x10],rbx
   14001e679:	push   rdi
   14001e67a:	sub    rsp,0x280
   14001e681:	mov    rax,QWORD PTR [rip+0x3c8f8]        # 0x14005af80
   14001e688:	xor    rax,rsp
   14001e68b:	mov    QWORD PTR [rsp+0x270],rax
   14001e693:	mov    rbx,rcx
   14001e696:	call   0x14001e580
   14001e69b:	mov    rdi,QWORD PTR [rbx+0x10]
   14001e69f:	and    WORD PTR [rsp+0x26a],0x0
   14001e6a8:	and    WORD PTR [rsp+0x268],0x0
   14001e6b1:	lea    rdx,[rsp+0x60]
   14001e6b6:	mov    rcx,rdi
   14001e6b9:	mov    r8d,0x105
   14001e6bf:	call   QWORD PTR [rip+0x24d8b]        # 0x140043450
   14001e6c5:	test   eax,eax
   14001e6c7:	je     0x14001e79e
   14001e6cd:	cmp    WORD PTR [rsp+0x268],0x0
   14001e6d6:	je     0x14001e6e8
   14001e6d8:	mov    ecx,0x6f
   14001e6dd:	call   QWORD PTR [rip+0x24db5]        # 0x140043498
   14001e6e3:	jmp    0x14001e79e
   14001e6e8:	lea    rax,[rsp+0x60]
   14001e6ed:	mov    QWORD PTR [rsp+0x50],rdi
   14001e6f2:	or     rdi,0xffffffffffffffff
   14001e6f6:	mov    QWORD PTR [rsp+0x28],rax
   14001e6fb:	mov    rax,QWORD PTR [rip+0x41ef6]        # 0x1400605f8
   14001e702:	mov    DWORD PTR [rsp+0x20],0x38
   14001e70a:	test   rax,rax
   14001e70d:	mov    DWORD PTR [rsp+0x24],0x88
   14001e715:	mov    QWORD PTR [rsp+0x40],0x2
   14001e71e:	je     0x14001e729
   14001e720:	lea    rcx,[rsp+0x20]
   14001e725:	call   rax
   14001e727:	jmp    0x14001e72c
   14001e729:	mov    rax,rdi
   14001e72c:	cmp    rax,rdi
   14001e72f:	mov    QWORD PTR [rbx+0xd8],rax
   14001e736:	jne    0x14001e760
   14001e738:	mov    rax,QWORD PTR [rip+0x41eb9]        # 0x1400605f8
   14001e73f:	mov    QWORD PTR [rsp+0x40],0x3
   14001e748:	test   rax,rax
   14001e74b:	je     0x14001e756
   14001e74d:	lea    rcx,[rsp+0x20]
   14001e752:	call   rax
   14001e754:	jmp    0x14001e759
   14001e756:	mov    rax,rdi
   14001e759:	mov    QWORD PTR [rbx+0xd8],rax
   14001e760:	cmp    QWORD PTR [rbx+0xd8],rdi
   14001e767:	jne    0x14001e79e
   14001e769:	mov    rax,QWORD PTR [rip+0x41e88]        # 0x1400605f8
   14001e770:	mov    QWORD PTR [rsp+0x40],0x1
   14001e779:	test   rax,rax
   14001e77c:	je     0x14001e787
   14001e77e:	lea    rcx,[rsp+0x20]
   14001e783:	call   rax
   14001e785:	jmp    0x14001e78a
   14001e787:	mov    rax,rdi
   14001e78a:	cmp    rax,rdi
   14001e78d:	mov    QWORD PTR [rbx+0xd8],rax
   14001e794:	jne    0x14001e79e
   14001e796:	and    QWORD PTR [rbx+0xd8],0x0
   14001e79e:	mov    rcx,QWORD PTR [rsp+0x270]
   14001e7a6:	xor    rcx,rsp
   14001e7a9:	call   0x140029b40
   14001e7ae:	mov    rbx,QWORD PTR [rsp+0x298]
   14001e7b6:	add    rsp,0x280
   14001e7bd:	pop    rdi
   14001e7be:	ret    
   14001e7bf:	int3   
   14001e7c0:	rex push rbx
   14001e7c2:	sub    rsp,0x20
   14001e7c6:	mov    rbx,rcx
   14001e7c9:	lock add DWORD PTR [rcx+0x30],0xffffffff
   14001e7ce:	jne    0x14001e7f8
   14001e7d0:	mov    rcx,QWORD PTR [rcx+0x28]
   14001e7d4:	test   rcx,rcx
   14001e7d7:	je     0x14001e7e4
   14001e7d9:	mov    rax,QWORD PTR [rcx]
   14001e7dc:	call   QWORD PTR [rax+0x10]
   14001e7df:	and    QWORD PTR [rbx+0x28],0x0
   14001e7e4:	mov    rcx,QWORD PTR [rbx+0x10]
   14001e7e8:	test   rcx,rcx
   14001e7eb:	je     0x14001e7f8
   14001e7ed:	mov    rax,QWORD PTR [rcx]
   14001e7f0:	call   QWORD PTR [rax+0x10]
   14001e7f3:	and    QWORD PTR [rbx+0x10],0x0
   14001e7f8:	add    rsp,0x20
   14001e7fc:	pop    rbx
   14001e7fd:	ret    
   14001e7fe:	int3   
   14001e7ff:	int3   
   14001e800:	lea    rax,[rip+0x27a51]        # 0x140046258
   14001e807:	mov    QWORD PTR [rcx],rax
   14001e80a:	xor    eax,eax
   14001e80c:	mov    DWORD PTR [rcx+0x60],eax
   14001e80f:	mov    DWORD PTR [rcx+0x90],eax
   14001e815:	mov    DWORD PTR [rsp+0x8],eax
   14001e819:	mov    DWORD PTR [rsp+0xc],eax
   14001e81d:	mov    rax,QWORD PTR [rsp+0x8]
   14001e822:	mov    QWORD PTR [rcx+0x88],rax
   14001e829:	mov    rax,rcx
   14001e82c:	ret    
   14001e82d:	int3   
   14001e82e:	int3   
   14001e82f:	int3   
   14001e830:	rex push rbx
   14001e832:	sub    rsp,0x20
   14001e836:	lea    rax,[rip+0x27a1b]        # 0x140046258
   14001e83d:	mov    rbx,rcx
   14001e840:	mov    QWORD PTR [rcx],rax
   14001e843:	mov    rcx,QWORD PTR [rcx+0x50]
   14001e847:	test   rcx,rcx
   14001e84a:	je     0x14001e852
   14001e84c:	call   QWORD PTR [rip+0x24f2e]        # 0x140043780
   14001e852:	mov    rcx,QWORD PTR [rbx+0x48]
   14001e856:	test   rcx,rcx
   14001e859:	je     0x14001e861
   14001e85b:	call   QWORD PTR [rip+0x24f1f]        # 0x140043780
   14001e861:	mov    rcx,QWORD PTR [rbx+0x18]
   14001e865:	test   rcx,rcx
   14001e868:	je     0x14001e86f
   14001e86a:	call   0x14002a380
   14001e86f:	add    rsp,0x20
   14001e873:	pop    rbx
   14001e874:	ret    
   14001e875:	int3   
   14001e876:	int3   
   14001e877:	int3   
   14001e878:	mov    QWORD PTR [rsp+0x8],rbx
   14001e87d:	push   rdi
   14001e87e:	sub    rsp,0x20
   14001e882:	lea    rax,[rip+0x279df]        # 0x140046268
   14001e889:	mov    rbx,rcx
   14001e88c:	mov    QWORD PTR [rcx],rax
   14001e88f:	mov    rcx,QWORD PTR [rcx+0x78]
   14001e893:	test   rcx,rcx
   14001e896:	je     0x14001e8a1
   14001e898:	mov    rax,QWORD PTR [rcx]
   14001e89b:	call   QWORD PTR [rax+0x278]
   14001e8a1:	mov    rcx,QWORD PTR [rbx+0x90]
   14001e8a8:	call   0x14001490c
   14001e8ad:	mov    rcx,QWORD PTR [rbx+0x28]
   14001e8b1:	mov    edi,0x1
   14001e8b6:	test   rcx,rcx
   14001e8b9:	je     0x14001e8c2
   14001e8bb:	mov    rax,QWORD PTR [rcx]
   14001e8be:	mov    edx,edi
   14001e8c0:	call   QWORD PTR [rax]
   14001e8c2:	mov    rcx,QWORD PTR [rbx+0x30]
   14001e8c6:	test   rcx,rcx
   14001e8c9:	je     0x14001e8d2
   14001e8cb:	mov    rax,QWORD PTR [rcx]
   14001e8ce:	mov    edx,edi
   14001e8d0:	call   QWORD PTR [rax]
   14001e8d2:	mov    rcx,QWORD PTR [rbx+0x38]
   14001e8d6:	test   rcx,rcx
   14001e8d9:	je     0x14001e8e2
   14001e8db:	mov    rax,QWORD PTR [rcx]
   14001e8de:	mov    edx,edi
   14001e8e0:	call   QWORD PTR [rax]
   14001e8e2:	mov    rcx,QWORD PTR [rbx+0x40]
   14001e8e6:	test   rcx,rcx
   14001e8e9:	je     0x14001e8f2
   14001e8eb:	mov    rax,QWORD PTR [rcx]
   14001e8ee:	mov    edx,edi
   14001e8f0:	call   QWORD PTR [rax]
   14001e8f2:	mov    rcx,QWORD PTR [rbx+0x48]
   14001e8f6:	test   rcx,rcx
   14001e8f9:	je     0x14001e902
   14001e8fb:	mov    rax,QWORD PTR [rcx]
   14001e8fe:	mov    edx,edi
   14001e900:	call   QWORD PTR [rax]
   14001e902:	mov    rax,QWORD PTR [rbx+0x70]
   14001e906:	test   rax,rax
   14001e909:	je     0x14001e92e
   14001e90b:	cmp    QWORD PTR [rax+0x18],0x0
   14001e910:	je     0x14001e92e
   14001e912:	mov    rcx,QWORD PTR [rbx+0x70]
   14001e916:	call   0x140023ebc
   14001e91b:	mov    rcx,rax
   14001e91e:	call   0x14001490c
   14001e923:	mov    r11,QWORD PTR [rbx+0x70]
   14001e927:	cmp    QWORD PTR [r11+0x18],0x0
   14001e92c:	jne    0x14001e912
   14001e92e:	mov    rcx,QWORD PTR [rbx+0x60]
   14001e932:	test   rcx,rcx
   14001e935:	je     0x14001e93f
   14001e937:	mov    rax,QWORD PTR [rcx]
   14001e93a:	mov    edx,edi
   14001e93c:	call   QWORD PTR [rax+0x8]
   14001e93f:	mov    rcx,QWORD PTR [rbx+0x68]
   14001e943:	test   rcx,rcx
   14001e946:	je     0x14001e950
   14001e948:	mov    rax,QWORD PTR [rcx]
   14001e94b:	mov    edx,edi
   14001e94d:	call   QWORD PTR [rax+0x8]
   14001e950:	mov    rcx,QWORD PTR [rbx+0x70]
   14001e954:	test   rcx,rcx
   14001e957:	je     0x14001e961
   14001e959:	mov    rax,QWORD PTR [rcx]
   14001e95c:	mov    edx,edi
   14001e95e:	call   QWORD PTR [rax+0x8]
   14001e961:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e966:	add    rsp,0x20
   14001e96a:	pop    rdi
   14001e96b:	ret    
   14001e96c:	mov    QWORD PTR [rsp+0x8],rbx
   14001e971:	push   rdi
   14001e972:	sub    rsp,0x20
   14001e976:	mov    ebx,edx
   14001e978:	mov    rdi,rcx
   14001e97b:	call   0x14001e830
   14001e980:	test   bl,0x1
   14001e983:	je     0x14001e98d
   14001e985:	mov    rcx,rdi
   14001e988:	call   0x14002496c
   14001e98d:	mov    rax,rdi
   14001e990:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e995:	add    rsp,0x20
   14001e999:	pop    rdi
   14001e99a:	ret    
   14001e99b:	int3   
   14001e99c:	mov    QWORD PTR [rsp+0x8],rbx
   14001e9a1:	push   rdi
   14001e9a2:	sub    rsp,0x20
   14001e9a6:	mov    ebx,edx
   14001e9a8:	mov    rdi,rcx
   14001e9ab:	call   0x14001e878
   14001e9b0:	test   bl,0x1
   14001e9b3:	je     0x14001e9bd
   14001e9b5:	mov    rcx,rdi
   14001e9b8:	call   0x14002496c
   14001e9bd:	mov    rax,rdi
   14001e9c0:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e9c5:	add    rsp,0x20
   14001e9c9:	pop    rdi
   14001e9ca:	ret    
   14001e9cb:	int3   
   14001e9cc:	sub    rsp,0x28
   14001e9d0:	mov    ecx,0xa8
   14001e9d5:	call   0x140024948
   14001e9da:	xor    edx,edx
   14001e9dc:	cmp    rax,rdx
   14001e9df:	je     0x14001ea1d
   14001e9e1:	lea    rcx,[rip+0x27880]        # 0x140046268
   14001e9e8:	mov    QWORD PTR [rax],rcx
   14001e9eb:	mov    QWORD PTR [rax+0x10],rdx
   14001e9ef:	or     rcx,0xffffffffffffffff
   14001e9f3:	mov    QWORD PTR [rax+0x88],rcx
   14001e9fa:	mov    QWORD PTR [rax+0x98],rcx
   14001ea01:	lea    rcx,[rip+0xffffffffffff5e9c]        # 0x1400148a4
   14001ea08:	mov    QWORD PTR [rax+0x90],rdx
   14001ea0f:	mov    QWORD PTR [rax+0x18],0xc8
   14001ea17:	mov    QWORD PTR [rax+0x50],rcx
   14001ea1b:	jmp    0x14001ea20
   14001ea1d:	mov    rax,rdx
   14001ea20:	add    rsp,0x28
   14001ea24:	ret    
   14001ea25:	int3   
   14001ea26:	int3   
   14001ea27:	int3   
   14001ea28:	sub    rsp,0x28
   14001ea2c:	lea    rdx,[rip+0xffffffffffff7cf5]        # 0x140016728
   14001ea33:	lea    rcx,[rip+0x41bee]        # 0x140060628
   14001ea3a:	call   0x14002514c
   14001ea3f:	test   rax,rax
   14001ea42:	jne    0x14001ea4a
   14001ea44:	call   0x1400218c0
   14001ea49:	int3   
   14001ea4a:	add    rsp,0x28
   14001ea4e:	ret    
   14001ea4f:	int3   
   14001ea50:	mov    QWORD PTR [rsp+0x8],rcx
   14001ea55:	push   rbx
   14001ea56:	sub    rsp,0x30
   14001ea5a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ea63:	mov    rbx,rcx
   14001ea66:	lea    rax,[rip+0x27833]        # 0x1400462a0
   14001ea6d:	mov    QWORD PTR [rcx],rax
   14001ea70:	mov    rcx,QWORD PTR [rcx+0xb8]
   14001ea77:	test   rcx,rcx
   14001ea7a:	je     0x14001eaa0
   14001ea7c:	mov    rax,QWORD PTR [rcx]
   14001ea7f:	lea    rdx,[rbx+0x80]
   14001ea86:	call   QWORD PTR [rax+0x18]
   14001ea89:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001ea90:	test   rcx,rcx
   14001ea93:	je     0x14001eaa0
   14001ea95:	mov    rax,QWORD PTR [rcx]
   14001ea98:	mov    edx,0x1
   14001ea9d:	call   QWORD PTR [rax+0x8]
   14001eaa0:	mov    rax,QWORD PTR [rbx+0xc8]
   14001eaa7:	mov    rcx,QWORD PTR [rax]
   14001eaaa:	test   rcx,rcx
   14001eaad:	je     0x14001eab9
   14001eaaf:	mov    rax,QWORD PTR [rcx]
   14001eab2:	mov    edx,0x1
   14001eab7:	call   QWORD PTR [rax]
   14001eab9:	mov    rax,QWORD PTR [rbx+0xc8]
   14001eac0:	mov    rcx,QWORD PTR [rax+0x8]
   14001eac4:	test   rcx,rcx
   14001eac7:	je     0x14001ead3
   14001eac9:	mov    rax,QWORD PTR [rcx]
   14001eacc:	mov    edx,0x1
   14001ead1:	call   QWORD PTR [rax]
   14001ead3:	mov    rcx,QWORD PTR [rbx+0xc8]
   14001eada:	call   0x14001490c
   14001eadf:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001eae6:	test   rcx,rcx
   14001eae9:	je     0x14001eb07
   14001eaeb:	cmp    rcx,0xffffffffffffffff
   14001eaef:	je     0x14001eb07
   14001eaf1:	mov    rax,QWORD PTR [rip+0x41b08]        # 0x140060600
   14001eaf8:	test   rax,rax
   14001eafb:	je     0x14001eaff
   14001eafd:	call   rax
   14001eaff:	or     QWORD PTR [rbx+0xd8],0xffffffffffffffff
   14001eb07:	lea    rcx,[rbx+0xc0]
   14001eb0e:	call   0x14002522c
   14001eb13:	nop
   14001eb14:	mov    rdx,QWORD PTR [rbx+0x58]
   14001eb18:	sub    rdx,0x18
   14001eb1c:	or     eax,0xffffffff
   14001eb1f:	lock xadd DWORD PTR [rdx+0x10],eax
   14001eb24:	add    eax,0xffffffff
   14001eb27:	test   eax,eax
   14001eb29:	jg     0x14001eb34
   14001eb2b:	mov    rcx,QWORD PTR [rdx]
   14001eb2e:	mov    rax,QWORD PTR [rcx]
   14001eb31:	call   QWORD PTR [rax+0x8]
   14001eb34:	add    rsp,0x30
   14001eb38:	pop    rbx
   14001eb39:	ret    
   14001eb3a:	int3   
   14001eb3b:	int3   
   14001eb3c:	int3   
   14001eb3d:	int3   
   14001eb3e:	int3   
   14001eb3f:	int3   
   14001eb40:	rex push rbp
   14001eb42:	sub    rsp,0x20
   14001eb46:	mov    rbp,rdx
   14001eb49:	mov    rcx,QWORD PTR [rbp+0x40]
   14001eb4d:	add    rcx,0x58
   14001eb51:	call   0x140003de0
   14001eb56:	add    rsp,0x20
   14001eb5a:	pop    rbp
   14001eb5b:	ret    
   14001eb5c:	int3   
   14001eb5d:	int3   
   14001eb5e:	int3   
   14001eb5f:	int3   
   14001eb60:	rex push rbp
   14001eb62:	sub    rsp,0x20
   14001eb66:	mov    rbp,rdx
   14001eb69:	mov    rcx,QWORD PTR [rbp+0x40]
   14001eb6d:	add    rcx,0xc0
   14001eb74:	call   0x14001e578
   14001eb79:	add    rsp,0x20
   14001eb7d:	pop    rbp
   14001eb7e:	ret    
   14001eb7f:	int3   
   14001eb80:	mov    QWORD PTR [rsp+0x8],rbx
   14001eb85:	push   rdi
   14001eb86:	sub    rsp,0x20
   14001eb8a:	cmp    BYTE PTR [rcx+0x10],0x0
   14001eb8e:	lea    rax,[rip+0x2771b]        # 0x1400462b0
   14001eb95:	mov    edi,edx
   14001eb97:	mov    QWORD PTR [rcx],rax
   14001eb9a:	mov    rbx,rcx
   14001eb9d:	je     0x14001eba9
   14001eb9f:	mov    rcx,QWORD PTR [rcx+0x8]
   14001eba3:	call   QWORD PTR [rip+0x248d7]        # 0x140043480
   14001eba9:	mov    rdx,QWORD PTR [rbx+0x18]
   14001ebad:	sub    rdx,0x18
   14001ebb1:	or     eax,0xffffffff
   14001ebb4:	lock xadd DWORD PTR [rdx+0x10],eax
   14001ebb9:	add    eax,0xffffffff
   14001ebbc:	test   eax,eax
   14001ebbe:	jg     0x14001ebc9
   14001ebc0:	mov    rcx,QWORD PTR [rdx]
   14001ebc3:	mov    rax,QWORD PTR [rcx]
   14001ebc6:	call   QWORD PTR [rax+0x8]
   14001ebc9:	test   dil,0x1
   14001ebcd:	je     0x14001ebd7
   14001ebcf:	mov    rcx,rbx
   14001ebd2:	call   0x14002496c
   14001ebd7:	mov    rax,rbx
   14001ebda:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ebdf:	add    rsp,0x20
   14001ebe3:	pop    rdi
   14001ebe4:	ret    
   14001ebe5:	int3   
   14001ebe6:	int3   
   14001ebe7:	int3   
   14001ebe8:	mov    QWORD PTR [rsp+0x8],rbx
   14001ebed:	push   rdi
   14001ebee:	sub    rsp,0x20
   14001ebf2:	mov    ebx,edx
   14001ebf4:	mov    rdi,rcx
   14001ebf7:	call   0x14001ea50
   14001ebfc:	test   bl,0x1
   14001ebff:	je     0x14001ec09
   14001ec01:	mov    rcx,rdi
   14001ec04:	call   0x14002496c
   14001ec09:	mov    rax,rdi
   14001ec0c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ec11:	add    rsp,0x20
   14001ec15:	pop    rdi
   14001ec16:	ret    
   14001ec17:	int3   
   14001ec18:	rex push rdi
   14001ec1a:	sub    rsp,0x30
   14001ec1e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ec27:	mov    QWORD PTR [rsp+0x48],rbx
   14001ec2c:	mov    rbx,rcx
   14001ec2f:	lea    rdx,[rip+0x276ba]        # 0x1400462f0
   14001ec36:	lea    rcx,[rsp+0x40]
   14001ec3b:	call   0x140006f30
   14001ec40:	nop
   14001ec41:	lea    rax,[rip+0x27668]        # 0x1400462b0
   14001ec48:	mov    QWORD PTR [rbx],rax
   14001ec4b:	mov    rcx,QWORD PTR [rsp+0x40]
   14001ec50:	add    rcx,0xffffffffffffffe8
   14001ec54:	call   0x14000b630
   14001ec59:	add    rax,0x18
   14001ec5d:	mov    QWORD PTR [rbx+0x18],rax
   14001ec61:	xor    edi,edi
   14001ec63:	mov    QWORD PTR [rbx+0x8],rdi
   14001ec67:	mov    BYTE PTR [rbx+0x10],dil
   14001ec6b:	mov    rdx,QWORD PTR [rsp+0x40]
   14001ec70:	add    rdx,0xffffffffffffffe8
   14001ec74:	or     eax,0xffffffff
   14001ec77:	lock xadd DWORD PTR [rdx+0x10],eax
   14001ec7c:	add    eax,0xffffffff
   14001ec7f:	cmp    eax,edi
   14001ec81:	jg     0x14001ec8c
   14001ec83:	mov    rcx,QWORD PTR [rdx]
   14001ec86:	mov    rax,QWORD PTR [rcx]
   14001ec89:	call   QWORD PTR [rax+0x8]
   14001ec8c:	lea    rax,[rip+0x27655]        # 0x1400462e8
   14001ec93:	mov    QWORD PTR [rbx],rax
   14001ec96:	mov    QWORD PTR [rbx+0x20],rdi
   14001ec9a:	mov    QWORD PTR [rbx+0x28],rdi
   14001ec9e:	mov    QWORD PTR [rbx+0x30],rdi
   14001eca2:	mov    QWORD PTR [rbx+0x38],rdi
   14001eca6:	mov    QWORD PTR [rbx+0x40],rdi
   14001ecaa:	mov    QWORD PTR [rbx+0x48],rdi
   14001ecae:	mov    QWORD PTR [rbx+0x50],rdi
   14001ecb2:	mov    QWORD PTR [rbx+0x58],rdi
   14001ecb6:	mov    QWORD PTR [rbx+0x60],rdi
   14001ecba:	mov    QWORD PTR [rbx+0x68],rdi
   14001ecbe:	mov    QWORD PTR [rbx+0x70],rdi
   14001ecc2:	mov    QWORD PTR [rbx+0x78],rdi
   14001ecc6:	mov    QWORD PTR [rbx+0x80],rdi
   14001eccd:	mov    QWORD PTR [rbx+0x88],rdi
   14001ecd4:	mov    QWORD PTR [rbx+0x90],rdi
   14001ecdb:	mov    QWORD PTR [rbx+0x98],rdi
   14001ece2:	mov    QWORD PTR [rbx+0xa0],rdi
   14001ece9:	mov    QWORD PTR [rbx+0xa8],rdi
   14001ecf0:	mov    QWORD PTR [rbx+0xb0],rdi
   14001ecf7:	mov    QWORD PTR [rbx+0xb8],rdi
   14001ecfe:	mov    QWORD PTR [rbx+0xc0],rdi
   14001ed05:	mov    QWORD PTR [rbx+0xc8],rdi
   14001ed0c:	mov    QWORD PTR [rbx+0xd0],rdi
   14001ed13:	mov    QWORD PTR [rbx+0xd8],rdi
   14001ed1a:	mov    QWORD PTR [rbx+0xe0],rdi
   14001ed21:	mov    QWORD PTR [rbx+0xe8],rdi
   14001ed28:	mov    QWORD PTR [rbx+0xf0],rdi
   14001ed2f:	mov    QWORD PTR [rbx+0xf8],rdi
   14001ed36:	mov    QWORD PTR [rbx+0x100],rdi
   14001ed3d:	mov    QWORD PTR [rbx+0x108],rdi
   14001ed44:	mov    QWORD PTR [rbx+0x110],rdi
   14001ed4b:	mov    QWORD PTR [rbx+0x118],rdi
   14001ed52:	mov    QWORD PTR [rbx+0x120],rdi
   14001ed59:	mov    QWORD PTR [rbx+0x128],rdi
   14001ed60:	mov    QWORD PTR [rbx+0x130],rdi
   14001ed67:	mov    QWORD PTR [rbx+0x138],rdi
   14001ed6e:	mov    QWORD PTR [rbx+0x140],rdi
   14001ed75:	mov    QWORD PTR [rbx+0x148],rdi
   14001ed7c:	mov    QWORD PTR [rbx+0x150],rdi
   14001ed83:	mov    QWORD PTR [rbx+0x158],rdi
   14001ed8a:	mov    QWORD PTR [rbx+0x160],rdi
   14001ed91:	mov    QWORD PTR [rbx+0x168],rdi
   14001ed98:	mov    QWORD PTR [rbx+0x170],rdi
   14001ed9f:	mov    QWORD PTR [rbx+0x178],rdi
   14001eda6:	mov    QWORD PTR [rbx+0x180],rdi
   14001edad:	mov    QWORD PTR [rbx+0x188],rdi
   14001edb4:	mov    QWORD PTR [rbx+0x190],rdi
   14001edbb:	mov    QWORD PTR [rbx+0x198],rdi
   14001edc2:	mov    QWORD PTR [rbx+0x1a0],rdi
   14001edc9:	mov    QWORD PTR [rbx+0x1a8],rdi
   14001edd0:	mov    QWORD PTR [rbx+0x1b0],rdi
   14001edd7:	mov    QWORD PTR [rbx+0x1b8],rdi
   14001edde:	mov    QWORD PTR [rbx+0x1c0],rdi
   14001ede5:	mov    QWORD PTR [rbx+0x1c8],rdi
   14001edec:	mov    QWORD PTR [rbx+0x1d0],rdi
   14001edf3:	mov    QWORD PTR [rbx+0x1d8],rdi
   14001edfa:	mov    QWORD PTR [rbx+0x1e0],rdi
   14001ee01:	mov    QWORD PTR [rbx+0x1e8],rdi
   14001ee08:	mov    QWORD PTR [rbx+0x1f0],rdi
   14001ee0f:	mov    QWORD PTR [rbx+0x1f8],rdi
   14001ee16:	mov    QWORD PTR [rbx+0x200],rdi
   14001ee1d:	mov    QWORD PTR [rbx+0x208],rdi
   14001ee24:	mov    QWORD PTR [rbx+0x210],rdi
   14001ee2b:	mov    QWORD PTR [rbx+0x218],rdi
   14001ee32:	mov    QWORD PTR [rbx+0x220],rdi
   14001ee39:	mov    QWORD PTR [rbx+0x228],rdi
   14001ee40:	mov    QWORD PTR [rbx+0x230],rdi
   14001ee47:	mov    QWORD PTR [rbx+0x238],rdi
   14001ee4e:	mov    QWORD PTR [rbx+0x240],rdi
   14001ee55:	mov    QWORD PTR [rbx+0x248],rdi
   14001ee5c:	mov    QWORD PTR [rbx+0x250],rdi
   14001ee63:	mov    QWORD PTR [rbx+0x258],rdi
   14001ee6a:	mov    QWORD PTR [rbx+0x260],rdi
   14001ee71:	mov    QWORD PTR [rbx+0x268],rdi
   14001ee78:	mov    QWORD PTR [rbx+0x270],rdi
   14001ee7f:	mov    QWORD PTR [rbx+0x278],rdi
   14001ee86:	mov    QWORD PTR [rbx+0x280],rdi
   14001ee8d:	mov    QWORD PTR [rbx+0x288],rdi
   14001ee94:	mov    QWORD PTR [rbx+0x290],rdi
   14001ee9b:	mov    QWORD PTR [rbx+0x298],rdi
   14001eea2:	mov    QWORD PTR [rbx+0x2a0],rdi
   14001eea9:	mov    QWORD PTR [rbx+0x2a8],rdi
   14001eeb0:	mov    QWORD PTR [rbx+0x2b0],rdi
   14001eeb7:	mov    QWORD PTR [rbx+0x2b8],rdi
   14001eebe:	mov    QWORD PTR [rbx+0x2c0],rdi
   14001eec5:	mov    QWORD PTR [rbx+0x2c8],rdi
   14001eecc:	mov    QWORD PTR [rbx+0x2d0],rdi
   14001eed3:	mov    QWORD PTR [rbx+0x2d8],rdi
   14001eeda:	mov    QWORD PTR [rbx+0x2e0],rdi
   14001eee1:	mov    QWORD PTR [rbx+0x2e8],rdi
   14001eee8:	mov    QWORD PTR [rbx+0x2f0],rdi
   14001eeef:	mov    QWORD PTR [rbx+0x2f8],rdi
   14001eef6:	mov    QWORD PTR [rbx+0x300],rdi
   14001eefd:	mov    QWORD PTR [rbx+0x308],rdi
   14001ef04:	mov    rax,rbx
   14001ef07:	mov    rbx,QWORD PTR [rsp+0x48]
   14001ef0c:	add    rsp,0x30
   14001ef10:	pop    rdi
   14001ef11:	ret    
   14001ef12:	int3   
   14001ef13:	int3   
   14001ef14:	int3   
   14001ef15:	int3   
   14001ef16:	int3   
   14001ef17:	int3   
   14001ef18:	rex push rbp
   14001ef1a:	sub    rsp,0x20
   14001ef1e:	mov    rbp,rdx
   14001ef21:	lea    rcx,[rbp+0x40]
   14001ef25:	call   0x140003de0
   14001ef2a:	add    rsp,0x20
   14001ef2e:	pop    rbp
   14001ef2f:	ret    
   14001ef30:	rex push rdi
   14001ef32:	sub    rsp,0x30
   14001ef36:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ef3f:	mov    QWORD PTR [rsp+0x48],rbx
   14001ef44:	mov    rbx,rcx
   14001ef47:	lea    rdx,[rip+0x273fa]        # 0x140046348
   14001ef4e:	lea    rcx,[rsp+0x40]
   14001ef53:	call   0x140006f30
   14001ef58:	nop
   14001ef59:	lea    rax,[rip+0x27350]        # 0x1400462b0
   14001ef60:	mov    QWORD PTR [rbx],rax
   14001ef63:	mov    rcx,QWORD PTR [rsp+0x40]
   14001ef68:	add    rcx,0xffffffffffffffe8
   14001ef6c:	call   0x14000b630
   14001ef71:	add    rax,0x18
   14001ef75:	mov    QWORD PTR [rbx+0x18],rax
   14001ef79:	xor    edi,edi
   14001ef7b:	mov    QWORD PTR [rbx+0x8],rdi
   14001ef7f:	mov    BYTE PTR [rbx+0x10],dil
   14001ef83:	mov    rdx,QWORD PTR [rsp+0x40]
   14001ef88:	add    rdx,0xffffffffffffffe8
   14001ef8c:	or     eax,0xffffffff
   14001ef8f:	lock xadd DWORD PTR [rdx+0x10],eax
   14001ef94:	add    eax,0xffffffff
   14001ef97:	cmp    eax,edi
   14001ef99:	jg     0x14001efa4
   14001ef9b:	mov    rcx,QWORD PTR [rdx]
   14001ef9e:	mov    rax,QWORD PTR [rcx]
   14001efa1:	call   QWORD PTR [rax+0x8]
   14001efa4:	lea    rax,[rip+0x27395]        # 0x140046340
   14001efab:	mov    QWORD PTR [rbx],rax
   14001efae:	mov    QWORD PTR [rbx+0x20],rdi
   14001efb2:	mov    QWORD PTR [rbx+0x28],rdi
   14001efb6:	mov    QWORD PTR [rbx+0x30],rdi
   14001efba:	mov    QWORD PTR [rbx+0x38],rdi
   14001efbe:	mov    QWORD PTR [rbx+0x40],rdi
   14001efc2:	mov    QWORD PTR [rbx+0x48],rdi
   14001efc6:	mov    QWORD PTR [rbx+0x50],rdi
   14001efca:	mov    QWORD PTR [rbx+0x58],rdi
   14001efce:	mov    QWORD PTR [rbx+0x60],rdi
   14001efd2:	mov    QWORD PTR [rbx+0x68],rdi
   14001efd6:	mov    QWORD PTR [rbx+0x70],rdi
   14001efda:	mov    QWORD PTR [rbx+0x78],rdi
   14001efde:	mov    QWORD PTR [rbx+0x80],rdi
   14001efe5:	mov    QWORD PTR [rbx+0x88],rdi
   14001efec:	mov    QWORD PTR [rbx+0x90],rdi
   14001eff3:	mov    QWORD PTR [rbx+0x98],rdi
   14001effa:	mov    QWORD PTR [rbx+0xa0],rdi
   14001f001:	mov    QWORD PTR [rbx+0xa8],rdi
   14001f008:	mov    QWORD PTR [rbx+0xb0],rdi
   14001f00f:	mov    QWORD PTR [rbx+0xb8],rdi
   14001f016:	mov    QWORD PTR [rbx+0xc0],rdi
   14001f01d:	mov    rax,rbx
   14001f020:	mov    rbx,QWORD PTR [rsp+0x48]
   14001f025:	add    rsp,0x30
   14001f029:	pop    rdi
   14001f02a:	ret    
   14001f02b:	int3   
   14001f02c:	int3   
   14001f02d:	int3   
   14001f02e:	int3   
   14001f02f:	int3   
   14001f030:	rex push rbp
   14001f032:	sub    rsp,0x20
   14001f036:	mov    rbp,rdx
   14001f039:	lea    rcx,[rbp+0x40]
   14001f03d:	call   0x140003de0
   14001f042:	add    rsp,0x20
   14001f046:	pop    rbp
   14001f047:	ret    
   14001f048:	mov    QWORD PTR [rsp+0x8],rcx
   14001f04d:	push   r12
   14001f04f:	sub    rsp,0x30
   14001f053:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f05c:	mov    QWORD PTR [rsp+0x48],rsi
   14001f061:	mov    QWORD PTR [rsp+0x58],rdi
   14001f066:	mov    r12d,edx
   14001f069:	mov    rdi,rcx
   14001f06c:	lea    rax,[rip+0x2722d]        # 0x1400462a0
   14001f073:	mov    QWORD PTR [rcx],rax
   14001f076:	and    QWORD PTR [rcx+0x30],0x0
   14001f07b:	and    QWORD PTR [rcx+0x38],0x0
   14001f080:	and    QWORD PTR [rcx+0x40],0x0
   14001f085:	and    QWORD PTR [rcx+0x48],0x0
   14001f08a:	call   0x14002157c
   14001f08f:	mov    r11,rax
   14001f092:	xor    ecx,ecx
   14001f094:	test   rax,rax
   14001f097:	setne  cl
   14001f09a:	test   ecx,ecx
   14001f09c:	jne    0x14001f0a9
   14001f09e:	mov    ecx,0x80004005
   14001f0a3:	call   0x140003dc0
   14001f0a8:	int3   
   14001f0a9:	mov    rax,QWORD PTR [rax]
   14001f0ac:	mov    rcx,r11
   14001f0af:	call   QWORD PTR [rax+0x18]
   14001f0b2:	add    rax,0x18
   14001f0b6:	mov    QWORD PTR [rdi+0x58],rax
   14001f0ba:	and    QWORD PTR [rdi+0x70],0x0
   14001f0bf:	and    QWORD PTR [rdi+0x78],0x0
   14001f0c4:	or     DWORD PTR [rdi+0x88],0xffffffff
   14001f0cb:	and    QWORD PTR [rdi+0x90],0x0
   14001f0d3:	and    QWORD PTR [rdi+0xa8],0x0
   14001f0db:	and    DWORD PTR [rdi+0xb0],0x0
   14001f0e2:	mov    QWORD PTR [rdi+0x48],0x40
   14001f0ea:	mov    QWORD PTR [rdi+0x38],0x20
   14001f0f2:	and    DWORD PTR [rdi+0x2c],0x0
   14001f0f6:	mov    BYTE PTR [rdi+0x28],r12b
   14001f0fa:	mov    rax,QWORD PTR [rdi+0x58]
   14001f0fe:	mov    r8d,0x1
   14001f104:	sub    r8d,DWORD PTR [rax-0x8]
   14001f108:	mov    eax,DWORD PTR [rax-0xc]
   14001f10b:	mov    edx,0x1000
   14001f110:	sub    eax,edx
   14001f112:	or     eax,r8d
   14001f115:	jge    0x14001f121
   14001f117:	lea    rcx,[rdi+0x58]
   14001f11b:	call   0x140004370
   14001f120:	nop
   14001f121:	jmp    0x14001f128
   14001f123:	mov    rdi,QWORD PTR [rsp+0x40]
   14001f128:	mov    DWORD PTR [rdi+0x54],0x1
   14001f12f:	mov    QWORD PTR [rdi+0x78],0x20
   14001f137:	mov    ecx,0x10
   14001f13c:	call   0x1400148c0
   14001f141:	mov    QWORD PTR [rdi+0xc8],rax
   14001f148:	mov    ecx,0x310
   14001f14d:	call   0x140024948
   14001f152:	mov    QWORD PTR [rsp+0x50],rax
   14001f157:	test   rax,rax
   14001f15a:	je     0x14001f169
   14001f15c:	mov    rcx,rax
   14001f15f:	call   0x14001ec18
   14001f164:	mov    r11,rax
   14001f167:	jmp    0x14001f16c
   14001f169:	xor    r11d,r11d
   14001f16c:	mov    rax,QWORD PTR [rdi+0xc8]
   14001f173:	mov    QWORD PTR [rax],r11
   14001f176:	mov    ecx,0xc8
   14001f17b:	call   0x140024948
   14001f180:	mov    QWORD PTR [rsp+0x50],rax
   14001f185:	test   rax,rax
   14001f188:	je     0x14001f197
   14001f18a:	mov    rcx,rax
   14001f18d:	call   0x14001ef30
   14001f192:	mov    r11,rax
   14001f195:	jmp    0x14001f19a
   14001f197:	xor    r11d,r11d
   14001f19a:	mov    rax,QWORD PTR [rdi+0xc8]
   14001f1a1:	mov    QWORD PTR [rax+0x8],r11
   14001f1a5:	mov    DWORD PTR [rdi+0xd0],0x1
   14001f1af:	and    QWORD PTR [rdi+0xd8],0x0
   14001f1b7:	mov    rax,rdi
   14001f1ba:	mov    rsi,QWORD PTR [rsp+0x48]
   14001f1bf:	mov    rdi,QWORD PTR [rsp+0x58]
   14001f1c4:	add    rsp,0x30
   14001f1c8:	pop    r12
   14001f1ca:	ret    
   14001f1cb:	int3   
   14001f1cc:	int3   
   14001f1cd:	int3   
   14001f1ce:	int3   
   14001f1cf:	int3   
   14001f1d0:	int3   
   14001f1d1:	int3   
   14001f1d2:	int3   
   14001f1d3:	int3   
   14001f1d4:	int3   
   14001f1d5:	int3   
   14001f1d6:	int3   
   14001f1d7:	int3   
   14001f1d8:	rex push rbp
   14001f1da:	sub    rsp,0x20
   14001f1de:	mov    rbp,rdx
   14001f1e1:	mov    rcx,QWORD PTR [rbp+0x40]
   14001f1e5:	add    rcx,0x58
   14001f1e9:	call   0x140003de0
   14001f1ee:	add    rsp,0x20
   14001f1f2:	pop    rbp
   14001f1f3:	ret    
   14001f1f4:	int3   
   14001f1f5:	int3   
   14001f1f6:	int3   
   14001f1f7:	int3   
   14001f1f8:	rex push rbp
   14001f1fa:	sub    rsp,0x20
   14001f1fe:	mov    rbp,rdx
   14001f201:	mov    rcx,QWORD PTR [rbp+0x40]
   14001f205:	add    rcx,0xc0
   14001f20c:	call   0x14001e578
   14001f211:	add    rsp,0x20
   14001f215:	pop    rbp
   14001f216:	ret    
   14001f217:	int3   
   14001f218:	mov    QWORD PTR [rsp+0x10],rdx
   14001f21d:	push   rbp
   14001f21e:	sub    rsp,0x20
   14001f222:	mov    rbp,rdx
   14001f225:	mov    rcx,QWORD PTR [rbp+0x28]
   14001f229:	test   rcx,rcx
   14001f22c:	je     0x14001f234
   14001f22e:	call   0x140021780
   14001f233:	nop
   14001f234:	lea    rax,[rip+0xfffffffffffffee8]        # 0x14001f123
   14001f23b:	jmp    0x14001f23d
   14001f23d:	add    rsp,0x20
   14001f241:	pop    rbp
   14001f242:	ret    
   14001f243:	int3   
   14001f244:	int3   
   14001f245:	int3   
   14001f246:	int3   
   14001f247:	int3   
   14001f248:	rex push rbp
   14001f24a:	sub    rsp,0x20
   14001f24e:	mov    rbp,rdx
   14001f251:	mov    rcx,QWORD PTR [rbp+0x50]
   14001f255:	call   0x14002496c
   14001f25a:	add    rsp,0x20
   14001f25e:	pop    rbp
   14001f25f:	ret    
   14001f260:	int3   
   14001f261:	int3   
   14001f262:	int3   
   14001f263:	int3   
   14001f264:	int3   
   14001f265:	int3   
   14001f266:	int3   
   14001f267:	int3   
   14001f268:	rex push rbp
   14001f26a:	sub    rsp,0x20
   14001f26e:	mov    rbp,rdx
   14001f271:	mov    rcx,QWORD PTR [rbp+0x50]
   14001f275:	call   0x14002496c
   14001f27a:	add    rsp,0x20
   14001f27e:	pop    rbp
   14001f27f:	ret    
   14001f280:	rex push rbx
   14001f282:	sub    rsp,0x30
   14001f286:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f28f:	mov    ecx,0xe0
   14001f294:	call   0x140024948
   14001f299:	mov    rbx,rax
   14001f29c:	mov    QWORD PTR [rsp+0x40],rax
   14001f2a1:	test   rax,rax
   14001f2a4:	je     0x14001f2bf
   14001f2a6:	mov    edx,0x1
   14001f2ab:	mov    rcx,rax
   14001f2ae:	call   0x14001f048
   14001f2b3:	lea    r11,[rip+0x270de]        # 0x140046398
   14001f2ba:	mov    QWORD PTR [rbx],r11
   14001f2bd:	jmp    0x14001f2c1
   14001f2bf:	xor    ebx,ebx
   14001f2c1:	mov    rax,rbx
   14001f2c4:	add    rsp,0x30
   14001f2c8:	pop    rbx
   14001f2c9:	ret    
   14001f2ca:	int3   
   14001f2cb:	int3   
   14001f2cc:	int3   
   14001f2cd:	int3   
   14001f2ce:	int3   
   14001f2cf:	int3   
   14001f2d0:	rex push rbp
   14001f2d2:	sub    rsp,0x20
   14001f2d6:	mov    rbp,rdx
   14001f2d9:	mov    rcx,QWORD PTR [rbp+0x40]
   14001f2dd:	call   0x14002496c
   14001f2e2:	add    rsp,0x20
   14001f2e6:	pop    rbp
   14001f2e7:	ret    
   14001f2e8:	sub    rsp,0x28
   14001f2ec:	lea    rdx,[rip+0xffffffffffff7435]        # 0x140016728
   14001f2f3:	lea    rcx,[rip+0x4132e]        # 0x140060628
   14001f2fa:	call   0x14002514c
   14001f2ff:	test   rax,rax
   14001f302:	jne    0x14001f30a
   14001f304:	call   0x1400218c0
   14001f309:	int3   
   14001f30a:	mov    rax,QWORD PTR [rax+0x8]
   14001f30e:	test   rax,rax
   14001f311:	jne    0x14001f331
   14001f313:	lea    rdx,[rip+0xffffffffffffff66]        # 0x14001f280
   14001f31a:	lea    rcx,[rip+0x412ff]        # 0x140060620
   14001f321:	call   0x140024a14
   14001f326:	test   rax,rax
   14001f329:	jne    0x14001f331
   14001f32b:	call   0x1400218c0
   14001f330:	int3   
   14001f331:	add    rsp,0x28
   14001f335:	ret    
   14001f336:	int3   
   14001f337:	int3   
   14001f338:	sub    rsp,0x28
   14001f33c:	call   0x14001f2e8
   14001f341:	lea    rdx,[rip+0xfffffffffffff684]        # 0x14001e9cc
   14001f348:	lea    rcx,[rax+0xc0]
   14001f34f:	call   0x14002514c
   14001f354:	test   rax,rax
   14001f357:	jne    0x14001f35f
   14001f359:	call   0x1400218c0
   14001f35e:	int3   
   14001f35f:	add    rsp,0x28
   14001f363:	ret    
   14001f364:	mov    QWORD PTR [rsp+0x8],rbx
   14001f369:	push   rdi
   14001f36a:	sub    rsp,0x20
   14001f36e:	mov    rdi,rdx
   14001f371:	mov    rbx,rcx
   14001f374:	call   0x14001f2e8
   14001f379:	xor    r8d,r8d
   14001f37c:	cmp    DWORD PTR [rax+0xd0],r8d
   14001f383:	je     0x14001f3a6
   14001f385:	mov    rcx,QWORD PTR [rdi+0xd8]
   14001f38c:	cmp    rcx,0xffffffffffffffff
   14001f390:	je     0x14001f3a6
   14001f392:	mov    rax,QWORD PTR [rip+0x4126f]        # 0x140060608
   14001f399:	cmp    rax,r8
   14001f39c:	je     0x14001f3a6
   14001f39e:	mov    rdx,rbx
   14001f3a1:	call   rax
   14001f3a3:	mov    r8d,eax
   14001f3a6:	mov    DWORD PTR [rbx+0x8],r8d
   14001f3aa:	mov    rax,rbx
   14001f3ad:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f3b2:	add    rsp,0x20
   14001f3b6:	pop    rdi
   14001f3b7:	ret    
   14001f3b8:	sub    rsp,0x28
   14001f3bc:	call   0x14001f338
   14001f3c1:	mov    rax,QWORD PTR [rax+0x8]
   14001f3c5:	add    rsp,0x28
   14001f3c9:	ret    
   14001f3ca:	int3   
   14001f3cb:	int3   
   14001f3cc:	sub    rsp,0x28
   14001f3d0:	call   0x14001ea28
   14001f3d5:	add    rax,0x58
   14001f3d9:	add    rsp,0x28
   14001f3dd:	ret    
   14001f3de:	int3   
   14001f3df:	int3   
   14001f3e0:	sub    rsp,0x28
   14001f3e4:	cmp    DWORD PTR [rdx+0x8],0x1
   14001f3e8:	mov    rax,rdx
   14001f3eb:	jne    0x14001f3f3
   14001f3ed:	or     rax,0xffffffffffffffff
   14001f3f1:	jmp    0x14001f406
   14001f3f3:	cmp    DWORD PTR [rdx+0x8],0xf
   14001f3f7:	jne    0x14001f404
   14001f3f9:	mov    rcx,QWORD PTR [rax]
   14001f3fc:	xor    edx,edx
   14001f3fe:	call   QWORD PTR [rip+0x2429c]        # 0x1400436a0
   14001f404:	xor    eax,eax
   14001f406:	add    rsp,0x28
   14001f40a:	ret    
   14001f40b:	int3   
   14001f40c:	mov    QWORD PTR [rsp+0x8],rbx
   14001f411:	push   rdi
   14001f412:	sub    rsp,0x20
   14001f416:	mov    rbx,rdx
   14001f419:	mov    rdi,rcx
   14001f41c:	call   0x14001f338
   14001f421:	mov    rcx,QWORD PTR [rax+0x8]
   14001f425:	test   rcx,rcx
   14001f428:	je     0x14001f43b
   14001f42a:	mov    rax,QWORD PTR [rcx]
   14001f42d:	mov    r8,rbx
   14001f430:	mov    rdx,rdi
   14001f433:	call   QWORD PTR [rax+0xd8]
   14001f439:	jmp    0x14001f446
   14001f43b:	mov    rdx,rbx
   14001f43e:	mov    rcx,rdi
   14001f441:	call   0x14001f3e0
   14001f446:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f44b:	add    rsp,0x20
   14001f44f:	pop    rdi
   14001f450:	ret    
   14001f451:	int3   
   14001f452:	int3   
   14001f453:	int3   
   14001f454:	rex push rbx
   14001f456:	sub    rsp,0x20
   14001f45a:	and    QWORD PTR [rcx+0x40],0x0
   14001f45f:	and    QWORD PTR [rcx+0x48],0x0
   14001f464:	and    QWORD PTR [rcx+0x58],0x0
   14001f469:	and    DWORD PTR [rcx+0x60],0x0
   14001f46d:	mov    rbx,rcx
   14001f470:	call   0x14001ea28
   14001f475:	and    DWORD PTR [rax+0x60],0x0
   14001f479:	and    DWORD PTR [rax+0x90],0x0
   14001f480:	lea    rcx,[rax+0x88]
   14001f487:	call   QWORD PTR [rip+0x243db]        # 0x140043868
   14001f48d:	and    QWORD PTR [rbx+0x80],0x0
   14001f495:	and    QWORD PTR [rbx+0x78],0x0
   14001f49a:	mov    DWORD PTR [rbx+0x50],0x1
   14001f4a1:	add    rsp,0x20
   14001f4a5:	pop    rbx
   14001f4a6:	ret    
   14001f4a7:	int3   
   14001f4a8:	mov    QWORD PTR [rsp+0x8],rcx
   14001f4ad:	push   rbx
   14001f4ae:	sub    rsp,0x30
   14001f4b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f4bb:	mov    rbx,rcx
   14001f4be:	lea    rax,[rip+0x26f73]        # 0x140046438
   14001f4c5:	mov    QWORD PTR [rcx],rax
   14001f4c8:	mov    rcx,QWORD PTR [rcx+0x58]
   14001f4cc:	test   rcx,rcx
   14001f4cf:	je     0x14001f4d7
   14001f4d1:	call   QWORD PTR [rip+0x240b1]        # 0x140043588
   14001f4d7:	call   0x14001f338
   14001f4dc:	cmp    QWORD PTR [rax+0x8],rbx
   14001f4e0:	jne    0x14001f4e7
   14001f4e2:	and    QWORD PTR [rax+0x8],0x0
   14001f4e7:	mov    rcx,rbx
   14001f4ea:	add    rsp,0x30
   14001f4ee:	pop    rbx
   14001f4ef:	jmp    0x140014d08
   14001f4f4:	int3   
   14001f4f5:	int3   
   14001f4f6:	int3   
   14001f4f7:	int3   
   14001f4f8:	rex push rbp
   14001f4fa:	sub    rsp,0x20
   14001f4fe:	mov    rbp,rdx
   14001f501:	mov    rcx,QWORD PTR [rbp+0x40]
   14001f505:	call   0x140014d08
   14001f50a:	add    rsp,0x20
   14001f50e:	pop    rbp
   14001f50f:	ret    
   14001f510:	sub    rsp,0x28
   14001f514:	cmp    DWORD PTR [rcx+0x50],0x0
   14001f518:	je     0x14001f525
   14001f51a:	mov    rax,QWORD PTR [rcx]
   14001f51d:	mov    edx,0x1
   14001f522:	call   QWORD PTR [rax+0x8]
   14001f525:	add    rsp,0x28
   14001f529:	ret    
   14001f52a:	int3   
   14001f52b:	int3   
   14001f52c:	mov    rax,rsp
   14001f52f:	mov    QWORD PTR [rax+0x8],rbx
   14001f533:	mov    QWORD PTR [rax+0x10],rbp
   14001f537:	mov    QWORD PTR [rax+0x18],rsi
   14001f53b:	mov    QWORD PTR [rax+0x20],rdi
   14001f53f:	push   r12
   14001f541:	sub    rsp,0x30
   14001f545:	mov    rbx,rcx
   14001f548:	call   0x14001ea28
   14001f54d:	mov    edi,0x1
   14001f552:	mov    r12,rax
   14001f555:	xor    esi,esi
   14001f557:	jmp    0x14001f58c
   14001f559:	and    DWORD PTR [rsp+0x20],0x0
   14001f55e:	lea    rcx,[r12+0x58]
   14001f563:	xor    r9d,r9d
   14001f566:	xor    r8d,r8d
   14001f569:	xor    edx,edx
   14001f56b:	call   QWORD PTR [rip+0x24227]        # 0x140043798
   14001f571:	test   eax,eax
   14001f573:	jne    0x14001f590
   14001f575:	mov    rax,QWORD PTR [rbx]
   14001f578:	mov    edx,esi
   14001f57a:	mov    rcx,rbx
   14001f57d:	call   QWORD PTR [rax+0xc0]
   14001f583:	add    esi,0x1
   14001f586:	test   eax,eax
   14001f588:	jne    0x14001f58c
   14001f58a:	xor    edi,edi
   14001f58c:	test   edi,edi
   14001f58e:	jne    0x14001f559
   14001f590:	mov    rax,QWORD PTR [rbx]
   14001f593:	mov    rcx,rbx
   14001f596:	call   QWORD PTR [rax+0xb8]
   14001f59c:	mov    rcx,rbx
   14001f59f:	test   eax,eax
   14001f5a1:	mov    rax,QWORD PTR [rbx]
   14001f5a4:	je     0x14001f5da
   14001f5a6:	lea    rdx,[r12+0x58]
   14001f5ab:	call   QWORD PTR [rax+0xc8]
   14001f5b1:	test   eax,eax
   14001f5b3:	je     0x14001f5bc
   14001f5b5:	mov    edi,0x1
   14001f5ba:	xor    esi,esi
   14001f5bc:	and    DWORD PTR [rsp+0x20],0x0
   14001f5c1:	lea    rcx,[r12+0x58]
   14001f5c6:	xor    r9d,r9d
   14001f5c9:	xor    r8d,r8d
   14001f5cc:	xor    edx,edx
   14001f5ce:	call   QWORD PTR [rip+0x241c4]        # 0x140043798
   14001f5d4:	test   eax,eax
   14001f5d6:	jne    0x14001f590
   14001f5d8:	jmp    0x14001f58c
   14001f5da:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f5df:	mov    rbp,QWORD PTR [rsp+0x48]
   14001f5e4:	mov    rsi,QWORD PTR [rsp+0x50]
   14001f5e9:	mov    rdi,QWORD PTR [rsp+0x58]
   14001f5ee:	add    rsp,0x30
   14001f5f2:	pop    r12
   14001f5f4:	rex.W jmp QWORD PTR [rax+0xd0]
   14001f5fb:	int3   
   14001f5fc:	sub    rsp,0x28
   14001f600:	call   0x14001ea28
   14001f605:	mov    eax,DWORD PTR [rax+0x68]
   14001f608:	add    rsp,0x28
   14001f60c:	ret    
   14001f60d:	int3   
   14001f60e:	int3   
   14001f60f:	int3   
   14001f610:	mov    QWORD PTR [rsp+0x8],rbx
   14001f615:	mov    QWORD PTR [rsp+0x10],rsi
   14001f61a:	push   rdi
   14001f61b:	sub    rsp,0x20
   14001f61f:	mov    rax,QWORD PTR [rcx]
   14001f622:	mov    rbx,rdx
   14001f625:	mov    rsi,rcx
   14001f628:	call   QWORD PTR [rax+0x50]
   14001f62b:	cmp    QWORD PTR [rax],0x0
   14001f62f:	mov    rdi,rax
   14001f632:	je     0x14001f697
   14001f634:	mov    edx,DWORD PTR [rbx+0x8]
   14001f637:	mov    rcx,QWORD PTR [rax+0x8]
   14001f63b:	xor    r9d,r9d
   14001f63e:	xor    r8d,r8d
   14001f641:	cmp    edx,0xc000
   14001f647:	jae    0x14001f681
   14001f649:	call   0x140016104
   14001f64e:	test   rax,rax
   14001f651:	mov    r11,rax
   14001f654:	je     0x14001f693
   14001f656:	mov    r8,QWORD PTR [rbx+0x18]
   14001f65a:	mov    rdx,QWORD PTR [rbx+0x10]
   14001f65e:	mov    rcx,rsi
   14001f661:	call   QWORD PTR [r11+0x18]
   14001f665:	mov    eax,0x1
   14001f66a:	jmp    0x14001f699
   14001f66c:	mov    rcx,QWORD PTR [r11+0x10]
   14001f670:	mov    eax,DWORD PTR [rbx+0x8]
   14001f673:	cmp    DWORD PTR [rcx],eax
   14001f675:	je     0x14001f656
   14001f677:	xor    r9d,r9d
   14001f67a:	lea    rcx,[r11+0x20]
   14001f67e:	xor    r8d,r8d
   14001f681:	mov    edx,0xc000
   14001f686:	call   0x140016104
   14001f68b:	test   rax,rax
   14001f68e:	mov    r11,rax
   14001f691:	jne    0x14001f66c
   14001f693:	call   QWORD PTR [rdi]
   14001f695:	jmp    0x14001f62b
   14001f697:	xor    eax,eax
   14001f699:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f69e:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f6a3:	add    rsp,0x20
   14001f6a7:	pop    rdi
   14001f6a8:	ret    
   14001f6a9:	int3   
   14001f6aa:	int3   
   14001f6ab:	int3   
   14001f6ac:	mov    rcx,rdx
   14001f6af:	mov    rdx,r8
   14001f6b2:	jmp    0x14001f3e0
   14001f6b7:	int3   
   14001f6b8:	lea    rax,[rip+0x26d19]        # 0x1400463d8
   14001f6bf:	ret    
   14001f6c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001f6c5:	push   rdi
   14001f6c6:	sub    rsp,0x20
   14001f6ca:	mov    rdi,rcx
   14001f6cd:	call   0x14001f338
   14001f6d2:	mov    rcx,QWORD PTR [rax+0x8]
   14001f6d6:	test   rcx,rcx
   14001f6d9:	je     0x14001f6f4
   14001f6db:	cmp    QWORD PTR [rdi],0x0
   14001f6df:	jne    0x14001f6f4
   14001f6e1:	mov    rdx,rdi
   14001f6e4:	call   0x14001f610
   14001f6e9:	test   eax,eax
   14001f6eb:	je     0x14001f6f4
   14001f6ed:	mov    eax,0x1
   14001f6f2:	jmp    0x14001f758
   14001f6f4:	call   0x14001f338
   14001f6f9:	mov    rcx,QWORD PTR [rax+0x8]
   14001f6fd:	test   rcx,rcx
   14001f700:	je     0x14001f710
   14001f702:	mov    rax,QWORD PTR [rcx]
   14001f705:	call   QWORD PTR [rax+0xe8]
   14001f70b:	mov    rbx,rax
   14001f70e:	jmp    0x14001f712
   14001f710:	xor    ebx,ebx
   14001f712:	test   rbx,rbx
   14001f715:	jne    0x14001f71b
   14001f717:	xor    ecx,ecx
   14001f719:	jmp    0x14001f71f
   14001f71b:	mov    rcx,QWORD PTR [rbx+0x40]
   14001f71f:	mov    rdx,rdi
   14001f722:	call   0x140019348
   14001f727:	test   eax,eax
   14001f729:	jne    0x14001f6ed
   14001f72b:	test   rbx,rbx
   14001f72e:	je     0x14001f756
   14001f730:	mov    rcx,QWORD PTR [rdi]
   14001f733:	call   0x140018e70
   14001f738:	mov    rcx,rax
   14001f73b:	call   0x14001a9fc
   14001f740:	cmp    rax,rbx
   14001f743:	je     0x14001f756
   14001f745:	mov    rax,QWORD PTR [rbx]
   14001f748:	mov    rdx,rdi
   14001f74b:	mov    rcx,rbx
   14001f74e:	call   QWORD PTR [rax+0x200]
   14001f754:	jmp    0x14001f758
   14001f756:	xor    eax,eax
   14001f758:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f75d:	add    rsp,0x20
   14001f761:	pop    rdi
   14001f762:	ret    
   14001f763:	int3   
   14001f764:	rex push rbx
   14001f766:	sub    rsp,0x20
   14001f76a:	mov    rbx,rcx
   14001f76d:	call   0x14001f338
   14001f772:	mov    rcx,QWORD PTR [rax+0x8]
   14001f776:	test   rcx,rcx
   14001f779:	je     0x14001f789
   14001f77b:	mov    rax,QWORD PTR [rcx]
   14001f77e:	mov    rdx,rbx
   14001f781:	call   QWORD PTR [rax+0xb0]
   14001f787:	jmp    0x14001f791
   14001f789:	mov    rcx,rbx
   14001f78c:	call   0x14001f6c0
   14001f791:	add    rsp,0x20
   14001f795:	pop    rbx
   14001f796:	ret    
   14001f797:	int3   
   14001f798:	rex push rbx
   14001f79a:	sub    rsp,0x20
   14001f79e:	mov    eax,DWORD PTR [rcx+0x8]
   14001f7a1:	mov    rbx,rcx
   14001f7a4:	cmp    eax,0x200
   14001f7a9:	je     0x14001f7c0
   14001f7ab:	cmp    eax,0xa0
   14001f7b0:	je     0x14001f7c0
   14001f7b2:	cmp    eax,0xf
   14001f7b5:	je     0x14001f7ee
   14001f7b7:	cmp    eax,0x118
   14001f7bc:	je     0x14001f7ee
   14001f7be:	jmp    0x14001f803
   14001f7c0:	call   0x14001ea28
   14001f7c5:	mov    rcx,QWORD PTR [rbx+0x24]
   14001f7c9:	cmp    DWORD PTR [rax+0x88],ecx
   14001f7cf:	mov    r11,rax
   14001f7d2:	jne    0x14001f7f2
   14001f7d4:	mov    rdx,rcx
   14001f7d7:	shr    rdx,0x20
   14001f7db:	cmp    DWORD PTR [rax+0x8c],edx
   14001f7e1:	jne    0x14001f7f2
   14001f7e3:	mov    edx,DWORD PTR [rax+0x90]
   14001f7e9:	cmp    DWORD PTR [rbx+0x8],edx
   14001f7ec:	jne    0x14001f7f2
   14001f7ee:	xor    eax,eax
   14001f7f0:	jmp    0x14001f808
   14001f7f2:	mov    QWORD PTR [rax+0x88],rcx
   14001f7f9:	mov    eax,DWORD PTR [rbx+0x8]
   14001f7fc:	mov    DWORD PTR [r11+0x90],eax
   14001f803:	mov    eax,0x1
   14001f808:	add    rsp,0x20
   14001f80c:	pop    rbx
   14001f80d:	ret    
   14001f80e:	int3   
   14001f80f:	int3   
   14001f810:	rex push rbx
   14001f812:	sub    rsp,0x20
   14001f816:	mov    rbx,rcx
   14001f819:	call   0x14001f338
   14001f81e:	mov    rcx,QWORD PTR [rax+0x8]
   14001f822:	test   rcx,rcx
   14001f825:	je     0x14001f835
   14001f827:	mov    rax,QWORD PTR [rcx]
   14001f82a:	mov    rdx,rbx
   14001f82d:	call   QWORD PTR [rax+0xc8]
   14001f833:	jmp    0x14001f83d
   14001f835:	mov    rcx,rbx
   14001f838:	call   0x14001f798
   14001f83d:	add    rsp,0x20
   14001f841:	pop    rbx
   14001f842:	ret    
   14001f843:	int3   
   14001f844:	mov    QWORD PTR [rsp+0x8],rbx
   14001f849:	push   rdi
   14001f84a:	sub    rsp,0x20
   14001f84e:	mov    ebx,edx
   14001f850:	mov    rdi,rcx
   14001f853:	call   0x14001f4a8
   14001f858:	test   bl,0x1
   14001f85b:	je     0x14001f865
   14001f85d:	mov    rcx,rdi
   14001f860:	call   0x14001490c
   14001f865:	mov    rax,rdi
   14001f868:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f86d:	add    rsp,0x20
   14001f871:	pop    rdi
   14001f872:	ret    
   14001f873:	int3   
   14001f874:	mov    QWORD PTR [rsp+0x8],rcx
   14001f879:	push   rbx
   14001f87a:	sub    rsp,0x30
   14001f87e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f887:	mov    rbx,rcx
   14001f88a:	call   0x140014cd0
   14001f88f:	nop
   14001f890:	lea    rax,[rip+0x26ba1]        # 0x140046438
   14001f897:	mov    QWORD PTR [rbx],rax
   14001f89a:	and    QWORD PTR [rbx+0x68],0x0
   14001f89f:	and    QWORD PTR [rbx+0x70],0x0
   14001f8a4:	mov    rcx,rbx
   14001f8a7:	call   0x14001f454
   14001f8ac:	nop
   14001f8ad:	mov    rax,rbx
   14001f8b0:	add    rsp,0x30
   14001f8b4:	pop    rbx
   14001f8b5:	ret    
   14001f8b6:	int3   
   14001f8b7:	int3   
   14001f8b8:	int3   
   14001f8b9:	int3   
   14001f8ba:	int3   
   14001f8bb:	int3   
   14001f8bc:	int3   
   14001f8bd:	int3   
   14001f8be:	int3   
   14001f8bf:	int3   
   14001f8c0:	int3   
   14001f8c1:	int3   
   14001f8c2:	int3   
   14001f8c3:	int3   
   14001f8c4:	rex push rbp
   14001f8c6:	sub    rsp,0x20
   14001f8ca:	mov    rbp,rdx
   14001f8cd:	mov    rcx,QWORD PTR [rbp+0x40]
   14001f8d1:	call   0x140014d08
   14001f8d6:	add    rsp,0x20
   14001f8da:	pop    rbp
   14001f8db:	ret    
   14001f8dc:	mov    rcx,rdx
   14001f8df:	jmp    0x14001f798
   14001f8e4:	mov    rcx,rdx
   14001f8e7:	jmp    0x14001f6c0
   14001f8ec:	sub    rsp,0x28
   14001f8f0:	mov    rax,QWORD PTR [rcx+0x48]
   14001f8f4:	test   rax,rax
   14001f8f7:	jne    0x14001f910
   14001f8f9:	mov    rax,QWORD PTR [rcx+0x40]
   14001f8fd:	test   rax,rax
   14001f900:	jne    0x14001f910
   14001f902:	call   QWORD PTR [rip+0x23da0]        # 0x1400436a8
   14001f908:	mov    rcx,rax
   14001f90b:	call   0x140018e70
   14001f910:	add    rsp,0x28
   14001f914:	ret    
   14001f915:	int3   
   14001f916:	int3   
   14001f917:	int3   
   14001f918:	mov    QWORD PTR [rsp+0x8],rbx
   14001f91d:	push   rdi
   14001f91e:	sub    rsp,0x20
   14001f922:	call   0x14001ea28
   14001f927:	xor    r9d,r9d
   14001f92a:	xor    r8d,r8d
   14001f92d:	lea    rcx,[rax+0x58]
   14001f931:	xor    edx,edx
   14001f933:	mov    rdi,rax
   14001f936:	call   QWORD PTR [rip+0x23d54]        # 0x140043690
   14001f93c:	test   eax,eax
   14001f93e:	je     0x14001f96f
   14001f940:	cmp    DWORD PTR [rdi+0x60],0x36a
   14001f947:	je     0x14001f96a
   14001f949:	lea    rcx,[rdi+0x58]
   14001f94d:	call   0x14001f764
   14001f952:	test   eax,eax
   14001f954:	jne    0x14001f96a
   14001f956:	lea    rcx,[rdi+0x58]
   14001f95a:	call   QWORD PTR [rip+0x23d38]        # 0x140043698
   14001f960:	lea    rcx,[rdi+0x58]
   14001f964:	call   QWORD PTR [rip+0x23de6]        # 0x140043750
   14001f96a:	mov    eax,0x1
   14001f96f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f974:	add    rsp,0x20
   14001f978:	pop    rdi
   14001f979:	ret    
   14001f97a:	int3   
   14001f97b:	int3   
   14001f97c:	sub    rsp,0x28
   14001f980:	call   0x14001f338
   14001f985:	mov    rcx,QWORD PTR [rax+0x8]
   14001f989:	test   rcx,rcx
   14001f98c:	je     0x14001f999
   14001f98e:	mov    rax,QWORD PTR [rcx]
   14001f991:	call   QWORD PTR [rax+0xb8]
   14001f997:	jmp    0x14001f99e
   14001f999:	call   0x14001f918
   14001f99e:	add    rsp,0x28
   14001f9a2:	ret    
   14001f9a3:	int3   
   14001f9a4:	mov    QWORD PTR [rsp+0x8],rbx
   14001f9a9:	mov    QWORD PTR [rsp+0x10],rsi
   14001f9ae:	push   rdi
   14001f9af:	sub    rsp,0x20
   14001f9b3:	mov    rdi,r8
   14001f9b6:	mov    rsi,rdx
   14001f9b9:	mov    ebx,ecx
   14001f9bb:	call   0x14001f2e8
   14001f9c0:	cmp    BYTE PTR [rax+0x28],0x0
   14001f9c4:	jne    0x14001f9f2
   14001f9c6:	test   ebx,ebx
   14001f9c8:	jns    0x14001f9d2
   14001f9ca:	cmp    ebx,0x8001
   14001f9d0:	jne    0x14001f9f2
   14001f9d2:	call   0x14001f338
   14001f9d7:	mov    rcx,QWORD PTR [rax+0x8]
   14001f9db:	test   rcx,rcx
   14001f9de:	je     0x14001f9f2
   14001f9e0:	mov    rax,QWORD PTR [rcx]
   14001f9e3:	mov    r8,rdi
   14001f9e6:	mov    edx,ebx
   14001f9e8:	call   QWORD PTR [rax+0xe0]
   14001f9ee:	cdqe   
   14001f9f0:	jmp    0x14001fa22
   14001f9f2:	lea    rdx,[rip+0xffffffffffff6d2f]        # 0x140016728
   14001f9f9:	lea    rcx,[rip+0x40c28]        # 0x140060628
   14001fa00:	call   0x14002514c
   14001fa05:	test   rax,rax
   14001fa08:	jne    0x14001fa10
   14001fa0a:	call   0x1400218c0
   14001fa0f:	int3   
   14001fa10:	mov    rcx,QWORD PTR [rax+0x50]
   14001fa14:	mov    r9,rdi
   14001fa17:	mov    r8,rsi
   14001fa1a:	mov    edx,ebx
   14001fa1c:	call   QWORD PTR [rip+0x23cde]        # 0x140043700
   14001fa22:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fa27:	mov    rsi,QWORD PTR [rsp+0x38]
   14001fa2c:	add    rsp,0x20
   14001fa30:	pop    rdi
   14001fa31:	ret    
   14001fa32:	int3   
   14001fa33:	int3   
   14001fa34:	mov    QWORD PTR [rsp+0x8],rbx
   14001fa39:	mov    QWORD PTR [rsp+0x10],rbp
   14001fa3e:	mov    QWORD PTR [rsp+0x18],rsi
   14001fa43:	push   rdi
   14001fa44:	sub    rsp,0x50
   14001fa48:	test   r8,r8
   14001fa4b:	mov    rdi,r8
   14001fa4e:	mov    ebx,edx
   14001fa50:	mov    rbp,rcx
   14001fa53:	je     0x14001fbba
   14001fa59:	test   edx,edx
   14001fa5b:	je     0x14001fafd
   14001fa61:	cmp    edx,0x2
   14001fa64:	jne    0x14001fbba
   14001fa6a:	mov    rcx,QWORD PTR [r8]
   14001fa6d:	call   0x140018e70
   14001fa72:	test   rax,rax
   14001fa75:	je     0x14001fafd
   14001fa7b:	mov    rcx,rax
   14001fa7e:	call   0x140019b5c
   14001fa83:	test   rax,rax
   14001fa86:	mov    rsi,rax
   14001fa89:	je     0x14001fafd
   14001fa8b:	mov    rcx,rax
   14001fa8e:	call   0x1400166b0
   14001fa93:	test   eax,eax
   14001fa95:	je     0x14001fafd
   14001fa97:	cmp    DWORD PTR [rsi+0xc4],0x0
   14001fa9e:	je     0x14001fafd
   14001faa0:	call   0x14001f338
   14001faa5:	mov    rcx,QWORD PTR [rax+0x8]
   14001faa9:	test   rcx,rcx
   14001faac:	je     0x14001fab9
   14001faae:	mov    rax,QWORD PTR [rcx]
   14001fab1:	call   QWORD PTR [rax+0xe8]
   14001fab7:	jmp    0x14001fabb
   14001fab9:	xor    eax,eax
   14001fabb:	cmp    QWORD PTR [rbp+0x40],0x0
   14001fac0:	je     0x14001fafd
   14001fac2:	cmp    DWORD PTR [rdi+0x8],0x100
   14001fac9:	jne    0x14001fad2
   14001facb:	cmp    QWORD PTR [rdi+0x10],0xd
   14001fad0:	je     0x14001fadb
   14001fad2:	cmp    DWORD PTR [rdi+0x8],0x202
   14001fad9:	jne    0x14001fafd
   14001fadb:	mov    rcx,QWORD PTR [rax+0x40]
   14001fadf:	xor    r9d,r9d
   14001fae2:	mov    edx,0x111
   14001fae7:	mov    r8d,0xe146
   14001faed:	call   QWORD PTR [rip+0x23ef5]        # 0x1400439e8
   14001faf3:	mov    eax,0x1
   14001faf8:	jmp    0x14001fbbc
   14001fafd:	call   0x14001f338
   14001fb02:	mov    rcx,QWORD PTR [rax+0x8]
   14001fb06:	test   rcx,rcx
   14001fb09:	je     0x14001fb14
   14001fb0b:	mov    rax,QWORD PTR [rcx]
   14001fb0e:	call   QWORD PTR [rax+0xe8]
   14001fb14:	test   ebx,ebx
   14001fb16:	jne    0x14001fbba
   14001fb1c:	cmp    QWORD PTR [rbp+0x48],0x0
   14001fb21:	je     0x14001fbba
   14001fb27:	cmp    DWORD PTR [rdi+0x8],0x100
   14001fb2e:	jb     0x14001fbba
   14001fb34:	cmp    DWORD PTR [rdi+0x8],0x109
   14001fb3b:	ja     0x14001fbba
   14001fb3d:	lea    rdx,[rip+0xffffffffffff6be4]        # 0x140016728
   14001fb44:	lea    rcx,[rip+0x40add]        # 0x140060628
   14001fb4b:	call   0x14002514c
   14001fb50:	test   rax,rax
   14001fb53:	mov    rbx,rax
   14001fb56:	jne    0x14001fb5e
   14001fb58:	call   0x1400218c0
   14001fb5d:	int3   
   14001fb5e:	cmp    DWORD PTR [rax+0x1a0],0x0
   14001fb65:	jne    0x14001fbba
   14001fb67:	lea    rcx,[rsp+0x20]
   14001fb6c:	mov    rdx,rdi
   14001fb6f:	mov    r8d,0x30
   14001fb75:	mov    DWORD PTR [rax+0x1a0],0x1
   14001fb7f:	call   0x14002b7a0
   14001fb84:	mov    rcx,QWORD PTR [rbp+0x48]
   14001fb88:	call   0x140020094
   14001fb8d:	test   eax,eax
   14001fb8f:	je     0x14001fbb3
   14001fb91:	mov    rax,QWORD PTR [rbp+0x0]
   14001fb95:	lea    rdx,[rsp+0x20]
   14001fb9a:	mov    rcx,rbp
   14001fb9d:	call   QWORD PTR [rax+0xb0]
   14001fba3:	test   eax,eax
   14001fba5:	je     0x14001fbb3
   14001fba7:	and    DWORD PTR [rbx+0x1a0],0x0
   14001fbae:	jmp    0x14001faf3
   14001fbb3:	and    DWORD PTR [rbx+0x1a0],0x0
   14001fbba:	xor    eax,eax
   14001fbbc:	mov    rbx,QWORD PTR [rsp+0x60]
   14001fbc1:	mov    rbp,QWORD PTR [rsp+0x68]
   14001fbc6:	mov    rsi,QWORD PTR [rsp+0x70]
   14001fbcb:	add    rsp,0x50
   14001fbcf:	pop    rdi
   14001fbd0:	ret    
   14001fbd1:	int3   
   14001fbd2:	int3   
   14001fbd3:	int3   
   14001fbd4:	jmp    0x14001f918
   14001fbd9:	int3   
   14001fbda:	int3   
   14001fbdb:	int3   
   14001fbdc:	rex push rbx
   14001fbde:	sub    rsp,0x20
   14001fbe2:	call   0x14001f2e8
   14001fbe7:	cmp    BYTE PTR [rax+0x28],0x0
   14001fbeb:	jne    0x14001fc15
   14001fbed:	call   0x14001ea28
   14001fbf2:	mov    rbx,rax
   14001fbf5:	call   QWORD PTR [rip+0x238c5]        # 0x1400434c0
   14001fbfb:	lea    rdx,[rip+0xfffffffffffffda2]        # 0x14001f9a4
   14001fc02:	xor    r8d,r8d
   14001fc05:	or     ecx,0xffffffff
   14001fc08:	mov    r9d,eax
   14001fc0b:	call   QWORD PTR [rip+0x23ae7]        # 0x1400436f8
   14001fc11:	mov    QWORD PTR [rbx+0x50],rax
   14001fc15:	add    rsp,0x20
   14001fc19:	pop    rbx
   14001fc1a:	ret    
   14001fc1b:	int3   
   14001fc1c:	mov    rax,rsp
   14001fc1f:	mov    QWORD PTR [rax+0x8],rbx
   14001fc23:	mov    QWORD PTR [rax+0x10],rbp
   14001fc27:	mov    QWORD PTR [rax+0x18],rsi
   14001fc2b:	mov    QWORD PTR [rax+0x20],rdi
   14001fc2f:	push   r12
   14001fc31:	sub    rsp,0x30
   14001fc35:	xor    ebx,ebx
   14001fc37:	mov    r12d,edx
   14001fc3a:	cmp    edx,ebx
   14001fc3c:	jg     0x14001fd57
   14001fc42:	mov    rbp,QWORD PTR [rcx+0x40]
   14001fc46:	lea    esi,[rbx+0x1]
   14001fc49:	cmp    rbp,rbx
   14001fc4c:	je     0x14001fc97
   14001fc4e:	mov    rcx,QWORD PTR [rbp+0x40]
   14001fc52:	cmp    rcx,rbx
   14001fc55:	je     0x14001fc97
   14001fc57:	call   QWORD PTR [rip+0x23b5b]        # 0x1400437b8
   14001fc5d:	cmp    eax,ebx
   14001fc5f:	je     0x14001fc97
   14001fc61:	mov    rdx,QWORD PTR [rbp+0x40]
   14001fc65:	mov    r9,rsi
   14001fc68:	mov    r8d,0x363
   14001fc6e:	mov    rcx,rbp
   14001fc71:	mov    QWORD PTR [rsp+0x20],rbx
   14001fc76:	call   0x140019734
   14001fc7b:	mov    rcx,QWORD PTR [rbp+0x40]
   14001fc7f:	xor    r9d,r9d
   14001fc82:	mov    r8,rsi
   14001fc85:	mov    edx,0x363
   14001fc8a:	mov    DWORD PTR [rsp+0x28],esi
   14001fc8e:	mov    DWORD PTR [rsp+0x20],esi
   14001fc92:	call   0x140019bb0
   14001fc97:	call   0x14001f2e8
   14001fc9c:	lea    rdx,[rip+0xffffffffffffed29]        # 0x14001e9cc
   14001fca3:	lea    rcx,[rax+0xc0]
   14001fcaa:	call   0x14002514c
   14001fcaf:	cmp    rax,rbx
   14001fcb2:	jne    0x14001fcba
   14001fcb4:	call   0x1400218c0
   14001fcb9:	int3   
   14001fcba:	mov    rdi,QWORD PTR [rax+0x10]
   14001fcbe:	jmp    0x14001fd4c
   14001fcc3:	cmp    QWORD PTR [rdi+0x40],rbx
   14001fcc7:	je     0x14001fd45
   14001fcc9:	cmp    rdi,rbp
   14001fccc:	je     0x14001fd45
   14001fcce:	cmp    DWORD PTR [rdi+0x120],ebx
   14001fcd4:	jne    0x14001fce0
   14001fcd6:	xor    edx,edx
   14001fcd8:	mov    rcx,rdi
   14001fcdb:	call   0x140020064
   14001fce0:	mov    rcx,QWORD PTR [rdi+0x40]
   14001fce4:	call   QWORD PTR [rip+0x23ace]        # 0x1400437b8
   14001fcea:	cmp    eax,ebx
   14001fcec:	jne    0x14001fcf6
   14001fcee:	cmp    DWORD PTR [rdi+0x120],ebx
   14001fcf4:	jl     0x14001fd2c
   14001fcf6:	mov    rdx,QWORD PTR [rdi+0x40]
   14001fcfa:	mov    r9,rsi
   14001fcfd:	mov    r8d,0x363
   14001fd03:	mov    rcx,rdi
   14001fd06:	mov    QWORD PTR [rsp+0x20],rbx
   14001fd0b:	call   0x140019734
   14001fd10:	mov    rcx,QWORD PTR [rdi+0x40]
   14001fd14:	xor    r9d,r9d
   14001fd17:	mov    r8,rsi
   14001fd1a:	mov    edx,0x363
   14001fd1f:	mov    DWORD PTR [rsp+0x28],esi
   14001fd23:	mov    DWORD PTR [rsp+0x20],esi
   14001fd27:	call   0x140019bb0
   14001fd2c:	mov    edx,DWORD PTR [rdi+0x120]
   14001fd32:	cmp    edx,ebx
   14001fd34:	jle    0x14001fd3e
   14001fd36:	mov    rcx,rdi
   14001fd39:	call   0x140020064
   14001fd3e:	or     DWORD PTR [rdi+0x120],0xffffffff
   14001fd45:	mov    rdi,QWORD PTR [rdi+0xc8]
   14001fd4c:	cmp    rdi,rbx
   14001fd4f:	jne    0x14001fcc3
   14001fd55:	jmp    0x14001fd8e
   14001fd57:	call   0x14001f2e8
   14001fd5c:	lea    rdx,[rip+0xffffffffffffec69]        # 0x14001e9cc
   14001fd63:	lea    rcx,[rax+0xc0]
   14001fd6a:	call   0x14002514c
   14001fd6f:	cmp    rax,rbx
   14001fd72:	jne    0x14001fd7a
   14001fd74:	call   0x1400218c0
   14001fd79:	int3   
   14001fd7a:	cmp    DWORD PTR [rax+0x20],ebx
   14001fd7d:	jne    0x14001fd8e
   14001fd7f:	call   0x1400259cc
   14001fd84:	mov    ecx,0x1
   14001fd89:	call   0x140025d90
   14001fd8e:	mov    rbp,QWORD PTR [rsp+0x48]
   14001fd93:	mov    rsi,QWORD PTR [rsp+0x50]
   14001fd98:	mov    rdi,QWORD PTR [rsp+0x58]
   14001fd9d:	cmp    r12d,ebx
   14001fda0:	setl   bl
   14001fda3:	mov    eax,ebx
   14001fda5:	mov    rbx,QWORD PTR [rsp+0x40]
   14001fdaa:	add    rsp,0x30
   14001fdae:	pop    r12
   14001fdb0:	ret    
   14001fdb1:	int3   
   14001fdb2:	int3   
   14001fdb3:	int3   
   14001fdb4:	mov    rcx,QWORD PTR [rcx+0x98]
   14001fdbb:	mov    rax,QWORD PTR [rcx]
   14001fdbe:	rex.W jmp QWORD PTR [rax+0xb0]
   14001fdc5:	int3   
   14001fdc6:	int3   
   14001fdc7:	int3   
   14001fdc8:	mov    rax,QWORD PTR [rcx+0xa0]
   14001fdcf:	test   rax,rax
   14001fdd2:	jne    0x14001fdd5
   14001fdd4:	ret    
   14001fdd5:	mov    rax,QWORD PTR [rax+0x80]
   14001fddc:	ret    
   14001fddd:	int3   
   14001fdde:	int3   
   14001fddf:	int3   
   14001fde0:	sub    rsp,0x28
   14001fde4:	cmp    QWORD PTR [rcx+0x98],0x0
   14001fdec:	je     0x14001fe00
   14001fdee:	mov    rcx,QWORD PTR [rcx+0x98]
   14001fdf5:	mov    rax,QWORD PTR [rcx]
   14001fdf8:	call   QWORD PTR [rax+0x130]
   14001fdfe:	jmp    0x14001fe02
   14001fe00:	xor    eax,eax
   14001fe02:	add    rsp,0x28
   14001fe06:	ret    
   14001fe07:	int3   
   14001fe08:	sub    rsp,0x28
   14001fe0c:	cmp    QWORD PTR [rcx+0x98],0x0
   14001fe14:	je     0x14001fe28
   14001fe16:	mov    rcx,QWORD PTR [rcx+0x98]
   14001fe1d:	mov    rax,QWORD PTR [rcx]
   14001fe20:	call   QWORD PTR [rax+0xa8]
   14001fe26:	jmp    0x14001fe2a
   14001fe28:	xor    eax,eax
   14001fe2a:	add    rsp,0x28
   14001fe2e:	ret    
   14001fe2f:	int3   
   14001fe30:	sub    rsp,0x28
   14001fe34:	cmp    QWORD PTR [rcx+0x98],0x0
   14001fe3c:	jne    0x14001fe52
   14001fe3e:	mov    rcx,QWORD PTR [rcx+0x40]
   14001fe42:	call   QWORD PTR [rip+0x23910]        # 0x140043758
   14001fe48:	mov    rcx,rax
   14001fe4b:	call   0x140018e70
   14001fe50:	jmp    0x14001fe62
   14001fe52:	mov    rcx,QWORD PTR [rcx+0x98]
   14001fe59:	mov    rax,QWORD PTR [rcx]
   14001fe5c:	call   QWORD PTR [rax+0xe8]
   14001fe62:	add    rsp,0x28
   14001fe66:	ret    
   14001fe67:	int3   
   14001fe68:	rex push rbx
   14001fe6a:	sub    rsp,0x20
   14001fe6e:	cmp    QWORD PTR [rcx+0x98],0x0
   14001fe76:	mov    rbx,r8
   14001fe79:	jne    0x14001fe8a
   14001fe7b:	mov    rcx,QWORD PTR [rcx+0x40]
   14001fe7f:	call   QWORD PTR [rip+0x238d3]        # 0x140043758
   14001fe85:	mov    QWORD PTR [rbx],rax
   14001fe88:	jmp    0x14001fe9a
   14001fe8a:	mov    rcx,QWORD PTR [rcx+0x98]
   14001fe91:	mov    rax,QWORD PTR [rcx]
   14001fe94:	call   QWORD PTR [rax+0xe0]
   14001fe9a:	add    rsp,0x20
   14001fe9e:	pop    rbx
   14001fe9f:	ret    
   14001fea0:	mov    QWORD PTR [rsp+0x8],rbx
   14001fea5:	push   rdi
   14001fea6:	sub    rsp,0x20
   14001feaa:	bt     DWORD PTR [rcx+0x78],0x8
   14001feaf:	mov    rdi,rdx
   14001feb2:	mov    rbx,rcx
   14001feb5:	jae    0x14001fece
   14001feb7:	call   0x14001f2e8
   14001febc:	mov    r8,rdi
   14001febf:	mov    rdx,rbx
   14001fec2:	mov    rcx,QWORD PTR [rax+0x68]
   14001fec6:	mov    rax,QWORD PTR [rcx]
   14001fec9:	call   QWORD PTR [rax+0x50]
   14001fecc:	jmp    0x14001fed8
   14001fece:	mov    rcx,QWORD PTR [rcx+0x40]
   14001fed2:	call   QWORD PTR [rip+0x237b0]        # 0x140043688
   14001fed8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fedd:	add    rsp,0x20
   14001fee1:	pop    rdi
   14001fee2:	ret    
   14001fee3:	int3   
   14001fee4:	sub    rsp,0x28
   14001fee8:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001fef0:	jne    0x14001ff03
   14001fef2:	mov    rcx,QWORD PTR [rcx+0x40]
   14001fef6:	mov    edx,0xfffffff0
   14001fefb:	call   QWORD PTR [rip+0x23a1f]        # 0x140043920
   14001ff01:	jmp    0x14001ff13
   14001ff03:	mov    rcx,QWORD PTR [rcx+0xa0]
   14001ff0a:	mov    rax,QWORD PTR [rcx]
   14001ff0d:	call   QWORD PTR [rax+0xf0]
   14001ff13:	add    rsp,0x28
   14001ff17:	ret    
   14001ff18:	sub    rsp,0x28
   14001ff1c:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001ff24:	jne    0x14001ff37
   14001ff26:	mov    rcx,QWORD PTR [rcx+0x40]
   14001ff2a:	mov    edx,0xffffffec
   14001ff2f:	call   QWORD PTR [rip+0x239eb]        # 0x140043920
   14001ff35:	jmp    0x14001ff47
   14001ff37:	mov    rcx,QWORD PTR [rcx+0xa0]
   14001ff3e:	mov    rax,QWORD PTR [rcx]
   14001ff41:	call   QWORD PTR [rax+0xf8]
   14001ff47:	add    rsp,0x28
   14001ff4b:	ret    
   14001ff4c:	sub    rsp,0x28
   14001ff50:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001ff58:	jne    0x14001ff65
   14001ff5a:	mov    rcx,QWORD PTR [rcx+0x40]
   14001ff5e:	call   0x140015f40
   14001ff63:	jmp    0x14001ff75
   14001ff65:	mov    rcx,QWORD PTR [rcx+0xa0]
   14001ff6c:	mov    rax,QWORD PTR [rcx]
   14001ff6f:	call   QWORD PTR [rax+0x100]
   14001ff75:	add    rsp,0x28
   14001ff79:	ret    
   14001ff7a:	int3   
   14001ff7b:	int3   
   14001ff7c:	sub    rsp,0x28
   14001ff80:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001ff88:	jne    0x14001ff95
   14001ff8a:	mov    rcx,QWORD PTR [rcx+0x40]
   14001ff8e:	call   0x140015f60
   14001ff93:	jmp    0x14001ffa5
   14001ff95:	mov    rcx,QWORD PTR [rcx+0xa0]
   14001ff9c:	mov    rax,QWORD PTR [rcx]
   14001ff9f:	call   QWORD PTR [rax+0x108]
   14001ffa5:	add    rsp,0x28
   14001ffa9:	ret    
   14001ffaa:	int3   
   14001ffab:	int3   
   14001ffac:	mov    QWORD PTR [rsp+0x8],rbx
   14001ffb1:	push   rdi
   14001ffb2:	sub    rsp,0x20
   14001ffb6:	test   rcx,rcx
   14001ffb9:	mov    rdi,rdx
   14001ffbc:	mov    rbx,rcx
   14001ffbf:	jne    0x14001ffc7
   14001ffc1:	call   0x1400218c0
   14001ffc6:	int3   
   14001ffc7:	mov    rcx,QWORD PTR [rcx+0x40]
   14001ffcb:	call   QWORD PTR [rip+0x23757]        # 0x140043728
   14001ffd1:	test   eax,eax
   14001ffd3:	jne    0x14001ffe5
   14001ffd5:	cmp    QWORD PTR [rbx+0xa0],0x0
   14001ffdd:	jne    0x14001fffe
   14001ffdf:	call   0x1400218c0
   14001ffe4:	int3   
   14001ffe5:	cmp    QWORD PTR [rbx+0xa0],0x0
   14001ffed:	jne    0x14001fffe
   14001ffef:	mov    rcx,QWORD PTR [rbx+0x40]
   14001fff3:	mov    rdx,rdi
   14001fff6:	call   QWORD PTR [rip+0x23684]        # 0x140043680
   14001fffc:	jmp    0x140020011
   14001fffe:	mov    rcx,QWORD PTR [rbx+0xa0]
   140020005:	mov    rdx,rdi
   140020008:	mov    rax,QWORD PTR [rcx]
   14002000b:	call   QWORD PTR [rax+0x110]
   140020011:	mov    rbx,QWORD PTR [rsp+0x30]
   140020016:	add    rsp,0x20
   14002001a:	pop    rdi
   14002001b:	ret    
   14002001c:	sub    rsp,0x38
   140020020:	cmp    QWORD PTR [rcx+0xa0],0x0
   140020028:	jne    0x140020046
   14002002a:	mov    eax,DWORD PTR [rsp+0x68]
   14002002e:	mov    rcx,QWORD PTR [rcx+0x40]
   140020032:	mov    DWORD PTR [rsp+0x28],eax
   140020036:	mov    eax,DWORD PTR [rsp+0x60]
   14002003a:	mov    DWORD PTR [rsp+0x20],eax
   14002003e:	call   QWORD PTR [rip+0x23634]        # 0x140043678
   140020044:	jmp    0x14002005f
   140020046:	mov    rcx,QWORD PTR [rcx+0xa0]
   14002004d:	mov    eax,DWORD PTR [rsp+0x60]
   140020051:	mov    r10,QWORD PTR [rcx]
   140020054:	mov    DWORD PTR [rsp+0x20],eax
   140020058:	call   QWORD PTR [r10+0x130]
   14002005f:	add    rsp,0x38
   140020063:	ret    
   140020064:	sub    rsp,0x28
   140020068:	cmp    QWORD PTR [rcx+0xa0],0x0
   140020070:	jne    0x14002007e
   140020072:	mov    rcx,QWORD PTR [rcx+0x40]
   140020076:	call   QWORD PTR [rip+0x2389c]        # 0x140043918
   14002007c:	jmp    0x14002008e
   14002007e:	mov    rcx,QWORD PTR [rcx+0xa0]
   140020085:	mov    rax,QWORD PTR [rcx]
   140020088:	call   QWORD PTR [rax+0x140]
   14002008e:	add    rsp,0x28
   140020092:	ret    
   140020093:	int3   
   140020094:	sub    rsp,0x28
   140020098:	cmp    QWORD PTR [rcx+0xa0],0x0
   1400200a0:	jne    0x1400200ae
   1400200a2:	mov    rcx,QWORD PTR [rcx+0x40]
   1400200a6:	call   QWORD PTR [rip+0x2360c]        # 0x1400436b8
   1400200ac:	jmp    0x1400200be
   1400200ae:	mov    rcx,QWORD PTR [rcx+0xa0]
   1400200b5:	mov    rax,QWORD PTR [rcx]
   1400200b8:	call   QWORD PTR [rax+0x148]
   1400200be:	add    rsp,0x28
   1400200c2:	ret    
   1400200c3:	int3   
   1400200c4:	sub    rsp,0x28
   1400200c8:	cmp    QWORD PTR [rcx+0xa0],0x0
   1400200d0:	jne    0x1400200de
   1400200d2:	mov    rcx,QWORD PTR [rcx+0x40]
   1400200d6:	call   QWORD PTR [rip+0x23914]        # 0x1400439f0
   1400200dc:	jmp    0x1400200ee
   1400200de:	mov    rcx,QWORD PTR [rcx+0xa0]
   1400200e5:	mov    rax,QWORD PTR [rcx]
   1400200e8:	call   QWORD PTR [rax+0x150]
   1400200ee:	add    rsp,0x28
   1400200f2:	ret    
   1400200f3:	int3   
   1400200f4:	sub    rsp,0x28
   1400200f8:	cmp    QWORD PTR [rcx+0xa0],0x0
   140020100:	jne    0x140020116
   140020102:	mov    rcx,QWORD PTR [rcx+0x40]
   140020106:	call   QWORD PTR [rip+0x23624]        # 0x140043730
   14002010c:	mov    rcx,rax
   14002010f:	call   0x140018e70
   140020114:	jmp    0x140020126
   140020116:	mov    rcx,QWORD PTR [rcx+0xa0]
   14002011d:	mov    rax,QWORD PTR [rcx]
   140020120:	call   QWORD PTR [rax+0x160]
   140020126:	add    rsp,0x28
   14002012a:	ret    
   14002012b:	int3   
   14002012c:	sub    rsp,0x28
   140020130:	cmp    QWORD PTR [rcx+0xa0],0x0
   140020138:	mov    r9,rcx
   14002013b:	jne    0x14002015a
   14002013d:	cmp    QWORD PTR [rdx+0x98],0x0
   140020145:	je     0x14002015a
   140020147:	mov    rcx,QWORD PTR [rdx+0x98]
   14002014e:	mov    rdx,r9
   140020151:	mov    rax,QWORD PTR [rcx]
   140020154:	call   QWORD PTR [rax+0x138]
   14002015a:	add    rsp,0x28
   14002015e:	ret    
   14002015f:	int3   
   140020160:	sub    rsp,0x48
   140020164:	mov    r11,rdx
   140020167:	xor    edx,edx
   140020169:	cmp    QWORD PTR [rcx+0xa0],rdx
   140020170:	jne    0x1400201a2
   140020172:	cmp    r11,rdx
   140020175:	je     0x14002017b
   140020177:	mov    rdx,QWORD PTR [r11+0x40]
   14002017b:	mov    eax,DWORD PTR [rsp+0x80]
   140020182:	mov    rcx,QWORD PTR [rcx+0x40]
   140020186:	mov    DWORD PTR [rsp+0x30],eax
   14002018a:	mov    eax,DWORD PTR [rsp+0x78]
   14002018e:	mov    DWORD PTR [rsp+0x28],eax
   140020192:	mov    eax,DWORD PTR [rsp+0x70]
   140020196:	mov    DWORD PTR [rsp+0x20],eax
   14002019a:	call   QWORD PTR [rip+0x23790]        # 0x140043930
   1400201a0:	jmp    0x1400201d1
   1400201a2:	mov    eax,DWORD PTR [rsp+0x80]
   1400201a9:	mov    rcx,QWORD PTR [rcx+0xa0]
   1400201b0:	mov    rdx,r11
   1400201b3:	mov    r10,QWORD PTR [rcx]
   1400201b6:	mov    DWORD PTR [rsp+0x30],eax
   1400201ba:	mov    eax,DWORD PTR [rsp+0x78]
   1400201be:	mov    DWORD PTR [rsp+0x28],eax
   1400201c2:	mov    eax,DWORD PTR [rsp+0x70]
   1400201c6:	mov    DWORD PTR [rsp+0x20],eax
   1400201ca:	call   QWORD PTR [r10+0x138]
   1400201d1:	add    rsp,0x48
   1400201d5:	ret    
   1400201d6:	int3   
   1400201d7:	int3   
   1400201d8:	test   rcx,rcx
   1400201db:	je     0x14002023c
   1400201dd:	mov    QWORD PTR [rsp+0x8],rbx
   1400201e2:	push   rdi
   1400201e3:	sub    rsp,0x20
   1400201e7:	cmp    QWORD PTR [rcx+0xa0],0x0
   1400201ef:	mov    rdi,rdx
   1400201f2:	mov    rbx,rcx
   1400201f5:	jne    0x140020232
   1400201f7:	mov    rcx,QWORD PTR [rcx+0x40]
   1400201fb:	call   QWORD PTR [rip+0x237cf]        # 0x1400439d0
   140020201:	lea    rcx,[rdi+0x30]
   140020205:	mov    rdx,rax
   140020208:	call   0x14002541c
   14002020d:	test   rax,rax
   140020210:	je     0x140020232
   140020212:	cmp    QWORD PTR [rax+0x98],0x0
   14002021a:	je     0x140020232
   14002021c:	mov    rcx,QWORD PTR [rax+0x98]
   140020223:	xor    r8d,r8d
   140020226:	mov    rdx,rbx
   140020229:	mov    rax,QWORD PTR [rcx]
   14002022c:	call   QWORD PTR [rax+0x138]
   140020232:	mov    rbx,QWORD PTR [rsp+0x30]
   140020237:	add    rsp,0x20
   14002023b:	pop    rdi
   14002023c:	ret    
   14002023d:	int3   
   14002023e:	int3   
   14002023f:	int3   
   140020240:	mov    QWORD PTR [rcx+0x10],rdx
   140020244:	ret    
   140020245:	int3   
   140020246:	int3   
   140020247:	int3   
   140020248:	mov    QWORD PTR [rcx+0x8],rdx
   14002024c:	ret    
   14002024d:	int3   
   14002024e:	int3   
   14002024f:	int3   
   140020250:	and    QWORD PTR [rcx+0x10],0x0
   140020255:	ret    
   140020256:	int3   
   140020257:	int3   
   140020258:	and    QWORD PTR [rcx+0x8],0x0
   14002025d:	ret    
   14002025e:	int3   
   14002025f:	int3   
   140020260:	mov    QWORD PTR [rsp+0x8],rbx
   140020265:	push   rdi
   140020266:	sub    rsp,0x20
   14002026a:	mov    rdi,rcx
   14002026d:	mov    rcx,QWORD PTR [rcx+0x10]
   140020271:	xor    ebx,ebx
   140020273:	test   rcx,rcx
   140020276:	je     0x140020280
   140020278:	call   QWORD PTR [rip+0x22e9a]        # 0x140043118
   14002027e:	mov    ebx,eax
   140020280:	mov    rcx,QWORD PTR [rdi+0x8]
   140020284:	cmp    rcx,QWORD PTR [rdi+0x10]
   140020288:	je     0x140020298
   14002028a:	call   QWORD PTR [rip+0x22e88]        # 0x140043118
   140020290:	or     ecx,0xffffffff
   140020293:	test   eax,eax
   140020295:	cmovne ebx,ecx
   140020298:	mov    eax,ebx
   14002029a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002029f:	add    rsp,0x20
   1400202a3:	pop    rdi
   1400202a4:	ret    
   1400202a5:	int3   
   1400202a6:	int3   
   1400202a7:	int3   
   1400202a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400202ad:	push   rdi
   1400202ae:	sub    rsp,0x20
   1400202b2:	mov    rbx,rcx
   1400202b5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400202b9:	mov    edi,edx
   1400202bb:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400202bf:	mov    eax,0x1
   1400202c4:	je     0x1400202cc
   1400202c6:	call   QWORD PTR [rip+0x22e44]        # 0x140043110
   1400202cc:	mov    rcx,QWORD PTR [rbx+0x10]
   1400202d0:	test   rcx,rcx
   1400202d3:	je     0x1400202ee
   1400202d5:	test   eax,eax
   1400202d7:	je     0x1400202ec
   1400202d9:	mov    edx,edi
   1400202db:	call   QWORD PTR [rip+0x22e2f]        # 0x140043110
   1400202e1:	test   eax,eax
   1400202e3:	je     0x1400202ec
   1400202e5:	mov    eax,0x1
   1400202ea:	jmp    0x1400202ee
   1400202ec:	xor    eax,eax
   1400202ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400202f3:	add    rsp,0x20
   1400202f7:	pop    rdi
   1400202f8:	ret    
   1400202f9:	int3   
   1400202fa:	int3   
   1400202fb:	int3   
   1400202fc:	mov    QWORD PTR [rsp+0x8],rbx
   140020301:	push   rdi
   140020302:	sub    rsp,0x20
   140020306:	mov    rbx,rcx
   140020309:	mov    rcx,QWORD PTR [rcx+0x8]
   14002030d:	or     eax,0xffffffff
   140020310:	cmp    rcx,QWORD PTR [rbx+0x10]
   140020314:	mov    edi,edx
   140020316:	je     0x14002031e
   140020318:	call   QWORD PTR [rip+0x22e02]        # 0x140043120
   14002031e:	mov    rcx,QWORD PTR [rbx+0x10]
   140020322:	test   rcx,rcx
   140020325:	je     0x14002032f
   140020327:	mov    edx,edi
   140020329:	call   QWORD PTR [rip+0x22df1]        # 0x140043120
   14002032f:	mov    rbx,QWORD PTR [rsp+0x30]
   140020334:	add    rsp,0x20
   140020338:	pop    rdi
   140020339:	ret    
   14002033a:	int3   
   14002033b:	int3   
   14002033c:	mov    QWORD PTR [rsp+0x8],rbx
   140020341:	push   rdi
   140020342:	sub    rsp,0x20
   140020346:	mov    rbx,rcx
   140020349:	mov    rcx,QWORD PTR [rcx+0x8]
   14002034d:	xor    eax,eax
   14002034f:	cmp    rcx,QWORD PTR [rbx+0x10]
   140020353:	mov    edi,edx
   140020355:	je     0x14002035d
   140020357:	call   QWORD PTR [rip+0x22dab]        # 0x140043108
   14002035d:	mov    rcx,QWORD PTR [rbx+0x10]
   140020361:	test   rcx,rcx
   140020364:	je     0x14002036e
   140020366:	mov    edx,edi
   140020368:	call   QWORD PTR [rip+0x22d9a]        # 0x140043108
   14002036e:	mov    rbx,QWORD PTR [rsp+0x30]
   140020373:	add    rsp,0x20
   140020377:	pop    rdi
   140020378:	ret    
   140020379:	int3   
   14002037a:	int3   
   14002037b:	int3   
   14002037c:	mov    QWORD PTR [rsp+0x8],rbx
   140020381:	push   rdi
   140020382:	sub    rsp,0x20
   140020386:	mov    rbx,rcx
   140020389:	mov    rcx,QWORD PTR [rcx+0x8]
   14002038d:	or     eax,0xffffffff
   140020390:	cmp    rcx,QWORD PTR [rbx+0x10]
   140020394:	mov    edi,edx
   140020396:	je     0x14002039e
   140020398:	call   QWORD PTR [rip+0x22d8a]        # 0x140043128
   14002039e:	mov    rcx,QWORD PTR [rbx+0x10]
   1400203a2:	test   rcx,rcx
   1400203a5:	je     0x1400203af
   1400203a7:	mov    edx,edi
   1400203a9:	call   QWORD PTR [rip+0x22d79]        # 0x140043128
   1400203af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400203b4:	add    rsp,0x20
   1400203b8:	pop    rdi
   1400203b9:	ret    
   1400203ba:	int3   
   1400203bb:	int3   
   1400203bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400203c1:	push   rdi
   1400203c2:	sub    rsp,0x20
   1400203c6:	mov    rbx,rcx
   1400203c9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400203cd:	xor    eax,eax
   1400203cf:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400203d3:	mov    edi,edx
   1400203d5:	je     0x1400203dd
   1400203d7:	call   QWORD PTR [rip+0x22d23]        # 0x140043100
   1400203dd:	mov    rcx,QWORD PTR [rbx+0x10]
   1400203e1:	test   rcx,rcx
   1400203e4:	je     0x1400203ee
   1400203e6:	mov    edx,edi
   1400203e8:	call   QWORD PTR [rip+0x22d12]        # 0x140043100
   1400203ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400203f3:	add    rsp,0x20
   1400203f7:	pop    rdi
   1400203f8:	ret    
   1400203f9:	int3   
   1400203fa:	int3   
   1400203fb:	int3   
   1400203fc:	mov    rcx,QWORD PTR [rcx+0x8]
   140020400:	rex.W jmp QWORD PTR [rip+0x22d29]        # 0x140043130
   140020407:	int3   
   140020408:	mov    QWORD PTR [rsp+0x8],rbx
   14002040d:	mov    QWORD PTR [rsp+0x10],rsi
   140020412:	push   rdi
   140020413:	sub    rsp,0x20
   140020417:	mov    rdi,rcx
   14002041a:	mov    rcx,QWORD PTR [rcx+0x8]
   14002041e:	or     ebx,0xffffffff
   140020421:	cmp    rcx,QWORD PTR [rdi+0x10]
   140020425:	mov    esi,edx
   140020427:	je     0x14002042f
   140020429:	call   QWORD PTR [rip+0x22cc9]        # 0x1400430f8
   14002042f:	mov    rcx,QWORD PTR [rdi+0x10]
   140020433:	test   rcx,rcx
   140020436:	je     0x140020442
   140020438:	mov    edx,esi
   14002043a:	call   QWORD PTR [rip+0x22cb8]        # 0x1400430f8
   140020440:	mov    ebx,eax
   140020442:	mov    rsi,QWORD PTR [rsp+0x38]
   140020447:	mov    eax,ebx
   140020449:	mov    rbx,QWORD PTR [rsp+0x30]
   14002044e:	add    rsp,0x20
   140020452:	pop    rdi
   140020453:	ret    
   140020454:	mov    QWORD PTR [rsp+0x8],rbx
   140020459:	mov    QWORD PTR [rsp+0x10],rsi
   14002045e:	push   rdi
   14002045f:	sub    rsp,0x20
   140020463:	mov    rsi,rcx
   140020466:	lea    rcx,[rip+0x262d3]        # 0x140046740
   14002046d:	mov    edi,edx
   14002046f:	call   QWORD PTR [rip+0x22fcb]        # 0x140043440
   140020475:	lea    rdx,[rip+0x262d4]        # 0x140046750
   14002047c:	xor    ebx,ebx
   14002047e:	mov    rcx,rax
   140020481:	call   QWORD PTR [rip+0x23029]        # 0x1400434b0
   140020487:	cmp    rax,rbx
   14002048a:	je     0x140020498
   14002048c:	mov    rcx,QWORD PTR [rsi+0x8]
   140020490:	mov    edx,edi
   140020492:	call   rax
   140020494:	mov    ebx,eax
   140020496:	jmp    0x1400204aa
   140020498:	cmp    edi,ebx
   14002049a:	je     0x1400204aa
   14002049c:	mov    ecx,0x78
   1400204a1:	or     ebx,0xffffffff
   1400204a4:	call   QWORD PTR [rip+0x22fee]        # 0x140043498
   1400204aa:	mov    rsi,QWORD PTR [rsp+0x38]
   1400204af:	mov    eax,ebx
   1400204b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400204b6:	add    rsp,0x20
   1400204ba:	pop    rdi
   1400204bb:	ret    
   1400204bc:	lea    rax,[rip+0x260fd]        # 0x1400465c0
   1400204c3:	ret    
   1400204c4:	lea    rax,[rip+0x26125]        # 0x1400465f0
   1400204cb:	ret    
   1400204cc:	lea    rax,[rip+0x2614d]        # 0x140046620
   1400204d3:	ret    
   1400204d4:	lea    rax,[rip+0x26175]        # 0x140046650
   1400204db:	ret    
   1400204dc:	lea    rax,[rip+0x2619d]        # 0x140046680
   1400204e3:	ret    
   1400204e4:	lea    rax,[rip+0x261c5]        # 0x1400466b0
   1400204eb:	ret    
   1400204ec:	lea    rax,[rip+0x261ed]        # 0x1400466e0
   1400204f3:	ret    
   1400204f4:	lea    rax,[rip+0x26215]        # 0x140046710
   1400204fb:	ret    
   1400204fc:	sub    rsp,0x28
   140020500:	lea    rax,[rip+0x40129]        # 0x140060630
   140020507:	lea    rdx,[rip+0x36622]        # 0x140056b30
   14002050e:	lea    rcx,[rsp+0x30]
   140020513:	mov    QWORD PTR [rsp+0x30],rax
   140020518:	call   0x14002bb20
   14002051d:	int3   
   14002051e:	int3   
   14002051f:	int3   
   140020520:	sub    rsp,0x28
   140020524:	lea    rax,[rip+0x40225]        # 0x140060750
   14002052b:	lea    rdx,[rip+0x36716]        # 0x140056c48
   140020532:	lea    rcx,[rsp+0x30]
   140020537:	mov    QWORD PTR [rsp+0x30],rax
   14002053c:	call   0x14002bb20
   140020541:	int3   
   140020542:	int3   
   140020543:	int3   
   140020544:	lea    rax,[rip+0x262ad]        # 0x1400467f8
   14002054b:	mov    QWORD PTR [rcx],rax
   14002054e:	xor    eax,eax
   140020550:	mov    QWORD PTR [rcx+0x8],rax
   140020554:	mov    QWORD PTR [rcx+0x10],rax
   140020558:	mov    DWORD PTR [rcx+0x18],eax
   14002055b:	mov    rax,rcx
   14002055e:	ret    
   14002055f:	int3   
   140020560:	mov    rcx,QWORD PTR [rcx+0x8]
   140020564:	rex.W jmp QWORD PTR [rip+0x22b4d]        # 0x1400430b8
   14002056b:	int3   
   14002056c:	mov    rcx,QWORD PTR [rcx+0x8]
   140020570:	rex.W jmp QWORD PTR [rip+0x22b39]        # 0x1400430b0
   140020577:	int3   
   140020578:	sub    rsp,0x38
   14002057c:	mov    eax,DWORD PTR [rsp+0x60]
   140020580:	mov    rcx,QWORD PTR [rcx+0x8]
   140020584:	mov    DWORD PTR [rsp+0x20],eax
   140020588:	call   QWORD PTR [rip+0x22b1a]        # 0x1400430a8
   14002058e:	add    rsp,0x38
   140020592:	ret    
   140020593:	int3   
   140020594:	sub    rsp,0x48
   140020598:	mov    rax,QWORD PTR [rsp+0x88]
   1400205a0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400205a4:	mov    QWORD PTR [rsp+0x38],rax
   1400205a9:	mov    eax,DWORD PTR [rsp+0x80]
   1400205b0:	mov    DWORD PTR [rsp+0x30],eax
   1400205b4:	mov    rax,QWORD PTR [rsp+0x78]
   1400205b9:	mov    QWORD PTR [rsp+0x28],rax
   1400205be:	mov    rax,QWORD PTR [rsp+0x70]
   1400205c3:	mov    QWORD PTR [rsp+0x20],rax
   1400205c8:	call   QWORD PTR [rip+0x22ad2]        # 0x1400430a0
   1400205ce:	add    rsp,0x48
   1400205d2:	ret    
   1400205d3:	int3   
   1400205d4:	rex push rbx
   1400205d6:	sub    rsp,0x40
   1400205da:	mov    eax,DWORD PTR [rsp+0x90]
   1400205e1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400205e5:	mov    r10d,r9d
   1400205e8:	mov    r9,QWORD PTR [rsp+0x70]
   1400205ed:	mov    DWORD PTR [rsp+0x38],eax
   1400205f1:	mov    rax,QWORD PTR [rsp+0x88]
   1400205f9:	mov    QWORD PTR [rsp+0x30],rax
   1400205fe:	mov    eax,DWORD PTR [rsp+0x80]
   140020605:	mov    r11d,r8d
   140020608:	mov    DWORD PTR [rsp+0x28],eax
   14002060c:	mov    eax,DWORD PTR [rsp+0x78]
   140020610:	mov    rbx,rdx
   140020613:	mov    r8d,r10d
   140020616:	mov    edx,r11d
   140020619:	mov    DWORD PTR [rsp+0x20],eax
   14002061d:	call   QWORD PTR [rip+0x2304d]        # 0x140043670
   140020623:	movsx  ecx,ax
   140020626:	shr    eax,0x10
   140020629:	cwde   
   14002062a:	mov    DWORD PTR [rbx],ecx
   14002062c:	mov    DWORD PTR [rbx+0x4],eax
   14002062f:	mov    rax,rbx
   140020632:	add    rsp,0x40
   140020636:	pop    rbx
   140020637:	ret    
   140020638:	sub    rsp,0x38
   14002063c:	mov    eax,DWORD PTR [rsp+0x60]
   140020640:	mov    rcx,QWORD PTR [rcx+0x8]
   140020644:	mov    DWORD PTR [rsp+0x20],eax
   140020648:	call   QWORD PTR [rip+0x2301a]        # 0x140043668
   14002064e:	add    rsp,0x38
   140020652:	ret    
   140020653:	int3   
   140020654:	sub    rsp,0x38
   140020658:	mov    rax,QWORD PTR [rsp+0x68]
   14002065d:	mov    rcx,QWORD PTR [rcx+0x8]
   140020661:	mov    QWORD PTR [rsp+0x28],rax
   140020666:	mov    eax,DWORD PTR [rsp+0x60]
   14002066a:	mov    DWORD PTR [rsp+0x20],eax
   14002066e:	call   QWORD PTR [rip+0x22fec]        # 0x140043660
   140020674:	add    rsp,0x38
   140020678:	ret    
   140020679:	int3   
   14002067a:	int3   
   14002067b:	int3   
   14002067c:	sub    rsp,0x58
   140020680:	mov    rax,rdx
   140020683:	xor    edx,edx
   140020685:	cmp    rax,rdx
   140020688:	je     0x14002068e
   14002068a:	mov    rdx,QWORD PTR [rax+0x8]
   14002068e:	mov    eax,DWORD PTR [rsp+0xa0]
   140020695:	mov    rcx,QWORD PTR [rcx+0x8]
   140020699:	mov    DWORD PTR [rsp+0x40],eax
   14002069d:	mov    eax,DWORD PTR [rsp+0x98]
   1400206a4:	mov    DWORD PTR [rsp+0x38],eax
   1400206a8:	mov    eax,DWORD PTR [rsp+0x90]
   1400206af:	mov    DWORD PTR [rsp+0x30],eax
   1400206b3:	mov    eax,DWORD PTR [rsp+0x88]
   1400206ba:	mov    DWORD PTR [rsp+0x28],eax
   1400206be:	mov    eax,DWORD PTR [rsp+0x80]
   1400206c5:	mov    DWORD PTR [rsp+0x20],eax
   1400206c9:	call   QWORD PTR [rip+0x22f89]        # 0x140043658
   1400206cf:	add    rsp,0x58
   1400206d3:	ret    
   1400206d4:	sub    rsp,0x38
   1400206d8:	mov    rax,QWORD PTR [rsp+0x60]
   1400206dd:	mov    rcx,QWORD PTR [rcx+0x8]
   1400206e1:	mov    QWORD PTR [rsp+0x20],rax
   1400206e6:	call   QWORD PTR [rip+0x229ac]        # 0x140043098
   1400206ec:	add    rsp,0x38
   1400206f0:	ret    
   1400206f1:	int3   
   1400206f2:	int3   
   1400206f3:	int3   
   1400206f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400206f9:	mov    QWORD PTR [rsp+0x10],rbp
   1400206fe:	mov    QWORD PTR [rsp+0x18],rsi
   140020703:	push   rdi
   140020704:	sub    rsp,0x20
   140020708:	mov    rdi,rcx
   14002070b:	mov    rcx,QWORD PTR [rcx+0x8]
   14002070f:	mov    esi,r9d
   140020712:	cmp    rcx,QWORD PTR [rdi+0x10]
   140020716:	mov    ebp,r8d
   140020719:	mov    rbx,rdx
   14002071c:	je     0x14002072c
   14002071e:	mov    r9,rdx
   140020721:	mov    r8d,esi
   140020724:	mov    edx,ebp
   140020726:	call   QWORD PTR [rip+0x22964]        # 0x140043090
   14002072c:	mov    rcx,QWORD PTR [rdi+0x10]
   140020730:	test   rcx,rcx
   140020733:	je     0x140020743
   140020735:	mov    r9,rbx
   140020738:	mov    r8d,esi
   14002073b:	mov    edx,ebp
   14002073d:	call   QWORD PTR [rip+0x2294d]        # 0x140043090
   140020743:	mov    rbp,QWORD PTR [rsp+0x38]
   140020748:	mov    rsi,QWORD PTR [rsp+0x40]
   14002074d:	mov    rax,rbx
   140020750:	mov    rbx,QWORD PTR [rsp+0x30]
   140020755:	add    rsp,0x20
   140020759:	pop    rdi
   14002075a:	ret    
   14002075b:	int3   
   14002075c:	mov    QWORD PTR [rsp+0x8],rbx
   140020761:	mov    QWORD PTR [rsp+0x10],rbp
   140020766:	mov    QWORD PTR [rsp+0x18],rsi
   14002076b:	push   rdi
   14002076c:	sub    rsp,0x20
   140020770:	mov    rdi,rcx
   140020773:	mov    rcx,QWORD PTR [rcx+0x8]
   140020777:	mov    esi,r9d
   14002077a:	cmp    rcx,QWORD PTR [rdi+0x10]
   14002077e:	mov    ebp,r8d
   140020781:	mov    rbx,rdx
   140020784:	je     0x140020794
   140020786:	mov    r9,rdx
   140020789:	mov    r8d,esi
   14002078c:	mov    edx,ebp
   14002078e:	call   QWORD PTR [rip+0x228f4]        # 0x140043088
   140020794:	mov    rcx,QWORD PTR [rdi+0x10]
   140020798:	test   rcx,rcx
   14002079b:	je     0x1400207ab
   14002079d:	mov    r9,rbx
   1400207a0:	mov    r8d,esi
   1400207a3:	mov    edx,ebp
   1400207a5:	call   QWORD PTR [rip+0x228dd]        # 0x140043088
   1400207ab:	mov    rbp,QWORD PTR [rsp+0x38]
   1400207b0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400207b5:	mov    rax,rbx
   1400207b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400207bd:	add    rsp,0x20
   1400207c1:	pop    rdi
   1400207c2:	ret    
   1400207c3:	int3   
   1400207c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400207c9:	mov    QWORD PTR [rsp+0x10],rbp
   1400207ce:	mov    QWORD PTR [rsp+0x18],rsi
   1400207d3:	push   rdi
   1400207d4:	sub    rsp,0x20
   1400207d8:	mov    rdi,rcx
   1400207db:	mov    rcx,QWORD PTR [rcx+0x8]
   1400207df:	mov    esi,r9d
   1400207e2:	cmp    rcx,QWORD PTR [rdi+0x10]
   1400207e6:	mov    ebp,r8d
   1400207e9:	mov    rbx,rdx
   1400207ec:	je     0x1400207fc
   1400207ee:	mov    r9,rdx
   1400207f1:	mov    r8d,esi
   1400207f4:	mov    edx,ebp
   1400207f6:	call   QWORD PTR [rip+0x2287c]        # 0x140043078
   1400207fc:	mov    rcx,QWORD PTR [rdi+0x10]
   140020800:	test   rcx,rcx
   140020803:	je     0x140020813
   140020805:	mov    r9,rbx
   140020808:	mov    r8d,esi
   14002080b:	mov    edx,ebp
   14002080d:	call   QWORD PTR [rip+0x22865]        # 0x140043078
   140020813:	mov    rbp,QWORD PTR [rsp+0x38]
   140020818:	mov    rsi,QWORD PTR [rsp+0x40]
   14002081d:	mov    rax,rbx
   140020820:	mov    rbx,QWORD PTR [rsp+0x30]
   140020825:	add    rsp,0x20
   140020829:	pop    rdi
   14002082a:	ret    
   14002082b:	int3   
   14002082c:	mov    rax,rsp
   14002082f:	mov    QWORD PTR [rax+0x8],rbx
   140020833:	mov    QWORD PTR [rax+0x10],rbp
   140020837:	mov    QWORD PTR [rax+0x18],rsi
   14002083b:	mov    QWORD PTR [rax+0x20],rdi
   14002083f:	push   r12
   140020841:	sub    rsp,0x30
   140020845:	mov    r12d,DWORD PTR [rsp+0x68]
   14002084a:	mov    rdi,rcx
   14002084d:	mov    rcx,QWORD PTR [rcx+0x8]
   140020851:	cmp    rcx,QWORD PTR [rdi+0x10]
   140020855:	mov    esi,r9d
   140020858:	mov    ebp,r8d
   14002085b:	mov    rbx,rdx
   14002085e:	je     0x140020878
   140020860:	mov    r9d,DWORD PTR [rsp+0x60]
   140020865:	mov    QWORD PTR [rax-0x10],rdx
   140020869:	mov    r8d,esi
   14002086c:	mov    edx,ebp
   14002086e:	mov    DWORD PTR [rax-0x18],r12d
   140020872:	call   QWORD PTR [rip+0x22808]        # 0x140043080
   140020878:	mov    rcx,QWORD PTR [rdi+0x10]
   14002087c:	test   rcx,rcx
   14002087f:	je     0x14002089b
   140020881:	mov    r9d,DWORD PTR [rsp+0x60]
   140020886:	mov    r8d,esi
   140020889:	mov    edx,ebp
   14002088b:	mov    QWORD PTR [rsp+0x28],rbx
   140020890:	mov    DWORD PTR [rsp+0x20],r12d
   140020895:	call   QWORD PTR [rip+0x227e5]        # 0x140043080
   14002089b:	mov    rbp,QWORD PTR [rsp+0x48]
   1400208a0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400208a5:	mov    rdi,QWORD PTR [rsp+0x58]
   1400208aa:	mov    rax,rbx
   1400208ad:	mov    rbx,QWORD PTR [rsp+0x40]
   1400208b2:	add    rsp,0x30
   1400208b6:	pop    r12
   1400208b8:	ret    
   1400208b9:	int3   
   1400208ba:	int3   
   1400208bb:	int3   
   1400208bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400208c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400208c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400208cb:	push   rdi
   1400208cc:	sub    rsp,0x20
   1400208d0:	mov    rdi,rcx
   1400208d3:	mov    rcx,QWORD PTR [rcx+0x8]
   1400208d7:	mov    esi,r9d
   1400208da:	cmp    rcx,QWORD PTR [rdi+0x10]
   1400208de:	mov    ebp,r8d
   1400208e1:	mov    rbx,rdx
   1400208e4:	je     0x1400208f4
   1400208e6:	mov    r9,rdx
   1400208e9:	mov    r8d,esi
   1400208ec:	mov    edx,ebp
   1400208ee:	call   QWORD PTR [rip+0x2276c]        # 0x140043060
   1400208f4:	mov    rcx,QWORD PTR [rdi+0x10]
   1400208f8:	test   rcx,rcx
   1400208fb:	je     0x14002090b
   1400208fd:	mov    r9,rbx
   140020900:	mov    r8d,esi
   140020903:	mov    edx,ebp
   140020905:	call   QWORD PTR [rip+0x22755]        # 0x140043060
   14002090b:	mov    rbp,QWORD PTR [rsp+0x38]
   140020910:	mov    rsi,QWORD PTR [rsp+0x40]
   140020915:	mov    rax,rbx
   140020918:	mov    rbx,QWORD PTR [rsp+0x30]
   14002091d:	add    rsp,0x20
   140020921:	pop    rdi
   140020922:	ret    
   140020923:	int3   
   140020924:	mov    rax,rsp
   140020927:	mov    QWORD PTR [rax+0x8],rbx
   14002092b:	mov    QWORD PTR [rax+0x10],rbp
   14002092f:	mov    QWORD PTR [rax+0x18],rsi
   140020933:	mov    QWORD PTR [rax+0x20],rdi
   140020937:	push   r12
   140020939:	sub    rsp,0x30
   14002093d:	mov    r12d,DWORD PTR [rsp+0x68]
   140020942:	mov    rdi,rcx
   140020945:	mov    rcx,QWORD PTR [rcx+0x8]
   140020949:	cmp    rcx,QWORD PTR [rdi+0x10]
   14002094d:	mov    esi,r9d
   140020950:	mov    ebp,r8d
   140020953:	mov    rbx,rdx
   140020956:	je     0x140020970
   140020958:	mov    r9d,DWORD PTR [rsp+0x60]
   14002095d:	mov    QWORD PTR [rax-0x10],rdx
   140020961:	mov    r8d,esi
   140020964:	mov    edx,ebp
   140020966:	mov    DWORD PTR [rax-0x18],r12d
   14002096a:	call   QWORD PTR [rip+0x226f8]        # 0x140043068
   140020970:	mov    rcx,QWORD PTR [rdi+0x10]
   140020974:	test   rcx,rcx
   140020977:	je     0x140020993
   140020979:	mov    r9d,DWORD PTR [rsp+0x60]
   14002097e:	mov    r8d,esi
   140020981:	mov    edx,ebp
   140020983:	mov    QWORD PTR [rsp+0x28],rbx
   140020988:	mov    DWORD PTR [rsp+0x20],r12d
   14002098d:	call   QWORD PTR [rip+0x226d5]        # 0x140043068
   140020993:	mov    rbp,QWORD PTR [rsp+0x48]
   140020998:	mov    rsi,QWORD PTR [rsp+0x50]
   14002099d:	mov    rdi,QWORD PTR [rsp+0x58]
   1400209a2:	mov    rax,rbx
   1400209a5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400209aa:	add    rsp,0x30
   1400209ae:	pop    r12
   1400209b0:	ret    
   1400209b1:	int3   
   1400209b2:	int3   
   1400209b3:	int3   
   1400209b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400209b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400209be:	push   rdi
   1400209bf:	sub    rsp,0x20
   1400209c3:	mov    rbx,rcx
   1400209c6:	mov    rcx,QWORD PTR [rcx+0x40]
   1400209ca:	mov    rdi,rdx
   1400209cd:	call   QWORD PTR [rip+0x22e1d]        # 0x1400437f0
   1400209d3:	mov    rcx,QWORD PTR [rbx+0x40]
   1400209d7:	lea    rdx,[rdi+0x8]
   1400209db:	call   QWORD PTR [rip+0x22e0f]        # 0x1400437f0
   1400209e1:	mov    rcx,rbx
   1400209e4:	call   0x14001ff18
   1400209e9:	bt     eax,0x16
   1400209ed:	jae    0x1400209f9
   1400209ef:	mov    ecx,DWORD PTR [rdi]
   1400209f1:	mov    eax,DWORD PTR [rdi+0x8]
   1400209f4:	mov    DWORD PTR [rdi],eax
   1400209f6:	mov    DWORD PTR [rdi+0x8],ecx
   1400209f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400209fe:	mov    rsi,QWORD PTR [rsp+0x38]
   140020a03:	add    rsp,0x20
   140020a07:	pop    rdi
   140020a08:	ret    
   140020a09:	int3   
   140020a0a:	int3   
   140020a0b:	int3   
   140020a0c:	mov    QWORD PTR [rsp+0x8],rbx
   140020a11:	mov    QWORD PTR [rsp+0x10],rsi
   140020a16:	push   rdi
   140020a17:	sub    rsp,0x20
   140020a1b:	mov    rbx,rcx
   140020a1e:	mov    rcx,QWORD PTR [rcx+0x40]
   140020a22:	mov    rdi,rdx
   140020a25:	call   QWORD PTR [rip+0x22c25]        # 0x140043650
   140020a2b:	mov    rcx,QWORD PTR [rbx+0x40]
   140020a2f:	lea    rdx,[rdi+0x8]
   140020a33:	call   QWORD PTR [rip+0x22c17]        # 0x140043650
   140020a39:	mov    rcx,rbx
   140020a3c:	call   0x14001ff18
   140020a41:	bt     eax,0x16
   140020a45:	jae    0x140020a51
   140020a47:	mov    ecx,DWORD PTR [rdi]
   140020a49:	mov    eax,DWORD PTR [rdi+0x8]
   140020a4c:	mov    DWORD PTR [rdi],eax
   140020a4e:	mov    DWORD PTR [rdi+0x8],ecx
   140020a51:	mov    rbx,QWORD PTR [rsp+0x30]
   140020a56:	mov    rsi,QWORD PTR [rsp+0x38]
   140020a5b:	add    rsp,0x20
   140020a5f:	pop    rdi
   140020a60:	ret    
   140020a61:	int3   
   140020a62:	int3   
   140020a63:	int3   
   140020a64:	sub    rsp,0x28
   140020a68:	mov    ecx,0x20
   140020a6d:	call   0x1400148c0
   140020a72:	xor    edx,edx
   140020a74:	cmp    rax,rdx
   140020a77:	je     0x140020a90
   140020a79:	lea    rcx,[rip+0x25d78]        # 0x1400467f8
   140020a80:	mov    QWORD PTR [rax+0x8],rdx
   140020a84:	mov    QWORD PTR [rax+0x10],rdx
   140020a88:	mov    QWORD PTR [rax],rcx
   140020a8b:	mov    DWORD PTR [rax+0x18],edx
   140020a8e:	jmp    0x140020a93
   140020a90:	mov    rax,rdx
   140020a93:	add    rsp,0x28
   140020a97:	ret    
   140020a98:	sub    rsp,0x28
   140020a9c:	mov    ecx,0x10
   140020aa1:	call   0x1400148c0
   140020aa6:	test   rax,rax
   140020aa9:	je     0x140020abc
   140020aab:	and    QWORD PTR [rax+0x8],0x0
   140020ab0:	lea    rcx,[rip+0x25d21]        # 0x1400467d8
   140020ab7:	mov    QWORD PTR [rax],rcx
   140020aba:	jmp    0x140020abe
   140020abc:	xor    eax,eax
   140020abe:	add    rsp,0x28
   140020ac2:	ret    
   140020ac3:	int3   
   140020ac4:	xor    edx,edx
   140020ac6:	cmp    rcx,rdx
   140020ac9:	je     0x140020ae0
   140020acb:	lea    rax,[rip+0x25d26]        # 0x1400467f8
   140020ad2:	mov    QWORD PTR [rcx+0x8],rdx
   140020ad6:	mov    QWORD PTR [rcx+0x10],rdx
   140020ada:	mov    QWORD PTR [rcx],rax
   140020add:	mov    DWORD PTR [rcx+0x18],edx
   140020ae0:	ret    
   140020ae1:	int3   
   140020ae2:	int3   
   140020ae3:	int3   
   140020ae4:	test   rcx,rcx
   140020ae7:	je     0x140020af8
   140020ae9:	and    QWORD PTR [rcx+0x8],0x0
   140020aee:	lea    rax,[rip+0x25ce3]        # 0x1400467d8
   140020af5:	mov    QWORD PTR [rcx],rax
   140020af8:	ret    
   140020af9:	int3   
   140020afa:	int3   
   140020afb:	int3   
   140020afc:	rex push rbx
   140020afe:	sub    rsp,0x20
   140020b02:	test   dl,0x1
   140020b05:	lea    rax,[rip+0x25c5c]        # 0x140046768
   140020b0c:	mov    rbx,rcx
   140020b0f:	mov    QWORD PTR [rcx],rax
   140020b12:	je     0x140020b19
   140020b14:	call   0x14001490c
   140020b19:	mov    rax,rbx
   140020b1c:	add    rsp,0x20
   140020b20:	pop    rbx
   140020b21:	ret    
   140020b22:	int3   
   140020b23:	int3   
   140020b24:	rex push rbx
   140020b26:	sub    rsp,0x20
   140020b2a:	test   dl,0x1
   140020b2d:	lea    rax,[rip+0x25c6c]        # 0x1400467a0
   140020b34:	mov    rbx,rcx
   140020b37:	mov    QWORD PTR [rcx],rax
   140020b3a:	je     0x140020b41
   140020b3c:	call   0x14001490c
   140020b41:	mov    rax,rbx
   140020b44:	add    rsp,0x20
   140020b48:	pop    rbx
   140020b49:	ret    
   140020b4a:	int3   
   140020b4b:	int3   
   140020b4c:	rex push rdi
   140020b4e:	sub    rsp,0x40
   140020b52:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140020b5b:	mov    QWORD PTR [rsp+0x50],rbx
   140020b60:	mov    QWORD PTR [rsp+0x60],rsi
   140020b65:	mov    esi,ecx
   140020b67:	call   0x14001f338
   140020b6c:	mov    rdi,rax
   140020b6f:	xor    ebx,ebx
   140020b71:	cmp    QWORD PTR [rax+0x38],rbx
   140020b75:	jne    0x140020bdb
   140020b77:	cmp    esi,ebx
   140020b79:	je     0x140020bdb
   140020b7b:	lea    rcx,[rip+0x398e]        # 0x140024510
   140020b82:	call   0x1400148b0
   140020b87:	mov    rsi,rax
   140020b8a:	mov    ecx,0xb8
   140020b8f:	call   0x1400148c0
   140020b94:	mov    QWORD PTR [rsp+0x58],rax
   140020b99:	cmp    rax,rbx
   140020b9c:	je     0x140020bcf
   140020b9e:	mov    DWORD PTR [rsp+0x28],0x2
   140020ba6:	mov    QWORD PTR [rsp+0x20],0x8
   140020baf:	lea    r9,[rip+0xffffffffffff5b66]        # 0x14001671c
   140020bb6:	lea    r8,[rip+0xffffffffffffff07]        # 0x140020ac4
   140020bbd:	lea    rdx,[rip+0x25a5c]        # 0x140046620
   140020bc4:	mov    rcx,rax
   140020bc7:	call   0x1400259e0
   140020bcc:	mov    rbx,rax
   140020bcf:	mov    QWORD PTR [rdi+0x38],rbx
   140020bd3:	mov    rcx,rsi
   140020bd6:	call   0x1400148b0
   140020bdb:	mov    rax,QWORD PTR [rdi+0x38]
   140020bdf:	mov    rbx,QWORD PTR [rsp+0x50]
   140020be4:	mov    rsi,QWORD PTR [rsp+0x60]
   140020be9:	add    rsp,0x40
   140020bed:	pop    rdi
   140020bee:	ret    
   140020bef:	int3   
   140020bf0:	int3   
   140020bf1:	int3   
   140020bf2:	int3   
   140020bf3:	int3   
   140020bf4:	int3   
   140020bf5:	int3   
   140020bf6:	int3   
   140020bf7:	int3   
   140020bf8:	int3   
   140020bf9:	int3   
   140020bfa:	int3   
   140020bfb:	int3   
   140020bfc:	rex push rbp
   140020bfe:	sub    rsp,0x20
   140020c02:	mov    rbp,rdx
   140020c05:	mov    rcx,QWORD PTR [rbp+0x58]
   140020c09:	call   0x14001490c
   140020c0e:	add    rsp,0x20
   140020c12:	pop    rbp
   140020c13:	ret    
   140020c14:	rex push rbx
   140020c16:	sub    rsp,0x20
   140020c1a:	mov    rbx,rcx
   140020c1d:	mov    ecx,0x1
   140020c22:	call   0x140020b4c
   140020c27:	mov    rdx,rbx
   140020c2a:	mov    rcx,rax
   140020c2d:	add    rsp,0x20
   140020c31:	pop    rbx
   140020c32:	jmp    0x140025b1c
   140020c37:	int3   
   140020c38:	rex push rbx
   140020c3a:	sub    rsp,0x20
   140020c3e:	test   rdx,rdx
   140020c41:	mov    rbx,rcx
   140020c44:	jne    0x140020c4a
   140020c46:	xor    eax,eax
   140020c48:	jmp    0x140020c7b
   140020c4a:	mov    QWORD PTR [rcx+0x8],rdx
   140020c4e:	mov    ecx,0x1
   140020c53:	call   0x140020b4c
   140020c58:	mov    rdx,QWORD PTR [rbx+0x8]
   140020c5c:	lea    rcx,[rax+0x30]
   140020c60:	call   0x14002566c
   140020c65:	mov    rcx,rbx
   140020c68:	mov    QWORD PTR [rax],rbx
   140020c6b:	mov    r8,QWORD PTR [rbx]
   140020c6e:	mov    rdx,QWORD PTR [rbx+0x8]
   140020c72:	call   QWORD PTR [r8+0x18]
   140020c76:	mov    eax,0x1
   140020c7b:	add    rsp,0x20
   140020c7f:	pop    rbx
   140020c80:	ret    
   140020c81:	int3   
   140020c82:	int3   
   140020c83:	int3   
   140020c84:	mov    QWORD PTR [rsp+0x8],rbx
   140020c89:	push   rdi
   140020c8a:	sub    rsp,0x20
   140020c8e:	mov    rdi,QWORD PTR [rcx+0x8]
   140020c92:	mov    rbx,rcx
   140020c95:	test   rdi,rdi
   140020c98:	je     0x140020cb5
   140020c9a:	call   0x14001f338
   140020c9f:	mov    rcx,QWORD PTR [rax+0x38]
   140020ca3:	test   rcx,rcx
   140020ca6:	je     0x140020cb5
   140020ca8:	mov    rdx,QWORD PTR [rbx+0x8]
   140020cac:	add    rcx,0x30
   140020cb0:	call   0x140025490
   140020cb5:	mov    rdx,QWORD PTR [rbx]
   140020cb8:	mov    rcx,rbx
   140020cbb:	call   QWORD PTR [rdx+0x28]
   140020cbe:	and    QWORD PTR [rbx+0x8],0x0
   140020cc3:	mov    rbx,QWORD PTR [rsp+0x30]
   140020cc8:	mov    rax,rdi
   140020ccb:	add    rsp,0x20
   140020ccf:	pop    rdi
   140020cd0:	ret    
   140020cd1:	int3   
   140020cd2:	int3   
   140020cd3:	int3   
   140020cd4:	sub    rsp,0x28
   140020cd8:	cmp    QWORD PTR [rcx+0x8],0x0
   140020cdd:	lea    rax,[rip+0x25b14]        # 0x1400467f8
   140020ce4:	mov    QWORD PTR [rcx],rax
   140020ce7:	je     0x140020cf7
   140020ce9:	call   0x140020c84
   140020cee:	mov    rcx,rax
   140020cf1:	call   QWORD PTR [rip+0x223f9]        # 0x1400430f0
   140020cf7:	add    rsp,0x28
   140020cfb:	ret    
   140020cfc:	mov    QWORD PTR [rsp+0x8],rcx
   140020d01:	push   rbx
   140020d02:	sub    rsp,0x30
   140020d06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020d0f:	mov    rbx,rcx
   140020d12:	and    QWORD PTR [rcx+0x8],0x0
   140020d17:	and    QWORD PTR [rcx+0x10],0x0
   140020d1c:	and    DWORD PTR [rcx+0x18],0x0
   140020d20:	lea    rax,[rip+0x25c21]        # 0x140046948
   140020d27:	mov    QWORD PTR [rcx],rax
   140020d2a:	test   rdx,rdx
   140020d2d:	jne    0x140020d33
   140020d2f:	xor    ecx,ecx
   140020d31:	jmp    0x140020d37
   140020d33:	mov    rcx,QWORD PTR [rdx+0x40]
   140020d37:	mov    QWORD PTR [rbx+0x20],rcx
   140020d3b:	call   QWORD PTR [rip+0x22c6f]        # 0x1400439b0
   140020d41:	mov    rdx,rax
   140020d44:	mov    rcx,rbx
   140020d47:	call   0x140020c38
   140020d4c:	test   eax,eax
   140020d4e:	jne    0x140020d56
   140020d50:	call   0x1400204fc
   140020d55:	nop
   140020d56:	mov    rax,rbx
   140020d59:	add    rsp,0x30
   140020d5d:	pop    rbx
   140020d5e:	ret    
   140020d5f:	int3   
   140020d60:	int3   
   140020d61:	int3   
   140020d62:	int3   
   140020d63:	int3   
   140020d64:	int3   
   140020d65:	int3   
   140020d66:	int3   
   140020d67:	int3   
   140020d68:	int3   
   140020d69:	int3   
   140020d6a:	int3   
   140020d6b:	int3   
   140020d6c:	rex push rbp
   140020d6e:	sub    rsp,0x20
   140020d72:	mov    rbp,rdx
   140020d75:	mov    rcx,QWORD PTR [rbp+0x40]
   140020d79:	call   0x140020cd4
   140020d7e:	add    rsp,0x20
   140020d82:	pop    rbp
   140020d83:	ret    
   140020d84:	mov    QWORD PTR [rsp+0x8],rcx
   140020d89:	push   rbx
   140020d8a:	sub    rsp,0x30
   140020d8e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020d97:	mov    rbx,rcx
   140020d9a:	lea    rax,[rip+0x25ba7]        # 0x140046948
   140020da1:	mov    QWORD PTR [rcx],rax
   140020da4:	call   0x140020c84
   140020da9:	mov    rdx,rax
   140020dac:	mov    rcx,QWORD PTR [rbx+0x20]
   140020db0:	call   QWORD PTR [rip+0x22892]        # 0x140043648
   140020db6:	nop
   140020db7:	mov    rcx,rbx
   140020dba:	add    rsp,0x30
   140020dbe:	pop    rbx
   140020dbf:	jmp    0x140020cd4
   140020dc4:	rex push rbp
   140020dc6:	sub    rsp,0x20
   140020dca:	mov    rbp,rdx
   140020dcd:	mov    rcx,QWORD PTR [rbp+0x40]
   140020dd1:	call   0x140020cd4
   140020dd6:	add    rsp,0x20
   140020dda:	pop    rbp
   140020ddb:	ret    
   140020ddc:	mov    QWORD PTR [rsp+0x8],rcx
   140020de1:	push   rbx
   140020de2:	sub    rsp,0x30
   140020de6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020def:	mov    rbx,rcx
   140020df2:	and    QWORD PTR [rcx+0x8],0x0
   140020df7:	and    QWORD PTR [rcx+0x10],0x0
   140020dfc:	and    DWORD PTR [rcx+0x18],0x0
   140020e00:	lea    rax,[rip+0x25c91]        # 0x140046a98
   140020e07:	mov    QWORD PTR [rcx],rax
   140020e0a:	mov    rcx,QWORD PTR [rdx+0x40]
   140020e0e:	mov    QWORD PTR [rbx+0x20],rcx
   140020e12:	lea    rdx,[rbx+0x28]
   140020e16:	call   QWORD PTR [rip+0x22824]        # 0x140043640
   140020e1c:	mov    rdx,rax
   140020e1f:	mov    rcx,rbx
   140020e22:	call   0x140020c38
   140020e27:	test   eax,eax
   140020e29:	jne    0x140020e31
   140020e2b:	call   0x1400204fc
   140020e30:	nop
   140020e31:	mov    rax,rbx
   140020e34:	add    rsp,0x30
   140020e38:	pop    rbx
   140020e39:	ret    
   140020e3a:	int3   
   140020e3b:	int3   
   140020e3c:	rex push rbp
   140020e3e:	sub    rsp,0x20
   140020e42:	mov    rbp,rdx
   140020e45:	mov    rcx,QWORD PTR [rbp+0x40]
   140020e49:	call   0x140020cd4
   140020e4e:	add    rsp,0x20
   140020e52:	pop    rbp
   140020e53:	ret    
   140020e54:	mov    QWORD PTR [rsp+0x8],rcx
   140020e59:	push   rbx
   140020e5a:	sub    rsp,0x30
   140020e5e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020e67:	mov    rbx,rcx
   140020e6a:	lea    rax,[rip+0x25c27]        # 0x140046a98
   140020e71:	mov    QWORD PTR [rcx],rax
   140020e74:	lea    rdx,[rcx+0x28]
   140020e78:	mov    rcx,QWORD PTR [rcx+0x20]
   140020e7c:	call   QWORD PTR [rip+0x227b6]        # 0x140043638
   140020e82:	mov    rcx,rbx
   140020e85:	call   0x140020c84
   140020e8a:	nop
   140020e8b:	mov    rcx,rbx
   140020e8e:	add    rsp,0x30
   140020e92:	pop    rbx
   140020e93:	jmp    0x140020cd4
   140020e98:	int3   
   140020e99:	int3   
   140020e9a:	int3   
   140020e9b:	int3   
   140020e9c:	int3   
   140020e9d:	int3   
   140020e9e:	int3   
   140020e9f:	int3   
   140020ea0:	int3   
   140020ea1:	int3   
   140020ea2:	int3   
   140020ea3:	int3   
   140020ea4:	rex push rbp
   140020ea6:	sub    rsp,0x20
   140020eaa:	mov    rbp,rdx
   140020ead:	mov    rcx,QWORD PTR [rbp+0x40]
   140020eb1:	call   0x140020cd4
   140020eb6:	add    rsp,0x20
   140020eba:	pop    rbp
   140020ebb:	ret    
   140020ebc:	rex push rdi
   140020ebe:	sub    rsp,0x40
   140020ec2:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140020ecb:	mov    QWORD PTR [rsp+0x50],rbx
   140020ed0:	mov    QWORD PTR [rsp+0x60],rsi
   140020ed5:	mov    esi,ecx
   140020ed7:	call   0x14001f338
   140020edc:	mov    rdi,rax
   140020edf:	xor    ebx,ebx
   140020ee1:	cmp    QWORD PTR [rax+0x40],rbx
   140020ee5:	jne    0x140020f4b
   140020ee7:	cmp    esi,ebx
   140020ee9:	je     0x140020f4b
   140020eeb:	lea    rcx,[rip+0x361e]        # 0x140024510
   140020ef2:	call   0x1400148b0
   140020ef7:	mov    rsi,rax
   140020efa:	mov    ecx,0xb8
   140020eff:	call   0x1400148c0
   140020f04:	mov    QWORD PTR [rsp+0x58],rax
   140020f09:	cmp    rax,rbx
   140020f0c:	je     0x140020f3f
   140020f0e:	mov    DWORD PTR [rsp+0x28],0x1
   140020f16:	mov    QWORD PTR [rsp+0x20],0x8
   140020f1f:	lea    r9,[rip+0xffffffffffff57f6]        # 0x14001671c
   140020f26:	lea    r8,[rip+0xfffffffffffffbb7]        # 0x140020ae4
   140020f2d:	lea    rdx,[rip+0x2577c]        # 0x1400466b0
   140020f34:	mov    rcx,rax
   140020f37:	call   0x1400259e0
   140020f3c:	mov    rbx,rax
   140020f3f:	mov    QWORD PTR [rdi+0x40],rbx
   140020f43:	mov    rcx,rsi
   140020f46:	call   0x1400148b0
   140020f4b:	mov    rax,QWORD PTR [rdi+0x40]
   140020f4f:	mov    rbx,QWORD PTR [rsp+0x50]
   140020f54:	mov    rsi,QWORD PTR [rsp+0x60]
   140020f59:	add    rsp,0x40
   140020f5d:	pop    rdi
   140020f5e:	ret    
   140020f5f:	int3   
   140020f60:	int3   
   140020f61:	int3   
   140020f62:	int3   
   140020f63:	int3   
   140020f64:	int3   
   140020f65:	int3   
   140020f66:	int3   
   140020f67:	int3   
   140020f68:	int3   
   140020f69:	int3   
   140020f6a:	int3   
   140020f6b:	int3   
   140020f6c:	rex push rbp
   140020f6e:	sub    rsp,0x20
   140020f72:	mov    rbp,rdx
   140020f75:	mov    rcx,QWORD PTR [rbp+0x58]
   140020f79:	call   0x14001490c
   140020f7e:	add    rsp,0x20
   140020f82:	pop    rbp
   140020f83:	ret    
   140020f84:	rex push rbx
   140020f86:	sub    rsp,0x20
   140020f8a:	mov    rbx,rcx
   140020f8d:	mov    ecx,0x1
   140020f92:	call   0x140020ebc
   140020f97:	mov    rdx,rbx
   140020f9a:	mov    rcx,rax
   140020f9d:	add    rsp,0x20
   140020fa1:	pop    rbx
   140020fa2:	jmp    0x140025b1c
   140020fa7:	int3   
   140020fa8:	rex push rbx
   140020faa:	sub    rsp,0x20
   140020fae:	test   rdx,rdx
   140020fb1:	mov    rbx,rcx
   140020fb4:	jne    0x140020fba
   140020fb6:	xor    eax,eax
   140020fb8:	jmp    0x140020fdd
   140020fba:	mov    QWORD PTR [rcx+0x8],rdx
   140020fbe:	mov    ecx,0x1
   140020fc3:	call   0x140020ebc
   140020fc8:	mov    rdx,QWORD PTR [rbx+0x8]
   140020fcc:	lea    rcx,[rax+0x30]
   140020fd0:	call   0x14002566c
   140020fd5:	mov    QWORD PTR [rax],rbx
   140020fd8:	mov    eax,0x1
   140020fdd:	add    rsp,0x20
   140020fe1:	pop    rbx
   140020fe2:	ret    
   140020fe3:	int3   
   140020fe4:	mov    QWORD PTR [rsp+0x8],rbx
   140020fe9:	push   rdi
   140020fea:	sub    rsp,0x20
   140020fee:	mov    rdi,QWORD PTR [rcx+0x8]
   140020ff2:	mov    rbx,rcx
   140020ff5:	test   rdi,rdi
   140020ff8:	je     0x140021015
   140020ffa:	call   0x14001f338
   140020fff:	mov    rcx,QWORD PTR [rax+0x40]
   140021003:	test   rcx,rcx
   140021006:	je     0x140021015
   140021008:	mov    rdx,QWORD PTR [rbx+0x8]
   14002100c:	add    rcx,0x30
   140021010:	call   0x140025490
   140021015:	and    QWORD PTR [rbx+0x8],0x0
   14002101a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002101f:	mov    rax,rdi
   140021022:	add    rsp,0x20
   140021026:	pop    rdi
   140021027:	ret    
   140021028:	sub    rsp,0x28
   14002102c:	cmp    QWORD PTR [rcx+0x8],0x0
   140021031:	jne    0x140021037
   140021033:	xor    eax,eax
   140021035:	jmp    0x140021045
   140021037:	call   0x140020fe4
   14002103c:	mov    rcx,rax
   14002103f:	call   QWORD PTR [rip+0x2212b]        # 0x140043170
   140021045:	add    rsp,0x28
   140021049:	ret    
   14002104a:	int3   
   14002104b:	int3   
   14002104c:	mov    QWORD PTR [rsp+0x8],rbx
   140021051:	push   rdi
   140021052:	sub    rsp,0x20
   140021056:	mov    ebx,edx
   140021058:	mov    rdi,rcx
   14002105b:	call   0x140020cd4
   140021060:	test   bl,0x1
   140021063:	je     0x14002106d
   140021065:	mov    rcx,rdi
   140021068:	call   0x14001490c
   14002106d:	mov    rax,rdi
   140021070:	mov    rbx,QWORD PTR [rsp+0x30]
   140021075:	add    rsp,0x20
   140021079:	pop    rdi
   14002107a:	ret    
   14002107b:	int3   
   14002107c:	sub    rsp,0x28
   140021080:	call   QWORD PTR [rip+0x2205a]        # 0x1400430e0
   140021086:	mov    rcx,rax
   140021089:	add    rsp,0x28
   14002108d:	jmp    0x140020f84
   140021092:	int3   
   140021093:	int3   
   140021094:	mov    QWORD PTR [rsp+0x8],rbx
   140021099:	push   rdi
   14002109a:	sub    rsp,0x20
   14002109e:	mov    rdi,rcx
   1400210a1:	mov    ecx,edx
   1400210a3:	call   QWORD PTR [rip+0x21fc7]        # 0x140043070
   1400210a9:	mov    rcx,QWORD PTR [rdi+0x8]
   1400210ad:	mov    rbx,rax
   1400210b0:	xor    eax,eax
   1400210b2:	cmp    rcx,QWORD PTR [rdi+0x10]
   1400210b6:	je     0x1400210c1
   1400210b8:	mov    rdx,rbx
   1400210bb:	call   QWORD PTR [rip+0x2201f]        # 0x1400430e0
   1400210c1:	mov    rcx,QWORD PTR [rdi+0x10]
   1400210c5:	test   rcx,rcx
   1400210c8:	je     0x1400210d3
   1400210ca:	mov    rdx,rbx
   1400210cd:	call   QWORD PTR [rip+0x2200d]        # 0x1400430e0
   1400210d3:	mov    rcx,rax
   1400210d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400210db:	add    rsp,0x20
   1400210df:	pop    rdi
   1400210e0:	jmp    0x140020f84
   1400210e5:	int3   
   1400210e6:	int3   
   1400210e7:	int3   
   1400210e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400210ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400210f2:	push   rdi
   1400210f3:	sub    rsp,0x20
   1400210f7:	mov    rsi,rcx
   1400210fa:	mov    rcx,QWORD PTR [rcx+0x8]
   1400210fe:	xor    ebx,ebx
   140021100:	cmp    rcx,QWORD PTR [rsi+0x10]
   140021104:	mov    rdi,rdx
   140021107:	mov    rax,rbx
   14002110a:	je     0x140021120
   14002110c:	cmp    rdx,rbx
   14002110f:	jne    0x140021116
   140021111:	mov    rdx,rbx
   140021114:	jmp    0x14002111a
   140021116:	mov    rdx,QWORD PTR [rdx+0x8]
   14002111a:	call   QWORD PTR [rip+0x21fc0]        # 0x1400430e0
   140021120:	mov    rcx,QWORD PTR [rsi+0x10]
   140021124:	cmp    rcx,rbx
   140021127:	je     0x14002113b
   140021129:	cmp    rdi,rbx
   14002112c:	je     0x140021132
   14002112e:	mov    rbx,QWORD PTR [rdi+0x8]
   140021132:	mov    rdx,rbx
   140021135:	call   QWORD PTR [rip+0x21fa5]        # 0x1400430e0
   14002113b:	mov    rcx,rax
   14002113e:	mov    rbx,QWORD PTR [rsp+0x30]
   140021143:	mov    rsi,QWORD PTR [rsp+0x38]
   140021148:	add    rsp,0x20
   14002114c:	pop    rdi
   14002114d:	jmp    0x140020f84
   140021152:	int3   
   140021153:	int3   
   140021154:	mov    QWORD PTR [rsp+0x8],rbx
   140021159:	push   rdi
   14002115a:	sub    rsp,0x20
   14002115e:	mov    ebx,edx
   140021160:	mov    rdi,rcx
   140021163:	call   0x140020d84
   140021168:	test   bl,0x1
   14002116b:	je     0x140021175
   14002116d:	mov    rcx,rdi
   140021170:	call   0x14001490c
   140021175:	mov    rax,rdi
   140021178:	mov    rbx,QWORD PTR [rsp+0x30]
   14002117d:	add    rsp,0x20
   140021181:	pop    rdi
   140021182:	ret    
   140021183:	int3   
   140021184:	mov    QWORD PTR [rsp+0x8],rbx
   140021189:	push   rdi
   14002118a:	sub    rsp,0x20
   14002118e:	mov    ebx,edx
   140021190:	mov    rdi,rcx
   140021193:	call   0x140020e54
   140021198:	test   bl,0x1
   14002119b:	je     0x1400211a5
   14002119d:	mov    rcx,rdi
   1400211a0:	call   0x14001490c
   1400211a5:	mov    rax,rdi
   1400211a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400211ad:	add    rsp,0x20
   1400211b1:	pop    rdi
   1400211b2:	ret    
   1400211b3:	int3   
   1400211b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400211b9:	push   rdi
   1400211ba:	sub    rsp,0x40
   1400211be:	test   rcx,rcx
   1400211c1:	mov    rdi,rdx
   1400211c4:	mov    rbx,rcx
   1400211c7:	jne    0x1400211cf
   1400211c9:	call   0x1400218c0
   1400211ce:	int3   
   1400211cf:	mov    rcx,QWORD PTR [rcx+0x8]
   1400211d3:	test   rcx,rcx
   1400211d6:	jne    0x1400211de
   1400211d8:	call   0x1400218c0
   1400211dd:	int3   
   1400211de:	test   rdx,rdx
   1400211e1:	jne    0x1400211e9
   1400211e3:	call   0x1400218c0
   1400211e8:	int3   
   1400211e9:	mov    edx,r8d
   1400211ec:	call   QWORD PTR [rip+0x21f2e]        # 0x140043120
   1400211f2:	and    QWORD PTR [rsp+0x38],0x0
   1400211f8:	and    DWORD PTR [rsp+0x30],0x0
   1400211fd:	and    QWORD PTR [rsp+0x28],0x0
   140021203:	mov    rcx,QWORD PTR [rbx+0x8]
   140021207:	mov    r9d,0x2
   14002120d:	xor    r8d,r8d
   140021210:	xor    edx,edx
   140021212:	mov    QWORD PTR [rsp+0x20],rdi
   140021217:	call   QWORD PTR [rip+0x21e83]        # 0x1400430a0
   14002121d:	mov    rbx,QWORD PTR [rsp+0x50]
   140021222:	add    rsp,0x40
   140021226:	pop    rdi
   140021227:	ret    
   140021228:	mov    QWORD PTR [rsp+0x8],rbx
   14002122d:	mov    QWORD PTR [rsp+0x10],rbp
   140021232:	mov    QWORD PTR [rsp+0x18],rsi
   140021237:	push   rdi
   140021238:	sub    rsp,0x40
   14002123c:	mov    rbp,rcx
   14002123f:	mov    ecx,0x1000
   140021244:	mov    rbx,r9
   140021247:	mov    rdi,r8
   14002124a:	mov    esi,edx
   14002124c:	call   0x14001cdb0
   140021251:	and    QWORD PTR [rsp+0x38],0x0
   140021257:	mov    eax,DWORD PTR [rsp+0x70]
   14002125b:	mov    r11,QWORD PTR [rbp+0x0]
   14002125f:	mov    DWORD PTR [rsp+0x30],eax
   140021263:	lea    rdx,[rip+0x25a16]        # 0x140046c80
   14002126a:	mov    r9d,esi
   14002126d:	xor    r8d,r8d
   140021270:	mov    rcx,rbp
   140021273:	mov    QWORD PTR [rsp+0x28],rbx
   140021278:	mov    QWORD PTR [rsp+0x20],rdi
   14002127d:	call   QWORD PTR [r11+0xa8]
   140021284:	mov    rbx,QWORD PTR [rsp+0x50]
   140021289:	mov    rbp,QWORD PTR [rsp+0x58]
   14002128e:	mov    rsi,QWORD PTR [rsp+0x60]
   140021293:	add    rsp,0x40
   140021297:	pop    rdi
   140021298:	ret    
   140021299:	int3   
   14002129a:	int3   
   14002129b:	int3   
   14002129c:	mov    QWORD PTR [rsp+0x8],rbx
   1400212a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400212a6:	push   rdi
   1400212a7:	sub    rsp,0x30
   1400212ab:	mov    eax,DWORD PTR [rsp+0x68]
   1400212af:	mov    r10,QWORD PTR [rcx]
   1400212b2:	mov    r11,r9
   1400212b5:	mov    r9,QWORD PTR [rsp+0x60]
   1400212ba:	mov    ebx,r8d
   1400212bd:	mov    edi,edx
   1400212bf:	mov    r8,r11
   1400212c2:	mov    edx,ebx
   1400212c4:	mov    DWORD PTR [rsp+0x20],eax
   1400212c8:	mov    rsi,rcx
   1400212cb:	call   QWORD PTR [r10+0x268]
   1400212d2:	test   eax,eax
   1400212d4:	je     0x1400212ea
   1400212d6:	test   edi,edi
   1400212d8:	je     0x1400212ea
   1400212da:	xor    r9d,r9d
   1400212dd:	mov    r8d,edi
   1400212e0:	xor    edx,edx
   1400212e2:	mov    rcx,rsi
   1400212e5:	call   0x14001ff7c
   1400212ea:	mov    rbx,QWORD PTR [rsp+0x40]
   1400212ef:	mov    rsi,QWORD PTR [rsp+0x48]
   1400212f4:	add    rsp,0x30
   1400212f8:	pop    rdi
   1400212f9:	ret    
   1400212fa:	int3   
   1400212fb:	int3   
   1400212fc:	mov    QWORD PTR [rsp+0x8],rcx
   140021301:	push   rbx
   140021302:	sub    rsp,0x30
   140021306:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002130f:	mov    rbx,rcx
   140021312:	lea    rax,[rip+0x259bf]        # 0x140046cd8
   140021319:	mov    QWORD PTR [rcx],rax
   14002131c:	call   0x1400191b0
   140021321:	nop
   140021322:	mov    rcx,rbx
   140021325:	add    rsp,0x30
   140021329:	pop    rbx
   14002132a:	jmp    0x140019964
   14002132f:	int3   
   140021330:	int3   
   140021331:	int3   
   140021332:	int3   
   140021333:	int3   
   140021334:	int3   
   140021335:	int3   
   140021336:	int3   
   140021337:	int3   
   140021338:	int3   
   140021339:	int3   
   14002133a:	int3   
   14002133b:	int3   
   14002133c:	rex push rbp
   14002133e:	sub    rsp,0x20
   140021342:	mov    rbp,rdx
   140021345:	mov    rcx,QWORD PTR [rbp+0x40]
   140021349:	call   0x140019964
   14002134e:	add    rsp,0x20
   140021352:	pop    rbp
   140021353:	ret    
   140021354:	mov    QWORD PTR [rsp+0x8],rbx
   140021359:	mov    QWORD PTR [rsp+0x10],rbp
   14002135e:	mov    QWORD PTR [rsp+0x18],rsi
   140021363:	push   rdi
   140021364:	sub    rsp,0x40
   140021368:	mov    rbp,rcx
   14002136b:	mov    ecx,0x100
   140021370:	mov    rbx,r9
   140021373:	mov    rdi,r8
   140021376:	mov    esi,edx
   140021378:	call   0x14001cdb0
   14002137d:	and    QWORD PTR [rsp+0x38],0x0
   140021383:	mov    eax,DWORD PTR [rsp+0x70]
   140021387:	mov    r11,QWORD PTR [rbp+0x0]
   14002138b:	mov    DWORD PTR [rsp+0x30],eax
   14002138f:	lea    rdx,[rip+0x25bba]        # 0x140046f50
   140021396:	mov    r9d,esi
   140021399:	xor    r8d,r8d
   14002139c:	mov    rcx,rbp
   14002139f:	mov    QWORD PTR [rsp+0x28],rbx
   1400213a4:	mov    QWORD PTR [rsp+0x20],rdi
   1400213a9:	call   QWORD PTR [r11+0xa8]
   1400213b0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400213b5:	mov    rbp,QWORD PTR [rsp+0x58]
   1400213ba:	mov    rsi,QWORD PTR [rsp+0x60]
   1400213bf:	add    rsp,0x40
   1400213c3:	pop    rdi
   1400213c4:	ret    
   1400213c5:	int3   
   1400213c6:	int3   
   1400213c7:	int3   
   1400213c8:	mov    QWORD PTR [rsp+0x8],rcx
   1400213cd:	push   rbx
   1400213ce:	sub    rsp,0x30
   1400213d2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400213db:	mov    rbx,rcx
   1400213de:	lea    rax,[rip+0x25bc3]        # 0x140046fa8
   1400213e5:	mov    QWORD PTR [rcx],rax
   1400213e8:	call   0x1400191b0
   1400213ed:	nop
   1400213ee:	mov    rcx,rbx
   1400213f1:	add    rsp,0x30
   1400213f5:	pop    rbx
   1400213f6:	jmp    0x140019964
   1400213fb:	int3   
   1400213fc:	int3   
   1400213fd:	int3   
   1400213fe:	int3   
   1400213ff:	int3   
   140021400:	int3   
   140021401:	int3   
   140021402:	int3   
   140021403:	int3   
   140021404:	int3   
   140021405:	int3   
   140021406:	int3   
   140021407:	int3   
   140021408:	rex push rbp
   14002140a:	sub    rsp,0x20
   14002140e:	mov    rbp,rdx
   140021411:	mov    rcx,QWORD PTR [rbp+0x40]
   140021415:	call   0x140019964
   14002141a:	add    rsp,0x20
   14002141e:	pop    rbp
   14002141f:	ret    
   140021420:	sub    rsp,0x38
   140021424:	cmp    edx,0x2b
   140021427:	je     0x14002143a
   140021429:	mov    rax,QWORD PTR [rsp+0x60]
   14002142e:	mov    QWORD PTR [rsp+0x20],rax
   140021433:	call   0x14001c7f4
   140021438:	jmp    0x14002144b
   14002143a:	mov    rax,QWORD PTR [rcx]
   14002143d:	mov    rdx,r9
   140021440:	call   QWORD PTR [rax+0x278]
   140021446:	mov    eax,0x1
   14002144b:	add    rsp,0x38
   14002144f:	ret    
   140021450:	sub    rsp,0x58
   140021454:	mov    eax,DWORD PTR [rsp+0x80]
   14002145b:	mov    rcx,QWORD PTR [rcx+0x40]
   14002145f:	mov    QWORD PTR [rsp+0x30],r9
   140021464:	mov    DWORD PTR [rsp+0x3c],eax
   140021468:	mov    rax,QWORD PTR [rsp+0x88]
   140021470:	mov    DWORD PTR [rsp+0x20],edx
   140021474:	lea    r9,[rsp+0x20]
   140021479:	movsxd r8,r8d
   14002147c:	mov    edx,0x133e
   140021481:	mov    QWORD PTR [rsp+0x40],rax
   140021486:	call   QWORD PTR [rip+0x2255c]        # 0x1400439e8
   14002148c:	add    rsp,0x58
   140021490:	ret    
   140021491:	int3   
   140021492:	int3   
   140021493:	int3   
   140021494:	lea    rax,[rip+0x25785]        # 0x140046c20
   14002149b:	ret    
   14002149c:	lea    rax,[rip+0x257ad]        # 0x140046c50
   1400214a3:	ret    
   1400214a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400214a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400214ae:	push   rdi
   1400214af:	sub    rsp,0x20
   1400214b3:	movsxd rbx,r9d
   1400214b6:	mov    rsi,rcx
   1400214b9:	mov    rcx,QWORD PTR [rcx+0x40]
   1400214bd:	movsxd rdi,r8d
   1400214c0:	movsxd r9,edx
   1400214c3:	mov    r8,rbx
   1400214c6:	mov    edx,0x407
   1400214cb:	call   QWORD PTR [rip+0x22517]        # 0x1400439e8
   1400214d1:	mov    rcx,QWORD PTR [rsi+0x40]
   1400214d5:	mov    r9,rdi
   1400214d8:	mov    r8,rbx
   1400214db:	mov    edx,0x408
   1400214e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400214e5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400214ea:	add    rsp,0x20
   1400214ee:	pop    rdi
   1400214ef:	rex.W jmp QWORD PTR [rip+0x224f2]        # 0x1400439e8
   1400214f6:	int3   
   1400214f7:	int3   
   1400214f8:	rex push rbx
   1400214fa:	sub    rsp,0x20
   1400214fe:	mov    rbx,rcx
   140021501:	call   0x14001f338
   140021506:	mov    rcx,QWORD PTR [rax+0x48]
   14002150a:	xor    eax,eax
   14002150c:	cmp    rcx,rax
   14002150f:	je     0x14002151d
   140021511:	add    rcx,0x30
   140021515:	mov    rdx,rbx
   140021518:	call   0x14002541c
   14002151d:	add    rsp,0x20
   140021521:	pop    rbx
   140021522:	ret    
   140021523:	int3   
   140021524:	rex push rbx
   140021526:	sub    rsp,0x20
   14002152a:	mov    rbx,rcx
   14002152d:	mov    rcx,QWORD PTR [rcx+0x40]
   140021531:	xor    r9d,r9d
   140021534:	xor    r8d,r8d
   140021537:	mov    edx,0x1302
   14002153c:	call   QWORD PTR [rip+0x224a6]        # 0x1400439e8
   140021542:	mov    rcx,rax
   140021545:	call   0x1400214f8
   14002154a:	test   rax,rax
   14002154d:	je     0x140021564
   14002154f:	mov    rcx,QWORD PTR [rbx+0x40]
   140021553:	xor    r9d,r9d
   140021556:	xor    r8d,r8d
   140021559:	mov    edx,0x1303
   14002155e:	call   QWORD PTR [rip+0x22484]        # 0x1400439e8
   140021564:	mov    rcx,rbx
   140021567:	add    rsp,0x20
   14002156b:	pop    rbx
   14002156c:	jmp    0x140018ff0
   140021571:	int3   
   140021572:	int3   
   140021573:	int3   
   140021574:	lea    rax,[rip+0x25cad]        # 0x140047228
   14002157b:	ret    
   14002157c:	lea    rax,[rip+0x391e5]        # 0x14005a768
   140021583:	ret    
   140021584:	mov    QWORD PTR [rsp+0x8],rbx
   140021589:	push   rdi
   14002158a:	sub    rsp,0x20
   14002158e:	test   edx,edx
   140021590:	mov    ebx,edx
   140021592:	mov    rdi,rcx
   140021595:	jns    0x14002159b
   140021597:	xor    eax,eax
   140021599:	jmp    0x1400215c4
   14002159b:	lea    eax,[rdx+0x1]
   14002159e:	imul   eax,r8d
   1400215a2:	movsxd rcx,eax
   1400215a5:	add    rcx,0x18
   1400215a9:	call   0x14002a110
   1400215ae:	test   rax,rax
   1400215b1:	je     0x140021597
   1400215b3:	and    DWORD PTR [rax+0x8],0x0
   1400215b7:	mov    QWORD PTR [rax],rdi
   1400215ba:	mov    DWORD PTR [rax+0x10],0x1
   1400215c1:	mov    DWORD PTR [rax+0xc],ebx
   1400215c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400215c9:	add    rsp,0x20
   1400215cd:	pop    rdi
   1400215ce:	ret    
   1400215cf:	int3   
   1400215d0:	mov    rcx,rdx
   1400215d3:	jmp    0x14002a380
   1400215d8:	rex push rbx
   1400215da:	sub    rsp,0x20
   1400215de:	mov    ebx,r8d
   1400215e1:	mov    r8,rdx
   1400215e4:	test   ebx,ebx
   1400215e6:	jns    0x1400215ec
   1400215e8:	xor    eax,eax
   1400215ea:	jmp    0x14002160a
   1400215ec:	lea    eax,[rbx+0x1]
   1400215ef:	mov    rcx,r8
   1400215f2:	imul   eax,r9d
   1400215f6:	movsxd rdx,eax
   1400215f9:	add    rdx,0x18
   1400215fd:	call   0x14002beb0
   140021602:	test   rax,rax
   140021605:	je     0x1400215e8
   140021607:	mov    DWORD PTR [rax+0xc],ebx
   14002160a:	add    rsp,0x20
   14002160e:	pop    rbx
   14002160f:	ret    
   140021610:	mov    rax,rcx
   140021613:	ret    
   140021614:	lock add DWORD PTR [rcx+0x18],0x1
   140021619:	lea    rax,[rcx+0x8]
   14002161d:	ret    
   14002161e:	int3   
   14002161f:	int3   
   140021620:	lea    rax,[rip+0x25c99]        # 0x1400472c0
   140021627:	ret    
   140021628:	rex push rdi
   14002162a:	sub    rsp,0x30
   14002162e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021637:	mov    QWORD PTR [rsp+0x40],rbx
   14002163c:	mov    edi,ecx
   14002163e:	mov    ecx,0x18
   140021643:	call   0x1400148c0
   140021648:	mov    rbx,rax
   14002164b:	mov    QWORD PTR [rsp+0x48],rax
   140021650:	test   rax,rax
   140021653:	je     0x14002166d
   140021655:	mov    rcx,rax
   140021658:	call   0x1400218e4
   14002165d:	lea    r11,[rip+0x25c94]        # 0x1400472f8
   140021664:	mov    QWORD PTR [rbx],r11
   140021667:	and    DWORD PTR [rbx+0x10],0x0
   14002166b:	jmp    0x14002166f
   14002166d:	xor    ebx,ebx
   14002166f:	mov    DWORD PTR [rbx+0x10],edi
   140021672:	mov    QWORD PTR [rsp+0x48],rbx
   140021677:	lea    rdx,[rip+0x35642]        # 0x140056cc0
   14002167e:	lea    rcx,[rsp+0x48]
   140021683:	call   0x14002bb20
   140021688:	int3   
   140021689:	int3   
   14002168a:	int3   
   14002168b:	int3   
   14002168c:	int3   
   14002168d:	int3   
   14002168e:	int3   
   14002168f:	int3   
   140021690:	int3   
   140021691:	int3   
   140021692:	int3   
   140021693:	int3   
   140021694:	int3   
   140021695:	int3   
   140021696:	int3   
   140021697:	int3   
   140021698:	rex push rbp
   14002169a:	sub    rsp,0x20
   14002169e:	mov    rbp,rdx
   1400216a1:	mov    rcx,QWORD PTR [rbp+0x48]
   1400216a5:	call   0x140001930
   1400216aa:	add    rsp,0x20
   1400216ae:	pop    rbp
   1400216af:	ret    
   1400216b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400216b5:	push   rdi
   1400216b6:	sub    rsp,0x40
   1400216ba:	test   r9,r9
   1400216bd:	mov    edi,r8d
   1400216c0:	mov    rbx,rdx
   1400216c3:	je     0x1400216c9
   1400216c5:	and    DWORD PTR [r9],0x0
   1400216c9:	mov    r8d,DWORD PTR [rcx+0x10]
   1400216cd:	and    QWORD PTR [rsp+0x30],0x0
   1400216d3:	and    DWORD PTR [rsp+0x28],0x0
   1400216d8:	lea    rax,[rsp+0x50]
   1400216dd:	mov    r9d,0x800
   1400216e3:	xor    edx,edx
   1400216e5:	mov    ecx,0x1100
   1400216ea:	mov    QWORD PTR [rsp+0x20],rax
   1400216ef:	call   QWORD PTR [rip+0x21d3b]        # 0x140043430
   1400216f5:	test   eax,eax
   1400216f7:	jne    0x1400216fe
   1400216f9:	and    WORD PTR [rbx],ax
   1400216fc:	jmp    0x14002174c
   1400216fe:	mov    r8,QWORD PTR [rsp+0x50]
   140021703:	mov    rdx,rdi
   140021706:	or     r9,0xffffffffffffffff
   14002170a:	mov    rcx,rbx
   14002170d:	call   0x14002bd90
   140021712:	test   eax,eax
   140021714:	je     0x14002173c
   140021716:	cmp    eax,0xc
   140021719:	je     0x140021736
   14002171b:	cmp    eax,0x16
   14002171e:	je     0x140021730
   140021720:	cmp    eax,0x22
   140021723:	je     0x140021730
   140021725:	cmp    eax,0x50
   140021728:	je     0x14002173c
   14002172a:	call   0x1400218c0
   14002172f:	int3   
   140021730:	call   0x1400218c0
   140021735:	int3   
   140021736:	call   0x140021878
   14002173b:	int3   
   14002173c:	mov    rcx,QWORD PTR [rsp+0x50]
   140021741:	call   QWORD PTR [rip+0x21d99]        # 0x1400434e0
   140021747:	mov    eax,0x1
   14002174c:	mov    rbx,QWORD PTR [rsp+0x58]
   140021751:	add    rsp,0x40
   140021755:	pop    rdi
   140021756:	ret    
   140021757:	int3   
   140021758:	rex push rbx
   14002175a:	sub    rsp,0x20
   14002175e:	test   dl,0x1
   140021761:	lea    rax,[rip+0x25b90]        # 0x1400472f8
   140021768:	mov    rbx,rcx
   14002176b:	mov    QWORD PTR [rcx],rax
   14002176e:	je     0x140021775
   140021770:	call   0x14001490c
   140021775:	mov    rax,rbx
   140021778:	add    rsp,0x20
   14002177c:	pop    rbx
   14002177d:	ret    
   14002177e:	int3   
   14002177f:	int3   
   140021780:	sub    rsp,0x28
   140021784:	cmp    DWORD PTR [rcx+0x8],0x0
   140021788:	jle    0x140021795
   14002178a:	mov    rax,QWORD PTR [rcx]
   14002178d:	mov    edx,0x1
   140021792:	call   QWORD PTR [rax+0x8]
   140021795:	add    rsp,0x28
   140021799:	ret    
   14002179a:	int3   
   14002179b:	int3   
   14002179c:	mov    rax,QWORD PTR [rcx]
   14002179f:	rex.W jmp QWORD PTR [rax+0x20]
   1400217a3:	int3   
   1400217a4:	mov    QWORD PTR [rsp+0x20],rbx
   1400217a9:	push   rdi
   1400217aa:	sub    rsp,0x440
   1400217b1:	mov    rax,QWORD PTR [rip+0x397c8]        # 0x14005af80
   1400217b8:	xor    rax,rsp
   1400217bb:	mov    QWORD PTR [rsp+0x430],rax
   1400217c3:	mov    rax,QWORD PTR [rcx]
   1400217c6:	mov    edi,edx
   1400217c8:	mov    ebx,r8d
   1400217cb:	lea    r9,[rsp+0x20]
   1400217d0:	lea    rdx,[rsp+0x30]
   1400217d5:	mov    r8d,0x200
   1400217db:	call   QWORD PTR [rax+0x18]
   1400217de:	mov    r8d,DWORD PTR [rsp+0x20]
   1400217e3:	mov    edx,edi
   1400217e5:	test   eax,eax
   1400217e7:	je     0x1400217f5
   1400217e9:	lea    rcx,[rsp+0x30]
   1400217ee:	call   0x140021d08
   1400217f3:	jmp    0x140021806
   1400217f5:	mov    eax,0xf020
   1400217fa:	test   ebx,ebx
   1400217fc:	cmove  ebx,eax
   1400217ff:	mov    ecx,ebx
   140021801:	call   0x140021d60
   140021806:	mov    rcx,QWORD PTR [rsp+0x430]
   14002180e:	xor    rcx,rsp
   140021811:	call   0x140029b40
   140021816:	mov    rbx,QWORD PTR [rsp+0x468]
   14002181e:	add    rsp,0x440
   140021825:	pop    rdi
   140021826:	ret    
   140021827:	int3   
   140021828:	lea    rax,[rip+0x25ba9]        # 0x1400473d8
   14002182f:	ret    
   140021830:	lea    rax,[rip+0x25bd1]        # 0x140047408
   140021837:	ret    
   140021838:	lea    rax,[rip+0x25bf9]        # 0x140047438
   14002183f:	ret    
   140021840:	rex push rbx
   140021842:	sub    rsp,0x20
   140021846:	mov    rbx,rcx
   140021849:	mov    DWORD PTR [rcx+0x14],0x1
   140021850:	lea    rdx,[rcx+0x1c]
   140021854:	mov    ecx,DWORD PTR [rcx+0x11c]
   14002185a:	mov    r8d,0x80
   140021860:	call   0x140021e38
   140021865:	xor    edx,edx
   140021867:	cmp    eax,edx
   140021869:	setne  dl
   14002186c:	mov    DWORD PTR [rbx+0x18],edx
   14002186f:	add    rsp,0x20
   140021873:	pop    rbx
   140021874:	ret    
   140021875:	int3   
   140021876:	int3   
   140021877:	int3   
   140021878:	sub    rsp,0x28
   14002187c:	lea    rax,[rip+0x3904d]        # 0x14005a8d0
   140021883:	lea    rdx,[rip+0x354a6]        # 0x140056d30
   14002188a:	lea    rcx,[rsp+0x30]
   14002188f:	mov    QWORD PTR [rsp+0x30],rax
   140021894:	call   0x14002bb20
   140021899:	int3   
   14002189a:	int3   
   14002189b:	int3   
   14002189c:	sub    rsp,0x28
   1400218a0:	lea    rax,[rip+0x39149]        # 0x14005a9f0
   1400218a7:	lea    rdx,[rip+0x354fa]        # 0x140056da8
   1400218ae:	lea    rcx,[rsp+0x30]
   1400218b3:	mov    QWORD PTR [rsp+0x30],rax
   1400218b8:	call   0x14002bb20
   1400218bd:	int3   
   1400218be:	int3   
   1400218bf:	int3   
   1400218c0:	sub    rsp,0x28
   1400218c4:	lea    rax,[rip+0x39245]        # 0x14005ab10
   1400218cb:	lea    rdx,[rip+0x3554e]        # 0x140056e20
   1400218d2:	lea    rcx,[rsp+0x30]
   1400218d7:	mov    QWORD PTR [rsp+0x30],rax
   1400218dc:	call   0x14002bb20
   1400218e1:	int3   
   1400218e2:	int3   
   1400218e3:	int3   
   1400218e4:	mov    DWORD PTR [rcx+0x8],0x1
   1400218eb:	mov    rax,rcx
   1400218ee:	ret    
   1400218ef:	int3   
   1400218f0:	mov    DWORD PTR [rcx+0x8],edx
   1400218f3:	mov    rax,rcx
   1400218f6:	ret    
   1400218f7:	int3   
   1400218f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400218fd:	mov    QWORD PTR [rsp+0x10],rsi
   140021902:	push   rdi
   140021903:	sub    rsp,0x20
   140021907:	test   rdx,rdx
   14002190a:	mov    esi,r8d
   14002190d:	mov    rdi,rdx
   140021910:	mov    rbx,rcx
   140021913:	je     0x14002197a
   140021915:	test   r8d,r8d
   140021918:	je     0x14002197a
   14002191a:	test   r9,r9
   14002191d:	je     0x140021923
   14002191f:	and    DWORD PTR [r9],0x0
   140021923:	cmp    DWORD PTR [rcx+0x14],0x0
   140021927:	jne    0x14002192e
   140021929:	call   0x140021840
   14002192e:	cmp    DWORD PTR [rbx+0x18],0x0
   140021932:	je     0x140021971
   140021934:	lea    r8,[rbx+0x1c]
   140021938:	mov    rdx,rsi
   14002193b:	or     r9,0xffffffffffffffff
   14002193f:	mov    rcx,rdi
   140021942:	call   0x14002bd90
   140021947:	test   eax,eax
   140021949:	je     0x140021975
   14002194b:	cmp    eax,0xc
   14002194e:	je     0x14002196b
   140021950:	cmp    eax,0x16
   140021953:	je     0x140021965
   140021955:	cmp    eax,0x22
   140021958:	je     0x140021965
   14002195a:	cmp    eax,0x50
   14002195d:	je     0x140021975
   14002195f:	call   0x1400218c0
   140021964:	int3   
   140021965:	call   0x1400218c0
   14002196a:	int3   
   14002196b:	call   0x140021878
   140021970:	int3   
   140021971:	and    WORD PTR [rdi],0x0
   140021975:	mov    eax,DWORD PTR [rbx+0x18]
   140021978:	jmp    0x14002197c
   14002197a:	xor    eax,eax
   14002197c:	mov    rbx,QWORD PTR [rsp+0x30]
   140021981:	mov    rsi,QWORD PTR [rsp+0x38]
   140021986:	add    rsp,0x20
   14002198a:	pop    rdi
   14002198b:	ret    
   14002198c:	rex push rbx
   14002198e:	sub    rsp,0x20
   140021992:	test   dl,0x1
   140021995:	lea    rax,[rip+0x25ad4]        # 0x140047470
   14002199c:	mov    rbx,rcx
   14002199f:	mov    QWORD PTR [rcx],rax
   1400219a2:	je     0x1400219a9
   1400219a4:	call   0x14001490c
   1400219a9:	mov    rax,rbx
   1400219ac:	add    rsp,0x20
   1400219b0:	pop    rbx
   1400219b1:	ret    
   1400219b2:	int3   
   1400219b3:	int3   
   1400219b4:	rex push rbx
   1400219b6:	sub    rsp,0x20
   1400219ba:	test   dl,0x1
   1400219bd:	lea    rax,[rip+0x25ae4]        # 0x1400474a8
   1400219c4:	mov    rbx,rcx
   1400219c7:	mov    QWORD PTR [rcx],rax
   1400219ca:	je     0x1400219d1
   1400219cc:	call   0x14001490c
   1400219d1:	mov    rax,rbx
   1400219d4:	add    rsp,0x20
   1400219d8:	pop    rbx
   1400219d9:	ret    
   1400219da:	int3   
   1400219db:	int3   
   1400219dc:	rex push rbx
   1400219de:	sub    rsp,0x20
   1400219e2:	test   dl,0x1
   1400219e5:	lea    rax,[rip+0x25af4]        # 0x1400474e0
   1400219ec:	mov    rbx,rcx
   1400219ef:	mov    QWORD PTR [rcx],rax
   1400219f2:	je     0x1400219f9
   1400219f4:	call   0x14001490c
   1400219f9:	mov    rax,rbx
   1400219fc:	add    rsp,0x20
   140021a00:	pop    rbx
   140021a01:	ret    
   140021a02:	int3   
   140021a03:	int3   
   140021a04:	mov    QWORD PTR [rsp+0x8],rbx
   140021a09:	push   rdi
   140021a0a:	sub    rsp,0x20
   140021a0e:	mov    edi,ecx
   140021a10:	call   0x14001f3b8
   140021a15:	test   rax,rax
   140021a18:	je     0x140021a2b
   140021a1a:	mov    rdx,QWORD PTR [rax]
   140021a1d:	mov    rcx,rax
   140021a20:	call   QWORD PTR [rdx+0xe8]
   140021a26:	mov    rbx,rax
   140021a29:	jmp    0x140021a2d
   140021a2b:	xor    ebx,ebx
   140021a2d:	test   rbx,rbx
   140021a30:	je     0x140021a5e
   140021a32:	mov    rax,QWORD PTR [rbx]
   140021a35:	mov    rcx,rbx
   140021a38:	call   QWORD PTR [rax+0x240]
   140021a3e:	test   eax,eax
   140021a40:	je     0x140021a5e
   140021a42:	cmp    QWORD PTR [rbx+0xe0],0x0
   140021a4a:	je     0x140021a5e
   140021a4c:	mov    rcx,QWORD PTR [rbx+0xe0]
   140021a53:	mov    edx,edi
   140021a55:	mov    rax,QWORD PTR [rcx]
   140021a58:	call   QWORD PTR [rax+0xc8]
   140021a5e:	mov    rbx,QWORD PTR [rsp+0x30]
   140021a63:	add    rsp,0x20
   140021a67:	pop    rdi
   140021a68:	ret    
   140021a69:	int3   
   140021a6a:	int3   
   140021a6b:	int3   
   140021a6c:	mov    QWORD PTR [rsp+0x8],rbx
   140021a71:	mov    QWORD PTR [rsp+0x10],rbp
   140021a76:	mov    QWORD PTR [rsp+0x18],rsi
   140021a7b:	push   rdi
   140021a7c:	sub    rsp,0x20
   140021a80:	test   rcx,rcx
   140021a83:	mov    rsi,rdx
   140021a86:	mov    rbp,rcx
   140021a89:	mov    rbx,rcx
   140021a8c:	jne    0x140021ad1
   140021a8e:	call   0x14001ea28
   140021a93:	mov    rbx,QWORD PTR [rax+0x1b8]
   140021a9a:	test   rbx,rbx
   140021a9d:	je     0x140021aa5
   140021a9f:	mov    rbx,QWORD PTR [rbx+0x40]
   140021aa3:	jmp    0x140021acc
   140021aa5:	call   0x14001f3b8
   140021aaa:	test   rax,rax
   140021aad:	je     0x140021abd
   140021aaf:	mov    rdx,QWORD PTR [rax]
   140021ab2:	mov    rcx,rax
   140021ab5:	call   QWORD PTR [rdx+0xe8]
   140021abb:	jmp    0x140021abf
   140021abd:	xor    eax,eax
   140021abf:	test   rax,rax
   140021ac2:	jne    0x140021ac8
   140021ac4:	xor    ebx,ebx
   140021ac6:	jmp    0x140021af6
   140021ac8:	mov    rbx,QWORD PTR [rax+0x40]
   140021acc:	test   rbx,rbx
   140021acf:	je     0x140021af6
   140021ad1:	mov    edx,0xfffffff0
   140021ad6:	mov    rcx,rbx
   140021ad9:	call   QWORD PTR [rip+0x21e41]        # 0x140043920
   140021adf:	bt     eax,0x1e
   140021ae3:	jae    0x140021af6
   140021ae5:	mov    rcx,rbx
   140021ae8:	call   QWORD PTR [rip+0x21ee2]        # 0x1400439d0
   140021aee:	test   rax,rax
   140021af1:	mov    rbx,rax
   140021af4:	jne    0x140021ad1
   140021af6:	test   rbx,rbx
   140021af9:	mov    rdi,rbx
   140021afc:	mov    rax,rbx
   140021aff:	je     0x140021b12
   140021b01:	mov    rcx,rax
   140021b04:	mov    rdi,rax
   140021b07:	call   QWORD PTR [rip+0x21ec3]        # 0x1400439d0
   140021b0d:	test   rax,rax
   140021b10:	jne    0x140021b01
   140021b12:	test   rbp,rbp
   140021b15:	jne    0x140021b28
   140021b17:	test   rbx,rbx
   140021b1a:	je     0x140021b28
   140021b1c:	mov    rcx,rbx
   140021b1f:	call   QWORD PTR [rip+0x21c23]        # 0x140043748
   140021b25:	mov    rbx,rax
   140021b28:	test   rsi,rsi
   140021b2b:	je     0x140021b58
   140021b2d:	test   rdi,rdi
   140021b30:	je     0x140021b54
   140021b32:	mov    rcx,rdi
   140021b35:	call   QWORD PTR [rip+0x21b7d]        # 0x1400436b8
   140021b3b:	test   eax,eax
   140021b3d:	je     0x140021b54
   140021b3f:	cmp    rdi,rbx
   140021b42:	je     0x140021b54
   140021b44:	xor    edx,edx
   140021b46:	mov    rcx,rdi
   140021b49:	mov    QWORD PTR [rsi],rdi
   140021b4c:	call   QWORD PTR [rip+0x21e9e]        # 0x1400439f0
   140021b52:	jmp    0x140021b58
   140021b54:	and    QWORD PTR [rsi],0x0
   140021b58:	mov    rbp,QWORD PTR [rsp+0x38]
   140021b5d:	mov    rsi,QWORD PTR [rsp+0x40]
   140021b62:	mov    rax,rbx
   140021b65:	mov    rbx,QWORD PTR [rsp+0x30]
   140021b6a:	add    rsp,0x20
   140021b6e:	pop    rdi
   140021b6f:	ret    
   140021b70:	mov    ecx,edx
   140021b72:	jmp    0x140021a04
   140021b77:	int3   
   140021b78:	rex push rbx
   140021b7a:	push   rbp
   140021b7b:	push   rsi
   140021b7c:	push   rdi
   140021b7d:	push   r12
   140021b7f:	push   r13
   140021b81:	push   r15
   140021b83:	sub    rsp,0x250
   140021b8a:	mov    rax,QWORD PTR [rip+0x393ef]        # 0x14005af80
   140021b91:	xor    rax,rsp
   140021b94:	mov    QWORD PTR [rsp+0x240],rax
   140021b9c:	mov    rsi,rcx
   140021b9f:	xor    ecx,ecx
   140021ba1:	mov    r13d,r9d
   140021ba4:	mov    edi,r8d
   140021ba7:	mov    r15,rdx
   140021baa:	call   0x140021a04
   140021baf:	lea    rdx,[rsp+0x28]
   140021bb4:	xor    ecx,ecx
   140021bb6:	call   0x140021a6c
   140021bbb:	cmp    rax,QWORD PTR [rsp+0x28]
   140021bc0:	mov    r12,rax
   140021bc3:	je     0x140021bd3
   140021bc5:	mov    edx,0x1
   140021bca:	mov    rcx,rax
   140021bcd:	call   QWORD PTR [rip+0x21e1d]        # 0x1400439f0
   140021bd3:	xor    ebp,ebp
   140021bd5:	lea    rdx,[rsp+0x20]
   140021bda:	mov    rcx,r12
   140021bdd:	mov    rbx,rbp
   140021be0:	mov    DWORD PTR [rsp+0x20],ebp
   140021be4:	call   QWORD PTR [rip+0x21d1e]        # 0x140043908
   140021bea:	cmp    r12,rbp
   140021bed:	je     0x140021c19
   140021bef:	call   QWORD PTR [rip+0x21833]        # 0x140043428
   140021bf5:	cmp    DWORD PTR [rsp+0x20],eax
   140021bf9:	jne    0x140021c19
   140021bfb:	xor    r9d,r9d
   140021bfe:	xor    r8d,r8d
   140021c01:	mov    edx,0x376
   140021c06:	mov    rcx,r12
   140021c09:	call   QWORD PTR [rip+0x21dd9]        # 0x1400439e8
   140021c0f:	cmp    rax,rbp
   140021c12:	je     0x140021c19
   140021c14:	mov    rbx,rax
   140021c17:	jmp    0x140021c25
   140021c19:	cmp    rsi,rbp
   140021c1c:	je     0x140021c25
   140021c1e:	lea    rbx,[rsi+0xf0]
   140021c25:	xor    ecx,ecx
   140021c27:	cmp    rbx,rcx
   140021c2a:	je     0x140021c3c
   140021c2c:	cmp    r13d,ecx
   140021c2f:	mov    ebp,DWORD PTR [rbx]
   140021c31:	je     0x140021c3c
   140021c33:	lea    eax,[r13+0x30000]
   140021c3a:	mov    DWORD PTR [rbx],eax
   140021c3c:	test   dil,0xf0
   140021c40:	jne    0x140021c5c
   140021c42:	mov    eax,edi
   140021c44:	and    eax,0xf
   140021c47:	cmp    eax,0x1
   140021c4a:	jbe    0x140021c59
   140021c4c:	add    eax,0xfffffffd
   140021c4f:	cmp    eax,0x1
   140021c52:	ja     0x140021c5c
   140021c54:	or     edi,0x20
   140021c57:	jmp    0x140021c5c
   140021c59:	or     edi,0x30
   140021c5c:	cmp    rsi,rcx
   140021c5f:	mov    WORD PTR [rsp+0x30],cx
   140021c64:	je     0x140021c72
   140021c66:	mov    rsi,QWORD PTR [rsi+0xa0]
   140021c6d:	xor    r13d,r13d
   140021c70:	jmp    0x140021ca9
   140021c72:	mov    r13d,0x104
   140021c78:	lea    rdx,[rsp+0x30]
   140021c7d:	lea    rsi,[rsp+0x30]
   140021c82:	mov    r8d,r13d
   140021c85:	call   QWORD PTR [rip+0x217c5]        # 0x140043450
   140021c8b:	movzx  ecx,WORD PTR [rsp+0x236]
   140021c93:	cmp    eax,r13d
   140021c96:	mov    r13d,0x0
   140021c9c:	cmove  cx,r13w
   140021ca1:	mov    WORD PTR [rsp+0x236],cx
   140021ca9:	mov    r9d,edi
   140021cac:	mov    r8,rsi
   140021caf:	mov    rdx,r15
   140021cb2:	mov    rcx,r12
   140021cb5:	call   0x140016bd8
   140021cba:	cmp    rbx,r13
   140021cbd:	mov    edi,eax
   140021cbf:	je     0x140021cc3
   140021cc1:	mov    DWORD PTR [rbx],ebp
   140021cc3:	cmp    QWORD PTR [rsp+0x28],r13
   140021cc8:	je     0x140021cda
   140021cca:	mov    rcx,QWORD PTR [rsp+0x28]
   140021ccf:	mov    edx,0x1
   140021cd4:	call   QWORD PTR [rip+0x21d16]        # 0x1400439f0
   140021cda:	mov    ecx,0x1
   140021cdf:	call   0x140021a04
   140021ce4:	mov    eax,edi
   140021ce6:	mov    rcx,QWORD PTR [rsp+0x240]
   140021cee:	xor    rcx,rsp
   140021cf1:	call   0x140029b40
   140021cf6:	add    rsp,0x250
   140021cfd:	pop    r15
   140021cff:	pop    r13
   140021d01:	pop    r12
   140021d03:	pop    rdi
   140021d04:	pop    rsi
   140021d05:	pop    rbp
   140021d06:	pop    rbx
   140021d07:	ret    
   140021d08:	mov    QWORD PTR [rsp+0x8],rbx
   140021d0d:	mov    QWORD PTR [rsp+0x10],rsi
   140021d12:	push   rdi
   140021d13:	sub    rsp,0x20
   140021d17:	mov    ebx,r8d
   140021d1a:	mov    edi,edx
   140021d1c:	mov    rsi,rcx
   140021d1f:	call   0x14001f2e8
   140021d24:	mov    r9d,ebx
   140021d27:	mov    r8d,edi
   140021d2a:	mov    rcx,QWORD PTR [rax+0x8]
   140021d2e:	mov    rdx,rsi
   140021d31:	test   rcx,rcx
   140021d34:	je     0x140021d41
   140021d36:	mov    rax,QWORD PTR [rcx]
   140021d39:	call   QWORD PTR [rax+0x130]
   140021d3f:	jmp    0x140021d48
   140021d41:	xor    ecx,ecx
   140021d43:	call   0x140021b78
   140021d48:	mov    rbx,QWORD PTR [rsp+0x30]
   140021d4d:	mov    rsi,QWORD PTR [rsp+0x38]
   140021d52:	add    rsp,0x20
   140021d56:	pop    rdi
   140021d57:	ret    
   140021d58:	jmp    0x140021b78
   140021d5d:	int3   
   140021d5e:	int3   
   140021d5f:	int3   
   140021d60:	rex push rdi
   140021d62:	sub    rsp,0x30
   140021d66:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021d6f:	mov    QWORD PTR [rsp+0x40],rbx
   140021d74:	mov    QWORD PTR [rsp+0x48],rbp
   140021d79:	mov    QWORD PTR [rsp+0x50],rsi
   140021d7e:	mov    esi,r8d
   140021d81:	mov    ebp,edx
   140021d83:	mov    edi,ecx
   140021d85:	call   0x14002157c
   140021d8a:	mov    rcx,rax
   140021d8d:	xor    r8d,r8d
   140021d90:	test   rax,rax
   140021d93:	setne  r8b
   140021d97:	test   r8d,r8d
   140021d9a:	jne    0x140021da7
   140021d9c:	mov    ecx,0x80004005
   140021da1:	call   0x140003dc0
   140021da6:	int3   
   140021da7:	mov    rax,QWORD PTR [rax]
   140021daa:	call   QWORD PTR [rax+0x18]
   140021dad:	lea    rbx,[rax+0x18]
   140021db1:	mov    QWORD PTR [rsp+0x58],rbx
   140021db6:	mov    ecx,edi
   140021db8:	call   0x140021f1c
   140021dbd:	test   rax,rax
   140021dc0:	je     0x140021dd7
   140021dc2:	mov    r8d,edi
   140021dc5:	mov    rdx,rax
   140021dc8:	lea    rcx,[rsp+0x58]
   140021dcd:	call   0x140007010
   140021dd2:	mov    rbx,QWORD PTR [rsp+0x58]
   140021dd7:	cmp    esi,0xffffffff
   140021dda:	cmove  esi,edi
   140021ddd:	mov    r8d,esi
   140021de0:	mov    edx,ebp
   140021de2:	mov    rcx,rbx
   140021de5:	call   0x140021d08
   140021dea:	mov    edi,eax
   140021dec:	lea    rdx,[rbx-0x18]
   140021df0:	or     ecx,0xffffffff
   140021df3:	lock xadd DWORD PTR [rdx+0x10],ecx
   140021df8:	add    ecx,0xffffffff
   140021dfb:	test   ecx,ecx
   140021dfd:	jg     0x140021e09
   140021dff:	mov    rcx,QWORD PTR [rdx]
   140021e02:	mov    r8,QWORD PTR [rcx]
   140021e05:	call   QWORD PTR [r8+0x8]
   140021e09:	mov    eax,edi
   140021e0b:	mov    rbx,QWORD PTR [rsp+0x40]
   140021e10:	mov    rbp,QWORD PTR [rsp+0x48]
   140021e15:	mov    rsi,QWORD PTR [rsp+0x50]
   140021e1a:	add    rsp,0x30
   140021e1e:	pop    rdi
   140021e1f:	ret    
   140021e20:	rex push rbp
   140021e22:	sub    rsp,0x20
   140021e26:	mov    rbp,rdx
   140021e29:	lea    rcx,[rbp+0x58]
   140021e2d:	call   0x140003de0
   140021e32:	add    rsp,0x20
   140021e36:	pop    rbp
   140021e37:	ret    
   140021e38:	mov    QWORD PTR [rsp+0x8],rbx
   140021e3d:	mov    QWORD PTR [rsp+0x10],rbp
   140021e42:	mov    QWORD PTR [rsp+0x18],rsi
   140021e47:	push   rdi
   140021e48:	sub    rsp,0x20
   140021e4c:	test   rdx,rdx
   140021e4f:	mov    edi,r8d
   140021e52:	mov    rbx,rdx
   140021e55:	mov    esi,ecx
   140021e57:	je     0x140021f14
   140021e5d:	test   r8d,r8d
   140021e60:	je     0x140021f14
   140021e66:	call   0x14001f2e8
   140021e6b:	mov    r8d,0x6
   140021e71:	mov    rbp,QWORD PTR [rax+0x18]
   140021e75:	mov    eax,esi
   140021e77:	shr    eax,0x4
   140021e7a:	mov    rcx,rbp
   140021e7d:	add    ax,0x1
   140021e81:	movzx  edx,ax
   140021e84:	call   QWORD PTR [rip+0x216a6]        # 0x140043530
   140021e8a:	test   rax,rax
   140021e8d:	je     0x140021f0c
   140021e8f:	mov    r8d,esi
   140021e92:	mov    rdx,rax
   140021e95:	mov    rcx,rbp
   140021e98:	call   0x140006e90
   140021e9d:	test   rax,rax
   140021ea0:	je     0x140021f0c
   140021ea2:	lea    edx,[rdi-0x1]
   140021ea5:	movzx  edi,WORD PTR [rax]
   140021ea8:	lea    r8,[rax+0x2]
   140021eac:	cmp    edx,edi
   140021eae:	cmovb  edi,edx
   140021eb1:	add    rdx,rdx
   140021eb4:	movsxd rcx,edi
   140021eb7:	lea    rsi,[rcx+rcx*1]
   140021ebb:	mov    rcx,rbx
   140021ebe:	mov    r9,rsi
   140021ec1:	call   0x140029bf0
   140021ec6:	test   eax,eax
   140021ec8:	je     0x140021ef0
   140021eca:	cmp    eax,0xc
   140021ecd:	je     0x140021eea
   140021ecf:	cmp    eax,0x16
   140021ed2:	je     0x140021ee4
   140021ed4:	cmp    eax,0x22
   140021ed7:	je     0x140021ee4
   140021ed9:	cmp    eax,0x50
   140021edc:	je     0x140021ef0
   140021ede:	call   0x1400218c0
   140021ee3:	int3   
   140021ee4:	call   0x1400218c0
   140021ee9:	int3   
   140021eea:	call   0x140021878
   140021eef:	int3   
   140021ef0:	and    WORD PTR [rsi+rbx*1],0x0
   140021ef5:	mov    eax,edi
   140021ef7:	mov    rbx,QWORD PTR [rsp+0x30]
   140021efc:	mov    rbp,QWORD PTR [rsp+0x38]
   140021f01:	mov    rsi,QWORD PTR [rsp+0x40]
   140021f06:	add    rsp,0x20
   140021f0a:	pop    rdi
   140021f0b:	ret    
   140021f0c:	and    WORD PTR [rbx],0x0
   140021f10:	xor    eax,eax
   140021f12:	jmp    0x140021ef7
   140021f14:	call   0x1400218c0
   140021f19:	int3   
   140021f1a:	int3   
   140021f1b:	int3   
   140021f1c:	sub    rsp,0x28
   140021f20:	call   0x14001f2e8
   140021f25:	mov    rax,QWORD PTR [rax+0x18]
   140021f29:	add    rsp,0x28
   140021f2d:	ret    
   140021f2e:	int3   
   140021f2f:	int3   
   140021f30:	lea    rax,[rip+0x25649]        # 0x140047580
   140021f37:	ret    
   140021f38:	sub    rsp,0x38
   140021f3c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021f45:	xor    eax,eax
   140021f47:	test   rcx,rcx
   140021f4a:	setne  al
   140021f4d:	test   eax,eax
   140021f4f:	jne    0x140021f57
   140021f51:	call   0x1400218c0
   140021f56:	int3   
   140021f57:	cmp    QWORD PTR [rcx+0x10],0x0
   140021f5c:	jne    0x140021f62
   140021f5e:	xor    eax,eax
   140021f60:	jmp    0x140021f77
   140021f62:	and    QWORD PTR [rsp+0x40],0x0
   140021f68:	call   QWORD PTR [rcx+0x10]
   140021f6b:	mov    QWORD PTR [rsp+0x40],rax
   140021f70:	jmp    0x140021f77
   140021f72:	mov    rax,QWORD PTR [rsp+0x40]
   140021f77:	add    rsp,0x38
   140021f7b:	ret    
   140021f7c:	int3   
   140021f7d:	int3   
   140021f7e:	int3   
   140021f7f:	int3   
   140021f80:	int3   
   140021f81:	int3   
   140021f82:	int3   
   140021f83:	int3   
   140021f84:	int3   
   140021f85:	int3   
   140021f86:	int3   
   140021f87:	int3   
   140021f88:	mov    QWORD PTR [rsp+0x10],rdx
   140021f8d:	push   rbp
   140021f8e:	sub    rsp,0x20
   140021f92:	mov    rbp,rdx
   140021f95:	mov    rcx,QWORD PTR [rbp+0x28]
   140021f99:	call   0x140021780
   140021f9e:	nop
   140021f9f:	lea    rax,[rip+0xffffffffffffffcc]        # 0x140021f72
   140021fa6:	jmp    0x140021fa8
   140021fa8:	add    rsp,0x20
   140021fac:	pop    rbp
   140021fad:	ret    
   140021fae:	int3   
   140021faf:	int3   
   140021fb0:	sub    rsp,0x28
   140021fb4:	test   rcx,rcx
   140021fb7:	jne    0x140021fbf
   140021fb9:	call   0x1400218c0
   140021fbe:	int3   
   140021fbf:	test   rdx,rdx
   140021fc2:	jne    0x140021fca
   140021fc4:	call   0x1400218c0
   140021fc9:	int3   
   140021fca:	cmp    rcx,rdx
   140021fcd:	je     0x140021fdc
   140021fcf:	mov    rcx,QWORD PTR [rcx+0x18]
   140021fd3:	test   rcx,rcx
   140021fd6:	jne    0x140021fca
   140021fd8:	xor    eax,eax
   140021fda:	jmp    0x140021fe1
   140021fdc:	mov    eax,0x1
   140021fe1:	add    rsp,0x28
   140021fe5:	ret    
   140021fe6:	int3   
   140021fe7:	int3   
   140021fe8:	rex push rbx
   140021fea:	sub    rsp,0x20
   140021fee:	test   rcx,rcx
   140021ff1:	mov    rbx,rdx
   140021ff4:	jne    0x140021ffc
   140021ff6:	call   0x1400218c0
   140021ffb:	int3   
   140021ffc:	mov    rax,QWORD PTR [rcx]
   140021fff:	call   QWORD PTR [rax]
   140022001:	test   rax,rax
   140022004:	jne    0x14002200c
   140022006:	call   0x1400218c0
   14002200b:	int3   
   14002200c:	mov    rdx,rbx
   14002200f:	mov    rcx,rax
   140022012:	add    rsp,0x20
   140022016:	pop    rbx
   140022017:	jmp    0x140021fb0
   14002201c:	rex push rbx
   14002201e:	sub    rsp,0x20
   140022022:	test   rdx,rdx
   140022025:	mov    rbx,rdx
   140022028:	je     0x14002203e
   14002202a:	mov    rdx,rcx
   14002202d:	mov    rcx,rbx
   140022030:	call   0x140021fe8
   140022035:	test   eax,eax
   140022037:	je     0x14002203e
   140022039:	mov    rax,rbx
   14002203c:	jmp    0x140022040
   14002203e:	xor    eax,eax
   140022040:	add    rsp,0x20
   140022044:	pop    rbx
   140022045:	ret    
   140022046:	int3   
   140022047:	int3   
   140022048:	mov    QWORD PTR [rsp+0x8],rbx
   14002204d:	push   rdi
   14002204e:	sub    rsp,0x20
   140022052:	mov    rdi,rcx
   140022055:	call   0x14001f2e8
   14002205a:	xor    ecx,ecx
   14002205c:	mov    rbx,rax
   14002205f:	call   0x14002431c
   140022064:	lea    rcx,[rbx+0x30]
   140022068:	mov    rdx,rdi
   14002206b:	call   0x140024ac8
   140022070:	xor    ecx,ecx
   140022072:	mov    rbx,QWORD PTR [rsp+0x30]
   140022077:	add    rsp,0x20
   14002207b:	pop    rdi
   14002207c:	jmp    0x1400243b0
   140022081:	int3   
   140022082:	int3   
   140022083:	int3   
   140022084:	mov    QWORD PTR [rsp+0x8],rbx
   140022089:	push   rdi
   14002208a:	sub    rsp,0x20
   14002208e:	mov    rdi,rcx
   140022091:	mov    rcx,QWORD PTR [rcx+0xa8]
   140022098:	mov    rbx,rdx
   14002209b:	call   0x14002a380
   1400220a0:	mov    rcx,rbx
   1400220a3:	call   0x14002c050
   1400220a8:	mov    rcx,QWORD PTR [rdi+0xd0]
   1400220af:	mov    QWORD PTR [rdi+0xa8],rax
   1400220b6:	call   0x14002a380
   1400220bb:	mov    rcx,QWORD PTR [rdi+0xa0]
   1400220c2:	call   0x14002c050
   1400220c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400220cc:	mov    QWORD PTR [rdi+0xd0],rax
   1400220d3:	add    rsp,0x20
   1400220d7:	pop    rdi
   1400220d8:	ret    
   1400220d9:	int3   
   1400220da:	int3   
   1400220db:	int3   
   1400220dc:	mov    r11,rsp
   1400220df:	push   rbx
   1400220e0:	sub    rsp,0x60
   1400220e4:	and    QWORD PTR [r11-0x18],0x0
   1400220e9:	and    QWORD PTR [r11+0x18],0x0
   1400220ee:	and    QWORD PTR [r11+0x20],0x0
   1400220f3:	lea    rax,[r11+0x18]
   1400220f7:	mov    rbx,rcx
   1400220fa:	lea    rdx,[rip+0x254d7]        # 0x1400475d8
   140022101:	mov    r9d,0x2001f
   140022107:	xor    r8d,r8d
   14002210a:	mov    rcx,0xffffffff80000001
   140022111:	mov    QWORD PTR [r11-0x48],rax
   140022115:	call   QWORD PTR [rip+0x20f15]        # 0x140043030
   14002211b:	test   eax,eax
   14002211d:	jne    0x1400221ae
   140022123:	mov    rdx,QWORD PTR [rbx+0xa8]
   14002212a:	mov    rcx,QWORD PTR [rsp+0x80]
   140022132:	lea    rax,[rsp+0x78]
   140022137:	mov    QWORD PTR [rsp+0x40],rax
   14002213c:	lea    rax,[rsp+0x88]
   140022144:	xor    r9d,r9d
   140022147:	mov    QWORD PTR [rsp+0x38],rax
   14002214c:	and    QWORD PTR [rsp+0x30],0x0
   140022152:	xor    r8d,r8d
   140022155:	mov    DWORD PTR [rsp+0x28],0x2001f
   14002215d:	and    DWORD PTR [rsp+0x20],0x0
   140022162:	call   QWORD PTR [rip+0x20ed0]        # 0x140043038
   140022168:	test   eax,eax
   14002216a:	jne    0x1400221ae
   14002216c:	mov    rdx,QWORD PTR [rbx+0xd0]
   140022173:	mov    rcx,QWORD PTR [rsp+0x88]
   14002217b:	lea    rax,[rsp+0x78]
   140022180:	mov    QWORD PTR [rsp+0x40],rax
   140022185:	lea    rax,[rsp+0x50]
   14002218a:	xor    r9d,r9d
   14002218d:	mov    QWORD PTR [rsp+0x38],rax
   140022192:	and    QWORD PTR [rsp+0x30],0x0
   140022198:	xor    r8d,r8d
   14002219b:	mov    DWORD PTR [rsp+0x28],0x2001f
   1400221a3:	and    DWORD PTR [rsp+0x20],0x0
   1400221a8:	call   QWORD PTR [rip+0x20e8a]        # 0x140043038
   1400221ae:	mov    rcx,QWORD PTR [rsp+0x80]
   1400221b6:	test   rcx,rcx
   1400221b9:	je     0x1400221c1
   1400221bb:	call   QWORD PTR [rip+0x20e5f]        # 0x140043020
   1400221c1:	mov    rcx,QWORD PTR [rsp+0x88]
   1400221c9:	test   rcx,rcx
   1400221cc:	je     0x1400221d4
   1400221ce:	call   QWORD PTR [rip+0x20e4c]        # 0x140043020
   1400221d4:	mov    rax,QWORD PTR [rsp+0x50]
   1400221d9:	add    rsp,0x60
   1400221dd:	pop    rbx
   1400221de:	ret    
   1400221df:	int3   
   1400221e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400221e5:	push   rdi
   1400221e6:	sub    rsp,0x50
   1400221ea:	and    QWORD PTR [rsp+0x78],0x0
   1400221f0:	mov    rdi,rdx
   1400221f3:	call   0x1400220dc
   1400221f8:	test   rax,rax
   1400221fb:	mov    rbx,rax
   1400221fe:	je     0x140022247
   140022200:	lea    rax,[rsp+0x70]
   140022205:	xor    r9d,r9d
   140022208:	xor    r8d,r8d
   14002220b:	mov    QWORD PTR [rsp+0x40],rax
   140022210:	lea    rax,[rsp+0x78]
   140022215:	mov    rdx,rdi
   140022218:	mov    QWORD PTR [rsp+0x38],rax
   14002221d:	and    QWORD PTR [rsp+0x30],0x0
   140022223:	mov    rcx,rbx
   140022226:	mov    DWORD PTR [rsp+0x28],0x2001f
   14002222e:	and    DWORD PTR [rsp+0x20],0x0
   140022233:	call   QWORD PTR [rip+0x20dff]        # 0x140043038
   140022239:	mov    rcx,rbx
   14002223c:	call   QWORD PTR [rip+0x20dde]        # 0x140043020
   140022242:	mov    rax,QWORD PTR [rsp+0x78]
   140022247:	mov    rbx,QWORD PTR [rsp+0x60]
   14002224c:	add    rsp,0x50
   140022250:	pop    rdi
   140022251:	ret    
   140022252:	int3   
   140022253:	int3   
   140022254:	mov    QWORD PTR [rsp+0x10],rbx
   140022259:	mov    QWORD PTR [rsp+0x18],rsi
   14002225e:	push   rdi
   14002225f:	sub    rsp,0x40
   140022263:	cmp    QWORD PTR [rcx+0xa8],0x0
   14002226b:	mov    edi,r9d
   14002226e:	mov    rbx,r8
   140022271:	mov    rax,rdx
   140022274:	je     0x1400222cb
   140022276:	call   0x1400221e0
   14002227b:	test   rax,rax
   14002227e:	mov    rsi,rax
   140022281:	jne    0x140022287
   140022283:	mov    eax,edi
   140022285:	jmp    0x1400222e1
   140022287:	lea    rax,[rsp+0x50]
   14002228c:	lea    r9,[rsp+0x34]
   140022291:	xor    r8d,r8d
   140022294:	mov    QWORD PTR [rsp+0x28],rax
   140022299:	lea    rax,[rsp+0x30]
   14002229e:	mov    rdx,rbx
   1400222a1:	mov    rcx,rsi
   1400222a4:	mov    DWORD PTR [rsp+0x50],0x4
   1400222ac:	mov    QWORD PTR [rsp+0x20],rax
   1400222b1:	call   QWORD PTR [rip+0x20d71]        # 0x140043028
   1400222b7:	mov    rcx,rsi
   1400222ba:	mov    ebx,eax
   1400222bc:	call   QWORD PTR [rip+0x20d5e]        # 0x140043020
   1400222c2:	test   ebx,ebx
   1400222c4:	cmove  edi,DWORD PTR [rsp+0x30]
   1400222c9:	jmp    0x140022283
   1400222cb:	mov    r9,QWORD PTR [rcx+0xd0]
   1400222d2:	mov    r8d,edi
   1400222d5:	mov    rdx,rbx
   1400222d8:	mov    rcx,rax
   1400222db:	call   QWORD PTR [rip+0x2113f]        # 0x140043420
   1400222e1:	mov    rbx,QWORD PTR [rsp+0x58]
   1400222e6:	mov    rsi,QWORD PTR [rsp+0x60]
   1400222eb:	add    rsp,0x40
   1400222ef:	pop    rdi
   1400222f0:	ret    
   1400222f1:	int3   
   1400222f2:	int3   
   1400222f3:	int3   
   1400222f4:	rex push rbx
   1400222f6:	push   rbp
   1400222f7:	push   rsi
   1400222f8:	push   rdi
   1400222f9:	sub    rsp,0x68
   1400222fd:	mov    rax,QWORD PTR [rip+0x38c7c]        # 0x14005af80
   140022304:	xor    rax,rsp
   140022307:	mov    QWORD PTR [rsp+0x58],rax
   14002230c:	xor    esi,esi
   14002230e:	mov    rbp,r8
   140022311:	mov    rdi,rdx
   140022314:	cmp    QWORD PTR [rcx+0xa8],rsi
   14002231b:	mov    rbx,rcx
   14002231e:	mov    DWORD PTR [rsp+0x30],r9d
   140022323:	je     0x14002236f
   140022325:	call   0x1400221e0
   14002232a:	cmp    rax,rsi
   14002232d:	mov    rdi,rax
   140022330:	jne    0x140022336
   140022332:	xor    eax,eax
   140022334:	jmp    0x14002239d
   140022336:	lea    rax,[rsp+0x30]
   14002233b:	mov    r9d,0x4
   140022341:	xor    r8d,r8d
   140022344:	mov    DWORD PTR [rsp+0x28],r9d
   140022349:	mov    rdx,rbp
   14002234c:	mov    rcx,rdi
   14002234f:	mov    QWORD PTR [rsp+0x20],rax
   140022354:	call   QWORD PTR [rip+0x20ca6]        # 0x140043000
   14002235a:	mov    rcx,rdi
   14002235d:	mov    ebx,eax
   14002235f:	call   QWORD PTR [rip+0x20cbb]        # 0x140043020
   140022365:	cmp    ebx,esi
   140022367:	sete   sil
   14002236b:	mov    eax,esi
   14002236d:	jmp    0x14002239d
   14002236f:	lea    r8,[rip+0x23e72]        # 0x1400461e8
   140022376:	lea    rcx,[rsp+0x38]
   14002237b:	mov    edx,0x10
   140022380:	call   0x14002bbf0
   140022385:	mov    r9,QWORD PTR [rbx+0xd0]
   14002238c:	lea    r8,[rsp+0x38]
   140022391:	mov    rdx,rbp
   140022394:	mov    rcx,rdi
   140022397:	call   QWORD PTR [rip+0x2107b]        # 0x140043418
   14002239d:	mov    rcx,QWORD PTR [rsp+0x58]
   1400223a2:	xor    rcx,rsp
   1400223a5:	call   0x140029b40
   1400223aa:	add    rsp,0x68
   1400223ae:	pop    rdi
   1400223af:	pop    rsi
   1400223b0:	pop    rbp
   1400223b1:	pop    rbx
   1400223b2:	ret    
   1400223b3:	int3   
   1400223b4:	lea    rax,[rip+0x252a5]        # 0x140047660
   1400223bb:	ret    
   1400223bc:	mov    rax,QWORD PTR [rsp+0x28]
   1400223c1:	test   rax,rax
   1400223c4:	jne    0x1400223c7
   1400223c6:	ret    
   1400223c7:	mov    WORD PTR [rax],r9w
   1400223cb:	mov    eax,0x1
   1400223d0:	ret    
   1400223d1:	int3   
   1400223d2:	int3   
   1400223d3:	int3   
   1400223d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400223d9:	push   rdi
   1400223da:	sub    rsp,0x20
   1400223de:	and    QWORD PTR [rcx+0x8],0x0
   1400223e3:	mov    QWORD PTR [rcx],rdx
   1400223e6:	cmp    BYTE PTR [rip+0x3e4bb],0x0        # 0x1400608a8
   1400223ed:	mov    rbx,rcx
   1400223f0:	jne    0x1400224b6
   1400223f6:	lea    rcx,[rip+0x23e3b]        # 0x140046238
   1400223fd:	call   QWORD PTR [rip+0x210a5]        # 0x1400434a8
   140022403:	test   rax,rax
   140022406:	mov    rdi,rax
   140022409:	jne    0x140022411
   14002240b:	call   0x1400218c0
   140022410:	int3   
   140022411:	lea    rdx,[rip+0x23e10]        # 0x140046228
   140022418:	mov    rcx,rax
   14002241b:	call   QWORD PTR [rip+0x2108f]        # 0x1400434b0
   140022421:	lea    rdx,[rip+0x23df0]        # 0x140046218
   140022428:	mov    rcx,rdi
   14002242b:	mov    QWORD PTR [rip+0x3e456],rax        # 0x140060888
   140022432:	call   QWORD PTR [rip+0x21078]        # 0x1400434b0
   140022438:	lea    rdx,[rip+0x23dc9]        # 0x140046208
   14002243f:	mov    rcx,rdi
   140022442:	mov    QWORD PTR [rip+0x3e447],rax        # 0x140060890
   140022449:	call   QWORD PTR [rip+0x21061]        # 0x1400434b0
   14002244f:	lea    rdx,[rip+0x23d9a]        # 0x1400461f0
   140022456:	mov    rcx,rdi
   140022459:	mov    QWORD PTR [rip+0x3e438],rax        # 0x140060898
   140022460:	call   QWORD PTR [rip+0x2104a]        # 0x1400434b0
   140022466:	cmp    QWORD PTR [rip+0x3e41a],0x0        # 0x140060888
   14002246e:	mov    QWORD PTR [rip+0x3e42b],rax        # 0x1400608a0
   140022475:	je     0x140022496
   140022477:	cmp    QWORD PTR [rip+0x3e411],0x0        # 0x140060890
   14002247f:	je     0x140022490
   140022481:	cmp    QWORD PTR [rip+0x3e40f],0x0        # 0x140060898
   140022489:	je     0x140022490
   14002248b:	test   rax,rax
   14002248e:	jne    0x1400224af
   140022490:	call   0x1400218c0
   140022495:	int3   
   140022496:	cmp    QWORD PTR [rip+0x3e3f2],0x0        # 0x140060890
   14002249e:	jne    0x1400224c4
   1400224a0:	cmp    QWORD PTR [rip+0x3e3f0],0x0        # 0x140060898
   1400224a8:	jne    0x1400224c4
   1400224aa:	test   rax,rax
   1400224ad:	jne    0x1400224c4
   1400224af:	mov    BYTE PTR [rip+0x3e3f2],0x1        # 0x1400608a8
   1400224b6:	mov    rax,rbx
   1400224b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400224be:	add    rsp,0x20
   1400224c2:	pop    rdi
   1400224c3:	ret    
   1400224c4:	call   0x1400218c0
   1400224c9:	int3   
   1400224ca:	int3   
   1400224cb:	int3   
   1400224cc:	mov    rax,rsp
   1400224cf:	push   rbx
   1400224d0:	push   rsi
   1400224d1:	push   rdi
   1400224d2:	sub    rsp,0x30
   1400224d6:	and    QWORD PTR [rax+0x20],0x0
   1400224db:	and    DWORD PTR [rax+0x8],0x0
   1400224df:	and    DWORD PTR [rax+0x10],0x0
   1400224e3:	and    DWORD PTR [rcx+0x138],0x0
   1400224ea:	cmp    QWORD PTR [rip+0x3874e],0x0        # 0x14005ac40
   1400224f2:	mov    rsi,rcx
   1400224f5:	mov    DWORD PTR [rax+0x18],0x4
   1400224fc:	lea    rdi,[rip+0x3873d]        # 0x14005ac40
   140022503:	je     0x1400225c6
   140022509:	mov    rdx,QWORD PTR [rdi]
   14002250c:	lea    rax,[rsp+0x68]
   140022511:	mov    r9d,0x1
   140022517:	xor    r8d,r8d
   14002251a:	mov    rcx,0xffffffff80000001
   140022521:	mov    QWORD PTR [rsp+0x20],rax
   140022526:	call   QWORD PTR [rip+0x20b04]        # 0x140043030
   14002252c:	test   eax,eax
   14002252e:	jne    0x1400225b8
   140022534:	mov    rbx,QWORD PTR [rdi+0x8]
   140022538:	jmp    0x14002259f
   14002253a:	lea    rcx,[rsp+0x60]
   14002253f:	lea    r9,[rsp+0x58]
   140022544:	xor    r8d,r8d
   140022547:	mov    QWORD PTR [rsp+0x28],rcx
   14002254c:	lea    rcx,[rsp+0x50]
   140022551:	mov    rdx,rax
   140022554:	mov    QWORD PTR [rsp+0x20],rcx
   140022559:	mov    rcx,QWORD PTR [rsp+0x68]
   14002255e:	call   QWORD PTR [rip+0x20ac4]        # 0x140043028
   140022564:	test   eax,eax
   140022566:	jne    0x140022589
   140022568:	cmp    DWORD PTR [rsp+0x58],0x4
   14002256d:	jne    0x140022589
   14002256f:	cmp    DWORD PTR [rsp+0x50],0x0
   140022574:	mov    eax,DWORD PTR [rbx+0x8]
   140022577:	je     0x140022581
   140022579:	or     DWORD PTR [rsi+0x138],eax
   14002257f:	jmp    0x140022589
   140022581:	not    eax
   140022583:	and    DWORD PTR [rsi+0x138],eax
   140022589:	and    DWORD PTR [rsp+0x50],0x0
   14002258e:	and    DWORD PTR [rsp+0x58],0x0
   140022593:	mov    DWORD PTR [rsp+0x60],0x4
   14002259b:	add    rbx,0x10
   14002259f:	mov    rax,QWORD PTR [rbx]
   1400225a2:	test   rax,rax
   1400225a5:	jne    0x14002253a
   1400225a7:	mov    rcx,QWORD PTR [rsp+0x68]
   1400225ac:	call   QWORD PTR [rip+0x20a6e]        # 0x140043020
   1400225b2:	and    QWORD PTR [rsp+0x68],0x0
   1400225b8:	add    rdi,0x10
   1400225bc:	cmp    QWORD PTR [rdi],0x0
   1400225c0:	jne    0x140022509
   1400225c6:	mov    eax,0x1
   1400225cb:	add    rsp,0x30
   1400225cf:	pop    rdi
   1400225d0:	pop    rsi
   1400225d1:	pop    rbx
   1400225d2:	ret    
   1400225d3:	int3   
   1400225d4:	rex push rbx
   1400225d6:	sub    rsp,0x20
   1400225da:	mov    rax,QWORD PTR [rip+0x3e297]        # 0x140060878
   1400225e1:	xor    edx,edx
   1400225e3:	mov    rbx,rcx
   1400225e6:	cmp    rax,rdx
   1400225e9:	je     0x140022602
   1400225eb:	cmp    QWORD PTR [rcx+0xb0],rdx
   1400225f2:	jne    0x1400225fb
   1400225f4:	mov    QWORD PTR [rcx+0xb0],rax
   1400225fb:	mov    QWORD PTR [rip+0x3e276],rdx        # 0x140060878
   140022602:	mov    rcx,QWORD PTR [rcx+0xb0]
   140022609:	cmp    rcx,rdx
   14002260c:	je     0x140022616
   14002260e:	mov    rax,QWORD PTR [rcx]
   140022611:	call   QWORD PTR [rax+0x18]
   140022614:	jmp    0x14002261c
   140022616:	mov    DWORD PTR [rip+0x38614],edx        # 0x14005ac30
   14002261c:	mov    rax,QWORD PTR [rbx]
   14002261f:	mov    rcx,rbx
   140022622:	call   QWORD PTR [rax+0x168]
   140022628:	mov    eax,0x1
   14002262d:	add    rsp,0x20
   140022631:	pop    rbx
   140022632:	ret    
   140022633:	int3   
   140022634:	rex push rbx
   140022636:	sub    rsp,0x20
   14002263a:	cmp    QWORD PTR [rcx+0x110],0x0
   140022642:	mov    rbx,rcx
   140022645:	je     0x140022654
   140022647:	mov    rcx,QWORD PTR [rcx+0x110]
   14002264e:	mov    rax,QWORD PTR [rcx]
   140022651:	call   QWORD PTR [rax+0x28]
   140022654:	mov    r9d,DWORD PTR [rbx+0x124]
   14002265b:	test   r9d,r9d
   14002265e:	je     0x140022676
   140022660:	lea    r8,[rip+0x24fa9]        # 0x140047610
   140022667:	lea    rdx,[rip+0x24f8a]        # 0x1400475f8
   14002266e:	mov    rcx,rbx
   140022671:	call   0x1400222f4
   140022676:	add    rsp,0x20
   14002267a:	pop    rbx
   14002267b:	ret    
   14002267c:	mov    QWORD PTR [rsp+0x8],rbx
   140022681:	push   rdi
   140022682:	sub    rsp,0x20
   140022686:	mov    rax,QWORD PTR [rcx+0x118]
   14002268d:	xor    ebx,ebx
   14002268f:	mov    rdi,rcx
   140022692:	cmp    rax,rbx
   140022695:	je     0x1400226a3
   140022697:	cmp    DWORD PTR [rax+0x14],0x6
   14002269b:	je     0x1400226b5
   14002269d:	cmp    DWORD PTR [rax+0x14],0x5
   1400226a1:	je     0x1400226b5
   1400226a3:	call   0x14001f2e8
   1400226a8:	cmp    BYTE PTR [rax+0x28],bl
   1400226ab:	jne    0x1400226b5
   1400226ad:	mov    rcx,rdi
   1400226b0:	call   0x140022634
   1400226b5:	mov    rax,QWORD PTR [rdi+0x130]
   1400226bc:	cmp    rax,rbx
   1400226bf:	je     0x1400226c3
   1400226c1:	call   rax
   1400226c3:	mov    rcx,QWORD PTR [rdi+0xf8]
   1400226ca:	cmp    rcx,rbx
   1400226cd:	je     0x1400226dc
   1400226cf:	call   QWORD PTR [rip+0x20dab]        # 0x140043480
   1400226d5:	mov    QWORD PTR [rdi+0xf8],rbx
   1400226dc:	call   0x14001f3cc
   1400226e1:	cmp    rax,rbx
   1400226e4:	je     0x1400226ee
   1400226e6:	call   0x14001f3cc
   1400226eb:	mov    ebx,DWORD PTR [rax+0x10]
   1400226ee:	mov    eax,ebx
   1400226f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400226f5:	add    rsp,0x20
   1400226f9:	pop    rdi
   1400226fa:	ret    
   1400226fb:	int3   
   1400226fc:	rex push rbx
   1400226fe:	sub    rsp,0x20
   140022702:	mov    ebx,ecx
   140022704:	call   0x14001f3b8
   140022709:	test   rax,rax
   14002270c:	je     0x140022720
   14002270e:	mov    rax,QWORD PTR [rax+0x78]
   140022712:	test   rax,rax
   140022715:	je     0x140022720
   140022717:	mov    ecx,0x1
   14002271c:	mov    edx,ecx
   14002271e:	call   rax
   140022720:	mov    ecx,ebx
   140022722:	add    rsp,0x20
   140022726:	pop    rbx
   140022727:	rex.W jmp QWORD PTR [rip+0x211c2]        # 0x1400438f0
   14002272e:	int3   
   14002272f:	int3   
   140022730:	mov    QWORD PTR [rsp+0x8],rbx
   140022735:	mov    QWORD PTR [rsp+0x10],rsi
   14002273a:	push   rdi
   14002273b:	sub    rsp,0x20
   14002273f:	test   rdx,rdx
   140022742:	mov    rbx,rdx
   140022745:	jne    0x14002274d
   140022747:	call   0x1400218c0
   14002274c:	int3   
   14002274d:	test   r8,r8
   140022750:	jne    0x140022758
   140022752:	call   0x1400218c0
   140022757:	int3   
   140022758:	mov    eax,DWORD PTR [r8+0x8]
   14002275c:	sub    eax,0x1
   14002275f:	je     0x1400227d1
   140022761:	cmp    eax,0xe
   140022764:	je     0x1400227d1
   140022766:	xor    esi,esi
   140022768:	cmp    DWORD PTR [r8+0x8],0x111
   140022770:	mov    edi,0xf108
   140022775:	jne    0x140022786
   140022777:	cmp    QWORD PTR [r8+0x18],rsi
   14002277b:	lea    eax,[rdi+0x1]
   14002277e:	mov    esi,0x1
   140022783:	cmove  edi,eax
   140022786:	lea    rdx,[rip+0x24c4b]        # 0x1400473d8
   14002278d:	mov    rcx,rbx
   140022790:	call   0x140021fe8
   140022795:	mov    rcx,rbx
   140022798:	test   eax,eax
   14002279a:	je     0x1400227ac
   14002279c:	mov    rax,QWORD PTR [rbx]
   14002279f:	mov    r8d,edi
   1400227a2:	mov    edx,0x1030
   1400227a7:	call   QWORD PTR [rax+0x28]
   1400227aa:	jmp    0x1400227cc
   1400227ac:	lea    rdx,[rip+0x23e3d]        # 0x1400465f0
   1400227b3:	call   0x140021fe8
   1400227b8:	test   eax,eax
   1400227ba:	jne    0x1400227cc
   1400227bc:	mov    r9,QWORD PTR [rbx]
   1400227bf:	lea    edx,[rax+0x10]
   1400227c2:	mov    r8d,edi
   1400227c5:	mov    rcx,rbx
   1400227c8:	call   QWORD PTR [r9+0x28]
   1400227cc:	mov    rax,rsi
   1400227cf:	jmp    0x1400227d6
   1400227d1:	call   0x14001f6ac
   1400227d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400227db:	mov    rsi,QWORD PTR [rsp+0x38]
   1400227e0:	add    rsp,0x20
   1400227e4:	pop    rdi
   1400227e5:	ret    
   1400227e6:	int3   
   1400227e7:	int3   
   1400227e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400227ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400227f2:	push   rdi
   1400227f3:	sub    rsp,0x20
   1400227f7:	xor    ebx,ebx
   1400227f9:	mov    edi,edx
   1400227fb:	mov    rsi,rcx
   1400227fe:	cmp    edx,ebx
   140022800:	jg     0x140022853
   140022802:	call   0x14001fc1c
   140022807:	cmp    QWORD PTR [rsi+0xb0],rbx
   14002280e:	mov    QWORD PTR [rsp+0x40],rbx
   140022813:	je     0x14002285d
   140022815:	mov    rcx,QWORD PTR [rsi+0xb0]
   14002281c:	mov    rax,QWORD PTR [rcx]
   14002281f:	call   QWORD PTR [rax+0x20]
   140022822:	cmp    rax,rbx
   140022825:	mov    QWORD PTR [rsp+0x40],rax
   14002282a:	je     0x14002285d
   14002282c:	mov    rcx,QWORD PTR [rsi+0xb0]
   140022833:	lea    rdx,[rsp+0x40]
   140022838:	mov    rax,QWORD PTR [rcx]
   14002283b:	call   QWORD PTR [rax+0x28]
   14002283e:	mov    rcx,rax
   140022841:	mov    rdx,QWORD PTR [rax]
   140022844:	call   QWORD PTR [rdx+0x110]
   14002284a:	cmp    QWORD PTR [rsp+0x40],rbx
   14002284f:	jne    0x14002282c
   140022851:	jmp    0x14002285d
   140022853:	cmp    edx,0x1
   140022856:	jne    0x14002285d
   140022858:	call   0x14001fc1c
   14002285d:	mov    rsi,QWORD PTR [rsp+0x38]
   140022862:	cmp    edi,0x1
   140022865:	setl   bl
   140022868:	mov    eax,ebx
   14002286a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002286f:	add    rsp,0x20
   140022873:	pop    rdi
   140022874:	ret    
   140022875:	int3   
   140022876:	int3   
   140022877:	int3   
   140022878:	mov    QWORD PTR [rsp+0x10],rbx
   14002287d:	push   rdi
   14002287e:	sub    rsp,0x30
   140022882:	mov    rbx,rcx
   140022885:	mov    rcx,QWORD PTR [rcx+0xe8]
   14002288c:	mov    rdi,rdx
   14002288f:	test   rcx,rcx
   140022892:	je     0x14002295f
   140022898:	call   QWORD PTR [rip+0x20c6a]        # 0x140043508
   14002289e:	mov    rdx,rdi
   1400228a1:	movzx  r8d,WORD PTR [rax+0x2]
   1400228a6:	lea    rcx,[rax+r8*2]
   1400228aa:	call   QWORD PTR [rip+0x20bf0]        # 0x1400434a0
   1400228b0:	test   eax,eax
   1400228b2:	jne    0x14002295f
   1400228b8:	lea    rdx,[rsp+0x40]
   1400228bd:	xor    r8d,r8d
   1400228c0:	mov    rcx,rdi
   1400228c3:	call   0x14004093a
   1400228c8:	test   eax,eax
   1400228ca:	je     0x14002295f
   1400228d0:	mov    rcx,QWORD PTR [rbx+0xe0]
   1400228d7:	test   rcx,rcx
   1400228da:	je     0x1400228e1
   1400228dc:	call   0x1400244cc
   1400228e1:	mov    rdx,QWORD PTR [rsp+0x40]
   1400228e6:	and    DWORD PTR [rsp+0x28],0x0
   1400228eb:	and    QWORD PTR [rsp+0x20],0x0
   1400228f1:	xor    r9d,r9d
   1400228f4:	mov    r8,rdi
   1400228f7:	xor    ecx,ecx
   1400228f9:	call   0x140040934
   1400228fe:	mov    ecx,0x42
   140022903:	movsxd rdx,eax
   140022906:	call   QWORD PTR [rip+0x20c04]        # 0x140043510
   14002290c:	mov    rcx,rax
   14002290f:	mov    QWORD PTR [rbx+0xe0],rax
   140022916:	call   QWORD PTR [rip+0x20bec]        # 0x140043508
   14002291c:	mov    rdx,QWORD PTR [rsp+0x40]
   140022921:	mov    r8,rdi
   140022924:	xor    ecx,ecx
   140022926:	mov    r9,rax
   140022929:	mov    DWORD PTR [rsp+0x28],0x2
   140022931:	and    QWORD PTR [rsp+0x20],0x0
   140022937:	call   0x140040934
   14002293c:	cmp    eax,0x1
   14002293f:	je     0x140022955
   140022941:	mov    rcx,QWORD PTR [rbx+0xe0]
   140022948:	call   0x1400244cc
   14002294d:	and    QWORD PTR [rbx+0xe0],0x0
   140022955:	mov    rcx,QWORD PTR [rsp+0x40]
   14002295a:	call   0x14004092e
   14002295f:	mov    rbx,QWORD PTR [rsp+0x48]
   140022964:	add    rsp,0x30
   140022968:	pop    rdi
   140022969:	ret    
   14002296a:	int3   
   14002296b:	int3   
   14002296c:	lea    rax,[rip+0x24cbd]        # 0x140047630
   140022973:	ret    
   140022974:	jmp    0x1400224cc
   140022979:	int3   
   14002297a:	int3   
   14002297b:	int3   
   14002297c:	mov    QWORD PTR [rsp+0x8],rbx
   140022981:	push   rdi
   140022982:	sub    rsp,0x20
   140022986:	mov    rax,QWORD PTR [rcx]
   140022989:	mov    rbx,rcx
   14002298c:	call   QWORD PTR [rax+0xf8]
   140022992:	mov    r11,QWORD PTR [rbx]
   140022995:	mov    rcx,rbx
   140022998:	call   QWORD PTR [r11+0x160]
   14002299f:	test   rax,rax
   1400229a2:	mov    rdi,rax
   1400229a5:	mov    QWORD PTR [rbx+0xf8],rax
   1400229ac:	je     0x1400229c5
   1400229ae:	call   0x14001f2e8
   1400229b3:	mov    QWORD PTR [rax+0x18],rdi
   1400229b7:	mov    rax,QWORD PTR [rbx+0xf8]
   1400229be:	xchg   QWORD PTR [rip+0x3f34b],rax        # 0x140061d10
   1400229c5:	mov    eax,0x1
   1400229ca:	mov    rbx,QWORD PTR [rsp+0x30]
   1400229cf:	add    rsp,0x20
   1400229d3:	pop    rdi
   1400229d4:	ret    
   1400229d5:	int3   
   1400229d6:	int3   
   1400229d7:	int3   
   1400229d8:	rex push rbx
   1400229da:	sub    rsp,0x20
   1400229de:	cmp    QWORD PTR [rcx+0x40],0x0
   1400229e3:	mov    rbx,rcx
   1400229e6:	jne    0x1400229f8
   1400229e8:	call   0x140025f2c
   1400229ed:	test   eax,eax
   1400229ef:	je     0x1400229f8
   1400229f1:	xor    ecx,ecx
   1400229f3:	call   0x1400226fc
   1400229f8:	mov    rcx,rbx
   1400229fb:	add    rsp,0x20
   1400229ff:	pop    rbx
   140022a00:	jmp    0x14001f52c
   140022a05:	int3   
   140022a06:	int3   
   140022a07:	int3   
   140022a08:	mov    QWORD PTR [rsp+0x8],rbx
   140022a0d:	mov    QWORD PTR [rsp+0x10],rbp
   140022a12:	mov    QWORD PTR [rsp+0x18],rsi
   140022a17:	push   rdi
   140022a18:	sub    rsp,0x20
   140022a1c:	mov    edi,r8d
   140022a1f:	mov    rsi,rdx
   140022a22:	mov    rbp,rcx
   140022a25:	call   0x14001f3b8
   140022a2a:	test   rax,rax
   140022a2d:	je     0x140022a41
   140022a2f:	mov    r9,QWORD PTR [rax]
   140022a32:	mov    rcx,rax
   140022a35:	call   QWORD PTR [r9+0xe8]
   140022a3c:	mov    rbx,rax
   140022a3f:	jmp    0x140022a43
   140022a41:	xor    ebx,ebx
   140022a43:	test   rbx,rbx
   140022a46:	jne    0x140022a4e
   140022a48:	call   0x1400218c0
   140022a4d:	int3   
   140022a4e:	and    DWORD PTR [rbp+0xb8],0x0
   140022a55:	mov    rcx,QWORD PTR [rbx+0x40]
   140022a59:	xor    r9d,r9d
   140022a5c:	xor    r8d,r8d
   140022a5f:	mov    edx,0x36a
   140022a64:	call   QWORD PTR [rip+0x20f8e]        # 0x1400439f8
   140022a6a:	mov    r11,QWORD PTR [rbx]
   140022a6d:	mov    r8d,edi
   140022a70:	mov    rdx,rsi
   140022a73:	mov    rcx,rbx
   140022a76:	mov    rbx,QWORD PTR [rsp+0x30]
   140022a7b:	mov    rbp,QWORD PTR [rsp+0x38]
   140022a80:	mov    rsi,QWORD PTR [rsp+0x40]
   140022a85:	add    rsp,0x20
   140022a89:	pop    rdi
   140022a8a:	rex.WB jmp QWORD PTR [r11+0xe8]
   140022a91:	int3   
   140022a92:	int3   
   140022a93:	int3   
   140022a94:	mov    QWORD PTR [rsp+0x8],rbx
   140022a99:	mov    QWORD PTR [rsp+0x10],rbp
   140022a9e:	mov    QWORD PTR [rsp+0x18],rsi
   140022aa3:	push   rdi
   140022aa4:	sub    rsp,0x20
   140022aa8:	mov    edi,r8d
   140022aab:	mov    rsi,rdx
   140022aae:	mov    rbp,rcx
   140022ab1:	call   0x14001f3b8
   140022ab6:	test   rax,rax
   140022ab9:	je     0x140022acd
   140022abb:	mov    r9,QWORD PTR [rax]
   140022abe:	mov    rcx,rax
   140022ac1:	call   QWORD PTR [r9+0xe8]
   140022ac8:	mov    rbx,rax
   140022acb:	jmp    0x140022acf
   140022acd:	xor    ebx,ebx
   140022acf:	test   rbx,rbx
   140022ad2:	jne    0x140022ada
   140022ad4:	call   0x1400218c0
   140022ad9:	int3   
   140022ada:	and    DWORD PTR [rbp+0xb8],0x0
   140022ae1:	mov    rcx,QWORD PTR [rbx+0x40]
   140022ae5:	xor    r9d,r9d
   140022ae8:	xor    r8d,r8d
   140022aeb:	mov    edx,0x36a
   140022af0:	call   QWORD PTR [rip+0x20f02]        # 0x1400439f8
   140022af6:	mov    r11,QWORD PTR [rbx]
   140022af9:	mov    r8d,edi
   140022afc:	mov    rdx,rsi
   140022aff:	mov    rcx,rbx
   140022b02:	mov    rbx,QWORD PTR [rsp+0x30]
   140022b07:	mov    rbp,QWORD PTR [rsp+0x38]
   140022b0c:	mov    rsi,QWORD PTR [rsp+0x40]
   140022b11:	add    rsp,0x20
   140022b15:	pop    rdi
   140022b16:	rex.WB jmp QWORD PTR [r11+0xf0]
   140022b1d:	int3   
   140022b1e:	int3   
   140022b1f:	int3   
   140022b20:	mov    QWORD PTR [rsp+0x8],rbx
   140022b25:	mov    QWORD PTR [rsp+0x10],rbp
   140022b2a:	mov    QWORD PTR [rsp+0x18],rsi
   140022b2f:	push   rdi
   140022b30:	sub    rsp,0x20
   140022b34:	mov    edi,r8d
   140022b37:	mov    rsi,rdx
   140022b3a:	mov    rbp,rcx
   140022b3d:	call   0x14001f3b8
   140022b42:	test   rax,rax
   140022b45:	je     0x140022b59
   140022b47:	mov    r9,QWORD PTR [rax]
   140022b4a:	mov    rcx,rax
   140022b4d:	call   QWORD PTR [r9+0xe8]
   140022b54:	mov    rbx,rax
   140022b57:	jmp    0x140022b5b
   140022b59:	xor    ebx,ebx
   140022b5b:	test   rbx,rbx
   140022b5e:	jne    0x140022b66
   140022b60:	call   0x1400218c0
   140022b65:	int3   
   140022b66:	and    DWORD PTR [rbp+0xb8],0x0
   140022b6d:	mov    rcx,QWORD PTR [rbx+0x40]
   140022b71:	xor    r9d,r9d
   140022b74:	xor    r8d,r8d
   140022b77:	mov    edx,0x36a
   140022b7c:	call   QWORD PTR [rip+0x20e76]        # 0x1400439f8
   140022b82:	mov    r11,QWORD PTR [rbx]
   140022b85:	mov    r8d,edi
   140022b88:	mov    rdx,rsi
   140022b8b:	mov    rcx,rbx
   140022b8e:	mov    rbx,QWORD PTR [rsp+0x30]
   140022b93:	mov    rbp,QWORD PTR [rsp+0x38]
   140022b98:	mov    rsi,QWORD PTR [rsp+0x40]
   140022b9d:	add    rsp,0x20
   140022ba1:	pop    rdi
   140022ba2:	rex.WB jmp QWORD PTR [r11+0xf8]
   140022ba9:	int3   
   140022baa:	int3   
   140022bab:	int3   
   140022bac:	rex push rbx
   140022bae:	sub    rsp,0x20
   140022bb2:	mov    rax,QWORD PTR [rip+0x3dcd7]        # 0x140060890
   140022bb9:	mov    rbx,rcx
   140022bbc:	test   rax,rax
   140022bbf:	je     0x140022bf3
   140022bc1:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   140022bc5:	je     0x140022bf3
   140022bc7:	cmp    QWORD PTR [rip+0x3dcd1],0x0        # 0x1400608a0
   140022bcf:	je     0x140022bee
   140022bd1:	mov    rdx,QWORD PTR [rcx+0x8]
   140022bd5:	test   rdx,rdx
   140022bd8:	je     0x140022bee
   140022bda:	and    QWORD PTR [rcx+0x8],0x0
   140022bdf:	xor    ecx,ecx
   140022be1:	call   QWORD PTR [rip+0x3dcb9]        # 0x1400608a0
   140022be7:	mov    rax,QWORD PTR [rip+0x3dca2]        # 0x140060890
   140022bee:	mov    rcx,QWORD PTR [rbx]
   140022bf1:	call   rax
   140022bf3:	add    rsp,0x20
   140022bf7:	pop    rbx
   140022bf8:	ret    
   140022bf9:	int3   
   140022bfa:	int3   
   140022bfb:	int3   
   140022bfc:	mov    rax,rsp
   140022bff:	push   rbp
   140022c00:	push   rsi
   140022c01:	push   rdi
   140022c02:	push   r12
   140022c04:	push   r13
   140022c06:	sub    rsp,0x530
   140022c0d:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140022c16:	mov    QWORD PTR [rax+0x18],rbx
   140022c1a:	mov    rax,QWORD PTR [rip+0x3835f]        # 0x14005af80
   140022c21:	xor    rax,rsp
   140022c24:	mov    QWORD PTR [rsp+0x520],rax
   140022c2c:	mov    r13,rdx
   140022c2f:	mov    r12,rcx
   140022c32:	and    WORD PTR [rsp+0x30],0x0
   140022c38:	xor    ebx,ebx
   140022c3a:	lea    rcx,[rip+0x24e1f]        # 0x140047a60
   140022c41:	call   QWORD PTR [rip+0x20861]        # 0x1400434a8
   140022c47:	mov    rsi,rax
   140022c4a:	lea    rdx,[rip+0x24def]        # 0x140047a40
   140022c51:	mov    rcx,rax
   140022c54:	call   QWORD PTR [rip+0x20856]        # 0x1400434b0
   140022c5a:	lea    ebp,[rbx+0x1]
   140022c5d:	test   rax,rax
   140022c60:	je     0x140022cf1
   140022c66:	call   rax
   140022c68:	mov    WORD PTR [rsp+0x30],ax
   140022c6d:	movzx  edx,ax
   140022c70:	mov    ecx,edx
   140022c72:	mov    edi,0x3ff
   140022c77:	and    ecx,edi
   140022c79:	movzx  ebx,cx
   140022c7c:	and    dx,0xfc00
   140022c81:	movzx  ecx,dx
   140022c84:	or     ecx,ebx
   140022c86:	call   QWORD PTR [rip+0x20764]        # 0x1400433f0
   140022c8c:	mov    DWORD PTR [rsp+0x58],eax
   140022c90:	mov    ecx,ebx
   140022c92:	call   QWORD PTR [rip+0x20758]        # 0x1400433f0
   140022c98:	mov    DWORD PTR [rsp+0x5c],eax
   140022c9c:	lea    ebx,[rbp+0x1]
   140022c9f:	lea    rdx,[rip+0x24d7a]        # 0x140047a20
   140022ca6:	mov    rcx,rsi
   140022ca9:	call   QWORD PTR [rip+0x20801]        # 0x1400434b0
   140022caf:	test   rax,rax
   140022cb2:	je     0x140022e60
   140022cb8:	call   rax
   140022cba:	mov    WORD PTR [rsp+0x30],ax
   140022cbf:	movzx  ecx,ax
   140022cc2:	mov    eax,ecx
   140022cc4:	and    eax,edi
   140022cc6:	movzx  ebx,ax
   140022cc9:	and    cx,0xfc00
   140022cce:	movzx  ecx,cx
   140022cd1:	or     ecx,ebx
   140022cd3:	call   QWORD PTR [rip+0x20717]        # 0x1400433f0
   140022cd9:	mov    DWORD PTR [rsp+0x60],eax
   140022cdd:	mov    ecx,ebx
   140022cdf:	call   QWORD PTR [rip+0x2070b]        # 0x1400433f0
   140022ce5:	mov    DWORD PTR [rsp+0x64],eax
   140022ce9:	lea    ebx,[rbp+0x3]
   140022cec:	jmp    0x140022e60
   140022cf1:	call   QWORD PTR [rip+0x20701]        # 0x1400433f8
   140022cf7:	bt     eax,0x1f
   140022cfb:	jae    0x140022de6
   140022d01:	and    QWORD PTR [rsp+0xb0],rbx
   140022d09:	lea    rax,[rsp+0xb0]
   140022d11:	mov    QWORD PTR [rsp+0x20],rax
   140022d16:	mov    r9d,0x20019
   140022d1c:	xor    r8d,r8d
   140022d1f:	lea    rdx,[rip+0x24caa]        # 0x1400479d0
   140022d26:	mov    rcx,0xffffffff80000001
   140022d2d:	call   QWORD PTR [rip+0x202fd]        # 0x140043030
   140022d33:	test   eax,eax
   140022d35:	jne    0x140022e60
   140022d3b:	mov    DWORD PTR [rsp+0x4c],0x20
   140022d43:	lea    rax,[rsp+0x4c]
   140022d48:	mov    QWORD PTR [rsp+0x28],rax
   140022d4d:	lea    rax,[rsp+0xb8]
   140022d55:	mov    QWORD PTR [rsp+0x20],rax
   140022d5a:	lea    r9,[rsp+0x48]
   140022d5f:	xor    r8d,r8d
   140022d62:	xor    edx,edx
   140022d64:	mov    rcx,QWORD PTR [rsp+0xb0]
   140022d6c:	call   QWORD PTR [rip+0x202b6]        # 0x140043028
   140022d72:	test   eax,eax
   140022d74:	jne    0x140022dd6
   140022d76:	cmp    DWORD PTR [rsp+0x48],ebp
   140022d7a:	jne    0x140022dd6
   140022d7c:	lea    r8,[rsp+0x50]
   140022d81:	lea    rdx,[rip+0x24c34]        # 0x1400479bc
   140022d88:	lea    rcx,[rsp+0xb8]
   140022d90:	call   0x14002c520
   140022d95:	cmp    eax,ebp
   140022d97:	jne    0x140022dd6
   140022d99:	mov    eax,DWORD PTR [rsp+0x50]
   140022d9d:	mov    WORD PTR [rsp+0x30],ax
   140022da2:	movzx  ecx,ax
   140022da5:	mov    eax,ecx
   140022da7:	mov    edi,0x3ff
   140022dac:	and    eax,edi
   140022dae:	movzx  ebx,ax
   140022db1:	and    cx,0xfc00
   140022db6:	movzx  ecx,cx
   140022db9:	or     ecx,ebx
   140022dbb:	call   QWORD PTR [rip+0x2062f]        # 0x1400433f0
   140022dc1:	mov    DWORD PTR [rsp+0x58],eax
   140022dc5:	mov    ecx,ebx
   140022dc7:	call   QWORD PTR [rip+0x20623]        # 0x1400433f0
   140022dcd:	mov    DWORD PTR [rsp+0x5c],eax
   140022dd1:	mov    ebx,0x2
   140022dd6:	mov    rcx,QWORD PTR [rsp+0xb0]
   140022dde:	call   QWORD PTR [rip+0x2023c]        # 0x140043020
   140022de4:	jmp    0x140022e60
   140022de6:	lea    rcx,[rip+0x24bbb]        # 0x1400479a8
   140022ded:	call   QWORD PTR [rip+0x206b5]        # 0x1400434a8
   140022df3:	test   rax,rax
   140022df6:	je     0x140022e60
   140022df8:	and    WORD PTR [rsp+0x30],bx
   140022dfd:	lea    rcx,[rsp+0x30]
   140022e02:	mov    QWORD PTR [rsp+0x20],rcx
   140022e07:	lea    r9,[rip+0xfffffffffffff5ae]        # 0x1400223bc
   140022e0e:	mov    r8,rbp
   140022e11:	mov    edx,0x10
   140022e16:	mov    rcx,rax
   140022e19:	call   QWORD PTR [rip+0x205e1]        # 0x140043400
   140022e1f:	movzx  r11d,WORD PTR [rsp+0x30]
   140022e25:	test   r11w,r11w
   140022e29:	je     0x140022e60
   140022e2b:	movzx  ecx,r11w
   140022e2f:	mov    eax,ecx
   140022e31:	mov    edi,0x3ff
   140022e36:	and    eax,edi
   140022e38:	movzx  ebx,ax
   140022e3b:	and    cx,0xfc00
   140022e40:	movzx  ecx,cx
   140022e43:	or     ecx,ebx
   140022e45:	call   QWORD PTR [rip+0x205a5]        # 0x1400433f0
   140022e4b:	mov    DWORD PTR [rsp+0x58],eax
   140022e4f:	mov    ecx,ebx
   140022e51:	call   QWORD PTR [rip+0x20599]        # 0x1400433f0
   140022e57:	mov    DWORD PTR [rsp+0x5c],eax
   140022e5b:	mov    ebx,0x2
   140022e60:	movsxd rax,ebx
   140022e63:	mov    DWORD PTR [rsp+rax*4+0x58],0x800
   140022e6b:	add    ebx,ebp
   140022e6d:	and    WORD PTR [rsp+0x2ea],0x0
   140022e76:	and    WORD PTR [rsp+0x2e8],0x0
   140022e7f:	mov    r8d,0x105
   140022e85:	lea    rdx,[rsp+0xe0]
   140022e8d:	lea    rsi,[rip+0xfffffffffffdd16c]        # 0x140000000
   140022e94:	mov    rcx,rsi
   140022e97:	call   QWORD PTR [rip+0x205b3]        # 0x140043450
   140022e9d:	test   eax,eax
   140022e9f:	jne    0x140022ea8
   140022ea1:	xor    eax,eax
   140022ea3:	jmp    0x140023146
   140022ea8:	mov    edi,0x38
   140022ead:	mov    r8,rdi
   140022eb0:	xor    edx,edx
   140022eb2:	lea    rcx,[rsp+0x78]
   140022eb7:	call   0x14002ac20
   140022ebc:	mov    DWORD PTR [rsp+0x78],edi
   140022ec0:	lea    rax,[rsp+0xe0]
   140022ec8:	mov    QWORD PTR [rsp+0x80],rax
   140022ed0:	mov    QWORD PTR [rsp+0x98],0x3e8
   140022edc:	mov    QWORD PTR [rsp+0xa8],rsi
   140022ee4:	mov    DWORD PTR [rsp+0x7c],0x88
   140022eec:	or     rdx,0xffffffffffffffff
   140022ef0:	lea    rcx,[rsp+0x38]
   140022ef5:	call   0x1400223d4
   140022efa:	nop
   140022efb:	mov    rdx,QWORD PTR [rip+0x3d986]        # 0x140060888
   140022f02:	test   rdx,rdx
   140022f05:	je     0x140022f2b
   140022f07:	mov    rax,QWORD PTR [rsp+0x38]
   140022f0c:	cmp    rax,0xffffffffffffffff
   140022f10:	jne    0x140022f5a
   140022f12:	lea    rcx,[rsp+0x78]
   140022f17:	call   rdx
   140022f19:	mov    QWORD PTR [rsp+0x38],rax
   140022f1e:	cmp    rax,0xffffffffffffffff
   140022f22:	setne  cl
   140022f25:	test   cl,cl
   140022f27:	je     0x140022f5a
   140022f29:	jmp    0x140022f30
   140022f2b:	mov    rax,QWORD PTR [rsp+0x38]
   140022f30:	mov    r8,QWORD PTR [rip+0x3d961]        # 0x140060898
   140022f37:	test   r8,r8
   140022f3a:	je     0x140022f5a
   140022f3c:	cmp    rax,0xffffffffffffffff
   140022f40:	je     0x140022f5a
   140022f42:	cmp    QWORD PTR [rsp+0x40],0x0
   140022f48:	jne    0x140022f5a
   140022f4a:	lea    rdx,[rsp+0x40]
   140022f4f:	mov    rcx,rax
   140022f52:	call   r8
   140022f55:	mov    rax,QWORD PTR [rsp+0x38]
   140022f5a:	xor    edi,edi
   140022f5c:	movsxd rbp,ebx
   140022f5f:	test   ebx,ebx
   140022f61:	jle    0x1400230ff
   140022f67:	mov    ecx,DWORD PTR [rsp+rdi*4+0x58]
   140022f6b:	cmp    ecx,0x800
   140022f71:	jne    0x140022fb6
   140022f73:	lea    r8,[rip+0x249fe]        # 0x140047978
   140022f7a:	mov    edx,0x4
   140022f7f:	lea    rcx,[rsp+0xb0]
   140022f87:	call   0x14002a9a0
   140022f8c:	test   eax,eax
   140022f8e:	je     0x140022fd6
   140022f90:	cmp    eax,0xc
   140022f93:	je     0x140023088
   140022f99:	cmp    eax,0x16
   140022f9c:	je     0x140023082
   140022fa2:	cmp    eax,0x22
   140022fa5:	je     0x140023082
   140022fab:	cmp    eax,0x50
   140022fae:	jne    0x14002307c
   140022fb4:	jmp    0x140022fd6
   140022fb6:	mov    r9d,0x4
   140022fbc:	lea    r8,[rsp+0xb0]
   140022fc4:	lea    edx,[r9-0x1]
   140022fc8:	call   QWORD PTR [rip+0x20442]        # 0x140043410
   140022fce:	test   eax,eax
   140022fd0:	je     0x14002306a
   140022fd6:	call   0x14002bca0
   140022fdb:	mov    esi,DWORD PTR [rax]
   140022fdd:	call   0x14002bca0
   140022fe2:	and    DWORD PTR [rax],0x0
   140022fe5:	lea    rax,[rsp+0xb0]
   140022fed:	mov    QWORD PTR [rsp+0x28],rax
   140022ff2:	mov    QWORD PTR [rsp+0x20],r13
   140022ff7:	mov    r9,r12
   140022ffa:	mov    edx,0x112
   140022fff:	lea    r8d,[rdx-0x1]
   140023003:	lea    rcx,[rsp+0x2f0]
   14002300b:	call   0x14002bc20
   140023010:	mov    ebx,eax
   140023012:	call   0x14002bca0
   140023017:	cmp    DWORD PTR [rax],0x0
   14002301a:	je     0x14002303c
   14002301c:	call   0x14002bca0
   140023021:	cmp    DWORD PTR [rax],0x0
   140023024:	je     0x140023043
   140023026:	cmp    DWORD PTR [rax],0xc
   140023029:	je     0x1400230a4
   14002302b:	cmp    DWORD PTR [rax],0x16
   14002302e:	je     0x140023099
   140023030:	cmp    DWORD PTR [rax],0x22
   140023033:	je     0x140023099
   140023035:	cmp    DWORD PTR [rax],0x50
   140023038:	jne    0x14002308e
   14002303a:	jmp    0x140023043
   14002303c:	call   0x14002bca0
   140023041:	mov    DWORD PTR [rax],esi
   140023043:	cmp    ebx,0xffffffff
   140023046:	je     0x140023063
   140023048:	cmp    ebx,0x112
   14002304e:	jae    0x140023063
   140023050:	lea    rcx,[rsp+0x2f0]
   140023058:	call   QWORD PTR [rip+0x2041a]        # 0x140043478
   14002305e:	mov    rbx,rax
   140023061:	jmp    0x140023065
   140023063:	xor    ebx,ebx
   140023065:	test   rbx,rbx
   140023068:	jne    0x1400230af
   14002306a:	add    rdi,0x1
   14002306e:	cmp    rdi,rbp
   140023071:	jge    0x1400230fa
   140023077:	jmp    0x140022f67
   14002307c:	call   0x1400218c0
   140023081:	int3   
   140023082:	call   0x1400218c0
   140023087:	int3   
   140023088:	call   0x140021878
   14002308d:	int3   
   14002308e:	mov    ecx,0x80004005
   140023093:	call   0x140003dc0
   140023098:	int3   
   140023099:	mov    ecx,0x80070057
   14002309e:	call   0x140003dc0
   1400230a3:	int3   
   1400230a4:	mov    ecx,0x8007000e
   1400230a9:	call   0x140003dc0
   1400230ae:	nop
   1400230af:	mov    rax,QWORD PTR [rip+0x3d7da]        # 0x140060890
   1400230b6:	test   rax,rax
   1400230b9:	je     0x1400230f5
   1400230bb:	mov    rcx,QWORD PTR [rsp+0x38]
   1400230c0:	cmp    rcx,0xffffffffffffffff
   1400230c4:	je     0x1400230f5
   1400230c6:	mov    r8,QWORD PTR [rip+0x3d7d3]        # 0x1400608a0
   1400230cd:	test   r8,r8
   1400230d0:	je     0x1400230f3
   1400230d2:	mov    rdx,QWORD PTR [rsp+0x40]
   1400230d7:	test   rdx,rdx
   1400230da:	je     0x1400230f3
   1400230dc:	and    QWORD PTR [rsp+0x40],0x0
   1400230e2:	xor    ecx,ecx
   1400230e4:	call   r8
   1400230e7:	mov    rax,QWORD PTR [rip+0x3d7a2]        # 0x140060890
   1400230ee:	mov    rcx,QWORD PTR [rsp+0x38]
   1400230f3:	call   rax
   1400230f5:	mov    rax,rbx
   1400230f8:	jmp    0x140023146
   1400230fa:	mov    rax,QWORD PTR [rsp+0x38]
   1400230ff:	mov    r8,QWORD PTR [rip+0x3d78a]        # 0x140060890
   140023106:	test   r8,r8
   140023109:	je     0x140023144
   14002310b:	cmp    rax,0xffffffffffffffff
   14002310f:	je     0x140023144
   140023111:	mov    r9,QWORD PTR [rip+0x3d788]        # 0x1400608a0
   140023118:	test   r9,r9
   14002311b:	je     0x14002313e
   14002311d:	mov    rdx,QWORD PTR [rsp+0x40]
   140023122:	test   rdx,rdx
   140023125:	je     0x14002313e
   140023127:	and    QWORD PTR [rsp+0x40],0x0
   14002312d:	xor    ecx,ecx
   14002312f:	call   r9
   140023132:	mov    r8,QWORD PTR [rip+0x3d757]        # 0x140060890
   140023139:	mov    rax,QWORD PTR [rsp+0x38]
   14002313e:	mov    rcx,rax
   140023141:	call   r8
   140023144:	xor    eax,eax
   140023146:	mov    rcx,QWORD PTR [rsp+0x520]
   14002314e:	xor    rcx,rsp
   140023151:	call   0x140029b40
   140023156:	mov    rbx,QWORD PTR [rsp+0x570]
   14002315e:	add    rsp,0x530
   140023165:	pop    r13
   140023167:	pop    r12
   140023169:	pop    rdi
   14002316a:	pop    rsi
   14002316b:	pop    rbp
   14002316c:	ret    
   14002316d:	int3   
   14002316e:	int3   
   14002316f:	int3   
   140023170:	int3   
   140023171:	int3   
   140023172:	int3   
   140023173:	int3   
   140023174:	int3   
   140023175:	int3   
   140023176:	int3   
   140023177:	int3   
   140023178:	int3   
   140023179:	int3   
   14002317a:	int3   
   14002317b:	int3   
   14002317c:	rex push rbp
   14002317e:	sub    rsp,0x20
   140023182:	mov    rbp,rdx
   140023185:	lea    rcx,[rbp+0x38]
   140023189:	call   0x140022bac
   14002318e:	add    rsp,0x20
   140023192:	pop    rbp
   140023193:	ret    
   140023194:	sub    rsp,0x268
   14002319b:	mov    rax,QWORD PTR [rip+0x37dde]        # 0x14005af80
   1400231a2:	xor    rax,rsp
   1400231a5:	mov    QWORD PTR [rsp+0x250],rax
   1400231ad:	mov    rcx,QWORD PTR [rcx+0x88]
   1400231b4:	lea    rdx,[rsp+0x40]
   1400231b9:	mov    r8d,0x104
   1400231bf:	call   QWORD PTR [rip+0x2028b]        # 0x140043450
   1400231c5:	test   eax,eax
   1400231c7:	je     0x140023215
   1400231c9:	cmp    eax,0x104
   1400231ce:	je     0x140023215
   1400231d0:	lea    rcx,[rsp+0x40]
   1400231d5:	call   QWORD PTR [rip+0x2044d]        # 0x140043628
   1400231db:	lea    rcx,[rsp+0x20]
   1400231e0:	lea    rdx,[rsp+0x40]
   1400231e5:	and    WORD PTR [rax],0x0
   1400231e9:	mov    rax,QWORD PTR [rip+0x24890]        # 0x140047a80
   1400231f0:	mov    QWORD PTR [rcx],rax
   1400231f3:	mov    rax,QWORD PTR [rip+0x2488e]        # 0x140047a88
   1400231fa:	mov    QWORD PTR [rcx+0x8],rax
   1400231fe:	movzx  eax,WORD PTR [rip+0x2488b]        # 0x140047a90
   140023205:	mov    WORD PTR [rcx+0x10],ax
   140023209:	lea    rcx,[rsp+0x20]
   14002320e:	call   0x140022bfc
   140023213:	jmp    0x140023217
   140023215:	xor    eax,eax
   140023217:	mov    rcx,QWORD PTR [rsp+0x250]
   14002321f:	xor    rcx,rsp
   140023222:	call   0x140029b40
   140023227:	add    rsp,0x268
   14002322e:	ret    
   14002322f:	int3   
   140023230:	mov    QWORD PTR [rsp+0x8],rcx
   140023235:	push   rdi
   140023236:	sub    rsp,0x30
   14002323a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023243:	mov    QWORD PTR [rsp+0x48],rbx
   140023248:	mov    QWORD PTR [rsp+0x50],rsi
   14002324d:	mov    rdi,rdx
   140023250:	mov    rbx,rcx
   140023253:	call   0x14001f874
   140023258:	nop
   140023259:	lea    rax,[rip+0x24868]        # 0x140047ac8
   140023260:	mov    QWORD PTR [rbx],rax
   140023263:	xor    esi,esi
   140023265:	cmp    rdi,rsi
   140023268:	je     0x14002327b
   14002326a:	mov    rcx,rdi
   14002326d:	call   0x14002c050
   140023272:	mov    QWORD PTR [rbx+0xa0],rax
   140023279:	jmp    0x140023282
   14002327b:	mov    QWORD PTR [rbx+0xa0],rsi
   140023282:	call   0x14001f2e8
   140023287:	mov    rdi,rax
   14002328a:	mov    ecx,esi
   14002328c:	cmp    rax,rsi
   14002328f:	setne  cl
   140023292:	cmp    ecx,esi
   140023294:	jne    0x14002329c
   140023296:	call   0x1400218c0
   14002329b:	int3   
   14002329c:	lea    rcx,[rax+0xc0]
   1400232a3:	lea    rdx,[rip+0xffffffffffffb722]        # 0x14001e9cc
   1400232aa:	call   0x14002514c
   1400232af:	mov    ecx,esi
   1400232b1:	cmp    rax,rsi
   1400232b4:	setne  cl
   1400232b7:	cmp    ecx,esi
   1400232b9:	jne    0x1400232c1
   1400232bb:	call   0x1400218c0
   1400232c0:	int3   
   1400232c1:	cmp    ecx,esi
   1400232c3:	jne    0x1400232cb
   1400232c5:	call   0x1400218c0
   1400232ca:	int3   
   1400232cb:	mov    QWORD PTR [rax+0x8],rbx
   1400232cf:	call   QWORD PTR [rip+0x20113]        # 0x1400433e8
   1400232d5:	mov    QWORD PTR [rbx+0x58],rax
   1400232d9:	call   QWORD PTR [rip+0x201e1]        # 0x1400434c0
   1400232df:	mov    DWORD PTR [rbx+0x60],eax
   1400232e2:	mov    QWORD PTR [rdi+0x8],rbx
   1400232e6:	mov    QWORD PTR [rbx+0x88],rsi
   1400232ed:	mov    QWORD PTR [rbx+0xf8],rsi
   1400232f4:	mov    QWORD PTR [rbx+0xc8],rsi
   1400232fb:	mov    QWORD PTR [rbx+0xd0],rsi
   140023302:	mov    QWORD PTR [rbx+0xa8],rsi
   140023309:	mov    QWORD PTR [rbx+0xc0],rsi
   140023310:	mov    QWORD PTR [rbx+0x110],rsi
   140023317:	mov    QWORD PTR [rbx+0xb0],rsi
   14002331e:	mov    WORD PTR [rbx+0x122],si
   140023325:	mov    WORD PTR [rbx+0x120],si
   14002332c:	mov    QWORD PTR [rbx+0x90],rsi
   140023333:	mov    QWORD PTR [rbx+0x118],rsi
   14002333a:	mov    DWORD PTR [rbx+0x100],esi
   140023340:	mov    QWORD PTR [rbx+0x108],rsi
   140023347:	mov    QWORD PTR [rbx+0xe0],rsi
   14002334e:	mov    QWORD PTR [rbx+0xe8],rsi
   140023355:	mov    DWORD PTR [rbx+0x124],esi
   14002335b:	mov    QWORD PTR [rbx+0x130],rsi
   140023362:	mov    DWORD PTR [rbx+0xb8],esi
   140023368:	mov    DWORD PTR [rbx+0xd8],esi
   14002336e:	mov    QWORD PTR [rbx+0x128],0x200
   140023379:	mov    rax,rbx
   14002337c:	mov    rbx,QWORD PTR [rsp+0x48]
   140023381:	mov    rsi,QWORD PTR [rsp+0x50]
   140023386:	add    rsp,0x30
   14002338a:	pop    rdi
   14002338b:	ret    
   14002338c:	int3   
   14002338d:	int3   
   14002338e:	int3   
   14002338f:	int3   
   140023390:	rex push rbp
   140023392:	sub    rsp,0x20
   140023396:	mov    rbp,rdx
   140023399:	mov    rcx,QWORD PTR [rbp+0x40]
   14002339d:	call   0x14001f4a8
   1400233a2:	add    rsp,0x20
   1400233a6:	pop    rbp
   1400233a7:	ret    
   1400233a8:	rex push rbx
   1400233aa:	sub    rsp,0x460
   1400233b1:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   1400233ba:	mov    rax,QWORD PTR [rip+0x37bbf]        # 0x14005af80
   1400233c1:	xor    rax,rsp
   1400233c4:	mov    QWORD PTR [rsp+0x450],rax
   1400233cc:	mov    rbx,rcx
   1400233cf:	mov    QWORD PTR [rsp+0x38],rcx
   1400233d4:	lea    rax,[rip+0x246ed]        # 0x140047ac8
   1400233db:	mov    QWORD PTR [rcx],rax
   1400233de:	mov    rcx,QWORD PTR [rcx+0xb0]
   1400233e5:	test   rcx,rcx
   1400233e8:	je     0x1400233f5
   1400233ea:	mov    rax,QWORD PTR [rcx]
   1400233ed:	mov    edx,0x1
   1400233f2:	call   QWORD PTR [rax+0x8]
   1400233f5:	mov    rcx,QWORD PTR [rbx+0x110]
   1400233fc:	test   rcx,rcx
   1400233ff:	je     0x14002340c
   140023401:	mov    rax,QWORD PTR [rcx]
   140023404:	mov    edx,0x1
   140023409:	call   QWORD PTR [rax+0x30]
   14002340c:	call   0x14001f2e8
   140023411:	cmp    BYTE PTR [rax+0x28],0x0
   140023415:	jne    0x140023455
   140023417:	mov    rcx,QWORD PTR [rip+0x3d462]        # 0x140060880
   14002341e:	test   rcx,rcx
   140023421:	je     0x140023436
   140023423:	mov    rax,QWORD PTR [rcx]
   140023426:	mov    edx,0x1
   14002342b:	call   QWORD PTR [rax+0x8]
   14002342e:	and    QWORD PTR [rip+0x3d44a],0x0        # 0x140060880
   140023436:	mov    rcx,QWORD PTR [rip+0x3d43b]        # 0x140060878
   14002343d:	test   rcx,rcx
   140023440:	je     0x140023455
   140023442:	mov    rax,QWORD PTR [rcx]
   140023445:	mov    edx,0x1
   14002344a:	call   QWORD PTR [rax+0x8]
   14002344d:	and    QWORD PTR [rip+0x3d423],0x0        # 0x140060878
   140023455:	mov    rcx,QWORD PTR [rbx+0xe0]
   14002345c:	test   rcx,rcx
   14002345f:	je     0x140023466
   140023461:	call   0x1400244cc
   140023466:	mov    rcx,QWORD PTR [rbx+0xe8]
   14002346d:	test   rcx,rcx
   140023470:	je     0x140023477
   140023472:	call   0x1400244cc
   140023477:	movzx  ecx,WORD PTR [rbx+0x120]
   14002347e:	test   cx,cx
   140023481:	je     0x140023489
   140023483:	call   QWORD PTR [rip+0x1ffe7]        # 0x140043470
   140023489:	movzx  ecx,WORD PTR [rbx+0x122]
   140023490:	test   cx,cx
   140023493:	je     0x14002349b
   140023495:	call   QWORD PTR [rip+0x1ffd5]        # 0x140043470
   14002349b:	mov    rcx,QWORD PTR [rbx+0x118]
   1400234a2:	test   rcx,rcx
   1400234a5:	je     0x1400234b2
   1400234a7:	mov    rax,QWORD PTR [rcx]
   1400234aa:	mov    edx,0x1
   1400234af:	call   QWORD PTR [rax+0x8]
   1400234b2:	call   0x14001f2e8
   1400234b7:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400234be:	cmp    QWORD PTR [rax+0x20],rcx
   1400234c2:	jne    0x1400234c9
   1400234c4:	and    QWORD PTR [rax+0x20],0x0
   1400234c9:	cmp    QWORD PTR [rax+0x8],rbx
   1400234cd:	jne    0x1400234d4
   1400234cf:	and    QWORD PTR [rax+0x8],0x0
   1400234d4:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400234db:	call   0x14002a380
   1400234e0:	mov    rcx,QWORD PTR [rbx+0xa8]
   1400234e7:	call   0x14002a380
   1400234ec:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400234f3:	call   0x14002a380
   1400234f8:	mov    rcx,QWORD PTR [rbx+0xc8]
   1400234ff:	call   0x14002a380
   140023504:	mov    rcx,QWORD PTR [rbx+0xd0]
   14002350b:	call   0x14002a380
   140023510:	and    QWORD PTR [rbx+0x58],0x0
   140023515:	jmp    0x14002351c
   140023517:	mov    rbx,QWORD PTR [rsp+0x38]
   14002351c:	mov    rcx,rbx
   14002351f:	call   0x14001f4a8
   140023524:	mov    rcx,QWORD PTR [rsp+0x450]
   14002352c:	xor    rcx,rsp
   14002352f:	call   0x140029b40
   140023534:	add    rsp,0x460
   14002353b:	pop    rbx
   14002353c:	ret    
   14002353d:	int3   
   14002353e:	int3   
   14002353f:	int3   
   140023540:	int3   
   140023541:	int3   
   140023542:	int3   
   140023543:	int3   
   140023544:	int3   
   140023545:	int3   
   140023546:	int3   
   140023547:	int3   
   140023548:	rex push rbp
   14002354a:	sub    rsp,0x20
   14002354e:	mov    rbp,rdx
   140023551:	mov    rcx,QWORD PTR [rbp+0x38]
   140023555:	call   0x14001f4a8
   14002355a:	add    rsp,0x20
   14002355e:	pop    rbp
   14002355f:	ret    
   140023560:	int3   
   140023561:	int3   
   140023562:	int3   
   140023563:	int3   
   140023564:	int3   
   140023565:	int3   
   140023566:	int3   
   140023567:	int3   
   140023568:	mov    QWORD PTR [rsp+0x10],rdx
   14002356d:	push   rbx
   14002356e:	push   rbp
   14002356f:	sub    rsp,0x38
   140023573:	mov    rbp,rdx
   140023576:	call   0x14002157c
   14002357b:	mov    r11,rax
   14002357e:	xor    ecx,ecx
   140023580:	test   rax,rax
   140023583:	setne  cl
   140023586:	test   ecx,ecx
   140023588:	jne    0x140023595
   14002358a:	mov    ecx,0x80004005
   14002358f:	call   0x140003dc0
   140023594:	int3   
   140023595:	mov    rax,QWORD PTR [rax]
   140023598:	mov    rcx,r11
   14002359b:	call   QWORD PTR [rax+0x18]
   14002359e:	add    rax,0x18
   1400235a2:	mov    QWORD PTR [rbp+0x30],rax
   1400235a6:	mov    rcx,QWORD PTR [rbp+0x40]
   1400235aa:	mov    rax,QWORD PTR [rcx]
   1400235ad:	xor    r9d,r9d
   1400235b0:	mov    r8d,0x200
   1400235b6:	lea    rdx,[rbp+0x50]
   1400235ba:	call   QWORD PTR [rax+0x18]
   1400235bd:	test   eax,eax
   1400235bf:	je     0x1400235f2
   1400235c1:	lea    rax,[rbp+0x50]
   1400235c5:	mov    QWORD PTR [rsp+0x28],rax
   1400235ca:	mov    DWORD PTR [rsp+0x20],0x33f
   1400235d2:	lea    r9,[rip+0x24687]        # 0x140047c60
   1400235d9:	lea    r8,[rip+0x276c0]        # 0x14004aca0
   1400235e0:	lea    rdx,[rip+0x276d9]        # 0x14004acc0
   1400235e7:	lea    rcx,[rbp+0x30]
   1400235eb:	call   0x140005a00
   1400235f0:	jmp    0x140023618
   1400235f2:	mov    DWORD PTR [rsp+0x20],0x33f
   1400235fa:	lea    r9,[rip+0x2465f]        # 0x140047c60
   140023601:	lea    r8,[rip+0x27698]        # 0x14004aca0
   140023608:	lea    rdx,[rip+0x276d1]        # 0x14004ace0
   14002360f:	lea    rcx,[rbp+0x30]
   140023613:	call   0x140005a00
   140023618:	xor    r8d,r8d
   14002361b:	xor    edx,edx
   14002361d:	mov    rbx,QWORD PTR [rbp+0x30]
   140023621:	mov    rcx,rbx
   140023624:	call   0x140021d08
   140023629:	nop
   14002362a:	lea    rdx,[rbx-0x18]
   14002362e:	or     eax,0xffffffff
   140023631:	lock xadd DWORD PTR [rdx+0x10],eax
   140023636:	add    eax,0xffffffff
   140023639:	test   eax,eax
   14002363b:	jg     0x140023646
   14002363d:	mov    rcx,QWORD PTR [rdx]
   140023640:	mov    rax,QWORD PTR [rcx]
   140023643:	call   QWORD PTR [rax+0x8]
   140023646:	mov    rcx,QWORD PTR [rbp+0x40]
   14002364a:	mov    rax,QWORD PTR [rcx]
   14002364d:	mov    edx,0x1
   140023652:	call   QWORD PTR [rax+0x8]
   140023655:	nop
   140023656:	lea    rax,[rip+0xfffffffffffffeba]        # 0x140023517
   14002365d:	jmp    0x14002365f
   14002365f:	add    rsp,0x38
   140023663:	pop    rbp
   140023664:	pop    rbx
   140023665:	ret    
   140023666:	int3   
   140023667:	int3   
   140023668:	rex push rbp
   14002366a:	sub    rsp,0x20
   14002366e:	mov    rbp,rdx
   140023671:	lea    rcx,[rbp+0x30]
   140023675:	call   0x140003de0
   14002367a:	add    rsp,0x20
   14002367e:	pop    rbp
   14002367f:	ret    
   140023680:	mov    QWORD PTR [rsp+0x8],rbx
   140023685:	push   rdi
   140023686:	sub    rsp,0x20
   14002368a:	mov    ebx,edx
   14002368c:	mov    rdi,rcx
   14002368f:	call   0x1400233a8
   140023694:	test   bl,0x1
   140023697:	je     0x1400236a1
   140023699:	mov    rcx,rdi
   14002369c:	call   0x14001490c
   1400236a1:	mov    rax,rdi
   1400236a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400236a9:	add    rsp,0x20
   1400236ad:	pop    rdi
   1400236ae:	ret    
   1400236af:	int3   
   1400236b0:	rex push rbx
   1400236b2:	sub    rsp,0x20
   1400236b6:	mov    edx,DWORD PTR [rcx+0xf0]
   1400236bc:	test   edx,edx
   1400236be:	je     0x1400236d9
   1400236c0:	cmp    edx,0x3f107
   1400236c6:	je     0x140023720
   1400236c8:	mov    rax,QWORD PTR [rcx]
   1400236cb:	mov    r8d,0x1
   1400236d1:	call   QWORD PTR [rax+0x158]
   1400236d7:	jmp    0x140023720
   1400236d9:	call   0x14001f3b8
   1400236de:	test   rax,rax
   1400236e1:	je     0x1400236f4
   1400236e3:	mov    rdx,QWORD PTR [rax]
   1400236e6:	mov    rcx,rax
   1400236e9:	call   QWORD PTR [rdx+0xe8]
   1400236ef:	mov    rbx,rax
   1400236f2:	jmp    0x1400236f6
   1400236f4:	xor    ebx,ebx
   1400236f6:	test   rbx,rbx
   1400236f9:	jne    0x140023701
   1400236fb:	call   0x1400218c0
   140023700:	int3   
   140023701:	mov    rax,QWORD PTR [rbx]
   140023704:	mov    rcx,rbx
   140023707:	call   QWORD PTR [rax+0x240]
   14002370d:	mov    rcx,rbx
   140023710:	test   eax,eax
   140023712:	jne    0x14002371b
   140023714:	call   0x140027aa4
   140023719:	jmp    0x140023720
   14002371b:	call   0x140027b84
   140023720:	add    rsp,0x20
   140023724:	pop    rbx
   140023725:	ret    
   140023726:	int3   
   140023727:	int3   
   140023728:	sub    rsp,0x28
   14002372c:	cmp    QWORD PTR [rcx+0xb0],0x0
   140023734:	jne    0x14002373a
   140023736:	xor    eax,eax
   140023738:	jmp    0x140023747
   14002373a:	mov    rcx,QWORD PTR [rcx+0xb0]
   140023741:	mov    rax,QWORD PTR [rcx]
   140023744:	call   QWORD PTR [rax+0x20]
   140023747:	add    rsp,0x28
   14002374b:	ret    
   14002374c:	mov    QWORD PTR [rsp+0x8],rcx
   140023751:	push   rbp
   140023752:	push   rsi
   140023753:	push   rdi
   140023754:	sub    rsp,0x40
   140023758:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140023761:	mov    QWORD PTR [rsp+0x70],rbx
   140023766:	mov    rdi,r8
   140023769:	mov    rbp,rdx
   14002376c:	mov    rsi,rcx
   14002376f:	xor    ebx,ebx
   140023771:	mov    DWORD PTR [rsp+0x68],ebx
   140023775:	mov    rax,QWORD PTR [rdx]
   140023778:	mov    rcx,QWORD PTR [rax-0x18]
   14002377c:	cmp    rcx,rbx
   14002377f:	je     0x14002378c
   140023781:	mov    rax,QWORD PTR [rcx]
   140023784:	call   QWORD PTR [rax+0x20]
   140023787:	mov    r11,rax
   14002378a:	jmp    0x14002378f
   14002378c:	mov    r11,rbx
   14002378f:	cmp    r11,rbx
   140023792:	jne    0x1400237a5
   140023794:	call   0x14002157c
   140023799:	mov    rdx,QWORD PTR [rax]
   14002379c:	mov    rcx,rax
   14002379f:	call   QWORD PTR [rdx+0x20]
   1400237a2:	mov    r11,rax
   1400237a5:	mov    ecx,ebx
   1400237a7:	cmp    r11,rbx
   1400237aa:	setne  cl
   1400237ad:	cmp    ecx,ebx
   1400237af:	jne    0x1400237bc
   1400237b1:	mov    ecx,0x80004005
   1400237b6:	call   0x140003dc0
   1400237bb:	int3   
   1400237bc:	mov    rax,QWORD PTR [r11]
   1400237bf:	mov    rcx,r11
   1400237c2:	call   QWORD PTR [rax+0x18]
   1400237c5:	add    rax,0x18
   1400237c9:	mov    QWORD PTR [rsi],rax
   1400237cc:	mov    DWORD PTR [rsp+0x68],0x1
   1400237d4:	cmp    rdi,rbx
   1400237d7:	je     0x1400237e3
   1400237d9:	mov    rcx,rdi
   1400237dc:	call   0x14002ad10
   1400237e1:	mov    ebx,eax
   1400237e3:	mov    rdx,QWORD PTR [rbp+0x0]
   1400237e7:	mov    DWORD PTR [rsp+0x20],ebx
   1400237eb:	mov    r9,rdi
   1400237ee:	mov    r8d,DWORD PTR [rdx-0x10]
   1400237f2:	mov    rcx,rsi
   1400237f5:	call   0x14000d720
   1400237fa:	mov    rax,rsi
   1400237fd:	mov    rbx,QWORD PTR [rsp+0x70]
   140023802:	add    rsp,0x40
   140023806:	pop    rdi
   140023807:	pop    rsi
   140023808:	pop    rbp
   140023809:	ret    
   14002380a:	int3   
   14002380b:	int3   
   14002380c:	rex push rbp
   14002380e:	sub    rsp,0x20
   140023812:	mov    rbp,rdx
   140023815:	mov    eax,DWORD PTR [rbp+0x68]
   140023818:	and    eax,0x1
   14002381b:	test   eax,eax
   14002381d:	je     0x14002382c
   14002381f:	and    DWORD PTR [rbp+0x68],0xfffffffe
   140023823:	mov    rcx,QWORD PTR [rbp+0x60]
   140023827:	call   0x140003de0
   14002382c:	add    rsp,0x20
   140023830:	pop    rbp
   140023831:	ret    
   140023832:	int3   
   140023833:	int3   
   140023834:	mov    rax,rsp
   140023837:	push   rdi
   140023838:	sub    rsp,0x280
   14002383f:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140023848:	mov    QWORD PTR [rax+0x18],rbx
   14002384c:	mov    QWORD PTR [rax+0x20],rsi
   140023850:	mov    rax,QWORD PTR [rip+0x37729]        # 0x14005af80
   140023857:	xor    rax,rsp
   14002385a:	mov    QWORD PTR [rsp+0x270],rax
   140023862:	mov    rsi,rdx
   140023865:	mov    rdi,rcx
   140023868:	mov    QWORD PTR [rsp+0x38],rcx
   14002386d:	mov    QWORD PTR [rsp+0x40],rdx
   140023872:	lea    r8,[rsp+0x30]
   140023877:	mov    rdx,QWORD PTR [rdx]
   14002387a:	call   QWORD PTR [rip+0x1f7c0]        # 0x140043040
   140023880:	mov    ebx,eax
   140023882:	test   eax,eax
   140023884:	jne    0x140023933
   14002388a:	mov    r9d,0x104
   140023890:	lea    r8,[rsp+0x60]
   140023895:	xor    edx,edx
   140023897:	mov    rcx,QWORD PTR [rsp+0x30]
   14002389c:	call   QWORD PTR [rip+0x1f76e]        # 0x140043010
   1400238a2:	mov    ebx,eax
   1400238a4:	test   eax,eax
   1400238a6:	jne    0x14002390a
   1400238a8:	lea    rdx,[rsp+0x60]
   1400238ad:	lea    rcx,[rsp+0x28]
   1400238b2:	call   0x140006f30
   1400238b7:	nop
   1400238b8:	lea    rdx,[rsp+0x28]
   1400238bd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400238c2:	call   0x140023834
   1400238c7:	mov    ebx,eax
   1400238c9:	test   eax,eax
   1400238cb:	setne  BYTE PTR [rsp+0x20]
   1400238d0:	mov    rdx,QWORD PTR [rsp+0x28]
   1400238d5:	add    rdx,0xffffffffffffffe8
   1400238d9:	or     eax,0xffffffff
   1400238dc:	lock xadd DWORD PTR [rdx+0x10],eax
   1400238e1:	add    eax,0xffffffff
   1400238e4:	test   eax,eax
   1400238e6:	jg     0x1400238f1
   1400238e8:	mov    rcx,QWORD PTR [rdx]
   1400238eb:	mov    rax,QWORD PTR [rcx]
   1400238ee:	call   QWORD PTR [rax+0x8]
   1400238f1:	cmp    BYTE PTR [rsp+0x20],0x0
   1400238f6:	je     0x1400238fa
   1400238f8:	jmp    0x14002390a
   1400238fa:	jmp    0x14002388a
   1400238fc:	mov    ebx,DWORD PTR [rsp+0x28]
   140023900:	mov    rdi,QWORD PTR [rsp+0x38]
   140023905:	mov    rsi,QWORD PTR [rsp+0x40]
   14002390a:	cmp    ebx,0x103
   140023910:	je     0x14002391a
   140023912:	cmp    ebx,0x3f2
   140023918:	jne    0x140023928
   14002391a:	mov    rdx,QWORD PTR [rsi]
   14002391d:	mov    rcx,rdi
   140023920:	call   QWORD PTR [rip+0x1f6f2]        # 0x140043018
   140023926:	mov    ebx,eax
   140023928:	mov    rcx,QWORD PTR [rsp+0x30]
   14002392d:	call   QWORD PTR [rip+0x1f6ed]        # 0x140043020
   140023933:	mov    eax,ebx
   140023935:	mov    rcx,QWORD PTR [rsp+0x270]
   14002393d:	xor    rcx,rsp
   140023940:	call   0x140029b40
   140023945:	lea    r11,[rsp+0x280]
   14002394d:	mov    rbx,QWORD PTR [r11+0x20]
   140023951:	mov    rsi,QWORD PTR [r11+0x28]
   140023955:	mov    rsp,r11
   140023958:	pop    rdi
   140023959:	ret    
   14002395a:	int3   
   14002395b:	int3   
   14002395c:	int3   
   14002395d:	int3   
   14002395e:	int3   
   14002395f:	int3   
   140023960:	int3   
   140023961:	int3   
   140023962:	int3   
   140023963:	int3   
   140023964:	rex push rbp
   140023966:	sub    rsp,0x20
   14002396a:	mov    rbp,rdx
   14002396d:	lea    rcx,[rbp+0x28]
   140023971:	call   0x140003de0
   140023976:	add    rsp,0x20
   14002397a:	pop    rbp
   14002397b:	ret    
   14002397c:	int3   
   14002397d:	int3   
   14002397e:	int3   
   14002397f:	int3   
   140023980:	int3   
   140023981:	int3   
   140023982:	int3   
   140023983:	int3   
   140023984:	mov    QWORD PTR [rsp+0x10],rdx
   140023989:	push   rbp
   14002398a:	sub    rsp,0x20
   14002398e:	mov    rbp,rdx
   140023991:	mov    DWORD PTR [rbp+0x28],0x8
   140023998:	mov    rcx,QWORD PTR [rbp+0x50]
   14002399c:	call   0x140021780
   1400239a1:	nop
   1400239a2:	lea    rax,[rip+0xffffffffffffff53]        # 0x1400238fc
   1400239a9:	jmp    0x1400239ab
   1400239ab:	add    rsp,0x20
   1400239af:	pop    rbp
   1400239b0:	ret    
   1400239b1:	int3   
   1400239b2:	int3   
   1400239b3:	int3   
   1400239b4:	mov    rax,rsp
   1400239b7:	push   rdi
   1400239b8:	sub    rsp,0x290
   1400239bf:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   1400239c8:	mov    QWORD PTR [rax+0x10],rbx
   1400239cc:	mov    rax,QWORD PTR [rip+0x375ad]        # 0x14005af80
   1400239d3:	xor    rax,rsp
   1400239d6:	mov    QWORD PTR [rsp+0x280],rax
   1400239de:	mov    rbx,rcx
   1400239e1:	and    QWORD PTR [rsp+0x40],0x0
   1400239e7:	and    DWORD PTR [rsp+0x48],0x0
   1400239ec:	call   0x140023728
   1400239f1:	mov    QWORD PTR [rsp+0x50],rax
   1400239f6:	test   rax,rax
   1400239f9:	je     0x140023a4b
   1400239fb:	xor    eax,eax
   1400239fd:	cmp    QWORD PTR [rbx+0xb0],rax
   140023a04:	setne  al
   140023a07:	test   eax,eax
   140023a09:	je     0x140023a45
   140023a0b:	mov    rcx,QWORD PTR [rbx+0xb0]
   140023a12:	mov    rax,QWORD PTR [rcx]
   140023a15:	lea    rdx,[rsp+0x50]
   140023a1a:	call   QWORD PTR [rax+0x28]
   140023a1d:	test   rax,rax
   140023a20:	je     0x140023a3b
   140023a22:	mov    r10,QWORD PTR [rax]
   140023a25:	and    QWORD PTR [rsp+0x20],0x0
   140023a2b:	xor    r9d,r9d
   140023a2e:	xor    edx,edx
   140023a30:	lea    r8d,[r9-0x4]
   140023a34:	mov    rcx,rax
   140023a37:	call   QWORD PTR [r10+0x18]
   140023a3b:	cmp    QWORD PTR [rsp+0x50],0x0
   140023a41:	jne    0x1400239fb
   140023a43:	jmp    0x140023a4b
   140023a45:	call   0x1400218c0
   140023a4a:	int3   
   140023a4b:	cmp    QWORD PTR [rbx+0xa8],0x0
   140023a53:	je     0x140023bb1
   140023a59:	xor    eax,eax
   140023a5b:	cmp    QWORD PTR [rbx+0xd0],rax
   140023a62:	setne  al
   140023a65:	test   eax,eax
   140023a67:	jne    0x140023a6f
   140023a69:	call   0x1400218c0
   140023a6e:	int3   
   140023a6f:	lea    rdx,[rip+0x242a2]        # 0x140047d18
   140023a76:	lea    rcx,[rsp+0x30]
   140023a7b:	call   0x140006f30
   140023a80:	nop
   140023a81:	mov    rdi,QWORD PTR [rbx+0xa8]
   140023a88:	test   rdi,rdi
   140023a8b:	jne    0x140023a91
   140023a8d:	xor    eax,eax
   140023a8f:	jmp    0x140023a99
   140023a91:	mov    rcx,rdi
   140023a94:	call   0x14002ad10
   140023a99:	mov    r8d,eax
   140023a9c:	mov    rdx,rdi
   140023a9f:	lea    rcx,[rsp+0x30]
   140023aa4:	call   0x1400044e0
   140023aa9:	lea    r8,[rip+0x24260]        # 0x140047d10
   140023ab0:	lea    rdx,[rsp+0x30]
   140023ab5:	lea    rcx,[rsp+0x58]
   140023aba:	call   0x14002374c
   140023abf:	nop
   140023ac0:	mov    r8,QWORD PTR [rbx+0xd0]
   140023ac7:	mov    rdx,rax
   140023aca:	lea    rcx,[rsp+0x38]
   140023acf:	call   0x14002374c
   140023ad4:	nop
   140023ad5:	mov    rdx,QWORD PTR [rsp+0x58]
   140023ada:	add    rdx,0xffffffffffffffe8
   140023ade:	or     edi,0xffffffff
   140023ae1:	mov    eax,edi
   140023ae3:	lock xadd DWORD PTR [rdx+0x10],eax
   140023ae8:	add    eax,edi
   140023aea:	test   eax,eax
   140023aec:	jg     0x140023af7
   140023aee:	mov    rcx,QWORD PTR [rdx]
   140023af1:	mov    rax,QWORD PTR [rcx]
   140023af4:	call   QWORD PTR [rax+0x8]
   140023af7:	lea    rdx,[rsp+0x38]
   140023afc:	mov    rbx,0xffffffff80000001
   140023b03:	mov    rcx,rbx
   140023b06:	call   0x140023834
   140023b0b:	lea    r8,[rsp+0x40]
   140023b10:	mov    rdx,QWORD PTR [rsp+0x30]
   140023b15:	mov    rcx,rbx
   140023b18:	call   QWORD PTR [rip+0x1f522]        # 0x140043040
   140023b1e:	test   eax,eax
   140023b20:	jne    0x140023b59
   140023b22:	mov    r9d,0x104
   140023b28:	lea    r8,[rsp+0x70]
   140023b2d:	xor    edx,edx
   140023b2f:	mov    rcx,QWORD PTR [rsp+0x40]
   140023b34:	call   QWORD PTR [rip+0x1f4d6]        # 0x140043010
   140023b3a:	cmp    eax,0x103
   140023b3f:	jne    0x140023b4e
   140023b41:	lea    rdx,[rsp+0x30]
   140023b46:	mov    rcx,rbx
   140023b49:	call   0x140023834
   140023b4e:	mov    rcx,QWORD PTR [rsp+0x40]
   140023b53:	call   QWORD PTR [rip+0x1f4c7]        # 0x140043020
   140023b59:	lea    r9,[rsp+0x48]
   140023b5e:	lea    r8,[rsp+0x70]
   140023b63:	mov    rdx,QWORD PTR [rsp+0x38]
   140023b68:	mov    rcx,rbx
   140023b6b:	call   QWORD PTR [rip+0x1f497]        # 0x140043008
   140023b71:	nop
   140023b72:	mov    rdx,QWORD PTR [rsp+0x38]
   140023b77:	add    rdx,0xffffffffffffffe8
   140023b7b:	mov    eax,edi
   140023b7d:	lock xadd DWORD PTR [rdx+0x10],eax
   140023b82:	add    eax,edi
   140023b84:	test   eax,eax
   140023b86:	jg     0x140023b92
   140023b88:	mov    rcx,QWORD PTR [rdx]
   140023b8b:	mov    rax,QWORD PTR [rcx]
   140023b8e:	call   QWORD PTR [rax+0x8]
   140023b91:	nop
   140023b92:	mov    rdx,QWORD PTR [rsp+0x30]
   140023b97:	add    rdx,0xffffffffffffffe8
   140023b9b:	mov    eax,edi
   140023b9d:	lock xadd DWORD PTR [rdx+0x10],eax
   140023ba2:	add    eax,edi
   140023ba4:	test   eax,eax
   140023ba6:	jg     0x140023bb1
   140023ba8:	mov    rcx,QWORD PTR [rdx]
   140023bab:	mov    rax,QWORD PTR [rcx]
   140023bae:	call   QWORD PTR [rax+0x8]
   140023bb1:	mov    eax,0x1
   140023bb6:	mov    rcx,QWORD PTR [rsp+0x280]
   140023bbe:	xor    rcx,rsp
   140023bc1:	call   0x140029b40
   140023bc6:	mov    rbx,QWORD PTR [rsp+0x2a8]
   140023bce:	add    rsp,0x290
   140023bd5:	pop    rdi
   140023bd6:	ret    
   140023bd7:	int3   
   140023bd8:	int3   
   140023bd9:	int3   
   140023bda:	int3   
   140023bdb:	int3   
   140023bdc:	int3   
   140023bdd:	int3   
   140023bde:	int3   
   140023bdf:	int3   
   140023be0:	int3   
   140023be1:	int3   
   140023be2:	int3   
   140023be3:	int3   
   140023be4:	rex push rbp
   140023be6:	sub    rsp,0x20
   140023bea:	mov    rbp,rdx
   140023bed:	lea    rcx,[rbp+0x30]
   140023bf1:	call   0x140003de0
   140023bf6:	add    rsp,0x20
   140023bfa:	pop    rbp
   140023bfb:	ret    
   140023bfc:	int3   
   140023bfd:	int3   
   140023bfe:	int3   
   140023bff:	int3   
   140023c00:	int3   
   140023c01:	int3   
   140023c02:	int3   
   140023c03:	int3   
   140023c04:	rex push rbp
   140023c06:	sub    rsp,0x20
   140023c0a:	mov    rbp,rdx
   140023c0d:	lea    rcx,[rbp+0x58]
   140023c11:	call   0x140003de0
   140023c16:	add    rsp,0x20
   140023c1a:	pop    rbp
   140023c1b:	ret    
   140023c1c:	int3   
   140023c1d:	int3   
   140023c1e:	int3   
   140023c1f:	int3   
   140023c20:	int3   
   140023c21:	int3   
   140023c22:	int3   
   140023c23:	int3   
   140023c24:	rex push rbp
   140023c26:	sub    rsp,0x20
   140023c2a:	mov    rbp,rdx
   140023c2d:	lea    rcx,[rbp+0x38]
   140023c31:	call   0x140003de0
   140023c36:	add    rsp,0x20
   140023c3a:	pop    rbp
   140023c3b:	ret    
   140023c3c:	mov    QWORD PTR [rsp+0x8],rbx
   140023c41:	push   rdi
   140023c42:	sub    rsp,0x20
   140023c46:	test   edx,edx
   140023c48:	mov    edi,edx
   140023c4a:	mov    rbx,rcx
   140023c4d:	je     0x140023c5f
   140023c4f:	cmp    edx,0x1
   140023c52:	je     0x140023c5f
   140023c54:	cmp    edx,0xffffffff
   140023c57:	je     0x140023c5f
   140023c59:	call   0x1400218c0
   140023c5e:	int3   
   140023c5f:	cmp    QWORD PTR [rip+0x3cfb1],0x0        # 0x140060c18
   140023c67:	jne    0x140023c6f
   140023c69:	call   0x1400218c0
   140023c6e:	int3   
   140023c6f:	mov    ecx,0x2
   140023c74:	call   0x14002431c
   140023c79:	add    DWORD PTR [rbx+0x100],edi
   140023c7f:	cmp    DWORD PTR [rbx+0x100],0x0
   140023c86:	jle    0x140023cab
   140023c88:	mov    rcx,QWORD PTR [rip+0x3cf89]        # 0x140060c18
   140023c8f:	call   QWORD PTR [rip+0x1fc4b]        # 0x1400438e0
   140023c95:	test   edi,edi
   140023c97:	jle    0x140023cbf
   140023c99:	cmp    DWORD PTR [rbx+0x100],0x1
   140023ca0:	jne    0x140023cbf
   140023ca2:	mov    QWORD PTR [rbx+0x108],rax
   140023ca9:	jmp    0x140023cbf
   140023cab:	mov    rcx,QWORD PTR [rbx+0x108]
   140023cb2:	and    DWORD PTR [rbx+0x100],0x0
   140023cb9:	call   QWORD PTR [rip+0x1fc21]        # 0x1400438e0
   140023cbf:	mov    ecx,0x2
   140023cc4:	mov    rbx,QWORD PTR [rsp+0x30]
   140023cc9:	add    rsp,0x20
   140023ccd:	pop    rdi
   140023cce:	jmp    0x1400243b0
   140023cd3:	int3   
   140023cd4:	sub    rsp,0x28
   140023cd8:	cmp    QWORD PTR [rcx+0xb0],0x0
   140023ce0:	je     0x140023cf1
   140023ce2:	mov    rcx,QWORD PTR [rcx+0xb0]
   140023ce9:	mov    rax,QWORD PTR [rcx]
   140023cec:	call   QWORD PTR [rax+0x40]
   140023cef:	jmp    0x140023cf6
   140023cf1:	mov    eax,0x1
   140023cf6:	add    rsp,0x28
   140023cfa:	ret    
   140023cfb:	int3   
   140023cfc:	sub    rsp,0x28
   140023d00:	test   rdx,rdx
   140023d03:	jne    0x140023d0b
   140023d05:	call   0x1400218c0
   140023d0a:	int3   
   140023d0b:	cmp    QWORD PTR [rcx+0x110],0x0
   140023d13:	je     0x140023d22
   140023d15:	mov    rcx,QWORD PTR [rcx+0x110]
   140023d1c:	mov    rax,QWORD PTR [rcx]
   140023d1f:	call   QWORD PTR [rax+0x8]
   140023d22:	add    rsp,0x28
   140023d26:	ret    
   140023d27:	int3   
   140023d28:	sub    rsp,0x28
   140023d2c:	cmp    QWORD PTR [rcx+0xb0],0x0
   140023d34:	jne    0x140023d3c
   140023d36:	call   0x1400218c0
   140023d3b:	int3   
   140023d3c:	mov    rcx,QWORD PTR [rcx+0xb0]
   140023d43:	mov    rax,QWORD PTR [rcx]
   140023d46:	add    rsp,0x28
   140023d4a:	rex.W jmp QWORD PTR [rax+0x38]
   140023d4e:	int3   
   140023d4f:	int3   
   140023d50:	sub    rsp,0x28
   140023d54:	test   rdx,rdx
   140023d57:	mov    r8,rdx
   140023d5a:	jne    0x140023d62
   140023d5c:	call   0x1400218c0
   140023d61:	int3   
   140023d62:	cmp    QWORD PTR [rcx+0x110],0x0
   140023d6a:	jne    0x140023d78
   140023d6c:	mov    rax,QWORD PTR [rdx]
   140023d6f:	mov    rcx,r8
   140023d72:	xor    edx,edx
   140023d74:	call   QWORD PTR [rax]
   140023d76:	jmp    0x140023d85
   140023d78:	mov    rcx,QWORD PTR [rcx+0x110]
   140023d7f:	mov    rax,QWORD PTR [rcx]
   140023d82:	call   QWORD PTR [rax+0x18]
   140023d85:	add    rsp,0x28
   140023d89:	ret    
   140023d8a:	int3   
   140023d8b:	int3   
   140023d8c:	sub    rsp,0x28
   140023d90:	cmp    QWORD PTR [rcx+0xb0],0x0
   140023d98:	je     0x140023da9
   140023d9a:	mov    rcx,QWORD PTR [rcx+0xb0]
   140023da1:	mov    rax,QWORD PTR [rcx]
   140023da4:	call   QWORD PTR [rax+0x60]
   140023da7:	jmp    0x140023dab
   140023da9:	xor    eax,eax
   140023dab:	add    rsp,0x28
   140023daf:	ret    
   140023db0:	mov    rcx,QWORD PTR [rcx+0x40]
   140023db4:	xor    r9d,r9d
   140023db7:	xor    r8d,r8d
   140023dba:	mov    rcx,QWORD PTR [rcx+0x40]
   140023dbe:	lea    edx,[r9+0x10]
   140023dc2:	rex.W jmp QWORD PTR [rip+0x1fc1f]        # 0x1400439e8
   140023dc9:	int3   
   140023dca:	int3   
   140023dcb:	int3   
   140023dcc:	mov    QWORD PTR [rsp+0x8],rbx
   140023dd1:	push   rdi
   140023dd2:	sub    rsp,0x20
   140023dd6:	mov    r8,QWORD PTR [rcx+0x110]
   140023ddd:	mov    rdi,rcx
   140023de0:	test   r8,r8
   140023de3:	jne    0x140023deb
   140023de5:	call   0x1400218c0
   140023dea:	int3   
   140023deb:	mov    ecx,0xe110
   140023df0:	cmp    edx,ecx
   140023df2:	jae    0x140023dfa
   140023df4:	call   0x1400218c0
   140023df9:	int3   
   140023dfa:	mov    eax,DWORD PTR [r8+0x8]
   140023dfe:	add    eax,ecx
   140023e00:	cmp    edx,eax
   140023e02:	jb     0x140023e0a
   140023e04:	call   0x1400218c0
   140023e09:	int3   
   140023e0a:	lea    ebx,[rdx-0xe110]
   140023e10:	test   ebx,ebx
   140023e12:	js     0x140023e55
   140023e14:	cmp    ebx,DWORD PTR [r8+0x8]
   140023e18:	jge    0x140023e55
   140023e1a:	mov    rax,QWORD PTR [r8+0x10]
   140023e1e:	mov    r8,QWORD PTR [rdi]
   140023e21:	movsxd rcx,ebx
   140023e24:	mov    rdx,QWORD PTR [rax+rcx*8]
   140023e28:	mov    rcx,rdi
   140023e2b:	call   QWORD PTR [r8+0x110]
   140023e32:	test   rax,rax
   140023e35:	jne    0x140023e45
   140023e37:	mov    rcx,QWORD PTR [rdi+0x110]
   140023e3e:	mov    edx,ebx
   140023e40:	mov    rax,QWORD PTR [rcx]
   140023e43:	call   QWORD PTR [rax]
   140023e45:	mov    eax,0x1
   140023e4a:	mov    rbx,QWORD PTR [rsp+0x30]
   140023e4f:	add    rsp,0x20
   140023e53:	pop    rdi
   140023e54:	ret    
   140023e55:	call   0x1400218c0
   140023e5a:	int3   
   140023e5b:	int3   
   140023e5c:	rex push rbx
   140023e5e:	sub    rsp,0x20
   140023e62:	and    QWORD PTR [rcx+0x18],0x0
   140023e67:	and    QWORD PTR [rcx+0x20],0x0
   140023e6c:	and    QWORD PTR [rcx+0x10],0x0
   140023e71:	and    QWORD PTR [rcx+0x8],0x0
   140023e76:	mov    rbx,rcx
   140023e79:	mov    rcx,QWORD PTR [rcx+0x28]
   140023e7d:	call   0x140027c04
   140023e82:	and    QWORD PTR [rbx+0x28],0x0
   140023e87:	add    rsp,0x20
   140023e8b:	pop    rbx
   140023e8c:	ret    
   140023e8d:	int3   
   140023e8e:	int3   
   140023e8f:	int3   
   140023e90:	sub    rsp,0x28
   140023e94:	test   rdx,rdx
   140023e97:	jne    0x140023e9f
   140023e99:	call   0x1400218c0
   140023e9e:	int3   
   140023e9f:	mov    rax,QWORD PTR [rcx+0x20]
   140023ea3:	mov    QWORD PTR [rdx],rax
   140023ea6:	add    QWORD PTR [rcx+0x18],0xffffffffffffffff
   140023eab:	mov    QWORD PTR [rcx+0x20],rdx
   140023eaf:	jne    0x140023eb6
   140023eb1:	call   0x140023e5c
   140023eb6:	add    rsp,0x28
   140023eba:	ret    
   140023ebb:	int3   
   140023ebc:	rex push rbx
   140023ebe:	sub    rsp,0x20
   140023ec2:	test   rcx,rcx
   140023ec5:	jne    0x140023ecd
   140023ec7:	call   0x1400218c0
   140023ecc:	int3   
   140023ecd:	mov    rdx,QWORD PTR [rcx+0x8]
   140023ed1:	test   rdx,rdx
   140023ed4:	jne    0x140023edc
   140023ed6:	call   0x1400218c0
   140023edb:	int3   
   140023edc:	mov    rax,QWORD PTR [rdx]
   140023edf:	mov    rbx,QWORD PTR [rdx+0x10]
   140023ee3:	test   rax,rax
   140023ee6:	mov    QWORD PTR [rcx+0x8],rax
   140023eea:	je     0x140023ef3
   140023eec:	and    QWORD PTR [rax+0x8],0x0
   140023ef1:	jmp    0x140023ef8
   140023ef3:	and    QWORD PTR [rcx+0x10],0x0
   140023ef8:	call   0x140023e90
   140023efd:	mov    rax,rbx
   140023f00:	add    rsp,0x20
   140023f04:	pop    rbx
   140023f05:	ret    
   140023f06:	int3   
   140023f07:	int3   
   140023f08:	cmp    rdx,QWORD PTR [rcx+0x18]
   140023f0c:	jge    0x140023f23
   140023f0e:	test   rdx,rdx
   140023f11:	js     0x140023f23
   140023f13:	mov    rax,QWORD PTR [rcx+0x8]
   140023f17:	je     0x140023f25
   140023f19:	sub    rdx,0x1
   140023f1d:	mov    rax,QWORD PTR [rax]
   140023f20:	jne    0x140023f19
   140023f22:	ret    
   140023f23:	xor    eax,eax
   140023f25:	ret    
   140023f26:	int3   
   140023f27:	int3   
   140023f28:	lea    rax,[rip+0x23e11]        # 0x140047d40
   140023f2f:	ret    
   140023f30:	lea    rax,[rip+0x23e41]        # 0x140047d78
   140023f37:	mov    QWORD PTR [rcx+0x30],rdx
   140023f3b:	mov    QWORD PTR [rcx],rax
   140023f3e:	xor    eax,eax
   140023f40:	mov    QWORD PTR [rcx+0x18],rax
   140023f44:	mov    QWORD PTR [rcx+0x20],rax
   140023f48:	mov    QWORD PTR [rcx+0x10],rax
   140023f4c:	mov    QWORD PTR [rcx+0x8],rax
   140023f50:	mov    QWORD PTR [rcx+0x28],rax
   140023f54:	mov    rax,rcx
   140023f57:	ret    
   140023f58:	lea    rax,[rip+0x23e19]        # 0x140047d78
   140023f5f:	mov    QWORD PTR [rcx],rax
   140023f62:	jmp    0x140023e5c
   140023f67:	int3   
   140023f68:	mov    QWORD PTR [rsp+0x8],rbx
   140023f6d:	mov    QWORD PTR [rsp+0x10],rsi
   140023f72:	push   rdi
   140023f73:	sub    rsp,0x20
   140023f77:	cmp    QWORD PTR [rcx+0x20],0x0
   140023f7c:	mov    rdi,r8
   140023f7f:	mov    rsi,rdx
   140023f82:	mov    rbx,rcx
   140023f85:	jne    0x140023fc2
   140023f87:	mov    rdx,QWORD PTR [rbx+0x30]
   140023f8b:	add    rcx,0x28
   140023f8f:	mov    r8d,0x18
   140023f95:	call   0x140027bcc
   140023f9a:	mov    rdx,QWORD PTR [rbx+0x30]
   140023f9e:	lea    rcx,[rdx+rdx*2]
   140023fa2:	add    rdx,0xffffffffffffffff
   140023fa6:	lea    r8,[rax+rcx*8-0x10]
   140023fab:	js     0x140023fc2
   140023fad:	mov    rax,QWORD PTR [rbx+0x20]
   140023fb1:	mov    QWORD PTR [r8],rax
   140023fb4:	mov    QWORD PTR [rbx+0x20],r8
   140023fb8:	sub    r8,0x18
   140023fbc:	sub    rdx,0x1
   140023fc0:	jns    0x140023fad
   140023fc2:	mov    rax,QWORD PTR [rbx+0x20]
   140023fc6:	mov    rcx,QWORD PTR [rax]
   140023fc9:	mov    QWORD PTR [rbx+0x20],rcx
   140023fcd:	mov    QWORD PTR [rax+0x8],rsi
   140023fd1:	mov    rsi,QWORD PTR [rsp+0x38]
   140023fd6:	mov    QWORD PTR [rax],rdi
   140023fd9:	add    QWORD PTR [rbx+0x18],0x1
   140023fde:	and    QWORD PTR [rax+0x10],0x0
   140023fe3:	mov    rbx,QWORD PTR [rsp+0x30]
   140023fe8:	add    rsp,0x20
   140023fec:	pop    rdi
   140023fed:	ret    
   140023fee:	int3   
   140023fef:	int3   
   140023ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140023ff5:	push   rdi
   140023ff6:	sub    rsp,0x20
   140023ffa:	mov    rbx,rdx
   140023ffd:	mov    rdx,QWORD PTR [rcx+0x10]
   140024001:	xor    r8d,r8d
   140024004:	mov    rdi,rcx
   140024007:	call   0x140023f68
   14002400c:	mov    QWORD PTR [rax+0x10],rbx
   140024010:	mov    rcx,QWORD PTR [rdi+0x10]
   140024014:	test   rcx,rcx
   140024017:	je     0x14002401e
   140024019:	mov    QWORD PTR [rcx],rax
   14002401c:	jmp    0x140024022
   14002401e:	mov    QWORD PTR [rdi+0x8],rax
   140024022:	mov    QWORD PTR [rdi+0x10],rax
   140024026:	mov    rbx,QWORD PTR [rsp+0x30]
   14002402b:	add    rsp,0x20
   14002402f:	pop    rdi
   140024030:	ret    
   140024031:	int3   
   140024032:	int3   
   140024033:	int3   
   140024034:	mov    QWORD PTR [rsp+0x8],rbx
   140024039:	push   rdi
   14002403a:	sub    rsp,0x20
   14002403e:	lea    rax,[rip+0x23d33]        # 0x140047d78
   140024045:	mov    ebx,edx
   140024047:	mov    rdi,rcx
   14002404a:	mov    QWORD PTR [rcx],rax
   14002404d:	call   0x140023e5c
   140024052:	test   bl,0x1
   140024055:	je     0x14002405f
   140024057:	mov    rcx,rdi
   14002405a:	call   0x14001490c
   14002405f:	mov    rax,rdi
   140024062:	mov    rbx,QWORD PTR [rsp+0x30]
   140024067:	add    rsp,0x20
   14002406b:	pop    rdi
   14002406c:	ret    
   14002406d:	int3   
   14002406e:	int3   
   14002406f:	int3   
   140024070:	lea    rax,[rip+0x23d21]        # 0x140047d98
   140024077:	ret    
   140024078:	sub    rsp,0x28
   14002407c:	mov    ecx,0x10
   140024081:	call   0x1400148c0
   140024086:	test   rax,rax
   140024089:	je     0x14002409c
   14002408b:	and    QWORD PTR [rax+0x8],0x0
   140024090:	lea    rcx,[rip+0x23d39]        # 0x140047dd0
   140024097:	mov    QWORD PTR [rax],rcx
   14002409a:	jmp    0x14002409e
   14002409c:	xor    eax,eax
   14002409e:	add    rsp,0x28
   1400240a2:	ret    
   1400240a3:	int3   
   1400240a4:	test   rcx,rcx
   1400240a7:	je     0x1400240b8
   1400240a9:	and    QWORD PTR [rcx+0x8],0x0
   1400240ae:	lea    rax,[rip+0x23d1b]        # 0x140047dd0
   1400240b5:	mov    QWORD PTR [rcx],rax
   1400240b8:	ret    
   1400240b9:	int3   
   1400240ba:	int3   
   1400240bb:	int3   
   1400240bc:	rex push rdi
   1400240be:	sub    rsp,0x40
   1400240c2:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400240cb:	mov    QWORD PTR [rsp+0x50],rbx
   1400240d0:	mov    QWORD PTR [rsp+0x60],rsi
   1400240d5:	mov    esi,ecx
   1400240d7:	call   0x14001f338
   1400240dc:	mov    rdi,rax
   1400240df:	xor    ebx,ebx
   1400240e1:	cmp    QWORD PTR [rax+0x30],rbx
   1400240e5:	jne    0x14002414b
   1400240e7:	cmp    esi,ebx
   1400240e9:	je     0x14002414b
   1400240eb:	lea    rcx,[rip+0x41e]        # 0x140024510
   1400240f2:	call   0x1400148b0
   1400240f7:	mov    rsi,rax
   1400240fa:	mov    ecx,0xb8
   1400240ff:	call   0x1400148c0
   140024104:	mov    QWORD PTR [rsp+0x58],rax
   140024109:	cmp    rax,rbx
   14002410c:	je     0x14002413f
   14002410e:	mov    DWORD PTR [rsp+0x28],0x1
   140024116:	mov    QWORD PTR [rsp+0x20],0x8
   14002411f:	lea    r9,[rip+0xffffffffffff25f6]        # 0x14001671c
   140024126:	lea    r8,[rip+0xffffffffffffff77]        # 0x1400240a4
   14002412d:	lea    rdx,[rip+0x23c64]        # 0x140047d98
   140024134:	mov    rcx,rax
   140024137:	call   0x1400259e0
   14002413c:	mov    rbx,rax
   14002413f:	mov    QWORD PTR [rdi+0x30],rbx
   140024143:	mov    rcx,rsi
   140024146:	call   0x1400148b0
   14002414b:	mov    rax,QWORD PTR [rdi+0x30]
   14002414f:	mov    rbx,QWORD PTR [rsp+0x50]
   140024154:	mov    rsi,QWORD PTR [rsp+0x60]
   140024159:	add    rsp,0x40
   14002415d:	pop    rdi
   14002415e:	ret    
   14002415f:	int3   
   140024160:	int3   
   140024161:	int3   
   140024162:	int3   
   140024163:	int3   
   140024164:	int3   
   140024165:	int3   
   140024166:	int3   
   140024167:	int3   
   140024168:	int3   
   140024169:	int3   
   14002416a:	int3   
   14002416b:	int3   
   14002416c:	rex push rbp
   14002416e:	sub    rsp,0x20
   140024172:	mov    rbp,rdx
   140024175:	mov    rcx,QWORD PTR [rbp+0x58]
   140024179:	call   0x14001490c
   14002417e:	add    rsp,0x20
   140024182:	pop    rbp
   140024183:	ret    
   140024184:	rex push rbx
   140024186:	sub    rsp,0x20
   14002418a:	mov    rbx,rcx
   14002418d:	mov    ecx,0x1
   140024192:	call   0x1400240bc
   140024197:	mov    rdx,rbx
   14002419a:	mov    rcx,rax
   14002419d:	add    rsp,0x20
   1400241a1:	pop    rbx
   1400241a2:	jmp    0x140025b1c
   1400241a7:	int3   
   1400241a8:	rex push rbx
   1400241aa:	sub    rsp,0x20
   1400241ae:	mov    rbx,rcx
   1400241b1:	call   0x14001f338
   1400241b6:	mov    rcx,QWORD PTR [rax+0x30]
   1400241ba:	xor    eax,eax
   1400241bc:	cmp    rcx,rax
   1400241bf:	je     0x1400241cd
   1400241c1:	add    rcx,0x30
   1400241c5:	mov    rdx,rbx
   1400241c8:	call   0x14002541c
   1400241cd:	add    rsp,0x20
   1400241d1:	pop    rbx
   1400241d2:	ret    
   1400241d3:	int3   
   1400241d4:	rex push rbx
   1400241d6:	sub    rsp,0x20
   1400241da:	test   rdx,rdx
   1400241dd:	mov    rbx,rcx
   1400241e0:	jne    0x1400241e6
   1400241e2:	xor    eax,eax
   1400241e4:	jmp    0x140024209
   1400241e6:	mov    QWORD PTR [rcx+0x8],rdx
   1400241ea:	mov    ecx,0x1
   1400241ef:	call   0x1400240bc
   1400241f4:	mov    rdx,QWORD PTR [rbx+0x8]
   1400241f8:	lea    rcx,[rax+0x30]
   1400241fc:	call   0x14002566c
   140024201:	mov    QWORD PTR [rax],rbx
   140024204:	mov    eax,0x1
   140024209:	add    rsp,0x20
   14002420d:	pop    rbx
   14002420e:	ret    
   14002420f:	int3   
   140024210:	mov    QWORD PTR [rsp+0x8],rbx
   140024215:	push   rdi
   140024216:	sub    rsp,0x20
   14002421a:	mov    rdi,QWORD PTR [rcx+0x8]
   14002421e:	mov    rbx,rcx
   140024221:	test   rdi,rdi
   140024224:	je     0x140024241
   140024226:	call   0x14001f338
   14002422b:	mov    rcx,QWORD PTR [rax+0x30]
   14002422f:	test   rcx,rcx
   140024232:	je     0x140024241
   140024234:	mov    rdx,QWORD PTR [rbx+0x8]
   140024238:	add    rcx,0x30
   14002423c:	call   0x140025490
   140024241:	and    QWORD PTR [rbx+0x8],0x0
   140024246:	mov    rbx,QWORD PTR [rsp+0x30]
   14002424b:	mov    rax,rdi
   14002424e:	add    rsp,0x20
   140024252:	pop    rdi
   140024253:	ret    
   140024254:	sub    rsp,0x28
   140024258:	cmp    QWORD PTR [rcx+0x8],0x0
   14002425d:	jne    0x140024263
   14002425f:	xor    eax,eax
   140024261:	jmp    0x140024271
   140024263:	call   0x140024210
   140024268:	mov    rcx,rax
   14002426b:	call   QWORD PTR [rip+0x1f667]        # 0x1400438d8
   140024271:	add    rsp,0x28
   140024275:	ret    
   140024276:	int3   
   140024277:	int3   
   140024278:	sub    rsp,0x28
   14002427c:	mov    eax,DWORD PTR [rip+0x3c62a]        # 0x1400608ac
   140024282:	test   eax,eax
   140024284:	jne    0x1400242a3
   140024286:	lea    rcx,[rip+0x3c8cb]        # 0x140060b58
   14002428d:	mov    DWORD PTR [rip+0x3c615],0x1        # 0x1400608ac
   140024297:	call   QWORD PTR [rip+0x1f143]        # 0x1400433e0
   14002429d:	mov    eax,DWORD PTR [rip+0x3c609]        # 0x1400608ac
   1400242a3:	add    rsp,0x28
   1400242a7:	ret    
   1400242a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400242ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400242b2:	push   rdi
   1400242b3:	sub    rsp,0x20
   1400242b7:	mov    eax,DWORD PTR [rip+0x3c5ef]        # 0x1400608ac
   1400242bd:	test   eax,eax
   1400242bf:	je     0x140024309
   1400242c1:	sub    eax,0x1
   1400242c4:	lea    rcx,[rip+0x3c88d]        # 0x140060b58
   1400242cb:	mov    DWORD PTR [rip+0x3c5db],eax        # 0x1400608ac
   1400242d1:	call   QWORD PTR [rip+0x1f101]        # 0x1400433d8
   1400242d7:	lea    rbx,[rip+0x3c8a2]        # 0x140060b80
   1400242de:	lea    rdi,[rip+0x3c5cb]        # 0x1400608b0
   1400242e5:	mov    esi,0x11
   1400242ea:	cmp    DWORD PTR [rbx],0x0
   1400242ed:	je     0x1400242fb
   1400242ef:	mov    rcx,rdi
   1400242f2:	call   QWORD PTR [rip+0x1f0e0]        # 0x1400433d8
   1400242f8:	add    DWORD PTR [rbx],0xffffffff
   1400242fb:	add    rdi,0x28
   1400242ff:	add    rbx,0x4
   140024303:	sub    rsi,0x1
   140024307:	jne    0x1400242ea
   140024309:	mov    rbx,QWORD PTR [rsp+0x30]
   14002430e:	mov    rsi,QWORD PTR [rsp+0x38]
   140024313:	add    rsp,0x20
   140024317:	pop    rdi
   140024318:	ret    
   140024319:	int3   
   14002431a:	int3   
   14002431b:	int3   
   14002431c:	mov    QWORD PTR [rsp+0x8],rbx
   140024321:	push   rsi
   140024322:	sub    rsp,0x20
   140024326:	movsxd rbx,ecx
   140024329:	cmp    ebx,0x11
   14002432c:	jb     0x140024334
   14002432e:	call   0x1400218c0
   140024333:	int3   
   140024334:	cmp    DWORD PTR [rip+0x3c571],0x0        # 0x1400608ac
   14002433b:	jne    0x140024342
   14002433d:	call   0x140024278
   140024342:	lea    rsi,[rip+0xfffffffffffdbcb7]        # 0x140000000
   140024349:	cmp    DWORD PTR [rsi+rbx*4+0x60b80],0x0
   140024351:	jne    0x140024391
   140024353:	lea    rcx,[rip+0x3c7fe]        # 0x140060b58
   14002435a:	call   QWORD PTR [rip+0x1f1e0]        # 0x140043540
   140024360:	cmp    DWORD PTR [rsi+rbx*4+0x60b80],0x0
   140024368:	jne    0x140024384
   14002436a:	lea    rax,[rbx+rbx*4]
   14002436e:	lea    rcx,[rsi+rax*8+0x608b0]
   140024376:	call   QWORD PTR [rip+0x1f064]        # 0x1400433e0
   14002437c:	add    DWORD PTR [rsi+rbx*4+0x60b80],0x1
   140024384:	lea    rcx,[rip+0x3c7cd]        # 0x140060b58
   14002438b:	call   QWORD PTR [rip+0x1f1a7]        # 0x140043538
   140024391:	lea    rax,[rbx+rbx*4]
   140024395:	lea    rcx,[rsi+rax*8+0x608b0]
   14002439d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400243a2:	add    rsp,0x20
   1400243a6:	pop    rsi
   1400243a7:	rex.W jmp QWORD PTR [rip+0x1f192]        # 0x140043540
   1400243ae:	int3   
   1400243af:	int3   
   1400243b0:	sub    rsp,0x28
   1400243b4:	cmp    ecx,0x11
   1400243b7:	jb     0x1400243bf
   1400243b9:	call   0x1400218c0
   1400243be:	int3   
   1400243bf:	movsxd rax,ecx
   1400243c2:	lea    rcx,[rax+rax*4]
   1400243c6:	lea    rax,[rip+0x3c4e3]        # 0x1400608b0
   1400243cd:	lea    rcx,[rax+rcx*8]
   1400243d1:	add    rsp,0x28
   1400243d5:	rex.W jmp QWORD PTR [rip+0x1f15c]        # 0x140043538
   1400243dc:	mov    QWORD PTR [rsp+0x18],rbx
   1400243e1:	mov    QWORD PTR [rsp+0x20],rsi
   1400243e6:	push   rdi
   1400243e7:	sub    rsp,0x230
   1400243ee:	mov    rax,QWORD PTR [rip+0x36b8b]        # 0x14005af80
   1400243f5:	xor    rax,rsp
   1400243f8:	mov    QWORD PTR [rsp+0x220],rax
   140024400:	test   rcx,rcx
   140024403:	mov    rbx,rdx
   140024406:	mov    rdi,rcx
   140024409:	jne    0x140024411
   14002440b:	call   0x1400218c0
   140024410:	int3   
   140024411:	test   rdx,rdx
   140024414:	jne    0x14002441c
   140024416:	call   0x1400218c0
   14002441b:	int3   
   14002441c:	mov    rcx,rdx
   14002441f:	call   QWORD PTR [rip+0x1f023]        # 0x140043448
   140024425:	and    WORD PTR [rsp+0x20],0x0
   14002442b:	lea    rcx,[rsp+0x22]
   140024430:	xor    edx,edx
   140024432:	mov    r8d,0x1fe
   140024438:	mov    esi,eax
   14002443a:	call   0x14002ac20
   14002443f:	mov    r8d,0x100
   140024445:	cmp    esi,r8d
   140024448:	ja     0x14002446e
   14002444a:	lea    rdx,[rsp+0x20]
   14002444f:	mov    rcx,rdi
   140024452:	call   QWORD PTR [rip+0x1f2e8]        # 0x140043740
   140024458:	cmp    eax,esi
   14002445a:	jne    0x14002446e
   14002445c:	lea    rcx,[rsp+0x20]
   140024461:	mov    rdx,rbx
   140024464:	call   QWORD PTR [rip+0x1f036]        # 0x1400434a0
   14002446a:	test   eax,eax
   14002446c:	je     0x14002447a
   14002446e:	mov    rdx,rbx
   140024471:	mov    rcx,rdi
   140024474:	call   QWORD PTR [rip+0x1f206]        # 0x140043680
   14002447a:	mov    rcx,QWORD PTR [rsp+0x220]
   140024482:	xor    rcx,rsp
   140024485:	call   0x140029b40
   14002448a:	lea    r11,[rsp+0x230]
   140024492:	mov    rbx,QWORD PTR [r11+0x20]
   140024496:	mov    rsi,QWORD PTR [r11+0x28]
   14002449a:	mov    rsp,r11
   14002449d:	pop    rdi
   14002449e:	ret    
   14002449f:	int3   
   1400244a0:	rex push rbx
   1400244a2:	sub    rsp,0x20
   1400244a6:	test   rcx,rcx
   1400244a9:	mov    rbx,rcx
   1400244ac:	jne    0x1400244b4
   1400244ae:	call   0x1400218c0
   1400244b3:	int3   
   1400244b4:	mov    rcx,QWORD PTR [rcx]
   1400244b7:	test   rcx,rcx
   1400244ba:	je     0x1400244c6
   1400244bc:	call   QWORD PTR [rip+0x1ecae]        # 0x140043170
   1400244c2:	and    QWORD PTR [rbx],0x0
   1400244c6:	add    rsp,0x20
   1400244ca:	pop    rbx
   1400244cb:	ret    
   1400244cc:	test   rcx,rcx
   1400244cf:	je     0x14002450c
   1400244d1:	mov    QWORD PTR [rsp+0x8],rbx
   1400244d6:	push   rdi
   1400244d7:	sub    rsp,0x20
   1400244db:	mov    rbx,rcx
   1400244de:	call   QWORD PTR [rip+0x1eeec]        # 0x1400433d0
   1400244e4:	test   al,al
   1400244e6:	movzx  edi,al
   1400244e9:	je     0x1400244f9
   1400244eb:	mov    rcx,rbx
   1400244ee:	call   QWORD PTR [rip+0x1f05c]        # 0x140043550
   1400244f4:	add    edi,0xffffffff
   1400244f7:	jne    0x1400244eb
   1400244f9:	mov    rcx,rbx
   1400244fc:	call   QWORD PTR [rip+0x1f046]        # 0x140043548
   140024502:	mov    rbx,QWORD PTR [rsp+0x30]
   140024507:	add    rsp,0x20
   14002450b:	pop    rdi
   14002450c:	ret    
   14002450d:	int3   
   14002450e:	int3   
   14002450f:	int3   
   140024510:	mov    QWORD PTR [rsp+0x8],rbx
   140024515:	push   rdi
   140024516:	sub    rsp,0x20
   14002451a:	mov    rdi,rcx
   14002451d:	call   0x14001ea28
   140024522:	test   rax,rax
   140024525:	mov    rbx,rax
   140024528:	je     0x14002456d
   14002452a:	mov    rcx,QWORD PTR [rax+0x18]
   14002452e:	test   rcx,rcx
   140024531:	je     0x14002456d
   140024533:	call   0x14002c7a0
   140024538:	lea    rcx,[rdi+0x4]
   14002453c:	cmp    rax,rcx
   14002453f:	mov    rcx,QWORD PTR [rbx+0x18]
   140024543:	ja     0x140024551
   140024545:	call   0x14002a380
   14002454a:	and    QWORD PTR [rbx+0x18],0x0
   14002454f:	jmp    0x14002455d
   140024551:	sub    rax,rdi
   140024554:	lea    rdx,[rax-0x4]
   140024558:	call   0x14002c6b0
   14002455d:	mov    eax,0x1
   140024562:	mov    rbx,QWORD PTR [rsp+0x30]
   140024567:	add    rsp,0x20
   14002456b:	pop    rdi
   14002456c:	ret    
   14002456d:	call   0x140021878
   140024572:	int3   
   140024573:	int3   
   140024574:	rex push rbx
   140024576:	sub    rsp,0x80
   14002457d:	mov    rax,QWORD PTR [rip+0x369fc]        # 0x14005af80
   140024584:	xor    rax,rsp
   140024587:	mov    QWORD PTR [rsp+0x70],rax
   14002458c:	mov    rbx,rdx
   14002458f:	lea    rdx,[rsp+0x30]
   140024594:	mov    r8d,0x20
   14002459a:	call   QWORD PTR [rip+0x1f168]        # 0x140043708
   1400245a0:	or     r9d,0xffffffff
   1400245a4:	lea    r8,[rsp+0x30]
   1400245a9:	mov    DWORD PTR [rsp+0x28],r9d
   1400245ae:	lea    edx,[r9+0x2]
   1400245b2:	mov    ecx,0x409
   1400245b7:	mov    QWORD PTR [rsp+0x20],rbx
   1400245bc:	call   QWORD PTR [rip+0x1eec6]        # 0x140043488
   1400245c2:	cmp    eax,0x2
   1400245c5:	mov    eax,0x0
   1400245ca:	sete   al
   1400245cd:	mov    rcx,QWORD PTR [rsp+0x70]
   1400245d2:	xor    rcx,rsp
   1400245d5:	call   0x140029b40
   1400245da:	add    rsp,0x80
   1400245e1:	pop    rbx
   1400245e2:	ret    
   1400245e3:	int3   
   1400245e4:	mov    QWORD PTR [rsp+0x10],rdx
   1400245e9:	push   rbx
   1400245ea:	sub    rsp,0x30
   1400245ee:	lea    rdx,[rsp+0x48]
   1400245f3:	mov    rbx,rcx
   1400245f6:	call   QWORD PTR [rip+0x1f054]        # 0x140043650
   1400245fc:	mov    edx,0x5
   140024601:	mov    rcx,rbx
   140024604:	call   QWORD PTR [rip+0x1f39e]        # 0x1400439a8
   14002460a:	test   rax,rax
   14002460d:	mov    rbx,rax
   140024610:	je     0x140024662
   140024612:	mov    rcx,rax
   140024615:	call   QWORD PTR [rip+0x1f39d]        # 0x1400439b8
   14002461b:	test   ax,ax
   14002461e:	je     0x140024656
   140024620:	mov    edx,0xfffffff0
   140024625:	mov    rcx,rbx
   140024628:	call   QWORD PTR [rip+0x1f2f2]        # 0x140043920
   14002462e:	bt     eax,0x1c
   140024632:	jae    0x140024656
   140024634:	lea    rdx,[rsp+0x20]
   140024639:	mov    rcx,rbx
   14002463c:	call   QWORD PTR [rip+0x1f37e]        # 0x1400439c0
   140024642:	mov    rdx,QWORD PTR [rsp+0x48]
   140024647:	lea    rcx,[rsp+0x20]
   14002464c:	call   QWORD PTR [rip+0x1f1ae]        # 0x140043800
   140024652:	test   eax,eax
   140024654:	jne    0x14002465d
   140024656:	mov    edx,0x2
   14002465b:	jmp    0x140024601
   14002465d:	mov    rax,rbx
   140024660:	jmp    0x140024664
   140024662:	xor    eax,eax
   140024664:	add    rsp,0x30
   140024668:	pop    rbx
   140024669:	ret    
   14002466a:	int3   
   14002466b:	int3   
   14002466c:	rex push rbx
   14002466e:	sub    rsp,0x20
   140024672:	mov    rbx,rcx
   140024675:	mov    ecx,0xf
   14002467a:	call   QWORD PTR [rip+0x1f358]        # 0x1400439d8
   140024680:	mov    ecx,0x10
   140024685:	mov    DWORD PTR [rbx+0x30],eax
   140024688:	call   QWORD PTR [rip+0x1f34a]        # 0x1400439d8
   14002468e:	mov    ecx,0x14
   140024693:	mov    DWORD PTR [rbx+0x34],eax
   140024696:	call   QWORD PTR [rip+0x1f33c]        # 0x1400439d8
   14002469c:	mov    ecx,0x12
   1400246a1:	mov    DWORD PTR [rbx+0x38],eax
   1400246a4:	call   QWORD PTR [rip+0x1f32e]        # 0x1400439d8
   1400246aa:	mov    ecx,0x6
   1400246af:	mov    DWORD PTR [rbx+0x3c],eax
   1400246b2:	call   QWORD PTR [rip+0x1f320]        # 0x1400439d8
   1400246b8:	mov    ecx,0xf
   1400246bd:	mov    DWORD PTR [rbx+0x40],eax
   1400246c0:	call   QWORD PTR [rip+0x1f2ba]        # 0x140043980
   1400246c6:	mov    ecx,0x6
   1400246cb:	mov    QWORD PTR [rbx+0x28],rax
   1400246cf:	call   QWORD PTR [rip+0x1f2ab]        # 0x140043980
   1400246d5:	mov    QWORD PTR [rbx+0x20],rax
   1400246d9:	add    rsp,0x20
   1400246dd:	pop    rbx
   1400246de:	ret    
   1400246df:	int3   
   1400246e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400246e5:	push   rdi
   1400246e6:	sub    rsp,0x20
   1400246ea:	mov    rdi,rcx
   1400246ed:	mov    ecx,0xb
   1400246f2:	call   QWORD PTR [rip+0x1f260]        # 0x140043958
   1400246f8:	mov    ecx,0xc
   1400246fd:	mov    DWORD PTR [rdi+0x8],eax
   140024700:	call   QWORD PTR [rip+0x1f252]        # 0x140043958
   140024706:	mov    ecx,0x2
   14002470b:	mov    DWORD PTR [rdi+0xc],eax
   14002470e:	call   QWORD PTR [rip+0x1f244]        # 0x140043958
   140024714:	mov    ecx,0x3
   140024719:	add    eax,0x1
   14002471c:	mov    DWORD PTR [rip+0x3c4ae],eax        # 0x140060bd0
   140024722:	call   QWORD PTR [rip+0x1f230]        # 0x140043958
   140024728:	xor    ecx,ecx
   14002472a:	add    eax,0x1
   14002472d:	mov    DWORD PTR [rip+0x3c4a1],eax        # 0x140060bd4
   140024733:	call   QWORD PTR [rip+0x1f277]        # 0x1400439b0
   140024739:	mov    edx,0x58
   14002473e:	mov    rcx,rax
   140024741:	mov    rbx,rax
   140024744:	call   QWORD PTR [rip+0x1ea1e]        # 0x140043168
   14002474a:	mov    edx,0x5a
   14002474f:	mov    rcx,rbx
   140024752:	mov    DWORD PTR [rdi+0x18],eax
   140024755:	call   QWORD PTR [rip+0x1ea0d]        # 0x140043168
   14002475b:	mov    rdx,rbx
   14002475e:	xor    ecx,ecx
   140024760:	mov    DWORD PTR [rdi+0x1c],eax
   140024763:	mov    rbx,QWORD PTR [rsp+0x30]
   140024768:	add    rsp,0x20
   14002476c:	pop    rdi
   14002476d:	rex.W jmp QWORD PTR [rip+0x1eed4]        # 0x140043648
   140024774:	rex push rbx
   140024776:	sub    rsp,0x20
   14002477a:	mov    rbx,rcx
   14002477d:	call   QWORD PTR [rip+0x1ec75]        # 0x1400433f8
   140024783:	mov    rcx,rbx
   140024786:	shr    eax,0x1f
   140024789:	mov    DWORD PTR [rbx+0x78],eax
   14002478c:	call   0x1400246e0
   140024791:	and    QWORD PTR [rbx+0x28],0x0
   140024796:	mov    rcx,rbx
   140024799:	call   0x14002466c
   14002479e:	mov    edx,0x7f02
   1400247a3:	xor    ecx,ecx
   1400247a5:	call   QWORD PTR [rip+0x1f115]        # 0x1400438c0
   1400247ab:	mov    edx,0x7f00
   1400247b0:	xor    ecx,ecx
   1400247b2:	mov    QWORD PTR [rbx+0x48],rax
   1400247b6:	call   QWORD PTR [rip+0x1f104]        # 0x1400438c0
   1400247bc:	and    QWORD PTR [rbx+0x70],0x0
   1400247c1:	and    QWORD PTR [rbx+0x58],0x0
   1400247c6:	mov    QWORD PTR [rbx+0x50],rax
   1400247ca:	mov    eax,0x2
   1400247cf:	mov    DWORD PTR [rbx+0x10],eax
   1400247d2:	mov    DWORD PTR [rbx+0x14],eax
   1400247d5:	mov    rax,rbx
   1400247d8:	add    rsp,0x20
   1400247dc:	pop    rbx
   1400247dd:	ret    
   1400247de:	int3   
   1400247df:	int3   
   1400247e0:	sub    rsp,0x468
   1400247e7:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400247f0:	mov    rax,QWORD PTR [rip+0x36789]        # 0x14005af80
   1400247f7:	xor    rax,rsp
   1400247fa:	mov    QWORD PTR [rsp+0x450],rax
   140024802:	add    rcx,0x70
   140024806:	call   0x1400244a0
   14002480b:	nop
   14002480c:	mov    rcx,QWORD PTR [rsp+0x450]
   140024814:	xor    rcx,rsp
   140024817:	call   0x140029b40
   14002481c:	add    rsp,0x468
   140024823:	ret    
   140024824:	int3   
   140024825:	int3   
   140024826:	int3   
   140024827:	int3   
   140024828:	int3   
   140024829:	int3   
   14002482a:	int3   
   14002482b:	int3   
   14002482c:	int3   
   14002482d:	int3   
   14002482e:	int3   
   14002482f:	int3   
   140024830:	mov    QWORD PTR [rsp+0x10],rdx
   140024835:	push   rbx
   140024836:	push   rbp
   140024837:	sub    rsp,0x38
   14002483b:	mov    rbp,rdx
   14002483e:	call   0x14002157c
   140024843:	mov    r11,rax
   140024846:	xor    ecx,ecx
   140024848:	test   rax,rax
   14002484b:	setne  cl
   14002484e:	test   ecx,ecx
   140024850:	jne    0x14002485d
   140024852:	mov    ecx,0x80004005
   140024857:	call   0x140003dc0
   14002485c:	int3   
   14002485d:	mov    rax,QWORD PTR [rax]
   140024860:	mov    rcx,r11
   140024863:	call   QWORD PTR [rax+0x18]
   140024866:	add    rax,0x18
   14002486a:	mov    QWORD PTR [rbp+0x30],rax
   14002486e:	mov    rcx,QWORD PTR [rbp+0x38]
   140024872:	mov    rax,QWORD PTR [rcx]
   140024875:	xor    r9d,r9d
   140024878:	mov    r8d,0x200
   14002487e:	lea    rdx,[rbp+0x50]
   140024882:	call   QWORD PTR [rax+0x18]
   140024885:	test   eax,eax
   140024887:	je     0x1400248ba
   140024889:	lea    rax,[rbp+0x50]
   14002488d:	mov    QWORD PTR [rsp+0x28],rax
   140024892:	mov    DWORD PTR [rsp+0x20],0x3c
   14002489a:	lea    r9,[rip+0x235c7]        # 0x140047e68
   1400248a1:	lea    r8,[rip+0x263f8]        # 0x14004aca0
   1400248a8:	lea    rdx,[rip+0x26411]        # 0x14004acc0
   1400248af:	lea    rcx,[rbp+0x30]
   1400248b3:	call   0x140005a00
   1400248b8:	jmp    0x1400248e0
   1400248ba:	mov    DWORD PTR [rsp+0x20],0x3c
   1400248c2:	lea    r9,[rip+0x2359f]        # 0x140047e68
   1400248c9:	lea    r8,[rip+0x263d0]        # 0x14004aca0
   1400248d0:	lea    rdx,[rip+0x26409]        # 0x14004ace0
   1400248d7:	lea    rcx,[rbp+0x30]
   1400248db:	call   0x140005a00
   1400248e0:	xor    r8d,r8d
   1400248e3:	xor    edx,edx
   1400248e5:	mov    rbx,QWORD PTR [rbp+0x30]
   1400248e9:	mov    rcx,rbx
   1400248ec:	call   0x140021d08
   1400248f1:	nop
   1400248f2:	lea    rdx,[rbx-0x18]
   1400248f6:	or     eax,0xffffffff
   1400248f9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400248fe:	add    eax,0xffffffff
   140024901:	test   eax,eax
   140024903:	jg     0x14002490e
   140024905:	mov    rcx,QWORD PTR [rdx]
   140024908:	mov    rax,QWORD PTR [rcx]
   14002490b:	call   QWORD PTR [rax+0x8]
   14002490e:	mov    rcx,QWORD PTR [rbp+0x38]
   140024912:	mov    rax,QWORD PTR [rcx]
   140024915:	mov    edx,0x1
   14002491a:	call   QWORD PTR [rax+0x8]
   14002491d:	nop
   14002491e:	lea    rax,[rip+0xfffffffffffffee7]        # 0x14002480c
   140024925:	jmp    0x140024927
   140024927:	add    rsp,0x38
   14002492b:	pop    rbp
   14002492c:	pop    rbx
   14002492d:	ret    
   14002492e:	int3   
   14002492f:	int3   
   140024930:	rex push rbp
   140024932:	sub    rsp,0x20
   140024936:	mov    rbp,rdx
   140024939:	lea    rcx,[rbp+0x30]
   14002493d:	call   0x140003de0
   140024942:	add    rsp,0x20
   140024946:	pop    rbp
   140024947:	ret    
   140024948:	sub    rsp,0x28
   14002494c:	mov    rdx,rcx
   14002494f:	mov    ecx,0x40
   140024954:	call   QWORD PTR [rip+0x1eb7e]        # 0x1400434d8
   14002495a:	test   rax,rax
   14002495d:	jne    0x140024965
   14002495f:	call   0x140021878
   140024964:	int3   
   140024965:	add    rsp,0x28
   140024969:	ret    
   14002496a:	int3   
   14002496b:	int3   
   14002496c:	sub    rsp,0x28
   140024970:	test   rcx,rcx
   140024973:	je     0x14002497b
   140024975:	call   QWORD PTR [rip+0x1eb65]        # 0x1400434e0
   14002497b:	add    rsp,0x28
   14002497f:	ret    
   140024980:	mov    QWORD PTR [rsp+0x8],rbx
   140024985:	mov    QWORD PTR [rsp+0x10],rsi
   14002498a:	push   rdi
   14002498b:	sub    rsp,0x20
   14002498f:	mov    rsi,rcx
   140024992:	add    rcx,0x28
   140024996:	movsxd rbx,edx
   140024999:	call   QWORD PTR [rip+0x1eba1]        # 0x140043540
   14002499f:	test   ebx,ebx
   1400249a1:	jle    0x1400249d1
   1400249a3:	cmp    ebx,DWORD PTR [rsi+0xc]
   1400249a6:	jge    0x1400249d1
   1400249a8:	mov    ecx,DWORD PTR [rsi]
   1400249aa:	call   QWORD PTR [rip+0x1ea18]        # 0x1400433c8
   1400249b0:	test   rax,rax
   1400249b3:	je     0x1400249d1
   1400249b5:	cmp    ebx,DWORD PTR [rax+0x10]
   1400249b8:	jge    0x1400249d1
   1400249ba:	mov    rax,QWORD PTR [rax+0x18]
   1400249be:	lea    rcx,[rsi+0x28]
   1400249c2:	mov    rbx,QWORD PTR [rax+rbx*8]
   1400249c6:	call   QWORD PTR [rip+0x1eb6c]        # 0x140043538
   1400249cc:	mov    rax,rbx
   1400249cf:	jmp    0x1400249dd
   1400249d1:	lea    rcx,[rsi+0x28]
   1400249d5:	call   QWORD PTR [rip+0x1eb5d]        # 0x140043538
   1400249db:	xor    eax,eax
   1400249dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400249e2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400249e7:	add    rsp,0x20
   1400249eb:	pop    rdi
   1400249ec:	ret    
   1400249ed:	int3   
   1400249ee:	int3   
   1400249ef:	int3   
   1400249f0:	sub    rsp,0x28
   1400249f4:	mov    edx,DWORD PTR [rcx]
   1400249f6:	test   edx,edx
   1400249f8:	je     0x140024a0d
   1400249fa:	mov    rcx,QWORD PTR [rip+0x3c24f]        # 0x140060c50
   140024a01:	test   rcx,rcx
   140024a04:	je     0x140024a0d
   140024a06:	call   0x140024980
   140024a0b:	jmp    0x140024a0f
   140024a0d:	xor    eax,eax
   140024a0f:	add    rsp,0x28
   140024a13:	ret    
   140024a14:	rex push rdi
   140024a16:	sub    rsp,0x30
   140024a1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024a23:	mov    QWORD PTR [rsp+0x40],rbx
   140024a28:	mov    rdi,rdx
   140024a2b:	mov    rbx,rcx
   140024a2e:	mov    rax,QWORD PTR [rcx]
   140024a31:	test   rax,rax
   140024a34:	jne    0x140024a56
   140024a36:	lea    ecx,[rax+0x10]
   140024a39:	call   0x14002431c
   140024a3e:	nop
   140024a3f:	mov    rax,QWORD PTR [rbx]
   140024a42:	test   rax,rax
   140024a45:	jne    0x140024a4c
   140024a47:	call   rdi
   140024a49:	mov    QWORD PTR [rbx],rax
   140024a4c:	mov    ecx,0x10
   140024a51:	call   0x1400243b0
   140024a56:	mov    rax,QWORD PTR [rbx]
   140024a59:	mov    rbx,QWORD PTR [rsp+0x40]
   140024a5e:	add    rsp,0x30
   140024a62:	pop    rdi
   140024a63:	ret    
   140024a64:	mov    QWORD PTR [rsp+0x10],rdx
   140024a69:	push   rbp
   140024a6a:	sub    rsp,0x20
   140024a6e:	mov    rbp,rdx
   140024a71:	mov    ecx,0x10
   140024a76:	call   0x1400243b0
   140024a7b:	xor    edx,edx
   140024a7d:	xor    ecx,ecx
   140024a7f:	call   0x14002bb20
   140024a84:	nop
   140024a85:	add    rsp,0x20
   140024a89:	pop    rbp
   140024a8a:	ret    
   140024a8b:	int3   
   140024a8c:	sub    rsp,0x28
   140024a90:	mov    rax,QWORD PTR [rcx]
   140024a93:	test   rax,rax
   140024a96:	je     0x140024ac3
   140024a98:	mov    rax,QWORD PTR [rcx]
   140024a9b:	mov    QWORD PTR [rsp+0x30],rax
   140024aa0:	mov    rax,QWORD PTR [rsp+0x30]
   140024aa5:	mov    QWORD PTR [rsp+0x30],rax
   140024aaa:	mov    rax,QWORD PTR [rsp+0x30]
   140024aaf:	test   rax,rax
   140024ab2:	je     0x140024ac3
   140024ab4:	mov    rcx,QWORD PTR [rsp+0x30]
   140024ab9:	mov    edx,0x1
   140024abe:	mov    rax,QWORD PTR [rcx]
   140024ac1:	call   QWORD PTR [rax]
   140024ac3:	add    rsp,0x28
   140024ac7:	ret    
   140024ac8:	sub    rsp,0x28
   140024acc:	test   rdx,rdx
   140024acf:	mov    r8,rcx
   140024ad2:	jne    0x140024ada
   140024ad4:	call   0x1400218c0
   140024ad9:	int3   
   140024ada:	mov    rax,QWORD PTR [r8]
   140024add:	mov    rcx,QWORD PTR [rcx+0x8]
   140024ae1:	mov    QWORD PTR [rdx+rcx*1],rax
   140024ae5:	mov    QWORD PTR [r8],rdx
   140024ae8:	add    rsp,0x28
   140024aec:	ret    
   140024aed:	int3   
   140024aee:	int3   
   140024aef:	int3   
   140024af0:	sub    rsp,0x28
   140024af4:	mov    r9,QWORD PTR [rcx]
   140024af7:	xor    r8d,r8d
   140024afa:	mov    r10,rcx
   140024afd:	cmp    r9,r8
   140024b00:	jne    0x140024b09
   140024b02:	xor    eax,eax
   140024b04:	add    rsp,0x28
   140024b08:	ret    
   140024b09:	cmp    r9,rdx
   140024b0c:	jne    0x140024b26
   140024b0e:	cmp    rdx,r8
   140024b11:	jne    0x140024b19
   140024b13:	call   0x1400218c0
   140024b18:	int3   
   140024b19:	mov    rax,QWORD PTR [rcx+0x8]
   140024b1d:	mov    rcx,QWORD PTR [rdx+rax*1]
   140024b21:	mov    QWORD PTR [r10],rcx
   140024b24:	jmp    0x140024b58
   140024b26:	cmp    r9,r8
   140024b29:	je     0x140024b63
   140024b2b:	mov    rax,QWORD PTR [r10+0x8]
   140024b2f:	lea    rcx,[rax+r9*1]
   140024b33:	cmp    QWORD PTR [rcx],rdx
   140024b36:	je     0x140024b42
   140024b38:	mov    r9,QWORD PTR [rcx]
   140024b3b:	cmp    r9,r8
   140024b3e:	jne    0x140024b2b
   140024b40:	jmp    0x140024b5e
   140024b42:	cmp    rdx,r8
   140024b45:	jne    0x140024b4d
   140024b47:	call   0x1400218c0
   140024b4c:	int3   
   140024b4d:	mov    rcx,rax
   140024b50:	mov    rax,QWORD PTR [rax+rdx*1]
   140024b54:	mov    QWORD PTR [rcx+r9*1],rax
   140024b58:	mov    r8d,0x1
   140024b5e:	mov    eax,r8d
   140024b61:	jmp    0x140024b04
   140024b63:	call   0x1400218c0
   140024b68:	int3   
   140024b69:	int3   
   140024b6a:	int3   
   140024b6b:	int3   
   140024b6c:	rex push rbx
   140024b6e:	sub    rsp,0x20
   140024b72:	xor    eax,eax
   140024b74:	mov    rbx,rcx
   140024b77:	mov    QWORD PTR [rcx+0x18],rax
   140024b7b:	mov    QWORD PTR [rcx+0x20],0x8
   140024b83:	mov    DWORD PTR [rcx+0x4],eax
   140024b86:	mov    DWORD PTR [rcx+0x8],0x1
   140024b8d:	mov    DWORD PTR [rcx+0xc],eax
   140024b90:	mov    QWORD PTR [rcx+0x10],rax
   140024b94:	call   QWORD PTR [rip+0x1e826]        # 0x1400433c0
   140024b9a:	cmp    eax,0xffffffff
   140024b9d:	mov    DWORD PTR [rbx],eax
   140024b9f:	jne    0x140024ba7
   140024ba1:	call   0x140021878
   140024ba6:	int3   
   140024ba7:	lea    rcx,[rbx+0x28]
   140024bab:	call   QWORD PTR [rip+0x1e82f]        # 0x1400433e0
   140024bb1:	mov    rax,rbx
   140024bb4:	add    rsp,0x20
   140024bb8:	pop    rbx
   140024bb9:	ret    
   140024bba:	int3   
   140024bbb:	int3   
   140024bbc:	mov    rax,rsp
   140024bbf:	mov    QWORD PTR [rax+0x8],rbx
   140024bc3:	mov    QWORD PTR [rax+0x10],rbp
   140024bc7:	mov    QWORD PTR [rax+0x18],rsi
   140024bcb:	mov    QWORD PTR [rax+0x20],rdi
   140024bcf:	push   r12
   140024bd1:	sub    rsp,0x20
   140024bd5:	mov    rdi,rcx
   140024bd8:	add    rcx,0x28
   140024bdc:	call   QWORD PTR [rip+0x1e95e]        # 0x140043540
   140024be2:	movsxd rcx,DWORD PTR [rdi+0x4]
   140024be6:	movsxd rsi,DWORD PTR [rdi+0x8]
   140024bea:	cmp    esi,ecx
   140024bec:	jge    0x140024c02
   140024bee:	mov    rax,QWORD PTR [rdi+0x10]
   140024bf2:	mov    rdx,rsi
   140024bf5:	add    rdx,rdx
   140024bf8:	test   BYTE PTR [rax+rdx*8],0x1
   140024bfc:	je     0x140024d0c
   140024c02:	mov    esi,0x1
   140024c07:	mov    rdx,rsi
   140024c0a:	cmp    rdx,rcx
   140024c0d:	jge    0x140024c2c
   140024c0f:	mov    rax,QWORD PTR [rdi+0x10]
   140024c13:	add    rax,0x10
   140024c17:	test   BYTE PTR [rax],0x1
   140024c1a:	je     0x140024c2c
   140024c1c:	add    rdx,0x1
   140024c20:	add    esi,0x1
   140024c23:	add    rax,0x10
   140024c27:	cmp    rdx,rcx
   140024c2a:	jl     0x140024c17
   140024c2c:	cmp    esi,ecx
   140024c2e:	jl     0x140024d0c
   140024c34:	lea    r12d,[rcx+0x20]
   140024c38:	mov    rcx,QWORD PTR [rdi+0x10]
   140024c3c:	test   rcx,rcx
   140024c3f:	jne    0x140024c6c
   140024c41:	mov    eax,r12d
   140024c44:	mov    ecx,0xffffffff
   140024c49:	shl    rax,0x4
   140024c4d:	cmp    rax,rcx
   140024c50:	jbe    0x140024c5d
   140024c52:	mov    ecx,0x80070057
   140024c57:	call   0x140003dc0
   140024c5c:	int3   
   140024c5d:	mov    edx,eax
   140024c5f:	mov    ecx,0x2
   140024c64:	call   QWORD PTR [rip+0x1e8a6]        # 0x140043510
   140024c6a:	jmp    0x140024cac
   140024c6c:	call   QWORD PTR [rip+0x1e73e]        # 0x1400433b0
   140024c72:	mov    rcx,rax
   140024c75:	mov    rbx,rax
   140024c78:	call   QWORD PTR [rip+0x1e8d2]        # 0x140043550
   140024c7e:	mov    r11d,r12d
   140024c81:	mov    ecx,0xffffffff
   140024c86:	shl    r11,0x4
   140024c8a:	cmp    r11,rcx
   140024c8d:	jbe    0x140024c9a
   140024c8f:	mov    ecx,0x80070057
   140024c94:	call   0x140003dc0
   140024c99:	int3   
   140024c9a:	mov    edx,r11d
   140024c9d:	mov    r8d,0x2002
   140024ca3:	mov    rcx,rbx
   140024ca6:	call   QWORD PTR [rip+0x1e70c]        # 0x1400433b8
   140024cac:	test   rax,rax
   140024caf:	jne    0x140024cd9
   140024cb1:	mov    rcx,QWORD PTR [rdi+0x10]
   140024cb5:	test   rcx,rcx
   140024cb8:	je     0x140024cc9
   140024cba:	call   QWORD PTR [rip+0x1e6f0]        # 0x1400433b0
   140024cc0:	mov    rcx,rax
   140024cc3:	call   QWORD PTR [rip+0x1e83f]        # 0x140043508
   140024cc9:	lea    rcx,[rdi+0x28]
   140024ccd:	call   QWORD PTR [rip+0x1e865]        # 0x140043538
   140024cd3:	call   0x140021878
   140024cd8:	int3   
   140024cd9:	mov    rcx,rax
   140024cdc:	call   QWORD PTR [rip+0x1e826]        # 0x140043508
   140024ce2:	movsxd rcx,DWORD PTR [rdi+0x4]
   140024ce6:	xor    edx,edx
   140024ce8:	mov    rbx,rax
   140024ceb:	mov    eax,r12d
   140024cee:	shl    rcx,0x4
   140024cf2:	sub    eax,DWORD PTR [rdi+0x4]
   140024cf5:	add    rcx,rbx
   140024cf8:	movsxd r8,eax
   140024cfb:	shl    r8,0x4
   140024cff:	call   0x14002ac20
   140024d04:	mov    DWORD PTR [rdi+0x4],r12d
   140024d08:	mov    QWORD PTR [rdi+0x10],rbx
   140024d0c:	cmp    esi,DWORD PTR [rdi+0xc]
   140024d0f:	jl     0x140024d17
   140024d11:	lea    ecx,[rsi+0x1]
   140024d14:	mov    DWORD PTR [rdi+0xc],ecx
   140024d17:	mov    rcx,QWORD PTR [rdi+0x10]
   140024d1b:	movsxd rdx,esi
   140024d1e:	add    rdx,rdx
   140024d21:	or     DWORD PTR [rcx+rdx*8],0x1
   140024d25:	lea    ecx,[rsi+0x1]
   140024d28:	mov    DWORD PTR [rdi+0x8],ecx
   140024d2b:	lea    rcx,[rdi+0x28]
   140024d2f:	call   QWORD PTR [rip+0x1e803]        # 0x140043538
   140024d35:	mov    rbx,QWORD PTR [rsp+0x30]
   140024d3a:	mov    rbp,QWORD PTR [rsp+0x38]
   140024d3f:	mov    rdi,QWORD PTR [rsp+0x48]
   140024d44:	mov    eax,esi
   140024d46:	mov    rsi,QWORD PTR [rsp+0x40]
   140024d4b:	add    rsp,0x20
   140024d4f:	pop    r12
   140024d51:	ret    
   140024d52:	int3   
   140024d53:	int3   
   140024d54:	mov    rax,rsp
   140024d57:	mov    QWORD PTR [rax+0x8],rbx
   140024d5b:	mov    QWORD PTR [rax+0x10],rbp
   140024d5f:	mov    QWORD PTR [rax+0x18],rsi
   140024d63:	mov    QWORD PTR [rax+0x20],rdi
   140024d67:	push   r12
   140024d69:	sub    rsp,0x20
   140024d6d:	mov    rsi,rcx
   140024d70:	add    rcx,0x28
   140024d74:	movsxd rdi,edx
   140024d77:	call   QWORD PTR [rip+0x1e7c3]        # 0x140043540
   140024d7d:	test   edi,edi
   140024d7f:	jle    0x140024dd2
   140024d81:	cmp    edi,DWORD PTR [rsi+0xc]
   140024d84:	jge    0x140024dd2
   140024d86:	mov    rbx,QWORD PTR [rsi+0x18]
   140024d8a:	jmp    0x140024db5
   140024d8c:	cmp    edi,DWORD PTR [rbx+0x10]
   140024d8f:	jge    0x140024db1
   140024d91:	mov    rax,QWORD PTR [rbx+0x18]
   140024d95:	mov    rcx,QWORD PTR [rax+rdi*8]
   140024d99:	test   rcx,rcx
   140024d9c:	je     0x140024da8
   140024d9e:	mov    rax,QWORD PTR [rcx]
   140024da1:	mov    edx,0x1
   140024da6:	call   QWORD PTR [rax]
   140024da8:	mov    rax,QWORD PTR [rbx+0x18]
   140024dac:	and    QWORD PTR [rax+rdi*8],0x0
   140024db1:	mov    rbx,QWORD PTR [rbx+0x8]
   140024db5:	test   rbx,rbx
   140024db8:	jne    0x140024d8c
   140024dba:	mov    rax,QWORD PTR [rsi+0x10]
   140024dbe:	mov    rdx,rdi
   140024dc1:	lea    rcx,[rsi+0x28]
   140024dc5:	add    rdx,rdx
   140024dc8:	and    DWORD PTR [rax+rdx*8],0xfffffffe
   140024dcc:	call   QWORD PTR [rip+0x1e766]        # 0x140043538
   140024dd2:	mov    rbx,QWORD PTR [rsp+0x30]
   140024dd7:	mov    rbp,QWORD PTR [rsp+0x38]
   140024ddc:	mov    rsi,QWORD PTR [rsp+0x40]
   140024de1:	mov    rdi,QWORD PTR [rsp+0x48]
   140024de6:	add    rsp,0x20
   140024dea:	pop    r12
   140024dec:	ret    
   140024ded:	int3   
   140024dee:	int3   
   140024def:	int3   
   140024df0:	mov    QWORD PTR [rsp+0x8],rcx
   140024df5:	push   rdi
   140024df6:	push   r12
   140024df8:	push   r13
   140024dfa:	sub    rsp,0x30
   140024dfe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024e07:	mov    QWORD PTR [rsp+0x58],rbx
   140024e0c:	mov    QWORD PTR [rsp+0x60],rsi
   140024e11:	mov    r13,r8
   140024e14:	movsxd rsi,edx
   140024e17:	mov    rdi,rcx
   140024e1a:	add    rcx,0x28
   140024e1e:	call   QWORD PTR [rip+0x1e71c]        # 0x140043540
   140024e24:	test   esi,esi
   140024e26:	jle    0x140024f5b
   140024e2c:	cmp    esi,DWORD PTR [rdi+0xc]
   140024e2f:	jge    0x140024f5b
   140024e35:	mov    ecx,DWORD PTR [rdi]
   140024e37:	call   QWORD PTR [rip+0x1e58b]        # 0x1400433c8
   140024e3d:	mov    rbx,rax
   140024e40:	test   rax,rax
   140024e43:	je     0x140024e59
   140024e45:	cmp    esi,DWORD PTR [rax+0x10]
   140024e48:	jl     0x140024f3d
   140024e4e:	test   r13,r13
   140024e51:	je     0x140024f3d
   140024e57:	jmp    0x140024e92
   140024e59:	mov    ecx,0x20
   140024e5e:	call   0x140024948
   140024e63:	mov    rbx,rax
   140024e66:	test   rax,rax
   140024e69:	je     0x140024e77
   140024e6b:	lea    rax,[rip+0x2305e]        # 0x140047ed0
   140024e72:	mov    QWORD PTR [rbx],rax
   140024e75:	jmp    0x140024e79
   140024e77:	xor    ebx,ebx
   140024e79:	and    DWORD PTR [rbx+0x10],0x0
   140024e7d:	and    QWORD PTR [rbx+0x18],0x0
   140024e82:	mov    rcx,QWORD PTR [rdi+0x20]
   140024e86:	mov    rax,QWORD PTR [rdi+0x18]
   140024e8a:	mov    QWORD PTR [rbx+rcx*1],rax
   140024e8e:	mov    QWORD PTR [rdi+0x18],rbx
   140024e92:	cmp    QWORD PTR [rbx+0x18],0x0
   140024e97:	jne    0x140024ec4
   140024e99:	mov    eax,DWORD PTR [rdi+0xc]
   140024e9c:	shl    rax,0x3
   140024ea0:	mov    ecx,0xffffffff
   140024ea5:	cmp    rax,rcx
   140024ea8:	jbe    0x140024eb5
   140024eaa:	mov    ecx,0x80070057
   140024eaf:	call   0x140003dc0
   140024eb4:	int3   
   140024eb5:	mov    edx,eax
   140024eb7:	xor    ecx,ecx
   140024eb9:	call   QWORD PTR [rip+0x1e619]        # 0x1400434d8
   140024ebf:	mov    r11,rax
   140024ec2:	jmp    0x140024ef5
   140024ec4:	mov    eax,DWORD PTR [rdi+0xc]
   140024ec7:	shl    rax,0x3
   140024ecb:	mov    ecx,0xffffffff
   140024ed0:	cmp    rax,rcx
   140024ed3:	jbe    0x140024ee0
   140024ed5:	mov    ecx,0x80070057
   140024eda:	call   0x140003dc0
   140024edf:	int3   
   140024ee0:	mov    edx,eax
   140024ee2:	mov    r8d,0x2
   140024ee8:	mov    rcx,QWORD PTR [rbx+0x18]
   140024eec:	call   QWORD PTR [rip+0x1e4ae]        # 0x1400433a0
   140024ef2:	mov    r11,rax
   140024ef5:	test   r11,r11
   140024ef8:	jne    0x140024f0a
   140024efa:	lea    rcx,[rdi+0x28]
   140024efe:	call   QWORD PTR [rip+0x1e634]        # 0x140043538
   140024f04:	call   0x140021878
   140024f09:	int3   
   140024f0a:	mov    QWORD PTR [rbx+0x18],r11
   140024f0e:	mov    eax,DWORD PTR [rdi+0xc]
   140024f11:	sub    eax,DWORD PTR [rbx+0x10]
   140024f14:	movsxd r8,eax
   140024f17:	shl    r8,0x3
   140024f1b:	movsxd rax,DWORD PTR [rbx+0x10]
   140024f1f:	lea    rcx,[r11+rax*8]
   140024f23:	xor    edx,edx
   140024f25:	call   0x14002ac20
   140024f2a:	mov    r11d,DWORD PTR [rdi+0xc]
   140024f2e:	mov    DWORD PTR [rbx+0x10],r11d
   140024f32:	mov    rdx,rbx
   140024f35:	mov    ecx,DWORD PTR [rdi]
   140024f37:	call   QWORD PTR [rip+0x1e46b]        # 0x1400433a8
   140024f3d:	mov    rcx,QWORD PTR [rbx+0x18]
   140024f41:	test   rcx,rcx
   140024f44:	je     0x140024f4f
   140024f46:	cmp    esi,DWORD PTR [rbx+0x10]
   140024f49:	jge    0x140024f4f
   140024f4b:	mov    QWORD PTR [rcx+rsi*8],r13
   140024f4f:	lea    rcx,[rdi+0x28]
   140024f53:	call   QWORD PTR [rip+0x1e5df]        # 0x140043538
   140024f59:	jmp    0x140024f65
   140024f5b:	lea    rcx,[rdi+0x28]
   140024f5f:	call   QWORD PTR [rip+0x1e5d3]        # 0x140043538
   140024f65:	mov    rbx,QWORD PTR [rsp+0x58]
   140024f6a:	mov    rsi,QWORD PTR [rsp+0x60]
   140024f6f:	add    rsp,0x30
   140024f73:	pop    r13
   140024f75:	pop    r12
   140024f77:	pop    rdi
   140024f78:	ret    
   140024f79:	int3   
   140024f7a:	int3   
   140024f7b:	int3   
   140024f7c:	int3   
   140024f7d:	int3   
   140024f7e:	int3   
   140024f7f:	int3   
   140024f80:	mov    QWORD PTR [rsp+0x10],rdx
   140024f85:	push   rbp
   140024f86:	sub    rsp,0x20
   140024f8a:	mov    rbp,rdx
   140024f8d:	mov    rcx,QWORD PTR [rbp+0x50]
   140024f91:	add    rcx,0x28
   140024f95:	call   QWORD PTR [rip+0x1e59d]        # 0x140043538
   140024f9b:	xor    edx,edx
   140024f9d:	xor    ecx,ecx
   140024f9f:	call   0x14002bb20
   140024fa4:	nop
   140024fa5:	add    rsp,0x20
   140024fa9:	pop    rbp
   140024faa:	ret    
   140024fab:	int3   
   140024fac:	rex push rbx
   140024fae:	sub    rsp,0x20
   140024fb2:	test   dl,0x1
   140024fb5:	mov    rbx,rcx
   140024fb8:	je     0x140024fc5
   140024fba:	test   rcx,rcx
   140024fbd:	je     0x140024fc5
   140024fbf:	call   QWORD PTR [rip+0x1e51b]        # 0x1400434e0
   140024fc5:	mov    rax,rbx
   140024fc8:	add    rsp,0x20
   140024fcc:	pop    rbx
   140024fcd:	ret    
   140024fce:	int3   
   140024fcf:	int3   
   140024fd0:	mov    rax,rsp
   140024fd3:	mov    QWORD PTR [rax+0x8],rbx
   140024fd7:	mov    QWORD PTR [rax+0x10],rbp
   140024fdb:	mov    QWORD PTR [rax+0x18],rsi
   140024fdf:	mov    QWORD PTR [rax+0x20],rdi
   140024fe3:	push   r12
   140024fe5:	push   r13
   140024fe7:	push   r14
   140024fe9:	sub    rsp,0x20
   140024fed:	mov    esi,0x1
   140024ff2:	mov    r14,r8
   140024ff5:	mov    rdi,rdx
   140024ff8:	cmp    DWORD PTR [rdx+0x10],esi
   140024ffb:	mov    r12,rcx
   140024ffe:	mov    ebp,esi
   140025000:	jle    0x14002505d
   140025002:	lea    ebx,[rsi+0x7]
   140025005:	lea    r13d,[rsi+0xf]
   140025009:	test   r14,r14
   14002500c:	je     0x140025029
   14002500e:	mov    rax,QWORD PTR [r12+0x10]
   140025013:	cmp    QWORD PTR [rax+r13*1+0x8],r14
   140025018:	je     0x140025029
   14002501a:	mov    rax,QWORD PTR [rdi+0x18]
   14002501e:	cmp    QWORD PTR [rbx+rax*1],0x0
   140025023:	je     0x140025049
   140025025:	xor    esi,esi
   140025027:	jmp    0x140025049
   140025029:	mov    rax,QWORD PTR [rdi+0x18]
   14002502d:	mov    rcx,QWORD PTR [rbx+rax*1]
   140025031:	test   rcx,rcx
   140025034:	je     0x140025040
   140025036:	mov    rax,QWORD PTR [rcx]
   140025039:	mov    edx,0x1
   14002503e:	call   QWORD PTR [rax]
   140025040:	mov    rax,QWORD PTR [rdi+0x18]
   140025044:	and    QWORD PTR [rbx+rax*1],0x0
   140025049:	add    ebp,0x1
   14002504c:	add    r13,0x10
   140025050:	add    rbx,0x8
   140025054:	cmp    ebp,DWORD PTR [rdi+0x10]
   140025057:	jl     0x140025009
   140025059:	test   esi,esi
   14002505b:	je     0x1400250a4
   14002505d:	lea    rcx,[r12+0x28]
   140025062:	call   QWORD PTR [rip+0x1e4d8]        # 0x140043540
   140025068:	lea    rcx,[r12+0x18]
   14002506d:	mov    rdx,rdi
   140025070:	call   0x140024af0
   140025075:	lea    rcx,[r12+0x28]
   14002507a:	call   QWORD PTR [rip+0x1e4b8]        # 0x140043538
   140025080:	mov    rcx,QWORD PTR [rdi+0x18]
   140025084:	call   QWORD PTR [rip+0x1e456]        # 0x1400434e0
   14002508a:	mov    r11,QWORD PTR [rdi]
   14002508d:	mov    edx,0x1
   140025092:	mov    rcx,rdi
   140025095:	call   QWORD PTR [r11]
   140025098:	mov    ecx,DWORD PTR [r12]
   14002509c:	xor    edx,edx
   14002509e:	call   QWORD PTR [rip+0x1e304]        # 0x1400433a8
   1400250a4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400250a9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400250ae:	mov    rsi,QWORD PTR [rsp+0x50]
   1400250b3:	mov    rdi,QWORD PTR [rsp+0x58]
   1400250b8:	add    rsp,0x20
   1400250bc:	pop    r14
   1400250be:	pop    r13
   1400250c0:	pop    r12
   1400250c2:	ret    
   1400250c3:	int3   
   1400250c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400250c9:	mov    QWORD PTR [rsp+0x10],rbp
   1400250ce:	mov    QWORD PTR [rsp+0x18],rsi
   1400250d3:	push   rdi
   1400250d4:	sub    rsp,0x20
   1400250d8:	mov    rdi,rcx
   1400250db:	add    rcx,0x28
   1400250df:	mov    ebx,r8d
   1400250e2:	mov    rbp,rdx
   1400250e5:	call   QWORD PTR [rip+0x1e455]        # 0x140043540
   1400250eb:	test   ebx,ebx
   1400250ed:	jne    0x14002510c
   1400250ef:	mov    ecx,DWORD PTR [rdi]
   1400250f1:	call   QWORD PTR [rip+0x1e2d1]        # 0x1400433c8
   1400250f7:	test   rax,rax
   1400250fa:	je     0x14002512c
   1400250fc:	mov    r8,rbp
   1400250ff:	mov    rdx,rax
   140025102:	mov    rcx,rdi
   140025105:	call   0x140024fd0
   14002510a:	jmp    0x14002512c
   14002510c:	mov    rdx,QWORD PTR [rdi+0x18]
   140025110:	test   rdx,rdx
   140025113:	je     0x14002512c
   140025115:	mov    rbx,QWORD PTR [rdx+0x8]
   140025119:	mov    r8,rbp
   14002511c:	mov    rcx,rdi
   14002511f:	call   0x140024fd0
   140025124:	test   rbx,rbx
   140025127:	mov    rdx,rbx
   14002512a:	jne    0x140025115
   14002512c:	lea    rcx,[rdi+0x28]
   140025130:	mov    rbx,QWORD PTR [rsp+0x30]
   140025135:	mov    rbp,QWORD PTR [rsp+0x38]
   14002513a:	mov    rsi,QWORD PTR [rsp+0x40]
   14002513f:	add    rsp,0x20
   140025143:	pop    rdi
   140025144:	rex.W jmp QWORD PTR [rip+0x1e3ed]        # 0x140043538
   14002514b:	int3   
   14002514c:	rex push rdi
   14002514e:	sub    rsp,0x30
   140025152:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002515b:	mov    QWORD PTR [rsp+0x40],rbx
   140025160:	mov    QWORD PTR [rsp+0x50],rsi
   140025165:	mov    rsi,rdx
   140025168:	mov    rdi,rcx
   14002516b:	xor    eax,eax
   14002516d:	test   rdx,rdx
   140025170:	setne  al
   140025173:	test   eax,eax
   140025175:	jne    0x14002517d
   140025177:	call   0x1400218c0
   14002517c:	int3   
   14002517d:	cmp    DWORD PTR [rcx],0x0
   140025180:	jne    0x1400251c6
   140025182:	mov    rax,QWORD PTR [rip+0x3bac7]        # 0x140060c50
   140025189:	test   rax,rax
   14002518c:	jne    0x1400251b2
   14002518e:	lea    rcx,[rip+0x3bacb]        # 0x140060c60
   140025195:	mov    QWORD PTR [rsp+0x48],rcx
   14002519a:	call   0x140024b6c
   14002519f:	nop
   1400251a0:	mov    QWORD PTR [rip+0x3baa9],rax        # 0x140060c50
   1400251a7:	test   rax,rax
   1400251aa:	jne    0x1400251b2
   1400251ac:	call   0x1400218c0
   1400251b1:	int3   
   1400251b2:	mov    rcx,rax
   1400251b5:	call   0x140024bbc
   1400251ba:	mov    DWORD PTR [rdi],eax
   1400251bc:	test   eax,eax
   1400251be:	jne    0x1400251c6
   1400251c0:	call   0x1400218c0
   1400251c5:	int3   
   1400251c6:	mov    edx,DWORD PTR [rdi]
   1400251c8:	mov    rcx,QWORD PTR [rip+0x3ba81]        # 0x140060c50
   1400251cf:	call   0x140024980
   1400251d4:	mov    rbx,rax
   1400251d7:	test   rax,rax
   1400251da:	jne    0x1400251f2
   1400251dc:	call   rsi
   1400251de:	mov    rbx,rax
   1400251e1:	mov    r8,rax
   1400251e4:	mov    edx,DWORD PTR [rdi]
   1400251e6:	mov    rcx,QWORD PTR [rip+0x3ba63]        # 0x140060c50
   1400251ed:	call   0x140024df0
   1400251f2:	mov    rax,rbx
   1400251f5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400251fa:	mov    rsi,QWORD PTR [rsp+0x50]
   1400251ff:	add    rsp,0x30
   140025203:	pop    rdi
   140025204:	ret    
   140025205:	int3   
   140025206:	int3   
   140025207:	int3   
   140025208:	int3   
   140025209:	int3   
   14002520a:	int3   
   14002520b:	int3   
   14002520c:	rex push rbp
   14002520e:	sub    rsp,0x20
   140025212:	mov    rbp,rdx
   140025215:	lea    rdx,[rip+0x3ba44]        # 0x140060c60
   14002521c:	mov    rcx,QWORD PTR [rbp+0x48]
   140025220:	call   0x1400161d0
   140025225:	add    rsp,0x20
   140025229:	pop    rbp
   14002522a:	ret    
   14002522b:	int3   
   14002522c:	rex push rbx
   14002522e:	sub    rsp,0x20
   140025232:	mov    edx,DWORD PTR [rcx]
   140025234:	mov    rbx,rcx
   140025237:	test   edx,edx
   140025239:	je     0x14002524c
   14002523b:	mov    rcx,QWORD PTR [rip+0x3ba0e]        # 0x140060c50
   140025242:	test   rcx,rcx
   140025245:	je     0x14002524c
   140025247:	call   0x140024d54
   14002524c:	and    DWORD PTR [rbx],0x0
   14002524f:	add    rsp,0x20
   140025253:	pop    rbx
   140025254:	ret    
   140025255:	int3   
   140025256:	int3   
   140025257:	int3   
   140025258:	sub    rsp,0x28
   14002525c:	mov    rax,rcx
   14002525f:	mov    rcx,QWORD PTR [rip+0x3b9ea]        # 0x140060c50
   140025266:	test   rcx,rcx
   140025269:	je     0x140025276
   14002526b:	mov    r8d,edx
   14002526e:	mov    rdx,rax
   140025271:	call   0x1400250c4
   140025276:	add    rsp,0x28
   14002527a:	ret    
   14002527b:	int3   
   14002527c:	mov    QWORD PTR [rsp+0x8],rbx
   140025281:	push   rdi
   140025282:	sub    rsp,0x20
   140025286:	mov    rdx,QWORD PTR [rcx+0x18]
   14002528a:	mov    rdi,rcx
   14002528d:	test   rdx,rdx
   140025290:	je     0x1400252a9
   140025292:	mov    rbx,QWORD PTR [rdx+0x8]
   140025296:	xor    r8d,r8d
   140025299:	mov    rcx,rdi
   14002529c:	call   0x140024fd0
   1400252a1:	test   rbx,rbx
   1400252a4:	mov    rdx,rbx
   1400252a7:	jne    0x140025292
   1400252a9:	cmp    DWORD PTR [rdi],0xffffffff
   1400252ac:	je     0x1400252b6
   1400252ae:	mov    ecx,DWORD PTR [rdi]
   1400252b0:	call   QWORD PTR [rip+0x1e0e2]        # 0x140043398
   1400252b6:	mov    rcx,QWORD PTR [rdi+0x10]
   1400252ba:	test   rcx,rcx
   1400252bd:	je     0x1400252da
   1400252bf:	call   QWORD PTR [rip+0x1e0eb]        # 0x1400433b0
   1400252c5:	mov    rcx,rax
   1400252c8:	mov    rbx,rax
   1400252cb:	call   QWORD PTR [rip+0x1e27f]        # 0x140043550
   1400252d1:	mov    rcx,rbx
   1400252d4:	call   QWORD PTR [rip+0x1e26e]        # 0x140043548
   1400252da:	lea    rcx,[rdi+0x28]
   1400252de:	mov    rbx,QWORD PTR [rsp+0x30]
   1400252e3:	add    rsp,0x20
   1400252e7:	pop    rdi
   1400252e8:	rex.W jmp QWORD PTR [rip+0x1e0e9]        # 0x1400433d8
   1400252ef:	int3   
   1400252f0:	sub    rsp,0x28
   1400252f4:	mov    eax,DWORD PTR [rip+0x3b9b6]        # 0x140060cb0
   1400252fa:	test   eax,eax
   1400252fc:	je     0x140025309
   1400252fe:	sub    eax,0x1
   140025301:	mov    DWORD PTR [rip+0x3b9a9],eax        # 0x140060cb0
   140025307:	jne    0x140025322
   140025309:	mov    rcx,QWORD PTR [rip+0x3b940]        # 0x140060c50
   140025310:	test   rcx,rcx
   140025313:	je     0x140025322
   140025315:	call   0x14002527c
   14002531a:	and    QWORD PTR [rip+0x3b92e],0x0        # 0x140060c50
   140025322:	add    rsp,0x28
   140025326:	ret    
   140025327:	int3   
   140025328:	mov    QWORD PTR [rsp+0x8],rbx
   14002532d:	mov    QWORD PTR [rsp+0x10],rsi
   140025332:	push   rdi
   140025333:	sub    rsp,0x20
   140025337:	test   edx,edx
   140025339:	mov    rdi,rcx
   14002533c:	mov    rcx,QWORD PTR [rcx+0x8]
   140025340:	mov    esi,edx
   140025342:	mov    eax,0x11
   140025347:	mov    ebx,r8d
   14002534a:	cmove  esi,eax
   14002534d:	test   rcx,rcx
   140025350:	je     0x14002535c
   140025352:	call   0x14001490c
   140025357:	and    QWORD PTR [rdi+0x8],0x0
   14002535c:	test   ebx,ebx
   14002535e:	je     0x140025392
   140025360:	mov    rcx,0xffffffffffffffff
   140025367:	mov    ebx,esi
   140025369:	mov    eax,0x8
   14002536e:	mul    rbx
   140025371:	cmovo  rax,rcx
   140025375:	mov    rcx,rax
   140025378:	call   0x1400148c0
   14002537d:	mov    r8d,esi
   140025380:	xor    edx,edx
   140025382:	mov    rcx,rax
   140025385:	shl    r8,0x3
   140025389:	mov    QWORD PTR [rdi+0x8],rax
   14002538d:	call   0x14002ac20
   140025392:	mov    rbx,QWORD PTR [rsp+0x30]
   140025397:	mov    DWORD PTR [rdi+0x10],esi
   14002539a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002539f:	add    rsp,0x20
   1400253a3:	pop    rdi
   1400253a4:	ret    
   1400253a5:	int3   
   1400253a6:	int3   
   1400253a7:	int3   
   1400253a8:	rex push rbx
   1400253aa:	sub    rsp,0x20
   1400253ae:	mov    rbx,rcx
   1400253b1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400253b5:	test   rcx,rcx
   1400253b8:	je     0x1400253c4
   1400253ba:	call   0x14001490c
   1400253bf:	and    QWORD PTR [rbx+0x8],0x0
   1400253c4:	mov    rcx,QWORD PTR [rbx+0x28]
   1400253c8:	and    QWORD PTR [rbx+0x18],0x0
   1400253cd:	and    QWORD PTR [rbx+0x20],0x0
   1400253d2:	call   0x140027c04
   1400253d7:	and    QWORD PTR [rbx+0x28],0x0
   1400253dc:	add    rsp,0x20
   1400253e0:	pop    rbx
   1400253e1:	ret    
   1400253e2:	int3   
   1400253e3:	int3   
   1400253e4:	mov    rax,rdx
   1400253e7:	mov    r10,rdx
   1400253ea:	xor    edx,edx
   1400253ec:	shr    rax,0x4
   1400253f0:	mov    DWORD PTR [r9],eax
   1400253f3:	div    DWORD PTR [rcx+0x10]
   1400253f6:	mov    DWORD PTR [r8],edx
   1400253f9:	mov    r8,QWORD PTR [rcx+0x8]
   1400253fd:	test   r8,r8
   140025400:	je     0x140025416
   140025402:	mov    rax,QWORD PTR [r8+rdx*8]
   140025406:	jmp    0x140025411
   140025408:	cmp    QWORD PTR [rax+0x8],r10
   14002540c:	je     0x140025418
   14002540e:	mov    rax,QWORD PTR [rax]
   140025411:	test   rax,rax
   140025414:	jne    0x140025408
   140025416:	xor    eax,eax
   140025418:	ret    
   140025419:	int3   
   14002541a:	int3   
   14002541b:	int3   
   14002541c:	sub    rsp,0x28
   140025420:	test   rcx,rcx
   140025423:	mov    r9,rdx
   140025426:	jne    0x14002542e
   140025428:	call   0x1400218c0
   14002542d:	int3   
   14002542e:	mov    r8,QWORD PTR [rcx+0x8]
   140025432:	test   r8,r8
   140025435:	je     0x140025457
   140025437:	mov    rax,rdx
   14002543a:	xor    edx,edx
   14002543c:	shr    rax,0x4
   140025440:	div    DWORD PTR [rcx+0x10]
   140025443:	mov    rax,QWORD PTR [r8+rdx*8]
   140025447:	jmp    0x140025452
   140025449:	cmp    QWORD PTR [rax+0x8],r9
   14002544d:	je     0x14002545e
   14002544f:	mov    rax,QWORD PTR [rax]
   140025452:	test   rax,rax
   140025455:	jne    0x140025449
   140025457:	xor    eax,eax
   140025459:	add    rsp,0x28
   14002545d:	ret    
   14002545e:	mov    rax,QWORD PTR [rax+0x10]
   140025462:	jmp    0x140025459
   140025464:	sub    rsp,0x38
   140025468:	mov    r11,r8
   14002546b:	lea    r9,[rsp+0x58]
   140025470:	lea    r8,[rsp+0x20]
   140025475:	call   0x1400253e4
   14002547a:	test   rax,rax
   14002547d:	je     0x14002548b
   14002547f:	mov    rax,QWORD PTR [rax+0x10]
   140025483:	mov    QWORD PTR [r11],rax
   140025486:	mov    eax,0x1
   14002548b:	add    rsp,0x38
   14002548f:	ret    
   140025490:	sub    rsp,0x28
   140025494:	mov    r9,QWORD PTR [rcx+0x8]
   140025498:	mov    r10,rdx
   14002549b:	mov    r8,rcx
   14002549e:	test   r9,r9
   1400254a1:	je     0x1400254c9
   1400254a3:	mov    rax,rdx
   1400254a6:	xor    edx,edx
   1400254a8:	shr    rax,0x4
   1400254ac:	div    DWORD PTR [rcx+0x10]
   1400254af:	lea    rdx,[r9+rdx*8]
   1400254b3:	mov    rcx,QWORD PTR [rdx]
   1400254b6:	jmp    0x1400254c4
   1400254b8:	cmp    QWORD PTR [rcx+0x8],r10
   1400254bc:	je     0x1400254d0
   1400254be:	mov    rdx,rcx
   1400254c1:	mov    rcx,QWORD PTR [rcx]
   1400254c4:	test   rcx,rcx
   1400254c7:	jne    0x1400254b8
   1400254c9:	xor    eax,eax
   1400254cb:	add    rsp,0x28
   1400254cf:	ret    
   1400254d0:	mov    rax,QWORD PTR [rcx]
   1400254d3:	mov    QWORD PTR [rdx],rax
   1400254d6:	mov    rax,QWORD PTR [r8+0x20]
   1400254da:	mov    QWORD PTR [rcx],rax
   1400254dd:	add    QWORD PTR [r8+0x18],0xffffffffffffffff
   1400254e2:	mov    QWORD PTR [r8+0x20],rcx
   1400254e6:	jne    0x1400254f0
   1400254e8:	mov    rcx,r8
   1400254eb:	call   0x1400253a8
   1400254f0:	mov    eax,0x1
   1400254f5:	jmp    0x1400254cb
   1400254f7:	int3   
   1400254f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400254fd:	mov    QWORD PTR [rsp+0x10],rsi
   140025502:	push   rdi
   140025503:	sub    rsp,0x20
   140025507:	mov    r10,QWORD PTR [rdx]
   14002550a:	mov    rdi,r9
   14002550d:	mov    rsi,r8
   140025510:	test   r10,r10
   140025513:	mov    rbx,rdx
   140025516:	mov    r11,rcx
   140025519:	je     0x14002559f
   14002551f:	cmp    r10,0xffffffffffffffff
   140025523:	jne    0x14002554e
   140025525:	xor    r9d,r9d
   140025528:	cmp    DWORD PTR [rcx+0x10],r9d
   14002552c:	jbe    0x14002554e
   14002552e:	mov    rax,QWORD PTR [rcx+0x8]
   140025532:	mov    r10,QWORD PTR [rax]
   140025535:	test   r10,r10
   140025538:	jne    0x14002554e
   14002553a:	add    r9d,0x1
   14002553e:	add    rax,0x8
   140025542:	cmp    r9d,DWORD PTR [rcx+0x10]
   140025546:	jb     0x140025532
   140025548:	call   0x1400218c0
   14002554d:	int3   
   14002554e:	mov    rcx,QWORD PTR [r10]
   140025551:	test   rcx,rcx
   140025554:	jne    0x14002558e
   140025556:	mov    r9d,DWORD PTR [r11+0x10]
   14002555a:	mov    rax,QWORD PTR [r10+0x8]
   14002555e:	xor    edx,edx
   140025560:	shr    rax,0x4
   140025564:	div    r9d
   140025567:	add    edx,0x1
   14002556a:	cmp    edx,r9d
   14002556d:	movsxd r8,edx
   140025570:	jae    0x14002558e
   140025572:	mov    rax,QWORD PTR [r11+0x8]
   140025576:	lea    r8,[rax+r8*8]
   14002557a:	mov    rcx,QWORD PTR [r8]
   14002557d:	test   rcx,rcx
   140025580:	jne    0x14002558e
   140025582:	add    edx,0x1
   140025585:	add    r8,0x8
   140025589:	cmp    edx,r9d
   14002558c:	jb     0x14002557a
   14002558e:	mov    QWORD PTR [rbx],rcx
   140025591:	mov    rax,QWORD PTR [r10+0x8]
   140025595:	mov    QWORD PTR [rsi],rax
   140025598:	mov    rax,QWORD PTR [r10+0x10]
   14002559c:	mov    QWORD PTR [rdi],rax
   14002559f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400255a4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400255a9:	add    rsp,0x20
   1400255ad:	pop    rdi
   1400255ae:	ret    
   1400255af:	int3   
   1400255b0:	lea    rax,[rip+0x22981]        # 0x140047f38
   1400255b7:	ret    
   1400255b8:	xor    r8d,r8d
   1400255bb:	lea    rax,[rip+0x229ae]        # 0x140047f70
   1400255c2:	mov    DWORD PTR [rcx+0x10],0x11
   1400255c9:	mov    QWORD PTR [rcx],rax
   1400255cc:	mov    eax,0xa
   1400255d1:	cmp    rdx,r8
   1400255d4:	cmovle rdx,rax
   1400255d8:	mov    QWORD PTR [rcx+0x8],r8
   1400255dc:	mov    QWORD PTR [rcx+0x18],r8
   1400255e0:	mov    QWORD PTR [rcx+0x20],r8
   1400255e4:	mov    QWORD PTR [rcx+0x28],r8
   1400255e8:	mov    rax,rcx
   1400255eb:	mov    QWORD PTR [rcx+0x30],rdx
   1400255ef:	ret    
   1400255f0:	lea    rax,[rip+0x22979]        # 0x140047f70
   1400255f7:	mov    QWORD PTR [rcx],rax
   1400255fa:	jmp    0x1400253a8
   1400255ff:	int3   
   140025600:	rex push rbx
   140025602:	sub    rsp,0x20
   140025606:	cmp    QWORD PTR [rcx+0x20],0x0
   14002560b:	mov    rbx,rcx
   14002560e:	jne    0x14002564b
   140025610:	mov    rdx,QWORD PTR [rbx+0x30]
   140025614:	add    rcx,0x28
   140025618:	mov    r8d,0x18
   14002561e:	call   0x140027bcc
   140025623:	mov    rdx,QWORD PTR [rbx+0x30]
   140025627:	lea    rcx,[rdx+rdx*2]
   14002562b:	add    rdx,0xffffffffffffffff
   14002562f:	lea    r8,[rax+rcx*8-0x10]
   140025634:	js     0x14002564b
   140025636:	mov    rax,QWORD PTR [rbx+0x20]
   14002563a:	mov    QWORD PTR [r8],rax
   14002563d:	mov    QWORD PTR [rbx+0x20],r8
   140025641:	sub    r8,0x18
   140025645:	sub    rdx,0x1
   140025649:	jns    0x140025636
   14002564b:	mov    rax,QWORD PTR [rbx+0x20]
   14002564f:	mov    rcx,QWORD PTR [rax]
   140025652:	add    QWORD PTR [rbx+0x18],0x1
   140025657:	mov    QWORD PTR [rbx+0x20],rcx
   14002565b:	and    QWORD PTR [rax+0x8],0x0
   140025660:	and    QWORD PTR [rax+0x10],0x0
   140025665:	add    rsp,0x20
   140025669:	pop    rbx
   14002566a:	ret    
   14002566b:	int3   
   14002566c:	mov    QWORD PTR [rsp+0x8],rbx
   140025671:	push   rdi
   140025672:	sub    rsp,0x20
   140025676:	lea    r9,[rsp+0x48]
   14002567b:	lea    r8,[rsp+0x40]
   140025680:	mov    rdi,rdx
   140025683:	mov    rbx,rcx
   140025686:	call   0x1400253e4
   14002568b:	test   rax,rax
   14002568e:	mov    r9,rax
   140025691:	jne    0x1400256cb
   140025693:	cmp    QWORD PTR [rcx+0x8],rax
   140025697:	jne    0x1400256a5
   140025699:	mov    edx,DWORD PTR [rcx+0x10]
   14002569c:	lea    r8d,[rax+0x1]
   1400256a0:	call   0x140025328
   1400256a5:	mov    rcx,rbx
   1400256a8:	call   0x140025600
   1400256ad:	mov    edx,DWORD PTR [rsp+0x40]
   1400256b1:	mov    QWORD PTR [rax+0x8],rdi
   1400256b5:	mov    r9,rax
   1400256b8:	mov    rax,QWORD PTR [rbx+0x8]
   1400256bc:	mov    rcx,QWORD PTR [rax+rdx*8]
   1400256c0:	mov    QWORD PTR [r9],rcx
   1400256c3:	mov    rax,QWORD PTR [rbx+0x8]
   1400256c7:	mov    QWORD PTR [rax+rdx*8],r9
   1400256cb:	lea    rax,[r9+0x10]
   1400256cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400256d4:	add    rsp,0x20
   1400256d8:	pop    rdi
   1400256d9:	ret    
   1400256da:	int3   
   1400256db:	int3   
   1400256dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400256e1:	push   rdi
   1400256e2:	sub    rsp,0x20
   1400256e6:	lea    rax,[rip+0x22883]        # 0x140047f70
   1400256ed:	mov    ebx,edx
   1400256ef:	mov    rdi,rcx
   1400256f2:	mov    QWORD PTR [rcx],rax
   1400256f5:	call   0x1400253a8
   1400256fa:	test   bl,0x1
   1400256fd:	je     0x140025707
   1400256ff:	mov    rcx,rdi
   140025702:	call   0x14001490c
   140025707:	mov    rax,rdi
   14002570a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002570f:	add    rsp,0x20
   140025713:	pop    rdi
   140025714:	ret    
   140025715:	int3   
   140025716:	int3   
   140025717:	int3   
   140025718:	mov    QWORD PTR [rsp+0x8],rbx
   14002571d:	push   rdi
   14002571e:	sub    rsp,0x20
   140025722:	mov    rax,QWORD PTR [rcx]
   140025725:	mov    rbx,rdx
   140025728:	mov    rdi,rcx
   14002572b:	call   QWORD PTR [rax+0x88]
   140025731:	test   rax,rax
   140025734:	jne    0x1400257de
   14002573a:	mov    rax,QWORD PTR [rdi]
   14002573d:	mov    rcx,rdi
   140025740:	call   QWORD PTR [rax+0x70]
   140025743:	mov    r8d,DWORD PTR [rbx]
   140025746:	cmp    DWORD PTR [rip+0x249b3],r8d        # 0x14004a100
   14002574d:	mov    r11,rax
   140025750:	jne    0x140025799
   140025752:	mov    ecx,DWORD PTR [rip+0x249ac]        # 0x14004a104
   140025758:	cmp    DWORD PTR [rbx+0x4],ecx
   14002575b:	jne    0x140025799
   14002575d:	mov    ecx,DWORD PTR [rip+0x249a5]        # 0x14004a108
   140025763:	cmp    DWORD PTR [rbx+0x8],ecx
   140025766:	jne    0x140025799
   140025768:	mov    ecx,DWORD PTR [rip+0x2499e]        # 0x14004a10c
   14002576e:	cmp    DWORD PTR [rbx+0xc],ecx
   140025771:	jne    0x140025799
   140025773:	mov    rcx,QWORD PTR [r11+0x8]
   140025777:	jmp    0x140025789
   140025779:	mov    rax,QWORD PTR [rcx+0x8]
   14002577d:	add    rax,rdi
   140025780:	cmp    DWORD PTR [rax],0x0
   140025783:	jne    0x1400257de
   140025785:	add    rcx,0x10
   140025789:	cmp    QWORD PTR [rcx],0x0
   14002578d:	jne    0x140025779
   14002578f:	mov    r11,QWORD PTR [r11]
   140025792:	test   r11,r11
   140025795:	je     0x1400257dc
   140025797:	jmp    0x140025773
   140025799:	mov    rdx,QWORD PTR [r11+0x8]
   14002579d:	jmp    0x1400257cc
   14002579f:	cmp    DWORD PTR [rcx],r8d
   1400257a2:	jne    0x1400257c8
   1400257a4:	mov    eax,DWORD PTR [rbx+0x4]
   1400257a7:	cmp    DWORD PTR [rcx+0x4],eax
   1400257aa:	jne    0x1400257c8
   1400257ac:	mov    eax,DWORD PTR [rbx+0x8]
   1400257af:	cmp    DWORD PTR [rcx+0x8],eax
   1400257b2:	jne    0x1400257c8
   1400257b4:	mov    eax,DWORD PTR [rbx+0xc]
   1400257b7:	cmp    DWORD PTR [rcx+0xc],eax
   1400257ba:	jne    0x1400257c8
   1400257bc:	mov    rax,QWORD PTR [rdx+0x8]
   1400257c0:	add    rax,rdi
   1400257c3:	cmp    DWORD PTR [rax],0x0
   1400257c6:	jne    0x1400257de
   1400257c8:	add    rdx,0x10
   1400257cc:	mov    rcx,QWORD PTR [rdx]
   1400257cf:	test   rcx,rcx
   1400257d2:	jne    0x14002579f
   1400257d4:	mov    r11,QWORD PTR [r11]
   1400257d7:	test   r11,r11
   1400257da:	jne    0x140025799
   1400257dc:	xor    eax,eax
   1400257de:	mov    rbx,QWORD PTR [rsp+0x30]
   1400257e3:	add    rsp,0x20
   1400257e7:	pop    rdi
   1400257e8:	ret    
   1400257e9:	int3   
   1400257ea:	int3   
   1400257eb:	int3   
   1400257ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400257f1:	mov    QWORD PTR [rsp+0x18],rbp
   1400257f6:	mov    QWORD PTR [rsp+0x20],rsi
   1400257fb:	push   rdi
   1400257fc:	sub    rsp,0x20
   140025800:	mov    rax,QWORD PTR [rcx]
   140025803:	mov    rbp,rdx
   140025806:	mov    rsi,rcx
   140025809:	call   QWORD PTR [rax+0x70]
   14002580c:	mov    rdi,rax
   14002580f:	mov    r8,QWORD PTR [rdi+0x8]
   140025813:	jmp    0x140025819
   140025815:	add    r8,0x10
   140025819:	cmp    QWORD PTR [r8],0x0
   14002581d:	jne    0x140025815
   14002581f:	lea    rbx,[r8+0x8]
   140025823:	jmp    0x140025856
   140025825:	mov    rax,QWORD PTR [rbx]
   140025828:	mov    rcx,QWORD PTR [rsi+rax*1]
   14002582c:	test   rcx,rcx
   14002582f:	je     0x140025852
   140025831:	mov    rax,QWORD PTR [rcx]
   140025834:	and    QWORD PTR [rsp+0x30],0x0
   14002583a:	lea    r8,[rsp+0x30]
   14002583f:	mov    rdx,rbp
   140025842:	call   QWORD PTR [rax]
   140025844:	test   eax,eax
   140025846:	jne    0x140025852
   140025848:	mov    rax,QWORD PTR [rsp+0x30]
   14002584d:	test   rax,rax
   140025850:	jne    0x140025866
   140025852:	add    rbx,0x10
   140025856:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14002585a:	jne    0x140025825
   14002585c:	mov    rdi,QWORD PTR [rdi]
   14002585f:	test   rdi,rdi
   140025862:	jne    0x14002580f
   140025864:	xor    eax,eax
   140025866:	mov    rbx,QWORD PTR [rsp+0x38]
   14002586b:	mov    rbp,QWORD PTR [rsp+0x40]
   140025870:	mov    rsi,QWORD PTR [rsp+0x48]
   140025875:	add    rsp,0x20
   140025879:	pop    rdi
   14002587a:	ret    
   14002587b:	int3   
   14002587c:	sub    rsp,0x28
   140025880:	cmp    QWORD PTR [rcx+0x10],0x0
   140025885:	je     0x140025893
   140025887:	mov    rcx,QWORD PTR [rcx+0x10]
   14002588b:	mov    rax,QWORD PTR [rcx]
   14002588e:	call   QWORD PTR [rax+0x8]
   140025891:	jmp    0x1400258a0
   140025893:	mov    eax,0x1
   140025898:	lock xadd DWORD PTR [rcx+0x8],eax
   14002589d:	add    eax,0x1
   1400258a0:	add    rsp,0x28
   1400258a4:	ret    
   1400258a5:	int3   
   1400258a6:	int3   
   1400258a7:	int3   
   1400258a8:	rex push rdi
   1400258aa:	sub    rsp,0x40
   1400258ae:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400258b7:	mov    QWORD PTR [rsp+0x50],rbx
   1400258bc:	mov    rbx,rcx
   1400258bf:	cmp    DWORD PTR [rcx+0x8],0x0
   1400258c3:	jne    0x1400258c9
   1400258c5:	xor    eax,eax
   1400258c7:	jmp    0x140025903
   1400258c9:	or     edi,0xffffffff
   1400258cc:	lock xadd DWORD PTR [rcx+0x8],edi
   1400258d1:	add    edi,0xffffffff
   1400258d4:	jne    0x140025901
   1400258d6:	mov    rdx,QWORD PTR [rcx+0x38]
   1400258da:	lea    rcx,[rsp+0x28]
   1400258df:	call   0x14001f364
   1400258e4:	nop
   1400258e5:	mov    rdx,QWORD PTR [rbx]
   1400258e8:	mov    rcx,rbx
   1400258eb:	call   QWORD PTR [rdx+0x20]
   1400258ee:	nop
   1400258ef:	cmp    DWORD PTR [rsp+0x30],edi
   1400258f3:	je     0x140025901
   1400258f5:	mov    rdx,QWORD PTR [rsp+0x28]
   1400258fa:	xor    ecx,ecx
   1400258fc:	call   0x14001e620
   140025901:	mov    eax,edi
   140025903:	mov    rbx,QWORD PTR [rsp+0x50]
   140025908:	add    rsp,0x40
   14002590c:	pop    rdi
   14002590d:	ret    
   14002590e:	int3   
   14002590f:	int3   
   140025910:	int3   
   140025911:	int3   
   140025912:	int3   
   140025913:	int3   
   140025914:	int3   
   140025915:	int3   
   140025916:	int3   
   140025917:	int3   
   140025918:	rex push rbp
   14002591a:	sub    rsp,0x20
   14002591e:	mov    rbp,rdx
   140025921:	lea    rcx,[rbp+0x28]
   140025925:	call   0x140016dcc
   14002592a:	add    rsp,0x20
   14002592e:	pop    rbp
   14002592f:	ret    
   140025930:	sub    rsp,0x28
   140025934:	cmp    QWORD PTR [rcx+0x10],0x0
   140025939:	je     0x140025947
   14002593b:	mov    rcx,QWORD PTR [rcx+0x10]
   14002593f:	mov    rax,QWORD PTR [rcx]
   140025942:	call   QWORD PTR [rax+0x10]
   140025945:	jmp    0x14002594c
   140025947:	call   0x1400258a8
   14002594c:	add    rsp,0x28
   140025950:	ret    
   140025951:	int3   
   140025952:	int3   
   140025953:	int3   
   140025954:	mov    QWORD PTR [rsp+0x8],rbx
   140025959:	mov    QWORD PTR [rsp+0x10],rsi
   14002595e:	push   rdi
   14002595f:	sub    rsp,0x20
   140025963:	mov    rdi,r8
   140025966:	mov    rsi,rdx
   140025969:	mov    rbx,rcx
   14002596c:	call   0x140025718
   140025971:	mov    rcx,rbx
   140025974:	test   rax,rax
   140025977:	mov    QWORD PTR [rdi],rax
   14002597a:	je     0x140025985
   14002597c:	call   0x14002587c
   140025981:	xor    eax,eax
   140025983:	jmp    0x14002599c
   140025985:	mov    rdx,rsi
   140025988:	call   0x1400257ec
   14002598d:	mov    QWORD PTR [rdi],rax
   140025990:	neg    rax
   140025993:	sbb    eax,eax
   140025995:	not    eax
   140025997:	and    eax,0x80004002
   14002599c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400259a1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400259a6:	add    rsp,0x20
   1400259aa:	pop    rdi
   1400259ab:	ret    
   1400259ac:	sub    rsp,0x28
   1400259b0:	cmp    QWORD PTR [rcx+0x10],0x0
   1400259b5:	je     0x1400259c2
   1400259b7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400259bb:	mov    rax,QWORD PTR [rcx]
   1400259be:	call   QWORD PTR [rax]
   1400259c0:	jmp    0x1400259c7
   1400259c2:	call   0x140025954
   1400259c7:	add    rsp,0x28
   1400259cb:	ret    
   1400259cc:	sub    rsp,0x28
   1400259d0:	call   0x14001f338
   1400259d5:	add    DWORD PTR [rax+0x20],0x1
   1400259d9:	add    rsp,0x28
   1400259dd:	ret    
   1400259de:	int3   
   1400259df:	int3   
   1400259e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400259e5:	push   rsi
   1400259e6:	push   rdi
   1400259e7:	push   r12
   1400259e9:	sub    rsp,0x30
   1400259ed:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400259f6:	mov    QWORD PTR [rsp+0x58],rbx
   1400259fb:	mov    QWORD PTR [rsp+0x60],rbp
   140025a00:	mov    rdi,r9
   140025a03:	mov    rsi,r8
   140025a06:	mov    rbp,rdx
   140025a09:	mov    rbx,rcx
   140025a0c:	lea    rax,[rip+0x225cd]        # 0x140047fe0
   140025a13:	mov    QWORD PTR [rcx],rax
   140025a16:	add    rcx,0x8
   140025a1a:	mov    r8d,0x40
   140025a20:	mov    edx,DWORD PTR [rdx+0x8]
   140025a23:	call   0x140027c24
   140025a28:	nop
   140025a29:	lea    rcx,[rbx+0x30]
   140025a2d:	mov    edx,0xa
   140025a32:	call   0x1400255b8
   140025a37:	nop
   140025a38:	mov    edx,0x4
   140025a3d:	lea    rcx,[rbx+0x68]
   140025a41:	call   0x1400255b8
   140025a46:	nop
   140025a47:	xor    eax,eax
   140025a49:	test   rsi,rsi
   140025a4c:	setne  al
   140025a4f:	test   eax,eax
   140025a51:	jne    0x140025a59
   140025a53:	call   0x1400218c0
   140025a58:	int3   
   140025a59:	xor    eax,eax
   140025a5b:	test   rdi,rdi
   140025a5e:	setne  al
   140025a61:	test   eax,eax
   140025a63:	jne    0x140025a6b
   140025a65:	call   0x1400218c0
   140025a6a:	int3   
   140025a6b:	xor    r8d,r8d
   140025a6e:	lea    edx,[r8+0x7]
   140025a72:	lea    rcx,[rbx+0x68]
   140025a76:	call   0x140025328
   140025a7b:	mov    QWORD PTR [rbx+0xa0],rbp
   140025a82:	mov    QWORD PTR [rbx+0x20],rsi
   140025a86:	mov    QWORD PTR [rbx+0x28],rdi
   140025a8a:	mov    rax,QWORD PTR [rsp+0x70]
   140025a8f:	mov    QWORD PTR [rbx+0xa8],rax
   140025a96:	mov    eax,DWORD PTR [rsp+0x78]
   140025a9a:	mov    DWORD PTR [rbx+0xb0],eax
   140025aa0:	mov    rax,rbx
   140025aa3:	mov    rbx,QWORD PTR [rsp+0x58]
   140025aa8:	mov    rbp,QWORD PTR [rsp+0x60]
   140025aad:	add    rsp,0x30
   140025ab1:	pop    r12
   140025ab3:	pop    rdi
   140025ab4:	pop    rsi
   140025ab5:	ret    
   140025ab6:	int3   
   140025ab7:	int3   
   140025ab8:	int3   
   140025ab9:	int3   
   140025aba:	int3   
   140025abb:	int3   
   140025abc:	int3   
   140025abd:	int3   
   140025abe:	int3   
   140025abf:	int3   
   140025ac0:	rex push rbp
   140025ac2:	sub    rsp,0x20
   140025ac6:	mov    rbp,rdx
   140025ac9:	mov    rcx,QWORD PTR [rbp+0x50]
   140025acd:	add    rcx,0x8
   140025ad1:	call   0x140027c74
   140025ad6:	add    rsp,0x20
   140025ada:	pop    rbp
   140025adb:	ret    
   140025adc:	int3   
   140025add:	int3   
   140025ade:	int3   
   140025adf:	int3   
   140025ae0:	rex push rbp
   140025ae2:	sub    rsp,0x20
   140025ae6:	mov    rbp,rdx
   140025ae9:	mov    rcx,QWORD PTR [rbp+0x50]
   140025aed:	add    rcx,0x30
   140025af1:	call   0x1400255f0
   140025af6:	add    rsp,0x20
   140025afa:	pop    rbp
   140025afb:	ret    
   140025afc:	int3   
   140025afd:	int3   
   140025afe:	int3   
   140025aff:	int3   
   140025b00:	rex push rbp
   140025b02:	sub    rsp,0x20
   140025b06:	mov    rbp,rdx
   140025b09:	mov    rcx,QWORD PTR [rbp+0x50]
   140025b0d:	add    rcx,0x68
   140025b11:	call   0x1400255f0
   140025b16:	add    rsp,0x20
   140025b1a:	pop    rbp
   140025b1b:	ret    
   140025b1c:	rex push rdi
   140025b1e:	push   r12
   140025b20:	push   r13
   140025b22:	sub    rsp,0x30
   140025b26:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140025b2f:	mov    QWORD PTR [rsp+0x50],rbx
   140025b34:	mov    QWORD PTR [rsp+0x60],rsi
   140025b39:	mov    rbx,rdx
   140025b3c:	mov    rsi,rcx
   140025b3f:	test   rdx,rdx
   140025b42:	jne    0x140025b4b
   140025b44:	xor    eax,eax
   140025b46:	jmp    0x140025bec
   140025b4b:	add    rcx,0x30
   140025b4f:	call   0x14002541c
   140025b54:	test   rax,rax
   140025b57:	jne    0x140025bec
   140025b5d:	mov    rdx,rbx
   140025b60:	lea    rcx,[rsi+0x68]
   140025b64:	call   0x14002541c
   140025b69:	test   rax,rax
   140025b6c:	je     0x140025b89
   140025b6e:	mov    rcx,QWORD PTR [rsi+0xa8]
   140025b75:	mov    QWORD PTR [rax+rcx*1],rbx
   140025b79:	cmp    DWORD PTR [rsi+0xb0],0x2
   140025b80:	jne    0x140025bec
   140025b82:	mov    QWORD PTR [rax+rcx*1+0x8],rbx
   140025b87:	jmp    0x140025bec
   140025b89:	lea    rcx,[rip+0xffffffffffffe980]        # 0x140024510
   140025b90:	call   0x1400148b0
   140025b95:	mov    r12,rax
   140025b98:	mov    QWORD PTR [rsp+0x58],rax
   140025b9d:	lea    rcx,[rsi+0x8]
   140025ba1:	call   0x140027c7c
   140025ba6:	mov    rdi,rax
   140025ba9:	test   rax,rax
   140025bac:	jne    0x140025bb3
   140025bae:	call   0x140021878
   140025bb3:	mov    rcx,rax
   140025bb6:	call   QWORD PTR [rsi+0x20]
   140025bb9:	mov    rdx,rbx
   140025bbc:	lea    rcx,[rsi+0x68]
   140025bc0:	call   0x14002566c
   140025bc5:	mov    QWORD PTR [rax],rdi
   140025bc8:	mov    rcx,r12
   140025bcb:	call   0x1400148b0
   140025bd0:	mov    r11,QWORD PTR [rsi+0xa8]
   140025bd7:	mov    QWORD PTR [rdi+r11*1],rbx
   140025bdb:	cmp    DWORD PTR [rsi+0xb0],0x2
   140025be2:	jne    0x140025be9
   140025be4:	mov    QWORD PTR [rdi+r11*1+0x8],rbx
   140025be9:	mov    rax,rdi
   140025bec:	mov    rbx,QWORD PTR [rsp+0x50]
   140025bf1:	mov    rsi,QWORD PTR [rsp+0x60]
   140025bf6:	add    rsp,0x30
   140025bfa:	pop    r13
   140025bfc:	pop    r12
   140025bfe:	pop    rdi
   140025bff:	ret    
   140025c00:	int3   
   140025c01:	int3   
   140025c02:	int3   
   140025c03:	int3   
   140025c04:	int3   
   140025c05:	int3   
   140025c06:	int3   
   140025c07:	int3   
   140025c08:	int3   
   140025c09:	int3   
   140025c0a:	int3   
   140025c0b:	int3   
   140025c0c:	mov    QWORD PTR [rsp+0x10],rdx
   140025c11:	push   rbp
   140025c12:	sub    rsp,0x20
   140025c16:	mov    rbp,rdx
   140025c19:	mov    rcx,QWORD PTR [rbp+0x58]
   140025c1d:	call   0x1400148b0
   140025c22:	xor    edx,edx
   140025c24:	xor    ecx,ecx
   140025c26:	call   0x14002bb20
   140025c2b:	nop
   140025c2c:	add    rsp,0x20
   140025c30:	pop    rbp
   140025c31:	ret    
   140025c32:	int3   
   140025c33:	int3   
   140025c34:	test   rcx,rcx
   140025c37:	je     0x140025cc2
   140025c3d:	mov    QWORD PTR [rsp+0x20],rbx
   140025c42:	push   rdi
   140025c43:	sub    rsp,0x20
   140025c47:	mov    rax,QWORD PTR [rcx+0x80]
   140025c4e:	mov    rbx,rcx
   140025c51:	neg    rax
   140025c54:	sbb    rdx,rdx
   140025c57:	mov    QWORD PTR [rsp+0x38],rdx
   140025c5c:	je     0x140025ca6
   140025c5e:	lea    r9,[rsp+0x30]
   140025c63:	lea    r8,[rsp+0x40]
   140025c68:	lea    rdx,[rsp+0x38]
   140025c6d:	lea    rcx,[rbx+0x68]
   140025c71:	call   0x1400254f8
   140025c76:	mov    r11,QWORD PTR [rbx+0xa8]
   140025c7d:	mov    rax,QWORD PTR [rsp+0x30]
   140025c82:	and    QWORD PTR [rax+r11*1],0x0
   140025c87:	cmp    DWORD PTR [rbx+0xb0],0x2
   140025c8e:	jne    0x140025c96
   140025c90:	and    QWORD PTR [rax+r11*1+0x8],0x0
   140025c96:	mov    rcx,QWORD PTR [rsp+0x30]
   140025c9b:	call   QWORD PTR [rbx+0x28]
   140025c9e:	cmp    QWORD PTR [rsp+0x38],0x0
   140025ca4:	jne    0x140025c5e
   140025ca6:	lea    rcx,[rbx+0x68]
   140025caa:	call   0x1400253a8
   140025caf:	lea    rcx,[rbx+0x8]
   140025cb3:	call   0x140027c50
   140025cb8:	mov    rbx,QWORD PTR [rsp+0x48]
   140025cbd:	add    rsp,0x20
   140025cc1:	pop    rdi
   140025cc2:	ret    
   140025cc3:	int3   
   140025cc4:	mov    QWORD PTR [rsp+0x8],rcx
   140025cc9:	push   rdi
   140025cca:	sub    rsp,0x30
   140025cce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140025cd7:	mov    QWORD PTR [rsp+0x48],rbx
   140025cdc:	mov    ebx,edx
   140025cde:	mov    rdi,rcx
   140025ce1:	lea    rax,[rip+0x222f8]        # 0x140047fe0
   140025ce8:	mov    QWORD PTR [rcx],rax
   140025ceb:	call   0x140025c34
   140025cf0:	nop
   140025cf1:	lea    rcx,[rdi+0x68]
   140025cf5:	call   0x1400255f0
   140025cfa:	nop
   140025cfb:	lea    rcx,[rdi+0x30]
   140025cff:	call   0x1400255f0
   140025d04:	nop
   140025d05:	lea    rcx,[rdi+0x8]
   140025d09:	call   0x140027c74
   140025d0e:	test   bl,0x1
   140025d11:	je     0x140025d1b
   140025d13:	mov    rcx,rdi
   140025d16:	call   0x14001490c
   140025d1b:	mov    rax,rdi
   140025d1e:	mov    rbx,QWORD PTR [rsp+0x48]
   140025d23:	add    rsp,0x30
   140025d27:	pop    rdi
   140025d28:	ret    
   140025d29:	int3   
   140025d2a:	int3   
   140025d2b:	int3   
   140025d2c:	int3   
   140025d2d:	int3   
   140025d2e:	int3   
   140025d2f:	int3   
   140025d30:	int3   
   140025d31:	int3   
   140025d32:	int3   
   140025d33:	int3   
   140025d34:	rex push rbp
   140025d36:	sub    rsp,0x20
   140025d3a:	mov    rbp,rdx
   140025d3d:	mov    rcx,QWORD PTR [rbp+0x40]
   140025d41:	add    rcx,0x8
   140025d45:	call   0x140027c74
   140025d4a:	add    rsp,0x20
   140025d4e:	pop    rbp
   140025d4f:	ret    
   140025d50:	int3   
   140025d51:	int3   
   140025d52:	int3   
   140025d53:	int3   
   140025d54:	rex push rbp
   140025d56:	sub    rsp,0x20
   140025d5a:	mov    rbp,rdx
   140025d5d:	mov    rcx,QWORD PTR [rbp+0x40]
   140025d61:	add    rcx,0x30
   140025d65:	call   0x1400255f0
   140025d6a:	add    rsp,0x20
   140025d6e:	pop    rbp
   140025d6f:	ret    
   140025d70:	int3   
   140025d71:	int3   
   140025d72:	int3   
   140025d73:	int3   
   140025d74:	rex push rbp
   140025d76:	sub    rsp,0x20
   140025d7a:	mov    rbp,rdx
   140025d7d:	mov    rcx,QWORD PTR [rbp+0x40]
   140025d81:	add    rcx,0x68
   140025d85:	call   0x1400255f0
   140025d8a:	add    rsp,0x20
   140025d8e:	pop    rbp
   140025d8f:	ret    
   140025d90:	mov    rax,rsp
   140025d93:	push   r13
   140025d95:	sub    rsp,0x30
   140025d99:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140025da2:	mov    QWORD PTR [rax+0x8],rbx
   140025da6:	mov    QWORD PTR [rax+0x10],rsi
   140025daa:	mov    QWORD PTR [rax+0x18],rdi
   140025dae:	mov    QWORD PTR [rax+0x20],r12
   140025db2:	mov    edi,ecx
   140025db4:	call   0x14001f338
   140025db9:	mov    rsi,rax
   140025dbc:	mov    edx,DWORD PTR [rax+0x20]
   140025dbf:	xor    ebx,ebx
   140025dc1:	cmp    edx,ebx
   140025dc3:	je     0x140025eb0
   140025dc9:	add    edx,0xffffffff
   140025dcc:	mov    DWORD PTR [rax+0x20],edx
   140025dcf:	cmp    edx,ebx
   140025dd1:	jne    0x140025eb0
   140025dd7:	cmp    edi,ebx
   140025dd9:	je     0x140025e27
   140025ddb:	cmp    edi,0xffffffff
   140025dde:	je     0x140025dfa
   140025de0:	call   0x14001f3b8
   140025de5:	cmp    rax,rbx
   140025de8:	je     0x140025dfa
   140025dea:	mov    r8,QWORD PTR [rax+0x78]
   140025dee:	cmp    r8,rbx
   140025df1:	je     0x140025dfa
   140025df3:	xor    edx,edx
   140025df5:	xor    ecx,ecx
   140025df7:	call   r8
   140025dfa:	mov    rcx,QWORD PTR [rsi+0x40]
   140025dfe:	call   0x140025c34
   140025e03:	mov    rcx,QWORD PTR [rsi+0x38]
   140025e07:	call   0x140025c34
   140025e0c:	mov    rcx,QWORD PTR [rsi+0x30]
   140025e10:	call   0x140025c34
   140025e15:	mov    rcx,QWORD PTR [rsi+0x28]
   140025e19:	call   0x140025c34
   140025e1e:	mov    rcx,QWORD PTR [rsi+0x48]
   140025e22:	call   0x140025c34
   140025e27:	call   0x14001f2e8
   140025e2c:	mov    r12,QWORD PTR [rax+0x8]
   140025e30:	lea    rcx,[rip+0x3a7f1]        # 0x140060628
   140025e37:	call   0x1400249f0
   140025e3c:	mov    rdi,rax
   140025e3f:	cmp    rax,rbx
   140025e42:	je     0x140025eb0
   140025e44:	cmp    r12,rbx
   140025e47:	je     0x140025eb0
   140025e49:	mov    rcx,QWORD PTR [rax+0x18]
   140025e4d:	cmp    rcx,rbx
   140025e50:	je     0x140025e61
   140025e52:	call   0x14002c7a0
   140025e57:	cmp    rax,QWORD PTR [r12+0x128]
   140025e5f:	jae    0x140025eb0
   140025e61:	cmp    QWORD PTR [r12+0x128],rbx
   140025e69:	je     0x140025eb0
   140025e6b:	mov    r13,rbx
   140025e6e:	mov    rcx,QWORD PTR [rdi+0x18]
   140025e72:	cmp    rcx,rbx
   140025e75:	je     0x140025e89
   140025e77:	call   0x14002c7a0
   140025e7c:	mov    r13,rax
   140025e7f:	mov    rcx,QWORD PTR [rdi+0x18]
   140025e83:	call   0x14002a380
   140025e88:	nop
   140025e89:	mov    rcx,QWORD PTR [r12+0x128]
   140025e91:	call   0x14002a110
   140025e96:	mov    QWORD PTR [rdi+0x18],rax
   140025e9a:	cmp    rax,rbx
   140025e9d:	jne    0x140025eb0
   140025e9f:	cmp    r13,rbx
   140025ea2:	je     0x140025eb0
   140025ea4:	mov    rcx,r13
   140025ea7:	call   0x14002a110
   140025eac:	mov    QWORD PTR [rdi+0x18],rax
   140025eb0:	cmp    DWORD PTR [rsi+0x20],ebx
   140025eb3:	setne  bl
   140025eb6:	mov    eax,ebx
   140025eb8:	mov    rbx,QWORD PTR [rsp+0x40]
   140025ebd:	mov    rsi,QWORD PTR [rsp+0x48]
   140025ec2:	mov    rdi,QWORD PTR [rsp+0x50]
   140025ec7:	mov    r12,QWORD PTR [rsp+0x58]
   140025ecc:	add    rsp,0x30
   140025ed0:	pop    r13
   140025ed2:	ret    
   140025ed3:	int3   
   140025ed4:	int3   
   140025ed5:	int3   
   140025ed6:	int3   
   140025ed7:	int3   
   140025ed8:	int3   
   140025ed9:	int3   
   140025eda:	int3   
   140025edb:	int3   
   140025edc:	int3   
   140025edd:	int3   
   140025ede:	int3   
   140025edf:	int3   
   140025ee0:	mov    QWORD PTR [rsp+0x10],rdx
   140025ee5:	push   rbp
   140025ee6:	sub    rsp,0x20
   140025eea:	mov    rbp,rdx
   140025eed:	xor    edx,edx
   140025eef:	xor    ecx,ecx
   140025ef1:	call   0x14002bb20
   140025ef6:	nop
   140025ef7:	add    rsp,0x20
   140025efb:	pop    rbp
   140025efc:	ret    
   140025efd:	int3   
   140025efe:	int3   
   140025eff:	int3   
   140025f00:	sub    rsp,0x28
   140025f04:	call   0x14001f2e8
   140025f09:	xor    ecx,ecx
   140025f0b:	cmp    DWORD PTR [rax+0x50],ecx
   140025f0e:	sete   cl
   140025f11:	mov    eax,ecx
   140025f13:	add    rsp,0x28
   140025f17:	ret    
   140025f18:	sub    rsp,0x28
   140025f1c:	call   0x14001f2e8
   140025f21:	lock add DWORD PTR [rax+0x50],0x1
   140025f26:	add    rsp,0x28
   140025f2a:	ret    
   140025f2b:	int3   
   140025f2c:	sub    rsp,0x28
   140025f30:	call   0x14001f2e8
   140025f35:	mov    eax,DWORD PTR [rax+0x54]
   140025f38:	add    rsp,0x28
   140025f3c:	ret    
   140025f3d:	int3   
   140025f3e:	int3   
   140025f3f:	int3   
   140025f40:	rex push rbx
   140025f42:	sub    rsp,0x20
   140025f46:	call   0x14001f2e8
   140025f4b:	cmp    DWORD PTR [rax+0x54],0x0
   140025f4f:	jne    0x140025f9e
   140025f51:	call   0x14001f2e8
   140025f56:	mov    DWORD PTR [rax+0x54],0x1
   140025f5d:	call   0x14001f2e8
   140025f62:	mov    rbx,QWORD PTR [rax+0x8]
   140025f66:	test   rbx,rbx
   140025f69:	je     0x140025f8c
   140025f6b:	mov    rcx,QWORD PTR [rbx+0x40]
   140025f6f:	test   rcx,rcx
   140025f72:	je     0x140025f8c
   140025f74:	call   0x140020094
   140025f79:	test   eax,eax
   140025f7b:	je     0x140025f9e
   140025f7d:	mov    rcx,QWORD PTR [rbx+0x40]
   140025f81:	mov    rax,QWORD PTR [rcx]
   140025f84:	call   QWORD PTR [rax+0xc0]
   140025f8a:	jmp    0x140025f9e
   140025f8c:	call   0x14001f2e8
   140025f91:	cmp    BYTE PTR [rax+0x28],0x0
   140025f95:	jne    0x140025f9e
   140025f97:	xor    ecx,ecx
   140025f99:	call   0x1400226fc
   140025f9e:	add    rsp,0x20
   140025fa2:	pop    rbx
   140025fa3:	ret    
   140025fa4:	sub    rsp,0x28
   140025fa8:	call   0x14001f2e8
   140025fad:	lock add DWORD PTR [rax+0x50],0xffffffff
   140025fb2:	jne    0x140025fb9
   140025fb4:	call   0x140025f40
   140025fb9:	add    rsp,0x28
   140025fbd:	ret    
   140025fbe:	int3   
   140025fbf:	int3   
   140025fc0:	xor    eax,eax
   140025fc2:	cmp    rcx,rax
   140025fc5:	setne  al
   140025fc8:	ret    
   140025fc9:	int3   
   140025fca:	int3   
   140025fcb:	int3   
   140025fcc:	sub    rsp,0x28
   140025fd0:	mov    rcx,QWORD PTR [rcx]
   140025fd3:	test   rcx,rcx
   140025fd6:	je     0x140025fde
   140025fd8:	call   QWORD PTR [rip+0x1d56a]        # 0x140043548
   140025fde:	add    rsp,0x28
   140025fe2:	ret    
   140025fe3:	int3   
   140025fe4:	mov    rax,QWORD PTR [rcx]
   140025fe7:	and    QWORD PTR [rcx],0x0
   140025feb:	ret    
   140025fec:	or     r8w,0xffff
   140025ff2:	lea    rdx,[rcx+0x1a]
   140025ff6:	cmp    WORD PTR [rcx+0x2],r8w
   140025ffb:	je     0x140026001
   140025ffd:	lea    rdx,[rcx+0x12]
   140026001:	cmp    WORD PTR [rdx],r8w
   140026005:	jne    0x14002600d
   140026007:	add    rdx,0x4
   14002600b:	jmp    0x140026019
   14002600d:	movzx  eax,WORD PTR [rdx]
   140026010:	add    rdx,0x2
   140026014:	test   ax,ax
   140026017:	jne    0x14002600d
   140026019:	cmp    WORD PTR [rdx],r8w
   14002601d:	jne    0x140026025
   14002601f:	add    rdx,0x4
   140026023:	jmp    0x140026031
   140026025:	movzx  ecx,WORD PTR [rdx]
   140026028:	add    rdx,0x2
   14002602c:	test   cx,cx
   14002602f:	jne    0x140026025
   140026031:	movzx  ecx,WORD PTR [rdx]
   140026034:	add    rdx,0x2
   140026038:	test   cx,cx
   14002603b:	jne    0x140026031
   14002603d:	mov    rax,rdx
   140026040:	ret    
   140026041:	int3   
   140026042:	int3   
   140026043:	int3   
   140026044:	mov    QWORD PTR [rsp+0x8],rbx
   140026049:	mov    QWORD PTR [rsp+0x10],rsi
   14002604e:	push   rdi
   14002604f:	sub    rsp,0x20
   140026053:	xor    edi,edi
   140026055:	cmp    WORD PTR [rcx+0x2],0xffff
   14002605b:	mov    rsi,rcx
   14002605e:	sete   dil
   140026062:	call   0x140025fec
   140026067:	cmp    WORD PTR [rsi+0x2],0xffff
   14002606d:	mov    rbx,rax
   140026070:	jne    0x140026077
   140026072:	mov    eax,DWORD PTR [rsi+0xc]
   140026075:	jmp    0x140026079
   140026077:	mov    eax,DWORD PTR [rsi]
   140026079:	test   al,0x40
   14002607b:	je     0x14002609e
   14002607d:	mov    eax,edi
   14002607f:	neg    eax
   140026081:	sbb    ecx,ecx
   140026083:	and    ecx,0x2
   140026086:	add    ecx,0x1
   140026089:	lea    eax,[rcx+rcx*1]
   14002608c:	cdqe   
   14002608e:	add    rbx,rax
   140026091:	mov    rcx,rbx
   140026094:	call   0x14002ad10
   140026099:	lea    rbx,[rbx+rax*2+0x2]
   14002609e:	test   edi,edi
   1400260a0:	je     0x1400260a8
   1400260a2:	movzx  edx,WORD PTR [rsi+0x10]
   1400260a6:	jmp    0x1400260ac
   1400260a8:	mov    dx,WORD PTR [rsi+0x8]
   1400260ac:	test   dx,dx
   1400260af:	movsxd r9,edi
   1400260b2:	je     0x14002611e
   1400260b4:	neg    edi
   1400260b6:	sbb    r8,r8
   1400260b9:	and    r8d,0x6
   1400260bd:	add    r8,0x12
   1400260c1:	lea    rcx,[rbx+0x3]
   1400260c5:	and    rcx,0xfffffffffffffffc
   1400260c9:	add    rcx,r8
   1400260cc:	cmp    WORD PTR [rcx],0xffff
   1400260d1:	jne    0x1400260d9
   1400260d3:	add    rcx,0x4
   1400260d7:	jmp    0x1400260e5
   1400260d9:	movzx  eax,WORD PTR [rcx]
   1400260dc:	add    rcx,0x2
   1400260e0:	test   ax,ax
   1400260e3:	jne    0x1400260d9
   1400260e5:	cmp    WORD PTR [rcx],0xffff
   1400260ea:	jne    0x1400260f2
   1400260ec:	add    rcx,0x4
   1400260f0:	jmp    0x1400260fe
   1400260f2:	movzx  eax,WORD PTR [rcx]
   1400260f5:	add    rcx,0x2
   1400260f9:	test   ax,ax
   1400260fc:	jne    0x1400260f2
   1400260fe:	movzx  eax,WORD PTR [rcx]
   140026101:	test   ax,ax
   140026104:	je     0x14002610f
   140026106:	test   r9,r9
   140026109:	jne    0x14002610f
   14002610b:	add    ax,0xfffe
   14002610f:	add    dx,0xffff
   140026114:	movzx  eax,ax
   140026117:	lea    rbx,[rcx+rax*1+0x2]
   14002611c:	jne    0x1400260c1
   14002611e:	sub    rbx,rsi
   140026121:	mov    rsi,QWORD PTR [rsp+0x38]
   140026126:	mov    eax,ebx
   140026128:	mov    rbx,QWORD PTR [rsp+0x30]
   14002612d:	add    rsp,0x20
   140026131:	pop    rdi
   140026132:	ret    
   140026133:	int3   
   140026134:	mov    QWORD PTR [rsp+0x8],rbx
   140026139:	mov    QWORD PTR [rsp+0x10],rsi
   14002613e:	push   rdi
   14002613f:	sub    rsp,0x20
   140026143:	mov    rsi,rdx
   140026146:	lea    edx,[r8+0x40]
   14002614a:	mov    eax,r8d
   14002614d:	cmp    rdx,rax
   140026150:	mov    rdi,rcx
   140026153:	mov    DWORD PTR [rcx+0x8],r8d
   140026157:	jae    0x140026160
   140026159:	xor    eax,eax
   14002615b:	jmp    0x1400261e2
   140026160:	mov    ecx,0x40
   140026165:	call   QWORD PTR [rip+0x1d3a5]        # 0x140043510
   14002616b:	test   rax,rax
   14002616e:	mov    QWORD PTR [rdi],rax
   140026171:	je     0x140026159
   140026173:	mov    rcx,rax
   140026176:	call   QWORD PTR [rip+0x1d38c]        # 0x140043508
   14002617c:	mov    edx,DWORD PTR [rdi+0x8]
   14002617f:	mov    r8,rsi
   140026182:	mov    r9,rdx
   140026185:	mov    rcx,rax
   140026188:	mov    rbx,rax
   14002618b:	call   0x140029bf0
   140026190:	test   eax,eax
   140026192:	je     0x1400261ba
   140026194:	cmp    eax,0xc
   140026197:	je     0x1400261b4
   140026199:	cmp    eax,0x16
   14002619c:	je     0x1400261ae
   14002619e:	cmp    eax,0x22
   1400261a1:	je     0x1400261ae
   1400261a3:	cmp    eax,0x50
   1400261a6:	je     0x1400261ba
   1400261a8:	call   0x1400218c0
   1400261ad:	int3   
   1400261ae:	call   0x1400218c0
   1400261b3:	int3   
   1400261b4:	call   0x140021878
   1400261b9:	int3   
   1400261ba:	cmp    WORD PTR [rbx+0x2],0xffff
   1400261c0:	jne    0x1400261c7
   1400261c2:	mov    eax,DWORD PTR [rbx+0xc]
   1400261c5:	jmp    0x1400261c9
   1400261c7:	mov    eax,DWORD PTR [rbx]
   1400261c9:	mov    rcx,QWORD PTR [rdi]
   1400261cc:	shr    eax,0x6
   1400261cf:	not    eax
   1400261d1:	and    eax,0x1
   1400261d4:	mov    DWORD PTR [rdi+0xc],eax
   1400261d7:	call   QWORD PTR [rip+0x1d373]        # 0x140043550
   1400261dd:	mov    eax,0x1
   1400261e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400261e7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400261ec:	add    rsp,0x20
   1400261f0:	pop    rdi
   1400261f1:	ret    
   1400261f2:	int3   
   1400261f3:	int3   
   1400261f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400261f9:	mov    WORD PTR [rsp+0x18],r8w
   1400261ff:	mov    QWORD PTR [rsp+0x10],rdx
   140026204:	push   rbp
   140026205:	push   rsi
   140026206:	push   rdi
   140026207:	push   r12
   140026209:	push   r13
   14002620b:	push   r14
   14002620d:	push   r15
   14002620f:	sub    rsp,0x20
   140026213:	cmp    DWORD PTR [rcx+0x8],0x0
   140026217:	mov    r13,rdx
   14002621a:	mov    rsi,rcx
   14002621d:	jne    0x140026226
   14002621f:	xor    eax,eax
   140026221:	jmp    0x14002638b
   140026226:	mov    rcx,QWORD PTR [rcx]
   140026229:	call   QWORD PTR [rip+0x1d2d9]        # 0x140043508
   14002622f:	xor    r12d,r12d
   140026232:	mov    rdi,rax
   140026235:	or     ax,0xffff
   140026239:	cmp    WORD PTR [rdi+0x2],ax
   14002623d:	sete   r12b
   140026241:	cmp    WORD PTR [rdi+0x2],ax
   140026245:	jne    0x14002624c
   140026247:	mov    ebx,DWORD PTR [rdi+0xc]
   14002624a:	jmp    0x14002624e
   14002624c:	mov    ebx,DWORD PTR [rdi]
   14002624e:	and    ebx,0x40
   140026251:	mov    eax,r12d
   140026254:	neg    eax
   140026256:	sbb    ebp,ebp
   140026258:	and    ebp,0x2
   14002625b:	add    ebp,0x1
   14002625e:	add    ebp,ebp
   140026260:	test   r12d,r12d
   140026263:	je     0x14002626b
   140026265:	or     DWORD PTR [rdi+0xc],0x40
   140026269:	jmp    0x14002626e
   14002626b:	or     DWORD PTR [rdi],0x40
   14002626e:	mov    rcx,r13
   140026271:	call   QWORD PTR [rip+0x1d1d1]        # 0x140043448
   140026277:	cmp    eax,0x20
   14002627a:	jge    0x14002621f
   14002627c:	lea    r14d,[rbp+rax*2+0x2]
   140026281:	cmp    r14d,ebp
   140026284:	jl     0x14002621f
   140026286:	mov    rcx,rdi
   140026289:	call   0x140025fec
   14002628e:	test   ebx,ebx
   140026290:	mov    r15,rax
   140026293:	je     0x1400262a7
   140026295:	movsxd rbx,ebp
   140026298:	lea    rcx,[rbx+rax*1]
   14002629c:	call   0x14002ad10
   1400262a1:	lea    ecx,[rbx+rax*2+0x2]
   1400262a5:	jmp    0x1400262a9
   1400262a7:	xor    ecx,ecx
   1400262a9:	movsxd rax,ecx
   1400262ac:	lea    r13,[rax+r15*1+0x3]
   1400262b1:	movsxd rax,r14d
   1400262b4:	lea    rbx,[rax+r15*1+0x3]
   1400262b9:	and    r13,0xfffffffffffffffc
   1400262bd:	and    rbx,0xfffffffffffffffc
   1400262c1:	test   r12d,r12d
   1400262c4:	je     0x1400262cc
   1400262c6:	movzx  eax,WORD PTR [rdi+0x10]
   1400262ca:	jmp    0x1400262d0
   1400262cc:	mov    ax,WORD PTR [rdi+0x8]
   1400262d0:	cmp    r14d,ecx
   1400262d3:	je     0x140026327
   1400262d5:	test   ax,ax
   1400262d8:	je     0x140026327
   1400262da:	mov    eax,DWORD PTR [rsi+0x8]
   1400262dd:	mov    rdx,rax
   1400262e0:	sub    rdx,r13
   1400262e3:	add    rdx,rdi
   1400262e6:	cmp    rdx,rax
   1400262e9:	ja     0x14002621f
   1400262ef:	mov    r9,rdx
   1400262f2:	mov    r8,r13
   1400262f5:	mov    rcx,rbx
   1400262f8:	call   0x140029b60
   1400262fd:	test   eax,eax
   1400262ff:	je     0x140026327
   140026301:	cmp    eax,0xc
   140026304:	je     0x140026321
   140026306:	cmp    eax,0x16
   140026309:	je     0x14002631b
   14002630b:	cmp    eax,0x22
   14002630e:	je     0x14002631b
   140026310:	cmp    eax,0x50
   140026313:	je     0x140026327
   140026315:	call   0x1400218c0
   14002631a:	int3   
   14002631b:	call   0x1400218c0
   140026320:	int3   
   140026321:	call   0x140021878
   140026326:	int3   
   140026327:	movzx  eax,WORD PTR [rsp+0x70]
   14002632c:	mov    r8,QWORD PTR [rsp+0x68]
   140026331:	sub    r14d,ebp
   140026334:	movsxd rdx,r14d
   140026337:	movsxd rcx,ebp
   14002633a:	mov    WORD PTR [r15],ax
   14002633e:	mov    r9,rdx
   140026341:	add    rcx,r15
   140026344:	call   0x140029b60
   140026349:	test   eax,eax
   14002634b:	je     0x140026373
   14002634d:	cmp    eax,0xc
   140026350:	je     0x14002636d
   140026352:	cmp    eax,0x16
   140026355:	je     0x140026367
   140026357:	cmp    eax,0x22
   14002635a:	je     0x140026367
   14002635c:	cmp    eax,0x50
   14002635f:	je     0x140026373
   140026361:	call   0x1400218c0
   140026366:	int3   
   140026367:	call   0x1400218c0
   14002636c:	int3   
   14002636d:	call   0x140021878
   140026372:	int3   
   140026373:	mov    rcx,QWORD PTR [rsi]
   140026376:	sub    ebx,r13d
   140026379:	add    DWORD PTR [rsi+0x8],ebx
   14002637c:	call   QWORD PTR [rip+0x1d1ce]        # 0x140043550
   140026382:	and    DWORD PTR [rsi+0xc],0x0
   140026386:	mov    eax,0x1
   14002638b:	mov    rbx,QWORD PTR [rsp+0x60]
   140026390:	add    rsp,0x20
   140026394:	pop    r15
   140026396:	pop    r14
   140026398:	pop    r13
   14002639a:	pop    r12
   14002639c:	pop    rdi
   14002639d:	pop    rsi
   14002639e:	pop    rbp
   14002639f:	ret    
   1400263a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400263a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400263aa:	push   rsi
   1400263ab:	push   rdi
   1400263ac:	push   r12
   1400263ae:	sub    rsp,0x90
   1400263b5:	mov    rax,QWORD PTR [rip+0x34bc4]        # 0x14005af80
   1400263bc:	xor    rax,rsp
   1400263bf:	mov    QWORD PTR [rsp+0x80],rax
   1400263c7:	mov    r12,rcx
   1400263ca:	mov    ecx,0x11
   1400263cf:	movzx  ebx,dx
   1400263d2:	lea    rdi,[rip+0x21c87]        # 0x140048060
   1400263d9:	mov    bp,0xa
   1400263dd:	call   QWORD PTR [rip+0x1cc8d]        # 0x140043070
   1400263e3:	test   rax,rax
   1400263e6:	jne    0x1400263f6
   1400263e8:	lea    ecx,[rax+0xd]
   1400263eb:	call   QWORD PTR [rip+0x1cc7f]        # 0x140043070
   1400263f1:	test   rax,rax
   1400263f4:	je     0x140026458
   1400263f6:	lea    r8,[rsp+0x20]
   1400263fb:	mov    edx,0x5c
   140026400:	mov    rcx,rax
   140026403:	call   QWORD PTR [rip+0x1ccbf]        # 0x1400430c8
   140026409:	test   eax,eax
   14002640b:	je     0x140026458
   14002640d:	xor    ecx,ecx
   14002640f:	lea    rdi,[rsp+0x3c]
   140026414:	call   QWORD PTR [rip+0x1d596]        # 0x1400439b0
   14002641a:	mov    ecx,DWORD PTR [rsp+0x20]
   14002641e:	test   ecx,ecx
   140026420:	mov    rsi,rax
   140026423:	jns    0x14002642b
   140026425:	neg    ecx
   140026427:	mov    DWORD PTR [rsp+0x20],ecx
   14002642b:	mov    edx,0x5a
   140026430:	mov    rcx,rax
   140026433:	call   QWORD PTR [rip+0x1cd2f]        # 0x140043168
   140026439:	mov    ecx,DWORD PTR [rsp+0x20]
   14002643d:	mov    edx,0x48
   140026442:	mov    r8d,eax
   140026445:	call   QWORD PTR [rip+0x1d0a5]        # 0x1400434f0
   14002644b:	mov    rdx,rsi
   14002644e:	xor    ecx,ecx
   140026450:	mov    ebp,eax
   140026452:	call   QWORD PTR [rip+0x1d1f0]        # 0x140043648
   140026458:	test   bx,bx
   14002645b:	mov    rdx,rdi
   14002645e:	mov    rcx,r12
   140026461:	cmove  bx,bp
   140026465:	movzx  r8d,bx
   140026469:	call   0x1400261f4
   14002646e:	mov    rcx,QWORD PTR [rsp+0x80]
   140026476:	xor    rcx,rsp
   140026479:	call   0x140029b40
   14002647e:	lea    r11,[rsp+0x90]
   140026486:	mov    rbx,QWORD PTR [r11+0x28]
   14002648a:	mov    rbp,QWORD PTR [r11+0x30]
   14002648e:	mov    rsp,r11
   140026491:	pop    r12
   140026493:	pop    rdi
   140026494:	pop    rsi
   140026495:	ret    
   140026496:	int3   
   140026497:	int3   
   140026498:	mov    QWORD PTR [rsp+0x8],rbx
   14002649d:	push   rdi
   14002649e:	sub    rsp,0x20
   1400264a2:	test   rdx,rdx
   1400264a5:	mov    rdi,rdx
   1400264a8:	mov    rbx,rcx
   1400264ab:	jne    0x1400264c4
   1400264ad:	and    QWORD PTR [rcx],rdx
   1400264b0:	and    DWORD PTR [rcx+0x8],edx
   1400264b3:	and    DWORD PTR [rcx+0xc],edx
   1400264b6:	mov    rax,rbx
   1400264b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400264be:	add    rsp,0x20
   1400264c2:	pop    rdi
   1400264c3:	ret    
   1400264c4:	mov    rcx,rdx
   1400264c7:	call   0x140026044
   1400264cc:	mov    rdx,rdi
   1400264cf:	mov    rcx,rbx
   1400264d2:	mov    r8d,eax
   1400264d5:	call   0x140026134
   1400264da:	test   eax,eax
   1400264dc:	jne    0x1400264b6
   1400264de:	call   0x140021878
   1400264e3:	int3   
   1400264e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400264e9:	push   rdi
   1400264ea:	sub    rsp,0x20
   1400264ee:	or     r11w,0xffff
   1400264f4:	mov    r10,r8
   1400264f7:	mov    rdi,rdx
   1400264fa:	cmp    WORD PTR [rcx+0x2],r11w
   1400264ff:	mov    r9,rcx
   140026502:	jne    0x140026509
   140026504:	mov    eax,DWORD PTR [rcx+0xc]
   140026507:	jmp    0x14002650b
   140026509:	mov    eax,DWORD PTR [rcx]
   14002650b:	test   al,0x40
   14002650d:	jne    0x140026513
   14002650f:	xor    eax,eax
   140026511:	jmp    0x14002655b
   140026513:	call   0x140025fec
   140026518:	mov    rbx,rax
   14002651b:	movzx  ecx,WORD PTR [rax]
   14002651e:	mov    WORD PTR [r10],cx
   140026522:	cmp    WORD PTR [r9+0x2],r11w
   140026527:	mov    ecx,0x1
   14002652c:	lea    eax,[rcx+0x2]
   14002652f:	cmove  ecx,eax
   140026532:	add    ecx,ecx
   140026534:	movsxd rcx,ecx
   140026537:	add    rbx,rcx
   14002653a:	jne    0x140026540
   14002653c:	xor    eax,eax
   14002653e:	jmp    0x140026548
   140026540:	mov    rcx,rbx
   140026543:	call   0x14002ad10
   140026548:	mov    r8d,eax
   14002654b:	mov    rdx,rbx
   14002654e:	mov    rcx,rdi
   140026551:	call   0x140004590
   140026556:	mov    eax,0x1
   14002655b:	mov    rbx,QWORD PTR [rsp+0x30]
   140026560:	add    rsp,0x20
   140026564:	pop    rdi
   140026565:	ret    
   140026566:	int3   
   140026567:	int3   
   140026568:	mov    QWORD PTR [rsp+0x8],rbx
   14002656d:	mov    QWORD PTR [rsp+0x10],rbp
   140026572:	mov    QWORD PTR [rsp+0x18],rsi
   140026577:	push   rdi
   140026578:	push   r12
   14002657a:	push   r13
   14002657c:	push   r14
   14002657e:	push   r15
   140026580:	sub    rsp,0x20
   140026584:	xor    r13d,r13d
   140026587:	mov    r15d,r9d
   14002658a:	mov    r14,r8
   14002658d:	cmp    rdx,r13
   140026590:	mov    rsi,rdx
   140026593:	mov    rbp,rcx
   140026596:	jne    0x14002659e
   140026598:	call   0x1400218c0
   14002659d:	int3   
   14002659e:	cmp    r8,r13
   1400265a1:	jne    0x1400265a9
   1400265a3:	call   0x1400218c0
   1400265a8:	int3   
   1400265a9:	cmp    WORD PTR [rdx],r13w
   1400265ad:	mov    edi,r13d
   1400265b0:	mov    rbx,rdx
   1400265b3:	je     0x140026617
   1400265b5:	cmp    WORD PTR [rbx],0x25
   1400265b9:	jne    0x14002660a
   1400265bb:	movzx  eax,WORD PTR [rbx+0x2]
   1400265bf:	cmp    ax,0x31
   1400265c3:	jb     0x1400265cb
   1400265c5:	cmp    ax,0x39
   1400265c9:	jbe    0x1400265e5
   1400265cb:	cmp    ax,0x41
   1400265cf:	jb     0x14002660a
   1400265d1:	cmp    ax,0x5a
   1400265d5:	ja     0x14002660a
   1400265d7:	cmp    ax,0x39
   1400265db:	jbe    0x1400265e5
   1400265dd:	movzx  ecx,ax
   1400265e0:	sub    ecx,0x38
   1400265e3:	jmp    0x1400265eb
   1400265e5:	movzx  ecx,ax
   1400265e8:	sub    ecx,0x31
   1400265eb:	add    rbx,0x4
   1400265ef:	cmp    ecx,r15d
   1400265f2:	jge    0x14002660e
   1400265f4:	movsxd rax,ecx
   1400265f7:	mov    rcx,QWORD PTR [r14+rax*8]
   1400265fb:	cmp    rcx,r13
   1400265fe:	je     0x140026611
   140026600:	call   QWORD PTR [rip+0x1ce42]        # 0x140043448
   140026606:	add    edi,eax
   140026608:	jmp    0x140026611
   14002660a:	add    rbx,0x2
   14002660e:	add    edi,0x1
   140026611:	cmp    WORD PTR [rbx],r13w
   140026615:	jne    0x1400265b5
   140026617:	mov    rax,QWORD PTR [rbp+0x0]
   14002661b:	mov    ecx,0x1
   140026620:	sub    ecx,DWORD PTR [rax-0x8]
   140026623:	mov    eax,DWORD PTR [rax-0xc]
   140026626:	sub    eax,edi
   140026628:	or     ecx,eax
   14002662a:	jge    0x140026636
   14002662c:	mov    edx,edi
   14002662e:	mov    rcx,rbp
   140026631:	call   0x140004370
   140026636:	mov    rbx,QWORD PTR [rbp+0x0]
   14002663a:	cmp    WORD PTR [rsi],r13w
   14002663e:	je     0x140026707
   140026644:	movzx  ecx,WORD PTR [rsi]
   140026647:	cmp    cx,0x25
   14002664b:	jne    0x1400266e2
   140026651:	movzx  eax,WORD PTR [rsi+0x2]
   140026655:	cmp    ax,0x31
   140026659:	jb     0x140026661
   14002665b:	cmp    ax,0x39
   14002665f:	jbe    0x14002667b
   140026661:	cmp    ax,0x41
   140026665:	jb     0x1400266e2
   140026667:	cmp    ax,0x5a
   14002666b:	ja     0x1400266e2
   14002666d:	cmp    ax,0x39
   140026671:	jbe    0x14002667b
   140026673:	movzx  ecx,ax
   140026676:	sub    ecx,0x38
   140026679:	jmp    0x140026681
   14002667b:	movzx  ecx,ax
   14002667e:	sub    ecx,0x31
   140026681:	add    rsi,0x4
   140026685:	cmp    ecx,r15d
   140026688:	jl     0x140026691
   14002668a:	mov    WORD PTR [rbx],0x3f
   14002668f:	jmp    0x1400266e9
   140026691:	movsxd r12,ecx
   140026694:	mov    rcx,QWORD PTR [r14+r12*8]
   140026698:	cmp    rcx,r13
   14002669b:	je     0x14002663a
   14002669d:	call   QWORD PTR [rip+0x1cda5]        # 0x140043448
   1400266a3:	mov    r8,QWORD PTR [r14+r12*8]
   1400266a7:	lea    ecx,[rdi+0x1]
   1400266aa:	movsxd rdx,ecx
   1400266ad:	mov    rcx,rbx
   1400266b0:	movsxd r13,eax
   1400266b3:	call   0x14002a9a0
   1400266b8:	test   eax,eax
   1400266ba:	je     0x1400266d0
   1400266bc:	cmp    eax,0xc
   1400266bf:	je     0x140026701
   1400266c1:	cmp    eax,0x16
   1400266c4:	je     0x1400266fb
   1400266c6:	cmp    eax,0x22
   1400266c9:	je     0x1400266fb
   1400266cb:	cmp    eax,0x50
   1400266ce:	jne    0x1400266f5
   1400266d0:	sub    edi,r13d
   1400266d3:	mov    rax,r13
   1400266d6:	lea    rbx,[rbx+r13*2]
   1400266da:	xor    r13d,r13d
   1400266dd:	jmp    0x14002663a
   1400266e2:	mov    WORD PTR [rbx],cx
   1400266e5:	add    rsi,0x2
   1400266e9:	add    rbx,0x2
   1400266ed:	sub    edi,0x1
   1400266f0:	jmp    0x14002663a
   1400266f5:	call   0x1400218c0
   1400266fa:	int3   
   1400266fb:	call   0x1400218c0
   140026700:	int3   
   140026701:	call   0x140021878
   140026706:	int3   
   140026707:	mov    rcx,QWORD PTR [rbp+0x0]
   14002670b:	sub    rbx,rcx
   14002670e:	sar    rbx,1
   140026711:	cmp    ebx,0xffffffff
   140026714:	jne    0x140026727
   140026716:	cmp    rcx,r13
   140026719:	jne    0x140026720
   14002671b:	mov    ebx,r13d
   14002671e:	jmp    0x14002672c
   140026720:	call   0x14002ad10
   140026725:	mov    ebx,eax
   140026727:	cmp    ebx,r13d
   14002672a:	jl     0x140026761
   14002672c:	mov    rax,QWORD PTR [rbp+0x0]
   140026730:	cmp    ebx,DWORD PTR [rax-0xc]
   140026733:	jg     0x140026761
   140026735:	mov    rsi,QWORD PTR [rsp+0x60]
   14002673a:	mov    DWORD PTR [rax-0x10],ebx
   14002673d:	mov    rax,QWORD PTR [rbp+0x0]
   140026741:	mov    rbp,QWORD PTR [rsp+0x58]
   140026746:	movsxd rcx,ebx
   140026749:	mov    rbx,QWORD PTR [rsp+0x50]
   14002674e:	mov    WORD PTR [rax+rcx*2],r13w
   140026753:	add    rsp,0x20
   140026757:	pop    r15
   140026759:	pop    r14
   14002675b:	pop    r13
   14002675d:	pop    r12
   14002675f:	pop    rdi
   140026760:	ret    
   140026761:	mov    ecx,0x80070057
   140026766:	call   0x140003dc0
   14002676b:	int3   
   14002676c:	mov    rax,rsp
   14002676f:	push   r12
   140026771:	sub    rsp,0x30
   140026775:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14002677e:	mov    QWORD PTR [rax+0x8],rbx
   140026782:	mov    QWORD PTR [rax+0x10],rbp
   140026786:	mov    QWORD PTR [rax+0x18],rsi
   14002678a:	mov    QWORD PTR [rax+0x20],rdi
   14002678e:	mov    esi,r9d
   140026791:	mov    rbp,r8
   140026794:	mov    edi,edx
   140026796:	mov    r12,rcx
   140026799:	call   0x14002157c
   14002679e:	mov    rcx,rax
   1400267a1:	xor    r10d,r10d
   1400267a4:	test   rax,rax
   1400267a7:	setne  r10b
   1400267ab:	test   r10d,r10d
   1400267ae:	jne    0x1400267bb
   1400267b0:	mov    ecx,0x80004005
   1400267b5:	call   0x140003dc0
   1400267ba:	int3   
   1400267bb:	mov    rax,QWORD PTR [rax]
   1400267be:	call   QWORD PTR [rax+0x18]
   1400267c1:	lea    rbx,[rax+0x18]
   1400267c5:	mov    QWORD PTR [rsp+0x20],rbx
   1400267ca:	mov    ecx,edi
   1400267cc:	call   0x140021f1c
   1400267d1:	test   rax,rax
   1400267d4:	je     0x140026826
   1400267d6:	mov    r8d,edi
   1400267d9:	mov    rdx,rax
   1400267dc:	lea    rcx,[rsp+0x20]
   1400267e1:	call   0x140007010
   1400267e6:	test   eax,eax
   1400267e8:	jne    0x1400267f1
   1400267ea:	mov    rbx,QWORD PTR [rsp+0x20]
   1400267ef:	jmp    0x140026826
   1400267f1:	mov    r9d,esi
   1400267f4:	mov    r8,rbp
   1400267f7:	mov    rbx,QWORD PTR [rsp+0x20]
   1400267fc:	mov    rdx,rbx
   1400267ff:	mov    rcx,r12
   140026802:	call   0x140026568
   140026807:	nop
   140026808:	lea    rdx,[rbx-0x18]
   14002680c:	or     eax,0xffffffff
   14002680f:	lock xadd DWORD PTR [rdx+0x10],eax
   140026814:	add    eax,0xffffffff
   140026817:	test   eax,eax
   140026819:	jg     0x140026842
   14002681b:	mov    rcx,QWORD PTR [rdx]
   14002681e:	mov    rax,QWORD PTR [rcx]
   140026821:	call   QWORD PTR [rax+0x8]
   140026824:	jmp    0x140026842
   140026826:	lea    rdx,[rbx-0x18]
   14002682a:	or     eax,0xffffffff
   14002682d:	lock xadd DWORD PTR [rdx+0x10],eax
   140026832:	add    eax,0xffffffff
   140026835:	test   eax,eax
   140026837:	jg     0x140026842
   140026839:	mov    rcx,QWORD PTR [rdx]
   14002683c:	mov    rax,QWORD PTR [rcx]
   14002683f:	call   QWORD PTR [rax+0x8]
   140026842:	mov    rbx,QWORD PTR [rsp+0x40]
   140026847:	mov    rbp,QWORD PTR [rsp+0x48]
   14002684c:	mov    rsi,QWORD PTR [rsp+0x50]
   140026851:	mov    rdi,QWORD PTR [rsp+0x58]
   140026856:	add    rsp,0x30
   14002685a:	pop    r12
   14002685c:	ret    
   14002685d:	int3   
   14002685e:	int3   
   14002685f:	int3   
   140026860:	int3   
   140026861:	int3   
   140026862:	int3   
   140026863:	int3   
   140026864:	int3   
   140026865:	int3   
   140026866:	int3   
   140026867:	int3   
   140026868:	int3   
   140026869:	int3   
   14002686a:	int3   
   14002686b:	int3   
   14002686c:	rex push rbp
   14002686e:	sub    rsp,0x20
   140026872:	mov    rbp,rdx
   140026875:	lea    rcx,[rbp+0x20]
   140026879:	call   0x140003de0
   14002687e:	add    rsp,0x20
   140026882:	pop    rbp
   140026883:	ret    
   140026884:	mov    QWORD PTR [rsp+0x18],r8
   140026889:	sub    rsp,0x28
   14002688d:	lea    r8,[rsp+0x40]
   140026892:	mov    r9d,0x1
   140026898:	call   0x14002676c
   14002689d:	add    rsp,0x28
   1400268a1:	ret    
   1400268a2:	int3   
   1400268a3:	int3   
   1400268a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400268a9:	mov    QWORD PTR [rsp+0x10],rbp
   1400268ae:	push   rsi
   1400268af:	push   rdi
   1400268b0:	push   r12
   1400268b2:	sub    rsp,0x20
   1400268b6:	xor    r12d,r12d
   1400268b9:	mov    edi,r8d
   1400268bc:	mov    ebx,r9d
   1400268bf:	cmp    r8d,r12d
   1400268c2:	mov    eax,0x7fffffff
   1400268c7:	mov    rsi,rdx
   1400268ca:	cmovl  edi,r12d
   1400268ce:	cmp    r9d,r12d
   1400268d1:	mov    rbp,rcx
   1400268d4:	cmovl  ebx,r12d
   1400268d8:	sub    eax,edi
   1400268da:	mov    DWORD PTR [rsp+0x50],r12d
   1400268df:	cmp    eax,ebx
   1400268e1:	jl     0x14002696f
   1400268e7:	mov    rdx,QWORD PTR [rcx]
   1400268ea:	lea    eax,[rdi+rbx*1]
   1400268ed:	mov    ecx,DWORD PTR [rdx-0x10]
   1400268f0:	cmp    eax,ecx
   1400268f2:	jle    0x1400268f8
   1400268f4:	mov    ebx,ecx
   1400268f6:	sub    ebx,edi
   1400268f8:	cmp    edi,ecx
   1400268fa:	cmovg  ebx,r12d
   1400268fe:	cmp    edi,r12d
   140026901:	jne    0x14002692d
   140026903:	cmp    ebx,ecx
   140026905:	jne    0x14002692d
   140026907:	lea    rcx,[rdx-0x18]
   14002690b:	call   0x14000b630
   140026910:	add    rax,0x18
   140026914:	mov    QWORD PTR [rsi],rax
   140026917:	mov    rbx,QWORD PTR [rsp+0x40]
   14002691c:	mov    rbp,QWORD PTR [rsp+0x48]
   140026921:	mov    rax,rsi
   140026924:	add    rsp,0x20
   140026928:	pop    r12
   14002692a:	pop    rdi
   14002692b:	pop    rsi
   14002692c:	ret    
   14002692d:	mov    rcx,QWORD PTR [rdx-0x18]
   140026931:	cmp    rcx,r12
   140026934:	je     0x14002693e
   140026936:	mov    rax,QWORD PTR [rcx]
   140026939:	call   QWORD PTR [rax+0x20]
   14002693c:	jmp    0x140026941
   14002693e:	mov    rax,r12
   140026941:	cmp    rax,r12
   140026944:	jne    0x140026954
   140026946:	call   0x14002157c
   14002694b:	mov    rcx,rax
   14002694e:	mov    rdx,QWORD PTR [rax]
   140026951:	call   QWORD PTR [rdx+0x20]
   140026954:	mov    rcx,QWORD PTR [rbp+0x0]
   140026958:	movsxd rdx,edi
   14002695b:	mov    r9,rax
   14002695e:	lea    rdx,[rcx+rdx*2]
   140026962:	mov    r8d,ebx
   140026965:	mov    rcx,rsi
   140026968:	call   0x14000e810
   14002696d:	jmp    0x140026917
   14002696f:	mov    ecx,0x80070057
   140026974:	call   0x140003dc0
   140026979:	int3   
   14002697a:	int3   
   14002697b:	int3   
   14002697c:	mov    QWORD PTR [rsp+0x8],rcx
   140026981:	push   rdi
   140026982:	sub    rsp,0x30
   140026986:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002698f:	mov    QWORD PTR [rsp+0x48],rbx
   140026994:	mov    rbx,rdx
   140026997:	mov    rdi,rcx
   14002699a:	xor    eax,eax
   14002699c:	test   r8,r8
   14002699f:	setne  al
   1400269a2:	test   eax,eax
   1400269a4:	jne    0x1400269b1
   1400269a6:	mov    ecx,0x80004005
   1400269ab:	call   0x140003dc0
   1400269b0:	int3   
   1400269b1:	mov    rax,QWORD PTR [r8]
   1400269b4:	mov    rcx,r8
   1400269b7:	call   QWORD PTR [rax+0x18]
   1400269ba:	add    rax,0x18
   1400269be:	mov    QWORD PTR [rdi],rax
   1400269c1:	test   rbx,rbx
   1400269c4:	je     0x1400269f8
   1400269c6:	test   rbx,0xffffffffffff0000
   1400269cd:	jne    0x1400269ee
   1400269cf:	movzx  ebx,bx
   1400269d2:	mov    ecx,ebx
   1400269d4:	call   0x140021f1c
   1400269d9:	test   rax,rax
   1400269dc:	je     0x140026a09
   1400269de:	mov    r8d,ebx
   1400269e1:	mov    rdx,rax
   1400269e4:	mov    rcx,rdi
   1400269e7:	call   0x140007010
   1400269ec:	jmp    0x140026a09
   1400269ee:	mov    rcx,rbx
   1400269f1:	call   0x14002ad10
   1400269f6:	jmp    0x1400269fa
   1400269f8:	xor    eax,eax
   1400269fa:	mov    r8d,eax
   1400269fd:	mov    rdx,rbx
   140026a00:	mov    rcx,rdi
   140026a03:	call   0x140004590
   140026a08:	nop
   140026a09:	mov    rax,rdi
   140026a0c:	mov    rbx,QWORD PTR [rsp+0x48]
   140026a11:	add    rsp,0x30
   140026a15:	pop    rdi
   140026a16:	ret    
   140026a17:	int3   
   140026a18:	int3   
   140026a19:	int3   
   140026a1a:	int3   
   140026a1b:	int3   
   140026a1c:	rex push rbp
   140026a1e:	sub    rsp,0x20
   140026a22:	mov    rbp,rdx
   140026a25:	mov    rcx,QWORD PTR [rbp+0x40]
   140026a29:	call   0x140003de0
   140026a2e:	add    rsp,0x20
   140026a32:	pop    rbp
   140026a33:	ret    
   140026a34:	mov    QWORD PTR [rsp+0x8],rbx
   140026a39:	mov    QWORD PTR [rsp+0x10],rbp
   140026a3e:	push   rsi
   140026a3f:	push   rdi
   140026a40:	push   r12
   140026a42:	push   r13
   140026a44:	push   r14
   140026a46:	sub    rsp,0x20
   140026a4a:	movsxd rax,DWORD PTR [r9]
   140026a4d:	and    DWORD PTR [rsp+0x68],0x0
   140026a52:	mov    rbp,r9
   140026a55:	test   eax,eax
   140026a57:	mov    rsi,r8
   140026a5a:	mov    rdi,rdx
   140026a5d:	mov    rbx,rcx
   140026a60:	jns    0x140026a6d
   140026a62:	mov    ecx,0x80070057
   140026a67:	call   0x140003dc0
   140026a6c:	int3   
   140026a6d:	test   r8,r8
   140026a70:	je     0x140026ad5
   140026a72:	cmp    WORD PTR [r8],0x0
   140026a77:	je     0x140026ad5
   140026a79:	mov    rcx,QWORD PTR [rcx]
   140026a7c:	lea    r12,[rcx+rax*2]
   140026a80:	movsxd rax,DWORD PTR [rcx-0x10]
   140026a84:	lea    r13,[rcx+rax*2]
   140026a88:	cmp    r12,r13
   140026a8b:	jae    0x140026b1b
   140026a91:	mov    rdx,r8
   140026a94:	mov    rcx,r12
   140026a97:	call   0x14002c7f0
   140026a9c:	movsxd rcx,eax
   140026a9f:	mov    r14,rax
   140026aa2:	lea    rcx,[r12+rcx*2]
   140026aa6:	cmp    rcx,r13
   140026aa9:	jae    0x140026b1b
   140026aab:	mov    rdx,rsi
   140026aae:	call   0x14002c840
   140026ab3:	mov    ecx,DWORD PTR [rbp+0x0]
   140026ab6:	mov    rdx,rdi
   140026ab9:	lea    r8d,[r14+rcx*1]
   140026abd:	mov    r9d,eax
   140026ac0:	lea    ecx,[r8+rax*1+0x1]
   140026ac5:	mov    DWORD PTR [rbp+0x0],ecx
   140026ac8:	mov    rcx,rbx
   140026acb:	call   0x1400268a4
   140026ad0:	jmp    0x140026b6b
   140026ad5:	mov    rcx,QWORD PTR [rcx]
   140026ad8:	cmp    eax,DWORD PTR [rcx-0x10]
   140026adb:	jge    0x140026b1b
   140026add:	mov    rcx,QWORD PTR [rcx-0x18]
   140026ae1:	test   rcx,rcx
   140026ae4:	je     0x140026aee
   140026ae6:	mov    rax,QWORD PTR [rcx]
   140026ae9:	call   QWORD PTR [rax+0x20]
   140026aec:	jmp    0x140026af0
   140026aee:	xor    eax,eax
   140026af0:	test   rax,rax
   140026af3:	jne    0x140026b03
   140026af5:	call   0x14002157c
   140026afa:	mov    rcx,rax
   140026afd:	mov    rdx,QWORD PTR [rax]
   140026b00:	call   QWORD PTR [rdx+0x20]
   140026b03:	mov    rcx,QWORD PTR [rbx]
   140026b06:	movsxd rdx,DWORD PTR [rbp+0x0]
   140026b0a:	mov    r8,rax
   140026b0d:	lea    rdx,[rcx+rdx*2]
   140026b11:	mov    rcx,rdi
   140026b14:	call   0x14002697c
   140026b19:	jmp    0x140026b6b
   140026b1b:	or     DWORD PTR [rbp+0x0],0xffffffff
   140026b1f:	mov    rax,QWORD PTR [rbx]
   140026b22:	mov    rcx,QWORD PTR [rax-0x18]
   140026b26:	test   rcx,rcx
   140026b29:	je     0x140026b36
   140026b2b:	mov    rax,QWORD PTR [rcx]
   140026b2e:	call   QWORD PTR [rax+0x20]
   140026b31:	mov    rcx,rax
   140026b34:	jmp    0x140026b38
   140026b36:	xor    ecx,ecx
   140026b38:	test   rcx,rcx
   140026b3b:	jne    0x140026b5e
   140026b3d:	call   0x14002157c
   140026b42:	mov    rcx,rax
   140026b45:	mov    rdx,QWORD PTR [rax]
   140026b48:	call   QWORD PTR [rdx+0x20]
   140026b4b:	test   rax,rax
   140026b4e:	mov    rcx,rax
   140026b51:	jne    0x140026b5e
   140026b53:	mov    ecx,0x80004005
   140026b58:	call   0x140003dc0
   140026b5d:	int3   
   140026b5e:	mov    rax,QWORD PTR [rcx]
   140026b61:	call   QWORD PTR [rax+0x18]
   140026b64:	add    rax,0x18
   140026b68:	mov    QWORD PTR [rdi],rax
   140026b6b:	mov    rbx,QWORD PTR [rsp+0x50]
   140026b70:	mov    rbp,QWORD PTR [rsp+0x58]
   140026b75:	mov    rax,rdi
   140026b78:	add    rsp,0x20
   140026b7c:	pop    r14
   140026b7e:	pop    r13
   140026b80:	pop    r12
   140026b82:	pop    rdi
   140026b83:	pop    rsi
   140026b84:	ret    
   140026b85:	int3   
   140026b86:	int3   
   140026b87:	int3   
   140026b88:	rex push rbx
   140026b8a:	sub    rsp,0x30
   140026b8e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140026b97:	call   0x14001f2e8
   140026b9c:	mov    rbx,rax
   140026b9f:	mov    ecx,0x1
   140026ba4:	call   0x14002431c
   140026ba9:	and    DWORD PTR [rsp+0x40],0x0
   140026bae:	add    rbx,0x58
   140026bb2:	lea    r9,[rsp+0x40]
   140026bb7:	lea    r8,[rip+0x2152a]        # 0x1400480e8
   140026bbe:	lea    rdx,[rsp+0x48]
   140026bc3:	mov    rcx,rbx
   140026bc6:	call   0x140026a34
   140026bcb:	nop
   140026bcc:	mov    rax,QWORD PTR [rsp+0x48]
   140026bd1:	cmp    DWORD PTR [rax-0x10],0x0
   140026bd5:	je     0x140026c3f
   140026bd7:	call   0x14001f2e8
   140026bdc:	mov    rdx,QWORD PTR [rax+0x10]
   140026be0:	mov    rcx,QWORD PTR [rsp+0x48]
   140026be5:	call   QWORD PTR [rip+0x1cccd]        # 0x1400438b8
   140026beb:	lea    r9,[rsp+0x40]
   140026bf0:	lea    r8,[rip+0x214f1]        # 0x1400480e8
   140026bf7:	lea    rdx,[rsp+0x50]
   140026bfc:	mov    rcx,rbx
   140026bff:	call   0x140026a34
   140026c04:	nop
   140026c05:	mov    rdx,rax
   140026c08:	lea    rcx,[rsp+0x48]
   140026c0d:	call   0x14000b6c0
   140026c12:	nop
   140026c13:	mov    rdx,QWORD PTR [rsp+0x50]
   140026c18:	add    rdx,0xffffffffffffffe8
   140026c1c:	or     eax,0xffffffff
   140026c1f:	lock xadd DWORD PTR [rdx+0x10],eax
   140026c24:	add    eax,0xffffffff
   140026c27:	test   eax,eax
   140026c29:	jg     0x140026c34
   140026c2b:	mov    rcx,QWORD PTR [rdx]
   140026c2e:	mov    rax,QWORD PTR [rcx]
   140026c31:	call   QWORD PTR [rax+0x8]
   140026c34:	mov    rax,QWORD PTR [rsp+0x48]
   140026c39:	cmp    DWORD PTR [rax-0x10],0x0
   140026c3d:	jne    0x140026bd7
   140026c3f:	mov    rcx,rbx
   140026c42:	call   0x1400046f0
   140026c47:	mov    ecx,0x1
   140026c4c:	call   0x1400243b0
   140026c51:	nop
   140026c52:	mov    rdx,QWORD PTR [rsp+0x48]
   140026c57:	add    rdx,0xffffffffffffffe8
   140026c5b:	or     eax,0xffffffff
   140026c5e:	lock xadd DWORD PTR [rdx+0x10],eax
   140026c63:	add    eax,0xffffffff
   140026c66:	test   eax,eax
   140026c68:	jg     0x140026c73
   140026c6a:	mov    rcx,QWORD PTR [rdx]
   140026c6d:	mov    rax,QWORD PTR [rcx]
   140026c70:	call   QWORD PTR [rax+0x8]
   140026c73:	add    rsp,0x30
   140026c77:	pop    rbx
   140026c78:	ret    
   140026c79:	int3   
   140026c7a:	int3   
   140026c7b:	int3   
   140026c7c:	int3   
   140026c7d:	int3   
   140026c7e:	int3   
   140026c7f:	int3   
   140026c80:	int3   
   140026c81:	int3   
   140026c82:	int3   
   140026c83:	int3   
   140026c84:	int3   
   140026c85:	int3   
   140026c86:	int3   
   140026c87:	int3   
   140026c88:	rex push rbp
   140026c8a:	sub    rsp,0x20
   140026c8e:	mov    rbp,rdx
   140026c91:	lea    rcx,[rbp+0x48]
   140026c95:	call   0x140003de0
   140026c9a:	add    rsp,0x20
   140026c9e:	pop    rbp
   140026c9f:	ret    
   140026ca0:	int3   
   140026ca1:	int3   
   140026ca2:	int3   
   140026ca3:	int3   
   140026ca4:	int3   
   140026ca5:	int3   
   140026ca6:	int3   
   140026ca7:	int3   
   140026ca8:	rex push rbp
   140026caa:	sub    rsp,0x20
   140026cae:	mov    rbp,rdx
   140026cb1:	lea    rcx,[rbp+0x50]
   140026cb5:	call   0x140003de0
   140026cba:	add    rsp,0x20
   140026cbe:	pop    rbp
   140026cbf:	ret    
   140026cc0:	rex push rbx
   140026cc2:	sub    rsp,0x20
   140026cc6:	call   0x140026b88
   140026ccb:	call   0x14001f2e8
   140026cd0:	mov    rax,QWORD PTR [rax+0x8]
   140026cd4:	test   rax,rax
   140026cd7:	je     0x140026ce9
   140026cd9:	mov    rax,QWORD PTR [rax+0x78]
   140026cdd:	test   rax,rax
   140026ce0:	je     0x140026ce9
   140026ce2:	xor    edx,edx
   140026ce4:	lea    ecx,[rdx+0x1]
   140026ce7:	call   rax
   140026ce9:	call   0x14001f338
   140026cee:	mov    rbx,rax
   140026cf1:	mov    rcx,QWORD PTR [rax+0x78]
   140026cf5:	test   rcx,rcx
   140026cf8:	je     0x140026d0c
   140026cfa:	mov    rdx,QWORD PTR [rcx]
   140026cfd:	call   QWORD PTR [rdx+0x278]
   140026d03:	test   eax,eax
   140026d05:	je     0x140026d0c
   140026d07:	and    QWORD PTR [rbx+0x78],0x0
   140026d0c:	call   0x14001ea28
   140026d11:	mov    rbx,rax
   140026d14:	call   0x14001f2e8
   140026d19:	cmp    BYTE PTR [rax+0x28],0x0
   140026d1d:	jne    0x140026d47
   140026d1f:	mov    rcx,QWORD PTR [rbx+0x50]
   140026d23:	test   rcx,rcx
   140026d26:	je     0x140026d33
   140026d28:	call   QWORD PTR [rip+0x1ca52]        # 0x140043780
   140026d2e:	and    QWORD PTR [rbx+0x50],0x0
   140026d33:	mov    rcx,QWORD PTR [rbx+0x48]
   140026d37:	test   rcx,rcx
   140026d3a:	je     0x140026d47
   140026d3c:	call   QWORD PTR [rip+0x1ca3e]        # 0x140043780
   140026d42:	and    QWORD PTR [rbx+0x48],0x0
   140026d47:	add    rsp,0x20
   140026d4b:	pop    rbx
   140026d4c:	ret    
   140026d4d:	int3   
   140026d4e:	int3   
   140026d4f:	int3   
   140026d50:	mov    QWORD PTR [rsp+0x8],rbx
   140026d55:	mov    QWORD PTR [rsp+0x10],rbp
   140026d5a:	mov    QWORD PTR [rsp+0x18],rsi
   140026d5f:	push   rdi
   140026d60:	push   r12
   140026d62:	push   r13
   140026d64:	push   r14
   140026d66:	push   r15
   140026d68:	sub    rsp,0x30
   140026d6c:	test   r8d,r8d
   140026d6f:	mov    ebp,r8d
   140026d72:	mov    r13,rdx
   140026d75:	mov    rdi,rcx
   140026d78:	jne    0x140026d81
   140026d7a:	xor    eax,eax
   140026d7c:	jmp    0x140026f0c
   140026d81:	test   rdx,rdx
   140026d84:	je     0x140026d7a
   140026d86:	test   BYTE PTR [rcx+0x20],0x1
   140026d8a:	jne    0x140026d9b
   140026d8c:	mov    rdx,QWORD PTR [rcx+0x18]
   140026d90:	mov    ecx,0x4
   140026d95:	call   0x140027a2c
   140026d9a:	int3   
   140026d9b:	mov    r8,QWORD PTR [rcx+0x38]
   140026d9f:	lea    r15,[rcx+0x40]
   140026da3:	mov    rdx,rbp
   140026da6:	mov    r12d,DWORD PTR [r15]
   140026da9:	sub    r12d,DWORD PTR [rcx+0x38]
   140026dad:	mov    rcx,r13
   140026db0:	cmp    ebp,r12d
   140026db3:	cmovb  r12d,ebp
   140026db7:	mov    r9d,r12d
   140026dba:	mov    ebx,r12d
   140026dbd:	call   0x140029bf0
   140026dc2:	test   eax,eax
   140026dc4:	je     0x140026dec
   140026dc6:	cmp    eax,0xc
   140026dc9:	je     0x140026de6
   140026dcb:	cmp    eax,0x16
   140026dce:	je     0x140026de0
   140026dd0:	cmp    eax,0x22
   140026dd3:	je     0x140026de0
   140026dd5:	cmp    eax,0x50
   140026dd8:	je     0x140026dec
   140026dda:	call   0x1400218c0
   140026ddf:	int3   
   140026de0:	call   0x1400218c0
   140026de5:	int3   
   140026de6:	call   0x140021878
   140026deb:	int3   
   140026dec:	add    QWORD PTR [rdi+0x38],rbx
   140026df0:	mov    esi,ebp
   140026df2:	add    r13,rbx
   140026df5:	sub    esi,r12d
   140026df8:	je     0x140026f08
   140026dfe:	xor    edx,edx
   140026e00:	mov    eax,esi
   140026e02:	mov    r12d,esi
   140026e05:	div    DWORD PTR [rdi+0x28]
   140026e08:	sub    r12d,edx
   140026e0b:	xor    ebx,ebx
   140026e0d:	mov    r14d,r12d
   140026e10:	mov    rcx,QWORD PTR [rdi+0x30]
   140026e14:	mov    r8d,r14d
   140026e17:	mov    rdx,r13
   140026e1a:	mov    rax,QWORD PTR [rcx]
   140026e1d:	call   QWORD PTR [rax+0x68]
   140026e20:	mov    ecx,eax
   140026e22:	add    ebx,eax
   140026e24:	sub    r14d,eax
   140026e27:	add    r13,rcx
   140026e2a:	test   eax,eax
   140026e2c:	je     0x140026e33
   140026e2e:	test   r14d,r14d
   140026e31:	jne    0x140026e10
   140026e33:	sub    esi,ebx
   140026e35:	je     0x140026f08
   140026e3b:	cmp    ebx,r12d
   140026e3e:	jne    0x140026f08
   140026e44:	cmp    DWORD PTR [rdi+0xc],0x0
   140026e48:	jne    0x140026e99
   140026e4a:	cmp    DWORD PTR [rdi+0x10],0x0
   140026e4e:	jne    0x140026e5a
   140026e50:	mov    ebx,DWORD PTR [rdi+0x28]
   140026e53:	cmp    esi,ebx
   140026e55:	cmova  ebx,esi
   140026e58:	jmp    0x140026e5c
   140026e5a:	mov    ebx,esi
   140026e5c:	mov    r14,QWORD PTR [rdi+0x48]
   140026e60:	xor    r12d,r12d
   140026e63:	mov    rcx,QWORD PTR [rdi+0x30]
   140026e67:	mov    r8d,ebx
   140026e6a:	mov    rdx,r14
   140026e6d:	mov    rax,QWORD PTR [rcx]
   140026e70:	call   QWORD PTR [rax+0x68]
   140026e73:	mov    ecx,eax
   140026e75:	add    r12d,eax
   140026e78:	sub    ebx,eax
   140026e7a:	add    r14,rcx
   140026e7d:	test   eax,eax
   140026e7f:	je     0x140026e8a
   140026e81:	test   ebx,ebx
   140026e83:	je     0x140026e8a
   140026e85:	cmp    r12d,esi
   140026e88:	jb     0x140026e63
   140026e8a:	mov    r8,QWORD PTR [rdi+0x48]
   140026e8e:	mov    eax,r12d
   140026e91:	add    rax,r8
   140026e94:	mov    QWORD PTR [r15],rax
   140026e97:	jmp    0x140026eb9
   140026e99:	mov    rcx,QWORD PTR [rdi+0x30]
   140026e9d:	mov    r8d,DWORD PTR [rdi+0x28]
   140026ea1:	lea    r9,[rdi+0x48]
   140026ea5:	mov    rax,QWORD PTR [rcx]
   140026ea8:	xor    edx,edx
   140026eaa:	mov    QWORD PTR [rsp+0x20],r15
   140026eaf:	call   QWORD PTR [rax+0xa0]
   140026eb5:	mov    r8,QWORD PTR [rdi+0x48]
   140026eb9:	mov    ebx,DWORD PTR [r15]
   140026ebc:	mov    edx,esi
   140026ebe:	mov    rcx,r13
   140026ec1:	sub    ebx,r8d
   140026ec4:	mov    QWORD PTR [rdi+0x38],r8
   140026ec8:	cmp    esi,ebx
   140026eca:	cmovb  ebx,esi
   140026ecd:	mov    r9d,ebx
   140026ed0:	mov    r12d,ebx
   140026ed3:	call   0x140029bf0
   140026ed8:	test   eax,eax
   140026eda:	je     0x140026f02
   140026edc:	cmp    eax,0xc
   140026edf:	je     0x140026efc
   140026ee1:	cmp    eax,0x16
   140026ee4:	je     0x140026ef6
   140026ee6:	cmp    eax,0x22
   140026ee9:	je     0x140026ef6
   140026eeb:	cmp    eax,0x50
   140026eee:	je     0x140026f02
   140026ef0:	call   0x1400218c0
   140026ef5:	int3   
   140026ef6:	call   0x1400218c0
   140026efb:	int3   
   140026efc:	call   0x140021878
   140026f01:	int3   
   140026f02:	add    QWORD PTR [rdi+0x38],r12
   140026f06:	sub    esi,ebx
   140026f08:	sub    ebp,esi
   140026f0a:	mov    eax,ebp
   140026f0c:	mov    rbx,QWORD PTR [rsp+0x60]
   140026f11:	mov    rbp,QWORD PTR [rsp+0x68]
   140026f16:	mov    rsi,QWORD PTR [rsp+0x70]
   140026f1b:	add    rsp,0x30
   140026f1f:	pop    r15
   140026f21:	pop    r14
   140026f23:	pop    r13
   140026f25:	pop    r12
   140026f27:	pop    rdi
   140026f28:	ret    
   140026f29:	int3   
   140026f2a:	int3   
   140026f2b:	int3   
   140026f2c:	mov    QWORD PTR [rsp+0x8],rbx
   140026f31:	push   rdi
   140026f32:	sub    rsp,0x30
   140026f36:	test   BYTE PTR [rcx+0x20],0x1
   140026f3a:	mov    rbx,rcx
   140026f3d:	je     0x140026f66
   140026f3f:	mov    rax,QWORD PTR [rcx+0x38]
   140026f43:	cmp    QWORD PTR [rcx+0x40],rax
   140026f47:	je     0x140026f60
   140026f49:	mov    rcx,QWORD PTR [rcx+0x30]
   140026f4d:	sub    eax,DWORD PTR [rbx+0x40]
   140026f50:	mov    r8d,0x1
   140026f56:	mov    r9,QWORD PTR [rcx]
   140026f59:	movsxd rdx,eax
   140026f5c:	call   QWORD PTR [r9+0x50]
   140026f60:	mov    rax,QWORD PTR [rbx+0x40]
   140026f64:	jmp    0x140026fdc
   140026f66:	cmp    DWORD PTR [rcx+0xc],0x0
   140026f6a:	lea    rdi,[rcx+0x48]
   140026f6e:	jne    0x140026f8c
   140026f70:	mov    rdx,QWORD PTR [rdi]
   140026f73:	cmp    QWORD PTR [rcx+0x38],rdx
   140026f77:	je     0x140026fd9
   140026f79:	mov    rcx,QWORD PTR [rcx+0x30]
   140026f7d:	mov    r8d,DWORD PTR [rbx+0x38]
   140026f81:	mov    rax,QWORD PTR [rcx]
   140026f84:	sub    r8d,edx
   140026f87:	call   QWORD PTR [rax+0x70]
   140026f8a:	jmp    0x140026fd9
   140026f8c:	mov    rax,QWORD PTR [rdi]
   140026f8f:	cmp    QWORD PTR [rcx+0x38],rax
   140026f93:	je     0x140026fb6
   140026f95:	mov    rcx,QWORD PTR [rcx+0x30]
   140026f99:	mov    r8d,DWORD PTR [rbx+0x38]
   140026f9d:	and    QWORD PTR [rsp+0x20],0x0
   140026fa3:	mov    rax,QWORD PTR [rcx]
   140026fa6:	sub    r8d,DWORD PTR [rdi]
   140026fa9:	xor    r9d,r9d
   140026fac:	lea    edx,[r9+0x2]
   140026fb0:	call   QWORD PTR [rax+0xa0]
   140026fb6:	mov    rcx,QWORD PTR [rbx+0x30]
   140026fba:	mov    r8d,DWORD PTR [rbx+0x28]
   140026fbe:	lea    rax,[rbx+0x40]
   140026fc2:	mov    r10,QWORD PTR [rcx]
   140026fc5:	mov    r9,rdi
   140026fc8:	mov    edx,0x1
   140026fcd:	mov    QWORD PTR [rsp+0x20],rax
   140026fd2:	call   QWORD PTR [r10+0xa0]
   140026fd9:	mov    rax,QWORD PTR [rdi]
   140026fdc:	mov    QWORD PTR [rbx+0x38],rax
   140026fe0:	mov    rbx,QWORD PTR [rsp+0x40]
   140026fe5:	add    rsp,0x30
   140026fe9:	pop    rdi
   140026fea:	ret    
   140026feb:	int3   
   140026fec:	mov    QWORD PTR [rsp+0x8],rbx
   140026ff1:	mov    QWORD PTR [rsp+0x10],rbp
   140026ff6:	mov    QWORD PTR [rsp+0x18],rsi
   140026ffb:	push   rdi
   140026ffc:	push   r12
   140026ffe:	push   r13
   140027000:	sub    rsp,0x30
   140027004:	mov    r8d,0x1
   14002700a:	mov    esi,edx
   14002700c:	mov    rdi,rcx
   14002700f:	test   BYTE PTR [rcx+0x20],r8b
   140027013:	jne    0x140027023
   140027015:	mov    rdx,QWORD PTR [rcx+0x18]
   140027019:	lea    ecx,[r8+0x3]
   14002701d:	call   0x140027a2c
   140027022:	int3   
   140027023:	lea    rbp,[rcx+0x40]
   140027027:	mov    ebx,DWORD PTR [rbp+0x0]
   14002702a:	sub    ebx,DWORD PTR [rcx+0x38]
   14002702d:	cmp    DWORD PTR [rcx+0xc],0x0
   140027031:	lea    r13d,[rbx+rdx*1]
   140027035:	jne    0x1400270e3
   14002703b:	mov    r8,QWORD PTR [rcx+0x38]
   14002703f:	mov    rcx,QWORD PTR [rcx+0x48]
   140027043:	cmp    r8,rcx
   140027046:	jbe    0x14002711a
   14002704c:	test   ebx,ebx
   14002704e:	jle    0x140027099
   140027050:	mov    rdx,QWORD PTR [rbp+0x0]
   140027054:	mov    r9d,ebx
   140027057:	sub    rdx,rcx
   14002705a:	call   0x140029b60
   14002705f:	test   eax,eax
   140027061:	je     0x140027089
   140027063:	cmp    eax,0xc
   140027066:	je     0x140027083
   140027068:	cmp    eax,0x16
   14002706b:	je     0x14002707d
   14002706d:	cmp    eax,0x22
   140027070:	je     0x14002707d
   140027072:	cmp    eax,0x50
   140027075:	je     0x140027089
   140027077:	call   0x1400218c0
   14002707c:	int3   
   14002707d:	call   0x1400218c0
   140027082:	int3   
   140027083:	call   0x140021878
   140027088:	int3   
   140027089:	mov    rcx,QWORD PTR [rdi+0x48]
   14002708d:	mov    QWORD PTR [rdi+0x38],rcx
   140027091:	lea    rax,[rbx+rcx*1]
   140027095:	mov    QWORD PTR [rbp+0x0],rax
   140027099:	cmp    DWORD PTR [rdi+0x10],0x0
   14002709d:	jne    0x1400270a2
   14002709f:	mov    esi,DWORD PTR [rdi+0x28]
   1400270a2:	mov    r12d,ebx
   1400270a5:	sub    esi,ebx
   1400270a7:	add    r12,rcx
   1400270aa:	mov    rcx,QWORD PTR [rdi+0x30]
   1400270ae:	mov    r8d,esi
   1400270b1:	mov    rdx,r12
   1400270b4:	mov    rax,QWORD PTR [rcx]
   1400270b7:	call   QWORD PTR [rax+0x68]
   1400270ba:	mov    ecx,eax
   1400270bc:	add    ebx,eax
   1400270be:	sub    esi,eax
   1400270c0:	add    r12,rcx
   1400270c3:	test   eax,eax
   1400270c5:	je     0x1400270d0
   1400270c7:	test   esi,esi
   1400270c9:	je     0x1400270d0
   1400270cb:	cmp    ebx,r13d
   1400270ce:	jb     0x1400270aa
   1400270d0:	mov    rcx,QWORD PTR [rdi+0x48]
   1400270d4:	mov    eax,ebx
   1400270d6:	add    rax,rcx
   1400270d9:	mov    QWORD PTR [rdi+0x38],rcx
   1400270dd:	mov    QWORD PTR [rbp+0x0],rax
   1400270e1:	jmp    0x14002711a
   1400270e3:	test   ebx,ebx
   1400270e5:	je     0x1400270f6
   1400270e7:	mov    rcx,QWORD PTR [rcx+0x30]
   1400270eb:	neg    ebx
   1400270ed:	mov    rax,QWORD PTR [rcx]
   1400270f0:	movsxd rdx,ebx
   1400270f3:	call   QWORD PTR [rax+0x50]
   1400270f6:	mov    rcx,QWORD PTR [rdi+0x30]
   1400270fa:	mov    r8d,DWORD PTR [rdi+0x28]
   1400270fe:	lea    r9,[rdi+0x48]
   140027102:	mov    rax,QWORD PTR [rcx]
   140027105:	xor    edx,edx
   140027107:	mov    QWORD PTR [rsp+0x20],rbp
   14002710c:	call   QWORD PTR [rax+0xa0]
   140027112:	mov    r11,QWORD PTR [rdi+0x48]
   140027116:	mov    QWORD PTR [rdi+0x38],r11
   14002711a:	mov    eax,DWORD PTR [rbp+0x0]
   14002711d:	sub    eax,DWORD PTR [rdi+0x38]
   140027120:	cmp    eax,r13d
   140027123:	jae    0x140027130
   140027125:	xor    edx,edx
   140027127:	lea    ecx,[rdx+0x3]
   14002712a:	call   0x140027a2c
   14002712f:	int3   
   140027130:	mov    rbx,QWORD PTR [rsp+0x50]
   140027135:	mov    rbp,QWORD PTR [rsp+0x58]
   14002713a:	mov    rsi,QWORD PTR [rsp+0x60]
   14002713f:	add    rsp,0x30
   140027143:	pop    r13
   140027145:	pop    r12
   140027147:	pop    rdi
   140027148:	ret    
   140027149:	int3   
   14002714a:	int3   
   14002714b:	int3   
   14002714c:	mov    QWORD PTR [rsp+0x8],rbx
   140027151:	push   rdi
   140027152:	sub    rsp,0x20
   140027156:	test   rcx,rcx
   140027159:	mov    rdi,rcx
   14002715c:	jne    0x140027164
   14002715e:	call   0x1400218c0
   140027163:	int3   
   140027164:	call   0x14001f2e8
   140027169:	xor    ecx,ecx
   14002716b:	mov    rbx,rax
   14002716e:	call   0x14002431c
   140027173:	mov    rbx,QWORD PTR [rbx+0x30]
   140027177:	jmp    0x14002718d
   140027179:	mov    rdx,QWORD PTR [rbx]
   14002717c:	mov    rcx,rdi
   14002717f:	call   QWORD PTR [rip+0x1c283]        # 0x140043408
   140027185:	test   eax,eax
   140027187:	je     0x1400271a6
   140027189:	mov    rbx,QWORD PTR [rbx+0x20]
   14002718d:	test   rbx,rbx
   140027190:	jne    0x140027179
   140027192:	xor    ecx,ecx
   140027194:	call   0x1400243b0
   140027199:	xor    eax,eax
   14002719b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400271a0:	add    rsp,0x20
   1400271a4:	pop    rdi
   1400271a5:	ret    
   1400271a6:	xor    ecx,ecx
   1400271a8:	call   0x1400243b0
   1400271ad:	mov    rax,rbx
   1400271b0:	jmp    0x14002719b
   1400271b2:	int3   
   1400271b3:	int3   
   1400271b4:	mov    QWORD PTR [rsp+0x18],rbx
   1400271b9:	mov    QWORD PTR [rsp+0x20],rsi
   1400271be:	push   rdi
   1400271bf:	sub    rsp,0x70
   1400271c3:	mov    rax,QWORD PTR [rip+0x33db6]        # 0x14005af80
   1400271ca:	xor    rax,rsp
   1400271cd:	mov    QWORD PTR [rsp+0x60],rax
   1400271d2:	test   rdx,rdx
   1400271d5:	mov    rbx,rdx
   1400271d8:	mov    rdi,rcx
   1400271db:	je     0x140027297
   1400271e1:	test   BYTE PTR [rcx+0x20],0x1
   1400271e5:	jne    0x1400271f6
   1400271e7:	mov    rdx,QWORD PTR [rcx+0x18]
   1400271eb:	mov    ecx,0x4
   1400271f0:	call   0x140027a2c
   1400271f5:	int3   
   1400271f6:	mov    rax,QWORD PTR [rcx+0x38]
   1400271fa:	add    rax,0x2
   1400271fe:	cmp    rax,QWORD PTR [rcx+0x40]
   140027202:	jbe    0x140027212
   140027204:	mov    edx,DWORD PTR [rcx+0x38]
   140027207:	sub    edx,DWORD PTR [rcx+0x40]
   14002720a:	add    edx,0x2
   14002720d:	call   0x140026fec
   140027212:	mov    rax,QWORD PTR [rdi+0x38]
   140027216:	movzx  ecx,WORD PTR [rax]
   140027219:	add    rax,0x2
   14002721d:	mov    QWORD PTR [rdi+0x38],rax
   140027221:	mov    DWORD PTR [rbx],ecx
   140027223:	test   BYTE PTR [rdi+0x20],0x1
   140027227:	jne    0x140027238
   140027229:	mov    rdx,QWORD PTR [rdi+0x18]
   14002722d:	mov    ecx,0x4
   140027232:	call   0x140027a2c
   140027237:	int3   
   140027238:	mov    rax,QWORD PTR [rdi+0x38]
   14002723c:	add    rax,0x2
   140027240:	cmp    rax,QWORD PTR [rdi+0x40]
   140027244:	jbe    0x140027257
   140027246:	mov    edx,DWORD PTR [rdi+0x38]
   140027249:	mov    rcx,rdi
   14002724c:	sub    edx,DWORD PTR [rdi+0x40]
   14002724f:	add    edx,0x2
   140027252:	call   0x140026fec
   140027257:	mov    rax,QWORD PTR [rdi+0x38]
   14002725b:	movzx  esi,WORD PTR [rax]
   14002725e:	add    rax,0x2
   140027262:	cmp    si,0x40
   140027266:	mov    QWORD PTR [rdi+0x38],rax
   14002726a:	jae    0x140027297
   14002726c:	movzx  ebx,si
   14002726f:	lea    rdx,[rsp+0x20]
   140027274:	mov    rcx,rdi
   140027277:	mov    r8d,ebx
   14002727a:	call   0x140026d50
   14002727f:	cmp    eax,ebx
   140027281:	jne    0x140027297
   140027283:	movzx  eax,si
   140027286:	lea    rcx,[rsp+0x20]
   14002728b:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   140027290:	call   0x14002714c
   140027295:	jmp    0x140027299
   140027297:	xor    eax,eax
   140027299:	mov    rcx,QWORD PTR [rsp+0x60]
   14002729e:	xor    rcx,rsp
   1400272a1:	call   0x140029b40
   1400272a6:	lea    r11,[rsp+0x70]
   1400272ab:	mov    rbx,QWORD PTR [r11+0x20]
   1400272af:	mov    rsi,QWORD PTR [r11+0x28]
   1400272b3:	mov    rsp,r11
   1400272b6:	pop    rdi
   1400272b7:	ret    
   1400272b8:	test   r8d,r8d
   1400272bb:	je     0x140027431
   1400272c1:	mov    QWORD PTR [rsp+0x8],rbx
   1400272c6:	mov    QWORD PTR [rsp+0x10],rbp
   1400272cb:	mov    QWORD PTR [rsp+0x18],rsi
   1400272d0:	push   rdi
   1400272d1:	push   r12
   1400272d3:	push   r13
   1400272d5:	sub    rsp,0x30
   1400272d9:	test   rdx,rdx
   1400272dc:	mov    esi,r8d
   1400272df:	mov    rbp,rdx
   1400272e2:	mov    rdi,rcx
   1400272e5:	je     0x140027419
   1400272eb:	mov    eax,DWORD PTR [rcx+0x20]
   1400272ee:	not    eax
   1400272f0:	test   al,0x1
   1400272f2:	jne    0x140027303
   1400272f4:	mov    rdx,QWORD PTR [rcx+0x18]
   1400272f8:	mov    ecx,0x2
   1400272fd:	call   0x140027a2c
   140027302:	int3   
   140027303:	lea    r13,[rcx+0x40]
   140027307:	mov    r12d,DWORD PTR [r13+0x0]
   14002730b:	mov    rdx,QWORD PTR [r13+0x0]
   14002730f:	sub    r12d,DWORD PTR [rcx+0x38]
   140027313:	mov    rcx,QWORD PTR [rcx+0x38]
   140027317:	cmp    r8d,r12d
   14002731a:	cmovb  r12d,r8d
   14002731e:	sub    rdx,rcx
   140027321:	mov    r8,rbp
   140027324:	mov    r9d,r12d
   140027327:	mov    ebx,r12d
   14002732a:	call   0x140029bf0
   14002732f:	test   eax,eax
   140027331:	je     0x140027359
   140027333:	cmp    eax,0xc
   140027336:	je     0x140027353
   140027338:	cmp    eax,0x16
   14002733b:	je     0x14002734d
   14002733d:	cmp    eax,0x22
   140027340:	je     0x14002734d
   140027342:	cmp    eax,0x50
   140027345:	je     0x140027359
   140027347:	call   0x1400218c0
   14002734c:	int3   
   14002734d:	call   0x1400218c0
   140027352:	int3   
   140027353:	call   0x140021878
   140027358:	int3   
   140027359:	add    QWORD PTR [rdi+0x38],rbx
   14002735d:	add    rbp,rbx
   140027360:	sub    esi,r12d
   140027363:	je     0x140027419
   140027369:	mov    rcx,rdi
   14002736c:	call   0x140026f2c
   140027371:	mov    rcx,QWORD PTR [rdi+0x30]
   140027375:	xor    edx,edx
   140027377:	mov    eax,esi
   140027379:	mov    ebx,esi
   14002737b:	div    DWORD PTR [rdi+0x28]
   14002737e:	mov    rax,QWORD PTR [rcx]
   140027381:	sub    ebx,edx
   140027383:	mov    rdx,rbp
   140027386:	mov    r8d,ebx
   140027389:	call   QWORD PTR [rax+0x70]
   14002738c:	mov    r11d,ebx
   14002738f:	sub    esi,ebx
   140027391:	add    rbp,r11
   140027394:	cmp    DWORD PTR [rdi+0xc],0x0
   140027398:	je     0x1400273c1
   14002739a:	mov    rcx,QWORD PTR [rdi+0x30]
   14002739e:	mov    r8d,DWORD PTR [rdi+0x28]
   1400273a2:	lea    r9,[rdi+0x48]
   1400273a6:	mov    rax,QWORD PTR [rcx]
   1400273a9:	mov    edx,0x1
   1400273ae:	mov    QWORD PTR [rsp+0x20],r13
   1400273b3:	call   QWORD PTR [rax+0xa0]
   1400273b9:	mov    r11,QWORD PTR [rdi+0x48]
   1400273bd:	mov    QWORD PTR [rdi+0x38],r11
   1400273c1:	cmp    esi,DWORD PTR [rdi+0x28]
   1400273c4:	jb     0x1400273cc
   1400273c6:	call   0x1400218c0
   1400273cb:	int3   
   1400273cc:	mov    rcx,QWORD PTR [rdi+0x38]
   1400273d0:	cmp    rcx,QWORD PTR [rdi+0x48]
   1400273d4:	je     0x1400273dc
   1400273d6:	call   0x1400218c0
   1400273db:	int3   
   1400273dc:	mov    r9d,esi
   1400273df:	mov    r8,rbp
   1400273e2:	mov    edx,esi
   1400273e4:	mov    ebx,esi
   1400273e6:	call   0x140029bf0
   1400273eb:	test   eax,eax
   1400273ed:	je     0x140027415
   1400273ef:	cmp    eax,0xc
   1400273f2:	je     0x14002740f
   1400273f4:	cmp    eax,0x16
   1400273f7:	je     0x140027409
   1400273f9:	cmp    eax,0x22
   1400273fc:	je     0x140027409
   1400273fe:	cmp    eax,0x50
   140027401:	je     0x140027415
   140027403:	call   0x1400218c0
   140027408:	int3   
   140027409:	call   0x1400218c0
   14002740e:	int3   
   14002740f:	call   0x140021878
   140027414:	int3   
   140027415:	add    QWORD PTR [rdi+0x38],rbx
   140027419:	mov    rbx,QWORD PTR [rsp+0x50]
   14002741e:	mov    rbp,QWORD PTR [rsp+0x58]
   140027423:	mov    rsi,QWORD PTR [rsp+0x60]
   140027428:	add    rsp,0x30
   14002742c:	pop    r13
   14002742e:	pop    r12
   140027430:	pop    rdi
   140027431:	ret    
   140027432:	int3   
   140027433:	int3   
   140027434:	mov    QWORD PTR [rsp+0x8],rbx
   140027439:	mov    QWORD PTR [rsp+0x10],rbp
   14002743e:	push   rdi
   14002743f:	sub    rsp,0x20
   140027443:	cmp    rdx,0xffff
   14002744a:	mov    eax,DWORD PTR [rcx+0x20]
   14002744d:	mov    rdi,rdx
   140027450:	not    eax
   140027452:	mov    rbx,rcx
   140027455:	jae    0x14002748e
   140027457:	test   al,0x1
   140027459:	jne    0x14002746a
   14002745b:	mov    rdx,QWORD PTR [rcx+0x18]
   14002745f:	mov    ecx,0x2
   140027464:	call   0x140027a2c
   140027469:	int3   
   14002746a:	mov    rax,QWORD PTR [rcx+0x38]
   14002746e:	add    rax,0x2
   140027472:	cmp    rax,QWORD PTR [rcx+0x40]
   140027476:	jbe    0x14002747d
   140027478:	call   0x140026f2c
   14002747d:	mov    rax,QWORD PTR [rbx+0x38]
   140027481:	mov    WORD PTR [rax],di
   140027484:	add    QWORD PTR [rbx+0x38],0x2
   140027489:	jmp    0x140027571
   14002748e:	test   al,0x1
   140027490:	jne    0x1400274a1
   140027492:	mov    rdx,QWORD PTR [rcx+0x18]
   140027496:	mov    ecx,0x2
   14002749b:	call   0x140027a2c
   1400274a0:	int3   
   1400274a1:	mov    rax,QWORD PTR [rcx+0x38]
   1400274a5:	add    rax,0x2
   1400274a9:	cmp    rax,QWORD PTR [rcx+0x40]
   1400274ad:	jbe    0x1400274b4
   1400274af:	call   0x140026f2c
   1400274b4:	mov    rax,QWORD PTR [rbx+0x38]
   1400274b8:	mov    ebp,0xffffffff
   1400274bd:	or     WORD PTR [rax],0xffff
   1400274c2:	add    QWORD PTR [rbx+0x38],0x2
   1400274c7:	cmp    rdi,rbp
   1400274ca:	mov    eax,DWORD PTR [rbx+0x20]
   1400274cd:	mov    rcx,QWORD PTR [rbx+0x38]
   1400274d1:	not    eax
   1400274d3:	jae    0x140027507
   1400274d5:	test   al,0x1
   1400274d7:	jne    0x1400274e8
   1400274d9:	mov    rdx,QWORD PTR [rbx+0x18]
   1400274dd:	mov    ecx,0x2
   1400274e2:	call   0x140027a2c
   1400274e7:	int3   
   1400274e8:	lea    rax,[rcx+0x4]
   1400274ec:	cmp    rax,QWORD PTR [rbx+0x40]
   1400274f0:	jbe    0x1400274fa
   1400274f2:	mov    rcx,rbx
   1400274f5:	call   0x140026f2c
   1400274fa:	mov    rax,QWORD PTR [rbx+0x38]
   1400274fe:	mov    DWORD PTR [rax],edi
   140027500:	add    QWORD PTR [rbx+0x38],0x4
   140027505:	jmp    0x140027571
   140027507:	test   al,0x1
   140027509:	jne    0x14002751a
   14002750b:	mov    rdx,QWORD PTR [rbx+0x18]
   14002750f:	mov    ecx,0x2
   140027514:	call   0x140027a2c
   140027519:	int3   
   14002751a:	lea    rax,[rcx+0x4]
   14002751e:	cmp    rax,QWORD PTR [rbx+0x40]
   140027522:	jbe    0x14002752c
   140027524:	mov    rcx,rbx
   140027527:	call   0x140026f2c
   14002752c:	mov    rax,QWORD PTR [rbx+0x38]
   140027530:	mov    DWORD PTR [rax],ebp
   140027532:	add    QWORD PTR [rbx+0x38],0x4
   140027537:	mov    eax,DWORD PTR [rbx+0x20]
   14002753a:	mov    rcx,QWORD PTR [rbx+0x38]
   14002753e:	not    eax
   140027540:	test   al,0x1
   140027542:	jne    0x140027553
   140027544:	mov    rdx,QWORD PTR [rbx+0x18]
   140027548:	mov    ecx,0x2
   14002754d:	call   0x140027a2c
   140027552:	int3   
   140027553:	lea    rax,[rcx+0x8]
   140027557:	cmp    rax,QWORD PTR [rbx+0x40]
   14002755b:	jbe    0x140027565
   14002755d:	mov    rcx,rbx
   140027560:	call   0x140026f2c
   140027565:	mov    rax,QWORD PTR [rbx+0x38]
   140027569:	mov    QWORD PTR [rax],rdi
   14002756c:	add    QWORD PTR [rbx+0x38],0x8
   140027571:	mov    rbx,QWORD PTR [rsp+0x30]
   140027576:	mov    rbp,QWORD PTR [rsp+0x38]
   14002757b:	add    rsp,0x20
   14002757f:	pop    rdi
   140027580:	ret    
   140027581:	int3   
   140027582:	int3   
   140027583:	int3   
   140027584:	rex push rbx
   140027586:	sub    rsp,0x20
   14002758a:	test   BYTE PTR [rcx+0x20],0x1
   14002758e:	mov    rbx,rcx
   140027591:	jne    0x1400275a2
   140027593:	mov    rdx,QWORD PTR [rcx+0x18]
   140027597:	mov    ecx,0x4
   14002759c:	call   0x140027a2c
   1400275a1:	int3   
   1400275a2:	mov    rax,QWORD PTR [rcx+0x38]
   1400275a6:	add    rax,0x2
   1400275aa:	cmp    rax,QWORD PTR [rcx+0x40]
   1400275ae:	jbe    0x1400275be
   1400275b0:	mov    edx,DWORD PTR [rcx+0x38]
   1400275b3:	sub    edx,DWORD PTR [rcx+0x40]
   1400275b6:	add    edx,0x2
   1400275b9:	call   0x140026fec
   1400275be:	mov    rax,QWORD PTR [rbx+0x38]
   1400275c2:	movzx  ecx,WORD PTR [rax]
   1400275c5:	add    rax,0x2
   1400275c9:	cmp    cx,0xffff
   1400275ce:	mov    QWORD PTR [rbx+0x38],rax
   1400275d2:	je     0x1400275dc
   1400275d4:	movzx  eax,cx
   1400275d7:	jmp    0x140027663
   1400275dc:	test   BYTE PTR [rbx+0x20],0x1
   1400275e0:	jne    0x1400275f1
   1400275e2:	mov    rdx,QWORD PTR [rbx+0x18]
   1400275e6:	mov    ecx,0x4
   1400275eb:	call   0x140027a2c
   1400275f0:	int3   
   1400275f1:	add    rax,0x4
   1400275f5:	cmp    rax,QWORD PTR [rbx+0x40]
   1400275f9:	jbe    0x14002760c
   1400275fb:	mov    edx,DWORD PTR [rbx+0x38]
   1400275fe:	mov    rcx,rbx
   140027601:	sub    edx,DWORD PTR [rbx+0x40]
   140027604:	add    edx,0x4
   140027607:	call   0x140026fec
   14002760c:	mov    rax,QWORD PTR [rbx+0x38]
   140027610:	mov    ecx,DWORD PTR [rax]
   140027612:	add    rax,0x4
   140027616:	cmp    ecx,0xffffffff
   140027619:	mov    QWORD PTR [rbx+0x38],rax
   14002761d:	je     0x140027624
   14002761f:	mov    rax,rcx
   140027622:	jmp    0x140027663
   140027624:	test   BYTE PTR [rbx+0x20],0x1
   140027628:	jne    0x140027639
   14002762a:	mov    rdx,QWORD PTR [rbx+0x18]
   14002762e:	mov    ecx,0x4
   140027633:	call   0x140027a2c
   140027638:	int3   
   140027639:	add    rax,0x8
   14002763d:	cmp    rax,QWORD PTR [rbx+0x40]
   140027641:	jbe    0x140027654
   140027643:	mov    edx,DWORD PTR [rbx+0x38]
   140027646:	mov    rcx,rbx
   140027649:	sub    edx,DWORD PTR [rbx+0x40]
   14002764c:	add    edx,0x8
   14002764f:	call   0x140026fec
   140027654:	mov    rcx,QWORD PTR [rbx+0x38]
   140027658:	mov    rax,QWORD PTR [rcx]
   14002765b:	add    rcx,0x8
   14002765f:	mov    QWORD PTR [rbx+0x38],rcx
   140027663:	add    rsp,0x20
   140027667:	pop    rbx
   140027668:	ret    
   140027669:	int3   
   14002766a:	int3   
   14002766b:	int3   
   14002766c:	mov    QWORD PTR [rsp+0x8],rbx
   140027671:	mov    QWORD PTR [rsp+0x10],rbp
   140027676:	mov    QWORD PTR [rsp+0x18],rsi
   14002767b:	push   rdi
   14002767c:	sub    rsp,0x20
   140027680:	mov    rsi,rcx
   140027683:	mov    rcx,QWORD PTR [rcx]
   140027686:	mov    rbx,rdx
   140027689:	call   QWORD PTR [rip+0x1bd01]        # 0x140043390
   14002768f:	mov    r8d,DWORD PTR [rbx+0x20]
   140027693:	movzx  ebp,WORD PTR [rsi+0xc]
   140027697:	not    r8d
   14002769a:	mov    edi,eax
   14002769c:	test   r8b,0x1
   1400276a0:	jne    0x1400276b1
   1400276a2:	mov    rdx,QWORD PTR [rbx+0x18]
   1400276a6:	mov    ecx,0x2
   1400276ab:	call   0x140027a2c
   1400276b0:	int3   
   1400276b1:	mov    rax,QWORD PTR [rbx+0x38]
   1400276b5:	add    rax,0x2
   1400276b9:	cmp    rax,QWORD PTR [rbx+0x40]
   1400276bd:	jbe    0x1400276c7
   1400276bf:	mov    rcx,rbx
   1400276c2:	call   0x140026f2c
   1400276c7:	mov    rax,QWORD PTR [rbx+0x38]
   1400276cb:	mov    WORD PTR [rax],bp
   1400276ce:	add    QWORD PTR [rbx+0x38],0x2
   1400276d3:	mov    eax,DWORD PTR [rbx+0x20]
   1400276d6:	mov    rcx,QWORD PTR [rbx+0x38]
   1400276da:	not    eax
   1400276dc:	test   al,0x1
   1400276de:	jne    0x1400276ef
   1400276e0:	mov    rdx,QWORD PTR [rbx+0x18]
   1400276e4:	mov    ecx,0x2
   1400276e9:	call   0x140027a2c
   1400276ee:	int3   
   1400276ef:	lea    rax,[rcx+0x2]
   1400276f3:	cmp    rax,QWORD PTR [rbx+0x40]
   1400276f7:	jbe    0x140027701
   1400276f9:	mov    rcx,rbx
   1400276fc:	call   0x140026f2c
   140027701:	mov    rax,QWORD PTR [rbx+0x38]
   140027705:	movzx  r8d,di
   140027709:	mov    rcx,rbx
   14002770c:	mov    WORD PTR [rax],di
   14002770f:	add    QWORD PTR [rbx+0x38],0x2
   140027714:	mov    rdx,QWORD PTR [rsi]
   140027717:	mov    rbx,QWORD PTR [rsp+0x30]
   14002771c:	mov    rbp,QWORD PTR [rsp+0x38]
   140027721:	mov    rsi,QWORD PTR [rsp+0x40]
   140027726:	add    rsp,0x20
   14002772a:	pop    rdi
   14002772b:	jmp    0x1400272b8
   140027730:	lea    rax,[rip+0x209d1]        # 0x140048108
   140027737:	ret    
   140027738:	push   r12
   14002773a:	sub    rsp,0x40
   14002773e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140027747:	mov    QWORD PTR [rsp+0x50],rbx
   14002774c:	mov    QWORD PTR [rsp+0x60],rsi
   140027751:	mov    QWORD PTR [rsp+0x68],rdi
   140027756:	mov    r12d,r8d
   140027759:	mov    rsi,rdx
   14002775c:	mov    rdi,rcx
   14002775f:	test   rdx,rdx
   140027762:	jne    0x14002776b
   140027764:	xor    eax,eax
   140027766:	jmp    0x140027888
   14002776b:	test   r9,r9
   14002776e:	je     0x14002777b
   140027770:	mov    eax,DWORD PTR [rcx+0x10]
   140027773:	add    eax,0xf1b0
   140027778:	mov    DWORD PTR [r9],eax
   14002777b:	call   0x14002157c
   140027780:	mov    r11,rax
   140027783:	xor    ecx,ecx
   140027785:	test   rax,rax
   140027788:	setne  cl
   14002778b:	test   ecx,ecx
   14002778d:	jne    0x14002779a
   14002778f:	mov    ecx,0x80004005
   140027794:	call   0x140003dc0
   140027799:	int3   
   14002779a:	mov    rax,QWORD PTR [rax]
   14002779d:	mov    rcx,r11
   1400277a0:	call   QWORD PTR [rax+0x18]
   1400277a3:	add    rax,0x18
   1400277a7:	mov    QWORD PTR [rsp+0x58],rax
   1400277ac:	mov    rcx,QWORD PTR [rdi+0x18]
   1400277b0:	sub    rcx,0x18
   1400277b4:	call   0x14000b630
   1400277b9:	lea    rbx,[rax+0x18]
   1400277bd:	mov    QWORD PTR [rsp+0x20],rbx
   1400277c2:	cmp    DWORD PTR [rbx-0x10],0x0
   1400277c6:	jne    0x1400277ef
   1400277c8:	mov    ecx,0xf006
   1400277cd:	call   0x140021f1c
   1400277d2:	test   rax,rax
   1400277d5:	je     0x1400277ef
   1400277d7:	mov    r8d,0xf006
   1400277dd:	mov    rdx,rax
   1400277e0:	lea    rcx,[rsp+0x20]
   1400277e5:	call   0x140007010
   1400277ea:	mov    rbx,QWORD PTR [rsp+0x20]
   1400277ef:	mov    edx,DWORD PTR [rdi+0x10]
   1400277f2:	add    edx,0xf1b0
   1400277f8:	mov    r8,rbx
   1400277fb:	lea    rcx,[rsp+0x58]
   140027800:	call   0x140026884
   140027805:	mov    rdx,r12
   140027808:	or     rdi,0xffffffffffffffff
   14002780c:	mov    r9,rdi
   14002780f:	mov    r8,QWORD PTR [rsp+0x58]
   140027814:	mov    rcx,rsi
   140027817:	call   0x14002bd90
   14002781c:	test   eax,eax
   14002781e:	je     0x140027844
   140027820:	cmp    eax,0xc
   140027823:	je     0x14002783e
   140027825:	cmp    eax,0x16
   140027828:	je     0x140027839
   14002782a:	cmp    eax,0x22
   14002782d:	je     0x140027839
   14002782f:	cmp    eax,0x50
   140027832:	je     0x140027844
   140027834:	call   0x1400218c0
   140027839:	call   0x1400218c0
   14002783e:	call   0x140021878
   140027843:	nop
   140027844:	lea    rdx,[rbx-0x18]
   140027848:	mov    eax,edi
   14002784a:	lock xadd DWORD PTR [rdx+0x10],eax
   14002784f:	add    eax,edi
   140027851:	test   eax,eax
   140027853:	jg     0x14002785f
   140027855:	mov    rcx,QWORD PTR [rdx]
   140027858:	mov    rax,QWORD PTR [rcx]
   14002785b:	call   QWORD PTR [rax+0x8]
   14002785e:	nop
   14002785f:	mov    rdx,QWORD PTR [rsp+0x58]
   140027864:	add    rdx,0xffffffffffffffe8
   140027868:	mov    eax,edi
   14002786a:	lock xadd DWORD PTR [rdx+0x10],eax
   14002786f:	add    eax,edi
   140027871:	test   eax,eax
   140027873:	jg     0x14002787f
   140027875:	mov    rcx,QWORD PTR [rdx]
   140027878:	mov    rax,QWORD PTR [rcx]
   14002787b:	call   QWORD PTR [rax+0x8]
   14002787e:	nop
   14002787f:	mov    eax,0x1
   140027884:	jmp    0x140027888
   140027886:	xor    eax,eax
   140027888:	mov    rbx,QWORD PTR [rsp+0x50]
   14002788d:	mov    rsi,QWORD PTR [rsp+0x60]
   140027892:	mov    rdi,QWORD PTR [rsp+0x68]
   140027897:	add    rsp,0x40
   14002789b:	pop    r12
   14002789d:	ret    
   14002789e:	int3   
   14002789f:	int3   
   1400278a0:	int3   
   1400278a1:	int3   
   1400278a2:	int3   
   1400278a3:	int3   
   1400278a4:	int3   
   1400278a5:	int3   
   1400278a6:	int3   
   1400278a7:	int3   
   1400278a8:	rex push rbp
   1400278aa:	sub    rsp,0x20
   1400278ae:	mov    rbp,rdx
   1400278b1:	lea    rcx,[rbp+0x58]
   1400278b5:	call   0x140003de0
   1400278ba:	add    rsp,0x20
   1400278be:	pop    rbp
   1400278bf:	ret    
   1400278c0:	int3   
   1400278c1:	int3   
   1400278c2:	int3   
   1400278c3:	int3   
   1400278c4:	int3   
   1400278c5:	int3   
   1400278c6:	int3   
   1400278c7:	int3   
   1400278c8:	rex push rbp
   1400278ca:	sub    rsp,0x20
   1400278ce:	mov    rbp,rdx
   1400278d1:	lea    rcx,[rbp+0x20]
   1400278d5:	call   0x140003de0
   1400278da:	add    rsp,0x20
   1400278de:	pop    rbp
   1400278df:	ret    
   1400278e0:	int3   
   1400278e1:	int3   
   1400278e2:	int3   
   1400278e3:	int3   
   1400278e4:	int3   
   1400278e5:	int3   
   1400278e6:	int3   
   1400278e7:	int3   
   1400278e8:	mov    QWORD PTR [rsp+0x10],rdx
   1400278ed:	push   rbp
   1400278ee:	sub    rsp,0x20
   1400278f2:	mov    rbp,rdx
   1400278f5:	lea    rax,[rip+0xffffffffffffff8a]        # 0x140027886
   1400278fc:	jmp    0x1400278fe
   1400278fe:	add    rsp,0x20
   140027902:	pop    rbp
   140027903:	ret    
   140027904:	int3   
   140027905:	int3   
   140027906:	int3   
   140027907:	int3   
   140027908:	mov    QWORD PTR [rsp+0x8],rcx
   14002790d:	push   rsi
   14002790e:	push   rdi
   14002790f:	push   r12
   140027911:	sub    rsp,0x30
   140027915:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002791e:	mov    QWORD PTR [rsp+0x58],rbx
   140027923:	mov    QWORD PTR [rsp+0x60],rbp
   140027928:	mov    rdi,r8
   14002792b:	mov    r12d,edx
   14002792e:	mov    rsi,rcx
   140027931:	call   0x1400218e4
   140027936:	lea    r11,[rip+0x20853]        # 0x140048190
   14002793d:	mov    QWORD PTR [rsi],r11
   140027940:	call   0x14002157c
   140027945:	mov    rcx,rax
   140027948:	xor    ebx,ebx
   14002794a:	mov    r9d,ebx
   14002794d:	cmp    rax,rbx
   140027950:	setne  r9b
   140027954:	cmp    r9d,ebx
   140027957:	jne    0x140027964
   140027959:	mov    ecx,0x80004005
   14002795e:	call   0x140003dc0
   140027963:	int3   
   140027964:	mov    rax,QWORD PTR [rax]
   140027967:	call   QWORD PTR [rax+0x18]
   14002796a:	add    rax,0x18
   14002796e:	mov    QWORD PTR [rsi+0x18],rax
   140027972:	mov    DWORD PTR [rsi+0x10],r12d
   140027976:	cmp    rdi,rbx
   140027979:	je     0x140027985
   14002797b:	mov    rcx,rdi
   14002797e:	call   0x14002ad10
   140027983:	mov    ebx,eax
   140027985:	mov    r8d,ebx
   140027988:	mov    rdx,rdi
   14002798b:	lea    rcx,[rsi+0x18]
   14002798f:	call   0x140004590
   140027994:	nop
   140027995:	mov    rax,rsi
   140027998:	mov    rbx,QWORD PTR [rsp+0x58]
   14002799d:	mov    rbp,QWORD PTR [rsp+0x60]
   1400279a2:	add    rsp,0x30
   1400279a6:	pop    r12
   1400279a8:	pop    rdi
   1400279a9:	pop    rsi
   1400279aa:	ret    
   1400279ab:	int3   
   1400279ac:	int3   
   1400279ad:	int3   
   1400279ae:	int3   
   1400279af:	int3   
   1400279b0:	int3   
   1400279b1:	int3   
   1400279b2:	int3   
   1400279b3:	int3   
   1400279b4:	int3   
   1400279b5:	int3   
   1400279b6:	int3   
   1400279b7:	int3   
   1400279b8:	rex push rbp
   1400279ba:	sub    rsp,0x20
   1400279be:	mov    rbp,rdx
   1400279c1:	mov    rcx,QWORD PTR [rbp+0x50]
   1400279c5:	add    rcx,0x18
   1400279c9:	call   0x140003de0
   1400279ce:	add    rsp,0x20
   1400279d2:	pop    rbp
   1400279d3:	ret    
   1400279d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400279d9:	push   rdi
   1400279da:	sub    rsp,0x20
   1400279de:	mov    edi,edx
   1400279e0:	mov    rdx,QWORD PTR [rcx+0x18]
   1400279e4:	lea    rax,[rip+0x207a5]        # 0x140048190
   1400279eb:	sub    rdx,0x18
   1400279ef:	mov    QWORD PTR [rcx],rax
   1400279f2:	or     eax,0xffffffff
   1400279f5:	mov    rbx,rcx
   1400279f8:	lock xadd DWORD PTR [rdx+0x10],eax
   1400279fd:	add    eax,0xffffffff
   140027a00:	test   eax,eax
   140027a02:	jg     0x140027a0d
   140027a04:	mov    rcx,QWORD PTR [rdx]
   140027a07:	mov    rax,QWORD PTR [rcx]
   140027a0a:	call   QWORD PTR [rax+0x8]
   140027a0d:	test   dil,0x1
   140027a11:	je     0x140027a1b
   140027a13:	mov    rcx,rbx
   140027a16:	call   0x14001490c
   140027a1b:	mov    rax,rbx
   140027a1e:	mov    rbx,QWORD PTR [rsp+0x30]
   140027a23:	add    rsp,0x20
   140027a27:	pop    rdi
   140027a28:	ret    
   140027a29:	int3   
   140027a2a:	int3   
   140027a2b:	int3   
   140027a2c:	rex push rdi
   140027a2e:	sub    rsp,0x30
   140027a32:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027a3b:	mov    QWORD PTR [rsp+0x40],rbx
   140027a40:	mov    rbx,rdx
   140027a43:	mov    edi,ecx
   140027a45:	mov    ecx,0x20
   140027a4a:	call   0x1400148c0
   140027a4f:	mov    rcx,rax
   140027a52:	mov    QWORD PTR [rsp+0x58],rax
   140027a57:	xor    eax,eax
   140027a59:	cmp    rcx,rax
   140027a5c:	je     0x140027a69
   140027a5e:	mov    r8,rbx
   140027a61:	mov    edx,edi
   140027a63:	call   0x140027908
   140027a68:	nop
   140027a69:	mov    QWORD PTR [rsp+0x50],rax
   140027a6e:	lea    rdx,[rip+0x2f423]        # 0x140056e98
   140027a75:	lea    rcx,[rsp+0x50]
   140027a7a:	call   0x14002bb20
   140027a7f:	int3   
   140027a80:	int3   
   140027a81:	int3   
   140027a82:	int3   
   140027a83:	int3   
   140027a84:	int3   
   140027a85:	int3   
   140027a86:	int3   
   140027a87:	int3   
   140027a88:	int3   
   140027a89:	int3   
   140027a8a:	int3   
   140027a8b:	int3   
   140027a8c:	rex push rbp
   140027a8e:	sub    rsp,0x20
   140027a92:	mov    rbp,rdx
   140027a95:	mov    rcx,QWORD PTR [rbp+0x58]
   140027a99:	call   0x140001930
   140027a9e:	add    rsp,0x20
   140027aa2:	pop    rbp
   140027aa3:	ret    
   140027aa4:	mov    QWORD PTR [rsp+0x8],rbx
   140027aa9:	push   rdi
   140027aaa:	sub    rsp,0x20
   140027aae:	mov    rdi,rcx
   140027ab1:	call   QWORD PTR [rip+0x1bc39]        # 0x1400436f0
   140027ab7:	jmp    0x140027ade
   140027ab9:	xor    r9d,r9d
   140027abc:	xor    r8d,r8d
   140027abf:	mov    edx,0x365
   140027ac4:	mov    rcx,rbx
   140027ac7:	call   QWORD PTR [rip+0x1bf1b]        # 0x1400439e8
   140027acd:	test   rax,rax
   140027ad0:	jne    0x140027b77
   140027ad6:	mov    rcx,rbx
   140027ad9:	call   0x14001a984
   140027ade:	test   rax,rax
   140027ae1:	mov    rbx,rax
   140027ae4:	jne    0x140027ab9
   140027ae6:	call   QWORD PTR [rip+0x1bd54]        # 0x140043840
   140027aec:	jmp    0x140027b0f
   140027aee:	xor    r9d,r9d
   140027af1:	xor    r8d,r8d
   140027af4:	mov    edx,0x365
   140027af9:	mov    rcx,rbx
   140027afc:	call   QWORD PTR [rip+0x1bee6]        # 0x1400439e8
   140027b02:	test   rax,rax
   140027b05:	jne    0x140027b77
   140027b07:	mov    rcx,rbx
   140027b0a:	call   0x14001a984
   140027b0f:	test   rax,rax
   140027b12:	mov    rbx,rax
   140027b15:	jne    0x140027aee
   140027b17:	mov    rcx,rdi
   140027b1a:	call   0x14001a9fc
   140027b1f:	test   rax,rax
   140027b22:	jne    0x140027b2a
   140027b24:	call   0x1400218c0
   140027b29:	int3   
   140027b2a:	mov    rcx,QWORD PTR [rax+0x40]
   140027b2e:	call   QWORD PTR [rip+0x1bc14]        # 0x140043748
   140027b34:	jmp    0x140027b57
   140027b36:	xor    r9d,r9d
   140027b39:	xor    r8d,r8d
   140027b3c:	mov    edx,0x365
   140027b41:	mov    rcx,rbx
   140027b44:	call   QWORD PTR [rip+0x1be9e]        # 0x1400439e8
   140027b4a:	test   rax,rax
   140027b4d:	jne    0x140027b77
   140027b4f:	mov    rcx,rbx
   140027b52:	call   0x14001a984
   140027b57:	test   rax,rax
   140027b5a:	mov    rbx,rax
   140027b5d:	jne    0x140027b36
   140027b5f:	mov    rcx,QWORD PTR [rdi+0x40]
   140027b63:	xor    r9d,r9d
   140027b66:	mov    edx,0x111
   140027b6b:	mov    r8d,0xe147
   140027b71:	call   QWORD PTR [rip+0x1be71]        # 0x1400439e8
   140027b77:	mov    rbx,QWORD PTR [rsp+0x30]
   140027b7c:	add    rsp,0x20
   140027b80:	pop    rdi
   140027b81:	ret    
   140027b82:	int3   
   140027b83:	int3   
   140027b84:	rex push rbx
   140027b86:	sub    rsp,0x20
   140027b8a:	mov    eax,DWORD PTR [rcx+0xc0]
   140027b90:	mov    rbx,rcx
   140027b93:	test   eax,eax
   140027b95:	je     0x140027bbe
   140027b97:	cmp    eax,0x3f107
   140027b9c:	je     0x140027bc3
   140027b9e:	call   0x14001f2e8
   140027ba3:	mov    edx,DWORD PTR [rbx+0xc0]
   140027ba9:	mov    r8d,0x1
   140027baf:	mov    rcx,QWORD PTR [rax+0x8]
   140027bb3:	mov    rax,QWORD PTR [rcx]
   140027bb6:	call   QWORD PTR [rax+0x158]
   140027bbc:	jmp    0x140027bc3
   140027bbe:	call   0x140027aa4
   140027bc3:	add    rsp,0x20
   140027bc7:	pop    rbx
   140027bc8:	ret    
   140027bc9:	int3   
   140027bca:	int3   
   140027bcb:	int3   
   140027bcc:	rex push rbx
   140027bce:	sub    rsp,0x20
   140027bd2:	test   rdx,rdx
   140027bd5:	mov    rbx,rcx
   140027bd8:	je     0x140027bfb
   140027bda:	test   r8,r8
   140027bdd:	je     0x140027bfb
   140027bdf:	imul   rdx,r8
   140027be3:	lea    rcx,[rdx+0x8]
   140027be7:	call   0x1400148c0
   140027bec:	mov    rcx,QWORD PTR [rbx]
   140027bef:	mov    QWORD PTR [rax],rcx
   140027bf2:	mov    QWORD PTR [rbx],rax
   140027bf5:	add    rsp,0x20
   140027bf9:	pop    rbx
   140027bfa:	ret    
   140027bfb:	call   0x1400218c0
   140027c00:	int3   
   140027c01:	int3   
   140027c02:	int3   
   140027c03:	int3   
   140027c04:	test   rcx,rcx
   140027c07:	je     0x140027c23
   140027c09:	push   rbx
   140027c0a:	sub    rsp,0x20
   140027c0e:	mov    rbx,QWORD PTR [rcx]
   140027c11:	call   0x14001490c
   140027c16:	test   rbx,rbx
   140027c19:	mov    rcx,rbx
   140027c1c:	jne    0x140027c0e
   140027c1e:	add    rsp,0x20
   140027c22:	pop    rbx
   140027c23:	ret    
   140027c24:	mov    eax,0x8
   140027c29:	cmp    edx,eax
   140027c2b:	cmovb  edx,eax
   140027c2e:	mov    eax,0x40
   140027c33:	cmp    r8d,0x1
   140027c37:	cmovbe r8d,eax
   140027c3b:	and    QWORD PTR [rcx+0x10],0x0
   140027c40:	and    QWORD PTR [rcx+0x8],0x0
   140027c45:	mov    DWORD PTR [rcx+0x4],r8d
   140027c49:	mov    DWORD PTR [rcx],edx
   140027c4b:	mov    rax,rcx
   140027c4e:	ret    
   140027c4f:	int3   
   140027c50:	rex push rbx
   140027c52:	sub    rsp,0x20
   140027c56:	mov    rbx,rcx
   140027c59:	mov    rcx,QWORD PTR [rcx+0x8]
   140027c5d:	call   0x140027c04
   140027c62:	and    QWORD PTR [rbx+0x8],0x0
   140027c67:	and    QWORD PTR [rbx+0x10],0x0
   140027c6c:	add    rsp,0x20
   140027c70:	pop    rbx
   140027c71:	ret    
   140027c72:	int3   
   140027c73:	int3   
   140027c74:	jmp    0x140027c50
   140027c79:	int3   
   140027c7a:	int3   
   140027c7b:	int3   
   140027c7c:	rex push rbx
   140027c7e:	sub    rsp,0x20
   140027c82:	cmp    QWORD PTR [rcx+0x10],0x0
   140027c87:	mov    rbx,rcx
   140027c8a:	jne    0x140027cc5
   140027c8c:	mov    r8d,DWORD PTR [rcx]
   140027c8f:	mov    edx,DWORD PTR [rcx+0x4]
   140027c92:	add    rcx,0x8
   140027c96:	call   0x140027bcc
   140027c9b:	mov    edx,DWORD PTR [rbx+0x4]
   140027c9e:	lea    ecx,[rdx-0x1]
   140027ca1:	lea    r11,[rax+0x8]
   140027ca5:	imul   ecx,DWORD PTR [rbx]
   140027ca8:	add    r11,rcx
   140027cab:	add    edx,0xffffffff
   140027cae:	js     0x140027cc5
   140027cb0:	mov    rcx,QWORD PTR [rbx+0x10]
   140027cb4:	mov    QWORD PTR [r11],rcx
   140027cb7:	mov    eax,DWORD PTR [rbx]
   140027cb9:	mov    QWORD PTR [rbx+0x10],r11
   140027cbd:	sub    r11,rax
   140027cc0:	sub    edx,0x1
   140027cc3:	jns    0x140027cb0
   140027cc5:	mov    rax,QWORD PTR [rbx+0x10]
   140027cc9:	mov    rcx,QWORD PTR [rax]
   140027ccc:	mov    QWORD PTR [rbx+0x10],rcx
   140027cd0:	add    rsp,0x20
   140027cd4:	pop    rbx
   140027cd5:	ret    
   140027cd6:	int3   
   140027cd7:	int3   
   140027cd8:	lea    rax,[rip+0x33141]        # 0x14005ae20
   140027cdf:	ret    
   140027ce0:	mov    QWORD PTR [rsp+0x8],rbx
   140027ce5:	mov    QWORD PTR [rsp+0x10],rbp
   140027cea:	mov    QWORD PTR [rsp+0x18],rsi
   140027cef:	push   rdi
   140027cf0:	sub    rsp,0x20
   140027cf4:	test   rdx,rdx
   140027cf7:	mov    rdi,rdx
   140027cfa:	mov    rbx,rcx
   140027cfd:	jns    0x140027d05
   140027cff:	call   0x1400218c0
   140027d04:	int3   
   140027d05:	test   r8,r8
   140027d08:	js     0x140027d0e
   140027d0a:	mov    QWORD PTR [rcx+0x20],r8
   140027d0e:	test   rdx,rdx
   140027d11:	mov    rcx,QWORD PTR [rcx+0x8]
   140027d15:	jne    0x140027d30
   140027d17:	call   0x14001490c
   140027d1c:	and    QWORD PTR [rbx+0x8],0x0
   140027d21:	and    QWORD PTR [rbx+0x18],0x0
   140027d26:	and    QWORD PTR [rbx+0x10],0x0
   140027d2b:	jmp    0x140027e56
   140027d30:	test   rcx,rcx
   140027d33:	jne    0x140027d67
   140027d35:	mov    eax,0xffffffff
   140027d3a:	cmp    rdx,rax
   140027d3d:	jbe    0x140027d45
   140027d3f:	call   0x1400218c0
   140027d44:	int3   
   140027d45:	mov    rcx,rdx
   140027d48:	call   0x1400148c0
   140027d4d:	mov    r8,rdi
   140027d50:	xor    edx,edx
   140027d52:	mov    rcx,rax
   140027d55:	mov    QWORD PTR [rbx+0x8],rax
   140027d59:	call   0x14002ac20
   140027d5e:	mov    QWORD PTR [rbx+0x18],rdi
   140027d62:	jmp    0x140027e52
   140027d67:	mov    r8,QWORD PTR [rbx+0x18]
   140027d6b:	cmp    rdx,r8
   140027d6e:	jg     0x140027d92
   140027d70:	mov    rax,QWORD PTR [rbx+0x10]
   140027d74:	cmp    rdx,rax
   140027d77:	jle    0x140027e52
   140027d7d:	mov    r8,rdx
   140027d80:	add    rcx,rax
   140027d83:	xor    edx,edx
   140027d85:	sub    r8,rax
   140027d88:	call   0x14002ac20
   140027d8d:	jmp    0x140027e52
   140027d92:	mov    rax,QWORD PTR [rbx+0x20]
   140027d96:	test   rax,rax
   140027d99:	jne    0x140027dcc
   140027d9b:	mov    rax,QWORD PTR [rbx+0x10]
   140027d9f:	cqo    
   140027da1:	and    edx,0x7
   140027da4:	add    rax,rdx
   140027da7:	mov    edx,0x4
   140027dac:	sar    rax,0x3
   140027db0:	cmp    rax,rdx
   140027db3:	mov    rcx,rax
   140027db6:	jl     0x140027dc2
   140027db8:	mov    eax,0x400
   140027dbd:	cmp    rcx,rax
   140027dc0:	jg     0x140027dcc
   140027dc2:	mov    rax,rcx
   140027dc5:	cmp    rcx,rdx
   140027dc8:	cmovl  rax,rdx
   140027dcc:	add    rax,r8
   140027dcf:	mov    rsi,rdi
   140027dd2:	cmp    rdi,rax
   140027dd5:	cmovl  rsi,rax
   140027dd9:	cmp    rsi,r8
   140027ddc:	jge    0x140027de4
   140027dde:	call   0x1400218c0
   140027de3:	int3   
   140027de4:	mov    rcx,rsi
   140027de7:	call   0x1400148c0
   140027dec:	mov    r9,QWORD PTR [rbx+0x10]
   140027df0:	mov    r8,QWORD PTR [rbx+0x8]
   140027df4:	mov    rcx,rax
   140027df7:	mov    rdx,rsi
   140027dfa:	mov    rbp,rax
   140027dfd:	call   0x140029bf0
   140027e02:	test   eax,eax
   140027e04:	je     0x140027e2c
   140027e06:	cmp    eax,0xc
   140027e09:	je     0x140027e26
   140027e0b:	cmp    eax,0x16
   140027e0e:	je     0x140027e20
   140027e10:	cmp    eax,0x22
   140027e13:	je     0x140027e20
   140027e15:	cmp    eax,0x50
   140027e18:	je     0x140027e2c
   140027e1a:	call   0x1400218c0
   140027e1f:	int3   
   140027e20:	call   0x1400218c0
   140027e25:	int3   
   140027e26:	call   0x140021878
   140027e2b:	int3   
   140027e2c:	mov    rax,QWORD PTR [rbx+0x10]
   140027e30:	mov    r8,rdi
   140027e33:	xor    edx,edx
   140027e35:	lea    rcx,[rax+rbp*1]
   140027e39:	sub    r8,rax
   140027e3c:	call   0x14002ac20
   140027e41:	mov    rcx,QWORD PTR [rbx+0x8]
   140027e45:	call   0x14001490c
   140027e4a:	mov    QWORD PTR [rbx+0x8],rbp
   140027e4e:	mov    QWORD PTR [rbx+0x18],rsi
   140027e52:	mov    QWORD PTR [rbx+0x10],rdi
   140027e56:	mov    rbx,QWORD PTR [rsp+0x30]
   140027e5b:	mov    rbp,QWORD PTR [rsp+0x38]
   140027e60:	mov    rsi,QWORD PTR [rsp+0x40]
   140027e65:	add    rsp,0x20
   140027e69:	pop    rdi
   140027e6a:	ret    
   140027e6b:	int3   
   140027e6c:	mov    QWORD PTR [rsp+0x8],rbx
   140027e71:	mov    QWORD PTR [rsp+0x10],rbp
   140027e76:	mov    QWORD PTR [rsp+0x18],rsi
   140027e7b:	push   r12
   140027e7d:	sub    rsp,0x20
   140027e81:	mov    eax,DWORD PTR [rdx+0x20]
   140027e84:	mov    rsi,rdx
   140027e87:	mov    rbx,rcx
   140027e8a:	not    eax
   140027e8c:	test   al,0x1
   140027e8e:	je     0x140027ee3
   140027e90:	mov    rdx,QWORD PTR [rcx+0x10]
   140027e94:	mov    rcx,rsi
   140027e97:	call   0x140027434
   140027e9c:	mov    rbp,QWORD PTR [rbx+0x10]
   140027ea0:	mov    r12,QWORD PTR [rbx+0x8]
   140027ea4:	test   rbp,rbp
   140027ea7:	je     0x140027ecd
   140027ea9:	mov    ebx,0x7fffffff
   140027eae:	mov    rdx,r12
   140027eb1:	mov    rcx,rsi
   140027eb4:	cmp    rbp,rbx
   140027eb7:	cmovb  ebx,ebp
   140027eba:	mov    r8d,ebx
   140027ebd:	call   0x1400272b8
   140027ec2:	mov    r11d,ebx
   140027ec5:	add    r12,r11
   140027ec8:	sub    rbp,r11
   140027ecb:	jne    0x140027ea9
   140027ecd:	mov    rbx,QWORD PTR [rsp+0x30]
   140027ed2:	mov    rbp,QWORD PTR [rsp+0x38]
   140027ed7:	mov    rsi,QWORD PTR [rsp+0x40]
   140027edc:	add    rsp,0x20
   140027ee0:	pop    r12
   140027ee2:	ret    
   140027ee3:	mov    rcx,rdx
   140027ee6:	call   0x140027584
   140027eeb:	or     r8,0xffffffffffffffff
   140027eef:	mov    rcx,rbx
   140027ef2:	mov    rdx,rax
   140027ef5:	call   0x140027ce0
   140027efa:	mov    rbp,QWORD PTR [rbx+0x10]
   140027efe:	mov    rbx,QWORD PTR [rbx+0x8]
   140027f02:	test   rbp,rbp
   140027f05:	je     0x140027ecd
   140027f07:	mov    r12d,0x7fffffff
   140027f0d:	mov    rdx,rbx
   140027f10:	mov    rcx,rsi
   140027f13:	cmp    rbp,r12
   140027f16:	cmovb  r12d,ebp
   140027f1a:	mov    r8d,r12d
   140027f1d:	call   0x140026d50
   140027f22:	cmp    eax,r12d
   140027f25:	jne    0x140027f34
   140027f27:	mov    eax,r12d
   140027f2a:	add    rbx,rax
   140027f2d:	sub    rbp,rax
   140027f30:	jne    0x140027f07
   140027f32:	jmp    0x140027ecd
   140027f34:	xor    edx,edx
   140027f36:	lea    ecx,[rdx+0x3]
   140027f39:	call   0x140027a2c
   140027f3e:	int3   
   140027f3f:	int3   
   140027f40:	sub    rsp,0x28
   140027f44:	mov    ecx,0x28
   140027f49:	call   0x1400148c0
   140027f4e:	xor    edx,edx
   140027f50:	cmp    rax,rdx
   140027f53:	je     0x140027f71
   140027f55:	lea    rcx,[rip+0x202ac]        # 0x140048208
   140027f5c:	mov    QWORD PTR [rax+0x8],rdx
   140027f60:	mov    QWORD PTR [rax+0x20],rdx
   140027f64:	mov    QWORD PTR [rax+0x18],rdx
   140027f68:	mov    QWORD PTR [rax+0x10],rdx
   140027f6c:	mov    QWORD PTR [rax],rcx
   140027f6f:	jmp    0x140027f74
   140027f71:	mov    rax,rdx
   140027f74:	add    rsp,0x28
   140027f78:	ret    
   140027f79:	int3   
   140027f7a:	int3   
   140027f7b:	int3   
   140027f7c:	mov    QWORD PTR [rsp+0x8],rbx
   140027f81:	push   rdi
   140027f82:	sub    rsp,0x20
   140027f86:	lea    rax,[rip+0x2027b]        # 0x140048208
   140027f8d:	mov    rdi,rcx
   140027f90:	mov    ebx,edx
   140027f92:	mov    QWORD PTR [rcx],rax
   140027f95:	mov    rcx,QWORD PTR [rcx+0x8]
   140027f99:	call   0x14001490c
   140027f9e:	test   bl,0x1
   140027fa1:	je     0x140027fab
   140027fa3:	mov    rcx,rdi
   140027fa6:	call   0x14001490c
   140027fab:	mov    rax,rdi
   140027fae:	mov    rbx,QWORD PTR [rsp+0x30]
   140027fb3:	add    rsp,0x20
   140027fb7:	pop    rdi
   140027fb8:	ret    
   140027fb9:	int3   
   140027fba:	int3   
   140027fbb:	int3   
   140027fbc:	mov    QWORD PTR [rsp+0x8],rbx
   140027fc1:	push   rdi
   140027fc2:	sub    rsp,0x20
   140027fc6:	test   rcx,rcx
   140027fc9:	mov    edi,r8d
   140027fcc:	mov    rbx,rdx
   140027fcf:	jne    0x140027fd7
   140027fd1:	call   0x1400218c0
   140027fd6:	int3   
   140027fd7:	call   QWORD PTR [rip+0x1b643]        # 0x140043620
   140027fdd:	test   rbx,rbx
   140027fe0:	jne    0x140027ff0
   140027fe2:	mov    rcx,rax
   140027fe5:	call   QWORD PTR [rip+0x1b45d]        # 0x140043448
   140027feb:	add    eax,0x1
   140027fee:	jmp    0x14002802e
   140027ff0:	mov    rdx,rdi
   140027ff3:	or     r9,0xffffffffffffffff
   140027ff7:	mov    r8,rax
   140027ffa:	mov    rcx,rbx
   140027ffd:	call   0x14002bd90
   140028002:	test   eax,eax
   140028004:	je     0x14002802c
   140028006:	cmp    eax,0xc
   140028009:	je     0x140028026
   14002800b:	cmp    eax,0x16
   14002800e:	je     0x140028020
   140028010:	cmp    eax,0x22
   140028013:	je     0x140028020
   140028015:	cmp    eax,0x50
   140028018:	je     0x14002802c
   14002801a:	call   0x1400218c0
   14002801f:	int3   
   140028020:	call   0x1400218c0
   140028025:	int3   
   140028026:	call   0x140021878
   14002802b:	int3   
   14002802c:	xor    eax,eax
   14002802e:	mov    rbx,QWORD PTR [rsp+0x30]
   140028033:	add    rsp,0x20
   140028037:	pop    rdi
   140028038:	ret    
   140028039:	int3   
   14002803a:	int3   
   14002803b:	int3   
   14002803c:	mov    QWORD PTR [rsp+0x10],rbx
   140028041:	mov    QWORD PTR [rsp+0x18],rsi
   140028046:	mov    QWORD PTR [rsp+0x20],rdi
   14002804b:	push   r12
   14002804d:	sub    rsp,0x650
   140028054:	mov    rax,QWORD PTR [rip+0x32f25]        # 0x14005af80
   14002805b:	xor    rax,rsp
   14002805e:	mov    QWORD PTR [rsp+0x640],rax
   140028066:	mov    rbx,rcx
   140028069:	call   0x14001f2e8
   14002806e:	mov    rdx,QWORD PTR [rbx+0x88]
   140028075:	mov    QWORD PTR [rax+0x10],rdx
   140028079:	mov    rdx,QWORD PTR [rbx+0x88]
   140028080:	mov    r12d,0x104
   140028086:	mov    QWORD PTR [rax+0x18],rdx
   14002808a:	mov    rcx,QWORD PTR [rbx+0x88]
   140028091:	lea    rdx,[rsp+0x20]
   140028096:	mov    r8d,r12d
   140028099:	mov    rsi,rax
   14002809c:	call   QWORD PTR [rip+0x1b3ae]        # 0x140043450
   1400280a2:	test   eax,eax
   1400280a4:	je     0x1400280ab
   1400280a6:	cmp    eax,r12d
   1400280a9:	jne    0x1400280b0
   1400280ab:	call   0x140020520
   1400280b0:	lea    rcx,[rsp+0x20]
   1400280b5:	call   QWORD PTR [rip+0x1b56d]        # 0x140043628
   1400280bb:	test   rax,rax
   1400280be:	mov    rdi,rax
   1400280c1:	jne    0x1400280c8
   1400280c3:	call   0x140020520
   1400280c8:	and    WORD PTR [rdi],0x0
   1400280cc:	lea    rdx,[rsp+0x230]
   1400280d4:	lea    rcx,[rsp+0x20]
   1400280d9:	mov    r8d,r12d
   1400280dc:	call   0x140027fbc
   1400280e1:	test   eax,eax
   1400280e3:	je     0x1400280ea
   1400280e5:	call   0x140020520
   1400280ea:	cmp    QWORD PTR [rbx+0xc0],0x0
   1400280f2:	jne    0x140028113
   1400280f4:	lea    rcx,[rsp+0x230]
   1400280fc:	call   0x14002c050
   140028101:	test   rax,rax
   140028104:	mov    QWORD PTR [rbx+0xc0],rax
   14002810b:	jne    0x140028113
   14002810d:	call   0x140021878
   140028112:	int3   
   140028113:	mov    rax,QWORD PTR [rbx+0xa0]
   14002811a:	test   rax,rax
   14002811d:	jne    0x140028161
   14002811f:	lea    rdx,[rsp+0x440]
   140028127:	mov    r8d,0x100
   14002812d:	mov    ecx,0xe000
   140028132:	call   0x140021e38
   140028137:	lea    rcx,[rsp+0x440]
   14002813f:	test   eax,eax
   140028141:	jne    0x14002814a
   140028143:	mov    rcx,QWORD PTR [rbx+0xc0]
   14002814a:	call   0x14002c050
   14002814f:	test   rax,rax
   140028152:	mov    QWORD PTR [rbx+0xa0],rax
   140028159:	jne    0x140028161
   14002815b:	call   0x140021878
   140028160:	int3   
   140028161:	mov    QWORD PTR [rsi+0x20],rax
   140028165:	cmp    QWORD PTR [rbx+0xc8],0x0
   14002816d:	jne    0x14002821f
   140028173:	lea    rcx,[rsp+0x20]
   140028178:	mov    rax,rdi
   14002817b:	mov    rdx,r12
   14002817e:	sub    rax,rcx
   140028181:	mov    rcx,rdi
   140028184:	sar    rax,1
   140028187:	sub    rdx,rax
   14002818a:	cmp    DWORD PTR [rbx+0xd8],0x1
   140028191:	jne    0x1400281c9
   140028193:	lea    r8,[rip+0x200a6]        # 0x140048240
   14002819a:	call   0x14002a9a0
   14002819f:	test   eax,eax
   1400281a1:	je     0x1400281ff
   1400281a3:	cmp    eax,0xc
   1400281a6:	je     0x1400281c3
   1400281a8:	cmp    eax,0x16
   1400281ab:	je     0x1400281bd
   1400281ad:	cmp    eax,0x22
   1400281b0:	je     0x1400281bd
   1400281b2:	cmp    eax,0x50
   1400281b5:	je     0x1400281ff
   1400281b7:	call   0x1400218c0
   1400281bc:	int3   
   1400281bd:	call   0x1400218c0
   1400281c2:	int3   
   1400281c3:	call   0x140021878
   1400281c8:	int3   
   1400281c9:	lea    r8,[rip+0x20060]        # 0x140048230
   1400281d0:	call   0x14002a9a0
   1400281d5:	test   eax,eax
   1400281d7:	je     0x1400281ff
   1400281d9:	cmp    eax,0xc
   1400281dc:	je     0x1400281f9
   1400281de:	cmp    eax,0x16
   1400281e1:	je     0x1400281f3
   1400281e3:	cmp    eax,0x22
   1400281e6:	je     0x1400281f3
   1400281e8:	cmp    eax,0x50
   1400281eb:	je     0x1400281ff
   1400281ed:	call   0x1400218c0
   1400281f2:	int3   
   1400281f3:	call   0x1400218c0
   1400281f8:	int3   
   1400281f9:	call   0x140021878
   1400281fe:	int3   
   1400281ff:	lea    rcx,[rsp+0x20]
   140028204:	call   0x14002c050
   140028209:	test   rax,rax
   14002820c:	mov    QWORD PTR [rbx+0xc8],rax
   140028213:	jne    0x14002821b
   140028215:	call   0x140021878
   14002821a:	int3   
   14002821b:	and    WORD PTR [rdi],0x0
   14002821f:	cmp    QWORD PTR [rbx+0xd0],0x0
   140028227:	jne    0x140028289
   140028229:	lea    r8,[rip+0x1fff0]        # 0x140048220
   140028230:	lea    rcx,[rsp+0x230]
   140028238:	mov    rdx,r12
   14002823b:	call   0x14002c5e0
   140028240:	test   eax,eax
   140028242:	je     0x14002826a
   140028244:	cmp    eax,0xc
   140028247:	je     0x140028264
   140028249:	cmp    eax,0x16
   14002824c:	je     0x14002825e
   14002824e:	cmp    eax,0x22
   140028251:	je     0x14002825e
   140028253:	cmp    eax,0x50
   140028256:	je     0x14002826a
   140028258:	call   0x1400218c0
   14002825d:	int3   
   14002825e:	call   0x1400218c0
   140028263:	int3   
   140028264:	call   0x140021878
   140028269:	int3   
   14002826a:	lea    rcx,[rsp+0x230]
   140028272:	call   0x14002c050
   140028277:	test   rax,rax
   14002827a:	mov    QWORD PTR [rbx+0xd0],rax
   140028281:	jne    0x140028289
   140028283:	call   0x140021878
   140028288:	int3   
   140028289:	mov    rcx,QWORD PTR [rsp+0x640]
   140028291:	xor    rcx,rsp
   140028294:	call   0x140029b40
   140028299:	lea    r11,[rsp+0x650]
   1400282a1:	mov    rbx,QWORD PTR [r11+0x18]
   1400282a5:	mov    rsi,QWORD PTR [r11+0x20]
   1400282a9:	mov    rdi,QWORD PTR [r11+0x28]
   1400282ad:	mov    rsp,r11
   1400282b0:	pop    r12
   1400282b2:	ret    
   1400282b3:	int3   
   1400282b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400282b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400282be:	push   rdi
   1400282bf:	sub    rsp,0x20
   1400282c3:	mov    rbx,rcx
   1400282c6:	xor    ecx,ecx
   1400282c8:	mov    edi,r9d
   1400282cb:	mov    rsi,r8
   1400282ce:	call   QWORD PTR [rip+0x1b084]        # 0x140043358
   1400282d4:	or     eax,0x8001
   1400282d9:	mov    ecx,eax
   1400282db:	call   QWORD PTR [rip+0x1b077]        # 0x140043358
   1400282e1:	call   0x14001f2e8
   1400282e6:	mov    rcx,rax
   1400282e9:	mov    QWORD PTR [rax+0x10],rbx
   1400282ed:	mov    QWORD PTR [rax+0x18],rbx
   1400282f1:	call   0x14001e674
   1400282f6:	call   0x14001f2e8
   1400282fb:	mov    rcx,QWORD PTR [rax+0x8]
   1400282ff:	test   rcx,rcx
   140028302:	je     0x14002831d
   140028304:	mov    QWORD PTR [rcx+0x88],rbx
   14002830b:	mov    QWORD PTR [rcx+0x90],rsi
   140028312:	mov    DWORD PTR [rcx+0x98],edi
   140028318:	call   0x14002803c
   14002831d:	call   0x14001f2e8
   140028322:	cmp    BYTE PTR [rax+0x28],0x0
   140028326:	jne    0x14002832d
   140028328:	call   0x14001fbdc
   14002832d:	lea    rcx,[rip+0x1ff2c]        # 0x140048260
   140028334:	call   QWORD PTR [rip+0x1b16e]        # 0x1400434a8
   14002833a:	test   rax,rax
   14002833d:	je     0x140028356
   14002833f:	lea    rdx,[rip+0x1ff0a]        # 0x140048250
   140028346:	mov    rcx,rax
   140028349:	call   QWORD PTR [rip+0x1b161]        # 0x1400434b0
   14002834f:	mov    QWORD PTR [rip+0x37fca],rax        # 0x140060320
   140028356:	mov    rbx,QWORD PTR [rsp+0x30]
   14002835b:	mov    rsi,QWORD PTR [rsp+0x38]
   140028360:	mov    eax,0x1
   140028365:	add    rsp,0x20
   140028369:	pop    rdi
   14002836a:	ret    
   14002836b:	int3   
   14002836c:	sub    rsp,0x28
   140028370:	cmp    DWORD PTR [rcx+0x50],0x3ffffffe
   140028377:	jb     0x140028388
   140028379:	mov    rdx,QWORD PTR [rcx+0x18]
   14002837d:	mov    ecx,0x5
   140028382:	call   0x140027a2c
   140028387:	int3   
   140028388:	add    rsp,0x28
   14002838c:	ret    
   14002838d:	int3   
   14002838e:	int3   
   14002838f:	int3   
   140028390:	mov    QWORD PTR [rsp+0x8],rbx
   140028395:	mov    QWORD PTR [rsp+0x10],rbp
   14002839a:	mov    QWORD PTR [rsp+0x18],rsi
   14002839f:	push   rdi
   1400283a0:	push   r12
   1400283a2:	push   r13
   1400283a4:	sub    rsp,0x20
   1400283a8:	xor    edi,edi
   1400283aa:	mov    rbp,rdx
   1400283ad:	mov    rsi,rcx
   1400283b0:	cmp    rdx,rdi
   1400283b3:	jge    0x1400283bb
   1400283b5:	call   0x1400218c0
   1400283ba:	int3   
   1400283bb:	cmp    r8,rdi
   1400283be:	jl     0x1400283c4
   1400283c0:	mov    QWORD PTR [rcx+0x20],r8
   1400283c4:	cmp    rdx,rdi
   1400283c7:	mov    rcx,QWORD PTR [rcx+0x8]
   1400283cb:	jne    0x1400283fc
   1400283cd:	cmp    rcx,rdi
   1400283d0:	je     0x1400283ef
   1400283d2:	cmp    QWORD PTR [rsi+0x10],rdi
   1400283d6:	mov    edx,edi
   1400283d8:	jle    0x1400283e6
   1400283da:	add    edx,0x1
   1400283dd:	movsxd rax,edx
   1400283e0:	cmp    rax,QWORD PTR [rsi+0x10]
   1400283e4:	jl     0x1400283da
   1400283e6:	call   0x14001490c
   1400283eb:	mov    QWORD PTR [rsi+0x8],rdi
   1400283ef:	mov    QWORD PTR [rsi+0x18],rdi
   1400283f3:	mov    QWORD PTR [rsi+0x10],rdi
   1400283f7:	jmp    0x1400285a8
   1400283fc:	cmp    rcx,rdi
   1400283ff:	jne    0x140028445
   140028401:	mov    r12,QWORD PTR [rsi+0x20]
   140028405:	cmp    rdx,r12
   140028408:	cmovg  r12,rdx
   14002840c:	mov    rbx,r12
   14002840f:	shl    rbx,0x2
   140028413:	mov    rcx,rbx
   140028416:	call   0x1400148c0
   14002841b:	mov    r8,rbx
   14002841e:	xor    edx,edx
   140028420:	mov    rcx,rax
   140028423:	mov    QWORD PTR [rsi+0x8],rax
   140028427:	call   0x14002ac20
   14002842c:	cmp    rbp,rdi
   14002842f:	jle    0x1400285a0
   140028435:	add    edi,0x1
   140028438:	movsxd rax,edi
   14002843b:	cmp    rax,rbp
   14002843e:	jl     0x140028435
   140028440:	jmp    0x1400285a0
   140028445:	mov    r8,QWORD PTR [rsi+0x18]
   140028449:	cmp    rdx,r8
   14002844c:	jg     0x1400284bc
   14002844e:	mov    rax,QWORD PTR [rsi+0x10]
   140028452:	cmp    rax,rdx
   140028455:	jge    0x140028493
   140028457:	mov    r8,rdx
   14002845a:	lea    rcx,[rcx+rax*4]
   14002845e:	xor    edx,edx
   140028460:	sub    r8,rax
   140028463:	shl    r8,0x2
   140028467:	call   0x14002ac20
   14002846c:	mov    rax,rbp
   14002846f:	sub    rax,QWORD PTR [rsi+0x10]
   140028473:	cmp    rax,rdi
   140028476:	jle    0x1400285a4
   14002847c:	mov    rcx,rbp
   14002847f:	sub    rcx,QWORD PTR [rsi+0x10]
   140028483:	add    edi,0x1
   140028486:	movsxd rax,edi
   140028489:	cmp    rax,rcx
   14002848c:	jl     0x140028483
   14002848e:	jmp    0x1400285a4
   140028493:	jle    0x1400285a4
   140028499:	sub    rax,rdx
   14002849c:	cmp    rax,rdi
   14002849f:	jle    0x1400285a4
   1400284a5:	mov    rcx,QWORD PTR [rsi+0x10]
   1400284a9:	sub    rcx,rdx
   1400284ac:	add    edi,0x1
   1400284af:	movsxd rax,edi
   1400284b2:	cmp    rax,rcx
   1400284b5:	jl     0x1400284ac
   1400284b7:	jmp    0x1400285a4
   1400284bc:	mov    rax,QWORD PTR [rsi+0x20]
   1400284c0:	cmp    rax,rdi
   1400284c3:	jne    0x1400284f0
   1400284c5:	mov    rax,QWORD PTR [rsi+0x10]
   1400284c9:	cqo    
   1400284cb:	and    edx,0x7
   1400284ce:	add    rax,rdx
   1400284d1:	mov    edx,0x400
   1400284d6:	sar    rax,0x3
   1400284da:	cmp    rax,rdx
   1400284dd:	mov    rcx,rax
   1400284e0:	cmovg  rax,rdx
   1400284e4:	mov    edx,0x4
   1400284e9:	cmp    rcx,rdx
   1400284ec:	cmovl  rax,rdx
   1400284f0:	add    rax,r8
   1400284f3:	mov    r12,rbp
   1400284f6:	cmp    rbp,rax
   1400284f9:	cmovl  r12,rax
   1400284fd:	cmp    r12,r8
   140028500:	jge    0x140028508
   140028502:	call   0x1400218c0
   140028507:	int3   
   140028508:	mov    rbx,r12
   14002850b:	shl    rbx,0x2
   14002850f:	mov    rcx,rbx
   140028512:	call   0x1400148c0
   140028517:	mov    r9,QWORD PTR [rsi+0x10]
   14002851b:	mov    r8,QWORD PTR [rsi+0x8]
   14002851f:	shl    r9,0x2
   140028523:	mov    rdx,rbx
   140028526:	mov    rcx,rax
   140028529:	mov    r13,rax
   14002852c:	call   0x140029bf0
   140028531:	cmp    eax,edi
   140028533:	je     0x14002855b
   140028535:	cmp    eax,0xc
   140028538:	je     0x140028555
   14002853a:	cmp    eax,0x16
   14002853d:	je     0x14002854f
   14002853f:	cmp    eax,0x22
   140028542:	je     0x14002854f
   140028544:	cmp    eax,0x50
   140028547:	je     0x14002855b
   140028549:	call   0x1400218c0
   14002854e:	int3   
   14002854f:	call   0x1400218c0
   140028554:	int3   
   140028555:	call   0x140021878
   14002855a:	int3   
   14002855b:	mov    rax,QWORD PTR [rsi+0x10]
   14002855f:	mov    r8,rbp
   140028562:	xor    edx,edx
   140028564:	sub    r8,rax
   140028567:	lea    rcx,[r13+rax*4+0x0]
   14002856c:	shl    r8,0x2
   140028570:	call   0x14002ac20
   140028575:	mov    rax,rbp
   140028578:	sub    rax,QWORD PTR [rsi+0x10]
   14002857c:	cmp    rax,rdi
   14002857f:	jle    0x140028593
   140028581:	mov    rcx,rbp
   140028584:	sub    rcx,QWORD PTR [rsi+0x10]
   140028588:	add    edi,0x1
   14002858b:	movsxd rax,edi
   14002858e:	cmp    rax,rcx
   140028591:	jl     0x140028588
   140028593:	mov    rcx,QWORD PTR [rsi+0x8]
   140028597:	call   0x14001490c
   14002859c:	mov    QWORD PTR [rsi+0x8],r13
   1400285a0:	mov    QWORD PTR [rsi+0x18],r12
   1400285a4:	mov    QWORD PTR [rsi+0x10],rbp
   1400285a8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400285ad:	mov    rbp,QWORD PTR [rsp+0x48]
   1400285b2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400285b7:	add    rsp,0x20
   1400285bb:	pop    r13
   1400285bd:	pop    r12
   1400285bf:	pop    rdi
   1400285c0:	ret    
   1400285c1:	int3   
   1400285c2:	int3   
   1400285c3:	int3   
   1400285c4:	mov    rax,rsp
   1400285c7:	mov    QWORD PTR [rax+0x8],rbx
   1400285cb:	mov    QWORD PTR [rax+0x10],rbp
   1400285cf:	mov    QWORD PTR [rax+0x18],rsi
   1400285d3:	mov    QWORD PTR [rax+0x20],rdi
   1400285d7:	push   r12
   1400285d9:	sub    rsp,0x20
   1400285dd:	test   rdx,rdx
   1400285e0:	mov    rbx,r9
   1400285e3:	mov    r12,r8
   1400285e6:	mov    rsi,rdx
   1400285e9:	mov    rdi,rcx
   1400285ec:	js     0x1400286dd
   1400285f2:	test   rbx,rbx
   1400285f5:	jle    0x1400286dd
   1400285fb:	or     r8,0xffffffffffffffff
   1400285ff:	cmp    rdx,QWORD PTR [rcx+0x10]
   140028603:	jl     0x140028612
   140028605:	add    rdx,r9
   140028608:	call   0x140028390
   14002860d:	jmp    0x1400286a9
   140028612:	mov    rbp,QWORD PTR [rcx+0x10]
   140028616:	lea    rdx,[r9+rbp*1]
   14002861a:	call   0x140028390
   14002861f:	xor    r11d,r11d
   140028622:	test   rbx,rbx
   140028625:	jle    0x140028633
   140028627:	add    r11d,0x1
   14002862b:	movsxd rax,r11d
   14002862e:	cmp    rax,rbx
   140028631:	jl     0x140028627
   140028633:	mov    rcx,QWORD PTR [rdi+0x8]
   140028637:	lea    rax,[rsi+rbx*1]
   14002863b:	sub    rbp,rsi
   14002863e:	lea    r8,[rcx+rsi*4]
   140028642:	shl    rbp,0x2
   140028646:	lea    rcx,[rcx+rax*4]
   14002864a:	mov    r9,rbp
   14002864d:	mov    rdx,rbp
   140028650:	call   0x140029b60
   140028655:	test   eax,eax
   140028657:	je     0x14002867f
   140028659:	cmp    eax,0xc
   14002865c:	je     0x140028679
   14002865e:	cmp    eax,0x16
   140028661:	je     0x140028673
   140028663:	cmp    eax,0x22
   140028666:	je     0x140028673
   140028668:	cmp    eax,0x50
   14002866b:	je     0x14002867f
   14002866d:	call   0x1400218c0
   140028672:	int3   
   140028673:	call   0x1400218c0
   140028678:	int3   
   140028679:	call   0x140021878
   14002867e:	int3   
   14002867f:	mov    rax,QWORD PTR [rdi+0x8]
   140028683:	mov    r8,rbx
   140028686:	xor    edx,edx
   140028688:	lea    rcx,[rax+rsi*4]
   14002868c:	shl    r8,0x2
   140028690:	call   0x14002ac20
   140028695:	xor    r11d,r11d
   140028698:	test   rbx,rbx
   14002869b:	jle    0x1400286a9
   14002869d:	add    r11d,0x1
   1400286a1:	movsxd rax,r11d
   1400286a4:	cmp    rax,rbx
   1400286a7:	jl     0x14002869d
   1400286a9:	shl    rsi,0x2
   1400286ad:	mov    rcx,QWORD PTR [rdi+0x8]
   1400286b1:	mov    eax,DWORD PTR [r12]
   1400286b5:	mov    DWORD PTR [rsi+rcx*1],eax
   1400286b8:	add    rsi,0x4
   1400286bc:	sub    rbx,0x1
   1400286c0:	jne    0x1400286ad
   1400286c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400286c7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400286cc:	mov    rsi,QWORD PTR [rsp+0x40]
   1400286d1:	mov    rdi,QWORD PTR [rsp+0x48]
   1400286d6:	add    rsp,0x20
   1400286da:	pop    r12
   1400286dc:	ret    
   1400286dd:	call   0x1400218c0
   1400286e2:	int3   
   1400286e3:	int3   
   1400286e4:	sub    rsp,0x28
   1400286e8:	lea    rax,[rip+0x1fbb1]        # 0x1400482a0
   1400286ef:	xor    edx,edx
   1400286f1:	cmp    QWORD PTR [rcx+0x8],rdx
   1400286f5:	mov    QWORD PTR [rcx],rax
   1400286f8:	je     0x140028715
   1400286fa:	cmp    QWORD PTR [rcx+0x10],rdx
   1400286fe:	jle    0x14002870c
   140028700:	add    edx,0x1
   140028703:	movsxd rax,edx
   140028706:	cmp    rax,QWORD PTR [rcx+0x10]
   14002870a:	jl     0x140028700
   14002870c:	mov    rcx,QWORD PTR [rcx+0x8]
   140028710:	call   0x14001490c
   140028715:	add    rsp,0x28
   140028719:	ret    
   14002871a:	int3   
   14002871b:	int3   
   14002871c:	mov    QWORD PTR [rsp+0x8],rbx
   140028721:	push   rdi
   140028722:	sub    rsp,0x20
   140028726:	mov    ebx,edx
   140028728:	mov    rdi,rcx
   14002872b:	call   0x1400286e4
   140028730:	test   bl,0x1
   140028733:	je     0x14002873d
   140028735:	mov    rcx,rdi
   140028738:	call   0x14001490c
   14002873d:	mov    rax,rdi
   140028740:	mov    rbx,QWORD PTR [rsp+0x30]
   140028745:	add    rsp,0x20
   140028749:	pop    rdi
   14002874a:	ret    
   14002874b:	int3   
   14002874c:	mov    rax,rsp
   14002874f:	mov    QWORD PTR [rax+0x8],rbx
   140028753:	mov    QWORD PTR [rax+0x10],rsi
   140028757:	mov    QWORD PTR [rax+0x18],rdi
   14002875b:	mov    QWORD PTR [rax+0x20],r12
   14002875f:	push   r13
   140028761:	sub    rsp,0x20
   140028765:	test   r8,r8
   140028768:	mov    rdi,r8
   14002876b:	mov    rsi,rdx
   14002876e:	mov    r12,rcx
   140028771:	je     0x14002877e
   140028773:	test   rdx,rdx
   140028776:	jne    0x14002877e
   140028778:	call   0x1400218c0
   14002877d:	int3   
   14002877e:	mov    eax,DWORD PTR [rcx+0x20]
   140028781:	not    eax
   140028783:	test   al,0x1
   140028785:	je     0x1400287d0
   140028787:	test   r8,r8
   14002878a:	je     0x1400287b5
   14002878c:	mov    ebx,0x1fffffff
   140028791:	mov    rdx,rsi
   140028794:	mov    rcx,r12
   140028797:	cmp    rdi,rbx
   14002879a:	cmovb  ebx,edi
   14002879d:	mov    r8d,ebx
   1400287a0:	shl    r8d,0x2
   1400287a4:	call   0x1400272b8
   1400287a9:	mov    r11d,ebx
   1400287ac:	lea    rsi,[rsi+rbx*4]
   1400287b0:	sub    rdi,r11
   1400287b3:	jne    0x14002878c
   1400287b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400287ba:	mov    rsi,QWORD PTR [rsp+0x38]
   1400287bf:	mov    rdi,QWORD PTR [rsp+0x40]
   1400287c4:	mov    r12,QWORD PTR [rsp+0x48]
   1400287c9:	add    rsp,0x20
   1400287cd:	pop    r13
   1400287cf:	ret    
   1400287d0:	test   r8,r8
   1400287d3:	je     0x1400287b5
   1400287d5:	mov    r13d,0x1fffffff
   1400287db:	mov    rdx,rsi
   1400287de:	mov    rcx,r12
   1400287e1:	cmp    rdi,r13
   1400287e4:	cmovb  r13d,edi
   1400287e8:	mov    ebx,r13d
   1400287eb:	shl    ebx,0x2
   1400287ee:	mov    r8d,ebx
   1400287f1:	call   0x140026d50
   1400287f6:	cmp    eax,ebx
   1400287f8:	jne    0x140028808
   1400287fa:	mov    eax,r13d
   1400287fd:	lea    rsi,[rsi+r13*4]
   140028801:	sub    rdi,rax
   140028804:	jne    0x1400287d5
   140028806:	jmp    0x1400287b5
   140028808:	xor    edx,edx
   14002880a:	lea    ecx,[rdx+0x3]
   14002880d:	call   0x140027a2c
   140028812:	int3   
   140028813:	int3   
   140028814:	rex push rsi
   140028816:	push   rdi
   140028817:	push   r13
   140028819:	sub    rsp,0x30
   14002881d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028826:	mov    QWORD PTR [rsp+0x60],rbx
   14002882b:	mov    QWORD PTR [rsp+0x68],rbp
   140028830:	mov    rsi,rdx
   140028833:	mov    rbp,rcx
   140028836:	mov    rdi,QWORD PTR [rcx+0x60]
   14002883a:	and    QWORD PTR [rsp+0x50],0x0
   140028840:	test   rdi,rdi
   140028843:	jne    0x140028869
   140028845:	lea    ecx,[rdi+0x38]
   140028848:	call   0x1400148c0
   14002884d:	mov    QWORD PTR [rsp+0x58],rax
   140028852:	test   rax,rax
   140028855:	je     0x140028867
   140028857:	lea    edx,[rdi+0xa]
   14002885a:	mov    rcx,rax
   14002885d:	call   0x1400255b8
   140028862:	mov    rdi,rax
   140028865:	jmp    0x140028869
   140028867:	xor    edi,edi
   140028869:	lea    r8,[rsp+0x50]
   14002886e:	mov    r13d,0x1
   140028874:	mov    rdx,r13
   140028877:	mov    rcx,rdi
   14002887a:	call   0x140025464
   14002887f:	test   eax,eax
   140028881:	je     0x14002888a
   140028883:	mov    rbx,QWORD PTR [rsp+0x50]
   140028888:	jmp    0x1400288db
   14002888a:	mov    ecx,0x28
   14002888f:	call   0x1400148c0
   140028894:	mov    rbx,rax
   140028897:	test   rax,rax
   14002889a:	je     0x1400288bc
   14002889c:	lea    rax,[rip+0x1f9fd]        # 0x1400482a0
   1400288a3:	mov    QWORD PTR [rbx],rax
   1400288a6:	and    QWORD PTR [rbx+0x8],0x0
   1400288ab:	and    QWORD PTR [rbx+0x20],0x0
   1400288b0:	and    QWORD PTR [rbx+0x18],0x0
   1400288b5:	and    QWORD PTR [rbx+0x10],0x0
   1400288ba:	jmp    0x1400288be
   1400288bc:	xor    ebx,ebx
   1400288be:	mov    r8d,DWORD PTR [rbp+0x68]
   1400288c2:	mov    rdx,r13
   1400288c5:	mov    rcx,rbx
   1400288c8:	call   0x140028390
   1400288cd:	mov    rdx,r13
   1400288d0:	mov    rcx,rdi
   1400288d3:	call   0x14002566c
   1400288d8:	mov    QWORD PTR [rax],rbx
   1400288db:	mov    QWORD PTR [rbp+0x60],rdi
   1400288df:	test   rsi,rsi
   1400288e2:	je     0x1400288e7
   1400288e4:	mov    QWORD PTR [rsi],rbx
   1400288e7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400288ec:	mov    rbp,QWORD PTR [rsp+0x68]
   1400288f1:	add    rsp,0x30
   1400288f5:	pop    r13
   1400288f7:	pop    rdi
   1400288f8:	pop    rsi
   1400288f9:	ret    
   1400288fa:	int3   
   1400288fb:	int3   
   1400288fc:	int3   
   1400288fd:	int3   
   1400288fe:	int3   
   1400288ff:	int3   
   140028900:	int3   
   140028901:	int3   
   140028902:	int3   
   140028903:	int3   
   140028904:	rex push rbp
   140028906:	sub    rsp,0x20
   14002890a:	mov    rbp,rdx
   14002890d:	mov    rcx,QWORD PTR [rbp+0x58]
   140028911:	call   0x140001930
   140028916:	add    rsp,0x20
   14002891a:	pop    rbp
   14002891b:	ret    
   14002891c:	rex push rbp
   14002891e:	push   rsi
   14002891f:	push   rdi
   140028920:	sub    rsp,0x30
   140028924:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002892d:	mov    QWORD PTR [rsp+0x58],rbx
   140028932:	mov    rsi,rdx
   140028935:	mov    rdi,rcx
   140028938:	mov    eax,DWORD PTR [rcx+0x20]
   14002893b:	not    eax
   14002893d:	mov    ebp,0x1
   140028942:	test   bpl,al
   140028945:	je     0x1400289bf
   140028947:	xor    ebx,ebx
   140028949:	cmp    QWORD PTR [rcx+0x58],rbx
   14002894d:	jne    0x140028994
   14002894f:	lea    ecx,[rbp+0x37]
   140028952:	call   0x1400148c0
   140028957:	mov    QWORD PTR [rsp+0x50],rax
   14002895c:	cmp    rax,rbx
   14002895f:	je     0x14002896e
   140028961:	mov    edx,DWORD PTR [rdi+0x68]
   140028964:	mov    rcx,rax
   140028967:	call   0x1400255b8
   14002896c:	jmp    0x140028971
   14002896e:	mov    rax,rbx
   140028971:	mov    QWORD PTR [rdi+0x58],rax
   140028975:	mov    r8d,ebp
   140028978:	mov    edx,DWORD PTR [rdi+0x6c]
   14002897b:	mov    rcx,rax
   14002897e:	call   0x140025328
   140028983:	xor    edx,edx
   140028985:	mov    rcx,QWORD PTR [rdi+0x58]
   140028989:	call   0x14002566c
   14002898e:	mov    QWORD PTR [rax],rbx
   140028991:	mov    DWORD PTR [rdi+0x50],ebp
   140028994:	cmp    rsi,rbx
   140028997:	je     0x140028a9d
   14002899d:	mov    rcx,rdi
   1400289a0:	call   0x14002836c
   1400289a5:	mov    ebx,DWORD PTR [rdi+0x50]
   1400289a8:	mov    rdx,rsi
   1400289ab:	mov    rcx,QWORD PTR [rdi+0x58]
   1400289af:	call   0x14002566c
   1400289b4:	mov    QWORD PTR [rax],rbx
   1400289b7:	add    DWORD PTR [rdi+0x50],ebp
   1400289ba:	jmp    0x140028a9d
   1400289bf:	xor    ebx,ebx
   1400289c1:	cmp    QWORD PTR [rcx+0x58],rbx
   1400289c5:	jne    0x140028a3d
   1400289c7:	lea    ecx,[rbx+0x28]
   1400289ca:	call   0x1400148c0
   1400289cf:	mov    QWORD PTR [rsp+0x50],rax
   1400289d4:	cmp    rax,rbx
   1400289d7:	je     0x1400289e3
   1400289d9:	mov    rcx,rax
   1400289dc:	call   0x14002965c
   1400289e1:	jmp    0x1400289e6
   1400289e3:	mov    rax,rbx
   1400289e6:	mov    QWORD PTR [rdi+0x58],rax
   1400289ea:	mov    r8d,DWORD PTR [rdi+0x68]
   1400289ee:	mov    rdx,rbp
   1400289f1:	mov    rcx,rax
   1400289f4:	call   0x140029390
   1400289f9:	mov    rax,QWORD PTR [rdi+0x58]
   1400289fd:	cmp    QWORD PTR [rax+0x10],rbx
   140028a01:	jg     0x140028a09
   140028a03:	call   0x1400218c0
   140028a08:	int3   
   140028a09:	mov    rax,QWORD PTR [rax+0x8]
   140028a0d:	mov    QWORD PTR [rax],rbx
   140028a10:	mov    DWORD PTR [rdi+0x50],ebp
   140028a13:	mov    QWORD PTR [rsp+0x60],rbx
   140028a18:	lea    rdx,[rsp+0x60]
   140028a1d:	mov    rcx,rdi
   140028a20:	call   0x140028814
   140028a25:	mov    DWORD PTR [rsp+0x50],ebx
   140028a29:	mov    r9,rbp
   140028a2c:	lea    r8,[rsp+0x50]
   140028a31:	xor    edx,edx
   140028a33:	mov    rcx,QWORD PTR [rsp+0x60]
   140028a38:	call   0x1400285c4
   140028a3d:	cmp    rsi,rbx
   140028a40:	je     0x140028a9d
   140028a42:	mov    rcx,rdi
   140028a45:	call   0x14002836c
   140028a4a:	mov    edx,DWORD PTR [rdi+0x50]
   140028a4d:	mov    r9,rbp
   140028a50:	mov    r8,rsi
   140028a53:	mov    rcx,QWORD PTR [rdi+0x58]
   140028a57:	call   0x14002967c
   140028a5c:	mov    QWORD PTR [rsp+0x60],rbx
   140028a61:	lea    r8,[rsp+0x60]
   140028a66:	mov    rdx,rbp
   140028a69:	mov    rcx,QWORD PTR [rdi+0x60]
   140028a6d:	call   0x140025464
   140028a72:	mov    rcx,QWORD PTR [rsp+0x60]
   140028a77:	cmp    rcx,rbx
   140028a7a:	jne    0x140028a82
   140028a7c:	call   0x1400218c0
   140028a81:	int3   
   140028a82:	mov    DWORD PTR [rsp+0x50],0x2
   140028a8a:	mov    edx,DWORD PTR [rdi+0x50]
   140028a8d:	mov    r9,rbp
   140028a90:	lea    r8,[rsp+0x50]
   140028a95:	call   0x1400285c4
   140028a9a:	add    DWORD PTR [rdi+0x50],ebp
   140028a9d:	mov    rbx,QWORD PTR [rsp+0x58]
   140028aa2:	add    rsp,0x30
   140028aa6:	pop    rdi
   140028aa7:	pop    rsi
   140028aa8:	pop    rbp
   140028aa9:	ret    
   140028aaa:	int3   
   140028aab:	int3   
   140028aac:	rex push rbp
   140028aae:	sub    rsp,0x20
   140028ab2:	mov    rbp,rdx
   140028ab5:	mov    rcx,QWORD PTR [rbp+0x50]
   140028ab9:	call   0x140001930
   140028abe:	add    rsp,0x20
   140028ac2:	pop    rbp
   140028ac3:	ret    
   140028ac4:	int3   
   140028ac5:	int3   
   140028ac6:	int3   
   140028ac7:	int3   
   140028ac8:	int3   
   140028ac9:	int3   
   140028aca:	int3   
   140028acb:	int3   
   140028acc:	rex push rbp
   140028ace:	sub    rsp,0x20
   140028ad2:	mov    rbp,rdx
   140028ad5:	mov    rcx,QWORD PTR [rbp+0x50]
   140028ad9:	call   0x140001930
   140028ade:	add    rsp,0x20
   140028ae2:	pop    rbp
   140028ae3:	ret    
   140028ae4:	mov    QWORD PTR [rsp+0x8],rbx
   140028ae9:	mov    QWORD PTR [rsp+0x10],rsi
   140028aee:	push   rdi
   140028aef:	sub    rsp,0x20
   140028af3:	test   rdx,rdx
   140028af6:	mov    rsi,rdx
   140028af9:	mov    rdi,rcx
   140028afc:	jne    0x140028b0b
   140028afe:	mov    rdx,QWORD PTR [rcx+0x18]
   140028b02:	lea    ecx,[rsi+0x6]
   140028b05:	call   0x140027a2c
   140028b0a:	int3   
   140028b0b:	mov    eax,DWORD PTR [rcx+0x20]
   140028b0e:	not    eax
   140028b10:	test   al,0x1
   140028b12:	jne    0x140028b23
   140028b14:	mov    rdx,QWORD PTR [rcx+0x18]
   140028b18:	mov    ecx,0x1
   140028b1d:	call   0x140027a2c
   140028b22:	int3   
   140028b23:	cmp    DWORD PTR [rdx+0xc],0xffff
   140028b2a:	jne    0x140028b32
   140028b2c:	call   0x14002189c
   140028b31:	int3   
   140028b32:	xor    edx,edx
   140028b34:	call   0x14002891c
   140028b39:	mov    rcx,QWORD PTR [rdi+0x58]
   140028b3d:	mov    rdx,rsi
   140028b40:	call   0x14002566c
   140028b45:	mov    ebx,DWORD PTR [rax]
   140028b47:	mov    eax,DWORD PTR [rdi+0x20]
   140028b4a:	test   ebx,ebx
   140028b4c:	not    eax
   140028b4e:	je     0x140028c11
   140028b54:	cmp    ebx,0x7fff
   140028b5a:	jae    0x140028b9b
   140028b5c:	test   al,0x1
   140028b5e:	jne    0x140028b6f
   140028b60:	mov    rdx,QWORD PTR [rdi+0x18]
   140028b64:	mov    ecx,0x2
   140028b69:	call   0x140027a2c
   140028b6e:	int3   
   140028b6f:	mov    rax,QWORD PTR [rdi+0x38]
   140028b73:	add    rax,0x2
   140028b77:	cmp    rax,QWORD PTR [rdi+0x40]
   140028b7b:	jbe    0x140028b85
   140028b7d:	mov    rcx,rdi
   140028b80:	call   0x140026f2c
   140028b85:	mov    rax,QWORD PTR [rdi+0x38]
   140028b89:	or     bx,0x8000
   140028b8e:	mov    WORD PTR [rax],bx
   140028b91:	add    QWORD PTR [rdi+0x38],0x2
   140028b96:	jmp    0x140028c71
   140028b9b:	test   al,0x1
   140028b9d:	jne    0x140028bae
   140028b9f:	mov    rdx,QWORD PTR [rdi+0x18]
   140028ba3:	mov    ecx,0x2
   140028ba8:	call   0x140027a2c
   140028bad:	int3   
   140028bae:	mov    rax,QWORD PTR [rdi+0x38]
   140028bb2:	add    rax,0x2
   140028bb6:	cmp    rax,QWORD PTR [rdi+0x40]
   140028bba:	jbe    0x140028bc4
   140028bbc:	mov    rcx,rdi
   140028bbf:	call   0x140026f2c
   140028bc4:	mov    rax,QWORD PTR [rdi+0x38]
   140028bc8:	mov    WORD PTR [rax],0x7fff
   140028bcd:	add    QWORD PTR [rdi+0x38],0x2
   140028bd2:	mov    eax,DWORD PTR [rdi+0x20]
   140028bd5:	mov    rcx,QWORD PTR [rdi+0x38]
   140028bd9:	not    eax
   140028bdb:	test   al,0x1
   140028bdd:	jne    0x140028bee
   140028bdf:	mov    rdx,QWORD PTR [rdi+0x18]
   140028be3:	mov    ecx,0x2
   140028be8:	call   0x140027a2c
   140028bed:	int3   
   140028bee:	lea    rax,[rcx+0x4]
   140028bf2:	cmp    rax,QWORD PTR [rdi+0x40]
   140028bf6:	jbe    0x140028c00
   140028bf8:	mov    rcx,rdi
   140028bfb:	call   0x140026f2c
   140028c00:	mov    rax,QWORD PTR [rdi+0x38]
   140028c04:	bts    ebx,0x1f
   140028c08:	mov    DWORD PTR [rax],ebx
   140028c0a:	add    QWORD PTR [rdi+0x38],0x4
   140028c0f:	jmp    0x140028c71
   140028c11:	test   al,0x1
   140028c13:	jne    0x140028c24
   140028c15:	mov    rdx,QWORD PTR [rdi+0x18]
   140028c19:	mov    ecx,0x2
   140028c1e:	call   0x140027a2c
   140028c23:	int3   
   140028c24:	mov    rax,QWORD PTR [rdi+0x38]
   140028c28:	add    rax,0x2
   140028c2c:	cmp    rax,QWORD PTR [rdi+0x40]
   140028c30:	jbe    0x140028c3a
   140028c32:	mov    rcx,rdi
   140028c35:	call   0x140026f2c
   140028c3a:	mov    rax,QWORD PTR [rdi+0x38]
   140028c3e:	mov    rdx,rdi
   140028c41:	mov    rcx,rsi
   140028c44:	or     WORD PTR [rax],0xffff
   140028c49:	add    QWORD PTR [rdi+0x38],0x2
   140028c4e:	call   0x14002766c
   140028c53:	mov    rcx,rdi
   140028c56:	call   0x14002836c
   140028c5b:	mov    rcx,QWORD PTR [rdi+0x58]
   140028c5f:	mov    ebx,DWORD PTR [rdi+0x50]
   140028c62:	mov    rdx,rsi
   140028c65:	call   0x14002566c
   140028c6a:	mov    QWORD PTR [rax],rbx
   140028c6d:	add    DWORD PTR [rdi+0x50],0x1
   140028c71:	mov    rbx,QWORD PTR [rsp+0x30]
   140028c76:	mov    rsi,QWORD PTR [rsp+0x38]
   140028c7b:	add    rsp,0x20
   140028c7f:	pop    rdi
   140028c80:	ret    
   140028c81:	int3   
   140028c82:	int3   
   140028c83:	int3   
   140028c84:	mov    QWORD PTR [rsp+0x10],rbx
   140028c89:	mov    QWORD PTR [rsp+0x18],rbp
   140028c8e:	push   rsi
   140028c8f:	push   rdi
   140028c90:	push   r12
   140028c92:	push   r13
   140028c94:	push   r14
   140028c96:	sub    rsp,0x30
   140028c9a:	mov    esi,0x1
   140028c9f:	mov    r12,r9
   140028ca2:	mov    r14,r8
   140028ca5:	test   BYTE PTR [rcx+0x20],sil
   140028ca9:	mov    r13,rdx
   140028cac:	mov    rdi,rcx
   140028caf:	jne    0x140028cbd
   140028cb1:	mov    rdx,QWORD PTR [rcx+0x18]
   140028cb5:	mov    ecx,esi
   140028cb7:	call   0x140027a2c
   140028cbc:	int3   
   140028cbd:	test   rdx,rdx
   140028cc0:	je     0x140028cd1
   140028cc2:	cmp    DWORD PTR [rdx+0xc],0xffff
   140028cc9:	jne    0x140028cd1
   140028ccb:	call   0x14002189c
   140028cd0:	int3   
   140028cd1:	xor    edx,edx
   140028cd3:	call   0x14002891c
   140028cd8:	test   BYTE PTR [rdi+0x20],sil
   140028cdc:	jne    0x140028ced
   140028cde:	mov    rdx,QWORD PTR [rdi+0x18]
   140028ce2:	mov    ecx,0x4
   140028ce7:	call   0x140027a2c
   140028cec:	int3   
   140028ced:	mov    rax,QWORD PTR [rdi+0x38]
   140028cf1:	add    rax,0x2
   140028cf5:	cmp    rax,QWORD PTR [rdi+0x40]
   140028cf9:	jbe    0x140028d0c
   140028cfb:	mov    edx,DWORD PTR [rdi+0x38]
   140028cfe:	mov    rcx,rdi
   140028d01:	sub    edx,DWORD PTR [rdi+0x40]
   140028d04:	add    edx,0x2
   140028d07:	call   0x140026fec
   140028d0c:	mov    rax,QWORD PTR [rdi+0x38]
   140028d10:	movzx  ebx,WORD PTR [rax]
   140028d13:	add    rax,0x2
   140028d17:	cmp    bx,0x7fff
   140028d1c:	mov    QWORD PTR [rdi+0x38],rax
   140028d20:	jne    0x140028d62
   140028d22:	test   BYTE PTR [rdi+0x20],sil
   140028d26:	jne    0x140028d37
   140028d28:	mov    rdx,QWORD PTR [rdi+0x18]
   140028d2c:	mov    ecx,0x4
   140028d31:	call   0x140027a2c
   140028d36:	int3   
   140028d37:	add    rax,0x4
   140028d3b:	cmp    rax,QWORD PTR [rdi+0x40]
   140028d3f:	jbe    0x140028d52
   140028d41:	mov    edx,DWORD PTR [rdi+0x38]
   140028d44:	mov    rcx,rdi
   140028d47:	sub    edx,DWORD PTR [rdi+0x40]
   140028d4a:	add    edx,0x4
   140028d4d:	call   0x140026fec
   140028d52:	mov    rax,QWORD PTR [rdi+0x38]
   140028d56:	mov    ebp,DWORD PTR [rax]
   140028d58:	add    rax,0x4
   140028d5c:	mov    QWORD PTR [rdi+0x38],rax
   140028d60:	jmp    0x140028d76
   140028d62:	movzx  eax,bx
   140028d65:	mov    ebp,eax
   140028d67:	shl    ebp,0x10
   140028d6a:	and    ebp,0x80008000
   140028d70:	or     ebp,eax
   140028d72:	btr    ebp,0xf
   140028d76:	bt     ebp,0x1f
   140028d7a:	jb     0x140028dad
   140028d7c:	test   r12,r12
   140028d7f:	jne    0x140028d90
   140028d81:	mov    rdx,QWORD PTR [rdi+0x18]
   140028d85:	lea    ecx,[r12+0x5]
   140028d8a:	call   0x140027a2c
   140028d8f:	int3   
   140028d90:	mov    DWORD PTR [r12],ebp
   140028d94:	xor    eax,eax
   140028d96:	mov    rbx,QWORD PTR [rsp+0x68]
   140028d9b:	mov    rbp,QWORD PTR [rsp+0x70]
   140028da0:	add    rsp,0x30
   140028da4:	pop    r14
   140028da6:	pop    r13
   140028da8:	pop    r12
   140028daa:	pop    rdi
   140028dab:	pop    rsi
   140028dac:	ret    
   140028dad:	cmp    bx,0xffff
   140028db2:	jne    0x140028e80
   140028db8:	lea    rdx,[rsp+0x60]
   140028dbd:	mov    rcx,rdi
   140028dc0:	call   0x1400271b4
   140028dc5:	test   rax,rax
   140028dc8:	mov    rsi,rax
   140028dcb:	jne    0x140028dda
   140028dcd:	mov    rdx,QWORD PTR [rdi+0x18]
   140028dd1:	lea    ecx,[rax+0x6]
   140028dd4:	call   0x140027a2c
   140028dd9:	int3   
   140028dda:	mov    eax,DWORD PTR [rax+0xc]
   140028ddd:	btr    eax,0x1f
   140028de1:	cmp    eax,DWORD PTR [rsp+0x60]
   140028de5:	je     0x140028e1a
   140028de7:	bt     DWORD PTR [rsi+0xc],0x1f
   140028dec:	jb     0x140028dfd
   140028dee:	mov    rdx,QWORD PTR [rdi+0x18]
   140028df2:	mov    ecx,0x7
   140028df7:	call   0x140027a2c
   140028dfc:	int3   
   140028dfd:	xor    edx,edx
   140028dff:	mov    rcx,rdi
   140028e02:	call   0x140028814
   140028e07:	mov    rcx,QWORD PTR [rdi+0x60]
   140028e0b:	mov    ebx,DWORD PTR [rsp+0x60]
   140028e0f:	mov    rdx,rsi
   140028e12:	call   0x14002566c
   140028e17:	mov    QWORD PTR [rax],rbx
   140028e1a:	mov    rcx,rdi
   140028e1d:	call   0x14002836c
   140028e22:	mov    edx,DWORD PTR [rdi+0x50]
   140028e25:	mov    rcx,QWORD PTR [rdi+0x58]
   140028e29:	mov    ebx,0x1
   140028e2e:	mov    r8,rsi
   140028e31:	mov    r9,rbx
   140028e34:	call   0x14002967c
   140028e39:	mov    rcx,QWORD PTR [rdi+0x60]
   140028e3d:	and    QWORD PTR [rsp+0x28],0x0
   140028e43:	lea    r8,[rsp+0x28]
   140028e48:	mov    rdx,rbx
   140028e4b:	call   0x140025464
   140028e50:	mov    rcx,QWORD PTR [rsp+0x28]
   140028e55:	test   rcx,rcx
   140028e58:	jne    0x140028e60
   140028e5a:	call   0x1400218c0
   140028e5f:	int3   
   140028e60:	mov    edx,DWORD PTR [rdi+0x50]
   140028e63:	lea    r8,[rsp+0x20]
   140028e68:	mov    r9,rbx
   140028e6b:	mov    DWORD PTR [rsp+0x20],ebx
   140028e6f:	call   0x1400285c4
   140028e74:	add    DWORD PTR [rdi+0x50],ebx
   140028e77:	mov    eax,DWORD PTR [rsp+0x60]
   140028e7b:	jmp    0x140028f3f
   140028e80:	mov    ebx,ebp
   140028e82:	btr    ebx,0x1f
   140028e86:	test   ebx,ebx
   140028e88:	je     0x140028f8e
   140028e8e:	mov    rax,QWORD PTR [rdi+0x58]
   140028e92:	mov    ecx,DWORD PTR [rax+0x10]
   140028e95:	sub    ecx,esi
   140028e97:	cmp    ebx,ecx
   140028e99:	ja     0x140028f8e
   140028e9f:	mov    rcx,QWORD PTR [rdi+0x60]
   140028ea3:	and    QWORD PTR [rsp+0x20],0x0
   140028ea9:	lea    r8,[rsp+0x20]
   140028eae:	mov    rdx,rsi
   140028eb1:	call   0x140025464
   140028eb6:	mov    rax,QWORD PTR [rsp+0x20]
   140028ebb:	test   rax,rax
   140028ebe:	jne    0x140028ec6
   140028ec0:	call   0x1400218c0
   140028ec5:	int3   
   140028ec6:	mov    esi,ebx
   140028ec8:	test   rsi,rsi
   140028ecb:	js     0x140028f88
   140028ed1:	cmp    rsi,QWORD PTR [rax+0x10]
   140028ed5:	jge    0x140028f88
   140028edb:	mov    rax,QWORD PTR [rax+0x8]
   140028edf:	cmp    DWORD PTR [rax+rbx*4],0x2
   140028ee3:	jne    0x140028ef4
   140028ee5:	mov    rdx,QWORD PTR [rdi+0x18]
   140028ee9:	mov    ecx,0x5
   140028eee:	call   0x140027a2c
   140028ef3:	int3   
   140028ef4:	test   rsi,rsi
   140028ef7:	mov    rax,QWORD PTR [rdi+0x58]
   140028efb:	js     0x140028f82
   140028f01:	cmp    rsi,QWORD PTR [rax+0x10]
   140028f05:	jge    0x140028f82
   140028f07:	mov    rax,QWORD PTR [rax+0x8]
   140028f0b:	mov    rcx,QWORD PTR [rdi+0x60]
   140028f0f:	mov    rsi,QWORD PTR [rax+rbx*8]
   140028f13:	and    DWORD PTR [rsp+0x60],0x0
   140028f18:	test   rcx,rcx
   140028f1b:	je     0x140028f34
   140028f1d:	lea    r8,[rsp+0x20]
   140028f22:	mov    rdx,rsi
   140028f25:	call   0x140025464
   140028f2a:	test   eax,eax
   140028f2c:	je     0x140028f34
   140028f2e:	mov    eax,DWORD PTR [rsp+0x20]
   140028f32:	jmp    0x140028f3b
   140028f34:	mov    eax,DWORD PTR [rsi+0xc]
   140028f37:	btr    eax,0x1f
   140028f3b:	mov    DWORD PTR [rsp+0x60],eax
   140028f3f:	test   r13,r13
   140028f42:	je     0x140028f64
   140028f44:	mov    rdx,r13
   140028f47:	mov    rcx,rsi
   140028f4a:	call   0x140021fb0
   140028f4f:	test   eax,eax
   140028f51:	jne    0x140028f60
   140028f53:	mov    rdx,QWORD PTR [rdi+0x18]
   140028f57:	lea    ecx,[rax+0x6]
   140028f5a:	call   0x140027a2c
   140028f5f:	int3   
   140028f60:	mov    eax,DWORD PTR [rsp+0x60]
   140028f64:	test   r14,r14
   140028f67:	je     0x140028f6e
   140028f69:	mov    DWORD PTR [r14],eax
   140028f6c:	jmp    0x140028f71
   140028f6e:	mov    DWORD PTR [rdi+0x14],eax
   140028f71:	test   r12,r12
   140028f74:	je     0x140028f7a
   140028f76:	mov    DWORD PTR [r12],ebp
   140028f7a:	mov    rax,rsi
   140028f7d:	jmp    0x140028d96
   140028f82:	call   0x1400218c0
   140028f87:	int3   
   140028f88:	call   0x1400218c0
   140028f8d:	int3   
   140028f8e:	mov    rdx,QWORD PTR [rdi+0x18]
   140028f92:	mov    ecx,0x5
   140028f97:	call   0x140027a2c
   140028f9c:	int3   
   140028f9d:	int3   
   140028f9e:	int3   
   140028f9f:	int3   
   140028fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140028fa5:	push   rdi
   140028fa6:	sub    rsp,0x20
   140028faa:	mov    eax,DWORD PTR [rdx+0x20]
   140028fad:	mov    rdi,rdx
   140028fb0:	mov    rbx,rcx
   140028fb3:	not    eax
   140028fb5:	test   al,0x1
   140028fb7:	je     0x140028fc7
   140028fb9:	mov    rdx,QWORD PTR [rcx+0x10]
   140028fbd:	mov    rcx,rdi
   140028fc0:	call   0x140027434
   140028fc5:	jmp    0x140028fde
   140028fc7:	mov    rcx,rdx
   140028fca:	call   0x140027584
   140028fcf:	or     r8,0xffffffffffffffff
   140028fd3:	mov    rcx,rbx
   140028fd6:	mov    rdx,rax
   140028fd9:	call   0x140028390
   140028fde:	mov    r8,QWORD PTR [rbx+0x10]
   140028fe2:	mov    rdx,QWORD PTR [rbx+0x8]
   140028fe6:	mov    rcx,rdi
   140028fe9:	mov    rbx,QWORD PTR [rsp+0x30]
   140028fee:	add    rsp,0x20
   140028ff2:	pop    rdi
   140028ff3:	jmp    0x14002874c
   140028ff8:	mov    QWORD PTR [rsp+0x8],rbx
   140028ffd:	mov    QWORD PTR [rsp+0x10],rsi
   140029002:	push   rdi
   140029003:	sub    rsp,0x20
   140029007:	mov    eax,DWORD PTR [rcx+0x20]
   14002900a:	mov    rsi,rdx
   14002900d:	mov    rdi,rcx
   140029010:	not    eax
   140029012:	test   al,0x1
   140029014:	jne    0x140029025
   140029016:	mov    rdx,QWORD PTR [rcx+0x18]
   14002901a:	mov    ecx,0x2
   14002901f:	call   0x140027a2c
   140029024:	int3   
   140029025:	xor    edx,edx
   140029027:	call   0x14002891c
   14002902c:	test   rsi,rsi
   14002902f:	jne    0x14002906f
   140029031:	mov    eax,DWORD PTR [rdi+0x20]
   140029034:	not    eax
   140029036:	test   al,0x1
   140029038:	jne    0x140029047
   14002903a:	mov    rdx,QWORD PTR [rdi+0x18]
   14002903e:	lea    ecx,[rsi+0x2]
   140029041:	call   0x140027a2c
   140029046:	int3   
   140029047:	mov    rax,QWORD PTR [rdi+0x38]
   14002904b:	add    rax,0x2
   14002904f:	cmp    rax,QWORD PTR [rdi+0x40]
   140029053:	jbe    0x14002905d
   140029055:	mov    rcx,rdi
   140029058:	call   0x140026f2c
   14002905d:	mov    rax,QWORD PTR [rdi+0x38]
   140029061:	and    WORD PTR [rax],0x0
   140029065:	add    QWORD PTR [rdi+0x38],0x2
   14002906a:	jmp    0x140029173
   14002906f:	mov    rcx,QWORD PTR [rdi+0x58]
   140029073:	mov    rdx,rsi
   140029076:	call   0x14002566c
   14002907b:	mov    ebx,DWORD PTR [rax]
   14002907d:	test   ebx,ebx
   14002907f:	je     0x140029136
   140029085:	cmp    ebx,0x7fff
   14002908b:	mov    eax,DWORD PTR [rdi+0x20]
   14002908e:	not    eax
   140029090:	jae    0x1400290c4
   140029092:	test   al,0x1
   140029094:	jne    0x1400290a5
   140029096:	mov    rdx,QWORD PTR [rdi+0x18]
   14002909a:	mov    ecx,0x2
   14002909f:	call   0x140027a2c
   1400290a4:	int3   
   1400290a5:	mov    rax,QWORD PTR [rdi+0x38]
   1400290a9:	add    rax,0x2
   1400290ad:	cmp    rax,QWORD PTR [rdi+0x40]
   1400290b1:	jbe    0x1400290bb
   1400290b3:	mov    rcx,rdi
   1400290b6:	call   0x140026f2c
   1400290bb:	mov    rax,QWORD PTR [rdi+0x38]
   1400290bf:	mov    WORD PTR [rax],bx
   1400290c2:	jmp    0x140029065
   1400290c4:	test   al,0x1
   1400290c6:	jne    0x1400290d7
   1400290c8:	mov    rdx,QWORD PTR [rdi+0x18]
   1400290cc:	mov    ecx,0x2
   1400290d1:	call   0x140027a2c
   1400290d6:	int3   
   1400290d7:	mov    rax,QWORD PTR [rdi+0x38]
   1400290db:	add    rax,0x2
   1400290df:	cmp    rax,QWORD PTR [rdi+0x40]
   1400290e3:	jbe    0x1400290ed
   1400290e5:	mov    rcx,rdi
   1400290e8:	call   0x140026f2c
   1400290ed:	mov    rax,QWORD PTR [rdi+0x38]
   1400290f1:	mov    WORD PTR [rax],0x7fff
   1400290f6:	add    QWORD PTR [rdi+0x38],0x2
   1400290fb:	mov    eax,DWORD PTR [rdi+0x20]
   1400290fe:	mov    rcx,QWORD PTR [rdi+0x38]
   140029102:	not    eax
   140029104:	test   al,0x1
   140029106:	jne    0x140029117
   140029108:	mov    rdx,QWORD PTR [rdi+0x18]
   14002910c:	mov    ecx,0x2
   140029111:	call   0x140027a2c
   140029116:	int3   
   140029117:	lea    rax,[rcx+0x4]
   14002911b:	cmp    rax,QWORD PTR [rdi+0x40]
   14002911f:	jbe    0x140029129
   140029121:	mov    rcx,rdi
   140029124:	call   0x140026f2c
   140029129:	mov    rax,QWORD PTR [rdi+0x38]
   14002912d:	mov    DWORD PTR [rax],ebx
   14002912f:	add    QWORD PTR [rdi+0x38],0x4
   140029134:	jmp    0x140029173
   140029136:	mov    rax,QWORD PTR [rsi]
   140029139:	mov    rcx,rsi
   14002913c:	call   QWORD PTR [rax]
   14002913e:	mov    rcx,rdi
   140029141:	mov    rdx,rax
   140029144:	call   0x140028ae4
   140029149:	mov    rcx,rdi
   14002914c:	call   0x14002836c
   140029151:	mov    rcx,QWORD PTR [rdi+0x58]
   140029155:	mov    ebx,DWORD PTR [rdi+0x50]
   140029158:	mov    rdx,rsi
   14002915b:	call   0x14002566c
   140029160:	mov    rdx,rdi
   140029163:	mov    rcx,rsi
   140029166:	mov    QWORD PTR [rax],rbx
   140029169:	add    DWORD PTR [rdi+0x50],0x1
   14002916d:	mov    rax,QWORD PTR [rsi]
   140029170:	call   QWORD PTR [rax+0x10]
   140029173:	mov    rbx,QWORD PTR [rsp+0x30]
   140029178:	mov    rsi,QWORD PTR [rsp+0x38]
   14002917d:	add    rsp,0x20
   140029181:	pop    rdi
   140029182:	ret    
   140029183:	int3   
   140029184:	rex push rsi
   140029186:	push   rdi
   140029187:	push   r12
   140029189:	sub    rsp,0x40
   14002918d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140029196:	mov    QWORD PTR [rsp+0x68],rbx
   14002919b:	mov    r12,rdx
   14002919e:	mov    rbx,rcx
   1400291a1:	mov    esi,0x1
   1400291a6:	test   BYTE PTR [rcx+0x20],sil
   1400291aa:	jne    0x1400291b9
   1400291ac:	mov    rdx,QWORD PTR [rcx+0x18]
   1400291b0:	lea    ecx,[rsi+0x3]
   1400291b3:	call   0x140027a2c
   1400291b8:	int3   
   1400291b9:	lea    r9,[rsp+0x60]
   1400291be:	lea    r8,[rsp+0x70]
   1400291c3:	call   0x140028c84
   1400291c8:	and    QWORD PTR [rsp+0x20],0x0
   1400291ce:	test   rax,rax
   1400291d1:	jne    0x1400292a3
   1400291d7:	mov    rax,QWORD PTR [rbx+0x58]
   1400291db:	mov    ecx,DWORD PTR [rax+0x10]
   1400291de:	sub    ecx,esi
   1400291e0:	mov    edi,DWORD PTR [rsp+0x60]
   1400291e4:	cmp    edi,ecx
   1400291e6:	jbe    0x1400291f7
   1400291e8:	mov    rdx,QWORD PTR [rbx+0x18]
   1400291ec:	mov    ecx,0x5
   1400291f1:	call   0x140027a2c
   1400291f6:	int3   
   1400291f7:	and    QWORD PTR [rsp+0x60],0x0
   1400291fd:	lea    r8,[rsp+0x60]
   140029202:	mov    rdx,rsi
   140029205:	mov    rcx,QWORD PTR [rbx+0x60]
   140029209:	call   0x140025464
   14002920e:	test   eax,eax
   140029210:	je     0x140029254
   140029212:	mov    rcx,QWORD PTR [rsp+0x60]
   140029217:	test   rcx,rcx
   14002921a:	jne    0x140029222
   14002921c:	call   0x1400218c0
   140029221:	int3   
   140029222:	mov    eax,DWORD PTR [rcx+0x10]
   140029225:	sub    eax,esi
   140029227:	cmp    edi,eax
   140029229:	ja     0x140029254
   14002922b:	test   rdi,rdi
   14002922e:	js     0x14002924e
   140029230:	cmp    rdi,QWORD PTR [rcx+0x10]
   140029234:	jge    0x14002924e
   140029236:	mov    rax,QWORD PTR [rcx+0x8]
   14002923a:	cmp    DWORD PTR [rax+rdi*4],esi
   14002923d:	jne    0x140029254
   14002923f:	mov    rdx,QWORD PTR [rbx+0x18]
   140029243:	mov    ecx,0x5
   140029248:	call   0x140027a2c
   14002924d:	int3   
   14002924e:	call   0x1400218c0
   140029253:	int3   
   140029254:	mov    rax,QWORD PTR [rbx+0x58]
   140029258:	test   rdi,rdi
   14002925b:	js     0x14002929d
   14002925d:	cmp    rdi,QWORD PTR [rax+0x10]
   140029261:	jge    0x14002929d
   140029263:	mov    rax,QWORD PTR [rax+0x8]
   140029267:	mov    rdi,QWORD PTR [rax+rdi*8]
   14002926b:	test   rdi,rdi
   14002926e:	je     0x140029339
   140029274:	test   r12,r12
   140029277:	je     0x140029339
   14002927d:	mov    rdx,r12
   140029280:	mov    rcx,rdi
   140029283:	call   0x140021fe8
   140029288:	test   eax,eax
   14002928a:	jne    0x140029339
   140029290:	mov    rdx,QWORD PTR [rbx+0x18]
   140029294:	lea    ecx,[rax+0x6]
   140029297:	call   0x140027a2c
   14002929c:	int3   
   14002929d:	call   0x1400218c0
   1400292a2:	nop
   1400292a3:	mov    rcx,rax
   1400292a6:	call   0x140021f38
   1400292ab:	mov    rdi,rax
   1400292ae:	mov    QWORD PTR [rsp+0x20],rax
   1400292b3:	test   rax,rax
   1400292b6:	jne    0x1400292bd
   1400292b8:	call   0x140021878
   1400292bd:	mov    rcx,rbx
   1400292c0:	call   0x14002836c
   1400292c5:	mov    edx,DWORD PTR [rbx+0x50]
   1400292c8:	mov    r9,rsi
   1400292cb:	mov    r8,rdi
   1400292ce:	mov    rcx,QWORD PTR [rbx+0x58]
   1400292d2:	call   0x14002967c
   1400292d7:	and    QWORD PTR [rsp+0x78],0x0
   1400292dd:	lea    r8,[rsp+0x78]
   1400292e2:	mov    rdx,rsi
   1400292e5:	mov    rcx,QWORD PTR [rbx+0x60]
   1400292e9:	call   0x140025464
   1400292ee:	xor    eax,eax
   1400292f0:	mov    rcx,QWORD PTR [rsp+0x78]
   1400292f5:	test   rcx,rcx
   1400292f8:	setne  al
   1400292fb:	test   eax,eax
   1400292fd:	jne    0x140029304
   1400292ff:	call   0x1400218c0
   140029304:	mov    DWORD PTR [rsp+0x60],0x2
   14002930c:	mov    edx,DWORD PTR [rbx+0x50]
   14002930f:	mov    r9,rsi
   140029312:	lea    r8,[rsp+0x60]
   140029317:	call   0x1400285c4
   14002931c:	add    DWORD PTR [rbx+0x50],esi
   14002931f:	mov    esi,DWORD PTR [rbx+0x14]
   140029322:	mov    eax,DWORD PTR [rsp+0x70]
   140029326:	mov    DWORD PTR [rbx+0x14],eax
   140029329:	mov    r8,QWORD PTR [rdi]
   14002932c:	mov    rdx,rbx
   14002932f:	mov    rcx,rdi
   140029332:	call   QWORD PTR [r8+0x10]
   140029336:	mov    DWORD PTR [rbx+0x14],esi
   140029339:	mov    rax,rdi
   14002933c:	mov    rbx,QWORD PTR [rsp+0x68]
   140029341:	add    rsp,0x40
   140029345:	pop    r12
   140029347:	pop    rdi
   140029348:	pop    rsi
   140029349:	ret    
   14002934a:	int3   
   14002934b:	int3   
   14002934c:	int3   
   14002934d:	int3   
   14002934e:	int3   
   14002934f:	int3   
   140029350:	int3   
   140029351:	int3   
   140029352:	int3   
   140029353:	int3   
   140029354:	mov    QWORD PTR [rsp+0x10],rdx
   140029359:	push   rbp
   14002935a:	push   rsi
   14002935b:	sub    rsp,0x28
   14002935f:	mov    rbp,rdx
   140029362:	mov    rcx,QWORD PTR [rbp+0x20]
   140029366:	test   rcx,rcx
   140029369:	je     0x140029376
   14002936b:	mov    rax,QWORD PTR [rcx]
   14002936e:	mov    edx,0x1
   140029373:	call   QWORD PTR [rax+0x8]
   140029376:	xor    edx,edx
   140029378:	xor    ecx,ecx
   14002937a:	call   0x14002bb20
   14002937f:	nop
   140029380:	add    rsp,0x28
   140029384:	pop    rsi
   140029385:	pop    rbp
   140029386:	ret    
   140029387:	int3   
   140029388:	lea    rax,[rip+0x31b69]        # 0x14005aef8
   14002938f:	ret    
   140029390:	mov    rax,rsp
   140029393:	mov    QWORD PTR [rax+0x8],rbx
   140029397:	mov    QWORD PTR [rax+0x10],rbp
   14002939b:	mov    QWORD PTR [rax+0x18],rsi
   14002939f:	mov    QWORD PTR [rax+0x20],rdi
   1400293a3:	push   r12
   1400293a5:	sub    rsp,0x20
   1400293a9:	test   rdx,rdx
   1400293ac:	mov    rsi,rdx
   1400293af:	mov    rdi,rcx
   1400293b2:	jns    0x1400293ba
   1400293b4:	call   0x1400218c0
   1400293b9:	int3   
   1400293ba:	test   r8,r8
   1400293bd:	js     0x1400293c3
   1400293bf:	mov    QWORD PTR [rcx+0x20],r8
   1400293c3:	test   rdx,rdx
   1400293c6:	mov    rcx,QWORD PTR [rcx+0x8]
   1400293ca:	jne    0x1400293e5
   1400293cc:	call   0x14001490c
   1400293d1:	and    QWORD PTR [rdi+0x8],0x0
   1400293d6:	and    QWORD PTR [rdi+0x18],0x0
   1400293db:	and    QWORD PTR [rdi+0x10],0x0
   1400293e0:	jmp    0x140029516
   1400293e5:	test   rcx,rcx
   1400293e8:	jne    0x140029413
   1400293ea:	mov    rbx,rdx
   1400293ed:	shl    rbx,0x3
   1400293f1:	mov    rcx,rbx
   1400293f4:	call   0x1400148c0
   1400293f9:	mov    r8,rbx
   1400293fc:	xor    edx,edx
   1400293fe:	mov    rcx,rax
   140029401:	mov    QWORD PTR [rdi+0x8],rax
   140029405:	call   0x14002ac20
   14002940a:	mov    QWORD PTR [rdi+0x18],rsi
   14002940e:	jmp    0x140029512
   140029413:	mov    r8,QWORD PTR [rdi+0x18]
   140029417:	cmp    rdx,r8
   14002941a:	jg     0x140029443
   14002941c:	mov    rax,QWORD PTR [rdi+0x10]
   140029420:	cmp    rdx,rax
   140029423:	jle    0x140029512
   140029429:	mov    r8,rdx
   14002942c:	lea    rcx,[rcx+rax*8]
   140029430:	xor    edx,edx
   140029432:	sub    r8,rax
   140029435:	shl    r8,0x3
   140029439:	call   0x14002ac20
   14002943e:	jmp    0x140029512
   140029443:	mov    rax,QWORD PTR [rdi+0x20]
   140029447:	test   rax,rax
   14002944a:	jne    0x14002947d
   14002944c:	mov    rax,QWORD PTR [rdi+0x10]
   140029450:	cqo    
   140029452:	and    edx,0x7
   140029455:	add    rax,rdx
   140029458:	mov    edx,0x4
   14002945d:	sar    rax,0x3
   140029461:	cmp    rax,rdx
   140029464:	mov    rcx,rax
   140029467:	jl     0x140029473
   140029469:	mov    eax,0x400
   14002946e:	cmp    rcx,rax
   140029471:	jg     0x14002947d
   140029473:	mov    rax,rcx
   140029476:	cmp    rcx,rdx
   140029479:	cmovl  rax,rdx
   14002947d:	add    rax,r8
   140029480:	mov    rbp,rsi
   140029483:	cmp    rsi,rax
   140029486:	cmovl  rbp,rax
   14002948a:	cmp    rbp,r8
   14002948d:	jge    0x140029495
   14002948f:	call   0x1400218c0
   140029494:	int3   
   140029495:	mov    rbx,rbp
   140029498:	shl    rbx,0x3
   14002949c:	mov    rcx,rbx
   14002949f:	call   0x1400148c0
   1400294a4:	mov    r9,QWORD PTR [rdi+0x10]
   1400294a8:	mov    r8,QWORD PTR [rdi+0x8]
   1400294ac:	shl    r9,0x3
   1400294b0:	mov    rdx,rbx
   1400294b3:	mov    rcx,rax
   1400294b6:	mov    r12,rax
   1400294b9:	call   0x140029bf0
   1400294be:	test   eax,eax
   1400294c0:	je     0x1400294e8
   1400294c2:	cmp    eax,0xc
   1400294c5:	je     0x1400294e2
   1400294c7:	cmp    eax,0x16
   1400294ca:	je     0x1400294dc
   1400294cc:	cmp    eax,0x22
   1400294cf:	je     0x1400294dc
   1400294d1:	cmp    eax,0x50
   1400294d4:	je     0x1400294e8
   1400294d6:	call   0x1400218c0
   1400294db:	int3   
   1400294dc:	call   0x1400218c0
   1400294e1:	int3   
   1400294e2:	call   0x140021878
   1400294e7:	int3   
   1400294e8:	mov    rax,QWORD PTR [rdi+0x10]
   1400294ec:	mov    r8,rsi
   1400294ef:	xor    edx,edx
   1400294f1:	sub    r8,rax
   1400294f4:	lea    rcx,[r12+rax*8]
   1400294f8:	shl    r8,0x3
   1400294fc:	call   0x14002ac20
   140029501:	mov    rcx,QWORD PTR [rdi+0x8]
   140029505:	call   0x14001490c
   14002950a:	mov    QWORD PTR [rdi+0x8],r12
   14002950e:	mov    QWORD PTR [rdi+0x18],rbp
   140029512:	mov    QWORD PTR [rdi+0x10],rsi
   140029516:	mov    rbx,QWORD PTR [rsp+0x30]
   14002951b:	mov    rbp,QWORD PTR [rsp+0x38]
   140029520:	mov    rsi,QWORD PTR [rsp+0x40]
   140029525:	mov    rdi,QWORD PTR [rsp+0x48]
   14002952a:	add    rsp,0x20
   14002952e:	pop    r12
   140029530:	ret    
   140029531:	int3   
   140029532:	int3   
   140029533:	int3   
   140029534:	mov    QWORD PTR [rsp+0x8],rbx
   140029539:	mov    QWORD PTR [rsp+0x10],rbp
   14002953e:	mov    QWORD PTR [rsp+0x18],rsi
   140029543:	push   rdi
   140029544:	sub    rsp,0x20
   140029548:	mov    eax,DWORD PTR [rdx+0x20]
   14002954b:	mov    rbp,rdx
   14002954e:	mov    rsi,rcx
   140029551:	not    eax
   140029553:	test   al,0x1
   140029555:	je     0x140029587
   140029557:	mov    rdx,QWORD PTR [rcx+0x10]
   14002955b:	mov    rcx,rbp
   14002955e:	call   0x140027434
   140029563:	xor    edi,edi
   140029565:	cmp    QWORD PTR [rsi+0x10],rdi
   140029569:	jle    0x1400295c2
   14002956b:	mov    rdx,QWORD PTR [rsi+0x8]
   14002956f:	mov    rcx,rbp
   140029572:	mov    rdx,QWORD PTR [rdx+rdi*8]
   140029576:	call   0x140028ff8
   14002957b:	add    rdi,0x1
   14002957f:	cmp    rdi,QWORD PTR [rsi+0x10]
   140029583:	jl     0x14002956b
   140029585:	jmp    0x1400295c2
   140029587:	mov    rcx,rdx
   14002958a:	call   0x140027584
   14002958f:	or     r8,0xffffffffffffffff
   140029593:	mov    rcx,rsi
   140029596:	mov    rdx,rax
   140029599:	call   0x140029390
   14002959e:	xor    edi,edi
   1400295a0:	cmp    QWORD PTR [rsi+0x10],rdi
   1400295a4:	jle    0x1400295c2
   1400295a6:	mov    rbx,QWORD PTR [rsi+0x8]
   1400295aa:	xor    edx,edx
   1400295ac:	mov    rcx,rbp
   1400295af:	call   0x140029184
   1400295b4:	mov    QWORD PTR [rbx+rdi*8],rax
   1400295b8:	add    rdi,0x1
   1400295bc:	cmp    rdi,QWORD PTR [rsi+0x10]
   1400295c0:	jl     0x1400295a6
   1400295c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400295c7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400295cc:	mov    rsi,QWORD PTR [rsp+0x40]
   1400295d1:	add    rsp,0x20
   1400295d5:	pop    rdi
   1400295d6:	ret    
   1400295d7:	int3   
   1400295d8:	sub    rsp,0x28
   1400295dc:	mov    ecx,0x28
   1400295e1:	call   0x1400148c0
   1400295e6:	xor    edx,edx
   1400295e8:	cmp    rax,rdx
   1400295eb:	je     0x140029609
   1400295ed:	lea    rcx,[rip+0x1ed54]        # 0x140048348
   1400295f4:	mov    QWORD PTR [rax+0x8],rdx
   1400295f8:	mov    QWORD PTR [rax+0x20],rdx
   1400295fc:	mov    QWORD PTR [rax+0x18],rdx
   140029600:	mov    QWORD PTR [rax+0x10],rdx
   140029604:	mov    QWORD PTR [rax],rcx
   140029607:	jmp    0x14002960c
   140029609:	mov    rax,rdx
   14002960c:	add    rsp,0x28
   140029610:	ret    
   140029611:	int3   
   140029612:	int3   
   140029613:	int3   
   140029614:	mov    QWORD PTR [rsp+0x8],rbx
   140029619:	push   rdi
   14002961a:	sub    rsp,0x20
   14002961e:	lea    rax,[rip+0x1ed23]        # 0x140048348
   140029625:	mov    rdi,rcx
   140029628:	mov    ebx,edx
   14002962a:	mov    QWORD PTR [rcx],rax
   14002962d:	mov    rcx,QWORD PTR [rcx+0x8]
   140029631:	call   0x14001490c
   140029636:	test   bl,0x1
   140029639:	je     0x140029643
   14002963b:	mov    rcx,rdi
   14002963e:	call   0x14001490c
   140029643:	mov    rax,rdi
   140029646:	mov    rbx,QWORD PTR [rsp+0x30]
   14002964b:	add    rsp,0x20
   14002964f:	pop    rdi
   140029650:	ret    
   140029651:	int3   
   140029652:	int3   
   140029653:	int3   
   140029654:	lea    rax,[rip+0x1ed15]        # 0x140048370
   14002965b:	ret    
   14002965c:	lea    rax,[rip+0x1ed45]        # 0x1400483a8
   140029663:	mov    QWORD PTR [rcx],rax
   140029666:	xor    eax,eax
   140029668:	mov    QWORD PTR [rcx+0x8],rax
   14002966c:	mov    QWORD PTR [rcx+0x20],rax
   140029670:	mov    QWORD PTR [rcx+0x18],rax
   140029674:	mov    QWORD PTR [rcx+0x10],rax
   140029678:	mov    rax,rcx
   14002967b:	ret    
   14002967c:	mov    rax,rsp
   14002967f:	mov    QWORD PTR [rax+0x8],rbx
   140029683:	mov    QWORD PTR [rax+0x10],rbp
   140029687:	mov    QWORD PTR [rax+0x18],rsi
   14002968b:	mov    QWORD PTR [rax+0x20],rdi
   14002968f:	push   r12
   140029691:	sub    rsp,0x20
   140029695:	test   rdx,rdx
   140029698:	mov    rdi,r9
   14002969b:	mov    r12,r8
   14002969e:	mov    rsi,rdx
   1400296a1:	mov    rbp,rcx
   1400296a4:	js     0x140029772
   1400296aa:	test   r9,r9
   1400296ad:	jle    0x140029772
   1400296b3:	or     r8,0xffffffffffffffff
   1400296b7:	cmp    rdx,QWORD PTR [rcx+0x10]
   1400296bb:	jl     0x1400296c7
   1400296bd:	add    rdx,r9
   1400296c0:	call   0x140029390
   1400296c5:	jmp    0x140029741
   1400296c7:	mov    rbx,QWORD PTR [rcx+0x10]
   1400296cb:	lea    rdx,[rbx+r9*1]
   1400296cf:	call   0x140029390
   1400296d4:	mov    rcx,QWORD PTR [rbp+0x8]
   1400296d8:	mov    rdx,QWORD PTR [rbp+0x10]
   1400296dc:	sub    rdx,rsi
   1400296df:	lea    rax,[rsi+rdi*1]
   1400296e3:	lea    r8,[rcx+rsi*8]
   1400296e7:	sub    rdx,rdi
   1400296ea:	sub    rbx,rsi
   1400296ed:	lea    rcx,[rcx+rax*8]
   1400296f1:	shl    rbx,0x3
   1400296f5:	shl    rdx,0x3
   1400296f9:	mov    r9,rbx
   1400296fc:	call   0x140029b60
   140029701:	test   eax,eax
   140029703:	je     0x14002972b
   140029705:	cmp    eax,0xc
   140029708:	je     0x140029725
   14002970a:	cmp    eax,0x16
   14002970d:	je     0x14002971f
   14002970f:	cmp    eax,0x22
   140029712:	je     0x14002971f
   140029714:	cmp    eax,0x50
   140029717:	je     0x14002972b
   140029719:	call   0x1400218c0
   14002971e:	int3   
   14002971f:	call   0x1400218c0
   140029724:	int3   
   140029725:	call   0x140021878
   14002972a:	int3   
   14002972b:	mov    rax,QWORD PTR [rbp+0x8]
   14002972f:	mov    r8,rdi
   140029732:	xor    edx,edx
   140029734:	lea    rcx,[rax+rsi*8]
   140029738:	shl    r8,0x3
   14002973c:	call   0x14002ac20
   140029741:	shl    rsi,0x3
   140029745:	mov    rax,QWORD PTR [rbp+0x8]
   140029749:	mov    QWORD PTR [rsi+rax*1],r12
   14002974d:	add    rsi,0x8
   140029751:	sub    rdi,0x1
   140029755:	jne    0x140029745
   140029757:	mov    rbx,QWORD PTR [rsp+0x30]
   14002975c:	mov    rbp,QWORD PTR [rsp+0x38]
   140029761:	mov    rsi,QWORD PTR [rsp+0x40]
   140029766:	mov    rdi,QWORD PTR [rsp+0x48]
   14002976b:	add    rsp,0x20
   14002976f:	pop    r12
   140029771:	ret    
   140029772:	call   0x1400218c0
   140029777:	int3   
   140029778:	mov    QWORD PTR [rsp+0x8],rbx
   14002977d:	push   rdi
   14002977e:	sub    rsp,0x20
   140029782:	lea    rax,[rip+0x1ec1f]        # 0x1400483a8
   140029789:	mov    rdi,rcx
   14002978c:	mov    ebx,edx
   14002978e:	mov    QWORD PTR [rcx],rax
   140029791:	mov    rcx,QWORD PTR [rcx+0x8]
   140029795:	call   0x14001490c
   14002979a:	test   bl,0x1
   14002979d:	je     0x1400297a7
   14002979f:	mov    rcx,rdi
   1400297a2:	call   0x14001490c
   1400297a7:	mov    rax,rdi
   1400297aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400297af:	add    rsp,0x20
   1400297b3:	pop    rdi
   1400297b4:	ret    
   1400297b5:	int3   
   1400297b6:	int3   
   1400297b7:	int3   
   1400297b8:	int3   
   1400297b9:	int3   
   1400297ba:	int3   
   1400297bb:	int3   
   1400297bc:	int3   
   1400297bd:	int3   
   1400297be:	int3   
   1400297bf:	int3   
   1400297c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400297c5:	mov    QWORD PTR [rsp+0x18],rsi
   1400297ca:	push   rdi
   1400297cb:	push   r12
   1400297cd:	push   r13
   1400297cf:	sub    rsp,0xa0
   1400297d6:	lea    rcx,[rsp+0x30]
   1400297db:	call   QWORD PTR [rip+0x199c7]        # 0x1400431a8
   1400297e1:	nop
   1400297e2:	call   QWORD PTR [rip+0x199b8]        # 0x1400431a0
   1400297e8:	mov    rcx,rax
   1400297eb:	xor    edx,edx
   1400297ed:	mov    r8d,0x94
   1400297f3:	call   QWORD PTR [rip+0x1999f]        # 0x140043198
   1400297f9:	mov    rbx,rax
   1400297fc:	test   rax,rax
   1400297ff:	jne    0x14002982d
   140029801:	cmp    DWORD PTR [rip+0x374e0],0x1        # 0x140060ce8
   140029808:	jne    0x14002980f
   14002980a:	call   0x14002cd90
   14002980f:	mov    ecx,0x12
   140029814:	call   0x14002cb50
   140029819:	mov    ecx,0xff
   14002981e:	call   0x14002c120
   140029823:	mov    eax,0xff
   140029828:	jmp    0x140029a5b
   14002982d:	mov    DWORD PTR [rax],0x94
   140029833:	mov    rcx,rax
   140029836:	call   QWORD PTR [rip+0x19c7c]        # 0x1400434b8
   14002983c:	test   eax,eax
   14002983e:	jne    0x14002985e
   140029840:	call   QWORD PTR [rip+0x1995a]        # 0x1400431a0
   140029846:	mov    rcx,rax
   140029849:	mov    r8,rbx
   14002984c:	xor    edx,edx
   14002984e:	call   QWORD PTR [rip+0x1993c]        # 0x140043190
   140029854:	mov    eax,0xff
   140029859:	jmp    0x140029a5b
   14002985e:	mov    r13d,DWORD PTR [rbx+0x10]
   140029862:	mov    esi,DWORD PTR [rbx+0x4]
   140029865:	mov    r12d,DWORD PTR [rbx+0x8]
   140029869:	mov    edi,DWORD PTR [rbx+0xc]
   14002986c:	and    edi,0x7fff
   140029872:	call   QWORD PTR [rip+0x19928]        # 0x1400431a0
   140029878:	mov    rcx,rax
   14002987b:	mov    r8,rbx
   14002987e:	xor    edx,edx
   140029880:	call   QWORD PTR [rip+0x1990a]        # 0x140043190
   140029886:	cmp    r13d,0x2
   14002988a:	je     0x140029890
   14002988c:	bts    edi,0xf
   140029890:	mov    eax,esi
   140029892:	shl    eax,0x8
   140029895:	add    eax,r12d
   140029898:	mov    DWORD PTR [rip+0x37455],r13d        # 0x140060cf4
   14002989f:	mov    DWORD PTR [rip+0x37457],eax        # 0x140060cfc
   1400298a5:	mov    DWORD PTR [rip+0x37455],esi        # 0x140060d00
   1400298ab:	mov    DWORD PTR [rip+0x37452],r12d        # 0x140060d04
   1400298b2:	mov    DWORD PTR [rip+0x37440],edi        # 0x140060cf8
   1400298b8:	cmp    WORD PTR [rip+0xfffffffffffd673f],0x5a4d        # 0x140000000
   1400298c1:	jne    0x140029922
   1400298c3:	movsxd rax,DWORD PTR [rip+0xfffffffffffd6772]        # 0x14000003c
   1400298ca:	lea    rdi,[rip+0xfffffffffffd672f]        # 0x140000000
   1400298d1:	add    rax,rdi
   1400298d4:	cmp    DWORD PTR [rax],0x4550
   1400298da:	je     0x1400298e7
   1400298dc:	xor    ebx,ebx
   1400298de:	mov    DWORD PTR [rsp+0xc0],ebx
   1400298e5:	jmp    0x140029932
   1400298e7:	cmp    WORD PTR [rax+0x18],0x20b
   1400298ed:	je     0x1400298fa
   1400298ef:	xor    ebx,ebx
   1400298f1:	mov    DWORD PTR [rsp+0xc0],ebx
   1400298f8:	jmp    0x140029932
   1400298fa:	cmp    DWORD PTR [rax+0x84],0xe
   140029901:	ja     0x14002990e
   140029903:	xor    ebx,ebx
   140029905:	mov    DWORD PTR [rsp+0xc0],ebx
   14002990c:	jmp    0x140029932
   14002990e:	xor    ebx,ebx
   140029910:	cmp    DWORD PTR [rax+0xf8],ebx
   140029916:	setne  bl
   140029919:	mov    DWORD PTR [rsp+0xc0],ebx
   140029920:	jmp    0x140029932
   140029922:	xor    ebx,ebx
   140029924:	mov    DWORD PTR [rsp+0xc0],ebx
   14002992b:	lea    rdi,[rip+0xfffffffffffd66ce]        # 0x140000000
   140029932:	mov    ecx,0x1
   140029937:	call   0x14002e540
   14002993c:	test   eax,eax
   14002993e:	jne    0x140029962
   140029940:	cmp    DWORD PTR [rip+0x373a1],0x1        # 0x140060ce8
   140029947:	jne    0x14002994e
   140029949:	call   0x14002cd90
   14002994e:	mov    ecx,0x1c
   140029953:	call   0x14002cb50
   140029958:	mov    ecx,0xff
   14002995d:	call   0x14002c120
   140029962:	call   0x14002e420
   140029967:	test   eax,eax
   140029969:	jne    0x14002998d
   14002996b:	cmp    DWORD PTR [rip+0x37376],0x1        # 0x140060ce8
   140029972:	jne    0x140029979
   140029974:	call   0x14002cd90
   140029979:	mov    ecx,0x10
   14002997e:	call   0x14002cb50
   140029983:	mov    ecx,0xff
   140029988:	call   0x14002c120
   14002998d:	call   0x14002dce0
   140029992:	nop
   140029993:	call   0x14002d9b0
   140029998:	test   eax,eax
   14002999a:	jns    0x1400299a6
   14002999c:	mov    ecx,0x1b
   1400299a1:	call   0x14002c0f0
   1400299a6:	call   0x14002d890
   1400299ab:	mov    QWORD PTR [rip+0x39836],rax        # 0x1400631e8
   1400299b2:	call   0x14002d690
   1400299b7:	mov    QWORD PTR [rip+0x37322],rax        # 0x140060ce0
   1400299be:	call   0x14002d420
   1400299c3:	test   eax,eax
   1400299c5:	jns    0x1400299d1
   1400299c7:	mov    ecx,0x8
   1400299cc:	call   0x14002c0f0
   1400299d1:	call   0x14002d0f0
   1400299d6:	test   eax,eax
   1400299d8:	jns    0x1400299e4
   1400299da:	mov    ecx,0x9
   1400299df:	call   0x14002c0f0
   1400299e4:	mov    ecx,0x1
   1400299e9:	call   0x14002c260
   1400299ee:	test   eax,eax
   1400299f0:	je     0x1400299f9
   1400299f2:	mov    ecx,eax
   1400299f4:	call   0x14002c0f0
   1400299f9:	call   0x14002d090
   1400299fe:	test   BYTE PTR [rsp+0x6c],0x1
   140029a03:	je     0x140029a0d
   140029a05:	movzx  r9d,WORD PTR [rsp+0x70]
   140029a0b:	jmp    0x140029a13
   140029a0d:	mov    r9d,0xa
   140029a13:	mov    r8,rax
   140029a16:	xor    edx,edx
   140029a18:	mov    rcx,rdi
   140029a1b:	call   0x1400410e8
   140029a20:	mov    edi,eax
   140029a22:	mov    DWORD PTR [rsp+0x20],eax
   140029a26:	test   ebx,ebx
   140029a28:	jne    0x140029a31
   140029a2a:	mov    ecx,eax
   140029a2c:	call   0x14002c470
   140029a31:	call   0x14002c490
   140029a36:	jmp    0x140029a52
   140029a38:	mov    edi,eax
   140029a3a:	cmp    DWORD PTR [rsp+0xc0],0x0
   140029a42:	jne    0x140029a4c
   140029a44:	mov    ecx,eax
   140029a46:	call   0x14002c480
   140029a4b:	int3   
   140029a4c:	call   0x14002c4a0
   140029a51:	nop
   140029a52:	mov    eax,edi
   140029a54:	jmp    0x140029a5b
   140029a56:	mov    eax,0xff
   140029a5b:	lea    r11,[rsp+0xa0]
   140029a63:	mov    rbx,QWORD PTR [r11+0x28]
   140029a67:	mov    rsi,QWORD PTR [r11+0x30]
   140029a6b:	mov    rsp,r11
   140029a6e:	pop    r13
   140029a70:	pop    r12
   140029a72:	pop    rdi
   140029a73:	ret    
   140029a74:	int3   
   140029a75:	int3   
   140029a76:	int3   
   140029a77:	int3   
   140029a78:	int3   
   140029a79:	int3   
   140029a7a:	int3   
   140029a7b:	int3   
   140029a7c:	int3   
   140029a7d:	int3   
   140029a7e:	int3   
   140029a7f:	int3   
   140029a80:	rex push rbp
   140029a82:	sub    rsp,0x20
   140029a86:	mov    rbp,rdx
   140029a89:	mov    rax,QWORD PTR [rcx]
   140029a8c:	mov    rdx,rcx
   140029a8f:	mov    ecx,DWORD PTR [rax]
   140029a91:	call   0x14002ce80
   140029a96:	add    rsp,0x20
   140029a9a:	pop    rbp
   140029a9b:	ret    
   140029a9c:	int3   
   140029a9d:	int3   
   140029a9e:	int3   
   140029a9f:	int3   
   140029aa0:	sub    rsp,0x28
   140029aa4:	call   0x14002e5a0
   140029aa9:	add    rsp,0x28
   140029aad:	jmp    0x1400297c0
   140029ab2:	int3   
   140029ab3:	int3   
   140029ab4:	int3   
   140029ab5:	int3   
   140029ab6:	int3   
   140029ab7:	int3   
   140029ab8:	int3   
   140029ab9:	int3   
   140029aba:	int3   
   140029abb:	int3   
   140029abc:	int3   
   140029abd:	int3   
   140029abe:	int3   
   140029abf:	int3   
   140029ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140029ac5:	push   rdi
   140029ac6:	sub    rsp,0x20
   140029aca:	lea    rax,[rip+0x1e927]        # 0x1400483f8
   140029ad1:	mov    ebx,edx
   140029ad3:	mov    rdi,rcx
   140029ad6:	mov    QWORD PTR [rcx],rax
   140029ad9:	call   0x14002e660
   140029ade:	test   bl,0x1
   140029ae1:	je     0x140029aeb
   140029ae3:	mov    rcx,rdi
   140029ae6:	call   0x14001490c
   140029aeb:	mov    rax,rdi
   140029aee:	mov    rbx,QWORD PTR [rsp+0x30]
   140029af3:	add    rsp,0x20
   140029af7:	pop    rdi
   140029af8:	ret    
   140029af9:	int3   
   140029afa:	int3   
   140029afb:	int3   
   140029afc:	int3   
   140029afd:	int3   
   140029afe:	int3   
   140029aff:	int3   
   140029b00:	lea    r8,[rcx+0x11]
   140029b04:	add    rdx,0x11
   140029b08:	sub    r8,rdx
   140029b0b:	xchg   ax,ax
   140029b0d:	data16 xchg ax,ax
   140029b10:	movzx  ecx,BYTE PTR [rdx]
   140029b13:	movzx  eax,BYTE PTR [rdx+r8*1]
   140029b18:	sub    ecx,eax
   140029b1a:	jne    0x140029b24
   140029b1c:	add    rdx,0x1
   140029b20:	test   eax,eax
   140029b22:	jne    0x140029b10
   140029b24:	test   ecx,ecx
   140029b26:	sete   al
   140029b29:	ret    
   140029b2a:	int3   
   140029b2b:	int3   
   140029b2c:	int3   
   140029b2d:	int3   
   140029b2e:	int3   
   140029b2f:	int3   
   140029b30:	int3   
   140029b31:	int3   
   140029b32:	int3   
   140029b33:	int3   
   140029b34:	int3   
   140029b35:	int3   
   140029b36:	data16 data16 xchg ax,ax
   140029b3a:	data16 data16 xchg ax,ax
   140029b3e:	xchg   ax,ax
   140029b40:	cmp    rcx,QWORD PTR [rip+0x31439]        # 0x14005af80
   140029b47:	jne    0x140029b5a
   140029b49:	rol    rcx,0x10
   140029b4d:	test   cx,0xffff
   140029b52:	jne    0x140029b56
   140029b54:	repz ret 
   140029b56:	ror    rcx,0x10
   140029b5a:	jmp    0x14002e700
   140029b5f:	int3   
   140029b60:	sub    rsp,0x38
   140029b64:	test   r9,r9
   140029b67:	mov    rax,r8
   140029b6a:	je     0x140029be0
   140029b6c:	test   rcx,rcx
   140029b6f:	jne    0x140029b9e
   140029b71:	call   0x14002bca0
   140029b76:	xor    r9d,r9d
   140029b79:	xor    r8d,r8d
   140029b7c:	xor    edx,edx
   140029b7e:	xor    ecx,ecx
   140029b80:	mov    QWORD PTR [rsp+0x20],0x0
   140029b89:	mov    DWORD PTR [rax],0x16
   140029b8f:	call   0x14002e900
   140029b94:	mov    eax,0x16
   140029b99:	add    rsp,0x38
   140029b9d:	ret    
   140029b9e:	test   rax,rax
   140029ba1:	je     0x140029b71
   140029ba3:	cmp    rdx,r9
   140029ba6:	jae    0x140029bd5
   140029ba8:	call   0x14002bca0
   140029bad:	xor    r9d,r9d
   140029bb0:	xor    r8d,r8d
   140029bb3:	xor    edx,edx
   140029bb5:	xor    ecx,ecx
   140029bb7:	mov    QWORD PTR [rsp+0x20],0x0
   140029bc0:	mov    DWORD PTR [rax],0x22
   140029bc6:	call   0x14002e900
   140029bcb:	mov    eax,0x22
   140029bd0:	add    rsp,0x38
   140029bd4:	ret    
   140029bd5:	mov    r8,r9
   140029bd8:	mov    rdx,rax
   140029bdb:	call   0x14002b7a0
   140029be0:	xor    eax,eax
   140029be2:	add    rsp,0x38
   140029be6:	ret    
   140029be7:	int3   
   140029be8:	int3   
   140029be9:	int3   
   140029bea:	int3   
   140029beb:	int3   
   140029bec:	int3   
   140029bed:	int3   
   140029bee:	int3   
   140029bef:	int3   
   140029bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140029bf5:	mov    QWORD PTR [rsp+0x10],rsi
   140029bfa:	push   rdi
   140029bfb:	sub    rsp,0x30
   140029bff:	test   r9,r9
   140029c02:	mov    rbx,r9
   140029c05:	mov    rsi,r8
   140029c08:	mov    rdi,rdx
   140029c0b:	je     0x140029c5f
   140029c0d:	test   rcx,rcx
   140029c10:	jne    0x140029c4a
   140029c12:	call   0x14002bca0
   140029c17:	xor    r9d,r9d
   140029c1a:	xor    r8d,r8d
   140029c1d:	xor    edx,edx
   140029c1f:	xor    ecx,ecx
   140029c21:	mov    QWORD PTR [rsp+0x20],0x0
   140029c2a:	mov    DWORD PTR [rax],0x16
   140029c30:	call   0x14002e900
   140029c35:	mov    eax,0x16
   140029c3a:	mov    rbx,QWORD PTR [rsp+0x40]
   140029c3f:	mov    rsi,QWORD PTR [rsp+0x48]
   140029c44:	add    rsp,0x30
   140029c48:	pop    rdi
   140029c49:	ret    
   140029c4a:	test   r8,r8
   140029c4d:	je     0x140029c71
   140029c4f:	cmp    rdx,rbx
   140029c52:	jb     0x140029c71
   140029c54:	mov    r8,rbx
   140029c57:	mov    rdx,rsi
   140029c5a:	call   0x14002b7a0
   140029c5f:	xor    eax,eax
   140029c61:	mov    rbx,QWORD PTR [rsp+0x40]
   140029c66:	mov    rsi,QWORD PTR [rsp+0x48]
   140029c6b:	add    rsp,0x30
   140029c6f:	pop    rdi
   140029c70:	ret    
   140029c71:	mov    r8,rdx
   140029c74:	xor    edx,edx
   140029c76:	call   0x14002ac20
   140029c7b:	test   rsi,rsi
   140029c7e:	je     0x140029c12
   140029c80:	cmp    rdi,rbx
   140029c83:	jae    0x140029c35
   140029c85:	call   0x14002bca0
   140029c8a:	xor    r9d,r9d
   140029c8d:	xor    r8d,r8d
   140029c90:	xor    edx,edx
   140029c92:	xor    ecx,ecx
   140029c94:	mov    QWORD PTR [rsp+0x20],0x0
   140029c9d:	mov    DWORD PTR [rax],0x22
   140029ca3:	call   0x14002e900
   140029ca8:	mov    rbx,QWORD PTR [rsp+0x40]
   140029cad:	mov    rsi,QWORD PTR [rsp+0x48]
   140029cb2:	mov    eax,0x22
   140029cb7:	add    rsp,0x30
   140029cbb:	pop    rdi
   140029cbc:	ret    
   140029cbd:	int3   
   140029cbe:	int3   
   140029cbf:	int3   
   140029cc0:	sub    rsp,0x68
   140029cc4:	test   rcx,rcx
   140029cc7:	jne    0x140029cf2
   140029cc9:	call   0x14002bca0
   140029cce:	xor    r9d,r9d
   140029cd1:	xor    r8d,r8d
   140029cd4:	mov    DWORD PTR [rax],0x16
   140029cda:	xor    eax,eax
   140029cdc:	xor    edx,edx
   140029cde:	xor    ecx,ecx
   140029ce0:	mov    QWORD PTR [rsp+0x20],rax
   140029ce5:	call   0x14002e900
   140029cea:	or     eax,0xffffffff
   140029ced:	add    rsp,0x68
   140029cf1:	ret    
   140029cf2:	xor    eax,eax
   140029cf4:	mov    r9,rdx
   140029cf7:	mov    rdx,rcx
   140029cfa:	lea    rcx,[rsp+0x30]
   140029cff:	xor    r8d,r8d
   140029d02:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   140029d0a:	mov    DWORD PTR [rsp+0x48],0x42
   140029d12:	mov    QWORD PTR [rsp+0x40],rax
   140029d17:	mov    QWORD PTR [rsp+0x30],rax
   140029d1c:	call   0x14002eca0
   140029d21:	add    rsp,0x68
   140029d25:	ret    
   140029d26:	int3   
   140029d27:	int3   
   140029d28:	int3   
   140029d29:	int3   
   140029d2a:	int3   
   140029d2b:	int3   
   140029d2c:	int3   
   140029d2d:	int3   
   140029d2e:	int3   
   140029d2f:	int3   
   140029d30:	mov    QWORD PTR [rsp+0x10],rbx
   140029d35:	push   rsi
   140029d36:	sub    rsp,0x60
   140029d3a:	test   r9,r9
   140029d3d:	mov    r10,r9
   140029d40:	mov    rsi,r8
   140029d43:	mov    rbx,rdx
   140029d46:	mov    r11,rcx
   140029d49:	jne    0x140029d7a
   140029d4b:	call   0x14002bca0
   140029d50:	xor    r9d,r9d
   140029d53:	xor    r8d,r8d
   140029d56:	mov    DWORD PTR [rax],0x16
   140029d5c:	xor    eax,eax
   140029d5e:	xor    edx,edx
   140029d60:	xor    ecx,ecx
   140029d62:	mov    QWORD PTR [rsp+0x20],rax
   140029d67:	call   0x14002e900
   140029d6c:	or     eax,0xffffffff
   140029d6f:	mov    rbx,QWORD PTR [rsp+0x78]
   140029d74:	add    rsp,0x60
   140029d78:	pop    rsi
   140029d79:	ret    
   140029d7a:	test   r8,r8
   140029d7d:	je     0x140029d84
   140029d7f:	test   rdx,rdx
   140029d82:	je     0x140029d4b
   140029d84:	cmp    r8,0x3fffffff
   140029d8b:	mov    QWORD PTR [rsp+0x70],rdi
   140029d90:	mov    DWORD PTR [rsp+0x48],0x42
   140029d98:	mov    QWORD PTR [rsp+0x40],rdx
   140029d9d:	mov    QWORD PTR [rsp+0x30],rdx
   140029da2:	jbe    0x140029dae
   140029da4:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   140029dac:	jmp    0x140029db6
   140029dae:	lea    eax,[r8+r8*1]
   140029db2:	mov    DWORD PTR [rsp+0x38],eax
   140029db6:	mov    r9,QWORD PTR [rsp+0x98]
   140029dbe:	mov    r8,QWORD PTR [rsp+0x90]
   140029dc6:	lea    rcx,[rsp+0x30]
   140029dcb:	mov    rdx,r10
   140029dce:	call   r11
   140029dd1:	test   rbx,rbx
   140029dd4:	mov    edi,eax
   140029dd6:	je     0x140029e67
   140029ddc:	test   eax,eax
   140029dde:	js     0x140029e54
   140029de0:	sub    DWORD PTR [rsp+0x38],0x1
   140029de5:	js     0x140029dff
   140029de7:	mov    rax,QWORD PTR [rsp+0x30]
   140029dec:	mov    BYTE PTR [rax],0x0
   140029def:	mov    rax,QWORD PTR [rsp+0x30]
   140029df4:	add    rax,0x1
   140029df8:	mov    QWORD PTR [rsp+0x30],rax
   140029dfd:	jmp    0x140029e15
   140029dff:	lea    rdx,[rsp+0x30]
   140029e04:	xor    ecx,ecx
   140029e06:	call   0x14002ea10
   140029e0b:	cmp    eax,0xffffffff
   140029e0e:	je     0x140029e54
   140029e10:	mov    rax,QWORD PTR [rsp+0x30]
   140029e15:	sub    DWORD PTR [rsp+0x38],0x1
   140029e1a:	js     0x140029e31
   140029e1c:	mov    BYTE PTR [rax],0x0
   140029e1f:	mov    eax,edi
   140029e21:	mov    rdi,QWORD PTR [rsp+0x70]
   140029e26:	mov    rbx,QWORD PTR [rsp+0x78]
   140029e2b:	add    rsp,0x60
   140029e2f:	pop    rsi
   140029e30:	ret    
   140029e31:	lea    rdx,[rsp+0x30]
   140029e36:	xor    ecx,ecx
   140029e38:	call   0x14002ea10
   140029e3d:	cmp    eax,0xffffffff
   140029e40:	je     0x140029e54
   140029e42:	mov    eax,edi
   140029e44:	mov    rdi,QWORD PTR [rsp+0x70]
   140029e49:	mov    rbx,QWORD PTR [rsp+0x78]
   140029e4e:	add    rsp,0x60
   140029e52:	pop    rsi
   140029e53:	ret    
   140029e54:	xor    eax,eax
   140029e56:	mov    WORD PTR [rbx+rsi*2-0x2],0x0
   140029e5d:	cmp    DWORD PTR [rsp+0x38],eax
   140029e61:	setge  al
   140029e64:	add    eax,0xfffffffe
   140029e67:	mov    rdi,QWORD PTR [rsp+0x70]
   140029e6c:	mov    rbx,QWORD PTR [rsp+0x78]
   140029e71:	add    rsp,0x60
   140029e75:	pop    rsi
   140029e76:	ret    
   140029e77:	int3   
   140029e78:	int3   
   140029e79:	int3   
   140029e7a:	int3   
   140029e7b:	int3   
   140029e7c:	int3   
   140029e7d:	int3   
   140029e7e:	int3   
   140029e7f:	int3   
   140029e80:	rex push rbx
   140029e82:	sub    rsp,0x30
   140029e86:	test   r8,r8
   140029e89:	mov    rbx,rcx
   140029e8c:	je     0x140029ed7
   140029e8e:	test   rcx,rcx
   140029e91:	je     0x140029ed7
   140029e93:	test   rdx,rdx
   140029e96:	je     0x140029ed7
   140029e98:	mov    rax,QWORD PTR [rsp+0x60]
   140029e9d:	mov    QWORD PTR [rsp+0x28],rax
   140029ea2:	mov    QWORD PTR [rsp+0x20],r9
   140029ea7:	mov    r9,r8
   140029eaa:	mov    r8,rdx
   140029ead:	mov    rdx,rcx
   140029eb0:	lea    rcx,[rip+0x5d29]        # 0x14002fbe0
   140029eb7:	call   0x140029d30
   140029ebc:	test   eax,eax
   140029ebe:	jns    0x140029ec5
   140029ec0:	mov    WORD PTR [rbx],0x0
   140029ec5:	cmp    eax,0xfffffffe
   140029ec8:	jne    0x140029efd
   140029eca:	call   0x14002bca0
   140029ecf:	mov    DWORD PTR [rax],0x22
   140029ed5:	jmp    0x140029ee2
   140029ed7:	call   0x14002bca0
   140029edc:	mov    DWORD PTR [rax],0x16
   140029ee2:	xor    r9d,r9d
   140029ee5:	xor    r8d,r8d
   140029ee8:	xor    edx,edx
   140029eea:	xor    ecx,ecx
   140029eec:	mov    QWORD PTR [rsp+0x20],0x0
   140029ef5:	call   0x14002e900
   140029efa:	or     eax,0xffffffff
   140029efd:	add    rsp,0x30
   140029f01:	pop    rbx
   140029f02:	ret    
   140029f03:	int3   
   140029f04:	int3   
   140029f05:	int3   
   140029f06:	int3   
   140029f07:	int3   
   140029f08:	int3   
   140029f09:	int3   
   140029f0a:	int3   
   140029f0b:	int3   
   140029f0c:	int3   
   140029f0d:	int3   
   140029f0e:	int3   
   140029f0f:	int3   
   140029f10:	rex push rbx
   140029f12:	sub    rsp,0x30
   140029f16:	test   r8,r8
   140029f19:	mov    rbx,rcx
   140029f1c:	je     0x140029f66
   140029f1e:	test   rcx,rcx
   140029f21:	je     0x140029f66
   140029f23:	test   rdx,rdx
   140029f26:	je     0x140029f66
   140029f28:	mov    QWORD PTR [rsp+0x28],r9
   140029f2d:	mov    r9,r8
   140029f30:	mov    r8,rdx
   140029f33:	mov    rdx,rcx
   140029f36:	lea    rcx,[rip+0x5ca3]        # 0x14002fbe0
   140029f3d:	mov    QWORD PTR [rsp+0x20],0x0
   140029f46:	call   0x140029d30
   140029f4b:	test   eax,eax
   140029f4d:	jns    0x140029f54
   140029f4f:	mov    WORD PTR [rbx],0x0
   140029f54:	cmp    eax,0xfffffffe
   140029f57:	jne    0x140029f8c
   140029f59:	call   0x14002bca0
   140029f5e:	mov    DWORD PTR [rax],0x22
   140029f64:	jmp    0x140029f71
   140029f66:	call   0x14002bca0
   140029f6b:	mov    DWORD PTR [rax],0x16
   140029f71:	xor    r9d,r9d
   140029f74:	xor    r8d,r8d
   140029f77:	xor    edx,edx
   140029f79:	xor    ecx,ecx
   140029f7b:	mov    QWORD PTR [rsp+0x20],0x0
   140029f84:	call   0x14002e900
   140029f89:	or     eax,0xffffffff
   140029f8c:	add    rsp,0x30
   140029f90:	pop    rbx
   140029f91:	ret    
   140029f92:	int3   
   140029f93:	int3   
   140029f94:	int3   
   140029f95:	int3   
   140029f96:	int3   
   140029f97:	int3   
   140029f98:	int3   
   140029f99:	int3   
   140029f9a:	int3   
   140029f9b:	int3   
   140029f9c:	int3   
   140029f9d:	int3   
   140029f9e:	int3   
   140029f9f:	int3   
   140029fa0:	mov    QWORD PTR [rsp+0x10],rbx
   140029fa5:	mov    QWORD PTR [rsp+0x18],rbp
   140029faa:	mov    QWORD PTR [rsp+0x20],rsi
   140029faf:	push   rdi
   140029fb0:	sub    rsp,0x30
   140029fb4:	test   r9,r9
   140029fb7:	mov    rbp,r9
   140029fba:	mov    rsi,r8
   140029fbd:	mov    rdi,rdx
   140029fc0:	mov    rbx,rcx
   140029fc3:	jne    0x140029ff0
   140029fc5:	call   0x14002bca0
   140029fca:	xor    r9d,r9d
   140029fcd:	xor    r8d,r8d
   140029fd0:	xor    edx,edx
   140029fd2:	xor    ecx,ecx
   140029fd4:	mov    QWORD PTR [rsp+0x20],0x0
   140029fdd:	mov    DWORD PTR [rax],0x16
   140029fe3:	call   0x14002e900
   140029fe8:	or     eax,0xffffffff
   140029feb:	jmp    0x14002a0fa
   140029ff0:	test   r8,r8
   140029ff3:	jne    0x14002a006
   140029ff5:	test   rcx,rcx
   140029ff8:	jne    0x14002a00b
   140029ffa:	test   rdx,rdx
   140029ffd:	jne    0x140029fc5
   140029fff:	xor    eax,eax
   14002a001:	jmp    0x14002a0fa
   14002a006:	test   rcx,rcx
   14002a009:	je     0x140029fc5
   14002a00b:	test   rdx,rdx
   14002a00e:	je     0x140029fc5
   14002a010:	cmp    rdx,r8
   14002a013:	mov    QWORD PTR [rsp+0x40],r12
   14002a018:	jbe    0x14002a06a
   14002a01a:	call   0x14002bca0
   14002a01f:	lea    r8,[rsi+0x1]
   14002a023:	lea    rcx,[rip+0x5bb6]        # 0x14002fbe0
   14002a02a:	mov    edi,DWORD PTR [rax]
   14002a02c:	mov    rax,QWORD PTR [rsp+0x68]
   14002a031:	mov    r9,rbp
   14002a034:	mov    QWORD PTR [rsp+0x28],rax
   14002a039:	mov    rax,QWORD PTR [rsp+0x60]
   14002a03e:	mov    rdx,rbx
   14002a041:	mov    QWORD PTR [rsp+0x20],rax
   14002a046:	call   0x140029d30
   14002a04b:	cmp    eax,0xfffffffe
   14002a04e:	jne    0x14002a0c1
   14002a050:	call   0x14002bca0
   14002a055:	cmp    DWORD PTR [rax],0x22
   14002a058:	jne    0x14002a0f2
   14002a05e:	call   0x14002bca0
   14002a063:	mov    DWORD PTR [rax],edi
   14002a065:	jmp    0x14002a0f2
   14002a06a:	call   0x14002bca0
   14002a06f:	lea    rcx,[rip+0x5b6a]        # 0x14002fbe0
   14002a076:	mov    r9,rbp
   14002a079:	mov    r12d,DWORD PTR [rax]
   14002a07c:	mov    rax,QWORD PTR [rsp+0x68]
   14002a081:	mov    r8,rdi
   14002a084:	mov    QWORD PTR [rsp+0x28],rax
   14002a089:	mov    rax,QWORD PTR [rsp+0x60]
   14002a08e:	mov    rdx,rbx
   14002a091:	mov    QWORD PTR [rsp+0x20],rax
   14002a096:	call   0x140029d30
   14002a09b:	mov    WORD PTR [rbx+rdi*2-0x2],0x0
   14002a0a2:	cmp    eax,0xfffffffe
   14002a0a5:	jne    0x14002a0c1
   14002a0a7:	cmp    rsi,0xffffffffffffffff
   14002a0ab:	jne    0x14002a0c5
   14002a0ad:	call   0x14002bca0
   14002a0b2:	cmp    DWORD PTR [rax],0x22
   14002a0b5:	jne    0x14002a0f2
   14002a0b7:	call   0x14002bca0
   14002a0bc:	mov    DWORD PTR [rax],r12d
   14002a0bf:	jmp    0x14002a0f2
   14002a0c1:	test   eax,eax
   14002a0c3:	jns    0x14002a0f5
   14002a0c5:	cmp    eax,0xfffffffe
   14002a0c8:	mov    WORD PTR [rbx],0x0
   14002a0cd:	jne    0x14002a0f2
   14002a0cf:	call   0x14002bca0
   14002a0d4:	xor    r9d,r9d
   14002a0d7:	xor    r8d,r8d
   14002a0da:	xor    edx,edx
   14002a0dc:	xor    ecx,ecx
   14002a0de:	mov    QWORD PTR [rsp+0x20],0x0
   14002a0e7:	mov    DWORD PTR [rax],0x22
   14002a0ed:	call   0x14002e900
   14002a0f2:	or     eax,0xffffffff
   14002a0f5:	mov    r12,QWORD PTR [rsp+0x40]
   14002a0fa:	mov    rbx,QWORD PTR [rsp+0x48]
   14002a0ff:	mov    rbp,QWORD PTR [rsp+0x50]
   14002a104:	mov    rsi,QWORD PTR [rsp+0x58]
   14002a109:	add    rsp,0x30
   14002a10d:	pop    rdi
   14002a10e:	ret    
   14002a10f:	int3   
   14002a110:	rex push rbx
   14002a112:	sub    rsp,0x20
   14002a116:	cmp    rcx,0xffffffffffffffe0
   14002a11a:	mov    rbx,rcx
   14002a11d:	ja     0x14002a1be
   14002a123:	mov    QWORD PTR [rsp+0x30],rsi
   14002a128:	test   rcx,rcx
   14002a12b:	mov    esi,0x1
   14002a130:	cmovne rsi,rcx
   14002a134:	mov    QWORD PTR [rsp+0x38],rdi
   14002a139:	data16 xchg ax,ax
   14002a13c:	data16 data16 xchg ax,ax
   14002a140:	mov    rcx,QWORD PTR [rip+0x37151]        # 0x140061298
   14002a147:	test   rcx,rcx
   14002a14a:	jne    0x14002a16c
   14002a14c:	call   0x14002cd90
   14002a151:	mov    ecx,0x1e
   14002a156:	call   0x14002cb50
   14002a15b:	mov    ecx,0xff
   14002a160:	call   0x14002c120
   14002a165:	mov    rcx,QWORD PTR [rip+0x3712c]        # 0x140061298
   14002a16c:	mov    r8,rsi
   14002a16f:	xor    edx,edx
   14002a171:	call   QWORD PTR [rip+0x19021]        # 0x140043198
   14002a177:	test   rax,rax
   14002a17a:	mov    rdi,rax
   14002a17d:	jne    0x14002a1ab
   14002a17f:	cmp    DWORD PTR [rip+0x376ab],eax        # 0x140061830
   14002a185:	je     0x14002a195
   14002a187:	mov    rcx,rbx
   14002a18a:	call   0x140030bb0
   14002a18f:	test   eax,eax
   14002a191:	jne    0x14002a140
   14002a193:	jmp    0x14002a1a0
   14002a195:	call   0x14002bca0
   14002a19a:	mov    DWORD PTR [rax],0xc
   14002a1a0:	call   0x14002bca0
   14002a1a5:	mov    DWORD PTR [rax],0xc
   14002a1ab:	mov    rsi,QWORD PTR [rsp+0x30]
   14002a1b0:	mov    rax,rdi
   14002a1b3:	mov    rdi,QWORD PTR [rsp+0x38]
   14002a1b8:	add    rsp,0x20
   14002a1bc:	pop    rbx
   14002a1bd:	ret    
   14002a1be:	call   0x140030bb0
   14002a1c3:	call   0x14002bca0
   14002a1c8:	mov    DWORD PTR [rax],0xc
   14002a1ce:	xor    eax,eax
   14002a1d0:	add    rsp,0x20
   14002a1d4:	pop    rbx
   14002a1d5:	ret    
   14002a1d6:	int3   
   14002a1d7:	int3   
   14002a1d8:	int3   
   14002a1d9:	int3   
   14002a1da:	int3   
   14002a1db:	int3   
   14002a1dc:	int3   
   14002a1dd:	int3   
   14002a1de:	int3   
   14002a1df:	int3   
   14002a1e0:	rex push rbp
   14002a1e2:	push   r12
   14002a1e4:	push   r13
   14002a1e6:	push   r14
   14002a1e8:	push   r15
   14002a1ea:	sub    rsp,0xb0
   14002a1f1:	lea    rbp,[rsp+0x30]
   14002a1f6:	mov    QWORD PTR [rbp+0xb0],rbx
   14002a1fd:	mov    QWORD PTR [rbp+0xb8],rsi
   14002a204:	mov    QWORD PTR [rbp+0xc0],rdi
   14002a20b:	mov    rax,QWORD PTR [rip+0x30d6e]        # 0x14005af80
   14002a212:	xor    rax,rbp
   14002a215:	mov    QWORD PTR [rbp+0x70],rax
   14002a219:	mov    eax,DWORD PTR [rsp]
   14002a21c:	xor    ebx,ebx
   14002a21e:	mov    DWORD PTR [rbp+0x0],ebx
   14002a221:	sub    rsp,0x10
   14002a225:	lea    r13,[rsp+0x30]
   14002a22a:	mov    eax,DWORD PTR [r13+0x0]
   14002a22e:	lea    r8d,[rbx+0x30]
   14002a232:	lea    rdx,[rbp+0x10]
   14002a236:	mov    rcx,r13
   14002a239:	call   QWORD PTR [rip+0x18f89]        # 0x1400431c8
   14002a23f:	test   rax,rax
   14002a242:	je     0x14002a34c
   14002a248:	mov    r14,QWORD PTR [rbp+0x18]
   14002a24c:	lea    rcx,[rbp+0x40]
   14002a250:	call   QWORD PTR [rip+0x18f6a]        # 0x1400431c0
   14002a256:	mov    edi,DWORD PTR [rbp+0x44]
   14002a259:	lea    rcx,[rbp+0x0]
   14002a25d:	call   0x14002c1c0
   14002a262:	test   eax,eax
   14002a264:	je     0x14002a27a
   14002a266:	xor    r9d,r9d
   14002a269:	xor    r8d,r8d
   14002a26c:	xor    edx,edx
   14002a26e:	xor    ecx,ecx
   14002a270:	mov    QWORD PTR [rsp+0x20],rbx
   14002a275:	call   0x14002e860
   14002a27a:	mov    ecx,DWORD PTR [rbp+0x0]
   14002a27d:	cmp    ecx,0x2
   14002a280:	jne    0x14002a2c2
   14002a282:	lea    rcx,[rip+0x1e18f]        # 0x140048418
   14002a289:	call   QWORD PTR [rip+0x191b1]        # 0x140043440
   14002a28f:	test   rax,rax
   14002a292:	je     0x14002a2bf
   14002a294:	lea    rdx,[rip+0x1e165]        # 0x140048400
   14002a29b:	mov    rcx,rax
   14002a29e:	call   QWORD PTR [rip+0x1920c]        # 0x1400434b0
   14002a2a4:	test   rax,rax
   14002a2a7:	je     0x14002a2bf
   14002a2a9:	lea    rcx,[rbp+0x4]
   14002a2ad:	mov    DWORD PTR [rbp+0x4],ebx
   14002a2b0:	call   rax
   14002a2b2:	cmp    eax,0x1
   14002a2b5:	jne    0x14002a2bf
   14002a2b7:	mov    eax,DWORD PTR [rbp+0x4]
   14002a2ba:	test   eax,eax
   14002a2bc:	cmovne ebx,eax
   14002a2bf:	mov    ecx,DWORD PTR [rbp+0x0]
   14002a2c2:	mov    r15d,0x1
   14002a2c8:	lea    r8d,[rdi-0x1]
   14002a2cc:	lea    edx,[rbx+rdi*1-0x1]
   14002a2d0:	cmp    ecx,r15d
   14002a2d3:	mov    eax,r8d
   14002a2d6:	mov    esi,0x104
   14002a2db:	not    eax
   14002a2dd:	cmove  esi,r15d
   14002a2e1:	and    edx,eax
   14002a2e3:	je     0x14002a2e7
   14002a2e5:	add    edx,edi
   14002a2e7:	lea    eax,[rdi+rdi*1]
   14002a2ea:	mov    ebx,r8d
   14002a2ed:	cmp    edx,eax
   14002a2ef:	not    rbx
   14002a2f2:	cmovb  edx,eax
   14002a2f5:	and    rbx,r13
   14002a2f8:	mov    eax,0x11
   14002a2fd:	mov    r12d,edx
   14002a300:	sub    rbx,r12
   14002a303:	cmp    ecx,r15d
   14002a306:	cmove  edi,eax
   14002a309:	mov    eax,edi
   14002a30b:	add    rax,r14
   14002a30e:	cmp    rbx,rax
   14002a311:	jb     0x14002a34c
   14002a313:	mov    r9d,0x4
   14002a319:	mov    r8d,0x1000
   14002a31f:	mov    rdx,r12
   14002a322:	mov    rcx,rbx
   14002a325:	call   QWORD PTR [rip+0x18e8d]        # 0x1400431b8
   14002a32b:	test   rax,rax
   14002a32e:	je     0x14002a34c
   14002a330:	lea    r9,[rbp+0x8]
   14002a334:	mov    r8d,esi
   14002a337:	mov    rdx,r12
   14002a33a:	mov    rcx,rbx
   14002a33d:	call   QWORD PTR [rip+0x18e6d]        # 0x1400431b0
   14002a343:	test   eax,eax
   14002a345:	je     0x14002a34c
   14002a347:	mov    eax,r15d
   14002a34a:	jmp    0x14002a34e
   14002a34c:	xor    eax,eax
   14002a34e:	mov    rcx,QWORD PTR [rbp+0x70]
   14002a352:	xor    rcx,rbp
   14002a355:	call   0x140029b40
   14002a35a:	mov    rbx,QWORD PTR [rbp+0xb0]
   14002a361:	mov    rsi,QWORD PTR [rbp+0xb8]
   14002a368:	mov    rdi,QWORD PTR [rbp+0xc0]
   14002a36f:	lea    rsp,[rbp+0x80]
   14002a376:	pop    r15
   14002a378:	pop    r14
   14002a37a:	pop    r13
   14002a37c:	pop    r12
   14002a37e:	pop    rbp
   14002a37f:	ret    
   14002a380:	sub    rsp,0x28
   14002a384:	test   rcx,rcx
   14002a387:	je     0x14002a3c0
   14002a389:	mov    r8,rcx
   14002a38c:	mov    rcx,QWORD PTR [rip+0x36f05]        # 0x140061298
   14002a393:	xor    edx,edx
   14002a395:	call   QWORD PTR [rip+0x18df5]        # 0x140043190
   14002a39b:	test   eax,eax
   14002a39d:	jne    0x14002a3c0
   14002a39f:	mov    QWORD PTR [rsp+0x20],rbx
   14002a3a4:	call   0x14002bca0
   14002a3a9:	mov    rbx,rax
   14002a3ac:	call   QWORD PTR [rip+0x19136]        # 0x1400434e8
   14002a3b2:	mov    ecx,eax
   14002a3b4:	call   0x14002bc50
   14002a3b9:	mov    DWORD PTR [rbx],eax
   14002a3bb:	mov    rbx,QWORD PTR [rsp+0x20]
   14002a3c0:	add    rsp,0x28
   14002a3c4:	ret    
   14002a3c5:	int3   
   14002a3c6:	int3   
   14002a3c7:	int3   
   14002a3c8:	int3   
   14002a3c9:	int3   
   14002a3ca:	int3   
   14002a3cb:	int3   
   14002a3cc:	int3   
   14002a3cd:	int3   
   14002a3ce:	int3   
   14002a3cf:	int3   
   14002a3d0:	mov    r8,rcx
   14002a3d3:	movzx  eax,WORD PTR [rcx]
   14002a3d6:	add    rcx,0x2
   14002a3da:	test   ax,ax
   14002a3dd:	jne    0x14002a3d3
   14002a3df:	nop
   14002a3e0:	sub    rcx,0x2
   14002a3e4:	cmp    rcx,r8
   14002a3e7:	je     0x14002a3f2
   14002a3e9:	cmp    WORD PTR [rcx],dx
   14002a3ec:	jne    0x14002a3e0
   14002a3ee:	mov    rax,rcx
   14002a3f1:	ret    
   14002a3f2:	cmp    WORD PTR [rcx],dx
   14002a3f5:	jne    0x14002a3fb
   14002a3f7:	mov    rax,rcx
   14002a3fa:	ret    
   14002a3fb:	xor    eax,eax
   14002a3fd:	ret    
   14002a3fe:	int3   
   14002a3ff:	int3   
   14002a400:	rex push rbp
   14002a402:	push   r12
   14002a404:	push   r13
   14002a406:	sub    rsp,0x50
   14002a40a:	lea    rbp,[rsp+0x40]
   14002a40f:	mov    QWORD PTR [rbp+0x30],rbx
   14002a413:	mov    QWORD PTR [rbp+0x38],rsi
   14002a417:	mov    QWORD PTR [rbp+0x40],rdi
   14002a41b:	mov    rax,QWORD PTR [rip+0x30b5e]        # 0x14005af80
   14002a422:	xor    rax,rbp
   14002a425:	mov    QWORD PTR [rbp+0x0],rax
   14002a429:	test   rcx,rcx
   14002a42c:	mov    r12,r8
   14002a42f:	mov    rsi,rdx
   14002a432:	mov    rbx,rcx
   14002a435:	je     0x14002a446
   14002a437:	call   0x140031fc0
   14002a43c:	cmp    rax,rsi
   14002a43f:	jb     0x14002a46f
   14002a441:	mov    WORD PTR [rbx],0x0
   14002a446:	call   0x14002bca0
   14002a44b:	xor    edi,edi
   14002a44d:	xor    r9d,r9d
   14002a450:	xor    r8d,r8d
   14002a453:	xor    edx,edx
   14002a455:	xor    ecx,ecx
   14002a457:	mov    DWORD PTR [rax],0x16
   14002a45d:	mov    QWORD PTR [rsp+0x20],rdi
   14002a462:	call   0x14002e900
   14002a467:	lea    eax,[rdi+0x16]
   14002a46a:	jmp    0x14002a616
   14002a46f:	mov    rax,QWORD PTR [r12]
   14002a473:	mov    edx,DWORD PTR [rax+0x14]
   14002a476:	test   edx,edx
   14002a478:	jne    0x14002a4a7
   14002a47a:	cmp    WORD PTR [rbx],dx
   14002a47d:	je     0x14002a4a0
   14002a47f:	nop
   14002a480:	movzx  eax,WORD PTR [rbx]
   14002a483:	cmp    ax,0x61
   14002a487:	jb     0x14002a496
   14002a489:	cmp    ax,0x7a
   14002a48d:	ja     0x14002a496
   14002a48f:	sub    ax,0x20
   14002a493:	mov    WORD PTR [rbx],ax
   14002a496:	add    rbx,0x2
   14002a49a:	cmp    WORD PTR [rbx],0x0
   14002a49e:	jne    0x14002a480
   14002a4a0:	xor    eax,eax
   14002a4a2:	jmp    0x14002a616
   14002a4a7:	mov    eax,DWORD PTR [rax+0x4]
   14002a4aa:	xor    edi,edi
   14002a4ac:	mov    r9,rbx
   14002a4af:	mov    DWORD PTR [rsp+0x38],eax
   14002a4b3:	mov    DWORD PTR [rsp+0x30],edi
   14002a4b7:	mov    r8d,0x200
   14002a4bd:	mov    rcx,r12
   14002a4c0:	mov    QWORD PTR [rsp+0x28],rdi
   14002a4c5:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14002a4cd:	call   0x140031e70
   14002a4d2:	test   eax,eax
   14002a4d4:	movsxd r13,eax
   14002a4d7:	jne    0x14002a4ea
   14002a4d9:	call   0x14002bca0
   14002a4de:	mov    ebx,0x2a
   14002a4e3:	mov    DWORD PTR [rax],ebx
   14002a4e5:	jmp    0x14002a60f
   14002a4ea:	cmp    rsi,r13
   14002a4ed:	mov    rcx,r13
   14002a4f0:	jae    0x14002a51e
   14002a4f2:	mov    WORD PTR [rbx],di
   14002a4f5:	call   0x14002bca0
   14002a4fa:	xor    r9d,r9d
   14002a4fd:	xor    r8d,r8d
   14002a500:	xor    edx,edx
   14002a502:	xor    ecx,ecx
   14002a504:	mov    DWORD PTR [rax],0x22
   14002a50a:	mov    QWORD PTR [rsp+0x20],rdi
   14002a50f:	call   0x14002e900
   14002a514:	mov    eax,0x22
   14002a519:	jmp    0x14002a616
   14002a51e:	test   eax,eax
   14002a520:	jle    0x14002a604
   14002a526:	xor    edx,edx
   14002a528:	mov    rax,0xffffffffffffffe0
   14002a52f:	div    rcx
   14002a532:	cmp    rax,0x2
   14002a536:	jb     0x14002a604
   14002a53c:	lea    rcx,[r13+r13*1+0x10]
   14002a541:	cmp    rcx,0x400
   14002a548:	ja     0x14002a57f
   14002a54a:	lea    rax,[rcx+0xf]
   14002a54e:	cmp    rax,rcx
   14002a551:	ja     0x14002a55d
   14002a553:	movabs rax,0xffffffffffffff0
   14002a55d:	and    rax,0xfffffffffffffff0
   14002a561:	call   0x140041ad0
   14002a566:	sub    rsp,rax
   14002a569:	lea    rdi,[rsp+0x40]
   14002a56e:	test   rdi,rdi
   14002a571:	je     0x14002a604
   14002a577:	mov    DWORD PTR [rdi],0xcccc
   14002a57d:	jmp    0x14002a592
   14002a57f:	call   0x14002a110
   14002a584:	test   rax,rax
   14002a587:	mov    rdi,rax
   14002a58a:	je     0x14002a596
   14002a58c:	mov    DWORD PTR [rax],0xdddd
   14002a592:	add    rdi,0x10
   14002a596:	test   rdi,rdi
   14002a599:	je     0x14002a604
   14002a59b:	mov    rcx,QWORD PTR [r12]
   14002a59f:	mov    r9,rbx
   14002a5a2:	mov    r8d,0x200
   14002a5a8:	mov    eax,DWORD PTR [rcx+0x4]
   14002a5ab:	mov    edx,DWORD PTR [rcx+0x14]
   14002a5ae:	mov    rcx,r12
   14002a5b1:	mov    DWORD PTR [rsp+0x38],eax
   14002a5b5:	mov    DWORD PTR [rsp+0x30],r13d
   14002a5ba:	mov    QWORD PTR [rsp+0x28],rdi
   14002a5bf:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14002a5c7:	call   0x140031e70
   14002a5cc:	test   eax,eax
   14002a5ce:	je     0x14002a5e2
   14002a5d0:	mov    r8,rdi
   14002a5d3:	mov    rdx,rsi
   14002a5d6:	mov    rcx,rbx
   14002a5d9:	call   0x14002a9a0
   14002a5de:	mov    ebx,eax
   14002a5e0:	jmp    0x14002a5ee
   14002a5e2:	call   0x14002bca0
   14002a5e7:	mov    ebx,0x2a
   14002a5ec:	mov    DWORD PTR [rax],ebx
   14002a5ee:	cmp    DWORD PTR [rdi-0x10],0xdddd
   14002a5f5:	lea    rcx,[rdi-0x10]
   14002a5f9:	jne    0x14002a600
   14002a5fb:	call   0x14002a380
   14002a600:	mov    eax,ebx
   14002a602:	jmp    0x14002a616
   14002a604:	call   0x14002bca0
   14002a609:	mov    DWORD PTR [rax],0xc
   14002a60f:	call   0x14002bca0
   14002a614:	mov    eax,DWORD PTR [rax]
   14002a616:	mov    rcx,QWORD PTR [rbp+0x0]
   14002a61a:	xor    rcx,rbp
   14002a61d:	call   0x140029b40
   14002a622:	mov    rbx,QWORD PTR [rbp+0x30]
   14002a626:	mov    rsi,QWORD PTR [rbp+0x38]
   14002a62a:	mov    rdi,QWORD PTR [rbp+0x40]
   14002a62e:	lea    rsp,[rbp+0x10]
   14002a632:	pop    r13
   14002a634:	pop    r12
   14002a636:	pop    rbp
   14002a637:	ret    
   14002a638:	int3   
   14002a639:	int3   
   14002a63a:	int3   
   14002a63b:	int3   
   14002a63c:	int3   
   14002a63d:	int3   
   14002a63e:	int3   
   14002a63f:	int3   
   14002a640:	mov    QWORD PTR [rsp+0x8],rbx
   14002a645:	push   rdi
   14002a646:	sub    rsp,0x40
   14002a64a:	mov    rbx,rdx
   14002a64d:	mov    rdi,rcx
   14002a650:	mov    BYTE PTR [rsp+0x38],0x0
   14002a655:	call   0x14002e210
   14002a65a:	mov    QWORD PTR [rsp+0x30],rax
   14002a65f:	mov    r11,rax
   14002a662:	mov    r8,QWORD PTR [rax+0xc0]
   14002a669:	cmp    r8,QWORD PTR [rip+0x313e0]        # 0x14005ba50
   14002a670:	mov    QWORD PTR [rsp+0x20],r8
   14002a675:	mov    rax,QWORD PTR [rax+0xb8]
   14002a67c:	mov    QWORD PTR [rsp+0x28],rax
   14002a681:	je     0x14002a6a7
   14002a683:	mov    r8d,DWORD PTR [r11+0xc8]
   14002a68a:	test   DWORD PTR [rip+0x31247],r8d        # 0x14005b8d8
   14002a691:	jne    0x14002a6a7
   14002a693:	call   0x140031a10
   14002a698:	mov    r11,QWORD PTR [rsp+0x30]
   14002a69d:	mov    QWORD PTR [rsp+0x20],rax
   14002a6a2:	mov    rax,QWORD PTR [rsp+0x28]
   14002a6a7:	cmp    rax,QWORD PTR [rip+0x31122]        # 0x14005b7d0
   14002a6ae:	je     0x14002a6ce
   14002a6b0:	mov    eax,DWORD PTR [r11+0xc8]
   14002a6b7:	test   DWORD PTR [rip+0x3121b],eax        # 0x14005b8d8
   14002a6bd:	jne    0x14002a6ce
   14002a6bf:	call   0x140030ec0
   14002a6c4:	mov    r11,QWORD PTR [rsp+0x30]
   14002a6c9:	mov    QWORD PTR [rsp+0x28],rax
   14002a6ce:	test   BYTE PTR [r11+0xc8],0x2
   14002a6d6:	jne    0x14002a6e5
   14002a6d8:	or     DWORD PTR [r11+0xc8],0x2
   14002a6e0:	mov    BYTE PTR [rsp+0x38],0x1
   14002a6e5:	lea    r8,[rsp+0x20]
   14002a6ea:	mov    rdx,rbx
   14002a6ed:	mov    rcx,rdi
   14002a6f0:	call   0x14002a400
   14002a6f5:	cmp    BYTE PTR [rsp+0x38],0x0
   14002a6fa:	je     0x14002a708
   14002a6fc:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a701:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a708:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a70d:	add    rsp,0x40
   14002a711:	pop    rdi
   14002a712:	ret    
   14002a713:	int3   
   14002a714:	int3   
   14002a715:	int3   
   14002a716:	int3   
   14002a717:	int3   
   14002a718:	int3   
   14002a719:	int3   
   14002a71a:	int3   
   14002a71b:	int3   
   14002a71c:	int3   
   14002a71d:	int3   
   14002a71e:	int3   
   14002a71f:	int3   
   14002a720:	cmp    WORD PTR [rdx],0x0
   14002a724:	mov    r10,rdx
   14002a727:	mov    r9,rcx
   14002a72a:	jne    0x14002a730
   14002a72c:	mov    rax,rcx
   14002a72f:	ret    
   14002a730:	movzx  eax,WORD PTR [rcx]
   14002a733:	test   ax,ax
   14002a736:	je     0x14002a780
   14002a738:	mov    r8,rcx
   14002a73b:	sub    r8,rdx
   14002a73e:	xchg   ax,ax
   14002a740:	test   ax,ax
   14002a743:	mov    rdx,r10
   14002a746:	je     0x14002a768
   14002a748:	movzx  eax,WORD PTR [rdx]
   14002a74b:	test   ax,ax
   14002a74e:	je     0x14002a783
   14002a750:	movzx  ecx,WORD PTR [r8+rdx*1]
   14002a755:	movzx  eax,ax
   14002a758:	cmp    ecx,eax
   14002a75a:	jne    0x14002a768
   14002a75c:	add    rdx,0x2
   14002a760:	cmp    WORD PTR [r8+rdx*1],0x0
   14002a766:	jne    0x14002a748
   14002a768:	cmp    WORD PTR [rdx],0x0
   14002a76c:	je     0x14002a783
   14002a76e:	mov    ax,WORD PTR [r9+0x2]
   14002a773:	add    r9,0x2
   14002a777:	add    r8,0x2
   14002a77b:	test   ax,ax
   14002a77e:	jne    0x14002a740
   14002a780:	xor    eax,eax
   14002a782:	ret    
   14002a783:	mov    rax,r9
   14002a786:	ret    
   14002a787:	int3   
   14002a788:	int3   
   14002a789:	int3   
   14002a78a:	int3   
   14002a78b:	int3   
   14002a78c:	int3   
   14002a78d:	int3   
   14002a78e:	int3   
   14002a78f:	int3   
   14002a790:	sub    rsp,0x28
   14002a794:	mov    rcx,QWORD PTR [rip+0x370f5]        # 0x140061890
   14002a79b:	call   0x14002df20
   14002a7a0:	test   rax,rax
   14002a7a3:	je     0x14002a7a7
   14002a7a5:	call   rax
   14002a7a7:	mov    ecx,0x19
   14002a7ac:	call   0x14002cb50
   14002a7b1:	mov    edx,0x1
   14002a7b6:	xor    ecx,ecx
   14002a7b8:	call   0x140032090
   14002a7bd:	add    rsp,0x28
   14002a7c1:	jmp    0x140031fe0
   14002a7c6:	int3   
   14002a7c7:	int3   
   14002a7c8:	int3   
   14002a7c9:	int3   
   14002a7ca:	int3   
   14002a7cb:	int3   
   14002a7cc:	int3   
   14002a7cd:	int3   
   14002a7ce:	int3   
   14002a7cf:	int3   
   14002a7d0:	movzx  eax,WORD PTR [rcx]
   14002a7d3:	test   ax,ax
   14002a7d6:	je     0x14002a7ea
   14002a7d8:	cmp    ax,dx
   14002a7db:	je     0x14002a7ef
   14002a7dd:	mov    ax,WORD PTR [rcx+0x2]
   14002a7e1:	add    rcx,0x2
   14002a7e5:	test   ax,ax
   14002a7e8:	jne    0x14002a7d8
   14002a7ea:	cmp    WORD PTR [rcx],dx
   14002a7ed:	jne    0x14002a7f3
   14002a7ef:	mov    rax,rcx
   14002a7f2:	ret    
   14002a7f3:	xor    eax,eax
   14002a7f5:	ret    
   14002a7f6:	int3   
   14002a7f7:	int3   
   14002a7f8:	int3   
   14002a7f9:	int3   
   14002a7fa:	int3   
   14002a7fb:	int3   
   14002a7fc:	int3   
   14002a7fd:	int3   
   14002a7fe:	int3   
   14002a7ff:	int3   
   14002a800:	rex push rbx
   14002a802:	sub    rsp,0x20
   14002a806:	mov    edx,0x8
   14002a80b:	lea    ecx,[rdx+0x18]
   14002a80e:	call   0x140032130
   14002a813:	mov    rcx,rax
   14002a816:	mov    rbx,rax
   14002a819:	call   0x14002dd60
   14002a81e:	test   rbx,rbx
   14002a821:	mov    QWORD PTR [rip+0x389a8],rax        # 0x1400631d0
   14002a828:	mov    QWORD PTR [rip+0x38999],rax        # 0x1400631c8
   14002a82f:	jne    0x14002a83a
   14002a831:	lea    eax,[rbx+0x18]
   14002a834:	add    rsp,0x20
   14002a838:	pop    rbx
   14002a839:	ret    
   14002a83a:	mov    QWORD PTR [rbx],0x0
   14002a841:	xor    eax,eax
   14002a843:	add    rsp,0x20
   14002a847:	pop    rbx
   14002a848:	ret    
   14002a849:	int3   
   14002a84a:	int3   
   14002a84b:	int3   
   14002a84c:	int3   
   14002a84d:	int3   
   14002a84e:	int3   
   14002a84f:	int3   
   14002a850:	mov    QWORD PTR [rsp+0x8],rbx
   14002a855:	mov    QWORD PTR [rsp+0x10],rsi
   14002a85a:	mov    QWORD PTR [rsp+0x18],rdi
   14002a85f:	push   r12
   14002a861:	push   r13
   14002a863:	push   r14
   14002a865:	sub    rsp,0x20
   14002a869:	mov    rbx,rcx
   14002a86c:	call   0x14002c160
   14002a871:	nop
   14002a872:	mov    rcx,QWORD PTR [rip+0x38957]        # 0x1400631d0
   14002a879:	call   0x14002df20
   14002a87e:	mov    r13,rax
   14002a881:	mov    rcx,QWORD PTR [rip+0x38940]        # 0x1400631c8
   14002a888:	call   0x14002df20
   14002a88d:	mov    rsi,rax
   14002a890:	cmp    rax,r13
   14002a893:	jb     0x14002a92f
   14002a899:	mov    rdi,rax
   14002a89c:	sub    rdi,r13
   14002a89f:	lea    r14,[rdi+0x8]
   14002a8a3:	cmp    r14,0x8
   14002a8a7:	jb     0x14002a92f
   14002a8ad:	mov    rcx,r13
   14002a8b0:	call   0x14002c7a0
   14002a8b5:	mov    r12,rax
   14002a8b8:	cmp    rax,r14
   14002a8bb:	jae    0x14002a912
   14002a8bd:	mov    edx,0x1000
   14002a8c2:	cmp    rax,rdx
   14002a8c5:	cmovb  rdx,rax
   14002a8c9:	add    rdx,rax
   14002a8cc:	cmp    rdx,rax
   14002a8cf:	jb     0x14002a8de
   14002a8d1:	mov    rcx,r13
   14002a8d4:	call   0x1400321c0
   14002a8d9:	test   rax,rax
   14002a8dc:	jne    0x14002a8f5
   14002a8de:	lea    rdx,[r12+0x20]
   14002a8e3:	cmp    rdx,r12
   14002a8e6:	jb     0x14002a90e
   14002a8e8:	mov    rcx,r13
   14002a8eb:	call   0x1400321c0
   14002a8f0:	test   rax,rax
   14002a8f3:	je     0x14002a90e
   14002a8f5:	sar    rdi,0x3
   14002a8f9:	lea    rsi,[rax+rdi*8]
   14002a8fd:	mov    rcx,rax
   14002a900:	call   0x14002dd60
   14002a905:	mov    QWORD PTR [rip+0x388c4],rax        # 0x1400631d0
   14002a90c:	jmp    0x14002a912
   14002a90e:	xor    ebx,ebx
   14002a910:	jmp    0x14002a931
   14002a912:	mov    rcx,rbx
   14002a915:	call   0x14002dd60
   14002a91a:	mov    QWORD PTR [rsi],rax
   14002a91d:	lea    rcx,[rsi+0x8]
   14002a921:	call   0x14002dd60
   14002a926:	mov    QWORD PTR [rip+0x3889b],rax        # 0x1400631c8
   14002a92d:	jmp    0x14002a931
   14002a92f:	xor    ebx,ebx
   14002a931:	call   0x14002c170
   14002a936:	mov    rax,rbx
   14002a939:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a93e:	mov    rsi,QWORD PTR [rsp+0x48]
   14002a943:	mov    rdi,QWORD PTR [rsp+0x50]
   14002a948:	add    rsp,0x20
   14002a94c:	pop    r14
   14002a94e:	pop    r13
   14002a950:	pop    r12
   14002a952:	ret    
   14002a953:	int3   
   14002a954:	int3   
   14002a955:	int3   
   14002a956:	int3   
   14002a957:	int3   
   14002a958:	int3   
   14002a959:	int3   
   14002a95a:	int3   
   14002a95b:	int3   
   14002a95c:	int3   
   14002a95d:	int3   
   14002a95e:	int3   
   14002a95f:	int3   
   14002a960:	rex push rbp
   14002a962:	sub    rsp,0x20
   14002a966:	mov    rbp,rdx
   14002a969:	call   0x14002c170
   14002a96e:	add    rsp,0x20
   14002a972:	pop    rbp
   14002a973:	ret    
   14002a974:	int3   
   14002a975:	int3   
   14002a976:	int3   
   14002a977:	int3   
   14002a978:	int3   
   14002a979:	int3   
   14002a97a:	int3   
   14002a97b:	int3   
   14002a97c:	int3   
   14002a97d:	int3   
   14002a97e:	int3   
   14002a97f:	int3   
   14002a980:	sub    rsp,0x28
   14002a984:	call   0x14002a850
   14002a989:	neg    rax
   14002a98c:	sbb    eax,eax
   14002a98e:	neg    eax
   14002a990:	sub    eax,0x1
   14002a993:	add    rsp,0x28
   14002a997:	ret    
   14002a998:	int3   
   14002a999:	int3   
   14002a99a:	int3   
   14002a99b:	int3   
   14002a99c:	int3   
   14002a99d:	int3   
   14002a99e:	int3   
   14002a99f:	int3   
   14002a9a0:	sub    rsp,0x38
   14002a9a4:	test   rcx,rcx
   14002a9a7:	mov    r9,rcx
   14002a9aa:	je     0x14002a9ba
   14002a9ac:	test   rdx,rdx
   14002a9af:	je     0x14002a9ba
   14002a9b1:	test   r8,r8
   14002a9b4:	jne    0x14002a9f0
   14002a9b6:	mov    WORD PTR [rcx],r8w
   14002a9ba:	call   0x14002bca0
   14002a9bf:	xor    r9d,r9d
   14002a9c2:	xor    r8d,r8d
   14002a9c5:	xor    edx,edx
   14002a9c7:	xor    ecx,ecx
   14002a9c9:	mov    QWORD PTR [rsp+0x20],0x0
   14002a9d2:	mov    DWORD PTR [rax],0x16
   14002a9d8:	call   0x14002e900
   14002a9dd:	mov    eax,0x16
   14002a9e2:	add    rsp,0x38
   14002a9e6:	ret    
   14002a9e7:	data16 xchg ax,ax
   14002a9ea:	data16 xchg ax,ax
   14002a9ed:	data16 xchg ax,ax
   14002a9f0:	movzx  eax,WORD PTR [r8]
   14002a9f4:	add    rcx,0x2
   14002a9f8:	add    r8,0x2
   14002a9fc:	test   ax,ax
   14002a9ff:	mov    WORD PTR [rcx-0x2],ax
   14002aa03:	je     0x14002aa0b
   14002aa05:	sub    rdx,0x1
   14002aa09:	jne    0x14002a9f0
   14002aa0b:	test   rdx,rdx
   14002aa0e:	jne    0x14002aa41
   14002aa10:	mov    WORD PTR [r9],dx
   14002aa14:	call   0x14002bca0
   14002aa19:	xor    r9d,r9d
   14002aa1c:	xor    r8d,r8d
   14002aa1f:	xor    edx,edx
   14002aa21:	xor    ecx,ecx
   14002aa23:	mov    DWORD PTR [rax],0x22
   14002aa29:	mov    QWORD PTR [rsp+0x20],0x0
   14002aa32:	call   0x14002e900
   14002aa37:	mov    eax,0x22
   14002aa3c:	add    rsp,0x38
   14002aa40:	ret    
   14002aa41:	xor    eax,eax
   14002aa43:	add    rsp,0x38
   14002aa47:	ret    
   14002aa48:	int3   
   14002aa49:	int3   
   14002aa4a:	int3   
   14002aa4b:	int3   
   14002aa4c:	int3   
   14002aa4d:	int3   
   14002aa4e:	int3   
   14002aa4f:	int3   
   14002aa50:	int3   
   14002aa51:	int3   
   14002aa52:	int3   
   14002aa53:	int3   
   14002aa54:	int3   
   14002aa55:	int3   
   14002aa56:	data16 data16 xchg ax,ax
   14002aa5a:	data16 data16 xchg ax,ax
   14002aa5e:	xchg   ax,ax
   14002aa60:	sub    rdx,rcx
   14002aa63:	cmp    r8,0x8
   14002aa67:	jb     0x14002aa8b
   14002aa69:	test   cl,0x7
   14002aa6c:	je     0x14002aa82
   14002aa6e:	xchg   ax,ax
   14002aa70:	mov    al,BYTE PTR [rcx]
   14002aa72:	cmp    al,BYTE PTR [rdx+rcx*1]
   14002aa75:	jne    0x14002aaa3
   14002aa77:	inc    rcx
   14002aa7a:	dec    r8
   14002aa7d:	test   cl,0x7
   14002aa80:	jne    0x14002aa70
   14002aa82:	mov    r9,r8
   14002aa85:	shr    r9,0x3
   14002aa89:	jne    0x14002aaaa
   14002aa8b:	test   r8,r8
   14002aa8e:	je     0x14002aa9f
   14002aa90:	mov    al,BYTE PTR [rcx]
   14002aa92:	cmp    al,BYTE PTR [rdx+rcx*1]
   14002aa95:	jne    0x14002aaa3
   14002aa97:	inc    rcx
   14002aa9a:	dec    r8
   14002aa9d:	jne    0x14002aa90
   14002aa9f:	xor    rax,rax
   14002aaa2:	ret    
   14002aaa3:	sbb    eax,eax
   14002aaa5:	sbb    eax,0xffffffff
   14002aaa8:	ret    
   14002aaa9:	nop
   14002aaaa:	shr    r9,0x2
   14002aaae:	je     0x14002aae7
   14002aab0:	mov    rax,QWORD PTR [rcx]
   14002aab3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14002aab7:	jne    0x14002ab14
   14002aab9:	mov    rax,QWORD PTR [rcx+0x8]
   14002aabd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14002aac2:	jne    0x14002ab10
   14002aac4:	mov    rax,QWORD PTR [rcx+0x10]
   14002aac8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14002aacd:	jne    0x14002ab0c
   14002aacf:	mov    rax,QWORD PTR [rcx+0x18]
   14002aad3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14002aad8:	jne    0x14002ab08
   14002aada:	add    rcx,0x20
   14002aade:	dec    r9
   14002aae1:	jne    0x14002aab0
   14002aae3:	and    r8,0x1f
   14002aae7:	mov    r9,r8
   14002aaea:	shr    r9,0x3
   14002aaee:	je     0x14002aa8b
   14002aaf0:	mov    rax,QWORD PTR [rcx]
   14002aaf3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14002aaf7:	jne    0x14002ab14
   14002aaf9:	add    rcx,0x8
   14002aafd:	dec    r9
   14002ab00:	jne    0x14002aaf0
   14002ab02:	and    r8,0x7
   14002ab06:	jmp    0x14002aa8b
   14002ab08:	add    rcx,0x8
   14002ab0c:	add    rcx,0x8
   14002ab10:	add    rcx,0x8
   14002ab14:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14002ab18:	bswap  rax
   14002ab1b:	bswap  rcx
   14002ab1e:	cmp    rax,rcx
   14002ab21:	sbb    eax,eax
   14002ab23:	sbb    eax,0xffffffff
   14002ab26:	ret    
   14002ab27:	int3   
   14002ab28:	int3   
   14002ab29:	int3   
   14002ab2a:	int3   
   14002ab2b:	int3   
   14002ab2c:	int3   
   14002ab2d:	int3   
   14002ab2e:	int3   
   14002ab2f:	int3   
   14002ab30:	rex push rbx
   14002ab32:	sub    rsp,0x20
   14002ab36:	mov    eax,DWORD PTR [r8]
   14002ab39:	mov    rbx,rdx
   14002ab3c:	mov    r9,rcx
   14002ab3f:	mov    r11d,eax
   14002ab42:	mov    r10,rcx
   14002ab45:	and    r11d,0xfffffff8
   14002ab49:	test   al,0x4
   14002ab4b:	je     0x14002ab60
   14002ab4d:	mov    eax,DWORD PTR [r8+0x8]
   14002ab51:	movsxd r10,DWORD PTR [r8+0x4]
   14002ab55:	neg    eax
   14002ab57:	add    r10,rcx
   14002ab5a:	movsxd rcx,eax
   14002ab5d:	and    r10,rcx
   14002ab60:	movsxd rax,r11d
   14002ab63:	mov    rdx,QWORD PTR [rax+r10*1]
   14002ab67:	mov    rax,QWORD PTR [rbx+0x10]
   14002ab6b:	mov    ecx,DWORD PTR [rax+0x8]
   14002ab6e:	add    rcx,QWORD PTR [rbx+0x8]
   14002ab72:	movzx  eax,BYTE PTR [rcx+0x3]
   14002ab76:	test   al,0xf
   14002ab78:	je     0x14002ab85
   14002ab7a:	movzx  eax,al
   14002ab7d:	and    eax,0xfffffff0
   14002ab80:	cdqe   
   14002ab82:	add    r9,rax
   14002ab85:	xor    r9,rdx
   14002ab88:	mov    rcx,r9
   14002ab8b:	add    rsp,0x20
   14002ab8f:	pop    rbx
   14002ab90:	jmp    0x140029b40
   14002ab95:	int3   
   14002ab96:	int3   
   14002ab97:	int3   
   14002ab98:	int3   
   14002ab99:	int3   
   14002ab9a:	int3   
   14002ab9b:	int3   
   14002ab9c:	int3   
   14002ab9d:	int3   
   14002ab9e:	int3   
   14002ab9f:	int3   
   14002aba0:	sub    rsp,0x28
   14002aba4:	mov    rcx,QWORD PTR [r9+0x38]
   14002aba8:	mov    r10,r9
   14002abab:	mov    r8,rdx
   14002abae:	mov    eax,DWORD PTR [rcx]
   14002abb0:	mov    r9d,eax
   14002abb3:	and    r9d,0xfffffff8
   14002abb7:	test   al,0x4
   14002abb9:	je     0x14002abcd
   14002abbb:	mov    eax,DWORD PTR [rcx+0x8]
   14002abbe:	movsxd r8,DWORD PTR [rcx+0x4]
   14002abc2:	neg    eax
   14002abc4:	add    r8,rdx
   14002abc7:	movsxd rcx,eax
   14002abca:	and    r8,rcx
   14002abcd:	movsxd rax,r9d
   14002abd0:	mov    r9,QWORD PTR [rax+r8*1]
   14002abd4:	mov    rax,QWORD PTR [r10+0x10]
   14002abd8:	mov    ecx,DWORD PTR [rax+0x8]
   14002abdb:	add    rcx,QWORD PTR [r10+0x8]
   14002abdf:	movzx  eax,BYTE PTR [rcx+0x3]
   14002abe3:	test   al,0xf
   14002abe5:	je     0x14002abf2
   14002abe7:	movzx  eax,al
   14002abea:	and    eax,0xfffffff0
   14002abed:	cdqe   
   14002abef:	add    rdx,rax
   14002abf2:	xor    rdx,r9
   14002abf5:	mov    rcx,rdx
   14002abf8:	call   0x140029b40
   14002abfd:	mov    eax,0x1
   14002ac02:	add    rsp,0x28
   14002ac06:	ret    
   14002ac07:	int3   
   14002ac08:	int3   
   14002ac09:	int3   
   14002ac0a:	int3   
   14002ac0b:	int3   
   14002ac0c:	int3   
   14002ac0d:	int3   
   14002ac0e:	int3   
   14002ac0f:	int3   
   14002ac10:	int3   
   14002ac11:	int3   
   14002ac12:	int3   
   14002ac13:	int3   
   14002ac14:	int3   
   14002ac15:	int3   
   14002ac16:	data16 data16 xchg ax,ax
   14002ac1a:	data16 data16 xchg ax,ax
   14002ac1e:	xchg   ax,ax
   14002ac20:	mov    rax,rcx
   14002ac23:	cmp    r8,0x8
   14002ac27:	jb     0x14002ac7c
   14002ac29:	movzx  edx,dl
   14002ac2c:	movabs r9,0x101010101010101
   14002ac36:	imul   rdx,r9
   14002ac3a:	cmp    r8,0x40
   14002ac3e:	jb     0x14002ac5e
   14002ac40:	neg    rcx
   14002ac43:	and    ecx,0x7
   14002ac46:	je     0x14002ac4e
   14002ac48:	sub    r8,rcx
   14002ac4b:	mov    QWORD PTR [rax],rdx
   14002ac4e:	add    rcx,rax
   14002ac51:	mov    r9,r8
   14002ac54:	and    r8,0x3f
   14002ac58:	shr    r9,0x6
   14002ac5c:	jne    0x14002ac97
   14002ac5e:	mov    r9,r8
   14002ac61:	and    r8,0x7
   14002ac65:	shr    r9,0x3
   14002ac69:	je     0x14002ac7c
   14002ac6b:	data16 data16 xchg ax,ax
   14002ac6f:	nop
   14002ac70:	mov    QWORD PTR [rcx],rdx
   14002ac73:	add    rcx,0x8
   14002ac77:	dec    r9
   14002ac7a:	jne    0x14002ac70
   14002ac7c:	test   r8,r8
   14002ac7f:	je     0x14002ac8b
   14002ac81:	mov    BYTE PTR [rcx],dl
   14002ac83:	inc    rcx
   14002ac86:	dec    r8
   14002ac89:	jne    0x14002ac81
   14002ac8b:	ret    
   14002ac8c:	data16 data16 xchg ax,ax
   14002ac90:	data16 data16 xchg ax,ax
   14002ac94:	data16 xchg ax,ax
   14002ac97:	cmp    r9,0x1c00
   14002ac9e:	jae    0x14002acd0
   14002aca0:	mov    QWORD PTR [rcx],rdx
   14002aca3:	mov    QWORD PTR [rcx+0x8],rdx
   14002aca7:	mov    QWORD PTR [rcx+0x10],rdx
   14002acab:	add    rcx,0x40
   14002acaf:	mov    QWORD PTR [rcx-0x28],rdx
   14002acb3:	mov    QWORD PTR [rcx-0x20],rdx
   14002acb7:	dec    r9
   14002acba:	mov    QWORD PTR [rcx-0x18],rdx
   14002acbe:	mov    QWORD PTR [rcx-0x10],rdx
   14002acc2:	mov    QWORD PTR [rcx-0x8],rdx
   14002acc6:	jne    0x14002aca0
   14002acc8:	jmp    0x14002ac5e
   14002acca:	data16 xchg ax,ax
   14002accd:	data16 xchg ax,ax
   14002acd0:	movnti QWORD PTR [rcx],rdx
   14002acd4:	movnti QWORD PTR [rcx+0x8],rdx
   14002acd9:	movnti QWORD PTR [rcx+0x10],rdx
   14002acde:	add    rcx,0x40
   14002ace2:	movnti QWORD PTR [rcx-0x28],rdx
   14002ace7:	movnti QWORD PTR [rcx-0x20],rdx
   14002acec:	dec    r9
   14002acef:	movnti QWORD PTR [rcx-0x18],rdx
   14002acf4:	movnti QWORD PTR [rcx-0x10],rdx
   14002acf9:	movnti QWORD PTR [rcx-0x8],rdx
   14002acfe:	jne    0x14002acd0
   14002ad00:	lock or BYTE PTR [rsp],0x0
   14002ad05:	jmp    0x14002ac5e
   14002ad0a:	int3   
   14002ad0b:	int3   
   14002ad0c:	int3   
   14002ad0d:	int3   
   14002ad0e:	int3   
   14002ad0f:	int3   
   14002ad10:	mov    rax,rcx
   14002ad13:	movzx  edx,WORD PTR [rax]
   14002ad16:	add    rax,0x2
   14002ad1a:	test   dx,dx
   14002ad1d:	jne    0x14002ad13
   14002ad1f:	sub    rax,rcx
   14002ad22:	sar    rax,1
   14002ad25:	sub    rax,0x1
   14002ad29:	ret    
   14002ad2a:	int3   
   14002ad2b:	int3   
   14002ad2c:	int3   
   14002ad2d:	int3   
   14002ad2e:	int3   
   14002ad2f:	int3   
   14002ad30:	mov    QWORD PTR [rsp+0x20],rbp
   14002ad35:	push   rdi
   14002ad36:	push   r12
   14002ad38:	push   r13
   14002ad3a:	push   r14
   14002ad3c:	push   r15
   14002ad3e:	sub    rsp,0x20
   14002ad42:	movsxd rdi,DWORD PTR [r8+0xc]
   14002ad46:	mov    r15,rcx
   14002ad49:	mov    rcx,r8
   14002ad4c:	mov    r12,r9
   14002ad4f:	mov    r14,r8
   14002ad52:	mov    r13,rdx
   14002ad55:	call   0x140032380
   14002ad5a:	test   edi,edi
   14002ad5c:	mov    r10,QWORD PTR [r15]
   14002ad5f:	mov    QWORD PTR [r12],r10
   14002ad63:	mov    ebp,eax
   14002ad65:	je     0x14002ae29
   14002ad6b:	lea    rcx,[rdi+rdi*4]
   14002ad6f:	mov    QWORD PTR [rsp+0x58],rbx
   14002ad74:	mov    QWORD PTR [rsp+0x60],rsi
   14002ad79:	lea    rsi,[rcx*4-0x14]
   14002ad81:	data16 xchg ax,ax
   14002ad84:	data16 data16 xchg ax,ax
   14002ad88:	data16 data16 xchg ax,ax
   14002ad8c:	data16 data16 xchg ax,ax
   14002ad90:	movsxd rbx,DWORD PTR [r14+0x10]
   14002ad94:	add    rbx,QWORD PTR [r13+0x8]
   14002ad98:	add    rbx,rsi
   14002ad9b:	cmp    ebp,DWORD PTR [rbx+0x4]
   14002ad9e:	jle    0x14002adea
   14002ada0:	cmp    ebp,DWORD PTR [rbx+0x8]
   14002ada3:	jg     0x14002adea
   14002ada5:	mov    rcx,QWORD PTR [r13+0x0]
   14002ada9:	lea    rdx,[rsp+0x50]
   14002adae:	xor    r8d,r8d
   14002adb1:	call   0x140040916
   14002adb6:	movsxd r10,DWORD PTR [rbx+0x10]
   14002adba:	mov    r8d,DWORD PTR [rbx+0xc]
   14002adbe:	add    r10,QWORD PTR [rsp+0x50]
   14002adc3:	mov    r9d,DWORD PTR [rax]
   14002adc6:	xor    edx,edx
   14002adc8:	test   r8d,r8d
   14002adcb:	je     0x14002ade5
   14002adcd:	lea    rcx,[r10+0xc]
   14002add1:	movsxd rax,DWORD PTR [rcx]
   14002add4:	cmp    rax,r9
   14002add7:	je     0x14002ade5
   14002add9:	add    edx,0x1
   14002addc:	add    rcx,0x14
   14002ade0:	cmp    edx,r8d
   14002ade3:	jb     0x14002add1
   14002ade5:	cmp    edx,r8d
   14002ade8:	jb     0x14002adf5
   14002adea:	sub    rsi,0x14
   14002adee:	add    edi,0xffffffff
   14002adf1:	jne    0x14002ad90
   14002adf3:	jmp    0x14002ae09
   14002adf5:	mov    rax,QWORD PTR [r15]
   14002adf8:	lea    rcx,[rdx+rdx*4]
   14002adfc:	movsxd rcx,DWORD PTR [r10+rcx*4+0x10]
   14002ae01:	mov    rcx,QWORD PTR [rcx+rax*1]
   14002ae05:	mov    QWORD PTR [r12],rcx
   14002ae09:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ae0e:	mov    rsi,QWORD PTR [rsp+0x60]
   14002ae13:	mov    rax,r12
   14002ae16:	mov    rbp,QWORD PTR [rsp+0x68]
   14002ae1b:	add    rsp,0x20
   14002ae1f:	pop    r15
   14002ae21:	pop    r14
   14002ae23:	pop    r13
   14002ae25:	pop    r12
   14002ae27:	pop    rdi
   14002ae28:	ret    
   14002ae29:	mov    rax,r12
   14002ae2c:	mov    rbp,QWORD PTR [rsp+0x68]
   14002ae31:	add    rsp,0x20
   14002ae35:	pop    r15
   14002ae37:	pop    r14
   14002ae39:	pop    r13
   14002ae3b:	pop    r12
   14002ae3d:	pop    rdi
   14002ae3e:	ret    
   14002ae3f:	int3   
   14002ae40:	sub    rsp,0x28
   14002ae44:	call   0x14002e210
   14002ae49:	mov    rax,QWORD PTR [rax+0x128]
   14002ae50:	add    rsp,0x28
   14002ae54:	ret    
   14002ae55:	int3   
   14002ae56:	int3   
   14002ae57:	int3   
   14002ae58:	int3   
   14002ae59:	int3   
   14002ae5a:	int3   
   14002ae5b:	int3   
   14002ae5c:	int3   
   14002ae5d:	int3   
   14002ae5e:	int3   
   14002ae5f:	int3   
   14002ae60:	sub    rsp,0x28
   14002ae64:	call   0x14002e210
   14002ae69:	mov    rax,QWORD PTR [rax+0x130]
   14002ae70:	add    rsp,0x28
   14002ae74:	ret    
   14002ae75:	int3   
   14002ae76:	int3   
   14002ae77:	int3   
   14002ae78:	int3   
   14002ae79:	int3   
   14002ae7a:	int3   
   14002ae7b:	int3   
   14002ae7c:	int3   
   14002ae7d:	int3   
   14002ae7e:	int3   
   14002ae7f:	int3   
   14002ae80:	rex push rbx
   14002ae82:	sub    rsp,0x20
   14002ae86:	mov    rbx,rcx
   14002ae89:	call   0x14002e210
   14002ae8e:	mov    QWORD PTR [rax+0x128],rbx
   14002ae95:	add    rsp,0x20
   14002ae99:	pop    rbx
   14002ae9a:	ret    
   14002ae9b:	int3   
   14002ae9c:	int3   
   14002ae9d:	int3   
   14002ae9e:	int3   
   14002ae9f:	int3   
   14002aea0:	rex push rbx
   14002aea2:	sub    rsp,0x20
   14002aea6:	mov    rbx,rcx
   14002aea9:	call   0x14002e210
   14002aeae:	mov    QWORD PTR [rax+0x130],rbx
   14002aeb5:	add    rsp,0x20
   14002aeb9:	pop    rbx
   14002aeba:	ret    
   14002aebb:	int3   
   14002aebc:	int3   
   14002aebd:	int3   
   14002aebe:	int3   
   14002aebf:	int3   
   14002aec0:	mov    QWORD PTR [rsp+0x10],rbx
   14002aec5:	mov    QWORD PTR [rsp+0x20],rbp
   14002aeca:	push   rsi
   14002aecb:	push   rdi
   14002aecc:	push   r12
   14002aece:	push   r13
   14002aed0:	push   r14
   14002aed2:	sub    rsp,0x20
   14002aed6:	movsxd rdi,DWORD PTR [r8+0xc]
   14002aeda:	mov    r14,rcx
   14002aedd:	mov    rcx,r8
   14002aee0:	mov    rbp,r8
   14002aee3:	mov    r13,rdx
   14002aee6:	call   0x140032380
   14002aeeb:	test   edi,edi
   14002aeed:	mov    r9,QWORD PTR [r14]
   14002aef0:	mov    r12d,eax
   14002aef3:	mov    QWORD PTR [rsp+0x50],r9
   14002aef8:	je     0x14002af8c
   14002aefe:	lea    rcx,[rdi+rdi*4]
   14002af02:	lea    rsi,[rcx*4-0x14]
   14002af0a:	data16 xchg ax,ax
   14002af0d:	data16 xchg ax,ax
   14002af10:	movsxd rbx,DWORD PTR [rbp+0x10]
   14002af14:	add    rbx,QWORD PTR [r13+0x8]
   14002af18:	add    rbx,rsi
   14002af1b:	cmp    r12d,DWORD PTR [rbx+0x4]
   14002af1f:	jle    0x14002af6c
   14002af21:	cmp    r12d,DWORD PTR [rbx+0x8]
   14002af25:	jg     0x14002af6c
   14002af27:	mov    rcx,QWORD PTR [r13+0x0]
   14002af2b:	lea    rdx,[rsp+0x60]
   14002af30:	xor    r8d,r8d
   14002af33:	call   0x140040916
   14002af38:	movsxd r10,DWORD PTR [rbx+0x10]
   14002af3c:	mov    r8d,DWORD PTR [rbx+0xc]
   14002af40:	add    r10,QWORD PTR [rsp+0x60]
   14002af45:	mov    r9d,DWORD PTR [rax]
   14002af48:	xor    edx,edx
   14002af4a:	test   r8d,r8d
   14002af4d:	je     0x14002af67
   14002af4f:	lea    rcx,[r10+0xc]
   14002af53:	movsxd rax,DWORD PTR [rcx]
   14002af56:	cmp    rax,r9
   14002af59:	je     0x14002af67
   14002af5b:	add    edx,0x1
   14002af5e:	add    rcx,0x14
   14002af62:	cmp    edx,r8d
   14002af65:	jb     0x14002af53
   14002af67:	cmp    edx,r8d
   14002af6a:	jb     0x14002af77
   14002af6c:	sub    rsi,0x14
   14002af70:	add    edi,0xffffffff
   14002af73:	jne    0x14002af10
   14002af75:	jmp    0x14002af8c
   14002af77:	mov    rax,QWORD PTR [r14]
   14002af7a:	lea    rcx,[rdx+rdx*4]
   14002af7e:	movsxd rcx,DWORD PTR [r10+rcx*4+0x10]
   14002af83:	mov    rcx,QWORD PTR [rcx+rax*1]
   14002af87:	mov    QWORD PTR [rsp+0x50],rcx
   14002af8c:	mov    rdx,r13
   14002af8f:	mov    rcx,rbp
   14002af92:	call   0x140032380
   14002af97:	movsxd rbx,DWORD PTR [rbp+0xc]
   14002af9b:	test   ebx,ebx
   14002af9d:	mov    esi,eax
   14002af9f:	je     0x14002afd8
   14002afa1:	lea    rcx,[rbx+rbx*4]
   14002afa5:	lea    rdi,[rcx*4-0x14]
   14002afad:	data16 xchg ax,ax
   14002afb0:	call   0x14002e210
   14002afb5:	movsxd rcx,DWORD PTR [rbp+0x10]
   14002afb9:	mov    rdx,QWORD PTR [rax+0x128]
   14002afc0:	add    rdx,rcx
   14002afc3:	cmp    esi,DWORD PTR [rdx+rdi*1+0x4]
   14002afc7:	jle    0x14002afcf
   14002afc9:	cmp    esi,DWORD PTR [rdx+rdi*1+0x8]
   14002afcd:	jle    0x14002b003
   14002afcf:	sub    rdi,0x14
   14002afd3:	add    ebx,0xffffffff
   14002afd6:	jne    0x14002afb0
   14002afd8:	or     r9d,0xffffffff
   14002afdc:	lea    rcx,[rsp+0x50]
   14002afe1:	mov    r8,rbp
   14002afe4:	mov    rdx,r13
   14002afe7:	call   0x1400325d0
   14002afec:	mov    rbx,QWORD PTR [rsp+0x58]
   14002aff1:	mov    rbp,QWORD PTR [rsp+0x68]
   14002aff6:	add    rsp,0x20
   14002affa:	pop    r14
   14002affc:	pop    r13
   14002affe:	pop    r12
   14002b000:	pop    rdi
   14002b001:	pop    rsi
   14002b002:	ret    
   14002b003:	mov    r9d,DWORD PTR [rdx+rdi*1+0x4]
   14002b008:	jmp    0x14002afdc
   14002b00a:	int3   
   14002b00b:	int3   
   14002b00c:	int3   
   14002b00d:	int3   
   14002b00e:	int3   
   14002b00f:	int3   
   14002b010:	mov    QWORD PTR [rsp+0x10],rbx
   14002b015:	mov    QWORD PTR [rsp+0x18],rsi
   14002b01a:	push   rdi
   14002b01b:	sub    rsp,0x40
   14002b01f:	mov    rbx,r9
   14002b022:	mov    rdi,r8
   14002b025:	mov    rsi,rcx
   14002b028:	mov    QWORD PTR [rsp+0x50],rdx
   14002b02d:	call   0x14002e210
   14002b032:	mov    rdx,QWORD PTR [rbx+0x8]
   14002b036:	mov    QWORD PTR [rax+0x128],rdx
   14002b03d:	call   0x14002e210
   14002b042:	mov    rdx,QWORD PTR [rsi+0x38]
   14002b046:	mov    QWORD PTR [rax+0x130],rdx
   14002b04d:	call   0x14002e210
   14002b052:	mov    rdx,QWORD PTR [rbx+0x38]
   14002b056:	mov    r8d,DWORD PTR [rdx]
   14002b059:	lea    rdx,[rsp+0x50]
   14002b05e:	mov    r9,rbx
   14002b061:	add    r8,QWORD PTR [rax+0x128]
   14002b068:	xor    eax,eax
   14002b06a:	mov    rcx,rsi
   14002b06d:	mov    DWORD PTR [rsp+0x38],eax
   14002b071:	mov    QWORD PTR [rsp+0x30],rax
   14002b076:	mov    DWORD PTR [rsp+0x28],eax
   14002b07a:	mov    QWORD PTR [rsp+0x20],r8
   14002b07f:	mov    r8,rdi
   14002b082:	call   0x140033ad0
   14002b087:	mov    rbx,QWORD PTR [rsp+0x58]
   14002b08c:	mov    rsi,QWORD PTR [rsp+0x60]
   14002b091:	add    rsp,0x40
   14002b095:	pop    rdi
   14002b096:	ret    
   14002b097:	int3   
   14002b098:	int3   
   14002b099:	int3   
   14002b09a:	int3   
   14002b09b:	int3   
   14002b09c:	int3   
   14002b09d:	int3   
   14002b09e:	int3   
   14002b09f:	int3   
   14002b0a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b0a5:	mov    QWORD PTR [rsp+0x10],rbp
   14002b0aa:	mov    QWORD PTR [rsp+0x18],rsi
   14002b0af:	push   rdi
   14002b0b0:	sub    rsp,0x40
   14002b0b4:	mov    rsi,r9
   14002b0b7:	mov    rbp,r8
   14002b0ba:	mov    rbx,rdx
   14002b0bd:	mov    rdi,rcx
   14002b0c0:	call   0x14002e210
   14002b0c5:	mov    QWORD PTR [rax+0x138],rbx
   14002b0cc:	mov    rbx,QWORD PTR [rdi]
   14002b0cf:	call   0x14002e210
   14002b0d4:	mov    rdx,QWORD PTR [rbx+0x38]
   14002b0d8:	mov    rcx,QWORD PTR [rsp+0x78]
   14002b0dd:	mov    r9,QWORD PTR [rsp+0x70]
   14002b0e2:	mov    DWORD PTR [rsp+0x38],0x1
   14002b0ea:	mov    QWORD PTR [rax+0x130],rdx
   14002b0f1:	xor    ebx,ebx
   14002b0f3:	mov    QWORD PTR [rsp+0x30],rbx
   14002b0f8:	mov    DWORD PTR [rsp+0x28],ebx
   14002b0fc:	mov    QWORD PTR [rsp+0x20],rcx
   14002b101:	mov    rcx,QWORD PTR [rdi]
   14002b104:	mov    r8,rsi
   14002b107:	mov    rdx,rbp
   14002b10a:	call   0x140033ad0
   14002b10f:	call   0x14002e210
   14002b114:	mov    rcx,QWORD PTR [rsp+0x80]
   14002b11c:	mov    rbp,QWORD PTR [rsp+0x58]
   14002b121:	mov    rsi,QWORD PTR [rsp+0x60]
   14002b126:	mov    QWORD PTR [rax+0x138],rbx
   14002b12d:	lea    eax,[rbx+0x1]
   14002b130:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b135:	mov    DWORD PTR [rcx],0x1
   14002b13b:	add    rsp,0x40
   14002b13f:	pop    rdi
   14002b140:	ret    
   14002b141:	int3   
   14002b142:	int3   
   14002b143:	int3   
   14002b144:	int3   
   14002b145:	int3   
   14002b146:	int3   
   14002b147:	int3   
   14002b148:	int3   
   14002b149:	int3   
   14002b14a:	int3   
   14002b14b:	int3   
   14002b14c:	int3   
   14002b14d:	int3   
   14002b14e:	int3   
   14002b14f:	int3   
   14002b150:	mov    rax,rsp
   14002b153:	mov    QWORD PTR [rax+0x20],r9
   14002b157:	mov    QWORD PTR [rax+0x18],r8
   14002b15b:	mov    QWORD PTR [rax+0x10],rdx
   14002b15f:	mov    QWORD PTR [rax+0x8],rcx
   14002b163:	push   rbx
   14002b164:	sub    rsp,0x60
   14002b168:	mov    rbx,rcx
   14002b16b:	mov    DWORD PTR [rax-0x28],0x0
   14002b172:	mov    QWORD PTR [rax-0x20],rcx
   14002b176:	mov    QWORD PTR [rax-0x18],r8
   14002b17a:	call   0x14002e210
   14002b17f:	mov    r8,QWORD PTR [rax+0xe0]
   14002b186:	lea    rdx,[rsp+0x48]
   14002b18b:	mov    ecx,DWORD PTR [rbx]
   14002b18d:	call   r8
   14002b190:	mov    DWORD PTR [rsp+0x40],0x0
   14002b198:	jmp    0x14002b19a
   14002b19a:	mov    eax,DWORD PTR [rsp+0x40]
   14002b19e:	add    rsp,0x60
   14002b1a2:	pop    rbx
   14002b1a3:	ret    
   14002b1a4:	int3   
   14002b1a5:	int3   
   14002b1a6:	int3   
   14002b1a7:	int3   
   14002b1a8:	int3   
   14002b1a9:	int3   
   14002b1aa:	int3   
   14002b1ab:	int3   
   14002b1ac:	int3   
   14002b1ad:	int3   
   14002b1ae:	int3   
   14002b1af:	int3   
   14002b1b0:	rex push rbp
   14002b1b2:	sub    rsp,0x40
   14002b1b6:	mov    rbp,rdx
   14002b1b9:	lea    rax,[rbp+0x40]
   14002b1bd:	mov    QWORD PTR [rsp+0x30],rax
   14002b1c2:	mov    rax,QWORD PTR [rbp+0x90]
   14002b1c9:	mov    QWORD PTR [rsp+0x28],rax
   14002b1ce:	mov    rax,QWORD PTR [rbp+0x88]
   14002b1d5:	mov    QWORD PTR [rsp+0x20],rax
   14002b1da:	mov    r9,QWORD PTR [rbp+0x80]
   14002b1e1:	mov    r8,QWORD PTR [rbp+0x78]
   14002b1e5:	mov    rdx,QWORD PTR [rbp+0x70]
   14002b1e9:	call   0x14002b0a0
   14002b1ee:	add    rsp,0x40
   14002b1f2:	pop    rbp
   14002b1f3:	ret    
   14002b1f4:	int3   
   14002b1f5:	int3   
   14002b1f6:	int3   
   14002b1f7:	int3   
   14002b1f8:	int3   
   14002b1f9:	int3   
   14002b1fa:	int3   
   14002b1fb:	int3   
   14002b1fc:	int3   
   14002b1fd:	int3   
   14002b1fe:	int3   
   14002b1ff:	int3   
   14002b200:	mov    QWORD PTR [rsp+0x8],rbx
   14002b205:	mov    QWORD PTR [rsp+0x10],rbp
   14002b20a:	mov    QWORD PTR [rsp+0x18],rsi
   14002b20f:	push   rdi
   14002b210:	push   r12
   14002b212:	push   r13
   14002b214:	sub    rsp,0x20
   14002b218:	movsxd rsi,DWORD PTR [rdx+0xc]
   14002b21c:	mov    r13,QWORD PTR [rsp+0x70]
   14002b221:	mov    r12,rdx
   14002b224:	mov    rcx,r12
   14002b227:	mov    rdx,r13
   14002b22a:	mov    ebp,r9d
   14002b22d:	xor    edi,edi
   14002b22f:	call   0x140032380
   14002b234:	test   esi,esi
   14002b236:	mov    ebx,eax
   14002b238:	jne    0x14002b23f
   14002b23a:	call   0x140033d20
   14002b23f:	test   esi,esi
   14002b241:	mov    r10,QWORD PTR [rsp+0x68]
   14002b246:	mov    r9,QWORD PTR [rsp+0x60]
   14002b24b:	mov    DWORD PTR [r10],0xffffffff
   14002b252:	mov    DWORD PTR [r9],0xffffffff
   14002b259:	mov    r8d,esi
   14002b25c:	je     0x14002b287
   14002b25e:	movsxd rcx,DWORD PTR [r12+0x10]
   14002b263:	lea    rax,[rsi+rsi*4]
   14002b267:	lea    rcx,[rcx+rax*4]
   14002b26b:	mov    rax,QWORD PTR [r13+0x8]
   14002b26f:	lea    rdx,[rcx+rax*1-0xc]
   14002b274:	cmp    ebx,DWORD PTR [rdx-0x4]
   14002b277:	jle    0x14002b27d
   14002b279:	cmp    ebx,DWORD PTR [rdx]
   14002b27b:	jle    0x14002b287
   14002b27d:	sub    rdx,0x14
   14002b281:	add    r8d,0xffffffff
   14002b285:	jne    0x14002b274
   14002b287:	test   r8d,r8d
   14002b28a:	je     0x14002b2a1
   14002b28c:	lea    eax,[r8-0x1]
   14002b290:	lea    rdx,[rax+rax*4]
   14002b294:	movsxd rax,DWORD PTR [r12+0x10]
   14002b299:	lea    rdi,[rax+rdx*4]
   14002b29d:	add    rdi,QWORD PTR [r13+0x8]
   14002b2a1:	xor    edx,edx
   14002b2a3:	test   esi,esi
   14002b2a5:	je     0x14002b30e
   14002b2a7:	xor    r8d,r8d
   14002b2aa:	data16 xchg ax,ax
   14002b2ad:	data16 xchg ax,ax
   14002b2b0:	movsxd rcx,DWORD PTR [r12+0x10]
   14002b2b5:	add    rcx,QWORD PTR [r13+0x8]
   14002b2b9:	add    rcx,r8
   14002b2bc:	test   rdi,rdi
   14002b2bf:	je     0x14002b2d0
   14002b2c1:	mov    eax,DWORD PTR [rdi+0x4]
   14002b2c4:	cmp    DWORD PTR [rcx],eax
   14002b2c6:	jle    0x14002b2e8
   14002b2c8:	mov    eax,DWORD PTR [rdi+0x8]
   14002b2cb:	cmp    DWORD PTR [rcx+0x4],eax
   14002b2ce:	jg     0x14002b2e8
   14002b2d0:	cmp    ebp,DWORD PTR [rcx]
   14002b2d2:	jl     0x14002b2e8
   14002b2d4:	cmp    ebp,DWORD PTR [rcx+0x4]
   14002b2d7:	jg     0x14002b2e8
   14002b2d9:	cmp    DWORD PTR [r9],0xffffffff
   14002b2dd:	jne    0x14002b2e2
   14002b2df:	mov    DWORD PTR [r9],edx
   14002b2e2:	lea    eax,[rdx+0x1]
   14002b2e5:	mov    DWORD PTR [r10],eax
   14002b2e8:	add    edx,0x1
   14002b2eb:	add    r8,0x14
   14002b2ef:	cmp    edx,esi
   14002b2f1:	jb     0x14002b2b0
   14002b2f3:	mov    eax,DWORD PTR [r9]
   14002b2f6:	cmp    eax,0xffffffff
   14002b2f9:	je     0x14002b30e
   14002b2fb:	lea    rcx,[rax+rax*4]
   14002b2ff:	movsxd rax,DWORD PTR [r12+0x10]
   14002b304:	lea    rax,[rax+rcx*4]
   14002b308:	add    rax,QWORD PTR [r13+0x8]
   14002b30c:	jmp    0x14002b31e
   14002b30e:	mov    DWORD PTR [r9],0x0
   14002b315:	xor    eax,eax
   14002b317:	mov    DWORD PTR [r10],0x0
   14002b31e:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b323:	mov    rbp,QWORD PTR [rsp+0x48]
   14002b328:	mov    rsi,QWORD PTR [rsp+0x50]
   14002b32d:	add    rsp,0x20
   14002b331:	pop    r13
   14002b333:	pop    r12
   14002b335:	pop    rdi
   14002b336:	ret    
   14002b337:	int3   
   14002b338:	int3   
   14002b339:	int3   
   14002b33a:	int3   
   14002b33b:	int3   
   14002b33c:	int3   
   14002b33d:	int3   
   14002b33e:	int3   
   14002b33f:	int3   
   14002b340:	rex push rbx
   14002b342:	sub    rsp,0x20
   14002b346:	mov    rbx,rcx
   14002b349:	mov    QWORD PTR [rcx],rdx
   14002b34c:	call   0x14002e210
   14002b351:	cmp    rbx,QWORD PTR [rax+0x120]
   14002b358:	jae    0x14002b368
   14002b35a:	call   0x14002e210
   14002b35f:	mov    rcx,QWORD PTR [rax+0x120]
   14002b366:	jmp    0x14002b36a
   14002b368:	xor    ecx,ecx
   14002b36a:	mov    QWORD PTR [rbx+0x8],rcx
   14002b36e:	call   0x14002e210
   14002b373:	mov    QWORD PTR [rax+0x120],rbx
   14002b37a:	mov    rax,rbx
   14002b37d:	add    rsp,0x20
   14002b381:	pop    rbx
   14002b382:	ret    
   14002b383:	int3   
   14002b384:	int3   
   14002b385:	int3   
   14002b386:	int3   
   14002b387:	int3   
   14002b388:	int3   
   14002b389:	int3   
   14002b38a:	int3   
   14002b38b:	int3   
   14002b38c:	int3   
   14002b38d:	int3   
   14002b38e:	int3   
   14002b38f:	int3   
   14002b390:	rex push rbx
   14002b392:	sub    rsp,0x20
   14002b396:	mov    rbx,rcx
   14002b399:	call   0x14002e210
   14002b39e:	mov    rdx,QWORD PTR [rax+0x120]
   14002b3a5:	test   rdx,rdx
   14002b3a8:	je     0x14002b3be
   14002b3aa:	data16 xchg ax,ax
   14002b3ad:	data16 xchg ax,ax
   14002b3b0:	cmp    QWORD PTR [rdx],rbx
   14002b3b3:	je     0x14002b3c9
   14002b3b5:	mov    rdx,QWORD PTR [rdx+0x8]
   14002b3b9:	test   rdx,rdx
   14002b3bc:	jne    0x14002b3b0
   14002b3be:	mov    eax,0x1
   14002b3c3:	add    rsp,0x20
   14002b3c7:	pop    rbx
   14002b3c8:	ret    
   14002b3c9:	xor    eax,eax
   14002b3cb:	add    rsp,0x20
   14002b3cf:	pop    rbx
   14002b3d0:	ret    
   14002b3d1:	int3   
   14002b3d2:	int3   
   14002b3d3:	int3   
   14002b3d4:	int3   
   14002b3d5:	int3   
   14002b3d6:	int3   
   14002b3d7:	int3   
   14002b3d8:	int3   
   14002b3d9:	int3   
   14002b3da:	int3   
   14002b3db:	int3   
   14002b3dc:	int3   
   14002b3dd:	int3   
   14002b3de:	int3   
   14002b3df:	int3   
   14002b3e0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b3e5:	push   rdi
   14002b3e6:	sub    rsp,0x20
   14002b3ea:	mov    rdi,rcx
   14002b3ed:	call   0x14002e210
   14002b3f2:	cmp    rdi,QWORD PTR [rax+0x120]
   14002b3f9:	je     0x14002b400
   14002b3fb:	call   0x140033d20
   14002b400:	call   0x14002e210
   14002b405:	mov    rbx,QWORD PTR [rax+0x120]
   14002b40c:	test   rbx,rbx
   14002b40f:	je     0x14002b41f
   14002b411:	cmp    rdi,rbx
   14002b414:	je     0x14002b42e
   14002b416:	mov    rbx,QWORD PTR [rbx+0x8]
   14002b41a:	test   rbx,rbx
   14002b41d:	jne    0x14002b411
   14002b41f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b424:	add    rsp,0x20
   14002b428:	pop    rdi
   14002b429:	jmp    0x140033d20
   14002b42e:	call   0x14002e210
   14002b433:	mov    rcx,QWORD PTR [rbx+0x8]
   14002b437:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b43c:	mov    QWORD PTR [rax+0x120],rcx
   14002b443:	add    rsp,0x20
   14002b447:	pop    rdi
   14002b448:	ret    
   14002b449:	int3   
   14002b44a:	int3   
   14002b44b:	int3   
   14002b44c:	int3   
   14002b44d:	int3   
   14002b44e:	int3   
   14002b44f:	int3   
   14002b450:	mov    QWORD PTR [rsp+0x8],rbx
   14002b455:	mov    QWORD PTR [rsp+0x10],rbp
   14002b45a:	mov    QWORD PTR [rsp+0x18],rsi
   14002b45f:	push   rdi
   14002b460:	sub    rsp,0x5a0
   14002b467:	mov    rsi,rdx
   14002b46a:	mov    rbp,rcx
   14002b46d:	mov    rdi,r8
   14002b470:	lea    rcx,[rsp+0x30]
   14002b475:	lea    rdx,[rip+0x1cfb4]        # 0x140048430
   14002b47c:	mov    r8d,0x98
   14002b482:	mov    rbx,r9
   14002b485:	call   0x14002b7a0
   14002b48a:	mov    rax,QWORD PTR [rsp+0x5d0]
   14002b492:	mov    rdx,QWORD PTR [rsp+0x5e8]
   14002b49a:	mov    rcx,QWORD PTR [rbp+0x0]
   14002b49e:	mov    QWORD PTR [rsp+0x60],rax
   14002b4a3:	movsxd rax,DWORD PTR [rsp+0x5d8]
   14002b4ab:	lea    r11,[rip+0x773e]        # 0x140032bf0
   14002b4b2:	lea    r8,[rsp+0x30]
   14002b4b7:	mov    QWORD PTR [rsp+0x68],rax
   14002b4bc:	mov    rax,QWORD PTR [rsp+0x5e0]
   14002b4c4:	xor    r9d,r9d
   14002b4c7:	mov    QWORD PTR [rsp+0x78],rax
   14002b4cc:	movzx  eax,BYTE PTR [rsp+0x5f0]
   14002b4d4:	mov    QWORD PTR [rsp+0x50],r11
   14002b4d9:	mov    QWORD PTR [rsp+0x88],rax
   14002b4e1:	mov    rax,QWORD PTR [rdx+0x40]
   14002b4e5:	mov    rdx,QWORD PTR [rdx]
   14002b4e8:	mov    QWORD PTR [rsp+0x28],rax
   14002b4ed:	lea    rax,[rsp+0xd0]
   14002b4f5:	mov    QWORD PTR [rsp+0x58],rbx
   14002b4fa:	mov    QWORD PTR [rsp+0x70],rdi
   14002b4ff:	mov    QWORD PTR [rsp+0x80],rsi
   14002b507:	mov    QWORD PTR [rsp+0x90],0x19930520
   14002b513:	mov    QWORD PTR [rsp+0x20],rax
   14002b518:	call   0x14004091c
   14002b51d:	lea    r11,[rsp+0x5a0]
   14002b525:	mov    rbx,QWORD PTR [r11+0x10]
   14002b529:	mov    rbp,QWORD PTR [r11+0x18]
   14002b52d:	mov    rsi,QWORD PTR [r11+0x20]
   14002b531:	mov    rsp,r11
   14002b534:	pop    rdi
   14002b535:	ret    
   14002b536:	int3   
   14002b537:	int3   
   14002b538:	int3   
   14002b539:	int3   
   14002b53a:	int3   
   14002b53b:	int3   
   14002b53c:	int3   
   14002b53d:	int3   
   14002b53e:	int3   
   14002b53f:	int3   
   14002b540:	mov    QWORD PTR [rsp+0x8],rbx
   14002b545:	mov    QWORD PTR [rsp+0x18],rbp
   14002b54a:	mov    QWORD PTR [rsp+0x20],rsi
   14002b54f:	mov    QWORD PTR [rsp+0x10],rdx
   14002b554:	push   rdi
   14002b555:	push   r12
   14002b557:	push   r13
   14002b559:	push   r14
   14002b55b:	push   r15
   14002b55d:	sub    rsp,0x40
   14002b561:	mov    r14,QWORD PTR [r9+0x8]
   14002b565:	mov    rbp,QWORD PTR [r9]
   14002b568:	mov    r13,QWORD PTR [r9+0x38]
   14002b56c:	sub    rbp,r14
   14002b56f:	xor    edi,edi
   14002b571:	test   BYTE PTR [rcx+0x4],0x66
   14002b575:	mov    r15,r9
   14002b578:	mov    rsi,rdx
   14002b57b:	mov    r12,rcx
   14002b57e:	jne    0x14002b66a
   14002b584:	mov    QWORD PTR [rsp+0x30],rcx
   14002b589:	mov    QWORD PTR [rsp+0x38],r8
   14002b58e:	cmp    DWORD PTR [r13+0x0],edi
   14002b592:	jbe    0x14002b6d3
   14002b598:	lea    rbx,[r13+0xc]
   14002b59c:	data16 data16 xchg ax,ax
   14002b5a0:	mov    eax,DWORD PTR [rbx-0x8]
   14002b5a3:	cmp    rbp,rax
   14002b5a6:	jb     0x14002b653
   14002b5ac:	mov    eax,DWORD PTR [rbx-0x4]
   14002b5af:	cmp    rbp,rax
   14002b5b2:	jae    0x14002b653
   14002b5b8:	cmp    DWORD PTR [rbx+0x4],0x0
   14002b5bc:	je     0x14002b653
   14002b5c2:	mov    eax,DWORD PTR [rbx]
   14002b5c4:	cmp    eax,0x1
   14002b5c7:	je     0x14002b5e0
   14002b5c9:	lea    rcx,[rsp+0x30]
   14002b5ce:	add    rax,r14
   14002b5d1:	mov    rdx,rsi
   14002b5d4:	call   rax
   14002b5d6:	test   eax,eax
   14002b5d8:	js     0x14002b666
   14002b5de:	jle    0x14002b653
   14002b5e0:	cmp    DWORD PTR [r12],0xe06d7363
   14002b5e8:	jne    0x14002b612
   14002b5ea:	cmp    QWORD PTR [rip+0x1d616],0x0        # 0x140048c08
   14002b5f2:	je     0x14002b612
   14002b5f4:	lea    rcx,[rip+0x1d60d]        # 0x140048c08
   14002b5fb:	call   0x140033e70
   14002b600:	test   eax,eax
   14002b602:	je     0x14002b612
   14002b604:	mov    edx,0x1
   14002b609:	mov    rcx,r12
   14002b60c:	call   QWORD PTR [rip+0x1d5f6]        # 0x140048c08
   14002b612:	mov    ecx,DWORD PTR [rbx+0x4]
   14002b615:	mov    r8d,0x1
   14002b61b:	mov    rdx,rsi
   14002b61e:	add    rcx,r14
   14002b621:	call   0x140033db0
   14002b626:	mov    rax,QWORD PTR [r15+0x40]
   14002b62a:	mov    edx,DWORD PTR [rbx+0x4]
   14002b62d:	movsxd r9,DWORD PTR [r12]
   14002b631:	mov    QWORD PTR [rsp+0x28],rax
   14002b636:	mov    rax,QWORD PTR [r15+0x28]
   14002b63a:	add    rdx,r14
   14002b63d:	mov    r8,r12
   14002b640:	mov    rcx,rsi
   14002b643:	mov    QWORD PTR [rsp+0x20],rax
   14002b648:	call   QWORD PTR [rip+0x17b8a]        # 0x1400431d8
   14002b64e:	call   0x140033de0
   14002b653:	add    edi,0x1
   14002b656:	add    rbx,0x10
   14002b65a:	cmp    edi,DWORD PTR [r13+0x0]
   14002b65e:	jb     0x14002b5a0
   14002b664:	jmp    0x14002b6d3
   14002b666:	xor    eax,eax
   14002b668:	jmp    0x14002b6d8
   14002b66a:	mov    rsi,QWORD PTR [r9+0x20]
   14002b66e:	sub    rsi,r14
   14002b671:	cmp    DWORD PTR [r13+0x0],edi
   14002b675:	jbe    0x14002b6d3
   14002b677:	lea    rbx,[r13+0x10]
   14002b67b:	xchg   ax,ax
   14002b67d:	data16 xchg ax,ax
   14002b680:	mov    ecx,DWORD PTR [rbx-0xc]
   14002b683:	cmp    rbp,rcx
   14002b686:	jb     0x14002b6c6
   14002b688:	mov    eax,DWORD PTR [rbx-0x8]
   14002b68b:	cmp    rbp,rax
   14002b68e:	jae    0x14002b6c6
   14002b690:	cmp    rsi,rcx
   14002b693:	jb     0x14002b6a2
   14002b695:	cmp    rsi,rax
   14002b698:	ja     0x14002b6a2
   14002b69a:	test   BYTE PTR [r12+0x4],0x20
   14002b6a0:	jne    0x14002b6d3
   14002b6a2:	mov    ecx,DWORD PTR [rbx]
   14002b6a4:	test   ecx,ecx
   14002b6a6:	je     0x14002b6af
   14002b6a8:	cmp    rsi,rcx
   14002b6ab:	je     0x14002b6d3
   14002b6ad:	jmp    0x14002b6c6
   14002b6af:	mov    rdx,QWORD PTR [rsp+0x78]
   14002b6b4:	add    rax,r14
   14002b6b7:	mov    cl,0x1
   14002b6b9:	mov    QWORD PTR [r15],rax
   14002b6bc:	mov    r8d,DWORD PTR [rbx-0x4]
   14002b6c0:	add    r8,r14
   14002b6c3:	call   r8
   14002b6c6:	add    edi,0x1
   14002b6c9:	add    rbx,0x10
   14002b6cd:	cmp    edi,DWORD PTR [r13+0x0]
   14002b6d1:	jb     0x14002b680
   14002b6d3:	mov    eax,0x1
   14002b6d8:	lea    r11,[rsp+0x40]
   14002b6dd:	mov    rbx,QWORD PTR [r11+0x30]
   14002b6e1:	mov    rbp,QWORD PTR [r11+0x40]
   14002b6e5:	mov    rsi,QWORD PTR [r11+0x48]
   14002b6e9:	mov    rsp,r11
   14002b6ec:	pop    r15
   14002b6ee:	pop    r14
   14002b6f0:	pop    r13
   14002b6f2:	pop    r12
   14002b6f4:	pop    rdi
   14002b6f5:	ret    
   14002b6f6:	int3   
   14002b6f7:	int3   
   14002b6f8:	int3   
   14002b6f9:	int3   
   14002b6fa:	int3   
   14002b6fb:	int3   
   14002b6fc:	int3   
   14002b6fd:	int3   
   14002b6fe:	int3   
   14002b6ff:	int3   
   14002b700:	mov    QWORD PTR [rsp+0x8],rbx
   14002b705:	mov    QWORD PTR [rsp+0x10],rbp
   14002b70a:	mov    QWORD PTR [rsp+0x18],rsi
   14002b70f:	mov    QWORD PTR [rsp+0x20],rdi
   14002b714:	push   r12
   14002b716:	sub    rsp,0x20
   14002b71a:	mov    rbx,QWORD PTR [r9+0x38]
   14002b71e:	mov    rsi,rdx
   14002b721:	mov    r12,r8
   14002b724:	mov    rbp,rcx
   14002b727:	lea    r8,[rbx+0x4]
   14002b72b:	mov    rdx,r9
   14002b72e:	mov    rcx,rsi
   14002b731:	mov    rdi,r9
   14002b734:	call   0x14002ab30
   14002b739:	test   BYTE PTR [rbp+0x4],0x66
   14002b73d:	mov    r11d,DWORD PTR [rbx+0x4]
   14002b741:	jne    0x14002b749
   14002b743:	and    r11d,0x1
   14002b747:	jmp    0x14002b74d
   14002b749:	and    r11d,0x2
   14002b74d:	test   r11d,r11d
   14002b750:	je     0x14002b765
   14002b752:	mov    r9,rdi
   14002b755:	mov    r8,r12
   14002b758:	mov    rdx,rsi
   14002b75b:	mov    rcx,rbp
   14002b75e:	call   0x14002b010
   14002b763:	jmp    0x14002b76a
   14002b765:	mov    eax,0x1
   14002b76a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b76f:	mov    rbp,QWORD PTR [rsp+0x38]
   14002b774:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b779:	mov    rdi,QWORD PTR [rsp+0x48]
   14002b77e:	add    rsp,0x20
   14002b782:	pop    r12
   14002b784:	ret    
   14002b785:	int3   
   14002b786:	int3   
   14002b787:	int3   
   14002b788:	int3   
   14002b789:	int3   
   14002b78a:	int3   
   14002b78b:	int3   
   14002b78c:	int3   
   14002b78d:	int3   
   14002b78e:	int3   
   14002b78f:	int3   
   14002b790:	int3   
   14002b791:	int3   
   14002b792:	int3   
   14002b793:	int3   
   14002b794:	int3   
   14002b795:	int3   
   14002b796:	data16 data16 xchg ax,ax
   14002b79a:	data16 data16 xchg ax,ax
   14002b79e:	xchg   ax,ax
   14002b7a0:	mov    r11,rcx
   14002b7a3:	sub    rdx,rcx
   14002b7a6:	jb     0x14002b94a
   14002b7ac:	cmp    r8,0x8
   14002b7b0:	jb     0x14002b813
   14002b7b2:	test   cl,0x7
   14002b7b5:	je     0x14002b7ed
   14002b7b7:	test   cl,0x1
   14002b7ba:	je     0x14002b7c7
   14002b7bc:	mov    al,BYTE PTR [rdx+rcx*1]
   14002b7bf:	dec    r8
   14002b7c2:	mov    BYTE PTR [rcx],al
   14002b7c4:	inc    rcx
   14002b7c7:	test   cl,0x2
   14002b7ca:	je     0x14002b7db
   14002b7cc:	mov    ax,WORD PTR [rdx+rcx*1]
   14002b7d0:	sub    r8,0x2
   14002b7d4:	mov    WORD PTR [rcx],ax
   14002b7d7:	add    rcx,0x2
   14002b7db:	test   cl,0x4
   14002b7de:	je     0x14002b7ed
   14002b7e0:	mov    eax,DWORD PTR [rdx+rcx*1]
   14002b7e3:	sub    r8,0x4
   14002b7e7:	mov    DWORD PTR [rcx],eax
   14002b7e9:	add    rcx,0x4
   14002b7ed:	mov    r9,r8
   14002b7f0:	shr    r9,0x5
   14002b7f4:	jne    0x14002b847
   14002b7f6:	mov    r9,r8
   14002b7f9:	shr    r9,0x3
   14002b7fd:	je     0x14002b813
   14002b7ff:	mov    rax,QWORD PTR [rdx+rcx*1]
   14002b803:	mov    QWORD PTR [rcx],rax
   14002b806:	add    rcx,0x8
   14002b80a:	dec    r9
   14002b80d:	jne    0x14002b7ff
   14002b80f:	and    r8,0x7
   14002b813:	test   r8,r8
   14002b816:	jne    0x14002b820
   14002b818:	mov    rax,r11
   14002b81b:	ret    
   14002b81c:	data16 data16 xchg ax,ax
   14002b820:	mov    al,BYTE PTR [rdx+rcx*1]
   14002b823:	mov    BYTE PTR [rcx],al
   14002b825:	inc    rcx
   14002b828:	dec    r8
   14002b82b:	jne    0x14002b820
   14002b82d:	mov    rax,r11
   14002b830:	ret    
   14002b831:	data16 data16 xchg ax,ax
   14002b835:	data16 data16 xchg ax,ax
   14002b839:	data16 data16 xchg ax,ax
   14002b83d:	data16 xchg ax,ax
   14002b840:	data16 data16 xchg ax,ax
   14002b844:	data16 xchg ax,ax
   14002b847:	cmp    r9,0x2000
   14002b84e:	jae    0x14002b892
   14002b850:	mov    rax,QWORD PTR [rdx+rcx*1]
   14002b854:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14002b859:	add    rcx,0x20
   14002b85d:	mov    QWORD PTR [rcx-0x20],rax
   14002b861:	mov    QWORD PTR [rcx-0x18],r10
   14002b865:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14002b86a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14002b86f:	dec    r9
   14002b872:	mov    QWORD PTR [rcx-0x10],rax
   14002b876:	mov    QWORD PTR [rcx-0x8],r10
   14002b87a:	jne    0x14002b850
   14002b87c:	and    r8,0x1f
   14002b880:	jmp    0x14002b7f6
   14002b885:	data16 data16 xchg ax,ax
   14002b889:	data16 data16 xchg ax,ax
   14002b88d:	data16 xchg ax,ax
   14002b890:	xchg   ax,ax
   14002b892:	cmp    rdx,0x1000
   14002b899:	jb     0x14002b850
   14002b89b:	mov    eax,0x20
   14002b8a0:	prefetchnta BYTE PTR [rdx+rcx*1]
   14002b8a4:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14002b8a9:	add    rcx,0x80
   14002b8b0:	dec    eax
   14002b8b2:	jne    0x14002b8a0
   14002b8b4:	sub    rcx,0x1000
   14002b8bb:	mov    eax,0x40
   14002b8c0:	mov    r9,QWORD PTR [rdx+rcx*1]
   14002b8c4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14002b8c9:	movnti QWORD PTR [rcx],r9
   14002b8cd:	movnti QWORD PTR [rcx+0x8],r10
   14002b8d2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   14002b8d7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14002b8dc:	movnti QWORD PTR [rcx+0x10],r9
   14002b8e1:	movnti QWORD PTR [rcx+0x18],r10
   14002b8e6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14002b8eb:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   14002b8f0:	add    rcx,0x40
   14002b8f4:	movnti QWORD PTR [rcx-0x20],r9
   14002b8f9:	movnti QWORD PTR [rcx-0x18],r10
   14002b8fe:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   14002b903:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14002b908:	dec    eax
   14002b90a:	movnti QWORD PTR [rcx-0x10],r9
   14002b90f:	movnti QWORD PTR [rcx-0x8],r10
   14002b914:	jne    0x14002b8c0
   14002b916:	sub    r8,0x1000
   14002b91d:	cmp    r8,0x1000
   14002b924:	jae    0x14002b89b
   14002b92a:	lock or BYTE PTR [rsp],0x0
   14002b92f:	jmp    0x14002b7ed
   14002b934:	data16 data16 xchg ax,ax
   14002b938:	data16 data16 xchg ax,ax
   14002b93c:	data16 data16 xchg ax,ax
   14002b940:	data16 data16 xchg ax,ax
   14002b944:	data16 data16 xchg ax,ax
   14002b948:	xchg   ax,ax
   14002b94a:	add    rcx,r8
   14002b94d:	cmp    r8,0x8
   14002b951:	jb     0x14002b9b4
   14002b953:	test   cl,0x7
   14002b956:	je     0x14002b98e
   14002b958:	test   cl,0x1
   14002b95b:	je     0x14002b968
   14002b95d:	dec    rcx
   14002b960:	mov    al,BYTE PTR [rdx+rcx*1]
   14002b963:	dec    r8
   14002b966:	mov    BYTE PTR [rcx],al
   14002b968:	test   cl,0x2
   14002b96b:	je     0x14002b97c
   14002b96d:	sub    rcx,0x2
   14002b971:	mov    ax,WORD PTR [rdx+rcx*1]
   14002b975:	sub    r8,0x2
   14002b979:	mov    WORD PTR [rcx],ax
   14002b97c:	test   cl,0x4
   14002b97f:	je     0x14002b98e
   14002b981:	sub    rcx,0x4
   14002b985:	mov    eax,DWORD PTR [rdx+rcx*1]
   14002b988:	sub    r8,0x4
   14002b98c:	mov    DWORD PTR [rcx],eax
   14002b98e:	mov    r9,r8
   14002b991:	shr    r9,0x5
   14002b995:	jne    0x14002b9e7
   14002b997:	mov    r9,r8
   14002b99a:	shr    r9,0x3
   14002b99e:	je     0x14002b9b4
   14002b9a0:	sub    rcx,0x8
   14002b9a4:	mov    rax,QWORD PTR [rdx+rcx*1]
   14002b9a8:	dec    r9
   14002b9ab:	mov    QWORD PTR [rcx],rax
   14002b9ae:	jne    0x14002b9a0
   14002b9b0:	and    r8,0x7
   14002b9b4:	test   r8,r8
   14002b9b7:	jne    0x14002b9c0
   14002b9b9:	mov    rax,r11
   14002b9bc:	ret    
   14002b9bd:	data16 xchg ax,ax
   14002b9c0:	dec    rcx
   14002b9c3:	mov    al,BYTE PTR [rdx+rcx*1]
   14002b9c6:	dec    r8
   14002b9c9:	mov    BYTE PTR [rcx],al
   14002b9cb:	jne    0x14002b9c0
   14002b9cd:	mov    rax,r11
   14002b9d0:	ret    
   14002b9d1:	data16 data16 xchg ax,ax
   14002b9d5:	data16 data16 xchg ax,ax
   14002b9d9:	data16 data16 xchg ax,ax
   14002b9dd:	data16 xchg ax,ax
   14002b9e0:	data16 data16 xchg ax,ax
   14002b9e4:	data16 xchg ax,ax
   14002b9e7:	cmp    r9,0x2000
   14002b9ee:	jae    0x14002ba32
   14002b9f0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14002b9f5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14002b9fa:	sub    rcx,0x20
   14002b9fe:	mov    QWORD PTR [rcx+0x18],rax
   14002ba02:	mov    QWORD PTR [rcx+0x10],r10
   14002ba06:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14002ba0b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14002ba0f:	dec    r9
   14002ba12:	mov    QWORD PTR [rcx+0x8],rax
   14002ba16:	mov    QWORD PTR [rcx],r10
   14002ba19:	jne    0x14002b9f0
   14002ba1b:	and    r8,0x1f
   14002ba1f:	jmp    0x14002b997
   14002ba24:	data16 data16 xchg ax,ax
   14002ba28:	data16 data16 xchg ax,ax
   14002ba2c:	data16 data16 xchg ax,ax
   14002ba30:	xchg   ax,ax
   14002ba32:	cmp    rdx,0xfffffffffffff000
   14002ba39:	ja     0x14002b9f0
   14002ba3b:	mov    eax,0x20
   14002ba40:	sub    rcx,0x80
   14002ba47:	prefetchnta BYTE PTR [rdx+rcx*1]
   14002ba4b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14002ba50:	dec    eax
   14002ba52:	jne    0x14002ba40
   14002ba54:	add    rcx,0x1000
   14002ba5b:	mov    eax,0x40
   14002ba60:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   14002ba65:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14002ba6a:	movnti QWORD PTR [rcx-0x8],r9
   14002ba6f:	movnti QWORD PTR [rcx-0x10],r10
   14002ba74:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   14002ba79:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14002ba7e:	movnti QWORD PTR [rcx-0x18],r9
   14002ba83:	movnti QWORD PTR [rcx-0x20],r10
   14002ba88:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14002ba8d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   14002ba92:	sub    rcx,0x40
   14002ba96:	movnti QWORD PTR [rcx+0x18],r9
   14002ba9b:	movnti QWORD PTR [rcx+0x10],r10
   14002baa0:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   14002baa5:	mov    r10,QWORD PTR [rdx+rcx*1]
   14002baa9:	dec    eax
   14002baab:	movnti QWORD PTR [rcx+0x8],r9
   14002bab0:	movnti QWORD PTR [rcx],r10
   14002bab4:	jne    0x14002ba60
   14002bab6:	sub    r8,0x1000
   14002babd:	cmp    r8,0x1000
   14002bac4:	jae    0x14002ba3b
   14002baca:	lock or BYTE PTR [rsp],0x0
   14002bacf:	jmp    0x14002b98e
   14002bad4:	int3   
   14002bad5:	int3   
   14002bad6:	int3   
   14002bad7:	int3   
   14002bad8:	int3   
   14002bad9:	int3   
   14002bada:	int3   
   14002badb:	int3   
   14002badc:	int3   
   14002badd:	int3   
   14002bade:	int3   
   14002badf:	int3   
   14002bae0:	movzx  r8d,WORD PTR [rdx]
   14002bae4:	movzx  eax,WORD PTR [rcx]
   14002bae7:	sub    eax,r8d
   14002baea:	jne    0x14002bb0c
   14002baec:	data16 data16 xchg ax,ax
   14002baf0:	test   r8w,r8w
   14002baf4:	je     0x14002bb0c
   14002baf6:	movzx  r8d,WORD PTR [rdx+0x2]
   14002bafb:	movzx  eax,WORD PTR [rcx+0x2]
   14002baff:	add    rcx,0x2
   14002bb03:	add    rdx,0x2
   14002bb07:	sub    eax,r8d
   14002bb0a:	je     0x14002baf0
   14002bb0c:	test   eax,eax
   14002bb0e:	jns    0x14002bb14
   14002bb10:	or     eax,0xffffffff
   14002bb13:	ret    
   14002bb14:	mov    ecx,0x1
   14002bb19:	test   eax,eax
   14002bb1b:	cmovg  eax,ecx
   14002bb1e:	ret    
   14002bb1f:	int3   
   14002bb20:	rex push rbx
   14002bb22:	sub    rsp,0x60
   14002bb26:	mov    rax,QWORD PTR [rip+0x1c9a3]        # 0x1400484d0
   14002bb2d:	mov    rbx,rdx
   14002bb30:	lea    rdx,[rsp+0x20]
   14002bb35:	mov    QWORD PTR [rdx],rax
   14002bb38:	mov    rax,QWORD PTR [rip+0x1c999]        # 0x1400484d8
   14002bb3f:	mov    QWORD PTR [rdx+0x8],rax
   14002bb43:	mov    rax,QWORD PTR [rip+0x1c996]        # 0x1400484e0
   14002bb4a:	mov    QWORD PTR [rdx+0x10],rax
   14002bb4e:	mov    rax,QWORD PTR [rip+0x1c993]        # 0x1400484e8
   14002bb55:	mov    QWORD PTR [rdx+0x18],rax
   14002bb59:	mov    rax,QWORD PTR [rip+0x1c990]        # 0x1400484f0
   14002bb60:	mov    QWORD PTR [rdx+0x20],rax
   14002bb64:	mov    rax,QWORD PTR [rip+0x1c98d]        # 0x1400484f8
   14002bb6b:	mov    QWORD PTR [rdx+0x28],rax
   14002bb6f:	mov    rax,QWORD PTR [rip+0x1c98a]        # 0x140048500
   14002bb76:	mov    QWORD PTR [rdx+0x30],rax
   14002bb7a:	mov    rax,QWORD PTR [rip+0x1c987]        # 0x140048508
   14002bb81:	mov    QWORD PTR [rdx+0x38],rax
   14002bb85:	mov    QWORD PTR [rsp+0x48],rcx
   14002bb8a:	lea    rdx,[rsp+0x70]
   14002bb8f:	mov    rcx,rbx
   14002bb92:	mov    QWORD PTR [rsp+0x50],rbx
   14002bb97:	call   0x140040922
   14002bb9c:	test   rbx,rbx
   14002bb9f:	mov    r11,rax
   14002bba2:	mov    QWORD PTR [rsp+0x70],rax
   14002bba7:	mov    QWORD PTR [rsp+0x58],rax
   14002bbac:	je     0x14002bbcc
   14002bbae:	test   BYTE PTR [rbx],0x8
   14002bbb1:	mov    ecx,0x1994000
   14002bbb6:	je     0x14002bbbe
   14002bbb8:	mov    DWORD PTR [rsp+0x40],ecx
   14002bbbc:	jmp    0x14002bbcc
   14002bbbe:	mov    eax,DWORD PTR [rsp+0x40]
   14002bbc2:	test   r11,r11
   14002bbc5:	cmove  eax,ecx
   14002bbc8:	mov    DWORD PTR [rsp+0x40],eax
   14002bbcc:	mov    r8d,DWORD PTR [rsp+0x38]
   14002bbd1:	mov    edx,DWORD PTR [rsp+0x24]
   14002bbd5:	mov    ecx,DWORD PTR [rsp+0x20]
   14002bbd9:	lea    r9,[rsp+0x40]
   14002bbde:	call   QWORD PTR [rip+0x175fc]        # 0x1400431e0
   14002bbe4:	add    rsp,0x60
   14002bbe8:	pop    rbx
   14002bbe9:	ret    
   14002bbea:	int3   
   14002bbeb:	int3   
   14002bbec:	int3   
   14002bbed:	int3   
   14002bbee:	int3   
   14002bbef:	int3   
   14002bbf0:	mov    QWORD PTR [rsp+0x18],r8
   14002bbf5:	mov    QWORD PTR [rsp+0x20],r9
   14002bbfa:	sub    rsp,0x38
   14002bbfe:	lea    rax,[rsp+0x58]
   14002bc03:	xor    r9d,r9d
   14002bc06:	mov    QWORD PTR [rsp+0x20],rax
   14002bc0b:	call   0x140029e80
   14002bc10:	add    rsp,0x38
   14002bc14:	ret    
   14002bc15:	int3   
   14002bc16:	int3   
   14002bc17:	int3   
   14002bc18:	int3   
   14002bc19:	int3   
   14002bc1a:	int3   
   14002bc1b:	int3   
   14002bc1c:	int3   
   14002bc1d:	int3   
   14002bc1e:	int3   
   14002bc1f:	int3   
   14002bc20:	mov    QWORD PTR [rsp+0x20],r9
   14002bc25:	sub    rsp,0x38
   14002bc29:	lea    rax,[rsp+0x60]
   14002bc2e:	mov    QWORD PTR [rsp+0x28],rax
   14002bc33:	mov    QWORD PTR [rsp+0x20],0x0
   14002bc3c:	call   0x140029fa0
   14002bc41:	add    rsp,0x38
   14002bc45:	ret    
   14002bc46:	int3   
   14002bc47:	int3   
   14002bc48:	int3   
   14002bc49:	int3   
   14002bc4a:	int3   
   14002bc4b:	int3   
   14002bc4c:	int3   
   14002bc4d:	int3   
   14002bc4e:	int3   
   14002bc4f:	int3   
   14002bc50:	lea    r8,[rip+0x2f339]        # 0x14005af90
   14002bc57:	xor    edx,edx
   14002bc59:	mov    rax,r8
   14002bc5c:	data16 data16 xchg ax,ax
   14002bc60:	cmp    ecx,DWORD PTR [rax]
   14002bc62:	je     0x14002bc95
   14002bc64:	add    edx,0x1
   14002bc67:	add    rax,0x8
   14002bc6b:	cmp    edx,0x2d
   14002bc6e:	jb     0x14002bc60
   14002bc70:	lea    eax,[rcx-0x13]
   14002bc73:	cmp    eax,0x11
   14002bc76:	ja     0x14002bc7e
   14002bc78:	mov    eax,0xd
   14002bc7d:	ret    
   14002bc7e:	add    ecx,0xffffff44
   14002bc84:	mov    eax,0x16
   14002bc89:	mov    edx,0x8
   14002bc8e:	cmp    ecx,0xe
   14002bc91:	cmovbe eax,edx
   14002bc94:	ret    
   14002bc95:	movsxd rax,edx
   14002bc98:	mov    eax,DWORD PTR [r8+rax*8+0x4]
   14002bc9d:	ret    
   14002bc9e:	int3   
   14002bc9f:	int3   
   14002bca0:	sub    rsp,0x28
   14002bca4:	call   0x14002e180
   14002bca9:	test   rax,rax
   14002bcac:	jne    0x14002bcba
   14002bcae:	lea    rax,[rip+0x2f443]        # 0x14005b0f8
   14002bcb5:	add    rsp,0x28
   14002bcb9:	ret    
   14002bcba:	add    rax,0x10
   14002bcbe:	add    rsp,0x28
   14002bcc2:	ret    
   14002bcc3:	int3   
   14002bcc4:	int3   
   14002bcc5:	int3   
   14002bcc6:	int3   
   14002bcc7:	int3   
   14002bcc8:	int3   
   14002bcc9:	int3   
   14002bcca:	int3   
   14002bccb:	int3   
   14002bccc:	int3   
   14002bccd:	int3   
   14002bcce:	int3   
   14002bccf:	int3   
   14002bcd0:	sub    rsp,0x28
   14002bcd4:	call   0x14002e180
   14002bcd9:	test   rax,rax
   14002bcdc:	jne    0x14002bcea
   14002bcde:	lea    rax,[rip+0x2f417]        # 0x14005b0fc
   14002bce5:	add    rsp,0x28
   14002bce9:	ret    
   14002bcea:	add    rax,0x14
   14002bcee:	add    rsp,0x28
   14002bcf2:	ret    
   14002bcf3:	int3   
   14002bcf4:	int3   
   14002bcf5:	int3   
   14002bcf6:	int3   
   14002bcf7:	int3   
   14002bcf8:	int3   
   14002bcf9:	int3   
   14002bcfa:	int3   
   14002bcfb:	int3   
   14002bcfc:	int3   
   14002bcfd:	int3   
   14002bcfe:	int3   
   14002bcff:	int3   
   14002bd00:	rex push rbx
   14002bd02:	sub    rsp,0x20
   14002bd06:	mov    ebx,ecx
   14002bd08:	call   0x14002e180
   14002bd0d:	test   rax,rax
   14002bd10:	jne    0x14002bd1b
   14002bd12:	lea    rax,[rip+0x2f3e3]        # 0x14005b0fc
   14002bd19:	jmp    0x14002bd1f
   14002bd1b:	add    rax,0x14
   14002bd1f:	lea    rdx,[rip+0x2f26a]        # 0x14005af90
   14002bd26:	mov    DWORD PTR [rax],ebx
   14002bd28:	xor    ecx,ecx
   14002bd2a:	mov    rax,rdx
   14002bd2d:	data16 xchg ax,ax
   14002bd30:	cmp    ebx,DWORD PTR [rax]
   14002bd32:	je     0x14002bd67
   14002bd34:	add    ecx,0x1
   14002bd37:	add    rax,0x8
   14002bd3b:	cmp    ecx,0x2d
   14002bd3e:	jb     0x14002bd30
   14002bd40:	lea    eax,[rbx-0x13]
   14002bd43:	cmp    eax,0x11
   14002bd46:	ja     0x14002bd4f
   14002bd48:	mov    ebx,0xd
   14002bd4d:	jmp    0x14002bd6e
   14002bd4f:	lea    eax,[rbx-0xbc]
   14002bd55:	mov    ecx,0x8
   14002bd5a:	mov    ebx,0x16
   14002bd5f:	cmp    eax,0xe
   14002bd62:	cmovbe ebx,ecx
   14002bd65:	jmp    0x14002bd6e
   14002bd67:	movsxd rax,ecx
   14002bd6a:	mov    ebx,DWORD PTR [rdx+rax*8+0x4]
   14002bd6e:	call   0x14002e180
   14002bd73:	test   rax,rax
   14002bd76:	jne    0x14002bd84
   14002bd78:	mov    DWORD PTR [rip+0x2f37a],ebx        # 0x14005b0f8
   14002bd7e:	add    rsp,0x20
   14002bd82:	pop    rbx
   14002bd83:	ret    
   14002bd84:	mov    DWORD PTR [rax+0x10],ebx
   14002bd87:	add    rsp,0x20
   14002bd8b:	pop    rbx
   14002bd8c:	ret    
   14002bd8d:	int3   
   14002bd8e:	int3   
   14002bd8f:	int3   
   14002bd90:	sub    rsp,0x38
   14002bd94:	test   r9,r9
   14002bd97:	mov    r11,rdx
   14002bd9a:	mov    r10,rcx
   14002bd9d:	jne    0x14002bdb0
   14002bd9f:	test   rcx,rcx
   14002bda2:	jne    0x14002bdb5
   14002bda4:	test   rdx,rdx
   14002bda7:	jne    0x14002bdd3
   14002bda9:	xor    eax,eax
   14002bdab:	add    rsp,0x38
   14002bdaf:	ret    
   14002bdb0:	test   rcx,rcx
   14002bdb3:	je     0x14002bdd3
   14002bdb5:	test   rdx,rdx
   14002bdb8:	je     0x14002bdd3
   14002bdba:	test   r9,r9
   14002bdbd:	jne    0x14002bdca
   14002bdbf:	mov    WORD PTR [rcx],r9w
   14002bdc3:	xor    eax,eax
   14002bdc5:	add    rsp,0x38
   14002bdc9:	ret    
   14002bdca:	test   r8,r8
   14002bdcd:	jne    0x14002be00
   14002bdcf:	mov    WORD PTR [rcx],r8w
   14002bdd3:	call   0x14002bca0
   14002bdd8:	xor    r9d,r9d
   14002bddb:	xor    r8d,r8d
   14002bdde:	xor    edx,edx
   14002bde0:	xor    ecx,ecx
   14002bde2:	mov    QWORD PTR [rsp+0x20],0x0
   14002bdeb:	mov    DWORD PTR [rax],0x16
   14002bdf1:	call   0x14002e900
   14002bdf6:	mov    eax,0x16
   14002bdfb:	add    rsp,0x38
   14002bdff:	ret    
   14002be00:	cmp    r9,0xffffffffffffffff
   14002be04:	mov    rdx,rcx
   14002be07:	mov    rcx,r11
   14002be0a:	jne    0x14002be30
   14002be0c:	data16 data16 xchg ax,ax
   14002be10:	movzx  eax,WORD PTR [r8]
   14002be14:	add    rdx,0x2
   14002be18:	add    r8,0x2
   14002be1c:	test   ax,ax
   14002be1f:	mov    WORD PTR [rdx-0x2],ax
   14002be23:	je     0x14002be5a
   14002be25:	sub    rcx,0x1
   14002be29:	jne    0x14002be10
   14002be2b:	jmp    0x14002be5a
   14002be2d:	data16 xchg ax,ax
   14002be30:	movzx  eax,WORD PTR [r8]
   14002be34:	add    rdx,0x2
   14002be38:	add    r8,0x2
   14002be3c:	test   ax,ax
   14002be3f:	mov    WORD PTR [rdx-0x2],ax
   14002be43:	je     0x14002be51
   14002be45:	sub    rcx,0x1
   14002be49:	je     0x14002be51
   14002be4b:	sub    r9,0x1
   14002be4f:	jne    0x14002be30
   14002be51:	test   r9,r9
   14002be54:	jne    0x14002be5a
   14002be56:	mov    WORD PTR [rdx],r9w
   14002be5a:	test   rcx,rcx
   14002be5d:	jne    0x14002bda9
   14002be63:	cmp    r9,0xffffffffffffffff
   14002be67:	jne    0x14002be77
   14002be69:	mov    WORD PTR [r10+r11*2-0x2],cx
   14002be6f:	lea    eax,[rcx+0x50]
   14002be72:	add    rsp,0x38
   14002be76:	ret    
   14002be77:	mov    WORD PTR [r10],0x0
   14002be7d:	call   0x14002bca0
   14002be82:	xor    r9d,r9d
   14002be85:	xor    r8d,r8d
   14002be88:	xor    edx,edx
   14002be8a:	xor    ecx,ecx
   14002be8c:	mov    DWORD PTR [rax],0x22
   14002be92:	mov    QWORD PTR [rsp+0x20],0x0
   14002be9b:	call   0x14002e900
   14002bea0:	mov    eax,0x22
   14002bea5:	add    rsp,0x38
   14002bea9:	ret    
   14002beaa:	int3   
   14002beab:	int3   
   14002beac:	int3   
   14002bead:	int3   
   14002beae:	int3   
   14002beaf:	int3   
   14002beb0:	mov    QWORD PTR [rsp+0x18],rbx
   14002beb5:	push   rdi
   14002beb6:	sub    rsp,0x20
   14002beba:	test   rcx,rcx
   14002bebd:	mov    rbx,rdx
   14002bec0:	mov    rdi,rcx
   14002bec3:	jne    0x14002bed7
   14002bec5:	mov    rcx,rdx
   14002bec8:	mov    rbx,QWORD PTR [rsp+0x40]
   14002becd:	add    rsp,0x20
   14002bed1:	pop    rdi
   14002bed2:	jmp    0x14002a110
   14002bed7:	test   rdx,rdx
   14002beda:	jne    0x14002beee
   14002bedc:	call   0x14002a380
   14002bee1:	xor    eax,eax
   14002bee3:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bee8:	add    rsp,0x20
   14002beec:	pop    rdi
   14002beed:	ret    
   14002beee:	cmp    rdx,0xffffffffffffffe0
   14002bef2:	mov    QWORD PTR [rsp+0x30],rbp
   14002bef7:	mov    QWORD PTR [rsp+0x38],rsi
   14002befc:	ja     0x14002bf41
   14002befe:	mov    ebp,0x1
   14002bf03:	mov    rcx,QWORD PTR [rip+0x3538e]        # 0x140061298
   14002bf0a:	test   rbx,rbx
   14002bf0d:	mov    r8,rdi
   14002bf10:	cmove  rbx,rbp
   14002bf14:	xor    edx,edx
   14002bf16:	mov    r9,rbx
   14002bf19:	call   QWORD PTR [rip+0x172d1]        # 0x1400431f0
   14002bf1f:	test   rax,rax
   14002bf22:	mov    rsi,rax
   14002bf25:	jne    0x14002bf9b
   14002bf27:	cmp    DWORD PTR [rip+0x35903],eax        # 0x140061830
   14002bf2d:	je     0x14002bf84
   14002bf2f:	mov    rcx,rbx
   14002bf32:	call   0x140030bb0
   14002bf37:	test   eax,eax
   14002bf39:	je     0x14002bf6b
   14002bf3b:	cmp    rbx,0xffffffffffffffe0
   14002bf3f:	jbe    0x14002bf03
   14002bf41:	mov    rcx,rbx
   14002bf44:	call   0x140030bb0
   14002bf49:	call   0x14002bca0
   14002bf4e:	mov    DWORD PTR [rax],0xc
   14002bf54:	xor    eax,eax
   14002bf56:	mov    rbp,QWORD PTR [rsp+0x30]
   14002bf5b:	mov    rsi,QWORD PTR [rsp+0x38]
   14002bf60:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bf65:	add    rsp,0x20
   14002bf69:	pop    rdi
   14002bf6a:	ret    
   14002bf6b:	call   0x14002bca0
   14002bf70:	mov    rbx,rax
   14002bf73:	call   QWORD PTR [rip+0x1756f]        # 0x1400434e8
   14002bf79:	mov    ecx,eax
   14002bf7b:	call   0x14002bc50
   14002bf80:	mov    DWORD PTR [rbx],eax
   14002bf82:	jmp    0x14002bf54
   14002bf84:	call   0x14002bca0
   14002bf89:	mov    rbx,rax
   14002bf8c:	call   QWORD PTR [rip+0x17556]        # 0x1400434e8
   14002bf92:	mov    ecx,eax
   14002bf94:	call   0x14002bc50
   14002bf99:	mov    DWORD PTR [rbx],eax
   14002bf9b:	mov    rax,rsi
   14002bf9e:	jmp    0x14002bf56
   14002bfa0:	mov    QWORD PTR [rsp+0x8],rbx
   14002bfa5:	mov    QWORD PTR [rsp+0x10],rsi
   14002bfaa:	push   rdi
   14002bfab:	sub    rsp,0x30
   14002bfaf:	xor    edi,edi
   14002bfb1:	test   rdx,rdx
   14002bfb4:	mov    rbx,rdx
   14002bfb7:	mov    rsi,rcx
   14002bfba:	je     0x14002bffe
   14002bfbc:	xor    edx,edx
   14002bfbe:	mov    rax,0xffffffffffffffe0
   14002bfc5:	div    rbx
   14002bfc8:	cmp    rax,r8
   14002bfcb:	jae    0x14002bffe
   14002bfcd:	call   0x14002bca0
   14002bfd2:	xor    r9d,r9d
   14002bfd5:	xor    r8d,r8d
   14002bfd8:	xor    edx,edx
   14002bfda:	xor    ecx,ecx
   14002bfdc:	mov    QWORD PTR [rsp+0x20],rdi
   14002bfe1:	mov    DWORD PTR [rax],0xc
   14002bfe7:	call   0x14002e900
   14002bfec:	xor    eax,eax
   14002bfee:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bff3:	mov    rsi,QWORD PTR [rsp+0x48]
   14002bff8:	add    rsp,0x30
   14002bffc:	pop    rdi
   14002bffd:	ret    
   14002bffe:	imul   rbx,r8
   14002c002:	test   rcx,rcx
   14002c005:	je     0x14002c00f
   14002c007:	call   0x14002c7a0
   14002c00c:	mov    rdi,rax
   14002c00f:	mov    rdx,rbx
   14002c012:	mov    rcx,rsi
   14002c015:	call   0x14002beb0
   14002c01a:	test   rax,rax
   14002c01d:	mov    rsi,rax
   14002c020:	je     0x14002c038
   14002c022:	cmp    rdi,rbx
   14002c025:	jae    0x14002c038
   14002c027:	sub    rbx,rdi
   14002c02a:	lea    rcx,[rdi+rax*1]
   14002c02e:	xor    edx,edx
   14002c030:	mov    r8,rbx
   14002c033:	call   0x14002ac20
   14002c038:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c03d:	mov    rax,rsi
   14002c040:	mov    rsi,QWORD PTR [rsp+0x48]
   14002c045:	add    rsp,0x30
   14002c049:	pop    rdi
   14002c04a:	ret    
   14002c04b:	int3   
   14002c04c:	int3   
   14002c04d:	int3   
   14002c04e:	int3   
   14002c04f:	int3   
   14002c050:	rex push rbx
   14002c052:	sub    rsp,0x30
   14002c056:	test   rcx,rcx
   14002c059:	mov    rbx,rcx
   14002c05c:	jne    0x14002c066
   14002c05e:	xor    eax,eax
   14002c060:	add    rsp,0x30
   14002c064:	pop    rbx
   14002c065:	ret    
   14002c066:	xor    eax,eax
   14002c068:	or     rcx,0xffffffffffffffff
   14002c06c:	mov    QWORD PTR [rsp+0x40],rsi
   14002c071:	mov    QWORD PTR [rsp+0x48],rdi
   14002c076:	mov    rdi,rbx
   14002c079:	lea    edx,[rax+0x2]
   14002c07c:	repnz scas ax,WORD PTR es:[rdi]
   14002c07f:	not    rcx
   14002c082:	lea    rsi,[rcx-0x1]
   14002c086:	call   0x14002c9f0
   14002c08b:	test   rax,rax
   14002c08e:	mov    rdi,rax
   14002c091:	je     0x14002c0d1
   14002c093:	lea    rdx,[rsi+0x1]
   14002c097:	mov    r8,rbx
   14002c09a:	mov    rcx,rax
   14002c09d:	call   0x14002a9a0
   14002c0a2:	test   eax,eax
   14002c0a4:	je     0x14002c0be
   14002c0a6:	xor    r9d,r9d
   14002c0a9:	xor    r8d,r8d
   14002c0ac:	xor    edx,edx
   14002c0ae:	xor    ecx,ecx
   14002c0b0:	mov    QWORD PTR [rsp+0x20],0x0
   14002c0b9:	call   0x14002e860
   14002c0be:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c0c3:	mov    rax,rdi
   14002c0c6:	mov    rdi,QWORD PTR [rsp+0x48]
   14002c0cb:	add    rsp,0x30
   14002c0cf:	pop    rbx
   14002c0d0:	ret    
   14002c0d1:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c0d6:	mov    rdi,QWORD PTR [rsp+0x48]
   14002c0db:	xor    eax,eax
   14002c0dd:	add    rsp,0x30
   14002c0e1:	pop    rbx
   14002c0e2:	ret    
   14002c0e3:	int3   
   14002c0e4:	int3   
   14002c0e5:	int3   
   14002c0e6:	int3   
   14002c0e7:	int3   
   14002c0e8:	int3   
   14002c0e9:	int3   
   14002c0ea:	int3   
   14002c0eb:	int3   
   14002c0ec:	int3   
   14002c0ed:	int3   
   14002c0ee:	int3   
   14002c0ef:	int3   
   14002c0f0:	rex push rbx
   14002c0f2:	sub    rsp,0x20
   14002c0f6:	mov    ebx,ecx
   14002c0f8:	call   0x14002cd90
   14002c0fd:	mov    ecx,ebx
   14002c0ff:	call   0x14002cb50
   14002c104:	mov    rcx,QWORD PTR [rip+0x2eff5]        # 0x14005b100
   14002c10b:	call   0x14002df20
   14002c110:	mov    ecx,0xff
   14002c115:	add    rsp,0x20
   14002c119:	pop    rbx
   14002c11a:	rex.W jmp rax
   14002c11d:	int3   
   14002c11e:	int3   
   14002c11f:	int3   
   14002c120:	rex push rbx
   14002c122:	sub    rsp,0x20
   14002c126:	mov    ebx,ecx
   14002c128:	lea    rcx,[rip+0x1c3f1]        # 0x140048520
   14002c12f:	call   QWORD PTR [rip+0x1730b]        # 0x140043440
   14002c135:	test   rax,rax
   14002c138:	je     0x14002c153
   14002c13a:	lea    rdx,[rip+0x1c3cf]        # 0x140048510
   14002c141:	mov    rcx,rax
   14002c144:	call   QWORD PTR [rip+0x17366]        # 0x1400434b0
   14002c14a:	test   rax,rax
   14002c14d:	je     0x14002c153
   14002c14f:	mov    ecx,ebx
   14002c151:	call   rax
   14002c153:	mov    ecx,ebx
   14002c155:	call   QWORD PTR [rip+0x1709d]        # 0x1400431f8
   14002c15b:	int3   
   14002c15c:	int3   
   14002c15d:	int3   
   14002c15e:	int3   
   14002c15f:	int3   
   14002c160:	mov    ecx,0x8
   14002c165:	jmp    0x140035aa0
   14002c16a:	int3   
   14002c16b:	int3   
   14002c16c:	int3   
   14002c16d:	int3   
   14002c16e:	int3   
   14002c16f:	int3   
   14002c170:	mov    ecx,0x8
   14002c175:	jmp    0x140035970
   14002c17a:	int3   
   14002c17b:	int3   
   14002c17c:	int3   
   14002c17d:	int3   
   14002c17e:	int3   
   14002c17f:	int3   
   14002c180:	cmp    rcx,rdx
   14002c183:	jae    0x14002c1b2
   14002c185:	mov    QWORD PTR [rsp+0x8],rbx
   14002c18a:	push   rdi
   14002c18b:	sub    rsp,0x20
   14002c18f:	mov    rdi,rdx
   14002c192:	mov    rbx,rcx
   14002c195:	mov    rax,QWORD PTR [rbx]
   14002c198:	test   rax,rax
   14002c19b:	je     0x14002c19f
   14002c19d:	call   rax
   14002c19f:	add    rbx,0x8
   14002c1a3:	cmp    rbx,rdi
   14002c1a6:	jb     0x14002c195
   14002c1a8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c1ad:	add    rsp,0x20
   14002c1b1:	pop    rdi
   14002c1b2:	ret    0x0
   14002c1b5:	int3   
   14002c1b6:	int3   
   14002c1b7:	int3   
   14002c1b8:	int3   
   14002c1b9:	int3   
   14002c1ba:	int3   
   14002c1bb:	int3   
   14002c1bc:	int3   
   14002c1bd:	int3   
   14002c1be:	int3   
   14002c1bf:	int3   
   14002c1c0:	sub    rsp,0x38
   14002c1c4:	test   rcx,rcx
   14002c1c7:	jne    0x14002c1f6
   14002c1c9:	call   0x14002bca0
   14002c1ce:	xor    r9d,r9d
   14002c1d1:	xor    r8d,r8d
   14002c1d4:	xor    edx,edx
   14002c1d6:	xor    ecx,ecx
   14002c1d8:	mov    QWORD PTR [rsp+0x20],0x0
   14002c1e1:	mov    DWORD PTR [rax],0x16
   14002c1e7:	call   0x14002e900
   14002c1ec:	mov    eax,0x16
   14002c1f1:	add    rsp,0x38
   14002c1f5:	ret    
   14002c1f6:	mov    eax,DWORD PTR [rip+0x34af8]        # 0x140060cf4
   14002c1fc:	test   eax,eax
   14002c1fe:	je     0x14002c1c9
   14002c200:	mov    DWORD PTR [rcx],eax
   14002c202:	xor    eax,eax
   14002c204:	add    rsp,0x38
   14002c208:	ret    
   14002c209:	int3   
   14002c20a:	int3   
   14002c20b:	int3   
   14002c20c:	int3   
   14002c20d:	int3   
   14002c20e:	int3   
   14002c20f:	int3   
   14002c210:	sub    rsp,0x38
   14002c214:	test   rcx,rcx
   14002c217:	jne    0x14002c246
   14002c219:	call   0x14002bca0
   14002c21e:	xor    r9d,r9d
   14002c221:	xor    r8d,r8d
   14002c224:	xor    edx,edx
   14002c226:	xor    ecx,ecx
   14002c228:	mov    QWORD PTR [rsp+0x20],0x0
   14002c231:	mov    DWORD PTR [rax],0x16
   14002c237:	call   0x14002e900
   14002c23c:	mov    eax,0x16
   14002c241:	add    rsp,0x38
   14002c245:	ret    
   14002c246:	cmp    DWORD PTR [rip+0x34aa7],0x0        # 0x140060cf4
   14002c24d:	je     0x14002c219
   14002c24f:	mov    eax,DWORD PTR [rip+0x34aab]        # 0x140060d00
   14002c255:	mov    DWORD PTR [rcx],eax
   14002c257:	xor    eax,eax
   14002c259:	add    rsp,0x38
   14002c25d:	ret    
   14002c25e:	int3   
   14002c25f:	int3   
   14002c260:	mov    QWORD PTR [rsp+0x8],rbx
   14002c265:	push   rdi
   14002c266:	sub    rsp,0x20
   14002c26a:	cmp    QWORD PTR [rip+0x1c2be],0x0        # 0x140048530
   14002c272:	mov    ebx,ecx
   14002c274:	je     0x14002c28e
   14002c276:	lea    rcx,[rip+0x1c2b3]        # 0x140048530
   14002c27d:	call   0x140033e70
   14002c282:	test   eax,eax
   14002c284:	je     0x14002c28e
   14002c286:	mov    ecx,ebx
   14002c288:	call   QWORD PTR [rip+0x1c2a2]        # 0x140048530
   14002c28e:	call   0x140035af0
   14002c293:	lea    rbx,[rip+0x17946]        # 0x140043be0
   14002c29a:	lea    rdi,[rip+0x17967]        # 0x140043c08
   14002c2a1:	xor    eax,eax
   14002c2a3:	cmp    rbx,rdi
   14002c2a6:	jae    0x14002c2c3
   14002c2a8:	test   eax,eax
   14002c2aa:	jne    0x14002c320
   14002c2ac:	mov    rcx,QWORD PTR [rbx]
   14002c2af:	test   rcx,rcx
   14002c2b2:	je     0x14002c2b6
   14002c2b4:	call   rcx
   14002c2b6:	add    rbx,0x8
   14002c2ba:	cmp    rbx,rdi
   14002c2bd:	jb     0x14002c2a8
   14002c2bf:	test   eax,eax
   14002c2c1:	jne    0x14002c320
   14002c2c3:	lea    rcx,[rip+0x1a56]        # 0x14002dd20
   14002c2ca:	call   0x14002a980
   14002c2cf:	lea    rbx,[rip+0x17842]        # 0x140043b18
   14002c2d6:	lea    rdi,[rip+0x178fb]        # 0x140043bd8
   14002c2dd:	cmp    rbx,rdi
   14002c2e0:	jae    0x14002c2f5
   14002c2e2:	mov    rax,QWORD PTR [rbx]
   14002c2e5:	test   rax,rax
   14002c2e8:	je     0x14002c2ec
   14002c2ea:	call   rax
   14002c2ec:	add    rbx,0x8
   14002c2f0:	cmp    rbx,rdi
   14002c2f3:	jb     0x14002c2e2
   14002c2f5:	cmp    QWORD PTR [rip+0x36ee3],0x0        # 0x1400631e0
   14002c2fd:	je     0x14002c31e
   14002c2ff:	lea    rcx,[rip+0x36eda]        # 0x1400631e0
   14002c306:	call   0x140033e70
   14002c30b:	test   eax,eax
   14002c30d:	je     0x14002c31e
   14002c30f:	xor    r8d,r8d
   14002c312:	xor    ecx,ecx
   14002c314:	lea    edx,[r8+0x2]
   14002c318:	call   QWORD PTR [rip+0x36ec2]        # 0x1400631e0
   14002c31e:	xor    eax,eax
   14002c320:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c325:	add    rsp,0x20
   14002c329:	pop    rdi
   14002c32a:	ret    
   14002c32b:	int3   
   14002c32c:	int3   
   14002c32d:	int3   
   14002c32e:	int3   
   14002c32f:	int3   
   14002c330:	mov    QWORD PTR [rsp+0x8],rbx
   14002c335:	mov    QWORD PTR [rsp+0x10],rsi
   14002c33a:	mov    DWORD PTR [rsp+0x18],r8d
   14002c33f:	push   rdi
   14002c340:	push   r12
   14002c342:	push   r13
   14002c344:	sub    rsp,0x30
   14002c348:	mov    r12d,r8d
   14002c34b:	mov    ebx,edx
   14002c34d:	mov    r13d,ecx
   14002c350:	mov    ecx,0x8
   14002c355:	call   0x140035aa0
   14002c35a:	nop
   14002c35b:	cmp    DWORD PTR [rip+0x349f2],0x1        # 0x140060d54
   14002c362:	je     0x14002c404
   14002c368:	mov    DWORD PTR [rip+0x349de],0x1        # 0x140060d50
   14002c372:	mov    BYTE PTR [rip+0x34993],r12b        # 0x140060d0c
   14002c379:	test   ebx,ebx
   14002c37b:	jne    0x14002c3f0
   14002c37d:	mov    rcx,QWORD PTR [rip+0x36e4c]        # 0x1400631d0
   14002c384:	call   0x14002df20
   14002c389:	mov    rsi,rax
   14002c38c:	mov    rcx,QWORD PTR [rip+0x36e35]        # 0x1400631c8
   14002c393:	call   0x14002df20
   14002c398:	mov    rbx,rax
   14002c39b:	mov    QWORD PTR [rsp+0x20],rax
   14002c3a0:	test   rsi,rsi
   14002c3a3:	je     0x14002c3dd
   14002c3a5:	data16 data16 xchg ax,ax
   14002c3a9:	data16 xchg ax,ax
   14002c3ac:	data16 data16 xchg ax,ax
   14002c3b0:	sub    rbx,0x8
   14002c3b4:	mov    QWORD PTR [rsp+0x20],rbx
   14002c3b9:	cmp    rbx,rsi
   14002c3bc:	jb     0x14002c3dd
   14002c3be:	cmp    QWORD PTR [rbx],0x0
   14002c3c2:	je     0x14002c3db
   14002c3c4:	mov    rdi,QWORD PTR [rbx]
   14002c3c7:	call   0x14002de30
   14002c3cc:	cmp    rdi,rax
   14002c3cf:	je     0x14002c3db
   14002c3d1:	mov    rcx,rdi
   14002c3d4:	call   0x14002df20
   14002c3d9:	call   rax
   14002c3db:	jmp    0x14002c3b0
   14002c3dd:	lea    rdx,[rip+0x17844]        # 0x140043c28
   14002c3e4:	lea    rcx,[rip+0x17825]        # 0x140043c10
   14002c3eb:	call   0x14002c180
   14002c3f0:	lea    rdx,[rip+0x17841]        # 0x140043c38
   14002c3f7:	lea    rcx,[rip+0x17832]        # 0x140043c30
   14002c3fe:	call   0x14002c180
   14002c403:	nop
   14002c404:	test   r12d,r12d
   14002c407:	je     0x14002c413
   14002c409:	mov    ecx,0x8
   14002c40e:	call   0x140035970
   14002c413:	test   r12d,r12d
   14002c416:	jne    0x14002c435
   14002c418:	mov    DWORD PTR [rip+0x34932],0x1        # 0x140060d54
   14002c422:	lea    ecx,[r12+0x8]
   14002c427:	call   0x140035970
   14002c42c:	mov    ecx,r13d
   14002c42f:	call   0x14002c120
   14002c434:	int3   
   14002c435:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c43a:	mov    rsi,QWORD PTR [rsp+0x58]
   14002c43f:	add    rsp,0x30
   14002c443:	pop    r13
   14002c445:	pop    r12
   14002c447:	pop    rdi
   14002c448:	ret    
   14002c449:	int3   
   14002c44a:	int3   
   14002c44b:	int3   
   14002c44c:	int3   
   14002c44d:	int3   
   14002c44e:	int3   
   14002c44f:	int3   
   14002c450:	rex push rbp
   14002c452:	sub    rsp,0x20
   14002c456:	mov    rbp,rdx
   14002c459:	cmp    DWORD PTR [rbp+0x60],0x0
   14002c45d:	je     0x14002c469
   14002c45f:	mov    ecx,0x8
   14002c464:	call   0x140035970
   14002c469:	add    rsp,0x20
   14002c46d:	pop    rbp
   14002c46e:	ret    
   14002c46f:	int3   
   14002c470:	xor    r8d,r8d
   14002c473:	xor    edx,edx
   14002c475:	jmp    0x14002c330
   14002c47a:	int3   
   14002c47b:	int3   
   14002c47c:	int3   
   14002c47d:	int3   
   14002c47e:	int3   
   14002c47f:	int3   
   14002c480:	xor    r8d,r8d
   14002c483:	lea    edx,[r8+0x1]
   14002c487:	jmp    0x14002c330
   14002c48c:	int3   
   14002c48d:	int3   
   14002c48e:	int3   
   14002c48f:	int3   
   14002c490:	xor    edx,edx
   14002c492:	xor    ecx,ecx
   14002c494:	lea    r8d,[rdx+0x1]
   14002c498:	jmp    0x14002c330
   14002c49d:	int3   
   14002c49e:	int3   
   14002c49f:	int3   
   14002c4a0:	mov    edx,0x1
   14002c4a5:	xor    ecx,ecx
   14002c4a7:	mov    r8d,edx
   14002c4aa:	jmp    0x14002c330
   14002c4af:	int3   
   14002c4b0:	rex push rbx
   14002c4b2:	sub    rsp,0x20
   14002c4b6:	call   0x14002de30
   14002c4bb:	mov    rcx,rax
   14002c4be:	mov    rbx,rax
   14002c4c1:	call   0x140030ba0
   14002c4c6:	mov    rcx,rbx
   14002c4c9:	call   0x140035e20
   14002c4ce:	mov    rcx,rbx
   14002c4d1:	call   0x14002e850
   14002c4d6:	mov    rcx,rbx
   14002c4d9:	call   0x1400320b0
   14002c4de:	mov    rcx,rbx
   14002c4e1:	call   0x140035e10
   14002c4e6:	mov    rcx,rbx
   14002c4e9:	call   0x140035b30
   14002c4ee:	mov    rcx,rbx
   14002c4f1:	call   0x140001920
   14002c4f6:	mov    rcx,rbx
   14002c4f9:	call   0x140033d50
   14002c4fe:	lea    rcx,[rip+0xffffffffffffff7b]        # 0x14002c480
   14002c505:	call   0x14002dd60
   14002c50a:	mov    QWORD PTR [rip+0x2ebef],rax        # 0x14005b100
   14002c511:	add    rsp,0x20
   14002c515:	pop    rbx
   14002c516:	ret    
   14002c517:	int3   
   14002c518:	int3   
   14002c519:	int3   
   14002c51a:	int3   
   14002c51b:	int3   
   14002c51c:	int3   
   14002c51d:	int3   
   14002c51e:	int3   
   14002c51f:	int3   
   14002c520:	mov    rax,rsp
   14002c523:	mov    QWORD PTR [rax+0x10],rdx
   14002c527:	mov    QWORD PTR [rax+0x18],r8
   14002c52b:	mov    QWORD PTR [rax+0x20],r9
   14002c52f:	push   rdi
   14002c530:	sub    rsp,0x60
   14002c534:	mov    r8,rcx
   14002c537:	or     rcx,0xffffffffffffffff
   14002c53b:	lea    r9,[rax+0x18]
   14002c53f:	xor    eax,eax
   14002c541:	mov    rdi,r8
   14002c544:	repnz scas ax,WORD PTR es:[rdi]
   14002c547:	not    rcx
   14002c54a:	sub    rcx,0x1
   14002c54e:	test   r8,r8
   14002c551:	jne    0x14002c57f
   14002c553:	call   0x14002bca0
   14002c558:	xor    r9d,r9d
   14002c55b:	xor    r8d,r8d
   14002c55e:	xor    edx,edx
   14002c560:	xor    ecx,ecx
   14002c562:	mov    QWORD PTR [rsp+0x20],0x0
   14002c56b:	mov    DWORD PTR [rax],0x16
   14002c571:	call   0x14002e900
   14002c576:	or     eax,0xffffffff
   14002c579:	add    rsp,0x60
   14002c57d:	pop    rdi
   14002c57e:	ret    
   14002c57f:	test   rdx,rdx
   14002c582:	je     0x14002c553
   14002c584:	cmp    rcx,0x3fffffff
   14002c58b:	mov    DWORD PTR [rsp+0x48],0x49
   14002c593:	mov    QWORD PTR [rsp+0x40],r8
   14002c598:	mov    QWORD PTR [rsp+0x30],r8
   14002c59d:	jbe    0x14002c5ba
   14002c59f:	lea    rcx,[rsp+0x30]
   14002c5a4:	xor    r8d,r8d
   14002c5a7:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   14002c5af:	call   0x140033f30
   14002c5b4:	add    rsp,0x60
   14002c5b8:	pop    rdi
   14002c5b9:	ret    
   14002c5ba:	lea    eax,[rcx+rcx*1]
   14002c5bd:	lea    rcx,[rsp+0x30]
   14002c5c2:	xor    r8d,r8d
   14002c5c5:	mov    DWORD PTR [rsp+0x38],eax
   14002c5c9:	call   0x140033f30
   14002c5ce:	add    rsp,0x60
   14002c5d2:	pop    rdi
   14002c5d3:	ret    
   14002c5d4:	int3   
   14002c5d5:	int3   
   14002c5d6:	int3   
   14002c5d7:	int3   
   14002c5d8:	int3   
   14002c5d9:	int3   
   14002c5da:	int3   
   14002c5db:	int3   
   14002c5dc:	int3   
   14002c5dd:	int3   
   14002c5de:	int3   
   14002c5df:	int3   
   14002c5e0:	sub    rsp,0x38
   14002c5e4:	test   rcx,rcx
   14002c5e7:	mov    r9,rcx
   14002c5ea:	je     0x14002c5fa
   14002c5ec:	test   rdx,rdx
   14002c5ef:	je     0x14002c5fa
   14002c5f1:	test   r8,r8
   14002c5f4:	jne    0x14002c627
   14002c5f6:	mov    WORD PTR [rcx],r8w
   14002c5fa:	call   0x14002bca0
   14002c5ff:	xor    r9d,r9d
   14002c602:	xor    r8d,r8d
   14002c605:	xor    edx,edx
   14002c607:	xor    ecx,ecx
   14002c609:	mov    QWORD PTR [rsp+0x20],0x0
   14002c612:	mov    DWORD PTR [rax],0x16
   14002c618:	call   0x14002e900
   14002c61d:	mov    eax,0x16
   14002c622:	add    rsp,0x38
   14002c626:	ret    
   14002c627:	cmp    WORD PTR [rcx],0x0
   14002c62b:	je     0x14002c637
   14002c62d:	add    rcx,0x2
   14002c631:	sub    rdx,0x1
   14002c635:	jne    0x14002c627
   14002c637:	test   rdx,rdx
   14002c63a:	jne    0x14002c650
   14002c63c:	mov    WORD PTR [r9],dx
   14002c640:	jmp    0x14002c5fa
   14002c642:	xchg   ax,ax
   14002c644:	data16 data16 xchg ax,ax
   14002c648:	data16 data16 xchg ax,ax
   14002c64c:	data16 data16 xchg ax,ax
   14002c650:	movzx  eax,WORD PTR [r8]
   14002c654:	add    rcx,0x2
   14002c658:	add    r8,0x2
   14002c65c:	test   ax,ax
   14002c65f:	mov    WORD PTR [rcx-0x2],ax
   14002c663:	je     0x14002c66b
   14002c665:	sub    rdx,0x1
   14002c669:	jne    0x14002c650
   14002c66b:	test   rdx,rdx
   14002c66e:	jne    0x14002c6a1
   14002c670:	mov    WORD PTR [r9],dx
   14002c674:	call   0x14002bca0
   14002c679:	xor    r9d,r9d
   14002c67c:	xor    r8d,r8d
   14002c67f:	xor    edx,edx
   14002c681:	xor    ecx,ecx
   14002c683:	mov    DWORD PTR [rax],0x22
   14002c689:	mov    QWORD PTR [rsp+0x20],0x0
   14002c692:	call   0x14002e900
   14002c697:	mov    eax,0x22
   14002c69c:	add    rsp,0x38
   14002c6a0:	ret    
   14002c6a1:	xor    eax,eax
   14002c6a3:	add    rsp,0x38
   14002c6a7:	ret    
   14002c6a8:	int3   
   14002c6a9:	int3   
   14002c6aa:	int3   
   14002c6ab:	int3   
   14002c6ac:	int3   
   14002c6ad:	int3   
   14002c6ae:	int3   
   14002c6af:	int3   
   14002c6b0:	mov    QWORD PTR [rsp+0x18],rbx
   14002c6b5:	push   rdi
   14002c6b6:	sub    rsp,0x30
   14002c6ba:	test   rcx,rcx
   14002c6bd:	mov    rbx,rdx
   14002c6c0:	mov    rdi,rcx
   14002c6c3:	jne    0x14002c6f1
   14002c6c5:	call   0x14002bca0
   14002c6ca:	xor    r9d,r9d
   14002c6cd:	xor    r8d,r8d
   14002c6d0:	xor    edx,edx
   14002c6d2:	xor    ecx,ecx
   14002c6d4:	mov    QWORD PTR [rsp+0x20],rdi
   14002c6d9:	mov    DWORD PTR [rax],0x16
   14002c6df:	call   0x14002e900
   14002c6e4:	xor    eax,eax
   14002c6e6:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c6eb:	add    rsp,0x30
   14002c6ef:	pop    rdi
   14002c6f0:	ret    
   14002c6f1:	cmp    rdx,0xffffffffffffffe0
   14002c6f5:	jbe    0x14002c70f
   14002c6f7:	call   0x14002bca0
   14002c6fc:	mov    DWORD PTR [rax],0xc
   14002c702:	xor    eax,eax
   14002c704:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c709:	add    rsp,0x30
   14002c70d:	pop    rdi
   14002c70e:	ret    
   14002c70f:	test   rdx,rdx
   14002c712:	mov    eax,0x1
   14002c717:	mov    r8,rcx
   14002c71a:	mov    rcx,QWORD PTR [rip+0x34b77]        # 0x140061298
   14002c721:	cmove  rbx,rax
   14002c725:	xor    edx,edx
   14002c727:	mov    QWORD PTR [rsp+0x40],rbp
   14002c72c:	mov    QWORD PTR [rsp+0x48],rsi
   14002c731:	call   QWORD PTR [rip+0x16ac9]        # 0x140043200
   14002c737:	mov    rcx,QWORD PTR [rip+0x34b5a]        # 0x140061298
   14002c73e:	mov    r9,rbx
   14002c741:	mov    r8,rdi
   14002c744:	mov    edx,0x10
   14002c749:	mov    rbp,rax
   14002c74c:	call   QWORD PTR [rip+0x16a9e]        # 0x1400431f0
   14002c752:	test   rax,rax
   14002c755:	mov    rsi,rax
   14002c758:	jne    0x14002c781
   14002c75a:	cmp    rbp,0xffffffffffffffff
   14002c75e:	je     0x14002c76a
   14002c760:	cmp    rbx,rbp
   14002c763:	ja     0x14002c76a
   14002c765:	mov    rsi,rdi
   14002c768:	jmp    0x14002c781
   14002c76a:	call   0x14002bca0
   14002c76f:	mov    rbx,rax
   14002c772:	call   QWORD PTR [rip+0x16d70]        # 0x1400434e8
   14002c778:	mov    ecx,eax
   14002c77a:	call   0x14002bc50
   14002c77f:	mov    DWORD PTR [rbx],eax
   14002c781:	mov    rbp,QWORD PTR [rsp+0x40]
   14002c786:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c78b:	mov    rax,rsi
   14002c78e:	mov    rsi,QWORD PTR [rsp+0x48]
   14002c793:	add    rsp,0x30
   14002c797:	pop    rdi
   14002c798:	ret    
   14002c799:	int3   
   14002c79a:	int3   
   14002c79b:	int3   
   14002c79c:	int3   
   14002c79d:	int3   
   14002c79e:	int3   
   14002c79f:	int3   
   14002c7a0:	sub    rsp,0x38
   14002c7a4:	test   rcx,rcx
   14002c7a7:	jne    0x14002c7d5
   14002c7a9:	call   0x14002bca0
   14002c7ae:	xor    r9d,r9d
   14002c7b1:	xor    r8d,r8d
   14002c7b4:	xor    edx,edx
   14002c7b6:	xor    ecx,ecx
   14002c7b8:	mov    QWORD PTR [rsp+0x20],0x0
   14002c7c1:	mov    DWORD PTR [rax],0x16
   14002c7c7:	call   0x14002e900
   14002c7cc:	or     rax,0xffffffffffffffff
   14002c7d0:	add    rsp,0x38
   14002c7d4:	ret    
   14002c7d5:	mov    r8,rcx
   14002c7d8:	mov    rcx,QWORD PTR [rip+0x34ab9]        # 0x140061298
   14002c7df:	xor    edx,edx
   14002c7e1:	add    rsp,0x38
   14002c7e5:	rex.W jmp QWORD PTR [rip+0x16a14]        # 0x140043200
   14002c7ec:	int3   
   14002c7ed:	int3   
   14002c7ee:	int3   
   14002c7ef:	int3   
   14002c7f0:	movzx  r10d,WORD PTR [rcx]
   14002c7f4:	mov    r8,rcx
   14002c7f7:	test   r10w,r10w
   14002c7fb:	je     0x14002c833
   14002c7fd:	movzx  r11d,WORD PTR [rdx]
   14002c801:	cmp    r11w,r10w
   14002c805:	mov    r9,rdx
   14002c808:	je     0x14002c824
   14002c80a:	movzx  eax,r11w
   14002c80e:	xchg   ax,ax
   14002c810:	test   ax,ax
   14002c813:	je     0x14002c833
   14002c815:	mov    ax,WORD PTR [r9+0x2]
   14002c81a:	add    r9,0x2
   14002c81e:	cmp    ax,r10w
   14002c822:	jne    0x14002c810
   14002c824:	mov    r10w,WORD PTR [r8+0x2]
   14002c829:	add    r8,0x2
   14002c82d:	test   r10w,r10w
   14002c831:	jne    0x14002c801
   14002c833:	sub    r8,rcx
   14002c836:	sar    r8,1
   14002c839:	mov    rax,r8
   14002c83c:	ret    
   14002c83d:	int3   
   14002c83e:	int3   
   14002c83f:	int3   
   14002c840:	cmp    WORD PTR [rcx],0x0
   14002c844:	mov    r10,rdx
   14002c847:	mov    r11,rcx
   14002c84a:	mov    rax,rcx
   14002c84d:	je     0x14002c880
   14002c84f:	movzx  r9d,WORD PTR [rdx]
   14002c853:	test   r9w,r9w
   14002c857:	mov    r8,r10
   14002c85a:	je     0x14002c876
   14002c85c:	movzx  ecx,WORD PTR [rax]
   14002c85f:	movzx  edx,r9w
   14002c863:	cmp    dx,cx
   14002c866:	je     0x14002c880
   14002c868:	mov    dx,WORD PTR [r8+0x2]
   14002c86d:	add    r8,0x2
   14002c871:	test   dx,dx
   14002c874:	jne    0x14002c863
   14002c876:	add    rax,0x2
   14002c87a:	cmp    WORD PTR [rax],0x0
   14002c87e:	jne    0x14002c853
   14002c880:	sub    rax,r11
   14002c883:	sar    rax,1
   14002c886:	ret    
   14002c887:	int3   
   14002c888:	int3   
   14002c889:	int3   
   14002c88a:	int3   
   14002c88b:	int3   
   14002c88c:	int3   
   14002c88d:	int3   
   14002c88e:	int3   
   14002c88f:	int3   
   14002c890:	lea    rax,[rip+0x9a59]        # 0x1400362f0
   14002c897:	lea    rcx,[rip+0xa8e2]        # 0x140037180
   14002c89e:	mov    QWORD PTR [rip+0x2f473],rax        # 0x14005bd18
   14002c8a5:	lea    rax,[rip+0x99e4]        # 0x140036290
   14002c8ac:	mov    QWORD PTR [rip+0x2f45d],rcx        # 0x14005bd10
   14002c8b3:	mov    QWORD PTR [rip+0x2f466],rax        # 0x14005bd20
   14002c8ba:	lea    rax,[rip+0x9a1f]        # 0x1400362e0
   14002c8c1:	mov    QWORD PTR [rip+0x2f470],rcx        # 0x14005bd38
   14002c8c8:	mov    QWORD PTR [rip+0x2f459],rax        # 0x14005bd28
   14002c8cf:	lea    rax,[rip+0x994a]        # 0x140036220
   14002c8d6:	mov    QWORD PTR [rip+0x2f453],rax        # 0x14005bd30
   14002c8dd:	lea    rax,[rip+0xa7fc]        # 0x1400370e0
   14002c8e4:	mov    QWORD PTR [rip+0x2f455],rax        # 0x14005bd40
   14002c8eb:	lea    rax,[rip+0x994e]        # 0x140036240
   14002c8f2:	mov    QWORD PTR [rip+0x2f44f],rax        # 0x14005bd48
   14002c8f9:	lea    rax,[rip+0x97b0]        # 0x1400360b0
   14002c900:	mov    QWORD PTR [rip+0x2f449],rax        # 0x14005bd50
   14002c907:	lea    rax,[rip+0x9662]        # 0x140035f70
   14002c90e:	mov    QWORD PTR [rip+0x2f443],rax        # 0x14005bd58
   14002c915:	ret    
   14002c916:	int3   
   14002c917:	int3   
   14002c918:	int3   
   14002c919:	int3   
   14002c91a:	int3   
   14002c91b:	int3   
   14002c91c:	int3   
   14002c91d:	int3   
   14002c91e:	int3   
   14002c91f:	int3   
   14002c920:	mov    QWORD PTR [rsp+0x8],rbx
   14002c925:	push   rdi
   14002c926:	sub    rsp,0x30
   14002c92a:	test   rcx,rcx
   14002c92d:	mov    rdi,r8
   14002c930:	mov    rbx,rdx
   14002c933:	je     0x14002c976
   14002c935:	xor    edx,edx
   14002c937:	mov    rax,0xffffffffffffffe0
   14002c93e:	div    rcx
   14002c941:	cmp    rax,rbx
   14002c944:	jae    0x14002c976
   14002c946:	call   0x14002bca0
   14002c94b:	xor    r9d,r9d
   14002c94e:	xor    r8d,r8d
   14002c951:	xor    edx,edx
   14002c953:	xor    ecx,ecx
   14002c955:	mov    QWORD PTR [rsp+0x20],0x0
   14002c95e:	mov    DWORD PTR [rax],0xc
   14002c964:	call   0x14002e900
   14002c969:	xor    eax,eax
   14002c96b:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c970:	add    rsp,0x30
   14002c974:	pop    rdi
   14002c975:	ret    
   14002c976:	imul   rbx,rcx
   14002c97a:	mov    eax,0x1
   14002c97f:	test   rbx,rbx
   14002c982:	cmove  rbx,rax
   14002c986:	xor    eax,eax
   14002c988:	cmp    rbx,0xffffffffffffffe0
   14002c98c:	ja     0x14002c9a6
   14002c98e:	mov    rcx,QWORD PTR [rip+0x34903]        # 0x140061298
   14002c995:	lea    edx,[rax+0x8]
   14002c998:	mov    r8,rbx
   14002c99b:	call   QWORD PTR [rip+0x167f7]        # 0x140043198
   14002c9a1:	test   rax,rax
   14002c9a4:	jne    0x14002c9de
   14002c9a6:	cmp    DWORD PTR [rip+0x34e83],0x0        # 0x140061830
   14002c9ad:	je     0x14002c9d3
   14002c9af:	mov    rcx,rbx
   14002c9b2:	call   0x140030bb0
   14002c9b7:	test   eax,eax
   14002c9b9:	jne    0x14002c986
   14002c9bb:	test   rdi,rdi
   14002c9be:	je     0x14002c9c6
   14002c9c0:	mov    DWORD PTR [rdi],0xc
   14002c9c6:	xor    eax,eax
   14002c9c8:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c9cd:	add    rsp,0x30
   14002c9d1:	pop    rdi
   14002c9d2:	ret    
   14002c9d3:	test   rdi,rdi
   14002c9d6:	je     0x14002c9de
   14002c9d8:	mov    DWORD PTR [rdi],0xc
   14002c9de:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c9e3:	add    rsp,0x30
   14002c9e7:	pop    rdi
   14002c9e8:	ret    
   14002c9e9:	int3   
   14002c9ea:	int3   
   14002c9eb:	int3   
   14002c9ec:	int3   
   14002c9ed:	int3   
   14002c9ee:	int3   
   14002c9ef:	int3   
   14002c9f0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c9f5:	mov    QWORD PTR [rsp+0x10],rsi
   14002c9fa:	push   rdi
   14002c9fb:	sub    rsp,0x30
   14002c9ff:	xor    ebx,ebx
   14002ca01:	test   rcx,rcx
   14002ca04:	mov    r8,rdx
   14002ca07:	mov    esi,ebx
   14002ca09:	mov    rdi,rcx
   14002ca0c:	je     0x14002ca52
   14002ca0e:	xor    edx,edx
   14002ca10:	mov    rax,0xffffffffffffffe0
   14002ca17:	div    rdi
   14002ca1a:	cmp    rax,r8
   14002ca1d:	jae    0x14002ca52
   14002ca1f:	call   0x14002bca0
   14002ca24:	mov    esi,0xc
   14002ca29:	xor    r9d,r9d
   14002ca2c:	xor    r8d,r8d
   14002ca2f:	xor    edx,edx
   14002ca31:	xor    ecx,ecx
   14002ca33:	mov    DWORD PTR [rax],esi
   14002ca35:	mov    QWORD PTR [rsp+0x20],rbx
   14002ca3a:	call   0x14002e900
   14002ca3f:	mov    rax,rbx
   14002ca42:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ca47:	mov    rsi,QWORD PTR [rsp+0x48]
   14002ca4c:	add    rsp,0x30
   14002ca50:	pop    rdi
   14002ca51:	ret    
   14002ca52:	imul   rdi,r8
   14002ca56:	mov    eax,0x1
   14002ca5b:	test   rdi,rdi
   14002ca5e:	cmove  rdi,rax
   14002ca62:	cmp    rdi,0xffffffffffffffe0
   14002ca66:	mov    rax,rbx
   14002ca69:	ja     0x14002ca85
   14002ca6b:	mov    rcx,QWORD PTR [rip+0x34826]        # 0x140061298
   14002ca72:	mov    r8,rdi
   14002ca75:	mov    edx,0x8
   14002ca7a:	call   QWORD PTR [rip+0x16718]        # 0x140043198
   14002ca80:	test   rax,rax
   14002ca83:	jne    0x14002caa3
   14002ca85:	cmp    DWORD PTR [rip+0x34da5],ebx        # 0x140061830
   14002ca8b:	je     0x14002ca9e
   14002ca8d:	mov    rcx,rdi
   14002ca90:	call   0x140030bb0
   14002ca95:	test   eax,eax
   14002ca97:	jne    0x14002ca62
   14002ca99:	lea    esi,[rax+0xc]
   14002ca9c:	jmp    0x14002caaf
   14002ca9e:	mov    esi,0xc
   14002caa3:	test   rax,rax
   14002caa6:	mov    rbx,rax
   14002caa9:	jne    0x14002cac3
   14002caab:	test   esi,esi
   14002caad:	je     0x14002cac3
   14002caaf:	call   0x14002bca0
   14002cab4:	test   rax,rax
   14002cab7:	je     0x14002cac0
   14002cab9:	call   0x14002bca0
   14002cabe:	mov    DWORD PTR [rax],esi
   14002cac0:	mov    rax,rbx
   14002cac3:	mov    rbx,QWORD PTR [rsp+0x40]
   14002cac8:	mov    rsi,QWORD PTR [rsp+0x48]
   14002cacd:	add    rsp,0x30
   14002cad1:	pop    rdi
   14002cad2:	ret    
   14002cad3:	int3   
   14002cad4:	int3   
   14002cad5:	int3   
   14002cad6:	int3   
   14002cad7:	int3   
   14002cad8:	int3   
   14002cad9:	int3   
   14002cada:	int3   
   14002cadb:	int3   
   14002cadc:	int3   
   14002cadd:	int3   
   14002cade:	int3   
   14002cadf:	int3   
   14002cae0:	sub    rsp,0x28
   14002cae4:	mov    rax,QWORD PTR [rcx]
   14002cae7:	cmp    DWORD PTR [rax],0xe06d7363
   14002caed:	jne    0x14002cb1a
   14002caef:	cmp    DWORD PTR [rax+0x18],0x4
   14002caf3:	jne    0x14002cb1a
   14002caf5:	mov    eax,DWORD PTR [rax+0x20]
   14002caf8:	cmp    eax,0x19930520
   14002cafd:	je     0x14002cb14
   14002caff:	cmp    eax,0x19930521
   14002cb04:	je     0x14002cb14
   14002cb06:	cmp    eax,0x19930522
   14002cb0b:	je     0x14002cb14
   14002cb0d:	cmp    eax,0x1994000
   14002cb12:	jne    0x14002cb1a
   14002cb14:	call   0x140033cf0
   14002cb19:	int3   
   14002cb1a:	xor    eax,eax
   14002cb1c:	add    rsp,0x28
   14002cb20:	ret    
   14002cb21:	int3   
   14002cb22:	int3   
   14002cb23:	int3   
   14002cb24:	int3   
   14002cb25:	int3   
   14002cb26:	int3   
   14002cb27:	int3   
   14002cb28:	int3   
   14002cb29:	int3   
   14002cb2a:	int3   
   14002cb2b:	int3   
   14002cb2c:	int3   
   14002cb2d:	int3   
   14002cb2e:	int3   
   14002cb2f:	int3   
   14002cb30:	sub    rsp,0x28
   14002cb34:	lea    rcx,[rip+0xffffffffffffffa5]        # 0x14002cae0
   14002cb3b:	call   QWORD PTR [rip+0x166c7]        # 0x140043208
   14002cb41:	xor    eax,eax
   14002cb43:	add    rsp,0x28
   14002cb47:	ret    
   14002cb48:	int3   
   14002cb49:	int3   
   14002cb4a:	int3   
   14002cb4b:	int3   
   14002cb4c:	int3   
   14002cb4d:	int3   
   14002cb4e:	int3   
   14002cb4f:	int3   
   14002cb50:	mov    QWORD PTR [rsp+0x18],rbx
   14002cb55:	push   rsi
   14002cb56:	push   rdi
   14002cb57:	push   r12
   14002cb59:	sub    rsp,0x30
   14002cb5d:	lea    r12,[rip+0x2e5ac]        # 0x14005b110
   14002cb64:	xor    esi,esi
   14002cb66:	mov    edi,ecx
   14002cb68:	mov    rax,r12
   14002cb6b:	mov    ebx,esi
   14002cb6d:	data16 xchg ax,ax
   14002cb70:	cmp    ecx,DWORD PTR [rax]
   14002cb72:	je     0x14002cb8e
   14002cb74:	add    ebx,0x1
   14002cb77:	add    rax,0x10
   14002cb7b:	cmp    ebx,0x17
   14002cb7e:	jb     0x14002cb70
   14002cb80:	mov    rbx,QWORD PTR [rsp+0x60]
   14002cb85:	add    rsp,0x30
   14002cb89:	pop    r12
   14002cb8b:	pop    rdi
   14002cb8c:	pop    rsi
   14002cb8d:	ret    
   14002cb8e:	cmp    ebx,0x17
   14002cb91:	jae    0x14002cd75
   14002cb97:	mov    ecx,0x3
   14002cb9c:	call   0x140037710
   14002cba1:	cmp    eax,0x1
   14002cba4:	je     0x14002cd2c
   14002cbaa:	mov    ecx,0x3
   14002cbaf:	call   0x140037710
   14002cbb4:	test   eax,eax
   14002cbb6:	jne    0x14002cbc5
   14002cbb8:	cmp    DWORD PTR [rip+0x2e391],0x1        # 0x14005af50
   14002cbbf:	je     0x14002cd2c
   14002cbc5:	cmp    edi,0xfc
   14002cbcb:	je     0x14002cd75
   14002cbd1:	mov    QWORD PTR [rsp+0x50],rbp
   14002cbd6:	lea    rbp,[rip+0x34183]        # 0x140060d60
   14002cbdd:	lea    r8,[rip+0x1bf2c]        # 0x140048b10
   14002cbe4:	mov    rcx,rbp
   14002cbe7:	mov    edx,0x314
   14002cbec:	call   0x140037660
   14002cbf1:	test   eax,eax
   14002cbf3:	je     0x14002cc09
   14002cbf5:	xor    r9d,r9d
   14002cbf8:	xor    r8d,r8d
   14002cbfb:	xor    edx,edx
   14002cbfd:	xor    ecx,ecx
   14002cbff:	mov    QWORD PTR [rsp+0x20],rsi
   14002cc04:	call   0x14002e860
   14002cc09:	lea    rdx,[rip+0x34169]        # 0x140060d79
   14002cc10:	mov    r8d,0x104
   14002cc16:	xor    ecx,ecx
   14002cc18:	mov    BYTE PTR [rip+0x3425e],sil        # 0x140060e7d
   14002cc1f:	call   QWORD PTR [rip+0x165f3]        # 0x140043218
   14002cc25:	test   eax,eax
   14002cc27:	jne    0x14002cc59
   14002cc29:	lea    r8,[rip+0x1bec8]        # 0x140048af8
   14002cc30:	lea    rcx,[rip+0x34142]        # 0x140060d79
   14002cc37:	mov    edx,0x2fb
   14002cc3c:	call   0x140037660
   14002cc41:	test   eax,eax
   14002cc43:	je     0x14002cc59
   14002cc45:	xor    r9d,r9d
   14002cc48:	xor    r8d,r8d
   14002cc4b:	xor    edx,edx
   14002cc4d:	xor    ecx,ecx
   14002cc4f:	mov    QWORD PTR [rsp+0x20],rsi
   14002cc54:	call   0x14002e860
   14002cc59:	or     rcx,0xffffffffffffffff
   14002cc5d:	xor    eax,eax
   14002cc5f:	lea    rdi,[rip+0x34113]        # 0x140060d79
   14002cc66:	repnz scas al,BYTE PTR es:[rdi]
   14002cc68:	not    rcx
   14002cc6b:	cmp    rcx,0x3c
   14002cc6f:	jbe    0x14002cca8
   14002cc71:	lea    rcx,[rcx+rbp*1-0x23]
   14002cc76:	lea    rdx,[rip+0x343f7]        # 0x140061074
   14002cc7d:	lea    r9d,[rax+0x3]
   14002cc81:	lea    r8,[rip+0x1be6c]        # 0x140048af4
   14002cc88:	sub    rdx,rcx
   14002cc8b:	call   0x140037540
   14002cc90:	test   eax,eax
   14002cc92:	je     0x14002cca8
   14002cc94:	xor    r9d,r9d
   14002cc97:	xor    r8d,r8d
   14002cc9a:	xor    edx,edx
   14002cc9c:	xor    ecx,ecx
   14002cc9e:	mov    QWORD PTR [rsp+0x20],rsi
   14002cca3:	call   0x14002e860
   14002cca8:	lea    r8,[rip+0x1be41]        # 0x140048af0
   14002ccaf:	mov    edx,0x314
   14002ccb4:	mov    rcx,rbp
   14002ccb7:	call   0x140037480
   14002ccbc:	test   eax,eax
   14002ccbe:	je     0x14002ccd4
   14002ccc0:	xor    r9d,r9d
   14002ccc3:	xor    r8d,r8d
   14002ccc6:	xor    edx,edx
   14002ccc8:	xor    ecx,ecx
   14002ccca:	mov    QWORD PTR [rsp+0x20],rsi
   14002cccf:	call   0x14002e860
   14002ccd4:	movsxd r8,ebx
   14002ccd7:	mov    edx,0x314
   14002ccdc:	mov    rcx,rbp
   14002ccdf:	add    r8,r8
   14002cce2:	mov    r8,QWORD PTR [r12+r8*8+0x8]
   14002cce7:	call   0x140037480
   14002ccec:	test   eax,eax
   14002ccee:	je     0x14002cd04
   14002ccf0:	xor    r9d,r9d
   14002ccf3:	xor    r8d,r8d
   14002ccf6:	xor    edx,edx
   14002ccf8:	xor    ecx,ecx
   14002ccfa:	mov    QWORD PTR [rsp+0x20],rsi
   14002ccff:	call   0x14002e860
   14002cd04:	lea    rdx,[rip+0x1bdbd]        # 0x140048ac8
   14002cd0b:	mov    r8d,0x12010
   14002cd11:	mov    rcx,rbp
   14002cd14:	call   0x140037220
   14002cd19:	mov    rbp,QWORD PTR [rsp+0x50]
   14002cd1e:	mov    rbx,QWORD PTR [rsp+0x60]
   14002cd23:	add    rsp,0x30
   14002cd27:	pop    r12
   14002cd29:	pop    rdi
   14002cd2a:	pop    rsi
   14002cd2b:	ret    
   14002cd2c:	mov    ecx,0xfffffff4
   14002cd31:	call   QWORD PTR [rip+0x164d9]        # 0x140043210
   14002cd37:	test   rax,rax
   14002cd3a:	mov    r11,rax
   14002cd3d:	je     0x14002cd75
   14002cd3f:	cmp    rax,0xffffffffffffffff
   14002cd43:	je     0x14002cd75
   14002cd45:	xor    eax,eax
   14002cd47:	movsxd rcx,ebx
   14002cd4a:	lea    r9,[rsp+0x58]
   14002cd4f:	add    rcx,rcx
   14002cd52:	mov    QWORD PTR [rsp+0x20],rsi
   14002cd57:	mov    rdx,QWORD PTR [r12+rcx*8+0x8]
   14002cd5c:	or     rcx,0xffffffffffffffff
   14002cd60:	mov    rdi,rdx
   14002cd63:	repnz scas al,BYTE PTR es:[rdi]
   14002cd65:	not    rcx
   14002cd68:	lea    r8,[rcx-0x1]
   14002cd6c:	mov    rcx,r11
   14002cd6f:	call   QWORD PTR [rip+0x16603]        # 0x140043378
   14002cd75:	mov    rbx,QWORD PTR [rsp+0x60]
   14002cd7a:	add    rsp,0x30
   14002cd7e:	pop    r12
   14002cd80:	pop    rdi
   14002cd81:	pop    rsi
   14002cd82:	ret    
   14002cd83:	int3   
   14002cd84:	int3   
   14002cd85:	int3   
   14002cd86:	int3   
   14002cd87:	int3   
   14002cd88:	int3   
   14002cd89:	int3   
   14002cd8a:	int3   
   14002cd8b:	int3   
   14002cd8c:	int3   
   14002cd8d:	int3   
   14002cd8e:	int3   
   14002cd8f:	int3   
   14002cd90:	sub    rsp,0x38
   14002cd94:	mov    ecx,0x3
   14002cd99:	call   0x140037710
   14002cd9e:	cmp    eax,0x1
   14002cda1:	je     0x14002cdc2
   14002cda3:	mov    ecx,0x3
   14002cda8:	call   0x140037710
   14002cdad:	test   eax,eax
   14002cdaf:	jne    0x14002ce76
   14002cdb5:	cmp    DWORD PTR [rip+0x2e194],0x1        # 0x14005af50
   14002cdbc:	jne    0x14002ce76
   14002cdc2:	mov    QWORD PTR [rsp+0x48],rbx
   14002cdc7:	lea    rbx,[rip+0x2e342]        # 0x14005b110
   14002cdce:	mov    QWORD PTR [rsp+0x30],rdi
   14002cdd3:	mov    rax,rbx
   14002cdd6:	xor    edi,edi
   14002cdd8:	cmp    DWORD PTR [rax],0xfc
   14002cdde:	je     0x14002cdee
   14002cde0:	add    edi,0x1
   14002cde3:	add    rax,0x10
   14002cde7:	cmp    edi,0x17
   14002cdea:	jb     0x14002cdd8
   14002cdec:	jmp    0x14002ce62
   14002cdee:	cmp    edi,0x17
   14002cdf1:	jae    0x14002ce62
   14002cdf3:	mov    ecx,0x3
   14002cdf8:	call   0x140037710
   14002cdfd:	cmp    eax,0x1
   14002ce00:	je     0x14002ce19
   14002ce02:	mov    ecx,0x3
   14002ce07:	call   0x140037710
   14002ce0c:	test   eax,eax
   14002ce0e:	jne    0x14002ce62
   14002ce10:	cmp    DWORD PTR [rip+0x2e139],0x1        # 0x14005af50
   14002ce17:	jne    0x14002ce62
   14002ce19:	mov    ecx,0xfffffff4
   14002ce1e:	call   QWORD PTR [rip+0x163ec]        # 0x140043210
   14002ce24:	test   rax,rax
   14002ce27:	mov    r11,rax
   14002ce2a:	je     0x14002ce62
   14002ce2c:	cmp    rax,0xffffffffffffffff
   14002ce30:	je     0x14002ce62
   14002ce32:	movsxd rcx,edi
   14002ce35:	xor    eax,eax
   14002ce37:	lea    r9,[rsp+0x40]
   14002ce3c:	add    rcx,rcx
   14002ce3f:	mov    QWORD PTR [rsp+0x20],rax
   14002ce44:	mov    rdx,QWORD PTR [rbx+rcx*8+0x8]
   14002ce49:	or     rcx,0xffffffffffffffff
   14002ce4d:	mov    rdi,rdx
   14002ce50:	repnz scas al,BYTE PTR es:[rdi]
   14002ce52:	not    rcx
   14002ce55:	lea    r8,[rcx-0x1]
   14002ce59:	mov    rcx,r11
   14002ce5c:	call   QWORD PTR [rip+0x16516]        # 0x140043378
   14002ce62:	mov    ecx,0xff
   14002ce67:	call   0x14002cb50
   14002ce6c:	mov    rdi,QWORD PTR [rsp+0x30]
   14002ce71:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ce76:	add    rsp,0x38
   14002ce7a:	ret    
   14002ce7b:	int3   
   14002ce7c:	int3   
   14002ce7d:	int3   
   14002ce7e:	int3   
   14002ce7f:	int3   
   14002ce80:	mov    QWORD PTR [rsp+0x10],rbx
   14002ce85:	mov    QWORD PTR [rsp+0x18],rsi
   14002ce8a:	push   rdi
   14002ce8b:	sub    rsp,0x20
   14002ce8f:	mov    rsi,rdx
   14002ce92:	mov    edi,ecx
   14002ce94:	call   0x14002e180
   14002ce99:	test   rax,rax
   14002ce9c:	mov    rbx,rax
   14002ce9f:	je     0x14002d07e
   14002cea5:	mov    rcx,QWORD PTR [rax+0xa0]
   14002ceac:	movsxd r8,DWORD PTR [rip+0x2e479]        # 0x14005b32c
   14002ceb3:	mov    rdx,rcx
   14002ceb6:	cmp    DWORD PTR [rdx],edi
   14002ceb8:	je     0x14002cecd
   14002ceba:	mov    rax,r8
   14002cebd:	add    rdx,0x10
   14002cec1:	shl    rax,0x4
   14002cec5:	add    rax,rcx
   14002cec8:	cmp    rdx,rax
   14002cecb:	jb     0x14002ceb6
   14002cecd:	mov    rax,r8
   14002ced0:	shl    rax,0x4
   14002ced4:	add    rax,rcx
   14002ced7:	cmp    rdx,rax
   14002ceda:	jae    0x14002d07e
   14002cee0:	cmp    DWORD PTR [rdx],edi
   14002cee2:	jne    0x14002d07e
   14002cee8:	mov    r9,QWORD PTR [rdx+0x8]
   14002ceec:	test   r9,r9
   14002ceef:	je     0x14002d07e
   14002cef5:	cmp    r9,0x5
   14002cef9:	jne    0x14002cf16
   14002cefb:	xor    r8d,r8d
   14002cefe:	lea    eax,[r9-0x4]
   14002cf02:	mov    QWORD PTR [rdx+0x8],r8
   14002cf06:	mov    rbx,QWORD PTR [rsp+0x38]
   14002cf0b:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cf10:	add    rsp,0x20
   14002cf14:	pop    rdi
   14002cf15:	ret    
   14002cf16:	cmp    r9,0x1
   14002cf1a:	jne    0x14002cf2f
   14002cf1c:	or     eax,0xffffffff
   14002cf1f:	mov    rbx,QWORD PTR [rsp+0x38]
   14002cf24:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cf29:	add    rsp,0x20
   14002cf2d:	pop    rdi
   14002cf2e:	ret    
   14002cf2f:	mov    QWORD PTR [rsp+0x30],rbp
   14002cf34:	mov    rbp,QWORD PTR [rbx+0xa8]
   14002cf3b:	mov    QWORD PTR [rbx+0xa8],rsi
   14002cf42:	mov    ecx,DWORD PTR [rdx+0x4]
   14002cf45:	cmp    ecx,0x8
   14002cf48:	jne    0x14002d055
   14002cf4e:	movsxd r10,DWORD PTR [rip+0x2e3cb]        # 0x14005b320
   14002cf55:	mov    ecx,DWORD PTR [rip+0x2e3c9]        # 0x14005b324
   14002cf5b:	add    ecx,r10d
   14002cf5e:	mov    r11,r10
   14002cf61:	cmp    r10d,ecx
   14002cf64:	jge    0x14002cf97
   14002cf66:	shl    r11,0x4
   14002cf6a:	xor    r8d,r8d
   14002cf6d:	data16 xchg ax,ax
   14002cf70:	mov    rax,QWORD PTR [rbx+0xa0]
   14002cf77:	add    r10d,0x1
   14002cf7b:	add    r11,0x10
   14002cf7f:	mov    QWORD PTR [r11+rax*1-0x8],r8
   14002cf84:	mov    ecx,DWORD PTR [rip+0x2e39a]        # 0x14005b324
   14002cf8a:	mov    eax,DWORD PTR [rip+0x2e390]        # 0x14005b320
   14002cf90:	add    ecx,eax
   14002cf92:	cmp    r10d,ecx
   14002cf95:	jl     0x14002cf70
   14002cf97:	mov    eax,DWORD PTR [rdx]
   14002cf99:	mov    edi,DWORD PTR [rbx+0xb0]
   14002cf9f:	cmp    eax,0xc000008e
   14002cfa4:	jne    0x14002cfb2
   14002cfa6:	mov    DWORD PTR [rbx+0xb0],0x83
   14002cfb0:	jmp    0x14002d022
   14002cfb2:	cmp    eax,0xc0000090
   14002cfb7:	jne    0x14002cfc5
   14002cfb9:	mov    DWORD PTR [rbx+0xb0],0x81
   14002cfc3:	jmp    0x14002d022
   14002cfc5:	cmp    eax,0xc0000091
   14002cfca:	jne    0x14002cfd8
   14002cfcc:	mov    DWORD PTR [rbx+0xb0],0x84
   14002cfd6:	jmp    0x14002d022
   14002cfd8:	cmp    eax,0xc0000093
   14002cfdd:	jne    0x14002cfeb
   14002cfdf:	mov    DWORD PTR [rbx+0xb0],0x85
   14002cfe9:	jmp    0x14002d022
   14002cfeb:	cmp    eax,0xc000008d
   14002cff0:	jne    0x14002cffe
   14002cff2:	mov    DWORD PTR [rbx+0xb0],0x82
   14002cffc:	jmp    0x14002d022
   14002cffe:	cmp    eax,0xc000008f
   14002d003:	jne    0x14002d011
   14002d005:	mov    DWORD PTR [rbx+0xb0],0x86
   14002d00f:	jmp    0x14002d022
   14002d011:	cmp    eax,0xc0000092
   14002d016:	jne    0x14002d022
   14002d018:	mov    DWORD PTR [rbx+0xb0],0x8a
   14002d022:	mov    edx,DWORD PTR [rbx+0xb0]
   14002d028:	mov    ecx,0x8
   14002d02d:	call   r9
   14002d030:	mov    QWORD PTR [rbx+0xa8],rbp
   14002d037:	mov    rbp,QWORD PTR [rsp+0x30]
   14002d03c:	mov    DWORD PTR [rbx+0xb0],edi
   14002d042:	or     eax,0xffffffff
   14002d045:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d04a:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d04f:	add    rsp,0x20
   14002d053:	pop    rdi
   14002d054:	ret    
   14002d055:	xor    r8d,r8d
   14002d058:	mov    QWORD PTR [rdx+0x8],r8
   14002d05c:	call   r9
   14002d05f:	mov    QWORD PTR [rbx+0xa8],rbp
   14002d066:	mov    rbp,QWORD PTR [rsp+0x30]
   14002d06b:	or     eax,0xffffffff
   14002d06e:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d073:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d078:	add    rsp,0x20
   14002d07c:	pop    rdi
   14002d07d:	ret    
   14002d07e:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d083:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d088:	xor    eax,eax
   14002d08a:	add    rsp,0x20
   14002d08e:	pop    rdi
   14002d08f:	ret    
   14002d090:	mov    rcx,QWORD PTR [rip+0x36151]        # 0x1400631e8
   14002d097:	lea    rax,[rip+0x1d80a]        # 0x14004a8a8
   14002d09e:	xor    edx,edx
   14002d0a0:	test   rcx,rcx
   14002d0a3:	cmove  rcx,rax
   14002d0a7:	movzx  eax,WORD PTR [rcx]
   14002d0aa:	cmp    ax,0x20
   14002d0ae:	ja     0x14002d0b9
   14002d0b0:	test   ax,ax
   14002d0b3:	je     0x14002d0e9
   14002d0b5:	test   edx,edx
   14002d0b7:	je     0x14002d0ce
   14002d0b9:	cmp    ax,0x22
   14002d0bd:	jne    0x14002d0c8
   14002d0bf:	xor    eax,eax
   14002d0c1:	test   edx,edx
   14002d0c3:	sete   al
   14002d0c6:	mov    edx,eax
   14002d0c8:	add    rcx,0x2
   14002d0cc:	jmp    0x14002d0a7
   14002d0ce:	movzx  eax,WORD PTR [rcx]
   14002d0d1:	test   ax,ax
   14002d0d4:	je     0x14002d0e9
   14002d0d6:	cmp    ax,0x20
   14002d0da:	ja     0x14002d0e9
   14002d0dc:	mov    ax,WORD PTR [rcx+0x2]
   14002d0e0:	add    rcx,0x2
   14002d0e4:	test   ax,ax
   14002d0e7:	jne    0x14002d0d6
   14002d0e9:	mov    rax,rcx
   14002d0ec:	ret    
   14002d0ed:	int3   
   14002d0ee:	int3   
   14002d0ef:	int3   
   14002d0f0:	push   r12
   14002d0f2:	sub    rsp,0x30
   14002d0f6:	mov    rdx,QWORD PTR [rip+0x33be3]        # 0x140060ce0
   14002d0fd:	xor    r12d,r12d
   14002d100:	test   rdx,rdx
   14002d103:	mov    r8d,r12d
   14002d106:	jne    0x14002d112
   14002d108:	or     eax,0xffffffff
   14002d10b:	add    rsp,0x30
   14002d10f:	pop    r12
   14002d111:	ret    
   14002d112:	movzx  eax,WORD PTR [rdx]
   14002d115:	mov    QWORD PTR [rsp+0x50],rsi
   14002d11a:	mov    QWORD PTR [rsp+0x58],rdi
   14002d11f:	test   ax,ax
   14002d122:	je     0x14002d149
   14002d124:	cmp    ax,0x3d
   14002d128:	je     0x14002d12e
   14002d12a:	add    r8d,0x1
   14002d12e:	xor    eax,eax
   14002d130:	or     rcx,0xffffffffffffffff
   14002d134:	mov    rdi,rdx
   14002d137:	repnz scas ax,WORD PTR es:[rdi]
   14002d13a:	not    rcx
   14002d13d:	lea    rdx,[rdx+rcx*2]
   14002d141:	mov    ax,WORD PTR [rdx]
   14002d144:	test   ax,ax
   14002d147:	jne    0x14002d124
   14002d149:	lea    eax,[r8+0x1]
   14002d14d:	mov    edx,0x8
   14002d152:	movsxd rcx,eax
   14002d155:	call   0x140032130
   14002d15a:	test   rax,rax
   14002d15d:	mov    rsi,rax
   14002d160:	mov    QWORD PTR [rip+0x33bc9],rax        # 0x140060d30
   14002d167:	jne    0x14002d17d
   14002d169:	mov    rsi,QWORD PTR [rsp+0x50]
   14002d16e:	mov    rdi,QWORD PTR [rsp+0x58]
   14002d173:	or     eax,0xffffffff
   14002d176:	add    rsp,0x30
   14002d17a:	pop    r12
   14002d17c:	ret    
   14002d17d:	mov    QWORD PTR [rsp+0x40],rbx
   14002d182:	mov    rbx,QWORD PTR [rip+0x33b57]        # 0x140060ce0
   14002d189:	mov    QWORD PTR [rsp+0x48],rbp
   14002d18e:	movzx  edx,WORD PTR [rbx]
   14002d191:	test   dx,dx
   14002d194:	je     0x14002d20c
   14002d196:	data16 data16 xchg ax,ax
   14002d19a:	data16 xchg ax,ax
   14002d19d:	data16 xchg ax,ax
   14002d1a0:	or     rcx,0xffffffffffffffff
   14002d1a4:	xor    eax,eax
   14002d1a6:	mov    rdi,rbx
   14002d1a9:	repnz scas ax,WORD PTR es:[rdi]
   14002d1ac:	cmp    dx,0x3d
   14002d1b0:	not    rcx
   14002d1b3:	movsxd rdi,ecx
   14002d1b6:	je     0x14002d1f8
   14002d1b8:	movsxd rbp,ecx
   14002d1bb:	lea    edx,[rax+0x2]
   14002d1be:	mov    rcx,rbp
   14002d1c1:	call   0x140032130
   14002d1c6:	test   rax,rax
   14002d1c9:	mov    QWORD PTR [rsi],rax
   14002d1cc:	je     0x14002d245
   14002d1ce:	mov    r8,rbx
   14002d1d1:	mov    rdx,rbp
   14002d1d4:	mov    rcx,rax
   14002d1d7:	call   0x14002a9a0
   14002d1dc:	test   eax,eax
   14002d1de:	je     0x14002d1f4
   14002d1e0:	xor    r9d,r9d
   14002d1e3:	xor    r8d,r8d
   14002d1e6:	xor    edx,edx
   14002d1e8:	xor    ecx,ecx
   14002d1ea:	mov    QWORD PTR [rsp+0x20],r12
   14002d1ef:	call   0x14002e860
   14002d1f4:	add    rsi,0x8
   14002d1f8:	mov    dx,WORD PTR [rbx+rdi*2]
   14002d1fc:	lea    rbx,[rbx+rdi*2]
   14002d200:	test   dx,dx
   14002d203:	jne    0x14002d1a0
   14002d205:	mov    rbx,QWORD PTR [rip+0x33ad4]        # 0x140060ce0
   14002d20c:	mov    rcx,rbx
   14002d20f:	call   0x14002a380
   14002d214:	mov    QWORD PTR [rip+0x33ac5],r12        # 0x140060ce0
   14002d21b:	mov    QWORD PTR [rsi],r12
   14002d21e:	mov    DWORD PTR [rip+0x35f98],0x1        # 0x1400631c0
   14002d228:	xor    eax,eax
   14002d22a:	mov    rbp,QWORD PTR [rsp+0x48]
   14002d22f:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d234:	mov    rsi,QWORD PTR [rsp+0x50]
   14002d239:	mov    rdi,QWORD PTR [rsp+0x58]
   14002d23e:	add    rsp,0x30
   14002d242:	pop    r12
   14002d244:	ret    
   14002d245:	mov    rcx,QWORD PTR [rip+0x33ae4]        # 0x140060d30
   14002d24c:	call   0x14002a380
   14002d251:	mov    QWORD PTR [rip+0x33ad8],r12        # 0x140060d30
   14002d258:	or     eax,0xffffffff
   14002d25b:	jmp    0x14002d22a
   14002d25d:	int3   
   14002d25e:	int3   
   14002d25f:	int3   
   14002d260:	mov    QWORD PTR [rsp+0x8],rbx
   14002d265:	mov    QWORD PTR [rsp+0x10],rdi
   14002d26a:	test   rdx,rdx
   14002d26d:	mov    r11,QWORD PTR [rsp+0x28]
   14002d272:	mov    rdi,r9
   14002d275:	mov    DWORD PTR [r11],0x0
   14002d27c:	mov    rbx,rdx
   14002d27f:	mov    r10,rcx
   14002d282:	mov    DWORD PTR [r9],0x1
   14002d289:	je     0x14002d292
   14002d28b:	mov    QWORD PTR [rdx],r8
   14002d28e:	add    rbx,0x8
   14002d292:	xor    ecx,ecx
   14002d294:	cmp    WORD PTR [r10],0x22
   14002d299:	jne    0x14002d2ae
   14002d29b:	xor    eax,eax
   14002d29d:	test   ecx,ecx
   14002d29f:	sete   al
   14002d2a2:	add    r10,0x2
   14002d2a6:	mov    ecx,eax
   14002d2a8:	mov    ax,0x22
   14002d2ac:	jmp    0x14002d2d1
   14002d2ae:	add    DWORD PTR [r11],0x1
   14002d2b2:	test   r8,r8
   14002d2b5:	je     0x14002d2c4
   14002d2b7:	movzx  eax,WORD PTR [r10]
   14002d2bb:	add    r8,0x2
   14002d2bf:	mov    WORD PTR [r8-0x2],ax
   14002d2c4:	movzx  eax,WORD PTR [r10]
   14002d2c8:	add    r10,0x2
   14002d2cc:	test   ax,ax
   14002d2cf:	je     0x14002d2ef
   14002d2d1:	test   ecx,ecx
   14002d2d3:	jne    0x14002d294
   14002d2d5:	cmp    ax,0x20
   14002d2d9:	je     0x14002d2e1
   14002d2db:	cmp    ax,0x9
   14002d2df:	jne    0x14002d294
   14002d2e1:	test   r8,r8
   14002d2e4:	je     0x14002d2f3
   14002d2e6:	mov    WORD PTR [r8-0x2],0x0
   14002d2ed:	jmp    0x14002d2f3
   14002d2ef:	sub    r10,0x2
   14002d2f3:	xor    r9d,r9d
   14002d2f6:	data16 data16 xchg ax,ax
   14002d2fa:	data16 xchg ax,ax
   14002d2fd:	data16 xchg ax,ax
   14002d300:	cmp    WORD PTR [r10],0x0
   14002d305:	je     0x14002d3fb
   14002d30b:	xchg   ax,ax
   14002d30d:	data16 xchg ax,ax
   14002d310:	movzx  eax,WORD PTR [r10]
   14002d314:	cmp    ax,0x20
   14002d318:	je     0x14002d320
   14002d31a:	cmp    ax,0x9
   14002d31e:	jne    0x14002d326
   14002d320:	add    r10,0x2
   14002d324:	jmp    0x14002d310
   14002d326:	cmp    WORD PTR [r10],0x0
   14002d32b:	je     0x14002d3fb
   14002d331:	test   rbx,rbx
   14002d334:	je     0x14002d33d
   14002d336:	mov    QWORD PTR [rbx],r8
   14002d339:	add    rbx,0x8
   14002d33d:	add    DWORD PTR [rdi],0x1
   14002d340:	xor    ecx,ecx
   14002d342:	cmp    WORD PTR [r10],0x5c
   14002d347:	mov    edx,0x1
   14002d34c:	jne    0x14002d35d
   14002d34e:	xchg   ax,ax
   14002d350:	add    r10,0x2
   14002d354:	add    ecx,edx
   14002d356:	cmp    WORD PTR [r10],0x5c
   14002d35b:	je     0x14002d350
   14002d35d:	cmp    WORD PTR [r10],0x22
   14002d362:	jne    0x14002d38d
   14002d364:	test   dl,cl
   14002d366:	jne    0x14002d38b
   14002d368:	test   r9d,r9d
   14002d36b:	je     0x14002d37e
   14002d36d:	cmp    WORD PTR [r10+0x2],0x22
   14002d373:	lea    rax,[r10+0x2]
   14002d377:	jne    0x14002d37e
   14002d379:	mov    r10,rax
   14002d37c:	jmp    0x14002d38b
   14002d37e:	xor    eax,eax
   14002d380:	xor    edx,edx
   14002d382:	test   r9d,r9d
   14002d385:	sete   al
   14002d388:	mov    r9d,eax
   14002d38b:	shr    ecx,1
   14002d38d:	test   ecx,ecx
   14002d38f:	je     0x14002d3ab
   14002d391:	add    ecx,0xffffffff
   14002d394:	test   r8,r8
   14002d397:	je     0x14002d3a3
   14002d399:	mov    WORD PTR [r8],0x5c
   14002d39f:	add    r8,0x2
   14002d3a3:	add    DWORD PTR [r11],0x1
   14002d3a7:	test   ecx,ecx
   14002d3a9:	jne    0x14002d391
   14002d3ab:	movzx  eax,WORD PTR [r10]
   14002d3af:	test   ax,ax
   14002d3b2:	je     0x14002d3e3
   14002d3b4:	test   r9d,r9d
   14002d3b7:	jne    0x14002d3c5
   14002d3b9:	cmp    ax,0x20
   14002d3bd:	je     0x14002d3e3
   14002d3bf:	cmp    ax,0x9
   14002d3c3:	je     0x14002d3e3
   14002d3c5:	test   edx,edx
   14002d3c7:	je     0x14002d3da
   14002d3c9:	test   r8,r8
   14002d3cc:	je     0x14002d3d6
   14002d3ce:	mov    WORD PTR [r8],ax
   14002d3d2:	add    r8,0x2
   14002d3d6:	add    DWORD PTR [r11],0x1
   14002d3da:	add    r10,0x2
   14002d3de:	jmp    0x14002d340
   14002d3e3:	test   r8,r8
   14002d3e6:	je     0x14002d3f2
   14002d3e8:	mov    WORD PTR [r8],0x0
   14002d3ee:	add    r8,0x2
   14002d3f2:	add    DWORD PTR [r11],0x1
   14002d3f6:	jmp    0x14002d300
   14002d3fb:	test   rbx,rbx
   14002d3fe:	je     0x14002d407
   14002d400:	mov    QWORD PTR [rbx],0x0
   14002d407:	add    DWORD PTR [rdi],0x1
   14002d40a:	mov    rbx,QWORD PTR [rsp+0x8]
   14002d40f:	mov    rdi,QWORD PTR [rsp+0x10]
   14002d414:	ret    
   14002d415:	int3   
   14002d416:	int3   
   14002d417:	int3   
   14002d418:	int3   
   14002d419:	int3   
   14002d41a:	int3   
   14002d41b:	int3   
   14002d41c:	int3   
   14002d41d:	int3   
   14002d41e:	int3   
   14002d41f:	int3   
   14002d420:	mov    QWORD PTR [rsp+0x18],rbx
   14002d425:	mov    QWORD PTR [rsp+0x20],rsi
   14002d42a:	push   rdi
   14002d42b:	sub    rsp,0x30
   14002d42f:	lea    rbx,[rip+0x33c4a]        # 0x140061080
   14002d436:	mov    r8d,0x104
   14002d43c:	xor    ecx,ecx
   14002d43e:	mov    rdx,rbx
   14002d441:	mov    WORD PTR [rip+0x33e3e],0x0        # 0x140061288
   14002d44a:	call   QWORD PTR [rip+0x16000]        # 0x140043450
   14002d450:	mov    rsi,QWORD PTR [rip+0x35d91]        # 0x1400631e8
   14002d457:	mov    QWORD PTR [rip+0x338ea],rbx        # 0x140060d48
   14002d45e:	test   rsi,rsi
   14002d461:	je     0x14002d469
   14002d463:	cmp    WORD PTR [rsi],0x0
   14002d467:	jne    0x14002d46c
   14002d469:	mov    rsi,rbx
   14002d46c:	xor    ebx,ebx
   14002d46e:	xor    r9d,r9d
   14002d471:	xor    r8d,r8d
   14002d474:	mov    rdx,rsi
   14002d477:	xor    ecx,ecx
   14002d479:	lea    edi,[rbx+0x1]
   14002d47c:	mov    DWORD PTR [rsp+0x40],r9d
   14002d481:	movzx  eax,WORD PTR [rdx]
   14002d484:	cmp    ax,0x22
   14002d488:	jne    0x14002d49d
   14002d48a:	xor    eax,eax
   14002d48c:	test   ecx,ecx
   14002d48e:	sete   al
   14002d491:	add    rdx,0x2
   14002d495:	mov    ecx,eax
   14002d497:	mov    ax,0x22
   14002d49b:	jmp    0x14002d4be
   14002d49d:	add    r9d,edi
   14002d4a0:	test   r8,r8
   14002d4a3:	mov    DWORD PTR [rsp+0x40],r9d
   14002d4a8:	je     0x14002d4b2
   14002d4aa:	mov    WORD PTR [r8],ax
   14002d4ae:	add    r8,0x2
   14002d4b2:	movzx  eax,WORD PTR [rdx]
   14002d4b5:	add    rdx,0x2
   14002d4b9:	test   ax,ax
   14002d4bc:	je     0x14002d4da
   14002d4be:	test   ecx,ecx
   14002d4c0:	jne    0x14002d481
   14002d4c2:	cmp    ax,0x20
   14002d4c6:	je     0x14002d4ce
   14002d4c8:	cmp    ax,0x9
   14002d4cc:	jne    0x14002d481
   14002d4ce:	test   r8,r8
   14002d4d1:	je     0x14002d4de
   14002d4d3:	mov    WORD PTR [r8-0x2],bx
   14002d4d8:	jmp    0x14002d4de
   14002d4da:	sub    rdx,0x2
   14002d4de:	xor    r11d,r11d
   14002d4e1:	cmp    WORD PTR [rdx],0x0
   14002d4e5:	je     0x14002d5df
   14002d4eb:	xchg   ax,ax
   14002d4ed:	data16 xchg ax,ax
   14002d4f0:	movzx  eax,WORD PTR [rdx]
   14002d4f3:	cmp    ax,0x20
   14002d4f7:	je     0x14002d4ff
   14002d4f9:	cmp    ax,0x9
   14002d4fd:	jne    0x14002d505
   14002d4ff:	add    rdx,0x2
   14002d503:	jmp    0x14002d4f0
   14002d505:	cmp    WORD PTR [rdx],0x0
   14002d509:	je     0x14002d5df
   14002d50f:	test   rbx,rbx
   14002d512:	je     0x14002d51b
   14002d514:	mov    QWORD PTR [rbx],r8
   14002d517:	add    rbx,0x8
   14002d51b:	add    edi,0x1
   14002d51e:	xchg   ax,ax
   14002d520:	xor    ecx,ecx
   14002d522:	cmp    WORD PTR [rdx],0x5c
   14002d526:	lea    r10d,[rcx+0x1]
   14002d52a:	jne    0x14002d53d
   14002d52c:	data16 data16 xchg ax,ax
   14002d530:	add    rdx,0x2
   14002d534:	add    ecx,r10d
   14002d537:	cmp    WORD PTR [rdx],0x5c
   14002d53b:	je     0x14002d530
   14002d53d:	cmp    WORD PTR [rdx],0x22
   14002d541:	jne    0x14002d56d
   14002d543:	test   r10b,cl
   14002d546:	jne    0x14002d56b
   14002d548:	test   r11d,r11d
   14002d54b:	je     0x14002d55d
   14002d54d:	cmp    WORD PTR [rdx+0x2],0x22
   14002d552:	lea    rax,[rdx+0x2]
   14002d556:	jne    0x14002d55d
   14002d558:	mov    rdx,rax
   14002d55b:	jmp    0x14002d56b
   14002d55d:	xor    eax,eax
   14002d55f:	xor    r10d,r10d
   14002d562:	test   r11d,r11d
   14002d565:	sete   al
   14002d568:	mov    r11d,eax
   14002d56b:	shr    ecx,1
   14002d56d:	test   ecx,ecx
   14002d56f:	je     0x14002d58a
   14002d571:	add    r9d,ecx
   14002d574:	add    ecx,0xffffffff
   14002d577:	test   r8,r8
   14002d57a:	je     0x14002d586
   14002d57c:	mov    WORD PTR [r8],0x5c
   14002d582:	add    r8,0x2
   14002d586:	test   ecx,ecx
   14002d588:	jne    0x14002d574
   14002d58a:	movzx  eax,WORD PTR [rdx]
   14002d58d:	test   ax,ax
   14002d590:	je     0x14002d5c2
   14002d592:	test   r11d,r11d
   14002d595:	jne    0x14002d5a3
   14002d597:	cmp    ax,0x20
   14002d59b:	je     0x14002d5c2
   14002d59d:	cmp    ax,0x9
   14002d5a1:	je     0x14002d5c2
   14002d5a3:	test   r10d,r10d
   14002d5a6:	je     0x14002d5b9
   14002d5a8:	test   r8,r8
   14002d5ab:	je     0x14002d5b5
   14002d5ad:	mov    WORD PTR [r8],ax
   14002d5b1:	add    r8,0x2
   14002d5b5:	add    r9d,0x1
   14002d5b9:	add    rdx,0x2
   14002d5bd:	jmp    0x14002d520
   14002d5c2:	test   r8,r8
   14002d5c5:	je     0x14002d5d1
   14002d5c7:	mov    WORD PTR [r8],0x0
   14002d5cd:	add    r8,0x2
   14002d5d1:	add    r9d,0x1
   14002d5d5:	mov    DWORD PTR [rsp+0x40],r9d
   14002d5da:	jmp    0x14002d4e1
   14002d5df:	test   rbx,rbx
   14002d5e2:	je     0x14002d5eb
   14002d5e4:	mov    QWORD PTR [rbx],0x0
   14002d5eb:	add    edi,0x1
   14002d5ee:	movabs rax,0x1fffffffffffffff
   14002d5f8:	mov    DWORD PTR [rsp+0x48],edi
   14002d5fc:	movsxd rdi,edi
   14002d5ff:	cmp    rdi,rax
   14002d602:	jae    0x14002d679
   14002d604:	movsxd rax,r9d
   14002d607:	movabs rcx,0x7fffffffffffffff
   14002d611:	cmp    rax,rcx
   14002d614:	jae    0x14002d679
   14002d616:	lea    rcx,[rax+rdi*4]
   14002d61a:	add    rax,rax
   14002d61d:	add    rcx,rcx
   14002d620:	cmp    rcx,rax
   14002d623:	jb     0x14002d679
   14002d625:	call   0x1400320c0
   14002d62a:	test   rax,rax
   14002d62d:	mov    rbx,rax
   14002d630:	je     0x14002d679
   14002d632:	lea    r8,[rax+rdi*8]
   14002d636:	lea    rax,[rsp+0x40]
   14002d63b:	lea    r9,[rsp+0x48]
   14002d640:	mov    rdx,rbx
   14002d643:	mov    rcx,rsi
   14002d646:	mov    QWORD PTR [rsp+0x20],rax
   14002d64b:	call   0x14002d260
   14002d650:	mov    r11d,DWORD PTR [rsp+0x48]
   14002d655:	mov    QWORD PTR [rip+0x336bc],rbx        # 0x140060d18
   14002d65c:	add    r11d,0xffffffff
   14002d660:	xor    eax,eax
   14002d662:	mov    DWORD PTR [rip+0x3369f],r11d        # 0x140060d08
   14002d669:	mov    rbx,QWORD PTR [rsp+0x50]
   14002d66e:	mov    rsi,QWORD PTR [rsp+0x58]
   14002d673:	add    rsp,0x30
   14002d677:	pop    rdi
   14002d678:	ret    
   14002d679:	mov    rbx,QWORD PTR [rsp+0x50]
   14002d67e:	mov    rsi,QWORD PTR [rsp+0x58]
   14002d683:	or     eax,0xffffffff
   14002d686:	add    rsp,0x30
   14002d68a:	pop    rdi
   14002d68b:	ret    
   14002d68c:	int3   
   14002d68d:	int3   
   14002d68e:	int3   
   14002d68f:	int3   
   14002d690:	mov    QWORD PTR [rsp+0x10],rbx
   14002d695:	mov    QWORD PTR [rsp+0x18],rbp
   14002d69a:	push   rsi
   14002d69b:	push   rdi
   14002d69c:	push   r12
   14002d69e:	sub    rsp,0x30
   14002d6a2:	mov    eax,DWORD PTR [rip+0x33be4]        # 0x14006128c
   14002d6a8:	xor    r12d,r12d
   14002d6ab:	test   eax,eax
   14002d6ad:	mov    ebp,r12d
   14002d6b0:	jne    0x14002d6ec
   14002d6b2:	call   QWORD PTR [rip+0x15b80]        # 0x140043238
   14002d6b8:	test   rax,rax
   14002d6bb:	mov    rdi,rax
   14002d6be:	je     0x14002d6cc
   14002d6c0:	mov    DWORD PTR [rip+0x33bc2],0x1        # 0x14006128c
   14002d6ca:	jmp    0x14002d6ff
   14002d6cc:	call   QWORD PTR [rip+0x15e16]        # 0x1400434e8
   14002d6d2:	cmp    eax,0x78
   14002d6d5:	jne    0x14002d6e6
   14002d6d7:	mov    DWORD PTR [rip+0x33bab],0x2        # 0x14006128c
   14002d6e1:	jmp    0x14002d769
   14002d6e6:	mov    eax,DWORD PTR [rip+0x33ba0]        # 0x14006128c
   14002d6ec:	cmp    eax,0x1
   14002d6ef:	jne    0x14002d760
   14002d6f1:	call   QWORD PTR [rip+0x15b41]        # 0x140043238
   14002d6f7:	test   rax,rax
   14002d6fa:	mov    rdi,rax
   14002d6fd:	je     0x14002d73a
   14002d6ff:	cmp    WORD PTR [rdi],bp
   14002d702:	mov    rax,rdi
   14002d705:	je     0x14002d719
   14002d707:	add    rax,0x2
   14002d70b:	cmp    WORD PTR [rax],bp
   14002d70e:	jne    0x14002d707
   14002d710:	add    rax,0x2
   14002d714:	cmp    WORD PTR [rax],bp
   14002d717:	jne    0x14002d707
   14002d719:	sub    eax,edi
   14002d71b:	add    eax,0x2
   14002d71e:	movsxd rsi,eax
   14002d721:	mov    rcx,rsi
   14002d724:	call   0x1400320c0
   14002d729:	test   rax,rax
   14002d72c:	mov    rbx,rax
   14002d72f:	jne    0x14002d741
   14002d731:	mov    rcx,rdi
   14002d734:	call   QWORD PTR [rip+0x15af6]        # 0x140043230
   14002d73a:	xor    eax,eax
   14002d73c:	jmp    0x14002d85b
   14002d741:	mov    r8,rsi
   14002d744:	mov    rdx,rdi
   14002d747:	mov    rcx,rax
   14002d74a:	call   0x14002b7a0
   14002d74f:	mov    rcx,rdi
   14002d752:	call   QWORD PTR [rip+0x15ad8]        # 0x140043230
   14002d758:	mov    rax,rbx
   14002d75b:	jmp    0x14002d85b
   14002d760:	cmp    eax,0x2
   14002d763:	je     0x14002d769
   14002d765:	test   eax,eax
   14002d767:	jne    0x14002d73a
   14002d769:	call   QWORD PTR [rip+0x15ab9]        # 0x140043228
   14002d76f:	test   rax,rax
   14002d772:	mov    rsi,rax
   14002d775:	je     0x14002d73a
   14002d777:	cmp    BYTE PTR [rax],bpl
   14002d77a:	mov    rbx,rax
   14002d77d:	je     0x14002d7b8
   14002d77f:	nop
   14002d780:	or     r9d,0xffffffff
   14002d784:	mov    r8,rbx
   14002d787:	xor    ecx,ecx
   14002d789:	lea    edx,[r9+0x2]
   14002d78d:	mov    DWORD PTR [rsp+0x28],r12d
   14002d792:	mov    QWORD PTR [rsp+0x20],r12
   14002d797:	call   QWORD PTR [rip+0x15d2b]        # 0x1400434c8
   14002d79d:	test   eax,eax
   14002d79f:	je     0x14002d73a
   14002d7a1:	or     rcx,0xffffffffffffffff
   14002d7a5:	add    ebp,eax
   14002d7a7:	mov    rdi,rbx
   14002d7aa:	xor    eax,eax
   14002d7ac:	repnz scas al,BYTE PTR es:[rdi]
   14002d7ae:	not    rcx
   14002d7b1:	add    rbx,rcx
   14002d7b4:	cmp    BYTE PTR [rbx],al
   14002d7b6:	jne    0x14002d780
   14002d7b8:	add    ebp,0x1
   14002d7bb:	mov    edx,0x2
   14002d7c0:	movsxd rcx,ebp
   14002d7c3:	call   0x140032130
   14002d7c8:	test   rax,rax
   14002d7cb:	mov    r12,rax
   14002d7ce:	jne    0x14002d7dd
   14002d7d0:	mov    rcx,rsi
   14002d7d3:	call   QWORD PTR [rip+0x15a47]        # 0x140043220
   14002d7d9:	xor    eax,eax
   14002d7db:	jmp    0x14002d85b
   14002d7dd:	cmp    BYTE PTR [rsi],0x0
   14002d7e0:	mov    QWORD PTR [rsp+0x50],r13
   14002d7e5:	mov    rbx,rax
   14002d7e8:	mov    r13,rsi
   14002d7eb:	je     0x14002d845
   14002d7ed:	data16 xchg ax,ax
   14002d7f0:	or     r9d,0xffffffff
   14002d7f4:	mov    eax,ebp
   14002d7f6:	mov    rcx,rbx
   14002d7f9:	sub    rcx,r12
   14002d7fc:	lea    edx,[r9+0x2]
   14002d800:	mov    r8,r13
   14002d803:	sar    rcx,1
   14002d806:	sub    eax,ecx
   14002d808:	xor    ecx,ecx
   14002d80a:	mov    DWORD PTR [rsp+0x28],eax
   14002d80e:	mov    QWORD PTR [rsp+0x20],rbx
   14002d813:	call   QWORD PTR [rip+0x15caf]        # 0x1400434c8
   14002d819:	test   eax,eax
   14002d81b:	je     0x14002d86e
   14002d81d:	or     rcx,0xffffffffffffffff
   14002d821:	xor    eax,eax
   14002d823:	mov    rdi,r13
   14002d826:	repnz scas al,BYTE PTR es:[rdi]
   14002d828:	mov    rdi,rbx
   14002d82b:	not    rcx
   14002d82e:	add    r13,rcx
   14002d831:	or     rcx,0xffffffffffffffff
   14002d835:	repnz scas ax,WORD PTR es:[rdi]
   14002d838:	cmp    BYTE PTR [r13+0x0],al
   14002d83c:	not    rcx
   14002d83f:	lea    rbx,[rbx+rcx*2]
   14002d843:	jne    0x14002d7f0
   14002d845:	mov    rcx,rsi
   14002d848:	mov    WORD PTR [rbx],0x0
   14002d84d:	call   QWORD PTR [rip+0x159cd]        # 0x140043220
   14002d853:	mov    rax,r12
   14002d856:	mov    r13,QWORD PTR [rsp+0x50]
   14002d85b:	mov    rbx,QWORD PTR [rsp+0x58]
   14002d860:	mov    rbp,QWORD PTR [rsp+0x60]
   14002d865:	add    rsp,0x30
   14002d869:	pop    r12
   14002d86b:	pop    rdi
   14002d86c:	pop    rsi
   14002d86d:	ret    
   14002d86e:	mov    rcx,r12
   14002d871:	call   0x14002a380
   14002d876:	mov    rcx,rsi
   14002d879:	call   QWORD PTR [rip+0x159a1]        # 0x140043220
   14002d87f:	xor    eax,eax
   14002d881:	jmp    0x14002d856
   14002d883:	int3   
   14002d884:	int3   
   14002d885:	int3   
   14002d886:	int3   
   14002d887:	int3   
   14002d888:	int3   
   14002d889:	int3   
   14002d88a:	int3   
   14002d88b:	int3   
   14002d88c:	int3   
   14002d88d:	int3   
   14002d88e:	int3   
   14002d88f:	int3   
   14002d890:	sub    rsp,0x38
   14002d894:	mov    eax,DWORD PTR [rip+0x339f6]        # 0x140061290
   14002d89a:	test   eax,eax
   14002d89c:	jne    0x14002d8dc
   14002d89e:	call   QWORD PTR [rip+0x159a4]        # 0x140043248
   14002d8a4:	test   rax,rax
   14002d8a7:	je     0x14002d8be
   14002d8a9:	mov    DWORD PTR [rip+0x339dd],0x1        # 0x140061290
   14002d8b3:	add    rsp,0x38
   14002d8b7:	rex.W jmp QWORD PTR [rip+0x1598a]        # 0x140043248
   14002d8be:	call   QWORD PTR [rip+0x15c24]        # 0x1400434e8
   14002d8c4:	cmp    eax,0x78
   14002d8c7:	jne    0x14002d8d5
   14002d8c9:	mov    DWORD PTR [rip+0x339bd],0x2        # 0x140061290
   14002d8d3:	jmp    0x14002d8f1
   14002d8d5:	xor    eax,eax
   14002d8d7:	add    rsp,0x38
   14002d8db:	ret    
   14002d8dc:	cmp    eax,0x1
   14002d8df:	jne    0x14002d8ec
   14002d8e1:	add    rsp,0x38
   14002d8e5:	rex.W jmp QWORD PTR [rip+0x1595c]        # 0x140043248
   14002d8ec:	cmp    eax,0x2
   14002d8ef:	jne    0x14002d8d5
   14002d8f1:	mov    QWORD PTR [rsp+0x48],rsi
   14002d8f6:	mov    QWORD PTR [rsp+0x30],rdi
   14002d8fb:	call   QWORD PTR [rip+0x1593f]        # 0x140043240
   14002d901:	mov    rsi,rax
   14002d904:	xor    eax,eax
   14002d906:	or     r9d,0xffffffff
   14002d90a:	mov    DWORD PTR [rsp+0x28],eax
   14002d90e:	lea    edx,[rax+0x1]
   14002d911:	mov    r8,rsi
   14002d914:	xor    ecx,ecx
   14002d916:	mov    QWORD PTR [rsp+0x20],rax
   14002d91b:	call   QWORD PTR [rip+0x15ba7]        # 0x1400434c8
   14002d921:	test   eax,eax
   14002d923:	movsxd rdi,eax
   14002d926:	jne    0x14002d939
   14002d928:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d92d:	mov    rdi,QWORD PTR [rsp+0x30]
   14002d932:	xor    eax,eax
   14002d934:	add    rsp,0x38
   14002d938:	ret    
   14002d939:	mov    rcx,rdi
   14002d93c:	mov    edx,0x2
   14002d941:	mov    QWORD PTR [rsp+0x40],rbx
   14002d946:	call   0x140032130
   14002d94b:	test   rax,rax
   14002d94e:	mov    rbx,rax
   14002d951:	je     0x14002d992
   14002d953:	or     r9d,0xffffffff
   14002d957:	mov    r8,rsi
   14002d95a:	xor    ecx,ecx
   14002d95c:	lea    edx,[r9+0x2]
   14002d960:	mov    DWORD PTR [rsp+0x28],edi
   14002d964:	mov    QWORD PTR [rsp+0x20],rax
   14002d969:	call   QWORD PTR [rip+0x15b59]        # 0x1400434c8
   14002d96f:	test   eax,eax
   14002d971:	je     0x14002d98a
   14002d973:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d978:	mov    rdi,QWORD PTR [rsp+0x30]
   14002d97d:	mov    rax,rbx
   14002d980:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d985:	add    rsp,0x38
   14002d989:	ret    
   14002d98a:	mov    rcx,rbx
   14002d98d:	call   0x14002a380
   14002d992:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d997:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d99c:	mov    rdi,QWORD PTR [rsp+0x30]
   14002d9a1:	xor    eax,eax
   14002d9a3:	add    rsp,0x38
   14002d9a7:	ret    
   14002d9a8:	int3   
   14002d9a9:	int3   
   14002d9aa:	int3   
   14002d9ab:	int3   
   14002d9ac:	int3   
   14002d9ad:	int3   
   14002d9ae:	int3   
   14002d9af:	int3   
   14002d9b0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d9b5:	mov    QWORD PTR [rsp+0x10],rsi
   14002d9ba:	mov    QWORD PTR [rsp+0x18],rdi
   14002d9bf:	mov    QWORD PTR [rsp+0x20],r12
   14002d9c4:	push   r13
   14002d9c6:	push   r14
   14002d9c8:	push   r15
   14002d9ca:	sub    rsp,0x90
   14002d9d1:	lea    rcx,[rsp+0x20]
   14002d9d6:	call   QWORD PTR [rip+0x15884]        # 0x140043260
   14002d9dc:	nop
   14002d9dd:	mov    edx,0x50
   14002d9e2:	lea    ecx,[rdx-0x30]
   14002d9e5:	call   0x140032130
   14002d9ea:	mov    r11,rax
   14002d9ed:	test   rax,rax
   14002d9f0:	jne    0x14002d9fa
   14002d9f2:	or     eax,0xffffffff
   14002d9f5:	jmp    0x14002dc9c
   14002d9fa:	mov    QWORD PTR [rip+0x355bf],rax        # 0x140062fc0
   14002da01:	mov    ecx,0x20
   14002da06:	mov    DWORD PTR [rip+0x3559c],ecx        # 0x140062fa8
   14002da0c:	add    rax,0xa00
   14002da12:	cmp    r11,rax
   14002da15:	jae    0x14002da60
   14002da17:	xor    r12d,r12d
   14002da1a:	data16 xchg ax,ax
   14002da1d:	data16 xchg ax,ax
   14002da20:	mov    BYTE PTR [r11+0x8],r12b
   14002da24:	mov    QWORD PTR [r11],0xffffffffffffffff
   14002da2b:	mov    BYTE PTR [r11+0x9],0xa
   14002da30:	mov    DWORD PTR [r11+0xc],r12d
   14002da34:	mov    BYTE PTR [r11+0x38],r12b
   14002da38:	mov    BYTE PTR [r11+0x39],0xa
   14002da3d:	mov    BYTE PTR [r11+0x3a],0xa
   14002da42:	add    r11,0x50
   14002da46:	mov    rax,QWORD PTR [rip+0x35573]        # 0x140062fc0
   14002da4d:	add    rax,0xa00
   14002da53:	cmp    r11,rax
   14002da56:	jb     0x14002da20
   14002da58:	mov    ecx,DWORD PTR [rip+0x3554a]        # 0x140062fa8
   14002da5e:	jmp    0x14002da63
   14002da60:	xor    r12d,r12d
   14002da63:	cmp    WORD PTR [rsp+0x62],0x0
   14002da69:	je     0x14002dbc1
   14002da6f:	mov    r14,QWORD PTR [rsp+0x68]
   14002da74:	test   r14,r14
   14002da77:	je     0x14002dbc1
   14002da7d:	movsxd rax,DWORD PTR [r14]
   14002da80:	add    r14,0x4
   14002da84:	lea    r13,[r14+rax*1]
   14002da88:	mov    r15d,0x800
   14002da8e:	cmp    eax,r15d
   14002da91:	cmovl  r15d,eax
   14002da95:	mov    ebx,0x1
   14002da9a:	cmp    ecx,r15d
   14002da9d:	jge    0x14002db35
   14002daa3:	lea    rdi,[rip+0x35516]        # 0x140062fc0
   14002daaa:	data16 xchg ax,ax
   14002daad:	data16 xchg ax,ax
   14002dab0:	mov    edx,0x50
   14002dab5:	lea    ecx,[rdx-0x30]
   14002dab8:	call   0x140032130
   14002dabd:	mov    r11,rax
   14002dac0:	test   rax,rax
   14002dac3:	je     0x14002db2c
   14002dac5:	mov    QWORD PTR [rdi+rbx*8],rax
   14002dac9:	mov    eax,DWORD PTR [rip+0x354d9]        # 0x140062fa8
   14002dacf:	add    eax,0x20
   14002dad2:	mov    DWORD PTR [rip+0x354d0],eax        # 0x140062fa8
   14002dad8:	lea    rcx,[r11+0xa00]
   14002dadf:	cmp    r11,rcx
   14002dae2:	jae    0x14002db21
   14002dae4:	mov    BYTE PTR [r11+0x8],0x0
   14002dae9:	mov    QWORD PTR [r11],0xffffffffffffffff
   14002daf0:	mov    BYTE PTR [r11+0x9],0xa
   14002daf5:	mov    DWORD PTR [r11+0xc],r12d
   14002daf9:	and    BYTE PTR [r11+0x38],0x80
   14002dafe:	mov    BYTE PTR [r11+0x39],0xa
   14002db03:	mov    BYTE PTR [r11+0x3a],0xa
   14002db08:	add    r11,0x50
   14002db0c:	mov    rax,QWORD PTR [rdi+rbx*8]
   14002db10:	add    rax,0xa00
   14002db16:	cmp    r11,rax
   14002db19:	jb     0x14002dae4
   14002db1b:	mov    eax,DWORD PTR [rip+0x35487]        # 0x140062fa8
   14002db21:	add    rbx,0x1
   14002db25:	cmp    eax,r15d
   14002db28:	jl     0x14002dab0
   14002db2a:	jmp    0x14002db3c
   14002db2c:	mov    r15d,DWORD PTR [rip+0x35475]        # 0x140062fa8
   14002db33:	jmp    0x14002db3c
   14002db35:	lea    rdi,[rip+0x35484]        # 0x140062fc0
   14002db3c:	mov    ebx,r12d
   14002db3f:	test   r15d,r15d
   14002db42:	jle    0x14002dbc1
   14002db44:	mov    rcx,QWORD PTR [r13+0x0]
   14002db48:	cmp    rcx,0xffffffffffffffff
   14002db4c:	je     0x14002dbb1
   14002db4e:	cmp    rcx,0xfffffffffffffffe
   14002db52:	je     0x14002dbb1
   14002db54:	movzx  eax,BYTE PTR [r14]
   14002db58:	test   al,0x1
   14002db5a:	je     0x14002dbb1
   14002db5c:	test   al,0x8
   14002db5e:	jne    0x14002db6a
   14002db60:	call   QWORD PTR [rip+0x156f2]        # 0x140043258
   14002db66:	test   eax,eax
   14002db68:	je     0x14002dbb1
   14002db6a:	movsxd rax,ebx
   14002db6d:	mov    rcx,rax
   14002db70:	sar    rcx,0x5
   14002db74:	and    eax,0x1f
   14002db77:	lea    rsi,[rax+rax*4]
   14002db7b:	shl    rsi,0x4
   14002db7f:	add    rsi,QWORD PTR [rdi+rcx*8]
   14002db83:	mov    rax,QWORD PTR [r13+0x0]
   14002db87:	mov    QWORD PTR [rsi],rax
   14002db8a:	movzx  eax,BYTE PTR [r14]
   14002db8e:	mov    BYTE PTR [rsi+0x8],al
   14002db91:	lea    rcx,[rsi+0x10]
   14002db95:	mov    edx,0xfa0
   14002db9a:	call   0x140035e50
   14002db9f:	test   eax,eax
   14002dba1:	je     0x14002dba9
   14002dba3:	add    DWORD PTR [rsi+0xc],0x1
   14002dba7:	jmp    0x14002dbb1
   14002dba9:	or     eax,0xffffffff
   14002dbac:	jmp    0x14002dc9c
   14002dbb1:	add    ebx,0x1
   14002dbb4:	add    r14,0x1
   14002dbb8:	add    r13,0x8
   14002dbbc:	cmp    ebx,r15d
   14002dbbf:	jl     0x14002db44
   14002dbc1:	mov    r13d,r12d
   14002dbc4:	mov    rdi,r12
   14002dbc7:	data16 xchg ax,ax
   14002dbca:	data16 xchg ax,ax
   14002dbcd:	data16 xchg ax,ax
   14002dbd0:	lea    rbx,[rdi+rdi*4]
   14002dbd4:	shl    rbx,0x4
   14002dbd8:	add    rbx,QWORD PTR [rip+0x353e1]        # 0x140062fc0
   14002dbdf:	mov    rax,QWORD PTR [rbx]
   14002dbe2:	cmp    rax,0xffffffffffffffff
   14002dbe6:	je     0x14002dbf7
   14002dbe8:	cmp    rax,0xfffffffffffffffe
   14002dbec:	je     0x14002dbf7
   14002dbee:	or     BYTE PTR [rbx+0x8],0x80
   14002dbf2:	jmp    0x14002dc77
   14002dbf7:	mov    BYTE PTR [rbx+0x8],0x81
   14002dbfb:	test   rdi,rdi
   14002dbfe:	jne    0x14002dc07
   14002dc00:	mov    ecx,0xfffffff6
   14002dc05:	jmp    0x14002dc14
   14002dc07:	mov    ecx,r12d
   14002dc0a:	cmp    r13d,0x1
   14002dc0e:	sete   cl
   14002dc11:	add    ecx,0xfffffff4
   14002dc14:	call   QWORD PTR [rip+0x155f6]        # 0x140043210
   14002dc1a:	mov    rsi,rax
   14002dc1d:	cmp    rax,0xffffffffffffffff
   14002dc21:	je     0x14002dc6c
   14002dc23:	test   rax,rax
   14002dc26:	je     0x14002dc6c
   14002dc28:	mov    rcx,rax
   14002dc2b:	call   QWORD PTR [rip+0x15627]        # 0x140043258
   14002dc31:	test   eax,eax
   14002dc33:	je     0x14002dc6c
   14002dc35:	mov    QWORD PTR [rbx],rsi
   14002dc38:	movzx  eax,al
   14002dc3b:	cmp    eax,0x2
   14002dc3e:	jne    0x14002dc46
   14002dc40:	or     BYTE PTR [rbx+0x8],0x40
   14002dc44:	jmp    0x14002dc4f
   14002dc46:	cmp    eax,0x3
   14002dc49:	jne    0x14002dc4f
   14002dc4b:	or     BYTE PTR [rbx+0x8],0x8
   14002dc4f:	lea    rcx,[rbx+0x10]
   14002dc53:	mov    edx,0xfa0
   14002dc58:	call   0x140035e50
   14002dc5d:	test   eax,eax
   14002dc5f:	je     0x14002dc67
   14002dc61:	add    DWORD PTR [rbx+0xc],0x1
   14002dc65:	jmp    0x14002dc77
   14002dc67:	or     eax,0xffffffff
   14002dc6a:	jmp    0x14002dc9c
   14002dc6c:	or     BYTE PTR [rbx+0x8],0x40
   14002dc70:	mov    QWORD PTR [rbx],0xfffffffffffffffe
   14002dc77:	add    r13d,0x1
   14002dc7b:	add    rdi,0x1
   14002dc7f:	cmp    rdi,0x3
   14002dc83:	jl     0x14002dbd0
   14002dc89:	mov    ecx,DWORD PTR [rip+0x35319]        # 0x140062fa8
   14002dc8f:	call   QWORD PTR [rip+0x155bb]        # 0x140043250
   14002dc95:	xor    eax,eax
   14002dc97:	jmp    0x14002dc9c
   14002dc99:	or     eax,0xffffffff
   14002dc9c:	lea    r11,[rsp+0x90]
   14002dca4:	mov    rbx,QWORD PTR [r11+0x20]
   14002dca8:	mov    rsi,QWORD PTR [r11+0x28]
   14002dcac:	mov    rdi,QWORD PTR [r11+0x30]
   14002dcb0:	mov    r12,QWORD PTR [r11+0x38]
   14002dcb4:	mov    rsp,r11
   14002dcb7:	pop    r15
   14002dcb9:	pop    r14
   14002dcbb:	pop    r13
   14002dcbd:	ret    
   14002dcbe:	int3   
   14002dcbf:	int3   
   14002dcc0:	rex push rbx
   14002dcc2:	push   rbp
   14002dcc3:	sub    rsp,0x28
   14002dcc7:	mov    rbp,rdx
   14002dcca:	mov    ebx,0x1
   14002dccf:	mov    eax,ebx
   14002dcd1:	mov    eax,ebx
   14002dcd3:	add    rsp,0x28
   14002dcd7:	pop    rbp
   14002dcd8:	pop    rbx
   14002dcd9:	ret    
   14002dcda:	int3   
   14002dcdb:	int3   
   14002dcdc:	int3   
   14002dcdd:	int3   
   14002dcde:	int3   
   14002dcdf:	int3   
   14002dce0:	mov    QWORD PTR [rsp+0x8],rbx
   14002dce5:	push   rdi
   14002dce6:	sub    rsp,0x20
   14002dcea:	lea    rbx,[rip+0x22ce7]        # 0x1400509d8
   14002dcf1:	lea    rdi,[rip+0x22ce0]        # 0x1400509d8
   14002dcf8:	cmp    rbx,rdi
   14002dcfb:	jae    0x14002dd13
   14002dcfd:	data16 xchg ax,ax
   14002dd00:	mov    rax,QWORD PTR [rbx]
   14002dd03:	test   rax,rax
   14002dd06:	je     0x14002dd0a
   14002dd08:	call   rax
   14002dd0a:	add    rbx,0x8
   14002dd0e:	cmp    rbx,rdi
   14002dd11:	jb     0x14002dd00
   14002dd13:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dd18:	add    rsp,0x20
   14002dd1c:	pop    rdi
   14002dd1d:	ret    
   14002dd1e:	int3   
   14002dd1f:	int3   
   14002dd20:	mov    QWORD PTR [rsp+0x8],rbx
   14002dd25:	push   rdi
   14002dd26:	sub    rsp,0x20
   14002dd2a:	lea    rbx,[rip+0x22cb7]        # 0x1400509e8
   14002dd31:	lea    rdi,[rip+0x22cb0]        # 0x1400509e8
   14002dd38:	cmp    rbx,rdi
   14002dd3b:	jae    0x14002dd53
   14002dd3d:	data16 xchg ax,ax
   14002dd40:	mov    rax,QWORD PTR [rbx]
   14002dd43:	test   rax,rax
   14002dd46:	je     0x14002dd4a
   14002dd48:	call   rax
   14002dd4a:	add    rbx,0x8
   14002dd4e:	cmp    rbx,rdi
   14002dd51:	jb     0x14002dd40
   14002dd53:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dd58:	add    rsp,0x20
   14002dd5c:	pop    rdi
   14002dd5d:	ret    
   14002dd5e:	int3   
   14002dd5f:	int3   
   14002dd60:	mov    QWORD PTR [rsp+0x10],rbx
   14002dd65:	mov    QWORD PTR [rsp+0x18],rbp
   14002dd6a:	push   rsi
   14002dd6b:	push   rdi
   14002dd6c:	push   r12
   14002dd6e:	sub    rsp,0x20
   14002dd72:	mov    rbp,rcx
   14002dd75:	mov    ecx,DWORD PTR [rip+0x2d605]        # 0x14005b380
   14002dd7b:	cmp    ecx,0xffffffff
   14002dd7e:	je     0x14002dd94
   14002dd80:	call   QWORD PTR [rip+0x154e2]        # 0x140043268
   14002dd86:	test   rax,rax
   14002dd89:	je     0x14002dd94
   14002dd8b:	mov    rax,QWORD PTR [rax+0x2a8]
   14002dd92:	jmp    0x14002de0e
   14002dd94:	lea    rcx,[rip+0x1adad]        # 0x140048b48
   14002dd9b:	call   QWORD PTR [rip+0x1569f]        # 0x140043440
   14002dda1:	test   rax,rax
   14002dda4:	mov    r12,rax
   14002dda7:	je     0x14002de1a
   14002dda9:	lea    rcx,[rsp+0x40]
   14002ddae:	xor    ebx,ebx
   14002ddb0:	mov    DWORD PTR [rsp+0x40],ebx
   14002ddb4:	call   0x14002c210
   14002ddb9:	cmp    DWORD PTR [rsp+0x40],0x5
   14002ddbe:	jg     0x14002ddfe
   14002ddc0:	xor    ecx,ecx
   14002ddc2:	call   QWORD PTR [rip+0x15678]        # 0x140043440
   14002ddc8:	movsxd rcx,DWORD PTR [rax+0x3c]
   14002ddcc:	add    rcx,rax
   14002ddcf:	movzx  eax,WORD PTR [rcx+0x14]
   14002ddd3:	lea    rdx,[rax+rcx*1+0x18]
   14002ddd8:	movzx  eax,WORD PTR [rcx+0x6]
   14002dddc:	test   eax,eax
   14002ddde:	je     0x14002ddfe
   14002dde0:	lea    rsi,[rip+0x1ad49]        # 0x140048b30
   14002dde7:	mov    rdi,rdx
   14002ddea:	mov    ecx,0x8
   14002ddef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ddf1:	je     0x14002de1a
   14002ddf3:	add    ebx,0x1
   14002ddf6:	add    rdx,0x28
   14002ddfa:	cmp    ebx,eax
   14002ddfc:	jb     0x14002dde0
   14002ddfe:	lea    rdx,[rip+0x1ad33]        # 0x140048b38
   14002de05:	mov    rcx,r12
   14002de08:	call   QWORD PTR [rip+0x156a2]        # 0x1400434b0
   14002de0e:	test   rax,rax
   14002de11:	je     0x14002de1a
   14002de13:	mov    rcx,rbp
   14002de16:	call   rax
   14002de18:	jmp    0x14002de1d
   14002de1a:	mov    rax,rbp
   14002de1d:	mov    rbx,QWORD PTR [rsp+0x48]
   14002de22:	mov    rbp,QWORD PTR [rsp+0x50]
   14002de27:	add    rsp,0x20
   14002de2b:	pop    r12
   14002de2d:	pop    rdi
   14002de2e:	pop    rsi
   14002de2f:	ret    
   14002de30:	mov    QWORD PTR [rsp+0x10],rbx
   14002de35:	mov    QWORD PTR [rsp+0x18],rsi
   14002de3a:	push   rdi
   14002de3b:	sub    rsp,0x20
   14002de3f:	mov    ecx,DWORD PTR [rip+0x2d53b]        # 0x14005b380
   14002de45:	cmp    ecx,0xffffffff
   14002de48:	je     0x14002de61
   14002de4a:	call   QWORD PTR [rip+0x15418]        # 0x140043268
   14002de50:	test   rax,rax
   14002de53:	je     0x14002de61
   14002de55:	mov    rax,QWORD PTR [rax+0x2a8]
   14002de5c:	jmp    0x14002deee
   14002de61:	lea    rcx,[rip+0x1ace0]        # 0x140048b48
   14002de68:	call   QWORD PTR [rip+0x155d2]        # 0x140043440
   14002de6e:	test   rax,rax
   14002de71:	mov    rbx,rax
   14002de74:	je     0x14002df07
   14002de7a:	lea    rcx,[rsp+0x30]
   14002de7f:	mov    DWORD PTR [rsp+0x30],0x0
   14002de87:	call   0x14002c210
   14002de8c:	cmp    DWORD PTR [rsp+0x30],0x5
   14002de91:	jg     0x14002dede
   14002de93:	xor    ecx,ecx
   14002de95:	call   QWORD PTR [rip+0x155a5]        # 0x140043440
   14002de9b:	xor    edx,edx
   14002de9d:	movsxd rcx,DWORD PTR [rax+0x3c]
   14002dea1:	add    rcx,rax
   14002dea4:	movzx  eax,WORD PTR [rcx+0x14]
   14002dea8:	lea    r8,[rax+rcx*1+0x18]
   14002dead:	movzx  eax,WORD PTR [rcx+0x6]
   14002deb1:	test   eax,eax
   14002deb3:	je     0x14002dede
   14002deb5:	data16 data16 xchg ax,ax
   14002deb9:	data16 xchg ax,ax
   14002debc:	data16 data16 xchg ax,ax
   14002dec0:	lea    rsi,[rip+0x1ac69]        # 0x140048b30
   14002dec7:	mov    rdi,r8
   14002deca:	mov    ecx,0x8
   14002decf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ded1:	je     0x14002df07
   14002ded3:	add    edx,0x1
   14002ded6:	add    r8,0x28
   14002deda:	cmp    edx,eax
   14002dedc:	jb     0x14002dec0
   14002dede:	lea    rdx,[rip+0x1ac53]        # 0x140048b38
   14002dee5:	mov    rcx,rbx
   14002dee8:	call   QWORD PTR [rip+0x155c2]        # 0x1400434b0
   14002deee:	test   rax,rax
   14002def1:	je     0x14002df07
   14002def3:	xor    ecx,ecx
   14002def5:	call   rax
   14002def7:	mov    rbx,QWORD PTR [rsp+0x38]
   14002defc:	mov    rsi,QWORD PTR [rsp+0x40]
   14002df01:	add    rsp,0x20
   14002df05:	pop    rdi
   14002df06:	ret    
   14002df07:	mov    rbx,QWORD PTR [rsp+0x38]
   14002df0c:	mov    rsi,QWORD PTR [rsp+0x40]
   14002df11:	xor    eax,eax
   14002df13:	add    rsp,0x20
   14002df17:	pop    rdi
   14002df18:	ret    
   14002df19:	int3   
   14002df1a:	int3   
   14002df1b:	int3   
   14002df1c:	int3   
   14002df1d:	int3   
   14002df1e:	int3   
   14002df1f:	int3   
   14002df20:	mov    QWORD PTR [rsp+0x10],rbx
   14002df25:	mov    QWORD PTR [rsp+0x18],rbp
   14002df2a:	push   rsi
   14002df2b:	push   rdi
   14002df2c:	push   r12
   14002df2e:	sub    rsp,0x20
   14002df32:	mov    rbp,rcx
   14002df35:	mov    ecx,DWORD PTR [rip+0x2d445]        # 0x14005b380
   14002df3b:	cmp    ecx,0xffffffff
   14002df3e:	je     0x14002df54
   14002df40:	call   QWORD PTR [rip+0x15322]        # 0x140043268
   14002df46:	test   rax,rax
   14002df49:	je     0x14002df54
   14002df4b:	mov    rax,QWORD PTR [rax+0x2b0]
   14002df52:	jmp    0x14002dfce
   14002df54:	lea    rcx,[rip+0x1abed]        # 0x140048b48
   14002df5b:	call   QWORD PTR [rip+0x154df]        # 0x140043440
   14002df61:	test   rax,rax
   14002df64:	mov    r12,rax
   14002df67:	je     0x14002dfda
   14002df69:	lea    rcx,[rsp+0x40]
   14002df6e:	xor    ebx,ebx
   14002df70:	mov    DWORD PTR [rsp+0x40],ebx
   14002df74:	call   0x14002c210
   14002df79:	cmp    DWORD PTR [rsp+0x40],0x5
   14002df7e:	jg     0x14002dfbe
   14002df80:	xor    ecx,ecx
   14002df82:	call   QWORD PTR [rip+0x154b8]        # 0x140043440
   14002df88:	movsxd rcx,DWORD PTR [rax+0x3c]
   14002df8c:	add    rcx,rax
   14002df8f:	movzx  eax,WORD PTR [rcx+0x14]
   14002df93:	lea    rdx,[rax+rcx*1+0x18]
   14002df98:	movzx  eax,WORD PTR [rcx+0x6]
   14002df9c:	test   eax,eax
   14002df9e:	je     0x14002dfbe
   14002dfa0:	lea    rsi,[rip+0x1ab89]        # 0x140048b30
   14002dfa7:	mov    rdi,rdx
   14002dfaa:	mov    ecx,0x8
   14002dfaf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002dfb1:	je     0x14002dfda
   14002dfb3:	add    ebx,0x1
   14002dfb6:	add    rdx,0x28
   14002dfba:	cmp    ebx,eax
   14002dfbc:	jb     0x14002dfa0
   14002dfbe:	lea    rdx,[rip+0x1ab93]        # 0x140048b58
   14002dfc5:	mov    rcx,r12
   14002dfc8:	call   QWORD PTR [rip+0x154e2]        # 0x1400434b0
   14002dfce:	test   rax,rax
   14002dfd1:	je     0x14002dfda
   14002dfd3:	mov    rcx,rbp
   14002dfd6:	call   rax
   14002dfd8:	jmp    0x14002dfdd
   14002dfda:	mov    rax,rbp
   14002dfdd:	mov    rbx,QWORD PTR [rsp+0x48]
   14002dfe2:	mov    rbp,QWORD PTR [rsp+0x50]
   14002dfe7:	add    rsp,0x20
   14002dfeb:	pop    r12
   14002dfed:	pop    rdi
   14002dfee:	pop    rsi
   14002dfef:	ret    
   14002dff0:	mov    QWORD PTR [rsp+0x10],rbx
   14002dff5:	mov    QWORD PTR [rsp+0x18],rsi
   14002dffa:	mov    QWORD PTR [rsp+0x20],rdi
   14002dfff:	push   r12
   14002e001:	push   r13
   14002e003:	push   r14
   14002e005:	sub    rsp,0x20
   14002e009:	mov    r13,rdx
   14002e00c:	mov    r12,rcx
   14002e00f:	lea    rcx,[rip+0x1ab32]        # 0x140048b48
   14002e016:	call   QWORD PTR [rip+0x15424]        # 0x140043440
   14002e01c:	mov    r14,rax
   14002e01f:	lea    rax,[rip+0x2d25a]        # 0x14005b280
   14002e026:	mov    QWORD PTR [r12+0xa0],rax
   14002e02e:	mov    DWORD PTR [r12+0x1c],0x1
   14002e037:	test   r14,r14
   14002e03a:	je     0x14002e0ce
   14002e040:	xor    ebx,ebx
   14002e042:	mov    DWORD PTR [rsp+0x40],ebx
   14002e046:	lea    rcx,[rsp+0x40]
   14002e04b:	call   0x14002c210
   14002e050:	cmp    DWORD PTR [rsp+0x40],0x5
   14002e055:	jg     0x14002e09e
   14002e057:	xor    ecx,ecx
   14002e059:	call   QWORD PTR [rip+0x153e1]        # 0x140043440
   14002e05f:	movsxd rcx,DWORD PTR [rax+0x3c]
   14002e063:	add    rcx,rax
   14002e066:	movzx  eax,WORD PTR [rcx+0x14]
   14002e06a:	lea    rdx,[rax+rcx*1+0x18]
   14002e06f:	movzx  eax,WORD PTR [rcx+0x6]
   14002e073:	test   eax,eax
   14002e075:	je     0x14002e09e
   14002e077:	data16 xchg ax,ax
   14002e07a:	data16 xchg ax,ax
   14002e07d:	data16 xchg ax,ax
   14002e080:	lea    rsi,[rip+0x1aaa9]        # 0x140048b30
   14002e087:	mov    rdi,rdx
   14002e08a:	mov    ecx,0x8
   14002e08f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002e091:	je     0x14002e0ce
   14002e093:	add    ebx,0x1
   14002e096:	add    rdx,0x28
   14002e09a:	cmp    ebx,eax
   14002e09c:	jb     0x14002e080
   14002e09e:	lea    rdx,[rip+0x1aa93]        # 0x140048b38
   14002e0a5:	mov    rcx,r14
   14002e0a8:	call   QWORD PTR [rip+0x15402]        # 0x1400434b0
   14002e0ae:	mov    QWORD PTR [r12+0x2a8],rax
   14002e0b6:	lea    rdx,[rip+0x1aa9b]        # 0x140048b58
   14002e0bd:	mov    rcx,r14
   14002e0c0:	call   QWORD PTR [rip+0x153ea]        # 0x1400434b0
   14002e0c6:	mov    QWORD PTR [r12+0x2b0],rax
   14002e0ce:	mov    DWORD PTR [r12+0xc8],0x1
   14002e0da:	mov    BYTE PTR [r12+0x174],0x43
   14002e0e3:	mov    BYTE PTR [r12+0x1f7],0x43
   14002e0ec:	lea    rax,[rip+0x2d2ad]        # 0x14005b3a0
   14002e0f3:	mov    QWORD PTR [r12+0xb8],rax
   14002e0fb:	lock add DWORD PTR [rip+0x2d29d],0x1        # 0x14005b3a0
   14002e103:	mov    ecx,0xc
   14002e108:	call   0x140035aa0
   14002e10d:	nop
   14002e10e:	mov    QWORD PTR [r12+0xc0],r13
   14002e116:	test   r13,r13
   14002e119:	jne    0x14002e12a
   14002e11b:	mov    rax,QWORD PTR [rip+0x2d92e]        # 0x14005ba50
   14002e122:	mov    QWORD PTR [r12+0xc0],rax
   14002e12a:	mov    rcx,QWORD PTR [r12+0xc0]
   14002e132:	call   0x140031860
   14002e137:	nop
   14002e138:	mov    ecx,0xc
   14002e13d:	call   0x140035970
   14002e142:	mov    rbx,QWORD PTR [rsp+0x48]
   14002e147:	mov    rsi,QWORD PTR [rsp+0x50]
   14002e14c:	mov    rdi,QWORD PTR [rsp+0x58]
   14002e151:	add    rsp,0x20
   14002e155:	pop    r14
   14002e157:	pop    r13
   14002e159:	pop    r12
   14002e15b:	ret    
   14002e15c:	int3   
   14002e15d:	int3   
   14002e15e:	int3   
   14002e15f:	int3   
   14002e160:	rex push rbp
   14002e162:	sub    rsp,0x20
   14002e166:	mov    rbp,rdx
   14002e169:	mov    ecx,0xc
   14002e16e:	call   0x140035970
   14002e173:	add    rsp,0x20
   14002e177:	pop    rbp
   14002e178:	ret    
   14002e179:	int3   
   14002e17a:	int3   
   14002e17b:	int3   
   14002e17c:	int3   
   14002e17d:	int3   
   14002e17e:	int3   
   14002e17f:	int3   
   14002e180:	mov    QWORD PTR [rsp+0x8],rbx
   14002e185:	push   rdi
   14002e186:	sub    rsp,0x20
   14002e18a:	call   QWORD PTR [rip+0x15358]        # 0x1400434e8
   14002e190:	mov    ecx,DWORD PTR [rip+0x2d1ea]        # 0x14005b380
   14002e196:	mov    edi,eax
   14002e198:	call   QWORD PTR [rip+0x150ca]        # 0x140043268
   14002e19e:	test   rax,rax
   14002e1a1:	mov    rbx,rax
   14002e1a4:	jne    0x14002e1f1
   14002e1a6:	lea    ecx,[rax+0x1]
   14002e1a9:	mov    edx,0x2d8
   14002e1ae:	call   0x140032130
   14002e1b3:	test   rax,rax
   14002e1b6:	mov    rbx,rax
   14002e1b9:	je     0x14002e1f1
   14002e1bb:	mov    ecx,DWORD PTR [rip+0x2d1bf]        # 0x14005b380
   14002e1c1:	mov    rdx,rax
   14002e1c4:	call   QWORD PTR [rip+0x150a6]        # 0x140043270
   14002e1ca:	mov    rcx,rbx
   14002e1cd:	test   eax,eax
   14002e1cf:	je     0x14002e1ea
   14002e1d1:	xor    edx,edx
   14002e1d3:	call   0x14002dff0
   14002e1d8:	call   QWORD PTR [rip+0x152e2]        # 0x1400434c0
   14002e1de:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14002e1e6:	mov    DWORD PTR [rbx],eax
   14002e1e8:	jmp    0x14002e1f1
   14002e1ea:	call   0x14002a380
   14002e1ef:	xor    ebx,ebx
   14002e1f1:	mov    ecx,edi
   14002e1f3:	call   QWORD PTR [rip+0x1529f]        # 0x140043498
   14002e1f9:	mov    rax,rbx
   14002e1fc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e201:	add    rsp,0x20
   14002e205:	pop    rdi
   14002e206:	ret    
   14002e207:	int3   
   14002e208:	int3   
   14002e209:	int3   
   14002e20a:	int3   
   14002e20b:	int3   
   14002e20c:	int3   
   14002e20d:	int3   
   14002e20e:	int3   
   14002e20f:	int3   
   14002e210:	mov    QWORD PTR [rsp+0x8],rbx
   14002e215:	push   rdi
   14002e216:	sub    rsp,0x20
   14002e21a:	call   QWORD PTR [rip+0x152c8]        # 0x1400434e8
   14002e220:	mov    ecx,DWORD PTR [rip+0x2d15a]        # 0x14005b380
   14002e226:	mov    edi,eax
   14002e228:	call   QWORD PTR [rip+0x1503a]        # 0x140043268
   14002e22e:	test   rax,rax
   14002e231:	mov    rbx,rax
   14002e234:	jne    0x14002e281
   14002e236:	lea    ecx,[rax+0x1]
   14002e239:	mov    edx,0x2d8
   14002e23e:	call   0x140032130
   14002e243:	test   rax,rax
   14002e246:	mov    rbx,rax
   14002e249:	je     0x14002e281
   14002e24b:	mov    ecx,DWORD PTR [rip+0x2d12f]        # 0x14005b380
   14002e251:	mov    rdx,rax
   14002e254:	call   QWORD PTR [rip+0x15016]        # 0x140043270
   14002e25a:	mov    rcx,rbx
   14002e25d:	test   eax,eax
   14002e25f:	je     0x14002e27a
   14002e261:	xor    edx,edx
   14002e263:	call   0x14002dff0
   14002e268:	call   QWORD PTR [rip+0x15252]        # 0x1400434c0
   14002e26e:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14002e276:	mov    DWORD PTR [rbx],eax
   14002e278:	jmp    0x14002e281
   14002e27a:	call   0x14002a380
   14002e27f:	xor    ebx,ebx
   14002e281:	mov    ecx,edi
   14002e283:	call   QWORD PTR [rip+0x1520f]        # 0x140043498
   14002e289:	test   rbx,rbx
   14002e28c:	jne    0x14002e296
   14002e28e:	lea    ecx,[rbx+0x10]
   14002e291:	call   0x14002c0f0
   14002e296:	mov    rax,rbx
   14002e299:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e29e:	add    rsp,0x20
   14002e2a2:	pop    rdi
   14002e2a3:	ret    
   14002e2a4:	int3   
   14002e2a5:	int3   
   14002e2a6:	int3   
   14002e2a7:	int3   
   14002e2a8:	int3   
   14002e2a9:	int3   
   14002e2aa:	int3   
   14002e2ab:	int3   
   14002e2ac:	int3   
   14002e2ad:	int3   
   14002e2ae:	int3   
   14002e2af:	int3   
   14002e2b0:	test   rcx,rcx
   14002e2b3:	je     0x14002e3d6
   14002e2b9:	mov    QWORD PTR [rsp+0x10],rbx
   14002e2be:	push   rdi
   14002e2bf:	sub    rsp,0x20
   14002e2c3:	mov    rbx,rcx
   14002e2c6:	mov    rcx,QWORD PTR [rcx+0x38]
   14002e2ca:	test   rcx,rcx
   14002e2cd:	je     0x14002e2d4
   14002e2cf:	call   0x14002a380
   14002e2d4:	mov    rcx,QWORD PTR [rbx+0x48]
   14002e2d8:	test   rcx,rcx
   14002e2db:	je     0x14002e2e2
   14002e2dd:	call   0x14002a380
   14002e2e2:	mov    rcx,QWORD PTR [rbx+0x58]
   14002e2e6:	test   rcx,rcx
   14002e2e9:	je     0x14002e2f0
   14002e2eb:	call   0x14002a380
   14002e2f0:	mov    rcx,QWORD PTR [rbx+0x68]
   14002e2f4:	test   rcx,rcx
   14002e2f7:	je     0x14002e2fe
   14002e2f9:	call   0x14002a380
   14002e2fe:	mov    rcx,QWORD PTR [rbx+0x78]
   14002e302:	test   rcx,rcx
   14002e305:	je     0x14002e30c
   14002e307:	call   0x14002a380
   14002e30c:	mov    rcx,QWORD PTR [rbx+0x80]
   14002e313:	test   rcx,rcx
   14002e316:	je     0x14002e31d
   14002e318:	call   0x14002a380
   14002e31d:	mov    rcx,QWORD PTR [rbx+0xa0]
   14002e324:	lea    rax,[rip+0x2cf55]        # 0x14005b280
   14002e32b:	cmp    rcx,rax
   14002e32e:	je     0x14002e335
   14002e330:	call   0x14002a380
   14002e335:	mov    ecx,0xd
   14002e33a:	call   0x140035aa0
   14002e33f:	nop
   14002e340:	mov    rcx,QWORD PTR [rbx+0xb8]
   14002e347:	mov    QWORD PTR [rsp+0x30],rcx
   14002e34c:	test   rcx,rcx
   14002e34f:	je     0x14002e36e
   14002e351:	lock add DWORD PTR [rcx],0xffffffff
   14002e355:	jne    0x14002e36e
   14002e357:	lea    rax,[rip+0x2d042]        # 0x14005b3a0
   14002e35e:	mov    rcx,QWORD PTR [rsp+0x30]
   14002e363:	cmp    rcx,rax
   14002e366:	je     0x14002e36e
   14002e368:	call   0x14002a380
   14002e36d:	nop
   14002e36e:	mov    ecx,0xd
   14002e373:	call   0x140035970
   14002e378:	mov    ecx,0xc
   14002e37d:	call   0x140035aa0
   14002e382:	nop
   14002e383:	mov    rdi,QWORD PTR [rbx+0xc0]
   14002e38a:	test   rdi,rdi
   14002e38d:	je     0x14002e3ba
   14002e38f:	mov    rcx,rdi
   14002e392:	call   0x140031900
   14002e397:	cmp    rdi,QWORD PTR [rip+0x2d6b2]        # 0x14005ba50
   14002e39e:	je     0x14002e3ba
   14002e3a0:	lea    rax,[rip+0x2d549]        # 0x14005b8f0
   14002e3a7:	cmp    rdi,rax
   14002e3aa:	je     0x14002e3ba
   14002e3ac:	cmp    DWORD PTR [rdi],0x0
   14002e3af:	jne    0x14002e3ba
   14002e3b1:	mov    rcx,rdi
   14002e3b4:	call   0x1400316d0
   14002e3b9:	nop
   14002e3ba:	mov    ecx,0xc
   14002e3bf:	call   0x140035970
   14002e3c4:	mov    rcx,rbx
   14002e3c7:	call   0x14002a380
   14002e3cc:	mov    rbx,QWORD PTR [rsp+0x38]
   14002e3d1:	add    rsp,0x20
   14002e3d5:	pop    rdi
   14002e3d6:	ret    0x0
   14002e3d9:	int3   
   14002e3da:	int3   
   14002e3db:	int3   
   14002e3dc:	int3   
   14002e3dd:	int3   
   14002e3de:	int3   
   14002e3df:	int3   
   14002e3e0:	rex push rbp
   14002e3e2:	sub    rsp,0x20
   14002e3e6:	mov    rbp,rdx
   14002e3e9:	mov    ecx,0xd
   14002e3ee:	call   0x140035970
   14002e3f3:	add    rsp,0x20
   14002e3f7:	pop    rbp
   14002e3f8:	ret    
   14002e3f9:	int3   
   14002e3fa:	int3   
   14002e3fb:	int3   
   14002e3fc:	int3   
   14002e3fd:	int3   
   14002e3fe:	int3   
   14002e3ff:	int3   
   14002e400:	rex push rbp
   14002e402:	sub    rsp,0x20
   14002e406:	mov    rbp,rdx
   14002e409:	mov    ecx,0xc
   14002e40e:	call   0x140035970
   14002e413:	add    rsp,0x20
   14002e417:	pop    rbp
   14002e418:	ret    
   14002e419:	int3   
   14002e41a:	int3   
   14002e41b:	int3   
   14002e41c:	int3   
   14002e41d:	int3   
   14002e41e:	int3   
   14002e41f:	int3   
   14002e420:	sub    rsp,0x28
   14002e424:	call   0x14002c4b0
   14002e429:	call   0x140035830
   14002e42e:	test   eax,eax
   14002e430:	jne    0x14002e474
   14002e432:	mov    ecx,DWORD PTR [rip+0x2cf48]        # 0x14005b380
   14002e438:	cmp    ecx,0xffffffff
   14002e43b:	je     0x14002e44d
   14002e43d:	call   QWORD PTR [rip+0x15155]        # 0x140043598
   14002e443:	mov    DWORD PTR [rip+0x2cf33],0xffffffff        # 0x14005b380
   14002e44d:	mov    ecx,DWORD PTR [rip+0x2cf31]        # 0x14005b384
   14002e453:	cmp    ecx,0xffffffff
   14002e456:	je     0x14002e468
   14002e458:	call   QWORD PTR [rip+0x14f3a]        # 0x140043398
   14002e45e:	mov    DWORD PTR [rip+0x2cf1c],0xffffffff        # 0x14005b384
   14002e468:	call   0x1400358d0
   14002e46d:	xor    eax,eax
   14002e46f:	add    rsp,0x28
   14002e473:	ret    
   14002e474:	lea    rcx,[rip+0xfffffffffffffe35]        # 0x14002e2b0
   14002e47b:	call   QWORD PTR [rip+0x14df7]        # 0x140043278
   14002e481:	cmp    eax,0xffffffff
   14002e484:	mov    DWORD PTR [rip+0x2cef6],eax        # 0x14005b380
   14002e48a:	jne    0x14002e498
   14002e48c:	mov    ecx,DWORD PTR [rip+0x2cef2]        # 0x14005b384
   14002e492:	cmp    ecx,eax
   14002e494:	je     0x14002e468
   14002e496:	jmp    0x14002e458
   14002e498:	mov    edx,0x2d8
   14002e49d:	mov    ecx,0x1
   14002e4a2:	mov    QWORD PTR [rsp+0x20],rbx
   14002e4a7:	call   0x140032130
   14002e4ac:	test   rax,rax
   14002e4af:	mov    rbx,rax
   14002e4b2:	je     0x14002e4f0
   14002e4b4:	mov    ecx,DWORD PTR [rip+0x2cec6]        # 0x14005b380
   14002e4ba:	mov    rdx,rax
   14002e4bd:	call   QWORD PTR [rip+0x14dad]        # 0x140043270
   14002e4c3:	test   eax,eax
   14002e4c5:	je     0x14002e4f0
   14002e4c7:	xor    edx,edx
   14002e4c9:	mov    rcx,rbx
   14002e4cc:	call   0x14002dff0
   14002e4d1:	call   QWORD PTR [rip+0x14fe9]        # 0x1400434c0
   14002e4d7:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14002e4df:	mov    DWORD PTR [rbx],eax
   14002e4e1:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e4e6:	mov    eax,0x1
   14002e4eb:	add    rsp,0x28
   14002e4ef:	ret    
   14002e4f0:	mov    ecx,DWORD PTR [rip+0x2ce8a]        # 0x14005b380
   14002e4f6:	cmp    ecx,0xffffffff
   14002e4f9:	je     0x14002e50b
   14002e4fb:	call   QWORD PTR [rip+0x15097]        # 0x140043598
   14002e501:	mov    DWORD PTR [rip+0x2ce75],0xffffffff        # 0x14005b380
   14002e50b:	mov    ecx,DWORD PTR [rip+0x2ce73]        # 0x14005b384
   14002e511:	cmp    ecx,0xffffffff
   14002e514:	je     0x14002e526
   14002e516:	call   QWORD PTR [rip+0x14e7c]        # 0x140043398
   14002e51c:	mov    DWORD PTR [rip+0x2ce5e],0xffffffff        # 0x14005b384
   14002e526:	call   0x1400358d0
   14002e52b:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e530:	xor    eax,eax
   14002e532:	add    rsp,0x28
   14002e536:	ret    
   14002e537:	int3   
   14002e538:	int3   
   14002e539:	int3   
   14002e53a:	int3   
   14002e53b:	int3   
   14002e53c:	int3   
   14002e53d:	int3   
   14002e53e:	int3   
   14002e53f:	int3   
   14002e540:	mov    DWORD PTR [rsp+0x8],ecx
   14002e544:	sub    rsp,0x28
   14002e548:	xor    r8d,r8d
   14002e54b:	mov    edx,0x1000
   14002e550:	xor    ecx,ecx
   14002e552:	call   QWORD PTR [rip+0x14d30]        # 0x140043288
   14002e558:	test   rax,rax
   14002e55b:	mov    QWORD PTR [rip+0x32d36],rax        # 0x140061298
   14002e562:	jne    0x14002e569
   14002e564:	add    rsp,0x28
   14002e568:	ret    
   14002e569:	lea    r8,[rsp+0x30]
   14002e56e:	mov    r9d,0x4
   14002e574:	xor    edx,edx
   14002e576:	mov    rcx,rax
   14002e579:	mov    DWORD PTR [rsp+0x30],0x2
   14002e581:	call   QWORD PTR [rip+0x14cf9]        # 0x140043280
   14002e587:	mov    eax,0x1
   14002e58c:	add    rsp,0x28
   14002e590:	ret    
   14002e591:	int3   
   14002e592:	int3   
   14002e593:	int3   
   14002e594:	int3   
   14002e595:	int3   
   14002e596:	int3   
   14002e597:	int3   
   14002e598:	int3   
   14002e599:	int3   
   14002e59a:	int3   
   14002e59b:	int3   
   14002e59c:	int3   
   14002e59d:	int3   
   14002e59e:	int3   
   14002e59f:	int3   
   14002e5a0:	rex push rdi
   14002e5a2:	sub    rsp,0x20
   14002e5a6:	mov    rax,QWORD PTR [rip+0x2c9d3]        # 0x14005af80
   14002e5ad:	movabs rdi,0x2b992ddfa232
   14002e5b7:	mov    QWORD PTR [rsp+0x30],0x0
   14002e5c0:	cmp    rax,rdi
   14002e5c3:	je     0x14002e5d5
   14002e5c5:	not    rax
   14002e5c8:	mov    QWORD PTR [rip+0x2c9b9],rax        # 0x14005af88
   14002e5cf:	add    rsp,0x20
   14002e5d3:	pop    rdi
   14002e5d4:	ret    
   14002e5d5:	lea    rcx,[rsp+0x30]
   14002e5da:	mov    QWORD PTR [rsp+0x40],rbx
   14002e5df:	call   QWORD PTR [rip+0x14cbb]        # 0x1400432a0
   14002e5e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e5ea:	call   QWORD PTR [rip+0x14e38]        # 0x140043428
   14002e5f0:	mov    r11d,eax
   14002e5f3:	xor    rbx,r11
   14002e5f6:	call   QWORD PTR [rip+0x14ec4]        # 0x1400434c0
   14002e5fc:	mov    r11d,eax
   14002e5ff:	xor    rbx,r11
   14002e602:	call   QWORD PTR [rip+0x14c90]        # 0x140043298
   14002e608:	lea    rcx,[rsp+0x38]
   14002e60d:	mov    r11d,eax
   14002e610:	xor    rbx,r11
   14002e613:	call   QWORD PTR [rip+0x14c77]        # 0x140043290
   14002e619:	mov    r11,QWORD PTR [rsp+0x38]
   14002e61e:	xor    r11,rbx
   14002e621:	mov    rbx,QWORD PTR [rsp+0x40]
   14002e626:	movabs rax,0xffffffffffff
   14002e630:	and    r11,rax
   14002e633:	movabs rax,0x2b992ddfa233
   14002e63d:	cmp    r11,rdi
   14002e640:	cmove  r11,rax
   14002e644:	mov    QWORD PTR [rip+0x2c935],r11        # 0x14005af80
   14002e64b:	not    r11
   14002e64e:	mov    QWORD PTR [rip+0x2c933],r11        # 0x14005af88
   14002e655:	add    rsp,0x20
   14002e659:	pop    rdi
   14002e65a:	ret    
   14002e65b:	int3   
   14002e65c:	int3   
   14002e65d:	int3   
   14002e65e:	int3   
   14002e65f:	int3   
   14002e660:	rex push rbx
   14002e662:	sub    rsp,0x30
   14002e666:	mov    rbx,rcx
   14002e669:	mov    ecx,0xe
   14002e66e:	call   0x140035aa0
   14002e673:	nop
   14002e674:	mov    rax,QWORD PTR [rbx+0x8]
   14002e678:	test   rax,rax
   14002e67b:	je     0x14002e6c4
   14002e67d:	mov    rcx,QWORD PTR [rip+0x32c24]        # 0x1400612a8
   14002e684:	mov    QWORD PTR [rsp+0x20],rcx
   14002e689:	lea    rdx,[rip+0x32c10]        # 0x1400612a0
   14002e690:	test   rcx,rcx
   14002e693:	je     0x14002e6b3
   14002e695:	cmp    QWORD PTR [rcx],rax
   14002e698:	jne    0x14002e6a9
   14002e69a:	mov    rax,QWORD PTR [rcx+0x8]
   14002e69e:	mov    QWORD PTR [rdx+0x8],rax
   14002e6a2:	call   0x14002a380
   14002e6a7:	jmp    0x14002e6b3
   14002e6a9:	mov    rdx,rcx
   14002e6ac:	mov    QWORD PTR [rsp+0x20],rcx
   14002e6b1:	jmp    0x14002e690
   14002e6b3:	mov    rcx,QWORD PTR [rbx+0x8]
   14002e6b7:	call   0x14002a380
   14002e6bc:	mov    QWORD PTR [rbx+0x8],0x0
   14002e6c4:	mov    ecx,0xe
   14002e6c9:	call   0x140035970
   14002e6ce:	add    rsp,0x30
   14002e6d2:	pop    rbx
   14002e6d3:	ret    
   14002e6d4:	int3   
   14002e6d5:	int3   
   14002e6d6:	int3   
   14002e6d7:	int3   
   14002e6d8:	int3   
   14002e6d9:	int3   
   14002e6da:	int3   
   14002e6db:	int3   
   14002e6dc:	int3   
   14002e6dd:	int3   
   14002e6de:	int3   
   14002e6df:	int3   
   14002e6e0:	rex push rbp
   14002e6e2:	sub    rsp,0x20
   14002e6e6:	mov    rbp,rdx
   14002e6e9:	mov    ecx,0xe
   14002e6ee:	call   0x140035970
   14002e6f3:	add    rsp,0x20
   14002e6f7:	pop    rbp
   14002e6f8:	ret    
   14002e6f9:	int3   
   14002e6fa:	int3   
   14002e6fb:	int3   
   14002e6fc:	int3   
   14002e6fd:	int3   
   14002e6fe:	int3   
   14002e6ff:	int3   
   14002e700:	mov    QWORD PTR [rsp+0x8],rcx
   14002e705:	sub    rsp,0x88
   14002e70c:	lea    rcx,[rip+0x32c3d]        # 0x140061350
   14002e713:	call   QWORD PTR [rip+0x14baf]        # 0x1400432c8
   14002e719:	mov    rax,QWORD PTR [rip+0x32d28]        # 0x140061448
   14002e720:	mov    QWORD PTR [rsp+0x58],rax
   14002e725:	xor    r8d,r8d
   14002e728:	lea    rdx,[rsp+0x60]
   14002e72d:	mov    rcx,QWORD PTR [rsp+0x58]
   14002e732:	call   0x140040916
   14002e737:	mov    QWORD PTR [rsp+0x50],rax
   14002e73c:	cmp    QWORD PTR [rsp+0x50],0x0
   14002e742:	je     0x14002e785
   14002e744:	mov    QWORD PTR [rsp+0x38],0x0
   14002e74d:	lea    rax,[rsp+0x48]
   14002e752:	mov    QWORD PTR [rsp+0x30],rax
   14002e757:	lea    rax,[rsp+0x40]
   14002e75c:	mov    QWORD PTR [rsp+0x28],rax
   14002e761:	lea    rax,[rip+0x32be8]        # 0x140061350
   14002e768:	mov    QWORD PTR [rsp+0x20],rax
   14002e76d:	mov    r9,QWORD PTR [rsp+0x50]
   14002e772:	mov    r8,QWORD PTR [rsp+0x58]
   14002e777:	mov    rdx,QWORD PTR [rsp+0x60]
   14002e77c:	xor    ecx,ecx
   14002e77e:	call   0x140040928
   14002e783:	jmp    0x14002e7a7
   14002e785:	mov    rax,QWORD PTR [rsp+0x88]
   14002e78d:	mov    QWORD PTR [rip+0x32cb4],rax        # 0x140061448
   14002e794:	lea    rax,[rsp+0x88]
   14002e79c:	add    rax,0x8
   14002e7a0:	mov    QWORD PTR [rip+0x32c41],rax        # 0x1400613e8
   14002e7a7:	mov    rax,QWORD PTR [rip+0x32c9a]        # 0x140061448
   14002e7ae:	mov    QWORD PTR [rip+0x32b0b],rax        # 0x1400612c0
   14002e7b5:	mov    rax,QWORD PTR [rsp+0x90]
   14002e7bd:	mov    QWORD PTR [rip+0x32c0c],rax        # 0x1400613d0
   14002e7c4:	mov    DWORD PTR [rip+0x32ae2],0xc0000409        # 0x1400612b0
   14002e7ce:	mov    DWORD PTR [rip+0x32adc],0x1        # 0x1400612b4
   14002e7d8:	mov    rax,QWORD PTR [rip+0x2c7a1]        # 0x14005af80
   14002e7df:	mov    QWORD PTR [rsp+0x68],rax
   14002e7e4:	mov    rax,QWORD PTR [rip+0x2c79d]        # 0x14005af88
   14002e7eb:	mov    QWORD PTR [rsp+0x70],rax
   14002e7f0:	call   QWORD PTR [rip+0x14ac2]        # 0x1400432b8
   14002e7f6:	mov    DWORD PTR [rip+0x32b4c],eax        # 0x140061348
   14002e7fc:	mov    ecx,0x1
   14002e801:	call   0x140037770
   14002e806:	xor    ecx,ecx
   14002e808:	call   QWORD PTR [rip+0x149fa]        # 0x140043208
   14002e80e:	lea    rcx,[rip+0x1a353]        # 0x140048b68
   14002e815:	call   QWORD PTR [rip+0x14a95]        # 0x1400432b0
   14002e81b:	cmp    DWORD PTR [rip+0x32b26],0x0        # 0x140061348
   14002e822:	jne    0x14002e82e
   14002e824:	mov    ecx,0x1
   14002e829:	call   0x140037770
   14002e82e:	call   QWORD PTR [rip+0x14b2c]        # 0x140043360
   14002e834:	mov    edx,0xc0000409
   14002e839:	mov    rcx,rax
   14002e83c:	call   QWORD PTR [rip+0x14a66]        # 0x1400432a8
   14002e842:	add    rsp,0x88
   14002e849:	ret    
   14002e84a:	int3   
   14002e84b:	int3   
   14002e84c:	int3   
   14002e84d:	int3   
   14002e84e:	int3   
   14002e84f:	int3   
   14002e850:	mov    QWORD PTR [rip+0x32fc9],rcx        # 0x140061820
   14002e857:	ret    
   14002e858:	int3   
   14002e859:	int3   
   14002e85a:	int3   
   14002e85b:	int3   
   14002e85c:	int3   
   14002e85d:	int3   
   14002e85e:	int3   
   14002e85f:	int3   
   14002e860:	rex push rbx
   14002e862:	sub    rsp,0x5a0
   14002e869:	lea    rcx,[rsp+0xd0]
   14002e871:	call   QWORD PTR [rip+0x14a51]        # 0x1400432c8
   14002e877:	lea    rcx,[rsp+0x30]
   14002e87c:	xor    edx,edx
   14002e87e:	mov    r8d,0x98
   14002e884:	call   0x14002ac20
   14002e889:	mov    rax,QWORD PTR [rsp+0x5a8]
   14002e891:	mov    DWORD PTR [rsp+0x30],0xc000000d
   14002e899:	mov    QWORD PTR [rsp+0x40],rax
   14002e89e:	lea    rax,[rsp+0x30]
   14002e8a3:	mov    QWORD PTR [rsp+0x20],rax
   14002e8a8:	lea    rax,[rsp+0xd0]
   14002e8b0:	mov    QWORD PTR [rsp+0x28],rax
   14002e8b5:	call   QWORD PTR [rip+0x149fd]        # 0x1400432b8
   14002e8bb:	xor    ecx,ecx
   14002e8bd:	mov    ebx,eax
   14002e8bf:	call   QWORD PTR [rip+0x14943]        # 0x140043208
   14002e8c5:	lea    rcx,[rsp+0x20]
   14002e8ca:	call   QWORD PTR [rip+0x149e0]        # 0x1400432b0
   14002e8d0:	test   eax,eax
   14002e8d2:	jne    0x14002e8e0
   14002e8d4:	test   ebx,ebx
   14002e8d6:	jne    0x14002e8e0
   14002e8d8:	lea    ecx,[rax+0x2]
   14002e8db:	call   0x140037770
   14002e8e0:	call   QWORD PTR [rip+0x14a7a]        # 0x140043360
   14002e8e6:	mov    edx,0xc000000d
   14002e8eb:	mov    rcx,rax
   14002e8ee:	call   QWORD PTR [rip+0x149b4]        # 0x1400432a8
   14002e8f4:	add    rsp,0x5a0
   14002e8fb:	pop    rbx
   14002e8fc:	ret    
   14002e8fd:	int3   
   14002e8fe:	int3   
   14002e8ff:	int3   
   14002e900:	mov    QWORD PTR [rsp+0x8],rbx
   14002e905:	mov    QWORD PTR [rsp+0x10],rbp
   14002e90a:	mov    QWORD PTR [rsp+0x18],rsi
   14002e90f:	push   rdi
   14002e910:	sub    rsp,0x5b0
   14002e917:	mov    rbp,rcx
   14002e91a:	mov    rcx,QWORD PTR [rip+0x32eff]        # 0x140061820
   14002e921:	mov    ebx,r9d
   14002e924:	mov    rdi,r8
   14002e927:	mov    rsi,rdx
   14002e92a:	call   0x14002df20
   14002e92f:	test   rax,rax
   14002e932:	je     0x14002e954
   14002e934:	mov    r10,QWORD PTR [rsp+0x5e0]
   14002e93c:	mov    r9d,ebx
   14002e93f:	mov    r8,rdi
   14002e942:	mov    rdx,rsi
   14002e945:	mov    rcx,rbp
   14002e948:	mov    QWORD PTR [rsp+0x20],r10
   14002e94d:	call   rax
   14002e94f:	jmp    0x14002e9e9
   14002e954:	mov    ecx,0x2
   14002e959:	call   0x140037770
   14002e95e:	lea    rcx,[rsp+0xe0]
   14002e966:	call   QWORD PTR [rip+0x1495c]        # 0x1400432c8
   14002e96c:	lea    rcx,[rsp+0x40]
   14002e971:	xor    edx,edx
   14002e973:	mov    r8d,0x98
   14002e979:	call   0x14002ac20
   14002e97e:	mov    rax,QWORD PTR [rsp+0x5b8]
   14002e986:	mov    DWORD PTR [rsp+0x40],0xc000000d
   14002e98e:	mov    QWORD PTR [rsp+0x50],rax
   14002e993:	lea    rax,[rsp+0x40]
   14002e998:	mov    QWORD PTR [rsp+0x30],rax
   14002e99d:	lea    rax,[rsp+0xe0]
   14002e9a5:	mov    QWORD PTR [rsp+0x38],rax
   14002e9aa:	call   QWORD PTR [rip+0x14908]        # 0x1400432b8
   14002e9b0:	xor    ecx,ecx
   14002e9b2:	mov    ebx,eax
   14002e9b4:	call   QWORD PTR [rip+0x1484e]        # 0x140043208
   14002e9ba:	lea    rcx,[rsp+0x30]
   14002e9bf:	call   QWORD PTR [rip+0x148eb]        # 0x1400432b0
   14002e9c5:	test   eax,eax
   14002e9c7:	jne    0x14002e9d5
   14002e9c9:	test   ebx,ebx
   14002e9cb:	jne    0x14002e9d5
   14002e9cd:	lea    ecx,[rax+0x2]
   14002e9d0:	call   0x140037770
   14002e9d5:	call   QWORD PTR [rip+0x14985]        # 0x140043360
   14002e9db:	mov    edx,0xc000000d
   14002e9e0:	mov    rcx,rax
   14002e9e3:	call   QWORD PTR [rip+0x148bf]        # 0x1400432a8
   14002e9e9:	lea    r11,[rsp+0x5b0]
   14002e9f1:	mov    rbx,QWORD PTR [r11+0x10]
   14002e9f5:	mov    rbp,QWORD PTR [r11+0x18]
   14002e9f9:	mov    rsi,QWORD PTR [r11+0x20]
   14002e9fd:	mov    rsp,r11
   14002ea00:	pop    rdi
   14002ea01:	ret    
   14002ea02:	int3   
   14002ea03:	int3   
   14002ea04:	int3   
   14002ea05:	int3   
   14002ea06:	int3   
   14002ea07:	int3   
   14002ea08:	int3   
   14002ea09:	int3   
   14002ea0a:	int3   
   14002ea0b:	int3   
   14002ea0c:	int3   
   14002ea0d:	int3   
   14002ea0e:	int3   
   14002ea0f:	int3   
   14002ea10:	mov    QWORD PTR [rsp+0x20],rbx
   14002ea15:	mov    DWORD PTR [rsp+0x8],ecx
   14002ea19:	push   rdi
   14002ea1a:	sub    rsp,0x20
   14002ea1e:	mov    rcx,rdx
   14002ea21:	mov    rbx,rdx
   14002ea24:	call   0x1400385a0
   14002ea29:	mov    ecx,DWORD PTR [rbx+0x18]
   14002ea2c:	test   cl,0x82
   14002ea2f:	movsxd rdi,eax
   14002ea32:	jne    0x14002ea51
   14002ea34:	call   0x14002bca0
   14002ea39:	mov    DWORD PTR [rax],0x9
   14002ea3f:	or     DWORD PTR [rbx+0x18],0x20
   14002ea43:	or     eax,0xffffffff
   14002ea46:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ea4b:	add    rsp,0x20
   14002ea4f:	pop    rdi
   14002ea50:	ret    
   14002ea51:	test   cl,0x40
   14002ea54:	je     0x14002ea73
   14002ea56:	call   0x14002bca0
   14002ea5b:	mov    DWORD PTR [rax],0x22
   14002ea61:	or     DWORD PTR [rbx+0x18],0x20
   14002ea65:	or     eax,0xffffffff
   14002ea68:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ea6d:	add    rsp,0x20
   14002ea71:	pop    rdi
   14002ea72:	ret    
   14002ea73:	mov    QWORD PTR [rsp+0x40],rsi
   14002ea78:	xor    esi,esi
   14002ea7a:	test   cl,0x1
   14002ea7d:	je     0x14002ea98
   14002ea7f:	test   cl,0x10
   14002ea82:	mov    DWORD PTR [rbx+0x8],esi
   14002ea85:	je     0x14002eb28
   14002ea8b:	mov    rax,QWORD PTR [rbx+0x10]
   14002ea8f:	and    ecx,0xfffffffe
   14002ea92:	mov    QWORD PTR [rbx],rax
   14002ea95:	mov    DWORD PTR [rbx+0x18],ecx
   14002ea98:	mov    eax,DWORD PTR [rbx+0x18]
   14002ea9b:	mov    DWORD PTR [rbx+0x8],esi
   14002ea9e:	and    eax,0xffffffef
   14002eaa1:	or     eax,0x2
   14002eaa4:	test   eax,0x10c
   14002eaa9:	mov    DWORD PTR [rbx+0x18],eax
   14002eaac:	jne    0x14002eadd
   14002eaae:	call   0x140038340
   14002eab3:	add    rax,0x30
   14002eab7:	cmp    rbx,rax
   14002eaba:	je     0x14002eaca
   14002eabc:	call   0x140038340
   14002eac1:	add    rax,0x60
   14002eac5:	cmp    rbx,rax
   14002eac8:	jne    0x14002ead5
   14002eaca:	mov    ecx,edi
   14002eacc:	call   0x1400382c0
   14002ead1:	test   eax,eax
   14002ead3:	jne    0x14002eadd
   14002ead5:	mov    rcx,rbx
   14002ead8:	call   0x140038260
   14002eadd:	test   DWORD PTR [rbx+0x18],0x108
   14002eae4:	mov    QWORD PTR [rsp+0x38],rbp
   14002eae9:	je     0x14002eb99
   14002eaef:	mov    ebp,DWORD PTR [rbx]
   14002eaf1:	mov    rdx,QWORD PTR [rbx+0x10]
   14002eaf5:	sub    ebp,DWORD PTR [rbx+0x10]
   14002eaf8:	lea    rax,[rdx+0x1]
   14002eafc:	mov    QWORD PTR [rbx],rax
   14002eaff:	mov    eax,DWORD PTR [rbx+0x24]
   14002eb02:	sub    eax,0x1
   14002eb05:	test   ebp,ebp
   14002eb07:	mov    DWORD PTR [rbx+0x8],eax
   14002eb0a:	jle    0x14002eb41
   14002eb0c:	mov    r8d,ebp
   14002eb0f:	mov    ecx,edi
   14002eb11:	call   0x140038110
   14002eb16:	mov    rcx,QWORD PTR [rbx+0x10]
   14002eb1a:	mov    esi,eax
   14002eb1c:	movzx  eax,BYTE PTR [rsp+0x30]
   14002eb21:	mov    BYTE PTR [rcx],al
   14002eb23:	jmp    0x14002ebaf
   14002eb28:	mov    rsi,QWORD PTR [rsp+0x40]
   14002eb2d:	or     ecx,0x20
   14002eb30:	or     eax,0xffffffff
   14002eb33:	mov    DWORD PTR [rbx+0x18],ecx
   14002eb36:	mov    rbx,QWORD PTR [rsp+0x48]
   14002eb3b:	add    rsp,0x20
   14002eb3f:	pop    rdi
   14002eb40:	ret    
   14002eb41:	cmp    edi,0xffffffff
   14002eb44:	je     0x14002eb6d
   14002eb46:	cmp    edi,0xfffffffe
   14002eb49:	je     0x14002eb6d
   14002eb4b:	mov    rax,rdi
   14002eb4e:	mov    rcx,rdi
   14002eb51:	lea    r8,[rip+0x34468]        # 0x140062fc0
   14002eb58:	and    eax,0x1f
   14002eb5b:	sar    rcx,0x5
   14002eb5f:	lea    rdx,[rax+rax*4]
   14002eb63:	shl    rdx,0x4
   14002eb67:	add    rdx,QWORD PTR [r8+rcx*8]
   14002eb6b:	jmp    0x14002eb74
   14002eb6d:	lea    rdx,[rip+0x2c7bc]        # 0x14005b330
   14002eb74:	test   BYTE PTR [rdx+0x8],0x20
   14002eb78:	je     0x14002eb8d
   14002eb7a:	xor    edx,edx
   14002eb7c:	mov    ecx,edi
   14002eb7e:	lea    r8d,[rdx+0x2]
   14002eb82:	call   0x140037830
   14002eb87:	cmp    rax,0xffffffffffffffff
   14002eb8b:	je     0x14002ebb3
   14002eb8d:	mov    rcx,QWORD PTR [rbx+0x10]
   14002eb91:	mov    al,BYTE PTR [rsp+0x30]
   14002eb95:	mov    BYTE PTR [rcx],al
   14002eb97:	jmp    0x14002ebaf
   14002eb99:	mov    ebp,0x1
   14002eb9e:	lea    rdx,[rsp+0x30]
   14002eba3:	mov    ecx,edi
   14002eba5:	mov    r8d,ebp
   14002eba8:	call   0x140038110
   14002ebad:	mov    esi,eax
   14002ebaf:	cmp    esi,ebp
   14002ebb1:	je     0x14002ebbc
   14002ebb3:	or     DWORD PTR [rbx+0x18],0x20
   14002ebb7:	or     eax,0xffffffff
   14002ebba:	jmp    0x14002ebc1
   14002ebbc:	movzx  eax,BYTE PTR [rsp+0x30]
   14002ebc1:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ebc6:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ebcb:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ebd0:	add    rsp,0x20
   14002ebd4:	pop    rdi
   14002ebd5:	ret    
   14002ebd6:	int3   
   14002ebd7:	int3   
   14002ebd8:	int3   
   14002ebd9:	int3   
   14002ebda:	int3   
   14002ebdb:	int3   
   14002ebdc:	int3   
   14002ebdd:	int3   
   14002ebde:	int3   
   14002ebdf:	int3   
   14002ebe0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ebe5:	mov    QWORD PTR [rsp+0x10],rbp
   14002ebea:	mov    QWORD PTR [rsp+0x18],rsi
   14002ebef:	push   rdi
   14002ebf0:	sub    rsp,0x20
   14002ebf4:	test   BYTE PTR [r8+0x18],0x40
   14002ebf9:	mov    rbx,r9
   14002ebfc:	mov    rdi,r8
   14002ebff:	mov    esi,edx
   14002ec01:	mov    rbp,rcx
   14002ec04:	je     0x14002ec12
   14002ec06:	cmp    QWORD PTR [r8+0x10],0x0
   14002ec0b:	jne    0x14002ec12
   14002ec0d:	add    DWORD PTR [r9],edx
   14002ec10:	jmp    0x14002ec84
   14002ec12:	test   edx,edx
   14002ec14:	jle    0x14002ec84
   14002ec16:	sub    esi,0x1
   14002ec19:	test   BYTE PTR [rdi+0x18],0x40
   14002ec1d:	je     0x14002ec26
   14002ec1f:	cmp    QWORD PTR [rdi+0x10],0x0
   14002ec24:	je     0x14002ec40
   14002ec26:	movzx  ecx,WORD PTR [rbp+0x0]
   14002ec2a:	mov    rdx,rdi
   14002ec2d:	call   0x1400385e0
   14002ec32:	cmp    ax,0xffff
   14002ec36:	jne    0x14002ec40
   14002ec38:	mov    DWORD PTR [rbx],0xffffffff
   14002ec3e:	jmp    0x14002ec43
   14002ec40:	add    DWORD PTR [rbx],0x1
   14002ec43:	add    rbp,0x2
   14002ec47:	cmp    DWORD PTR [rbx],0xffffffff
   14002ec4a:	jne    0x14002ec80
   14002ec4c:	call   0x14002bca0
   14002ec51:	cmp    DWORD PTR [rax],0x2a
   14002ec54:	jne    0x14002ec84
   14002ec56:	test   BYTE PTR [rdi+0x18],0x40
   14002ec5a:	je     0x14002ec63
   14002ec5c:	cmp    QWORD PTR [rdi+0x10],0x0
   14002ec61:	je     0x14002ec7d
   14002ec63:	mov    rdx,rdi
   14002ec66:	mov    cx,0x3f
   14002ec6a:	call   0x1400385e0
   14002ec6f:	cmp    ax,0xffff
   14002ec73:	jne    0x14002ec7d
   14002ec75:	mov    DWORD PTR [rbx],0xffffffff
   14002ec7b:	jmp    0x14002ec80
   14002ec7d:	add    DWORD PTR [rbx],0x1
   14002ec80:	test   esi,esi
   14002ec82:	jg     0x14002ec16
   14002ec84:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ec89:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ec8e:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ec93:	add    rsp,0x20
   14002ec97:	pop    rdi
   14002ec98:	ret    
   14002ec99:	int3   
   14002ec9a:	int3   
   14002ec9b:	int3   
   14002ec9c:	int3   
   14002ec9d:	int3   
   14002ec9e:	int3   
   14002ec9f:	int3   
   14002eca0:	rex push rbx
   14002eca2:	push   rsi
   14002eca3:	push   rdi
   14002eca4:	push   r13
   14002eca6:	push   r14
   14002eca8:	sub    rsp,0x4f0
   14002ecaf:	mov    rax,QWORD PTR [rip+0x2c2ca]        # 0x14005af80
   14002ecb6:	xor    rax,rsp
   14002ecb9:	mov    QWORD PTR [rsp+0x4c0],rax
   14002ecc1:	xor    ebx,ebx
   14002ecc3:	test   r8,r8
   14002ecc6:	mov    rdi,r9
   14002ecc9:	mov    QWORD PTR [rsp+0x58],r9
   14002ecce:	mov    rsi,rdx
   14002ecd1:	mov    r13,rcx
   14002ecd4:	mov    DWORD PTR [rsp+0x74],ebx
   14002ecd8:	mov    r14d,ebx
   14002ecdb:	mov    DWORD PTR [rsp+0x40],ebx
   14002ecdf:	mov    r11d,ebx
   14002ece2:	mov    DWORD PTR [rsp+0x50],ebx
   14002ece6:	mov    r9d,ebx
   14002ece9:	mov    DWORD PTR [rsp+0x48],ebx
   14002eced:	mov    r10d,ebx
   14002ecf0:	mov    DWORD PTR [rsp+0x4c],ebx
   14002ecf4:	mov    DWORD PTR [rsp+0x70],ebx
   14002ecf8:	mov    DWORD PTR [rsp+0x60],ebx
   14002ecfc:	mov    BYTE PTR [rsp+0x90],bl
   14002ed03:	jne    0x14002edc7
   14002ed09:	call   0x14002e210
   14002ed0e:	mov    QWORD PTR [rsp+0x88],rax
   14002ed16:	mov    rdx,rax
   14002ed19:	mov    rcx,QWORD PTR [rax+0xc0]
   14002ed20:	cmp    rcx,QWORD PTR [rip+0x2cd29]        # 0x14005ba50
   14002ed27:	mov    QWORD PTR [rsp+0x78],rcx
   14002ed2c:	mov    rax,QWORD PTR [rax+0xb8]
   14002ed33:	mov    QWORD PTR [rsp+0x80],rax
   14002ed3b:	je     0x14002ed65
   14002ed3d:	mov    ecx,DWORD PTR [rdx+0xc8]
   14002ed43:	test   DWORD PTR [rip+0x2cb8f],ecx        # 0x14005b8d8
   14002ed49:	jne    0x14002ed65
   14002ed4b:	call   0x140031a10
   14002ed50:	mov    rdx,QWORD PTR [rsp+0x88]
   14002ed58:	mov    QWORD PTR [rsp+0x78],rax
   14002ed5d:	mov    rax,QWORD PTR [rsp+0x80]
   14002ed65:	cmp    rax,QWORD PTR [rip+0x2ca64]        # 0x14005b7d0
   14002ed6c:	je     0x14002ed91
   14002ed6e:	mov    eax,DWORD PTR [rdx+0xc8]
   14002ed74:	test   DWORD PTR [rip+0x2cb5e],eax        # 0x14005b8d8
   14002ed7a:	jne    0x14002ed91
   14002ed7c:	call   0x140030ec0
   14002ed81:	mov    rdx,QWORD PTR [rsp+0x88]
   14002ed89:	mov    QWORD PTR [rsp+0x80],rax
   14002ed91:	test   BYTE PTR [rdx+0xc8],0x2
   14002ed98:	jne    0x14002edbc
   14002ed9a:	or     DWORD PTR [rdx+0xc8],0x2
   14002eda1:	mov    rdx,QWORD PTR [rsp+0x88]
   14002eda9:	mov    r9d,ebx
   14002edac:	mov    BYTE PTR [rsp+0x90],0x1
   14002edb4:	mov    r10d,ebx
   14002edb7:	mov    r11d,ebx
   14002edba:	jmp    0x14002ede2
   14002edbc:	mov    r9d,ebx
   14002edbf:	mov    r10d,ebx
   14002edc2:	mov    r11d,ebx
   14002edc5:	jmp    0x14002ede2
   14002edc7:	mov    rax,QWORD PTR [r8]
   14002edca:	lea    rcx,[rsp+0x78]
   14002edcf:	mov    QWORD PTR [rcx],rax
   14002edd2:	mov    rax,QWORD PTR [r8+0x8]
   14002edd6:	mov    QWORD PTR [rcx+0x8],rax
   14002edda:	mov    rdx,QWORD PTR [rsp+0x88]
   14002ede2:	test   r13,r13
   14002ede5:	jne    0x14002ee26
   14002ede7:	call   0x14002bca0
   14002edec:	xor    r9d,r9d
   14002edef:	xor    r8d,r8d
   14002edf2:	xor    edx,edx
   14002edf4:	xor    ecx,ecx
   14002edf6:	mov    QWORD PTR [rsp+0x20],rbx
   14002edfb:	mov    DWORD PTR [rax],0x16
   14002ee01:	call   0x14002e900
   14002ee06:	cmp    BYTE PTR [rsp+0x90],bl
   14002ee0d:	je     0x14002ee1e
   14002ee0f:	mov    rax,QWORD PTR [rsp+0x88]
   14002ee17:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ee1e:	or     eax,0xffffffff
   14002ee21:	jmp    0x14002fb26
   14002ee26:	test   rsi,rsi
   14002ee29:	je     0x14002ede7
   14002ee2b:	mov    QWORD PTR [rsp+0x4e8],rbp
   14002ee33:	mov    QWORD PTR [rsp+0x4e0],r12
   14002ee3b:	movzx  r12d,WORD PTR [rsi]
   14002ee3f:	test   r12w,r12w
   14002ee43:	mov    QWORD PTR [rsp+0x4d8],r15
   14002ee4b:	mov    ebp,ebx
   14002ee4d:	mov    DWORD PTR [rsp+0x44],ebx
   14002ee51:	mov    r8d,ebx
   14002ee54:	mov    QWORD PTR [rsp+0xa0],rbx
   14002ee5c:	mov    r15d,ebx
   14002ee5f:	je     0x14002fafb
   14002ee65:	mov    rbx,QWORD PTR [rsp+0xb0]
   14002ee6d:	lea    rdx,[rip+0xfffffffffffd118c]        # 0x140000000
   14002ee74:	data16 data16 xchg ax,ax
   14002ee78:	data16 data16 xchg ax,ax
   14002ee7c:	data16 data16 xchg ax,ax
   14002ee80:	add    rsi,0x2
   14002ee84:	test   ebp,ebp
   14002ee86:	mov    QWORD PTR [rsp+0xa8],rsi
   14002ee8e:	js     0x14002faf3
   14002ee94:	lea    eax,[r12-0x20]
   14002ee99:	cmp    ax,0x58
   14002ee9d:	ja     0x14002eeaf
   14002ee9f:	movzx  eax,r12w
   14002eea3:	mov    cl,BYTE PTR [rax+rdx*1+0x49650]
   14002eeaa:	and    ecx,0xf
   14002eead:	jmp    0x14002eeb3
   14002eeaf:	xor    eax,eax
   14002eeb1:	mov    ecx,eax
   14002eeb3:	movsxd rax,r8d
   14002eeb6:	movsxd rcx,ecx
   14002eeb9:	lea    rdx,[rax+rcx*8]
   14002eebd:	lea    rax,[rip+0xfffffffffffd113c]        # 0x140000000
   14002eec4:	movsx  eax,BYTE PTR [rdx+rax*1+0x49670]
   14002eecc:	sar    eax,0x4
   14002eecf:	cmp    eax,0x7
   14002eed2:	mov    DWORD PTR [rsp+0x98],eax
   14002eed9:	ja     0x14002fa96
   14002eedf:	lea    rdx,[rip+0xfffffffffffd111a]        # 0x140000000
   14002eee6:	cdqe   
   14002eee8:	mov    ecx,DWORD PTR [rdx+rax*4+0x2fb48]
   14002eeef:	add    rcx,rdx
   14002eef2:	jmp    rcx
   14002eef4:	xor    eax,eax
   14002eef6:	or     r9d,0xffffffff
   14002eefa:	mov    DWORD PTR [rsp+0x48],r9d
   14002eeff:	mov    DWORD PTR [rsp+0x9c],eax
   14002ef06:	mov    DWORD PTR [rsp+0x70],eax
   14002ef0a:	mov    r11d,eax
   14002ef0d:	mov    DWORD PTR [rsp+0x50],eax
   14002ef11:	mov    r10d,eax
   14002ef14:	mov    DWORD PTR [rsp+0x4c],eax
   14002ef18:	mov    r14d,eax
   14002ef1b:	mov    DWORD PTR [rsp+0x40],eax
   14002ef1f:	mov    DWORD PTR [rsp+0x60],eax
   14002ef23:	jmp    0x14002fa9d
   14002ef28:	movzx  eax,r12w
   14002ef2c:	cmp    eax,0x20
   14002ef2f:	je     0x14002ef82
   14002ef31:	cmp    eax,0x23
   14002ef34:	je     0x14002ef73
   14002ef36:	cmp    eax,0x2b
   14002ef39:	je     0x14002ef65
   14002ef3b:	cmp    eax,0x2d
   14002ef3e:	je     0x14002ef57
   14002ef40:	cmp    eax,0x30
   14002ef43:	jne    0x14002fa9d
   14002ef49:	or     r14d,0x8
   14002ef4d:	mov    DWORD PTR [rsp+0x40],r14d
   14002ef52:	jmp    0x14002fa9d
   14002ef57:	or     r14d,0x4
   14002ef5b:	mov    DWORD PTR [rsp+0x40],r14d
   14002ef60:	jmp    0x14002fa9d
   14002ef65:	or     r14d,0x1
   14002ef69:	mov    DWORD PTR [rsp+0x40],r14d
   14002ef6e:	jmp    0x14002fa9d
   14002ef73:	bts    r14d,0x7
   14002ef78:	mov    DWORD PTR [rsp+0x40],r14d
   14002ef7d:	jmp    0x14002fa9d
   14002ef82:	or     r14d,0x2
   14002ef86:	mov    DWORD PTR [rsp+0x40],r14d
   14002ef8b:	jmp    0x14002fa9d
   14002ef90:	cmp    r12w,0x2a
   14002ef95:	jne    0x14002efc7
   14002ef97:	mov    r11d,DWORD PTR [rdi]
   14002ef9a:	add    rdi,0x8
   14002ef9e:	test   r11d,r11d
   14002efa1:	mov    QWORD PTR [rsp+0x58],rdi
   14002efa6:	mov    DWORD PTR [rsp+0x50],r11d
   14002efab:	jns    0x14002fa9d
   14002efb1:	or     r14d,0x4
   14002efb5:	neg    r11d
   14002efb8:	mov    DWORD PTR [rsp+0x50],r11d
   14002efbd:	mov    DWORD PTR [rsp+0x40],r14d
   14002efc2:	jmp    0x14002fa9d
   14002efc7:	lea    ecx,[r11+r11*4]
   14002efcb:	movzx  eax,r12w
   14002efcf:	lea    r11d,[rax+rcx*2-0x30]
   14002efd4:	mov    DWORD PTR [rsp+0x50],r11d
   14002efd9:	jmp    0x14002fa9d
   14002efde:	xor    eax,eax
   14002efe0:	mov    r9d,eax
   14002efe3:	mov    DWORD PTR [rsp+0x48],eax
   14002efe7:	jmp    0x14002fa9d
   14002efec:	cmp    r12w,0x2a
   14002eff1:	jne    0x14002f01b
   14002eff3:	mov    r9d,DWORD PTR [rdi]
   14002eff6:	add    rdi,0x8
   14002effa:	test   r9d,r9d
   14002effd:	mov    QWORD PTR [rsp+0x58],rdi
   14002f002:	mov    DWORD PTR [rsp+0x48],r9d
   14002f007:	jns    0x14002fa9d
   14002f00d:	or     r9d,0xffffffff
   14002f011:	mov    DWORD PTR [rsp+0x48],r9d
   14002f016:	jmp    0x14002fa9d
   14002f01b:	lea    ecx,[r9+r9*4]
   14002f01f:	movzx  eax,r12w
   14002f023:	lea    r9d,[rax+rcx*2-0x30]
   14002f028:	mov    DWORD PTR [rsp+0x48],r9d
   14002f02d:	jmp    0x14002fa9d
   14002f032:	movzx  eax,r12w
   14002f036:	cmp    eax,0x49
   14002f039:	je     0x14002f092
   14002f03b:	cmp    eax,0x68
   14002f03e:	je     0x14002f084
   14002f040:	cmp    eax,0x6c
   14002f043:	je     0x14002f05d
   14002f045:	cmp    eax,0x77
   14002f048:	jne    0x14002fa9d
   14002f04e:	bts    r14d,0xb
   14002f053:	mov    DWORD PTR [rsp+0x40],r14d
   14002f058:	jmp    0x14002fa9d
   14002f05d:	cmp    WORD PTR [rsi],0x6c
   14002f061:	jne    0x14002f076
   14002f063:	add    rsi,0x2
   14002f067:	bts    r14d,0xc
   14002f06c:	mov    DWORD PTR [rsp+0x40],r14d
   14002f071:	jmp    0x14002fa9d
   14002f076:	or     r14d,0x10
   14002f07a:	mov    DWORD PTR [rsp+0x40],r14d
   14002f07f:	jmp    0x14002fa9d
   14002f084:	or     r14d,0x20
   14002f088:	mov    DWORD PTR [rsp+0x40],r14d
   14002f08d:	jmp    0x14002fa9d
   14002f092:	movzx  eax,WORD PTR [rsi]
   14002f095:	bts    r14d,0xf
   14002f09a:	cmp    ax,0x36
   14002f09e:	mov    DWORD PTR [rsp+0x40],r14d
   14002f0a3:	jne    0x14002f0bf
   14002f0a5:	cmp    WORD PTR [rsi+0x2],0x34
   14002f0aa:	jne    0x14002f0bf
   14002f0ac:	add    rsi,0x4
   14002f0b0:	bts    r14d,0xf
   14002f0b5:	mov    DWORD PTR [rsp+0x40],r14d
   14002f0ba:	jmp    0x14002fa9d
   14002f0bf:	cmp    ax,0x33
   14002f0c3:	jne    0x14002f0df
   14002f0c5:	cmp    WORD PTR [rsi+0x2],0x32
   14002f0ca:	jne    0x14002f0df
   14002f0cc:	add    rsi,0x4
   14002f0d0:	btr    r14d,0xf
   14002f0d5:	mov    DWORD PTR [rsp+0x40],r14d
   14002f0da:	jmp    0x14002fa9d
   14002f0df:	cmp    ax,0x64
   14002f0e3:	je     0x14002fa9d
   14002f0e9:	cmp    ax,0x69
   14002f0ed:	je     0x14002fa9d
   14002f0f3:	cmp    ax,0x6f
   14002f0f7:	je     0x14002fa9d
   14002f0fd:	cmp    ax,0x75
   14002f101:	je     0x14002fa9d
   14002f107:	cmp    ax,0x78
   14002f10b:	je     0x14002fa9d
   14002f111:	cmp    ax,0x58
   14002f115:	je     0x14002fa9d
   14002f11b:	xor    eax,eax
   14002f11d:	mov    DWORD PTR [rsp+0x98],eax
   14002f124:	test   BYTE PTR [r13+0x18],0x40
   14002f129:	mov    DWORD PTR [rsp+0x60],0x1
   14002f131:	je     0x14002f146
   14002f133:	cmp    QWORD PTR [r13+0x10],0x0
   14002f138:	jne    0x14002f146
   14002f13a:	add    ebp,0x1
   14002f13d:	mov    DWORD PTR [rsp+0x44],ebp
   14002f141:	jmp    0x14002fa9d
   14002f146:	mov    rdx,r13
   14002f149:	movzx  ecx,r12w
   14002f14d:	call   0x1400385e0
   14002f152:	cmp    ax,0xffff
   14002f156:	jne    0x14002f17a
   14002f158:	mov    r9d,DWORD PTR [rsp+0x48]
   14002f15d:	mov    r10d,DWORD PTR [rsp+0x4c]
   14002f162:	mov    r11d,DWORD PTR [rsp+0x50]
   14002f167:	or     ebp,0xffffffff
   14002f16a:	lea    rdx,[rip+0xfffffffffffd0e8f]        # 0x140000000
   14002f171:	mov    DWORD PTR [rsp+0x44],ebp
   14002f175:	jmp    0x14002fa9d
   14002f17a:	mov    r9d,DWORD PTR [rsp+0x48]
   14002f17f:	mov    r10d,DWORD PTR [rsp+0x4c]
   14002f184:	mov    r11d,DWORD PTR [rsp+0x50]
   14002f189:	add    ebp,0x1
   14002f18c:	lea    rdx,[rip+0xfffffffffffd0e6d]        # 0x140000000
   14002f193:	mov    DWORD PTR [rsp+0x44],ebp
   14002f197:	jmp    0x14002fa9d
   14002f19c:	movzx  eax,r12w
   14002f1a0:	add    eax,0xffffffbf
   14002f1a3:	cmp    eax,0x37
   14002f1a6:	ja     0x14002f6f7
   14002f1ac:	cdqe   
   14002f1ae:	movzx  eax,BYTE PTR [rdx+rax*1+0x2fba4]
   14002f1b6:	mov    ecx,DWORD PTR [rdx+rax*4+0x2fb68]
   14002f1bd:	add    rcx,rdx
   14002f1c0:	jmp    rcx
   14002f1c2:	test   r14d,0x830
   14002f1c9:	jne    0x14002f1d4
   14002f1cb:	or     r14d,0x20
   14002f1cf:	mov    DWORD PTR [rsp+0x40],r14d
   14002f1d4:	movzx  eax,WORD PTR [rdi]
   14002f1d7:	add    rdi,0x8
   14002f1db:	test   r14b,0x20
   14002f1df:	mov    WORD PTR [rsp+0x68],ax
   14002f1e4:	mov    DWORD PTR [rsp+0x60],0x1
   14002f1ec:	mov    QWORD PTR [rsp+0x58],rdi
   14002f1f1:	je     0x14002f23e
   14002f1f3:	mov    BYTE PTR [rsp+0x6c],al
   14002f1f7:	mov    rax,QWORD PTR [rsp+0x78]
   14002f1fc:	mov    BYTE PTR [rsp+0x6d],0x0
   14002f201:	movsxd r8,DWORD PTR [rax+0x10c]
   14002f208:	lea    r9,[rsp+0x78]
   14002f20d:	lea    rdx,[rsp+0x6c]
   14002f212:	lea    rcx,[rsp+0xc0]
   14002f21a:	call   0x140038a40
   14002f21f:	test   eax,eax
   14002f221:	jns    0x14002f246
   14002f223:	mov    DWORD PTR [rsp+0x70],0x1
   14002f22b:	lea    rbx,[rsp+0xc0]
   14002f233:	mov    r15d,0x1
   14002f239:	jmp    0x14002f6f7
   14002f23e:	mov    WORD PTR [rsp+0xc0],ax
   14002f246:	lea    rbx,[rsp+0xc0]
   14002f24e:	mov    r15d,0x1
   14002f254:	jmp    0x14002f6f7
   14002f259:	mov    rax,QWORD PTR [rdi]
   14002f25c:	add    rdi,0x8
   14002f260:	test   rax,rax
   14002f263:	mov    QWORD PTR [rsp+0x58],rdi
   14002f268:	je     0x14002f2a1
   14002f26a:	mov    rbx,QWORD PTR [rax+0x8]
   14002f26e:	test   rbx,rbx
   14002f271:	je     0x14002f2a1
   14002f273:	bt     r14d,0xb
   14002f278:	jae    0x14002f292
   14002f27a:	movsx  eax,WORD PTR [rax]
   14002f27d:	mov    DWORD PTR [rsp+0x60],0x1
   14002f285:	cdq    
   14002f286:	sub    eax,edx
   14002f288:	sar    eax,1
   14002f28a:	mov    r15d,eax
   14002f28d:	jmp    0x14002f6f7
   14002f292:	movsx  r15d,WORD PTR [rax]
   14002f296:	xor    ecx,ecx
   14002f298:	mov    DWORD PTR [rsp+0x60],ecx
   14002f29c:	jmp    0x14002f6f7
   14002f2a1:	mov    rbx,QWORD PTR [rip+0x2cfa8]        # 0x14005c250
   14002f2a8:	or     rcx,0xffffffffffffffff
   14002f2ac:	xor    eax,eax
   14002f2ae:	mov    rdi,rbx
   14002f2b1:	repnz scas al,BYTE PTR es:[rdi]
   14002f2b3:	not    rcx
   14002f2b6:	sub    rcx,0x1
   14002f2ba:	mov    r15,rcx
   14002f2bd:	jmp    0x14002f6f7
   14002f2c2:	test   r14d,0x830
   14002f2c9:	jne    0x14002f2d4
   14002f2cb:	or     r14d,0x20
   14002f2cf:	mov    DWORD PTR [rsp+0x40],r14d
   14002f2d4:	mov    rbx,QWORD PTR [rdi]
   14002f2d7:	cmp    r9d,0xffffffff
   14002f2db:	mov    esi,r9d
   14002f2de:	mov    eax,0x7fffffff
   14002f2e3:	cmove  esi,eax
   14002f2e6:	add    rdi,0x8
   14002f2ea:	test   r14b,0x20
   14002f2ee:	mov    QWORD PTR [rsp+0x58],rdi
   14002f2f3:	je     0x14002f342
   14002f2f5:	test   rbx,rbx
   14002f2f8:	cmove  rbx,QWORD PTR [rip+0x2cf50]        # 0x14005c250
   14002f300:	xor    eax,eax
   14002f302:	test   esi,esi
   14002f304:	mov    rdi,rbx
   14002f307:	mov    r15d,eax
   14002f30a:	jle    0x14002f6f7
   14002f310:	movzx  eax,BYTE PTR [rdi]
   14002f313:	test   al,al
   14002f315:	je     0x14002f6f7
   14002f31b:	lea    rdx,[rsp+0x78]
   14002f320:	movzx  ecx,al
   14002f323:	call   0x140038880
   14002f328:	test   eax,eax
   14002f32a:	je     0x14002f330
   14002f32c:	add    rdi,0x1
   14002f330:	add    r15d,0x1
   14002f334:	add    rdi,0x1
   14002f338:	cmp    r15d,esi
   14002f33b:	jl     0x14002f310
   14002f33d:	jmp    0x14002f6f7
   14002f342:	test   rbx,rbx
   14002f345:	mov    DWORD PTR [rsp+0x60],0x1
   14002f34d:	cmove  rbx,QWORD PTR [rip+0x2cf03]        # 0x14005c258
   14002f355:	test   esi,esi
   14002f357:	mov    rax,rbx
   14002f35a:	je     0x14002f371
   14002f35c:	data16 data16 xchg ax,ax
   14002f360:	sub    esi,0x1
   14002f363:	cmp    WORD PTR [rax],0x0
   14002f367:	je     0x14002f371
   14002f369:	add    rax,0x2
   14002f36d:	test   esi,esi
   14002f36f:	jne    0x14002f360
   14002f371:	sub    rax,rbx
   14002f374:	sar    rax,1
   14002f377:	mov    r15d,eax
   14002f37a:	jmp    0x14002f6f7
   14002f37f:	add    rdi,0x8
   14002f383:	mov    QWORD PTR [rsp+0x58],rdi
   14002f388:	mov    rdi,QWORD PTR [rdi-0x8]
   14002f38c:	call   0x140038860
   14002f391:	test   eax,eax
   14002f393:	je     0x14002fab4
   14002f399:	test   r14b,0x20
   14002f39d:	je     0x14002f3af
   14002f39f:	mov    WORD PTR [rdi],bp
   14002f3a2:	mov    DWORD PTR [rsp+0x70],0x1
   14002f3aa:	jmp    0x14002fa03
   14002f3af:	mov    DWORD PTR [rdi],ebp
   14002f3b1:	mov    DWORD PTR [rsp+0x70],0x1
   14002f3b9:	jmp    0x14002fa03
   14002f3be:	mov    DWORD PTR [rsp+0x9c],0x1
   14002f3c9:	add    r12w,0x20
   14002f3ce:	or     r14d,0x40
   14002f3d2:	test   r9d,r9d
   14002f3d5:	mov    eax,0x200
   14002f3da:	mov    DWORD PTR [rsp+0x40],r14d
   14002f3df:	mov    esi,eax
   14002f3e1:	lea    rbx,[rsp+0xc0]
   14002f3e9:	jns    0x14002f3f8
   14002f3eb:	mov    r15d,0x6
   14002f3f1:	mov    DWORD PTR [rsp+0x48],r15d
   14002f3f6:	jmp    0x14002f473
   14002f3f8:	test   r9d,r9d
   14002f3fb:	jne    0x14002f411
   14002f3fd:	cmp    r12w,0x67
   14002f402:	jne    0x14002f467
   14002f404:	mov    r15d,0x1
   14002f40a:	mov    DWORD PTR [rsp+0x48],r15d
   14002f40f:	jmp    0x14002f473
   14002f411:	cmp    r9d,eax
   14002f414:	jle    0x14002f41f
   14002f416:	mov    r9d,eax
   14002f419:	mov    DWORD PTR [rsp+0x48],eax
   14002f41d:	jmp    0x14002f428
   14002f41f:	cmp    r9d,0xa3
   14002f426:	jle    0x14002f46e
   14002f428:	lea    edi,[r9+0x15d]
   14002f42f:	movsxd rcx,edi
   14002f432:	call   0x1400320c0
   14002f437:	test   rax,rax
   14002f43a:	mov    QWORD PTR [rsp+0xa0],rax
   14002f442:	je     0x14002f455
   14002f444:	mov    r15d,DWORD PTR [rsp+0x48]
   14002f449:	mov    esi,edi
   14002f44b:	mov    rdi,QWORD PTR [rsp+0x58]
   14002f450:	mov    rbx,rax
   14002f453:	jmp    0x14002f473
   14002f455:	mov    rdi,QWORD PTR [rsp+0x58]
   14002f45a:	mov    r15d,0xa3
   14002f460:	mov    DWORD PTR [rsp+0x48],r15d
   14002f465:	jmp    0x14002f473
   14002f467:	mov    r15d,DWORD PTR [rsp+0x48]
   14002f46c:	jmp    0x14002f473
   14002f46e:	mov    r15d,DWORD PTR [rsp+0x48]
   14002f473:	mov    rax,QWORD PTR [rdi]
   14002f476:	mov    rcx,QWORD PTR [rip+0x2c8c3]        # 0x14005bd40
   14002f47d:	add    rdi,0x8
   14002f481:	mov    QWORD PTR [rsp+0x58],rdi
   14002f486:	movsxd rsi,esi
   14002f489:	mov    QWORD PTR [rsp+0xb0],rax
   14002f491:	movsx  edi,r12b
   14002f495:	call   0x14002df20
   14002f49a:	lea    rcx,[rsp+0x78]
   14002f49f:	mov    QWORD PTR [rsp+0x30],rcx
   14002f4a4:	mov    ecx,DWORD PTR [rsp+0x9c]
   14002f4ab:	mov    r9d,edi
   14002f4ae:	mov    DWORD PTR [rsp+0x28],ecx
   14002f4b2:	lea    rcx,[rsp+0xb0]
   14002f4ba:	mov    r8,rsi
   14002f4bd:	mov    rdx,rbx
   14002f4c0:	mov    DWORD PTR [rsp+0x20],r15d
   14002f4c5:	call   rax
   14002f4c7:	mov    edi,r14d
   14002f4ca:	and    edi,0x80
   14002f4d0:	je     0x14002f4ed
   14002f4d2:	test   r15d,r15d
   14002f4d5:	jne    0x14002f4ed
   14002f4d7:	mov    rcx,QWORD PTR [rip+0x2c87a]        # 0x14005bd58
   14002f4de:	call   0x14002df20
   14002f4e3:	lea    rdx,[rsp+0x78]
   14002f4e8:	mov    rcx,rbx
   14002f4eb:	call   rax
   14002f4ed:	cmp    r12w,0x67
   14002f4f2:	jne    0x14002f50e
   14002f4f4:	test   edi,edi
   14002f4f6:	jne    0x14002f50e
   14002f4f8:	mov    rcx,QWORD PTR [rip+0x2c851]        # 0x14005bd50
   14002f4ff:	call   0x14002df20
   14002f504:	lea    rdx,[rsp+0x78]
   14002f509:	mov    rcx,rbx
   14002f50c:	call   rax
   14002f50e:	cmp    BYTE PTR [rbx],0x2d
   14002f511:	jne    0x14002f521
   14002f513:	bts    r14d,0x8
   14002f518:	add    rbx,0x1
   14002f51c:	mov    DWORD PTR [rsp+0x40],r14d
   14002f521:	or     rcx,0xffffffffffffffff
   14002f525:	xor    eax,eax
   14002f527:	mov    rdi,rbx
   14002f52a:	repnz scas al,BYTE PTR es:[rdi]
   14002f52c:	not    rcx
   14002f52f:	sub    rcx,0x1
   14002f533:	mov    r15d,ecx
   14002f536:	jmp    0x14002f6f7
   14002f53b:	or     r14d,0x40
   14002f53f:	mov    r8d,0xa
   14002f545:	mov    DWORD PTR [rsp+0x40],r14d
   14002f54a:	jmp    0x14002f5ae
   14002f54c:	mov    r8d,0xa
   14002f552:	jmp    0x14002f5ae
   14002f554:	bts    r14d,0xf
   14002f559:	mov    r9d,0x10
   14002f55f:	mov    DWORD PTR [rsp+0x40],r14d
   14002f564:	mov    eax,0x7
   14002f569:	mov    DWORD PTR [rsp+0x74],eax
   14002f56d:	jmp    0x14002f578
   14002f56f:	mov    eax,0x27
   14002f574:	mov    DWORD PTR [rsp+0x74],eax
   14002f578:	test   r14b,r14b
   14002f57b:	mov    r8d,0x10
   14002f581:	jns    0x14002f5ae
   14002f583:	add    ax,0x51
   14002f587:	mov    WORD PTR [rsp+0x64],0x30
   14002f58e:	lea    r10d,[r8-0xe]
   14002f592:	mov    WORD PTR [rsp+0x66],ax
   14002f597:	jmp    0x14002f5ae
   14002f599:	test   r14b,r14b
   14002f59c:	mov    r8d,0x8
   14002f5a2:	jns    0x14002f5ae
   14002f5a4:	bts    r14d,0x9
   14002f5a9:	mov    DWORD PTR [rsp+0x40],r14d
   14002f5ae:	bt     r14d,0xf
   14002f5b3:	jae    0x14002f5c4
   14002f5b5:	add    rdi,0x8
   14002f5b9:	mov    QWORD PTR [rsp+0x58],rdi
   14002f5be:	mov    rdi,QWORD PTR [rdi-0x8]
   14002f5c2:	jmp    0x14002f626
   14002f5c4:	bt     r14d,0xc
   14002f5c9:	jae    0x14002f5da
   14002f5cb:	add    rdi,0x8
   14002f5cf:	mov    QWORD PTR [rsp+0x58],rdi
   14002f5d4:	mov    rdi,QWORD PTR [rdi-0x8]
   14002f5d8:	jmp    0x14002f626
   14002f5da:	test   r14b,0x20
   14002f5de:	je     0x14002f605
   14002f5e0:	test   r14b,0x40
   14002f5e4:	je     0x14002f5f6
   14002f5e6:	add    rdi,0x8
   14002f5ea:	mov    QWORD PTR [rsp+0x58],rdi
   14002f5ef:	movsx  rdi,WORD PTR [rdi-0x8]
   14002f5f4:	jmp    0x14002f626
   14002f5f6:	add    rdi,0x8
   14002f5fa:	mov    QWORD PTR [rsp+0x58],rdi
   14002f5ff:	movzx  edi,WORD PTR [rdi-0x8]
   14002f603:	jmp    0x14002f626
   14002f605:	test   r14b,0x40
   14002f609:	je     0x14002f61a
   14002f60b:	add    rdi,0x8
   14002f60f:	mov    QWORD PTR [rsp+0x58],rdi
   14002f614:	movsxd rdi,DWORD PTR [rdi-0x8]
   14002f618:	jmp    0x14002f626
   14002f61a:	add    rdi,0x8
   14002f61e:	mov    QWORD PTR [rsp+0x58],rdi
   14002f623:	mov    edi,DWORD PTR [rdi-0x8]
   14002f626:	test   r14b,0x40
   14002f62a:	je     0x14002f63e
   14002f62c:	test   rdi,rdi
   14002f62f:	jns    0x14002f63e
   14002f631:	neg    rdi
   14002f634:	bts    r14d,0x8
   14002f639:	mov    DWORD PTR [rsp+0x40],r14d
   14002f63e:	bt     r14d,0xf
   14002f643:	jb     0x14002f64e
   14002f645:	bt     r14d,0xc
   14002f64a:	jb     0x14002f64e
   14002f64c:	mov    edi,edi
   14002f64e:	test   r9d,r9d
   14002f651:	jns    0x14002f65b
   14002f653:	mov    r9d,0x1
   14002f659:	jmp    0x14002f670
   14002f65b:	mov    eax,0x200
   14002f660:	and    r14d,0xfffffff7
   14002f664:	cmp    r9d,eax
   14002f667:	mov    DWORD PTR [rsp+0x40],r14d
   14002f66c:	cmovg  r9d,eax
   14002f670:	mov    r14d,DWORD PTR [rsp+0x74]
   14002f675:	test   rdi,rdi
   14002f678:	mov    eax,0x0
   14002f67d:	cmove  r10d,eax
   14002f681:	lea    rbx,[rsp+0x2bf]
   14002f689:	mov    DWORD PTR [rsp+0x4c],r10d
   14002f68e:	xchg   ax,ax
   14002f690:	mov    ecx,r9d
   14002f693:	sub    r9d,0x1
   14002f697:	test   ecx,ecx
   14002f699:	jg     0x14002f6a0
   14002f69b:	test   rdi,rdi
   14002f69e:	je     0x14002f6c1
   14002f6a0:	xor    edx,edx
   14002f6a2:	mov    rax,rdi
   14002f6a5:	movsxd rcx,r8d
   14002f6a8:	div    rcx
   14002f6ab:	mov    rdi,rax
   14002f6ae:	lea    eax,[rdx+0x30]
   14002f6b1:	cmp    eax,0x39
   14002f6b4:	jle    0x14002f6b9
   14002f6b6:	add    eax,r14d
   14002f6b9:	mov    BYTE PTR [rbx],al
   14002f6bb:	sub    rbx,0x1
   14002f6bf:	jmp    0x14002f690
   14002f6c1:	mov    r14d,DWORD PTR [rsp+0x40]
   14002f6c6:	lea    rax,[rsp+0x2bf]
   14002f6ce:	mov    DWORD PTR [rsp+0x48],r9d
   14002f6d3:	sub    eax,ebx
   14002f6d5:	add    rbx,0x1
   14002f6d9:	bt     r14d,0x9
   14002f6de:	mov    r15d,eax
   14002f6e1:	jae    0x14002f6f7
   14002f6e3:	test   eax,eax
   14002f6e5:	je     0x14002f6ec
   14002f6e7:	cmp    BYTE PTR [rbx],0x30
   14002f6ea:	je     0x14002f6f7
   14002f6ec:	sub    rbx,0x1
   14002f6f0:	add    r15d,0x1
   14002f6f4:	mov    BYTE PTR [rbx],0x30
   14002f6f7:	cmp    DWORD PTR [rsp+0x70],0x0
   14002f6fc:	jne    0x14002fa03
   14002f702:	test   r14b,0x40
   14002f706:	je     0x14002f751
   14002f708:	bt     r14d,0x8
   14002f70d:	jae    0x14002f721
   14002f70f:	mov    eax,0x1
   14002f714:	mov    WORD PTR [rsp+0x64],0x2d
   14002f71b:	mov    DWORD PTR [rsp+0x4c],eax
   14002f71f:	jmp    0x14002f75b
   14002f721:	test   r14b,0x1
   14002f725:	je     0x14002f739
   14002f727:	mov    eax,0x1
   14002f72c:	mov    WORD PTR [rsp+0x64],0x2b
   14002f733:	mov    DWORD PTR [rsp+0x4c],eax
   14002f737:	jmp    0x14002f75b
   14002f739:	test   r14b,0x2
   14002f73d:	je     0x14002f757
   14002f73f:	mov    eax,0x1
   14002f744:	mov    WORD PTR [rsp+0x64],0x20
   14002f74b:	mov    DWORD PTR [rsp+0x4c],eax
   14002f74f:	jmp    0x14002f75b
   14002f751:	mov    eax,DWORD PTR [rsp+0x4c]
   14002f755:	jmp    0x14002f75b
   14002f757:	mov    eax,DWORD PTR [rsp+0x4c]
   14002f75b:	mov    r14d,DWORD PTR [rsp+0x50]
   14002f760:	mov    r12d,DWORD PTR [rsp+0x40]
   14002f765:	sub    r14d,r15d
   14002f768:	sub    r14d,eax
   14002f76b:	test   r12b,0xc
   14002f76f:	jne    0x14002f7cd
   14002f771:	test   r14d,r14d
   14002f774:	mov    edi,r14d
   14002f777:	jle    0x14002f7cd
   14002f779:	data16 xchg ax,ax
   14002f77c:	data16 data16 xchg ax,ax
   14002f780:	sub    edi,0x1
   14002f783:	test   BYTE PTR [r13+0x18],0x40
   14002f788:	je     0x14002f79a
   14002f78a:	cmp    QWORD PTR [r13+0x10],0x0
   14002f78f:	jne    0x14002f79a
   14002f791:	add    ebp,0x1
   14002f794:	mov    DWORD PTR [rsp+0x44],ebp
   14002f798:	jmp    0x14002f7b3
   14002f79a:	mov    rdx,r13
   14002f79d:	mov    cx,0x20
   14002f7a1:	call   0x1400385e0
   14002f7a6:	cmp    ax,0xffff
   14002f7aa:	je     0x14002f7c2
   14002f7ac:	add    ebp,0x1
   14002f7af:	mov    DWORD PTR [rsp+0x44],ebp
   14002f7b3:	cmp    ebp,0xffffffff
   14002f7b6:	je     0x14002f7bc
   14002f7b8:	test   edi,edi
   14002f7ba:	jg     0x14002f780
   14002f7bc:	mov    eax,DWORD PTR [rsp+0x4c]
   14002f7c0:	jmp    0x14002f7cd
   14002f7c2:	mov    eax,DWORD PTR [rsp+0x4c]
   14002f7c6:	or     ebp,0xffffffff
   14002f7c9:	mov    DWORD PTR [rsp+0x44],ebp
   14002f7cd:	test   BYTE PTR [r13+0x18],0x40
   14002f7d2:	mov    esi,eax
   14002f7d4:	lea    rdi,[rsp+0x64]
   14002f7d9:	je     0x14002f7ed
   14002f7db:	cmp    QWORD PTR [r13+0x10],0x0
   14002f7e0:	jne    0x14002f7ed
   14002f7e2:	add    ebp,eax
   14002f7e4:	mov    DWORD PTR [rsp+0x44],ebp
   14002f7e8:	jmp    0x14002f88f
   14002f7ed:	test   eax,eax
   14002f7ef:	jle    0x14002f88f
   14002f7f5:	xor    r12d,r12d
   14002f7f8:	data16 data16 xchg ax,ax
   14002f7fc:	data16 data16 xchg ax,ax
   14002f800:	sub    esi,0x1
   14002f803:	test   BYTE PTR [r13+0x18],0x40
   14002f808:	je     0x14002f819
   14002f80a:	cmp    QWORD PTR [r13+0x10],r12
   14002f80e:	jne    0x14002f819
   14002f810:	add    ebp,0x1
   14002f813:	mov    DWORD PTR [rsp+0x44],ebp
   14002f817:	jmp    0x14002f83a
   14002f819:	movzx  ecx,WORD PTR [rdi]
   14002f81c:	mov    rdx,r13
   14002f81f:	call   0x1400385e0
   14002f824:	cmp    ax,0xffff
   14002f828:	jne    0x14002f833
   14002f82a:	or     ebp,0xffffffff
   14002f82d:	mov    DWORD PTR [rsp+0x44],ebp
   14002f831:	jmp    0x14002f83a
   14002f833:	add    ebp,0x1
   14002f836:	mov    DWORD PTR [rsp+0x44],ebp
   14002f83a:	add    rdi,0x2
   14002f83e:	cmp    ebp,0xffffffff
   14002f841:	jne    0x14002f882
   14002f843:	call   0x14002bca0
   14002f848:	cmp    DWORD PTR [rax],0x2a
   14002f84b:	jne    0x14002f88a
   14002f84d:	test   BYTE PTR [r13+0x18],0x40
   14002f852:	je     0x14002f864
   14002f854:	cmp    QWORD PTR [r13+0x10],r12
   14002f858:	jne    0x14002f864
   14002f85a:	mov    ebp,r12d
   14002f85d:	mov    DWORD PTR [rsp+0x44],r12d
   14002f862:	jmp    0x14002f882
   14002f864:	mov    rdx,r13
   14002f867:	mov    cx,0x3f
   14002f86b:	call   0x1400385e0
   14002f870:	mov    ebp,r12d
   14002f873:	cmp    ax,0xffff
   14002f877:	setne  bpl
   14002f87b:	sub    ebp,0x1
   14002f87e:	mov    DWORD PTR [rsp+0x44],ebp
   14002f882:	test   esi,esi
   14002f884:	jg     0x14002f800
   14002f88a:	mov    r12d,DWORD PTR [rsp+0x40]
   14002f88f:	test   r12b,0x8
   14002f893:	je     0x14002f8e8
   14002f895:	test   r12b,0x4
   14002f899:	jne    0x14002f8e8
   14002f89b:	test   r14d,r14d
   14002f89e:	mov    edi,r14d
   14002f8a1:	jle    0x14002f8e8
   14002f8a3:	sub    edi,0x1
   14002f8a6:	test   BYTE PTR [r13+0x18],0x40
   14002f8ab:	je     0x14002f8bd
   14002f8ad:	cmp    QWORD PTR [r13+0x10],0x0
   14002f8b2:	jne    0x14002f8bd
   14002f8b4:	add    ebp,0x1
   14002f8b7:	mov    DWORD PTR [rsp+0x44],ebp
   14002f8bb:	jmp    0x14002f8d6
   14002f8bd:	mov    rdx,r13
   14002f8c0:	mov    cx,0x30
   14002f8c4:	call   0x1400385e0
   14002f8c9:	cmp    ax,0xffff
   14002f8cd:	je     0x14002f8e1
   14002f8cf:	add    ebp,0x1
   14002f8d2:	mov    DWORD PTR [rsp+0x44],ebp
   14002f8d6:	cmp    ebp,0xffffffff
   14002f8d9:	je     0x14002f8e8
   14002f8db:	test   edi,edi
   14002f8dd:	jg     0x14002f8a3
   14002f8df:	jmp    0x14002f8e8
   14002f8e1:	or     ebp,0xffffffff
   14002f8e4:	mov    DWORD PTR [rsp+0x44],ebp
   14002f8e8:	cmp    DWORD PTR [rsp+0x60],0x0
   14002f8ed:	jne    0x14002f98e
   14002f8f3:	test   r15d,r15d
   14002f8f6:	jle    0x14002f98e
   14002f8fc:	mov    rdi,rbx
   14002f8ff:	mov    esi,r15d
   14002f902:	xchg   ax,ax
   14002f904:	data16 data16 xchg ax,ax
   14002f908:	data16 data16 xchg ax,ax
   14002f90c:	data16 data16 xchg ax,ax
   14002f910:	mov    rax,QWORD PTR [rsp+0x78]
   14002f915:	lea    r9,[rsp+0x78]
   14002f91a:	lea    rcx,[rsp+0x68]
   14002f91f:	movsxd r8,DWORD PTR [rax+0x10c]
   14002f926:	mov    rdx,rdi
   14002f929:	sub    esi,0x1
   14002f92c:	call   0x140038a40
   14002f931:	test   eax,eax
   14002f933:	movsxd r12,eax
   14002f936:	jle    0x14002f980
   14002f938:	test   BYTE PTR [r13+0x18],0x40
   14002f93d:	je     0x14002f94f
   14002f93f:	cmp    QWORD PTR [r13+0x10],0x0
   14002f944:	jne    0x14002f94f
   14002f946:	add    ebp,0x1
   14002f949:	mov    DWORD PTR [rsp+0x44],ebp
   14002f94d:	jmp    0x14002f972
   14002f94f:	movzx  ecx,WORD PTR [rsp+0x68]
   14002f954:	mov    rdx,r13
   14002f957:	call   0x1400385e0
   14002f95c:	cmp    ax,0xffff
   14002f960:	jne    0x14002f96b
   14002f962:	or     ebp,0xffffffff
   14002f965:	mov    DWORD PTR [rsp+0x44],ebp
   14002f969:	jmp    0x14002f972
   14002f96b:	add    ebp,0x1
   14002f96e:	mov    DWORD PTR [rsp+0x44],ebp
   14002f972:	add    rdi,r12
   14002f975:	test   esi,esi
   14002f977:	jg     0x14002f910
   14002f979:	mov    r12d,DWORD PTR [rsp+0x40]
   14002f97e:	jmp    0x14002f9a5
   14002f980:	mov    r14d,DWORD PTR [rsp+0x40]
   14002f985:	or     ebp,0xffffffff
   14002f988:	mov    DWORD PTR [rsp+0x44],ebp
   14002f98c:	jmp    0x14002fa03
   14002f98e:	lea    r9,[rsp+0x44]
   14002f993:	mov    r8,r13
   14002f996:	mov    edx,r15d
   14002f999:	mov    rcx,rbx
   14002f99c:	call   0x14002ebe0
   14002f9a1:	mov    ebp,DWORD PTR [rsp+0x44]
   14002f9a5:	test   ebp,ebp
   14002f9a7:	js     0x14002fa63
   14002f9ad:	test   r12b,0x4
   14002f9b1:	je     0x14002fa6a
   14002f9b7:	test   r14d,r14d
   14002f9ba:	jle    0x14002fa5c
   14002f9c0:	sub    r14d,0x1
   14002f9c4:	test   BYTE PTR [r13+0x18],0x40
   14002f9c9:	je     0x14002f9db
   14002f9cb:	cmp    QWORD PTR [r13+0x10],0x0
   14002f9d0:	jne    0x14002f9db
   14002f9d2:	add    ebp,0x1
   14002f9d5:	mov    DWORD PTR [rsp+0x44],ebp
   14002f9d9:	jmp    0x14002f9f4
   14002f9db:	mov    rdx,r13
   14002f9de:	mov    cx,0x20
   14002f9e2:	call   0x1400385e0
   14002f9e7:	cmp    ax,0xffff
   14002f9eb:	je     0x14002fa47
   14002f9ed:	add    ebp,0x1
   14002f9f0:	mov    DWORD PTR [rsp+0x44],ebp
   14002f9f4:	cmp    ebp,0xffffffff
   14002f9f7:	je     0x14002fa55
   14002f9f9:	test   r14d,r14d
   14002f9fc:	jg     0x14002f9c0
   14002f9fe:	mov    r14d,DWORD PTR [rsp+0x40]
   14002fa03:	mov    rax,QWORD PTR [rsp+0xa0]
   14002fa0b:	test   rax,rax
   14002fa0e:	je     0x14002fa71
   14002fa10:	mov    rcx,rax
   14002fa13:	call   0x14002a380
   14002fa18:	mov    r9d,DWORD PTR [rsp+0x48]
   14002fa1d:	mov    rdi,QWORD PTR [rsp+0x58]
   14002fa22:	mov    rsi,QWORD PTR [rsp+0xa8]
   14002fa2a:	mov    r10d,DWORD PTR [rsp+0x4c]
   14002fa2f:	mov    r11d,DWORD PTR [rsp+0x50]
   14002fa34:	xor    ecx,ecx
   14002fa36:	lea    rdx,[rip+0xfffffffffffd05c3]        # 0x140000000
   14002fa3d:	mov    QWORD PTR [rsp+0xa0],rcx
   14002fa45:	jmp    0x14002fa9d
   14002fa47:	mov    r14d,DWORD PTR [rsp+0x40]
   14002fa4c:	or     ebp,0xffffffff
   14002fa4f:	mov    DWORD PTR [rsp+0x44],ebp
   14002fa53:	jmp    0x14002fa03
   14002fa55:	mov    r14d,DWORD PTR [rsp+0x40]
   14002fa5a:	jmp    0x14002fa03
   14002fa5c:	mov    r14d,DWORD PTR [rsp+0x40]
   14002fa61:	jmp    0x14002fa03
   14002fa63:	mov    r14d,DWORD PTR [rsp+0x40]
   14002fa68:	jmp    0x14002fa03
   14002fa6a:	mov    r14d,DWORD PTR [rsp+0x40]
   14002fa6f:	jmp    0x14002fa03
   14002fa71:	mov    r9d,DWORD PTR [rsp+0x48]
   14002fa76:	mov    rdi,QWORD PTR [rsp+0x58]
   14002fa7b:	mov    rsi,QWORD PTR [rsp+0xa8]
   14002fa83:	mov    r10d,DWORD PTR [rsp+0x4c]
   14002fa88:	mov    r11d,DWORD PTR [rsp+0x50]
   14002fa8d:	lea    rdx,[rip+0xfffffffffffd056c]        # 0x140000000
   14002fa94:	jmp    0x14002fa9d
   14002fa96:	lea    rdx,[rip+0xfffffffffffd0563]        # 0x140000000
   14002fa9d:	mov    r12w,WORD PTR [rsi]
   14002faa1:	test   r12w,r12w
   14002faa5:	je     0x14002faf3
   14002faa7:	mov    r8d,DWORD PTR [rsp+0x98]
   14002faaf:	jmp    0x14002ee80
   14002fab4:	call   0x14002bca0
   14002fab9:	xor    r9d,r9d
   14002fabc:	xor    r8d,r8d
   14002fabf:	mov    DWORD PTR [rax],0x16
   14002fac5:	xor    eax,eax
   14002fac7:	xor    edx,edx
   14002fac9:	xor    ecx,ecx
   14002facb:	mov    QWORD PTR [rsp+0x20],rax
   14002fad0:	call   0x14002e900
   14002fad5:	cmp    BYTE PTR [rsp+0x90],0x0
   14002fadd:	je     0x14002faee
   14002fadf:	mov    rax,QWORD PTR [rsp+0x88]
   14002fae7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002faee:	or     eax,0xffffffff
   14002faf1:	jmp    0x14002fb0e
   14002faf3:	mov    rdx,QWORD PTR [rsp+0x88]
   14002fafb:	cmp    BYTE PTR [rsp+0x90],0x0
   14002fb03:	je     0x14002fb0c
   14002fb05:	and    DWORD PTR [rdx+0xc8],0xfffffffd
   14002fb0c:	mov    eax,ebp
   14002fb0e:	mov    r12,QWORD PTR [rsp+0x4e0]
   14002fb16:	mov    rbp,QWORD PTR [rsp+0x4e8]
   14002fb1e:	mov    r15,QWORD PTR [rsp+0x4d8]
   14002fb26:	mov    rcx,QWORD PTR [rsp+0x4c0]
   14002fb2e:	xor    rcx,rsp
   14002fb31:	call   0x140029b40
   14002fb36:	add    rsp,0x4f0
   14002fb3d:	pop    r14
   14002fb3f:	pop    r13
   14002fb41:	pop    rdi
   14002fb42:	pop    rsi
   14002fb43:	pop    rbx
   14002fb44:	ret    
   14002fb45:	data16 xchg ax,ax
   14002fb48:	and    al,0xf1
   14002fb4a:	add    al,BYTE PTR [rax]
   14002fb4c:	hlt    
   14002fb4d:	out    dx,al
   14002fb4e:	add    al,BYTE PTR [rax]
   14002fb50:	sub    bh,ch
   14002fb52:	add    al,BYTE PTR [rax]
   14002fb54:	nop
   14002fb55:	out    dx,eax
   14002fb56:	add    al,BYTE PTR [rax]
   14002fb58:	fsubp  st(7),st
   14002fb5a:	add    al,BYTE PTR [rax]
   14002fb5c:	in     al,dx
   14002fb5d:	out    dx,eax
   14002fb5e:	add    al,BYTE PTR [rax]
   14002fb60:	xor    dh,al
   14002fb62:	add    al,BYTE PTR [rax]
   14002fb64:	pushf  
   14002fb65:	icebp  
   14002fb66:	add    al,BYTE PTR [rax]
   14002fb68:	mov    esi,0xc20002f3
   14002fb6d:	icebp  
   14002fb6e:	add    al,BYTE PTR [rax]
   14002fb70:	ret    0x2f2
   14002fb73:	add    BYTE PTR [rbp+rsi*8+0x2],ah
   14002fb77:	add    BYTE PTR [rcx-0xe],bl
   14002fb7a:	add    al,BYTE PTR [rax]
   14002fb7c:	(bad)  
   14002fb7d:	repz add al,BYTE PTR [rax]
   14002fb80:	(bad)  
   14002fb81:	icebp  
   14002fb82:	add    al,BYTE PTR [rax]
   14002fb84:	cmp    esi,ebp
   14002fb86:	add    al,BYTE PTR [rax]
   14002fb88:	jg     0x14002fb7d
   14002fb8a:	add    al,BYTE PTR [rax]
   14002fb8c:	cdq    
   14002fb8d:	cmc    
   14002fb8e:	add    al,BYTE PTR [rax]
   14002fb90:	push   rsp
   14002fb91:	cmc    
   14002fb92:	add    al,BYTE PTR [rax]
   14002fb94:	(bad)  
   14002fb95:	repnz add al,BYTE PTR [rax]
   14002fb98:	rex.WR cmc 
   14002fb9a:	add    al,BYTE PTR [rax]
   14002fb9c:	outs   dx,DWORD PTR ds:[rsi]
   14002fb9d:	cmc    
   14002fb9e:	add    al,BYTE PTR [rax]
   14002fba0:	div    esi
   14002fba2:	add    al,BYTE PTR [rax]
   14002fba4:	add    BYTE PTR [rsi],cl
   14002fba6:	add    DWORD PTR [rsi],ecx
   14002fba8:	add    BYTE PTR [rsi],cl
   14002fbaa:	add    BYTE PTR [rsi],cl
   14002fbac:	(bad)  
   14002fbad:	(bad)  
   14002fbae:	(bad)  
   14002fbaf:	(bad)  
   14002fbb0:	(bad)  
   14002fbb1:	(bad)  
   14002fbb2:	(bad)  
   14002fbb3:	(bad)  
   14002fbb4:	(bad)  
   14002fbb5:	(bad)  
   14002fbb6:	add    cl,BYTE PTR [rsi]
   14002fbb8:	(bad)  
   14002fbb9:	(bad)  
   14002fbba:	(bad)  
   14002fbbb:	add    ecx,DWORD PTR [rsi]
   14002fbbd:	add    al,0xe
   14002fbbf:	(bad)  
   14002fbc0:	(bad)  
   14002fbc1:	(bad)  
   14002fbc2:	(bad)  
   14002fbc3:	(bad)  
   14002fbc4:	add    eax,0x507060e
   14002fbc9:	add    eax,0xe070e05
   14002fbce:	(bad)  
   14002fbcf:	(bad)  
   14002fbd0:	(bad)  
   14002fbd1:	or     BYTE PTR [rcx],cl
   14002fbd3:	or     cl,BYTE PTR [rsi]
   14002fbd5:	(bad)  
   14002fbd6:	or     ecx,DWORD PTR [rsi]
   14002fbd8:	or     al,0xe
   14002fbda:	(bad)  
   14002fbdb:	or     eax,0xcccccccc
   14002fbe0:	rex push rbx
   14002fbe2:	push   rsi
   14002fbe3:	push   rdi
   14002fbe4:	push   r13
   14002fbe6:	push   r14
   14002fbe8:	sub    rsp,0x4f0
   14002fbef:	mov    rax,QWORD PTR [rip+0x2b38a]        # 0x14005af80
   14002fbf6:	xor    rax,rsp
   14002fbf9:	mov    QWORD PTR [rsp+0x4c0],rax
   14002fc01:	xor    ebx,ebx
   14002fc03:	test   r8,r8
   14002fc06:	mov    rdi,r9
   14002fc09:	mov    QWORD PTR [rsp+0x58],r9
   14002fc0e:	mov    rsi,rdx
   14002fc11:	mov    r13,rcx
   14002fc14:	mov    DWORD PTR [rsp+0x98],ebx
   14002fc1b:	mov    r14d,ebx
   14002fc1e:	mov    DWORD PTR [rsp+0x44],ebx
   14002fc22:	mov    r11d,ebx
   14002fc25:	mov    DWORD PTR [rsp+0x54],ebx
   14002fc29:	mov    r9d,ebx
   14002fc2c:	mov    DWORD PTR [rsp+0x4c],ebx
   14002fc30:	mov    r10d,ebx
   14002fc33:	mov    DWORD PTR [rsp+0x50],ebx
   14002fc37:	mov    DWORD PTR [rsp+0x70],ebx
   14002fc3b:	mov    DWORD PTR [rsp+0x60],ebx
   14002fc3f:	mov    BYTE PTR [rsp+0x90],bl
   14002fc46:	jne    0x14002fd0a
   14002fc4c:	call   0x14002e210
   14002fc51:	mov    QWORD PTR [rsp+0x88],rax
   14002fc59:	mov    rdx,rax
   14002fc5c:	mov    rcx,QWORD PTR [rax+0xc0]
   14002fc63:	cmp    rcx,QWORD PTR [rip+0x2bde6]        # 0x14005ba50
   14002fc6a:	mov    QWORD PTR [rsp+0x78],rcx
   14002fc6f:	mov    rax,QWORD PTR [rax+0xb8]
   14002fc76:	mov    QWORD PTR [rsp+0x80],rax
   14002fc7e:	je     0x14002fca8
   14002fc80:	mov    ecx,DWORD PTR [rdx+0xc8]
   14002fc86:	test   DWORD PTR [rip+0x2bc4c],ecx        # 0x14005b8d8
   14002fc8c:	jne    0x14002fca8
   14002fc8e:	call   0x140031a10
   14002fc93:	mov    rdx,QWORD PTR [rsp+0x88]
   14002fc9b:	mov    QWORD PTR [rsp+0x78],rax
   14002fca0:	mov    rax,QWORD PTR [rsp+0x80]
   14002fca8:	cmp    rax,QWORD PTR [rip+0x2bb21]        # 0x14005b7d0
   14002fcaf:	je     0x14002fcd4
   14002fcb1:	mov    eax,DWORD PTR [rdx+0xc8]
   14002fcb7:	test   DWORD PTR [rip+0x2bc1b],eax        # 0x14005b8d8
   14002fcbd:	jne    0x14002fcd4
   14002fcbf:	call   0x140030ec0
   14002fcc4:	mov    rdx,QWORD PTR [rsp+0x88]
   14002fccc:	mov    QWORD PTR [rsp+0x80],rax
   14002fcd4:	test   BYTE PTR [rdx+0xc8],0x2
   14002fcdb:	jne    0x14002fcff
   14002fcdd:	or     DWORD PTR [rdx+0xc8],0x2
   14002fce4:	mov    rdx,QWORD PTR [rsp+0x88]
   14002fcec:	mov    r9d,ebx
   14002fcef:	mov    BYTE PTR [rsp+0x90],0x1
   14002fcf7:	mov    r10d,ebx
   14002fcfa:	mov    r11d,ebx
   14002fcfd:	jmp    0x14002fd25
   14002fcff:	mov    r9d,ebx
   14002fd02:	mov    r10d,ebx
   14002fd05:	mov    r11d,ebx
   14002fd08:	jmp    0x14002fd25
   14002fd0a:	mov    rax,QWORD PTR [r8]
   14002fd0d:	lea    rcx,[rsp+0x78]
   14002fd12:	mov    QWORD PTR [rcx],rax
   14002fd15:	mov    rax,QWORD PTR [r8+0x8]
   14002fd19:	mov    QWORD PTR [rcx+0x8],rax
   14002fd1d:	mov    rdx,QWORD PTR [rsp+0x88]
   14002fd25:	test   r13,r13
   14002fd28:	jne    0x14002fd69
   14002fd2a:	call   0x14002bca0
   14002fd2f:	xor    r9d,r9d
   14002fd32:	xor    r8d,r8d
   14002fd35:	xor    edx,edx
   14002fd37:	xor    ecx,ecx
   14002fd39:	mov    QWORD PTR [rsp+0x20],rbx
   14002fd3e:	mov    DWORD PTR [rax],0x16
   14002fd44:	call   0x14002e900
   14002fd49:	cmp    BYTE PTR [rsp+0x90],bl
   14002fd50:	je     0x14002fd61
   14002fd52:	mov    rax,QWORD PTR [rsp+0x88]
   14002fd5a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002fd61:	or     eax,0xffffffff
   14002fd64:	jmp    0x140030ae9
   14002fd69:	test   rsi,rsi
   14002fd6c:	je     0x14002fd2a
   14002fd6e:	xor    r8d,r8d
   14002fd71:	mov    QWORD PTR [rsp+0x4e8],rbp
   14002fd79:	mov    QWORD PTR [rsp+0x4e0],r12
   14002fd81:	movzx  r12d,WORD PTR [rsi]
   14002fd85:	mov    eax,r8d
   14002fd88:	mov    rcx,r8
   14002fd8b:	test   r12w,r12w
   14002fd8f:	mov    QWORD PTR [rsp+0x4d8],r15
   14002fd97:	mov    ebp,r8d
   14002fd9a:	mov    DWORD PTR [rsp+0x48],r8d
   14002fd9f:	mov    DWORD PTR [rsp+0x40],eax
   14002fda3:	mov    QWORD PTR [rsp+0xa0],rcx
   14002fdab:	mov    r15d,r8d
   14002fdae:	je     0x140030abe
   14002fdb4:	mov    rbx,QWORD PTR [rsp+0xb0]
   14002fdbc:	lea    rdx,[rip+0xfffffffffffd023d]        # 0x140000000
   14002fdc3:	nop
   14002fdc4:	data16 data16 xchg ax,ax
   14002fdc8:	data16 data16 xchg ax,ax
   14002fdcc:	data16 data16 xchg ax,ax
   14002fdd0:	add    rsi,0x2
   14002fdd4:	test   ebp,ebp
   14002fdd6:	mov    QWORD PTR [rsp+0xa8],rsi
   14002fdde:	js     0x140030a6e
   14002fde4:	lea    eax,[r12-0x20]
   14002fde9:	cmp    ax,0x58
   14002fded:	ja     0x14002fdff
   14002fdef:	movzx  eax,r12w
   14002fdf3:	mov    cl,BYTE PTR [rax+rdx*1+0x496b0]
   14002fdfa:	and    ecx,0xf
   14002fdfd:	jmp    0x14002fe02
   14002fdff:	mov    ecx,r8d
   14002fe02:	movsxd rax,ecx
   14002fe05:	lea    rcx,[rax+rax*8]
   14002fe09:	movsxd rax,DWORD PTR [rsp+0x40]
   14002fe0e:	add    rcx,rax
   14002fe11:	movzx  eax,BYTE PTR [rcx+rdx*1+0x496d0]
   14002fe19:	shr    eax,0x4
   14002fe1c:	cmp    eax,0x8
   14002fe1f:	mov    DWORD PTR [rsp+0x40],eax
   14002fe23:	je     0x140030a77
   14002fe29:	cmp    eax,0x7
   14002fe2c:	ja     0x140030a60
   14002fe32:	mov    ecx,DWORD PTR [rdx+rax*4+0x30b08]
   14002fe39:	add    rcx,rdx
   14002fe3c:	jmp    rcx
   14002fe3e:	or     r9d,0xffffffff
   14002fe42:	mov    DWORD PTR [rsp+0x9c],r8d
   14002fe4a:	mov    DWORD PTR [rsp+0x70],r8d
   14002fe4f:	mov    r11d,r8d
   14002fe52:	mov    DWORD PTR [rsp+0x54],r8d
   14002fe57:	mov    r10d,r8d
   14002fe5a:	mov    DWORD PTR [rsp+0x4c],r9d
   14002fe5f:	mov    DWORD PTR [rsp+0x50],r8d
   14002fe64:	mov    r14d,r8d
   14002fe67:	mov    DWORD PTR [rsp+0x44],r8d
   14002fe6c:	mov    DWORD PTR [rsp+0x60],r8d
   14002fe71:	jmp    0x140030a60
   14002fe76:	movzx  eax,r12w
   14002fe7a:	cmp    eax,0x20
   14002fe7d:	je     0x14002fee0
   14002fe7f:	cmp    eax,0x23
   14002fe82:	je     0x14002fecd
   14002fe84:	cmp    eax,0x2b
   14002fe87:	je     0x14002febb
   14002fe89:	cmp    eax,0x2d
   14002fe8c:	je     0x14002fea9
   14002fe8e:	cmp    eax,0x30
   14002fe91:	jne    0x140030a5c
   14002fe97:	mov    eax,DWORD PTR [rsp+0x40]
   14002fe9b:	or     r14d,0x8
   14002fe9f:	mov    DWORD PTR [rsp+0x44],r14d
   14002fea4:	jmp    0x140030a60
   14002fea9:	mov    eax,DWORD PTR [rsp+0x40]
   14002fead:	or     r14d,0x4
   14002feb1:	mov    DWORD PTR [rsp+0x44],r14d
   14002feb6:	jmp    0x140030a60
   14002febb:	mov    eax,DWORD PTR [rsp+0x40]
   14002febf:	or     r14d,0x1
   14002fec3:	mov    DWORD PTR [rsp+0x44],r14d
   14002fec8:	jmp    0x140030a60
   14002fecd:	mov    eax,DWORD PTR [rsp+0x40]
   14002fed1:	bts    r14d,0x7
   14002fed6:	mov    DWORD PTR [rsp+0x44],r14d
   14002fedb:	jmp    0x140030a60
   14002fee0:	mov    eax,DWORD PTR [rsp+0x40]
   14002fee4:	or     r14d,0x2
   14002fee8:	mov    DWORD PTR [rsp+0x44],r14d
   14002feed:	jmp    0x140030a60
   14002fef2:	cmp    r12w,0x2a
   14002fef7:	jne    0x14002ff29
   14002fef9:	mov    r11d,DWORD PTR [rdi]
   14002fefc:	add    rdi,0x8
   14002ff00:	test   r11d,r11d
   14002ff03:	mov    QWORD PTR [rsp+0x58],rdi
   14002ff08:	mov    DWORD PTR [rsp+0x54],r11d
   14002ff0d:	jns    0x140030a60
   14002ff13:	or     r14d,0x4
   14002ff17:	neg    r11d
   14002ff1a:	mov    DWORD PTR [rsp+0x54],r11d
   14002ff1f:	mov    DWORD PTR [rsp+0x44],r14d
   14002ff24:	jmp    0x140030a60
   14002ff29:	movzx  eax,r12w
   14002ff2d:	lea    ecx,[r11+r11*4]
   14002ff31:	lea    r11d,[rax+rcx*2-0x30]
   14002ff36:	mov    eax,DWORD PTR [rsp+0x40]
   14002ff3a:	mov    DWORD PTR [rsp+0x54],r11d
   14002ff3f:	jmp    0x140030a60
   14002ff44:	mov    r9d,r8d
   14002ff47:	mov    DWORD PTR [rsp+0x4c],r8d
   14002ff4c:	jmp    0x140030a60
   14002ff51:	cmp    r12w,0x2a
   14002ff56:	jne    0x14002ff80
   14002ff58:	mov    r9d,DWORD PTR [rdi]
   14002ff5b:	add    rdi,0x8
   14002ff5f:	test   r9d,r9d
   14002ff62:	mov    QWORD PTR [rsp+0x58],rdi
   14002ff67:	mov    DWORD PTR [rsp+0x4c],r9d
   14002ff6c:	jns    0x140030a60
   14002ff72:	or     r9d,0xffffffff
   14002ff76:	mov    DWORD PTR [rsp+0x4c],r9d
   14002ff7b:	jmp    0x140030a60
   14002ff80:	movzx  eax,r12w
   14002ff84:	lea    ecx,[r9+r9*4]
   14002ff88:	lea    r9d,[rax+rcx*2-0x30]
   14002ff8d:	mov    eax,DWORD PTR [rsp+0x40]
   14002ff91:	mov    DWORD PTR [rsp+0x4c],r9d
   14002ff96:	jmp    0x140030a60
   14002ff9b:	movzx  eax,r12w
   14002ff9f:	cmp    eax,0x49
   14002ffa2:	je     0x14003000b
   14002ffa4:	cmp    eax,0x68
   14002ffa7:	je     0x14002fff9
   14002ffa9:	cmp    eax,0x6c
   14002ffac:	je     0x14002ffca
   14002ffae:	cmp    eax,0x77
   14002ffb1:	jne    0x140030a32
   14002ffb7:	mov    eax,DWORD PTR [rsp+0x40]
   14002ffbb:	bts    r14d,0xb
   14002ffc0:	mov    DWORD PTR [rsp+0x44],r14d
   14002ffc5:	jmp    0x140030a60
   14002ffca:	cmp    WORD PTR [rsi],0x6c
   14002ffce:	jne    0x14002ffe7
   14002ffd0:	mov    eax,DWORD PTR [rsp+0x40]
   14002ffd4:	add    rsi,0x2
   14002ffd8:	bts    r14d,0xc
   14002ffdd:	mov    DWORD PTR [rsp+0x44],r14d
   14002ffe2:	jmp    0x140030a60
   14002ffe7:	mov    eax,DWORD PTR [rsp+0x40]
   14002ffeb:	or     r14d,0x10
   14002ffef:	mov    DWORD PTR [rsp+0x44],r14d
   14002fff4:	jmp    0x140030a60
   14002fff9:	mov    eax,DWORD PTR [rsp+0x40]
   14002fffd:	or     r14d,0x20
   140030001:	mov    DWORD PTR [rsp+0x44],r14d
   140030006:	jmp    0x140030a60
   14003000b:	movzx  eax,WORD PTR [rsi]
   14003000e:	bts    r14d,0xf
   140030013:	cmp    ax,0x36
   140030017:	mov    DWORD PTR [rsp+0x44],r14d
   14003001c:	jne    0x14003003c
   14003001e:	cmp    WORD PTR [rsi+0x2],0x34
   140030023:	jne    0x14003003c
   140030025:	mov    eax,DWORD PTR [rsp+0x40]
   140030029:	add    rsi,0x4
   14003002d:	bts    r14d,0xf
   140030032:	mov    DWORD PTR [rsp+0x44],r14d
   140030037:	jmp    0x140030a60
   14003003c:	cmp    ax,0x33
   140030040:	jne    0x140030060
   140030042:	cmp    WORD PTR [rsi+0x2],0x32
   140030047:	jne    0x140030060
   140030049:	mov    eax,DWORD PTR [rsp+0x40]
   14003004d:	add    rsi,0x4
   140030051:	btr    r14d,0xf
   140030056:	mov    DWORD PTR [rsp+0x44],r14d
   14003005b:	jmp    0x140030a60
   140030060:	cmp    ax,0x64
   140030064:	je     0x140030a56
   14003006a:	cmp    ax,0x69
   14003006e:	je     0x140030a50
   140030074:	cmp    ax,0x6f
   140030078:	je     0x140030a4a
   14003007e:	cmp    ax,0x75
   140030082:	je     0x140030a44
   140030088:	cmp    ax,0x78
   14003008c:	je     0x140030a3e
   140030092:	cmp    ax,0x58
   140030096:	je     0x140030a38
   14003009c:	mov    eax,r8d
   14003009f:	mov    DWORD PTR [rsp+0x40],eax
   1400300a3:	test   BYTE PTR [r13+0x18],0x40
   1400300a8:	mov    DWORD PTR [rsp+0x60],0x1
   1400300b0:	je     0x1400300c5
   1400300b2:	cmp    QWORD PTR [r13+0x10],0x0
   1400300b7:	jne    0x1400300c5
   1400300b9:	add    ebp,0x1
   1400300bc:	mov    DWORD PTR [rsp+0x48],ebp
   1400300c0:	jmp    0x140030a60
   1400300c5:	mov    rdx,r13
   1400300c8:	movzx  ecx,r12w
   1400300cc:	call   0x1400385e0
   1400300d1:	cmp    ax,0xffff
   1400300d5:	jne    0x140030100
   1400300d7:	mov    r9d,DWORD PTR [rsp+0x4c]
   1400300dc:	mov    eax,DWORD PTR [rsp+0x40]
   1400300e0:	mov    r10d,DWORD PTR [rsp+0x50]
   1400300e5:	mov    r11d,DWORD PTR [rsp+0x54]
   1400300ea:	or     ebp,0xffffffff
   1400300ed:	lea    rdx,[rip+0xfffffffffffcff0c]        # 0x140000000
   1400300f4:	mov    DWORD PTR [rsp+0x48],ebp
   1400300f8:	xor    r8d,r8d
   1400300fb:	jmp    0x140030a60
   140030100:	mov    r9d,DWORD PTR [rsp+0x4c]
   140030105:	mov    eax,DWORD PTR [rsp+0x40]
   140030109:	mov    r10d,DWORD PTR [rsp+0x50]
   14003010e:	mov    r11d,DWORD PTR [rsp+0x54]
   140030113:	add    ebp,0x1
   140030116:	lea    rdx,[rip+0xfffffffffffcfee3]        # 0x140000000
   14003011d:	mov    DWORD PTR [rsp+0x48],ebp
   140030121:	xor    r8d,r8d
   140030124:	jmp    0x140030a60
   140030129:	movzx  eax,r12w
   14003012d:	add    eax,0xffffffbf
   140030130:	cmp    eax,0x37
   140030133:	ja     0x14003068b
   140030139:	cdqe   
   14003013b:	movzx  eax,BYTE PTR [rdx+rax*1+0x30b64]
   140030143:	mov    ecx,DWORD PTR [rdx+rax*4+0x30b28]
   14003014a:	add    rcx,rdx
   14003014d:	jmp    rcx
   14003014f:	test   r14d,0x830
   140030156:	jne    0x140030161
   140030158:	or     r14d,0x20
   14003015c:	mov    DWORD PTR [rsp+0x44],r14d
   140030161:	movzx  eax,WORD PTR [rdi]
   140030164:	add    rdi,0x8
   140030168:	test   r14b,0x20
   14003016c:	mov    WORD PTR [rsp+0x68],ax
   140030171:	mov    DWORD PTR [rsp+0x60],0x1
   140030179:	mov    QWORD PTR [rsp+0x58],rdi
   14003017e:	je     0x1400301cb
   140030180:	mov    BYTE PTR [rsp+0x6c],al
   140030184:	mov    rax,QWORD PTR [rsp+0x78]
   140030189:	mov    BYTE PTR [rsp+0x6d],0x0
   14003018e:	movsxd r8,DWORD PTR [rax+0x10c]
   140030195:	lea    r9,[rsp+0x78]
   14003019a:	lea    rdx,[rsp+0x6c]
   14003019f:	lea    rcx,[rsp+0xc0]
   1400301a7:	call   0x140038a40
   1400301ac:	test   eax,eax
   1400301ae:	jns    0x1400301d3
   1400301b0:	mov    DWORD PTR [rsp+0x70],0x1
   1400301b8:	lea    rbx,[rsp+0xc0]
   1400301c0:	mov    r15d,0x1
   1400301c6:	jmp    0x14003068b
   1400301cb:	mov    WORD PTR [rsp+0xc0],ax
   1400301d3:	lea    rbx,[rsp+0xc0]
   1400301db:	mov    r15d,0x1
   1400301e1:	jmp    0x14003068b
   1400301e6:	mov    rax,QWORD PTR [rdi]
   1400301e9:	add    rdi,0x8
   1400301ed:	test   rax,rax
   1400301f0:	mov    QWORD PTR [rsp+0x58],rdi
   1400301f5:	je     0x14003022d
   1400301f7:	mov    rbx,QWORD PTR [rax+0x8]
   1400301fb:	test   rbx,rbx
   1400301fe:	je     0x14003022d
   140030200:	bt     r14d,0xb
   140030205:	jae    0x14003021f
   140030207:	movsx  eax,WORD PTR [rax]
   14003020a:	mov    DWORD PTR [rsp+0x60],0x1
   140030212:	cdq    
   140030213:	sub    eax,edx
   140030215:	sar    eax,1
   140030217:	mov    r15d,eax
   14003021a:	jmp    0x14003068b
   14003021f:	movsx  r15d,WORD PTR [rax]
   140030223:	mov    DWORD PTR [rsp+0x60],r8d
   140030228:	jmp    0x14003068b
   14003022d:	mov    rbx,QWORD PTR [rip+0x2c01c]        # 0x14005c250
   140030234:	or     rcx,0xffffffffffffffff
   140030238:	xor    eax,eax
   14003023a:	mov    rdi,rbx
   14003023d:	repnz scas al,BYTE PTR es:[rdi]
   14003023f:	not    rcx
   140030242:	lea    r15,[rcx-0x1]
   140030246:	jmp    0x14003068b
   14003024b:	test   r14d,0x830
   140030252:	jne    0x14003025d
   140030254:	or     r14d,0x20
   140030258:	mov    DWORD PTR [rsp+0x44],r14d
   14003025d:	mov    rbx,QWORD PTR [rdi]
   140030260:	cmp    r9d,0xffffffff
   140030264:	mov    esi,r9d
   140030267:	mov    eax,0x7fffffff
   14003026c:	cmove  esi,eax
   14003026f:	add    rdi,0x8
   140030273:	test   r14b,0x20
   140030277:	mov    QWORD PTR [rsp+0x58],rdi
   14003027c:	je     0x1400302d2
   14003027e:	test   rbx,rbx
   140030281:	mov    r15d,r8d
   140030284:	cmove  rbx,QWORD PTR [rip+0x2bfc4]        # 0x14005c250
   14003028c:	test   esi,esi
   14003028e:	mov    rdi,rbx
   140030291:	jle    0x14003068b
   140030297:	data16 xchg ax,ax
   14003029a:	data16 xchg ax,ax
   14003029d:	data16 xchg ax,ax
   1400302a0:	movzx  eax,BYTE PTR [rdi]
   1400302a3:	test   al,al
   1400302a5:	je     0x14003068b
   1400302ab:	lea    rdx,[rsp+0x78]
   1400302b0:	movzx  ecx,al
   1400302b3:	call   0x140038880
   1400302b8:	test   eax,eax
   1400302ba:	je     0x1400302c0
   1400302bc:	add    rdi,0x1
   1400302c0:	add    r15d,0x1
   1400302c4:	add    rdi,0x1
   1400302c8:	cmp    r15d,esi
   1400302cb:	jl     0x1400302a0
   1400302cd:	jmp    0x14003068b
   1400302d2:	test   rbx,rbx
   1400302d5:	mov    DWORD PTR [rsp+0x60],0x1
   1400302dd:	cmove  rbx,QWORD PTR [rip+0x2bf73]        # 0x14005c258
   1400302e5:	test   esi,esi
   1400302e7:	mov    rax,rbx
   1400302ea:	je     0x140030301
   1400302ec:	data16 data16 xchg ax,ax
   1400302f0:	sub    esi,0x1
   1400302f3:	cmp    WORD PTR [rax],0x0
   1400302f7:	je     0x140030301
   1400302f9:	add    rax,0x2
   1400302fd:	test   esi,esi
   1400302ff:	jne    0x1400302f0
   140030301:	sub    rax,rbx
   140030304:	sar    rax,1
   140030307:	mov    r15d,eax
   14003030a:	jmp    0x14003068b
   14003030f:	add    rdi,0x8
   140030313:	mov    QWORD PTR [rsp+0x58],rdi
   140030318:	mov    rdi,QWORD PTR [rdi-0x8]
   14003031c:	call   0x140038860
   140030321:	test   eax,eax
   140030323:	je     0x140030a77
   140030329:	test   r14b,0x20
   14003032d:	je     0x14003033f
   14003032f:	mov    WORD PTR [rdi],bp
   140030332:	mov    DWORD PTR [rsp+0x70],0x1
   14003033a:	jmp    0x140030993
   14003033f:	mov    DWORD PTR [rdi],ebp
   140030341:	mov    DWORD PTR [rsp+0x70],0x1
   140030349:	jmp    0x140030993
   14003034e:	mov    DWORD PTR [rsp+0x9c],0x1
   140030359:	add    r12w,0x20
   14003035e:	or     r14d,0x40
   140030362:	test   r9d,r9d
   140030365:	mov    eax,0x200
   14003036a:	mov    DWORD PTR [rsp+0x44],r14d
   14003036f:	mov    esi,eax
   140030371:	lea    rbx,[rsp+0xc0]
   140030379:	jns    0x140030388
   14003037b:	mov    r15d,0x6
   140030381:	mov    DWORD PTR [rsp+0x4c],r15d
   140030386:	jmp    0x140030403
   140030388:	test   r9d,r9d
   14003038b:	jne    0x1400303a1
   14003038d:	cmp    r12w,0x67
   140030392:	jne    0x1400303f7
   140030394:	mov    r15d,0x1
   14003039a:	mov    DWORD PTR [rsp+0x4c],r15d
   14003039f:	jmp    0x140030403
   1400303a1:	cmp    r9d,eax
   1400303a4:	jle    0x1400303af
   1400303a6:	mov    r9d,eax
   1400303a9:	mov    DWORD PTR [rsp+0x4c],eax
   1400303ad:	jmp    0x1400303b8
   1400303af:	cmp    r9d,0xa3
   1400303b6:	jle    0x1400303fe
   1400303b8:	lea    edi,[r9+0x15d]
   1400303bf:	movsxd rcx,edi
   1400303c2:	call   0x1400320c0
   1400303c7:	test   rax,rax
   1400303ca:	mov    QWORD PTR [rsp+0xa0],rax
   1400303d2:	je     0x1400303e5
   1400303d4:	mov    r15d,DWORD PTR [rsp+0x4c]
   1400303d9:	mov    esi,edi
   1400303db:	mov    rdi,QWORD PTR [rsp+0x58]
   1400303e0:	mov    rbx,rax
   1400303e3:	jmp    0x140030403
   1400303e5:	mov    rdi,QWORD PTR [rsp+0x58]
   1400303ea:	mov    r15d,0xa3
   1400303f0:	mov    DWORD PTR [rsp+0x4c],r15d
   1400303f5:	jmp    0x140030403
   1400303f7:	mov    r15d,DWORD PTR [rsp+0x4c]
   1400303fc:	jmp    0x140030403
   1400303fe:	mov    r15d,DWORD PTR [rsp+0x4c]
   140030403:	mov    rax,QWORD PTR [rdi]
   140030406:	mov    rcx,QWORD PTR [rip+0x2b933]        # 0x14005bd40
   14003040d:	add    rdi,0x8
   140030411:	mov    QWORD PTR [rsp+0x58],rdi
   140030416:	movsxd rsi,esi
   140030419:	mov    QWORD PTR [rsp+0xb0],rax
   140030421:	movsx  edi,r12b
   140030425:	call   0x14002df20
   14003042a:	lea    rcx,[rsp+0x78]
   14003042f:	mov    QWORD PTR [rsp+0x30],rcx
   140030434:	mov    ecx,DWORD PTR [rsp+0x9c]
   14003043b:	mov    r9d,edi
   14003043e:	mov    DWORD PTR [rsp+0x28],ecx
   140030442:	lea    rcx,[rsp+0xb0]
   14003044a:	mov    r8,rsi
   14003044d:	mov    rdx,rbx
   140030450:	mov    DWORD PTR [rsp+0x20],r15d
   140030455:	call   rax
   140030457:	mov    edi,r14d
   14003045a:	and    edi,0x80
   140030460:	je     0x14003047d
   140030462:	test   r15d,r15d
   140030465:	jne    0x14003047d
   140030467:	mov    rcx,QWORD PTR [rip+0x2b8ea]        # 0x14005bd58
   14003046e:	call   0x14002df20
   140030473:	lea    rdx,[rsp+0x78]
   140030478:	mov    rcx,rbx
   14003047b:	call   rax
   14003047d:	cmp    r12w,0x67
   140030482:	jne    0x14003049e
   140030484:	test   edi,edi
   140030486:	jne    0x14003049e
   140030488:	mov    rcx,QWORD PTR [rip+0x2b8c1]        # 0x14005bd50
   14003048f:	call   0x14002df20
   140030494:	lea    rdx,[rsp+0x78]
   140030499:	mov    rcx,rbx
   14003049c:	call   rax
   14003049e:	cmp    BYTE PTR [rbx],0x2d
   1400304a1:	jne    0x1400304b1
   1400304a3:	bts    r14d,0x8
   1400304a8:	add    rbx,0x1
   1400304ac:	mov    DWORD PTR [rsp+0x44],r14d
   1400304b1:	or     rcx,0xffffffffffffffff
   1400304b5:	xor    eax,eax
   1400304b7:	mov    rdi,rbx
   1400304ba:	repnz scas al,BYTE PTR es:[rdi]
   1400304bc:	not    rcx
   1400304bf:	lea    r15d,[rcx-0x1]
   1400304c3:	jmp    0x14003068b
   1400304c8:	or     r14d,0x40
   1400304cc:	mov    r8d,0xa
   1400304d2:	mov    DWORD PTR [rsp+0x44],r14d
   1400304d7:	jmp    0x140030541
   1400304d9:	mov    r8d,0xa
   1400304df:	jmp    0x140030541
   1400304e1:	bts    r14d,0xf
   1400304e6:	mov    r9d,0x10
   1400304ec:	mov    DWORD PTR [rsp+0x44],r14d
   1400304f1:	mov    eax,0x7
   1400304f6:	mov    DWORD PTR [rsp+0x98],eax
   1400304fd:	jmp    0x14003050b
   1400304ff:	mov    eax,0x27
   140030504:	mov    DWORD PTR [rsp+0x98],eax
   14003050b:	test   r14b,r14b
   14003050e:	mov    r8d,0x10
   140030514:	jns    0x140030541
   140030516:	add    ax,0x51
   14003051a:	mov    WORD PTR [rsp+0x64],0x30
   140030521:	lea    r10d,[r8-0xe]
   140030525:	mov    WORD PTR [rsp+0x66],ax
   14003052a:	jmp    0x140030541
   14003052c:	test   r14b,r14b
   14003052f:	mov    r8d,0x8
   140030535:	jns    0x140030541
   140030537:	bts    r14d,0x9
   14003053c:	mov    DWORD PTR [rsp+0x44],r14d
   140030541:	bt     r14d,0xf
   140030546:	jae    0x140030557
   140030548:	add    rdi,0x8
   14003054c:	mov    QWORD PTR [rsp+0x58],rdi
   140030551:	mov    rdi,QWORD PTR [rdi-0x8]
   140030555:	jmp    0x1400305b9
   140030557:	bt     r14d,0xc
   14003055c:	jae    0x14003056d
   14003055e:	add    rdi,0x8
   140030562:	mov    QWORD PTR [rsp+0x58],rdi
   140030567:	mov    rdi,QWORD PTR [rdi-0x8]
   14003056b:	jmp    0x1400305b9
   14003056d:	test   r14b,0x20
   140030571:	je     0x140030598
   140030573:	test   r14b,0x40
   140030577:	je     0x140030589
   140030579:	add    rdi,0x8
   14003057d:	mov    QWORD PTR [rsp+0x58],rdi
   140030582:	movsx  rdi,WORD PTR [rdi-0x8]
   140030587:	jmp    0x1400305b9
   140030589:	add    rdi,0x8
   14003058d:	mov    QWORD PTR [rsp+0x58],rdi
   140030592:	movzx  edi,WORD PTR [rdi-0x8]
   140030596:	jmp    0x1400305b9
   140030598:	test   r14b,0x40
   14003059c:	je     0x1400305ad
   14003059e:	add    rdi,0x8
   1400305a2:	mov    QWORD PTR [rsp+0x58],rdi
   1400305a7:	movsxd rdi,DWORD PTR [rdi-0x8]
   1400305ab:	jmp    0x1400305b9
   1400305ad:	add    rdi,0x8
   1400305b1:	mov    QWORD PTR [rsp+0x58],rdi
   1400305b6:	mov    edi,DWORD PTR [rdi-0x8]
   1400305b9:	test   r14b,0x40
   1400305bd:	je     0x1400305d1
   1400305bf:	test   rdi,rdi
   1400305c2:	jns    0x1400305d1
   1400305c4:	neg    rdi
   1400305c7:	bts    r14d,0x8
   1400305cc:	mov    DWORD PTR [rsp+0x44],r14d
   1400305d1:	bt     r14d,0xf
   1400305d6:	jb     0x1400305e1
   1400305d8:	bt     r14d,0xc
   1400305dd:	jb     0x1400305e1
   1400305df:	mov    edi,edi
   1400305e1:	test   r9d,r9d
   1400305e4:	jns    0x1400305ee
   1400305e6:	mov    r9d,0x1
   1400305ec:	jmp    0x140030603
   1400305ee:	mov    eax,0x200
   1400305f3:	and    r14d,0xfffffff7
   1400305f7:	cmp    r9d,eax
   1400305fa:	mov    DWORD PTR [rsp+0x44],r14d
   1400305ff:	cmovg  r9d,eax
   140030603:	mov    r14d,DWORD PTR [rsp+0x98]
   14003060b:	test   rdi,rdi
   14003060e:	mov    eax,0x0
   140030613:	cmove  r10d,eax
   140030617:	lea    rbx,[rsp+0x2bf]
   14003061f:	mov    DWORD PTR [rsp+0x50],r10d
   140030624:	mov    ecx,r9d
   140030627:	sub    r9d,0x1
   14003062b:	test   ecx,ecx
   14003062d:	jg     0x140030634
   14003062f:	test   rdi,rdi
   140030632:	je     0x140030655
   140030634:	xor    edx,edx
   140030636:	mov    rax,rdi
   140030639:	movsxd rcx,r8d
   14003063c:	div    rcx
   14003063f:	mov    rdi,rax
   140030642:	lea    eax,[rdx+0x30]
   140030645:	cmp    eax,0x39
   140030648:	jle    0x14003064d
   14003064a:	add    eax,r14d
   14003064d:	mov    BYTE PTR [rbx],al
   14003064f:	sub    rbx,0x1
   140030653:	jmp    0x140030624
   140030655:	mov    r14d,DWORD PTR [rsp+0x44]
   14003065a:	lea    rax,[rsp+0x2bf]
   140030662:	mov    DWORD PTR [rsp+0x4c],r9d
   140030667:	sub    eax,ebx
   140030669:	add    rbx,0x1
   14003066d:	bt     r14d,0x9
   140030672:	mov    r15d,eax
   140030675:	jae    0x14003068b
   140030677:	test   eax,eax
   140030679:	je     0x140030680
   14003067b:	cmp    BYTE PTR [rbx],0x30
   14003067e:	je     0x14003068b
   140030680:	sub    rbx,0x1
   140030684:	add    r15d,0x1
   140030688:	mov    BYTE PTR [rbx],0x30
   14003068b:	cmp    DWORD PTR [rsp+0x70],0x0
   140030690:	jne    0x140030993
   140030696:	test   r14b,0x40
   14003069a:	je     0x1400306e5
   14003069c:	bt     r14d,0x8
   1400306a1:	jae    0x1400306b5
   1400306a3:	mov    eax,0x1
   1400306a8:	mov    WORD PTR [rsp+0x64],0x2d
   1400306af:	mov    DWORD PTR [rsp+0x50],eax
   1400306b3:	jmp    0x1400306ef
   1400306b5:	test   r14b,0x1
   1400306b9:	je     0x1400306cd
   1400306bb:	mov    eax,0x1
   1400306c0:	mov    WORD PTR [rsp+0x64],0x2b
   1400306c7:	mov    DWORD PTR [rsp+0x50],eax
   1400306cb:	jmp    0x1400306ef
   1400306cd:	test   r14b,0x2
   1400306d1:	je     0x1400306eb
   1400306d3:	mov    eax,0x1
   1400306d8:	mov    WORD PTR [rsp+0x64],0x20
   1400306df:	mov    DWORD PTR [rsp+0x50],eax
   1400306e3:	jmp    0x1400306ef
   1400306e5:	mov    eax,DWORD PTR [rsp+0x50]
   1400306e9:	jmp    0x1400306ef
   1400306eb:	mov    eax,DWORD PTR [rsp+0x50]
   1400306ef:	mov    r14d,DWORD PTR [rsp+0x54]
   1400306f4:	mov    r12d,DWORD PTR [rsp+0x44]
   1400306f9:	sub    r14d,r15d
   1400306fc:	sub    r14d,eax
   1400306ff:	test   r12b,0xc
   140030703:	jne    0x14003075d
   140030705:	test   r14d,r14d
   140030708:	mov    edi,r14d
   14003070b:	jle    0x14003075d
   14003070d:	data16 xchg ax,ax
   140030710:	sub    edi,0x1
   140030713:	test   BYTE PTR [r13+0x18],0x40
   140030718:	je     0x14003072a
   14003071a:	cmp    QWORD PTR [r13+0x10],0x0
   14003071f:	jne    0x14003072a
   140030721:	add    ebp,0x1
   140030724:	mov    DWORD PTR [rsp+0x48],ebp
   140030728:	jmp    0x140030743
   14003072a:	mov    rdx,r13
   14003072d:	mov    cx,0x20
   140030731:	call   0x1400385e0
   140030736:	cmp    ax,0xffff
   14003073a:	je     0x140030752
   14003073c:	add    ebp,0x1
   14003073f:	mov    DWORD PTR [rsp+0x48],ebp
   140030743:	cmp    ebp,0xffffffff
   140030746:	je     0x14003074c
   140030748:	test   edi,edi
   14003074a:	jg     0x140030710
   14003074c:	mov    eax,DWORD PTR [rsp+0x50]
   140030750:	jmp    0x14003075d
   140030752:	mov    eax,DWORD PTR [rsp+0x50]
   140030756:	or     ebp,0xffffffff
   140030759:	mov    DWORD PTR [rsp+0x48],ebp
   14003075d:	test   BYTE PTR [r13+0x18],0x40
   140030762:	mov    esi,eax
   140030764:	lea    rdi,[rsp+0x64]
   140030769:	je     0x14003077d
   14003076b:	cmp    QWORD PTR [r13+0x10],0x0
   140030770:	jne    0x14003077d
   140030772:	add    ebp,eax
   140030774:	mov    DWORD PTR [rsp+0x48],ebp
   140030778:	jmp    0x14003081f
   14003077d:	test   eax,eax
   14003077f:	jle    0x14003081f
   140030785:	xor    r12d,r12d
   140030788:	data16 data16 xchg ax,ax
   14003078c:	data16 data16 xchg ax,ax
   140030790:	sub    esi,0x1
   140030793:	test   BYTE PTR [r13+0x18],0x40
   140030798:	je     0x1400307a9
   14003079a:	cmp    QWORD PTR [r13+0x10],r12
   14003079e:	jne    0x1400307a9
   1400307a0:	add    ebp,0x1
   1400307a3:	mov    DWORD PTR [rsp+0x48],ebp
   1400307a7:	jmp    0x1400307ca
   1400307a9:	movzx  ecx,WORD PTR [rdi]
   1400307ac:	mov    rdx,r13
   1400307af:	call   0x1400385e0
   1400307b4:	cmp    ax,0xffff
   1400307b8:	jne    0x1400307c3
   1400307ba:	or     ebp,0xffffffff
   1400307bd:	mov    DWORD PTR [rsp+0x48],ebp
   1400307c1:	jmp    0x1400307ca
   1400307c3:	add    ebp,0x1
   1400307c6:	mov    DWORD PTR [rsp+0x48],ebp
   1400307ca:	add    rdi,0x2
   1400307ce:	cmp    ebp,0xffffffff
   1400307d1:	jne    0x140030812
   1400307d3:	call   0x14002bca0
   1400307d8:	cmp    DWORD PTR [rax],0x2a
   1400307db:	jne    0x14003081a
   1400307dd:	test   BYTE PTR [r13+0x18],0x40
   1400307e2:	je     0x1400307f4
   1400307e4:	cmp    QWORD PTR [r13+0x10],r12
   1400307e8:	jne    0x1400307f4
   1400307ea:	mov    ebp,r12d
   1400307ed:	mov    DWORD PTR [rsp+0x48],r12d
   1400307f2:	jmp    0x140030812
   1400307f4:	mov    rdx,r13
   1400307f7:	mov    cx,0x3f
   1400307fb:	call   0x1400385e0
   140030800:	mov    ebp,r12d
   140030803:	cmp    ax,0xffff
   140030807:	setne  bpl
   14003080b:	sub    ebp,0x1
   14003080e:	mov    DWORD PTR [rsp+0x48],ebp
   140030812:	test   esi,esi
   140030814:	jg     0x140030790
   14003081a:	mov    r12d,DWORD PTR [rsp+0x44]
   14003081f:	test   r12b,0x8
   140030823:	je     0x140030878
   140030825:	test   r12b,0x4
   140030829:	jne    0x140030878
   14003082b:	test   r14d,r14d
   14003082e:	mov    edi,r14d
   140030831:	jle    0x140030878
   140030833:	sub    edi,0x1
   140030836:	test   BYTE PTR [r13+0x18],0x40
   14003083b:	je     0x14003084d
   14003083d:	cmp    QWORD PTR [r13+0x10],0x0
   140030842:	jne    0x14003084d
   140030844:	add    ebp,0x1
   140030847:	mov    DWORD PTR [rsp+0x48],ebp
   14003084b:	jmp    0x140030866
   14003084d:	mov    rdx,r13
   140030850:	mov    cx,0x30
   140030854:	call   0x1400385e0
   140030859:	cmp    ax,0xffff
   14003085d:	je     0x140030871
   14003085f:	add    ebp,0x1
   140030862:	mov    DWORD PTR [rsp+0x48],ebp
   140030866:	cmp    ebp,0xffffffff
   140030869:	je     0x140030878
   14003086b:	test   edi,edi
   14003086d:	jg     0x140030833
   14003086f:	jmp    0x140030878
   140030871:	or     ebp,0xffffffff
   140030874:	mov    DWORD PTR [rsp+0x48],ebp
   140030878:	cmp    DWORD PTR [rsp+0x60],0x0
   14003087d:	jne    0x14003091e
   140030883:	test   r15d,r15d
   140030886:	jle    0x14003091e
   14003088c:	mov    rdi,rbx
   14003088f:	mov    esi,r15d
   140030892:	xchg   ax,ax
   140030894:	data16 data16 xchg ax,ax
   140030898:	data16 data16 xchg ax,ax
   14003089c:	data16 data16 xchg ax,ax
   1400308a0:	mov    rax,QWORD PTR [rsp+0x78]
   1400308a5:	lea    r9,[rsp+0x78]
   1400308aa:	lea    rcx,[rsp+0x68]
   1400308af:	movsxd r8,DWORD PTR [rax+0x10c]
   1400308b6:	mov    rdx,rdi
   1400308b9:	sub    esi,0x1
   1400308bc:	call   0x140038a40
   1400308c1:	test   eax,eax
   1400308c3:	movsxd r12,eax
   1400308c6:	jle    0x140030910
   1400308c8:	test   BYTE PTR [r13+0x18],0x40
   1400308cd:	je     0x1400308df
   1400308cf:	cmp    QWORD PTR [r13+0x10],0x0
   1400308d4:	jne    0x1400308df
   1400308d6:	add    ebp,0x1
   1400308d9:	mov    DWORD PTR [rsp+0x48],ebp
   1400308dd:	jmp    0x140030902
   1400308df:	movzx  ecx,WORD PTR [rsp+0x68]
   1400308e4:	mov    rdx,r13
   1400308e7:	call   0x1400385e0
   1400308ec:	cmp    ax,0xffff
   1400308f0:	jne    0x1400308fb
   1400308f2:	or     ebp,0xffffffff
   1400308f5:	mov    DWORD PTR [rsp+0x48],ebp
   1400308f9:	jmp    0x140030902
   1400308fb:	add    ebp,0x1
   1400308fe:	mov    DWORD PTR [rsp+0x48],ebp
   140030902:	add    rdi,r12
   140030905:	test   esi,esi
   140030907:	jg     0x1400308a0
   140030909:	mov    r12d,DWORD PTR [rsp+0x44]
   14003090e:	jmp    0x140030935
   140030910:	mov    r14d,DWORD PTR [rsp+0x44]
   140030915:	or     ebp,0xffffffff
   140030918:	mov    DWORD PTR [rsp+0x48],ebp
   14003091c:	jmp    0x140030993
   14003091e:	lea    r9,[rsp+0x48]
   140030923:	mov    r8,r13
   140030926:	mov    edx,r15d
   140030929:	mov    rcx,rbx
   14003092c:	call   0x14002ebe0
   140030931:	mov    ebp,DWORD PTR [rsp+0x48]
   140030935:	test   ebp,ebp
   140030937:	js     0x1400309f8
   14003093d:	test   r12b,0x4
   140030941:	je     0x1400309ff
   140030947:	test   r14d,r14d
   14003094a:	jle    0x1400309f1
   140030950:	sub    r14d,0x1
   140030954:	test   BYTE PTR [r13+0x18],0x40
   140030959:	je     0x14003096b
   14003095b:	cmp    QWORD PTR [r13+0x10],0x0
   140030960:	jne    0x14003096b
   140030962:	add    ebp,0x1
   140030965:	mov    DWORD PTR [rsp+0x48],ebp
   140030969:	jmp    0x140030984
   14003096b:	mov    rdx,r13
   14003096e:	mov    cx,0x20
   140030972:	call   0x1400385e0
   140030977:	cmp    ax,0xffff
   14003097b:	je     0x1400309dc
   14003097d:	add    ebp,0x1
   140030980:	mov    DWORD PTR [rsp+0x48],ebp
   140030984:	cmp    ebp,0xffffffff
   140030987:	je     0x1400309ea
   140030989:	test   r14d,r14d
   14003098c:	jg     0x140030950
   14003098e:	mov    r14d,DWORD PTR [rsp+0x44]
   140030993:	mov    rcx,QWORD PTR [rsp+0xa0]
   14003099b:	test   rcx,rcx
   14003099e:	je     0x140030a06
   1400309a0:	call   0x14002a380
   1400309a5:	mov    r9d,DWORD PTR [rsp+0x4c]
   1400309aa:	mov    rdi,QWORD PTR [rsp+0x58]
   1400309af:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400309b7:	mov    eax,DWORD PTR [rsp+0x40]
   1400309bb:	mov    r10d,DWORD PTR [rsp+0x50]
   1400309c0:	mov    r11d,DWORD PTR [rsp+0x54]
   1400309c5:	xor    r8d,r8d
   1400309c8:	lea    rdx,[rip+0xfffffffffffcf631]        # 0x140000000
   1400309cf:	mov    QWORD PTR [rsp+0xa0],r8
   1400309d7:	jmp    0x140030a60
   1400309dc:	mov    r14d,DWORD PTR [rsp+0x44]
   1400309e1:	or     ebp,0xffffffff
   1400309e4:	mov    DWORD PTR [rsp+0x48],ebp
   1400309e8:	jmp    0x140030993
   1400309ea:	mov    r14d,DWORD PTR [rsp+0x44]
   1400309ef:	jmp    0x140030993
   1400309f1:	mov    r14d,DWORD PTR [rsp+0x44]
   1400309f6:	jmp    0x140030993
   1400309f8:	mov    r14d,DWORD PTR [rsp+0x44]
   1400309fd:	jmp    0x140030993
   1400309ff:	mov    r14d,DWORD PTR [rsp+0x44]
   140030a04:	jmp    0x140030993
   140030a06:	mov    r9d,DWORD PTR [rsp+0x4c]
   140030a0b:	mov    rdi,QWORD PTR [rsp+0x58]
   140030a10:	mov    rsi,QWORD PTR [rsp+0xa8]
   140030a18:	mov    eax,DWORD PTR [rsp+0x40]
   140030a1c:	mov    r10d,DWORD PTR [rsp+0x50]
   140030a21:	mov    r11d,DWORD PTR [rsp+0x54]
   140030a26:	xor    r8d,r8d
   140030a29:	lea    rdx,[rip+0xfffffffffffcf5d0]        # 0x140000000
   140030a30:	jmp    0x140030a60
   140030a32:	mov    eax,DWORD PTR [rsp+0x40]
   140030a36:	jmp    0x140030a60
   140030a38:	mov    eax,DWORD PTR [rsp+0x40]
   140030a3c:	jmp    0x140030a60
   140030a3e:	mov    eax,DWORD PTR [rsp+0x40]
   140030a42:	jmp    0x140030a60
   140030a44:	mov    eax,DWORD PTR [rsp+0x40]
   140030a48:	jmp    0x140030a60
   140030a4a:	mov    eax,DWORD PTR [rsp+0x40]
   140030a4e:	jmp    0x140030a60
   140030a50:	mov    eax,DWORD PTR [rsp+0x40]
   140030a54:	jmp    0x140030a60
   140030a56:	mov    eax,DWORD PTR [rsp+0x40]
   140030a5a:	jmp    0x140030a60
   140030a5c:	mov    eax,DWORD PTR [rsp+0x40]
   140030a60:	mov    r12w,WORD PTR [rsi]
   140030a64:	test   r12w,r12w
   140030a68:	jne    0x14002fdd0
   140030a6e:	test   eax,eax
   140030a70:	je     0x140030ab6
   140030a72:	cmp    eax,0x7
   140030a75:	je     0x140030ab6
   140030a77:	call   0x14002bca0
   140030a7c:	xor    r9d,r9d
   140030a7f:	xor    r8d,r8d
   140030a82:	mov    DWORD PTR [rax],0x16
   140030a88:	xor    eax,eax
   140030a8a:	xor    edx,edx
   140030a8c:	xor    ecx,ecx
   140030a8e:	mov    QWORD PTR [rsp+0x20],rax
   140030a93:	call   0x14002e900
   140030a98:	cmp    BYTE PTR [rsp+0x90],0x0
   140030aa0:	je     0x140030ab1
   140030aa2:	mov    rax,QWORD PTR [rsp+0x88]
   140030aaa:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140030ab1:	or     eax,0xffffffff
   140030ab4:	jmp    0x140030ad1
   140030ab6:	mov    rdx,QWORD PTR [rsp+0x88]
   140030abe:	cmp    BYTE PTR [rsp+0x90],0x0
   140030ac6:	je     0x140030acf
   140030ac8:	and    DWORD PTR [rdx+0xc8],0xfffffffd
   140030acf:	mov    eax,ebp
   140030ad1:	mov    r12,QWORD PTR [rsp+0x4e0]
   140030ad9:	mov    rbp,QWORD PTR [rsp+0x4e8]
   140030ae1:	mov    r15,QWORD PTR [rsp+0x4d8]
   140030ae9:	mov    rcx,QWORD PTR [rsp+0x4c0]
   140030af1:	xor    rcx,rsp
   140030af4:	call   0x140029b40
   140030af9:	add    rsp,0x4f0
   140030b00:	pop    r14
   140030b02:	pop    r13
   140030b04:	pop    rdi
   140030b05:	pop    rsi
   140030b06:	pop    rbx
   140030b07:	ret    
   140030b08:	movabs ds:0x760002fe3e000300,eax
   140030b11:	inc    BYTE PTR [rdx]
   140030b13:	add    dl,dh
   140030b15:	inc    BYTE PTR [rdx]
   140030b17:	add    BYTE PTR [rdi+rdi*8+0x2],al
   140030b1b:	add    BYTE PTR [rcx-0x1],dl
   140030b1e:	add    al,BYTE PTR [rax]
   140030b20:	fwait
   140030b21:	inc    DWORD PTR [rdx]
   140030b23:	add    BYTE PTR [rcx],ch
   140030b25:	add    DWORD PTR [rbx],eax
   140030b27:	add    BYTE PTR [rsi+0x3],cl
   140030b2a:	add    eax,DWORD PTR [rax]
   140030b2c:	rex.WRXB add QWORD PTR [r11],r8
   140030b2f:	add    BYTE PTR [rbx+0x2],cl
   140030b32:	add    eax,DWORD PTR [rax]
   140030b34:	icebp  
   140030b35:	add    al,0x3
   140030b37:	add    dh,ah
   140030b39:	add    DWORD PTR [rbx],eax
   140030b3b:	add    BYTE PTR [rsi+0x3],bl
   140030b3e:	add    eax,DWORD PTR [rax]
   140030b40:	(bad)  
   140030b41:	add    DWORD PTR [rbx],eax
   140030b43:	add    al,cl
   140030b45:	add    al,0x3
   140030b47:	add    BYTE PTR [rdi],cl
   140030b49:	add    eax,DWORD PTR [rbx]
   140030b4b:	add    BYTE PTR [rax*1+0x4e10003],ch
   140030b52:	add    eax,DWORD PTR [rax]
   140030b54:	pop    rbp
   140030b55:	add    al,BYTE PTR [rbx]
   140030b57:	add    cl,bl
   140030b59:	add    al,0x3
   140030b5b:	add    bh,bh
   140030b5d:	add    al,0x3
   140030b5f:	add    BYTE PTR [rbx+0x306],cl
   140030b65:	(bad)  
   140030b66:	add    DWORD PTR [rsi],ecx
   140030b68:	add    BYTE PTR [rsi],cl
   140030b6a:	add    BYTE PTR [rsi],cl
   140030b6c:	(bad)  
   140030b6d:	(bad)  
   140030b6e:	(bad)  
   140030b6f:	(bad)  
   140030b70:	(bad)  
   140030b71:	(bad)  
   140030b72:	(bad)  
   140030b73:	(bad)  
   140030b74:	(bad)  
   140030b75:	(bad)  
   140030b76:	add    cl,BYTE PTR [rsi]
   140030b78:	(bad)  
   140030b79:	(bad)  
   140030b7a:	(bad)  
   140030b7b:	add    ecx,DWORD PTR [rsi]
   140030b7d:	add    al,0xe
   140030b7f:	(bad)  
   140030b80:	(bad)  
   140030b81:	(bad)  
   140030b82:	(bad)  
   140030b83:	(bad)  
   140030b84:	add    eax,0x507060e
   140030b89:	add    eax,0xe070e05
   140030b8e:	(bad)  
   140030b8f:	(bad)  
   140030b90:	(bad)  
   140030b91:	or     BYTE PTR [rcx],cl
   140030b93:	or     cl,BYTE PTR [rsi]
   140030b95:	(bad)  
   140030b96:	or     ecx,DWORD PTR [rsi]
   140030b98:	or     al,0xe
   140030b9a:	(bad)  
   140030b9b:	or     eax,0xcccccccc
   140030ba0:	mov    QWORD PTR [rip+0x30c81],rcx        # 0x140061828
   140030ba7:	ret    
   140030ba8:	int3   
   140030ba9:	int3   
   140030baa:	int3   
   140030bab:	int3   
   140030bac:	int3   
   140030bad:	int3   
   140030bae:	int3   
   140030baf:	int3   
   140030bb0:	rex push rbx
   140030bb2:	sub    rsp,0x20
   140030bb6:	mov    rbx,rcx
   140030bb9:	mov    rcx,QWORD PTR [rip+0x30c68]        # 0x140061828
   140030bc0:	call   0x14002df20
   140030bc5:	test   rax,rax
   140030bc8:	je     0x140030bde
   140030bca:	mov    rcx,rbx
   140030bcd:	call   rax
   140030bcf:	test   eax,eax
   140030bd1:	je     0x140030bde
   140030bd3:	mov    eax,0x1
   140030bd8:	add    rsp,0x20
   140030bdc:	pop    rbx
   140030bdd:	ret    
   140030bde:	xor    eax,eax
   140030be0:	add    rsp,0x20
   140030be4:	pop    rbx
   140030be5:	ret    
   140030be6:	int3   
   140030be7:	int3   
   140030be8:	int3   
   140030be9:	int3   
   140030bea:	int3   
   140030beb:	int3   
   140030bec:	int3   
   140030bed:	int3   
   140030bee:	int3   
   140030bef:	int3   
   140030bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140030bf5:	mov    QWORD PTR [rsp+0x10],rsi
   140030bfa:	push   rdi
   140030bfb:	sub    rsp,0x20
   140030bff:	lea    rbx,[rcx+0x1c]
   140030c03:	mov    rsi,rcx
   140030c06:	mov    edi,0x101
   140030c0b:	mov    rcx,rbx
   140030c0e:	mov    r8,rdi
   140030c11:	xor    edx,edx
   140030c13:	call   0x14002ac20
   140030c18:	xor    r11d,r11d
   140030c1b:	lea    r8,[rip+0x2a77e]        # 0x14005b3a0
   140030c22:	mov    DWORD PTR [rsi+0x4],r11d
   140030c26:	mov    DWORD PTR [rsi+0x8],r11d
   140030c2a:	mov    DWORD PTR [rsi+0xc],r11d
   140030c2e:	mov    QWORD PTR [rsi+0x10],r11
   140030c32:	sub    r8,rsi
   140030c35:	mov    DWORD PTR [rsi+0x18],r11d
   140030c39:	data16 xchg ax,ax
   140030c3c:	data16 data16 xchg ax,ax
   140030c40:	movzx  eax,BYTE PTR [r8+rbx*1]
   140030c45:	add    rbx,0x1
   140030c49:	sub    rdi,0x1
   140030c4d:	mov    BYTE PTR [rbx-0x1],al
   140030c50:	jne    0x140030c40
   140030c52:	lea    r9,[rip+0x2a748]        # 0x14005b3a1
   140030c59:	lea    rcx,[rsi+0x11d]
   140030c60:	mov    edx,0x80
   140030c65:	sub    r9,rsi
   140030c68:	data16 data16 xchg ax,ax
   140030c6c:	data16 data16 xchg ax,ax
   140030c70:	movzx  eax,BYTE PTR [rcx+r8*1]
   140030c75:	add    rcx,0x2
   140030c79:	sub    rdx,0x1
   140030c7d:	mov    BYTE PTR [rcx-0x2],al
   140030c80:	movzx  eax,BYTE PTR [r9+rcx*1-0x2]
   140030c86:	mov    BYTE PTR [rcx-0x1],al
   140030c89:	jne    0x140030c70
   140030c8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140030c90:	mov    rsi,QWORD PTR [rsp+0x38]
   140030c95:	add    rsp,0x20
   140030c99:	pop    rdi
   140030c9a:	ret    
   140030c9b:	int3   
   140030c9c:	int3   
   140030c9d:	int3   
   140030c9e:	int3   
   140030c9f:	int3   
   140030ca0:	mov    QWORD PTR [rsp+0x18],rbx
   140030ca5:	mov    QWORD PTR [rsp+0x20],rbp
   140030caa:	push   rdi
   140030cab:	sub    rsp,0x580
   140030cb2:	mov    rax,QWORD PTR [rip+0x2a2c7]        # 0x14005af80
   140030cb9:	xor    rax,rsp
   140030cbc:	mov    QWORD PTR [rsp+0x570],rax
   140030cc4:	mov    rbp,rcx
   140030cc7:	mov    ecx,DWORD PTR [rcx+0x4]
   140030cca:	lea    rdx,[rsp+0x50]
   140030ccf:	call   QWORD PTR [rip+0x125fb]        # 0x1400432d0
   140030cd5:	test   eax,eax
   140030cd7:	je     0x140030e3d
   140030cdd:	xor    ebx,ebx
   140030cdf:	mov    QWORD PTR [rsp+0x598],rsi
   140030ce7:	lea    rdx,[rsp+0x70]
   140030cec:	mov    eax,ebx
   140030cee:	mov    edi,0x100
   140030cf3:	mov    BYTE PTR [rdx],al
   140030cf5:	add    eax,0x1
   140030cf8:	add    rdx,0x1
   140030cfc:	cmp    eax,edi
   140030cfe:	jb     0x140030cf3
   140030d00:	movzx  eax,BYTE PTR [rsp+0x56]
   140030d05:	mov    BYTE PTR [rsp+0x70],0x20
   140030d0a:	lea    rsi,[rsp+0x56]
   140030d0f:	test   al,al
   140030d11:	je     0x140030d41
   140030d13:	movzx  edx,BYTE PTR [rsi+0x1]
   140030d17:	movzx  r8d,al
   140030d1b:	cmp    r8d,edx
   140030d1e:	ja     0x140030d36
   140030d20:	sub    edx,r8d
   140030d23:	mov    rax,r8
   140030d26:	lea    rcx,[rsp+r8*1+0x70]
   140030d2b:	lea    r8d,[rdx+0x1]
   140030d2f:	mov    dl,0x20
   140030d31:	call   0x14002ac20
   140030d36:	mov    al,BYTE PTR [rsi+0x2]
   140030d39:	add    rsi,0x2
   140030d3d:	test   al,al
   140030d3f:	jne    0x140030d13
   140030d41:	mov    eax,DWORD PTR [rbp+0xc]
   140030d44:	mov    DWORD PTR [rsp+0x38],ebx
   140030d48:	lea    r8,[rsp+0x70]
   140030d4d:	mov    DWORD PTR [rsp+0x30],eax
   140030d51:	mov    eax,DWORD PTR [rbp+0x4]
   140030d54:	mov    r9d,edi
   140030d57:	mov    DWORD PTR [rsp+0x28],eax
   140030d5b:	lea    rax,[rsp+0x370]
   140030d63:	mov    edx,0x1
   140030d68:	xor    ecx,ecx
   140030d6a:	mov    QWORD PTR [rsp+0x20],rax
   140030d6f:	call   0x1400395b0
   140030d74:	mov    eax,DWORD PTR [rbp+0x4]
   140030d77:	mov    edx,DWORD PTR [rbp+0xc]
   140030d7a:	mov    DWORD PTR [rsp+0x40],ebx
   140030d7e:	mov    DWORD PTR [rsp+0x38],eax
   140030d82:	lea    rax,[rsp+0x170]
   140030d8a:	mov    DWORD PTR [rsp+0x30],edi
   140030d8e:	mov    QWORD PTR [rsp+0x28],rax
   140030d93:	lea    r9,[rsp+0x70]
   140030d98:	mov    r8d,edi
   140030d9b:	xor    ecx,ecx
   140030d9d:	mov    DWORD PTR [rsp+0x20],edi
   140030da1:	call   0x1400391f0
   140030da6:	mov    eax,DWORD PTR [rbp+0x4]
   140030da9:	mov    edx,DWORD PTR [rbp+0xc]
   140030dac:	mov    DWORD PTR [rsp+0x40],ebx
   140030db0:	mov    DWORD PTR [rsp+0x38],eax
   140030db4:	lea    rax,[rsp+0x270]
   140030dbc:	mov    DWORD PTR [rsp+0x30],edi
   140030dc0:	mov    QWORD PTR [rsp+0x28],rax
   140030dc5:	lea    r9,[rsp+0x70]
   140030dca:	mov    r8d,0x200
   140030dd0:	xor    ecx,ecx
   140030dd2:	mov    DWORD PTR [rsp+0x20],edi
   140030dd6:	call   0x1400391f0
   140030ddb:	mov    rsi,QWORD PTR [rsp+0x598]
   140030de3:	lea    r11,[rsp+0x370]
   140030deb:	lea    rcx,[rbp+0x1d]
   140030def:	nop
   140030df0:	movzx  eax,WORD PTR [r11]
   140030df4:	test   al,0x1
   140030df6:	je     0x140030e0b
   140030df8:	movzx  eax,BYTE PTR [rsp+rbx*1+0x170]
   140030e00:	or     BYTE PTR [rcx],0x10
   140030e03:	mov    BYTE PTR [rcx+0x100],al
   140030e09:	jmp    0x140030e29
   140030e0b:	test   al,0x2
   140030e0d:	je     0x140030e22
   140030e0f:	movzx  eax,BYTE PTR [rsp+rbx*1+0x270]
   140030e17:	or     BYTE PTR [rcx],0x20
   140030e1a:	mov    BYTE PTR [rcx+0x100],al
   140030e20:	jmp    0x140030e29
   140030e22:	mov    BYTE PTR [rcx+0x100],0x0
   140030e29:	add    rcx,0x1
   140030e2d:	add    rbx,0x1
   140030e31:	add    r11,0x2
   140030e35:	sub    rdi,0x1
   140030e39:	jne    0x140030df0
   140030e3b:	jmp    0x140030e8e
   140030e3d:	xor    ebx,ebx
   140030e3f:	lea    rcx,[rbp+0x1d]
   140030e43:	mov    edi,0x100
   140030e48:	data16 data16 xchg ax,ax
   140030e4c:	data16 data16 xchg ax,ax
   140030e50:	lea    edx,[rbx-0x61]
   140030e53:	lea    eax,[rdx+0x20]
   140030e56:	cmp    eax,0x19
   140030e59:	ja     0x140030e69
   140030e5b:	or     BYTE PTR [rcx],0x10
   140030e5e:	lea    eax,[rbx+0x20]
   140030e61:	mov    BYTE PTR [rcx+0x100],al
   140030e67:	jmp    0x140030e83
   140030e69:	cmp    edx,0x19
   140030e6c:	ja     0x140030e7c
   140030e6e:	or     BYTE PTR [rcx],0x20
   140030e71:	lea    eax,[rbx-0x20]
   140030e74:	mov    BYTE PTR [rcx+0x100],al
   140030e7a:	jmp    0x140030e83
   140030e7c:	mov    BYTE PTR [rcx+0x100],0x0
   140030e83:	add    ebx,0x1
   140030e86:	add    rcx,0x1
   140030e8a:	cmp    ebx,edi
   140030e8c:	jb     0x140030e50
   140030e8e:	mov    rcx,QWORD PTR [rsp+0x570]
   140030e96:	xor    rcx,rsp
   140030e99:	call   0x140029b40
   140030e9e:	lea    r11,[rsp+0x580]
   140030ea6:	mov    rbx,QWORD PTR [r11+0x20]
   140030eaa:	mov    rbp,QWORD PTR [r11+0x28]
   140030eae:	mov    rsp,r11
   140030eb1:	pop    rdi
   140030eb2:	ret    
   140030eb3:	int3   
   140030eb4:	int3   
   140030eb5:	int3   
   140030eb6:	int3   
   140030eb7:	int3   
   140030eb8:	int3   
   140030eb9:	int3   
   140030eba:	int3   
   140030ebb:	int3   
   140030ebc:	int3   
   140030ebd:	int3   
   140030ebe:	int3   
   140030ebf:	int3   
   140030ec0:	mov    QWORD PTR [rsp+0x10],rbx
   140030ec5:	push   rdi
   140030ec6:	sub    rsp,0x20
   140030eca:	call   0x14002e210
   140030ecf:	mov    rdi,rax
   140030ed2:	mov    ecx,DWORD PTR [rax+0xc8]
   140030ed8:	test   DWORD PTR [rip+0x2a9fa],ecx        # 0x14005b8d8
   140030ede:	je     0x140030ef3
   140030ee0:	cmp    QWORD PTR [rax+0xc0],0x0
   140030ee8:	je     0x140030ef3
   140030eea:	mov    rbx,QWORD PTR [rax+0xb8]
   140030ef1:	jmp    0x140030f61
   140030ef3:	mov    ecx,0xd
   140030ef8:	call   0x140035aa0
   140030efd:	nop
   140030efe:	mov    rbx,QWORD PTR [rdi+0xb8]
   140030f05:	mov    QWORD PTR [rsp+0x30],rbx
   140030f0a:	cmp    rbx,QWORD PTR [rip+0x2a8bf]        # 0x14005b7d0
   140030f11:	je     0x140030f57
   140030f13:	test   rbx,rbx
   140030f16:	je     0x140030f34
   140030f18:	lock add DWORD PTR [rbx],0xffffffff
   140030f1c:	jne    0x140030f34
   140030f1e:	lea    rax,[rip+0x2a47b]        # 0x14005b3a0
   140030f25:	mov    rcx,QWORD PTR [rsp+0x30]
   140030f2a:	cmp    rcx,rax
   140030f2d:	je     0x140030f34
   140030f2f:	call   0x14002a380
   140030f34:	mov    rax,QWORD PTR [rip+0x2a895]        # 0x14005b7d0
   140030f3b:	mov    QWORD PTR [rdi+0xb8],rax
   140030f42:	mov    rax,QWORD PTR [rip+0x2a887]        # 0x14005b7d0
   140030f49:	mov    QWORD PTR [rsp+0x30],rax
   140030f4e:	lock add DWORD PTR [rax],0x1
   140030f52:	mov    rbx,QWORD PTR [rsp+0x30]
   140030f57:	mov    ecx,0xd
   140030f5c:	call   0x140035970
   140030f61:	test   rbx,rbx
   140030f64:	jne    0x140030f6e
   140030f66:	lea    ecx,[rbx+0x20]
   140030f69:	call   0x14002c0f0
   140030f6e:	mov    rax,rbx
   140030f71:	mov    rbx,QWORD PTR [rsp+0x38]
   140030f76:	add    rsp,0x20
   140030f7a:	pop    rdi
   140030f7b:	ret    
   140030f7c:	int3   
   140030f7d:	int3   
   140030f7e:	int3   
   140030f7f:	int3   
   140030f80:	rex push rbp
   140030f82:	sub    rsp,0x20
   140030f86:	mov    rbp,rdx
   140030f89:	mov    ecx,0xd
   140030f8e:	call   0x140035970
   140030f93:	add    rsp,0x20
   140030f97:	pop    rbp
   140030f98:	ret    
   140030f99:	int3   
   140030f9a:	int3   
   140030f9b:	int3   
   140030f9c:	int3   
   140030f9d:	int3   
   140030f9e:	int3   
   140030f9f:	int3   
   140030fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140030fa5:	mov    QWORD PTR [rsp+0x10],rbp
   140030faa:	mov    QWORD PTR [rsp+0x18],rsi
   140030faf:	mov    QWORD PTR [rsp+0x20],rdi
   140030fb4:	push   r12
   140030fb6:	sub    rsp,0x20
   140030fba:	mov    edi,ecx
   140030fbc:	xor    sil,sil
   140030fbf:	call   0x14002e210
   140030fc4:	mov    r12,QWORD PTR [rax+0xc0]
   140030fcb:	mov    rbp,QWORD PTR [rax+0xb8]
   140030fd2:	mov    rbx,rax
   140030fd5:	cmp    r12,QWORD PTR [rip+0x2aa74]        # 0x14005ba50
   140030fdc:	je     0x140030ff4
   140030fde:	mov    edx,DWORD PTR [rax+0xc8]
   140030fe4:	test   DWORD PTR [rip+0x2a8ee],edx        # 0x14005b8d8
   140030fea:	jne    0x140030ff4
   140030fec:	call   0x140031a10
   140030ff1:	mov    r12,rax
   140030ff4:	cmp    rbp,QWORD PTR [rip+0x2a7d5]        # 0x14005b7d0
   140030ffb:	je     0x140031010
   140030ffd:	mov    ecx,DWORD PTR [rbx+0xc8]
   140031003:	test   DWORD PTR [rip+0x2a8cf],ecx        # 0x14005b8d8
   140031009:	jne    0x140031010
   14003100b:	call   0x140030ec0
   140031010:	mov    ecx,DWORD PTR [rbx+0xc8]
   140031016:	test   cl,0x2
   140031019:	jne    0x140031027
   14003101b:	or     ecx,0x2
   14003101e:	mov    sil,0x1
   140031021:	mov    DWORD PTR [rbx+0xc8],ecx
   140031027:	cmp    edi,0xfffffffe
   14003102a:	mov    DWORD PTR [rip+0x30804],0x0        # 0x140061838
   140031034:	jne    0x140031054
   140031036:	mov    DWORD PTR [rip+0x307f8],0x1        # 0x140061838
   140031040:	call   QWORD PTR [rip+0x1229a]        # 0x1400432e0
   140031046:	test   sil,sil
   140031049:	je     0x14003108f
   14003104b:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140031052:	jmp    0x14003108f
   140031054:	cmp    edi,0xfffffffd
   140031057:	jne    0x14003106b
   140031059:	mov    DWORD PTR [rip+0x307d5],0x1        # 0x140061838
   140031063:	call   QWORD PTR [rip+0x1226f]        # 0x1400432d8
   140031069:	jmp    0x140031046
   14003106b:	cmp    edi,0xfffffffc
   14003106e:	jne    0x140031081
   140031070:	mov    eax,DWORD PTR [r12+0x4]
   140031075:	mov    DWORD PTR [rip+0x307b9],0x1        # 0x140061838
   14003107f:	jmp    0x140031046
   140031081:	test   sil,sil
   140031084:	je     0x14003108d
   140031086:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003108d:	mov    eax,edi
   14003108f:	mov    rbx,QWORD PTR [rsp+0x30]
   140031094:	mov    rbp,QWORD PTR [rsp+0x38]
   140031099:	mov    rsi,QWORD PTR [rsp+0x40]
   14003109e:	mov    rdi,QWORD PTR [rsp+0x48]
   1400310a3:	add    rsp,0x20
   1400310a7:	pop    r12
   1400310a9:	ret    
   1400310aa:	int3   
   1400310ab:	int3   
   1400310ac:	int3   
   1400310ad:	int3   
   1400310ae:	int3   
   1400310af:	int3   
   1400310b0:	rex push rbx
   1400310b2:	push   rbp
   1400310b3:	push   rsi
   1400310b4:	push   rdi
   1400310b5:	sub    rsp,0x48
   1400310b9:	mov    rax,QWORD PTR [rip+0x29ec0]        # 0x14005af80
   1400310c0:	xor    rax,rsp
   1400310c3:	mov    QWORD PTR [rsp+0x38],rax
   1400310c8:	mov    rbx,rdx
   1400310cb:	call   0x140030fa0
   1400310d0:	test   eax,eax
   1400310d2:	mov    edi,eax
   1400310d4:	jne    0x140031161
   1400310da:	lea    rdi,[rbx+0x1c]
   1400310de:	mov    esi,0x101
   1400310e3:	xor    edx,edx
   1400310e5:	mov    rcx,rdi
   1400310e8:	mov    r8,rsi
   1400310eb:	call   0x14002ac20
   1400310f0:	xor    ebp,ebp
   1400310f2:	lea    rdx,[rip+0x2a2a7]        # 0x14005b3a0
   1400310f9:	mov    DWORD PTR [rbx+0x4],ebp
   1400310fc:	mov    DWORD PTR [rbx+0x8],ebp
   1400310ff:	mov    DWORD PTR [rbx+0xc],ebp
   140031102:	mov    QWORD PTR [rbx+0x10],rbp
   140031106:	sub    rdx,rbx
   140031109:	mov    DWORD PTR [rbx+0x18],ebp
   14003110c:	data16 data16 xchg ax,ax
   140031110:	movzx  eax,BYTE PTR [rdx+rdi*1]
   140031114:	add    rdi,0x1
   140031118:	sub    rsi,0x1
   14003111c:	mov    BYTE PTR [rdi-0x1],al
   14003111f:	jne    0x140031110
   140031121:	lea    r9,[rip+0x2a279]        # 0x14005b3a1
   140031128:	lea    rcx,[rbx+0x11d]
   14003112f:	mov    r8d,0x80
   140031135:	sub    r9,rbx
   140031138:	data16 data16 xchg ax,ax
   14003113c:	data16 data16 xchg ax,ax
   140031140:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140031144:	add    rcx,0x2
   140031148:	sub    r8,0x1
   14003114c:	mov    BYTE PTR [rcx-0x2],al
   14003114f:	movzx  eax,BYTE PTR [r9+rcx*1-0x2]
   140031155:	mov    BYTE PTR [rcx-0x1],al
   140031158:	jne    0x140031140
   14003115a:	xor    eax,eax
   14003115c:	jmp    0x140031456
   140031161:	mov    QWORD PTR [rsp+0x80],r12
   140031169:	xor    ebp,ebp
   14003116b:	mov    QWORD PTR [rsp+0x40],r13
   140031170:	lea    r13,[rip+0x2a669]        # 0x14005b7e0
   140031177:	mov    ecx,ebp
   140031179:	mov    r12,rbp
   14003117c:	mov    rax,r13
   14003117f:	nop
   140031180:	cmp    DWORD PTR [rax],edi
   140031182:	je     0x14003132b
   140031188:	add    ecx,0x1
   14003118b:	add    r12,0x1
   14003118f:	add    rax,0x30
   140031193:	cmp    ecx,0x5
   140031196:	jb     0x140031180
   140031198:	cmp    edi,0xfde8
   14003119e:	je     0x140031323
   1400311a4:	cmp    edi,0xfde9
   1400311aa:	je     0x140031323
   1400311b0:	movzx  ecx,di
   1400311b3:	call   QWORD PTR [rip+0x1212f]        # 0x1400432e8
   1400311b9:	test   eax,eax
   1400311bb:	je     0x140031323
   1400311c1:	lea    rdx,[rsp+0x20]
   1400311c6:	mov    ecx,edi
   1400311c8:	call   QWORD PTR [rip+0x12102]        # 0x1400432d0
   1400311ce:	test   eax,eax
   1400311d0:	je     0x14003130e
   1400311d6:	lea    rcx,[rbx+0x1c]
   1400311da:	mov    r8d,0x101
   1400311e0:	xor    edx,edx
   1400311e2:	call   0x14002ac20
   1400311e7:	cmp    DWORD PTR [rsp+0x20],0x1
   1400311ec:	mov    DWORD PTR [rbx+0x4],edi
   1400311ef:	mov    DWORD PTR [rbx+0xc],ebp
   1400311f2:	jbe    0x1400312ff
   1400311f8:	cmp    BYTE PTR [rsp+0x26],bpl
   1400311fd:	lea    rdx,[rsp+0x26]
   140031202:	je     0x140031239
   140031204:	movzx  eax,BYTE PTR [rdx+0x1]
   140031208:	test   al,al
   14003120a:	je     0x140031239
   14003120c:	movzx  r8d,BYTE PTR [rdx]
   140031210:	movzx  ecx,al
   140031213:	cmp    r8d,ecx
   140031216:	ja     0x140031230
   140031218:	sub    ecx,r8d
   14003121b:	lea    rax,[r8+rbx*1+0x1d]
   140031220:	add    ecx,0x1
   140031223:	or     BYTE PTR [rax],0x4
   140031226:	add    rax,0x1
   14003122a:	sub    rcx,0x1
   14003122e:	jne    0x140031223
   140031230:	add    rdx,0x2
   140031234:	cmp    BYTE PTR [rdx],bpl
   140031237:	jne    0x140031204
   140031239:	lea    rax,[rbx+0x1f]
   14003123d:	mov    ecx,0x7f
   140031242:	xchg   ax,ax
   140031244:	data16 data16 xchg ax,ax
   140031248:	data16 data16 xchg ax,ax
   14003124c:	data16 data16 xchg ax,ax
   140031250:	or     BYTE PTR [rax-0x1],0x8
   140031254:	or     BYTE PTR [rax],0x8
   140031257:	add    rax,0x2
   14003125b:	sub    rcx,0x1
   14003125f:	jne    0x140031250
   140031261:	mov    ecx,DWORD PTR [rbx+0x4]
   140031264:	sub    ecx,0x3a4
   14003126a:	je     0x1400312e4
   14003126c:	sub    ecx,0x4
   14003126f:	je     0x1400312c9
   140031271:	sub    ecx,0xd
   140031274:	je     0x1400312ae
   140031276:	cmp    ecx,0x1
   140031279:	je     0x140031293
   14003127b:	mov    DWORD PTR [rbx+0x8],0x1
   140031282:	mov    eax,ebp
   140031284:	mov    DWORD PTR [rbx+0xc],eax
   140031287:	mov    QWORD PTR [rbx+0x10],rbp
   14003128b:	mov    DWORD PTR [rbx+0x18],ebp
   14003128e:	jmp    0x14003143f
   140031293:	mov    DWORD PTR [rbx+0x8],0x1
   14003129a:	mov    eax,0x404
   14003129f:	mov    DWORD PTR [rbx+0xc],eax
   1400312a2:	mov    QWORD PTR [rbx+0x10],rbp
   1400312a6:	mov    DWORD PTR [rbx+0x18],ebp
   1400312a9:	jmp    0x14003143f
   1400312ae:	mov    DWORD PTR [rbx+0x8],0x1
   1400312b5:	mov    eax,0x412
   1400312ba:	mov    DWORD PTR [rbx+0xc],eax
   1400312bd:	mov    QWORD PTR [rbx+0x10],rbp
   1400312c1:	mov    DWORD PTR [rbx+0x18],ebp
   1400312c4:	jmp    0x14003143f
   1400312c9:	mov    DWORD PTR [rbx+0x8],0x1
   1400312d0:	mov    eax,0x804
   1400312d5:	mov    DWORD PTR [rbx+0xc],eax
   1400312d8:	mov    QWORD PTR [rbx+0x10],rbp
   1400312dc:	mov    DWORD PTR [rbx+0x18],ebp
   1400312df:	jmp    0x14003143f
   1400312e4:	mov    DWORD PTR [rbx+0x8],0x1
   1400312eb:	mov    eax,0x411
   1400312f0:	mov    DWORD PTR [rbx+0xc],eax
   1400312f3:	mov    QWORD PTR [rbx+0x10],rbp
   1400312f7:	mov    DWORD PTR [rbx+0x18],ebp
   1400312fa:	jmp    0x14003143f
   1400312ff:	mov    DWORD PTR [rbx+0x8],ebp
   140031302:	mov    QWORD PTR [rbx+0x10],rbp
   140031306:	mov    DWORD PTR [rbx+0x18],ebp
   140031309:	jmp    0x14003143f
   14003130e:	cmp    DWORD PTR [rip+0x30524],ebp        # 0x140061838
   140031314:	je     0x140031323
   140031316:	mov    rcx,rbx
   140031319:	call   0x140030bf0
   14003131e:	jmp    0x140031447
   140031323:	or     eax,0xffffffff
   140031326:	jmp    0x140031449
   14003132b:	lea    rcx,[rbx+0x1c]
   14003132f:	mov    r8d,0x101
   140031335:	xor    edx,edx
   140031337:	call   0x14002ac20
   14003133c:	lea    r9,[r12+r12*2]
   140031340:	lea    rax,[rip+0x2a4a9]        # 0x14005b7f0
   140031347:	shl    r9,0x4
   14003134b:	lea    r11,[rip+0x2a486]        # 0x14005b7d8
   140031352:	mov    r10d,0x4
   140031358:	add    r9,rax
   14003135b:	xchg   ax,ax
   14003135d:	data16 xchg ax,ax
   140031360:	cmp    BYTE PTR [r9],bpl
   140031363:	mov    r8,r9
   140031366:	je     0x1400313b0
   140031368:	data16 data16 xchg ax,ax
   14003136c:	data16 data16 xchg ax,ax
   140031370:	movzx  eax,BYTE PTR [r8+0x1]
   140031375:	test   al,al
   140031377:	je     0x1400313b0
   140031379:	movzx  edx,BYTE PTR [r8]
   14003137d:	movzx  eax,al
   140031380:	cmp    edx,eax
   140031382:	ja     0x1400313a7
   140031384:	lea    rcx,[rdx+rbx*1+0x1d]
   140031389:	data16 xchg ax,ax
   14003138c:	data16 data16 xchg ax,ax
   140031390:	movzx  eax,BYTE PTR [r11]
   140031394:	add    edx,0x1
   140031397:	add    rcx,0x1
   14003139b:	or     BYTE PTR [rcx-0x1],al
   14003139e:	movzx  eax,BYTE PTR [r8+0x1]
   1400313a3:	cmp    edx,eax
   1400313a5:	jbe    0x140031390
   1400313a7:	add    r8,0x2
   1400313ab:	cmp    BYTE PTR [r8],bpl
   1400313ae:	jne    0x140031370
   1400313b0:	add    r9,0x8
   1400313b4:	add    r11,0x1
   1400313b8:	sub    r10,0x1
   1400313bc:	jne    0x140031360
   1400313be:	mov    DWORD PTR [rbx+0x4],edi
   1400313c1:	sub    edi,0x3a4
   1400313c7:	mov    DWORD PTR [rbx+0x8],0x1
   1400313ce:	je     0x1400313f4
   1400313d0:	sub    edi,0x4
   1400313d3:	je     0x1400313ed
   1400313d5:	sub    edi,0xd
   1400313d8:	je     0x1400313e6
   1400313da:	cmp    edi,0x1
   1400313dd:	jne    0x1400313f9
   1400313df:	mov    ebp,0x404
   1400313e4:	jmp    0x1400313f9
   1400313e6:	mov    ebp,0x412
   1400313eb:	jmp    0x1400313f9
   1400313ed:	mov    ebp,0x804
   1400313f2:	jmp    0x1400313f9
   1400313f4:	mov    ebp,0x411
   1400313f9:	mov    DWORD PTR [rbx+0xc],ebp
   1400313fc:	lea    rcx,[r12+r12*2]
   140031400:	add    rcx,rcx
   140031403:	movzx  eax,WORD PTR [r13+rcx*8+0x4]
   140031409:	mov    WORD PTR [rbx+0x10],ax
   14003140d:	movzx  eax,WORD PTR [r13+rcx*8+0x6]
   140031413:	mov    WORD PTR [rbx+0x12],ax
   140031417:	movzx  eax,WORD PTR [r13+rcx*8+0x8]
   14003141d:	mov    WORD PTR [rbx+0x14],ax
   140031421:	movzx  eax,WORD PTR [r13+rcx*8+0xa]
   140031427:	mov    WORD PTR [rbx+0x16],ax
   14003142b:	movzx  eax,WORD PTR [r13+rcx*8+0xc]
   140031431:	mov    WORD PTR [rbx+0x18],ax
   140031435:	movzx  eax,WORD PTR [r13+rcx*8+0xe]
   14003143b:	mov    WORD PTR [rbx+0x1a],ax
   14003143f:	mov    rcx,rbx
   140031442:	call   0x140030ca0
   140031447:	xor    eax,eax
   140031449:	mov    r12,QWORD PTR [rsp+0x80]
   140031451:	mov    r13,QWORD PTR [rsp+0x40]
   140031456:	mov    rcx,QWORD PTR [rsp+0x38]
   14003145b:	xor    rcx,rsp
   14003145e:	call   0x140029b40
   140031463:	add    rsp,0x48
   140031467:	pop    rdi
   140031468:	pop    rsi
   140031469:	pop    rbp
   14003146a:	pop    rbx
   14003146b:	ret    
   14003146c:	int3   
   14003146d:	int3   
   14003146e:	int3   
   14003146f:	int3   
   140031470:	mov    QWORD PTR [rsp+0x8],rbx
   140031475:	mov    QWORD PTR [rsp+0x10],rsi
   14003147a:	mov    QWORD PTR [rsp+0x18],rdi
   14003147f:	push   r12
   140031481:	push   r13
   140031483:	push   r14
   140031485:	sub    rsp,0x30
   140031489:	mov    edi,ecx
   14003148b:	or     r14d,0xffffffff
   14003148f:	call   0x14002e210
   140031494:	mov    rsi,rax
   140031497:	call   0x140030ec0
   14003149c:	mov    rbx,QWORD PTR [rsi+0xb8]
   1400314a3:	mov    ecx,edi
   1400314a5:	call   0x140030fa0
   1400314aa:	mov    r12d,eax
   1400314ad:	cmp    eax,DWORD PTR [rbx+0x4]
   1400314b0:	je     0x14003164f
   1400314b6:	mov    ecx,0x220
   1400314bb:	call   0x1400320c0
   1400314c0:	mov    rdi,rax
   1400314c3:	test   rax,rax
   1400314c6:	je     0x140031654
   1400314cc:	mov    rdx,QWORD PTR [rsi+0xb8]
   1400314d3:	mov    rcx,rax
   1400314d6:	mov    r8d,0x220
   1400314dc:	call   0x14002b7a0
   1400314e1:	xor    ebx,ebx
   1400314e3:	mov    DWORD PTR [rdi],ebx
   1400314e5:	mov    rdx,rdi
   1400314e8:	mov    ecx,r12d
   1400314eb:	call   0x1400310b0
   1400314f0:	mov    r14d,eax
   1400314f3:	test   eax,eax
   1400314f5:	jne    0x140031629
   1400314fb:	mov    rcx,QWORD PTR [rsi+0xb8]
   140031502:	lock add DWORD PTR [rcx],0xffffffff
   140031506:	jne    0x140031522
   140031508:	mov    rcx,QWORD PTR [rsi+0xb8]
   14003150f:	lea    r12,[rip+0x29e8a]        # 0x14005b3a0
   140031516:	cmp    rcx,r12
   140031519:	je     0x140031529
   14003151b:	call   0x14002a380
   140031520:	jmp    0x140031529
   140031522:	lea    r12,[rip+0x29e77]        # 0x14005b3a0
   140031529:	mov    QWORD PTR [rsi+0xb8],rdi
   140031530:	lock add DWORD PTR [rdi],0x1
   140031534:	test   BYTE PTR [rsi+0xc8],0x2
   14003153b:	jne    0x140031654
   140031541:	test   BYTE PTR [rip+0x2a390],0x1        # 0x14005b8d8
   140031548:	jne    0x140031654
   14003154e:	mov    ecx,0xd
   140031553:	call   0x140035aa0
   140031558:	nop
   140031559:	mov    eax,DWORD PTR [rdi+0x4]
   14003155c:	mov    DWORD PTR [rip+0x302ea],eax        # 0x14006184c
   140031562:	mov    eax,DWORD PTR [rdi+0x8]
   140031565:	mov    DWORD PTR [rip+0x302e5],eax        # 0x140061850
   14003156b:	mov    eax,DWORD PTR [rdi+0xc]
   14003156e:	mov    DWORD PTR [rip+0x302e0],eax        # 0x140061854
   140031574:	mov    edx,ebx
   140031576:	mov    DWORD PTR [rsp+0x20],ebx
   14003157a:	lea    r8,[rip+0xfffffffffffcea7f]        # 0x140000000
   140031581:	cmp    edx,0x5
   140031584:	jge    0x1400315a0
   140031586:	movsxd rcx,edx
   140031589:	movzx  eax,WORD PTR [rdi+rcx*2+0x10]
   14003158e:	mov    WORD PTR [r8+rcx*2+0x61840],ax
   140031597:	add    edx,0x1
   14003159a:	mov    DWORD PTR [rsp+0x20],edx
   14003159e:	jmp    0x140031581
   1400315a0:	mov    edx,ebx
   1400315a2:	mov    DWORD PTR [rsp+0x20],ebx
   1400315a6:	cmp    edx,0x101
   1400315ac:	jge    0x1400315c7
   1400315ae:	movsxd rcx,edx
   1400315b1:	movzx  eax,BYTE PTR [rcx+rdi*1+0x1c]
   1400315b6:	mov    BYTE PTR [rcx+r8*1+0x5b5c0],al
   1400315be:	add    edx,0x1
   1400315c1:	mov    DWORD PTR [rsp+0x20],edx
   1400315c5:	jmp    0x1400315a6
   1400315c7:	mov    DWORD PTR [rsp+0x20],ebx
   1400315cb:	xchg   ax,ax
   1400315cd:	data16 xchg ax,ax
   1400315d0:	cmp    ebx,0x100
   1400315d6:	jge    0x1400315f4
   1400315d8:	movsxd rcx,ebx
   1400315db:	movzx  eax,BYTE PTR [rcx+rdi*1+0x11d]
   1400315e3:	mov    BYTE PTR [rcx+r8*1+0x5b6d0],al
   1400315eb:	add    ebx,0x1
   1400315ee:	mov    DWORD PTR [rsp+0x20],ebx
   1400315f2:	jmp    0x1400315d0
   1400315f4:	mov    rax,QWORD PTR [rip+0x2a1d5]        # 0x14005b7d0
   1400315fb:	lock add DWORD PTR [rax],0xffffffff
   1400315ff:	jne    0x140031612
   140031601:	mov    rcx,QWORD PTR [rip+0x2a1c8]        # 0x14005b7d0
   140031608:	cmp    rcx,r12
   14003160b:	je     0x140031612
   14003160d:	call   0x14002a380
   140031612:	mov    QWORD PTR [rip+0x2a1b7],rdi        # 0x14005b7d0
   140031619:	lock add DWORD PTR [rdi],0x1
   14003161d:	mov    ecx,0xd
   140031622:	call   0x140035970
   140031627:	jmp    0x140031654
   140031629:	cmp    eax,0xffffffff
   14003162c:	jne    0x140031654
   14003162e:	lea    r12,[rip+0x29d6b]        # 0x14005b3a0
   140031635:	cmp    rdi,r12
   140031638:	je     0x140031642
   14003163a:	mov    rcx,rdi
   14003163d:	call   0x14002a380
   140031642:	call   0x14002bca0
   140031647:	mov    DWORD PTR [rax],0x16
   14003164d:	jmp    0x140031654
   14003164f:	xor    ebx,ebx
   140031651:	mov    r14d,ebx
   140031654:	mov    eax,r14d
   140031657:	mov    rbx,QWORD PTR [rsp+0x50]
   14003165c:	mov    rsi,QWORD PTR [rsp+0x58]
   140031661:	mov    rdi,QWORD PTR [rsp+0x60]
   140031666:	add    rsp,0x30
   14003166a:	pop    r14
   14003166c:	pop    r13
   14003166e:	pop    r12
   140031670:	ret    
   140031671:	int3   
   140031672:	int3   
   140031673:	int3   
   140031674:	int3   
   140031675:	int3   
   140031676:	int3   
   140031677:	int3   
   140031678:	int3   
   140031679:	int3   
   14003167a:	int3   
   14003167b:	int3   
   14003167c:	int3   
   14003167d:	int3   
   14003167e:	int3   
   14003167f:	int3   
   140031680:	rex push rbp
   140031682:	sub    rsp,0x20
   140031686:	mov    rbp,rdx
   140031689:	mov    ecx,0xd
   14003168e:	call   0x140035970
   140031693:	add    rsp,0x20
   140031697:	pop    rbp
   140031698:	ret    
   140031699:	int3   
   14003169a:	int3   
   14003169b:	int3   
   14003169c:	int3   
   14003169d:	int3   
   14003169e:	int3   
   14003169f:	int3   
   1400316a0:	sub    rsp,0x28
   1400316a4:	cmp    DWORD PTR [rip+0x31b2d],0x0        # 0x1400631d8
   1400316ab:	jne    0x1400316c1
   1400316ad:	mov    ecx,0xfffffffd
   1400316b2:	call   0x140031470
   1400316b7:	mov    DWORD PTR [rip+0x31b17],0x1        # 0x1400631d8
   1400316c1:	xor    eax,eax
   1400316c3:	add    rsp,0x28
   1400316c7:	ret    
   1400316c8:	int3   
   1400316c9:	int3   
   1400316ca:	int3   
   1400316cb:	int3   
   1400316cc:	int3   
   1400316cd:	int3   
   1400316ce:	int3   
   1400316cf:	int3   
   1400316d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400316d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400316da:	mov    QWORD PTR [rsp+0x18],rsi
   1400316df:	push   rdi
   1400316e0:	sub    rsp,0x20
   1400316e4:	mov    rax,QWORD PTR [rcx+0x128]
   1400316eb:	mov    rdi,rcx
   1400316ee:	test   rax,rax
   1400316f1:	je     0x14003176c
   1400316f3:	lea    rcx,[rip+0x2acf6]        # 0x14005c3f0
   1400316fa:	cmp    rax,rcx
   1400316fd:	je     0x14003176c
   1400316ff:	mov    rax,QWORD PTR [rdi+0x110]
   140031706:	test   rax,rax
   140031709:	je     0x14003176c
   14003170b:	cmp    DWORD PTR [rax],0x0
   14003170e:	jne    0x14003176c
   140031710:	mov    rcx,QWORD PTR [rdi+0x120]
   140031717:	test   rcx,rcx
   14003171a:	je     0x140031732
   14003171c:	cmp    DWORD PTR [rcx],0x0
   14003171f:	jne    0x140031732
   140031721:	call   0x14002a380
   140031726:	mov    rcx,QWORD PTR [rdi+0x128]
   14003172d:	call   0x140039940
   140031732:	mov    rcx,QWORD PTR [rdi+0x118]
   140031739:	test   rcx,rcx
   14003173c:	je     0x140031754
   14003173e:	cmp    DWORD PTR [rcx],0x0
   140031741:	jne    0x140031754
   140031743:	call   0x14002a380
   140031748:	mov    rcx,QWORD PTR [rdi+0x128]
   14003174f:	call   0x1400398f0
   140031754:	mov    rcx,QWORD PTR [rdi+0x110]
   14003175b:	call   0x14002a380
   140031760:	mov    rcx,QWORD PTR [rdi+0x128]
   140031767:	call   0x14002a380
   14003176c:	mov    rax,QWORD PTR [rdi+0x130]
   140031773:	test   rax,rax
   140031776:	je     0x1400317bc
   140031778:	cmp    DWORD PTR [rax],0x0
   14003177b:	jne    0x1400317bc
   14003177d:	mov    rcx,QWORD PTR [rdi+0x138]
   140031784:	sub    rcx,0xfe
   14003178b:	call   0x14002a380
   140031790:	mov    rcx,QWORD PTR [rdi+0x148]
   140031797:	add    rcx,0xffffffffffffff80
   14003179b:	call   0x14002a380
   1400317a0:	mov    rcx,QWORD PTR [rdi+0x150]
   1400317a7:	add    rcx,0xffffffffffffff80
   1400317ab:	call   0x14002a380
   1400317b0:	mov    rcx,QWORD PTR [rdi+0x130]
   1400317b7:	call   0x14002a380
   1400317bc:	mov    rcx,QWORD PTR [rdi+0x158]
   1400317c3:	lea    rax,[rip+0x2aaa6]        # 0x14005c270
   1400317ca:	cmp    rcx,rax
   1400317cd:	je     0x1400317e9
   1400317cf:	cmp    DWORD PTR [rcx+0x160],0x0
   1400317d6:	jne    0x1400317e9
   1400317d8:	call   0x140039700
   1400317dd:	mov    rcx,QWORD PTR [rdi+0x158]
   1400317e4:	call   0x14002a380
   1400317e9:	lea    rbx,[rdi+0x58]
   1400317ed:	mov    esi,0x6
   1400317f2:	lea    rbp,[rip+0x2a0e7]        # 0x14005b8e0
   1400317f9:	data16 xchg ax,ax
   1400317fc:	data16 data16 xchg ax,ax
   140031800:	cmp    QWORD PTR [rbx-0x10],rbp
   140031804:	je     0x140031818
   140031806:	mov    rcx,QWORD PTR [rbx]
   140031809:	test   rcx,rcx
   14003180c:	je     0x140031818
   14003180e:	cmp    DWORD PTR [rcx],0x0
   140031811:	jne    0x140031818
   140031813:	call   0x14002a380
   140031818:	cmp    QWORD PTR [rbx-0x8],0x0
   14003181d:	je     0x140031832
   14003181f:	mov    rcx,QWORD PTR [rbx+0x8]
   140031823:	test   rcx,rcx
   140031826:	je     0x140031832
   140031828:	cmp    DWORD PTR [rcx],0x0
   14003182b:	jne    0x140031832
   14003182d:	call   0x14002a380
   140031832:	add    rbx,0x20
   140031836:	sub    rsi,0x1
   14003183a:	jne    0x140031800
   14003183c:	mov    rcx,rdi
   14003183f:	mov    rbx,QWORD PTR [rsp+0x30]
   140031844:	mov    rbp,QWORD PTR [rsp+0x38]
   140031849:	mov    rsi,QWORD PTR [rsp+0x40]
   14003184e:	add    rsp,0x20
   140031852:	pop    rdi
   140031853:	jmp    0x14002a380
   140031858:	int3   
   140031859:	int3   
   14003185a:	int3   
   14003185b:	int3   
   14003185c:	int3   
   14003185d:	int3   
   14003185e:	int3   
   14003185f:	int3   
   140031860:	mov    rdx,rcx
   140031863:	lock add DWORD PTR [rcx],0x1
   140031867:	mov    rax,QWORD PTR [rcx+0x110]
   14003186e:	test   rax,rax
   140031871:	je     0x140031877
   140031873:	lock add DWORD PTR [rax],0x1
   140031877:	mov    rax,QWORD PTR [rcx+0x120]
   14003187e:	test   rax,rax
   140031881:	je     0x140031887
   140031883:	lock add DWORD PTR [rax],0x1
   140031887:	mov    rax,QWORD PTR [rcx+0x118]
   14003188e:	test   rax,rax
   140031891:	je     0x140031897
   140031893:	lock add DWORD PTR [rax],0x1
   140031897:	mov    rax,QWORD PTR [rcx+0x130]
   14003189e:	test   rax,rax
   1400318a1:	je     0x1400318a7
   1400318a3:	lock add DWORD PTR [rax],0x1
   1400318a7:	lea    rax,[rcx+0x58]
   1400318ab:	mov    r8d,0x6
   1400318b1:	lea    r9,[rip+0x2a028]        # 0x14005b8e0
   1400318b8:	cmp    QWORD PTR [rax-0x10],r9
   1400318bc:	je     0x1400318ca
   1400318be:	mov    rcx,QWORD PTR [rax]
   1400318c1:	test   rcx,rcx
   1400318c4:	je     0x1400318ca
   1400318c6:	lock add DWORD PTR [rcx],0x1
   1400318ca:	cmp    QWORD PTR [rax-0x8],0x0
   1400318cf:	je     0x1400318de
   1400318d1:	mov    rcx,QWORD PTR [rax+0x8]
   1400318d5:	test   rcx,rcx
   1400318d8:	je     0x1400318de
   1400318da:	lock add DWORD PTR [rcx],0x1
   1400318de:	add    rax,0x20
   1400318e2:	sub    r8,0x1
   1400318e6:	jne    0x1400318b8
   1400318e8:	mov    rax,QWORD PTR [rdx+0x158]
   1400318ef:	lock add DWORD PTR [rax+0x160],0x1
   1400318f7:	ret    
   1400318f8:	int3   
   1400318f9:	int3   
   1400318fa:	int3   
   1400318fb:	int3   
   1400318fc:	int3   
   1400318fd:	int3   
   1400318fe:	int3   
   1400318ff:	int3   
   140031900:	test   rcx,rcx
   140031903:	je     0x14003199f
   140031909:	lock add DWORD PTR [rcx],0xffffffff
   14003190d:	mov    rax,QWORD PTR [rcx+0x110]
   140031914:	test   rax,rax
   140031917:	je     0x14003191d
   140031919:	lock add DWORD PTR [rax],0xffffffff
   14003191d:	mov    rax,QWORD PTR [rcx+0x120]
   140031924:	test   rax,rax
   140031927:	je     0x14003192d
   140031929:	lock add DWORD PTR [rax],0xffffffff
   14003192d:	mov    rax,QWORD PTR [rcx+0x118]
   140031934:	test   rax,rax
   140031937:	je     0x14003193d
   140031939:	lock add DWORD PTR [rax],0xffffffff
   14003193d:	mov    rax,QWORD PTR [rcx+0x130]
   140031944:	test   rax,rax
   140031947:	je     0x14003194d
   140031949:	lock add DWORD PTR [rax],0xffffffff
   14003194d:	lea    rax,[rcx+0x58]
   140031951:	mov    r8d,0x6
   140031957:	lea    r9,[rip+0x29f82]        # 0x14005b8e0
   14003195e:	xchg   ax,ax
   140031960:	cmp    QWORD PTR [rax-0x10],r9
   140031964:	je     0x140031972
   140031966:	mov    rdx,QWORD PTR [rax]
   140031969:	test   rdx,rdx
   14003196c:	je     0x140031972
   14003196e:	lock add DWORD PTR [rdx],0xffffffff
   140031972:	cmp    QWORD PTR [rax-0x8],0x0
   140031977:	je     0x140031986
   140031979:	mov    rdx,QWORD PTR [rax+0x8]
   14003197d:	test   rdx,rdx
   140031980:	je     0x140031986
   140031982:	lock add DWORD PTR [rdx],0xffffffff
   140031986:	add    rax,0x20
   14003198a:	sub    r8,0x1
   14003198e:	jne    0x140031960
   140031990:	mov    rax,QWORD PTR [rcx+0x158]
   140031997:	lock add DWORD PTR [rax+0x160],0xffffffff
   14003199f:	mov    rax,rcx
   1400319a2:	ret    
   1400319a3:	int3   
   1400319a4:	int3   
   1400319a5:	int3   
   1400319a6:	int3   
   1400319a7:	int3   
   1400319a8:	int3   
   1400319a9:	int3   
   1400319aa:	int3   
   1400319ab:	int3   
   1400319ac:	int3   
   1400319ad:	int3   
   1400319ae:	int3   
   1400319af:	int3   
   1400319b0:	rex push rbx
   1400319b2:	sub    rsp,0x20
   1400319b6:	test   rdx,rdx
   1400319b9:	mov    rbx,rdx
   1400319bc:	je     0x140031a03
   1400319be:	test   rcx,rcx
   1400319c1:	je     0x140031a03
   1400319c3:	mov    r10,QWORD PTR [rcx]
   1400319c6:	cmp    r10,rdx
   1400319c9:	je     0x1400319fa
   1400319cb:	mov    QWORD PTR [rcx],rdx
   1400319ce:	mov    rcx,rdx
   1400319d1:	call   0x140031860
   1400319d6:	test   r10,r10
   1400319d9:	je     0x1400319fa
   1400319db:	mov    rcx,r10
   1400319de:	call   0x140031900
   1400319e3:	cmp    DWORD PTR [r10],0x0
   1400319e7:	jne    0x1400319fa
   1400319e9:	lea    rax,[rip+0x29f00]        # 0x14005b8f0
   1400319f0:	cmp    r10,rax
   1400319f3:	je     0x1400319fa
   1400319f5:	call   0x1400316d0
   1400319fa:	mov    rax,rbx
   1400319fd:	add    rsp,0x20
   140031a01:	pop    rbx
   140031a02:	ret    
   140031a03:	xor    eax,eax
   140031a05:	add    rsp,0x20
   140031a09:	pop    rbx
   140031a0a:	ret    
   140031a0b:	int3   
   140031a0c:	int3   
   140031a0d:	int3   
   140031a0e:	int3   
   140031a0f:	int3   
   140031a10:	rex push rbx
   140031a12:	sub    rsp,0x20
   140031a16:	call   0x14002e210
   140031a1b:	mov    rbx,rax
   140031a1e:	mov    ecx,DWORD PTR [rax+0xc8]
   140031a24:	test   DWORD PTR [rip+0x29eae],ecx        # 0x14005b8d8
   140031a2a:	je     0x140031a44
   140031a2c:	cmp    QWORD PTR [rax+0xc0],0x0
   140031a34:	je     0x140031a44
   140031a36:	call   0x14002e210
   140031a3b:	mov    rbx,QWORD PTR [rax+0xc0]
   140031a42:	jmp    0x140031a6f
   140031a44:	mov    ecx,0xc
   140031a49:	call   0x140035aa0
   140031a4e:	nop
   140031a4f:	lea    rcx,[rbx+0xc0]
   140031a56:	mov    rdx,QWORD PTR [rip+0x29ff3]        # 0x14005ba50
   140031a5d:	call   0x1400319b0
   140031a62:	mov    rbx,rax
   140031a65:	mov    ecx,0xc
   140031a6a:	call   0x140035970
   140031a6f:	test   rbx,rbx
   140031a72:	jne    0x140031a7c
   140031a74:	lea    ecx,[rbx+0x20]
   140031a77:	call   0x14002c0f0
   140031a7c:	mov    rax,rbx
   140031a7f:	add    rsp,0x20
   140031a83:	pop    rbx
   140031a84:	ret    
   140031a85:	int3   
   140031a86:	int3   
   140031a87:	int3   
   140031a88:	int3   
   140031a89:	int3   
   140031a8a:	int3   
   140031a8b:	int3   
   140031a8c:	int3   
   140031a8d:	int3   
   140031a8e:	int3   
   140031a8f:	int3   
   140031a90:	rex push rbp
   140031a92:	sub    rsp,0x20
   140031a96:	mov    rbp,rdx
   140031a99:	mov    ecx,0xc
   140031a9e:	call   0x140035970
   140031aa3:	add    rsp,0x20
   140031aa7:	pop    rbp
   140031aa8:	ret    
   140031aa9:	int3   
   140031aaa:	int3   
   140031aab:	int3   
   140031aac:	int3   
   140031aad:	int3   
   140031aae:	int3   
   140031aaf:	int3   
   140031ab0:	rex push rbp
   140031ab2:	push   r12
   140031ab4:	push   r13
   140031ab6:	push   r14
   140031ab8:	push   r15
   140031aba:	sub    rsp,0x60
   140031abe:	lea    rbp,[rsp+0x40]
   140031ac3:	mov    QWORD PTR [rbp+0x50],rbx
   140031ac7:	mov    QWORD PTR [rbp+0x58],rsi
   140031acb:	mov    QWORD PTR [rbp+0x60],rdi
   140031acf:	mov    rax,QWORD PTR [rip+0x294aa]        # 0x14005af80
   140031ad6:	xor    rax,rbp
   140031ad9:	mov    QWORD PTR [rbp+0x10],rax
   140031add:	mov    r10d,DWORD PTR [rip+0x2fd9c]        # 0x140061880
   140031ae4:	xor    r13d,r13d
   140031ae7:	mov    r12,r9
   140031aea:	test   r10d,r10d
   140031aed:	mov    QWORD PTR [rbp+0x8],r9
   140031af1:	mov    r11d,r8d
   140031af4:	mov    DWORD PTR [rbp+0x0],r8d
   140031af8:	mov    r15d,edx
   140031afb:	mov    rdi,rcx
   140031afe:	jne    0x140031b50
   140031b00:	lea    r9d,[r13+0x1]
   140031b04:	lea    r8,[rip+0x170f9]        # 0x140048c04
   140031b0b:	mov    edx,0x100
   140031b10:	xor    ecx,ecx
   140031b12:	mov    DWORD PTR [rsp+0x28],r13d
   140031b17:	mov    QWORD PTR [rsp+0x20],r13
   140031b1c:	call   QWORD PTR [rip+0x117d6]        # 0x1400432f8
   140031b22:	test   eax,eax
   140031b24:	je     0x140031b2c
   140031b26:	lea    r10d,[r13+0x1]
   140031b2a:	jmp    0x140031b45
   140031b2c:	call   QWORD PTR [rip+0x119b6]        # 0x1400434e8
   140031b32:	mov    r10d,DWORD PTR [rip+0x2fd47]        # 0x140061880
   140031b39:	mov    ecx,0x2
   140031b3e:	cmp    eax,0x78
   140031b41:	cmove  r10d,ecx
   140031b45:	mov    r11d,DWORD PTR [rbp+0x0]
   140031b49:	mov    DWORD PTR [rip+0x2fd30],r10d        # 0x140061880
   140031b50:	mov    ebx,DWORD PTR [rbp+0x70]
   140031b53:	test   ebx,ebx
   140031b55:	jle    0x140031b7a
   140031b57:	mov    eax,ebx
   140031b59:	mov    rcx,r12
   140031b5c:	data16 data16 xchg ax,ax
   140031b60:	sub    eax,0x1
   140031b63:	or     edx,0xffffffff
   140031b66:	cmp    WORD PTR [rcx],r13w
   140031b6a:	je     0x140031b76
   140031b6c:	add    rcx,0x2
   140031b70:	test   eax,eax
   140031b72:	jne    0x140031b60
   140031b74:	mov    eax,edx
   140031b76:	sub    edx,eax
   140031b78:	add    ebx,edx
   140031b7a:	cmp    r10d,0x1
   140031b7e:	jne    0x140031baa
   140031b80:	mov    eax,DWORD PTR [rbp+0x80]
   140031b86:	mov    r9d,ebx
   140031b89:	mov    r8,r12
   140031b8c:	mov    DWORD PTR [rsp+0x28],eax
   140031b90:	mov    rax,QWORD PTR [rbp+0x78]
   140031b94:	mov    edx,r11d
   140031b97:	mov    ecx,r15d
   140031b9a:	mov    QWORD PTR [rsp+0x20],rax
   140031b9f:	call   QWORD PTR [rip+0x11753]        # 0x1400432f8
   140031ba5:	jmp    0x140031e3f
   140031baa:	cmp    r10d,0x2
   140031bae:	je     0x140031bb9
   140031bb0:	test   r10d,r10d
   140031bb3:	jne    0x140031e3d
   140031bb9:	test   r15d,r15d
   140031bbc:	mov    r14d,r13d
   140031bbf:	jne    0x140031bc8
   140031bc1:	mov    rax,QWORD PTR [rdi]
   140031bc4:	mov    r15d,DWORD PTR [rax+0x14]
   140031bc8:	mov    esi,DWORD PTR [rbp+0x88]
   140031bce:	test   esi,esi
   140031bd0:	jne    0x140031bd8
   140031bd2:	mov    rax,QWORD PTR [rdi]
   140031bd5:	mov    esi,DWORD PTR [rax+0x4]
   140031bd8:	mov    ecx,r15d
   140031bdb:	call   0x140039ab0
   140031be0:	cmp    esi,eax
   140031be2:	je     0x140031bea
   140031be4:	cmp    eax,0xffffffff
   140031be7:	cmovne esi,eax
   140031bea:	mov    QWORD PTR [rsp+0x38],r13
   140031bef:	mov    QWORD PTR [rsp+0x30],r13
   140031bf4:	mov    r9d,ebx
   140031bf7:	mov    r8,r12
   140031bfa:	xor    edx,edx
   140031bfc:	mov    ecx,esi
   140031bfe:	mov    DWORD PTR [rsp+0x28],r13d
   140031c03:	mov    QWORD PTR [rsp+0x20],r13
   140031c08:	call   QWORD PTR [rip+0x1182a]        # 0x140043438
   140031c0e:	test   eax,eax
   140031c10:	movsxd r13,eax
   140031c13:	je     0x140031e3d
   140031c19:	jle    0x140031e3d
   140031c1f:	xor    edx,edx
   140031c21:	mov    rax,0xffffffffffffffe0
   140031c28:	mov    rcx,r13
   140031c2b:	div    r13
   140031c2e:	cmp    rax,0x1
   140031c32:	jb     0x140031e3d
   140031c38:	add    rcx,0x10
   140031c3c:	movabs rdx,0xffffffffffffff0
   140031c46:	cmp    rcx,0x400
   140031c4d:	ja     0x140031c7f
   140031c4f:	lea    rax,[rcx+0xf]
   140031c53:	cmp    rax,rcx
   140031c56:	ja     0x140031c5b
   140031c58:	mov    rax,rdx
   140031c5b:	and    rax,0xfffffffffffffff0
   140031c5f:	call   0x140041ad0
   140031c64:	sub    rsp,rax
   140031c67:	lea    r12,[rsp+0x40]
   140031c6c:	test   r12,r12
   140031c6f:	je     0x140031e3d
   140031c75:	mov    DWORD PTR [r12],0xcccc
   140031c7d:	jmp    0x140031c92
   140031c7f:	call   0x14002a110
   140031c84:	test   rax,rax
   140031c87:	mov    r12,rax
   140031c8a:	je     0x140031c96
   140031c8c:	mov    DWORD PTR [rax],0xdddd
   140031c92:	add    r12,0x10
   140031c96:	test   r12,r12
   140031c99:	je     0x140031e3d
   140031c9f:	mov    r8,QWORD PTR [rbp+0x8]
   140031ca3:	xor    edi,edi
   140031ca5:	mov    r9d,ebx
   140031ca8:	mov    QWORD PTR [rsp+0x38],rdi
   140031cad:	mov    QWORD PTR [rsp+0x30],rdi
   140031cb2:	xor    edx,edx
   140031cb4:	mov    ecx,esi
   140031cb6:	mov    DWORD PTR [rsp+0x28],r13d
   140031cbb:	mov    QWORD PTR [rsp+0x20],r12
   140031cc0:	call   QWORD PTR [rip+0x11772]        # 0x140043438
   140031cc6:	test   eax,eax
   140031cc8:	je     0x140031e23
   140031cce:	mov    edx,DWORD PTR [rbp+0x0]
   140031cd1:	mov    r9d,r13d
   140031cd4:	mov    r8,r12
   140031cd7:	mov    ecx,r15d
   140031cda:	mov    DWORD PTR [rsp+0x28],edi
   140031cde:	mov    QWORD PTR [rsp+0x20],rdi
   140031ce3:	call   QWORD PTR [rip+0x11607]        # 0x1400432f0
   140031ce9:	test   eax,eax
   140031ceb:	movsxd rdi,eax
   140031cee:	jle    0x140031e23
   140031cf4:	xor    edx,edx
   140031cf6:	mov    rax,0xffffffffffffffe0
   140031cfd:	mov    rcx,rdi
   140031d00:	div    rdi
   140031d03:	cmp    rax,0x1
   140031d07:	jb     0x140031e23
   140031d0d:	add    rcx,0x10
   140031d11:	cmp    rcx,0x400
   140031d18:	ja     0x140031d4f
   140031d1a:	lea    rax,[rcx+0xf]
   140031d1e:	cmp    rax,rcx
   140031d21:	ja     0x140031d2d
   140031d23:	movabs rax,0xffffffffffffff0
   140031d2d:	and    rax,0xfffffffffffffff0
   140031d31:	call   0x140041ad0
   140031d36:	sub    rsp,rax
   140031d39:	lea    rbx,[rsp+0x40]
   140031d3e:	test   rbx,rbx
   140031d41:	je     0x140031e23
   140031d47:	mov    DWORD PTR [rbx],0xcccc
   140031d4d:	jmp    0x140031d62
   140031d4f:	call   0x14002a110
   140031d54:	test   rax,rax
   140031d57:	mov    rbx,rax
   140031d5a:	je     0x140031d66
   140031d5c:	mov    DWORD PTR [rax],0xdddd
   140031d62:	add    rbx,0x10
   140031d66:	test   rbx,rbx
   140031d69:	je     0x140031e23
   140031d6f:	mov    r9d,r13d
   140031d72:	mov    r13d,DWORD PTR [rbp+0x0]
   140031d76:	mov    r8,r12
   140031d79:	mov    ecx,r15d
   140031d7c:	mov    edx,r13d
   140031d7f:	mov    DWORD PTR [rsp+0x28],edi
   140031d83:	mov    QWORD PTR [rsp+0x20],rbx
   140031d88:	call   QWORD PTR [rip+0x11562]        # 0x1400432f0
   140031d8e:	test   eax,eax
   140031d90:	je     0x140031e11
   140031d92:	bt     r13d,0xa
   140031d97:	jae    0x140031ddc
   140031d99:	movsxd rax,DWORD PTR [rbp+0x80]
   140031da0:	mov    r14d,edi
   140031da3:	test   eax,eax
   140031da5:	je     0x140031e11
   140031da7:	cmp    eax,edi
   140031da9:	jg     0x140031dae
   140031dab:	lea    edi,[rax-0x1]
   140031dae:	mov    rcx,QWORD PTR [rbp+0x78]
   140031db2:	movsxd r9,edi
   140031db5:	mov    rdx,rax
   140031db8:	mov    r8,rbx
   140031dbb:	call   0x140037540
   140031dc0:	test   eax,eax
   140031dc2:	je     0x140031e11
   140031dc4:	xor    eax,eax
   140031dc6:	xor    r9d,r9d
   140031dc9:	xor    r8d,r8d
   140031dcc:	xor    edx,edx
   140031dce:	xor    ecx,ecx
   140031dd0:	mov    QWORD PTR [rsp+0x20],rax
   140031dd5:	call   0x14002e860
   140031dda:	jmp    0x140031e11
   140031ddc:	mov    eax,DWORD PTR [rbp+0x80]
   140031de2:	mov    r9d,edi
   140031de5:	mov    r8,rbx
   140031de8:	test   eax,eax
   140031dea:	mov    edx,0x1
   140031def:	mov    ecx,esi
   140031df1:	jne    0x140031dfb
   140031df3:	xor    eax,eax
   140031df5:	mov    DWORD PTR [rsp+0x28],eax
   140031df9:	jmp    0x140031e03
   140031dfb:	mov    DWORD PTR [rsp+0x28],eax
   140031dff:	mov    rax,QWORD PTR [rbp+0x78]
   140031e03:	mov    QWORD PTR [rsp+0x20],rax
   140031e08:	call   QWORD PTR [rip+0x116ba]        # 0x1400434c8
   140031e0e:	mov    r14d,eax
   140031e11:	cmp    DWORD PTR [rbx-0x10],0xdddd
   140031e18:	lea    rcx,[rbx-0x10]
   140031e1c:	jne    0x140031e23
   140031e1e:	call   0x14002a380
   140031e23:	cmp    DWORD PTR [r12-0x10],0xdddd
   140031e2c:	lea    rcx,[r12-0x10]
   140031e31:	jne    0x140031e38
   140031e33:	call   0x14002a380
   140031e38:	mov    eax,r14d
   140031e3b:	jmp    0x140031e3f
   140031e3d:	xor    eax,eax
   140031e3f:	mov    rcx,QWORD PTR [rbp+0x10]
   140031e43:	xor    rcx,rbp
   140031e46:	call   0x140029b40
   140031e4b:	mov    rbx,QWORD PTR [rbp+0x50]
   140031e4f:	mov    rsi,QWORD PTR [rbp+0x58]
   140031e53:	mov    rdi,QWORD PTR [rbp+0x60]
   140031e57:	lea    rsp,[rbp+0x20]
   140031e5b:	pop    r15
   140031e5d:	pop    r14
   140031e5f:	pop    r13
   140031e61:	pop    r12
   140031e63:	pop    rbp
   140031e64:	ret    
   140031e65:	int3   
   140031e66:	int3   
   140031e67:	int3   
   140031e68:	int3   
   140031e69:	int3   
   140031e6a:	int3   
   140031e6b:	int3   
   140031e6c:	int3   
   140031e6d:	int3   
   140031e6e:	int3   
   140031e6f:	int3   
   140031e70:	mov    rax,rsp
   140031e73:	push   rbx
   140031e74:	sub    rsp,0x70
   140031e78:	mov    QWORD PTR [rax+0x8],rbp
   140031e7c:	mov    QWORD PTR [rax+0x18],rdi
   140031e80:	xor    dil,dil
   140031e83:	test   rcx,rcx
   140031e86:	mov    QWORD PTR [rax-0x10],r12
   140031e8a:	mov    QWORD PTR [rax-0x18],r13
   140031e8e:	mov    BYTE PTR [rax-0x20],dil
   140031e92:	mov    rbp,r9
   140031e95:	mov    r12d,r8d
   140031e98:	mov    r13d,edx
   140031e9b:	jne    0x140031f2e
   140031ea1:	mov    QWORD PTR [rax+0x10],rsi
   140031ea5:	call   0x14002e210
   140031eaa:	mov    rcx,QWORD PTR [rax+0xc0]
   140031eb1:	mov    rsi,QWORD PTR [rax+0xb8]
   140031eb8:	mov    rbx,rax
   140031ebb:	cmp    rcx,QWORD PTR [rip+0x29b8e]        # 0x14005ba50
   140031ec2:	mov    QWORD PTR [rsp+0x50],rax
   140031ec7:	mov    QWORD PTR [rsp+0x40],rcx
   140031ecc:	mov    QWORD PTR [rsp+0x48],rsi
   140031ed1:	je     0x140031eeb
   140031ed3:	mov    ecx,DWORD PTR [rax+0xc8]
   140031ed9:	test   DWORD PTR [rip+0x299f9],ecx        # 0x14005b8d8
   140031edf:	jne    0x140031eeb
   140031ee1:	call   0x140031a10
   140031ee6:	mov    QWORD PTR [rsp+0x40],rax
   140031eeb:	cmp    rsi,QWORD PTR [rip+0x298de]        # 0x14005b7d0
   140031ef2:	mov    rsi,QWORD PTR [rsp+0x88]
   140031efa:	je     0x140031f14
   140031efc:	mov    eax,DWORD PTR [rbx+0xc8]
   140031f02:	test   DWORD PTR [rip+0x299d0],eax        # 0x14005b8d8
   140031f08:	jne    0x140031f14
   140031f0a:	call   0x140030ec0
   140031f0f:	mov    QWORD PTR [rsp+0x48],rax
   140031f14:	test   BYTE PTR [rbx+0xc8],0x2
   140031f1b:	jne    0x140031f4b
   140031f1d:	or     DWORD PTR [rbx+0xc8],0x2
   140031f24:	mov    dil,0x1
   140031f27:	mov    BYTE PTR [rsp+0x58],dil
   140031f2c:	jmp    0x140031f4b
   140031f2e:	mov    rax,QWORD PTR [rcx]
   140031f31:	lea    rdx,[rsp+0x40]
   140031f36:	mov    QWORD PTR [rdx],rax
   140031f39:	mov    rax,QWORD PTR [rcx+0x8]
   140031f3d:	mov    QWORD PTR [rdx+0x8],rax
   140031f41:	movzx  edi,BYTE PTR [rsp+0x58]
   140031f46:	mov    rbx,QWORD PTR [rsp+0x50]
   140031f4b:	mov    eax,DWORD PTR [rsp+0xb8]
   140031f52:	lea    rcx,[rsp+0x40]
   140031f57:	mov    r9,rbp
   140031f5a:	mov    DWORD PTR [rsp+0x38],eax
   140031f5e:	mov    eax,DWORD PTR [rsp+0xb0]
   140031f65:	mov    r8d,r12d
   140031f68:	mov    DWORD PTR [rsp+0x30],eax
   140031f6c:	mov    rax,QWORD PTR [rsp+0xa8]
   140031f74:	mov    edx,r13d
   140031f77:	mov    QWORD PTR [rsp+0x28],rax
   140031f7c:	mov    eax,DWORD PTR [rsp+0xa0]
   140031f83:	mov    DWORD PTR [rsp+0x20],eax
   140031f87:	call   0x140031ab0
   140031f8c:	mov    r13,QWORD PTR [rsp+0x60]
   140031f91:	mov    r12,QWORD PTR [rsp+0x68]
   140031f96:	mov    rbp,QWORD PTR [rsp+0x80]
   140031f9e:	test   dil,dil
   140031fa1:	mov    rdi,QWORD PTR [rsp+0x90]
   140031fa9:	je     0x140031fb2
   140031fab:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140031fb2:	add    rsp,0x70
   140031fb6:	pop    rbx
   140031fb7:	ret    
   140031fb8:	int3   
   140031fb9:	int3   
   140031fba:	int3   
   140031fbb:	int3   
   140031fbc:	int3   
   140031fbd:	int3   
   140031fbe:	int3   
   140031fbf:	int3   
   140031fc0:	xor    eax,eax
   140031fc2:	test   rdx,rdx
   140031fc5:	je     0x140031fda
   140031fc7:	cmp    WORD PTR [rcx],0x0
   140031fcb:	je     0x140031fda
   140031fcd:	add    rax,0x1
   140031fd1:	add    rcx,0x2
   140031fd5:	cmp    rax,rdx
   140031fd8:	jb     0x140031fc7
   140031fda:	ret    0x0
   140031fdd:	int3   
   140031fde:	int3   
   140031fdf:	int3   
   140031fe0:	sub    rsp,0x5a8
   140031fe7:	test   BYTE PTR [rip+0x29a82],0x1        # 0x14005ba70
   140031fee:	je     0x140031ffa
   140031ff0:	mov    ecx,0xa
   140031ff5:	call   0x14002cb50
   140031ffa:	call   0x140035b50
   140031fff:	test   rax,rax
   140032002:	je     0x14003200e
   140032004:	mov    ecx,0x16
   140032009:	call   0x140035b60
   14003200e:	test   BYTE PTR [rip+0x29a5b],0x2        # 0x14005ba70
   140032015:	je     0x140032076
   140032017:	lea    rcx,[rsp+0xd0]
   14003201f:	call   QWORD PTR [rip+0x112a3]        # 0x1400432c8
   140032025:	lea    rcx,[rsp+0x30]
   14003202a:	xor    edx,edx
   14003202c:	mov    r8d,0x98
   140032032:	call   0x14002ac20
   140032037:	mov    rax,QWORD PTR [rsp+0x5a8]
   14003203f:	xor    ecx,ecx
   140032041:	mov    QWORD PTR [rsp+0x40],rax
   140032046:	lea    rax,[rsp+0x30]
   14003204b:	mov    DWORD PTR [rsp+0x30],0x40000015
   140032053:	mov    QWORD PTR [rsp+0x20],rax
   140032058:	lea    rax,[rsp+0xd0]
   140032060:	mov    QWORD PTR [rsp+0x28],rax
   140032065:	call   QWORD PTR [rip+0x1119d]        # 0x140043208
   14003206b:	lea    rcx,[rsp+0x20]
   140032070:	call   QWORD PTR [rip+0x1123a]        # 0x1400432b0
   140032076:	mov    ecx,0x3
   14003207b:	call   0x14002c480
   140032080:	int3   
   140032081:	int3   
   140032082:	int3   
   140032083:	int3   
   140032084:	int3   
   140032085:	int3   
   140032086:	int3   
   140032087:	int3   
   140032088:	int3   
   140032089:	int3   
   14003208a:	int3   
   14003208b:	int3   
   14003208c:	int3   
   14003208d:	int3   
   14003208e:	int3   
   14003208f:	int3   
   140032090:	mov    eax,DWORD PTR [rip+0x299da]        # 0x14005ba70
   140032096:	mov    r8d,edx
   140032099:	and    ecx,edx
   14003209b:	not    r8d
   14003209e:	and    r8d,eax
   1400320a1:	or     r8d,ecx
   1400320a4:	mov    DWORD PTR [rip+0x299c5],r8d        # 0x14005ba70
   1400320ab:	ret    
   1400320ac:	int3   
   1400320ad:	int3   
   1400320ae:	int3   
   1400320af:	int3   
   1400320b0:	mov    QWORD PTR [rip+0x2f7d9],rcx        # 0x140061890
   1400320b7:	ret    
   1400320b8:	int3   
   1400320b9:	int3   
   1400320ba:	int3   
   1400320bb:	int3   
   1400320bc:	int3   
   1400320bd:	int3   
   1400320be:	int3   
   1400320bf:	int3   
   1400320c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400320c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400320ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400320cf:	push   rdi
   1400320d0:	sub    rsp,0x20
   1400320d4:	xor    edi,edi
   1400320d6:	mov    rsi,rcx
   1400320d9:	or     ebp,0xffffffff
   1400320dc:	data16 data16 xchg ax,ax
   1400320e0:	mov    rcx,rsi
   1400320e3:	call   0x14002a110
   1400320e8:	test   rax,rax
   1400320eb:	mov    rbx,rax
   1400320ee:	jne    0x14003211b
   1400320f0:	cmp    DWORD PTR [rip+0x2f7a2],eax        # 0x140061898
   1400320f6:	jbe    0x14003211b
   1400320f8:	mov    ecx,edi
   1400320fa:	call   QWORD PTR [rip+0x11200]        # 0x140043300
   140032100:	lea    r11d,[rdi+0x3e8]
   140032107:	cmp    r11d,DWORD PTR [rip+0x2f78a]        # 0x140061898
   14003210e:	mov    edi,r11d
   140032111:	cmova  edi,ebp
   140032114:	cmp    edi,ebp
   140032116:	jne    0x1400320e0
   140032118:	mov    rax,rbx
   14003211b:	mov    rbx,QWORD PTR [rsp+0x30]
   140032120:	mov    rbp,QWORD PTR [rsp+0x38]
   140032125:	mov    rsi,QWORD PTR [rsp+0x40]
   14003212a:	add    rsp,0x20
   14003212e:	pop    rdi
   14003212f:	ret    
   140032130:	mov    QWORD PTR [rsp+0x8],rbx
   140032135:	mov    QWORD PTR [rsp+0x10],rbp
   14003213a:	mov    QWORD PTR [rsp+0x18],rsi
   14003213f:	mov    QWORD PTR [rsp+0x20],rdi
   140032144:	push   r12
   140032146:	sub    rsp,0x20
   14003214a:	xor    edi,edi
   14003214c:	mov    rsi,rdx
   14003214f:	mov    rbp,rcx
   140032152:	or     r12d,0xffffffff
   140032156:	data16 data16 xchg ax,ax
   14003215a:	data16 xchg ax,ax
   14003215d:	data16 xchg ax,ax
   140032160:	xor    r8d,r8d
   140032163:	mov    rdx,rsi
   140032166:	mov    rcx,rbp
   140032169:	call   0x14002c920
   14003216e:	test   rax,rax
   140032171:	mov    rbx,rax
   140032174:	jne    0x1400321a3
   140032176:	cmp    DWORD PTR [rip+0x2f71c],eax        # 0x140061898
   14003217c:	jbe    0x1400321a3
   14003217e:	mov    ecx,edi
   140032180:	call   QWORD PTR [rip+0x1117a]        # 0x140043300
   140032186:	lea    r11d,[rdi+0x3e8]
   14003218d:	cmp    r11d,DWORD PTR [rip+0x2f704]        # 0x140061898
   140032194:	mov    edi,r11d
   140032197:	cmova  edi,r12d
   14003219b:	cmp    edi,r12d
   14003219e:	jne    0x140032160
   1400321a0:	mov    rax,rbx
   1400321a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400321a8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400321ad:	mov    rsi,QWORD PTR [rsp+0x40]
   1400321b2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400321b7:	add    rsp,0x20
   1400321bb:	pop    r12
   1400321bd:	ret    
   1400321be:	int3   
   1400321bf:	int3   
   1400321c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400321c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400321ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400321cf:	mov    QWORD PTR [rsp+0x20],rdi
   1400321d4:	push   r12
   1400321d6:	sub    rsp,0x20
   1400321da:	xor    esi,esi
   1400321dc:	mov    rdi,rdx
   1400321df:	mov    rbp,rcx
   1400321e2:	or     r12d,0xffffffff
   1400321e6:	data16 data16 xchg ax,ax
   1400321ea:	data16 xchg ax,ax
   1400321ed:	data16 xchg ax,ax
   1400321f0:	mov    rdx,rdi
   1400321f3:	mov    rcx,rbp
   1400321f6:	call   0x14002beb0
   1400321fb:	test   rax,rax
   1400321fe:	mov    rbx,rax
   140032201:	jne    0x140032235
   140032203:	test   rdi,rdi
   140032206:	je     0x140032235
   140032208:	cmp    DWORD PTR [rip+0x2f68a],eax        # 0x140061898
   14003220e:	jbe    0x140032235
   140032210:	mov    ecx,esi
   140032212:	call   QWORD PTR [rip+0x110e8]        # 0x140043300
   140032218:	lea    r11d,[rsi+0x3e8]
   14003221f:	cmp    r11d,DWORD PTR [rip+0x2f672]        # 0x140061898
   140032226:	mov    esi,r11d
   140032229:	cmova  esi,r12d
   14003222d:	cmp    esi,r12d
   140032230:	jne    0x1400321f0
   140032232:	mov    rax,rbx
   140032235:	mov    rbx,QWORD PTR [rsp+0x30]
   14003223a:	mov    rbp,QWORD PTR [rsp+0x38]
   14003223f:	mov    rsi,QWORD PTR [rsp+0x40]
   140032244:	mov    rdi,QWORD PTR [rsp+0x48]
   140032249:	add    rsp,0x20
   14003224d:	pop    r12
   14003224f:	ret    
   140032250:	mov    QWORD PTR [rsp+0x8],rbx
   140032255:	mov    QWORD PTR [rsp+0x10],rbp
   14003225a:	mov    QWORD PTR [rsp+0x18],rsi
   14003225f:	push   rdi
   140032260:	push   r12
   140032262:	push   r13
   140032264:	sub    rsp,0x20
   140032268:	xor    esi,esi
   14003226a:	mov    rdi,r8
   14003226d:	mov    rbp,rdx
   140032270:	or     r13d,0xffffffff
   140032274:	mov    r12,rcx
   140032277:	data16 xchg ax,ax
   14003227a:	data16 xchg ax,ax
   14003227d:	data16 xchg ax,ax
   140032280:	mov    r8,rdi
   140032283:	mov    rdx,rbp
   140032286:	mov    rcx,r12
   140032289:	call   0x14002bfa0
   14003228e:	test   rax,rax
   140032291:	mov    rbx,rax
   140032294:	jne    0x1400322c8
   140032296:	test   rdi,rdi
   140032299:	je     0x1400322c8
   14003229b:	cmp    DWORD PTR [rip+0x2f5f7],eax        # 0x140061898
   1400322a1:	jbe    0x1400322c8
   1400322a3:	mov    ecx,esi
   1400322a5:	call   QWORD PTR [rip+0x11055]        # 0x140043300
   1400322ab:	lea    r11d,[rsi+0x3e8]
   1400322b2:	cmp    r11d,DWORD PTR [rip+0x2f5df]        # 0x140061898
   1400322b9:	mov    esi,r11d
   1400322bc:	cmova  esi,r13d
   1400322c0:	cmp    esi,r13d
   1400322c3:	jne    0x140032280
   1400322c5:	mov    rax,rbx
   1400322c8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400322cd:	mov    rbp,QWORD PTR [rsp+0x48]
   1400322d2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400322d7:	add    rsp,0x20
   1400322db:	pop    r13
   1400322dd:	pop    r12
   1400322df:	pop    rdi
   1400322e0:	ret    
   1400322e1:	int3   
   1400322e2:	int3   
   1400322e3:	int3   
   1400322e4:	int3   
   1400322e5:	int3   
   1400322e6:	int3   
   1400322e7:	int3   
   1400322e8:	int3   
   1400322e9:	int3   
   1400322ea:	int3   
   1400322eb:	int3   
   1400322ec:	int3   
   1400322ed:	int3   
   1400322ee:	int3   
   1400322ef:	int3   
   1400322f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400322f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400322fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400322ff:	push   rdi
   140032300:	sub    rsp,0x20
   140032304:	test   rcx,rcx
   140032307:	mov    rsi,r8
   14003230a:	mov    rbp,rdx
   14003230d:	mov    rbx,rcx
   140032310:	jne    0x140032317
   140032312:	call   0x140033d20
   140032317:	movsxd rax,DWORD PTR [rbx+0x18]
   14003231b:	mov    edi,DWORD PTR [rbx+0x14]
   14003231e:	add    rax,QWORD PTR [rbp+0x8]
   140032322:	jne    0x140032329
   140032324:	call   0x140033d20
   140032329:	xor    ecx,ecx
   14003232b:	test   edi,edi
   14003232d:	je     0x140032368
   14003232f:	mov    r8,QWORD PTR [rbp+0x8]
   140032333:	movsxd r9,DWORD PTR [rbx+0x18]
   140032337:	lea    rdx,[r8+r9*1]
   14003233b:	xchg   ax,ax
   14003233d:	data16 xchg ax,ax
   140032340:	movsxd rax,DWORD PTR [rdx]
   140032343:	add    rax,r8
   140032346:	cmp    rsi,rax
   140032349:	jl     0x140032356
   14003234b:	add    ecx,0x1
   14003234e:	add    rdx,0x8
   140032352:	cmp    ecx,edi
   140032354:	jb     0x140032340
   140032356:	test   ecx,ecx
   140032358:	je     0x140032368
   14003235a:	lea    eax,[rcx-0x1]
   14003235d:	lea    rdx,[r9+rax*8]
   140032361:	mov    eax,DWORD PTR [rdx+r8*1+0x4]
   140032366:	jmp    0x14003236b
   140032368:	or     eax,0xffffffff
   14003236b:	mov    rbx,QWORD PTR [rsp+0x30]
   140032370:	mov    rbp,QWORD PTR [rsp+0x38]
   140032375:	mov    rsi,QWORD PTR [rsp+0x40]
   14003237a:	add    rsp,0x20
   14003237e:	pop    rdi
   14003237f:	ret    
   140032380:	mov    QWORD PTR [rsp+0x8],rbx
   140032385:	mov    QWORD PTR [rsp+0x10],rbp
   14003238a:	mov    QWORD PTR [rsp+0x18],rsi
   14003238f:	push   rdi
   140032390:	sub    rsp,0x20
   140032394:	test   rcx,rcx
   140032397:	mov    rbp,QWORD PTR [rdx]
   14003239a:	mov    rsi,rdx
   14003239d:	mov    rbx,rcx
   1400323a0:	jne    0x1400323a7
   1400323a2:	call   0x140033d20
   1400323a7:	movsxd rax,DWORD PTR [rbx+0x18]
   1400323ab:	mov    edi,DWORD PTR [rbx+0x14]
   1400323ae:	add    rax,QWORD PTR [rsi+0x8]
   1400323b2:	jne    0x1400323b9
   1400323b4:	call   0x140033d20
   1400323b9:	xor    ecx,ecx
   1400323bb:	test   edi,edi
   1400323bd:	je     0x1400323f8
   1400323bf:	mov    r8,QWORD PTR [rsi+0x8]
   1400323c3:	movsxd r9,DWORD PTR [rbx+0x18]
   1400323c7:	lea    rdx,[r8+r9*1]
   1400323cb:	xchg   ax,ax
   1400323cd:	data16 xchg ax,ax
   1400323d0:	movsxd rax,DWORD PTR [rdx]
   1400323d3:	add    rax,r8
   1400323d6:	cmp    rbp,rax
   1400323d9:	jl     0x1400323e6
   1400323db:	add    ecx,0x1
   1400323de:	add    rdx,0x8
   1400323e2:	cmp    ecx,edi
   1400323e4:	jb     0x1400323d0
   1400323e6:	test   ecx,ecx
   1400323e8:	je     0x1400323f8
   1400323ea:	lea    eax,[rcx-0x1]
   1400323ed:	lea    rcx,[r8+rax*8]
   1400323f1:	mov    eax,DWORD PTR [rcx+r9*1+0x4]
   1400323f6:	jmp    0x1400323fb
   1400323f8:	or     eax,0xffffffff
   1400323fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140032400:	mov    rbp,QWORD PTR [rsp+0x38]
   140032405:	mov    rsi,QWORD PTR [rsp+0x40]
   14003240a:	add    rsp,0x20
   14003240e:	pop    rdi
   14003240f:	ret    
   140032410:	mov    QWORD PTR [rsp+0x18],rbp
   140032415:	push   rdi
   140032416:	sub    rsp,0x20
   14003241a:	movsxd r9,DWORD PTR [r8+0x1c]
   14003241e:	mov    rax,QWORD PTR [rcx]
   140032421:	mov    rdi,r8
   140032424:	mov    eax,DWORD PTR [r9+rax*1]
   140032428:	mov    rbp,rdx
   14003242b:	cmp    eax,0xfffffffe
   14003242e:	jne    0x140032497
   140032430:	movsxd rax,DWORD PTR [r8+0x18]
   140032434:	mov    QWORD PTR [rsp+0x30],rbx
   140032439:	mov    ebx,DWORD PTR [r8+0x14]
   14003243d:	add    rax,QWORD PTR [rdx+0x8]
   140032441:	mov    QWORD PTR [rsp+0x38],rsi
   140032446:	mov    rsi,QWORD PTR [rdx]
   140032449:	jne    0x140032450
   14003244b:	call   0x140033d20
   140032450:	xor    ecx,ecx
   140032452:	test   ebx,ebx
   140032454:	je     0x14003248a
   140032456:	mov    r8,QWORD PTR [rbp+0x8]
   14003245a:	movsxd r9,DWORD PTR [rdi+0x18]
   14003245e:	lea    rdx,[r8+r9*1]
   140032462:	movsxd rax,DWORD PTR [rdx]
   140032465:	add    rax,r8
   140032468:	cmp    rsi,rax
   14003246b:	jl     0x140032478
   14003246d:	add    ecx,0x1
   140032470:	add    rdx,0x8
   140032474:	cmp    ecx,ebx
   140032476:	jb     0x140032462
   140032478:	test   ecx,ecx
   14003247a:	je     0x14003248a
   14003247c:	lea    eax,[rcx-0x1]
   14003247f:	lea    rdx,[r9+rax*8]
   140032483:	mov    eax,DWORD PTR [rdx+r8*1+0x4]
   140032488:	jmp    0x14003248d
   14003248a:	or     eax,0xffffffff
   14003248d:	mov    rsi,QWORD PTR [rsp+0x38]
   140032492:	mov    rbx,QWORD PTR [rsp+0x30]
   140032497:	mov    rbp,QWORD PTR [rsp+0x40]
   14003249c:	add    rsp,0x20
   1400324a0:	pop    rdi
   1400324a1:	ret    
   1400324a2:	int3   
   1400324a3:	int3   
   1400324a4:	int3   
   1400324a5:	int3   
   1400324a6:	int3   
   1400324a7:	int3   
   1400324a8:	int3   
   1400324a9:	int3   
   1400324aa:	int3   
   1400324ab:	int3   
   1400324ac:	int3   
   1400324ad:	int3   
   1400324ae:	int3   
   1400324af:	int3   
   1400324b0:	movsxd rdx,DWORD PTR [r8+0x1c]
   1400324b4:	mov    rax,QWORD PTR [rcx]
   1400324b7:	mov    DWORD PTR [rdx+rax*1],r9d
   1400324bb:	ret    
   1400324bc:	int3   
   1400324bd:	int3   
   1400324be:	int3   
   1400324bf:	int3   
   1400324c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400324c5:	push   rdi
   1400324c6:	sub    rsp,0x20
   1400324ca:	mov    edi,r9d
   1400324cd:	lea    r9,[rsp+0x40]
   1400324d2:	mov    rbx,r8
   1400324d5:	call   0x14002ad30
   1400324da:	mov    rcx,QWORD PTR [rax]
   1400324dd:	movsxd rax,DWORD PTR [rbx+0x1c]
   1400324e1:	mov    QWORD PTR [rsp+0x40],rcx
   1400324e6:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   1400324ea:	jle    0x1400324f0
   1400324ec:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   1400324f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400324f5:	add    rsp,0x20
   1400324f9:	pop    rdi
   1400324fa:	ret    
   1400324fb:	int3   
   1400324fc:	int3   
   1400324fd:	int3   
   1400324fe:	int3   
   1400324ff:	int3   
   140032500:	rex push rbx
   140032502:	sub    rsp,0x20
   140032506:	lea    r9,[rsp+0x40]
   14003250b:	mov    rbx,r8
   14003250e:	call   0x14002ad30
   140032513:	mov    rcx,QWORD PTR [rax]
   140032516:	movsxd rax,DWORD PTR [rbx+0x1c]
   14003251a:	mov    QWORD PTR [rsp+0x40],rcx
   14003251f:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   140032523:	add    rsp,0x20
   140032527:	pop    rbx
   140032528:	ret    
   140032529:	int3   
   14003252a:	int3   
   14003252b:	int3   
   14003252c:	int3   
   14003252d:	int3   
   14003252e:	int3   
   14003252f:	int3   
   140032530:	lea    rax,[rip+0x166e1]        # 0x140048c18
   140032537:	mov    QWORD PTR [rcx],rax
   14003253a:	jmp    0x14003a110
   14003253f:	int3   
   140032540:	mov    QWORD PTR [rsp+0x8],rbx
   140032545:	push   rdi
   140032546:	sub    rsp,0x20
   14003254a:	lea    rax,[rip+0x166c7]        # 0x140048c18
   140032551:	mov    ebx,edx
   140032553:	mov    rdi,rcx
   140032556:	mov    QWORD PTR [rcx],rax
   140032559:	call   0x14003a110
   14003255e:	test   bl,0x1
   140032561:	je     0x14003256b
   140032563:	mov    rcx,rdi
   140032566:	call   0x14001490c
   14003256b:	mov    rax,rdi
   14003256e:	mov    rbx,QWORD PTR [rsp+0x30]
   140032573:	add    rsp,0x20
   140032577:	pop    rdi
   140032578:	ret    
   140032579:	int3   
   14003257a:	int3   
   14003257b:	int3   
   14003257c:	int3   
   14003257d:	int3   
   14003257e:	int3   
   14003257f:	int3   
   140032580:	sub    rsp,0x28
   140032584:	mov    rax,QWORD PTR [rcx]
   140032587:	mov    ecx,DWORD PTR [rax]
   140032589:	cmp    ecx,0xe0434f4d
   14003258f:	je     0x1400325ae
   140032591:	cmp    ecx,0xe06d7363
   140032597:	jne    0x1400325c8
   140032599:	call   0x14002e210
   14003259e:	mov    DWORD PTR [rax+0x100],0x0
   1400325a8:	call   0x140033cf0
   1400325ad:	int3   
   1400325ae:	call   0x14002e210
   1400325b3:	cmp    DWORD PTR [rax+0x100],0x0
   1400325ba:	jle    0x1400325c8
   1400325bc:	call   0x14002e210
   1400325c1:	add    DWORD PTR [rax+0x100],0xffffffff
   1400325c8:	xor    eax,eax
   1400325ca:	add    rsp,0x28
   1400325ce:	ret    
   1400325cf:	int3   
   1400325d0:	mov    DWORD PTR [rsp+0x20],r9d
   1400325d5:	mov    QWORD PTR [rsp+0x18],r8
   1400325da:	mov    QWORD PTR [rsp+0x10],rdx
   1400325df:	mov    QWORD PTR [rsp+0x8],rcx
   1400325e4:	push   rbx
   1400325e5:	push   rsi
   1400325e6:	push   rdi
   1400325e7:	push   r12
   1400325e9:	push   r13
   1400325eb:	push   r14
   1400325ed:	push   r15
   1400325ef:	sub    rsp,0x30
   1400325f3:	mov    r13d,r9d
   1400325f6:	mov    rsi,r8
   1400325f9:	mov    rbx,rdx
   1400325fc:	mov    r14,rcx
   1400325ff:	call   0x140032410
   140032604:	mov    edi,eax
   140032606:	call   0x14002ae40
   14003260b:	mov    r15,rax
   14003260e:	mov    QWORD PTR [rsp+0x28],rax
   140032613:	call   0x14002e210
   140032618:	add    DWORD PTR [rax+0x100],0x1
   14003261f:	nop
   140032620:	cmp    edi,0xffffffff
   140032623:	je     0x140032718
   140032629:	cmp    edi,r13d
   14003262c:	jle    0x140032718
   140032632:	cmp    edi,0xffffffff
   140032635:	jle    0x14003263c
   140032637:	cmp    edi,DWORD PTR [rsi+0x4]
   14003263a:	jl     0x140032641
   14003263c:	call   0x140033d20
   140032641:	movsxd r12,edi
   140032644:	call   0x14002ae40
   140032649:	movsxd rcx,DWORD PTR [rsi+0x8]
   14003264d:	lea    rax,[rax+r12*8]
   140032651:	mov    edi,DWORD PTR [rcx+rax*1]
   140032654:	mov    DWORD PTR [rsp+0x20],edi
   140032658:	call   0x14002ae40
   14003265d:	movsxd rcx,DWORD PTR [rsi+0x8]
   140032661:	lea    rax,[rax+r12*8]
   140032665:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14003266a:	je     0x1400326ea
   14003266c:	call   0x14002ae40
   140032671:	movsxd rcx,DWORD PTR [rsi+0x8]
   140032675:	lea    rax,[rax+r12*8]
   140032679:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14003267e:	call   0x14002ae40
   140032683:	lea    rcx,[rax+rbx*1]
   140032687:	test   rcx,rcx
   14003268a:	je     0x1400326ea
   14003268c:	mov    r9d,edi
   14003268f:	mov    r8,rsi
   140032692:	mov    rdx,QWORD PTR [rsp+0x78]
   140032697:	mov    rcx,r14
   14003269a:	call   0x1400324b0
   14003269f:	call   0x14002ae40
   1400326a4:	movsxd rcx,DWORD PTR [rsi+0x8]
   1400326a8:	lea    rax,[rax+r12*8]
   1400326ac:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   1400326b1:	je     0x1400326cf
   1400326b3:	call   0x14002ae40
   1400326b8:	movsxd rcx,DWORD PTR [rsi+0x8]
   1400326bc:	lea    rax,[rax+r12*8]
   1400326c0:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   1400326c5:	call   0x14002ae40
   1400326ca:	add    rax,rbx
   1400326cd:	jmp    0x1400326d1
   1400326cf:	xor    eax,eax
   1400326d1:	mov    r8d,0x103
   1400326d7:	mov    rdx,r14
   1400326da:	mov    rcx,rax
   1400326dd:	call   0x140041b30
   1400326e2:	mov    rcx,r15
   1400326e5:	call   0x14002ae80
   1400326ea:	jmp    0x14003270a
   1400326ec:	mov    r13d,DWORD PTR [rsp+0x88]
   1400326f4:	mov    rsi,QWORD PTR [rsp+0x80]
   1400326fc:	mov    r14,QWORD PTR [rsp+0x70]
   140032701:	mov    r15,QWORD PTR [rsp+0x28]
   140032706:	mov    edi,DWORD PTR [rsp+0x20]
   14003270a:	mov    DWORD PTR [rsp+0x24],edi
   14003270e:	mov    rbx,QWORD PTR [rsp+0x78]
   140032713:	jmp    0x140032620
   140032718:	call   0x14002e210
   14003271d:	cmp    DWORD PTR [rax+0x100],0x0
   140032724:	jle    0x140032732
   140032726:	call   0x14002e210
   14003272b:	add    DWORD PTR [rax+0x100],0xffffffff
   140032732:	cmp    edi,0xffffffff
   140032735:	je     0x140032741
   140032737:	cmp    edi,r13d
   14003273a:	jle    0x140032741
   14003273c:	call   0x140033d20
   140032741:	mov    r9d,edi
   140032744:	mov    r8,rsi
   140032747:	mov    rdx,rbx
   14003274a:	mov    rcx,r14
   14003274d:	call   0x1400324b0
   140032752:	add    rsp,0x30
   140032756:	pop    r15
   140032758:	pop    r14
   14003275a:	pop    r13
   14003275c:	pop    r12
   14003275e:	pop    rdi
   14003275f:	pop    rsi
   140032760:	pop    rbx
   140032761:	ret    
   140032762:	int3   
   140032763:	int3   
   140032764:	int3   
   140032765:	int3   
   140032766:	int3   
   140032767:	int3   
   140032768:	int3   
   140032769:	int3   
   14003276a:	int3   
   14003276b:	int3   
   14003276c:	int3   
   14003276d:	int3   
   14003276e:	int3   
   14003276f:	int3   
   140032770:	rex push rbp
   140032772:	sub    rsp,0x20
   140032776:	mov    rbp,rdx
   140032779:	call   0x140032580
   14003277e:	add    rsp,0x20
   140032782:	pop    rbp
   140032783:	ret    
   140032784:	int3   
   140032785:	int3   
   140032786:	int3   
   140032787:	int3   
   140032788:	int3   
   140032789:	int3   
   14003278a:	int3   
   14003278b:	int3   
   14003278c:	int3   
   14003278d:	int3   
   14003278e:	int3   
   14003278f:	int3   
   140032790:	rex push rbp
   140032792:	sub    rsp,0x20
   140032796:	mov    rbp,rdx
   140032799:	call   0x14002e210
   14003279e:	cmp    DWORD PTR [rax+0x100],0x0
   1400327a5:	jle    0x1400327b3
   1400327a7:	call   0x14002e210
   1400327ac:	add    DWORD PTR [rax+0x100],0xffffffff
   1400327b3:	add    rsp,0x20
   1400327b7:	pop    rbp
   1400327b8:	ret    
   1400327b9:	int3   
   1400327ba:	int3   
   1400327bb:	int3   
   1400327bc:	int3   
   1400327bd:	int3   
   1400327be:	int3   
   1400327bf:	int3   
   1400327c0:	rex push rbx
   1400327c2:	sub    rsp,0x20
   1400327c6:	mov    r9,QWORD PTR [rcx]
   1400327c9:	mov    DWORD PTR [r8],0x0
   1400327d0:	mov    rbx,r8
   1400327d3:	cmp    DWORD PTR [r9],0xe06d7363
   1400327da:	jne    0x140032864
   1400327e0:	cmp    DWORD PTR [r9+0x18],0x4
   1400327e5:	jne    0x140032811
   1400327e7:	mov    eax,DWORD PTR [r9+0x20]
   1400327eb:	cmp    eax,0x19930520
   1400327f0:	je     0x140032800
   1400327f2:	cmp    eax,0x19930521
   1400327f7:	je     0x140032800
   1400327f9:	cmp    eax,0x19930522
   1400327fe:	jne    0x140032811
   140032800:	mov    rax,QWORD PTR [rdx+0x28]
   140032804:	cmp    QWORD PTR [r9+0x28],rax
   140032808:	jne    0x140032811
   14003280a:	mov    DWORD PTR [r8],0x1
   140032811:	cmp    DWORD PTR [r9],0xe06d7363
   140032818:	jne    0x140032864
   14003281a:	cmp    DWORD PTR [r9+0x18],0x4
   14003281f:	jne    0x140032864
   140032821:	mov    ecx,DWORD PTR [r9+0x20]
   140032825:	cmp    ecx,0x19930520
   14003282b:	je     0x14003283d
   14003282d:	cmp    ecx,0x19930521
   140032833:	je     0x14003283d
   140032835:	cmp    ecx,0x19930522
   14003283b:	jne    0x140032864
   14003283d:	cmp    QWORD PTR [r9+0x30],0x0
   140032842:	jne    0x140032864
   140032844:	call   0x14002e210
   140032849:	mov    DWORD PTR [rax+0x2d0],0x1
   140032853:	mov    DWORD PTR [rbx],0x1
   140032859:	mov    eax,0x1
   14003285e:	add    rsp,0x20
   140032862:	pop    rbx
   140032863:	ret    
   140032864:	xor    eax,eax
   140032866:	add    rsp,0x20
   14003286a:	pop    rbx
   14003286b:	ret    
   14003286c:	int3   
   14003286d:	int3   
   14003286e:	int3   
   14003286f:	int3   
   140032870:	test   rcx,rcx
   140032873:	je     0x1400328b2
   140032875:	mov    BYTE PTR [rsp+0x10],dl
   140032879:	sub    rsp,0x28
   14003287d:	cmp    DWORD PTR [rcx],0xe06d7363
   140032883:	jne    0x1400328ae
   140032885:	mov    rax,QWORD PTR [rcx+0x30]
   140032889:	test   rax,rax
   14003288c:	je     0x1400328ae
   14003288e:	movsxd rdx,DWORD PTR [rax+0x4]
   140032892:	test   edx,edx
   140032894:	je     0x1400328ae
   140032896:	mov    rax,rdx
   140032899:	mov    rdx,QWORD PTR [rcx+0x38]
   14003289d:	add    rdx,rax
   1400328a0:	mov    rcx,QWORD PTR [rcx+0x28]
   1400328a4:	call   rdx
   1400328a6:	jmp    0x1400328ae
   1400328a8:	call   0x140033cf0
   1400328ad:	nop
   1400328ae:	add    rsp,0x28
   1400328b2:	ret    0x0
   1400328b5:	int3   
   1400328b6:	int3   
   1400328b7:	int3   
   1400328b8:	int3   
   1400328b9:	int3   
   1400328ba:	int3   
   1400328bb:	int3   
   1400328bc:	int3   
   1400328bd:	int3   
   1400328be:	int3   
   1400328bf:	int3   
   1400328c0:	rex push rbp
   1400328c2:	sub    rsp,0x20
   1400328c6:	mov    rbp,rdx
   1400328c9:	xor    eax,eax
   1400328cb:	cmp    BYTE PTR [rbp+0x38],al
   1400328ce:	setne  al
   1400328d1:	add    rsp,0x20
   1400328d5:	pop    rbp
   1400328d6:	ret    
   1400328d7:	int3   
   1400328d8:	int3   
   1400328d9:	int3   
   1400328da:	int3   
   1400328db:	int3   
   1400328dc:	int3   
   1400328dd:	int3   
   1400328de:	int3   
   1400328df:	int3   
   1400328e0:	movsxd rax,DWORD PTR [rdx]
   1400328e3:	add    rax,rcx
   1400328e6:	cmp    DWORD PTR [rdx+0x4],0x0
   1400328ea:	jl     0x140032902
   1400328ec:	movsxd r9,DWORD PTR [rdx+0x4]
   1400328f0:	movsxd rdx,DWORD PTR [rdx+0x8]
   1400328f4:	mov    rcx,QWORD PTR [r9+rcx*1]
   1400328f8:	movsxd r8,DWORD PTR [rdx+rcx*1]
   1400328fc:	add    r8,r9
   1400328ff:	add    rax,r8
   140032902:	ret    0x0
   140032905:	int3   
   140032906:	int3   
   140032907:	int3   
   140032908:	int3   
   140032909:	int3   
   14003290a:	int3   
   14003290b:	int3   
   14003290c:	int3   
   14003290d:	int3   
   14003290e:	int3   
   14003290f:	int3   
   140032910:	mov    QWORD PTR [rsp+0x10],rdx
   140032915:	mov    QWORD PTR [rsp+0x8],rcx
   14003291a:	push   rbx
   14003291b:	push   rdi
   14003291c:	sub    rsp,0x48
   140032920:	test   rdx,rdx
   140032923:	mov    rbx,rdx
   140032926:	mov    rdi,rcx
   140032929:	jne    0x140032936
   14003292b:	call   0x140033d20
   140032930:	call   0x140033cf0
   140032935:	int3   
   140032936:	mov    QWORD PTR [rsp+0x78],rbp
   14003293b:	xor    bpl,bpl
   14003293e:	mov    QWORD PTR [rsp+0x28],r14
   140032943:	xor    r14d,r14d
   140032946:	mov    BYTE PTR [rsp+0x70],bpl
   14003294b:	cmp    DWORD PTR [rdx],r14d
   14003294e:	jle    0x140032b40
   140032954:	mov    QWORD PTR [rsp+0x40],rsi
   140032959:	mov    QWORD PTR [rsp+0x38],r12
   14003295e:	mov    QWORD PTR [rsp+0x30],r13
   140032963:	mov    QWORD PTR [rsp+0x20],r15
   140032968:	xor    r15d,r15d
   14003296b:	xchg   ax,ax
   14003296d:	data16 xchg ax,ax
   140032970:	call   0x14002ae60
   140032975:	mov    r11,rax
   140032978:	mov    rax,QWORD PTR [rdi+0x30]
   14003297c:	movsxd rcx,DWORD PTR [rax+0xc]
   140032980:	lea    r12,[r11+rcx*1+0x4]
   140032985:	call   0x14002ae60
   14003298a:	mov    r11,rax
   14003298d:	mov    rax,QWORD PTR [rdi+0x30]
   140032991:	movsxd rcx,DWORD PTR [rax+0xc]
   140032995:	mov    esi,DWORD PTR [r11+rcx*1]
   140032999:	test   esi,esi
   14003299b:	jle    0x140032b1b
   1400329a1:	call   0x14002ae60
   1400329a6:	mov    r13,QWORD PTR [rdi+0x30]
   1400329aa:	mov    rbp,rax
   1400329ad:	movsxd rax,DWORD PTR [r12]
   1400329b1:	add    rbp,rax
   1400329b4:	call   0x14002ae40
   1400329b9:	movsxd rdi,DWORD PTR [rbx+0x4]
   1400329bd:	add    rax,r15
   1400329c0:	add    rdi,rax
   1400329c3:	cmp    DWORD PTR [rdi+0x4],0x0
   1400329c7:	je     0x140032afd
   1400329cd:	movsxd rbx,DWORD PTR [rdi+0x4]
   1400329d1:	call   0x14002ae40
   1400329d6:	mov    r11,rax
   1400329d9:	add    r11,rbx
   1400329dc:	je     0x140032ad0
   1400329e2:	test   ebx,ebx
   1400329e4:	je     0x1400329f5
   1400329e6:	movsxd rbx,DWORD PTR [rdi+0x4]
   1400329ea:	call   0x14002ae40
   1400329ef:	lea    r11,[rbx+rax*1]
   1400329f3:	jmp    0x1400329f8
   1400329f5:	xor    r11d,r11d
   1400329f8:	cmp    BYTE PTR [r11+0x10],0x0
   1400329fd:	je     0x140032abc
   140032a03:	test   ebx,ebx
   140032a05:	je     0x140032a18
   140032a07:	call   0x14002ae40
   140032a0c:	mov    rbx,rax
   140032a0f:	movsxd rax,DWORD PTR [rdi+0x4]
   140032a13:	add    rbx,rax
   140032a16:	jmp    0x140032a1a
   140032a18:	xor    ebx,ebx
   140032a1a:	call   0x14002ae60
   140032a1f:	mov    r11,rax
   140032a22:	movsxd rax,DWORD PTR [rbp+0x4]
   140032a26:	add    r11,rax
   140032a29:	cmp    rbx,r11
   140032a2c:	je     0x140032a78
   140032a2e:	cmp    DWORD PTR [rdi+0x4],0x0
   140032a32:	je     0x140032a45
   140032a34:	call   0x14002ae40
   140032a39:	mov    rbx,rax
   140032a3c:	movsxd rax,DWORD PTR [rdi+0x4]
   140032a40:	add    rbx,rax
   140032a43:	jmp    0x140032a47
   140032a45:	xor    ebx,ebx
   140032a47:	call   0x14002ae60
   140032a4c:	mov    r11,rax
   140032a4f:	movsxd rax,DWORD PTR [rbp+0x4]
   140032a53:	lea    r8,[r11+rax*1+0x10]
   140032a58:	lea    rax,[rbx+0x10]
   140032a5c:	sub    r8,rax
   140032a5f:	nop
   140032a60:	movzx  edx,BYTE PTR [rax]
   140032a63:	movzx  ecx,BYTE PTR [rax+r8*1]
   140032a68:	sub    edx,ecx
   140032a6a:	jne    0x140032a74
   140032a6c:	add    rax,0x1
   140032a70:	test   ecx,ecx
   140032a72:	jne    0x140032a60
   140032a74:	test   edx,edx
   140032a76:	jne    0x140032aa2
   140032a78:	test   BYTE PTR [rbp+0x0],0x2
   140032a7c:	je     0x140032a83
   140032a7e:	test   BYTE PTR [rdi],0x8
   140032a81:	je     0x140032aa2
   140032a83:	mov    eax,DWORD PTR [r13+0x0]
   140032a87:	test   al,0x1
   140032a89:	je     0x140032a90
   140032a8b:	test   BYTE PTR [rdi],0x1
   140032a8e:	je     0x140032aa2
   140032a90:	test   al,0x4
   140032a92:	je     0x140032a99
   140032a94:	test   BYTE PTR [rdi],0x4
   140032a97:	je     0x140032aa2
   140032a99:	test   al,0x2
   140032a9b:	je     0x140032af8
   140032a9d:	test   BYTE PTR [rdi],0x2
   140032aa0:	jne    0x140032ae4
   140032aa2:	sub    esi,0x1
   140032aa5:	add    r12,0x4
   140032aa9:	test   esi,esi
   140032aab:	jle    0x140032b0c
   140032aad:	mov    rbx,QWORD PTR [rsp+0x68]
   140032ab2:	mov    rdi,QWORD PTR [rsp+0x60]
   140032ab7:	jmp    0x1400329a1
   140032abc:	mov    rbx,QWORD PTR [rsp+0x68]
   140032ac1:	mov    rdi,QWORD PTR [rsp+0x60]
   140032ac6:	mov    bpl,0x1
   140032ac9:	mov    BYTE PTR [rsp+0x70],bpl
   140032ace:	jmp    0x140032b1b
   140032ad0:	mov    rbx,QWORD PTR [rsp+0x68]
   140032ad5:	mov    rdi,QWORD PTR [rsp+0x60]
   140032ada:	mov    bpl,0x1
   140032add:	mov    BYTE PTR [rsp+0x70],bpl
   140032ae2:	jmp    0x140032b1b
   140032ae4:	mov    rbx,QWORD PTR [rsp+0x68]
   140032ae9:	mov    rdi,QWORD PTR [rsp+0x60]
   140032aee:	mov    bpl,0x1
   140032af1:	mov    BYTE PTR [rsp+0x70],bpl
   140032af6:	jmp    0x140032b1b
   140032af8:	mov    rbx,QWORD PTR [rsp+0x68]
   140032afd:	mov    rdi,QWORD PTR [rsp+0x60]
   140032b02:	mov    bpl,0x1
   140032b05:	mov    BYTE PTR [rsp+0x70],bpl
   140032b0a:	jmp    0x140032b1b
   140032b0c:	mov    rbx,QWORD PTR [rsp+0x68]
   140032b11:	mov    rdi,QWORD PTR [rsp+0x60]
   140032b16:	movzx  ebp,BYTE PTR [rsp+0x70]
   140032b1b:	add    r14d,0x1
   140032b1f:	add    r15,0x14
   140032b23:	cmp    r14d,DWORD PTR [rbx]
   140032b26:	jl     0x140032970
   140032b2c:	mov    r15,QWORD PTR [rsp+0x20]
   140032b31:	mov    r13,QWORD PTR [rsp+0x30]
   140032b36:	mov    r12,QWORD PTR [rsp+0x38]
   140032b3b:	mov    rsi,QWORD PTR [rsp+0x40]
   140032b40:	mov    r14,QWORD PTR [rsp+0x28]
   140032b45:	mov    al,bpl
   140032b48:	mov    rbp,QWORD PTR [rsp+0x78]
   140032b4d:	add    rsp,0x48
   140032b51:	pop    rdi
   140032b52:	pop    rbx
   140032b53:	ret    
   140032b54:	int3   
   140032b55:	int3   
   140032b56:	int3   
   140032b57:	int3   
   140032b58:	int3   
   140032b59:	int3   
   140032b5a:	int3   
   140032b5b:	int3   
   140032b5c:	int3   
   140032b5d:	int3   
   140032b5e:	int3   
   140032b5f:	int3   
   140032b60:	mov    QWORD PTR [rsp+0x8],rbx
   140032b65:	mov    QWORD PTR [rsp+0x10],rbp
   140032b6a:	mov    QWORD PTR [rsp+0x18],rsi
   140032b6f:	push   rdi
   140032b70:	sub    rsp,0x20
   140032b74:	xor    edi,edi
   140032b76:	mov    rbp,rcx
   140032b79:	cmp    DWORD PTR [rcx],edi
   140032b7b:	jle    0x140032bcf
   140032b7d:	xor    esi,esi
   140032b7f:	nop
   140032b80:	call   0x14002ae40
   140032b85:	movsxd rcx,DWORD PTR [rbp+0x4]
   140032b89:	add    rax,rsi
   140032b8c:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140032b91:	je     0x140032bae
   140032b93:	call   0x14002ae40
   140032b98:	movsxd rcx,DWORD PTR [rbp+0x4]
   140032b9c:	add    rax,rsi
   140032b9f:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140032ba4:	call   0x14002ae40
   140032ba9:	add    rax,rbx
   140032bac:	jmp    0x140032bb0
   140032bae:	xor    eax,eax
   140032bb0:	lea    rdx,[rip+0x28ec9]        # 0x14005ba80
   140032bb7:	mov    rcx,rax
   140032bba:	call   0x140029b00
   140032bbf:	test   al,al
   140032bc1:	jne    0x140032be6
   140032bc3:	add    edi,0x1
   140032bc6:	add    rsi,0x14
   140032bca:	cmp    edi,DWORD PTR [rbp+0x0]
   140032bcd:	jl     0x140032b80
   140032bcf:	xor    al,al
   140032bd1:	mov    rbx,QWORD PTR [rsp+0x30]
   140032bd6:	mov    rbp,QWORD PTR [rsp+0x38]
   140032bdb:	mov    rsi,QWORD PTR [rsp+0x40]
   140032be0:	add    rsp,0x20
   140032be4:	pop    rdi
   140032be5:	ret    
   140032be6:	mov    al,0x1
   140032be8:	jmp    0x140032bd1
   140032bea:	int3   
   140032beb:	int3   
   140032bec:	int3   
   140032bed:	int3   
   140032bee:	int3   
   140032bef:	int3   
   140032bf0:	rex push rbx
   140032bf2:	push   rsi
   140032bf3:	push   rdi
   140032bf4:	push   r12
   140032bf6:	push   r13
   140032bf8:	push   r14
   140032bfa:	push   r15
   140032bfc:	sub    rsp,0x70
   140032c00:	mov    rdi,rcx
   140032c03:	xor    r12d,r12d
   140032c06:	mov    DWORD PTR [rsp+0x20],r12d
   140032c0b:	mov    DWORD PTR [rsp+0xb0],r12d
   140032c13:	mov    QWORD PTR [rsp+0x40],r12
   140032c18:	mov    QWORD PTR [rsp+0xc8],r12
   140032c20:	call   0x14002e210
   140032c25:	mov    r15,QWORD PTR [rax+0xf8]
   140032c2c:	mov    QWORD PTR [rsp+0x28],r15
   140032c31:	call   0x14002e210
   140032c36:	mov    rax,QWORD PTR [rax+0xf0]
   140032c3d:	mov    QWORD PTR [rsp+0xc0],rax
   140032c45:	mov    rsi,QWORD PTR [rdi+0x50]
   140032c49:	mov    QWORD PTR [rsp+0xb8],rsi
   140032c51:	mov    rax,QWORD PTR [rdi+0x48]
   140032c55:	mov    QWORD PTR [rsp+0x38],rax
   140032c5a:	mov    rbx,QWORD PTR [rdi+0x40]
   140032c5e:	mov    rax,QWORD PTR [rdi+0x30]
   140032c62:	mov    QWORD PTR [rsp+0x48],rax
   140032c67:	mov    r13,QWORD PTR [rdi+0x28]
   140032c6b:	mov    QWORD PTR [rsp+0x50],r13
   140032c70:	call   0x14002e210
   140032c75:	mov    QWORD PTR [rax+0xf0],rsi
   140032c7c:	call   0x14002e210
   140032c81:	mov    QWORD PTR [rax+0xf8],rbx
   140032c88:	call   0x14002e210
   140032c8d:	mov    rdx,QWORD PTR [rax+0xf0]
   140032c94:	mov    rdx,QWORD PTR [rdx+0x28]
   140032c98:	lea    rcx,[rsp+0x60]
   140032c9d:	call   0x14002b340
   140032ca2:	mov    r14,rax
   140032ca5:	mov    QWORD PTR [rsp+0x30],rax
   140032caa:	cmp    QWORD PTR [rdi+0x58],r12
   140032cae:	je     0x140032cdb
   140032cb0:	mov    DWORD PTR [rsp+0xb0],0x1
   140032cbb:	call   0x14002e210
   140032cc0:	mov    rbx,QWORD PTR [rax+0x138]
   140032cc7:	mov    QWORD PTR [rsp+0xc8],rbx
   140032ccf:	call   0x14002e210
   140032cd4:	mov    QWORD PTR [rax+0xf0],rbx
   140032cdb:	mov    r8d,0x100
   140032ce1:	mov    rdx,r13
   140032ce4:	mov    rcx,QWORD PTR [rsp+0x48]
   140032ce9:	call   0x140041b30
   140032cee:	mov    rbx,rax
   140032cf1:	mov    QWORD PTR [rsp+0x40],rax
   140032cf6:	mov    rdi,QWORD PTR [rsp+0xc0]
   140032cfe:	jmp    0x140032d91
   140032d03:	mov    DWORD PTR [rsp+0x20],0x1
   140032d0b:	call   0x14002e210
   140032d10:	xor    r12d,r12d
   140032d13:	mov    DWORD PTR [rax+0x2d0],r12d
   140032d1a:	cmp    DWORD PTR [rsp+0xb0],r12d
   140032d22:	je     0x140032d55
   140032d24:	mov    dl,0x1
   140032d26:	mov    rsi,QWORD PTR [rsp+0xb8]
   140032d2e:	mov    rcx,rsi
   140032d31:	call   0x140032870
   140032d36:	mov    r11,QWORD PTR [rsp+0xc8]
   140032d3e:	lea    r9,[r11+0x20]
   140032d42:	mov    r8d,DWORD PTR [r11+0x18]
   140032d46:	mov    edx,DWORD PTR [r11+0x4]
   140032d4a:	mov    ecx,DWORD PTR [r11]
   140032d4d:	call   QWORD PTR [rip+0x1048d]        # 0x1400431e0
   140032d53:	jmp    0x140032d70
   140032d55:	mov    rsi,QWORD PTR [rsp+0xb8]
   140032d5d:	lea    r9,[rsi+0x20]
   140032d61:	mov    r8d,DWORD PTR [rsi+0x18]
   140032d65:	mov    edx,DWORD PTR [rsi+0x4]
   140032d68:	mov    ecx,DWORD PTR [rsi]
   140032d6a:	call   QWORD PTR [rip+0x10470]        # 0x1400431e0
   140032d70:	mov    r12d,DWORD PTR [rsp+0x20]
   140032d75:	mov    rbx,QWORD PTR [rsp+0x40]
   140032d7a:	mov    r15,QWORD PTR [rsp+0x28]
   140032d7f:	mov    rdi,QWORD PTR [rsp+0xc0]
   140032d87:	mov    r13,QWORD PTR [rsp+0x50]
   140032d8c:	mov    r14,QWORD PTR [rsp+0x30]
   140032d91:	mov    rcx,r14
   140032d94:	call   0x14002b3e0
   140032d99:	test   r12d,r12d
   140032d9c:	jne    0x140032ddb
   140032d9e:	cmp    DWORD PTR [rsi],0xe06d7363
   140032da4:	jne    0x140032ddb
   140032da6:	cmp    DWORD PTR [rsi+0x18],0x4
   140032daa:	jne    0x140032ddb
   140032dac:	mov    eax,DWORD PTR [rsi+0x20]
   140032daf:	cmp    eax,0x19930520
   140032db4:	je     0x140032dc4
   140032db6:	cmp    eax,0x19930521
   140032dbb:	je     0x140032dc4
   140032dbd:	cmp    eax,0x19930522
   140032dc2:	jne    0x140032ddb
   140032dc4:	mov    rcx,QWORD PTR [rsi+0x28]
   140032dc8:	call   0x14002b390
   140032dcd:	test   eax,eax
   140032dcf:	je     0x140032ddb
   140032dd1:	mov    dl,0x1
   140032dd3:	mov    rcx,rsi
   140032dd6:	call   0x140032870
   140032ddb:	call   0x14002e210
   140032de0:	mov    QWORD PTR [rax+0xf0],rdi
   140032de7:	call   0x14002e210
   140032dec:	mov    QWORD PTR [rax+0xf8],r15
   140032df3:	mov    rax,QWORD PTR [rsp+0x38]
   140032df8:	movsxd rcx,DWORD PTR [rax+0x1c]
   140032dfc:	mov    rax,QWORD PTR [r13+0x0]
   140032e00:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   140032e08:	mov    rax,rbx
   140032e0b:	add    rsp,0x70
   140032e0f:	pop    r15
   140032e11:	pop    r14
   140032e13:	pop    r13
   140032e15:	pop    r12
   140032e17:	pop    rdi
   140032e18:	pop    rsi
   140032e19:	pop    rbx
   140032e1a:	ret    
   140032e1b:	int3   
   140032e1c:	int3   
   140032e1d:	int3   
   140032e1e:	int3   
   140032e1f:	int3   
   140032e20:	rex push rbp
   140032e22:	sub    rsp,0x20
   140032e26:	mov    rbp,rdx
   140032e29:	mov    QWORD PTR [rbp+0x58],rcx
   140032e2d:	lea    r8,[rbp+0x20]
   140032e31:	mov    rdx,QWORD PTR [rbp+0xb8]
   140032e38:	call   0x1400327c0
   140032e3d:	add    rsp,0x20
   140032e41:	pop    rbp
   140032e42:	ret    
   140032e43:	int3   
   140032e44:	int3   
   140032e45:	int3   
   140032e46:	int3   
   140032e47:	int3   
   140032e48:	int3   
   140032e49:	int3   
   140032e4a:	int3   
   140032e4b:	int3   
   140032e4c:	int3   
   140032e4d:	int3   
   140032e4e:	int3   
   140032e4f:	int3   
   140032e50:	rex push rbx
   140032e52:	push   rbp
   140032e53:	sub    rsp,0x28
   140032e57:	mov    rbp,rdx
   140032e5a:	mov    rcx,QWORD PTR [rbp+0x30]
   140032e5e:	call   0x14002b3e0
   140032e63:	cmp    DWORD PTR [rbp+0x20],0x0
   140032e67:	jne    0x140032ead
   140032e69:	mov    rbx,QWORD PTR [rbp+0xb8]
   140032e70:	cmp    DWORD PTR [rbx],0xe06d7363
   140032e76:	jne    0x140032ead
   140032e78:	cmp    DWORD PTR [rbx+0x18],0x4
   140032e7c:	jne    0x140032ead
   140032e7e:	mov    eax,DWORD PTR [rbx+0x20]
   140032e81:	cmp    eax,0x19930520
   140032e86:	je     0x140032e96
   140032e88:	cmp    eax,0x19930521
   140032e8d:	je     0x140032e96
   140032e8f:	cmp    eax,0x19930522
   140032e94:	jne    0x140032ead
   140032e96:	mov    rcx,QWORD PTR [rbx+0x28]
   140032e9a:	call   0x14002b390
   140032e9f:	test   eax,eax
   140032ea1:	je     0x140032ead
   140032ea3:	mov    dl,0x1
   140032ea5:	mov    rcx,rbx
   140032ea8:	call   0x140032870
   140032ead:	call   0x14002e210
   140032eb2:	mov    rcx,QWORD PTR [rbp+0xc0]
   140032eb9:	mov    QWORD PTR [rax+0xf0],rcx
   140032ec0:	call   0x14002e210
   140032ec5:	mov    rcx,QWORD PTR [rbp+0x28]
   140032ec9:	mov    QWORD PTR [rax+0xf8],rcx
   140032ed0:	add    rsp,0x28
   140032ed4:	pop    rbp
   140032ed5:	pop    rbx
   140032ed6:	ret    
   140032ed7:	int3   
   140032ed8:	int3   
   140032ed9:	int3   
   140032eda:	int3   
   140032edb:	int3   
   140032edc:	int3   
   140032edd:	int3   
   140032ede:	int3   
   140032edf:	int3   
   140032ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140032ee5:	mov    QWORD PTR [rsp+0x10],rsi
   140032eea:	mov    QWORD PTR [rsp+0x18],rdi
   140032eef:	push   r12
   140032ef1:	push   r13
   140032ef3:	push   r14
   140032ef5:	sub    rsp,0x30
   140032ef9:	mov    rdi,r9
   140032efc:	mov    r12,r8
   140032eff:	mov    rsi,rdx
   140032f02:	mov    r14,rcx
   140032f05:	xor    ebx,ebx
   140032f07:	cmp    DWORD PTR [r8+0x4],ebx
   140032f0b:	je     0x1400330eb
   140032f11:	movsxd r13,DWORD PTR [r8+0x4]
   140032f15:	call   0x14002ae40
   140032f1a:	lea    rdx,[r13+rax*1+0x0]
   140032f1f:	test   rdx,rdx
   140032f22:	je     0x1400330eb
   140032f28:	test   r13d,r13d
   140032f2b:	je     0x140032f3f
   140032f2d:	call   0x14002ae40
   140032f32:	mov    r11,rax
   140032f35:	movsxd rax,DWORD PTR [r12+0x4]
   140032f3a:	add    r11,rax
   140032f3d:	jmp    0x140032f42
   140032f3f:	mov    r11,rbx
   140032f42:	cmp    BYTE PTR [r11+0x10],bl
   140032f46:	je     0x1400330eb
   140032f4c:	movsxd rax,DWORD PTR [r12+0x8]
   140032f51:	test   eax,eax
   140032f53:	jne    0x140032f61
   140032f55:	bt     DWORD PTR [r12],0x1f
   140032f5b:	jae    0x1400330eb
   140032f61:	mov    ecx,DWORD PTR [r12]
   140032f65:	bt     ecx,0x1f
   140032f69:	jb     0x140032f71
   140032f6b:	add    rax,QWORD PTR [rsi]
   140032f6e:	mov    rsi,rax
   140032f71:	test   cl,0x8
   140032f74:	je     0x140032fbb
   140032f76:	mov    edx,0x1
   140032f7b:	mov    rcx,QWORD PTR [r14+0x28]
   140032f7f:	call   0x14003a1c0
   140032f84:	test   eax,eax
   140032f86:	je     0x140032fb1
   140032f88:	mov    edx,0x1
   140032f8d:	mov    rcx,rsi
   140032f90:	call   0x14003a1c0
   140032f95:	test   eax,eax
   140032f97:	je     0x140032fb1
   140032f99:	mov    rcx,QWORD PTR [r14+0x28]
   140032f9d:	mov    QWORD PTR [rsi],rcx
   140032fa0:	lea    rdx,[rdi+0x8]
   140032fa4:	call   0x1400328e0
   140032fa9:	mov    QWORD PTR [rsi],rax
   140032fac:	jmp    0x1400330e1
   140032fb1:	call   0x140033d20
   140032fb6:	jmp    0x1400330e1
   140032fbb:	test   BYTE PTR [rdi],0x1
   140032fbe:	je     0x140033024
   140032fc0:	mov    edx,0x1
   140032fc5:	mov    rcx,QWORD PTR [r14+0x28]
   140032fc9:	call   0x14003a1c0
   140032fce:	test   eax,eax
   140032fd0:	je     0x14003301a
   140032fd2:	mov    edx,0x1
   140032fd7:	mov    rcx,rsi
   140032fda:	call   0x14003a1c0
   140032fdf:	test   eax,eax
   140032fe1:	je     0x14003301a
   140032fe3:	movsxd r8,DWORD PTR [rdi+0x14]
   140032fe7:	mov    rdx,QWORD PTR [r14+0x28]
   140032feb:	mov    rcx,rsi
   140032fee:	call   0x14002b7a0
   140032ff3:	cmp    DWORD PTR [rdi+0x14],0x8
   140032ff7:	jne    0x1400330e1
   140032ffd:	mov    rcx,QWORD PTR [rsi]
   140033000:	test   rcx,rcx
   140033003:	je     0x1400330e1
   140033009:	lea    rdx,[rdi+0x8]
   14003300d:	call   0x1400328e0
   140033012:	mov    QWORD PTR [rsi],rax
   140033015:	jmp    0x1400330e1
   14003301a:	call   0x140033d20
   14003301f:	jmp    0x1400330e1
   140033024:	cmp    DWORD PTR [rdi+0x18],0x0
   140033028:	je     0x140033097
   14003302a:	call   0x14002ae60
   14003302f:	mov    rdx,rax
   140033032:	movsxd rax,DWORD PTR [rdi+0x18]
   140033036:	add    rdx,rax
   140033039:	je     0x140033097
   14003303b:	mov    edx,0x1
   140033040:	mov    rcx,QWORD PTR [r14+0x28]
   140033044:	call   0x14003a1c0
   140033049:	test   eax,eax
   14003304b:	je     0x140033090
   14003304d:	mov    edx,0x1
   140033052:	mov    rcx,rsi
   140033055:	call   0x14003a1c0
   14003305a:	test   eax,eax
   14003305c:	je     0x140033090
   14003305e:	cmp    DWORD PTR [rdi+0x18],0x0
   140033062:	je     0x140033075
   140033064:	call   0x14002ae60
   140033069:	mov    rcx,rax
   14003306c:	movsxd rax,DWORD PTR [rdi+0x18]
   140033070:	add    rcx,rax
   140033073:	jmp    0x140033078
   140033075:	mov    rcx,rbx
   140033078:	call   0x14003a1c0
   14003307d:	test   eax,eax
   14003307f:	je     0x140033090
   140033081:	test   BYTE PTR [rdi],0x4
   140033084:	setne  bl
   140033087:	add    ebx,0x1
   14003308a:	mov    DWORD PTR [rsp+0x20],ebx
   14003308e:	jmp    0x1400330e1
   140033090:	call   0x140033d20
   140033095:	jmp    0x1400330e1
   140033097:	mov    edx,0x1
   14003309c:	mov    rcx,QWORD PTR [r14+0x28]
   1400330a0:	call   0x14003a1c0
   1400330a5:	test   eax,eax
   1400330a7:	je     0x1400330db
   1400330a9:	mov    edx,0x1
   1400330ae:	mov    rcx,rsi
   1400330b1:	call   0x14003a1c0
   1400330b6:	test   eax,eax
   1400330b8:	je     0x1400330db
   1400330ba:	movsxd r10,DWORD PTR [rdi+0x14]
   1400330be:	lea    rdx,[rdi+0x8]
   1400330c2:	mov    rcx,QWORD PTR [r14+0x28]
   1400330c6:	call   0x1400328e0
   1400330cb:	mov    rdx,rax
   1400330ce:	mov    r8,r10
   1400330d1:	mov    rcx,rsi
   1400330d4:	call   0x14002b7a0
   1400330d9:	jmp    0x1400330e1
   1400330db:	call   0x140033d20
   1400330e0:	nop
   1400330e1:	mov    eax,ebx
   1400330e3:	jmp    0x1400330ed
   1400330e5:	call   0x140033cf0
   1400330ea:	nop
   1400330eb:	xor    eax,eax
   1400330ed:	mov    rbx,QWORD PTR [rsp+0x50]
   1400330f2:	mov    rsi,QWORD PTR [rsp+0x58]
   1400330f7:	mov    rdi,QWORD PTR [rsp+0x60]
   1400330fc:	add    rsp,0x30
   140033100:	pop    r14
   140033102:	pop    r13
   140033104:	pop    r12
   140033106:	ret    
   140033107:	int3   
   140033108:	int3   
   140033109:	int3   
   14003310a:	int3   
   14003310b:	int3   
   14003310c:	int3   
   14003310d:	int3   
   14003310e:	int3   
   14003310f:	int3   
   140033110:	mov    QWORD PTR [rsp+0x8],rbx
   140033115:	mov    QWORD PTR [rsp+0x10],rsi
   14003311a:	push   rdi
   14003311b:	sub    rsp,0x20
   14003311f:	mov    rbx,r9
   140033122:	mov    rsi,rcx
   140033125:	bt     DWORD PTR [r8],0x1f
   14003312a:	jae    0x140033131
   14003312c:	mov    rdi,rdx
   14003312f:	jmp    0x140033138
   140033131:	movsxd rdi,DWORD PTR [r8+0x8]
   140033135:	add    rdi,QWORD PTR [rdx]
   140033138:	call   0x140032ee0
   14003313d:	sub    eax,0x1
   140033140:	je     0x14003317f
   140033142:	cmp    eax,0x1
   140033145:	jne    0x1400331ac
   140033147:	cmp    DWORD PTR [rbx+0x18],0x0
   14003314b:	je     0x14003315e
   14003314d:	call   0x14002ae60
   140033152:	mov    r11,rax
   140033155:	movsxd rax,DWORD PTR [rbx+0x18]
   140033159:	add    r11,rax
   14003315c:	jmp    0x140033161
   14003315e:	xor    r11d,r11d
   140033161:	lea    rdx,[rbx+0x8]
   140033165:	mov    rcx,QWORD PTR [rsi+0x28]
   140033169:	call   0x1400328e0
   14003316e:	mov    rdx,rax
   140033171:	mov    r8d,0x1
   140033177:	mov    rcx,rdi
   14003317a:	call   r11
   14003317d:	jmp    0x1400331ac
   14003317f:	cmp    DWORD PTR [rbx+0x18],0x0
   140033183:	je     0x140033193
   140033185:	call   0x14002ae60
   14003318a:	movsxd r11,DWORD PTR [rbx+0x18]
   14003318e:	add    r11,rax
   140033191:	jmp    0x140033196
   140033193:	xor    r11d,r11d
   140033196:	lea    rdx,[rbx+0x8]
   14003319a:	mov    rcx,QWORD PTR [rsi+0x28]
   14003319e:	call   0x1400328e0
   1400331a3:	mov    rdx,rax
   1400331a6:	mov    rcx,rdi
   1400331a9:	call   r11
   1400331ac:	jmp    0x1400331b4
   1400331ae:	call   0x140033cf0
   1400331b3:	nop
   1400331b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400331b9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400331be:	add    rsp,0x20
   1400331c2:	pop    rdi
   1400331c3:	ret    
   1400331c4:	int3   
   1400331c5:	int3   
   1400331c6:	int3   
   1400331c7:	int3   
   1400331c8:	int3   
   1400331c9:	int3   
   1400331ca:	int3   
   1400331cb:	int3   
   1400331cc:	int3   
   1400331cd:	int3   
   1400331ce:	int3   
   1400331cf:	int3   
   1400331d0:	mov    rax,rsp
   1400331d3:	mov    QWORD PTR [rax+0x18],r8
   1400331d7:	push   rsi
   1400331d8:	push   r12
   1400331da:	push   r14
   1400331dc:	push   r15
   1400331de:	sub    rsp,0x78
   1400331e2:	cmp    DWORD PTR [rcx],0x80000003
   1400331e8:	mov    r14,r9
   1400331eb:	mov    rsi,r8
   1400331ee:	mov    r15,rdx
   1400331f1:	mov    r12,rcx
   1400331f4:	je     0x14003343b
   1400331fa:	mov    QWORD PTR [rax+0x10],rbx
   1400331fe:	mov    QWORD PTR [rax-0x30],rdi
   140033202:	mov    QWORD PTR [rax-0x38],r13
   140033206:	call   0x14002e210
   14003320b:	mov    edi,DWORD PTR [rsp+0xd0]
   140033212:	mov    r13,QWORD PTR [rsp+0xc0]
   14003321a:	cmp    QWORD PTR [rax+0xe0],0x0
   140033222:	je     0x140033273
   140033224:	call   0x14002e210
   140033229:	mov    rbx,rax
   14003322c:	call   0x14002de30
   140033231:	cmp    QWORD PTR [rbx+0xe0],rax
   140033238:	je     0x140033273
   14003323a:	cmp    DWORD PTR [r12],0xe0434f4d
   140033242:	je     0x140033273
   140033244:	mov    rax,QWORD PTR [rsp+0xd8]
   14003324c:	mov    r9,r14
   14003324f:	mov    r8,rsi
   140033252:	mov    QWORD PTR [rsp+0x30],rax
   140033257:	mov    rdx,r15
   14003325a:	mov    rcx,r12
   14003325d:	mov    DWORD PTR [rsp+0x28],edi
   140033261:	mov    QWORD PTR [rsp+0x20],r13
   140033266:	call   0x14002b150
   14003326b:	test   eax,eax
   14003326d:	jne    0x140033429
   140033273:	cmp    DWORD PTR [r13+0xc],0x0
   140033278:	mov    QWORD PTR [rsp+0x70],rbp
   14003327d:	jne    0x140033284
   14003327f:	call   0x140033d20
   140033284:	mov    ebp,DWORD PTR [rsp+0xc8]
   14003328b:	lea    rax,[rsp+0x50]
   140033290:	mov    QWORD PTR [rsp+0x30],r14
   140033295:	mov    QWORD PTR [rsp+0x28],rax
   14003329a:	lea    rax,[rsp+0xa0]
   1400332a2:	mov    r8d,edi
   1400332a5:	mov    r9d,ebp
   1400332a8:	mov    rdx,r13
   1400332ab:	mov    rcx,r15
   1400332ae:	mov    QWORD PTR [rsp+0x20],rax
   1400332b3:	call   0x14002b200
   1400332b8:	mov    rsi,rax
   1400332bb:	mov    eax,DWORD PTR [rsp+0xa0]
   1400332c2:	cmp    eax,DWORD PTR [rsp+0x50]
   1400332c6:	jae    0x140033424
   1400332cc:	data16 data16 xchg ax,ax
   1400332d0:	cmp    ebp,DWORD PTR [rsi]
   1400332d2:	jl     0x14003340c
   1400332d8:	cmp    ebp,DWORD PTR [rsi+0x4]
   1400332db:	jg     0x14003340c
   1400332e1:	call   0x14002ae40
   1400332e6:	movsxd rcx,DWORD PTR [rsi+0xc]
   1400332ea:	lea    rdx,[rcx+rcx*4]
   1400332ee:	movsxd rcx,DWORD PTR [rsi+0x10]
   1400332f2:	lea    rdx,[rcx+rdx*4]
   1400332f6:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   1400332fb:	je     0x140033371
   1400332fd:	call   0x14002ae40
   140033302:	movsxd rcx,DWORD PTR [rsi+0xc]
   140033306:	lea    rdx,[rcx+rcx*4]
   14003330a:	movsxd rcx,DWORD PTR [rsi+0x10]
   14003330e:	lea    rdx,[rcx+rdx*4]
   140033312:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140033317:	call   0x14002ae40
   14003331c:	lea    rcx,[rax+rbx*1]
   140033320:	test   rcx,rcx
   140033323:	je     0x140033371
   140033325:	call   0x14002ae40
   14003332a:	movsxd rcx,DWORD PTR [rsi+0xc]
   14003332e:	lea    rdx,[rcx+rcx*4]
   140033332:	movsxd rcx,DWORD PTR [rsi+0x10]
   140033336:	lea    rdx,[rcx+rdx*4]
   14003333a:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14003333f:	je     0x140033365
   140033341:	call   0x14002ae40
   140033346:	movsxd rcx,DWORD PTR [rsi+0xc]
   14003334a:	lea    rdx,[rcx+rcx*4]
   14003334e:	movsxd rcx,DWORD PTR [rsi+0x10]
   140033352:	lea    rdx,[rcx+rdx*4]
   140033356:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14003335b:	call   0x14002ae40
   140033360:	add    rax,rbx
   140033363:	jmp    0x140033367
   140033365:	xor    eax,eax
   140033367:	cmp    BYTE PTR [rax+0x10],0x0
   14003336b:	jne    0x140033405
   140033371:	call   0x14002ae40
   140033376:	movsxd rcx,DWORD PTR [rsi+0xc]
   14003337a:	lea    rdx,[rcx+rcx*4]
   14003337e:	movsxd rcx,DWORD PTR [rsi+0x10]
   140033382:	lea    rdx,[rcx+rdx*4]
   140033386:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14003338b:	jne    0x140033405
   14003338d:	call   0x14002ae40
   140033392:	mov    ecx,DWORD PTR [rsi+0xc]
   140033395:	lea    r9,[rsp+0x58]
   14003339a:	sub    ecx,0x1
   14003339d:	mov    r8,r13
   1400333a0:	movsxd rcx,ecx
   1400333a3:	lea    rdx,[rcx+rcx*4]
   1400333a7:	mov    rcx,r15
   1400333aa:	lea    rdi,[rax+rdx*4]
   1400333ae:	movsxd rax,DWORD PTR [rsi+0x10]
   1400333b2:	mov    rdx,r14
   1400333b5:	add    rdi,rax
   1400333b8:	call   0x14002ad30
   1400333bd:	mov    rbx,rax
   1400333c0:	call   0x14002ae40
   1400333c5:	movsxd rcx,DWORD PTR [rdi+0xc]
   1400333c9:	mov    r8,QWORD PTR [rsp+0xb0]
   1400333d1:	add    rax,rcx
   1400333d4:	mov    ecx,DWORD PTR [rsi]
   1400333d6:	mov    BYTE PTR [rsp+0x40],0x0
   1400333db:	mov    QWORD PTR [rsp+0x38],r14
   1400333e0:	mov    QWORD PTR [rsp+0x30],r13
   1400333e5:	mov    DWORD PTR [rsp+0x28],ecx
   1400333e9:	mov    r9,rbx
   1400333ec:	mov    rdx,r12
   1400333ef:	mov    rcx,r15
   1400333f2:	mov    QWORD PTR [rsp+0x20],rax
   1400333f7:	call   0x14002b450
   1400333fc:	mov    eax,DWORD PTR [rsp+0xa0]
   140033403:	jmp    0x14003340c
   140033405:	mov    eax,DWORD PTR [rsp+0xa0]
   14003340c:	add    eax,0x1
   14003340f:	add    rsi,0x14
   140033413:	cmp    eax,DWORD PTR [rsp+0x50]
   140033417:	mov    DWORD PTR [rsp+0xa0],eax
   14003341e:	jb     0x1400332d0
   140033424:	mov    rbp,QWORD PTR [rsp+0x70]
   140033429:	mov    rdi,QWORD PTR [rsp+0x68]
   14003342e:	mov    rbx,QWORD PTR [rsp+0xa8]
   140033436:	mov    r13,QWORD PTR [rsp+0x60]
   14003343b:	add    rsp,0x78
   14003343f:	pop    r15
   140033441:	pop    r14
   140033443:	pop    r12
   140033445:	pop    rsi
   140033446:	ret    
   140033447:	int3   
   140033448:	int3   
   140033449:	int3   
   14003344a:	int3   
   14003344b:	int3   
   14003344c:	int3   
   14003344d:	int3   
   14003344e:	int3   
   14003344f:	int3   
   140033450:	mov    QWORD PTR [rsp+0x20],r9
   140033455:	mov    QWORD PTR [rsp+0x18],r8
   14003345a:	mov    QWORD PTR [rsp+0x10],rdx
   14003345f:	push   rbx
   140033460:	push   rbp
   140033461:	push   rdi
   140033462:	push   r12
   140033464:	push   r13
   140033466:	push   r14
   140033468:	push   r15
   14003346a:	sub    rsp,0x570
   140033471:	mov    rbp,QWORD PTR [rsp+0x5d0]
   140033479:	mov    r13,rdx
   14003347c:	mov    r14,rcx
   14003347f:	xor    r15b,r15b
   140033482:	mov    rdx,r9
   140033485:	mov    rcx,rbp
   140033488:	mov    r12,r9
   14003348b:	mov    rbx,r8
   14003348e:	mov    BYTE PTR [rsp+0x5b0],r15b
   140033496:	call   0x140032380
   14003349b:	lea    r9,[rsp+0x68]
   1400334a0:	mov    r8,rbp
   1400334a3:	mov    rdx,r12
   1400334a6:	mov    rcx,r13
   1400334a9:	mov    edi,eax
   1400334ab:	mov    DWORD PTR [rsp+0x58],eax
   1400334af:	call   0x14002ad30
   1400334b4:	mov    r8,rbp
   1400334b7:	mov    rdx,r12
   1400334ba:	mov    rcx,r13
   1400334bd:	call   0x140032500
   1400334c2:	cmp    edi,eax
   1400334c4:	jle    0x1400334ec
   1400334c6:	lea    rcx,[rsp+0x68]
   1400334cb:	mov    r9d,edi
   1400334ce:	mov    r8,rbp
   1400334d1:	mov    rdx,r12
   1400334d4:	call   0x1400324b0
   1400334d9:	mov    r9d,edi
   1400334dc:	mov    r8,rbp
   1400334df:	mov    rdx,r12
   1400334e2:	mov    rcx,r13
   1400334e5:	call   0x1400324c0
   1400334ea:	jmp    0x140033500
   1400334ec:	mov    r8,rbp
   1400334ef:	mov    rdx,r12
   1400334f2:	mov    rcx,r13
   1400334f5:	call   0x140032500
   1400334fa:	mov    edi,eax
   1400334fc:	mov    DWORD PTR [rsp+0x58],eax
   140033500:	cmp    edi,0xffffffff
   140033503:	jl     0x14003350a
   140033505:	cmp    edi,DWORD PTR [rbp+0x4]
   140033508:	jl     0x14003350f
   14003350a:	call   0x140033d20
   14003350f:	cmp    DWORD PTR [r14],0xe06d7363
   140033516:	jne    0x140033677
   14003351c:	cmp    DWORD PTR [r14+0x18],0x4
   140033521:	jne    0x140033677
   140033527:	mov    eax,DWORD PTR [r14+0x20]
   14003352b:	cmp    eax,0x19930520
   140033530:	je     0x140033544
   140033532:	cmp    eax,0x19930521
   140033537:	je     0x140033544
   140033539:	cmp    eax,0x19930522
   14003353e:	jne    0x140033677
   140033544:	cmp    QWORD PTR [r14+0x30],0x0
   140033549:	jne    0x140033677
   14003354f:	call   0x14002e210
   140033554:	cmp    QWORD PTR [rax+0xf0],0x0
   14003355c:	je     0x140033a36
   140033562:	call   0x14002e210
   140033567:	mov    r14,QWORD PTR [rax+0xf0]
   14003356e:	call   0x14002e210
   140033573:	mov    rcx,QWORD PTR [r14+0x38]
   140033577:	mov    rbx,QWORD PTR [rax+0xf8]
   14003357e:	mov    QWORD PTR [rsp+0x5c0],rbx
   140033586:	call   0x14002aea0
   14003358b:	mov    edx,0x1
   140033590:	mov    rcx,r14
   140033593:	call   0x14003a1c0
   140033598:	test   eax,eax
   14003359a:	jne    0x1400335a1
   14003359c:	call   0x140033d20
   1400335a1:	cmp    DWORD PTR [r14],0xe06d7363
   1400335a8:	jne    0x1400335d6
   1400335aa:	cmp    DWORD PTR [r14+0x18],0x4
   1400335af:	jne    0x1400335d6
   1400335b1:	mov    eax,DWORD PTR [r14+0x20]
   1400335b5:	cmp    eax,0x19930520
   1400335ba:	je     0x1400335ca
   1400335bc:	cmp    eax,0x19930521
   1400335c1:	je     0x1400335ca
   1400335c3:	cmp    eax,0x19930522
   1400335c8:	jne    0x1400335d6
   1400335ca:	cmp    QWORD PTR [r14+0x30],0x0
   1400335cf:	jne    0x1400335d6
   1400335d1:	call   0x140033d20
   1400335d6:	call   0x14002e210
   1400335db:	cmp    QWORD PTR [rax+0x108],0x0
   1400335e3:	je     0x140033677
   1400335e9:	call   0x14002e210
   1400335ee:	mov    rbx,QWORD PTR [rax+0x108]
   1400335f5:	call   0x14002e210
   1400335fa:	mov    rdx,rbx
   1400335fd:	mov    rcx,r14
   140033600:	mov    QWORD PTR [rax+0x108],0x0
   14003360b:	call   0x140032910
   140033610:	test   al,al
   140033612:	jne    0x14003366f
   140033614:	mov    rcx,rbx
   140033617:	call   0x140032b60
   14003361c:	test   al,al
   14003361e:	je     0x140033669
   140033620:	mov    dl,0x1
   140033622:	mov    rcx,r14
   140033625:	call   0x140032870
   14003362a:	lea    r11,[rip+0x155f7]        # 0x140048c28
   140033631:	lea    rdx,[rsp+0x5b0]
   140033639:	lea    rcx,[rsp+0x78]
   14003363e:	mov    QWORD PTR [rsp+0x5b0],r11
   140033646:	call   0x140039fd0
   14003364b:	lea    r11,[rip+0x155c6]        # 0x140048c18
   140033652:	lea    rdx,[rip+0x238af]        # 0x140056f08
   140033659:	lea    rcx,[rsp+0x78]
   14003365e:	mov    QWORD PTR [rsp+0x78],r11
   140033663:	call   0x14002bb20
   140033668:	int3   
   140033669:	call   0x140033cf0
   14003366e:	int3   
   14003366f:	mov    rbx,QWORD PTR [rsp+0x5c0]
   140033677:	cmp    DWORD PTR [r14],0xe06d7363
   14003367e:	jne    0x140033a49
   140033684:	cmp    DWORD PTR [r14+0x18],0x4
   140033689:	jne    0x140033a49
   14003368f:	mov    eax,DWORD PTR [r14+0x20]
   140033693:	cmp    eax,0x19930520
   140033698:	je     0x1400336ac
   14003369a:	cmp    eax,0x19930521
   14003369f:	je     0x1400336ac
   1400336a1:	cmp    eax,0x19930522
   1400336a6:	jne    0x140033a49
   1400336ac:	cmp    DWORD PTR [rbp+0xc],0x0
   1400336b0:	jbe    0x140033967
   1400336b6:	mov    r8d,DWORD PTR [rsp+0x5e0]
   1400336be:	lea    rax,[rsp+0x54]
   1400336c3:	mov    QWORD PTR [rsp+0x30],r12
   1400336c8:	mov    QWORD PTR [rsp+0x28],rax
   1400336cd:	lea    rax,[rsp+0x50]
   1400336d2:	mov    r9d,edi
   1400336d5:	mov    rdx,rbp
   1400336d8:	mov    rcx,r13
   1400336db:	mov    QWORD PTR [rsp+0x20],rax
   1400336e0:	call   0x14002b200
   1400336e5:	mov    ecx,DWORD PTR [rsp+0x50]
   1400336e9:	mov    edx,DWORD PTR [rsp+0x54]
   1400336ed:	cmp    ecx,edx
   1400336ef:	mov    rbx,rax
   1400336f2:	mov    QWORD PTR [rsp+0x60],rax
   1400336f7:	jae    0x140033967
   1400336fd:	mov    QWORD PTR [rsp+0x568],rsi
   140033705:	cmp    DWORD PTR [rbx],edi
   140033707:	jg     0x14003393e
   14003370d:	cmp    edi,DWORD PTR [rbx+0x4]
   140033710:	jg     0x14003393e
   140033716:	call   0x14002ae40
   14003371b:	movsxd rdi,DWORD PTR [rbx+0x10]
   14003371f:	mov    r15d,DWORD PTR [rbx+0xc]
   140033723:	add    rdi,rax
   140033726:	test   r15d,r15d
   140033729:	jle    0x14003392a
   14003372f:	nop
   140033730:	call   0x14002ae60
   140033735:	mov    rcx,QWORD PTR [r14+0x30]
   140033739:	movsxd rdx,DWORD PTR [rcx+0xc]
   14003373d:	lea    r13,[rax+rdx*1+0x4]
   140033742:	call   0x14002ae60
   140033747:	mov    rcx,QWORD PTR [r14+0x30]
   14003374b:	movsxd rdx,DWORD PTR [rcx+0xc]
   14003374f:	mov    ebp,DWORD PTR [rax+rdx*1]
   140033752:	test   ebp,ebp
   140033754:	jle    0x140033850
   14003375a:	data16 xchg ax,ax
   14003375d:	data16 xchg ax,ax
   140033760:	call   0x14002ae60
   140033765:	mov    r12,QWORD PTR [r14+0x30]
   140033769:	mov    rsi,rax
   14003376c:	movsxd rax,DWORD PTR [r13+0x0]
   140033770:	add    rsi,rax
   140033773:	cmp    DWORD PTR [rdi+0x4],0x0
   140033777:	je     0x14003388c
   14003377d:	movsxd rbx,DWORD PTR [rdi+0x4]
   140033781:	call   0x14002ae40
   140033786:	add    rax,rbx
   140033789:	je     0x14003388c
   14003378f:	test   ebx,ebx
   140033791:	je     0x1400337a1
   140033793:	movsxd rbx,DWORD PTR [rdi+0x4]
   140033797:	call   0x14002ae40
   14003379c:	add    rax,rbx
   14003379f:	jmp    0x1400337a3
   1400337a1:	xor    eax,eax
   1400337a3:	cmp    BYTE PTR [rax+0x10],0x0
   1400337a7:	je     0x14003388c
   1400337ad:	test   ebx,ebx
   1400337af:	je     0x1400337bf
   1400337b1:	call   0x14002ae40
   1400337b6:	movsxd rbx,DWORD PTR [rdi+0x4]
   1400337ba:	add    rbx,rax
   1400337bd:	jmp    0x1400337c1
   1400337bf:	xor    ebx,ebx
   1400337c1:	call   0x14002ae60
   1400337c6:	movsxd rcx,DWORD PTR [rsi+0x4]
   1400337ca:	add    rax,rcx
   1400337cd:	cmp    rbx,rax
   1400337d0:	je     0x140033818
   1400337d2:	cmp    DWORD PTR [rdi+0x4],0x0
   1400337d6:	je     0x1400337e6
   1400337d8:	call   0x14002ae40
   1400337dd:	movsxd rbx,DWORD PTR [rdi+0x4]
   1400337e1:	add    rbx,rax
   1400337e4:	jmp    0x1400337e8
   1400337e6:	xor    ebx,ebx
   1400337e8:	call   0x14002ae60
   1400337ed:	movsxd rcx,DWORD PTR [rsi+0x4]
   1400337f1:	lea    r8,[rax+rcx*1+0x10]
   1400337f6:	lea    rcx,[rbx+0x10]
   1400337fa:	sub    r8,rcx
   1400337fd:	data16 xchg ax,ax
   140033800:	movzx  edx,BYTE PTR [rcx]
   140033803:	movzx  eax,BYTE PTR [rcx+r8*1]
   140033808:	sub    edx,eax
   14003380a:	jne    0x140033814
   14003380c:	add    rcx,0x1
   140033810:	test   eax,eax
   140033812:	jne    0x140033800
   140033814:	test   edx,edx
   140033816:	jne    0x140033841
   140033818:	test   BYTE PTR [rsi],0x2
   14003381b:	je     0x140033822
   14003381d:	test   BYTE PTR [rdi],0x8
   140033820:	je     0x140033841
   140033822:	mov    eax,DWORD PTR [r12]
   140033826:	test   al,0x1
   140033828:	je     0x14003382f
   14003382a:	test   BYTE PTR [rdi],0x1
   14003382d:	je     0x140033841
   14003382f:	test   al,0x4
   140033831:	je     0x140033838
   140033833:	test   BYTE PTR [rdi],0x4
   140033836:	je     0x140033841
   140033838:	test   al,0x2
   14003383a:	je     0x14003388c
   14003383c:	test   BYTE PTR [rdi],0x2
   14003383f:	jne    0x14003388c
   140033841:	sub    ebp,0x1
   140033844:	add    r13,0x4
   140033848:	test   ebp,ebp
   14003384a:	jg     0x140033760
   140033850:	sub    r15d,0x1
   140033854:	add    rdi,0x14
   140033858:	test   r15d,r15d
   14003385b:	jg     0x140033730
   140033861:	mov    rbx,QWORD PTR [rsp+0x60]
   140033866:	mov    rbp,QWORD PTR [rsp+0x5d0]
   14003386e:	mov    r12,QWORD PTR [rsp+0x5c8]
   140033876:	mov    r13,QWORD PTR [rsp+0x5b8]
   14003387e:	movzx  r15d,BYTE PTR [rsp+0x5b0]
   140033887:	jmp    0x140033932
   14003388c:	mov    rbp,QWORD PTR [rsp+0x5d0]
   140033894:	mov    r12,QWORD PTR [rsp+0x5c8]
   14003389c:	mov    r13,QWORD PTR [rsp+0x5b8]
   1400338a4:	lea    r9,[rsp+0x70]
   1400338a9:	mov    r15b,0x1
   1400338ac:	mov    r8,rbp
   1400338af:	mov    rdx,r12
   1400338b2:	mov    rcx,r13
   1400338b5:	mov    BYTE PTR [rsp+0x5b0],r15b
   1400338bd:	call   0x14002ad30
   1400338c2:	test   rsi,rsi
   1400338c5:	mov    rbx,rax
   1400338c8:	je     0x1400338db
   1400338ca:	mov    r9,rsi
   1400338cd:	mov    r8,rdi
   1400338d0:	mov    rdx,rax
   1400338d3:	mov    rcx,r14
   1400338d6:	call   0x140033110
   1400338db:	call   0x14002ae40
   1400338e0:	movsxd rcx,DWORD PTR [rdi+0xc]
   1400338e4:	mov    r8,QWORD PTR [rsp+0x5c0]
   1400338ec:	add    rax,rcx
   1400338ef:	movzx  ecx,BYTE PTR [rsp+0x5d8]
   1400338f7:	mov    r9,rbx
   1400338fa:	mov    BYTE PTR [rsp+0x40],cl
   1400338fe:	mov    rcx,QWORD PTR [rsp+0x60]
   140033903:	mov    QWORD PTR [rsp+0x38],r12
   140033908:	mov    ecx,DWORD PTR [rcx]
   14003390a:	mov    QWORD PTR [rsp+0x30],rbp
   14003390f:	mov    rdx,r14
   140033912:	mov    DWORD PTR [rsp+0x28],ecx
   140033916:	mov    rcx,r13
   140033919:	mov    QWORD PTR [rsp+0x20],rax
   14003391e:	call   0x14002b450
   140033923:	mov    rbx,QWORD PTR [rsp+0x60]
   140033928:	jmp    0x140033932
   14003392a:	mov    r15b,BYTE PTR [rsp+0x5b0]
   140033932:	mov    edx,DWORD PTR [rsp+0x54]
   140033936:	mov    ecx,DWORD PTR [rsp+0x50]
   14003393a:	mov    edi,DWORD PTR [rsp+0x58]
   14003393e:	add    ecx,0x1
   140033941:	add    rbx,0x14
   140033945:	cmp    ecx,edx
   140033947:	mov    DWORD PTR [rsp+0x50],ecx
   14003394b:	mov    QWORD PTR [rsp+0x60],rbx
   140033950:	jb     0x140033705
   140033956:	test   r15b,r15b
   140033959:	mov    rsi,QWORD PTR [rsp+0x568]
   140033961:	jne    0x140033a22
   140033967:	mov    eax,DWORD PTR [rbp+0x0]
   14003396a:	and    eax,0x1fffffff
   14003396f:	cmp    eax,0x19930521
   140033974:	jb     0x140033a22
   14003397a:	cmp    DWORD PTR [rbp+0x20],0x0
   14003397e:	je     0x140033a22
   140033984:	movsxd rbx,DWORD PTR [rbp+0x20]
   140033988:	call   0x14002ae40
   14003398d:	add    rax,rbx
   140033990:	je     0x140033a22
   140033996:	test   ebx,ebx
   140033998:	je     0x1400339ab
   14003399a:	call   0x14002ae40
   14003399f:	mov    rdx,rax
   1400339a2:	movsxd rax,DWORD PTR [rbp+0x20]
   1400339a6:	add    rdx,rax
   1400339a9:	jmp    0x1400339ad
   1400339ab:	xor    edx,edx
   1400339ad:	mov    rcx,r14
   1400339b0:	call   0x140032910
   1400339b5:	test   al,al
   1400339b7:	jne    0x140033a22
   1400339b9:	lea    r9,[rsp+0x5b0]
   1400339c1:	mov    r8,rbp
   1400339c4:	mov    rdx,r12
   1400339c7:	mov    rcx,r13
   1400339ca:	call   0x14002ad30
   1400339cf:	mov    rbx,rax
   1400339d2:	call   0x14002e210
   1400339d7:	mov    r8,QWORD PTR [rsp+0x5c0]
   1400339df:	lea    rcx,[rsp+0x90]
   1400339e7:	mov    r9,rbx
   1400339ea:	mov    rdx,r14
   1400339ed:	mov    QWORD PTR [rax+0x110],rcx
   1400339f4:	mov    al,BYTE PTR [rsp+0x5d8]
   1400339fb:	mov    rcx,r13
   1400339fe:	mov    BYTE PTR [rsp+0x40],al
   140033a02:	mov    QWORD PTR [rsp+0x38],r12
   140033a07:	mov    QWORD PTR [rsp+0x30],rbp
   140033a0c:	mov    DWORD PTR [rsp+0x28],0xffffffff
   140033a14:	mov    QWORD PTR [rsp+0x20],0x0
   140033a1d:	call   0x14002b450
   140033a22:	call   0x14002e210
   140033a27:	cmp    QWORD PTR [rax+0x108],0x0
   140033a2f:	je     0x140033a36
   140033a31:	call   0x140033d20
   140033a36:	add    rsp,0x570
   140033a3d:	pop    r15
   140033a3f:	pop    r14
   140033a41:	pop    r13
   140033a43:	pop    r12
   140033a45:	pop    rdi
   140033a46:	pop    rbp
   140033a47:	pop    rbx
   140033a48:	ret    
   140033a49:	cmp    DWORD PTR [rbp+0xc],0x0
   140033a4d:	jbe    0x140033a22
   140033a4f:	cmp    BYTE PTR [rsp+0x5d8],0x0
   140033a57:	jne    0x140033a8d
   140033a59:	mov    rax,QWORD PTR [rsp+0x5e8]
   140033a61:	mov    r9,r12
   140033a64:	mov    r8,rbx
   140033a67:	mov    QWORD PTR [rsp+0x38],rax
   140033a6c:	mov    eax,DWORD PTR [rsp+0x5e0]
   140033a73:	mov    rdx,r13
   140033a76:	mov    DWORD PTR [rsp+0x30],eax
   140033a7a:	mov    rcx,r14
   140033a7d:	mov    DWORD PTR [rsp+0x28],edi
   140033a81:	mov    QWORD PTR [rsp+0x20],rbp
   140033a86:	call   0x1400331d0
   140033a8b:	jmp    0x140033a22
   140033a8d:	call   0x140033cf0
   140033a92:	int3   
   140033a93:	int3   
   140033a94:	int3   
   140033a95:	int3   
   140033a96:	int3   
   140033a97:	int3   
   140033a98:	int3   
   140033a99:	int3   
   140033a9a:	int3   
   140033a9b:	int3   
   140033a9c:	int3   
   140033a9d:	int3   
   140033a9e:	int3   
   140033a9f:	int3   
   140033aa0:	rex push rbx
   140033aa2:	sub    rsp,0x20
   140033aa6:	mov    rbx,rcx
   140033aa9:	call   0x14003a060
   140033aae:	lea    r11,[rip+0x15163]        # 0x140048c18
   140033ab5:	mov    QWORD PTR [rbx],r11
   140033ab8:	mov    rax,rbx
   140033abb:	add    rsp,0x20
   140033abf:	pop    rbx
   140033ac0:	ret    
   140033ac1:	int3   
   140033ac2:	int3   
   140033ac3:	int3   
   140033ac4:	int3   
   140033ac5:	int3   
   140033ac6:	int3   
   140033ac7:	int3   
   140033ac8:	int3   
   140033ac9:	int3   
   140033aca:	int3   
   140033acb:	int3   
   140033acc:	int3   
   140033acd:	int3   
   140033ace:	int3   
   140033acf:	int3   
   140033ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140033ad5:	mov    QWORD PTR [rsp+0x10],rbp
   140033ada:	mov    QWORD PTR [rsp+0x18],rsi
   140033adf:	mov    QWORD PTR [rsp+0x20],rdi
   140033ae4:	push   r12
   140033ae6:	sub    rsp,0x40
   140033aea:	mov    rbp,r9
   140033aed:	mov    r12,r8
   140033af0:	mov    rsi,rdx
   140033af3:	mov    rbx,rcx
   140033af6:	call   0x14002e210
   140033afb:	mov    rdi,QWORD PTR [rsp+0x70]
   140033b00:	cmp    DWORD PTR [rax+0x2d0],0x0
   140033b07:	jne    0x140033b48
   140033b09:	mov    eax,DWORD PTR [rbx]
   140033b0b:	cmp    eax,0xe06d7363
   140033b10:	je     0x140033b48
   140033b12:	cmp    eax,0x80000029
   140033b17:	jne    0x140033b29
   140033b19:	cmp    DWORD PTR [rbx+0x18],0xf
   140033b1d:	jne    0x140033b29
   140033b1f:	cmp    QWORD PTR [rbx+0x60],0x19930520
   140033b27:	je     0x140033b48
   140033b29:	cmp    eax,0x80000026
   140033b2e:	je     0x140033b48
   140033b30:	mov    eax,DWORD PTR [rdi]
   140033b32:	and    eax,0x1fffffff
   140033b37:	cmp    eax,0x19930522
   140033b3c:	jb     0x140033b48
   140033b3e:	test   BYTE PTR [rdi+0x24],0x1
   140033b42:	jne    0x140033ccb
   140033b48:	mov    eax,DWORD PTR [rbx+0x4]
   140033b4b:	test   al,0x66
   140033b4d:	je     0x140033bf7
   140033b53:	mov    ecx,DWORD PTR [rdi+0x4]
   140033b56:	test   ecx,ecx
   140033b58:	je     0x140033ccb
   140033b5e:	cmp    DWORD PTR [rsp+0x78],0x0
   140033b63:	jne    0x140033ccb
   140033b69:	and    eax,0x20
   140033b6c:	je     0x140033bb0
   140033b6e:	cmp    DWORD PTR [rbx],0x80000026
   140033b74:	jne    0x140033bb0
   140033b76:	mov    r8,QWORD PTR [r12+0xf8]
   140033b7e:	mov    rdx,rbp
   140033b81:	mov    rcx,rdi
   140033b84:	call   0x1400322f0
   140033b89:	cmp    eax,0xffffffff
   140033b8c:	mov    ebx,eax
   140033b8e:	jl     0x140033b95
   140033b90:	cmp    eax,DWORD PTR [rdi+0x4]
   140033b93:	jl     0x140033b9a
   140033b95:	call   0x140033d20
   140033b9a:	mov    r9d,ebx
   140033b9d:	mov    r8,rdi
   140033ba0:	mov    rdx,rbp
   140033ba3:	mov    rcx,rsi
   140033ba6:	call   0x1400325d0
   140033bab:	jmp    0x140033ccb
   140033bb0:	test   eax,eax
   140033bb2:	je     0x140033be4
   140033bb4:	cmp    DWORD PTR [rbx],0x80000029
   140033bba:	jne    0x140033be4
   140033bbc:	mov    esi,DWORD PTR [rbx+0x38]
   140033bbf:	cmp    esi,0xffffffff
   140033bc2:	jl     0x140033bc8
   140033bc4:	cmp    esi,ecx
   140033bc6:	jl     0x140033bcd
   140033bc8:	call   0x140033d20
   140033bcd:	mov    rcx,QWORD PTR [rbx+0x28]
   140033bd1:	mov    r9d,esi
   140033bd4:	mov    r8,rdi
   140033bd7:	mov    rdx,rbp
   140033bda:	call   0x1400325d0
   140033bdf:	jmp    0x140033ccb
   140033be4:	mov    r8,rdi
   140033be7:	mov    rdx,rbp
   140033bea:	mov    rcx,rsi
   140033bed:	call   0x14002aec0
   140033bf2:	jmp    0x140033ccb
   140033bf7:	cmp    DWORD PTR [rdi+0xc],0x0
   140033bfb:	jne    0x140033c2b
   140033bfd:	mov    eax,DWORD PTR [rdi]
   140033bff:	and    eax,0x1fffffff
   140033c04:	cmp    eax,0x19930521
   140033c09:	jb     0x140033ccb
   140033c0f:	cmp    DWORD PTR [rdi+0x20],0x0
   140033c13:	je     0x140033ccb
   140033c19:	call   0x14002ae40
   140033c1e:	movsxd rcx,DWORD PTR [rdi+0x20]
   140033c22:	add    rax,rcx
   140033c25:	je     0x140033ccb
   140033c2b:	cmp    DWORD PTR [rbx],0xe06d7363
   140033c31:	jne    0x140033c94
   140033c33:	cmp    DWORD PTR [rbx+0x18],0x3
   140033c37:	jb     0x140033c94
   140033c39:	cmp    DWORD PTR [rbx+0x20],0x19930522
   140033c40:	jbe    0x140033c94
   140033c42:	mov    rax,QWORD PTR [rbx+0x30]
   140033c46:	cmp    DWORD PTR [rax+0x8],0x0
   140033c4a:	je     0x140033c94
   140033c4c:	call   0x14002ae60
   140033c51:	mov    rcx,QWORD PTR [rbx+0x30]
   140033c55:	movsxd rdx,DWORD PTR [rcx+0x8]
   140033c59:	add    rax,rdx
   140033c5c:	je     0x140033c94
   140033c5e:	movzx  ecx,BYTE PTR [rsp+0x88]
   140033c66:	mov    r9,rbp
   140033c69:	mov    r8,r12
   140033c6c:	mov    DWORD PTR [rsp+0x38],ecx
   140033c70:	mov    rcx,QWORD PTR [rsp+0x80]
   140033c78:	mov    rdx,rsi
   140033c7b:	mov    QWORD PTR [rsp+0x30],rcx
   140033c80:	mov    ecx,DWORD PTR [rsp+0x78]
   140033c84:	mov    DWORD PTR [rsp+0x28],ecx
   140033c88:	mov    rcx,rbx
   140033c8b:	mov    QWORD PTR [rsp+0x20],rdi
   140033c90:	call   rax
   140033c92:	jmp    0x140033cd0
   140033c94:	mov    rax,QWORD PTR [rsp+0x80]
   140033c9c:	mov    r9,rbp
   140033c9f:	mov    r8,r12
   140033ca2:	mov    QWORD PTR [rsp+0x38],rax
   140033ca7:	mov    eax,DWORD PTR [rsp+0x78]
   140033cab:	mov    rdx,rsi
   140033cae:	mov    DWORD PTR [rsp+0x30],eax
   140033cb2:	movzx  eax,BYTE PTR [rsp+0x88]
   140033cba:	mov    rcx,rbx
   140033cbd:	mov    BYTE PTR [rsp+0x28],al
   140033cc1:	mov    QWORD PTR [rsp+0x20],rdi
   140033cc6:	call   0x140033450
   140033ccb:	mov    eax,0x1
   140033cd0:	mov    rbx,QWORD PTR [rsp+0x50]
   140033cd5:	mov    rbp,QWORD PTR [rsp+0x58]
   140033cda:	mov    rsi,QWORD PTR [rsp+0x60]
   140033cdf:	mov    rdi,QWORD PTR [rsp+0x68]
   140033ce4:	add    rsp,0x40
   140033ce8:	pop    r12
   140033cea:	ret    
   140033ceb:	int3   
   140033cec:	int3   
   140033ced:	int3   
   140033cee:	int3   
   140033cef:	int3   
   140033cf0:	sub    rsp,0x28
   140033cf4:	call   0x14002e210
   140033cf9:	mov    rcx,QWORD PTR [rax+0xd0]
   140033d00:	test   rcx,rcx
   140033d03:	je     0x140033d09
   140033d05:	call   rcx
   140033d07:	jmp    0x140033d09
   140033d09:	call   0x140031fe0
   140033d0e:	add    rsp,0x28
   140033d12:	ret    
   140033d13:	int3   
   140033d14:	int3   
   140033d15:	int3   
   140033d16:	int3   
   140033d17:	int3   
   140033d18:	int3   
   140033d19:	int3   
   140033d1a:	int3   
   140033d1b:	int3   
   140033d1c:	int3   
   140033d1d:	int3   
   140033d1e:	int3   
   140033d1f:	int3   
   140033d20:	sub    rsp,0x28
   140033d24:	mov    rcx,QWORD PTR [rip+0x2db75]        # 0x1400618a0
   140033d2b:	call   0x14002df20
   140033d30:	test   rax,rax
   140033d33:	je     0x140033d39
   140033d35:	call   rax
   140033d37:	jmp    0x140033d39
   140033d39:	call   0x140033cf0
   140033d3e:	int3   
   140033d3f:	add    rsp,0x28
   140033d43:	ret    
   140033d44:	int3   
   140033d45:	int3   
   140033d46:	int3   
   140033d47:	int3   
   140033d48:	int3   
   140033d49:	int3   
   140033d4a:	int3   
   140033d4b:	int3   
   140033d4c:	int3   
   140033d4d:	int3   
   140033d4e:	int3   
   140033d4f:	int3   
   140033d50:	sub    rsp,0x28
   140033d54:	lea    rcx,[rip+0xffffffffffffff95]        # 0x140033cf0
   140033d5b:	call   0x14002dd60
   140033d60:	mov    QWORD PTR [rip+0x2db39],rax        # 0x1400618a0
   140033d67:	add    rsp,0x28
   140033d6b:	ret    
   140033d6c:	int3   
   140033d6d:	int3   
   140033d6e:	int3   
   140033d6f:	int3   
   140033d70:	int3   
   140033d71:	int3   
   140033d72:	int3   
   140033d73:	int3   
   140033d74:	int3   
   140033d75:	int3   
   140033d76:	data16 data16 xchg ax,ax
   140033d7a:	data16 data16 xchg ax,ax
   140033d7e:	xchg   ax,ax
   140033d80:	sub    rsp,0x4d8
   140033d87:	xor    r8,r8
   140033d8a:	xor    r9,r9
   140033d8d:	mov    QWORD PTR [rsp+0x20],rsp
   140033d92:	mov    QWORD PTR [rsp+0x28],r8
   140033d97:	call   0x14004091c
   140033d9c:	add    rsp,0x4d8
   140033da3:	ret    
   140033da4:	int3   
   140033da5:	int3   
   140033da6:	int3   
   140033da7:	int3   
   140033da8:	int3   
   140033da9:	int3   
   140033daa:	data16 xchg ax,ax
   140033dad:	data16 xchg ax,ax
   140033db0:	mov    QWORD PTR [rsp+0x8],rcx
   140033db5:	mov    QWORD PTR [rsp+0x18],rdx
   140033dba:	mov    DWORD PTR [rsp+0x10],r8d
   140033dbf:	mov    r9,0x19930520
   140033dc6:	jmp    0x140033dd0
   140033dc8:	int3   
   140033dc9:	int3   
   140033dca:	int3   
   140033dcb:	int3   
   140033dcc:	int3   
   140033dcd:	int3   
   140033dce:	xchg   ax,ax
   140033dd0:	ret    
   140033dd1:	int3   
   140033dd2:	int3   
   140033dd3:	int3   
   140033dd4:	int3   
   140033dd5:	int3   
   140033dd6:	int3   
   140033dd7:	data16 data16 xchg ax,ax
   140033ddb:	data16 data16 xchg ax,ax
   140033ddf:	nop
   140033de0:	ret    
   140033de1:	int3   
   140033de2:	int3   
   140033de3:	int3   
   140033de4:	int3   
   140033de5:	int3   
   140033de6:	int3   
   140033de7:	int3   
   140033de8:	int3   
   140033de9:	int3   
   140033dea:	int3   
   140033deb:	int3   
   140033dec:	int3   
   140033ded:	int3   
   140033dee:	int3   
   140033def:	int3   
   140033df0:	xor    eax,eax
   140033df2:	cmp    WORD PTR [rcx],0x5a4d
   140033df7:	jne    0x140033e10
   140033df9:	movsxd rdx,DWORD PTR [rcx+0x3c]
   140033dfd:	cmp    DWORD PTR [rdx+rcx*1],0x4550
   140033e04:	jne    0x140033e10
   140033e06:	cmp    WORD PTR [rdx+rcx*1+0x18],0x20b
   140033e0d:	sete   al
   140033e10:	ret    0x0
   140033e13:	int3   
   140033e14:	int3   
   140033e15:	int3   
   140033e16:	int3   
   140033e17:	int3   
   140033e18:	int3   
   140033e19:	int3   
   140033e1a:	int3   
   140033e1b:	int3   
   140033e1c:	int3   
   140033e1d:	int3   
   140033e1e:	int3   
   140033e1f:	int3   
   140033e20:	movsxd r8,DWORD PTR [rcx+0x3c]
   140033e24:	xor    r9d,r9d
   140033e27:	mov    r10,rdx
   140033e2a:	add    r8,rcx
   140033e2d:	movzx  eax,WORD PTR [r8+0x14]
   140033e32:	movzx  r11d,WORD PTR [r8+0x6]
   140033e37:	test   r11d,r11d
   140033e3a:	lea    rcx,[rax+r8*1+0x18]
   140033e3f:	je     0x140033e60
   140033e41:	mov    edx,DWORD PTR [rcx+0xc]
   140033e44:	cmp    r10,rdx
   140033e47:	jb     0x140033e53
   140033e49:	mov    eax,DWORD PTR [rcx+0x8]
   140033e4c:	add    eax,edx
   140033e4e:	cmp    r10,rax
   140033e51:	jb     0x140033e63
   140033e53:	add    r9d,0x1
   140033e57:	add    rcx,0x28
   140033e5b:	cmp    r9d,r11d
   140033e5e:	jb     0x140033e41
   140033e60:	xor    eax,eax
   140033e62:	ret    
   140033e63:	mov    rax,rcx
   140033e66:	ret    
   140033e67:	int3   
   140033e68:	int3   
   140033e69:	int3   
   140033e6a:	int3   
   140033e6b:	int3   
   140033e6c:	int3   
   140033e6d:	int3   
   140033e6e:	int3   
   140033e6f:	int3   
   140033e70:	sub    rsp,0x28
   140033e74:	mov    r8,rcx
   140033e77:	lea    rcx,[rip+0xfffffffffffcc182]        # 0x140000000
   140033e7e:	call   0x140033df0
   140033e83:	test   eax,eax
   140033e85:	je     0x140033ea6
   140033e87:	sub    r8,rcx
   140033e8a:	mov    rdx,r8
   140033e8d:	call   0x140033e20
   140033e92:	test   rax,rax
   140033e95:	je     0x140033ea6
   140033e97:	mov    eax,DWORD PTR [rax+0x24]
   140033e9a:	shr    eax,0x1f
   140033e9d:	not    eax
   140033e9f:	and    eax,0x1
   140033ea2:	jmp    0x140033ea6
   140033ea4:	xor    eax,eax
   140033ea6:	add    rsp,0x28
   140033eaa:	ret    
   140033eab:	int3   
   140033eac:	int3   
   140033ead:	int3   
   140033eae:	int3   
   140033eaf:	int3   
   140033eb0:	rex push rbp
   140033eb2:	sub    rsp,0x20
   140033eb6:	mov    rbp,rdx
   140033eb9:	mov    rax,QWORD PTR [rcx]
   140033ebc:	xor    ecx,ecx
   140033ebe:	cmp    DWORD PTR [rax],0xc0000005
   140033ec4:	sete   cl
   140033ec7:	mov    eax,ecx
   140033ec9:	mov    eax,ecx
   140033ecb:	add    rsp,0x20
   140033ecf:	pop    rbp
   140033ed0:	ret    
   140033ed1:	int3   
   140033ed2:	int3   
   140033ed3:	int3   
   140033ed4:	int3   
   140033ed5:	int3   
   140033ed6:	int3   
   140033ed7:	int3   
   140033ed8:	int3   
   140033ed9:	int3   
   140033eda:	int3   
   140033edb:	int3   
   140033edc:	int3   
   140033edd:	int3   
   140033ede:	int3   
   140033edf:	int3   
   140033ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140033ee5:	push   rdi
   140033ee6:	sub    rsp,0x20
   140033eea:	test   cx,0xff00
   140033eef:	movzx  ebx,cx
   140033ef2:	jne    0x140033f12
   140033ef4:	movzx  edi,cx
   140033ef7:	movzx  ecx,dil
   140033efb:	call   0x140039db0
   140033f00:	test   eax,eax
   140033f02:	je     0x140033f12
   140033f04:	mov    ax,di
   140033f07:	mov    rbx,QWORD PTR [rsp+0x30]
   140033f0c:	add    rsp,0x20
   140033f10:	pop    rdi
   140033f11:	ret    
   140033f12:	movzx  eax,bx
   140033f15:	mov    rbx,QWORD PTR [rsp+0x30]
   140033f1a:	and    eax,0xffffffdf
   140033f1d:	sub    eax,0x7
   140033f20:	add    rsp,0x20
   140033f24:	pop    rdi
   140033f25:	ret    
   140033f26:	int3   
   140033f27:	int3   
   140033f28:	int3   
   140033f29:	int3   
   140033f2a:	int3   
   140033f2b:	int3   
   140033f2c:	int3   
   140033f2d:	int3   
   140033f2e:	int3   
   140033f2f:	int3   
   140033f30:	rex push rbx
   140033f32:	push   rbp
   140033f33:	push   rsi
   140033f34:	push   rdi
   140033f35:	push   r12
   140033f37:	push   r14
   140033f39:	push   r15
   140033f3b:	sub    rsp,0x3c0
   140033f42:	mov    rax,QWORD PTR [rip+0x27037]        # 0x14005af80
   140033f49:	xor    rax,rsp
   140033f4c:	mov    QWORD PTR [rsp+0x3a0],rax
   140033f54:	xor    r14d,r14d
   140033f57:	lea    rbp,[rsp+0xe0]
   140033f5f:	xor    di,di
   140033f62:	test   rdx,rdx
   140033f65:	mov    ebx,r14d
   140033f68:	mov    QWORD PTR [rsp+0xa8],r9
   140033f70:	mov    rsi,rdx
   140033f73:	mov    QWORD PTR [rsp+0x78],rdx
   140033f78:	mov    r12,rcx
   140033f7b:	mov    DWORD PTR [rsp+0x3c],ebx
   140033f7f:	mov    QWORD PTR [rsp+0x70],rcx
   140033f84:	mov    QWORD PTR [rsp+0x48],rbp
   140033f89:	mov    r15d,0x15e
   140033f8f:	mov    DWORD PTR [rsp+0x80],r14d
   140033f97:	mov    QWORD PTR [rsp+0x58],r14
   140033f9c:	mov    DWORD PTR [rsp+0xb0],r14d
   140033fa4:	jne    0x140033fcd
   140033fa6:	call   0x14002bca0
   140033fab:	xor    r9d,r9d
   140033fae:	xor    r8d,r8d
   140033fb1:	xor    edx,edx
   140033fb3:	xor    ecx,ecx
   140033fb5:	mov    QWORD PTR [rsp+0x20],r14
   140033fba:	mov    DWORD PTR [rax],0x16
   140033fc0:	call   0x14002e900
   140033fc5:	or     eax,0xffffffff
   140033fc8:	jmp    0x140035731
   140033fcd:	test   rcx,rcx
   140033fd0:	je     0x140033fa6
   140033fd2:	test   r8,r8
   140033fd5:	mov    QWORD PTR [rsp+0x3b8],r13
   140033fdd:	mov    BYTE PTR [rsp+0xd0],bl
   140033fe4:	jne    0x14003409e
   140033fea:	call   0x14002e210
   140033fef:	mov    r11,rax
   140033ff2:	mov    QWORD PTR [rsp+0xc8],rax
   140033ffa:	mov    rax,QWORD PTR [rax+0xc0]
   140034001:	cmp    rax,QWORD PTR [rip+0x27a48]        # 0x14005ba50
   140034008:	mov    QWORD PTR [rsp+0xb8],rax
   140034010:	mov    rcx,QWORD PTR [r11+0xb8]
   140034017:	mov    QWORD PTR [rsp+0xc0],rcx
   14003401f:	je     0x14003404d
   140034021:	mov    eax,DWORD PTR [r11+0xc8]
   140034028:	test   DWORD PTR [rip+0x278aa],eax        # 0x14005b8d8
   14003402e:	jne    0x14003404d
   140034030:	call   0x140031a10
   140034035:	mov    r11,QWORD PTR [rsp+0xc8]
   14003403d:	mov    rcx,QWORD PTR [rsp+0xc0]
   140034045:	mov    QWORD PTR [rsp+0xb8],rax
   14003404d:	cmp    rcx,QWORD PTR [rip+0x2777c]        # 0x14005b7d0
   140034054:	je     0x14003407a
   140034056:	mov    eax,DWORD PTR [r11+0xc8]
   14003405d:	test   DWORD PTR [rip+0x27875],eax        # 0x14005b8d8
   140034063:	jne    0x14003407a
   140034065:	call   0x140030ec0
   14003406a:	mov    r11,QWORD PTR [rsp+0xc8]
   140034072:	mov    QWORD PTR [rsp+0xc0],rax
   14003407a:	test   BYTE PTR [r11+0xc8],0x2
   140034082:	jne    0x1400340bc
   140034084:	or     DWORD PTR [r11+0xc8],0x2
   14003408c:	mov    r11,QWORD PTR [rsp+0xc8]
   140034094:	mov    BYTE PTR [rsp+0xd0],0x1
   14003409c:	jmp    0x1400340bc
   14003409e:	mov    rax,QWORD PTR [r8]
   1400340a1:	lea    rcx,[rsp+0xb8]
   1400340a9:	mov    QWORD PTR [rcx],rax
   1400340ac:	mov    rax,QWORD PTR [r8+0x8]
   1400340b0:	mov    QWORD PTR [rcx+0x8],rax
   1400340b4:	mov    r11,QWORD PTR [rsp+0xc8]
   1400340bc:	xor    al,al
   1400340be:	mov    ecx,r14d
   1400340c1:	mov    r13d,r14d
   1400340c4:	mov    BYTE PTR [rsp+0x42],al
   1400340c8:	movzx  eax,WORD PTR [rsi]
   1400340cb:	mov    DWORD PTR [rsp+0x34],r14d
   1400340d0:	test   ax,ax
   1400340d3:	mov    DWORD PTR [rsp+0x38],ecx
   1400340d7:	je     0x140035715
   1400340dd:	data16 xchg ax,ax
   1400340e0:	mov    dx,0x8
   1400340e4:	movzx  ecx,ax
   1400340e7:	call   0x14003a7b0
   1400340ec:	test   eax,eax
   1400340ee:	je     0x14003414f
   1400340f0:	sub    r13d,0x1
   1400340f4:	add    r13d,0x1
   1400340f8:	mov    rcx,r12
   1400340fb:	mov    DWORD PTR [rsp+0x34],r13d
   140034100:	call   0x14003a1d0
   140034105:	cmp    ax,0xffff
   140034109:	movzx  ebx,ax
   14003410c:	je     0x140034130
   14003410e:	mov    dx,0x8
   140034112:	movzx  ecx,ax
   140034115:	call   0x14003a7b0
   14003411a:	test   eax,eax
   14003411c:	jne    0x1400340f4
   14003411e:	mov    rdx,r12
   140034121:	movzx  ecx,bx
   140034124:	call   0x14003a400
   140034129:	data16 xchg ax,ax
   14003412c:	data16 data16 xchg ax,ax
   140034130:	movzx  ecx,WORD PTR [rsi+0x2]
   140034134:	add    rsi,0x2
   140034138:	mov    dx,0x8
   14003413c:	call   0x14003a7b0
   140034141:	test   eax,eax
   140034143:	jne    0x140034130
   140034145:	mov    QWORD PTR [rsp+0x78],rsi
   14003414a:	jmp    0x14003538f
   14003414f:	mov    r9,QWORD PTR [rsp+0x78]
   140034154:	cmp    WORD PTR [r9],0x25
   140034159:	jne    0x140035345
   14003415f:	xor    edx,edx
   140034161:	xor    r13d,r13d
   140034164:	xor    si,si
   140034167:	xor    r8d,r8d
   14003416a:	xor    r14d,r14d
   14003416d:	xor    bpl,bpl
   140034170:	mov    DWORD PTR [rsp+0xa4],r13d
   140034178:	mov    WORD PTR [rsp+0x90],si
   140034180:	mov    DWORD PTR [rsp+0x60],r13d
   140034185:	mov    r13b,0x1
   140034188:	lea    rsi,[rip+0xfffffffffffcbe71]        # 0x140000000
   14003418f:	mov    DWORD PTR [rsp+0x68],r8d
   140034194:	mov    DWORD PTR [rsp+0x50],edx
   140034198:	mov    QWORD PTR [rsp+0x88],r14
   1400341a0:	mov    BYTE PTR [rsp+0x41],dl
   1400341a4:	mov    BYTE PTR [rsp+0x54],dl
   1400341a8:	mov    BYTE PTR [rsp+0x30],dl
   1400341ac:	mov    BYTE PTR [rsp+0xa0],dl
   1400341b3:	xor    r12b,r12b
   1400341b6:	data16 data16 xchg ax,ax
   1400341ba:	data16 xchg ax,ax
   1400341bd:	data16 xchg ax,ax
   1400341c0:	movzx  ebx,WORD PTR [r9+0x2]
   1400341c5:	add    r9,0x2
   1400341c9:	test   bx,0xff00
   1400341ce:	mov    QWORD PTR [rsp+0x78],r9
   1400341d3:	jne    0x14003421b
   1400341d5:	movzx  ecx,bl
   1400341d8:	call   0x140039db0
   1400341dd:	test   eax,eax
   1400341df:	je     0x14003420d
   1400341e1:	mov    edx,DWORD PTR [rsp+0x50]
   1400341e5:	mov    r8d,DWORD PTR [rsp+0x68]
   1400341ea:	mov    r9,QWORD PTR [rsp+0x78]
   1400341ef:	movzx  ecx,BYTE PTR [rsp+0x30]
   1400341f4:	lea    eax,[rdx+rdx*4]
   1400341f7:	add    r8d,0x1
   1400341fb:	lea    edx,[rbx+rax*2-0x30]
   1400341ff:	mov    DWORD PTR [rsp+0x68],r8d
   140034204:	mov    DWORD PTR [rsp+0x50],edx
   140034208:	jmp    0x14003434b
   14003420d:	mov    edx,DWORD PTR [rsp+0x50]
   140034211:	mov    r8d,DWORD PTR [rsp+0x68]
   140034216:	mov    r9,QWORD PTR [rsp+0x78]
   14003421b:	add    ebx,0xffffffd6
   14003421e:	cmp    ebx,0x4d
   140034221:	ja     0x1400342d8
   140034227:	movsxd rax,ebx
   14003422a:	movzx  eax,BYTE PTR [rsi+rax*1+0x35774]
   140034232:	mov    ecx,DWORD PTR [rsi+rax*4+0x35754]
   140034239:	add    rcx,rsi
   14003423c:	jmp    rcx
   14003423e:	mov    cl,BYTE PTR [rsp+0x30]
   140034242:	add    r13b,0xff
   140034246:	add    r12b,0xff
   14003424a:	jmp    0x14003434b
   14003424f:	movzx  eax,WORD PTR [r9+0x2]
   140034254:	cmp    ax,0x36
   140034258:	jne    0x140034287
   14003425a:	cmp    WORD PTR [r9+0x4],0x34
   140034260:	lea    rcx,[r9+0x4]
   140034264:	jne    0x140034287
   140034266:	mov    r9,rcx
   140034269:	mov    QWORD PTR [rsp+0x78],rcx
   14003426e:	mov    cl,BYTE PTR [rsp+0x30]
   140034272:	add    r14d,0x1
   140034276:	mov    QWORD PTR [rsp+0x98],0x0
   140034282:	jmp    0x14003434b
   140034287:	cmp    ax,0x33
   14003428b:	jne    0x1400342aa
   14003428d:	cmp    WORD PTR [r9+0x4],0x32
   140034293:	lea    rcx,[r9+0x4]
   140034297:	jne    0x1400342aa
   140034299:	mov    r9,rcx
   14003429c:	mov    QWORD PTR [rsp+0x78],rcx
   1400342a1:	mov    cl,BYTE PTR [rsp+0x30]
   1400342a5:	jmp    0x14003434b
   1400342aa:	cmp    ax,0x64
   1400342ae:	je     0x1400342e2
   1400342b0:	cmp    ax,0x69
   1400342b4:	je     0x1400342e2
   1400342b6:	cmp    ax,0x6f
   1400342ba:	je     0x1400342e2
   1400342bc:	cmp    ax,0x78
   1400342c0:	je     0x1400342e2
   1400342c2:	cmp    ax,0x58
   1400342c6:	je     0x1400342e2
   1400342c8:	add    r14d,0x1
   1400342cc:	mov    QWORD PTR [rsp+0x98],0x0
   1400342d8:	mov    cl,BYTE PTR [rsp+0x30]
   1400342dc:	add    bpl,0x1
   1400342e0:	jmp    0x14003434b
   1400342e2:	mov    cl,BYTE PTR [rsp+0x30]
   1400342e6:	add    r14d,0x1
   1400342ea:	mov    QWORD PTR [rsp+0x98],0x0
   1400342f6:	jmp    0x14003434b
   1400342f8:	mov    cl,BYTE PTR [rsp+0x30]
   1400342fc:	add    r13b,0x1
   140034300:	jmp    0x14003434b
   140034302:	cmp    WORD PTR [r9+0x2],0x6c
   140034308:	lea    rax,[r9+0x2]
   14003430c:	jne    0x14003432c
   14003430e:	mov    cl,BYTE PTR [rsp+0x30]
   140034312:	mov    r9,rax
   140034315:	mov    QWORD PTR [rsp+0x78],rax
   14003431a:	add    r14d,0x1
   14003431e:	mov    QWORD PTR [rsp+0x98],0x0
   14003432a:	jmp    0x14003434b
   14003432c:	add    r13b,0x1
   140034330:	mov    cl,BYTE PTR [rsp+0x30]
   140034334:	add    r12b,0x1
   140034338:	jmp    0x14003434b
   14003433a:	mov    cl,BYTE PTR [rsp+0x30]
   14003433e:	add    cl,0x1
   140034341:	mov    BYTE PTR [rsp+0x30],cl
   140034345:	jmp    0x14003434b
   140034347:	mov    cl,BYTE PTR [rsp+0x30]
   14003434b:	test   bpl,bpl
   14003434e:	je     0x1400341c0
   140034354:	test   cl,cl
   140034356:	movzx  esi,WORD PTR [rsp+0x90]
   14003435e:	mov    BYTE PTR [rsp+0x40],r13b
   140034363:	mov    r13d,DWORD PTR [rsp+0xa4]
   14003436b:	mov    DWORD PTR [rsp+0x64],r14d
   140034370:	mov    r14,QWORD PTR [rsp+0x88]
   140034378:	jne    0x1400343a4
   14003437a:	mov    rax,QWORD PTR [rsp+0xa8]
   140034382:	mov    QWORD PTR [rsp+0xd8],rax
   14003438a:	add    rax,0x8
   14003438e:	mov    QWORD PTR [rsp+0xa8],rax
   140034396:	mov    rax,QWORD PTR [rax-0x8]
   14003439a:	mov    QWORD PTR [rsp+0x88],rax
   1400343a2:	jmp    0x1400343ac
   1400343a4:	mov    QWORD PTR [rsp+0x88],r14
   1400343ac:	xor    bl,bl
   1400343ae:	test   r12b,r12b
   1400343b1:	jne    0x1400343cb
   1400343b3:	movzx  eax,WORD PTR [r9]
   1400343b7:	cmp    ax,0x53
   1400343bb:	je     0x1400343c8
   1400343bd:	cmp    ax,0x43
   1400343c1:	je     0x1400343c8
   1400343c3:	mov    r12b,0x1
   1400343c6:	jmp    0x1400343cb
   1400343c8:	mov    r12b,0xff
   1400343cb:	movzx  ebp,WORD PTR [r9]
   1400343cf:	or     ebp,0x20
   1400343d2:	cmp    ebp,0x6e
   1400343d5:	mov    DWORD PTR [rsp+0xa4],ebp
   1400343dc:	je     0x140034455
   1400343de:	cmp    ebp,0x63
   1400343e1:	je     0x140034426
   1400343e3:	cmp    ebp,0x7b
   1400343e6:	je     0x140034426
   1400343e8:	mov    ebp,DWORD PTR [rsp+0x34]
   1400343ec:	mov    rbx,QWORD PTR [rsp+0x70]
   1400343f1:	mov    rcx,rbx
   1400343f4:	add    ebp,0x1
   1400343f7:	call   0x14003a1d0
   1400343fc:	cmp    ax,0xffff
   140034400:	movzx  edi,ax
   140034403:	je     0x140034415
   140034405:	mov    dx,0x8
   140034409:	movzx  ecx,ax
   14003440c:	call   0x14003a7b0
   140034411:	test   eax,eax
   140034413:	jne    0x1400343f1
   140034415:	mov    DWORD PTR [rsp+0x34],ebp
   140034419:	mov    ebp,DWORD PTR [rsp+0xa4]
   140034420:	movzx  ebx,r14b
   140034424:	jmp    0x140034438
   140034426:	mov    rcx,QWORD PTR [rsp+0x70]
   14003442b:	add    DWORD PTR [rsp+0x34],0x1
   140034430:	call   0x14003a1d0
   140034435:	mov    di,ax
   140034438:	cmp    di,0xffff
   14003443d:	je     0x14003553e
   140034443:	mov    edx,DWORD PTR [rsp+0x50]
   140034447:	mov    r8d,DWORD PTR [rsp+0x68]
   14003444c:	mov    r9,QWORD PTR [rsp+0x78]
   140034451:	mov    cl,BYTE PTR [rsp+0x30]
   140034455:	test   r8d,r8d
   140034458:	je     0x140034462
   14003445a:	test   edx,edx
   14003445c:	je     0x1400353ae
   140034462:	test   cl,cl
   140034464:	jne    0x1400344d1
   140034466:	cmp    ebp,0x63
   140034469:	je     0x140034475
   14003446b:	cmp    ebp,0x73
   14003446e:	je     0x140034475
   140034470:	cmp    ebp,0x7b
   140034473:	jne    0x1400344bf
   140034475:	mov    r10,QWORD PTR [rsp+0xd8]
   14003447d:	mov    rax,QWORD PTR [r10]
   140034480:	add    r10,0x8
   140034484:	mov    r14d,DWORD PTR [r10]
   140034487:	mov    r11,r10
   14003448a:	mov    QWORD PTR [rsp+0xd8],r10
   140034492:	add    r10,0x8
   140034496:	cmp    r14,0x1
   14003449a:	mov    QWORD PTR [rsp+0x88],rax
   1400344a2:	mov    QWORD PTR [rsp+0xa8],r10
   1400344aa:	jae    0x1400344e1
   1400344ac:	test   r12b,r12b
   1400344af:	jle    0x1400353dd
   1400344b5:	mov    WORD PTR [rax],0x0
   1400344ba:	jmp    0x1400353e0
   1400344bf:	mov    r10,QWORD PTR [rsp+0xa8]
   1400344c7:	mov    r11,QWORD PTR [rsp+0xd8]
   1400344cf:	jmp    0x1400344e1
   1400344d1:	mov    r10,QWORD PTR [rsp+0xa8]
   1400344d9:	mov    r11,QWORD PTR [rsp+0xd8]
   1400344e1:	lea    eax,[rbp-0x63]
   1400344e4:	cmp    eax,0x18
   1400344e7:	ja     0x1400352cf
   1400344ed:	cdqe   
   1400344ef:	lea    rcx,[rip+0xfffffffffffcbb0a]        # 0x140000000
   1400344f6:	mov    ecx,DWORD PTR [rcx+rax*4+0x357c4]
   1400344fd:	lea    rax,[rip+0xfffffffffffcbafc]        # 0x140000000
   140034504:	add    rcx,rax
   140034507:	jmp    rcx
   140034509:	test   r8d,r8d
   14003450c:	jne    0x14003451d
   14003450e:	add    edx,0x1
   140034511:	mov    DWORD PTR [rsp+0x68],0x1
   140034519:	mov    DWORD PTR [rsp+0x50],edx
   14003451d:	test   r12b,r12b
   140034520:	jle    0x1400346c5
   140034526:	movzx  r12d,BYTE PTR [rsp+0x41]
   14003452c:	mov    r13b,0x1
   14003452f:	jmp    0x1400346d2
   140034534:	test   r12b,r12b
   140034537:	jle    0x1400346b6
   14003453d:	mov    r12b,BYTE PTR [rsp+0x41]
   140034542:	mov    r13b,0x1
   140034545:	jmp    0x1400346d2
   14003454a:	mov    r13d,DWORD PTR [rsp+0xa0]
   140034552:	test   r12b,r12b
   140034555:	mov    eax,0x1
   14003455a:	movzx  r13d,r13b
   14003455e:	cmovg  r13d,eax
   140034562:	add    r9,0x2
   140034566:	cmp    WORD PTR [r9],0x5e
   14003456b:	mov    QWORD PTR [rsp+0x78],r9
   140034570:	mov    rbx,r9
   140034573:	jne    0x14003457e
   140034575:	lea    rbx,[r9+0x2]
   140034579:	mov    r12b,0xff
   14003457c:	jmp    0x140034583
   14003457e:	mov    r12b,BYTE PTR [rsp+0x41]
   140034583:	mov    r11,QWORD PTR [rsp+0x58]
   140034588:	test   r11,r11
   14003458b:	jne    0x1400345b4
   14003458d:	mov    ecx,0x2000
   140034592:	call   0x1400320c0
   140034597:	test   rax,rax
   14003459a:	mov    r11,rax
   14003459d:	mov    QWORD PTR [rsp+0x58],rax
   1400345a2:	je     0x140035514
   1400345a8:	mov    eax,0x1
   1400345ad:	mov    DWORD PTR [rsp+0xb0],eax
   1400345b4:	xor    edx,edx
   1400345b6:	mov    r8d,0x2000
   1400345bc:	mov    rcx,r11
   1400345bf:	call   0x14002ac20
   1400345c4:	cmp    ebp,0x7b
   1400345c7:	jne    0x1400345e3
   1400345c9:	cmp    WORD PTR [rbx],0x5d
   1400345cd:	jne    0x1400345ea
   1400345cf:	mov    r11,QWORD PTR [rsp+0x58]
   1400345d4:	mov    si,0x5d
   1400345d8:	add    rbx,0x2
   1400345dc:	mov    BYTE PTR [r11+0xb],0x20
   1400345e1:	jmp    0x1400345ef
   1400345e3:	mov    r11,QWORD PTR [rsp+0x58]
   1400345e8:	jmp    0x1400345ef
   1400345ea:	mov    r11,QWORD PTR [rsp+0x58]
   1400345ef:	movzx  ecx,WORD PTR [rbx]
   1400345f2:	cmp    cx,0x5d
   1400345f6:	je     0x140034699
   1400345fc:	data16 data16 xchg ax,ax
   140034600:	add    rbx,0x2
   140034604:	cmp    cx,0x2d
   140034608:	jne    0x14003466e
   14003460a:	test   si,si
   14003460d:	je     0x14003466e
   14003460f:	movzx  eax,WORD PTR [rbx]
   140034612:	cmp    ax,0x5d
   140034616:	je     0x14003466e
   140034618:	add    rbx,0x2
   14003461c:	cmp    si,ax
   14003461f:	jae    0x140034627
   140034621:	movzx  r10d,ax
   140034625:	jmp    0x14003462e
   140034627:	mov    r10w,si
   14003462b:	mov    si,ax
   14003462e:	cmp    si,r10w
   140034632:	ja     0x140034669
   140034634:	movzx  r9d,si
   140034638:	data16 data16 xchg ax,ax
   14003463c:	data16 data16 xchg ax,ax
   140034640:	mov    al,sil
   140034643:	mov    r8,r9
   140034646:	mov    edx,0x1
   14003464b:	and    eax,0x7
   14003464e:	shr    r8,0x3
   140034652:	add    si,0x1
   140034656:	movzx  ecx,al
   140034659:	add    r9,0x1
   14003465d:	shl    dl,cl
   14003465f:	or     BYTE PTR [r8+r11*1],dl
   140034663:	cmp    si,r10w
   140034667:	jbe    0x140034640
   140034669:	xor    si,si
   14003466c:	jmp    0x14003468c
   14003466e:	mov    al,cl
   140034670:	movzx  r8d,cx
   140034674:	mov    si,cx
   140034677:	and    eax,0x7
   14003467a:	mov    edx,0x1
   14003467f:	shr    r8,0x3
   140034683:	movzx  ecx,al
   140034686:	shl    dl,cl
   140034688:	or     BYTE PTR [r8+r11*1],dl
   14003468c:	mov    cx,WORD PTR [rbx]
   14003468f:	cmp    cx,0x5d
   140034693:	jne    0x140034600
   140034699:	cmp    WORD PTR [rbx],0x0
   14003469d:	je     0x140035501
   1400346a3:	mov    rax,QWORD PTR [rsp+0x78]
   1400346a8:	cmp    ebp,0x7b
   1400346ab:	cmove  rax,rbx
   1400346af:	mov    QWORD PTR [rsp+0x78],rax
   1400346b4:	jmp    0x1400346d2
   1400346b6:	mov    r13d,DWORD PTR [rsp+0xa0]
   1400346be:	mov    r12b,BYTE PTR [rsp+0x41]
   1400346c3:	jmp    0x1400346d2
   1400346c5:	mov    r13d,DWORD PTR [rsp+0xa0]
   1400346cd:	mov    r12b,BYTE PTR [rsp+0x41]
   1400346d2:	mov    esi,DWORD PTR [rsp+0x34]
   1400346d6:	mov    rbx,QWORD PTR [rsp+0x88]
   1400346de:	sub    esi,0x1
   1400346e1:	cmp    di,0xffff
   1400346e6:	mov    DWORD PTR [rsp+0x34],esi
   1400346ea:	je     0x1400346f9
   1400346ec:	mov    rdx,QWORD PTR [rsp+0x70]
   1400346f1:	movzx  ecx,di
   1400346f4:	call   0x14003a400
   1400346f9:	cmp    ebp,0x63
   1400346fc:	je     0x140034702
   1400346fe:	sub    r14,0x1
   140034702:	cmp    DWORD PTR [rsp+0x68],0x0
   140034707:	je     0x14003471a
   140034709:	mov    ecx,DWORD PTR [rsp+0x50]
   14003470d:	mov    eax,ecx
   14003470f:	sub    ecx,0x1
   140034712:	test   eax,eax
   140034714:	mov    DWORD PTR [rsp+0x50],ecx
   140034718:	je     0x140034777
   14003471a:	mov    rcx,QWORD PTR [rsp+0x70]
   14003471f:	add    esi,0x1
   140034722:	mov    DWORD PTR [rsp+0x34],esi
   140034726:	call   0x14003a1d0
   14003472b:	cmp    ax,0xffff
   14003472f:	mov    di,ax
   140034732:	je     0x14003475c
   140034734:	cmp    ebp,0x63
   140034737:	je     0x1400347f3
   14003473d:	cmp    ebp,0x73
   140034740:	jne    0x1400347c7
   140034746:	cmp    ax,0x9
   14003474a:	jb     0x140034752
   14003474c:	cmp    ax,0xd
   140034750:	jbe    0x14003475c
   140034752:	cmp    di,0x20
   140034756:	jne    0x1400347f3
   14003475c:	sub    esi,0x1
   14003475f:	cmp    di,0xffff
   140034764:	mov    DWORD PTR [rsp+0x34],esi
   140034768:	je     0x140034777
   14003476a:	mov    rdx,QWORD PTR [rsp+0x70]
   14003476f:	movzx  ecx,di
   140034772:	call   0x14003a400
   140034777:	mov    rax,QWORD PTR [rsp+0x88]
   14003477f:	cmp    rbx,rax
   140034782:	je     0x1400354e9
   140034788:	cmp    BYTE PTR [rsp+0x30],0x0
   14003478d:	jne    0x140035315
   140034793:	mov    r12d,DWORD PTR [rsp+0x38]
   140034798:	add    r12d,0x1
   14003479c:	cmp    ebp,0x63
   14003479f:	mov    DWORD PTR [rsp+0x38],r12d
   1400347a4:	je     0x140035321
   1400347aa:	test   r13b,r13b
   1400347ad:	je     0x140034879
   1400347b3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400347b8:	mov    r13d,DWORD PTR [rsp+0x34]
   1400347bd:	mov    WORD PTR [rax],0x0
   1400347c2:	jmp    0x14003532b
   1400347c7:	cmp    ebp,0x7b
   1400347ca:	jne    0x14003475c
   1400347cc:	mov    rcx,QWORD PTR [rsp+0x58]
   1400347d1:	mov    al,dil
   1400347d4:	and    eax,0x7
   1400347d7:	mov    edx,eax
   1400347d9:	movzx  eax,di
   1400347dc:	shr    rax,0x3
   1400347e0:	movsx  ecx,BYTE PTR [rax+rcx*1]
   1400347e4:	movsx  eax,r12b
   1400347e8:	xor    ecx,eax
   1400347ea:	bt     ecx,edx
   1400347ed:	jae    0x14003475c
   1400347f3:	cmp    BYTE PTR [rsp+0x30],0x0
   1400347f8:	jne    0x140034870
   1400347fa:	test   r14,r14
   1400347fd:	je     0x140035403
   140034803:	test   r13b,r13b
   140034806:	je     0x140034829
   140034808:	mov    rcx,QWORD PTR [rsp+0x88]
   140034810:	add    rcx,0x2
   140034814:	sub    r14,0x1
   140034818:	mov    WORD PTR [rcx-0x2],di
   14003481c:	mov    QWORD PTR [rsp+0x88],rcx
   140034824:	jmp    0x140034702
   140034829:	mov    rdx,QWORD PTR [rsp+0x88]
   140034831:	lea    rcx,[rsp+0x60]
   140034836:	movzx  r9d,di
   14003483a:	mov    r8,r14
   14003483d:	mov    DWORD PTR [rsp+0x60],0x0
   140034845:	call   0x14003b040
   14003484a:	cmp    eax,0x22
   14003484d:	je     0x140035403
   140034853:	movsxd rax,DWORD PTR [rsp+0x60]
   140034858:	test   eax,eax
   14003485a:	jle    0x140034702
   140034860:	add    QWORD PTR [rsp+0x88],rax
   140034868:	sub    r14,rax
   14003486b:	jmp    0x140034702
   140034870:	add    rbx,0x2
   140034874:	jmp    0x140034702
   140034879:	mov    rbp,QWORD PTR [rsp+0x48]
   14003487e:	mov    r13d,DWORD PTR [rsp+0x34]
   140034883:	mov    BYTE PTR [rax],0x0
   140034886:	jmp    0x14003532b
   14003488b:	mov    ebp,0x64
   140034890:	cmp    di,0x2d
   140034894:	jne    0x14003489b
   140034896:	mov    r14b,0x1
   140034899:	jmp    0x1400348a7
   14003489b:	cmp    di,0x2b
   14003489f:	jne    0x1400348e3
   1400348a1:	movzx  r14d,BYTE PTR [rsp+0x54]
   1400348a7:	sub    edx,0x1
   1400348aa:	mov    DWORD PTR [rsp+0x50],edx
   1400348ae:	jne    0x1400348c3
   1400348b0:	test   r8d,r8d
   1400348b3:	je     0x1400348c3
   1400348b5:	mov    r12d,DWORD PTR [rsp+0x34]
   1400348ba:	mov    rsi,QWORD PTR [rsp+0x70]
   1400348bf:	mov    bl,0x1
   1400348c1:	jmp    0x1400348f2
   1400348c3:	mov    r12d,DWORD PTR [rsp+0x34]
   1400348c8:	mov    rsi,QWORD PTR [rsp+0x70]
   1400348cd:	add    r12d,0x1
   1400348d1:	mov    rcx,rsi
   1400348d4:	mov    DWORD PTR [rsp+0x34],r12d
   1400348d9:	call   0x14003a1d0
   1400348de:	mov    di,ax
   1400348e1:	jmp    0x1400348f2
   1400348e3:	mov    r14b,BYTE PTR [rsp+0x54]
   1400348e8:	mov    r12d,DWORD PTR [rsp+0x34]
   1400348ed:	mov    rsi,QWORD PTR [rsp+0x70]
   1400348f2:	cmp    di,0x30
   1400348f6:	jne    0x140034a20
   1400348fc:	add    r12d,0x1
   140034900:	mov    rcx,rsi
   140034903:	mov    DWORD PTR [rsp+0x34],r12d
   140034908:	call   0x14003a1d0
   14003490d:	cmp    ax,0x78
   140034911:	mov    di,ax
   140034914:	je     0x140034977
   140034916:	cmp    ax,0x58
   14003491a:	je     0x140034977
   14003491c:	cmp    ebp,0x78
   14003491f:	mov    eax,0x1
   140034924:	mov    esi,eax
   140034926:	je     0x14003494d
   140034928:	cmp    DWORD PTR [rsp+0x68],0x0
   14003492d:	je     0x14003493e
   14003492f:	mov    eax,DWORD PTR [rsp+0x50]
   140034933:	sub    eax,esi
   140034935:	mov    DWORD PTR [rsp+0x50],eax
   140034939:	jne    0x14003493e
   14003493b:	add    bl,sil
   14003493e:	mov    r12d,DWORD PTR [rsp+0x64]
   140034943:	mov    ebp,0x6f
   140034948:	jmp    0x140034a32
   14003494d:	sub    r12d,eax
   140034950:	cmp    di,0xffff
   140034955:	mov    DWORD PTR [rsp+0x34],r12d
   14003495a:	je     0x140034969
   14003495c:	mov    rdx,QWORD PTR [rsp+0x70]
   140034961:	movzx  ecx,di
   140034964:	call   0x14003a400
   140034969:	mov    r12d,DWORD PTR [rsp+0x64]
   14003496e:	mov    di,0x30
   140034972:	jmp    0x140034a32
   140034977:	add    r12d,0x1
   14003497b:	mov    rcx,rsi
   14003497e:	mov    DWORD PTR [rsp+0x34],r12d
   140034983:	call   0x14003a1d0
   140034988:	cmp    DWORD PTR [rsp+0x68],0x0
   14003498d:	mov    di,ax
   140034990:	je     0x1400349a5
   140034992:	mov    eax,DWORD PTR [rsp+0x50]
   140034996:	sub    eax,0x2
   140034999:	cmp    eax,0x1
   14003499c:	mov    DWORD PTR [rsp+0x50],eax
   1400349a0:	jge    0x1400349a5
   1400349a2:	add    bl,0x1
   1400349a5:	mov    esi,DWORD PTR [rsp+0x60]
   1400349a9:	mov    r12d,DWORD PTR [rsp+0x64]
   1400349ae:	mov    ebp,0x78
   1400349b3:	jmp    0x140034a32
   1400349b5:	mov    r12d,DWORD PTR [rsp+0x64]
   1400349ba:	mov    BYTE PTR [rsp+0x40],0x1
   1400349bf:	mov    QWORD PTR [rsp+0x98],0x0
   1400349cb:	add    r12d,0x1
   1400349cf:	jmp    0x1400349d6
   1400349d1:	mov    r12d,DWORD PTR [rsp+0x64]
   1400349d6:	cmp    di,0x2d
   1400349da:	jne    0x1400349e1
   1400349dc:	mov    r14b,0x1
   1400349df:	jmp    0x1400349ec
   1400349e1:	cmp    di,0x2b
   1400349e5:	jne    0x140034a2b
   1400349e7:	mov    r14b,BYTE PTR [rsp+0x54]
   1400349ec:	sub    edx,0x1
   1400349ef:	mov    DWORD PTR [rsp+0x50],edx
   1400349f3:	jne    0x140034a02
   1400349f5:	test   r8d,r8d
   1400349f8:	je     0x140034a02
   1400349fa:	mov    esi,DWORD PTR [rsp+0x60]
   1400349fe:	mov    bl,0x1
   140034a00:	jmp    0x140034a32
   140034a02:	mov    eax,DWORD PTR [rsp+0x34]
   140034a06:	mov    rcx,QWORD PTR [rsp+0x70]
   140034a0b:	add    eax,0x1
   140034a0e:	mov    DWORD PTR [rsp+0x34],eax
   140034a12:	call   0x14003a1d0
   140034a17:	mov    esi,DWORD PTR [rsp+0x60]
   140034a1b:	mov    di,ax
   140034a1e:	jmp    0x140034a32
   140034a20:	mov    esi,DWORD PTR [rsp+0x60]
   140034a24:	mov    r12d,DWORD PTR [rsp+0x64]
   140034a29:	jmp    0x140034a32
   140034a2b:	mov    esi,DWORD PTR [rsp+0x60]
   140034a2f:	mov    r14b,sil
   140034a32:	test   r12d,r12d
   140034a35:	je     0x140034b58
   140034a3b:	test   bl,bl
   140034a3d:	jne    0x140034b2d
   140034a43:	mov    ebx,DWORD PTR [rsp+0x34]
   140034a47:	cmp    ebp,0x78
   140034a4a:	je     0x140034a9b
   140034a4c:	cmp    ebp,0x70
   140034a4f:	je     0x140034a9b
   140034a51:	test   di,0xff00
   140034a56:	jne    0x140034b08
   140034a5c:	movzx  ecx,dil
   140034a60:	call   0x140039db0
   140034a65:	test   eax,eax
   140034a67:	je     0x140034b08
   140034a6d:	cmp    ebp,0x6f
   140034a70:	jne    0x140034a8a
   140034a72:	cmp    di,0x38
   140034a76:	jae    0x140034b08
   140034a7c:	mov    rcx,QWORD PTR [rsp+0x98]
   140034a84:	shl    rcx,0x3
   140034a88:	jmp    0x140034acb
   140034a8a:	mov    rcx,QWORD PTR [rsp+0x98]
   140034a92:	lea    rcx,[rcx+rcx*4]
   140034a96:	add    rcx,rcx
   140034a99:	jmp    0x140034acb
   140034a9b:	test   di,0xff00
   140034aa0:	jne    0x140034b08
   140034aa2:	movzx  ecx,dil
   140034aa6:	call   0x140039ec0
   140034aab:	test   eax,eax
   140034aad:	je     0x140034b08
   140034aaf:	shl    QWORD PTR [rsp+0x98],0x4
   140034ab8:	movzx  ecx,di
   140034abb:	call   0x140033ee0
   140034ac0:	mov    rcx,QWORD PTR [rsp+0x98]
   140034ac8:	mov    di,ax
   140034acb:	movzx  eax,di
   140034ace:	add    esi,0x1
   140034ad1:	sub    eax,0x30
   140034ad4:	cdqe   
   140034ad6:	add    rcx,rax
   140034ad9:	cmp    DWORD PTR [rsp+0x68],0x0
   140034ade:	mov    QWORD PTR [rsp+0x98],rcx
   140034ae6:	je     0x140034aef
   140034ae8:	sub    DWORD PTR [rsp+0x50],0x1
   140034aed:	je     0x140034b3f
   140034aef:	mov    rcx,QWORD PTR [rsp+0x70]
   140034af4:	add    ebx,0x1
   140034af7:	mov    DWORD PTR [rsp+0x34],ebx
   140034afb:	call   0x14003a1d0
   140034b00:	mov    di,ax
   140034b03:	jmp    0x140034a47
   140034b08:	sub    ebx,0x1
   140034b0b:	cmp    di,0xffff
   140034b10:	mov    DWORD PTR [rsp+0x34],ebx
   140034b14:	je     0x140034b37
   140034b16:	mov    rdx,QWORD PTR [rsp+0x70]
   140034b1b:	movzx  ecx,di
   140034b1e:	call   0x14003a400
   140034b23:	mov    rcx,QWORD PTR [rsp+0x98]
   140034b2b:	jmp    0x140034b3f
   140034b2d:	mov    rcx,QWORD PTR [rsp+0x98]
   140034b35:	jmp    0x140034b3f
   140034b37:	mov    rcx,QWORD PTR [rsp+0x98]
   140034b3f:	test   r14b,r14b
   140034b42:	je     0x140034c1a
   140034b48:	neg    rcx
   140034b4b:	mov    QWORD PTR [rsp+0x98],rcx
   140034b53:	jmp    0x140034c1a
   140034b58:	test   bl,bl
   140034b5a:	jne    0x140034c12
   140034b60:	mov    ebx,DWORD PTR [rsp+0x34]
   140034b64:	cmp    ebp,0x78
   140034b67:	je     0x140034ba2
   140034b69:	cmp    ebp,0x70
   140034b6c:	je     0x140034ba2
   140034b6e:	test   di,0xff00
   140034b73:	jne    0x140034bf7
   140034b79:	movzx  ecx,dil
   140034b7d:	call   0x140039db0
   140034b82:	test   eax,eax
   140034b84:	je     0x140034bf7
   140034b86:	cmp    ebp,0x6f
   140034b89:	jne    0x140034b97
   140034b8b:	cmp    di,0x38
   140034b8f:	jae    0x140034bf7
   140034b91:	shl    r13d,0x3
   140034b95:	jmp    0x140034bc5
   140034b97:	lea    eax,[r13+r13*4+0x0]
   140034b9c:	lea    r13d,[rax+rax*1]
   140034ba0:	jmp    0x140034bc5
   140034ba2:	test   di,0xff00
   140034ba7:	jne    0x140034bf7
   140034ba9:	movzx  ecx,dil
   140034bad:	call   0x140039ec0
   140034bb2:	test   eax,eax
   140034bb4:	je     0x140034bf7
   140034bb6:	movzx  ecx,di
   140034bb9:	shl    r13d,0x4
   140034bbd:	call   0x140033ee0
   140034bc2:	mov    di,ax
   140034bc5:	movzx  eax,di
   140034bc8:	add    esi,0x1
   140034bcb:	cmp    DWORD PTR [rsp+0x68],0x0
   140034bd0:	lea    r13d,[r13+rax*1-0x30]
   140034bd5:	je     0x140034bde
   140034bd7:	sub    DWORD PTR [rsp+0x50],0x1
   140034bdc:	je     0x140034c12
   140034bde:	mov    rcx,QWORD PTR [rsp+0x70]
   140034be3:	add    ebx,0x1
   140034be6:	mov    DWORD PTR [rsp+0x34],ebx
   140034bea:	call   0x14003a1d0
   140034bef:	mov    di,ax
   140034bf2:	jmp    0x140034b64
   140034bf7:	sub    ebx,0x1
   140034bfa:	cmp    di,0xffff
   140034bff:	mov    DWORD PTR [rsp+0x34],ebx
   140034c03:	je     0x140034c12
   140034c05:	mov    rdx,QWORD PTR [rsp+0x70]
   140034c0a:	movzx  ecx,di
   140034c0d:	call   0x14003a400
   140034c12:	test   r14b,r14b
   140034c15:	je     0x140034c1a
   140034c17:	neg    r13d
   140034c1a:	cmp    ebp,0x46
   140034c1d:	je     0x1400354b9
   140034c23:	test   esi,esi
   140034c25:	je     0x1400354d1
   140034c2b:	cmp    BYTE PTR [rsp+0x30],0x0
   140034c30:	jne    0x140035309
   140034c36:	add    DWORD PTR [rsp+0x38],0x1
   140034c3b:	jmp    0x140034c54
   140034c3d:	cmp    BYTE PTR [rsp+0x30],0x0
   140034c42:	mov    eax,DWORD PTR [rsp+0x34]
   140034c46:	mov    r13d,eax
   140034c49:	jne    0x1400352ff
   140034c4f:	mov    r12d,DWORD PTR [rsp+0x64]
   140034c54:	test   r12d,r12d
   140034c57:	je     0x140034c7b
   140034c59:	mov    rax,QWORD PTR [rsp+0x88]
   140034c61:	mov    rcx,QWORD PTR [rsp+0x98]
   140034c69:	mov    rbp,QWORD PTR [rsp+0x48]
   140034c6e:	mov    r13d,DWORD PTR [rsp+0x34]
   140034c73:	mov    QWORD PTR [rax],rcx
   140034c76:	jmp    0x14003532b
   140034c7b:	cmp    BYTE PTR [rsp+0x40],0x0
   140034c80:	je     0x140034c9c
   140034c82:	mov    rax,QWORD PTR [rsp+0x88]
   140034c8a:	mov    rbp,QWORD PTR [rsp+0x48]
   140034c8f:	mov    DWORD PTR [rax],r13d
   140034c92:	mov    r13d,DWORD PTR [rsp+0x34]
   140034c97:	jmp    0x14003532b
   140034c9c:	mov    rax,QWORD PTR [rsp+0x88]
   140034ca4:	mov    rbp,QWORD PTR [rsp+0x48]
   140034ca9:	mov    WORD PTR [rax],r13w
   140034cad:	mov    r13d,DWORD PTR [rsp+0x34]
   140034cb2:	jmp    0x14003532b
   140034cb7:	xor    ebx,ebx
   140034cb9:	cmp    di,0x2d
   140034cbd:	jne    0x140034cce
   140034cbf:	mov    rax,QWORD PTR [rsp+0x48]
   140034cc4:	mov    ebx,0x1
   140034cc9:	mov    WORD PTR [rax],di
   140034ccc:	jmp    0x140034cd4
   140034cce:	cmp    di,0x2b
   140034cd2:	jne    0x140034cfd
   140034cd4:	mov    r14,QWORD PTR [rsp+0x70]
   140034cd9:	mov    r12d,DWORD PTR [rsp+0x50]
   140034cde:	mov    r13d,DWORD PTR [rsp+0x34]
   140034ce3:	mov    rcx,r14
   140034ce6:	sub    r12d,0x1
   140034cea:	add    r13d,0x1
   140034cee:	call   0x14003a1d0
   140034cf3:	mov    r8d,DWORD PTR [rsp+0x68]
   140034cf8:	mov    di,ax
   140034cfb:	jmp    0x140034d0c
   140034cfd:	mov    r12d,DWORD PTR [rsp+0x50]
   140034d02:	mov    r13d,DWORD PTR [rsp+0x34]
   140034d07:	mov    r14,QWORD PTR [rsp+0x70]
   140034d0c:	test   r8d,r8d
   140034d0f:	mov    eax,0xffffffff
   140034d14:	cmove  r12d,eax
   140034d18:	test   di,0xff00
   140034d1d:	jne    0x140034de8
   140034d23:	movzx  ecx,dil
   140034d27:	call   0x140039db0
   140034d2c:	test   eax,eax
   140034d2e:	je     0x140034de8
   140034d34:	mov    eax,r12d
   140034d37:	sub    r12d,0x1
   140034d3b:	test   eax,eax
   140034d3d:	je     0x140034de8
   140034d43:	mov    rbp,QWORD PTR [rsp+0x48]
   140034d48:	add    DWORD PTR [rsp+0x60],0x1
   140034d4d:	movsx  eax,dil
   140034d51:	mov    WORD PTR [rbp+rbx*2+0x0],ax
   140034d56:	add    rbx,0x1
   140034d5a:	cmp    rbx,r15
   140034d5d:	jne    0x140034dcf
   140034d5f:	lea    rax,[rsp+0xe0]
   140034d67:	cmp    rbp,rax
   140034d6a:	jne    0x140034dad
   140034d6c:	mov    edx,0x4
   140034d71:	mov    rcx,r15
   140034d74:	call   0x140032130
   140034d79:	test   rax,rax
   140034d7c:	mov    rbp,rax
   140034d7f:	mov    QWORD PTR [rsp+0x48],rax
   140034d84:	je     0x140035625
   140034d8a:	add    r15,r15
   140034d8d:	lea    rdx,[rsp+0xe0]
   140034d95:	mov    rcx,rax
   140034d98:	mov    r8,r15
   140034d9b:	mov    DWORD PTR [rsp+0x80],0x1
   140034da6:	call   0x14002b7a0
   140034dab:	jmp    0x140034dcf
   140034dad:	mov    r8d,0x4
   140034db3:	mov    rdx,r15
   140034db6:	mov    rcx,rbp
   140034db9:	call   0x140032250
   140034dbe:	test   rax,rax
   140034dc1:	je     0x140035615
   140034dc7:	mov    QWORD PTR [rsp+0x48],rax
   140034dcc:	add    r15,r15
   140034dcf:	mov    rcx,r14
   140034dd2:	add    r13d,0x1
   140034dd6:	call   0x14003a1d0
   140034ddb:	test   ax,0xff00
   140034ddf:	mov    di,ax
   140034de2:	je     0x140034d23
   140034de8:	mov    rax,QWORD PTR [rsp+0xb8]
   140034df0:	mov    WORD PTR [rsp+0x94],0x2e
   140034dfa:	lea    r9,[rsp+0xb8]
   140034e02:	mov    rdx,QWORD PTR [rax+0x128]
   140034e09:	movsxd r8,DWORD PTR [rax+0x10c]
   140034e10:	lea    rcx,[rsp+0x94]
   140034e18:	mov    rdx,QWORD PTR [rdx]
   140034e1b:	call   0x140038a40
   140034e20:	movzx  r11d,WORD PTR [rsp+0x94]
   140034e29:	movsx  eax,dil
   140034e2d:	cmp    r11d,eax
   140034e30:	jne    0x140034fbb
   140034e36:	mov    eax,r12d
   140034e39:	sub    r12d,0x1
   140034e3d:	test   eax,eax
   140034e3f:	je     0x140034fbb
   140034e45:	mov    rcx,r14
   140034e48:	add    r13d,0x1
   140034e4c:	call   0x14003a1d0
   140034e51:	mov    rbp,QWORD PTR [rsp+0x48]
   140034e56:	add    rbx,0x1
   140034e5a:	cmp    rbx,r15
   140034e5d:	mov    di,ax
   140034e60:	movzx  eax,WORD PTR [rsp+0x94]
   140034e68:	mov    WORD PTR [rbp+rbx*2-0x2],ax
   140034e6d:	jne    0x140034eec
   140034e6f:	lea    rax,[rsp+0xe0]
   140034e77:	cmp    rbp,rax
   140034e7a:	jne    0x140034ec0
   140034e7c:	mov    edx,0x4
   140034e81:	mov    rcx,r15
   140034e84:	call   0x140032130
   140034e89:	test   rax,rax
   140034e8c:	mov    rbp,rax
   140034e8f:	mov    QWORD PTR [rsp+0x48],rax
   140034e94:	je     0x140035605
   140034e9a:	add    r15,r15
   140034e9d:	mov    esi,0x1
   140034ea2:	lea    rdx,[rsp+0xe0]
   140034eaa:	mov    eax,esi
   140034eac:	mov    r8,r15
   140034eaf:	mov    rcx,rbp
   140034eb2:	mov    DWORD PTR [rsp+0x80],eax
   140034eb9:	call   0x14002b7a0
   140034ebe:	jmp    0x140034ef1
   140034ec0:	mov    r8d,0x4
   140034ec6:	mov    rdx,r15
   140034ec9:	mov    rcx,rbp
   140034ecc:	call   0x140032250
   140034ed1:	test   rax,rax
   140034ed4:	je     0x1400355f5
   140034eda:	mov    rbp,rax
   140034edd:	mov    QWORD PTR [rsp+0x48],rax
   140034ee2:	add    r15,r15
   140034ee5:	mov    esi,0x1
   140034eea:	jmp    0x140034ef1
   140034eec:	mov    esi,0x1
   140034ef1:	test   di,0xff00
   140034ef6:	jne    0x140034fbb
   140034efc:	data16 data16 xchg ax,ax
   140034f00:	movzx  ecx,dil
   140034f04:	call   0x140039db0
   140034f09:	test   eax,eax
   140034f0b:	je     0x140034fbb
   140034f11:	mov    eax,r12d
   140034f14:	sub    r12d,0x1
   140034f18:	test   eax,eax
   140034f1a:	je     0x140034fbb
   140034f20:	add    DWORD PTR [rsp+0x60],0x1
   140034f25:	mov    WORD PTR [rbp+rbx*2+0x0],di
   140034f2a:	add    rbx,0x1
   140034f2e:	cmp    rbx,r15
   140034f31:	jne    0x140034fa2
   140034f33:	lea    rax,[rsp+0xe0]
   140034f3b:	cmp    rbp,rax
   140034f3e:	jne    0x140034f7d
   140034f40:	mov    edx,0x4
   140034f45:	mov    rcx,r15
   140034f48:	call   0x140032130
   140034f4d:	test   rax,rax
   140034f50:	mov    rbp,rax
   140034f53:	mov    QWORD PTR [rsp+0x48],rax
   140034f58:	je     0x1400355e5
   140034f5e:	add    r15,r15
   140034f61:	lea    rdx,[rsp+0xe0]
   140034f69:	mov    rcx,rax
   140034f6c:	mov    r8,r15
   140034f6f:	mov    DWORD PTR [rsp+0x80],esi
   140034f76:	call   0x14002b7a0
   140034f7b:	jmp    0x140034fa2
   140034f7d:	mov    r8d,0x4
   140034f83:	mov    rdx,r15
   140034f86:	mov    rcx,rbp
   140034f89:	call   0x140032250
   140034f8e:	test   rax,rax
   140034f91:	je     0x1400355d5
   140034f97:	mov    rbp,rax
   140034f9a:	mov    QWORD PTR [rsp+0x48],rax
   140034f9f:	add    r15,r15
   140034fa2:	mov    rcx,r14
   140034fa5:	add    r13d,0x1
   140034fa9:	call   0x14003a1d0
   140034fae:	test   ax,0xff00
   140034fb2:	mov    di,ax
   140034fb5:	je     0x140034f00
   140034fbb:	mov    esi,DWORD PTR [rsp+0x60]
   140034fbf:	test   esi,esi
   140034fc1:	je     0x1400351f6
   140034fc7:	cmp    di,0x65
   140034fcb:	je     0x140034fd7
   140034fcd:	cmp    di,0x45
   140034fd1:	jne    0x1400351f6
   140034fd7:	mov    eax,r12d
   140034fda:	sub    r12d,0x1
   140034fde:	test   eax,eax
   140034fe0:	je     0x1400351f6
   140034fe6:	mov    rbp,QWORD PTR [rsp+0x48]
   140034feb:	add    rbx,0x1
   140034fef:	cmp    rbx,r15
   140034ff2:	mov    WORD PTR [rbp+rbx*2-0x2],0x65
   140034ff9:	jne    0x14003506e
   140034ffb:	lea    rax,[rsp+0xe0]
   140035003:	cmp    rbp,rax
   140035006:	jne    0x140035049
   140035008:	mov    edx,0x4
   14003500d:	mov    rcx,r15
   140035010:	call   0x140032130
   140035015:	test   rax,rax
   140035018:	mov    rbp,rax
   14003501b:	mov    QWORD PTR [rsp+0x48],rax
   140035020:	je     0x1400355c2
   140035026:	add    r15,r15
   140035029:	lea    rdx,[rsp+0xe0]
   140035031:	mov    rcx,rax
   140035034:	mov    r8,r15
   140035037:	mov    DWORD PTR [rsp+0x80],0x1
   140035042:	call   0x14002b7a0
   140035047:	jmp    0x14003506e
   140035049:	mov    r8d,0x4
   14003504f:	mov    rdx,r15
   140035052:	mov    rcx,rbp
   140035055:	call   0x140032250
   14003505a:	test   rax,rax
   14003505d:	je     0x1400355af
   140035063:	mov    rbp,rax
   140035066:	mov    QWORD PTR [rsp+0x48],rax
   14003506b:	add    r15,r15
   14003506e:	mov    rcx,r14
   140035071:	add    r13d,0x1
   140035075:	call   0x14003a1d0
   14003507a:	cmp    ax,0x2d
   14003507e:	mov    di,ax
   140035081:	jne    0x140035107
   140035087:	mov    WORD PTR [rbp+rbx*2+0x0],ax
   14003508c:	add    rbx,0x1
   140035090:	cmp    rbx,r15
   140035093:	jne    0x14003510d
   140035095:	lea    rax,[rsp+0xe0]
   14003509d:	cmp    rbp,rax
   1400350a0:	jne    0x1400350e3
   1400350a2:	mov    edx,0x4
   1400350a7:	mov    rcx,r15
   1400350aa:	call   0x140032130
   1400350af:	test   rax,rax
   1400350b2:	mov    rbp,rax
   1400350b5:	mov    QWORD PTR [rsp+0x48],rax
   1400350ba:	je     0x14003559c
   1400350c0:	add    r15,r15
   1400350c3:	lea    rdx,[rsp+0xe0]
   1400350cb:	mov    rcx,rax
   1400350ce:	mov    r8,r15
   1400350d1:	mov    DWORD PTR [rsp+0x80],0x1
   1400350dc:	call   0x14002b7a0
   1400350e1:	jmp    0x14003510d
   1400350e3:	mov    r8d,0x4
   1400350e9:	mov    rdx,r15
   1400350ec:	mov    rcx,rbp
   1400350ef:	call   0x140032250
   1400350f4:	test   rax,rax
   1400350f7:	je     0x140035589
   1400350fd:	mov    QWORD PTR [rsp+0x48],rax
   140035102:	add    r15,r15
   140035105:	jmp    0x14003510d
   140035107:	cmp    di,0x2b
   14003510b:	jne    0x14003512c
   14003510d:	mov    eax,r12d
   140035110:	sub    r12d,0x1
   140035114:	test   eax,eax
   140035116:	jne    0x14003511d
   140035118:	xor    r12d,r12d
   14003511b:	jmp    0x14003512c
   14003511d:	mov    rcx,r14
   140035120:	add    r13d,0x1
   140035124:	call   0x14003a1d0
   140035129:	mov    di,ax
   14003512c:	test   di,0xff00
   140035131:	jne    0x1400351f6
   140035137:	movzx  ecx,dil
   14003513b:	call   0x140039db0
   140035140:	test   eax,eax
   140035142:	je     0x1400351f6
   140035148:	mov    eax,r12d
   14003514b:	sub    r12d,0x1
   14003514f:	test   eax,eax
   140035151:	je     0x1400351f6
   140035157:	mov    rbp,QWORD PTR [rsp+0x48]
   14003515c:	add    rbx,0x1
   140035160:	add    esi,0x1
   140035163:	cmp    rbx,r15
   140035166:	mov    WORD PTR [rbp+rbx*2-0x2],di
   14003516b:	jne    0x1400351dd
   14003516d:	lea    rax,[rsp+0xe0]
   140035175:	cmp    rbp,rax
   140035178:	jne    0x1400351bb
   14003517a:	mov    edx,0x4
   14003517f:	mov    rcx,r15
   140035182:	call   0x140032130
   140035187:	test   rax,rax
   14003518a:	mov    rbp,rax
   14003518d:	mov    QWORD PTR [rsp+0x48],rax
   140035192:	je     0x140035576
   140035198:	add    r15,r15
   14003519b:	lea    rdx,[rsp+0xe0]
   1400351a3:	mov    rcx,rax
   1400351a6:	mov    r8,r15
   1400351a9:	mov    DWORD PTR [rsp+0x80],0x1
   1400351b4:	call   0x14002b7a0
   1400351b9:	jmp    0x1400351dd
   1400351bb:	mov    r8d,0x4
   1400351c1:	mov    rdx,r15
   1400351c4:	mov    rcx,rbp
   1400351c7:	call   0x140032250
   1400351cc:	test   rax,rax
   1400351cf:	je     0x140035563
   1400351d5:	mov    QWORD PTR [rsp+0x48],rax
   1400351da:	add    r15,r15
   1400351dd:	mov    rcx,r14
   1400351e0:	add    r13d,0x1
   1400351e4:	call   0x14003a1d0
   1400351e9:	test   ax,0xff00
   1400351ed:	mov    di,ax
   1400351f0:	je     0x140035137
   1400351f6:	sub    r13d,0x1
   1400351fa:	cmp    di,0xffff
   1400351ff:	mov    DWORD PTR [rsp+0x34],r13d
   140035204:	je     0x140035211
   140035206:	mov    rdx,r14
   140035209:	movzx  ecx,di
   14003520c:	call   0x14003a400
   140035211:	test   esi,esi
   140035213:	je     0x1400354a1
   140035219:	cmp    BYTE PTR [rsp+0x30],0x0
   14003521e:	jne    0x1400352f8
   140035224:	mov    r12d,DWORD PTR [rsp+0x38]
   140035229:	mov    rbp,QWORD PTR [rsp+0x48]
   14003522e:	mov    WORD PTR [rbp+rbx*2+0x0],0x0
   140035235:	lea    rbx,[r15+r15*1+0x2]
   14003523a:	add    r12d,0x1
   14003523e:	mov    rcx,rbx
   140035241:	mov    DWORD PTR [rsp+0x38],r12d
   140035246:	call   0x1400320c0
   14003524b:	test   rax,rax
   14003524e:	mov    rsi,rax
   140035251:	je     0x140035555
   140035257:	lea    rcx,[rbx-0x1]
   14003525b:	mov    r9,rbp
   14003525e:	mov    r8,rbx
   140035261:	mov    QWORD PTR [rsp+0x20],rcx
   140035266:	xor    ecx,ecx
   140035268:	mov    rdx,rax
   14003526b:	call   0x14003ad60
   140035270:	test   eax,eax
   140035272:	je     0x140035296
   140035274:	cmp    eax,0x16
   140035277:	je     0x14003527e
   140035279:	cmp    eax,0x22
   14003527c:	jne    0x140035296
   14003527e:	xor    r9d,r9d
   140035281:	xor    r8d,r8d
   140035284:	xor    edx,edx
   140035286:	xor    ecx,ecx
   140035288:	mov    QWORD PTR [rsp+0x20],0x0
   140035291:	call   0x14002e860
   140035296:	movsx  ebx,BYTE PTR [rsp+0x40]
   14003529b:	mov    rcx,QWORD PTR [rip+0x26aa6]        # 0x14005bd48
   1400352a2:	sub    ebx,0x1
   1400352a5:	call   0x14002df20
   1400352aa:	mov    rdx,QWORD PTR [rsp+0x88]
   1400352b2:	lea    r9,[rsp+0xb8]
   1400352ba:	mov    r8,rsi
   1400352bd:	mov    ecx,ebx
   1400352bf:	call   rax
   1400352c1:	mov    rcx,rsi
   1400352c4:	call   0x14002a380
   1400352c9:	jmp    0x14003532b
   1400352cb:	mov    cl,BYTE PTR [rsp+0x30]
   1400352cf:	cmp    WORD PTR [r9],di
   1400352d3:	jne    0x14003544b
   1400352d9:	add    BYTE PTR [rsp+0x42],0xff
   1400352de:	mov    rbp,QWORD PTR [rsp+0x48]
   1400352e3:	mov    r13d,DWORD PTR [rsp+0x34]
   1400352e8:	test   cl,cl
   1400352ea:	cmove  r10,r11
   1400352ee:	mov    QWORD PTR [rsp+0xa8],r10
   1400352f6:	jmp    0x14003532b
   1400352f8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400352fd:	jmp    0x14003532b
   1400352ff:	mov    rbp,QWORD PTR [rsp+0x48]
   140035304:	mov    r13d,eax
   140035307:	jmp    0x14003532b
   140035309:	mov    rbp,QWORD PTR [rsp+0x48]
   14003530e:	mov    r13d,DWORD PTR [rsp+0x34]
   140035313:	jmp    0x14003532b
   140035315:	mov    rbp,QWORD PTR [rsp+0x48]
   14003531a:	mov    r13d,DWORD PTR [rsp+0x34]
   14003531f:	jmp    0x14003532b
   140035321:	mov    rbp,QWORD PTR [rsp+0x48]
   140035326:	mov    r13d,DWORD PTR [rsp+0x34]
   14003532b:	mov    rsi,QWORD PTR [rsp+0x78]
   140035330:	add    BYTE PTR [rsp+0x42],0x1
   140035335:	mov    r12,QWORD PTR [rsp+0x70]
   14003533a:	add    rsi,0x2
   14003533e:	mov    QWORD PTR [rsp+0x78],rsi
   140035343:	jmp    0x140035373
   140035345:	add    r13d,0x1
   140035349:	mov    rcx,r12
   14003534c:	mov    DWORD PTR [rsp+0x34],r13d
   140035351:	call   0x14003a1d0
   140035356:	mov    rsi,QWORD PTR [rsp+0x78]
   14003535b:	mov    di,ax
   14003535e:	movzx  eax,WORD PTR [rsi]
   140035361:	add    rsi,0x2
   140035365:	cmp    ax,di
   140035368:	mov    QWORD PTR [rsp+0x78],rsi
   14003536d:	jne    0x140035478
   140035373:	cmp    di,0xffff
   140035378:	jne    0x14003538f
   14003537a:	cmp    WORD PTR [rsi],0x25
   14003537e:	jne    0x140035645
   140035384:	cmp    WORD PTR [rsi+0x2],0x6e
   140035389:	jne    0x140035655
   14003538f:	mov    ax,WORD PTR [rsi]
   140035392:	test   ax,ax
   140035395:	jne    0x1400340e0
   14003539b:	mov    r11,QWORD PTR [rsp+0x58]
   1400353a0:	mov    r12d,DWORD PTR [rsp+0x38]
   1400353a5:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400353a9:	jmp    0x140035663
   1400353ae:	cmp    di,0xffff
   1400353b3:	je     0x140035527
   1400353b9:	mov    rdx,QWORD PTR [rsp+0x70]
   1400353be:	movzx  ecx,di
   1400353c1:	call   0x14003a400
   1400353c6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400353cb:	mov    r11,QWORD PTR [rsp+0x58]
   1400353d0:	mov    r12d,DWORD PTR [rsp+0x38]
   1400353d5:	mov    ebx,r14d
   1400353d8:	jmp    0x140035663
   1400353dd:	mov    BYTE PTR [rax],0x0
   1400353e0:	call   0x14002bca0
   1400353e5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400353ea:	mov    r11,QWORD PTR [rsp+0x58]
   1400353ef:	mov    r12d,DWORD PTR [rsp+0x38]
   1400353f4:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400353f8:	mov    DWORD PTR [rax],0xc
   1400353fe:	jmp    0x140035663
   140035403:	call   0x14002bca0
   140035408:	test   r13b,r13b
   14003540b:	mov    DWORD PTR [rax],0xc
   140035411:	je     0x140035430
   140035413:	mov    rbp,QWORD PTR [rsp+0x48]
   140035418:	mov    r11,QWORD PTR [rsp+0x58]
   14003541d:	mov    r12d,DWORD PTR [rsp+0x38]
   140035422:	mov    WORD PTR [rbx],0x0
   140035427:	mov    ebx,DWORD PTR [rsp+0x3c]
   14003542b:	jmp    0x140035663
   140035430:	mov    rbp,QWORD PTR [rsp+0x48]
   140035435:	mov    r11,QWORD PTR [rsp+0x58]
   14003543a:	mov    r12d,DWORD PTR [rsp+0x38]
   14003543f:	mov    BYTE PTR [rbx],0x0
   140035442:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035446:	jmp    0x140035663
   14003544b:	cmp    di,0xffff
   140035450:	je     0x14003545f
   140035452:	mov    rdx,QWORD PTR [rsp+0x70]
   140035457:	movzx  ecx,di
   14003545a:	call   0x14003a400
   14003545f:	mov    rbp,QWORD PTR [rsp+0x48]
   140035464:	mov    r11,QWORD PTR [rsp+0x58]
   140035469:	mov    r12d,DWORD PTR [rsp+0x38]
   14003546e:	mov    ebx,0x1
   140035473:	jmp    0x140035663
   140035478:	cmp    di,0xffff
   14003547d:	je     0x140035635
   140035483:	mov    rdx,r12
   140035486:	movzx  ecx,di
   140035489:	call   0x14003a400
   14003548e:	mov    r11,QWORD PTR [rsp+0x58]
   140035493:	mov    r12d,DWORD PTR [rsp+0x38]
   140035498:	mov    ebx,DWORD PTR [rsp+0x3c]
   14003549c:	jmp    0x140035663
   1400354a1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400354a6:	mov    r11,QWORD PTR [rsp+0x58]
   1400354ab:	mov    r12d,DWORD PTR [rsp+0x38]
   1400354b0:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400354b4:	jmp    0x140035663
   1400354b9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400354be:	mov    r11,QWORD PTR [rsp+0x58]
   1400354c3:	mov    r12d,DWORD PTR [rsp+0x38]
   1400354c8:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400354cc:	jmp    0x140035663
   1400354d1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400354d6:	mov    r11,QWORD PTR [rsp+0x58]
   1400354db:	mov    r12d,DWORD PTR [rsp+0x38]
   1400354e0:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400354e4:	jmp    0x140035663
   1400354e9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400354ee:	mov    r11,QWORD PTR [rsp+0x58]
   1400354f3:	mov    r12d,DWORD PTR [rsp+0x38]
   1400354f8:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400354fc:	jmp    0x140035663
   140035501:	mov    rbp,QWORD PTR [rsp+0x48]
   140035506:	mov    r12d,DWORD PTR [rsp+0x38]
   14003550b:	mov    ebx,DWORD PTR [rsp+0x3c]
   14003550f:	jmp    0x140035663
   140035514:	mov    rbp,QWORD PTR [rsp+0x48]
   140035519:	mov    r12d,DWORD PTR [rsp+0x38]
   14003551e:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035522:	jmp    0x140035663
   140035527:	mov    rbp,QWORD PTR [rsp+0x48]
   14003552c:	mov    r11,QWORD PTR [rsp+0x58]
   140035531:	mov    r12d,DWORD PTR [rsp+0x38]
   140035536:	mov    ebx,r14d
   140035539:	jmp    0x140035663
   14003553e:	mov    rbp,QWORD PTR [rsp+0x48]
   140035543:	mov    r11,QWORD PTR [rsp+0x58]
   140035548:	mov    r12d,DWORD PTR [rsp+0x38]
   14003554d:	mov    ebx,r14d
   140035550:	jmp    0x140035663
   140035555:	mov    r11,QWORD PTR [rsp+0x58]
   14003555a:	mov    ebx,DWORD PTR [rsp+0x3c]
   14003555e:	jmp    0x140035663
   140035563:	mov    r11,QWORD PTR [rsp+0x58]
   140035568:	mov    r12d,DWORD PTR [rsp+0x38]
   14003556d:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035571:	jmp    0x140035663
   140035576:	mov    r11,QWORD PTR [rsp+0x58]
   14003557b:	mov    r12d,DWORD PTR [rsp+0x38]
   140035580:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035584:	jmp    0x140035663
   140035589:	mov    r11,QWORD PTR [rsp+0x58]
   14003558e:	mov    r12d,DWORD PTR [rsp+0x38]
   140035593:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035597:	jmp    0x140035663
   14003559c:	mov    r11,QWORD PTR [rsp+0x58]
   1400355a1:	mov    r12d,DWORD PTR [rsp+0x38]
   1400355a6:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400355aa:	jmp    0x140035663
   1400355af:	mov    r11,QWORD PTR [rsp+0x58]
   1400355b4:	mov    r12d,DWORD PTR [rsp+0x38]
   1400355b9:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400355bd:	jmp    0x140035663
   1400355c2:	mov    r11,QWORD PTR [rsp+0x58]
   1400355c7:	mov    r12d,DWORD PTR [rsp+0x38]
   1400355cc:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400355d0:	jmp    0x140035663
   1400355d5:	mov    r11,QWORD PTR [rsp+0x58]
   1400355da:	mov    r12d,DWORD PTR [rsp+0x38]
   1400355df:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400355e3:	jmp    0x140035663
   1400355e5:	mov    r11,QWORD PTR [rsp+0x58]
   1400355ea:	mov    r12d,DWORD PTR [rsp+0x38]
   1400355ef:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400355f3:	jmp    0x140035663
   1400355f5:	mov    r11,QWORD PTR [rsp+0x58]
   1400355fa:	mov    r12d,DWORD PTR [rsp+0x38]
   1400355ff:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035603:	jmp    0x140035663
   140035605:	mov    r11,QWORD PTR [rsp+0x58]
   14003560a:	mov    r12d,DWORD PTR [rsp+0x38]
   14003560f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035613:	jmp    0x140035663
   140035615:	mov    r11,QWORD PTR [rsp+0x58]
   14003561a:	mov    r12d,DWORD PTR [rsp+0x38]
   14003561f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035623:	jmp    0x140035663
   140035625:	mov    r11,QWORD PTR [rsp+0x58]
   14003562a:	mov    r12d,DWORD PTR [rsp+0x38]
   14003562f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035633:	jmp    0x140035663
   140035635:	mov    r11,QWORD PTR [rsp+0x58]
   14003563a:	mov    r12d,DWORD PTR [rsp+0x38]
   14003563f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035643:	jmp    0x140035663
   140035645:	mov    r11,QWORD PTR [rsp+0x58]
   14003564a:	mov    r12d,DWORD PTR [rsp+0x38]
   14003564f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035653:	jmp    0x140035663
   140035655:	mov    r11,QWORD PTR [rsp+0x58]
   14003565a:	mov    r12d,DWORD PTR [rsp+0x38]
   14003565f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140035663:	mov    eax,DWORD PTR [rsp+0xb0]
   14003566a:	cmp    eax,0x1
   14003566d:	jne    0x140035677
   14003566f:	mov    rcx,r11
   140035672:	call   0x14002a380
   140035677:	mov    eax,DWORD PTR [rsp+0x80]
   14003567e:	cmp    eax,0x1
   140035681:	jne    0x14003568b
   140035683:	mov    rcx,rbp
   140035686:	call   0x14002a380
   14003568b:	cmp    di,0xffff
   140035690:	jne    0x1400356c3
   140035692:	test   r12d,r12d
   140035695:	jne    0x1400356a5
   140035697:	movzx  eax,BYTE PTR [rsp+0x42]
   14003569c:	test   al,al
   14003569e:	jne    0x1400356a5
   1400356a0:	or     eax,0xffffffff
   1400356a3:	jmp    0x1400356a8
   1400356a5:	mov    eax,r12d
   1400356a8:	cmp    BYTE PTR [rsp+0xd0],0x0
   1400356b0:	je     0x140035729
   1400356b2:	mov    rcx,QWORD PTR [rsp+0xc8]
   1400356ba:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400356c1:	jmp    0x140035729
   1400356c3:	cmp    ebx,0x1
   1400356c6:	jne    0x140035709
   1400356c8:	call   0x14002bca0
   1400356cd:	xor    r9d,r9d
   1400356d0:	xor    r8d,r8d
   1400356d3:	xor    edx,edx
   1400356d5:	xor    ecx,ecx
   1400356d7:	mov    QWORD PTR [rsp+0x20],0x0
   1400356e0:	mov    DWORD PTR [rax],0x16
   1400356e6:	call   0x14002e900
   1400356eb:	cmp    BYTE PTR [rsp+0xd0],0x0
   1400356f3:	je     0x140035704
   1400356f5:	mov    rcx,QWORD PTR [rsp+0xc8]
   1400356fd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140035704:	mov    eax,r12d
   140035707:	jmp    0x140035729
   140035709:	mov    r11,QWORD PTR [rsp+0xc8]
   140035711:	mov    ecx,DWORD PTR [rsp+0x38]
   140035715:	cmp    BYTE PTR [rsp+0xd0],0x0
   14003571d:	je     0x140035727
   14003571f:	and    DWORD PTR [r11+0xc8],0xfffffffd
   140035727:	mov    eax,ecx
   140035729:	mov    r13,QWORD PTR [rsp+0x3b8]
   140035731:	mov    rcx,QWORD PTR [rsp+0x3a0]
   140035739:	xor    rcx,rsp
   14003573c:	call   0x140029b40
   140035741:	add    rsp,0x3c0
   140035748:	pop    r15
   14003574a:	pop    r14
   14003574c:	pop    r12
   14003574e:	pop    rdi
   14003574f:	pop    rsi
   140035750:	pop    rbp
   140035751:	pop    rbx
   140035752:	ret    
   140035753:	nop
   140035754:	cmp    al,BYTE PTR [rbx+0x3]
   140035757:	add    BYTE PTR [rdi+0x43],al
   14003575a:	add    eax,DWORD PTR [rax]
   14003575c:	rex.WRXB
   14003575d:	rex.X add eax,DWORD PTR [rax]
   140035760:	clc    
   140035761:	rex.X add eax,DWORD PTR [rax]
   140035764:	rex.X add eax,DWORD PTR ds:[rax]
   140035768:	add    al,BYTE PTR [rbx+0x3]
   14003576b:	add    BYTE PTR [rax],dh
   14003576d:	rex.XB add eax,DWORD PTR [r8]
   140035770:	fadd   DWORD PTR [rdx+0x3]
   140035773:	add    BYTE PTR [rax],al
   140035775:	(bad)  
   140035776:	(bad)  
   140035777:	(bad)  
   140035778:	(bad)  
   140035779:	(bad)  
   14003577a:	(bad)  
   14003577b:	(bad)  
   14003577c:	(bad)  
   14003577d:	(bad)  
   14003577e:	(bad)  
   14003577f:	(bad)  
   140035780:	(bad)  
   140035781:	(bad)  
   140035782:	(bad)  
   140035783:	(bad)  
   140035784:	(bad)  
   140035785:	(bad)  
   140035786:	(bad)  
   140035787:	(bad)  
   140035788:	(bad)  
   140035789:	(bad)  
   14003578a:	(bad)  
   14003578b:	(bad)  
   14003578c:	(bad)  
   14003578d:	(bad)  
   14003578e:	(bad)  
   14003578f:	(bad)  
   140035790:	add    DWORD PTR [rdi],eax
   140035792:	(bad)  
   140035793:	add    al,BYTE PTR [rdi]
   140035795:	(bad)  
   140035796:	add    eax,DWORD PTR [rdi]
   140035798:	add    DWORD PTR [rdi],eax
   14003579a:	(bad)  
   14003579b:	(bad)  
   14003579c:	(bad)  
   14003579d:	(bad)  
   14003579e:	(bad)  
   14003579f:	(bad)  
   1400357a0:	(bad)  
   1400357a1:	(bad)  
   1400357a2:	(bad)  
   1400357a3:	(bad)  
   1400357a4:	(bad)  
   1400357a5:	(bad)  
   1400357a6:	(bad)  
   1400357a7:	(bad)  
   1400357a8:	(bad)  
   1400357a9:	(bad)  
   1400357aa:	(bad)  
   1400357ab:	(bad)  
   1400357ac:	(bad)  
   1400357ad:	(bad)  
   1400357ae:	(bad)  
   1400357af:	(bad)  
   1400357b0:	(bad)  
   1400357b1:	(bad)  
   1400357b2:	add    al,0x7
   1400357b4:	(bad)  
   1400357b5:	(bad)  
   1400357b6:	add    eax,0x7070707
   1400357bb:	(bad)  
   1400357bc:	(bad)  
   1400357bd:	(bad)  
   1400357be:	(bad)  
   1400357bf:	(bad)  
   1400357c0:	(bad)  
   1400357c1:	(bad)  
   1400357c2:	xchg   ax,ax
   1400357c4:	or     DWORD PTR [rbp+0x3],eax
   1400357c7:	add    cl,dl
   1400357c9:	add    rax,QWORD PTR [r8]
   1400357cc:	mov    bh,0x4c
   1400357ce:	add    eax,DWORD PTR [rax]
   1400357d0:	mov    bh,0x4c
   1400357d2:	add    eax,DWORD PTR [rax]
   1400357d4:	mov    bh,0x4c
   1400357d6:	add    eax,DWORD PTR [rax]
   1400357d8:	retf   
   1400357d9:	push   rdx
   1400357da:	add    eax,DWORD PTR [rax]
   1400357dc:	mov    ecx,DWORD PTR [rax+0x3]
   1400357df:	add    bl,cl
   1400357e1:	push   rdx
   1400357e2:	add    eax,DWORD PTR [rax]
   1400357e4:	retf   
   1400357e5:	push   rdx
   1400357e6:	add    eax,DWORD PTR [rax]
   1400357e8:	retf   
   1400357e9:	push   rdx
   1400357ea:	add    eax,DWORD PTR [rax]
   1400357ec:	retf   
   1400357ed:	push   rdx
   1400357ee:	add    eax,DWORD PTR [rax]
   1400357f0:	cmp    eax,0xd100034c
   1400357f5:	add    rax,QWORD PTR [r8]
   1400357f8:	mov    ch,0x49
   1400357fa:	add    eax,DWORD PTR [rax]
   1400357fc:	retf   
   1400357fd:	push   rdx
   1400357fe:	add    eax,DWORD PTR [rax]
   140035800:	retf   
   140035801:	push   rdx
   140035802:	add    eax,DWORD PTR [rax]
   140035804:	xor    al,0x45
   140035806:	add    eax,DWORD PTR [rax]
   140035808:	retf   
   140035809:	push   rdx
   14003580a:	add    eax,DWORD PTR [rax]
   14003580c:	ror    DWORD PTR [rcx+0x3],1
   14003580f:	add    bl,cl
   140035811:	push   rdx
   140035812:	add    eax,DWORD PTR [rax]
   140035814:	retf   
   140035815:	push   rdx
   140035816:	add    eax,DWORD PTR [rax]
   140035818:	nop
   140035819:	add    rax,QWORD PTR [rax]
   14003581c:	retf   
   14003581d:	push   rdx
   14003581e:	add    eax,DWORD PTR [rax]
   140035820:	retf   
   140035821:	push   rdx
   140035822:	add    eax,DWORD PTR [rax]
   140035824:	rex.WX
   140035825:	add    r8d,DWORD PTR [r8]
   140035828:	int3   
   140035829:	int3   
   14003582a:	int3   
   14003582b:	int3   
   14003582c:	int3   
   14003582d:	int3   
   14003582e:	int3   
   14003582f:	int3   
   140035830:	mov    QWORD PTR [rsp+0x8],rbx
   140035835:	mov    QWORD PTR [rsp+0x10],rbp
   14003583a:	mov    QWORD PTR [rsp+0x18],rsi
   14003583f:	push   rdi
   140035840:	push   r12
   140035842:	push   r13
   140035844:	sub    rsp,0x20
   140035848:	lea    r12,[rip+0x26281]        # 0x14005bad0
   14003584f:	xor    esi,esi
   140035851:	lea    r13,[rip+0x2c058]        # 0x1400618b0
   140035858:	xor    edi,edi
   14003585a:	lea    rbp,[rip+0x264af]        # 0x14005bd10
   140035861:	mov    rbx,r12
   140035864:	cmp    DWORD PTR [rbx+0x8],0x1
   140035868:	jne    0x14003588a
   14003586a:	movsxd rax,esi
   14003586d:	mov    edx,0xfa0
   140035872:	add    esi,0x1
   140035875:	lea    rcx,[rax+rax*4]
   140035879:	lea    rcx,[r13+rcx*8+0x0]
   14003587e:	mov    QWORD PTR [rbx],rcx
   140035881:	call   0x140035e50
   140035886:	test   eax,eax
   140035888:	je     0x1400358b4
   14003588a:	add    rbx,0x10
   14003588e:	add    edi,0x1
   140035891:	cmp    rbx,rbp
   140035894:	jl     0x140035864
   140035896:	mov    eax,0x1
   14003589b:	mov    rbx,QWORD PTR [rsp+0x40]
   1400358a0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400358a5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400358aa:	add    rsp,0x20
   1400358ae:	pop    r13
   1400358b0:	pop    r12
   1400358b2:	pop    rdi
   1400358b3:	ret    
   1400358b4:	movsxd rax,edi
   1400358b7:	add    rax,rax
   1400358ba:	mov    QWORD PTR [r12+rax*8],0x0
   1400358c2:	xor    eax,eax
   1400358c4:	jmp    0x14003589b
   1400358c6:	int3   
   1400358c7:	int3   
   1400358c8:	int3   
   1400358c9:	int3   
   1400358ca:	int3   
   1400358cb:	int3   
   1400358cc:	int3   
   1400358cd:	int3   
   1400358ce:	int3   
   1400358cf:	int3   
   1400358d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400358d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400358da:	mov    QWORD PTR [rsp+0x18],rsi
   1400358df:	mov    QWORD PTR [rsp+0x20],rdi
   1400358e4:	push   r12
   1400358e6:	sub    rsp,0x20
   1400358ea:	lea    rbx,[rip+0x261df]        # 0x14005bad0
   1400358f1:	xor    r12d,r12d
   1400358f4:	lea    rbp,[rip+0x26415]        # 0x14005bd10
   1400358fb:	mov    rdi,rbx
   1400358fe:	xchg   ax,ax
   140035900:	mov    rsi,QWORD PTR [rdi]
   140035903:	test   rsi,rsi
   140035906:	je     0x140035922
   140035908:	cmp    DWORD PTR [rdi+0x8],0x1
   14003590c:	je     0x140035922
   14003590e:	mov    rcx,rsi
   140035911:	call   QWORD PTR [rip+0xdac1]        # 0x1400433d8
   140035917:	mov    rcx,rsi
   14003591a:	call   0x14002a380
   14003591f:	mov    QWORD PTR [rdi],r12
   140035922:	add    rdi,0x10
   140035926:	cmp    rdi,rbp
   140035929:	jl     0x140035900
   14003592b:	xchg   ax,ax
   14003592d:	data16 xchg ax,ax
   140035930:	mov    rcx,QWORD PTR [rbx]
   140035933:	test   rcx,rcx
   140035936:	je     0x140035944
   140035938:	cmp    DWORD PTR [rbx+0x8],0x1
   14003593c:	jne    0x140035944
   14003593e:	call   QWORD PTR [rip+0xda94]        # 0x1400433d8
   140035944:	add    rbx,0x10
   140035948:	cmp    rbx,rbp
   14003594b:	jl     0x140035930
   14003594d:	mov    rbx,QWORD PTR [rsp+0x30]
   140035952:	mov    rbp,QWORD PTR [rsp+0x38]
   140035957:	mov    rsi,QWORD PTR [rsp+0x40]
   14003595c:	mov    rdi,QWORD PTR [rsp+0x48]
   140035961:	add    rsp,0x20
   140035965:	pop    r12
   140035967:	ret    
   140035968:	int3   
   140035969:	int3   
   14003596a:	int3   
   14003596b:	int3   
   14003596c:	int3   
   14003596d:	int3   
   14003596e:	int3   
   14003596f:	int3   
   140035970:	movsxd rcx,ecx
   140035973:	lea    rax,[rip+0x26156]        # 0x14005bad0
   14003597a:	add    rcx,rcx
   14003597d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140035981:	rex.W jmp QWORD PTR [rip+0xdbb0]        # 0x140043538
   140035988:	int3   
   140035989:	int3   
   14003598a:	int3   
   14003598b:	int3   
   14003598c:	int3   
   14003598d:	int3   
   14003598e:	int3   
   14003598f:	int3   
   140035990:	mov    QWORD PTR [rsp+0x8],rbx
   140035995:	mov    QWORD PTR [rsp+0x10],rsi
   14003599a:	mov    QWORD PTR [rsp+0x18],rdi
   14003599f:	push   r12
   1400359a1:	sub    rsp,0x20
   1400359a5:	movsxd rbx,ecx
   1400359a8:	mov    esi,0x1
   1400359ad:	cmp    QWORD PTR [rip+0x2b8e3],0x0        # 0x140061298
   1400359b5:	jne    0x1400359ce
   1400359b7:	call   0x14002cd90
   1400359bc:	lea    ecx,[rsi+0x1d]
   1400359bf:	call   0x14002cb50
   1400359c4:	mov    ecx,0xff
   1400359c9:	call   0x14002c120
   1400359ce:	mov    rdi,rbx
   1400359d1:	add    rdi,rdi
   1400359d4:	lea    r12,[rip+0x260f5]        # 0x14005bad0
   1400359db:	cmp    QWORD PTR [r12+rdi*8],0x0
   1400359e0:	je     0x1400359e6
   1400359e2:	mov    eax,esi
   1400359e4:	jmp    0x140035a5f
   1400359e6:	mov    ecx,0x28
   1400359eb:	call   0x1400320c0
   1400359f0:	mov    rbx,rax
   1400359f3:	test   rax,rax
   1400359f6:	jne    0x140035a07
   1400359f8:	call   0x14002bca0
   1400359fd:	mov    DWORD PTR [rax],0xc
   140035a03:	xor    eax,eax
   140035a05:	jmp    0x140035a5f
   140035a07:	mov    ecx,0xa
   140035a0c:	call   0x140035aa0
   140035a11:	nop
   140035a12:	cmp    QWORD PTR [r12+rdi*8],0x0
   140035a17:	jne    0x140035a47
   140035a19:	mov    edx,0xfa0
   140035a1e:	mov    rcx,rbx
   140035a21:	call   0x140035e50
   140035a26:	test   eax,eax
   140035a28:	jne    0x140035a41
   140035a2a:	mov    rcx,rbx
   140035a2d:	call   0x14002a380
   140035a32:	call   0x14002bca0
   140035a37:	mov    DWORD PTR [rax],0xc
   140035a3d:	xor    esi,esi
   140035a3f:	jmp    0x140035a50
   140035a41:	mov    QWORD PTR [r12+rdi*8],rbx
   140035a45:	jmp    0x140035a50
   140035a47:	mov    rcx,rbx
   140035a4a:	call   0x14002a380
   140035a4f:	nop
   140035a50:	mov    rcx,QWORD PTR [rip+0x26119]        # 0x14005bb70
   140035a57:	call   QWORD PTR [rip+0xdadb]        # 0x140043538
   140035a5d:	mov    eax,esi
   140035a5f:	mov    rbx,QWORD PTR [rsp+0x30]
   140035a64:	mov    rsi,QWORD PTR [rsp+0x38]
   140035a69:	mov    rdi,QWORD PTR [rsp+0x40]
   140035a6e:	add    rsp,0x20
   140035a72:	pop    r12
   140035a74:	ret    
   140035a75:	int3   
   140035a76:	int3   
   140035a77:	int3   
   140035a78:	int3   
   140035a79:	int3   
   140035a7a:	int3   
   140035a7b:	int3   
   140035a7c:	int3   
   140035a7d:	int3   
   140035a7e:	int3   
   140035a7f:	int3   
   140035a80:	rex push rbp
   140035a82:	sub    rsp,0x20
   140035a86:	mov    rbp,rdx
   140035a89:	mov    rcx,QWORD PTR [rip+0x260e0]        # 0x14005bb70
   140035a90:	call   QWORD PTR [rip+0xdaa2]        # 0x140043538
   140035a96:	add    rsp,0x20
   140035a9a:	pop    rbp
   140035a9b:	ret    
   140035a9c:	int3   
   140035a9d:	int3   
   140035a9e:	int3   
   140035a9f:	int3   
   140035aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140035aa5:	push   rdi
   140035aa6:	sub    rsp,0x20
   140035aaa:	movsxd rbx,ecx
   140035aad:	lea    rdi,[rip+0x2601c]        # 0x14005bad0
   140035ab4:	add    rbx,rbx
   140035ab7:	cmp    QWORD PTR [rdi+rbx*8],0x0
   140035abc:	jne    0x140035acf
   140035abe:	call   0x140035990
   140035ac3:	test   eax,eax
   140035ac5:	jne    0x140035acf
   140035ac7:	lea    ecx,[rax+0x11]
   140035aca:	call   0x14002c0f0
   140035acf:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140035ad3:	mov    rbx,QWORD PTR [rsp+0x30]
   140035ad8:	add    rsp,0x20
   140035adc:	pop    rdi
   140035add:	rex.W jmp QWORD PTR [rip+0xda5c]        # 0x140043540
   140035ae4:	int3   
   140035ae5:	int3   
   140035ae6:	int3   
   140035ae7:	int3   
   140035ae8:	int3   
   140035ae9:	int3   
   140035aea:	int3   
   140035aeb:	int3   
   140035aec:	int3   
   140035aed:	int3   
   140035aee:	int3   
   140035aef:	int3   
   140035af0:	mov    QWORD PTR [rsp+0x8],rbx
   140035af5:	push   rdi
   140035af6:	sub    rsp,0x20
   140035afa:	lea    rbx,[rip+0x2620f]        # 0x14005bd10
   140035b01:	mov    edi,0xa
   140035b06:	mov    rcx,QWORD PTR [rbx]
   140035b09:	call   0x14002dd60
   140035b0e:	add    rbx,0x8
   140035b12:	sub    rdi,0x1
   140035b16:	mov    QWORD PTR [rbx-0x8],rax
   140035b1a:	jne    0x140035b06
   140035b1c:	mov    rbx,QWORD PTR [rsp+0x30]
   140035b21:	add    rsp,0x20
   140035b25:	pop    rdi
   140035b26:	ret    
   140035b27:	int3   
   140035b28:	int3   
   140035b29:	int3   
   140035b2a:	int3   
   140035b2b:	int3   
   140035b2c:	int3   
   140035b2d:	int3   
   140035b2e:	int3   
   140035b2f:	int3   
   140035b30:	mov    QWORD PTR [rip+0x2bfa9],rcx        # 0x140061ae0
   140035b37:	mov    QWORD PTR [rip+0x2bfaa],rcx        # 0x140061ae8
   140035b3e:	mov    QWORD PTR [rip+0x2bfab],rcx        # 0x140061af0
   140035b45:	mov    QWORD PTR [rip+0x2bfac],rcx        # 0x140061af8
   140035b4c:	ret    
   140035b4d:	int3   
   140035b4e:	int3   
   140035b4f:	int3   
   140035b50:	mov    rcx,QWORD PTR [rip+0x2bf99]        # 0x140061af0
   140035b57:	jmp    0x14002df20
   140035b5c:	int3   
   140035b5d:	int3   
   140035b5e:	int3   
   140035b5f:	int3   
   140035b60:	mov    QWORD PTR [rsp+0x10],rbx
   140035b65:	mov    QWORD PTR [rsp+0x18],rsi
   140035b6a:	push   rdi
   140035b6b:	push   r12
   140035b6d:	push   r13
   140035b6f:	push   r14
   140035b71:	push   r15
   140035b73:	sub    rsp,0x40
   140035b77:	mov    ebx,ecx
   140035b79:	xor    r14d,r14d
   140035b7c:	mov    edi,r14d
   140035b7f:	mov    DWORD PTR [rsp+0x70],r14d
   140035b84:	mov    rsi,r14
   140035b87:	lea    eax,[rcx-0x2]
   140035b8a:	cmp    eax,0x14
   140035b8d:	ja     0x140035d7e
   140035b93:	cdqe   
   140035b95:	lea    rcx,[rip+0xfffffffffffca464]        # 0x140000000
   140035b9c:	movzx  eax,BYTE PTR [rcx+rax*1+0x35dd4]
   140035ba4:	mov    edx,DWORD PTR [rcx+rax*4+0x35dbc]
   140035bab:	add    rdx,rcx
   140035bae:	jmp    rdx
   140035bb0:	lea    r12,[rip+0x2bf29]        # 0x140061ae0
   140035bb7:	mov    rcx,QWORD PTR [rip+0x2bf22]        # 0x140061ae0
   140035bbe:	mov    edi,0x1
   140035bc3:	mov    DWORD PTR [rsp+0x70],edi
   140035bc7:	jmp    0x140035c12
   140035bc9:	lea    r12,[rip+0x2bf18]        # 0x140061ae8
   140035bd0:	mov    rcx,QWORD PTR [rip+0x2bf11]        # 0x140061ae8
   140035bd7:	mov    edi,0x1
   140035bdc:	mov    DWORD PTR [rsp+0x70],edi
   140035be0:	jmp    0x140035c12
   140035be2:	lea    r12,[rip+0x2bf07]        # 0x140061af0
   140035be9:	mov    rcx,QWORD PTR [rip+0x2bf00]        # 0x140061af0
   140035bf0:	mov    edi,0x1
   140035bf5:	mov    DWORD PTR [rsp+0x70],edi
   140035bf9:	jmp    0x140035c12
   140035bfb:	lea    r12,[rip+0x2bef6]        # 0x140061af8
   140035c02:	mov    rcx,QWORD PTR [rip+0x2beef]        # 0x140061af8
   140035c09:	mov    edi,0x1
   140035c0e:	mov    DWORD PTR [rsp+0x70],edi
   140035c12:	call   0x14002df20
   140035c17:	mov    r13,rax
   140035c1a:	jmp    0x140035c79
   140035c1c:	call   0x14002e180
   140035c21:	mov    rsi,rax
   140035c24:	test   rax,rax
   140035c27:	jne    0x140035c31
   140035c29:	or     eax,0xffffffff
   140035c2c:	jmp    0x140035da0
   140035c31:	mov    rdx,QWORD PTR [rax+0xa0]
   140035c38:	mov    rcx,rdx
   140035c3b:	movsxd r8,DWORD PTR [rip+0x256ea]        # 0x14005b32c
   140035c42:	cmp    DWORD PTR [rcx+0x4],ebx
   140035c45:	je     0x140035c5a
   140035c47:	add    rcx,0x10
   140035c4b:	mov    rax,r8
   140035c4e:	shl    rax,0x4
   140035c52:	add    rax,rdx
   140035c55:	cmp    rcx,rax
   140035c58:	jb     0x140035c42
   140035c5a:	mov    rax,r8
   140035c5d:	shl    rax,0x4
   140035c61:	add    rax,rdx
   140035c64:	cmp    rcx,rax
   140035c67:	jae    0x140035c6e
   140035c69:	cmp    DWORD PTR [rcx+0x4],ebx
   140035c6c:	je     0x140035c71
   140035c6e:	mov    rcx,r14
   140035c71:	lea    r12,[rcx+0x8]
   140035c75:	mov    r13,QWORD PTR [r12]
   140035c79:	cmp    r13,0x1
   140035c7d:	jne    0x140035c86
   140035c7f:	xor    eax,eax
   140035c81:	jmp    0x140035da0
   140035c86:	test   r13,r13
   140035c89:	jne    0x140035c95
   140035c8b:	lea    ecx,[r13+0x3]
   140035c8f:	call   0x14002c480
   140035c94:	int3   
   140035c95:	test   edi,edi
   140035c97:	je     0x140035ca1
   140035c99:	xor    ecx,ecx
   140035c9b:	call   0x140035aa0
   140035ca0:	nop
   140035ca1:	cmp    ebx,0x8
   140035ca4:	je     0x140035cbc
   140035ca6:	cmp    ebx,0xb
   140035ca9:	je     0x140035cbc
   140035cab:	cmp    ebx,0x4
   140035cae:	je     0x140035cbc
   140035cb0:	mov    r15,QWORD PTR [rsp+0x38]
   140035cb5:	mov    r14d,DWORD PTR [rsp+0x70]
   140035cba:	jmp    0x140035cec
   140035cbc:	mov    r15,QWORD PTR [rsi+0xa8]
   140035cc3:	mov    QWORD PTR [rsp+0x38],r15
   140035cc8:	mov    QWORD PTR [rsi+0xa8],r14
   140035ccf:	cmp    ebx,0x8
   140035cd2:	jne    0x140035ce7
   140035cd4:	mov    r14d,DWORD PTR [rsi+0xb0]
   140035cdb:	mov    DWORD PTR [rsi+0xb0],0x8c
   140035ce5:	jmp    0x140035cec
   140035ce7:	mov    r14d,DWORD PTR [rsp+0x70]
   140035cec:	cmp    ebx,0x8
   140035cef:	jne    0x140035d2d
   140035cf1:	mov    ecx,DWORD PTR [rip+0x25629]        # 0x14005b320
   140035cf7:	mov    edx,ecx
   140035cf9:	mov    DWORD PTR [rsp+0x30],ecx
   140035cfd:	xor    r8d,r8d
   140035d00:	mov    eax,DWORD PTR [rip+0x2561e]        # 0x14005b324
   140035d06:	add    ecx,eax
   140035d08:	cmp    edx,ecx
   140035d0a:	jge    0x140035d36
   140035d0c:	movsxd rcx,edx
   140035d0f:	add    rcx,rcx
   140035d12:	mov    rax,QWORD PTR [rsi+0xa0]
   140035d19:	mov    QWORD PTR [rax+rcx*8+0x8],r8
   140035d1e:	add    edx,0x1
   140035d21:	mov    DWORD PTR [rsp+0x30],edx
   140035d25:	mov    ecx,DWORD PTR [rip+0x255f5]        # 0x14005b320
   140035d2b:	jmp    0x140035d00
   140035d2d:	call   0x14002de30
   140035d32:	mov    QWORD PTR [r12],rax
   140035d36:	test   edi,edi
   140035d38:	je     0x140035d41
   140035d3a:	xor    ecx,ecx
   140035d3c:	call   0x140035970
   140035d41:	cmp    ebx,0x8
   140035d44:	jne    0x140035d53
   140035d46:	mov    edx,DWORD PTR [rsi+0xb0]
   140035d4c:	mov    ecx,ebx
   140035d4e:	call   r13
   140035d51:	jmp    0x140035d58
   140035d53:	mov    ecx,ebx
   140035d55:	call   r13
   140035d58:	cmp    ebx,0x8
   140035d5b:	je     0x140035d67
   140035d5d:	cmp    ebx,0xb
   140035d60:	je     0x140035d67
   140035d62:	cmp    ebx,0x4
   140035d65:	jne    0x140035d7a
   140035d67:	mov    QWORD PTR [rsi+0xa8],r15
   140035d6e:	cmp    ebx,0x8
   140035d71:	jne    0x140035d7a
   140035d73:	mov    DWORD PTR [rsi+0xb0],r14d
   140035d7a:	xor    eax,eax
   140035d7c:	jmp    0x140035da0
   140035d7e:	call   0x14002bca0
   140035d83:	mov    DWORD PTR [rax],0x16
   140035d89:	mov    QWORD PTR [rsp+0x20],r14
   140035d8e:	xor    r9d,r9d
   140035d91:	xor    r8d,r8d
   140035d94:	xor    edx,edx
   140035d96:	xor    ecx,ecx
   140035d98:	call   0x14002e900
   140035d9d:	or     eax,0xffffffff
   140035da0:	mov    rbx,QWORD PTR [rsp+0x78]
   140035da5:	mov    rsi,QWORD PTR [rsp+0x80]
   140035dad:	add    rsp,0x40
   140035db1:	pop    r15
   140035db3:	pop    r14
   140035db5:	pop    r13
   140035db7:	pop    r12
   140035db9:	pop    rdi
   140035dba:	ret    
   140035dbb:	nop
   140035dbc:	mov    al,0x5b
   140035dbe:	add    eax,DWORD PTR [rax]
   140035dc0:	sbb    al,0x5c
   140035dc2:	add    eax,DWORD PTR [rax]
   140035dc4:	loop   0x140035e21
   140035dc6:	add    eax,DWORD PTR [rax]
   140035dc8:	sti    
   140035dc9:	pop    rbx
   140035dca:	add    eax,DWORD PTR [rax]
   140035dcc:	leave  
   140035dcd:	pop    rbx
   140035dce:	add    eax,DWORD PTR [rax]
   140035dd0:	jle    0x140035e2f
   140035dd2:	add    eax,DWORD PTR [rax]
   140035dd4:	add    BYTE PTR [rip+0x5020501],al        # 0x1450562db
   140035dda:	add    DWORD PTR [rip+0x5050105],eax        # 0x145085ee5
   140035de0:	add    eax,0x5050503
   140035de5:	add    eax,0xcc020405
   140035dea:	int3   
   140035deb:	int3   
   140035dec:	int3   
   140035ded:	int3   
   140035dee:	int3   
   140035def:	int3   
   140035df0:	rex push rbp
   140035df2:	sub    rsp,0x30
   140035df6:	mov    rbp,rdx
   140035df9:	cmp    DWORD PTR [rbp+0x70],0x0
   140035dfd:	je     0x140035e06
   140035dff:	xor    ecx,ecx
   140035e01:	call   0x140035970
   140035e06:	add    rsp,0x30
   140035e0a:	pop    rbp
   140035e0b:	ret    
   140035e0c:	int3   
   140035e0d:	int3   
   140035e0e:	int3   
   140035e0f:	int3   
   140035e10:	mov    QWORD PTR [rip+0x2bcf1],rcx        # 0x140061b08
   140035e17:	ret    
   140035e18:	int3   
   140035e19:	int3   
   140035e1a:	int3   
   140035e1b:	int3   
   140035e1c:	int3   
   140035e1d:	int3   
   140035e1e:	int3   
   140035e1f:	int3   
   140035e20:	mov    QWORD PTR [rip+0x2bce9],rcx        # 0x140061b10
   140035e27:	ret    
   140035e28:	int3   
   140035e29:	int3   
   140035e2a:	int3   
   140035e2b:	int3   
   140035e2c:	int3   
   140035e2d:	int3   
   140035e2e:	int3   
   140035e2f:	int3   
   140035e30:	sub    rsp,0x28
   140035e34:	call   QWORD PTR [rip+0xd5a6]        # 0x1400433e0
   140035e3a:	mov    eax,0x1
   140035e3f:	add    rsp,0x28
   140035e43:	ret    
   140035e44:	int3   
   140035e45:	int3   
   140035e46:	int3   
   140035e47:	int3   
   140035e48:	int3   
   140035e49:	int3   
   140035e4a:	int3   
   140035e4b:	int3   
   140035e4c:	int3   
   140035e4d:	int3   
   140035e4e:	int3   
   140035e4f:	int3   
   140035e50:	mov    QWORD PTR [rsp+0x8],rbx
   140035e55:	mov    QWORD PTR [rsp+0x10],rsi
   140035e5a:	mov    QWORD PTR [rsp+0x20],rdi
   140035e5f:	push   r12
   140035e61:	sub    rsp,0x40
   140035e65:	mov    esi,edx
   140035e67:	mov    r12,rcx
   140035e6a:	xor    edi,edi
   140035e6c:	mov    DWORD PTR [rsp+0x60],edi
   140035e70:	mov    rcx,QWORD PTR [rip+0x2bc99]        # 0x140061b10
   140035e77:	call   0x14002df20
   140035e7c:	mov    rbx,rax
   140035e7f:	test   rax,rax
   140035e82:	jne    0x140035eff
   140035e84:	lea    rcx,[rsp+0x60]
   140035e89:	call   0x14002c1c0
   140035e8e:	test   eax,eax
   140035e90:	je     0x140035ea6
   140035e92:	mov    QWORD PTR [rsp+0x20],rdi
   140035e97:	xor    r9d,r9d
   140035e9a:	xor    r8d,r8d
   140035e9d:	xor    edx,edx
   140035e9f:	xor    ecx,ecx
   140035ea1:	call   0x14002e860
   140035ea6:	cmp    DWORD PTR [rsp+0x60],0x1
   140035eab:	jne    0x140035eb6
   140035ead:	lea    rbx,[rip+0xffffffffffffff7c]        # 0x140035e30
   140035eb4:	jmp    0x140035ef0
   140035eb6:	lea    rcx,[rip+0x1255b]        # 0x140048418
   140035ebd:	call   QWORD PTR [rip+0xd57d]        # 0x140043440
   140035ec3:	test   rax,rax
   140035ec6:	je     0x140035ee9
   140035ec8:	lea    rdx,[rip+0x12d69]        # 0x140048c38
   140035ecf:	mov    rcx,rax
   140035ed2:	call   QWORD PTR [rip+0xd5d8]        # 0x1400434b0
   140035ed8:	mov    rbx,rax
   140035edb:	test   rax,rax
   140035ede:	jne    0x140035ef0
   140035ee0:	lea    rbx,[rip+0xffffffffffffff49]        # 0x140035e30
   140035ee7:	jmp    0x140035ef0
   140035ee9:	lea    rbx,[rip+0xffffffffffffff40]        # 0x140035e30
   140035ef0:	mov    rcx,rbx
   140035ef3:	call   0x14002dd60
   140035ef8:	mov    QWORD PTR [rip+0x2bc11],rax        # 0x140061b10
   140035eff:	mov    edx,esi
   140035f01:	mov    rcx,r12
   140035f04:	call   rbx
   140035f06:	mov    edi,eax
   140035f08:	mov    DWORD PTR [rsp+0x30],eax
   140035f0c:	jmp    0x140035f26
   140035f0e:	cmp    eax,0xc0000017
   140035f13:	jne    0x140035f20
   140035f15:	mov    ecx,0x8
   140035f1a:	call   QWORD PTR [rip+0xd578]        # 0x140043498
   140035f20:	xor    edi,edi
   140035f22:	mov    DWORD PTR [rsp+0x30],edi
   140035f26:	mov    eax,edi
   140035f28:	mov    rbx,QWORD PTR [rsp+0x50]
   140035f2d:	mov    rsi,QWORD PTR [rsp+0x58]
   140035f32:	mov    rdi,QWORD PTR [rsp+0x68]
   140035f37:	add    rsp,0x40
   140035f3b:	pop    r12
   140035f3d:	ret    
   140035f3e:	int3   
   140035f3f:	int3   
   140035f40:	rex push rbp
   140035f42:	push   rdi
   140035f43:	sub    rsp,0x38
   140035f47:	mov    rbp,rdx
   140035f4a:	mov    rax,QWORD PTR [rcx]
   140035f4d:	xor    edi,edi
   140035f4f:	cmp    DWORD PTR [rax],0xc0000017
   140035f55:	sete   dil
   140035f59:	mov    eax,edi
   140035f5b:	add    rsp,0x38
   140035f5f:	pop    rdi
   140035f60:	pop    rbp
   140035f61:	ret    
   140035f62:	int3   
   140035f63:	int3   
   140035f64:	int3   
   140035f65:	int3   
   140035f66:	int3   
   140035f67:	int3   
   140035f68:	int3   
   140035f69:	int3   
   140035f6a:	int3   
   140035f6b:	int3   
   140035f6c:	int3   
   140035f6d:	int3   
   140035f6e:	int3   
   140035f6f:	int3   
   140035f70:	rex push rdi
   140035f72:	sub    rsp,0x40
   140035f76:	mov    QWORD PTR [rsp+0x50],rbx
   140035f7b:	mov    QWORD PTR [rsp+0x58],rbp
   140035f80:	xor    bpl,bpl
   140035f83:	test   rdx,rdx
   140035f86:	mov    QWORD PTR [rsp+0x68],r12
   140035f8b:	mov    rbx,rcx
   140035f8e:	mov    BYTE PTR [rsp+0x38],bpl
   140035f93:	jne    0x140036009
   140035f95:	mov    QWORD PTR [rsp+0x60],rsi
   140035f9a:	call   0x14002e210
   140035f9f:	mov    r12,QWORD PTR [rax+0xc0]
   140035fa6:	mov    rsi,QWORD PTR [rax+0xb8]
   140035fad:	mov    rdi,rax
   140035fb0:	cmp    r12,QWORD PTR [rip+0x25a99]        # 0x14005ba50
   140035fb7:	je     0x140035fcf
   140035fb9:	mov    edx,DWORD PTR [rax+0xc8]
   140035fbf:	test   DWORD PTR [rip+0x25913],edx        # 0x14005b8d8
   140035fc5:	jne    0x140035fcf
   140035fc7:	call   0x140031a10
   140035fcc:	mov    r12,rax
   140035fcf:	cmp    rsi,QWORD PTR [rip+0x257fa]        # 0x14005b7d0
   140035fd6:	mov    rsi,QWORD PTR [rsp+0x60]
   140035fdb:	je     0x140035ff0
   140035fdd:	mov    ecx,DWORD PTR [rdi+0xc8]
   140035fe3:	test   DWORD PTR [rip+0x258ef],ecx        # 0x14005b8d8
   140035fe9:	jne    0x140035ff0
   140035feb:	call   0x140030ec0
   140035ff0:	mov    ecx,DWORD PTR [rdi+0xc8]
   140035ff6:	test   cl,0x2
   140035ff9:	jne    0x14003602b
   140035ffb:	or     ecx,0x2
   140035ffe:	mov    bpl,0x1
   140036001:	mov    DWORD PTR [rdi+0xc8],ecx
   140036007:	jmp    0x14003602b
   140036009:	mov    rax,QWORD PTR [rdx]
   14003600c:	lea    rcx,[rsp+0x20]
   140036011:	mov    QWORD PTR [rcx],rax
   140036014:	mov    rax,QWORD PTR [rdx+0x8]
   140036018:	mov    QWORD PTR [rcx+0x8],rax
   14003601c:	movzx  ebp,BYTE PTR [rsp+0x38]
   140036021:	mov    rdi,QWORD PTR [rsp+0x30]
   140036026:	mov    r12,QWORD PTR [rsp+0x20]
   14003602b:	movsx  ecx,BYTE PTR [rbx]
   14003602e:	call   0x14003b310
   140036033:	cmp    eax,0x65
   140036036:	je     0x140036051
   140036038:	data16 data16 xchg ax,ax
   14003603c:	data16 data16 xchg ax,ax
   140036040:	movzx  ecx,BYTE PTR [rbx+0x1]
   140036044:	add    rbx,0x1
   140036048:	call   0x140039db0
   14003604d:	test   eax,eax
   14003604f:	jne    0x140036040
   140036051:	movsx  ecx,BYTE PTR [rbx]
   140036054:	call   0x14003b310
   140036059:	cmp    eax,0x78
   14003605c:	jne    0x140036062
   14003605e:	add    rbx,0x2
   140036062:	mov    rax,QWORD PTR [r12+0x128]
   14003606a:	movzx  edx,BYTE PTR [rbx]
   14003606d:	mov    r12,QWORD PTR [rsp+0x68]
   140036072:	mov    rcx,QWORD PTR [rax]
   140036075:	add    rbx,0x1
   140036079:	movzx  eax,BYTE PTR [rcx]
   14003607c:	mov    BYTE PTR [rbx-0x1],al
   14003607f:	nop
   140036080:	movzx  eax,BYTE PTR [rbx]
   140036083:	mov    BYTE PTR [rbx],dl
   140036085:	add    rbx,0x1
   140036089:	mov    dl,al
   14003608b:	movzx  eax,BYTE PTR [rbx-0x1]
   14003608f:	test   al,al
   140036091:	jne    0x140036080
   140036093:	mov    rbx,QWORD PTR [rsp+0x50]
   140036098:	test   bpl,bpl
   14003609b:	mov    rbp,QWORD PTR [rsp+0x58]
   1400360a0:	je     0x1400360a9
   1400360a2:	and    DWORD PTR [rdi+0xc8],0xfffffffd
   1400360a9:	add    rsp,0x40
   1400360ad:	pop    rdi
   1400360ae:	ret    
   1400360af:	int3   
   1400360b0:	rex push rdi
   1400360b2:	sub    rsp,0x40
   1400360b6:	mov    QWORD PTR [rsp+0x50],rbx
   1400360bb:	mov    QWORD PTR [rsp+0x58],rbp
   1400360c0:	mov    QWORD PTR [rsp+0x68],r12
   1400360c5:	xor    r12b,r12b
   1400360c8:	test   rdx,rdx
   1400360cb:	mov    rbx,rcx
   1400360ce:	mov    BYTE PTR [rsp+0x38],r12b
   1400360d3:	jne    0x140036149
   1400360d5:	mov    QWORD PTR [rsp+0x60],rsi
   1400360da:	call   0x14002e210
   1400360df:	mov    rbp,QWORD PTR [rax+0xc0]
   1400360e6:	mov    rsi,QWORD PTR [rax+0xb8]
   1400360ed:	mov    rdi,rax
   1400360f0:	cmp    rbp,QWORD PTR [rip+0x25959]        # 0x14005ba50
   1400360f7:	je     0x14003610f
   1400360f9:	mov    edx,DWORD PTR [rax+0xc8]
   1400360ff:	test   DWORD PTR [rip+0x257d3],edx        # 0x14005b8d8
   140036105:	jne    0x14003610f
   140036107:	call   0x140031a10
   14003610c:	mov    rbp,rax
   14003610f:	cmp    rsi,QWORD PTR [rip+0x256ba]        # 0x14005b7d0
   140036116:	mov    rsi,QWORD PTR [rsp+0x60]
   14003611b:	je     0x140036130
   14003611d:	mov    ecx,DWORD PTR [rdi+0xc8]
   140036123:	test   DWORD PTR [rip+0x257af],ecx        # 0x14005b8d8
   140036129:	jne    0x140036130
   14003612b:	call   0x140030ec0
   140036130:	mov    ecx,DWORD PTR [rdi+0xc8]
   140036136:	test   cl,0x2
   140036139:	jne    0x14003616c
   14003613b:	or     ecx,0x2
   14003613e:	mov    r12b,0x1
   140036141:	mov    DWORD PTR [rdi+0xc8],ecx
   140036147:	jmp    0x14003616c
   140036149:	mov    rax,QWORD PTR [rdx]
   14003614c:	lea    rcx,[rsp+0x20]
   140036151:	mov    QWORD PTR [rcx],rax
   140036154:	mov    rax,QWORD PTR [rdx+0x8]
   140036158:	mov    QWORD PTR [rcx+0x8],rax
   14003615c:	movzx  r12d,BYTE PTR [rsp+0x38]
   140036162:	mov    rdi,QWORD PTR [rsp+0x30]
   140036167:	mov    rbp,QWORD PTR [rsp+0x20]
   14003616c:	movzx  edx,BYTE PTR [rbx]
   14003616f:	test   dl,dl
   140036171:	je     0x14003618f
   140036173:	mov    rax,QWORD PTR [rbp+0x128]
   14003617a:	mov    rcx,QWORD PTR [rax]
   14003617d:	movzx  eax,BYTE PTR [rcx]
   140036180:	cmp    dl,al
   140036182:	je     0x14003618f
   140036184:	mov    dl,BYTE PTR [rbx+0x1]
   140036187:	add    rbx,0x1
   14003618b:	test   dl,dl
   14003618d:	jne    0x140036180
   14003618f:	movzx  eax,BYTE PTR [rbx]
   140036192:	add    rbx,0x1
   140036196:	test   al,al
   140036198:	je     0x1400361f1
   14003619a:	movzx  eax,BYTE PTR [rbx]
   14003619d:	test   al,al
   14003619f:	je     0x1400361b4
   1400361a1:	cmp    al,0x65
   1400361a3:	je     0x1400361b4
   1400361a5:	cmp    al,0x45
   1400361a7:	je     0x1400361b4
   1400361a9:	mov    al,BYTE PTR [rbx+0x1]
   1400361ac:	add    rbx,0x1
   1400361b0:	test   al,al
   1400361b2:	jne    0x1400361a1
   1400361b4:	mov    rdx,rbx
   1400361b7:	sub    rbx,0x1
   1400361bb:	cmp    BYTE PTR [rbx],0x30
   1400361be:	jne    0x1400361c9
   1400361c0:	sub    rbx,0x1
   1400361c4:	cmp    BYTE PTR [rbx],0x30
   1400361c7:	je     0x1400361c0
   1400361c9:	mov    rax,QWORD PTR [rbp+0x128]
   1400361d0:	mov    rcx,QWORD PTR [rax]
   1400361d3:	movzx  eax,BYTE PTR [rcx]
   1400361d6:	cmp    BYTE PTR [rbx],al
   1400361d8:	jne    0x1400361e0
   1400361da:	sub    rbx,0x1
   1400361de:	xchg   ax,ax
   1400361e0:	movzx  eax,BYTE PTR [rdx]
   1400361e3:	add    rbx,0x1
   1400361e7:	add    rdx,0x1
   1400361eb:	test   al,al
   1400361ed:	mov    BYTE PTR [rbx],al
   1400361ef:	jne    0x1400361e0
   1400361f1:	mov    rbp,QWORD PTR [rsp+0x58]
   1400361f6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400361fb:	test   r12b,r12b
   1400361fe:	mov    r12,QWORD PTR [rsp+0x68]
   140036203:	je     0x14003620c
   140036205:	and    DWORD PTR [rdi+0xc8],0xfffffffd
   14003620c:	add    rsp,0x40
   140036210:	pop    rdi
   140036211:	ret    
   140036212:	int3   
   140036213:	int3   
   140036214:	int3   
   140036215:	int3   
   140036216:	int3   
   140036217:	int3   
   140036218:	int3   
   140036219:	int3   
   14003621a:	int3   
   14003621b:	int3   
   14003621c:	int3   
   14003621d:	int3   
   14003621e:	int3   
   14003621f:	int3   
   140036220:	movsd  xmm0,QWORD PTR [rcx]
   140036224:	comisd xmm0,QWORD PTR [rip+0x12a34]        # 0x140048c60
   14003622c:	jb     0x140036234
   14003622e:	mov    eax,0x1
   140036233:	ret    
   140036234:	xor    eax,eax
   140036236:	ret    
   140036237:	int3   
   140036238:	int3   
   140036239:	int3   
   14003623a:	int3   
   14003623b:	int3   
   14003623c:	int3   
   14003623d:	int3   
   14003623e:	int3   
   14003623f:	int3   
   140036240:	rex push rbx
   140036242:	sub    rsp,0x30
   140036246:	test   ecx,ecx
   140036248:	mov    rax,r8
   14003624b:	mov    rbx,rdx
   14003624e:	mov    rdx,rax
   140036251:	mov    r8,r9
   140036254:	je     0x14003626e
   140036256:	lea    rcx,[rsp+0x20]
   14003625b:	call   0x14003b330
   140036260:	mov    r11,QWORD PTR [rsp+0x20]
   140036265:	mov    QWORD PTR [rbx],r11
   140036268:	add    rsp,0x30
   14003626c:	pop    rbx
   14003626d:	ret    
   14003626e:	lea    rcx,[rsp+0x40]
   140036273:	call   0x14003b4c0
   140036278:	mov    r11d,DWORD PTR [rsp+0x40]
   14003627d:	mov    DWORD PTR [rbx],r11d
   140036280:	add    rsp,0x30
   140036284:	pop    rbx
   140036285:	ret    
   140036286:	int3   
   140036287:	int3   
   140036288:	int3   
   140036289:	int3   
   14003628a:	int3   
   14003628b:	int3   
   14003628c:	int3   
   14003628d:	int3   
   14003628e:	int3   
   14003628f:	int3   
   140036290:	rex push rbx
   140036292:	sub    rsp,0x20
   140036296:	mov    rax,r8
   140036299:	xor    r8d,r8d
   14003629c:	test   ecx,ecx
   14003629e:	mov    rbx,rdx
   1400362a1:	mov    rdx,rax
   1400362a4:	je     0x1400362be
   1400362a6:	lea    rcx,[rsp+0x48]
   1400362ab:	call   0x14003b330
   1400362b0:	mov    r11,QWORD PTR [rsp+0x48]
   1400362b5:	mov    QWORD PTR [rbx],r11
   1400362b8:	add    rsp,0x20
   1400362bc:	pop    rbx
   1400362bd:	ret    
   1400362be:	lea    rcx,[rsp+0x30]
   1400362c3:	call   0x14003b4c0
   1400362c8:	mov    r11d,DWORD PTR [rsp+0x30]
   1400362cd:	mov    DWORD PTR [rbx],r11d
   1400362d0:	add    rsp,0x20
   1400362d4:	pop    rbx
   1400362d5:	ret    
   1400362d6:	int3   
   1400362d7:	int3   
   1400362d8:	int3   
   1400362d9:	int3   
   1400362da:	int3   
   1400362db:	int3   
   1400362dc:	int3   
   1400362dd:	int3   
   1400362de:	int3   
   1400362df:	int3   
   1400362e0:	xor    edx,edx
   1400362e2:	jmp    0x140035f70
   1400362e7:	int3   
   1400362e8:	int3   
   1400362e9:	int3   
   1400362ea:	int3   
   1400362eb:	int3   
   1400362ec:	int3   
   1400362ed:	int3   
   1400362ee:	int3   
   1400362ef:	int3   
   1400362f0:	xor    edx,edx
   1400362f2:	jmp    0x1400360b0
   1400362f7:	int3   
   1400362f8:	int3   
   1400362f9:	int3   
   1400362fa:	int3   
   1400362fb:	int3   
   1400362fc:	int3   
   1400362fd:	int3   
   1400362fe:	int3   
   1400362ff:	int3   
   140036300:	mov    DWORD PTR [rsp+0x20],r9d
   140036305:	mov    QWORD PTR [rsp+0x10],rdx
   14003630a:	push   rbx
   14003630b:	push   rsi
   14003630c:	push   rdi
   14003630d:	push   r12
   14003630f:	push   r13
   140036311:	push   r15
   140036313:	sub    rsp,0x58
   140036317:	xor    r12b,r12b
   14003631a:	mov    r13,rcx
   14003631d:	mov    rcx,QWORD PTR [rsp+0xc0]
   140036325:	test   rcx,rcx
   140036328:	movsxd r15,r8d
   14003632b:	mov    r8,rdx
   14003632e:	mov    BYTE PTR [rsp+0x48],r12b
   140036333:	jne    0x1400363bb
   140036339:	call   0x14002e210
   14003633e:	mov    rbx,rax
   140036341:	mov    rdi,QWORD PTR [rax+0xc0]
   140036348:	mov    rsi,QWORD PTR [rax+0xb8]
   14003634f:	cmp    rdi,QWORD PTR [rip+0x256fa]        # 0x14005ba50
   140036356:	mov    QWORD PTR [rsp+0xc0],rdi
   14003635e:	je     0x14003637e
   140036360:	mov    ecx,DWORD PTR [rax+0xc8]
   140036366:	test   DWORD PTR [rip+0x2556c],ecx        # 0x14005b8d8
   14003636c:	jne    0x14003637e
   14003636e:	call   0x140031a10
   140036373:	mov    rdi,rax
   140036376:	mov    QWORD PTR [rsp+0xc0],rax
   14003637e:	cmp    rsi,QWORD PTR [rip+0x2544b]        # 0x14005b7d0
   140036385:	je     0x14003639a
   140036387:	mov    ecx,DWORD PTR [rbx+0xc8]
   14003638d:	test   DWORD PTR [rip+0x25545],ecx        # 0x14005b8d8
   140036393:	jne    0x14003639a
   140036395:	call   0x140030ec0
   14003639a:	mov    ecx,DWORD PTR [rbx+0xc8]
   1400363a0:	test   cl,0x2
   1400363a3:	jne    0x1400363e8
   1400363a5:	mov    r8,QWORD PTR [rsp+0x98]
   1400363ad:	or     ecx,0x2
   1400363b0:	mov    r12b,0x1
   1400363b3:	mov    DWORD PTR [rbx+0xc8],ecx
   1400363b9:	jmp    0x1400363f0
   1400363bb:	mov    rax,QWORD PTR [rcx]
   1400363be:	lea    rdx,[rsp+0x30]
   1400363c3:	mov    QWORD PTR [rdx],rax
   1400363c6:	mov    rax,QWORD PTR [rcx+0x8]
   1400363ca:	mov    QWORD PTR [rdx+0x8],rax
   1400363ce:	mov    rdi,QWORD PTR [rsp+0x30]
   1400363d3:	movzx  r12d,BYTE PTR [rsp+0x48]
   1400363d9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400363de:	mov    QWORD PTR [rsp+0xc0],rdi
   1400363e6:	jmp    0x1400363f0
   1400363e8:	mov    r8,QWORD PTR [rsp+0x98]
   1400363f0:	test   r13,r13
   1400363f3:	jne    0x140036435
   1400363f5:	call   0x14002bca0
   1400363fa:	xor    esi,esi
   1400363fc:	xor    r9d,r9d
   1400363ff:	xor    r8d,r8d
   140036402:	xor    edx,edx
   140036404:	xor    ecx,ecx
   140036406:	mov    DWORD PTR [rax],0x16
   14003640c:	mov    QWORD PTR [rsp+0x20],rsi
   140036411:	call   0x14002e900
   140036416:	test   r12b,r12b
   140036419:	je     0x140036422
   14003641b:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140036422:	mov    eax,0x16
   140036427:	add    rsp,0x58
   14003642b:	pop    r15
   14003642d:	pop    r13
   14003642f:	pop    r12
   140036431:	pop    rdi
   140036432:	pop    rsi
   140036433:	pop    rbx
   140036434:	ret    
   140036435:	test   r8,r8
   140036438:	je     0x1400363f5
   14003643a:	xor    esi,esi
   14003643c:	test   r15d,r15d
   14003643f:	mov    eax,esi
   140036441:	cmovg  eax,r15d
   140036445:	add    eax,0x9
   140036448:	cdqe   
   14003644a:	cmp    r8,rax
   14003644d:	ja     0x14003648d
   14003644f:	call   0x14002bca0
   140036454:	xor    r9d,r9d
   140036457:	xor    r8d,r8d
   14003645a:	xor    edx,edx
   14003645c:	xor    ecx,ecx
   14003645e:	mov    QWORD PTR [rsp+0x20],rsi
   140036463:	mov    DWORD PTR [rax],0x22
   140036469:	call   0x14002e900
   14003646e:	test   r12b,r12b
   140036471:	je     0x14003647a
   140036473:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003647a:	mov    eax,0x22
   14003647f:	add    rsp,0x58
   140036483:	pop    r15
   140036485:	pop    r13
   140036487:	pop    r12
   140036489:	pop    rdi
   14003648a:	pop    rsi
   14003648b:	pop    rbx
   14003648c:	ret    
   14003648d:	movzx  r9d,BYTE PTR [rsp+0xb8]
   140036496:	mov    QWORD PTR [rsp+0x90],rbp
   14003649e:	or     rbp,0xffffffffffffffff
   1400364a2:	test   r9b,r9b
   1400364a5:	mov    QWORD PTR [rsp+0x50],r14
   1400364aa:	mov    r14,QWORD PTR [rsp+0xb0]
   1400364b2:	je     0x140036510
   1400364b4:	cmp    DWORD PTR [r14],0x2d
   1400364b8:	mov    rdx,rsi
   1400364bb:	mov    r9d,esi
   1400364be:	sete   dl
   1400364c1:	add    rdx,r13
   1400364c4:	test   r15d,r15d
   1400364c7:	setg   r9b
   1400364cb:	test   r9d,r9d
   1400364ce:	je     0x140036508
   1400364d0:	xor    eax,eax
   1400364d2:	mov    rdi,rdx
   1400364d5:	mov    rcx,rbp
   1400364d8:	repnz scas al,BYTE PTR es:[rdi]
   1400364da:	movsxd rax,r9d
   1400364dd:	not    rcx
   1400364e0:	add    rax,rdx
   1400364e3:	mov    r8,rcx
   1400364e6:	mov    rcx,rax
   1400364e9:	call   0x14002b7a0
   1400364ee:	mov    rdi,QWORD PTR [rsp+0xc0]
   1400364f6:	mov    r8,QWORD PTR [rsp+0x98]
   1400364fe:	mov    r9b,BYTE PTR [rsp+0xb8]
   140036506:	jmp    0x140036510
   140036508:	mov    r9b,BYTE PTR [rsp+0xb8]
   140036510:	cmp    DWORD PTR [r14],0x2d
   140036514:	mov    rdx,r13
   140036517:	jne    0x140036522
   140036519:	mov    BYTE PTR [r13+0x0],0x2d
   14003651e:	lea    rdx,[r13+0x1]
   140036522:	test   r15d,r15d
   140036525:	jle    0x140036541
   140036527:	movzx  eax,BYTE PTR [rdx+0x1]
   14003652b:	add    rdx,0x1
   14003652f:	mov    BYTE PTR [rdx-0x1],al
   140036532:	mov    rax,QWORD PTR [rdi+0x128]
   140036539:	mov    rcx,QWORD PTR [rax]
   14003653c:	movzx  eax,BYTE PTR [rcx]
   14003653f:	mov    BYTE PTR [rdx],al
   140036541:	test   r9b,r9b
   140036544:	mov    rcx,rsi
   140036547:	lea    rdi,[rdx+r15*1]
   14003654b:	sete   cl
   14003654e:	add    rdi,rcx
   140036551:	cmp    r8,0xffffffffffffffff
   140036555:	je     0x140036560
   140036557:	mov    rbp,r13
   14003655a:	sub    rbp,rdi
   14003655d:	add    rbp,r8
   140036560:	lea    r8,[rip+0x12701]        # 0x140048c68
   140036567:	mov    rdx,rbp
   14003656a:	mov    rcx,rdi
   14003656d:	call   0x140037660
   140036572:	mov    rbp,QWORD PTR [rsp+0x90]
   14003657a:	test   eax,eax
   14003657c:	je     0x140036592
   14003657e:	xor    r9d,r9d
   140036581:	xor    r8d,r8d
   140036584:	xor    edx,edx
   140036586:	xor    ecx,ecx
   140036588:	mov    QWORD PTR [rsp+0x20],rsi
   14003658d:	call   0x14002e860
   140036592:	cmp    DWORD PTR [rsp+0xa8],esi
   140036599:	lea    rcx,[rdi+0x2]
   14003659d:	je     0x1400365a2
   14003659f:	mov    BYTE PTR [rdi],0x45
   1400365a2:	mov    rax,QWORD PTR [r14+0x10]
   1400365a6:	cmp    BYTE PTR [rax],0x30
   1400365a9:	je     0x140036602
   1400365ab:	mov    r8d,DWORD PTR [r14+0x4]
   1400365af:	sub    r8d,0x1
   1400365b3:	jns    0x1400365bc
   1400365b5:	neg    r8d
   1400365b8:	mov    BYTE PTR [rdi+0x1],0x2d
   1400365bc:	cmp    r8d,0x64
   1400365c0:	jl     0x1400365dd
   1400365c2:	mov    eax,0x51eb851f
   1400365c7:	imul   r8d
   1400365ca:	sar    edx,0x5
   1400365cd:	mov    eax,edx
   1400365cf:	shr    eax,0x1f
   1400365d2:	add    edx,eax
   1400365d4:	add    BYTE PTR [rdi+0x2],dl
   1400365d7:	imul   edx,edx,0xffffff9c
   1400365da:	add    r8d,edx
   1400365dd:	cmp    r8d,0xa
   1400365e1:	jl     0x1400365fe
   1400365e3:	mov    eax,0x66666667
   1400365e8:	imul   r8d
   1400365eb:	sar    edx,0x2
   1400365ee:	mov    eax,edx
   1400365f0:	shr    eax,0x1f
   1400365f3:	add    edx,eax
   1400365f5:	add    BYTE PTR [rdi+0x3],dl
   1400365f8:	imul   edx,edx,0xfffffff6
   1400365fb:	add    r8d,edx
   1400365fe:	add    BYTE PTR [rdi+0x4],r8b
   140036602:	test   BYTE PTR [rip+0x2b683],0x1        # 0x140061c8c
   140036609:	mov    r14,QWORD PTR [rsp+0x50]
   14003660e:	je     0x140036624
   140036610:	cmp    BYTE PTR [rcx],0x30
   140036613:	jne    0x140036624
   140036615:	lea    rdx,[rcx+0x1]
   140036619:	mov    r8d,0x3
   14003661f:	call   0x14002b7a0
   140036624:	test   r12b,r12b
   140036627:	je     0x140036630
   140036629:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140036630:	xor    eax,eax
   140036632:	add    rsp,0x58
   140036636:	pop    r15
   140036638:	pop    r13
   14003663a:	pop    r12
   14003663c:	pop    rdi
   14003663d:	pop    rsi
   14003663e:	pop    rbx
   14003663f:	ret    
   140036640:	rex push rbx
   140036642:	push   rbp
   140036643:	push   rsi
   140036644:	push   rdi
   140036645:	sub    rsp,0x88
   14003664c:	mov    rax,QWORD PTR [rip+0x2492d]        # 0x14005af80
   140036653:	xor    rax,rsp
   140036656:	mov    QWORD PTR [rsp+0x70],rax
   14003665b:	mov    rcx,QWORD PTR [rcx]
   14003665e:	mov    rbp,QWORD PTR [rsp+0xd8]
   140036666:	mov    rbx,r8
   140036669:	mov    rdi,rdx
   14003666c:	mov    esi,r9d
   14003666f:	lea    r8,[rsp+0x58]
   140036674:	lea    rdx,[rsp+0x40]
   140036679:	mov    r9d,0x16
   14003667f:	call   0x14003b770
   140036684:	test   rdi,rdi
   140036687:	jne    0x1400366b2
   140036689:	call   0x14002bca0
   14003668e:	xor    ecx,ecx
   140036690:	xor    r9d,r9d
   140036693:	xor    r8d,r8d
   140036696:	xor    edx,edx
   140036698:	mov    DWORD PTR [rax],0x16
   14003669e:	mov    QWORD PTR [rsp+0x20],rcx
   1400366a3:	call   0x14002e900
   1400366a8:	mov    eax,0x16
   1400366ad:	jmp    0x14003673a
   1400366b2:	test   rbx,rbx
   1400366b5:	je     0x140036689
   1400366b7:	mov    r9d,DWORD PTR [rsp+0x40]
   1400366bc:	xor    ecx,ecx
   1400366be:	cmp    rbx,0xffffffffffffffff
   1400366c2:	jne    0x1400366c9
   1400366c4:	or     rdx,rbx
   1400366c7:	jmp    0x1400366e4
   1400366c9:	cmp    r9d,0x2d
   1400366cd:	mov    rax,rcx
   1400366d0:	mov    rdx,rbx
   1400366d3:	sete   al
   1400366d6:	sub    rdx,rax
   1400366d9:	test   esi,esi
   1400366db:	mov    rax,rcx
   1400366de:	setg   al
   1400366e1:	sub    rdx,rax
   1400366e4:	mov    rax,rcx
   1400366e7:	cmp    r9d,0x2d
   1400366eb:	lea    r8d,[rsi+0x1]
   1400366ef:	sete   al
   1400366f2:	test   esi,esi
   1400366f4:	lea    r9,[rsp+0x40]
   1400366f9:	setg   cl
   1400366fc:	add    rax,rdi
   1400366ff:	add    rcx,rax
   140036702:	call   0x14003b650
   140036707:	test   eax,eax
   140036709:	je     0x140036710
   14003670b:	mov    BYTE PTR [rdi],0x0
   14003670e:	jmp    0x14003673a
   140036710:	mov    r9d,DWORD PTR [rsp+0xd0]
   140036718:	lea    rax,[rsp+0x40]
   14003671d:	mov    QWORD PTR [rsp+0x30],rbp
   140036722:	mov    r8d,esi
   140036725:	mov    rdx,rbx
   140036728:	mov    rcx,rdi
   14003672b:	mov    BYTE PTR [rsp+0x28],0x0
   140036730:	mov    QWORD PTR [rsp+0x20],rax
   140036735:	call   0x140036300
   14003673a:	mov    rcx,QWORD PTR [rsp+0x70]
   14003673f:	xor    rcx,rsp
   140036742:	call   0x140029b40
   140036747:	add    rsp,0x88
   14003674e:	pop    rdi
   14003674f:	pop    rsi
   140036750:	pop    rbp
   140036751:	pop    rbx
   140036752:	ret    
   140036753:	int3   
   140036754:	int3   
   140036755:	int3   
   140036756:	int3   
   140036757:	int3   
   140036758:	int3   
   140036759:	int3   
   14003675a:	int3   
   14003675b:	int3   
   14003675c:	int3   
   14003675d:	int3   
   14003675e:	int3   
   14003675f:	int3   
   140036760:	mov    QWORD PTR [rsp+0x18],rbx
   140036765:	mov    QWORD PTR [rsp+0x8],rcx
   14003676a:	push   rbp
   14003676b:	push   rsi
   14003676c:	push   rdi
   14003676d:	push   r12
   14003676f:	push   r13
   140036771:	push   r14
   140036773:	push   r15
   140036775:	sub    rsp,0x50
   140036779:	xor    r15b,r15b
   14003677c:	mov    rdi,rdx
   14003677f:	mov    rdx,QWORD PTR [rsp+0xb8]
   140036787:	test   rdx,rdx
   14003678a:	mov    ebx,r9d
   14003678d:	mov    r9d,0x3ff
   140036793:	mov    r12,r8
   140036796:	mov    r14,rcx
   140036799:	mov    bp,0x30
   14003679d:	mov    QWORD PTR [rsp+0x98],r9
   1400367a5:	mov    BYTE PTR [rsp+0x48],r15b
   1400367aa:	jne    0x140036824
   1400367ac:	call   0x14002e210
   1400367b1:	mov    rsi,rax
   1400367b4:	mov    r13,QWORD PTR [rax+0xc0]
   1400367bb:	mov    r14,QWORD PTR [rax+0xb8]
   1400367c2:	cmp    r13,QWORD PTR [rip+0x25287]        # 0x14005ba50
   1400367c9:	je     0x1400367e1
   1400367cb:	mov    ecx,DWORD PTR [rax+0xc8]
   1400367d1:	test   DWORD PTR [rip+0x25101],ecx        # 0x14005b8d8
   1400367d7:	jne    0x1400367e1
   1400367d9:	call   0x140031a10
   1400367de:	mov    r13,rax
   1400367e1:	cmp    r14,QWORD PTR [rip+0x24fe8]        # 0x14005b7d0
   1400367e8:	je     0x1400367fd
   1400367ea:	mov    ecx,DWORD PTR [rsi+0xc8]
   1400367f0:	test   DWORD PTR [rip+0x250e2],ecx        # 0x14005b8d8
   1400367f6:	jne    0x1400367fd
   1400367f8:	call   0x140030ec0
   1400367fd:	mov    ecx,DWORD PTR [rsi+0xc8]
   140036803:	mov    r14,QWORD PTR [rsp+0x90]
   14003680b:	mov    r9d,0x3ff
   140036811:	test   cl,0x2
   140036814:	jne    0x140036847
   140036816:	or     ecx,0x2
   140036819:	mov    r15b,0x1
   14003681c:	mov    DWORD PTR [rsi+0xc8],ecx
   140036822:	jmp    0x140036847
   140036824:	mov    rax,QWORD PTR [rdx]
   140036827:	lea    rcx,[rsp+0x30]
   14003682c:	mov    QWORD PTR [rcx],rax
   14003682f:	mov    rax,QWORD PTR [rdx+0x8]
   140036833:	mov    QWORD PTR [rcx+0x8],rax
   140036837:	movzx  r15d,BYTE PTR [rsp+0x48]
   14003683d:	mov    rsi,QWORD PTR [rsp+0x40]
   140036842:	mov    r13,QWORD PTR [rsp+0x30]
   140036847:	xor    edx,edx
   140036849:	test   ebx,ebx
   14003684b:	cmovs  ebx,edx
   14003684e:	test   rdi,rdi
   140036851:	jne    0x14003688c
   140036853:	call   0x14002bca0
   140036858:	xor    r9d,r9d
   14003685b:	xor    r8d,r8d
   14003685e:	xor    edx,edx
   140036860:	xor    ecx,ecx
   140036862:	mov    QWORD PTR [rsp+0x20],0x0
   14003686b:	mov    DWORD PTR [rax],0x16
   140036871:	call   0x14002e900
   140036876:	test   r15b,r15b
   140036879:	je     0x140036882
   14003687b:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140036882:	mov    eax,0x16
   140036887:	jmp    0x140036c08
   14003688c:	test   r12,r12
   14003688f:	je     0x140036853
   140036891:	lea    eax,[rbx+0xb]
   140036894:	mov    BYTE PTR [rdi],dl
   140036896:	movsxd rcx,eax
   140036899:	cmp    r12,rcx
   14003689c:	ja     0x1400368d7
   14003689e:	call   0x14002bca0
   1400368a3:	xor    r9d,r9d
   1400368a6:	xor    r8d,r8d
   1400368a9:	xor    edx,edx
   1400368ab:	xor    ecx,ecx
   1400368ad:	mov    QWORD PTR [rsp+0x20],0x0
   1400368b6:	mov    DWORD PTR [rax],0x22
   1400368bc:	call   0x14002e900
   1400368c1:	test   r15b,r15b
   1400368c4:	je     0x1400368cd
   1400368c6:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   1400368cd:	mov    eax,0x22
   1400368d2:	jmp    0x140036c08
   1400368d7:	mov    rcx,QWORD PTR [r14]
   1400368da:	mov    rax,rcx
   1400368dd:	shr    rax,0x34
   1400368e1:	and    eax,0x7ff
   1400368e6:	cmp    rax,0x7ff
   1400368ec:	jne    0x140036990
   1400368f2:	cmp    r12,0xffffffffffffffff
   1400368f6:	jne    0x1400368fd
   1400368f8:	or     r8,r12
   1400368fb:	jmp    0x140036902
   1400368fd:	lea    r8,[r12-0x2]
   140036902:	mov    QWORD PTR [rsp+0x28],rdx
   140036907:	mov    DWORD PTR [rsp+0x20],edx
   14003690b:	lea    rdx,[rdi+0x2]
   14003690f:	mov    r9d,ebx
   140036912:	mov    rcx,r14
   140036915:	call   0x140036640
   14003691a:	test   eax,eax
   14003691c:	je     0x140036936
   14003691e:	test   r15b,r15b
   140036921:	mov    BYTE PTR [rdi],0x0
   140036924:	je     0x140036c08
   14003692a:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140036931:	jmp    0x140036c08
   140036936:	cmp    BYTE PTR [rdi+0x2],0x2d
   14003693a:	jne    0x140036943
   14003693c:	mov    BYTE PTR [rdi],0x2d
   14003693f:	add    rdi,0x1
   140036943:	mov    ebx,DWORD PTR [rsp+0xb0]
   14003694a:	mov    eax,0x78
   14003694f:	mov    ecx,0x58
   140036954:	mov    BYTE PTR [rdi],0x30
   140036957:	test   ebx,ebx
   140036959:	mov    edx,0x65
   14003695e:	cmovne eax,ecx
   140036961:	lea    rcx,[rdi+0x2]
   140036965:	mov    BYTE PTR [rdi+0x1],al
   140036968:	call   0x14003b070
   14003696d:	test   rax,rax
   140036970:	je     0x140036bfa
   140036976:	mov    ecx,0x70
   14003697b:	mov    edx,0x50
   140036980:	test   ebx,ebx
   140036982:	cmovne ecx,edx
   140036985:	mov    BYTE PTR [rax],cl
   140036987:	mov    BYTE PTR [rax+0x3],0x0
   14003698b:	jmp    0x140036bfa
   140036990:	movabs rax,0x8000000000000000
   14003699a:	test   rax,rcx
   14003699d:	je     0x1400369a6
   14003699f:	mov    BYTE PTR [rdi],0x2d
   1400369a2:	add    rdi,0x1
   1400369a6:	mov    edx,DWORD PTR [rsp+0xb0]
   1400369ad:	mov    eax,0x78
   1400369b2:	mov    BYTE PTR [rdi],0x30
   1400369b5:	test   edx,edx
   1400369b7:	mov    ecx,0x58
   1400369bc:	mov    r8d,0x61
   1400369c2:	cmovne eax,ecx
   1400369c5:	test   edx,edx
   1400369c7:	movabs r10,0xfffffffffffff
   1400369d1:	mov    BYTE PTR [rdi+0x1],al
   1400369d4:	mov    eax,0x41
   1400369d9:	cmovne r8d,eax
   1400369dd:	movabs rax,0x7ff0000000000000
   1400369e7:	sub    r8d,0x3a
   1400369eb:	test   QWORD PTR [r14],rax
   1400369ee:	jne    0x140036a15
   1400369f0:	mov    BYTE PTR [rdi+0x2],0x30
   1400369f4:	mov    rax,QWORD PTR [r14]
   1400369f7:	add    rdi,0x3
   1400369fb:	and    rax,r10
   1400369fe:	neg    rax
   140036a01:	sbb    r9,r9
   140036a04:	and    r9d,0x3fe
   140036a0b:	mov    QWORD PTR [rsp+0x98],r9
   140036a13:	jmp    0x140036a1d
   140036a15:	mov    BYTE PTR [rdi+0x2],0x31
   140036a19:	add    rdi,0x3
   140036a1d:	mov    r12,rdi
   140036a20:	add    rdi,0x1
   140036a24:	test   ebx,ebx
   140036a26:	jne    0x140036a2e
   140036a28:	mov    BYTE PTR [r12],bl
   140036a2c:	jmp    0x140036a3f
   140036a2e:	mov    rax,QWORD PTR [r13+0x128]
   140036a35:	mov    rcx,QWORD PTR [rax]
   140036a38:	movzx  eax,BYTE PTR [rcx]
   140036a3b:	mov    BYTE PTR [r12],al
   140036a3f:	test   QWORD PTR [r14],r10
   140036a42:	jbe    0x140036adf
   140036a48:	movabs rdx,0xf000000000000
   140036a52:	test   ebx,ebx
   140036a54:	jle    0x140036a89
   140036a56:	mov    rax,QWORD PTR [r14]
   140036a59:	movzx  ecx,bpl
   140036a5d:	and    rax,rdx
   140036a60:	and    rax,r10
   140036a63:	shr    rax,cl
   140036a66:	add    ax,0x30
   140036a6a:	cmp    ax,0x39
   140036a6e:	jbe    0x140036a74
   140036a70:	add    ax,r8w
   140036a74:	mov    BYTE PTR [rdi],al
   140036a76:	add    rdi,0x1
   140036a7a:	shr    rdx,0x4
   140036a7e:	sub    ebx,0x1
   140036a81:	add    bp,0xfffc
   140036a85:	jns    0x140036a52
   140036a87:	jmp    0x140036adf
   140036a89:	test   bp,bp
   140036a8c:	js     0x140036adf
   140036a8e:	mov    rax,QWORD PTR [r14]
   140036a91:	movzx  ecx,bpl
   140036a95:	and    rax,rdx
   140036a98:	and    rax,r10
   140036a9b:	shr    rax,cl
   140036a9e:	cmp    ax,0x8
   140036aa2:	jbe    0x140036adf
   140036aa4:	lea    rax,[rdi-0x1]
   140036aa8:	movzx  ecx,BYTE PTR [rax]
   140036aab:	cmp    cl,0x66
   140036aae:	je     0x140036ab5
   140036ab0:	cmp    cl,0x46
   140036ab3:	jne    0x140036abe
   140036ab5:	mov    BYTE PTR [rax],0x30
   140036ab8:	sub    rax,0x1
   140036abc:	jmp    0x140036aa8
   140036abe:	cmp    rax,r12
   140036ac1:	je     0x140036adb
   140036ac3:	movzx  ecx,BYTE PTR [rax]
   140036ac6:	cmp    cl,0x39
   140036ac9:	jne    0x140036ad4
   140036acb:	add    r8b,0x3a
   140036acf:	mov    BYTE PTR [rax],r8b
   140036ad2:	jmp    0x140036adf
   140036ad4:	add    cl,0x1
   140036ad7:	mov    BYTE PTR [rax],cl
   140036ad9:	jmp    0x140036adf
   140036adb:	add    BYTE PTR [rax-0x1],0x1
   140036adf:	test   ebx,ebx
   140036ae1:	jle    0x140036afb
   140036ae3:	mov    r8,rbx
   140036ae6:	mov    dl,0x30
   140036ae8:	mov    rcx,rdi
   140036aeb:	call   0x14002ac20
   140036af0:	mov    r9,QWORD PTR [rsp+0x98]
   140036af8:	add    rdi,rbx
   140036afb:	cmp    BYTE PTR [r12],0x0
   140036b00:	mov    ecx,0x70
   140036b05:	mov    edx,0x50
   140036b0a:	cmove  rdi,r12
   140036b0e:	cmp    DWORD PTR [rsp+0xb0],0x0
   140036b16:	cmovne ecx,edx
   140036b19:	mov    BYTE PTR [rdi],cl
   140036b1b:	mov    rcx,QWORD PTR [r14]
   140036b1e:	shr    rcx,0x34
   140036b22:	and    ecx,0x7ff
   140036b28:	sub    rcx,r9
   140036b2b:	js     0x140036b37
   140036b2d:	mov    BYTE PTR [rdi+0x1],0x2b
   140036b31:	add    rdi,0x2
   140036b35:	jmp    0x140036b42
   140036b37:	mov    BYTE PTR [rdi+0x1],0x2d
   140036b3b:	add    rdi,0x2
   140036b3f:	neg    rcx
   140036b42:	cmp    rcx,0x3e8
   140036b49:	mov    r8,rdi
   140036b4c:	mov    BYTE PTR [rdi],0x30
   140036b4f:	jl     0x140036b85
   140036b51:	movabs rax,0x20c49ba5e353f7cf
   140036b5b:	add    rdi,0x1
   140036b5f:	imul   rcx
   140036b62:	sar    rdx,0x7
   140036b66:	mov    rax,rdx
   140036b69:	shr    rax,0x3f
   140036b6d:	add    rdx,rax
   140036b70:	lea    eax,[rdx+0x30]
   140036b73:	imul   rdx,rdx,0xfffffffffffffc18
   140036b7a:	mov    BYTE PTR [rdi-0x1],al
   140036b7d:	add    rcx,rdx
   140036b80:	cmp    rdi,r8
   140036b83:	jne    0x140036b8b
   140036b85:	cmp    rcx,0x64
   140036b89:	jl     0x140036bba
   140036b8b:	movabs rax,0xa3d70a3d70a3d70b
   140036b95:	add    rdi,0x1
   140036b99:	imul   rcx
   140036b9c:	add    rdx,rcx
   140036b9f:	sar    rdx,0x6
   140036ba3:	mov    rax,rdx
   140036ba6:	shr    rax,0x3f
   140036baa:	add    rdx,rax
   140036bad:	lea    eax,[rdx+0x30]
   140036bb0:	imul   rdx,rdx,0xffffffffffffff9c
   140036bb4:	mov    BYTE PTR [rdi-0x1],al
   140036bb7:	add    rcx,rdx
   140036bba:	cmp    rdi,r8
   140036bbd:	jne    0x140036bc5
   140036bbf:	cmp    rcx,0xa
   140036bc3:	jl     0x140036bf1
   140036bc5:	movabs rax,0x6666666666666667
   140036bcf:	add    rdi,0x1
   140036bd3:	imul   rcx
   140036bd6:	sar    rdx,0x2
   140036bda:	mov    rax,rdx
   140036bdd:	shr    rax,0x3f
   140036be1:	add    rdx,rax
   140036be4:	lea    eax,[rdx+0x30]
   140036be7:	imul   rdx,rdx,0xfffffffffffffff6
   140036beb:	mov    BYTE PTR [rdi-0x1],al
   140036bee:	add    rcx,rdx
   140036bf1:	add    cl,0x30
   140036bf4:	mov    BYTE PTR [rdi],cl
   140036bf6:	mov    BYTE PTR [rdi+0x1],0x0
   140036bfa:	test   r15b,r15b
   140036bfd:	je     0x140036c06
   140036bff:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140036c06:	xor    eax,eax
   140036c08:	mov    rbx,QWORD PTR [rsp+0xa0]
   140036c10:	add    rsp,0x50
   140036c14:	pop    r15
   140036c16:	pop    r14
   140036c18:	pop    r13
   140036c1a:	pop    r12
   140036c1c:	pop    rdi
   140036c1d:	pop    rsi
   140036c1e:	pop    rbp
   140036c1f:	ret    
   140036c20:	mov    QWORD PTR [rsp+0x8],rbx
   140036c25:	mov    QWORD PTR [rsp+0x18],rbp
   140036c2a:	mov    QWORD PTR [rsp+0x20],rsi
   140036c2f:	mov    QWORD PTR [rsp+0x10],rdx
   140036c34:	push   rdi
   140036c35:	push   r12
   140036c37:	push   r13
   140036c39:	push   r14
   140036c3b:	push   r15
   140036c3d:	sub    rsp,0x50
   140036c41:	mov    edi,DWORD PTR [r9+0x4]
   140036c45:	xor    r12b,r12b
   140036c48:	mov    rbp,rcx
   140036c4b:	mov    rcx,QWORD PTR [rsp+0xa8]
   140036c53:	sub    edi,0x1
   140036c56:	mov    r14,r9
   140036c59:	test   rcx,rcx
   140036c5c:	mov    r15d,r8d
   140036c5f:	mov    BYTE PTR [rsp+0x48],r12b
   140036c64:	jne    0x140036ce5
   140036c66:	call   0x14002e210
   140036c6b:	mov    rsi,rax
   140036c6e:	mov    r13,QWORD PTR [rax+0xc0]
   140036c75:	mov    rbx,QWORD PTR [rax+0xb8]
   140036c7c:	cmp    r13,QWORD PTR [rip+0x24dcd]        # 0x14005ba50
   140036c83:	mov    QWORD PTR [rsp+0xa8],r13
   140036c8b:	je     0x140036ca8
   140036c8d:	mov    ecx,DWORD PTR [rax+0xc8]
   140036c93:	test   DWORD PTR [rip+0x24c3f],ecx        # 0x14005b8d8
   140036c99:	jne    0x140036ca8
   140036c9b:	call   0x140031a10
   140036ca0:	mov    QWORD PTR [rsp+0xa8],rax
   140036ca8:	cmp    rbx,QWORD PTR [rip+0x24b21]        # 0x14005b7d0
   140036caf:	je     0x140036cc4
   140036cb1:	mov    ecx,DWORD PTR [rsi+0xc8]
   140036cb7:	test   DWORD PTR [rip+0x24c1b],ecx        # 0x14005b8d8
   140036cbd:	jne    0x140036cc4
   140036cbf:	call   0x140030ec0
   140036cc4:	mov    ecx,DWORD PTR [rsi+0xc8]
   140036cca:	mov    rdx,QWORD PTR [rsp+0x88]
   140036cd2:	test   cl,0x2
   140036cd5:	jne    0x140036d10
   140036cd7:	or     ecx,0x2
   140036cda:	mov    r12b,0x1
   140036cdd:	mov    DWORD PTR [rsi+0xc8],ecx
   140036ce3:	jmp    0x140036d10
   140036ce5:	mov    rax,QWORD PTR [rcx]
   140036ce8:	lea    r8,[rsp+0x30]
   140036ced:	mov    QWORD PTR [r8],rax
   140036cf0:	mov    rax,QWORD PTR [rcx+0x8]
   140036cf4:	mov    QWORD PTR [r8+0x8],rax
   140036cf8:	mov    rax,QWORD PTR [rsp+0x30]
   140036cfd:	movzx  r12d,BYTE PTR [rsp+0x48]
   140036d03:	mov    rsi,QWORD PTR [rsp+0x40]
   140036d08:	mov    QWORD PTR [rsp+0xa8],rax
   140036d10:	test   rbp,rbp
   140036d13:	jne    0x140036d4c
   140036d15:	call   0x14002bca0
   140036d1a:	xor    r9d,r9d
   140036d1d:	xor    r8d,r8d
   140036d20:	mov    DWORD PTR [rax],0x16
   140036d26:	xor    eax,eax
   140036d28:	xor    edx,edx
   140036d2a:	xor    ecx,ecx
   140036d2c:	mov    QWORD PTR [rsp+0x20],rax
   140036d31:	call   0x14002e900
   140036d36:	test   r12b,r12b
   140036d39:	je     0x140036d42
   140036d3b:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140036d42:	mov    eax,0x16
   140036d47:	jmp    0x140036e5c
   140036d4c:	test   rdx,rdx
   140036d4f:	je     0x140036d15
   140036d51:	cmp    BYTE PTR [rsp+0xa0],0x0
   140036d59:	je     0x140036d78
   140036d5b:	cmp    edi,r15d
   140036d5e:	jne    0x140036d78
   140036d60:	xor    eax,eax
   140036d62:	cmp    DWORD PTR [r14],0x2d
   140036d66:	movsxd rcx,edi
   140036d69:	sete   al
   140036d6c:	add    rax,rbp
   140036d6f:	mov    BYTE PTR [rcx+rax*1],0x30
   140036d73:	mov    BYTE PTR [rcx+rax*1+0x1],0x0
   140036d78:	cmp    DWORD PTR [r14],0x2d
   140036d7c:	jne    0x140036d86
   140036d7e:	mov    BYTE PTR [rbp+0x0],0x2d
   140036d82:	add    rbp,0x1
   140036d86:	movsxd rax,DWORD PTR [r14+0x4]
   140036d8a:	test   eax,eax
   140036d8c:	jg     0x140036db5
   140036d8e:	or     rcx,0xffffffffffffffff
   140036d92:	xor    eax,eax
   140036d94:	mov    rdi,rbp
   140036d97:	repnz scas al,BYTE PTR es:[rdi]
   140036d99:	mov    rdx,rbp
   140036d9c:	not    rcx
   140036d9f:	mov    r8,rcx
   140036da2:	lea    rcx,[rbp+0x1]
   140036da6:	call   0x14002b7a0
   140036dab:	mov    BYTE PTR [rbp+0x0],0x30
   140036daf:	add    rbp,0x1
   140036db3:	jmp    0x140036db8
   140036db5:	add    rbp,rax
   140036db8:	test   r15d,r15d
   140036dbb:	jle    0x140036e4e
   140036dc1:	or     rcx,0xffffffffffffffff
   140036dc5:	xor    eax,eax
   140036dc7:	mov    rdi,rbp
   140036dca:	repnz scas al,BYTE PTR es:[rdi]
   140036dcc:	lea    r13,[rbp+0x1]
   140036dd0:	mov    rdx,rbp
   140036dd3:	not    rcx
   140036dd6:	mov    r8,rcx
   140036dd9:	mov    rcx,r13
   140036ddc:	call   0x14002b7a0
   140036de1:	mov    rcx,QWORD PTR [rsp+0xa8]
   140036de9:	mov    rdx,QWORD PTR [rcx+0x128]
   140036df0:	mov    rax,QWORD PTR [rdx]
   140036df3:	movzx  ecx,BYTE PTR [rax]
   140036df6:	mov    BYTE PTR [rbp+0x0],cl
   140036df9:	mov    ebx,DWORD PTR [r14+0x4]
   140036dfd:	test   ebx,ebx
   140036dff:	jns    0x140036e4e
   140036e01:	neg    ebx
   140036e03:	cmp    BYTE PTR [rsp+0xa0],0x0
   140036e0b:	jne    0x140036e18
   140036e0d:	mov    eax,ebx
   140036e0f:	mov    ebx,r15d
   140036e12:	cmp    r15d,eax
   140036e15:	cmovge ebx,eax
   140036e18:	test   ebx,ebx
   140036e1a:	je     0x140036e3e
   140036e1c:	xor    eax,eax
   140036e1e:	or     rcx,0xffffffffffffffff
   140036e22:	mov    rdi,r13
   140036e25:	repnz scas al,BYTE PTR es:[rdi]
   140036e27:	movsxd rax,ebx
   140036e2a:	mov    rdx,r13
   140036e2d:	not    rcx
   140036e30:	add    rax,r13
   140036e33:	mov    r8,rcx
   140036e36:	mov    rcx,rax
   140036e39:	call   0x14002b7a0
   140036e3e:	movsxd r8,ebx
   140036e41:	mov    edx,0x30
   140036e46:	mov    rcx,r13
   140036e49:	call   0x14002ac20
   140036e4e:	test   r12b,r12b
   140036e51:	je     0x140036e5a
   140036e53:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140036e5a:	xor    eax,eax
   140036e5c:	lea    r11,[rsp+0x50]
   140036e61:	mov    rbx,QWORD PTR [r11+0x30]
   140036e65:	mov    rbp,QWORD PTR [r11+0x40]
   140036e69:	mov    rsi,QWORD PTR [r11+0x48]
   140036e6d:	mov    rsp,r11
   140036e70:	pop    r15
   140036e72:	pop    r14
   140036e74:	pop    r13
   140036e76:	pop    r12
   140036e78:	pop    rdi
   140036e79:	ret    
   140036e7a:	int3   
   140036e7b:	int3   
   140036e7c:	int3   
   140036e7d:	int3   
   140036e7e:	int3   
   140036e7f:	int3   
   140036e80:	rex push rbx
   140036e82:	push   rbp
   140036e83:	push   rsi
   140036e84:	push   rdi
   140036e85:	sub    rsp,0x78
   140036e89:	mov    rax,QWORD PTR [rip+0x240f0]        # 0x14005af80
   140036e90:	xor    rax,rsp
   140036e93:	mov    QWORD PTR [rsp+0x60],rax
   140036e98:	mov    rcx,QWORD PTR [rcx]
   140036e9b:	mov    rbp,QWORD PTR [rsp+0xc0]
   140036ea3:	mov    rbx,r8
   140036ea6:	mov    rdi,rdx
   140036ea9:	mov    esi,r9d
   140036eac:	lea    r8,[rsp+0x48]
   140036eb1:	lea    rdx,[rsp+0x30]
   140036eb6:	mov    r9d,0x16
   140036ebc:	call   0x14003b770
   140036ec1:	test   rdi,rdi
   140036ec4:	jne    0x140036eec
   140036ec6:	call   0x14002bca0
   140036ecb:	xor    ecx,ecx
   140036ecd:	xor    r9d,r9d
   140036ed0:	xor    r8d,r8d
   140036ed3:	xor    edx,edx
   140036ed5:	mov    DWORD PTR [rax],0x16
   140036edb:	mov    QWORD PTR [rsp+0x20],rcx
   140036ee0:	call   0x14002e900
   140036ee5:	mov    eax,0x16
   140036eea:	jmp    0x140036f55
   140036eec:	test   rbx,rbx
   140036eef:	je     0x140036ec6
   140036ef1:	mov    r9d,DWORD PTR [rsp+0x30]
   140036ef6:	xor    ecx,ecx
   140036ef8:	cmp    rbx,0xffffffffffffffff
   140036efc:	jne    0x140036f03
   140036efe:	or     rdx,rbx
   140036f01:	jmp    0x140036f13
   140036f03:	cmp    r9d,0x2d
   140036f07:	mov    rax,rcx
   140036f0a:	mov    rdx,rbx
   140036f0d:	sete   al
   140036f10:	sub    rdx,rax
   140036f13:	mov    r8d,DWORD PTR [rsp+0x34]
   140036f18:	add    r8d,esi
   140036f1b:	cmp    r9d,0x2d
   140036f1f:	lea    r9,[rsp+0x30]
   140036f24:	sete   cl
   140036f27:	add    rcx,rdi
   140036f2a:	call   0x14003b650
   140036f2f:	test   eax,eax
   140036f31:	je     0x140036f38
   140036f33:	mov    BYTE PTR [rdi],0x0
   140036f36:	jmp    0x140036f55
   140036f38:	lea    r9,[rsp+0x30]
   140036f3d:	mov    r8d,esi
   140036f40:	mov    rdx,rbx
   140036f43:	mov    rcx,rdi
   140036f46:	mov    QWORD PTR [rsp+0x28],rbp
   140036f4b:	mov    BYTE PTR [rsp+0x20],0x0
   140036f50:	call   0x140036c20
   140036f55:	mov    rcx,QWORD PTR [rsp+0x60]
   140036f5a:	xor    rcx,rsp
   140036f5d:	call   0x140029b40
   140036f62:	add    rsp,0x78
   140036f66:	pop    rdi
   140036f67:	pop    rsi
   140036f68:	pop    rbp
   140036f69:	pop    rbx
   140036f6a:	ret    
   140036f6b:	int3   
   140036f6c:	int3   
   140036f6d:	int3   
   140036f6e:	int3   
   140036f6f:	int3   
   140036f70:	rex push rbp
   140036f72:	push   rsi
   140036f73:	push   rdi
   140036f74:	push   r13
   140036f76:	sub    rsp,0x98
   140036f7d:	mov    rax,QWORD PTR [rip+0x23ffc]        # 0x14005af80
   140036f84:	xor    rax,rsp
   140036f87:	mov    QWORD PTR [rsp+0x70],rax
   140036f8c:	mov    rcx,QWORD PTR [rcx]
   140036f8f:	mov    r13,QWORD PTR [rsp+0xe8]
   140036f97:	mov    rdi,r8
   140036f9a:	mov    rsi,rdx
   140036f9d:	mov    ebp,r9d
   140036fa0:	lea    r8,[rsp+0x58]
   140036fa5:	lea    rdx,[rsp+0x40]
   140036faa:	mov    r9d,0x16
   140036fb0:	call   0x14003b770
   140036fb5:	test   rsi,rsi
   140036fb8:	jne    0x140036fe3
   140036fba:	call   0x14002bca0
   140036fbf:	xor    ecx,ecx
   140036fc1:	xor    r9d,r9d
   140036fc4:	xor    r8d,r8d
   140036fc7:	xor    edx,edx
   140036fc9:	mov    DWORD PTR [rax],0x16
   140036fcf:	mov    QWORD PTR [rsp+0x20],rcx
   140036fd4:	call   0x14002e900
   140036fd9:	mov    eax,0x16
   140036fde:	jmp    0x1400370ba
   140036fe3:	test   rdi,rdi
   140036fe6:	je     0x140036fba
   140036fe8:	xor    ecx,ecx
   140036fea:	mov    QWORD PTR [rsp+0x90],rbx
   140036ff2:	mov    QWORD PTR [rsp+0x88],r12
   140036ffa:	mov    r12d,DWORD PTR [rsp+0x44]
   140036fff:	add    r12d,0xffffffff
   140037003:	cmp    DWORD PTR [rsp+0x40],0x2d
   140037008:	sete   cl
   14003700b:	cmp    rdi,0xffffffffffffffff
   14003700f:	lea    rbx,[rcx+rsi*1]
   140037013:	jne    0x14003701a
   140037015:	or     rdx,rdi
   140037018:	jmp    0x140037020
   14003701a:	mov    rdx,rdi
   14003701d:	sub    rdx,rcx
   140037020:	lea    r9,[rsp+0x40]
   140037025:	mov    r8d,ebp
   140037028:	mov    rcx,rbx
   14003702b:	call   0x14003b650
   140037030:	test   eax,eax
   140037032:	je     0x140037039
   140037034:	mov    BYTE PTR [rsi],0x0
   140037037:	jmp    0x1400370aa
   140037039:	mov    eax,DWORD PTR [rsp+0x44]
   14003703d:	add    eax,0xffffffff
   140037040:	cmp    r12d,eax
   140037043:	setl   cl
   140037046:	cmp    eax,0xfffffffc
   140037049:	jl     0x140037080
   14003704b:	cmp    eax,ebp
   14003704d:	jge    0x140037080
   14003704f:	test   cl,cl
   140037051:	je     0x140037061
   140037053:	movzx  eax,BYTE PTR [rbx]
   140037056:	add    rbx,0x1
   14003705a:	test   al,al
   14003705c:	jne    0x140037053
   14003705e:	mov    BYTE PTR [rbx-0x2],al
   140037061:	lea    r9,[rsp+0x40]
   140037066:	mov    r8d,ebp
   140037069:	mov    rdx,rdi
   14003706c:	mov    rcx,rsi
   14003706f:	mov    QWORD PTR [rsp+0x28],r13
   140037074:	mov    BYTE PTR [rsp+0x20],0x1
   140037079:	call   0x140036c20
   14003707e:	jmp    0x1400370aa
   140037080:	mov    r9d,DWORD PTR [rsp+0xe0]
   140037088:	lea    rax,[rsp+0x40]
   14003708d:	mov    QWORD PTR [rsp+0x30],r13
   140037092:	mov    r8d,ebp
   140037095:	mov    rdx,rdi
   140037098:	mov    rcx,rsi
   14003709b:	mov    BYTE PTR [rsp+0x28],0x1
   1400370a0:	mov    QWORD PTR [rsp+0x20],rax
   1400370a5:	call   0x140036300
   1400370aa:	mov    rbx,QWORD PTR [rsp+0x90]
   1400370b2:	mov    r12,QWORD PTR [rsp+0x88]
   1400370ba:	mov    rcx,QWORD PTR [rsp+0x70]
   1400370bf:	xor    rcx,rsp
   1400370c2:	call   0x140029b40
   1400370c7:	add    rsp,0x98
   1400370ce:	pop    r13
   1400370d0:	pop    rdi
   1400370d1:	pop    rsi
   1400370d2:	pop    rbp
   1400370d3:	ret    
   1400370d4:	int3   
   1400370d5:	int3   
   1400370d6:	int3   
   1400370d7:	int3   
   1400370d8:	int3   
   1400370d9:	int3   
   1400370da:	int3   
   1400370db:	int3   
   1400370dc:	int3   
   1400370dd:	int3   
   1400370de:	int3   
   1400370df:	int3   
   1400370e0:	sub    rsp,0x38
   1400370e4:	cmp    r9d,0x65
   1400370e8:	je     0x14003715d
   1400370ea:	cmp    r9d,0x45
   1400370ee:	je     0x14003715d
   1400370f0:	cmp    r9d,0x66
   1400370f4:	jne    0x14003710f
   1400370f6:	mov    rax,QWORD PTR [rsp+0x70]
   1400370fb:	mov    r9d,DWORD PTR [rsp+0x60]
   140037100:	mov    QWORD PTR [rsp+0x20],rax
   140037105:	call   0x140036e80
   14003710a:	add    rsp,0x38
   14003710e:	ret    
   14003710f:	cmp    r9d,0x61
   140037113:	je     0x14003713c
   140037115:	cmp    r9d,0x41
   140037119:	je     0x14003713c
   14003711b:	mov    rax,QWORD PTR [rsp+0x70]
   140037120:	mov    r9d,DWORD PTR [rsp+0x60]
   140037125:	mov    QWORD PTR [rsp+0x28],rax
   14003712a:	mov    eax,DWORD PTR [rsp+0x68]
   14003712e:	mov    DWORD PTR [rsp+0x20],eax
   140037132:	call   0x140036f70
   140037137:	add    rsp,0x38
   14003713b:	ret    
   14003713c:	mov    rax,QWORD PTR [rsp+0x70]
   140037141:	mov    r9d,DWORD PTR [rsp+0x60]
   140037146:	mov    QWORD PTR [rsp+0x28],rax
   14003714b:	mov    eax,DWORD PTR [rsp+0x68]
   14003714f:	mov    DWORD PTR [rsp+0x20],eax
   140037153:	call   0x140036760
   140037158:	add    rsp,0x38
   14003715c:	ret    
   14003715d:	mov    rax,QWORD PTR [rsp+0x70]
   140037162:	mov    r9d,DWORD PTR [rsp+0x60]
   140037167:	mov    QWORD PTR [rsp+0x28],rax
   14003716c:	mov    eax,DWORD PTR [rsp+0x68]
   140037170:	mov    DWORD PTR [rsp+0x20],eax
   140037174:	call   0x140036640
   140037179:	add    rsp,0x38
   14003717d:	ret    
   14003717e:	int3   
   14003717f:	int3   
   140037180:	sub    rsp,0x38
   140037184:	cmp    r9d,0x65
   140037188:	je     0x1400371fa
   14003718a:	cmp    r9d,0x45
   14003718e:	je     0x1400371fa
   140037190:	cmp    r9d,0x66
   140037194:	jne    0x1400371ae
   140037196:	mov    r9d,DWORD PTR [rsp+0x60]
   14003719b:	mov    QWORD PTR [rsp+0x20],0x0
   1400371a4:	call   0x140036e80
   1400371a9:	add    rsp,0x38
   1400371ad:	ret    
   1400371ae:	cmp    r9d,0x61
   1400371b2:	je     0x1400371da
   1400371b4:	cmp    r9d,0x41
   1400371b8:	je     0x1400371da
   1400371ba:	mov    eax,DWORD PTR [rsp+0x68]
   1400371be:	mov    r9d,DWORD PTR [rsp+0x60]
   1400371c3:	mov    QWORD PTR [rsp+0x28],0x0
   1400371cc:	mov    DWORD PTR [rsp+0x20],eax
   1400371d0:	call   0x140036f70
   1400371d5:	add    rsp,0x38
   1400371d9:	ret    
   1400371da:	mov    eax,DWORD PTR [rsp+0x68]
   1400371de:	mov    r9d,DWORD PTR [rsp+0x60]
   1400371e3:	mov    QWORD PTR [rsp+0x28],0x0
   1400371ec:	mov    DWORD PTR [rsp+0x20],eax
   1400371f0:	call   0x140036760
   1400371f5:	add    rsp,0x38
   1400371f9:	ret    
   1400371fa:	mov    eax,DWORD PTR [rsp+0x68]
   1400371fe:	mov    r9d,DWORD PTR [rsp+0x60]
   140037203:	mov    QWORD PTR [rsp+0x28],0x0
   14003720c:	mov    DWORD PTR [rsp+0x20],eax
   140037210:	call   0x140036640
   140037215:	add    rsp,0x38
   140037219:	ret    
   14003721a:	int3   
   14003721b:	int3   
   14003721c:	int3   
   14003721d:	int3   
   14003721e:	int3   
   14003721f:	int3   
   140037220:	mov    QWORD PTR [rsp+0x10],rbx
   140037225:	push   rbp
   140037226:	push   rsi
   140037227:	push   rdi
   140037228:	push   r13
   14003722a:	push   r14
   14003722c:	sub    rsp,0x50
   140037230:	mov    edi,r8d
   140037233:	mov    r13,rdx
   140037236:	mov    r14,rcx
   140037239:	call   0x14002de30
   14003723e:	xor    ebx,ebx
   140037240:	cmp    QWORD PTR [rip+0x2a999],rbx        # 0x140061be0
   140037247:	mov    rbp,rax
   14003724a:	mov    DWORD PTR [rsp+0x98],ebx
   140037251:	mov    DWORD PTR [rsp+0x30],ebx
   140037255:	jne    0x14003734c
   14003725b:	lea    rcx,[rip+0x11abe]        # 0x140048d20
   140037262:	call   QWORD PTR [rip+0xc228]        # 0x140043490
   140037268:	test   rax,rax
   14003726b:	mov    rsi,rax
   14003726e:	je     0x14003745f
   140037274:	lea    rdx,[rip+0x11a95]        # 0x140048d10
   14003727b:	mov    rcx,rax
   14003727e:	call   QWORD PTR [rip+0xc22c]        # 0x1400434b0
   140037284:	test   rax,rax
   140037287:	je     0x14003745f
   14003728d:	mov    rcx,rax
   140037290:	call   0x14002dd60
   140037295:	lea    rdx,[rip+0x11a64]        # 0x140048d00
   14003729c:	mov    rcx,rsi
   14003729f:	mov    QWORD PTR [rip+0x2a93a],rax        # 0x140061be0
   1400372a6:	call   QWORD PTR [rip+0xc204]        # 0x1400434b0
   1400372ac:	mov    rcx,rax
   1400372af:	call   0x14002dd60
   1400372b4:	lea    rdx,[rip+0x11a2d]        # 0x140048ce8
   1400372bb:	mov    rcx,rsi
   1400372be:	mov    QWORD PTR [rip+0x2a923],rax        # 0x140061be8
   1400372c5:	call   QWORD PTR [rip+0xc1e5]        # 0x1400434b0
   1400372cb:	mov    rcx,rax
   1400372ce:	call   0x14002dd60
   1400372d3:	lea    rcx,[rsp+0x98]
   1400372db:	mov    QWORD PTR [rip+0x2a90e],rax        # 0x140061bf0
   1400372e2:	call   0x14002c1c0
   1400372e7:	test   eax,eax
   1400372e9:	je     0x1400372ff
   1400372eb:	xor    r9d,r9d
   1400372ee:	xor    r8d,r8d
   1400372f1:	xor    edx,edx
   1400372f3:	xor    ecx,ecx
   1400372f5:	mov    QWORD PTR [rsp+0x20],rbx
   1400372fa:	call   0x14002e860
   1400372ff:	cmp    DWORD PTR [rsp+0x98],0x2
   140037307:	jne    0x14003734c
   140037309:	lea    rdx,[rip+0x119b8]        # 0x140048cc8
   140037310:	mov    rcx,rsi
   140037313:	call   QWORD PTR [rip+0xc197]        # 0x1400434b0
   140037319:	mov    rcx,rax
   14003731c:	call   0x14002dd60
   140037321:	test   rax,rax
   140037324:	mov    QWORD PTR [rip+0x2a8d5],rax        # 0x140061c00
   14003732b:	je     0x14003734c
   14003732d:	lea    rdx,[rip+0x1197c]        # 0x140048cb0
   140037334:	mov    rcx,rsi
   140037337:	call   QWORD PTR [rip+0xc173]        # 0x1400434b0
   14003733d:	mov    rcx,rax
   140037340:	call   0x14002dd60
   140037345:	mov    QWORD PTR [rip+0x2a8ac],rax        # 0x140061bf8
   14003734c:	mov    rcx,QWORD PTR [rip+0x2a8a5]        # 0x140061bf8
   140037353:	mov    QWORD PTR [rsp+0x80],r12
   14003735b:	cmp    rcx,rbp
   14003735e:	je     0x1400373f8
   140037364:	cmp    QWORD PTR [rip+0x2a895],rbp        # 0x140061c00
   14003736b:	je     0x1400373f8
   140037371:	call   0x14002df20
   140037376:	mov    rcx,QWORD PTR [rip+0x2a883]        # 0x140061c00
   14003737d:	mov    rsi,rax
   140037380:	call   0x14002df20
   140037385:	test   rsi,rsi
   140037388:	mov    r12,rax
   14003738b:	je     0x1400373f8
   14003738d:	test   rax,rax
   140037390:	je     0x1400373f8
   140037392:	call   rsi
   140037394:	test   rax,rax
   140037397:	je     0x1400373c3
   140037399:	lea    rcx,[rsp+0x34]
   14003739e:	mov    r9d,0xc
   1400373a4:	lea    r8,[rsp+0x38]
   1400373a9:	mov    QWORD PTR [rsp+0x20],rcx
   1400373ae:	lea    edx,[r9-0xb]
   1400373b2:	mov    rcx,rax
   1400373b5:	call   r12
   1400373b8:	test   eax,eax
   1400373ba:	je     0x1400373c3
   1400373bc:	test   BYTE PTR [rsp+0x40],0x1
   1400373c1:	jne    0x1400373f8
   1400373c3:	lea    rcx,[rsp+0x30]
   1400373c8:	call   0x14002c210
   1400373cd:	test   eax,eax
   1400373cf:	je     0x1400373e5
   1400373d1:	xor    r9d,r9d
   1400373d4:	xor    r8d,r8d
   1400373d7:	xor    edx,edx
   1400373d9:	xor    ecx,ecx
   1400373db:	mov    QWORD PTR [rsp+0x20],rbx
   1400373e0:	call   0x14002e860
   1400373e5:	cmp    DWORD PTR [rsp+0x30],0x4
   1400373ea:	jb     0x1400373f2
   1400373ec:	bts    edi,0x15
   1400373f0:	jmp    0x140037436
   1400373f2:	bts    edi,0x12
   1400373f6:	jmp    0x140037436
   1400373f8:	mov    rcx,QWORD PTR [rip+0x2a7e9]        # 0x140061be8
   1400373ff:	cmp    rcx,rbp
   140037402:	je     0x140037436
   140037404:	call   0x14002df20
   140037409:	test   rax,rax
   14003740c:	je     0x140037436
   14003740e:	call   rax
   140037410:	test   rax,rax
   140037413:	mov    rbx,rax
   140037416:	je     0x140037436
   140037418:	mov    rcx,QWORD PTR [rip+0x2a7d1]        # 0x140061bf0
   14003741f:	cmp    rcx,rbp
   140037422:	je     0x140037436
   140037424:	call   0x14002df20
   140037429:	test   rax,rax
   14003742c:	je     0x140037436
   14003742e:	mov    rcx,rbx
   140037431:	call   rax
   140037433:	mov    rbx,rax
   140037436:	mov    rcx,QWORD PTR [rip+0x2a7a3]        # 0x140061be0
   14003743d:	call   0x14002df20
   140037442:	mov    r12,QWORD PTR [rsp+0x80]
   14003744a:	test   rax,rax
   14003744d:	je     0x14003745f
   14003744f:	mov    r9d,edi
   140037452:	mov    r8,r13
   140037455:	mov    rdx,r14
   140037458:	mov    rcx,rbx
   14003745b:	call   rax
   14003745d:	jmp    0x140037461
   14003745f:	xor    eax,eax
   140037461:	mov    rbx,QWORD PTR [rsp+0x88]
   140037469:	add    rsp,0x50
   14003746d:	pop    r14
   14003746f:	pop    r13
   140037471:	pop    rdi
   140037472:	pop    rsi
   140037473:	pop    rbp
   140037474:	ret    
   140037475:	int3   
   140037476:	int3   
   140037477:	int3   
   140037478:	int3   
   140037479:	int3   
   14003747a:	int3   
   14003747b:	int3   
   14003747c:	int3   
   14003747d:	int3   
   14003747e:	int3   
   14003747f:	int3   
   140037480:	sub    rsp,0x38
   140037484:	test   rcx,rcx
   140037487:	mov    r9,rcx
   14003748a:	je     0x140037499
   14003748c:	test   rdx,rdx
   14003748f:	je     0x140037499
   140037491:	test   r8,r8
   140037494:	jne    0x1400374c6
   140037496:	mov    BYTE PTR [rcx],r8b
   140037499:	call   0x14002bca0
   14003749e:	xor    r9d,r9d
   1400374a1:	xor    r8d,r8d
   1400374a4:	xor    edx,edx
   1400374a6:	xor    ecx,ecx
   1400374a8:	mov    QWORD PTR [rsp+0x20],0x0
   1400374b1:	mov    DWORD PTR [rax],0x16
   1400374b7:	call   0x14002e900
   1400374bc:	mov    eax,0x16
   1400374c1:	add    rsp,0x38
   1400374c5:	ret    
   1400374c6:	cmp    BYTE PTR [rcx],0x0
   1400374c9:	je     0x1400374d5
   1400374cb:	add    rcx,0x1
   1400374cf:	sub    rdx,0x1
   1400374d3:	jne    0x1400374c6
   1400374d5:	test   rdx,rdx
   1400374d8:	jne    0x1400374e0
   1400374da:	mov    BYTE PTR [r9],dl
   1400374dd:	jmp    0x140037499
   1400374df:	nop
   1400374e0:	movzx  eax,BYTE PTR [r8]
   1400374e4:	add    rcx,0x1
   1400374e8:	add    r8,0x1
   1400374ec:	test   al,al
   1400374ee:	mov    BYTE PTR [rcx-0x1],al
   1400374f1:	je     0x1400374f9
   1400374f3:	sub    rdx,0x1
   1400374f7:	jne    0x1400374e0
   1400374f9:	test   rdx,rdx
   1400374fc:	jne    0x14003752e
   1400374fe:	mov    BYTE PTR [r9],dl
   140037501:	call   0x14002bca0
   140037506:	xor    r9d,r9d
   140037509:	xor    r8d,r8d
   14003750c:	xor    edx,edx
   14003750e:	xor    ecx,ecx
   140037510:	mov    DWORD PTR [rax],0x22
   140037516:	mov    QWORD PTR [rsp+0x20],0x0
   14003751f:	call   0x14002e900
   140037524:	mov    eax,0x22
   140037529:	add    rsp,0x38
   14003752d:	ret    
   14003752e:	xor    eax,eax
   140037530:	add    rsp,0x38
   140037534:	ret    
   140037535:	int3   
   140037536:	int3   
   140037537:	int3   
   140037538:	int3   
   140037539:	int3   
   14003753a:	int3   
   14003753b:	int3   
   14003753c:	int3   
   14003753d:	int3   
   14003753e:	int3   
   14003753f:	int3   
   140037540:	sub    rsp,0x38
   140037544:	test   r9,r9
   140037547:	mov    r11,rdx
   14003754a:	mov    r10,rcx
   14003754d:	jne    0x140037560
   14003754f:	test   rcx,rcx
   140037552:	jne    0x140037565
   140037554:	test   rdx,rdx
   140037557:	jne    0x140037581
   140037559:	xor    eax,eax
   14003755b:	add    rsp,0x38
   14003755f:	ret    
   140037560:	test   rcx,rcx
   140037563:	je     0x140037581
   140037565:	test   rdx,rdx
   140037568:	je     0x140037581
   14003756a:	test   r9,r9
   14003756d:	jne    0x140037579
   14003756f:	mov    BYTE PTR [rcx],r9b
   140037572:	xor    eax,eax
   140037574:	add    rsp,0x38
   140037578:	ret    
   140037579:	test   r8,r8
   14003757c:	jne    0x1400375ae
   14003757e:	mov    BYTE PTR [rcx],r8b
   140037581:	call   0x14002bca0
   140037586:	xor    r9d,r9d
   140037589:	xor    r8d,r8d
   14003758c:	xor    edx,edx
   14003758e:	xor    ecx,ecx
   140037590:	mov    QWORD PTR [rsp+0x20],0x0
   140037599:	mov    DWORD PTR [rax],0x16
   14003759f:	call   0x14002e900
   1400375a4:	mov    eax,0x16
   1400375a9:	add    rsp,0x38
   1400375ad:	ret    
   1400375ae:	cmp    r9,0xffffffffffffffff
   1400375b2:	mov    rdx,rcx
   1400375b5:	mov    rcx,r11
   1400375b8:	jne    0x1400375e0
   1400375ba:	data16 xchg ax,ax
   1400375bd:	data16 xchg ax,ax
   1400375c0:	movzx  eax,BYTE PTR [r8]
   1400375c4:	add    rdx,0x1
   1400375c8:	add    r8,0x1
   1400375cc:	test   al,al
   1400375ce:	mov    BYTE PTR [rdx-0x1],al
   1400375d1:	je     0x140037607
   1400375d3:	sub    rcx,0x1
   1400375d7:	jne    0x1400375c0
   1400375d9:	jmp    0x140037607
   1400375db:	xchg   ax,ax
   1400375dd:	data16 xchg ax,ax
   1400375e0:	movzx  eax,BYTE PTR [r8]
   1400375e4:	add    rdx,0x1
   1400375e8:	add    r8,0x1
   1400375ec:	test   al,al
   1400375ee:	mov    BYTE PTR [rdx-0x1],al
   1400375f1:	je     0x1400375ff
   1400375f3:	sub    rcx,0x1
   1400375f7:	je     0x1400375ff
   1400375f9:	sub    r9,0x1
   1400375fd:	jne    0x1400375e0
   1400375ff:	test   r9,r9
   140037602:	jne    0x140037607
   140037604:	mov    BYTE PTR [rdx],r9b
   140037607:	test   rcx,rcx
   14003760a:	jne    0x140037559
   140037610:	cmp    r9,0xffffffffffffffff
   140037614:	jne    0x140037623
   140037616:	mov    BYTE PTR [r10+r11*1-0x1],cl
   14003761b:	lea    eax,[rcx+0x50]
   14003761e:	add    rsp,0x38
   140037622:	ret    
   140037623:	mov    BYTE PTR [r10],0x0
   140037627:	call   0x14002bca0
   14003762c:	xor    r9d,r9d
   14003762f:	xor    r8d,r8d
   140037632:	xor    edx,edx
   140037634:	xor    ecx,ecx
   140037636:	mov    DWORD PTR [rax],0x22
   14003763c:	mov    QWORD PTR [rsp+0x20],0x0
   140037645:	call   0x14002e900
   14003764a:	mov    eax,0x22
   14003764f:	add    rsp,0x38
   140037653:	ret    
   140037654:	int3   
   140037655:	int3   
   140037656:	int3   
   140037657:	int3   
   140037658:	int3   
   140037659:	int3   
   14003765a:	int3   
   14003765b:	int3   
   14003765c:	int3   
   14003765d:	int3   
   14003765e:	int3   
   14003765f:	int3   
   140037660:	sub    rsp,0x38
   140037664:	test   rcx,rcx
   140037667:	mov    r9,rcx
   14003766a:	je     0x140037679
   14003766c:	test   rdx,rdx
   14003766f:	je     0x140037679
   140037671:	test   r8,r8
   140037674:	jne    0x1400376b0
   140037676:	mov    BYTE PTR [rcx],r8b
   140037679:	call   0x14002bca0
   14003767e:	xor    r9d,r9d
   140037681:	xor    r8d,r8d
   140037684:	xor    edx,edx
   140037686:	xor    ecx,ecx
   140037688:	mov    QWORD PTR [rsp+0x20],0x0
   140037691:	mov    DWORD PTR [rax],0x16
   140037697:	call   0x14002e900
   14003769c:	mov    eax,0x16
   1400376a1:	add    rsp,0x38
   1400376a5:	ret    
   1400376a6:	data16 data16 xchg ax,ax
   1400376aa:	data16 xchg ax,ax
   1400376ad:	data16 xchg ax,ax
   1400376b0:	movzx  eax,BYTE PTR [r8]
   1400376b4:	add    rcx,0x1
   1400376b8:	add    r8,0x1
   1400376bc:	test   al,al
   1400376be:	mov    BYTE PTR [rcx-0x1],al
   1400376c1:	je     0x1400376c9
   1400376c3:	sub    rdx,0x1
   1400376c7:	jne    0x1400376b0
   1400376c9:	test   rdx,rdx
   1400376cc:	jne    0x1400376fe
   1400376ce:	mov    BYTE PTR [r9],dl
   1400376d1:	call   0x14002bca0
   1400376d6:	xor    r9d,r9d
   1400376d9:	xor    r8d,r8d
   1400376dc:	xor    edx,edx
   1400376de:	xor    ecx,ecx
   1400376e0:	mov    DWORD PTR [rax],0x22
   1400376e6:	mov    QWORD PTR [rsp+0x20],0x0
   1400376ef:	call   0x14002e900
   1400376f4:	mov    eax,0x22
   1400376f9:	add    rsp,0x38
   1400376fd:	ret    
   1400376fe:	xor    eax,eax
   140037700:	add    rsp,0x38
   140037704:	ret    
   140037705:	int3   
   140037706:	int3   
   140037707:	int3   
   140037708:	int3   
   140037709:	int3   
   14003770a:	int3   
   14003770b:	int3   
   14003770c:	int3   
   14003770d:	int3   
   14003770e:	int3   
   14003770f:	int3   
   140037710:	sub    rsp,0x38
   140037714:	test   ecx,ecx
   140037716:	js     0x14003773e
   140037718:	cmp    ecx,0x2
   14003771b:	jle    0x14003772d
   14003771d:	cmp    ecx,0x3
   140037720:	jne    0x14003773e
   140037722:	mov    eax,DWORD PTR [rip+0x295c0]        # 0x140060ce8
   140037728:	add    rsp,0x38
   14003772c:	ret    
   14003772d:	mov    eax,DWORD PTR [rip+0x295b5]        # 0x140060ce8
   140037733:	mov    DWORD PTR [rip+0x295af],ecx        # 0x140060ce8
   140037739:	add    rsp,0x38
   14003773d:	ret    
   14003773e:	call   0x14002bca0
   140037743:	xor    r9d,r9d
   140037746:	xor    r8d,r8d
   140037749:	xor    edx,edx
   14003774b:	xor    ecx,ecx
   14003774d:	mov    QWORD PTR [rsp+0x20],0x0
   140037756:	mov    DWORD PTR [rax],0x16
   14003775c:	call   0x14002e900
   140037761:	or     eax,0xffffffff
   140037764:	add    rsp,0x38
   140037768:	ret    
   140037769:	int3   
   14003776a:	int3   
   14003776b:	int3   
   14003776c:	int3   
   14003776d:	int3   
   14003776e:	int3   
   14003776f:	int3   
   140037770:	mov    DWORD PTR [rip+0x2b82a],0x0        # 0x140062fa4
   14003777a:	ret    
   14003777b:	int3   
   14003777c:	int3   
   14003777d:	int3   
   14003777e:	int3   
   14003777f:	int3   
   140037780:	mov    QWORD PTR [rsp+0x8],rbx
   140037785:	push   rdi
   140037786:	sub    rsp,0x20
   14003778a:	movsxd rdi,ecx
   14003778d:	mov    ebx,r8d
   140037790:	mov    QWORD PTR [rsp+0x38],rdx
   140037795:	mov    ecx,edi
   140037797:	call   0x14003b9c0
   14003779c:	cmp    rax,0xffffffffffffffff
   1400377a0:	jne    0x1400377bc
   1400377a2:	call   0x14002bca0
   1400377a7:	mov    DWORD PTR [rax],0x9
   1400377ad:	or     rax,0xffffffffffffffff
   1400377b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400377b6:	add    rsp,0x20
   1400377ba:	pop    rdi
   1400377bb:	ret    
   1400377bc:	mov    edx,DWORD PTR [rsp+0x38]
   1400377c0:	lea    r8,[rsp+0x3c]
   1400377c5:	mov    r9d,ebx
   1400377c8:	mov    rcx,rax
   1400377cb:	call   QWORD PTR [rip+0xbb9f]        # 0x140043370
   1400377d1:	cmp    eax,0xffffffff
   1400377d4:	mov    DWORD PTR [rsp+0x38],eax
   1400377d8:	jne    0x1400377fa
   1400377da:	call   QWORD PTR [rip+0xbd08]        # 0x1400434e8
   1400377e0:	test   eax,eax
   1400377e2:	je     0x1400377fa
   1400377e4:	mov    ecx,eax
   1400377e6:	call   0x14002bd00
   1400377eb:	or     rax,0xffffffffffffffff
   1400377ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400377f4:	add    rsp,0x20
   1400377f8:	pop    rdi
   1400377f9:	ret    
   1400377fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400377ff:	mov    rax,rdi
   140037802:	mov    rdx,rdi
   140037805:	and    eax,0x1f
   140037808:	sar    rdx,0x5
   14003780c:	lea    r8,[rip+0x2b7ad]        # 0x140062fc0
   140037813:	lea    rcx,[rax+rax*4]
   140037817:	mov    rax,QWORD PTR [r8+rdx*8]
   14003781b:	add    rcx,rcx
   14003781e:	and    BYTE PTR [rax+rcx*8+0x8],0xfd
   140037823:	mov    rax,QWORD PTR [rsp+0x38]
   140037828:	add    rsp,0x20
   14003782c:	pop    rdi
   14003782d:	ret    
   14003782e:	int3   
   14003782f:	int3   
   140037830:	mov    QWORD PTR [rsp+0x10],rbx
   140037835:	mov    DWORD PTR [rsp+0x8],ecx
   140037839:	push   rsi
   14003783a:	push   rdi
   14003783b:	push   r12
   14003783d:	push   r13
   14003783f:	push   r14
   140037841:	sub    rsp,0x30
   140037845:	mov    r12d,r8d
   140037848:	mov    r13,rdx
   14003784b:	movsxd rbx,ecx
   14003784e:	cmp    ebx,0xfffffffe
   140037851:	jne    0x140037870
   140037853:	call   0x14002bcd0
   140037858:	xor    edi,edi
   14003785a:	mov    DWORD PTR [rax],edi
   14003785c:	call   0x14002bca0
   140037861:	mov    DWORD PTR [rax],0x9
   140037867:	or     rax,0xffffffffffffffff
   14003786b:	jmp    0x14003794f
   140037870:	test   ecx,ecx
   140037872:	js     0x140037923
   140037878:	cmp    ebx,DWORD PTR [rip+0x2b72a]        # 0x140062fa8
   14003787e:	jae    0x140037923
   140037884:	mov    rax,rbx
   140037887:	mov    rdi,rbx
   14003788a:	sar    rdi,0x5
   14003788e:	lea    r14,[rip+0x2b72b]        # 0x140062fc0
   140037895:	and    eax,0x1f
   140037898:	lea    rsi,[rax+rax*4]
   14003789c:	add    rsi,rsi
   14003789f:	mov    rax,QWORD PTR [r14+rdi*8]
   1400378a3:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   1400378a7:	and    ecx,0x1
   1400378aa:	jne    0x1400378da
   1400378ac:	call   0x14002bcd0
   1400378b1:	xor    edi,edi
   1400378b3:	mov    DWORD PTR [rax],edi
   1400378b5:	call   0x14002bca0
   1400378ba:	mov    DWORD PTR [rax],0x9
   1400378c0:	mov    QWORD PTR [rsp+0x20],rdi
   1400378c5:	xor    r9d,r9d
   1400378c8:	xor    r8d,r8d
   1400378cb:	xor    edx,edx
   1400378cd:	xor    ecx,ecx
   1400378cf:	call   0x14002e900
   1400378d4:	or     rax,0xffffffffffffffff
   1400378d8:	jmp    0x14003794f
   1400378da:	mov    ecx,ebx
   1400378dc:	call   0x14003ba60
   1400378e1:	nop
   1400378e2:	mov    rax,QWORD PTR [r14+rdi*8]
   1400378e6:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   1400378eb:	je     0x1400378ff
   1400378ed:	mov    r8d,r12d
   1400378f0:	mov    rdx,r13
   1400378f3:	mov    ecx,ebx
   1400378f5:	call   0x140037780
   1400378fa:	mov    rdi,rax
   1400378fd:	jmp    0x140037917
   1400378ff:	call   0x14002bca0
   140037904:	mov    DWORD PTR [rax],0x9
   14003790a:	call   0x14002bcd0
   14003790f:	xor    edi,edi
   140037911:	mov    DWORD PTR [rax],edi
   140037913:	or     rdi,0xffffffffffffffff
   140037917:	mov    ecx,ebx
   140037919:	call   0x14003bb30
   14003791e:	mov    rax,rdi
   140037921:	jmp    0x14003794f
   140037923:	call   0x14002bcd0
   140037928:	xor    edi,edi
   14003792a:	mov    DWORD PTR [rax],edi
   14003792c:	call   0x14002bca0
   140037931:	mov    DWORD PTR [rax],0x9
   140037937:	mov    QWORD PTR [rsp+0x20],rdi
   14003793c:	xor    r9d,r9d
   14003793f:	xor    r8d,r8d
   140037942:	xor    edx,edx
   140037944:	xor    ecx,ecx
   140037946:	call   0x14002e900
   14003794b:	or     rax,0xffffffffffffffff
   14003794f:	mov    rbx,QWORD PTR [rsp+0x68]
   140037954:	add    rsp,0x30
   140037958:	pop    r14
   14003795a:	pop    r13
   14003795c:	pop    r12
   14003795e:	pop    rdi
   14003795f:	pop    rsi
   140037960:	ret    
   140037961:	int3   
   140037962:	int3   
   140037963:	int3   
   140037964:	int3   
   140037965:	int3   
   140037966:	int3   
   140037967:	int3   
   140037968:	int3   
   140037969:	int3   
   14003796a:	int3   
   14003796b:	int3   
   14003796c:	int3   
   14003796d:	int3   
   14003796e:	int3   
   14003796f:	int3   
   140037970:	rex push rbp
   140037972:	sub    rsp,0x30
   140037976:	mov    rbp,rdx
   140037979:	mov    ecx,DWORD PTR [rbp+0x60]
   14003797c:	call   0x14003bb30
   140037981:	add    rsp,0x30
   140037985:	pop    rbp
   140037986:	ret    
   140037987:	int3   
   140037988:	int3   
   140037989:	int3   
   14003798a:	int3   
   14003798b:	int3   
   14003798c:	int3   
   14003798d:	int3   
   14003798e:	int3   
   14003798f:	int3   
   140037990:	rex push rbx
   140037992:	push   rbp
   140037993:	push   rsi
   140037994:	push   rdi
   140037995:	push   r12
   140037997:	push   r14
   140037999:	sub    rsp,0x5f8
   1400379a0:	mov    rax,QWORD PTR [rip+0x235d9]        # 0x14005af80
   1400379a7:	xor    rax,rsp
   1400379aa:	mov    QWORD PTR [rsp+0x5e0],rax
   1400379b2:	xor    edi,edi
   1400379b4:	test   r8d,r8d
   1400379b7:	mov    ebp,r8d
   1400379ba:	mov    r12,rdx
   1400379bd:	movsxd rbx,ecx
   1400379c0:	mov    r14d,edi
   1400379c3:	mov    esi,edi
   1400379c5:	jne    0x1400379ce
   1400379c7:	xor    eax,eax
   1400379c9:	jmp    0x1400380e8
   1400379ce:	test   rdx,rdx
   1400379d1:	jne    0x140037a01
   1400379d3:	call   0x14002bcd0
   1400379d8:	mov    DWORD PTR [rax],edi
   1400379da:	call   0x14002bca0
   1400379df:	xor    r9d,r9d
   1400379e2:	xor    r8d,r8d
   1400379e5:	xor    edx,edx
   1400379e7:	xor    ecx,ecx
   1400379e9:	mov    DWORD PTR [rax],0x16
   1400379ef:	mov    QWORD PTR [rsp+0x20],rdi
   1400379f4:	call   0x14002e900
   1400379f9:	or     eax,0xffffffff
   1400379fc:	jmp    0x1400380e8
   140037a01:	mov    QWORD PTR [rsp+0x648],r13
   140037a09:	mov    rax,rbx
   140037a0c:	mov    QWORD PTR [rsp+0x5f0],r15
   140037a14:	and    eax,0x1f
   140037a17:	mov    r15,rbx
   140037a1a:	lea    rcx,[rip+0x2b59f]        # 0x140062fc0
   140037a21:	sar    r15,0x5
   140037a25:	lea    r13,[rax+rax*4]
   140037a29:	mov    rcx,QWORD PTR [rcx+r15*8]
   140037a2d:	shl    r13,0x4
   140037a31:	mov    QWORD PTR [rsp+0x50],r15
   140037a36:	movzx  edi,BYTE PTR [r13+rcx*1+0x38]
   140037a3c:	mov    QWORD PTR [rsp+0x58],r13
   140037a41:	add    dil,dil
   140037a44:	sar    dil,1
   140037a47:	cmp    dil,0x2
   140037a4b:	je     0x140037a53
   140037a4d:	cmp    dil,0x1
   140037a51:	jne    0x140037a88
   140037a53:	mov    eax,ebp
   140037a55:	not    eax
   140037a57:	test   al,0x1
   140037a59:	jne    0x140037a88
   140037a5b:	call   0x14002bcd0
   140037a60:	xor    ebx,ebx
   140037a62:	mov    DWORD PTR [rax],ebx
   140037a64:	call   0x14002bca0
   140037a69:	xor    r9d,r9d
   140037a6c:	xor    r8d,r8d
   140037a6f:	xor    edx,edx
   140037a71:	xor    ecx,ecx
   140037a73:	mov    DWORD PTR [rax],0x16
   140037a79:	mov    QWORD PTR [rsp+0x20],rbx
   140037a7e:	call   0x14002e900
   140037a83:	jmp    0x1400380d5
   140037a88:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   140037a8e:	je     0x140037a9d
   140037a90:	xor    edx,edx
   140037a92:	mov    ecx,ebx
   140037a94:	lea    r8d,[rdx+0x2]
   140037a98:	call   0x140037780
   140037a9d:	mov    ecx,ebx
   140037a9f:	call   0x1400382c0
   140037aa4:	test   eax,eax
   140037aa6:	je     0x140037d50
   140037aac:	lea    rdx,[rip+0x2b50d]        # 0x140062fc0
   140037ab3:	mov    rax,QWORD PTR [rdx+r15*8]
   140037ab7:	test   BYTE PTR [r13+rax*1+0x8],0x80
   140037abd:	je     0x140037d69
   140037ac3:	call   0x14002e210
   140037ac8:	xor    ebx,ebx
   140037aca:	lea    rdx,[rsp+0x48]
   140037acf:	mov    rcx,QWORD PTR [rax+0xc0]
   140037ad6:	lea    rax,[rip+0x2b4e3]        # 0x140062fc0
   140037add:	cmp    DWORD PTR [rcx+0x14],ebx
   140037ae0:	mov    rcx,QWORD PTR [rax+r15*8]
   140037ae4:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140037ae9:	sete   bl
   140037aec:	call   QWORD PTR [rip+0xb81e]        # 0x140043310
   140037af2:	test   eax,eax
   140037af4:	je     0x140037d62
   140037afa:	test   ebx,ebx
   140037afc:	je     0x140037b07
   140037afe:	test   dil,dil
   140037b01:	je     0x140037d59
   140037b07:	call   QWORD PTR [rip+0xb7fb]        # 0x140043308
   140037b0d:	test   ebp,ebp
   140037b0f:	mov    DWORD PTR [rsp+0x4c],esi
   140037b13:	mov    r13d,eax
   140037b16:	mov    DWORD PTR [rsp+0x48],eax
   140037b1a:	mov    rbx,r12
   140037b1d:	je     0x140037d46
   140037b23:	mov    r15d,DWORD PTR [rsp+0x48]
   140037b28:	data16 data16 xchg ax,ax
   140037b2c:	data16 data16 xchg ax,ax
   140037b30:	test   dil,dil
   140037b33:	jne    0x140037c90
   140037b39:	movsx  ecx,BYTE PTR [rbx]
   140037b3c:	xor    r15d,r15d
   140037b3f:	cmp    cl,0xa
   140037b42:	sete   r15b
   140037b46:	call   0x140038970
   140037b4b:	test   eax,eax
   140037b4d:	jne    0x140037b6f
   140037b4f:	lea    r8d,[rax+0x1]
   140037b53:	lea    rcx,[rsp+0x40]
   140037b58:	mov    rdx,rbx
   140037b5b:	call   0x140038ca0
   140037b60:	cmp    eax,0xffffffff
   140037b63:	jne    0x140037b9a
   140037b65:	mov    r15d,DWORD PTR [rsp+0x48]
   140037b6a:	jmp    0x140038057
   140037b6f:	mov    rax,rbp
   140037b72:	sub    rax,rbx
   140037b75:	add    rax,r12
   140037b78:	cmp    rax,0x1
   140037b7c:	jle    0x140037b65
   140037b7e:	lea    rcx,[rsp+0x40]
   140037b83:	mov    r8d,0x2
   140037b89:	mov    rdx,rbx
   140037b8c:	call   0x140038ca0
   140037b91:	cmp    eax,0xffffffff
   140037b94:	je     0x140037b65
   140037b96:	add    rbx,0x1
   140037b9a:	xor    eax,eax
   140037b9c:	lea    r8,[rsp+0x40]
   140037ba1:	mov    r9d,0x1
   140037ba7:	mov    QWORD PTR [rsp+0x38],rax
   140037bac:	mov    QWORD PTR [rsp+0x30],rax
   140037bb1:	lea    rax,[rsp+0x60]
   140037bb6:	xor    edx,edx
   140037bb8:	mov    ecx,r13d
   140037bbb:	mov    DWORD PTR [rsp+0x28],0x5
   140037bc3:	mov    QWORD PTR [rsp+0x20],rax
   140037bc8:	add    rbx,0x1
   140037bcc:	call   QWORD PTR [rip+0xb866]        # 0x140043438
   140037bd2:	test   eax,eax
   140037bd4:	mov    r13d,eax
   140037bd7:	je     0x140037b65
   140037bd9:	mov    rax,QWORD PTR [rsp+0x50]
   140037bde:	lea    rcx,[rip+0x2b3db]        # 0x140062fc0
   140037be5:	lea    r9,[rsp+0x4c]
   140037bea:	mov    rcx,QWORD PTR [rcx+rax*8]
   140037bee:	mov    rax,QWORD PTR [rsp+0x58]
   140037bf3:	lea    rdx,[rsp+0x60]
   140037bf8:	mov    rcx,QWORD PTR [rax+rcx*1]
   140037bfc:	mov    r8d,r13d
   140037bff:	mov    QWORD PTR [rsp+0x20],0x0
   140037c08:	call   QWORD PTR [rip+0xb76a]        # 0x140043378
   140037c0e:	test   eax,eax
   140037c10:	je     0x140037d1c
   140037c16:	mov    eax,DWORD PTR [rsp+0x4c]
   140037c1a:	add    r14d,eax
   140037c1d:	cmp    eax,r13d
   140037c20:	jl     0x140037b65
   140037c26:	test   r15d,r15d
   140037c29:	je     0x140037c89
   140037c2b:	mov    rax,QWORD PTR [rsp+0x50]
   140037c30:	mov    BYTE PTR [rsp+0x60],0xd
   140037c35:	lea    rcx,[rip+0x2b384]        # 0x140062fc0
   140037c3c:	mov    rcx,QWORD PTR [rcx+rax*8]
   140037c40:	mov    rax,QWORD PTR [rsp+0x58]
   140037c45:	lea    r9,[rsp+0x4c]
   140037c4a:	mov    rcx,QWORD PTR [rax+rcx*1]
   140037c4e:	lea    rdx,[rsp+0x60]
   140037c53:	mov    r8d,0x1
   140037c59:	mov    QWORD PTR [rsp+0x20],0x0
   140037c62:	call   QWORD PTR [rip+0xb710]        # 0x140043378
   140037c68:	test   eax,eax
   140037c6a:	je     0x140037d0e
   140037c70:	cmp    DWORD PTR [rsp+0x4c],0x1
   140037c75:	jl     0x140037b65
   140037c7b:	mov    r13d,DWORD PTR [rsp+0x48]
   140037c80:	add    esi,0x1
   140037c83:	add    r14d,0x1
   140037c87:	jmp    0x140037cf7
   140037c89:	mov    r13d,DWORD PTR [rsp+0x48]
   140037c8e:	jmp    0x140037cf7
   140037c90:	cmp    dil,0x1
   140037c94:	je     0x140037c9c
   140037c96:	cmp    dil,0x2
   140037c9a:	jne    0x140037cb3
   140037c9c:	movzx  eax,WORD PTR [rbx]
   140037c9f:	xor    r15d,r15d
   140037ca2:	cmp    ax,0xa
   140037ca6:	mov    WORD PTR [rsp+0x40],ax
   140037cab:	sete   r15b
   140037caf:	add    rbx,0x2
   140037cb3:	cmp    dil,0x1
   140037cb7:	je     0x140037cbf
   140037cb9:	cmp    dil,0x2
   140037cbd:	jne    0x140037cf7
   140037cbf:	movzx  ecx,WORD PTR [rsp+0x40]
   140037cc4:	call   0x14003bb60
   140037cc9:	cmp    ax,WORD PTR [rsp+0x40]
   140037cce:	jne    0x140037d38
   140037cd0:	add    r14d,0x1
   140037cd4:	test   r15d,r15d
   140037cd7:	je     0x140037cf7
   140037cd9:	mov    cx,0xd
   140037cdd:	mov    WORD PTR [rsp+0x40],0xd
   140037ce4:	call   0x14003bb60
   140037ce9:	cmp    ax,WORD PTR [rsp+0x40]
   140037cee:	jne    0x140037d2a
   140037cf0:	add    r14d,0x1
   140037cf4:	add    esi,0x1
   140037cf7:	mov    eax,ebx
   140037cf9:	sub    eax,r12d
   140037cfc:	cmp    eax,ebp
   140037cfe:	jb     0x140037b30
   140037d04:	mov    r15d,DWORD PTR [rsp+0x48]
   140037d09:	jmp    0x140038057
   140037d0e:	call   QWORD PTR [rip+0xb7d4]        # 0x1400434e8
   140037d14:	mov    r15d,eax
   140037d17:	jmp    0x140038057
   140037d1c:	call   QWORD PTR [rip+0xb7c6]        # 0x1400434e8
   140037d22:	mov    r15d,eax
   140037d25:	jmp    0x140038057
   140037d2a:	call   QWORD PTR [rip+0xb7b8]        # 0x1400434e8
   140037d30:	mov    r15d,eax
   140037d33:	jmp    0x140038057
   140037d38:	call   QWORD PTR [rip+0xb7aa]        # 0x1400434e8
   140037d3e:	mov    r15d,eax
   140037d41:	jmp    0x140038057
   140037d46:	mov    r15d,DWORD PTR [rsp+0x48]
   140037d4b:	jmp    0x14003806d
   140037d50:	lea    rdx,[rip+0x2b269]        # 0x140062fc0
   140037d57:	jmp    0x140037d69
   140037d59:	lea    rdx,[rip+0x2b260]        # 0x140062fc0
   140037d60:	jmp    0x140037d69
   140037d62:	lea    rdx,[rip+0x2b257]        # 0x140062fc0
   140037d69:	mov    rcx,QWORD PTR [rdx+r15*8]
   140037d6d:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   140037d73:	je     0x140038030
   140037d79:	xor    r15d,r15d
   140037d7c:	test   dil,dil
   140037d7f:	jne    0x140037e3e
   140037d85:	test   ebp,ebp
   140037d87:	mov    rdi,r12
   140037d8a:	je     0x1400380a3
   140037d90:	lea    rbx,[rsp+0x70]
   140037d95:	xor    ecx,ecx
   140037d97:	mov    eax,edi
   140037d99:	sub    eax,r12d
   140037d9c:	cmp    eax,ebp
   140037d9e:	jae    0x140037dcc
   140037da0:	movzx  eax,BYTE PTR [rdi]
   140037da3:	add    rdi,0x1
   140037da7:	cmp    al,0xa
   140037da9:	jne    0x140037db9
   140037dab:	mov    BYTE PTR [rbx],0xd
   140037dae:	add    rbx,0x1
   140037db2:	add    esi,0x1
   140037db5:	add    rcx,0x1
   140037db9:	add    rcx,0x1
   140037dbd:	mov    BYTE PTR [rbx],al
   140037dbf:	add    rbx,0x1
   140037dc3:	cmp    rcx,0x400
   140037dca:	jb     0x140037d97
   140037dcc:	lea    rax,[rsp+0x70]
   140037dd1:	mov    r8d,ebx
   140037dd4:	lea    r9,[rsp+0x44]
   140037dd9:	sub    r8d,eax
   140037ddc:	mov    rax,QWORD PTR [rsp+0x50]
   140037de1:	mov    QWORD PTR [rsp+0x20],r15
   140037de6:	mov    rcx,QWORD PTR [rdx+rax*8]
   140037dea:	lea    rdx,[rsp+0x70]
   140037def:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140037df4:	call   QWORD PTR [rip+0xb57e]        # 0x140043378
   140037dfa:	test   eax,eax
   140037dfc:	je     0x140037e30
   140037dfe:	movsxd rax,DWORD PTR [rsp+0x44]
   140037e03:	lea    rcx,[rsp+0x70]
   140037e08:	sub    rbx,rcx
   140037e0b:	add    r14d,eax
   140037e0e:	cmp    rax,rbx
   140037e11:	jl     0x140038057
   140037e17:	mov    eax,edi
   140037e19:	lea    rdx,[rip+0x2b1a0]        # 0x140062fc0
   140037e20:	sub    eax,r12d
   140037e23:	cmp    eax,ebp
   140037e25:	jb     0x140037d90
   140037e2b:	jmp    0x140038057
   140037e30:	call   QWORD PTR [rip+0xb6b2]        # 0x1400434e8
   140037e36:	mov    r15d,eax
   140037e39:	jmp    0x140038057
   140037e3e:	cmp    dil,0x2
   140037e42:	jne    0x140037f13
   140037e48:	test   ebp,ebp
   140037e4a:	mov    rdi,r12
   140037e4d:	je     0x1400380a3
   140037e53:	nop
   140037e54:	data16 data16 xchg ax,ax
   140037e58:	data16 data16 xchg ax,ax
   140037e5c:	data16 data16 xchg ax,ax
   140037e60:	lea    rbx,[rsp+0x70]
   140037e65:	xor    ecx,ecx
   140037e67:	mov    eax,edi
   140037e69:	sub    eax,r12d
   140037e6c:	cmp    eax,ebp
   140037e6e:	jae    0x140037ea1
   140037e70:	movzx  eax,WORD PTR [rdi]
   140037e73:	add    rdi,0x2
   140037e77:	cmp    ax,0xa
   140037e7b:	jne    0x140037e8d
   140037e7d:	mov    WORD PTR [rbx],0xd
   140037e82:	add    rbx,0x2
   140037e86:	add    esi,0x2
   140037e89:	add    rcx,0x2
   140037e8d:	add    rcx,0x2
   140037e91:	mov    WORD PTR [rbx],ax
   140037e94:	add    rbx,0x2
   140037e98:	cmp    rcx,0x3ff
   140037e9f:	jb     0x140037e67
   140037ea1:	lea    rax,[rsp+0x70]
   140037ea6:	mov    r8d,ebx
   140037ea9:	lea    r9,[rsp+0x44]
   140037eae:	sub    r8d,eax
   140037eb1:	mov    rax,QWORD PTR [rsp+0x50]
   140037eb6:	mov    QWORD PTR [rsp+0x20],r15
   140037ebb:	mov    rcx,QWORD PTR [rdx+rax*8]
   140037ebf:	lea    rdx,[rsp+0x70]
   140037ec4:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140037ec9:	call   QWORD PTR [rip+0xb4a9]        # 0x140043378
   140037ecf:	test   eax,eax
   140037ed1:	je     0x140037f05
   140037ed3:	movsxd rax,DWORD PTR [rsp+0x44]
   140037ed8:	lea    rcx,[rsp+0x70]
   140037edd:	sub    rbx,rcx
   140037ee0:	add    r14d,eax
   140037ee3:	cmp    rax,rbx
   140037ee6:	jl     0x140038057
   140037eec:	mov    eax,edi
   140037eee:	lea    rdx,[rip+0x2b0cb]        # 0x140062fc0
   140037ef5:	sub    eax,r12d
   140037ef8:	cmp    eax,ebp
   140037efa:	jb     0x140037e60
   140037f00:	jmp    0x140038057
   140037f05:	call   QWORD PTR [rip+0xb5dd]        # 0x1400434e8
   140037f0b:	mov    r15d,eax
   140037f0e:	jmp    0x140038057
   140037f13:	test   ebp,ebp
   140037f15:	mov    rdi,r12
   140037f18:	je     0x1400380a3
   140037f1e:	xchg   ax,ax
   140037f20:	lea    rcx,[rsp+0x480]
   140037f28:	xor    edx,edx
   140037f2a:	data16 xchg ax,ax
   140037f2d:	data16 xchg ax,ax
   140037f30:	mov    eax,edi
   140037f32:	sub    eax,r12d
   140037f35:	cmp    eax,ebp
   140037f37:	jae    0x140037f67
   140037f39:	movzx  eax,WORD PTR [rdi]
   140037f3c:	add    rdi,0x2
   140037f40:	cmp    ax,0xa
   140037f44:	jne    0x140037f53
   140037f46:	mov    WORD PTR [rcx],0xd
   140037f4b:	add    rcx,0x2
   140037f4f:	add    rdx,0x2
   140037f53:	add    rdx,0x2
   140037f57:	mov    WORD PTR [rcx],ax
   140037f5a:	add    rcx,0x2
   140037f5e:	cmp    rdx,0x152
   140037f65:	jb     0x140037f30
   140037f67:	lea    rax,[rsp+0x480]
   140037f6f:	mov    QWORD PTR [rsp+0x38],rsi
   140037f74:	mov    QWORD PTR [rsp+0x30],rsi
   140037f79:	sub    ecx,eax
   140037f7b:	lea    r8,[rsp+0x480]
   140037f83:	mov    DWORD PTR [rsp+0x28],0x2ab
   140037f8b:	mov    eax,ecx
   140037f8d:	mov    ecx,0xfde9
   140037f92:	cdq    
   140037f93:	sub    eax,edx
   140037f95:	xor    edx,edx
   140037f97:	sar    eax,1
   140037f99:	mov    r9d,eax
   140037f9c:	lea    rax,[rsp+0x70]
   140037fa1:	mov    QWORD PTR [rsp+0x20],rax
   140037fa6:	call   QWORD PTR [rip+0xb48c]        # 0x140043438
   140037fac:	test   eax,eax
   140037fae:	mov    r13d,eax
   140037fb1:	je     0x140038025
   140037fb3:	xor    ebx,ebx
   140037fb5:	data16 data16 xchg ax,ax
   140037fb9:	data16 xchg ax,ax
   140037fbc:	data16 data16 xchg ax,ax
   140037fc0:	mov    rax,QWORD PTR [rsp+0x50]
   140037fc5:	movsxd rcx,ebx
   140037fc8:	mov    r8d,r13d
   140037fcb:	lea    rdx,[rsp+rcx*1+0x70]
   140037fd0:	lea    rcx,[rip+0x2afe9]        # 0x140062fc0
   140037fd7:	lea    r9,[rsp+0x44]
   140037fdc:	mov    rcx,QWORD PTR [rcx+rax*8]
   140037fe0:	mov    rax,QWORD PTR [rsp+0x58]
   140037fe5:	sub    r8d,ebx
   140037fe8:	mov    rcx,QWORD PTR [rax+rcx*1]
   140037fec:	mov    QWORD PTR [rsp+0x20],rsi
   140037ff1:	call   QWORD PTR [rip+0xb381]        # 0x140043378
   140037ff7:	test   eax,eax
   140037ff9:	je     0x140038006
   140037ffb:	add    ebx,DWORD PTR [rsp+0x44]
   140037fff:	cmp    r13d,ebx
   140038002:	jg     0x140037fc0
   140038004:	jmp    0x140038014
   140038006:	call   QWORD PTR [rip+0xb4dc]        # 0x1400434e8
   14003800c:	cmp    r13d,ebx
   14003800f:	mov    r15d,eax
   140038012:	jg     0x140038057
   140038014:	mov    r14d,edi
   140038017:	sub    r14d,r12d
   14003801a:	cmp    r14d,ebp
   14003801d:	jb     0x140037f20
   140038023:	jmp    0x140038057
   140038025:	call   QWORD PTR [rip+0xb4bd]        # 0x1400434e8
   14003802b:	mov    r15d,eax
   14003802e:	jmp    0x140038057
   140038030:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140038035:	lea    r9,[rsp+0x44]
   14003803a:	mov    r8d,ebp
   14003803d:	mov    rdx,r12
   140038040:	mov    QWORD PTR [rsp+0x20],rsi
   140038045:	call   QWORD PTR [rip+0xb32d]        # 0x140043378
   14003804b:	test   eax,eax
   14003804d:	je     0x140038064
   14003804f:	mov    r14d,DWORD PTR [rsp+0x44]
   140038054:	xor    r15d,r15d
   140038057:	test   r14d,r14d
   14003805a:	je     0x14003806d
   14003805c:	sub    r14d,esi
   14003805f:	mov    eax,r14d
   140038062:	jmp    0x1400380d8
   140038064:	call   QWORD PTR [rip+0xb47e]        # 0x1400434e8
   14003806a:	mov    r15d,eax
   14003806d:	test   r15d,r15d
   140038070:	je     0x140038097
   140038072:	cmp    r15d,0x5
   140038076:	jne    0x14003808d
   140038078:	call   0x14002bca0
   14003807d:	mov    DWORD PTR [rax],0x9
   140038083:	call   0x14002bcd0
   140038088:	mov    DWORD PTR [rax],r15d
   14003808b:	jmp    0x1400380d5
   14003808d:	mov    ecx,r15d
   140038090:	call   0x14002bd00
   140038095:	jmp    0x1400380d5
   140038097:	mov    r13,QWORD PTR [rsp+0x58]
   14003809c:	lea    rdx,[rip+0x2af1d]        # 0x140062fc0
   1400380a3:	mov    rax,QWORD PTR [rsp+0x50]
   1400380a8:	mov    rax,QWORD PTR [rdx+rax*8]
   1400380ac:	test   BYTE PTR [r13+rax*1+0x8],0x40
   1400380b2:	je     0x1400380bf
   1400380b4:	cmp    BYTE PTR [r12],0x1a
   1400380b9:	jne    0x1400380bf
   1400380bb:	xor    eax,eax
   1400380bd:	jmp    0x1400380d8
   1400380bf:	call   0x14002bca0
   1400380c4:	mov    DWORD PTR [rax],0x1c
   1400380ca:	call   0x14002bcd0
   1400380cf:	mov    DWORD PTR [rax],0x0
   1400380d5:	or     eax,0xffffffff
   1400380d8:	mov    r13,QWORD PTR [rsp+0x648]
   1400380e0:	mov    r15,QWORD PTR [rsp+0x5f0]
   1400380e8:	mov    rcx,QWORD PTR [rsp+0x5e0]
   1400380f0:	xor    rcx,rsp
   1400380f3:	call   0x140029b40
   1400380f8:	add    rsp,0x5f8
   1400380ff:	pop    r14
   140038101:	pop    r12
   140038103:	pop    rdi
   140038104:	pop    rsi
   140038105:	pop    rbp
   140038106:	pop    rbx
   140038107:	ret    
   140038108:	int3   
   140038109:	int3   
   14003810a:	int3   
   14003810b:	int3   
   14003810c:	int3   
   14003810d:	int3   
   14003810e:	int3   
   14003810f:	int3   
   140038110:	mov    QWORD PTR [rsp+0x10],rbx
   140038115:	mov    DWORD PTR [rsp+0x8],ecx
   140038119:	push   rsi
   14003811a:	push   rdi
   14003811b:	push   r12
   14003811d:	push   r13
   14003811f:	push   r14
   140038121:	sub    rsp,0x30
   140038125:	mov    r12d,r8d
   140038128:	mov    r13,rdx
   14003812b:	movsxd rbx,ecx
   14003812e:	cmp    ebx,0xfffffffe
   140038131:	jne    0x14003814f
   140038133:	call   0x14002bcd0
   140038138:	xor    edi,edi
   14003813a:	mov    DWORD PTR [rax],edi
   14003813c:	call   0x14002bca0
   140038141:	mov    DWORD PTR [rax],0x9
   140038147:	or     eax,0xffffffff
   14003814a:	jmp    0x140038229
   14003814f:	test   ecx,ecx
   140038151:	js     0x1400381fe
   140038157:	cmp    ebx,DWORD PTR [rip+0x2ae4b]        # 0x140062fa8
   14003815d:	jae    0x1400381fe
   140038163:	mov    rax,rbx
   140038166:	mov    rdi,rbx
   140038169:	sar    rdi,0x5
   14003816d:	lea    r14,[rip+0x2ae4c]        # 0x140062fc0
   140038174:	and    eax,0x1f
   140038177:	lea    rsi,[rax+rax*4]
   14003817b:	add    rsi,rsi
   14003817e:	mov    rax,QWORD PTR [r14+rdi*8]
   140038182:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   140038186:	and    ecx,0x1
   140038189:	jne    0x1400381b8
   14003818b:	call   0x14002bcd0
   140038190:	xor    edi,edi
   140038192:	mov    DWORD PTR [rax],edi
   140038194:	call   0x14002bca0
   140038199:	mov    DWORD PTR [rax],0x9
   14003819f:	mov    QWORD PTR [rsp+0x20],rdi
   1400381a4:	xor    r9d,r9d
   1400381a7:	xor    r8d,r8d
   1400381aa:	xor    edx,edx
   1400381ac:	xor    ecx,ecx
   1400381ae:	call   0x14002e900
   1400381b3:	or     eax,0xffffffff
   1400381b6:	jmp    0x140038229
   1400381b8:	mov    ecx,ebx
   1400381ba:	call   0x14003ba60
   1400381bf:	nop
   1400381c0:	mov    rax,QWORD PTR [r14+rdi*8]
   1400381c4:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   1400381c9:	je     0x1400381dc
   1400381cb:	mov    r8d,r12d
   1400381ce:	mov    rdx,r13
   1400381d1:	mov    ecx,ebx
   1400381d3:	call   0x140037990
   1400381d8:	mov    edi,eax
   1400381da:	jmp    0x1400381f3
   1400381dc:	call   0x14002bca0
   1400381e1:	mov    DWORD PTR [rax],0x9
   1400381e7:	call   0x14002bcd0
   1400381ec:	xor    edi,edi
   1400381ee:	mov    DWORD PTR [rax],edi
   1400381f0:	or     edi,0xffffffff
   1400381f3:	mov    ecx,ebx
   1400381f5:	call   0x14003bb30
   1400381fa:	mov    eax,edi
   1400381fc:	jmp    0x140038229
   1400381fe:	call   0x14002bcd0
   140038203:	xor    edi,edi
   140038205:	mov    DWORD PTR [rax],edi
   140038207:	call   0x14002bca0
   14003820c:	mov    DWORD PTR [rax],0x9
   140038212:	mov    QWORD PTR [rsp+0x20],rdi
   140038217:	xor    r9d,r9d
   14003821a:	xor    r8d,r8d
   14003821d:	xor    edx,edx
   14003821f:	xor    ecx,ecx
   140038221:	call   0x14002e900
   140038226:	or     eax,0xffffffff
   140038229:	mov    rbx,QWORD PTR [rsp+0x68]
   14003822e:	add    rsp,0x30
   140038232:	pop    r14
   140038234:	pop    r13
   140038236:	pop    r12
   140038238:	pop    rdi
   140038239:	pop    rsi
   14003823a:	ret    
   14003823b:	int3   
   14003823c:	int3   
   14003823d:	int3   
   14003823e:	int3   
   14003823f:	int3   
   140038240:	rex push rbp
   140038242:	sub    rsp,0x30
   140038246:	mov    rbp,rdx
   140038249:	mov    ecx,DWORD PTR [rbp+0x60]
   14003824c:	call   0x14003bb30
   140038251:	add    rsp,0x30
   140038255:	pop    rbp
   140038256:	ret    
   140038257:	int3   
   140038258:	int3   
   140038259:	int3   
   14003825a:	int3   
   14003825b:	int3   
   14003825c:	int3   
   14003825d:	int3   
   14003825e:	int3   
   14003825f:	int3   
   140038260:	rex push rbx
   140038262:	sub    rsp,0x20
   140038266:	add    DWORD PTR [rip+0x29a07],0x1        # 0x140061c74
   14003826d:	mov    rbx,rcx
   140038270:	mov    ecx,0x1000
   140038275:	call   0x1400320c0
   14003827a:	test   rax,rax
   14003827d:	mov    QWORD PTR [rbx+0x10],rax
   140038281:	je     0x140038290
   140038283:	or     DWORD PTR [rbx+0x18],0x8
   140038287:	mov    DWORD PTR [rbx+0x24],0x1000
   14003828e:	jmp    0x1400382a3
   140038290:	or     DWORD PTR [rbx+0x18],0x4
   140038294:	lea    rax,[rbx+0x20]
   140038298:	mov    DWORD PTR [rbx+0x24],0x2
   14003829f:	mov    QWORD PTR [rbx+0x10],rax
   1400382a3:	mov    rax,QWORD PTR [rbx+0x10]
   1400382a7:	mov    DWORD PTR [rbx+0x8],0x0
   1400382ae:	mov    QWORD PTR [rbx],rax
   1400382b1:	add    rsp,0x20
   1400382b5:	pop    rbx
   1400382b6:	ret    
   1400382b7:	int3   
   1400382b8:	int3   
   1400382b9:	int3   
   1400382ba:	int3   
   1400382bb:	int3   
   1400382bc:	int3   
   1400382bd:	int3   
   1400382be:	int3   
   1400382bf:	int3   
   1400382c0:	sub    rsp,0x38
   1400382c4:	cmp    ecx,0xfffffffe
   1400382c7:	jne    0x1400382db
   1400382c9:	call   0x14002bca0
   1400382ce:	mov    DWORD PTR [rax],0x9
   1400382d4:	xor    eax,eax
   1400382d6:	add    rsp,0x38
   1400382da:	ret    
   1400382db:	test   ecx,ecx
   1400382dd:	js     0x140038312
   1400382df:	cmp    ecx,DWORD PTR [rip+0x2acc3]        # 0x140062fa8
   1400382e5:	jae    0x140038312
   1400382e7:	movsxd rax,ecx
   1400382ea:	lea    r8,[rip+0x2accf]        # 0x140062fc0
   1400382f1:	mov    rdx,rax
   1400382f4:	and    eax,0x1f
   1400382f7:	lea    rcx,[rax+rax*4]
   1400382fb:	sar    rdx,0x5
   1400382ff:	mov    rax,QWORD PTR [r8+rdx*8]
   140038303:	add    rcx,rcx
   140038306:	mov    al,BYTE PTR [rax+rcx*8+0x8]
   14003830a:	and    eax,0x40
   14003830d:	add    rsp,0x38
   140038311:	ret    
   140038312:	call   0x14002bca0
   140038317:	xor    r9d,r9d
   14003831a:	xor    r8d,r8d
   14003831d:	xor    edx,edx
   14003831f:	xor    ecx,ecx
   140038321:	mov    QWORD PTR [rsp+0x20],0x0
   14003832a:	mov    DWORD PTR [rax],0x9
   140038330:	call   0x14002e900
   140038335:	xor    eax,eax
   140038337:	add    rsp,0x38
   14003833b:	ret    
   14003833c:	int3   
   14003833d:	int3   
   14003833e:	int3   
   14003833f:	int3   
   140038340:	lea    rax,[rip+0x23b49]        # 0x14005be90
   140038347:	ret    
   140038348:	int3   
   140038349:	int3   
   14003834a:	int3   
   14003834b:	int3   
   14003834c:	int3   
   14003834d:	int3   
   14003834e:	int3   
   14003834f:	int3   
   140038350:	rex push rbx
   140038352:	sub    rsp,0x20
   140038356:	mov    eax,DWORD PTR [rip+0x2ac44]        # 0x140062fa0
   14003835c:	mov    ebx,0x14
   140038361:	test   eax,eax
   140038363:	jne    0x14003836c
   140038365:	mov    eax,0x200
   14003836a:	jmp    0x140038371
   14003836c:	cmp    eax,ebx
   14003836e:	cmovl  eax,ebx
   140038371:	movsxd rcx,eax
   140038374:	mov    edx,0x8
   140038379:	mov    DWORD PTR [rip+0x2ac21],eax        # 0x140062fa0
   14003837f:	call   0x140032130
   140038384:	test   rax,rax
   140038387:	mov    QWORD PTR [rip+0x29c02],rax        # 0x140061f90
   14003838e:	jne    0x1400383b8
   140038390:	lea    edx,[rax+0x8]
   140038393:	mov    rcx,rbx
   140038396:	mov    DWORD PTR [rip+0x2ac04],ebx        # 0x140062fa0
   14003839c:	call   0x140032130
   1400383a1:	test   rax,rax
   1400383a4:	mov    QWORD PTR [rip+0x29be5],rax        # 0x140061f90
   1400383ab:	jne    0x1400383b8
   1400383ad:	mov    eax,0x1a
   1400383b2:	add    rsp,0x20
   1400383b6:	pop    rbx
   1400383b7:	ret    
   1400383b8:	xor    r9d,r9d
   1400383bb:	lea    rdx,[rip+0x23ace]        # 0x14005be90
   1400383c2:	mov    rcx,r9
   1400383c5:	data16 data16 xchg ax,ax
   1400383c9:	data16 xchg ax,ax
   1400383cc:	data16 data16 xchg ax,ax
   1400383d0:	mov    QWORD PTR [rcx+rax*1],rdx
   1400383d4:	add    rcx,0x8
   1400383d8:	add    rdx,0x30
   1400383dc:	sub    rbx,0x1
   1400383e0:	je     0x1400383eb
   1400383e2:	mov    rax,QWORD PTR [rip+0x29ba7]        # 0x140061f90
   1400383e9:	jmp    0x1400383d0
   1400383eb:	lea    r8,[rip+0x23aba]        # 0x14005beac
   1400383f2:	mov    r10d,0x3
   1400383f8:	lea    r11,[rip+0x2abc1]        # 0x140062fc0
   1400383ff:	nop
   140038400:	mov    al,r9b
   140038403:	mov    rdx,r9
   140038406:	and    eax,0x1f
   140038409:	sar    rdx,0x5
   14003840d:	lea    rcx,[rax+rax*4]
   140038411:	mov    rax,QWORD PTR [r11+rdx*8]
   140038415:	add    rcx,rcx
   140038418:	mov    rdx,QWORD PTR [rax+rcx*8]
   14003841c:	cmp    rdx,0xffffffffffffffff
   140038420:	je     0x14003842d
   140038422:	cmp    rdx,0xfffffffffffffffe
   140038426:	je     0x14003842d
   140038428:	test   rdx,rdx
   14003842b:	jne    0x140038434
   14003842d:	mov    DWORD PTR [r8],0xfffffffe
   140038434:	add    r9,0x1
   140038438:	add    r8,0x30
   14003843c:	sub    r10,0x1
   140038440:	jne    0x140038400
   140038442:	xor    eax,eax
   140038444:	add    rsp,0x20
   140038448:	pop    rbx
   140038449:	ret    
   14003844a:	int3   
   14003844b:	int3   
   14003844c:	int3   
   14003844d:	int3   
   14003844e:	int3   
   14003844f:	int3   
   140038450:	sub    rsp,0x28
   140038454:	call   0x14003c010
   140038459:	cmp    BYTE PTR [rip+0x288ac],0x0        # 0x140060d0c
   140038460:	je     0x140038467
   140038462:	call   0x14003bc90
   140038467:	mov    rcx,QWORD PTR [rip+0x29b22]        # 0x140061f90
   14003846e:	add    rsp,0x28
   140038472:	jmp    0x14002a380
   140038477:	int3   
   140038478:	int3   
   140038479:	int3   
   14003847a:	int3   
   14003847b:	int3   
   14003847c:	int3   
   14003847d:	int3   
   14003847e:	int3   
   14003847f:	int3   
   140038480:	rex push rbx
   140038482:	sub    rsp,0x20
   140038486:	mov    rbx,rcx
   140038489:	lea    rcx,[rip+0x23a00]        # 0x14005be90
   140038490:	cmp    rbx,rcx
   140038493:	jb     0x1400384d5
   140038495:	lea    rax,[rip+0x23d84]        # 0x14005c220
   14003849c:	cmp    rbx,rax
   14003849f:	ja     0x1400384d5
   1400384a1:	mov    rdx,rbx
   1400384a4:	movabs rax,0x2aaaaaaaaaaaaaab
   1400384ae:	sub    rdx,rcx
   1400384b1:	imul   rdx
   1400384b4:	sar    rdx,0x3
   1400384b8:	mov    rcx,rdx
   1400384bb:	shr    rcx,0x3f
   1400384bf:	lea    ecx,[rcx+rdx*1+0x10]
   1400384c3:	call   0x140035aa0
   1400384c8:	or     DWORD PTR [rbx+0x18],0x8000
   1400384cf:	add    rsp,0x20
   1400384d3:	pop    rbx
   1400384d4:	ret    
   1400384d5:	lea    rcx,[rbx+0x30]
   1400384d9:	add    rsp,0x20
   1400384dd:	pop    rbx
   1400384de:	rex.W jmp QWORD PTR [rip+0xb05b]        # 0x140043540
   1400384e5:	int3   
   1400384e6:	int3   
   1400384e7:	int3   
   1400384e8:	int3   
   1400384e9:	int3   
   1400384ea:	int3   
   1400384eb:	int3   
   1400384ec:	int3   
   1400384ed:	int3   
   1400384ee:	int3   
   1400384ef:	int3   
   1400384f0:	rex push rbx
   1400384f2:	sub    rsp,0x20
   1400384f6:	cmp    ecx,0x14
   1400384f9:	mov    rbx,rdx
   1400384fc:	jge    0x140038513
   1400384fe:	add    ecx,0x10
   140038501:	call   0x140035aa0
   140038506:	or     DWORD PTR [rbx+0x18],0x8000
   14003850d:	add    rsp,0x20
   140038511:	pop    rbx
   140038512:	ret    
   140038513:	lea    rcx,[rdx+0x30]
   140038517:	add    rsp,0x20
   14003851b:	pop    rbx
   14003851c:	rex.W jmp QWORD PTR [rip+0xb01d]        # 0x140043540
   140038523:	int3   
   140038524:	int3   
   140038525:	int3   
   140038526:	int3   
   140038527:	int3   
   140038528:	int3   
   140038529:	int3   
   14003852a:	int3   
   14003852b:	int3   
   14003852c:	int3   
   14003852d:	int3   
   14003852e:	int3   
   14003852f:	int3   
   140038530:	lea    rdx,[rip+0x23959]        # 0x14005be90
   140038537:	cmp    rcx,rdx
   14003853a:	jb     0x140038573
   14003853c:	lea    rax,[rip+0x23cdd]        # 0x14005c220
   140038543:	cmp    rcx,rax
   140038546:	ja     0x140038573
   140038548:	and    DWORD PTR [rcx+0x18],0xffff7fff
   14003854f:	sub    rcx,rdx
   140038552:	movabs rax,0x2aaaaaaaaaaaaaab
   14003855c:	imul   rcx
   14003855f:	sar    rdx,0x3
   140038563:	mov    rcx,rdx
   140038566:	shr    rcx,0x3f
   14003856a:	lea    ecx,[rcx+rdx*1+0x10]
   14003856e:	jmp    0x140035970
   140038573:	add    rcx,0x30
   140038577:	rex.W jmp QWORD PTR [rip+0xafba]        # 0x140043538
   14003857e:	int3   
   14003857f:	int3   
   140038580:	cmp    ecx,0x14
   140038583:	jge    0x140038594
   140038585:	and    DWORD PTR [rdx+0x18],0xffff7fff
   14003858c:	add    ecx,0x10
   14003858f:	jmp    0x140035970
   140038594:	lea    rcx,[rdx+0x30]
   140038598:	rex.W jmp QWORD PTR [rip+0xaf99]        # 0x140043538
   14003859f:	int3   
   1400385a0:	sub    rsp,0x38
   1400385a4:	test   rcx,rcx
   1400385a7:	jne    0x1400385d4
   1400385a9:	call   0x14002bca0
   1400385ae:	xor    r9d,r9d
   1400385b1:	xor    r8d,r8d
   1400385b4:	xor    edx,edx
   1400385b6:	xor    ecx,ecx
   1400385b8:	mov    QWORD PTR [rsp+0x20],0x0
   1400385c1:	mov    DWORD PTR [rax],0x16
   1400385c7:	call   0x14002e900
   1400385cc:	or     eax,0xffffffff
   1400385cf:	add    rsp,0x38
   1400385d3:	ret    
   1400385d4:	mov    eax,DWORD PTR [rcx+0x1c]
   1400385d7:	add    rsp,0x38
   1400385db:	ret    
   1400385dc:	int3   
   1400385dd:	int3   
   1400385de:	int3   
   1400385df:	int3   
   1400385e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400385e5:	mov    QWORD PTR [rsp+0x20],rbp
   1400385ea:	push   rsi
   1400385eb:	push   rdi
   1400385ec:	push   r12
   1400385ee:	sub    rsp,0x40
   1400385f2:	mov    rax,QWORD PTR [rip+0x22987]        # 0x14005af80
   1400385f9:	xor    rax,rsp
   1400385fc:	mov    QWORD PTR [rsp+0x30],rax
   140038601:	test   BYTE PTR [rdx+0x18],0x40
   140038605:	mov    rdi,rdx
   140038608:	movzx  ebp,cx
   14003860b:	mov    WORD PTR [rsp+0x20],cx
   140038610:	jne    0x140038817
   140038616:	mov    rcx,rdx
   140038619:	call   0x1400385a0
   14003861e:	lea    rsi,[rip+0x22d0b]        # 0x14005b330
   140038625:	lea    r12,[rip+0x2a994]        # 0x140062fc0
   14003862c:	cmp    eax,0xffffffff
   14003862f:	je     0x14003866a
   140038631:	mov    rcx,rdi
   140038634:	call   0x1400385a0
   140038639:	cmp    eax,0xfffffffe
   14003863c:	je     0x14003866a
   14003863e:	mov    rcx,rdi
   140038641:	call   0x1400385a0
   140038646:	mov    rcx,rdi
   140038649:	movsxd rbx,eax
   14003864c:	sar    rbx,0x5
   140038650:	call   0x1400385a0
   140038655:	mov    r11d,eax
   140038658:	and    r11d,0x1f
   14003865c:	lea    rax,[r11+r11*4]
   140038660:	shl    rax,0x4
   140038664:	add    rax,QWORD PTR [r12+rbx*8]
   140038668:	jmp    0x14003866d
   14003866a:	mov    rax,rsi
   14003866d:	movzx  ecx,BYTE PTR [rax+0x38]
   140038671:	and    cl,0x7f
   140038674:	cmp    cl,0x2
   140038677:	jne    0x140038695
   140038679:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14003867d:	js     0x14003882c
   140038683:	mov    rcx,QWORD PTR [rdi]
   140038686:	mov    ax,bp
   140038689:	mov    WORD PTR [rcx],bp
   14003868c:	add    QWORD PTR [rdi],0x2
   140038690:	jmp    0x140038837
   140038695:	mov    rcx,rdi
   140038698:	call   0x1400385a0
   14003869d:	cmp    eax,0xffffffff
   1400386a0:	je     0x1400386db
   1400386a2:	mov    rcx,rdi
   1400386a5:	call   0x1400385a0
   1400386aa:	cmp    eax,0xfffffffe
   1400386ad:	je     0x1400386db
   1400386af:	mov    rcx,rdi
   1400386b2:	call   0x1400385a0
   1400386b7:	mov    rcx,rdi
   1400386ba:	movsxd rbx,eax
   1400386bd:	sar    rbx,0x5
   1400386c1:	call   0x1400385a0
   1400386c6:	mov    r11d,eax
   1400386c9:	and    r11d,0x1f
   1400386cd:	lea    rax,[r11+r11*4]
   1400386d1:	shl    rax,0x4
   1400386d5:	add    rax,QWORD PTR [r12+rbx*8]
   1400386d9:	jmp    0x1400386de
   1400386db:	mov    rax,rsi
   1400386de:	movzx  eax,BYTE PTR [rax+0x38]
   1400386e2:	and    al,0x7f
   1400386e4:	cmp    al,0x1
   1400386e6:	jne    0x14003875a
   1400386e8:	add    DWORD PTR [rdi+0x8],0xffffffff
   1400386ec:	js     0x140038703
   1400386ee:	mov    rax,QWORD PTR [rdi]
   1400386f1:	mov    BYTE PTR [rax],bpl
   1400386f4:	mov    rax,QWORD PTR [rdi]
   1400386f7:	movzx  ecx,BYTE PTR [rax]
   1400386fa:	add    rax,0x1
   1400386fe:	mov    QWORD PTR [rdi],rax
   140038701:	jmp    0x140038711
   140038703:	movsx  ecx,bpl
   140038707:	mov    rdx,rdi
   14003870a:	call   0x14002ea10
   14003870f:	mov    ecx,eax
   140038711:	cmp    ecx,0xffffffff
   140038714:	jne    0x14003871f
   140038716:	or     ax,0xffff
   14003871a:	jmp    0x140038837
   14003871f:	add    DWORD PTR [rdi+0x8],0xffffffff
   140038723:	js     0x14003873e
   140038725:	mov    rcx,QWORD PTR [rdi]
   140038728:	movzx  eax,BYTE PTR [rsp+0x21]
   14003872d:	mov    BYTE PTR [rcx],al
   14003872f:	mov    rax,QWORD PTR [rdi]
   140038732:	movzx  ecx,BYTE PTR [rax]
   140038735:	add    rax,0x1
   140038739:	mov    QWORD PTR [rdi],rax
   14003873c:	jmp    0x14003874d
   14003873e:	movsx  ecx,BYTE PTR [rsp+0x21]
   140038743:	mov    rdx,rdi
   140038746:	call   0x14002ea10
   14003874b:	mov    ecx,eax
   14003874d:	cmp    ecx,0xffffffff
   140038750:	je     0x140038716
   140038752:	mov    ax,bp
   140038755:	jmp    0x140038837
   14003875a:	mov    rcx,rdi
   14003875d:	call   0x1400385a0
   140038762:	cmp    eax,0xffffffff
   140038765:	je     0x14003879e
   140038767:	mov    rcx,rdi
   14003876a:	call   0x1400385a0
   14003876f:	cmp    eax,0xfffffffe
   140038772:	je     0x14003879e
   140038774:	mov    rcx,rdi
   140038777:	call   0x1400385a0
   14003877c:	mov    rcx,rdi
   14003877f:	movsxd rbx,eax
   140038782:	sar    rbx,0x5
   140038786:	call   0x1400385a0
   14003878b:	mov    r11d,eax
   14003878e:	and    r11d,0x1f
   140038792:	lea    rsi,[r11+r11*4]
   140038796:	shl    rsi,0x4
   14003879a:	add    rsi,QWORD PTR [r12+rbx*8]
   14003879e:	test   BYTE PTR [rsi+0x8],0x80
   1400387a2:	je     0x140038817
   1400387a4:	lea    rdx,[rsp+0x24]
   1400387a9:	lea    rcx,[rsp+0x20]
   1400387ae:	movzx  r9d,bp
   1400387b2:	mov    r8d,0x5
   1400387b8:	call   0x14003b040
   1400387bd:	test   eax,eax
   1400387bf:	jne    0x140038716
   1400387c5:	xor    esi,esi
   1400387c7:	cmp    DWORD PTR [rsp+0x20],esi
   1400387cb:	jle    0x140038752
   1400387cd:	lea    rbx,[rsp+0x24]
   1400387d2:	add    DWORD PTR [rdi+0x8],0xffffffff
   1400387d6:	js     0x1400387ef
   1400387d8:	mov    rcx,QWORD PTR [rdi]
   1400387db:	movzx  eax,BYTE PTR [rbx]
   1400387de:	mov    BYTE PTR [rcx],al
   1400387e0:	mov    rax,QWORD PTR [rdi]
   1400387e3:	movzx  ecx,BYTE PTR [rax]
   1400387e6:	add    rax,0x1
   1400387ea:	mov    QWORD PTR [rdi],rax
   1400387ed:	jmp    0x1400387fc
   1400387ef:	movsx  ecx,BYTE PTR [rbx]
   1400387f2:	mov    rdx,rdi
   1400387f5:	call   0x14002ea10
   1400387fa:	mov    ecx,eax
   1400387fc:	cmp    ecx,0xffffffff
   1400387ff:	je     0x140038716
   140038805:	add    esi,0x1
   140038808:	add    rbx,0x1
   14003880c:	cmp    esi,DWORD PTR [rsp+0x20]
   140038810:	jl     0x1400387d2
   140038812:	mov    ax,bp
   140038815:	jmp    0x140038837
   140038817:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14003881b:	js     0x14003882c
   14003881d:	mov    rax,QWORD PTR [rdi]
   140038820:	mov    WORD PTR [rax],bp
   140038823:	add    QWORD PTR [rdi],0x2
   140038827:	mov    ax,bp
   14003882a:	jmp    0x140038837
   14003882c:	mov    rdx,rdi
   14003882f:	movzx  ecx,bp
   140038832:	call   0x14003c020
   140038837:	mov    rcx,QWORD PTR [rsp+0x30]
   14003883c:	xor    rcx,rsp
   14003883f:	call   0x140029b40
   140038844:	mov    rbx,QWORD PTR [rsp+0x70]
   140038849:	mov    rbp,QWORD PTR [rsp+0x78]
   14003884e:	add    rsp,0x40
   140038852:	pop    r12
   140038854:	pop    rdi
   140038855:	pop    rsi
   140038856:	ret    
   140038857:	int3   
   140038858:	int3   
   140038859:	int3   
   14003885a:	int3   
   14003885b:	int3   
   14003885c:	int3   
   14003885d:	int3   
   14003885e:	int3   
   14003885f:	int3   
   140038860:	mov    rcx,QWORD PTR [rip+0x22719]        # 0x14005af80
   140038867:	xor    eax,eax
   140038869:	or     rcx,0x1
   14003886d:	cmp    QWORD PTR [rip+0x29404],rcx        # 0x140061c78
   140038874:	sete   al
   140038877:	ret    
   140038878:	int3   
   140038879:	int3   
   14003887a:	int3   
   14003887b:	int3   
   14003887c:	int3   
   14003887d:	int3   
   14003887e:	int3   
   14003887f:	int3   
   140038880:	rex push rbx
   140038882:	sub    rsp,0x40
   140038886:	mov    QWORD PTR [rsp+0x58],rsi
   14003888b:	mov    QWORD PTR [rsp+0x60],rdi
   140038890:	xor    dil,dil
   140038893:	test   rdx,rdx
   140038896:	mov    QWORD PTR [rsp+0x68],r12
   14003889b:	mov    BYTE PTR [rsp+0x38],dil
   1400388a0:	mov    r12d,ecx
   1400388a3:	jne    0x140038919
   1400388a5:	mov    QWORD PTR [rsp+0x50],rbp
   1400388aa:	call   0x14002e210
   1400388af:	mov    rsi,QWORD PTR [rax+0xc0]
   1400388b6:	mov    rbp,QWORD PTR [rax+0xb8]
   1400388bd:	mov    rbx,rax
   1400388c0:	cmp    rsi,QWORD PTR [rip+0x23189]        # 0x14005ba50
   1400388c7:	je     0x1400388df
   1400388c9:	mov    edx,DWORD PTR [rax+0xc8]
   1400388cf:	test   DWORD PTR [rip+0x23003],edx        # 0x14005b8d8
   1400388d5:	jne    0x1400388df
   1400388d7:	call   0x140031a10
   1400388dc:	mov    rsi,rax
   1400388df:	cmp    rbp,QWORD PTR [rip+0x22eea]        # 0x14005b7d0
   1400388e6:	mov    rbp,QWORD PTR [rsp+0x50]
   1400388eb:	je     0x140038900
   1400388ed:	mov    ecx,DWORD PTR [rbx+0xc8]
   1400388f3:	test   DWORD PTR [rip+0x22fdf],ecx        # 0x14005b8d8
   1400388f9:	jne    0x140038900
   1400388fb:	call   0x140030ec0
   140038900:	mov    ecx,DWORD PTR [rbx+0xc8]
   140038906:	test   cl,0x2
   140038909:	jne    0x14003893b
   14003890b:	or     ecx,0x2
   14003890e:	mov    dil,0x1
   140038911:	mov    DWORD PTR [rbx+0xc8],ecx
   140038917:	jmp    0x14003893b
   140038919:	mov    rax,QWORD PTR [rdx]
   14003891c:	lea    rcx,[rsp+0x20]
   140038921:	mov    QWORD PTR [rcx],rax
   140038924:	mov    rax,QWORD PTR [rdx+0x8]
   140038928:	mov    QWORD PTR [rcx+0x8],rax
   14003892c:	movzx  edi,BYTE PTR [rsp+0x38]
   140038931:	mov    rbx,QWORD PTR [rsp+0x30]
   140038936:	mov    rsi,QWORD PTR [rsp+0x20]
   14003893b:	mov    rax,QWORD PTR [rsi+0x140]
   140038942:	mov    rsi,QWORD PTR [rsp+0x58]
   140038947:	movzx  ecx,r12b
   14003894b:	mov    ax,WORD PTR [rax+rcx*2]
   14003894f:	mov    r12,QWORD PTR [rsp+0x68]
   140038954:	and    eax,0x8000
   140038959:	test   dil,dil
   14003895c:	mov    rdi,QWORD PTR [rsp+0x60]
   140038961:	je     0x14003896a
   140038963:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003896a:	add    rsp,0x40
   14003896e:	pop    rbx
   14003896f:	ret    
   140038970:	mov    QWORD PTR [rsp+0x8],rbx
   140038975:	mov    QWORD PTR [rsp+0x10],rbp
   14003897a:	mov    QWORD PTR [rsp+0x18],rsi
   14003897f:	mov    QWORD PTR [rsp+0x20],rdi
   140038984:	push   r12
   140038986:	sub    rsp,0x20
   14003898a:	mov    r12d,ecx
   14003898d:	xor    bpl,bpl
   140038990:	call   0x14002e210
   140038995:	mov    rsi,QWORD PTR [rax+0xc0]
   14003899c:	mov    rdi,QWORD PTR [rax+0xb8]
   1400389a3:	mov    rbx,rax
   1400389a6:	cmp    rsi,QWORD PTR [rip+0x230a3]        # 0x14005ba50
   1400389ad:	je     0x1400389c5
   1400389af:	mov    edx,DWORD PTR [rax+0xc8]
   1400389b5:	test   DWORD PTR [rip+0x22f1d],edx        # 0x14005b8d8
   1400389bb:	jne    0x1400389c5
   1400389bd:	call   0x140031a10
   1400389c2:	mov    rsi,rax
   1400389c5:	cmp    rdi,QWORD PTR [rip+0x22e04]        # 0x14005b7d0
   1400389cc:	je     0x1400389e1
   1400389ce:	mov    ecx,DWORD PTR [rbx+0xc8]
   1400389d4:	test   DWORD PTR [rip+0x22efe],ecx        # 0x14005b8d8
   1400389da:	jne    0x1400389e1
   1400389dc:	call   0x140030ec0
   1400389e1:	mov    ecx,DWORD PTR [rbx+0xc8]
   1400389e7:	test   cl,0x2
   1400389ea:	jne    0x1400389f8
   1400389ec:	or     ecx,0x2
   1400389ef:	mov    bpl,0x1
   1400389f2:	mov    DWORD PTR [rbx+0xc8],ecx
   1400389f8:	mov    rax,QWORD PTR [rsi+0x140]
   1400389ff:	movzx  ecx,r12b
   140038a03:	mov    ax,WORD PTR [rax+rcx*2]
   140038a07:	and    eax,0x8000
   140038a0c:	test   bpl,bpl
   140038a0f:	je     0x140038a18
   140038a11:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140038a18:	mov    rbx,QWORD PTR [rsp+0x30]
   140038a1d:	mov    rbp,QWORD PTR [rsp+0x38]
   140038a22:	mov    rsi,QWORD PTR [rsp+0x40]
   140038a27:	mov    rdi,QWORD PTR [rsp+0x48]
   140038a2c:	add    rsp,0x20
   140038a30:	pop    r12
   140038a32:	ret    
   140038a33:	int3   
   140038a34:	int3   
   140038a35:	int3   
   140038a36:	int3   
   140038a37:	int3   
   140038a38:	int3   
   140038a39:	int3   
   140038a3a:	int3   
   140038a3b:	int3   
   140038a3c:	int3   
   140038a3d:	int3   
   140038a3e:	int3   
   140038a3f:	int3   
   140038a40:	mov    QWORD PTR [rsp+0x8],rbx
   140038a45:	mov    QWORD PTR [rsp+0x10],rsi
   140038a4a:	push   rdi
   140038a4b:	sub    rsp,0x50
   140038a4f:	test   rdx,rdx
   140038a52:	mov    rsi,r8
   140038a55:	mov    rdi,rdx
   140038a58:	mov    rbx,rcx
   140038a5b:	je     0x140038a71
   140038a5d:	test   r8,r8
   140038a60:	je     0x140038a71
   140038a62:	cmp    BYTE PTR [rdx],0x0
   140038a65:	jne    0x140038a83
   140038a67:	test   rcx,rcx
   140038a6a:	je     0x140038a71
   140038a6c:	mov    WORD PTR [rcx],0x0
   140038a71:	xor    eax,eax
   140038a73:	mov    rbx,QWORD PTR [rsp+0x60]
   140038a78:	mov    rsi,QWORD PTR [rsp+0x68]
   140038a7d:	add    rsp,0x50
   140038a81:	pop    rdi
   140038a82:	ret    
   140038a83:	test   r9,r9
   140038a86:	mov    BYTE PTR [rsp+0x48],0x0
   140038a8b:	jne    0x140038b22
   140038a91:	call   0x14002e210
   140038a96:	mov    QWORD PTR [rsp+0x40],rax
   140038a9b:	mov    r11,rax
   140038a9e:	mov    rcx,QWORD PTR [rax+0xc0]
   140038aa5:	cmp    rcx,QWORD PTR [rip+0x22fa4]        # 0x14005ba50
   140038aac:	mov    QWORD PTR [rsp+0x30],rcx
   140038ab1:	mov    rax,QWORD PTR [rax+0xb8]
   140038ab8:	mov    QWORD PTR [rsp+0x38],rax
   140038abd:	je     0x140038ae2
   140038abf:	mov    ecx,DWORD PTR [r11+0xc8]
   140038ac6:	test   DWORD PTR [rip+0x22e0c],ecx        # 0x14005b8d8
   140038acc:	jne    0x140038ae2
   140038ace:	call   0x140031a10
   140038ad3:	mov    r11,QWORD PTR [rsp+0x40]
   140038ad8:	mov    QWORD PTR [rsp+0x30],rax
   140038add:	mov    rax,QWORD PTR [rsp+0x38]
   140038ae2:	cmp    rax,QWORD PTR [rip+0x22ce7]        # 0x14005b7d0
   140038ae9:	je     0x140038b09
   140038aeb:	mov    eax,DWORD PTR [r11+0xc8]
   140038af2:	test   DWORD PTR [rip+0x22de0],eax        # 0x14005b8d8
   140038af8:	jne    0x140038b09
   140038afa:	call   0x140030ec0
   140038aff:	mov    r11,QWORD PTR [rsp+0x40]
   140038b04:	mov    QWORD PTR [rsp+0x38],rax
   140038b09:	test   BYTE PTR [r11+0xc8],0x2
   140038b11:	jne    0x140038b3a
   140038b13:	or     DWORD PTR [r11+0xc8],0x2
   140038b1b:	mov    BYTE PTR [rsp+0x48],0x1
   140038b20:	jmp    0x140038b35
   140038b22:	mov    rax,QWORD PTR [r9]
   140038b25:	lea    rcx,[rsp+0x30]
   140038b2a:	mov    QWORD PTR [rcx],rax
   140038b2d:	mov    rax,QWORD PTR [r9+0x8]
   140038b31:	mov    QWORD PTR [rcx+0x8],rax
   140038b35:	mov    r11,QWORD PTR [rsp+0x40]
   140038b3a:	mov    rax,QWORD PTR [rsp+0x30]
   140038b3f:	cmp    DWORD PTR [rax+0x14],0x0
   140038b43:	jne    0x140038b74
   140038b45:	test   rbx,rbx
   140038b48:	je     0x140038b50
   140038b4a:	movzx  eax,BYTE PTR [rdi]
   140038b4d:	mov    WORD PTR [rbx],ax
   140038b50:	cmp    BYTE PTR [rsp+0x48],0x0
   140038b55:	je     0x140038b5f
   140038b57:	and    DWORD PTR [r11+0xc8],0xfffffffd
   140038b5f:	mov    eax,0x1
   140038b64:	mov    rbx,QWORD PTR [rsp+0x60]
   140038b69:	mov    rsi,QWORD PTR [rsp+0x68]
   140038b6e:	add    rsp,0x50
   140038b72:	pop    rdi
   140038b73:	ret    
   140038b74:	movzx  ecx,BYTE PTR [rdi]
   140038b77:	lea    rdx,[rsp+0x30]
   140038b7c:	call   0x140038880
   140038b81:	test   eax,eax
   140038b83:	je     0x140038c3b
   140038b89:	mov    rcx,QWORD PTR [rsp+0x30]
   140038b8e:	mov    r9d,DWORD PTR [rcx+0x10c]
   140038b95:	cmp    r9d,0x1
   140038b99:	jle    0x140038bcb
   140038b9b:	cmp    esi,r9d
   140038b9e:	jl     0x140038bcb
   140038ba0:	mov    ecx,DWORD PTR [rcx+0x4]
   140038ba3:	xor    eax,eax
   140038ba5:	test   rbx,rbx
   140038ba8:	setne  al
   140038bab:	mov    r8,rdi
   140038bae:	mov    edx,0x9
   140038bb3:	mov    DWORD PTR [rsp+0x28],eax
   140038bb7:	mov    QWORD PTR [rsp+0x20],rbx
   140038bbc:	call   QWORD PTR [rip+0xa906]        # 0x1400434c8
   140038bc2:	test   eax,eax
   140038bc4:	mov    rcx,QWORD PTR [rsp+0x30]
   140038bc9:	jne    0x140038bdd
   140038bcb:	movsxd rax,DWORD PTR [rcx+0x10c]
   140038bd2:	cmp    rsi,rax
   140038bd5:	jb     0x140038c0a
   140038bd7:	cmp    BYTE PTR [rdi+0x1],0x0
   140038bdb:	je     0x140038c0a
   140038bdd:	cmp    BYTE PTR [rsp+0x48],0x0
   140038be2:	mov    eax,DWORD PTR [rcx+0x10c]
   140038be8:	je     0x140038a73
   140038bee:	mov    rcx,QWORD PTR [rsp+0x40]
   140038bf3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140038bfa:	mov    rbx,QWORD PTR [rsp+0x60]
   140038bff:	mov    rsi,QWORD PTR [rsp+0x68]
   140038c04:	add    rsp,0x50
   140038c08:	pop    rdi
   140038c09:	ret    
   140038c0a:	call   0x14002bca0
   140038c0f:	mov    DWORD PTR [rax],0x2a
   140038c15:	cmp    BYTE PTR [rsp+0x48],0x0
   140038c1a:	je     0x140038c28
   140038c1c:	mov    rax,QWORD PTR [rsp+0x40]
   140038c21:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140038c28:	or     eax,0xffffffff
   140038c2b:	mov    rbx,QWORD PTR [rsp+0x60]
   140038c30:	mov    rsi,QWORD PTR [rsp+0x68]
   140038c35:	add    rsp,0x50
   140038c39:	pop    rdi
   140038c3a:	ret    
   140038c3b:	xor    eax,eax
   140038c3d:	mov    r9d,0x1
   140038c43:	test   rbx,rbx
   140038c46:	setne  al
   140038c49:	lea    edx,[r9+0x8]
   140038c4d:	mov    r8,rdi
   140038c50:	mov    DWORD PTR [rsp+0x28],eax
   140038c54:	mov    rax,QWORD PTR [rsp+0x30]
   140038c59:	mov    QWORD PTR [rsp+0x20],rbx
   140038c5e:	mov    ecx,DWORD PTR [rax+0x4]
   140038c61:	call   QWORD PTR [rip+0xa861]        # 0x1400434c8
   140038c67:	test   eax,eax
   140038c69:	je     0x140038c0a
   140038c6b:	cmp    BYTE PTR [rsp+0x48],0x0
   140038c70:	je     0x140038c7e
   140038c72:	mov    rax,QWORD PTR [rsp+0x40]
   140038c77:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140038c7e:	mov    rbx,QWORD PTR [rsp+0x60]
   140038c83:	mov    rsi,QWORD PTR [rsp+0x68]
   140038c88:	mov    eax,0x1
   140038c8d:	add    rsp,0x50
   140038c91:	pop    rdi
   140038c92:	ret    
   140038c93:	int3   
   140038c94:	int3   
   140038c95:	int3   
   140038c96:	int3   
   140038c97:	int3   
   140038c98:	int3   
   140038c99:	int3   
   140038c9a:	int3   
   140038c9b:	int3   
   140038c9c:	int3   
   140038c9d:	int3   
   140038c9e:	int3   
   140038c9f:	int3   
   140038ca0:	xor    r9d,r9d
   140038ca3:	jmp    0x140038a40
   140038ca8:	int3   
   140038ca9:	int3   
   140038caa:	int3   
   140038cab:	int3   
   140038cac:	int3   
   140038cad:	int3   
   140038cae:	int3   
   140038caf:	int3   
   140038cb0:	rex push rbp
   140038cb2:	push   r12
   140038cb4:	push   r13
   140038cb6:	push   r14
   140038cb8:	push   r15
   140038cba:	sub    rsp,0x60
   140038cbe:	lea    rbp,[rsp+0x40]
   140038cc3:	mov    QWORD PTR [rbp+0x50],rbx
   140038cc7:	mov    QWORD PTR [rbp+0x58],rsi
   140038ccb:	mov    QWORD PTR [rbp+0x60],rdi
   140038ccf:	mov    rax,QWORD PTR [rip+0x222aa]        # 0x14005af80
   140038cd6:	xor    rax,rbp
   140038cd9:	mov    QWORD PTR [rbp+0x18],rax
   140038cdd:	mov    r10d,DWORD PTR [rip+0x28f9c]        # 0x140061c80
   140038ce4:	xor    ebx,ebx
   140038ce6:	mov    r14,r9
   140038ce9:	test   r10d,r10d
   140038cec:	mov    QWORD PTR [rbp+0x8],r9
   140038cf0:	mov    DWORD PTR [rbp+0x0],r8d
   140038cf4:	mov    r15d,edx
   140038cf7:	mov    DWORD PTR [rbp+0x10],edx
   140038cfa:	mov    rdi,rcx
   140038cfd:	jne    0x140038d4a
   140038cff:	lea    r9d,[rbx+0x1]
   140038d03:	lea    r8,[rip+0xfefa]        # 0x140048c04
   140038d0a:	mov    edx,0x100
   140038d0f:	xor    ecx,ecx
   140038d11:	mov    DWORD PTR [rsp+0x28],ebx
   140038d15:	mov    QWORD PTR [rsp+0x20],rbx
   140038d1a:	call   QWORD PTR [rip+0xa5d8]        # 0x1400432f8
   140038d20:	test   eax,eax
   140038d22:	je     0x140038d2a
   140038d24:	lea    r10d,[rbx+0x1]
   140038d28:	jmp    0x140038d43
   140038d2a:	call   QWORD PTR [rip+0xa7b8]        # 0x1400434e8
   140038d30:	mov    r10d,DWORD PTR [rip+0x28f49]        # 0x140061c80
   140038d37:	mov    ecx,0x2
   140038d3c:	cmp    eax,0x78
   140038d3f:	cmove  r10d,ecx
   140038d43:	mov    DWORD PTR [rip+0x28f36],r10d        # 0x140061c80
   140038d4a:	mov    r9d,DWORD PTR [rbp+0x70]
   140038d4e:	test   r9d,r9d
   140038d51:	jle    0x140038d8f
   140038d53:	mov    eax,r9d
   140038d56:	mov    rcx,r14
   140038d59:	data16 xchg ax,ax
   140038d5c:	data16 data16 xchg ax,ax
   140038d60:	sub    eax,0x1
   140038d63:	cmp    BYTE PTR [rcx],bl
   140038d65:	je     0x140038d72
   140038d67:	add    rcx,0x1
   140038d6b:	test   eax,eax
   140038d6d:	jne    0x140038d60
   140038d6f:	or     eax,0xffffffff
   140038d72:	mov    ecx,r9d
   140038d75:	sub    ecx,eax
   140038d77:	sub    ecx,0x1
   140038d7a:	cmp    ecx,r9d
   140038d7d:	jge    0x140038d89
   140038d7f:	lea    r9d,[rcx+0x1]
   140038d83:	mov    DWORD PTR [rbp+0x70],r9d
   140038d87:	jmp    0x140038d8f
   140038d89:	mov    r9d,ecx
   140038d8c:	mov    DWORD PTR [rbp+0x70],ecx
   140038d8f:	cmp    r10d,0x2
   140038d93:	je     0x14003900a
   140038d99:	test   r10d,r10d
   140038d9c:	je     0x14003900a
   140038da2:	cmp    r10d,0x1
   140038da6:	jne    0x14003903d
   140038dac:	mov    r13d,DWORD PTR [rbp+0x88]
   140038db3:	mov    r12d,ebx
   140038db6:	test   r13d,r13d
   140038db9:	jne    0x140038dc2
   140038dbb:	mov    rax,QWORD PTR [rdi]
   140038dbe:	mov    r13d,DWORD PTR [rax+0x4]
   140038dc2:	cmp    DWORD PTR [rbp+0x90],ebx
   140038dc8:	mov    edx,0x1
   140038dcd:	mov    eax,0x9
   140038dd2:	mov    r8,r14
   140038dd5:	mov    ecx,r13d
   140038dd8:	cmovne edx,eax
   140038ddb:	mov    DWORD PTR [rsp+0x28],ebx
   140038ddf:	mov    QWORD PTR [rsp+0x20],rbx
   140038de4:	call   QWORD PTR [rip+0xa6de]        # 0x1400434c8
   140038dea:	test   eax,eax
   140038dec:	movsxd r14,eax
   140038def:	je     0x14003903d
   140038df5:	jle    0x14003903d
   140038dfb:	xor    edx,edx
   140038dfd:	mov    rax,0xffffffffffffffe0
   140038e04:	div    r14
   140038e07:	cmp    rax,0x2
   140038e0b:	jb     0x14003903d
   140038e11:	lea    rcx,[r14+r14*1+0x10]
   140038e16:	movabs rdi,0xffffffffffffff0
   140038e20:	cmp    rcx,0x400
   140038e27:	ja     0x140038e57
   140038e29:	lea    rax,[rcx+0xf]
   140038e2d:	cmp    rax,rcx
   140038e30:	ja     0x140038e35
   140038e32:	mov    rax,rdi
   140038e35:	and    rax,0xfffffffffffffff0
   140038e39:	call   0x140041ad0
   140038e3e:	sub    rsp,rax
   140038e41:	lea    rsi,[rsp+0x40]
   140038e46:	test   rsi,rsi
   140038e49:	je     0x14003903d
   140038e4f:	mov    DWORD PTR [rsi],0xcccc
   140038e55:	jmp    0x140038e6a
   140038e57:	call   0x14002a110
   140038e5c:	test   rax,rax
   140038e5f:	mov    rsi,rax
   140038e62:	je     0x140038e6e
   140038e64:	mov    DWORD PTR [rax],0xdddd
   140038e6a:	add    rsi,0x10
   140038e6e:	test   rsi,rsi
   140038e71:	je     0x14003903d
   140038e77:	mov    r9d,DWORD PTR [rbp+0x70]
   140038e7b:	mov    r8,QWORD PTR [rbp+0x8]
   140038e7f:	mov    edx,0x1
   140038e84:	mov    ecx,r13d
   140038e87:	mov    DWORD PTR [rsp+0x28],r14d
   140038e8c:	mov    QWORD PTR [rsp+0x20],rsi
   140038e91:	call   QWORD PTR [rip+0xa631]        # 0x1400434c8
   140038e97:	test   eax,eax
   140038e99:	je     0x140038ff0
   140038e9f:	mov    edx,DWORD PTR [rbp+0x0]
   140038ea2:	mov    r9d,r14d
   140038ea5:	mov    r8,rsi
   140038ea8:	mov    ecx,r15d
   140038eab:	mov    DWORD PTR [rsp+0x28],ebx
   140038eaf:	mov    QWORD PTR [rsp+0x20],rbx
   140038eb4:	call   QWORD PTR [rip+0xa43e]        # 0x1400432f8
   140038eba:	test   eax,eax
   140038ebc:	movsxd r12,eax
   140038ebf:	je     0x140038ff0
   140038ec5:	mov    ecx,DWORD PTR [rbp+0x0]
   140038ec8:	bt     ecx,0xa
   140038ecc:	jae    0x140038f08
   140038ece:	mov    eax,DWORD PTR [rbp+0x80]
   140038ed4:	test   eax,eax
   140038ed6:	je     0x140038ff0
   140038edc:	cmp    r12d,eax
   140038edf:	jg     0x140038ff0
   140038ee5:	mov    DWORD PTR [rsp+0x28],eax
   140038ee9:	mov    rax,QWORD PTR [rbp+0x78]
   140038eed:	mov    edx,ecx
   140038eef:	mov    r9d,r14d
   140038ef2:	mov    r8,rsi
   140038ef5:	mov    ecx,r15d
   140038ef8:	mov    QWORD PTR [rsp+0x20],rax
   140038efd:	call   QWORD PTR [rip+0xa3f5]        # 0x1400432f8
   140038f03:	jmp    0x140038ff0
   140038f08:	test   eax,eax
   140038f0a:	jle    0x140038ff0
   140038f10:	xor    edx,edx
   140038f12:	mov    rax,0xffffffffffffffe0
   140038f19:	div    r12
   140038f1c:	cmp    rax,0x2
   140038f20:	jb     0x140038ff0
   140038f26:	lea    rcx,[r12+r12*1+0x10]
   140038f2b:	cmp    rcx,0x400
   140038f32:	ja     0x140038f62
   140038f34:	lea    rax,[rcx+0xf]
   140038f38:	cmp    rax,rcx
   140038f3b:	ja     0x140038f40
   140038f3d:	mov    rax,rdi
   140038f40:	and    rax,0xfffffffffffffff0
   140038f44:	call   0x140041ad0
   140038f49:	sub    rsp,rax
   140038f4c:	lea    rdi,[rsp+0x40]
   140038f51:	test   rdi,rdi
   140038f54:	je     0x140038ff0
   140038f5a:	mov    DWORD PTR [rdi],0xcccc
   140038f60:	jmp    0x140038f75
   140038f62:	call   0x14002a110
   140038f67:	test   rax,rax
   140038f6a:	mov    rdi,rax
   140038f6d:	je     0x140038f79
   140038f6f:	mov    DWORD PTR [rax],0xdddd
   140038f75:	add    rdi,0x10
   140038f79:	test   rdi,rdi
   140038f7c:	je     0x140038ff0
   140038f7e:	mov    edx,DWORD PTR [rbp+0x0]
   140038f81:	mov    r9d,r14d
   140038f84:	mov    r8,rsi
   140038f87:	mov    ecx,r15d
   140038f8a:	mov    DWORD PTR [rsp+0x28],r12d
   140038f8f:	mov    QWORD PTR [rsp+0x20],rdi
   140038f94:	call   QWORD PTR [rip+0xa35e]        # 0x1400432f8
   140038f9a:	test   eax,eax
   140038f9c:	je     0x140038fde
   140038f9e:	mov    eax,DWORD PTR [rbp+0x80]
   140038fa4:	xor    edx,edx
   140038fa6:	mov    QWORD PTR [rsp+0x38],rbx
   140038fab:	test   eax,eax
   140038fad:	mov    r9d,r12d
   140038fb0:	mov    r8,rdi
   140038fb3:	mov    ecx,r13d
   140038fb6:	mov    QWORD PTR [rsp+0x30],rbx
   140038fbb:	jne    0x140038fc8
   140038fbd:	mov    DWORD PTR [rsp+0x28],ebx
   140038fc1:	mov    QWORD PTR [rsp+0x20],rbx
   140038fc6:	jmp    0x140038fd5
   140038fc8:	mov    DWORD PTR [rsp+0x28],eax
   140038fcc:	mov    rax,QWORD PTR [rbp+0x78]
   140038fd0:	mov    QWORD PTR [rsp+0x20],rax
   140038fd5:	call   QWORD PTR [rip+0xa45d]        # 0x140043438
   140038fdb:	mov    r12d,eax
   140038fde:	cmp    DWORD PTR [rdi-0x10],0xdddd
   140038fe5:	lea    rcx,[rdi-0x10]
   140038fe9:	jne    0x140038ff0
   140038feb:	call   0x14002a380
   140038ff0:	cmp    DWORD PTR [rsi-0x10],0xdddd
   140038ff7:	lea    rcx,[rsi-0x10]
   140038ffb:	jne    0x140039002
   140038ffd:	call   0x14002a380
   140039002:	mov    eax,r12d
   140039005:	jmp    0x1400391c6
   14003900a:	test   r15d,r15d
   14003900d:	mov    r12,rbx
   140039010:	jne    0x14003901d
   140039012:	mov    rax,QWORD PTR [rdi]
   140039015:	mov    r15d,DWORD PTR [rax+0x14]
   140039019:	mov    DWORD PTR [rbp+0x10],r15d
   14003901d:	mov    esi,DWORD PTR [rbp+0x88]
   140039023:	test   esi,esi
   140039025:	jne    0x14003902d
   140039027:	mov    rax,QWORD PTR [rdi]
   14003902a:	mov    esi,DWORD PTR [rax+0x4]
   14003902d:	mov    ecx,r15d
   140039030:	call   0x140039ab0
   140039035:	cmp    eax,0xffffffff
   140039038:	mov    r13d,eax
   14003903b:	jne    0x140039044
   14003903d:	xor    eax,eax
   14003903f:	jmp    0x1400391c6
   140039044:	cmp    eax,esi
   140039046:	mov    r8,r14
   140039049:	je     0x14003919f
   14003904f:	lea    r9,[rbp+0x70]
   140039053:	mov    edx,eax
   140039055:	mov    ecx,esi
   140039057:	mov    DWORD PTR [rsp+0x28],ebx
   14003905b:	mov    QWORD PTR [rsp+0x20],rbx
   140039060:	call   0x140039b20
   140039065:	test   rax,rax
   140039068:	mov    r14,rax
   14003906b:	je     0x14003903d
   14003906d:	mov    r9d,DWORD PTR [rbp+0x70]
   140039071:	mov    edx,DWORD PTR [rbp+0x0]
   140039074:	mov    r8,rax
   140039077:	mov    ecx,r15d
   14003907a:	mov    DWORD PTR [rsp+0x28],ebx
   14003907e:	mov    QWORD PTR [rsp+0x20],rbx
   140039083:	call   QWORD PTR [rip+0xa267]        # 0x1400432f0
   140039089:	mov    r15,QWORD PTR [rbp+0x78]
   14003908d:	test   eax,eax
   14003908f:	movsxd r9,eax
   140039092:	mov    DWORD PTR [rbp+0x8],r9d
   140039096:	jle    0x140039183
   14003909c:	cmp    r9,0xffffffffffffffe0
   1400390a0:	mov    rcx,r9
   1400390a3:	ja     0x140039183
   1400390a9:	add    rcx,0x10
   1400390ad:	cmp    rcx,0x400
   1400390b4:	ja     0x1400390ee
   1400390b6:	lea    rdi,[rcx+0xf]
   1400390ba:	cmp    rdi,rcx
   1400390bd:	ja     0x1400390c9
   1400390bf:	movabs rdi,0xffffffffffffff0
   1400390c9:	and    rdi,0xfffffffffffffff0
   1400390cd:	mov    rax,rdi
   1400390d0:	call   0x140041ad0
   1400390d5:	sub    rsp,rdi
   1400390d8:	lea    rdi,[rsp+0x40]
   1400390dd:	test   rdi,rdi
   1400390e0:	je     0x140039183
   1400390e6:	mov    DWORD PTR [rdi],0xcccc
   1400390ec:	jmp    0x140039101
   1400390ee:	call   0x14002a110
   1400390f3:	test   rax,rax
   1400390f6:	mov    rdi,rax
   1400390f9:	je     0x140039105
   1400390fb:	mov    DWORD PTR [rax],0xdddd
   140039101:	add    rdi,0x10
   140039105:	test   rdi,rdi
   140039108:	mov    r9d,DWORD PTR [rbp+0x8]
   14003910c:	je     0x140039183
   14003910e:	movsxd r8,r9d
   140039111:	xor    edx,edx
   140039113:	mov    rcx,rdi
   140039116:	call   0x14002ac20
   14003911b:	mov    r11d,DWORD PTR [rbp+0x8]
   14003911f:	mov    r9d,DWORD PTR [rbp+0x70]
   140039123:	mov    edx,DWORD PTR [rbp+0x0]
   140039126:	mov    ecx,DWORD PTR [rbp+0x10]
   140039129:	mov    DWORD PTR [rsp+0x28],r11d
   14003912e:	mov    r8,r14
   140039131:	mov    QWORD PTR [rsp+0x20],rdi
   140039136:	call   QWORD PTR [rip+0xa1b4]        # 0x1400432f0
   14003913c:	test   eax,eax
   14003913e:	mov    DWORD PTR [rbp+0x8],eax
   140039141:	je     0x140039171
   140039143:	mov    eax,DWORD PTR [rbp+0x80]
   140039149:	lea    r9,[rbp+0x8]
   14003914d:	mov    r8,rdi
   140039150:	mov    DWORD PTR [rsp+0x28],eax
   140039154:	mov    edx,esi
   140039156:	mov    ecx,r13d
   140039159:	mov    QWORD PTR [rsp+0x20],r15
   14003915e:	call   0x140039b20
   140039163:	mov    ecx,DWORD PTR [rbp+0x8]
   140039166:	test   rax,rax
   140039169:	mov    r12,rax
   14003916c:	cmove  ecx,ebx
   14003916f:	mov    ebx,ecx
   140039171:	cmp    DWORD PTR [rdi-0x10],0xdddd
   140039178:	lea    rcx,[rdi-0x10]
   14003917c:	jne    0x140039183
   14003917e:	call   0x14002a380
   140039183:	mov    rcx,r14
   140039186:	call   0x14002a380
   14003918b:	test   r12,r12
   14003918e:	je     0x1400391c4
   140039190:	cmp    r15,r12
   140039193:	je     0x1400391c4
   140039195:	mov    rcx,r12
   140039198:	call   0x14002a380
   14003919d:	jmp    0x1400391c4
   14003919f:	mov    eax,DWORD PTR [rbp+0x80]
   1400391a5:	mov    r9d,DWORD PTR [rbp+0x70]
   1400391a9:	mov    edx,DWORD PTR [rbp+0x0]
   1400391ac:	mov    DWORD PTR [rsp+0x28],eax
   1400391b0:	mov    rax,QWORD PTR [rbp+0x78]
   1400391b4:	mov    ecx,r15d
   1400391b7:	mov    QWORD PTR [rsp+0x20],rax
   1400391bc:	call   QWORD PTR [rip+0xa12e]        # 0x1400432f0
   1400391c2:	mov    ebx,eax
   1400391c4:	mov    eax,ebx
   1400391c6:	mov    rcx,QWORD PTR [rbp+0x18]
   1400391ca:	xor    rcx,rbp
   1400391cd:	call   0x140029b40
   1400391d2:	mov    rbx,QWORD PTR [rbp+0x50]
   1400391d6:	mov    rsi,QWORD PTR [rbp+0x58]
   1400391da:	mov    rdi,QWORD PTR [rbp+0x60]
   1400391de:	lea    rsp,[rbp+0x20]
   1400391e2:	pop    r15
   1400391e4:	pop    r14
   1400391e6:	pop    r13
   1400391e8:	pop    r12
   1400391ea:	pop    rbp
   1400391eb:	ret    
   1400391ec:	int3   
   1400391ed:	int3   
   1400391ee:	int3   
   1400391ef:	int3   
   1400391f0:	mov    rax,rsp
   1400391f3:	push   rbx
   1400391f4:	sub    rsp,0x80
   1400391fb:	mov    QWORD PTR [rax+0x8],rbp
   1400391ff:	mov    QWORD PTR [rax+0x18],rdi
   140039203:	xor    dil,dil
   140039206:	test   rcx,rcx
   140039209:	mov    QWORD PTR [rax-0x10],r12
   14003920d:	mov    QWORD PTR [rax-0x18],r13
   140039211:	mov    BYTE PTR [rax-0x20],dil
   140039215:	mov    rbp,r9
   140039218:	mov    r12d,r8d
   14003921b:	mov    r13d,edx
   14003921e:	jne    0x1400392b1
   140039224:	mov    QWORD PTR [rax+0x10],rsi
   140039228:	call   0x14002e210
   14003922d:	mov    rcx,QWORD PTR [rax+0xc0]
   140039234:	mov    rsi,QWORD PTR [rax+0xb8]
   14003923b:	mov    rbx,rax
   14003923e:	cmp    rcx,QWORD PTR [rip+0x2280b]        # 0x14005ba50
   140039245:	mov    QWORD PTR [rsp+0x60],rax
   14003924a:	mov    QWORD PTR [rsp+0x50],rcx
   14003924f:	mov    QWORD PTR [rsp+0x58],rsi
   140039254:	je     0x14003926e
   140039256:	mov    ecx,DWORD PTR [rax+0xc8]
   14003925c:	test   DWORD PTR [rip+0x22676],ecx        # 0x14005b8d8
   140039262:	jne    0x14003926e
   140039264:	call   0x140031a10
   140039269:	mov    QWORD PTR [rsp+0x50],rax
   14003926e:	cmp    rsi,QWORD PTR [rip+0x2255b]        # 0x14005b7d0
   140039275:	mov    rsi,QWORD PTR [rsp+0x98]
   14003927d:	je     0x140039297
   14003927f:	mov    eax,DWORD PTR [rbx+0xc8]
   140039285:	test   DWORD PTR [rip+0x2264d],eax        # 0x14005b8d8
   14003928b:	jne    0x140039297
   14003928d:	call   0x140030ec0
   140039292:	mov    QWORD PTR [rsp+0x58],rax
   140039297:	test   BYTE PTR [rbx+0xc8],0x2
   14003929e:	jne    0x1400392ce
   1400392a0:	or     DWORD PTR [rbx+0xc8],0x2
   1400392a7:	mov    dil,0x1
   1400392aa:	mov    BYTE PTR [rsp+0x68],dil
   1400392af:	jmp    0x1400392ce
   1400392b1:	mov    rax,QWORD PTR [rcx]
   1400392b4:	lea    rdx,[rsp+0x50]
   1400392b9:	mov    QWORD PTR [rdx],rax
   1400392bc:	mov    rax,QWORD PTR [rcx+0x8]
   1400392c0:	mov    QWORD PTR [rdx+0x8],rax
   1400392c4:	movzx  edi,BYTE PTR [rsp+0x68]
   1400392c9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400392ce:	mov    eax,DWORD PTR [rsp+0xd0]
   1400392d5:	lea    rcx,[rsp+0x50]
   1400392da:	mov    r9,rbp
   1400392dd:	mov    DWORD PTR [rsp+0x40],eax
   1400392e1:	mov    eax,DWORD PTR [rsp+0xc8]
   1400392e8:	mov    r8d,r12d
   1400392eb:	mov    DWORD PTR [rsp+0x38],eax
   1400392ef:	mov    eax,DWORD PTR [rsp+0xc0]
   1400392f6:	mov    edx,r13d
   1400392f9:	mov    DWORD PTR [rsp+0x30],eax
   1400392fd:	mov    rax,QWORD PTR [rsp+0xb8]
   140039305:	mov    QWORD PTR [rsp+0x28],rax
   14003930a:	mov    eax,DWORD PTR [rsp+0xb0]
   140039311:	mov    DWORD PTR [rsp+0x20],eax
   140039315:	call   0x140038cb0
   14003931a:	mov    r13,QWORD PTR [rsp+0x70]
   14003931f:	mov    r12,QWORD PTR [rsp+0x78]
   140039324:	mov    rbp,QWORD PTR [rsp+0x90]
   14003932c:	test   dil,dil
   14003932f:	mov    rdi,QWORD PTR [rsp+0xa0]
   140039337:	je     0x140039340
   140039339:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140039340:	add    rsp,0x80
   140039347:	pop    rbx
   140039348:	ret    
   140039349:	int3   
   14003934a:	int3   
   14003934b:	int3   
   14003934c:	int3   
   14003934d:	int3   
   14003934e:	int3   
   14003934f:	int3   
   140039350:	mov    DWORD PTR [rsp+0x20],r9d
   140039355:	push   rbp
   140039356:	push   r12
   140039358:	push   r13
   14003935a:	push   r14
   14003935c:	push   r15
   14003935e:	sub    rsp,0x40
   140039362:	lea    rbp,[rsp+0x30]
   140039367:	mov    QWORD PTR [rbp+0x40],rbx
   14003936b:	mov    QWORD PTR [rbp+0x48],rsi
   14003936f:	mov    QWORD PTR [rbp+0x50],rdi
   140039373:	mov    rax,QWORD PTR [rip+0x21c06]        # 0x14005af80
   14003937a:	xor    rax,rbp
   14003937d:	mov    QWORD PTR [rbp+0x8],rax
   140039381:	mov    eax,DWORD PTR [rip+0x288fd]        # 0x140061c84
   140039387:	mov    r14,r8
   14003938a:	mov    r15d,edx
   14003938d:	test   eax,eax
   14003938f:	mov    r12,rcx
   140039392:	jne    0x14003940e
   140039394:	mov    r8d,0x1
   14003939a:	lea    r9,[rbp+0x0]
   14003939e:	lea    rdx,[rip+0xf85f]        # 0x140048c04
   1400393a5:	mov    ecx,r8d
   1400393a8:	call   QWORD PTR [rip+0x9f72]        # 0x140043320
   1400393ae:	test   eax,eax
   1400393b0:	je     0x1400393be
   1400393b2:	mov    DWORD PTR [rip+0x288c8],0x1        # 0x140061c84
   1400393bc:	jmp    0x14003941c
   1400393be:	call   QWORD PTR [rip+0xa124]        # 0x1400434e8
   1400393c4:	cmp    eax,0x78
   1400393c7:	jne    0x140039408
   1400393c9:	mov    DWORD PTR [rip+0x288b1],0x2        # 0x140061c84
   1400393d3:	mov    esi,DWORD PTR [rbp+0x70]
   1400393d6:	xor    edi,edi
   1400393d8:	test   esi,esi
   1400393da:	jne    0x1400393e3
   1400393dc:	mov    rax,QWORD PTR [r12]
   1400393e0:	mov    esi,DWORD PTR [rax+0x14]
   1400393e3:	mov    ebx,DWORD PTR [rbp+0x68]
   1400393e6:	test   ebx,ebx
   1400393e8:	jne    0x1400393f1
   1400393ea:	mov    rax,QWORD PTR [r12]
   1400393ee:	mov    ebx,DWORD PTR [rax+0x4]
   1400393f1:	mov    ecx,esi
   1400393f3:	call   0x140039ab0
   1400393f8:	cmp    eax,0xffffffff
   1400393fb:	jne    0x14003952a
   140039401:	xor    eax,eax
   140039403:	jmp    0x140039582
   140039408:	mov    eax,DWORD PTR [rip+0x28876]        # 0x140061c84
   14003940e:	cmp    eax,0x2
   140039411:	je     0x1400393d3
   140039413:	test   eax,eax
   140039415:	je     0x1400393d3
   140039417:	cmp    eax,0x1
   14003941a:	jne    0x140039401
   14003941c:	mov    esi,DWORD PTR [rbp+0x68]
   14003941f:	xor    edi,edi
   140039421:	test   esi,esi
   140039423:	jne    0x14003942c
   140039425:	mov    rax,QWORD PTR [r12]
   140039429:	mov    esi,DWORD PTR [rax+0x4]
   14003942c:	cmp    DWORD PTR [rbp+0x78],edi
   14003942f:	mov    r9d,DWORD PTR [rbp+0x58]
   140039433:	mov    edx,0x1
   140039438:	mov    eax,0x9
   14003943d:	mov    r8,r14
   140039440:	mov    ecx,esi
   140039442:	cmovne edx,eax
   140039445:	mov    DWORD PTR [rsp+0x28],edi
   140039449:	mov    QWORD PTR [rsp+0x20],rdi
   14003944e:	call   QWORD PTR [rip+0xa074]        # 0x1400434c8
   140039454:	test   eax,eax
   140039456:	movsxd r12,eax
   140039459:	je     0x140039401
   14003945b:	jle    0x140039401
   14003945d:	movabs rax,0x7ffffffffffffff0
   140039467:	cmp    r12,rax
   14003946a:	ja     0x140039401
   14003946c:	lea    rcx,[r12+r12*1+0x10]
   140039471:	cmp    rcx,0x400
   140039478:	ja     0x1400394af
   14003947a:	lea    rax,[rcx+0xf]
   14003947e:	cmp    rax,rcx
   140039481:	ja     0x14003948d
   140039483:	movabs rax,0xffffffffffffff0
   14003948d:	and    rax,0xfffffffffffffff0
   140039491:	call   0x140041ad0
   140039496:	sub    rsp,rax
   140039499:	lea    rbx,[rsp+0x30]
   14003949e:	test   rbx,rbx
   1400394a1:	je     0x140039401
   1400394a7:	mov    DWORD PTR [rbx],0xcccc
   1400394ad:	jmp    0x1400394c2
   1400394af:	call   0x14002a110
   1400394b4:	test   rax,rax
   1400394b7:	mov    rbx,rax
   1400394ba:	je     0x1400394c6
   1400394bc:	mov    DWORD PTR [rax],0xdddd
   1400394c2:	add    rbx,0x10
   1400394c6:	test   rbx,rbx
   1400394c9:	je     0x140039401
   1400394cf:	lea    r8,[r12+r12*1]
   1400394d3:	xor    edx,edx
   1400394d5:	mov    rcx,rbx
   1400394d8:	call   0x14002ac20
   1400394dd:	mov    r9d,DWORD PTR [rbp+0x58]
   1400394e1:	mov    r8,r14
   1400394e4:	mov    edx,0x1
   1400394e9:	mov    ecx,esi
   1400394eb:	mov    DWORD PTR [rsp+0x28],r12d
   1400394f0:	mov    QWORD PTR [rsp+0x20],rbx
   1400394f5:	call   QWORD PTR [rip+0x9fcd]        # 0x1400434c8
   1400394fb:	test   eax,eax
   1400394fd:	je     0x140039514
   1400394ff:	mov    r9,QWORD PTR [rbp+0x60]
   140039503:	mov    r8d,eax
   140039506:	mov    rdx,rbx
   140039509:	mov    ecx,r15d
   14003950c:	call   QWORD PTR [rip+0x9e0e]        # 0x140043320
   140039512:	mov    edi,eax
   140039514:	cmp    DWORD PTR [rbx-0x10],0xdddd
   14003951b:	lea    rcx,[rbx-0x10]
   14003951f:	jne    0x140039526
   140039521:	call   0x14002a380
   140039526:	mov    eax,edi
   140039528:	jmp    0x140039582
   14003952a:	cmp    eax,ebx
   14003952c:	je     0x140039556
   14003952e:	lea    r9,[rbp+0x58]
   140039532:	mov    r8,r14
   140039535:	mov    edx,eax
   140039537:	mov    ecx,ebx
   140039539:	mov    DWORD PTR [rsp+0x28],edi
   14003953d:	mov    QWORD PTR [rsp+0x20],rdi
   140039542:	call   0x140039b20
   140039547:	test   rax,rax
   14003954a:	mov    rdi,rax
   14003954d:	je     0x140039401
   140039553:	mov    r14,rax
   140039556:	mov    rax,QWORD PTR [rbp+0x60]
   14003955a:	mov    r9d,DWORD PTR [rbp+0x58]
   14003955e:	mov    r8,r14
   140039561:	mov    edx,r15d
   140039564:	mov    ecx,esi
   140039566:	mov    QWORD PTR [rsp+0x20],rax
   14003956b:	call   QWORD PTR [rip+0x9da7]        # 0x140043318
   140039571:	test   rdi,rdi
   140039574:	mov    ebx,eax
   140039576:	je     0x140039580
   140039578:	mov    rcx,rdi
   14003957b:	call   0x14002a380
   140039580:	mov    eax,ebx
   140039582:	mov    rcx,QWORD PTR [rbp+0x8]
   140039586:	xor    rcx,rbp
   140039589:	call   0x140029b40
   14003958e:	mov    rbx,QWORD PTR [rbp+0x40]
   140039592:	mov    rsi,QWORD PTR [rbp+0x48]
   140039596:	mov    rdi,QWORD PTR [rbp+0x50]
   14003959a:	lea    rsp,[rbp+0x10]
   14003959e:	pop    r15
   1400395a0:	pop    r14
   1400395a2:	pop    r13
   1400395a4:	pop    r12
   1400395a6:	pop    rbp
   1400395a7:	ret    
   1400395a8:	int3   
   1400395a9:	int3   
   1400395aa:	int3   
   1400395ab:	int3   
   1400395ac:	int3   
   1400395ad:	int3   
   1400395ae:	int3   
   1400395af:	int3   
   1400395b0:	mov    rax,rsp
   1400395b3:	push   rbx
   1400395b4:	sub    rsp,0x70
   1400395b8:	mov    QWORD PTR [rax+0x8],rbp
   1400395bc:	mov    QWORD PTR [rax+0x18],rdi
   1400395c0:	xor    dil,dil
   1400395c3:	test   rcx,rcx
   1400395c6:	mov    QWORD PTR [rax-0x10],r12
   1400395ca:	mov    QWORD PTR [rax-0x18],r13
   1400395ce:	mov    BYTE PTR [rax-0x20],dil
   1400395d2:	mov    ebp,r9d
   1400395d5:	mov    r12,r8
   1400395d8:	mov    r13d,edx
   1400395db:	jne    0x14003966e
   1400395e1:	mov    QWORD PTR [rax+0x10],rsi
   1400395e5:	call   0x14002e210
   1400395ea:	mov    rcx,QWORD PTR [rax+0xc0]
   1400395f1:	mov    rsi,QWORD PTR [rax+0xb8]
   1400395f8:	mov    rbx,rax
   1400395fb:	cmp    rcx,QWORD PTR [rip+0x2244e]        # 0x14005ba50
   140039602:	mov    QWORD PTR [rsp+0x50],rax
   140039607:	mov    QWORD PTR [rsp+0x40],rcx
   14003960c:	mov    QWORD PTR [rsp+0x48],rsi
   140039611:	je     0x14003962b
   140039613:	mov    ecx,DWORD PTR [rax+0xc8]
   140039619:	test   DWORD PTR [rip+0x222b9],ecx        # 0x14005b8d8
   14003961f:	jne    0x14003962b
   140039621:	call   0x140031a10
   140039626:	mov    QWORD PTR [rsp+0x40],rax
   14003962b:	cmp    rsi,QWORD PTR [rip+0x2219e]        # 0x14005b7d0
   140039632:	mov    rsi,QWORD PTR [rsp+0x88]
   14003963a:	je     0x140039654
   14003963c:	mov    eax,DWORD PTR [rbx+0xc8]
   140039642:	test   DWORD PTR [rip+0x22290],eax        # 0x14005b8d8
   140039648:	jne    0x140039654
   14003964a:	call   0x140030ec0
   14003964f:	mov    QWORD PTR [rsp+0x48],rax
   140039654:	test   BYTE PTR [rbx+0xc8],0x2
   14003965b:	jne    0x14003968b
   14003965d:	or     DWORD PTR [rbx+0xc8],0x2
   140039664:	mov    dil,0x1
   140039667:	mov    BYTE PTR [rsp+0x58],dil
   14003966c:	jmp    0x14003968b
   14003966e:	mov    rax,QWORD PTR [rcx]
   140039671:	lea    rdx,[rsp+0x40]
   140039676:	mov    QWORD PTR [rdx],rax
   140039679:	mov    rax,QWORD PTR [rcx+0x8]
   14003967d:	mov    QWORD PTR [rdx+0x8],rax
   140039681:	movzx  edi,BYTE PTR [rsp+0x58]
   140039686:	mov    rbx,QWORD PTR [rsp+0x50]
   14003968b:	mov    eax,DWORD PTR [rsp+0xb8]
   140039692:	lea    rcx,[rsp+0x40]
   140039697:	mov    r9d,ebp
   14003969a:	mov    DWORD PTR [rsp+0x38],eax
   14003969e:	mov    eax,DWORD PTR [rsp+0xb0]
   1400396a5:	mov    r8,r12
   1400396a8:	mov    DWORD PTR [rsp+0x30],eax
   1400396ac:	mov    eax,DWORD PTR [rsp+0xa8]
   1400396b3:	mov    edx,r13d
   1400396b6:	mov    DWORD PTR [rsp+0x28],eax
   1400396ba:	mov    rax,QWORD PTR [rsp+0xa0]
   1400396c2:	mov    QWORD PTR [rsp+0x20],rax
   1400396c7:	call   0x140039350
   1400396cc:	mov    r13,QWORD PTR [rsp+0x60]
   1400396d1:	mov    r12,QWORD PTR [rsp+0x68]
   1400396d6:	mov    rbp,QWORD PTR [rsp+0x80]
   1400396de:	test   dil,dil
   1400396e1:	mov    rdi,QWORD PTR [rsp+0x90]
   1400396e9:	je     0x1400396f2
   1400396eb:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   1400396f2:	add    rsp,0x70
   1400396f6:	pop    rbx
   1400396f7:	ret    
   1400396f8:	int3   
   1400396f9:	int3   
   1400396fa:	int3   
   1400396fb:	int3   
   1400396fc:	int3   
   1400396fd:	int3   
   1400396fe:	int3   
   1400396ff:	int3   
   140039700:	test   rcx,rcx
   140039703:	je     0x1400398e9
   140039709:	push   rbx
   14003970a:	sub    rsp,0x20
   14003970e:	mov    rbx,rcx
   140039711:	mov    rcx,QWORD PTR [rcx+0x8]
   140039715:	call   0x14002a380
   14003971a:	mov    rcx,QWORD PTR [rbx+0x10]
   14003971e:	call   0x14002a380
   140039723:	mov    rcx,QWORD PTR [rbx+0x18]
   140039727:	call   0x14002a380
   14003972c:	mov    rcx,QWORD PTR [rbx+0x20]
   140039730:	call   0x14002a380
   140039735:	mov    rcx,QWORD PTR [rbx+0x28]
   140039739:	call   0x14002a380
   14003973e:	mov    rcx,QWORD PTR [rbx+0x30]
   140039742:	call   0x14002a380
   140039747:	mov    rcx,QWORD PTR [rbx]
   14003974a:	call   0x14002a380
   14003974f:	mov    rcx,QWORD PTR [rbx+0x40]
   140039753:	call   0x14002a380
   140039758:	mov    rcx,QWORD PTR [rbx+0x48]
   14003975c:	call   0x14002a380
   140039761:	mov    rcx,QWORD PTR [rbx+0x50]
   140039765:	call   0x14002a380
   14003976a:	mov    rcx,QWORD PTR [rbx+0x58]
   14003976e:	call   0x14002a380
   140039773:	mov    rcx,QWORD PTR [rbx+0x60]
   140039777:	call   0x14002a380
   14003977c:	mov    rcx,QWORD PTR [rbx+0x68]
   140039780:	call   0x14002a380
   140039785:	mov    rcx,QWORD PTR [rbx+0x38]
   140039789:	call   0x14002a380
   14003978e:	mov    rcx,QWORD PTR [rbx+0x70]
   140039792:	call   0x14002a380
   140039797:	mov    rcx,QWORD PTR [rbx+0x78]
   14003979b:	call   0x14002a380
   1400397a0:	mov    rcx,QWORD PTR [rbx+0x80]
   1400397a7:	call   0x14002a380
   1400397ac:	mov    rcx,QWORD PTR [rbx+0x88]
   1400397b3:	call   0x14002a380
   1400397b8:	mov    rcx,QWORD PTR [rbx+0x90]
   1400397bf:	call   0x14002a380
   1400397c4:	mov    rcx,QWORD PTR [rbx+0x98]
   1400397cb:	call   0x14002a380
   1400397d0:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400397d7:	call   0x14002a380
   1400397dc:	mov    rcx,QWORD PTR [rbx+0xa8]
   1400397e3:	call   0x14002a380
   1400397e8:	mov    rcx,QWORD PTR [rbx+0xb0]
   1400397ef:	call   0x14002a380
   1400397f4:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400397fb:	call   0x14002a380
   140039800:	mov    rcx,QWORD PTR [rbx+0xc0]
   140039807:	call   0x14002a380
   14003980c:	mov    rcx,QWORD PTR [rbx+0xc8]
   140039813:	call   0x14002a380
   140039818:	mov    rcx,QWORD PTR [rbx+0xd0]
   14003981f:	call   0x14002a380
   140039824:	mov    rcx,QWORD PTR [rbx+0xd8]
   14003982b:	call   0x14002a380
   140039830:	mov    rcx,QWORD PTR [rbx+0xe0]
   140039837:	call   0x14002a380
   14003983c:	mov    rcx,QWORD PTR [rbx+0xe8]
   140039843:	call   0x14002a380
   140039848:	mov    rcx,QWORD PTR [rbx+0xf0]
   14003984f:	call   0x14002a380
   140039854:	mov    rcx,QWORD PTR [rbx+0xf8]
   14003985b:	call   0x14002a380
   140039860:	mov    rcx,QWORD PTR [rbx+0x100]
   140039867:	call   0x14002a380
   14003986c:	mov    rcx,QWORD PTR [rbx+0x108]
   140039873:	call   0x14002a380
   140039878:	mov    rcx,QWORD PTR [rbx+0x110]
   14003987f:	call   0x14002a380
   140039884:	mov    rcx,QWORD PTR [rbx+0x118]
   14003988b:	call   0x14002a380
   140039890:	mov    rcx,QWORD PTR [rbx+0x120]
   140039897:	call   0x14002a380
   14003989c:	mov    rcx,QWORD PTR [rbx+0x128]
   1400398a3:	call   0x14002a380
   1400398a8:	mov    rcx,QWORD PTR [rbx+0x130]
   1400398af:	call   0x14002a380
   1400398b4:	mov    rcx,QWORD PTR [rbx+0x138]
   1400398bb:	call   0x14002a380
   1400398c0:	mov    rcx,QWORD PTR [rbx+0x140]
   1400398c7:	call   0x14002a380
   1400398cc:	mov    rcx,QWORD PTR [rbx+0x148]
   1400398d3:	call   0x14002a380
   1400398d8:	mov    rcx,QWORD PTR [rbx+0x150]
   1400398df:	call   0x14002a380
   1400398e4:	add    rsp,0x20
   1400398e8:	pop    rbx
   1400398e9:	ret    0x0
   1400398ec:	int3   
   1400398ed:	int3   
   1400398ee:	int3   
   1400398ef:	int3   
   1400398f0:	test   rcx,rcx
   1400398f3:	je     0x140039937
   1400398f5:	push   rbx
   1400398f6:	sub    rsp,0x20
   1400398fa:	mov    rbx,rcx
   1400398fd:	mov    rcx,QWORD PTR [rcx]
   140039900:	cmp    rcx,QWORD PTR [rip+0x22ae9]        # 0x14005c3f0
   140039907:	je     0x14003990e
   140039909:	call   0x14002a380
   14003990e:	mov    rcx,QWORD PTR [rbx+0x8]
   140039912:	cmp    rcx,QWORD PTR [rip+0x22adf]        # 0x14005c3f8
   140039919:	je     0x140039920
   14003991b:	call   0x14002a380
   140039920:	mov    rcx,QWORD PTR [rbx+0x10]
   140039924:	cmp    rcx,QWORD PTR [rip+0x22ad5]        # 0x14005c400
   14003992b:	je     0x140039932
   14003992d:	call   0x14002a380
   140039932:	add    rsp,0x20
   140039936:	pop    rbx
   140039937:	ret    0x0
   14003993a:	int3   
   14003993b:	int3   
   14003993c:	int3   
   14003993d:	int3   
   14003993e:	int3   
   14003993f:	int3   
   140039940:	test   rcx,rcx
   140039943:	je     0x1400399d4
   140039949:	push   rbx
   14003994a:	sub    rsp,0x20
   14003994e:	mov    rbx,rcx
   140039951:	mov    rcx,QWORD PTR [rcx+0x18]
   140039955:	cmp    rcx,QWORD PTR [rip+0x22aac]        # 0x14005c408
   14003995c:	je     0x140039963
   14003995e:	call   0x14002a380
   140039963:	mov    rcx,QWORD PTR [rbx+0x20]
   140039967:	cmp    rcx,QWORD PTR [rip+0x22aa2]        # 0x14005c410
   14003996e:	je     0x140039975
   140039970:	call   0x14002a380
   140039975:	mov    rcx,QWORD PTR [rbx+0x28]
   140039979:	cmp    rcx,QWORD PTR [rip+0x22a98]        # 0x14005c418
   140039980:	je     0x140039987
   140039982:	call   0x14002a380
   140039987:	mov    rcx,QWORD PTR [rbx+0x30]
   14003998b:	cmp    rcx,QWORD PTR [rip+0x22a8e]        # 0x14005c420
   140039992:	je     0x140039999
   140039994:	call   0x14002a380
   140039999:	mov    rcx,QWORD PTR [rbx+0x38]
   14003999d:	cmp    rcx,QWORD PTR [rip+0x22a84]        # 0x14005c428
   1400399a4:	je     0x1400399ab
   1400399a6:	call   0x14002a380
   1400399ab:	mov    rcx,QWORD PTR [rbx+0x40]
   1400399af:	cmp    rcx,QWORD PTR [rip+0x22a7a]        # 0x14005c430
   1400399b6:	je     0x1400399bd
   1400399b8:	call   0x14002a380
   1400399bd:	mov    rcx,QWORD PTR [rbx+0x48]
   1400399c1:	cmp    rcx,QWORD PTR [rip+0x22a70]        # 0x14005c438
   1400399c8:	je     0x1400399cf
   1400399ca:	call   0x14002a380
   1400399cf:	add    rsp,0x20
   1400399d3:	pop    rbx
   1400399d4:	ret    0x0
   1400399d7:	int3   
   1400399d8:	int3   
   1400399d9:	int3   
   1400399da:	int3   
   1400399db:	int3   
   1400399dc:	int3   
   1400399dd:	int3   
   1400399de:	int3   
   1400399df:	int3   
   1400399e0:	int3   
   1400399e1:	int3   
   1400399e2:	int3   
   1400399e3:	int3   
   1400399e4:	int3   
   1400399e5:	int3   
   1400399e6:	data16 data16 xchg ax,ax
   1400399ea:	data16 data16 xchg ax,ax
   1400399ee:	xchg   ax,ax
   1400399f0:	test   r8,r8
   1400399f3:	je     0x140039a6a
   1400399f5:	sub    rdx,rcx
   1400399f8:	mov    r9,rdx
   1400399fb:	movabs r11,0x8101010101010100
   140039a05:	test   cl,0x7
   140039a08:	je     0x140039a29
   140039a0a:	mov    al,BYTE PTR [rcx]
   140039a0c:	mov    dl,BYTE PTR [rcx+r9*1]
   140039a10:	inc    rcx
   140039a13:	cmp    al,dl
   140039a15:	jne    0x140039a6e
   140039a17:	dec    r8
   140039a1a:	je     0x140039a6a
   140039a1c:	test   al,al
   140039a1e:	je     0x140039a6a
   140039a20:	test   rcx,0x7
   140039a27:	jne    0x140039a0a
   140039a29:	lea    rdx,[rcx+r9*1]
   140039a2d:	and    dx,0xfff
   140039a32:	cmp    dx,0xff8
   140039a37:	ja     0x140039a0a
   140039a39:	mov    rax,QWORD PTR [rcx]
   140039a3c:	mov    rdx,QWORD PTR [rcx+r9*1]
   140039a40:	cmp    rax,rdx
   140039a43:	jne    0x140039a0a
   140039a45:	add    rcx,0x8
   140039a49:	sub    r8,0x8
   140039a4d:	movabs r10,0x7efefefefefefeff
   140039a57:	jbe    0x140039a6a
   140039a59:	xor    rax,0xffffffffffffffff
   140039a5d:	add    r10,rdx
   140039a60:	xor    rax,r10
   140039a63:	test   r11,rax
   140039a66:	je     0x140039a29
   140039a68:	jmp    0x140039a76
   140039a6a:	xor    rax,rax
   140039a6d:	ret    
   140039a6e:	sbb    rax,rax
   140039a71:	sbb    rax,0xffffffffffffffff
   140039a75:	ret    
   140039a76:	test   dl,dl
   140039a78:	je     0x140039aa1
   140039a7a:	test   dh,dh
   140039a7c:	je     0x140039aa1
   140039a7e:	shr    rdx,0x10
   140039a82:	test   dl,dl
   140039a84:	je     0x140039aa1
   140039a86:	test   dh,dh
   140039a88:	je     0x140039aa1
   140039a8a:	shr    rdx,0x10
   140039a8e:	test   dl,dl
   140039a90:	je     0x140039aa1
   140039a92:	test   dh,dh
   140039a94:	je     0x140039aa1
   140039a96:	shr    edx,0x10
   140039a99:	test   dl,dl
   140039a9b:	je     0x140039aa1
   140039a9d:	test   dh,dh
   140039a9f:	jne    0x140039a29
   140039aa1:	xor    rax,rax
   140039aa4:	ret    
   140039aa5:	int3   
   140039aa6:	int3   
   140039aa7:	int3   
   140039aa8:	int3   
   140039aa9:	int3   
   140039aaa:	int3   
   140039aab:	int3   
   140039aac:	int3   
   140039aad:	int3   
   140039aae:	int3   
   140039aaf:	int3   
   140039ab0:	sub    rsp,0x38
   140039ab4:	mov    rax,QWORD PTR [rip+0x214c5]        # 0x14005af80
   140039abb:	xor    rax,rsp
   140039abe:	mov    QWORD PTR [rsp+0x28],rax
   140039ac3:	lea    r8,[rsp+0x20]
   140039ac8:	mov    r9d,0x6
   140039ace:	mov    edx,0x1004
   140039ad3:	mov    BYTE PTR [rsp+0x26],0x0
   140039ad8:	call   QWORD PTR [rip+0x984a]        # 0x140043328
   140039ade:	test   eax,eax
   140039ae0:	jne    0x140039af7
   140039ae2:	or     eax,0xffffffff
   140039ae5:	mov    rcx,QWORD PTR [rsp+0x28]
   140039aea:	xor    rcx,rsp
   140039aed:	call   0x140029b40
   140039af2:	add    rsp,0x38
   140039af6:	ret    
   140039af7:	lea    rcx,[rsp+0x20]
   140039afc:	call   0x14003b8e0
   140039b01:	mov    rcx,QWORD PTR [rsp+0x28]
   140039b06:	xor    rcx,rsp
   140039b09:	call   0x140029b40
   140039b0e:	add    rsp,0x38
   140039b12:	ret    
   140039b13:	int3   
   140039b14:	int3   
   140039b15:	int3   
   140039b16:	int3   
   140039b17:	int3   
   140039b18:	int3   
   140039b19:	int3   
   140039b1a:	int3   
   140039b1b:	int3   
   140039b1c:	int3   
   140039b1d:	int3   
   140039b1e:	int3   
   140039b1f:	int3   
   140039b20:	rex push rbp
   140039b22:	push   rbx
   140039b23:	push   rsi
   140039b24:	push   rdi
   140039b25:	push   r12
   140039b27:	push   r13
   140039b29:	push   r14
   140039b2b:	push   r15
   140039b2d:	sub    rsp,0x88
   140039b34:	lea    rbp,[rsp+0x40]
   140039b39:	mov    rax,QWORD PTR [rip+0x21440]        # 0x14005af80
   140039b40:	xor    rax,rbp
   140039b43:	mov    QWORD PTR [rbp+0x30],rax
   140039b47:	mov    r15,QWORD PTR [rbp+0xb0]
   140039b4e:	mov    r12d,DWORD PTR [r9]
   140039b51:	xor    r13d,r13d
   140039b54:	cmp    ecx,edx
   140039b56:	mov    rbx,r8
   140039b59:	mov    rsi,r13
   140039b5c:	mov    DWORD PTR [rbp+0x0],r13d
   140039b60:	mov    QWORD PTR [rbp+0x10],r9
   140039b64:	mov    r14d,edx
   140039b67:	mov    QWORD PTR [rbp+0x8],rbx
   140039b6b:	mov    edi,ecx
   140039b6d:	mov    DWORD PTR [rbp+0x4],ecx
   140039b70:	je     0x140039d83
   140039b76:	lea    rdx,[rbp+0x18]
   140039b7a:	call   QWORD PTR [rip+0x9750]        # 0x1400432d0
   140039b80:	test   eax,eax
   140039b82:	je     0x140039c28
   140039b88:	cmp    DWORD PTR [rbp+0x18],0x1
   140039b8c:	jne    0x140039c28
   140039b92:	lea    rdx,[rbp+0x18]
   140039b96:	mov    ecx,r14d
   140039b99:	call   QWORD PTR [rip+0x9731]        # 0x1400432d0
   140039b9f:	test   eax,eax
   140039ba1:	je     0x140039c28
   140039ba7:	cmp    DWORD PTR [rbp+0x18],0x1
   140039bab:	jne    0x140039c28
   140039bad:	cmp    r12d,0xffffffff
   140039bb1:	mov    DWORD PTR [rbp+0x0],0x1
   140039bb8:	je     0x140039c16
   140039bba:	mov    ebx,r12d
   140039bbd:	test   ebx,ebx
   140039bbf:	jle    0x140039c4f
   140039bc5:	movsxd r13,ebx
   140039bc8:	movabs rax,0x7ffffffffffffff0
   140039bd2:	cmp    r13,rax
   140039bd5:	ja     0x140039c4f
   140039bd7:	lea    rcx,[r13+r13*1+0x10]
   140039bdc:	cmp    rcx,0x400
   140039be3:	ja     0x140039c56
   140039be5:	lea    rax,[rcx+0xf]
   140039be9:	cmp    rax,rcx
   140039bec:	ja     0x140039bf8
   140039bee:	movabs rax,0xffffffffffffff0
   140039bf8:	and    rax,0xfffffffffffffff0
   140039bfc:	call   0x140041ad0
   140039c01:	sub    rsp,rax
   140039c04:	lea    rdi,[rsp+0x40]
   140039c09:	test   rdi,rdi
   140039c0c:	je     0x140039c4f
   140039c0e:	mov    DWORD PTR [rdi],0xcccc
   140039c14:	jmp    0x140039c69
   140039c16:	or     rcx,0xffffffffffffffff
   140039c1a:	mov    rdi,rbx
   140039c1d:	xor    eax,eax
   140039c1f:	repnz scas al,BYTE PTR es:[rdi]
   140039c21:	not    rcx
   140039c24:	mov    ebx,ecx
   140039c26:	jmp    0x140039bbd
   140039c28:	mov    r9d,r12d
   140039c2b:	mov    r8,rbx
   140039c2e:	mov    edx,0x1
   140039c33:	mov    ecx,edi
   140039c35:	mov    DWORD PTR [rsp+0x28],r13d
   140039c3a:	mov    QWORD PTR [rsp+0x20],r13
   140039c3f:	call   QWORD PTR [rip+0x9883]        # 0x1400434c8
   140039c45:	test   eax,eax
   140039c47:	mov    ebx,eax
   140039c49:	jne    0x140039bbd
   140039c4f:	xor    eax,eax
   140039c51:	jmp    0x140039d86
   140039c56:	call   0x14002a110
   140039c5b:	test   rax,rax
   140039c5e:	mov    rdi,rax
   140039c61:	je     0x140039c6d
   140039c63:	mov    DWORD PTR [rax],0xdddd
   140039c69:	add    rdi,0x10
   140039c6d:	test   rdi,rdi
   140039c70:	je     0x140039c4f
   140039c72:	lea    r8,[r13+r13*1+0x0]
   140039c77:	xor    edx,edx
   140039c79:	mov    rcx,rdi
   140039c7c:	call   0x14002ac20
   140039c81:	mov    r8,QWORD PTR [rbp+0x8]
   140039c85:	mov    ecx,DWORD PTR [rbp+0x4]
   140039c88:	mov    r9d,r12d
   140039c8b:	mov    edx,0x1
   140039c90:	mov    DWORD PTR [rsp+0x28],ebx
   140039c94:	mov    QWORD PTR [rsp+0x20],rdi
   140039c99:	call   QWORD PTR [rip+0x9829]        # 0x1400434c8
   140039c9f:	test   eax,eax
   140039ca1:	je     0x140039d71
   140039ca7:	test   r15,r15
   140039caa:	je     0x140039ce8
   140039cac:	xor    eax,eax
   140039cae:	mov    r9d,ebx
   140039cb1:	mov    r8,rdi
   140039cb4:	mov    QWORD PTR [rsp+0x38],rax
   140039cb9:	mov    QWORD PTR [rsp+0x30],rax
   140039cbe:	mov    eax,DWORD PTR [rbp+0xb8]
   140039cc4:	mov    DWORD PTR [rsp+0x28],eax
   140039cc8:	xor    edx,edx
   140039cca:	mov    ecx,r14d
   140039ccd:	mov    QWORD PTR [rsp+0x20],r15
   140039cd2:	call   QWORD PTR [rip+0x9760]        # 0x140043438
   140039cd8:	test   eax,eax
   140039cda:	je     0x140039d71
   140039ce0:	mov    rsi,r15
   140039ce3:	jmp    0x140039d71
   140039ce8:	xor    r13d,r13d
   140039ceb:	cmp    DWORD PTR [rbp+0x0],esi
   140039cee:	jne    0x140039d1b
   140039cf0:	mov    QWORD PTR [rsp+0x38],r13
   140039cf5:	mov    QWORD PTR [rsp+0x30],r13
   140039cfa:	mov    r9d,ebx
   140039cfd:	mov    r8,rdi
   140039d00:	xor    edx,edx
   140039d02:	mov    ecx,r14d
   140039d05:	mov    DWORD PTR [rsp+0x28],r13d
   140039d0a:	mov    QWORD PTR [rsp+0x20],r13
   140039d0f:	call   QWORD PTR [rip+0x9723]        # 0x140043438
   140039d15:	test   eax,eax
   140039d17:	mov    ebx,eax
   140039d19:	je     0x140039d71
   140039d1b:	movsxd rdx,ebx
   140039d1e:	mov    ecx,0x1
   140039d23:	call   0x140032130
   140039d28:	test   rax,rax
   140039d2b:	mov    rsi,rax
   140039d2e:	je     0x140039d71
   140039d30:	mov    QWORD PTR [rsp+0x38],r13
   140039d35:	mov    QWORD PTR [rsp+0x30],r13
   140039d3a:	mov    r9d,ebx
   140039d3d:	mov    r8,rdi
   140039d40:	xor    edx,edx
   140039d42:	mov    ecx,r14d
   140039d45:	mov    DWORD PTR [rsp+0x28],ebx
   140039d49:	mov    QWORD PTR [rsp+0x20],rax
   140039d4e:	call   QWORD PTR [rip+0x96e4]        # 0x140043438
   140039d54:	test   eax,eax
   140039d56:	jne    0x140039d65
   140039d58:	mov    rcx,rsi
   140039d5b:	call   0x14002a380
   140039d60:	mov    rsi,r13
   140039d63:	jmp    0x140039d71
   140039d65:	cmp    r12d,0xffffffff
   140039d69:	je     0x140039d71
   140039d6b:	mov    rcx,QWORD PTR [rbp+0x10]
   140039d6f:	mov    DWORD PTR [rcx],eax
   140039d71:	cmp    DWORD PTR [rdi-0x10],0xdddd
   140039d78:	lea    rcx,[rdi-0x10]
   140039d7c:	jne    0x140039d83
   140039d7e:	call   0x14002a380
   140039d83:	mov    rax,rsi
   140039d86:	mov    rcx,QWORD PTR [rbp+0x30]
   140039d8a:	xor    rcx,rbp
   140039d8d:	call   0x140029b40
   140039d92:	lea    rsp,[rbp+0x48]
   140039d96:	pop    r15
   140039d98:	pop    r14
   140039d9a:	pop    r13
   140039d9c:	pop    r12
   140039d9e:	pop    rdi
   140039d9f:	pop    rsi
   140039da0:	pop    rbx
   140039da1:	pop    rbp
   140039da2:	ret    
   140039da3:	int3   
   140039da4:	int3   
   140039da5:	int3   
   140039da6:	int3   
   140039da7:	int3   
   140039da8:	int3   
   140039da9:	int3   
   140039daa:	int3   
   140039dab:	int3   
   140039dac:	int3   
   140039dad:	int3   
   140039dae:	int3   
   140039daf:	int3   
   140039db0:	rex push rbx
   140039db2:	sub    rsp,0x40
   140039db6:	cmp    DWORD PTR [rip+0x27a9b],0x0        # 0x140061858
   140039dbd:	movsxd rbx,ecx
   140039dc0:	jne    0x140039dd5
   140039dc2:	mov    rax,QWORD PTR [rip+0x21c67]        # 0x14005ba30
   140039dc9:	mov    al,BYTE PTR [rax+rbx*2]
   140039dcc:	and    eax,0x4
   140039dcf:	add    rsp,0x40
   140039dd3:	pop    rbx
   140039dd4:	ret    
   140039dd5:	mov    BYTE PTR [rsp+0x38],0x0
   140039dda:	call   0x14002e210
   140039ddf:	mov    r11,rax
   140039de2:	mov    QWORD PTR [rsp+0x30],rax
   140039de7:	mov    rax,QWORD PTR [rax+0xc0]
   140039dee:	cmp    rax,QWORD PTR [rip+0x21c5b]        # 0x14005ba50
   140039df5:	mov    QWORD PTR [rsp+0x20],rax
   140039dfa:	mov    rdx,QWORD PTR [r11+0xb8]
   140039e01:	mov    QWORD PTR [rsp+0x28],rdx
   140039e06:	je     0x140039e2b
   140039e08:	mov    ecx,DWORD PTR [r11+0xc8]
   140039e0f:	test   DWORD PTR [rip+0x21ac3],ecx        # 0x14005b8d8
   140039e15:	jne    0x140039e2b
   140039e17:	call   0x140031a10
   140039e1c:	mov    r11,QWORD PTR [rsp+0x30]
   140039e21:	mov    rdx,QWORD PTR [rsp+0x28]
   140039e26:	mov    QWORD PTR [rsp+0x20],rax
   140039e2b:	cmp    rdx,QWORD PTR [rip+0x2199e]        # 0x14005b7d0
   140039e32:	je     0x140039e57
   140039e34:	mov    ecx,DWORD PTR [r11+0xc8]
   140039e3b:	test   DWORD PTR [rip+0x21a97],ecx        # 0x14005b8d8
   140039e41:	jne    0x140039e57
   140039e43:	call   0x140030ec0
   140039e48:	mov    r11,QWORD PTR [rsp+0x30]
   140039e4d:	mov    QWORD PTR [rsp+0x28],rax
   140039e52:	mov    rax,QWORD PTR [rsp+0x20]
   140039e57:	test   BYTE PTR [r11+0xc8],0x2
   140039e5f:	jne    0x140039e78
   140039e61:	or     DWORD PTR [r11+0xc8],0x2
   140039e69:	mov    r11,QWORD PTR [rsp+0x30]
   140039e6e:	mov    rax,QWORD PTR [rsp+0x20]
   140039e73:	mov    BYTE PTR [rsp+0x38],0x1
   140039e78:	cmp    DWORD PTR [rax+0x10c],0x1
   140039e7f:	jle    0x140039e99
   140039e81:	lea    r8,[rsp+0x20]
   140039e86:	mov    edx,0x4
   140039e8b:	mov    ecx,ebx
   140039e8d:	call   0x14003c5c0
   140039e92:	mov    r11,QWORD PTR [rsp+0x30]
   140039e97:	jmp    0x140039ea6
   140039e99:	mov    rax,QWORD PTR [rax+0x140]
   140039ea0:	mov    al,BYTE PTR [rax+rbx*2]
   140039ea3:	and    eax,0x4
   140039ea6:	cmp    BYTE PTR [rsp+0x38],0x0
   140039eab:	je     0x140039eb5
   140039ead:	and    DWORD PTR [r11+0xc8],0xfffffffd
   140039eb5:	add    rsp,0x40
   140039eb9:	pop    rbx
   140039eba:	ret    
   140039ebb:	int3   
   140039ebc:	int3   
   140039ebd:	int3   
   140039ebe:	int3   
   140039ebf:	int3   
   140039ec0:	rex push rbx
   140039ec2:	sub    rsp,0x40
   140039ec6:	cmp    DWORD PTR [rip+0x2798b],0x0        # 0x140061858
   140039ecd:	movsxd rbx,ecx
   140039ed0:	jne    0x140039ee7
   140039ed2:	mov    rax,QWORD PTR [rip+0x21b57]        # 0x14005ba30
   140039ed9:	mov    al,BYTE PTR [rax+rbx*2]
   140039edc:	and    eax,0x80
   140039ee1:	add    rsp,0x40
   140039ee5:	pop    rbx
   140039ee6:	ret    
   140039ee7:	mov    BYTE PTR [rsp+0x38],0x0
   140039eec:	call   0x14002e210
   140039ef1:	mov    r11,rax
   140039ef4:	mov    QWORD PTR [rsp+0x30],rax
   140039ef9:	mov    rax,QWORD PTR [rax+0xc0]
   140039f00:	cmp    rax,QWORD PTR [rip+0x21b49]        # 0x14005ba50
   140039f07:	mov    QWORD PTR [rsp+0x20],rax
   140039f0c:	mov    rdx,QWORD PTR [r11+0xb8]
   140039f13:	mov    QWORD PTR [rsp+0x28],rdx
   140039f18:	je     0x140039f3d
   140039f1a:	mov    ecx,DWORD PTR [r11+0xc8]
   140039f21:	test   DWORD PTR [rip+0x219b1],ecx        # 0x14005b8d8
   140039f27:	jne    0x140039f3d
   140039f29:	call   0x140031a10
   140039f2e:	mov    r11,QWORD PTR [rsp+0x30]
   140039f33:	mov    rdx,QWORD PTR [rsp+0x28]
   140039f38:	mov    QWORD PTR [rsp+0x20],rax
   140039f3d:	cmp    rdx,QWORD PTR [rip+0x2188c]        # 0x14005b7d0
   140039f44:	je     0x140039f69
   140039f46:	mov    ecx,DWORD PTR [r11+0xc8]
   140039f4d:	test   DWORD PTR [rip+0x21985],ecx        # 0x14005b8d8
   140039f53:	jne    0x140039f69
   140039f55:	call   0x140030ec0
   140039f5a:	mov    r11,QWORD PTR [rsp+0x30]
   140039f5f:	mov    QWORD PTR [rsp+0x28],rax
   140039f64:	mov    rax,QWORD PTR [rsp+0x20]
   140039f69:	test   BYTE PTR [r11+0xc8],0x2
   140039f71:	jne    0x140039f8a
   140039f73:	or     DWORD PTR [r11+0xc8],0x2
   140039f7b:	mov    r11,QWORD PTR [rsp+0x30]
   140039f80:	mov    rax,QWORD PTR [rsp+0x20]
   140039f85:	mov    BYTE PTR [rsp+0x38],0x1
   140039f8a:	cmp    DWORD PTR [rax+0x10c],0x1
   140039f91:	jle    0x140039fab
   140039f93:	lea    r8,[rsp+0x20]
   140039f98:	mov    edx,0x80
   140039f9d:	mov    ecx,ebx
   140039f9f:	call   0x14003c5c0
   140039fa4:	mov    r11,QWORD PTR [rsp+0x30]
   140039fa9:	jmp    0x140039fba
   140039fab:	mov    rax,QWORD PTR [rax+0x140]
   140039fb2:	mov    al,BYTE PTR [rax+rbx*2]
   140039fb5:	and    eax,0x80
   140039fba:	cmp    BYTE PTR [rsp+0x38],0x0
   140039fbf:	je     0x140039fc9
   140039fc1:	and    DWORD PTR [r11+0xc8],0xfffffffd
   140039fc9:	add    rsp,0x40
   140039fcd:	pop    rbx
   140039fce:	ret    
   140039fcf:	int3   
   140039fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140039fd5:	mov    QWORD PTR [rsp+0x10],rsi
   140039fda:	push   rdi
   140039fdb:	sub    rsp,0x20
   140039fdf:	lea    rax,[rip+0x100ba]        # 0x14004a0a0
   140039fe6:	mov    rsi,rdx
   140039fe9:	mov    rbx,rcx
   140039fec:	mov    QWORD PTR [rcx],rax
   140039fef:	mov    rdi,QWORD PTR [rdx]
   140039ff2:	test   rdi,rdi
   140039ff5:	je     0x14003a03d
   140039ff7:	or     rcx,0xffffffffffffffff
   140039ffb:	xor    eax,eax
   140039ffd:	repnz scas al,BYTE PTR es:[rdi]
   140039fff:	not    rcx
   14003a002:	lea    rdi,[rcx-0x1]
   14003a006:	call   0x14002a110
   14003a00b:	test   rax,rax
   14003a00e:	mov    QWORD PTR [rbx+0x8],rax
   14003a012:	je     0x14003a023
   14003a014:	mov    r8,QWORD PTR [rsi]
   14003a017:	lea    rdx,[rdi+0x1]
   14003a01b:	mov    rcx,rax
   14003a01e:	call   0x140037660
   14003a023:	mov    DWORD PTR [rbx+0x10],0x1
   14003a02a:	mov    rax,rbx
   14003a02d:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a032:	mov    rsi,QWORD PTR [rsp+0x38]
   14003a037:	add    rsp,0x20
   14003a03b:	pop    rdi
   14003a03c:	ret    
   14003a03d:	mov    rsi,QWORD PTR [rsp+0x38]
   14003a042:	mov    rax,rbx
   14003a045:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a04a:	mov    QWORD PTR [rcx+0x8],0x0
   14003a052:	mov    DWORD PTR [rcx+0x10],0x1
   14003a059:	add    rsp,0x20
   14003a05d:	pop    rdi
   14003a05e:	ret    
   14003a05f:	int3   
   14003a060:	mov    QWORD PTR [rsp+0x10],rbx
   14003a065:	push   rsi
   14003a066:	sub    rsp,0x20
   14003a06a:	lea    rax,[rip+0x1002f]        # 0x14004a0a0
   14003a071:	mov    rsi,rdx
   14003a074:	mov    rbx,rcx
   14003a077:	mov    QWORD PTR [rcx],rax
   14003a07a:	mov    eax,DWORD PTR [rdx+0x10]
   14003a07d:	test   eax,eax
   14003a07f:	mov    DWORD PTR [rcx+0x10],eax
   14003a082:	je     0x14003a0ed
   14003a084:	mov    QWORD PTR [rsp+0x30],rdi
   14003a089:	mov    rdi,QWORD PTR [rdx+0x8]
   14003a08d:	test   rdi,rdi
   14003a090:	je     0x14003a0d2
   14003a092:	or     rcx,0xffffffffffffffff
   14003a096:	xor    eax,eax
   14003a098:	repnz scas al,BYTE PTR es:[rdi]
   14003a09a:	not    rcx
   14003a09d:	lea    rdi,[rcx-0x1]
   14003a0a1:	call   0x14002a110
   14003a0a6:	test   rax,rax
   14003a0a9:	mov    QWORD PTR [rbx+0x8],rax
   14003a0ad:	je     0x14003a0bf
   14003a0af:	mov    r8,QWORD PTR [rsi+0x8]
   14003a0b3:	lea    rdx,[rdi+0x1]
   14003a0b7:	mov    rcx,rax
   14003a0ba:	call   0x140037660
   14003a0bf:	mov    rax,rbx
   14003a0c2:	mov    rdi,QWORD PTR [rsp+0x30]
   14003a0c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14003a0cc:	add    rsp,0x20
   14003a0d0:	pop    rsi
   14003a0d1:	ret    
   14003a0d2:	mov    rdi,QWORD PTR [rsp+0x30]
   14003a0d7:	mov    QWORD PTR [rcx+0x8],0x0
   14003a0df:	mov    rax,rbx
   14003a0e2:	mov    rbx,QWORD PTR [rsp+0x38]
   14003a0e7:	add    rsp,0x20
   14003a0eb:	pop    rsi
   14003a0ec:	ret    
   14003a0ed:	mov    rax,QWORD PTR [rdx+0x8]
   14003a0f1:	mov    rbx,QWORD PTR [rsp+0x38]
   14003a0f6:	mov    QWORD PTR [rcx+0x8],rax
   14003a0fa:	mov    rax,rcx
   14003a0fd:	add    rsp,0x20
   14003a101:	pop    rsi
   14003a102:	ret    
   14003a103:	int3   
   14003a104:	int3   
   14003a105:	int3   
   14003a106:	int3   
   14003a107:	int3   
   14003a108:	int3   
   14003a109:	int3   
   14003a10a:	int3   
   14003a10b:	int3   
   14003a10c:	int3   
   14003a10d:	int3   
   14003a10e:	int3   
   14003a10f:	int3   
   14003a110:	sub    rsp,0x28
   14003a114:	cmp    DWORD PTR [rcx+0x10],0x0
   14003a118:	lea    rax,[rip+0xff81]        # 0x14004a0a0
   14003a11f:	mov    QWORD PTR [rcx],rax
   14003a122:	je     0x14003a12d
   14003a124:	mov    rcx,QWORD PTR [rcx+0x8]
   14003a128:	call   0x14002a380
   14003a12d:	add    rsp,0x28
   14003a131:	ret    
   14003a132:	int3   
   14003a133:	int3   
   14003a134:	int3   
   14003a135:	int3   
   14003a136:	int3   
   14003a137:	int3   
   14003a138:	int3   
   14003a139:	int3   
   14003a13a:	int3   
   14003a13b:	int3   
   14003a13c:	int3   
   14003a13d:	int3   
   14003a13e:	int3   
   14003a13f:	int3   
   14003a140:	mov    rax,QWORD PTR [rcx+0x8]
   14003a144:	test   rax,rax
   14003a147:	jne    0x14003a150
   14003a149:	lea    rax,[rip+0xff60]        # 0x14004a0b0
   14003a150:	ret    0x0
   14003a153:	int3   
   14003a154:	int3   
   14003a155:	int3   
   14003a156:	int3   
   14003a157:	int3   
   14003a158:	int3   
   14003a159:	int3   
   14003a15a:	int3   
   14003a15b:	int3   
   14003a15c:	int3   
   14003a15d:	int3   
   14003a15e:	int3   
   14003a15f:	int3   
   14003a160:	mov    QWORD PTR [rsp+0x8],rbx
   14003a165:	push   rdi
   14003a166:	sub    rsp,0x20
   14003a16a:	cmp    DWORD PTR [rcx+0x10],0x0
   14003a16e:	lea    rax,[rip+0xff2b]        # 0x14004a0a0
   14003a175:	mov    edi,edx
   14003a177:	mov    QWORD PTR [rcx],rax
   14003a17a:	mov    rbx,rcx
   14003a17d:	je     0x14003a188
   14003a17f:	mov    rcx,QWORD PTR [rcx+0x8]
   14003a183:	call   0x14002a380
   14003a188:	test   dil,0x1
   14003a18c:	je     0x14003a196
   14003a18e:	mov    rcx,rbx
   14003a191:	call   0x14001490c
   14003a196:	mov    rax,rbx
   14003a199:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a19e:	add    rsp,0x20
   14003a1a2:	pop    rdi
   14003a1a3:	ret    
   14003a1a4:	int3   
   14003a1a5:	int3   
   14003a1a6:	int3   
   14003a1a7:	int3   
   14003a1a8:	int3   
   14003a1a9:	int3   
   14003a1aa:	int3   
   14003a1ab:	int3   
   14003a1ac:	int3   
   14003a1ad:	int3   
   14003a1ae:	int3   
   14003a1af:	int3   
   14003a1b0:	mov    rax,QWORD PTR [rsp]
   14003a1b4:	mov    QWORD PTR [rcx],rax
   14003a1b7:	ret    
   14003a1b8:	int3   
   14003a1b9:	int3   
   14003a1ba:	int3   
   14003a1bb:	int3   
   14003a1bc:	int3   
   14003a1bd:	int3   
   14003a1be:	int3   
   14003a1bf:	int3   
   14003a1c0:	xor    edx,edx
   14003a1c2:	mov    eax,0x1
   14003a1c7:	test   rcx,rcx
   14003a1ca:	cmove  eax,edx
   14003a1cd:	ret    
   14003a1ce:	int3   
   14003a1cf:	int3   
   14003a1d0:	mov    QWORD PTR [rsp+0x18],rbx
   14003a1d5:	push   rbp
   14003a1d6:	push   rsi
   14003a1d7:	push   rdi
   14003a1d8:	sub    rsp,0x20
   14003a1dc:	test   BYTE PTR [rcx+0x18],0x40
   14003a1e0:	mov    rdi,rcx
   14003a1e3:	lea    rbp,[rip+0x28dd6]        # 0x140062fc0
   14003a1ea:	lea    rsi,[rip+0x2113f]        # 0x14005b330
   14003a1f1:	jne    0x14003a2b0
   14003a1f7:	call   0x1400385a0
   14003a1fc:	cmp    eax,0xffffffff
   14003a1ff:	je     0x14003a23b
   14003a201:	mov    rcx,rdi
   14003a204:	call   0x1400385a0
   14003a209:	cmp    eax,0xfffffffe
   14003a20c:	je     0x14003a23b
   14003a20e:	mov    rcx,rdi
   14003a211:	call   0x1400385a0
   14003a216:	mov    rcx,rdi
   14003a219:	movsxd rbx,eax
   14003a21c:	sar    rbx,0x5
   14003a220:	call   0x1400385a0
   14003a225:	mov    r11d,eax
   14003a228:	and    r11d,0x1f
   14003a22c:	lea    rax,[r11+r11*4]
   14003a230:	shl    rax,0x4
   14003a234:	add    rax,QWORD PTR [rbp+rbx*8+0x0]
   14003a239:	jmp    0x14003a23e
   14003a23b:	mov    rax,rsi
   14003a23e:	test   BYTE PTR [rax+0x38],0x7f
   14003a242:	je     0x14003a2b0
   14003a244:	add    DWORD PTR [rdi+0x8],0xffffffff
   14003a248:	js     0x14003a25a
   14003a24a:	mov    rax,QWORD PTR [rdi]
   14003a24d:	add    rax,0x1
   14003a251:	movzx  ecx,BYTE PTR [rax-0x1]
   14003a255:	mov    QWORD PTR [rdi],rax
   14003a258:	jmp    0x14003a264
   14003a25a:	mov    rcx,rdi
   14003a25d:	call   0x14003cb60
   14003a262:	mov    ecx,eax
   14003a264:	cmp    ecx,0xffffffff
   14003a267:	je     0x14003a371
   14003a26d:	add    DWORD PTR [rdi+0x8],0xffffffff
   14003a271:	mov    BYTE PTR [rsp+0x40],cl
   14003a275:	js     0x14003a287
   14003a277:	mov    rax,QWORD PTR [rdi]
   14003a27a:	add    rax,0x1
   14003a27e:	movzx  ecx,BYTE PTR [rax-0x1]
   14003a282:	mov    QWORD PTR [rdi],rax
   14003a285:	jmp    0x14003a291
   14003a287:	mov    rcx,rdi
   14003a28a:	call   0x14003cb60
   14003a28f:	mov    ecx,eax
   14003a291:	cmp    ecx,0xffffffff
   14003a294:	je     0x14003a371
   14003a29a:	mov    BYTE PTR [rsp+0x41],cl
   14003a29e:	mov    ax,WORD PTR [rsp+0x40]
   14003a2a3:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a2a8:	add    rsp,0x20
   14003a2ac:	pop    rdi
   14003a2ad:	pop    rsi
   14003a2ae:	pop    rbp
   14003a2af:	ret    
   14003a2b0:	test   BYTE PTR [rdi+0x18],0x40
   14003a2b4:	jne    0x14003a3c2
   14003a2ba:	mov    rcx,rdi
   14003a2bd:	call   0x1400385a0
   14003a2c2:	cmp    eax,0xffffffff
   14003a2c5:	je     0x14003a2ff
   14003a2c7:	mov    rcx,rdi
   14003a2ca:	call   0x1400385a0
   14003a2cf:	cmp    eax,0xfffffffe
   14003a2d2:	je     0x14003a2ff
   14003a2d4:	mov    rcx,rdi
   14003a2d7:	call   0x1400385a0
   14003a2dc:	mov    rcx,rdi
   14003a2df:	movsxd rbx,eax
   14003a2e2:	sar    rbx,0x5
   14003a2e6:	call   0x1400385a0
   14003a2eb:	mov    r11d,eax
   14003a2ee:	and    r11d,0x1f
   14003a2f2:	lea    rsi,[r11+r11*4]
   14003a2f6:	shl    rsi,0x4
   14003a2fa:	add    rsi,QWORD PTR [rbp+rbx*8+0x0]
   14003a2ff:	test   BYTE PTR [rsi+0x8],0x80
   14003a303:	je     0x14003a3c2
   14003a309:	add    DWORD PTR [rdi+0x8],0xffffffff
   14003a30d:	mov    ebx,0x1
   14003a312:	js     0x14003a322
   14003a314:	mov    rax,QWORD PTR [rdi]
   14003a317:	movzx  ecx,BYTE PTR [rax]
   14003a31a:	add    rax,rbx
   14003a31d:	mov    QWORD PTR [rdi],rax
   14003a320:	jmp    0x14003a32c
   14003a322:	mov    rcx,rdi
   14003a325:	call   0x14003cb60
   14003a32a:	mov    ecx,eax
   14003a32c:	cmp    ecx,0xffffffff
   14003a32f:	je     0x14003a371
   14003a331:	mov    BYTE PTR [rsp+0x48],cl
   14003a335:	movzx  ecx,cl
   14003a338:	call   0x140038970
   14003a33d:	test   eax,eax
   14003a33f:	je     0x14003a38b
   14003a341:	add    DWORD PTR [rdi+0x8],0xffffffff
   14003a345:	js     0x14003a355
   14003a347:	mov    rax,QWORD PTR [rdi]
   14003a34a:	movzx  ecx,BYTE PTR [rax]
   14003a34d:	add    rax,rbx
   14003a350:	mov    QWORD PTR [rdi],rax
   14003a353:	jmp    0x14003a35f
   14003a355:	mov    rcx,rdi
   14003a358:	call   0x14003cb60
   14003a35d:	mov    ecx,eax
   14003a35f:	cmp    ecx,0xffffffff
   14003a362:	jne    0x14003a382
   14003a364:	movsx  ecx,BYTE PTR [rsp+0x48]
   14003a369:	mov    rdx,rdi
   14003a36c:	call   0x14003cac0
   14003a371:	or     ax,0xffff
   14003a375:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a37a:	add    rsp,0x20
   14003a37e:	pop    rdi
   14003a37f:	pop    rsi
   14003a380:	pop    rbp
   14003a381:	ret    
   14003a382:	mov    BYTE PTR [rsp+0x49],cl
   14003a386:	mov    ebx,0x2
   14003a38b:	lea    rdx,[rsp+0x48]
   14003a390:	lea    rcx,[rsp+0x40]
   14003a395:	movsxd r8,ebx
   14003a398:	call   0x140038ca0
   14003a39d:	cmp    eax,0xffffffff
   14003a3a0:	jne    0x14003a29e
   14003a3a6:	call   0x14002bca0
   14003a3ab:	mov    DWORD PTR [rax],0x2a
   14003a3b1:	or     ax,0xffff
   14003a3b5:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a3ba:	add    rsp,0x20
   14003a3be:	pop    rdi
   14003a3bf:	pop    rsi
   14003a3c0:	pop    rbp
   14003a3c1:	ret    
   14003a3c2:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14003a3c6:	js     0x14003a3e3
   14003a3c8:	mov    rcx,QWORD PTR [rdi]
   14003a3cb:	add    rcx,0x2
   14003a3cf:	movzx  eax,WORD PTR [rcx-0x2]
   14003a3d3:	mov    QWORD PTR [rdi],rcx
   14003a3d6:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a3db:	add    rsp,0x20
   14003a3df:	pop    rdi
   14003a3e0:	pop    rsi
   14003a3e1:	pop    rbp
   14003a3e2:	ret    
   14003a3e3:	mov    rcx,rdi
   14003a3e6:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a3eb:	add    rsp,0x20
   14003a3ef:	pop    rdi
   14003a3f0:	pop    rsi
   14003a3f1:	pop    rbp
   14003a3f2:	jmp    0x14003c7b0
   14003a3f7:	int3   
   14003a3f8:	int3   
   14003a3f9:	int3   
   14003a3fa:	int3   
   14003a3fb:	int3   
   14003a3fc:	int3   
   14003a3fd:	int3   
   14003a3fe:	int3   
   14003a3ff:	int3   
   14003a400:	rex push rsi
   14003a402:	push   rdi
   14003a403:	sub    rsp,0x48
   14003a407:	mov    rax,QWORD PTR [rip+0x20b72]        # 0x14005af80
   14003a40e:	xor    rax,rsp
   14003a411:	mov    QWORD PTR [rsp+0x30],rax
   14003a416:	cmp    cx,0xffff
   14003a41b:	mov    rdi,rdx
   14003a41e:	movzx  esi,cx
   14003a421:	mov    WORD PTR [rsp+0x24],cx
   14003a426:	je     0x14003a631
   14003a42c:	mov    eax,DWORD PTR [rdx+0x18]
   14003a42f:	test   al,0x1
   14003a431:	jne    0x14003a443
   14003a433:	test   al,al
   14003a435:	jns    0x14003a631
   14003a43b:	test   al,0x2
   14003a43d:	jne    0x14003a631
   14003a443:	cmp    QWORD PTR [rdx+0x10],0x0
   14003a448:	jne    0x14003a452
   14003a44a:	mov    rcx,rdx
   14003a44d:	call   0x140038260
   14003a452:	test   BYTE PTR [rdi+0x18],0x40
   14003a456:	mov    QWORD PTR [rsp+0x70],rbx
   14003a45b:	mov    QWORD PTR [rsp+0x78],rbp
   14003a460:	mov    QWORD PTR [rsp+0x40],r12
   14003a465:	jne    0x14003a5db
   14003a46b:	mov    rcx,rdi
   14003a46e:	call   0x1400385a0
   14003a473:	lea    rbp,[rip+0x20eb6]        # 0x14005b330
   14003a47a:	lea    r12,[rip+0x28b3f]        # 0x140062fc0
   14003a481:	cmp    eax,0xffffffff
   14003a484:	je     0x14003a4c2
   14003a486:	mov    rcx,rdi
   14003a489:	call   0x1400385a0
   14003a48e:	cmp    eax,0xfffffffe
   14003a491:	je     0x14003a4c2
   14003a493:	mov    rcx,rdi
   14003a496:	call   0x1400385a0
   14003a49b:	movsxd rcx,eax
   14003a49e:	sar    rcx,0x5
   14003a4a2:	mov    rbx,QWORD PTR [r12+rcx*8]
   14003a4a6:	mov    rcx,rdi
   14003a4a9:	call   0x1400385a0
   14003a4ae:	mov    r11d,eax
   14003a4b1:	and    r11d,0x1f
   14003a4b5:	lea    rax,[r11+r11*4]
   14003a4b9:	shl    rax,0x4
   14003a4bd:	add    rax,rbx
   14003a4c0:	jmp    0x14003a4c5
   14003a4c2:	mov    rax,rbp
   14003a4c5:	test   BYTE PTR [rax+0x8],0x80
   14003a4c9:	je     0x14003a5db
   14003a4cf:	mov    rcx,rdi
   14003a4d2:	call   0x1400385a0
   14003a4d7:	cmp    eax,0xffffffff
   14003a4da:	je     0x14003a516
   14003a4dc:	mov    rcx,rdi
   14003a4df:	call   0x1400385a0
   14003a4e4:	cmp    eax,0xfffffffe
   14003a4e7:	je     0x14003a516
   14003a4e9:	mov    rcx,rdi
   14003a4ec:	call   0x1400385a0
   14003a4f1:	movsxd rcx,eax
   14003a4f4:	sar    rcx,0x5
   14003a4f8:	mov    rbx,QWORD PTR [r12+rcx*8]
   14003a4fc:	mov    rcx,rdi
   14003a4ff:	call   0x1400385a0
   14003a504:	mov    r11d,eax
   14003a507:	and    r11d,0x1f
   14003a50b:	lea    rbp,[r11+r11*4]
   14003a50f:	shl    rbp,0x4
   14003a513:	add    rbp,rbx
   14003a516:	test   BYTE PTR [rbp+0x38],0x7f
   14003a51a:	je     0x14003a537
   14003a51c:	movzx  eax,BYTE PTR [rsp+0x25]
   14003a521:	mov    r8d,0x2
   14003a527:	mov    BYTE PTR [rsp+0x28],sil
   14003a52c:	mov    BYTE PTR [rsp+0x29],al
   14003a530:	mov    DWORD PTR [rsp+0x20],r8d
   14003a535:	jmp    0x14003a55d
   14003a537:	lea    rdx,[rsp+0x28]
   14003a53c:	lea    rcx,[rsp+0x20]
   14003a541:	movzx  r9d,si
   14003a545:	mov    r8d,0x5
   14003a54b:	call   0x14003b040
   14003a550:	test   eax,eax
   14003a552:	jne    0x14003a610
   14003a558:	mov    r8d,DWORD PTR [rsp+0x20]
   14003a55d:	mov    rax,QWORD PTR [rdi+0x10]
   14003a561:	movsxd rdx,r8d
   14003a564:	add    rdx,rax
   14003a567:	cmp    QWORD PTR [rdi],rdx
   14003a56a:	jae    0x14003a583
   14003a56c:	cmp    DWORD PTR [rdi+0x8],0x0
   14003a570:	jne    0x14003a610
   14003a576:	cmp    r8d,DWORD PTR [rdi+0x24]
   14003a57a:	jg     0x14003a610
   14003a580:	mov    QWORD PTR [rdi],rdx
   14003a583:	lea    eax,[r8-0x1]
   14003a587:	test   eax,eax
   14003a589:	movsxd rdx,eax
   14003a58c:	js     0x14003a5a9
   14003a58e:	xchg   ax,ax
   14003a590:	add    QWORD PTR [rdi],0xffffffffffffffff
   14003a594:	movzx  eax,BYTE PTR [rsp+rdx*1+0x28]
   14003a599:	sub    rdx,0x1
   14003a59d:	mov    rcx,QWORD PTR [rdi]
   14003a5a0:	mov    BYTE PTR [rcx],al
   14003a5a2:	jns    0x14003a590
   14003a5a4:	mov    r8d,DWORD PTR [rsp+0x20]
   14003a5a9:	add    DWORD PTR [rdi+0x8],r8d
   14003a5ad:	and    DWORD PTR [rdi+0x18],0xffffffef
   14003a5b1:	or     DWORD PTR [rdi+0x18],0x1
   14003a5b5:	mov    ax,si
   14003a5b8:	mov    rbp,QWORD PTR [rsp+0x78]
   14003a5bd:	mov    rbx,QWORD PTR [rsp+0x70]
   14003a5c2:	mov    r12,QWORD PTR [rsp+0x40]
   14003a5c7:	mov    rcx,QWORD PTR [rsp+0x30]
   14003a5cc:	xor    rcx,rsp
   14003a5cf:	call   0x140029b40
   14003a5d4:	add    rsp,0x48
   14003a5d8:	pop    rdi
   14003a5d9:	pop    rsi
   14003a5da:	ret    
   14003a5db:	mov    rax,QWORD PTR [rdi+0x10]
   14003a5df:	add    rax,0x2
   14003a5e3:	cmp    QWORD PTR [rdi],rax
   14003a5e6:	jae    0x14003a5f7
   14003a5e8:	cmp    DWORD PTR [rdi+0x8],0x0
   14003a5ec:	jne    0x14003a610
   14003a5ee:	cmp    DWORD PTR [rdi+0x24],0x2
   14003a5f2:	jb     0x14003a610
   14003a5f4:	mov    QWORD PTR [rdi],rax
   14003a5f7:	test   BYTE PTR [rdi+0x18],0x40
   14003a5fb:	je     0x14003a616
   14003a5fd:	add    QWORD PTR [rdi],0xfffffffffffffffe
   14003a601:	mov    rax,QWORD PTR [rdi]
   14003a604:	cmp    WORD PTR [rax],si
   14003a607:	je     0x14003a620
   14003a609:	add    rax,0x2
   14003a60d:	mov    QWORD PTR [rdi],rax
   14003a610:	or     ax,0xffff
   14003a614:	jmp    0x14003a5b8
   14003a616:	add    QWORD PTR [rdi],0xfffffffffffffffe
   14003a61a:	mov    rax,QWORD PTR [rdi]
   14003a61d:	mov    WORD PTR [rax],si
   14003a620:	add    DWORD PTR [rdi+0x8],0x2
   14003a624:	and    DWORD PTR [rdi+0x18],0xffffffef
   14003a628:	or     DWORD PTR [rdi+0x18],0x1
   14003a62c:	mov    ax,si
   14003a62f:	jmp    0x14003a5b8
   14003a631:	or     ax,0xffff
   14003a635:	jmp    0x14003a5c7
   14003a637:	int3   
   14003a638:	int3   
   14003a639:	int3   
   14003a63a:	int3   
   14003a63b:	int3   
   14003a63c:	int3   
   14003a63d:	int3   
   14003a63e:	int3   
   14003a63f:	int3   
   14003a640:	mov    WORD PTR [rsp+0x8],cx
   14003a645:	push   rbx
   14003a646:	sub    rsp,0x60
   14003a64a:	cmp    cx,0xffff
   14003a64f:	movzx  ebx,dx
   14003a652:	jne    0x14003a665
   14003a654:	xor    cx,cx
   14003a657:	movzx  eax,cx
   14003a65a:	movzx  ecx,dx
   14003a65d:	and    eax,ecx
   14003a65f:	add    rsp,0x60
   14003a663:	pop    rbx
   14003a664:	ret    
   14003a665:	cmp    cx,0x100
   14003a66a:	jae    0x14003a68b
   14003a66c:	mov    rax,QWORD PTR [rip+0x21bf5]        # 0x14005c268
   14003a673:	movzx  ecx,cx
   14003a676:	movzx  ecx,WORD PTR [rax+rcx*2]
   14003a67a:	and    cx,bx
   14003a67d:	movzx  eax,cx
   14003a680:	movzx  ecx,bx
   14003a683:	and    eax,ecx
   14003a685:	add    rsp,0x60
   14003a689:	pop    rbx
   14003a68a:	ret    
   14003a68b:	test   r8,r8
   14003a68e:	mov    BYTE PTR [rsp+0x58],0x0
   14003a693:	jne    0x14003a72b
   14003a699:	call   0x14002e210
   14003a69e:	mov    QWORD PTR [rsp+0x50],rax
   14003a6a3:	mov    rdx,QWORD PTR [rax+0xc0]
   14003a6aa:	cmp    rdx,QWORD PTR [rip+0x2139f]        # 0x14005ba50
   14003a6b1:	mov    QWORD PTR [rsp+0x40],rdx
   14003a6b6:	mov    r8,QWORD PTR [rax+0xb8]
   14003a6bd:	mov    QWORD PTR [rsp+0x48],r8
   14003a6c2:	je     0x14003a6e9
   14003a6c4:	mov    ecx,DWORD PTR [rax+0xc8]
   14003a6ca:	test   DWORD PTR [rip+0x21208],ecx        # 0x14005b8d8
   14003a6d0:	jne    0x14003a6e9
   14003a6d2:	call   0x140031a10
   14003a6d7:	mov    r8,QWORD PTR [rsp+0x48]
   14003a6dc:	mov    rdx,rax
   14003a6df:	mov    QWORD PTR [rsp+0x40],rax
   14003a6e4:	mov    rax,QWORD PTR [rsp+0x50]
   14003a6e9:	cmp    r8,QWORD PTR [rip+0x210e0]        # 0x14005b7d0
   14003a6f0:	je     0x14003a714
   14003a6f2:	mov    ecx,DWORD PTR [rax+0xc8]
   14003a6f8:	test   DWORD PTR [rip+0x211da],ecx        # 0x14005b8d8
   14003a6fe:	jne    0x14003a714
   14003a700:	call   0x140030ec0
   14003a705:	mov    rdx,QWORD PTR [rsp+0x40]
   14003a70a:	mov    QWORD PTR [rsp+0x48],rax
   14003a70f:	mov    rax,QWORD PTR [rsp+0x50]
   14003a714:	test   BYTE PTR [rax+0xc8],0x2
   14003a71b:	jne    0x14003a743
   14003a71d:	or     DWORD PTR [rax+0xc8],0x2
   14003a724:	mov    BYTE PTR [rsp+0x58],0x1
   14003a729:	jmp    0x14003a73e
   14003a72b:	mov    rax,QWORD PTR [r8]
   14003a72e:	lea    rcx,[rsp+0x40]
   14003a733:	mov    QWORD PTR [rcx],rax
   14003a736:	mov    rax,QWORD PTR [r8+0x8]
   14003a73a:	mov    QWORD PTR [rcx+0x8],rax
   14003a73e:	mov    rdx,QWORD PTR [rsp+0x40]
   14003a743:	mov    eax,DWORD PTR [rdx+0x14]
   14003a746:	mov    r9d,0x1
   14003a74c:	lea    r8,[rsp+0x70]
   14003a751:	mov    DWORD PTR [rsp+0x30],eax
   14003a755:	mov    eax,DWORD PTR [rdx+0x4]
   14003a758:	lea    rcx,[rsp+0x40]
   14003a75d:	mov    DWORD PTR [rsp+0x28],eax
   14003a761:	lea    rax,[rsp+0x78]
   14003a766:	mov    edx,r9d
   14003a769:	mov    QWORD PTR [rsp+0x20],rax
   14003a76e:	call   0x14003d000
   14003a773:	mov    cx,WORD PTR [rsp+0x78]
   14003a778:	xor    edx,edx
   14003a77a:	test   eax,eax
   14003a77c:	cmove  cx,dx
   14003a780:	cmp    BYTE PTR [rsp+0x58],dl
   14003a784:	mov    WORD PTR [rsp+0x78],cx
   14003a789:	je     0x14003a79c
   14003a78b:	mov    rax,QWORD PTR [rsp+0x50]
   14003a790:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003a797:	mov    cx,WORD PTR [rsp+0x78]
   14003a79c:	movzx  eax,cx
   14003a79f:	movzx  ecx,bx
   14003a7a2:	and    eax,ecx
   14003a7a4:	add    rsp,0x60
   14003a7a8:	pop    rbx
   14003a7a9:	ret    
   14003a7aa:	int3   
   14003a7ab:	int3   
   14003a7ac:	int3   
   14003a7ad:	int3   
   14003a7ae:	int3   
   14003a7af:	int3   
   14003a7b0:	mov    WORD PTR [rsp+0x8],cx
   14003a7b5:	push   rbx
   14003a7b6:	sub    rsp,0x40
   14003a7ba:	cmp    cx,0xffff
   14003a7bf:	movzx  ebx,dx
   14003a7c2:	jne    0x14003a7cc
   14003a7c4:	xor    eax,eax
   14003a7c6:	add    rsp,0x40
   14003a7ca:	pop    rbx
   14003a7cb:	ret    
   14003a7cc:	cmp    cx,0x100
   14003a7d1:	jae    0x14003a7ec
   14003a7d3:	mov    rax,QWORD PTR [rip+0x21a8e]        # 0x14005c268
   14003a7da:	movzx  ecx,cx
   14003a7dd:	movzx  eax,WORD PTR [rax+rcx*2]
   14003a7e1:	movzx  ecx,bx
   14003a7e4:	and    eax,ecx
   14003a7e6:	add    rsp,0x40
   14003a7ea:	pop    rbx
   14003a7eb:	ret    
   14003a7ec:	cmp    DWORD PTR [rip+0x27065],0x0        # 0x140061858
   14003a7f3:	jne    0x14003a832
   14003a7f5:	mov    eax,DWORD PTR [rip+0x21109]        # 0x14005b904
   14003a7fb:	mov    r9d,0x1
   14003a801:	lea    r8,[rsp+0x50]
   14003a806:	mov    DWORD PTR [rsp+0x30],eax
   14003a80a:	mov    eax,DWORD PTR [rip+0x210e4]        # 0x14005b8f4
   14003a810:	lea    rcx,[rip+0x21249]        # 0x14005ba60
   14003a817:	mov    DWORD PTR [rsp+0x28],eax
   14003a81b:	lea    rax,[rsp+0x60]
   14003a820:	mov    edx,r9d
   14003a823:	mov    QWORD PTR [rsp+0x20],rax
   14003a828:	call   0x14003d000
   14003a82d:	movzx  ecx,WORD PTR [rsp+0x50]
   14003a832:	xor    r8d,r8d
   14003a835:	movzx  edx,bx
   14003a838:	call   0x14003a640
   14003a83d:	add    rsp,0x40
   14003a841:	pop    rbx
   14003a842:	ret    
   14003a843:	int3   
   14003a844:	int3   
   14003a845:	int3   
   14003a846:	int3   
   14003a847:	int3   
   14003a848:	int3   
   14003a849:	int3   
   14003a84a:	int3   
   14003a84b:	int3   
   14003a84c:	int3   
   14003a84d:	int3   
   14003a84e:	int3   
   14003a84f:	int3   
   14003a850:	rex push rbp
   14003a852:	push   rsi
   14003a853:	push   r12
   14003a855:	push   r14
   14003a857:	sub    rsp,0xa8
   14003a85e:	mov    rax,QWORD PTR [rip+0x2071b]        # 0x14005af80
   14003a865:	xor    rax,rsp
   14003a868:	mov    QWORD PTR [rsp+0x70],rax
   14003a86d:	xor    ebp,ebp
   14003a86f:	test   rcx,rcx
   14003a872:	mov    r12,r8
   14003a875:	mov    rsi,rdx
   14003a878:	mov    r14,rcx
   14003a87b:	mov    DWORD PTR [rsp+0x40],ebp
   14003a87f:	je     0x14003a88d
   14003a881:	test   r8,r8
   14003a884:	jne    0x14003a88d
   14003a886:	xor    eax,eax
   14003a888:	jmp    0x14003ac27
   14003a88d:	test   rdx,rdx
   14003a890:	jne    0x14003a8ba
   14003a892:	call   0x14002bca0
   14003a897:	xor    r9d,r9d
   14003a89a:	xor    r8d,r8d
   14003a89d:	xor    edx,edx
   14003a89f:	xor    ecx,ecx
   14003a8a1:	mov    QWORD PTR [rsp+0x20],rbp
   14003a8a6:	mov    DWORD PTR [rax],0x16
   14003a8ac:	call   0x14002e900
   14003a8b1:	or     rax,0xffffffffffffffff
   14003a8b5:	jmp    0x14003ac27
   14003a8ba:	cmp    r8,0x7fffffff
   14003a8c1:	ja     0x14003a892
   14003a8c3:	mov    QWORD PTR [rsp+0xa0],rbx
   14003a8cb:	mov    QWORD PTR [rsp+0x98],rdi
   14003a8d3:	mov    QWORD PTR [rsp+0x90],r13
   14003a8db:	xor    r13b,r13b
   14003a8de:	test   r9,r9
   14003a8e1:	mov    QWORD PTR [rsp+0x88],r15
   14003a8e9:	mov    BYTE PTR [rsp+0x60],r13b
   14003a8ee:	jne    0x14003a95a
   14003a8f0:	call   0x14002e210
   14003a8f5:	mov    rbx,rax
   14003a8f8:	mov    r15,QWORD PTR [rax+0xc0]
   14003a8ff:	mov    rdi,QWORD PTR [rax+0xb8]
   14003a906:	cmp    r15,QWORD PTR [rip+0x21143]        # 0x14005ba50
   14003a90d:	je     0x14003a925
   14003a90f:	mov    eax,DWORD PTR [rax+0xc8]
   14003a915:	test   DWORD PTR [rip+0x20fbd],eax        # 0x14005b8d8
   14003a91b:	jne    0x14003a925
   14003a91d:	call   0x140031a10
   14003a922:	mov    r15,rax
   14003a925:	cmp    rdi,QWORD PTR [rip+0x20ea4]        # 0x14005b7d0
   14003a92c:	je     0x14003a941
   14003a92e:	mov    eax,DWORD PTR [rbx+0xc8]
   14003a934:	test   DWORD PTR [rip+0x20f9e],eax        # 0x14005b8d8
   14003a93a:	jne    0x14003a941
   14003a93c:	call   0x140030ec0
   14003a941:	mov    ecx,DWORD PTR [rbx+0xc8]
   14003a947:	test   cl,0x2
   14003a94a:	jne    0x14003a97d
   14003a94c:	or     ecx,0x2
   14003a94f:	mov    r13b,0x1
   14003a952:	mov    DWORD PTR [rbx+0xc8],ecx
   14003a958:	jmp    0x14003a97d
   14003a95a:	mov    rax,QWORD PTR [r9]
   14003a95d:	lea    rcx,[rsp+0x48]
   14003a962:	mov    QWORD PTR [rcx],rax
   14003a965:	mov    rax,QWORD PTR [r9+0x8]
   14003a969:	mov    QWORD PTR [rcx+0x8],rax
   14003a96d:	movzx  r13d,BYTE PTR [rsp+0x60]
   14003a973:	mov    rbx,QWORD PTR [rsp+0x58]
   14003a978:	mov    r15,QWORD PTR [rsp+0x48]
   14003a97d:	test   r14,r14
   14003a980:	je     0x14003ab7b
   14003a986:	cmp    DWORD PTR [r15+0x14],ebp
   14003a98a:	jne    0x14003a9cd
   14003a98c:	test   r12,r12
   14003a98f:	je     0x14003a9b9
   14003a991:	cmp    WORD PTR [rsi],0xff
   14003a996:	ja     0x14003ab6b
   14003a99c:	movzx  eax,BYTE PTR [rsi]
   14003a99f:	add    rsi,0x2
   14003a9a3:	mov    BYTE PTR [r14+rbp*1],al
   14003a9a7:	movzx  eax,WORD PTR [rsi-0x2]
   14003a9ab:	test   ax,ax
   14003a9ae:	je     0x14003a9b9
   14003a9b0:	add    rbp,0x1
   14003a9b4:	cmp    rbp,r12
   14003a9b7:	jb     0x14003a991
   14003a9b9:	test   r13b,r13b
   14003a9bc:	je     0x14003a9c5
   14003a9be:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003a9c5:	mov    rax,rbp
   14003a9c8:	jmp    0x14003ac07
   14003a9cd:	cmp    DWORD PTR [r15+0x10c],0x1
   14003a9d5:	jne    0x14003aa62
   14003a9db:	test   r12,r12
   14003a9de:	je     0x14003aa0e
   14003a9e0:	mov    rax,rsi
   14003a9e3:	mov    rcx,r12
   14003a9e6:	cmp    WORD PTR [rax],bp
   14003a9e9:	je     0x14003a9f7
   14003a9eb:	add    rax,0x2
   14003a9ef:	sub    rcx,0x1
   14003a9f3:	jne    0x14003a9e6
   14003a9f5:	jmp    0x14003aa0e
   14003a9f7:	test   rcx,rcx
   14003a9fa:	je     0x14003aa0e
   14003a9fc:	cmp    WORD PTR [rax],bp
   14003a9ff:	jne    0x14003aa0e
   14003aa01:	mov    r12,rax
   14003aa04:	sub    r12,rsi
   14003aa07:	sar    r12,1
   14003aa0a:	add    r12,0x1
   14003aa0e:	mov    ecx,DWORD PTR [r15+0x4]
   14003aa12:	lea    rax,[rsp+0x40]
   14003aa17:	mov    r9d,r12d
   14003aa1a:	mov    QWORD PTR [rsp+0x38],rax
   14003aa1f:	mov    QWORD PTR [rsp+0x30],rbp
   14003aa24:	mov    r8,rsi
   14003aa27:	xor    edx,edx
   14003aa29:	mov    DWORD PTR [rsp+0x28],r12d
   14003aa2e:	mov    QWORD PTR [rsp+0x20],r14
   14003aa33:	call   QWORD PTR [rip+0x89ff]        # 0x140043438
   14003aa39:	cdqe   
   14003aa3b:	test   rax,rax
   14003aa3e:	je     0x14003ab6b
   14003aa44:	cmp    DWORD PTR [rsp+0x40],ebp
   14003aa48:	jne    0x14003ab6b
   14003aa4e:	cmp    BYTE PTR [r14+rax*1-0x1],bpl
   14003aa53:	jne    0x14003abde
   14003aa59:	sub    rax,0x1
   14003aa5d:	jmp    0x14003abde
   14003aa62:	mov    ecx,DWORD PTR [r15+0x4]
   14003aa66:	lea    rax,[rsp+0x40]
   14003aa6b:	or     r9d,0xffffffff
   14003aa6f:	mov    QWORD PTR [rsp+0x38],rax
   14003aa74:	mov    QWORD PTR [rsp+0x30],rbp
   14003aa79:	mov    r8,rsi
   14003aa7c:	xor    edx,edx
   14003aa7e:	mov    DWORD PTR [rsp+0x28],r12d
   14003aa83:	mov    QWORD PTR [rsp+0x20],r14
   14003aa88:	call   QWORD PTR [rip+0x89aa]        # 0x140043438
   14003aa8e:	test   eax,eax
   14003aa90:	movsxd rdi,eax
   14003aa93:	je     0x14003aaa8
   14003aa95:	cmp    DWORD PTR [rsp+0x40],ebp
   14003aa99:	jne    0x14003ab6b
   14003aa9f:	lea    rax,[rdi-0x1]
   14003aaa3:	jmp    0x14003abde
   14003aaa8:	cmp    DWORD PTR [rsp+0x40],ebp
   14003aaac:	jne    0x14003ab6b
   14003aab2:	call   QWORD PTR [rip+0x8a30]        # 0x1400434e8
   14003aab8:	cmp    eax,0x7a
   14003aabb:	jne    0x14003ab6b
   14003aac1:	cmp    rdi,r12
   14003aac4:	jae    0x14003ab57
   14003aaca:	data16 xchg ax,ax
   14003aacd:	data16 xchg ax,ax
   14003aad0:	mov    ecx,DWORD PTR [r15+0x4]
   14003aad4:	lea    rax,[rsp+0x40]
   14003aad9:	mov    r9d,0x1
   14003aadf:	mov    QWORD PTR [rsp+0x38],rax
   14003aae4:	mov    eax,DWORD PTR [r15+0x10c]
   14003aaeb:	mov    QWORD PTR [rsp+0x30],rbp
   14003aaf0:	mov    DWORD PTR [rsp+0x28],eax
   14003aaf4:	lea    rax,[rsp+0x68]
   14003aaf9:	mov    r8,rsi
   14003aafc:	xor    edx,edx
   14003aafe:	mov    QWORD PTR [rsp+0x20],rax
   14003ab03:	call   QWORD PTR [rip+0x892f]        # 0x140043438
   14003ab09:	test   eax,eax
   14003ab0b:	je     0x14003ab6b
   14003ab0d:	cmp    DWORD PTR [rsp+0x40],ebp
   14003ab11:	jne    0x14003ab6b
   14003ab13:	test   eax,eax
   14003ab15:	js     0x14003ab6b
   14003ab17:	cmp    eax,0x5
   14003ab1a:	ja     0x14003ab6b
   14003ab1c:	movsxd rdx,eax
   14003ab1f:	lea    rax,[rdx+rdi*1]
   14003ab23:	cmp    rax,r12
   14003ab26:	ja     0x14003ab57
   14003ab28:	test   rdx,rdx
   14003ab2b:	mov    rcx,rbp
   14003ab2e:	jle    0x14003ab4a
   14003ab30:	movzx  eax,BYTE PTR [rsp+rcx*1+0x68]
   14003ab35:	test   al,al
   14003ab37:	mov    BYTE PTR [r14+rdi*1],al
   14003ab3b:	je     0x14003ab57
   14003ab3d:	add    rcx,0x1
   14003ab41:	add    rdi,0x1
   14003ab45:	cmp    rcx,rdx
   14003ab48:	jl     0x14003ab30
   14003ab4a:	add    rsi,0x2
   14003ab4e:	cmp    rdi,r12
   14003ab51:	jb     0x14003aad0
   14003ab57:	test   r13b,r13b
   14003ab5a:	je     0x14003ab63
   14003ab5c:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003ab63:	mov    rax,rdi
   14003ab66:	jmp    0x14003ac07
   14003ab6b:	call   0x14002bca0
   14003ab70:	test   r13b,r13b
   14003ab73:	mov    DWORD PTR [rax],0x2a
   14003ab79:	jmp    0x14003abfa
   14003ab7b:	cmp    DWORD PTR [r15+0x14],ebp
   14003ab7f:	jne    0x14003aba2
   14003ab81:	or     rcx,0xffffffffffffffff
   14003ab85:	xor    eax,eax
   14003ab87:	mov    rdi,rsi
   14003ab8a:	repnz scas ax,WORD PTR es:[rdi]
   14003ab8d:	test   r13b,r13b
   14003ab90:	not    rcx
   14003ab93:	je     0x14003ab9c
   14003ab95:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003ab9c:	lea    rax,[rcx-0x1]
   14003aba0:	jmp    0x14003ac07
   14003aba2:	mov    ecx,DWORD PTR [r15+0x4]
   14003aba6:	lea    rax,[rsp+0x40]
   14003abab:	or     r9d,0xffffffff
   14003abaf:	mov    QWORD PTR [rsp+0x38],rax
   14003abb4:	mov    QWORD PTR [rsp+0x30],rbp
   14003abb9:	mov    r8,rsi
   14003abbc:	xor    edx,edx
   14003abbe:	mov    DWORD PTR [rsp+0x28],ebp
   14003abc2:	mov    QWORD PTR [rsp+0x20],rbp
   14003abc7:	call   QWORD PTR [rip+0x886b]        # 0x140043438
   14003abcd:	cdqe   
   14003abcf:	test   rax,rax
   14003abd2:	je     0x14003abec
   14003abd4:	cmp    DWORD PTR [rsp+0x40],ebp
   14003abd8:	jne    0x14003abec
   14003abda:	add    rax,0xffffffffffffffff
   14003abde:	test   r13b,r13b
   14003abe1:	je     0x14003ac07
   14003abe3:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003abea:	jmp    0x14003ac07
   14003abec:	call   0x14002bca0
   14003abf1:	test   r13b,r13b
   14003abf4:	mov    DWORD PTR [rax],0x2a
   14003abfa:	je     0x14003ac03
   14003abfc:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003ac03:	or     rax,0xffffffffffffffff
   14003ac07:	mov    r13,QWORD PTR [rsp+0x90]
   14003ac0f:	mov    rdi,QWORD PTR [rsp+0x98]
   14003ac17:	mov    rbx,QWORD PTR [rsp+0xa0]
   14003ac1f:	mov    r15,QWORD PTR [rsp+0x88]
   14003ac27:	mov    rcx,QWORD PTR [rsp+0x70]
   14003ac2c:	xor    rcx,rsp
   14003ac2f:	call   0x140029b40
   14003ac34:	add    rsp,0xa8
   14003ac3b:	pop    r14
   14003ac3d:	pop    r12
   14003ac3f:	pop    rsi
   14003ac40:	pop    rbp
   14003ac41:	ret    
   14003ac42:	int3   
   14003ac43:	int3   
   14003ac44:	int3   
   14003ac45:	int3   
   14003ac46:	int3   
   14003ac47:	int3   
   14003ac48:	int3   
   14003ac49:	int3   
   14003ac4a:	int3   
   14003ac4b:	int3   
   14003ac4c:	int3   
   14003ac4d:	int3   
   14003ac4e:	int3   
   14003ac4f:	int3   
   14003ac50:	mov    QWORD PTR [rsp+0x8],rbx
   14003ac55:	mov    QWORD PTR [rsp+0x10],rbp
   14003ac5a:	mov    QWORD PTR [rsp+0x18],rsi
   14003ac5f:	push   rdi
   14003ac60:	sub    rsp,0x30
   14003ac64:	xor    esi,esi
   14003ac66:	test   rdx,rdx
   14003ac69:	mov    rax,r9
   14003ac6c:	mov    rdi,r8
   14003ac6f:	mov    rbx,rdx
   14003ac72:	mov    rbp,rcx
   14003ac75:	je     0x14003acbd
   14003ac77:	test   r8,r8
   14003ac7a:	je     0x14003acc2
   14003ac7c:	mov    BYTE PTR [rdx],sil
   14003ac7f:	test   rcx,rcx
   14003ac82:	je     0x14003ac87
   14003ac84:	mov    QWORD PTR [rcx],rsi
   14003ac87:	mov    r8,QWORD PTR [rsp+0x60]
   14003ac8c:	mov    r9,QWORD PTR [rsp+0x68]
   14003ac91:	mov    rdx,rax
   14003ac94:	cmp    r8,rdi
   14003ac97:	mov    rcx,rbx
   14003ac9a:	cmova  r8,rdi
   14003ac9e:	call   0x14003a850
   14003aca3:	cmp    rax,0xffffffffffffffff
   14003aca7:	jne    0x14003ace8
   14003aca9:	test   rbx,rbx
   14003acac:	je     0x14003acb1
   14003acae:	mov    BYTE PTR [rbx],sil
   14003acb1:	call   0x14002bca0
   14003acb6:	mov    eax,DWORD PTR [rax]
   14003acb8:	jmp    0x14003ad44
   14003acbd:	test   r8,r8
   14003acc0:	je     0x14003ac7f
   14003acc2:	call   0x14002bca0
   14003acc7:	xor    r9d,r9d
   14003acca:	xor    r8d,r8d
   14003accd:	xor    edx,edx
   14003accf:	xor    ecx,ecx
   14003acd1:	mov    QWORD PTR [rsp+0x20],rsi
   14003acd6:	mov    DWORD PTR [rax],0x16
   14003acdc:	call   0x14002e900
   14003ace1:	mov    eax,0x16
   14003ace6:	jmp    0x14003ad44
   14003ace8:	add    rax,0x1
   14003acec:	test   rbx,rbx
   14003acef:	je     0x14003ad39
   14003acf1:	cmp    rax,rdi
   14003acf4:	jbe    0x14003ad34
   14003acf6:	cmp    QWORD PTR [rsp+0x60],0xffffffffffffffff
   14003acfc:	je     0x14003ad2c
   14003acfe:	cmp    rdi,rax
   14003ad01:	mov    BYTE PTR [rbx],sil
   14003ad04:	ja     0x14003ad2c
   14003ad06:	call   0x14002bca0
   14003ad0b:	xor    r9d,r9d
   14003ad0e:	xor    r8d,r8d
   14003ad11:	xor    edx,edx
   14003ad13:	xor    ecx,ecx
   14003ad15:	mov    QWORD PTR [rsp+0x20],rsi
   14003ad1a:	mov    DWORD PTR [rax],0x22
   14003ad20:	call   0x14002e900
   14003ad25:	mov    eax,0x22
   14003ad2a:	jmp    0x14003ad44
   14003ad2c:	mov    rax,rdi
   14003ad2f:	mov    esi,0x50
   14003ad34:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14003ad39:	test   rbp,rbp
   14003ad3c:	je     0x14003ad42
   14003ad3e:	mov    QWORD PTR [rbp+0x0],rax
   14003ad42:	mov    eax,esi
   14003ad44:	mov    rbx,QWORD PTR [rsp+0x40]
   14003ad49:	mov    rbp,QWORD PTR [rsp+0x48]
   14003ad4e:	mov    rsi,QWORD PTR [rsp+0x50]
   14003ad53:	add    rsp,0x30
   14003ad57:	pop    rdi
   14003ad58:	ret    
   14003ad59:	int3   
   14003ad5a:	int3   
   14003ad5b:	int3   
   14003ad5c:	int3   
   14003ad5d:	int3   
   14003ad5e:	int3   
   14003ad5f:	int3   
   14003ad60:	sub    rsp,0x38
   14003ad64:	mov    rax,QWORD PTR [rsp+0x60]
   14003ad69:	mov    QWORD PTR [rsp+0x28],0x0
   14003ad72:	mov    QWORD PTR [rsp+0x20],rax
   14003ad77:	call   0x14003ac50
   14003ad7c:	add    rsp,0x38
   14003ad80:	ret    
   14003ad81:	int3   
   14003ad82:	int3   
   14003ad83:	int3   
   14003ad84:	int3   
   14003ad85:	int3   
   14003ad86:	int3   
   14003ad87:	int3   
   14003ad88:	int3   
   14003ad89:	int3   
   14003ad8a:	int3   
   14003ad8b:	int3   
   14003ad8c:	int3   
   14003ad8d:	int3   
   14003ad8e:	int3   
   14003ad8f:	int3   
   14003ad90:	mov    WORD PTR [rsp+0x20],r9w
   14003ad96:	push   rsi
   14003ad97:	push   rdi
   14003ad98:	push   r12
   14003ad9a:	push   r13
   14003ad9c:	sub    rsp,0x68
   14003ada0:	test   rdx,rdx
   14003ada3:	mov    rsi,r8
   14003ada6:	mov    r13,rdx
   14003ada9:	mov    rdi,rcx
   14003adac:	jne    0x14003adcb
   14003adae:	test   r8,r8
   14003adb1:	je     0x14003adcb
   14003adb3:	test   rcx,rcx
   14003adb6:	je     0x14003adbe
   14003adb8:	xor    r12d,r12d
   14003adbb:	mov    DWORD PTR [rcx],r12d
   14003adbe:	xor    eax,eax
   14003adc0:	add    rsp,0x68
   14003adc4:	pop    r13
   14003adc6:	pop    r12
   14003adc8:	pop    rdi
   14003adc9:	pop    rsi
   14003adca:	ret    
   14003adcb:	test   rcx,rcx
   14003adce:	je     0x14003add6
   14003add0:	mov    DWORD PTR [rcx],0xffffffff
   14003add6:	cmp    r8,0x7fffffff
   14003addd:	jbe    0x14003ae11
   14003addf:	call   0x14002bca0
   14003ade4:	xor    r12d,r12d
   14003ade7:	xor    r9d,r9d
   14003adea:	xor    r8d,r8d
   14003aded:	xor    edx,edx
   14003adef:	xor    ecx,ecx
   14003adf1:	mov    DWORD PTR [rax],0x16
   14003adf7:	mov    QWORD PTR [rsp+0x20],r12
   14003adfc:	call   0x14002e900
   14003ae01:	lea    eax,[r12+0x16]
   14003ae06:	add    rsp,0x68
   14003ae0a:	pop    r13
   14003ae0c:	pop    r12
   14003ae0e:	pop    rdi
   14003ae0f:	pop    rsi
   14003ae10:	ret    
   14003ae11:	mov    rcx,QWORD PTR [rsp+0xb0]
   14003ae19:	mov    QWORD PTR [rsp+0x90],rbx
   14003ae21:	mov    QWORD PTR [rsp+0xa0],rbp
   14003ae29:	xor    bpl,bpl
   14003ae2c:	test   rcx,rcx
   14003ae2f:	mov    QWORD PTR [rsp+0x60],r14
   14003ae34:	mov    BYTE PTR [rsp+0x58],bpl
   14003ae39:	jne    0x14003aeb9
   14003ae3b:	call   0x14002e210
   14003ae40:	mov    rbx,rax
   14003ae43:	mov    r14,QWORD PTR [rax+0xc0]
   14003ae4a:	mov    r12,QWORD PTR [rax+0xb8]
   14003ae51:	cmp    r14,QWORD PTR [rip+0x20bf8]        # 0x14005ba50
   14003ae58:	je     0x14003ae70
   14003ae5a:	mov    ecx,DWORD PTR [rax+0xc8]
   14003ae60:	test   DWORD PTR [rip+0x20a72],ecx        # 0x14005b8d8
   14003ae66:	jne    0x14003ae70
   14003ae68:	call   0x140031a10
   14003ae6d:	mov    r14,rax
   14003ae70:	cmp    r12,QWORD PTR [rip+0x20959]        # 0x14005b7d0
   14003ae77:	je     0x14003ae8c
   14003ae79:	mov    ecx,DWORD PTR [rbx+0xc8]
   14003ae7f:	test   DWORD PTR [rip+0x20a53],ecx        # 0x14005b8d8
   14003ae85:	jne    0x14003ae8c
   14003ae87:	call   0x140030ec0
   14003ae8c:	mov    ecx,DWORD PTR [rbx+0xc8]
   14003ae92:	test   cl,0x2
   14003ae95:	jne    0x14003aeae
   14003ae97:	or     ecx,0x2
   14003ae9a:	mov    bpl,0x1
   14003ae9d:	mov    DWORD PTR [rbx+0xc8],ecx
   14003aea3:	movzx  r9d,WORD PTR [rsp+0xa8]
   14003aeac:	jmp    0x14003aedb
   14003aeae:	mov    r9w,WORD PTR [rsp+0xa8]
   14003aeb7:	jmp    0x14003aedb
   14003aeb9:	mov    rax,QWORD PTR [rcx]
   14003aebc:	lea    rdx,[rsp+0x40]
   14003aec1:	mov    QWORD PTR [rdx],rax
   14003aec4:	mov    rax,QWORD PTR [rcx+0x8]
   14003aec8:	mov    QWORD PTR [rdx+0x8],rax
   14003aecc:	movzx  ebp,BYTE PTR [rsp+0x58]
   14003aed1:	mov    rbx,QWORD PTR [rsp+0x50]
   14003aed6:	mov    r14,QWORD PTR [rsp+0x40]
   14003aedb:	cmp    DWORD PTR [r14+0x14],0x0
   14003aee0:	jne    0x14003af49
   14003aee2:	cmp    r9w,0xff
   14003aee8:	jbe    0x14003af1b
   14003aeea:	test   r13,r13
   14003aeed:	je     0x14003af01
   14003aeef:	test   rsi,rsi
   14003aef2:	je     0x14003af01
   14003aef4:	mov    r8,rsi
   14003aef7:	xor    edx,edx
   14003aef9:	mov    rcx,r13
   14003aefc:	call   0x14002ac20
   14003af01:	call   0x14002bca0
   14003af06:	mov    DWORD PTR [rax],0x2a
   14003af0c:	call   0x14002bca0
   14003af11:	test   bpl,bpl
   14003af14:	mov    eax,DWORD PTR [rax]
   14003af16:	jmp    0x14003b016
   14003af1b:	test   r13,r13
   14003af1e:	je     0x14003af3c
   14003af20:	test   rsi,rsi
   14003af23:	jne    0x14003af38
   14003af25:	call   0x14002bca0
   14003af2a:	xor    r12d,r12d
   14003af2d:	mov    DWORD PTR [rax],0x22
   14003af33:	jmp    0x14003afda
   14003af38:	mov    BYTE PTR [r13+0x0],r9b
   14003af3c:	test   rdi,rdi
   14003af3f:	je     0x14003af9d
   14003af41:	mov    DWORD PTR [rdi],0x1
   14003af47:	jmp    0x14003af9d
   14003af49:	mov    ecx,DWORD PTR [r14+0x4]
   14003af4d:	xor    r12d,r12d
   14003af50:	lea    rax,[rsp+0x98]
   14003af58:	mov    QWORD PTR [rsp+0x38],rax
   14003af5d:	mov    QWORD PTR [rsp+0x30],r12
   14003af62:	lea    r8,[rsp+0xa8]
   14003af6a:	lea    r9d,[r12+0x1]
   14003af6f:	xor    edx,edx
   14003af71:	mov    DWORD PTR [rsp+0x28],esi
   14003af75:	mov    QWORD PTR [rsp+0x20],r13
   14003af7a:	mov    DWORD PTR [rsp+0x98],r12d
   14003af82:	call   QWORD PTR [rip+0x84b0]        # 0x140043438
   14003af88:	test   eax,eax
   14003af8a:	je     0x14003afad
   14003af8c:	cmp    DWORD PTR [rsp+0x98],r12d
   14003af94:	jne    0x14003b001
   14003af96:	test   rdi,rdi
   14003af99:	je     0x14003af9d
   14003af9b:	mov    DWORD PTR [rdi],eax
   14003af9d:	test   bpl,bpl
   14003afa0:	je     0x14003afa9
   14003afa2:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003afa9:	xor    eax,eax
   14003afab:	jmp    0x14003b01f
   14003afad:	call   QWORD PTR [rip+0x8535]        # 0x1400434e8
   14003afb3:	cmp    eax,0x7a
   14003afb6:	jne    0x14003b001
   14003afb8:	test   r13,r13
   14003afbb:	je     0x14003afcf
   14003afbd:	test   rsi,rsi
   14003afc0:	je     0x14003afcf
   14003afc2:	mov    r8,rsi
   14003afc5:	xor    edx,edx
   14003afc7:	mov    rcx,r13
   14003afca:	call   0x14002ac20
   14003afcf:	call   0x14002bca0
   14003afd4:	mov    DWORD PTR [rax],0x22
   14003afda:	xor    r9d,r9d
   14003afdd:	xor    r8d,r8d
   14003afe0:	xor    edx,edx
   14003afe2:	xor    ecx,ecx
   14003afe4:	mov    QWORD PTR [rsp+0x20],r12
   14003afe9:	call   0x14002e900
   14003afee:	test   bpl,bpl
   14003aff1:	je     0x14003affa
   14003aff3:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003affa:	mov    eax,0x22
   14003afff:	jmp    0x14003b01f
   14003b001:	call   0x14002bca0
   14003b006:	mov    DWORD PTR [rax],0x2a
   14003b00c:	call   0x14002bca0
   14003b011:	test   bpl,bpl
   14003b014:	mov    eax,DWORD PTR [rax]
   14003b016:	je     0x14003b01f
   14003b018:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003b01f:	mov    rbp,QWORD PTR [rsp+0xa0]
   14003b027:	mov    rbx,QWORD PTR [rsp+0x90]
   14003b02f:	mov    r14,QWORD PTR [rsp+0x60]
   14003b034:	add    rsp,0x68
   14003b038:	pop    r13
   14003b03a:	pop    r12
   14003b03c:	pop    rdi
   14003b03d:	pop    rsi
   14003b03e:	ret    
   14003b03f:	int3   
   14003b040:	sub    rsp,0x38
   14003b044:	mov    QWORD PTR [rsp+0x20],0x0
   14003b04d:	call   0x14003ad90
   14003b052:	add    rsp,0x38
   14003b056:	ret    
   14003b057:	int3   
   14003b058:	int3   
   14003b059:	int3   
   14003b05a:	int3   
   14003b05b:	int3   
   14003b05c:	int3   
   14003b05d:	int3   
   14003b05e:	int3   
   14003b05f:	int3   
   14003b060:	mov    ecx,0x2
   14003b065:	jmp    0x14002c0f0
   14003b06a:	int3   
   14003b06b:	int3   
   14003b06c:	int3   
   14003b06d:	int3   
   14003b06e:	int3   
   14003b06f:	int3   
   14003b070:	mov    r8,rcx
   14003b073:	movzx  eax,BYTE PTR [rcx]
   14003b076:	add    rcx,0x1
   14003b07a:	test   al,al
   14003b07c:	jne    0x14003b073
   14003b07e:	xchg   ax,ax
   14003b080:	sub    rcx,0x1
   14003b084:	cmp    rcx,r8
   14003b087:	je     0x14003b091
   14003b089:	cmp    BYTE PTR [rcx],dl
   14003b08b:	jne    0x14003b080
   14003b08d:	mov    rax,rcx
   14003b090:	ret    
   14003b091:	cmp    BYTE PTR [rcx],dl
   14003b093:	jne    0x14003b099
   14003b095:	mov    rax,rcx
   14003b098:	ret    
   14003b099:	xor    eax,eax
   14003b09b:	ret    
   14003b09c:	int3   
   14003b09d:	int3   
   14003b09e:	int3   
   14003b09f:	int3   
   14003b0a0:	rex push rbx
   14003b0a2:	sub    rsp,0x70
   14003b0a6:	test   rdx,rdx
   14003b0a9:	movsxd rbx,ecx
   14003b0ac:	mov    BYTE PTR [rsp+0x68],0x0
   14003b0b1:	jne    0x14003b15a
   14003b0b7:	call   0x14002e210
   14003b0bc:	mov    QWORD PTR [rsp+0x60],rax
   14003b0c1:	mov    r11,rax
   14003b0c4:	mov    rdx,QWORD PTR [rax+0xc0]
   14003b0cb:	cmp    rdx,QWORD PTR [rip+0x2097e]        # 0x14005ba50
   14003b0d2:	mov    QWORD PTR [rsp+0x50],rdx
   14003b0d7:	mov    rax,QWORD PTR [rax+0xb8]
   14003b0de:	mov    QWORD PTR [rsp+0x58],rax
   14003b0e3:	je     0x14003b10b
   14003b0e5:	mov    ecx,DWORD PTR [r11+0xc8]
   14003b0ec:	test   DWORD PTR [rip+0x207e6],ecx        # 0x14005b8d8
   14003b0f2:	jne    0x14003b10b
   14003b0f4:	call   0x140031a10
   14003b0f9:	mov    r11,QWORD PTR [rsp+0x60]
   14003b0fe:	mov    rdx,rax
   14003b101:	mov    QWORD PTR [rsp+0x50],rax
   14003b106:	mov    rax,QWORD PTR [rsp+0x58]
   14003b10b:	cmp    rax,QWORD PTR [rip+0x206be]        # 0x14005b7d0
   14003b112:	je     0x14003b137
   14003b114:	mov    ecx,DWORD PTR [r11+0xc8]
   14003b11b:	test   DWORD PTR [rip+0x207b7],ecx        # 0x14005b8d8
   14003b121:	jne    0x14003b137
   14003b123:	call   0x140030ec0
   14003b128:	mov    r11,QWORD PTR [rsp+0x60]
   14003b12d:	mov    rdx,QWORD PTR [rsp+0x50]
   14003b132:	mov    QWORD PTR [rsp+0x58],rax
   14003b137:	test   BYTE PTR [r11+0xc8],0x2
   14003b13f:	jne    0x14003b177
   14003b141:	or     DWORD PTR [r11+0xc8],0x2
   14003b149:	mov    r11,QWORD PTR [rsp+0x60]
   14003b14e:	mov    rdx,QWORD PTR [rsp+0x50]
   14003b153:	mov    BYTE PTR [rsp+0x68],0x1
   14003b158:	jmp    0x14003b177
   14003b15a:	mov    rax,QWORD PTR [rdx]
   14003b15d:	lea    rcx,[rsp+0x50]
   14003b162:	mov    QWORD PTR [rcx],rax
   14003b165:	mov    rax,QWORD PTR [rdx+0x8]
   14003b169:	mov    QWORD PTR [rcx+0x8],rax
   14003b16d:	mov    r11,QWORD PTR [rsp+0x60]
   14003b172:	mov    rdx,QWORD PTR [rsp+0x50]
   14003b177:	cmp    ebx,0x100
   14003b17d:	jae    0x14003b1f1
   14003b17f:	cmp    DWORD PTR [rdx+0x10c],0x1
   14003b186:	jle    0x14003b1a5
   14003b188:	lea    r8,[rsp+0x50]
   14003b18d:	mov    edx,0x1
   14003b192:	mov    ecx,ebx
   14003b194:	call   0x14003c5c0
   14003b199:	mov    r11,QWORD PTR [rsp+0x60]
   14003b19e:	mov    rdx,QWORD PTR [rsp+0x50]
   14003b1a3:	jmp    0x14003b1b2
   14003b1a5:	mov    rax,QWORD PTR [rdx+0x140]
   14003b1ac:	mov    al,BYTE PTR [rax+rbx*2]
   14003b1af:	and    eax,0x1
   14003b1b2:	test   eax,eax
   14003b1b4:	je     0x14003b1da
   14003b1b6:	cmp    BYTE PTR [rsp+0x68],0x0
   14003b1bb:	mov    rax,QWORD PTR [rdx+0x148]
   14003b1c2:	movzx  eax,BYTE PTR [rax+rbx*1]
   14003b1c6:	je     0x14003b300
   14003b1cc:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14003b1d4:	add    rsp,0x70
   14003b1d8:	pop    rbx
   14003b1d9:	ret    
   14003b1da:	cmp    BYTE PTR [rsp+0x68],0x0
   14003b1df:	je     0x14003b1e9
   14003b1e1:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14003b1e9:	mov    eax,ebx
   14003b1eb:	add    rsp,0x70
   14003b1ef:	pop    rbx
   14003b1f0:	ret    
   14003b1f1:	cmp    DWORD PTR [rdx+0x10c],0x1
   14003b1f8:	mov    QWORD PTR [rsp+0x90],rdi
   14003b200:	jle    0x14003b237
   14003b202:	mov    edi,ebx
   14003b204:	lea    rdx,[rsp+0x50]
   14003b209:	sar    edi,0x8
   14003b20c:	movzx  ecx,dil
   14003b210:	call   0x140038880
   14003b215:	test   eax,eax
   14003b217:	je     0x14003b237
   14003b219:	mov    BYTE PTR [rsp+0x80],dil
   14003b221:	mov    BYTE PTR [rsp+0x81],bl
   14003b228:	mov    BYTE PTR [rsp+0x82],0x0
   14003b230:	mov    edx,0x2
   14003b235:	jmp    0x14003b256
   14003b237:	call   0x14002bca0
   14003b23c:	mov    edx,0x1
   14003b241:	mov    DWORD PTR [rax],0x2a
   14003b247:	mov    BYTE PTR [rsp+0x80],bl
   14003b24e:	mov    BYTE PTR [rsp+0x81],0x0
   14003b256:	mov    rcx,QWORD PTR [rsp+0x50]
   14003b25b:	mov    DWORD PTR [rsp+0x40],0x1
   14003b263:	lea    r9,[rsp+0x80]
   14003b26b:	mov    eax,DWORD PTR [rcx+0x4]
   14003b26e:	mov    r8d,0x100
   14003b274:	mov    DWORD PTR [rsp+0x38],eax
   14003b278:	lea    rax,[rsp+0x88]
   14003b280:	mov    DWORD PTR [rsp+0x30],0x3
   14003b288:	mov    QWORD PTR [rsp+0x28],rax
   14003b28d:	mov    DWORD PTR [rsp+0x20],edx
   14003b291:	mov    edx,DWORD PTR [rcx+0x14]
   14003b294:	lea    rcx,[rsp+0x50]
   14003b299:	call   0x1400391f0
   14003b29e:	mov    rdi,QWORD PTR [rsp+0x90]
   14003b2a6:	test   eax,eax
   14003b2a8:	jne    0x14003b2c4
   14003b2aa:	cmp    BYTE PTR [rsp+0x68],al
   14003b2ae:	je     0x14003b2bc
   14003b2b0:	mov    rax,QWORD PTR [rsp+0x60]
   14003b2b5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003b2bc:	mov    eax,ebx
   14003b2be:	add    rsp,0x70
   14003b2c2:	pop    rbx
   14003b2c3:	ret    
   14003b2c4:	cmp    eax,0x1
   14003b2c7:	jne    0x14003b2d8
   14003b2c9:	movzx  eax,BYTE PTR [rsp+0x88]
   14003b2d1:	cmp    BYTE PTR [rsp+0x68],0x0
   14003b2d6:	jmp    0x14003b2f2
   14003b2d8:	movzx  eax,BYTE PTR [rsp+0x88]
   14003b2e0:	movzx  ecx,BYTE PTR [rsp+0x89]
   14003b2e8:	shl    eax,0x8
   14003b2eb:	or     eax,ecx
   14003b2ed:	cmp    BYTE PTR [rsp+0x68],0x0
   14003b2f2:	je     0x14003b300
   14003b2f4:	mov    rcx,QWORD PTR [rsp+0x60]
   14003b2f9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003b300:	add    rsp,0x70
   14003b304:	pop    rbx
   14003b305:	ret    
   14003b306:	int3   
   14003b307:	int3   
   14003b308:	int3   
   14003b309:	int3   
   14003b30a:	int3   
   14003b30b:	int3   
   14003b30c:	int3   
   14003b30d:	int3   
   14003b30e:	int3   
   14003b30f:	int3   
   14003b310:	cmp    DWORD PTR [rip+0x26541],0x0        # 0x140061858
   14003b317:	jne    0x14003b327
   14003b319:	lea    eax,[rcx-0x41]
   14003b31c:	cmp    eax,0x19
   14003b31f:	ja     0x14003b324
   14003b321:	add    ecx,0x20
   14003b324:	mov    eax,ecx
   14003b326:	ret    
   14003b327:	xor    edx,edx
   14003b329:	jmp    0x14003b0a0
   14003b32e:	int3   
   14003b32f:	int3   
   14003b330:	mov    QWORD PTR [rsp+0x20],rbx
   14003b335:	push   rdi
   14003b336:	sub    rsp,0x80
   14003b33d:	mov    rax,QWORD PTR [rip+0x1fc3c]        # 0x14005af80
   14003b344:	xor    rax,rsp
   14003b347:	mov    QWORD PTR [rsp+0x78],rax
   14003b34c:	test   r8,r8
   14003b34f:	mov    rbx,rdx
   14003b352:	mov    rdi,rcx
   14003b355:	mov    BYTE PTR [rsp+0x58],0x0
   14003b35a:	jne    0x14003b3f1
   14003b360:	call   0x14002e210
   14003b365:	mov    QWORD PTR [rsp+0x50],rax
   14003b36a:	mov    r11,rax
   14003b36d:	mov    rcx,QWORD PTR [rax+0xc0]
   14003b374:	cmp    rcx,QWORD PTR [rip+0x206d5]        # 0x14005ba50
   14003b37b:	mov    QWORD PTR [rsp+0x40],rcx
   14003b380:	mov    rax,QWORD PTR [rax+0xb8]
   14003b387:	mov    QWORD PTR [rsp+0x48],rax
   14003b38c:	je     0x14003b3b1
   14003b38e:	mov    ecx,DWORD PTR [r11+0xc8]
   14003b395:	test   DWORD PTR [rip+0x2053d],ecx        # 0x14005b8d8
   14003b39b:	jne    0x14003b3b1
   14003b39d:	call   0x140031a10
   14003b3a2:	mov    r11,QWORD PTR [rsp+0x50]
   14003b3a7:	mov    QWORD PTR [rsp+0x40],rax
   14003b3ac:	mov    rax,QWORD PTR [rsp+0x48]
   14003b3b1:	cmp    rax,QWORD PTR [rip+0x20418]        # 0x14005b7d0
   14003b3b8:	je     0x14003b3d8
   14003b3ba:	mov    eax,DWORD PTR [r11+0xc8]
   14003b3c1:	test   DWORD PTR [rip+0x20511],eax        # 0x14005b8d8
   14003b3c7:	jne    0x14003b3d8
   14003b3c9:	call   0x140030ec0
   14003b3ce:	mov    r11,QWORD PTR [rsp+0x50]
   14003b3d3:	mov    QWORD PTR [rsp+0x48],rax
   14003b3d8:	test   BYTE PTR [r11+0xc8],0x2
   14003b3e0:	jne    0x14003b404
   14003b3e2:	or     DWORD PTR [r11+0xc8],0x2
   14003b3ea:	mov    BYTE PTR [rsp+0x58],0x1
   14003b3ef:	jmp    0x14003b404
   14003b3f1:	mov    rax,QWORD PTR [r8]
   14003b3f4:	lea    rcx,[rsp+0x40]
   14003b3f9:	mov    QWORD PTR [rcx],rax
   14003b3fc:	mov    rax,QWORD PTR [r8+0x8]
   14003b400:	mov    QWORD PTR [rcx+0x8],rax
   14003b404:	lea    rax,[rsp+0x40]
   14003b409:	lea    rdx,[rsp+0x60]
   14003b40e:	lea    rcx,[rsp+0x68]
   14003b413:	mov    QWORD PTR [rsp+0x38],rax
   14003b418:	xor    eax,eax
   14003b41a:	xor    r9d,r9d
   14003b41d:	mov    DWORD PTR [rsp+0x30],eax
   14003b421:	mov    DWORD PTR [rsp+0x28],eax
   14003b425:	mov    r8,rbx
   14003b428:	mov    DWORD PTR [rsp+0x20],eax
   14003b42c:	call   0x14003dec0
   14003b431:	lea    rcx,[rsp+0x68]
   14003b436:	mov    rdx,rdi
   14003b439:	mov    ebx,eax
   14003b43b:	call   0x14003d140
   14003b440:	test   bl,0x3
   14003b443:	jne    0x14003b483
   14003b445:	cmp    eax,0x1
   14003b448:	jne    0x14003b464
   14003b44a:	cmp    BYTE PTR [rsp+0x58],0x0
   14003b44f:	je     0x14003b45d
   14003b451:	mov    rax,QWORD PTR [rsp+0x50]
   14003b456:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003b45d:	mov    eax,0x3
   14003b462:	jmp    0x14003b4a2
   14003b464:	cmp    eax,0x2
   14003b467:	jne    0x14003b48d
   14003b469:	cmp    BYTE PTR [rsp+0x58],0x0
   14003b46e:	je     0x14003b47c
   14003b470:	mov    rax,QWORD PTR [rsp+0x50]
   14003b475:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003b47c:	mov    eax,0x4
   14003b481:	jmp    0x14003b4a2
   14003b483:	test   bl,0x1
   14003b486:	jne    0x14003b469
   14003b488:	test   bl,0x2
   14003b48b:	jne    0x14003b44a
   14003b48d:	cmp    BYTE PTR [rsp+0x58],0x0
   14003b492:	je     0x14003b4a0
   14003b494:	mov    rax,QWORD PTR [rsp+0x50]
   14003b499:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003b4a0:	xor    eax,eax
   14003b4a2:	mov    rcx,QWORD PTR [rsp+0x78]
   14003b4a7:	xor    rcx,rsp
   14003b4aa:	call   0x140029b40
   14003b4af:	mov    rbx,QWORD PTR [rsp+0xa8]
   14003b4b7:	add    rsp,0x80
   14003b4be:	pop    rdi
   14003b4bf:	ret    
   14003b4c0:	mov    QWORD PTR [rsp+0x20],rbx
   14003b4c5:	push   rdi
   14003b4c6:	sub    rsp,0x80
   14003b4cd:	mov    rax,QWORD PTR [rip+0x1faac]        # 0x14005af80
   14003b4d4:	xor    rax,rsp
   14003b4d7:	mov    QWORD PTR [rsp+0x78],rax
   14003b4dc:	test   r8,r8
   14003b4df:	mov    rbx,rdx
   14003b4e2:	mov    rdi,rcx
   14003b4e5:	mov    BYTE PTR [rsp+0x58],0x0
   14003b4ea:	jne    0x14003b581
   14003b4f0:	call   0x14002e210
   14003b4f5:	mov    QWORD PTR [rsp+0x50],rax
   14003b4fa:	mov    r11,rax
   14003b4fd:	mov    rcx,QWORD PTR [rax+0xc0]
   14003b504:	cmp    rcx,QWORD PTR [rip+0x20545]        # 0x14005ba50
   14003b50b:	mov    QWORD PTR [rsp+0x40],rcx
   14003b510:	mov    rax,QWORD PTR [rax+0xb8]
   14003b517:	mov    QWORD PTR [rsp+0x48],rax
   14003b51c:	je     0x14003b541
   14003b51e:	mov    ecx,DWORD PTR [r11+0xc8]
   14003b525:	test   DWORD PTR [rip+0x203ad],ecx        # 0x14005b8d8
   14003b52b:	jne    0x14003b541
   14003b52d:	call   0x140031a10
   14003b532:	mov    r11,QWORD PTR [rsp+0x50]
   14003b537:	mov    QWORD PTR [rsp+0x40],rax
   14003b53c:	mov    rax,QWORD PTR [rsp+0x48]
   14003b541:	cmp    rax,QWORD PTR [rip+0x20288]        # 0x14005b7d0
   14003b548:	je     0x14003b568
   14003b54a:	mov    eax,DWORD PTR [r11+0xc8]
   14003b551:	test   DWORD PTR [rip+0x20381],eax        # 0x14005b8d8
   14003b557:	jne    0x14003b568
   14003b559:	call   0x140030ec0
   14003b55e:	mov    r11,QWORD PTR [rsp+0x50]
   14003b563:	mov    QWORD PTR [rsp+0x48],rax
   14003b568:	test   BYTE PTR [r11+0xc8],0x2
   14003b570:	jne    0x14003b594
   14003b572:	or     DWORD PTR [r11+0xc8],0x2
   14003b57a:	mov    BYTE PTR [rsp+0x58],0x1
   14003b57f:	jmp    0x14003b594
   14003b581:	mov    rax,QWORD PTR [r8]
   14003b584:	lea    rcx,[rsp+0x40]
   14003b589:	mov    QWORD PTR [rcx],rax
   14003b58c:	mov    rax,QWORD PTR [r8+0x8]
   14003b590:	mov    QWORD PTR [rcx+0x8],rax
   14003b594:	lea    rax,[rsp+0x40]
   14003b599:	lea    rdx,[rsp+0x60]
   14003b59e:	lea    rcx,[rsp+0x68]
   14003b5a3:	mov    QWORD PTR [rsp+0x38],rax
   14003b5a8:	xor    eax,eax
   14003b5aa:	xor    r9d,r9d
   14003b5ad:	mov    DWORD PTR [rsp+0x30],eax
   14003b5b1:	mov    DWORD PTR [rsp+0x28],eax
   14003b5b5:	mov    r8,rbx
   14003b5b8:	mov    DWORD PTR [rsp+0x20],eax
   14003b5bc:	call   0x14003dec0
   14003b5c1:	lea    rcx,[rsp+0x68]
   14003b5c6:	mov    rdx,rdi
   14003b5c9:	mov    ebx,eax
   14003b5cb:	call   0x14003d800
   14003b5d0:	test   bl,0x3
   14003b5d3:	jne    0x14003b613
   14003b5d5:	cmp    eax,0x1
   14003b5d8:	jne    0x14003b5f4
   14003b5da:	cmp    BYTE PTR [rsp+0x58],0x0
   14003b5df:	je     0x14003b5ed
   14003b5e1:	mov    rax,QWORD PTR [rsp+0x50]
   14003b5e6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003b5ed:	mov    eax,0x3
   14003b5f2:	jmp    0x14003b632
   14003b5f4:	cmp    eax,0x2
   14003b5f7:	jne    0x14003b61d
   14003b5f9:	cmp    BYTE PTR [rsp+0x58],0x0
   14003b5fe:	je     0x14003b60c
   14003b600:	mov    rax,QWORD PTR [rsp+0x50]
   14003b605:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003b60c:	mov    eax,0x4
   14003b611:	jmp    0x14003b632
   14003b613:	test   bl,0x1
   14003b616:	jne    0x14003b5f9
   14003b618:	test   bl,0x2
   14003b61b:	jne    0x14003b5da
   14003b61d:	cmp    BYTE PTR [rsp+0x58],0x0
   14003b622:	je     0x14003b630
   14003b624:	mov    rax,QWORD PTR [rsp+0x50]
   14003b629:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003b630:	xor    eax,eax
   14003b632:	mov    rcx,QWORD PTR [rsp+0x78]
   14003b637:	xor    rcx,rsp
   14003b63a:	call   0x140029b40
   14003b63f:	mov    rbx,QWORD PTR [rsp+0xa8]
   14003b647:	add    rsp,0x80
   14003b64e:	pop    rdi
   14003b64f:	ret    
   14003b650:	rex push rdi
   14003b652:	sub    rsp,0x30
   14003b656:	test   rcx,rcx
   14003b659:	mov    rdi,QWORD PTR [r9+0x10]
   14003b65d:	mov    r10,rcx
   14003b660:	jne    0x14003b690
   14003b662:	call   0x14002bca0
   14003b667:	xor    r9d,r9d
   14003b66a:	xor    r8d,r8d
   14003b66d:	xor    edx,edx
   14003b66f:	xor    ecx,ecx
   14003b671:	mov    QWORD PTR [rsp+0x20],0x0
   14003b67a:	mov    DWORD PTR [rax],0x16
   14003b680:	call   0x14002e900
   14003b685:	mov    eax,0x16
   14003b68a:	add    rsp,0x30
   14003b68e:	pop    rdi
   14003b68f:	ret    
   14003b690:	test   rdx,rdx
   14003b693:	je     0x14003b662
   14003b695:	xor    eax,eax
   14003b697:	test   r8d,r8d
   14003b69a:	mov    BYTE PTR [rcx],0x0
   14003b69d:	cmovg  eax,r8d
   14003b6a1:	add    eax,0x1
   14003b6a4:	cdqe   
   14003b6a6:	cmp    rdx,rax
   14003b6a9:	ja     0x14003b6d9
   14003b6ab:	call   0x14002bca0
   14003b6b0:	xor    r9d,r9d
   14003b6b3:	xor    r8d,r8d
   14003b6b6:	xor    edx,edx
   14003b6b8:	xor    ecx,ecx
   14003b6ba:	mov    QWORD PTR [rsp+0x20],0x0
   14003b6c3:	mov    DWORD PTR [rax],0x22
   14003b6c9:	call   0x14002e900
   14003b6ce:	mov    eax,0x22
   14003b6d3:	add    rsp,0x30
   14003b6d7:	pop    rdi
   14003b6d8:	ret    
   14003b6d9:	test   r8d,r8d
   14003b6dc:	mov    BYTE PTR [rcx],0x30
   14003b6df:	lea    rax,[rcx+0x1]
   14003b6e3:	jle    0x14003b709
   14003b6e5:	movzx  ecx,BYTE PTR [rdi]
   14003b6e8:	test   cl,cl
   14003b6ea:	je     0x14003b6f5
   14003b6ec:	movsx  edx,cl
   14003b6ef:	add    rdi,0x1
   14003b6f3:	jmp    0x14003b6fa
   14003b6f5:	mov    edx,0x30
   14003b6fa:	sub    r8d,0x1
   14003b6fe:	mov    BYTE PTR [rax],dl
   14003b700:	add    rax,0x1
   14003b704:	test   r8d,r8d
   14003b707:	jg     0x14003b6e5
   14003b709:	test   r8d,r8d
   14003b70c:	mov    BYTE PTR [rax],0x0
   14003b70f:	js     0x14003b72f
   14003b711:	cmp    BYTE PTR [rdi],0x35
   14003b714:	jl     0x14003b72f
   14003b716:	sub    rax,0x1
   14003b71a:	cmp    BYTE PTR [rax],0x39
   14003b71d:	jne    0x14003b72c
   14003b71f:	nop
   14003b720:	mov    BYTE PTR [rax],0x30
   14003b723:	sub    rax,0x1
   14003b727:	cmp    BYTE PTR [rax],0x39
   14003b72a:	je     0x14003b720
   14003b72c:	add    BYTE PTR [rax],0x1
   14003b72f:	cmp    BYTE PTR [r10],0x31
   14003b733:	jne    0x14003b742
   14003b735:	add    DWORD PTR [r9+0x4],0x1
   14003b73a:	xor    eax,eax
   14003b73c:	add    rsp,0x30
   14003b740:	pop    rdi
   14003b741:	ret    
   14003b742:	or     rcx,0xffffffffffffffff
   14003b746:	lea    rdi,[r10+0x1]
   14003b74a:	xor    eax,eax
   14003b74c:	repnz scas al,BYTE PTR es:[rdi]
   14003b74e:	lea    rdx,[r10+0x1]
   14003b752:	not    rcx
   14003b755:	mov    r8,rcx
   14003b758:	mov    rcx,r10
   14003b75b:	call   0x14002b7a0
   14003b760:	xor    eax,eax
   14003b762:	add    rsp,0x30
   14003b766:	pop    rdi
   14003b767:	ret    
   14003b768:	int3   
   14003b769:	int3   
   14003b76a:	int3   
   14003b76b:	int3   
   14003b76c:	int3   
   14003b76d:	int3   
   14003b76e:	int3   
   14003b76f:	int3   
   14003b770:	rex push rbx
   14003b772:	push   rbp
   14003b773:	push   rsi
   14003b774:	sub    rsp,0x80
   14003b77b:	mov    rax,QWORD PTR [rip+0x1f7fe]        # 0x14005af80
   14003b782:	xor    rax,rsp
   14003b785:	mov    QWORD PTR [rsp+0x70],rax
   14003b78a:	mov    rbp,r9
   14003b78d:	mov    rsi,r8
   14003b790:	mov    r9,rcx
   14003b793:	shr    r9,0x30
   14003b797:	mov    rax,rcx
   14003b79a:	mov    rbx,rdx
   14003b79d:	movzx  r8d,r9w
   14003b7a1:	shr    rax,0x20
   14003b7a5:	and    r9w,0x8000
   14003b7ab:	shr    r8w,0x4
   14003b7b0:	and    eax,0xfffff
   14003b7b5:	mov    r10d,0x80000000
   14003b7bb:	and    r8w,0x7ff
   14003b7c1:	movzx  edx,r8w
   14003b7c5:	test   edx,edx
   14003b7c7:	je     0x14003b7e0
   14003b7c9:	cmp    edx,0x7ff
   14003b7cf:	je     0x14003b7d9
   14003b7d1:	add    r8w,0x3c00
   14003b7d7:	jmp    0x14003b7fb
   14003b7d9:	mov    r8w,0x7fff
   14003b7de:	jmp    0x14003b7fb
   14003b7e0:	test   eax,eax
   14003b7e2:	jne    0x14003b7f2
   14003b7e4:	test   ecx,ecx
   14003b7e6:	jne    0x14003b7f2
   14003b7e8:	mov    DWORD PTR [rsp+0x44],ecx
   14003b7ec:	mov    DWORD PTR [rsp+0x40],ecx
   14003b7f0:	jmp    0x14003b843
   14003b7f2:	add    r8w,0x3c01
   14003b7f8:	xor    r10d,r10d
   14003b7fb:	mov    edx,ecx
   14003b7fd:	shl    eax,0xb
   14003b800:	shl    ecx,0xb
   14003b803:	shr    edx,0x15
   14003b806:	mov    DWORD PTR [rsp+0x40],ecx
   14003b80a:	or     edx,eax
   14003b80c:	or     edx,r10d
   14003b80f:	bt     edx,0x1f
   14003b813:	mov    DWORD PTR [rsp+0x44],edx
   14003b817:	jb     0x14003b83f
   14003b819:	data16 xchg ax,ax
   14003b81c:	data16 data16 xchg ax,ax
   14003b820:	mov    eax,ecx
   14003b822:	add    edx,edx
   14003b824:	add    ecx,ecx
   14003b826:	shr    eax,0x1f
   14003b829:	add    r8w,0xffff
   14003b82f:	mov    DWORD PTR [rsp+0x40],ecx
   14003b833:	or     edx,eax
   14003b835:	bt     edx,0x1f
   14003b839:	jae    0x14003b820
   14003b83b:	mov    DWORD PTR [rsp+0x44],edx
   14003b83f:	or     r9w,r8w
   14003b843:	mov    WORD PTR [rsp+0x48],r9w
   14003b849:	lea    rdx,[rsp+0x30]
   14003b84e:	lea    rcx,[rsp+0x40]
   14003b853:	mov    rax,QWORD PTR [rcx]
   14003b856:	xor    r8d,r8d
   14003b859:	lea    r9,[rsp+0x50]
   14003b85e:	mov    QWORD PTR [rdx],rax
   14003b861:	movzx  eax,WORD PTR [rcx+0x8]
   14003b865:	lea    rcx,[rsp+0x30]
   14003b86a:	mov    WORD PTR [rdx+0x8],ax
   14003b86e:	lea    edx,[r8+0x11]
   14003b872:	call   0x14003e8f0
   14003b877:	lea    r8,[rsp+0x54]
   14003b87c:	mov    rdx,rbp
   14003b87f:	mov    DWORD PTR [rbx+0x8],eax
   14003b882:	movsx  eax,BYTE PTR [rsp+0x52]
   14003b887:	mov    rcx,rsi
   14003b88a:	mov    DWORD PTR [rbx],eax
   14003b88c:	movsx  eax,WORD PTR [rsp+0x50]
   14003b891:	mov    DWORD PTR [rbx+0x4],eax
   14003b894:	call   0x140037660
   14003b899:	test   eax,eax
   14003b89b:	je     0x14003b8b5
   14003b89d:	xor    r9d,r9d
   14003b8a0:	xor    r8d,r8d
   14003b8a3:	xor    edx,edx
   14003b8a5:	xor    ecx,ecx
   14003b8a7:	mov    QWORD PTR [rsp+0x20],0x0
   14003b8b0:	call   0x14002e860
   14003b8b5:	mov    rax,rbx
   14003b8b8:	mov    QWORD PTR [rbx+0x10],rsi
   14003b8bc:	mov    rcx,QWORD PTR [rsp+0x70]
   14003b8c1:	xor    rcx,rsp
   14003b8c4:	call   0x140029b40
   14003b8c9:	add    rsp,0x80
   14003b8d0:	pop    rsi
   14003b8d1:	pop    rbp
   14003b8d2:	pop    rbx
   14003b8d3:	ret    
   14003b8d4:	int3   
   14003b8d5:	int3   
   14003b8d6:	int3   
   14003b8d7:	int3   
   14003b8d8:	int3   
   14003b8d9:	int3   
   14003b8da:	int3   
   14003b8db:	int3   
   14003b8dc:	int3   
   14003b8dd:	int3   
   14003b8de:	int3   
   14003b8df:	int3   
   14003b8e0:	xor    edx,edx
   14003b8e2:	lea    r8d,[rdx+0xa]
   14003b8e6:	jmp    0x14003c580
   14003b8eb:	int3   
   14003b8ec:	int3   
   14003b8ed:	int3   
   14003b8ee:	int3   
   14003b8ef:	int3   
   14003b8f0:	mov    QWORD PTR [rsp+0x8],rbx
   14003b8f5:	mov    QWORD PTR [rsp+0x10],rsi
   14003b8fa:	push   rdi
   14003b8fb:	sub    rsp,0x20
   14003b8ff:	test   ecx,ecx
   14003b901:	js     0x14003b98c
   14003b907:	cmp    ecx,DWORD PTR [rip+0x2769b]        # 0x140062fa8
   14003b90d:	jae    0x14003b98c
   14003b90f:	movsxd rax,ecx
   14003b912:	lea    rsi,[rip+0x276a7]        # 0x140062fc0
   14003b919:	mov    rdi,rax
   14003b91c:	and    eax,0x1f
   14003b91f:	sar    rdi,0x5
   14003b923:	lea    rbx,[rax+rax*4]
   14003b927:	mov    rax,QWORD PTR [rsi+rdi*8]
   14003b92b:	add    rbx,rbx
   14003b92e:	test   BYTE PTR [rax+rbx*8+0x8],0x1
   14003b933:	je     0x14003b98c
   14003b935:	cmp    QWORD PTR [rax+rbx*8],0xffffffffffffffff
   14003b93a:	je     0x14003b98c
   14003b93c:	cmp    DWORD PTR [rip+0x1f60d],0x1        # 0x14005af50
   14003b943:	jne    0x14003b96e
   14003b945:	test   ecx,ecx
   14003b947:	je     0x14003b961
   14003b949:	sub    ecx,0x1
   14003b94c:	je     0x14003b95a
   14003b94e:	cmp    ecx,0x1
   14003b951:	jne    0x14003b96e
   14003b953:	mov    ecx,0xfffffff4
   14003b958:	jmp    0x14003b966
   14003b95a:	mov    ecx,0xfffffff5
   14003b95f:	jmp    0x14003b966
   14003b961:	mov    ecx,0xfffffff6
   14003b966:	xor    edx,edx
   14003b968:	call   QWORD PTR [rip+0x79c2]        # 0x140043330
   14003b96e:	mov    rax,QWORD PTR [rsi+rdi*8]
   14003b972:	mov    QWORD PTR [rax+rbx*8],0xffffffffffffffff
   14003b97a:	xor    eax,eax
   14003b97c:	mov    rbx,QWORD PTR [rsp+0x30]
   14003b981:	mov    rsi,QWORD PTR [rsp+0x38]
   14003b986:	add    rsp,0x20
   14003b98a:	pop    rdi
   14003b98b:	ret    
   14003b98c:	call   0x14002bca0
   14003b991:	mov    DWORD PTR [rax],0x9
   14003b997:	call   0x14002bcd0
   14003b99c:	mov    rbx,QWORD PTR [rsp+0x30]
   14003b9a1:	mov    rsi,QWORD PTR [rsp+0x38]
   14003b9a6:	mov    DWORD PTR [rax],0x0
   14003b9ac:	or     eax,0xffffffff
   14003b9af:	add    rsp,0x20
   14003b9b3:	pop    rdi
   14003b9b4:	ret    
   14003b9b5:	int3   
   14003b9b6:	int3   
   14003b9b7:	int3   
   14003b9b8:	int3   
   14003b9b9:	int3   
   14003b9ba:	int3   
   14003b9bb:	int3   
   14003b9bc:	int3   
   14003b9bd:	int3   
   14003b9be:	int3   
   14003b9bf:	int3   
   14003b9c0:	sub    rsp,0x38
   14003b9c4:	cmp    ecx,0xfffffffe
   14003b9c7:	jne    0x14003b9e8
   14003b9c9:	call   0x14002bcd0
   14003b9ce:	mov    DWORD PTR [rax],0x0
   14003b9d4:	call   0x14002bca0
   14003b9d9:	mov    DWORD PTR [rax],0x9
   14003b9df:	or     rax,0xffffffffffffffff
   14003b9e3:	add    rsp,0x38
   14003b9e7:	ret    
   14003b9e8:	test   ecx,ecx
   14003b9ea:	js     0x14003ba23
   14003b9ec:	cmp    ecx,DWORD PTR [rip+0x275b6]        # 0x140062fa8
   14003b9f2:	jae    0x14003ba23
   14003b9f4:	movsxd rax,ecx
   14003b9f7:	lea    rdx,[rip+0x275c2]        # 0x140062fc0
   14003b9fe:	mov    rcx,rax
   14003ba01:	and    eax,0x1f
   14003ba04:	sar    rcx,0x5
   14003ba08:	lea    rax,[rax+rax*4]
   14003ba0c:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14003ba10:	add    rax,rax
   14003ba13:	test   BYTE PTR [rdx+rax*8+0x8],0x1
   14003ba18:	je     0x14003ba23
   14003ba1a:	mov    rax,QWORD PTR [rdx+rax*8]
   14003ba1e:	add    rsp,0x38
   14003ba22:	ret    
   14003ba23:	call   0x14002bcd0
   14003ba28:	mov    DWORD PTR [rax],0x0
   14003ba2e:	call   0x14002bca0
   14003ba33:	xor    r9d,r9d
   14003ba36:	xor    r8d,r8d
   14003ba39:	xor    edx,edx
   14003ba3b:	xor    ecx,ecx
   14003ba3d:	mov    DWORD PTR [rax],0x9
   14003ba43:	mov    QWORD PTR [rsp+0x20],0x0
   14003ba4c:	call   0x14002e900
   14003ba51:	or     rax,0xffffffffffffffff
   14003ba55:	add    rsp,0x38
   14003ba59:	ret    
   14003ba5a:	int3   
   14003ba5b:	int3   
   14003ba5c:	int3   
   14003ba5d:	int3   
   14003ba5e:	int3   
   14003ba5f:	int3   
   14003ba60:	mov    QWORD PTR [rsp+0x8],rbx
   14003ba65:	mov    QWORD PTR [rsp+0x10],rsi
   14003ba6a:	mov    QWORD PTR [rsp+0x18],rdi
   14003ba6f:	mov    QWORD PTR [rsp+0x20],r12
   14003ba74:	push   r13
   14003ba76:	sub    rsp,0x20
   14003ba7a:	movsxd rax,ecx
   14003ba7d:	mov    r12,rax
   14003ba80:	sar    r12,0x5
   14003ba84:	lea    r13,[rip+0x27535]        # 0x140062fc0
   14003ba8b:	and    eax,0x1f
   14003ba8e:	lea    rdi,[rax+rax*4]
   14003ba92:	add    rdi,rdi
   14003ba95:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   14003ba9a:	mov    ebx,0x1
   14003ba9f:	cmp    DWORD PTR [rsi+rdi*8+0xc],0x0
   14003baa4:	jne    0x14003badb
   14003baa6:	lea    ecx,[rbx+0x9]
   14003baa9:	call   0x140035aa0
   14003baae:	nop
   14003baaf:	cmp    DWORD PTR [rsi+rdi*8+0xc],0x0
   14003bab4:	jne    0x14003bad1
   14003bab6:	lea    rcx,[rsi+rdi*8+0x10]
   14003babb:	mov    edx,0xfa0
   14003bac0:	call   0x140035e50
   14003bac5:	xor    ecx,ecx
   14003bac7:	test   eax,eax
   14003bac9:	cmove  ebx,ecx
   14003bacc:	add    DWORD PTR [rsi+rdi*8+0xc],0x1
   14003bad1:	mov    ecx,0xa
   14003bad6:	call   0x140035970
   14003badb:	test   ebx,ebx
   14003badd:	je     0x14003baef
   14003badf:	mov    rcx,QWORD PTR [r13+r12*8+0x0]
   14003bae4:	lea    rcx,[rcx+rdi*8+0x10]
   14003bae9:	call   QWORD PTR [rip+0x7a51]        # 0x140043540
   14003baef:	mov    eax,ebx
   14003baf1:	mov    rbx,QWORD PTR [rsp+0x30]
   14003baf6:	mov    rsi,QWORD PTR [rsp+0x38]
   14003bafb:	mov    rdi,QWORD PTR [rsp+0x40]
   14003bb00:	mov    r12,QWORD PTR [rsp+0x48]
   14003bb05:	add    rsp,0x20
   14003bb09:	pop    r13
   14003bb0b:	ret    
   14003bb0c:	int3   
   14003bb0d:	int3   
   14003bb0e:	int3   
   14003bb0f:	int3   
   14003bb10:	rex push rbp
   14003bb12:	sub    rsp,0x20
   14003bb16:	mov    rbp,rdx
   14003bb19:	mov    ecx,0xa
   14003bb1e:	call   0x140035970
   14003bb23:	add    rsp,0x20
   14003bb27:	pop    rbp
   14003bb28:	ret    
   14003bb29:	int3   
   14003bb2a:	int3   
   14003bb2b:	int3   
   14003bb2c:	int3   
   14003bb2d:	int3   
   14003bb2e:	int3   
   14003bb2f:	int3   
   14003bb30:	movsxd rax,ecx
   14003bb33:	lea    r8,[rip+0x27486]        # 0x140062fc0
   14003bb3a:	mov    rdx,rax
   14003bb3d:	and    eax,0x1f
   14003bb40:	lea    rcx,[rax+rax*4]
   14003bb44:	sar    rdx,0x5
   14003bb48:	mov    rax,QWORD PTR [r8+rdx*8]
   14003bb4c:	add    rcx,rcx
   14003bb4f:	lea    rcx,[rax+rcx*8+0x10]
   14003bb54:	rex.W jmp QWORD PTR [rip+0x79dd]        # 0x140043538
   14003bb5b:	int3   
   14003bb5c:	int3   
   14003bb5d:	int3   
   14003bb5e:	int3   
   14003bb5f:	int3   
   14003bb60:	rex push rbx
   14003bb62:	sub    rsp,0x60
   14003bb66:	mov    rax,QWORD PTR [rip+0x1f413]        # 0x14005af80
   14003bb6d:	xor    rax,rsp
   14003bb70:	mov    QWORD PTR [rsp+0x50],rax
   14003bb75:	xor    ebx,ebx
   14003bb77:	mov    WORD PTR [rsp+0x40],cx
   14003bb7c:	cmp    DWORD PTR [rip+0x208ee],ebx        # 0x14005c470
   14003bb82:	je     0x14003bbec
   14003bb84:	mov    rcx,QWORD PTR [rip+0x20925]        # 0x14005c4b0
   14003bb8b:	cmp    rcx,0xfffffffffffffffe
   14003bb8f:	jne    0x14003bb9d
   14003bb91:	call   0x14003f6f0
   14003bb96:	mov    rcx,QWORD PTR [rip+0x20913]        # 0x14005c4b0
   14003bb9d:	cmp    rcx,0xffffffffffffffff
   14003bba1:	je     0x14003bc70
   14003bba7:	lea    r9,[rsp+0x44]
   14003bbac:	lea    rdx,[rsp+0x40]
   14003bbb1:	mov    r8d,0x1
   14003bbb7:	mov    QWORD PTR [rsp+0x20],rbx
   14003bbbc:	call   QWORD PTR [rip+0x7786]        # 0x140043348
   14003bbc2:	test   eax,eax
   14003bbc4:	jne    0x14003bc64
   14003bbca:	cmp    DWORD PTR [rip+0x2089f],0x2        # 0x14005c470
   14003bbd1:	jne    0x14003bc70
   14003bbd7:	call   QWORD PTR [rip+0x790b]        # 0x1400434e8
   14003bbdd:	cmp    eax,0x78
   14003bbe0:	jne    0x14003bc70
   14003bbe6:	mov    DWORD PTR [rip+0x20884],ebx        # 0x14005c470
   14003bbec:	call   QWORD PTR [rip+0x774e]        # 0x140043340
   14003bbf2:	mov    QWORD PTR [rsp+0x38],rbx
   14003bbf7:	mov    QWORD PTR [rsp+0x30],rbx
   14003bbfc:	mov    ecx,eax
   14003bbfe:	lea    rax,[rsp+0x48]
   14003bc03:	lea    r8,[rsp+0x40]
   14003bc08:	mov    r9d,0x1
   14003bc0e:	xor    edx,edx
   14003bc10:	mov    DWORD PTR [rsp+0x28],0x5
   14003bc18:	mov    QWORD PTR [rsp+0x20],rax
   14003bc1d:	call   QWORD PTR [rip+0x7815]        # 0x140043438
   14003bc23:	mov    rcx,QWORD PTR [rip+0x20886]        # 0x14005c4b0
   14003bc2a:	cmp    rcx,0xffffffffffffffff
   14003bc2e:	je     0x14003bc70
   14003bc30:	lea    r9,[rsp+0x44]
   14003bc35:	lea    rdx,[rsp+0x48]
   14003bc3a:	mov    r8d,eax
   14003bc3d:	mov    QWORD PTR [rsp+0x20],rbx
   14003bc42:	call   QWORD PTR [rip+0x76f0]        # 0x140043338
   14003bc48:	test   eax,eax
   14003bc4a:	je     0x14003bc70
   14003bc4c:	mov    ax,WORD PTR [rsp+0x40]
   14003bc51:	mov    rcx,QWORD PTR [rsp+0x50]
   14003bc56:	xor    rcx,rsp
   14003bc59:	call   0x140029b40
   14003bc5e:	add    rsp,0x60
   14003bc62:	pop    rbx
   14003bc63:	ret    
   14003bc64:	mov    DWORD PTR [rip+0x20802],0x1        # 0x14005c470
   14003bc6e:	jmp    0x14003bc4c
   14003bc70:	or     ax,0xffff
   14003bc74:	mov    rcx,QWORD PTR [rsp+0x50]
   14003bc79:	xor    rcx,rsp
   14003bc7c:	call   0x140029b40
   14003bc81:	add    rsp,0x60
   14003bc85:	pop    rbx
   14003bc86:	ret    
   14003bc87:	int3   
   14003bc88:	int3   
   14003bc89:	int3   
   14003bc8a:	int3   
   14003bc8b:	int3   
   14003bc8c:	int3   
   14003bc8d:	int3   
   14003bc8e:	int3   
   14003bc8f:	int3   
   14003bc90:	mov    QWORD PTR [rsp+0x8],rbx
   14003bc95:	mov    QWORD PTR [rsp+0x10],rsi
   14003bc9a:	mov    QWORD PTR [rsp+0x18],rdi
   14003bc9f:	push   r12
   14003bca1:	sub    rsp,0x30
   14003bca5:	xor    r12d,r12d
   14003bca8:	mov    edi,r12d
   14003bcab:	lea    ecx,[r12+0x1]
   14003bcb0:	call   0x140035aa0
   14003bcb5:	nop
   14003bcb6:	mov    ebx,0x3
   14003bcbb:	mov    DWORD PTR [rsp+0x20],ebx
   14003bcbf:	nop
   14003bcc0:	cmp    ebx,DWORD PTR [rip+0x272da]        # 0x140062fa0
   14003bcc6:	jge    0x14003bd32
   14003bcc8:	movsxd rsi,ebx
   14003bccb:	mov    rax,QWORD PTR [rip+0x262be]        # 0x140061f90
   14003bcd2:	cmp    QWORD PTR [rax+rsi*8],0x0
   14003bcd7:	je     0x14003bd29
   14003bcd9:	mov    rcx,QWORD PTR [rax+rsi*8]
   14003bcdd:	test   BYTE PTR [rcx+0x18],0x83
   14003bce1:	je     0x14003bcf4
   14003bce3:	call   0x14003f810
   14003bce8:	cmp    eax,0xffffffff
   14003bceb:	je     0x14003bcf4
   14003bced:	add    edi,0x1
   14003bcf0:	mov    DWORD PTR [rsp+0x24],edi
   14003bcf4:	cmp    ebx,0x14
   14003bcf7:	jl     0x14003bd29
   14003bcf9:	mov    rax,QWORD PTR [rip+0x26290]        # 0x140061f90
   14003bd00:	mov    rcx,QWORD PTR [rax+rsi*8]
   14003bd04:	add    rcx,0x30
   14003bd08:	call   QWORD PTR [rip+0x76ca]        # 0x1400433d8
   14003bd0e:	mov    rcx,QWORD PTR [rip+0x2627b]        # 0x140061f90
   14003bd15:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14003bd19:	call   0x14002a380
   14003bd1e:	mov    r11,QWORD PTR [rip+0x2626b]        # 0x140061f90
   14003bd25:	mov    QWORD PTR [r11+rsi*8],r12
   14003bd29:	add    ebx,0x1
   14003bd2c:	mov    DWORD PTR [rsp+0x20],ebx
   14003bd30:	jmp    0x14003bcc0
   14003bd32:	mov    ecx,0x1
   14003bd37:	call   0x140035970
   14003bd3c:	mov    eax,edi
   14003bd3e:	mov    rbx,QWORD PTR [rsp+0x40]
   14003bd43:	mov    rsi,QWORD PTR [rsp+0x48]
   14003bd48:	mov    rdi,QWORD PTR [rsp+0x50]
   14003bd4d:	add    rsp,0x30
   14003bd51:	pop    r12
   14003bd53:	ret    
   14003bd54:	int3   
   14003bd55:	int3   
   14003bd56:	int3   
   14003bd57:	int3   
   14003bd58:	int3   
   14003bd59:	int3   
   14003bd5a:	int3   
   14003bd5b:	int3   
   14003bd5c:	int3   
   14003bd5d:	int3   
   14003bd5e:	int3   
   14003bd5f:	int3   
   14003bd60:	rex push rbp
   14003bd62:	sub    rsp,0x20
   14003bd66:	mov    rbp,rdx
   14003bd69:	mov    ecx,0x1
   14003bd6e:	call   0x140035970
   14003bd73:	add    rsp,0x20
   14003bd77:	pop    rbp
   14003bd78:	ret    
   14003bd79:	int3   
   14003bd7a:	int3   
   14003bd7b:	int3   
   14003bd7c:	int3   
   14003bd7d:	int3   
   14003bd7e:	int3   
   14003bd7f:	int3   
   14003bd80:	mov    QWORD PTR [rsp+0x10],rbx
   14003bd85:	push   rsi
   14003bd86:	sub    rsp,0x20
   14003bd8a:	mov    rbx,rcx
   14003bd8d:	mov    ecx,DWORD PTR [rcx+0x18]
   14003bd90:	xor    esi,esi
   14003bd92:	mov    eax,ecx
   14003bd94:	and    al,0x3
   14003bd96:	cmp    al,0x2
   14003bd98:	jne    0x14003bde5
   14003bd9a:	test   ecx,0x108
   14003bda0:	je     0x14003bde5
   14003bda2:	mov    QWORD PTR [rsp+0x30],rdi
   14003bda7:	mov    edi,DWORD PTR [rbx]
   14003bda9:	sub    edi,DWORD PTR [rbx+0x10]
   14003bdac:	test   edi,edi
   14003bdae:	jle    0x14003bde0
   14003bdb0:	mov    rcx,rbx
   14003bdb3:	call   0x1400385a0
   14003bdb8:	mov    rdx,QWORD PTR [rbx+0x10]
   14003bdbc:	mov    r8d,edi
   14003bdbf:	mov    ecx,eax
   14003bdc1:	call   0x140038110
   14003bdc6:	cmp    eax,edi
   14003bdc8:	jne    0x14003bdd9
   14003bdca:	mov    eax,DWORD PTR [rbx+0x18]
   14003bdcd:	test   al,al
   14003bdcf:	jns    0x14003bde0
   14003bdd1:	and    eax,0xfffffffd
   14003bdd4:	mov    DWORD PTR [rbx+0x18],eax
   14003bdd7:	jmp    0x14003bde0
   14003bdd9:	or     DWORD PTR [rbx+0x18],0x20
   14003bddd:	or     esi,0xffffffff
   14003bde0:	mov    rdi,QWORD PTR [rsp+0x30]
   14003bde5:	mov    rcx,QWORD PTR [rbx+0x10]
   14003bde9:	mov    DWORD PTR [rbx+0x8],0x0
   14003bdf0:	mov    eax,esi
   14003bdf2:	mov    QWORD PTR [rbx],rcx
   14003bdf5:	mov    rbx,QWORD PTR [rsp+0x38]
   14003bdfa:	add    rsp,0x20
   14003bdfe:	pop    rsi
   14003bdff:	ret    
   14003be00:	rex push rbx
   14003be02:	sub    rsp,0x20
   14003be06:	test   rcx,rcx
   14003be09:	mov    rbx,rcx
   14003be0c:	jne    0x14003be18
   14003be0e:	add    rsp,0x20
   14003be12:	pop    rbx
   14003be13:	jmp    0x14003bec0
   14003be18:	mov    ecx,DWORD PTR [rcx+0x18]
   14003be1b:	mov    QWORD PTR [rsp+0x30],rsi
   14003be20:	xor    esi,esi
   14003be22:	mov    eax,ecx
   14003be24:	and    al,0x3
   14003be26:	cmp    al,0x2
   14003be28:	jne    0x14003be75
   14003be2a:	test   ecx,0x108
   14003be30:	je     0x14003be75
   14003be32:	mov    QWORD PTR [rsp+0x38],rdi
   14003be37:	mov    edi,DWORD PTR [rbx]
   14003be39:	sub    edi,DWORD PTR [rbx+0x10]
   14003be3c:	test   edi,edi
   14003be3e:	jle    0x14003be70
   14003be40:	mov    rcx,rbx
   14003be43:	call   0x1400385a0
   14003be48:	mov    rdx,QWORD PTR [rbx+0x10]
   14003be4c:	mov    r8d,edi
   14003be4f:	mov    ecx,eax
   14003be51:	call   0x140038110
   14003be56:	cmp    eax,edi
   14003be58:	jne    0x14003be69
   14003be5a:	mov    eax,DWORD PTR [rbx+0x18]
   14003be5d:	test   al,al
   14003be5f:	jns    0x14003be70
   14003be61:	and    eax,0xfffffffd
   14003be64:	mov    DWORD PTR [rbx+0x18],eax
   14003be67:	jmp    0x14003be70
   14003be69:	or     DWORD PTR [rbx+0x18],0x20
   14003be6d:	or     esi,0xffffffff
   14003be70:	mov    rdi,QWORD PTR [rsp+0x38]
   14003be75:	mov    rcx,QWORD PTR [rbx+0x10]
   14003be79:	test   esi,esi
   14003be7b:	mov    rsi,QWORD PTR [rsp+0x30]
   14003be80:	mov    QWORD PTR [rbx],rcx
   14003be83:	mov    DWORD PTR [rbx+0x8],0x0
   14003be8a:	je     0x14003be95
   14003be8c:	or     eax,0xffffffff
   14003be8f:	add    rsp,0x20
   14003be93:	pop    rbx
   14003be94:	ret    
   14003be95:	bt     DWORD PTR [rbx+0x18],0xe
   14003be9a:	jae    0x14003beb5
   14003be9c:	mov    rcx,rbx
   14003be9f:	call   0x1400385a0
   14003bea4:	mov    ecx,eax
   14003bea6:	call   0x14003f8b0
   14003beab:	neg    eax
   14003bead:	sbb    eax,eax
   14003beaf:	add    rsp,0x20
   14003beb3:	pop    rbx
   14003beb4:	ret    
   14003beb5:	xor    eax,eax
   14003beb7:	add    rsp,0x20
   14003bebb:	pop    rbx
   14003bebc:	ret    
   14003bebd:	int3   
   14003bebe:	int3   
   14003bebf:	int3   
   14003bec0:	mov    QWORD PTR [rsp+0x8],rbx
   14003bec5:	mov    QWORD PTR [rsp+0x10],rsi
   14003beca:	mov    QWORD PTR [rsp+0x18],rdi
   14003becf:	push   r12
   14003bed1:	push   r13
   14003bed3:	push   r14
   14003bed5:	sub    rsp,0x30
   14003bed9:	mov    r12d,ecx
   14003bedc:	xor    edi,edi
   14003bede:	mov    r13d,edi
   14003bee1:	lea    ecx,[rdi+0x1]
   14003bee4:	call   0x140035aa0
   14003bee9:	nop
   14003beea:	mov    ebx,edi
   14003beec:	mov    DWORD PTR [rsp+0x20],ebx
   14003bef0:	or     r14d,0xffffffff
   14003bef4:	cmp    ebx,DWORD PTR [rip+0x270a6]        # 0x140062fa0
   14003befa:	jge    0x14003bf86
   14003bf00:	movsxd rsi,ebx
   14003bf03:	mov    rax,QWORD PTR [rip+0x26086]        # 0x140061f90
   14003bf0a:	cmp    QWORD PTR [rax+rsi*8],0x0
   14003bf0f:	je     0x14003bf7a
   14003bf11:	mov    rdx,QWORD PTR [rax+rsi*8]
   14003bf15:	test   BYTE PTR [rdx+0x18],0x83
   14003bf19:	je     0x14003bf7a
   14003bf1b:	mov    ecx,ebx
   14003bf1d:	call   0x1400384f0
   14003bf22:	nop
   14003bf23:	mov    rax,QWORD PTR [rip+0x26066]        # 0x140061f90
   14003bf2a:	mov    rcx,QWORD PTR [rax+rsi*8]
   14003bf2e:	mov    eax,DWORD PTR [rcx+0x18]
   14003bf31:	test   al,0x83
   14003bf33:	je     0x14003bf68
   14003bf35:	cmp    r12d,0x1
   14003bf39:	jne    0x14003bf4e
   14003bf3b:	call   0x14003be00
   14003bf40:	cmp    eax,0xffffffff
   14003bf43:	je     0x14003bf68
   14003bf45:	add    edi,r12d
   14003bf48:	mov    DWORD PTR [rsp+0x24],edi
   14003bf4c:	jmp    0x14003bf68
   14003bf4e:	test   r12d,r12d
   14003bf51:	jne    0x14003bf68
   14003bf53:	test   al,0x2
   14003bf55:	je     0x14003bf68
   14003bf57:	call   0x14003be00
   14003bf5c:	cmp    eax,0xffffffff
   14003bf5f:	cmove  r13d,r14d
   14003bf63:	mov    DWORD PTR [rsp+0x28],r13d
   14003bf68:	mov    rdx,QWORD PTR [rip+0x26021]        # 0x140061f90
   14003bf6f:	mov    rdx,QWORD PTR [rdx+rsi*8]
   14003bf73:	mov    ecx,ebx
   14003bf75:	call   0x140038580
   14003bf7a:	add    ebx,0x1
   14003bf7d:	mov    DWORD PTR [rsp+0x20],ebx
   14003bf81:	jmp    0x14003bef4
   14003bf86:	mov    ecx,0x1
   14003bf8b:	call   0x140035970
   14003bf90:	cmp    r12d,0x1
   14003bf94:	cmove  r13d,edi
   14003bf98:	mov    eax,r13d
   14003bf9b:	mov    rbx,QWORD PTR [rsp+0x50]
   14003bfa0:	mov    rsi,QWORD PTR [rsp+0x58]
   14003bfa5:	mov    rdi,QWORD PTR [rsp+0x60]
   14003bfaa:	add    rsp,0x30
   14003bfae:	pop    r14
   14003bfb0:	pop    r13
   14003bfb2:	pop    r12
   14003bfb4:	ret    
   14003bfb5:	int3   
   14003bfb6:	int3   
   14003bfb7:	int3   
   14003bfb8:	int3   
   14003bfb9:	int3   
   14003bfba:	int3   
   14003bfbb:	int3   
   14003bfbc:	int3   
   14003bfbd:	int3   
   14003bfbe:	int3   
   14003bfbf:	int3   
   14003bfc0:	rex push rbp
   14003bfc2:	sub    rsp,0x20
   14003bfc6:	mov    rbp,rdx
   14003bfc9:	movsxd rcx,DWORD PTR [rbp+0x20]
   14003bfcd:	mov    rax,rcx
   14003bfd0:	mov    rdx,QWORD PTR [rip+0x25fb9]        # 0x140061f90
   14003bfd7:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14003bfdb:	call   0x140038580
   14003bfe0:	add    rsp,0x20
   14003bfe4:	pop    rbp
   14003bfe5:	ret    
   14003bfe6:	int3   
   14003bfe7:	int3   
   14003bfe8:	int3   
   14003bfe9:	int3   
   14003bfea:	int3   
   14003bfeb:	int3   
   14003bfec:	int3   
   14003bfed:	int3   
   14003bfee:	int3   
   14003bfef:	int3   
   14003bff0:	rex push rbp
   14003bff2:	sub    rsp,0x20
   14003bff6:	mov    rbp,rdx
   14003bff9:	mov    ecx,0x1
   14003bffe:	call   0x140035970
   14003c003:	add    rsp,0x20
   14003c007:	pop    rbp
   14003c008:	ret    
   14003c009:	int3   
   14003c00a:	int3   
   14003c00b:	int3   
   14003c00c:	int3   
   14003c00d:	int3   
   14003c00e:	int3   
   14003c00f:	int3   
   14003c010:	mov    ecx,0x1
   14003c015:	jmp    0x14003bec0
   14003c01a:	int3   
   14003c01b:	int3   
   14003c01c:	int3   
   14003c01d:	int3   
   14003c01e:	int3   
   14003c01f:	int3   
   14003c020:	rex push rbx
   14003c022:	push   rdi
   14003c023:	push   r12
   14003c025:	sub    rsp,0x20
   14003c029:	mov    r12d,ecx
   14003c02c:	mov    rcx,rdx
   14003c02f:	mov    rbx,rdx
   14003c032:	call   0x1400385a0
   14003c037:	mov    edx,DWORD PTR [rbx+0x18]
   14003c03a:	test   dl,0x82
   14003c03d:	movsxd rdi,eax
   14003c040:	jne    0x14003c05f
   14003c042:	call   0x14002bca0
   14003c047:	mov    DWORD PTR [rax],0x9
   14003c04d:	or     DWORD PTR [rbx+0x18],0x20
   14003c051:	mov    eax,0xffff
   14003c056:	add    rsp,0x20
   14003c05a:	pop    r12
   14003c05c:	pop    rdi
   14003c05d:	pop    rbx
   14003c05e:	ret    
   14003c05f:	test   dl,0x40
   14003c062:	je     0x14003c081
   14003c064:	call   0x14002bca0
   14003c069:	mov    DWORD PTR [rax],0x22
   14003c06f:	or     DWORD PTR [rbx+0x18],0x20
   14003c073:	mov    eax,0xffff
   14003c078:	add    rsp,0x20
   14003c07c:	pop    r12
   14003c07e:	pop    rdi
   14003c07f:	pop    rbx
   14003c080:	ret    
   14003c081:	mov    QWORD PTR [rsp+0x50],rsi
   14003c086:	xor    esi,esi
   14003c088:	test   dl,0x1
   14003c08b:	je     0x14003c0a6
   14003c08d:	test   dl,0x10
   14003c090:	mov    DWORD PTR [rbx+0x8],esi
   14003c093:	je     0x14003c133
   14003c099:	mov    rax,QWORD PTR [rbx+0x10]
   14003c09d:	and    edx,0xfffffffe
   14003c0a0:	mov    QWORD PTR [rbx],rax
   14003c0a3:	mov    DWORD PTR [rbx+0x18],edx
   14003c0a6:	mov    eax,DWORD PTR [rbx+0x18]
   14003c0a9:	mov    DWORD PTR [rbx+0x8],esi
   14003c0ac:	and    eax,0xffffffef
   14003c0af:	or     eax,0x2
   14003c0b2:	test   eax,0x10c
   14003c0b7:	mov    DWORD PTR [rbx+0x18],eax
   14003c0ba:	jne    0x14003c0eb
   14003c0bc:	call   0x140038340
   14003c0c1:	add    rax,0x30
   14003c0c5:	cmp    rbx,rax
   14003c0c8:	je     0x14003c0d8
   14003c0ca:	call   0x140038340
   14003c0cf:	add    rax,0x60
   14003c0d3:	cmp    rbx,rax
   14003c0d6:	jne    0x14003c0e3
   14003c0d8:	mov    ecx,edi
   14003c0da:	call   0x1400382c0
   14003c0df:	test   eax,eax
   14003c0e1:	jne    0x14003c0eb
   14003c0e3:	mov    rcx,rbx
   14003c0e6:	call   0x140038260
   14003c0eb:	test   DWORD PTR [rbx+0x18],0x108
   14003c0f2:	mov    QWORD PTR [rsp+0x40],rbp
   14003c0f7:	je     0x14003c1a2
   14003c0fd:	mov    ebp,DWORD PTR [rbx]
   14003c0ff:	mov    rdx,QWORD PTR [rbx+0x10]
   14003c103:	sub    ebp,DWORD PTR [rbx+0x10]
   14003c106:	lea    rax,[rdx+0x2]
   14003c10a:	mov    QWORD PTR [rbx],rax
   14003c10d:	mov    eax,DWORD PTR [rbx+0x24]
   14003c110:	sub    eax,0x2
   14003c113:	test   ebp,ebp
   14003c115:	mov    DWORD PTR [rbx+0x8],eax
   14003c118:	jle    0x14003c14c
   14003c11a:	mov    r8d,ebp
   14003c11d:	mov    ecx,edi
   14003c11f:	call   0x140038110
   14003c124:	mov    esi,eax
   14003c126:	mov    rax,QWORD PTR [rbx+0x10]
   14003c12a:	mov    WORD PTR [rax],r12w
   14003c12e:	jmp    0x14003c1be
   14003c133:	mov    rsi,QWORD PTR [rsp+0x50]
   14003c138:	or     edx,0x20
   14003c13b:	mov    eax,0xffff
   14003c140:	mov    DWORD PTR [rbx+0x18],edx
   14003c143:	add    rsp,0x20
   14003c147:	pop    r12
   14003c149:	pop    rdi
   14003c14a:	pop    rbx
   14003c14b:	ret    
   14003c14c:	cmp    edi,0xffffffff
   14003c14f:	je     0x14003c178
   14003c151:	cmp    edi,0xfffffffe
   14003c154:	je     0x14003c178
   14003c156:	mov    rax,rdi
   14003c159:	mov    rcx,rdi
   14003c15c:	lea    r8,[rip+0x26e5d]        # 0x140062fc0
   14003c163:	and    eax,0x1f
   14003c166:	sar    rcx,0x5
   14003c16a:	lea    rdx,[rax+rax*4]
   14003c16e:	shl    rdx,0x4
   14003c172:	add    rdx,QWORD PTR [r8+rcx*8]
   14003c176:	jmp    0x14003c17f
   14003c178:	lea    rdx,[rip+0x1f1b1]        # 0x14005b330
   14003c17f:	test   BYTE PTR [rdx+0x8],0x20
   14003c183:	je     0x14003c198
   14003c185:	xor    edx,edx
   14003c187:	mov    ecx,edi
   14003c189:	lea    r8d,[rdx+0x2]
   14003c18d:	call   0x140037830
   14003c192:	cmp    rax,0xffffffffffffffff
   14003c196:	je     0x14003c1c2
   14003c198:	mov    rax,QWORD PTR [rbx+0x10]
   14003c19c:	mov    WORD PTR [rax],r12w
   14003c1a0:	jmp    0x14003c1be
   14003c1a2:	mov    ebp,0x2
   14003c1a7:	lea    rdx,[rsp+0x48]
   14003c1ac:	mov    ecx,edi
   14003c1ae:	mov    r8d,ebp
   14003c1b1:	mov    WORD PTR [rsp+0x48],r12w
   14003c1b7:	call   0x140038110
   14003c1bc:	mov    esi,eax
   14003c1be:	cmp    esi,ebp
   14003c1c0:	je     0x14003c1cd
   14003c1c2:	or     DWORD PTR [rbx+0x18],0x20
   14003c1c6:	mov    eax,0xffff
   14003c1cb:	jmp    0x14003c1d1
   14003c1cd:	movzx  eax,r12w
   14003c1d1:	mov    rbp,QWORD PTR [rsp+0x40]
   14003c1d6:	mov    rsi,QWORD PTR [rsp+0x50]
   14003c1db:	add    rsp,0x20
   14003c1df:	pop    r12
   14003c1e1:	pop    rdi
   14003c1e2:	pop    rbx
   14003c1e3:	ret    
   14003c1e4:	int3   
   14003c1e5:	int3   
   14003c1e6:	int3   
   14003c1e7:	int3   
   14003c1e8:	int3   
   14003c1e9:	int3   
   14003c1ea:	int3   
   14003c1eb:	int3   
   14003c1ec:	int3   
   14003c1ed:	int3   
   14003c1ee:	int3   
   14003c1ef:	int3   
   14003c1f0:	push   r12
   14003c1f2:	push   r13
   14003c1f4:	push   r14
   14003c1f6:	sub    rsp,0x50
   14003c1fa:	test   rcx,rcx
   14003c1fd:	mov    r12d,r9d
   14003c200:	mov    r13,r8
   14003c203:	mov    r14,rdx
   14003c206:	mov    BYTE PTR [rsp+0x48],0x0
   14003c20b:	jne    0x14003c2a8
   14003c211:	call   0x14002e210
   14003c216:	mov    QWORD PTR [rsp+0x40],rax
   14003c21b:	mov    r10,QWORD PTR [rax+0xc0]
   14003c222:	cmp    r10,QWORD PTR [rip+0x1f827]        # 0x14005ba50
   14003c229:	mov    QWORD PTR [rsp+0x30],r10
   14003c22e:	mov    r11,QWORD PTR [rax+0xb8]
   14003c235:	mov    QWORD PTR [rsp+0x38],r11
   14003c23a:	je     0x14003c261
   14003c23c:	mov    ecx,DWORD PTR [rax+0xc8]
   14003c242:	test   DWORD PTR [rip+0x1f690],ecx        # 0x14005b8d8
   14003c248:	jne    0x14003c261
   14003c24a:	call   0x140031a10
   14003c24f:	mov    r11,QWORD PTR [rsp+0x38]
   14003c254:	mov    r10,rax
   14003c257:	mov    QWORD PTR [rsp+0x30],rax
   14003c25c:	mov    rax,QWORD PTR [rsp+0x40]
   14003c261:	cmp    r11,QWORD PTR [rip+0x1f568]        # 0x14005b7d0
   14003c268:	je     0x14003c28c
   14003c26a:	mov    ecx,DWORD PTR [rax+0xc8]
   14003c270:	test   DWORD PTR [rip+0x1f662],ecx        # 0x14005b8d8
   14003c276:	jne    0x14003c28c
   14003c278:	call   0x140030ec0
   14003c27d:	mov    r10,QWORD PTR [rsp+0x30]
   14003c282:	mov    QWORD PTR [rsp+0x38],rax
   14003c287:	mov    rax,QWORD PTR [rsp+0x40]
   14003c28c:	test   BYTE PTR [rax+0xc8],0x2
   14003c293:	jne    0x14003c2c0
   14003c295:	or     DWORD PTR [rax+0xc8],0x2
   14003c29c:	mov    r10,QWORD PTR [rsp+0x30]
   14003c2a1:	mov    BYTE PTR [rsp+0x48],0x1
   14003c2a6:	jmp    0x14003c2c0
   14003c2a8:	mov    rax,QWORD PTR [rcx]
   14003c2ab:	lea    rdx,[rsp+0x30]
   14003c2b0:	mov    QWORD PTR [rdx],rax
   14003c2b3:	mov    rax,QWORD PTR [rcx+0x8]
   14003c2b7:	mov    QWORD PTR [rdx+0x8],rax
   14003c2bb:	mov    r10,QWORD PTR [rsp+0x30]
   14003c2c0:	test   r13,r13
   14003c2c3:	je     0x14003c2c9
   14003c2c5:	mov    QWORD PTR [r13+0x0],r14
   14003c2c9:	test   r14,r14
   14003c2cc:	jne    0x14003c311
   14003c2ce:	call   0x14002bca0
   14003c2d3:	xor    r9d,r9d
   14003c2d6:	xor    r8d,r8d
   14003c2d9:	xor    edx,edx
   14003c2db:	xor    ecx,ecx
   14003c2dd:	mov    QWORD PTR [rsp+0x20],0x0
   14003c2e6:	mov    DWORD PTR [rax],0x16
   14003c2ec:	call   0x14002e900
   14003c2f1:	cmp    BYTE PTR [rsp+0x48],0x0
   14003c2f6:	je     0x14003c304
   14003c2f8:	mov    rax,QWORD PTR [rsp+0x40]
   14003c2fd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003c304:	xor    eax,eax
   14003c306:	add    rsp,0x50
   14003c30a:	pop    r14
   14003c30c:	pop    r13
   14003c30e:	pop    r12
   14003c310:	ret    
   14003c311:	test   r12d,r12d
   14003c314:	je     0x14003c322
   14003c316:	cmp    r12d,0x2
   14003c31a:	jl     0x14003c2ce
   14003c31c:	cmp    r12d,0x24
   14003c320:	jg     0x14003c2ce
   14003c322:	mov    QWORD PTR [rsp+0x70],rbx
   14003c327:	mov    QWORD PTR [rsp+0x80],rsi
   14003c32f:	mov    QWORD PTR [rsp+0x88],rdi
   14003c337:	movzx  edi,BYTE PTR [r14]
   14003c33b:	xor    esi,esi
   14003c33d:	lea    rbx,[r14+0x1]
   14003c341:	cmp    DWORD PTR [r10+0x10c],0x1
   14003c349:	jle    0x14003c365
   14003c34b:	lea    r8,[rsp+0x30]
   14003c350:	movzx  ecx,dil
   14003c354:	mov    edx,0x8
   14003c359:	call   0x14003c5c0
   14003c35e:	mov    r10,QWORD PTR [rsp+0x30]
   14003c363:	jmp    0x14003c376
   14003c365:	mov    rax,QWORD PTR [r10+0x140]
   14003c36c:	movzx  ecx,dil
   14003c370:	mov    al,BYTE PTR [rax+rcx*2]
   14003c373:	and    eax,0x8
   14003c376:	test   eax,eax
   14003c378:	je     0x14003c383
   14003c37a:	mov    dil,BYTE PTR [rbx]
   14003c37d:	add    rbx,0x1
   14003c381:	jmp    0x14003c341
   14003c383:	cmp    dil,0x2d
   14003c387:	mov    QWORD PTR [rsp+0x78],rbp
   14003c38c:	jne    0x14003c3a1
   14003c38e:	mov    ebp,DWORD PTR [rsp+0x90]
   14003c395:	mov    dil,BYTE PTR [rbx]
   14003c398:	or     ebp,0x2
   14003c39b:	add    rbx,0x1
   14003c39f:	jmp    0x14003c3be
   14003c3a1:	cmp    dil,0x2b
   14003c3a5:	jne    0x14003c3b7
   14003c3a7:	mov    dil,BYTE PTR [rbx]
   14003c3aa:	mov    ebp,DWORD PTR [rsp+0x90]
   14003c3b1:	add    rbx,0x1
   14003c3b5:	jmp    0x14003c3be
   14003c3b7:	mov    ebp,DWORD PTR [rsp+0x90]
   14003c3be:	test   r12d,r12d
   14003c3c1:	js     0x14003c532
   14003c3c7:	cmp    r12d,0x1
   14003c3cb:	je     0x14003c532
   14003c3d1:	cmp    r12d,0x24
   14003c3d5:	jg     0x14003c532
   14003c3db:	test   r12d,r12d
   14003c3de:	jne    0x14003c409
   14003c3e0:	cmp    dil,0x30
   14003c3e4:	je     0x14003c3ee
   14003c3e6:	mov    r12d,0xa
   14003c3ec:	jmp    0x14003c428
   14003c3ee:	movzx  eax,BYTE PTR [rbx]
   14003c3f1:	cmp    al,0x78
   14003c3f3:	je     0x14003c401
   14003c3f5:	cmp    al,0x58
   14003c3f7:	je     0x14003c401
   14003c3f9:	mov    r12d,0x8
   14003c3ff:	jmp    0x14003c428
   14003c401:	mov    r12d,0x10
   14003c407:	jmp    0x14003c415
   14003c409:	cmp    r12d,0x10
   14003c40d:	jne    0x14003c428
   14003c40f:	cmp    dil,0x30
   14003c413:	jne    0x14003c428
   14003c415:	movzx  eax,BYTE PTR [rbx]
   14003c418:	cmp    al,0x78
   14003c41a:	je     0x14003c420
   14003c41c:	cmp    al,0x58
   14003c41e:	jne    0x14003c428
   14003c420:	mov    dil,BYTE PTR [rbx+0x1]
   14003c424:	add    rbx,0x2
   14003c428:	mov    r11,QWORD PTR [r10+0x140]
   14003c42f:	xor    edx,edx
   14003c431:	or     eax,0xffffffff
   14003c434:	div    r12d
   14003c437:	mov    r9d,eax
   14003c43a:	data16 xchg ax,ax
   14003c43d:	data16 xchg ax,ax
   14003c440:	movzx  ecx,dil
   14003c444:	movzx  r8d,WORD PTR [r11+rcx*2]
   14003c449:	test   r8b,0x4
   14003c44d:	je     0x14003c458
   14003c44f:	movsx  ecx,dil
   14003c453:	sub    ecx,0x30
   14003c456:	jmp    0x14003c478
   14003c458:	test   r8d,0x103
   14003c45f:	je     0x14003c496
   14003c461:	lea    eax,[rdi-0x61]
   14003c464:	cmp    al,0x19
   14003c466:	ja     0x14003c471
   14003c468:	movsx  ecx,dil
   14003c46c:	sub    ecx,0x20
   14003c46f:	jmp    0x14003c475
   14003c471:	movsx  ecx,dil
   14003c475:	add    ecx,0xffffffc9
   14003c478:	cmp    ecx,r12d
   14003c47b:	jae    0x14003c496
   14003c47d:	or     ebp,0x8
   14003c480:	cmp    esi,r9d
   14003c483:	jb     0x14003c4ab
   14003c485:	cmp    esi,r9d
   14003c488:	jne    0x14003c48e
   14003c48a:	cmp    ecx,edx
   14003c48c:	jbe    0x14003c4ab
   14003c48e:	or     ebp,0x4
   14003c491:	test   r13,r13
   14003c494:	jne    0x14003c4b1
   14003c496:	sub    rbx,0x1
   14003c49a:	test   bpl,0x8
   14003c49e:	jne    0x14003c4ba
   14003c4a0:	test   r13,r13
   14003c4a3:	cmovne rbx,r14
   14003c4a7:	xor    esi,esi
   14003c4a9:	jmp    0x14003c50a
   14003c4ab:	imul   esi,r12d
   14003c4af:	add    esi,ecx
   14003c4b1:	mov    dil,BYTE PTR [rbx]
   14003c4b4:	add    rbx,0x1
   14003c4b8:	jmp    0x14003c440
   14003c4ba:	test   bpl,0x4
   14003c4be:	jne    0x14003c4e1
   14003c4c0:	test   bpl,0x1
   14003c4c4:	jne    0x14003c50a
   14003c4c6:	mov    eax,ebp
   14003c4c8:	and    eax,0x2
   14003c4cb:	je     0x14003c4d5
   14003c4cd:	cmp    esi,0x80000000
   14003c4d3:	ja     0x14003c4e1
   14003c4d5:	test   eax,eax
   14003c4d7:	jne    0x14003c50a
   14003c4d9:	cmp    esi,0x7fffffff
   14003c4df:	jbe    0x14003c50a
   14003c4e1:	call   0x14002bca0
   14003c4e6:	test   bpl,0x1
   14003c4ea:	mov    DWORD PTR [rax],0x22
   14003c4f0:	je     0x14003c4f7
   14003c4f2:	or     esi,0xffffffff
   14003c4f5:	jmp    0x14003c50a
   14003c4f7:	test   bpl,0x2
   14003c4fb:	mov    esi,0x0
   14003c500:	setne  sil
   14003c504:	add    esi,0x7fffffff
   14003c50a:	test   r13,r13
   14003c50d:	je     0x14003c513
   14003c50f:	mov    QWORD PTR [r13+0x0],rbx
   14003c513:	test   bpl,0x2
   14003c517:	je     0x14003c51b
   14003c519:	neg    esi
   14003c51b:	cmp    BYTE PTR [rsp+0x48],0x0
   14003c520:	je     0x14003c52e
   14003c522:	mov    rcx,QWORD PTR [rsp+0x40]
   14003c527:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003c52e:	mov    eax,esi
   14003c530:	jmp    0x14003c550
   14003c532:	test   r13,r13
   14003c535:	je     0x14003c53b
   14003c537:	mov    QWORD PTR [r13+0x0],r14
   14003c53b:	cmp    BYTE PTR [rsp+0x48],sil
   14003c540:	je     0x14003c54e
   14003c542:	mov    rax,QWORD PTR [rsp+0x40]
   14003c547:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003c54e:	xor    eax,eax
   14003c550:	mov    rbp,QWORD PTR [rsp+0x78]
   14003c555:	mov    rsi,QWORD PTR [rsp+0x80]
   14003c55d:	mov    rbx,QWORD PTR [rsp+0x70]
   14003c562:	mov    rdi,QWORD PTR [rsp+0x88]
   14003c56a:	add    rsp,0x50
   14003c56e:	pop    r14
   14003c570:	pop    r13
   14003c572:	pop    r12
   14003c574:	ret    
   14003c575:	int3   
   14003c576:	int3   
   14003c577:	int3   
   14003c578:	int3   
   14003c579:	int3   
   14003c57a:	int3   
   14003c57b:	int3   
   14003c57c:	int3   
   14003c57d:	int3   
   14003c57e:	int3   
   14003c57f:	int3   
   14003c580:	sub    rsp,0x38
   14003c584:	cmp    DWORD PTR [rip+0x252cd],0x0        # 0x140061858
   14003c58b:	mov    r9d,r8d
   14003c58e:	mov    r8,rdx
   14003c591:	mov    rdx,rcx
   14003c594:	mov    DWORD PTR [rsp+0x20],0x0
   14003c59c:	jne    0x14003c5af
   14003c59e:	lea    rcx,[rip+0x1f4bb]        # 0x14005ba60
   14003c5a5:	call   0x14003c1f0
   14003c5aa:	add    rsp,0x38
   14003c5ae:	ret    
   14003c5af:	xor    ecx,ecx
   14003c5b1:	call   0x14003c1f0
   14003c5b6:	add    rsp,0x38
   14003c5ba:	ret    
   14003c5bb:	int3   
   14003c5bc:	int3   
   14003c5bd:	int3   
   14003c5be:	int3   
   14003c5bf:	int3   
   14003c5c0:	mov    QWORD PTR [rsp+0x20],rbx
   14003c5c5:	push   rsi
   14003c5c6:	sub    rsp,0x60
   14003c5ca:	test   r8,r8
   14003c5cd:	mov    esi,edx
   14003c5cf:	movsxd rbx,ecx
   14003c5d2:	mov    BYTE PTR [rsp+0x58],0x0
   14003c5d7:	jne    0x14003c673
   14003c5dd:	call   0x14002e210
   14003c5e2:	mov    QWORD PTR [rsp+0x50],rax
   14003c5e7:	mov    r11,rax
   14003c5ea:	mov    r8,QWORD PTR [rax+0xc0]
   14003c5f1:	cmp    r8,QWORD PTR [rip+0x1f458]        # 0x14005ba50
   14003c5f8:	mov    QWORD PTR [rsp+0x40],r8
   14003c5fd:	mov    rax,QWORD PTR [rax+0xb8]
   14003c604:	mov    QWORD PTR [rsp+0x48],rax
   14003c609:	je     0x14003c62e
   14003c60b:	mov    ecx,DWORD PTR [r11+0xc8]
   14003c612:	test   DWORD PTR [rip+0x1f2c0],ecx        # 0x14005b8d8
   14003c618:	jne    0x14003c62e
   14003c61a:	call   0x140031a10
   14003c61f:	mov    r11,QWORD PTR [rsp+0x50]
   14003c624:	mov    QWORD PTR [rsp+0x40],rax
   14003c629:	mov    rax,QWORD PTR [rsp+0x48]
   14003c62e:	cmp    rax,QWORD PTR [rip+0x1f19b]        # 0x14005b7d0
   14003c635:	je     0x14003c655
   14003c637:	mov    eax,DWORD PTR [r11+0xc8]
   14003c63e:	test   DWORD PTR [rip+0x1f294],eax        # 0x14005b8d8
   14003c644:	jne    0x14003c655
   14003c646:	call   0x140030ec0
   14003c64b:	mov    r11,QWORD PTR [rsp+0x50]
   14003c650:	mov    QWORD PTR [rsp+0x48],rax
   14003c655:	test   BYTE PTR [r11+0xc8],0x2
   14003c65d:	jne    0x14003c68b
   14003c65f:	or     DWORD PTR [r11+0xc8],0x2
   14003c667:	mov    r11,QWORD PTR [rsp+0x50]
   14003c66c:	mov    BYTE PTR [rsp+0x58],0x1
   14003c671:	jmp    0x14003c68b
   14003c673:	mov    rax,QWORD PTR [r8]
   14003c676:	lea    rcx,[rsp+0x40]
   14003c67b:	mov    QWORD PTR [rcx],rax
   14003c67e:	mov    rax,QWORD PTR [r8+0x8]
   14003c682:	mov    QWORD PTR [rcx+0x8],rax
   14003c686:	mov    r11,QWORD PTR [rsp+0x50]
   14003c68b:	lea    eax,[rbx+0x1]
   14003c68e:	cmp    eax,0x100
   14003c693:	ja     0x14003c6c8
   14003c695:	mov    rax,QWORD PTR [rsp+0x40]
   14003c69a:	mov    rcx,QWORD PTR [rax+0x140]
   14003c6a1:	movzx  eax,WORD PTR [rcx+rbx*2]
   14003c6a5:	and    eax,esi
   14003c6a7:	cmp    BYTE PTR [rsp+0x58],0x0
   14003c6ac:	je     0x14003c799
   14003c6b2:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14003c6ba:	mov    rbx,QWORD PTR [rsp+0x88]
   14003c6c2:	add    rsp,0x60
   14003c6c6:	pop    rsi
   14003c6c7:	ret    
   14003c6c8:	mov    QWORD PTR [rsp+0x78],rdi
   14003c6cd:	mov    edi,ebx
   14003c6cf:	lea    rdx,[rsp+0x40]
   14003c6d4:	sar    edi,0x8
   14003c6d7:	movzx  ecx,dil
   14003c6db:	call   0x140038880
   14003c6e0:	test   eax,eax
   14003c6e2:	je     0x14003c703
   14003c6e4:	mov    BYTE PTR [rsp+0x80],dil
   14003c6ec:	mov    BYTE PTR [rsp+0x81],bl
   14003c6f3:	mov    BYTE PTR [rsp+0x82],0x0
   14003c6fb:	mov    r9d,0x2
   14003c701:	jmp    0x14003c718
   14003c703:	mov    BYTE PTR [rsp+0x80],bl
   14003c70a:	mov    BYTE PTR [rsp+0x81],0x0
   14003c712:	mov    r9d,0x1
   14003c718:	mov    rcx,QWORD PTR [rsp+0x40]
   14003c71d:	mov    DWORD PTR [rsp+0x38],0x1
   14003c725:	lea    r8,[rsp+0x80]
   14003c72d:	mov    eax,DWORD PTR [rcx+0x14]
   14003c730:	mov    edx,0x1
   14003c735:	mov    DWORD PTR [rsp+0x30],eax
   14003c739:	mov    eax,DWORD PTR [rcx+0x4]
   14003c73c:	lea    rcx,[rsp+0x40]
   14003c741:	mov    DWORD PTR [rsp+0x28],eax
   14003c745:	lea    rax,[rsp+0x70]
   14003c74a:	mov    QWORD PTR [rsp+0x20],rax
   14003c74f:	call   0x1400395b0
   14003c754:	mov    rdi,QWORD PTR [rsp+0x78]
   14003c759:	test   eax,eax
   14003c75b:	jne    0x14003c77f
   14003c75d:	cmp    BYTE PTR [rsp+0x58],al
   14003c761:	je     0x14003c76f
   14003c763:	mov    rax,QWORD PTR [rsp+0x50]
   14003c768:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003c76f:	xor    eax,eax
   14003c771:	mov    rbx,QWORD PTR [rsp+0x88]
   14003c779:	add    rsp,0x60
   14003c77d:	pop    rsi
   14003c77e:	ret    
   14003c77f:	movzx  eax,WORD PTR [rsp+0x70]
   14003c784:	and    eax,esi
   14003c786:	cmp    BYTE PTR [rsp+0x58],0x0
   14003c78b:	je     0x14003c799
   14003c78d:	mov    rcx,QWORD PTR [rsp+0x50]
   14003c792:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003c799:	mov    rbx,QWORD PTR [rsp+0x88]
   14003c7a1:	add    rsp,0x60
   14003c7a5:	pop    rsi
   14003c7a6:	ret    
   14003c7a7:	int3   
   14003c7a8:	int3   
   14003c7a9:	int3   
   14003c7aa:	int3   
   14003c7ab:	int3   
   14003c7ac:	int3   
   14003c7ad:	int3   
   14003c7ae:	int3   
   14003c7af:	int3   
   14003c7b0:	rex push rdi
   14003c7b2:	sub    rsp,0x30
   14003c7b6:	test   rcx,rcx
   14003c7b9:	mov    rdi,rcx
   14003c7bc:	jne    0x14003c7e8
   14003c7be:	call   0x14002bca0
   14003c7c3:	xor    r9d,r9d
   14003c7c6:	xor    r8d,r8d
   14003c7c9:	xor    edx,edx
   14003c7cb:	xor    ecx,ecx
   14003c7cd:	mov    QWORD PTR [rsp+0x20],rdi
   14003c7d2:	mov    DWORD PTR [rax],0x16
   14003c7d8:	call   0x14002e900
   14003c7dd:	mov    eax,0xffff
   14003c7e2:	add    rsp,0x30
   14003c7e6:	pop    rdi
   14003c7e7:	ret    
   14003c7e8:	mov    eax,DWORD PTR [rcx+0x18]
   14003c7eb:	test   al,0x83
   14003c7ed:	je     0x14003c92f
   14003c7f3:	test   al,0x40
   14003c7f5:	jne    0x14003c92f
   14003c7fb:	test   al,0x2
   14003c7fd:	je     0x14003c810
   14003c7ff:	or     eax,0x20
   14003c802:	mov    DWORD PTR [rcx+0x18],eax
   14003c805:	mov    eax,0xffff
   14003c80a:	add    rsp,0x30
   14003c80e:	pop    rdi
   14003c80f:	ret    
   14003c810:	or     eax,0x1
   14003c813:	test   eax,0x10c
   14003c818:	mov    DWORD PTR [rcx+0x18],eax
   14003c81b:	jne    0x14003c824
   14003c81d:	call   0x140038260
   14003c822:	jmp    0x14003c82b
   14003c824:	mov    rax,QWORD PTR [rcx+0x10]
   14003c828:	mov    QWORD PTR [rcx],rax
   14003c82b:	mov    rcx,rdi
   14003c82e:	call   0x1400385a0
   14003c833:	mov    r8d,DWORD PTR [rdi+0x24]
   14003c837:	mov    rdx,QWORD PTR [rdi+0x10]
   14003c83b:	mov    ecx,eax
   14003c83d:	call   0x140040300
   14003c842:	test   eax,eax
   14003c844:	mov    r11d,eax
   14003c847:	mov    DWORD PTR [rdi+0x8],eax
   14003c84a:	je     0x14003c915
   14003c850:	cmp    eax,0x1
   14003c853:	je     0x14003c915
   14003c859:	cmp    eax,0xffffffff
   14003c85c:	je     0x14003c915
   14003c862:	test   BYTE PTR [rdi+0x18],0x82
   14003c866:	jne    0x14003c8e1
   14003c868:	mov    rcx,rdi
   14003c86b:	call   0x1400385a0
   14003c870:	cmp    eax,0xffffffff
   14003c873:	je     0x14003c8c9
   14003c875:	mov    rcx,rdi
   14003c878:	call   0x1400385a0
   14003c87d:	cmp    eax,0xfffffffe
   14003c880:	je     0x14003c8c9
   14003c882:	mov    rcx,rdi
   14003c885:	mov    QWORD PTR [rsp+0x40],rbx
   14003c88a:	mov    QWORD PTR [rsp+0x48],rsi
   14003c88f:	call   0x1400385a0
   14003c894:	mov    rcx,rdi
   14003c897:	lea    rsi,[rip+0x26722]        # 0x140062fc0
   14003c89e:	movsxd rbx,eax
   14003c8a1:	sar    rbx,0x5
   14003c8a5:	call   0x1400385a0
   14003c8aa:	mov    r11d,eax
   14003c8ad:	and    r11d,0x1f
   14003c8b1:	lea    rax,[r11+r11*4]
   14003c8b5:	shl    rax,0x4
   14003c8b9:	add    rax,QWORD PTR [rsi+rbx*8]
   14003c8bd:	mov    rsi,QWORD PTR [rsp+0x48]
   14003c8c2:	mov    rbx,QWORD PTR [rsp+0x40]
   14003c8c7:	jmp    0x14003c8d0
   14003c8c9:	lea    rax,[rip+0x1ea60]        # 0x14005b330
   14003c8d0:	movzx  eax,BYTE PTR [rax+0x8]
   14003c8d4:	and    al,0x82
   14003c8d6:	cmp    al,0x82
   14003c8d8:	jne    0x14003c8e1
   14003c8da:	or     DWORD PTR [rdi+0x18],0x2000
   14003c8e1:	cmp    DWORD PTR [rdi+0x24],0x200
   14003c8e8:	jne    0x14003c8fe
   14003c8ea:	mov    eax,DWORD PTR [rdi+0x18]
   14003c8ed:	test   al,0x8
   14003c8ef:	je     0x14003c8fe
   14003c8f1:	bt     eax,0xa
   14003c8f5:	jb     0x14003c8fe
   14003c8f7:	mov    DWORD PTR [rdi+0x24],0x1000
   14003c8fe:	mov    rcx,QWORD PTR [rdi]
   14003c901:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14003c905:	movzx  eax,WORD PTR [rcx]
   14003c908:	add    rcx,0x2
   14003c90c:	mov    QWORD PTR [rdi],rcx
   14003c90f:	add    rsp,0x30
   14003c913:	pop    rdi
   14003c914:	ret    
   14003c915:	test   r11d,r11d
   14003c918:	mov    eax,0x10
   14003c91d:	mov    ecx,0x20
   14003c922:	cmovne eax,ecx
   14003c925:	mov    DWORD PTR [rdi+0x8],0x0
   14003c92c:	or     DWORD PTR [rdi+0x18],eax
   14003c92f:	mov    eax,0xffff
   14003c934:	add    rsp,0x30
   14003c938:	pop    rdi
   14003c939:	ret    
   14003c93a:	int3   
   14003c93b:	int3   
   14003c93c:	int3   
   14003c93d:	int3   
   14003c93e:	int3   
   14003c93f:	int3   
   14003c940:	mov    QWORD PTR [rsp+0x8],rbx
   14003c945:	mov    QWORD PTR [rsp+0x10],rbp
   14003c94a:	mov    QWORD PTR [rsp+0x18],rsi
   14003c94f:	mov    QWORD PTR [rsp+0x20],rdi
   14003c954:	push   r12
   14003c956:	sub    rsp,0x30
   14003c95a:	test   BYTE PTR [rdx+0x18],0x40
   14003c95e:	mov    rdi,rdx
   14003c961:	mov    esi,ecx
   14003c963:	jne    0x14003ca51
   14003c969:	mov    rcx,rdx
   14003c96c:	call   0x1400385a0
   14003c971:	lea    rbp,[rip+0x1e9b8]        # 0x14005b330
   14003c978:	lea    r12,[rip+0x26641]        # 0x140062fc0
   14003c97f:	cmp    eax,0xffffffff
   14003c982:	je     0x14003c9bd
   14003c984:	mov    rcx,rdi
   14003c987:	call   0x1400385a0
   14003c98c:	cmp    eax,0xfffffffe
   14003c98f:	je     0x14003c9bd
   14003c991:	mov    rcx,rdi
   14003c994:	call   0x1400385a0
   14003c999:	mov    rcx,rdi
   14003c99c:	movsxd rbx,eax
   14003c99f:	sar    rbx,0x5
   14003c9a3:	call   0x1400385a0
   14003c9a8:	mov    r11d,eax
   14003c9ab:	and    r11d,0x1f
   14003c9af:	lea    rax,[r11+r11*4]
   14003c9b3:	shl    rax,0x4
   14003c9b7:	add    rax,QWORD PTR [r12+rbx*8]
   14003c9bb:	jmp    0x14003c9c0
   14003c9bd:	mov    rax,rbp
   14003c9c0:	test   BYTE PTR [rax+0x38],0x7f
   14003c9c4:	jne    0x14003ca10
   14003c9c6:	mov    rcx,rdi
   14003c9c9:	call   0x1400385a0
   14003c9ce:	cmp    eax,0xffffffff
   14003c9d1:	je     0x14003ca0a
   14003c9d3:	mov    rcx,rdi
   14003c9d6:	call   0x1400385a0
   14003c9db:	cmp    eax,0xfffffffe
   14003c9de:	je     0x14003ca0a
   14003c9e0:	mov    rcx,rdi
   14003c9e3:	call   0x1400385a0
   14003c9e8:	mov    rcx,rdi
   14003c9eb:	movsxd rbx,eax
   14003c9ee:	sar    rbx,0x5
   14003c9f2:	call   0x1400385a0
   14003c9f7:	mov    r11d,eax
   14003c9fa:	and    r11d,0x1f
   14003c9fe:	lea    rbp,[r11+r11*4]
   14003ca02:	shl    rbp,0x4
   14003ca06:	add    rbp,QWORD PTR [r12+rbx*8]
   14003ca0a:	test   BYTE PTR [rbp+0x38],0x80
   14003ca0e:	je     0x14003ca51
   14003ca10:	call   0x14002bca0
   14003ca15:	xor    r9d,r9d
   14003ca18:	xor    r8d,r8d
   14003ca1b:	xor    edx,edx
   14003ca1d:	xor    ecx,ecx
   14003ca1f:	mov    QWORD PTR [rsp+0x20],0x0
   14003ca28:	mov    DWORD PTR [rax],0x16
   14003ca2e:	call   0x14002e900
   14003ca33:	or     eax,0xffffffff
   14003ca36:	mov    rbx,QWORD PTR [rsp+0x40]
   14003ca3b:	mov    rbp,QWORD PTR [rsp+0x48]
   14003ca40:	mov    rsi,QWORD PTR [rsp+0x50]
   14003ca45:	mov    rdi,QWORD PTR [rsp+0x58]
   14003ca4a:	add    rsp,0x30
   14003ca4e:	pop    r12
   14003ca50:	ret    
   14003ca51:	cmp    esi,0xffffffff
   14003ca54:	je     0x14003ca33
   14003ca56:	mov    eax,DWORD PTR [rdi+0x18]
   14003ca59:	test   al,0x1
   14003ca5b:	jne    0x14003ca65
   14003ca5d:	test   al,al
   14003ca5f:	jns    0x14003ca33
   14003ca61:	test   al,0x2
   14003ca63:	jne    0x14003ca33
   14003ca65:	cmp    QWORD PTR [rdi+0x10],0x0
   14003ca6a:	jne    0x14003ca74
   14003ca6c:	mov    rcx,rdi
   14003ca6f:	call   0x140038260
   14003ca74:	mov    rax,QWORD PTR [rdi]
   14003ca77:	cmp    rax,QWORD PTR [rdi+0x10]
   14003ca7b:	jne    0x14003ca8a
   14003ca7d:	cmp    DWORD PTR [rdi+0x8],0x0
   14003ca81:	jne    0x14003ca33
   14003ca83:	add    rax,0x1
   14003ca87:	mov    QWORD PTR [rdi],rax
   14003ca8a:	add    QWORD PTR [rdi],0xffffffffffffffff
   14003ca8e:	test   BYTE PTR [rdi+0x18],0x40
   14003ca92:	mov    rax,QWORD PTR [rdi]
   14003ca95:	je     0x14003caa5
   14003ca97:	cmp    BYTE PTR [rax],sil
   14003ca9a:	je     0x14003caa8
   14003ca9c:	add    rax,0x1
   14003caa0:	mov    QWORD PTR [rdi],rax
   14003caa3:	jmp    0x14003ca33
   14003caa5:	mov    BYTE PTR [rax],sil
   14003caa8:	add    DWORD PTR [rdi+0x8],0x1
   14003caac:	and    DWORD PTR [rdi+0x18],0xffffffef
   14003cab0:	or     DWORD PTR [rdi+0x18],0x1
   14003cab4:	movzx  eax,sil
   14003cab8:	jmp    0x14003ca36
   14003cabd:	int3   
   14003cabe:	int3   
   14003cabf:	int3   
   14003cac0:	mov    QWORD PTR [rsp+0x8],rbx
   14003cac5:	mov    QWORD PTR [rsp+0x10],rdx
   14003caca:	push   rdi
   14003cacb:	sub    rsp,0x30
   14003cacf:	mov    rbx,rdx
   14003cad2:	mov    edi,ecx
   14003cad4:	xor    eax,eax
   14003cad6:	test   rdx,rdx
   14003cad9:	setne  al
   14003cadc:	test   eax,eax
   14003cade:	jne    0x14003cb08
   14003cae0:	call   0x14002bca0
   14003cae5:	mov    DWORD PTR [rax],0x16
   14003caeb:	mov    QWORD PTR [rsp+0x20],0x0
   14003caf4:	xor    r9d,r9d
   14003caf7:	xor    r8d,r8d
   14003cafa:	xor    edx,edx
   14003cafc:	xor    ecx,ecx
   14003cafe:	call   0x14002e900
   14003cb03:	or     eax,0xffffffff
   14003cb06:	jmp    0x14003cb27
   14003cb08:	mov    rcx,rdx
   14003cb0b:	call   0x140038480
   14003cb10:	nop
   14003cb11:	mov    rdx,rbx
   14003cb14:	mov    ecx,edi
   14003cb16:	call   0x14003c940
   14003cb1b:	mov    edi,eax
   14003cb1d:	mov    rcx,rbx
   14003cb20:	call   0x140038530
   14003cb25:	mov    eax,edi
   14003cb27:	mov    rbx,QWORD PTR [rsp+0x40]
   14003cb2c:	add    rsp,0x30
   14003cb30:	pop    rdi
   14003cb31:	ret    
   14003cb32:	int3   
   14003cb33:	int3   
   14003cb34:	int3   
   14003cb35:	int3   
   14003cb36:	int3   
   14003cb37:	int3   
   14003cb38:	int3   
   14003cb39:	int3   
   14003cb3a:	int3   
   14003cb3b:	int3   
   14003cb3c:	int3   
   14003cb3d:	int3   
   14003cb3e:	int3   
   14003cb3f:	int3   
   14003cb40:	rex push rbp
   14003cb42:	sub    rsp,0x30
   14003cb46:	mov    rbp,rdx
   14003cb49:	mov    rcx,QWORD PTR [rbp+0x48]
   14003cb4d:	call   0x140038530
   14003cb52:	add    rsp,0x30
   14003cb56:	pop    rbp
   14003cb57:	ret    
   14003cb58:	int3   
   14003cb59:	int3   
   14003cb5a:	int3   
   14003cb5b:	int3   
   14003cb5c:	int3   
   14003cb5d:	int3   
   14003cb5e:	int3   
   14003cb5f:	int3   
   14003cb60:	rex push rdi
   14003cb62:	sub    rsp,0x30
   14003cb66:	test   rcx,rcx
   14003cb69:	mov    rdi,rcx
   14003cb6c:	jne    0x14003cb96
   14003cb6e:	call   0x14002bca0
   14003cb73:	xor    r9d,r9d
   14003cb76:	xor    r8d,r8d
   14003cb79:	xor    edx,edx
   14003cb7b:	xor    ecx,ecx
   14003cb7d:	mov    QWORD PTR [rsp+0x20],rdi
   14003cb82:	mov    DWORD PTR [rax],0x16
   14003cb88:	call   0x14002e900
   14003cb8d:	or     eax,0xffffffff
   14003cb90:	add    rsp,0x30
   14003cb94:	pop    rdi
   14003cb95:	ret    
   14003cb96:	mov    eax,DWORD PTR [rcx+0x18]
   14003cb99:	test   al,0x83
   14003cb9b:	je     0x14003ccd2
   14003cba1:	test   al,0x40
   14003cba3:	jne    0x14003ccd2
   14003cba9:	test   al,0x2
   14003cbab:	je     0x14003cbbc
   14003cbad:	or     eax,0x20
   14003cbb0:	mov    DWORD PTR [rcx+0x18],eax
   14003cbb3:	or     eax,0xffffffff
   14003cbb6:	add    rsp,0x30
   14003cbba:	pop    rdi
   14003cbbb:	ret    
   14003cbbc:	or     eax,0x1
   14003cbbf:	test   eax,0x10c
   14003cbc4:	mov    DWORD PTR [rcx+0x18],eax
   14003cbc7:	jne    0x14003cbd0
   14003cbc9:	call   0x140038260
   14003cbce:	jmp    0x14003cbd7
   14003cbd0:	mov    rax,QWORD PTR [rcx+0x10]
   14003cbd4:	mov    QWORD PTR [rcx],rax
   14003cbd7:	mov    rcx,rdi
   14003cbda:	call   0x1400385a0
   14003cbdf:	mov    r8d,DWORD PTR [rdi+0x24]
   14003cbe3:	mov    rdx,QWORD PTR [rdi+0x10]
   14003cbe7:	mov    ecx,eax
   14003cbe9:	call   0x140040300
   14003cbee:	test   eax,eax
   14003cbf0:	mov    r11d,eax
   14003cbf3:	mov    DWORD PTR [rdi+0x8],eax
   14003cbf6:	je     0x14003ccb8
   14003cbfc:	cmp    eax,0xffffffff
   14003cbff:	je     0x14003ccb8
   14003cc05:	test   BYTE PTR [rdi+0x18],0x82
   14003cc09:	jne    0x14003cc84
   14003cc0b:	mov    rcx,rdi
   14003cc0e:	call   0x1400385a0
   14003cc13:	cmp    eax,0xffffffff
   14003cc16:	je     0x14003cc6c
   14003cc18:	mov    rcx,rdi
   14003cc1b:	call   0x1400385a0
   14003cc20:	cmp    eax,0xfffffffe
   14003cc23:	je     0x14003cc6c
   14003cc25:	mov    rcx,rdi
   14003cc28:	mov    QWORD PTR [rsp+0x40],rbx
   14003cc2d:	mov    QWORD PTR [rsp+0x48],rsi
   14003cc32:	call   0x1400385a0
   14003cc37:	mov    rcx,rdi
   14003cc3a:	lea    rsi,[rip+0x2637f]        # 0x140062fc0
   14003cc41:	movsxd rbx,eax
   14003cc44:	sar    rbx,0x5
   14003cc48:	call   0x1400385a0
   14003cc4d:	mov    r11d,eax
   14003cc50:	and    r11d,0x1f
   14003cc54:	lea    rax,[r11+r11*4]
   14003cc58:	shl    rax,0x4
   14003cc5c:	add    rax,QWORD PTR [rsi+rbx*8]
   14003cc60:	mov    rsi,QWORD PTR [rsp+0x48]
   14003cc65:	mov    rbx,QWORD PTR [rsp+0x40]
   14003cc6a:	jmp    0x14003cc73
   14003cc6c:	lea    rax,[rip+0x1e6bd]        # 0x14005b330
   14003cc73:	movzx  eax,BYTE PTR [rax+0x8]
   14003cc77:	and    al,0x82
   14003cc79:	cmp    al,0x82
   14003cc7b:	jne    0x14003cc84
   14003cc7d:	or     DWORD PTR [rdi+0x18],0x2000
   14003cc84:	cmp    DWORD PTR [rdi+0x24],0x200
   14003cc8b:	jne    0x14003cca1
   14003cc8d:	mov    eax,DWORD PTR [rdi+0x18]
   14003cc90:	test   al,0x8
   14003cc92:	je     0x14003cca1
   14003cc94:	bt     eax,0xa
   14003cc98:	jb     0x14003cca1
   14003cc9a:	mov    DWORD PTR [rdi+0x24],0x1000
   14003cca1:	mov    rcx,QWORD PTR [rdi]
   14003cca4:	add    DWORD PTR [rdi+0x8],0xffffffff
   14003cca8:	movzx  eax,BYTE PTR [rcx]
   14003ccab:	add    rcx,0x1
   14003ccaf:	mov    QWORD PTR [rdi],rcx
   14003ccb2:	add    rsp,0x30
   14003ccb6:	pop    rdi
   14003ccb7:	ret    
   14003ccb8:	test   r11d,r11d
   14003ccbb:	mov    eax,0x10
   14003ccc0:	mov    ecx,0x20
   14003ccc5:	cmovne eax,ecx
   14003ccc8:	mov    DWORD PTR [rdi+0x8],0x0
   14003cccf:	or     DWORD PTR [rdi+0x18],eax
   14003ccd2:	or     eax,0xffffffff
   14003ccd5:	add    rsp,0x30
   14003ccd9:	pop    rdi
   14003ccda:	ret    
   14003ccdb:	int3   
   14003ccdc:	int3   
   14003ccdd:	int3   
   14003ccde:	int3   
   14003ccdf:	int3   
   14003cce0:	rex push rbp
   14003cce2:	push   r12
   14003cce4:	push   r13
   14003cce6:	push   r14
   14003cce8:	push   r15
   14003ccea:	sub    rsp,0x60
   14003ccee:	lea    rbp,[rsp+0x40]
   14003ccf3:	mov    QWORD PTR [rbp+0x50],rbx
   14003ccf7:	mov    QWORD PTR [rbp+0x58],rsi
   14003ccfb:	mov    QWORD PTR [rbp+0x60],rdi
   14003ccff:	mov    rax,QWORD PTR [rip+0x1e27a]        # 0x14005af80
   14003cd06:	xor    rax,rbp
   14003cd09:	mov    QWORD PTR [rbp+0x18],rax
   14003cd0d:	movsxd r13,r9d
   14003cd10:	mov    rdi,r8
   14003cd13:	mov    ebx,edx
   14003cd15:	cmp    r13d,0xffffffff
   14003cd19:	mov    DWORD PTR [rbp+0x0],edx
   14003cd1c:	mov    rsi,rcx
   14003cd1f:	mov    QWORD PTR [rbp+0x10],rcx
   14003cd23:	jl     0x14003cfca
   14003cd29:	mov    eax,DWORD PTR [rip+0x24f71]        # 0x140061ca0
   14003cd2f:	test   eax,eax
   14003cd31:	jne    0x14003cd7a
   14003cd33:	mov    r8d,0x1
   14003cd39:	lea    r9,[rbp+0x4]
   14003cd3d:	lea    rdx,[rip+0xbec0]        # 0x140048c04
   14003cd44:	mov    ecx,r8d
   14003cd47:	call   QWORD PTR [rip+0x65d3]        # 0x140043320
   14003cd4d:	test   eax,eax
   14003cd4f:	je     0x14003cd5d
   14003cd51:	mov    DWORD PTR [rip+0x24f45],0x1        # 0x140061ca0
   14003cd5b:	jmp    0x14003cd7f
   14003cd5d:	call   QWORD PTR [rip+0x6785]        # 0x1400434e8
   14003cd63:	cmp    eax,0x78
   14003cd66:	jne    0x14003cd74
   14003cd68:	mov    DWORD PTR [rip+0x24f2e],0x2        # 0x140061ca0
   14003cd72:	jmp    0x14003cda3
   14003cd74:	mov    eax,DWORD PTR [rip+0x24f26]        # 0x140061ca0
   14003cd7a:	cmp    eax,0x1
   14003cd7d:	jne    0x14003cd96
   14003cd7f:	mov    r9,QWORD PTR [rbp+0x70]
   14003cd83:	mov    r8d,r13d
   14003cd86:	mov    rdx,rdi
   14003cd89:	mov    ecx,ebx
   14003cd8b:	call   QWORD PTR [rip+0x658f]        # 0x140043320
   14003cd91:	jmp    0x14003cfcc
   14003cd96:	cmp    eax,0x2
   14003cd99:	je     0x14003cda3
   14003cd9b:	test   eax,eax
   14003cd9d:	jne    0x14003cfca
   14003cda3:	mov    r12d,DWORD PTR [rbp+0x80]
   14003cdaa:	xor    r14d,r14d
   14003cdad:	test   r12d,r12d
   14003cdb0:	mov    r15d,r14d
   14003cdb3:	jne    0x14003cdbc
   14003cdb5:	mov    rax,QWORD PTR [rsi]
   14003cdb8:	mov    r12d,DWORD PTR [rax+0x14]
   14003cdbc:	mov    ebx,DWORD PTR [rbp+0x78]
   14003cdbf:	test   ebx,ebx
   14003cdc1:	jne    0x14003cdc9
   14003cdc3:	mov    rax,QWORD PTR [rsi]
   14003cdc6:	mov    ebx,DWORD PTR [rax+0x4]
   14003cdc9:	mov    ecx,r12d
   14003cdcc:	call   0x140039ab0
   14003cdd1:	cmp    ebx,eax
   14003cdd3:	je     0x14003cddb
   14003cdd5:	cmp    eax,0xffffffff
   14003cdd8:	cmovne ebx,eax
   14003cddb:	mov    QWORD PTR [rsp+0x38],r14
   14003cde0:	mov    QWORD PTR [rsp+0x30],r14
   14003cde5:	mov    r9d,r13d
   14003cde8:	mov    r8,rdi
   14003cdeb:	xor    edx,edx
   14003cded:	mov    ecx,ebx
   14003cdef:	mov    DWORD PTR [rsp+0x28],r14d
   14003cdf4:	mov    QWORD PTR [rsp+0x20],r14
   14003cdf9:	call   QWORD PTR [rip+0x6639]        # 0x140043438
   14003cdff:	test   eax,eax
   14003ce01:	movsxd r14,eax
   14003ce04:	je     0x14003cfca
   14003ce0a:	jle    0x14003cfca
   14003ce10:	cmp    r14,0xffffffffffffffe0
   14003ce14:	ja     0x14003cfca
   14003ce1a:	lea    rcx,[r14+0x10]
   14003ce1e:	movabs rdx,0xffffffffffffff0
   14003ce28:	cmp    rcx,0x400
   14003ce2f:	ja     0x14003ce5f
   14003ce31:	lea    rax,[rcx+0xf]
   14003ce35:	cmp    rax,rcx
   14003ce38:	ja     0x14003ce3d
   14003ce3a:	mov    rax,rdx
   14003ce3d:	and    rax,0xfffffffffffffff0
   14003ce41:	call   0x140041ad0
   14003ce46:	sub    rsp,rax
   14003ce49:	lea    rsi,[rsp+0x40]
   14003ce4e:	test   rsi,rsi
   14003ce51:	je     0x14003cfca
   14003ce57:	mov    DWORD PTR [rsi],0xcccc
   14003ce5d:	jmp    0x14003ce72
   14003ce5f:	call   0x14002a110
   14003ce64:	test   rax,rax
   14003ce67:	mov    rsi,rax
   14003ce6a:	je     0x14003ce76
   14003ce6c:	mov    DWORD PTR [rax],0xdddd
   14003ce72:	add    rsi,0x10
   14003ce76:	test   rsi,rsi
   14003ce79:	je     0x14003cfca
   14003ce7f:	mov    r8,r14
   14003ce82:	xor    edx,edx
   14003ce84:	mov    rcx,rsi
   14003ce87:	call   0x14002ac20
   14003ce8c:	xor    eax,eax
   14003ce8e:	mov    r9d,r13d
   14003ce91:	mov    QWORD PTR [rsp+0x38],rax
   14003ce96:	mov    QWORD PTR [rsp+0x30],rax
   14003ce9b:	mov    r8,rdi
   14003ce9e:	xor    edx,edx
   14003cea0:	mov    ecx,ebx
   14003cea2:	mov    DWORD PTR [rsp+0x28],r14d
   14003cea7:	mov    QWORD PTR [rsp+0x20],rsi
   14003ceac:	call   QWORD PTR [rip+0x6586]        # 0x140043438
   14003ceb2:	test   eax,eax
   14003ceb4:	je     0x14003cfb3
   14003ceba:	lea    eax,[r14+0x1]
   14003cebe:	test   eax,eax
   14003cec0:	jle    0x14003cfb3
   14003cec6:	movsxd rcx,eax
   14003cec9:	movabs rax,0x7ffffffffffffff0
   14003ced3:	cmp    rcx,rax
   14003ced6:	ja     0x14003cfb3
   14003cedc:	lea    rcx,[rcx+rcx*1+0x10]
   14003cee1:	cmp    rcx,0x400
   14003cee8:	ja     0x14003cf1f
   14003ceea:	lea    rax,[rcx+0xf]
   14003ceee:	cmp    rax,rcx
   14003cef1:	ja     0x14003cefd
   14003cef3:	movabs rax,0xffffffffffffff0
   14003cefd:	and    rax,0xfffffffffffffff0
   14003cf01:	call   0x140041ad0
   14003cf06:	sub    rsp,rax
   14003cf09:	lea    rdi,[rsp+0x40]
   14003cf0e:	test   rdi,rdi
   14003cf11:	je     0x14003cfb3
   14003cf17:	mov    DWORD PTR [rdi],0xcccc
   14003cf1d:	jmp    0x14003cf32
   14003cf1f:	call   0x14002a110
   14003cf24:	test   rax,rax
   14003cf27:	mov    rdi,rax
   14003cf2a:	je     0x14003cf36
   14003cf2c:	mov    DWORD PTR [rax],0xdddd
   14003cf32:	add    rdi,0x10
   14003cf36:	test   rdi,rdi
   14003cf39:	je     0x14003cfb3
   14003cf3b:	test   r12d,r12d
   14003cf3e:	jne    0x14003cf4b
   14003cf40:	mov    rax,QWORD PTR [rbp+0x10]
   14003cf44:	mov    rax,QWORD PTR [rax]
   14003cf47:	mov    r12d,DWORD PTR [rax+0x14]
   14003cf4b:	mov    edx,DWORD PTR [rbp+0x0]
   14003cf4e:	mov    rbx,r13
   14003cf51:	add    r13,r13
   14003cf54:	mov    r9d,r14d
   14003cf57:	mov    r8,rsi
   14003cf5a:	mov    ecx,r12d
   14003cf5d:	mov    WORD PTR [r13+rdi*1+0x0],0xffff
   14003cf65:	mov    WORD PTR [rdi+rbx*2-0x2],0xffff
   14003cf6c:	mov    QWORD PTR [rsp+0x20],rdi
   14003cf71:	call   QWORD PTR [rip+0x63a1]        # 0x140043318
   14003cf77:	cmp    WORD PTR [rdi+rbx*2-0x2],0xffff
   14003cf7e:	mov    r15d,eax
   14003cf81:	je     0x14003cf9e
   14003cf83:	cmp    WORD PTR [r13+rdi*1+0x0],0xffff
   14003cf8b:	jne    0x14003cf9e
   14003cf8d:	mov    rcx,QWORD PTR [rbp+0x70]
   14003cf91:	mov    r8,r13
   14003cf94:	mov    rdx,rdi
   14003cf97:	call   0x14002b7a0
   14003cf9c:	jmp    0x14003cfa1
   14003cf9e:	xor    r15d,r15d
   14003cfa1:	cmp    DWORD PTR [rdi-0x10],0xdddd
   14003cfa8:	lea    rcx,[rdi-0x10]
   14003cfac:	jne    0x14003cfb3
   14003cfae:	call   0x14002a380
   14003cfb3:	cmp    DWORD PTR [rsi-0x10],0xdddd
   14003cfba:	lea    rcx,[rsi-0x10]
   14003cfbe:	jne    0x14003cfc5
   14003cfc0:	call   0x14002a380
   14003cfc5:	mov    eax,r15d
   14003cfc8:	jmp    0x14003cfcc
   14003cfca:	xor    eax,eax
   14003cfcc:	mov    rcx,QWORD PTR [rbp+0x18]
   14003cfd0:	xor    rcx,rbp
   14003cfd3:	call   0x140029b40
   14003cfd8:	mov    rbx,QWORD PTR [rbp+0x50]
   14003cfdc:	mov    rsi,QWORD PTR [rbp+0x58]
   14003cfe0:	mov    rdi,QWORD PTR [rbp+0x60]
   14003cfe4:	lea    rsp,[rbp+0x20]
   14003cfe8:	pop    r15
   14003cfea:	pop    r14
   14003cfec:	pop    r13
   14003cfee:	pop    r12
   14003cff0:	pop    rbp
   14003cff1:	ret    
   14003cff2:	int3   
   14003cff3:	int3   
   14003cff4:	int3   
   14003cff5:	int3   
   14003cff6:	int3   
   14003cff7:	int3   
   14003cff8:	int3   
   14003cff9:	int3   
   14003cffa:	int3   
   14003cffb:	int3   
   14003cffc:	int3   
   14003cffd:	int3   
   14003cffe:	int3   
   14003cfff:	int3   
   14003d000:	mov    rax,rsp
   14003d003:	push   rbx
   14003d004:	sub    rsp,0x70
   14003d008:	mov    QWORD PTR [rax+0x8],rbp
   14003d00c:	mov    QWORD PTR [rax+0x18],rdi
   14003d010:	xor    dil,dil
   14003d013:	test   rcx,rcx
   14003d016:	mov    QWORD PTR [rax-0x10],r12
   14003d01a:	mov    QWORD PTR [rax-0x18],r13
   14003d01e:	mov    BYTE PTR [rax-0x20],dil
   14003d022:	mov    ebp,r9d
   14003d025:	mov    r12,r8
   14003d028:	mov    r13d,edx
   14003d02b:	jne    0x14003d0be
   14003d031:	mov    QWORD PTR [rax+0x10],rsi
   14003d035:	call   0x14002e210
   14003d03a:	mov    rcx,QWORD PTR [rax+0xc0]
   14003d041:	mov    rsi,QWORD PTR [rax+0xb8]
   14003d048:	mov    rbx,rax
   14003d04b:	cmp    rcx,QWORD PTR [rip+0x1e9fe]        # 0x14005ba50
   14003d052:	mov    QWORD PTR [rsp+0x50],rax
   14003d057:	mov    QWORD PTR [rsp+0x40],rcx
   14003d05c:	mov    QWORD PTR [rsp+0x48],rsi
   14003d061:	je     0x14003d07b
   14003d063:	mov    ecx,DWORD PTR [rax+0xc8]
   14003d069:	test   DWORD PTR [rip+0x1e869],ecx        # 0x14005b8d8
   14003d06f:	jne    0x14003d07b
   14003d071:	call   0x140031a10
   14003d076:	mov    QWORD PTR [rsp+0x40],rax
   14003d07b:	cmp    rsi,QWORD PTR [rip+0x1e74e]        # 0x14005b7d0
   14003d082:	mov    rsi,QWORD PTR [rsp+0x88]
   14003d08a:	je     0x14003d0a4
   14003d08c:	mov    eax,DWORD PTR [rbx+0xc8]
   14003d092:	test   DWORD PTR [rip+0x1e840],eax        # 0x14005b8d8
   14003d098:	jne    0x14003d0a4
   14003d09a:	call   0x140030ec0
   14003d09f:	mov    QWORD PTR [rsp+0x48],rax
   14003d0a4:	test   BYTE PTR [rbx+0xc8],0x2
   14003d0ab:	jne    0x14003d0db
   14003d0ad:	or     DWORD PTR [rbx+0xc8],0x2
   14003d0b4:	mov    dil,0x1
   14003d0b7:	mov    BYTE PTR [rsp+0x58],dil
   14003d0bc:	jmp    0x14003d0db
   14003d0be:	mov    rax,QWORD PTR [rcx]
   14003d0c1:	lea    rdx,[rsp+0x40]
   14003d0c6:	mov    QWORD PTR [rdx],rax
   14003d0c9:	mov    rax,QWORD PTR [rcx+0x8]
   14003d0cd:	mov    QWORD PTR [rdx+0x8],rax
   14003d0d1:	movzx  edi,BYTE PTR [rsp+0x58]
   14003d0d6:	mov    rbx,QWORD PTR [rsp+0x50]
   14003d0db:	mov    eax,DWORD PTR [rsp+0xb0]
   14003d0e2:	lea    rcx,[rsp+0x40]
   14003d0e7:	mov    r9d,ebp
   14003d0ea:	mov    DWORD PTR [rsp+0x30],eax
   14003d0ee:	mov    eax,DWORD PTR [rsp+0xa8]
   14003d0f5:	mov    r8,r12
   14003d0f8:	mov    DWORD PTR [rsp+0x28],eax
   14003d0fc:	mov    rax,QWORD PTR [rsp+0xa0]
   14003d104:	mov    edx,r13d
   14003d107:	mov    QWORD PTR [rsp+0x20],rax
   14003d10c:	call   0x14003cce0
   14003d111:	mov    r13,QWORD PTR [rsp+0x60]
   14003d116:	mov    r12,QWORD PTR [rsp+0x68]
   14003d11b:	mov    rbp,QWORD PTR [rsp+0x80]
   14003d123:	test   dil,dil
   14003d126:	mov    rdi,QWORD PTR [rsp+0x90]
   14003d12e:	je     0x14003d137
   14003d130:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14003d137:	add    rsp,0x70
   14003d13b:	pop    rbx
   14003d13c:	ret    
   14003d13d:	int3   
   14003d13e:	int3   
   14003d13f:	int3   
   14003d140:	mov    rax,rsp
   14003d143:	mov    QWORD PTR [rax+0x10],rdx
   14003d147:	push   rdi
   14003d148:	sub    rsp,0x70
   14003d14c:	mov    QWORD PTR [rax+0x20],rbx
   14003d150:	mov    QWORD PTR [rax-0x18],rsi
   14003d154:	mov    QWORD PTR [rax-0x38],r15
   14003d158:	movzx  eax,WORD PTR [rcx+0xa]
   14003d15c:	mov    r9d,0x1f
   14003d162:	mov    esi,eax
   14003d164:	and    eax,0x8000
   14003d169:	mov    DWORD PTR [rsp+0x80],eax
   14003d170:	mov    eax,DWORD PTR [rcx+0x6]
   14003d173:	and    esi,0x7fff
   14003d179:	mov    DWORD PTR [rsp+0x20],eax
   14003d17d:	mov    eax,DWORD PTR [rcx+0x2]
   14003d180:	sub    esi,0x3fff
   14003d186:	mov    DWORD PTR [rsp+0x24],eax
   14003d18a:	movzx  eax,WORD PTR [rcx]
   14003d18d:	shl    eax,0x10
   14003d190:	cmp    esi,0xffffc001
   14003d196:	mov    DWORD PTR [rsp+0x28],eax
   14003d19a:	jne    0x14003d1d6
   14003d19c:	xor    edi,edi
   14003d19e:	mov    r9d,edi
   14003d1a1:	mov    rax,rdi
   14003d1a4:	cmp    DWORD PTR [rsp+rax*4+0x20],edi
   14003d1a8:	jne    0x14003d1bf
   14003d1aa:	add    rax,0x1
   14003d1ae:	cmp    rax,0x3
   14003d1b2:	jl     0x14003d1a4
   14003d1b4:	mov    r15d,0x1f
   14003d1ba:	jmp    0x14003d78d
   14003d1bf:	mov    QWORD PTR [rsp+0x20],rdi
   14003d1c4:	mov    DWORD PTR [rsp+0x28],edi
   14003d1c8:	mov    edi,0x2
   14003d1cd:	lea    r15d,[rdi+0x1d]
   14003d1d1:	jmp    0x14003d78d
   14003d1d6:	mov    QWORD PTR [rsp+0x68],rbp
   14003d1db:	lea    rcx,[rsp+0x20]
   14003d1e0:	mov    QWORD PTR [rsp+0x58],r12
   14003d1e5:	mov    rax,QWORD PTR [rcx]
   14003d1e8:	mov    QWORD PTR [rsp+0x50],r13
   14003d1ed:	mov    QWORD PTR [rsp+0x48],r14
   14003d1f2:	mov    r14d,DWORD PTR [rip+0x1f287]        # 0x14005c480
   14003d1f9:	mov    QWORD PTR [rsp+0x30],rax
   14003d1fe:	mov    eax,DWORD PTR [rcx+0x8]
   14003d201:	mov    DWORD PTR [rsp+0x38],eax
   14003d205:	xor    edi,edi
   14003d207:	mov    eax,r14d
   14003d20a:	cdq    
   14003d20b:	mov    r11d,r9d
   14003d20e:	or     ebp,0xffffffff
   14003d211:	and    edx,r9d
   14003d214:	mov    r15d,esi
   14003d217:	mov    ebx,edi
   14003d219:	add    eax,edx
   14003d21b:	mov    r10d,eax
   14003d21e:	and    eax,r9d
   14003d221:	sar    r10d,0x5
   14003d225:	sub    eax,edx
   14003d227:	movsxd r12,r10d
   14003d22a:	sub    r11d,eax
   14003d22d:	mov    ecx,DWORD PTR [rsp+r12*4+0x20]
   14003d232:	bt     ecx,r11d
   14003d236:	jae    0x14003d2e9
   14003d23c:	mov    ecx,r11d
   14003d23f:	mov    eax,ebp
   14003d241:	movsxd rdx,r10d
   14003d244:	shl    eax,cl
   14003d246:	not    eax
   14003d248:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14003d24c:	jne    0x14003d272
   14003d24e:	lea    eax,[r10+0x1]
   14003d252:	movsxd rcx,eax
   14003d255:	cmp    rcx,0x3
   14003d259:	jge    0x14003d2e9
   14003d25f:	nop
   14003d260:	cmp    DWORD PTR [rsp+rcx*4+0x20],ebx
   14003d264:	jne    0x14003d272
   14003d266:	add    rcx,0x1
   14003d26a:	cmp    rcx,0x3
   14003d26e:	jl     0x14003d260
   14003d270:	jmp    0x14003d2e9
   14003d272:	mov    ecx,r9d
   14003d275:	lea    eax,[r14-0x1]
   14003d279:	cdq    
   14003d27a:	and    edx,r9d
   14003d27d:	add    eax,edx
   14003d27f:	mov    r8d,eax
   14003d282:	and    eax,r9d
   14003d285:	sub    eax,edx
   14003d287:	sar    r8d,0x5
   14003d28b:	mov    edx,0x1
   14003d290:	sub    ecx,eax
   14003d292:	movsxd r9,r8d
   14003d295:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   14003d29a:	shl    edx,cl
   14003d29c:	lea    ecx,[rax+rdx*1]
   14003d29f:	cmp    ecx,eax
   14003d2a1:	jb     0x14003d2a7
   14003d2a3:	cmp    ecx,edx
   14003d2a5:	jae    0x14003d2ac
   14003d2a7:	mov    ebx,0x1
   14003d2ac:	lea    eax,[r8-0x1]
   14003d2b0:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   14003d2b5:	test   eax,eax
   14003d2b7:	movsxd rdx,eax
   14003d2ba:	js     0x14003d2e9
   14003d2bc:	data16 data16 xchg ax,ax
   14003d2c0:	test   ebx,ebx
   14003d2c2:	je     0x14003d2e9
   14003d2c4:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14003d2c8:	mov    ebx,edi
   14003d2ca:	lea    r8d,[rax+0x1]
   14003d2ce:	cmp    r8d,eax
   14003d2d1:	jb     0x14003d2d9
   14003d2d3:	cmp    r8d,0x1
   14003d2d7:	jae    0x14003d2de
   14003d2d9:	mov    ebx,0x1
   14003d2de:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14003d2e3:	sub    rdx,0x1
   14003d2e7:	jns    0x14003d2c0
   14003d2e9:	mov    ecx,r11d
   14003d2ec:	mov    eax,ebp
   14003d2ee:	mov    r13d,0x3
   14003d2f4:	shl    eax,cl
   14003d2f6:	and    DWORD PTR [rsp+r12*4+0x20],eax
   14003d2fb:	lea    eax,[r10+0x1]
   14003d2ff:	movsxd rdx,eax
   14003d302:	cmp    rdx,r13
   14003d305:	jge    0x14003d31d
   14003d307:	lea    rcx,[rsp+rdx*4+0x20]
   14003d30c:	mov    r8,r13
   14003d30f:	sub    r8,rdx
   14003d312:	xor    edx,edx
   14003d314:	shl    r8,0x2
   14003d318:	call   0x14002ac20
   14003d31d:	test   ebx,ebx
   14003d31f:	je     0x14003d324
   14003d321:	add    esi,0x1
   14003d324:	mov    edx,DWORD PTR [rip+0x1f152]        # 0x14005c47c
   14003d32a:	mov    eax,edx
   14003d32c:	sub    eax,r14d
   14003d32f:	cmp    esi,eax
   14003d331:	jge    0x14003d355
   14003d333:	mov    rdx,QWORD PTR [rsp+0x88]
   14003d33b:	mov    QWORD PTR [rsp+0x20],rdi
   14003d340:	mov    DWORD PTR [rsp+0x28],edi
   14003d344:	mov    r9d,edi
   14003d347:	mov    edi,0x2
   14003d34c:	lea    r15d,[rdi+0x1d]
   14003d350:	jmp    0x14003d779
   14003d355:	cmp    esi,edx
   14003d357:	jg     0x14003d5dd
   14003d35d:	sub    edx,r15d
   14003d360:	lea    rax,[rsp+0x30]
   14003d365:	mov    r10d,ebp
   14003d368:	mov    rcx,QWORD PTR [rax]
   14003d36b:	mov    esi,0x20
   14003d370:	mov    r9d,edi
   14003d373:	mov    QWORD PTR [rsp+0x20],rcx
   14003d378:	mov    ecx,DWORD PTR [rax+0x8]
   14003d37b:	mov    eax,edx
   14003d37d:	cdq    
   14003d37e:	mov    DWORD PTR [rsp+0x28],ecx
   14003d382:	mov    ebx,esi
   14003d384:	and    edx,0x1f
   14003d387:	mov    r8,rdi
   14003d38a:	add    eax,edx
   14003d38c:	mov    r12d,eax
   14003d38f:	and    eax,0x1f
   14003d392:	sub    eax,edx
   14003d394:	sar    r12d,0x5
   14003d398:	mov    ecx,eax
   14003d39a:	mov    r11d,eax
   14003d39d:	shl    r10d,cl
   14003d3a0:	sub    ebx,eax
   14003d3a2:	not    r10d
   14003d3a5:	data16 data16 xchg ax,ax
   14003d3a9:	data16 xchg ax,ax
   14003d3ac:	data16 data16 xchg ax,ax
   14003d3b0:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14003d3b5:	mov    ecx,r11d
   14003d3b8:	add    r8,0x1
   14003d3bc:	mov    eax,edx
   14003d3be:	shr    edx,cl
   14003d3c0:	mov    ecx,ebx
   14003d3c2:	or     edx,r9d
   14003d3c5:	and    eax,r10d
   14003d3c8:	mov    DWORD PTR [rsp+0x90],eax
   14003d3cf:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14003d3d4:	mov    r9d,DWORD PTR [rsp+0x90]
   14003d3dc:	shl    r9d,cl
   14003d3df:	cmp    r8,r13
   14003d3e2:	jl     0x14003d3b0
   14003d3e4:	movsxd r8,r12d
   14003d3e7:	lea    rdx,[rsp+0x28]
   14003d3ec:	mov    ebx,0x2
   14003d3f1:	lea    rax,[r8*4+0x0]
   14003d3f9:	mov    rcx,rbx
   14003d3fc:	sub    rdx,rax
   14003d3ff:	nop
   14003d400:	cmp    rcx,r8
   14003d403:	jl     0x14003d40d
   14003d405:	mov    eax,DWORD PTR [rdx]
   14003d407:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14003d40b:	jmp    0x14003d411
   14003d40d:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14003d411:	sub    rdx,0x4
   14003d415:	sub    rcx,0x1
   14003d419:	jns    0x14003d400
   14003d41b:	mov    r8d,DWORD PTR [rip+0x1f05e]        # 0x14005c480
   14003d422:	mov    r15d,0x1f
   14003d428:	mov    eax,r8d
   14003d42b:	mov    r12d,r15d
   14003d42e:	cdq    
   14003d42f:	and    edx,0x1f
   14003d432:	add    eax,edx
   14003d434:	mov    r11d,eax
   14003d437:	and    eax,0x1f
   14003d43a:	sar    r11d,0x5
   14003d43e:	sub    eax,edx
   14003d440:	movsxd r14,r11d
   14003d443:	sub    r12d,eax
   14003d446:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14003d44b:	bt     ecx,r12d
   14003d44f:	jae    0x14003d501
   14003d455:	mov    ecx,r12d
   14003d458:	mov    eax,ebp
   14003d45a:	movsxd rdx,r11d
   14003d45d:	shl    eax,cl
   14003d45f:	not    eax
   14003d461:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14003d465:	jne    0x14003d488
   14003d467:	lea    eax,[r11+0x1]
   14003d46b:	movsxd rcx,eax
   14003d46e:	cmp    rcx,r13
   14003d471:	jge    0x14003d501
   14003d477:	cmp    DWORD PTR [rsp+rcx*4+0x20],edi
   14003d47b:	jne    0x14003d488
   14003d47d:	add    rcx,0x1
   14003d481:	cmp    rcx,r13
   14003d484:	jl     0x14003d477
   14003d486:	jmp    0x14003d501
   14003d488:	lea    eax,[r8-0x1]
   14003d48c:	mov    ecx,r15d
   14003d48f:	mov    r8d,0x1
   14003d495:	cdq    
   14003d496:	and    edx,r15d
   14003d499:	add    eax,edx
   14003d49b:	mov    r9d,eax
   14003d49e:	and    eax,r15d
   14003d4a1:	sub    eax,edx
   14003d4a3:	sar    r9d,0x5
   14003d4a7:	sub    ecx,eax
   14003d4a9:	movsxd r10,r9d
   14003d4ac:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   14003d4b1:	shl    r8d,cl
   14003d4b4:	mov    ecx,edi
   14003d4b6:	lea    edx,[rax+r8*1]
   14003d4ba:	cmp    edx,eax
   14003d4bc:	jb     0x14003d4c3
   14003d4be:	cmp    edx,r8d
   14003d4c1:	jae    0x14003d4c8
   14003d4c3:	mov    ecx,0x1
   14003d4c8:	lea    eax,[r9-0x1]
   14003d4cc:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   14003d4d1:	test   eax,eax
   14003d4d3:	movsxd rdx,eax
   14003d4d6:	js     0x14003d501
   14003d4d8:	test   ecx,ecx
   14003d4da:	je     0x14003d501
   14003d4dc:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14003d4e0:	mov    ecx,edi
   14003d4e2:	lea    r8d,[rax+0x1]
   14003d4e6:	cmp    r8d,eax
   14003d4e9:	jb     0x14003d4f1
   14003d4eb:	cmp    r8d,0x1
   14003d4ef:	jae    0x14003d4f6
   14003d4f1:	mov    ecx,0x1
   14003d4f6:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14003d4fb:	sub    rdx,0x1
   14003d4ff:	jns    0x14003d4d8
   14003d501:	mov    ecx,r12d
   14003d504:	mov    eax,ebp
   14003d506:	shl    eax,cl
   14003d508:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14003d50d:	lea    eax,[r11+0x1]
   14003d511:	movsxd rdx,eax
   14003d514:	cmp    rdx,r13
   14003d517:	jge    0x14003d52f
   14003d519:	sub    r13,rdx
   14003d51c:	lea    rcx,[rsp+rdx*4+0x20]
   14003d521:	xor    edx,edx
   14003d523:	shl    r13,0x2
   14003d527:	mov    r8,r13
   14003d52a:	call   0x14002ac20
   14003d52f:	mov    eax,DWORD PTR [rip+0x1ef4f]        # 0x14005c484
   14003d535:	mov    r9d,edi
   14003d538:	mov    r8,rdi
   14003d53b:	add    eax,0x1
   14003d53e:	cdq    
   14003d53f:	and    edx,r15d
   14003d542:	add    eax,edx
   14003d544:	mov    r11d,eax
   14003d547:	and    eax,r15d
   14003d54a:	sub    eax,edx
   14003d54c:	sar    r11d,0x5
   14003d550:	mov    ecx,eax
   14003d552:	mov    r10d,eax
   14003d555:	shl    ebp,cl
   14003d557:	sub    esi,eax
   14003d559:	not    ebp
   14003d55b:	xchg   ax,ax
   14003d55d:	data16 xchg ax,ax
   14003d560:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14003d565:	mov    ecx,r10d
   14003d568:	mov    eax,ebp
   14003d56a:	and    eax,edx
   14003d56c:	shr    edx,cl
   14003d56e:	mov    ecx,esi
   14003d570:	or     edx,r9d
   14003d573:	mov    DWORD PTR [rsp+0x90],eax
   14003d57a:	add    r8,0x1
   14003d57e:	mov    r9d,DWORD PTR [rsp+0x90]
   14003d586:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14003d58b:	shl    r9d,cl
   14003d58e:	cmp    r8,0x3
   14003d592:	jl     0x14003d560
   14003d594:	movsxd r8,r11d
   14003d597:	lea    rdx,[rsp+0x28]
   14003d59c:	mov    rcx,rbx
   14003d59f:	lea    rax,[r8*4+0x0]
   14003d5a7:	sub    rdx,rax
   14003d5aa:	data16 xchg ax,ax
   14003d5ad:	data16 xchg ax,ax
   14003d5b0:	cmp    rcx,r8
   14003d5b3:	jl     0x14003d5bd
   14003d5b5:	mov    eax,DWORD PTR [rdx]
   14003d5b7:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14003d5bb:	jmp    0x14003d5c1
   14003d5bd:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14003d5c1:	sub    rdx,0x4
   14003d5c5:	sub    rcx,0x1
   14003d5c9:	jns    0x14003d5b0
   14003d5cb:	mov    rdx,QWORD PTR [rsp+0x88]
   14003d5d3:	mov    r9d,edi
   14003d5d6:	mov    edi,ebx
   14003d5d8:	jmp    0x14003d779
   14003d5dd:	cmp    esi,DWORD PTR [rip+0x1ee95]        # 0x14005c478
   14003d5e3:	jl     0x14003d6c1
   14003d5e9:	mov    eax,DWORD PTR [rip+0x1ee95]        # 0x14005c484
   14003d5ef:	mov    esi,0x20
   14003d5f4:	mov    QWORD PTR [rsp+0x20],rdi
   14003d5f9:	bts    DWORD PTR [rsp+0x20],0x1f
   14003d5ff:	cdq    
   14003d600:	mov    DWORD PTR [rsp+0x28],edi
   14003d604:	and    edx,0x1f
   14003d607:	mov    r9d,edi
   14003d60a:	mov    r8,rdi
   14003d60d:	add    eax,edx
   14003d60f:	mov    r11d,eax
   14003d612:	and    eax,0x1f
   14003d615:	sub    eax,edx
   14003d617:	sar    r11d,0x5
   14003d61b:	mov    ecx,eax
   14003d61d:	mov    r10d,eax
   14003d620:	shl    ebp,cl
   14003d622:	sub    esi,eax
   14003d624:	not    ebp
   14003d626:	data16 data16 xchg ax,ax
   14003d62a:	data16 xchg ax,ax
   14003d62d:	data16 xchg ax,ax
   14003d630:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14003d635:	mov    ecx,r10d
   14003d638:	mov    eax,ebp
   14003d63a:	and    eax,edx
   14003d63c:	shr    edx,cl
   14003d63e:	mov    ecx,esi
   14003d640:	or     edx,r9d
   14003d643:	mov    DWORD PTR [rsp+0x90],eax
   14003d64a:	add    r8,0x1
   14003d64e:	mov    r9d,DWORD PTR [rsp+0x90]
   14003d656:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14003d65b:	shl    r9d,cl
   14003d65e:	cmp    r8,r13
   14003d661:	jl     0x14003d630
   14003d663:	movsxd rdx,r11d
   14003d666:	lea    rcx,[rsp+0x28]
   14003d66b:	mov    ebx,0x2
   14003d670:	lea    rax,[rdx*4+0x0]
   14003d678:	sub    rcx,rax
   14003d67b:	xchg   ax,ax
   14003d67d:	data16 xchg ax,ax
   14003d680:	cmp    rbx,rdx
   14003d683:	jl     0x14003d68d
   14003d685:	mov    eax,DWORD PTR [rcx]
   14003d687:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14003d68b:	jmp    0x14003d691
   14003d68d:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   14003d691:	sub    rcx,0x4
   14003d695:	sub    rbx,0x1
   14003d699:	jns    0x14003d680
   14003d69b:	mov    ecx,DWORD PTR [rip+0x1edd7]        # 0x14005c478
   14003d6a1:	mov    r9d,DWORD PTR [rip+0x1ede4]        # 0x14005c48c
   14003d6a8:	mov    rdx,QWORD PTR [rsp+0x88]
   14003d6b0:	mov    edi,0x1
   14003d6b5:	add    r9d,ecx
   14003d6b8:	lea    r15d,[rdi+0x1e]
   14003d6bc:	jmp    0x14003d779
   14003d6c1:	mov    eax,DWORD PTR [rip+0x1edbd]        # 0x14005c484
   14003d6c7:	mov    r9d,DWORD PTR [rip+0x1edbe]        # 0x14005c48c
   14003d6ce:	btr    DWORD PTR [rsp+0x20],0x1f
   14003d6d4:	cdq    
   14003d6d5:	add    r9d,esi
   14003d6d8:	mov    esi,0x20
   14003d6dd:	and    edx,0x1f
   14003d6e0:	mov    r10d,edi
   14003d6e3:	mov    r8,rdi
   14003d6e6:	add    eax,edx
   14003d6e8:	mov    r12d,eax
   14003d6eb:	and    eax,0x1f
   14003d6ee:	sub    eax,edx
   14003d6f0:	sar    r12d,0x5
   14003d6f4:	mov    ecx,eax
   14003d6f6:	mov    r11d,eax
   14003d6f9:	shl    ebp,cl
   14003d6fb:	sub    esi,eax
   14003d6fd:	not    ebp
   14003d6ff:	nop
   14003d700:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14003d705:	mov    ecx,r11d
   14003d708:	mov    eax,ebp
   14003d70a:	and    eax,edx
   14003d70c:	shr    edx,cl
   14003d70e:	mov    ecx,esi
   14003d710:	or     edx,r10d
   14003d713:	mov    DWORD PTR [rsp+0x90],eax
   14003d71a:	add    r8,0x1
   14003d71e:	mov    r10d,DWORD PTR [rsp+0x90]
   14003d726:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14003d72b:	shl    r10d,cl
   14003d72e:	cmp    r8,r13
   14003d731:	jl     0x14003d700
   14003d733:	movsxd rdx,r12d
   14003d736:	lea    rcx,[rsp+0x28]
   14003d73b:	mov    ebx,0x2
   14003d740:	lea    rax,[rdx*4+0x0]
   14003d748:	sub    rcx,rax
   14003d74b:	xchg   ax,ax
   14003d74d:	data16 xchg ax,ax
   14003d750:	cmp    rbx,rdx
   14003d753:	jl     0x14003d75d
   14003d755:	mov    eax,DWORD PTR [rcx]
   14003d757:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14003d75b:	jmp    0x14003d761
   14003d75d:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   14003d761:	sub    rcx,0x4
   14003d765:	sub    rbx,0x1
   14003d769:	jns    0x14003d750
   14003d76b:	mov    rdx,QWORD PTR [rsp+0x88]
   14003d773:	mov    r15d,0x1f
   14003d779:	mov    r13,QWORD PTR [rsp+0x50]
   14003d77e:	mov    r12,QWORD PTR [rsp+0x58]
   14003d783:	mov    rbp,QWORD PTR [rsp+0x68]
   14003d788:	mov    r14,QWORD PTR [rsp+0x48]
   14003d78d:	sub    r15d,DWORD PTR [rip+0x1ecf0]        # 0x14005c484
   14003d794:	mov    eax,DWORD PTR [rip+0x1ecee]        # 0x14005c488
   14003d79a:	mov    rsi,QWORD PTR [rsp+0x60]
   14003d79f:	mov    rbx,QWORD PTR [rsp+0x98]
   14003d7a7:	movzx  ecx,r15b
   14003d7ab:	mov    r15,QWORD PTR [rsp+0x40]
   14003d7b0:	shl    r9d,cl
   14003d7b3:	neg    DWORD PTR [rsp+0x80]
   14003d7ba:	sbb    ecx,ecx
   14003d7bc:	and    ecx,0x80000000
   14003d7c2:	or     r9d,ecx
   14003d7c5:	or     r9d,DWORD PTR [rsp+0x20]
   14003d7ca:	cmp    eax,0x40
   14003d7cd:	jne    0x14003d7e1
   14003d7cf:	mov    ecx,DWORD PTR [rsp+0x24]
   14003d7d3:	mov    DWORD PTR [rdx+0x4],r9d
   14003d7d7:	mov    eax,edi
   14003d7d9:	mov    DWORD PTR [rdx],ecx
   14003d7db:	add    rsp,0x70
   14003d7df:	pop    rdi
   14003d7e0:	ret    
   14003d7e1:	cmp    eax,0x20
   14003d7e4:	jne    0x14003d7e9
   14003d7e6:	mov    DWORD PTR [rdx],r9d
   14003d7e9:	mov    eax,edi
   14003d7eb:	add    rsp,0x70
   14003d7ef:	pop    rdi
   14003d7f0:	ret    
   14003d7f1:	int3   
   14003d7f2:	int3   
   14003d7f3:	int3   
   14003d7f4:	int3   
   14003d7f5:	int3   
   14003d7f6:	int3   
   14003d7f7:	int3   
   14003d7f8:	int3   
   14003d7f9:	int3   
   14003d7fa:	int3   
   14003d7fb:	int3   
   14003d7fc:	int3   
   14003d7fd:	int3   
   14003d7fe:	int3   
   14003d7ff:	int3   
   14003d800:	mov    rax,rsp
   14003d803:	mov    QWORD PTR [rax+0x10],rdx
   14003d807:	push   rdi
   14003d808:	sub    rsp,0x70
   14003d80c:	mov    QWORD PTR [rax+0x20],rbx
   14003d810:	mov    QWORD PTR [rax-0x18],rsi
   14003d814:	mov    QWORD PTR [rax-0x38],r15
   14003d818:	movzx  eax,WORD PTR [rcx+0xa]
   14003d81c:	mov    r9d,0x1f
   14003d822:	mov    esi,eax
   14003d824:	and    eax,0x8000
   14003d829:	mov    DWORD PTR [rsp+0x80],eax
   14003d830:	mov    eax,DWORD PTR [rcx+0x6]
   14003d833:	and    esi,0x7fff
   14003d839:	mov    DWORD PTR [rsp+0x20],eax
   14003d83d:	mov    eax,DWORD PTR [rcx+0x2]
   14003d840:	sub    esi,0x3fff
   14003d846:	mov    DWORD PTR [rsp+0x24],eax
   14003d84a:	movzx  eax,WORD PTR [rcx]
   14003d84d:	shl    eax,0x10
   14003d850:	cmp    esi,0xffffc001
   14003d856:	mov    DWORD PTR [rsp+0x28],eax
   14003d85a:	jne    0x14003d896
   14003d85c:	xor    edi,edi
   14003d85e:	mov    r9d,edi
   14003d861:	mov    rax,rdi
   14003d864:	cmp    DWORD PTR [rsp+rax*4+0x20],edi
   14003d868:	jne    0x14003d87f
   14003d86a:	add    rax,0x1
   14003d86e:	cmp    rax,0x3
   14003d872:	jl     0x14003d864
   14003d874:	mov    r15d,0x1f
   14003d87a:	jmp    0x14003de4d
   14003d87f:	mov    QWORD PTR [rsp+0x20],rdi
   14003d884:	mov    DWORD PTR [rsp+0x28],edi
   14003d888:	mov    edi,0x2
   14003d88d:	lea    r15d,[rdi+0x1d]
   14003d891:	jmp    0x14003de4d
   14003d896:	mov    QWORD PTR [rsp+0x68],rbp
   14003d89b:	lea    rcx,[rsp+0x20]
   14003d8a0:	mov    QWORD PTR [rsp+0x58],r12
   14003d8a5:	mov    rax,QWORD PTR [rcx]
   14003d8a8:	mov    QWORD PTR [rsp+0x50],r13
   14003d8ad:	mov    QWORD PTR [rsp+0x48],r14
   14003d8b2:	mov    r14d,DWORD PTR [rip+0x1ebdf]        # 0x14005c498
   14003d8b9:	mov    QWORD PTR [rsp+0x30],rax
   14003d8be:	mov    eax,DWORD PTR [rcx+0x8]
   14003d8c1:	mov    DWORD PTR [rsp+0x38],eax
   14003d8c5:	xor    edi,edi
   14003d8c7:	mov    eax,r14d
   14003d8ca:	cdq    
   14003d8cb:	mov    r11d,r9d
   14003d8ce:	or     ebp,0xffffffff
   14003d8d1:	and    edx,r9d
   14003d8d4:	mov    r15d,esi
   14003d8d7:	mov    ebx,edi
   14003d8d9:	add    eax,edx
   14003d8db:	mov    r10d,eax
   14003d8de:	and    eax,r9d
   14003d8e1:	sar    r10d,0x5
   14003d8e5:	sub    eax,edx
   14003d8e7:	movsxd r12,r10d
   14003d8ea:	sub    r11d,eax
   14003d8ed:	mov    ecx,DWORD PTR [rsp+r12*4+0x20]
   14003d8f2:	bt     ecx,r11d
   14003d8f6:	jae    0x14003d9a9
   14003d8fc:	mov    ecx,r11d
   14003d8ff:	mov    eax,ebp
   14003d901:	movsxd rdx,r10d
   14003d904:	shl    eax,cl
   14003d906:	not    eax
   14003d908:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14003d90c:	jne    0x14003d932
   14003d90e:	lea    eax,[r10+0x1]
   14003d912:	movsxd rcx,eax
   14003d915:	cmp    rcx,0x3
   14003d919:	jge    0x14003d9a9
   14003d91f:	nop
   14003d920:	cmp    DWORD PTR [rsp+rcx*4+0x20],ebx
   14003d924:	jne    0x14003d932
   14003d926:	add    rcx,0x1
   14003d92a:	cmp    rcx,0x3
   14003d92e:	jl     0x14003d920
   14003d930:	jmp    0x14003d9a9
   14003d932:	mov    ecx,r9d
   14003d935:	lea    eax,[r14-0x1]
   14003d939:	cdq    
   14003d93a:	and    edx,r9d
   14003d93d:	add    eax,edx
   14003d93f:	mov    r8d,eax
   14003d942:	and    eax,r9d
   14003d945:	sub    eax,edx
   14003d947:	sar    r8d,0x5
   14003d94b:	mov    edx,0x1
   14003d950:	sub    ecx,eax
   14003d952:	movsxd r9,r8d
   14003d955:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   14003d95a:	shl    edx,cl
   14003d95c:	lea    ecx,[rax+rdx*1]
   14003d95f:	cmp    ecx,eax
   14003d961:	jb     0x14003d967
   14003d963:	cmp    ecx,edx
   14003d965:	jae    0x14003d96c
   14003d967:	mov    ebx,0x1
   14003d96c:	lea    eax,[r8-0x1]
   14003d970:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   14003d975:	test   eax,eax
   14003d977:	movsxd rdx,eax
   14003d97a:	js     0x14003d9a9
   14003d97c:	data16 data16 xchg ax,ax
   14003d980:	test   ebx,ebx
   14003d982:	je     0x14003d9a9
   14003d984:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14003d988:	mov    ebx,edi
   14003d98a:	lea    r8d,[rax+0x1]
   14003d98e:	cmp    r8d,eax
   14003d991:	jb     0x14003d999
   14003d993:	cmp    r8d,0x1
   14003d997:	jae    0x14003d99e
   14003d999:	mov    ebx,0x1
   14003d99e:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14003d9a3:	sub    rdx,0x1
   14003d9a7:	jns    0x14003d980
   14003d9a9:	mov    ecx,r11d
   14003d9ac:	mov    eax,ebp
   14003d9ae:	mov    r13d,0x3
   14003d9b4:	shl    eax,cl
   14003d9b6:	and    DWORD PTR [rsp+r12*4+0x20],eax
   14003d9bb:	lea    eax,[r10+0x1]
   14003d9bf:	movsxd rdx,eax
   14003d9c2:	cmp    rdx,r13
   14003d9c5:	jge    0x14003d9dd
   14003d9c7:	lea    rcx,[rsp+rdx*4+0x20]
   14003d9cc:	mov    r8,r13
   14003d9cf:	sub    r8,rdx
   14003d9d2:	xor    edx,edx
   14003d9d4:	shl    r8,0x2
   14003d9d8:	call   0x14002ac20
   14003d9dd:	test   ebx,ebx
   14003d9df:	je     0x14003d9e4
   14003d9e1:	add    esi,0x1
   14003d9e4:	mov    edx,DWORD PTR [rip+0x1eaaa]        # 0x14005c494
   14003d9ea:	mov    eax,edx
   14003d9ec:	sub    eax,r14d
   14003d9ef:	cmp    esi,eax
   14003d9f1:	jge    0x14003da15
   14003d9f3:	mov    rdx,QWORD PTR [rsp+0x88]
   14003d9fb:	mov    QWORD PTR [rsp+0x20],rdi
   14003da00:	mov    DWORD PTR [rsp+0x28],edi
   14003da04:	mov    r9d,edi
   14003da07:	mov    edi,0x2
   14003da0c:	lea    r15d,[rdi+0x1d]
   14003da10:	jmp    0x14003de39
   14003da15:	cmp    esi,edx
   14003da17:	jg     0x14003dc9d
   14003da1d:	sub    edx,r15d
   14003da20:	lea    rax,[rsp+0x30]
   14003da25:	mov    r10d,ebp
   14003da28:	mov    rcx,QWORD PTR [rax]
   14003da2b:	mov    esi,0x20
   14003da30:	mov    r9d,edi
   14003da33:	mov    QWORD PTR [rsp+0x20],rcx
   14003da38:	mov    ecx,DWORD PTR [rax+0x8]
   14003da3b:	mov    eax,edx
   14003da3d:	cdq    
   14003da3e:	mov    DWORD PTR [rsp+0x28],ecx
   14003da42:	mov    ebx,esi
   14003da44:	and    edx,0x1f
   14003da47:	mov    r8,rdi
   14003da4a:	add    eax,edx
   14003da4c:	mov    r12d,eax
   14003da4f:	and    eax,0x1f
   14003da52:	sub    eax,edx
   14003da54:	sar    r12d,0x5
   14003da58:	mov    ecx,eax
   14003da5a:	mov    r11d,eax
   14003da5d:	shl    r10d,cl
   14003da60:	sub    ebx,eax
   14003da62:	not    r10d
   14003da65:	data16 data16 xchg ax,ax
   14003da69:	data16 xchg ax,ax
   14003da6c:	data16 data16 xchg ax,ax
   14003da70:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14003da75:	mov    ecx,r11d
   14003da78:	add    r8,0x1
   14003da7c:	mov    eax,edx
   14003da7e:	shr    edx,cl
   14003da80:	mov    ecx,ebx
   14003da82:	or     edx,r9d
   14003da85:	and    eax,r10d
   14003da88:	mov    DWORD PTR [rsp+0x90],eax
   14003da8f:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14003da94:	mov    r9d,DWORD PTR [rsp+0x90]
   14003da9c:	shl    r9d,cl
   14003da9f:	cmp    r8,r13
   14003daa2:	jl     0x14003da70
   14003daa4:	movsxd r8,r12d
   14003daa7:	lea    rdx,[rsp+0x28]
   14003daac:	mov    ebx,0x2
   14003dab1:	lea    rax,[r8*4+0x0]
   14003dab9:	mov    rcx,rbx
   14003dabc:	sub    rdx,rax
   14003dabf:	nop
   14003dac0:	cmp    rcx,r8
   14003dac3:	jl     0x14003dacd
   14003dac5:	mov    eax,DWORD PTR [rdx]
   14003dac7:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14003dacb:	jmp    0x14003dad1
   14003dacd:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14003dad1:	sub    rdx,0x4
   14003dad5:	sub    rcx,0x1
   14003dad9:	jns    0x14003dac0
   14003dadb:	mov    r8d,DWORD PTR [rip+0x1e9b6]        # 0x14005c498
   14003dae2:	mov    r15d,0x1f
   14003dae8:	mov    eax,r8d
   14003daeb:	mov    r12d,r15d
   14003daee:	cdq    
   14003daef:	and    edx,0x1f
   14003daf2:	add    eax,edx
   14003daf4:	mov    r11d,eax
   14003daf7:	and    eax,0x1f
   14003dafa:	sar    r11d,0x5
   14003dafe:	sub    eax,edx
   14003db00:	movsxd r14,r11d
   14003db03:	sub    r12d,eax
   14003db06:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14003db0b:	bt     ecx,r12d
   14003db0f:	jae    0x14003dbc1
   14003db15:	mov    ecx,r12d
   14003db18:	mov    eax,ebp
   14003db1a:	movsxd rdx,r11d
   14003db1d:	shl    eax,cl
   14003db1f:	not    eax
   14003db21:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14003db25:	jne    0x14003db48
   14003db27:	lea    eax,[r11+0x1]
   14003db2b:	movsxd rcx,eax
   14003db2e:	cmp    rcx,r13
   14003db31:	jge    0x14003dbc1
   14003db37:	cmp    DWORD PTR [rsp+rcx*4+0x20],edi
   14003db3b:	jne    0x14003db48
   14003db3d:	add    rcx,0x1
   14003db41:	cmp    rcx,r13
   14003db44:	jl     0x14003db37
   14003db46:	jmp    0x14003dbc1
   14003db48:	lea    eax,[r8-0x1]
   14003db4c:	mov    ecx,r15d
   14003db4f:	mov    r8d,0x1
   14003db55:	cdq    
   14003db56:	and    edx,r15d
   14003db59:	add    eax,edx
   14003db5b:	mov    r9d,eax
   14003db5e:	and    eax,r15d
   14003db61:	sub    eax,edx
   14003db63:	sar    r9d,0x5
   14003db67:	sub    ecx,eax
   14003db69:	movsxd r10,r9d
   14003db6c:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   14003db71:	shl    r8d,cl
   14003db74:	mov    ecx,edi
   14003db76:	lea    edx,[rax+r8*1]
   14003db7a:	cmp    edx,eax
   14003db7c:	jb     0x14003db83
   14003db7e:	cmp    edx,r8d
   14003db81:	jae    0x14003db88
   14003db83:	mov    ecx,0x1
   14003db88:	lea    eax,[r9-0x1]
   14003db8c:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   14003db91:	test   eax,eax
   14003db93:	movsxd rdx,eax
   14003db96:	js     0x14003dbc1
   14003db98:	test   ecx,ecx
   14003db9a:	je     0x14003dbc1
   14003db9c:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14003dba0:	mov    ecx,edi
   14003dba2:	lea    r8d,[rax+0x1]
   14003dba6:	cmp    r8d,eax
   14003dba9:	jb     0x14003dbb1
   14003dbab:	cmp    r8d,0x1
   14003dbaf:	jae    0x14003dbb6
   14003dbb1:	mov    ecx,0x1
   14003dbb6:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14003dbbb:	sub    rdx,0x1
   14003dbbf:	jns    0x14003db98
   14003dbc1:	mov    ecx,r12d
   14003dbc4:	mov    eax,ebp
   14003dbc6:	shl    eax,cl
   14003dbc8:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14003dbcd:	lea    eax,[r11+0x1]
   14003dbd1:	movsxd rdx,eax
   14003dbd4:	cmp    rdx,r13
   14003dbd7:	jge    0x14003dbef
   14003dbd9:	sub    r13,rdx
   14003dbdc:	lea    rcx,[rsp+rdx*4+0x20]
   14003dbe1:	xor    edx,edx
   14003dbe3:	shl    r13,0x2
   14003dbe7:	mov    r8,r13
   14003dbea:	call   0x14002ac20
   14003dbef:	mov    eax,DWORD PTR [rip+0x1e8a7]        # 0x14005c49c
   14003dbf5:	mov    r9d,edi
   14003dbf8:	mov    r8,rdi
   14003dbfb:	add    eax,0x1
   14003dbfe:	cdq    
   14003dbff:	and    edx,r15d
   14003dc02:	add    eax,edx
   14003dc04:	mov    r11d,eax
   14003dc07:	and    eax,r15d
   14003dc0a:	sub    eax,edx
   14003dc0c:	sar    r11d,0x5
   14003dc10:	mov    ecx,eax
   14003dc12:	mov    r10d,eax
   14003dc15:	shl    ebp,cl
   14003dc17:	sub    esi,eax
   14003dc19:	not    ebp
   14003dc1b:	xchg   ax,ax
   14003dc1d:	data16 xchg ax,ax
   14003dc20:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14003dc25:	mov    ecx,r10d
   14003dc28:	mov    eax,ebp
   14003dc2a:	and    eax,edx
   14003dc2c:	shr    edx,cl
   14003dc2e:	mov    ecx,esi
   14003dc30:	or     edx,r9d
   14003dc33:	mov    DWORD PTR [rsp+0x90],eax
   14003dc3a:	add    r8,0x1
   14003dc3e:	mov    r9d,DWORD PTR [rsp+0x90]
   14003dc46:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14003dc4b:	shl    r9d,cl
   14003dc4e:	cmp    r8,0x3
   14003dc52:	jl     0x14003dc20
   14003dc54:	movsxd r8,r11d
   14003dc57:	lea    rdx,[rsp+0x28]
   14003dc5c:	mov    rcx,rbx
   14003dc5f:	lea    rax,[r8*4+0x0]
   14003dc67:	sub    rdx,rax
   14003dc6a:	data16 xchg ax,ax
   14003dc6d:	data16 xchg ax,ax
   14003dc70:	cmp    rcx,r8
   14003dc73:	jl     0x14003dc7d
   14003dc75:	mov    eax,DWORD PTR [rdx]
   14003dc77:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14003dc7b:	jmp    0x14003dc81
   14003dc7d:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14003dc81:	sub    rdx,0x4
   14003dc85:	sub    rcx,0x1
   14003dc89:	jns    0x14003dc70
   14003dc8b:	mov    rdx,QWORD PTR [rsp+0x88]
   14003dc93:	mov    r9d,edi
   14003dc96:	mov    edi,ebx
   14003dc98:	jmp    0x14003de39
   14003dc9d:	cmp    esi,DWORD PTR [rip+0x1e7ed]        # 0x14005c490
   14003dca3:	jl     0x14003dd81
   14003dca9:	mov    eax,DWORD PTR [rip+0x1e7ed]        # 0x14005c49c
   14003dcaf:	mov    esi,0x20
   14003dcb4:	mov    QWORD PTR [rsp+0x20],rdi
   14003dcb9:	bts    DWORD PTR [rsp+0x20],0x1f
   14003dcbf:	cdq    
   14003dcc0:	mov    DWORD PTR [rsp+0x28],edi
   14003dcc4:	and    edx,0x1f
   14003dcc7:	mov    r9d,edi
   14003dcca:	mov    r8,rdi
   14003dccd:	add    eax,edx
   14003dccf:	mov    r11d,eax
   14003dcd2:	and    eax,0x1f
   14003dcd5:	sub    eax,edx
   14003dcd7:	sar    r11d,0x5
   14003dcdb:	mov    ecx,eax
   14003dcdd:	mov    r10d,eax
   14003dce0:	shl    ebp,cl
   14003dce2:	sub    esi,eax
   14003dce4:	not    ebp
   14003dce6:	data16 data16 xchg ax,ax
   14003dcea:	data16 xchg ax,ax
   14003dced:	data16 xchg ax,ax
   14003dcf0:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14003dcf5:	mov    ecx,r10d
   14003dcf8:	mov    eax,ebp
   14003dcfa:	and    eax,edx
   14003dcfc:	shr    edx,cl
   14003dcfe:	mov    ecx,esi
   14003dd00:	or     edx,r9d
   14003dd03:	mov    DWORD PTR [rsp+0x90],eax
   14003dd0a:	add    r8,0x1
   14003dd0e:	mov    r9d,DWORD PTR [rsp+0x90]
   14003dd16:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14003dd1b:	shl    r9d,cl
   14003dd1e:	cmp    r8,r13
   14003dd21:	jl     0x14003dcf0
   14003dd23:	movsxd rdx,r11d
   14003dd26:	lea    rcx,[rsp+0x28]
   14003dd2b:	mov    ebx,0x2
   14003dd30:	lea    rax,[rdx*4+0x0]
   14003dd38:	sub    rcx,rax
   14003dd3b:	xchg   ax,ax
   14003dd3d:	data16 xchg ax,ax
   14003dd40:	cmp    rbx,rdx
   14003dd43:	jl     0x14003dd4d
   14003dd45:	mov    eax,DWORD PTR [rcx]
   14003dd47:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14003dd4b:	jmp    0x14003dd51
   14003dd4d:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   14003dd51:	sub    rcx,0x4
   14003dd55:	sub    rbx,0x1
   14003dd59:	jns    0x14003dd40
   14003dd5b:	mov    ecx,DWORD PTR [rip+0x1e72f]        # 0x14005c490
   14003dd61:	mov    r9d,DWORD PTR [rip+0x1e73c]        # 0x14005c4a4
   14003dd68:	mov    rdx,QWORD PTR [rsp+0x88]
   14003dd70:	mov    edi,0x1
   14003dd75:	add    r9d,ecx
   14003dd78:	lea    r15d,[rdi+0x1e]
   14003dd7c:	jmp    0x14003de39
   14003dd81:	mov    eax,DWORD PTR [rip+0x1e715]        # 0x14005c49c
   14003dd87:	mov    r9d,DWORD PTR [rip+0x1e716]        # 0x14005c4a4
   14003dd8e:	btr    DWORD PTR [rsp+0x20],0x1f
   14003dd94:	cdq    
   14003dd95:	add    r9d,esi
   14003dd98:	mov    esi,0x20
   14003dd9d:	and    edx,0x1f
   14003dda0:	mov    r10d,edi
   14003dda3:	mov    r8,rdi
   14003dda6:	add    eax,edx
   14003dda8:	mov    r12d,eax
   14003ddab:	and    eax,0x1f
   14003ddae:	sub    eax,edx
   14003ddb0:	sar    r12d,0x5
   14003ddb4:	mov    ecx,eax
   14003ddb6:	mov    r11d,eax
   14003ddb9:	shl    ebp,cl
   14003ddbb:	sub    esi,eax
   14003ddbd:	not    ebp
   14003ddbf:	nop
   14003ddc0:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14003ddc5:	mov    ecx,r11d
   14003ddc8:	mov    eax,ebp
   14003ddca:	and    eax,edx
   14003ddcc:	shr    edx,cl
   14003ddce:	mov    ecx,esi
   14003ddd0:	or     edx,r10d
   14003ddd3:	mov    DWORD PTR [rsp+0x90],eax
   14003ddda:	add    r8,0x1
   14003ddde:	mov    r10d,DWORD PTR [rsp+0x90]
   14003dde6:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14003ddeb:	shl    r10d,cl
   14003ddee:	cmp    r8,r13
   14003ddf1:	jl     0x14003ddc0
   14003ddf3:	movsxd rdx,r12d
   14003ddf6:	lea    rcx,[rsp+0x28]
   14003ddfb:	mov    ebx,0x2
   14003de00:	lea    rax,[rdx*4+0x0]
   14003de08:	sub    rcx,rax
   14003de0b:	xchg   ax,ax
   14003de0d:	data16 xchg ax,ax
   14003de10:	cmp    rbx,rdx
   14003de13:	jl     0x14003de1d
   14003de15:	mov    eax,DWORD PTR [rcx]
   14003de17:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14003de1b:	jmp    0x14003de21
   14003de1d:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   14003de21:	sub    rcx,0x4
   14003de25:	sub    rbx,0x1
   14003de29:	jns    0x14003de10
   14003de2b:	mov    rdx,QWORD PTR [rsp+0x88]
   14003de33:	mov    r15d,0x1f
   14003de39:	mov    r13,QWORD PTR [rsp+0x50]
   14003de3e:	mov    r12,QWORD PTR [rsp+0x58]
   14003de43:	mov    rbp,QWORD PTR [rsp+0x68]
   14003de48:	mov    r14,QWORD PTR [rsp+0x48]
   14003de4d:	sub    r15d,DWORD PTR [rip+0x1e648]        # 0x14005c49c
   14003de54:	mov    eax,DWORD PTR [rip+0x1e646]        # 0x14005c4a0
   14003de5a:	mov    rsi,QWORD PTR [rsp+0x60]
   14003de5f:	mov    rbx,QWORD PTR [rsp+0x98]
   14003de67:	movzx  ecx,r15b
   14003de6b:	mov    r15,QWORD PTR [rsp+0x40]
   14003de70:	shl    r9d,cl
   14003de73:	neg    DWORD PTR [rsp+0x80]
   14003de7a:	sbb    ecx,ecx
   14003de7c:	and    ecx,0x80000000
   14003de82:	or     r9d,ecx
   14003de85:	or     r9d,DWORD PTR [rsp+0x20]
   14003de8a:	cmp    eax,0x40
   14003de8d:	jne    0x14003dea1
   14003de8f:	mov    ecx,DWORD PTR [rsp+0x24]
   14003de93:	mov    DWORD PTR [rdx+0x4],r9d
   14003de97:	mov    eax,edi
   14003de99:	mov    DWORD PTR [rdx],ecx
   14003de9b:	add    rsp,0x70
   14003de9f:	pop    rdi
   14003dea0:	ret    
   14003dea1:	cmp    eax,0x20
   14003dea4:	jne    0x14003dea9
   14003dea6:	mov    DWORD PTR [rdx],r9d
   14003dea9:	mov    eax,edi
   14003deab:	add    rsp,0x70
   14003deaf:	pop    rdi
   14003deb0:	ret    
   14003deb1:	int3   
   14003deb2:	int3   
   14003deb3:	int3   
   14003deb4:	int3   
   14003deb5:	int3   
   14003deb6:	int3   
   14003deb7:	int3   
   14003deb8:	int3   
   14003deb9:	int3   
   14003deba:	int3   
   14003debb:	int3   
   14003debc:	int3   
   14003debd:	int3   
   14003debe:	int3   
   14003debf:	int3   
   14003dec0:	mov    QWORD PTR [rsp+0x18],rbx
   14003dec5:	push   rbp
   14003dec6:	push   rsi
   14003dec7:	push   rdi
   14003dec8:	push   r12
   14003deca:	push   r13
   14003decc:	push   r14
   14003dece:	push   r15
   14003ded0:	sub    rsp,0xb0
   14003ded7:	mov    rax,QWORD PTR [rip+0x1d0a2]        # 0x14005af80
   14003dede:	xor    rax,rsp
   14003dee1:	mov    QWORD PTR [rsp+0xa0],rax
   14003dee9:	mov    rsi,QWORD PTR [rsp+0x128]
   14003def1:	xor    edi,edi
   14003def3:	mov    DWORD PTR [rsp+0x38],r9d
   14003def8:	test   rsi,rsi
   14003defb:	mov    eax,edi
   14003defd:	mov    r13,rdx
   14003df00:	mov    QWORD PTR [rsp+0x48],rcx
   14003df05:	lea    r11,[rsp+0x80]
   14003df0d:	mov    WORD PTR [rsp+0x34],0x0
   14003df14:	lea    r14d,[rdi+0x1]
   14003df18:	mov    r10d,edi
   14003df1b:	mov    ebp,edi
   14003df1d:	mov    r15d,edi
   14003df20:	mov    r12d,edi
   14003df23:	mov    DWORD PTR [rsp+0x30],eax
   14003df27:	mov    ebx,edi
   14003df29:	mov    r9d,edi
   14003df2c:	jne    0x14003df54
   14003df2e:	call   0x14002bca0
   14003df33:	xor    r9d,r9d
   14003df36:	xor    r8d,r8d
   14003df39:	xor    edx,edx
   14003df3b:	xor    ecx,ecx
   14003df3d:	mov    QWORD PTR [rsp+0x20],rdi
   14003df42:	mov    DWORD PTR [rax],0x16
   14003df48:	call   0x14002e900
   14003df4d:	xor    eax,eax
   14003df4f:	jmp    0x14003e7b4
   14003df54:	mov    rdi,r8
   14003df57:	movzx  eax,BYTE PTR [r8]
   14003df5b:	cmp    al,0x20
   14003df5d:	je     0x14003df6b
   14003df5f:	cmp    al,0x9
   14003df61:	je     0x14003df6b
   14003df63:	cmp    al,0xa
   14003df65:	je     0x14003df6b
   14003df67:	cmp    al,0xd
   14003df69:	jne    0x14003df76
   14003df6b:	add    r8,r14
   14003df6e:	jmp    0x14003df57
   14003df70:	mov    r9d,0x5
   14003df76:	lea    rcx,[rip+0xfffffffffffc2083]        # 0x140000000
   14003df7d:	data16 xchg ax,ax
   14003df80:	movzx  edx,BYTE PTR [r8]
   14003df84:	add    r8,0x1
   14003df88:	cmp    r9d,0xb
   14003df8c:	ja     0x14003e285
   14003df92:	movsxd rax,r9d
   14003df95:	mov    ecx,DWORD PTR [rcx+rax*4+0x3e7e0]
   14003df9c:	lea    rax,[rip+0xfffffffffffc205d]        # 0x140000000
   14003dfa3:	add    rcx,rax
   14003dfa6:	jmp    rcx
   14003dfa8:	lea    eax,[rdx-0x31]
   14003dfab:	cmp    al,0x8
   14003dfad:	ja     0x14003dfbb
   14003dfaf:	mov    r9d,0x3
   14003dfb5:	sub    r8,0x1
   14003dfb9:	jmp    0x14003df76
   14003dfbb:	mov    rax,QWORD PTR [rsi]
   14003dfbe:	mov    rcx,QWORD PTR [rax+0x128]
   14003dfc5:	mov    rax,QWORD PTR [rcx]
   14003dfc8:	cmp    dl,BYTE PTR [rax]
   14003dfca:	je     0x14003df70
   14003dfcc:	cmp    dl,0x2b
   14003dfcf:	je     0x14003dff6
   14003dfd1:	cmp    dl,0x2d
   14003dfd4:	je     0x14003dfe7
   14003dfd6:	cmp    dl,0x30
   14003dfd9:	jne    0x14003e2cb
   14003dfdf:	mov    r9d,0x1
   14003dfe5:	jmp    0x14003df76
   14003dfe7:	mov    r9d,0x2
   14003dfed:	mov    WORD PTR [rsp+0x34],0x8000
   14003dff4:	jmp    0x14003df76
   14003dff6:	mov    r9d,0x2
   14003dffc:	mov    WORD PTR [rsp+0x34],0x0
   14003e003:	jmp    0x14003df76
   14003e008:	lea    eax,[rdx-0x31]
   14003e00b:	mov    ebp,0x1
   14003e010:	cmp    al,0x8
   14003e012:	ja     0x14003e020
   14003e014:	lea    r9d,[rbp+0x2]
   14003e018:	sub    r8,rbp
   14003e01b:	jmp    0x14003df76
   14003e020:	mov    rax,QWORD PTR [rsi]
   14003e023:	mov    rcx,QWORD PTR [rax+0x128]
   14003e02a:	mov    rax,QWORD PTR [rcx]
   14003e02d:	cmp    dl,BYTE PTR [rax]
   14003e02f:	jne    0x14003e03c
   14003e031:	mov    r9d,0x4
   14003e037:	jmp    0x14003df76
   14003e03c:	movsx  eax,dl
   14003e03f:	add    eax,0xffffffd5
   14003e042:	cmp    eax,0x3a
   14003e045:	ja     0x14003e2d1
   14003e04b:	lea    rdx,[rip+0xfffffffffffc1fae]        # 0x140000000
   14003e052:	cdqe   
   14003e054:	movzx  eax,BYTE PTR [rdx+rax*1+0x3e820]
   14003e05c:	mov    ecx,DWORD PTR [rdx+rax*4+0x3e810]
   14003e063:	add    rcx,rdx
   14003e066:	jmp    rcx
   14003e068:	mov    r9d,ebp
   14003e06b:	jmp    0x14003df76
   14003e070:	lea    eax,[rdx-0x31]
   14003e073:	cmp    al,0x8
   14003e075:	jbe    0x14003dfaf
   14003e07b:	mov    rax,QWORD PTR [rsi]
   14003e07e:	mov    rcx,QWORD PTR [rax+0x128]
   14003e085:	mov    rax,QWORD PTR [rcx]
   14003e088:	cmp    dl,BYTE PTR [rax]
   14003e08a:	je     0x14003df70
   14003e090:	cmp    dl,0x30
   14003e093:	jne    0x14003e2d6
   14003e099:	mov    r9d,0x1
   14003e09f:	jmp    0x14003df76
   14003e0a4:	cmp    dl,0x30
   14003e0a7:	mov    ebp,0x1
   14003e0ac:	jl     0x14003e0d6
   14003e0ae:	xchg   ax,ax
   14003e0b0:	cmp    dl,0x39
   14003e0b3:	jg     0x14003e0d6
   14003e0b5:	cmp    r10d,0x19
   14003e0b9:	jae    0x14003e0c9
   14003e0bb:	sub    dl,0x30
   14003e0be:	add    r10d,ebp
   14003e0c1:	mov    BYTE PTR [r11],dl
   14003e0c4:	add    r11,rbp
   14003e0c7:	jmp    0x14003e0cb
   14003e0c9:	add    ebx,ebp
   14003e0cb:	mov    dl,BYTE PTR [r8]
   14003e0ce:	add    r8,rbp
   14003e0d1:	cmp    dl,0x30
   14003e0d4:	jge    0x14003e0b0
   14003e0d6:	mov    rax,QWORD PTR [rsi]
   14003e0d9:	mov    rcx,QWORD PTR [rax+0x128]
   14003e0e0:	mov    rax,QWORD PTR [rcx]
   14003e0e3:	cmp    dl,BYTE PTR [rax]
   14003e0e5:	jne    0x14003e0f2
   14003e0e7:	mov    r9d,0x4
   14003e0ed:	jmp    0x14003df76
   14003e0f2:	movsx  eax,dl
   14003e0f5:	add    eax,0xffffffd5
   14003e0f8:	cmp    eax,0x3a
   14003e0fb:	ja     0x14003e2d1
   14003e101:	lea    rdx,[rip+0xfffffffffffc1ef8]        # 0x140000000
   14003e108:	cdqe   
   14003e10a:	movzx  eax,BYTE PTR [rdx+rax*1+0x3e868]
   14003e112:	mov    ecx,DWORD PTR [rdx+rax*4+0x3e85c]
   14003e119:	add    rcx,rdx
   14003e11c:	jmp    rcx
   14003e11e:	mov    r9d,0x6
   14003e124:	jmp    0x14003df76
   14003e129:	test   r10d,r10d
   14003e12c:	mov    ebp,0x1
   14003e131:	mov    r15d,ebp
   14003e134:	jne    0x14003e14d
   14003e136:	cmp    dl,0x30
   14003e139:	jne    0x14003e150
   14003e13b:	xchg   ax,ax
   14003e13d:	data16 xchg ax,ax
   14003e140:	mov    dl,BYTE PTR [r8]
   14003e143:	sub    ebx,ebp
   14003e145:	add    r8,rbp
   14003e148:	cmp    dl,0x30
   14003e14b:	je     0x14003e140
   14003e14d:	cmp    dl,0x30
   14003e150:	jl     0x14003e176
   14003e152:	cmp    dl,0x39
   14003e155:	jg     0x14003e176
   14003e157:	cmp    r10d,0x19
   14003e15b:	jae    0x14003e16b
   14003e15d:	sub    dl,0x30
   14003e160:	add    r10d,ebp
   14003e163:	mov    BYTE PTR [r11],dl
   14003e166:	add    r11,rbp
   14003e169:	sub    ebx,ebp
   14003e16b:	mov    dl,BYTE PTR [r8]
   14003e16e:	add    r8,rbp
   14003e171:	cmp    dl,0x30
   14003e174:	jge    0x14003e152
   14003e176:	movsx  eax,dl
   14003e179:	add    eax,0xffffffd5
   14003e17c:	cmp    eax,0x3a
   14003e17f:	ja     0x14003e2d1
   14003e185:	lea    rdx,[rip+0xfffffffffffc1e74]        # 0x140000000
   14003e18c:	cdqe   
   14003e18e:	movzx  eax,BYTE PTR [rdx+rax*1+0x3e8b0]
   14003e196:	mov    ecx,DWORD PTR [rdx+rax*4+0x3e8a4]
   14003e19d:	add    rcx,rdx
   14003e1a0:	jmp    rcx
   14003e1a2:	sub    r8,rbp
   14003e1a5:	mov    r9d,0xb
   14003e1ab:	jmp    0x14003df76
   14003e1b0:	sub    dl,0x30
   14003e1b3:	mov    r15d,0x1
   14003e1b9:	cmp    dl,0x9
   14003e1bc:	ja     0x14003e2d6
   14003e1c2:	lea    r9d,[r15+0x3]
   14003e1c6:	sub    r8,r15
   14003e1c9:	jmp    0x14003df76
   14003e1ce:	lea    eax,[rdx-0x31]
   14003e1d1:	lea    rdi,[r8-0x2]
   14003e1d5:	cmp    al,0x8
   14003e1d7:	ja     0x14003e1e8
   14003e1d9:	mov    r9d,0x9
   14003e1df:	sub    r8,0x1
   14003e1e3:	jmp    0x14003df76
   14003e1e8:	cmp    dl,0x2b
   14003e1eb:	je     0x14003e206
   14003e1ed:	cmp    dl,0x2d
   14003e1f0:	je     0x14003e26f
   14003e1f2:	cmp    dl,0x30
   14003e1f5:	jne    0x14003e2d6
   14003e1fb:	mov    r9d,0x8
   14003e201:	jmp    0x14003df76
   14003e206:	mov    r9d,0x7
   14003e20c:	jmp    0x14003df76
   14003e211:	cmp    dl,0x30
   14003e214:	mov    r12d,0x1
   14003e21a:	jne    0x14003e22b
   14003e21c:	data16 data16 xchg ax,ax
   14003e220:	mov    dl,BYTE PTR [r8]
   14003e223:	add    r8,r12
   14003e226:	cmp    dl,0x30
   14003e229:	je     0x14003e220
   14003e22b:	sub    dl,0x31
   14003e22e:	sub    r8,r12
   14003e231:	cmp    dl,0x8
   14003e234:	ja     0x14003e28f
   14003e236:	mov    r9d,0x9
   14003e23c:	jmp    0x14003df76
   14003e241:	lea    eax,[rdx-0x31]
   14003e244:	cmp    al,0x8
   14003e246:	ja     0x14003e1f2
   14003e248:	mov    r9d,0x9
   14003e24e:	sub    r8,0x1
   14003e252:	jmp    0x14003df76
   14003e257:	cmp    DWORD PTR [rsp+0x120],0x0
   14003e25f:	je     0x14003e2cb
   14003e261:	cmp    dl,0x2b
   14003e264:	lea    rdi,[r8-0x1]
   14003e268:	je     0x14003e206
   14003e26a:	cmp    dl,0x2d
   14003e26d:	jne    0x14003e2d6
   14003e26f:	mov    r9d,0x7
   14003e275:	or     r14d,0xffffffff
   14003e279:	jmp    0x14003df76
   14003e27e:	lea    rcx,[rip+0xfffffffffffc1d7b]        # 0x140000000
   14003e285:	cmp    r9d,0xa
   14003e289:	jne    0x14003df80
   14003e28f:	xor    edi,edi
   14003e291:	test   ebp,ebp
   14003e293:	mov    QWORD PTR [r13+0x0],r8
   14003e297:	je     0x14003e787
   14003e29d:	cmp    r10d,0x18
   14003e2a1:	jbe    0x14003e33d
   14003e2a7:	movzx  eax,BYTE PTR [rsp+0x97]
   14003e2af:	cmp    al,0x5
   14003e2b1:	jl     0x14003e2bc
   14003e2b3:	add    al,0x1
   14003e2b5:	mov    BYTE PTR [rsp+0x97],al
   14003e2bc:	sub    r11,0x1
   14003e2c0:	mov    r10d,0x18
   14003e2c6:	add    ebx,0x1
   14003e2c9:	jmp    0x14003e346
   14003e2cb:	sub    r8,0x1
   14003e2cf:	jmp    0x14003e28f
   14003e2d1:	sub    r8,rbp
   14003e2d4:	jmp    0x14003e28f
   14003e2d6:	mov    r8,rdi
   14003e2d9:	jmp    0x14003e28f
   14003e2db:	xor    edi,edi
   14003e2dd:	cmp    dl,0x30
   14003e2e0:	mov    eax,edi
   14003e2e2:	lea    r12d,[rdi+0x1]
   14003e2e6:	mov    DWORD PTR [rsp+0x30],eax
   14003e2ea:	jl     0x14003e335
   14003e2ec:	data16 data16 xchg ax,ax
   14003e2f0:	cmp    dl,0x39
   14003e2f3:	jg     0x14003e320
   14003e2f5:	lea    ecx,[rax+rax*4]
   14003e2f8:	movsx  eax,dl
   14003e2fb:	lea    eax,[rax+rcx*2-0x30]
   14003e2ff:	cmp    eax,0x1450
   14003e304:	mov    DWORD PTR [rsp+0x30],eax
   14003e308:	jg     0x14003e317
   14003e30a:	mov    dl,BYTE PTR [r8]
   14003e30d:	add    r8,r12
   14003e310:	cmp    dl,0x30
   14003e313:	jge    0x14003e2f0
   14003e315:	jmp    0x14003e320
   14003e317:	mov    eax,0x1451
   14003e31c:	mov    DWORD PTR [rsp+0x30],eax
   14003e320:	cmp    dl,0x30
   14003e323:	jl     0x14003e335
   14003e325:	cmp    dl,0x39
   14003e328:	jg     0x14003e335
   14003e32a:	mov    dl,BYTE PTR [r8]
   14003e32d:	add    r8,r12
   14003e330:	cmp    dl,0x30
   14003e333:	jge    0x14003e325
   14003e335:	sub    r8,r12
   14003e338:	jmp    0x14003e291
   14003e33d:	test   r10d,r10d
   14003e340:	je     0x14003e780
   14003e346:	sub    r11,0x1
   14003e34a:	cmp    BYTE PTR [r11],0x0
   14003e34e:	jne    0x14003e361
   14003e350:	sub    r11,0x1
   14003e354:	add    r10d,0xffffffff
   14003e358:	add    ebx,0x1
   14003e35b:	cmp    BYTE PTR [r11],0x0
   14003e35f:	je     0x14003e350
   14003e361:	lea    r8,[rsp+0x60]
   14003e366:	lea    rcx,[rsp+0x80]
   14003e36e:	mov    edx,r10d
   14003e371:	call   0x1400404a0
   14003e376:	test   r14d,r14d
   14003e379:	mov    r8d,DWORD PTR [rsp+0x30]
   14003e37e:	jns    0x14003e383
   14003e380:	neg    r8d
   14003e383:	add    r8d,ebx
   14003e386:	test   r12d,r12d
   14003e389:	jne    0x14003e393
   14003e38b:	add    r8d,DWORD PTR [rsp+0x110]
   14003e393:	test   r15d,r15d
   14003e396:	jne    0x14003e3a0
   14003e398:	sub    r8d,DWORD PTR [rsp+0x118]
   14003e3a0:	cmp    r8d,0x1450
   14003e3a7:	jg     0x14003e76a
   14003e3ad:	cmp    r8d,0xffffebb0
   14003e3b4:	jl     0x14003e75e
   14003e3ba:	lea    rdx,[rip+0x1e1ff]        # 0x14005c5c0
   14003e3c1:	sub    rdx,0x60
   14003e3c5:	test   r8d,r8d
   14003e3c8:	je     0x14003e747
   14003e3ce:	jns    0x14003e3de
   14003e3d0:	lea    rdx,[rip+0x1e349]        # 0x14005c720
   14003e3d7:	neg    r8d
   14003e3da:	sub    rdx,0x60
   14003e3de:	movzx  eax,WORD PTR [rsp+0x60]
   14003e3e3:	cmp    DWORD PTR [rsp+0x38],0x0
   14003e3e8:	mov    ebp,0x0
   14003e3ed:	cmove  ax,bp
   14003e3f1:	test   r8d,r8d
   14003e3f4:	mov    WORD PTR [rsp+0x60],ax
   14003e3f9:	je     0x14003e745
   14003e3ff:	mov    r9d,0xffff8000
   14003e405:	data16 data16 xchg ax,ax
   14003e409:	data16 xchg ax,ax
   14003e40c:	data16 data16 xchg ax,ax
   14003e410:	mov    eax,r8d
   14003e413:	add    rdx,0x54
   14003e417:	sar    r8d,0x3
   14003e41b:	and    eax,0x7
   14003e41e:	mov    DWORD PTR [rsp+0x30],r8d
   14003e423:	mov    QWORD PTR [rsp+0x40],rdx
   14003e428:	je     0x14003e73c
   14003e42e:	cdqe   
   14003e430:	lea    rcx,[rax+rax*2]
   14003e434:	cmp    WORD PTR [rdx+rcx*4],0x8000
   14003e43a:	lea    r14,[rdx+rcx*4]
   14003e43e:	jb     0x14003e467
   14003e440:	mov    rax,QWORD PTR [r14]
   14003e443:	lea    rcx,[rsp+0x70]
   14003e448:	mov    QWORD PTR [rcx],rax
   14003e44b:	mov    eax,DWORD PTR [r14+0x8]
   14003e44f:	lea    r14,[rsp+0x70]
   14003e454:	mov    DWORD PTR [rcx+0x8],eax
   14003e457:	mov    rax,QWORD PTR [rsp+0x70]
   14003e45c:	shr    rax,0x10
   14003e460:	sub    eax,0x1
   14003e463:	mov    DWORD PTR [rsp+0x72],eax
   14003e467:	movzx  ecx,WORD PTR [r14+0xa]
   14003e46c:	movzx  eax,WORD PTR [rsp+0x6a]
   14003e471:	mov    r15d,ebp
   14003e474:	movzx  edx,cx
   14003e477:	and    cx,0x7fff
   14003e47c:	mov    DWORD PTR [rsp+0x50],ebp
   14003e480:	xor    dx,ax
   14003e483:	and    ax,0x7fff
   14003e487:	mov    DWORD PTR [rsp+0x54],ebp
   14003e48b:	and    dx,0x8000
   14003e490:	cmp    ax,0x7fff
   14003e494:	mov    DWORD PTR [rsp+0x58],ebp
   14003e498:	mov    WORD PTR [rsp+0x38],dx
   14003e49d:	lea    edi,[rax+rcx*1]
   14003e4a0:	jae    0x14003e71f
   14003e4a6:	cmp    cx,0x7fff
   14003e4ab:	jae    0x14003e71f
   14003e4b1:	cmp    di,0xbffd
   14003e4b6:	ja     0x14003e71f
   14003e4bc:	cmp    di,0x3fbf
   14003e4c1:	ja     0x14003e4cc
   14003e4c3:	mov    DWORD PTR [rsp+0x68],ebp
   14003e4c7:	jmp    0x14003e72f
   14003e4cc:	test   ax,ax
   14003e4cf:	jne    0x14003e4f7
   14003e4d1:	mov    eax,DWORD PTR [rsp+0x68]
   14003e4d5:	add    di,0x1
   14003e4d9:	btr    eax,0x1f
   14003e4dd:	test   eax,eax
   14003e4df:	jne    0x14003e4f7
   14003e4e1:	cmp    DWORD PTR [rsp+0x64],ebp
   14003e4e5:	jne    0x14003e4f7
   14003e4e7:	cmp    DWORD PTR [rsp+0x60],ebp
   14003e4eb:	jne    0x14003e4f7
   14003e4ed:	mov    WORD PTR [rsp+0x6a],bp
   14003e4f2:	jmp    0x14003e737
   14003e4f7:	test   cx,cx
   14003e4fa:	jne    0x14003e520
   14003e4fc:	mov    eax,DWORD PTR [r14+0x8]
   14003e500:	add    di,0x1
   14003e504:	btr    eax,0x1f
   14003e508:	test   eax,eax
   14003e50a:	jne    0x14003e520
   14003e50c:	cmp    DWORD PTR [r14+0x4],ebp
   14003e510:	jne    0x14003e520
   14003e512:	cmp    DWORD PTR [r14],ebp
   14003e515:	jne    0x14003e520
   14003e517:	mov    DWORD PTR [rsp+0x68],ebp
   14003e51b:	jmp    0x14003e72f
   14003e520:	mov    r13d,ebp
   14003e523:	lea    rdx,[rsp+0x54]
   14003e528:	mov    r12d,0x5
   14003e52e:	xchg   ax,ax
   14003e530:	test   r12d,r12d
   14003e533:	lea    eax,[r13+r13*1+0x0]
   14003e538:	mov    ebx,r12d
   14003e53b:	movsxd rcx,eax
   14003e53e:	jle    0x14003e591
   14003e540:	mov    esi,r13d
   14003e543:	lea    r10,[r14+0x8]
   14003e547:	lea    r11,[rsp+rcx*1+0x60]
   14003e54c:	and    esi,0x1
   14003e54f:	nop
   14003e550:	movzx  eax,WORD PTR [r10]
   14003e554:	movzx  ecx,WORD PTR [r11]
   14003e558:	mov    r8d,ebp
   14003e55b:	imul   ecx,eax
   14003e55e:	mov    eax,DWORD PTR [rdx-0x4]
   14003e561:	lea    r9d,[rax+rcx*1]
   14003e565:	cmp    r9d,eax
   14003e568:	jb     0x14003e56f
   14003e56a:	cmp    r9d,ecx
   14003e56d:	jae    0x14003e575
   14003e56f:	mov    r8d,0x1
   14003e575:	test   r8d,r8d
   14003e578:	mov    DWORD PTR [rdx-0x4],r9d
   14003e57c:	je     0x14003e582
   14003e57e:	add    WORD PTR [rdx],0x1
   14003e582:	sub    ebx,0x1
   14003e585:	add    r11,0x2
   14003e589:	sub    r10,0x2
   14003e58d:	test   ebx,ebx
   14003e58f:	jg     0x14003e550
   14003e591:	sub    r12d,0x1
   14003e595:	add    rdx,0x2
   14003e599:	add    r13d,0x1
   14003e59d:	test   r12d,r12d
   14003e5a0:	jg     0x14003e530
   14003e5a2:	mov    r8d,DWORD PTR [rsp+0x58]
   14003e5a7:	mov    edx,DWORD PTR [rsp+0x54]
   14003e5ab:	mov    r9d,DWORD PTR [rsp+0x50]
   14003e5b0:	add    di,0xc002
   14003e5b5:	test   di,di
   14003e5b8:	jle    0x14003e5fe
   14003e5ba:	data16 xchg ax,ax
   14003e5bd:	data16 xchg ax,ax
   14003e5c0:	bt     r8d,0x1f
   14003e5c5:	jb     0x14003e5f9
   14003e5c7:	mov    ecx,edx
   14003e5c9:	mov    eax,r9d
   14003e5cc:	add    r8d,r8d
   14003e5cf:	add    edx,edx
   14003e5d1:	shr    eax,0x1f
   14003e5d4:	shr    ecx,0x1f
   14003e5d7:	add    r9d,r9d
   14003e5da:	or     edx,eax
   14003e5dc:	or     r8d,ecx
   14003e5df:	add    di,0xffff
   14003e5e4:	mov    DWORD PTR [rsp+0x54],edx
   14003e5e8:	mov    DWORD PTR [rsp+0x58],r8d
   14003e5ed:	test   di,di
   14003e5f0:	mov    DWORD PTR [rsp+0x50],r9d
   14003e5f5:	jg     0x14003e5c0
   14003e5f7:	jmp    0x14003e5fe
   14003e5f9:	test   di,di
   14003e5fc:	jg     0x14003e663
   14003e5fe:	add    di,0xffff
   14003e603:	jns    0x14003e663
   14003e605:	movzx  eax,di
   14003e608:	neg    ax
   14003e60b:	movzx  r10d,ax
   14003e60f:	add    di,r10w
   14003e613:	test   BYTE PTR [rsp+0x50],0x1
   14003e618:	je     0x14003e61e
   14003e61a:	add    r15d,0x1
   14003e61e:	mov    ecx,edx
   14003e620:	mov    eax,r8d
   14003e623:	shr    r9d,1
   14003e626:	shl    ecx,0x1f
   14003e629:	shr    edx,1
   14003e62b:	shl    eax,0x1f
   14003e62e:	or     r9d,ecx
   14003e631:	shr    r8d,1
   14003e634:	or     edx,eax
   14003e636:	sub    r10,0x1
   14003e63a:	mov    DWORD PTR [rsp+0x50],r9d
   14003e63f:	jne    0x14003e613
   14003e641:	test   r15d,r15d
   14003e644:	mov    DWORD PTR [rsp+0x54],edx
   14003e648:	mov    DWORD PTR [rsp+0x58],r8d
   14003e64d:	je     0x14003e663
   14003e64f:	movzx  eax,r9w
   14003e653:	or     ax,0x1
   14003e657:	mov    WORD PTR [rsp+0x50],ax
   14003e65c:	mov    r9d,DWORD PTR [rsp+0x50]
   14003e661:	jmp    0x14003e668
   14003e663:	mov    ax,WORD PTR [rsp+0x50]
   14003e668:	cmp    ax,0x8000
   14003e66c:	ja     0x14003e67e
   14003e66e:	and    r9d,0x1ffff
   14003e675:	cmp    r9d,0x18000
   14003e67c:	jne    0x14003e6e2
   14003e67e:	mov    eax,DWORD PTR [rsp+0x52]
   14003e682:	cmp    eax,0xffffffff
   14003e685:	jne    0x14003e6d7
   14003e687:	mov    eax,DWORD PTR [rsp+0x56]
   14003e68b:	mov    DWORD PTR [rsp+0x52],ebp
   14003e68f:	cmp    eax,0xffffffff
   14003e692:	jne    0x14003e6c9
   14003e694:	movzx  eax,WORD PTR [rsp+0x5a]
   14003e699:	mov    DWORD PTR [rsp+0x56],ebp
   14003e69d:	mov    edx,DWORD PTR [rsp+0x54]
   14003e6a1:	cmp    ax,0xffff
   14003e6a5:	jne    0x14003e6b9
   14003e6a7:	mov    WORD PTR [rsp+0x5a],0x8000
   14003e6ae:	mov    r8d,DWORD PTR [rsp+0x58]
   14003e6b3:	add    di,0x1
   14003e6b7:	jmp    0x14003e6e2
   14003e6b9:	add    ax,0x1
   14003e6bd:	mov    WORD PTR [rsp+0x5a],ax
   14003e6c2:	mov    r8d,DWORD PTR [rsp+0x58]
   14003e6c7:	jmp    0x14003e6e2
   14003e6c9:	add    eax,0x1
   14003e6cc:	mov    DWORD PTR [rsp+0x56],eax
   14003e6d0:	mov    r8d,DWORD PTR [rsp+0x58]
   14003e6d5:	jmp    0x14003e6de
   14003e6d7:	add    eax,0x1
   14003e6da:	mov    DWORD PTR [rsp+0x52],eax
   14003e6de:	mov    edx,DWORD PTR [rsp+0x54]
   14003e6e2:	cmp    di,0x7fff
   14003e6e7:	mov    r9d,0xffff8000
   14003e6ed:	jb     0x14003e6fb
   14003e6ef:	cmp    WORD PTR [rsp+0x38],bp
   14003e6f4:	mov    r8d,DWORD PTR [rsp+0x30]
   14003e6f9:	jmp    0x14003e722
   14003e6fb:	movzx  eax,WORD PTR [rsp+0x52]
   14003e700:	or     di,WORD PTR [rsp+0x38]
   14003e705:	mov    DWORD PTR [rsp+0x66],r8d
   14003e70a:	mov    r8d,DWORD PTR [rsp+0x30]
   14003e70f:	mov    WORD PTR [rsp+0x60],ax
   14003e714:	mov    WORD PTR [rsp+0x6a],di
   14003e719:	mov    DWORD PTR [rsp+0x62],edx
   14003e71d:	jmp    0x14003e737
   14003e71f:	test   dx,dx
   14003e722:	mov    eax,0x7fff8000
   14003e727:	cmovne eax,r9d
   14003e72b:	mov    DWORD PTR [rsp+0x68],eax
   14003e72f:	mov    DWORD PTR [rsp+0x60],ebp
   14003e733:	mov    DWORD PTR [rsp+0x64],ebp
   14003e737:	mov    rdx,QWORD PTR [rsp+0x40]
   14003e73c:	test   r8d,r8d
   14003e73f:	jne    0x14003e410
   14003e745:	xor    edi,edi
   14003e747:	mov    eax,DWORD PTR [rsp+0x68]
   14003e74b:	movzx  ecx,WORD PTR [rsp+0x60]
   14003e750:	mov    edx,DWORD PTR [rsp+0x62]
   14003e754:	mov    r8d,DWORD PTR [rsp+0x66]
   14003e759:	shr    eax,0x10
   14003e75c:	jmp    0x14003e797
   14003e75e:	mov    r8d,edi
   14003e761:	mov    edx,edi
   14003e763:	mov    edi,0x1
   14003e768:	jmp    0x14003e791
   14003e76a:	mov    edx,edi
   14003e76c:	mov    ax,0x7fff
   14003e770:	mov    r8d,0x80000000
   14003e776:	mov    edi,0x2
   14003e77b:	xor    cx,cx
   14003e77e:	jmp    0x14003e797
   14003e780:	mov    r8d,edi
   14003e783:	mov    edx,edi
   14003e785:	jmp    0x14003e791
   14003e787:	mov    r8d,edi
   14003e78a:	mov    edx,edi
   14003e78c:	mov    edi,0x4
   14003e791:	xor    cx,cx
   14003e794:	xor    ax,ax
   14003e797:	mov    r9,QWORD PTR [rsp+0x48]
   14003e79c:	or     ax,WORD PTR [rsp+0x34]
   14003e7a1:	mov    WORD PTR [r9+0xa],ax
   14003e7a6:	mov    eax,edi
   14003e7a8:	mov    WORD PTR [r9],cx
   14003e7ac:	mov    DWORD PTR [r9+0x2],edx
   14003e7b0:	mov    DWORD PTR [r9+0x6],r8d
   14003e7b4:	mov    rcx,QWORD PTR [rsp+0xa0]
   14003e7bc:	xor    rcx,rsp
   14003e7bf:	call   0x140029b40
   14003e7c4:	mov    rbx,QWORD PTR [rsp+0x100]
   14003e7cc:	add    rsp,0xb0
   14003e7d3:	pop    r15
   14003e7d5:	pop    r14
   14003e7d7:	pop    r13
   14003e7d9:	pop    r12
   14003e7db:	pop    rdi
   14003e7dc:	pop    rsi
   14003e7dd:	pop    rbp
   14003e7de:	ret    
   14003e7df:	nop
   14003e7e0:	test   al,0xdf
   14003e7e2:	add    eax,DWORD PTR [rax]
   14003e7e4:	or     al,ah
   14003e7e6:	add    eax,DWORD PTR [rax]
   14003e7e8:	jo     0x14003e7ca
   14003e7ea:	add    eax,DWORD PTR [rax]
   14003e7ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e7ed:	loopne 0x14003e7f2
   14003e7ef:	add    BYTE PTR [rcx],ch
   14003e7f1:	loope  0x14003e7f6
   14003e7f3:	add    BYTE PTR [rax-0x31fffc1f],dh
   14003e7f9:	loope  0x14003e7fe
   14003e7fb:	add    BYTE PTR [rcx-0x1e],al
   14003e7fe:	add    eax,DWORD PTR [rax]
   14003e800:	adc    edx,esp
   14003e802:	add    eax,DWORD PTR [rax]
   14003e804:	fnclex 
   14003e806:	add    eax,DWORD PTR [rax]
   14003e808:	jle    0x14003e7ec
   14003e80a:	add    eax,DWORD PTR [rax]
   14003e80c:	push   rdi
   14003e80d:	loop   0x14003e812
   14003e80f:	add    BYTE PTR [rdx+0x680003e1],ah
   14003e815:	loopne 0x14003e81a
   14003e817:	add    BYTE PTR [rsi],bl
   14003e819:	loope  0x14003e81e
   14003e81b:	add    cl,dl
   14003e81d:	loop   0x14003e822
   14003e81f:	add    BYTE PTR [rax],al
   14003e821:	add    eax,DWORD PTR [rax]
   14003e823:	add    eax,DWORD PTR [rbx]
   14003e825:	add    DWORD PTR [rbx],eax
   14003e827:	add    eax,DWORD PTR [rbx]
   14003e829:	add    eax,DWORD PTR [rbx]
   14003e82b:	add    eax,DWORD PTR [rbx]
   14003e82d:	add    eax,DWORD PTR [rbx]
   14003e82f:	add    eax,DWORD PTR [rbx]
   14003e831:	add    eax,DWORD PTR [rbx]
   14003e833:	add    eax,DWORD PTR [rbx]
   14003e835:	add    eax,DWORD PTR [rbx]
   14003e837:	add    eax,DWORD PTR [rbx]
   14003e839:	add    al,BYTE PTR [rdx]
   14003e83b:	add    eax,DWORD PTR [rbx]
   14003e83d:	add    eax,DWORD PTR [rbx]
   14003e83f:	add    eax,DWORD PTR [rbx]
   14003e841:	add    eax,DWORD PTR [rbx]
   14003e843:	add    eax,DWORD PTR [rbx]
   14003e845:	add    eax,DWORD PTR [rbx]
   14003e847:	add    eax,DWORD PTR [rbx]
   14003e849:	add    eax,DWORD PTR [rbx]
   14003e84b:	add    eax,DWORD PTR [rbx]
   14003e84d:	add    eax,DWORD PTR [rbx]
   14003e84f:	add    eax,DWORD PTR [rbx]
   14003e851:	add    eax,DWORD PTR [rbx]
   14003e853:	add    eax,DWORD PTR [rbx]
   14003e855:	add    eax,DWORD PTR [rbx]
   14003e857:	add    eax,DWORD PTR [rbx]
   14003e859:	add    al,BYTE PTR [rdx]
   14003e85b:	nop
   14003e85c:	movabs ds:0xd10003e11e0003e1,al
   14003e865:	loop   0x14003e86a
   14003e867:	add    BYTE PTR [rax],al
   14003e869:	add    al,BYTE PTR [rax]
   14003e86b:	add    al,BYTE PTR [rdx]
   14003e86d:	add    al,BYTE PTR [rdx]
   14003e86f:	add    al,BYTE PTR [rdx]
   14003e871:	add    al,BYTE PTR [rdx]
   14003e873:	add    al,BYTE PTR [rdx]
   14003e875:	add    al,BYTE PTR [rdx]
   14003e877:	add    al,BYTE PTR [rdx]
   14003e879:	add    al,BYTE PTR [rdx]
   14003e87b:	add    al,BYTE PTR [rdx]
   14003e87d:	add    al,BYTE PTR [rdx]
   14003e87f:	add    al,BYTE PTR [rdx]
   14003e881:	add    DWORD PTR [rcx],eax
   14003e883:	add    al,BYTE PTR [rdx]
   14003e885:	add    al,BYTE PTR [rdx]
   14003e887:	add    al,BYTE PTR [rdx]
   14003e889:	add    al,BYTE PTR [rdx]
   14003e88b:	add    al,BYTE PTR [rdx]
   14003e88d:	add    al,BYTE PTR [rdx]
   14003e88f:	add    al,BYTE PTR [rdx]
   14003e891:	add    al,BYTE PTR [rdx]
   14003e893:	add    al,BYTE PTR [rdx]
   14003e895:	add    al,BYTE PTR [rdx]
   14003e897:	add    al,BYTE PTR [rdx]
   14003e899:	add    al,BYTE PTR [rdx]
   14003e89b:	add    al,BYTE PTR [rdx]
   14003e89d:	add    al,BYTE PTR [rdx]
   14003e89f:	add    al,BYTE PTR [rdx]
   14003e8a1:	add    DWORD PTR [rcx],eax
   14003e8a3:	nop
   14003e8a4:	movabs ds:0xd10003e11e0003e1,al
   14003e8ad:	loop   0x14003e8b2
   14003e8af:	add    BYTE PTR [rax],al
   14003e8b1:	add    al,BYTE PTR [rax]
   14003e8b3:	add    al,BYTE PTR [rdx]
   14003e8b5:	add    al,BYTE PTR [rdx]
   14003e8b7:	add    al,BYTE PTR [rdx]
   14003e8b9:	add    al,BYTE PTR [rdx]
   14003e8bb:	add    al,BYTE PTR [rdx]
   14003e8bd:	add    al,BYTE PTR [rdx]
   14003e8bf:	add    al,BYTE PTR [rdx]
   14003e8c1:	add    al,BYTE PTR [rdx]
   14003e8c3:	add    al,BYTE PTR [rdx]
   14003e8c5:	add    al,BYTE PTR [rdx]
   14003e8c7:	add    al,BYTE PTR [rdx]
   14003e8c9:	add    DWORD PTR [rcx],eax
   14003e8cb:	add    al,BYTE PTR [rdx]
   14003e8cd:	add    al,BYTE PTR [rdx]
   14003e8cf:	add    al,BYTE PTR [rdx]
   14003e8d1:	add    al,BYTE PTR [rdx]
   14003e8d3:	add    al,BYTE PTR [rdx]
   14003e8d5:	add    al,BYTE PTR [rdx]
   14003e8d7:	add    al,BYTE PTR [rdx]
   14003e8d9:	add    al,BYTE PTR [rdx]
   14003e8db:	add    al,BYTE PTR [rdx]
   14003e8dd:	add    al,BYTE PTR [rdx]
   14003e8df:	add    al,BYTE PTR [rdx]
   14003e8e1:	add    al,BYTE PTR [rdx]
   14003e8e3:	add    al,BYTE PTR [rdx]
   14003e8e5:	add    al,BYTE PTR [rdx]
   14003e8e7:	add    al,BYTE PTR [rdx]
   14003e8e9:	add    DWORD PTR [rcx],eax
   14003e8eb:	int3   
   14003e8ec:	int3   
   14003e8ed:	int3   
   14003e8ee:	int3   
   14003e8ef:	int3   
   14003e8f0:	mov    r11,rsp
   14003e8f3:	push   rsi
   14003e8f4:	push   rdi
   14003e8f5:	sub    rsp,0xd8
   14003e8fc:	mov    rax,QWORD PTR [rip+0x1c67d]        # 0x14005af80
   14003e903:	xor    rax,rsp
   14003e906:	mov    QWORD PTR [rsp+0xa0],rax
   14003e90e:	movzx  r10d,WORD PTR [rcx+0x8]
   14003e913:	mov    DWORD PTR [rsp+0x44],edx
   14003e917:	mov    rdi,r9
   14003e91a:	movzx  edx,r10w
   14003e91e:	and    r10w,0x7fff
   14003e924:	mov    QWORD PTR [rsp+0x58],r9
   14003e929:	mov    r9d,DWORD PTR [rcx+0x4]
   14003e92d:	and    dx,0x8000
   14003e932:	mov    BYTE PTR [r11-0x68],0xcc
   14003e937:	test   dx,dx
   14003e93a:	mov    BYTE PTR [r11-0x67],0xcc
   14003e93f:	mov    BYTE PTR [r11-0x66],0xcc
   14003e944:	mov    BYTE PTR [r11-0x65],0xcc
   14003e949:	mov    BYTE PTR [r11-0x64],0xcc
   14003e94e:	mov    BYTE PTR [r11-0x63],0xcc
   14003e953:	mov    BYTE PTR [r11-0x62],0xcc
   14003e958:	mov    BYTE PTR [r11-0x61],0xcc
   14003e95d:	mov    BYTE PTR [r11-0x60],0xcc
   14003e962:	mov    BYTE PTR [r11-0x5f],0xcc
   14003e967:	mov    BYTE PTR [r11-0x5e],0xfb
   14003e96c:	mov    BYTE PTR [r11-0x5d],0x3f
   14003e971:	mov    r11d,DWORD PTR [rcx]
   14003e974:	mov    DWORD PTR [rsp+0x50],r8d
   14003e979:	mov    esi,0x1
   14003e97e:	mov    WORD PTR [rsp+0x30],dx
   14003e983:	je     0x14003e98b
   14003e985:	mov    BYTE PTR [rdi+0x2],0x2d
   14003e989:	jmp    0x14003e98f
   14003e98b:	mov    BYTE PTR [rdi+0x2],0x20
   14003e98f:	test   r10w,r10w
   14003e993:	mov    QWORD PTR [rsp+0xf8],rbx
   14003e99b:	mov    QWORD PTR [rsp+0xd0],rbp
   14003e9a3:	mov    QWORD PTR [rsp+0xc8],r12
   14003e9ab:	mov    QWORD PTR [rsp+0xc0],r13
   14003e9b3:	jne    0x14003e9f1
   14003e9b5:	test   r9d,r9d
   14003e9b8:	jne    0x14003eb24
   14003e9be:	test   r11d,r11d
   14003e9c1:	jne    0x14003eb24
   14003e9c7:	mov    eax,0x20
   14003e9cc:	mov    ecx,0x2d
   14003e9d1:	cmp    dx,0x8000
   14003e9d6:	cmove  eax,ecx
   14003e9d9:	mov    WORD PTR [rdi],r11w
   14003e9dd:	mov    BYTE PTR [rdi+0x3],sil
   14003e9e1:	mov    BYTE PTR [rdi+0x4],0x30
   14003e9e5:	mov    BYTE PTR [rdi+0x5],r11b
   14003e9e9:	mov    BYTE PTR [rdi+0x2],al
   14003e9ec:	jmp    0x14003f65c
   14003e9f1:	cmp    r10w,0x7fff
   14003e9f7:	jne    0x14003eb24
   14003e9fd:	cmp    r9d,0x80000000
   14003ea04:	mov    WORD PTR [rdi],si
   14003ea07:	jne    0x14003ea0e
   14003ea09:	test   r11d,r11d
   14003ea0c:	je     0x14003ea53
   14003ea0e:	bt     r9d,0x1e
   14003ea13:	jb     0x14003ea53
   14003ea15:	lea    rcx,[rdi+0x4]
   14003ea19:	lea    r8,[rip+0xb6bc]        # 0x14004a0dc
   14003ea20:	mov    edx,0x16
   14003ea25:	call   0x140037660
   14003ea2a:	xor    ebx,ebx
   14003ea2c:	test   eax,eax
   14003ea2e:	je     0x14003eb19
   14003ea34:	xor    r9d,r9d
   14003ea37:	xor    r8d,r8d
   14003ea3a:	xor    edx,edx
   14003ea3c:	xor    ecx,ecx
   14003ea3e:	mov    QWORD PTR [rsp+0x20],rbx
   14003ea43:	call   0x14002e860
   14003ea48:	mov    BYTE PTR [rdi+0x3],0x6
   14003ea4c:	mov    esi,ebx
   14003ea4e:	jmp    0x14003f65c
   14003ea53:	test   dx,dx
   14003ea56:	je     0x14003eaa3
   14003ea58:	cmp    r9d,0xc0000000
   14003ea5f:	jne    0x14003eaa3
   14003ea61:	test   r11d,r11d
   14003ea64:	jne    0x14003eaea
   14003ea6a:	lea    rcx,[rdi+0x4]
   14003ea6e:	lea    r8,[rip+0xb65f]        # 0x14004a0d4
   14003ea75:	lea    edx,[r11+0x16]
   14003ea79:	call   0x140037660
   14003ea7e:	xor    ebx,ebx
   14003ea80:	test   eax,eax
   14003ea82:	je     0x14003eadf
   14003ea84:	xor    r9d,r9d
   14003ea87:	xor    r8d,r8d
   14003ea8a:	xor    edx,edx
   14003ea8c:	xor    ecx,ecx
   14003ea8e:	mov    QWORD PTR [rsp+0x20],rbx
   14003ea93:	call   0x14002e860
   14003ea98:	mov    BYTE PTR [rdi+0x3],0x5
   14003ea9c:	mov    esi,ebx
   14003ea9e:	jmp    0x14003f65c
   14003eaa3:	cmp    r9d,0x80000000
   14003eaaa:	jne    0x14003eaea
   14003eaac:	test   r11d,r11d
   14003eaaf:	jne    0x14003eaea
   14003eab1:	lea    rcx,[rdi+0x4]
   14003eab5:	lea    r8,[rip+0xb610]        # 0x14004a0cc
   14003eabc:	lea    edx,[r11+0x16]
   14003eac0:	call   0x140037660
   14003eac5:	xor    ebx,ebx
   14003eac7:	test   eax,eax
   14003eac9:	je     0x14003eadf
   14003eacb:	xor    r9d,r9d
   14003eace:	xor    r8d,r8d
   14003ead1:	xor    edx,edx
   14003ead3:	xor    ecx,ecx
   14003ead5:	mov    QWORD PTR [rsp+0x20],rbx
   14003eada:	call   0x14002e860
   14003eadf:	mov    BYTE PTR [rdi+0x3],0x5
   14003eae3:	mov    esi,ebx
   14003eae5:	jmp    0x14003f65c
   14003eaea:	lea    rcx,[rdi+0x4]
   14003eaee:	lea    r8,[rip+0xb5cf]        # 0x14004a0c4
   14003eaf5:	mov    edx,0x16
   14003eafa:	call   0x140037660
   14003eaff:	xor    ebx,ebx
   14003eb01:	test   eax,eax
   14003eb03:	je     0x14003eb19
   14003eb05:	xor    r9d,r9d
   14003eb08:	xor    r8d,r8d
   14003eb0b:	xor    edx,edx
   14003eb0d:	xor    ecx,ecx
   14003eb0f:	mov    QWORD PTR [rsp+0x20],rbx
   14003eb14:	call   0x14002e860
   14003eb19:	mov    BYTE PTR [rdi+0x3],0x6
   14003eb1d:	mov    esi,ebx
   14003eb1f:	jmp    0x14003f65c
   14003eb24:	movzx  r8d,r10w
   14003eb28:	mov    WORD PTR [rsp+0x7a],r10w
   14003eb2e:	mov    ecx,r9d
   14003eb31:	shr    ecx,0x18
   14003eb34:	mov    eax,r8d
   14003eb37:	mov    DWORD PTR [rsp+0x72],r11d
   14003eb3c:	shr    eax,0x8
   14003eb3f:	mov    r11d,0x5
   14003eb45:	xor    ebx,ebx
   14003eb47:	imul   r8d,r8d,0x4d10
   14003eb4e:	lea    edx,[rax+rcx*2]
   14003eb51:	mov    QWORD PTR [rsp+0xb8],r14
   14003eb59:	mov    DWORD PTR [rsp+0x76],r9d
   14003eb5e:	mov    QWORD PTR [rsp+0xb0],r15
   14003eb66:	mov    WORD PTR [rsp+0x70],0x0
   14003eb6d:	mov    DWORD PTR [rsp+0x48],r11d
   14003eb72:	imul   edx,edx,0x4d
   14003eb75:	lea    ecx,[rdx+r8*1-0x134312f4]
   14003eb7d:	lea    rdx,[rip+0x1da3c]        # 0x14005c5c0
   14003eb84:	mov    edi,0x7fff8000
   14003eb89:	sar    ecx,0x10
   14003eb8c:	sub    rdx,0x60
   14003eb90:	mov    r12d,0xffff8000
   14003eb96:	movsx  r10d,cx
   14003eb9a:	mov    DWORD PTR [rsp+0x34],ecx
   14003eb9e:	neg    r10d
   14003eba1:	je     0x14003efdd
   14003eba7:	test   r10d,r10d
   14003ebaa:	jns    0x14003ebba
   14003ebac:	lea    rdx,[rip+0x1db6d]        # 0x14005c720
   14003ebb3:	neg    r10d
   14003ebb6:	sub    rdx,0x60
   14003ebba:	test   r10d,r10d
   14003ebbd:	je     0x14003efdd
   14003ebc3:	mov    r9d,DWORD PTR [rsp+0x74]
   14003ebc8:	mov    r8d,DWORD PTR [rsp+0x70]
   14003ebcd:	data16 xchg ax,ax
   14003ebd0:	mov    eax,r10d
   14003ebd3:	add    rdx,0x54
   14003ebd7:	sar    r10d,0x3
   14003ebdb:	and    eax,0x7
   14003ebde:	mov    DWORD PTR [rsp+0x40],r10d
   14003ebe3:	mov    QWORD PTR [rsp+0x38],rdx
   14003ebe8:	je     0x14003efce
   14003ebee:	cdqe   
   14003ebf0:	lea    rcx,[rax+rax*2]
   14003ebf4:	cmp    WORD PTR [rdx+rcx*4],0x8000
   14003ebfa:	lea    r15,[rdx+rcx*4]
   14003ebfe:	jb     0x14003ec33
   14003ec00:	mov    rax,QWORD PTR [r15]
   14003ec03:	lea    rcx,[rsp+0x90]
   14003ec0b:	mov    QWORD PTR [rcx],rax
   14003ec0e:	mov    eax,DWORD PTR [r15+0x8]
   14003ec12:	lea    r15,[rsp+0x90]
   14003ec1a:	mov    DWORD PTR [rcx+0x8],eax
   14003ec1d:	mov    rax,QWORD PTR [rsp+0x90]
   14003ec25:	shr    rax,0x10
   14003ec29:	sub    eax,0x1
   14003ec2c:	mov    DWORD PTR [rsp+0x92],eax
   14003ec33:	movzx  ecx,WORD PTR [r15+0xa]
   14003ec38:	movzx  eax,WORD PTR [rsp+0x7a]
   14003ec3d:	mov    DWORD PTR [rsp+0x60],ebx
   14003ec41:	movzx  edx,cx
   14003ec44:	and    cx,0x7fff
   14003ec49:	mov    DWORD PTR [rsp+0x64],ebx
   14003ec4d:	xor    dx,ax
   14003ec50:	and    ax,0x7fff
   14003ec54:	mov    DWORD PTR [rsp+0x68],ebx
   14003ec58:	and    dx,0x8000
   14003ec5d:	cmp    ax,0x7fff
   14003ec61:	lea    ebp,[rax+rcx*1]
   14003ec64:	mov    WORD PTR [rsp+0x32],dx
   14003ec69:	jae    0x14003efae
   14003ec6f:	cmp    cx,0x7fff
   14003ec74:	jae    0x14003efae
   14003ec7a:	cmp    bp,0xbffd
   14003ec7f:	ja     0x14003efae
   14003ec85:	cmp    bp,0x3fbf
   14003ec8a:	ja     0x14003eca8
   14003ec8c:	mov    rdx,QWORD PTR [rsp+0x38]
   14003ec91:	mov    DWORD PTR [rsp+0x78],ebx
   14003ec95:	mov    r9d,ebx
   14003ec98:	mov    DWORD PTR [rsp+0x74],ebx
   14003ec9c:	mov    r8d,ebx
   14003ec9f:	mov    DWORD PTR [rsp+0x70],ebx
   14003eca3:	jmp    0x14003efce
   14003eca8:	test   ax,ax
   14003ecab:	jne    0x14003ecd6
   14003ecad:	mov    eax,DWORD PTR [rsp+0x78]
   14003ecb1:	add    bp,0x1
   14003ecb5:	btr    eax,0x1f
   14003ecb9:	test   eax,eax
   14003ecbb:	jne    0x14003ecd6
   14003ecbd:	test   r9d,r9d
   14003ecc0:	jne    0x14003ecd6
   14003ecc2:	test   r8d,r8d
   14003ecc5:	jne    0x14003ecd6
   14003ecc7:	mov    rdx,QWORD PTR [rsp+0x38]
   14003eccc:	mov    WORD PTR [rsp+0x7a],bx
   14003ecd1:	jmp    0x14003efce
   14003ecd6:	test   cx,cx
   14003ecd9:	jne    0x14003ed12
   14003ecdb:	mov    eax,DWORD PTR [r15+0x8]
   14003ecdf:	add    bp,0x1
   14003ece3:	btr    eax,0x1f
   14003ece7:	test   eax,eax
   14003ece9:	jne    0x14003ed12
   14003eceb:	cmp    DWORD PTR [r15+0x4],ebx
   14003ecef:	jne    0x14003ed12
   14003ecf1:	cmp    DWORD PTR [r15],ebx
   14003ecf4:	jne    0x14003ed12
   14003ecf6:	mov    rdx,QWORD PTR [rsp+0x38]
   14003ecfb:	mov    DWORD PTR [rsp+0x78],ebx
   14003ecff:	mov    r9d,ebx
   14003ed02:	mov    DWORD PTR [rsp+0x74],ebx
   14003ed06:	mov    r8d,ebx
   14003ed09:	mov    DWORD PTR [rsp+0x70],ebx
   14003ed0d:	jmp    0x14003efce
   14003ed12:	mov    r14d,ebx
   14003ed15:	lea    rdx,[rsp+0x64]
   14003ed1a:	mov    r13d,r11d
   14003ed1d:	data16 xchg ax,ax
   14003ed20:	test   r13d,r13d
   14003ed23:	lea    eax,[r14+r14*1]
   14003ed27:	mov    edi,r13d
   14003ed2a:	movsxd rcx,eax
   14003ed2d:	jle    0x14003eda0
   14003ed2f:	mov    r12d,r14d
   14003ed32:	lea    r10,[rsp+rcx*1+0x70]
   14003ed37:	lea    r11,[r15+0x8]
   14003ed3b:	and    r12d,0x1
   14003ed3f:	nop
   14003ed40:	movzx  ecx,WORD PTR [r10]
   14003ed44:	movzx  eax,WORD PTR [r11]
   14003ed48:	imul   ecx,eax
   14003ed4b:	test   r12d,r12d
   14003ed4e:	je     0x14003ed6d
   14003ed50:	mov    eax,DWORD PTR [rdx-0x4]
   14003ed53:	mov    r8d,ebx
   14003ed56:	lea    r9d,[rax+rcx*1]
   14003ed5a:	cmp    r9d,eax
   14003ed5d:	jb     0x14003ed64
   14003ed5f:	cmp    r9d,ecx
   14003ed62:	jae    0x14003ed67
   14003ed64:	mov    r8d,esi
   14003ed67:	mov    DWORD PTR [rdx-0x4],r9d
   14003ed6b:	jmp    0x14003ed88
   14003ed6d:	mov    eax,DWORD PTR [rdx-0x4]
   14003ed70:	mov    r8d,ebx
   14003ed73:	lea    r9d,[rax+rcx*1]
   14003ed77:	cmp    r9d,eax
   14003ed7a:	jb     0x14003ed81
   14003ed7c:	cmp    r9d,ecx
   14003ed7f:	jae    0x14003ed84
   14003ed81:	mov    r8d,esi
   14003ed84:	mov    DWORD PTR [rdx-0x4],r9d
   14003ed88:	test   r8d,r8d
   14003ed8b:	je     0x14003ed91
   14003ed8d:	add    WORD PTR [rdx],0x1
   14003ed91:	sub    edi,0x1
   14003ed94:	add    r10,0x2
   14003ed98:	sub    r11,0x2
   14003ed9c:	test   edi,edi
   14003ed9e:	jg     0x14003ed40
   14003eda0:	sub    r13d,0x1
   14003eda4:	add    rdx,0x2
   14003eda8:	add    r14d,0x1
   14003edac:	test   r13d,r13d
   14003edaf:	jg     0x14003ed20
   14003edb5:	add    bp,0xc002
   14003edba:	test   bp,bp
   14003edbd:	jle    0x14003ee78
   14003edc3:	mov    r9d,DWORD PTR [rsp+0x68]
   14003edc8:	mov    edx,DWORD PTR [rsp+0x64]
   14003edcc:	mov    r8d,DWORD PTR [rsp+0x60]
   14003edd1:	bt     r9d,0x1f
   14003edd6:	jb     0x14003ee0a
   14003edd8:	mov    ecx,edx
   14003edda:	mov    eax,r8d
   14003eddd:	add    r9d,r9d
   14003ede0:	add    edx,edx
   14003ede2:	shr    eax,0x1f
   14003ede5:	shr    ecx,0x1f
   14003ede8:	add    r8d,r8d
   14003edeb:	or     edx,eax
   14003eded:	or     r9d,ecx
   14003edf0:	add    bp,0xffff
   14003edf5:	mov    DWORD PTR [rsp+0x64],edx
   14003edf9:	mov    DWORD PTR [rsp+0x68],r9d
   14003edfe:	test   bp,bp
   14003ee01:	mov    DWORD PTR [rsp+0x60],r8d
   14003ee06:	jg     0x14003edd1
   14003ee08:	jmp    0x14003ee86
   14003ee0a:	test   bp,bp
   14003ee0d:	jle    0x14003ee86
   14003ee0f:	movzx  eax,WORD PTR [rsp+0x60]
   14003ee14:	cmp    ax,0x8000
   14003ee18:	ja     0x14003ee2e
   14003ee1a:	and    r8d,0x1ffff
   14003ee21:	cmp    r8d,0x18000
   14003ee28:	jne    0x14003ef29
   14003ee2e:	mov    eax,DWORD PTR [rsp+0x62]
   14003ee32:	cmp    eax,0xffffffff
   14003ee35:	jne    0x14003ef1e
   14003ee3b:	mov    eax,DWORD PTR [rsp+0x66]
   14003ee3f:	mov    DWORD PTR [rsp+0x62],ebx
   14003ee43:	cmp    eax,0xffffffff
   14003ee46:	jne    0x14003ef0c
   14003ee4c:	movzx  eax,WORD PTR [rsp+0x6a]
   14003ee51:	mov    DWORD PTR [rsp+0x66],ebx
   14003ee55:	cmp    ax,0xffff
   14003ee59:	jne    0x14003eef8
   14003ee5f:	mov    edx,DWORD PTR [rsp+0x64]
   14003ee63:	mov    WORD PTR [rsp+0x6a],0x8000
   14003ee6a:	mov    r9d,DWORD PTR [rsp+0x68]
   14003ee6f:	add    bp,0x1
   14003ee73:	jmp    0x14003ef29
   14003ee78:	mov    r9d,DWORD PTR [rsp+0x68]
   14003ee7d:	mov    edx,DWORD PTR [rsp+0x64]
   14003ee81:	mov    r8d,DWORD PTR [rsp+0x60]
   14003ee86:	add    bp,0xffff
   14003ee8b:	jns    0x14003ee0f
   14003ee8d:	movzx  eax,bp
   14003ee90:	mov    esi,ebx
   14003ee92:	neg    ax
   14003ee95:	movzx  r10d,ax
   14003ee99:	add    bp,r10w
   14003ee9d:	data16 xchg ax,ax
   14003eea0:	test   BYTE PTR [rsp+0x60],0x1
   14003eea5:	je     0x14003eeaa
   14003eea7:	add    esi,0x1
   14003eeaa:	mov    ecx,edx
   14003eeac:	mov    eax,r9d
   14003eeaf:	shr    r8d,1
   14003eeb2:	shl    ecx,0x1f
   14003eeb5:	shr    edx,1
   14003eeb7:	shl    eax,0x1f
   14003eeba:	or     r8d,ecx
   14003eebd:	shr    r9d,1
   14003eec0:	or     edx,eax
   14003eec2:	sub    r10,0x1
   14003eec6:	mov    DWORD PTR [rsp+0x60],r8d
   14003eecb:	jne    0x14003eea0
   14003eecd:	test   esi,esi
   14003eecf:	mov    DWORD PTR [rsp+0x64],edx
   14003eed3:	mov    DWORD PTR [rsp+0x68],r9d
   14003eed8:	lea    esi,[r10+0x1]
   14003eedc:	je     0x14003ee0f
   14003eee2:	mov    ax,r8w
   14003eee6:	or     ax,si
   14003eee9:	mov    WORD PTR [rsp+0x60],ax
   14003eeee:	mov    r8d,DWORD PTR [rsp+0x60]
   14003eef3:	jmp    0x14003ee14
   14003eef8:	mov    edx,DWORD PTR [rsp+0x64]
   14003eefc:	add    ax,0x1
   14003ef00:	mov    WORD PTR [rsp+0x6a],ax
   14003ef05:	mov    r9d,DWORD PTR [rsp+0x68]
   14003ef0a:	jmp    0x14003ef29
   14003ef0c:	add    eax,0x1
   14003ef0f:	mov    DWORD PTR [rsp+0x66],eax
   14003ef13:	mov    r9d,DWORD PTR [rsp+0x68]
   14003ef18:	mov    edx,DWORD PTR [rsp+0x64]
   14003ef1c:	jmp    0x14003ef29
   14003ef1e:	add    eax,0x1
   14003ef21:	mov    DWORD PTR [rsp+0x62],eax
   14003ef25:	mov    edx,DWORD PTR [rsp+0x64]
   14003ef29:	cmp    bp,0x7fff
   14003ef2e:	jb     0x14003ef6a
   14003ef30:	cmp    WORD PTR [rsp+0x32],bx
   14003ef35:	mov    r10d,DWORD PTR [rsp+0x40]
   14003ef3a:	mov    rdx,QWORD PTR [rsp+0x38]
   14003ef3f:	mov    edi,0x7fff8000
   14003ef44:	mov    r12d,0xffff8000
   14003ef4a:	mov    r9d,ebx
   14003ef4d:	mov    eax,edi
   14003ef4f:	mov    DWORD PTR [rsp+0x74],ebx
   14003ef53:	mov    r8d,ebx
   14003ef56:	cmovne eax,r12d
   14003ef5a:	mov    DWORD PTR [rsp+0x70],ebx
   14003ef5e:	mov    r11d,0x5
   14003ef64:	mov    DWORD PTR [rsp+0x78],eax
   14003ef68:	jmp    0x14003efce
   14003ef6a:	movzx  eax,WORD PTR [rsp+0x62]
   14003ef6f:	or     bp,WORD PTR [rsp+0x32]
   14003ef74:	mov    r10d,DWORD PTR [rsp+0x40]
   14003ef79:	mov    DWORD PTR [rsp+0x72],edx
   14003ef7d:	mov    rdx,QWORD PTR [rsp+0x38]
   14003ef82:	mov    WORD PTR [rsp+0x70],ax
   14003ef87:	mov    r8d,DWORD PTR [rsp+0x70]
   14003ef8c:	mov    DWORD PTR [rsp+0x76],r9d
   14003ef91:	mov    r9d,DWORD PTR [rsp+0x74]
   14003ef96:	mov    WORD PTR [rsp+0x7a],bp
   14003ef9b:	mov    edi,0x7fff8000
   14003efa0:	mov    r11d,0x5
   14003efa6:	mov    r12d,0xffff8000
   14003efac:	jmp    0x14003efce
   14003efae:	test   dx,dx
   14003efb1:	mov    rdx,QWORD PTR [rsp+0x38]
   14003efb6:	mov    eax,edi
   14003efb8:	cmovne eax,r12d
   14003efbc:	mov    r9d,ebx
   14003efbf:	mov    DWORD PTR [rsp+0x74],ebx
   14003efc3:	mov    r8d,ebx
   14003efc6:	mov    DWORD PTR [rsp+0x70],ebx
   14003efca:	mov    DWORD PTR [rsp+0x78],eax
   14003efce:	test   r10d,r10d
   14003efd1:	jne    0x14003ebd0
   14003efd7:	mov    ecx,DWORD PTR [rsp+0x34]
   14003efdb:	jmp    0x14003efe7
   14003efdd:	mov    r9d,DWORD PTR [rsp+0x74]
   14003efe2:	mov    r8d,DWORD PTR [rsp+0x70]
   14003efe7:	mov    eax,DWORD PTR [rsp+0x78]
   14003efeb:	shr    eax,0x10
   14003efee:	cmp    ax,0x3fff
   14003eff2:	jb     0x14003f357
   14003eff8:	add    cx,0x1
   14003effc:	mov    r14d,ebx
   14003efff:	mov    DWORD PTR [rsp+0x60],ebx
   14003f003:	mov    DWORD PTR [rsp+0x34],ecx
   14003f007:	movzx  ecx,WORD PTR [rsp+0x8a]
   14003f00f:	mov    DWORD PTR [rsp+0x64],ebx
   14003f013:	movzx  r15d,cx
   14003f017:	and    cx,0x7fff
   14003f01c:	mov    DWORD PTR [rsp+0x68],ebx
   14003f020:	xor    r15w,ax
   14003f024:	and    ax,0x7fff
   14003f028:	and    r15w,0x8000
   14003f02e:	cmp    ax,0x7fff
   14003f032:	lea    ebp,[rax+rcx*1]
   14003f035:	jae    0x14003f345
   14003f03b:	cmp    cx,0x7fff
   14003f040:	jae    0x14003f345
   14003f046:	cmp    bp,0xbffd
   14003f04b:	ja     0x14003f345
   14003f051:	cmp    bp,0x3fbf
   14003f056:	ja     0x14003f067
   14003f058:	mov    DWORD PTR [rsp+0x78],ebx
   14003f05c:	mov    r9d,ebx
   14003f05f:	mov    r8d,ebx
   14003f062:	jmp    0x14003f357
   14003f067:	test   ax,ax
   14003f06a:	jne    0x14003f090
   14003f06c:	mov    eax,DWORD PTR [rsp+0x78]
   14003f070:	add    bp,0x1
   14003f074:	btr    eax,0x1f
   14003f078:	test   eax,eax
   14003f07a:	jne    0x14003f090
   14003f07c:	test   r9d,r9d
   14003f07f:	jne    0x14003f090
   14003f081:	test   r8d,r8d
   14003f084:	jne    0x14003f090
   14003f086:	mov    WORD PTR [rsp+0x7a],bx
   14003f08b:	jmp    0x14003f357
   14003f090:	test   cx,cx
   14003f093:	jne    0x14003f0c9
   14003f095:	mov    eax,DWORD PTR [rsp+0x88]
   14003f09c:	add    bp,0x1
   14003f0a0:	btr    eax,0x1f
   14003f0a4:	test   eax,eax
   14003f0a6:	jne    0x14003f0c9
   14003f0a8:	cmp    DWORD PTR [rsp+0x84],ebx
   14003f0af:	jne    0x14003f0c9
   14003f0b1:	cmp    DWORD PTR [rsp+0x80],ebx
   14003f0b8:	jne    0x14003f0c9
   14003f0ba:	mov    DWORD PTR [rsp+0x78],ebx
   14003f0be:	mov    r9d,ebx
   14003f0c1:	mov    r8d,ebx
   14003f0c4:	jmp    0x14003f357
   14003f0c9:	mov    r13d,ebx
   14003f0cc:	lea    rdx,[rsp+0x64]
   14003f0d1:	test   r11d,r11d
   14003f0d4:	lea    eax,[r13+r13*1+0x0]
   14003f0d9:	mov    edi,r11d
   14003f0dc:	movsxd rcx,eax
   14003f0df:	jle    0x14003f165
   14003f0e5:	mov    r12d,r13d
   14003f0e8:	lea    r10,[rsp+0x88]
   14003f0f0:	lea    r11,[rsp+rcx*1+0x70]
   14003f0f5:	and    r12d,0x1
   14003f0f9:	data16 xchg ax,ax
   14003f0fc:	data16 data16 xchg ax,ax
   14003f100:	movzx  ecx,WORD PTR [r10]
   14003f104:	movzx  eax,WORD PTR [r11]
   14003f108:	imul   ecx,eax
   14003f10b:	test   r12d,r12d
   14003f10e:	je     0x14003f12d
   14003f110:	mov    eax,DWORD PTR [rdx-0x4]
   14003f113:	mov    r8d,ebx
   14003f116:	lea    r9d,[rax+rcx*1]
   14003f11a:	cmp    r9d,eax
   14003f11d:	jb     0x14003f124
   14003f11f:	cmp    r9d,ecx
   14003f122:	jae    0x14003f127
   14003f124:	mov    r8d,esi
   14003f127:	mov    DWORD PTR [rdx-0x4],r9d
   14003f12b:	jmp    0x14003f148
   14003f12d:	mov    eax,DWORD PTR [rdx-0x4]
   14003f130:	mov    r8d,ebx
   14003f133:	lea    r9d,[rax+rcx*1]
   14003f137:	cmp    r9d,eax
   14003f13a:	jb     0x14003f141
   14003f13c:	cmp    r9d,ecx
   14003f13f:	jae    0x14003f144
   14003f141:	mov    r8d,esi
   14003f144:	mov    DWORD PTR [rdx-0x4],r9d
   14003f148:	test   r8d,r8d
   14003f14b:	je     0x14003f151
   14003f14d:	add    WORD PTR [rdx],0x1
   14003f151:	sub    edi,0x1
   14003f154:	add    r11,0x2
   14003f158:	sub    r10,0x2
   14003f15c:	test   edi,edi
   14003f15e:	jg     0x14003f100
   14003f160:	mov    r11d,DWORD PTR [rsp+0x48]
   14003f165:	sub    r11d,0x1
   14003f169:	add    rdx,0x2
   14003f16d:	add    r13d,0x1
   14003f171:	test   r11d,r11d
   14003f174:	mov    DWORD PTR [rsp+0x48],r11d
   14003f179:	jg     0x14003f0d1
   14003f17f:	add    bp,0xc002
   14003f184:	test   bp,bp
   14003f187:	jle    0x14003f24e
   14003f18d:	mov    r9d,DWORD PTR [rsp+0x68]
   14003f192:	mov    edx,DWORD PTR [rsp+0x64]
   14003f196:	mov    r8d,DWORD PTR [rsp+0x60]
   14003f19b:	xchg   ax,ax
   14003f19d:	data16 xchg ax,ax
   14003f1a0:	bt     r9d,0x1f
   14003f1a5:	jb     0x14003f1dc
   14003f1a7:	mov    ecx,edx
   14003f1a9:	mov    eax,r8d
   14003f1ac:	add    r9d,r9d
   14003f1af:	add    edx,edx
   14003f1b1:	shr    eax,0x1f
   14003f1b4:	shr    ecx,0x1f
   14003f1b7:	add    r8d,r8d
   14003f1ba:	or     edx,eax
   14003f1bc:	or     r9d,ecx
   14003f1bf:	add    bp,0xffff
   14003f1c4:	mov    DWORD PTR [rsp+0x64],edx
   14003f1c8:	mov    DWORD PTR [rsp+0x68],r9d
   14003f1cd:	test   bp,bp
   14003f1d0:	mov    DWORD PTR [rsp+0x60],r8d
   14003f1d5:	jg     0x14003f1a0
   14003f1d7:	jmp    0x14003f25c
   14003f1dc:	test   bp,bp
   14003f1df:	jle    0x14003f25c
   14003f1e5:	movzx  eax,WORD PTR [rsp+0x60]
   14003f1ea:	cmp    ax,0x8000
   14003f1ee:	ja     0x14003f204
   14003f1f0:	and    r8d,0x1ffff
   14003f1f7:	cmp    r8d,0x18000
   14003f1fe:	jne    0x14003f2f9
   14003f204:	mov    eax,DWORD PTR [rsp+0x62]
   14003f208:	cmp    eax,0xffffffff
   14003f20b:	jne    0x14003f2ee
   14003f211:	mov    eax,DWORD PTR [rsp+0x66]
   14003f215:	mov    DWORD PTR [rsp+0x62],ebx
   14003f219:	cmp    eax,0xffffffff
   14003f21c:	jne    0x14003f2dc
   14003f222:	movzx  eax,WORD PTR [rsp+0x6a]
   14003f227:	mov    DWORD PTR [rsp+0x66],ebx
   14003f22b:	cmp    ax,0xffff
   14003f22f:	jne    0x14003f2c8
   14003f235:	mov    edx,DWORD PTR [rsp+0x64]
   14003f239:	mov    WORD PTR [rsp+0x6a],0x8000
   14003f240:	mov    r9d,DWORD PTR [rsp+0x68]
   14003f245:	add    bp,0x1
   14003f249:	jmp    0x14003f2f9
   14003f24e:	mov    r9d,DWORD PTR [rsp+0x68]
   14003f253:	mov    edx,DWORD PTR [rsp+0x64]
   14003f257:	mov    r8d,DWORD PTR [rsp+0x60]
   14003f25c:	add    bp,0xffff
   14003f261:	jns    0x14003f1e5
   14003f263:	movzx  eax,bp
   14003f266:	neg    ax
   14003f269:	movzx  r10d,ax
   14003f26d:	add    bp,r10w
   14003f271:	test   BYTE PTR [rsp+0x60],0x1
   14003f276:	je     0x14003f27c
   14003f278:	add    r14d,0x1
   14003f27c:	mov    ecx,edx
   14003f27e:	mov    eax,r9d
   14003f281:	shr    r8d,1
   14003f284:	shl    ecx,0x1f
   14003f287:	shr    edx,1
   14003f289:	shl    eax,0x1f
   14003f28c:	or     r8d,ecx
   14003f28f:	shr    r9d,1
   14003f292:	or     edx,eax
   14003f294:	sub    r10,0x1
   14003f298:	mov    DWORD PTR [rsp+0x60],r8d
   14003f29d:	jne    0x14003f271
   14003f29f:	test   r14d,r14d
   14003f2a2:	mov    DWORD PTR [rsp+0x64],edx
   14003f2a6:	mov    DWORD PTR [rsp+0x68],r9d
   14003f2ab:	je     0x14003f1e5
   14003f2b1:	mov    ax,r8w
   14003f2b5:	or     ax,0x1
   14003f2b9:	mov    WORD PTR [rsp+0x60],ax
   14003f2be:	mov    r8d,DWORD PTR [rsp+0x60]
   14003f2c3:	jmp    0x14003f1ea
   14003f2c8:	mov    edx,DWORD PTR [rsp+0x64]
   14003f2cc:	add    ax,0x1
   14003f2d0:	mov    WORD PTR [rsp+0x6a],ax
   14003f2d5:	mov    r9d,DWORD PTR [rsp+0x68]
   14003f2da:	jmp    0x14003f2f9
   14003f2dc:	add    eax,0x1
   14003f2df:	mov    DWORD PTR [rsp+0x66],eax
   14003f2e3:	mov    r9d,DWORD PTR [rsp+0x68]
   14003f2e8:	mov    edx,DWORD PTR [rsp+0x64]
   14003f2ec:	jmp    0x14003f2f9
   14003f2ee:	add    eax,0x1
   14003f2f1:	mov    DWORD PTR [rsp+0x62],eax
   14003f2f5:	mov    edx,DWORD PTR [rsp+0x64]
   14003f2f9:	cmp    bp,0x7fff
   14003f2fe:	jb     0x14003f31d
   14003f300:	test   r15w,r15w
   14003f304:	mov    eax,0x7fff8000
   14003f309:	mov    ecx,0xffff8000
   14003f30e:	cmovne eax,ecx
   14003f311:	mov    r9d,ebx
   14003f314:	mov    r8d,ebx
   14003f317:	mov    DWORD PTR [rsp+0x78],eax
   14003f31b:	jmp    0x14003f357
   14003f31d:	movzx  eax,WORD PTR [rsp+0x62]
   14003f322:	mov    DWORD PTR [rsp+0x72],edx
   14003f326:	or     bp,r15w
   14003f32a:	mov    DWORD PTR [rsp+0x76],r9d
   14003f32f:	mov    r9d,DWORD PTR [rsp+0x74]
   14003f334:	mov    WORD PTR [rsp+0x70],ax
   14003f339:	mov    r8d,DWORD PTR [rsp+0x70]
   14003f33e:	mov    WORD PTR [rsp+0x7a],bp
   14003f343:	jmp    0x14003f357
   14003f345:	test   r15w,r15w
   14003f349:	mov    r9d,ebx
   14003f34c:	mov    r8d,ebx
   14003f34f:	cmovne edi,r12d
   14003f353:	mov    DWORD PTR [rsp+0x78],edi
   14003f357:	test   BYTE PTR [rsp+0x50],0x1
   14003f35c:	mov    r13,QWORD PTR [rsp+0x58]
   14003f361:	mov    eax,DWORD PTR [rsp+0x34]
   14003f365:	mov    r15,QWORD PTR [rsp+0xb0]
   14003f36d:	mov    r14,QWORD PTR [rsp+0xb8]
   14003f375:	mov    WORD PTR [r13+0x0],ax
   14003f37a:	je     0x14003f3b7
   14003f37c:	mov    edi,DWORD PTR [rsp+0x44]
   14003f380:	cwde   
   14003f381:	add    edi,eax
   14003f383:	test   edi,edi
   14003f385:	jg     0x14003f3bb
   14003f387:	cmp    WORD PTR [rsp+0x30],0x8000
   14003f38e:	mov    eax,0x20
   14003f393:	mov    ecx,0x2d
   14003f398:	cmove  eax,ecx
   14003f39b:	mov    WORD PTR [r13+0x0],bx
   14003f3a0:	mov    BYTE PTR [r13+0x3],0x1
   14003f3a5:	mov    BYTE PTR [r13+0x4],0x30
   14003f3aa:	mov    BYTE PTR [r13+0x5],bl
   14003f3ae:	mov    BYTE PTR [r13+0x2],al
   14003f3b2:	jmp    0x14003f65c
   14003f3b7:	mov    edi,DWORD PTR [rsp+0x44]
   14003f3bb:	mov    r10d,DWORD PTR [rsp+0x78]
   14003f3c0:	mov    ecx,r9d
   14003f3c3:	mov    eax,0x15
   14003f3c8:	cmp    edi,eax
   14003f3ca:	mov    WORD PTR [rsp+0x7a],bx
   14003f3cf:	cmovg  edi,eax
   14003f3d2:	add    r9d,r9d
   14003f3d5:	shr    ecx,0x1f
   14003f3d8:	mov    eax,r8d
   14003f3db:	add    r8d,r8d
   14003f3de:	shr    r10d,0x10
   14003f3e2:	shr    eax,0x1f
   14003f3e5:	or     r9d,eax
   14003f3e8:	mov    eax,DWORD PTR [rsp+0x78]
   14003f3ec:	lea    edx,[rax+rax*1]
   14003f3ef:	mov    eax,r8d
   14003f3f2:	add    r8d,r8d
   14003f3f5:	or     edx,ecx
   14003f3f7:	mov    ecx,r9d
   14003f3fa:	add    r9d,r9d
   14003f3fd:	shr    eax,0x1f
   14003f400:	shr    ecx,0x1f
   14003f403:	add    edx,edx
   14003f405:	or     r9d,eax
   14003f408:	or     edx,ecx
   14003f40a:	mov    eax,r8d
   14003f40d:	mov    ecx,r9d
   14003f410:	shr    eax,0x1f
   14003f413:	add    r9d,r9d
   14003f416:	or     r9d,eax
   14003f419:	shr    ecx,0x1f
   14003f41c:	add    edx,edx
   14003f41e:	or     edx,ecx
   14003f420:	mov    ecx,r9d
   14003f423:	add    r9d,r9d
   14003f426:	shr    ecx,0x1f
   14003f429:	add    edx,edx
   14003f42b:	add    r8d,r8d
   14003f42e:	or     edx,ecx
   14003f430:	mov    eax,r8d
   14003f433:	add    r8d,r8d
   14003f436:	shr    eax,0x1f
   14003f439:	add    edx,edx
   14003f43b:	or     r9d,eax
   14003f43e:	mov    eax,r8d
   14003f441:	add    r8d,r8d
   14003f444:	mov    ecx,r9d
   14003f447:	shr    eax,0x1f
   14003f44a:	add    r9d,r9d
   14003f44d:	or     r9d,eax
   14003f450:	shr    ecx,0x1f
   14003f453:	mov    eax,r8d
   14003f456:	or     edx,ecx
   14003f458:	mov    ecx,r9d
   14003f45b:	shr    eax,0x1f
   14003f45e:	add    r9d,r9d
   14003f461:	shr    ecx,0x1f
   14003f464:	add    r8d,r8d
   14003f467:	or     r9d,eax
   14003f46a:	add    edx,edx
   14003f46c:	mov    eax,r8d
   14003f46f:	or     edx,ecx
   14003f471:	mov    ecx,r9d
   14003f474:	shr    eax,0x1f
   14003f477:	add    r9d,r9d
   14003f47a:	shr    ecx,0x1f
   14003f47d:	add    r8d,r8d
   14003f480:	or     r9d,eax
   14003f483:	add    edx,edx
   14003f485:	mov    eax,r8d
   14003f488:	or     edx,ecx
   14003f48a:	mov    ecx,r9d
   14003f48d:	shr    eax,0x1f
   14003f490:	add    r9d,r9d
   14003f493:	add    r8d,r8d
   14003f496:	lea    r11d,[rdx+rdx*1]
   14003f49a:	or     r9d,eax
   14003f49d:	shr    ecx,0x1f
   14003f4a0:	mov    DWORD PTR [rsp+0x70],r8d
   14003f4a5:	or     r11d,ecx
   14003f4a8:	mov    DWORD PTR [rsp+0x74],r9d
   14003f4ad:	sub    r10d,0x3ffe
   14003f4b4:	mov    DWORD PTR [rsp+0x78],r11d
   14003f4b9:	jns    0x14003f501
   14003f4bb:	neg    r10d
   14003f4be:	movzx  edx,r10b
   14003f4c2:	test   edx,edx
   14003f4c4:	jle    0x14003f501
   14003f4c6:	data16 data16 xchg ax,ax
   14003f4ca:	data16 xchg ax,ax
   14003f4cd:	data16 xchg ax,ax
   14003f4d0:	mov    ecx,r9d
   14003f4d3:	mov    eax,r11d
   14003f4d6:	shr    r8d,1
   14003f4d9:	shr    r9d,1
   14003f4dc:	shl    eax,0x1f
   14003f4df:	shl    ecx,0x1f
   14003f4e2:	sub    edx,0x1
   14003f4e5:	shr    r11d,1
   14003f4e8:	or     r9d,eax
   14003f4eb:	or     r8d,ecx
   14003f4ee:	test   edx,edx
   14003f4f0:	jg     0x14003f4d0
   14003f4f2:	mov    DWORD PTR [rsp+0x74],r9d
   14003f4f7:	mov    DWORD PTR [rsp+0x70],r8d
   14003f4fc:	mov    DWORD PTR [rsp+0x78],r11d
   14003f501:	lea    r12d,[rdi+0x1]
   14003f505:	lea    rbp,[r13+0x4]
   14003f509:	test   r12d,r12d
   14003f50c:	mov    r10,rbp
   14003f50f:	jle    0x14003f60c
   14003f515:	data16 data16 xchg ax,ax
   14003f519:	data16 xchg ax,ax
   14003f51c:	data16 data16 xchg ax,ax
   14003f520:	lea    rcx,[rsp+0x70]
   14003f525:	lea    rdx,[rsp+0x90]
   14003f52d:	mov    rax,QWORD PTR [rcx]
   14003f530:	mov    QWORD PTR [rdx],rax
   14003f533:	mov    eax,DWORD PTR [rcx+0x8]
   14003f536:	mov    ecx,r9d
   14003f539:	mov    DWORD PTR [rdx+0x8],eax
   14003f53c:	mov    eax,r8d
   14003f53f:	lea    edx,[r8+r8*1]
   14003f543:	shr    eax,0x1f
   14003f546:	shr    ecx,0x1f
   14003f549:	lea    r8d,[r9+r9*1]
   14003f54d:	or     r8d,eax
   14003f550:	lea    r9d,[r11+r11*1]
   14003f554:	mov    eax,edx
   14003f556:	or     r9d,ecx
   14003f559:	mov    ecx,r8d
   14003f55c:	shr    eax,0x1f
   14003f55f:	add    r8d,r8d
   14003f562:	add    edx,edx
   14003f564:	shr    ecx,0x1f
   14003f567:	or     r8d,eax
   14003f56a:	mov    rax,QWORD PTR [rsp+0x90]
   14003f572:	lea    r11d,[r9+r9*1]
   14003f576:	lea    edi,[rax+rdx*1]
   14003f579:	or     r11d,ecx
   14003f57c:	cmp    edi,edx
   14003f57e:	jb     0x14003f584
   14003f580:	cmp    edi,eax
   14003f582:	jae    0x14003f5a1
   14003f584:	lea    ecx,[r8+0x1]
   14003f588:	mov    edx,ebx
   14003f58a:	cmp    ecx,r8d
   14003f58d:	jb     0x14003f594
   14003f58f:	cmp    ecx,0x1
   14003f592:	jae    0x14003f596
   14003f594:	mov    edx,esi
   14003f596:	test   edx,edx
   14003f598:	mov    r8d,ecx
   14003f59b:	je     0x14003f5a1
   14003f59d:	add    r11d,0x1
   14003f5a1:	shr    rax,0x20
   14003f5a5:	lea    r9d,[r8+rax*1]
   14003f5a9:	cmp    r9d,r8d
   14003f5ac:	jb     0x14003f5b3
   14003f5ae:	cmp    r9d,eax
   14003f5b1:	jae    0x14003f5b7
   14003f5b3:	add    r11d,0x1
   14003f5b7:	add    r11d,DWORD PTR [rsp+0x98]
   14003f5bf:	mov    ecx,r9d
   14003f5c2:	add    r9d,r9d
   14003f5c5:	shr    ecx,0x1f
   14003f5c8:	mov    eax,edi
   14003f5ca:	lea    r8d,[rdi+rdi*1]
   14003f5ce:	shr    eax,0x1f
   14003f5d1:	sub    r12d,0x1
   14003f5d5:	add    r10,0x1
   14003f5d9:	or     r9d,eax
   14003f5dc:	lea    eax,[r11+r11*1]
   14003f5e0:	mov    DWORD PTR [rsp+0x70],r8d
   14003f5e5:	or     eax,ecx
   14003f5e7:	mov    DWORD PTR [rsp+0x74],r9d
   14003f5ec:	mov    DWORD PTR [rsp+0x78],eax
   14003f5f0:	shr    eax,0x18
   14003f5f3:	mov    BYTE PTR [rsp+0x7b],bl
   14003f5f7:	add    al,0x30
   14003f5f9:	test   r12d,r12d
   14003f5fc:	mov    BYTE PTR [r10-0x1],al
   14003f600:	jle    0x14003f60c
   14003f602:	mov    r11d,DWORD PTR [rsp+0x78]
   14003f607:	jmp    0x14003f520
   14003f60c:	movzx  eax,BYTE PTR [r10-0x1]
   14003f611:	sub    r10,0x2
   14003f615:	cmp    al,0x35
   14003f617:	jl     0x14003f698
   14003f61d:	cmp    r10,rbp
   14003f620:	jb     0x14003f635
   14003f622:	cmp    BYTE PTR [r10],0x39
   14003f626:	jne    0x14003f635
   14003f628:	mov    BYTE PTR [r10],0x30
   14003f62c:	sub    r10,0x1
   14003f630:	cmp    r10,rbp
   14003f633:	jae    0x14003f622
   14003f635:	cmp    r10,rbp
   14003f638:	jae    0x14003f644
   14003f63a:	add    r10,0x1
   14003f63e:	add    WORD PTR [r13+0x0],0x1
   14003f644:	add    BYTE PTR [r10],0x1
   14003f648:	sub    r10b,r13b
   14003f64b:	sub    r10b,0x3
   14003f64f:	movsx  rcx,r10b
   14003f653:	mov    BYTE PTR [r13+0x3],r10b
   14003f657:	mov    BYTE PTR [rcx+r13*1+0x4],bl
   14003f65c:	mov    r13,QWORD PTR [rsp+0xc0]
   14003f664:	mov    r12,QWORD PTR [rsp+0xc8]
   14003f66c:	mov    rbp,QWORD PTR [rsp+0xd0]
   14003f674:	mov    rbx,QWORD PTR [rsp+0xf8]
   14003f67c:	mov    eax,esi
   14003f67e:	mov    rcx,QWORD PTR [rsp+0xa0]
   14003f686:	xor    rcx,rsp
   14003f689:	call   0x140029b40
   14003f68e:	add    rsp,0xd8
   14003f695:	pop    rdi
   14003f696:	pop    rsi
   14003f697:	ret    
   14003f698:	cmp    r10,rbp
   14003f69b:	jb     0x14003f6af
   14003f69d:	data16 xchg ax,ax
   14003f6a0:	cmp    BYTE PTR [r10],0x30
   14003f6a4:	jne    0x14003f6af
   14003f6a6:	sub    r10,0x1
   14003f6aa:	cmp    r10,rbp
   14003f6ad:	jae    0x14003f6a0
   14003f6af:	cmp    r10,rbp
   14003f6b2:	jae    0x14003f648
   14003f6b4:	cmp    WORD PTR [rsp+0x30],0x8000
   14003f6bb:	mov    eax,0x20
   14003f6c0:	mov    ecx,0x2d
   14003f6c5:	cmove  eax,ecx
   14003f6c8:	mov    WORD PTR [r13+0x0],bx
   14003f6cd:	mov    BYTE PTR [r13+0x3],0x1
   14003f6d2:	mov    BYTE PTR [rbp+0x0],0x30
   14003f6d6:	mov    BYTE PTR [r13+0x5],bl
   14003f6da:	mov    BYTE PTR [r13+0x2],al
   14003f6de:	jmp    0x14003f65c
   14003f6e3:	int3   
   14003f6e4:	int3   
   14003f6e5:	int3   
   14003f6e6:	int3   
   14003f6e7:	int3   
   14003f6e8:	int3   
   14003f6e9:	int3   
   14003f6ea:	int3   
   14003f6eb:	int3   
   14003f6ec:	int3   
   14003f6ed:	int3   
   14003f6ee:	int3   
   14003f6ef:	int3   
   14003f6f0:	sub    rsp,0x48
   14003f6f4:	xor    eax,eax
   14003f6f6:	lea    rcx,[rip+0xa9eb]        # 0x14004a0e8
   14003f6fd:	xor    r9d,r9d
   14003f700:	mov    QWORD PTR [rsp+0x30],rax
   14003f705:	mov    DWORD PTR [rsp+0x28],eax
   14003f709:	lea    r8d,[rax+0x3]
   14003f70d:	mov    edx,0x40000000
   14003f712:	mov    DWORD PTR [rsp+0x20],0x3
   14003f71a:	call   QWORD PTR [rip+0x3c30]        # 0x140043350
   14003f720:	mov    QWORD PTR [rip+0x1cd89],rax        # 0x14005c4b0
   14003f727:	add    rsp,0x48
   14003f72b:	ret    
   14003f72c:	int3   
   14003f72d:	int3   
   14003f72e:	int3   
   14003f72f:	int3   
   14003f730:	sub    rsp,0x28
   14003f734:	mov    rcx,QWORD PTR [rip+0x1cd75]        # 0x14005c4b0
   14003f73b:	cmp    rcx,0xffffffffffffffff
   14003f73f:	je     0x14003f74d
   14003f741:	cmp    rcx,0xfffffffffffffffe
   14003f745:	je     0x14003f74d
   14003f747:	call   QWORD PTR [rip+0x3e3b]        # 0x140043588
   14003f74d:	mov    rcx,QWORD PTR [rip+0x1cd54]        # 0x14005c4a8
   14003f754:	cmp    rcx,0xffffffffffffffff
   14003f758:	je     0x14003f766
   14003f75a:	cmp    rcx,0xfffffffffffffffe
   14003f75e:	je     0x14003f766
   14003f760:	call   QWORD PTR [rip+0x3e22]        # 0x140043588
   14003f766:	add    rsp,0x28
   14003f76a:	ret    
   14003f76b:	int3   
   14003f76c:	int3   
   14003f76d:	int3   
   14003f76e:	int3   
   14003f76f:	int3   
   14003f770:	mov    QWORD PTR [rsp+0x8],rbx
   14003f775:	push   rsi
   14003f776:	sub    rsp,0x30
   14003f77a:	or     esi,0xffffffff
   14003f77d:	test   rcx,rcx
   14003f780:	mov    rbx,rcx
   14003f783:	jne    0x14003f7b1
   14003f785:	call   0x14002bca0
   14003f78a:	xor    r9d,r9d
   14003f78d:	xor    r8d,r8d
   14003f790:	xor    edx,edx
   14003f792:	xor    ecx,ecx
   14003f794:	mov    QWORD PTR [rsp+0x20],rbx
   14003f799:	mov    DWORD PTR [rax],0x16
   14003f79f:	call   0x14002e900
   14003f7a4:	or     eax,esi
   14003f7a6:	mov    rbx,QWORD PTR [rsp+0x40]
   14003f7ab:	add    rsp,0x30
   14003f7af:	pop    rsi
   14003f7b0:	ret    
   14003f7b1:	test   BYTE PTR [rcx+0x18],0x83
   14003f7b5:	je     0x14003f7f4
   14003f7b7:	call   0x14003bd80
   14003f7bc:	mov    rcx,rbx
   14003f7bf:	mov    esi,eax
   14003f7c1:	call   0x1400408e0
   14003f7c6:	mov    rcx,rbx
   14003f7c9:	call   0x1400385a0
   14003f7ce:	mov    ecx,eax
   14003f7d0:	call   0x1400407b0
   14003f7d5:	test   eax,eax
   14003f7d7:	jns    0x14003f7de
   14003f7d9:	or     esi,0xffffffff
   14003f7dc:	jmp    0x14003f7f4
   14003f7de:	mov    rcx,QWORD PTR [rbx+0x28]
   14003f7e2:	test   rcx,rcx
   14003f7e5:	je     0x14003f7f4
   14003f7e7:	call   0x14002a380
   14003f7ec:	mov    QWORD PTR [rbx+0x28],0x0
   14003f7f4:	mov    DWORD PTR [rbx+0x18],0x0
   14003f7fb:	mov    rbx,QWORD PTR [rsp+0x40]
   14003f800:	mov    eax,esi
   14003f802:	add    rsp,0x30
   14003f806:	pop    rsi
   14003f807:	ret    
   14003f808:	int3   
   14003f809:	int3   
   14003f80a:	int3   
   14003f80b:	int3   
   14003f80c:	int3   
   14003f80d:	int3   
   14003f80e:	int3   
   14003f80f:	int3   
   14003f810:	mov    QWORD PTR [rsp+0x10],rbx
   14003f815:	mov    QWORD PTR [rsp+0x8],rcx
   14003f81a:	push   rdi
   14003f81b:	sub    rsp,0x30
   14003f81f:	mov    rbx,rcx
   14003f822:	or     edi,0xffffffff
   14003f825:	xor    eax,eax
   14003f827:	test   rcx,rcx
   14003f82a:	setne  al
   14003f82d:	test   eax,eax
   14003f82f:	jne    0x14003f858
   14003f831:	call   0x14002bca0
   14003f836:	mov    DWORD PTR [rax],0x16
   14003f83c:	mov    QWORD PTR [rsp+0x20],0x0
   14003f845:	xor    r9d,r9d
   14003f848:	xor    r8d,r8d
   14003f84b:	xor    edx,edx
   14003f84d:	xor    ecx,ecx
   14003f84f:	call   0x14002e900
   14003f854:	mov    eax,edi
   14003f856:	jmp    0x14003f881
   14003f858:	test   BYTE PTR [rcx+0x18],0x40
   14003f85c:	je     0x14003f867
   14003f85e:	mov    DWORD PTR [rcx+0x18],0x0
   14003f865:	jmp    0x14003f87f
   14003f867:	call   0x140038480
   14003f86c:	nop
   14003f86d:	mov    rcx,rbx
   14003f870:	call   0x14003f770
   14003f875:	mov    edi,eax
   14003f877:	mov    rcx,rbx
   14003f87a:	call   0x140038530
   14003f87f:	mov    eax,edi
   14003f881:	mov    rbx,QWORD PTR [rsp+0x48]
   14003f886:	add    rsp,0x30
   14003f88a:	pop    rdi
   14003f88b:	ret    
   14003f88c:	int3   
   14003f88d:	int3   
   14003f88e:	int3   
   14003f88f:	int3   
   14003f890:	rex push rbp
   14003f892:	sub    rsp,0x30
   14003f896:	mov    rbp,rdx
   14003f899:	mov    rcx,QWORD PTR [rbp+0x40]
   14003f89d:	call   0x140038530
   14003f8a2:	add    rsp,0x30
   14003f8a6:	pop    rbp
   14003f8a7:	ret    
   14003f8a8:	int3   
   14003f8a9:	int3   
   14003f8aa:	int3   
   14003f8ab:	int3   
   14003f8ac:	int3   
   14003f8ad:	int3   
   14003f8ae:	int3   
   14003f8af:	int3   
   14003f8b0:	mov    QWORD PTR [rsp+0x18],rbx
   14003f8b5:	mov    DWORD PTR [rsp+0x8],ecx
   14003f8b9:	push   rsi
   14003f8ba:	push   rdi
   14003f8bb:	push   r12
   14003f8bd:	sub    rsp,0x30
   14003f8c1:	movsxd rbx,ecx
   14003f8c4:	cmp    ebx,0xfffffffe
   14003f8c7:	jne    0x14003f8dc
   14003f8c9:	call   0x14002bca0
   14003f8ce:	mov    DWORD PTR [rax],0x9
   14003f8d4:	or     eax,0xffffffff
   14003f8d7:	jmp    0x14003f9bb
   14003f8dc:	test   ecx,ecx
   14003f8de:	js     0x14003f997
   14003f8e4:	cmp    ebx,DWORD PTR [rip+0x236be]        # 0x140062fa8
   14003f8ea:	jae    0x14003f997
   14003f8f0:	mov    rax,rbx
   14003f8f3:	mov    rdi,rbx
   14003f8f6:	sar    rdi,0x5
   14003f8fa:	lea    r12,[rip+0x236bf]        # 0x140062fc0
   14003f901:	and    eax,0x1f
   14003f904:	lea    rsi,[rax+rax*4]
   14003f908:	add    rsi,rsi
   14003f90b:	mov    rax,QWORD PTR [r12+rdi*8]
   14003f90f:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   14003f913:	and    ecx,0x1
   14003f916:	jne    0x14003f93e
   14003f918:	call   0x14002bca0
   14003f91d:	mov    DWORD PTR [rax],0x9
   14003f923:	xor    edi,edi
   14003f925:	mov    QWORD PTR [rsp+0x20],rdi
   14003f92a:	xor    r9d,r9d
   14003f92d:	xor    r8d,r8d
   14003f930:	xor    edx,edx
   14003f932:	xor    ecx,ecx
   14003f934:	call   0x14002e900
   14003f939:	or     eax,0xffffffff
   14003f93c:	jmp    0x14003f9bb
   14003f93e:	mov    ecx,ebx
   14003f940:	call   0x14003ba60
   14003f945:	nop
   14003f946:	mov    rax,QWORD PTR [r12+rdi*8]
   14003f94a:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   14003f94f:	je     0x14003f97e
   14003f951:	mov    ecx,ebx
   14003f953:	call   0x14003b9c0
   14003f958:	mov    rcx,rax
   14003f95b:	call   QWORD PTR [rip+0x3a07]        # 0x140043368
   14003f961:	test   eax,eax
   14003f963:	jne    0x14003f97a
   14003f965:	call   QWORD PTR [rip+0x3b7d]        # 0x1400434e8
   14003f96b:	mov    edi,eax
   14003f96d:	test   eax,eax
   14003f96f:	je     0x14003f98c
   14003f971:	call   0x14002bcd0
   14003f976:	mov    DWORD PTR [rax],edi
   14003f978:	jmp    0x14003f97e
   14003f97a:	xor    edi,edi
   14003f97c:	jmp    0x14003f98c
   14003f97e:	call   0x14002bca0
   14003f983:	mov    DWORD PTR [rax],0x9
   14003f989:	or     edi,0xffffffff
   14003f98c:	mov    ecx,ebx
   14003f98e:	call   0x14003bb30
   14003f993:	mov    eax,edi
   14003f995:	jmp    0x14003f9bb
   14003f997:	call   0x14002bca0
   14003f99c:	mov    DWORD PTR [rax],0x9
   14003f9a2:	xor    edi,edi
   14003f9a4:	mov    QWORD PTR [rsp+0x20],rdi
   14003f9a9:	xor    r9d,r9d
   14003f9ac:	xor    r8d,r8d
   14003f9af:	xor    edx,edx
   14003f9b1:	xor    ecx,ecx
   14003f9b3:	call   0x14002e900
   14003f9b8:	or     eax,0xffffffff
   14003f9bb:	mov    rbx,QWORD PTR [rsp+0x60]
   14003f9c0:	add    rsp,0x30
   14003f9c4:	pop    r12
   14003f9c6:	pop    rdi
   14003f9c7:	pop    rsi
   14003f9c8:	ret    
   14003f9c9:	int3   
   14003f9ca:	int3   
   14003f9cb:	int3   
   14003f9cc:	int3   
   14003f9cd:	int3   
   14003f9ce:	int3   
   14003f9cf:	int3   
   14003f9d0:	rex push rbp
   14003f9d2:	sub    rsp,0x30
   14003f9d6:	mov    rbp,rdx
   14003f9d9:	mov    ecx,DWORD PTR [rbp+0x50]
   14003f9dc:	call   0x14003bb30
   14003f9e1:	add    rsp,0x30
   14003f9e5:	pop    rbp
   14003f9e6:	ret    
   14003f9e7:	int3   
   14003f9e8:	int3   
   14003f9e9:	int3   
   14003f9ea:	int3   
   14003f9eb:	int3   
   14003f9ec:	int3   
   14003f9ed:	int3   
   14003f9ee:	int3   
   14003f9ef:	int3   
   14003f9f0:	mov    QWORD PTR [rsp+0x10],rdx
   14003f9f5:	mov    DWORD PTR [rsp+0x8],ecx
   14003f9f9:	push   rbx
   14003f9fa:	push   rdi
   14003f9fb:	push   r14
   14003f9fd:	sub    rsp,0x70
   14003fa01:	movsxd rax,ecx
   14003fa04:	mov    rdi,0xfffffffffffffffe
   14003fa0b:	mov    ebx,r8d
   14003fa0e:	cmp    eax,edi
   14003fa10:	mov    DWORD PTR [rsp+0x34],ebx
   14003fa14:	jne    0x14003fa38
   14003fa16:	call   0x14002bcd0
   14003fa1b:	xor    r14d,r14d
   14003fa1e:	mov    DWORD PTR [rax],r14d
   14003fa21:	call   0x14002bca0
   14003fa26:	mov    DWORD PTR [rax],0x9
   14003fa2c:	or     eax,0xffffffff
   14003fa2f:	add    rsp,0x70
   14003fa33:	pop    r14
   14003fa35:	pop    rdi
   14003fa36:	pop    rbx
   14003fa37:	ret    
   14003fa38:	test   ecx,ecx
   14003fa3a:	js     0x1400402bb
   14003fa40:	cmp    eax,DWORD PTR [rip+0x23562]        # 0x140062fa8
   14003fa46:	jae    0x1400402bb
   14003fa4c:	mov    QWORD PTR [rsp+0x68],rbp
   14003fa51:	mov    QWORD PTR [rsp+0x58],r12
   14003fa56:	mov    r12,rax
   14003fa59:	and    eax,0x1f
   14003fa5c:	sar    r12,0x5
   14003fa60:	lea    r8,[rip+0xfffffffffffc0599]        # 0x140000000
   14003fa67:	mov    rcx,QWORD PTR [r8+r12*8+0x62fc0]
   14003fa6f:	lea    rbp,[rax+rax*4]
   14003fa73:	add    rbp,rbp
   14003fa76:	movzx  eax,BYTE PTR [rcx+rbp*8+0x8]
   14003fa7b:	test   al,0x1
   14003fa7d:	jne    0x14003fa97
   14003fa7f:	call   0x14002bcd0
   14003fa84:	xor    r14d,r14d
   14003fa87:	mov    DWORD PTR [rax],r14d
   14003fa8a:	call   0x14002bca0
   14003fa8f:	mov    DWORD PTR [rax],0x9
   14003fa95:	jmp    0x14003fab5
   14003fa97:	cmp    ebx,0x7fffffff
   14003fa9d:	jbe    0x14003fad1
   14003fa9f:	call   0x14002bcd0
   14003faa4:	xor    r14d,r14d
   14003faa7:	mov    DWORD PTR [rax],r14d
   14003faaa:	call   0x14002bca0
   14003faaf:	mov    DWORD PTR [rax],0x16
   14003fab5:	xor    r9d,r9d
   14003fab8:	xor    r8d,r8d
   14003fabb:	xor    edx,edx
   14003fabd:	xor    ecx,ecx
   14003fabf:	mov    QWORD PTR [rsp+0x20],r14
   14003fac4:	call   0x14002e900
   14003fac9:	or     eax,0xffffffff
   14003facc:	jmp    0x14003fb95
   14003fad1:	xor    r14d,r14d
   14003fad4:	test   ebx,ebx
   14003fad6:	mov    QWORD PTR [rsp+0x60],rsi
   14003fadb:	mov    esi,r14d
   14003fade:	je     0x1400402b4
   14003fae4:	test   al,0x2
   14003fae6:	jne    0x1400402b4
   14003faec:	test   rdx,rdx
   14003faef:	jne    0x14003fb1d
   14003faf1:	call   0x14002bcd0
   14003faf6:	mov    DWORD PTR [rax],r14d
   14003faf9:	call   0x14002bca0
   14003fafe:	xor    r9d,r9d
   14003fb01:	xor    r8d,r8d
   14003fb04:	xor    edx,edx
   14003fb06:	xor    ecx,ecx
   14003fb08:	mov    DWORD PTR [rax],0x16
   14003fb0e:	mov    QWORD PTR [rsp+0x20],r14
   14003fb13:	call   0x14002e900
   14003fb18:	or     eax,0xffffffff
   14003fb1b:	jmp    0x14003fb90
   14003fb1d:	mov    QWORD PTR [rsp+0x50],r13
   14003fb22:	mov    QWORD PTR [rsp+0x48],r15
   14003fb27:	movzx  r15d,BYTE PTR [rcx+rbp*8+0x38]
   14003fb2d:	add    r15b,r15b
   14003fb30:	sar    r15b,1
   14003fb33:	movsx  ecx,r15b
   14003fb37:	sub    ecx,0x1
   14003fb3a:	je     0x14003fb54
   14003fb3c:	sub    ecx,0x1
   14003fb3f:	jne    0x14003fb4c
   14003fb41:	mov    eax,ebx
   14003fb43:	not    eax
   14003fb45:	test   al,0x1
   14003fb47:	je     0x14003fb5c
   14003fb49:	and    ebx,0xfffffffe
   14003fb4c:	mov    r13,rdx
   14003fb4f:	jmp    0x14003fc07
   14003fb54:	mov    eax,ebx
   14003fb56:	not    eax
   14003fb58:	test   al,0x1
   14003fb5a:	jne    0x14003fba8
   14003fb5c:	call   0x14002bcd0
   14003fb61:	mov    DWORD PTR [rax],r14d
   14003fb64:	call   0x14002bca0
   14003fb69:	xor    r9d,r9d
   14003fb6c:	xor    r8d,r8d
   14003fb6f:	xor    edx,edx
   14003fb71:	xor    ecx,ecx
   14003fb73:	mov    DWORD PTR [rax],0x16
   14003fb79:	mov    QWORD PTR [rsp+0x20],r14
   14003fb7e:	call   0x14002e900
   14003fb83:	or     eax,0xffffffff
   14003fb86:	mov    r13,QWORD PTR [rsp+0x50]
   14003fb8b:	mov    r15,QWORD PTR [rsp+0x48]
   14003fb90:	mov    rsi,QWORD PTR [rsp+0x60]
   14003fb95:	mov    rbp,QWORD PTR [rsp+0x68]
   14003fb9a:	mov    r12,QWORD PTR [rsp+0x58]
   14003fb9f:	add    rsp,0x70
   14003fba3:	pop    r14
   14003fba5:	pop    rdi
   14003fba6:	pop    rbx
   14003fba7:	ret    
   14003fba8:	mov    eax,0x4
   14003fbad:	shr    ebx,1
   14003fbaf:	cmp    ebx,eax
   14003fbb1:	cmovb  ebx,eax
   14003fbb4:	mov    ecx,ebx
   14003fbb6:	call   0x1400320c0
   14003fbbb:	test   rax,rax
   14003fbbe:	mov    r13,rax
   14003fbc1:	jne    0x14003fbde
   14003fbc3:	call   0x14002bca0
   14003fbc8:	mov    DWORD PTR [rax],0xc
   14003fbce:	call   0x14002bcd0
   14003fbd3:	mov    DWORD PTR [rax],0x8
   14003fbd9:	or     eax,0xffffffff
   14003fbdc:	jmp    0x14003fb86
   14003fbde:	mov    ecx,DWORD PTR [rsp+0x90]
   14003fbe5:	xor    edx,edx
   14003fbe7:	lea    r8d,[rdx+0x1]
   14003fbeb:	call   0x140037780
   14003fbf0:	lea    r8,[rip+0xfffffffffffc0409]        # 0x140000000
   14003fbf7:	mov    r11,rax
   14003fbfa:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003fc02:	mov    QWORD PTR [rax+rbp*8+0x40],r11
   14003fc07:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003fc0f:	mov    rdx,r13
   14003fc12:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14003fc17:	je     0x14003fcbc
   14003fc1d:	movzx  ecx,BYTE PTR [rax+rbp*8+0x9]
   14003fc22:	cmp    cl,0xa
   14003fc25:	je     0x14003fcbc
   14003fc2b:	test   ebx,ebx
   14003fc2d:	je     0x14003fcbc
   14003fc33:	mov    BYTE PTR [r13+0x0],cl
   14003fc37:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003fc3f:	add    ebx,0xffffffff
   14003fc42:	test   r15b,r15b
   14003fc45:	lea    rdx,[r13+0x1]
   14003fc49:	mov    esi,0x1
   14003fc4e:	mov    BYTE PTR [rax+rbp*8+0x9],0xa
   14003fc53:	je     0x14003fcbc
   14003fc55:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003fc5d:	movzx  ecx,BYTE PTR [rax+rbp*8+0x39]
   14003fc62:	cmp    cl,0xa
   14003fc65:	je     0x14003fcbc
   14003fc67:	test   ebx,ebx
   14003fc69:	je     0x14003fcbc
   14003fc6b:	mov    BYTE PTR [rdx],cl
   14003fc6d:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003fc75:	add    rdx,rsi
   14003fc78:	add    ebx,0xffffffff
   14003fc7b:	cmp    r15b,0x1
   14003fc7f:	mov    esi,0x2
   14003fc84:	mov    BYTE PTR [rax+rbp*8+0x39],0xa
   14003fc89:	jne    0x14003fcbc
   14003fc8b:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003fc93:	movzx  ecx,BYTE PTR [rax+rbp*8+0x3a]
   14003fc98:	cmp    cl,0xa
   14003fc9b:	je     0x14003fcbc
   14003fc9d:	test   ebx,ebx
   14003fc9f:	je     0x14003fcbc
   14003fca1:	mov    BYTE PTR [rdx],cl
   14003fca3:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003fcab:	add    rdx,0x1
   14003fcaf:	mov    esi,0x3
   14003fcb4:	add    ebx,0xffffffff
   14003fcb7:	mov    BYTE PTR [rax+rbp*8+0x3a],0xa
   14003fcbc:	mov    rcx,QWORD PTR [r8+r12*8+0x62fc0]
   14003fcc4:	lea    r9,[rsp+0x30]
   14003fcc9:	mov    r8d,ebx
   14003fccc:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14003fcd0:	mov    QWORD PTR [rsp+0x20],r14
   14003fcd5:	call   QWORD PTR [rip+0x36a5]        # 0x140043380
   14003fcdb:	test   eax,eax
   14003fcdd:	je     0x14004021c
   14003fce3:	movsxd rdx,DWORD PTR [rsp+0x30]
   14003fce8:	test   edx,edx
   14003fcea:	js     0x14004021c
   14003fcf0:	mov    eax,ebx
   14003fcf2:	cmp    rdx,rax
   14003fcf5:	ja     0x14004021c
   14003fcfb:	lea    r8,[rip+0xfffffffffffc02fe]        # 0x140000000
   14003fd02:	add    esi,edx
   14003fd04:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003fd0c:	test   BYTE PTR [rax+rbp*8+0x8],0x80
   14003fd11:	je     0x140040292
   14003fd17:	cmp    r15b,0x2
   14003fd1b:	je     0x140040027
   14003fd21:	test   edx,edx
   14003fd23:	je     0x14003fd33
   14003fd25:	cmp    BYTE PTR [r13+0x0],0xa
   14003fd2a:	jne    0x14003fd33
   14003fd2c:	or     BYTE PTR [rax+rbp*8+0x8],0x4
   14003fd31:	jmp    0x14003fd38
   14003fd33:	and    BYTE PTR [rax+rbp*8+0x8],0xfb
   14003fd38:	movsxd rax,esi
   14003fd3b:	mov    rbx,r13
   14003fd3e:	mov    rdi,r13
   14003fd41:	lea    rsi,[rax+r13*1]
   14003fd45:	cmp    r13,rsi
   14003fd48:	jae    0x14003febb
   14003fd4e:	xchg   ax,ax
   14003fd50:	movzx  eax,BYTE PTR [rdi]
   14003fd53:	cmp    al,0x1a
   14003fd55:	je     0x14003fe9b
   14003fd5b:	cmp    al,0xd
   14003fd5d:	je     0x14003fd6e
   14003fd5f:	mov    BYTE PTR [rbx],al
   14003fd61:	add    rbx,0x1
   14003fd65:	add    rdi,0x1
   14003fd69:	jmp    0x14003fe90
   14003fd6e:	lea    rax,[rsi-0x1]
   14003fd72:	cmp    rdi,rax
   14003fd75:	jae    0x14003fda0
   14003fd77:	cmp    BYTE PTR [rdi+0x1],0xa
   14003fd7b:	lea    rax,[rdi+0x1]
   14003fd7f:	jne    0x14003fd91
   14003fd81:	add    rdi,0x2
   14003fd85:	mov    BYTE PTR [rbx],0xa
   14003fd88:	add    rbx,0x1
   14003fd8c:	jmp    0x14003fe90
   14003fd91:	mov    BYTE PTR [rbx],0xd
   14003fd94:	add    rbx,0x1
   14003fd98:	mov    rdi,rax
   14003fd9b:	jmp    0x14003fe90
   14003fda0:	mov    rcx,QWORD PTR [r8+r12*8+0x62fc0]
   14003fda8:	lea    r9,[rsp+0x30]
   14003fdad:	lea    rdx,[rsp+0xa0]
   14003fdb5:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14003fdb9:	mov    r8d,0x1
   14003fdbf:	add    rdi,0x1
   14003fdc3:	mov    QWORD PTR [rsp+0x20],r14
   14003fdc8:	call   QWORD PTR [rip+0x35b2]        # 0x140043380
   14003fdce:	test   eax,eax
   14003fdd0:	jne    0x14003fde0
   14003fdd2:	call   QWORD PTR [rip+0x3710]        # 0x1400434e8
   14003fdd8:	test   eax,eax
   14003fdda:	jne    0x14003fe79
   14003fde0:	cmp    DWORD PTR [rsp+0x30],r14d
   14003fde5:	je     0x14003fe79
   14003fdeb:	lea    r8,[rip+0xfffffffffffc020e]        # 0x140000000
   14003fdf2:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003fdfa:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14003fdff:	je     0x14003fe31
   14003fe01:	cmp    BYTE PTR [rsp+0xa0],0xa
   14003fe09:	jne    0x14003fe14
   14003fe0b:	mov    BYTE PTR [rbx],0xa
   14003fe0e:	add    rbx,0x1
   14003fe12:	jmp    0x14003fe90
   14003fe14:	mov    BYTE PTR [rbx],0xd
   14003fe17:	mov    rcx,QWORD PTR [r8+r12*8+0x62fc0]
   14003fe1f:	movzx  eax,BYTE PTR [rsp+0xa0]
   14003fe27:	mov    BYTE PTR [rcx+rbp*8+0x9],al
   14003fe2b:	add    rbx,0x1
   14003fe2f:	jmp    0x14003fe90
   14003fe31:	cmp    rbx,r13
   14003fe34:	jne    0x14003fe49
   14003fe36:	cmp    BYTE PTR [rsp+0xa0],0xa
   14003fe3e:	jne    0x14003fe49
   14003fe40:	mov    BYTE PTR [rbx],0xa
   14003fe43:	add    rbx,0x1
   14003fe47:	jmp    0x14003fe90
   14003fe49:	mov    ecx,DWORD PTR [rsp+0x90]
   14003fe50:	mov    r8d,0x1
   14003fe56:	or     rdx,0xffffffffffffffff
   14003fe5a:	call   0x140037780
   14003fe5f:	cmp    BYTE PTR [rsp+0xa0],0xa
   14003fe67:	je     0x14003fe89
   14003fe69:	mov    BYTE PTR [rbx],0xd
   14003fe6c:	add    rbx,0x1
   14003fe70:	lea    r8,[rip+0xfffffffffffc0189]        # 0x140000000
   14003fe77:	jmp    0x14003fe90
   14003fe79:	mov    BYTE PTR [rbx],0xd
   14003fe7c:	add    rbx,0x1
   14003fe80:	lea    r8,[rip+0xfffffffffffc0179]        # 0x140000000
   14003fe87:	jmp    0x14003fe90
   14003fe89:	lea    r8,[rip+0xfffffffffffc0170]        # 0x140000000
   14003fe90:	cmp    rdi,rsi
   14003fe93:	jb     0x14003fd50
   14003fe99:	jmp    0x14003febb
   14003fe9b:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003fea3:	test   BYTE PTR [rax+rbp*8+0x8],0x40
   14003fea8:	jne    0x14003feb1
   14003feaa:	or     BYTE PTR [rax+rbp*8+0x8],0x2
   14003feaf:	jmp    0x14003febb
   14003feb1:	movzx  eax,BYTE PTR [rdi]
   14003feb4:	add    rbx,0x1
   14003feb8:	mov    BYTE PTR [rbx-0x1],al
   14003febb:	mov    esi,ebx
   14003febd:	sub    esi,r13d
   14003fec0:	cmp    r15b,0x1
   14003fec4:	jne    0x140040281
   14003feca:	test   esi,esi
   14003fecc:	je     0x140040270
   14003fed2:	mov    al,BYTE PTR [rbx-0x1]
   14003fed5:	sub    rbx,0x1
   14003fed9:	test   al,al
   14003fedb:	js     0x14003fee6
   14003fedd:	add    rbx,0x1
   14003fee1:	jmp    0x14003ffb7
   14003fee6:	movzx  eax,al
   14003fee9:	mov    edx,0x1
   14003feee:	cmp    BYTE PTR [rax+r8*1+0x5c4c0],r14b
   14003fef6:	jne    0x14003ff17
   14003fef8:	cmp    edx,0x4
   14003fefb:	jg     0x14003ff17
   14003fefd:	cmp    rbx,r13
   14003ff00:	jb     0x14003ff17
   14003ff02:	movzx  eax,BYTE PTR [rbx-0x1]
   14003ff06:	sub    rbx,0x1
   14003ff0a:	add    edx,0x1
   14003ff0d:	cmp    BYTE PTR [rax+r8*1+0x5c4c0],r14b
   14003ff15:	je     0x14003fef8
   14003ff17:	movzx  ecx,BYTE PTR [rbx]
   14003ff1a:	movsx  eax,BYTE PTR [rcx+r8*1+0x5c4c0]
   14003ff23:	test   eax,eax
   14003ff25:	jne    0x14003ff42
   14003ff27:	call   0x14002bca0
   14003ff2c:	mov    r15,QWORD PTR [rsp+0x98]
   14003ff34:	or     edi,0xffffffff
   14003ff37:	mov    DWORD PTR [rax],0x2a
   14003ff3d:	jmp    0x14004029a
   14003ff42:	add    eax,0x1
   14003ff45:	cmp    eax,edx
   14003ff47:	jne    0x14003ff51
   14003ff49:	movsxd rax,edx
   14003ff4c:	add    rbx,rax
   14003ff4f:	jmp    0x14003ffb7
   14003ff51:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   14003ff59:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14003ff5e:	je     0x14003ffa0
   14003ff60:	add    rbx,0x1
   14003ff64:	cmp    edx,0x2
   14003ff67:	mov    BYTE PTR [rax+rbp*8+0x9],cl
   14003ff6b:	jl     0x14003ff80
   14003ff6d:	movzx  eax,BYTE PTR [rbx]
   14003ff70:	mov    rcx,QWORD PTR [r8+r12*8+0x62fc0]
   14003ff78:	add    rbx,0x1
   14003ff7c:	mov    BYTE PTR [rcx+rbp*8+0x39],al
   14003ff80:	cmp    edx,0x3
   14003ff83:	jne    0x14003ff98
   14003ff85:	movzx  eax,BYTE PTR [rbx]
   14003ff88:	mov    rcx,QWORD PTR [r8+r12*8+0x62fc0]
   14003ff90:	add    rbx,0x1
   14003ff94:	mov    BYTE PTR [rcx+rbp*8+0x3a],al
   14003ff98:	movsxd rax,edx
   14003ff9b:	sub    rbx,rax
   14003ff9e:	jmp    0x14003ffb7
   14003ffa0:	mov    ecx,DWORD PTR [rsp+0x90]
   14003ffa7:	neg    edx
   14003ffa9:	mov    r8d,0x1
   14003ffaf:	movsxd rdx,edx
   14003ffb2:	call   0x140037780
   14003ffb7:	mov    eax,DWORD PTR [rsp+0x34]
   14003ffbb:	mov    r15,QWORD PTR [rsp+0x98]
   14003ffc3:	sub    ebx,r13d
   14003ffc6:	shr    eax,1
   14003ffc8:	mov    r9d,ebx
   14003ffcb:	mov    r8,r13
   14003ffce:	mov    DWORD PTR [rsp+0x28],eax
   14003ffd2:	xor    edx,edx
   14003ffd4:	mov    ecx,0xfde9
   14003ffd9:	mov    QWORD PTR [rsp+0x20],r15
   14003ffde:	call   QWORD PTR [rip+0x34e4]        # 0x1400434c8
   14003ffe4:	test   eax,eax
   14003ffe6:	mov    esi,eax
   14003ffe8:	jne    0x14003ffff
   14003ffea:	call   QWORD PTR [rip+0x34f8]        # 0x1400434e8
   14003fff0:	mov    ecx,eax
   14003fff2:	call   0x14002bd00
   14003fff7:	or     edi,0xffffffff
   14003fffa:	jmp    0x14004029a
   14003ffff:	cmp    eax,ebx
   140040001:	lea    rax,[rip+0xfffffffffffbfff8]        # 0x140000000
   140040008:	mov    rdi,0xfffffffffffffffe
   14004000f:	mov    rax,QWORD PTR [rax+r12*8+0x62fc0]
   140040017:	setne  r14b
   14004001b:	add    esi,esi
   14004001d:	mov    DWORD PTR [rax+rbp*8+0x48],r14d
   140040022:	jmp    0x14004029a
   140040027:	test   edx,edx
   140040029:	je     0x14004003a
   14004002b:	cmp    WORD PTR [r13+0x0],0xa
   140040031:	jne    0x14004003a
   140040033:	or     BYTE PTR [rax+rbp*8+0x8],0x4
   140040038:	jmp    0x14004003f
   14004003a:	and    BYTE PTR [rax+rbp*8+0x8],0xfb
   14004003f:	movsxd rax,esi
   140040042:	mov    rbx,r13
   140040045:	mov    rdi,r13
   140040048:	lea    rsi,[rax+r13*1]
   14004004c:	cmp    r13,rsi
   14004004f:	jae    0x140040206
   140040055:	mov    r15,0xfffffffffffffffe
   14004005c:	data16 data16 xchg ax,ax
   140040060:	movzx  eax,WORD PTR [rdi]
   140040063:	cmp    ax,0x1a
   140040067:	je     0x1400401e5
   14004006d:	cmp    ax,0xd
   140040071:	je     0x140040083
   140040073:	mov    WORD PTR [rbx],ax
   140040076:	add    rbx,0x2
   14004007a:	add    rdi,0x2
   14004007e:	jmp    0x1400401da
   140040083:	lea    rax,[rsi-0x2]
   140040087:	cmp    rdi,rax
   14004008a:	jae    0x1400400ba
   14004008c:	cmp    WORD PTR [rdi+0x2],0xa
   140040091:	lea    rax,[rdi+0x2]
   140040095:	jne    0x1400400a9
   140040097:	add    rdi,0x4
   14004009b:	mov    WORD PTR [rbx],0xa
   1400400a0:	add    rbx,0x2
   1400400a4:	jmp    0x1400401da
   1400400a9:	mov    WORD PTR [rbx],0xd
   1400400ae:	add    rbx,0x2
   1400400b2:	mov    rdi,rax
   1400400b5:	jmp    0x1400401da
   1400400ba:	mov    rcx,QWORD PTR [r8+r12*8+0x62fc0]
   1400400c2:	lea    r9,[rsp+0x30]
   1400400c7:	lea    rdx,[rsp+0xa8]
   1400400cf:	mov    rcx,QWORD PTR [rcx+rbp*8]
   1400400d3:	mov    r8d,0x2
   1400400d9:	add    rdi,0x2
   1400400dd:	mov    QWORD PTR [rsp+0x20],r14
   1400400e2:	call   QWORD PTR [rip+0x3298]        # 0x140043380
   1400400e8:	test   eax,eax
   1400400ea:	jne    0x1400400fa
   1400400ec:	call   QWORD PTR [rip+0x33f6]        # 0x1400434e8
   1400400f2:	test   eax,eax
   1400400f4:	jne    0x1400401c1
   1400400fa:	cmp    DWORD PTR [rsp+0x30],r14d
   1400400ff:	je     0x1400401c1
   140040105:	lea    r8,[rip+0xfffffffffffbfef4]        # 0x140000000
   14004010c:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   140040114:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   140040119:	je     0x140040174
   14004011b:	cmp    WORD PTR [rsp+0xa8],0xa
   140040124:	jne    0x140040134
   140040126:	mov    WORD PTR [rbx],0xa
   14004012b:	add    rbx,0x2
   14004012f:	jmp    0x1400401da
   140040134:	mov    WORD PTR [rbx],0xd
   140040139:	movzx  eax,BYTE PTR [rsp+0xa8]
   140040141:	mov    rcx,QWORD PTR [r8+r12*8+0x62fc0]
   140040149:	mov    BYTE PTR [rcx+rbp*8+0x9],al
   14004014d:	movzx  eax,BYTE PTR [rsp+0xa9]
   140040155:	mov    rcx,QWORD PTR [r8+r12*8+0x62fc0]
   14004015d:	mov    BYTE PTR [rcx+rbp*8+0x39],al
   140040161:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   140040169:	add    rbx,0x2
   14004016d:	mov    BYTE PTR [rax+rbp*8+0x3a],0xa
   140040172:	jmp    0x1400401da
   140040174:	cmp    rbx,r13
   140040177:	jne    0x14004018f
   140040179:	cmp    WORD PTR [rsp+0xa8],0xa
   140040182:	jne    0x14004018f
   140040184:	mov    WORD PTR [rbx],0xa
   140040189:	add    rbx,0x2
   14004018d:	jmp    0x1400401da
   14004018f:	mov    ecx,DWORD PTR [rsp+0x90]
   140040196:	mov    r8d,0x1
   14004019c:	mov    rdx,r15
   14004019f:	call   0x140037780
   1400401a4:	cmp    WORD PTR [rsp+0xa8],0xa
   1400401ad:	je     0x1400401d3
   1400401af:	mov    WORD PTR [rbx],0xd
   1400401b4:	add    rbx,0x2
   1400401b8:	lea    r8,[rip+0xfffffffffffbfe41]        # 0x140000000
   1400401bf:	jmp    0x1400401da
   1400401c1:	mov    WORD PTR [rbx],0xd
   1400401c6:	add    rbx,0x2
   1400401ca:	lea    r8,[rip+0xfffffffffffbfe2f]        # 0x140000000
   1400401d1:	jmp    0x1400401da
   1400401d3:	lea    r8,[rip+0xfffffffffffbfe26]        # 0x140000000
   1400401da:	cmp    rdi,rsi
   1400401dd:	jb     0x140040060
   1400401e3:	jmp    0x140040206
   1400401e5:	mov    rax,QWORD PTR [r8+r12*8+0x62fc0]
   1400401ed:	test   BYTE PTR [rax+rbp*8+0x8],0x40
   1400401f2:	jne    0x1400401fb
   1400401f4:	or     BYTE PTR [rax+rbp*8+0x8],0x2
   1400401f9:	jmp    0x140040206
   1400401fb:	movzx  eax,WORD PTR [rdi]
   1400401fe:	add    rbx,0x2
   140040202:	mov    WORD PTR [rbx-0x2],ax
   140040206:	mov    r15,QWORD PTR [rsp+0x98]
   14004020e:	mov    esi,ebx
   140040210:	mov    rdi,0xfffffffffffffffe
   140040217:	sub    esi,r13d
   14004021a:	jmp    0x14004029a
   14004021c:	call   QWORD PTR [rip+0x32c6]        # 0x1400434e8
   140040222:	cmp    eax,0x5
   140040225:	jne    0x14004024a
   140040227:	call   0x14002bca0
   14004022c:	mov    DWORD PTR [rax],0x9
   140040232:	call   0x14002bcd0
   140040237:	mov    r15,QWORD PTR [rsp+0x98]
   14004023f:	mov    DWORD PTR [rax],0x5
   140040245:	or     edi,0xffffffff
   140040248:	jmp    0x14004029a
   14004024a:	cmp    eax,0x6d
   14004024d:	jne    0x14004025c
   14004024f:	mov    r15,QWORD PTR [rsp+0x98]
   140040257:	mov    edi,r14d
   14004025a:	jmp    0x14004029a
   14004025c:	mov    ecx,eax
   14004025e:	call   0x14002bd00
   140040263:	mov    r15,QWORD PTR [rsp+0x98]
   14004026b:	or     edi,0xffffffff
   14004026e:	jmp    0x14004029a
   140040270:	mov    r15,QWORD PTR [rsp+0x98]
   140040278:	mov    rdi,0xfffffffffffffffe
   14004027f:	jmp    0x14004029a
   140040281:	mov    r15,QWORD PTR [rsp+0x98]
   140040289:	mov    rdi,0xfffffffffffffffe
   140040290:	jmp    0x14004029a
   140040292:	mov    r15,QWORD PTR [rsp+0x98]
   14004029a:	cmp    r13,r15
   14004029d:	je     0x1400402a7
   14004029f:	mov    rcx,r13
   1400402a2:	call   0x14002a380
   1400402a7:	cmp    edi,0xfffffffe
   1400402aa:	cmove  edi,esi
   1400402ad:	mov    eax,edi
   1400402af:	jmp    0x14003fb86
   1400402b4:	xor    eax,eax
   1400402b6:	jmp    0x14003fb90
   1400402bb:	call   0x14002bcd0
   1400402c0:	xor    r14d,r14d
   1400402c3:	mov    DWORD PTR [rax],r14d
   1400402c6:	call   0x14002bca0
   1400402cb:	xor    r9d,r9d
   1400402ce:	xor    r8d,r8d
   1400402d1:	xor    edx,edx
   1400402d3:	xor    ecx,ecx
   1400402d5:	mov    DWORD PTR [rax],0x9
   1400402db:	mov    QWORD PTR [rsp+0x20],r14
   1400402e0:	call   0x14002e900
   1400402e5:	or     eax,0xffffffff
   1400402e8:	add    rsp,0x70
   1400402ec:	pop    r14
   1400402ee:	pop    rdi
   1400402ef:	pop    rbx
   1400402f0:	ret    
   1400402f1:	int3   
   1400402f2:	int3   
   1400402f3:	int3   
   1400402f4:	int3   
   1400402f5:	int3   
   1400402f6:	int3   
   1400402f7:	int3   
   1400402f8:	int3   
   1400402f9:	int3   
   1400402fa:	int3   
   1400402fb:	int3   
   1400402fc:	int3   
   1400402fd:	int3   
   1400402fe:	int3   
   1400402ff:	int3   
   140040300:	mov    QWORD PTR [rsp+0x10],rbx
   140040305:	mov    QWORD PTR [rsp+0x18],rsi
   14004030a:	mov    DWORD PTR [rsp+0x8],ecx
   14004030e:	push   rdi
   14004030f:	push   r12
   140040311:	push   r13
   140040313:	push   r14
   140040315:	push   r15
   140040317:	sub    rsp,0x30
   14004031b:	mov    esi,r8d
   14004031e:	mov    r12,rdx
   140040321:	movsxd rbx,ecx
   140040324:	cmp    ebx,0xfffffffe
   140040327:	jne    0x140040345
   140040329:	call   0x14002bcd0
   14004032e:	xor    edi,edi
   140040330:	mov    DWORD PTR [rax],edi
   140040332:	call   0x14002bca0
   140040337:	mov    DWORD PTR [rax],0x9
   14004033d:	or     eax,0xffffffff
   140040340:	jmp    0x14004045f
   140040345:	test   ecx,ecx
   140040347:	js     0x140040434
   14004034d:	cmp    ebx,DWORD PTR [rip+0x22c55]        # 0x140062fa8
   140040353:	jae    0x140040434
   140040359:	mov    rax,rbx
   14004035c:	mov    r13,rbx
   14004035f:	sar    r13,0x5
   140040363:	lea    r15,[rip+0x22c56]        # 0x140062fc0
   14004036a:	and    eax,0x1f
   14004036d:	lea    r14,[rax+rax*4]
   140040371:	add    r14,r14
   140040374:	mov    rax,QWORD PTR [r15+r13*8]
   140040378:	mov    cl,BYTE PTR [rax+r14*8+0x8]
   14004037d:	and    ecx,0x1
   140040380:	jne    0x1400403b2
   140040382:	call   0x14002bcd0
   140040387:	xor    edi,edi
   140040389:	mov    DWORD PTR [rax],edi
   14004038b:	call   0x14002bca0
   140040390:	mov    DWORD PTR [rax],0x9
   140040396:	mov    QWORD PTR [rsp+0x20],rdi
   14004039b:	xor    r9d,r9d
   14004039e:	xor    r8d,r8d
   1400403a1:	xor    edx,edx
   1400403a3:	xor    ecx,ecx
   1400403a5:	call   0x14002e900
   1400403aa:	or     eax,0xffffffff
   1400403ad:	jmp    0x14004045f
   1400403b2:	xor    edi,edi
   1400403b4:	mov    eax,edi
   1400403b6:	cmp    r8d,0x7fffffff
   1400403bd:	setbe  al
   1400403c0:	test   eax,eax
   1400403c2:	jne    0x1400403ef
   1400403c4:	call   0x14002bcd0
   1400403c9:	mov    DWORD PTR [rax],edi
   1400403cb:	call   0x14002bca0
   1400403d0:	mov    DWORD PTR [rax],0x16
   1400403d6:	mov    QWORD PTR [rsp+0x20],rdi
   1400403db:	xor    r9d,r9d
   1400403de:	xor    r8d,r8d
   1400403e1:	xor    edx,edx
   1400403e3:	xor    ecx,ecx
   1400403e5:	call   0x14002e900
   1400403ea:	or     eax,0xffffffff
   1400403ed:	jmp    0x14004045f
   1400403ef:	mov    ecx,ebx
   1400403f1:	call   0x14003ba60
   1400403f6:	nop
   1400403f7:	mov    rax,QWORD PTR [r15+r13*8]
   1400403fb:	test   BYTE PTR [rax+r14*8+0x8],0x1
   140040401:	je     0x140040414
   140040403:	mov    r8d,esi
   140040406:	mov    rdx,r12
   140040409:	mov    ecx,ebx
   14004040b:	call   0x14003f9f0
   140040410:	mov    edi,eax
   140040412:	jmp    0x140040429
   140040414:	call   0x14002bca0
   140040419:	mov    DWORD PTR [rax],0x9
   14004041f:	call   0x14002bcd0
   140040424:	mov    DWORD PTR [rax],edi
   140040426:	or     edi,0xffffffff
   140040429:	mov    ecx,ebx
   14004042b:	call   0x14003bb30
   140040430:	mov    eax,edi
   140040432:	jmp    0x14004045f
   140040434:	call   0x14002bcd0
   140040439:	xor    edi,edi
   14004043b:	mov    DWORD PTR [rax],edi
   14004043d:	call   0x14002bca0
   140040442:	mov    DWORD PTR [rax],0x9
   140040448:	mov    QWORD PTR [rsp+0x20],rdi
   14004044d:	xor    r9d,r9d
   140040450:	xor    r8d,r8d
   140040453:	xor    edx,edx
   140040455:	xor    ecx,ecx
   140040457:	call   0x14002e900
   14004045c:	or     eax,0xffffffff
   14004045f:	mov    rbx,QWORD PTR [rsp+0x68]
   140040464:	mov    rsi,QWORD PTR [rsp+0x70]
   140040469:	add    rsp,0x30
   14004046d:	pop    r15
   14004046f:	pop    r14
   140040471:	pop    r13
   140040473:	pop    r12
   140040475:	pop    rdi
   140040476:	ret    
   140040477:	int3   
   140040478:	int3   
   140040479:	int3   
   14004047a:	int3   
   14004047b:	int3   
   14004047c:	int3   
   14004047d:	int3   
   14004047e:	int3   
   14004047f:	int3   
   140040480:	rex push rbp
   140040482:	sub    rsp,0x30
   140040486:	mov    rbp,rdx
   140040489:	mov    ecx,DWORD PTR [rbp+0x60]
   14004048c:	call   0x14003bb30
   140040491:	add    rsp,0x30
   140040495:	pop    rbp
   140040496:	ret    
   140040497:	int3   
   140040498:	int3   
   140040499:	int3   
   14004049a:	int3   
   14004049b:	int3   
   14004049c:	int3   
   14004049d:	int3   
   14004049e:	int3   
   14004049f:	int3   
   1400404a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400404a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400404aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400404af:	push   rdi
   1400404b0:	sub    rsp,0x20
   1400404b4:	mov    rax,QWORD PTR [rip+0x1aac5]        # 0x14005af80
   1400404bb:	xor    rax,rsp
   1400404be:	mov    QWORD PTR [rsp+0x10],rax
   1400404c3:	test   edx,edx
   1400404c5:	mov    rbx,r8
   1400404c8:	mov    esi,edx
   1400404ca:	mov    rbp,rcx
   1400404cd:	mov    di,0x404e
   1400404d1:	mov    DWORD PTR [r8],0x0
   1400404d8:	mov    DWORD PTR [r8+0x4],0x0
   1400404e0:	mov    DWORD PTR [r8+0x8],0x0
   1400404e8:	je     0x14004063a
   1400404ee:	xchg   ax,ax
   1400404f0:	mov    rax,QWORD PTR [rbx]
   1400404f3:	mov    r11d,DWORD PTR [rbx+0x8]
   1400404f7:	lea    rcx,[rsp]
   1400404fb:	mov    QWORD PTR [rcx],rax
   1400404fe:	mov    eax,DWORD PTR [rbx+0x8]
   140040501:	add    r11d,r11d
   140040504:	mov    DWORD PTR [rcx+0x8],eax
   140040507:	mov    ecx,DWORD PTR [rbx]
   140040509:	mov    eax,DWORD PTR [rbx+0x4]
   14004050c:	lea    r9d,[rcx+rcx*1]
   140040510:	mov    edx,ecx
   140040512:	lea    r10d,[rax+rax*1]
   140040516:	mov    r8d,eax
   140040519:	shr    edx,0x1f
   14004051c:	mov    eax,r9d
   14004051f:	or     r10d,edx
   140040522:	shr    r8d,0x1f
   140040526:	lea    edx,[r9+r9*1]
   14004052a:	or     r11d,r8d
   14004052d:	mov    ecx,r10d
   140040530:	shr    eax,0x1f
   140040533:	shr    ecx,0x1f
   140040536:	add    r11d,r11d
   140040539:	add    r10d,r10d
   14004053c:	or     r11d,ecx
   14004053f:	mov    ecx,DWORD PTR [rsp]
   140040542:	or     r10d,eax
   140040545:	lea    r8d,[rdx+rcx*1]
   140040549:	xor    eax,eax
   14004054b:	mov    DWORD PTR [rbx],edx
   14004054d:	cmp    r8d,edx
   140040550:	mov    DWORD PTR [rbx+0x4],r10d
   140040554:	mov    DWORD PTR [rbx+0x8],r11d
   140040558:	jb     0x14004055f
   14004055a:	cmp    r8d,ecx
   14004055d:	jae    0x140040564
   14004055f:	mov    eax,0x1
   140040564:	test   eax,eax
   140040566:	mov    DWORD PTR [rbx],r8d
   140040569:	je     0x14004058e
   14004056b:	lea    eax,[r10+0x1]
   14004056f:	xor    ecx,ecx
   140040571:	cmp    eax,r10d
   140040574:	jb     0x14004057b
   140040576:	cmp    eax,0x1
   140040579:	jae    0x140040580
   14004057b:	mov    ecx,0x1
   140040580:	test   ecx,ecx
   140040582:	mov    DWORD PTR [rbx+0x4],eax
   140040585:	je     0x14004058e
   140040587:	lea    eax,[r11+0x1]
   14004058b:	mov    DWORD PTR [rbx+0x8],eax
   14004058e:	mov    eax,DWORD PTR [rbx+0x4]
   140040591:	mov    rcx,QWORD PTR [rsp]
   140040595:	xor    edx,edx
   140040597:	shr    rcx,0x20
   14004059b:	lea    r9d,[rax+rcx*1]
   14004059f:	cmp    r9d,eax
   1400405a2:	jb     0x1400405a9
   1400405a4:	cmp    r9d,ecx
   1400405a7:	jae    0x1400405ae
   1400405a9:	mov    edx,0x1
   1400405ae:	test   edx,edx
   1400405b0:	mov    DWORD PTR [rbx+0x4],r9d
   1400405b4:	je     0x1400405ba
   1400405b6:	add    DWORD PTR [rbx+0x8],0x1
   1400405ba:	mov    eax,DWORD PTR [rsp+0x8]
   1400405be:	mov    ecx,r9d
   1400405c1:	add    r9d,r9d
   1400405c4:	add    DWORD PTR [rbx+0x8],eax
   1400405c7:	mov    edx,DWORD PTR [rbx+0x8]
   1400405ca:	shr    ecx,0x1f
   1400405cd:	mov    eax,r8d
   1400405d0:	add    r8d,r8d
   1400405d3:	add    edx,edx
   1400405d5:	shr    eax,0x1f
   1400405d8:	or     edx,ecx
   1400405da:	mov    DWORD PTR [rbx],r8d
   1400405dd:	or     r9d,eax
   1400405e0:	mov    DWORD PTR [rbx+0x8],edx
   1400405e3:	xor    r10d,r10d
   1400405e6:	mov    DWORD PTR [rbx+0x4],r9d
   1400405ea:	movsx  ecx,BYTE PTR [rbp+0x0]
   1400405ee:	lea    eax,[r8+rcx*1]
   1400405f2:	mov    DWORD PTR [rsp],ecx
   1400405f5:	cmp    eax,r8d
   1400405f8:	jb     0x1400405fe
   1400405fa:	cmp    eax,ecx
   1400405fc:	jae    0x140040604
   1400405fe:	mov    r10d,0x1
   140040604:	test   r10d,r10d
   140040607:	mov    DWORD PTR [rbx],eax
   140040609:	je     0x14004062d
   14004060b:	lea    eax,[r9+0x1]
   14004060f:	xor    ecx,ecx
   140040611:	cmp    eax,r9d
   140040614:	jb     0x14004061b
   140040616:	cmp    eax,0x1
   140040619:	jae    0x140040620
   14004061b:	mov    ecx,0x1
   140040620:	test   ecx,ecx
   140040622:	mov    DWORD PTR [rbx+0x4],eax
   140040625:	je     0x14004062d
   140040627:	lea    eax,[rdx+0x1]
   14004062a:	mov    DWORD PTR [rbx+0x8],eax
   14004062d:	add    rbp,0x1
   140040631:	add    esi,0xffffffff
   140040634:	jne    0x1400404f0
   14004063a:	cmp    DWORD PTR [rbx+0x8],0x0
   14004063e:	jne    0x14004066c
   140040640:	mov    ecx,DWORD PTR [rbx]
   140040642:	mov    edx,DWORD PTR [rbx+0x4]
   140040645:	add    di,0xfff0
   14004064a:	mov    r8d,edx
   14004064d:	mov    eax,ecx
   14004064f:	shl    edx,0x10
   140040652:	shr    eax,0x10
   140040655:	shr    r8d,0x10
   140040659:	shl    ecx,0x10
   14004065c:	or     edx,eax
   14004065e:	test   r8d,r8d
   140040661:	mov    DWORD PTR [rbx+0x8],r8d
   140040665:	mov    DWORD PTR [rbx+0x4],edx
   140040668:	mov    DWORD PTR [rbx],ecx
   14004066a:	je     0x140040640
   14004066c:	bt     DWORD PTR [rbx+0x8],0xf
   140040671:	jb     0x1400406b3
   140040673:	nop
   140040674:	data16 data16 xchg ax,ax
   140040678:	data16 data16 xchg ax,ax
   14004067c:	data16 data16 xchg ax,ax
   140040680:	mov    eax,DWORD PTR [rbx]
   140040682:	mov    ecx,DWORD PTR [rbx+0x4]
   140040685:	add    di,0xffff
   14004068a:	mov    edx,eax
   14004068c:	add    eax,eax
   14004068e:	mov    r8d,ecx
   140040691:	mov    DWORD PTR [rbx],eax
   140040693:	shr    edx,0x1f
   140040696:	shr    r8d,0x1f
   14004069a:	lea    eax,[rcx+rcx*1]
   14004069d:	or     eax,edx
   14004069f:	mov    DWORD PTR [rbx+0x4],eax
   1400406a2:	mov    eax,DWORD PTR [rbx+0x8]
   1400406a5:	add    eax,eax
   1400406a7:	or     eax,r8d
   1400406aa:	bt     eax,0xf
   1400406ae:	mov    DWORD PTR [rbx+0x8],eax
   1400406b1:	jae    0x140040680
   1400406b3:	mov    WORD PTR [rbx+0xa],di
   1400406b7:	mov    rcx,QWORD PTR [rsp+0x10]
   1400406bc:	xor    rcx,rsp
   1400406bf:	call   0x140029b40
   1400406c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400406c9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400406ce:	mov    rsi,QWORD PTR [rsp+0x48]
   1400406d3:	add    rsp,0x20
   1400406d7:	pop    rdi
   1400406d8:	ret    
   1400406d9:	int3   
   1400406da:	int3   
   1400406db:	int3   
   1400406dc:	int3   
   1400406dd:	int3   
   1400406de:	int3   
   1400406df:	int3   
   1400406e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400406e5:	push   rdi
   1400406e6:	sub    rsp,0x20
   1400406ea:	movsxd rdi,ecx
   1400406ed:	mov    ecx,edi
   1400406ef:	call   0x14003b9c0
   1400406f4:	cmp    rax,0xffffffffffffffff
   1400406f8:	je     0x14004075d
   1400406fa:	cmp    edi,0x1
   1400406fd:	jne    0x140040711
   1400406ff:	mov    rax,QWORD PTR [rip+0x228ba]        # 0x140062fc0
   140040706:	test   BYTE PTR [rax+0xa8],dil
   14004070d:	jne    0x140040723
   14004070f:	jmp    0x14004073f
   140040711:	cmp    edi,0x2
   140040714:	jne    0x14004073f
   140040716:	mov    rax,QWORD PTR [rip+0x228a3]        # 0x140062fc0
   14004071d:	test   BYTE PTR [rax+0x58],0x1
   140040721:	je     0x14004073f
   140040723:	mov    ecx,0x2
   140040728:	call   0x14003b9c0
   14004072d:	mov    ecx,0x1
   140040732:	mov    rbx,rax
   140040735:	call   0x14003b9c0
   14004073a:	cmp    rax,rbx
   14004073d:	je     0x14004075d
   14004073f:	mov    ecx,edi
   140040741:	call   0x14003b9c0
   140040746:	mov    rcx,rax
   140040749:	call   QWORD PTR [rip+0x2e39]        # 0x140043588
   14004074f:	test   eax,eax
   140040751:	jne    0x14004075d
   140040753:	call   QWORD PTR [rip+0x2d8f]        # 0x1400434e8
   140040759:	mov    ebx,eax
   14004075b:	jmp    0x14004075f
   14004075d:	xor    ebx,ebx
   14004075f:	mov    ecx,edi
   140040761:	call   0x14003b8f0
   140040766:	mov    rax,rdi
   140040769:	mov    rdx,rdi
   14004076c:	and    eax,0x1f
   14004076f:	sar    rdx,0x5
   140040773:	lea    r8,[rip+0x22846]        # 0x140062fc0
   14004077a:	lea    rcx,[rax+rax*4]
   14004077e:	mov    rax,QWORD PTR [r8+rdx*8]
   140040782:	add    rcx,rcx
   140040785:	test   ebx,ebx
   140040787:	mov    BYTE PTR [rax+rcx*8+0x8],0x0
   14004078c:	je     0x1400407a3
   14004078e:	mov    ecx,ebx
   140040790:	call   0x14002bd00
   140040795:	or     eax,0xffffffff
   140040798:	mov    rbx,QWORD PTR [rsp+0x30]
   14004079d:	add    rsp,0x20
   1400407a1:	pop    rdi
   1400407a2:	ret    
   1400407a3:	xor    eax,eax
   1400407a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400407aa:	add    rsp,0x20
   1400407ae:	pop    rdi
   1400407af:	ret    
   1400407b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400407b5:	mov    DWORD PTR [rsp+0x8],ecx
   1400407b9:	push   rsi
   1400407ba:	push   rdi
   1400407bb:	push   r12
   1400407bd:	sub    rsp,0x30
   1400407c1:	movsxd rbx,ecx
   1400407c4:	cmp    ebx,0xfffffffe
   1400407c7:	jne    0x1400407e5
   1400407c9:	call   0x14002bcd0
   1400407ce:	xor    ebx,ebx
   1400407d0:	mov    DWORD PTR [rax],ebx
   1400407d2:	call   0x14002bca0
   1400407d7:	mov    DWORD PTR [rax],0x9
   1400407dd:	or     eax,0xffffffff
   1400407e0:	jmp    0x1400408b0
   1400407e5:	test   ecx,ecx
   1400407e7:	js     0x140040885
   1400407ed:	cmp    ebx,DWORD PTR [rip+0x227b5]        # 0x140062fa8
   1400407f3:	jae    0x140040885
   1400407f9:	mov    rax,rbx
   1400407fc:	mov    rdi,rbx
   1400407ff:	sar    rdi,0x5
   140040803:	lea    r12,[rip+0x227b6]        # 0x140062fc0
   14004080a:	and    eax,0x1f
   14004080d:	lea    rsi,[rax+rax*4]
   140040811:	add    rsi,rsi
   140040814:	mov    rax,QWORD PTR [r12+rdi*8]
   140040818:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   14004081c:	and    ecx,0x1
   14004081f:	jne    0x14004084e
   140040821:	call   0x14002bcd0
   140040826:	xor    ebx,ebx
   140040828:	mov    DWORD PTR [rax],ebx
   14004082a:	call   0x14002bca0
   14004082f:	mov    DWORD PTR [rax],0x9
   140040835:	mov    QWORD PTR [rsp+0x20],rbx
   14004083a:	xor    r9d,r9d
   14004083d:	xor    r8d,r8d
   140040840:	xor    edx,edx
   140040842:	xor    ecx,ecx
   140040844:	call   0x14002e900
   140040849:	or     eax,0xffffffff
   14004084c:	jmp    0x1400408b0
   14004084e:	mov    ecx,ebx
   140040850:	call   0x14003ba60
   140040855:	nop
   140040856:	mov    rax,QWORD PTR [r12+rdi*8]
   14004085a:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   14004085f:	je     0x14004086c
   140040861:	mov    ecx,ebx
   140040863:	call   0x1400406e0
   140040868:	mov    edi,eax
   14004086a:	jmp    0x14004087a
   14004086c:	call   0x14002bca0
   140040871:	mov    DWORD PTR [rax],0x9
   140040877:	or     edi,0xffffffff
   14004087a:	mov    ecx,ebx
   14004087c:	call   0x14003bb30
   140040881:	mov    eax,edi
   140040883:	jmp    0x1400408b0
   140040885:	call   0x14002bcd0
   14004088a:	xor    ebx,ebx
   14004088c:	mov    DWORD PTR [rax],ebx
   14004088e:	call   0x14002bca0
   140040893:	mov    DWORD PTR [rax],0x9
   140040899:	mov    QWORD PTR [rsp+0x20],rbx
   14004089e:	xor    r9d,r9d
   1400408a1:	xor    r8d,r8d
   1400408a4:	xor    edx,edx
   1400408a6:	xor    ecx,ecx
   1400408a8:	call   0x14002e900
   1400408ad:	or     eax,0xffffffff
   1400408b0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400408b5:	add    rsp,0x30
   1400408b9:	pop    r12
   1400408bb:	pop    rdi
   1400408bc:	pop    rsi
   1400408bd:	ret    
   1400408be:	int3   
   1400408bf:	int3   
   1400408c0:	rex push rbp
   1400408c2:	sub    rsp,0x30
   1400408c6:	mov    rbp,rdx
   1400408c9:	mov    ecx,DWORD PTR [rbp+0x50]
   1400408cc:	call   0x14003bb30
   1400408d1:	add    rsp,0x30
   1400408d5:	pop    rbp
   1400408d6:	ret    
   1400408d7:	int3   
   1400408d8:	int3   
   1400408d9:	int3   
   1400408da:	int3   
   1400408db:	int3   
   1400408dc:	int3   
   1400408dd:	int3   
   1400408de:	int3   
   1400408df:	int3   
   1400408e0:	rex push rbx
   1400408e2:	sub    rsp,0x20
   1400408e6:	mov    eax,DWORD PTR [rcx+0x18]
   1400408e9:	mov    rbx,rcx
   1400408ec:	test   al,0x83
   1400408ee:	je     0x140040910
   1400408f0:	test   al,0x8
   1400408f2:	je     0x140040910
   1400408f4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400408f8:	call   0x14002a380
   1400408fd:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140040904:	xor    eax,eax
   140040906:	mov    QWORD PTR [rbx],rax
   140040909:	mov    QWORD PTR [rbx+0x10],rax
   14004090d:	mov    DWORD PTR [rbx+0x8],eax
   140040910:	add    rsp,0x20
   140040914:	pop    rbx
   140040915:	ret    
   140040916:	jmp    QWORD PTR [rip+0x28b4]        # 0x1400431d0
   14004091c:	jmp    QWORD PTR [rip+0x28b6]        # 0x1400431d8
   140040922:	jmp    QWORD PTR [rip+0x28c0]        # 0x1400431e8
   140040928:	jmp    QWORD PTR [rip+0x2992]        # 0x1400432c0
   14004092e:	jmp    QWORD PTR [rip+0x30dc]        # 0x140043a10
   140040934:	jmp    QWORD PTR [rip+0x30de]        # 0x140043a18
   14004093a:	jmp    QWORD PTR [rip+0x30e0]        # 0x140043a20
   140040940:	rex push rbx
   140040942:	sub    rsp,0x20
   140040946:	mov    rbx,rcx
   140040949:	xor    ecx,ecx
   14004094b:	mov    QWORD PTR [rbx],rcx
   14004094e:	mov    DWORD PTR [rbx+0x30],ecx
   140040951:	lea    rcx,[rbx+0x8]
   140040955:	call   QWORD PTR [rip+0x2a85]        # 0x1400433e0
   14004095b:	nop
   14004095c:	mov    rax,rbx
   14004095f:	jmp    0x14004096c
   140040961:	mov    ecx,0x8007000e
   140040966:	call   0x140003dc0
   14004096b:	nop
   14004096c:	add    rsp,0x20
   140040970:	pop    rbx
   140040971:	ret    
   140040972:	int3   
   140040973:	int3   
   140040974:	int3   
   140040975:	int3   
   140040976:	int3   
   140040977:	int3   
   140040978:	int3   
   140040979:	int3   
   14004097a:	int3   
   14004097b:	int3   
   14004097c:	int3   
   14004097d:	int3   
   14004097e:	int3   
   14004097f:	int3   
   140040980:	rex push rbp
   140040982:	sub    rsp,0x20
   140040986:	mov    rbp,rdx
   140040989:	mov    rax,QWORD PTR [rcx]
   14004098c:	xor    ecx,ecx
   14004098e:	cmp    DWORD PTR [rax],0xc0000017
   140040994:	sete   cl
   140040997:	mov    eax,ecx
   140040999:	mov    eax,ecx
   14004099b:	add    rsp,0x20
   14004099f:	pop    rbp
   1400409a0:	ret    
   1400409a1:	int3   
   1400409a2:	int3   
   1400409a3:	int3   
   1400409a4:	rex push rbx
   1400409a6:	sub    rsp,0x30
   1400409aa:	mov    rax,QWORD PTR [rip+0x1a5cf]        # 0x14005af80
   1400409b1:	xor    rax,rsp
   1400409b4:	mov    QWORD PTR [rsp+0x28],rax
   1400409b9:	xor    ebx,ebx
   1400409bb:	call   QWORD PTR [rip+0x29c7]        # 0x140043388
   1400409c1:	lea    r9d,[rbx+0x7]
   1400409c5:	lea    r8,[rsp+0x20]
   1400409ca:	mov    edx,0x1004
   1400409cf:	mov    ecx,eax
   1400409d1:	call   QWORD PTR [rip+0x2951]        # 0x140043328
   1400409d7:	test   eax,eax
   1400409d9:	je     0x140040a00
   1400409db:	mov    al,BYTE PTR [rsp+0x20]
   1400409df:	lea    rdx,[rsp+0x20]
   1400409e4:	test   al,al
   1400409e6:	je     0x140040a00
   1400409e8:	movsx  eax,al
   1400409eb:	add    rdx,0x1
   1400409ef:	lea    ecx,[rbx+rbx*4]
   1400409f2:	lea    ebx,[rax+rcx*2-0x30]
   1400409f6:	mov    al,BYTE PTR [rdx]
   1400409f8:	test   al,al
   1400409fa:	jne    0x1400409e8
   1400409fc:	test   ebx,ebx
   1400409fe:	jne    0x140040a08
   140040a00:	call   QWORD PTR [rip+0x28d2]        # 0x1400432d8
   140040a06:	mov    ebx,eax
   140040a08:	mov    eax,ebx
   140040a0a:	mov    rcx,QWORD PTR [rsp+0x28]
   140040a0f:	xor    rcx,rsp
   140040a12:	call   0x140029b40
   140040a17:	add    rsp,0x30
   140040a1b:	pop    rbx
   140040a1c:	ret    
   140040a1d:	int3   
   140040a1e:	int3   
   140040a1f:	int3   
   140040a20:	mov    eax,0x3
   140040a25:	ret    
   140040a26:	int3   
   140040a27:	int3   
   140040a28:	sub    rsp,0xd8
   140040a2f:	mov    rax,QWORD PTR [rip+0x1a54a]        # 0x14005af80
   140040a36:	xor    rax,rsp
   140040a39:	mov    QWORD PTR [rsp+0xc0],rax
   140040a41:	lea    rcx,[rsp+0x20]
   140040a46:	mov    DWORD PTR [rsp+0x20],0x94
   140040a4e:	call   QWORD PTR [rip+0x2a64]        # 0x1400434b8
   140040a54:	cmp    DWORD PTR [rsp+0x30],0x2
   140040a59:	jne    0x140040a69
   140040a5b:	cmp    DWORD PTR [rsp+0x24],0x5
   140040a60:	lea    rax,[rip+0xffffffffffffffb9]        # 0x140040a20
   140040a67:	jae    0x140040a70
   140040a69:	lea    rax,[rip+0xffffffffffffff34]        # 0x1400409a4
   140040a70:	xchg   QWORD PTR [rip+0x1be09],rax        # 0x14005c880
   140040a77:	call   QWORD PTR [rip+0x1be03]        # 0x14005c880
   140040a7d:	mov    rcx,QWORD PTR [rsp+0xc0]
   140040a85:	xor    rcx,rsp
   140040a88:	call   0x140029b40
   140040a8d:	add    rsp,0xd8
   140040a94:	ret    
   140040a95:	int3   
   140040a96:	int3   
   140040a97:	int3   
   140040a98:	sub    rsp,0x38
   140040a9c:	call   QWORD PTR [rip+0x293e]        # 0x1400433e0
   140040aa2:	xor    r11d,r11d
   140040aa5:	mov    DWORD PTR [rsp+0x20],r11d
   140040aaa:	jmp    0x140040ab7
   140040aac:	mov    r11d,0x8007000e
   140040ab2:	mov    DWORD PTR [rsp+0x20],r11d
   140040ab7:	mov    eax,r11d
   140040aba:	add    rsp,0x38
   140040abe:	ret    
   140040abf:	int3   
   140040ac0:	int3   
   140040ac1:	int3   
   140040ac2:	int3   
   140040ac3:	int3   
   140040ac4:	int3   
   140040ac5:	int3   
   140040ac6:	int3   
   140040ac7:	int3   
   140040ac8:	rex push rbp
   140040aca:	sub    rsp,0x20
   140040ace:	mov    rbp,rdx
   140040ad1:	mov    rax,QWORD PTR [rcx]
   140040ad4:	xor    r11d,r11d
   140040ad7:	cmp    DWORD PTR [rax],0xc0000017
   140040add:	sete   r11b
   140040ae1:	mov    eax,r11d
   140040ae4:	add    rsp,0x20
   140040ae8:	pop    rbp
   140040ae9:	ret    
   140040aea:	int3   
   140040aeb:	int3   
   140040aec:	mov    QWORD PTR [rsp+0x8],rbx
   140040af1:	mov    QWORD PTR [rsp+0x10],rbp
   140040af6:	mov    QWORD PTR [rsp+0x18],rsi
   140040afb:	push   rdi
   140040afc:	sub    rsp,0x20
   140040b00:	test   rcx,rcx
   140040b03:	mov    rbp,rdx
   140040b06:	mov    rbx,rcx
   140040b09:	jne    0x140040b12
   140040b0b:	mov    eax,0x80070057
   140040b10:	jmp    0x140040b76
   140040b12:	cmp    DWORD PTR [rcx],0x0
   140040b15:	je     0x140040b74
   140040b17:	cmp    DWORD PTR [rcx],0x48
   140040b1a:	jne    0x140040b0b
   140040b1c:	xor    edi,edi
   140040b1e:	cmp    DWORD PTR [rcx+0x40],edi
   140040b21:	jle    0x140040b4c
   140040b23:	xor    esi,esi
   140040b25:	test   rsi,rsi
   140040b28:	js     0x140040b8b
   140040b2a:	cmp    edi,DWORD PTR [rbx+0x40]
   140040b2d:	jge    0x140040b8b
   140040b2f:	mov    rax,QWORD PTR [rbx+0x38]
   140040b33:	mov    rdx,rbp
   140040b36:	movzx  ecx,WORD PTR [rax+rsi*1]
   140040b3a:	call   QWORD PTR [rip+0x2ec0]        # 0x140043a00
   140040b40:	add    edi,0x1
   140040b43:	add    rsi,0x2
   140040b47:	cmp    edi,DWORD PTR [rbx+0x40]
   140040b4a:	jl     0x140040b25
   140040b4c:	mov    rcx,QWORD PTR [rbx+0x38]
   140040b50:	test   rcx,rcx
   140040b53:	je     0x140040b5f
   140040b55:	call   0x14002a380
   140040b5a:	and    QWORD PTR [rbx+0x38],0x0
   140040b5f:	and    DWORD PTR [rbx+0x40],0x0
   140040b63:	and    DWORD PTR [rbx+0x44],0x0
   140040b67:	lea    rcx,[rbx+0x8]
   140040b6b:	call   QWORD PTR [rip+0x2867]        # 0x1400433d8
   140040b71:	and    DWORD PTR [rbx],0x0
   140040b74:	xor    eax,eax
   140040b76:	mov    rbx,QWORD PTR [rsp+0x30]
   140040b7b:	mov    rbp,QWORD PTR [rsp+0x38]
   140040b80:	mov    rsi,QWORD PTR [rsp+0x40]
   140040b85:	add    rsp,0x20
   140040b89:	pop    rdi
   140040b8a:	ret    
   140040b8b:	xor    r9d,r9d
   140040b8e:	xor    r8d,r8d
   140040b91:	mov    ecx,0xc000008c
   140040b96:	lea    edx,[r9+0x1]
   140040b9a:	call   QWORD PTR [rip+0x2640]        # 0x1400431e0
   140040ba0:	int3   
   140040ba1:	int3   
   140040ba2:	int3   
   140040ba3:	int3   
   140040ba4:	rex push rbx
   140040ba6:	sub    rsp,0x20
   140040baa:	mov    rbx,rcx
   140040bad:	add    rcx,0x28
   140040bb1:	call   QWORD PTR [rip+0x2821]        # 0x1400433d8
   140040bb7:	mov    rcx,QWORD PTR [rbx+0x50]
   140040bbb:	test   rcx,rcx
   140040bbe:	je     0x140040bca
   140040bc0:	call   0x14002a380
   140040bc5:	and    QWORD PTR [rbx+0x50],0x0
   140040bca:	and    DWORD PTR [rbx+0x58],0x0
   140040bce:	and    DWORD PTR [rbx+0x5c],0x0
   140040bd2:	add    rsp,0x20
   140040bd6:	pop    rbx
   140040bd7:	ret    
   140040bd8:	mov    QWORD PTR [rsp+0x10],rbx
   140040bdd:	mov    QWORD PTR [rsp+0x18],rsi
   140040be2:	push   rdi
   140040be3:	sub    rsp,0xd0
   140040bea:	mov    rax,QWORD PTR [rip+0x1a38f]        # 0x14005af80
   140040bf1:	xor    rax,rsp
   140040bf4:	mov    QWORD PTR [rsp+0xc0],rax
   140040bfc:	xor    edx,edx
   140040bfe:	mov    rbx,rcx
   140040c01:	lea    r8d,[rdx+0x28]
   140040c05:	add    rcx,r8
   140040c08:	call   0x14002ac20
   140040c0d:	and    QWORD PTR [rbx+0x50],0x0
   140040c12:	and    DWORD PTR [rbx+0x58],0x0
   140040c16:	and    DWORD PTR [rbx+0x5c],0x0
   140040c1a:	lea    rax,[rip+0xfffffffffffbf3df]        # 0x140000000
   140040c21:	mov    esi,0x94
   140040c26:	lea    rcx,[rsp+0x20]
   140040c2b:	mov    r8,rsi
   140040c2e:	xor    edx,edx
   140040c30:	mov    QWORD PTR [rbx+0x10],rax
   140040c34:	mov    QWORD PTR [rbx+0x8],rax
   140040c38:	mov    DWORD PTR [rbx],0x60
   140040c3e:	mov    BYTE PTR [rbx+0x18],0x0
   140040c42:	call   0x14002ac20
   140040c47:	lea    rcx,[rsp+0x20]
   140040c4c:	mov    DWORD PTR [rsp+0x20],esi
   140040c50:	call   QWORD PTR [rip+0x2862]        # 0x1400434b8
   140040c56:	cmp    DWORD PTR [rsp+0x30],0x2
   140040c5b:	mov    esi,0x1
   140040c60:	jne    0x140040c6b
   140040c62:	cmp    DWORD PTR [rsp+0x24],0x5
   140040c67:	jb     0x140040c85
   140040c69:	jmp    0x140040c81
   140040c6b:	cmp    DWORD PTR [rsp+0x30],esi
   140040c6f:	jne    0x140040c85
   140040c71:	cmp    DWORD PTR [rsp+0x24],0x4
   140040c76:	ja     0x140040c81
   140040c78:	jne    0x140040c85
   140040c7a:	cmp    DWORD PTR [rsp+0x28],0x0
   140040c7f:	jbe    0x140040c85
   140040c81:	mov    BYTE PTR [rbx+0x18],sil
   140040c85:	lea    rax,[rip+0x9494]        # 0x14004a120
   140040c8c:	lea    rcx,[rbx+0x28]
   140040c90:	mov    DWORD PTR [rbx+0x1c],0x800
   140040c97:	mov    QWORD PTR [rbx+0x20],rax
   140040c9b:	call   0x140040a98
   140040ca0:	movzx  ecx,BYTE PTR [rip+0x212e1]        # 0x140061f88
   140040ca7:	test   eax,eax
   140040ca9:	mov    rax,rbx
   140040cac:	cmovs  ecx,esi
   140040caf:	mov    BYTE PTR [rip+0x212d3],cl        # 0x140061f88
   140040cb5:	mov    rcx,QWORD PTR [rsp+0xc0]
   140040cbd:	xor    rcx,rsp
   140040cc0:	call   0x140029b40
   140040cc5:	lea    r11,[rsp+0xd0]
   140040ccd:	mov    rbx,QWORD PTR [r11+0x18]
   140040cd1:	mov    rsi,QWORD PTR [r11+0x20]
   140040cd5:	mov    rsp,r11
   140040cd8:	pop    rdi
   140040cd9:	ret    
   140040cda:	jmp    QWORD PTR [rip+0x2de8]        # 0x140043ac8
   140040ce0:	jmp    QWORD PTR [rip+0x2dea]        # 0x140043ad0
   140040ce6:	jmp    QWORD PTR [rip+0x2d44]        # 0x140043a30
   140040cec:	jmp    QWORD PTR [rip+0x2dce]        # 0x140043ac0
   140040cf2:	jmp    QWORD PTR [rip+0x2dc0]        # 0x140043ab8
   140040cf8:	jmp    QWORD PTR [rip+0x2db2]        # 0x140043ab0
   140040cfe:	jmp    QWORD PTR [rip+0x2da4]        # 0x140043aa8
   140040d04:	jmp    QWORD PTR [rip+0x2d96]        # 0x140043aa0
   140040d0a:	jmp    QWORD PTR [rip+0x2d88]        # 0x140043a98
   140040d10:	jmp    QWORD PTR [rip+0x2d7a]        # 0x140043a90
   140040d16:	jmp    QWORD PTR [rip+0x2d6c]        # 0x140043a88
   140040d1c:	jmp    QWORD PTR [rip+0x2d5e]        # 0x140043a80
   140040d22:	jmp    QWORD PTR [rip+0x2d50]        # 0x140043a78
   140040d28:	jmp    QWORD PTR [rip+0x2d42]        # 0x140043a70
   140040d2e:	jmp    QWORD PTR [rip+0x2d34]        # 0x140043a68
   140040d34:	jmp    QWORD PTR [rip+0x2d26]        # 0x140043a60
   140040d3a:	jmp    QWORD PTR [rip+0x2d18]        # 0x140043a58
   140040d40:	jmp    QWORD PTR [rip+0x2d0a]        # 0x140043a50
   140040d46:	jmp    QWORD PTR [rip+0x2cfc]        # 0x140043a48
   140040d4c:	jmp    QWORD PTR [rip+0x2cee]        # 0x140043a40
   140040d52:	jmp    QWORD PTR [rip+0x2ce0]        # 0x140043a38
   140040d58:	lea    rax,[rip+0x1c549]        # 0x14005d2a8
   140040d5f:	jmp    0x140040d64
   140040d64:	mov    QWORD PTR [rsp+0x8],rcx
   140040d69:	mov    QWORD PTR [rsp+0x10],rdx
   140040d6e:	mov    QWORD PTR [rsp+0x18],r8
   140040d73:	mov    QWORD PTR [rsp+0x20],r9
   140040d78:	sub    rsp,0x68
   140040d7c:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140040d82:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140040d88:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140040d8e:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140040d94:	mov    rdx,rax
   140040d97:	lea    rcx,[rip+0x161f2]        # 0x140056f90
   140040d9e:	call   0x140040df8
   140040da3:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140040da9:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140040daf:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140040db5:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140040dbb:	mov    rcx,QWORD PTR [rsp+0x70]
   140040dc0:	mov    rdx,QWORD PTR [rsp+0x78]
   140040dc5:	mov    r8,QWORD PTR [rsp+0x80]
   140040dcd:	mov    r9,QWORD PTR [rsp+0x88]
   140040dd5:	add    rsp,0x68
   140040dd9:	jmp    0x140040ddb
   140040ddb:	jmp    rax
   140040ddd:	jmp    QWORD PTR [rip+0x1c4c5]        # 0x14005d2a8
   140040de3:	lea    rax,[rip+0x1c4b6]        # 0x14005d2a0
   140040dea:	jmp    0x140040d64
   140040def:	jmp    QWORD PTR [rip+0x1c4ab]        # 0x14005d2a0
   140040df5:	int3   
   140040df6:	int3   
   140040df7:	int3   
   140040df8:	mov    r11,rsp
   140040dfb:	mov    QWORD PTR [r11+0x20],rbx
   140040dff:	push   rbp
   140040e00:	push   rsi
   140040e01:	push   rdi
   140040e02:	push   r12
   140040e04:	push   r13
   140040e06:	push   r14
   140040e08:	push   r15
   140040e0a:	sub    rsp,0x70
   140040e0e:	mov    eax,DWORD PTR [rcx+0x4]
   140040e11:	mov    r9d,DWORD PTR [rcx]
   140040e14:	mov    r12d,DWORD PTR [rcx+0x8]
   140040e18:	mov    r10d,DWORD PTR [rcx+0xc]
   140040e1c:	mov    DWORD PTR [rsp+0x20],0x48
   140040e24:	mov    rsi,rcx
   140040e27:	mov    ecx,DWORD PTR [rcx+0x10]
   140040e2a:	mov    r14d,DWORD PTR [rsi+0x14]
   140040e2e:	mov    r15d,DWORD PTR [rsi+0x1c]
   140040e32:	mov    r13,rdx
   140040e35:	lea    rdx,[rip+0xfffffffffffbf1c4]        # 0x140000000
   140040e3c:	mov    QWORD PTR [r11-0x80],rsi
   140040e40:	add    rax,rdx
   140040e43:	mov    QWORD PTR [r11-0x78],r13
   140040e47:	and    r9d,0x1
   140040e4b:	mov    QWORD PTR [r11-0x70],rax
   140040e4f:	and    DWORD PTR [rsp+0x40],0x0
   140040e54:	xor    eax,eax
   140040e56:	and    QWORD PTR [r11-0x58],rax
   140040e5a:	and    QWORD PTR [r11-0x50],rax
   140040e5e:	mov    QWORD PTR [r11-0x60],rax
   140040e62:	and    DWORD PTR [rsp+0x60],eax
   140040e66:	add    r12,rdx
   140040e69:	add    r10,rdx
   140040e6c:	add    rcx,rdx
   140040e6f:	add    r14,rdx
   140040e72:	test   r9b,r9b
   140040e75:	jne    0x140040e9c
   140040e77:	xor    edx,edx
   140040e79:	lea    rax,[rsp+0x20]
   140040e7e:	lea    r9,[r11+0x8]
   140040e82:	lea    r8d,[rdx+0x1]
   140040e86:	mov    ecx,0xc06d0057
   140040e8b:	mov    QWORD PTR [r11+0x8],rax
   140040e8f:	call   QWORD PTR [rip+0x234b]        # 0x1400431e0
   140040e95:	xor    eax,eax
   140040e97:	jmp    0x1400410ce
   140040e9c:	mov    rdi,QWORD PTR [r12]
   140040ea0:	movabs rax,0x8000000000000000
   140040eaa:	mov    rbp,r13
   140040ead:	sub    rbp,r10
   140040eb0:	sar    rbp,0x3
   140040eb4:	mov    ebp,ebp
   140040eb6:	test   QWORD PTR [rcx+rbp*8],rax
   140040eba:	mov    eax,0x0
   140040ebf:	sete   al
   140040ec2:	test   eax,eax
   140040ec4:	mov    DWORD PTR [rsp+0x40],eax
   140040ec8:	je     0x140040ede
   140040eca:	mov    eax,DWORD PTR [rcx+rbp*8]
   140040ecd:	lea    rcx,[rip+0xfffffffffffbf12e]        # 0x140000002
   140040ed4:	add    rax,rcx
   140040ed7:	mov    QWORD PTR [rsp+0x48],rax
   140040edc:	jmp    0x140040ee6
   140040ede:	movzx  eax,WORD PTR [rcx+rbp*8]
   140040ee2:	mov    DWORD PTR [rsp+0x48],eax
   140040ee6:	mov    rax,QWORD PTR [rip+0x20ed3]        # 0x140061dc0
   140040eed:	xor    ebx,ebx
   140040eef:	test   rax,rax
   140040ef2:	je     0x140040f10
   140040ef4:	lea    rdx,[rsp+0x20]
   140040ef9:	xor    ecx,ecx
   140040efb:	call   rax
   140040efd:	test   rax,rax
   140040f00:	mov    rbx,rax
   140040f03:	jne    0x1400410a4
   140040f09:	mov    rax,QWORD PTR [rip+0x20eb0]        # 0x140061dc0
   140040f10:	test   rdi,rdi
   140040f13:	jne    0x140040fe7
   140040f19:	test   rax,rax
   140040f1c:	je     0x140040f30
   140040f1e:	lea    rdx,[rsp+0x20]
   140040f23:	lea    ecx,[rdi+0x1]
   140040f26:	call   rax
   140040f28:	test   rax,rax
   140040f2b:	mov    rdi,rax
   140040f2e:	jne    0x140040f9b
   140040f30:	mov    rcx,QWORD PTR [rsp+0x38]
   140040f35:	call   QWORD PTR [rip+0x2555]        # 0x140043490
   140040f3b:	test   rax,rax
   140040f3e:	mov    rdi,rax
   140040f41:	jne    0x140040f9b
   140040f43:	call   QWORD PTR [rip+0x259f]        # 0x1400434e8
   140040f49:	mov    DWORD PTR [rsp+0x60],eax
   140040f4d:	mov    rax,QWORD PTR [rip+0x20e64]        # 0x140061db8
   140040f54:	test   rax,rax
   140040f57:	je     0x140040f6b
   140040f59:	lea    rdx,[rsp+0x20]
   140040f5e:	lea    ecx,[rdi+0x3]
   140040f61:	call   rax
   140040f63:	test   rax,rax
   140040f66:	mov    rdi,rax
   140040f69:	jne    0x140040f9b
   140040f6b:	xor    edx,edx
   140040f6d:	lea    rax,[rsp+0x20]
   140040f72:	lea    r9,[rsp+0xb8]
   140040f7a:	lea    r8d,[rdx+0x1]
   140040f7e:	mov    ecx,0xc06d007e
   140040f83:	mov    QWORD PTR [rsp+0xb8],rax
   140040f8b:	call   QWORD PTR [rip+0x224f]        # 0x1400431e0
   140040f91:	mov    rax,QWORD PTR [rsp+0x58]
   140040f96:	jmp    0x1400410ce
   140040f9b:	mov    rax,rdi
   140040f9e:	xchg   QWORD PTR [r12],rax
   140040fa2:	cmp    rax,rdi
   140040fa5:	je     0x140040fd7
   140040fa7:	cmp    DWORD PTR [rsi+0x18],0x0
   140040fab:	je     0x140040fe0
   140040fad:	mov    edx,0x10
   140040fb2:	lea    ecx,[rdx+0x30]
   140040fb5:	call   QWORD PTR [rip+0x251d]        # 0x1400434d8
   140040fbb:	test   rax,rax
   140040fbe:	je     0x140040fe0
   140040fc0:	mov    QWORD PTR [rax+0x8],rsi
   140040fc4:	mov    rcx,QWORD PTR [rip+0x20de5]        # 0x140061db0
   140040fcb:	mov    QWORD PTR [rax],rcx
   140040fce:	mov    QWORD PTR [rip+0x20ddb],rax        # 0x140061db0
   140040fd5:	jmp    0x140040fe0
   140040fd7:	mov    rcx,rdi
   140040fda:	call   QWORD PTR [rip+0x24a0]        # 0x140043480
   140040fe0:	mov    rax,QWORD PTR [rip+0x20dd9]        # 0x140061dc0
   140040fe7:	test   rax,rax
   140040fea:	mov    QWORD PTR [rsp+0x50],rdi
   140040fef:	je     0x140041000
   140040ff1:	lea    rdx,[rsp+0x20]
   140040ff6:	mov    ecx,0x2
   140040ffb:	call   rax
   140040ffd:	mov    rbx,rax
   140041000:	test   rbx,rbx
   140041003:	jne    0x1400410a0
   140041009:	cmp    DWORD PTR [rsi+0x14],ebx
   14004100c:	je     0x140041037
   14004100e:	cmp    DWORD PTR [rsi+0x1c],ebx
   140041011:	je     0x140041037
   140041013:	movsxd rax,DWORD PTR [rdi+0x3c]
   140041017:	cmp    DWORD PTR [rax+rdi*1],0x4550
   14004101e:	jne    0x140041037
   140041020:	cmp    DWORD PTR [rax+rdi*1+0x8],r15d
   140041025:	jne    0x140041037
   140041027:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   14004102c:	jne    0x140041037
   14004102e:	mov    rbx,QWORD PTR [r14+rbp*8]
   140041032:	test   rbx,rbx
   140041035:	jne    0x1400410a0
   140041037:	mov    rdx,QWORD PTR [rsp+0x48]
   14004103c:	mov    rcx,rdi
   14004103f:	call   QWORD PTR [rip+0x246b]        # 0x1400434b0
   140041045:	test   rax,rax
   140041048:	mov    rbx,rax
   14004104b:	jne    0x1400410a0
   14004104d:	call   QWORD PTR [rip+0x2495]        # 0x1400434e8
   140041053:	mov    DWORD PTR [rsp+0x60],eax
   140041057:	mov    rax,QWORD PTR [rip+0x20d5a]        # 0x140061db8
   14004105e:	test   rax,rax
   140041061:	je     0x140041070
   140041063:	lea    rdx,[rsp+0x20]
   140041068:	lea    ecx,[rbx+0x4]
   14004106b:	call   rax
   14004106d:	mov    rbx,rax
   140041070:	test   rbx,rbx
   140041073:	jne    0x1400410a0
   140041075:	lea    rax,[rsp+0x20]
   14004107a:	lea    r9,[rsp+0xc0]
   140041082:	lea    r8d,[rbx+0x1]
   140041086:	xor    edx,edx
   140041088:	mov    ecx,0xc06d007f
   14004108d:	mov    QWORD PTR [rsp+0xc0],rax
   140041095:	call   QWORD PTR [rip+0x2145]        # 0x1400431e0
   14004109b:	mov    rbx,QWORD PTR [rsp+0x58]
   1400410a0:	mov    QWORD PTR [r13+0x0],rbx
   1400410a4:	mov    rax,QWORD PTR [rip+0x20d15]        # 0x140061dc0
   1400410ab:	test   rax,rax
   1400410ae:	je     0x1400410cb
   1400410b0:	and    DWORD PTR [rsp+0x60],0x0
   1400410b5:	lea    rdx,[rsp+0x20]
   1400410ba:	mov    ecx,0x5
   1400410bf:	mov    QWORD PTR [rsp+0x50],rdi
   1400410c4:	mov    QWORD PTR [rsp+0x58],rbx
   1400410c9:	call   rax
   1400410cb:	mov    rax,rbx
   1400410ce:	mov    rbx,QWORD PTR [rsp+0xc8]
   1400410d6:	add    rsp,0x70
   1400410da:	pop    r15
   1400410dc:	pop    r14
   1400410de:	pop    r13
   1400410e0:	pop    r12
   1400410e2:	pop    rdi
   1400410e3:	pop    rsi
   1400410e4:	pop    rbp
   1400410e5:	ret    
   1400410e6:	int3   
   1400410e7:	int3   
   1400410e8:	jmp    0x140041110
   1400410ed:	int3   
   1400410ee:	int3   
   1400410ef:	int3   
   1400410f0:	sub    rsp,0x28
   1400410f4:	mov    edx,0x1
   1400410f9:	xor    ecx,ecx
   1400410fb:	call   0x140025258
   140041100:	call   0x1400242a8
   140041105:	add    rsp,0x28
   140041109:	jmp    0x1400252f0
   14004110e:	int3   
   14004110f:	int3   
   140041110:	mov    rax,rsp
   140041113:	mov    QWORD PTR [rax+0x8],rbx
   140041117:	mov    QWORD PTR [rax+0x10],rbp
   14004111b:	mov    QWORD PTR [rax+0x18],rsi
   14004111f:	mov    QWORD PTR [rax+0x20],rdi
   140041123:	push   r12
   140041125:	push   r13
   140041127:	push   r14
   140041129:	sub    rsp,0x20
   14004112d:	mov    ebx,r9d
   140041130:	mov    rdi,r8
   140041133:	mov    rsi,rdx
   140041136:	mov    rbp,rcx
   140041139:	or     r13d,0xffffffff
   14004113d:	call   0x14001f3b8
   140041142:	mov    r12,rax
   140041145:	call   0x14001f2e8
   14004114a:	mov    r9d,ebx
   14004114d:	mov    r14,QWORD PTR [rax+0x8]
   140041151:	mov    r8,rdi
   140041154:	mov    rdx,rsi
   140041157:	mov    rcx,rbp
   14004115a:	call   0x1400282b4
   14004115f:	test   eax,eax
   140041161:	je     0x1400411be
   140041163:	test   r14,r14
   140041166:	je     0x140041178
   140041168:	mov    rax,QWORD PTR [r14]
   14004116b:	mov    rcx,r14
   14004116e:	call   QWORD PTR [rax+0x120]
   140041174:	test   eax,eax
   140041176:	je     0x1400411be
   140041178:	mov    rax,QWORD PTR [r12]
   14004117c:	mov    rcx,r12
   14004117f:	call   QWORD PTR [rax+0xa0]
   140041185:	test   eax,eax
   140041187:	jne    0x1400411ae
   140041189:	cmp    QWORD PTR [r12+0x40],0x0
   14004118f:	je     0x14004119f
   140041191:	mov    rcx,QWORD PTR [r12+0x40]
   140041196:	mov    rax,QWORD PTR [rcx]
   140041199:	call   QWORD PTR [rax+0xc0]
   14004119f:	mov    rax,QWORD PTR [r12]
   1400411a3:	mov    rcx,r12
   1400411a6:	call   QWORD PTR [rax+0xd0]
   1400411ac:	jmp    0x1400411bb
   1400411ae:	mov    rax,QWORD PTR [r12]
   1400411b2:	mov    rcx,r12
   1400411b5:	call   QWORD PTR [rax+0xa8]
   1400411bb:	mov    r13d,eax
   1400411be:	call   0x140026cc0
   1400411c3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400411c8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400411cd:	mov    rsi,QWORD PTR [rsp+0x50]
   1400411d2:	mov    rdi,QWORD PTR [rsp+0x58]
   1400411d7:	mov    eax,r13d
   1400411da:	add    rsp,0x20
   1400411de:	pop    r14
   1400411e0:	pop    r13
   1400411e2:	pop    r12
   1400411e4:	ret    
   1400411e5:	int3   
   1400411e6:	int3   
   1400411e7:	int3   
   1400411e8:	int3   
   1400411e9:	int3   
   1400411ea:	int3   
   1400411eb:	int3   
   1400411ec:	int3   
   1400411ed:	int3   
   1400411ee:	int3   
   1400411ef:	int3   
   1400411f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400411f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400411fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400411ff:	mov    QWORD PTR [rsp+0x20],rdi
   140041204:	push   r12
   140041206:	sub    rsp,0x20
   14004120a:	mov    r10,QWORD PTR [r9+0x38]
   14004120e:	mov    rsi,rdx
   140041211:	mov    r12,r8
   140041214:	mov    eax,DWORD PTR [r10]
   140041217:	mov    rbp,rcx
   14004121a:	mov    rdx,r9
   14004121d:	add    rax,rax
   140041220:	mov    rcx,rsi
   140041223:	mov    rdi,r9
   140041226:	lea    rbx,[r10+rax*8+0x4]
   14004122b:	mov    r8,rbx
   14004122e:	call   0x14002ab30
   140041233:	test   BYTE PTR [rbp+0x4],0x66
   140041237:	mov    r11d,DWORD PTR [rbx]
   14004123a:	jne    0x140041242
   14004123c:	and    r11d,0x1
   140041240:	jmp    0x140041246
   140041242:	and    r11d,0x2
   140041246:	test   r11d,r11d
   140041249:	je     0x14004125e
   14004124b:	mov    r9,rdi
   14004124e:	mov    r8,r12
   140041251:	mov    rdx,rsi
   140041254:	mov    rcx,rbp
   140041257:	call   0x14002b540
   14004125c:	jmp    0x140041263
   14004125e:	mov    eax,0x1
   140041263:	mov    rbx,QWORD PTR [rsp+0x30]
   140041268:	mov    rbp,QWORD PTR [rsp+0x38]
   14004126d:	mov    rsi,QWORD PTR [rsp+0x40]
   140041272:	mov    rdi,QWORD PTR [rsp+0x48]
   140041277:	add    rsp,0x20
   14004127b:	pop    r12
   14004127d:	ret    
   14004127e:	int3   
   14004127f:	int3   
   140041280:	sub    rsp,0x58
   140041284:	xor    r8d,r8d
   140041287:	movabs rcx,0x7fffffffffffffff
   140041291:	movsd  QWORD PTR [rsp+0x60],xmm0
   140041297:	mov    rdx,QWORD PTR [rsp+0x60]
   14004129c:	movsd  xmm1,xmm0
   1400412a0:	mov    rax,rdx
   1400412a3:	and    rax,rcx
   1400412a6:	movabs rcx,0x4340000000000000
   1400412b0:	cmp    rdx,rax
   1400412b3:	setne  r8b
   1400412b7:	cmp    rax,rcx
   1400412ba:	jb     0x14004131c
   1400412bc:	movabs rcx,0x7ff0000000000000
   1400412c6:	cmp    rax,rcx
   1400412c9:	jbe    0x140041399
   1400412cf:	xorpd  xmm0,xmm0
   1400412d3:	mov    eax,0x1
   1400412d8:	movabs r8,0x8000000000000
   1400412e2:	mov    DWORD PTR [rsp+0x40],eax
   1400412e6:	movsd  QWORD PTR [rsp+0x38],xmm0
   1400412ec:	movsd  QWORD PTR [rsp+0x30],xmm1
   1400412f2:	or     r8,rdx
   1400412f5:	lea    rcx,[rip+0xca8c]        # 0x14004dd88
   1400412fc:	lea    edx,[rax+0xb]
   1400412ff:	mov    r9d,eax
   140041302:	mov    DWORD PTR [rsp+0x28],0x21
   14004130a:	mov    DWORD PTR [rsp+0x20],0x0
   140041312:	call   0x1400413a0
   140041317:	add    rsp,0x58
   14004131b:	ret    
   14004131c:	movabs rcx,0x3ff0000000000000
   140041326:	cmp    rax,rcx
   140041329:	jae    0x14004135c
   14004132b:	test   rax,rax
   14004132e:	je     0x140041399
   140041330:	test   r8,r8
   140041333:	je     0x14004134f
   140041335:	movabs rax,0x8000000000000000
   14004133f:	mov    QWORD PTR [rsp+0x60],rax
   140041344:	movsd  xmm0,QWORD PTR [rsp+0x60]
   14004134a:	add    rsp,0x58
   14004134e:	ret    
   14004134f:	movsd  xmm0,QWORD PTR [rip+0xc281]        # 0x14004d5d8
   140041357:	add    rsp,0x58
   14004135b:	ret    
   14004135c:	mov    rax,rdx
   14004135f:	mov    ecx,0x33
   140041364:	shr    rax,0x34
   140041368:	sub    cl,al
   14004136a:	mov    eax,0x1
   14004136f:	shl    rax,cl
   140041372:	sub    rax,0x1
   140041376:	not    rax
   140041379:	and    rax,rdx
   14004137c:	test   r8,r8
   14004137f:	mov    QWORD PTR [rsp+0x60],rax
   140041384:	movsd  xmm0,QWORD PTR [rsp+0x60]
   14004138a:	jne    0x140041399
   14004138c:	cmp    rax,rdx
   14004138f:	je     0x140041399
   140041391:	addsd  xmm0,QWORD PTR [rip+0xc23f]        # 0x14004d5d8
   140041399:	add    rsp,0x58
   14004139d:	ret    
   14004139e:	int3   
   14004139f:	int3   
   1400413a0:	rex push rbx
   1400413a2:	push   rbp
   1400413a3:	push   rsi
   1400413a4:	push   rdi
   1400413a5:	push   r12
   1400413a7:	push   r13
   1400413a9:	sub    rsp,0x108
   1400413b0:	movaps XMMWORD PTR [rsp+0xf0],xmm6
   1400413b8:	mov    rax,QWORD PTR [rip+0x19bc1]        # 0x14005af80
   1400413bf:	xor    rax,rsp
   1400413c2:	mov    QWORD PTR [rsp+0xe0],rax
   1400413ca:	mov    r12d,edx
   1400413cd:	mov    r13,rcx
   1400413d0:	mov    edx,0xffc0
   1400413d5:	mov    ecx,0x1f80
   1400413da:	mov    esi,r9d
   1400413dd:	mov    rbx,r8
   1400413e0:	call   0x1400419b0
   1400413e5:	mov    edi,DWORD PTR [rsp+0x160]
   1400413ec:	mov    QWORD PTR [rsp+0x30],rax
   1400413f1:	mov    QWORD PTR [rsp+0x40],rbx
   1400413f6:	mov    ebx,edi
   1400413f8:	movsd  xmm0,QWORD PTR [rsp+0x40]
   1400413fe:	mov    rbp,QWORD PTR [rsp+0x30]
   140041403:	and    ebx,0x1f
   140041406:	movsd  QWORD PTR [rsp+0x38],xmm0
   14004140c:	test   dil,0x8
   140041410:	je     0x140041426
   140041412:	test   bpl,bpl
   140041415:	jns    0x140041426
   140041417:	mov    ecx,0x1
   14004141c:	call   0x140041a60
   140041421:	and    ebx,0xfffffff7
   140041424:	jmp    0x140041484
   140041426:	test   dil,0x4
   14004142a:	je     0x140041444
   14004142c:	bt     QWORD PTR [rsp+0x30],0x9
   140041433:	jae    0x140041444
   140041435:	mov    ecx,0x4
   14004143a:	call   0x140041a60
   14004143f:	and    ebx,0xfffffffb
   140041442:	jmp    0x140041484
   140041444:	test   dil,0x1
   140041448:	je     0x140041462
   14004144a:	bt     QWORD PTR [rsp+0x30],0xa
   140041451:	jae    0x140041462
   140041453:	mov    ecx,0x8
   140041458:	call   0x140041a60
   14004145d:	and    ebx,0xfffffffe
   140041460:	jmp    0x140041484
   140041462:	test   dil,0x2
   140041466:	je     0x140041484
   140041468:	bt     QWORD PTR [rsp+0x30],0xb
   14004146f:	jae    0x140041484
   140041471:	test   dil,0x10
   140041475:	je     0x140041481
   140041477:	mov    ecx,0x10
   14004147c:	call   0x140041a60
   140041481:	and    ebx,0xfffffffd
   140041484:	test   dil,0x10
   140041488:	je     0x14004149e
   14004148a:	bt     rbp,0xc
   14004148f:	jae    0x14004149e
   140041491:	mov    ecx,0x20
   140041496:	call   0x140041a60
   14004149b:	and    ebx,0xffffffef
   14004149e:	test   ebx,ebx
   1400414a0:	movsd  xmm6,QWORD PTR [rsp+0x178]
   1400414a9:	je     0x1400414fe
   1400414ab:	cmp    DWORD PTR [rsp+0x180],0x2
   1400414b3:	jne    0x1400414d2
   1400414b5:	mov    eax,DWORD PTR [rsp+0xb0]
   1400414bc:	movsd  QWORD PTR [rsp+0xa0],xmm6
   1400414c5:	and    eax,0xffffffe3
   1400414c8:	or     eax,0x3
   1400414cb:	mov    DWORD PTR [rsp+0xb0],eax
   1400414d2:	lea    rax,[rsp+0x38]
   1400414d7:	lea    rdx,[rsp+0x30]
   1400414dc:	lea    rcx,[rsp+0x70]
   1400414e1:	mov    QWORD PTR [rsp+0x28],rax
   1400414e6:	lea    rax,[rsp+0x170]
   1400414ee:	mov    r9d,r12d
   1400414f1:	mov    r8d,edi
   1400414f4:	mov    QWORD PTR [rsp+0x20],rax
   1400414f9:	call   0x140041900
   1400414fe:	cmp    DWORD PTR [rip+0x1bd6b],0x0        # 0x14005d270
   140041505:	jne    0x140041561
   140041507:	test   esi,esi
   140041509:	je     0x140041561
   14004150b:	movsd  xmm0,QWORD PTR [rsp+0x170]
   140041514:	movsd  xmm1,QWORD PTR [rsp+0x38]
   14004151a:	mov    rcx,QWORD PTR [rsp+0x30]
   14004151f:	mov    edx,0xffc0
   140041524:	mov    DWORD PTR [rsp+0x48],esi
   140041528:	mov    QWORD PTR [rsp+0x50],r13
   14004152d:	movsd  QWORD PTR [rsp+0x58],xmm0
   140041533:	movsd  QWORD PTR [rsp+0x68],xmm1
   140041539:	movsd  QWORD PTR [rsp+0x60],xmm6
   14004153f:	call   0x1400419b0
   140041544:	lea    rcx,[rsp+0x48]
   140041549:	call   0x140041960
   14004154e:	test   eax,eax
   140041550:	jne    0x140041559
   140041552:	mov    ecx,esi
   140041554:	call   0x140041930
   140041559:	movsd  xmm0,QWORD PTR [rsp+0x68]
   14004155f:	jmp    0x14004157d
   140041561:	mov    ecx,esi
   140041563:	call   0x140041930
   140041568:	mov    rcx,QWORD PTR [rsp+0x30]
   14004156d:	mov    edx,0xffc0
   140041572:	call   0x1400419b0
   140041577:	movsd  xmm0,QWORD PTR [rsp+0x38]
   14004157d:	mov    rcx,QWORD PTR [rsp+0xe0]
   140041585:	xor    rcx,rsp
   140041588:	call   0x140029b40
   14004158d:	movaps xmm6,XMMWORD PTR [rsp+0xf0]
   140041595:	add    rsp,0x108
   14004159c:	pop    r13
   14004159e:	pop    r12
   1400415a0:	pop    rdi
   1400415a1:	pop    rsi
   1400415a2:	pop    rbp
   1400415a3:	pop    rbx
   1400415a4:	ret    
   1400415a5:	int3   
   1400415a6:	int3   
   1400415a7:	int3   
   1400415a8:	int3   
   1400415a9:	int3   
   1400415aa:	int3   
   1400415ab:	int3   
   1400415ac:	int3   
   1400415ad:	int3   
   1400415ae:	int3   
   1400415af:	int3   
   1400415b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400415b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400415ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400415bf:	push   rdi
   1400415c0:	sub    rsp,0x20
   1400415c4:	mov    rbx,rdx
   1400415c7:	xor    edx,edx
   1400415c9:	test   r8b,0x10
   1400415cd:	mov    DWORD PTR [rcx+0x4],edx
   1400415d0:	mov    rax,QWORD PTR [rsp+0x30]
   1400415d5:	mov    esi,r9d
   1400415d8:	mov    DWORD PTR [rax+0x8],edx
   1400415db:	mov    rax,QWORD PTR [rsp+0x30]
   1400415e0:	mov    DWORD PTR [rax+0xc],edx
   1400415e3:	je     0x1400415f5
   1400415e5:	mov    rax,QWORD PTR [rsp+0x30]
   1400415ea:	mov    edi,0xc000008f
   1400415ef:	or     DWORD PTR [rax+0x4],0x1
   1400415f3:	jmp    0x1400415f9
   1400415f5:	mov    edi,DWORD PTR [rsp+0x60]
   1400415f9:	test   r8b,0x2
   1400415fd:	je     0x14004160d
   1400415ff:	mov    rax,QWORD PTR [rsp+0x30]
   140041604:	mov    edi,0xc0000093
   140041609:	or     DWORD PTR [rax+0x4],0x2
   14004160d:	test   r8b,0x1
   140041611:	je     0x140041621
   140041613:	mov    rax,QWORD PTR [rsp+0x30]
   140041618:	mov    edi,0xc0000091
   14004161d:	or     DWORD PTR [rax+0x4],0x4
   140041621:	test   r8b,0x4
   140041625:	je     0x140041635
   140041627:	mov    rax,QWORD PTR [rsp+0x30]
   14004162c:	mov    edi,0xc000008e
   140041631:	or     DWORD PTR [rax+0x4],0x8
   140041635:	test   r8b,0x8
   140041639:	je     0x140041649
   14004163b:	mov    rax,QWORD PTR [rsp+0x30]
   140041640:	mov    edi,0xc0000090
   140041645:	or     DWORD PTR [rax+0x4],0x10
   140041649:	mov    rcx,QWORD PTR [rsp+0x30]
   14004164e:	mov    rax,QWORD PTR [rbx]
   140041651:	shr    rax,0x7
   140041655:	shl    eax,0x4
   140041658:	not    eax
   14004165a:	xor    eax,DWORD PTR [rcx+0x8]
   14004165d:	and    eax,0x10
   140041660:	xor    DWORD PTR [rcx+0x8],eax
   140041663:	mov    rcx,QWORD PTR [rsp+0x30]
   140041668:	mov    rax,QWORD PTR [rbx]
   14004166b:	shr    rax,0x9
   14004166f:	shl    eax,0x3
   140041672:	not    eax
   140041674:	xor    eax,DWORD PTR [rcx+0x8]
   140041677:	and    eax,0x8
   14004167a:	xor    DWORD PTR [rcx+0x8],eax
   14004167d:	mov    rcx,QWORD PTR [rsp+0x30]
   140041682:	mov    rax,QWORD PTR [rbx]
   140041685:	shr    rax,0xa
   140041689:	shl    eax,0x2
   14004168c:	not    eax
   14004168e:	xor    eax,DWORD PTR [rcx+0x8]
   140041691:	and    eax,0x4
   140041694:	xor    DWORD PTR [rcx+0x8],eax
   140041697:	mov    rcx,QWORD PTR [rsp+0x30]
   14004169c:	mov    rax,QWORD PTR [rbx]
   14004169f:	shr    rax,0xb
   1400416a3:	add    eax,eax
   1400416a5:	not    eax
   1400416a7:	xor    eax,DWORD PTR [rcx+0x8]
   1400416aa:	and    eax,0x2
   1400416ad:	xor    DWORD PTR [rcx+0x8],eax
   1400416b0:	mov    eax,DWORD PTR [rbx]
   1400416b2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400416b7:	shr    rax,0xc
   1400416bb:	not    eax
   1400416bd:	xor    eax,DWORD PTR [rcx+0x8]
   1400416c0:	and    eax,0x1
   1400416c3:	xor    DWORD PTR [rcx+0x8],eax
   1400416c6:	call   0x140041970
   1400416cb:	test   al,0x1
   1400416cd:	mov    r11,rax
   1400416d0:	je     0x1400416db
   1400416d2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400416d7:	or     DWORD PTR [rcx+0xc],0x10
   1400416db:	test   al,0x4
   1400416dd:	je     0x1400416e8
   1400416df:	mov    rcx,QWORD PTR [rsp+0x30]
   1400416e4:	or     DWORD PTR [rcx+0xc],0x8
   1400416e8:	test   al,0x8
   1400416ea:	je     0x1400416f5
   1400416ec:	mov    rax,QWORD PTR [rsp+0x30]
   1400416f1:	or     DWORD PTR [rax+0xc],0x4
   1400416f5:	test   r11b,0x10
   1400416f9:	je     0x140041704
   1400416fb:	mov    rax,QWORD PTR [rsp+0x30]
   140041700:	or     DWORD PTR [rax+0xc],0x2
   140041704:	test   r11b,0x20
   140041708:	je     0x140041713
   14004170a:	mov    rax,QWORD PTR [rsp+0x30]
   14004170f:	or     DWORD PTR [rax+0xc],0x1
   140041713:	mov    eax,DWORD PTR [rbx]
   140041715:	and    eax,0x6000
   14004171a:	je     0x140041762
   14004171c:	cmp    rax,0x2000
   140041722:	je     0x140041750
   140041724:	cmp    rax,0x4000
   14004172a:	je     0x14004173e
   14004172c:	cmp    rax,0x6000
   140041732:	jne    0x14004176a
   140041734:	mov    rax,QWORD PTR [rsp+0x30]
   140041739:	or     DWORD PTR [rax],0x3
   14004173c:	jmp    0x14004176a
   14004173e:	mov    rax,QWORD PTR [rsp+0x30]
   140041743:	and    DWORD PTR [rax],0xfffffffe
   140041746:	mov    rax,QWORD PTR [rsp+0x30]
   14004174b:	or     DWORD PTR [rax],0x2
   14004174e:	jmp    0x14004176a
   140041750:	mov    rax,QWORD PTR [rsp+0x30]
   140041755:	and    DWORD PTR [rax],0xfffffffd
   140041758:	mov    rax,QWORD PTR [rsp+0x30]
   14004175d:	or     DWORD PTR [rax],0x1
   140041760:	jmp    0x14004176a
   140041762:	mov    rax,QWORD PTR [rsp+0x30]
   140041767:	and    DWORD PTR [rax],0xfffffffc
   14004176a:	mov    rax,QWORD PTR [rsp+0x30]
   14004176f:	and    esi,0xfff
   140041775:	and    DWORD PTR [rax],0xfffe001f
   14004177b:	mov    rax,QWORD PTR [rsp+0x30]
   140041780:	shl    esi,0x5
   140041783:	or     DWORD PTR [rax],esi
   140041785:	mov    rax,QWORD PTR [rsp+0x30]
   14004178a:	mov    rsi,QWORD PTR [rsp+0x58]
   14004178f:	or     DWORD PTR [rax+0x20],0x1
   140041793:	cmp    DWORD PTR [rsp+0x60],0x0
   140041798:	je     0x1400417d0
   14004179a:	mov    rax,QWORD PTR [rsp+0x30]
   14004179f:	and    DWORD PTR [rax+0x20],0xffffffe1
   1400417a3:	mov    rax,QWORD PTR [rsp+0x50]
   1400417a8:	mov    ecx,DWORD PTR [rax]
   1400417aa:	mov    rax,QWORD PTR [rsp+0x30]
   1400417af:	mov    DWORD PTR [rax+0x10],ecx
   1400417b2:	mov    rax,QWORD PTR [rsp+0x30]
   1400417b7:	or     DWORD PTR [rax+0x60],0x1
   1400417bb:	mov    rax,QWORD PTR [rsp+0x30]
   1400417c0:	and    DWORD PTR [rax+0x60],0xffffffe1
   1400417c4:	mov    rax,QWORD PTR [rsp+0x30]
   1400417c9:	mov    ecx,DWORD PTR [rsi]
   1400417cb:	mov    DWORD PTR [rax+0x50],ecx
   1400417ce:	jmp    0x140041818
   1400417d0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400417d5:	mov    eax,DWORD PTR [rcx+0x20]
   1400417d8:	and    eax,0xffffffe3
   1400417db:	or     eax,0x2
   1400417de:	mov    DWORD PTR [rcx+0x20],eax
   1400417e1:	mov    rax,QWORD PTR [rsp+0x50]
   1400417e6:	mov    rcx,QWORD PTR [rax]
   1400417e9:	mov    rax,QWORD PTR [rsp+0x30]
   1400417ee:	mov    QWORD PTR [rax+0x10],rcx
   1400417f2:	mov    rax,QWORD PTR [rsp+0x30]
   1400417f7:	or     DWORD PTR [rax+0x60],0x1
   1400417fb:	mov    rdx,QWORD PTR [rsp+0x30]
   140041800:	mov    eax,DWORD PTR [rdx+0x60]
   140041803:	and    eax,0xffffffe3
   140041806:	or     eax,0x2
   140041809:	mov    DWORD PTR [rdx+0x60],eax
   14004180c:	mov    rax,QWORD PTR [rsp+0x30]
   140041811:	mov    rdx,QWORD PTR [rsi]
   140041814:	mov    QWORD PTR [rax+0x50],rdx
   140041818:	call   0x140041990
   14004181d:	xor    edx,edx
   14004181f:	lea    r9,[rsp+0x30]
   140041824:	lea    r8d,[rdx+0x1]
   140041828:	mov    ecx,edi
   14004182a:	call   QWORD PTR [rip+0x19b0]        # 0x1400431e0
   140041830:	mov    r11,QWORD PTR [rsp+0x30]
   140041835:	test   BYTE PTR [r11+0x8],0x10
   14004183a:	je     0x140041843
   14004183c:	and    QWORD PTR [rbx],0xffffffffffffff7f
   140041843:	test   BYTE PTR [r11+0x8],0x8
   140041848:	je     0x140041851
   14004184a:	and    QWORD PTR [rbx],0xfffffffffffffdff
   140041851:	test   BYTE PTR [r11+0x8],0x4
   140041856:	je     0x14004185f
   140041858:	and    QWORD PTR [rbx],0xfffffffffffffbff
   14004185f:	test   BYTE PTR [r11+0x8],0x2
   140041864:	je     0x14004186d
   140041866:	and    QWORD PTR [rbx],0xfffffffffffff7ff
   14004186d:	test   BYTE PTR [r11+0x8],0x1
   140041872:	je     0x14004187b
   140041874:	and    QWORD PTR [rbx],0xffffffffffffefff
   14004187b:	mov    eax,DWORD PTR [r11]
   14004187e:	and    eax,0x3
   140041881:	je     0x1400418bb
   140041883:	sub    eax,0x1
   140041886:	je     0x1400418ab
   140041888:	sub    eax,0x1
   14004188b:	je     0x14004189b
   14004188d:	cmp    eax,0x1
   140041890:	jne    0x1400418c2
   140041892:	or     QWORD PTR [rbx],0x6000
   140041899:	jmp    0x1400418c2
   14004189b:	and    QWORD PTR [rbx],0xffffffffffffdfff
   1400418a2:	or     QWORD PTR [rbx],0x4000
   1400418a9:	jmp    0x1400418c2
   1400418ab:	and    QWORD PTR [rbx],0xffffffffffffbfff
   1400418b2:	or     QWORD PTR [rbx],0x2000
   1400418b9:	jmp    0x1400418c2
   1400418bb:	and    QWORD PTR [rbx],0xffffffffffff9fff
   1400418c2:	cmp    DWORD PTR [rsp+0x60],0x0
   1400418c7:	je     0x1400418df
   1400418c9:	mov    eax,DWORD PTR [r11+0x50]
   1400418cd:	mov    DWORD PTR [rsi],eax
   1400418cf:	mov    rbx,QWORD PTR [rsp+0x38]
   1400418d4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400418d9:	add    rsp,0x20
   1400418dd:	pop    rdi
   1400418de:	ret    
   1400418df:	mov    rax,QWORD PTR [r11+0x50]
   1400418e3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400418e8:	mov    QWORD PTR [rsi],rax
   1400418eb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400418f0:	add    rsp,0x20
   1400418f4:	pop    rdi
   1400418f5:	ret    
   1400418f6:	int3   
   1400418f7:	int3   
   1400418f8:	int3   
   1400418f9:	int3   
   1400418fa:	int3   
   1400418fb:	int3   
   1400418fc:	int3   
   1400418fd:	int3   
   1400418fe:	int3   
   1400418ff:	int3   
   140041900:	sub    rsp,0x48
   140041904:	mov    rax,QWORD PTR [rsp+0x78]
   140041909:	mov    DWORD PTR [rsp+0x30],0x0
   140041911:	mov    QWORD PTR [rsp+0x28],rax
   140041916:	mov    rax,QWORD PTR [rsp+0x70]
   14004191b:	mov    QWORD PTR [rsp+0x20],rax
   140041920:	call   0x1400415b0
   140041925:	add    rsp,0x48
   140041929:	ret    
   14004192a:	int3   
   14004192b:	int3   
   14004192c:	int3   
   14004192d:	int3   
   14004192e:	int3   
   14004192f:	int3   
   140041930:	sub    rsp,0x28
   140041934:	cmp    ecx,0x1
   140041937:	je     0x140041950
   140041939:	jle    0x14004195b
   14004193b:	cmp    ecx,0x3
   14004193e:	jg     0x14004195b
   140041940:	call   0x14002bca0
   140041945:	mov    DWORD PTR [rax],0x22
   14004194b:	add    rsp,0x28
   14004194f:	ret    
   140041950:	call   0x14002bca0
   140041955:	mov    DWORD PTR [rax],0x21
   14004195b:	add    rsp,0x28
   14004195f:	ret    
   140041960:	xor    eax,eax
   140041962:	ret    
   140041963:	int3   
   140041964:	int3   
   140041965:	int3   
   140041966:	int3   
   140041967:	int3   
   140041968:	int3   
   140041969:	int3   
   14004196a:	int3   
   14004196b:	int3   
   14004196c:	int3   
   14004196d:	int3   
   14004196e:	int3   
   14004196f:	int3   
   140041970:	sub    rsp,0x28
   140041974:	call   0x140041b90
   140041979:	and    eax,0x3f
   14004197c:	add    rsp,0x28
   140041980:	ret    
   140041981:	int3   
   140041982:	int3   
   140041983:	int3   
   140041984:	int3   
   140041985:	int3   
   140041986:	int3   
   140041987:	int3   
   140041988:	int3   
   140041989:	int3   
   14004198a:	int3   
   14004198b:	int3   
   14004198c:	int3   
   14004198d:	int3   
   14004198e:	int3   
   14004198f:	int3   
   140041990:	rex push rbx
   140041992:	sub    rsp,0x20
   140041996:	call   0x140041b90
   14004199b:	mov    ebx,eax
   14004199d:	and    ebx,0x3f
   1400419a0:	call   0x140041a8a
   1400419a5:	mov    eax,ebx
   1400419a7:	add    rsp,0x20
   1400419ab:	pop    rbx
   1400419ac:	ret    
   1400419ad:	int3   
   1400419ae:	int3   
   1400419af:	int3   
   1400419b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400419b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400419ba:	push   rdi
   1400419bb:	sub    rsp,0x20
   1400419bf:	mov    rbx,rdx
   1400419c2:	mov    rdi,rcx
   1400419c5:	call   0x140041b90
   1400419ca:	mov    esi,eax
   1400419cc:	mov    DWORD PTR [rsp+0x38],eax
   1400419d0:	mov    ecx,ebx
   1400419d2:	not    ecx
   1400419d4:	or     ecx,0xffff807f
   1400419da:	and    ecx,eax
   1400419dc:	and    edi,ebx
   1400419de:	or     ecx,edi
   1400419e0:	mov    DWORD PTR [rsp+0x30],ecx
   1400419e4:	cmp    BYTE PTR [rip+0x1b889],0x0        # 0x14005d274
   1400419eb:	je     0x140041a12
   1400419ed:	test   cl,0x40
   1400419f0:	je     0x140041a12
   1400419f2:	call   0x140041a80
   1400419f7:	jmp    0x140041a10
   1400419f9:	mov    BYTE PTR [rip+0x1b874],0x0        # 0x14005d274
   140041a00:	mov    ecx,DWORD PTR [rsp+0x30]
   140041a04:	and    ecx,0xffffffbf
   140041a07:	call   0x140041a80
   140041a0c:	mov    esi,DWORD PTR [rsp+0x38]
   140041a10:	jmp    0x140041a1a
   140041a12:	and    ecx,0xffffffbf
   140041a15:	call   0x140041a80
   140041a1a:	mov    eax,esi
   140041a1c:	mov    rbx,QWORD PTR [rsp+0x40]
   140041a21:	mov    rsi,QWORD PTR [rsp+0x48]
   140041a26:	add    rsp,0x20
   140041a2a:	pop    rdi
   140041a2b:	ret    
   140041a2c:	int3   
   140041a2d:	int3   
   140041a2e:	int3   
   140041a2f:	int3   
   140041a30:	rex push rbp
   140041a32:	sub    rsp,0x20
   140041a36:	mov    rbp,rdx
   140041a39:	mov    rax,QWORD PTR [rcx]
   140041a3c:	mov    ecx,DWORD PTR [rax]
   140041a3e:	cmp    ecx,0xc0000005
   140041a44:	je     0x140041a52
   140041a46:	cmp    ecx,0xc000001d
   140041a4c:	je     0x140041a52
   140041a4e:	xor    eax,eax
   140041a50:	jmp    0x140041a57
   140041a52:	mov    eax,0x1
   140041a57:	add    rsp,0x20
   140041a5b:	pop    rbp
   140041a5c:	ret    
   140041a5d:	int3   
   140041a5e:	int3   
   140041a5f:	int3   
   140041a60:	rex push rbx
   140041a62:	sub    rsp,0x20
   140041a66:	mov    rbx,rcx
   140041a69:	call   0x140041b90
   140041a6e:	and    ebx,0x3f
   140041a71:	or     eax,ebx
   140041a73:	mov    ecx,eax
   140041a75:	add    rsp,0x20
   140041a79:	pop    rbx
   140041a7a:	jmp    0x140041a80
   140041a7f:	int3   
   140041a80:	mov    DWORD PTR [rsp+0x8],ecx
   140041a84:	ldmxcsr DWORD PTR [rsp+0x8]
   140041a89:	ret    
   140041a8a:	stmxcsr DWORD PTR [rsp+0x8]
   140041a8f:	mov    ecx,0xffffffc0
   140041a94:	and    DWORD PTR [rsp+0x8],ecx
   140041a98:	ldmxcsr DWORD PTR [rsp+0x8]
   140041a9d:	ret    
   140041a9e:	int3   
   140041a9f:	int3   
   140041aa0:	ucomisd xmm0,QWORD PTR [rip+0xc3a8]        # 0x14004de50
   140041aa8:	jae    0x140041abe
   140041aaa:	ucomisd xmm0,QWORD PTR [rip+0xc3a6]        # 0x14004de58
   140041ab2:	jbe    0x140041abe
   140041ab4:	cvtsd2si rcx,xmm0
   140041ab9:	cvtsi2sd xmm0,rcx
   140041abe:	ret    
   140041abf:	int3   
   140041ac0:	int3   
   140041ac1:	int3   
   140041ac2:	int3   
   140041ac3:	int3   
   140041ac4:	int3   
   140041ac5:	int3   
   140041ac6:	data16 data16 xchg ax,ax
   140041aca:	data16 data16 xchg ax,ax
   140041ace:	xchg   ax,ax
   140041ad0:	sub    rsp,0x10
   140041ad4:	mov    QWORD PTR [rsp],r10
   140041ad8:	mov    QWORD PTR [rsp+0x8],r11
   140041add:	xor    r11,r11
   140041ae0:	lea    r10,[rsp+0x18]
   140041ae5:	sub    r10,rax
   140041ae8:	cmovb  r10,r11
   140041aec:	mov    r11,QWORD PTR gs:0x10
   140041af5:	cmp    r10,r11
   140041af8:	jae    0x140041b10
   140041afa:	and    r10w,0xf000
   140041b00:	lea    r11,[r11-0x1000]
   140041b07:	mov    BYTE PTR [r11],0x0
   140041b0b:	cmp    r10,r11
   140041b0e:	jne    0x140041b00
   140041b10:	mov    r10,QWORD PTR [rsp]
   140041b14:	mov    r11,QWORD PTR [rsp+0x8]
   140041b19:	add    rsp,0x10
   140041b1d:	ret    
   140041b1e:	int3   
   140041b1f:	int3   
   140041b20:	int3   
   140041b21:	int3   
   140041b22:	int3   
   140041b23:	int3   
   140041b24:	int3   
   140041b25:	int3   
   140041b26:	data16 data16 xchg ax,ax
   140041b2a:	data16 data16 xchg ax,ax
   140041b2e:	xchg   ax,ax
   140041b30:	sub    rsp,0x18
   140041b34:	mov    QWORD PTR [rsp+0x20],rcx
   140041b39:	mov    QWORD PTR [rsp+0x28],rdx
   140041b3e:	mov    DWORD PTR [rsp+0x30],r8d
   140041b43:	mov    rdx,QWORD PTR [rdx]
   140041b46:	mov    rax,rcx
   140041b49:	call   0x140033db0
   140041b4e:	call   rax
   140041b50:	call   0x140033de0
   140041b55:	mov    rcx,rax
   140041b58:	mov    rdx,QWORD PTR [rsp+0x28]
   140041b5d:	mov    rdx,QWORD PTR [rdx]
   140041b60:	mov    r8d,0x2
   140041b66:	call   0x140033db0
   140041b6b:	mov    QWORD PTR [rsp+0x10],rax
   140041b70:	add    rsp,0x18
   140041b74:	ret    
   140041b75:	int3   
   140041b76:	int3   
   140041b77:	int3   
   140041b78:	int3   
   140041b79:	int3   
   140041b7a:	int3   
   140041b7b:	int3   
   140041b7c:	int3   
   140041b7d:	int3   
   140041b7e:	int3   
   140041b7f:	int3   
   140041b80:	int3   
   140041b81:	int3   
   140041b82:	int3   
   140041b83:	int3   
   140041b84:	int3   
   140041b85:	int3   
   140041b86:	data16 data16 xchg ax,ax
   140041b8a:	data16 data16 xchg ax,ax
   140041b8e:	xchg   ax,ax
   140041b90:	sub    rsp,0x8
   140041b94:	stmxcsr DWORD PTR [rsp]
   140041b98:	mov    eax,DWORD PTR [rsp]
   140041b9b:	add    rsp,0x8
   140041b9f:	ret    
   140041ba0:	sub    rsp,0x28
   140041ba4:	lea    rcx,[rip+0x20295]        # 0x140061e40
   140041bab:	xor    edx,edx
   140041bad:	call   0x140023230
   140041bb2:	lea    r11,[rip+0xad3f]        # 0x14004c8f8
   140041bb9:	lea    rcx,[rip+0x4e0]        # 0x1400420a0
   140041bc0:	mov    QWORD PTR [rip+0x20279],r11        # 0x140061e40
   140041bc7:	add    rsp,0x28
   140041bcb:	jmp    0x14002a980
   140041bd0:	lea    rcx,[rip+0x4d5]        # 0x1400420ac
   140041bd7:	jmp    0x14002a980
   140041bdc:	sub    rsp,0x28
   140041be0:	lea    rcx,[rip+0x37e9]        # 0x1400453d0
   140041be7:	call   QWORD PTR [rip+0x1ae3]        # 0x1400436d0
   140041bed:	mov    DWORD PTR [rip+0x1e735],eax        # 0x140060328
   140041bf3:	add    rsp,0x28
   140041bf7:	ret    
   140041bf8:	sub    rsp,0x28
   140041bfc:	lea    rcx,[rip+0x1e72d]        # 0x140060330
   140041c03:	call   0x140014cd0
   140041c08:	lea    rax,[rip+0x2619]        # 0x140044228
   140041c0f:	lea    r11,[rip+0x2732]        # 0x140044348
   140041c16:	mov    QWORD PTR [rip+0x1e773],rax        # 0x140060390
   140041c1d:	lea    rax,[rip+0x26ec]        # 0x140044310
   140041c24:	lea    rcx,[rip+0x48d]        # 0x1400420b8
   140041c2b:	mov    QWORD PTR [rip+0x1e766],rax        # 0x140060398
   140041c32:	xor    eax,eax
   140041c34:	mov    QWORD PTR [rip+0x1e6f5],r11        # 0x140060330
   140041c3b:	mov    QWORD PTR [rip+0x1e72e],rax        # 0x140060370
   140041c42:	mov    BYTE PTR [rip+0x1e730],al        # 0x140060378
   140041c48:	mov    QWORD PTR [rip+0x1e739],rax        # 0x140060388
   140041c4f:	mov    QWORD PTR [rip+0x1e74a],rax        # 0x1400603a0
   140041c56:	mov    DWORD PTR [rip+0x1e74c],eax        # 0x1400603a8
   140041c5c:	mov    QWORD PTR [rip+0x1e74d],rax        # 0x1400603b0
   140041c63:	mov    DWORD PTR [rip+0x1e74f],eax        # 0x1400603b8
   140041c69:	mov    QWORD PTR [rip+0x1e750],rax        # 0x1400603c0
   140041c70:	mov    QWORD PTR [rip+0x1e751],rax        # 0x1400603c8
   140041c77:	mov    QWORD PTR [rip+0x1e752],rax        # 0x1400603d0
   140041c7e:	add    rsp,0x28
   140041c82:	jmp    0x14002a980
   140041c87:	int3   
   140041c88:	sub    rsp,0x28
   140041c8c:	lea    rcx,[rip+0x1e74d]        # 0x1400603e0
   140041c93:	call   0x140014cd0
   140041c98:	lea    rax,[rip+0x2589]        # 0x140044228
   140041c9f:	lea    r11,[rip+0x26a2]        # 0x140044348
   140041ca6:	mov    QWORD PTR [rip+0x1e793],rax        # 0x140060440
   140041cad:	lea    rax,[rip+0x265c]        # 0x140044310
   140041cb4:	lea    rcx,[rip+0x409]        # 0x1400420c4
   140041cbb:	mov    QWORD PTR [rip+0x1e786],rax        # 0x140060448
   140041cc2:	xor    eax,eax
   140041cc4:	mov    QWORD PTR [rip+0x1e715],r11        # 0x1400603e0
   140041ccb:	mov    BYTE PTR [rip+0x1e757],al        # 0x140060428
   140041cd1:	mov    QWORD PTR [rip+0x1e760],rax        # 0x140060438
   140041cd8:	mov    QWORD PTR [rip+0x1e771],rax        # 0x140060450
   140041cdf:	mov    DWORD PTR [rip+0x1e773],eax        # 0x140060458
   140041ce5:	mov    QWORD PTR [rip+0x1e774],rax        # 0x140060460
   140041cec:	mov    DWORD PTR [rip+0x1e776],eax        # 0x140060468
   140041cf2:	mov    QWORD PTR [rip+0x1e777],rax        # 0x140060470
   140041cf9:	mov    QWORD PTR [rip+0x1e778],rax        # 0x140060478
   140041d00:	mov    QWORD PTR [rip+0x1e779],rax        # 0x140060480
   140041d07:	mov    QWORD PTR [rip+0x1e70e],0x1        # 0x140060420
   140041d12:	add    rsp,0x28
   140041d16:	jmp    0x14002a980
   140041d1b:	int3   
   140041d1c:	sub    rsp,0x28
   140041d20:	lea    rcx,[rip+0x1e769]        # 0x140060490
   140041d27:	call   0x140014cd0
   140041d2c:	or     QWORD PTR [rip+0x1e79c],0xffffffffffffffff        # 0x1400604d0
   140041d34:	lea    rax,[rip+0x24ed]        # 0x140044228
   140041d3b:	mov    QWORD PTR [rip+0x1e7ae],rax        # 0x1400604f0
   140041d42:	lea    rax,[rip+0x25c7]        # 0x140044310
   140041d49:	lea    r11,[rip+0x25f8]        # 0x140044348
   140041d50:	mov    QWORD PTR [rip+0x1e7a1],rax        # 0x1400604f8
   140041d57:	xor    eax,eax
   140041d59:	lea    rcx,[rip+0x370]        # 0x1400420d0
   140041d60:	mov    BYTE PTR [rip+0x1e772],al        # 0x1400604d8
   140041d66:	mov    QWORD PTR [rip+0x1e77b],rax        # 0x1400604e8
   140041d6d:	mov    QWORD PTR [rip+0x1e78c],rax        # 0x140060500
   140041d74:	mov    DWORD PTR [rip+0x1e78e],eax        # 0x140060508
   140041d7a:	mov    QWORD PTR [rip+0x1e78f],rax        # 0x140060510
   140041d81:	mov    DWORD PTR [rip+0x1e791],eax        # 0x140060518
   140041d87:	mov    QWORD PTR [rip+0x1e792],rax        # 0x140060520
   140041d8e:	mov    QWORD PTR [rip+0x1e793],rax        # 0x140060528
   140041d95:	mov    QWORD PTR [rip+0x1e794],rax        # 0x140060530
   140041d9c:	mov    QWORD PTR [rip+0x1e6ed],r11        # 0x140060490
   140041da3:	add    rsp,0x28
   140041da7:	jmp    0x14002a980
   140041dac:	sub    rsp,0x28
   140041db0:	lea    rcx,[rip+0x1e789]        # 0x140060540
   140041db7:	call   0x140014cd0
   140041dbc:	lea    rax,[rip+0x2465]        # 0x140044228
   140041dc3:	lea    r11,[rip+0x257e]        # 0x140044348
   140041dca:	mov    QWORD PTR [rip+0x1e7cf],rax        # 0x1400605a0
   140041dd1:	lea    rax,[rip+0x2538]        # 0x140044310
   140041dd8:	lea    rcx,[rip+0x2fd]        # 0x1400420dc
   140041ddf:	mov    QWORD PTR [rip+0x1e7c2],rax        # 0x1400605a8
   140041de6:	xor    eax,eax
   140041de8:	mov    QWORD PTR [rip+0x1e751],r11        # 0x140060540
   140041def:	mov    BYTE PTR [rip+0x1e793],al        # 0x140060588
   140041df5:	mov    QWORD PTR [rip+0x1e79c],rax        # 0x140060598
   140041dfc:	mov    QWORD PTR [rip+0x1e7ad],rax        # 0x1400605b0
   140041e03:	mov    DWORD PTR [rip+0x1e7af],eax        # 0x1400605b8
   140041e09:	mov    QWORD PTR [rip+0x1e7b0],rax        # 0x1400605c0
   140041e10:	mov    DWORD PTR [rip+0x1e7b2],eax        # 0x1400605c8
   140041e16:	mov    QWORD PTR [rip+0x1e7b3],rax        # 0x1400605d0
   140041e1d:	mov    QWORD PTR [rip+0x1e7b4],rax        # 0x1400605d8
   140041e24:	mov    QWORD PTR [rip+0x1e7b5],rax        # 0x1400605e0
   140041e2b:	mov    QWORD PTR [rip+0x1e74a],0xfffffffffffffffe        # 0x140060580
   140041e36:	add    rsp,0x28
   140041e3a:	jmp    0x14002a980
   140041e3f:	int3   
   140041e40:	lea    rcx,[rip+0x2a1]        # 0x1400420e8
   140041e47:	jmp    0x14002a980
   140041e4c:	lea    rcx,[rip+0x2a1]        # 0x1400420f4
   140041e53:	jmp    0x14002a980
   140041e58:	sub    rsp,0x28
   140041e5c:	lea    rcx,[rip+0x1e7cd]        # 0x140060630
   140041e63:	xor    edx,edx
   140041e65:	call   0x1400218f0
   140041e6a:	and    DWORD PTR [rip+0x1e7d3],0x0        # 0x140060644
   140041e71:	and    DWORD PTR [rip+0x1e7d0],0x0        # 0x140060648
   140041e78:	lea    rax,[rip+0x48e9]        # 0x140046768
   140041e7f:	lea    rcx,[rip+0x27a]        # 0x140042100
   140041e86:	mov    DWORD PTR [rip+0x1e8bc],0xf022        # 0x14006074c
   140041e90:	mov    QWORD PTR [rip+0x1e799],rax        # 0x140060630
   140041e97:	add    rsp,0x28
   140041e9b:	jmp    0x14002a980
   140041ea0:	sub    rsp,0x28
   140041ea4:	lea    rcx,[rip+0x1e8a5]        # 0x140060750
   140041eab:	xor    edx,edx
   140041ead:	call   0x1400218f0
   140041eb2:	and    DWORD PTR [rip+0x1e8ab],0x0        # 0x140060764
   140041eb9:	and    DWORD PTR [rip+0x1e8a8],0x0        # 0x140060768
   140041ec0:	lea    rax,[rip+0x48d9]        # 0x1400467a0
   140041ec7:	lea    rcx,[rip+0x242]        # 0x140042110
   140041ece:	mov    DWORD PTR [rip+0x1e994],0xf024        # 0x14006086c
   140041ed8:	mov    QWORD PTR [rip+0x1e871],rax        # 0x140060750
   140041edf:	add    rsp,0x28
   140041ee3:	jmp    0x14002a980
   140041ee8:	lea    rcx,[rip+0x231]        # 0x140042120
   140041eef:	jmp    0x14002a980
   140041ef4:	lea    rcx,[rip+0x235]        # 0x140042130
   140041efb:	jmp    0x14002a980
   140041f00:	lea    rcx,[rip+0x239]        # 0x140042140
   140041f07:	jmp    0x14002a980
   140041f0c:	sub    rsp,0x28
   140041f10:	lea    rcx,[rip+0x1ecb9]        # 0x140060bd0
   140041f17:	call   0x140024774
   140041f1c:	lea    rcx,[rip+0x22d]        # 0x140042150
   140041f23:	add    rsp,0x28
   140041f27:	jmp    0x14002a980
   140041f2c:	lea    rcx,[rip+0x18eed]        # 0x14005ae20
   140041f33:	jmp    0x140022048
   140041f38:	sub    rsp,0x28
   140041f3c:	call   QWORD PTR [rip+0x14b6]        # 0x1400433f8
   140041f42:	bt     eax,0x1f
   140041f46:	jae    0x140041f54
   140041f48:	call   QWORD PTR [rip+0x14aa]        # 0x1400433f8
   140041f4e:	cmp    ax,0x4
   140041f52:	je     0x140041f6c
   140041f54:	call   QWORD PTR [rip+0x149e]        # 0x1400433f8
   140041f5a:	bt     eax,0x1f
   140041f5e:	jb     0x140041f81
   140041f60:	call   QWORD PTR [rip+0x1492]        # 0x1400433f8
   140041f66:	cmp    ax,0x3
   140041f6a:	jne    0x140041f81
   140041f6c:	lea    rcx,[rip+0x6305]        # 0x140048278
   140041f73:	call   QWORD PTR [rip+0x1757]        # 0x1400436d0
   140041f79:	mov    DWORD PTR [rip+0x1ed39],eax        # 0x140060cb8
   140041f7f:	jmp    0x140041f88
   140041f81:	and    DWORD PTR [rip+0x1ed30],0x0        # 0x140060cb8
   140041f88:	add    rsp,0x28
   140041f8c:	ret    
   140041f8d:	int3   
   140041f8e:	int3   
   140041f8f:	int3   
   140041f90:	lea    rcx,[rip+0x18f61]        # 0x14005aef8
   140041f97:	jmp    0x140022048
   140041f9c:	xor    eax,eax
   140041f9e:	lea    rcx,[rip+0x1b7]        # 0x14004215c
   140041fa5:	mov    QWORD PTR [rip+0x1fcfc],rax        # 0x140061ca8
   140041fac:	mov    QWORD PTR [rip+0x1fcfd],rax        # 0x140061cb0
   140041fb3:	mov    QWORD PTR [rip+0x1fcfe],rax        # 0x140061cb8
   140041fba:	mov    QWORD PTR [rip+0x1fcff],rax        # 0x140061cc0
   140041fc1:	jmp    0x14002a980
   140041fc6:	int3   
   140041fc7:	int3   
   140041fc8:	sub    rsp,0x28
   140041fcc:	lea    rcx,[rip+0x1fcf5]        # 0x140061cc8
   140041fd3:	call   0x140040940
   140041fd8:	lea    rcx,[rip+0x1b1]        # 0x140042190
   140041fdf:	add    rsp,0x28
   140041fe3:	jmp    0x14002a980
   140041fe8:	sub    rsp,0x28
   140041fec:	lea    rcx,[rip+0x1fd0d]        # 0x140061d00
   140041ff3:	call   0x140040bd8
   140041ff8:	lea    rcx,[rip+0x1dd]        # 0x1400421dc
   140041fff:	add    rsp,0x28
   140042003:	jmp    0x14002a980
   140042008:	sub    rsp,0x28
   14004200c:	xor    edx,edx
   14004200e:	lea    rcx,[rip+0x1fd53]        # 0x140061d68
   140042015:	lea    r8d,[rdx+0x28]
   140042019:	call   0x14002ac20
   14004201e:	and    QWORD PTR [rip+0x1fd72],0x0        # 0x140061d98
   140042026:	and    DWORD PTR [rip+0x1fd73],0x0        # 0x140061da0
   14004202d:	and    DWORD PTR [rip+0x1fd70],0x0        # 0x140061da4
   140042034:	and    QWORD PTR [rip+0x1fd54],0x0        # 0x140061d90
   14004203c:	lea    rcx,[rip+0x1fd25]        # 0x140061d68
   140042043:	mov    DWORD PTR [rip+0x1fd13],0x48        # 0x140061d60
   14004204d:	call   0x140040a98
   140042052:	test   eax,eax
   140042054:	jns    0x140042064
   140042056:	and    DWORD PTR [rip+0x1fd03],0x0        # 0x140061d60
   14004205d:	mov    BYTE PTR [rip+0x1ff24],0x1        # 0x140061f88
   140042064:	lea    rcx,[rip+0x17d]        # 0x1400421e8
   14004206b:	add    rsp,0x28
   14004206f:	jmp    0x14002a980
   140042074:	sub    rsp,0x28
   140042078:	call   0x14001f2e8
   14004207d:	lea    rcx,[rip+0xfffffffffffff06c]        # 0x1400410f0
   140042084:	mov    BYTE PTR [rax+0x28],0x0
   140042088:	call   0x14002a980
   14004208d:	mov    BYTE PTR [rip+0x1fd35],al        # 0x140061dc8
   140042093:	add    rsp,0x28
   140042097:	ret    
   140042098:	int3   
   140042099:	int3   
   14004209a:	int3   
   14004209b:	int3   
   14004209c:	int3   
   14004209d:	int3   
   14004209e:	int3   
   14004209f:	int3   
   1400420a0:	lea    rcx,[rip+0x1fd99]        # 0x140061e40
   1400420a7:	jmp    0x1400233a8
   1400420ac:	lea    rcx,[rip+0x1e53d]        # 0x1400605f0
   1400420b3:	jmp    0x140024a8c
   1400420b8:	lea    rcx,[rip+0x1e271]        # 0x140060330
   1400420bf:	jmp    0x140019964
   1400420c4:	lea    rcx,[rip+0x1e315]        # 0x1400603e0
   1400420cb:	jmp    0x140019964
   1400420d0:	lea    rcx,[rip+0x1e3b9]        # 0x140060490
   1400420d7:	jmp    0x140019964
   1400420dc:	lea    rcx,[rip+0x1e45d]        # 0x140060540
   1400420e3:	jmp    0x140019964
   1400420e8:	lea    rcx,[rip+0x1e539]        # 0x140060628
   1400420ef:	jmp    0x14002522c
   1400420f4:	lea    rcx,[rip+0x1e525]        # 0x140060620
   1400420fb:	jmp    0x140024a8c
   140042100:	lea    rax,[rip+0x4661]        # 0x140046768
   140042107:	mov    QWORD PTR [rip+0x1e522],rax        # 0x140060630
   14004210e:	ret    
   14004210f:	int3   
   140042110:	lea    rax,[rip+0x4689]        # 0x1400467a0
   140042117:	mov    QWORD PTR [rip+0x1e632],rax        # 0x140060750
   14004211e:	ret    
   14004211f:	int3   
   140042120:	lea    rax,[rip+0x5349]        # 0x140047470
   140042127:	mov    QWORD PTR [rip+0x187a2],rax        # 0x14005a8d0
   14004212e:	ret    
   14004212f:	int3   
   140042130:	lea    rax,[rip+0x5371]        # 0x1400474a8
   140042137:	mov    QWORD PTR [rip+0x188b2],rax        # 0x14005a9f0
   14004213e:	ret    
   14004213f:	int3   
   140042140:	lea    rax,[rip+0x5399]        # 0x1400474e0
   140042147:	mov    QWORD PTR [rip+0x189c2],rax        # 0x14005ab10
   14004214e:	ret    
   14004214f:	int3   
   140042150:	lea    rcx,[rip+0x1ea79]        # 0x140060bd0
   140042157:	jmp    0x1400247e0
   14004215c:	rex push rbx
   14004215e:	sub    rsp,0x20
   140042162:	lea    rbx,[rip+0x1fb3f]        # 0x140061ca8
   140042169:	mov    rcx,QWORD PTR [rbx]
   14004216c:	test   rcx,rcx
   14004216f:	je     0x140042177
   140042171:	call   QWORD PTR [rip+0xf79]        # 0x1400430f0
   140042177:	lea    rax,[rip+0x1fb4a]        # 0x140061cc8
   14004217e:	add    rbx,0x8
   140042182:	cmp    rbx,rax
   140042185:	jl     0x140042169
   140042187:	add    rsp,0x20
   14004218b:	pop    rbx
   14004218c:	ret    
   14004218d:	int3   
   14004218e:	int3   
   14004218f:	int3   
   140042190:	sub    rsp,0x28
   140042194:	lea    rcx,[rip+0x1fb35]        # 0x140061cd0
   14004219b:	call   QWORD PTR [rip+0x139f]        # 0x140043540
   1400421a1:	mov    rcx,QWORD PTR [rip+0x1fb20]        # 0x140061cc8
   1400421a8:	test   rcx,rcx
   1400421ab:	je     0x1400421b2
   1400421ad:	call   0x140040d10
   1400421b2:	and    QWORD PTR [rip+0x1fb0e],0x0        # 0x140061cc8
   1400421ba:	lea    rcx,[rip+0x1fb0f]        # 0x140061cd0
   1400421c1:	call   QWORD PTR [rip+0x1371]        # 0x140043538
   1400421c7:	lea    rcx,[rip+0x1fb02]        # 0x140061cd0
   1400421ce:	add    rsp,0x28
   1400421d2:	rex.W jmp QWORD PTR [rip+0x11ff]        # 0x1400433d8
   1400421d9:	int3   
   1400421da:	int3   
   1400421db:	int3   
   1400421dc:	lea    rcx,[rip+0x1fb1d]        # 0x140061d00
   1400421e3:	jmp    0x140040ba4
   1400421e8:	sub    rsp,0x28
   1400421ec:	mov    rdx,QWORD PTR [rip+0x1fb15]        # 0x140061d08
   1400421f3:	lea    rcx,[rip+0x1fb66]        # 0x140061d60
   1400421fa:	call   0x140040aec
   1400421ff:	mov    rcx,QWORD PTR [rip+0x1fb92]        # 0x140061d98
   140042206:	test   rcx,rcx
   140042209:	je     0x140042218
   14004220b:	call   0x14002a380
   140042210:	and    QWORD PTR [rip+0x1fb80],0x0        # 0x140061d98
   140042218:	and    DWORD PTR [rip+0x1fb81],0x0        # 0x140061da0
   14004221f:	and    DWORD PTR [rip+0x1fb7e],0x0        # 0x140061da4
   140042226:	add    rsp,0x28
   14004222a:	ret    
