
91779f713e033d6d181d1f08e523c1356e3466308f19436fb9ebbc95f9364af0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x18],r8
   14000100d:	mov    QWORD PTR [rsp+0x20],r9
   140001012:	push   rbx
   140001013:	push   rbp
   140001014:	push   rsi
   140001015:	push   rdi
   140001016:	sub    rsp,0x28
   14000101a:	xor    ebp,ebp
   14000101c:	lea    rax,[rdx-0x1]
   140001020:	cmp    rax,0x7ffffffe
   140001026:	mov    rsi,rcx
   140001029:	mov    edi,ebp
   14000102b:	mov    ecx,0x80070057
   140001030:	cmova  edi,ecx
   140001033:	test   edi,edi
   140001035:	js     0x14000106c
   140001037:	lea    rbx,[rdx-0x1]
   14000103b:	mov    rcx,rsi
   14000103e:	mov    rdx,rbx
   140001041:	lea    r9,[rsp+0x68]
   140001046:	mov    edi,ebp
   140001048:	call   QWORD PTR [rip+0x729a]        # 0x1400082e8
   14000104e:	test   eax,eax
   140001050:	js     0x140001061
   140001052:	cdqe   
   140001054:	cmp    rax,rbx
   140001057:	ja     0x140001061
   140001059:	jne    0x140001074
   14000105b:	mov    WORD PTR [rsi+rbx*2],bp
   14000105f:	jmp    0x140001074
   140001061:	mov    WORD PTR [rsi+rbx*2],bp
   140001065:	mov    edi,0x8007007a
   14000106a:	jmp    0x140001074
   14000106c:	test   rdx,rdx
   14000106f:	je     0x140001074
   140001071:	mov    WORD PTR [rsi],bp
   140001074:	mov    eax,edi
   140001076:	add    rsp,0x28
   14000107a:	pop    rdi
   14000107b:	pop    rsi
   14000107c:	pop    rbp
   14000107d:	pop    rbx
   14000107e:	ret    
   14000107f:	int3   
   140001080:	int3   
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	rex push rbx
   14000108a:	sub    rsp,0x20
   14000108e:	cmp    DWORD PTR [rcx+0x7fc],0x1
   140001095:	mov    rbx,rcx
   140001098:	jne    0x1400010af
   14000109a:	cmp    DWORD PTR [rcx+0x804],0x0
   1400010a1:	jne    0x1400010af
   1400010a3:	add    rcx,0x1fc
   1400010aa:	call   0x140004e5c
   1400010af:	lea    rcx,[rbx+0x3f8]
   1400010b6:	call   0x1400042e4
   1400010bb:	add    rsp,0x20
   1400010bf:	pop    rbx
   1400010c0:	jmp    0x140002ab0
   1400010c5:	int3   
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400010d1:	push   rdi
   1400010d2:	sub    rsp,0x20
   1400010d6:	or     DWORD PTR [rcx+0xb5c],0xffffffff
   1400010dd:	mov    rbx,rcx
   1400010e0:	and    QWORD PTR [rcx+0xb50],0x0
   1400010e8:	and    DWORD PTR [rcx+0xb58],0x0
   1400010ef:	cmp    DWORD PTR [rcx+0xa7c],0x0
   1400010f6:	je     0x14000112d
   1400010f8:	cmp    DWORD PTR [rcx+0xa04],0x0
   1400010ff:	je     0x14000112d
   140001101:	mov    ecx,0x100
   140001106:	call   0x140002cb0
   14000110b:	mov    ecx,0x2
   140001110:	mov    rbx,rax
   140001113:	call   0x140007738
   140001118:	mov    rcx,rax
   14000111b:	mov    rdx,rbx
   14000111e:	call   0x140003964
   140001123:	mov    eax,0x1
   140001128:	jmp    0x1400011af
   14000112d:	lea    rdi,[rcx+0x5fc]
   140001134:	test   rdi,rdi
   140001137:	je     0x140001146
   140001139:	mov    rcx,rdi
   14000113c:	call   QWORD PTR [rip+0x6f76]        # 0x1400080b8
   140001142:	test   eax,eax
   140001144:	jne    0x140001156
   140001146:	cmp    DWORD PTR [rbx+0x800],0x0
   14000114d:	je     0x140001156
   14000114f:	mov    ecx,0x105
   140001154:	jmp    0x140001106
   140001156:	mov    eax,DWORD PTR [rbx+0x800]
   14000115c:	test   eax,eax
   14000115e:	je     0x14000116c
   140001160:	imul   eax,eax,0x3e8
   140001166:	mov    DWORD PTR [rbx+0xb5c],eax
   14000116c:	mov    rcx,rbx
   14000116f:	call   QWORD PTR [rip+0x6f43]        # 0x1400080b8
   140001175:	test   eax,eax
   140001177:	je     0x14000118a
   140001179:	mov    DWORD PTR [rbx+0xb58],0x1
   140001183:	mov    QWORD PTR [rbx+0xb50],rbx
   14000118a:	test   rdi,rdi
   14000118d:	je     0x1400011ad
   14000118f:	mov    rcx,rdi
   140001192:	call   QWORD PTR [rip+0x6f20]        # 0x1400080b8
   140001198:	test   eax,eax
   14000119a:	je     0x1400011ad
   14000119c:	mov    DWORD PTR [rbx+0xb58],0x1
   1400011a6:	mov    QWORD PTR [rbx+0xb50],rdi
   1400011ad:	xor    eax,eax
   1400011af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011b4:	add    rsp,0x20
   1400011b8:	pop    rdi
   1400011b9:	ret    
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400011c5:	mov    QWORD PTR [rsp+0x18],rsi
   1400011ca:	push   rbp
   1400011cb:	push   rdi
   1400011cc:	push   r12
   1400011ce:	push   r14
   1400011d0:	push   r15
   1400011d2:	lea    rbp,[rsp-0x970]
   1400011da:	sub    rsp,0xa70
   1400011e1:	mov    rax,QWORD PTR [rip+0x8e20]        # 0x14000a008
   1400011e8:	xor    rax,rsp
   1400011eb:	mov    QWORD PTR [rbp+0x960],rax
   1400011f2:	mov    rsi,rcx
   1400011f5:	mov    edi,0x1f8
   1400011fa:	xor    r15d,r15d
   1400011fd:	lea    rcx,[rbp+0x364]
   140001204:	mov    r8d,edi
   140001207:	mov    DWORD PTR [rbp+0x360],r15d
   14000120e:	xor    edx,edx
   140001210:	call   0x14000788e
   140001215:	mov    r8d,edi
   140001218:	mov    DWORD PTR [rsp+0x54],r15d
   14000121d:	xor    edx,edx
   14000121f:	mov    DWORD PTR [rbp+0x160],r15d
   140001226:	lea    rcx,[rbp+0x164]
   14000122d:	call   0x14000788e
   140001232:	movups xmm0,XMMWORD PTR [rip+0x71bf]        # 0x1400083f8
   140001239:	lea    ebx,[rdi-0x34]
   14000123c:	xor    edx,edx
   14000123e:	movups xmm1,XMMWORD PTR [rip+0x71c3]        # 0x140008408
   140001245:	lea    rcx,[rbp+0x798]
   14000124c:	mov    r8d,ebx
   14000124f:	movaps XMMWORD PTR [rbp+0x760],xmm0
   140001256:	movups xmm0,XMMWORD PTR [rip+0x71bb]        # 0x140008418
   14000125d:	movaps XMMWORD PTR [rbp+0x770],xmm1
   140001264:	movsd  xmm1,QWORD PTR [rip+0x71bc]        # 0x140008428
   14000126c:	movaps XMMWORD PTR [rbp+0x780],xmm0
   140001273:	movsd  QWORD PTR [rbp+0x790],xmm1
   14000127b:	call   0x14000788e
   140001280:	mov    r8d,edi
   140001283:	mov    DWORD PTR [rsp+0x60],r15d
   140001288:	xor    edx,edx
   14000128a:	lea    rcx,[rsp+0x64]
   14000128f:	call   0x14000788e
   140001294:	movups xmm0,XMMWORD PTR [rip+0x7195]        # 0x140008430
   14000129b:	mov    r8d,ebx
   14000129e:	xor    edx,edx
   1400012a0:	movups xmm1,XMMWORD PTR [rip+0x7199]        # 0x140008440
   1400012a7:	lea    rcx,[rbp+0x598]
   1400012ae:	movaps XMMWORD PTR [rbp+0x560],xmm0
   1400012b5:	movups xmm0,XMMWORD PTR [rip+0x7194]        # 0x140008450
   1400012bc:	movaps XMMWORD PTR [rbp+0x570],xmm1
   1400012c3:	movsd  xmm1,QWORD PTR [rip+0x7195]        # 0x140008460
   1400012cb:	movaps XMMWORD PTR [rbp+0x580],xmm0
   1400012d2:	movsd  QWORD PTR [rbp+0x590],xmm1
   1400012da:	call   0x14000788e
   1400012df:	mov    r12d,0xfe
   1400012e5:	mov    DWORD PTR [rsp+0x58],r15d
   1400012ea:	lea    rdx,[rsp+0x50]
   1400012ef:	mov    DWORD PTR [rsp+0x50],r12d
   1400012f4:	lea    rcx,[rbp+0x360]
   1400012fb:	call   QWORD PTR [rip+0x6e67]        # 0x140008168
   140001301:	test   eax,eax
   140001303:	jne    0x14000132f
   140001305:	lea    ecx,[rdi-0x1]
   140001308:	call   0x140002cb0
   14000130d:	mov    ecx,0x2
   140001312:	mov    rbx,rax
   140001315:	call   0x140007738
   14000131a:	mov    rcx,rax
   14000131d:	mov    rdx,rbx
   140001320:	call   0x140003964
   140001325:	mov    eax,0x1
   14000132a:	jmp    0x140001818
   14000132f:	mov    rcx,QWORD PTR [rsi+0xb50]
   140001336:	test   rcx,rcx
   140001339:	je     0x14000134f
   14000133b:	call   QWORD PTR [rip+0x6d77]        # 0x1400080b8
   140001341:	cmp    eax,0xd6
   140001346:	jbe    0x14000134f
   140001348:	mov    ecx,0x108
   14000134d:	jmp    0x140001308
   14000134f:	mov    rcx,rsi
   140001352:	call   0x140002084
   140001357:	mov    edi,0x1
   14000135c:	cmp    eax,edi
   14000135e:	jne    0x1400013bf
   140001360:	lea    ecx,[rdi+0x1]
   140001363:	call   0x140007738
   140001368:	mov    rbx,rax
   14000136b:	test   rax,rax
   14000136e:	je     0x1400013a5
   140001370:	mov    ecx,0x1389
   140001375:	call   0x140002cb0
   14000137a:	lea    r9,[rip+0x7177]        # 0x1400084f8
   140001381:	mov    QWORD PTR [rsp+0x20],rax
   140001386:	mov    r8d,edi
   140001389:	mov    edx,edi
   14000138b:	mov    rcx,rbx
   14000138e:	call   0x140003ca8
   140001393:	call   0x14000270c
   140001398:	mov    rdx,rax
   14000139b:	mov    rcx,rbx
   14000139e:	call   0x140003964
   1400013a3:	jmp    0x1400013b8
   1400013a5:	call   QWORD PTR [rip+0x6cf5]        # 0x1400080a0
   1400013ab:	test   eax,eax
   1400013ad:	jne    0x1400013b8
   1400013af:	lea    ecx,[rax+0x57]
   1400013b2:	call   QWORD PTR [rip+0x6c60]        # 0x140008018
   1400013b8:	mov    eax,edi
   1400013ba:	jmp    0x140001818
   1400013bf:	lea    rbx,[rsi+0x1fc]
   1400013c6:	test   rbx,rbx
   1400013c9:	je     0x14000146a
   1400013cf:	mov    rcx,rbx
   1400013d2:	call   QWORD PTR [rip+0x6ce0]        # 0x1400080b8
   1400013d8:	test   eax,eax
   1400013da:	je     0x14000146a
   1400013e0:	mov    rcx,rbx
   1400013e3:	call   0x1400045c0
   1400013e8:	test   eax,eax
   1400013ea:	je     0x140001410
   1400013ec:	lea    rdx,[rsi+0x200]
   1400013f3:	mov    r8d,r12d
   1400013f6:	lea    rcx,[rsp+0x60]
   1400013fb:	call   0x140003740
   140001400:	mov    r8d,r12d
   140001403:	lea    rdx,[rsp+0x60]
   140001408:	mov    rcx,rbx
   14000140b:	call   0x140003740
   140001410:	mov    rcx,rbx
   140001413:	call   0x140004904
   140001418:	test   eax,eax
   14000141a:	je     0x140001465
   14000141c:	mov    rcx,rbx
   14000141f:	call   0x140004628
   140001424:	test   eax,eax
   140001426:	jne    0x14000146a
   140001428:	lea    r8,[rsp+0x50]
   14000142d:	mov    DWORD PTR [rsp+0x50],r12d
   140001432:	lea    rdx,[rsp+0x60]
   140001437:	mov    rcx,rbx
   14000143a:	call   0x1400049e0
   14000143f:	test   eax,eax
   140001441:	jne    0x14000147e
   140001443:	mov    ecx,0x106
   140001448:	call   0x140002cb0
   14000144d:	mov    ecx,0x2
   140001452:	mov    rbx,rax
   140001455:	call   0x140007738
   14000145a:	mov    rcx,rax
   14000145d:	mov    rdx,rbx
   140001460:	jmp    0x14000139e
   140001465:	mov    rdx,rbx
   140001468:	jmp    0x140001471
   14000146a:	lea    rdx,[rbp+0x360]
   140001471:	mov    r8d,r12d
   140001474:	lea    rcx,[rsp+0x60]
   140001479:	call   0x140003740
   14000147e:	cmp    DWORD PTR [rsi+0xb58],r15d
   140001485:	je     0x140001499
   140001487:	cmp    DWORD PTR [rsi+0x800],r15d
   14000148e:	jne    0x140001499
   140001490:	cmp    DWORD PTR [rsi+0xa7c],r15d
   140001497:	jne    0x1400014aa
   140001499:	mov    rcx,rsi
   14000149c:	call   QWORD PTR [rip+0x6c16]        # 0x1400080b8
   1400014a2:	test   eax,eax
   1400014a4:	je     0x1400016c8
   1400014aa:	test   rbx,rbx
   1400014ad:	je     0x14000155a
   1400014b3:	mov    rcx,rbx
   1400014b6:	call   QWORD PTR [rip+0x6bfc]        # 0x1400080b8
   1400014bc:	test   eax,eax
   1400014be:	je     0x14000155a
   1400014c4:	mov    r8d,r12d
   1400014c7:	lea    rdx,[rip+0x6f9a]        # 0x140008468
   1400014ce:	lea    rcx,[rbp+0x160]
   1400014d5:	call   0x140003740
   1400014da:	lea    rcx,[rsp+0x60]
   1400014df:	call   0x1400045c0
   1400014e4:	lea    rcx,[rbp+0x160]
   1400014eb:	mov    r8d,r12d
   1400014ee:	lea    rdx,[rsp+0x64]
   1400014f3:	test   eax,eax
   1400014f5:	jne    0x1400014fc
   1400014f7:	lea    rdx,[rsp+0x60]
   1400014fc:	call   0x1400037e4
   140001501:	lea    r14,[rip+0x6f68]        # 0x140008470
   140001508:	mov    r8d,r12d
   14000150b:	mov    rdx,r14
   14000150e:	lea    rcx,[rbp+0x160]
   140001515:	call   0x1400037e4
   14000151a:	mov    r8d,r12d
   14000151d:	lea    rdx,[rip+0x6f54]        # 0x140008478
   140001524:	lea    rcx,[rbp+0x160]
   14000152b:	call   0x1400037e4
   140001530:	mov    r8d,r12d
   140001533:	lea    rcx,[rbp+0x160]
   14000153a:	mov    rdx,r14
   14000153d:	call   0x1400037e4
   140001542:	mov    rdx,QWORD PTR [rsi+0xb50]
   140001549:	lea    rcx,[rbp+0x160]
   140001550:	mov    r8d,r12d
   140001553:	call   0x1400037e4
   140001558:	jmp    0x140001577
   14000155a:	mov    r9,QWORD PTR [rsi+0xb50]
   140001561:	lea    r8,[rbp+0x560]
   140001568:	mov    rdx,r12
   14000156b:	lea    rcx,[rbp+0x160]
   140001572:	call   0x140001008
   140001577:	mov    QWORD PTR [rsp+0x30],r15
   14000157c:	lea    rcx,[rbp+0x160]
   140001583:	mov    DWORD PTR [rsp+0x28],0x80
   14000158b:	xor    r9d,r9d
   14000158e:	mov    r8d,edi
   140001591:	mov    DWORD PTR [rsp+0x20],0x3
   140001599:	mov    edx,0x40000000
   14000159e:	call   QWORD PTR [rip+0x6bb4]        # 0x140008158
   1400015a4:	mov    r14,rax
   1400015a7:	cmp    rax,0xffffffffffffffff
   1400015ab:	jne    0x1400015b7
   1400015ad:	mov    ecx,0x1f9
   1400015b2:	jmp    0x140001448
   1400015b7:	test   rbx,rbx
   1400015ba:	je     0x1400015ea
   1400015bc:	mov    rcx,rbx
   1400015bf:	call   QWORD PTR [rip+0x6af3]        # 0x1400080b8
   1400015c5:	test   eax,eax
   1400015c7:	je     0x1400015ea
   1400015c9:	lea    rax,[rsp+0x60]
   1400015ce:	test   rax,rax
   1400015d1:	jne    0x1400015d8
   1400015d3:	mov    eax,r15d
   1400015d6:	jmp    0x1400015e3
   1400015d8:	lea    rcx,[rsp+0x60]
   1400015dd:	call   QWORD PTR [rip+0x6ad5]        # 0x1400080b8
   1400015e3:	lea    rdx,[rsp+0x60]
   1400015e8:	jmp    0x14000160f
   1400015ea:	lea    rax,[rbp+0x360]
   1400015f1:	test   rax,rax
   1400015f4:	jne    0x1400015fb
   1400015f6:	mov    eax,r15d
   1400015f9:	jmp    0x140001608
   1400015fb:	lea    rcx,[rbp+0x360]
   140001602:	call   QWORD PTR [rip+0x6ab0]        # 0x1400080b8
   140001608:	lea    rdx,[rbp+0x360]
   14000160f:	lea    r9,[rsp+0x54]
   140001614:	mov    QWORD PTR [rsp+0x20],r15
   140001619:	lea    r8d,[rax+0x1]
   14000161d:	mov    rcx,r14
   140001620:	call   QWORD PTR [rip+0x6b2a]        # 0x140008150
   140001626:	test   eax,eax
   140001628:	jne    0x14000169f
   14000162a:	call   QWORD PTR [rip+0x6a70]        # 0x1400080a0
   140001630:	cmp    eax,0x4cf
   140001635:	je     0x14000166f
   140001637:	mov    ecx,0xfb
   14000163c:	call   0x140002cb0
   140001641:	mov    ecx,0x2
   140001646:	mov    rbx,rax
   140001649:	call   0x140007738
   14000164e:	mov    rdx,QWORD PTR [rsi+0xb50]
   140001655:	mov    QWORD PTR [rsp+0x20],rdx
   14000165a:	mov    edx,edi
   14000165c:	mov    r8d,edi
   14000165f:	mov    r9,rbx
   140001662:	mov    rcx,rax
   140001665:	call   0x140003ca8
   14000166a:	jmp    0x1400013b8
   14000166f:	mov    ecx,0x1fa
   140001674:	call   0x140002cb0
   140001679:	mov    ecx,0x2
   14000167e:	mov    rbx,rax
   140001681:	call   0x140007738
   140001686:	mov    rcx,rax
   140001689:	mov    rdx,rbx
   14000168c:	call   0x140003964
   140001691:	mov    rcx,r14
   140001694:	call   QWORD PTR [rip+0x6966]        # 0x140008000
   14000169a:	jmp    0x1400013b8
   14000169f:	mov    rcx,r14
   1400016a2:	call   QWORD PTR [rip+0x6958]        # 0x140008000
   1400016a8:	mov    ecx,edi
   1400016aa:	call   0x140007738
   1400016af:	mov    rcx,rax
   1400016b2:	lea    rdx,[rip+0x6deb]        # 0x1400084a4
   1400016b9:	call   0x140003964
   1400016be:	mov    ecx,0x1f6
   1400016c3:	jmp    0x1400017fc
   1400016c8:	test   rbx,rbx
   1400016cb:	je     0x14000172c
   1400016cd:	mov    rcx,rbx
   1400016d0:	call   QWORD PTR [rip+0x69e2]        # 0x1400080b8
   1400016d6:	test   eax,eax
   1400016d8:	je     0x14000172c
   1400016da:	mov    rax,QWORD PTR [rsi+0xb50]
   1400016e1:	lea    r14,[rip+0x6d88]        # 0x140008470
   1400016e8:	mov    QWORD PTR [rsp+0x40],rax
   1400016ed:	lea    r9,[rip+0x6d74]        # 0x140008468
   1400016f4:	mov    QWORD PTR [rsp+0x38],r14
   1400016f9:	lea    rax,[rip+0x6d78]        # 0x140008478
   140001700:	mov    QWORD PTR [rsp+0x30],rax
   140001705:	lea    r8,[rip+0x6d9c]        # 0x1400084a8
   14000170c:	lea    rax,[rsp+0x60]
   140001711:	mov    QWORD PTR [rsp+0x28],r14
   140001716:	mov    rdx,r12
   140001719:	mov    QWORD PTR [rsp+0x20],rax
   14000171e:	lea    rcx,[rbp+0x160]
   140001725:	call   0x140001008
   14000172a:	jmp    0x140001749
   14000172c:	mov    r9,QWORD PTR [rsi+0xb50]
   140001733:	lea    r8,[rbp+0x760]
   14000173a:	mov    rdx,r12
   14000173d:	lea    rcx,[rbp+0x160]
   140001744:	call   0x140001008
   140001749:	mov    r8d,DWORD PTR [rsi+0xb5c]
   140001750:	lea    rcx,[rbp+0x160]
   140001757:	xor    r9d,r9d
   14000175a:	mov    edx,0x100
   14000175f:	call   QWORD PTR [rip+0x68a3]        # 0x140008008
   140001765:	mov    r14,rax
   140001768:	cmp    rax,0xffffffffffffffff
   14000176c:	jne    0x140001778
   14000176e:	mov    ecx,0xfc
   140001773:	jmp    0x140001448
   140001778:	lea    r9,[rsp+0x58]
   14000177d:	mov    QWORD PTR [rsp+0x20],r15
   140001782:	mov    r8d,r12d
   140001785:	lea    rdx,[rbp+0x360]
   14000178c:	mov    rcx,rax
   14000178f:	call   QWORD PTR [rip+0x687b]        # 0x140008010
   140001795:	mov    rcx,r14
   140001798:	mov    ebx,eax
   14000179a:	call   QWORD PTR [rip+0x6860]        # 0x140008000
   1400017a0:	test   ebx,ebx
   1400017a2:	jne    0x1400017e1
   1400017a4:	call   QWORD PTR [rip+0x68f6]        # 0x1400080a0
   1400017aa:	mov    r14d,eax
   1400017ad:	call   QWORD PTR [rip+0x68ed]        # 0x1400080a0
   1400017b3:	cmp    eax,0x79
   1400017b6:	jne    0x1400017c2
   1400017b8:	mov    ecx,0xfd
   1400017bd:	jmp    0x14000163c
   1400017c2:	mov    ecx,r12d
   1400017c5:	call   0x140002cb0
   1400017ca:	mov    ecx,0x2
   1400017cf:	mov    rbx,rax
   1400017d2:	call   0x140007738
   1400017d7:	mov    DWORD PTR [rsp+0x20],r14d
   1400017dc:	jmp    0x14000165a
   1400017e1:	mov    ecx,edi
   1400017e3:	call   0x140007738
   1400017e8:	mov    rcx,rax
   1400017eb:	lea    rdx,[rip+0x6cb2]        # 0x1400084a4
   1400017f2:	call   0x140003964
   1400017f7:	mov    ecx,0x1f5
   1400017fc:	call   0x140002cb0
   140001801:	mov    ecx,edi
   140001803:	mov    rbx,rax
   140001806:	call   0x140007738
   14000180b:	mov    rdx,rbx
   14000180e:	mov    rcx,rax
   140001811:	call   0x140003964
   140001816:	xor    eax,eax
   140001818:	mov    rcx,QWORD PTR [rbp+0x960]
   14000181f:	xor    rcx,rsp
   140001822:	call   0x140007220
   140001827:	lea    r11,[rsp+0xa70]
   14000182f:	mov    rbx,QWORD PTR [r11+0x38]
   140001833:	mov    rsi,QWORD PTR [r11+0x40]
   140001837:	mov    rsp,r11
   14000183a:	pop    r15
   14000183c:	pop    r14
   14000183e:	pop    r12
   140001840:	pop    rdi
   140001841:	pop    rbp
   140001842:	ret    
   140001843:	int3   
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	mov    QWORD PTR [rsp+0x8],rbx
   140001851:	mov    QWORD PTR [rsp+0x10],rbp
   140001856:	mov    QWORD PTR [rsp+0x18],rsi
   14000185b:	push   rdi
   14000185c:	push   r12
   14000185e:	push   r13
   140001860:	push   r14
   140001862:	push   r15
   140001864:	sub    rsp,0x30
   140001868:	lea    r12,[rcx+0x400]
   14000186f:	mov    rdi,r8
   140001872:	mov    esi,edx
   140001874:	mov    rbp,rcx
   140001877:	mov    rcx,r12
   14000187a:	lea    rdx,[rip+0x6c43]        # 0x1400084c4
   140001881:	mov    r8d,0xfe
   140001887:	call   0x140003740
   14000188c:	lea    rbx,[rbp+0x808]
   140001893:	xor    r14d,r14d
   140001896:	lea    rax,[rbp+0xb60]
   14000189d:	mov    DWORD PTR [rbx+0x8],0xa
   1400018a4:	mov    QWORD PTR [rbx+0x38],rax
   1400018a8:	lea    r13,[rip+0x6c21]        # 0x1400084d0
   1400018af:	lea    rax,[rip+0x6c12]        # 0x1400084c8
   1400018b6:	mov    QWORD PTR [rbx+0x18],0x1
   1400018be:	lea    r15d,[r14+0x8]
   1400018c2:	mov    QWORD PTR [rbx+0x10],0x20000
   1400018ca:	mov    r8d,r15d
   1400018cd:	mov    QWORD PTR [rbx+0x48],r14
   1400018d1:	mov    rdx,r13
   1400018d4:	mov    QWORD PTR [rbx+0x50],r14
   1400018d8:	mov    rcx,rbx
   1400018db:	mov    DWORD PTR [rbx+0x40],r14d
   1400018df:	mov    QWORD PTR [rbx+0x28],r14
   1400018e3:	mov    DWORD PTR [rbx+0x58],r14d
   1400018e7:	mov    QWORD PTR [rbx+0x60],r14
   1400018eb:	mov    QWORD PTR [rbx+0x68],r14
   1400018ef:	mov    QWORD PTR [rbx+0x70],r14
   1400018f3:	mov    QWORD PTR [rbx+0x30],r14
   1400018f7:	mov    QWORD PTR [rbx+0x20],rax
   1400018fb:	call   0x1400036b8
   140001900:	lea    rcx,[rbp+0x880]
   140001907:	xor    eax,eax
   140001909:	mov    QWORD PTR [rcx+0x48],rax
   14000190d:	lea    r14,[rbp+0x1fc]
   140001914:	mov    QWORD PTR [rcx+0x50],rax
   140001918:	mov    r8d,r15d
   14000191b:	mov    QWORD PTR [rcx+0x28],rax
   14000191f:	mov    rdx,r13
   140001922:	mov    DWORD PTR [rcx+0x58],eax
   140001925:	mov    QWORD PTR [rcx+0x60],rax
   140001929:	mov    QWORD PTR [rcx+0x68],rax
   14000192d:	mov    QWORD PTR [rcx+0x70],rax
   140001931:	mov    QWORD PTR [rcx+0x30],rax
   140001935:	lea    rax,[rip+0x6b9c]        # 0x1400084d8
   14000193c:	mov    QWORD PTR [rcx+0x20],rax
   140001940:	mov    DWORD PTR [rcx+0x8],0x1
   140001947:	mov    QWORD PTR [rcx+0x18],0x1
   14000194f:	mov    QWORD PTR [rcx+0x10],0x20c0
   140001957:	mov    QWORD PTR [rcx+0x38],r14
   14000195b:	mov    DWORD PTR [rcx+0x40],0xfe
   140001962:	call   0x1400036b8
   140001967:	lea    rcx,[rbp+0x8f8]
   14000196e:	mov    r8d,r15d
   140001971:	lea    eax,[r15-0x7]
   140001975:	mov    QWORD PTR [rcx+0x10],0x120c0
   14000197d:	mov    DWORD PTR [rcx+0x8],eax
   140001980:	mov    rdx,r13
   140001983:	mov    QWORD PTR [rcx+0x18],rax
   140001987:	xor    eax,eax
   140001989:	mov    QWORD PTR [rcx+0x38],rax
   14000198d:	mov    QWORD PTR [rcx+0x48],rax
   140001991:	mov    QWORD PTR [rcx+0x50],rax
   140001995:	mov    DWORD PTR [rcx+0x40],eax
   140001998:	mov    QWORD PTR [rcx+0x28],rax
   14000199c:	mov    DWORD PTR [rcx+0x58],eax
   14000199f:	mov    QWORD PTR [rcx+0x60],rax
   1400019a3:	mov    QWORD PTR [rcx+0x68],rax
   1400019a7:	mov    QWORD PTR [rcx+0x70],rax
   1400019ab:	mov    QWORD PTR [rcx+0x30],rax
   1400019af:	lea    rax,[rip+0x6b26]        # 0x1400084dc
   1400019b6:	mov    QWORD PTR [rcx+0x20],rax
   1400019ba:	call   0x1400036b8
   1400019bf:	lea    rcx,[rbp+0x970]
   1400019c6:	lea    eax,[r15-0x7]
   1400019ca:	mov    QWORD PTR [rcx+0x10],0x10
   1400019d2:	mov    DWORD PTR [rcx+0x8],eax
   1400019d5:	mov    QWORD PTR [rcx+0x18],rax
   1400019d9:	xor    eax,eax
   1400019db:	mov    QWORD PTR [rcx+0x38],r12
   1400019df:	mov    QWORD PTR [rcx+0x48],rax
   1400019e3:	mov    r8d,r15d
   1400019e6:	mov    QWORD PTR [rcx+0x50],rax
   1400019ea:	mov    rdx,r13
   1400019ed:	mov    QWORD PTR [rcx+0x28],rax
   1400019f1:	mov    DWORD PTR [rcx+0x58],eax
   1400019f4:	mov    QWORD PTR [rcx+0x60],rax
   1400019f8:	mov    QWORD PTR [rcx+0x68],rax
   1400019fc:	mov    QWORD PTR [rcx+0x70],rax
   140001a00:	mov    QWORD PTR [rcx+0x30],rax
   140001a04:	lea    rax,[rip+0x6ad5]        # 0x1400084e0
   140001a0b:	mov    QWORD PTR [rcx+0x20],rax
   140001a0f:	mov    DWORD PTR [rcx+0x40],0xfe
   140001a16:	call   0x1400036b8
   140001a1b:	lea    rcx,[rbp+0x9e8]
   140001a22:	mov    r8d,0x8
   140001a28:	lea    eax,[r15-0x7]
   140001a2c:	mov    QWORD PTR [rcx+0x38],rbp
   140001a30:	mov    DWORD PTR [rcx+0x8],eax
   140001a33:	mov    r15d,0x2000
   140001a39:	mov    QWORD PTR [rcx+0x18],rax
   140001a3d:	mov    rdx,r13
   140001a40:	xor    eax,eax
   140001a42:	mov    QWORD PTR [rcx+0x10],r15
   140001a46:	mov    QWORD PTR [rcx+0x48],rax
   140001a4a:	mov    QWORD PTR [rcx+0x50],rax
   140001a4e:	mov    QWORD PTR [rcx+0x28],rax
   140001a52:	mov    DWORD PTR [rcx+0x58],eax
   140001a55:	mov    QWORD PTR [rcx+0x60],rax
   140001a59:	mov    QWORD PTR [rcx+0x68],rax
   140001a5d:	mov    QWORD PTR [rcx+0x70],rax
   140001a61:	mov    QWORD PTR [rcx+0x30],rax
   140001a65:	lea    rax,[rip+0x6a78]        # 0x1400084e4
   140001a6c:	mov    QWORD PTR [rcx+0x20],rax
   140001a70:	mov    DWORD PTR [rcx+0x40],0xd7
   140001a77:	call   0x1400036b8
   140001a7c:	lea    rcx,[rbp+0xa60]
   140001a83:	xor    eax,eax
   140001a85:	mov    QWORD PTR [rcx+0x48],rax
   140001a89:	lea    r13,[rbp+0x800]
   140001a90:	mov    QWORD PTR [rcx+0x50],rax
   140001a94:	lea    rdx,[rip+0x6a35]        # 0x1400084d0
   140001a9b:	mov    QWORD PTR [rcx+0x28],rax
   140001a9f:	mov    r8d,0x8
   140001aa5:	mov    DWORD PTR [rcx+0x58],eax
   140001aa8:	mov    QWORD PTR [rcx+0x60],rax
   140001aac:	mov    QWORD PTR [rcx+0x68],rax
   140001ab0:	mov    QWORD PTR [rcx+0x70],rax
   140001ab4:	mov    QWORD PTR [rcx+0x30],rax
   140001ab8:	lea    rax,[rip+0x6a2d]        # 0x1400084ec
   140001abf:	mov    QWORD PTR [rcx+0x20],rax
   140001ac3:	mov    DWORD PTR [rcx+0x8],0x2
   140001aca:	mov    QWORD PTR [rcx+0x18],0x1
   140001ad2:	mov    QWORD PTR [rcx+0x10],r15
   140001ad6:	mov    QWORD PTR [rcx+0x38],r13
   140001ada:	mov    DWORD PTR [rcx+0x40],0xfe
   140001ae1:	call   0x1400036b8
   140001ae6:	lea    rcx,[rbp+0xad8]
   140001aed:	mov    eax,0x1
   140001af2:	mov    DWORD PTR [rcx+0x8],eax
   140001af5:	lea    r15,[rbp+0x5fc]
   140001afc:	mov    QWORD PTR [rcx+0x18],rax
   140001b00:	lea    rdx,[rip+0x69c9]        # 0x1400084d0
   140001b07:	xor    eax,eax
   140001b09:	mov    QWORD PTR [rcx+0x10],0x40000
   140001b11:	mov    QWORD PTR [rcx+0x48],rax
   140001b15:	mov    r8d,0x8
   140001b1b:	mov    QWORD PTR [rcx+0x50],rax
   140001b1f:	mov    QWORD PTR [rcx+0x28],rax
   140001b23:	mov    DWORD PTR [rcx+0x58],eax
   140001b26:	mov    QWORD PTR [rcx+0x60],rax
   140001b2a:	mov    QWORD PTR [rcx+0x68],rax
   140001b2e:	mov    QWORD PTR [rcx+0x70],rax
   140001b32:	mov    QWORD PTR [rcx+0x30],rax
   140001b36:	lea    rax,[rip+0x68b3]        # 0x1400083f0
   140001b3d:	mov    QWORD PTR [rcx+0x20],rax
   140001b41:	mov    QWORD PTR [rcx+0x38],r15
   140001b45:	mov    DWORD PTR [rcx+0x40],0xfe
   140001b4c:	call   0x1400036b8
   140001b51:	mov    rdx,rdi
   140001b54:	mov    QWORD PTR [rsp+0x20],rbx
   140001b59:	mov    ecx,esi
   140001b5b:	call   0x140006308
   140001b60:	xor    ebx,ebx
   140001b62:	test   eax,eax
   140001b64:	jne    0x140001bc8
   140001b66:	mov    ecx,0x1389
   140001b6b:	call   0x140002cb0
   140001b70:	mov    ecx,0x2
   140001b75:	mov    rbx,rax
   140001b78:	call   0x140007738
   140001b7d:	mov    rcx,rax
   140001b80:	mov    rdx,rbx
   140001b83:	call   0x140003964
   140001b88:	mov    ecx,0x2
   140001b8d:	call   0x140007738
   140001b92:	mov    rcx,rax
   140001b95:	lea    rdx,[rip+0x6954]        # 0x1400084f0
   140001b9c:	call   0x140003964
   140001ba1:	call   0x14000270c
   140001ba6:	mov    ecx,0x2
   140001bab:	mov    rbx,rax
   140001bae:	call   0x140007738
   140001bb3:	mov    rcx,rax
   140001bb6:	mov    rdx,rbx
   140001bb9:	call   0x140003964
   140001bbe:	mov    eax,0x1
   140001bc3:	jmp    0x140001db8
   140001bc8:	mov    rax,QWORD PTR [rbp+0x930]
   140001bcf:	xor    edx,edx
   140001bd1:	mov    rcx,rbp
   140001bd4:	mov    QWORD PTR [rbp+0x3f8],rax
   140001bdb:	call   0x140003474
   140001be0:	xor    edx,edx
   140001be2:	mov    rcx,r15
   140001be5:	call   0x140003474
   140001bea:	xor    edx,edx
   140001bec:	mov    rcx,r14
   140001bef:	call   0x140003474
   140001bf4:	mov    rcx,QWORD PTR [rbp+0x3f8]
   140001bfb:	xor    edx,edx
   140001bfd:	call   0x140003474
   140001c02:	test   r15,r15
   140001c05:	je     0x140001c2b
   140001c07:	mov    rcx,r15
   140001c0a:	call   QWORD PTR [rip+0x64a8]        # 0x1400080b8
   140001c10:	test   eax,eax
   140001c12:	je     0x140001c2b
   140001c14:	cmp    DWORD PTR [rbp+0xa04],ebx
   140001c1a:	je     0x140001c2b
   140001c1c:	mov    ecx,0x105
   140001c21:	call   0x140002cb0
   140001c26:	jmp    0x140001ba6
   140001c2b:	mov    eax,DWORD PTR [rbp+0x914]
   140001c31:	test   eax,eax
   140001c33:	je     0x140001c48
   140001c35:	cmp    DWORD PTR [rbp+0x89c],ebx
   140001c3b:	jne    0x140001c44
   140001c3d:	mov    ecx,0x10b
   140001c42:	jmp    0x140001c21
   140001c44:	test   eax,eax
   140001c46:	jne    0x140001c57
   140001c48:	cmp    DWORD PTR [rbp+0x98c],ebx
   140001c4e:	je     0x140001c57
   140001c50:	mov    ecx,0x10c
   140001c55:	jmp    0x140001c21
   140001c57:	test   r14,r14
   140001c5a:	je     0x140001c8d
   140001c5c:	mov    rcx,r14
   140001c5f:	call   QWORD PTR [rip+0x6453]        # 0x1400080b8
   140001c65:	test   eax,eax
   140001c67:	je     0x140001c71
   140001c69:	cmp    DWORD PTR [rbp+0xa04],ebx
   140001c6f:	je     0x140001c1c
   140001c71:	test   r14,r14
   140001c74:	je     0x140001c8d
   140001c76:	mov    rcx,r14
   140001c79:	call   QWORD PTR [rip+0x6439]        # 0x1400080b8
   140001c7f:	test   eax,eax
   140001c81:	je     0x140001c8d
   140001c83:	cmp    DWORD PTR [rbp+0xaf4],ebx
   140001c89:	je     0x140001cab
   140001c8b:	jmp    0x140001c1c
   140001c8d:	cmp    DWORD PTR [rbp+0xaf4],ebx
   140001c93:	je     0x140001cab
   140001c95:	test   r15,r15
   140001c98:	je     0x140001c1c
   140001c9a:	mov    rcx,r15
   140001c9d:	call   QWORD PTR [rip+0x6415]        # 0x1400080b8
   140001ca3:	test   eax,eax
   140001ca5:	je     0x140001c1c
   140001cab:	cmp    DWORD PTR [rbp+0xa04],ebx
   140001cb1:	je     0x140001cc4
   140001cb3:	mov    rcx,rbp
   140001cb6:	call   QWORD PTR [rip+0x63fc]        # 0x1400080b8
   140001cbc:	test   eax,eax
   140001cbe:	je     0x140001c1c
   140001cc4:	mov    eax,DWORD PTR [r13+0x0]
   140001cc8:	mov    edi,0x1
   140001ccd:	sub    eax,edi
   140001ccf:	cmp    eax,0x1869e
   140001cd4:	jbe    0x140001d05
   140001cd6:	cmp    DWORD PTR [rbp+0xa7c],ebx
   140001cdc:	je     0x140001d05
   140001cde:	mov    ecx,0x107
   140001ce3:	call   0x140002cb0
   140001ce8:	lea    ecx,[rdi+0x1]
   140001ceb:	mov    rbx,rax
   140001cee:	call   0x140007738
   140001cf3:	mov    rcx,rax
   140001cf6:	mov    rdx,rbx
   140001cf9:	call   0x140003964
   140001cfe:	mov    eax,edi
   140001d00:	jmp    0x140001db8
   140001d05:	mov    rcx,r14
   140001d08:	call   0x1400045c0
   140001d0d:	test   eax,eax
   140001d0f:	je     0x140001d26
   140001d11:	lea    rdx,[rbp+0x200]
   140001d18:	mov    r8d,0xfe
   140001d1e:	mov    rcx,r14
   140001d21:	call   0x140003740
   140001d26:	mov    rcx,r14
   140001d29:	call   0x140004628
   140001d2e:	test   eax,eax
   140001d30:	jne    0x140001db6
   140001d36:	cmp    DWORD PTR [rbp+0x98c],ebx
   140001d3c:	je     0x140001d6c
   140001d3e:	test   r12,r12
   140001d41:	je     0x140001d64
   140001d43:	xor    r9d,r9d
   140001d46:	lea    rdx,[rip+0x6777]        # 0x1400084c4
   140001d4d:	mov    r8d,edi
   140001d50:	mov    rcx,r12
   140001d53:	call   0x1400038d4
   140001d58:	test   eax,eax
   140001d5a:	jne    0x140001d64
   140001d5c:	mov    DWORD PTR [rbp+0x7f8],edi
   140001d62:	jmp    0x140001d9c
   140001d64:	cmp    DWORD PTR [rbp+0x98c],ebx
   140001d6a:	jne    0x140001d9c
   140001d6c:	cmp    DWORD PTR [rbp+0x89c],ebx
   140001d72:	jne    0x140001d7c
   140001d74:	cmp    DWORD PTR [rbp+0x914],ebx
   140001d7a:	je     0x140001d9c
   140001d7c:	mov    DWORD PTR [rbp+0x7f8],edi
   140001d82:	test   r12,r12
   140001d85:	je     0x140001d9c
   140001d87:	mov    r8d,0xfe
   140001d8d:	lea    rdx,[rip+0x665c]        # 0x1400083f0
   140001d94:	mov    rcx,r12
   140001d97:	call   0x140003740
   140001d9c:	cmp    QWORD PTR [rbp+0x3f8],rbx
   140001da3:	jne    0x140001db6
   140001da5:	mov    ecx,0x1fc
   140001daa:	call   0x1400043c0
   140001daf:	mov    QWORD PTR [rbp+0x3f8],rax
   140001db6:	xor    eax,eax
   140001db8:	mov    rbx,QWORD PTR [rsp+0x60]
   140001dbd:	mov    rbp,QWORD PTR [rsp+0x68]
   140001dc2:	mov    rsi,QWORD PTR [rsp+0x70]
   140001dc7:	add    rsp,0x30
   140001dcb:	pop    r15
   140001dcd:	pop    r14
   140001dcf:	pop    r13
   140001dd1:	pop    r12
   140001dd3:	pop    rdi
   140001dd4:	ret    
   140001dd5:	int3   
   140001dd6:	int3   
   140001dd7:	int3   
   140001dd8:	int3   
   140001dd9:	int3   
   140001dda:	int3   
   140001ddb:	int3   
   140001ddc:	mov    rax,rsp
   140001ddf:	mov    QWORD PTR [rax+0x8],rbx
   140001de3:	mov    QWORD PTR [rax+0x10],rsi
   140001de7:	mov    QWORD PTR [rax+0x18],rdi
   140001deb:	mov    QWORD PTR [rax+0x20],r12
   140001def:	push   r14
   140001df1:	sub    rsp,0x30
   140001df5:	lea    rsi,[rcx+0x1fc]
   140001dfc:	mov    rbx,rcx
   140001dff:	mov    rcx,rsi
   140001e02:	call   0x140004628
   140001e07:	mov    DWORD PTR [rbx+0x804],eax
   140001e0d:	test   eax,eax
   140001e0f:	je     0x140001e54
   140001e11:	mov    rcx,QWORD PTR [rbx+0x3f8]
   140001e18:	test   rcx,rcx
   140001e1b:	je     0x140001e54
   140001e1d:	call   QWORD PTR [rip+0x6295]        # 0x1400080b8
   140001e23:	test   eax,eax
   140001e25:	je     0x140001e54
   140001e27:	mov    ecx,0x2
   140001e2c:	call   0x140007738
   140001e31:	mov    rcx,rax
   140001e34:	lea    rdx,[rip+0x6669]        # 0x1400084a4
   140001e3b:	call   0x140003964
   140001e40:	mov    ecx,0x10a
   140001e45:	call   0x140002cb0
   140001e4a:	mov    ecx,0x2
   140001e4f:	jmp    0x140002042
   140001e54:	test   rsi,rsi
   140001e57:	je     0x140002055
   140001e5d:	mov    rcx,rsi
   140001e60:	call   QWORD PTR [rip+0x6252]        # 0x1400080b8
   140001e66:	test   eax,eax
   140001e68:	je     0x140001fcc
   140001e6e:	cmp    DWORD PTR [rbx+0x804],0x0
   140001e75:	jne    0x140001fcc
   140001e7b:	mov    rcx,QWORD PTR [rbx+0x3f8]
   140001e82:	mov    r12d,0xfe
   140001e88:	test   rcx,rcx
   140001e8b:	je     0x140001eab
   140001e8d:	call   QWORD PTR [rip+0x6225]        # 0x1400080b8
   140001e93:	test   eax,eax
   140001e95:	je     0x140001eab
   140001e97:	mov    rcx,QWORD PTR [rbx+0x3f8]
   140001e9e:	call   0x140004568
   140001ea3:	movsxd rcx,eax
   140001ea6:	shr    rcx,1
   140001ea9:	jmp    0x140001eae
   140001eab:	mov    rcx,r12
   140001eae:	mov    eax,DWORD PTR [rbx+0x7f8]
   140001eb4:	lea    r14,[rbx+0x400]
   140001ebb:	mov    rdx,QWORD PTR [rbx+0x3f8]
   140001ec2:	mov    r8d,ecx
   140001ec5:	mov    r9,r14
   140001ec8:	mov    DWORD PTR [rsp+0x28],eax
   140001ecc:	mov    rcx,rsi
   140001ecf:	call   0x140004f30
   140001ed4:	test   eax,eax
   140001ed6:	jne    0x140001f44
   140001ed8:	mov    ecx,0x1389
   140001edd:	call   0x140002cb0
   140001ee2:	mov    ecx,0x2
   140001ee7:	mov    rdi,rax
   140001eea:	call   0x140007738
   140001eef:	mov    rcx,rax
   140001ef2:	mov    rdx,rdi
   140001ef5:	call   0x140003964
   140001efa:	mov    ecx,0x2
   140001eff:	call   0x140007738
   140001f04:	mov    rcx,rax
   140001f07:	lea    rdx,[rip+0x65e2]        # 0x1400084f0
   140001f0e:	call   0x140003964
   140001f13:	call   0x14000270c
   140001f18:	mov    ecx,0x2
   140001f1d:	mov    rbx,rax
   140001f20:	call   0x140007738
   140001f25:	mov    rcx,rax
   140001f28:	mov    rdx,rbx
   140001f2b:	call   0x140003964
   140001f30:	xor    eax,eax
   140001f32:	mov    rcx,r12
   140001f35:	mov    rdi,r14
   140001f38:	rep stos BYTE PTR es:[rdi],al
   140001f3a:	mov    eax,0x1
   140001f3f:	jmp    0x140002057
   140001f44:	call   QWORD PTR [rip+0x6156]        # 0x1400080a0
   140001f4a:	cmp    eax,0x4c3
   140001f4f:	je     0x140001f63
   140001f51:	cmp    eax,0x50010001
   140001f56:	je     0x140002072
   140001f5c:	cmp    eax,0xa0010001
   140001f61:	jne    0x140001fc2
   140001f63:	and    DWORD PTR [rbx+0x7fc],0x0
   140001f6a:	mov    ecx,0x138a
   140001f6f:	call   0x140002cb0
   140001f74:	mov    ecx,0x2
   140001f79:	mov    rdi,rax
   140001f7c:	call   0x140007738
   140001f81:	mov    rcx,rax
   140001f84:	mov    rdx,rdi
   140001f87:	call   0x140003964
   140001f8c:	mov    ecx,0x2
   140001f91:	call   0x140007738
   140001f96:	mov    rcx,rax
   140001f99:	lea    rdx,[rip+0x6550]        # 0x1400084f0
   140001fa0:	call   0x140003964
   140001fa5:	call   0x14000270c
   140001faa:	mov    ecx,0x2
   140001faf:	mov    rdi,rax
   140001fb2:	call   0x140007738
   140001fb7:	mov    rcx,rax
   140001fba:	mov    rdx,rdi
   140001fbd:	call   0x140003964
   140001fc2:	mov    rdi,r14
   140001fc5:	xor    eax,eax
   140001fc7:	mov    rcx,r12
   140001fca:	rep stos BYTE PTR es:[rdi],al
   140001fcc:	test   rsi,rsi
   140001fcf:	je     0x140002055
   140001fd5:	mov    rcx,rsi
   140001fd8:	call   QWORD PTR [rip+0x60da]        # 0x1400080b8
   140001fde:	test   eax,eax
   140001fe0:	je     0x140002055
   140001fe2:	mov    rcx,rsi
   140001fe5:	call   0x1400045c0
   140001fea:	test   eax,eax
   140001fec:	lea    rcx,[rbx+0x200]
   140001ff3:	cmovne rsi,rcx
   140001ff7:	mov    rcx,rsi
   140001ffa:	call   0x140004628
   140001fff:	cmp    eax,0x1
   140002002:	jne    0x140002055
   140002004:	mov    rcx,QWORD PTR [rbx+0x3f8]
   14000200b:	test   rcx,rcx
   14000200e:	je     0x140002055
   140002010:	call   QWORD PTR [rip+0x60a2]        # 0x1400080b8
   140002016:	test   eax,eax
   140002018:	je     0x140002055
   14000201a:	mov    ecx,0x1
   14000201f:	call   0x140007738
   140002024:	mov    rcx,rax
   140002027:	lea    rdx,[rip+0x6476]        # 0x1400084a4
   14000202e:	call   0x140003964
   140002033:	mov    ecx,0x10a
   140002038:	call   0x140002cb0
   14000203d:	mov    ecx,0x1
   140002042:	mov    rdi,rax
   140002045:	call   0x140007738
   14000204a:	mov    rdx,rdi
   14000204d:	mov    rcx,rax
   140002050:	call   0x140003964
   140002055:	xor    eax,eax
   140002057:	mov    rbx,QWORD PTR [rsp+0x40]
   14000205c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002061:	mov    rdi,QWORD PTR [rsp+0x50]
   140002066:	mov    r12,QWORD PTR [rsp+0x58]
   14000206b:	add    rsp,0x30
   14000206f:	pop    r14
   140002071:	ret    
   140002072:	and    DWORD PTR [rbx+0x7fc],0x0
   140002079:	jmp    0x140001fc2
   14000207e:	int3   
   14000207f:	int3   
   140002080:	int3   
   140002081:	int3   
   140002082:	int3   
   140002083:	int3   
   140002084:	mov    QWORD PTR [rsp+0x10],rbx
   140002089:	mov    QWORD PTR [rsp+0x18],rbp
   14000208e:	push   rsi
   14000208f:	push   rdi
   140002090:	push   r14
   140002092:	sub    rsp,0x40
   140002096:	mov    rdi,QWORD PTR [rcx+0xb50]
   14000209d:	xor    ebx,ebx
   14000209f:	mov    rsi,rcx
   1400020a2:	test   rdi,rdi
   1400020a5:	jne    0x1400020c1
   1400020a7:	mov    ecx,0x7b
   1400020ac:	call   QWORD PTR [rip+0x5f66]        # 0x140008018
   1400020b2:	call   0x140002904
   1400020b7:	mov    eax,0x1
   1400020bc:	jmp    0x140002193
   1400020c1:	call   QWORD PTR [rip+0x5f61]        # 0x140008028
   1400020c7:	mov    QWORD PTR [rsp+0x38],rbx
   1400020cc:	or     r9d,0xffffffff
   1400020d0:	mov    QWORD PTR [rsp+0x30],rbx
   1400020d5:	mov    ecx,eax
   1400020d7:	mov    DWORD PTR [rsp+0x28],ebx
   1400020db:	mov    r8,rdi
   1400020de:	xor    edx,edx
   1400020e0:	mov    QWORD PTR [rsp+0x20],rbx
   1400020e5:	call   QWORD PTR [rip+0x5f35]        # 0x140008020
   1400020eb:	mov    ebp,eax
   1400020ed:	test   eax,eax
   1400020ef:	je     0x1400020a7
   1400020f1:	mov    rcx,QWORD PTR [rsi+0xb50]
   1400020f8:	test   rcx,rcx
   1400020fb:	jne    0x140002101
   1400020fd:	mov    eax,ebx
   1400020ff:	jmp    0x140002107
   140002101:	call   QWORD PTR [rip+0x5fb1]        # 0x1400080b8
   140002107:	lea    r14d,[rbp-0x1]
   14000210b:	cmp    eax,r14d
   14000210e:	jne    0x1400020a7
   140002110:	mov    ecx,ebp
   140002112:	call   0x1400043c0
   140002117:	mov    QWORD PTR [rsp+0x60],rax
   14000211c:	mov    rdi,rax
   14000211f:	test   rax,rax
   140002122:	jne    0x14000212b
   140002124:	mov    ecx,0x8007000e
   140002129:	jmp    0x1400020ac
   14000212b:	call   QWORD PTR [rip+0x5ef7]        # 0x140008028
   140002131:	mov    r8,QWORD PTR [rsi+0xb50]
   140002138:	or     r9d,0xffffffff
   14000213c:	mov    QWORD PTR [rsp+0x38],rbx
   140002141:	mov    ecx,eax
   140002143:	mov    QWORD PTR [rsp+0x30],rbx
   140002148:	xor    edx,edx
   14000214a:	mov    DWORD PTR [rsp+0x28],ebp
   14000214e:	mov    QWORD PTR [rsp+0x20],rdi
   140002153:	call   QWORD PTR [rip+0x5ec7]        # 0x140008020
   140002159:	test   r14d,r14d
   14000215c:	je     0x140002187
   14000215e:	mov    cl,BYTE PTR [rdi]
   140002160:	lea    eax,[rcx-0x30]
   140002163:	cmp    al,0x9
   140002165:	jbe    0x14000217d
   140002167:	lea    eax,[rcx-0x41]
   14000216a:	cmp    al,0x19
   14000216c:	jbe    0x14000217d
   14000216e:	lea    eax,[rcx-0x61]
   140002171:	cmp    al,0x19
   140002173:	jbe    0x14000217d
   140002175:	add    cl,0x80
   140002178:	cmp    cl,0x7f
   14000217b:	ja     0x1400021a6
   14000217d:	inc    ebx
   14000217f:	inc    rdi
   140002182:	cmp    ebx,r14d
   140002185:	jb     0x14000215e
   140002187:	lea    rcx,[rsp+0x60]
   14000218c:	call   0x1400042e4
   140002191:	xor    eax,eax
   140002193:	mov    rbx,QWORD PTR [rsp+0x68]
   140002198:	mov    rbp,QWORD PTR [rsp+0x70]
   14000219d:	add    rsp,0x40
   1400021a1:	pop    r14
   1400021a3:	pop    rdi
   1400021a4:	pop    rsi
   1400021a5:	ret    
   1400021a6:	lea    rcx,[rsp+0x60]
   1400021ab:	call   0x1400042e4
   1400021b0:	mov    ecx,0x109
   1400021b5:	call   0x140002cb0
   1400021ba:	mov    rcx,rax
   1400021bd:	call   0x14000274c
   1400021c2:	jmp    0x1400020b7
   1400021c7:	int3   
   1400021c8:	int3   
   1400021c9:	int3   
   1400021ca:	int3   
   1400021cb:	int3   
   1400021cc:	int3   
   1400021cd:	int3   
   1400021ce:	int3   
   1400021cf:	int3   
   1400021d0:	mov    rax,rsp
   1400021d3:	push   rbp
   1400021d4:	push   rdi
   1400021d5:	push   r14
   1400021d7:	lea    rbp,[rax-0xac8]
   1400021de:	sub    rsp,0xbb0
   1400021e5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400021ee:	mov    QWORD PTR [rax+0x8],rbx
   1400021f2:	mov    QWORD PTR [rax+0x18],rsi
   1400021f6:	mov    rax,QWORD PTR [rip+0x7e0b]        # 0x14000a008
   1400021fd:	xor    rax,rsp
   140002200:	mov    QWORD PTR [rbp+0xaa0],rax
   140002207:	mov    rdi,rdx
   14000220a:	mov    ebx,ecx
   14000220c:	mov    r14d,0xfe
   140002212:	mov    r8d,r14d
   140002215:	lea    rsi,[rip+0x61d8]        # 0x1400083f4
   14000221c:	mov    rdx,rsi
   14000221f:	lea    rcx,[rsp+0x30]
   140002224:	call   0x140003740
   140002229:	mov    r8d,r14d
   14000222c:	mov    rdx,rsi
   14000222f:	lea    rcx,[rbp+0x12c]
   140002236:	call   0x140003740
   14000223b:	mov    r8d,r14d
   14000223e:	mov    rdx,rsi
   140002241:	lea    rcx,[rbp+0x330]
   140002248:	call   0x140003740
   14000224d:	mov    r8d,r14d
   140002250:	mov    rdx,rsi
   140002253:	lea    rcx,[rbp+0x52c]
   14000225a:	call   0x140003740
   14000225f:	xor    r14d,r14d
   140002262:	mov    QWORD PTR [rbp+0x328],r14
   140002269:	mov    DWORD PTR [rbp+0x728],r14d
   140002270:	mov    QWORD PTR [rbp+0x730],r14
   140002277:	lea    esi,[r14+0x1]
   14000227b:	mov    DWORD PTR [rbp+0x72c],esi
   140002281:	mov    DWORD PTR [rbp+0xa90],r14d
   140002288:	xor    r9d,r9d
   14000228b:	xor    r8d,r8d
   14000228e:	mov    edx,esi
   140002290:	xor    ecx,ecx
   140002292:	call   QWORD PTR [rip+0x5d98]        # 0x140008030
   140002298:	cmp    ebx,esi
   14000229a:	jne    0x1400022c0
   14000229c:	mov    ecx,0x105
   1400022a1:	call   0x140002cb0
   1400022a6:	mov    rbx,rax
   1400022a9:	mov    ecx,0x2
   1400022ae:	call   0x140007738
   1400022b3:	mov    rcx,rax
   1400022b6:	mov    rdx,rbx
   1400022b9:	call   0x140003964
   1400022be:	jmp    0x14000233d
   1400022c0:	mov    r8,rdi
   1400022c3:	mov    edx,ebx
   1400022c5:	lea    rcx,[rsp+0x30]
   1400022ca:	call   0x14000184c
   1400022cf:	cmp    eax,esi
   1400022d1:	je     0x14000233d
   1400022d3:	cmp    DWORD PTR [rbp+0xa90],esi
   1400022d9:	jne    0x140002310
   1400022db:	cmp    ebx,0x2
   1400022de:	ja     0x14000229c
   1400022e0:	mov    edi,0x7d1
   1400022e5:	mov    ecx,edi
   1400022e7:	call   0x140002cb0
   1400022ec:	mov    rbx,rax
   1400022ef:	mov    ecx,esi
   1400022f1:	call   0x140007738
   1400022f6:	mov    rcx,rax
   1400022f9:	mov    rdx,rbx
   1400022fc:	call   0x140003964
   140002301:	add    edi,esi
   140002303:	cmp    edi,0x800
   140002309:	jbe    0x1400022e5
   14000230b:	mov    ebx,r14d
   14000230e:	jmp    0x14000233f
   140002310:	lea    rcx,[rsp+0x30]
   140002315:	call   0x1400010cc
   14000231a:	cmp    eax,esi
   14000231c:	je     0x14000233d
   14000231e:	lea    rcx,[rsp+0x30]
   140002323:	call   0x140001ddc
   140002328:	cmp    eax,esi
   14000232a:	je     0x14000233d
   14000232c:	lea    rcx,[rsp+0x30]
   140002331:	call   0x1400011c0
   140002336:	cmp    eax,esi
   140002338:	mov    ebx,r14d
   14000233b:	jne    0x14000233f
   14000233d:	mov    ebx,esi
   14000233f:	cmp    DWORD PTR [rbp+0x72c],esi
   140002345:	jne    0x14000235c
   140002347:	cmp    DWORD PTR [rbp+0x734],r14d
   14000234e:	jne    0x14000235c
   140002350:	lea    rcx,[rbp+0x12c]
   140002357:	call   0x140004e5c
   14000235c:	lea    rcx,[rbp+0x328]
   140002363:	call   0x1400042e4
   140002368:	call   0x140002ab0
   14000236d:	mov    eax,ebx
   14000236f:	mov    rcx,QWORD PTR [rbp+0xaa0]
   140002376:	xor    rcx,rsp
   140002379:	call   0x140007220
   14000237e:	lea    r11,[rsp+0xbb0]
   140002386:	mov    rbx,QWORD PTR [r11+0x20]
   14000238a:	mov    rsi,QWORD PTR [r11+0x30]
   14000238e:	mov    rsp,r11
   140002391:	pop    r14
   140002393:	pop    rdi
   140002394:	pop    rbp
   140002395:	ret    
   140002396:	int3   
   140002397:	int3   
   140002398:	int3   
   140002399:	int3   
   14000239a:	int3   
   14000239b:	int3   
   14000239c:	rex push rbx
   14000239e:	sub    rsp,0x20
   1400023a2:	cmp    DWORD PTR [rip+0x834b],0x1        # 0x14000a6f4
   1400023a9:	jne    0x1400023d4
   1400023ab:	mov    rcx,QWORD PTR [rip+0x8336]        # 0x14000a6e8
   1400023b2:	test   rcx,rcx
   1400023b5:	je     0x1400023c3
   1400023b7:	cmp    DWORD PTR [rcx],0x9
   1400023ba:	jne    0x1400023c3
   1400023bc:	mov    eax,0x1
   1400023c1:	jmp    0x140002408
   1400023c3:	call   QWORD PTR [rip+0x5cd7]        # 0x1400080a0
   1400023c9:	test   eax,eax
   1400023cb:	jne    0x140002406
   1400023cd:	mov    ecx,0x42b
   1400023d2:	jmp    0x140002400
   1400023d4:	xor    ebx,ebx
   1400023d6:	cmp    QWORD PTR [rip+0x830b],rbx        # 0x14000a6e8
   1400023dd:	jne    0x1400023c3
   1400023df:	lea    ecx,[rbx+0x18]
   1400023e2:	call   0x1400043c0
   1400023e7:	test   rax,rax
   1400023ea:	jne    0x14000240e
   1400023ec:	mov    QWORD PTR [rip+0x82f5],rbx        # 0x14000a6e8
   1400023f3:	call   QWORD PTR [rip+0x5ca7]        # 0x1400080a0
   1400023f9:	test   eax,eax
   1400023fb:	jne    0x140002406
   1400023fd:	lea    ecx,[rax+0x8]
   140002400:	call   QWORD PTR [rip+0x5c12]        # 0x140008018
   140002406:	xor    eax,eax
   140002408:	add    rsp,0x20
   14000240c:	pop    rbx
   14000240d:	ret    
   14000240e:	mov    QWORD PTR [rax],0x9
   140002415:	mov    QWORD PTR [rax+0x8],rbx
   140002419:	mov    QWORD PTR [rax+0x10],rbx
   14000241d:	mov    QWORD PTR [rip+0x82c4],rax        # 0x14000a6e8
   140002424:	cmp    DWORD PTR [rax],0x9
   140002427:	jne    0x1400023f3
   140002429:	lea    rdx,[rip+0x6104]        # 0x140008534
   140002430:	mov    rcx,rax
   140002433:	call   0x1400069b8
   140002438:	test   eax,eax
   14000243a:	jne    0x1400023f3
   14000243c:	call   0x140006bf4
   140002441:	cmp    eax,0x1
   140002444:	jne    0x1400023f3
   140002446:	call   0x140006bf4
   14000244b:	cmp    eax,0x2
   14000244e:	jne    0x1400023f3
   140002450:	call   0x140006bf4
   140002455:	cmp    eax,0x3
   140002458:	jne    0x1400023f3
   14000245a:	xor    ecx,ecx
   14000245c:	mov    DWORD PTR [rip+0x828e],0x1        # 0x14000a6f4
   140002466:	call   QWORD PTR [rip+0x5c84]        # 0x1400080f0
   14000246c:	test   ax,ax
   14000246f:	setne  bl
   140002472:	mov    eax,ebx
   140002474:	jmp    0x140002408
   140002476:	int3   
   140002477:	int3   
   140002478:	int3   
   140002479:	int3   
   14000247a:	int3   
   14000247b:	int3   
   14000247c:	rex push rbx
   14000247e:	sub    rsp,0x20
   140002482:	cmp    DWORD PTR [rip+0x826b],0x0        # 0x14000a6f4
   140002489:	mov    ebx,ecx
   14000248b:	je     0x1400024d7
   14000248d:	mov    edx,0x3
   140002492:	call   0x140006d04
   140002497:	cmp    eax,ebx
   140002499:	jbe    0x1400024d7
   14000249b:	mov    r8d,ebx
   14000249e:	call   0x140006e88
   1400024a3:	test   eax,eax
   1400024a5:	je     0x1400024d7
   1400024a7:	mov    r8d,ebx
   1400024aa:	call   0x140006d4c
   1400024af:	mov    rbx,rax
   1400024b2:	test   rax,rax
   1400024b5:	je     0x1400024d7
   1400024b7:	mov    r8d,0x7
   1400024bd:	lea    rdx,[rip+0x6068]        # 0x14000852c
   1400024c4:	mov    rcx,rax
   1400024c7:	call   QWORD PTR [rip+0x5e33]        # 0x140008300
   1400024cd:	test   eax,eax
   1400024cf:	jne    0x1400024d7
   1400024d1:	mov    rax,QWORD PTR [rbx+0x10]
   1400024d5:	jmp    0x1400024d9
   1400024d7:	xor    eax,eax
   1400024d9:	add    rsp,0x20
   1400024dd:	pop    rbx
   1400024de:	ret    
   1400024df:	int3   
   1400024e0:	int3   
   1400024e1:	int3   
   1400024e2:	int3   
   1400024e3:	int3   
   1400024e4:	int3   
   1400024e5:	int3   
   1400024e6:	int3   
   1400024e7:	int3   
   1400024e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400024ed:	mov    QWORD PTR [rsp+0x18],rbp
   1400024f2:	push   rsi
   1400024f3:	push   rdi
   1400024f4:	push   r14
   1400024f6:	sub    rsp,0x20
   1400024fa:	mov    r14d,r9d
   1400024fd:	mov    edi,r8d
   140002500:	mov    rsi,rdx
   140002503:	mov    ebp,ecx
   140002505:	test   rdx,rdx
   140002508:	jne    0x140002516
   14000250a:	test   r8d,r8d
   14000250d:	jne    0x140002516
   14000250f:	xor    eax,eax
   140002511:	jmp    0x1400026f0
   140002516:	call   0x14000239c
   14000251b:	test   eax,eax
   14000251d:	je     0x14000250f
   14000251f:	mov    edx,0x3
   140002524:	call   0x140006d04
   140002529:	mov    r10d,eax
   14000252c:	cmp    eax,ebp
   14000252e:	ja     0x140002570
   140002530:	mov    rcx,QWORD PTR [rip+0x81b1]        # 0x14000a6e8
   140002537:	xor    r8d,r8d
   14000253a:	call   0x140006698
   14000253f:	test   rax,rax
   140002542:	je     0x14000250f
   140002544:	cmp    DWORD PTR [rax+0x4],0x10000
   14000254b:	je     0x140002556
   14000254d:	cmp    DWORD PTR [rax+0x4],0x80000
   140002554:	jne    0x14000250f
   140002556:	mov    rcx,QWORD PTR [rax+0x10]
   14000255a:	test   rcx,rcx
   14000255d:	je     0x14000250f
   14000255f:	mov    edx,ebp
   140002561:	sub    edx,r10d
   140002564:	inc    edx
   140002566:	call   0x140006ca8
   14000256b:	cmp    eax,0xffffffff
   14000256e:	je     0x14000250f
   140002570:	mov    r8d,ebp
   140002573:	call   0x140006e88
   140002578:	test   eax,eax
   14000257a:	je     0x14000261f
   140002580:	mov    r8d,ebp
   140002583:	call   0x140006d4c
   140002588:	mov    rbx,rax
   14000258b:	test   rax,rax
   14000258e:	je     0x14000250f
   140002594:	mov    r8d,0x7
   14000259a:	lea    rdx,[rip+0x5f8b]        # 0x14000852c
   1400025a1:	mov    rcx,rbx
   1400025a4:	call   QWORD PTR [rip+0x5d56]        # 0x140008300
   1400025aa:	test   eax,eax
   1400025ac:	jne    0x14000250f
   1400025b2:	test   rsi,rsi
   1400025b5:	je     0x1400025c3
   1400025b7:	mov    rcx,rsi
   1400025ba:	call   QWORD PTR [rip+0x5af8]        # 0x1400080b8
   1400025c0:	lea    edi,[rax+0x1]
   1400025c3:	mov    ecx,DWORD PTR [rbx+0x8]
   1400025c6:	cmp    edi,ecx
   1400025c8:	ja     0x1400025d9
   1400025ca:	cmp    edi,0x100
   1400025d0:	jbe    0x1400025f9
   1400025d2:	lea    eax,[rdi+rdi*1]
   1400025d5:	cmp    eax,ecx
   1400025d7:	jae    0x1400025f9
   1400025d9:	test   ecx,ecx
   1400025db:	jne    0x1400026c6
   1400025e1:	lea    ecx,[rdi+rdi*1]
   1400025e4:	call   0x1400043c0
   1400025e9:	mov    QWORD PTR [rbx+0x10],rax
   1400025ed:	test   rax,rax
   1400025f0:	je     0x14000250f
   1400025f6:	mov    DWORD PTR [rbx+0x8],edi
   1400025f9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400025fd:	test   rcx,rcx
   140002600:	je     0x14000250f
   140002606:	test   rsi,rsi
   140002609:	je     0x1400026d9
   14000260f:	mov    r8d,edi
   140002612:	mov    rdx,rsi
   140002615:	call   0x140003740
   14000261a:	jmp    0x1400026ec
   14000261f:	mov    ecx,0x18
   140002624:	call   0x1400043c0
   140002629:	mov    QWORD PTR [rsp+0x48],rax
   14000262e:	mov    rbx,rax
   140002631:	test   rax,rax
   140002634:	je     0x14000250f
   14000263a:	and    DWORD PTR [rax+0x8],0x0
   14000263e:	lea    rdx,[rip+0x5ee7]        # 0x14000852c
   140002645:	and    QWORD PTR [rax+0x10],0x0
   14000264a:	mov    r8d,0x7
   140002650:	mov    rcx,rax
   140002653:	call   0x1400036b8
   140002658:	mov    rcx,QWORD PTR [rip+0x8089]        # 0x14000a6e8
   14000265f:	xor    r8d,r8d
   140002662:	lea    edx,[r8+0x3]
   140002666:	call   0x140006698
   14000266b:	test   rax,rax
   14000266e:	je     0x1400026ad
   140002670:	cmp    DWORD PTR [rax+0x4],0x80000
   140002677:	jne    0x1400026ad
   140002679:	mov    rcx,QWORD PTR [rax+0x10]
   14000267d:	xor    r8d,r8d
   140002680:	mov    edx,ebp
   140002682:	call   0x140006698
   140002687:	test   rax,rax
   14000268a:	je     0x1400026ad
   14000268c:	test   DWORD PTR [rax+0x4],0xfffeffff
   140002693:	jne    0x1400026ad
   140002695:	cmp    DWORD PTR [rax+0x4],0x0
   140002699:	jne    0x1400026a2
   14000269b:	mov    DWORD PTR [rax+0x4],0x10000
   1400026a2:	mov    QWORD PTR [rax+0x10],rbx
   1400026a6:	mov    eax,0x1
   1400026ab:	jmp    0x1400026af
   1400026ad:	xor    eax,eax
   1400026af:	test   eax,eax
   1400026b1:	jne    0x140002594
   1400026b7:	lea    rcx,[rsp+0x48]
   1400026bc:	call   0x1400042e4
   1400026c1:	jmp    0x14000250f
   1400026c6:	lea    edx,[rdi+rdi*1]
   1400026c9:	lea    rcx,[rbx+0x10]
   1400026cd:	call   0x140004460
   1400026d2:	test   eax,eax
   1400026d4:	jmp    0x1400025f0
   1400026d9:	cmp    r14d,0x1
   1400026dd:	jne    0x1400026ec
   1400026df:	mov    r8d,edi
   1400026e2:	xor    edx,edx
   1400026e4:	add    r8,r8
   1400026e7:	call   0x14000788e
   1400026ec:	mov    rax,QWORD PTR [rbx+0x10]
   1400026f0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400026f5:	mov    rbp,QWORD PTR [rsp+0x50]
   1400026fa:	add    rsp,0x20
   1400026fe:	pop    r14
   140002700:	pop    rdi
   140002701:	pop    rsi
   140002702:	ret    
   140002703:	int3   
   140002704:	int3   
   140002705:	int3   
   140002706:	int3   
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	mov    rcx,QWORD PTR [rip+0x7fd5]        # 0x14000a6e8
   140002713:	xor    eax,eax
   140002715:	test   rcx,rcx
   140002718:	je     0x14000273b
   14000271a:	cmp    DWORD PTR [rcx],0x9
   14000271d:	jne    0x14000273b
   14000271f:	cmp    DWORD PTR [rcx+0x4],eax
   140002722:	jbe    0x140002742
   140002724:	mov    rdx,QWORD PTR [rcx+0x8]
   140002728:	test   rdx,rdx
   14000272b:	je     0x140002742
   14000272d:	cmp    DWORD PTR [rdx+0x4],0x20000
   140002734:	jne    0x140002742
   140002736:	mov    rax,QWORD PTR [rdx+0x10]
   14000273a:	ret    
   14000273b:	lea    rax,[rip+0x5df2]        # 0x140008534
   140002742:	ret    
   140002743:	int3   
   140002744:	int3   
   140002745:	int3   
   140002746:	int3   
   140002747:	int3   
   140002748:	int3   
   140002749:	int3   
   14000274a:	int3   
   14000274b:	int3   
   14000274c:	mov    QWORD PTR [rsp+0x8],rbx
   140002751:	push   rdi
   140002752:	sub    rsp,0x20
   140002756:	mov    rbx,rcx
   140002759:	call   QWORD PTR [rip+0x5941]        # 0x1400080a0
   14000275f:	mov    edi,eax
   140002761:	test   rbx,rbx
   140002764:	jne    0x14000277d
   140002766:	call   QWORD PTR [rip+0x5934]        # 0x1400080a0
   14000276c:	test   eax,eax
   14000276e:	jne    0x140002779
   140002770:	lea    ecx,[rbx+0x57]
   140002773:	call   QWORD PTR [rip+0x589f]        # 0x140008018
   140002779:	xor    eax,eax
   14000277b:	jmp    0x1400027b7
   14000277d:	call   0x14000239c
   140002782:	test   eax,eax
   140002784:	je     0x140002779
   140002786:	mov    rcx,QWORD PTR [rip+0x7f5b]        # 0x14000a6e8
   14000278d:	mov    r8,rbx
   140002790:	xor    edx,edx
   140002792:	call   0x140006db4
   140002797:	test   eax,eax
   140002799:	jne    0x1400027aa
   14000279b:	call   QWORD PTR [rip+0x58ff]        # 0x1400080a0
   1400027a1:	test   eax,eax
   1400027a3:	jne    0x140002779
   1400027a5:	lea    ecx,[rax+0x8]
   1400027a8:	jmp    0x140002773
   1400027aa:	mov    ecx,edi
   1400027ac:	call   QWORD PTR [rip+0x5866]        # 0x140008018
   1400027b2:	mov    eax,0x1
   1400027b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027bc:	add    rsp,0x20
   1400027c0:	pop    rdi
   1400027c1:	ret    
   1400027c2:	int3   
   1400027c3:	int3   
   1400027c4:	int3   
   1400027c5:	int3   
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	mov    QWORD PTR [rsp+0x10],rdx
   1400027cd:	mov    QWORD PTR [rsp+0x18],r8
   1400027d2:	mov    QWORD PTR [rsp+0x20],r9
   1400027d7:	push   rbx
   1400027d8:	push   rbp
   1400027d9:	push   rsi
   1400027da:	push   rdi
   1400027db:	push   r12
   1400027dd:	push   r14
   1400027df:	sub    rsp,0x38
   1400027e3:	xor    r14d,r14d
   1400027e6:	mov    ebp,r14d
   1400027e9:	test   rdx,rdx
   1400027ec:	jne    0x140002804
   1400027ee:	call   QWORD PTR [rip+0x58ac]        # 0x1400080a0
   1400027f4:	test   eax,eax
   1400027f6:	jne    0x1400028ec
   1400027fc:	lea    ecx,[rax+0x57]
   1400027ff:	jmp    0x1400028e6
   140002804:	test   ecx,ecx
   140002806:	jne    0x14000281a
   140002808:	mov    rcx,rdx
   14000280b:	call   0x14000274c
   140002810:	mov    eax,0x1
   140002815:	jmp    0x1400028ee
   14000281a:	lea    r12,[rsp+0x80]
   140002822:	test   r12,r12
   140002825:	je     0x1400028d7
   14000282b:	xor    edx,edx
   14000282d:	add    ebp,0x100
   140002833:	mov    r9d,0x1
   140002839:	mov    r8d,ebp
   14000283c:	lea    ecx,[rdx+0x5]
   14000283f:	call   0x1400024e8
   140002844:	mov    rdi,rax
   140002847:	test   rax,rax
   14000284a:	je     0x1400028c8
   14000284c:	lea    rcx,[rbp-0x1]
   140002850:	mov    ebx,r14d
   140002853:	cmp    rcx,0x7ffffffe
   14000285a:	mov    edx,0x80070057
   14000285f:	cmova  ebx,edx
   140002862:	test   ebx,ebx
   140002864:	js     0x1400028a1
   140002866:	mov    r8,QWORD PTR [rsp+0x78]
   14000286b:	lea    rsi,[rbp-0x1]
   14000286f:	mov    rdx,rsi
   140002872:	mov    r9,r12
   140002875:	mov    rcx,rax
   140002878:	mov    ebx,r14d
   14000287b:	call   QWORD PTR [rip+0x5a67]        # 0x1400082e8
   140002881:	test   eax,eax
   140002883:	js     0x140002895
   140002885:	cdqe   
   140002887:	cmp    rax,rsi
   14000288a:	ja     0x140002895
   14000288c:	jne    0x1400028a9
   14000288e:	mov    WORD PTR [rdi+rsi*2],r14w
   140002893:	jmp    0x1400028a9
   140002895:	mov    WORD PTR [rdi+rsi*2],r14w
   14000289a:	mov    ebx,0x8007007a
   14000289f:	jmp    0x1400028a9
   1400028a1:	test   ebp,ebp
   1400028a3:	je     0x1400028a9
   1400028a5:	mov    WORD PTR [rax],r14w
   1400028a9:	cmp    ebx,0x8007007a
   1400028af:	je     0x14000281a
   1400028b5:	test   ebx,ebx
   1400028b7:	jns    0x1400028be
   1400028b9:	movzx  ecx,bx
   1400028bc:	jmp    0x1400028e6
   1400028be:	mov    rcx,rdi
   1400028c1:	call   0x14000274c
   1400028c6:	jmp    0x1400028ee
   1400028c8:	call   QWORD PTR [rip+0x57d2]        # 0x1400080a0
   1400028ce:	test   eax,eax
   1400028d0:	jne    0x1400028ec
   1400028d2:	lea    ecx,[rax+0x8]
   1400028d5:	jmp    0x1400028e6
   1400028d7:	call   QWORD PTR [rip+0x57c3]        # 0x1400080a0
   1400028dd:	test   eax,eax
   1400028df:	jne    0x1400028ec
   1400028e1:	mov    ecx,0x42b
   1400028e6:	call   QWORD PTR [rip+0x572c]        # 0x140008018
   1400028ec:	xor    eax,eax
   1400028ee:	add    rsp,0x38
   1400028f2:	pop    r14
   1400028f4:	pop    r12
   1400028f6:	pop    rdi
   1400028f7:	pop    rsi
   1400028f8:	pop    rbp
   1400028f9:	pop    rbx
   1400028fa:	ret    
   1400028fb:	int3   
   1400028fc:	int3   
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	int3   
   140002901:	int3   
   140002902:	int3   
   140002903:	int3   
   140002904:	rex push rbx
   140002906:	sub    rsp,0x40
   14000290a:	xor    ebx,ebx
   14000290c:	mov    QWORD PTR [rsp+0x50],rbx
   140002911:	call   0x14000239c
   140002916:	test   eax,eax
   140002918:	je     0x14000299f
   14000291e:	call   QWORD PTR [rip+0x577c]        # 0x1400080a0
   140002924:	mov    QWORD PTR [rsp+0x30],rbx
   140002929:	xor    r9d,r9d
   14000292c:	mov    r8d,eax
   14000292f:	mov    DWORD PTR [rsp+0x28],ebx
   140002933:	lea    rax,[rsp+0x50]
   140002938:	xor    edx,edx
   14000293a:	mov    ecx,0x1300
   14000293f:	mov    QWORD PTR [rsp+0x20],rax
   140002944:	call   QWORD PTR [rip+0x579e]        # 0x1400080e8
   14000294a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000294f:	test   eax,eax
   140002951:	je     0x14000296e
   140002953:	test   rcx,rcx
   140002956:	je     0x14000298c
   140002958:	call   0x14000274c
   14000295d:	mov    rcx,QWORD PTR [rsp+0x50]
   140002962:	mov    ebx,eax
   140002964:	call   QWORD PTR [rip+0x5776]        # 0x1400080e0
   14000296a:	mov    eax,ebx
   14000296c:	jmp    0x1400029a1
   14000296e:	test   rcx,rcx
   140002971:	je     0x14000298c
   140002973:	call   QWORD PTR [rip+0x5767]        # 0x1400080e0
   140002979:	call   QWORD PTR [rip+0x5721]        # 0x1400080a0
   14000297f:	test   eax,eax
   140002981:	jne    0x14000298c
   140002983:	lea    ecx,[rax+0x8]
   140002986:	call   QWORD PTR [rip+0x568c]        # 0x140008018
   14000298c:	call   QWORD PTR [rip+0x570e]        # 0x1400080a0
   140002992:	test   eax,eax
   140002994:	jne    0x14000299f
   140002996:	lea    ecx,[rax+0x8]
   140002999:	call   QWORD PTR [rip+0x5679]        # 0x140008018
   14000299f:	xor    eax,eax
   1400029a1:	add    rsp,0x40
   1400029a5:	pop    rbx
   1400029a6:	ret    
   1400029a7:	int3   
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400029b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400029ba:	push   rdi
   1400029bb:	sub    rsp,0x30
   1400029bf:	and    DWORD PTR [rsp+0x40],0x0
   1400029c4:	mov    ebx,0x100
   1400029c9:	mov    r8d,ebx
   1400029cc:	mov    r9d,0x1
   1400029d2:	xor    edx,edx
   1400029d4:	xor    ecx,ecx
   1400029d6:	call   0x1400024e8
   1400029db:	mov    rdi,rax
   1400029de:	test   rax,rax
   1400029e1:	jne    0x1400029ea
   1400029e3:	mov    eax,0x8
   1400029e8:	jmp    0x140002a57
   1400029ea:	mov    r9d,0x1
   1400029f0:	mov    r8d,ebx
   1400029f3:	mov    ecx,r9d
   1400029f6:	xor    edx,edx
   1400029f8:	call   0x1400024e8
   1400029fd:	mov    rsi,rax
   140002a00:	test   rax,rax
   140002a03:	je     0x1400029e3
   140002a05:	mov    rcx,rax
   140002a08:	call   0x140004568
   140002a0d:	movsxd rbx,eax
   140002a10:	mov    rcx,rdi
   140002a13:	shr    rbx,1
   140002a16:	dec    ebx
   140002a18:	call   0x140004568
   140002a1d:	movsxd r8,eax
   140002a20:	lea    rcx,[rsp+0x40]
   140002a25:	shr    r8,1
   140002a28:	mov    r9,rsi
   140002a2b:	dec    r8d
   140002a2e:	mov    DWORD PTR [rsp+0x20],ebx
   140002a32:	mov    rdx,rdi
   140002a35:	call   QWORD PTR [rip+0x574d]        # 0x140008188
   140002a3b:	test   eax,eax
   140002a3d:	jne    0x140002a57
   140002a3f:	mov    rcx,rdi
   140002a42:	call   0x14000274c
   140002a47:	mov    ecx,DWORD PTR [rsp+0x40]
   140002a4b:	test   eax,eax
   140002a4d:	mov    edx,0x8
   140002a52:	cmove  ecx,edx
   140002a55:	mov    eax,ecx
   140002a57:	mov    rbx,QWORD PTR [rsp+0x48]
   140002a5c:	mov    rsi,QWORD PTR [rsp+0x50]
   140002a61:	add    rsp,0x30
   140002a65:	pop    rdi
   140002a66:	ret    
   140002a67:	int3   
   140002a68:	int3   
   140002a69:	int3   
   140002a6a:	int3   
   140002a6b:	int3   
   140002a6c:	int3   
   140002a6d:	int3   
   140002a6e:	int3   
   140002a6f:	int3   
   140002a70:	mov    QWORD PTR [rsp+0x8],rbx
   140002a75:	push   rdi
   140002a76:	sub    rsp,0x20
   140002a7a:	mov    rdi,rcx
   140002a7d:	call   0x140002904
   140002a82:	xor    ebx,ebx
   140002a84:	test   eax,eax
   140002a86:	je     0x140002a9f
   140002a88:	call   0x14000270c
   140002a8d:	mov    rdx,rax
   140002a90:	mov    rcx,rdi
   140002a93:	call   0x140003964
   140002a98:	test   eax,eax
   140002a9a:	setne  bl
   140002a9d:	mov    eax,ebx
   140002a9f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002aa4:	add    rsp,0x20
   140002aa8:	pop    rdi
   140002aa9:	ret    
   140002aaa:	int3   
   140002aab:	int3   
   140002aac:	int3   
   140002aad:	int3   
   140002aae:	int3   
   140002aaf:	int3   
   140002ab0:	mov    QWORD PTR [rsp+0x18],rbx
   140002ab5:	push   rdi
   140002ab6:	sub    rsp,0x20
   140002aba:	mov    rax,QWORD PTR [rip+0x7c27]        # 0x14000a6e8
   140002ac1:	test   rax,rax
   140002ac4:	je     0x140002bcb
   140002aca:	cmp    DWORD PTR [rax],0x9
   140002acd:	jne    0x140002bcb
   140002ad3:	mov    edx,0x3
   140002ad8:	call   0x140006d04
   140002add:	test   eax,eax
   140002adf:	je     0x140002bae
   140002ae5:	lea    ebx,[rax-0x1]
   140002ae8:	mov    edi,eax
   140002aea:	mov    r8d,ebx
   140002aed:	call   0x140006e88
   140002af2:	cmp    eax,0x10000
   140002af7:	jne    0x140002ba2
   140002afd:	mov    r8d,ebx
   140002b00:	call   0x140006d4c
   140002b05:	mov    QWORD PTR [rsp+0x30],rax
   140002b0a:	test   rax,rax
   140002b0d:	je     0x140002ba2
   140002b13:	lea    rcx,[rax+0x10]
   140002b17:	call   0x1400042e4
   140002b1c:	lea    rcx,[rsp+0x30]
   140002b21:	call   0x1400042e4
   140002b26:	mov    rcx,QWORD PTR [rip+0x7bbb]        # 0x14000a6e8
   140002b2d:	xor    r8d,r8d
   140002b30:	lea    edx,[r8+0x3]
   140002b34:	call   0x140006698
   140002b39:	test   rax,rax
   140002b3c:	je     0x140002ba2
   140002b3e:	cmp    DWORD PTR [rax+0x4],0x80000
   140002b45:	jne    0x140002ba2
   140002b47:	mov    r10,QWORD PTR [rax+0x10]
   140002b4b:	lea    r8,[rsp+0x30]
   140002b50:	and    QWORD PTR [rsp+0x30],0x0
   140002b56:	mov    rcx,r10
   140002b59:	mov    edx,ebx
   140002b5b:	call   0x140006698
   140002b60:	mov    QWORD PTR [rsp+0x38],rax
   140002b65:	mov    rcx,rax
   140002b68:	test   rax,rax
   140002b6b:	je     0x140002ba2
   140002b6d:	mov    rdx,QWORD PTR [rsp+0x30]
   140002b72:	mov    rax,QWORD PTR [rax+0x18]
   140002b76:	test   rdx,rdx
   140002b79:	je     0x140002b81
   140002b7b:	mov    QWORD PTR [rdx+0x18],rax
   140002b7f:	jmp    0x140002b85
   140002b81:	mov    QWORD PTR [r10+0x8],rax
   140002b85:	cmp    rcx,QWORD PTR [r10+0x10]
   140002b89:	jne    0x140002b8f
   140002b8b:	mov    QWORD PTR [r10+0x10],rdx
   140002b8f:	dec    DWORD PTR [r10+0x4]
   140002b93:	call   0x140006774
   140002b98:	lea    rcx,[rsp+0x38]
   140002b9d:	call   0x1400042e4
   140002ba2:	dec    ebx
   140002ba4:	sub    rdi,0x1
   140002ba8:	jne    0x140002aea
   140002bae:	mov    rcx,QWORD PTR [rip+0x7b33]        # 0x14000a6e8
   140002bb5:	test   rcx,rcx
   140002bb8:	je     0x140002bcb
   140002bba:	cmp    DWORD PTR [rcx],0x9
   140002bbd:	jne    0x140002bcb
   140002bbf:	lea    rcx,[rip+0x7b22]        # 0x14000a6e8
   140002bc6:	call   0x14000693c
   140002bcb:	cmp    DWORD PTR [rip+0x7b1e],0x1        # 0x14000a6f0
   140002bd2:	jne    0x140002bda
   140002bd4:	call   QWORD PTR [rip+0x5656]        # 0x140008230
   140002bda:	mov    eax,0x1
   140002bdf:	mov    rbx,QWORD PTR [rsp+0x40]
   140002be4:	add    rsp,0x20
   140002be8:	pop    rdi
   140002be9:	ret    
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	sub    rsp,0x158
   140002bf7:	mov    rax,QWORD PTR [rip+0x740a]        # 0x14000a008
   140002bfe:	xor    rax,rsp
   140002c01:	mov    QWORD PTR [rsp+0x140],rax
   140002c09:	xor    edx,edx
   140002c0b:	lea    rcx,[rsp+0x20]
   140002c10:	mov    r8d,0x11c
   140002c16:	call   0x14000788e
   140002c1b:	movzx  eax,WORD PTR [rip+0x7ac2]        # 0x14000a6e4
   140002c22:	mov    r8b,0x3
   140002c25:	mov    edx,0x2
   140002c2a:	mov    WORD PTR [rsp+0x134],ax
   140002c32:	xor    ecx,ecx
   140002c34:	mov    DWORD PTR [rsp+0x20],0x11c
   140002c3c:	mov    DWORD PTR [rsp+0x24],0x5
   140002c44:	mov    DWORD PTR [rsp+0x28],0x1
   140002c4c:	call   QWORD PTR [rip+0x56ee]        # 0x140008340
   140002c52:	mov    r8b,0x3
   140002c55:	mov    edx,0x1
   140002c5a:	mov    rcx,rax
   140002c5d:	call   QWORD PTR [rip+0x56dd]        # 0x140008340
   140002c63:	mov    r8b,0x3
   140002c66:	mov    edx,0x20
   140002c6b:	mov    rcx,rax
   140002c6e:	call   QWORD PTR [rip+0x56cc]        # 0x140008340
   140002c74:	mov    edx,0x3
   140002c79:	lea    rcx,[rsp+0x20]
   140002c7e:	mov    r8,rax
   140002c81:	call   QWORD PTR [rip+0x56b1]        # 0x140008338
   140002c87:	xor    ecx,ecx
   140002c89:	test   eax,eax
   140002c8b:	setns  cl
   140002c8e:	mov    eax,ecx
   140002c90:	mov    rcx,QWORD PTR [rsp+0x140]
   140002c98:	xor    rcx,rsp
   140002c9b:	call   0x140007220
   140002ca0:	add    rsp,0x158
   140002ca7:	ret    
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    r8d,DWORD PTR [rip+0x7a29]        # 0x14000a6e0
   140002cb7:	mov    eax,0xcccccccd
   140002cbc:	inc    r8d
   140002cbf:	mul    r8d
   140002cc2:	mov    DWORD PTR [rip+0x7a17],r8d        # 0x14000a6e0
   140002cc9:	shr    edx,0x3
   140002ccc:	lea    eax,[rdx+rdx*4]
   140002ccf:	mov    edx,ecx
   140002cd1:	add    eax,eax
   140002cd3:	sub    r8d,eax
   140002cd6:	add    r8d,0x4
   140002cda:	jmp    0x140002ce8
   140002cdf:	int3   
   140002ce0:	int3   
   140002ce1:	int3   
   140002ce2:	int3   
   140002ce3:	int3   
   140002ce4:	int3   
   140002ce5:	int3   
   140002ce6:	int3   
   140002ce7:	int3   
   140002ce8:	mov    rax,rsp
   140002ceb:	mov    QWORD PTR [rax+0x10],rbx
   140002cef:	mov    QWORD PTR [rax+0x18],rbp
   140002cf3:	mov    QWORD PTR [rax+0x8],rcx
   140002cf7:	push   rsi
   140002cf8:	push   rdi
   140002cf9:	push   r14
   140002cfb:	sub    rsp,0x40
   140002cff:	xor    ebx,ebx
   140002d01:	mov    r14d,r8d
   140002d04:	mov    QWORD PTR [rax+0x8],rbx
   140002d08:	mov    ebp,edx
   140002d0a:	test   edx,edx
   140002d0c:	jne    0x140002d24
   140002d0e:	call   QWORD PTR [rip+0x538c]        # 0x1400080a0
   140002d14:	test   eax,eax
   140002d16:	jne    0x140002f0d
   140002d1c:	lea    ecx,[rbp+0x57]
   140002d1f:	jmp    0x140002f07
   140002d24:	call   0x14000239c
   140002d29:	test   eax,eax
   140002d2b:	je     0x140002f0d
   140002d31:	mov    edx,0x1
   140002d36:	call   0x140006d04
   140002d3b:	mov    r10d,eax
   140002d3e:	cmp    eax,r14d
   140002d41:	ja     0x140002daf
   140002d43:	mov    rax,QWORD PTR [rip+0x799e]        # 0x14000a6e8
   140002d4a:	test   rax,rax
   140002d4d:	je     0x140002efa
   140002d53:	cmp    DWORD PTR [rax],0x9
   140002d56:	jne    0x140002efa
   140002d5c:	cmp    DWORD PTR [rax+0x4],edx
   140002d5f:	jbe    0x140002efa
   140002d65:	mov    rax,QWORD PTR [rax+0x8]
   140002d69:	mov    rcx,QWORD PTR [rax+0x18]
   140002d6d:	test   rcx,rcx
   140002d70:	je     0x140002efa
   140002d76:	cmp    DWORD PTR [rcx+0x4],0x10000
   140002d7d:	je     0x140002d8c
   140002d7f:	cmp    DWORD PTR [rcx+0x4],0x80000
   140002d86:	jne    0x140002efa
   140002d8c:	mov    rcx,QWORD PTR [rcx+0x10]
   140002d90:	test   rcx,rcx
   140002d93:	je     0x140002efa
   140002d99:	mov    edx,r14d
   140002d9c:	sub    edx,r10d
   140002d9f:	inc    edx
   140002da1:	call   0x140006ca8
   140002da6:	cmp    eax,0xffffffff
   140002da9:	je     0x140002efa
   140002daf:	mov    edi,0x80
   140002db4:	xor    edx,edx
   140002db6:	add    edi,edi
   140002db8:	mov    r9d,0x1
   140002dbe:	mov    r8d,edi
   140002dc1:	lea    ecx,[rdx+0x4]
   140002dc4:	call   0x1400024e8
   140002dc9:	mov    rsi,rax
   140002dcc:	test   rax,rax
   140002dcf:	je     0x140002efa
   140002dd5:	mov    r9d,edi
   140002dd8:	mov    r8,rax
   140002ddb:	mov    edx,ebp
   140002ddd:	xor    ecx,ecx
   140002ddf:	call   QWORD PTR [rip+0x53eb]        # 0x1400081d0
   140002de5:	mov    edx,eax
   140002de7:	test   eax,eax
   140002de9:	jne    0x140002e36
   140002deb:	call   QWORD PTR [rip+0x52af]        # 0x1400080a0
   140002df1:	cmp    eax,0x716
   140002df6:	jne    0x140002f0d
   140002dfc:	mov    QWORD PTR [rsp+0x30],rbx
   140002e01:	lea    rax,[rsp+0x60]
   140002e06:	mov    DWORD PTR [rsp+0x28],ebx
   140002e0a:	xor    r9d,r9d
   140002e0d:	mov    r8d,ebp
   140002e10:	mov    QWORD PTR [rsp+0x20],rax
   140002e15:	xor    edx,edx
   140002e17:	mov    ecx,0xb00
   140002e1c:	call   QWORD PTR [rip+0x52c6]        # 0x1400080e8
   140002e22:	mov    edx,eax
   140002e24:	test   eax,eax
   140002e26:	je     0x140002f0d
   140002e2c:	mov    rcx,QWORD PTR [rsp+0x60]
   140002e31:	mov    rsi,rcx
   140002e34:	jmp    0x140002e3b
   140002e36:	mov    rcx,QWORD PTR [rsp+0x60]
   140002e3b:	lea    eax,[rdi-0x1]
   140002e3e:	cmp    edx,eax
   140002e40:	jae    0x140002db4
   140002e46:	mov    rdx,QWORD PTR [rip+0x789b]        # 0x14000a6e8
   140002e4d:	test   rdx,rdx
   140002e50:	je     0x140002e91
   140002e52:	cmp    DWORD PTR [rdx],0x9
   140002e55:	jne    0x140002e91
   140002e57:	cmp    DWORD PTR [rdx+0x4],0x1
   140002e5b:	jbe    0x140002e91
   140002e5d:	mov    rax,QWORD PTR [rdx+0x8]
   140002e61:	mov    r9,QWORD PTR [rax+0x18]
   140002e65:	test   r9,r9
   140002e68:	je     0x140002e91
   140002e6a:	cmp    DWORD PTR [r9+0x4],0x80000
   140002e72:	jne    0x140002e91
   140002e74:	mov    rcx,QWORD PTR [r9+0x10]
   140002e78:	mov    r8,rsi
   140002e7b:	mov    edx,r14d
   140002e7e:	call   0x140006db4
   140002e83:	mov    rcx,QWORD PTR [rsp+0x60]
   140002e88:	mov    rdx,QWORD PTR [rip+0x7859]        # 0x14000a6e8
   140002e8f:	jmp    0x140002e93
   140002e91:	mov    eax,ebx
   140002e93:	test   eax,eax
   140002e95:	je     0x140002efa
   140002e97:	test   rcx,rcx
   140002e9a:	je     0x140002eae
   140002e9c:	call   QWORD PTR [rip+0x523e]        # 0x1400080e0
   140002ea2:	mov    rdx,QWORD PTR [rip+0x783f]        # 0x14000a6e8
   140002ea9:	mov    QWORD PTR [rsp+0x60],rbx
   140002eae:	test   rdx,rdx
   140002eb1:	je     0x140002ef5
   140002eb3:	cmp    DWORD PTR [rdx],0x9
   140002eb6:	jne    0x140002ef5
   140002eb8:	cmp    DWORD PTR [rdx+0x4],0x1
   140002ebc:	jbe    0x140002ef5
   140002ebe:	mov    rax,QWORD PTR [rdx+0x8]
   140002ec2:	mov    rcx,QWORD PTR [rax+0x18]
   140002ec6:	test   rcx,rcx
   140002ec9:	je     0x140002ef5
   140002ecb:	cmp    DWORD PTR [rcx+0x4],0x80000
   140002ed2:	jne    0x140002ef5
   140002ed4:	mov    rcx,QWORD PTR [rcx+0x10]
   140002ed8:	xor    r8d,r8d
   140002edb:	mov    edx,r14d
   140002ede:	call   0x140006698
   140002ee3:	test   rax,rax
   140002ee6:	je     0x140002ef5
   140002ee8:	cmp    DWORD PTR [rax+0x4],0x20000
   140002eef:	jne    0x140002ef5
   140002ef1:	mov    rbx,QWORD PTR [rax+0x10]
   140002ef5:	mov    rax,rbx
   140002ef8:	jmp    0x140002f14
   140002efa:	call   QWORD PTR [rip+0x51a0]        # 0x1400080a0
   140002f00:	test   eax,eax
   140002f02:	jne    0x140002f0d
   140002f04:	lea    ecx,[rax+0x8]
   140002f07:	call   QWORD PTR [rip+0x510b]        # 0x140008018
   140002f0d:	lea    rax,[rip+0x5620]        # 0x140008534
   140002f14:	mov    rbx,QWORD PTR [rsp+0x68]
   140002f19:	mov    rbp,QWORD PTR [rsp+0x70]
   140002f1e:	add    rsp,0x40
   140002f22:	pop    r14
   140002f24:	pop    rdi
   140002f25:	pop    rsi
   140002f26:	ret    
   140002f27:	int3   
   140002f28:	int3   
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	rex push rbx
   140002f32:	sub    rsp,0x30
   140002f36:	and    QWORD PTR [rsp+0x40],0x0
   140002f3c:	mov    rbx,rcx
   140002f3f:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140002f44:	test   rcx,rcx
   140002f47:	je     0x140002fc1
   140002f49:	call   QWORD PTR [rip+0x5169]        # 0x1400080b8
   140002f4f:	test   eax,eax
   140002f51:	je     0x140002fc1
   140002f53:	call   0x14000239c
   140002f58:	test   eax,eax
   140002f5a:	je     0x140002fd4
   140002f5c:	xor    r9d,r9d
   140002f5f:	xor    r8d,r8d
   140002f62:	mov    rdx,rbx
   140002f65:	xor    ecx,ecx
   140002f67:	call   0x1400024e8
   140002f6c:	mov    rbx,rax
   140002f6f:	test   rax,rax
   140002f72:	jne    0x140002f83
   140002f74:	call   QWORD PTR [rip+0x5126]        # 0x1400080a0
   140002f7a:	test   eax,eax
   140002f7c:	jne    0x140002fd4
   140002f7e:	lea    ecx,[rbx+0x8]
   140002f81:	jmp    0x140002fce
   140002f83:	call   QWORD PTR [rip+0x537f]        # 0x140008308
   140002f89:	lea    rdx,[rsp+0x40]
   140002f8e:	mov    rcx,rbx
   140002f91:	and    DWORD PTR [rax],0x0
   140002f94:	call   QWORD PTR [rip+0x5376]        # 0x140008310
   140002f9a:	movaps xmm6,xmm0
   140002f9d:	call   QWORD PTR [rip+0x5365]        # 0x140008308
   140002fa3:	cmp    DWORD PTR [rax],0x22
   140002fa6:	je     0x140002fc1
   140002fa8:	mov    rcx,QWORD PTR [rsp+0x40]
   140002fad:	test   rcx,rcx
   140002fb0:	je     0x140002fbc
   140002fb2:	call   QWORD PTR [rip+0x5100]        # 0x1400080b8
   140002fb8:	test   eax,eax
   140002fba:	jne    0x140002fc1
   140002fbc:	movaps xmm0,xmm6
   140002fbf:	jmp    0x140002fd7
   140002fc1:	call   QWORD PTR [rip+0x50d9]        # 0x1400080a0
   140002fc7:	test   eax,eax
   140002fc9:	jne    0x140002fd4
   140002fcb:	lea    ecx,[rax+0x57]
   140002fce:	call   QWORD PTR [rip+0x5044]        # 0x140008018
   140002fd4:	xorps  xmm0,xmm0
   140002fd7:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140002fdc:	add    rsp,0x30
   140002fe0:	pop    rbx
   140002fe1:	ret    
   140002fe2:	int3   
   140002fe3:	int3   
   140002fe4:	int3   
   140002fe5:	int3   
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	rex push rbx
   140002fea:	sub    rsp,0x20
   140002fee:	and    QWORD PTR [rsp+0x40],0x0
   140002ff4:	mov    rbx,rcx
   140002ff7:	test   rcx,rcx
   140002ffa:	je     0x14000309b
   140003000:	call   0x14000239c
   140003005:	test   eax,eax
   140003007:	je     0x1400030ae
   14000300d:	xor    r9d,r9d
   140003010:	xor    r8d,r8d
   140003013:	mov    rdx,rbx
   140003016:	xor    ecx,ecx
   140003018:	call   0x1400024e8
   14000301d:	mov    rbx,rax
   140003020:	test   rax,rax
   140003023:	jne    0x140003034
   140003025:	call   QWORD PTR [rip+0x5075]        # 0x1400080a0
   14000302b:	test   eax,eax
   14000302d:	jne    0x1400030ae
   14000302f:	lea    ecx,[rbx+0x8]
   140003032:	jmp    0x1400030a8
   140003034:	xor    edx,edx
   140003036:	mov    rcx,rax
   140003039:	call   0x140003474
   14000303e:	mov    rcx,rbx
   140003041:	call   QWORD PTR [rip+0x5071]        # 0x1400080b8
   140003047:	test   eax,eax
   140003049:	je     0x14000309b
   14000304b:	call   QWORD PTR [rip+0x52b7]        # 0x140008308
   140003051:	mov    r8d,0xa
   140003057:	lea    rdx,[rsp+0x40]
   14000305c:	mov    rcx,rbx
   14000305f:	and    DWORD PTR [rax],0x0
   140003062:	cmp    WORD PTR [rbx],0x2d
   140003066:	jne    0x140003070
   140003068:	call   QWORD PTR [rip+0x51d2]        # 0x140008240
   14000306e:	jmp    0x140003076
   140003070:	call   QWORD PTR [rip+0x51d2]        # 0x140008248
   140003076:	mov    ebx,eax
   140003078:	call   QWORD PTR [rip+0x528a]        # 0x140008308
   14000307e:	cmp    DWORD PTR [rax],0x22
   140003081:	je     0x14000309b
   140003083:	mov    rcx,QWORD PTR [rsp+0x40]
   140003088:	test   rcx,rcx
   14000308b:	je     0x140003097
   14000308d:	call   QWORD PTR [rip+0x5025]        # 0x1400080b8
   140003093:	test   eax,eax
   140003095:	jne    0x14000309b
   140003097:	mov    eax,ebx
   140003099:	jmp    0x1400030b0
   14000309b:	call   QWORD PTR [rip+0x4fff]        # 0x1400080a0
   1400030a1:	test   eax,eax
   1400030a3:	jne    0x1400030ae
   1400030a5:	lea    ecx,[rax+0x57]
   1400030a8:	call   QWORD PTR [rip+0x4f6a]        # 0x140008018
   1400030ae:	xor    eax,eax
   1400030b0:	add    rsp,0x20
   1400030b4:	pop    rbx
   1400030b5:	ret    
   1400030b6:	int3   
   1400030b7:	int3   
   1400030b8:	int3   
   1400030b9:	int3   
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400030c1:	push   rdi
   1400030c2:	sub    rsp,0x20
   1400030c6:	and    QWORD PTR [rsp+0x48],0x0
   1400030cc:	mov    edi,r8d
   1400030cf:	test   rcx,rcx
   1400030d2:	je     0x140003174
   1400030d8:	mov    rdx,rcx
   1400030db:	xor    r9d,r9d
   1400030de:	xor    ecx,ecx
   1400030e0:	xor    r8d,r8d
   1400030e3:	call   0x1400024e8
   1400030e8:	mov    rbx,rax
   1400030eb:	test   rax,rax
   1400030ee:	jne    0x140003103
   1400030f0:	call   QWORD PTR [rip+0x4faa]        # 0x1400080a0
   1400030f6:	test   eax,eax
   1400030f8:	jne    0x140003187
   1400030fe:	lea    ecx,[rbx+0x8]
   140003101:	jmp    0x140003181
   140003103:	xor    edx,edx
   140003105:	mov    rcx,rax
   140003108:	call   0x140003474
   14000310d:	mov    rcx,rbx
   140003110:	call   QWORD PTR [rip+0x4fa2]        # 0x1400080b8
   140003116:	test   eax,eax
   140003118:	je     0x140003187
   14000311a:	test   edi,edi
   14000311c:	jne    0x140003124
   14000311e:	cmp    WORD PTR [rbx],0x2d
   140003122:	je     0x140003187
   140003124:	call   QWORD PTR [rip+0x51de]        # 0x140008308
   14000312a:	mov    r8d,0xa
   140003130:	lea    rdx,[rsp+0x48]
   140003135:	mov    rcx,rbx
   140003138:	and    DWORD PTR [rax],0x0
   14000313b:	cmp    edi,0x1
   14000313e:	jne    0x140003148
   140003140:	call   QWORD PTR [rip+0x50fa]        # 0x140008240
   140003146:	jmp    0x14000314e
   140003148:	call   QWORD PTR [rip+0x50fa]        # 0x140008248
   14000314e:	call   QWORD PTR [rip+0x51b4]        # 0x140008308
   140003154:	cmp    DWORD PTR [rax],0x22
   140003157:	je     0x140003187
   140003159:	mov    rcx,QWORD PTR [rsp+0x48]
   14000315e:	test   rcx,rcx
   140003161:	je     0x14000316d
   140003163:	call   QWORD PTR [rip+0x4f4f]        # 0x1400080b8
   140003169:	test   eax,eax
   14000316b:	jne    0x140003187
   14000316d:	mov    eax,0x1
   140003172:	jmp    0x140003189
   140003174:	call   QWORD PTR [rip+0x4f26]        # 0x1400080a0
   14000317a:	test   eax,eax
   14000317c:	jne    0x140003187
   14000317e:	lea    ecx,[rax+0x57]
   140003181:	call   QWORD PTR [rip+0x4e91]        # 0x140008018
   140003187:	xor    eax,eax
   140003189:	mov    rbx,QWORD PTR [rsp+0x30]
   14000318e:	add    rsp,0x20
   140003192:	pop    rdi
   140003193:	ret    
   140003194:	int3   
   140003195:	int3   
   140003196:	int3   
   140003197:	int3   
   140003198:	int3   
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	mov    QWORD PTR [rsp+0x8],rbx
   1400031a1:	push   rdi
   1400031a2:	sub    rsp,0x20
   1400031a6:	movzx  edi,dx
   1400031a9:	mov    rbx,rcx
   1400031ac:	test   rcx,rcx
   1400031af:	jne    0x1400031c0
   1400031b1:	call   QWORD PTR [rip+0x4ee9]        # 0x1400080a0
   1400031b7:	test   eax,eax
   1400031b9:	jne    0x1400031ef
   1400031bb:	lea    ecx,[rbx+0x57]
   1400031be:	jmp    0x1400031e9
   1400031c0:	call   QWORD PTR [rip+0x4ef2]        # 0x1400080b8
   1400031c6:	cmp    eax,0x1
   1400031c9:	jb     0x1400031e4
   1400031cb:	movzx  edx,di
   1400031ce:	mov    rcx,rbx
   1400031d1:	call   QWORD PTR [rip+0x4fd9]        # 0x1400081b0
   1400031d7:	test   rax,rax
   1400031da:	je     0x1400031e4
   1400031dc:	sub    rax,rbx
   1400031df:	sar    rax,1
   1400031e2:	jmp    0x1400031f2
   1400031e4:	mov    ecx,0x490
   1400031e9:	call   QWORD PTR [rip+0x4e29]        # 0x140008018
   1400031ef:	or     eax,0xffffffff
   1400031f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031f7:	add    rsp,0x20
   1400031fb:	pop    rdi
   1400031fc:	ret    
   1400031fd:	int3   
   1400031fe:	int3   
   1400031ff:	int3   
   140003200:	int3   
   140003201:	int3   
   140003202:	int3   
   140003203:	int3   
   140003204:	mov    QWORD PTR [rsp+0x8],rbx
   140003209:	mov    QWORD PTR [rsp+0x10],rbp
   14000320e:	mov    QWORD PTR [rsp+0x18],rsi
   140003213:	push   rdi
   140003214:	push   r12
   140003216:	push   r13
   140003218:	push   r14
   14000321a:	push   r15
   14000321c:	sub    rsp,0x20
   140003220:	xor    ebx,ebx
   140003222:	mov    r15d,r8d
   140003225:	mov    rdi,rdx
   140003228:	mov    rsi,rcx
   14000322b:	test   rcx,rcx
   14000322e:	je     0x1400032ef
   140003234:	test   rdx,rdx
   140003237:	je     0x1400032ef
   14000323d:	mov    rcx,rdx
   140003240:	call   QWORD PTR [rip+0x4e72]        # 0x1400080b8
   140003246:	lea    r14d,[rbx+0x1]
   14000324a:	xor    edx,edx
   14000324c:	mov    r9d,r14d
   14000324f:	xor    ecx,ecx
   140003251:	lea    r12d,[rax+0x4]
   140003255:	mov    r8d,r12d
   140003258:	call   0x1400024e8
   14000325d:	mov    rbp,rax
   140003260:	test   rax,rax
   140003263:	jne    0x14000327b
   140003265:	call   QWORD PTR [rip+0x4e35]        # 0x1400080a0
   14000326b:	test   eax,eax
   14000326d:	jne    0x140003302
   140003273:	lea    ecx,[rax+0x8]
   140003276:	jmp    0x1400032fc
   14000327b:	mov    rcx,rsi
   14000327e:	call   QWORD PTR [rip+0x4e34]        # 0x1400080b8
   140003284:	mov    r9d,r14d
   140003287:	xor    edx,edx
   140003289:	mov    ecx,r14d
   14000328c:	lea    r13d,[rax+0x4]
   140003290:	mov    r8d,r13d
   140003293:	call   0x1400024e8
   140003298:	mov    r14,rax
   14000329b:	test   rax,rax
   14000329e:	je     0x140003265
   1400032a0:	mov    edx,r12d
   1400032a3:	lea    r8,[rip+0x5256]        # 0x140008500
   1400032aa:	mov    r9,rdi
   1400032ad:	mov    rcx,rbp
   1400032b0:	call   0x140001008
   1400032b5:	test   eax,eax
   1400032b7:	jns    0x1400032be
   1400032b9:	movzx  ecx,ax
   1400032bc:	jmp    0x1400032fc
   1400032be:	mov    edx,r13d
   1400032c1:	lea    r8,[rip+0x5238]        # 0x140008500
   1400032c8:	mov    r9,rsi
   1400032cb:	mov    rcx,r14
   1400032ce:	call   0x140001008
   1400032d3:	test   eax,eax
   1400032d5:	js     0x1400032b9
   1400032d7:	mov    r8d,r15d
   1400032da:	mov    rdx,r14
   1400032dd:	mov    rcx,rbp
   1400032e0:	call   0x1400033d0
   1400032e5:	cmp    eax,0xffffffff
   1400032e8:	setne  bl
   1400032eb:	mov    eax,ebx
   1400032ed:	jmp    0x140003304
   1400032ef:	call   QWORD PTR [rip+0x4dab]        # 0x1400080a0
   1400032f5:	test   eax,eax
   1400032f7:	jne    0x140003302
   1400032f9:	lea    ecx,[rax+0x57]
   1400032fc:	call   QWORD PTR [rip+0x4d16]        # 0x140008018
   140003302:	xor    eax,eax
   140003304:	mov    rbx,QWORD PTR [rsp+0x50]
   140003309:	mov    rbp,QWORD PTR [rsp+0x58]
   14000330e:	mov    rsi,QWORD PTR [rsp+0x60]
   140003313:	add    rsp,0x20
   140003317:	pop    r15
   140003319:	pop    r14
   14000331b:	pop    r13
   14000331d:	pop    r12
   14000331f:	pop    rdi
   140003320:	ret    
   140003321:	int3   
   140003322:	int3   
   140003323:	int3   
   140003324:	int3   
   140003325:	int3   
   140003326:	int3   
   140003327:	int3   
   140003328:	mov    QWORD PTR [rsp+0x8],rbx
   14000332d:	mov    QWORD PTR [rsp+0x10],rbp
   140003332:	mov    QWORD PTR [rsp+0x18],rsi
   140003337:	push   rdi
   140003338:	sub    rsp,0x20
   14000333c:	xor    ebx,ebx
   14000333e:	mov    rdi,rdx
   140003341:	mov    rbp,rcx
   140003344:	test   rcx,rcx
   140003347:	je     0x14000339c
   140003349:	test   rdx,rdx
   14000334c:	je     0x14000339c
   14000334e:	mov    rcx,rdx
   140003351:	call   QWORD PTR [rip+0x4d61]        # 0x1400080b8
   140003357:	mov    esi,eax
   140003359:	test   eax,eax
   14000335b:	je     0x140003395
   14000335d:	mov    rcx,rbp
   140003360:	call   QWORD PTR [rip+0x4d52]        # 0x1400080b8
   140003366:	test   eax,eax
   140003368:	je     0x140003395
   14000336a:	mov    rcx,rbp
   14000336d:	call   QWORD PTR [rip+0x4d45]        # 0x1400080b8
   140003373:	test   eax,eax
   140003375:	je     0x140003395
   140003377:	test   esi,esi
   140003379:	je     0x140003395
   14000337b:	movzx  edx,WORD PTR [rdi]
   14000337e:	mov    rcx,rbp
   140003381:	call   0x14000319c
   140003386:	cmp    eax,0xffffffff
   140003389:	jne    0x1400033b2
   14000338b:	inc    ebx
   14000338d:	add    rdi,0x2
   140003391:	cmp    ebx,esi
   140003393:	jb     0x14000337b
   140003395:	mov    ecx,0x490
   14000339a:	jmp    0x1400033a9
   14000339c:	call   QWORD PTR [rip+0x4cfe]        # 0x1400080a0
   1400033a2:	test   eax,eax
   1400033a4:	jne    0x1400033af
   1400033a6:	lea    ecx,[rax+0x57]
   1400033a9:	call   QWORD PTR [rip+0x4c69]        # 0x140008018
   1400033af:	or     eax,0xffffffff
   1400033b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033b7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400033bc:	mov    rsi,QWORD PTR [rsp+0x40]
   1400033c1:	add    rsp,0x20
   1400033c5:	pop    rdi
   1400033c6:	ret    
   1400033c7:	int3   
   1400033c8:	int3   
   1400033c9:	int3   
   1400033ca:	int3   
   1400033cb:	int3   
   1400033cc:	int3   
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400033d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400033da:	mov    QWORD PTR [rsp+0x18],rsi
   1400033df:	push   rdi
   1400033e0:	sub    rsp,0x20
   1400033e4:	mov    ebp,r8d
   1400033e7:	mov    rdi,rdx
   1400033ea:	mov    rbx,rcx
   1400033ed:	test   rcx,rcx
   1400033f0:	je     0x140003442
   1400033f2:	test   rdx,rdx
   1400033f5:	je     0x140003442
   1400033f7:	call   QWORD PTR [rip+0x4cbb]        # 0x1400080b8
   1400033fd:	mov    rcx,rdi
   140003400:	mov    esi,eax
   140003402:	call   QWORD PTR [rip+0x4cb0]        # 0x1400080b8
   140003408:	test   eax,eax
   14000340a:	je     0x140003433
   14000340c:	cmp    esi,0x1
   14000340f:	jb     0x140003433
   140003411:	cmp    esi,eax
   140003413:	jb     0x140003433
   140003415:	mov    rdx,rdi
   140003418:	mov    rcx,rbx
   14000341b:	cmp    ebp,0x1
   14000341e:	jne    0x140003428
   140003420:	call   QWORD PTR [rip+0x4d7a]        # 0x1400081a0
   140003426:	jmp    0x14000342e
   140003428:	call   QWORD PTR [rip+0x4d7a]        # 0x1400081a8
   14000342e:	test   rax,rax
   140003431:	jne    0x14000343a
   140003433:	mov    ecx,0x490
   140003438:	jmp    0x14000344f
   14000343a:	sub    rax,rbx
   14000343d:	sar    rax,1
   140003440:	jmp    0x140003458
   140003442:	call   QWORD PTR [rip+0x4c58]        # 0x1400080a0
   140003448:	test   eax,eax
   14000344a:	jne    0x140003455
   14000344c:	lea    ecx,[rax+0x57]
   14000344f:	call   QWORD PTR [rip+0x4bc3]        # 0x140008018
   140003455:	or     eax,0xffffffff
   140003458:	mov    rbx,QWORD PTR [rsp+0x30]
   14000345d:	mov    rbp,QWORD PTR [rsp+0x38]
   140003462:	mov    rsi,QWORD PTR [rsp+0x40]
   140003467:	add    rsp,0x20
   14000346b:	pop    rdi
   14000346c:	ret    
   14000346d:	int3   
   14000346e:	int3   
   14000346f:	int3   
   140003470:	int3   
   140003471:	int3   
   140003472:	int3   
   140003473:	int3   
   140003474:	mov    QWORD PTR [rsp+0x18],rbx
   140003479:	push   rbp
   14000347a:	push   rsi
   14000347b:	push   rdi
   14000347c:	push   r14
   14000347e:	push   r15
   140003480:	sub    rsp,0x30
   140003484:	mov    rax,QWORD PTR [rip+0x6b7d]        # 0x14000a008
   14000348b:	xor    rax,rsp
   14000348e:	mov    QWORD PTR [rsp+0x28],rax
   140003493:	mov    eax,DWORD PTR [rip+0x5073]        # 0x14000850c
   140003499:	xor    r15d,r15d
   14000349c:	mov    DWORD PTR [rsp+0x20],eax
   1400034a0:	mov    rbp,rdx
   1400034a3:	movzx  eax,WORD PTR [rip+0x5066]        # 0x140008510
   1400034aa:	mov    rdi,rcx
   1400034ad:	mov    WORD PTR [rsp+0x24],ax
   1400034b2:	mov    esi,r15d
   1400034b5:	test   rcx,rcx
   1400034b8:	je     0x140003567
   1400034be:	call   QWORD PTR [rip+0x4bf4]        # 0x1400080b8
   1400034c4:	test   eax,eax
   1400034c6:	je     0x140003567
   1400034cc:	test   rbp,rbp
   1400034cf:	je     0x1400034de
   1400034d1:	mov    rcx,rbp
   1400034d4:	call   QWORD PTR [rip+0x4bde]        # 0x1400080b8
   1400034da:	test   eax,eax
   1400034dc:	jne    0x1400034e3
   1400034de:	lea    rbp,[rsp+0x20]
   1400034e3:	mov    rbx,rdi
   1400034e6:	cmp    WORD PTR [rdi],r15w
   1400034ea:	je     0x140003507
   1400034ec:	movzx  edx,WORD PTR [rbx]
   1400034ef:	mov    rcx,rbp
   1400034f2:	call   QWORD PTR [rip+0x4ca0]        # 0x140008198
   1400034f8:	test   rax,rax
   1400034fb:	je     0x140003507
   1400034fd:	add    rbx,0x2
   140003501:	cmp    WORD PTR [rbx],r15w
   140003505:	jne    0x1400034ec
   140003507:	movzx  eax,WORD PTR [rbx]
   14000350a:	mov    r14,rbx
   14000350d:	test   ax,ax
   140003510:	je     0x140003545
   140003512:	movzx  edx,ax
   140003515:	mov    rcx,rbp
   140003518:	call   QWORD PTR [rip+0x4c7a]        # 0x140008198
   14000351e:	test   rax,rax
   140003521:	je     0x14000352d
   140003523:	test   rsi,rsi
   140003526:	jne    0x140003530
   140003528:	mov    rsi,rbx
   14000352b:	jmp    0x140003530
   14000352d:	mov    rsi,r15
   140003530:	add    rbx,0x2
   140003534:	movzx  eax,WORD PTR [rbx]
   140003537:	test   ax,ax
   14000353a:	jne    0x140003512
   14000353c:	test   rsi,rsi
   14000353f:	je     0x140003545
   140003541:	mov    WORD PTR [rsi],r15w
   140003545:	cmp    r14,rdi
   140003548:	jbe    0x140003562
   14000354a:	mov    rcx,r14
   14000354d:	call   QWORD PTR [rip+0x4b65]        # 0x1400080b8
   140003553:	mov    rdx,r14
   140003556:	mov    rcx,rdi
   140003559:	lea    r8d,[rax+0x1]
   14000355d:	call   0x140003740
   140003562:	mov    rax,rdi
   140003565:	jmp    0x14000356e
   140003567:	lea    rax,[rip+0x4fc6]        # 0x140008534
   14000356e:	mov    rcx,QWORD PTR [rsp+0x28]
   140003573:	xor    rcx,rsp
   140003576:	call   0x140007220
   14000357b:	mov    rbx,QWORD PTR [rsp+0x70]
   140003580:	add    rsp,0x30
   140003584:	pop    r15
   140003586:	pop    r14
   140003588:	pop    rdi
   140003589:	pop    rsi
   14000358a:	pop    rbp
   14000358b:	ret    
   14000358c:	int3   
   14000358d:	int3   
   14000358e:	int3   
   14000358f:	int3   
   140003590:	int3   
   140003591:	int3   
   140003592:	int3   
   140003593:	int3   
   140003594:	mov    QWORD PTR [rsp+0x8],rbx
   140003599:	mov    QWORD PTR [rsp+0x10],rsi
   14000359e:	push   rdi
   14000359f:	sub    rsp,0x20
   1400035a3:	xor    ebx,ebx
   1400035a5:	mov    rsi,rdx
   1400035a8:	mov    rdi,rcx
   1400035ab:	cmp    rcx,0xffffffffffffffff
   1400035af:	je     0x1400035d1
   1400035b1:	call   QWORD PTR [rip+0x4b21]        # 0x1400080d8
   1400035b7:	cmp    eax,0x2
   1400035ba:	jne    0x1400035d1
   1400035bc:	mov    rdx,rsi
   1400035bf:	mov    rcx,rdi
   1400035c2:	call   QWORD PTR [rip+0x4b08]        # 0x1400080d0
   1400035c8:	test   eax,eax
   1400035ca:	je     0x1400035d1
   1400035cc:	mov    ebx,0x1
   1400035d1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400035d6:	mov    eax,ebx
   1400035d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035dd:	add    rsp,0x20
   1400035e1:	pop    rdi
   1400035e2:	ret    
   1400035e3:	int3   
   1400035e4:	int3   
   1400035e5:	int3   
   1400035e6:	int3   
   1400035e7:	int3   
   1400035e8:	int3   
   1400035e9:	int3   
   1400035ea:	int3   
   1400035eb:	int3   
   1400035ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400035f1:	mov    QWORD PTR [rsp+0x18],rsi
   1400035f6:	push   rdi
   1400035f7:	sub    rsp,0x20
   1400035fb:	xor    ebx,ebx
   1400035fd:	mov    DWORD PTR [rsp+0x30],ebx
   140003601:	test   rcx,rcx
   140003604:	jne    0x140003619
   140003606:	call   QWORD PTR [rip+0x4a94]        # 0x1400080a0
   14000360c:	test   eax,eax
   14000360e:	jne    0x14000369d
   140003614:	lea    ecx,[rbx+0x57]
   140003617:	jmp    0x140003697
   140003619:	call   QWORD PTR [rip+0x4c41]        # 0x140008260
   14000361f:	mov    edi,eax
   140003621:	call   QWORD PTR [rip+0x4ce1]        # 0x140008308
   140003627:	mov    ecx,edi
   140003629:	mov    DWORD PTR [rax],ebx
   14000362b:	call   QWORD PTR [rip+0x4c27]        # 0x140008258
   140003631:	mov    rsi,rax
   140003634:	cmp    rax,0xffffffffffffffff
   140003638:	je     0x140003692
   14000363a:	call   QWORD PTR [rip+0x4cc8]        # 0x140008308
   140003640:	cmp    DWORD PTR [rax],0x9
   140003643:	je     0x140003692
   140003645:	mov    rcx,rsi
   140003648:	call   QWORD PTR [rip+0x4a8a]        # 0x1400080d8
   14000364e:	cmp    eax,0x2
   140003651:	jne    0x14000369d
   140003653:	test   edi,edi
   140003655:	je     0x14000366f
   140003657:	sub    edi,0x1
   14000365a:	je     0x140003668
   14000365c:	cmp    edi,0x1
   14000365f:	jne    0x14000368e
   140003661:	mov    ecx,0xfffffff4
   140003666:	jmp    0x140003674
   140003668:	mov    ecx,0xfffffff5
   14000366d:	jmp    0x140003674
   14000366f:	mov    ecx,0xfffffff6
   140003674:	call   QWORD PTR [rip+0x4a4e]        # 0x1400080c8
   14000367a:	test   rax,rax
   14000367d:	je     0x14000368e
   14000367f:	lea    rdx,[rsp+0x30]
   140003684:	mov    rcx,rax
   140003687:	call   0x140003594
   14000368c:	mov    ebx,eax
   14000368e:	mov    eax,ebx
   140003690:	jmp    0x14000369f
   140003692:	mov    ecx,0x6
   140003697:	call   QWORD PTR [rip+0x497b]        # 0x140008018
   14000369d:	xor    eax,eax
   14000369f:	mov    rbx,QWORD PTR [rsp+0x38]
   1400036a4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400036a9:	add    rsp,0x20
   1400036ad:	pop    rdi
   1400036ae:	ret    
   1400036af:	int3   
   1400036b0:	int3   
   1400036b1:	int3   
   1400036b2:	int3   
   1400036b3:	int3   
   1400036b4:	int3   
   1400036b5:	int3   
   1400036b6:	int3   
   1400036b7:	int3   
   1400036b8:	sub    rsp,0x28
   1400036bc:	test   rcx,rcx
   1400036bf:	je     0x14000372b
   1400036c1:	test   rdx,rdx
   1400036c4:	je     0x14000372b
   1400036c6:	movsxd r9,r8d
   1400036c9:	mov    eax,0x80070057
   1400036ce:	xor    r8d,r8d
   1400036d1:	cmp    r9,0x7fffffff
   1400036d8:	cmova  r8d,eax
   1400036dc:	test   r8d,r8d
   1400036df:	js     0x140003719
   1400036e1:	mov    r10d,0x7ffffffe
   1400036e7:	xor    r8d,r8d
   1400036ea:	sub    r10,r9
   1400036ed:	sub    rdx,rcx
   1400036f0:	lea    rax,[r10+r9*1]
   1400036f4:	test   rax,rax
   1400036f7:	je     0x14000370b
   1400036f9:	mov    al,BYTE PTR [rdx+rcx*1]
   1400036fc:	test   al,al
   1400036fe:	je     0x14000370b
   140003700:	mov    BYTE PTR [rcx],al
   140003702:	inc    rcx
   140003705:	sub    r9,0x1
   140003709:	jne    0x1400036f0
   14000370b:	test   r9,r9
   14000370e:	jne    0x140003719
   140003710:	dec    rcx
   140003713:	mov    r8d,0x8007007a
   140003719:	mov    BYTE PTR [rcx],0x0
   14000371c:	test   r8d,r8d
   14000371f:	jns    0x140003732
   140003721:	movzx  ecx,r8w
   140003725:	call   QWORD PTR [rip+0x48ed]        # 0x140008018
   14000372b:	xor    eax,eax
   14000372d:	add    rsp,0x28
   140003731:	ret    
   140003732:	mov    eax,0x1
   140003737:	jmp    0x14000372d
   140003739:	int3   
   14000373a:	int3   
   14000373b:	int3   
   14000373c:	int3   
   14000373d:	int3   
   14000373e:	int3   
   14000373f:	int3   
   140003740:	rex push rbx
   140003742:	sub    rsp,0x20
   140003746:	xor    ebx,ebx
   140003748:	mov    r9,rdx
   14000374b:	test   rcx,rcx
   14000374e:	je     0x1400037cc
   140003750:	test   rdx,rdx
   140003753:	je     0x1400037cc
   140003755:	test   r8d,r8d
   140003758:	jle    0x1400037cc
   14000375a:	movsxd r8,r8d
   14000375d:	mov    r10d,0x7ffffffe
   140003763:	mov    edx,ebx
   140003765:	mov    r11d,0x80070057
   14000376b:	lea    rax,[r8-0x1]
   14000376f:	cmp    rax,r10
   140003772:	cmova  edx,r11d
   140003776:	test   edx,edx
   140003778:	js     0x1400037b7
   14000377a:	mov    edx,ebx
   14000377c:	test   r8,r8
   14000377f:	je     0x1400037ac
   140003781:	sub    r10,r8
   140003784:	sub    r9,rcx
   140003787:	lea    rax,[r10+r8*1]
   14000378b:	test   rax,rax
   14000378e:	je     0x1400037a7
   140003790:	movzx  eax,WORD PTR [r9+rcx*1]
   140003795:	test   ax,ax
   140003798:	je     0x1400037a7
   14000379a:	mov    WORD PTR [rcx],ax
   14000379d:	add    rcx,0x2
   1400037a1:	sub    r8,0x1
   1400037a5:	jne    0x140003787
   1400037a7:	test   r8,r8
   1400037aa:	jne    0x1400037bc
   1400037ac:	sub    rcx,0x2
   1400037b0:	mov    edx,0x8007007a
   1400037b5:	jmp    0x1400037bc
   1400037b7:	test   r8,r8
   1400037ba:	je     0x1400037bf
   1400037bc:	mov    WORD PTR [rcx],bx
   1400037bf:	test   edx,edx
   1400037c1:	jns    0x1400037d4
   1400037c3:	movzx  ecx,dx
   1400037c6:	call   QWORD PTR [rip+0x484c]        # 0x140008018
   1400037cc:	xor    eax,eax
   1400037ce:	add    rsp,0x20
   1400037d2:	pop    rbx
   1400037d3:	ret    
   1400037d4:	mov    eax,0x1
   1400037d9:	jmp    0x1400037ce
   1400037db:	int3   
   1400037dc:	int3   
   1400037dd:	int3   
   1400037de:	int3   
   1400037df:	int3   
   1400037e0:	int3   
   1400037e1:	int3   
   1400037e2:	int3   
   1400037e3:	int3   
   1400037e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400037e9:	push   rdi
   1400037ea:	sub    rsp,0x20
   1400037ee:	xor    edi,edi
   1400037f0:	mov    r11,rdx
   1400037f3:	mov    rbx,rcx
   1400037f6:	test   rdx,rdx
   1400037f9:	je     0x1400038c1
   1400037ff:	test   r8d,r8d
   140003802:	jle    0x1400038c1
   140003808:	movsxd r10,r8d
   14000380b:	mov    edx,0x80070057
   140003810:	mov    r8d,edi
   140003813:	lea    rax,[r10-0x1]
   140003817:	cmp    rax,0x7ffffffe
   14000381d:	cmova  r8d,edx
   140003821:	test   r8d,r8d
   140003824:	js     0x140003850
   140003826:	mov    rax,r10
   140003829:	mov    r8d,edi
   14000382c:	test   r10,r10
   14000382f:	je     0x14000384d
   140003831:	cmp    WORD PTR [rcx],di
   140003834:	je     0x140003840
   140003836:	add    rcx,0x2
   14000383a:	sub    rax,0x1
   14000383e:	jne    0x140003831
   140003840:	test   rax,rax
   140003843:	je     0x14000384d
   140003845:	mov    r9,r10
   140003848:	sub    r9,rax
   14000384b:	jmp    0x140003853
   14000384d:	mov    r8d,edx
   140003850:	mov    r9,rdi
   140003853:	test   r8d,r8d
   140003856:	js     0x1400038b7
   140003858:	mov    rdx,r10
   14000385b:	lea    rcx,[rbx+r9*2]
   14000385f:	mov    r8d,edi
   140003862:	sub    rdx,r9
   140003865:	je     0x14000389e
   140003867:	mov    rax,rdx
   14000386a:	sub    rax,r10
   14000386d:	lea    r10,[r9+0x7ffffffe]
   140003874:	add    r10,rax
   140003877:	sub    r11,rcx
   14000387a:	test   r10,r10
   14000387d:	je     0x140003899
   14000387f:	movzx  eax,WORD PTR [r11+rcx*1]
   140003884:	test   ax,ax
   140003887:	je     0x140003899
   140003889:	mov    WORD PTR [rcx],ax
   14000388c:	dec    r10
   14000388f:	add    rcx,0x2
   140003893:	sub    rdx,0x1
   140003897:	jne    0x14000387a
   140003899:	test   rdx,rdx
   14000389c:	jne    0x1400038a8
   14000389e:	sub    rcx,0x2
   1400038a2:	mov    r8d,0x8007007a
   1400038a8:	mov    WORD PTR [rcx],di
   1400038ab:	test   r8d,r8d
   1400038ae:	js     0x1400038b7
   1400038b0:	mov    eax,0x1
   1400038b5:	jmp    0x1400038c3
   1400038b7:	movzx  ecx,r8w
   1400038bb:	call   QWORD PTR [rip+0x4757]        # 0x140008018
   1400038c1:	xor    eax,eax
   1400038c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038c8:	add    rsp,0x20
   1400038cc:	pop    rdi
   1400038cd:	ret    
   1400038ce:	int3   
   1400038cf:	int3   
   1400038d0:	int3   
   1400038d1:	int3   
   1400038d2:	int3   
   1400038d3:	int3   
   1400038d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400038d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400038de:	mov    QWORD PTR [rsp+0x18],rsi
   1400038e3:	push   rdi
   1400038e4:	sub    rsp,0x30
   1400038e8:	xor    ebx,ebx
   1400038ea:	mov    edi,r9d
   1400038ed:	mov    rsi,rdx
   1400038f0:	mov    rbp,rcx
   1400038f3:	test   rcx,rcx
   1400038f6:	je     0x140003931
   1400038f8:	test   rdx,rdx
   1400038fb:	je     0x140003931
   1400038fd:	or     eax,0xffffffff
   140003900:	test   r9d,r9d
   140003903:	cmove  edi,eax
   140003906:	cmp    r8d,0x1
   14000390a:	sete   bl
   14000390d:	call   QWORD PTR [rip+0x4795]        # 0x1400080a8
   140003913:	mov    DWORD PTR [rsp+0x28],edi
   140003917:	mov    r9d,edi
   14000391a:	mov    ecx,eax
   14000391c:	mov    QWORD PTR [rsp+0x20],rsi
   140003921:	mov    r8,rbp
   140003924:	mov    edx,ebx
   140003926:	call   QWORD PTR [rip+0x4784]        # 0x1400080b0
   14000392c:	sub    eax,0x2
   14000392f:	jmp    0x140003946
   140003931:	call   QWORD PTR [rip+0x4769]        # 0x1400080a0
   140003937:	test   eax,eax
   140003939:	jne    0x140003944
   14000393b:	lea    ecx,[rax+0x57]
   14000393e:	call   QWORD PTR [rip+0x46d4]        # 0x140008018
   140003944:	xor    eax,eax
   140003946:	mov    rbx,QWORD PTR [rsp+0x40]
   14000394b:	mov    rbp,QWORD PTR [rsp+0x48]
   140003950:	mov    rsi,QWORD PTR [rsp+0x50]
   140003955:	add    rsp,0x30
   140003959:	pop    rdi
   14000395a:	ret    
   14000395b:	int3   
   14000395c:	int3   
   14000395d:	int3   
   14000395e:	int3   
   14000395f:	int3   
   140003960:	int3   
   140003961:	int3   
   140003962:	int3   
   140003963:	int3   
   140003964:	mov    rax,rsp
   140003967:	mov    QWORD PTR [rax+0x10],rbx
   14000396b:	mov    QWORD PTR [rax+0x18],rbp
   14000396f:	mov    QWORD PTR [rax+0x20],rsi
   140003973:	push   rdi
   140003974:	push   r12
   140003976:	push   r13
   140003978:	push   r14
   14000397a:	push   r15
   14000397c:	sub    rsp,0x40
   140003980:	xor    r12d,r12d
   140003983:	mov    rsi,rdx
   140003986:	mov    DWORD PTR [rax+0x8],r12d
   14000398a:	mov    rdi,rcx
   14000398d:	test   rcx,rcx
   140003990:	je     0x140003c6c
   140003996:	test   rdx,rdx
   140003999:	je     0x140003c6c
   14000399f:	call   0x1400035ec
   1400039a4:	lea    r13d,[r12+0x1]
   1400039a9:	cmp    eax,r13d
   1400039ac:	jne    0x140003ad7
   1400039b2:	mov    ecx,r13d
   1400039b5:	call   0x140007738
   1400039ba:	lea    r15d,[r12+0x2]
   1400039bf:	cmp    rdi,rax
   1400039c2:	jne    0x1400039cb
   1400039c4:	mov    ecx,0xfffffff5
   1400039c9:	jmp    0x1400039e1
   1400039cb:	mov    ecx,r15d
   1400039ce:	call   0x140007738
   1400039d3:	cmp    rdi,rax
   1400039d6:	jne    0x140003abf
   1400039dc:	mov    ecx,0xfffffff4
   1400039e1:	call   QWORD PTR [rip+0x46e1]        # 0x1400080c8
   1400039e7:	mov    rcx,rsi
   1400039ea:	mov    DWORD PTR [rsp+0x70],r12d
   1400039ef:	mov    r14,rax
   1400039f2:	call   QWORD PTR [rip+0x46c0]        # 0x1400080b8
   1400039f8:	lea    r9,[rsp+0x70]
   1400039fd:	mov    QWORD PTR [rsp+0x20],r12
   140003a02:	mov    r8d,eax
   140003a05:	mov    rdx,rsi
   140003a08:	mov    rcx,r14
   140003a0b:	mov    ebx,eax
   140003a0d:	call   QWORD PTR [rip+0x4685]        # 0x140008098
   140003a13:	test   eax,eax
   140003a15:	je     0x140003a1d
   140003a17:	cmp    ebx,DWORD PTR [rsp+0x70]
   140003a1b:	je     0x140003a79
   140003a1d:	call   QWORD PTR [rip+0x467d]        # 0x1400080a0
   140003a23:	cmp    eax,0x8
   140003a26:	jne    0x140003aa0
   140003a28:	mov    rcx,rsi
   140003a2b:	call   QWORD PTR [rip+0x4687]        # 0x1400080b8
   140003a31:	mov    ebp,eax
   140003a33:	mov    ebx,r12d
   140003a36:	test   eax,eax
   140003a38:	je     0x140003a79
   140003a3a:	mov    eax,0x400
   140003a3f:	mov    edi,ebp
   140003a41:	mov    QWORD PTR [rsp+0x20],r12
   140003a46:	sub    edi,ebx
   140003a48:	lea    r9,[rsp+0x70]
   140003a4d:	cmp    edi,eax
   140003a4f:	mov    rcx,r14
   140003a52:	cmova  edi,eax
   140003a55:	mov    eax,ebx
   140003a57:	mov    r8d,edi
   140003a5a:	lea    rdx,[rsi+rax*2]
   140003a5e:	call   QWORD PTR [rip+0x4634]        # 0x140008098
   140003a64:	test   eax,eax
   140003a66:	je     0x140003a81
   140003a68:	cmp    edi,DWORD PTR [rsp+0x70]
   140003a6c:	jne    0x140003a81
   140003a6e:	mov    eax,0x400
   140003a73:	add    ebx,eax
   140003a75:	cmp    ebx,ebp
   140003a77:	jb     0x140003a3f
   140003a79:	mov    eax,r13d
   140003a7c:	jmp    0x140003c81
   140003a81:	mov    ecx,r15d
   140003a84:	call   0x140007738
   140003a89:	mov    rcx,rax
   140003a8c:	call   0x140002a70
   140003a91:	call   0x140002ab0
   140003a96:	mov    ecx,r13d
   140003a99:	call   QWORD PTR [rip+0x45f1]        # 0x140008090
   140003a9f:	int3   
   140003aa0:	mov    ecx,r15d
   140003aa3:	call   0x140007738
   140003aa8:	mov    rcx,rax
   140003aab:	call   0x140002a70
   140003ab0:	call   0x140002ab0
   140003ab5:	mov    ecx,r13d
   140003ab8:	call   QWORD PTR [rip+0x45d2]        # 0x140008090
   140003abe:	int3   
   140003abf:	call   QWORD PTR [rip+0x45db]        # 0x1400080a0
   140003ac5:	test   eax,eax
   140003ac7:	jne    0x140003c7f
   140003acd:	mov    ecx,0x42b
   140003ad2:	jmp    0x140003c79
   140003ad7:	mov    rcx,rsi
   140003ada:	call   QWORD PTR [rip+0x45d8]        # 0x1400080b8
   140003ae0:	xor    edx,edx
   140003ae2:	lea    rcx,[rip+0x6af7]        # 0x14000a5e0
   140003ae9:	mov    r8d,0x100
   140003aef:	mov    r14d,eax
   140003af2:	call   0x14000788e
   140003af7:	mov    ebp,r12d
   140003afa:	test   r14d,r14d
   140003afd:	je     0x140003a79
   140003b03:	mov    eax,0xff
   140003b08:	mov    DWORD PTR [rsp+0x70],r12d
   140003b0d:	mov    ebx,r14d
   140003b10:	sub    ebx,ebp
   140003b12:	cmp    ebx,eax
   140003b14:	cmova  ebx,eax
   140003b17:	mov    eax,ebp
   140003b19:	lea    r15,[rsi+rax*2]
   140003b1d:	call   QWORD PTR [rip+0x4505]        # 0x140008028
   140003b23:	mov    QWORD PTR [rsp+0x38],r12
   140003b28:	mov    r9d,ebx
   140003b2b:	mov    QWORD PTR [rsp+0x30],r12
   140003b30:	mov    ecx,eax
   140003b32:	mov    DWORD PTR [rsp+0x28],r12d
   140003b37:	mov    r8,r15
   140003b3a:	xor    edx,edx
   140003b3c:	mov    QWORD PTR [rsp+0x20],r12
   140003b41:	call   QWORD PTR [rip+0x44d9]        # 0x140008020
   140003b47:	mov    DWORD PTR [rsp+0x70],eax
   140003b4b:	test   eax,eax
   140003b4d:	je     0x140003c4d
   140003b53:	cmp    eax,0xff
   140003b58:	jbe    0x140003ba9
   140003b5a:	add    eax,0xffffff01
   140003b5f:	cmp    eax,0x3
   140003b62:	jbe    0x140003b6a
   140003b64:	shr    eax,1
   140003b66:	sub    ebx,eax
   140003b68:	jmp    0x140003b6c
   140003b6a:	dec    ebx
   140003b6c:	mov    DWORD PTR [rsp+0x70],r12d
   140003b71:	test   ebx,ebx
   140003b73:	jne    0x140003b1d
   140003b75:	call   QWORD PTR [rip+0x4525]        # 0x1400080a0
   140003b7b:	test   eax,eax
   140003b7d:	jne    0x140003b8a
   140003b7f:	mov    ecx,0x42b
   140003b84:	call   QWORD PTR [rip+0x448e]        # 0x140008018
   140003b8a:	mov    ecx,r13d
   140003b8d:	call   0x140007738
   140003b92:	mov    rcx,rax
   140003b95:	call   0x140002a70
   140003b9a:	call   0x140002ab0
   140003b9f:	mov    ecx,r13d
   140003ba2:	call   QWORD PTR [rip+0x44e8]        # 0x140008090
   140003ba8:	int3   
   140003ba9:	cmp    eax,ebx
   140003bab:	lea    rcx,[rip+0x6a2e]        # 0x14000a5e0
   140003bb2:	mov    r8d,0x100
   140003bb8:	cmovb  ebx,eax
   140003bbb:	xor    edx,edx
   140003bbd:	call   0x14000788e
   140003bc2:	call   QWORD PTR [rip+0x4460]        # 0x140008028
   140003bc8:	mov    QWORD PTR [rsp+0x38],r12
   140003bcd:	mov    r9d,ebx
   140003bd0:	mov    ecx,eax
   140003bd2:	mov    QWORD PTR [rsp+0x30],r12
   140003bd7:	lea    rax,[rip+0x6a02]        # 0x14000a5e0
   140003bde:	mov    DWORD PTR [rsp+0x28],0xff
   140003be6:	mov    r8,r15
   140003be9:	mov    QWORD PTR [rsp+0x20],rax
   140003bee:	xor    edx,edx
   140003bf0:	call   QWORD PTR [rip+0x442a]        # 0x140008020
   140003bf6:	mov    DWORD PTR [rsp+0x70],eax
   140003bfa:	test   eax,eax
   140003bfc:	je     0x140003c2e
   140003bfe:	lea    r8,[rip+0x69db]        # 0x14000a5e0
   140003c05:	mov    rcx,rdi
   140003c08:	lea    rdx,[rip+0x4905]        # 0x140008514
   140003c0f:	add    ebp,ebx
   140003c11:	call   QWORD PTR [rip+0x46d9]        # 0x1400082f0
   140003c17:	mov    rcx,rdi
   140003c1a:	call   QWORD PTR [rip+0x4648]        # 0x140008268
   140003c20:	cmp    r14d,ebp
   140003c23:	jbe    0x140003a79
   140003c29:	jmp    0x140003b03
   140003c2e:	mov    ecx,r13d
   140003c31:	call   0x140007738
   140003c36:	mov    rcx,rax
   140003c39:	call   0x140002a70
   140003c3e:	call   0x140002ab0
   140003c43:	mov    ecx,r13d
   140003c46:	call   QWORD PTR [rip+0x4444]        # 0x140008090
   140003c4c:	int3   
   140003c4d:	mov    ecx,r13d
   140003c50:	call   0x140007738
   140003c55:	mov    rcx,rax
   140003c58:	call   0x140002a70
   140003c5d:	call   0x140002ab0
   140003c62:	mov    ecx,r13d
   140003c65:	call   QWORD PTR [rip+0x4425]        # 0x140008090
   140003c6b:	int3   
   140003c6c:	call   QWORD PTR [rip+0x442e]        # 0x1400080a0
   140003c72:	test   eax,eax
   140003c74:	jne    0x140003c7f
   140003c76:	lea    ecx,[rax+0x57]
   140003c79:	call   QWORD PTR [rip+0x4399]        # 0x140008018
   140003c7f:	xor    eax,eax
   140003c81:	lea    r11,[rsp+0x40]
   140003c86:	mov    rbx,QWORD PTR [r11+0x38]
   140003c8a:	mov    rbp,QWORD PTR [r11+0x40]
   140003c8e:	mov    rsi,QWORD PTR [r11+0x48]
   140003c92:	mov    rsp,r11
   140003c95:	pop    r15
   140003c97:	pop    r14
   140003c99:	pop    r13
   140003c9b:	pop    r12
   140003c9d:	pop    rdi
   140003c9e:	ret    
   140003c9f:	int3   
   140003ca0:	int3   
   140003ca1:	int3   
   140003ca2:	int3   
   140003ca3:	int3   
   140003ca4:	int3   
   140003ca5:	int3   
   140003ca6:	int3   
   140003ca7:	int3   
   140003ca8:	mov    QWORD PTR [rsp+0x20],r9
   140003cad:	push   rbx
   140003cae:	push   rbp
   140003caf:	push   rsi
   140003cb0:	push   rdi
   140003cb1:	push   r14
   140003cb3:	push   r15
   140003cb5:	sub    rsp,0x58
   140003cb9:	xor    r15d,r15d
   140003cbc:	mov    r14,rcx
   140003cbf:	test   r9,r9
   140003cc2:	je     0x140003e87
   140003cc8:	test   rcx,rcx
   140003ccb:	je     0x140003e87
   140003cd1:	test   edx,edx
   140003cd3:	jne    0x140003ce2
   140003cd5:	mov    rdx,r9
   140003cd8:	call   0x140003964
   140003cdd:	jmp    0x140003e9c
   140003ce2:	test   r8d,r8d
   140003ce5:	jne    0x140003dd2
   140003ceb:	or     ebx,0xffffffff
   140003cee:	mov    esi,r15d
   140003cf1:	lea    rax,[rsp+0xb0]
   140003cf9:	mov    QWORD PTR [rsp+0x40],rax
   140003cfe:	test   rax,rax
   140003d01:	je     0x140003dba
   140003d07:	mov    ecx,0x1000
   140003d0c:	mov    eax,0x800
   140003d11:	cmp    ebx,0xffffffff
   140003d14:	mov    r9d,0x1
   140003d1a:	cmove  eax,ecx
   140003d1d:	xor    edx,edx
   140003d1f:	add    esi,eax
   140003d21:	mov    r8d,esi
   140003d24:	lea    ecx,[rdx+0x3]
   140003d27:	call   0x1400024e8
   140003d2c:	mov    rdi,rax
   140003d2f:	test   rax,rax
   140003d32:	je     0x140003da4
   140003d34:	mov    rdx,QWORD PTR [rsp+0xa8]
   140003d3c:	lea    ecx,[rsi-0x1]
   140003d3f:	lea    rax,[rsp+0x40]
   140003d44:	xor    r9d,r9d
   140003d47:	mov    QWORD PTR [rsp+0x30],rax
   140003d4c:	xor    r8d,r8d
   140003d4f:	mov    DWORD PTR [rsp+0x28],ecx
   140003d53:	mov    ecx,0x400
   140003d58:	mov    QWORD PTR [rsp+0x20],rdi
   140003d5d:	call   QWORD PTR [rip+0x4385]        # 0x1400080e8
   140003d63:	mov    ebx,eax
   140003d65:	test   eax,eax
   140003d67:	jne    0x140003d82
   140003d69:	call   QWORD PTR [rip+0x4331]        # 0x1400080a0
   140003d6f:	test   eax,eax
   140003d71:	je     0x140003d9a
   140003d73:	call   QWORD PTR [rip+0x4327]        # 0x1400080a0
   140003d79:	cmp    eax,0x7a
   140003d7c:	jne    0x140003e9a
   140003d82:	mov    QWORD PTR [rsp+0x40],r15
   140003d87:	test   ebx,ebx
   140003d89:	je     0x140003cf1
   140003d8f:	mov    rdx,rdi
   140003d92:	mov    rcx,r14
   140003d95:	jmp    0x140003cd8
   140003d9a:	mov    eax,0x1
   140003d9f:	jmp    0x140003e9c
   140003da4:	call   QWORD PTR [rip+0x42f6]        # 0x1400080a0
   140003daa:	test   eax,eax
   140003dac:	jne    0x140003e9a
   140003db2:	lea    ecx,[rax+0x8]
   140003db5:	jmp    0x140003e94
   140003dba:	call   QWORD PTR [rip+0x42e0]        # 0x1400080a0
   140003dc0:	test   eax,eax
   140003dc2:	jne    0x140003e9a
   140003dc8:	mov    ecx,0x42b
   140003dcd:	jmp    0x140003e94
   140003dd2:	mov    ebp,r15d
   140003dd5:	lea    rax,[rsp+0xb0]
   140003ddd:	mov    QWORD PTR [rsp+0x40],rax
   140003de2:	test   rax,rax
   140003de5:	je     0x140003dba
   140003de7:	xor    edx,edx
   140003de9:	add    ebp,0x800
   140003def:	mov    r9d,0x1
   140003df5:	mov    r8d,ebp
   140003df8:	lea    ecx,[rdx+0x3]
   140003dfb:	call   0x1400024e8
   140003e00:	mov    rdi,rax
   140003e03:	test   rax,rax
   140003e06:	je     0x140003da4
   140003e08:	lea    rax,[rbp-0x1]
   140003e0c:	mov    ebx,r15d
   140003e0f:	cmp    rax,0x7ffffffe
   140003e15:	mov    edx,0x80070057
   140003e1a:	cmova  ebx,edx
   140003e1d:	test   ebx,ebx
   140003e1f:	js     0x140003e61
   140003e21:	mov    r9,QWORD PTR [rsp+0x40]
   140003e26:	lea    rsi,[rbp-0x1]
   140003e2a:	mov    r8,QWORD PTR [rsp+0xa8]
   140003e32:	mov    rdx,rsi
   140003e35:	mov    rcx,rdi
   140003e38:	mov    ebx,r15d
   140003e3b:	call   QWORD PTR [rip+0x44a7]        # 0x1400082e8
   140003e41:	test   eax,eax
   140003e43:	js     0x140003e55
   140003e45:	cdqe   
   140003e47:	cmp    rax,rsi
   140003e4a:	ja     0x140003e55
   140003e4c:	jne    0x140003e69
   140003e4e:	mov    WORD PTR [rdi+rsi*2],r15w
   140003e53:	jmp    0x140003e69
   140003e55:	mov    WORD PTR [rdi+rsi*2],r15w
   140003e5a:	mov    ebx,0x8007007a
   140003e5f:	jmp    0x140003e69
   140003e61:	test   ebp,ebp
   140003e63:	je     0x140003e69
   140003e65:	mov    WORD PTR [rdi],r15w
   140003e69:	mov    QWORD PTR [rsp+0x40],r15
   140003e6e:	cmp    ebx,0x8007007a
   140003e74:	je     0x140003dd5
   140003e7a:	test   ebx,ebx
   140003e7c:	jns    0x140003d8f
   140003e82:	movzx  ecx,bx
   140003e85:	jmp    0x140003e94
   140003e87:	call   QWORD PTR [rip+0x4213]        # 0x1400080a0
   140003e8d:	test   eax,eax
   140003e8f:	jne    0x140003e9a
   140003e91:	lea    ecx,[rax+0x57]
   140003e94:	call   QWORD PTR [rip+0x417e]        # 0x140008018
   140003e9a:	xor    eax,eax
   140003e9c:	add    rsp,0x58
   140003ea0:	pop    r15
   140003ea2:	pop    r14
   140003ea4:	pop    rdi
   140003ea5:	pop    rsi
   140003ea6:	pop    rbp
   140003ea7:	pop    rbx
   140003ea8:	ret    
   140003ea9:	int3   
   140003eaa:	int3   
   140003eab:	int3   
   140003eac:	int3   
   140003ead:	int3   
   140003eae:	int3   
   140003eaf:	int3   
   140003eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140003eb5:	mov    QWORD PTR [rsp+0x10],rbp
   140003eba:	mov    QWORD PTR [rsp+0x18],rsi
   140003ebf:	push   rdi
   140003ec0:	sub    rsp,0x30
   140003ec4:	xor    ebx,ebx
   140003ec6:	mov    rsi,r8
   140003ec9:	mov    rdi,rdx
   140003ecc:	mov    rbp,rcx
   140003ecf:	test   rcx,rcx
   140003ed2:	je     0x140003f9b
   140003ed8:	test   r8,r8
   140003edb:	je     0x140003f9b
   140003ee1:	test   rdx,rdx
   140003ee4:	jne    0x140003eef
   140003ee6:	cmp    DWORD PTR [r8],ebx
   140003ee9:	jne    0x140003f9b
   140003eef:	mov    eax,DWORD PTR [r8]
   140003ef2:	test   eax,eax
   140003ef4:	je     0x140003f02
   140003ef6:	cmp    eax,0x1
   140003ef9:	jbe    0x140003f80
   140003eff:	lea    ebx,[rax-0x1]
   140003f02:	test   rdx,rdx
   140003f05:	je     0x140003f1c
   140003f07:	test   ebx,ebx
   140003f09:	je     0x140003f1c
   140003f0b:	lea    r8d,[rbx+0x1]
   140003f0f:	xor    edx,edx
   140003f11:	add    r8,r8
   140003f14:	mov    rcx,rdi
   140003f17:	call   0x14000788e
   140003f1c:	or     eax,0xffffffff
   140003f1f:	test   ebx,ebx
   140003f21:	je     0x140003f31
   140003f23:	mov    rcx,rbp
   140003f26:	call   QWORD PTR [rip+0x4194]        # 0x1400080c0
   140003f2c:	cmp    eax,ebx
   140003f2e:	cmovg  eax,ebx
   140003f31:	xor    edx,edx
   140003f33:	mov    DWORD PTR [rsp+0x28],ebx
   140003f37:	mov    r9d,eax
   140003f3a:	mov    QWORD PTR [rsp+0x20],rdi
   140003f3f:	mov    r8,rbp
   140003f42:	lea    ecx,[rdx+0x1]
   140003f45:	call   QWORD PTR [rip+0x413d]        # 0x140008088
   140003f4b:	test   eax,eax
   140003f4d:	jne    0x140003f97
   140003f4f:	call   QWORD PTR [rip+0x414b]        # 0x1400080a0
   140003f55:	test   eax,eax
   140003f57:	jne    0x140003f64
   140003f59:	mov    ecx,0x42b
   140003f5e:	call   QWORD PTR [rip+0x40b4]        # 0x140008018
   140003f64:	test   rdi,rdi
   140003f67:	je     0x140003fae
   140003f69:	test   ebx,ebx
   140003f6b:	je     0x140003fae
   140003f6d:	lea    r8d,[rbx+0x1]
   140003f71:	xor    edx,edx
   140003f73:	add    r8,r8
   140003f76:	mov    rcx,rdi
   140003f79:	call   0x14000788e
   140003f7e:	jmp    0x140003fae
   140003f80:	mov    r8,rax
   140003f83:	xor    edx,edx
   140003f85:	add    r8,r8
   140003f88:	mov    rcx,rdi
   140003f8b:	call   0x14000788e
   140003f90:	mov    eax,0x1
   140003f95:	jmp    0x140003fb0
   140003f97:	mov    DWORD PTR [rsi],eax
   140003f99:	jmp    0x140003f90
   140003f9b:	call   QWORD PTR [rip+0x40ff]        # 0x1400080a0
   140003fa1:	test   eax,eax
   140003fa3:	jne    0x140003fae
   140003fa5:	lea    ecx,[rax+0x57]
   140003fa8:	call   QWORD PTR [rip+0x406a]        # 0x140008018
   140003fae:	xor    eax,eax
   140003fb0:	mov    rbx,QWORD PTR [rsp+0x40]
   140003fb5:	mov    rbp,QWORD PTR [rsp+0x48]
   140003fba:	mov    rsi,QWORD PTR [rsp+0x50]
   140003fbf:	add    rsp,0x30
   140003fc3:	pop    rdi
   140003fc4:	ret    
   140003fc5:	int3   
   140003fc6:	int3   
   140003fc7:	int3   
   140003fc8:	int3   
   140003fc9:	int3   
   140003fca:	int3   
   140003fcb:	int3   
   140003fcc:	mov    QWORD PTR [rsp+0x10],rbx
   140003fd1:	mov    QWORD PTR [rsp+0x18],rsi
   140003fd6:	mov    QWORD PTR [rsp+0x20],rdi
   140003fdb:	push   rbp
   140003fdc:	push   r12
   140003fde:	push   r13
   140003fe0:	push   r14
   140003fe2:	push   r15
   140003fe4:	mov    rbp,rsp
   140003fe7:	sub    rsp,0x80
   140003fee:	mov    rax,QWORD PTR [rip+0x6013]        # 0x14000a008
   140003ff5:	xor    rax,rsp
   140003ff8:	mov    QWORD PTR [rbp-0x10],rax
   140003ffc:	xor    r15d,r15d
   140003fff:	xor    eax,eax
   140004001:	mov    DWORD PTR [rbp-0x48],r15d
   140004005:	mov    r14,rcx
   140004008:	mov    DWORD PTR [rbp-0x4c],r15d
   14000400c:	mov    edi,r15d
   14000400f:	mov    DWORD PTR [rbp-0x40],r15d
   140004013:	mov    WORD PTR [rbp-0x20],r15w
   140004018:	mov    QWORD PTR [rbp-0x1e],rax
   14000401c:	mov    DWORD PTR [rbp-0x38],r15d
   140004020:	mov    QWORD PTR [rbp-0x34],rax
   140004024:	mov    QWORD PTR [rbp-0x2c],rax
   140004028:	test   rcx,rcx
   14000402b:	jne    0x140004049
   14000402d:	call   QWORD PTR [rip+0x406d]        # 0x1400080a0
   140004033:	test   eax,eax
   140004035:	jne    0x1400042ac
   14000403b:	lea    ecx,[rax+0x57]
   14000403e:	call   QWORD PTR [rip+0x3fd4]        # 0x140008018
   140004044:	jmp    0x1400042ac
   140004049:	mov    ecx,0xfffffff6
   14000404e:	call   QWORD PTR [rip+0x4074]        # 0x1400080c8
   140004054:	mov    rbx,rax
   140004057:	test   rax,rax
   14000405a:	je     0x1400042ac
   140004060:	lea    rdx,[rbp-0x40]
   140004064:	mov    rcx,rax
   140004067:	call   0x140003594
   14000406c:	test   eax,eax
   14000406e:	mov    esi,r15d
   140004071:	mov    r12d,0x1
   140004077:	sete   sil
   14000407b:	test   esi,esi
   14000407d:	jne    0x140004093
   14000407f:	mov    edx,r12d
   140004082:	mov    rcx,rbx
   140004085:	call   QWORD PTR [rip+0x3ff5]        # 0x140008080
   14000408b:	test   eax,eax
   14000408d:	je     0x1400042ac
   140004093:	xor    eax,eax
   140004095:	movsxd rsi,esi
   140004098:	mov    QWORD PTR [rbp-0x20],rax
   14000409c:	mov    WORD PTR [rbp-0x18],ax
   1400040a0:	mov    QWORD PTR [rbp-0x38],rax
   1400040a4:	lea    r13d,[rax+0xa]
   1400040a8:	mov    QWORD PTR [rbp-0x30],rax
   1400040ac:	mov    DWORD PTR [rbp-0x28],eax
   1400040af:	mov    QWORD PTR [rsp+0x20],r15
   1400040b4:	lea    r9,[rbp-0x48]
   1400040b8:	mov    r8d,r12d
   1400040bb:	mov    rcx,rbx
   1400040be:	cmp    rsi,r12
   1400040c1:	jne    0x140004104
   1400040c3:	lea    rdx,[rbp-0x50]
   1400040c7:	call   QWORD PTR [rip+0x3f43]        # 0x140008010
   1400040cd:	test   eax,eax
   1400040cf:	je     0x1400042ac
   1400040d5:	cmp    DWORD PTR [rbp-0x48],r15d
   1400040d9:	je     0x14000424e
   1400040df:	mov    al,BYTE PTR [rbp-0x50]
   1400040e2:	lea    r8,[rbp-0x48]
   1400040e6:	lea    rdx,[rbp-0x38]
   1400040ea:	mov    BYTE PTR [rbp-0x20],al
   1400040ed:	lea    rcx,[rbp-0x20]
   1400040f1:	mov    DWORD PTR [rbp-0x48],r13d
   1400040f5:	call   0x140003eb0
   1400040fa:	movzx  ecx,WORD PTR [rbp-0x38]
   1400040fe:	mov    WORD PTR [rbp-0x44],cx
   140004102:	jmp    0x14000411a
   140004104:	lea    rdx,[rbp-0x44]
   140004108:	call   QWORD PTR [rip+0x3f6a]        # 0x140008078
   14000410e:	test   eax,eax
   140004110:	je     0x1400042a0
   140004116:	movzx  ecx,WORD PTR [rbp-0x44]
   14000411a:	cmp    cx,0xd
   14000411e:	je     0x14000424e
   140004124:	mov    eax,0x8
   140004129:	cmp    cx,ax
   14000412c:	jne    0x1400041f2
   140004132:	test   edi,edi
   140004134:	je     0x1400040af
   14000413a:	mov    r9d,eax
   14000413d:	lea    r8,[rip+0x43d4]        # 0x140008518
   140004144:	mov    rdx,r13
   140004147:	lea    rcx,[rbp-0x38]
   14000414b:	call   0x140001008
   140004150:	mov    ecx,0xfffffff5
   140004155:	call   QWORD PTR [rip+0x3f6d]        # 0x1400080c8
   14000415b:	lea    r9,[rbp-0x4c]
   14000415f:	mov    QWORD PTR [rsp+0x20],r15
   140004164:	mov    rcx,rax
   140004167:	lea    rdx,[rbp-0x38]
   14000416b:	mov    r8d,r12d
   14000416e:	call   QWORD PTR [rip+0x3f24]        # 0x140008098
   140004174:	xor    r9d,r9d
   140004177:	lea    r8,[rip+0x439a]        # 0x140008518
   14000417e:	mov    rdx,r13
   140004181:	lea    rcx,[rbp-0x38]
   140004185:	call   0x140001008
   14000418a:	mov    ecx,0xfffffff5
   14000418f:	call   QWORD PTR [rip+0x3f33]        # 0x1400080c8
   140004195:	lea    r9,[rbp-0x4c]
   140004199:	mov    QWORD PTR [rsp+0x20],r15
   14000419e:	mov    rcx,rax
   1400041a1:	lea    rdx,[rbp-0x38]
   1400041a5:	mov    r8d,r12d
   1400041a8:	call   QWORD PTR [rip+0x3eea]        # 0x140008098
   1400041ae:	mov    r9d,0x8
   1400041b4:	lea    r8,[rip+0x435d]        # 0x140008518
   1400041bb:	mov    rdx,r13
   1400041be:	lea    rcx,[rbp-0x38]
   1400041c2:	call   0x140001008
   1400041c7:	mov    ecx,0xfffffff5
   1400041cc:	call   QWORD PTR [rip+0x3ef6]        # 0x1400080c8
   1400041d2:	lea    r9,[rbp-0x4c]
   1400041d6:	mov    QWORD PTR [rsp+0x20],r15
   1400041db:	mov    rcx,rax
   1400041de:	lea    rdx,[rbp-0x38]
   1400041e2:	mov    r8d,r12d
   1400041e5:	call   QWORD PTR [rip+0x3ead]        # 0x140008098
   1400041eb:	dec    edi
   1400041ed:	jmp    0x1400040af
   1400041f2:	cmp    edi,0xfd
   1400041f8:	jne    0x14000420e
   1400041fa:	mov    ecx,0xfffffff5
   1400041ff:	call   QWORD PTR [rip+0x3ec3]        # 0x1400080c8
   140004205:	lea    rdx,[rip+0x4314]        # 0x140008520
   14000420c:	jmp    0x140004234
   14000420e:	cmp    cx,r13w
   140004212:	je     0x1400040af
   140004218:	mov    eax,edi
   14000421a:	add    edi,r12d
   14000421d:	mov    WORD PTR [r14+rax*2],cx
   140004222:	mov    ecx,0xfffffff5
   140004227:	call   QWORD PTR [rip+0x3e9b]        # 0x1400080c8
   14000422d:	lea    rdx,[rip+0x4290]        # 0x1400084c4
   140004234:	mov    r8d,r12d
   140004237:	mov    QWORD PTR [rsp+0x20],r15
   14000423c:	lea    r9,[rbp-0x4c]
   140004240:	mov    rcx,rax
   140004243:	call   QWORD PTR [rip+0x3e4f]        # 0x140008098
   140004249:	jmp    0x1400040af
   14000424e:	mov    edx,DWORD PTR [rbp-0x40]
   140004251:	mov    rcx,rbx
   140004254:	mov    eax,edi
   140004256:	mov    WORD PTR [r14+rax*2],r15w
   14000425b:	call   QWORD PTR [rip+0x3e1f]        # 0x140008080
   140004261:	mov    r8d,r13d
   140004264:	lea    rdx,[rip+0x42b9]        # 0x140008524
   14000426b:	lea    rcx,[rbp-0x38]
   14000426f:	call   0x140003740
   140004274:	mov    ecx,0xfffffff5
   140004279:	call   QWORD PTR [rip+0x3e49]        # 0x1400080c8
   14000427f:	lea    r9,[rbp-0x4c]
   140004283:	mov    QWORD PTR [rsp+0x20],r15
   140004288:	mov    rcx,rax
   14000428b:	lea    rdx,[rbp-0x38]
   14000428f:	mov    r8d,0x2
   140004295:	call   QWORD PTR [rip+0x3dfd]        # 0x140008098
   14000429b:	mov    eax,r12d
   14000429e:	jmp    0x1400042ae
   1400042a0:	mov    edx,DWORD PTR [rbp-0x40]
   1400042a3:	mov    rcx,rbx
   1400042a6:	call   QWORD PTR [rip+0x3dd4]        # 0x140008080
   1400042ac:	xor    eax,eax
   1400042ae:	mov    rcx,QWORD PTR [rbp-0x10]
   1400042b2:	xor    rcx,rsp
   1400042b5:	call   0x140007220
   1400042ba:	lea    r11,[rsp+0x80]
   1400042c2:	mov    rbx,QWORD PTR [r11+0x38]
   1400042c6:	mov    rsi,QWORD PTR [r11+0x40]
   1400042ca:	mov    rdi,QWORD PTR [r11+0x48]
   1400042ce:	mov    rsp,r11
   1400042d1:	pop    r15
   1400042d3:	pop    r14
   1400042d5:	pop    r13
   1400042d7:	pop    r12
   1400042d9:	pop    rbp
   1400042da:	ret    
   1400042db:	int3   
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	int3   
   1400042e1:	int3   
   1400042e2:	int3   
   1400042e3:	int3   
   1400042e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400042e9:	push   rdi
   1400042ea:	sub    rsp,0x20
   1400042ee:	mov    rbx,rcx
   1400042f1:	test   rcx,rcx
   1400042f4:	jne    0x14000430d
   1400042f6:	call   QWORD PTR [rip+0x3da4]        # 0x1400080a0
   1400042fc:	test   eax,eax
   1400042fe:	jne    0x140004309
   140004300:	lea    ecx,[rbx+0x57]
   140004303:	call   QWORD PTR [rip+0x3d0f]        # 0x140008018
   140004309:	xor    eax,eax
   14000430b:	jmp    0x14000435b
   14000430d:	cmp    QWORD PTR [rcx],0x0
   140004311:	jne    0x14000431a
   140004313:	mov    eax,0x1
   140004318:	jmp    0x14000435b
   14000431a:	call   QWORD PTR [rip+0x3d50]        # 0x140008070
   140004320:	mov    rdi,rax
   140004323:	test   rax,rax
   140004326:	je     0x140004309
   140004328:	mov    rcx,QWORD PTR [rbx]
   14000432b:	call   0x140004568
   140004330:	cmp    eax,0xffffffff
   140004333:	jne    0x14000433c
   140004335:	mov    ecx,0x80004003
   14000433a:	jmp    0x140004303
   14000433c:	mov    rcx,QWORD PTR [rbx]
   14000433f:	xor    edx,edx
   140004341:	movsxd r8,eax
   140004344:	call   0x14000788e
   140004349:	mov    r8,QWORD PTR [rbx]
   14000434c:	xor    edx,edx
   14000434e:	mov    rcx,rdi
   140004351:	call   QWORD PTR [rip+0x3d11]        # 0x140008068
   140004357:	and    QWORD PTR [rbx],0x0
   14000435b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004360:	add    rsp,0x20
   140004364:	pop    rdi
   140004365:	ret    
   140004366:	int3   
   140004367:	int3   
   140004368:	int3   
   140004369:	int3   
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	rex push rbx
   14000436e:	sub    rsp,0x20
   140004372:	mov    rbx,rcx
   140004375:	test   rcx,rcx
   140004378:	jne    0x140004389
   14000437a:	call   QWORD PTR [rip+0x3d20]        # 0x1400080a0
   140004380:	test   eax,eax
   140004382:	jne    0x1400043af
   140004384:	lea    ecx,[rbx+0x57]
   140004387:	jmp    0x1400043a9
   140004389:	call   QWORD PTR [rip+0x3ce1]        # 0x140008070
   14000438f:	test   rax,rax
   140004392:	je     0x1400043af
   140004394:	mov    r8,rbx
   140004397:	xor    edx,edx
   140004399:	mov    rcx,rax
   14000439c:	call   QWORD PTR [rip+0x3cbe]        # 0x140008060
   1400043a2:	test   eax,eax
   1400043a4:	jne    0x1400043b1
   1400043a6:	lea    ecx,[rax+0x6]
   1400043a9:	call   QWORD PTR [rip+0x3c69]        # 0x140008018
   1400043af:	xor    eax,eax
   1400043b1:	add    rsp,0x20
   1400043b5:	pop    rbx
   1400043b6:	ret    
   1400043b7:	int3   
   1400043b8:	int3   
   1400043b9:	int3   
   1400043ba:	int3   
   1400043bb:	int3   
   1400043bc:	int3   
   1400043bd:	int3   
   1400043be:	int3   
   1400043bf:	int3   
   1400043c0:	rex push rbx
   1400043c2:	sub    rsp,0x30
   1400043c6:	mov    ebx,ecx
   1400043c8:	test   ecx,ecx
   1400043ca:	jne    0x1400043e3
   1400043cc:	call   QWORD PTR [rip+0x3cce]        # 0x1400080a0
   1400043d2:	test   eax,eax
   1400043d4:	jne    0x1400043df
   1400043d6:	lea    ecx,[rax+0x57]
   1400043d9:	call   QWORD PTR [rip+0x3c39]        # 0x140008018
   1400043df:	xor    eax,eax
   1400043e1:	jmp    0x140004454
   1400043e3:	call   QWORD PTR [rip+0x3c87]        # 0x140008070
   1400043e9:	test   rax,rax
   1400043ec:	je     0x1400043df
   1400043ee:	mov    r8,rbx
   1400043f1:	mov    edx,0xc
   1400043f6:	mov    rcx,rax
   1400043f9:	call   QWORD PTR [rip+0x3c59]        # 0x140008058
   1400043ff:	mov    QWORD PTR [rsp+0x20],rax
   140004404:	jmp    0x140004454
   140004406:	cmp    eax,0xc0000017
   14000440b:	jne    0x140004424
   14000440d:	call   QWORD PTR [rip+0x3c8d]        # 0x1400080a0
   140004413:	test   eax,eax
   140004415:	jne    0x140004420
   140004417:	lea    ecx,[rax+0x8]
   14000441a:	call   QWORD PTR [rip+0x3bf8]        # 0x140008018
   140004420:	xor    eax,eax
   140004422:	jmp    0x140004454
   140004424:	cmp    eax,0xc0000005
   140004429:	jne    0x14000443f
   14000442b:	mov    ecx,0x570
   140004430:	call   QWORD PTR [rip+0x3be2]        # 0x140008018
   140004436:	call   0x140002904
   14000443b:	xor    eax,eax
   14000443d:	jmp    0x140004454
   14000443f:	call   QWORD PTR [rip+0x3c5b]        # 0x1400080a0
   140004445:	test   eax,eax
   140004447:	jne    0x140004452
   140004449:	lea    ecx,[rax+0x8]
   14000444c:	call   QWORD PTR [rip+0x3bc6]        # 0x140008018
   140004452:	xor    eax,eax
   140004454:	add    rsp,0x30
   140004458:	pop    rbx
   140004459:	ret    
   14000445a:	int3   
   14000445b:	int3   
   14000445c:	int3   
   14000445d:	int3   
   14000445e:	int3   
   14000445f:	int3   
   140004460:	mov    QWORD PTR [rsp+0x8],rbx
   140004465:	push   rdi
   140004466:	sub    rsp,0x20
   14000446a:	mov    edi,edx
   14000446c:	mov    rbx,rcx
   14000446f:	test   rcx,rcx
   140004472:	je     0x140004540
   140004478:	mov    rcx,QWORD PTR [rcx]
   14000447b:	test   rcx,rcx
   14000447e:	je     0x140004540
   140004484:	test   edx,edx
   140004486:	jne    0x140004495
   140004488:	mov    rcx,rbx
   14000448b:	call   0x1400042e4
   140004490:	jmp    0x140004555
   140004495:	call   0x14000436c
   14000449a:	test   eax,eax
   14000449c:	jne    0x1400044a7
   14000449e:	and    QWORD PTR [rbx],0x0
   1400044a2:	jmp    0x140004553
   1400044a7:	call   QWORD PTR [rip+0x3bc3]        # 0x140008070
   1400044ad:	test   rax,rax
   1400044b0:	je     0x140004553
   1400044b6:	mov    r9,rdi
   1400044b9:	mov    r8,QWORD PTR [rbx]
   1400044bc:	mov    edx,0xc
   1400044c1:	mov    rcx,rax
   1400044c4:	call   QWORD PTR [rip+0x3b86]        # 0x140008050
   1400044ca:	test   rax,rax
   1400044cd:	jne    0x1400044e6
   1400044cf:	call   QWORD PTR [rip+0x3bcb]        # 0x1400080a0
   1400044d5:	test   eax,eax
   1400044d7:	jne    0x1400044e2
   1400044d9:	lea    ecx,[rax+0x8]
   1400044dc:	call   QWORD PTR [rip+0x3b36]        # 0x140008018
   1400044e2:	xor    eax,eax
   1400044e4:	jmp    0x140004555
   1400044e6:	mov    QWORD PTR [rbx],rax
   1400044e9:	mov    eax,0x1
   1400044ee:	jmp    0x140004555
   1400044f0:	cmp    eax,0xc0000017
   1400044f5:	jne    0x14000450e
   1400044f7:	call   QWORD PTR [rip+0x3ba3]        # 0x1400080a0
   1400044fd:	test   eax,eax
   1400044ff:	jne    0x14000450a
   140004501:	lea    ecx,[rax+0x8]
   140004504:	call   QWORD PTR [rip+0x3b0e]        # 0x140008018
   14000450a:	xor    eax,eax
   14000450c:	jmp    0x140004555
   14000450e:	cmp    eax,0xc0000005
   140004513:	jne    0x140004529
   140004515:	mov    ecx,0x570
   14000451a:	call   QWORD PTR [rip+0x3af8]        # 0x140008018
   140004520:	call   0x140002904
   140004525:	xor    eax,eax
   140004527:	jmp    0x140004555
   140004529:	call   QWORD PTR [rip+0x3b71]        # 0x1400080a0
   14000452f:	test   eax,eax
   140004531:	jne    0x14000453c
   140004533:	lea    ecx,[rax+0x8]
   140004536:	call   QWORD PTR [rip+0x3adc]        # 0x140008018
   14000453c:	xor    eax,eax
   14000453e:	jmp    0x140004555
   140004540:	call   QWORD PTR [rip+0x3b5a]        # 0x1400080a0
   140004546:	test   eax,eax
   140004548:	jne    0x140004553
   14000454a:	lea    ecx,[rax+0x57]
   14000454d:	call   QWORD PTR [rip+0x3ac5]        # 0x140008018
   140004553:	xor    eax,eax
   140004555:	mov    rbx,QWORD PTR [rsp+0x30]
   14000455a:	add    rsp,0x20
   14000455e:	pop    rdi
   14000455f:	ret    
   140004560:	int3   
   140004561:	int3   
   140004562:	int3   
   140004563:	int3   
   140004564:	int3   
   140004565:	int3   
   140004566:	int3   
   140004567:	int3   
   140004568:	rex push rbx
   14000456a:	sub    rsp,0x20
   14000456e:	mov    rbx,rcx
   140004571:	test   rcx,rcx
   140004574:	jne    0x140004592
   140004576:	call   QWORD PTR [rip+0x3b24]        # 0x1400080a0
   14000457c:	test   eax,eax
   14000457e:	jne    0x140004589
   140004580:	lea    ecx,[rbx+0x57]
   140004583:	call   QWORD PTR [rip+0x3a8f]        # 0x140008018
   140004589:	or     eax,0xffffffff
   14000458c:	add    rsp,0x20
   140004590:	pop    rbx
   140004591:	ret    
   140004592:	call   0x14000436c
   140004597:	test   eax,eax
   140004599:	je     0x140004589
   14000459b:	call   QWORD PTR [rip+0x3acf]        # 0x140008070
   1400045a1:	test   rax,rax
   1400045a4:	je     0x140004589
   1400045a6:	mov    r8,rbx
   1400045a9:	xor    edx,edx
   1400045ab:	mov    rcx,rax
   1400045ae:	add    rsp,0x20
   1400045b2:	pop    rbx
   1400045b3:	rex.W jmp QWORD PTR [rip+0x3a8e]        # 0x140008048
   1400045ba:	int3   
   1400045bb:	int3   
   1400045bc:	int3   
   1400045bd:	int3   
   1400045be:	int3   
   1400045bf:	int3   
   1400045c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400045c5:	push   rdi
   1400045c6:	sub    rsp,0x20
   1400045ca:	xor    ebx,ebx
   1400045cc:	mov    rdi,rcx
   1400045cf:	test   rcx,rcx
   1400045d2:	jne    0x1400045eb
   1400045d4:	call   QWORD PTR [rip+0x3ac6]        # 0x1400080a0
   1400045da:	test   eax,eax
   1400045dc:	jne    0x1400045e7
   1400045de:	lea    ecx,[rdi+0x57]
   1400045e1:	call   QWORD PTR [rip+0x3a31]        # 0x140008018
   1400045e7:	xor    eax,eax
   1400045e9:	jmp    0x140004616
   1400045eb:	call   QWORD PTR [rip+0x3ac7]        # 0x1400080b8
   1400045f1:	mov    r9d,0x2
   1400045f7:	cmp    eax,r9d
   1400045fa:	jbe    0x1400045e7
   1400045fc:	lea    r8d,[r9-0x1]
   140004600:	mov    rcx,rdi
   140004603:	lea    rdx,[rip+0x3e5e]        # 0x140008468
   14000460a:	call   0x1400038d4
   14000460f:	test   eax,eax
   140004611:	sete   bl
   140004614:	mov    eax,ebx
   140004616:	mov    rbx,QWORD PTR [rsp+0x30]
   14000461b:	add    rsp,0x20
   14000461f:	pop    rdi
   140004620:	ret    
   140004621:	int3   
   140004622:	int3   
   140004623:	int3   
   140004624:	int3   
   140004625:	int3   
   140004626:	int3   
   140004627:	int3   
   140004628:	mov    QWORD PTR [rsp+0x10],rbx
   14000462d:	mov    QWORD PTR [rsp+0x18],rsi
   140004632:	mov    QWORD PTR [rsp+0x20],rdi
   140004637:	push   rbp
   140004638:	push   r14
   14000463a:	push   r15
   14000463c:	mov    rbp,rsp
   14000463f:	sub    rsp,0x20
   140004643:	mov    rsi,rcx
   140004646:	xor    ebx,ebx
   140004648:	xor    ecx,ecx
   14000464a:	mov    DWORD PTR [rbp+0x20],ebx
   14000464d:	call   QWORD PTR [rip+0x39c5]        # 0x140008018
   140004653:	test   rsi,rsi
   140004656:	je     0x1400047dd
   14000465c:	mov    rcx,rsi
   14000465f:	call   QWORD PTR [rip+0x3a53]        # 0x1400080b8
   140004665:	test   eax,eax
   140004667:	je     0x1400047dd
   14000466d:	lea    r14d,[rbx+0x4]
   140004671:	xor    edx,edx
   140004673:	mov    ecx,r14d
   140004676:	lea    r8,[rbp+0x20]
   14000467a:	call   QWORD PTR [rip+0x39c0]        # 0x140008040
   140004680:	call   QWORD PTR [rip+0x3a1a]        # 0x1400080a0
   140004686:	cmp    eax,0xea
   14000468b:	je     0x140004694
   14000468d:	xor    eax,eax
   14000468f:	jmp    0x1400047e2
   140004694:	mov    r8d,DWORD PTR [rbp+0x20]
   140004698:	mov    edi,0x1
   14000469d:	mov    r9d,edi
   1400046a0:	xor    edx,edx
   1400046a2:	lea    ecx,[rdi+0xd]
   1400046a5:	call   0x1400024e8
   1400046aa:	mov    r15,rax
   1400046ad:	test   rax,rax
   1400046b0:	jne    0x1400046c7
   1400046b2:	call   QWORD PTR [rip+0x39e8]        # 0x1400080a0
   1400046b8:	test   eax,eax
   1400046ba:	jne    0x14000468d
   1400046bc:	lea    ecx,[rdi+0x7]
   1400046bf:	call   QWORD PTR [rip+0x3953]        # 0x140008018
   1400046c5:	jmp    0x14000468d
   1400046c7:	lea    r8,[rbp+0x20]
   1400046cb:	mov    rdx,rax
   1400046ce:	mov    ecx,r14d
   1400046d1:	call   QWORD PTR [rip+0x3969]        # 0x140008040
   1400046d7:	test   eax,eax
   1400046d9:	je     0x14000468d
   1400046db:	xor    r9d,r9d
   1400046de:	mov    r8d,edi
   1400046e1:	mov    rdx,rsi
   1400046e4:	mov    rcx,r15
   1400046e7:	call   0x1400038d4
   1400046ec:	test   eax,eax
   1400046ee:	jne    0x1400046f7
   1400046f0:	mov    eax,edi
   1400046f2:	jmp    0x1400047e2
   1400046f7:	mov    rcx,rsi
   1400046fa:	call   0x140004904
   1400046ff:	xor    edx,edx
   140004701:	mov    DWORD PTR [rbp+0x20],ebx
   140004704:	lea    r8,[rbp+0x20]
   140004708:	cmp    eax,edi
   14000470a:	jne    0x140004783
   14000470c:	mov    rcx,rsi
   14000470f:	call   0x1400049e0
   140004714:	test   eax,eax
   140004716:	je     0x14000468d
   14000471c:	mov    r8d,DWORD PTR [rbp+0x20]
   140004720:	xor    edx,edx
   140004722:	mov    r9d,edi
   140004725:	lea    ecx,[rdx+0xf]
   140004728:	call   0x1400024e8
   14000472d:	mov    r14,rax
   140004730:	test   rax,rax
   140004733:	je     0x14000468d
   140004739:	lea    r8,[rbp+0x20]
   14000473d:	mov    rdx,rax
   140004740:	mov    rcx,rsi
   140004743:	call   0x1400049e0
   140004748:	test   eax,eax
   14000474a:	je     0x14000468d
   140004750:	xor    r9d,r9d
   140004753:	mov    r8d,edi
   140004756:	mov    rdx,r14
   140004759:	mov    rcx,r15
   14000475c:	call   0x1400038d4
   140004761:	test   eax,eax
   140004763:	je     0x1400046f0
   140004765:	lea    rdx,[rip+0x3dcc]        # 0x140008538
   14000476c:	mov    r8d,edi
   14000476f:	xor    r9d,r9d
   140004772:	mov    rcx,r14
   140004775:	call   0x1400038d4
   14000477a:	test   eax,eax
   14000477c:	sete   bl
   14000477f:	mov    eax,ebx
   140004781:	jmp    0x1400047e2
   140004783:	mov    r15d,0x7
   140004789:	mov    ecx,r15d
   14000478c:	call   QWORD PTR [rip+0x38ae]        # 0x140008040
   140004792:	call   QWORD PTR [rip+0x3908]        # 0x1400080a0
   140004798:	cmp    eax,0xea
   14000479d:	jne    0x14000468d
   1400047a3:	mov    r8d,DWORD PTR [rbp+0x20]
   1400047a7:	xor    edx,edx
   1400047a9:	mov    r9d,edi
   1400047ac:	lea    ecx,[rdx+0xe]
   1400047af:	call   0x1400024e8
   1400047b4:	mov    r14,rax
   1400047b7:	test   rax,rax
   1400047ba:	je     0x14000468d
   1400047c0:	lea    r8,[rbp+0x20]
   1400047c4:	mov    rdx,rax
   1400047c7:	mov    ecx,r15d
   1400047ca:	call   QWORD PTR [rip+0x3870]        # 0x140008040
   1400047d0:	test   eax,eax
   1400047d2:	je     0x14000468d
   1400047d8:	mov    rdx,rsi
   1400047db:	jmp    0x14000476c
   1400047dd:	mov    eax,0x1
   1400047e2:	mov    rbx,QWORD PTR [rsp+0x48]
   1400047e7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400047ec:	mov    rdi,QWORD PTR [rsp+0x58]
   1400047f1:	add    rsp,0x20
   1400047f5:	pop    r15
   1400047f7:	pop    r14
   1400047f9:	pop    rbp
   1400047fa:	ret    
   1400047fb:	int3   
   1400047fc:	int3   
   1400047fd:	int3   
   1400047fe:	int3   
   1400047ff:	int3   
   140004800:	int3   
   140004801:	int3   
   140004802:	int3   
   140004803:	int3   
   140004804:	mov    QWORD PTR [rsp+0x10],rbx
   140004809:	push   rdi
   14000480a:	sub    rsp,0x70
   14000480e:	mov    rax,QWORD PTR [rip+0x57f3]        # 0x14000a008
   140004815:	xor    rax,rsp
   140004818:	mov    QWORD PTR [rsp+0x60],rax
   14000481d:	movups xmm0,XMMWORD PTR [rip+0x3d2c]        # 0x140008550
   140004824:	xor    ebx,ebx
   140004826:	mov    rdi,rcx
   140004829:	movups xmm1,XMMWORD PTR [rip+0x3d30]        # 0x140008560
   140004830:	movups XMMWORD PTR [rsp+0x28],xmm0
   140004835:	movups xmm0,XMMWORD PTR [rip+0x3d34]        # 0x140008570
   14000483c:	movups XMMWORD PTR [rsp+0x38],xmm1
   140004841:	movsd  xmm1,QWORD PTR [rip+0x3d37]        # 0x140008580
   140004849:	movsd  QWORD PTR [rsp+0x58],xmm1
   14000484f:	movups XMMWORD PTR [rsp+0x48],xmm0
   140004854:	test   rcx,rcx
   140004857:	je     0x1400048de
   14000485d:	call   QWORD PTR [rip+0x3855]        # 0x1400080b8
   140004863:	test   eax,eax
   140004865:	je     0x1400048de
   140004867:	mov    rcx,rdi
   14000486a:	call   0x140004904
   14000486f:	mov    rcx,rdi
   140004872:	cmp    eax,0x1
   140004875:	jne    0x1400048c2
   140004877:	lea    r8,[rsp+0x20]
   14000487c:	mov    DWORD PTR [rsp+0x20],ebx
   140004880:	xor    edx,edx
   140004882:	call   0x1400049e0
   140004887:	test   eax,eax
   140004889:	jne    0x14000488f
   14000488b:	xor    eax,eax
   14000488d:	jmp    0x1400048e3
   14000488f:	mov    r8d,DWORD PTR [rsp+0x20]
   140004894:	xor    edx,edx
   140004896:	mov    r9d,0x1
   14000489c:	lea    ecx,[rdx+0xf]
   14000489f:	call   0x1400024e8
   1400048a4:	test   rax,rax
   1400048a7:	je     0x14000488b
   1400048a9:	lea    r8,[rsp+0x20]
   1400048ae:	mov    rdx,rax
   1400048b1:	mov    rcx,rdi
   1400048b4:	call   0x1400049e0
   1400048b9:	test   eax,eax
   1400048bb:	setne  bl
   1400048be:	mov    eax,ebx
   1400048c0:	jmp    0x1400048e3
   1400048c2:	lea    rdx,[rsp+0x28]
   1400048c7:	call   0x140003328
   1400048cc:	cmp    eax,0xffffffff
   1400048cf:	je     0x1400048de
   1400048d1:	mov    ecx,0x35
   1400048d6:	call   QWORD PTR [rip+0x373c]        # 0x140008018
   1400048dc:	jmp    0x14000488b
   1400048de:	mov    eax,0x1
   1400048e3:	mov    rcx,QWORD PTR [rsp+0x60]
   1400048e8:	xor    rcx,rsp
   1400048eb:	call   0x140007220
   1400048f0:	mov    rbx,QWORD PTR [rsp+0x88]
   1400048f8:	add    rsp,0x70
   1400048fc:	pop    rdi
   1400048fd:	ret    
   1400048fe:	int3   
   1400048ff:	int3   
   140004900:	int3   
   140004901:	int3   
   140004902:	int3   
   140004903:	int3   
   140004904:	mov    QWORD PTR [rsp+0x10],rbx
   140004909:	push   rdi
   14000490a:	sub    rsp,0x40
   14000490e:	mov    rax,QWORD PTR [rip+0x56f3]        # 0x14000a008
   140004915:	xor    rax,rsp
   140004918:	mov    QWORD PTR [rsp+0x30],rax
   14000491d:	xor    ebx,ebx
   14000491f:	mov    rdi,rcx
   140004922:	test   rcx,rcx
   140004925:	je     0x1400049b3
   14000492b:	call   QWORD PTR [rip+0x3787]        # 0x1400080b8
   140004931:	test   eax,eax
   140004933:	je     0x1400049b3
   140004935:	xor    r9d,r9d
   140004938:	lea    ecx,[rbx+0x10]
   14000493b:	xor    r8d,r8d
   14000493e:	mov    rdx,rdi
   140004941:	call   0x1400024e8
   140004946:	test   rax,rax
   140004949:	jne    0x14000495a
   14000494b:	call   QWORD PTR [rip+0x374f]        # 0x1400080a0
   140004951:	test   eax,eax
   140004953:	jne    0x1400049be
   140004955:	lea    ecx,[rbx+0x8]
   140004958:	jmp    0x1400049b8
   14000495a:	lea    rdx,[rip+0x3c27]        # 0x140008588
   140004961:	mov    rcx,rax
   140004964:	call   QWORD PTR [rip+0x3906]        # 0x140008270
   14000496a:	mov    rdi,rax
   14000496d:	test   rax,rax
   140004970:	je     0x1400049b3
   140004972:	xor    r8d,r8d
   140004975:	mov    rcx,rdi
   140004978:	call   0x1400030bc
   14000497d:	test   eax,eax
   14000497f:	je     0x1400049be
   140004981:	mov    rcx,rdi
   140004984:	call   0x140002fe8
   140004989:	cmp    eax,0xff
   14000498e:	ja     0x1400049be
   140004990:	lea    rdx,[rip+0x3bf1]        # 0x140008588
   140004997:	xor    ecx,ecx
   140004999:	inc    ebx
   14000499b:	call   QWORD PTR [rip+0x38cf]        # 0x140008270
   1400049a1:	mov    rdi,rax
   1400049a4:	test   rax,rax
   1400049a7:	jne    0x140004972
   1400049a9:	cmp    ebx,0x4
   1400049ac:	jne    0x1400049b3
   1400049ae:	lea    eax,[rdi+0x1]
   1400049b1:	jmp    0x1400049c0
   1400049b3:	mov    ecx,0x254f
   1400049b8:	call   QWORD PTR [rip+0x365a]        # 0x140008018
   1400049be:	xor    eax,eax
   1400049c0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400049c5:	xor    rcx,rsp
   1400049c8:	call   0x140007220
   1400049cd:	mov    rbx,QWORD PTR [rsp+0x58]
   1400049d2:	add    rsp,0x40
   1400049d6:	pop    rdi
   1400049d7:	ret    
   1400049d8:	int3   
   1400049d9:	int3   
   1400049da:	int3   
   1400049db:	int3   
   1400049dc:	int3   
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	rex push rbp
   1400049e2:	push   rbx
   1400049e3:	push   rsi
   1400049e4:	push   rdi
   1400049e5:	push   r14
   1400049e7:	lea    rbp,[rsp-0x980]
   1400049ef:	sub    rsp,0xa80
   1400049f6:	mov    rax,QWORD PTR [rip+0x560b]        # 0x14000a008
   1400049fd:	xor    rax,rsp
   140004a00:	mov    QWORD PTR [rbp+0x970],rax
   140004a07:	xor    ebx,ebx
   140004a09:	mov    rsi,r8
   140004a0c:	mov    r14,rdx
   140004a0f:	mov    QWORD PTR [rsp+0x40],rbx
   140004a14:	mov    rdi,rcx
   140004a17:	mov    DWORD PTR [rsp+0x48],ebx
   140004a1b:	xor    edx,edx
   140004a1d:	lea    rcx,[rsp+0x4c]
   140004a22:	lea    r8d,[rbx+0x2c]
   140004a26:	call   0x14000788e
   140004a2b:	mov    WORD PTR [rbp+0x962],bx
   140004a32:	test   rdi,rdi
   140004a35:	je     0x140004b62
   140004a3b:	test   rsi,rsi
   140004a3e:	je     0x140004b62
   140004a44:	cmp    DWORD PTR [rsi],ebx
   140004a46:	je     0x140004a5a
   140004a48:	cmp    DWORD PTR [rsi],0x2
   140004a4b:	jb     0x140004b62
   140004a51:	test   r14,r14
   140004a54:	je     0x140004b62
   140004a5a:	cmp    DWORD PTR [rip+0x5c90],ebx        # 0x14000a6f0
   140004a60:	jne    0x140004a8c
   140004a62:	mov    ecx,0x202
   140004a67:	lea    rdx,[rbp-0x80]
   140004a6b:	call   QWORD PTR [rip+0x37b7]        # 0x140008228
   140004a71:	test   eax,eax
   140004a73:	je     0x140004a82
   140004a75:	call   QWORD PTR [rip+0x37a5]        # 0x140008220
   140004a7b:	mov    ecx,eax
   140004a7d:	jmp    0x140004b6f
   140004a82:	mov    DWORD PTR [rip+0x5c64],0x1        # 0x14000a6f0
   140004a8c:	lea    r9,[rsp+0x40]
   140004a91:	xor    edx,edx
   140004a93:	lea    r8,[rsp+0x48]
   140004a98:	mov    rcx,rdi
   140004a9b:	call   QWORD PTR [rip+0x3777]        # 0x140008218
   140004aa1:	test   eax,eax
   140004aa3:	jne    0x140004b75
   140004aa9:	mov    rdi,QWORD PTR [rsp+0x40]
   140004aae:	jmp    0x140004b05
   140004ab0:	mov    WORD PTR [rbp+0x160],bx
   140004ab7:	lea    rax,[rbp+0x120]
   140004abe:	mov    edx,DWORD PTR [rdi+0x10]
   140004ac1:	lea    r8,[rbp+0x160]
   140004ac8:	mov    rcx,QWORD PTR [rdi+0x20]
   140004acc:	mov    r9d,0x401
   140004ad2:	mov    DWORD PTR [rsp+0x30],0x4
   140004ada:	mov    DWORD PTR [rsp+0x28],0x20
   140004ae2:	mov    QWORD PTR [rsp+0x20],rax
   140004ae7:	call   QWORD PTR [rip+0x3723]        # 0x140008210
   140004aed:	test   eax,eax
   140004aef:	je     0x140004b0c
   140004af1:	cmp    eax,0x2afc
   140004af6:	jne    0x140004b01
   140004af8:	cmp    WORD PTR [rbp+0x160],bx
   140004aff:	jne    0x140004b0c
   140004b01:	mov    rdi,QWORD PTR [rdi+0x28]
   140004b05:	test   rdi,rdi
   140004b08:	jne    0x140004ab0
   140004b0a:	jmp    0x140004b53
   140004b0c:	lea    rdx,[rip+0x3a75]        # 0x140008588
   140004b13:	lea    rcx,[rbp+0x160]
   140004b1a:	call   QWORD PTR [rip+0x3750]        # 0x140008270
   140004b20:	mov    rdi,rax
   140004b23:	test   rax,rax
   140004b26:	je     0x140004b33
   140004b28:	mov    rcx,rax
   140004b2b:	call   QWORD PTR [rip+0x3587]        # 0x1400080b8
   140004b31:	mov    ebx,eax
   140004b33:	lea    eax,[rbx+0x1]
   140004b36:	cmp    DWORD PTR [rsi],eax
   140004b38:	jae    0x140004b43
   140004b3a:	mov    DWORD PTR [rsi],eax
   140004b3c:	mov    ebx,0x1
   140004b41:	jmp    0x140004b53
   140004b43:	mov    r8d,DWORD PTR [rsi]
   140004b46:	mov    rdx,rdi
   140004b49:	mov    rcx,r14
   140004b4c:	call   0x140003740
   140004b51:	mov    ebx,eax
   140004b53:	mov    rcx,QWORD PTR [rsp+0x40]
   140004b58:	call   QWORD PTR [rip+0x36aa]        # 0x140008208
   140004b5e:	mov    eax,ebx
   140004b60:	jmp    0x140004b77
   140004b62:	call   QWORD PTR [rip+0x3538]        # 0x1400080a0
   140004b68:	test   eax,eax
   140004b6a:	jne    0x140004b75
   140004b6c:	lea    ecx,[rax+0x57]
   140004b6f:	call   QWORD PTR [rip+0x34a3]        # 0x140008018
   140004b75:	xor    eax,eax
   140004b77:	mov    rcx,QWORD PTR [rbp+0x970]
   140004b7e:	xor    rcx,rsp
   140004b81:	call   0x140007220
   140004b86:	add    rsp,0xa80
   140004b8d:	pop    r14
   140004b8f:	pop    rdi
   140004b90:	pop    rsi
   140004b91:	pop    rbx
   140004b92:	pop    rbp
   140004b93:	ret    
   140004b94:	int3   
   140004b95:	int3   
   140004b96:	int3   
   140004b97:	int3   
   140004b98:	int3   
   140004b99:	int3   
   140004b9a:	int3   
   140004b9b:	int3   
   140004b9c:	mov    QWORD PTR [rsp+0x10],rbx
   140004ba1:	push   rdi
   140004ba2:	sub    rsp,0x20
   140004ba6:	xor    ebx,ebx
   140004ba8:	mov    rdi,rcx
   140004bab:	mov    QWORD PTR [rsp+0x30],rbx
   140004bb0:	test   rcx,rcx
   140004bb3:	je     0x140004bf9
   140004bb5:	call   QWORD PTR [rip+0x34fd]        # 0x1400080b8
   140004bbb:	test   eax,eax
   140004bbd:	je     0x140004bf9
   140004bbf:	mov    rcx,rdi
   140004bc2:	call   0x1400045c0
   140004bc7:	test   eax,eax
   140004bc9:	jne    0x140004c06
   140004bcb:	mov    r8,rdi
   140004bce:	lea    rdx,[rip+0x39bb]        # 0x140008590
   140004bd5:	lea    ecx,[rbx+0x1]
   140004bd8:	call   0x1400027c8
   140004bdd:	test   eax,eax
   140004bdf:	jne    0x140004c10
   140004be1:	call   QWORD PTR [rip+0x34b9]        # 0x1400080a0
   140004be7:	test   eax,eax
   140004be9:	jne    0x140004bf4
   140004beb:	lea    ecx,[rax+0x8]
   140004bee:	call   QWORD PTR [rip+0x3424]        # 0x140008018
   140004bf4:	call   0x140002904
   140004bf9:	xor    eax,eax
   140004bfb:	mov    rbx,QWORD PTR [rsp+0x38]
   140004c00:	add    rsp,0x20
   140004c04:	pop    rdi
   140004c05:	ret    
   140004c06:	mov    rcx,rdi
   140004c09:	call   0x14000274c
   140004c0e:	jmp    0x140004bdd
   140004c10:	call   0x14000270c
   140004c15:	mov    ecx,0xd
   140004c1a:	test   rax,rax
   140004c1d:	jne    0x140004c26
   140004c1f:	call   0x14000247c
   140004c24:	jmp    0x140004c34
   140004c26:	xor    r9d,r9d
   140004c29:	xor    r8d,r8d
   140004c2c:	mov    rdx,rax
   140004c2f:	call   0x1400024e8
   140004c34:	test   rax,rax
   140004c37:	je     0x140004be1
   140004c39:	lea    r8,[rsp+0x30]
   140004c3e:	mov    edx,0x65
   140004c43:	mov    rcx,rax
   140004c46:	call   QWORD PTR [rip+0x3714]        # 0x140008360
   140004c4c:	test   eax,eax
   140004c4e:	jne    0x140004bf9
   140004c50:	mov    rcx,QWORD PTR [rsp+0x30]
   140004c55:	test   DWORD PTR [rcx+0x18],0x1000
   140004c5c:	je     0x140004c6d
   140004c5e:	mov    eax,DWORD PTR [rcx+0x10]
   140004c61:	and    eax,0xf
   140004c64:	imul   ebx,eax,0x3e8
   140004c6a:	add    ebx,DWORD PTR [rcx+0x14]
   140004c6d:	call   QWORD PTR [rip+0x36ad]        # 0x140008320
   140004c73:	mov    eax,ebx
   140004c75:	jmp    0x140004bfb
   140004c77:	int3   
   140004c78:	int3   
   140004c79:	int3   
   140004c7a:	int3   
   140004c7b:	int3   
   140004c7c:	int3   
   140004c7d:	int3   
   140004c7e:	int3   
   140004c7f:	int3   
   140004c80:	mov    QWORD PTR [rsp+0x8],rbx
   140004c85:	mov    QWORD PTR [rsp+0x10],rbp
   140004c8a:	mov    QWORD PTR [rsp+0x18],rsi
   140004c8f:	push   rdi
   140004c90:	sub    rsp,0x50
   140004c94:	mov    rbp,r8
   140004c97:	mov    rsi,rdx
   140004c9a:	mov    rbx,rcx
   140004c9d:	test   rcx,rcx
   140004ca0:	je     0x140004e0a
   140004ca6:	call   0x140004628
   140004cab:	cmp    eax,0x1
   140004cae:	je     0x140004e0a
   140004cb4:	mov    rcx,rbx
   140004cb7:	call   0x1400045c0
   140004cbc:	cmp    eax,0x1
   140004cbf:	jne    0x140004cc5
   140004cc1:	add    rbx,0x4
   140004cc5:	mov    rcx,rbx
   140004cc8:	call   0x140004804
   140004ccd:	test   eax,eax
   140004ccf:	jne    0x140004ce1
   140004cd1:	call   0x140002904
   140004cd6:	call   QWORD PTR [rip+0x33c4]        # 0x1400080a0
   140004cdc:	jmp    0x140004e41
   140004ce1:	lea    rcx,[rip+0x38b8]        # 0x1400085a0
   140004ce8:	call   QWORD PTR [rip+0x33ca]        # 0x1400080b8
   140004cee:	mov    r8,rbx
   140004cf1:	test   eax,eax
   140004cf3:	je     0x140004d0f
   140004cf5:	lea    r9,[rip+0x38a4]        # 0x1400085a0
   140004cfc:	mov    ecx,0x2
   140004d01:	lea    rdx,[rip+0x38a8]        # 0x1400085b0
   140004d08:	call   0x1400027c8
   140004d0d:	jmp    0x140004d20
   140004d0f:	lea    rdx,[rip+0x387a]        # 0x140008590
   140004d16:	mov    ecx,0x1
   140004d1b:	call   0x1400027c8
   140004d20:	test   eax,eax
   140004d22:	jne    0x140004d45
   140004d24:	call   QWORD PTR [rip+0x3376]        # 0x1400080a0
   140004d2a:	mov    ebx,0x8
   140004d2f:	test   eax,eax
   140004d31:	jne    0x140004d3b
   140004d33:	mov    ecx,ebx
   140004d35:	call   QWORD PTR [rip+0x32dd]        # 0x140008018
   140004d3b:	call   0x140002904
   140004d40:	jmp    0x140004e3b
   140004d45:	call   0x14000270c
   140004d4a:	mov    ecx,0x12
   140004d4f:	test   rax,rax
   140004d52:	jne    0x140004d5b
   140004d54:	call   0x14000247c
   140004d59:	jmp    0x140004d69
   140004d5b:	xor    r9d,r9d
   140004d5e:	xor    r8d,r8d
   140004d61:	mov    rdx,rax
   140004d64:	call   0x1400024e8
   140004d69:	mov    rdi,rax
   140004d6c:	test   rax,rax
   140004d6f:	je     0x140004d24
   140004d71:	xor    edx,edx
   140004d73:	lea    rcx,[rsp+0x20]
   140004d78:	lea    r8d,[rdx+0x30]
   140004d7c:	call   0x14000788e
   140004d81:	and    DWORD PTR [rsp+0x24],0x0
   140004d86:	lea    rcx,[rsp+0x20]
   140004d8b:	and    QWORD PTR [rsp+0x48],0x0
   140004d91:	xor    r9d,r9d
   140004d94:	and    QWORD PTR [rsp+0x30],0x0
   140004d9a:	mov    r8,rsi
   140004d9d:	mov    rdx,rbp
   140004da0:	mov    QWORD PTR [rsp+0x38],rdi
   140004da5:	call   QWORD PTR [rip+0x33cd]        # 0x140008178
   140004dab:	mov    edi,eax
   140004dad:	test   eax,eax
   140004daf:	je     0x140004dce
   140004db1:	cmp    eax,0x4b8
   140004db6:	je     0x140004dc7
   140004db8:	mov    ecx,eax
   140004dba:	call   QWORD PTR [rip+0x3258]        # 0x140008018
   140004dc0:	call   0x140002904
   140004dc5:	jmp    0x140004e06
   140004dc7:	call   0x1400029b0
   140004dcc:	jmp    0x140004e06
   140004dce:	xor    ecx,ecx
   140004dd0:	xor    edi,edi
   140004dd2:	call   QWORD PTR [rip+0x3240]        # 0x140008018
   140004dd8:	mov    rcx,rbx
   140004ddb:	call   0x140004b9c
   140004de0:	cmp    eax,0x1388
   140004de5:	jae    0x140004e06
   140004de7:	mov    rcx,rbx
   140004dea:	call   0x140004e5c
   140004def:	mov    ecx,0x1580
   140004df4:	call   0x140002cb0
   140004df9:	mov    rcx,rax
   140004dfc:	call   0x14000274c
   140004e01:	mov    edi,0x4b8
   140004e06:	mov    eax,edi
   140004e08:	jmp    0x140004e41
   140004e0a:	test   rsi,rsi
   140004e0d:	je     0x140004e3f
   140004e0f:	mov    rcx,rsi
   140004e12:	call   QWORD PTR [rip+0x32a0]        # 0x1400080b8
   140004e18:	test   eax,eax
   140004e1a:	je     0x140004e3f
   140004e1c:	mov    ecx,0x157e
   140004e21:	call   0x140002cb0
   140004e26:	mov    rcx,rax
   140004e29:	call   0x14000274c
   140004e2e:	mov    ebx,0xa0010001
   140004e33:	mov    ecx,ebx
   140004e35:	call   QWORD PTR [rip+0x31dd]        # 0x140008018
   140004e3b:	mov    eax,ebx
   140004e3d:	jmp    0x140004e41
   140004e3f:	xor    eax,eax
   140004e41:	mov    rbx,QWORD PTR [rsp+0x60]
   140004e46:	mov    rbp,QWORD PTR [rsp+0x68]
   140004e4b:	mov    rsi,QWORD PTR [rsp+0x70]
   140004e50:	add    rsp,0x50
   140004e54:	pop    rdi
   140004e55:	ret    
   140004e56:	int3   
   140004e57:	int3   
   140004e58:	int3   
   140004e59:	int3   
   140004e5a:	int3   
   140004e5b:	int3   
   140004e5c:	rex push rbx
   140004e5e:	sub    rsp,0x20
   140004e62:	mov    rbx,rcx
   140004e65:	test   rcx,rcx
   140004e68:	je     0x140004f1e
   140004e6e:	call   QWORD PTR [rip+0x3244]        # 0x1400080b8
   140004e74:	test   eax,eax
   140004e76:	je     0x140004f1e
   140004e7c:	mov    rcx,rbx
   140004e7f:	call   0x1400045c0
   140004e84:	cmp    eax,0x1
   140004e87:	jne    0x140004e8d
   140004e89:	add    rbx,0x4
   140004e8d:	lea    r9,[rip+0x370c]        # 0x1400085a0
   140004e94:	mov    r8,rbx
   140004e97:	lea    rdx,[rip+0x3712]        # 0x1400085b0
   140004e9e:	mov    ecx,0x2
   140004ea3:	call   0x1400027c8
   140004ea8:	test   eax,eax
   140004eaa:	jne    0x140004ec5
   140004eac:	call   QWORD PTR [rip+0x31ee]        # 0x1400080a0
   140004eb2:	mov    ebx,0x8
   140004eb7:	test   eax,eax
   140004eb9:	jne    0x140004f20
   140004ebb:	mov    ecx,ebx
   140004ebd:	call   QWORD PTR [rip+0x3155]        # 0x140008018
   140004ec3:	jmp    0x140004f20
   140004ec5:	call   0x14000270c
   140004eca:	mov    ecx,0x12
   140004ecf:	test   rax,rax
   140004ed2:	jne    0x140004edb
   140004ed4:	call   0x14000247c
   140004ed9:	jmp    0x140004ee9
   140004edb:	xor    r9d,r9d
   140004ede:	xor    r8d,r8d
   140004ee1:	mov    rdx,rax
   140004ee4:	call   0x1400024e8
   140004ee9:	test   rax,rax
   140004eec:	je     0x140004eac
   140004eee:	xor    edx,edx
   140004ef0:	mov    rcx,rax
   140004ef3:	lea    r8d,[rdx+0x1]
   140004ef7:	call   QWORD PTR [rip+0x3283]        # 0x140008180
   140004efd:	mov    ebx,eax
   140004eff:	test   eax,eax
   140004f01:	je     0x140004f18
   140004f03:	cmp    eax,0x4b8
   140004f08:	je     0x140004f11
   140004f0a:	call   0x140002904
   140004f0f:	jmp    0x140004f20
   140004f11:	call   0x1400029b0
   140004f16:	jmp    0x140004f20
   140004f18:	xor    ebx,ebx
   140004f1a:	xor    ecx,ecx
   140004f1c:	jmp    0x140004ebd
   140004f1e:	xor    ebx,ebx
   140004f20:	mov    eax,ebx
   140004f22:	add    rsp,0x20
   140004f26:	pop    rbx
   140004f27:	ret    
   140004f28:	int3   
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	int3   
   140004f2d:	int3   
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	mov    QWORD PTR [rsp+0x8],rbx
   140004f35:	mov    QWORD PTR [rsp+0x10],rbp
   140004f3a:	mov    DWORD PTR [rsp+0x18],r8d
   140004f3f:	push   rsi
   140004f40:	push   rdi
   140004f41:	push   r12
   140004f43:	push   r13
   140004f45:	push   r14
   140004f47:	sub    rsp,0x60
   140004f4b:	mov    rsi,rcx
   140004f4e:	mov    r13,r9
   140004f51:	xor    ecx,ecx
   140004f53:	mov    r14,rdx
   140004f56:	call   QWORD PTR [rip+0x30bc]        # 0x140008018
   140004f5c:	test   rsi,rsi
   140004f5f:	je     0x14000531a
   140004f65:	mov    rcx,rsi
   140004f68:	call   QWORD PTR [rip+0x314a]        # 0x1400080b8
   140004f6e:	test   eax,eax
   140004f70:	je     0x14000531a
   140004f76:	mov    edi,0x1
   140004f7b:	cmp    DWORD PTR [rsp+0xb8],edi
   140004f82:	jne    0x140004fb7
   140004f84:	test   r14,r14
   140004f87:	je     0x140004f98
   140004f89:	cmp    DWORD PTR [rsp+0xa0],0x2
   140004f91:	jb     0x140004f98
   140004f93:	test   r13,r13
   140004f96:	jne    0x140004fb7
   140004f98:	call   QWORD PTR [rip+0x3102]        # 0x1400080a0
   140004f9e:	test   eax,eax
   140004fa0:	jne    0x140004fab
   140004fa2:	lea    ecx,[rax+0x57]
   140004fa5:	call   QWORD PTR [rip+0x306d]        # 0x140008018
   140004fab:	call   0x140002904
   140004fb0:	xor    eax,eax
   140004fb2:	jmp    0x14000531f
   140004fb7:	mov    rcx,rsi
   140004fba:	mov    rbx,rsi
   140004fbd:	call   0x1400045c0
   140004fc2:	cmp    eax,edi
   140004fc4:	jne    0x140004fca
   140004fc6:	lea    rbx,[rsi+0x4]
   140004fca:	cmp    DWORD PTR [rsp+0xb8],edi
   140004fd1:	jne    0x140005003
   140004fd3:	test   r13,r13
   140004fd6:	je     0x140005003
   140004fd8:	xor    r9d,r9d
   140004fdb:	lea    rdx,[rip+0x34e2]        # 0x1400084c4
   140004fe2:	mov    r8d,edi
   140004fe5:	mov    rcx,r13
   140004fe8:	call   0x1400038d4
   140004fed:	test   eax,eax
   140004fef:	jne    0x140005003
   140004ff1:	mov    rcx,rbx
   140004ff4:	call   0x140004804
   140004ff9:	test   eax,eax
   140004ffb:	jne    0x140005256
   140005001:	jmp    0x140004fab
   140005003:	mov    rcx,rbx
   140005006:	xor    r12d,r12d
   140005009:	call   0x140004804
   14000500e:	test   eax,eax
   140005010:	je     0x140004fab
   140005012:	test   r14,r14
   140005015:	je     0x140005055
   140005017:	mov    rcx,r14
   14000501a:	call   QWORD PTR [rip+0x3098]        # 0x1400080b8
   140005020:	test   eax,eax
   140005022:	je     0x140005055
   140005024:	xor    r8d,r8d
   140005027:	mov    rdx,r14
   14000502a:	cmp    DWORD PTR [rsp+0xb8],r8d
   140005032:	mov    rcx,rsi
   140005035:	cmove  r8,r13
   140005039:	call   0x140004c80
   14000503e:	mov    ebx,eax
   140005040:	cmp    DWORD PTR [rsp+0xb8],edi
   140005047:	jne    0x1400051b5
   14000504d:	mov    r12d,edi
   140005050:	jmp    0x1400051b5
   140005055:	mov    rcx,rsi
   140005058:	mov    r12d,edi
   14000505b:	call   0x140004628
   140005060:	cmp    eax,edi
   140005062:	je     0x1400051b3
   140005068:	mov    rcx,rsi
   14000506b:	mov    rbp,rsi
   14000506e:	call   0x1400045c0
   140005073:	cmp    eax,edi
   140005075:	jne    0x14000507b
   140005077:	lea    rbp,[rsi+0x4]
   14000507b:	mov    rcx,rbp
   14000507e:	call   0x140004804
   140005083:	test   eax,eax
   140005085:	jne    0x140005099
   140005087:	call   0x140002904
   14000508c:	call   QWORD PTR [rip+0x300e]        # 0x1400080a0
   140005092:	mov    ebx,eax
   140005094:	jmp    0x1400051b5
   140005099:	lea    rcx,[rip+0x3500]        # 0x1400085a0
   1400050a0:	call   QWORD PTR [rip+0x3012]        # 0x1400080b8
   1400050a6:	mov    r8,rbp
   1400050a9:	test   eax,eax
   1400050ab:	je     0x1400050c7
   1400050ad:	lea    r9,[rip+0x34ec]        # 0x1400085a0
   1400050b4:	mov    ecx,0x2
   1400050b9:	lea    rdx,[rip+0x34f0]        # 0x1400085b0
   1400050c0:	call   0x1400027c8
   1400050c5:	jmp    0x1400050d5
   1400050c7:	lea    rdx,[rip+0x34c2]        # 0x140008590
   1400050ce:	mov    ecx,edi
   1400050d0:	call   0x1400027c8
   1400050d5:	test   eax,eax
   1400050d7:	jne    0x1400050fa
   1400050d9:	call   QWORD PTR [rip+0x2fc1]        # 0x1400080a0
   1400050df:	mov    ebx,0x8
   1400050e4:	test   eax,eax
   1400050e6:	jne    0x1400050f0
   1400050e8:	mov    ecx,ebx
   1400050ea:	call   QWORD PTR [rip+0x2f28]        # 0x140008018
   1400050f0:	call   0x140002904
   1400050f5:	jmp    0x1400051b5
   1400050fa:	call   0x14000270c
   1400050ff:	mov    ecx,0x12
   140005104:	test   rax,rax
   140005107:	jne    0x140005110
   140005109:	call   0x14000247c
   14000510e:	jmp    0x14000511e
   140005110:	xor    r9d,r9d
   140005113:	xor    r8d,r8d
   140005116:	mov    rdx,rax
   140005119:	call   0x1400024e8
   14000511e:	mov    rbx,rax
   140005121:	test   rax,rax
   140005124:	je     0x1400050d9
   140005126:	xor    edx,edx
   140005128:	lea    rcx,[rsp+0x30]
   14000512d:	lea    r8d,[rdx+0x30]
   140005131:	call   0x14000788e
   140005136:	xor    eax,eax
   140005138:	mov    QWORD PTR [rsp+0x48],rbx
   14000513d:	xor    r9d,r9d
   140005140:	mov    DWORD PTR [rsp+0x34],eax
   140005144:	xor    r8d,r8d
   140005147:	mov    QWORD PTR [rsp+0x58],rax
   14000514c:	xor    edx,edx
   14000514e:	mov    QWORD PTR [rsp+0x40],rax
   140005153:	lea    rcx,[rsp+0x30]
   140005158:	call   QWORD PTR [rip+0x301a]        # 0x140008178
   14000515e:	mov    ebx,eax
   140005160:	test   eax,eax
   140005162:	je     0x140005179
   140005164:	cmp    eax,0x4b8
   140005169:	je     0x140005172
   14000516b:	mov    ecx,eax
   14000516d:	jmp    0x1400050ea
   140005172:	call   0x1400029b0
   140005177:	jmp    0x1400051b5
   140005179:	xor    ecx,ecx
   14000517b:	xor    ebx,ebx
   14000517d:	call   QWORD PTR [rip+0x2e95]        # 0x140008018
   140005183:	mov    rcx,rbp
   140005186:	call   0x140004b9c
   14000518b:	cmp    eax,0x1388
   140005190:	jae    0x1400051b5
   140005192:	mov    rcx,rbp
   140005195:	call   0x140004e5c
   14000519a:	mov    ecx,0x1580
   14000519f:	call   0x140002cb0
   1400051a4:	mov    rcx,rax
   1400051a7:	call   0x14000274c
   1400051ac:	mov    ebx,0x4b8
   1400051b1:	jmp    0x1400051b5
   1400051b3:	xor    ebx,ebx
   1400051b5:	cmp    ebx,0x55
   1400051b8:	jne    0x1400051cc
   1400051ba:	mov    ecx,0x50010001
   1400051bf:	call   QWORD PTR [rip+0x2e53]        # 0x140008018
   1400051c5:	mov    eax,edi
   1400051c7:	jmp    0x14000531f
   1400051cc:	test   ebx,ebx
   1400051ce:	jne    0x1400051d9
   1400051d0:	cmp    r12d,edi
   1400051d3:	je     0x1400051ba
   1400051d5:	xor    ecx,ecx
   1400051d7:	jmp    0x1400051bf
   1400051d9:	cmp    ebx,0x34
   1400051dc:	je     0x1400052fd
   1400051e2:	cmp    ebx,0x56
   1400051e5:	je     0x140005248
   1400051e7:	cmp    ebx,0x4be
   1400051ed:	je     0x1400052fd
   1400051f3:	cmp    ebx,0x4c3
   1400051f9:	je     0x14000523e
   1400051fb:	cmp    ebx,0x4ce
   140005201:	jbe    0x140004fab
   140005207:	cmp    ebx,0x4d1
   14000520d:	jbe    0x1400052fd
   140005213:	cmp    ebx,0x52e
   140005219:	je     0x140005248
   14000521b:	mov    esi,0xa0010001
   140005220:	cmp    ebx,esi
   140005222:	jne    0x140004fab
   140005228:	mov    ecx,0x157e
   14000522d:	call   0x140002cb0
   140005232:	mov    rcx,rax
   140005235:	call   0x14000274c
   14000523a:	mov    ecx,esi
   14000523c:	jmp    0x1400051bf
   14000523e:	mov    ecx,0x4c3
   140005243:	jmp    0x1400051bf
   140005248:	cmp    DWORD PTR [rsp+0xb8],0x0
   140005250:	je     0x140004fb0
   140005256:	mov    rcx,r14
   140005259:	call   QWORD PTR [rip+0x2e59]        # 0x1400080b8
   14000525f:	test   eax,eax
   140005261:	jne    0x14000527f
   140005263:	lea    r8,[rsp+0xa0]
   14000526b:	mov    rdx,r14
   14000526e:	lea    ecx,[rax+0x2]
   140005271:	call   QWORD PTR [rip+0x2f49]        # 0x1400081c0
   140005277:	test   al,al
   140005279:	je     0x140004fab
   14000527f:	mov    ecx,0x157d
   140005284:	call   0x140002cb0
   140005289:	mov    ecx,edi
   14000528b:	mov    rbx,rax
   14000528e:	call   0x140007738
   140005293:	mov    rcx,rax
   140005296:	mov    QWORD PTR [rsp+0x20],r14
   14000529b:	mov    r9,rbx
   14000529e:	mov    r8d,edi
   1400052a1:	mov    edx,edi
   1400052a3:	call   0x140003ca8
   1400052a8:	mov    rcx,r13
   1400052ab:	call   0x140003fcc
   1400052b0:	mov    r8,r13
   1400052b3:	mov    rdx,r14
   1400052b6:	mov    rcx,rsi
   1400052b9:	call   0x140004c80
   1400052be:	mov    ebx,eax
   1400052c0:	test   eax,eax
   1400052c2:	je     0x1400051c5
   1400052c8:	cmp    eax,0x34
   1400052cb:	je     0x1400052fd
   1400052cd:	cmp    eax,0x4be
   1400052d2:	je     0x1400052fd
   1400052d4:	cmp    eax,0x4c3
   1400052d9:	je     0x14000523e
   1400052df:	cmp    eax,0x4ce
   1400052e4:	jbe    0x140004fab
   1400052ea:	cmp    eax,0x4d1
   1400052ef:	jbe    0x1400052fd
   1400052f1:	mov    esi,0xa0010001
   1400052f6:	cmp    eax,esi
   1400052f8:	jmp    0x140005222
   1400052fd:	mov    ecx,0x4c6
   140005302:	call   QWORD PTR [rip+0x2d10]        # 0x140008018
   140005308:	call   0x140002904
   14000530d:	mov    ecx,ebx
   14000530f:	call   QWORD PTR [rip+0x2d03]        # 0x140008018
   140005315:	jmp    0x140004fb0
   14000531a:	mov    eax,0x1
   14000531f:	lea    r11,[rsp+0x60]
   140005324:	mov    rbx,QWORD PTR [r11+0x30]
   140005328:	mov    rbp,QWORD PTR [r11+0x38]
   14000532c:	mov    rsp,r11
   14000532f:	pop    r14
   140005331:	pop    r13
   140005333:	pop    r12
   140005335:	pop    rdi
   140005336:	pop    rsi
   140005337:	ret    
   140005338:	int3   
   140005339:	int3   
   14000533a:	int3   
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	mov    QWORD PTR [rsp+0x8],rbx
   140005345:	push   rbp
   140005346:	push   rsi
   140005347:	push   rdi
   140005348:	push   r12
   14000534a:	push   r13
   14000534c:	push   r14
   14000534e:	push   r15
   140005350:	mov    rbp,rsp
   140005353:	sub    rsp,0x50
   140005357:	xor    r15d,r15d
   14000535a:	mov    rsi,rcx
   14000535d:	xor    ecx,ecx
   14000535f:	mov    DWORD PTR [rbp+0x58],r15d
   140005363:	mov    DWORD PTR [rbp+0x48],r15d
   140005367:	mov    DWORD PTR [rbp+0x50],r15d
   14000536b:	mov    QWORD PTR [rbp-0x20],r15
   14000536f:	mov    QWORD PTR [rbp-0x10],r15
   140005373:	call   QWORD PTR [rip+0x2c9f]        # 0x140008018
   140005379:	mov    ebx,0x104
   14000537e:	lea    r12d,[r15+0x1]
   140005382:	mov    edx,ebx
   140005384:	lea    r13d,[r15+0x7]
   140005388:	mov    eax,r15d
   14000538b:	neg    eax
   14000538d:	mov    r9d,r12d
   140005390:	mov    ecx,r13d
   140005393:	sbb    eax,eax
   140005395:	and    eax,ebx
   140005397:	add    edx,eax
   140005399:	mov    DWORD PTR [rbp+0x48],edx
   14000539c:	mov    r8d,edx
   14000539f:	xor    edx,edx
   1400053a1:	call   0x1400024e8
   1400053a6:	mov    rdi,rax
   1400053a9:	test   rax,rax
   1400053ac:	je     0x1400055af
   1400053b2:	mov    r8d,DWORD PTR [rbp+0x48]
   1400053b6:	mov    rdx,rax
   1400053b9:	xor    ecx,ecx
   1400053bb:	call   QWORD PTR [rip+0x2c77]        # 0x140008038
   1400053c1:	test   eax,eax
   1400053c3:	je     0x1400055c2
   1400053c9:	mov    edx,DWORD PTR [rbp+0x48]
   1400053cc:	lea    ecx,[rdx-0x1]
   1400053cf:	cmp    eax,ecx
   1400053d1:	jae    0x14000538b
   1400053d3:	lea    r8,[rbp+0x58]
   1400053d7:	mov    rdx,rdi
   1400053da:	mov    ecx,r12d
   1400053dd:	call   QWORD PTR [rip+0x2e0d]        # 0x1400081f0
   1400053e3:	mov    DWORD PTR [rbp+0x48],eax
   1400053e6:	test   eax,eax
   1400053e8:	jne    0x14000540e
   1400053ea:	call   QWORD PTR [rip+0x2cb0]        # 0x1400080a0
   1400053f0:	test   eax,eax
   1400053f2:	jne    0x1400055c2
   1400053f8:	call   QWORD PTR [rip+0x2ca2]        # 0x1400080a0
   1400053fe:	test   eax,eax
   140005400:	jne    0x1400055c2
   140005406:	lea    ecx,[rax+0x57]
   140005409:	jmp    0x1400055bc
   14000540e:	add    eax,0xa
   140005411:	mov    ecx,eax
   140005413:	mov    DWORD PTR [rbp+0x48],eax
   140005416:	call   0x1400043c0
   14000541b:	mov    QWORD PTR [rbp-0x18],rax
   14000541f:	mov    rbx,rax
   140005422:	test   rax,rax
   140005425:	je     0x1400055c2
   14000542b:	mov    r9d,DWORD PTR [rbp+0x48]
   14000542f:	xor    r8d,r8d
   140005432:	mov    rdx,rdi
   140005435:	mov    QWORD PTR [rsp+0x20],rax
   14000543a:	lea    ecx,[r8+0x3]
   14000543e:	call   QWORD PTR [rip+0x2db4]        # 0x1400081f8
   140005444:	test   eax,eax
   140005446:	jne    0x140005456
   140005448:	lea    rcx,[rbp-0x18]
   14000544c:	call   0x1400042e4
   140005451:	jmp    0x1400055c2
   140005456:	lea    r9,[rbp+0x50]
   14000545a:	mov    rcx,rbx
   14000545d:	lea    r8,[rbp-0x10]
   140005461:	lea    rdx,[rip+0x3158]        # 0x1400085c0
   140005468:	call   QWORD PTR [rip+0x2d7a]        # 0x1400081e8
   14000546e:	test   eax,eax
   140005470:	je     0x140005448
   140005472:	xor    edx,edx
   140005474:	mov    r9d,r12d
   140005477:	mov    ecx,r13d
   14000547a:	lea    r8d,[rdx+0x40]
   14000547e:	call   0x1400024e8
   140005483:	test   DWORD PTR [rbp+0x50],0xfffffffc
   14000548a:	mov    r14,rax
   14000548d:	mov    QWORD PTR [rbp-0x20],r15
   140005491:	mov    edi,r15d
   140005494:	jbe    0x140005448
   140005496:	mov    rdx,QWORD PTR [rbp-0x10]
   14000549a:	mov    r8d,edi
   14000549d:	movzx  ecx,WORD PTR [rdx+r8*4+0x2]
   1400054a3:	movzx  r9d,WORD PTR [rdx+r8*4]
   1400054a8:	lea    r8,[rip+0x3151]        # 0x140008600
   1400054af:	mov    DWORD PTR [rsp+0x20],ecx
   1400054b3:	mov    edx,0x40
   1400054b8:	mov    rcx,r14
   1400054bb:	call   0x140001008
   1400054c0:	lea    r9,[rbp+0x48]
   1400054c4:	mov    rdx,r14
   1400054c7:	lea    r8,[rbp-0x20]
   1400054cb:	mov    rcx,rbx
   1400054ce:	call   QWORD PTR [rip+0x2d14]        # 0x1400081e8
   1400054d4:	test   eax,eax
   1400054d6:	jne    0x1400054ee
   1400054d8:	mov    eax,DWORD PTR [rbp+0x50]
   1400054db:	add    edi,r12d
   1400054de:	shr    eax,0x2
   1400054e1:	mov    rcx,r15
   1400054e4:	mov    QWORD PTR [rbp-0x20],rcx
   1400054e8:	cmp    edi,eax
   1400054ea:	jb     0x140005496
   1400054ec:	jmp    0x1400054f2
   1400054ee:	mov    rcx,QWORD PTR [rbp-0x20]
   1400054f2:	test   rcx,rcx
   1400054f5:	je     0x140005448
   1400054fb:	call   QWORD PTR [rip+0x2bb7]        # 0x1400080b8
   140005501:	cmp    eax,0x4
   140005504:	ja     0x140005527
   140005506:	lea    rcx,[rbp-0x18]
   14000550a:	call   0x1400042e4
   14000550f:	call   QWORD PTR [rip+0x2b8b]        # 0x1400080a0
   140005515:	test   eax,eax
   140005517:	jne    0x1400055c2
   14000551d:	mov    ecx,0x42b
   140005522:	jmp    0x1400055bc
   140005527:	mov    rcx,QWORD PTR [rbp-0x20]
   14000552b:	lea    rdx,[rip+0x311e]        # 0x140008650
   140005532:	mov    r8d,r12d
   140005535:	call   0x1400033d0
   14000553a:	cmp    eax,0xffffffff
   14000553d:	je     0x140005568
   14000553f:	mov    rcx,QWORD PTR [rbp-0x20]
   140005543:	call   QWORD PTR [rip+0x2b6f]        # 0x1400080b8
   140005549:	lea    rcx,[rip+0x3100]        # 0x140008650
   140005550:	movsxd rbx,eax
   140005553:	call   QWORD PTR [rip+0x2b5f]        # 0x1400080b8
   140005559:	movsxd rcx,eax
   14000555c:	mov    rax,QWORD PTR [rbp-0x20]
   140005560:	sub    rbx,rcx
   140005563:	mov    WORD PTR [rax+rbx*2],r15w
   140005568:	test   rsi,rsi
   14000556b:	je     0x1400055f9
   140005571:	mov    rcx,QWORD PTR [rbp-0x20]
   140005575:	call   QWORD PTR [rip+0x2b3d]        # 0x1400080b8
   14000557b:	mov    rcx,rsi
   14000557e:	mov    ebx,eax
   140005580:	call   QWORD PTR [rip+0x2b32]        # 0x1400080b8
   140005586:	mov    r9d,r12d
   140005589:	xor    edx,edx
   14000558b:	mov    ecx,r13d
   14000558e:	lea    r8d,[rax+0xb]
   140005592:	add    r8d,ebx
   140005595:	mov    DWORD PTR [rbp+0x48],r8d
   140005599:	call   0x1400024e8
   14000559e:	mov    rbx,rax
   1400055a1:	test   rax,rax
   1400055a4:	jne    0x1400055dc
   1400055a6:	lea    rcx,[rbp-0x18]
   1400055aa:	call   0x1400042e4
   1400055af:	call   QWORD PTR [rip+0x2aeb]        # 0x1400080a0
   1400055b5:	test   eax,eax
   1400055b7:	jne    0x1400055c2
   1400055b9:	lea    ecx,[rax+0x8]
   1400055bc:	call   QWORD PTR [rip+0x2a56]        # 0x140008018
   1400055c2:	xor    eax,eax
   1400055c4:	mov    rbx,QWORD PTR [rsp+0x90]
   1400055cc:	add    rsp,0x50
   1400055d0:	pop    r15
   1400055d2:	pop    r14
   1400055d4:	pop    r13
   1400055d6:	pop    r12
   1400055d8:	pop    rdi
   1400055d9:	pop    rsi
   1400055da:	pop    rbp
   1400055db:	ret    
   1400055dc:	mov    edx,DWORD PTR [rbp+0x48]
   1400055df:	lea    r8,[rip+0x307a]        # 0x140008660
   1400055e6:	mov    r9,QWORD PTR [rbp-0x20]
   1400055ea:	mov    rcx,rax
   1400055ed:	mov    QWORD PTR [rsp+0x20],rsi
   1400055f2:	call   0x140001008
   1400055f7:	jmp    0x14000561f
   1400055f9:	mov    rdx,QWORD PTR [rbp-0x20]
   1400055fd:	mov    ecx,r13d
   140005600:	test   rdx,rdx
   140005603:	jne    0x14000560c
   140005605:	call   0x14000247c
   14000560a:	jmp    0x140005617
   14000560c:	xor    r9d,r9d
   14000560f:	xor    r8d,r8d
   140005612:	call   0x1400024e8
   140005617:	mov    rbx,rax
   14000561a:	test   rax,rax
   14000561d:	je     0x1400055a6
   14000561f:	mov    rcx,rbx
   140005622:	mov    QWORD PTR [rbp-0x20],rbx
   140005626:	call   QWORD PTR [rip+0x2bac]        # 0x1400081d8
   14000562c:	mov    edi,0x50
   140005631:	mov    r9d,r12d
   140005634:	mov    r8d,edi
   140005637:	xor    edx,edx
   140005639:	lea    ecx,[rdi-0x45]
   14000563c:	call   0x1400024e8
   140005641:	mov    rbx,rax
   140005644:	test   rax,rax
   140005647:	je     0x1400055a6
   14000564d:	mov    ecx,0x15ed
   140005652:	call   0x140002cb0
   140005657:	mov    r9,QWORD PTR [rbp-0x20]
   14000565b:	mov    r8,rax
   14000565e:	mov    edx,edi
   140005660:	mov    rcx,rbx
   140005663:	call   0x140001008
   140005668:	lea    rcx,[rbp-0x18]
   14000566c:	call   0x1400042e4
   140005671:	mov    rax,rbx
   140005674:	jmp    0x1400055c4
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	mov    QWORD PTR [rsp+0x8],rbx
   140005685:	mov    QWORD PTR [rsp+0x10],rsi
   14000568a:	push   rdi
   14000568b:	sub    rsp,0x20
   14000568f:	mov    rdi,rcx
   140005692:	xor    ecx,ecx
   140005694:	call   QWORD PTR [rip+0x297e]        # 0x140008018
   14000569a:	test   rdi,rdi
   14000569d:	je     0x140005716
   14000569f:	mov    edx,0x7c
   1400056a4:	mov    rcx,rdi
   1400056a7:	call   0x14000319c
   1400056ac:	mov    ebx,eax
   1400056ae:	cmp    eax,0xffffffff
   1400056b1:	jne    0x1400056c6
   1400056b3:	xor    ecx,ecx
   1400056b5:	call   QWORD PTR [rip+0x295d]        # 0x140008018
   1400056bb:	mov    rcx,rdi
   1400056be:	call   QWORD PTR [rip+0x29f4]        # 0x1400080b8
   1400056c4:	mov    ebx,eax
   1400056c6:	xor    edx,edx
   1400056c8:	lea    r8d,[rbx+0x5]
   1400056cc:	lea    ecx,[rdx+0xc]
   1400056cf:	lea    r9d,[rdx+0x1]
   1400056d3:	call   0x1400024e8
   1400056d8:	mov    rsi,rax
   1400056db:	test   rax,rax
   1400056de:	jne    0x1400056ef
   1400056e0:	call   QWORD PTR [rip+0x29ba]        # 0x1400080a0
   1400056e6:	test   eax,eax
   1400056e8:	jne    0x140005729
   1400056ea:	lea    ecx,[rsi+0x8]
   1400056ed:	jmp    0x140005723
   1400056ef:	lea    r8d,[rbx+0x1]
   1400056f3:	mov    rcx,rax
   1400056f6:	lea    rdx,[rip+0x2f6f]        # 0x14000866c
   1400056fd:	call   0x140003740
   140005702:	lea    r8d,[rbx+0x2]
   140005706:	mov    rdx,rdi
   140005709:	mov    rcx,rsi
   14000570c:	call   0x1400037e4
   140005711:	mov    rax,rsi
   140005714:	jmp    0x14000572b
   140005716:	call   QWORD PTR [rip+0x2984]        # 0x1400080a0
   14000571c:	test   eax,eax
   14000571e:	jne    0x140005729
   140005720:	lea    ecx,[rax+0x57]
   140005723:	call   QWORD PTR [rip+0x28ef]        # 0x140008018
   140005729:	xor    eax,eax
   14000572b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005730:	mov    rsi,QWORD PTR [rsp+0x38]
   140005735:	add    rsp,0x20
   140005739:	pop    rdi
   14000573a:	ret    
   14000573b:	int3   
   14000573c:	int3   
   14000573d:	int3   
   14000573e:	int3   
   14000573f:	int3   
   140005740:	int3   
   140005741:	int3   
   140005742:	int3   
   140005743:	int3   
   140005744:	mov    QWORD PTR [rsp+0x8],rbx
   140005749:	mov    QWORD PTR [rsp+0x10],rbp
   14000574e:	mov    QWORD PTR [rsp+0x18],rsi
   140005753:	push   rdi
   140005754:	push   r12
   140005756:	push   r13
   140005758:	push   r14
   14000575a:	push   r15
   14000575c:	sub    rsp,0x30
   140005760:	mov    r14,rcx
   140005763:	xor    r13d,r13d
   140005766:	xor    ecx,ecx
   140005768:	mov    r12d,r13d
   14000576b:	mov    rbx,r8
   14000576e:	call   QWORD PTR [rip+0x28a4]        # 0x140008018
   140005774:	test   rbx,rbx
   140005777:	jne    0x14000578f
   140005779:	call   QWORD PTR [rip+0x2921]        # 0x1400080a0
   14000577f:	test   eax,eax
   140005781:	jne    0x140005a09
   140005787:	lea    ecx,[rax+0x57]
   14000578a:	jmp    0x140005a03
   14000578f:	test   r14,r14
   140005792:	je     0x140005779
   140005794:	or     DWORD PTR [r14],0xffffffff
   140005798:	mov    r15d,r13d
   14000579b:	add    rbx,0x58
   14000579f:	lea    rbp,[rbx-0x58]
   1400057a3:	test   rbp,rbp
   1400057a6:	je     0x1400059f4
   1400057ac:	call   QWORD PTR [rip+0x28f6]        # 0x1400080a8
   1400057b2:	or     DWORD PTR [rsp+0x28],0xffffffff
   1400057b7:	or     r9d,0xffffffff
   1400057bb:	mov    ecx,eax
   1400057bd:	mov    r8,rbp
   1400057c0:	lea    rax,[rip+0x2ea9]        # 0x140008670
   1400057c7:	mov    QWORD PTR [rsp+0x20],rax
   1400057cc:	lea    edx,[r9+0x2]
   1400057d0:	call   QWORD PTR [rip+0x298a]        # 0x140008160
   1400057d6:	add    eax,0xfffffffe
   1400057d9:	jne    0x140005779
   1400057db:	mov    rdi,QWORD PTR [rbx-0x48]
   1400057df:	cmp    DWORD PTR [rbx],r13d
   1400057e2:	jne    0x140005779
   1400057e4:	cmp    QWORD PTR [rbx+0x8],r13
   1400057e8:	jne    0x140005779
   1400057ea:	cmp    QWORD PTR [rbx+0x10],r13
   1400057ee:	jne    0x140005779
   1400057f0:	cmp    QWORD PTR [rbx+0x18],r13
   1400057f4:	jne    0x140005779
   1400057f6:	mov    rsi,rdi
   1400057f9:	and    esi,0x40000
   1400057ff:	jne    0x14000581c
   140005801:	mov    rcx,QWORD PTR [rbx-0x38]
   140005805:	test   rcx,rcx
   140005808:	je     0x140005779
   14000580e:	call   QWORD PTR [rip+0x28a4]        # 0x1400080b8
   140005814:	test   eax,eax
   140005816:	je     0x140005779
   14000581c:	mov    rax,rdi
   14000581f:	and    eax,0x20000
   140005824:	je     0x140005830
   140005826:	cmp    DWORD PTR [rbx-0x50],0xa
   14000582a:	jne    0x140005779
   140005830:	test   rax,rax
   140005833:	je     0x140005845
   140005835:	cmp    r12d,0x1
   140005839:	je     0x140005779
   14000583f:	mov    r12d,0x1
   140005845:	test   rsi,rsi
   140005848:	je     0x140005857
   14000584a:	cmp    DWORD PTR [r14],0xffffffff
   14000584e:	jne    0x140005779
   140005854:	mov    DWORD PTR [r14],r15d
   140005857:	mov    ecx,0x60000
   14000585c:	mov    rax,rdi
   14000585f:	and    rax,rcx
   140005862:	cmp    rax,rcx
   140005865:	je     0x140005779
   14000586b:	mov    eax,DWORD PTR [rbx-0x50]
   14000586e:	cmp    eax,0x1
   140005871:	je     0x140005938
   140005877:	jbe    0x140005779
   14000587d:	cmp    eax,0x3
   140005880:	jbe    0x1400058db
   140005882:	cmp    eax,0x6
   140005885:	jbe    0x1400059ed
   14000588b:	cmp    eax,0x8
   14000588e:	jbe    0x1400058db
   140005890:	cmp    eax,0x9
   140005893:	je     0x1400058be
   140005895:	cmp    eax,0xa
   140005898:	jne    0x140005779
   14000589e:	test   dil,0xf
   1400058a2:	jne    0x140005779
   1400058a8:	test   rdi,0xfff0
   1400058af:	jne    0x140005779
   1400058b5:	test   rdi,0xffffffffffedffff
   1400058bc:	jmp    0x14000592d
   1400058be:	cmp    QWORD PTR [rbx-0x10],r13
   1400058c2:	je     0x140005779
   1400058c8:	cmp    QWORD PTR [rbx-0x8],r13
   1400058cc:	jne    0x1400059d1
   1400058d2:	mov    QWORD PTR [rbx-0x8],rbp
   1400058d6:	jmp    0x1400059d1
   1400058db:	test   dil,0x2
   1400058df:	jne    0x1400059ed
   1400058e5:	test   rdi,0x10040
   1400058ec:	jne    0x140005779
   1400058f2:	test   dil,dil
   1400058f5:	js     0x140005779
   1400058fb:	mov    rax,QWORD PTR [rbx-0x20]
   1400058ff:	test   rax,rax
   140005902:	je     0x140005779
   140005908:	test   dil,0x1
   14000590c:	je     0x14000591f
   14000590e:	mov    rax,QWORD PTR [rax]
   140005911:	test   rax,rax
   140005914:	je     0x140005779
   14000591a:	cmp    DWORD PTR [rax],0x9
   14000591d:	jmp    0x14000592d
   14000591f:	cmp    DWORD PTR [rbx-0x40],0x1
   140005923:	ja     0x140005779
   140005929:	test   dil,0x20
   14000592d:	jne    0x140005779
   140005933:	jmp    0x1400059d1
   140005938:	mov    r8,rdi
   14000593b:	and    r8d,0x10000
   140005942:	je     0x14000596f
   140005944:	mov    rax,rdi
   140005947:	and    eax,0x1
   14000594a:	jne    0x140005779
   140005950:	cmp    QWORD PTR [rbx-0x20],r13
   140005954:	jne    0x140005779
   14000595a:	test   r13b,r13b
   14000595d:	jne    0x140005779
   140005963:	cmp    DWORD PTR [rbx-0x18],0x1
   140005967:	je     0x140005779
   14000596d:	jmp    0x140005999
   14000596f:	mov    rcx,QWORD PTR [rbx-0x20]
   140005973:	test   rcx,rcx
   140005976:	je     0x140005779
   14000597c:	mov    rax,rdi
   14000597f:	and    eax,0x1
   140005982:	je     0x140005999
   140005984:	mov    rdx,QWORD PTR [rcx]
   140005987:	test   rdx,rdx
   14000598a:	je     0x140005779
   140005990:	cmp    DWORD PTR [rdx],0x9
   140005993:	jne    0x140005779
   140005999:	test   dil,0x2
   14000599d:	je     0x1400059a9
   14000599f:	cmp    QWORD PTR [rbx-0x28],r13
   1400059a3:	je     0x140005779
   1400059a9:	test   rax,rax
   1400059ac:	jne    0x1400059d1
   1400059ae:	cmp    DWORD PTR [rbx-0x40],0x1
   1400059b2:	jne    0x140005779
   1400059b8:	test   dil,0x20
   1400059bc:	jne    0x140005779
   1400059c2:	test   r8,r8
   1400059c5:	jne    0x1400059d1
   1400059c7:	cmp    DWORD PTR [rbx-0x18],0x2
   1400059cb:	jb     0x140005779
   1400059d1:	mov    DWORD PTR [rbx-0x3c],r13d
   1400059d5:	inc    r15d
   1400059d8:	add    rbx,0x78
   1400059dc:	cmp    r15d,0x7
   1400059e0:	jb     0x14000579f
   1400059e6:	mov    eax,0x1
   1400059eb:	jmp    0x140005a0b
   1400059ed:	mov    ecx,0x78
   1400059f2:	jmp    0x140005a03
   1400059f4:	call   QWORD PTR [rip+0x26a6]        # 0x1400080a0
   1400059fa:	test   eax,eax
   1400059fc:	jne    0x140005a09
   1400059fe:	mov    ecx,0x42b
   140005a03:	call   QWORD PTR [rip+0x260f]        # 0x140008018
   140005a09:	xor    eax,eax
   140005a0b:	mov    rbx,QWORD PTR [rsp+0x60]
   140005a10:	mov    rbp,QWORD PTR [rsp+0x68]
   140005a15:	mov    rsi,QWORD PTR [rsp+0x70]
   140005a1a:	add    rsp,0x30
   140005a1e:	pop    r15
   140005a20:	pop    r14
   140005a22:	pop    r13
   140005a24:	pop    r12
   140005a26:	pop    rdi
   140005a27:	ret    
   140005a28:	int3   
   140005a29:	int3   
   140005a2a:	int3   
   140005a2b:	int3   
   140005a2c:	int3   
   140005a2d:	int3   
   140005a2e:	int3   
   140005a2f:	int3   
   140005a30:	mov    QWORD PTR [rsp+0x8],rbx
   140005a35:	push   rbp
   140005a36:	push   rsi
   140005a37:	push   rdi
   140005a38:	push   r12
   140005a3a:	push   r13
   140005a3c:	push   r14
   140005a3e:	push   r15
   140005a40:	sub    rsp,0x60
   140005a44:	and    DWORD PTR [rsp+0xb8],0x0
   140005a4c:	mov    rdi,rcx
   140005a4f:	and    DWORD PTR [rsp+0xb0],0x0
   140005a57:	xor    ecx,ecx
   140005a59:	movaps XMMWORD PTR [rsp+0x50],xmm6
   140005a5e:	mov    r15,r8
   140005a61:	movaps XMMWORD PTR [rsp+0x40],xmm7
   140005a66:	mov    rsi,rdx
   140005a69:	xorps  xmm7,xmm7
   140005a6c:	xorps  xmm6,xmm6
   140005a6f:	call   QWORD PTR [rip+0x25a3]        # 0x140008018
   140005a75:	test   r15,r15
   140005a78:	je     0x140005b24
   140005a7e:	mov    rbp,QWORD PTR [r15+0x10]
   140005a82:	mov    r14,QWORD PTR [r15+0x8]
   140005a86:	test   rbp,rbp
   140005a89:	je     0x140005b24
   140005a8f:	test   r14,r14
   140005a92:	je     0x140005b24
   140005a98:	mov    rcx,QWORD PTR [rbp+0x30]
   140005a9c:	mov    eax,DWORD PTR [rbp+0x8]
   140005a9f:	mov    rbx,QWORD PTR [rbp+0x38]
   140005aa3:	mov    r13,QWORD PTR [rbp+0x10]
   140005aa7:	mov    r12d,DWORD PTR [rbp+0x40]
   140005aab:	mov    QWORD PTR [rsp+0x30],rcx
   140005ab0:	cmp    eax,0xa
   140005ab3:	je     0x140005b18
   140005ab5:	test   rsi,rsi
   140005ab8:	jne    0x140005b18
   140005aba:	test   r13b,0x10
   140005abe:	jne    0x140005b18
   140005ac0:	test   rdi,rdi
   140005ac3:	je     0x140005af1
   140005ac5:	mov    rcx,rdi
   140005ac8:	call   QWORD PTR [rip+0x25ea]        # 0x1400080b8
   140005ace:	test   eax,eax
   140005ad0:	je     0x140005af1
   140005ad2:	mov    ecx,0x15eb
   140005ad7:	call   0x140002cb0
   140005adc:	mov    r8,rdi
   140005adf:	mov    r9,r14
   140005ae2:	mov    rdx,rax
   140005ae5:	mov    ecx,0x2
   140005aea:	call   0x1400027c8
   140005aef:	jmp    0x140005b0b
   140005af1:	call   QWORD PTR [rip+0x25a9]        # 0x1400080a0
   140005af7:	test   eax,eax
   140005af9:	jne    0x140005b06
   140005afb:	mov    ecx,0x42b
   140005b00:	call   QWORD PTR [rip+0x2512]        # 0x140008018
   140005b06:	call   0x140002904
   140005b0b:	mov    ecx,0x800401e4
   140005b10:	call   QWORD PTR [rip+0x2502]        # 0x140008018
   140005b16:	jmp    0x140005b3c
   140005b18:	test   rdi,rdi
   140005b1b:	jne    0x140005b60
   140005b1d:	bt     r13,0x12
   140005b22:	jb     0x140005b6c
   140005b24:	call   QWORD PTR [rip+0x2576]        # 0x1400080a0
   140005b2a:	test   eax,eax
   140005b2c:	jne    0x140005b37
   140005b2e:	lea    ecx,[rax+0x57]
   140005b31:	call   QWORD PTR [rip+0x24e1]        # 0x140008018
   140005b37:	call   0x140002904
   140005b3c:	xor    eax,eax
   140005b3e:	mov    rbx,QWORD PTR [rsp+0xa0]
   140005b46:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140005b4b:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   140005b50:	add    rsp,0x60
   140005b54:	pop    r15
   140005b56:	pop    r14
   140005b58:	pop    r13
   140005b5a:	pop    r12
   140005b5c:	pop    rdi
   140005b5d:	pop    rsi
   140005b5e:	pop    rbp
   140005b5f:	ret    
   140005b60:	cmp    QWORD PTR [rbp+0x28],0x0
   140005b65:	je     0x140005b70
   140005b67:	cmp    eax,0x9
   140005b6a:	je     0x140005b70
   140005b6c:	mov    rdi,QWORD PTR [rbp+0x28]
   140005b70:	cmp    eax,0x1
   140005b73:	je     0x140005e39
   140005b79:	jbe    0x140005b24
   140005b7b:	cmp    eax,0x3
   140005b7e:	jbe    0x140005d25
   140005b84:	cmp    eax,0x6
   140005b87:	jbe    0x140005e8f
   140005b8d:	cmp    eax,0x8
   140005b90:	jbe    0x140005bf1
   140005b92:	cmp    eax,0x9
   140005b95:	je     0x140005bd0
   140005b97:	cmp    eax,0xa
   140005b9a:	jne    0x140005b24
   140005b9c:	test   rsi,rsi
   140005b9f:	je     0x140005bc5
   140005ba1:	test   rdi,rdi
   140005ba4:	je     0x140005af1
   140005baa:	mov    rcx,rdi
   140005bad:	call   QWORD PTR [rip+0x2505]        # 0x1400080b8
   140005bb3:	test   eax,eax
   140005bb5:	je     0x140005af1
   140005bbb:	mov    ecx,0x15f3
   140005bc0:	jmp    0x140005ad7
   140005bc5:	mov    DWORD PTR [rbx],0x1
   140005bcb:	jmp    0x140005e8f
   140005bd0:	mov    rbx,QWORD PTR [rbp+0x48]
   140005bd4:	mov    rcx,rbx
   140005bd7:	call   QWORD PTR [rip+0x2793]        # 0x140008370
   140005bdd:	mov    r8,QWORD PTR [rbp+0x50]
   140005be1:	mov    r9,r15
   140005be4:	mov    rdx,rsi
   140005be7:	mov    rcx,rdi
   140005bea:	call   rbx
   140005bec:	jmp    0x140005b3e
   140005bf1:	test   rsi,rsi
   140005bf4:	je     0x140005e8f
   140005bfa:	mov    rcx,rsi
   140005bfd:	call   0x140002f30
   140005c02:	call   QWORD PTR [rip+0x2498]        # 0x1400080a0
   140005c08:	test   eax,eax
   140005c0a:	je     0x140005c58
   140005c0c:	test   r13b,0x10
   140005c10:	je     0x140005c1d
   140005c12:	cmp    DWORD PTR [r15+0x4],0xffffffff
   140005c17:	jne    0x140005e06
   140005c1d:	test   rdi,rdi
   140005c20:	je     0x140005c39
   140005c22:	mov    rcx,rdi
   140005c25:	call   QWORD PTR [rip+0x248d]        # 0x1400080b8
   140005c2b:	test   eax,eax
   140005c2d:	je     0x140005c39
   140005c2f:	mov    ecx,0x15e3
   140005c34:	jmp    0x140005ad7
   140005c39:	mov    ecx,0x15f1
   140005c3e:	call   0x140002cb0
   140005c43:	mov    rdx,rax
   140005c46:	mov    r8,r14
   140005c49:	mov    ecx,0x1
   140005c4e:	call   0x1400027c8
   140005c53:	jmp    0x140005b0b
   140005c58:	cmp    DWORD PTR [rbp+0x8],0x7
   140005c5c:	mov    rcx,rsi
   140005c5f:	jne    0x140005c6f
   140005c61:	call   0x140002f30
   140005c66:	xorps  xmm7,xmm7
   140005c69:	cvtsd2ss xmm7,xmm0
   140005c6d:	jmp    0x140005c77
   140005c6f:	call   0x140002f30
   140005c74:	movaps xmm6,xmm0
   140005c77:	test   r13b,0x1
   140005c7b:	je     0x140005d0d
   140005c81:	mov    eax,DWORD PTR [rbp+0x10]
   140005c84:	bt     rax,0xe
   140005c89:	jae    0x140005cd3
   140005c8b:	mov    rcx,QWORD PTR [rbx]
   140005c8e:	xor    r9d,r9d
   140005c91:	cmp    DWORD PTR [rbp+0x8],0x7
   140005c95:	jne    0x140005caf
   140005c97:	movss  DWORD PTR [rsp+0xb0],xmm7
   140005ca0:	lea    r8,[rsp+0xb0]
   140005ca8:	mov    edx,0x60000
   140005cad:	jmp    0x140005cc5
   140005caf:	movsd  QWORD PTR [rsp+0xb0],xmm6
   140005cb8:	lea    r8,[rsp+0xb0]
   140005cc0:	mov    edx,0x70000
   140005cc5:	call   0x1400067f4
   140005cca:	cmp    eax,0xffffffff
   140005ccd:	jne    0x140005e8f
   140005cd3:	cmp    DWORD PTR [rbp+0x8],0x7
   140005cd7:	mov    rcx,QWORD PTR [rbx]
   140005cda:	jne    0x140005ce6
   140005cdc:	movaps xmm1,xmm7
   140005cdf:	call   0x140006b1c
   140005ce4:	jmp    0x140005cee
   140005ce6:	movaps xmm1,xmm6
   140005ce9:	call   0x140006b88
   140005cee:	cmp    eax,0xffffffff
   140005cf1:	jne    0x140005e8f
   140005cf7:	call   QWORD PTR [rip+0x23a3]        # 0x1400080a0
   140005cfd:	test   eax,eax
   140005cff:	jne    0x140005b37
   140005d05:	lea    ecx,[rax+0x8]
   140005d08:	jmp    0x140005b31
   140005d0d:	cmp    DWORD PTR [rbp+0x8],0x7
   140005d11:	jne    0x140005d1c
   140005d13:	movss  DWORD PTR [rbx],xmm7
   140005d17:	jmp    0x140005e8f
   140005d1c:	movsd  QWORD PTR [rbx],xmm6
   140005d20:	jmp    0x140005e8f
   140005d25:	xor    r12d,r12d
   140005d28:	cmp    eax,0x2
   140005d2b:	sete   r12b
   140005d2f:	test   rsi,rsi
   140005d32:	je     0x140005e8f
   140005d38:	mov    rcx,rsi
   140005d3b:	call   QWORD PTR [rip+0x2377]        # 0x1400080b8
   140005d41:	test   eax,eax
   140005d43:	je     0x140005df9
   140005d49:	mov    r8d,r12d
   140005d4c:	mov    rcx,rsi
   140005d4f:	call   0x1400030bc
   140005d54:	test   eax,eax
   140005d56:	je     0x140005df9
   140005d5c:	mov    rcx,rsi
   140005d5f:	call   0x140002fe8
   140005d64:	cmp    r12d,0x1
   140005d68:	jne    0x140005d75
   140005d6a:	mov    edi,DWORD PTR [rsp+0xb0]
   140005d71:	mov    esi,eax
   140005d73:	jmp    0x140005d7e
   140005d75:	mov    esi,DWORD PTR [rsp+0xb8]
   140005d7c:	mov    edi,eax
   140005d7e:	test   r13b,0x1
   140005d82:	je     0x140005deb
   140005d84:	mov    ecx,DWORD PTR [rbp+0x10]
   140005d87:	bt     rcx,0xe
   140005d8c:	jae    0x140005dca
   140005d8e:	mov    rcx,QWORD PTR [rbx]
   140005d91:	lea    r8,[rsp+0xb0]
   140005d99:	xor    r9d,r9d
   140005d9c:	cmp    r12d,0x1
   140005da0:	jne    0x140005db0
   140005da2:	mov    DWORD PTR [rsp+0xb0],esi
   140005da9:	mov    edx,0x30000
   140005dae:	jmp    0x140005dbc
   140005db0:	mov    DWORD PTR [rsp+0xb0],edi
   140005db7:	mov    edx,0x40000
   140005dbc:	call   0x1400067f4
   140005dc1:	cmp    eax,0xffffffff
   140005dc4:	jne    0x140005e8f
   140005dca:	mov    rcx,QWORD PTR [rbx]
   140005dcd:	cmp    r12d,0x1
   140005dd1:	jne    0x140005ddf
   140005dd3:	mov    edx,esi
   140005dd5:	call   0x140006a4c
   140005dda:	jmp    0x140005cee
   140005ddf:	mov    edx,edi
   140005de1:	call   0x140006ab4
   140005de6:	jmp    0x140005cee
   140005deb:	cmp    r12d,0x1
   140005def:	cmove  edi,esi
   140005df2:	mov    DWORD PTR [rbx],edi
   140005df4:	jmp    0x140005e8f
   140005df9:	test   r13b,0x10
   140005dfd:	je     0x140005e13
   140005dff:	cmp    DWORD PTR [r15+0x4],0xffffffff
   140005e04:	je     0x140005e13
   140005e06:	mov    eax,0x1
   140005e0b:	mov    DWORD PTR [r15],eax
   140005e0e:	jmp    0x140005b3e
   140005e13:	test   rdi,rdi
   140005e16:	je     0x140005e2f
   140005e18:	mov    rcx,rdi
   140005e1b:	call   QWORD PTR [rip+0x2297]        # 0x1400080b8
   140005e21:	test   eax,eax
   140005e23:	je     0x140005e2f
   140005e25:	mov    ecx,0x15e2
   140005e2a:	jmp    0x140005ad7
   140005e2f:	mov    ecx,0x15f0
   140005e34:	jmp    0x140005c3e
   140005e39:	test   rsi,rsi
   140005e3c:	je     0x140005e84
   140005e3e:	test   r13b,0x42
   140005e42:	je     0x140005e84
   140005e44:	xor    r9d,r9d
   140005e47:	xor    r8d,r8d
   140005e4a:	mov    rdx,rsi
   140005e4d:	lea    ecx,[r9+0xa]
   140005e51:	call   0x1400024e8
   140005e56:	test   rax,rax
   140005e59:	je     0x140005cf7
   140005e5f:	lea    rdx,[rip+0x26a6]        # 0x14000850c
   140005e66:	mov    rcx,rax
   140005e69:	call   0x140003474
   140005e6e:	mov    rsi,rax
   140005e71:	call   QWORD PTR [rip+0x2229]        # 0x1400080a0
   140005e77:	test   eax,eax
   140005e79:	jne    0x140005b37
   140005e7f:	mov    rcx,QWORD PTR [rsp+0x30]
   140005e84:	test   r13b,0x2
   140005e88:	je     0x140005ef9
   140005e8a:	test   rsi,rsi
   140005e8d:	jne    0x140005e99
   140005e8f:	mov    eax,0x1
   140005e94:	jmp    0x140005b3e
   140005e99:	mov    rdx,rcx
   140005e9c:	mov    r8d,0x1
   140005ea2:	mov    rcx,rsi
   140005ea5:	call   0x140003204
   140005eaa:	test   eax,eax
   140005eac:	jne    0x140005ef9
   140005eae:	test   rdi,rdi
   140005eb1:	je     0x140005ee7
   140005eb3:	mov    rcx,rdi
   140005eb6:	call   QWORD PTR [rip+0x21fc]        # 0x1400080b8
   140005ebc:	test   eax,eax
   140005ebe:	je     0x140005ee7
   140005ec0:	mov    ecx,0x15e1
   140005ec5:	call   0x140002cb0
   140005eca:	mov    rdx,rax
   140005ecd:	mov    QWORD PTR [rsp+0x20],r14
   140005ed2:	mov    r9,rdi
   140005ed5:	mov    r8,rsi
   140005ed8:	mov    ecx,0x3
   140005edd:	call   0x1400027c8
   140005ee2:	jmp    0x140005b0b
   140005ee7:	mov    ecx,0x15ec
   140005eec:	call   0x140002cb0
   140005ef1:	mov    r8,rsi
   140005ef4:	jmp    0x140005adf
   140005ef9:	test   rsi,rsi
   140005efc:	je     0x140005e8f
   140005efe:	test   r13b,r13b
   140005f01:	jns    0x140005f36
   140005f03:	mov    rcx,rsi
   140005f06:	call   QWORD PTR [rip+0x21ac]        # 0x1400080b8
   140005f0c:	test   eax,eax
   140005f0e:	jne    0x140005f36
   140005f10:	test   rdi,rdi
   140005f13:	je     0x140005f2c
   140005f15:	mov    rcx,rdi
   140005f18:	call   QWORD PTR [rip+0x219a]        # 0x1400080b8
   140005f1e:	test   eax,eax
   140005f20:	je     0x140005f2c
   140005f22:	mov    ecx,0x15ee
   140005f27:	jmp    0x140005ad7
   140005f2c:	mov    ecx,0x15ef
   140005f31:	jmp    0x140005c3e
   140005f36:	test   r13b,0x1
   140005f3a:	je     0x140005f75
   140005f3c:	mov    eax,DWORD PTR [rbp+0x10]
   140005f3f:	bt     rax,0xe
   140005f44:	jae    0x140005f65
   140005f46:	mov    rcx,QWORD PTR [rbx]
   140005f49:	mov    r9d,0x1
   140005f4f:	mov    r8,rsi
   140005f52:	mov    edx,0x20000
   140005f57:	call   0x1400067f4
   140005f5c:	cmp    eax,0xffffffff
   140005f5f:	jne    0x140005e8f
   140005f65:	mov    rcx,QWORD PTR [rbx]
   140005f68:	mov    rdx,rsi
   140005f6b:	call   0x1400069b8
   140005f70:	jmp    0x140005cee
   140005f75:	test   r12d,r12d
   140005f78:	je     0x140005fdf
   140005f7a:	mov    rcx,rsi
   140005f7d:	call   QWORD PTR [rip+0x2135]        # 0x1400080b8
   140005f83:	cmp    eax,r12d
   140005f86:	jl     0x140005fdf
   140005f88:	test   rdi,rdi
   140005f8b:	je     0x140005fbe
   140005f8d:	mov    rcx,rdi
   140005f90:	call   QWORD PTR [rip+0x2122]        # 0x1400080b8
   140005f96:	test   eax,eax
   140005f98:	je     0x140005fbe
   140005f9a:	mov    ecx,0x15f4
   140005f9f:	call   0x140002cb0
   140005fa4:	mov    rdx,rax
   140005fa7:	lea    r9d,[r12-0x1]
   140005fac:	mov    r8,rdi
   140005faf:	mov    ecx,0x2
   140005fb4:	call   0x1400027c8
   140005fb9:	jmp    0x140005b0b
   140005fbe:	mov    ecx,0x15f2
   140005fc3:	call   0x140002cb0
   140005fc8:	mov    rdx,rax
   140005fcb:	lea    r8d,[r12-0x1]
   140005fd0:	mov    ecx,0x1
   140005fd5:	call   0x1400027c8
   140005fda:	jmp    0x140005b0b
   140005fdf:	bt     r13,0x10
   140005fe4:	jae    0x14000600c
   140005fe6:	mov    rcx,rsi
   140005fe9:	call   QWORD PTR [rip+0x20c9]        # 0x1400080b8
   140005fef:	lea    r12d,[rax+0x1]
   140005ff3:	lea    ecx,[r12+r12*1]
   140005ff7:	call   0x1400043c0
   140005ffc:	mov    rbx,rax
   140005fff:	test   rax,rax
   140006002:	je     0x140005cf7
   140006008:	mov    QWORD PTR [rbp+0x38],rax
   14000600c:	mov    r8d,r12d
   14000600f:	mov    rdx,rsi
   140006012:	mov    rcx,rbx
   140006015:	call   0x140003740
   14000601a:	jmp    0x140005e8f
   14000601f:	int3   
   140006020:	int3   
   140006021:	int3   
   140006022:	int3   
   140006023:	int3   
   140006024:	int3   
   140006025:	int3   
   140006026:	int3   
   140006027:	int3   
   140006028:	mov    QWORD PTR [rsp+0x8],rbx
   14000602d:	mov    QWORD PTR [rsp+0x10],rsi
   140006032:	mov    QWORD PTR [rsp+0x18],rdi
   140006037:	push   r14
   140006039:	sub    rsp,0x20
   14000603d:	xor    ecx,ecx
   14000603f:	mov    r14,r8
   140006042:	mov    rbx,rdx
   140006045:	call   QWORD PTR [rip+0x1fcd]        # 0x140008018
   14000604b:	test   rbx,rbx
   14000604e:	je     0x1400060fd
   140006054:	test   r14,r14
   140006057:	je     0x1400060fd
   14000605d:	xor    ecx,ecx
   14000605f:	call   QWORD PTR [rip+0x1fb3]        # 0x140008018
   140006065:	mov    rcx,r14
   140006068:	call   QWORD PTR [rip+0x204a]        # 0x1400080b8
   14000606e:	cmp    eax,0x1
   140006071:	jle    0x1400060d4
   140006073:	movzx  edx,WORD PTR [r14]
   140006077:	lea    rcx,[rip+0x25fa]        # 0x140008678
   14000607e:	call   0x14000319c
   140006083:	cmp    eax,0xffffffff
   140006086:	je     0x1400060d4
   140006088:	xor    edi,edi
   14000608a:	add    rbx,0x20
   14000608e:	lea    rax,[rbx-0x20]
   140006092:	test   rax,rax
   140006095:	je     0x1400060df
   140006097:	mov    esi,DWORD PTR [rbx-0x10]
   14000609a:	mov    rcx,QWORD PTR [rbx]
   14000609d:	shr    rsi,0x14
   1400060a1:	not    esi
   1400060a3:	and    esi,0x1
   1400060a6:	test   rcx,rcx
   1400060a9:	je     0x1400060c9
   1400060ab:	call   QWORD PTR [rip+0x2007]        # 0x1400080b8
   1400060b1:	test   eax,eax
   1400060b3:	jle    0x1400060c9
   1400060b5:	mov    rdx,QWORD PTR [rbx]
   1400060b8:	lea    rcx,[r14+0x2]
   1400060bc:	mov    r8d,esi
   1400060bf:	call   0x140003204
   1400060c4:	cmp    eax,0x1
   1400060c7:	je     0x1400060db
   1400060c9:	inc    edi
   1400060cb:	add    rbx,0x78
   1400060cf:	cmp    edi,0x7
   1400060d2:	jb     0x14000608e
   1400060d4:	mov    ecx,0x490
   1400060d9:	jmp    0x14000610a
   1400060db:	mov    eax,edi
   1400060dd:	jmp    0x140006113
   1400060df:	call   QWORD PTR [rip+0x1fbb]        # 0x1400080a0
   1400060e5:	test   eax,eax
   1400060e7:	jne    0x1400060f4
   1400060e9:	mov    ecx,0x42b
   1400060ee:	call   QWORD PTR [rip+0x1f24]        # 0x140008018
   1400060f4:	call   0x140002904
   1400060f9:	xor    eax,eax
   1400060fb:	jmp    0x140006113
   1400060fd:	call   QWORD PTR [rip+0x1f9d]        # 0x1400080a0
   140006103:	test   eax,eax
   140006105:	jne    0x140006110
   140006107:	lea    ecx,[rax+0x57]
   14000610a:	call   QWORD PTR [rip+0x1f08]        # 0x140008018
   140006110:	or     eax,0xffffffff
   140006113:	mov    rbx,QWORD PTR [rsp+0x30]
   140006118:	mov    rsi,QWORD PTR [rsp+0x38]
   14000611d:	mov    rdi,QWORD PTR [rsp+0x40]
   140006122:	add    rsp,0x20
   140006126:	pop    r14
   140006128:	ret    
   140006129:	int3   
   14000612a:	int3   
   14000612b:	int3   
   14000612c:	int3   
   14000612d:	int3   
   14000612e:	int3   
   14000612f:	int3   
   140006130:	mov    rax,rsp
   140006133:	mov    QWORD PTR [rax+0x8],rbp
   140006137:	mov    QWORD PTR [rax+0x10],rsi
   14000613b:	mov    QWORD PTR [rax+0x18],rdi
   14000613f:	mov    QWORD PTR [rax+0x20],r14
   140006143:	push   r15
   140006145:	sub    rsp,0x20
   140006149:	xor    ecx,ecx
   14000614b:	mov    rdi,r9
   14000614e:	mov    rsi,r8
   140006151:	mov    r15,rdx
   140006154:	call   QWORD PTR [rip+0x1ebe]        # 0x140008018
   14000615a:	test   r15,r15
   14000615d:	je     0x140006223
   140006163:	test   rsi,rsi
   140006166:	je     0x140006223
   14000616c:	test   rdi,rdi
   14000616f:	je     0x140006223
   140006175:	and    QWORD PTR [rdi],0x0
   140006179:	mov    edx,0x3a
   14000617e:	and    QWORD PTR [rdi+0x8],0x0
   140006183:	mov    rcx,rsi
   140006186:	call   0x14000319c
   14000618b:	movsxd rbp,eax
   14000618e:	cmp    ebp,0xffffffff
   140006191:	je     0x140006236
   140006197:	mov    rcx,rsi
   14000619a:	call   QWORD PTR [rip+0x1f18]        # 0x1400080b8
   1400061a0:	xor    edx,edx
   1400061a2:	lea    r8d,[rbp+0x5]
   1400061a6:	mov    r14d,eax
   1400061a9:	sub    r14d,ebp
   1400061ac:	dec    r14d
   1400061af:	lea    ecx,[rdx+0x8]
   1400061b2:	lea    r9d,[rdx+0x1]
   1400061b6:	call   0x1400024e8
   1400061bb:	mov    QWORD PTR [rdi],rax
   1400061be:	test   rax,rax
   1400061c1:	jne    0x1400061d2
   1400061c3:	call   QWORD PTR [rip+0x1ed7]        # 0x1400080a0
   1400061c9:	test   eax,eax
   1400061cb:	jne    0x140006236
   1400061cd:	lea    ecx,[rax+0x8]
   1400061d0:	jmp    0x140006230
   1400061d2:	xor    edx,edx
   1400061d4:	lea    r8d,[r14+0x5]
   1400061d8:	lea    ecx,[rdx+0x9]
   1400061db:	lea    r9d,[rdx+0x1]
   1400061df:	call   0x1400024e8
   1400061e4:	mov    QWORD PTR [rdi+0x8],rax
   1400061e8:	test   rax,rax
   1400061eb:	je     0x1400061c3
   1400061ed:	mov    rcx,QWORD PTR [rdi]
   1400061f0:	lea    r8d,[rbp+0x1]
   1400061f4:	mov    rdx,rsi
   1400061f7:	call   0x140003740
   1400061fc:	test   r14d,r14d
   1400061ff:	je     0x140006216
   140006201:	mov    rcx,QWORD PTR [rdi+0x8]
   140006205:	lea    rdx,[rsi+0x2]
   140006209:	lea    rdx,[rdx+rbp*2]
   14000620d:	lea    r8d,[r14+0x1]
   140006211:	call   0x140003740
   140006216:	mov    r8,QWORD PTR [rdi]
   140006219:	mov    rdx,r15
   14000621c:	call   0x140006028
   140006221:	jmp    0x140006239
   140006223:	call   QWORD PTR [rip+0x1e77]        # 0x1400080a0
   140006229:	test   eax,eax
   14000622b:	jne    0x140006236
   14000622d:	lea    ecx,[rax+0x57]
   140006230:	call   QWORD PTR [rip+0x1de2]        # 0x140008018
   140006236:	or     eax,0xffffffff
   140006239:	mov    rbp,QWORD PTR [rsp+0x30]
   14000623e:	mov    rsi,QWORD PTR [rsp+0x38]
   140006243:	mov    rdi,QWORD PTR [rsp+0x40]
   140006248:	mov    r14,QWORD PTR [rsp+0x48]
   14000624d:	add    rsp,0x20
   140006251:	pop    r15
   140006253:	ret    
   140006254:	int3   
   140006255:	int3   
   140006256:	int3   
   140006257:	int3   
   140006258:	int3   
   140006259:	int3   
   14000625a:	int3   
   14000625b:	int3   
   14000625c:	mov    QWORD PTR [rsp+0x8],rbx
   140006261:	mov    QWORD PTR [rsp+0x10],rbp
   140006266:	mov    QWORD PTR [rsp+0x18],rsi
   14000626b:	push   rdi
   14000626c:	sub    rsp,0x20
   140006270:	mov    rbx,rdx
   140006273:	test   rdx,rdx
   140006276:	je     0x1400062e9
   140006278:	call   QWORD PTR [rip+0x1e22]        # 0x1400080a0
   14000627e:	mov    ebp,eax
   140006280:	call   0x14000270c
   140006285:	mov    edi,0x7
   14000628a:	mov    ecx,edi
   14000628c:	test   rax,rax
   14000628f:	jne    0x140006298
   140006291:	call   0x14000247c
   140006296:	jmp    0x1400062a6
   140006298:	xor    r9d,r9d
   14000629b:	xor    r8d,r8d
   14000629e:	mov    rdx,rax
   1400062a1:	call   0x1400024e8
   1400062a6:	mov    rsi,rax
   1400062a9:	test   rax,rax
   1400062ac:	je     0x1400062e9
   1400062ae:	add    rbx,0x38
   1400062b2:	cmp    QWORD PTR [rbx],0x0
   1400062b6:	je     0x1400062ca
   1400062b8:	mov    eax,DWORD PTR [rbx-0x28]
   1400062bb:	bt     rax,0x10
   1400062c0:	jae    0x1400062ca
   1400062c2:	mov    rcx,rbx
   1400062c5:	call   0x1400042e4
   1400062ca:	add    rbx,0x78
   1400062ce:	sub    rdi,0x1
   1400062d2:	jne    0x1400062b2
   1400062d4:	mov    rcx,rsi
   1400062d7:	call   0x14000274c
   1400062dc:	mov    ecx,ebp
   1400062de:	call   QWORD PTR [rip+0x1d34]        # 0x140008018
   1400062e4:	lea    eax,[rdi+0x1]
   1400062e7:	jmp    0x1400062eb
   1400062e9:	xor    eax,eax
   1400062eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062f0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400062f5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400062fa:	add    rsp,0x20
   1400062fe:	pop    rdi
   1400062ff:	ret    
   140006300:	int3   
   140006301:	int3   
   140006302:	int3   
   140006303:	int3   
   140006304:	int3   
   140006305:	int3   
   140006306:	int3   
   140006307:	int3   
   140006308:	mov    DWORD PTR [rsp+0x20],r9d
   14000630d:	mov    DWORD PTR [rsp+0x18],r8d
   140006312:	mov    QWORD PTR [rsp+0x10],rdx
   140006317:	push   rbp
   140006318:	push   rbx
   140006319:	push   rsi
   14000631a:	push   rdi
   14000631b:	push   r12
   14000631d:	push   r13
   14000631f:	push   r14
   140006321:	push   r15
   140006323:	mov    rbp,rsp
   140006326:	sub    rsp,0x68
   14000632a:	and    DWORD PTR [rbp+0x60],0x0
   14000632e:	mov    r13d,ecx
   140006331:	xor    ecx,ecx
   140006333:	mov    rsi,rdx
   140006336:	call   QWORD PTR [rip+0x1cdc]        # 0x140008018
   14000633c:	test   r13d,r13d
   14000633f:	je     0x14000666d
   140006345:	test   rsi,rsi
   140006348:	je     0x14000666d
   14000634e:	mov    rbx,QWORD PTR [rbp+0x68]
   140006352:	test   rbx,rbx
   140006355:	je     0x14000666d
   14000635b:	call   0x140002bf0
   140006360:	test   eax,eax
   140006362:	jne    0x140006386
   140006364:	mov    ecx,0x157f
   140006369:	call   0x140002cb0
   14000636e:	mov    rcx,rax
   140006371:	call   0x14000274c
   140006376:	mov    ecx,0x47e
   14000637b:	call   QWORD PTR [rip+0x1c97]        # 0x140008018
   140006381:	jmp    0x14000667d
   140006386:	call   0x14000239c
   14000638b:	test   eax,eax
   14000638d:	je     0x140006678
   140006393:	xor    ecx,ecx
   140006395:	call   0x140005340
   14000639a:	mov    r15,rax
   14000639d:	test   rax,rax
   1400063a0:	je     0x140006678
   1400063a6:	mov    r8,rbx
   1400063a9:	lea    rcx,[rbp+0x60]
   1400063ad:	call   0x140005744
   1400063b2:	test   eax,eax
   1400063b4:	je     0x140006678
   1400063ba:	and    DWORD PTR [rbp+0x58],0x0
   1400063be:	mov    r12d,0x1
   1400063c4:	mov    edx,r12d
   1400063c7:	mov    DWORD PTR [rbp+0x48],edx
   1400063ca:	cmp    r13d,r12d
   1400063cd:	jbe    0x14000658a
   1400063d3:	mov    eax,edx
   1400063d5:	mov    r12d,0x2
   1400063db:	mov    rdi,QWORD PTR [rsi+rax*8]
   1400063df:	lea    eax,[rdx+0x1]
   1400063e2:	cmp    eax,r13d
   1400063e5:	jae    0x1400063ed
   1400063e7:	mov    r14,QWORD PTR [rsi+rax*8]
   1400063eb:	jmp    0x1400063f0
   1400063ed:	xor    r14d,r14d
   1400063f0:	mov    r8,rdi
   1400063f3:	mov    rdx,rbx
   1400063f6:	call   0x140006028
   1400063fb:	cmp    eax,0xffffffff
   1400063fe:	jne    0x140006435
   140006400:	lea    r9,[rbp-0x38]
   140006404:	mov    r8,rdi
   140006407:	mov    rdx,rbx
   14000640a:	call   0x140006130
   14000640f:	cmp    eax,0xffffffff
   140006412:	jne    0x140006427
   140006414:	mov    eax,DWORD PTR [rbp+0x60]
   140006417:	cmp    eax,0xffffffff
   14000641a:	je     0x140006502
   140006420:	mov    r14,rdi
   140006423:	xor    edi,edi
   140006425:	jmp    0x14000642f
   140006427:	mov    rdi,QWORD PTR [rbp-0x38]
   14000642b:	mov    r14,QWORD PTR [rbp-0x30]
   14000642f:	mov    r12d,0x1
   140006435:	cdqe   
   140006437:	imul   rsi,rax,0x78
   14000643b:	add    rsi,rbx
   14000643e:	je     0x1400065c0
   140006444:	test   r14,r14
   140006447:	je     0x14000648f
   140006449:	cmp    r12d,0x2
   14000644d:	jne    0x14000648f
   14000644f:	mov    ecx,DWORD PTR [rsi+0x8]
   140006452:	lea    eax,[rcx-0x7]
   140006455:	cmp    eax,r12d
   140006458:	jbe    0x140006462
   14000645a:	lea    eax,[rcx-0x1]
   14000645d:	cmp    eax,r12d
   140006460:	ja     0x140006486
   140006462:	mov    r8,r14
   140006465:	mov    rdx,rbx
   140006468:	call   0x140006028
   14000646d:	cmp    eax,0xffffffff
   140006470:	jne    0x140006486
   140006472:	lea    r9,[rbp-0x38]
   140006476:	mov    r8,r14
   140006479:	mov    rdx,rbx
   14000647c:	call   0x140006130
   140006481:	cmp    eax,0xffffffff
   140006484:	je     0x14000648f
   140006486:	mov    r12d,0x1
   14000648c:	xor    r14d,r14d
   14000648f:	mov    eax,DWORD PTR [rbp+0x60]
   140006492:	lea    r8,[rbp-0x28]
   140006496:	mov    rdx,r14
   140006499:	mov    DWORD PTR [rbp-0x24],eax
   14000649c:	mov    rcx,rdi
   14000649f:	mov    QWORD PTR [rbp-0x18],rsi
   1400064a3:	mov    DWORD PTR [rbp-0x28],r12d
   1400064a7:	mov    QWORD PTR [rbp-0x20],r15
   1400064ab:	call   0x140005a30
   1400064b0:	mov    r8d,DWORD PTR [rbp-0x28]
   1400064b4:	test   eax,eax
   1400064b6:	je     0x140006600
   1400064bc:	mov    eax,DWORD PTR [rsi+0x18]
   1400064bf:	test   eax,eax
   1400064c1:	je     0x1400064c8
   1400064c3:	cmp    eax,DWORD PTR [rsi+0x1c]
   1400064c6:	je     0x14000652f
   1400064c8:	mov    eax,DWORD PTR [rsi+0x10]
   1400064cb:	mov    r12d,0x1
   1400064d1:	add    DWORD PTR [rsi+0x1c],r12d
   1400064d5:	and    eax,0x20000
   1400064da:	mov    ecx,DWORD PTR [rbp+0x58]
   1400064dd:	test   rax,rax
   1400064e0:	mov    edx,DWORD PTR [rbp+0x48]
   1400064e3:	cmovne ecx,r12d
   1400064e7:	add    edx,r8d
   1400064ea:	mov    DWORD PTR [rbp+0x58],ecx
   1400064ed:	mov    DWORD PTR [rbp+0x48],edx
   1400064f0:	cmp    edx,r13d
   1400064f3:	jae    0x140006586
   1400064f9:	mov    rsi,QWORD PTR [rbp+0x50]
   1400064fd:	jmp    0x1400063d3
   140006502:	mov    ecx,0x15e7
   140006507:	call   0x140002cb0
   14000650c:	mov    ecx,r12d
   14000650f:	mov    r9,r15
   140006512:	mov    r8,rdi
   140006515:	mov    rdx,rax
   140006518:	call   0x1400027c8
   14000651d:	mov    rdx,rbx
   140006520:	call   0x14000625c
   140006525:	mov    ecx,0x800401e4
   14000652a:	jmp    0x14000637b
   14000652f:	test   rdi,rdi
   140006532:	je     0x140006566
   140006534:	mov    rcx,rdi
   140006537:	call   QWORD PTR [rip+0x1b7b]        # 0x1400080b8
   14000653d:	test   eax,eax
   14000653f:	je     0x140006566
   140006541:	mov    ecx,0x15e5
   140006546:	call   0x140002cb0
   14000654b:	mov    r9d,DWORD PTR [rsi+0x18]
   14000654f:	mov    rdx,rax
   140006552:	mov    r8,rdi
   140006555:	mov    QWORD PTR [rsp+0x20],r15
   14000655a:	mov    ecx,0x3
   14000655f:	call   0x1400027c8
   140006564:	jmp    0x14000651d
   140006566:	mov    ecx,0x15ea
   14000656b:	call   0x140002cb0
   140006570:	mov    r8d,DWORD PTR [rsi+0x18]
   140006574:	mov    rdx,rax
   140006577:	mov    r9,r15
   14000657a:	mov    ecx,0x2
   14000657f:	call   0x1400027c8
   140006584:	jmp    0x14000651d
   140006586:	test   ecx,ecx
   140006588:	jne    0x1400065b0
   14000658a:	xor    edx,edx
   14000658c:	mov    rcx,rbx
   14000658f:	test   rcx,rcx
   140006592:	je     0x1400065e6
   140006594:	mov    eax,DWORD PTR [rcx+0x10]
   140006597:	bt     rax,0x13
   14000659c:	jae    0x1400065a4
   14000659e:	cmp    DWORD PTR [rcx+0x1c],0x0
   1400065a2:	je     0x1400065d8
   1400065a4:	add    edx,r12d
   1400065a7:	add    rcx,0x78
   1400065ab:	cmp    edx,0x7
   1400065ae:	jb     0x14000658f
   1400065b0:	xor    ecx,ecx
   1400065b2:	call   QWORD PTR [rip+0x1a60]        # 0x140008018
   1400065b8:	mov    eax,r12d
   1400065bb:	jmp    0x14000667f
   1400065c0:	call   QWORD PTR [rip+0x1ada]        # 0x1400080a0
   1400065c6:	test   eax,eax
   1400065c8:	jne    0x140006678
   1400065ce:	mov    ecx,0x42b
   1400065d3:	jmp    0x140006672
   1400065d8:	cmp    QWORD PTR [rcx+0x20],0x0
   1400065dd:	jne    0x140006634
   1400065df:	bt     rax,0x12
   1400065e4:	jb     0x14000660a
   1400065e6:	call   QWORD PTR [rip+0x1ab4]        # 0x1400080a0
   1400065ec:	test   eax,eax
   1400065ee:	jne    0x1400065fb
   1400065f0:	mov    ecx,0x42b
   1400065f5:	call   QWORD PTR [rip+0x1a1d]        # 0x140008018
   1400065fb:	call   0x140002904
   140006600:	mov    rdx,rbx
   140006603:	call   0x14000625c
   140006608:	jmp    0x14000667d
   14000660a:	mov    rdi,QWORD PTR [rcx+0x28]
   14000660e:	test   rdi,rdi
   140006611:	je     0x140006650
   140006613:	mov    rcx,rdi
   140006616:	call   QWORD PTR [rip+0x1a9c]        # 0x1400080b8
   14000661c:	test   eax,eax
   14000661e:	je     0x140006650
   140006620:	mov    ecx,0x15e4
   140006625:	call   0x140002cb0
   14000662a:	mov    ecx,0x2
   14000662f:	jmp    0x14000650f
   140006634:	mov    rdi,QWORD PTR [rcx+0x28]
   140006638:	test   rdi,rdi
   14000663b:	jne    0x140006613
   14000663d:	mov    rcx,QWORD PTR [rcx+0x20]
   140006641:	call   0x140005680
   140006646:	mov    rdi,rax
   140006649:	test   rax,rax
   14000664c:	jne    0x140006613
   14000664e:	jmp    0x1400065fb
   140006650:	mov    ecx,0x15e8
   140006655:	call   0x140002cb0
   14000665a:	mov    rdx,rax
   14000665d:	mov    r8,r15
   140006660:	mov    ecx,r12d
   140006663:	call   0x1400027c8
   140006668:	jmp    0x14000651d
   14000666d:	mov    ecx,0x57
   140006672:	call   QWORD PTR [rip+0x19a0]        # 0x140008018
   140006678:	call   0x140002904
   14000667d:	xor    eax,eax
   14000667f:	add    rsp,0x68
   140006683:	pop    r15
   140006685:	pop    r14
   140006687:	pop    r13
   140006689:	pop    r12
   14000668b:	pop    rdi
   14000668c:	pop    rsi
   14000668d:	pop    rbx
   14000668e:	pop    rbp
   14000668f:	ret    
   140006690:	int3   
   140006691:	int3   
   140006692:	int3   
   140006693:	int3   
   140006694:	int3   
   140006695:	int3   
   140006696:	int3   
   140006697:	int3   
   140006698:	mov    r9,r8
   14000669b:	test   rcx,rcx
   14000669e:	je     0x1400066ce
   1400066a0:	cmp    DWORD PTR [rcx],0x9
   1400066a3:	jne    0x1400066ce
   1400066a5:	cmp    DWORD PTR [rcx+0x4],edx
   1400066a8:	jbe    0x1400066ce
   1400066aa:	mov    rax,QWORD PTR [rcx+0x8]
   1400066ae:	xor    r8d,r8d
   1400066b1:	cmp    edx,0x1
   1400066b4:	jb     0x1400066c5
   1400066b6:	mov    ecx,edx
   1400066b8:	mov    r8,rax
   1400066bb:	mov    rax,QWORD PTR [rax+0x18]
   1400066bf:	sub    rcx,0x1
   1400066c3:	jne    0x1400066b8
   1400066c5:	test   r9,r9
   1400066c8:	je     0x1400066d0
   1400066ca:	mov    QWORD PTR [r9],r8
   1400066cd:	ret    
   1400066ce:	xor    eax,eax
   1400066d0:	ret    
   1400066d1:	int3   
   1400066d2:	int3   
   1400066d3:	int3   
   1400066d4:	int3   
   1400066d5:	int3   
   1400066d6:	int3   
   1400066d7:	int3   
   1400066d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400066dd:	mov    QWORD PTR [rsp+0x10],rbp
   1400066e2:	mov    QWORD PTR [rsp+0x18],rsi
   1400066e7:	push   rdi
   1400066e8:	sub    rsp,0x20
   1400066ec:	mov    rdi,r9
   1400066ef:	mov    esi,r8d
   1400066f2:	mov    ebp,edx
   1400066f4:	mov    rbx,rcx
   1400066f7:	test   rcx,rcx
   1400066fa:	je     0x140006755
   1400066fc:	cmp    DWORD PTR [rcx],0x9
   1400066ff:	jne    0x140006755
   140006701:	cmp    DWORD PTR [rcx+0x4],0xffffffff
   140006705:	je     0x140006755
   140006707:	mov    ecx,0x20
   14000670c:	call   0x1400043c0
   140006711:	mov    rcx,rax
   140006714:	test   rax,rax
   140006717:	je     0x140006755
   140006719:	and    QWORD PTR [rax+0x18],0x0
   14000671e:	mov    DWORD PTR [rax+0x4],ebp
   140006721:	mov    DWORD PTR [rax+0x8],esi
   140006724:	mov    QWORD PTR [rax+0x10],rdi
   140006728:	mov    DWORD PTR [rax],0x63
   14000672e:	inc    DWORD PTR [rbx+0x4]
   140006731:	cmp    QWORD PTR [rbx+0x8],0x0
   140006736:	jne    0x140006742
   140006738:	mov    QWORD PTR [rbx+0x10],rax
   14000673c:	mov    QWORD PTR [rbx+0x8],rax
   140006740:	jmp    0x14000674e
   140006742:	mov    rax,QWORD PTR [rbx+0x10]
   140006746:	mov    QWORD PTR [rax+0x18],rcx
   14000674a:	mov    QWORD PTR [rbx+0x10],rcx
   14000674e:	mov    eax,DWORD PTR [rbx+0x4]
   140006751:	dec    eax
   140006753:	jmp    0x140006758
   140006755:	or     eax,0xffffffff
   140006758:	mov    rbx,QWORD PTR [rsp+0x30]
   14000675d:	mov    rbp,QWORD PTR [rsp+0x38]
   140006762:	mov    rsi,QWORD PTR [rsp+0x40]
   140006767:	add    rsp,0x20
   14000676b:	pop    rdi
   14000676c:	ret    
   14000676d:	int3   
   14000676e:	int3   
   14000676f:	int3   
   140006770:	int3   
   140006771:	int3   
   140006772:	int3   
   140006773:	int3   
   140006774:	test   rcx,rcx
   140006777:	je     0x1400067ed
   140006779:	push   rbx
   14000677a:	sub    rsp,0x20
   14000677e:	mov    edx,DWORD PTR [rcx+0x4]
   140006781:	cmp    edx,0x70000
   140006787:	ja     0x14000679e
   140006789:	add    edx,0xfffe0000
   14000678f:	cmp    edx,0x50000
   140006795:	ja     0x1400067e8
   140006797:	test   dx,dx
   14000679a:	je     0x1400067bb
   14000679c:	jmp    0x1400067e8
   14000679e:	cmp    edx,0x80000
   1400067a4:	je     0x1400067c6
   1400067a6:	lea    eax,[rdx-0x90000]
   1400067ac:	test   eax,0xfffcffff
   1400067b1:	jne    0x1400067e8
   1400067b3:	cmp    edx,0xc0000
   1400067b9:	je     0x1400067e8
   1400067bb:	add    rcx,0x10
   1400067bf:	call   0x1400042e4
   1400067c4:	jmp    0x1400067e8
   1400067c6:	lea    rbx,[rcx+0x10]
   1400067ca:	mov    rcx,QWORD PTR [rbx]
   1400067cd:	test   rcx,rcx
   1400067d0:	je     0x1400067e4
   1400067d2:	cmp    DWORD PTR [rcx],0x9
   1400067d5:	jne    0x1400067e4
   1400067d7:	call   0x1400068d4
   1400067dc:	mov    rcx,rbx
   1400067df:	call   0x1400042e4
   1400067e4:	and    QWORD PTR [rbx],0x0
   1400067e8:	add    rsp,0x20
   1400067ec:	pop    rbx
   1400067ed:	ret    
   1400067ee:	int3   
   1400067ef:	int3   
   1400067f0:	int3   
   1400067f1:	int3   
   1400067f2:	int3   
   1400067f3:	int3   
   1400067f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400067f9:	mov    QWORD PTR [rsp+0x10],rbp
   1400067fe:	mov    QWORD PTR [rsp+0x18],rsi
   140006803:	push   rdi
   140006804:	push   r14
   140006806:	push   r15
   140006808:	sub    rsp,0x20
   14000680c:	mov    r15d,r9d
   14000680f:	mov    r14,r8
   140006812:	mov    esi,edx
   140006814:	mov    rbp,rcx
   140006817:	test   rcx,rcx
   14000681a:	je     0x1400068ac
   140006820:	cmp    DWORD PTR [rcx],0x9
   140006823:	jne    0x1400068ac
   140006829:	mov    rdi,QWORD PTR [rcx+0x8]
   14000682d:	xor    ebx,ebx
   14000682f:	cmp    DWORD PTR [rcx+0x4],ebx
   140006832:	jbe    0x1400068ac
   140006834:	cmp    DWORD PTR [rdi+0x4],esi
   140006837:	jne    0x1400068a1
   140006839:	cmp    esi,0x20000
   14000683f:	je     0x14000688b
   140006841:	cmp    esi,0x30000
   140006847:	je     0x140006880
   140006849:	cmp    esi,0x40000
   14000684f:	je     0x140006880
   140006851:	cmp    esi,0x60000
   140006857:	je     0x140006872
   140006859:	cmp    esi,0x70000
   14000685f:	jne    0x1400068a1
   140006861:	mov    rax,QWORD PTR [rdi+0x10]
   140006865:	movsd  xmm0,QWORD PTR [rax]
   140006869:	ucomisd xmm0,QWORD PTR [r14]
   14000686e:	jp     0x1400068a1
   140006870:	jmp    0x14000689f
   140006872:	mov    rax,QWORD PTR [rdi+0x10]
   140006876:	movss  xmm0,DWORD PTR [rax]
   14000687a:	ucomiss xmm0,DWORD PTR [r14]
   14000687e:	jmp    0x14000686e
   140006880:	mov    rcx,QWORD PTR [rdi+0x10]
   140006884:	mov    eax,DWORD PTR [r14]
   140006887:	cmp    DWORD PTR [rcx],eax
   140006889:	jmp    0x14000689f
   14000688b:	mov    rcx,QWORD PTR [rdi+0x10]
   14000688f:	xor    r9d,r9d
   140006892:	mov    r8d,r15d
   140006895:	mov    rdx,r14
   140006898:	call   0x1400038d4
   14000689d:	test   eax,eax
   14000689f:	je     0x1400068c8
   1400068a1:	mov    rdi,QWORD PTR [rdi+0x18]
   1400068a5:	inc    ebx
   1400068a7:	cmp    ebx,DWORD PTR [rbp+0x4]
   1400068aa:	jb     0x140006834
   1400068ac:	or     eax,0xffffffff
   1400068af:	mov    rbx,QWORD PTR [rsp+0x40]
   1400068b4:	mov    rbp,QWORD PTR [rsp+0x48]
   1400068b9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400068be:	add    rsp,0x20
   1400068c2:	pop    r15
   1400068c4:	pop    r14
   1400068c6:	pop    rdi
   1400068c7:	ret    
   1400068c8:	mov    eax,ebx
   1400068ca:	jmp    0x1400068af
   1400068cc:	int3   
   1400068cd:	int3   
   1400068ce:	int3   
   1400068cf:	int3   
   1400068d0:	int3   
   1400068d1:	int3   
   1400068d2:	int3   
   1400068d3:	int3   
   1400068d4:	test   rcx,rcx
   1400068d7:	je     0x140006934
   1400068d9:	mov    QWORD PTR [rsp+0x10],rbx
   1400068de:	push   rdi
   1400068df:	sub    rsp,0x20
   1400068e3:	cmp    DWORD PTR [rcx],0x9
   1400068e6:	mov    rdi,rcx
   1400068e9:	jne    0x14000692a
   1400068eb:	mov    rax,QWORD PTR [rcx+0x8]
   1400068ef:	mov    QWORD PTR [rsp+0x30],rax
   1400068f4:	test   rax,rax
   1400068f7:	je     0x14000691c
   1400068f9:	mov    rbx,QWORD PTR [rax+0x18]
   1400068fd:	mov    rcx,rax
   140006900:	call   0x140006774
   140006905:	lea    rcx,[rsp+0x30]
   14000690a:	call   0x1400042e4
   14000690f:	mov    QWORD PTR [rsp+0x30],rbx
   140006914:	mov    rax,rbx
   140006917:	test   rbx,rbx
   14000691a:	jne    0x1400068f9
   14000691c:	and    DWORD PTR [rdi+0x4],0x0
   140006920:	and    QWORD PTR [rdi+0x8],0x0
   140006925:	and    QWORD PTR [rdi+0x10],0x0
   14000692a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000692f:	add    rsp,0x20
   140006933:	pop    rdi
   140006934:	ret    
   140006935:	int3   
   140006936:	int3   
   140006937:	int3   
   140006938:	int3   
   140006939:	int3   
   14000693a:	int3   
   14000693b:	int3   
   14000693c:	mov    QWORD PTR [rsp+0x10],rbx
   140006941:	mov    QWORD PTR [rsp+0x18],rsi
   140006946:	push   rdi
   140006947:	sub    rsp,0x20
   14000694b:	mov    rdi,QWORD PTR [rcx]
   14000694e:	mov    rsi,rcx
   140006951:	test   rdi,rdi
   140006954:	je     0x14000699a
   140006956:	cmp    DWORD PTR [rdi],0x9
   140006959:	jne    0x14000699a
   14000695b:	mov    rax,QWORD PTR [rdi+0x8]
   14000695f:	mov    QWORD PTR [rsp+0x30],rax
   140006964:	test   rax,rax
   140006967:	je     0x14000698c
   140006969:	mov    rbx,QWORD PTR [rax+0x18]
   14000696d:	mov    rcx,rax
   140006970:	call   0x140006774
   140006975:	lea    rcx,[rsp+0x30]
   14000697a:	call   0x1400042e4
   14000697f:	mov    QWORD PTR [rsp+0x30],rbx
   140006984:	mov    rax,rbx
   140006987:	test   rbx,rbx
   14000698a:	jne    0x140006969
   14000698c:	and    DWORD PTR [rdi+0x4],0x0
   140006990:	and    QWORD PTR [rdi+0x8],0x0
   140006995:	and    QWORD PTR [rdi+0x10],0x0
   14000699a:	mov    rcx,rsi
   14000699d:	mov    rbx,QWORD PTR [rsp+0x38]
   1400069a2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400069a7:	add    rsp,0x20
   1400069ab:	pop    rdi
   1400069ac:	jmp    0x1400042e4
   1400069b1:	int3   
   1400069b2:	int3   
   1400069b3:	int3   
   1400069b4:	int3   
   1400069b5:	int3   
   1400069b6:	int3   
   1400069b7:	int3   
   1400069b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400069bd:	mov    QWORD PTR [rsp+0x18],rbp
   1400069c2:	push   rsi
   1400069c3:	push   rdi
   1400069c4:	push   r14
   1400069c6:	sub    rsp,0x20
   1400069ca:	mov    rbp,rdx
   1400069cd:	mov    rbx,rcx
   1400069d0:	test   rcx,rcx
   1400069d3:	je     0x140006a2f
   1400069d5:	cmp    DWORD PTR [rcx],0x9
   1400069d8:	jne    0x140006a2f
   1400069da:	mov    rcx,rdx
   1400069dd:	call   QWORD PTR [rip+0x16d5]        # 0x1400080b8
   1400069e3:	lea    edi,[rax+0x1]
   1400069e6:	lea    r14d,[rdi+rdi*1]
   1400069ea:	mov    ecx,r14d
   1400069ed:	call   0x1400043c0
   1400069f2:	mov    QWORD PTR [rsp+0x40],rax
   1400069f7:	mov    rsi,rax
   1400069fa:	test   rax,rax
   1400069fd:	je     0x140006a2f
   1400069ff:	mov    r8d,edi
   140006a02:	mov    rdx,rbp
   140006a05:	mov    rcx,rax
   140006a08:	call   0x140003740
   140006a0d:	mov    r9,rsi
   140006a10:	mov    r8d,r14d
   140006a13:	mov    edx,0x20000
   140006a18:	mov    rcx,rbx
   140006a1b:	call   0x1400066d8
   140006a20:	cmp    eax,0xffffffff
   140006a23:	jne    0x140006a32
   140006a25:	lea    rcx,[rsp+0x40]
   140006a2a:	call   0x1400042e4
   140006a2f:	or     eax,0xffffffff
   140006a32:	mov    rbx,QWORD PTR [rsp+0x48]
   140006a37:	mov    rbp,QWORD PTR [rsp+0x50]
   140006a3c:	add    rsp,0x20
   140006a40:	pop    r14
   140006a42:	pop    rdi
   140006a43:	pop    rsi
   140006a44:	ret    
   140006a45:	int3   
   140006a46:	int3   
   140006a47:	int3   
   140006a48:	int3   
   140006a49:	int3   
   140006a4a:	int3   
   140006a4b:	int3   
   140006a4c:	mov    QWORD PTR [rsp+0x10],rbx
   140006a51:	push   rdi
   140006a52:	sub    rsp,0x20
   140006a56:	mov    edi,edx
   140006a58:	mov    rbx,rcx
   140006a5b:	test   rcx,rcx
   140006a5e:	je     0x140006aa0
   140006a60:	cmp    DWORD PTR [rcx],0x9
   140006a63:	jne    0x140006aa0
   140006a65:	mov    ecx,0x4
   140006a6a:	call   0x1400043c0
   140006a6f:	mov    QWORD PTR [rsp+0x30],rax
   140006a74:	test   rax,rax
   140006a77:	je     0x140006aa0
   140006a79:	mov    r9,rax
   140006a7c:	mov    DWORD PTR [rax],edi
   140006a7e:	mov    edx,0x30000
   140006a83:	mov    r8d,0x4
   140006a89:	mov    rcx,rbx
   140006a8c:	call   0x1400066d8
   140006a91:	cmp    eax,0xffffffff
   140006a94:	jne    0x140006aa3
   140006a96:	lea    rcx,[rsp+0x30]
   140006a9b:	call   0x1400042e4
   140006aa0:	or     eax,0xffffffff
   140006aa3:	mov    rbx,QWORD PTR [rsp+0x38]
   140006aa8:	add    rsp,0x20
   140006aac:	pop    rdi
   140006aad:	ret    
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	int3   
   140006ab1:	int3   
   140006ab2:	int3   
   140006ab3:	int3   
   140006ab4:	mov    QWORD PTR [rsp+0x10],rbx
   140006ab9:	push   rdi
   140006aba:	sub    rsp,0x20
   140006abe:	mov    edi,edx
   140006ac0:	mov    rbx,rcx
   140006ac3:	test   rcx,rcx
   140006ac6:	je     0x140006b08
   140006ac8:	cmp    DWORD PTR [rcx],0x9
   140006acb:	jne    0x140006b08
   140006acd:	mov    ecx,0x4
   140006ad2:	call   0x1400043c0
   140006ad7:	mov    QWORD PTR [rsp+0x30],rax
   140006adc:	test   rax,rax
   140006adf:	je     0x140006b08
   140006ae1:	mov    r9,rax
   140006ae4:	mov    DWORD PTR [rax],edi
   140006ae6:	mov    edx,0x40000
   140006aeb:	mov    r8d,0x4
   140006af1:	mov    rcx,rbx
   140006af4:	call   0x1400066d8
   140006af9:	cmp    eax,0xffffffff
   140006afc:	jne    0x140006b0b
   140006afe:	lea    rcx,[rsp+0x30]
   140006b03:	call   0x1400042e4
   140006b08:	or     eax,0xffffffff
   140006b0b:	mov    rbx,QWORD PTR [rsp+0x38]
   140006b10:	add    rsp,0x20
   140006b14:	pop    rdi
   140006b15:	ret    
   140006b16:	int3   
   140006b17:	int3   
   140006b18:	int3   
   140006b19:	int3   
   140006b1a:	int3   
   140006b1b:	int3   
   140006b1c:	rex push rbx
   140006b1e:	sub    rsp,0x30
   140006b22:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140006b27:	movaps xmm6,xmm1
   140006b2a:	mov    rbx,rcx
   140006b2d:	test   rcx,rcx
   140006b30:	je     0x140006b74
   140006b32:	cmp    DWORD PTR [rcx],0x9
   140006b35:	jne    0x140006b74
   140006b37:	mov    ecx,0x4
   140006b3c:	call   0x1400043c0
   140006b41:	mov    QWORD PTR [rsp+0x40],rax
   140006b46:	test   rax,rax
   140006b49:	je     0x140006b74
   140006b4b:	mov    r9,rax
   140006b4e:	movss  DWORD PTR [rax],xmm6
   140006b52:	mov    edx,0x60000
   140006b57:	mov    r8d,0x4
   140006b5d:	mov    rcx,rbx
   140006b60:	call   0x1400066d8
   140006b65:	cmp    eax,0xffffffff
   140006b68:	jne    0x140006b77
   140006b6a:	lea    rcx,[rsp+0x40]
   140006b6f:	call   0x1400042e4
   140006b74:	or     eax,0xffffffff
   140006b77:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140006b7c:	add    rsp,0x30
   140006b80:	pop    rbx
   140006b81:	ret    
   140006b82:	int3   
   140006b83:	int3   
   140006b84:	int3   
   140006b85:	int3   
   140006b86:	int3   
   140006b87:	int3   
   140006b88:	rex push rbx
   140006b8a:	sub    rsp,0x30
   140006b8e:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140006b93:	movaps xmm6,xmm1
   140006b96:	mov    rbx,rcx
   140006b99:	test   rcx,rcx
   140006b9c:	je     0x140006be0
   140006b9e:	cmp    DWORD PTR [rcx],0x9
   140006ba1:	jne    0x140006be0
   140006ba3:	mov    ecx,0x8
   140006ba8:	call   0x1400043c0
   140006bad:	mov    QWORD PTR [rsp+0x40],rax
   140006bb2:	test   rax,rax
   140006bb5:	je     0x140006be0
   140006bb7:	mov    r9,rax
   140006bba:	movsd  QWORD PTR [rax],xmm6
   140006bbe:	mov    edx,0x70000
   140006bc3:	mov    r8d,0x8
   140006bc9:	mov    rcx,rbx
   140006bcc:	call   0x1400066d8
   140006bd1:	cmp    eax,0xffffffff
   140006bd4:	jne    0x140006be3
   140006bd6:	lea    rcx,[rsp+0x40]
   140006bdb:	call   0x1400042e4
   140006be0:	or     eax,0xffffffff
   140006be3:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140006be8:	add    rsp,0x30
   140006bec:	pop    rbx
   140006bed:	ret    
   140006bee:	int3   
   140006bef:	int3   
   140006bf0:	int3   
   140006bf1:	int3   
   140006bf2:	int3   
   140006bf3:	int3   
   140006bf4:	mov    QWORD PTR [rsp+0x10],rbx
   140006bf9:	mov    QWORD PTR [rsp+0x18],rsi
   140006bfe:	mov    QWORD PTR [rsp+0x8],rcx
   140006c03:	push   rdi
   140006c04:	sub    rsp,0x20
   140006c08:	mov    rsi,QWORD PTR [rip+0x3ad9]        # 0x14000a6e8
   140006c0f:	xor    edi,edi
   140006c11:	test   rsi,rsi
   140006c14:	je     0x140006c8d
   140006c16:	cmp    DWORD PTR [rsi],0x9
   140006c19:	jne    0x140006c8d
   140006c1b:	lea    ecx,[rdi+0x18]
   140006c1e:	call   0x1400043c0
   140006c23:	mov    rbx,rax
   140006c26:	test   rax,rax
   140006c29:	je     0x140006c8d
   140006c2b:	mov    QWORD PTR [rax],0x9
   140006c32:	cmp    DWORD PTR [rax],0x9
   140006c35:	mov    QWORD PTR [rax+0x8],rdi
   140006c39:	mov    QWORD PTR [rax+0x10],rdi
   140006c3d:	mov    QWORD PTR [rsp+0x30],rax
   140006c42:	jne    0x140006c8d
   140006c44:	xor    r9d,r9d
   140006c47:	xor    r8d,r8d
   140006c4a:	xor    edx,edx
   140006c4c:	mov    rcx,rbx
   140006c4f:	call   0x1400066d8
   140006c54:	cmp    eax,0xffffffff
   140006c57:	je     0x140006c60
   140006c59:	inc    edi
   140006c5b:	cmp    edi,0x3
   140006c5e:	jb     0x140006c44
   140006c60:	cmp    edi,0x3
   140006c63:	jne    0x140006c7e
   140006c65:	mov    r9,rbx
   140006c68:	lea    r8d,[rdi+0x5]
   140006c6c:	mov    edx,0x80000
   140006c71:	mov    rcx,rsi
   140006c74:	call   0x1400066d8
   140006c79:	cmp    eax,0xffffffff
   140006c7c:	jne    0x140006c90
   140006c7e:	cmp    DWORD PTR [rbx],0x9
   140006c81:	jne    0x140006c8d
   140006c83:	lea    rcx,[rsp+0x30]
   140006c88:	call   0x14000693c
   140006c8d:	or     eax,0xffffffff
   140006c90:	mov    rbx,QWORD PTR [rsp+0x38]
   140006c95:	mov    rsi,QWORD PTR [rsp+0x40]
   140006c9a:	add    rsp,0x20
   140006c9e:	pop    rdi
   140006c9f:	ret    
   140006ca0:	int3   
   140006ca1:	int3   
   140006ca2:	int3   
   140006ca3:	int3   
   140006ca4:	int3   
   140006ca5:	int3   
   140006ca6:	int3   
   140006ca7:	int3   
   140006ca8:	mov    QWORD PTR [rsp+0x8],rbx
   140006cad:	mov    QWORD PTR [rsp+0x10],rsi
   140006cb2:	push   rdi
   140006cb3:	sub    rsp,0x20
   140006cb7:	xor    ebx,ebx
   140006cb9:	mov    esi,edx
   140006cbb:	mov    rdi,rcx
   140006cbe:	test   rcx,rcx
   140006cc1:	je     0x140006ceb
   140006cc3:	cmp    DWORD PTR [rcx],0x9
   140006cc6:	jne    0x140006ceb
   140006cc8:	test   edx,edx
   140006cca:	je     0x140006ce7
   140006ccc:	xor    r9d,r9d
   140006ccf:	xor    r8d,r8d
   140006cd2:	xor    edx,edx
   140006cd4:	mov    rcx,rdi
   140006cd7:	call   0x1400066d8
   140006cdc:	cmp    eax,0xffffffff
   140006cdf:	je     0x140006ce7
   140006ce1:	inc    ebx
   140006ce3:	cmp    ebx,esi
   140006ce5:	jb     0x140006ccc
   140006ce7:	mov    eax,ebx
   140006ce9:	jmp    0x140006cee
   140006ceb:	or     eax,0xffffffff
   140006cee:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cf3:	mov    rsi,QWORD PTR [rsp+0x38]
   140006cf8:	add    rsp,0x20
   140006cfc:	pop    rdi
   140006cfd:	ret    
   140006cfe:	int3   
   140006cff:	int3   
   140006d00:	int3   
   140006d01:	int3   
   140006d02:	int3   
   140006d03:	int3   
   140006d04:	sub    rsp,0x28
   140006d08:	mov    rcx,QWORD PTR [rip+0x39d9]        # 0x14000a6e8
   140006d0f:	xor    r8d,r8d
   140006d12:	call   0x140006698
   140006d17:	xor    ecx,ecx
   140006d19:	test   rax,rax
   140006d1c:	je     0x140006d3c
   140006d1e:	cmp    DWORD PTR [rax+0x4],0x80000
   140006d25:	jne    0x140006d3c
   140006d27:	mov    rax,QWORD PTR [rax+0x10]
   140006d2b:	test   rax,rax
   140006d2e:	je     0x140006d38
   140006d30:	cmp    DWORD PTR [rax],0x9
   140006d33:	jne    0x140006d38
   140006d35:	mov    ecx,DWORD PTR [rax+0x4]
   140006d38:	mov    eax,ecx
   140006d3a:	jmp    0x140006d3e
   140006d3c:	xor    eax,eax
   140006d3e:	add    rsp,0x28
   140006d42:	ret    
   140006d43:	int3   
   140006d44:	int3   
   140006d45:	int3   
   140006d46:	int3   
   140006d47:	int3   
   140006d48:	int3   
   140006d49:	int3   
   140006d4a:	int3   
   140006d4b:	int3   
   140006d4c:	sub    rsp,0x28
   140006d50:	mov    rcx,QWORD PTR [rip+0x3991]        # 0x14000a6e8
   140006d57:	mov    r11d,r8d
   140006d5a:	xor    r8d,r8d
   140006d5d:	lea    edx,[r8+0x3]
   140006d61:	call   0x140006698
   140006d66:	xor    r10d,r10d
   140006d69:	test   rax,rax
   140006d6c:	je     0x140006da6
   140006d6e:	cmp    DWORD PTR [rax+0x4],0x80000
   140006d75:	jne    0x140006da6
   140006d77:	mov    rcx,QWORD PTR [rax+0x10]
   140006d7b:	xor    r8d,r8d
   140006d7e:	mov    edx,r11d
   140006d81:	call   0x140006698
   140006d86:	test   rax,rax
   140006d89:	je     0x140006da1
   140006d8b:	cmp    DWORD PTR [rax+0x4],0x10000
   140006d92:	je     0x140006d9d
   140006d94:	cmp    DWORD PTR [rax+0x4],0x80000
   140006d9b:	jne    0x140006da1
   140006d9d:	mov    r10,QWORD PTR [rax+0x10]
   140006da1:	mov    rax,r10
   140006da4:	jmp    0x140006da8
   140006da6:	xor    eax,eax
   140006da8:	add    rsp,0x28
   140006dac:	ret    
   140006dad:	int3   
   140006dae:	int3   
   140006daf:	int3   
   140006db0:	int3   
   140006db1:	int3   
   140006db2:	int3   
   140006db3:	int3   
   140006db4:	mov    rax,rsp
   140006db7:	mov    QWORD PTR [rax+0x8],rbx
   140006dbb:	mov    QWORD PTR [rax+0x10],rbp
   140006dbf:	mov    QWORD PTR [rax+0x18],rsi
   140006dc3:	mov    QWORD PTR [rax+0x20],rdi
   140006dc7:	push   r14
   140006dc9:	sub    rsp,0x20
   140006dcd:	mov    r14,r8
   140006dd0:	xor    r8d,r8d
   140006dd3:	call   0x140006698
   140006dd8:	mov    rdi,rax
   140006ddb:	test   rax,rax
   140006dde:	jne    0x140006de7
   140006de0:	xor    eax,eax
   140006de2:	jmp    0x140006e67
   140006de7:	test   DWORD PTR [rax+0x4],0xfffdffff
   140006dee:	jne    0x140006de0
   140006df0:	mov    rcx,r14
   140006df3:	call   QWORD PTR [rip+0x12bf]        # 0x1400080b8
   140006df9:	cmp    DWORD PTR [rdi+0x4],0x0
   140006dfd:	lea    esi,[rax+0x1]
   140006e00:	jne    0x140006e21
   140006e02:	lea    ebx,[rsi+rsi*1]
   140006e05:	mov    ecx,ebx
   140006e07:	call   0x1400043c0
   140006e0c:	mov    QWORD PTR [rdi+0x10],rax
   140006e10:	test   rax,rax
   140006e13:	je     0x140006de0
   140006e15:	mov    DWORD PTR [rdi+0x4],0x20000
   140006e1c:	mov    DWORD PTR [rdi+0x8],ebx
   140006e1f:	jmp    0x140006e53
   140006e21:	mov    eax,DWORD PTR [rdi+0x8]
   140006e24:	mov    ecx,esi
   140006e26:	add    rcx,rcx
   140006e29:	cmp    rax,rcx
   140006e2c:	jae    0x140006e53
   140006e2e:	lea    rbx,[rdi+0x10]
   140006e32:	mov    rcx,rbx
   140006e35:	call   0x1400042e4
   140006e3a:	and    QWORD PTR [rbx],0x0
   140006e3e:	lea    ebp,[rsi+rsi*1]
   140006e41:	mov    ecx,ebp
   140006e43:	call   0x1400043c0
   140006e48:	mov    QWORD PTR [rbx],rax
   140006e4b:	test   rax,rax
   140006e4e:	je     0x140006de0
   140006e50:	mov    DWORD PTR [rdi+0x8],ebp
   140006e53:	mov    rcx,QWORD PTR [rdi+0x10]
   140006e57:	mov    r8d,esi
   140006e5a:	mov    rdx,r14
   140006e5d:	call   0x140003740
   140006e62:	mov    eax,0x1
   140006e67:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e6c:	mov    rbp,QWORD PTR [rsp+0x38]
   140006e71:	mov    rsi,QWORD PTR [rsp+0x40]
   140006e76:	mov    rdi,QWORD PTR [rsp+0x48]
   140006e7b:	add    rsp,0x20
   140006e7f:	pop    r14
   140006e81:	ret    
   140006e82:	int3   
   140006e83:	int3   
   140006e84:	int3   
   140006e85:	int3   
   140006e86:	int3   
   140006e87:	int3   
   140006e88:	sub    rsp,0x28
   140006e8c:	mov    rcx,QWORD PTR [rip+0x3855]        # 0x14000a6e8
   140006e93:	mov    r11d,r8d
   140006e96:	xor    r8d,r8d
   140006e99:	lea    edx,[r8+0x3]
   140006e9d:	call   0x140006698
   140006ea2:	xor    r10d,r10d
   140006ea5:	test   rax,rax
   140006ea8:	je     0x140006ed0
   140006eaa:	cmp    DWORD PTR [rax+0x4],0x80000
   140006eb1:	jne    0x140006ed0
   140006eb3:	mov    rcx,QWORD PTR [rax+0x10]
   140006eb7:	xor    r8d,r8d
   140006eba:	mov    edx,r11d
   140006ebd:	call   0x140006698
   140006ec2:	test   rax,rax
   140006ec5:	je     0x140006ecb
   140006ec7:	mov    r10d,DWORD PTR [rax+0x4]
   140006ecb:	mov    eax,r10d
   140006ece:	jmp    0x140006ed2
   140006ed0:	xor    eax,eax
   140006ed2:	add    rsp,0x28
   140006ed6:	ret    
   140006ed7:	int3   
   140006ed8:	int3   
   140006ed9:	int3   
   140006eda:	int3   
   140006edb:	int3   
   140006edc:	int3   
   140006edd:	int3   
   140006ede:	int3   
   140006edf:	int3   
   140006ee0:	sub    rsp,0x28
   140006ee4:	mov    eax,0x5a4d
   140006ee9:	cmp    WORD PTR [rip+0xffffffffffff9110],ax        # 0x140000000
   140006ef0:	je     0x140006ef6
   140006ef2:	xor    eax,eax
   140006ef4:	jmp    0x140006f45
   140006ef6:	movsxd rcx,DWORD PTR [rip+0xffffffffffff913f]        # 0x14000003c
   140006efd:	lea    rax,[rip+0xffffffffffff90fc]        # 0x140000000
   140006f04:	add    rcx,rax
   140006f07:	cmp    DWORD PTR [rcx],0x4550
   140006f0d:	jne    0x140006ef2
   140006f0f:	movzx  eax,WORD PTR [rcx+0x18]
   140006f13:	cmp    eax,0x10b
   140006f18:	je     0x140006f34
   140006f1a:	cmp    eax,0x20b
   140006f1f:	jne    0x140006ef2
   140006f21:	xor    eax,eax
   140006f23:	cmp    DWORD PTR [rcx+0x84],0xe
   140006f2a:	jbe    0x140006f45
   140006f2c:	cmp    DWORD PTR [rcx+0xf8],eax
   140006f32:	jmp    0x140006f42
   140006f34:	xor    eax,eax
   140006f36:	cmp    DWORD PTR [rcx+0x74],0xe
   140006f3a:	jbe    0x140006f45
   140006f3c:	cmp    DWORD PTR [rcx+0xe8],eax
   140006f42:	setne  al
   140006f45:	mov    ecx,0x1
   140006f4a:	mov    DWORD PTR [rip+0x30f0],eax        # 0x14000a040
   140006f50:	call   0x140007318
   140006f55:	mov    ecx,eax
   140006f57:	call   QWORD PTR [rip+0x136b]        # 0x1400082c8
   140006f5d:	mov    rcx,QWORD PTR [rip+0x132c]        # 0x140008290
   140006f64:	or     rax,0xffffffffffffffff
   140006f68:	mov    QWORD PTR [rip+0x3789],rax        # 0x14000a6f8
   140006f6f:	mov    QWORD PTR [rip+0x378a],rax        # 0x14000a700
   140006f76:	mov    eax,DWORD PTR [rip+0x30d8]        # 0x14000a054
   140006f7c:	mov    DWORD PTR [rcx],eax
   140006f7e:	mov    rcx,QWORD PTR [rip+0x1303]        # 0x140008288
   140006f85:	mov    eax,DWORD PTR [rip+0x30bd]        # 0x14000a048
   140006f8b:	mov    DWORD PTR [rcx],eax
   140006f8d:	call   0x140007530
   140006f92:	cmp    DWORD PTR [rip+0x3067],0x0        # 0x14000a000
   140006f99:	jne    0x140006fa8
   140006f9b:	lea    rcx,[rip+0x58e]        # 0x140007530
   140006fa2:	call   QWORD PTR [rip+0x1300]        # 0x1400082a8
   140006fa8:	xor    eax,eax
   140006faa:	add    rsp,0x28
   140006fae:	ret    
   140006faf:	int3   
   140006fb0:	int3   
   140006fb1:	int3   
   140006fb2:	int3   
   140006fb3:	int3   
   140006fb4:	int3   
   140006fb5:	int3   
   140006fb6:	int3   
   140006fb7:	int3   
   140006fb8:	int3   
   140006fb9:	int3   
   140006fba:	int3   
   140006fbb:	int3   
   140006fbc:	int3   
   140006fbd:	int3   
   140006fbe:	int3   
   140006fbf:	int3   
   140006fc0:	sub    rsp,0x38
   140006fc4:	mov    eax,DWORD PTR [rip+0x3086]        # 0x14000a050
   140006fca:	lea    r8,[rip+0x3067]        # 0x14000a038
   140006fd1:	mov    r9d,DWORD PTR [rip+0x3074]        # 0x14000a04c
   140006fd8:	lea    rdx,[rip+0x3051]        # 0x14000a030
   140006fdf:	mov    DWORD PTR [rip+0x305f],eax        # 0x14000a044
   140006fe5:	lea    rcx,[rip+0x303c]        # 0x14000a028
   140006fec:	lea    rax,[rip+0x3051]        # 0x14000a044
   140006ff3:	mov    QWORD PTR [rsp+0x20],rax
   140006ff8:	call   QWORD PTR [rip+0x12d2]        # 0x1400082d0
   140006ffe:	mov    DWORD PTR [rip+0x3028],eax        # 0x14000a02c
   140007004:	add    rsp,0x38
   140007008:	ret    
   140007009:	int3   
   14000700a:	int3   
   14000700b:	int3   
   14000700c:	int3   
   14000700d:	int3   
   14000700e:	int3   
   14000700f:	int3   
   140007010:	mov    rax,rsp
   140007013:	mov    QWORD PTR [rax+0x8],rbx
   140007017:	mov    QWORD PTR [rax+0x10],rsi
   14000701b:	mov    QWORD PTR [rax+0x18],rdi
   14000701f:	mov    QWORD PTR [rax+0x20],r12
   140007023:	push   r14
   140007025:	sub    rsp,0x30
   140007029:	mov    rax,QWORD PTR gs:0x30
   140007032:	mov    rbx,QWORD PTR [rax+0x8]
   140007036:	xor    r14d,r14d
   140007039:	xor    eax,eax
   14000703b:	lock cmpxchg QWORD PTR [rip+0x36c4],rbx        # 0x14000a708
   140007044:	je     0x140007062
   140007046:	cmp    rax,rbx
   140007049:	jne    0x140007055
   14000704b:	mov    ebx,0x1
   140007050:	mov    r14d,ebx
   140007053:	jmp    0x140007067
   140007055:	mov    ecx,0x3e8
   14000705a:	call   QWORD PTR [rip+0x10e8]        # 0x140008148
   140007060:	jmp    0x140007039
   140007062:	mov    ebx,0x1
   140007067:	mov    eax,DWORD PTR [rip+0x36a3]        # 0x14000a710
   14000706d:	cmp    eax,ebx
   14000706f:	jne    0x14000707d
   140007071:	mov    ecx,0x1f
   140007076:	call   0x140007364
   14000707b:	jmp    0x1400070e6
   14000707d:	mov    eax,DWORD PTR [rip+0x368d]        # 0x14000a710
   140007083:	test   eax,eax
   140007085:	jne    0x1400070e0
   140007087:	mov    DWORD PTR [rip+0x3683],ebx        # 0x14000a710
   14000708d:	lea    r12,[rip+0x131c]        # 0x1400083b0
   140007094:	lea    rdi,[rip+0x12fd]        # 0x140008398
   14000709b:	mov    QWORD PTR [rsp+0x28],rdi
   1400070a0:	mov    DWORD PTR [rsp+0x20],eax
   1400070a4:	cmp    rdi,r12
   1400070a7:	jae    0x1400070d2
   1400070a9:	test   eax,eax
   1400070ab:	jne    0x1400070d6
   1400070ad:	mov    rsi,QWORD PTR [rdi]
   1400070b0:	test   rsi,rsi
   1400070b3:	je     0x1400070c7
   1400070b5:	mov    rcx,rsi
   1400070b8:	mov    rax,QWORD PTR [rip+0x12b1]        # 0x140008370
   1400070bf:	call   rax
   1400070c1:	call   rsi
   1400070c3:	mov    DWORD PTR [rsp+0x20],eax
   1400070c7:	add    rdi,0x8
   1400070cb:	mov    QWORD PTR [rsp+0x28],rdi
   1400070d0:	jmp    0x1400070a4
   1400070d2:	test   eax,eax
   1400070d4:	je     0x1400070e6
   1400070d6:	mov    eax,0xff
   1400070db:	jmp    0x1400071c7
   1400070e0:	mov    DWORD PTR [rip+0x2f3e],ebx        # 0x14000a024
   1400070e6:	mov    eax,DWORD PTR [rip+0x3624]        # 0x14000a710
   1400070ec:	cmp    eax,ebx
   1400070ee:	jne    0x14000710d
   1400070f0:	lea    rdx,[rip+0x1299]        # 0x140008390
   1400070f7:	lea    rcx,[rip+0x1282]        # 0x140008380
   1400070fe:	call   0x14000753a
   140007103:	mov    DWORD PTR [rip+0x3603],0x2        # 0x14000a710
   14000710d:	test   r14d,r14d
   140007110:	jne    0x14000711b
   140007112:	xor    eax,eax
   140007114:	xchg   QWORD PTR [rip+0x35ed],rax        # 0x14000a708
   14000711b:	cmp    QWORD PTR [rip+0x35f5],0x0        # 0x14000a718
   140007123:	je     0x140007153
   140007125:	lea    rcx,[rip+0x35ec]        # 0x14000a718
   14000712c:	call   0x1400073c0
   140007131:	test   eax,eax
   140007133:	je     0x140007153
   140007135:	mov    rbx,QWORD PTR [rip+0x35dc]        # 0x14000a718
   14000713c:	mov    rcx,rbx
   14000713f:	mov    rax,QWORD PTR [rip+0x122a]        # 0x140008370
   140007146:	call   rax
   140007148:	xor    r8d,r8d
   14000714b:	lea    edx,[r8+0x2]
   14000714f:	xor    ecx,ecx
   140007151:	call   rbx
   140007153:	mov    r8,QWORD PTR [rip+0x2ede]        # 0x14000a038
   14000715a:	mov    rdx,QWORD PTR [rip+0x2ecf]        # 0x14000a030
   140007161:	mov    ecx,DWORD PTR [rip+0x2ec1]        # 0x14000a028
   140007167:	call   0x1400021d0
   14000716c:	mov    DWORD PTR [rip+0x2eae],eax        # 0x14000a020
   140007172:	cmp    DWORD PTR [rip+0x2ec7],0x0        # 0x14000a040
   140007179:	jne    0x140007183
   14000717b:	mov    ecx,eax
   14000717d:	call   QWORD PTR [rip+0x113d]        # 0x1400082c0
   140007183:	cmp    DWORD PTR [rip+0x2e9a],0x0        # 0x14000a024
   14000718a:	jne    0x140007198
   14000718c:	call   QWORD PTR [rip+0x111e]        # 0x1400082b0
   140007192:	mov    eax,DWORD PTR [rip+0x2e88]        # 0x14000a020
   140007198:	jmp    0x1400071c7
   14000719a:	mov    DWORD PTR [rip+0x2e80],eax        # 0x14000a020
   1400071a0:	cmp    DWORD PTR [rip+0x2e99],0x0        # 0x14000a040
   1400071a7:	jne    0x1400071b2
   1400071a9:	mov    ecx,eax
   1400071ab:	call   QWORD PTR [rip+0x1107]        # 0x1400082b8
   1400071b1:	int3   
   1400071b2:	cmp    DWORD PTR [rip+0x2e6b],0x0        # 0x14000a024
   1400071b9:	jne    0x1400071c7
   1400071bb:	call   QWORD PTR [rip+0x10ef]        # 0x1400082b0
   1400071c1:	mov    eax,DWORD PTR [rip+0x2e59]        # 0x14000a020
   1400071c7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400071cc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400071d1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400071d6:	mov    r12,QWORD PTR [rsp+0x58]
   1400071db:	add    rsp,0x30
   1400071df:	pop    r14
   1400071e1:	ret    
   1400071e2:	int3   
   1400071e3:	int3   
   1400071e4:	int3   
   1400071e5:	int3   
   1400071e6:	int3   
   1400071e7:	int3   
   1400071e8:	int3   
   1400071e9:	int3   
   1400071ea:	int3   
   1400071eb:	int3   
   1400071ec:	int3   
   1400071ed:	int3   
   1400071ee:	int3   
   1400071ef:	int3   
   1400071f0:	sub    rsp,0x28
   1400071f4:	call   0x140007454
   1400071f9:	add    rsp,0x28
   1400071fd:	jmp    0x140007010
   140007202:	int3   
   140007203:	int3   
   140007204:	int3   
   140007205:	int3   
   140007206:	int3   
   140007207:	int3   
   140007208:	int3   
   140007209:	int3   
   14000720a:	int3   
   14000720b:	int3   
   14000720c:	int3   
   14000720d:	int3   
   14000720e:	int3   
   14000720f:	int3   
   140007210:	int3   
   140007211:	int3   
   140007212:	int3   
   140007213:	int3   
   140007214:	int3   
   140007215:	int3   
   140007216:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007220:	cmp    rcx,QWORD PTR [rip+0x2de1]        # 0x14000a008
   140007227:	jne    0x140007239
   140007229:	rol    rcx,0x10
   14000722d:	test   cx,0xffff
   140007232:	jne    0x140007235
   140007234:	ret    
   140007235:	ror    rcx,0x10
   140007239:	jmp    0x1400075b0
   14000723e:	int3   
   14000723f:	int3   
   140007240:	int3   
   140007241:	int3   
   140007242:	int3   
   140007243:	int3   
   140007244:	int3   
   140007245:	int3   
   140007246:	int3   
   140007247:	int3   
   140007248:	int3   
   140007249:	int3   
   14000724a:	int3   
   14000724b:	int3   
   14000724c:	int3   
   14000724d:	int3   
   14000724e:	int3   
   14000724f:	int3   
   140007250:	sub    rsp,0x28
   140007254:	mov    rax,QWORD PTR [rcx]
   140007257:	cmp    DWORD PTR [rax],0xe06d7363
   14000725d:	jne    0x140007282
   14000725f:	cmp    DWORD PTR [rax+0x18],0x4
   140007263:	jne    0x140007282
   140007265:	mov    ecx,DWORD PTR [rax+0x20]
   140007268:	lea    eax,[rcx-0x19930520]
   14000726e:	cmp    eax,0x2
   140007271:	jbe    0x14000727b
   140007273:	cmp    ecx,0x1994000
   140007279:	jne    0x140007282
   14000727b:	call   QWORD PTR [rip+0xfff]        # 0x140008280
   140007281:	int3   
   140007282:	xor    eax,eax
   140007284:	add    rsp,0x28
   140007288:	ret    
   140007289:	int3   
   14000728a:	int3   
   14000728b:	int3   
   14000728c:	int3   
   14000728d:	int3   
   14000728e:	int3   
   14000728f:	int3   
   140007290:	sub    rsp,0x28
   140007294:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140007250
   14000729b:	call   QWORD PTR [rip+0xe9f]        # 0x140008140
   1400072a1:	xor    eax,eax
   1400072a3:	add    rsp,0x28
   1400072a7:	ret    
   1400072a8:	int3   
   1400072a9:	int3   
   1400072aa:	int3   
   1400072ab:	int3   
   1400072ac:	int3   
   1400072ad:	int3   
   1400072ae:	jmp    QWORD PTR [rip+0x102c]        # 0x1400082e0
   1400072b4:	int3   
   1400072b5:	int3   
   1400072b6:	int3   
   1400072b7:	int3   
   1400072b8:	int3   
   1400072b9:	int3   
   1400072ba:	int3   
   1400072bb:	int3   
   1400072bc:	sub    rsp,0x18
   1400072c0:	xor    edx,edx
   1400072c2:	lea    rax,[rcx-0x1]
   1400072c6:	cmp    rax,0xfffffffffffffffd
   1400072ca:	ja     0x140007308
   1400072cc:	mov    eax,0x5a4d
   1400072d1:	cmp    WORD PTR [rcx],ax
   1400072d4:	jne    0x140007300
   1400072d6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400072d9:	jl     0x140007300
   1400072db:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400072e2:	jae    0x140007300
   1400072e4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400072e8:	add    rax,rcx
   1400072eb:	mov    QWORD PTR [rsp],rax
   1400072ef:	cmp    DWORD PTR [rax],0x4550
   1400072f5:	cmovne rax,rdx
   1400072f9:	mov    rdx,rax
   1400072fc:	mov    QWORD PTR [rsp],rax
   140007300:	jmp    0x140007308
   140007302:	xor    edx,edx
   140007304:	mov    QWORD PTR [rsp],rdx
   140007308:	mov    rax,rdx
   14000730b:	add    rsp,0x18
   14000730f:	ret    
   140007310:	int3   
   140007311:	int3   
   140007312:	int3   
   140007313:	int3   
   140007314:	int3   
   140007315:	int3   
   140007316:	int3   
   140007317:	int3   
   140007318:	rex push rbx
   14000731a:	sub    rsp,0x20
   14000731e:	mov    ebx,ecx
   140007320:	xor    ecx,ecx
   140007322:	call   QWORD PTR [rip+0xe10]        # 0x140008138
   140007328:	test   rax,rax
   14000732b:	je     0x140007355
   14000732d:	mov    rcx,rax
   140007330:	call   0x1400072bc
   140007335:	test   rax,rax
   140007338:	je     0x140007355
   14000733a:	mov    ecx,0x2
   14000733f:	cmp    WORD PTR [rax+0x5c],cx
   140007343:	jne    0x140007349
   140007345:	mov    eax,ecx
   140007347:	jmp    0x140007357
   140007349:	cmp    WORD PTR [rax+0x5c],0x3
   14000734e:	mov    eax,0x1
   140007353:	je     0x140007357
   140007355:	mov    eax,ebx
   140007357:	add    rsp,0x20
   14000735b:	pop    rbx
   14000735c:	ret    
   14000735d:	int3   
   14000735e:	int3   
   14000735f:	int3   
   140007360:	int3   
   140007361:	int3   
   140007362:	int3   
   140007363:	int3   
   140007364:	jmp    QWORD PTR [rip+0xf6e]        # 0x1400082d8
   14000736a:	int3   
   14000736b:	int3   
   14000736c:	int3   
   14000736d:	int3   
   14000736e:	int3   
   14000736f:	int3   
   140007370:	movsxd r8,DWORD PTR [rcx+0x3c]
   140007374:	xor    r9d,r9d
   140007377:	add    r8,rcx
   14000737a:	mov    r10,rdx
   14000737d:	movzx  eax,WORD PTR [r8+0x14]
   140007382:	movzx  r11d,WORD PTR [r8+0x6]
   140007387:	add    rax,0x18
   14000738b:	add    rax,r8
   14000738e:	test   r11d,r11d
   140007391:	je     0x1400073b1
   140007393:	mov    edx,DWORD PTR [rax+0xc]
   140007396:	cmp    r10,rdx
   140007399:	jb     0x1400073a5
   14000739b:	mov    ecx,DWORD PTR [rax+0x8]
   14000739e:	add    ecx,edx
   1400073a0:	cmp    r10,rcx
   1400073a3:	jb     0x1400073b3
   1400073a5:	inc    r9d
   1400073a8:	add    rax,0x28
   1400073ac:	cmp    r9d,r11d
   1400073af:	jb     0x140007393
   1400073b1:	xor    eax,eax
   1400073b3:	ret    
   1400073b4:	int3   
   1400073b5:	int3   
   1400073b6:	int3   
   1400073b7:	int3   
   1400073b8:	int3   
   1400073b9:	int3   
   1400073ba:	int3   
   1400073bb:	int3   
   1400073bc:	int3   
   1400073bd:	int3   
   1400073be:	int3   
   1400073bf:	int3   
   1400073c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400073c5:	push   rdi
   1400073c6:	sub    rsp,0x20
   1400073ca:	mov    rbx,rcx
   1400073cd:	lea    rdi,[rip+0xffffffffffff8c2c]        # 0x140000000
   1400073d4:	mov    rcx,rdi
   1400073d7:	call   0x140007420
   1400073dc:	test   eax,eax
   1400073de:	je     0x140007402
   1400073e0:	sub    rbx,rdi
   1400073e3:	mov    rdx,rbx
   1400073e6:	mov    rcx,rdi
   1400073e9:	call   0x140007370
   1400073ee:	test   rax,rax
   1400073f1:	je     0x140007402
   1400073f3:	mov    eax,DWORD PTR [rax+0x24]
   1400073f6:	shr    eax,0x1f
   1400073f9:	not    eax
   1400073fb:	and    eax,0x1
   1400073fe:	jmp    0x140007402
   140007400:	xor    eax,eax
   140007402:	mov    rbx,QWORD PTR [rsp+0x30]
   140007407:	add    rsp,0x20
   14000740b:	pop    rdi
   14000740c:	ret    
   14000740d:	int3   
   14000740e:	int3   
   14000740f:	int3   
   140007410:	int3   
   140007411:	int3   
   140007412:	int3   
   140007413:	int3   
   140007414:	int3   
   140007415:	int3   
   140007416:	int3   
   140007417:	int3   
   140007418:	int3   
   140007419:	int3   
   14000741a:	int3   
   14000741b:	int3   
   14000741c:	int3   
   14000741d:	int3   
   14000741e:	int3   
   14000741f:	int3   
   140007420:	mov    rax,rcx
   140007423:	mov    ecx,0x5a4d
   140007428:	cmp    WORD PTR [rax],cx
   14000742b:	je     0x140007430
   14000742d:	xor    eax,eax
   14000742f:	ret    
   140007430:	movsxd rcx,DWORD PTR [rax+0x3c]
   140007434:	add    rcx,rax
   140007437:	xor    eax,eax
   140007439:	cmp    DWORD PTR [rcx],0x4550
   14000743f:	jne    0x14000744d
   140007441:	mov    edx,0x20b
   140007446:	cmp    WORD PTR [rcx+0x18],dx
   14000744a:	sete   al
   14000744d:	ret    
   14000744e:	int3   
   14000744f:	int3   
   140007450:	int3   
   140007451:	int3   
   140007452:	int3   
   140007453:	int3   
   140007454:	mov    QWORD PTR [rsp+0x20],rbx
   140007459:	push   rbp
   14000745a:	mov    rbp,rsp
   14000745d:	sub    rsp,0x20
   140007461:	and    QWORD PTR [rbp+0x18],0x0
   140007466:	movabs rbx,0x2b992ddfa232
   140007470:	mov    rax,QWORD PTR [rip+0x2b91]        # 0x14000a008
   140007477:	cmp    rax,rbx
   14000747a:	jne    0x14000750f
   140007480:	lea    rcx,[rbp+0x18]
   140007484:	call   QWORD PTR [rip+0xc8e]        # 0x140008118
   14000748a:	mov    rax,QWORD PTR [rbp+0x18]
   14000748e:	mov    QWORD PTR [rbp+0x10],rax
   140007492:	call   QWORD PTR [rip+0xc90]        # 0x140008128
   140007498:	mov    eax,eax
   14000749a:	xor    QWORD PTR [rbp+0x10],rax
   14000749e:	call   QWORD PTR [rip+0xc7c]        # 0x140008120
   1400074a4:	mov    eax,eax
   1400074a6:	xor    QWORD PTR [rbp+0x10],rax
   1400074aa:	call   QWORD PTR [rip+0xc60]        # 0x140008110
   1400074b0:	mov    eax,eax
   1400074b2:	shl    rax,0x18
   1400074b6:	xor    QWORD PTR [rbp+0x10],rax
   1400074ba:	call   QWORD PTR [rip+0xc50]        # 0x140008110
   1400074c0:	mov    eax,eax
   1400074c2:	lea    rcx,[rbp+0x10]
   1400074c6:	xor    rax,QWORD PTR [rbp+0x10]
   1400074ca:	xor    rax,rcx
   1400074cd:	lea    rcx,[rbp+0x20]
   1400074d1:	mov    QWORD PTR [rbp+0x10],rax
   1400074d5:	call   QWORD PTR [rip+0xc55]        # 0x140008130
   1400074db:	mov    eax,DWORD PTR [rbp+0x20]
   1400074de:	movabs rcx,0xffffffffffff
   1400074e8:	shl    rax,0x20
   1400074ec:	xor    rax,QWORD PTR [rbp+0x20]
   1400074f0:	xor    rax,QWORD PTR [rbp+0x10]
   1400074f4:	and    rax,rcx
   1400074f7:	movabs rcx,0x2b992ddfa233
   140007501:	cmp    rax,rbx
   140007504:	cmove  rax,rcx
   140007508:	mov    QWORD PTR [rip+0x2af9],rax        # 0x14000a008
   14000750f:	mov    rbx,QWORD PTR [rsp+0x48]
   140007514:	not    rax
   140007517:	mov    QWORD PTR [rip+0x2af2],rax        # 0x14000a010
   14000751e:	add    rsp,0x20
   140007522:	pop    rbp
   140007523:	ret    
   140007524:	int3   
   140007525:	int3   
   140007526:	int3   
   140007527:	int3   
   140007528:	int3   
   140007529:	int3   
   14000752a:	int3   
   14000752b:	int3   
   14000752c:	int3   
   14000752d:	int3   
   14000752e:	int3   
   14000752f:	int3   
   140007530:	xor    eax,eax
   140007532:	ret    
   140007533:	int3   
   140007534:	int3   
   140007535:	int3   
   140007536:	int3   
   140007537:	int3   
   140007538:	int3   
   140007539:	int3   
   14000753a:	jmp    QWORD PTR [rip+0xd60]        # 0x1400082a0
   140007540:	int3   
   140007541:	int3   
   140007542:	int3   
   140007543:	int3   
   140007544:	int3   
   140007545:	int3   
   140007546:	jmp    QWORD PTR [rip+0xd4c]        # 0x140008298
   14000754c:	int3   
   14000754d:	int3   
   14000754e:	int3   
   14000754f:	int3   
   140007550:	int3   
   140007551:	int3   
   140007552:	int3   
   140007553:	int3   
   140007554:	int3   
   140007555:	int3   
   140007556:	int3   
   140007557:	int3   
   140007558:	int3   
   140007559:	int3   
   14000755a:	int3   
   14000755b:	int3   
   14000755c:	int3   
   14000755d:	int3   
   14000755e:	int3   
   14000755f:	int3   
   140007560:	ret    0x0
   140007563:	int3   
   140007564:	int3   
   140007565:	int3   
   140007566:	int3   
   140007567:	int3   
   140007568:	int3   
   140007569:	int3   
   14000756a:	int3   
   14000756b:	int3   
   14000756c:	rex push rbx
   14000756e:	sub    rsp,0x20
   140007572:	mov    rbx,rcx
   140007575:	xor    ecx,ecx
   140007577:	call   QWORD PTR [rip+0xbc3]        # 0x140008140
   14000757d:	mov    rcx,rbx
   140007580:	call   QWORD PTR [rip+0xb82]        # 0x140008108
   140007586:	call   QWORD PTR [rip+0xb74]        # 0x140008100
   14000758c:	mov    rcx,rax
   14000758f:	mov    edx,0xc0000409
   140007594:	add    rsp,0x20
   140007598:	pop    rbx
   140007599:	rex.W jmp QWORD PTR [rip+0xb58]        # 0x1400080f8
   1400075a0:	int3   
   1400075a1:	int3   
   1400075a2:	int3   
   1400075a3:	int3   
   1400075a4:	int3   
   1400075a5:	int3   
   1400075a6:	int3   
   1400075a7:	int3   
   1400075a8:	int3   
   1400075a9:	int3   
   1400075aa:	int3   
   1400075ab:	int3   
   1400075ac:	int3   
   1400075ad:	int3   
   1400075ae:	int3   
   1400075af:	int3   
   1400075b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400075b5:	sub    rsp,0x88
   1400075bc:	lea    rcx,[rip+0x2b3d]        # 0x14000a100
   1400075c3:	call   QWORD PTR [rip+0xd67]        # 0x140008330
   1400075c9:	mov    rax,QWORD PTR [rip+0x2c28]        # 0x14000a1f8
   1400075d0:	mov    QWORD PTR [rsp+0x48],rax
   1400075d5:	xor    r8d,r8d
   1400075d8:	lea    rdx,[rsp+0x50]
   1400075dd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400075e2:	call   QWORD PTR [rip+0xd68]        # 0x140008350
   1400075e8:	mov    QWORD PTR [rsp+0x40],rax
   1400075ed:	cmp    QWORD PTR [rsp+0x40],0x0
   1400075f3:	je     0x140007637
   1400075f5:	mov    QWORD PTR [rsp+0x38],0x0
   1400075fe:	lea    rax,[rsp+0x58]
   140007603:	mov    QWORD PTR [rsp+0x30],rax
   140007608:	lea    rax,[rsp+0x60]
   14000760d:	mov    QWORD PTR [rsp+0x28],rax
   140007612:	lea    rax,[rip+0x2ae7]        # 0x14000a100
   140007619:	mov    QWORD PTR [rsp+0x20],rax
   14000761e:	mov    r9,QWORD PTR [rsp+0x40]
   140007623:	mov    r8,QWORD PTR [rsp+0x48]
   140007628:	mov    rdx,QWORD PTR [rsp+0x50]
   14000762d:	xor    ecx,ecx
   14000762f:	call   QWORD PTR [rip+0xd13]        # 0x140008348
   140007635:	jmp    0x14000765a
   140007637:	mov    rax,QWORD PTR [rip+0x2b5a]        # 0x14000a198
   14000763e:	mov    rax,QWORD PTR [rax]
   140007641:	mov    QWORD PTR [rip+0x2bb0],rax        # 0x14000a1f8
   140007648:	mov    rax,QWORD PTR [rip+0x2b49]        # 0x14000a198
   14000764f:	add    rax,0x8
   140007653:	mov    QWORD PTR [rip+0x2b3e],rax        # 0x14000a198
   14000765a:	mov    rax,QWORD PTR [rip+0x2b97]        # 0x14000a1f8
   140007661:	mov    QWORD PTR [rip+0x2a08],rax        # 0x14000a070
   140007668:	mov    rax,QWORD PTR [rsp+0x90]
   140007670:	mov    QWORD PTR [rip+0x2b09],rax        # 0x14000a180
   140007677:	mov    DWORD PTR [rip+0x29df],0xc0000409        # 0x14000a060
   140007681:	mov    DWORD PTR [rip+0x29d9],0x1        # 0x14000a064
   14000768b:	mov    DWORD PTR [rip+0x29e3],0x3        # 0x14000a078
   140007695:	mov    eax,0x8
   14000769a:	imul   rax,rax,0x0
   14000769e:	lea    rcx,[rip+0x29db]        # 0x14000a080
   1400076a5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400076ad:	mov    eax,0x8
   1400076b2:	imul   rax,rax,0x1
   1400076b6:	lea    rcx,[rip+0x29c3]        # 0x14000a080
   1400076bd:	mov    rdx,QWORD PTR [rip+0x2944]        # 0x14000a008
   1400076c4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400076c8:	mov    eax,0x8
   1400076cd:	imul   rax,rax,0x2
   1400076d1:	lea    rcx,[rip+0x29a8]        # 0x14000a080
   1400076d8:	mov    rdx,QWORD PTR [rip+0x2931]        # 0x14000a010
   1400076df:	mov    QWORD PTR [rcx+rax*1],rdx
   1400076e3:	mov    eax,0x8
   1400076e8:	imul   rax,rax,0x0
   1400076ec:	mov    rcx,QWORD PTR [rip+0x2915]        # 0x14000a008
   1400076f3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400076f8:	mov    eax,0x8
   1400076fd:	imul   rax,rax,0x1
   140007701:	mov    rcx,QWORD PTR [rip+0x2908]        # 0x14000a010
   140007708:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000770d:	lea    rcx,[rip+0xccc]        # 0x1400083e0
   140007714:	call   0x14000756c
   140007719:	add    rsp,0x88
   140007720:	ret    
   140007721:	int3   
   140007722:	int3   
   140007723:	int3   
   140007724:	int3   
   140007725:	int3   
   140007726:	int3   
   140007727:	int3   
   140007728:	int3   
   140007729:	int3   
   14000772a:	int3   
   14000772b:	int3   
   14000772c:	int3   
   14000772d:	int3   
   14000772e:	int3   
   14000772f:	int3   
   140007730:	int3   
   140007731:	int3   
   140007732:	int3   
   140007733:	int3   
   140007734:	int3   
   140007735:	int3   
   140007736:	int3   
   140007737:	int3   
   140007738:	rex push rbx
   14000773a:	sub    rsp,0x20
   14000773e:	mov    ebx,ecx
   140007740:	call   0x14000775c
   140007745:	lea    rdx,[rbx+rbx*2]
   140007749:	shl    rdx,0x4
   14000774d:	add    rax,rdx
   140007750:	add    rsp,0x20
   140007754:	pop    rbx
   140007755:	ret    
   140007756:	int3   
   140007757:	int3   
   140007758:	int3   
   140007759:	int3   
   14000775a:	int3   
   14000775b:	int3   
   14000775c:	jmp    QWORD PTR [rip+0xb96]        # 0x1400082f8
   140007762:	int3   
   140007763:	int3   
   140007764:	int3   
   140007765:	int3   
   140007766:	int3   
   140007767:	int3   
   140007768:	sub    rsp,0x28
   14000776c:	mov    r8,QWORD PTR [r9+0x38]
   140007770:	mov    rcx,rdx
   140007773:	mov    rdx,r9
   140007776:	call   0x14000778c
   14000777b:	mov    eax,0x1
   140007780:	add    rsp,0x28
   140007784:	ret    
   140007785:	int3   
   140007786:	int3   
   140007787:	int3   
   140007788:	int3   
   140007789:	int3   
   14000778a:	int3   
   14000778b:	int3   
   14000778c:	rex push rbx
   14000778e:	sub    rsp,0x20
   140007792:	mov    r11d,DWORD PTR [r8]
   140007795:	mov    rbx,rdx
   140007798:	and    r11d,0xfffffff8
   14000779c:	mov    r9,rcx
   14000779f:	test   BYTE PTR [r8],0x4
   1400077a3:	mov    r10,rcx
   1400077a6:	je     0x1400077bb
   1400077a8:	mov    eax,DWORD PTR [r8+0x8]
   1400077ac:	movsxd r10,DWORD PTR [r8+0x4]
   1400077b0:	neg    eax
   1400077b2:	add    r10,rcx
   1400077b5:	movsxd rcx,eax
   1400077b8:	and    r10,rcx
   1400077bb:	movsxd rax,r11d
   1400077be:	mov    rdx,QWORD PTR [rax+r10*1]
   1400077c2:	mov    rax,QWORD PTR [rbx+0x10]
   1400077c6:	mov    ecx,DWORD PTR [rax+0x8]
   1400077c9:	add    rcx,QWORD PTR [rbx+0x8]
   1400077cd:	test   BYTE PTR [rcx+0x3],0xf
   1400077d1:	je     0x1400077df
   1400077d3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400077d7:	and    eax,0xfffffff0
   1400077da:	cdqe   
   1400077dc:	add    r9,rax
   1400077df:	xor    r9,rdx
   1400077e2:	mov    rcx,r9
   1400077e5:	add    rsp,0x20
   1400077e9:	pop    rbx
   1400077ea:	jmp    0x140007220
   1400077ef:	int3   
   1400077f0:	int3   
   1400077f1:	int3   
   1400077f2:	int3   
   1400077f3:	int3   
   1400077f4:	int3   
   1400077f5:	int3   
   1400077f6:	int3   
   1400077f7:	int3   
   1400077f8:	mov    rax,rsp
   1400077fb:	mov    QWORD PTR [rax+0x8],rbx
   1400077ff:	mov    QWORD PTR [rax+0x10],rbp
   140007803:	mov    QWORD PTR [rax+0x18],rsi
   140007807:	mov    QWORD PTR [rax+0x20],rdi
   14000780b:	push   r14
   14000780d:	sub    rsp,0x20
   140007811:	mov    rbx,QWORD PTR [r9+0x38]
   140007815:	mov    rsi,rdx
   140007818:	mov    r14,r8
   14000781b:	mov    rbp,rcx
   14000781e:	mov    rdx,r9
   140007821:	mov    rcx,rsi
   140007824:	mov    rdi,r9
   140007827:	lea    r8,[rbx+0x4]
   14000782b:	call   0x14000778c
   140007830:	mov    r11d,DWORD PTR [rbx+0x4]
   140007834:	mov    r8d,0x1
   14000783a:	mov    r10d,DWORD PTR [rbp+0x4]
   14000783e:	mov    eax,r11d
   140007841:	and    eax,r8d
   140007844:	and    r11d,0x2
   140007848:	and    r10b,0x66
   14000784c:	cmove  r11d,eax
   140007850:	test   r11d,r11d
   140007853:	je     0x140007869
   140007855:	mov    r9,rdi
   140007858:	mov    r8,r14
   14000785b:	mov    rdx,rsi
   14000785e:	mov    rcx,rbp
   140007861:	call   0x14000789a
   140007866:	mov    r8d,eax
   140007869:	mov    rbx,QWORD PTR [rsp+0x30]
   14000786e:	mov    eax,r8d
   140007871:	mov    rbp,QWORD PTR [rsp+0x38]
   140007876:	mov    rsi,QWORD PTR [rsp+0x40]
   14000787b:	mov    rdi,QWORD PTR [rsp+0x48]
   140007880:	add    rsp,0x20
   140007884:	pop    r14
   140007886:	ret    
   140007887:	int3   
   140007888:	int3   
   140007889:	int3   
   14000788a:	int3   
   14000788b:	int3   
   14000788c:	int3   
   14000788d:	int3   
   14000788e:	jmp    QWORD PTR [rip+0x9e4]        # 0x140008278
   140007894:	int3   
   140007895:	int3   
   140007896:	int3   
   140007897:	int3   
   140007898:	int3   
   140007899:	int3   
   14000789a:	jmp    QWORD PTR [rip+0x9b0]        # 0x140008250
   1400078a0:	int3   
   1400078a1:	int3   
   1400078a2:	int3   
   1400078a3:	int3   
   1400078a4:	int3   
   1400078a5:	int3   
   1400078a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400078b0:	jmp    rax
   1400078b2:	int3   
   1400078b3:	int3   
   1400078b4:	int3   
   1400078b5:	int3   
   1400078b6:	int3   
   1400078b7:	int3   
   1400078b8:	int3   
   1400078b9:	int3   
   1400078ba:	int3   
   1400078bb:	int3   
   1400078bc:	int3   
   1400078bd:	int3   
   1400078be:	int3   
   1400078bf:	int3   
   1400078c0:	int3   
   1400078c1:	int3   
   1400078c2:	int3   
   1400078c3:	int3   
   1400078c4:	int3   
   1400078c5:	int3   
   1400078c6:	lea    rcx,[rdx+0x30]
   1400078cd:	jmp    0x140001088
   1400078d2:	int3   
   1400078d3:	int3   
   1400078d4:	int3   
   1400078d5:	int3   
   1400078d6:	int3   
   1400078d7:	int3   
   1400078d8:	rex push rbp
   1400078da:	sub    rsp,0x20
   1400078de:	mov    rbp,rdx
   1400078e1:	mov    rax,QWORD PTR [rcx]
   1400078e4:	mov    rdx,rcx
   1400078e7:	mov    ecx,DWORD PTR [rax]
   1400078e9:	call   0x1400072ae
   1400078ee:	nop
   1400078ef:	add    rsp,0x20
   1400078f3:	pop    rbp
   1400078f4:	ret    
   1400078f5:	int3   
   1400078f6:	int3   
   1400078f7:	int3   
   1400078f8:	int3   
   1400078f9:	int3   
   1400078fa:	int3   
   1400078fb:	int3   
   1400078fc:	int3   
   1400078fd:	int3   
   1400078fe:	int3   
   1400078ff:	int3   
   140007900:	rex push rbp
   140007902:	sub    rsp,0x20
   140007906:	mov    rbp,rdx
   140007909:	mov    rax,QWORD PTR [rcx]
   14000790c:	xor    ecx,ecx
   14000790e:	cmp    DWORD PTR [rax],0xc0000005
   140007914:	sete   cl
   140007917:	mov    eax,ecx
   140007919:	add    rsp,0x20
   14000791d:	pop    rbp
   14000791e:	ret    
   14000791f:	int3   

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	(bad)  
   140008001:	xchg   ebx,eax
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	adc    al,0x93
   14000800a:	add    BYTE PTR [rax],al
   14000800c:	add    BYTE PTR [rax],al
   14000800e:	add    BYTE PTR [rax],al
   140008010:	es xchg ebx,eax
   140008012:	add    BYTE PTR [rax],al
   140008014:	add    BYTE PTR [rax],al
   140008016:	add    BYTE PTR [rax],al
   140008018:	xor    dl,BYTE PTR [rbx+0x0]
   14000801e:	add    BYTE PTR [rax],al
   140008020:	rex.X xchg ebx,eax
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	pop    rax
   140008029:	xchg   ebx,eax
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	outs   dx,BYTE PTR ds:[rsi]
   140008031:	xchg   ebx,eax
   140008032:	add    BYTE PTR [rax],al
   140008034:	add    BYTE PTR [rax],al
   140008036:	add    BYTE PTR [rax],al
   140008038:	fcomp  QWORD PTR [rax+0x0]
   14000803e:	add    BYTE PTR [rax],al
   140008040:	(bad)  
   140008041:	cwde   
   140008042:	add    BYTE PTR [rax],al
   140008044:	add    BYTE PTR [rax],al
   140008046:	add    BYTE PTR [rax],al
   140008048:	mov    edx,0x98
   14000804d:	add    BYTE PTR [rax],al
   14000804f:	add    BYTE PTR [rax+rbx*4+0x0],ch
   140008056:	add    BYTE PTR [rax],al
   140008058:	movabs al,ds:0x9000000000000098
   140008061:	cwde   
   140008062:	add    BYTE PTR [rax],al
   140008064:	add    BYTE PTR [rax],al
   140008066:	add    BYTE PTR [rax],al
   140008068:	test   BYTE PTR [rax+0x0],bl
   14000806e:	add    BYTE PTR [rax],al
   140008070:	jb     0x14000800a
   140008072:	add    BYTE PTR [rax],al
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rax],al
   140008078:	(bad)  
   140008079:	cwde   
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	add    BYTE PTR [rax],al
   14000807e:	add    BYTE PTR [rax],al
   140008080:	push   rax
   140008081:	cwde   
   140008082:	add    BYTE PTR [rax],al
   140008084:	add    BYTE PTR [rax],al
   140008086:	add    BYTE PTR [rax],al
   140008088:	cmp    bl,BYTE PTR [rax+0x0]
   14000808e:	add    BYTE PTR [rax],al
   140008090:	sub    al,0x98
   140008092:	add    BYTE PTR [rax],al
   140008094:	add    BYTE PTR [rax],al
   140008096:	add    BYTE PTR [rax],al
   140008098:	sbb    al,0x98
   14000809a:	add    BYTE PTR [rax],al
   14000809c:	add    BYTE PTR [rax],al
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	not    BYTE PTR [rdx+0x0]
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	clc    
   1400080a9:	xchg   edi,eax
   1400080aa:	add    BYTE PTR [rax],al
   1400080ac:	add    BYTE PTR [rax],al
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	out    0x97,al
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	add    BYTE PTR [rax],al
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	ficom  DWORD PTR [rdi+0x0]
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	(bad)  
   1400080c1:	xchg   edi,eax
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	add    BYTE PTR [rax],al
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	mov    esi,0x97
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rdi+rdx*4+0x0],ch
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	sahf   
   1400080d9:	xchg   edi,eax
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	xchg   edx,eax
   1400080e1:	xchg   edi,eax
   1400080e2:	add    BYTE PTR [rax],al
   1400080e4:	add    BYTE PTR [rax],al
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	adc    BYTE PTR [rdi+0x0],0x0
   1400080ef:	add    BYTE PTR [rdx-0x69],ch
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	add    BYTE PTR [rax],al
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	push   rsi
   1400080f9:	xchg   edi,eax
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	add    BYTE PTR [rax],al
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	rex.X xchg edi,eax
   140008102:	add    BYTE PTR [rax],al
   140008104:	add    BYTE PTR [rax],al
   140008106:	add    BYTE PTR [rax],al
   140008108:	es xchg edi,eax
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	add    BYTE PTR [rax],al
   14000810e:	add    BYTE PTR [rax],al
   140008110:	(bad)  
   140008111:	xchg   edi,eax
   140008112:	add    BYTE PTR [rax],al
   140008114:	add    BYTE PTR [rax],al
   140008116:	add    BYTE PTR [rax],al
   140008118:	cld    
   140008119:	xchg   esi,eax
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax],al
   140008120:	out    0x96,al
   140008122:	add    BYTE PTR [rax],al
   140008124:	add    BYTE PTR [rax],al
   140008126:	add    BYTE PTR [rax],al
   140008128:	rcl    BYTE PTR [rsi+0x0],1
   14000812e:	add    BYTE PTR [rax],al
   140008130:	mov    dh,0x96
   140008132:	add    BYTE PTR [rax],al
   140008134:	add    BYTE PTR [rax],al
   140008136:	add    BYTE PTR [rax],al
   140008138:	movabs ds:0x8400000000000096,al
   140008141:	xchg   esi,eax
   140008142:	add    BYTE PTR [rax],al
   140008144:	add    BYTE PTR [rax],al
   140008146:	add    BYTE PTR [rax],al
   140008148:	jl     0x1400080e0
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	add    BYTE PTR [rax],al
   14000814e:	add    BYTE PTR [rax],al
   140008150:	(bad)  
   140008151:	xchg   edx,eax
   140008152:	add    BYTE PTR [rax],al
   140008154:	add    BYTE PTR [rax],al
   140008156:	add    BYTE PTR [rax],al
   140008158:	fcom   QWORD PTR [rdx+0x0]
   14000815e:	add    BYTE PTR [rax],al
   140008160:	or     bl,BYTE PTR [rax+0x0]
   140008166:	add    BYTE PTR [rax],al
   140008168:	enter  0x92,0x0
	...
   140008178:	xchg   edx,eax
   140008179:	xchg   ebp,eax
   14000817a:	add    BYTE PTR [rax],al
   14000817c:	add    BYTE PTR [rax],al
   14000817e:	add    BYTE PTR [rax],al
   140008180:	test   al,0x95
   140008182:	add    BYTE PTR [rax],al
   140008184:	add    BYTE PTR [rax],al
   140008186:	add    BYTE PTR [rax],al
   140008188:	jle    0x14000811f
	...
   140008196:	add    BYTE PTR [rax],al
   140008198:	push   rdx
   140008199:	xchg   ebp,eax
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	pop    rsp
   1400081a1:	xchg   ebp,eax
   1400081a2:	add    BYTE PTR [rax],al
   1400081a4:	add    BYTE PTR [rax],al
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	push   0x95
   1400081ad:	add    BYTE PTR [rax],al
   1400081af:	add    BYTE PTR [rsi-0x6b],al
	...
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	pop    rsi
   1400081c1:	xchg   esi,eax
	...
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	loop   0x140008166
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	add    BYTE PTR [rax],al
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	lock xchg esp,eax
	...
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	(bad)  
   1400081e9:	xchg   ebp,eax
   1400081ea:	add    BYTE PTR [rax],al
   1400081ec:	add    BYTE PTR [rax],al
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	retf   0x95
   1400081f3:	add    BYTE PTR [rax],al
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    dh,ah
   1400081f9:	xchg   ebp,eax
	...
   140008206:	add    BYTE PTR [rax],al
   140008208:	sub    dl,BYTE PTR [rbp+0x0]
   14000820e:	add    BYTE PTR [rax],al
   140008210:	sbb    dl,BYTE PTR [rbp+0x0]
   140008216:	add    BYTE PTR [rax],al
   140008218:	or     dl,BYTE PTR [rbp+0x0]
   14000821e:	add    BYTE PTR [rax],al
   140008220:	outs   dx,DWORD PTR ds:[rsi]
   140008221:	add    BYTE PTR [rax],al
   140008223:	add    BYTE PTR [rax],al
   140008225:	add    BYTE PTR [rax],al
   140008227:	xor    BYTE PTR [rbx+0x0],0x0
   14000822b:	add    BYTE PTR [rax],al
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	xor    BYTE PTR [rax+rax*1+0x0],0x0
   140008234:	add    BYTE PTR [rax],al
   140008236:	add    BYTE PTR [rax+0x0],al
   14000823c:	add    BYTE PTR [rax],al
   14000823e:	add    BYTE PTR [rax],al
   140008240:	and    BYTE PTR [rcx+0x0],bl
   140008246:	add    BYTE PTR [rax],al
   140008248:	sub    bl,BYTE PTR [rcx+0x0]
   14000824e:	add    BYTE PTR [rax],al
   140008250:	js     0x1400081eb
   140008252:	add    BYTE PTR [rax],al
   140008254:	add    BYTE PTR [rax],al
   140008256:	add    BYTE PTR [rax],al
   140008258:	ds cdq 
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	add    BYTE PTR [rax],al
   14000825e:	add    BYTE PTR [rax],al
   140008260:	xor    al,0x99
   140008262:	add    BYTE PTR [rax],al
   140008264:	add    BYTE PTR [rax],al
   140008266:	add    BYTE PTR [rax],al
   140008268:	pop    rdx
   140008269:	cdq    
   14000826a:	add    BYTE PTR [rax],al
   14000826c:	add    BYTE PTR [rax],al
   14000826e:	add    BYTE PTR [rax],al
   140008270:	fs cdq 
   140008272:	add    BYTE PTR [rax],al
   140008274:	add    BYTE PTR [rax],al
   140008276:	add    BYTE PTR [rax],al
   140008278:	outs   dx,BYTE PTR ds:[rsi]
   140008279:	cdq    
   14000827a:	add    BYTE PTR [rax],al
   14000827c:	add    BYTE PTR [rax],al
   14000827e:	add    BYTE PTR [rax],al
   140008280:	push   rsp
   140008281:	xchg   esp,eax
   140008282:	add    BYTE PTR [rax],al
   140008284:	add    BYTE PTR [rax],al
   140008286:	add    BYTE PTR [rax],al
   140008288:	cmp    al,0x94
   14000828a:	add    BYTE PTR [rax],al
   14000828c:	add    BYTE PTR [rax],al
   14000828e:	add    BYTE PTR [rax],al
   140008290:	xor    dl,BYTE PTR [rax+rax*1+0x0]
   140008297:	add    BYTE PTR [rdx],bl
   140008299:	xchg   esp,eax
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	(bad)  
   1400082a1:	xchg   esp,eax
   1400082a2:	add    BYTE PTR [rax],al
   1400082a4:	add    BYTE PTR [rax],al
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	cli    
   1400082a9:	xchg   ebx,eax
   1400082aa:	add    BYTE PTR [rax],al
   1400082ac:	add    BYTE PTR [rax],al
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	lock xchg ebx,eax
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	add    BYTE PTR [rax],al
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	call   0x140008350
   1400082bd:	add    BYTE PTR [rax],al
   1400082bf:	add    al,ah
   1400082c1:	xchg   ebx,eax
   1400082c2:	add    BYTE PTR [rax],al
   1400082c4:	add    BYTE PTR [rax],al
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	(bad)  
   1400082c9:	xchg   ebx,eax
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	add    BYTE PTR [rax],al
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	mov    esp,0x93
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    BYTE PTR [rsi+0x93],ch
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rax+0x93],ah
   1400082e5:	add    BYTE PTR [rax],al
   1400082e7:	add    BYTE PTR [rdx+0x93],dl
   1400082ed:	add    BYTE PTR [rax],al
   1400082ef:	add    BYTE PTR [rax-0x67],dl
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	repnz cwde 
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	add    BYTE PTR [rax],al
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	add    BYTE PTR [rcx+0x0],bl
   140008306:	add    BYTE PTR [rax],al
   140008308:	or     al,0x99
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	add    BYTE PTR [rax],al
   140008310:	(bad)  
   140008311:	cdq    
	...
   14000831e:	add    BYTE PTR [rax],al
   140008320:	cmp    al,0x96
	...
   14000832e:	add    BYTE PTR [rax],al
   140008330:	push   0x94
   140008335:	add    BYTE PTR [rax],al
   140008337:	add    al,al
   140008339:	xchg   esp,eax
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	add    BYTE PTR [rax],al
   14000833e:	add    BYTE PTR [rax],al
   140008340:	stos   BYTE PTR es:[rdi],al
   140008341:	xchg   esp,eax
   140008342:	add    BYTE PTR [rax],al
   140008344:	add    BYTE PTR [rax],al
   140008346:	add    BYTE PTR [rax],al
   140008348:	xchg   esi,eax
   140008349:	xchg   esp,eax
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	add    BYTE PTR [rax],al
   14000834e:	add    BYTE PTR [rax],al
   140008350:	jl     0x1400082e6
	...
   14000835e:	add    BYTE PTR [rax],al
   140008360:	sbb    al,0x96
	...
   14000836e:	add    BYTE PTR [rax],al
   140008370:	(bad)  
   140008371:	jne    0x140008373
   140008373:	rex add DWORD PTR [rax],eax
   140008376:	add    BYTE PTR [rax],al
   140008378:	mov    al,0x78
   14000837a:	add    BYTE PTR [rax+0x1],al
	...
   140008385:	add    BYTE PTR [rax],al
   140008387:	add    al,al
   140008389:	outs   dx,DWORD PTR ds:[rsi]
   14000838a:	add    BYTE PTR [rax+0x1],al
	...
   14000839d:	add    BYTE PTR [rax],al
   14000839f:	add    al,ah
   1400083a1:	outs   dx,BYTE PTR ds:[rsi]
   1400083a2:	add    BYTE PTR [rax+0x1],al
   1400083a5:	add    BYTE PTR [rax],al
   1400083a7:	add    BYTE PTR [rax+0x1400072],dl
	...
   1400083b5:	add    BYTE PTR [rax],al
   1400083b7:	add    al,ah
   1400083b9:	outs   dx,BYTE PTR ds:[rsi]
   1400083ba:	add    BYTE PTR [rax],al
   1400083bc:	shr    BYTE PTR [rdi+0x0],0x0
   1400083c0:	lock jno 0x1400083c3
   1400083c3:	add    BYTE PTR [rax+0x72],dl
   1400083c6:	add    BYTE PTR [rax],al
   1400083c8:	nop
   1400083c9:	jb     0x1400083cb
   1400083cb:	add    BYTE PTR [rax],dh
   1400083cd:	jne    0x1400083cf
   1400083cf:	add    BYTE PTR [rax+0x75],ah
   1400083d2:	add    BYTE PTR [rax],al
   1400083d4:	mov    al,0x75
	...
   1400083de:	add    BYTE PTR [rax],al
   1400083e0:	(bad)  
   1400083e1:	movabs al,ds:0xa100000000014000
   1400083ea:	add    BYTE PTR [rax+0x1],al
	...
   1400083f5:	add    BYTE PTR [rax],al
   1400083f7:	add    BYTE PTR [rax+rax*1+0x5c],bl
   1400083fb:	add    BYTE PTR [rsi],ch
   1400083fd:	add    BYTE PTR [rax+rax*1+0x6d],bl
   140008401:	add    BYTE PTR [rcx+0x0],ah
   140008404:	imul   eax,DWORD PTR [rax],0x73006c
   14000840a:	ins    BYTE PTR es:[rdi],dx
   14000840b:	add    BYTE PTR [rdi+0x0],ch
   14000840e:	je     0x140008410
   140008410:	pop    rsp
   140008411:	add    BYTE PTR [rdi+0x0],dl
   140008414:	add    BYTE PTR [r9+0x0],cl
   140008418:	push   rsp
   140008419:	add    BYTE PTR [rsi+0x0],al
   14000841c:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140008420:	add    BYTE PTR cs:[rbp+0x0],al
   140008424:	pop    rax
   140008425:	add    BYTE PTR [rbp+0x0],al
   140008428:	pop    rsp
   140008429:	add    BYTE PTR [rip+0x7300],ah        # 0x14000f72f
   14000842f:	add    BYTE PTR [rax+rax*1+0x5c],bl
   140008433:	add    BYTE PTR [rdx],ch
   140008435:	add    BYTE PTR [rax+rax*1+0x6d],bl
   140008439:	add    BYTE PTR [rcx+0x0],ah
   14000843c:	imul   eax,DWORD PTR [rax],0x73006c
   140008442:	ins    BYTE PTR es:[rdi],dx
   140008443:	add    BYTE PTR [rdi+0x0],ch
   140008446:	je     0x140008448
   140008448:	pop    rsp
   140008449:	add    BYTE PTR [rdi+0x0],dl
   14000844c:	add    BYTE PTR [r9+0x0],cl
   140008450:	push   rsp
   140008451:	add    BYTE PTR [rsi+0x0],al
   140008454:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140008458:	add    BYTE PTR cs:[rbp+0x0],al
   14000845c:	pop    rax
   14000845d:	add    BYTE PTR [rbp+0x0],al
   140008460:	pop    rsp
   140008461:	add    BYTE PTR [rip+0x7300],ah        # 0x14000f767
   140008467:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14000846b:	add    BYTE PTR [rax],al
   14000846d:	add    BYTE PTR [rax],al
   14000846f:	add    BYTE PTR [rax+rax*1+0x0],bl
   140008473:	add    BYTE PTR [rax],al
   140008475:	add    BYTE PTR [rax],al
   140008477:	add    BYTE PTR [rbp+0x0],ch
   14000847a:	(bad)  
   14000847b:	add    BYTE PTR [rcx+0x0],ch
   14000847e:	ins    BYTE PTR es:[rdi],dx
   14000847f:	add    BYTE PTR [rbx+0x0],dh
   140008482:	ins    BYTE PTR es:[rdi],dx
   140008483:	add    BYTE PTR [rdi+0x0],ch
   140008486:	je     0x140008488
   140008488:	pop    rsp
   140008489:	add    BYTE PTR [rdi+0x0],dl
   14000848c:	add    BYTE PTR [r9+0x0],cl
   140008490:	push   rsp
   140008491:	add    BYTE PTR [rsi+0x0],al
   140008494:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140008498:	add    BYTE PTR cs:[rbp+0x0],al
   14000849c:	pop    rax
   14000849d:	add    BYTE PTR [rbp+0x0],al
   1400084a0:	add    BYTE PTR [rax],al
   1400084a2:	add    BYTE PTR [rax],al
   1400084a4:	or     al,BYTE PTR [rax]
   1400084a6:	add    BYTE PTR [rax],al
   1400084a8:	and    eax,0x25007300
   1400084ad:	add    BYTE PTR [rbx+0x0],dh
   1400084b0:	and    eax,0x25007300
   1400084b5:	add    BYTE PTR [rbx+0x0],dh
   1400084b8:	and    eax,0x25007300
   1400084bd:	add    BYTE PTR [rbx+0x0],dh
   1400084c0:	add    BYTE PTR [rax],al
   1400084c2:	add    BYTE PTR [rax],al
   1400084c4:	sub    al,BYTE PTR [rax]
   1400084c6:	add    BYTE PTR [rax],al
   1400084c8:	(bad)  
   1400084c9:	add    BYTE PTR [rax],al
   1400084cb:	add    BYTE PTR [rax],al
   1400084cd:	add    BYTE PTR [rax],al
   1400084cf:	add    BYTE PTR [rax+0x41],dl
   1400084d2:	push   rdx
   1400084d3:	push   rbx
   1400084d4:	rex.RB push r10
   1400084d6:	xor    al,BYTE PTR [rax]
   1400084d8:	jae    0x1400084da
   1400084da:	add    BYTE PTR [rax],al
   1400084dc:	jne    0x1400084de
   1400084de:	add    BYTE PTR [rax],al
   1400084e0:	jo     0x1400084e2
   1400084e2:	add    BYTE PTR [rax],al
   1400084e4:	jae    0x1400084e6
   1400084e6:	imul   eax,DWORD PTR [rax],0x0
   1400084ec:	je     0x1400084ee
   1400084ee:	add    BYTE PTR [rax],al
   1400084f0:	and    BYTE PTR [rax],al
   1400084f2:	add    BYTE PTR [rax],al
   1400084f4:	add    BYTE PTR [rax],al
   1400084f6:	add    BYTE PTR [rax],al
   1400084f8:	and    eax,0x20007300
   1400084fd:	add    BYTE PTR [rax],al
   1400084ff:	add    BYTE PTR [rax+rax*1+0x25],bh
   140008503:	add    BYTE PTR [rbx+0x0],dh
   140008506:	jl     0x140008508
   140008508:	add    BYTE PTR [rax],al
   14000850a:	add    BYTE PTR [rax],al
   14000850c:	and    BYTE PTR [rax],al
   14000850e:	or     DWORD PTR [rax],eax
   140008510:	add    BYTE PTR [rax],al
   140008512:	add    BYTE PTR [rax],al
   140008514:	and    eax,0x25000073
   140008519:	add    BYTE PTR [rbx+0x0],ah
   14000851c:	add    BYTE PTR [rax],al
   14000851e:	add    BYTE PTR [rax],al
   140008520:	(bad)  
   140008521:	add    BYTE PTR [rax],al
   140008523:	add    BYTE PTR [rdx],cl
   140008525:	add    BYTE PTR [rdx],cl
   140008527:	add    BYTE PTR [rax],al
   140008529:	add    BYTE PTR [rax],al
   14000852b:	add    BYTE PTR [rdx+0x55],al
   14000852e:	rex.RX
   14000852f:	rex.RX
   140008530:	rex.RB push r10
   140008532:	add    BYTE PTR [rax],al
   140008534:	add    BYTE PTR [rax],al
   140008536:	add    BYTE PTR [rax],al
   140008538:	ins    BYTE PTR es:[rdi],dx
   140008539:	add    BYTE PTR [rdi+0x0],ch
   14000853c:	movsxd eax,DWORD PTR [rax]
   14000853e:	(bad)  
   14000853f:	add    BYTE PTR [rax+rax*1+0x68],ch
   140008543:	add    BYTE PTR [rdi+0x0],ch
   140008546:	jae    0x140008548
   140008548:	je     0x14000854a
   14000854a:	add    BYTE PTR [rax],al
   14000854c:	add    BYTE PTR [rax],al
   14000854e:	add    BYTE PTR [rax],al
   140008550:	and    BYTE PTR [rax],al
   140008552:	pop    rsp
   140008553:	add    BYTE PTR [rdi],ch
   140008555:	add    BYTE PTR [rbx+0x0],bl
   140008558:	pop    rbp
   140008559:	add    BYTE PTR [rdx],bh
   14000855b:	add    BYTE PTR [rax+rax*1+0x3c],bh
   14000855f:	add    BYTE PTR [rsi],bh
   140008561:	add    BYTE PTR [rbx],ch
   140008563:	add    BYTE PTR [rip+0x2c003b00],bh        # 0x16c00c069
   140008569:	add    BYTE PTR [rdi],bh
   14000856b:	add    BYTE PTR [rax+rax*1],ah
   14000856e:	and    eax,DWORD PTR [rax]
   140008570:	sub    BYTE PTR [rax],al
   140008572:	sub    DWORD PTR [rax],eax
   140008574:	and    DWORD PTR [rax],eax
   140008576:	add    BYTE PTR [rsi+0x0],bl
   14000857a:	and    al,BYTE PTR [rax]
   14000857c:	(bad)  
   14000857d:	add    BYTE PTR [rbx+0x0],bh
   140008580:	jge    0x140008582
   140008582:	sub    al,BYTE PTR [rax]
   140008584:	and    eax,0x2e000000
   140008589:	add    BYTE PTR [rax],al
   14000858b:	add    BYTE PTR [rax],al
   14000858d:	add    BYTE PTR [rax],al
   14000858f:	add    BYTE PTR [rax+rax*1+0x5c],bl
   140008593:	add    BYTE PTR [rip+0x7300],ah        # 0x14000f899
   140008599:	add    BYTE PTR [rax],al
   14000859b:	add    BYTE PTR [rax],al
   14000859d:	add    BYTE PTR [rax],al
   14000859f:	add    BYTE PTR [rcx+0x0],cl
   1400085a2:	push   rax
   1400085a3:	add    BYTE PTR [rbx+0x0],al
   1400085a6:	and    al,0x0
	...
   1400085b0:	pop    rsp
   1400085b1:	add    BYTE PTR [rax+rax*1+0x25],bl
   1400085b5:	add    BYTE PTR [rbx+0x0],dh
   1400085b8:	pop    rsp
   1400085b9:	add    BYTE PTR [rip+0x7300],ah        # 0x14000f8bf
   1400085bf:	add    BYTE PTR [rax+rax*1+0x56],bl
   1400085c3:	add    BYTE PTR [rcx+0x0],ah
   1400085c6:	jb     0x1400085c8
   1400085c8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400085cc:	ins    BYTE PTR es:[rdi],dx
   1400085cd:	add    BYTE PTR [rbp+0x0],ah
   1400085d0:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400085d4:	data16 add BYTE PTR [rdi+0x0],ch
   1400085d8:	pop    rsp
   1400085d9:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400085dd:	add    BYTE PTR [rcx+0x0],ah
   1400085e0:	outs   dx,BYTE PTR ds:[rsi]
   1400085e1:	add    BYTE PTR [rbx+0x0],dh
   1400085e4:	ins    BYTE PTR es:[rdi],dx
   1400085e5:	add    BYTE PTR [rcx+0x0],ah
   1400085e8:	je     0x1400085ea
   1400085ea:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140008600:	pop    rsp
   140008601:	add    BYTE PTR [rbx+0x0],dl
   140008604:	je     0x140008606
   140008606:	jb     0x140008608
   140008608:	imul   eax,DWORD PTR [rax],0x67006e
   14000860e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140008612:	ins    BYTE PTR es:[rdi],dx
   140008613:	add    BYTE PTR [rbp+0x0],ah
   140008616:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000861a:	data16 add BYTE PTR [rdi+0x0],ch
   14000861e:	pop    rsp
   14000861f:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400b625
   140008625:	add    BYTE PTR [rax+0x0],bh
   140008628:	and    eax,0x34003000
   14000862d:	add    BYTE PTR [rax+0x0],bh
   140008630:	pop    rsp
   140008631:	add    BYTE PTR [rcx+0x0],cl
   140008634:	outs   dx,BYTE PTR ds:[rsi]
   140008635:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008639:	add    BYTE PTR [rdx+0x0],dh
   14000863c:	outs   dx,BYTE PTR ds:[rsi]
   14000863d:	add    BYTE PTR [rcx+0x0],ah
   140008640:	ins    BYTE PTR es:[rdi],dx
   140008641:	add    BYTE PTR [rsi+0x0],cl
   140008644:	(bad)  
   140008645:	add    BYTE PTR [rbp+0x0],ch
   140008648:	add    BYTE PTR gs:[rax],al
   14000864b:	add    BYTE PTR [rax],al
   14000864d:	add    BYTE PTR [rax],al
   14000864f:	add    BYTE PTR [rsi],ch
   140008651:	add    BYTE PTR [rbp+0x0],al
   140008654:	pop    rax
   140008655:	add    BYTE PTR [rbp+0x0],al
	...
   140008660:	and    eax,0x20007300
   140008665:	add    BYTE PTR [rip+0x7300],ah        # 0x14000f96b
   14000866b:	add    BYTE PTR [rdi],ch
   14000866d:	add    BYTE PTR [rax],al
   14000866f:	add    BYTE PTR [rax+0x41],dl
   140008672:	push   rdx
   140008673:	push   rbx
   140008674:	rex.RB push r10
   140008676:	xor    al,BYTE PTR [rax]
   140008678:	sub    eax,0x2f00
   14000867d:	add    BYTE PTR [rax],al
   14000867f:	add    BYTE PTR [rdx],ah
   140008681:	add    eax,0x11993
   140008686:	add    BYTE PTR [rax],al
   140008688:	jl     0x140008614
	...
   140008692:	add    BYTE PTR [rax],al
   140008694:	add    eax,DWORD PTR [rax]
   140008696:	add    BYTE PTR [rax],al
   140008698:	mov    BYTE PTR [rdx+0x200000],cl
	...
   1400086b2:	add    BYTE PTR [rax],al
   1400086b4:	pushf  
   1400086b5:	cmp    BYTE PTR [rdi+0x55],bl
   1400086bb:	add    BYTE PTR [rdx],al
   1400086bd:	add    BYTE PTR [rax],al
   1400086bf:	add    BYTE PTR [rax+rax*1],ah
   1400086c2:	add    BYTE PTR [rax],al
   1400086c4:	mov    al,0x87
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	mov    al,0x75
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	add    BYTE PTR [rax],al
   1400086ce:	add    BYTE PTR [rax],al
   1400086d0:	pushf  
   1400086d1:	cmp    BYTE PTR [rdi+0x55],bl
   1400086d7:	add    BYTE PTR [rip+0xffffffffe0000000],cl        # 0x1200086dd
   1400086dd:	add    DWORD PTR [rax],eax
   1400086df:	add    al,ch
   1400086e1:	xchg   DWORD PTR [rax],eax
   1400086e3:	add    al,ch
   1400086e5:	jne    0x1400086e7
	...
   14000870f:	add    BYTE PTR [rax+0x0],ah
	...
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    BYTE PTR [rax],cl
   140008769:	movabs al,ds:0x14000
	...
   14000877e:	add    BYTE PTR [rax],al
   140008780:	jo     0x140008705
   140008782:	add    BYTE PTR [rax+0x1],al
   140008785:	add    BYTE PTR [rax],al
   140008787:	add    BYTE PTR [rax-0x7d],bh
   14000878a:	add    BYTE PTR [rax+0x1],al
   14000878d:	add    BYTE PTR [rax],al
   14000878f:	add    BYTE PTR [rax+0x1400083],bh
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rax],cl
	...
   1400087a1:	xor    eax,0x0
	...
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	push   rdx
   1400087b1:	push   rbx
   1400087b2:	rex.R push rbx
   1400087b4:	int3   
   1400087b5:	adc    al,bh
   1400087b7:	loope  0x1400087f6
   1400087b9:	rex.WR (bad) 
   1400087bb:	rex.WX sub QWORD PTR [rsi-0x14],0x57b55e01
   1400087c3:	mov    eax,DWORD PTR [rcx]
   1400087c5:	add    BYTE PTR [rax],al
   1400087c7:	add    BYTE PTR [rdi+0x61],dh
   1400087ca:	imul   esi,DWORD PTR [rsi+riz*2+0x6f],0x64702e72
   1400087d2:	(bad)  
	...
   1400087e7:	add    BYTE PTR [rdi+0x43],al
   1400087ea:	push   rsp
   1400087eb:	rex.WR add BYTE PTR [rax],r10b
   1400087ee:	add    BYTE PTR [rax],al
   1400087f0:	movabs al,ds:0x747865742e000068
   1400087f9:	and    al,0x6d
   1400087fb:	outs   dx,BYTE PTR ds:[rsi]
   1400087fc:	add    BYTE PTR [rax],al
   1400087fe:	add    BYTE PTR [rax],al
   140008800:	movabs al,ds:0x2e00000012000078
   140008809:	je     0x140008870
   14000880b:	js     0x140008881
   14000880d:	and    al,0x6d
   14000880f:	outs   dx,BYTE PTR ds:[rsi]
   140008810:	and    al,0x30
   140008812:	xor    BYTE PTR [rax],al
   140008814:	sar    BYTE PTR [rax+0x0],0x0
   140008818:	(bad)  
   140008819:	add    BYTE PTR [rax],al
   14000881b:	add    BYTE PTR [rsi],ch
   14000881d:	je     0x140008884
   14000881f:	js     0x140008895
   140008821:	and    al,0x78
   140008823:	add    BYTE PTR [rax],al
   140008825:	add    BYTE PTR [rax],0x0
   140008828:	jo     0x14000882d
   14000882a:	add    BYTE PTR [rax],al
   14000882c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140008835:	add    BYTE PTR [rax],al
   140008837:	add    BYTE PTR [rax-0x7d],dh
   14000883a:	add    BYTE PTR [rax],al
   14000883c:	adc    BYTE PTR [rax],al
   14000883e:	add    BYTE PTR [rax],al
   140008840:	xor    BYTE PTR cs:[rax],dh
   140008843:	movsxd esp,DWORD PTR [rsi+0x67]
   140008846:	add    BYTE PTR [rax],al
   140008848:	add    BYTE PTR [rbx+0x80000],0x0
   14000884f:	add    BYTE PTR [rsi],ch
   140008851:	rex.XB push r10
   140008853:	push   rsp
   140008854:	and    al,0x58
   140008856:	rex.XB
   140008857:	add    BYTE PTR [r8],al
   14000885a:	add    BYTE PTR [rax],al
   14000885c:	mov    BYTE PTR [rbx+0x80000],al
   140008862:	add    BYTE PTR [rax],al
   140008864:	cs rex.XB push r10
   140008867:	push   rsp
   140008868:	and    al,0x58
   14000886a:	rex.XB
   14000886b:	rex.B
   14000886c:	add    BYTE PTR [r8],al
   14000886f:	add    BYTE PTR [rax+0x8000083],dl
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rsi],ch
   140008879:	rex.XB push r10
   14000887b:	push   rsp
   14000887c:	and    al,0x58
   14000887e:	rex.XB pop r10
   140008880:	add    BYTE PTR [rax],al
   140008882:	add    BYTE PTR [rax],al
   140008884:	cwde   
   140008885:	add    DWORD PTR [rax],0x0
   140008888:	or     BYTE PTR [rax],al
   14000888a:	add    BYTE PTR [rax],al
   14000888c:	cs rex.XB push r10
   14000888f:	push   rsp
   140008890:	and    al,0x58
   140008892:	rex.WB
   140008893:	add    BYTE PTR [r8],al
   140008896:	add    BYTE PTR [rax],al
   140008898:	movabs al,ds:0x2e00000008000083
   1400088a1:	rex.XB push r10
   1400088a3:	push   rsp
   1400088a4:	and    al,0x58
   1400088a6:	rex.WB
   1400088a7:	rex.B
   1400088a8:	add    BYTE PTR [r8],al
   1400088ab:	add    BYTE PTR [rax+0x8000083],ch
   1400088b1:	add    BYTE PTR [rax],al
   1400088b3:	add    BYTE PTR [rsi],ch
   1400088b5:	rex.XB push r10
   1400088b7:	push   rsp
   1400088b8:	and    al,0x58
   1400088ba:	rex.WB pop r9
   1400088bc:	add    BYTE PTR [rax],al
   1400088be:	add    BYTE PTR [rax],al
   1400088c0:	mov    al,0x83
   1400088c2:	add    BYTE PTR [rax],al
   1400088c4:	or     BYTE PTR [rax],al
   1400088c6:	add    BYTE PTR [rax],al
   1400088c8:	cs rex.XB push r10
   1400088cb:	push   rsp
   1400088cc:	and    al,0x58
   1400088ce:	rex.WB pop r10
   1400088d0:	add    BYTE PTR [rax],al
   1400088d2:	add    BYTE PTR [rax],al
   1400088d4:	mov    eax,0x20000083
   1400088d9:	add    BYTE PTR [rax],al
   1400088db:	add    BYTE PTR [rsi],ch
   1400088dd:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   1400088e5:	add    BYTE PTR [rax],al
   1400088e7:	add    al,ah
   1400088e9:	add    DWORD PTR [rax],0x0
   1400088ec:	rol    BYTE PTR [rbx],1
   1400088ee:	add    BYTE PTR [rax],al
   1400088f0:	cs jb  0x140008957
   1400088f3:	(bad)  
   1400088f4:	je     0x140008957
   1400088f6:	add    BYTE PTR [rax],al
   1400088f8:	mov    al,0x87
   1400088fa:	add    BYTE PTR [rax],al
   1400088fc:	sbb    BYTE PTR [rdx],al
   1400088fe:	add    BYTE PTR [rax],al
   140008900:	cs jb  0x140008967
   140008903:	(bad)  
   140008904:	je     0x140008967
   140008906:	and    al,0x7a
   140008908:	jp     0x140008984
   14000890a:	fs (bad) 
   14000890c:	add    BYTE PTR [eax],al
   14000890f:	add    al,cl
   140008911:	mov    DWORD PTR [rax],eax
   140008913:	add    BYTE PTR [rsp+rax*1+0x782e0000],bl
   14000891a:	fs (bad) 
   14000891c:	je     0x14000897f
   14000891e:	add    BYTE PTR [rax],al
   140008920:	mov    es,WORD PTR fs:[rax]
   140008923:	add    ah,bl
   140008925:	add    BYTE PTR [rax],al
   140008927:	add    BYTE PTR [rsi],ch
   140008929:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140008931:	add    BYTE PTR [rax],al
   140008933:	add    BYTE PTR [rax-0x71],al
   140008936:	add    BYTE PTR [rax],al
   140008938:	adc    al,0x0
   14000893a:	add    BYTE PTR [rax],al
   14000893c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    BYTE PTR [rax-0x71],bl
   14000894a:	add    BYTE PTR [rax],al
   14000894c:	jo     0x140008951
   14000894e:	add    BYTE PTR [rax],al
   140008950:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140008959:	add    BYTE PTR [rax],al
   14000895b:	add    al,cl
   14000895d:	xchg   edx,eax
   14000895e:	add    BYTE PTR [rax],al
   140008960:	mov    BYTE PTR [rsi],0x0
   140008963:	add    BYTE PTR [rsi],ch
   140008965:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000896d:	add    BYTE PTR [rax],al
   14000896f:	add    BYTE PTR [rax],al
   140008971:	movabs al,ds:0x642e000000200000
   14000897a:	(bad)  
   14000897b:	je     0x1400089de
   14000897d:	add    BYTE PTR [rax],al
   14000897f:	add    BYTE PTR [rax],ah
   140008981:	movabs al,ds:0x622e000007040000
   14000898a:	jae    0x1400089ff
   14000898c:	add    BYTE PTR [rax],al
   14000898e:	add    BYTE PTR [rax],al
   140008990:	add    BYTE PTR [rax+0x4740000],dh
   140008996:	add    BYTE PTR [rax],al
   140008998:	cs jo  0x1400089ff
   14000899b:	(bad)  
   14000899c:	je     0x1400089ff
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	add    al,al
   1400089a2:	add    BYTE PTR [rax],al
   1400089a4:	lock add BYTE PTR [rax],al
   1400089a7:	add    BYTE PTR [rsi],ch
   1400089a9:	jb     0x140008a1e
   1400089ab:	jb     0x140008a10
   1400089ad:	and    al,0x30
   1400089af:	xor    DWORD PTR [rax],eax
   1400089b1:	add    BYTE PTR [rax],al
   1400089b3:	add    al,dh
   1400089b5:	rol    BYTE PTR [rax],0x0
   1400089b8:	rex.W (bad) 
   1400089ba:	add    BYTE PTR [rax],al
   1400089bc:	cs jb  0x140008a32
   1400089bf:	jb     0x140008a24
   1400089c1:	and    al,0x30
   1400089c3:	xor    al,BYTE PTR [rax]
   1400089c5:	add    BYTE PTR [rax],al
   1400089c7:	add    BYTE PTR [rcx],al
   1400089c9:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e429bcf
   1400089cf:	jo     0x1400089de
   1400089d1:	(bad)  
   1400089d2:	or     al,0x50
   1400089d4:	or     esi,DWORD PTR [rax]
   1400089d6:	add    BYTE PTR [rax],al
   1400089d8:	add    DWORD PTR [rsi],eax
   1400089da:	add    al,BYTE PTR [rax]
   1400089dc:	(bad)  
   1400089dd:	xor    al,BYTE PTR [rdx]
   1400089df:	xor    BYTE PTR [rcx],al
   1400089e1:	or     al,BYTE PTR [rax+rax*1]
   1400089e4:	or     dh,BYTE PTR [rsi+rax*1]
   1400089e7:	add    BYTE PTR [rdx],cl
   1400089e9:	xor    al,BYTE PTR [rsi]
   1400089eb:	jo     0x140008a06
   1400089ed:	xor    cl,BYTE PTR [rbx]
   1400089ef:	add    BYTE PTR [rcx],ah
   1400089f1:	fs push rsi
   1400089f3:	add    DWORD PTR [rcx],esp
   1400089f5:	xor    al,0x55
   1400089f7:	add    DWORD PTR [rcx],esp
   1400089f9:	add    DWORD PTR [rsi+0x1],ecx
   1400089fc:	adc    dh,al
   1400089fe:	adc    al,ah
   140008a00:	(bad)  
   140008a01:	ror    BYTE PTR [rax+rsi*2],0xb
   140008a05:	push   rax
   140008a06:	add    BYTE PTR [rax],al
   140008a08:	push   0x60000077
   140008a0d:	or     al,BYTE PTR [rax]
   140008a0f:	add    BYTE PTR [rcx],al
   140008a11:	sbb    al,0xc
   140008a13:	add    BYTE PTR [rsp+riz*2],bl
   140008a16:	(bad)  
   140008a17:	add    BYTE PTR [rsp+rdx*2],bl
   140008a1a:	or     eax,0xc341c00
   140008a1f:	add    BYTE PTR [rdx+rdx*2],bl
   140008a22:	sbb    al,dh
   140008a24:	(bad)  
   140008a25:	loopne 0x140008a3b
   140008a27:	rcl    BYTE PTR [rdx],1
   140008a29:	rcl    BYTE PTR [rax],0x70
   140008a2c:	add    DWORD PTR [rcx],ebx
   140008a2e:	or     al,BYTE PTR [rax]
   140008a30:	sbb    esp,eax
   140008a32:	or     eax,DWORD PTR [rax]
   140008a34:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140008a38:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140008a3c:	sbb    DWORD PTR [rax+rcx*1],esi
   140008a3f:	add    BYTE PTR [rcx],bl
   140008a41:	push   rdx
   140008a42:	adc    eax,0x81201e0
   140008a47:	add    BYTE PTR [rdx],dl
   140008a49:	push   rsp
   140008a4a:	(bad)  
   140008a4b:	add    BYTE PTR [rdx],dl
   140008a4d:	xor    al,0xd
   140008a4f:	add    BYTE PTR [rdx],dl
   140008a51:	jb     0x140008a61
   140008a53:	loopne 0x140008a61
   140008a55:	jo     0x140008a62
   140008a57:	(bad)  
   140008a58:	sbb    DWORD PTR [rdi],esi
   140008a5a:	or     DWORD PTR [rax],eax
   140008a5c:	es fs jl 0x140008a61
   140008a60:	and    dh,BYTE PTR [rdx+rdi*2]
   140008a63:	add    DWORD PTR [rip+0x7017601],edx        # 0x14702006a
   140008a69:	loopne 0x140008a70
   140008a6b:	jo     0x140008a71
   140008a6d:	push   rax
   140008a6e:	add    BYTE PTR [rax],al
   140008a70:	clc    
   140008a71:	ja     0x140008a73
   140008a73:	add    BYTE PTR [rax-0x5dffff7a],al
   140008a79:	or     eax,DWORD PTR [rax]
   140008a7b:	add    bh,bh
   140008a7d:	(bad)  
   140008a7e:	(bad)  
   140008a7f:	inc    esi
   140008a81:	js     0x140008a83
   140008a83:	add    BYTE PTR [rax],al
   140008a85:	add    BYTE PTR [rax],al
   140008a87:	add    al,dl
   140008a89:	and    DWORD PTR [rax],eax
   140008a8b:	add    bh,bh
   140008a8d:	(bad)  
   140008a8e:	(bad)  
   140008a8f:	dec    DWORD PTR [rax+0x22]
   140008a95:	add    BYTE PTR [rax],al
   140008a97:	add    BYTE PTR [rdi],bh
   140008a99:	and    eax,DWORD PTR [rax]
   140008a9b:	add    bh,bh
   140008a9d:	(bad)  
   140008a9e:	(bad)  
   140008a9f:	inc    DWORD PTR [rcx]
   140008aa1:	adc    cl,BYTE PTR [rax]
   140008aa3:	add    BYTE PTR [rdx],dl
   140008aa5:	push   rsp
   140008aa6:	or     al,BYTE PTR [rax]
   140008aa8:	adc    dh,BYTE PTR [rax+rcx*1]
   140008aab:	add    BYTE PTR [rdx],dl
   140008aad:	xor    cl,BYTE PTR [rsi]
   140008aaf:	loopne 0x140008abd
   140008ab1:	jo     0x140008abe
   140008ab3:	(bad)  
   140008ab4:	add    DWORD PTR [rbx],ebx
   140008ab6:	(bad)  
   140008ab7:	add    BYTE PTR [rbx],bl
   140008ab9:	(bad)  
   140008aba:	(bad)  
   140008abb:	loopne 0x140008ad2
   140008abd:	rcl    BYTE PTR [rbx],0x70
   140008ac0:	adc    ah,BYTE PTR [rax+0x11]
   140008ac3:	push   rax
   140008ac4:	adc    BYTE PTR [rax],dh
   140008ac6:	add    BYTE PTR [rax],al
   140008ac8:	add    DWORD PTR [rsi],eax
   140008aca:	add    al,BYTE PTR [rax]
   140008acc:	(bad)  
   140008acd:	jb     0x140008ad1
   140008acf:	xor    BYTE PTR [rcx],al
   140008ad1:	clts   
   140008ad3:	add    BYTE PTR [rdi],cl
   140008ad5:	or     al,BYTE PTR fs:[rax]
   140008ad8:	sysenter 
   140008ada:	or     DWORD PTR [rax],eax
   140008adc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140008adf:	jo     0x140008ae2
   140008ae1:	or     al,BYTE PTR [rax+rax*1]
   140008ae4:	or     dh,BYTE PTR [rax+rcx*1]
   140008ae7:	add    BYTE PTR [rdx],cl
   140008ae9:	xor    al,BYTE PTR [rsi]
   140008aeb:	jo     0x140008b06
   140008aed:	sbb    DWORD PTR [rdx],eax
   140008aef:	add    BYTE PTR [rdi],al
   140008af1:	add    DWORD PTR [rbx],ebp
   140008af3:	add    BYTE PTR [rax+0x77],ch
   140008af6:	add    BYTE PTR [rax],al
   140008af8:	rex add DWORD PTR [rax],eax
   140008afb:	add    BYTE PTR [rcx],al
   140008afd:	(bad)  
   140008afe:	or     BYTE PTR [rax],al
   140008b00:	(bad)  
   140008b01:	push   rsp
   140008b02:	(bad)  
   140008b03:	add    BYTE PTR [rdi],dl
   140008b05:	xor    al,0xd
   140008b07:	add    BYTE PTR [rdi],dl
   140008b09:	jb     0x140008b1e
   140008b0b:	loopne 0x140008b1e
   140008b0d:	jo     0x140008b1f
   140008b0f:	(bad)  
   140008b10:	add    DWORD PTR [rsp+rax*1],edx
   140008b13:	add    BYTE PTR [rax+rbp*2],dl
   140008b16:	add    al,BYTE PTR [rax]
   140008b18:	(bad)  
   140008b19:	push   rdx
   140008b1a:	add    dh,BYTE PTR [rax]
   140008b1c:	add    DWORD PTR [rsp+rcx*1],ebx
   140008b1f:	add    BYTE PTR [rsp+riz*2],bl
   140008b22:	or     al,0x0
   140008b24:	sbb    al,0x54
   140008b26:	or     eax,DWORD PTR [rax]
   140008b28:	sbb    al,0x34
   140008b2a:	or     al,BYTE PTR [rax]
   140008b2c:	sbb    al,0x32
   140008b2e:	sbb    al,dh
   140008b30:	(bad)  
   140008b31:	loopne 0x140008b47
   140008b33:	rcl    BYTE PTR [rdx],1
   140008b35:	rcl    BYTE PTR [rax],0x70
   140008b38:	add    DWORD PTR [rax+rcx*1],edx
   140008b3b:	add    BYTE PTR [rsp+riz*2],dl
   140008b3e:	or     BYTE PTR [rax],al
   140008b40:	adc    al,0x54
   140008b42:	(bad)  
   140008b43:	add    BYTE PTR [rsp+rsi*1],dl
   140008b46:	(bad)  
   140008b47:	add    BYTE PTR [rdx+rsi*1],dl
   140008b4a:	adc    BYTE PTR [rax+0x19],dh
   140008b4d:	(bad)  
   140008b4e:	or     BYTE PTR [rax],al
   140008b50:	adc    BYTE PTR [rsi+rcx*1],dh
   140008b53:	add    BYTE PTR [rax],dl
   140008b55:	push   rdx
   140008b56:	or     al,0xf0
   140008b58:	or     ah,al
   140008b5a:	or     BYTE PTR [rax+0x7],dh
   140008b5d:	(bad)  
   140008b5e:	(bad)  
   140008b5f:	push   rax
   140008b60:	push   0x28000077
   140008b65:	add    BYTE PTR [rax],al
   140008b67:	add    BYTE PTR [rcx],al
   140008b69:	clts   
   140008b6b:	add    BYTE PTR [rdi],cl
   140008b6d:	fs (bad) 
   140008b6f:	add    BYTE PTR [rdi],cl
   140008b71:	xor    al,0x6
   140008b73:	add    BYTE PTR [rdi],cl
   140008b75:	xor    cl,BYTE PTR [rbx]
   140008b77:	jo     0x140008b7a
   140008b79:	clts   
   140008b7b:	add    BYTE PTR [rdi],cl
   140008b7d:	or     BYTE PTR fs:[rax],al
   140008b80:	sysenter 
   140008b82:	(bad)  
   140008b83:	add    BYTE PTR [rdi],cl
   140008b85:	xor    cl,BYTE PTR [rbx]
   140008b87:	jo     0x140008b8a
   140008b89:	add    al,0x1
   140008b8b:	add    BYTE PTR [rdx+rax*2],al
   140008b8e:	add    BYTE PTR [rax],al
   140008b90:	add    DWORD PTR [rax+rcx*1],edx
   140008b93:	add    BYTE PTR [rsp+riz*2],dl
   140008b96:	or     al,BYTE PTR [rax]
   140008b98:	adc    al,0x54
   140008b9a:	or     DWORD PTR [rax],eax
   140008b9c:	adc    al,0x34
   140008b9e:	or     BYTE PTR [rax],al
   140008ba0:	adc    al,0x52
   140008ba2:	adc    BYTE PTR [rax+0x1],dh
   140008ba5:	sbb    al,0xc
   140008ba7:	add    BYTE PTR [rsp+riz*2],bl
   140008baa:	adc    DWORD PTR [rax],eax
   140008bac:	sbb    al,0x54
   140008bae:	adc    BYTE PTR [rax],al
   140008bb0:	sbb    al,0x34
   140008bb2:	ltr    WORD PTR [rdx+rsi*2]
   140008bb6:	sbb    al,dh
   140008bb8:	(bad)  
   140008bb9:	loopne 0x140008bcf
   140008bbb:	rcl    BYTE PTR [rdx],1
   140008bbd:	rcl    BYTE PTR [rax],0x70
   140008bc0:	add    DWORD PTR [rcx],edx
   140008bc2:	(bad)  
   140008bc3:	add    BYTE PTR [rcx],dl
   140008bc5:	movabs ds:0x60087009e00bf00d,al
   140008bce:	(bad)  
   140008bcf:	push   rax
   140008bd0:	(bad)  
   140008bd1:	xor    BYTE PTR [rax],al
   140008bd3:	add    BYTE PTR [rcx],bl
   140008bd5:	xor    BYTE PTR [rax+rax*1],cl
   140008bd8:	and    dh,BYTE PTR [rcx+rbx*1+0x0]
   140008bdc:	and    ah,BYTE PTR [rax+rbx*1+0x0]
   140008be0:	and    dh,BYTE PTR [rdi+rdx*1]
   140008be3:	add    BYTE PTR [rdx],ah
   140008be5:	repnz sbb al,dh
   140008be8:	(bad)  
   140008be9:	loopne 0x140008bff
   140008beb:	rcl    BYTE PTR [rdx],1
   140008bed:	rcl    BYTE PTR [rax],0x50
   140008bf0:	push   0x70000077
   140008bf5:	add    BYTE PTR [rax],al
   140008bf7:	add    BYTE PTR [rcx],cl
   140008bf9:	(bad)  
   140008bfa:	add    al,BYTE PTR [rax]
   140008bfc:	(bad)  
   140008bfd:	push   rdx
   140008bfe:	add    dh,BYTE PTR [rax]
   140008c00:	rex.RX jne 0x140008c03
   140008c03:	add    BYTE PTR [rcx],al
   140008c05:	add    BYTE PTR [rax],al
   140008c07:	add    dh,ch
   140008c09:	rex.XB add BYTE PTR [r8],al
   140008c0c:	add    al,0x44
   140008c0e:	add    BYTE PTR [rax],al
   140008c10:	add    DWORD PTR [rax],eax
   140008c12:	add    BYTE PTR [rax],al
   140008c14:	(bad)  
   140008c15:	add    BYTE PTR [rax],r8b
   140008c18:	or     DWORD PTR [rdx],ecx
   140008c1a:	add    al,0x0
   140008c1c:	or     dh,BYTE PTR [rsi+rax*1]
   140008c1f:	add    BYTE PTR [rdx],cl
   140008c21:	xor    al,BYTE PTR [rsi]
   140008c23:	jo     0x140008c6b
   140008c25:	jne    0x140008c27
   140008c27:	add    BYTE PTR [rcx],al
   140008c29:	add    BYTE PTR [rax],al
   140008c2b:	add    BYTE PTR [rsi-0x16ffffbc],dh
   140008c31:	add    BYTE PTR [rax],r8b
   140008c34:	add    DWORD PTR [rax],eax
   140008c36:	add    BYTE PTR [rax],al
   140008c38:	lock add BYTE PTR [rax],r8b
   140008c3c:	add    DWORD PTR [rbx],ebx
   140008c3e:	or     al,BYTE PTR [rax]
   140008c40:	sbb    esi,DWORD PTR [rbx+rcx*1+0x0]
   140008c44:	sbb    esp,DWORD PTR [rdx+rcx*1+0x0]
   140008c48:	sbb    esi,DWORD PTR [rcx+rcx*1]
   140008c4b:	add    BYTE PTR [rbx],bl
   140008c4d:	xor    dl,BYTE PTR [rax+rsi*8]
   140008c50:	adc    ah,al
   140008c52:	adc    BYTE PTR [rax+0x19],dl
   140008c55:	sbb    DWORD PTR [rax+rax*1],eax
   140008c58:	or     dh,BYTE PTR [rcx+rdx*1]
   140008c5b:	add    BYTE PTR [rdx],cl
   140008c5d:	rol    BYTE PTR [rsi],cl
   140008c5f:	jo     0x140008cc9
   140008c61:	ja     0x140008c63
   140008c63:	add    BYTE PTR [rax+0x0],ah
   140008c66:	add    BYTE PTR [rax],al
   140008c68:	sbb    DWORD PTR [rcx],ebx
   140008c6a:	add    al,0x0
   140008c6c:	or     dh,BYTE PTR [rbx+rcx*1]
   140008c6f:	add    BYTE PTR [rdx],cl
   140008c71:	jb     0x140008c79
   140008c73:	jo     0x140008cdd
   140008c75:	ja     0x140008c77
   140008c77:	add    BYTE PTR [rax],dh
   140008c79:	add    BYTE PTR [rax],al
   140008c7b:	add    BYTE PTR [rcx],bl
   140008c7d:	(bad)  
   140008c7e:	(bad)  
   140008c7f:	add    BYTE PTR [rsi],dl
   140008c81:	add    DWORD PTR [rax+0x1],edx
   140008c84:	(bad)  
   140008c85:	loopne 0x140008c8c
   140008c87:	jo     0x140008c8d
   140008c89:	(bad)  
   140008c8a:	add    esi,DWORD PTR [rax]
   140008c8c:	add    dl,BYTE PTR [rax+0x0]
   140008c8f:	add    BYTE PTR [rax+0x77],ch
   140008c92:	add    BYTE PTR [rax],al
   140008c94:	jo     0x140008ca0
   140008c96:	add    BYTE PTR [rax],al
   140008c98:	add    DWORD PTR [rdx],ecx
   140008c9a:	add    al,0x0
   140008c9c:	or     dh,BYTE PTR [rdi+rax*1]
   140008c9f:	add    BYTE PTR [rdx],cl
   140008ca1:	xor    al,BYTE PTR [rsi]
   140008ca3:	jo     0x140008ca6
   140008ca5:	adc    al,0x8
   140008ca7:	add    BYTE PTR [rsp+riz*2],dl
   140008caa:	(bad)  
   140008cab:	add    BYTE PTR [rsp+rdx*2],dl
   140008cae:	or     eax,0xc341400
   140008cb3:	add    BYTE PTR [rdx+rdx*4],dl
   140008cb6:	adc    BYTE PTR [rax+0x1],dh
   140008cb9:	sbb    ecx,DWORD PTR [rdx]
   140008cbb:	add    BYTE PTR [rbx],bl
   140008cbd:	push   rsp
   140008cbe:	adc    eax,DWORD PTR [rax]
   140008cc0:	sbb    esi,DWORD PTR [rdx+rdx*1]
   140008cc3:	add    BYTE PTR [rbx],bl
   140008cc5:	mov    dl,0x17
   140008cc7:	loopne 0x140008cde
   140008cc9:	rcl    BYTE PTR [rbx],1
   140008ccb:	rcl    BYTE PTR [rcx],0x70
   140008cce:	adc    BYTE PTR [rax+0x1],ah
   140008cd1:	(bad)  
   140008cd2:	or     al,BYTE PTR [rax]
   140008cd4:	(bad)  
   140008cd5:	xor    al,0x12
   140008cd7:	add    BYTE PTR [rdi],dl
   140008cd9:	xchg   edx,eax
   140008cda:	adc    al,dh
   140008cdc:	(bad)  
   140008cdd:	loopne 0x140008ceb
   140008cdf:	ror    BYTE PTR [rdx],1
   140008ce1:	ror    BYTE PTR [rax],0x70
   140008ce4:	(bad)  
   140008ce5:	(bad)  
   140008ce6:	(bad)  
   140008ce7:	push   rax
   140008ce8:	add    DWORD PTR [rsi],esi
   140008cea:	(bad)  
   140008ceb:	add    BYTE PTR [rsi],dh
   140008ced:	js     0x140008cf3
   140008cef:	add    BYTE PTR [rsi],ch
   140008cf1:	push   0x34140005
   140008cf6:	adc    al,0x0
   140008cf8:	adc    al,0xb2
   140008cfa:	adc    al,dh
   140008cfc:	(bad)  
   140008cfd:	loopne 0x140008d0b
   140008cff:	ror    BYTE PTR [rdx],1
   140008d01:	ror    BYTE PTR [rax],0x70
   140008d04:	(bad)  
   140008d05:	(bad)  
   140008d06:	(bad)  
   140008d07:	push   rax
   140008d08:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4158d16
   140008d0e:	or     BYTE PTR [rax],al
   140008d10:	adc    eax,0x15000764
   140008d15:	xor    al,0x6
   140008d17:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e09e4f
   140008d1d:	sbb    DWORD PTR [rdx],ecx
   140008d1f:	add    BYTE PTR [rcx],bl
   140008d21:	in     al,0x9
   140008d23:	add    BYTE PTR [rcx],bl
   140008d25:	je     0x140008d2f
   140008d27:	add    BYTE PTR [rcx],bl
   140008d29:	fs (bad) 
   140008d2b:	add    BYTE PTR [rcx],bl
   140008d2d:	push   rsp
   140008d2e:	(bad)  
   140008d2f:	add    BYTE PTR [rcx],bl
   140008d31:	xor    dl,BYTE PTR [rip+0x92201f0]        # 0x149228f27
   140008d37:	add    BYTE PTR [rdx],ah
   140008d39:	ret    0xf01b
   140008d3c:	sbb    eax,esp
   140008d3e:	(bad)  
   140008d3f:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x15270a105
   140008d45:	(bad)  
   140008d46:	adc    DWORD PTR [rax],esi
   140008d48:	adc    BYTE PTR [rax+0x0],dl
   140008d4b:	add    BYTE PTR [rcx],al
   140008d4d:	or     al,BYTE PTR [rdx]
   140008d4f:	add    BYTE PTR [rdx],cl
   140008d51:	xor    al,BYTE PTR [rsi]
   140008d53:	xor    BYTE PTR [rcx],al
   140008d55:	sbb    BYTE PTR [rdx],cl
   140008d57:	add    BYTE PTR [rax],bl
   140008d59:	or     al,BYTE PTR fs:[rax]
   140008d5c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140008d60:	sbb    BYTE PTR [rax+rcx*1],dh
   140008d63:	add    BYTE PTR [rax],bl
   140008d65:	xor    dl,BYTE PTR [rax+rsi*8]
   140008d68:	adc    ah,al
   140008d6a:	adc    BYTE PTR [rax+0x1],dh
   140008d6d:	(bad)  
   140008d6f:	add    BYTE PTR [rdi],cl
   140008d71:	xor    al,0x7
   140008d73:	add    BYTE PTR [rdi],cl
   140008d75:	xor    cl,BYTE PTR [rbx]
   140008d77:	jo     0x140008d7a
   140008d79:	adc    cl,BYTE PTR [rax]
   140008d7b:	add    BYTE PTR [rdx],dl
   140008d7d:	push   rsp
   140008d7e:	or     al,BYTE PTR [rax]
   140008d80:	adc    dh,BYTE PTR [rcx+rcx*1]
   140008d83:	add    BYTE PTR [rdx],dl
   140008d85:	xor    cl,BYTE PTR [rsi]
   140008d87:	loopne 0x140008d95
   140008d89:	jo     0x140008d96
   140008d8b:	(bad)  
   140008d8c:	add    DWORD PTR [rbx],ecx
   140008d8e:	add    al,0x0
   140008d90:	or     ebp,DWORD PTR [rax+0x2]
   140008d93:	add    BYTE PTR [rsi],al
   140008d95:	push   rdx
   140008d96:	add    dh,BYTE PTR [rax]
   140008d98:	add    DWORD PTR [rsi+rax*1],edx
   140008d9b:	add    BYTE PTR [rsp+riz*2],dl
   140008d9e:	or     BYTE PTR [rax],al
   140008da0:	adc    al,0x34
   140008da2:	(bad)  
   140008da3:	add    BYTE PTR [rdx+rsi*1],dl
   140008da6:	adc    BYTE PTR [rax+0x1],dh
   140008da9:	sbb    DWORD PTR [rdx],ecx
   140008dab:	add    BYTE PTR [rcx],bl
   140008dad:	je     0x140008db8
   140008daf:	add    BYTE PTR [rcx],bl
   140008db1:	or     BYTE PTR fs:[rax],al
   140008db4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140008db8:	sbb    DWORD PTR [rsi+rax*1],esi
   140008dbb:	add    BYTE PTR [rcx],bl
   140008dbd:	xor    dl,BYTE PTR [rip+0x10401e0]        # 0x141048fa3
   140008dc3:	add    BYTE PTR [rdx+riz*2],al
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	or     DWORD PTR [rcx],ebx
   140008dca:	or     al,BYTE PTR [rax]
   140008dcc:	sbb    esp,eax
   140008dce:	or     eax,DWORD PTR [rax]
   140008dd0:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140008dd4:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140008dd8:	sbb    DWORD PTR [rax+rcx*1],esi
   140008ddb:	add    BYTE PTR [rcx],bl
   140008ddd:	push   rdx
   140008dde:	adc    eax,0x7546e0
   140008de3:	add    BYTE PTR [rcx],al
   140008de5:	add    BYTE PTR [rax],al
   140008de7:	add    BYTE PTR [rcx],ch
   140008de9:	jo     0x140008deb
   140008deb:	add    BYTE PTR [rdx-0x27ffff8f],bl
   140008df1:	js     0x140008df3
   140008df3:	add    BYTE PTR [rdx+0x1000071],bl
   140008df9:	(bad)  
   140008dfa:	add    al,BYTE PTR [rax]
   140008dfc:	(bad)  
   140008dfd:	xor    al,BYTE PTR [rdx]
   140008dff:	push   rax
   140008e00:	add    DWORD PTR [rax],eax
   140008e02:	add    BYTE PTR [rax],al
   140008e04:	or     DWORD PTR [rcx+rax*1],eax
   140008e07:	add    BYTE PTR [rdx+riz*1],al
   140008e0a:	add    BYTE PTR [rax],al
   140008e0c:	rex.RX jne 0x140008e0f
   140008e0f:	add    BYTE PTR [rcx],al
   140008e11:	add    BYTE PTR [rax],al
   140008e13:	add    ah,cl
   140008e15:	jb     0x140008e17
   140008e17:	add    BYTE PTR [rdx],al
   140008e19:	jae    0x140008e1b
   140008e1b:	add    BYTE PTR [rcx],al
   140008e1d:	add    BYTE PTR [rax],al
   140008e1f:	add    BYTE PTR [rdx],al
   140008e21:	jae    0x140008e23
   140008e23:	add    BYTE PTR [rcx],cl
   140008e25:	or     al,BYTE PTR [rax+rax*1]
   140008e28:	or     dh,BYTE PTR [rsi+rax*1]
   140008e2b:	add    BYTE PTR [rdx],cl
   140008e2d:	xor    al,BYTE PTR [rsi]
   140008e2f:	jo     0x140008e77
   140008e31:	jne    0x140008e33
   140008e33:	add    BYTE PTR [rcx],al
   140008e35:	add    BYTE PTR [rax],al
   140008e37:	add    ch,cl
   140008e39:	jae    0x140008e3b
   140008e3b:	add    BYTE PTR [rax],al
   140008e3d:	je     0x140008e3f
   140008e3f:	add    BYTE PTR [rax],al
   140008e41:	jns    0x140008e43
   140008e43:	add    BYTE PTR [rax],al
   140008e45:	je     0x140008e47
   140008e47:	add    BYTE PTR [rcx],al
   140008e49:	or     eax,0x340d0004
   140008e4e:	or     DWORD PTR [rax],eax
   140008e50:	or     eax,0x1500632
   140008e55:	or     al,0x2
   140008e57:	add    BYTE PTR [rcx+rax*1],cl
   140008e5a:	adc    DWORD PTR [rax],eax
   140008e5c:	add    BYTE PTR [rax],al
   140008e5e:	add    BYTE PTR [rax],al
   140008e60:	add    DWORD PTR [rax],eax
   140008e62:	add    BYTE PTR [rax],al
   140008e64:	pop    rax
   140008e65:	pop    QWORD PTR [rax]
	...
   140008e6f:	add    BYTE PTR [rbx+rdx*4-0x80000000],al
   140008e76:	add    BYTE PTR [rax],al
   140008e78:	cwde   
   140008e79:	xchg   ecx,eax
	...
   140008e82:	add    BYTE PTR [rax],al
   140008e84:	xchg   rsp,rax
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	rex (bad) 
   140008e8a:	add    BYTE PTR [rax],al
   140008e8c:	mov    BYTE PTR [rdx+0x0],dl
   140008e92:	add    BYTE PTR [rax],al
   140008e94:	add    BYTE PTR [rax],al
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	fcom   DWORD PTR [rax+rax*1+0x833000]
   140008e9f:	add    BYTE PTR [rax],ch
   140008ea1:	xchg   ecx,eax
	...
   140008eaa:	add    BYTE PTR [rax],al
   140008eac:	(bad)  
   140008ead:	xchg   esp,eax
   140008eae:	add    BYTE PTR [rax],al
   140008eb0:	rol    BYTE PTR [rcx-0x6ea00000],1
	...
   140008ebe:	add    BYTE PTR [rax],al
   140008ec0:	cmp    dl,BYTE PTR [rbp-0x7df80000]
   140008ec6:	add    BYTE PTR [rax],al
   140008ec8:	lock nop
	...
   140008ed2:	add    BYTE PTR [rax],al
   140008ed4:	jb     0x140008e6b
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	cwde   
   140008ed9:	add    DWORD PTR [rax],0x90d000
	...
   140008ee7:	add    dl,al
   140008ee9:	xchg   ebp,eax
   140008eea:	add    BYTE PTR [rax],al
   140008eec:	js     0x140008e6f
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	rex xchg ecx,eax
	...
   140008efa:	add    BYTE PTR [rax],al
   140008efc:	adc    BYTE PTR [rsi-0x7e180000],dl
   140008f02:	add    BYTE PTR [rax],al
   140008f04:	mov    eax,0x92
   140008f09:	add    BYTE PTR [rax],al
   140008f0b:	add    BYTE PTR [rax],al
   140008f0d:	add    BYTE PTR [rax],al
   140008f0f:	add    BYTE PTR [rax],dh
   140008f11:	xchg   esi,eax
   140008f12:	add    BYTE PTR [rax],al
   140008f14:	(bad)  
   140008f15:	add    DWORD PTR [rax],0x0
   140008f18:	js     0x140008eac
	...
   140008f22:	add    BYTE PTR [rax],al
   140008f24:	push   rax
   140008f25:	xchg   esi,eax
   140008f26:	add    BYTE PTR [rax],al
   140008f28:	and    BYTE PTR [rbx-0x6ee80000],al
	...
   140008f36:	add    BYTE PTR [rax],al
   140008f38:	jo     0x140008ed0
   140008f3a:	add    BYTE PTR [rax],al
   140008f3c:	rol    BYTE PTR [rcx+0x0],0x0
	...
   140008f57:	add    BYTE PTR [rsi],al
   140008f59:	xchg   ebx,eax
   140008f5a:	add    BYTE PTR [rax],al
   140008f5c:	add    BYTE PTR [rax],al
   140008f5e:	add    BYTE PTR [rax],al
   140008f60:	adc    al,0x93
   140008f62:	add    BYTE PTR [rax],al
   140008f64:	add    BYTE PTR [rax],al
   140008f66:	add    BYTE PTR [rax],al
   140008f68:	es xchg ebx,eax
   140008f6a:	add    BYTE PTR [rax],al
   140008f6c:	add    BYTE PTR [rax],al
   140008f6e:	add    BYTE PTR [rax],al
   140008f70:	xor    dl,BYTE PTR [rbx+0x0]
   140008f76:	add    BYTE PTR [rax],al
   140008f78:	rex.X xchg ebx,eax
   140008f7a:	add    BYTE PTR [rax],al
   140008f7c:	add    BYTE PTR [rax],al
   140008f7e:	add    BYTE PTR [rax],al
   140008f80:	pop    rax
   140008f81:	xchg   ebx,eax
   140008f82:	add    BYTE PTR [rax],al
   140008f84:	add    BYTE PTR [rax],al
   140008f86:	add    BYTE PTR [rax],al
   140008f88:	outs   dx,BYTE PTR ds:[rsi]
   140008f89:	xchg   ebx,eax
   140008f8a:	add    BYTE PTR [rax],al
   140008f8c:	add    BYTE PTR [rax],al
   140008f8e:	add    BYTE PTR [rax],al
   140008f90:	fcomp  QWORD PTR [rax+0x0]
   140008f96:	add    BYTE PTR [rax],al
   140008f98:	(bad)  
   140008f99:	cwde   
   140008f9a:	add    BYTE PTR [rax],al
   140008f9c:	add    BYTE PTR [rax],al
   140008f9e:	add    BYTE PTR [rax],al
   140008fa0:	mov    edx,0x98
   140008fa5:	add    BYTE PTR [rax],al
   140008fa7:	add    BYTE PTR [rax+rbx*4+0x0],ch
   140008fae:	add    BYTE PTR [rax],al
   140008fb0:	movabs al,ds:0x9000000000000098
   140008fb9:	cwde   
   140008fba:	add    BYTE PTR [rax],al
   140008fbc:	add    BYTE PTR [rax],al
   140008fbe:	add    BYTE PTR [rax],al
   140008fc0:	test   BYTE PTR [rax+0x0],bl
   140008fc6:	add    BYTE PTR [rax],al
   140008fc8:	jb     0x140008f62
   140008fca:	add    BYTE PTR [rax],al
   140008fcc:	add    BYTE PTR [rax],al
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	(bad)  
   140008fd1:	cwde   
   140008fd2:	add    BYTE PTR [rax],al
   140008fd4:	add    BYTE PTR [rax],al
   140008fd6:	add    BYTE PTR [rax],al
   140008fd8:	push   rax
   140008fd9:	cwde   
   140008fda:	add    BYTE PTR [rax],al
   140008fdc:	add    BYTE PTR [rax],al
   140008fde:	add    BYTE PTR [rax],al
   140008fe0:	cmp    bl,BYTE PTR [rax+0x0]
   140008fe6:	add    BYTE PTR [rax],al
   140008fe8:	sub    al,0x98
   140008fea:	add    BYTE PTR [rax],al
   140008fec:	add    BYTE PTR [rax],al
   140008fee:	add    BYTE PTR [rax],al
   140008ff0:	sbb    al,0x98
   140008ff2:	add    BYTE PTR [rax],al
   140008ff4:	add    BYTE PTR [rax],al
   140008ff6:	add    BYTE PTR [rax],al
   140008ff8:	not    BYTE PTR [rdx+0x0]
   140008ffe:	add    BYTE PTR [rax],al
   140009000:	clc    
   140009001:	xchg   edi,eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	out    0x97,al
   14000900a:	add    BYTE PTR [rax],al
   14000900c:	add    BYTE PTR [rax],al
   14000900e:	add    BYTE PTR [rax],al
   140009010:	ficom  DWORD PTR [rdi+0x0]
   140009016:	add    BYTE PTR [rax],al
   140009018:	(bad)  
   140009019:	xchg   edi,eax
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    BYTE PTR [rax],al
   14000901e:	add    BYTE PTR [rax],al
   140009020:	mov    esi,0x97
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rdi+rdx*4+0x0],ch
   14000902e:	add    BYTE PTR [rax],al
   140009030:	sahf   
   140009031:	xchg   edi,eax
   140009032:	add    BYTE PTR [rax],al
   140009034:	add    BYTE PTR [rax],al
   140009036:	add    BYTE PTR [rax],al
   140009038:	xchg   edx,eax
   140009039:	xchg   edi,eax
   14000903a:	add    BYTE PTR [rax],al
   14000903c:	add    BYTE PTR [rax],al
   14000903e:	add    BYTE PTR [rax],al
   140009040:	adc    BYTE PTR [rdi+0x0],0x0
   140009047:	add    BYTE PTR [rdx-0x69],ch
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    BYTE PTR [rax],al
   140009050:	push   rsi
   140009051:	xchg   edi,eax
   140009052:	add    BYTE PTR [rax],al
   140009054:	add    BYTE PTR [rax],al
   140009056:	add    BYTE PTR [rax],al
   140009058:	rex.X xchg edi,eax
   14000905a:	add    BYTE PTR [rax],al
   14000905c:	add    BYTE PTR [rax],al
   14000905e:	add    BYTE PTR [rax],al
   140009060:	es xchg edi,eax
   140009062:	add    BYTE PTR [rax],al
   140009064:	add    BYTE PTR [rax],al
   140009066:	add    BYTE PTR [rax],al
   140009068:	(bad)  
   140009069:	xchg   edi,eax
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	cld    
   140009071:	xchg   esi,eax
   140009072:	add    BYTE PTR [rax],al
   140009074:	add    BYTE PTR [rax],al
   140009076:	add    BYTE PTR [rax],al
   140009078:	out    0x96,al
   14000907a:	add    BYTE PTR [rax],al
   14000907c:	add    BYTE PTR [rax],al
   14000907e:	add    BYTE PTR [rax],al
   140009080:	rcl    BYTE PTR [rsi+0x0],1
   140009086:	add    BYTE PTR [rax],al
   140009088:	mov    dh,0x96
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	add    BYTE PTR [rax],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	movabs ds:0x8400000000000096,al
   140009099:	xchg   esi,eax
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	add    BYTE PTR [rax],al
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	jl     0x140009038
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	add    BYTE PTR [rax],al
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	(bad)  
   1400090a9:	xchg   edx,eax
   1400090aa:	add    BYTE PTR [rax],al
   1400090ac:	add    BYTE PTR [rax],al
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	fcom   QWORD PTR [rdx+0x0]
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	or     bl,BYTE PTR [rax+0x0]
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	enter  0x92,0x0
	...
   1400090d0:	xchg   edx,eax
   1400090d1:	xchg   ebp,eax
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	test   al,0x95
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	add    BYTE PTR [rax],al
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	jle    0x140009077
	...
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	push   rdx
   1400090f1:	xchg   ebp,eax
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	add    BYTE PTR [rax],al
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	pop    rsp
   1400090f9:	xchg   ebp,eax
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	push   0x95
   140009105:	add    BYTE PTR [rax],al
   140009107:	add    BYTE PTR [rsi-0x6b],al
	...
   140009116:	add    BYTE PTR [rax],al
   140009118:	pop    rsi
   140009119:	xchg   esi,eax
	...
   140009126:	add    BYTE PTR [rax],al
   140009128:	loop   0x1400090be
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	add    BYTE PTR [rax],al
   14000912e:	add    BYTE PTR [rax],al
   140009130:	lock xchg esp,eax
	...
   14000913e:	add    BYTE PTR [rax],al
   140009140:	(bad)  
   140009141:	xchg   ebp,eax
   140009142:	add    BYTE PTR [rax],al
   140009144:	add    BYTE PTR [rax],al
   140009146:	add    BYTE PTR [rax],al
   140009148:	retf   0x95
   14000914b:	add    BYTE PTR [rax],al
   14000914d:	add    BYTE PTR [rax],al
   14000914f:	add    dh,ah
   140009151:	xchg   ebp,eax
	...
   14000915e:	add    BYTE PTR [rax],al
   140009160:	sub    dl,BYTE PTR [rbp+0x0]
   140009166:	add    BYTE PTR [rax],al
   140009168:	sbb    dl,BYTE PTR [rbp+0x0]
   14000916e:	add    BYTE PTR [rax],al
   140009170:	or     dl,BYTE PTR [rbp+0x0]
   140009176:	add    BYTE PTR [rax],al
   140009178:	outs   dx,DWORD PTR ds:[rsi]
   140009179:	add    BYTE PTR [rax],al
   14000917b:	add    BYTE PTR [rax],al
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	xor    BYTE PTR [rbx+0x0],0x0
   140009183:	add    BYTE PTR [rax],al
   140009185:	add    BYTE PTR [rax],al
   140009187:	xor    BYTE PTR [rax+rax*1+0x0],0x0
   14000918c:	add    BYTE PTR [rax],al
   14000918e:	add    BYTE PTR [rax+0x0],al
   140009194:	add    BYTE PTR [rax],al
   140009196:	add    BYTE PTR [rax],al
   140009198:	and    BYTE PTR [rcx+0x0],bl
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	sub    bl,BYTE PTR [rcx+0x0]
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	js     0x140009143
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	ds cdq 
   1400091b2:	add    BYTE PTR [rax],al
   1400091b4:	add    BYTE PTR [rax],al
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	xor    al,0x99
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	add    BYTE PTR [rax],al
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	pop    rdx
   1400091c1:	cdq    
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	add    BYTE PTR [rax],al
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	fs cdq 
   1400091ca:	add    BYTE PTR [rax],al
   1400091cc:	add    BYTE PTR [rax],al
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	outs   dx,BYTE PTR ds:[rsi]
   1400091d1:	cdq    
   1400091d2:	add    BYTE PTR [rax],al
   1400091d4:	add    BYTE PTR [rax],al
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	push   rsp
   1400091d9:	xchg   esp,eax
   1400091da:	add    BYTE PTR [rax],al
   1400091dc:	add    BYTE PTR [rax],al
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	cmp    al,0x94
   1400091e2:	add    BYTE PTR [rax],al
   1400091e4:	add    BYTE PTR [rax],al
   1400091e6:	add    BYTE PTR [rax],al
   1400091e8:	xor    dl,BYTE PTR [rax+rax*1+0x0]
   1400091ef:	add    BYTE PTR [rdx],bl
   1400091f1:	xchg   esp,eax
   1400091f2:	add    BYTE PTR [rax],al
   1400091f4:	add    BYTE PTR [rax],al
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	(bad)  
   1400091f9:	xchg   esp,eax
   1400091fa:	add    BYTE PTR [rax],al
   1400091fc:	add    BYTE PTR [rax],al
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	cli    
   140009201:	xchg   ebx,eax
   140009202:	add    BYTE PTR [rax],al
   140009204:	add    BYTE PTR [rax],al
   140009206:	add    BYTE PTR [rax],al
   140009208:	lock xchg ebx,eax
   14000920a:	add    BYTE PTR [rax],al
   14000920c:	add    BYTE PTR [rax],al
   14000920e:	add    BYTE PTR [rax],al
   140009210:	call   0x1400092a8
   140009215:	add    BYTE PTR [rax],al
   140009217:	add    al,ah
   140009219:	xchg   ebx,eax
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	add    BYTE PTR [rax],al
   14000921e:	add    BYTE PTR [rax],al
   140009220:	(bad)  
   140009221:	xchg   ebx,eax
   140009222:	add    BYTE PTR [rax],al
   140009224:	add    BYTE PTR [rax],al
   140009226:	add    BYTE PTR [rax],al
   140009228:	mov    esp,0x93
   14000922d:	add    BYTE PTR [rax],al
   14000922f:	add    BYTE PTR [rsi+0x93],ch
   140009235:	add    BYTE PTR [rax],al
   140009237:	add    BYTE PTR [rax+0x93],ah
   14000923d:	add    BYTE PTR [rax],al
   14000923f:	add    BYTE PTR [rdx+0x93],dl
   140009245:	add    BYTE PTR [rax],al
   140009247:	add    BYTE PTR [rax-0x67],dl
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	add    BYTE PTR [rax],al
   14000924e:	add    BYTE PTR [rax],al
   140009250:	repnz cwde 
   140009252:	add    BYTE PTR [rax],al
   140009254:	add    BYTE PTR [rax],al
   140009256:	add    BYTE PTR [rax],al
   140009258:	add    BYTE PTR [rcx+0x0],bl
   14000925e:	add    BYTE PTR [rax],al
   140009260:	or     al,0x99
   140009262:	add    BYTE PTR [rax],al
   140009264:	add    BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	(bad)  
   140009269:	cdq    
	...
   140009276:	add    BYTE PTR [rax],al
   140009278:	cmp    al,0x96
	...
   140009286:	add    BYTE PTR [rax],al
   140009288:	push   0x94
   14000928d:	add    BYTE PTR [rax],al
   14000928f:	add    al,al
   140009291:	xchg   esp,eax
   140009292:	add    BYTE PTR [rax],al
   140009294:	add    BYTE PTR [rax],al
   140009296:	add    BYTE PTR [rax],al
   140009298:	stos   BYTE PTR es:[rdi],al
   140009299:	xchg   esp,eax
   14000929a:	add    BYTE PTR [rax],al
   14000929c:	add    BYTE PTR [rax],al
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	xchg   esi,eax
   1400092a1:	xchg   esp,eax
   1400092a2:	add    BYTE PTR [rax],al
   1400092a4:	add    BYTE PTR [rax],al
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	jl     0x14000923e
	...
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	sbb    al,0x96
	...
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	fadd   DWORD PTR [rcx]
   1400092ca:	rex.RXB
   1400092cb:	gs je  0x140009311
   1400092ce:	outs   dx,DWORD PTR ds:[rsi]
   1400092cf:	ins    DWORD PTR es:[rdi],dx
   1400092d0:	jo     0x140009347
   1400092d2:	je     0x140009339
   1400092d4:	jb     0x140009324
   1400092d6:	(bad)  
   1400092d7:	ins    DWORD PTR es:[rdi],dx
   1400092d8:	gs push rdi
   1400092da:	add    BYTE PTR [rax],al
   1400092dc:	rol    BYTE PTR [rax],0x43
   1400092df:	jb     0x140009346
   1400092e1:	(bad)  
   1400092e2:	je     0x140009349
   1400092e4:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x57060000
   1400092ed:	jb     0x140009358
   1400092ef:	je     0x140009356
   1400092f1:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x65470257
   1400092fa:	je     0x140009348
   1400092fc:	(bad)  
   1400092fd:	jae    0x140009373
   1400092ff:	rex.RB jb 0x140009374
   140009302:	outs   dx,DWORD PTR ds:[rsi]
   140009303:	jb     0x140009305
   140009305:	add    BYTE PTR [rbp+0x0],bh
   140009308:	rex.XB ins BYTE PTR es:[rdi],dx
   14000930a:	outs   dx,DWORD PTR ds:[rsi]
   14000930b:	jae    0x140009372
   14000930d:	rex.W (bad) 
   14000930f:	outs   dx,BYTE PTR ds:[rsi]
   140009310:	fs ins BYTE PTR es:[rdi],dx
   140009312:	gs add dl,cl
   140009315:	add    BYTE PTR [rbx+0x72],al
   140009318:	gs (bad) 
   14000931a:	je     0x140009381
   14000931c:	rex.WRB (bad) 
   14000931e:	imul   ebp,DWORD PTR [rbx+rsi*2+0x6c],0x57746f
   140009326:	pop    rsp
   140009327:	add    al,0x52
   140009329:	gs (bad) 
   14000932b:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x53052300
   140009335:	gs je  0x140009384
   140009338:	(bad)  
   140009339:	jae    0x1400093af
   14000933b:	rex.RB jb 0x1400093b0
   14000933e:	outs   dx,DWORD PTR ds:[rsi]
   14000933f:	jb     0x140009341
   140009341:	add    ah,ch
   140009343:	add    eax,0x65646957
   140009348:	rex.XB push 0x6f547261
   14000934e:	rex.WRB jne 0x1400093bd
   140009351:	je     0x1400093bc
   140009353:	rex.X jns 0x1400093ca
   140009356:	gs add cl,bh
   140009359:	add    DWORD PTR [rdi+0x65],eax
   14000935c:	je     0x1400093a1
   14000935e:	outs   dx,DWORD PTR ds:[rsi]
   14000935f:	outs   dx,BYTE PTR ds:[rsi]
   140009360:	jae    0x1400093d1
   140009362:	ins    BYTE PTR es:[rdi],dx
   140009363:	gs rex.WRXB jne 0x1400093db
   140009367:	jo     0x1400093de
   140009369:	je     0x1400093ae
   14000936b:	push   rax
   14000936c:	add    BYTE PTR [rax],al
   14000936e:	add    r9d,DWORD PTR [rax+0x65]
   140009372:	(bad)  
   140009373:	jo     0x1400093c8
   140009375:	gs je  0x1400093c1
   140009378:	outs   dx,BYTE PTR ds:[rsi]
   140009379:	outs   dx,WORD PTR ds:[rsi]
   14000937b:	jb     0x1400093ea
   14000937d:	(bad)  
   14000937e:	je     0x1400093e9
   140009380:	outs   dx,DWORD PTR ds:[rsi]
   140009381:	outs   dx,BYTE PTR ds:[rsi]
   140009382:	add    BYTE PTR [rax],al
   140009384:	rex.WXB
   140009385:	rex.RB push r10
   140009387:	rex.WRX
   140009388:	rex.RB
   140009389:	xor    r14,QWORD PTR [rdx]
   14000938c:	cs fs ins BYTE PTR es:[rdi],dx
   14000938f:	ins    BYTE PTR es:[rdi],dx
   140009390:	add    BYTE PTR [rax],al
   140009392:	imul   eax,DWORD PTR [rbx],0x6e73765f
   140009398:	ja     0x14000940a
   14000939a:	jb     0x140009405
   14000939c:	outs   dx,BYTE PTR ds:[rsi]
   14000939d:	je     0x140009405
   14000939f:	add    BYTE PTR [rbp+0x0],dl
   1400093a2:	pop    rdi
   1400093a3:	pop    rax
   1400093a4:	movsxd esi,DWORD PTR [rax+0x74]
   1400093a7:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400093b0:	pop    rdi
   1400093b1:	(bad)  
   1400093b2:	ins    DWORD PTR es:[rdi],dx
   1400093b3:	jae    0x14000941c
   1400093b5:	pop    rdi
   1400093b6:	gs js  0x140009422
   1400093b9:	je     0x1400093bb
   1400093bb:	add    BYTE PTR [rbp+0x775f5f00],bl
   1400093c1:	addr32 gs je 0x140009432
   1400093c5:	(bad)  
   1400093c6:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400093cd:	add    BYTE PTR [rsi+0x735f5f00],cl
   1400093d3:	gs je  0x140009435
   1400093d6:	(bad)  
   1400093d7:	jo     0x140009449
   1400093d9:	pop    rdi
   1400093da:	je     0x140009455
   1400093dc:	jo     0x140009443
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	xor    al,BYTE PTR [riz*2+0x746978]
   1400093e7:	add    BYTE PTR [rsi],cl
   1400093e9:	add    DWORD PTR [rdi+0x65],ebx
   1400093ec:	js     0x140009457
   1400093ee:	je     0x1400093f0
   1400093f0:	rol    DWORD PTR [rax],0x5f
   1400093f3:	movsxd esp,DWORD PTR [rbp+0x78]
   1400093f6:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   1400093fe:	jae    0x140009465
   140009400:	je     0x140009477
   140009402:	jae    0x140009469
   140009404:	jb     0x140009473
   140009406:	(bad)  
   140009407:	je     0x140009471
   140009409:	gs jb  0x14000947e
   14000940c:	add    BYTE PTR [rax],al
   14000940e:	jge    0x140009411
   140009410:	pop    rdi
   140009411:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140009418:	ins    DWORD PTR es:[rdi],dx
   140009419:	add    BYTE PTR [rdi+0x0],dl
   14000941c:	pop    rdi
   14000941d:	pop    rdi
   14000941e:	rex.XB pop r15
   140009420:	jae    0x140009492
   140009422:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140009426:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000942d:	ins    BYTE PTR es:[rdi],dx
   14000942e:	gs jb  0x140009431
   140009431:	add    BYTE PTR [rdi],ah
   140009433:	add    DWORD PTR [rdi+0x66],ebx
   140009436:	ins    DWORD PTR es:[rdi],dx
   140009437:	outs   dx,DWORD PTR ds:[rsi]
   140009438:	fs add BYTE PTR gs:[rax],al
   14000943c:	rol    BYTE PTR [rax],cl
   14000943e:	pop    rdi
   14000943f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009442:	ins    DWORD PTR es:[rdi],dx
   140009443:	outs   dx,DWORD PTR ds:[rsi]
   140009444:	fs add BYTE PTR gs:[rax],al
   140009448:	ins    DWORD PTR es:[rdi],dx
   140009449:	jae    0x1400094c1
   14000944b:	movsxd esi,DWORD PTR [rdx+0x74]
   14000944e:	cs fs ins BYTE PTR es:[rdi],dx
   140009451:	ins    BYTE PTR es:[rdi],dx
   140009452:	add    BYTE PTR [rax],al
   140009454:	(bad)  
   140009455:	add    BYTE PTR [rdi],bh
   140009457:	je     0x1400094be
   140009459:	jb     0x1400094c8
   14000945b:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140009462:	pop    rcx
   140009463:	pop    r8
   140009465:	pop    rax
   140009466:	pop    rdx
   140009467:	add    dh,al
   140009469:	add    dl,BYTE PTR [rdx+0x74]
   14000946c:	ins    BYTE PTR es:[rdi],dx
   14000946d:	rex.XB (bad) 
   14000946f:	jo     0x1400094e5
   140009471:	jne    0x1400094e5
   140009473:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140009476:	outs   dx,BYTE PTR ds:[rsi]
   140009477:	je     0x1400094de
   140009479:	js     0x1400094ef
   14000947b:	add    BYTE PTR [rdi+0x4],dh
   14000947e:	push   rdx
   14000947f:	je     0x1400094ed
   140009481:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009483:	outs   dx,DWORD PTR ds:[rsi]
   140009484:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140009488:	jne    0x1400094f8
   14000948a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000948e:	outs   dx,BYTE PTR ds:[rsi]
   14000948f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009491:	je     0x140009505
   140009493:	jns    0x140009495
   140009495:	add    BYTE PTR [rbx+0x6c745205],cl
   14000949b:	push   rsi
   14000949c:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400094a3:	outs   dx,BYTE PTR ds:[rsi]
   1400094a4:	ja     0x14000950f
   1400094a6:	outs   dx,BYTE PTR ds:[rsi]
   1400094a7:	add    BYTE PTR fs:[rax],al
   1400094aa:	sbb    eax,0x72655606
   1400094af:	push   rbx
   1400094b0:	gs je  0x1400094f6
   1400094b3:	outs   dx,DWORD PTR ds:[rsi]
   1400094b4:	outs   dx,BYTE PTR ds:[rsi]
   1400094b5:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x73614d6e
   1400094be:	imul   eax,DWORD PTR [rax],0xffffff8a
   1400094c1:	add    eax,0x566c7452
   1400094c6:	gs jb  0x140009532
   1400094c9:	data16 jns 0x140009522
   1400094cc:	gs jb  0x140009542
   1400094cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
   1400094d6:	add    BYTE PTR [rax],al
   1400094d8:	outs   dx,BYTE PTR ds:[rsi]
   1400094d9:	je     0x14000953f
   1400094db:	ins    BYTE PTR es:[rdi],dx
   1400094dc:	ins    BYTE PTR es:[rdi],dx
   1400094dd:	cs fs ins BYTE PTR es:[rdi],dx
   1400094e0:	ins    BYTE PTR es:[rdi],dx
   1400094e1:	add    BYTE PTR [rbx+0x2],al
   1400094e4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400094e6:	(bad)  
   1400094e7:	fs push rbx
   1400094e9:	je     0x14000955d
   1400094eb:	imul   ebp,DWORD PTR [rsi+0x67],0x3c0057
   1400094f2:	rex.XB push 0x70557261
   1400094f8:	jo     0x14000955f
   1400094fa:	jb     0x140009553
   1400094fc:	add    BYTE PTR [rax],al
   1400094fe:	push   rbp
   1400094ff:	push   rbx
   140009500:	rex.RB push r10
   140009502:	xor    esi,DWORD PTR [rdx]
   140009504:	cs fs ins BYTE PTR es:[rdi],dx
   140009507:	ins    BYTE PTR es:[rdi],dx
   140009508:	add    BYTE PTR [rax],al
   14000950a:	(bad)  
   14000950b:	add    BYTE PTR [rdi+0x65],al
   14000950e:	je     0x140009551
   140009510:	fs fs jb 0x14000955d
   140009514:	outs   dx,BYTE PTR ds:[rsi]
   140009515:	outs   dx,WORD PTR ds:[rsi]
   140009517:	push   rdi
   140009518:	add    BYTE PTR [rax],al
   14000951a:	or     DWORD PTR [rax],eax
   14000951c:	rex.RXB
   14000951d:	gs je  0x14000956e
   140009520:	(bad)  
   140009521:	ins    DWORD PTR es:[rdi],dx
   140009522:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140009525:	outs   dx,WORD PTR ds:[rsi]
   140009527:	push   rdi
   140009528:	add    BYTE PTR [rax],al
   14000952a:	add    al,BYTE PTR [rax]
   14000952c:	rex.RX jb 0x140009594
   14000952f:	gs rex.B
   140009531:	fs fs jb 0x14000957e
   140009535:	outs   dx,BYTE PTR ds:[rsi]
   140009536:	outs   dx,WORD PTR ds:[rsi]
   140009538:	push   rdi
   140009539:	add    BYTE PTR [rdi+0x53],dl
   14000953c:	xor    bl,BYTE PTR [rdi+0x33]
   14000953f:	xor    ch,BYTE PTR [rsi]
   140009541:	fs ins BYTE PTR es:[rdi],dx
   140009543:	ins    BYTE PTR es:[rdi],dx
   140009544:	add    BYTE PTR [rax],al
   140009546:	sbb    eax,DWORD PTR [rcx]
   140009548:	push   rbx
   140009549:	je     0x1400095bd
   14000954b:	rex.XB push 0x574972
   140009551:	add    BYTE PTR [rsi],bl
   140009553:	add    DWORD PTR [rbx+0x74],edx
   140009556:	jb     0x14000959b
   140009558:	push   0x4f005772
   14000955d:	add    DWORD PTR [rbx+0x74],edx
   140009560:	jb     0x1400095b5
   140009562:	je     0x1400095d6
   140009564:	rex.WB push r15
   140009566:	add    BYTE PTR [rax],al
   140009568:	push   rdx
   140009569:	add    DWORD PTR [rbx+0x74],edx
   14000956c:	jb     0x1400095c1
   14000956e:	je     0x1400095e2
   140009570:	push   rdi
   140009571:	add    BYTE PTR [rbx+0x48],dl
   140009574:	rex.WR push rdi
   140009576:	push   r8
   140009578:	rex.WB
   140009579:	cs fs ins BYTE PTR es:[rdi],dx
   14000957c:	ins    BYTE PTR es:[rdi],dx
   14000957d:	add    BYTE PTR [rax],dh
   14000957f:	add    BYTE PTR [rdi+0x4e],dl
   140009582:	gs je  0x1400095cc
   140009585:	gs je  0x1400095d4
   140009588:	(bad)  
   140009589:	jae    0x1400095ff
   14000958b:	rex.RB jb 0x140009600
   14000958e:	outs   dx,DWORD PTR ds:[rsi]
   14000958f:	jb     0x1400095e8
   140009591:	add    BYTE PTR [rip+0x654e5700],cl        # 0x1a54eec97
   140009597:	je     0x1400095da
   140009599:	fs rex.XB outs dx,DWORD PTR fs:[rsi]
   14000959d:	outs   dx,BYTE PTR ds:[rsi]
   14000959e:	outs   dx,BYTE PTR ds:[rsi]
   14000959f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400095a4:	outs   dx,BYTE PTR ds:[rsi]
   1400095a5:	xor    dl,BYTE PTR [rdi+0x0]
   1400095a8:	adc    eax,DWORD PTR [rax]
   1400095aa:	push   rdi
   1400095ab:	rex.WRX
   1400095ac:	gs je  0x1400095f2
   1400095af:	(bad)  
   1400095b0:	outs   dx,BYTE PTR ds:[rsi]
   1400095b1:	movsxd esp,DWORD PTR [rbp+0x6c]
   1400095b4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400095b6:	outs   dx,BYTE PTR ds:[rsi]
   1400095b7:	outs   dx,BYTE PTR ds:[rsi]
   1400095b8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400095bd:	outs   dx,BYTE PTR ds:[rsi]
   1400095be:	xor    dl,BYTE PTR [rdi+0x0]
   1400095c1:	add    BYTE PTR [rbp+0x50],cl
   1400095c4:	push   rdx
   1400095c5:	cs fs ins BYTE PTR es:[rdi],dx
   1400095c8:	ins    BYTE PTR es:[rdi],dx
   1400095c9:	add    BYTE PTR [rsi],al
   1400095cb:	add    BYTE PTR [rdi+0x65],al
   1400095ce:	je     0x140009616
   1400095d0:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   1400095d8:	outs   dx,DWORD PTR ds:[rsi]
   1400095d9:	outs   dx,BYTE PTR ds:[rsi]
   1400095da:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400095dc:	outs   dx,WORD PTR ds:[rsi]
   1400095de:	push   rbx
   1400095df:	imul   edi,DWORD PTR [rdx+0x65],0x577845
   1400095e6:	add    eax,DWORD PTR [rax]
   1400095e8:	rex.RXB
   1400095e9:	gs je  0x140009632
   1400095ec:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   1400095f4:	outs   dx,DWORD PTR ds:[rsi]
   1400095f5:	outs   dx,BYTE PTR ds:[rsi]
   1400095f6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400095f8:	outs   dx,WORD PTR ds:[rsi]
   1400095fa:	rex.RB js 0x140009654
   1400095fd:	add    BYTE PTR [rax],dl
   1400095ff:	add    BYTE PTR [rsi+0x65],dl
   140009602:	jb     0x140009655
   140009604:	jne    0x14000966b
   140009606:	jb     0x140009681
   140009608:	push   rsi
   140009609:	(bad)  
   14000960a:	ins    BYTE PTR es:[rdi],dx
   14000960b:	jne    0x140009672
   14000960d:	push   rdi
   14000960e:	add    BYTE PTR [rax],al
   140009610:	push   rsi
   140009611:	rex.RB push r10
   140009613:	push   rbx
   140009614:	rex.WB
   140009615:	rex.WRXB
   140009616:	rex.WRX
   140009617:	cs fs ins BYTE PTR es:[rdi],dx
   14000961a:	ins    BYTE PTR es:[rdi],dx
   14000961b:	add    BYTE PTR [rax],ah
   14000961d:	add    BYTE PTR [rsi+0x65],cl
   140009620:	je     0x140009675
   140009622:	gs jb  0x14000969b
   140009625:	gs jb  0x14000966f
   140009628:	gs je  0x140009674
   14000962b:	outs   dx,BYTE PTR ds:[rsi]
   14000962c:	outs   dx,WORD PTR ds:[rsi]
   14000962e:	add    BYTE PTR [rax],al
   140009630:	jae    0x1400096a4
   140009632:	jbe    0x140009697
   140009634:	ins    BYTE PTR es:[rdi],dx
   140009635:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   14000963b:	add    BYTE PTR [rcx],al
   14000963d:	add    BYTE PTR [rsi+0x65],cl
   140009640:	je     0x140009683
   140009642:	jo     0x1400096ad
   140009644:	rex.X jne 0x1400096ad
   140009647:	data16 gs jb 0x140009691
   14000964b:	jb     0x1400096b2
   14000964d:	add    BYTE PTR gs:[rax],al
   140009650:	outs   dx,BYTE PTR ds:[rsi]
   140009651:	gs je  0x1400096c9
   140009654:	je     0x1400096bf
   140009656:	ins    BYTE PTR es:[rdi],dx
   140009657:	jae    0x140009687
   140009659:	fs ins BYTE PTR es:[rdi],dx
   14000965b:	ins    BYTE PTR es:[rdi],dx
   14000965c:	add    BYTE PTR [rax],al
   14000965e:	sbb    DWORD PTR [rax],eax
   140009660:	rex.RXB
   140009661:	gs je  0x1400096b9
   140009664:	jae    0x1400096cb
   140009666:	jb     0x1400096b6
   140009668:	(bad)  
   140009669:	ins    DWORD PTR es:[rdi],dx
   14000966a:	gs rex.RB js 0x1400096c5
   14000966e:	add    BYTE PTR [rax],al
   140009670:	push   rbx
   140009671:	jae    0x1400096e3
   140009673:	imul   eax,DWORD PTR [rbx+0x6c],0x6c642e69
   14000967a:	ins    BYTE PTR es:[rdi],dx
   14000967b:	add    BYTE PTR [rbp+0x5],ch
   14000967e:	push   rbx
   14000967f:	ins    BYTE PTR es:[rdi],dx
   140009680:	gs gs jo 0x140009684
   140009684:	pop    rsi
   140009685:	add    eax,0x55746553
   14000968a:	outs   dx,BYTE PTR ds:[rsi]
   14000968b:	push   0x6c646e61
   140009690:	gs fs rex.RB js 0x1400096f8
   140009695:	gs jo  0x14000970c
   140009698:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000969f:	gs jb  0x1400096a2
   1400096a2:	outs   dx,BYTE PTR ds:[rsi]
   1400096a3:	add    al,BYTE PTR [rdi+0x65]
   1400096a6:	je     0x1400096f5
   1400096a8:	outs   dx,DWORD PTR ds:[rsi]
   1400096a9:	fs jne 0x140009718
   1400096ac:	gs rex.W (bad) 
   1400096af:	outs   dx,BYTE PTR ds:[rsi]
   1400096b0:	fs ins BYTE PTR es:[rdi],dx
   1400096b2:	gs push rdi
   1400096b4:	add    BYTE PTR [rax],al
   1400096b6:	ss add al,0x51
   1400096b9:	jne    0x140009720
   1400096bb:	jb     0x140009736
   1400096bd:	push   rax
   1400096be:	gs jb  0x140009727
   1400096c1:	outs   dx,DWORD PTR ds:[rsi]
   1400096c2:	jb     0x140009731
   1400096c4:	(bad)  
   1400096c5:	outs   dx,BYTE PTR ds:[rsi]
   1400096c6:	movsxd esp,DWORD PTR [rbp+0x43]
   1400096c9:	outs   dx,DWORD PTR ds:[rsi]
   1400096ca:	jne    0x14000973a
   1400096cc:	je     0x140009733
   1400096ce:	jb     0x1400096d0
   1400096d0:	adc    DWORD PTR [rdx],eax
   1400096d2:	rex.RXB
   1400096d3:	gs je  0x140009719
   1400096d6:	jne    0x14000974a
   1400096d8:	jb     0x14000973f
   1400096da:	outs   dx,BYTE PTR ds:[rsi]
   1400096db:	je     0x14000972d
   1400096dd:	jb     0x14000974e
   1400096df:	movsxd esp,DWORD PTR [rbp+0x73]
   1400096e2:	jae    0x14000972d
   1400096e4:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465dded
   1400096eb:	rex.XB jne 0x140009760
   1400096ee:	jb     0x140009755
   1400096f0:	outs   dx,BYTE PTR ds:[rsi]
   1400096f1:	je     0x140009747
   1400096f3:	push   0x64616572
   1400096f8:	rex.WB
   1400096f9:	add    BYTE PTR fs:[rax],al
   1400096fc:	loopne 0x140009700
   1400096fe:	rex.RXB
   1400096ff:	gs je  0x140009755
   140009702:	jns    0x140009777
   140009704:	je     0x14000976b
   140009706:	ins    DWORD PTR es:[rdi],dx
   140009707:	push   rsp
   140009708:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000970f:	ins    BYTE PTR es:[rdi],dx
   140009710:	gs push rsp
   140009712:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140009719:	gs je  0x140009770
   14000971c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140009723:	je     0x140009725
   140009725:	add    BYTE PTR [rsi+0x686e5505],bl
   14000972b:	(bad)  
   14000972c:	outs   dx,BYTE PTR ds:[rsi]
   14000972d:	fs ins BYTE PTR es:[rdi],dx
   14000972f:	gs fs rex.RB js 0x140009797
   140009734:	gs jo  0x1400097ab
   140009737:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000973e:	gs jb  0x140009741
   140009741:	add    BYTE PTR [rax],dl
   140009743:	add    al,BYTE PTR [rdi+0x65]
   140009746:	je     0x14000978b
   140009748:	jne    0x1400097bc
   14000974a:	jb     0x1400097b1
   14000974c:	outs   dx,BYTE PTR ds:[rsi]
   14000974d:	je     0x14000979f
   14000974f:	jb     0x1400097c0
   140009751:	movsxd esp,DWORD PTR [rbp+0x73]
   140009754:	jae    0x140009756
   140009756:	jl     0x14000975d
   140009758:	push   rsp
   140009759:	gs jb  0x1400097c9
   14000975c:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140009763:	outs   dx,DWORD PTR ds:[rsi]
   140009764:	movsxd esp,DWORD PTR [rbp+0x73]
   140009767:	jae    0x140009769
   140009769:	add    BYTE PTR [rbx+0x5],dl
   14000976c:	push   rbx
   14000976d:	gs je  0x1400097c4
   140009770:	push   0x64616572
   140009775:	push   rbp
   140009776:	rex.WB
   140009777:	rex.WR (bad) 
   140009779:	outs   dx,BYTE PTR ds:[rsi]
   14000977a:	addr32 jne 0x1400097de
   14000977d:	add    BYTE PTR gs:[eax+0x726f4601],ah
   140009785:	ins    DWORD PTR es:[rdi],dx
   140009786:	(bad)  
   140009787:	je     0x1400097d6
   140009789:	gs jae 0x1400097ff
   14000978c:	(bad)  
   14000978d:	addr32 gs push rdi
   140009790:	add    BYTE PTR [rax],al
   140009792:	mov    ecx,0x636f4c03
   140009797:	(bad)  
   140009798:	ins    BYTE PTR es:[rdi],dx
   140009799:	rex.RX jb 0x140009801
   14000979c:	add    BYTE PTR gs:[rsi+0x2],al
   1400097a0:	rex.RXB
   1400097a1:	gs je  0x1400097ea
   1400097a4:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   1400097ac:	cmc    
   1400097ad:	add    DWORD PTR [rdi+0x65],eax
   1400097b0:	je     0x1400097f5
   1400097b2:	outs   dx,DWORD PTR ds:[rsi]
   1400097b3:	outs   dx,BYTE PTR ds:[rsi]
   1400097b4:	jae    0x140009825
   1400097b6:	ins    BYTE PTR es:[rdi],dx
   1400097b7:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   1400097ba:	fs add BYTE PTR gs:[rax],al
   1400097be:	leave  
   1400097bf:	add    al,BYTE PTR [rdi+0x65]
   1400097c2:	je     0x140009817
   1400097c4:	je     0x14000982a
   1400097c6:	rex.W (bad) 
   1400097c8:	outs   dx,BYTE PTR ds:[rsi]
   1400097c9:	fs ins BYTE PTR es:[rdi],dx
   1400097cb:	add    BYTE PTR gs:[rax],al
   1400097ce:	sub    eax,0x74736c06
   1400097d3:	jb     0x140009841
   1400097d5:	outs   dx,BYTE PTR gs:[rsi]
   1400097d7:	add    BYTE PTR [r8],al
   1400097da:	cs (bad) 
   1400097dc:	ins    BYTE PTR es:[rdi],dx
   1400097dd:	jae    0x140009853
   1400097df:	jb     0x14000984d
   1400097e1:	outs   dx,BYTE PTR gs:[rsi]
   1400097e3:	push   rdi
   1400097e4:	add    BYTE PTR [rax],al
   1400097e6:	xchg   ecx,eax
   1400097e7:	add    BYTE PTR [rbx+0x6f],al
   1400097ea:	ins    DWORD PTR es:[rdi],dx
   1400097eb:	jo     0x14000984e
   1400097ed:	jb     0x140009854
   1400097ef:	push   rbx
   1400097f0:	je     0x140009864
   1400097f2:	imul   ebp,DWORD PTR [rsi+0x67],0xf5000057
   1400097f9:	add    al,BYTE PTR [rdi+0x65]
   1400097fc:	je     0x140009852
   1400097fe:	push   0x64616572
   140009803:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009805:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009808:	add    BYTE PTR gs:[rsi+0x6d6f4300],cl
   14000980f:	jo     0x140009872
   140009811:	jb     0x140009878
   140009813:	push   rbx
   140009814:	je     0x140009888
   140009816:	imul   ebp,DWORD PTR [rsi+0x67],0xff000041
   14000981d:	add    eax,0x74697257
   140009822:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140009825:	outs   dx,BYTE PTR ds:[rsi]
   140009826:	jae    0x140009897
   140009828:	ins    BYTE PTR es:[rdi],dx
   140009829:	gs push rdi
   14000982b:	add    BYTE PTR [rdi+0x1],dl
   14000982e:	rex.RB js 0x14000989a
   140009831:	je     0x140009883
   140009833:	jb     0x1400098a4
   140009835:	movsxd esp,DWORD PTR [rbp+0x73]
   140009838:	jae    0x14000983a
   14000983a:	fadd   DWORD PTR [rbx]
   14000983c:	rex.WRB jne 0x1400098ab
   14000983f:	je     0x1400098aa
   140009841:	rex.X jns 0x1400098b8
   140009844:	gs push rsp
   140009846:	outs   dx,DWORD PTR ds:[rsi]
   140009847:	push   rdi
   140009848:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140009850:	jmp    0x140009856
   140009852:	push   rbx
   140009853:	gs je  0x140009899
   140009856:	outs   dx,DWORD PTR ds:[rsi]
   140009857:	outs   dx,BYTE PTR ds:[rsi]
   140009858:	jae    0x1400098c9
   14000985a:	ins    BYTE PTR es:[rdi],dx
   14000985b:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000985e:	fs add BYTE PTR gs:[rax],al
   140009862:	pop    rdx
   140009863:	add    al,0x52
   140009865:	gs (bad) 
   140009867:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14000986a:	outs   dx,BYTE PTR ds:[rsi]
   14000986b:	jae    0x1400098dc
   14000986d:	ins    BYTE PTR es:[rdi],dx
   14000986e:	gs push rdi
   140009870:	add    BYTE PTR [rax],al
   140009872:	stos   DWORD PTR es:[rdi],eax
   140009873:	add    al,BYTE PTR [rdi+0x65]
   140009876:	je     0x1400098c8
   140009878:	jb     0x1400098e9
   14000987a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000987d:	jae    0x1400098c7
   14000987f:	gs (bad) 
   140009881:	jo     0x140009883
   140009883:	add    BYTE PTR [rax+0x3],al
   140009886:	rex.W
   140009887:	gs (bad) 
   140009889:	jo     0x1400098d1
   14000988b:	jb     0x1400098f2
   14000988d:	add    BYTE PTR gs:[rax],al
   140009890:	add    rcx,QWORD PTR [rax+0x65]
   140009894:	(bad)  
   140009895:	jo     0x1400098ed
   140009897:	(bad)  
   140009898:	ins    BYTE PTR es:[rdi],dx
   140009899:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x3c000065
   1400098a1:	add    ecx,DWORD PTR [rax+0x65]
   1400098a4:	(bad)  
   1400098a5:	jo     0x1400098e8
   1400098a7:	ins    BYTE PTR es:[rdi],dx
   1400098a8:	ins    BYTE PTR es:[rdi],dx
   1400098a9:	outs   dx,DWORD PTR ds:[rsi]
   1400098aa:	movsxd eax,DWORD PTR [rax]
   1400098ac:	rex.XB add ecx,DWORD PTR [r8+0x65]
   1400098b0:	(bad)  
   1400098b1:	jo     0x140009905
   1400098b3:	gs rex.B ins BYTE PTR es:[rdi],dx
   1400098b6:	ins    BYTE PTR es:[rdi],dx
   1400098b7:	outs   dx,DWORD PTR ds:[rsi]
   1400098b8:	movsxd eax,DWORD PTR [rax]
   1400098ba:	add    r9d,DWORD PTR [r8+0x65]
   1400098be:	(bad)  
   1400098bf:	jo     0x140009914
   1400098c1:	imul   edi,DWORD PTR [rdx+0x65],0x1d70000
   1400098c8:	rex.RXB
   1400098c9:	gs je  0x14000990f
   1400098cc:	outs   dx,DWORD PTR ds:[rsi]
   1400098cd:	ins    DWORD PTR es:[rdi],dx
   1400098ce:	jo     0x140009945
   1400098d0:	je     0x140009937
   1400098d2:	jb     0x140009922
   1400098d4:	(bad)  
   1400098d5:	ins    DWORD PTR es:[rdi],dx
   1400098d6:	gs rex.RB js 0x140009931
   1400098da:	add    BYTE PTR [rax],al
   1400098dc:	push   0x2
   1400098de:	rex.RXB
   1400098df:	gs je  0x14000992f
   1400098e2:	outs   dx,DWORD PTR ds:[rsi]
   1400098e3:	fs jne 0x140009952
   1400098e6:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   1400098f0:	add    BYTE PTR [rax],al
   1400098f2:	add    DWORD PTR [rax],0x6f695f5f
   1400098f8:	(bad)  
   1400098f9:	pop    rdi
   1400098fa:	data16 jne 0x14000996b
   1400098fd:	movsxd eax,DWORD PTR [rax]
   1400098ff:	add    BYTE PTR [rdx+0x656d5f02],al
   140009905:	ins    DWORD PTR es:[rdi],dx
   140009906:	imul   esp,DWORD PTR [rbx+0x6d],0x5000070
   14000990d:	add    DWORD PTR [rdi+0x65],ebx
   140009910:	jb     0x140009984
   140009912:	outs   dx,BYTE PTR ds:[rsi]
   140009913:	outs   dx,DWORD PTR ds:[rsi]
   140009914:	add    BYTE PTR [rax],al
   140009916:	adc    eax,0x73637705
   14000991b:	je     0x14000998c
   14000991d:	add    BYTE PTR fs:[rax],al
   140009920:	sbb    BYTE PTR [rip+0x74736377],al        # 0x1b473fc9d
   140009926:	outs   dx,DWORD PTR ds:[rsi]
   140009927:	ins    BYTE PTR es:[rdi],dx
   140009928:	add    BYTE PTR [rax],al
   14000992a:	sbb    eax,DWORD PTR [rip+0x74736377]        # 0x1b473fca7
   140009930:	outs   dx,DWORD PTR ds:[rsi]
   140009931:	jne    0x14000999f
   140009933:	add    BYTE PTR [rbx],bl
   140009935:	add    DWORD PTR [rdi+0x66],ebx
   140009938:	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x155006f
   140009940:	pop    rdi
   140009941:	addr32 gs je 0x1400099a4
   140009945:	outs   dx,DWORD PTR ds:[rsi]
   140009946:	jae    0x1400099ae
   140009948:	push   0x6c646e61
   14000994d:	add    BYTE PTR gs:[rax],al
   140009950:	rex.RB add al,0x66
   140009953:	jo     0x1400099c7
   140009955:	imul   ebp,DWORD PTR [rsi+0x74],0x4390066
   14000995c:	data16 data16 ins BYTE PTR es:[rdi],dx
   14000995f:	jne    0x1400099d4
   140009961:	push   0x5160000
   140009966:	ja     0x1400099cb
   140009968:	jae    0x1400099de
   14000996a:	outs   dx,DWORD PTR ds:[rsi]
   14000996b:	imul   eax,DWORD PTR [rax],0x0
   14000996e:	xchg   esi,eax
   14000996f:	add    al,0x6d
   140009971:	gs ins DWORD PTR es:[rdi],dx
   140009973:	jae    0x1400099da
   140009975:	je     0x140009977
   140009977:	add    BYTE PTR [rbx+0x0],bl
   14000997a:	pop    rdi
   14000997b:	pop    rdi
   14000997c:	rex.XB js 0x1400099f7
   14000997f:	rex.RX jb 0x1400099e3
   140009982:	ins    DWORD PTR es:[rdi],dx
   140009983:	gs rex.W (bad) 
   140009986:	outs   dx,BYTE PTR ds:[rsi]
   140009987:	fs ins BYTE PTR es:[rdi],dx
   140009989:	gs jb  0x1400099bf
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	add    DWORD PTR [rax],eax
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	int    0x5d
   14000a012:	and    dl,dl
   14000a014:	data16 (bad) 
   14000a016:	(bad)  
   14000a017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	or     BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	jg     0x14000b016
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	enter  0x89,0x0
   14000b00c:	mov    BYTE PTR [rax],dl
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	(bad)
   14000b013:	add    al,bl
   14000b015:	mov    DWORD PTR [rax],eax
   14000b017:	add    ah,cl
   14000b019:	adc    BYTE PTR [rax],al
   14000b01b:	add    BYTE PTR [rdx-0x1fffffef],bh
   14000b021:	mov    DWORD PTR [rax],eax
   14000b023:	add    al,al
   14000b025:	adc    DWORD PTR [rax],eax
   14000b027:	add    BYTE PTR [rbx+0x18],al
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	in     al,dx
   14000b02d:	mov    DWORD PTR [rax],eax
   14000b02f:	add    BYTE PTR [rax+rbx*1+0x0],cl
   14000b033:	add    ch,dl
   14000b035:	sbb    eax,0x8a100000
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	fcomp  QWORD PTR [rip+0x207e0000]        # 0x1607eb042
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	sub    al,0x8a
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	test   BYTE PTR [rax],ah
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	(bad)  
   14000b04d:	and    DWORD PTR [rax],eax
   14000b04f:	add    BYTE PTR [rdx+rcx*4+0x0],al
   14000b053:	add    al,dl
   14000b055:	and    DWORD PTR [rax],eax
   14000b057:	add    BYTE PTR [rsi+0x58000023],dl
   14000b05d:	mov    al,BYTE PTR [rax]
   14000b05f:	add    BYTE PTR [rbx+riz*1+0x24760000],bl
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	fmul   DWORD PTR [rcx+0x247c0000]
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	fbld   TBYTE PTR [rax+rax*1]
   14000b073:	add    al,bl
   14000b075:	mov    DWORD PTR [rax],eax
   14000b077:	add    al,ch
   14000b079:	and    al,0x0
   14000b07b:	add    BYTE PTR [rbx],al
   14000b07d:	(bad)  
   14000b07e:	add    BYTE PTR [rax],al
   14000b080:	movabs al,ds:0xc20000274c00008a
   14000b089:	(bad)  
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	loopne 0x14000b017
   14000b08e:	add    BYTE PTR [rax],al
   14000b090:	enter  0x27,0x0
   14000b094:	sti    
   14000b095:	sub    BYTE PTR [rax],al
   14000b097:	add    BYTE PTR [rdx+rcx*4+0x29040000],dh
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b0a1:	sub    DWORD PTR [rax],eax
   14000b0a3:	add    al,cl
   14000b0a5:	mov    al,BYTE PTR [rax]
   14000b0a7:	add    BYTE PTR [rax+0x67000029],dh
   14000b0ad:	sub    al,BYTE PTR [rax]
   14000b0af:	add    al,dl
   14000b0b1:	mov    al,BYTE PTR [rax]
   14000b0b3:	add    BYTE PTR [rax+0x2a],dh
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	stos   BYTE PTR es:[rdi],al
   14000b0b9:	sub    al,BYTE PTR [rax]
   14000b0bb:	add    al,ah
   14000b0bd:	mov    DWORD PTR [rax],eax
   14000b0bf:	add    BYTE PTR [rax-0x15ffffd6],dh
   14000b0c5:	sub    eax,DWORD PTR [rax]
   14000b0c7:	add    al,ah
   14000b0c9:	mov    al,BYTE PTR [rax]
   14000b0cb:	add    al,dh
   14000b0cd:	sub    eax,DWORD PTR [rax]
   14000b0cf:	add    BYTE PTR [rax-0x13ffffd4],ch
   14000b0d5:	mov    al,BYTE PTR [rax]
   14000b0d7:	add    al,ch
   14000b0d9:	sub    al,0x0
   14000b0db:	add    BYTE PTR [rdi],ah
   14000b0dd:	(bad)  
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	cld    
   14000b0e1:	mov    al,BYTE PTR [rax]
   14000b0e3:	add    BYTE PTR [rax],dh
   14000b0e5:	(bad)  
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	loop   0x14000b119
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	adc    BYTE PTR [rbx+0x2fe80000],cl
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	mov    dh,0x30
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	fmul   DWORD PTR [rcx+0x30bc0000]
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	xchg   esp,eax
   14000b101:	xor    DWORD PTR [rax],eax
   14000b103:	add    al,ah
   14000b105:	mov    DWORD PTR [rax],eax
   14000b107:	add    BYTE PTR [rcx+rsi*1+0x31fd0000],bl
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	loopne 0x14000b09b
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	add    al,0x32
   14000b116:	add    BYTE PTR [rax],al
   14000b118:	and    DWORD PTR [rbx],esi
   14000b11a:	add    BYTE PTR [rax],al
   14000b11c:	sbb    al,0x8b
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	sub    BYTE PTR [rbx],dh
   14000b122:	add    BYTE PTR [rax],al
   14000b124:	(bad)  
   14000b125:	xor    eax,DWORD PTR [rax]
   14000b127:	add    BYTE PTR [rax],bh
   14000b129:	mov    eax,DWORD PTR [rax]
   14000b12b:	add    al,dl
   14000b12d:	xor    eax,DWORD PTR [rax]
   14000b12f:	add    BYTE PTR [rbp+0x34],ch
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	cmp    BYTE PTR [rbx+0x34740000],cl
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	mov    WORD PTR [rip+0xffffffff8b4c0000],?        # 0xcb4cb142
   14000b142:	add    BYTE PTR [rax],al
   14000b144:	xchg   esp,eax
   14000b145:	xor    eax,0x35e30000
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	push   0xffffffffec00008b
   14000b151:	xor    eax,0x36af0000
   14000b156:	add    BYTE PTR [rax],al
   14000b158:	js     0x14000b0e5
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	mov    eax,0x39000036
   14000b161:	(bad)  
   14000b162:	add    BYTE PTR [rax],al
   14000b164:	mov    BYTE PTR [rbx+0x37400000],cl
   14000b16a:	add    BYTE PTR [rax],al
   14000b16c:	(bad)  [rdi]
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	fmul   DWORD PTR [rcx+0x37e40000]
   14000b176:	add    BYTE PTR [rax],al
   14000b178:	(bad)  
   14000b179:	cmp    BYTE PTR [rax],al
   14000b17b:	add    al,ah
   14000b17d:	mov    DWORD PTR [rax],eax
   14000b17f:	add    ah,dl
   14000b181:	cmp    BYTE PTR [rax],al
   14000b183:	add    BYTE PTR [rbx+0x39],bl
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	nop
   14000b189:	mov    eax,DWORD PTR [rax]
   14000b18b:	add    BYTE PTR [rcx+rdi*1+0x0],ah
   14000b18f:	add    BYTE PTR [rdi-0x5bffffc4],bl
   14000b195:	mov    eax,DWORD PTR [rax]
   14000b197:	add    BYTE PTR [rax-0x56ffffc4],ch
   14000b19d:	add    BYTE PTR ds:[rax],al
   14000b1a0:	ror    BYTE PTR [rbx+0x3eb00000],0x0
   14000b1a7:	add    ch,al
   14000b1a9:	(bad)  
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	nop
   14000b1ad:	mov    eax,DWORD PTR [rax]
   14000b1af:	add    ah,cl
   14000b1b1:	(bad)  
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	fild   DWORD PTR [rdx+0x0]
   14000b1b7:	add    ah,dl
   14000b1b9:	mov    eax,DWORD PTR [rax]
   14000b1bb:	add    ah,ah
   14000b1bd:	rex.X add BYTE PTR [rax],al
   14000b1c0:	data16 rex.XB add BYTE PTR [r8],al
   14000b1c4:	loopne 0x14000b14f
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	ins    BYTE PTR es:[rdi],dx
   14000b1c9:	rex.XB add BYTE PTR [r8],al
   14000b1cc:	mov    bh,0x43
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	fmul   DWORD PTR [rcx+0x43c00000]
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	pop    rdx
   14000b1d9:	add    BYTE PTR [rax],r8b
   14000b1dc:	clc    
   14000b1dd:	mov    eax,DWORD PTR [rax]
   14000b1df:	add    BYTE PTR [rax+0x44],ah
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	(bad)  
   14000b1e5:	add    BYTE PTR [r8],r8b
   14000b1e8:	sbb    BYTE PTR [rax+rax*1+0x456800],cl
   14000b1ef:	add    BYTE PTR [rdx-0x27ffffbb],bh
   14000b1f5:	mov    DWORD PTR [rax],eax
   14000b1f7:	add    al,al
   14000b1f9:	add    BYTE PTR [r8],r8b
   14000b1fc:	and    DWORD PTR [rsi+0x0],eax
   14000b1ff:	add    al,ah
   14000b201:	mov    DWORD PTR [rax],eax
   14000b203:	add    BYTE PTR [rax],ch
   14000b205:	rex.RX add BYTE PTR [rax],r8b
   14000b208:	sti    
   14000b209:	rex.RXB add BYTE PTR [r8],r8b
   14000b20c:	cmp    al,0x8c
   14000b20e:	add    BYTE PTR [rax],al
   14000b210:	add    al,0x48
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	dec    BYTE PTR [rax+0x0]
   14000b217:	add    BYTE PTR [rsp+rcx*4+0x0],dl
   14000b21b:	add    BYTE PTR [rcx+rcx*2],al
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	fmul   DWORD PTR [rcx+0x0]
   14000b223:	add    BYTE PTR [rax-0x74],ch
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	loopne 0x14000b273
   14000b22a:	add    BYTE PTR [rax],al
   14000b22c:	xchg   esp,eax
   14000b22d:	rex.WXB add BYTE PTR [r8],al
   14000b230:	jl     0x14000b1be
   14000b232:	add    BYTE PTR [rax],al
   14000b234:	pushf  
   14000b235:	rex.WXB add BYTE PTR [r8],al
   14000b238:	ja     0x14000b286
   14000b23a:	add    BYTE PTR [rax],al
   14000b23c:	cwde   
   14000b23d:	mov    WORD PTR [rax],es
   14000b23f:	add    BYTE PTR [rax+0x5600004c],al
   14000b245:	rex.WRX add BYTE PTR [rax],r8b
   14000b248:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b249:	mov    WORD PTR [rax],es
   14000b24b:	add    BYTE PTR [rsi+rcx*2+0x0],bl
   14000b24f:	add    BYTE PTR [rax],ch
   14000b251:	rex.WRXB add BYTE PTR [r8],r8b
   14000b254:	fmul   DWORD PTR [rcx+0x4f300000]
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	cmp    BYTE PTR [rbx+0x0],dl
   14000b25f:	add    BYTE PTR [rax+0x4000008c],bh
   14000b265:	push   rbx
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	jns    0x14000b2c0
   14000b26a:	add    BYTE PTR [rax],al
   14000b26c:	ror    BYTE PTR [rax+rax*1+0x568000],1
   14000b273:	add    BYTE PTR [rbx],bh
   14000b275:	push   rdi
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	push   0x4400008b
   14000b27d:	push   rdi
   14000b27e:	add    BYTE PTR [rax],al
   14000b280:	sub    BYTE PTR [rdx+0x0],bl
   14000b283:	add    BYTE PTR [rax],dl
   14000b285:	mov    al,BYTE PTR [rax]
   14000b287:	add    BYTE PTR [rax],dh
   14000b289:	pop    rdx
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	(bad)  
   14000b28d:	(bad)  
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	call   0x16800b321
   14000b295:	(bad)  
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	sub    DWORD PTR [rcx+0x0],esp
   14000b29b:	add    BYTE PTR [rax],cl
   14000b29d:	lea    eax,[rax]
   14000b29f:	add    BYTE PTR [rax],dh
   14000b2a1:	(bad)  
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	push   rsp
   14000b2a5:	(bad)  
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	sbb    al,0x8d
   14000b2aa:	add    BYTE PTR [rax],al
   14000b2ac:	pop    rsp
   14000b2ad:	(bad)  
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	add    BYTE PTR [rbx+0x0],ah
   14000b2b3:	add    BYTE PTR [rax],bh
   14000b2b5:	mov    eax,DWORD PTR [rax]
   14000b2b7:	add    BYTE PTR [rax],cl
   14000b2b9:	movsxd eax,DWORD PTR [rax]
   14000b2bb:	add    BYTE PTR [rax+0x34000066],dl
   14000b2c1:	lea    eax,[rax]
   14000b2c3:	add    al,bl
   14000b2c5:	data16 add BYTE PTR [rax],al
   14000b2c8:	ins    DWORD PTR es:[rdi],dx
   14000b2c9:	add    BYTE PTR [eax],al
   14000b2cc:	cmp    BYTE PTR [rbx+0x67740000],cl
   14000b2d2:	add    BYTE PTR [rax],al
   14000b2d4:	out    dx,al
   14000b2d5:	add    BYTE PTR [eax],al
   14000b2d8:	lea    r8,[rax]
   14000b2db:	add    ah,dh
   14000b2dd:	add    BYTE PTR [eax],al
   14000b2e0:	int3   
   14000b2e1:	push   0xffffffff8d540000
   14000b2e6:	add    BYTE PTR [rax],al
   14000b2e8:	(bad)  
   14000b2e9:	push   0x69350000
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	ins    BYTE PTR es:[rdi],dx
   14000b2f1:	lea    eax,[rax]
   14000b2f3:	add    BYTE PTR [rcx+rbp*2],bh
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	mov    cl,0x69
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	js     0x14000b289
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	mov    eax,0x45000069
   14000b305:	push   0x0
   14000b307:	add    BYTE PTR [rax-0x73],bh
   14000b30a:	add    BYTE PTR [rax],al
   14000b30c:	rex.WR push 0x0
   14000b30f:	add    BYTE PTR [rsi-0x67ffff96],ch
   14000b315:	mov    WORD PTR [rax],es
   14000b317:	add    BYTE PTR [rdx+rbp*2+0x6b160000],dh
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	cwde   
   14000b321:	mov    WORD PTR [rax],es
   14000b323:	add    BYTE PTR [rbx+rbp*2],bl
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	(bad)  
   14000b329:	imul   eax,DWORD PTR [rax],0x0
   14000b32c:	mov    WORD PTR [rbp+0x6b880000],cs
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	out    dx,al
   14000b335:	imul   eax,DWORD PTR [rax],0x0
   14000b338:	mov    WORD PTR [rbp+0x6bf40000],cs
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	movabs al,ds:0xa800008d9800006c
   14000b349:	ins    BYTE PTR es:[rdi],dx
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	(bad)  
   14000b34d:	ins    BYTE PTR es:[rdi],dx
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	push   0x400008b
   14000b355:	ins    DWORD PTR es:[rdi],dx
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	rex.XB ins DWORD PTR es:[rdi],dx
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	mov    BYTE PTR [rbx+0x6d4c0000],cl
   14000b362:	add    BYTE PTR [rax],al
   14000b364:	lods   eax,DWORD PTR ds:[rsi]
   14000b365:	ins    DWORD PTR es:[rdi],dx
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	mov    BYTE PTR [rbx+0x6db40000],cl
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	(bad)  
   14000b371:	outs   dx,BYTE PTR ds:[rsi]
   14000b372:	add    BYTE PTR [rax],al
   14000b374:	test   al,0x8d
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	mov    BYTE PTR [rsi+0x0],ch
   14000b37b:	add    bh,dl
   14000b37d:	outs   dx,BYTE PTR ds:[rsi]
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	mov    BYTE PTR [rbx+0x6ee00000],cl
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	scas   eax,DWORD PTR es:[rdi]
   14000b389:	outs   dx,DWORD PTR ds:[rsi]
   14000b38a:	add    BYTE PTR [rax],al
   14000b38c:	mov    BYTE PTR [rbx+0x6fc00000],cl
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	or     DWORD PTR [rax+0x0],esi
   14000b397:	add    al,al
   14000b399:	lea    eax,[rax]
   14000b39b:	add    BYTE PTR [rax],dl
   14000b39d:	jo     0x14000b39f
   14000b39f:	add    dl,ah
   14000b3a1:	jno    0x14000b3a3
   14000b3a3:	add    al,cl
   14000b3a5:	lea    eax,[rax]
   14000b3a7:	add    al,dh
   14000b3a9:	jno    0x14000b3ab
   14000b3ab:	add    BYTE PTR [rdx],al
   14000b3ad:	jb     0x14000b3af
   14000b3af:	add    BYTE PTR [rax+0x2000008b],cl
   14000b3b5:	jb     0x14000b3b7
   14000b3b7:	add    BYTE PTR [rsi],bh
   14000b3b9:	jb     0x14000b3bb
   14000b3bb:	add    BYTE PTR [rax],al
   14000b3bd:	mov    es,WORD PTR [rax]
   14000b3bf:	add    BYTE PTR [rax+0x72],dl
   14000b3c2:	add    BYTE PTR [rax],al
   14000b3c4:	mov    DWORD PTR [rdx+0x0],esi
   14000b3c7:	add    BYTE PTR [rax-0x6fffff75],cl
   14000b3cd:	jb     0x14000b3cf
   14000b3cf:	add    BYTE PTR [rax-0x77ffff8e],ch
   14000b3d5:	mov    eax,DWORD PTR [rax]
   14000b3d7:	add    BYTE PTR [rdx+rsi*2+0x73100000],bh
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	add    al,0x8e
   14000b3e2:	add    BYTE PTR [rax],al
   14000b3e4:	sbb    BYTE PTR [rbx+0x0],dh
   14000b3e7:	add    BYTE PTR [rbp+0x73],bl
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	fmul   DWORD PTR [rcx+0x73c00000]
   14000b3f2:	add    BYTE PTR [rax],al
   14000b3f4:	or     eax,0x24000074
   14000b3f9:	mov    es,WORD PTR [rax]
   14000b3fb:	add    BYTE PTR [rsp+rsi*2+0x0],dl
   14000b3ff:	add    BYTE PTR [rsi*2-0x71b80000],ah
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	ins    BYTE PTR es:[rdi],dx
   14000b409:	jne    0x14000b40b
   14000b40b:	add    BYTE PTR [rax-0x27ffff8b],ah
   14000b411:	mov    DWORD PTR [rax],eax
   14000b413:	add    BYTE PTR [rax+0x21000075],dh
   14000b419:	ja     0x14000b41b
   14000b41b:	add    BYTE PTR [rsi+rcx*4+0x0],dl
   14000b41f:	add    BYTE PTR [rax],bh
   14000b421:	ja     0x14000b423
   14000b423:	add    BYTE PTR [rsi+0x77],dl
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	fmul   DWORD PTR [rcx+0x77680000]
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	test   DWORD PTR [rdi+0x0],esi
   14000b433:	add    BYTE PTR [rax-0x73ffff75],cl
   14000b439:	ja     0x14000b43b
   14000b43b:	add    bh,ch
   14000b43d:	ja     0x14000b43f
   14000b43f:	add    al,bl
   14000b441:	mov    DWORD PTR [rax],eax
   14000b443:	add    al,bh
   14000b445:	ja     0x14000b447
   14000b447:	add    BYTE PTR [rdi-0x57ffff88],al
   14000b44d:	lea    eax,[rax]
   14000b44f:	add    BYTE PTR [rax-0x4dffff88],dh
   14000b455:	js     0x14000b457
   14000b457:	add    BYTE PTR [rax-0x72],ah
   14000b45a:	add    BYTE PTR [rax],al
   14000b45c:	fdivr  DWORD PTR [rax+0x0]
   14000b45f:	add    dh,dh
   14000b461:	js     0x14000b463
   14000b463:	add    al,bh
   14000b465:	lea    eax,[rax]
   14000b467:	add    BYTE PTR [rax],al
   14000b469:	jns    0x14000b46b
   14000b46b:	add    BYTE PTR [rax],ah
   14000b46d:	jns    0x14000b46f
   14000b46f:	add    al,bh
   14000b471:	lea    eax,[rax]
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    DWORD PTR [rax],eax
   14000c00e:	add    al,BYTE PTR [rax]
   14000c010:	call   0x16880c015
   14000c015:	add    BYTE PTR [rax],al
   14000c017:	adc    BYTE PTR [rax],0x0
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	add    BYTE PTR [rax],al
   14000c01f:	sbb    BYTE PTR [rax],0x0
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	pop    rax
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	add    BYTE PTR [rax],0x0
	...
   14000c036:	add    DWORD PTR [rax],eax
   14000c038:	add    DWORD PTR [rax],eax
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	jo     0x14000c03e
   14000c03e:	add    BYTE PTR [rax+0x0],al
	...
   14000c04c:	add    BYTE PTR [rax],al
   14000c04e:	add    DWORD PTR [rax],eax
   14000c050:	add    DWORD PTR [rax],eax
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	mov    BYTE PTR [rax],al
   14000c056:	add    BYTE PTR [rax+0x0],al
	...
   14000c064:	add    BYTE PTR [rax],al
   14000c066:	add    DWORD PTR [rax],eax
   14000c068:	add    DWORD PTR [rax],eax
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	movabs al,ds:0x800000
	...
   14000c07d:	add    BYTE PTR [rcx],al
   14000c07f:	add    BYTE PTR [rcx],cl
   14000c081:	add    al,0x0
   14000c083:	add    BYTE PTR [rax+0x0],bh
	...
   14000c095:	add    BYTE PTR [rcx],al
   14000c097:	add    BYTE PTR [rcx],cl
   14000c099:	add    al,0x0
   14000c09b:	add    al,cl
	...
   14000c0ad:	add    BYTE PTR [rcx],al
   14000c0af:	add    BYTE PTR [rcx],cl
   14000c0b1:	add    al,0x0
   14000c0b3:	add    al,bl
   14000c0b5:	add    BYTE PTR [rax],al
   14000c0b7:	add    BYTE PTR [rax-0x39],dh
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	enter  0x0,0x0
	...
   14000c0c8:	mov    al,0xc3
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	mov    esp,0x3
   14000c0d1:	add    BYTE PTR [rax],al
   14000c0d3:	add    BYTE PTR [rax],al
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    al,dh
   14000c0d9:	rol    BYTE PTR [rax],0x0
   14000c0dc:	mov    esi,0x2
   14000c0e1:	add    BYTE PTR [rax],al
   14000c0e3:	add    BYTE PTR [rax],al
   14000c0e5:	add    BYTE PTR [rax],al
   14000c0e7:	add    BYTE PTR [rbx],al
   14000c0e9:	add    BYTE PTR [rbp+0x0],cl
   14000c0ec:	push   rbp
   14000c0ed:	add    BYTE PTR [rcx+0x0],cl
   14000c0f0:	cmp    al,0x3f
   14000c0f2:	js     0x14000c161
   14000c0f4:	ins    BYTE PTR es:[rdi],dx
   14000c0f5:	and    BYTE PTR [rsi+0x65],dh
   14000c0f8:	jb     0x14000c16d
   14000c0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c101:	xor    BYTE PTR [rdx],ah
   14000c103:	and    BYTE PTR [rbp+0x6e],ah
   14000c106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c110:	rex.RX sub eax,0x73202238
   14000c116:	je     0x14000c179
   14000c118:	outs   dx,BYTE PTR ds:[rsi]
   14000c119:	fs (bad) 
   14000c11b:	ins    BYTE PTR es:[rdi],dx
   14000c11c:	outs   dx,DWORD PTR ds:[rsi]
   14000c11d:	outs   dx,BYTE PTR ds:[rsi]
   14000c11e:	gs cmp eax,0x73657922
   14000c124:	and    bh,BYTE PTR [rdi]
   14000c126:	ds or  eax,0x2d213c0a
   14000c12c:	sub    eax,0x706f4320
   14000c131:	jns    0x14000c1a5
   14000c133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c13a:	sub    DWORD PTR [rax],esp
   14000c13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c144:	je     0x14000c166
   14000c146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c148:	jb     0x14000c1ba
   14000c14a:	outs   dx,DWORD PTR ds:[rsi]
   14000c14b:	jb     0x14000c1ae
   14000c14d:	je     0x14000c1b8
   14000c14f:	outs   dx,DWORD PTR ds:[rsi]
   14000c150:	outs   dx,BYTE PTR ds:[rsi]
   14000c151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dff84
   14000c157:	cmp    al,0x61
   14000c159:	jae    0x14000c1ce
   14000c15b:	gs ins DWORD PTR es:[rdi],dx
   14000c15d:	(bad)  
   14000c15e:	ins    BYTE PTR es:[rdi],dx
   14000c15f:	jns    0x14000c181
   14000c161:	js     0x14000c1d0
   14000c163:	ins    BYTE PTR es:[rdi],dx
   14000c164:	outs   dx,BYTE PTR ds:[rsi]
   14000c165:	jae    0x14000c1a4
   14000c167:	and    dh,BYTE PTR [rbp+0x72]
   14000c16a:	outs   dx,BYTE PTR ds:[rsi]
   14000c16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c16e:	push   0x73616d65
   14000c173:	sub    eax,0x7263696d
   14000c178:	outs   dx,DWORD PTR ds:[rsi]
   14000c179:	jae    0x14000c1ea
   14000c17b:	data16 je 0x14000c1ab
   14000c17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c184:	ins    DWORD PTR es:[rdi],dx
   14000c185:	cs jbe 0x14000c1b9
   14000c188:	and    ah,BYTE PTR [rax]
   14000c18a:	ins    DWORD PTR es:[rdi],dx
   14000c18b:	(bad)  
   14000c18c:	outs   dx,BYTE PTR ds:[rsi]
   14000c18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c194:	jb     0x14000c209
   14000c196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c19d:	xor    BYTE PTR [rdx],ah
   14000c19f:	ds or  eax,0x73613c0a
   14000c1a5:	jae    0x14000c20c
   14000c1a7:	ins    DWORD PTR es:[rdi],dx
   14000c1a8:	(bad)  
   14000c1a9:	ins    BYTE PTR es:[rdi],dx
   14000c1aa:	jns    0x14000c1f5
   14000c1ac:	fs outs dx,BYTE PTR gs:[rsi]
   14000c1af:	je     0x14000c21a
   14000c1b1:	je     0x14000c22c
   14000c1b3:	or     eax,0x2020200a
   14000c1b8:	and    BYTE PTR [rsi+0x65],dh
   14000c1bb:	jb     0x14000c230
   14000c1bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000c1c4:	xor    DWORD PTR [rsi],ebp
   14000c1c6:	xor    BYTE PTR [rsi],ch
   14000c1c8:	xor    BYTE PTR [rdx],ah
   14000c1ca:	or     eax,0x2020200a
   14000c1cf:	and    BYTE PTR [rax+0x72],dh
   14000c1d2:	outs   dx,DWORD PTR ds:[rsi]
   14000c1d3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c1d6:	jae    0x14000c247
   14000c1d8:	jb     0x14000c21b
   14000c1da:	jb     0x14000c23f
   14000c1dc:	push   0x63657469
   14000c1e1:	je     0x14000c258
   14000c1e3:	jb     0x14000c24a
   14000c1e5:	cmp    eax,0x646d6122
   14000c1ea:	ss xor al,0x22
   14000c1ed:	or     eax,0x2020200a
   14000c1f2:	and    BYTE PTR [rsi+0x61],ch
   14000c1f5:	ins    DWORD PTR es:[rdi],dx
   14000c1f6:	gs cmp eax,0x63694d22
   14000c1fc:	jb     0x14000c26d
   14000c1fe:	jae    0x14000c26f
   14000c200:	data16 je 0x14000c231
   14000c203:	push   rdi
   14000c204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c20b:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x65747379
   14000c214:	ins    DWORD PTR es:[rdi],dx
   14000c215:	cs push rdi
   14000c217:	(bad)  
   14000c218:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0xa0d2272
   14000c220:	and    BYTE PTR [rax],ah
   14000c222:	and    BYTE PTR [rax],ah
   14000c224:	je     0x14000c29f
   14000c226:	jo     0x14000c28d
   14000c228:	cmp    eax,0x6e697722
   14000c22d:	xor    esi,DWORD PTR [rdx]
   14000c22f:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3ef13f
   14000c235:	or     bh,BYTE PTR [rsp+riz*2]
   14000c238:	gs jae 0x14000c29e
   14000c23b:	jb     0x14000c2a6
   14000c23d:	jo     0x14000c2b3
   14000c23f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6961773e
   14000c246:	je     0x14000c2ae
   14000c248:	outs   dx,DWORD PTR ds:[rsi]
   14000c249:	jb     0x14000c26b
   14000c24b:	sub    eax,0x69617720
   14000c250:	je     0x14000c281
   14000c252:	jae    0x14000c2b9
   14000c254:	outs   dx,BYTE PTR ds:[rsi]
   14000c255:	and    BYTE PTR fs:[rcx+0x20],ah
   14000c259:	jae    0x14000c2c4
   14000c25b:	outs   dx,BYTE PTR ds:[esi]
   14000c25d:	(bad)  
   14000c25e:	ins    BYTE PTR es:[rdi],dx
   14000c25f:	and    BYTE PTR [rdi+0x76],ch
   14000c262:	gs jb  0x14000c285
   14000c265:	(bad)  
   14000c266:	and    BYTE PTR [rsi+0x65],ch
   14000c269:	je     0x14000c2e2
   14000c26b:	outs   dx,DWORD PTR ds:[rsi]
   14000c26c:	jb     0x14000c2d9
   14000c26e:	cmp    al,0x2f
   14000c270:	fs gs jae 0x14000c2d7
   14000c274:	jb     0x14000c2df
   14000c276:	jo     0x14000c2ec
   14000c278:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000c27f:	or     bh,BYTE PTR [rsp+rsi*2]
   14000c282:	jb     0x14000c2f9
   14000c284:	jae    0x14000c2fa
   14000c286:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c288:	outs   dx,WORD PTR ds:[rsi]
   14000c28a:	and    BYTE PTR [rax+0x6d],bh
   14000c28d:	ins    BYTE PTR es:[rdi],dx
   14000c28e:	outs   dx,BYTE PTR ds:[rsi]
   14000c28f:	jae    0x14000c2ce
   14000c291:	and    dh,BYTE PTR [rbp+0x72]
   14000c294:	outs   dx,BYTE PTR ds:[rsi]
   14000c295:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c298:	push   0x73616d65
   14000c29d:	sub    eax,0x7263696d
   14000c2a2:	outs   dx,DWORD PTR ds:[rsi]
   14000c2a3:	jae    0x14000c314
   14000c2a5:	data16 je 0x14000c2d5
   14000c2a8:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c2ab:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c2ae:	ins    DWORD PTR es:[rdi],dx
   14000c2af:	cs jbe 0x14000c2e5
   14000c2b2:	and    bh,BYTE PTR [rsi]
   14000c2b4:	or     eax,0x2020200a
   14000c2b9:	and    BYTE PTR [rbx+rsi*2],bh
   14000c2bc:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c2c0:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c2c8:	and    BYTE PTR [rax],ah
   14000c2ca:	and    BYTE PTR [rax],ah
   14000c2cc:	and    BYTE PTR [rax],ah
   14000c2ce:	cmp    al,0x72
   14000c2d0:	gs jno 0x14000c348
   14000c2d3:	gs jae 0x14000c34a
   14000c2d6:	gs fs push rax
   14000c2d9:	jb     0x14000c344
   14000c2db:	jbe    0x14000c346
   14000c2dd:	ins    BYTE PTR es:[rdi],dx
   14000c2de:	gs addr32 gs jae 0x14000c321
   14000c2e3:	or     eax,0x2020200a
   14000c2e8:	and    BYTE PTR [rax],ah
   14000c2ea:	and    BYTE PTR [rax],ah
   14000c2ec:	and    BYTE PTR [rax],ah
   14000c2ee:	and    BYTE PTR [rax],ah
   14000c2f0:	and    BYTE PTR [rdx+rsi*2],bh
   14000c2f3:	gs jno 0x14000c36b
   14000c2f6:	gs jae 0x14000c36d
   14000c2f9:	gs fs rex.RB js 0x14000c363
   14000c2fe:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c301:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c308:	ins    BYTE PTR es:[rdi],dx
   14000c309:	or     eax,0x2020200a
   14000c30e:	and    BYTE PTR [rax],ah
   14000c310:	and    BYTE PTR [rax],ah
   14000c312:	and    BYTE PTR [rax],ah
   14000c314:	and    BYTE PTR [rax],ah
   14000c316:	and    BYTE PTR [rax],ah
   14000c318:	and    BYTE PTR [rax],ah
   14000c31a:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c31e:	gs ins BYTE PTR es:[rdi],dx
   14000c320:	cmp    eax,0x49736122
   14000c325:	outs   dx,BYTE PTR ds:[rsi]
   14000c326:	jbe    0x14000c397
   14000c328:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c32c:	or     eax,0x2020200a
   14000c331:	and    BYTE PTR [rax],ah
   14000c333:	and    BYTE PTR [rax],ah
   14000c335:	and    BYTE PTR [rax],ah
   14000c337:	and    BYTE PTR [rax],ah
   14000c339:	and    BYTE PTR [rax],ah
   14000c33b:	and    BYTE PTR [rax],ah
   14000c33d:	and    BYTE PTR [rbp+0x69],dh
   14000c340:	movsxd esp,DWORD PTR [r11+0x65]
   14000c344:	jae    0x14000c3b9
   14000c346:	cmp    eax,0x6c616622
   14000c34b:	jae    0x14000c3b2
   14000c34d:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e35d
   14000c353:	and    BYTE PTR [rax],ah
   14000c355:	and    BYTE PTR [rax],ah
   14000c357:	and    BYTE PTR [rax],ah
   14000c359:	and    BYTE PTR [rax],ah
   14000c35b:	and    BYTE PTR [rdi],ch
   14000c35d:	ds or  eax,0x2020200a
   14000c363:	and    BYTE PTR [rax],ah
   14000c365:	and    BYTE PTR [rax],ah
   14000c367:	and    BYTE PTR [rdi+rbp*1],bh
   14000c36a:	jb     0x14000c3d1
   14000c36c:	jno    0x14000c3e3
   14000c36e:	gs jae 0x14000c3e5
   14000c371:	gs fs push rax
   14000c374:	jb     0x14000c3df
   14000c376:	jbe    0x14000c3e1
   14000c378:	ins    BYTE PTR es:[rdi],dx
   14000c379:	gs addr32 gs jae 0x14000c3bc
   14000c37e:	or     eax,0x2020200a
   14000c383:	and    BYTE PTR [rdi+rbp*1],bh
   14000c386:	jae    0x14000c3ed
   14000c388:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c38b:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000c393:	je     0x14000c407
   14000c395:	jne    0x14000c40a
   14000c397:	je     0x14000c3e2
   14000c399:	outs   dx,BYTE PTR ds:[rsi]
   14000c39a:	outs   dx,WORD PTR ds:[rsi]
   14000c39c:	ds or  eax,0x612f3c0a
   14000c3a2:	jae    0x14000c417
   14000c3a4:	gs ins DWORD PTR es:[rdi],dx
   14000c3a6:	(bad)  
   14000c3a7:	ins    BYTE PTR es:[rdi],dx
   14000c3a8:	jns    0x14000c3e8
   14000c3aa:	or     eax,0xa0d0a
   14000c3af:	add    BYTE PTR [rbx+rax*1+0x34],bh
   14000c3b6:	push   rsi
   14000c3b7:	add    BYTE PTR [rbx+0x0],dl
   14000c3ba:	pop    rdi
   14000c3bb:	add    BYTE PTR [rsi+0x0],dl
   14000c3be:	add    BYTE PTR [r10+0x0],r10b
   14000c3c2:	push   rbx
   14000c3c3:	add    BYTE PTR [rcx+0x0],cl
   14000c3c6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c3ca:	pop    rdi
   14000c3cb:	add    BYTE PTR [rcx+0x0],cl
   14000c3ce:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c3d2:	rex.WRXB add BYTE PTR [r8],r8b
   14000c3d5:	add    BYTE PTR [rax],al
   14000c3d7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c3dd:	add    BYTE PTR [rcx],al
   14000c3df:	add    BYTE PTR [rax],al
   14000c3e1:	add    BYTE PTR [rdx],cl
   14000c3e3:	add    BYTE PTR [rax],al
   14000c3e5:	add    BYTE PTR [rax],bpl
   14000c3e8:	add    BYTE PTR [rax],al
   14000c3ea:	or     al,BYTE PTR [rax]
   14000c3ec:	add    BYTE PTR [rax+0x0],al
   14000c3ef:	sub    BYTE PTR [rdi],bh
   14000c3f1:	add    BYTE PTR [rax],al
   14000c3f3:	add    BYTE PTR [rax],al
   14000c3f5:	add    BYTE PTR [rax],al
   14000c3f7:	add    BYTE PTR [rax+rax*1],al
   14000c3fa:	add    al,0x0
   14000c3fc:	add    DWORD PTR [rax],eax
	...
   14000c40a:	add    BYTE PTR [rax],al
   14000c40c:	sbb    al,BYTE PTR [rbx]
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	add    DWORD PTR [rax],eax
   14000c412:	push   rbx
   14000c413:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c417:	add    BYTE PTR [rcx+0x0],ch
   14000c41a:	outs   dx,BYTE PTR ds:[rsi]
   14000c41b:	add    BYTE PTR [rdi+0x0],ah
   14000c41e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c422:	ins    BYTE PTR es:[rdi],dx
   14000c423:	add    BYTE PTR [rbp+0x0],ah
   14000c426:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c42a:	data16 add BYTE PTR [rdi+0x0],ch
   14000c42e:	add    BYTE PTR [rax],al
   14000c430:	test   BYTE PTR [rdx],0x0
   14000c433:	add    BYTE PTR [rcx],al
   14000c435:	add    BYTE PTR [rax],dh
   14000c437:	add    BYTE PTR [rax+rax*1],dh
   14000c43a:	xor    BYTE PTR [rax],al
   14000c43c:	cmp    DWORD PTR [rax],eax
   14000c43e:	xor    BYTE PTR [rax],al
   14000c440:	xor    al,0x0
   14000c442:	rex.X add BYTE PTR [rax],sil
   14000c445:	add    BYTE PTR [rax],al
   14000c447:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c44b:	add    BYTE PTR [rcx],al
   14000c44d:	add    BYTE PTR [rbx+0x0],al
   14000c450:	outs   dx,DWORD PTR ds:[rsi]
   14000c451:	add    BYTE PTR [rbp+0x0],ch
   14000c454:	jo     0x14000c456
   14000c456:	(bad)  
   14000c457:	add    BYTE PTR [rsi+0x0],ch
   14000c45a:	jns    0x14000c45c
   14000c45c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c460:	ins    DWORD PTR es:[rdi],dx
   14000c461:	add    BYTE PTR [rbp+0x0],ah
   14000c464:	add    BYTE PTR [rax],al
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c46c:	movsxd eax,DWORD PTR [rax]
   14000c46e:	jb     0x14000c470
   14000c470:	outs   dx,DWORD PTR ds:[rsi]
   14000c471:	add    BYTE PTR [rbx+0x0],dh
   14000c474:	outs   dx,DWORD PTR ds:[rsi]
   14000c475:	add    BYTE PTR [rsi+0x0],ah
   14000c478:	je     0x14000c47a
   14000c47a:	and    BYTE PTR [rax],al
   14000c47c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c480:	jb     0x14000c482
   14000c482:	jo     0x14000c484
   14000c484:	outs   dx,DWORD PTR ds:[rsi]
   14000c485:	add    BYTE PTR [rdx+0x0],dh
   14000c488:	(bad)  
   14000c489:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c48d:	add    BYTE PTR [rdi+0x0],ch
   14000c490:	outs   dx,BYTE PTR ds:[rsi]
   14000c491:	add    BYTE PTR [rax],al
   14000c493:	add    BYTE PTR [rax+0x1002c00],al
   14000c499:	add    BYTE PTR [rsi+0x0],al
   14000c49c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c4a2:	add    BYTE PTR [rbp+0x0],r12b
   14000c4a6:	jae    0x14000c4a8
   14000c4a8:	movsxd eax,DWORD PTR [rax]
   14000c4aa:	jb     0x14000c4ac
   14000c4ac:	imul   eax,DWORD PTR [rax],0x740070
   14000c4b2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c4b8:	add    BYTE PTR [rax],al
   14000c4ba:	add    BYTE PTR [rax],al
   14000c4bc:	ja     0x14000c4be
   14000c4be:	(bad)  
   14000c4bf:	add    BYTE PTR [rcx+0x0],ch
   14000c4c2:	je     0x14000c4c4
   14000c4c4:	data16 add BYTE PTR [rdi+0x0],ch
   14000c4c8:	jb     0x14000c4ca
   14000c4ca:	and    BYTE PTR [rax],al
   14000c4cc:	sub    eax,0x77002000
   14000c4d1:	add    BYTE PTR [rcx+0x0],ah
   14000c4d4:	imul   eax,DWORD PTR [rax],0x2f0074
   14000c4da:	jae    0x14000c4dc
   14000c4dc:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c4e0:	add    BYTE PTR fs:[rax],ah
   14000c4e3:	add    BYTE PTR [rcx+0x0],ah
   14000c4e6:	and    BYTE PTR [rax],al
   14000c4e8:	jae    0x14000c4ea
   14000c4ea:	imul   eax,DWORD PTR [rax],0x6e0067
   14000c4f0:	(bad)  
   14000c4f1:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c4f5:	add    BYTE PTR [rdi+0x0],ch
   14000c4f8:	jbe    0x14000c4fa
   14000c4fa:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c4fe:	and    BYTE PTR [rax],al
   14000c500:	(bad)  
   14000c501:	add    BYTE PTR [rax],ah
   14000c503:	add    BYTE PTR [rsi+0x0],ch
   14000c506:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   14000c50b:	add    BYTE PTR [rdi+0x0],ch
   14000c50e:	jb     0x14000c510
   14000c510:	imul   eax,DWORD PTR [rax],0x0
   14000c513:	add    BYTE PTR [rsi+0x0],ah
   14000c516:	and    eax,DWORD PTR [rax]
   14000c518:	add    DWORD PTR [rax],eax
   14000c51a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c51e:	ins    BYTE PTR es:[rdi],dx
   14000c51f:	add    BYTE PTR [rbp+0x0],ah
   14000c522:	push   rsi
   14000c523:	add    BYTE PTR [rbp+0x0],ah
   14000c526:	jb     0x14000c528
   14000c528:	jae    0x14000c52a
   14000c52a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c530:	add    BYTE PTR [rax],al
   14000c532:	add    BYTE PTR [rax],al
   14000c534:	xor    DWORD PTR [rax],eax
   14000c536:	xor    BYTE PTR [rax],al
   14000c538:	add    BYTE PTR cs:[rax],dh
   14000c53b:	add    BYTE PTR [rsi],ch
   14000c53d:	add    BYTE PTR [rcx],dh
   14000c53f:	add    BYTE PTR [rax],dh
   14000c541:	add    BYTE PTR [rdx],dh
   14000c543:	add    BYTE PTR [rax+rax*1],dh
   14000c546:	xor    BYTE PTR [rax],al
   14000c548:	add    BYTE PTR cs:[rcx],dh
   14000c54b:	add    BYTE PTR [rsi],dh
   14000c54d:	add    BYTE PTR [rbx],dh
   14000c54f:	add    BYTE PTR [rax],bh
   14000c551:	add    BYTE PTR [rax+rax*1],dh
   14000c554:	and    BYTE PTR [rax],al
   14000c556:	sub    BYTE PTR [rax],al
   14000c558:	je     0x14000c55a
   14000c55a:	push   0x2e003100
   14000c55f:	add    BYTE PTR [rcx],dh
   14000c561:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f567
   14000c567:	add    BYTE PTR [rax],dh
   14000c569:	add    BYTE PTR [rcx],bh
   14000c56b:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f671
   14000c571:	add    BYTE PTR [rax],dh
   14000c573:	add    BYTE PTR [rax],dh
   14000c575:	add    BYTE PTR [rcx],ch
   14000c577:	add    BYTE PTR [rax],al
   14000c579:	add    BYTE PTR [rax],al
   14000c57b:	add    BYTE PTR [rax],bh
   14000c57d:	add    BYTE PTR [rax+rax*1],cl
   14000c580:	add    DWORD PTR [rax],eax
   14000c582:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c586:	je     0x14000c588
   14000c588:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c58c:	outs   dx,BYTE PTR ds:[rsi]
   14000c58d:	add    BYTE PTR [rcx+0x0],ah
   14000c590:	ins    BYTE PTR es:[rdi],dx
   14000c591:	add    BYTE PTR [rsi+0x0],cl
   14000c594:	(bad)  
   14000c595:	add    BYTE PTR [rbp+0x0],ch
   14000c598:	add    BYTE PTR gs:[rax],al
   14000c59b:	add    BYTE PTR [rdi+0x0],dh
   14000c59e:	(bad)  
   14000c59f:	add    BYTE PTR [rcx+0x0],ch
   14000c5a2:	je     0x14000c5a4
   14000c5a4:	data16 add BYTE PTR [rdi+0x0],ch
   14000c5a8:	jb     0x14000c5aa
   14000c5aa:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c5ae:	js     0x14000c5b0
   14000c5b0:	add    BYTE PTR gs:[rax],al
   14000c5b3:	add    BYTE PTR [rax+0x1002e00],al
   14000c5b9:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c5bd:	add    BYTE PTR [rdi+0x0],ah
   14000c5c0:	(bad)  
   14000c5c1:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c5c5:	add    BYTE PTR [rdi+0x0],ch
   14000c5c8:	jo     0x14000c5ca
   14000c5ca:	jns    0x14000c5cc
   14000c5cc:	jb     0x14000c5ce
   14000c5ce:	imul   eax,DWORD PTR [rax],0x680067
   14000c5d4:	je     0x14000c5d6
   14000c5d6:	add    BYTE PTR [rax],al
   14000c5d8:	test   eax,0x4d002000
   14000c5dd:	add    BYTE PTR [rcx+0x0],ch
   14000c5e0:	movsxd eax,DWORD PTR [rax]
   14000c5e2:	jb     0x14000c5e4
   14000c5e4:	outs   dx,DWORD PTR ds:[rsi]
   14000c5e5:	add    BYTE PTR [rbx+0x0],dh
   14000c5e8:	outs   dx,DWORD PTR ds:[rsi]
   14000c5e9:	add    BYTE PTR [rsi+0x0],ah
   14000c5ec:	je     0x14000c5ee
   14000c5ee:	and    BYTE PTR [rax],al
   14000c5f0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c5f4:	jb     0x14000c5f6
   14000c5f6:	jo     0x14000c5f8
   14000c5f8:	outs   dx,DWORD PTR ds:[rsi]
   14000c5f9:	add    BYTE PTR [rdx+0x0],dh
   14000c5fc:	(bad)  
   14000c5fd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c601:	add    BYTE PTR [rdi+0x0],ch
   14000c604:	outs   dx,BYTE PTR ds:[rsi]
   14000c605:	add    BYTE PTR [rsi],ch
   14000c607:	add    BYTE PTR [rax],ah
   14000c609:	add    BYTE PTR [rcx+0x0],al
   14000c60c:	ins    BYTE PTR es:[rdi],dx
   14000c60d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c611:	add    BYTE PTR [rdx+0x0],dh
   14000c614:	imul   eax,DWORD PTR [rax],0x680067
   14000c61a:	je     0x14000c61c
   14000c61c:	jae    0x14000c61e
   14000c61e:	and    BYTE PTR [rax],al
   14000c620:	jb     0x14000c622
   14000c622:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c626:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c62a:	jbe    0x14000c62c
   14000c62c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c631:	add    BYTE PTR [rax],al
   14000c633:	add    BYTE PTR [rax+0x0],al
   14000c636:	or     al,0x0
   14000c638:	add    DWORD PTR [rax],eax
   14000c63a:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000c63e:	imul   eax,DWORD PTR [rax],0x690067
   14000c644:	outs   dx,BYTE PTR ds:[rsi]
   14000c645:	add    BYTE PTR [rcx+0x0],ah
   14000c648:	ins    BYTE PTR es:[rdi],dx
   14000c649:	add    BYTE PTR [rsi+0x0],al
   14000c64c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c652:	outs   dx,BYTE PTR ds:[rsi]
   14000c653:	add    BYTE PTR [rcx+0x0],ah
   14000c656:	ins    DWORD PTR es:[rdi],dx
   14000c657:	add    BYTE PTR [rbp+0x0],ah
   14000c65a:	add    BYTE PTR [rax],al
   14000c65c:	ja     0x14000c65e
   14000c65e:	(bad)  
   14000c65f:	add    BYTE PTR [rcx+0x0],ch
   14000c662:	je     0x14000c664
   14000c664:	data16 add BYTE PTR [rdi+0x0],ch
   14000c668:	jb     0x14000c66a
   14000c66a:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c66e:	js     0x14000c670
   14000c670:	add    BYTE PTR gs:[rax],al
   14000c673:	add    BYTE PTR [rdx+0x0],ch
   14000c676:	and    eax,0x50000100
   14000c67b:	add    BYTE PTR [rdx+0x0],dh
   14000c67e:	outs   dx,DWORD PTR ds:[rsi]
   14000c67f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c683:	add    BYTE PTR [rbx+0x0],ah
   14000c686:	je     0x14000c688
   14000c688:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c68c:	ins    DWORD PTR es:[rdi],dx
   14000c68d:	add    BYTE PTR [rbp+0x0],ah
   14000c690:	add    BYTE PTR [rax],al
   14000c692:	add    BYTE PTR [rax],al
   14000c694:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c698:	movsxd eax,DWORD PTR [rax]
   14000c69a:	jb     0x14000c69c
   14000c69c:	outs   dx,DWORD PTR ds:[rsi]
   14000c69d:	add    BYTE PTR [rbx+0x0],dh
   14000c6a0:	outs   dx,DWORD PTR ds:[rsi]
   14000c6a1:	add    BYTE PTR [rsi+0x0],ah
   14000c6a4:	je     0x14000c6a6
   14000c6a6:	scas   al,BYTE PTR es:[rdi]
   14000c6a7:	add    BYTE PTR [rax],ah
   14000c6a9:	add    BYTE PTR [rdi+0x0],dl
   14000c6ac:	imul   eax,DWORD PTR [rax],0x64006e
   14000c6b2:	outs   dx,DWORD PTR ds:[rsi]
   14000c6b3:	add    BYTE PTR [rdi+0x0],dh
   14000c6b6:	jae    0x14000c6b8
   14000c6b8:	scas   al,BYTE PTR es:[rdi]
   14000c6b9:	add    BYTE PTR [rax],ah
   14000c6bb:	add    BYTE PTR [rdi+0x0],cl
   14000c6be:	jo     0x14000c6c0
   14000c6c0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c6c4:	(bad)  
   14000c6c5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c6c9:	add    BYTE PTR [rsi+0x0],ch
   14000c6cc:	add    BYTE PTR [eax],ah
   14000c6cf:	add    BYTE PTR [rbx+0x0],dl
   14000c6d2:	jns    0x14000c6d4
   14000c6d4:	jae    0x14000c6d6
   14000c6d6:	je     0x14000c6d8
   14000c6d8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c6dc:	add    BYTE PTR [rax],al
   14000c6de:	add    BYTE PTR [rax],al
   14000c6e0:	rex.RX add BYTE PTR [rcx],r10b
   14000c6e3:	add    BYTE PTR [rcx],al
   14000c6e5:	add    BYTE PTR [rax+0x0],dl
   14000c6e8:	jb     0x14000c6ea
   14000c6ea:	outs   dx,DWORD PTR ds:[rsi]
   14000c6eb:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c6ef:	add    BYTE PTR [rbx+0x0],ah
   14000c6f2:	je     0x14000c6f4
   14000c6f4:	push   rsi
   14000c6f5:	add    BYTE PTR [rbp+0x0],ah
   14000c6f8:	jb     0x14000c6fa
   14000c6fa:	jae    0x14000c6fc
   14000c6fc:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c702:	add    BYTE PTR [rax],al
   14000c704:	xor    DWORD PTR [rax],eax
   14000c706:	xor    BYTE PTR [rax],al
   14000c708:	add    BYTE PTR cs:[rax],dh
   14000c70b:	add    BYTE PTR [rsi],ch
   14000c70d:	add    BYTE PTR [rcx],dh
   14000c70f:	add    BYTE PTR [rax],dh
   14000c711:	add    BYTE PTR [rdx],dh
   14000c713:	add    BYTE PTR [rax+rax*1],dh
   14000c716:	xor    BYTE PTR [rax],al
   14000c718:	add    BYTE PTR cs:[rcx],dh
   14000c71b:	add    BYTE PTR [rsi],dh
   14000c71d:	add    BYTE PTR [rbx],dh
   14000c71f:	add    BYTE PTR [rax],bh
   14000c721:	add    BYTE PTR [rax+rax*1],dh
   14000c724:	add    BYTE PTR [rax],al
   14000c726:	add    BYTE PTR [rax],al
   14000c728:	add    BYTE PTR [rax],r8b
   14000c72b:	add    BYTE PTR [rcx],al
   14000c72d:	add    BYTE PTR [rsi+0x0],dl
   14000c730:	(bad)  
   14000c731:	add    BYTE PTR [rdx+0x0],dh
   14000c734:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c738:	ins    BYTE PTR es:[rdi],dx
   14000c739:	add    BYTE PTR [rbp+0x0],ah
   14000c73c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c740:	data16 add BYTE PTR [rdi+0x0],ch
   14000c744:	add    BYTE PTR [rax],al
   14000c746:	add    BYTE PTR [rax],al
   14000c748:	and    al,0x0
   14000c74a:	add    al,0x0
   14000c74c:	add    BYTE PTR [rax],al
   14000c74e:	push   rsp
   14000c74f:	add    BYTE PTR [rdx+0x0],dh
   14000c752:	(bad)  
   14000c753:	add    BYTE PTR [rsi+0x0],ch
   14000c756:	jae    0x14000c758
   14000c758:	ins    BYTE PTR es:[rdi],dx
   14000c759:	add    BYTE PTR [rcx+0x0],ah
   14000c75c:	je     0x14000c75e
   14000c75e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c764:	add    BYTE PTR [rax],al
   14000c766:	add    BYTE PTR [rax],al
   14000c768:	or     DWORD PTR [rax+rsi*4],eax
   14000c76b:	add    al,0x0
   14000c76d:	add    BYTE PTR [rax],al
   14000c76f:	add    ch,cl
   14000c771:	dec    ch
   14000c773:	dec    al
   14000c775:	add    BYTE PTR [rax],al
   14000c777:	add    BYTE PTR [rax],al
   14000c779:	add    BYTE PTR [rcx],al
   14000c77b:	add    BYTE PTR [rax],al
   14000c77d:	add    BYTE PTR [rax],al
   14000c77f:	add    BYTE PTR [rcx],dl
   14000c781:	add    BYTE PTR [rax],al
   14000c783:	add    BYTE PTR [rax],al
   14000c785:	add    BYTE PTR [rax],al
   14000c787:	add    BYTE PTR [rdx],al
   14000c789:	add    BYTE PTR [rax],al
   14000c78b:	add    BYTE PTR [rdx-0x7e],cl
   14000c78e:	or     al,0x16
   14000c790:	rex.X push rsi
   14000c792:	(bad)  
   14000c793:	cwde   
   14000c794:	fxch   st(7)
   14000c796:	retf   
   14000c797:	and    eax,DWORD PTR [rdi-0x4c56e913]
   14000c79d:	pop    rcx
   14000c79e:	ss jnp 0x14000c786
   14000c7a1:	sub    DWORD PTR [rdx+0x68],esp
   14000c7a4:	rex.B cmp eax,0xfccddba6
   14000c7aa:	add    BYTE PTR [rax+rax*1+0x0],cl
	...
   14000c7c2:	add    BYTE PTR [rax],al
   14000c7c4:	mov    BYTE PTR [rax],al
   14000c7c6:	add    BYTE PTR [rax],al
   14000c7c8:	(bad)  
   14000c7c9:	add    BYTE PTR [rax],al
   14000c7cb:	add    BYTE PTR [rax+0x8000000],bl
   14000c7d1:	add    BYTE PTR [rax],al
   14000c7d3:	add    BYTE PTR [rax+0xe000000],ah
   14000c7d9:	add    BYTE PTR [rax],al
   14000c7db:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000c7e9:	add    BYTE PTR [rax],al
   14000c7eb:	add    BYTE PTR [rax+0xc000000],bh
   14000c7f1:	add    BYTE PTR [rax],al
   14000c7f3:	add    BYTE PTR [rax],al
   14000c7f5:	add    BYTE PTR [rax],al
   14000c7f7:	add    BYTE PTR [rbp+0x0],cl
   14000c7fa:	push   rbp
   14000c7fb:	add    BYTE PTR [rcx+0x0],cl
	...
   14000c806:	add    BYTE PTR [rax],al
   14000c808:	adc    BYTE PTR [rax],al
   14000c80a:	add    BYTE PTR [rax],al
   14000c80c:	sbb    BYTE PTR [rax],al
   14000c80e:	add    BYTE PTR [rax],al
   14000c810:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c814:	rex.WB add BYTE PTR [r8],al
	...
   14000c81f:	add    BYTE PTR [rsi],al
   14000c821:	add    BYTE PTR [rax],al
   14000c823:	add    BYTE PTR [rax],dl
   14000c825:	add    BYTE PTR [rax],al
   14000c827:	add    BYTE PTR [rbp+0x0],ah
   14000c82a:	outs   dx,BYTE PTR ds:[rsi]
   14000c82b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193011d31
   14000c831:	add    BYTE PTR [rax],al
   14000c833:	add    BYTE PTR [rax],al
   14000c835:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x200000],al
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	jo     0x14000cfad
   14000d00a:	js     0x14000cfaf
   14000d00c:	mov    BYTE PTR [rbx-0x5c575c60],ah
   14000d012:	loopne 0x14000cfb7
   14000d014:	call   0xc0a838bc
   14000d019:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d01a:	mov    BYTE PTR [rdi+0xa790],ah
