
c719dfc0faba60957d7933fbe8018407fddc0f7827704e289e51ff2de03ae0cd.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x9fe5]        # 0x40b000
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x9fe6]        # 0x40b010
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x9fe9]        # 0x40b020
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x9fac]        # 0x40aff0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x9e4f]        # 0x40aea0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x9f81]        # 0x40afe0
  40105f:	mov    DWORD PTR [rip+0xcfa3],edx        # 0x40e008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x407c50
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x405f60
  401081:	mov    rdx,QWORD PTR [rip+0x9eb8]        # 0x40af40
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x9e9e]        # 0x40af30
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x9f04]        # 0x40afa0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x9e3b]        # 0x40aee0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x405b40
  4010af:	mov    rax,QWORD PTR [rip+0x9d9a]        # 0x40ae50
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x407c50
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x4d19]        # 0x405e40
  401127:	call   0x405e30
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x9e65]        # 0x40afd0
  40116b:	lea    r8,[rip+0xcea6]        # 0x40e018
  401172:	lea    rdx,[rip+0xcea7]        # 0x40e020
  401179:	lea    rcx,[rip+0xcea8]        # 0x40e028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xce78],eax        # 0x40e000
  401188:	lea    rax,[rip+0xce71]        # 0x40e000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x9df5]        # 0x40af90
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x407c68
  4011a3:	mov    DWORD PTR [rip+0xce67],eax        # 0x40e010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x9e1a]        # 0x40afe0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x9d1b]        # 0x40af10
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xe25a]        # 0x40f45c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x9cf7]        # 0x40af20
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xcdba],0x1        # 0x40e004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x9c2c]        # 0x40ae90
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x406150
  40127d:	lea    rcx,[rip+0x546c]        # 0x4066f0
  401284:	call   QWORD PTR [rip+0xe1ca]        # 0x40f454
  40128a:	mov    rdx,QWORD PTR [rip+0x9c6f]        # 0x40af00
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x406600
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x407c90
  4012a5:	call   0x405f40
  4012aa:	mov    rax,QWORD PTR [rip+0x9bef]        # 0x40aea0
  4012b1:	mov    QWORD PTR [rip+0xd790],rax        # 0x40ea48
  4012b8:	mov    rax,QWORD PTR [rip+0x9c11]        # 0x40aed0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xd729],rax        # 0x40ea40
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x7cca],eax        # 0x409000
  401336:	mov    r12d,DWORD PTR [rip+0xcceb]        # 0x40e028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x407bb0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xccc2]        # 0x40e020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x407b68
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x407bb0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x407ba8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xcc6a],rbp        # 0x40e020
  4013b6:	call   0x405b10
  4013bb:	mov    rax,QWORD PTR [rip+0x9afe]        # 0x40aec0
  4013c2:	mov    rdx,QWORD PTR [rip+0xcc4f]        # 0x40e018
  4013c9:	mov    ecx,DWORD PTR [rip+0xcc59]        # 0x40e028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xcc3c]        # 0x40e018
  4013dc:	mov    rdx,QWORD PTR [rip+0xcc3d]        # 0x40e020
  4013e3:	call   0x407d60
  4013e8:	mov    ecx,DWORD PTR [rip+0xcc1a]        # 0x40e008
  4013ee:	mov    DWORD PTR [rip+0xcc18],eax        # 0x40e00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xcc02]        # 0x40e004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x407c38
  40140b:	mov    eax,DWORD PTR [rip+0xcbfb]        # 0x40e00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x9ae9]        # 0x40af20
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x407c40
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x9afd]        # 0x40af60
  401463:	mov    rcx,QWORD PTR [rip+0x9ae6]        # 0x40af50
  40146a:	call   0x407c30
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xdf6b]        # 0x40f404
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x9ad9]        # 0x40af80
  4014a7:	mov    rcx,QWORD PTR [rip+0x9ac2]        # 0x40af70
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x407c30
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x407bf8
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x9b05]        # 0x40afe0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x405b50
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x9ad5]        # 0x40afe0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x405b50
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	push   rbx
  401533:	sub    rsp,0x220
  40153a:	mov    rdi,QWORD PTR [rip+0xdf7b]        # 0x40f4bc
  401541:	lea    rsi,[rip+0x7c40]        # 0x409188
  401548:	call   rdi
  40154a:	lea    rdx,[rsp+0x20]
  40154f:	lea    rcx,[rax+0x60]
  401553:	call   0x407b88
  401558:	mov    rbx,QWORD PTR [rip+0x7c21]        # 0x409180
  40155f:	test   rbx,rbx
  401562:	je     0x401586
  401564:	call   rdi
  401566:	lea    rdx,[rip+0x8a93]        # 0x40a000
  40156d:	lea    rcx,[rax+0x60]
  401571:	mov    r8,rbx
  401574:	add    rsi,0x8
  401578:	call   0x407be0
  40157d:	mov    rbx,QWORD PTR [rsi-0x8]
  401581:	test   rbx,rbx
  401584:	jne    0x401564
  401586:	mov    ecx,0xffffffff
  40158b:	call   0x407bf8
  401590:	nop
  401591:	nop    DWORD PTR [rax+rax*1+0x0]
  401596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015a0:	push   r15
  4015a2:	push   r14
  4015a4:	push   r13
  4015a6:	push   r12
  4015a8:	push   rbp
  4015a9:	push   rdi
  4015aa:	push   rsi
  4015ab:	push   rbx
  4015ac:	sub    rsp,0x118
  4015b3:	lea    r8,[rsp+0x48]
  4015b8:	mov    rbp,rdx
  4015bb:	mov    edx,0x100
  4015c0:	mov    rbx,rcx
  4015c3:	call   0x405970
  4015c8:	test   eax,eax
  4015ca:	jne    0x40206a
  4015d0:	lea    r8,[rsp+0x4c]
  4015d5:	mov    edx,0x101
  4015da:	mov    rcx,rbx
  4015dd:	call   0x405970
  4015e2:	test   eax,eax
  4015e4:	jne    0x402053
  4015ea:	mov    ecx,DWORD PTR [rip+0xca6c]        # 0x40e05c
  4015f0:	test   ecx,ecx
  4015f2:	je     0x401d30
  4015f8:	mov    r8d,0x4
  4015fe:	mov    edx,0x102
  401603:	mov    rcx,rbp
  401606:	call   0x405928
  40160b:	movzx  r8d,WORD PTR [rip+0xca45]        # 0x40e058
  401613:	cmp    r8w,0xffff
  401618:	je     0x401d70
  40161e:	mov    edx,0x103
  401623:	mov    rcx,rbp
  401626:	call   0x405928
  40162b:	cmp    WORD PTR [rip+0xca25],0x7        # 0x40e058
  401633:	je     0x401e91
  401639:	lea    r8,[rsp+0x46]
  40163e:	mov    edx,0x106
  401643:	mov    rcx,rbx
  401646:	call   0x405970
  40164b:	test   eax,eax
  40164d:	jne    0x402718
  401653:	movzx  r8d,WORD PTR [rip+0xc9f9]        # 0x40e054
  40165b:	test   r8w,r8w
  40165f:	jne    0x401cae
  401665:	lea    r8,[rsp+0x46]
  40166a:	mov    edx,0x10a
  40166f:	mov    rcx,rbx
  401672:	call   0x405970
  401677:	test   eax,eax
  401679:	jne    0x401ca8
  40167f:	lea    r8,[rsp+0x44]
  401684:	mov    edx,0x115
  401689:	mov    rcx,rbx
  40168c:	call   0x405970
  401691:	test   eax,eax
  401693:	jne    0x402670
  401699:	mov    eax,DWORD PTR [rip+0x7c59]        # 0x4092f8
  40169f:	cmp    eax,0xffffffff
  4016a2:	je     0x402692
  4016a8:	test   eax,eax
  4016aa:	je     0x401cc0
  4016b0:	cmp    DWORD PTR [rip+0xc9ad],0xffffffff        # 0x40e064
  4016b7:	je     0x402857
  4016bd:	cmp    DWORD PTR [rip+0xc99c],0xffffffff        # 0x40e060
  4016c4:	je     0x402870
  4016ca:	lea    r8,[rip+0xc98f]        # 0x40e060
  4016d1:	lea    rdx,[rip+0xc98c]        # 0x40e064
  4016d8:	mov    rcx,rbp
  4016db:	call   0x405988
  4016e0:	mov    r8d,DWORD PTR [rip+0xc97d]        # 0x40e064
  4016e7:	mov    edx,0x142
  4016ec:	mov    rcx,rbp
  4016ef:	call   0x405928
  4016f4:	mov    r8d,DWORD PTR [rip+0xc965]        # 0x40e060
  4016fb:	mov    edx,0x143
  401700:	mov    rcx,rbp
  401703:	call   0x405928
  401708:	movzx  r8d,WORD PTR [rip+0xc94a]        # 0x40e05a
  401710:	cmp    r8w,0xffff
  401715:	je     0x401d00
  40171b:	mov    edx,0x11c
  401720:	mov    rcx,rbp
  401723:	call   0x405928
  401728:	mov    r8d,DWORD PTR [rip+0xc91d]        # 0x40e04c
  40172f:	cmp    r8d,0xffffffff
  401733:	je     0x4026f0
  401739:	mov    edx,0x124
  40173e:	mov    rcx,rbp
  401741:	call   0x405928
  401746:	cmp    WORD PTR [rsp+0x44],0x4
  40174c:	lea    r13,[rsp+0x68]
  401751:	lea    rsi,[rsp+0x90]
  401759:	lea    r12,[rsp+0x70]
  40175e:	jbe    0x402611
  401764:	mov    QWORD PTR [rsp+0x20],rsi
  401769:	mov    r9,r12
  40176c:	mov    r8,r13
  40176f:	mov    edx,0x140
  401774:	mov    rcx,rbx
  401777:	call   0x405970
  40177c:	test   eax,eax
  40177e:	jne    0x402081
  401784:	movzx  eax,WORD PTR [rip+0xc8cd]        # 0x40e058
  40178b:	cmp    ax,0x7
  40178f:	je     0x401f9b
  401795:	cmp    ax,0x80b2
  401799:	je     0x401e6c
  40179f:	cmp    ax,0x5
  4017a3:	je     0x401e6c
  4017a9:	lea    rdi,[rip+0x7890]        # 0x409040
  4017b0:	mov    rax,rsi
  4017b3:	lea    r14,[rip+0x79be]        # 0x409178
  4017ba:	lea    r15,[rip+0x8963]        # 0x40a124
  4017c1:	mov    rsi,rbx
  4017c4:	mov    rbx,rdi
  4017c7:	mov    rdi,rax
  4017ca:	nop    WORD PTR [rax+rax*1+0x0]
  4017d0:	cmp    DWORD PTR [rbx+0x4],0xc
  4017d4:	ja     0x401820
  4017d6:	mov    eax,DWORD PTR [rbx+0x4]
  4017d9:	movsxd rax,DWORD PTR [r15+rax*4]
  4017dd:	add    rax,r15
  4017e0:	jmp    rax
  4017e2:	movzx  eax,WORD PTR [rbx+0x2]
  4017e6:	cmp    ax,0x1
  4017ea:	je     0x401c30
  4017f0:	cmp    ax,0xffff
  4017f4:	jne    0x401820
  4017f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401800:	movzx  edx,WORD PTR [rbx]
  401803:	mov    r8,rdi
  401806:	mov    rcx,rsi
  401809:	call   0x405970
  40180e:	test   eax,eax
  401810:	jne    0x401be5
  401816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401820:	add    rbx,0x8
  401824:	cmp    rbx,r14
  401827:	jb     0x4017d0
  401829:	cmp    QWORD PTR [rip+0xc80f],0x0        # 0x40e040
  401831:	mov    rbx,rsi
  401834:	mov    rsi,rdi
  401837:	je     0x401fc8
  40183d:	mov    rcx,rbp
  401840:	call   0x4058b0
  401845:	test   rax,rax
  401848:	mov    rdi,rax
  40184b:	je     0x4029a3
  401851:	mov    rcx,QWORD PTR [rip+0xc7e8]        # 0x40e040
  401858:	test   rcx,rcx
  40185b:	je     0x4026a5
  401861:	lea    rdx,[rip+0x87ae]        # 0x40a016
  401868:	call   0x407be8
  40186d:	test   rax,rax
  401870:	mov    r14,rax
  401873:	je     0x402afb
  401879:	xor    edx,edx
  40187b:	mov    r8,rax
  40187e:	mov    rcx,rdi
  401881:	call   0x4058b8
  401886:	test   eax,eax
  401888:	je     0x402b11
  40188e:	mov    rcx,r14
  401891:	call   0x407bf0
  401896:	mov    rcx,rdi
  401899:	call   0x4058a0
  40189e:	mov    rcx,rdi
  4018a1:	call   0x4058c0
  4018a6:	mov    r14,QWORD PTR [rip+0xc783]        # 0x40e030
  4018ad:	test   r14,r14
  4018b0:	je     0x401f91
  4018b6:	lea    rdx,[rip+0x878f]        # 0x40a04c
  4018bd:	mov    rcx,r14
  4018c0:	call   0x407be8
  4018c5:	test   rax,rax
  4018c8:	mov    rdi,rax
  4018cb:	je     0x401f89
  4018d1:	lea    rdx,[rip+0x8777]        # 0x40a04f
  4018d8:	mov    r8,r12
  4018db:	mov    rcx,rax
  4018de:	call   0x407bc8
  4018e3:	lea    rdx,[rip+0x8765]        # 0x40a04f
  4018ea:	mov    r8,r13
  4018ed:	mov    rcx,rdi
  4018f0:	mov    r14d,eax
  4018f3:	call   0x407bc8
  4018f8:	lea    r8,[rsp+0x60]
  4018fd:	lea    rdx,[rip+0x874b]        # 0x40a04f
  401904:	and    eax,r14d
  401907:	mov    rcx,rdi
  40190a:	mov    r15d,eax
  40190d:	lea    r14,[rsp+0x58]
  401912:	call   0x407bc8
  401917:	lea    r8,[r12+0x8]
  40191c:	lea    rdx,[rip+0x872c]        # 0x40a04f
  401923:	mov    rcx,rdi
  401926:	and    r15d,eax
  401929:	call   0x407bc8
  40192e:	lea    r8,[rsp+0x50]
  401933:	lea    rdx,[rip+0x8715]        # 0x40a04f
  40193a:	mov    rcx,rdi
  40193d:	and    r15d,eax
  401940:	call   0x407bc8
  401945:	lea    rdx,[rip+0x8703]        # 0x40a04f
  40194c:	and    r15d,eax
  40194f:	mov    r8,r14
  401952:	mov    rcx,rdi
  401955:	call   0x407bc8
  40195a:	mov    rcx,rdi
  40195d:	and    r15d,eax
  401960:	call   0x407bf0
  401965:	cmp    r15d,0x1
  401969:	je     0x401d99
  40196f:	call   QWORD PTR [rip+0xdb47]        # 0x40f4bc
  401975:	lea    rcx,[rip+0x86dc]        # 0x40a058
  40197c:	lea    r9,[rax+0x60]
  401980:	mov    r8d,0x31
  401986:	mov    edx,0x1
  40198b:	call   0x407bc0
  401990:	mov    r8,r14
  401993:	mov    edx,0x11c
  401998:	mov    rcx,rbx
  40199b:	movzx  r15d,WORD PTR [rsp+0x44]
  4019a1:	movzx  edi,WORD PTR [rsp+0x42]
  4019a6:	call   0x405970
  4019ab:	movzx  eax,WORD PTR [rip+0xc6a8]        # 0x40e05a
  4019b2:	cmp    WORD PTR [rsp+0x58],ax
  4019b7:	je     0x4019ca
  4019b9:	cmp    di,0x8
  4019bd:	je     0x4019ca
  4019bf:	cmp    r15w,0x1
  4019c4:	ja     0x4029b4
  4019ca:	lea    r8,[rsp+0x60]
  4019cf:	mov    edx,0x100
  4019d4:	mov    rcx,rbx
  4019d7:	call   0x405970
  4019dc:	mov    r8,r13
  4019df:	mov    edx,0x101
  4019e4:	mov    rcx,rbx
  4019e7:	call   0x405970
  4019ec:	mov    rcx,rbp
  4019ef:	call   0x405968
  4019f4:	test   eax,eax
  4019f6:	je     0x401ec0
  4019fc:	mov    r8,r12
  4019ff:	mov    edx,0x142
  401a04:	mov    rcx,rbx
  401a07:	call   0x405970
  401a0c:	test   eax,eax
  401a0e:	jne    0x401a18
  401a10:	mov    eax,DWORD PTR [rsp+0x60]
  401a14:	mov    DWORD PTR [rsp+0x70],eax
  401a18:	mov    r8,rsi
  401a1b:	mov    edx,0x143
  401a20:	mov    rcx,rbx
  401a23:	call   0x405970
  401a28:	test   eax,eax
  401a2a:	jne    0x401a37
  401a2c:	mov    eax,DWORD PTR [rsp+0x68]
  401a30:	mov    DWORD PTR [rsp+0x90],eax
  401a37:	mov    eax,DWORD PTR [rip+0xc627]        # 0x40e064
  401a3d:	cmp    DWORD PTR [rsp+0x70],eax
  401a41:	je     0x4028ee
  401a47:	xor    r12d,r12d
  401a4a:	movzx  edi,WORD PTR [rip+0xc609]        # 0x40e05a
  401a51:	movzx  edx,WORD PTR [rsp+0x58]
  401a56:	mov    rcx,rbx
  401a59:	shl    edx,0xb
  401a5c:	shl    edi,0x3
  401a5f:	or     edi,edx
  401a61:	call   0x405968
  401a66:	mov    esi,eax
  401a68:	or     edi,r12d
  401a6b:	mov    rcx,rbp
  401a6e:	shl    esi,0x2
  401a71:	call   0x405968
  401a76:	or     esi,edi
  401a78:	add    eax,eax
  401a7a:	or     eax,esi
  401a7c:	cmp    eax,0x817
  401a81:	jg     0x401f20
  401a87:	cmp    eax,0x816
  401a8c:	jge    0x402997
  401a92:	cmp    eax,0x80f
  401a97:	jg     0x4028c0
  401a9d:	cmp    eax,0x80e
  401aa2:	jge    0x40298b
  401aa8:	cmp    eax,0x80b
  401aad:	jg     0x40297f
  401ab3:	cmp    eax,0x80a
  401ab8:	jge    0x4028b4
  401abe:	cmp    eax,0x808
  401ac3:	je     0x40293c
  401ac9:	cmp    eax,0x809
  401ace:	jne    0x401f5e
  401ad4:	mov    eax,DWORD PTR [rip+0xc582]        # 0x40e05c
  401ada:	lea    r10,[rip+0x15bf]        # 0x4030a0
  401ae1:	test   eax,eax
  401ae3:	lea    rax,[rip+0x1496]        # 0x402f80
  401aea:	cmovne r10,rax
  401aee:	xchg   ax,ax
  401af0:	movzx  eax,WORD PTR [rsp+0x44]
  401af5:	mov    r9d,DWORD PTR [rsp+0x48]
  401afa:	mov    rdx,rbp
  401afd:	mov    r8d,DWORD PTR [rsp+0x4c]
  401b02:	mov    rcx,rbx
  401b05:	mov    DWORD PTR [rsp+0x20],eax
  401b09:	call   r10
  401b0c:	add    rsp,0x118
  401b13:	pop    rbx
  401b14:	pop    rsi
  401b15:	pop    rdi
  401b16:	pop    rbp
  401b17:	pop    r12
  401b19:	pop    r13
  401b1b:	pop    r14
  401b1d:	pop    r15
  401b1f:	ret    
  401b20:	movzx  edx,WORD PTR [rbx]
  401b23:	mov    r8,rdi
  401b26:	mov    rcx,rsi
  401b29:	call   0x405970
  401b2e:	test   eax,eax
  401b30:	je     0x401820
  401b36:	movzx  edx,WORD PTR [rbx]
  401b39:	mov    r8d,DWORD PTR [rsp+0x90]
  401b41:	mov    rcx,rbp
  401b44:	call   0x405928
  401b49:	jmp    0x401820
  401b4e:	xchg   ax,ax
  401b50:	movzx  eax,WORD PTR [rbx+0x2]
  401b54:	cmp    ax,0x1
  401b58:	jne    0x4017f0
  401b5e:	movzx  edx,WORD PTR [rbx]
  401b61:	mov    r8,rdi
  401b64:	mov    rcx,rsi
  401b67:	call   0x405970
  401b6c:	test   eax,eax
  401b6e:	je     0x401820
  401b74:	pxor   xmm0,xmm0
  401b78:	cvtss2sd xmm0,DWORD PTR [rsp+0x90]
  401b81:	jmp    0x401c4f
  401b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b90:	movzx  eax,WORD PTR [rbx+0x2]
  401b94:	cmp    ax,0x1
  401b98:	je     0x401c00
  401b9a:	cmp    ax,0x2
  401b9e:	je     0x401c70
  401ba4:	cmp    ax,0xffff
  401ba8:	jne    0x401820
  401bae:	movzx  edx,WORD PTR [rbx]
  401bb1:	mov    r9,rdi
  401bb4:	mov    r8,r12
  401bb7:	mov    rcx,rsi
  401bba:	call   0x405970
  401bbf:	test   eax,eax
  401bc1:	je     0x401820
  401bc7:	movzx  edx,WORD PTR [rbx]
  401bca:	movzx  r8d,WORD PTR [rsp+0x70]
  401bd0:	mov    rcx,rbp
  401bd3:	mov    r9,QWORD PTR [rsp+0x90]
  401bdb:	call   0x405928
  401be0:	jmp    0x401820
  401be5:	movzx  edx,WORD PTR [rbx]
  401be8:	mov    r8,QWORD PTR [rsp+0x90]
  401bf0:	mov    rcx,rbp
  401bf3:	call   0x405928
  401bf8:	jmp    0x401820
  401bfd:	nop    DWORD PTR [rax]
  401c00:	movzx  edx,WORD PTR [rbx]
  401c03:	mov    r8,rdi
  401c06:	mov    rcx,rsi
  401c09:	call   0x405970
  401c0e:	test   eax,eax
  401c10:	je     0x401820
  401c16:	movzx  edx,WORD PTR [rbx]
  401c19:	movzx  r8d,WORD PTR [rsp+0x90]
  401c22:	mov    rcx,rbp
  401c25:	call   0x405928
  401c2a:	jmp    0x401820
  401c2f:	nop
  401c30:	movzx  edx,WORD PTR [rbx]
  401c33:	mov    r8,rdi
  401c36:	mov    rcx,rsi
  401c39:	call   0x405970
  401c3e:	test   eax,eax
  401c40:	je     0x401820
  401c46:	movsd  xmm0,QWORD PTR [rsp+0x90]
  401c4f:	movzx  edx,WORD PTR [rbx]
  401c52:	movapd xmm2,xmm0
  401c56:	movq   r8,xmm0
  401c5b:	mov    rcx,rbp
  401c5e:	call   0x405928
  401c63:	jmp    0x401820
  401c68:	nop    DWORD PTR [rax+rax*1+0x0]
  401c70:	movzx  edx,WORD PTR [rbx]
  401c73:	mov    r9,rdi
  401c76:	mov    r8,r12
  401c79:	mov    rcx,rsi
  401c7c:	call   0x405970
  401c81:	test   eax,eax
  401c83:	je     0x401820
  401c89:	movzx  edx,WORD PTR [rbx]
  401c8c:	movzx  r9d,WORD PTR [rsp+0x90]
  401c95:	mov    rcx,rbp
  401c98:	movzx  r8d,WORD PTR [rsp+0x70]
  401c9e:	call   0x405928
  401ca3:	jmp    0x401820
  401ca8:	movzx  r8d,WORD PTR [rsp+0x46]
  401cae:	mov    edx,0x10a
  401cb3:	mov    rcx,rbp
  401cb6:	call   0x405928
  401cbb:	jmp    0x40167f
  401cc0:	mov    edx,DWORD PTR [rip+0xc38a]        # 0x40e050
  401cc6:	cmp    edx,0xffffffff
  401cc9:	je     0x402889
  401ccf:	mov    rcx,rbp
  401cd2:	call   0x405990
  401cd7:	mov    edx,0x116
  401cdc:	mov    r8d,eax
  401cdf:	mov    rcx,rbp
  401ce2:	mov    DWORD PTR [rip+0xc368],eax        # 0x40e050
  401ce8:	call   0x405928
  401ced:	movzx  r8d,WORD PTR [rip+0xc365]        # 0x40e05a
  401cf5:	cmp    r8w,0xffff
  401cfa:	jne    0x40171b
  401d00:	lea    r8,[rip+0xc353]        # 0x40e05a
  401d07:	mov    edx,0x11c
  401d0c:	mov    rcx,rbx
  401d0f:	call   0x405970
  401d14:	test   eax,eax
  401d16:	je     0x401728
  401d1c:	movzx  r8d,WORD PTR [rip+0xc336]        # 0x40e05a
  401d24:	jmp    0x40171b
  401d29:	nop    DWORD PTR [rax+0x0]
  401d30:	lea    r8,[rsp+0x42]
  401d35:	mov    edx,0x102
  401d3a:	mov    rcx,rbx
  401d3d:	call   0x405970
  401d42:	test   eax,eax
  401d44:	je     0x40160b
  401d4a:	movzx  r8d,WORD PTR [rsp+0x42]
  401d50:	mov    edx,0x102
  401d55:	mov    rcx,rbp
  401d58:	call   0x405928
  401d5d:	movzx  r8d,WORD PTR [rip+0xc2f3]        # 0x40e058
  401d65:	cmp    r8w,0xffff
  401d6a:	jne    0x40161e
  401d70:	lea    r8,[rip+0xc2e1]        # 0x40e058
  401d77:	mov    edx,0x103
  401d7c:	mov    rcx,rbx
  401d7f:	call   0x405970
  401d84:	test   eax,eax
  401d86:	je     0x40162b
  401d8c:	movzx  r8d,WORD PTR [rip+0xc2c4]        # 0x40e058
  401d94:	jmp    0x40161e
  401d99:	pxor   xmm1,xmm1
  401d9d:	movsd  xmm2,QWORD PTR [rsp+0x60]
  401da3:	movsd  xmm0,QWORD PTR [rsp+0x68]
  401da9:	ucomisd xmm2,xmm1
  401dad:	jp     0x4027b0
  401db3:	jne    0x4027b0
  401db9:	ucomisd xmm0,xmm1
  401dbd:	jp     0x4027b0
  401dc3:	jne    0x4027b0
  401dc9:	movsd  xmm0,QWORD PTR [rsp+0x78]
  401dcf:	ucomisd xmm1,xmm0
  401dd3:	ja     0x4029df
  401dd9:	mov    r9,r12
  401ddc:	mov    rcx,rbp
  401ddf:	mov    r8d,0x3
  401de5:	mov    edx,0x830e
  401dea:	movsd  QWORD PTR [rsp+0x78],xmm0
  401df0:	mov    QWORD PTR [rsp+0x80],0x0
  401dfc:	call   0x405928
  401e01:	movsd  xmm0,QWORD PTR [rsp+0x50]
  401e07:	mov    r9,rsi
  401e0a:	movsd  xmm5,QWORD PTR [rip+0x8c4e]        # 0x40aa60
  401e12:	mov    r8d,0x6
  401e18:	movsd  QWORD PTR [rsp+0xa8],xmm0
  401e21:	mov    edx,0x8482
  401e26:	mov    rcx,rbp
  401e29:	movsd  xmm0,QWORD PTR [rsp+0x58]
  401e2f:	mov    QWORD PTR [rsp+0xa0],0x0
  401e3b:	movsd  QWORD PTR [rsp+0x90],xmm5
  401e44:	mov    QWORD PTR [rsp+0xb8],0x0
  401e50:	movsd  QWORD PTR [rsp+0x98],xmm5
  401e59:	movsd  QWORD PTR [rsp+0xb0],xmm0
  401e62:	call   0x405928
  401e67:	jmp    0x401990
  401e6c:	movzx  r8d,WORD PTR [rip+0xc1e2]        # 0x40e056
  401e74:	cmp    r8w,0xffff
  401e79:	je     0x402906
  401e7f:	mov    edx,0x13d
  401e84:	mov    rcx,rbp
  401e87:	call   0x405928
  401e8c:	jmp    0x4017a9
  401e91:	cmp    DWORD PTR [rip+0x7454],0x1        # 0x4092ec
  401e98:	jne    0x401639
  401e9e:	mov    r8d,0x6
  401ea4:	mov    edx,0x106
  401ea9:	mov    rcx,rbp
  401eac:	call   0x405928
  401eb1:	jmp    0x401653
  401eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ec0:	mov    rcx,rbx
  401ec3:	call   0x405968
  401ec8:	test   eax,eax
  401eca:	je     0x402730
  401ed0:	mov    r8,r12
  401ed3:	mov    edx,0x142
  401ed8:	mov    rcx,rbx
  401edb:	call   0x405970
  401ee0:	mov    r8,rsi
  401ee3:	mov    edx,0x143
  401ee8:	mov    rcx,rbx
  401eeb:	call   0x405970
  401ef0:	mov    eax,DWORD PTR [rsp+0x60]
  401ef4:	cmp    DWORD PTR [rsp+0x70],eax
  401ef8:	jne    0x401a47
  401efe:	mov    eax,DWORD PTR [rip+0xc14c]        # 0x40e050
  401f04:	cmp    DWORD PTR [rsp+0x90],eax
  401f0b:	jne    0x401a47
  401f11:	mov    r12d,0x1
  401f17:	jmp    0x401a4a
  401f1c:	nop    DWORD PTR [rax+0x0]
  401f20:	cmp    eax,0x100f
  401f25:	jg     0x402764
  401f2b:	cmp    eax,0x100e
  401f30:	jge    0x402967
  401f36:	cmp    eax,0x100b
  401f3b:	jg     0x4028a8
  401f41:	cmp    eax,0x100a
  401f46:	jge    0x402973
  401f4c:	cmp    eax,0x1008
  401f51:	lea    r10,[rip+0xcc8]        # 0x402c20
  401f58:	jge    0x401af0
  401f5e:	mov    rcx,rbx
  401f61:	call   0x405978
  401f66:	mov    rbx,rax
  401f69:	call   QWORD PTR [rip+0xd54d]        # 0x40f4bc
  401f6f:	lea    rdx,[rip+0x8162]        # 0x40a0d8
  401f76:	lea    rcx,[rax+0x60]
  401f7a:	mov    r8,rbx
  401f7d:	call   0x407be0
  401f82:	xor    eax,eax
  401f84:	jmp    0x401b0c
  401f89:	mov    rcx,r14
  401f8c:	call   0x407ba0
  401f91:	lea    r14,[rsp+0x58]
  401f96:	jmp    0x401990
  401f9b:	mov    r8d,DWORD PTR [rip+0x734e]        # 0x4092f0
  401fa2:	mov    rcx,rbp
  401fa5:	mov    edx,0x10001
  401faa:	call   0x405928
  401faf:	mov    r8d,DWORD PTR [rip+0x7336]        # 0x4092ec
  401fb6:	mov    edx,0x10002
  401fbb:	mov    rcx,rbp
  401fbe:	call   0x405928
  401fc3:	jmp    0x4017a9
  401fc8:	cmp    QWORD PTR [rip+0xc068],0x0        # 0x40e038
  401fd0:	jne    0x40183d
  401fd6:	mov    rcx,rbx
  401fd9:	mov    QWORD PTR [rsp+0x90],0x0
  401fe5:	call   0x4058b0
  401fea:	test   rax,rax
  401fed:	mov    rdi,rax
  401ff0:	je     0x4018a6
  401ff6:	mov    r9,rsi
  401ff9:	mov    r8,r12
  401ffc:	mov    edx,0x8482
  402001:	mov    rcx,rbx
  402004:	call   0x405970
  402009:	test   eax,eax
  40200b:	jne    0x402ab3
  402011:	mov    r9,rsi
  402014:	mov    r8,r12
  402017:	mov    edx,0x830e
  40201c:	mov    rcx,rbx
  40201f:	call   0x405970
  402024:	test   eax,eax
  402026:	jne    0x402a93
  40202c:	mov    r9,rsi
  40202f:	mov    r8,r12
  402032:	mov    edx,0x85d8
  402037:	mov    rcx,rbx
  40203a:	call   0x405970
  40203f:	test   eax,eax
  402041:	jne    0x402a5f
  402047:	mov    QWORD PTR [rdi],rbp
  40204a:	or     DWORD PTR [rdi+0x20],0x2
  40204e:	jmp    0x401896
  402053:	mov    r8d,DWORD PTR [rsp+0x4c]
  402058:	mov    edx,0x101
  40205d:	mov    rcx,rbp
  402060:	call   0x405928
  402065:	jmp    0x4015ea
  40206a:	mov    r8d,DWORD PTR [rsp+0x48]
  40206f:	mov    edx,0x100
  402074:	mov    rcx,rbp
  402077:	call   0x405928
  40207c:	jmp    0x4015d0
  402081:	movzx  ecx,WORD PTR [rsp+0x42]
  402086:	mov    r15d,0x1
  40208c:	mov    r14,QWORD PTR [rsp+0x90]
  402094:	mov    r9,QWORD PTR [rsp+0x70]
  402099:	mov    rdi,QWORD PTR [rsp+0x68]
  40209e:	shl    r15d,cl
  4020a1:	test   r15d,r15d
  4020a4:	jle    0x402a31
  4020aa:	cmp    WORD PTR [rdi],0xff
  4020af:	ja     0x4025f7
  4020b5:	cmp    WORD PTR [r9],0xff
  4020bb:	ja     0x4025f7
  4020c1:	cmp    WORD PTR [r14],0xff
  4020c7:	ja     0x4025f7
  4020cd:	lea    edx,[r15-0x1]
  4020d1:	xor    eax,eax
  4020d3:	mov    r8,rdx
  4020d6:	add    rdx,rdx
  4020d9:	jmp    0x40210c
  4020db:	nop    DWORD PTR [rax+rax*1+0x0]
  4020e0:	cmp    WORD PTR [rdi+rax*1+0x2],0xff
  4020e7:	ja     0x4025f7
  4020ed:	cmp    WORD PTR [r9+rax*1+0x2],0xff
  4020f5:	ja     0x4025f7
  4020fb:	add    rax,0x2
  4020ff:	cmp    WORD PTR [r14+rax*1],0xff
  402106:	ja     0x4025f7
  40210c:	cmp    rax,rdx
  40210f:	jne    0x4020e0
  402111:	mov    rcx,rbx
  402114:	mov    QWORD PTR [rsp+0x30],r9
  402119:	mov    DWORD PTR [rsp+0x38],r8d
  40211e:	call   0x405978
  402123:	lea    rdx,[rip+0x7fe1]        # 0x40a10b
  40212a:	mov    rcx,rax
  40212d:	call   0x4058f8
  402132:	mov    r9,QWORD PTR [rsp+0x30]
  402137:	lea    r10,[rdi+0x10]
  40213b:	lea    rdx,[r14+0x10]
  40213f:	cmp    r14,r10
  402142:	lea    rcx,[r9+0x10]
  402146:	setae  r11b
  40214a:	cmp    rdi,rdx
  40214d:	setae  al
  402150:	or     r11d,eax
  402153:	cmp    r14,rcx
  402156:	setae  al
  402159:	cmp    r9,rdx
  40215c:	setae  dl
  40215f:	or     eax,edx
  402161:	and    eax,r11d
  402164:	cmp    r9,r10
  402167:	setae  r10b
  40216b:	cmp    rdi,rcx
  40216e:	setae  dl
  402171:	or     edx,r10d
  402174:	test   al,dl
  402176:	je     0x4029f0
  40217c:	cmp    r15d,0xa
  402180:	mov    r8d,DWORD PTR [rsp+0x38]
  402185:	jbe    0x4029f0
  40218b:	mov    rdx,rdi
  40218e:	and    edx,0xf
  402191:	shr    rdx,1
  402194:	neg    rdx
  402197:	and    edx,0x7
  40219a:	cmp    edx,r15d
  40219d:	cmova  edx,r15d
  4021a1:	xor    eax,eax
  4021a3:	test   edx,edx
  4021a5:	je     0x402337
  4021ab:	movzx  eax,WORD PTR [rdi]
  4021ae:	mov    ecx,eax
  4021b0:	shl    ecx,0x8
  4021b3:	add    eax,ecx
  4021b5:	mov    WORD PTR [rdi],ax
  4021b8:	movzx  eax,WORD PTR [r9]
  4021bc:	mov    ecx,eax
  4021be:	shl    ecx,0x8
  4021c1:	add    eax,ecx
  4021c3:	mov    WORD PTR [r9],ax
  4021c7:	movzx  eax,WORD PTR [r14]
  4021cb:	mov    ecx,eax
  4021cd:	shl    ecx,0x8
  4021d0:	add    eax,ecx
  4021d2:	cmp    edx,0x1
  4021d5:	mov    WORD PTR [r14],ax
  4021d9:	je     0x402af1
  4021df:	movzx  eax,WORD PTR [rdi+0x2]
  4021e3:	mov    ecx,eax
  4021e5:	shl    ecx,0x8
  4021e8:	add    eax,ecx
  4021ea:	mov    WORD PTR [rdi+0x2],ax
  4021ee:	movzx  eax,WORD PTR [r9+0x2]
  4021f3:	mov    ecx,eax
  4021f5:	shl    ecx,0x8
  4021f8:	add    eax,ecx
  4021fa:	mov    WORD PTR [r9+0x2],ax
  4021ff:	movzx  eax,WORD PTR [r14+0x2]
  402204:	mov    ecx,eax
  402206:	shl    ecx,0x8
  402209:	add    eax,ecx
  40220b:	cmp    edx,0x2
  40220e:	mov    WORD PTR [r14+0x2],ax
  402213:	je     0x402ae7
  402219:	movzx  eax,WORD PTR [rdi+0x4]
  40221d:	mov    ecx,eax
  40221f:	shl    ecx,0x8
  402222:	add    eax,ecx
  402224:	mov    WORD PTR [rdi+0x4],ax
  402228:	movzx  eax,WORD PTR [r9+0x4]
  40222d:	mov    ecx,eax
  40222f:	shl    ecx,0x8
  402232:	add    eax,ecx
  402234:	mov    WORD PTR [r9+0x4],ax
  402239:	movzx  eax,WORD PTR [r14+0x4]
  40223e:	mov    ecx,eax
  402240:	shl    ecx,0x8
  402243:	add    eax,ecx
  402245:	cmp    edx,0x3
  402248:	mov    WORD PTR [r14+0x4],ax
  40224d:	je     0x402add
  402253:	movzx  eax,WORD PTR [rdi+0x6]
  402257:	mov    ecx,eax
  402259:	shl    ecx,0x8
  40225c:	add    eax,ecx
  40225e:	mov    WORD PTR [rdi+0x6],ax
  402262:	movzx  eax,WORD PTR [r9+0x6]
  402267:	mov    ecx,eax
  402269:	shl    ecx,0x8
  40226c:	add    eax,ecx
  40226e:	mov    WORD PTR [r9+0x6],ax
  402273:	movzx  eax,WORD PTR [r14+0x6]
  402278:	mov    ecx,eax
  40227a:	shl    ecx,0x8
  40227d:	add    eax,ecx
  40227f:	cmp    edx,0x4
  402282:	mov    WORD PTR [r14+0x6],ax
  402287:	je     0x402ad3
  40228d:	movzx  eax,WORD PTR [rdi+0x8]
  402291:	mov    ecx,eax
  402293:	shl    ecx,0x8
  402296:	add    eax,ecx
  402298:	mov    WORD PTR [rdi+0x8],ax
  40229c:	movzx  eax,WORD PTR [r9+0x8]
  4022a1:	mov    ecx,eax
  4022a3:	shl    ecx,0x8
  4022a6:	add    eax,ecx
  4022a8:	mov    WORD PTR [r9+0x8],ax
  4022ad:	movzx  eax,WORD PTR [r14+0x8]
  4022b2:	mov    ecx,eax
  4022b4:	shl    ecx,0x8
  4022b7:	add    eax,ecx
  4022b9:	cmp    edx,0x5
  4022bc:	mov    WORD PTR [r14+0x8],ax
  4022c1:	je     0x402a89
  4022c7:	movzx  eax,WORD PTR [rdi+0xa]
  4022cb:	mov    ecx,eax
  4022cd:	shl    ecx,0x8
  4022d0:	add    eax,ecx
  4022d2:	mov    WORD PTR [rdi+0xa],ax
  4022d6:	movzx  eax,WORD PTR [r9+0xa]
  4022db:	mov    ecx,eax
  4022dd:	shl    ecx,0x8
  4022e0:	add    eax,ecx
  4022e2:	mov    WORD PTR [r9+0xa],ax
  4022e7:	movzx  eax,WORD PTR [r14+0xa]
  4022ec:	mov    ecx,eax
  4022ee:	shl    ecx,0x8
  4022f1:	add    eax,ecx
  4022f3:	cmp    edx,0x7
  4022f6:	mov    WORD PTR [r14+0xa],ax
  4022fb:	jne    0x402a7f
  402301:	movzx  eax,WORD PTR [rdi+0xc]
  402305:	mov    ecx,eax
  402307:	shl    ecx,0x8
  40230a:	add    eax,ecx
  40230c:	mov    WORD PTR [rdi+0xc],ax
  402310:	movzx  eax,WORD PTR [r9+0xc]
  402315:	mov    ecx,eax
  402317:	shl    ecx,0x8
  40231a:	add    eax,ecx
  40231c:	mov    WORD PTR [r9+0xc],ax
  402321:	movzx  eax,WORD PTR [r14+0xc]
  402326:	mov    ecx,eax
  402328:	shl    ecx,0x8
  40232b:	add    eax,ecx
  40232d:	mov    WORD PTR [r14+0xc],ax
  402332:	mov    eax,0x7
  402337:	mov    r11d,r15d
  40233a:	sub    r8d,edx
  40233d:	mov    ecx,edx
  40233f:	sub    r11d,edx
  402342:	lea    r10d,[r11-0x8]
  402346:	mov    DWORD PTR [rsp+0x30],r11d
  40234b:	shr    r10d,0x3
  40234f:	lea    r11d,[r10+0x1]
  402353:	mov    DWORD PTR [rsp+0x38],r11d
  402358:	shl    r11d,0x3
  40235c:	cmp    r8d,0x6
  402360:	mov    DWORD PTR [rsp+0x3c],r11d
  402365:	jbe    0x4023cc
  402367:	add    rcx,rcx
  40236a:	movdqa xmm0,XMMWORD PTR [rip+0x86ce]        # 0x40aa40
  402372:	lea    r11,[rdi+rcx*1]
  402376:	lea    r10,[r9+rcx*1]
  40237a:	xor    edx,edx
  40237c:	add    rcx,r14
  40237f:	xor    r8d,r8d
  402382:	movdqa xmm1,XMMWORD PTR [r11+rdx*1]
  402388:	add    r8d,0x1
  40238c:	pmullw xmm1,xmm0
  402390:	movaps XMMWORD PTR [r11+rdx*1],xmm1
  402395:	movdqu xmm1,XMMWORD PTR [r10+rdx*1]
  40239b:	pmullw xmm1,xmm0
  40239f:	movups XMMWORD PTR [r10+rdx*1],xmm1
  4023a4:	movdqu xmm1,XMMWORD PTR [rcx+rdx*1]
  4023a9:	pmullw xmm1,xmm0
  4023ad:	movups XMMWORD PTR [rcx+rdx*1],xmm1
  4023b1:	add    rdx,0x10
  4023b5:	cmp    r8d,DWORD PTR [rsp+0x38]
  4023ba:	jb     0x402382
  4023bc:	mov    ecx,DWORD PTR [rsp+0x3c]
  4023c0:	add    eax,ecx
  4023c2:	cmp    DWORD PTR [rsp+0x30],ecx
  4023c6:	je     0x4025e5
  4023cc:	movsxd rdx,eax
  4023cf:	add    rdx,rdx
  4023d2:	lea    r8,[rdi+rdx*1]
  4023d6:	movzx  ecx,WORD PTR [r8]
  4023da:	mov    r10d,ecx
  4023dd:	shl    r10d,0x8
  4023e1:	add    ecx,r10d
  4023e4:	mov    WORD PTR [r8],cx
  4023e8:	lea    r8,[r9+rdx*1]
  4023ec:	add    rdx,r14
  4023ef:	movzx  ecx,WORD PTR [r8]
  4023f3:	mov    r10d,ecx
  4023f6:	shl    r10d,0x8
  4023fa:	add    ecx,r10d
  4023fd:	mov    WORD PTR [r8],cx
  402401:	movzx  ecx,WORD PTR [rdx]
  402404:	mov    r8d,ecx
  402407:	shl    r8d,0x8
  40240b:	add    ecx,r8d
  40240e:	mov    WORD PTR [rdx],cx
  402411:	lea    edx,[rax+0x1]
  402414:	cmp    r15d,edx
  402417:	jle    0x4025e5
  40241d:	movsxd rdx,edx
  402420:	add    rdx,rdx
  402423:	lea    r8,[rdi+rdx*1]
  402427:	movzx  ecx,WORD PTR [r8]
  40242b:	mov    r10d,ecx
  40242e:	shl    r10d,0x8
  402432:	add    ecx,r10d
  402435:	mov    WORD PTR [r8],cx
  402439:	lea    r8,[r9+rdx*1]
  40243d:	add    rdx,r14
  402440:	movzx  ecx,WORD PTR [r8]
  402444:	mov    r10d,ecx
  402447:	shl    r10d,0x8
  40244b:	add    ecx,r10d
  40244e:	mov    WORD PTR [r8],cx
  402452:	movzx  ecx,WORD PTR [rdx]
  402455:	mov    r8d,ecx
  402458:	shl    r8d,0x8
  40245c:	add    ecx,r8d
  40245f:	mov    WORD PTR [rdx],cx
  402462:	lea    edx,[rax+0x2]
  402465:	cmp    r15d,edx
  402468:	jle    0x4025e5
  40246e:	movsxd rdx,edx
  402471:	add    rdx,rdx
  402474:	lea    r8,[rdi+rdx*1]
  402478:	movzx  ecx,WORD PTR [r8]
  40247c:	mov    r10d,ecx
  40247f:	shl    r10d,0x8
  402483:	add    ecx,r10d
  402486:	mov    WORD PTR [r8],cx
  40248a:	lea    r8,[r9+rdx*1]
  40248e:	add    rdx,r14
  402491:	movzx  ecx,WORD PTR [r8]
  402495:	mov    r10d,ecx
  402498:	shl    r10d,0x8
  40249c:	add    ecx,r10d
  40249f:	mov    WORD PTR [r8],cx
  4024a3:	movzx  ecx,WORD PTR [rdx]
  4024a6:	mov    r8d,ecx
  4024a9:	shl    r8d,0x8
  4024ad:	add    ecx,r8d
  4024b0:	mov    WORD PTR [rdx],cx
  4024b3:	lea    edx,[rax+0x3]
  4024b6:	cmp    r15d,edx
  4024b9:	jle    0x4025e5
  4024bf:	movsxd rdx,edx
  4024c2:	add    rdx,rdx
  4024c5:	lea    r8,[rdi+rdx*1]
  4024c9:	movzx  ecx,WORD PTR [r8]
  4024cd:	mov    r10d,ecx
  4024d0:	shl    r10d,0x8
  4024d4:	add    ecx,r10d
  4024d7:	mov    WORD PTR [r8],cx
  4024db:	lea    r8,[r9+rdx*1]
  4024df:	add    rdx,r14
  4024e2:	movzx  ecx,WORD PTR [r8]
  4024e6:	mov    r10d,ecx
  4024e9:	shl    r10d,0x8
  4024ed:	add    ecx,r10d
  4024f0:	mov    WORD PTR [r8],cx
  4024f4:	movzx  ecx,WORD PTR [rdx]
  4024f7:	mov    r8d,ecx
  4024fa:	shl    r8d,0x8
  4024fe:	add    ecx,r8d
  402501:	mov    WORD PTR [rdx],cx
  402504:	lea    edx,[rax+0x4]
  402507:	cmp    r15d,edx
  40250a:	jle    0x4025e5
  402510:	movsxd rdx,edx
  402513:	add    rdx,rdx
  402516:	lea    r8,[rdi+rdx*1]
  40251a:	movzx  ecx,WORD PTR [r8]
  40251e:	mov    r10d,ecx
  402521:	shl    r10d,0x8
  402525:	add    ecx,r10d
  402528:	mov    WORD PTR [r8],cx
  40252c:	lea    r8,[r9+rdx*1]
  402530:	add    rdx,r14
  402533:	movzx  ecx,WORD PTR [r8]
  402537:	mov    r10d,ecx
  40253a:	shl    r10d,0x8
  40253e:	add    ecx,r10d
  402541:	mov    WORD PTR [r8],cx
  402545:	movzx  ecx,WORD PTR [rdx]
  402548:	mov    r8d,ecx
  40254b:	shl    r8d,0x8
  40254f:	add    ecx,r8d
  402552:	mov    WORD PTR [rdx],cx
  402555:	lea    edx,[rax+0x5]
  402558:	cmp    r15d,edx
  40255b:	jle    0x4025e5
  402561:	movsxd rdx,edx
  402564:	add    eax,0x6
  402567:	add    rdx,rdx
  40256a:	lea    r8,[rdi+rdx*1]
  40256e:	movzx  ecx,WORD PTR [r8]
  402572:	mov    r10d,ecx
  402575:	shl    r10d,0x8
  402579:	add    ecx,r10d
  40257c:	mov    WORD PTR [r8],cx
  402580:	lea    r8,[r9+rdx*1]
  402584:	add    rdx,r14
  402587:	movzx  ecx,WORD PTR [r8]
  40258b:	mov    r10d,ecx
  40258e:	shl    r10d,0x8
  402592:	add    ecx,r10d
  402595:	mov    WORD PTR [r8],cx
  402599:	movzx  ecx,WORD PTR [rdx]
  40259c:	mov    r8d,ecx
  40259f:	shl    r8d,0x8
  4025a3:	add    ecx,r8d
  4025a6:	cmp    r15d,eax
  4025a9:	mov    WORD PTR [rdx],cx
  4025ac:	jle    0x4025e5
  4025ae:	cdqe   
  4025b0:	add    rax,rax
  4025b3:	add    rdi,rax
  4025b6:	add    r9,rax
  4025b9:	add    rax,r14
  4025bc:	movzx  edx,WORD PTR [rdi]
  4025bf:	mov    ecx,edx
  4025c1:	shl    ecx,0x8
  4025c4:	add    edx,ecx
  4025c6:	mov    WORD PTR [rdi],dx
  4025c9:	movzx  edx,WORD PTR [r9]
  4025cd:	mov    ecx,edx
  4025cf:	shl    ecx,0x8
  4025d2:	add    edx,ecx
  4025d4:	mov    WORD PTR [r9],dx
  4025d8:	movzx  edx,WORD PTR [rax]
  4025db:	mov    ecx,edx
  4025dd:	shl    ecx,0x8
  4025e0:	add    edx,ecx
  4025e2:	mov    WORD PTR [rax],dx
  4025e5:	mov    r14,QWORD PTR [rsp+0x90]
  4025ed:	mov    r9,QWORD PTR [rsp+0x70]
  4025f2:	mov    rdi,QWORD PTR [rsp+0x68]
  4025f7:	mov    QWORD PTR [rsp+0x20],r14
  4025fc:	mov    r8,rdi
  4025ff:	mov    edx,0x140
  402604:	mov    rcx,rbp
  402607:	call   0x405928
  40260c:	jmp    0x401784
  402611:	lea    r12,[rsp+0x70]
  402616:	lea    r8,[rsp+0x60]
  40261b:	mov    QWORD PTR [rsp+0x28],rsi
  402620:	mov    r9,r13
  402623:	mov    edx,0x12d
  402628:	mov    rcx,rbx
  40262b:	mov    QWORD PTR [rsp+0x20],r12
  402630:	call   0x405970
  402635:	test   eax,eax
  402637:	je     0x401764
  40263d:	mov    rax,QWORD PTR [rsp+0x90]
  402645:	mov    r9,QWORD PTR [rsp+0x68]
  40264a:	mov    edx,0x12d
  40264f:	mov    r8,QWORD PTR [rsp+0x60]
  402654:	mov    rcx,rbp
  402657:	mov    QWORD PTR [rsp+0x28],rax
  40265c:	mov    rax,QWORD PTR [rsp+0x70]
  402661:	mov    QWORD PTR [rsp+0x20],rax
  402666:	call   0x405928
  40266b:	jmp    0x401764
  402670:	movzx  r8d,WORD PTR [rsp+0x44]
  402676:	mov    edx,0x115
  40267b:	mov    rcx,rbp
  40267e:	call   0x405928
  402683:	mov    eax,DWORD PTR [rip+0x6c6f]        # 0x4092f8
  402689:	cmp    eax,0xffffffff
  40268c:	jne    0x4016a8
  402692:	mov    rcx,rbx
  402695:	call   0x405968
  40269a:	mov    DWORD PTR [rip+0x6c58],eax        # 0x4092f8
  4026a0:	jmp    0x4016a8
  4026a5:	mov    rdx,QWORD PTR [rip+0xb98c]        # 0x40e038
  4026ac:	test   rdx,rdx
  4026af:	je     0x401896
  4026b5:	mov    rcx,rax
  4026b8:	call   0x4058a8
  4026bd:	test   eax,eax
  4026bf:	jne    0x401896
  4026c5:	call   QWORD PTR [rip+0xcdf1]        # 0x40f4bc
  4026cb:	lea    rcx,[rip+0x795d]        # 0x40a02f
  4026d2:	lea    r9,[rax+0x60]
  4026d6:	mov    r8d,0x1c
  4026dc:	mov    edx,0x1
  4026e1:	call   0x407bc0
  4026e6:	mov    ecx,0xffffffff
  4026eb:	call   0x407bf8
  4026f0:	lea    r8,[rip+0xb955]        # 0x40e04c
  4026f7:	mov    edx,0x124
  4026fc:	mov    rcx,rbx
  4026ff:	call   0x405970
  402704:	test   eax,eax
  402706:	je     0x401746
  40270c:	mov    r8d,DWORD PTR [rip+0xb939]        # 0x40e04c
  402713:	jmp    0x401739
  402718:	movzx  r8d,WORD PTR [rsp+0x46]
  40271e:	mov    edx,0x106
  402723:	mov    rcx,rbp
  402726:	call   0x405928
  40272b:	jmp    0x401653
  402730:	mov    r8,rsi
  402733:	mov    edx,0x116
  402738:	mov    rcx,rbx
  40273b:	xor    r12d,r12d
  40273e:	mov    DWORD PTR [rsp+0x90],0xffffffff
  402749:	call   0x405970
  40274e:	mov    eax,DWORD PTR [rsp+0x90]
  402755:	cmp    DWORD PTR [rip+0xb8f5],eax        # 0x40e050
  40275b:	sete   r12b
  40275f:	jmp    0x401a4a
  402764:	cmp    eax,0x1013
  402769:	jg     0x402787
  40276b:	cmp    eax,0x1011
  402770:	lea    r10,[rip+0x3c9]        # 0x402b40
  402777:	lea    rax,[rip+0x2f92]        # 0x405710
  40277e:	cmovg  r10,rax
  402782:	jmp    0x401af0
  402787:	cmp    eax,0x1015
  40278c:	jle    0x40295b
  402792:	cmp    eax,0x1017
  402797:	lea    r10,[rip+0x26f2]        # 0x404e90
  40279e:	jle    0x401af0
  4027a4:	jmp    0x401f5e
  4027a9:	nop    DWORD PTR [rax+0x0]
  4027b0:	movsd  xmm1,QWORD PTR [rsp+0x70]
  4027b6:	xor    eax,eax
  4027b8:	mov    rdi,rsi
  4027bb:	mov    ecx,0x10
  4027c0:	mov    r9,rsi
  4027c3:	rep stos QWORD PTR es:[rdi],rax
  4027c6:	movsd  QWORD PTR [rsp+0x90],xmm1
  4027cf:	addsd  xmm1,xmm2
  4027d3:	mov    r8d,0x10
  4027d9:	movsd  QWORD PTR [rsp+0x98],xmm2
  4027e2:	mov    edx,0x85d8
  4027e7:	mov    rcx,rbp
  4027ea:	movsd  xmm2,QWORD PTR [rip+0x826e]        # 0x40aa60
  4027f2:	movsd  xmm3,QWORD PTR [rsp+0x50]
  4027f8:	mulsd  xmm1,xmm2
  4027fc:	movsd  QWORD PTR [rsp+0xb0],xmm0
  402805:	movsd  xmm4,QWORD PTR [rip+0x825b]        # 0x40aa68
  40280d:	movsd  QWORD PTR [rsp+0x108],xmm4
  402816:	subsd  xmm3,xmm1
  40281a:	movsd  xmm1,QWORD PTR [rsp+0x78]
  402820:	addsd  xmm0,xmm1
  402824:	movsd  QWORD PTR [rsp+0xb8],xmm1
  40282d:	movsd  xmm1,QWORD PTR [rsp+0x58]
  402833:	movsd  QWORD PTR [rsp+0xa8],xmm3
  40283c:	mulsd  xmm0,xmm2
  402840:	subsd  xmm1,xmm0
  402844:	movsd  QWORD PTR [rsp+0xc8],xmm1
  40284d:	call   0x405928
  402852:	jmp    0x401990
  402857:	lea    r8,[rip+0xb806]        # 0x40e064
  40285e:	mov    edx,0x142
  402863:	mov    rcx,rbx
  402866:	call   0x405970
  40286b:	jmp    0x4016bd
  402870:	lea    r8,[rip+0xb7e9]        # 0x40e060
  402877:	mov    edx,0x143
  40287c:	mov    rcx,rbx
  40287f:	call   0x405970
  402884:	jmp    0x4016ca
  402889:	lea    r8,[rip+0xb7c0]        # 0x40e050
  402890:	mov    edx,0x116
  402895:	mov    rcx,rbx
  402898:	call   0x405970
  40289d:	mov    edx,DWORD PTR [rip+0xb7ad]        # 0x40e050
  4028a3:	jmp    0x401ccf
  4028a8:	lea    r10,[rip+0x27c1]        # 0x405070
  4028af:	jmp    0x401af0
  4028b4:	lea    r10,[rip+0x2c15]        # 0x4054d0
  4028bb:	jmp    0x401af0
  4028c0:	cmp    eax,0x813
  4028c5:	lea    r10,[rip+0x2864]        # 0x405130
  4028cc:	jg     0x401af0
  4028d2:	cmp    eax,0x811
  4028d7:	lea    r10,[rip+0x4b2]        # 0x402d90
  4028de:	lea    rax,[rip+0x2b2b]        # 0x405410
  4028e5:	cmovg  r10,rax
  4028e9:	jmp    0x401af0
  4028ee:	mov    eax,DWORD PTR [rip+0xb76c]        # 0x40e060
  4028f4:	cmp    DWORD PTR [rsp+0x90],eax
  4028fb:	jne    0x401a47
  402901:	jmp    0x401f11
  402906:	lea    r8,[rip+0xb749]        # 0x40e056
  40290d:	mov    edx,0x13d
  402912:	mov    rcx,rbx
  402915:	call   0x405970
  40291a:	test   eax,eax
  40291c:	je     0x4017a9
  402922:	movzx  r8d,WORD PTR [rip+0xb72c]        # 0x40e056
  40292a:	mov    edx,0x13d
  40292f:	mov    rcx,rbp
  402932:	call   0x405928
  402937:	jmp    0x4017a9
  40293c:	mov    edx,DWORD PTR [rip+0xb71a]        # 0x40e05c
  402942:	lea    r10,[rip+0x597]        # 0x402ee0
  402949:	lea    rax,[rip+0x630]        # 0x402f80
  402950:	test   edx,edx
  402952:	cmovne r10,rax
  402956:	jmp    0x401af0
  40295b:	lea    r10,[rip+0x293e]        # 0x4052a0
  402962:	jmp    0x401af0
  402967:	lea    r10,[rip+0x2492]        # 0x404e00
  40296e:	jmp    0x401af0
  402973:	lea    r10,[rip+0x2c16]        # 0x405590
  40297a:	jmp    0x401af0
  40297f:	lea    r10,[rip+0x259a]        # 0x404f20
  402986:	jmp    0x401af0
  40298b:	lea    r10,[rip+0x264e]        # 0x404fe0
  402992:	jmp    0x401af0
  402997:	lea    r10,[rip+0x23d2]        # 0x404d70
  40299e:	jmp    0x401af0
  4029a3:	lea    rcx,[rip+0x765a]        # 0x40a004
  4029aa:	call   0x407b90
  4029af:	jmp    0x4018a6
  4029b4:	mov    rcx,rbx
  4029b7:	call   0x405978
  4029bc:	mov    rbx,rax
  4029bf:	call   QWORD PTR [rip+0xcaf7]        # 0x40f4bc
  4029c5:	lea    rdx,[rip+0x76c4]        # 0x40a090
  4029cc:	lea    rcx,[rax+0x60]
  4029d0:	mov    r8,rbx
  4029d3:	call   0x407be0
  4029d8:	xor    eax,eax
  4029da:	jmp    0x401b0c
  4029df:	movsd  xmm1,QWORD PTR [rip+0x8069]        # 0x40aa50
  4029e7:	xorpd  xmm0,xmm1
  4029eb:	jmp    0x401dd9
  4029f0:	xor    eax,eax
  4029f2:	movzx  edx,WORD PTR [rdi+rax*2]
  4029f6:	mov    ecx,edx
  4029f8:	shl    ecx,0x8
  4029fb:	add    edx,ecx
  4029fd:	mov    WORD PTR [rdi+rax*2],dx
  402a01:	movzx  edx,WORD PTR [r9+rax*2]
  402a06:	mov    ecx,edx
  402a08:	shl    ecx,0x8
  402a0b:	add    edx,ecx
  402a0d:	mov    WORD PTR [r9+rax*2],dx
  402a12:	movzx  edx,WORD PTR [r14+rax*2]
  402a17:	mov    ecx,edx
  402a19:	shl    ecx,0x8
  402a1c:	add    edx,ecx
  402a1e:	mov    WORD PTR [r14+rax*2],dx
  402a23:	add    rax,0x1
  402a27:	cmp    r15d,eax
  402a2a:	jg     0x4029f2
  402a2c:	jmp    0x4025e5
  402a31:	mov    rcx,rbx
  402a34:	call   0x405978
  402a39:	lea    rdx,[rip+0x76cb]        # 0x40a10b
  402a40:	mov    rcx,rax
  402a43:	call   0x4058f8
  402a48:	mov    r14,QWORD PTR [rsp+0x90]
  402a50:	mov    r9,QWORD PTR [rsp+0x70]
  402a55:	mov    rdi,QWORD PTR [rsp+0x68]
  402a5a:	jmp    0x4025f7
  402a5f:	movsx  r8d,WORD PTR [rsp+0x70]
  402a65:	mov    r9,QWORD PTR [rsp+0x90]
  402a6d:	mov    edx,0x85d8
  402a72:	mov    rcx,rbp
  402a75:	call   0x405928
  402a7a:	jmp    0x402047
  402a7f:	mov    eax,0x6
  402a84:	jmp    0x402337
  402a89:	mov    eax,0x5
  402a8e:	jmp    0x402337
  402a93:	movsx  r8d,WORD PTR [rsp+0x70]
  402a99:	mov    r9,QWORD PTR [rsp+0x90]
  402aa1:	mov    edx,0x830e
  402aa6:	mov    rcx,rbp
  402aa9:	call   0x405928
  402aae:	jmp    0x40202c
  402ab3:	movsx  r8d,WORD PTR [rsp+0x70]
  402ab9:	mov    r9,QWORD PTR [rsp+0x90]
  402ac1:	mov    edx,0x8482
  402ac6:	mov    rcx,rbp
  402ac9:	call   0x405928
  402ace:	jmp    0x402011
  402ad3:	mov    eax,0x4
  402ad8:	jmp    0x402337
  402add:	mov    eax,0x3
  402ae2:	jmp    0x402337
  402ae7:	mov    eax,0x2
  402aec:	jmp    0x402337
  402af1:	mov    eax,0x1
  402af6:	jmp    0x402337
  402afb:	mov    rcx,QWORD PTR [rip+0xb53e]        # 0x40e040
  402b02:	call   0x407ba0
  402b07:	mov    ecx,0xffffffff
  402b0c:	call   0x407bf8
  402b11:	call   QWORD PTR [rip+0xc9a5]        # 0x40f4bc
  402b17:	lea    rcx,[rip+0x74fa]        # 0x40a018
  402b1e:	lea    r9,[rax+0x60]
  402b22:	mov    r8d,0x16
  402b28:	mov    edx,0x1
  402b2d:	call   0x407bc0
  402b32:	mov    ecx,0xffffffff
  402b37:	call   0x407bf8
  402b3c:	nop
  402b3d:	nop    DWORD PTR [rax]
  402b40:	push   r14
  402b42:	push   r13
  402b44:	push   r12
  402b46:	push   rbp
  402b47:	push   rdi
  402b48:	push   rsi
  402b49:	push   rbx
  402b4a:	sub    rsp,0x20
  402b4e:	mov    ebx,DWORD PTR [rsp+0x80]
  402b55:	mov    rbp,rcx
  402b58:	mov    r13,rdx
  402b5b:	mov    r12d,r8d
  402b5e:	call   0x405930
  402b63:	mov    rcx,rax
  402b66:	call   0x4058c8
  402b6b:	test   bx,bx
  402b6e:	mov    rdi,rax
  402b71:	je     0x402bcc
  402b73:	lea    r14d,[rbx-0x1]
  402b77:	xor    esi,esi
  402b79:	movzx  r14d,r14w
  402b7d:	add    r14d,0x1
  402b81:	test   r12d,r12d
  402b84:	je     0x402bf0
  402b86:	xor    ebx,ebx
  402b88:	jmp    0x402bad
  402b8a:	nop    WORD PTR [rax+rax*1+0x0]
  402b90:	mov    r9d,esi
  402b93:	mov    r8d,ebx
  402b96:	mov    rdx,rdi
  402b99:	mov    rcx,r13
  402b9c:	call   0x4058e0
  402ba1:	test   eax,eax
  402ba3:	js     0x402c00
  402ba5:	add    ebx,0x1
  402ba8:	cmp    ebx,r12d
  402bab:	je     0x402bf0
  402bad:	mov    r9d,esi
  402bb0:	mov    r8d,ebx
  402bb3:	mov    rdx,rdi
  402bb6:	mov    rcx,rbp
  402bb9:	call   0x405940
  402bbe:	test   eax,eax
  402bc0:	jns    0x402b90
  402bc2:	mov    eax,DWORD PTR [rip+0xb480]        # 0x40e048
  402bc8:	test   eax,eax
  402bca:	jne    0x402b90
  402bcc:	mov    rcx,rdi
  402bcf:	call   0x4058d0
  402bd4:	mov    eax,0x1
  402bd9:	add    rsp,0x20
  402bdd:	pop    rbx
  402bde:	pop    rsi
  402bdf:	pop    rdi
  402be0:	pop    rbp
  402be1:	pop    r12
  402be3:	pop    r13
  402be5:	pop    r14
  402be7:	ret    
  402be8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bf0:	add    esi,0x1
  402bf3:	cmp    esi,r14d
  402bf6:	jne    0x402b81
  402bf8:	jmp    0x402bcc
  402bfa:	nop    WORD PTR [rax+rax*1+0x0]
  402c00:	mov    rcx,rdi
  402c03:	call   0x4058d0
  402c08:	xor    eax,eax
  402c0a:	add    rsp,0x20
  402c0e:	pop    rbx
  402c0f:	pop    rsi
  402c10:	pop    rdi
  402c11:	pop    rbp
  402c12:	pop    r12
  402c14:	pop    r13
  402c16:	pop    r14
  402c18:	ret    
  402c19:	nop    DWORD PTR [rax+0x0]
  402c20:	push   r15
  402c22:	push   r14
  402c24:	push   r13
  402c26:	push   r12
  402c28:	push   rbp
  402c29:	push   rdi
  402c2a:	push   rsi
  402c2b:	push   rbx
  402c2c:	sub    rsp,0x38
  402c30:	movzx  edi,WORD PTR [rsp+0xa0]
  402c38:	xor    ebx,ebx
  402c3a:	mov    QWORD PTR [rsp+0x88],rdx
  402c42:	mov    DWORD PTR [rsp+0x90],r8d
  402c4a:	mov    r14d,r9d
  402c4d:	mov    r13,rcx
  402c50:	call   0x405930
  402c55:	mov    rcx,rax
  402c58:	call   0x4058c8
  402c5d:	mov    rcx,QWORD PTR [rsp+0x88]
  402c65:	mov    r15,rax
  402c68:	call   0x405930
  402c6d:	mov    rcx,rax
  402c70:	call   0x4058c8
  402c75:	mov    edx,DWORD PTR [rsp+0x90]
  402c7c:	mov    rsi,rax
  402c7f:	test   edx,edx
  402c81:	je     0x402d2a
  402c87:	lea    ebp,[rdi-0x1]
  402c8a:	lea    r12d,[r14-0x1]
  402c8e:	movzx  ebp,bp
  402c91:	add    r12,0x1
  402c95:	lea    rax,[rbp+0x1]
  402c99:	mov    QWORD PTR [rsp+0x28],rax
  402c9e:	test   di,di
  402ca1:	je     0x402d00
  402ca3:	xor    ebp,ebp
  402ca5:	mov    rax,rbp
  402ca8:	mov    rbp,r15
  402cab:	mov    r15,rax
  402cae:	xchg   ax,ax
  402cb0:	mov    r9d,r15d
  402cb3:	mov    r8d,ebx
  402cb6:	mov    rdx,rbp
  402cb9:	mov    rcx,r13
  402cbc:	call   0x405940
  402cc1:	test   eax,eax
  402cc3:	js     0x402d60
  402cc9:	test   r14d,r14d
  402ccc:	lea    rdx,[rsi+r15*1]
  402cd0:	movzx  r9d,di
  402cd4:	lea    r8,[rbp+r12*1+0x0]
  402cd9:	mov    rax,rbp
  402cdc:	je     0x402cf2
  402cde:	xchg   ax,ax
  402ce0:	add    rax,0x1
  402ce4:	movzx  ecx,BYTE PTR [rax-0x1]
  402ce8:	mov    BYTE PTR [rdx],cl
  402cea:	add    rdx,r9
  402ced:	cmp    rax,r8
  402cf0:	jne    0x402ce0
  402cf2:	add    r15,0x1
  402cf6:	cmp    r15,QWORD PTR [rsp+0x28]
  402cfb:	jne    0x402cb0
  402cfd:	mov    r15,rbp
  402d00:	mov    rcx,QWORD PTR [rsp+0x88]
  402d08:	xor    r9d,r9d
  402d0b:	mov    r8d,ebx
  402d0e:	mov    rdx,rsi
  402d11:	call   0x4058e0
  402d16:	test   eax,eax
  402d18:	js     0x402d73
  402d1a:	add    ebx,0x1
  402d1d:	cmp    ebx,DWORD PTR [rsp+0x90]
  402d24:	jne    0x402c9e
  402d2a:	test   r15,r15
  402d2d:	je     0x402d37
  402d2f:	mov    rcx,r15
  402d32:	call   0x4058d0
  402d37:	test   rsi,rsi
  402d3a:	mov    ebx,0x1
  402d3f:	je     0x402d49
  402d41:	mov    rcx,rsi
  402d44:	call   0x4058d0
  402d49:	mov    eax,ebx
  402d4b:	add    rsp,0x38
  402d4f:	pop    rbx
  402d50:	pop    rsi
  402d51:	pop    rdi
  402d52:	pop    rbp
  402d53:	pop    r12
  402d55:	pop    r13
  402d57:	pop    r14
  402d59:	pop    r15
  402d5b:	ret    
  402d5c:	nop    DWORD PTR [rax+0x0]
  402d60:	mov    eax,DWORD PTR [rip+0xb2e2]        # 0x40e048
  402d66:	test   eax,eax
  402d68:	jne    0x402cc9
  402d6e:	mov    r15,rbp
  402d71:	jmp    0x402d2a
  402d73:	test   r15,r15
  402d76:	je     0x402d80
  402d78:	mov    rcx,r15
  402d7b:	call   0x4058d0
  402d80:	xor    ebx,ebx
  402d82:	test   rsi,rsi
  402d85:	jne    0x402d41
  402d87:	jmp    0x402d49
  402d89:	nop    DWORD PTR [rax+0x0]
  402d90:	push   r15
  402d92:	push   r14
  402d94:	push   r13
  402d96:	push   r12
  402d98:	push   rbp
  402d99:	push   rdi
  402d9a:	push   rsi
  402d9b:	push   rbx
  402d9c:	sub    rsp,0x38
  402da0:	mov    ebx,DWORD PTR [rsp+0xa0]
  402da7:	mov    r14,rdx
  402daa:	mov    r15d,r8d
  402dad:	mov    r13d,r9d
  402db0:	mov    QWORD PTR [rsp+0x80],rcx
  402db8:	mov    WORD PTR [rsp+0x26],bx
  402dbd:	call   0x405930
  402dc2:	mov    rcx,rax
  402dc5:	call   0x4058c8
  402dca:	mov    rcx,r14
  402dcd:	mov    rdi,rax
  402dd0:	call   0x405930
  402dd5:	mov    rcx,rax
  402dd8:	call   0x4058c8
  402ddd:	test   bx,bx
  402de0:	mov    rsi,rax
  402de3:	je     0x402e7d
  402de9:	lea    eax,[rbx-0x1]
  402dec:	lea    r12d,[r13-0x1]
  402df0:	mov    rbp,rdi
  402df3:	movzx  eax,ax
  402df6:	add    r12,0x1
  402dfa:	lea    rax,[rdi+rax*1+0x1]
  402dff:	mov    QWORD PTR [rsp+0x28],rax
  402e04:	xor    ebx,ebx
  402e06:	test   r15d,r15d
  402e09:	je     0x402e72
  402e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e10:	mov    rcx,QWORD PTR [rsp+0x80]
  402e18:	xor    r9d,r9d
  402e1b:	mov    r8d,ebx
  402e1e:	mov    rdx,rdi
  402e21:	call   0x405940
  402e26:	test   eax,eax
  402e28:	js     0x402ea0
  402e2a:	test   r13d,r13d
  402e2d:	mov    rdx,rbp
  402e30:	movzx  r9d,WORD PTR [rsp+0x26]
  402e36:	lea    r8,[rsi+r12*1]
  402e3a:	mov    rax,rsi
  402e3d:	je     0x402e52
  402e3f:	nop
  402e40:	movzx  ecx,BYTE PTR [rdx]
  402e43:	add    rax,0x1
  402e47:	add    rdx,r9
  402e4a:	cmp    rax,r8
  402e4d:	mov    BYTE PTR [rax-0x1],cl
  402e50:	jne    0x402e40
  402e52:	mov    r9d,ebp
  402e55:	mov    r8d,ebx
  402e58:	mov    rdx,rsi
  402e5b:	sub    r9d,edi
  402e5e:	mov    rcx,r14
  402e61:	call   0x4058e0
  402e66:	test   eax,eax
  402e68:	js     0x402eb1
  402e6a:	add    ebx,0x1
  402e6d:	cmp    ebx,r15d
  402e70:	jne    0x402e10
  402e72:	add    rbp,0x1
  402e76:	cmp    rbp,QWORD PTR [rsp+0x28]
  402e7b:	jne    0x402e04
  402e7d:	test   rdi,rdi
  402e80:	je     0x402e8a
  402e82:	mov    rcx,rdi
  402e85:	call   0x4058d0
  402e8a:	test   rsi,rsi
  402e8d:	mov    ebx,0x1
  402e92:	jne    0x402ec5
  402e94:	jmp    0x402ecd
  402e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ea0:	mov    eax,DWORD PTR [rip+0xb1a2]        # 0x40e048
  402ea6:	test   eax,eax
  402ea8:	jne    0x402e2a
  402eaa:	test   rdi,rdi
  402ead:	jne    0x402e82
  402eaf:	jmp    0x402e8a
  402eb1:	test   rdi,rdi
  402eb4:	je     0x402ebe
  402eb6:	mov    rcx,rdi
  402eb9:	call   0x4058d0
  402ebe:	xor    ebx,ebx
  402ec0:	test   rsi,rsi
  402ec3:	je     0x402ecd
  402ec5:	mov    rcx,rsi
  402ec8:	call   0x4058d0
  402ecd:	mov    eax,ebx
  402ecf:	add    rsp,0x38
  402ed3:	pop    rbx
  402ed4:	pop    rsi
  402ed5:	pop    rdi
  402ed6:	pop    rbp
  402ed7:	pop    r12
  402ed9:	pop    r13
  402edb:	pop    r14
  402edd:	pop    r15
  402edf:	ret    
  402ee0:	push   r12
  402ee2:	push   rbp
  402ee3:	push   rdi
  402ee4:	push   rsi
  402ee5:	push   rbx
  402ee6:	sub    rsp,0x20
  402eea:	xor    ebx,ebx
  402eec:	mov    ebp,r8d
  402eef:	mov    rdi,rcx
  402ef2:	mov    r12,rdx
  402ef5:	call   0x405930
  402efa:	mov    rcx,rax
  402efd:	call   0x4058c8
  402f02:	test   ebp,ebp
  402f04:	mov    rsi,rax
  402f07:	jne    0x402f2c
  402f09:	jmp    0x402f4b
  402f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f10:	xor    r9d,r9d
  402f13:	mov    r8d,ebx
  402f16:	mov    rdx,rsi
  402f19:	mov    rcx,r12
  402f1c:	call   0x4058e0
  402f21:	test   eax,eax
  402f23:	js     0x402f63
  402f25:	add    ebx,0x1
  402f28:	cmp    ebx,ebp
  402f2a:	je     0x402f4b
  402f2c:	xor    r9d,r9d
  402f2f:	mov    r8d,ebx
  402f32:	mov    rdx,rsi
  402f35:	mov    rcx,rdi
  402f38:	call   0x405940
  402f3d:	test   eax,eax
  402f3f:	jns    0x402f10
  402f41:	mov    eax,DWORD PTR [rip+0xb101]        # 0x40e048
  402f47:	test   eax,eax
  402f49:	jne    0x402f10
  402f4b:	mov    rcx,rsi
  402f4e:	call   0x4058d0
  402f53:	mov    eax,0x1
  402f58:	add    rsp,0x20
  402f5c:	pop    rbx
  402f5d:	pop    rsi
  402f5e:	pop    rdi
  402f5f:	pop    rbp
  402f60:	pop    r12
  402f62:	ret    
  402f63:	mov    rcx,rsi
  402f66:	call   0x4058d0
  402f6b:	xor    eax,eax
  402f6d:	add    rsp,0x20
  402f71:	pop    rbx
  402f72:	pop    rsi
  402f73:	pop    rdi
  402f74:	pop    rbp
  402f75:	pop    r12
  402f77:	ret    
  402f78:	nop    DWORD PTR [rax+rax*1+0x0]
  402f80:	push   r14
  402f82:	push   r13
  402f84:	push   r12
  402f86:	push   rbp
  402f87:	push   rdi
  402f88:	push   rsi
  402f89:	push   rbx
  402f8a:	sub    rsp,0x20
  402f8e:	xor    ebx,ebx
  402f90:	mov    rdi,rdx
  402f93:	mov    r12d,r8d
  402f96:	mov    r14d,r9d
  402f99:	mov    rbp,rcx
  402f9c:	call   0x405930
  402fa1:	mov    rcx,rax
  402fa4:	call   0x4058c8
  402fa9:	mov    rcx,rdi
  402fac:	mov    r13,rax
  402faf:	call   0x405930
  402fb4:	mov    rcx,rax
  402fb7:	call   0x4058c8
  402fbc:	lea    rcx,[rip+0x7195]        # 0x40a158
  402fc3:	mov    rsi,rax
  402fc6:	call   0x407b90
  402fcb:	test   r12d,r12d
  402fce:	je     0x403034
  402fd0:	xor    r9d,r9d
  402fd3:	mov    r8d,ebx
  402fd6:	mov    rdx,r13
  402fd9:	mov    rcx,rbp
  402fdc:	call   0x405940
  402fe1:	test   eax,eax
  402fe3:	js     0x403060
  402fe5:	xor    r11d,r11d
  402fe8:	test   r14d,r14d
  402feb:	mov    rdx,rsi
  402fee:	je     0x403017
  402ff0:	movzx  eax,BYTE PTR [r13+r11*1+0x0]
  402ff6:	movzx  r10d,BYTE PTR [r13+r11*1+0x1]
  402ffc:	add    r11,0x2
  403000:	add    rdx,0x1
  403004:	shl    eax,0x4
  403007:	and    r10d,0xf
  40300b:	add    r10d,eax
  40300e:	mov    BYTE PTR [rdx-0x1],r10b
  403012:	cmp    r14d,r11d
  403015:	ja     0x402ff0
  403017:	xor    r9d,r9d
  40301a:	mov    r8d,ebx
  40301d:	mov    rdx,rsi
  403020:	mov    rcx,rdi
  403023:	call   0x4058e0
  403028:	test   eax,eax
  40302a:	js     0x403070
  40302c:	add    ebx,0x1
  40302f:	cmp    ebx,r12d
  403032:	jne    0x402fd0
  403034:	mov    rcx,r13
  403037:	call   0x4058d0
  40303c:	mov    rcx,rsi
  40303f:	call   0x4058d0
  403044:	mov    eax,0x1
  403049:	add    rsp,0x20
  40304d:	pop    rbx
  40304e:	pop    rsi
  40304f:	pop    rdi
  403050:	pop    rbp
  403051:	pop    r12
  403053:	pop    r13
  403055:	pop    r14
  403057:	ret    
  403058:	nop    DWORD PTR [rax+rax*1+0x0]
  403060:	mov    eax,DWORD PTR [rip+0xafe2]        # 0x40e048
  403066:	test   eax,eax
  403068:	jne    0x402fe5
  40306e:	jmp    0x403034
  403070:	mov    rcx,r13
  403073:	call   0x4058d0
  403078:	mov    rcx,rsi
  40307b:	call   0x4058d0
  403080:	xor    eax,eax
  403082:	add    rsp,0x20
  403086:	pop    rbx
  403087:	pop    rsi
  403088:	pop    rdi
  403089:	pop    rbp
  40308a:	pop    r12
  40308c:	pop    r13
  40308e:	pop    r14
  403090:	ret    
  403091:	nop    DWORD PTR [rax+rax*1+0x0]
  403096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030a0:	push   r15
  4030a2:	push   r14
  4030a4:	push   r13
  4030a6:	push   r12
  4030a8:	push   rbp
  4030a9:	push   rdi
  4030aa:	push   rsi
  4030ab:	push   rbx
  4030ac:	sub    rsp,0x28
  4030b0:	mov    rbp,rcx
  4030b3:	mov    QWORD PTR [rsp+0x78],rdx
  4030b8:	mov    r12d,r8d
  4030bb:	call   0x405918
  4030c0:	mov    rcx,rax
  4030c3:	mov    r13,rax
  4030c6:	call   0x4058c8
  4030cb:	mov    rdi,rax
  4030ce:	xor    eax,eax
  4030d0:	test   rdi,rdi
  4030d3:	je     0x40314e
  4030d5:	mov    rcx,rbp
  4030d8:	call   0x405960
  4030dd:	test   eax,eax
  4030df:	mov    r14d,eax
  4030e2:	je     0x403141
  4030e4:	mov    eax,DWORD PTR [rip+0xaf66]        # 0x40e050
  4030ea:	xor    esi,esi
  4030ec:	xor    ebx,ebx
  4030ee:	jmp    0x403117
  4030f0:	mov    rcx,QWORD PTR [rsp+0x78]
  4030f5:	mov    r9,r15
  4030f8:	mov    r8,rdi
  4030fb:	mov    edx,ebx
  4030fd:	call   0x4058e8
  403102:	test   rax,rax
  403105:	js     0x403172
  403107:	mov    eax,DWORD PTR [rip+0xaf43]        # 0x40e050
  40310d:	add    ebx,0x1
  403110:	add    esi,eax
  403112:	cmp    ebx,r14d
  403115:	je     0x403141
  403117:	lea    edx,[rax+rsi*1]
  40311a:	mov    r15,r13
  40311d:	cmp    edx,r12d
  403120:	ja     0x403160
  403122:	mov    r9,r15
  403125:	mov    r8,rdi
  403128:	mov    edx,ebx
  40312a:	mov    rcx,rbp
  40312d:	call   0x405948
  403132:	test   rax,rax
  403135:	jns    0x4030f0
  403137:	mov    eax,DWORD PTR [rip+0xaf0b]        # 0x40e048
  40313d:	test   eax,eax
  40313f:	jne    0x4030f0
  403141:	mov    rcx,rdi
  403144:	call   0x4058d0
  403149:	mov    eax,0x1
  40314e:	add    rsp,0x28
  403152:	pop    rbx
  403153:	pop    rsi
  403154:	pop    rdi
  403155:	pop    rbp
  403156:	pop    r12
  403158:	pop    r13
  40315a:	pop    r14
  40315c:	pop    r15
  40315e:	ret    
  40315f:	nop
  403160:	mov    edx,r12d
  403163:	mov    rcx,rbp
  403166:	sub    edx,esi
  403168:	call   0x405900
  40316d:	mov    r15,rax
  403170:	jmp    0x403122
  403172:	mov    rcx,rdi
  403175:	call   0x4058d0
  40317a:	xor    eax,eax
  40317c:	jmp    0x40314e
  40317e:	xchg   ax,ax
  403180:	push   r15
  403182:	push   r14
  403184:	push   r13
  403186:	push   r12
  403188:	push   rbp
  403189:	push   rdi
  40318a:	push   rsi
  40318b:	push   rbx
  40318c:	sub    rsp,0x98
  403193:	movzx  eax,WORD PTR [rsp+0x100]
  40319b:	mov    QWORD PTR [rsp+0xe8],rdx
  4031a3:	mov    DWORD PTR [rsp+0xf0],r8d
  4031ab:	mov    DWORD PTR [rsp+0xf8],r9d
  4031b3:	mov    QWORD PTR [rsp+0xe0],rcx
  4031bb:	mov    WORD PTR [rsp+0x7a],ax
  4031c0:	call   0x405930
  4031c5:	mov    rcx,QWORD PTR [rsp+0xe0]
  4031cd:	mov    QWORD PTR [rsp+0x68],rax
  4031d2:	call   0x405910
  4031d7:	mov    rcx,QWORD PTR [rsp+0xe0]
  4031df:	mov    rbx,rax
  4031e2:	call   0x405908
  4031e7:	mov    rcx,rax
  4031ea:	call   0x4058c8
  4031ef:	test   rax,rax
  4031f2:	mov    QWORD PTR [rsp+0x38],rax
  4031f7:	je     0x403492
  4031fd:	mov    rcx,QWORD PTR [rsp+0xe0]
  403205:	lea    r8,[rsp+0x88]
  40320d:	mov    edx,0x142
  403212:	call   0x405970
  403217:	mov    rcx,QWORD PTR [rsp+0xe0]
  40321f:	lea    r8,[rsp+0x8c]
  403227:	mov    edx,0x143
  40322c:	call   0x405970
  403231:	mov    r8d,DWORD PTR [rsp+0xf0]
  403239:	test   r8d,r8d
  40323c:	je     0x403487
  403242:	movzx  edi,WORD PTR [rsp+0x7a]
  403247:	mov    rax,QWORD PTR [rsp+0x68]
  40324c:	mov    DWORD PTR [rsp+0x70],ebx
  403250:	mov    DWORD PTR [rsp+0x48],0x0
  403258:	mov    DWORD PTR [rsp+0x54],eax
  40325c:	sub    eax,ebx
  40325e:	lea    edx,[rdi-0x1]
  403261:	mov    DWORD PTR [rsp+0x60],eax
  403265:	mov    eax,DWORD PTR [rsp+0x8c]
  40326c:	movzx  edx,dx
  40326f:	lea    edi,[rdx+0x1]
  403272:	mov    DWORD PTR [rsp+0x5c],edi
  403276:	mov    esi,DWORD PTR [rsp+0x48]
  40327a:	mov    ecx,DWORD PTR [rsp+0xf0]
  403281:	lea    edx,[rsi+rax*1]
  403284:	sub    ecx,esi
  403286:	cmp    DWORD PTR [rsp+0xf0],edx
  40328d:	cmovae ecx,eax
  403290:	mov    DWORD PTR [rsp+0x58],ecx
  403294:	mov    ecx,DWORD PTR [rsp+0xf8]
  40329b:	test   ecx,ecx
  40329d:	je     0x4034a6
  4032a3:	mov    rax,QWORD PTR [rsp+0x68]
  4032a8:	mov    DWORD PTR [rsp+0x74],0x0
  4032b0:	mov    DWORD PTR [rsp+0x4c],0x0
  4032b8:	mov    DWORD PTR [rsp+0x7c],eax
  4032bc:	lea    r13d,[rax-0x1]
  4032c0:	mov    eax,DWORD PTR [rsp+0x70]
  4032c4:	mov    DWORD PTR [rsp+0x50],eax
  4032c8:	movzx  edi,WORD PTR [rsp+0x7a]
  4032cd:	test   di,di
  4032d0:	je     0x4033bc
  4032d6:	mov    eax,DWORD PTR [rsp+0x74]
  4032da:	movzx  ebx,di
  4032dd:	mov    edi,r13d
  4032e0:	add    rax,QWORD PTR [rsp+0xe8]
  4032e8:	add    rdi,0x1
  4032ec:	xor    r12d,r12d
  4032ef:	mov    rbp,rdi
  4032f2:	imul   rbp,rbx
  4032f6:	mov    QWORD PTR [rsp+0x40],rax
  4032fb:	mov    eax,DWORD PTR [rsp+0x50]
  4032ff:	sub    eax,DWORD PTR [rsp+0x7c]
  403303:	mov    DWORD PTR [rsp+0x64],eax
  403307:	add    eax,DWORD PTR [rsp+0x60]
  40330b:	movsxd rsi,eax
  40330e:	xchg   ax,ax
  403310:	mov    r9d,DWORD PTR [rsp+0x48]
  403315:	mov    r8d,DWORD PTR [rsp+0x4c]
  40331a:	mov    rdx,QWORD PTR [rsp+0x38]
  40331f:	mov    rcx,QWORD PTR [rsp+0xe0]
  403327:	mov    DWORD PTR [rsp+0x28],r12d
  40332c:	mov    DWORD PTR [rsp+0x20],0x0
  403334:	call   0x405938
  403339:	test   rax,rax
  40333c:	js     0x403479
  403342:	mov    ecx,DWORD PTR [rsp+0x50]
  403346:	cmp    DWORD PTR [rsp+0x54],ecx
  40334a:	jae    0x403400
  403350:	mov    eax,DWORD PTR [rsp+0x58]
  403354:	mov    r8,QWORD PTR [rsp+0x40]
  403359:	test   eax,eax
  40335b:	lea    r9d,[rax-0x1]
  40335f:	je     0x4033a7
  403361:	movsxd r10,DWORD PTR [rsp+0x64]
  403366:	mov    rax,QWORD PTR [rsp+0x38]
  40336b:	nop    DWORD PTR [rax+rax*1+0x0]
  403370:	cmp    r13d,0xffffffff
  403374:	je     0x403471
  40337a:	lea    r11,[rax+rdi*1]
  40337e:	mov    rdx,r8
  403381:	add    rax,0x1
  403385:	movzx  ecx,BYTE PTR [rax-0x1]
  403389:	mov    BYTE PTR [rdx],cl
  40338b:	add    rdx,rbx
  40338e:	cmp    rax,r11
  403391:	jne    0x403381
  403393:	add    r8,rbp
  403396:	sub    r9d,0x1
  40339a:	add    r8,rsi
  40339d:	lea    rax,[r11+r10*1]
  4033a1:	cmp    r9d,0xffffffff
  4033a5:	jne    0x403370
  4033a7:	add    r12d,0x1
  4033ab:	add    QWORD PTR [rsp+0x40],0x1
  4033b1:	cmp    r12d,DWORD PTR [rsp+0x5c]
  4033b6:	jne    0x403310
  4033bc:	mov    edi,DWORD PTR [rsp+0x88]
  4033c3:	add    DWORD PTR [rsp+0x4c],edi
  4033c7:	mov    edi,DWORD PTR [rsp+0x70]
  4033cb:	mov    eax,DWORD PTR [rsp+0x4c]
  4033cf:	add    DWORD PTR [rsp+0x50],edi
  4033d3:	add    DWORD PTR [rsp+0x74],edi
  4033d7:	sub    r13d,edi
  4033da:	cmp    DWORD PTR [rsp+0xf8],eax
  4033e1:	ja     0x4032c8
  4033e7:	mov    edx,DWORD PTR [rsp+0x8c]
  4033ee:	add    DWORD PTR [rsp+0x48],edx
  4033f2:	jmp    0x4034ac
  4033f7:	nop    WORD PTR [rax+rax*1+0x0]
  403400:	mov    eax,DWORD PTR [rsp+0x58]
  403404:	mov    r11d,DWORD PTR [rsp+0x88]
  40340c:	mov    r8,QWORD PTR [rsp+0x40]
  403411:	test   eax,eax
  403413:	lea    r9d,[rax-0x1]
  403417:	je     0x4033a7
  403419:	lea    r10d,[r11-0x1]
  40341d:	mov    r15,rbx
  403420:	movsxd r14,DWORD PTR [rsp+0x60]
  403425:	mov    rax,QWORD PTR [rsp+0x38]
  40342a:	add    r10,0x1
  40342e:	imul   r15,r10
  403432:	test   r11d,r11d
  403435:	je     0x40345f
  403437:	lea    rcx,[rax+r10*1]
  40343b:	mov    rdx,r8
  40343e:	mov    QWORD PTR [rsp+0x30],r8
  403443:	add    rax,0x1
  403447:	movzx  r8d,BYTE PTR [rax-0x1]
  40344c:	mov    BYTE PTR [rdx],r8b
  40344f:	add    rdx,rbx
  403452:	cmp    rax,rcx
  403455:	jne    0x403443
  403457:	mov    r8,QWORD PTR [rsp+0x30]
  40345c:	add    r8,r15
  40345f:	sub    r9d,0x1
  403463:	add    r8,r14
  403466:	cmp    r9d,0xffffffff
  40346a:	jne    0x403432
  40346c:	jmp    0x4033a7
  403471:	mov    r11,rax
  403474:	jmp    0x403396
  403479:	mov    eax,DWORD PTR [rip+0xabc9]        # 0x40e048
  40347f:	test   eax,eax
  403481:	jne    0x403342
  403487:	mov    rcx,QWORD PTR [rsp+0x38]
  40348c:	call   0x4058d0
  403491:	nop
  403492:	add    rsp,0x98
  403499:	pop    rbx
  40349a:	pop    rsi
  40349b:	pop    rdi
  40349c:	pop    rbp
  40349d:	pop    r12
  40349f:	pop    r13
  4034a1:	pop    r14
  4034a3:	pop    r15
  4034a5:	ret    
  4034a6:	mov    DWORD PTR [rsp+0x48],edx
  4034aa:	mov    edx,eax
  4034ac:	mov    eax,DWORD PTR [rsp+0x58]
  4034b0:	mov    edi,DWORD PTR [rsp+0x48]
  4034b4:	imul   eax,DWORD PTR [rsp+0x54]
  4034b9:	add    QWORD PTR [rsp+0xe8],rax
  4034c1:	cmp    DWORD PTR [rsp+0xf0],edi
  4034c8:	mov    eax,edx
  4034ca:	ja     0x403276
  4034d0:	jmp    0x403487
  4034d2:	nop    DWORD PTR [rax+0x0]
  4034d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034e0:	push   r15
  4034e2:	push   r14
  4034e4:	push   r13
  4034e6:	push   r12
  4034e8:	push   rbp
  4034e9:	push   rdi
  4034ea:	push   rsi
  4034eb:	push   rbx
  4034ec:	sub    rsp,0xc8
  4034f3:	mov    QWORD PTR [rsp+0x118],rdx
  4034fb:	mov    DWORD PTR [rsp+0x120],r8d
  403503:	mov    DWORD PTR [rsp+0x128],r9d
  40350b:	mov    QWORD PTR [rsp+0x110],rcx
  403513:	call   0x405908
  403518:	mov    rcx,rax
  40351b:	call   0x4058c8
  403520:	mov    rcx,QWORD PTR [rsp+0x110]
  403528:	mov    rsi,rax
  40352b:	mov    QWORD PTR [rsp+0x70],rax
  403530:	call   0x405930
  403535:	mov    rcx,QWORD PTR [rsp+0x110]
  40353d:	mov    rbx,rax
  403540:	mov    QWORD PTR [rsp+0xa8],rax
  403548:	mov    DWORD PTR [rsp+0x8c],eax
  40354f:	call   0x405910
  403554:	sub    ebx,eax
  403556:	test   rsi,rsi
  403559:	mov    r15d,eax
  40355c:	je     0x403ee9
  403562:	mov    rcx,QWORD PTR [rsp+0x110]
  40356a:	lea    r8,[rsp+0xb8]
  403572:	mov    edx,0x142
  403577:	call   0x405970
  40357c:	mov    rcx,QWORD PTR [rsp+0x110]
  403584:	lea    r8,[rsp+0xbc]
  40358c:	mov    edx,0x143
  403591:	call   0x405970
  403596:	mov    r8d,DWORD PTR [rsp+0x120]
  40359e:	test   r8d,r8d
  4035a1:	je     0x403ede
  4035a7:	mov    esi,DWORD PTR [rsp+0xa8]
  4035ae:	mov    DWORD PTR [rsp+0x88],0x0
  4035b9:	mov    eax,DWORD PTR [rsp+0xbc]
  4035c0:	mov    DWORD PTR [rsp+0xa0],esi
  4035c7:	lea    esi,[r15-0x1]
  4035cb:	mov    DWORD PTR [rsp+0x60],esi
  4035cf:	mov    QWORD PTR [rsp+0x58],rsi
  4035d4:	add    rsi,0x1
  4035d8:	mov    QWORD PTR [rsp+0x98],rsi
  4035e0:	movsxd rsi,ebx
  4035e3:	sub    ebx,DWORD PTR [rsp+0x8c]
  4035ea:	mov    QWORD PTR [rsp+0x48],rsi
  4035ef:	mov    DWORD PTR [rsp+0xa4],ebx
  4035f6:	mov    ebx,DWORD PTR [rsp+0x88]
  4035fd:	mov    ecx,DWORD PTR [rsp+0x120]
  403604:	lea    edx,[rbx+rax*1]
  403607:	sub    ecx,ebx
  403609:	cmp    DWORD PTR [rsp+0x120],edx
  403610:	cmovae ecx,eax
  403613:	mov    DWORD PTR [rsp+0x90],ecx
  40361a:	mov    ecx,DWORD PTR [rsp+0x128]
  403621:	test   ecx,ecx
  403623:	je     0x403f3a
  403629:	mov    eax,DWORD PTR [rsp+0xa8]
  403630:	mov    DWORD PTR [rsp+0x80],r15d
  403638:	xor    ebx,ebx
  40363a:	mov    DWORD PTR [rsp+0x64],0x0
  403642:	lea    r14d,[rax-0x1]
  403646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403650:	mov    r9d,DWORD PTR [rsp+0x88]
  403658:	mov    r8d,DWORD PTR [rsp+0x64]
  40365d:	mov    rdx,QWORD PTR [rsp+0x70]
  403662:	mov    rcx,QWORD PTR [rsp+0x110]
  40366a:	mov    DWORD PTR [rsp+0x28],0x0
  403672:	mov    DWORD PTR [rsp+0x20],0x0
  40367a:	call   0x405938
  40367f:	test   rax,rax
  403682:	js     0x403ed0
  403688:	mov    esi,DWORD PTR [rsp+0x80]
  40368f:	cmp    DWORD PTR [rsp+0x8c],esi
  403696:	lea    eax,[rbx+r15*1]
  40369a:	mov    DWORD PTR [rsp+0x84],eax
  4036a1:	jae    0x403af0
  4036a7:	mov    eax,ebx
  4036a9:	mov    ecx,DWORD PTR [rsp+0xa4]
  4036b0:	mov    ebx,DWORD PTR [rsp+0x90]
  4036b7:	mov    edx,esi
  4036b9:	add    rax,QWORD PTR [rsp+0x118]
  4036c1:	sub    edx,DWORD PTR [rsp+0xa0]
  4036c8:	lea    r10d,[r14+0x1]
  4036cc:	add    ecx,esi
  4036ce:	test   ebx,ebx
  4036d0:	lea    r12d,[rbx-0x1]
  4036d4:	je     0x403a8f
  4036da:	movsxd rsi,ecx
  4036dd:	mov    ebx,r14d
  4036e0:	mov    DWORD PTR [rsp+0x94],r15d
  4036e8:	mov    QWORD PTR [rsp+0x38],rsi
  4036ed:	lea    r13,[rbx+0x1]
  4036f1:	movsxd rsi,edx
  4036f4:	mov    rdx,QWORD PTR [rsp+0x70]
  4036f9:	mov    QWORD PTR [rsp+0x40],rsi
  4036fe:	mov    QWORD PTR [rsp+0x50],rbx
  403703:	mov    r15,r13
  403706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403710:	test   r10d,r10d
  403713:	je     0x403a6f
  403719:	lea    rcx,[rax+0x10]
  40371d:	cmp    rdx,rcx
  403720:	lea    rcx,[rdx+0x10]
  403724:	setae  r8b
  403728:	cmp    rax,rcx
  40372b:	setae  cl
  40372e:	or     r8b,cl
  403731:	je     0x403ad0
  403737:	cmp    r10d,0x16
  40373b:	jbe    0x403ad0
  403741:	mov    rbp,rdx
  403744:	neg    rbp
  403747:	and    ebp,0xf
  40374a:	cmp    ebp,r10d
  40374d:	cmova  ebp,r10d
  403751:	test   ebp,ebp
  403753:	je     0x403ac2
  403759:	movzx  r9d,BYTE PTR [rdx]
  40375d:	cmp    ebp,0x1
  403760:	lea    rcx,[rax+0x1]
  403764:	lea    r8,[rdx+0x1]
  403768:	mov    BYTE PTR [rax],r9b
  40376b:	lea    r9d,[r14-0x1]
  40376f:	je     0x4038fc
  403775:	movzx  r9d,BYTE PTR [rdx+0x1]
  40377a:	cmp    ebp,0x2
  40377d:	lea    rcx,[rax+0x2]
  403781:	lea    r8,[rdx+0x2]
  403785:	mov    BYTE PTR [rax+0x1],r9b
  403789:	lea    r9d,[r14-0x2]
  40378d:	je     0x4038fc
  403793:	movzx  r9d,BYTE PTR [rdx+0x2]
  403798:	cmp    ebp,0x3
  40379b:	lea    rcx,[rax+0x3]
  40379f:	lea    r8,[rdx+0x3]
  4037a3:	mov    BYTE PTR [rax+0x2],r9b
  4037a7:	lea    r9d,[r14-0x3]
  4037ab:	je     0x4038fc
  4037b1:	movzx  r9d,BYTE PTR [rdx+0x3]
  4037b6:	cmp    ebp,0x4
  4037b9:	lea    rcx,[rax+0x4]
  4037bd:	lea    r8,[rdx+0x4]
  4037c1:	mov    BYTE PTR [rax+0x3],r9b
  4037c5:	lea    r9d,[r14-0x4]
  4037c9:	je     0x4038fc
  4037cf:	movzx  r9d,BYTE PTR [rdx+0x4]
  4037d4:	cmp    ebp,0x5
  4037d7:	lea    rcx,[rax+0x5]
  4037db:	lea    r8,[rdx+0x5]
  4037df:	mov    BYTE PTR [rax+0x4],r9b
  4037e3:	lea    r9d,[r14-0x5]
  4037e7:	je     0x4038fc
  4037ed:	movzx  r9d,BYTE PTR [rdx+0x5]
  4037f2:	cmp    ebp,0x6
  4037f5:	lea    rcx,[rax+0x6]
  4037f9:	lea    r8,[rdx+0x6]
  4037fd:	mov    BYTE PTR [rax+0x5],r9b
  403801:	lea    r9d,[r14-0x6]
  403805:	je     0x4038fc
  40380b:	movzx  r9d,BYTE PTR [rdx+0x6]
  403810:	cmp    ebp,0x7
  403813:	lea    rcx,[rax+0x7]
  403817:	lea    r8,[rdx+0x7]
  40381b:	mov    BYTE PTR [rax+0x6],r9b
  40381f:	lea    r9d,[r14-0x7]
  403823:	je     0x4038fc
  403829:	movzx  r9d,BYTE PTR [rdx+0x7]
  40382e:	cmp    ebp,0x8
  403831:	lea    rcx,[rax+0x8]
  403835:	lea    r8,[rdx+0x8]
  403839:	mov    BYTE PTR [rax+0x7],r9b
  40383d:	lea    r9d,[r14-0x8]
  403841:	je     0x4038fc
  403847:	movzx  r9d,BYTE PTR [rdx+0x8]
  40384c:	cmp    ebp,0x9
  40384f:	lea    rcx,[rax+0x9]
  403853:	lea    r8,[rdx+0x9]
  403857:	mov    BYTE PTR [rax+0x8],r9b
  40385b:	lea    r9d,[r14-0x9]
  40385f:	je     0x4038fc
  403865:	movzx  r9d,BYTE PTR [rdx+0x9]
  40386a:	cmp    ebp,0xa
  40386d:	lea    rcx,[rax+0xa]
  403871:	lea    r8,[rdx+0xa]
  403875:	mov    BYTE PTR [rax+0x9],r9b
  403879:	lea    r9d,[r14-0xa]
  40387d:	je     0x4038fc
  40387f:	movzx  r9d,BYTE PTR [rdx+0xa]
  403884:	cmp    ebp,0xb
  403887:	lea    rcx,[rax+0xb]
  40388b:	lea    r8,[rdx+0xb]
  40388f:	mov    BYTE PTR [rax+0xa],r9b
  403893:	lea    r9d,[r14-0xb]
  403897:	je     0x4038fc
  403899:	movzx  r9d,BYTE PTR [rdx+0xb]
  40389e:	cmp    ebp,0xc
  4038a1:	lea    rcx,[rax+0xc]
  4038a5:	lea    r8,[rdx+0xc]
  4038a9:	mov    BYTE PTR [rax+0xb],r9b
  4038ad:	lea    r9d,[r14-0xc]
  4038b1:	je     0x4038fc
  4038b3:	movzx  r9d,BYTE PTR [rdx+0xc]
  4038b8:	cmp    ebp,0xd
  4038bb:	lea    rcx,[rax+0xd]
  4038bf:	lea    r8,[rdx+0xd]
  4038c3:	mov    BYTE PTR [rax+0xc],r9b
  4038c7:	lea    r9d,[r14-0xd]
  4038cb:	je     0x4038fc
  4038cd:	movzx  r9d,BYTE PTR [rdx+0xd]
  4038d2:	cmp    ebp,0xf
  4038d5:	lea    rcx,[rax+0xe]
  4038d9:	lea    r8,[rdx+0xe]
  4038dd:	mov    BYTE PTR [rax+0xd],r9b
  4038e1:	lea    r9d,[r14-0xe]
  4038e5:	jne    0x4038fc
  4038e7:	movzx  r9d,BYTE PTR [rdx+0xe]
  4038ec:	lea    rcx,[rax+0xf]
  4038f0:	lea    r8,[rdx+0xf]
  4038f4:	mov    BYTE PTR [rax+0xe],r9b
  4038f8:	lea    r9d,[r14-0xf]
  4038fc:	mov    edi,r10d
  4038ff:	mov    r13d,r14d
  403902:	mov    ebx,ebp
  403904:	sub    edi,ebp
  403906:	sub    r13d,ebp
  403909:	lea    r11d,[rdi-0x10]
  40390d:	shr    r11d,0x4
  403911:	add    r11d,0x1
  403915:	mov    esi,r11d
  403918:	shl    esi,0x4
  40391b:	cmp    r13d,0xe
  40391f:	jbe    0x403970
  403921:	lea    rbp,[rdx+rbx*1]
  403925:	mov    QWORD PTR [rsp+0x78],rax
  40392a:	add    rbx,rax
  40392d:	xor    r13d,r13d
  403930:	mov    QWORD PTR [rsp+0x68],rbp
  403935:	mov    rax,QWORD PTR [rsp+0x68]
  40393a:	xor    ebp,ebp
  40393c:	movdqa xmm0,XMMWORD PTR [rax+rbp*1]
  403941:	add    r13d,0x1
  403945:	movups XMMWORD PTR [rbx+rbp*1],xmm0
  403949:	add    rbp,0x10
  40394d:	cmp    r13d,r11d
  403950:	jb     0x40393c
  403952:	mov    r11d,esi
  403955:	sub    r9d,esi
  403958:	mov    rax,QWORD PTR [rsp+0x78]
  40395d:	add    rcx,r11
  403960:	add    r8,r11
  403963:	cmp    edi,esi
  403965:	je     0x403a60
  40396b:	nop    DWORD PTR [rax+rax*1+0x0]
  403970:	movzx  r11d,BYTE PTR [r8]
  403974:	test   r9d,r9d
  403977:	mov    BYTE PTR [rcx],r11b
  40397a:	je     0x403a60
  403980:	movzx  r11d,BYTE PTR [r8+0x1]
  403985:	cmp    r9d,0x1
  403989:	mov    BYTE PTR [rcx+0x1],r11b
  40398d:	je     0x403a60
  403993:	movzx  r11d,BYTE PTR [r8+0x2]
  403998:	cmp    r9d,0x2
  40399c:	mov    BYTE PTR [rcx+0x2],r11b
  4039a0:	je     0x403a60
  4039a6:	movzx  r11d,BYTE PTR [r8+0x3]
  4039ab:	cmp    r9d,0x3
  4039af:	mov    BYTE PTR [rcx+0x3],r11b
  4039b3:	je     0x403a60
  4039b9:	movzx  r11d,BYTE PTR [r8+0x4]
  4039be:	cmp    r9d,0x4
  4039c2:	mov    BYTE PTR [rcx+0x4],r11b
  4039c6:	je     0x403a60
  4039cc:	movzx  r11d,BYTE PTR [r8+0x5]
  4039d1:	cmp    r9d,0x5
  4039d5:	mov    BYTE PTR [rcx+0x5],r11b
  4039d9:	je     0x403a60
  4039df:	movzx  r11d,BYTE PTR [r8+0x6]
  4039e4:	cmp    r9d,0x6
  4039e8:	mov    BYTE PTR [rcx+0x6],r11b
  4039ec:	je     0x403a60
  4039ee:	movzx  r11d,BYTE PTR [r8+0x7]
  4039f3:	cmp    r9d,0x7
  4039f7:	mov    BYTE PTR [rcx+0x7],r11b
  4039fb:	je     0x403a60
  4039fd:	movzx  r11d,BYTE PTR [r8+0x8]
  403a02:	cmp    r9d,0x8
  403a06:	mov    BYTE PTR [rcx+0x8],r11b
  403a0a:	je     0x403a60
  403a0c:	movzx  r11d,BYTE PTR [r8+0x9]
  403a11:	cmp    r9d,0x9
  403a15:	mov    BYTE PTR [rcx+0x9],r11b
  403a19:	je     0x403a60
  403a1b:	movzx  r11d,BYTE PTR [r8+0xa]
  403a20:	cmp    r9d,0xa
  403a24:	mov    BYTE PTR [rcx+0xa],r11b
  403a28:	je     0x403a60
  403a2a:	movzx  r11d,BYTE PTR [r8+0xb]
  403a2f:	cmp    r9d,0xb
  403a33:	mov    BYTE PTR [rcx+0xb],r11b
  403a37:	je     0x403a60
  403a39:	movzx  r11d,BYTE PTR [r8+0xc]
  403a3e:	cmp    r9d,0xc
  403a42:	mov    BYTE PTR [rcx+0xc],r11b
  403a46:	je     0x403a60
  403a48:	movzx  r11d,BYTE PTR [r8+0xd]
  403a4d:	cmp    r9d,0xd
  403a51:	mov    BYTE PTR [rcx+0xd],r11b
  403a55:	je     0x403a60
  403a57:	movzx  r8d,BYTE PTR [r8+0xe]
  403a5c:	mov    BYTE PTR [rcx+0xe],r8b
  403a60:	mov    rbx,QWORD PTR [rsp+0x50]
  403a65:	lea    rcx,[rbx+0x1]
  403a69:	add    rax,rcx
  403a6c:	add    rdx,rcx
  403a6f:	sub    r12d,0x1
  403a73:	add    rax,QWORD PTR [rsp+0x38]
  403a78:	add    rdx,QWORD PTR [rsp+0x40]
  403a7d:	cmp    r12d,0xffffffff
  403a81:	jne    0x403710
  403a87:	mov    r15d,DWORD PTR [rsp+0x94]
  403a8f:	mov    ebx,DWORD PTR [rsp+0xb8]
  403a96:	add    DWORD PTR [rsp+0x64],ebx
  403a9a:	sub    r14d,r15d
  403a9d:	mov    eax,DWORD PTR [rsp+0x64]
  403aa1:	add    DWORD PTR [rsp+0x80],r15d
  403aa9:	cmp    DWORD PTR [rsp+0x128],eax
  403ab0:	jbe    0x403efd
  403ab6:	mov    ebx,DWORD PTR [rsp+0x84]
  403abd:	jmp    0x403650
  403ac2:	mov    r9d,r14d
  403ac5:	mov    r8,rdx
  403ac8:	mov    rcx,rax
  403acb:	jmp    0x4038fc
  403ad0:	xor    ecx,ecx
  403ad2:	movzx  r8d,BYTE PTR [rdx+rcx*1]
  403ad7:	mov    BYTE PTR [rax+rcx*1],r8b
  403adb:	add    rcx,0x1
  403adf:	cmp    rcx,r15
  403ae2:	jne    0x403ad2
  403ae4:	jmp    0x403a60
  403ae9:	nop    DWORD PTR [rax+0x0]
  403af0:	mov    eax,ebx
  403af2:	mov    ebx,DWORD PTR [rsp+0x90]
  403af9:	add    rax,QWORD PTR [rsp+0x118]
  403b01:	test   ebx,ebx
  403b03:	lea    r11d,[rbx-0x1]
  403b07:	je     0x403a8f
  403b09:	mov    rdx,QWORD PTR [rsp+0x70]
  403b0e:	mov    rbx,QWORD PTR [rsp+0x98]
  403b16:	mov    DWORD PTR [rsp+0x38],r14d
  403b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b20:	test   r15d,r15d
  403b23:	je     0x403e81
  403b29:	lea    rcx,[rax+0x10]
  403b2d:	cmp    rdx,rcx
  403b30:	lea    rcx,[rdx+0x10]
  403b34:	setae  r8b
  403b38:	cmp    rax,rcx
  403b3b:	setae  cl
  403b3e:	or     r8b,cl
  403b41:	je     0x403eb0
  403b47:	cmp    r15d,0x16
  403b4b:	jbe    0x403eb0
  403b51:	mov    r12,rdx
  403b54:	neg    r12
  403b57:	and    r12d,0xf
  403b5b:	cmp    r15d,r12d
  403b5e:	cmovbe r12d,r15d
  403b62:	test   r12d,r12d
  403b65:	je     0x403ea0
  403b6b:	movzx  r9d,BYTE PTR [rdx]
  403b6f:	cmp    r12d,0x1
  403b73:	lea    rcx,[rax+0x1]
  403b77:	lea    r8,[rdx+0x1]
  403b7b:	mov    BYTE PTR [rax],r9b
  403b7e:	lea    r9d,[r15-0x2]
  403b82:	je     0x403d20
  403b88:	movzx  r9d,BYTE PTR [rdx+0x1]
  403b8d:	cmp    r12d,0x2
  403b91:	lea    rcx,[rax+0x2]
  403b95:	lea    r8,[rdx+0x2]
  403b99:	mov    BYTE PTR [rax+0x1],r9b
  403b9d:	lea    r9d,[r15-0x3]
  403ba1:	je     0x403d20
  403ba7:	movzx  r9d,BYTE PTR [rdx+0x2]
  403bac:	cmp    r12d,0x3
  403bb0:	lea    rcx,[rax+0x3]
  403bb4:	lea    r8,[rdx+0x3]
  403bb8:	mov    BYTE PTR [rax+0x2],r9b
  403bbc:	lea    r9d,[r15-0x4]
  403bc0:	je     0x403d20
  403bc6:	movzx  r9d,BYTE PTR [rdx+0x3]
  403bcb:	cmp    r12d,0x4
  403bcf:	lea    rcx,[rax+0x4]
  403bd3:	lea    r8,[rdx+0x4]
  403bd7:	mov    BYTE PTR [rax+0x3],r9b
  403bdb:	lea    r9d,[r15-0x5]
  403bdf:	je     0x403d20
  403be5:	movzx  r9d,BYTE PTR [rdx+0x4]
  403bea:	cmp    r12d,0x5
  403bee:	lea    rcx,[rax+0x5]
  403bf2:	lea    r8,[rdx+0x5]
  403bf6:	mov    BYTE PTR [rax+0x4],r9b
  403bfa:	lea    r9d,[r15-0x6]
  403bfe:	je     0x403d20
  403c04:	movzx  r9d,BYTE PTR [rdx+0x5]
  403c09:	cmp    r12d,0x6
  403c0d:	lea    rcx,[rax+0x6]
  403c11:	lea    r8,[rdx+0x6]
  403c15:	mov    BYTE PTR [rax+0x5],r9b
  403c19:	lea    r9d,[r15-0x7]
  403c1d:	je     0x403d20
  403c23:	movzx  r9d,BYTE PTR [rdx+0x6]
  403c28:	cmp    r12d,0x7
  403c2c:	lea    rcx,[rax+0x7]
  403c30:	lea    r8,[rdx+0x7]
  403c34:	mov    BYTE PTR [rax+0x6],r9b
  403c38:	lea    r9d,[r15-0x8]
  403c3c:	je     0x403d20
  403c42:	movzx  r9d,BYTE PTR [rdx+0x7]
  403c47:	cmp    r12d,0x8
  403c4b:	lea    rcx,[rax+0x8]
  403c4f:	lea    r8,[rdx+0x8]
  403c53:	mov    BYTE PTR [rax+0x7],r9b
  403c57:	lea    r9d,[r15-0x9]
  403c5b:	je     0x403d20
  403c61:	movzx  r9d,BYTE PTR [rdx+0x8]
  403c66:	cmp    r12d,0x9
  403c6a:	lea    rcx,[rax+0x9]
  403c6e:	lea    r8,[rdx+0x9]
  403c72:	mov    BYTE PTR [rax+0x8],r9b
  403c76:	lea    r9d,[r15-0xa]
  403c7a:	je     0x403d20
  403c80:	movzx  r9d,BYTE PTR [rdx+0x9]
  403c85:	cmp    r12d,0xa
  403c89:	lea    rcx,[rax+0xa]
  403c8d:	lea    r8,[rdx+0xa]
  403c91:	mov    BYTE PTR [rax+0x9],r9b
  403c95:	lea    r9d,[r15-0xb]
  403c99:	je     0x403d20
  403c9f:	movzx  r9d,BYTE PTR [rdx+0xa]
  403ca4:	cmp    r12d,0xb
  403ca8:	lea    rcx,[rax+0xb]
  403cac:	lea    r8,[rdx+0xb]
  403cb0:	mov    BYTE PTR [rax+0xa],r9b
  403cb4:	lea    r9d,[r15-0xc]
  403cb8:	je     0x403d20
  403cba:	movzx  r9d,BYTE PTR [rdx+0xb]
  403cbf:	cmp    r12d,0xc
  403cc3:	lea    rcx,[rax+0xc]
  403cc7:	lea    r8,[rdx+0xc]
  403ccb:	mov    BYTE PTR [rax+0xb],r9b
  403ccf:	lea    r9d,[r15-0xd]
  403cd3:	je     0x403d20
  403cd5:	movzx  r9d,BYTE PTR [rdx+0xc]
  403cda:	cmp    r12d,0xd
  403cde:	lea    rcx,[rax+0xd]
  403ce2:	lea    r8,[rdx+0xd]
  403ce6:	mov    BYTE PTR [rax+0xc],r9b
  403cea:	lea    r9d,[r15-0xe]
  403cee:	je     0x403d20
  403cf0:	movzx  r9d,BYTE PTR [rdx+0xd]
  403cf5:	cmp    r12d,0xf
  403cf9:	lea    rcx,[rax+0xe]
  403cfd:	lea    r8,[rdx+0xe]
  403d01:	mov    BYTE PTR [rax+0xd],r9b
  403d05:	lea    r9d,[r15-0xf]
  403d09:	jne    0x403d20
  403d0b:	movzx  r9d,BYTE PTR [rdx+0xe]
  403d10:	lea    rcx,[rax+0xf]
  403d14:	lea    r8,[rdx+0xf]
  403d18:	mov    BYTE PTR [rax+0xe],r9b
  403d1c:	lea    r9d,[r15-0x10]
  403d20:	mov    ebp,r15d
  403d23:	mov    r14d,DWORD PTR [rsp+0x60]
  403d28:	mov    esi,r12d
  403d2b:	sub    ebp,r12d
  403d2e:	lea    r10d,[rbp-0x10]
  403d32:	sub    r14d,r12d
  403d35:	shr    r10d,0x4
  403d39:	add    r10d,0x1
  403d3d:	mov    edi,r10d
  403d40:	shl    edi,0x4
  403d43:	cmp    r14d,0xe
  403d47:	jbe    0x403d82
  403d49:	lea    r14,[rdx+rsi*1]
  403d4d:	xor    r12d,r12d
  403d50:	add    rsi,rax
  403d53:	xor    r13d,r13d
  403d56:	movdqa xmm0,XMMWORD PTR [r14+r12*1]
  403d5c:	add    r13d,0x1
  403d60:	movups XMMWORD PTR [rsi+r12*1],xmm0
  403d65:	add    r12,0x10
  403d69:	cmp    r13d,r10d
  403d6c:	jb     0x403d56
  403d6e:	mov    r10d,edi
  403d71:	sub    r9d,edi
  403d74:	add    rcx,r10
  403d77:	add    r8,r10
  403d7a:	cmp    ebp,edi
  403d7c:	je     0x403e72
  403d82:	movzx  r10d,BYTE PTR [r8]
  403d86:	test   r9d,r9d
  403d89:	mov    BYTE PTR [rcx],r10b
  403d8c:	je     0x403e72
  403d92:	movzx  r10d,BYTE PTR [r8+0x1]
  403d97:	cmp    r9d,0x1
  403d9b:	mov    BYTE PTR [rcx+0x1],r10b
  403d9f:	je     0x403e72
  403da5:	movzx  r10d,BYTE PTR [r8+0x2]
  403daa:	cmp    r9d,0x2
  403dae:	mov    BYTE PTR [rcx+0x2],r10b
  403db2:	je     0x403e72
  403db8:	movzx  r10d,BYTE PTR [r8+0x3]
  403dbd:	cmp    r9d,0x3
  403dc1:	mov    BYTE PTR [rcx+0x3],r10b
  403dc5:	je     0x403e72
  403dcb:	movzx  r10d,BYTE PTR [r8+0x4]
  403dd0:	cmp    r9d,0x4
  403dd4:	mov    BYTE PTR [rcx+0x4],r10b
  403dd8:	je     0x403e72
  403dde:	movzx  r10d,BYTE PTR [r8+0x5]
  403de3:	cmp    r9d,0x5
  403de7:	mov    BYTE PTR [rcx+0x5],r10b
  403deb:	je     0x403e72
  403df1:	movzx  r10d,BYTE PTR [r8+0x6]
  403df6:	cmp    r9d,0x6
  403dfa:	mov    BYTE PTR [rcx+0x6],r10b
  403dfe:	je     0x403e72
  403e00:	movzx  r10d,BYTE PTR [r8+0x7]
  403e05:	cmp    r9d,0x7
  403e09:	mov    BYTE PTR [rcx+0x7],r10b
  403e0d:	je     0x403e72
  403e0f:	movzx  r10d,BYTE PTR [r8+0x8]
  403e14:	cmp    r9d,0x8
  403e18:	mov    BYTE PTR [rcx+0x8],r10b
  403e1c:	je     0x403e72
  403e1e:	movzx  r10d,BYTE PTR [r8+0x9]
  403e23:	cmp    r9d,0x9
  403e27:	mov    BYTE PTR [rcx+0x9],r10b
  403e2b:	je     0x403e72
  403e2d:	movzx  r10d,BYTE PTR [r8+0xa]
  403e32:	cmp    r9d,0xa
  403e36:	mov    BYTE PTR [rcx+0xa],r10b
  403e3a:	je     0x403e72
  403e3c:	movzx  r10d,BYTE PTR [r8+0xb]
  403e41:	cmp    r9d,0xb
  403e45:	mov    BYTE PTR [rcx+0xb],r10b
  403e49:	je     0x403e72
  403e4b:	movzx  r10d,BYTE PTR [r8+0xc]
  403e50:	cmp    r9d,0xc
  403e54:	mov    BYTE PTR [rcx+0xc],r10b
  403e58:	je     0x403e72
  403e5a:	movzx  r10d,BYTE PTR [r8+0xd]
  403e5f:	cmp    r9d,0xd
  403e63:	mov    BYTE PTR [rcx+0xd],r10b
  403e67:	je     0x403e72
  403e69:	movzx  r8d,BYTE PTR [r8+0xe]
  403e6e:	mov    BYTE PTR [rcx+0xe],r8b
  403e72:	mov    rsi,QWORD PTR [rsp+0x58]
  403e77:	lea    rcx,[rsi+0x1]
  403e7b:	add    rax,rcx
  403e7e:	add    rdx,rcx
  403e81:	sub    r11d,0x1
  403e85:	add    rax,QWORD PTR [rsp+0x48]
  403e8a:	cmp    r11d,0xffffffff
  403e8e:	jne    0x403b20
  403e94:	mov    r14d,DWORD PTR [rsp+0x38]
  403e99:	jmp    0x403a8f
  403e9e:	xchg   ax,ax
  403ea0:	mov    r9d,DWORD PTR [rsp+0x60]
  403ea5:	mov    r8,rdx
  403ea8:	mov    rcx,rax
  403eab:	jmp    0x403d20
  403eb0:	xor    ecx,ecx
  403eb2:	movzx  r8d,BYTE PTR [rdx+rcx*1]
  403eb7:	mov    BYTE PTR [rax+rcx*1],r8b
  403ebb:	add    rcx,0x1
  403ebf:	cmp    rcx,rbx
  403ec2:	jne    0x403eb2
  403ec4:	jmp    0x403e72
  403ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ed0:	mov    eax,DWORD PTR [rip+0xa172]        # 0x40e048
  403ed6:	test   eax,eax
  403ed8:	jne    0x403688
  403ede:	mov    rcx,QWORD PTR [rsp+0x70]
  403ee3:	call   0x4058d0
  403ee8:	nop
  403ee9:	add    rsp,0xc8
  403ef0:	pop    rbx
  403ef1:	pop    rsi
  403ef2:	pop    rdi
  403ef3:	pop    rbp
  403ef4:	pop    r12
  403ef6:	pop    r13
  403ef8:	pop    r14
  403efa:	pop    r15
  403efc:	ret    
  403efd:	mov    edx,DWORD PTR [rsp+0xbc]
  403f04:	add    DWORD PTR [rsp+0x88],edx
  403f0b:	mov    eax,DWORD PTR [rsp+0x90]
  403f12:	mov    ebx,DWORD PTR [rsp+0x88]
  403f19:	imul   eax,DWORD PTR [rsp+0x8c]
  403f21:	add    QWORD PTR [rsp+0x118],rax
  403f29:	cmp    DWORD PTR [rsp+0x120],ebx
  403f30:	mov    eax,edx
  403f32:	ja     0x4035fd
  403f38:	jmp    0x403ede
  403f3a:	mov    DWORD PTR [rsp+0x88],edx
  403f41:	mov    edx,eax
  403f43:	jmp    0x403f0b
  403f45:	nop
  403f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f50:	push   r15
  403f52:	push   r14
  403f54:	push   r13
  403f56:	push   r12
  403f58:	push   rbp
  403f59:	push   rdi
  403f5a:	push   rsi
  403f5b:	push   rbx
  403f5c:	sub    rsp,0xb8
  403f63:	movzx  eax,WORD PTR [rsp+0x120]
  403f6b:	mov    QWORD PTR [rsp+0x108],rdx
  403f73:	mov    DWORD PTR [rsp+0x110],r8d
  403f7b:	mov    DWORD PTR [rsp+0x118],r9d
  403f83:	mov    QWORD PTR [rsp+0x100],rcx
  403f8b:	mov    WORD PTR [rsp+0x76],ax
  403f90:	call   0x405930
  403f95:	mov    rcx,QWORD PTR [rsp+0x100]
  403f9d:	mov    QWORD PTR [rsp+0x78],rax
  403fa2:	call   0x405910
  403fa7:	mov    rcx,QWORD PTR [rsp+0x100]
  403faf:	mov    QWORD PTR [rsp+0x80],rax
  403fb7:	call   0x405908
  403fbc:	mov    rcx,rax
  403fbf:	call   0x4058c8
  403fc4:	mov    rdi,rax
  403fc7:	mov    QWORD PTR [rsp+0x40],rax
  403fcc:	xor    eax,eax
  403fce:	test   rdi,rdi
  403fd1:	je     0x4042e3
  403fd7:	mov    rcx,QWORD PTR [rsp+0x100]
  403fdf:	lea    r8,[rsp+0xa8]
  403fe7:	mov    edx,0x143
  403fec:	call   0x405970
  403ff1:	mov    rcx,QWORD PTR [rsp+0x100]
  403ff9:	lea    r8,[rsp+0xac]
  404001:	mov    edx,0x142
  404006:	call   0x405970
  40400b:	mov    r9d,DWORD PTR [rsp+0x110]
  404013:	test   r9d,r9d
  404016:	je     0x4042d4
  40401c:	mov    eax,DWORD PTR [rsp+0x80]
  404023:	mov    rcx,QWORD PTR [rsp+0x78]
  404028:	mov    DWORD PTR [rsp+0x4c],0x0
  404030:	mov    esi,eax
  404032:	mov    DWORD PTR [rsp+0x94],eax
  404039:	mov    eax,DWORD PTR [rsp+0xa8]
  404040:	mov    edi,esi
  404042:	mov    DWORD PTR [rsp+0x90],ecx
  404049:	sub    edi,ecx
  40404b:	mov    DWORD PTR [rsp+0x9c],edi
  404052:	movzx  edi,WORD PTR [rsp+0x76]
  404057:	lea    edx,[rdi-0x1]
  40405a:	movzx  edx,dx
  40405d:	lea    edi,[rdx+0x1]
  404060:	mov    edx,ecx
  404062:	sub    edx,esi
  404064:	mov    DWORD PTR [rsp+0x68],edi
  404068:	movsxd r12,edx
  40406b:	mov    edi,DWORD PTR [rsp+0x4c]
  40406f:	mov    ecx,DWORD PTR [rsp+0x110]
  404076:	mov    r8d,DWORD PTR [rsp+0x118]
  40407e:	sub    ecx,edi
  404080:	lea    edx,[rdi+rax*1]
  404083:	cmp    DWORD PTR [rsp+0x110],edx
  40408a:	cmovae ecx,eax
  40408d:	test   r8d,r8d
  404090:	mov    DWORD PTR [rsp+0x54],ecx
  404094:	je     0x4042a7
  40409a:	mov    rax,QWORD PTR [rsp+0x78]
  40409f:	mov    esi,DWORD PTR [rsp+0x9c]
  4040a6:	mov    DWORD PTR [rsp+0x50],0x0
  4040ae:	mov    DWORD PTR [rsp+0x8c],0x0
  4040b9:	mov    DWORD PTR [rsp+0x98],eax
  4040c0:	lea    ebp,[rax-0x1]
  4040c3:	lea    eax,[rcx-0x1]
  4040c6:	mov    DWORD PTR [rsp+0x70],esi
  4040ca:	mov    DWORD PTR [rsp+0x6c],eax
  4040ce:	movzx  eax,WORD PTR [rsp+0x76]
  4040d3:	test   ax,ax
  4040d6:	je     0x4041eb
  4040dc:	mov    r14d,DWORD PTR [rsp+0x8c]
  4040e4:	mov    rsi,QWORD PTR [rsp+0x80]
  4040ec:	movzx  ebx,ax
  4040ef:	mov    eax,DWORD PTR [rsp+0x98]
  4040f6:	add    eax,DWORD PTR [rsp+0x70]
  4040fa:	xor    r13d,r13d
  4040fd:	add    rsi,r14
  404100:	add    r14,QWORD PTR [rsp+0x108]
  404108:	mov    QWORD PTR [rsp+0x60],rsi
  40410d:	mov    esi,DWORD PTR [rsp+0x78]
  404111:	mov    DWORD PTR [rsp+0x88],eax
  404118:	mov    QWORD PTR [rsp+0x58],rsi
  40411d:	mov    esi,ebp
  40411f:	add    rsi,0x1
  404123:	mov    rdi,rsi
  404126:	imul   rdi,rbx
  40412a:	nop    WORD PTR [rax+rax*1+0x0]
  404130:	mov    rcx,QWORD PTR [rsp+0x60]
  404135:	cmp    QWORD PTR [rsp+0x58],rcx
  40413a:	jge    0x404230
  404140:	mov    eax,DWORD PTR [rsp+0x70]
  404144:	movzx  ecx,WORD PTR [rsp+0x76]
  404149:	mov    r8,r14
  40414c:	cdq    
  40414d:	idiv   ecx
  40414f:	mov    edx,DWORD PTR [rsp+0x54]
  404153:	test   edx,edx
  404155:	je     0x4041a6
  404157:	movsxd r11,DWORD PTR [rsp+0x88]
  40415f:	movsxd r10,eax
  404162:	mov    r9d,DWORD PTR [rsp+0x6c]
  404167:	mov    rax,QWORD PTR [rsp+0x40]
  40416c:	nop    DWORD PTR [rax+0x0]
  404170:	cmp    ebp,0xffffffff
  404173:	je     0x40429f
  404179:	lea    r15,[rax+rsi*1]
  40417d:	mov    rdx,r8
  404180:	movzx  ecx,BYTE PTR [rdx]
  404183:	add    rax,0x1
  404187:	add    rdx,rbx
  40418a:	cmp    rax,r15
  40418d:	mov    BYTE PTR [rax-0x1],cl
  404190:	jne    0x404180
  404192:	add    r8,rdi
  404195:	sub    r9d,0x1
  404199:	add    r8,r11
  40419c:	lea    rax,[r15+r10*1]
  4041a0:	cmp    r9d,0xffffffff
  4041a4:	jne    0x404170
  4041a6:	mov    r9d,DWORD PTR [rsp+0x4c]
  4041ab:	mov    r8d,DWORD PTR [rsp+0x50]
  4041b0:	mov    rdx,QWORD PTR [rsp+0x40]
  4041b5:	mov    rcx,QWORD PTR [rsp+0x100]
  4041bd:	mov    DWORD PTR [rsp+0x28],r13d
  4041c2:	mov    DWORD PTR [rsp+0x20],0x0
  4041ca:	call   0x4058d8
  4041cf:	test   rax,rax
  4041d2:	js     0x4042f7
  4041d8:	add    r13d,0x1
  4041dc:	add    r14,0x1
  4041e0:	cmp    r13d,DWORD PTR [rsp+0x68]
  4041e5:	jne    0x404130
  4041eb:	mov    eax,DWORD PTR [rsp+0x94]
  4041f2:	mov    edi,DWORD PTR [rsp+0xac]
  4041f9:	add    DWORD PTR [rsp+0x50],edi
  4041fd:	add    DWORD PTR [rsp+0x8c],eax
  404204:	mov    esi,DWORD PTR [rsp+0x50]
  404208:	add    DWORD PTR [rsp+0x70],eax
  40420c:	sub    ebp,eax
  40420e:	cmp    DWORD PTR [rsp+0x118],esi
  404215:	ja     0x4040ce
  40421b:	mov    edx,DWORD PTR [rsp+0xa8]
  404222:	add    DWORD PTR [rsp+0x4c],edx
  404226:	jmp    0x4042ad
  40422b:	nop    DWORD PTR [rax+rax*1+0x0]
  404230:	mov    eax,DWORD PTR [rsp+0x54]
  404234:	mov    r11d,DWORD PTR [rip+0x9e29]        # 0x40e064
  40423b:	mov    r8,r14
  40423e:	test   eax,eax
  404240:	je     0x4041a6
  404246:	lea    r10d,[r11-0x1]
  40424a:	mov    r9d,DWORD PTR [rsp+0x6c]
  40424f:	mov    rax,QWORD PTR [rsp+0x40]
  404254:	add    r10,0x1
  404258:	mov    r15,r10
  40425b:	imul   r15,rbx
  40425f:	nop
  404260:	test   r11d,r11d
  404263:	je     0x40428d
  404265:	lea    rcx,[rax+r10*1]
  404269:	mov    rdx,r8
  40426c:	mov    QWORD PTR [rsp+0x38],r8
  404271:	movzx  r8d,BYTE PTR [rdx]
  404275:	add    rax,0x1
  404279:	add    rdx,rbx
  40427c:	cmp    rax,rcx
  40427f:	mov    BYTE PTR [rax-0x1],r8b
  404283:	jne    0x404271
  404285:	mov    r8,QWORD PTR [rsp+0x38]
  40428a:	add    r8,r15
  40428d:	sub    r9d,0x1
  404291:	add    r8,r12
  404294:	cmp    r9d,0xffffffff
  404298:	jne    0x404260
  40429a:	jmp    0x4041a6
  40429f:	mov    r15,rax
  4042a2:	jmp    0x404195
  4042a7:	mov    DWORD PTR [rsp+0x4c],edx
  4042ab:	mov    edx,eax
  4042ad:	mov    eax,DWORD PTR [rsp+0x54]
  4042b1:	mov    esi,DWORD PTR [rsp+0x4c]
  4042b5:	imul   eax,DWORD PTR [rsp+0x90]
  4042bd:	add    QWORD PTR [rsp+0x108],rax
  4042c5:	cmp    DWORD PTR [rsp+0x110],esi
  4042cc:	mov    eax,edx
  4042ce:	ja     0x40406b
  4042d4:	mov    rcx,QWORD PTR [rsp+0x40]
  4042d9:	call   0x4058d0
  4042de:	mov    eax,0x1
  4042e3:	add    rsp,0xb8
  4042ea:	pop    rbx
  4042eb:	pop    rsi
  4042ec:	pop    rdi
  4042ed:	pop    rbp
  4042ee:	pop    r12
  4042f0:	pop    r13
  4042f2:	pop    r14
  4042f4:	pop    r15
  4042f6:	ret    
  4042f7:	mov    rcx,QWORD PTR [rsp+0x40]
  4042fc:	call   0x4058d0
  404301:	xor    eax,eax
  404303:	jmp    0x4042e3
  404305:	nop
  404306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404310:	push   r15
  404312:	push   r14
  404314:	push   r13
  404316:	push   r12
  404318:	push   rbp
  404319:	push   rdi
  40431a:	push   rsi
  40431b:	push   rbx
  40431c:	sub    rsp,0xc8
  404323:	mov    QWORD PTR [rsp+0x118],rdx
  40432b:	mov    DWORD PTR [rsp+0x120],r8d
  404333:	mov    DWORD PTR [rsp+0x128],r9d
  40433b:	mov    QWORD PTR [rsp+0x110],rcx
  404343:	call   0x405930
  404348:	mov    rcx,QWORD PTR [rsp+0x110]
  404350:	mov    rsi,rax
  404353:	mov    QWORD PTR [rsp+0xa8],rax
  40435b:	mov    DWORD PTR [rsp+0x88],eax
  404362:	call   0x405910
  404367:	mov    rcx,QWORD PTR [rsp+0x110]
  40436f:	mov    rbx,rax
  404372:	mov    r15d,eax
  404375:	mov    eax,esi
  404377:	sub    eax,ebx
  404379:	mov    DWORD PTR [rsp+0xa0],eax
  404380:	call   0x405908
  404385:	mov    rcx,rax
  404388:	call   0x4058c8
  40438d:	mov    rsi,rax
  404390:	mov    QWORD PTR [rsp+0x70],rax
  404395:	xor    eax,eax
  404397:	test   rsi,rsi
  40439a:	je     0x404934
  4043a0:	mov    rcx,QWORD PTR [rsp+0x110]
  4043a8:	lea    r8,[rsp+0xb8]
  4043b0:	mov    edx,0x143
  4043b5:	call   0x405970
  4043ba:	mov    rcx,QWORD PTR [rsp+0x110]
  4043c2:	lea    r8,[rsp+0xbc]
  4043ca:	mov    edx,0x142
  4043cf:	call   0x405970
  4043d4:	mov    r10d,DWORD PTR [rsp+0x120]
  4043dc:	mov    DWORD PTR [rsp+0x84],0x0
  4043e7:	test   r10d,r10d
  4043ea:	je     0x404925
  4043f0:	lea    eax,[rbx-0x1]
  4043f3:	sub    ebx,DWORD PTR [rsp+0x88]
  4043fa:	mov    DWORD PTR [rsp+0x60],eax
  4043fe:	mov    QWORD PTR [rsp+0x58],rax
  404403:	add    rax,0x1
  404407:	mov    QWORD PTR [rsp+0x98],rax
  40440f:	sub    ebx,r15d
  404412:	mov    DWORD PTR [rsp+0xa4],ebx
  404419:	mov    esi,DWORD PTR [rsp+0x84]
  404420:	mov    eax,DWORD PTR [rsp+0xb8]
  404427:	mov    r9d,DWORD PTR [rsp+0x128]
  40442f:	mov    edx,esi
  404431:	mov    ebx,eax
  404433:	add    edx,eax
  404435:	mov    eax,DWORD PTR [rsp+0x120]
  40443c:	sub    eax,esi
  40443e:	cmp    DWORD PTR [rsp+0x120],edx
  404445:	mov    esi,eax
  404447:	cmovae esi,ebx
  40444a:	test   r9d,r9d
  40444d:	mov    DWORD PTR [rsp+0x8c],esi
  404454:	je     0x4048ed
  40445a:	mov    eax,esi
  40445c:	movsxd rbx,DWORD PTR [rsp+0xa0]
  404464:	mov    DWORD PTR [rsp+0x64],0x0
  40446c:	sub    eax,0x1
  40446f:	mov    DWORD PTR [rsp+0x90],eax
  404476:	mov    eax,DWORD PTR [rsp+0xa8]
  40447d:	mov    QWORD PTR [rsp+0x48],rbx
  404482:	lea    r14d,[rax-0x1]
  404486:	xor    eax,eax
  404488:	nop    DWORD PTR [rax+rax*1+0x0]
  404490:	lea    ebx,[rax+r15*1]
  404494:	cmp    DWORD PTR [rsp+0x88],ebx
  40449b:	mov    DWORD PTR [rsp+0x80],ebx
  4044a2:	jae    0x404980
  4044a8:	mov    ecx,DWORD PTR [rsp+0xa4]
  4044af:	mov    r8d,DWORD PTR [rsp+0x8c]
  4044b7:	lea    r10d,[r14+0x1]
  4044bb:	mov    esi,DWORD PTR [rsp+0xa0]
  4044c2:	add    rax,QWORD PTR [rsp+0x118]
  4044ca:	add    ecx,ebx
  4044cc:	test   r8d,r8d
  4044cf:	lea    edx,[rsi+rcx*1]
  4044d2:	je     0x40488f
  4044d8:	movsxd rbx,ecx
  4044db:	movsxd rsi,edx
  4044de:	mov    r12d,DWORD PTR [rsp+0x90]
  4044e6:	mov    QWORD PTR [rsp+0x38],rbx
  4044eb:	mov    ebx,r14d
  4044ee:	mov    rdx,QWORD PTR [rsp+0x70]
  4044f3:	lea    r13,[rbx+0x1]
  4044f7:	mov    DWORD PTR [rsp+0x94],r15d
  4044ff:	mov    QWORD PTR [rsp+0x40],rsi
  404504:	mov    QWORD PTR [rsp+0x50],rbx
  404509:	mov    r15,r13
  40450c:	nop    DWORD PTR [rax+0x0]
  404510:	test   r10d,r10d
  404513:	je     0x40486f
  404519:	lea    rcx,[rax+0x10]
  40451d:	cmp    rdx,rcx
  404520:	lea    rcx,[rdx+0x10]
  404524:	setae  r8b
  404528:	cmp    rax,rcx
  40452b:	setae  cl
  40452e:	or     r8b,cl
  404531:	je     0x404960
  404537:	cmp    r10d,0x16
  40453b:	jbe    0x404960
  404541:	mov    rbp,rax
  404544:	neg    rbp
  404547:	and    ebp,0xf
  40454a:	cmp    ebp,r10d
  40454d:	cmova  ebp,r10d
  404551:	test   ebp,ebp
  404553:	je     0x404950
  404559:	movzx  r9d,BYTE PTR [rax]
  40455d:	cmp    ebp,0x1
  404560:	lea    rcx,[rdx+0x1]
  404564:	lea    r8,[rax+0x1]
  404568:	mov    BYTE PTR [rdx],r9b
  40456b:	lea    r9d,[r14-0x1]
  40456f:	je     0x4046fc
  404575:	movzx  r9d,BYTE PTR [rax+0x1]
  40457a:	cmp    ebp,0x2
  40457d:	lea    rcx,[rdx+0x2]
  404581:	lea    r8,[rax+0x2]
  404585:	mov    BYTE PTR [rdx+0x1],r9b
  404589:	lea    r9d,[r14-0x2]
  40458d:	je     0x4046fc
  404593:	movzx  r9d,BYTE PTR [rax+0x2]
  404598:	cmp    ebp,0x3
  40459b:	lea    rcx,[rdx+0x3]
  40459f:	lea    r8,[rax+0x3]
  4045a3:	mov    BYTE PTR [rdx+0x2],r9b
  4045a7:	lea    r9d,[r14-0x3]
  4045ab:	je     0x4046fc
  4045b1:	movzx  r9d,BYTE PTR [rax+0x3]
  4045b6:	cmp    ebp,0x4
  4045b9:	lea    rcx,[rdx+0x4]
  4045bd:	lea    r8,[rax+0x4]
  4045c1:	mov    BYTE PTR [rdx+0x3],r9b
  4045c5:	lea    r9d,[r14-0x4]
  4045c9:	je     0x4046fc
  4045cf:	movzx  r9d,BYTE PTR [rax+0x4]
  4045d4:	cmp    ebp,0x5
  4045d7:	lea    rcx,[rdx+0x5]
  4045db:	lea    r8,[rax+0x5]
  4045df:	mov    BYTE PTR [rdx+0x4],r9b
  4045e3:	lea    r9d,[r14-0x5]
  4045e7:	je     0x4046fc
  4045ed:	movzx  r9d,BYTE PTR [rax+0x5]
  4045f2:	cmp    ebp,0x6
  4045f5:	lea    rcx,[rdx+0x6]
  4045f9:	lea    r8,[rax+0x6]
  4045fd:	mov    BYTE PTR [rdx+0x5],r9b
  404601:	lea    r9d,[r14-0x6]
  404605:	je     0x4046fc
  40460b:	movzx  r9d,BYTE PTR [rax+0x6]
  404610:	cmp    ebp,0x7
  404613:	lea    rcx,[rdx+0x7]
  404617:	lea    r8,[rax+0x7]
  40461b:	mov    BYTE PTR [rdx+0x6],r9b
  40461f:	lea    r9d,[r14-0x7]
  404623:	je     0x4046fc
  404629:	movzx  r9d,BYTE PTR [rax+0x7]
  40462e:	cmp    ebp,0x8
  404631:	lea    rcx,[rdx+0x8]
  404635:	lea    r8,[rax+0x8]
  404639:	mov    BYTE PTR [rdx+0x7],r9b
  40463d:	lea    r9d,[r14-0x8]
  404641:	je     0x4046fc
  404647:	movzx  r9d,BYTE PTR [rax+0x8]
  40464c:	cmp    ebp,0x9
  40464f:	lea    rcx,[rdx+0x9]
  404653:	lea    r8,[rax+0x9]
  404657:	mov    BYTE PTR [rdx+0x8],r9b
  40465b:	lea    r9d,[r14-0x9]
  40465f:	je     0x4046fc
  404665:	movzx  r9d,BYTE PTR [rax+0x9]
  40466a:	cmp    ebp,0xa
  40466d:	lea    rcx,[rdx+0xa]
  404671:	lea    r8,[rax+0xa]
  404675:	mov    BYTE PTR [rdx+0x9],r9b
  404679:	lea    r9d,[r14-0xa]
  40467d:	je     0x4046fc
  40467f:	movzx  r9d,BYTE PTR [rax+0xa]
  404684:	cmp    ebp,0xb
  404687:	lea    rcx,[rdx+0xb]
  40468b:	lea    r8,[rax+0xb]
  40468f:	mov    BYTE PTR [rdx+0xa],r9b
  404693:	lea    r9d,[r14-0xb]
  404697:	je     0x4046fc
  404699:	movzx  r9d,BYTE PTR [rax+0xb]
  40469e:	cmp    ebp,0xc
  4046a1:	lea    rcx,[rdx+0xc]
  4046a5:	lea    r8,[rax+0xc]
  4046a9:	mov    BYTE PTR [rdx+0xb],r9b
  4046ad:	lea    r9d,[r14-0xc]
  4046b1:	je     0x4046fc
  4046b3:	movzx  r9d,BYTE PTR [rax+0xc]
  4046b8:	cmp    ebp,0xd
  4046bb:	lea    rcx,[rdx+0xd]
  4046bf:	lea    r8,[rax+0xd]
  4046c3:	mov    BYTE PTR [rdx+0xc],r9b
  4046c7:	lea    r9d,[r14-0xd]
  4046cb:	je     0x4046fc
  4046cd:	movzx  r9d,BYTE PTR [rax+0xd]
  4046d2:	cmp    ebp,0xf
  4046d5:	lea    rcx,[rdx+0xe]
  4046d9:	lea    r8,[rax+0xe]
  4046dd:	mov    BYTE PTR [rdx+0xd],r9b
  4046e1:	lea    r9d,[r14-0xe]
  4046e5:	jne    0x4046fc
  4046e7:	movzx  r9d,BYTE PTR [rax+0xe]
  4046ec:	lea    rcx,[rdx+0xf]
  4046f0:	lea    r8,[rax+0xf]
  4046f4:	mov    BYTE PTR [rdx+0xe],r9b
  4046f8:	lea    r9d,[r14-0xf]
  4046fc:	mov    edi,r10d
  4046ff:	mov    r13d,r14d
  404702:	mov    ebx,ebp
  404704:	sub    edi,ebp
  404706:	sub    r13d,ebp
  404709:	lea    r11d,[rdi-0x10]
  40470d:	shr    r11d,0x4
  404711:	add    r11d,0x1
  404715:	mov    esi,r11d
  404718:	shl    esi,0x4
  40471b:	cmp    r13d,0xe
  40471f:	jbe    0x404770
  404721:	lea    rbp,[rax+rbx*1]
  404725:	mov    QWORD PTR [rsp+0x78],rax
  40472a:	add    rbx,rdx
  40472d:	xor    r13d,r13d
  404730:	mov    QWORD PTR [rsp+0x68],rbp
  404735:	mov    rax,QWORD PTR [rsp+0x68]
  40473a:	xor    ebp,ebp
  40473c:	movdqa xmm0,XMMWORD PTR [rax+rbp*1]
  404741:	add    r13d,0x1
  404745:	movups XMMWORD PTR [rbx+rbp*1],xmm0
  404749:	add    rbp,0x10
  40474d:	cmp    r13d,r11d
  404750:	jb     0x40473c
  404752:	mov    r11d,esi
  404755:	sub    r9d,esi
  404758:	mov    rax,QWORD PTR [rsp+0x78]
  40475d:	add    rcx,r11
  404760:	add    r8,r11
  404763:	cmp    edi,esi
  404765:	je     0x404860
  40476b:	nop    DWORD PTR [rax+rax*1+0x0]
  404770:	movzx  r11d,BYTE PTR [r8]
  404774:	test   r9d,r9d
  404777:	mov    BYTE PTR [rcx],r11b
  40477a:	je     0x404860
  404780:	movzx  r11d,BYTE PTR [r8+0x1]
  404785:	cmp    r9d,0x1
  404789:	mov    BYTE PTR [rcx+0x1],r11b
  40478d:	je     0x404860
  404793:	movzx  r11d,BYTE PTR [r8+0x2]
  404798:	cmp    r9d,0x2
  40479c:	mov    BYTE PTR [rcx+0x2],r11b
  4047a0:	je     0x404860
  4047a6:	movzx  r11d,BYTE PTR [r8+0x3]
  4047ab:	cmp    r9d,0x3
  4047af:	mov    BYTE PTR [rcx+0x3],r11b
  4047b3:	je     0x404860
  4047b9:	movzx  r11d,BYTE PTR [r8+0x4]
  4047be:	cmp    r9d,0x4
  4047c2:	mov    BYTE PTR [rcx+0x4],r11b
  4047c6:	je     0x404860
  4047cc:	movzx  r11d,BYTE PTR [r8+0x5]
  4047d1:	cmp    r9d,0x5
  4047d5:	mov    BYTE PTR [rcx+0x5],r11b
  4047d9:	je     0x404860
  4047df:	movzx  r11d,BYTE PTR [r8+0x6]
  4047e4:	cmp    r9d,0x6
  4047e8:	mov    BYTE PTR [rcx+0x6],r11b
  4047ec:	je     0x404860
  4047ee:	movzx  r11d,BYTE PTR [r8+0x7]
  4047f3:	cmp    r9d,0x7
  4047f7:	mov    BYTE PTR [rcx+0x7],r11b
  4047fb:	je     0x404860
  4047fd:	movzx  r11d,BYTE PTR [r8+0x8]
  404802:	cmp    r9d,0x8
  404806:	mov    BYTE PTR [rcx+0x8],r11b
  40480a:	je     0x404860
  40480c:	movzx  r11d,BYTE PTR [r8+0x9]
  404811:	cmp    r9d,0x9
  404815:	mov    BYTE PTR [rcx+0x9],r11b
  404819:	je     0x404860
  40481b:	movzx  r11d,BYTE PTR [r8+0xa]
  404820:	cmp    r9d,0xa
  404824:	mov    BYTE PTR [rcx+0xa],r11b
  404828:	je     0x404860
  40482a:	movzx  r11d,BYTE PTR [r8+0xb]
  40482f:	cmp    r9d,0xb
  404833:	mov    BYTE PTR [rcx+0xb],r11b
  404837:	je     0x404860
  404839:	movzx  r11d,BYTE PTR [r8+0xc]
  40483e:	cmp    r9d,0xc
  404842:	mov    BYTE PTR [rcx+0xc],r11b
  404846:	je     0x404860
  404848:	movzx  r11d,BYTE PTR [r8+0xd]
  40484d:	cmp    r9d,0xd
  404851:	mov    BYTE PTR [rcx+0xd],r11b
  404855:	je     0x404860
  404857:	movzx  r8d,BYTE PTR [r8+0xe]
  40485c:	mov    BYTE PTR [rcx+0xe],r8b
  404860:	mov    rbx,QWORD PTR [rsp+0x50]
  404865:	lea    rcx,[rbx+0x1]
  404869:	add    rdx,rcx
  40486c:	add    rax,rcx
  40486f:	sub    r12d,0x1
  404873:	add    rdx,QWORD PTR [rsp+0x38]
  404878:	add    rax,QWORD PTR [rsp+0x40]
  40487d:	cmp    r12d,0xffffffff
  404881:	jne    0x404510
  404887:	mov    r15d,DWORD PTR [rsp+0x94]
  40488f:	mov    r9d,DWORD PTR [rsp+0x84]
  404897:	mov    r8d,DWORD PTR [rsp+0x64]
  40489c:	mov    rdx,QWORD PTR [rsp+0x70]
  4048a1:	mov    rcx,QWORD PTR [rsp+0x110]
  4048a9:	mov    DWORD PTR [rsp+0x28],0x0
  4048b1:	mov    DWORD PTR [rsp+0x20],0x0
  4048b9:	call   0x4058d8
  4048be:	test   rax,rax
  4048c1:	js     0x404d56
  4048c7:	mov    ebx,DWORD PTR [rsp+0xbc]
  4048ce:	add    DWORD PTR [rsp+0x64],ebx
  4048d2:	sub    r14d,r15d
  4048d5:	mov    ebx,DWORD PTR [rsp+0x64]
  4048d9:	cmp    DWORD PTR [rsp+0x128],ebx
  4048e0:	mov    eax,DWORD PTR [rsp+0x80]
  4048e7:	ja     0x404490
  4048ed:	mov    eax,DWORD PTR [rsp+0x8c]
  4048f4:	mov    ebx,DWORD PTR [rip+0x9766]        # 0x40e060
  4048fa:	imul   eax,DWORD PTR [rsp+0x88]
  404902:	add    DWORD PTR [rsp+0x84],ebx
  404909:	add    QWORD PTR [rsp+0x118],rax
  404911:	mov    eax,DWORD PTR [rsp+0x84]
  404918:	cmp    DWORD PTR [rsp+0x120],eax
  40491f:	ja     0x404419
  404925:	mov    rcx,QWORD PTR [rsp+0x70]
  40492a:	call   0x4058d0
  40492f:	mov    eax,0x1
  404934:	add    rsp,0xc8
  40493b:	pop    rbx
  40493c:	pop    rsi
  40493d:	pop    rdi
  40493e:	pop    rbp
  40493f:	pop    r12
  404941:	pop    r13
  404943:	pop    r14
  404945:	pop    r15
  404947:	ret    
  404948:	nop    DWORD PTR [rax+rax*1+0x0]
  404950:	mov    r9d,r14d
  404953:	mov    r8,rax
  404956:	mov    rcx,rdx
  404959:	jmp    0x4046fc
  40495e:	xchg   ax,ax
  404960:	xor    ecx,ecx
  404962:	movzx  r8d,BYTE PTR [rax+rcx*1]
  404967:	mov    BYTE PTR [rdx+rcx*1],r8b
  40496b:	add    rcx,0x1
  40496f:	cmp    rcx,r15
  404972:	jne    0x404962
  404974:	jmp    0x404860
  404979:	nop    DWORD PTR [rax+0x0]
  404980:	mov    edx,DWORD PTR [rsp+0x8c]
  404987:	add    rax,QWORD PTR [rsp+0x118]
  40498f:	test   edx,edx
  404991:	je     0x40488f
  404997:	mov    r11d,DWORD PTR [rsp+0x90]
  40499f:	mov    rdx,QWORD PTR [rsp+0x70]
  4049a4:	mov    rbx,QWORD PTR [rsp+0x98]
  4049ac:	mov    DWORD PTR [rsp+0x38],r14d
  4049b1:	test   r15d,r15d
  4049b4:	je     0x404d12
  4049ba:	lea    rcx,[rax+0x10]
  4049be:	cmp    rdx,rcx
  4049c1:	lea    rcx,[rdx+0x10]
  4049c5:	setae  r8b
  4049c9:	cmp    rax,rcx
  4049cc:	setae  cl
  4049cf:	or     r8b,cl
  4049d2:	je     0x404d40
  4049d8:	cmp    r15d,0x16
  4049dc:	jbe    0x404d40
  4049e2:	mov    r12,rax
  4049e5:	neg    r12
  4049e8:	and    r12d,0xf
  4049ec:	cmp    r15d,r12d
  4049ef:	cmovbe r12d,r15d
  4049f3:	test   r12d,r12d
  4049f6:	je     0x404d30
  4049fc:	movzx  r9d,BYTE PTR [rax]
  404a00:	cmp    r12d,0x1
  404a04:	lea    rcx,[rdx+0x1]
  404a08:	lea    r8,[rax+0x1]
  404a0c:	mov    BYTE PTR [rdx],r9b
  404a0f:	lea    r9d,[r15-0x2]
  404a13:	je     0x404bb1
  404a19:	movzx  r9d,BYTE PTR [rax+0x1]
  404a1e:	cmp    r12d,0x2
  404a22:	lea    rcx,[rdx+0x2]
  404a26:	lea    r8,[rax+0x2]
  404a2a:	mov    BYTE PTR [rdx+0x1],r9b
  404a2e:	lea    r9d,[r15-0x3]
  404a32:	je     0x404bb1
  404a38:	movzx  r9d,BYTE PTR [rax+0x2]
  404a3d:	cmp    r12d,0x3
  404a41:	lea    rcx,[rdx+0x3]
  404a45:	lea    r8,[rax+0x3]
  404a49:	mov    BYTE PTR [rdx+0x2],r9b
  404a4d:	lea    r9d,[r15-0x4]
  404a51:	je     0x404bb1
  404a57:	movzx  r9d,BYTE PTR [rax+0x3]
  404a5c:	cmp    r12d,0x4
  404a60:	lea    rcx,[rdx+0x4]
  404a64:	lea    r8,[rax+0x4]
  404a68:	mov    BYTE PTR [rdx+0x3],r9b
  404a6c:	lea    r9d,[r15-0x5]
  404a70:	je     0x404bb1
  404a76:	movzx  r9d,BYTE PTR [rax+0x4]
  404a7b:	cmp    r12d,0x5
  404a7f:	lea    rcx,[rdx+0x5]
  404a83:	lea    r8,[rax+0x5]
  404a87:	mov    BYTE PTR [rdx+0x4],r9b
  404a8b:	lea    r9d,[r15-0x6]
  404a8f:	je     0x404bb1
  404a95:	movzx  r9d,BYTE PTR [rax+0x5]
  404a9a:	cmp    r12d,0x6
  404a9e:	lea    rcx,[rdx+0x6]
  404aa2:	lea    r8,[rax+0x6]
  404aa6:	mov    BYTE PTR [rdx+0x5],r9b
  404aaa:	lea    r9d,[r15-0x7]
  404aae:	je     0x404bb1
  404ab4:	movzx  r9d,BYTE PTR [rax+0x6]
  404ab9:	cmp    r12d,0x7
  404abd:	lea    rcx,[rdx+0x7]
  404ac1:	lea    r8,[rax+0x7]
  404ac5:	mov    BYTE PTR [rdx+0x6],r9b
  404ac9:	lea    r9d,[r15-0x8]
  404acd:	je     0x404bb1
  404ad3:	movzx  r9d,BYTE PTR [rax+0x7]
  404ad8:	cmp    r12d,0x8
  404adc:	lea    rcx,[rdx+0x8]
  404ae0:	lea    r8,[rax+0x8]
  404ae4:	mov    BYTE PTR [rdx+0x7],r9b
  404ae8:	lea    r9d,[r15-0x9]
  404aec:	je     0x404bb1
  404af2:	movzx  r9d,BYTE PTR [rax+0x8]
  404af7:	cmp    r12d,0x9
  404afb:	lea    rcx,[rdx+0x9]
  404aff:	lea    r8,[rax+0x9]
  404b03:	mov    BYTE PTR [rdx+0x8],r9b
  404b07:	lea    r9d,[r15-0xa]
  404b0b:	je     0x404bb1
  404b11:	movzx  r9d,BYTE PTR [rax+0x9]
  404b16:	cmp    r12d,0xa
  404b1a:	lea    rcx,[rdx+0xa]
  404b1e:	lea    r8,[rax+0xa]
  404b22:	mov    BYTE PTR [rdx+0x9],r9b
  404b26:	lea    r9d,[r15-0xb]
  404b2a:	je     0x404bb1
  404b30:	movzx  r9d,BYTE PTR [rax+0xa]
  404b35:	cmp    r12d,0xb
  404b39:	lea    rcx,[rdx+0xb]
  404b3d:	lea    r8,[rax+0xb]
  404b41:	mov    BYTE PTR [rdx+0xa],r9b
  404b45:	lea    r9d,[r15-0xc]
  404b49:	je     0x404bb1
  404b4b:	movzx  r9d,BYTE PTR [rax+0xb]
  404b50:	cmp    r12d,0xc
  404b54:	lea    rcx,[rdx+0xc]
  404b58:	lea    r8,[rax+0xc]
  404b5c:	mov    BYTE PTR [rdx+0xb],r9b
  404b60:	lea    r9d,[r15-0xd]
  404b64:	je     0x404bb1
  404b66:	movzx  r9d,BYTE PTR [rax+0xc]
  404b6b:	cmp    r12d,0xd
  404b6f:	lea    rcx,[rdx+0xd]
  404b73:	lea    r8,[rax+0xd]
  404b77:	mov    BYTE PTR [rdx+0xc],r9b
  404b7b:	lea    r9d,[r15-0xe]
  404b7f:	je     0x404bb1
  404b81:	movzx  r9d,BYTE PTR [rax+0xd]
  404b86:	cmp    r12d,0xf
  404b8a:	lea    rcx,[rdx+0xe]
  404b8e:	lea    r8,[rax+0xe]
  404b92:	mov    BYTE PTR [rdx+0xd],r9b
  404b96:	lea    r9d,[r15-0xf]
  404b9a:	jne    0x404bb1
  404b9c:	movzx  r9d,BYTE PTR [rax+0xe]
  404ba1:	lea    rcx,[rdx+0xf]
  404ba5:	lea    r8,[rax+0xf]
  404ba9:	mov    BYTE PTR [rdx+0xe],r9b
  404bad:	lea    r9d,[r15-0x10]
  404bb1:	mov    ebp,r15d
  404bb4:	mov    r14d,DWORD PTR [rsp+0x60]
  404bb9:	mov    esi,r12d
  404bbc:	sub    ebp,r12d
  404bbf:	lea    r10d,[rbp-0x10]
  404bc3:	sub    r14d,r12d
  404bc6:	shr    r10d,0x4
  404bca:	add    r10d,0x1
  404bce:	mov    edi,r10d
  404bd1:	shl    edi,0x4
  404bd4:	cmp    r14d,0xe
  404bd8:	jbe    0x404c13
  404bda:	lea    r14,[rax+rsi*1]
  404bde:	xor    r12d,r12d
  404be1:	add    rsi,rdx
  404be4:	xor    r13d,r13d
  404be7:	movdqa xmm0,XMMWORD PTR [r14+r12*1]
  404bed:	add    r13d,0x1
  404bf1:	movups XMMWORD PTR [rsi+r12*1],xmm0
  404bf6:	add    r12,0x10
  404bfa:	cmp    r13d,r10d
  404bfd:	jb     0x404be7
  404bff:	mov    r10d,edi
  404c02:	sub    r9d,edi
  404c05:	add    rcx,r10
  404c08:	add    r8,r10
  404c0b:	cmp    ebp,edi
  404c0d:	je     0x404d03
  404c13:	movzx  r10d,BYTE PTR [r8]
  404c17:	test   r9d,r9d
  404c1a:	mov    BYTE PTR [rcx],r10b
  404c1d:	je     0x404d03
  404c23:	movzx  r10d,BYTE PTR [r8+0x1]
  404c28:	cmp    r9d,0x1
  404c2c:	mov    BYTE PTR [rcx+0x1],r10b
  404c30:	je     0x404d03
  404c36:	movzx  r10d,BYTE PTR [r8+0x2]
  404c3b:	cmp    r9d,0x2
  404c3f:	mov    BYTE PTR [rcx+0x2],r10b
  404c43:	je     0x404d03
  404c49:	movzx  r10d,BYTE PTR [r8+0x3]
  404c4e:	cmp    r9d,0x3
  404c52:	mov    BYTE PTR [rcx+0x3],r10b
  404c56:	je     0x404d03
  404c5c:	movzx  r10d,BYTE PTR [r8+0x4]
  404c61:	cmp    r9d,0x4
  404c65:	mov    BYTE PTR [rcx+0x4],r10b
  404c69:	je     0x404d03
  404c6f:	movzx  r10d,BYTE PTR [r8+0x5]
  404c74:	cmp    r9d,0x5
  404c78:	mov    BYTE PTR [rcx+0x5],r10b
  404c7c:	je     0x404d03
  404c82:	movzx  r10d,BYTE PTR [r8+0x6]
  404c87:	cmp    r9d,0x6
  404c8b:	mov    BYTE PTR [rcx+0x6],r10b
  404c8f:	je     0x404d03
  404c91:	movzx  r10d,BYTE PTR [r8+0x7]
  404c96:	cmp    r9d,0x7
  404c9a:	mov    BYTE PTR [rcx+0x7],r10b
  404c9e:	je     0x404d03
  404ca0:	movzx  r10d,BYTE PTR [r8+0x8]
  404ca5:	cmp    r9d,0x8
  404ca9:	mov    BYTE PTR [rcx+0x8],r10b
  404cad:	je     0x404d03
  404caf:	movzx  r10d,BYTE PTR [r8+0x9]
  404cb4:	cmp    r9d,0x9
  404cb8:	mov    BYTE PTR [rcx+0x9],r10b
  404cbc:	je     0x404d03
  404cbe:	movzx  r10d,BYTE PTR [r8+0xa]
  404cc3:	cmp    r9d,0xa
  404cc7:	mov    BYTE PTR [rcx+0xa],r10b
  404ccb:	je     0x404d03
  404ccd:	movzx  r10d,BYTE PTR [r8+0xb]
  404cd2:	cmp    r9d,0xb
  404cd6:	mov    BYTE PTR [rcx+0xb],r10b
  404cda:	je     0x404d03
  404cdc:	movzx  r10d,BYTE PTR [r8+0xc]
  404ce1:	cmp    r9d,0xc
  404ce5:	mov    BYTE PTR [rcx+0xc],r10b
  404ce9:	je     0x404d03
  404ceb:	movzx  r10d,BYTE PTR [r8+0xd]
  404cf0:	cmp    r9d,0xd
  404cf4:	mov    BYTE PTR [rcx+0xd],r10b
  404cf8:	je     0x404d03
  404cfa:	movzx  r8d,BYTE PTR [r8+0xe]
  404cff:	mov    BYTE PTR [rcx+0xe],r8b
  404d03:	mov    rsi,QWORD PTR [rsp+0x58]
  404d08:	lea    rcx,[rsi+0x1]
  404d0c:	add    rdx,rcx
  404d0f:	add    rax,rcx
  404d12:	sub    r11d,0x1
  404d16:	add    rax,QWORD PTR [rsp+0x48]
  404d1b:	cmp    r11d,0xffffffff
  404d1f:	jne    0x4049b1
  404d25:	mov    r14d,DWORD PTR [rsp+0x38]
  404d2a:	jmp    0x40488f
  404d2f:	nop
  404d30:	mov    r9d,DWORD PTR [rsp+0x60]
  404d35:	mov    r8,rax
  404d38:	mov    rcx,rdx
  404d3b:	jmp    0x404bb1
  404d40:	xor    ecx,ecx
  404d42:	movzx  r8d,BYTE PTR [rax+rcx*1]
  404d47:	mov    BYTE PTR [rdx+rcx*1],r8b
  404d4b:	add    rcx,0x1
  404d4f:	cmp    rcx,rbx
  404d52:	jne    0x404d42
  404d54:	jmp    0x404d03
  404d56:	mov    rcx,QWORD PTR [rsp+0x70]
  404d5b:	call   0x4058d0
  404d60:	xor    eax,eax
  404d62:	jmp    0x404934
  404d67:	nop    WORD PTR [rax+rax*1+0x0]
  404d70:	push   r14
  404d72:	push   r13
  404d74:	push   r12
  404d76:	push   rbp
  404d77:	push   rdi
  404d78:	push   rsi
  404d79:	push   rbx
  404d7a:	sub    rsp,0x30
  404d7e:	mov    esi,DWORD PTR [rsp+0x90]
  404d85:	xor    r13d,r13d
  404d88:	mov    edi,r8d
  404d8b:	mov    r14,rcx
  404d8e:	mov    r12,rdx
  404d91:	mov    ebp,r9d
  404d94:	call   0x405958
  404d99:	mov    r10d,edi
  404d9c:	imul   rax,r10
  404da0:	mov    rcx,rax
  404da3:	call   0x4058c8
  404da8:	test   rax,rax
  404dab:	mov    rbx,rax
  404dae:	je     0x404de8
  404db0:	movzx  esi,si
  404db3:	mov    rdx,rax
  404db6:	mov    r9d,ebp
  404db9:	mov    r8d,edi
  404dbc:	mov    rcx,r14
  404dbf:	mov    DWORD PTR [rsp+0x20],esi
  404dc3:	call   0x4034e0
  404dc8:	mov    rcx,r12
  404dcb:	mov    DWORD PTR [rsp+0x20],esi
  404dcf:	mov    r9d,ebp
  404dd2:	mov    r8d,edi
  404dd5:	mov    rdx,rbx
  404dd8:	call   0x403f50
  404ddd:	mov    rcx,rbx
  404de0:	mov    r13d,eax
  404de3:	call   0x4058d0
  404de8:	mov    eax,r13d
  404deb:	add    rsp,0x30
  404def:	pop    rbx
  404df0:	pop    rsi
  404df1:	pop    rdi
  404df2:	pop    rbp
  404df3:	pop    r12
  404df5:	pop    r13
  404df7:	pop    r14
  404df9:	ret    
  404dfa:	nop    WORD PTR [rax+rax*1+0x0]
  404e00:	push   r14
  404e02:	push   r13
  404e04:	push   r12
  404e06:	push   rbp
  404e07:	push   rdi
  404e08:	push   rsi
  404e09:	push   rbx
  404e0a:	sub    rsp,0x30
  404e0e:	mov    esi,DWORD PTR [rsp+0x90]
  404e15:	xor    r13d,r13d
  404e18:	mov    edi,r8d
  404e1b:	mov    r14,rcx
  404e1e:	mov    r12,rdx
  404e21:	mov    ebp,r9d
  404e24:	call   0x405958
  404e29:	mov    r10d,edi
  404e2c:	imul   rax,r10
  404e30:	mov    rcx,rax
  404e33:	call   0x4058c8
  404e38:	test   rax,rax
  404e3b:	mov    rbx,rax
  404e3e:	je     0x404e78
  404e40:	movzx  esi,si
  404e43:	mov    rdx,rax
  404e46:	mov    r9d,ebp
  404e49:	mov    r8d,edi
  404e4c:	mov    rcx,r14
  404e4f:	mov    DWORD PTR [rsp+0x20],esi
  404e53:	call   0x403180
  404e58:	mov    rcx,r12
  404e5b:	mov    DWORD PTR [rsp+0x20],esi
  404e5f:	mov    r9d,ebp
  404e62:	mov    r8d,edi
  404e65:	mov    rdx,rbx
  404e68:	call   0x404310
  404e6d:	mov    rcx,rbx
  404e70:	mov    r13d,eax
  404e73:	call   0x4058d0
  404e78:	mov    eax,r13d
  404e7b:	add    rsp,0x30
  404e7f:	pop    rbx
  404e80:	pop    rsi
  404e81:	pop    rdi
  404e82:	pop    rbp
  404e83:	pop    r12
  404e85:	pop    r13
  404e87:	pop    r14
  404e89:	ret    
  404e8a:	nop    WORD PTR [rax+rax*1+0x0]
  404e90:	push   r14
  404e92:	push   r13
  404e94:	push   r12
  404e96:	push   rbp
  404e97:	push   rdi
  404e98:	push   rsi
  404e99:	push   rbx
  404e9a:	sub    rsp,0x30
  404e9e:	mov    esi,DWORD PTR [rsp+0x90]
  404ea5:	xor    r13d,r13d
  404ea8:	mov    edi,r8d
  404eab:	mov    r14,rcx
  404eae:	mov    r12,rdx
  404eb1:	mov    ebp,r9d
  404eb4:	call   0x405958
  404eb9:	mov    r10d,edi
  404ebc:	imul   rax,r10
  404ec0:	mov    rcx,rax
  404ec3:	call   0x4058c8
  404ec8:	test   rax,rax
  404ecb:	mov    rbx,rax
  404ece:	je     0x404f08
  404ed0:	movzx  esi,si
  404ed3:	mov    rdx,rax
  404ed6:	mov    r9d,ebp
  404ed9:	mov    r8d,edi
  404edc:	mov    rcx,r14
  404edf:	mov    DWORD PTR [rsp+0x20],esi
  404ee3:	call   0x403180
  404ee8:	mov    rcx,r12
  404eeb:	mov    DWORD PTR [rsp+0x20],esi
  404eef:	mov    r9d,ebp
  404ef2:	mov    r8d,edi
  404ef5:	mov    rdx,rbx
  404ef8:	call   0x403f50
  404efd:	mov    rcx,rbx
  404f00:	mov    r13d,eax
  404f03:	call   0x4058d0
  404f08:	mov    eax,r13d
  404f0b:	add    rsp,0x30
  404f0f:	pop    rbx
  404f10:	pop    rsi
  404f11:	pop    rdi
  404f12:	pop    rbp
  404f13:	pop    r12
  404f15:	pop    r13
  404f17:	pop    r14
  404f19:	ret    
  404f1a:	nop    WORD PTR [rax+rax*1+0x0]
  404f20:	push   r14
  404f22:	push   r13
  404f24:	push   r12
  404f26:	push   rbp
  404f27:	push   rdi
  404f28:	push   rsi
  404f29:	push   rbx
  404f2a:	sub    rsp,0x30
  404f2e:	mov    ebx,DWORD PTR [rsp+0x90]
  404f35:	xor    esi,esi
  404f37:	mov    edi,r8d
  404f3a:	mov    r14,rcx
  404f3d:	mov    rbp,rdx
  404f40:	mov    r12d,r9d
  404f43:	call   0x405958
  404f48:	mov    edx,edi
  404f4a:	imul   rax,rdx
  404f4e:	mov    rcx,rax
  404f51:	call   0x4058c8
  404f56:	test   rax,rax
  404f59:	mov    r13,rax
  404f5c:	je     0x404fb9
  404f5e:	movzx  ebx,bx
  404f61:	mov    r9d,r12d
  404f64:	mov    r8d,edi
  404f67:	mov    DWORD PTR [rsp+0x20],ebx
  404f6b:	mov    rdx,rax
  404f6e:	mov    rcx,r14
  404f71:	call   0x4034e0
  404f76:	mov    rcx,rbp
  404f79:	xor    ebx,ebx
  404f7b:	mov    rsi,r13
  404f7e:	call   0x405930
  404f83:	test   edi,edi
  404f85:	mov    r12,rax
  404f88:	jne    0x404f9a
  404f8a:	jmp    0x404fd0
  404f8c:	nop    DWORD PTR [rax+0x0]
  404f90:	add    ebx,0x1
  404f93:	add    rsi,r12
  404f96:	cmp    ebx,edi
  404f98:	je     0x404fd0
  404f9a:	xor    r9d,r9d
  404f9d:	mov    r8d,ebx
  404fa0:	mov    rdx,rsi
  404fa3:	mov    rcx,rbp
  404fa6:	call   0x4058e0
  404fab:	test   eax,eax
  404fad:	jns    0x404f90
  404faf:	xor    esi,esi
  404fb1:	mov    rcx,r13
  404fb4:	call   0x4058d0
  404fb9:	mov    eax,esi
  404fbb:	add    rsp,0x30
  404fbf:	pop    rbx
  404fc0:	pop    rsi
  404fc1:	pop    rdi
  404fc2:	pop    rbp
  404fc3:	pop    r12
  404fc5:	pop    r13
  404fc7:	pop    r14
  404fc9:	ret    
  404fca:	nop    WORD PTR [rax+rax*1+0x0]
  404fd0:	mov    esi,0x1
  404fd5:	jmp    0x404fb1
  404fd7:	nop    WORD PTR [rax+rax*1+0x0]
  404fe0:	push   r14
  404fe2:	push   r13
  404fe4:	push   r12
  404fe6:	push   rbp
  404fe7:	push   rdi
  404fe8:	push   rsi
  404fe9:	push   rbx
  404fea:	sub    rsp,0x30
  404fee:	mov    esi,DWORD PTR [rsp+0x90]
  404ff5:	xor    r13d,r13d
  404ff8:	mov    edi,r8d
  404ffb:	mov    r14,rcx
  404ffe:	mov    r12,rdx
  405001:	mov    ebp,r9d
  405004:	call   0x405958
  405009:	mov    r10d,edi
  40500c:	imul   rax,r10
  405010:	mov    rcx,rax
  405013:	call   0x4058c8
  405018:	test   rax,rax
  40501b:	mov    rbx,rax
  40501e:	je     0x405058
  405020:	movzx  esi,si
  405023:	mov    rdx,rax
  405026:	mov    r9d,ebp
  405029:	mov    r8d,edi
  40502c:	mov    rcx,r14
  40502f:	mov    DWORD PTR [rsp+0x20],esi
  405033:	call   0x4034e0
  405038:	mov    rcx,r12
  40503b:	mov    DWORD PTR [rsp+0x20],esi
  40503f:	mov    r9d,ebp
  405042:	mov    r8d,edi
  405045:	mov    rdx,rbx
  405048:	call   0x404310
  40504d:	mov    rcx,rbx
  405050:	mov    r13d,eax
  405053:	call   0x4058d0
  405058:	mov    eax,r13d
  40505b:	add    rsp,0x30
  40505f:	pop    rbx
  405060:	pop    rsi
  405061:	pop    rdi
  405062:	pop    rbp
  405063:	pop    r12
  405065:	pop    r13
  405067:	pop    r14
  405069:	ret    
  40506a:	nop    WORD PTR [rax+rax*1+0x0]
  405070:	push   r14
  405072:	push   r13
  405074:	push   r12
  405076:	push   rbp
  405077:	push   rdi
  405078:	push   rsi
  405079:	push   rbx
  40507a:	sub    rsp,0x30
  40507e:	mov    ebx,DWORD PTR [rsp+0x90]
  405085:	xor    esi,esi
  405087:	mov    edi,r8d
  40508a:	mov    r14,rcx
  40508d:	mov    rbp,rdx
  405090:	mov    r12d,r9d
  405093:	call   0x405958
  405098:	mov    edx,edi
  40509a:	imul   rax,rdx
  40509e:	mov    rcx,rax
  4050a1:	call   0x4058c8
  4050a6:	test   rax,rax
  4050a9:	mov    r13,rax
  4050ac:	je     0x405109
  4050ae:	movzx  ebx,bx
  4050b1:	mov    r9d,r12d
  4050b4:	mov    r8d,edi
  4050b7:	mov    DWORD PTR [rsp+0x20],ebx
  4050bb:	mov    rdx,rax
  4050be:	mov    rcx,r14
  4050c1:	call   0x403180
  4050c6:	mov    rcx,rbp
  4050c9:	xor    ebx,ebx
  4050cb:	mov    rsi,r13
  4050ce:	call   0x405930
  4050d3:	test   edi,edi
  4050d5:	mov    r12,rax
  4050d8:	jne    0x4050ea
  4050da:	jmp    0x405120
  4050dc:	nop    DWORD PTR [rax+0x0]
  4050e0:	add    ebx,0x1
  4050e3:	add    rsi,r12
  4050e6:	cmp    ebx,edi
  4050e8:	je     0x405120
  4050ea:	xor    r9d,r9d
  4050ed:	mov    r8d,ebx
  4050f0:	mov    rdx,rsi
  4050f3:	mov    rcx,rbp
  4050f6:	call   0x4058e0
  4050fb:	test   eax,eax
  4050fd:	jns    0x4050e0
  4050ff:	xor    esi,esi
  405101:	mov    rcx,r13
  405104:	call   0x4058d0
  405109:	mov    eax,esi
  40510b:	add    rsp,0x30
  40510f:	pop    rbx
  405110:	pop    rsi
  405111:	pop    rdi
  405112:	pop    rbp
  405113:	pop    r12
  405115:	pop    r13
  405117:	pop    r14
  405119:	ret    
  40511a:	nop    WORD PTR [rax+rax*1+0x0]
  405120:	mov    esi,0x1
  405125:	jmp    0x405101
  405127:	nop    WORD PTR [rax+rax*1+0x0]
  405130:	push   r15
  405132:	push   r14
  405134:	push   r13
  405136:	push   r12
  405138:	push   rbp
  405139:	push   rdi
  40513a:	push   rsi
  40513b:	push   rbx
  40513c:	sub    rsp,0x68
  405140:	mov    r12d,DWORD PTR [rsp+0xd0]
  405148:	xor    r13d,r13d
  40514b:	mov    esi,r8d
  40514e:	mov    rbx,rcx
  405151:	mov    rbp,rdx
  405154:	mov    edi,r9d
  405157:	mov    WORD PTR [rsp+0x3e],r12w
  40515d:	call   0x405958
  405162:	mov    edx,esi
  405164:	imul   rax,rdx
  405168:	mov    rcx,rax
  40516b:	call   0x4058c8
  405170:	test   rax,rax
  405173:	mov    rdx,rax
  405176:	mov    QWORD PTR [rsp+0x48],rax
  40517b:	je     0x40526d
  405181:	movzx  eax,r12w
  405185:	mov    r9d,edi
  405188:	mov    r8d,esi
  40518b:	mov    rcx,rbx
  40518e:	mov    DWORD PTR [rsp+0x20],eax
  405192:	call   0x4034e0
  405197:	mov    rcx,rbp
  40519a:	call   0x405930
  40519f:	mov    rcx,rax
  4051a2:	call   0x4058c8
  4051a7:	test   rax,rax
  4051aa:	mov    rbx,rax
  4051ad:	je     0x405263
  4051b3:	test   r12w,r12w
  4051b7:	je     0x405255
  4051bd:	lea    eax,[r12-0x1]
  4051c2:	mov    QWORD PTR [rsp+0x40],0x0
  4051cb:	movzx  eax,ax
  4051ce:	add    rax,0x1
  4051d2:	mov    QWORD PTR [rsp+0x58],rax
  4051d7:	lea    eax,[rdi-0x1]
  4051da:	add    rax,0x1
  4051de:	mov    QWORD PTR [rsp+0x50],rax
  4051e3:	test   esi,esi
  4051e5:	je     0x405243
  4051e7:	mov    rax,QWORD PTR [rsp+0x40]
  4051ec:	mov    r13,QWORD PTR [rsp+0x48]
  4051f1:	xor    r14d,r14d
  4051f4:	add    r13,rax
  4051f7:	mov    r12d,eax
  4051fa:	mov    rax,QWORD PTR [rsp+0x50]
  4051ff:	lea    r15,[rbx+rax*1]
  405203:	test   edi,edi
  405205:	movzx  r8d,WORD PTR [rsp+0x3e]
  40520b:	mov    rdx,r13
  40520e:	mov    rax,rbx
  405211:	je     0x405225
  405213:	movzx  ecx,BYTE PTR [rdx]
  405216:	add    rax,0x1
  40521a:	add    rdx,r8
  40521d:	cmp    rax,r15
  405220:	mov    BYTE PTR [rax-0x1],cl
  405223:	jne    0x405213
  405225:	mov    r9d,r12d
  405228:	mov    r8d,r14d
  40522b:	mov    rdx,rbx
  40522e:	mov    rcx,rbp
  405231:	call   0x4058e0
  405236:	test   eax,eax
  405238:	js     0x405281
  40523a:	add    r14d,0x1
  40523e:	cmp    r14d,esi
  405241:	jne    0x405203
  405243:	add    QWORD PTR [rsp+0x40],0x1
  405249:	mov    rax,QWORD PTR [rsp+0x40]
  40524e:	cmp    rax,QWORD PTR [rsp+0x58]
  405253:	jne    0x4051e3
  405255:	mov    rcx,rbx
  405258:	mov    r13d,0x1
  40525e:	call   0x4058d0
  405263:	mov    rcx,QWORD PTR [rsp+0x48]
  405268:	call   0x4058d0
  40526d:	mov    eax,r13d
  405270:	add    rsp,0x68
  405274:	pop    rbx
  405275:	pop    rsi
  405276:	pop    rdi
  405277:	pop    rbp
  405278:	pop    r12
  40527a:	pop    r13
  40527c:	pop    r14
  40527e:	pop    r15
  405280:	ret    
  405281:	mov    rcx,rbx
  405284:	xor    r13d,r13d
  405287:	call   0x4058d0
  40528c:	mov    rcx,QWORD PTR [rsp+0x48]
  405291:	call   0x4058d0
  405296:	jmp    0x40526d
  405298:	nop    DWORD PTR [rax+rax*1+0x0]
  4052a0:	push   r15
  4052a2:	push   r14
  4052a4:	push   r13
  4052a6:	push   r12
  4052a8:	push   rbp
  4052a9:	push   rdi
  4052aa:	push   rsi
  4052ab:	push   rbx
  4052ac:	sub    rsp,0x68
  4052b0:	mov    r12d,DWORD PTR [rsp+0xd0]
  4052b8:	xor    r13d,r13d
  4052bb:	mov    esi,r8d
  4052be:	mov    rbx,rcx
  4052c1:	mov    rbp,rdx
  4052c4:	mov    edi,r9d
  4052c7:	mov    WORD PTR [rsp+0x3e],r12w
  4052cd:	call   0x405958
  4052d2:	mov    edx,esi
  4052d4:	imul   rax,rdx
  4052d8:	mov    rcx,rax
  4052db:	call   0x4058c8
  4052e0:	test   rax,rax
  4052e3:	mov    rdx,rax
  4052e6:	mov    QWORD PTR [rsp+0x48],rax
  4052eb:	je     0x4053dd
  4052f1:	movzx  eax,r12w
  4052f5:	mov    r9d,edi
  4052f8:	mov    r8d,esi
  4052fb:	mov    rcx,rbx
  4052fe:	mov    DWORD PTR [rsp+0x20],eax
  405302:	call   0x403180
  405307:	mov    rcx,rbp
  40530a:	call   0x405930
  40530f:	mov    rcx,rax
  405312:	call   0x4058c8
  405317:	test   rax,rax
  40531a:	mov    rbx,rax
  40531d:	je     0x4053d3
  405323:	test   r12w,r12w
  405327:	je     0x4053c5
  40532d:	lea    eax,[r12-0x1]
  405332:	mov    QWORD PTR [rsp+0x40],0x0
  40533b:	movzx  eax,ax
  40533e:	add    rax,0x1
  405342:	mov    QWORD PTR [rsp+0x58],rax
  405347:	lea    eax,[rdi-0x1]
  40534a:	add    rax,0x1
  40534e:	mov    QWORD PTR [rsp+0x50],rax
  405353:	test   esi,esi
  405355:	je     0x4053b3
  405357:	mov    rax,QWORD PTR [rsp+0x40]
  40535c:	mov    r13,QWORD PTR [rsp+0x48]
  405361:	xor    r14d,r14d
  405364:	add    r13,rax
  405367:	mov    r12d,eax
  40536a:	mov    rax,QWORD PTR [rsp+0x50]
  40536f:	lea    r15,[rbx+rax*1]
  405373:	test   edi,edi
  405375:	movzx  r8d,WORD PTR [rsp+0x3e]
  40537b:	mov    rdx,r13
  40537e:	mov    rax,rbx
  405381:	je     0x405395
  405383:	movzx  ecx,BYTE PTR [rdx]
  405386:	add    rax,0x1
  40538a:	add    rdx,r8
  40538d:	cmp    rax,r15
  405390:	mov    BYTE PTR [rax-0x1],cl
  405393:	jne    0x405383
  405395:	mov    r9d,r12d
  405398:	mov    r8d,r14d
  40539b:	mov    rdx,rbx
  40539e:	mov    rcx,rbp
  4053a1:	call   0x4058e0
  4053a6:	test   eax,eax
  4053a8:	js     0x4053f1
  4053aa:	add    r14d,0x1
  4053ae:	cmp    r14d,esi
  4053b1:	jne    0x405373
  4053b3:	add    QWORD PTR [rsp+0x40],0x1
  4053b9:	mov    rax,QWORD PTR [rsp+0x40]
  4053be:	cmp    rax,QWORD PTR [rsp+0x58]
  4053c3:	jne    0x405353
  4053c5:	mov    rcx,rbx
  4053c8:	mov    r13d,0x1
  4053ce:	call   0x4058d0
  4053d3:	mov    rcx,QWORD PTR [rsp+0x48]
  4053d8:	call   0x4058d0
  4053dd:	mov    eax,r13d
  4053e0:	add    rsp,0x68
  4053e4:	pop    rbx
  4053e5:	pop    rsi
  4053e6:	pop    rdi
  4053e7:	pop    rbp
  4053e8:	pop    r12
  4053ea:	pop    r13
  4053ec:	pop    r14
  4053ee:	pop    r15
  4053f0:	ret    
  4053f1:	mov    rcx,rbx
  4053f4:	xor    r13d,r13d
  4053f7:	call   0x4058d0
  4053fc:	mov    rcx,QWORD PTR [rsp+0x48]
  405401:	call   0x4058d0
  405406:	jmp    0x4053dd
  405408:	nop    DWORD PTR [rax+rax*1+0x0]
  405410:	push   r15
  405412:	push   r14
  405414:	push   r13
  405416:	push   r12
  405418:	push   rbp
  405419:	push   rdi
  40541a:	push   rsi
  40541b:	push   rbx
  40541c:	sub    rsp,0x48
  405420:	mov    r13d,DWORD PTR [rsp+0xb0]
  405428:	xor    ebx,ebx
  40542a:	mov    esi,r8d
  40542d:	mov    rdi,rcx
  405430:	mov    r14,rdx
  405433:	mov    r15d,r9d
  405436:	call   0x405958
  40543b:	mov    edx,esi
  40543d:	imul   rax,rdx
  405441:	mov    rcx,rax
  405444:	call   0x4058c8
  405449:	test   rax,rax
  40544c:	mov    r12,rax
  40544f:	je     0x4054bc
  405451:	movzx  eax,r13w
  405455:	mov    rcx,rdi
  405458:	mov    r13,r12
  40545b:	mov    DWORD PTR [rsp+0x3c],eax
  40545f:	call   0x405930
  405464:	test   esi,esi
  405466:	mov    rbp,rax
  405469:	jne    0x40547a
  40546b:	jmp    0x405499
  40546d:	nop    DWORD PTR [rax]
  405470:	add    ebx,0x1
  405473:	add    r13,rbp
  405476:	cmp    ebx,esi
  405478:	je     0x405499
  40547a:	xor    r9d,r9d
  40547d:	mov    r8d,ebx
  405480:	mov    rdx,r13
  405483:	mov    rcx,rdi
  405486:	call   0x405940
  40548b:	test   eax,eax
  40548d:	jns    0x405470
  40548f:	mov    eax,DWORD PTR [rip+0x8bb3]        # 0x40e048
  405495:	test   eax,eax
  405497:	jne    0x405470
  405499:	mov    eax,DWORD PTR [rsp+0x3c]
  40549d:	mov    rcx,r14
  4054a0:	mov    r9d,r15d
  4054a3:	mov    r8d,esi
  4054a6:	mov    rdx,r12
  4054a9:	mov    DWORD PTR [rsp+0x20],eax
  4054ad:	call   0x403f50
  4054b2:	mov    rcx,r12
  4054b5:	mov    ebx,eax
  4054b7:	call   0x4058d0
  4054bc:	mov    eax,ebx
  4054be:	add    rsp,0x48
  4054c2:	pop    rbx
  4054c3:	pop    rsi
  4054c4:	pop    rdi
  4054c5:	pop    rbp
  4054c6:	pop    r12
  4054c8:	pop    r13
  4054ca:	pop    r14
  4054cc:	pop    r15
  4054ce:	ret    
  4054cf:	nop
  4054d0:	push   r15
  4054d2:	push   r14
  4054d4:	push   r13
  4054d6:	push   r12
  4054d8:	push   rbp
  4054d9:	push   rdi
  4054da:	push   rsi
  4054db:	push   rbx
  4054dc:	sub    rsp,0x48
  4054e0:	mov    r13d,DWORD PTR [rsp+0xb0]
  4054e8:	xor    ebx,ebx
  4054ea:	mov    esi,r8d
  4054ed:	mov    rdi,rcx
  4054f0:	mov    r14,rdx
  4054f3:	mov    r15d,r9d
  4054f6:	call   0x405958
  4054fb:	mov    edx,esi
  4054fd:	imul   rax,rdx
  405501:	mov    rcx,rax
  405504:	call   0x4058c8
  405509:	test   rax,rax
  40550c:	mov    r12,rax
  40550f:	je     0x40557c
  405511:	movzx  eax,r13w
  405515:	mov    rcx,rdi
  405518:	mov    r13,r12
  40551b:	mov    DWORD PTR [rsp+0x3c],eax
  40551f:	call   0x405930
  405524:	test   esi,esi
  405526:	mov    rbp,rax
  405529:	jne    0x40553a
  40552b:	jmp    0x405559
  40552d:	nop    DWORD PTR [rax]
  405530:	add    ebx,0x1
  405533:	add    r13,rbp
  405536:	cmp    ebx,esi
  405538:	je     0x405559
  40553a:	xor    r9d,r9d
  40553d:	mov    r8d,ebx
  405540:	mov    rdx,r13
  405543:	mov    rcx,rdi
  405546:	call   0x405940
  40554b:	test   eax,eax
  40554d:	jns    0x405530
  40554f:	mov    eax,DWORD PTR [rip+0x8af3]        # 0x40e048
  405555:	test   eax,eax
  405557:	jne    0x405530
  405559:	mov    eax,DWORD PTR [rsp+0x3c]
  40555d:	mov    rcx,r14
  405560:	mov    r9d,r15d
  405563:	mov    r8d,esi
  405566:	mov    rdx,r12
  405569:	mov    DWORD PTR [rsp+0x20],eax
  40556d:	call   0x404310
  405572:	mov    rcx,r12
  405575:	mov    ebx,eax
  405577:	call   0x4058d0
  40557c:	mov    eax,ebx
  40557e:	add    rsp,0x48
  405582:	pop    rbx
  405583:	pop    rsi
  405584:	pop    rdi
  405585:	pop    rbp
  405586:	pop    r12
  405588:	pop    r13
  40558a:	pop    r14
  40558c:	pop    r15
  40558e:	ret    
  40558f:	nop
  405590:	push   r15
  405592:	push   r14
  405594:	push   r13
  405596:	push   r12
  405598:	push   rbp
  405599:	push   rdi
  40559a:	push   rsi
  40559b:	push   rbx
  40559c:	sub    rsp,0x58
  4055a0:	mov    esi,DWORD PTR [rsp+0xc0]
  4055a7:	xor    ebx,ebx
  4055a9:	mov    r14,rcx
  4055ac:	mov    QWORD PTR [rsp+0xa8],rdx
  4055b4:	mov    DWORD PTR [rsp+0xb0],r8d
  4055bc:	mov    DWORD PTR [rsp+0xb8],r9d
  4055c4:	mov    WORD PTR [rsp+0x4a],si
  4055c9:	call   0x405958
  4055ce:	mov    edx,DWORD PTR [rsp+0xb0]
  4055d5:	imul   rax,rdx
  4055d9:	mov    rcx,rax
  4055dc:	call   0x4058c8
  4055e1:	test   rax,rax
  4055e4:	mov    r15,rax
  4055e7:	mov    QWORD PTR [rsp+0x40],rax
  4055ec:	je     0x4056eb
  4055f2:	movzx  eax,si
  4055f5:	mov    rcx,r14
  4055f8:	mov    DWORD PTR [rsp+0x4c],eax
  4055fc:	call   0x405930
  405601:	mov    rcx,rax
  405604:	mov    rdi,rax
  405607:	call   0x4058c8
  40560c:	test   rax,rax
  40560f:	mov    r13,rax
  405612:	je     0x4056b4
  405618:	mov    edx,DWORD PTR [rsp+0xb0]
  40561f:	xor    ebp,ebp
  405621:	mov    rbx,r15
  405624:	test   edx,edx
  405626:	je     0x4056ac
  40562c:	movzx  eax,WORD PTR [rsp+0x4a]
  405631:	lea    r12d,[rax-0x1]
  405635:	movzx  r12d,r12w
  405639:	lea    rax,[r12+0x1]
  40563e:	mov    QWORD PTR [rsp+0x38],rax
  405643:	movzx  eax,WORD PTR [rsp+0x4a]
  405648:	test   ax,ax
  40564b:	je     0x40569d
  40564d:	xor    r12d,r12d
  405650:	movzx  r15d,ax
  405654:	mov    r9d,r12d
  405657:	mov    r8d,ebp
  40565a:	mov    rdx,r13
  40565d:	mov    rcx,r14
  405660:	lea    rsi,[rbx+r12*1]
  405664:	call   0x405940
  405669:	test   eax,eax
  40566b:	js     0x405700
  405671:	test   rdi,rdi
  405674:	jle    0x405692
  405676:	lea    rax,[rbx+rdi*1]
  40567a:	nop    WORD PTR [rax+rax*1+0x0]
  405680:	add    rbx,0x1
  405684:	movzx  edx,BYTE PTR [rbx-0x1]
  405688:	mov    BYTE PTR [rsi],dl
  40568a:	add    rsi,r15
  40568d:	cmp    rbx,rax
  405690:	jne    0x405680
  405692:	add    r12,0x1
  405696:	cmp    r12,QWORD PTR [rsp+0x38]
  40569b:	jne    0x405654
  40569d:	add    rbx,rdi
  4056a0:	add    ebp,0x1
  4056a3:	cmp    ebp,DWORD PTR [rsp+0xb0]
  4056aa:	jne    0x405643
  4056ac:	mov    rcx,r13
  4056af:	call   0x4058d0
  4056b4:	mov    rdi,QWORD PTR [rsp+0x40]
  4056b9:	mov    eax,DWORD PTR [rsp+0x4c]
  4056bd:	mov    rcx,QWORD PTR [rsp+0xa8]
  4056c5:	mov    r9d,DWORD PTR [rsp+0xb8]
  4056cd:	mov    r8d,DWORD PTR [rsp+0xb0]
  4056d5:	mov    DWORD PTR [rsp+0x20],eax
  4056d9:	mov    rdx,rdi
  4056dc:	call   0x404310
  4056e1:	mov    rcx,rdi
  4056e4:	mov    ebx,eax
  4056e6:	call   0x4058d0
  4056eb:	mov    eax,ebx
  4056ed:	add    rsp,0x58
  4056f1:	pop    rbx
  4056f2:	pop    rsi
  4056f3:	pop    rdi
  4056f4:	pop    rbp
  4056f5:	pop    r12
  4056f7:	pop    r13
  4056f9:	pop    r14
  4056fb:	pop    r15
  4056fd:	ret    
  4056fe:	xchg   ax,ax
  405700:	mov    eax,DWORD PTR [rip+0x8942]        # 0x40e048
  405706:	test   eax,eax
  405708:	jne    0x405671
  40570e:	jmp    0x4056ac
  405710:	push   r15
  405712:	push   r14
  405714:	push   r13
  405716:	push   r12
  405718:	push   rbp
  405719:	push   rdi
  40571a:	push   rsi
  40571b:	push   rbx
  40571c:	sub    rsp,0x58
  405720:	mov    esi,DWORD PTR [rsp+0xc0]
  405727:	xor    ebx,ebx
  405729:	mov    r14,rcx
  40572c:	mov    QWORD PTR [rsp+0xa8],rdx
  405734:	mov    DWORD PTR [rsp+0xb0],r8d
  40573c:	mov    DWORD PTR [rsp+0xb8],r9d
  405744:	mov    WORD PTR [rsp+0x4a],si
  405749:	call   0x405958
  40574e:	mov    edx,DWORD PTR [rsp+0xb0]
  405755:	imul   rax,rdx
  405759:	mov    rcx,rax
  40575c:	call   0x4058c8
  405761:	test   rax,rax
  405764:	mov    r15,rax
  405767:	mov    QWORD PTR [rsp+0x40],rax
  40576c:	je     0x40586b
  405772:	movzx  eax,si
  405775:	mov    rcx,r14
  405778:	mov    DWORD PTR [rsp+0x4c],eax
  40577c:	call   0x405930
  405781:	mov    rcx,rax
  405784:	mov    rdi,rax
  405787:	call   0x4058c8
  40578c:	test   rax,rax
  40578f:	mov    r13,rax
  405792:	je     0x405834
  405798:	mov    edx,DWORD PTR [rsp+0xb0]
  40579f:	xor    ebp,ebp
  4057a1:	mov    rbx,r15
  4057a4:	test   edx,edx
  4057a6:	je     0x40582c
  4057ac:	movzx  eax,WORD PTR [rsp+0x4a]
  4057b1:	lea    r12d,[rax-0x1]
  4057b5:	movzx  r12d,r12w
  4057b9:	lea    rax,[r12+0x1]
  4057be:	mov    QWORD PTR [rsp+0x38],rax
  4057c3:	movzx  eax,WORD PTR [rsp+0x4a]
  4057c8:	test   ax,ax
  4057cb:	je     0x40581d
  4057cd:	xor    r12d,r12d
  4057d0:	movzx  r15d,ax
  4057d4:	mov    r9d,r12d
  4057d7:	mov    r8d,ebp
  4057da:	mov    rdx,r13
  4057dd:	mov    rcx,r14
  4057e0:	lea    rsi,[rbx+r12*1]
  4057e4:	call   0x405940
  4057e9:	test   eax,eax
  4057eb:	js     0x405880
  4057f1:	test   rdi,rdi
  4057f4:	jle    0x405812
  4057f6:	lea    rax,[rbx+rdi*1]
  4057fa:	nop    WORD PTR [rax+rax*1+0x0]
  405800:	add    rbx,0x1
  405804:	movzx  edx,BYTE PTR [rbx-0x1]
  405808:	mov    BYTE PTR [rsi],dl
  40580a:	add    rsi,r15
  40580d:	cmp    rbx,rax
  405810:	jne    0x405800
  405812:	add    r12,0x1
  405816:	cmp    r12,QWORD PTR [rsp+0x38]
  40581b:	jne    0x4057d4
  40581d:	add    rbx,rdi
  405820:	add    ebp,0x1
  405823:	cmp    ebp,DWORD PTR [rsp+0xb0]
  40582a:	jne    0x4057c3
  40582c:	mov    rcx,r13
  40582f:	call   0x4058d0
  405834:	mov    rdi,QWORD PTR [rsp+0x40]
  405839:	mov    eax,DWORD PTR [rsp+0x4c]
  40583d:	mov    rcx,QWORD PTR [rsp+0xa8]
  405845:	mov    r9d,DWORD PTR [rsp+0xb8]
  40584d:	mov    r8d,DWORD PTR [rsp+0xb0]
  405855:	mov    DWORD PTR [rsp+0x20],eax
  405859:	mov    rdx,rdi
  40585c:	call   0x403f50
  405861:	mov    rcx,rdi
  405864:	mov    ebx,eax
  405866:	call   0x4058d0
  40586b:	mov    eax,ebx
  40586d:	add    rsp,0x58
  405871:	pop    rbx
  405872:	pop    rsi
  405873:	pop    rdi
  405874:	pop    rbp
  405875:	pop    r12
  405877:	pop    r13
  405879:	pop    r14
  40587b:	pop    r15
  40587d:	ret    
  40587e:	xchg   ax,ax
  405880:	mov    eax,DWORD PTR [rip+0x87c2]        # 0x40e048
  405886:	test   eax,eax
  405888:	jne    0x4057f1
  40588e:	jmp    0x40582c
  405890:	jmp    QWORD PTR [rip+0x9b2e]        # 0x40f3c4
  405896:	nop
  405897:	nop
  405898:	jmp    QWORD PTR [rip+0x9b1e]        # 0x40f3bc
  40589e:	nop
  40589f:	nop
  4058a0:	jmp    QWORD PTR [rip+0x9b0e]        # 0x40f3b4
  4058a6:	nop
  4058a7:	nop
  4058a8:	jmp    QWORD PTR [rip+0x9afe]        # 0x40f3ac
  4058ae:	nop
  4058af:	nop
  4058b0:	jmp    QWORD PTR [rip+0x9aee]        # 0x40f3a4
  4058b6:	nop
  4058b7:	nop
  4058b8:	jmp    QWORD PTR [rip+0x9ade]        # 0x40f39c
  4058be:	nop
  4058bf:	nop
  4058c0:	jmp    QWORD PTR [rip+0x9ace]        # 0x40f394
  4058c6:	nop
  4058c7:	nop
  4058c8:	jmp    QWORD PTR [rip+0x9de6]        # 0x40f6b4
  4058ce:	nop
  4058cf:	nop
  4058d0:	jmp    QWORD PTR [rip+0x9dd6]        # 0x40f6ac
  4058d6:	nop
  4058d7:	nop
  4058d8:	jmp    QWORD PTR [rip+0x9dc6]        # 0x40f6a4
  4058de:	nop
  4058df:	nop
  4058e0:	jmp    QWORD PTR [rip+0x9db6]        # 0x40f69c
  4058e6:	nop
  4058e7:	nop
  4058e8:	jmp    QWORD PTR [rip+0x9da6]        # 0x40f694
  4058ee:	nop
  4058ef:	nop
  4058f0:	jmp    QWORD PTR [rip+0x9d96]        # 0x40f68c
  4058f6:	nop
  4058f7:	nop
  4058f8:	jmp    QWORD PTR [rip+0x9d86]        # 0x40f684
  4058fe:	nop
  4058ff:	nop
  405900:	jmp    QWORD PTR [rip+0x9d76]        # 0x40f67c
  405906:	nop
  405907:	nop
  405908:	jmp    QWORD PTR [rip+0x9d66]        # 0x40f674
  40590e:	nop
  40590f:	nop
  405910:	jmp    QWORD PTR [rip+0x9d56]        # 0x40f66c
  405916:	nop
  405917:	nop
  405918:	jmp    QWORD PTR [rip+0x9d46]        # 0x40f664
  40591e:	nop
  40591f:	nop
  405920:	jmp    QWORD PTR [rip+0x9d36]        # 0x40f65c
  405926:	nop
  405927:	nop
  405928:	jmp    QWORD PTR [rip+0x9d26]        # 0x40f654
  40592e:	nop
  40592f:	nop
  405930:	jmp    QWORD PTR [rip+0x9d16]        # 0x40f64c
  405936:	nop
  405937:	nop
  405938:	jmp    QWORD PTR [rip+0x9d06]        # 0x40f644
  40593e:	nop
  40593f:	nop
  405940:	jmp    QWORD PTR [rip+0x9cf6]        # 0x40f63c
  405946:	nop
  405947:	nop
  405948:	jmp    QWORD PTR [rip+0x9ce6]        # 0x40f634
  40594e:	nop
  40594f:	nop
  405950:	jmp    QWORD PTR [rip+0x9cd6]        # 0x40f62c
  405956:	nop
  405957:	nop
  405958:	jmp    QWORD PTR [rip+0x9cc6]        # 0x40f624
  40595e:	nop
  40595f:	nop
  405960:	jmp    QWORD PTR [rip+0x9cb6]        # 0x40f61c
  405966:	nop
  405967:	nop
  405968:	jmp    QWORD PTR [rip+0x9ca6]        # 0x40f614
  40596e:	nop
  40596f:	nop
  405970:	jmp    QWORD PTR [rip+0x9c96]        # 0x40f60c
  405976:	nop
  405977:	nop
  405978:	jmp    QWORD PTR [rip+0x9c86]        # 0x40f604
  40597e:	nop
  40597f:	nop
  405980:	jmp    QWORD PTR [rip+0x9c76]        # 0x40f5fc
  405986:	nop
  405987:	nop
  405988:	jmp    QWORD PTR [rip+0x9c66]        # 0x40f5f4
  40598e:	nop
  40598f:	nop
  405990:	jmp    QWORD PTR [rip+0x9c56]        # 0x40f5ec
  405996:	nop
  405997:	nop
  405998:	nop    DWORD PTR [rax+rax*1+0x0]
  4059a0:	push   rbx
  4059a1:	sub    rsp,0x30
  4059a5:	mov    rbx,rcx
  4059a8:	mov    rcx,QWORD PTR [rip+0x90a1]        # 0x40ea50
  4059af:	call   0x405f50
  4059b4:	cmp    rax,0xffffffffffffffff
  4059b8:	mov    QWORD PTR [rsp+0x20],rax
  4059bd:	je     0x405a35
  4059bf:	mov    ecx,0x8
  4059c4:	call   0x407c28
  4059c9:	mov    rcx,QWORD PTR [rip+0x9080]        # 0x40ea50
  4059d0:	call   0x405f50
  4059d5:	mov    rcx,QWORD PTR [rip+0x907c]        # 0x40ea58
  4059dc:	mov    QWORD PTR [rsp+0x20],rax
  4059e1:	call   0x405f50
  4059e6:	lea    rdx,[rsp+0x20]
  4059eb:	lea    r8,[rsp+0x28]
  4059f0:	mov    rcx,rbx
  4059f3:	mov    QWORD PTR [rsp+0x28],rax
  4059f8:	call   0x407c70
  4059fd:	mov    rcx,QWORD PTR [rsp+0x20]
  405a02:	mov    rbx,rax
  405a05:	call   0x405f60
  405a0a:	mov    rcx,QWORD PTR [rsp+0x28]
  405a0f:	mov    QWORD PTR [rip+0x903a],rax        # 0x40ea50
  405a16:	call   0x405f60
  405a1b:	mov    ecx,0x8
  405a20:	mov    QWORD PTR [rip+0x9031],rax        # 0x40ea58
  405a27:	call   0x407c18
  405a2c:	mov    rax,rbx
  405a2f:	add    rsp,0x30
  405a33:	pop    rbx
  405a34:	ret    
  405a35:	mov    rax,QWORD PTR [rip+0x54b4]        # 0x40aef0
  405a3c:	mov    rcx,rbx
  405a3f:	call   QWORD PTR [rax]
  405a41:	add    rsp,0x30
  405a45:	pop    rbx
  405a46:	ret    
  405a47:	nop    WORD PTR [rax+rax*1+0x0]
  405a50:	sub    rsp,0x28
  405a54:	call   0x4059a0
  405a59:	test   rax,rax
  405a5c:	sete   al
  405a5f:	movzx  eax,al
  405a62:	neg    eax
  405a64:	add    rsp,0x28
  405a68:	ret    
  405a69:	nop
  405a6a:	nop
  405a6b:	nop
  405a6c:	nop
  405a6d:	nop
  405a6e:	nop
  405a6f:	nop
  405a70:	sub    rsp,0x28
  405a74:	mov    rax,QWORD PTR [rip+0x3885]        # 0x409300
  405a7b:	mov    rax,QWORD PTR [rax]
  405a7e:	test   rax,rax
  405a81:	je     0x405aa0
  405a83:	call   rax
  405a85:	mov    rax,QWORD PTR [rip+0x3874]        # 0x409300
  405a8c:	lea    rdx,[rax+0x8]
  405a90:	mov    rax,QWORD PTR [rax+0x8]
  405a94:	mov    QWORD PTR [rip+0x3865],rdx        # 0x409300
  405a9b:	test   rax,rax
  405a9e:	jne    0x405a83
  405aa0:	add    rsp,0x28
  405aa4:	ret    
  405aa5:	nop
  405aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ab0:	push   rsi
  405ab1:	push   rbx
  405ab2:	sub    rsp,0x28
  405ab6:	mov    rsi,QWORD PTR [rip+0x53a3]        # 0x40ae60
  405abd:	mov    rax,QWORD PTR [rsi]
  405ac0:	cmp    eax,0xffffffff
  405ac3:	mov    ebx,eax
  405ac5:	je     0x405af0
  405ac7:	test   ebx,ebx
  405ac9:	je     0x405ada
  405acb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ad0:	mov    eax,ebx
  405ad2:	call   QWORD PTR [rsi+rax*8]
  405ad5:	sub    ebx,0x1
  405ad8:	jne    0x405ad0
  405ada:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x405a70
  405ae1:	add    rsp,0x28
  405ae5:	pop    rbx
  405ae6:	pop    rsi
  405ae7:	jmp    0x405a50
  405aec:	nop    DWORD PTR [rax+0x0]
  405af0:	xor    ebx,ebx
  405af2:	jmp    0x405af6
  405af4:	mov    ebx,eax
  405af6:	lea    edx,[rbx+0x1]
  405af9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  405afe:	mov    rax,rdx
  405b01:	jne    0x405af4
  405b03:	jmp    0x405ac7
  405b05:	nop
  405b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b10:	mov    eax,DWORD PTR [rip+0x855a]        # 0x40e070
  405b16:	test   eax,eax
  405b18:	je     0x405b20
  405b1a:	repz ret 
  405b1c:	nop    DWORD PTR [rax+0x0]
  405b20:	mov    DWORD PTR [rip+0x8546],0x1        # 0x40e070
  405b2a:	jmp    0x405ab0
  405b2c:	nop
  405b2d:	nop
  405b2e:	nop
  405b2f:	nop
  405b30:	mov    rax,QWORD PTR [rip+0x998d]        # 0x40f4c4
  405b37:	rex.W jmp rax
  405b3a:	nop
  405b3b:	nop
  405b3c:	nop
  405b3d:	nop
  405b3e:	nop
  405b3f:	nop
  405b40:	xor    eax,eax
  405b42:	ret    
  405b43:	nop
  405b44:	nop
  405b45:	nop
  405b46:	nop
  405b47:	nop
  405b48:	nop
  405b49:	nop
  405b4a:	nop
  405b4b:	nop
  405b4c:	nop
  405b4d:	nop
  405b4e:	nop
  405b4f:	nop
  405b50:	push   r12
  405b52:	push   rbp
  405b53:	push   rdi
  405b54:	push   rsi
  405b55:	push   rbx
  405b56:	sub    rsp,0x40
  405b5a:	mov    rbx,QWORD PTR [rip+0x382f]        # 0x409390
  405b61:	movabs rax,0x2b992ddfa232
  405b6b:	mov    QWORD PTR [rsp+0x20],0x0
  405b74:	cmp    rbx,rax
  405b77:	je     0x405b90
  405b79:	not    rbx
  405b7c:	mov    QWORD PTR [rip+0x381d],rbx        # 0x4093a0
  405b83:	add    rsp,0x40
  405b87:	pop    rbx
  405b88:	pop    rsi
  405b89:	pop    rdi
  405b8a:	pop    rbp
  405b8b:	pop    r12
  405b8d:	ret    
  405b8e:	xchg   ax,ax
  405b90:	lea    rcx,[rsp+0x20]
  405b95:	call   QWORD PTR [rip+0x9871]        # 0x40f40c
  405b9b:	mov    r12,QWORD PTR [rsp+0x20]
  405ba0:	call   QWORD PTR [rip+0x9846]        # 0x40f3ec
  405ba6:	mov    ebp,eax
  405ba8:	call   QWORD PTR [rip+0x9846]        # 0x40f3f4
  405bae:	mov    edi,eax
  405bb0:	call   QWORD PTR [rip+0x985e]        # 0x40f414
  405bb6:	lea    rcx,[rsp+0x30]
  405bbb:	mov    esi,eax
  405bbd:	call   QWORD PTR [rip+0x9869]        # 0x40f42c
  405bc3:	xor    r12,QWORD PTR [rsp+0x30]
  405bc8:	mov    edx,edi
  405bca:	movabs rax,0xffffffffffff
  405bd4:	xor    rbp,r12
  405bd7:	mov    rdi,rbp
  405bda:	xor    rdi,rdx
  405bdd:	mov    edx,esi
  405bdf:	xor    rdi,rdx
  405be2:	mov    rsi,rdi
  405be5:	and    rsi,rax
  405be8:	cmp    rsi,rbx
  405beb:	je     0x405c10
  405bed:	mov    rax,rsi
  405bf0:	not    rax
  405bf3:	mov    QWORD PTR [rip+0x3796],rsi        # 0x409390
  405bfa:	mov    QWORD PTR [rip+0x379f],rax        # 0x4093a0
  405c01:	add    rsp,0x40
  405c05:	pop    rbx
  405c06:	pop    rsi
  405c07:	pop    rdi
  405c08:	pop    rbp
  405c09:	pop    r12
  405c0b:	ret    
  405c0c:	nop    DWORD PTR [rax+0x0]
  405c10:	movabs rax,0xffffd466d2205dcc
  405c1a:	movabs rsi,0x2b992ddfa233
  405c24:	jmp    0x405bf3
  405c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c30:	push   rbp
  405c31:	push   rsi
  405c32:	push   rbx
  405c33:	mov    rbp,rsp
  405c36:	sub    rsp,0x70
  405c3a:	mov    rsi,rcx
  405c3d:	lea    rcx,[rip+0x847c]        # 0x40e0c0
  405c44:	call   QWORD PTR [rip+0x97f2]        # 0x40f43c
  405c4a:	mov    rbx,QWORD PTR [rip+0x8567]        # 0x40e1b8
  405c51:	xor    r8d,r8d
  405c54:	lea    rdx,[rbp-0x28]
  405c58:	mov    rcx,rbx
  405c5b:	call   QWORD PTR [rip+0x97e3]        # 0x40f444
  405c61:	test   rax,rax
  405c64:	mov    r9,rax
  405c67:	je     0x405d10
  405c6d:	lea    rax,[rbp-0x20]
  405c71:	mov    QWORD PTR [rsp+0x38],0x0
  405c7a:	mov    r8,rbx
  405c7d:	mov    rdx,QWORD PTR [rbp-0x28]
  405c81:	xor    ecx,ecx
  405c83:	mov    QWORD PTR [rsp+0x30],rax
  405c88:	lea    rax,[rbp-0x18]
  405c8c:	mov    QWORD PTR [rsp+0x28],rax
  405c91:	lea    rax,[rip+0x8428]        # 0x40e0c0
  405c98:	mov    QWORD PTR [rsp+0x20],rax
  405c9d:	call   QWORD PTR [rip+0x97a9]        # 0x40f44c
  405ca3:	mov    rax,QWORD PTR [rip+0x850e]        # 0x40e1b8
  405caa:	xor    ecx,ecx
  405cac:	mov    QWORD PTR [rip+0x848d],rsi        # 0x40e140
  405cb3:	mov    DWORD PTR [rip+0x8903],0xc0000409        # 0x40e5c0
  405cbd:	mov    DWORD PTR [rip+0x88fd],0x1        # 0x40e5c4
  405cc7:	mov    QWORD PTR [rip+0x8902],rax        # 0x40e5d0
  405cce:	mov    rax,QWORD PTR [rip+0x36bb]        # 0x409390
  405cd5:	mov    QWORD PTR [rbp-0x10],rax
  405cd9:	mov    rax,QWORD PTR [rip+0x36c0]        # 0x4093a0
  405ce0:	mov    QWORD PTR [rbp-0x8],rax
  405ce4:	call   QWORD PTR [rip+0x976a]        # 0x40f454
  405cea:	lea    rcx,[rip+0x4d7f]        # 0x40aa70
  405cf1:	call   QWORD PTR [rip+0x977d]        # 0x40f474
  405cf7:	call   QWORD PTR [rip+0x96e7]        # 0x40f3e4
  405cfd:	mov    edx,0xc0000409
  405d02:	mov    rcx,rax
  405d05:	call   QWORD PTR [rip+0x9759]        # 0x40f464
  405d0b:	call   0x407c10
  405d10:	mov    rax,QWORD PTR [rbp+0x18]
  405d14:	mov    QWORD PTR [rip+0x849d],rax        # 0x40e1b8
  405d1b:	lea    rax,[rbp+0x8]
  405d1f:	mov    QWORD PTR [rip+0x8432],rax        # 0x40e158
  405d26:	jmp    0x405ca3
  405d2b:	nop
  405d2c:	nop
  405d2d:	nop
  405d2e:	nop
  405d2f:	nop
  405d30:	sub    rsp,0x28
  405d34:	test   edx,edx
  405d36:	je     0x405d50
  405d38:	cmp    edx,0x3
  405d3b:	je     0x405d50
  405d3d:	mov    eax,0x1
  405d42:	add    rsp,0x28
  405d46:	ret    
  405d47:	nop    WORD PTR [rax+rax*1+0x0]
  405d50:	call   0x406a40
  405d55:	mov    eax,0x1
  405d5a:	add    rsp,0x28
  405d5e:	ret    
  405d5f:	nop
  405d60:	push   rsi
  405d61:	push   rbx
  405d62:	sub    rsp,0x28
  405d66:	mov    rax,QWORD PTR [rip+0x50d3]        # 0x40ae40
  405d6d:	cmp    DWORD PTR [rax],0x2
  405d70:	je     0x405d78
  405d72:	mov    DWORD PTR [rax],0x2
  405d78:	cmp    edx,0x2
  405d7b:	je     0x405d90
  405d7d:	cmp    edx,0x1
  405d80:	je     0x405dc2
  405d82:	mov    eax,0x1
  405d87:	add    rsp,0x28
  405d8b:	pop    rbx
  405d8c:	pop    rsi
  405d8d:	ret    
  405d8e:	xchg   ax,ax
  405d90:	lea    rbx,[rip+0xa2c9]        # 0x410060
  405d97:	lea    rsi,[rip+0xa2c2]        # 0x410060
  405d9e:	cmp    rbx,rsi
  405da1:	je     0x405d82
  405da3:	mov    rax,QWORD PTR [rbx]
  405da6:	test   rax,rax
  405da9:	je     0x405dad
  405dab:	call   rax
  405dad:	add    rbx,0x8
  405db1:	cmp    rbx,rsi
  405db4:	jne    0x405da3
  405db6:	mov    eax,0x1
  405dbb:	add    rsp,0x28
  405dbf:	pop    rbx
  405dc0:	pop    rsi
  405dc1:	ret    
  405dc2:	call   0x406a40
  405dc7:	jmp    0x405d82
  405dc9:	nop    DWORD PTR [rax+0x0]
  405dd0:	xor    eax,eax
  405dd2:	ret    
  405dd3:	nop
  405dd4:	nop
  405dd5:	nop
  405dd6:	nop
  405dd7:	nop
  405dd8:	nop
  405dd9:	nop
  405dda:	nop
  405ddb:	nop
  405ddc:	nop
  405ddd:	nop
  405dde:	nop
  405ddf:	nop
  405de0:	sub    rsp,0x58
  405de4:	mov    rax,QWORD PTR [rip+0x88b5]        # 0x40e6a0
  405deb:	test   rax,rax
  405dee:	je     0x405e1c
  405df0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  405df9:	mov    DWORD PTR [rsp+0x20],ecx
  405dfd:	lea    rcx,[rsp+0x20]
  405e02:	mov    QWORD PTR [rsp+0x28],rdx
  405e07:	movsd  QWORD PTR [rsp+0x30],xmm2
  405e0d:	movsd  QWORD PTR [rsp+0x38],xmm3
  405e13:	movsd  QWORD PTR [rsp+0x40],xmm0
  405e19:	call   rax
  405e1b:	nop
  405e1c:	add    rsp,0x58
  405e20:	ret    
  405e21:	nop    DWORD PTR [rax+rax*1+0x0]
  405e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e30:	mov    QWORD PTR [rip+0x8869],rcx        # 0x40e6a0
  405e37:	jmp    0x407c48
  405e3c:	nop    DWORD PTR [rax+0x0]
  405e40:	push   rsi
  405e41:	push   rbx
  405e42:	sub    rsp,0x78
  405e46:	movaps XMMWORD PTR [rsp+0x40],xmm6
  405e4b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  405e50:	movaps XMMWORD PTR [rsp+0x60],xmm8
  405e56:	cmp    DWORD PTR [rcx],0x6
  405e59:	ja     0x405f30
  405e5f:	mov    edx,DWORD PTR [rcx]
  405e61:	lea    rax,[rip+0x4d4c]        # 0x40abb4
  405e68:	movsxd rdx,DWORD PTR [rax+rdx*4]
  405e6c:	add    rax,rdx
  405e6f:	jmp    rax
  405e71:	lea    rbx,[rip+0x4c18]        # 0x40aa90
  405e78:	nop    DWORD PTR [rax+rax*1+0x0]
  405e80:	movsd  xmm8,QWORD PTR [rcx+0x20]
  405e86:	mov    rsi,QWORD PTR [rcx+0x8]
  405e8a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  405e8f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  405e94:	call   0x407c60
  405e99:	movsd  QWORD PTR [rsp+0x30],xmm8
  405ea0:	lea    rcx,[rax+0x60]
  405ea4:	lea    rdx,[rip+0x4cdd]        # 0x40ab88
  405eab:	movsd  QWORD PTR [rsp+0x28],xmm7
  405eb1:	mov    r9,rsi
  405eb4:	mov    r8,rbx
  405eb7:	movsd  QWORD PTR [rsp+0x20],xmm6
  405ebd:	call   0x407be0
  405ec2:	nop
  405ec3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  405ec8:	xor    eax,eax
  405eca:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  405ecf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  405ed5:	add    rsp,0x78
  405ed9:	pop    rbx
  405eda:	pop    rsi
  405edb:	ret    
  405edc:	nop    DWORD PTR [rax+0x0]
  405ee0:	lea    rbx,[rip+0x4bc8]        # 0x40aaaf
  405ee7:	jmp    0x405e80
  405ee9:	nop    DWORD PTR [rax+0x0]
  405ef0:	lea    rbx,[rip+0x4bd9]        # 0x40aad0
  405ef7:	jmp    0x405e80
  405ef9:	nop    DWORD PTR [rax+0x0]
  405f00:	lea    rbx,[rip+0x4c39]        # 0x40ab40
  405f07:	jmp    0x405e80
  405f0c:	nop    DWORD PTR [rax+0x0]
  405f10:	lea    rbx,[rip+0x4c01]        # 0x40ab18
  405f17:	jmp    0x405e80
  405f1c:	nop    DWORD PTR [rax+0x0]
  405f20:	lea    rbx,[rip+0x4bc9]        # 0x40aaf0
  405f27:	jmp    0x405e80
  405f2c:	nop    DWORD PTR [rax+0x0]
  405f30:	lea    rbx,[rip+0x4c3f]        # 0x40ab76
  405f37:	jmp    0x405e80
  405f3c:	nop
  405f3d:	nop
  405f3e:	nop
  405f3f:	nop
  405f40:	fninit 
  405f42:	ret    
  405f43:	nop
  405f44:	nop
  405f45:	nop
  405f46:	nop
  405f47:	nop
  405f48:	nop
  405f49:	nop
  405f4a:	nop
  405f4b:	nop
  405f4c:	nop
  405f4d:	nop
  405f4e:	nop
  405f4f:	nop
  405f50:	mov    rax,rcx
  405f53:	ret    
  405f54:	xchg   ax,ax
  405f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f60:	mov    rax,rcx
  405f63:	ret    
  405f64:	nop
  405f65:	nop
  405f66:	nop
  405f67:	nop
  405f68:	nop
  405f69:	nop
  405f6a:	nop
  405f6b:	nop
  405f6c:	nop
  405f6d:	nop
  405f6e:	nop
  405f6f:	nop
  405f70:	push   rsi
  405f71:	push   rbx
  405f72:	sub    rsp,0x38
  405f76:	lea    rax,[rsp+0x58]
  405f7b:	mov    rbx,rcx
  405f7e:	mov    QWORD PTR [rsp+0x58],rdx
  405f83:	mov    QWORD PTR [rsp+0x60],r8
  405f88:	mov    QWORD PTR [rsp+0x68],r9
  405f8d:	mov    QWORD PTR [rsp+0x28],rax
  405f92:	call   0x407c60
  405f97:	lea    rcx,[rip+0x4c32]        # 0x40abd0
  405f9e:	lea    r9,[rax+0x60]
  405fa2:	mov    r8d,0x1b
  405fa8:	mov    edx,0x1
  405fad:	call   0x407bc0
  405fb2:	mov    rsi,QWORD PTR [rsp+0x28]
  405fb7:	call   0x407c60
  405fbc:	lea    rcx,[rax+0x60]
  405fc0:	mov    rdx,rbx
  405fc3:	mov    r8,rsi
  405fc6:	call   0x407b50
  405fcb:	call   0x407c10
  405fd0:	nop
  405fd1:	nop    DWORD PTR [rax+rax*1+0x0]
  405fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405fe0:	push   r13
  405fe2:	push   r12
  405fe4:	push   rbp
  405fe5:	push   rdi
  405fe6:	push   rsi
  405fe7:	push   rbx
  405fe8:	sub    rsp,0x58
  405fec:	movsxd rbp,DWORD PTR [rip+0x86d1]        # 0x40e6c4
  405ff3:	mov    rbx,rcx
  405ff6:	mov    rsi,rdx
  405ff9:	mov    rdi,r8
  405ffc:	test   ebp,ebp
  405ffe:	jle    0x4060fa
  406004:	mov    rax,QWORD PTR [rip+0x86bd]        # 0x40e6c8
  40600b:	xor    r9d,r9d
  40600e:	add    rax,0x8
  406012:	mov    r10,QWORD PTR [rax]
  406015:	cmp    rbx,r10
  406018:	jb     0x40602e
  40601a:	mov    rdx,QWORD PTR [rax+0x8]
  40601e:	mov    r11d,DWORD PTR [rdx+0x8]
  406022:	add    r10,r11
  406025:	cmp    rbx,r10
  406028:	jb     0x4060e0
  40602e:	add    r9d,0x1
  406032:	add    rax,0x18
  406036:	cmp    r9d,ebp
  406039:	jne    0x406012
  40603b:	mov    rcx,rbx
  40603e:	call   0x406c50
  406043:	test   rax,rax
  406046:	mov    r12,rax
  406049:	je     0x406132
  40604f:	lea    rbp,[rbp+rbp*2+0x0]
  406054:	shl    rbp,0x3
  406058:	mov    r13,rbp
  40605b:	add    r13,QWORD PTR [rip+0x8666]        # 0x40e6c8
  406062:	mov    QWORD PTR [r13+0x10],rax
  406066:	mov    DWORD PTR [r13+0x0],0x0
  40606e:	call   0x406d70
  406073:	mov    edx,DWORD PTR [r12+0xc]
  406078:	mov    r8d,0x30
  40607e:	add    rax,rdx
  406081:	lea    rdx,[rsp+0x20]
  406086:	mov    QWORD PTR [r13+0x8],rax
  40608a:	mov    rax,QWORD PTR [rip+0x8637]        # 0x40e6c8
  406091:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  406096:	call   QWORD PTR [rip+0x93e8]        # 0x40f484
  40609c:	test   rax,rax
  40609f:	je     0x406115
  4060a1:	mov    eax,DWORD PTR [rsp+0x44]
  4060a5:	lea    edx,[rax-0x4]
  4060a8:	and    edx,0xfffffffb
  4060ab:	je     0x4060d9
  4060ad:	sub    eax,0x40
  4060b0:	and    eax,0xffffffbf
  4060b3:	je     0x4060d9
  4060b5:	mov    r9,rbp
  4060b8:	add    r9,QWORD PTR [rip+0x8609]        # 0x40e6c8
  4060bf:	mov    r8d,0x40
  4060c5:	mov    rdx,QWORD PTR [rsp+0x38]
  4060ca:	mov    rcx,QWORD PTR [rsp+0x20]
  4060cf:	call   QWORD PTR [rip+0x93a7]        # 0x40f47c
  4060d5:	test   eax,eax
  4060d7:	je     0x406101
  4060d9:	add    DWORD PTR [rip+0x85e4],0x1        # 0x40e6c4
  4060e0:	mov    r8,rdi
  4060e3:	mov    rdx,rsi
  4060e6:	mov    rcx,rbx
  4060e9:	add    rsp,0x58
  4060ed:	pop    rbx
  4060ee:	pop    rsi
  4060ef:	pop    rdi
  4060f0:	pop    rbp
  4060f1:	pop    r12
  4060f3:	pop    r13
  4060f5:	jmp    0x407ba8
  4060fa:	xor    ebp,ebp
  4060fc:	jmp    0x40603b
  406101:	call   QWORD PTR [rip+0x92f5]        # 0x40f3fc
  406107:	lea    rcx,[rip+0x4b3a]        # 0x40ac48
  40610e:	mov    edx,eax
  406110:	call   0x405f70
  406115:	mov    rax,QWORD PTR [rip+0x85ac]        # 0x40e6c8
  40611c:	mov    edx,DWORD PTR [r12+0x8]
  406121:	lea    rcx,[rip+0x4ae8]        # 0x40ac10
  406128:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40612d:	call   0x405f70
  406132:	lea    rcx,[rip+0x4ab7]        # 0x40abf0
  406139:	mov    rdx,rbx
  40613c:	call   0x405f70
  406141:	nop
  406142:	nop    DWORD PTR [rax+0x0]
  406146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406150:	push   rbp
  406151:	push   r14
  406153:	push   r13
  406155:	push   r12
  406157:	push   rdi
  406158:	push   rsi
  406159:	push   rbx
  40615a:	mov    rbp,rsp
  40615d:	sub    rsp,0x60
  406161:	mov    ebx,DWORD PTR [rip+0x8559]        # 0x40e6c0
  406167:	test   ebx,ebx
  406169:	je     0x406180
  40616b:	mov    rsp,rbp
  40616e:	pop    rbx
  40616f:	pop    rsi
  406170:	pop    rdi
  406171:	pop    r12
  406173:	pop    r13
  406175:	pop    r14
  406177:	pop    rbp
  406178:	ret    
  406179:	nop    DWORD PTR [rax+0x0]
  406180:	mov    DWORD PTR [rip+0x8536],0x1        # 0x40e6c0
  40618a:	call   0x406ca0
  40618f:	cdqe   
  406191:	lea    rax,[rax+rax*2]
  406195:	lea    rax,[rax*8+0x1e]
  40619d:	and    rax,0xfffffffffffffff0
  4061a1:	call   0x406ec0
  4061a6:	mov    rsi,QWORD PTR [rip+0x4cc3]        # 0x40ae70
  4061ad:	mov    rbx,QWORD PTR [rip+0x4ccc]        # 0x40ae80
  4061b4:	sub    rsp,rax
  4061b7:	mov    DWORD PTR [rip+0x8503],0x0        # 0x40e6c4
  4061c1:	lea    rax,[rsp+0x20]
  4061c6:	mov    QWORD PTR [rip+0x84fb],rax        # 0x40e6c8
  4061cd:	mov    rax,rsi
  4061d0:	sub    rax,rbx
  4061d3:	cmp    rax,0x7
  4061d7:	jle    0x40616b
  4061d9:	cmp    rax,0xb
  4061dd:	jle    0x406205
  4061df:	mov    r11d,DWORD PTR [rbx]
  4061e2:	test   r11d,r11d
  4061e5:	jne    0x406330
  4061eb:	mov    r10d,DWORD PTR [rbx+0x4]
  4061ef:	test   r10d,r10d
  4061f2:	jne    0x406330
  4061f8:	mov    r9d,DWORD PTR [rbx+0x8]
  4061fc:	test   r9d,r9d
  4061ff:	jne    0x40621c
  406201:	add    rbx,0xc
  406205:	mov    r8d,DWORD PTR [rbx]
  406208:	test   r8d,r8d
  40620b:	jne    0x406330
  406211:	mov    ecx,DWORD PTR [rbx+0x4]
  406214:	test   ecx,ecx
  406216:	jne    0x406330
  40621c:	mov    edx,DWORD PTR [rbx+0x8]
  40621f:	cmp    edx,0x1
  406222:	jne    0x40643c
  406228:	add    rbx,0xc
  40622c:	cmp    rbx,rsi
  40622f:	jae    0x40616b
  406235:	mov    r12,QWORD PTR [rip+0x4c64]        # 0x40aea0
  40623c:	lea    r13,[rbp-0x30]
  406240:	movabs r14,0xffffffff00000000
  40624a:	mov    ecx,DWORD PTR [rbx+0x4]
  40624d:	mov    eax,DWORD PTR [rbx]
  40624f:	movzx  edx,BYTE PTR [rbx+0x8]
  406253:	add    rax,r12
  406256:	add    rcx,r12
  406259:	cmp    edx,0x10
  40625c:	mov    r8,QWORD PTR [rax]
  40625f:	je     0x4063a6
  406265:	jbe    0x40636d
  40626b:	cmp    edx,0x20
  40626e:	je     0x4063ef
  406274:	cmp    edx,0x40
  406277:	jne    0x4063db
  40627d:	sub    r8,rax
  406280:	mov    rdx,r13
  406283:	mov    rdi,r13
  406286:	mov    rax,r8
  406289:	add    rax,QWORD PTR [rcx]
  40628c:	mov    r8d,0x8
  406292:	mov    QWORD PTR [rbp-0x30],rax
  406296:	call   0x405fe0
  40629b:	add    rbx,0xc
  40629f:	cmp    rbx,rsi
  4062a2:	jb     0x40624a
  4062a4:	mov    eax,DWORD PTR [rip+0x841a]        # 0x40e6c4
  4062aa:	xor    ebx,ebx
  4062ac:	xor    esi,esi
  4062ae:	test   eax,eax
  4062b0:	jle    0x40616b
  4062b6:	mov    r14,QWORD PTR [rip+0x91c7]        # 0x40f484
  4062bd:	lea    r13,[rbp-0x34]
  4062c1:	mov    r12,QWORD PTR [rip+0x91b4]        # 0x40f47c
  4062c8:	jmp    0x4062e3
  4062ca:	nop    WORD PTR [rax+rax*1+0x0]
  4062d0:	add    esi,0x1
  4062d3:	add    rbx,0x18
  4062d7:	cmp    esi,DWORD PTR [rip+0x83e7]        # 0x40e6c4
  4062dd:	jge    0x40616b
  4062e3:	mov    rax,rbx
  4062e6:	add    rax,QWORD PTR [rip+0x83db]        # 0x40e6c8
  4062ed:	mov    edx,DWORD PTR [rax]
  4062ef:	test   edx,edx
  4062f1:	je     0x4062d0
  4062f3:	mov    rcx,QWORD PTR [rax+0x8]
  4062f7:	mov    r8d,0x30
  4062fd:	mov    rdx,rdi
  406300:	call   r14
  406303:	test   rax,rax
  406306:	je     0x40641e
  40630c:	mov    rax,QWORD PTR [rip+0x83b5]        # 0x40e6c8
  406313:	mov    r9,r13
  406316:	mov    rdx,QWORD PTR [rbp-0x18]
  40631a:	mov    rcx,QWORD PTR [rbp-0x30]
  40631e:	mov    r8d,DWORD PTR [rax+rbx*1]
  406322:	call   r12
  406325:	jmp    0x4062d0
  406327:	nop    WORD PTR [rax+rax*1+0x0]
  406330:	cmp    rbx,rsi
  406333:	jae    0x40616b
  406339:	mov    r12,QWORD PTR [rip+0x4b60]        # 0x40aea0
  406340:	lea    rdi,[rbp-0x30]
  406344:	mov    ecx,DWORD PTR [rbx+0x4]
  406347:	mov    eax,DWORD PTR [rbx]
  406349:	mov    r8d,0x4
  40634f:	mov    rdx,rdi
  406352:	add    rbx,0x8
  406356:	add    rcx,r12
  406359:	add    eax,DWORD PTR [rcx]
  40635b:	mov    DWORD PTR [rbp-0x30],eax
  40635e:	call   0x405fe0
  406363:	cmp    rbx,rsi
  406366:	jb     0x406344
  406368:	jmp    0x4062a4
  40636d:	cmp    edx,0x8
  406370:	jne    0x4063db
  406372:	movzx  edx,BYTE PTR [rcx]
  406375:	mov    rdi,r13
  406378:	mov    r10,rdx
  40637b:	or     r10,0xffffffffffffff00
  406382:	test   dl,dl
  406384:	cmovs  rdx,r10
  406388:	sub    rdx,rax
  40638b:	lea    rax,[r8+rdx*1]
  40638f:	mov    r8d,0x1
  406395:	mov    rdx,r13
  406398:	mov    QWORD PTR [rbp-0x30],rax
  40639c:	call   0x405fe0
  4063a1:	jmp    0x40629b
  4063a6:	movzx  edx,WORD PTR [rcx]
  4063a9:	mov    rdi,r13
  4063ac:	mov    r10,rdx
  4063af:	or     r10,0xffffffffffff0000
  4063b6:	test   dx,dx
  4063b9:	cmovs  rdx,r10
  4063bd:	sub    rdx,rax
  4063c0:	lea    rax,[r8+rdx*1]
  4063c4:	mov    r8d,0x2
  4063ca:	mov    rdx,r13
  4063cd:	mov    QWORD PTR [rbp-0x30],rax
  4063d1:	call   0x405fe0
  4063d6:	jmp    0x40629b
  4063db:	lea    rcx,[rip+0x48c6]        # 0x40aca8
  4063e2:	mov    QWORD PTR [rbp-0x30],0x0
  4063ea:	call   0x405f70
  4063ef:	mov    edx,DWORD PTR [rcx]
  4063f1:	mov    rdi,r13
  4063f4:	mov    r10,rdx
  4063f7:	or     r10,r14
  4063fa:	test   edx,edx
  4063fc:	cmovs  rdx,r10
  406400:	sub    rdx,rax
  406403:	lea    rax,[r8+rdx*1]
  406407:	mov    r8d,0x4
  40640d:	mov    rdx,r13
  406410:	mov    QWORD PTR [rbp-0x30],rax
  406414:	call   0x405fe0
  406419:	jmp    0x40629b
  40641e:	add    rbx,QWORD PTR [rip+0x82a3]        # 0x40e6c8
  406425:	lea    rcx,[rip+0x47e4]        # 0x40ac10
  40642c:	mov    rax,QWORD PTR [rbx+0x10]
  406430:	mov    r8,QWORD PTR [rbx+0x8]
  406434:	mov    edx,DWORD PTR [rax+0x8]
  406437:	call   0x405f70
  40643c:	lea    rcx,[rip+0x482d]        # 0x40ac70
  406443:	call   0x405f70
  406448:	nop
  406449:	nop
  40644a:	nop
  40644b:	nop
  40644c:	nop
  40644d:	nop
  40644e:	nop
  40644f:	nop
  406450:	sub    rsp,0x28
  406454:	mov    eax,DWORD PTR [rcx]
  406456:	cmp    eax,0xc0000091
  40645b:	ja     0x4064c0
  40645d:	cmp    eax,0xc000008d
  406462:	jae    0x4064df
  406464:	cmp    eax,0xc0000008
  406469:	je     0x406580
  40646f:	ja     0x406550
  406475:	cmp    eax,0x80000002
  40647a:	je     0x406580
  406480:	cmp    eax,0xc0000005
  406485:	jne    0x40655e
  40648b:	xor    edx,edx
  40648d:	mov    ecx,0xb
  406492:	call   0x407b80
  406497:	cmp    rax,0x1
  40649b:	je     0x4065e0
  4064a1:	test   rax,rax
  4064a4:	je     0x4065c0
  4064aa:	mov    ecx,0xb
  4064af:	call   rax
  4064b1:	xor    eax,eax
  4064b3:	add    rsp,0x28
  4064b7:	ret    
  4064b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4064c0:	cmp    eax,0xc0000094
  4064c5:	je     0x406590
  4064cb:	ja     0x406510
  4064cd:	cmp    eax,0xc0000092
  4064d2:	je     0x406580
  4064d8:	cmp    eax,0xc0000093
  4064dd:	jne    0x40655e
  4064df:	xor    edx,edx
  4064e1:	mov    ecx,0x8
  4064e6:	call   0x407b80
  4064eb:	cmp    rax,0x1
  4064ef:	mov    rdx,rax
  4064f2:	je     0x406568
  4064f4:	test   rdx,rdx
  4064f7:	mov    eax,0x1
  4064fc:	je     0x4064b3
  4064fe:	mov    ecx,0x8
  406503:	call   rdx
  406505:	xor    eax,eax
  406507:	add    rsp,0x28
  40650b:	ret    
  40650c:	nop    DWORD PTR [rax+0x0]
  406510:	cmp    eax,0xc0000095
  406515:	je     0x406580
  406517:	cmp    eax,0xc0000096
  40651c:	jne    0x40655e
  40651e:	xor    edx,edx
  406520:	mov    ecx,0x4
  406525:	call   0x407b80
  40652a:	cmp    rax,0x1
  40652e:	je     0x4065ca
  406534:	test   rax,rax
  406537:	je     0x4065c0
  40653d:	mov    ecx,0x4
  406542:	call   rax
  406544:	xor    eax,eax
  406546:	jmp    0x4064b3
  40654b:	nop    DWORD PTR [rax+rax*1+0x0]
  406550:	cmp    eax,0xc000001d
  406555:	je     0x40651e
  406557:	cmp    eax,0xc000008c
  40655c:	je     0x406580
  40655e:	mov    eax,0x1
  406563:	add    rsp,0x28
  406567:	ret    
  406568:	mov    edx,0x1
  40656d:	mov    ecx,0x8
  406572:	call   0x407b80
  406577:	call   0x405f40
  40657c:	nop    DWORD PTR [rax+0x0]
  406580:	xor    eax,eax
  406582:	add    rsp,0x28
  406586:	ret    
  406587:	nop    WORD PTR [rax+rax*1+0x0]
  406590:	xor    edx,edx
  406592:	mov    ecx,0x8
  406597:	call   0x407b80
  40659c:	cmp    rax,0x1
  4065a0:	mov    rdx,rax
  4065a3:	jne    0x4064f4
  4065a9:	mov    edx,0x1
  4065ae:	mov    ecx,0x8
  4065b3:	call   0x407b80
  4065b8:	xor    eax,eax
  4065ba:	jmp    0x4064b3
  4065bf:	nop
  4065c0:	mov    eax,0x4
  4065c5:	add    rsp,0x28
  4065c9:	ret    
  4065ca:	mov    edx,0x1
  4065cf:	mov    ecx,0x4
  4065d4:	call   0x407b80
  4065d9:	xor    eax,eax
  4065db:	jmp    0x4064b3
  4065e0:	mov    edx,0x1
  4065e5:	mov    ecx,0xb
  4065ea:	call   0x407b80
  4065ef:	xor    eax,eax
  4065f1:	jmp    0x4064b3
  4065f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406600:	push   r12
  406602:	push   rbp
  406603:	push   rdi
  406604:	push   rsi
  406605:	push   rbx
  406606:	sub    rsp,0x20
  40660a:	call   0x406d70
  40660f:	mov    rbp,rax
  406612:	mov    eax,DWORD PTR [rip+0x80f0]        # 0x40e708
  406618:	test   eax,eax
  40661a:	jne    0x406641
  40661c:	test   rbp,rbp
  40661f:	je     0x406641
  406621:	lea    rcx,[rip+0x46b8]        # 0x40ace0
  406628:	mov    DWORD PTR [rip+0x80d6],0x1        # 0x40e708
  406632:	call   0x406bb0
  406637:	test   rax,rax
  40663a:	je     0x406650
  40663c:	mov    eax,0x1
  406641:	add    rsp,0x20
  406645:	pop    rbx
  406646:	pop    rsi
  406647:	pop    rdi
  406648:	pop    rbp
  406649:	pop    r12
  40664b:	ret    
  40664c:	nop    DWORD PTR [rax+0x0]
  406650:	lea    rbx,[rip+0x81e9]        # 0x40e840
  406657:	mov    ecx,0x30
  40665c:	lea    rdx,[rip+0x80dd]        # 0x40e740
  406663:	lea    r12,[rip+0xfffffffffffffde6]        # 0x406450
  40666a:	xor    esi,esi
  40666c:	mov    rdi,rbx
  40666f:	rep stos QWORD PTR es:[rdi],rax
  406672:	mov    rdi,rdx
  406675:	sub    r12,rbp
  406678:	mov    cl,0x20
  40667a:	rep stos QWORD PTR es:[rdi],rax
  40667d:	mov    rdi,rdx
  406680:	jmp    0x4066b0
  406682:	mov    BYTE PTR [rdi],0x9
  406685:	mov    DWORD PTR [rdi+0x4],r12d
  406689:	add    rsi,0x1
  40668d:	mov    edx,DWORD PTR [rax+0xc]
  406690:	add    rbx,0xc
  406694:	mov    DWORD PTR [rbx-0xc],edx
  406697:	add    edx,DWORD PTR [rax+0x8]
  40669a:	mov    rax,rdi
  40669d:	sub    rax,rbp
  4066a0:	add    rdi,0x8
  4066a4:	mov    DWORD PTR [rbx-0x4],eax
  4066a7:	mov    DWORD PTR [rbx-0x8],edx
  4066aa:	cmp    rsi,0x20
  4066ae:	je     0x4066e5
  4066b0:	mov    rcx,rsi
  4066b3:	call   0x406ce0
  4066b8:	test   rax,rax
  4066bb:	jne    0x406682
  4066bd:	test   rsi,rsi
  4066c0:	je     0x40663c
  4066c6:	mov    edx,esi
  4066c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4066d0:	mov    r8,rbp
  4066d3:	lea    rcx,[rip+0x8166]        # 0x40e840
  4066da:	call   QWORD PTR [rip+0x8d54]        # 0x40f434
  4066e0:	jmp    0x40663c
  4066e5:	mov    edx,0x20
  4066ea:	jmp    0x4066d0
  4066ec:	nop    DWORD PTR [rax+0x0]
  4066f0:	push   rbx
  4066f1:	sub    rsp,0x20
  4066f5:	mov    rdx,QWORD PTR [rcx]
  4066f8:	mov    eax,DWORD PTR [rdx]
  4066fa:	mov    r8d,eax
  4066fd:	and    r8d,0x20ffffff
  406704:	cmp    r8d,0x20474343
  40670b:	je     0x406810
  406711:	cmp    eax,0xc0000091
  406716:	mov    rbx,rcx
  406719:	ja     0x4067a0
  40671f:	cmp    eax,0xc000008d
  406724:	jae    0x4067b7
  40672a:	cmp    eax,0xc0000008
  40672f:	je     0x406763
  406731:	ja     0x406770
  406733:	cmp    eax,0x80000002
  406738:	je     0x406763
  40673a:	cmp    eax,0xc0000005
  40673f:	jne    0x406782
  406741:	xor    edx,edx
  406743:	mov    ecx,0xb
  406748:	call   0x407b80
  40674d:	cmp    rax,0x1
  406751:	je     0x406880
  406757:	test   rax,rax
  40675a:	je     0x406782
  40675c:	mov    ecx,0xb
  406761:	call   rax
  406763:	mov    eax,0xffffffff
  406768:	add    rsp,0x20
  40676c:	pop    rbx
  40676d:	ret    
  40676e:	xchg   ax,ax
  406770:	cmp    eax,0xc000001d
  406775:	je     0x406836
  40677b:	cmp    eax,0xc000008c
  406780:	je     0x406763
  406782:	mov    rax,QWORD PTR [rip+0x7f77]        # 0x40e700
  406789:	test   rax,rax
  40678c:	je     0x406768
  40678e:	mov    rcx,rbx
  406791:	add    rsp,0x20
  406795:	pop    rbx
  406796:	rex.W jmp rax
  406799:	nop    DWORD PTR [rax+0x0]
  4067a0:	cmp    eax,0xc0000094
  4067a5:	je     0x4067e2
  4067a7:	ja     0x406820
  4067a9:	cmp    eax,0xc0000092
  4067ae:	je     0x406763
  4067b0:	cmp    eax,0xc0000093
  4067b5:	jne    0x406782
  4067b7:	xor    edx,edx
  4067b9:	mov    ecx,0x8
  4067be:	call   0x407b80
  4067c3:	cmp    rax,0x1
  4067c7:	jne    0x4067f4
  4067c9:	mov    edx,0x1
  4067ce:	mov    ecx,0x8
  4067d3:	call   0x407b80
  4067d8:	call   0x405f40
  4067dd:	jmp    0x406763
  4067e2:	xor    edx,edx
  4067e4:	mov    ecx,0x8
  4067e9:	call   0x407b80
  4067ee:	cmp    rax,0x1
  4067f2:	je     0x406862
  4067f4:	test   rax,rax
  4067f7:	je     0x406782
  4067f9:	mov    ecx,0x8
  4067fe:	call   rax
  406800:	mov    eax,0xffffffff
  406805:	jmp    0x406768
  40680a:	nop    WORD PTR [rax+rax*1+0x0]
  406810:	test   BYTE PTR [rdx+0x4],0x1
  406814:	jne    0x406711
  40681a:	jmp    0x406763
  40681f:	nop
  406820:	cmp    eax,0xc0000095
  406825:	je     0x406763
  40682b:	cmp    eax,0xc0000096
  406830:	jne    0x406782
  406836:	xor    edx,edx
  406838:	mov    ecx,0x4
  40683d:	call   0x407b80
  406842:	cmp    rax,0x1
  406846:	je     0x406894
  406848:	test   rax,rax
  40684b:	je     0x406782
  406851:	mov    ecx,0x4
  406856:	call   rax
  406858:	mov    eax,0xffffffff
  40685d:	jmp    0x406768
  406862:	mov    edx,0x1
  406867:	mov    ecx,0x8
  40686c:	call   0x407b80
  406871:	jmp    0x406763
  406876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406880:	mov    edx,0x1
  406885:	mov    ecx,0xb
  40688a:	call   0x407b80
  40688f:	jmp    0x406763
  406894:	mov    edx,0x1
  406899:	mov    ecx,0x4
  40689e:	call   0x407b80
  4068a3:	jmp    0x406763
  4068a8:	nop
  4068a9:	nop
  4068aa:	nop
  4068ab:	nop
  4068ac:	nop
  4068ad:	nop
  4068ae:	nop
  4068af:	nop
  4068b0:	push   rbp
  4068b1:	push   rdi
  4068b2:	push   rsi
  4068b3:	push   rbx
  4068b4:	sub    rsp,0x28
  4068b8:	lea    rcx,[rip+0x8121]        # 0x40e9e0
  4068bf:	call   QWORD PTR [rip+0x8b17]        # 0x40f3dc
  4068c5:	mov    rbx,QWORD PTR [rip+0x80f4]        # 0x40e9c0
  4068cc:	test   rbx,rbx
  4068cf:	je     0x406904
  4068d1:	mov    rbp,QWORD PTR [rip+0x8b94]        # 0x40f46c
  4068d8:	mov    rdi,QWORD PTR [rip+0x8b1d]        # 0x40f3fc
  4068df:	nop
  4068e0:	mov    ecx,DWORD PTR [rbx]
  4068e2:	call   rbp
  4068e4:	mov    rsi,rax
  4068e7:	call   rdi
  4068e9:	test   eax,eax
  4068eb:	jne    0x4068fb
  4068ed:	test   rsi,rsi
  4068f0:	je     0x4068fb
  4068f2:	mov    rax,QWORD PTR [rbx+0x8]
  4068f6:	mov    rcx,rsi
  4068f9:	call   rax
  4068fb:	mov    rbx,QWORD PTR [rbx+0x10]
  4068ff:	test   rbx,rbx
  406902:	jne    0x4068e0
  406904:	mov    rax,QWORD PTR [rip+0x8b19]        # 0x40f424
  40690b:	lea    rcx,[rip+0x80ce]        # 0x40e9e0
  406912:	add    rsp,0x28
  406916:	pop    rbx
  406917:	pop    rsi
  406918:	pop    rdi
  406919:	pop    rbp
  40691a:	rex.W jmp rax
  40691d:	nop    DWORD PTR [rax]
  406920:	push   rdi
  406921:	push   rsi
  406922:	push   rbx
  406923:	sub    rsp,0x20
  406927:	mov    eax,DWORD PTR [rip+0x809b]        # 0x40e9c8
  40692d:	test   eax,eax
  40692f:	jne    0x406940
  406931:	add    rsp,0x20
  406935:	pop    rbx
  406936:	pop    rsi
  406937:	pop    rdi
  406938:	ret    
  406939:	nop    DWORD PTR [rax+0x0]
  406940:	mov    rsi,rdx
  406943:	mov    edi,ecx
  406945:	mov    edx,0x18
  40694a:	mov    ecx,0x1
  40694f:	call   0x407c00
  406954:	test   rax,rax
  406957:	mov    rbx,rax
  40695a:	je     0x406998
  40695c:	mov    DWORD PTR [rax],edi
  40695e:	mov    QWORD PTR [rax+0x8],rsi
  406962:	lea    rcx,[rip+0x8077]        # 0x40e9e0
  406969:	call   QWORD PTR [rip+0x8a6d]        # 0x40f3dc
  40696f:	mov    rax,QWORD PTR [rip+0x804a]        # 0x40e9c0
  406976:	lea    rcx,[rip+0x8063]        # 0x40e9e0
  40697d:	mov    QWORD PTR [rip+0x803c],rbx        # 0x40e9c0
  406984:	mov    QWORD PTR [rbx+0x10],rax
  406988:	call   QWORD PTR [rip+0x8a96]        # 0x40f424
  40698e:	xor    eax,eax
  406990:	add    rsp,0x20
  406994:	pop    rbx
  406995:	pop    rsi
  406996:	pop    rdi
  406997:	ret    
  406998:	mov    eax,0xffffffff
  40699d:	jmp    0x406931
  40699f:	nop
  4069a0:	push   rbx
  4069a1:	sub    rsp,0x20
  4069a5:	mov    eax,DWORD PTR [rip+0x801d]        # 0x40e9c8
  4069ab:	test   eax,eax
  4069ad:	jne    0x4069c0
  4069af:	xor    eax,eax
  4069b1:	add    rsp,0x20
  4069b5:	pop    rbx
  4069b6:	ret    
  4069b7:	nop    WORD PTR [rax+rax*1+0x0]
  4069c0:	mov    ebx,ecx
  4069c2:	lea    rcx,[rip+0x8017]        # 0x40e9e0
  4069c9:	call   QWORD PTR [rip+0x8a0d]        # 0x40f3dc
  4069cf:	mov    rdx,QWORD PTR [rip+0x7fea]        # 0x40e9c0
  4069d6:	test   rdx,rdx
  4069d9:	je     0x4069f7
  4069db:	mov    eax,DWORD PTR [rdx]
  4069dd:	cmp    eax,ebx
  4069df:	jne    0x4069ee
  4069e1:	jmp    0x406a2f
  4069e3:	mov    r8d,DWORD PTR [rax]
  4069e6:	cmp    r8d,ebx
  4069e9:	je     0x406a10
  4069eb:	mov    rdx,rax
  4069ee:	mov    rax,QWORD PTR [rdx+0x10]
  4069f2:	test   rax,rax
  4069f5:	jne    0x4069e3
  4069f7:	lea    rcx,[rip+0x7fe2]        # 0x40e9e0
  4069fe:	call   QWORD PTR [rip+0x8a20]        # 0x40f424
  406a04:	xor    eax,eax
  406a06:	add    rsp,0x20
  406a0a:	pop    rbx
  406a0b:	ret    
  406a0c:	nop    DWORD PTR [rax+0x0]
  406a10:	mov    rcx,rax
  406a13:	mov    rax,QWORD PTR [rax+0x10]
  406a17:	mov    QWORD PTR [rdx+0x10],rax
  406a1b:	call   0x407bd0
  406a20:	lea    rcx,[rip+0x7fb9]        # 0x40e9e0
  406a27:	call   QWORD PTR [rip+0x89f7]        # 0x40f424
  406a2d:	jmp    0x406a04
  406a2f:	mov    rax,QWORD PTR [rdx+0x10]
  406a33:	mov    rcx,rdx
  406a36:	mov    QWORD PTR [rip+0x7f83],rax        # 0x40e9c0
  406a3d:	jmp    0x406a1b
  406a3f:	nop
  406a40:	push   rbx
  406a41:	sub    rsp,0x20
  406a45:	cmp    edx,0x1
  406a48:	je     0x406ae0
  406a4e:	jb     0x406a80
  406a50:	cmp    edx,0x2
  406a53:	je     0x406a70
  406a55:	cmp    edx,0x3
  406a58:	jne    0x406a75
  406a5a:	mov    eax,DWORD PTR [rip+0x7f68]        # 0x40e9c8
  406a60:	test   eax,eax
  406a62:	je     0x406a75
  406a64:	call   0x4068b0
  406a69:	jmp    0x406a75
  406a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a70:	call   0x405f40
  406a75:	mov    eax,0x1
  406a7a:	add    rsp,0x20
  406a7e:	pop    rbx
  406a7f:	ret    
  406a80:	mov    eax,DWORD PTR [rip+0x7f42]        # 0x40e9c8
  406a86:	test   eax,eax
  406a88:	jne    0x406b10
  406a8e:	mov    eax,DWORD PTR [rip+0x7f34]        # 0x40e9c8
  406a94:	cmp    eax,0x1
  406a97:	jne    0x406a75
  406a99:	mov    rcx,QWORD PTR [rip+0x7f20]        # 0x40e9c0
  406aa0:	test   rcx,rcx
  406aa3:	je     0x406ab6
  406aa5:	mov    rbx,QWORD PTR [rcx+0x10]
  406aa9:	call   0x407bd0
  406aae:	test   rbx,rbx
  406ab1:	mov    rcx,rbx
  406ab4:	jne    0x406aa5
  406ab6:	lea    rcx,[rip+0x7f23]        # 0x40e9e0
  406abd:	mov    QWORD PTR [rip+0x7ef8],0x0        # 0x40e9c0
  406ac8:	mov    DWORD PTR [rip+0x7ef6],0x0        # 0x40e9c8
  406ad2:	call   QWORD PTR [rip+0x88fc]        # 0x40f3d4
  406ad8:	jmp    0x406a75
  406ada:	nop    WORD PTR [rax+rax*1+0x0]
  406ae0:	mov    eax,DWORD PTR [rip+0x7ee2]        # 0x40e9c8
  406ae6:	test   eax,eax
  406ae8:	je     0x406b00
  406aea:	mov    eax,0x1
  406aef:	mov    DWORD PTR [rip+0x7ecf],0x1        # 0x40e9c8
  406af9:	add    rsp,0x20
  406afd:	pop    rbx
  406afe:	ret    
  406aff:	nop
  406b00:	lea    rcx,[rip+0x7ed9]        # 0x40e9e0
  406b07:	call   QWORD PTR [rip+0x890f]        # 0x40f41c
  406b0d:	jmp    0x406aea
  406b0f:	nop
  406b10:	call   0x4068b0
  406b15:	jmp    0x406a8e
  406b1a:	nop
  406b1b:	nop
  406b1c:	nop
  406b1d:	nop
  406b1e:	nop
  406b1f:	nop
  406b20:	movsxd rax,DWORD PTR [rcx+0x3c]
  406b24:	add    rcx,rax
  406b27:	xor    eax,eax
  406b29:	cmp    DWORD PTR [rcx],0x4550
  406b2f:	je     0x406b33
  406b31:	repz ret 
  406b33:	xor    eax,eax
  406b35:	cmp    WORD PTR [rcx+0x18],0x20b
  406b3b:	sete   al
  406b3e:	ret    
  406b3f:	nop
  406b40:	cmp    WORD PTR [rcx],0x5a4d
  406b45:	je     0x406b50
  406b47:	xor    eax,eax
  406b49:	ret    
  406b4a:	nop    WORD PTR [rax+rax*1+0x0]
  406b50:	jmp    0x406b20
  406b52:	nop    DWORD PTR [rax+0x0]
  406b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b60:	movsxd rax,DWORD PTR [rcx+0x3c]
  406b64:	add    rcx,rax
  406b67:	movzx  eax,WORD PTR [rcx+0x14]
  406b6b:	lea    rax,[rcx+rax*1+0x18]
  406b70:	movzx  ecx,WORD PTR [rcx+0x6]
  406b74:	test   ecx,ecx
  406b76:	je     0x406ba1
  406b78:	sub    ecx,0x1
  406b7b:	lea    rcx,[rcx+rcx*4]
  406b7f:	lea    r9,[rax+rcx*8+0x28]
  406b84:	mov    r8d,DWORD PTR [rax+0xc]
  406b88:	cmp    r8,rdx
  406b8b:	mov    rcx,r8
  406b8e:	ja     0x406b98
  406b90:	add    ecx,DWORD PTR [rax+0x8]
  406b93:	cmp    rdx,rcx
  406b96:	jb     0x406ba3
  406b98:	add    rax,0x28
  406b9c:	cmp    rax,r9
  406b9f:	jne    0x406b84
  406ba1:	xor    eax,eax
  406ba3:	repz ret 
  406ba5:	nop
  406ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bb0:	push   rdi
  406bb1:	push   rsi
  406bb2:	push   rbx
  406bb3:	sub    rsp,0x20
  406bb7:	mov    rsi,rcx
  406bba:	call   0x407b68
  406bbf:	cmp    rax,0x8
  406bc3:	ja     0x406be0
  406bc5:	mov    rbx,QWORD PTR [rip+0x42d4]        # 0x40aea0
  406bcc:	xor    edi,edi
  406bce:	cmp    WORD PTR [rbx],0x5a4d
  406bd3:	je     0x406bf0
  406bd5:	mov    rax,rdi
  406bd8:	add    rsp,0x20
  406bdc:	pop    rbx
  406bdd:	pop    rsi
  406bde:	pop    rdi
  406bdf:	ret    
  406be0:	xor    edi,edi
  406be2:	mov    rax,rdi
  406be5:	add    rsp,0x20
  406be9:	pop    rbx
  406bea:	pop    rsi
  406beb:	pop    rdi
  406bec:	ret    
  406bed:	nop    DWORD PTR [rax]
  406bf0:	mov    rcx,rbx
  406bf3:	call   0x406b20
  406bf8:	test   eax,eax
  406bfa:	je     0x406bd5
  406bfc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  406c00:	add    rdx,rbx
  406c03:	movzx  eax,WORD PTR [rdx+0x14]
  406c07:	lea    rbx,[rdx+rax*1+0x18]
  406c0c:	movzx  eax,WORD PTR [rdx+0x6]
  406c10:	test   eax,eax
  406c12:	je     0x406bd5
  406c14:	sub    eax,0x1
  406c17:	lea    rax,[rax+rax*4]
  406c1b:	lea    rdi,[rbx+rax*8+0x28]
  406c20:	jmp    0x406c2b
  406c22:	add    rbx,0x28
  406c26:	cmp    rbx,rdi
  406c29:	je     0x406be0
  406c2b:	mov    r8d,0x8
  406c31:	mov    rdx,rsi
  406c34:	mov    rcx,rbx
  406c37:	call   0x407b60
  406c3c:	test   eax,eax
  406c3e:	jne    0x406c22
  406c40:	mov    rdi,rbx
  406c43:	mov    rax,rdi
  406c46:	add    rsp,0x20
  406c4a:	pop    rbx
  406c4b:	pop    rsi
  406c4c:	pop    rdi
  406c4d:	ret    
  406c4e:	xchg   ax,ax
  406c50:	push   rsi
  406c51:	push   rbx
  406c52:	sub    rsp,0x28
  406c56:	mov    rbx,QWORD PTR [rip+0x4243]        # 0x40aea0
  406c5d:	cmp    WORD PTR [rbx],0x5a4d
  406c62:	je     0x406c70
  406c64:	xor    eax,eax
  406c66:	add    rsp,0x28
  406c6a:	pop    rbx
  406c6b:	pop    rsi
  406c6c:	ret    
  406c6d:	nop    DWORD PTR [rax]
  406c70:	mov    rsi,rcx
  406c73:	mov    rcx,rbx
  406c76:	call   0x406b20
  406c7b:	test   eax,eax
  406c7d:	je     0x406c64
  406c7f:	sub    rsi,rbx
  406c82:	mov    rcx,rbx
  406c85:	mov    rdx,rsi
  406c88:	add    rsp,0x28
  406c8c:	pop    rbx
  406c8d:	pop    rsi
  406c8e:	jmp    0x406b60
  406c93:	nop    DWORD PTR [rax]
  406c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ca0:	push   rbx
  406ca1:	sub    rsp,0x20
  406ca5:	mov    rbx,QWORD PTR [rip+0x41f4]        # 0x40aea0
  406cac:	xor    eax,eax
  406cae:	cmp    WORD PTR [rbx],0x5a4d
  406cb3:	je     0x406cc0
  406cb5:	add    rsp,0x20
  406cb9:	pop    rbx
  406cba:	ret    
  406cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  406cc0:	mov    rcx,rbx
  406cc3:	call   0x406b20
  406cc8:	test   eax,eax
  406cca:	je     0x406cb5
  406ccc:	movsxd rax,DWORD PTR [rbx+0x3c]
  406cd0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  406cd5:	add    rsp,0x20
  406cd9:	pop    rbx
  406cda:	ret    
  406cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  406ce0:	push   rdi
  406ce1:	push   rsi
  406ce2:	push   rbx
  406ce3:	sub    rsp,0x20
  406ce7:	mov    rsi,QWORD PTR [rip+0x41b2]        # 0x40aea0
  406cee:	xor    edi,edi
  406cf0:	mov    rbx,rcx
  406cf3:	cmp    WORD PTR [rsi],0x5a4d
  406cf8:	je     0x406d05
  406cfa:	mov    rax,rdi
  406cfd:	add    rsp,0x20
  406d01:	pop    rbx
  406d02:	pop    rsi
  406d03:	pop    rdi
  406d04:	ret    
  406d05:	mov    rcx,rsi
  406d08:	call   0x406b20
  406d0d:	test   eax,eax
  406d0f:	je     0x406cfa
  406d11:	movsxd rax,DWORD PTR [rsi+0x3c]
  406d15:	add    rsi,rax
  406d18:	movzx  eax,WORD PTR [rsi+0x14]
  406d1c:	lea    rdx,[rsi+rax*1+0x18]
  406d21:	movzx  eax,WORD PTR [rsi+0x6]
  406d25:	test   eax,eax
  406d27:	je     0x406cfa
  406d29:	sub    eax,0x1
  406d2c:	lea    rax,[rax+rax*4]
  406d30:	lea    rax,[rdx+rax*8+0x28]
  406d35:	test   BYTE PTR [rdx+0x27],0x20
  406d39:	je     0x406d44
  406d3b:	test   rbx,rbx
  406d3e:	je     0x406d60
  406d40:	sub    rbx,0x1
  406d44:	add    rdx,0x28
  406d48:	cmp    rdx,rax
  406d4b:	jne    0x406d35
  406d4d:	xor    edi,edi
  406d4f:	mov    rax,rdi
  406d52:	add    rsp,0x20
  406d56:	pop    rbx
  406d57:	pop    rsi
  406d58:	pop    rdi
  406d59:	ret    
  406d5a:	nop    WORD PTR [rax+rax*1+0x0]
  406d60:	mov    rdi,rdx
  406d63:	mov    rax,rdi
  406d66:	add    rsp,0x20
  406d6a:	pop    rbx
  406d6b:	pop    rsi
  406d6c:	pop    rdi
  406d6d:	ret    
  406d6e:	xchg   ax,ax
  406d70:	push   rsi
  406d71:	push   rbx
  406d72:	sub    rsp,0x28
  406d76:	mov    rsi,QWORD PTR [rip+0x4123]        # 0x40aea0
  406d7d:	xor    ebx,ebx
  406d7f:	cmp    WORD PTR [rsi],0x5a4d
  406d84:	je     0x406d90
  406d86:	mov    rax,rbx
  406d89:	add    rsp,0x28
  406d8d:	pop    rbx
  406d8e:	pop    rsi
  406d8f:	ret    
  406d90:	mov    rcx,rsi
  406d93:	call   0x406b20
  406d98:	test   eax,eax
  406d9a:	cmovne rbx,rsi
  406d9e:	mov    rax,rbx
  406da1:	add    rsp,0x28
  406da5:	pop    rbx
  406da6:	pop    rsi
  406da7:	ret    
  406da8:	nop    DWORD PTR [rax+rax*1+0x0]
  406db0:	push   rsi
  406db1:	push   rbx
  406db2:	sub    rsp,0x28
  406db6:	mov    rbx,QWORD PTR [rip+0x40e3]        # 0x40aea0
  406dbd:	xor    eax,eax
  406dbf:	cmp    WORD PTR [rbx],0x5a4d
  406dc4:	je     0x406dd0
  406dc6:	add    rsp,0x28
  406dca:	pop    rbx
  406dcb:	pop    rsi
  406dcc:	ret    
  406dcd:	nop    DWORD PTR [rax]
  406dd0:	mov    rsi,rcx
  406dd3:	mov    rcx,rbx
  406dd6:	call   0x406b20
  406ddb:	test   eax,eax
  406ddd:	je     0x406dc6
  406ddf:	sub    rsi,rbx
  406de2:	mov    rcx,rbx
  406de5:	mov    rdx,rsi
  406de8:	call   0x406b60
  406ded:	test   rax,rax
  406df0:	je     0x406e01
  406df2:	mov    eax,DWORD PTR [rax+0x24]
  406df5:	not    eax
  406df7:	shr    eax,0x1f
  406dfa:	add    rsp,0x28
  406dfe:	pop    rbx
  406dff:	pop    rsi
  406e00:	ret    
  406e01:	xor    eax,eax
  406e03:	jmp    0x406dc6
  406e05:	nop
  406e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e10:	push   rbp
  406e11:	push   rdi
  406e12:	push   rsi
  406e13:	push   rbx
  406e14:	sub    rsp,0x28
  406e18:	mov    rdi,QWORD PTR [rip+0x4081]        # 0x40aea0
  406e1f:	xor    ebp,ebp
  406e21:	mov    esi,ecx
  406e23:	cmp    WORD PTR [rdi],0x5a4d
  406e28:	je     0x406e40
  406e2a:	mov    rax,rbp
  406e2d:	add    rsp,0x28
  406e31:	pop    rbx
  406e32:	pop    rsi
  406e33:	pop    rdi
  406e34:	pop    rbp
  406e35:	ret    
  406e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e40:	mov    rcx,rdi
  406e43:	call   0x406b20
  406e48:	test   eax,eax
  406e4a:	je     0x406e2a
  406e4c:	movsxd rax,DWORD PTR [rdi+0x3c]
  406e50:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  406e57:	test   edx,edx
  406e59:	je     0x406e2a
  406e5b:	mov    ebx,edx
  406e5d:	mov    rcx,rdi
  406e60:	mov    rdx,rbx
  406e63:	call   0x406b60
  406e68:	test   rax,rax
  406e6b:	je     0x406e2a
  406e6d:	add    rbx,rdi
  406e70:	mov    rdx,rbx
  406e73:	jne    0x406e87
  406e75:	jmp    0x406e2a
  406e77:	nop    WORD PTR [rax+rax*1+0x0]
  406e80:	sub    esi,0x1
  406e83:	add    rdx,0x14
  406e87:	mov    ecx,DWORD PTR [rdx+0x4]
  406e8a:	test   ecx,ecx
  406e8c:	jne    0x406e95
  406e8e:	mov    eax,DWORD PTR [rdx+0xc]
  406e91:	test   eax,eax
  406e93:	je     0x406eb0
  406e95:	test   esi,esi
  406e97:	jg     0x406e80
  406e99:	mov    ebp,DWORD PTR [rdx+0xc]
  406e9c:	add    rbp,rdi
  406e9f:	mov    rax,rbp
  406ea2:	add    rsp,0x28
  406ea6:	pop    rbx
  406ea7:	pop    rsi
  406ea8:	pop    rdi
  406ea9:	pop    rbp
  406eaa:	ret    
  406eab:	nop    DWORD PTR [rax+rax*1+0x0]
  406eb0:	xor    ebp,ebp
  406eb2:	mov    rax,rbp
  406eb5:	add    rsp,0x28
  406eb9:	pop    rbx
  406eba:	pop    rsi
  406ebb:	pop    rdi
  406ebc:	pop    rbp
  406ebd:	ret    
  406ebe:	nop
  406ebf:	nop
  406ec0:	push   rcx
  406ec1:	push   rax
  406ec2:	cmp    rax,0x1000
  406ec8:	lea    rcx,[rsp+0x18]
  406ecd:	jb     0x406ee8
  406ecf:	sub    rcx,0x1000
  406ed6:	or     QWORD PTR [rcx],0x0
  406eda:	sub    rax,0x1000
  406ee0:	cmp    rax,0x1000
  406ee6:	ja     0x406ecf
  406ee8:	sub    rcx,rax
  406eeb:	or     QWORD PTR [rcx],0x0
  406eef:	pop    rax
  406ef0:	pop    rcx
  406ef1:	ret    
  406ef2:	nop
  406ef3:	nop
  406ef4:	nop
  406ef5:	nop
  406ef6:	nop
  406ef7:	nop
  406ef8:	nop
  406ef9:	nop
  406efa:	nop
  406efb:	nop
  406efc:	nop
  406efd:	nop
  406efe:	nop
  406eff:	nop
  406f00:	push   r13
  406f02:	push   r12
  406f04:	push   rbp
  406f05:	push   rdi
  406f06:	push   rsi
  406f07:	push   rbx
  406f08:	mov    r12d,edx
  406f0b:	mov    ebp,r8d
  406f0e:	mov    edi,edx
  406f10:	sub    r12d,ecx
  406f13:	sub    ebp,edx
  406f15:	mov    eax,r12d
  406f18:	cdq    
  406f19:	idiv   ebp
  406f1b:	test   edx,edx
  406f1d:	mov    r13d,edx
  406f20:	je     0x406fa5
  406f26:	mov    eax,ebp
  406f28:	jmp    0x406f33
  406f2a:	nop    WORD PTR [rax+rax*1+0x0]
  406f30:	mov    r13d,edx
  406f33:	cdq    
  406f34:	idiv   r13d
  406f37:	mov    eax,r13d
  406f3a:	test   edx,edx
  406f3c:	jne    0x406f30
  406f3e:	mov    eax,r8d
  406f41:	sub    eax,ecx
  406f43:	cdq    
  406f44:	idiv   r13d
  406f47:	test   r13d,r13d
  406f4a:	jle    0x406f9c
  406f4c:	movsxd rdx,edi
  406f4f:	xor    esi,esi
  406f51:	lea    rdx,[r9+rdx*8]
  406f55:	test   eax,eax
  406f57:	lea    ecx,[rdi+rsi*1]
  406f5a:	jle    0x406f93
  406f5c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  406f60:	xor    r10d,r10d
  406f63:	mov    r11d,ecx
  406f66:	lea    r8d,[rcx+rbp*1]
  406f6a:	sub    r11d,r12d
  406f6d:	cmp    edi,ecx
  406f6f:	mov    ecx,r11d
  406f72:	cmovg  ecx,r8d
  406f76:	add    r10d,0x1
  406f7a:	movsxd r11,ecx
  406f7d:	cmp    r10d,eax
  406f80:	lea    r8,[r9+r11*8]
  406f84:	mov    r11,QWORD PTR [r8]
  406f87:	mov    QWORD PTR [r8],rbx
  406f8a:	mov    QWORD PTR [rdx+rsi*8],r11
  406f8e:	mov    rbx,r11
  406f91:	jne    0x406f63
  406f93:	add    rsi,0x1
  406f97:	cmp    r13d,esi
  406f9a:	jg     0x406f55
  406f9c:	pop    rbx
  406f9d:	pop    rsi
  406f9e:	pop    rdi
  406f9f:	pop    rbp
  406fa0:	pop    r12
  406fa2:	pop    r13
  406fa4:	ret    
  406fa5:	mov    r13d,ebp
  406fa8:	jmp    0x406f3e
  406faa:	nop    WORD PTR [rax+rax*1+0x0]
  406fb0:	push   rdi
  406fb1:	push   rsi
  406fb2:	push   rbx
  406fb3:	sub    rsp,0x30
  406fb7:	mov    rax,QWORD PTR [rip+0x3ef2]        # 0x40aeb0
  406fbe:	mov    QWORD PTR [rsp+0x58],rdx
  406fc3:	mov    QWORD PTR [rsp+0x60],r8
  406fc8:	lea    rsi,[rsp+0x58]
  406fcd:	mov    QWORD PTR [rsp+0x68],r9
  406fd2:	mov    rbx,rcx
  406fd5:	mov    rax,QWORD PTR [rax]
  406fd8:	mov    QWORD PTR [rsp+0x28],rsi
  406fdd:	mov    rax,QWORD PTR [rax]
  406fe0:	mov    rdi,QWORD PTR [rax]
  406fe3:	call   0x407c60
  406fe8:	lea    rdx,[rip+0x3d11]        # 0x40ad00
  406fef:	lea    rcx,[rax+0x60]
  406ff3:	mov    r8,rdi
  406ff6:	call   0x407be0
  406ffb:	test   rbx,rbx
  406ffe:	je     0x407014
  407000:	call   0x407c60
  407005:	lea    rcx,[rax+0x60]
  407009:	mov    r8,rsi
  40700c:	mov    rdx,rbx
  40700f:	call   0x407b50
  407014:	call   0x407c60
  407019:	lea    rdx,[rax+0x60]
  40701d:	mov    ecx,0xa
  407022:	call   0x407bd8
  407027:	nop
  407028:	add    rsp,0x30
  40702c:	pop    rbx
  40702d:	pop    rsi
  40702e:	pop    rdi
  40702f:	ret    
  407030:	push   r15
  407032:	push   r14
  407034:	push   r13
  407036:	push   r12
  407038:	push   rbp
  407039:	push   rdi
  40703a:	push   rsi
  40703b:	push   rbx
  40703c:	sub    rsp,0x48
  407040:	mov    eax,DWORD PTR [rip+0x2316]        # 0x40935c
  407046:	mov    rbp,QWORD PTR [rip+0x2303]        # 0x409350
  40704d:	mov    QWORD PTR [rsp+0x90],rcx
  407055:	mov    QWORD PTR [rsp+0x98],rdx
  40705d:	mov    edx,0x3d
  407062:	mov    r14,r8
  407065:	mov    QWORD PTR [rsp+0xa8],r9
  40706d:	mov    r13d,DWORD PTR [rsp+0xb0]
  407075:	mov    DWORD PTR [rsp+0x38],eax
  407079:	mov    rcx,rbp
  40707c:	add    eax,0x1
  40707f:	mov    DWORD PTR [rsp+0x3c],eax
  407083:	mov    DWORD PTR [rip+0x22d3],eax        # 0x40935c
  407089:	call   0x407b78
  40708e:	test   rax,rax
  407091:	mov    QWORD PTR [rsp+0x30],rax
  407096:	je     0x407274
  40709c:	mov    rdi,rax
  40709f:	add    rax,0x1
  4070a3:	sub    rdi,rbp
  4070a6:	mov    QWORD PTR [rsp+0x30],rax
  4070ab:	mov    r15,QWORD PTR [r14]
  4070ae:	test   r15,r15
  4070b1:	je     0x4072bb
  4070b7:	lea    rbx,[r14+0x20]
  4070bb:	mov    r12d,0xffffffff
  4070c1:	mov    DWORD PTR [rsp+0x2c],0x0
  4070c9:	xor    esi,esi
  4070cb:	jmp    0x4070e5
  4070cd:	nop    DWORD PTR [rax]
  4070d0:	test   r13d,r13d
  4070d3:	je     0x40710e
  4070d5:	add    rbx,0x20
  4070d9:	mov    r15,QWORD PTR [rbx-0x20]
  4070dd:	add    esi,0x1
  4070e0:	test   r15,r15
  4070e3:	je     0x407150
  4070e5:	mov    r8,rdi
  4070e8:	mov    rdx,r15
  4070eb:	mov    rcx,rbp
  4070ee:	call   0x407b60
  4070f3:	test   eax,eax
  4070f5:	jne    0x4070d5
  4070f7:	mov    rcx,r15
  4070fa:	call   0x407b68
  4070ff:	cmp    rax,rdi
  407102:	je     0x4071fd
  407108:	cmp    rdi,0x1
  40710c:	je     0x4070d0
  40710e:	cmp    r12d,0xffffffff
  407112:	je     0x4071b0
  407118:	movsxd rax,r12d
  40711b:	shl    rax,0x5
  40711f:	add    rax,r14
  407122:	mov    edx,DWORD PTR [rax+0x8]
  407125:	cmp    DWORD PTR [rbx-0x18],edx
  407128:	je     0x4071c0
  40712e:	add    rbx,0x20
  407132:	mov    r15,QWORD PTR [rbx-0x20]
  407136:	add    esi,0x1
  407139:	mov    DWORD PTR [rsp+0x2c],0x1
  407141:	test   r15,r15
  407144:	jne    0x4070e5
  407146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407150:	mov    r9d,DWORD PTR [rsp+0x2c]
  407155:	test   r9d,r9d
  407158:	je     0x4071f0
  40715e:	mov    r8d,DWORD PTR [rip+0x21fb]        # 0x409360
  407165:	test   r8d,r8d
  407168:	je     0x407188
  40716a:	mov    rax,QWORD PTR [rsp+0x98]
  407172:	cmp    BYTE PTR [rax],0x3a
  407175:	je     0x407188
  407177:	lea    rcx,[rip+0x3c12]        # 0x40ad90
  40717e:	mov    r8,rbp
  407181:	mov    edx,edi
  407183:	call   0x406fb0
  407188:	mov    DWORD PTR [rip+0x21c6],0x0        # 0x409358
  407192:	mov    eax,0x3f
  407197:	add    rsp,0x48
  40719b:	pop    rbx
  40719c:	pop    rsi
  40719d:	pop    rdi
  40719e:	pop    rbp
  40719f:	pop    r12
  4071a1:	pop    r13
  4071a3:	pop    r14
  4071a5:	pop    r15
  4071a7:	ret    
  4071a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4071b0:	mov    r12d,esi
  4071b3:	jmp    0x4070d5
  4071b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4071c0:	mov    rdx,QWORD PTR [rax+0x10]
  4071c4:	cmp    QWORD PTR [rbx-0x10],rdx
  4071c8:	jne    0x40712e
  4071ce:	mov    eax,DWORD PTR [rax+0x18]
  4071d1:	cmp    DWORD PTR [rbx-0x8],eax
  4071d4:	mov    eax,0x1
  4071d9:	cmove  eax,DWORD PTR [rsp+0x2c]
  4071de:	mov    DWORD PTR [rsp+0x2c],eax
  4071e2:	jmp    0x4070d5
  4071e7:	nop    WORD PTR [rax+rax*1+0x0]
  4071f0:	cmp    r12d,0xffffffff
  4071f4:	je     0x4072bb
  4071fa:	mov    esi,r12d
  4071fd:	movsxd rax,esi
  407200:	shl    rax,0x5
  407204:	add    r14,rax
  407207:	cmp    QWORD PTR [rsp+0x30],0x0
  40720d:	mov    eax,DWORD PTR [r14+0x8]
  407211:	setne  cl
  407214:	je     0x407284
  407216:	test   eax,eax
  407218:	jne    0x407284
  40721a:	mov    ecx,DWORD PTR [rip+0x2140]        # 0x409360
  407220:	test   ecx,ecx
  407222:	jne    0x407254
  407224:	cmp    QWORD PTR [r14+0x10],0x0
  407229:	je     0x407384
  40722f:	mov    DWORD PTR [rip+0x211f],0x0        # 0x409358
  407239:	mov    rax,QWORD PTR [rsp+0x98]
  407241:	cmp    BYTE PTR [rax],0x3a
  407244:	je     0x407371
  40724a:	mov    eax,0x3f
  40724f:	jmp    0x407197
  407254:	mov    rax,QWORD PTR [rsp+0x98]
  40725c:	cmp    BYTE PTR [rax],0x3a
  40725f:	je     0x407224
  407261:	lea    rcx,[rip+0x3af8]        # 0x40ad60
  407268:	mov    r8,rbp
  40726b:	mov    edx,edi
  40726d:	call   0x406fb0
  407272:	jmp    0x407224
  407274:	mov    rcx,rbp
  407277:	call   0x407b68
  40727c:	mov    rdi,rax
  40727f:	jmp    0x4070ab
  407284:	lea    edx,[rax-0x1]
  407287:	cmp    edx,0x1
  40728a:	jbe    0x4072f7
  40728c:	cmp    QWORD PTR [rsp+0xa8],0x0
  407295:	je     0x4072a1
  407297:	mov    rax,QWORD PTR [rsp+0xa8]
  40729f:	mov    DWORD PTR [rax],esi
  4072a1:	mov    rax,QWORD PTR [r14+0x10]
  4072a5:	test   rax,rax
  4072a8:	je     0x40737b
  4072ae:	mov    edx,DWORD PTR [r14+0x18]
  4072b2:	mov    DWORD PTR [rax],edx
  4072b4:	xor    eax,eax
  4072b6:	jmp    0x407197
  4072bb:	test   r13d,r13d
  4072be:	jne    0x4073d2
  4072c4:	mov    eax,DWORD PTR [rip+0x2096]        # 0x409360
  4072ca:	test   eax,eax
  4072cc:	je     0x407188
  4072d2:	mov    rax,QWORD PTR [rsp+0x98]
  4072da:	cmp    BYTE PTR [rax],0x3a
  4072dd:	je     0x407188
  4072e3:	lea    rcx,[rip+0x3a36]        # 0x40ad20
  4072ea:	mov    rdx,rbp
  4072ed:	call   0x406fb0
  4072f2:	jmp    0x407188
  4072f7:	test   cl,cl
  4072f9:	je     0x407393
  4072ff:	mov    rdx,QWORD PTR [rsp+0x30]
  407304:	cmp    eax,0x1
  407307:	mov    QWORD PTR [rip+0x7782],rdx        # 0x40ea90
  40730e:	jne    0x40728c
  407314:	mov    r15,QWORD PTR [rsp+0x30]
  407319:	test   r15,r15
  40731c:	jne    0x40728c
  407322:	mov    edx,DWORD PTR [rip+0x2038]        # 0x409360
  407328:	test   edx,edx
  40732a:	je     0x407348
  40732c:	mov    rax,QWORD PTR [rsp+0x98]
  407334:	cmp    BYTE PTR [rax],0x3a
  407337:	je     0x407348
  407339:	lea    rcx,[rip+0x3a80]        # 0x40adc0
  407340:	mov    rdx,rbp
  407343:	call   0x406fb0
  407348:	cmp    QWORD PTR [r14+0x10],0x0
  40734d:	je     0x4073c6
  40734f:	mov    DWORD PTR [rip+0x1fff],0x0        # 0x409358
  407359:	mov    rax,QWORD PTR [rsp+0x98]
  407361:	sub    DWORD PTR [rip+0x1ff4],0x1        # 0x40935c
  407368:	cmp    BYTE PTR [rax],0x3a
  40736b:	jne    0x40724a
  407371:	mov    eax,0x3a
  407376:	jmp    0x407197
  40737b:	mov    eax,DWORD PTR [r14+0x18]
  40737f:	jmp    0x407197
  407384:	mov    eax,DWORD PTR [r14+0x18]
  407388:	mov    DWORD PTR [rip+0x1fca],eax        # 0x409358
  40738e:	jmp    0x407239
  407393:	cmp    eax,0x1
  407396:	jne    0x40728c
  40739c:	mov    eax,DWORD PTR [rsp+0x38]
  4073a0:	mov    rdx,QWORD PTR [rsp+0x90]
  4073a8:	add    eax,0x2
  4073ab:	mov    DWORD PTR [rip+0x1fab],eax        # 0x40935c
  4073b1:	movsxd rax,DWORD PTR [rsp+0x3c]
  4073b6:	mov    r15,QWORD PTR [rdx+rax*8]
  4073ba:	mov    QWORD PTR [rip+0x76cf],r15        # 0x40ea90
  4073c1:	jmp    0x407319
  4073c6:	mov    eax,DWORD PTR [r14+0x18]
  4073ca:	mov    DWORD PTR [rip+0x1f88],eax        # 0x409358
  4073d0:	jmp    0x407359
  4073d2:	mov    eax,DWORD PTR [rsp+0x38]
  4073d6:	mov    DWORD PTR [rip+0x1f80],eax        # 0x40935c
  4073dc:	mov    eax,0xffffffff
  4073e1:	jmp    0x407197
  4073e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073f0:	push   r15
  4073f2:	push   r14
  4073f4:	push   r13
  4073f6:	push   r12
  4073f8:	push   rbp
  4073f9:	push   rdi
  4073fa:	push   rsi
  4073fb:	push   rbx
  4073fc:	sub    rsp,0x38
  407400:	test   r8,r8
  407403:	mov    edi,ecx
  407405:	mov    r15,rdx
  407408:	mov    QWORD PTR [rsp+0x90],r8
  407410:	mov    QWORD PTR [rsp+0x98],r9
  407418:	je     0x4076ee
  40741e:	mov    r9d,DWORD PTR [rip+0x1f37]        # 0x40935c
  407425:	test   r9d,r9d
  407428:	je     0x407680
  40742e:	cmp    DWORD PTR [rip+0x1f0b],0xffffffff        # 0x409340
  407435:	je     0x4075f4
  40743b:	mov    edx,DWORD PTR [rip+0x7657]        # 0x40ea98
  407441:	test   edx,edx
  407443:	jne    0x4075f4
  407449:	mov    rax,QWORD PTR [rsp+0x90]
  407451:	movzx  eax,BYTE PTR [rax]
  407454:	cmp    al,0x2d
  407456:	je     0x407628
  40745c:	cmp    al,0x2b
  40745e:	je     0x407704
  407464:	mov    r8d,DWORD PTR [rip+0x1ed5]        # 0x409340
  40746b:	test   r8d,r8d
  40746e:	jne    0x407704
  407474:	sub    eax,0x2b
  407477:	test   al,0xfd
  407479:	je     0x407630
  40747f:	test   edx,edx
  407481:	mov    QWORD PTR [rip+0x7604],0x0        # 0x40ea90
  40748c:	jne    0x407660
  407492:	mov    r14d,DWORD PTR [rsp+0xa8]
  40749a:	mov    ebp,DWORD PTR [rsp+0xa8]
  4074a1:	and    r14d,0x2
  4074a5:	and    ebp,0x1
  4074a8:	jmp    0x40752e
  4074ad:	nop    DWORD PTR [rax]
  4074b0:	lea    rax,[rip+0x385e]        # 0x40ad15
  4074b7:	test   r14d,r14d
  4074ba:	mov    edx,r14d
  4074bd:	mov    QWORD PTR [rip+0x1e8c],rax        # 0x409350
  4074c4:	jne    0x4077d0
  4074ca:	test   ebp,ebp
  4074cc:	je     0x4076ee
  4074d2:	mov    r12d,DWORD PTR [rip+0x1e6f]        # 0x409348
  4074d9:	cmp    r12d,0xffffffff
  4074dd:	je     0x407650
  4074e3:	mov    r13d,DWORD PTR [rip+0x1e5a]        # 0x409344
  4074ea:	cmp    r13d,0xffffffff
  4074ee:	je     0x407525
  4074f0:	mov    edx,r13d
  4074f3:	mov    r9,r15
  4074f6:	mov    r8d,ebx
  4074f9:	mov    ecx,r12d
  4074fc:	call   0x406f00
  407501:	mov    esi,DWORD PTR [rip+0x1e55]        # 0x40935c
  407507:	mov    eax,r12d
  40750a:	mov    edx,DWORD PTR [rip+0x7588]        # 0x40ea98
  407510:	sub    eax,r13d
  407513:	mov    DWORD PTR [rip+0x1e27],0xffffffff        # 0x409344
  40751d:	add    eax,esi
  40751f:	mov    DWORD PTR [rip+0x1e23],eax        # 0x409348
  407525:	add    esi,0x1
  407528:	mov    DWORD PTR [rip+0x1e2e],esi        # 0x40935c
  40752e:	test   edx,edx
  407530:	jne    0x407544
  407532:	mov    rsi,QWORD PTR [rip+0x1e17]        # 0x409350
  407539:	movzx  eax,BYTE PTR [rsi]
  40753c:	test   al,al
  40753e:	jne    0x40773e
  407544:	movsxd rbx,DWORD PTR [rip+0x1e11]        # 0x40935c
  40754b:	mov    DWORD PTR [rip+0x7543],0x0        # 0x40ea98
  407555:	cmp    ebx,edi
  407557:	mov    esi,ebx
  407559:	jge    0x4076a0
  40755f:	movsxd rax,ebx
  407562:	mov    r13,QWORD PTR [r15+rax*8]
  407566:	cmp    BYTE PTR [r13+0x0],0x2d
  40756b:	mov    QWORD PTR [rip+0x1dde],r13        # 0x409350
  407572:	jne    0x4074b0
  407578:	movzx  eax,BYTE PTR [r13+0x1]
  40757d:	test   al,al
  40757f:	jne    0x407711
  407585:	mov    rcx,QWORD PTR [rsp+0x90]
  40758d:	mov    edx,0x2d
  407592:	call   0x407b78
  407597:	test   rax,rax
  40759a:	je     0x4074b0
  4075a0:	cmp    DWORD PTR [rip+0x1da1],0xffffffff        # 0x409348
  4075a7:	mov    rsi,r13
  4075aa:	je     0x4075c4
  4075ac:	cmp    DWORD PTR [rip+0x1d91],0xffffffff        # 0x409344
  4075b3:	mov    eax,0x2d
  4075b8:	jne    0x40773e
  4075be:	mov    DWORD PTR [rip+0x1d80],ebx        # 0x409344
  4075c4:	cmp    QWORD PTR [rsp+0x98],0x0
  4075cd:	je     0x4079bc
  4075d3:	cmp    rsi,QWORD PTR [r15+rbx*8]
  4075d7:	mov    eax,0x2d
  4075dc:	je     0x40780e
  4075e2:	add    rsi,0x1
  4075e6:	xor    edx,edx
  4075e8:	mov    QWORD PTR [rip+0x1d61],rsi        # 0x409350
  4075ef:	jmp    0x407792
  4075f4:	lea    rcx,[rip+0x370a]        # 0x40ad05
  4075fb:	call   0x407bb8
  407600:	test   rax,rax
  407603:	mov    edx,DWORD PTR [rip+0x748f]        # 0x40ea98
  407609:	setne  al
  40760c:	movzx  eax,al
  40760f:	mov    DWORD PTR [rip+0x1d2b],eax        # 0x409340
  407615:	mov    rax,QWORD PTR [rsp+0x90]
  40761d:	movzx  eax,BYTE PTR [rax]
  407620:	cmp    al,0x2d
  407622:	jne    0x40745c
  407628:	or     DWORD PTR [rsp+0xa8],0x2
  407630:	add    QWORD PTR [rsp+0x90],0x1
  407639:	test   edx,edx
  40763b:	mov    QWORD PTR [rip+0x744a],0x0        # 0x40ea90
  407646:	je     0x407492
  40764c:	jmp    0x407660
  40764e:	xchg   ax,ax
  407650:	mov    DWORD PTR [rip+0x1cf2],ebx        # 0x409348
  407656:	jmp    0x407525
  40765b:	nop    DWORD PTR [rax+rax*1+0x0]
  407660:	mov    DWORD PTR [rip+0x1cda],0xffffffff        # 0x409344
  40766a:	mov    DWORD PTR [rip+0x1cd4],0xffffffff        # 0x409348
  407674:	jmp    0x407492
  407679:	nop    DWORD PTR [rax+0x0]
  407680:	mov    DWORD PTR [rip+0x740e],0x1        # 0x40ea98
  40768a:	mov    DWORD PTR [rip+0x1cc8],0x1        # 0x40935c
  407694:	jmp    0x40742e
  407699:	nop    DWORD PTR [rax+0x0]
  4076a0:	mov    esi,DWORD PTR [rip+0x1c9e]        # 0x409344
  4076a6:	lea    rax,[rip+0x3668]        # 0x40ad15
  4076ad:	mov    QWORD PTR [rip+0x1c9c],rax        # 0x409350
  4076b4:	cmp    esi,0xffffffff
  4076b7:	je     0x4077ea
  4076bd:	mov    edi,DWORD PTR [rip+0x1c85]        # 0x409348
  4076c3:	mov    r9,r15
  4076c6:	mov    r8d,ebx
  4076c9:	mov    edx,esi
  4076cb:	mov    ecx,edi
  4076cd:	sub    edi,esi
  4076cf:	call   0x406f00
  4076d4:	add    DWORD PTR [rip+0x1c82],edi        # 0x40935c
  4076da:	mov    DWORD PTR [rip+0x1c60],0xffffffff        # 0x409344
  4076e4:	mov    DWORD PTR [rip+0x1c5a],0xffffffff        # 0x409348
  4076ee:	mov    eax,0xffffffff
  4076f3:	add    rsp,0x38
  4076f7:	pop    rbx
  4076f8:	pop    rsi
  4076f9:	pop    rdi
  4076fa:	pop    rbp
  4076fb:	pop    r12
  4076fd:	pop    r13
  4076ff:	pop    r14
  407701:	pop    r15
  407703:	ret    
  407704:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  40770c:	jmp    0x407474
  407711:	mov    ebp,DWORD PTR [rip+0x1c31]        # 0x409348
  407717:	cmp    ebp,0xffffffff
  40771a:	je     0x40772b
  40771c:	cmp    DWORD PTR [rip+0x1c21],0xffffffff        # 0x409344
  407723:	jne    0x40772b
  407725:	mov    DWORD PTR [rip+0x1c19],ebx        # 0x409344
  40772b:	lea    rsi,[r13+0x1]
  40772f:	cmp    al,0x2d
  407731:	mov    QWORD PTR [rip+0x1c18],rsi        # 0x409350
  407738:	je     0x4078ef
  40773e:	cmp    QWORD PTR [rsp+0x98],0x0
  407747:	je     0x40780e
  40774d:	movsxd rdx,DWORD PTR [rip+0x1c08]        # 0x40935c
  407754:	cmp    rsi,QWORD PTR [r15+rdx*8]
  407758:	je     0x40780e
  40775e:	cmp    al,0x2d
  407760:	je     0x4075e2
  407766:	test   BYTE PTR [rsp+0xa8],0x4
  40776e:	je     0x40780e
  407774:	xor    edx,edx
  407776:	cmp    al,0x3a
  407778:	je     0x407792
  40777a:	mov    rcx,QWORD PTR [rsp+0x90]
  407782:	movsx  edx,al
  407785:	call   0x407b78
  40778a:	xor    edx,edx
  40778c:	test   rax,rax
  40778f:	setne  dl
  407792:	mov    DWORD PTR [rsp+0x20],edx
  407796:	mov    r9,QWORD PTR [rsp+0xa0]
  40779e:	mov    rcx,r15
  4077a1:	mov    r8,QWORD PTR [rsp+0x98]
  4077a9:	mov    rdx,QWORD PTR [rsp+0x90]
  4077b1:	call   0x407030
  4077b6:	cmp    eax,0xffffffff
  4077b9:	je     0x407804
  4077bb:	lea    rcx,[rip+0x3553]        # 0x40ad15
  4077c2:	mov    QWORD PTR [rip+0x1b87],rcx        # 0x409350
  4077c9:	jmp    0x4076f3
  4077ce:	xchg   ax,ax
  4077d0:	add    ebx,0x1
  4077d3:	mov    QWORD PTR [rip+0x72b6],r13        # 0x40ea90
  4077da:	mov    eax,0x1
  4077df:	mov    DWORD PTR [rip+0x1b77],ebx        # 0x40935c
  4077e5:	jmp    0x4076f3
  4077ea:	mov    eax,DWORD PTR [rip+0x1b58]        # 0x409348
  4077f0:	cmp    eax,0xffffffff
  4077f3:	je     0x4076da
  4077f9:	mov    DWORD PTR [rip+0x1b5d],eax        # 0x40935c
  4077ff:	jmp    0x4076da
  407804:	mov    rsi,QWORD PTR [rip+0x1b45]        # 0x409350
  40780b:	movzx  eax,BYTE PTR [rsi]
  40780e:	lea    rbp,[rsi+0x1]
  407812:	movsx  ebx,al
  407815:	cmp    ebx,0x3a
  407818:	mov    QWORD PTR [rip+0x1b31],rbp        # 0x409350
  40781f:	je     0x407884
  407821:	cmp    ebx,0x2d
  407824:	je     0x4079c7
  40782a:	mov    rcx,QWORD PTR [rsp+0x90]
  407832:	mov    edx,ebx
  407834:	call   0x407b78
  407839:	test   rax,rax
  40783c:	je     0x407884
  40783e:	cmp    ebx,0x57
  407841:	jne    0x4078e6
  407847:	cmp    QWORD PTR [rsp+0x98],0x0
  407850:	je     0x4078e6
  407856:	movzx  edx,BYTE PTR [rax+0x1]
  40785a:	cmp    dl,0x3b
  40785d:	je     0x407940
  407863:	cmp    dl,0x3a
  407866:	je     0x4079db
  40786c:	cmp    BYTE PTR [rsi+0x1],0x0
  407870:	mov    eax,ebx
  407872:	jne    0x4076f3
  407878:	add    DWORD PTR [rip+0x1add],0x1        # 0x40935c
  40787f:	jmp    0x4076f3
  407884:	cmp    BYTE PTR [rsi+0x1],0x0
  407888:	jne    0x407891
  40788a:	add    DWORD PTR [rip+0x1acb],0x1        # 0x40935c
  407891:	mov    ecx,DWORD PTR [rip+0x1ac9]        # 0x409360
  407897:	test   ecx,ecx
  407899:	je     0x4078b6
  40789b:	mov    rax,QWORD PTR [rsp+0x90]
  4078a3:	cmp    BYTE PTR [rax],0x3a
  4078a6:	je     0x4078b6
  4078a8:	lea    rcx,[rip+0x3491]        # 0x40ad40
  4078af:	mov    edx,ebx
  4078b1:	call   0x406fb0
  4078b6:	mov    DWORD PTR [rip+0x1a9c],ebx        # 0x409358
  4078bc:	mov    eax,0x3f
  4078c1:	jmp    0x4076f3
  4078c6:	mov    rcx,QWORD PTR [rsp+0x90]
  4078ce:	mov    edx,0x2d
  4078d3:	call   0x407b78
  4078d8:	test   rax,rax
  4078db:	je     0x4076ee
  4078e1:	mov    ebx,0x2d
  4078e6:	movzx  edx,BYTE PTR [rax+0x1]
  4078ea:	jmp    0x407863
  4078ef:	cmp    BYTE PTR [r13+0x2],0x0
  4078f4:	jne    0x4075c4
  4078fa:	mov    esi,DWORD PTR [rip+0x1a44]        # 0x409344
  407900:	lea    r8d,[rbx+0x1]
  407904:	lea    rax,[rip+0x340a]        # 0x40ad15
  40790b:	mov    DWORD PTR [rip+0x1a4a],r8d        # 0x40935c
  407912:	mov    QWORD PTR [rip+0x1a37],rax        # 0x409350
  407919:	cmp    esi,0xffffffff
  40791c:	je     0x4076da
  407922:	mov    ecx,ebp
  407924:	mov    r9,r15
  407927:	mov    edx,esi
  407929:	call   0x406f00
  40792e:	sub    ebp,esi
  407930:	add    DWORD PTR [rip+0x1a26],ebp        # 0x40935c
  407936:	jmp    0x4076da
  40793b:	nop    DWORD PTR [rax+rax*1+0x0]
  407940:	cmp    BYTE PTR [rsi+0x1],0x0
  407944:	jne    0x407a95
  40794a:	mov    eax,DWORD PTR [rip+0x1a0c]        # 0x40935c
  407950:	add    eax,0x1
  407953:	cmp    edi,eax
  407955:	mov    DWORD PTR [rip+0x1a01],eax        # 0x40935c
  40795b:	jg     0x407a88
  407961:	mov    edx,DWORD PTR [rip+0x19f9]        # 0x409360
  407967:	lea    rax,[rip+0x33a7]        # 0x40ad15
  40796e:	mov    QWORD PTR [rip+0x19db],rax        # 0x409350
  407975:	test   edx,edx
  407977:	je     0x407997
  407979:	mov    rax,QWORD PTR [rsp+0x90]
  407981:	cmp    BYTE PTR [rax],0x3a
  407984:	je     0x407997
  407986:	lea    rcx,[rip+0x3473]        # 0x40ae00
  40798d:	mov    edx,0x57
  407992:	call   0x406fb0
  407997:	mov    rax,QWORD PTR [rsp+0x90]
  40799f:	mov    DWORD PTR [rip+0x19af],0x57        # 0x409358
  4079a9:	cmp    BYTE PTR [rax],0x3a
  4079ac:	je     0x407a7e
  4079b2:	mov    eax,0x3f
  4079b7:	jmp    0x4076f3
  4079bc:	lea    rbp,[rsi+0x1]
  4079c0:	mov    QWORD PTR [rip+0x1989],rbp        # 0x409350
  4079c7:	cmp    BYTE PTR [rsi+0x1],0x0
  4079cb:	je     0x4078c6
  4079d1:	mov    ebx,0x2d
  4079d6:	jmp    0x407891
  4079db:	mov    QWORD PTR [rip+0x70aa],0x0        # 0x40ea90
  4079e6:	cmp    BYTE PTR [rsi+0x1],0x0
  4079ea:	je     0x407a17
  4079ec:	mov    eax,DWORD PTR [rip+0x196a]        # 0x40935c
  4079f2:	mov    QWORD PTR [rip+0x7097],rbp        # 0x40ea90
  4079f9:	lea    rcx,[rip+0x3315]        # 0x40ad15
  407a00:	add    eax,0x1
  407a03:	mov    DWORD PTR [rip+0x1953],eax        # 0x40935c
  407a09:	mov    eax,ebx
  407a0b:	mov    QWORD PTR [rip+0x193e],rcx        # 0x409350
  407a12:	jmp    0x4076f3
  407a17:	cmp    BYTE PTR [rax+0x2],0x3a
  407a1b:	mov    eax,DWORD PTR [rip+0x193b]        # 0x40935c
  407a21:	je     0x4079f9
  407a23:	add    eax,0x1
  407a26:	cmp    edi,eax
  407a28:	mov    DWORD PTR [rip+0x192e],eax        # 0x40935c
  407a2e:	jg     0x407ac2
  407a34:	lea    rax,[rip+0x32da]        # 0x40ad15
  407a3b:	mov    QWORD PTR [rip+0x190e],rax        # 0x409350
  407a42:	mov    eax,DWORD PTR [rip+0x1918]        # 0x409360
  407a48:	test   eax,eax
  407a4a:	je     0x407a67
  407a4c:	mov    rax,QWORD PTR [rsp+0x90]
  407a54:	cmp    BYTE PTR [rax],0x3a
  407a57:	je     0x407a67
  407a59:	lea    rcx,[rip+0x33a0]        # 0x40ae00
  407a60:	mov    edx,ebx
  407a62:	call   0x406fb0
  407a67:	mov    rax,QWORD PTR [rsp+0x90]
  407a6f:	mov    DWORD PTR [rip+0x18e3],ebx        # 0x409358
  407a75:	cmp    BYTE PTR [rax],0x3a
  407a78:	jne    0x4079b2
  407a7e:	mov    eax,0x3a
  407a83:	jmp    0x4076f3
  407a88:	cdqe   
  407a8a:	mov    rax,QWORD PTR [r15+rax*8]
  407a8e:	mov    QWORD PTR [rip+0x18bb],rax        # 0x409350
  407a95:	mov    r9,QWORD PTR [rsp+0xa0]
  407a9d:	mov    r8,QWORD PTR [rsp+0x98]
  407aa5:	mov    rcx,r15
  407aa8:	mov    rdx,QWORD PTR [rsp+0x90]
  407ab0:	mov    DWORD PTR [rsp+0x20],0x0
  407ab8:	call   0x407030
  407abd:	jmp    0x4077bb
  407ac2:	movsxd rdx,eax
  407ac5:	mov    rdx,QWORD PTR [r15+rdx*8]
  407ac9:	mov    QWORD PTR [rip+0x6fc0],rdx        # 0x40ea90
  407ad0:	jmp    0x4079f9
  407ad5:	nop
  407ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ae0:	sub    rsp,0x38
  407ae4:	xor    r9d,r9d
  407ae7:	mov    DWORD PTR [rsp+0x28],0x0
  407aef:	mov    QWORD PTR [rsp+0x20],0x0
  407af8:	call   0x4073f0
  407afd:	add    rsp,0x38
  407b01:	ret    
  407b02:	nop    DWORD PTR [rax+0x0]
  407b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b10:	sub    rsp,0x38
  407b14:	mov    rax,QWORD PTR [rsp+0x60]
  407b19:	mov    DWORD PTR [rsp+0x28],0x1
  407b21:	mov    QWORD PTR [rsp+0x20],rax
  407b26:	call   0x4073f0
  407b2b:	add    rsp,0x38
  407b2f:	ret    
  407b30:	sub    rsp,0x38
  407b34:	mov    rax,QWORD PTR [rsp+0x60]
  407b39:	mov    DWORD PTR [rsp+0x28],0x5
  407b41:	mov    QWORD PTR [rsp+0x20],rax
  407b46:	call   0x4073f0
  407b4b:	add    rsp,0x38
  407b4f:	ret    
  407b50:	jmp    QWORD PTR [rip+0x7a86]        # 0x40f5dc
  407b56:	nop
  407b57:	nop
  407b58:	jmp    QWORD PTR [rip+0x7a76]        # 0x40f5d4
  407b5e:	nop
  407b5f:	nop
  407b60:	jmp    QWORD PTR [rip+0x7a66]        # 0x40f5cc
  407b66:	nop
  407b67:	nop
  407b68:	jmp    QWORD PTR [rip+0x7a56]        # 0x40f5c4
  407b6e:	nop
  407b6f:	nop
  407b70:	jmp    QWORD PTR [rip+0x7a46]        # 0x40f5bc
  407b76:	nop
  407b77:	nop
  407b78:	jmp    QWORD PTR [rip+0x7a36]        # 0x40f5b4
  407b7e:	nop
  407b7f:	nop
  407b80:	jmp    QWORD PTR [rip+0x7a26]        # 0x40f5ac
  407b86:	nop
  407b87:	nop
  407b88:	jmp    QWORD PTR [rip+0x7a16]        # 0x40f5a4
  407b8e:	nop
  407b8f:	nop
  407b90:	jmp    QWORD PTR [rip+0x7a06]        # 0x40f59c
  407b96:	nop
  407b97:	nop
  407b98:	jmp    QWORD PTR [rip+0x79f6]        # 0x40f594
  407b9e:	nop
  407b9f:	nop
  407ba0:	jmp    QWORD PTR [rip+0x79e6]        # 0x40f58c
  407ba6:	nop
  407ba7:	nop
  407ba8:	jmp    QWORD PTR [rip+0x79d6]        # 0x40f584
  407bae:	nop
  407baf:	nop
  407bb0:	jmp    QWORD PTR [rip+0x79c6]        # 0x40f57c
  407bb6:	nop
  407bb7:	nop
  407bb8:	jmp    QWORD PTR [rip+0x79b6]        # 0x40f574
  407bbe:	nop
  407bbf:	nop
  407bc0:	jmp    QWORD PTR [rip+0x79a6]        # 0x40f56c
  407bc6:	nop
  407bc7:	nop
  407bc8:	jmp    QWORD PTR [rip+0x7996]        # 0x40f564
  407bce:	nop
  407bcf:	nop
  407bd0:	jmp    QWORD PTR [rip+0x7986]        # 0x40f55c
  407bd6:	nop
  407bd7:	nop
  407bd8:	jmp    QWORD PTR [rip+0x7976]        # 0x40f554
  407bde:	nop
  407bdf:	nop
  407be0:	jmp    QWORD PTR [rip+0x7966]        # 0x40f54c
  407be6:	nop
  407be7:	nop
  407be8:	jmp    QWORD PTR [rip+0x7956]        # 0x40f544
  407bee:	nop
  407bef:	nop
  407bf0:	jmp    QWORD PTR [rip+0x7946]        # 0x40f53c
  407bf6:	nop
  407bf7:	nop
  407bf8:	jmp    QWORD PTR [rip+0x7936]        # 0x40f534
  407bfe:	nop
  407bff:	nop
  407c00:	jmp    QWORD PTR [rip+0x7926]        # 0x40f52c
  407c06:	nop
  407c07:	nop
  407c08:	jmp    QWORD PTR [rip+0x7916]        # 0x40f524
  407c0e:	nop
  407c0f:	nop
  407c10:	jmp    QWORD PTR [rip+0x7906]        # 0x40f51c
  407c16:	nop
  407c17:	nop
  407c18:	jmp    QWORD PTR [rip+0x78f6]        # 0x40f514
  407c1e:	nop
  407c1f:	nop
  407c20:	jmp    QWORD PTR [rip+0x78e6]        # 0x40f50c
  407c26:	nop
  407c27:	nop
  407c28:	jmp    QWORD PTR [rip+0x78d6]        # 0x40f504
  407c2e:	nop
  407c2f:	nop
  407c30:	jmp    QWORD PTR [rip+0x78c6]        # 0x40f4fc
  407c36:	nop
  407c37:	nop
  407c38:	jmp    QWORD PTR [rip+0x78ae]        # 0x40f4ec
  407c3e:	nop
  407c3f:	nop
  407c40:	jmp    QWORD PTR [rip+0x789e]        # 0x40f4e4
  407c46:	nop
  407c47:	nop
  407c48:	jmp    QWORD PTR [rip+0x7886]        # 0x40f4d4
  407c4e:	nop
  407c4f:	nop
  407c50:	jmp    QWORD PTR [rip+0x7876]        # 0x40f4cc
  407c56:	nop
  407c57:	nop
  407c58:	jmp    QWORD PTR [rip+0x7866]        # 0x40f4c4
  407c5e:	nop
  407c5f:	nop
  407c60:	jmp    QWORD PTR [rip+0x7856]        # 0x40f4bc
  407c66:	nop
  407c67:	nop
  407c68:	jmp    QWORD PTR [rip+0x783e]        # 0x40f4ac
  407c6e:	nop
  407c6f:	nop
  407c70:	jmp    QWORD PTR [rip+0x782e]        # 0x40f4a4
  407c76:	nop
  407c77:	nop
  407c78:	jmp    QWORD PTR [rip+0x7816]        # 0x40f494
  407c7e:	nop
  407c7f:	nop
  407c80:	mov    rax,QWORD PTR [rip+0x6da9]        # 0x40ea30
  407c87:	ret    
  407c88:	nop    DWORD PTR [rax+rax*1+0x0]
  407c90:	mov    rax,rcx
  407c93:	xchg   QWORD PTR [rip+0x6d96],rax        # 0x40ea30
  407c9a:	ret    
  407c9b:	nop
  407c9c:	nop
  407c9d:	nop
  407c9e:	nop
  407c9f:	nop
  407ca0:	jmp    QWORD PTR [rip+0x77de]        # 0x40f484
  407ca6:	nop
  407ca7:	nop
  407ca8:	jmp    QWORD PTR [rip+0x77ce]        # 0x40f47c
  407cae:	nop
  407caf:	nop
  407cb0:	jmp    QWORD PTR [rip+0x77be]        # 0x40f474
  407cb6:	nop
  407cb7:	nop
  407cb8:	jmp    QWORD PTR [rip+0x77ae]        # 0x40f46c
  407cbe:	nop
  407cbf:	nop
  407cc0:	jmp    QWORD PTR [rip+0x779e]        # 0x40f464
  407cc6:	nop
  407cc7:	nop
  407cc8:	jmp    QWORD PTR [rip+0x778e]        # 0x40f45c
  407cce:	nop
  407ccf:	nop
  407cd0:	jmp    QWORD PTR [rip+0x777e]        # 0x40f454
  407cd6:	nop
  407cd7:	nop
  407cd8:	jmp    QWORD PTR [rip+0x776e]        # 0x40f44c
  407cde:	nop
  407cdf:	nop
  407ce0:	jmp    QWORD PTR [rip+0x775e]        # 0x40f444
  407ce6:	nop
  407ce7:	nop
  407ce8:	jmp    QWORD PTR [rip+0x774e]        # 0x40f43c
  407cee:	nop
  407cef:	nop
  407cf0:	jmp    QWORD PTR [rip+0x773e]        # 0x40f434
  407cf6:	nop
  407cf7:	nop
  407cf8:	jmp    QWORD PTR [rip+0x772e]        # 0x40f42c
  407cfe:	nop
  407cff:	nop
  407d00:	jmp    QWORD PTR [rip+0x771e]        # 0x40f424
  407d06:	nop
  407d07:	nop
  407d08:	jmp    QWORD PTR [rip+0x770e]        # 0x40f41c
  407d0e:	nop
  407d0f:	nop
  407d10:	jmp    QWORD PTR [rip+0x76fe]        # 0x40f414
  407d16:	nop
  407d17:	nop
  407d18:	jmp    QWORD PTR [rip+0x76ee]        # 0x40f40c
  407d1e:	nop
  407d1f:	nop
  407d20:	jmp    QWORD PTR [rip+0x76de]        # 0x40f404
  407d26:	nop
  407d27:	nop
  407d28:	jmp    QWORD PTR [rip+0x76ce]        # 0x40f3fc
  407d2e:	nop
  407d2f:	nop
  407d30:	jmp    QWORD PTR [rip+0x76be]        # 0x40f3f4
  407d36:	nop
  407d37:	nop
  407d38:	jmp    QWORD PTR [rip+0x76ae]        # 0x40f3ec
  407d3e:	nop
  407d3f:	nop
  407d40:	jmp    QWORD PTR [rip+0x769e]        # 0x40f3e4
  407d46:	nop
  407d47:	nop
  407d48:	jmp    QWORD PTR [rip+0x768e]        # 0x40f3dc
  407d4e:	nop
  407d4f:	nop
  407d50:	jmp    QWORD PTR [rip+0x767e]        # 0x40f3d4
  407d56:	nop
  407d57:	nop
  407d58:	nop    DWORD PTR [rax+rax*1+0x0]
  407d60:	push   r15
  407d62:	push   r14
  407d64:	push   r13
  407d66:	push   r12
  407d68:	push   rbp
  407d69:	push   rdi
  407d6a:	push   rsi
  407d6b:	push   rbx
  407d6c:	sub    rsp,0x88
  407d73:	mov    r13d,0xffffffff
  407d79:	xor    r14d,r14d
  407d7c:	mov    ebx,ecx
  407d7e:	mov    rbp,rdx
  407d81:	lea    r12,[rsp+0x71]
  407d86:	call   0x405b10
  407d8b:	lea    rax,[rsp+0x70]
  407d90:	mov    BYTE PTR [rsp+0x70],0x77
  407d95:	mov    BYTE PTR [rsp+0x71],0x0
  407d9a:	mov    DWORD PTR [rsp+0x2c],0x0
  407da2:	mov    DWORD PTR [rsp+0x34],r13d
  407da7:	mov    r15d,r13d
  407daa:	mov    QWORD PTR [rsp+0x68],rax
  407daf:	mov    rax,QWORD PTR [rip+0x327a]        # 0x40b030
  407db6:	mov    DWORD PTR [rsp+0x30],r13d
  407dbb:	mov    QWORD PTR [rsp+0x40],rax
  407dc0:	mov    QWORD PTR [rsp+0x48],rax
  407dc5:	mov    QWORD PTR [rsp+0x50],rax
  407dca:	mov    QWORD PTR [rsp+0x58],rax
  407dcf:	mov    QWORD PTR [rsp+0x60],rax
  407dd4:	lea    r8,[rip+0x23d5]        # 0x40a1b0
  407ddb:	mov    rdx,rbp
  407dde:	mov    ecx,ebx
  407de0:	call   0x407ae0
  407de5:	cmp    eax,0xffffffff
  407de8:	je     0x4080fc
  407dee:	sub    eax,0x34
  407df1:	cmp    eax,0x43
  407df4:	ja     0x407dd4
  407df6:	lea    rdx,[rip+0x23ff]        # 0x40a1fc
  407dfd:	movsxd rax,DWORD PTR [rdx+rax*4]
  407e01:	add    rdx,rax
  407e04:	jmp    rdx
  407e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e10:	call   0x401530
  407e15:	mov    BYTE PTR [r12],0x38
  407e1a:	mov    BYTE PTR [r12+0x1],0x0
  407e20:	add    r12,0x1
  407e24:	jmp    0x407dd4
  407e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e30:	mov    rax,QWORD PTR [rsp+0x60]
  407e35:	mov    rax,QWORD PTR [rax]
  407e38:	mov    QWORD PTR [rip+0x61f9],rax        # 0x40e038
  407e3f:	jmp    0x407dd4
  407e41:	mov    rax,QWORD PTR [rip+0x31e8]        # 0x40b030
  407e48:	mov    DWORD PTR [rip+0x14a6],0x1        # 0x4092f8
  407e52:	mov    rcx,QWORD PTR [rax]
  407e55:	call   0x407c08
  407e5a:	mov    DWORD PTR [rsp+0x30],eax
  407e5e:	jmp    0x407dd4
  407e63:	mov    DWORD PTR [rip+0x148b],0x1        # 0x4092f8
  407e6d:	jmp    0x407dd4
  407e72:	mov    DWORD PTR [rip+0x147c],0x0        # 0x4092f8
  407e7c:	jmp    0x407dd4
  407e81:	mov    rax,QWORD PTR [rsp+0x40]
  407e86:	mov    rcx,QWORD PTR [rax]
  407e89:	call   0x407c08
  407e8e:	mov    r13d,eax
  407e91:	jmp    0x407dd4
  407e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ea0:	mov    rax,QWORD PTR [rsp+0x48]
  407ea5:	lea    rdi,[rip+0x22f3]        # 0x40a19f
  407eac:	mov    ecx,0x9
  407eb1:	mov    rax,QWORD PTR [rax]
  407eb4:	mov    rsi,rax
  407eb7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407eb9:	je     0x4080e3
  407ebf:	lea    rdx,[rip+0x22e2]        # 0x40a1a8
  407ec6:	mov    rcx,rax
  407ec9:	call   0x407b70
  407ece:	test   eax,eax
  407ed0:	jne    0x407e10
  407ed6:	mov    r15d,0x1
  407edc:	jmp    0x407dd4
  407ee1:	mov    rax,QWORD PTR [rsp+0x50]
  407ee6:	xor    r8d,r8d
  407ee9:	xor    edx,edx
  407eeb:	mov    rcx,QWORD PTR [rax]
  407eee:	call   0x407b58
  407ef3:	mov    DWORD PTR [rsp+0x2c],eax
  407ef7:	jmp    0x407dd4
  407efc:	nop    DWORD PTR [rax+0x0]
  407f00:	mov    rax,QWORD PTR [rsp+0x58]
  407f05:	mov    DWORD PTR [rip+0x13e9],0x1        # 0x4092f8
  407f0f:	mov    rcx,QWORD PTR [rax]
  407f12:	call   0x407c08
  407f17:	mov    DWORD PTR [rsp+0x34],eax
  407f1b:	jmp    0x407dd4
  407f20:	mov    DWORD PTR [rip+0x611e],0x1        # 0x40e048
  407f2a:	jmp    0x407dd4
  407f2f:	nop
  407f30:	mov    rax,QWORD PTR [rip+0x30f9]        # 0x40b030
  407f37:	mov    rax,QWORD PTR [rax]
  407f3a:	mov    QWORD PTR [rip+0x60ff],rax        # 0x40e040
  407f41:	jmp    0x407dd4
  407f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f50:	mov    rax,QWORD PTR [rip+0x30d9]        # 0x40b030
  407f57:	lea    rdi,[rip+0x2231]        # 0x40a18f
  407f5e:	mov    ecx,0x8
  407f63:	mov    rax,QWORD PTR [rax]
  407f66:	mov    rsi,rax
  407f69:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407f6b:	je     0x4080d8
  407f71:	lea    rdx,[rip+0x221f]        # 0x40a197
  407f78:	mov    rcx,rax
  407f7b:	call   0x407b70
  407f80:	test   eax,eax
  407f82:	jne    0x407e10
  407f88:	mov    r14d,0x1
  407f8e:	jmp    0x407dd4
  407f93:	mov    rax,QWORD PTR [rip+0x3096]        # 0x40b030
  407f9a:	mov    rax,QWORD PTR [rax]
  407f9d:	mov    QWORD PTR [rip+0x608c],rax        # 0x40e030
  407fa4:	jmp    0x407dd4
  407fa9:	nop    DWORD PTR [rax+0x0]
  407fb0:	mov    DWORD PTR [rip+0x60a2],0x1        # 0x40e05c
  407fba:	jmp    0x407dd4
  407fbf:	nop
  407fc0:	mov    rax,QWORD PTR [rip+0x3069]        # 0x40b030
  407fc7:	lea    rdi,[rip+0x2195]        # 0x40a163
  407fce:	mov    ecx,0x5
  407fd3:	mov    rsi,QWORD PTR [rax]
  407fd6:	mov    QWORD PTR [rsp+0x38],rsi
  407fdb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407fdd:	je     0x4080ee
  407fe3:	mov    rcx,QWORD PTR [rsp+0x38]
  407fe8:	lea    rdx,[rip+0x2179]        # 0x40a168
  407fef:	call   0x407b70
  407ff4:	test   eax,eax
  407ff6:	je     0x4082e0
  407ffc:	mov    rcx,QWORD PTR [rsp+0x38]
  408001:	lea    rdx,[rip+0x2169]        # 0x40a171
  408008:	mov    r8d,0x4
  40800e:	call   0x407b60
  408013:	test   eax,eax
  408015:	jne    0x408237
  40801b:	mov    rcx,QWORD PTR [rsp+0x38]
  408020:	mov    edx,0x3a
  408025:	call   0x407b78
  40802a:	test   rax,rax
  40802d:	mov    rsi,rax
  408030:	je     0x40805e
  408032:	movsx  eax,BYTE PTR [rax+0x1]
  408036:	sub    eax,0x30
  408039:	cmp    eax,0x9
  40803c:	jbe    0x408381
  408042:	mov    edx,0x72
  408047:	mov    rcx,rsi
  40804a:	call   0x407b78
  40804f:	test   rax,rax
  408052:	je     0x40805e
  408054:	mov    DWORD PTR [rip+0x128e],0x0        # 0x4092ec
  40805e:	mov    WORD PTR [rip+0x1283],0x7        # 0x4092ea
  408067:	jmp    0x407dd4
  40806c:	nop    DWORD PTR [rax+0x0]
  408070:	mov    BYTE PTR [rsp+0x70],0x61
  408075:	jmp    0x407dd4
  40807a:	nop    WORD PTR [rax+rax*1+0x0]
  408080:	mov    BYTE PTR [r12],0x6d
  408085:	mov    BYTE PTR [r12+0x1],0x0
  40808b:	add    r12,0x1
  40808f:	jmp    0x407dd4
  408094:	mov    BYTE PTR [r12],0x6c
  408099:	mov    BYTE PTR [r12+0x1],0x0
  40809f:	add    r12,0x1
  4080a3:	jmp    0x407dd4
  4080a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4080b0:	mov    BYTE PTR [r12],0x63
  4080b5:	mov    BYTE PTR [r12+0x1],0x0
  4080bb:	add    r12,0x1
  4080bf:	jmp    0x407dd4
  4080c4:	mov    BYTE PTR [r12],0x62
  4080c9:	mov    BYTE PTR [r12+0x1],0x0
  4080cf:	add    r12,0x1
  4080d3:	jmp    0x407dd4
  4080d8:	mov    r14d,0x2
  4080de:	jmp    0x407dd4
  4080e3:	mov    r15d,0x2
  4080e9:	jmp    0x407dd4
  4080ee:	mov    WORD PTR [rip+0x11f3],0x1        # 0x4092ea
  4080f7:	jmp    0x407dd4
  4080fc:	mov    rdi,QWORD PTR [rip+0x2f3d]        # 0x40b040
  408103:	mov    eax,ebx
  408105:	sub    eax,DWORD PTR [rdi]
  408107:	sub    eax,0x1
  40810a:	jle    0x407e10
  408110:	mov    rsi,QWORD PTR [rsp+0x68]
  408115:	lea    rcx,[rip+0x20b3]        # 0x40a1cf
  40811c:	mov    rdx,rsi
  40811f:	call   0x407b98
  408124:	movsxd rax,ebx
  408127:	mov    rdx,rsi
  40812a:	mov    rcx,QWORD PTR [rbp+rax*8-0x8]
  40812f:	call   0x405890
  408134:	test   rax,rax
  408137:	mov    r12,rax
  40813a:	je     0x40846f
  408140:	lea    esi,[rbx-0x1]
  408143:	mov    eax,DWORD PTR [rsp+0x2c]
  408147:	mov    QWORD PTR [rsp+0xd8],rbp
  40814f:	mov    ebp,DWORD PTR [rsp+0x34]
  408153:	mov    DWORD PTR [rsp+0x34],esi
  408157:	mov    esi,DWORD PTR [rsp+0x30]
  40815b:	mov    QWORD PTR [rsp+0x38],rax
  408160:	movsxd rax,DWORD PTR [rdi]
  408163:	cmp    DWORD PTR [rsp+0x34],eax
  408167:	jle    0x408447
  40816d:	mov    rbx,QWORD PTR [rsp+0xd8]
  408175:	lea    rdx,[rip+0x1e9a]        # 0x40a016
  40817c:	mov    rcx,QWORD PTR [rbx+rax*8]
  408180:	call   0x405890
  408185:	test   rax,rax
  408188:	mov    rbx,rax
  40818b:	je     0x408456
  408191:	cmp    DWORD PTR [rsp+0x2c],0x0
  408196:	je     0x4081bc
  408198:	jmp    0x4082fe
  40819d:	nop    DWORD PTR [rax]
  4081a0:	mov    rcx,r12
  4081a3:	call   0x4058f0
  4081a8:	test   eax,eax
  4081aa:	je     0x408216
  4081ac:	mov    rcx,rbx
  4081af:	call   0x405950
  4081b4:	test   eax,eax
  4081b6:	je     0x4082ee
  4081bc:	movzx  eax,WORD PTR [rip+0x1127]        # 0x4092ea
  4081c3:	mov    rdx,r12
  4081c6:	mov    rcx,rbx
  4081c9:	mov    WORD PTR [rip+0x5e89],r15w        # 0x40e05a
  4081d1:	mov    WORD PTR [rip+0x5e7b],r14w        # 0x40e054
  4081d9:	mov    DWORD PTR [rip+0x5e70],r13d        # 0x40e050
  4081e0:	mov    DWORD PTR [rip+0x5e7e],esi        # 0x40e064
  4081e6:	mov    DWORD PTR [rip+0x5e74],ebp        # 0x40e060
  4081ec:	mov    WORD PTR [rip+0x5e65],ax        # 0x40e058
  4081f3:	movzx  eax,WORD PTR [rip+0x10ee]        # 0x4092e8
  4081fa:	mov    WORD PTR [rip+0x5e55],ax        # 0x40e056
  408201:	mov    eax,DWORD PTR [rip+0x10ed]        # 0x4092f4
  408207:	mov    DWORD PTR [rip+0x5e3f],eax        # 0x40e04c
  40820d:	call   0x4015a0
  408212:	test   eax,eax
  408214:	jne    0x4081a0
  408216:	mov    rcx,r12
  408219:	call   0x405898
  40821e:	mov    eax,0x1
  408223:	add    rsp,0x88
  40822a:	pop    rbx
  40822b:	pop    rsi
  40822c:	pop    rdi
  40822d:	pop    rbp
  40822e:	pop    r12
  408230:	pop    r13
  408232:	pop    r14
  408234:	pop    r15
  408236:	ret    
  408237:	mov    rcx,QWORD PTR [rsp+0x38]
  40823c:	lea    rdx,[rip+0x1f33]        # 0x40a176
  408243:	mov    r8d,0x2
  408249:	call   0x407b60
  40824e:	test   eax,eax
  408250:	je     0x408395
  408256:	mov    rcx,QWORD PTR [rsp+0x38]
  40825b:	lea    rdx,[rip+0x1f22]        # 0x40a184
  408262:	call   0x407b70
  408267:	test   eax,eax
  408269:	je     0x408373
  40826f:	mov    rcx,QWORD PTR [rsp+0x38]
  408274:	lea    rdx,[rip+0x1f0c]        # 0x40a187
  40827b:	mov    r8d,0x3
  408281:	call   0x407b60
  408286:	test   eax,eax
  408288:	je     0x408341
  40828e:	mov    rdi,QWORD PTR [rsp+0x38]
  408293:	lea    rdx,[rip+0x1ef1]        # 0x40a18b
  40829a:	mov    r8d,0x3
  4082a0:	mov    rcx,rdi
  4082a3:	call   0x407b60
  4082a8:	test   eax,eax
  4082aa:	jne    0x407e10
  4082b0:	mov    edx,0x3a
  4082b5:	mov    rcx,rdi
  4082b8:	call   0x407b78
  4082bd:	test   rax,rax
  4082c0:	je     0x4082d2
  4082c2:	lea    rcx,[rax+0x1]
  4082c6:	call   0x407c08
  4082cb:	mov    WORD PTR [rip+0x1016],ax        # 0x4092e8
  4082d2:	mov    WORD PTR [rip+0x100f],0x80b2        # 0x4092ea
  4082db:	jmp    0x407dd4
  4082e0:	mov    WORD PTR [rip+0x1001],0x8005        # 0x4092ea
  4082e9:	jmp    0x407dd4
  4082ee:	mov    rcx,rbx
  4082f1:	call   0x405898
  4082f6:	add    DWORD PTR [rdi],0x1
  4082f9:	jmp    0x408160
  4082fe:	mov    rdx,QWORD PTR [rsp+0x38]
  408303:	mov    rcx,rax
  408306:	call   0x405920
  40830b:	test   eax,eax
  40830d:	jne    0x4081bc
  408313:	mov    rcx,rbx
  408316:	call   0x405978
  40831b:	mov    r8d,DWORD PTR [rsp+0x2c]
  408320:	lea    rdx,[rip+0x1eb1]        # 0x40a1d8
  408327:	mov    rcx,rax
  40832a:	call   0x405980
  40832f:	mov    rcx,r12
  408332:	call   0x405898
  408337:	mov    eax,0x1
  40833c:	jmp    0x408223
  408341:	mov    rcx,QWORD PTR [rsp+0x38]
  408346:	mov    edx,0x3a
  40834b:	call   0x407b78
  408350:	test   rax,rax
  408353:	je     0x408365
  408355:	lea    rcx,[rax+0x1]
  408359:	call   0x407c08
  40835e:	mov    WORD PTR [rip+0xf83],ax        # 0x4092e8
  408365:	mov    WORD PTR [rip+0xf7c],0x5        # 0x4092ea
  40836e:	jmp    0x407dd4
  408373:	mov    WORD PTR [rip+0xf6e],0x4        # 0x4092ea
  40837c:	jmp    0x407dd4
  408381:	lea    rcx,[rsi+0x1]
  408385:	call   0x407c08
  40838a:	mov    DWORD PTR [rip+0xf60],eax        # 0x4092f0
  408390:	jmp    0x408042
  408395:	mov    rcx,QWORD PTR [rsp+0x38]
  40839a:	mov    edx,0x3a
  40839f:	call   0x407b78
  4083a4:	test   rax,rax
  4083a7:	je     0x408439
  4083ad:	cmp    DWORD PTR [rip+0xf40],0xffffffff        # 0x4092f4
  4083b4:	jne    0x4083d4
  4083b6:	jmp    0x408460
  4083bb:	and    DWORD PTR [rip+0xf32],0xfffffffe        # 0x4092f4
  4083c2:	mov    edx,0x3a
  4083c7:	mov    rcx,rsi
  4083ca:	call   0x407b78
  4083cf:	test   rax,rax
  4083d2:	je     0x408439
  4083d4:	lea    rsi,[rax+0x1]
  4083d8:	lea    rdx,[rip+0x1d9a]        # 0x40a179
  4083df:	mov    r8d,0x2
  4083e5:	mov    rcx,rsi
  4083e8:	call   0x407b60
  4083ed:	test   eax,eax
  4083ef:	je     0x4083bb
  4083f1:	lea    rdx,[rip+0x1d84]        # 0x40a17c
  4083f8:	mov    r8d,0x2
  4083fe:	mov    rcx,rsi
  408401:	call   0x407b60
  408406:	test   eax,eax
  408408:	jne    0x408413
  40840a:	or     DWORD PTR [rip+0xee3],0x1        # 0x4092f4
  408411:	jmp    0x4083c2
  408413:	lea    rdx,[rip+0x1d65]        # 0x40a17f
  40841a:	mov    r8d,0x4
  408420:	mov    rcx,rsi
  408423:	call   0x407b60
  408428:	test   eax,eax
  40842a:	jne    0x407e10
  408430:	or     DWORD PTR [rip+0xebd],0x4        # 0x4092f4
  408437:	jmp    0x4083c2
  408439:	mov    WORD PTR [rip+0xea8],0x3        # 0x4092ea
  408442:	jmp    0x407dd4
  408447:	mov    rcx,r12
  40844a:	call   0x405898
  40844f:	xor    eax,eax
  408451:	jmp    0x408223
  408456:	mov    eax,0xfffffffd
  40845b:	jmp    0x408223
  408460:	mov    DWORD PTR [rip+0xe8a],0x0        # 0x4092f4
  40846a:	jmp    0x4083d4
  40846f:	mov    eax,0xfffffffe
  408474:	jmp    0x408223
  408479:	nop
  40847a:	nop
  40847b:	nop
  40847c:	nop
  40847d:	nop
  40847e:	nop
  40847f:	nop
  408480:	(bad)  
  408481:	(bad)  
  408482:	(bad)  
  408483:	(bad)  
  408484:	(bad)  
  408485:	(bad)  
  408486:	(bad)  
  408487:	inc    DWORD PTR [rax]
  408489:	add    BYTE PTR [rax],al
  40848b:	add    BYTE PTR [rax],al
  40848d:	add    BYTE PTR [rax],al
  40848f:	add    bh,bh
  408491:	(bad)  
  408492:	(bad)  
  408493:	(bad)  
  408494:	(bad)  
  408495:	(bad)  
  408496:	(bad)  
  408497:	inc    DWORD PTR [rax]
  408499:	add    BYTE PTR [rax],al
  40849b:	add    BYTE PTR [rax],al
  40849d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000409000 <.data>:
  409000:	or     al,BYTE PTR [rax]
	...
  40903e:	add    BYTE PTR [rax],al
  409040:	inc    BYTE PTR [rax]
  409042:	add    DWORD PTR [rax],eax
  409044:	add    al,0x0
  409046:	add    BYTE PTR [rax],al
  409048:	(bad)  
  409049:	add    DWORD PTR [rcx],eax
  40904b:	add    BYTE PTR [rbx],al
  40904d:	add    BYTE PTR [rax],al
  40904f:	add    BYTE PTR [rip+0x2000101],cl        # 0x2409156
  409055:	add    BYTE PTR [rax],al
  409057:	add    BYTE PTR [rsi],cl
  409059:	add    DWORD PTR [rcx],eax
  40905b:	add    BYTE PTR [rdx],al
  40905d:	add    BYTE PTR [rax],al
  40905f:	add    BYTE PTR [rdi],cl
  409061:	add    DWORD PTR [rcx],eax
  409063:	add    BYTE PTR [rdx],al
  409065:	add    BYTE PTR [rax],al
  409067:	add    BYTE PTR [rax],dl
  409069:	add    DWORD PTR [rcx],eax
  40906b:	add    BYTE PTR [rdx],al
  40906d:	add    BYTE PTR [rax],al
  40906f:	add    BYTE PTR [rdx],dl
  409071:	add    DWORD PTR [rcx],eax
  409073:	add    BYTE PTR [rbx],al
  409075:	add    BYTE PTR [rax],al
  409077:	add    BYTE PTR [rax],bl
  409079:	add    DWORD PTR [rcx],eax
  40907b:	add    BYTE PTR [rbx],al
  40907d:	add    BYTE PTR [rax],al
  40907f:	add    BYTE PTR [rcx],bl
  409081:	add    DWORD PTR [rcx],eax
  409083:	add    BYTE PTR [rbx],al
  409085:	add    BYTE PTR [rax],al
  409087:	add    BYTE PTR [rdx],bl
  409089:	add    DWORD PTR [rcx],eax
  40908b:	add    BYTE PTR [rip+0x1b000000],al        # 0x1b409091
  409091:	add    DWORD PTR [rcx],eax
  409093:	add    BYTE PTR [rip+0x1d000000],al        # 0x1d409099
  409099:	add    DWORD PTR [rcx],eax
  40909b:	add    BYTE PTR [rdx],al
  40909d:	add    BYTE PTR [rax],al
  40909f:	add    BYTE PTR [rsi],bl
  4090a1:	add    DWORD PTR [rcx],eax
  4090a3:	add    BYTE PTR [rip+0x1f000000],al        # 0x1f4090a9
  4090a9:	add    DWORD PTR [rcx],eax
  4090ab:	add    BYTE PTR [rip+0x25000000],al        # 0x254090b1
  4090b1:	add    DWORD PTR [rcx],eax
  4090b3:	add    BYTE PTR [rax+rax*1],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	sub    BYTE PTR [rcx],al
  4090ba:	add    DWORD PTR [rax],eax
  4090bc:	add    eax,DWORD PTR [rax]
  4090be:	add    BYTE PTR [rax],al
  4090c0:	sub    DWORD PTR [rcx],eax
  4090c2:	add    al,BYTE PTR [rax]
  4090c4:	add    eax,DWORD PTR [rax]
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	xor    DWORD PTR [rcx],eax
  4090ca:	add    DWORD PTR [rax],eax
  4090cc:	add    al,BYTE PTR [rax]
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	xor    al,BYTE PTR [rcx]
  4090d2:	add    DWORD PTR [rax],eax
  4090d4:	add    al,BYTE PTR [rax]
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	cmp    eax,DWORD PTR [rcx]
  4090da:	add    DWORD PTR [rax],eax
  4090dc:	add    al,BYTE PTR [rax]
  4090de:	add    BYTE PTR [rax],al
  4090e0:	cmp    al,0x1
  4090e2:	add    DWORD PTR [rax],eax
  4090e4:	add    al,BYTE PTR [rax]
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	ds add edi,edi
  4090eb:	inc    DWORD PTR [rip+0x3f000000]        # 0x3f4090f1
  4090f1:	add    edi,edi
  4090f3:	inc    DWORD PTR [rip+0x41000000]        # 0x414090f9
  4090f9:	add    DWORD PTR [rdx],eax
  4090fb:	add    BYTE PTR [rbx],al
  4090fd:	add    BYTE PTR [rax],al
  4090ff:	add    BYTE PTR [rsi+0x1],al
  409102:	add    DWORD PTR [rax],eax
  409104:	add    al,0x0
  409106:	add    BYTE PTR [rax],al
  409108:	rex.RXB add DWORD PTR [r9],r8d
  40910b:	add    BYTE PTR [rbx],al
  40910d:	add    BYTE PTR [rax],al
  40910f:	add    BYTE PTR [rax+0x1],cl
  409112:	add    DWORD PTR [rax],eax
  409114:	add    al,0x0
  409116:	add    BYTE PTR [rax],al
  409118:	add    QWORD PTR [rcx],r8
  40911b:	add    BYTE PTR [rbx],al
  40911d:	add    BYTE PTR [rax],al
  40911f:	add    BYTE PTR [rbp+0x1],cl
  409122:	add    DWORD PTR [rax],eax
  409124:	add    al,BYTE PTR [rax]
  409126:	add    BYTE PTR [rax],al
  409128:	push   rax
  409129:	add    DWORD PTR [rdx],eax
  40912b:	add    BYTE PTR [rbx],al
  40912d:	add    BYTE PTR [rax],al
  40912f:	add    BYTE PTR [rcx+0x1],dl
  409132:	add    DWORD PTR [rax],eax
  409134:	add    al,BYTE PTR [rax]
  409136:	add    BYTE PTR [rax],al
  409138:	push   rbx
  409139:	add    DWORD PTR [rcx],eax
  40913b:	add    BYTE PTR [rbx],al
  40913d:	add    BYTE PTR [rax],al
  40913f:	add    BYTE PTR [rcx],dl
  409141:	add    bh,bh
  409143:	inc    DWORD PTR [rip+0x12000000]        # 0x12409149
  409149:	add    al,BYTE PTR [rdx]
  40914b:	add    BYTE PTR [rbx],al
  40914d:	add    BYTE PTR [rax],al
  40914f:	add    BYTE PTR [rbx],dl
  409151:	add    al,BYTE PTR [rcx]
  409153:	add    BYTE PTR [rbx],al
  409155:	add    BYTE PTR [rax],al
  409157:	add    BYTE PTR [rdx+rax*1],dl
  40915a:	(bad)  
  40915b:	inc    DWORD PTR [rip+0x52000000]        # 0x52409161
  409161:	add    edi,edi
  409163:	inc    DWORD PTR [rbx]
  409165:	add    BYTE PTR [rax],al
  409167:	add    BYTE PTR [rcx+rax*1+0x1],dl
  40916b:	add    BYTE PTR [rax+rax*1],cl
  40916e:	add    BYTE PTR [rax],al
  409170:	push   rbp
  409171:	add    DWORD PTR [rcx],eax
  409173:	add    BYTE PTR [rax+rax*1],cl
	...
  40917e:	add    BYTE PTR [rax],al
  409180:	adc    BYTE PTR [rbx+0x40],ah
  409186:	add    BYTE PTR [rax],al
  409188:	cmp    DWORD PTR [rbx+0x40],esp
  40918e:	add    BYTE PTR [rax],al
  409190:	push   rax
  409191:	movabs ds:0xa380000000000040,eax
  40919a:	add    BYTE PTR [rax],al
  40919d:	add    BYTE PTR [rax],al
  40919f:	add    al,al
  4091a1:	movabs ds:0xa400000000000040,eax
  4091aa:	add    BYTE PTR [rax],al
  4091ad:	add    BYTE PTR [rax],al
  4091af:	add    BYTE PTR [rax],dh
  4091b1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4091b2:	add    BYTE PTR [rax],al
  4091b5:	add    BYTE PTR [rax],al
  4091b7:	add    BYTE PTR [rax-0x5c],ch
  4091ba:	add    BYTE PTR [rax],al
  4091bd:	add    BYTE PTR [rax],al
  4091bf:	add    BYTE PTR [rax+0x40a4],dl
  4091c5:	add    BYTE PTR [rax],al
  4091c7:	add    al,cl
  4091c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4091ca:	add    BYTE PTR [rax],al
  4091cd:	add    BYTE PTR [rax],al
  4091cf:	add    BYTE PTR [rax],cl
  4091d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4091d2:	add    BYTE PTR [rax],al
  4091d5:	add    BYTE PTR [rax],al
  4091d7:	add    BYTE PTR [riz*4+0x40],ah
  4091de:	add    BYTE PTR [rax],al
  4091e0:	(bad)  
  4091e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4091e2:	add    BYTE PTR [rax],al
  4091e5:	add    BYTE PTR [rax],al
  4091e7:	add    BYTE PTR [rax-0x5b],bl
  4091ea:	add    BYTE PTR [rax],al
  4091ed:	add    BYTE PTR [rax],al
  4091ef:	add    BYTE PTR [rax+0x40a5],cl
  4091f5:	add    BYTE PTR [rax],al
  4091f7:	add    BYTE PTR [rax+0x40a5],dl
  4091fd:	add    BYTE PTR [rax],al
  4091ff:	add    al,al
  409201:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  409202:	add    BYTE PTR [rax],al
  409205:	add    BYTE PTR [rax],al
  409207:	add    al,ch
  409209:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40920a:	add    BYTE PTR [rax],al
  40920d:	add    BYTE PTR [rax],al
  40920f:	add    BYTE PTR [rax+0x40a5],cl
  409215:	add    BYTE PTR [rax],al
  409217:	add    BYTE PTR [rax],dl
  409219:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40921a:	add    BYTE PTR [rax],al
  40921d:	add    BYTE PTR [rax],al
  40921f:	add    BYTE PTR [rax-0x5a],cl
  409222:	add    BYTE PTR [rax],al
  409225:	add    BYTE PTR [rax],al
  409227:	add    BYTE PTR [rax+0x40a5],cl
  40922d:	add    BYTE PTR [rax],al
  40922f:	add    BYTE PTR [rax+0x40a6],al
  409235:	add    BYTE PTR [rax],al
  409237:	add    al,al
  409239:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40923a:	add    BYTE PTR [rax],al
  40923d:	add    BYTE PTR [rax],al
  40923f:	add    al,bh
  409241:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409242:	add    BYTE PTR [rax],al
  409245:	add    BYTE PTR [rax],al
  409247:	add    BYTE PTR [rax],dh
  409249:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40924a:	add    BYTE PTR [rax],al
  40924d:	add    BYTE PTR [rax],al
  40924f:	add    BYTE PTR [rax-0x59],ch
  409252:	add    BYTE PTR [rax],al
  409255:	add    BYTE PTR [rax],al
  409257:	add    BYTE PTR [rax+0x40a7],ch
  40925d:	add    BYTE PTR [rax],al
  40925f:	add    al,ah
  409261:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  409262:	add    BYTE PTR [rax],al
  409265:	add    BYTE PTR [rax],al
  409267:	add    BYTE PTR [rax+0x40a5],cl
  40926d:	add    BYTE PTR [rax],al
  40926f:	add    BYTE PTR [rax],dl
  409271:	test   al,0x40
  409273:	add    BYTE PTR [rax],al
  409275:	add    BYTE PTR [rax],al
  409277:	add    BYTE PTR [rax],ch
  409279:	test   al,0x40
  40927b:	add    BYTE PTR [rax],al
  40927d:	add    BYTE PTR [rax],al
  40927f:	add    BYTE PTR [rax-0x58],bl
  409282:	add    BYTE PTR [rax],al
  409285:	add    BYTE PTR [rax],al
  409287:	add    BYTE PTR [rax+rbp*4+0x40],al
  40928e:	add    BYTE PTR [rax],al
  409290:	movabs al,ds:0x88000000000040a8
  409299:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40929a:	add    BYTE PTR [rax],al
  40929d:	add    BYTE PTR [rax],al
  40929f:	add    ah,ch
  4092a1:	test   al,0x40
  4092a3:	add    BYTE PTR [rax],al
  4092a5:	add    BYTE PTR [rax],al
  4092a7:	add    BYTE PTR [rax],al
  4092a9:	test   eax,0x40
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	cmp    BYTE PTR [rcx+0x40],ch
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	push   0x40a9
  4092bd:	add    BYTE PTR [rax],al
  4092bf:	add    BYTE PTR [rax+0x40a5],cl
  4092c5:	add    BYTE PTR [rax],al
  4092c7:	add    BYTE PTR [rsi+0x40a9],dh
  4092cd:	add    BYTE PTR [rax],al
  4092cf:	add    bh,cl
  4092d1:	test   eax,0x40
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	call   0x40d386
	...
  4092e5:	add    BYTE PTR [rax],al
  4092e7:	add    bh,bh
  4092e9:	(bad)  
  4092ea:	(bad)  
  4092eb:	inc    DWORD PTR [rcx]
  4092ed:	add    BYTE PTR [rax],al
  4092ef:	add    BYTE PTR [rbx+0x0],cl
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	(bad)  
  4092f5:	(bad)  
  4092f6:	(bad)  
  4092f7:	(bad)  
  4092f8:	(bad)  
  4092f9:	(bad)  
  4092fa:	(bad)  
  4092fb:	inc    DWORD PTR [rax]
  4092fd:	add    BYTE PTR [rax],al
  4092ff:	add    BYTE PTR [rax+0x4084],bl
	...
  40930d:	add    BYTE PTR [rax],al
  40930f:	add    bh,bh
  409311:	(bad)  
  409312:	(bad)  
  409313:	(bad)  
  409314:	(bad)  
  409315:	(bad)  
  409316:	(bad)  
  409317:	inc    DWORD PTR [rax]
  409319:	add    BYTE PTR [rax],al
  40931b:	add    BYTE PTR [rax],al
  40931d:	add    BYTE PTR [rax],al
  40931f:	add    bh,bh
	...
  40932d:	add    BYTE PTR [rax],al
  40932f:	add    BYTE PTR [rdx],al
	...
  40933d:	add    BYTE PTR [rax],al
  40933f:	add    bh,bh
  409341:	(bad)  
  409342:	(bad)  
  409343:	(bad)  
  409344:	(bad)  
  409345:	(bad)  
  409346:	(bad)  
  409347:	(bad)  
  409348:	(bad)  
  409349:	(bad)  
  40934a:	(bad)  
  40934b:	inc    DWORD PTR [rax]
  40934d:	add    BYTE PTR [rax],al
  40934f:	add    BYTE PTR [rip+0x40ad],dl        # 0x40d402
  409355:	add    BYTE PTR [rax],al
  409357:	add    BYTE PTR [rdi],bh
  409359:	add    BYTE PTR [rax],al
  40935b:	add    BYTE PTR [rcx],al
  40935d:	add    BYTE PTR [rax],al
  40935f:	add    BYTE PTR [rcx],al
	...
  40936d:	add    BYTE PTR [rax],al
  40936f:	add    bh,bh
  409371:	(bad)  
  409372:	(bad)  
  409373:	inc    DWORD PTR [rax]
	...
  40937d:	add    BYTE PTR [rax],al
  40937f:	add    BYTE PTR [rax+0x407c],al
  409385:	add    BYTE PTR [rax],al
  409387:	add    BYTE PTR [rax+0x407c],dl
  40938d:	add    BYTE PTR [rax],al
  40938f:	add    BYTE PTR [rdx],dh
  409391:	movabs ds:0x2b992ddf,al
  40939a:	add    BYTE PTR [rax],al
  40939c:	add    BYTE PTR [rax],al
  40939e:	add    BYTE PTR [rax],al
  4093a0:	int    0x5d
  4093a2:	and    dl,dl
  4093a4:	data16 (bad) 
  4093a6:	(bad)  
  4093a7:	inc    DWORD PTR [rax]
  4093a9:	add    BYTE PTR [rax],al
  4093ab:	add    BYTE PTR [rax],al
  4093ad:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000040a000 <.rdata>:
  40a000:	and    eax,0x66000a73
  40a005:	(bad)  
  40a006:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206e6920
  40a00e:	rex.RXB push r12
  40a010:	rex.WB
  40a011:	rex.RX
  40a012:	rex.WRX
  40a013:	gs ja  0x40a016
  40a016:	jb     0x40a018
  40a018:	rex.RX (bad) 
  40a01a:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
  40a022:	and    BYTE PTR [rdi+0x54],al
  40a025:	rex.WB
  40a026:	rex.RX
  40a027:	rex.WB ins DWORD PTR es:[rdi],dx
  40a029:	jo     0x40a09a
  40a02b:	jb     0x40a0a1
  40a02d:	or     al,BYTE PTR [rax]
  40a02f:	rex.RX (bad) 
  40a031:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
  40a039:	and    BYTE PTR [rdi+0x54],al
  40a03c:	rex.WB
  40a03d:	rex.RX push rbx
  40a03f:	gs je  0x40a088
  40a042:	jb     0x40a0b3
  40a044:	ins    DWORD PTR es:[rdi],dx
  40a045:	push   rax
  40a046:	jb     0x40a0b7
  40a048:	push   0x34
  40a04a:	or     al,BYTE PTR [rax]
  40a04c:	jb     0x40a0c2
  40a04e:	add    BYTE PTR [rip+0x666c],ah        # 0x4106c0
  40a054:	add    BYTE PTR [rax],al
  40a056:	add    BYTE PTR [rax],al
  40a058:	rex.RX (bad) 
  40a05a:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x61702065
  40a062:	jb     0x40a0d7
  40a064:	imul   ebp,DWORD PTR [rsi+0x67],0x656e6f20
  40a06b:	and    BYTE PTR [rdi+0x72],ch
  40a06e:	and    BYTE PTR [rbp+0x6f],ch
  40a071:	jb     0x40a0d8
  40a073:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  40a077:	gs jae 0x40a09a
  40a07a:	outs   dx,DWORD PTR ds:[rsi]
  40a07b:	data16 and BYTE PTR [rdi+0x6f],dh
  40a07f:	jb     0x40a0ed
  40a081:	and    BYTE PTR fs:[rsi+0x69],ah
  40a085:	ins    BYTE PTR es:[rdi],dx
  40a086:	gs or  al,BYTE PTR cs:[rax]
  40a08a:	add    BYTE PTR [rax],al
  40a08c:	add    BYTE PTR [rax],al
  40a08e:	add    BYTE PTR [rax],al
  40a090:	and    eax,0x43203a73
  40a095:	(bad)  
  40a096:	outs   dx,BYTE PTR ds:[rsi]
  40a097:	and    BYTE PTR [rsi+0x6f],ch
  40a09a:	je     0x40a0bc
  40a09c:	push   0x6c646e61
  40a0a1:	and    BYTE PTR gs:[rcx+rbp*2+0x66],ah
  40a0a6:	data16 gs jb 0x40a10f
  40a0aa:	outs   dx,BYTE PTR ds:[rsi]
  40a0ab:	je     0x40a0cd
  40a0ad:	jo     0x40a11b
  40a0af:	(bad)  
  40a0b0:	outs   dx,BYTE PTR ds:[rsi]
  40a0b1:	(bad)  
  40a0b2:	jb     0x40a0d4
  40a0b4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a0b7:	imul   sp,WORD PTR [rdi+0x75],0x6172
  40a0bd:	je     0x40a128
  40a0bf:	outs   dx,DWORD PTR ds:[rsi]
  40a0c0:	outs   dx,BYTE PTR ds:[rsi]
  40a0c1:	and    BYTE PTR [rdi+0x2f],dh
  40a0c4:	and    BYTE PTR [rdx+0x69],ah
  40a0c7:	je     0x40a13c
  40a0c9:	(bad)  
  40a0ca:	jae    0x40a12d
  40a0cc:	ins    DWORD PTR es:[rdi],dx
  40a0cd:	jo     0x40a13b
  40a0cf:	and    BYTE PTR gs:[rcx],ah
  40a0d2:	cmp    eax,0xa3820
  40a0d7:	add    BYTE PTR [rcx+rbp*2+0x66],dh
  40a0db:	movsxd si,DWORD PTR [rax+0x3a]
  40a0df:	and    BYTE PTR [rip+0x44203a73],ah        # 0x4460db58
  40a0e5:	outs   dx,DWORD PTR ds:[rsi]
  40a0e6:	outs   dx,BYTE PTR ds:[rsi]
  40a0e7:	(bad)  
  40a0e8:	je     0x40a10a
  40a0ea:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40a0ee:	and    BYTE PTR [rax+0x6f],ch
  40a0f1:	ja     0x40a113
  40a0f3:	je     0x40a164
  40a0f5:	and    BYTE PTR [rbx+0x6f],ah
  40a0f8:	jo     0x40a173
  40a0fa:	(bad)  
  40a0fb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a0fe:	jbe    0x40a165
  40a100:	jb     0x40a176
  40a102:	and    BYTE PTR [rcx+0x6d],ch
  40a105:	(bad)  
  40a106:	gs or  al,BYTE PTR cs:[eax]
  40a10b:	push   rbx
  40a10c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a10f:	imul   ebp,DWORD PTR [rsi+0x67],0x622d3820
  40a116:	imul   esi,DWORD PTR [rax+riz*1+0x63],0x726f6c6f
  40a11e:	ins    DWORD PTR es:[rdi],dx
  40a11f:	(bad)  
  40a120:	jo     0x40a122
  40a122:	add    BYTE PTR [rax],al
  40a124:	cld    
  40a125:	jbe    0x40a126
  40a127:	(bad)  
  40a128:	cld    
  40a129:	jbe    0x40a12a
  40a12b:	(bad)  
  40a12c:	fdiv   QWORD PTR [rsi-0x1]
  40a12f:	jmp    FWORD PTR [rdx+rdi*2-0x1]
  40a133:	(bad)  
  40a134:	cld    
  40a135:	jns    0x40a136
  40a137:	jmp    FWORD PTR [rdx+rdi*2]
  40a13a:	(bad)  
  40a13b:	(bad)  
  40a13c:	cld    
  40a13d:	jbe    0x40a13e
  40a13f:	(bad)  
  40a140:	cld    
  40a141:	jbe    0x40a142
  40a143:	(bad)  
  40a144:	cld    
  40a145:	jbe    0x40a146
  40a147:	(bad)  
  40a148:	cld    
  40a149:	jbe    0x40a14a
  40a14b:	(bad)  
  40a14c:	cld    
  40a14d:	jbe    0x40a14e
  40a14f:	(bad)  
  40a150:	cld    
  40a151:	jbe    0x40a152
  40a153:	(bad)  
  40a154:	mov    esi,0x44ffff76
  40a159:	outs   dx,DWORD PTR ds:[rsi]
  40a15a:	ja     0x40a1ca
  40a15c:	jae    0x40a1bf
  40a15e:	ins    DWORD PTR es:[rdi],dx
  40a15f:	jo     0x40a1cd
  40a161:	add    BYTE PTR gs:[rsi+0x6f],ch
  40a165:	outs   dx,BYTE PTR ds:[rsi]
  40a166:	add    BYTE PTR gs:[rax+0x61],dh
  40a16a:	movsxd ebp,DWORD PTR [rbx+0x62]
  40a16d:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x6765706a
  40a175:	add    BYTE PTR [rdi+0x33],ah
  40a178:	add    BYTE PTR [rcx],dh
  40a17a:	add    BYTE PTR fs:[rdx],dh
  40a17d:	add    BYTE PTR fs:[rsi+0x69],ah
  40a181:	ins    BYTE PTR es:[rdi],dx
  40a182:	ins    BYTE PTR es:[rdi],dx
  40a183:	add    BYTE PTR [rdi+0x34],ah
  40a186:	add    BYTE PTR [rdx+rdi*2+0x77],ch
  40a18a:	add    BYTE PTR [rdx+0x69],bh
  40a18d:	jo     0x40a18f
  40a18f:	ins    BYTE PTR es:[rdi],dx
  40a190:	jae    0x40a1f4
  40a192:	xor    ch,BYTE PTR [rbp+0x73]
  40a195:	(bad)  
  40a196:	add    BYTE PTR [rbp+0x73],ch
  40a199:	(bad)
  40a19e:	add    BYTE PTR [rbx+0x65],dh
  40a1a1:	jo     0x40a204
  40a1a3:	jb     0x40a206
  40a1a5:	je     0x40a20c
  40a1a7:	add    BYTE PTR [rbx+0x6f],ah
  40a1aa:	outs   dx,BYTE PTR ds:[rsi]
  40a1ab:	je     0x40a216
  40a1ad:	add    BYTE PTR [eax],al
  40a1b0:	movsxd edi,DWORD PTR [rdx]
  40a1b2:	data16 cmp ch,BYTE PTR [rdx+rdi*1+0x6f]
  40a1b7:	cmp    dh,BYTE PTR [rax+0x3a]
  40a1ba:	jb     0x40a1f6
  40a1bc:	ja     0x40a1f8
  40a1be:	cmp    ah,BYTE PTR gs:[rdi+0x3a]
  40a1c2:	xor    al,0x3a
  40a1c4:	(bad)  
  40a1c5:	imul   esi,DWORD PTR [rbx+0x74],0x4c423864
  40a1cc:	rex.WRB
  40a1cd:	rex.XB add BYTE PTR [r13+0x6f],bpl
  40a1d1:	fs gs cmp eax,0xa7325
  40a1d8:	rex.RB jb 0x40a24d
  40a1db:	outs   dx,DWORD PTR ds:[rsi]
  40a1dc:	jb     0x40a20a
  40a1de:	and    BYTE PTR [rbx+0x65],dh
  40a1e1:	je     0x40a257
  40a1e3:	imul   ebp,DWORD PTR [rsi+0x67],0x62757320
  40a1ea:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  40a1f2:	jns    0x40a214
  40a1f4:	(bad)  
  40a1f5:	je     0x40a217
  40a1f7:	and    eax,0x7823
  40a1fc:	xor    al,0xdc
  40a1fe:	(bad)  
  40a1ff:	(bad)  
  40a200:	fcomp  st(3)
  40a202:	(bad)  
  40a203:	(bad)  
  40a204:	fcomp  st(3)
  40a206:	(bad)  
  40a207:	(bad)  
  40a208:	fcomp  st(3)
  40a20a:	(bad)  
  40a20b:	call   FWORD PTR [rcx]
  40a20d:	fdiv   st(7),st
  40a20f:	(bad)  
  40a210:	fcomp  st(3)
  40a212:	(bad)  
  40a213:	(bad)  
  40a214:	fcomp  st(3)
  40a216:	(bad)  
  40a217:	(bad)  
  40a218:	fcomp  st(3)
  40a21a:	(bad)  
  40a21b:	(bad)  
  40a21c:	fcomp  st(3)
  40a21e:	(bad)  
  40a21f:	(bad)  
  40a220:	fcomp  st(3)
  40a222:	(bad)  
  40a223:	(bad)  
  40a224:	fcomp  st(3)
  40a226:	(bad)  
  40a227:	call   QWORD PTR [rsp+rbx*8]
  40a22a:	(bad)  
  40a22b:	(bad)  
  40a22c:	fcomp  st(3)
  40a22e:	(bad)  
  40a22f:	(bad)  
  40a230:	fcomp  st(3)
  40a232:	(bad)  
  40a233:	dec    eax
  40a235:	fdivp  st(7),st
  40a237:	push   QWORD PTR [rsi+rbx*8-0x24270001]
  40a23e:	(bad)  
  40a23f:	(bad)  
  40a240:	fcomp  st(3)
  40a242:	(bad)  
  40a243:	(bad)  
  40a244:	fcomp  st(3)
  40a246:	(bad)  
  40a247:	(bad)  
  40a248:	fcomp  st(3)
  40a24a:	(bad)  
  40a24b:	(bad)  
  40a24c:	fcomp  st(3)
  40a24e:	(bad)  
  40a24f:	(bad)  
  40a250:	fcomp  st(3)
  40a252:	(bad)  
  40a253:	(bad)  
  40a254:	fcomp  st(3)
  40a256:	(bad)  
  40a257:	(bad)  
  40a258:	fcomp  st(3)
  40a25a:	(bad)  
  40a25b:	call   FWORD PTR [rax-0x7b000022]
  40a261:	fdivp  st(7),st
  40a263:	(bad)  
  40a264:	fcomp  st(3)
  40a266:	(bad)  
  40a267:	(bad)  
  40a268:	fcomp  st(3)
  40a26a:	(bad)  
  40a26b:	(bad)  
  40a26c:	fcomp  st(3)
  40a26e:	(bad)  
  40a26f:	(bad)  
  40a270:	fcomp  st(3)
  40a272:	(bad)  
  40a273:	(bad)  
  40a274:	fcomp  st(3)
  40a276:	(bad)  
  40a277:	(bad)  
  40a278:	fcomp  st(3)
  40a27a:	(bad)  
  40a27b:	(bad)  
  40a27c:	fcomp  st(3)
  40a27e:	(bad)  
  40a27f:	(bad)  
  40a280:	fcomp  st(3)
  40a282:	(bad)  
  40a283:	(bad)  
  40a284:	fcomp  st(3)
  40a286:	(bad)  
  40a287:	(bad)  
  40a288:	fcomp  st(3)
  40a28a:	(bad)  
  40a28b:	(bad)  
  40a28c:	fcomp  st(3)
  40a28e:	(bad)  
  40a28f:	(bad)  
  40a290:	fcomp  st(3)
  40a292:	(bad)  
  40a293:	(bad)  
  40a294:	fcomp  st(3)
  40a296:	(bad)  
  40a297:	(bad)  
  40a298:	fcomp  st(3)
  40a29a:	(bad)  
  40a29b:	(bad)  
  40a29c:	fcomp  st(3)
  40a29e:	(bad)  
  40a29f:	(bad)  
  40a2a0:	fcomp  st(3)
  40a2a2:	(bad)  
  40a2a3:	(bad)  
  40a2a4:	fcomp  st(3)
  40a2a6:	(bad)  
  40a2a7:	(bad)  
  40a2a8:	fcomp  st(3)
  40a2aa:	(bad)  
  40a2ab:	(bad)  
  40a2ac:	fcomp  st(3)
  40a2ae:	(bad)  
  40a2af:	push   QWORD PTR [rsi+rbx*8-0x1]
  40a2b3:	(bad)  
  40a2b4:	fcomp  st(3)
  40a2b6:	(bad)  
  40a2b7:	inc    esp
  40a2b9:	(bad)  
  40a2bb:	push   QWORD PTR [rbp+rbx*8-0x22680001]
  40a2c2:	(bad)  
  40a2c3:	call   QWORD PTR [rbp+rbx*8-0x1]
  40a2c7:	push   QWORD PTR [rbx*8-0x24270001]
  40a2ce:	(bad)  
  40a2cf:	jmp    QWORD PTR [rbx*8-0x24270001]
  40a2d6:	(bad)  
  40a2d7:	(bad)  
  40a2d8:	fcomp  st(3)
  40a2da:	(bad)  
  40a2db:	inc    DWORD PTR [rbx*8-0x24270001]
  40a2e2:	(bad)  
  40a2e3:	(bad)  
  40a2e4:	fcomp  st(3)
  40a2e6:	(bad)  
  40a2e7:	jmp    rbp
  40a2e9:	fdiv   st(7),st
  40a2eb:	jmp    QWORD PTR [rsp+rbx*8-0x24270001]
  40a2f2:	(bad)  
  40a2f3:	inc    DWORD PTR [rbp+0x76ffffdc]
  40a2f9:	fdiv   st(7),st
  40a2fb:	jmp    QWORD PTR [rdi-0x24]
  40a2fe:	(bad)  
  40a2ff:	(bad)  
  40a300:	fcomp  st(3)
  40a302:	(bad)  
  40a303:	(bad)  
  40a304:	fcomp  st(3)
  40a306:	(bad)  
  40a307:	inc    DWORD PTR [rbp-0x24]
  40a30a:	(bad)  
  40a30b:	inc    DWORD PTR [rax]
  40a30d:	add    BYTE PTR [rax],al
  40a30f:	add    BYTE PTR [rbp+0x73],dh
  40a312:	(bad)  
  40a313:	cmp    ah,BYTE PTR gs:[eax]
  40a317:	addr32 je 0x40a383
  40a31a:	data16 movsxd si,DWORD PTR [rax+0x20]
  40a31f:	pop    rbx
  40a320:	outs   dx,DWORD PTR ds:[rsi]
  40a321:	jo     0x40a397
  40a323:	imul   ebp,DWORD PTR [rdi+0x6e],0x69205d73
  40a32a:	outs   dx,BYTE PTR ds:[rsi]
  40a32b:	jo     0x40a3a2
  40a32d:	je     0x40a35d
  40a32f:	cs and BYTE PTR cs:[rdi+0x75],ch
  40a334:	je     0x40a3a6
  40a336:	jne    0x40a3ac
  40a338:	add    BYTE PTR [rdi+0x68],dh
  40a33b:	gs jb  0x40a3a3
  40a33e:	and    BYTE PTR [rdi+0x70],ch
  40a341:	je     0x40a3ac
  40a343:	outs   dx,DWORD PTR ds:[rsi]
  40a344:	outs   dx,BYTE PTR ds:[rsi]
  40a345:	jae    0x40a367
  40a347:	(bad)  
  40a348:	jb     0x40a3af
  40a34a:	cmp    al,BYTE PTR [rax]
  40a34c:	add    BYTE PTR [rax],al
  40a34e:	add    BYTE PTR [rax],al
  40a350:	and    BYTE PTR [rip+0x69662067],ch        # 0x69a6c3bd
  40a356:	ins    BYTE PTR es:[rdi],dx
  40a357:	or     DWORD PTR gs:[rcx+0x6e],ebp
  40a35b:	jae    0x40a3d1
  40a35d:	(bad)  
  40a35e:	ins    BYTE PTR es:[rdi],dx
  40a35f:	ins    BYTE PTR es:[rdi],dx
  40a360:	and    BYTE PTR [rdi+0x65],al
  40a363:	outs   dx,DWORD PTR ds:[rsi]
  40a364:	push   rsp
  40a365:	rex.WB
  40a366:	rex.RX
  40a367:	rex.RX and BYTE PTR [rbp+0x65],r13b
  40a36b:	je     0x40a3ce
  40a36d:	fs (bad) 
  40a36f:	je     0x40a3d2
  40a371:	and    BYTE PTR [rsi+0x72],ah
  40a374:	outs   dx,DWORD PTR ds:[rsi]
  40a375:	ins    DWORD PTR es:[rdi],dx
  40a376:	and    BYTE PTR [rsi+riz*2],bh
  40a379:	imul   ebp,DWORD PTR [rbp+riz*2+0x3e],0x20000000
  40a381:	sub    eax,0x72702034
  40a386:	outs   dx,DWORD PTR ds:[rsi]
  40a387:	push   0x34
  40a389:	pop    rdi
  40a38a:	jae    0x40a400
  40a38c:	jb     0x40a397
  40a38e:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  40a395:	and    BYTE PTR [rdi+0x65],al
  40a398:	outs   dx,DWORD PTR ds:[rsi]
  40a399:	push   rsp
  40a39a:	rex.WB
  40a39b:	rex.RX
  40a39c:	rex.RX and BYTE PTR [rbp+0x65],r13b
  40a3a0:	je     0x40a403
  40a3a2:	fs (bad) 
  40a3a4:	je     0x40a407
  40a3a6:	and    BYTE PTR [rsi+0x72],ah
  40a3a9:	outs   dx,DWORD PTR ds:[rsi]
  40a3aa:	ins    DWORD PTR es:[rdi],dx
  40a3ab:	and    BYTE PTR [rax+0x72],dh
  40a3ae:	outs   dx,DWORD PTR ds:[rsi]
  40a3af:	push   0x34
  40a3b1:	and    BYTE PTR [rbx+0x74],dh
  40a3b4:	jb     0x40a41f
  40a3b6:	outs   dx,BYTE PTR ds:[rsi]
  40a3b7:	add    BYTE PTR [eax],al
  40a3ba:	add    BYTE PTR [rax],al
  40a3bc:	add    BYTE PTR [rax],al
  40a3be:	add    BYTE PTR [rax],al
  40a3c0:	and    BYTE PTR [rip+0x69662065],ch        # 0x69a6c42b
  40a3c6:	ins    BYTE PTR es:[rdi],dx
  40a3c7:	or     DWORD PTR gs:[rcx+0x6e],ebp
  40a3cb:	jae    0x40a441
  40a3cd:	(bad)  
  40a3ce:	ins    BYTE PTR es:[rdi],dx
  40a3cf:	ins    BYTE PTR es:[rdi],dx
  40a3d0:	and    BYTE PTR [rax+0x6f],dh
  40a3d3:	jae    0x40a43e
  40a3d5:	je     0x40a440
  40a3d7:	outs   dx,DWORD PTR ds:[rsi]
  40a3d8:	outs   dx,BYTE PTR ds:[rsi]
  40a3d9:	imul   ebp,DWORD PTR [rsi+0x67],0x666e6920
  40a3e0:	outs   dx,DWORD PTR ds:[rsi]
  40a3e1:	and    BYTE PTR [rsi+0x72],ah
  40a3e4:	outs   dx,DWORD PTR ds:[rsi]
  40a3e5:	ins    DWORD PTR es:[rdi],dx
  40a3e6:	and    BYTE PTR [rbp+0x53],al
  40a3e9:	push   rdx
  40a3ea:	rex.WB and BYTE PTR [r15+0x6f],dl
  40a3ee:	jb     0x40a45c
  40a3f0:	imul   bp,WORD PTR fs:[rbp+riz*2+0x20],0x663c
  40a3f8:	imul   ebp,DWORD PTR [rbp+riz*2+0x3e],0x0
  40a400:	and    BYTE PTR [rip+0x61090961],ch        # 0x6149ad67
  40a406:	jo     0x40a478
  40a408:	outs   dx,BYTE PTR gs:[rsi]
  40a40a:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40a40f:	outs   dx,DWORD PTR ds:[rsi]
  40a410:	jne    0x40a486
  40a412:	jo     0x40a489
  40a414:	je     0x40a436
  40a416:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  40a41d:	and    BYTE PTR [rdi+0x66],ch
  40a420:	and    BYTE PTR [rdi+0x76],ch
  40a423:	gs jb  0x40a49d
  40a426:	jb     0x40a491
  40a428:	je     0x40a493
  40a42a:	outs   dx,BYTE PTR ds:[rsi]
  40a42b:	add    BYTE PTR [eax],al
  40a42e:	add    BYTE PTR [rax],al
  40a430:	and    BYTE PTR [rip+0x77090938],ch        # 0x7749ad6e
  40a436:	jb     0x40a4a1
  40a438:	je     0x40a49f
  40a43a:	and    BYTE PTR [rdx+0x69],al
  40a43d:	addr32 push rsp
  40a43f:	rex.WB
  40a440:	rex.RX
  40a441:	rex.RX and BYTE PTR [rcx+0x6e],r13b
  40a445:	jae    0x40a4bb
  40a447:	gs (bad) 
  40a449:	and    BYTE PTR fs:[rdi+0x66],ch
  40a44d:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40a451:	(bad)  
  40a452:	jne    0x40a4c0
  40a454:	je     0x40a476
  40a456:	rex.XB ins BYTE PTR es:[rdi],dx
  40a458:	(bad)  
  40a459:	jae    0x40a4ce
  40a45b:	imul   esp,DWORD PTR [rbx+0x54],0x464649
  40a462:	add    BYTE PTR [rax],al
  40a464:	add    BYTE PTR [rax],al
  40a466:	add    BYTE PTR [rax],al
  40a468:	and    BYTE PTR [rip+0x666f206f],ch        # 0x66afc4dd
  40a46e:	data16 jae 0x40a4d6
  40a471:	je     0x40a47c
  40a473:	jae    0x40a4da
  40a475:	je     0x40a497
  40a477:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  40a47e:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  40a482:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  40a487:	jns    0x40a4a9
  40a489:	outs   dx,DWORD PTR ds:[rsi]
  40a48a:	data16 data16 jae 0x40a4f3
  40a48e:	je     0x40a490
  40a490:	and    BYTE PTR [rip+0x6f632070],ch        # 0x6fa3c506
  40a496:	outs   dx,BYTE PTR ds:[rsi]
  40a497:	je     0x40a502
  40a499:	or     DWORD PTR [eax+0x61],esi
  40a49d:	movsxd ebp,DWORD PTR [rbx+0x20]
  40a4a0:	jae    0x40a503
  40a4a2:	ins    DWORD PTR es:[rdi],dx
  40a4a3:	jo     0x40a511
  40a4a5:	gs jae 0x40a4c8
  40a4a8:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a4ab:	je     0x40a516
  40a4ad:	addr32 jne 0x40a51f
  40a4b0:	jne    0x40a525
  40a4b2:	ins    BYTE PTR es:[rdi],dx
  40a4b3:	jns    0x40a4d5
  40a4b5:	sub    BYTE PTR [rbp+0x2e],ah
  40a4b8:	and    BYTE PTR cs:[edx+0x47],dl
  40a4bd:	rex.X push rdx
  40a4bf:	rex.RXB
  40a4c0:	rex.X
  40a4c1:	cs cs sub DWORD PTR cs:[rax],eax
  40a4c6:	add    BYTE PTR [rax],al
  40a4c8:	and    BYTE PTR [rip+0x65732070],ch        # 0x65b3c53e
  40a4ce:	jo     0x40a531
  40a4d0:	jb     0x40a533
  40a4d2:	je     0x40a539
  40a4d4:	or     DWORD PTR [rbx+0x74],esi
  40a4d7:	outs   dx,DWORD PTR ds:[rsi]
  40a4d8:	jb     0x40a53f
  40a4da:	and    BYTE PTR [rbx+0x61],dh
  40a4dd:	ins    DWORD PTR es:[rdi],dx
  40a4de:	jo     0x40a54c
  40a4e0:	gs jae 0x40a503
  40a4e3:	jae    0x40a54a
  40a4e5:	jo     0x40a548
  40a4e7:	jb     0x40a54a
  40a4e9:	je     0x40a550
  40a4eb:	ins    BYTE PTR es:[rdi],dx
  40a4ec:	jns    0x40a50e
  40a4ee:	sub    BYTE PTR [rbp+0x2e],ah
  40a4f1:	and    BYTE PTR cs:[edx+0x52],dl
  40a4f6:	push   rdx
  40a4f7:	cs cs cs rex.RXB
  40a4fb:	rex.RXB
  40a4fc:	rex.RXB
  40a4fd:	cs cs cs rex.X
  40a501:	rex.X
  40a502:	rex.X
  40a503:	cs cs sub DWORD PTR cs:[rax],eax
  40a508:	and    BYTE PTR [rip+0x77090973],ch        # 0x7749ae81
  40a50e:	jb     0x40a579
  40a510:	je     0x40a577
  40a512:	and    BYTE PTR [rdi+0x75],ch
  40a515:	je     0x40a587
  40a517:	jne    0x40a58d
  40a519:	and    BYTE PTR [rcx+0x6e],ch
  40a51c:	and    BYTE PTR [rbx+0x74],dh
  40a51f:	jb     0x40a58a
  40a521:	jo     0x40a596
  40a523:	add    BYTE PTR [rax],ah
  40a525:	sub    eax,0x77090974
  40a52a:	jb     0x40a595
  40a52c:	je     0x40a593
  40a52e:	and    BYTE PTR [rdi+0x75],ch
  40a531:	je     0x40a5a3
  40a533:	jne    0x40a5a9
  40a535:	and    BYTE PTR [rcx+0x6e],ch
  40a538:	and    BYTE PTR [rcx+rbp*2+0x6c],dh
  40a53c:	gs jae 0x40a53f
  40a53f:	and    BYTE PTR [rip+0x69090969],ch        # 0x6949aeae
  40a545:	outs   dx,BYTE PTR ds:[esi]
  40a547:	outs   dx,DWORD PTR ds:[rsi]
  40a548:	jb     0x40a5af
  40a54a:	and    BYTE PTR [rdx+0x65],dh
  40a54d:	(bad)  
  40a54e:	and    BYTE PTR fs:[rbp+0x72],ah
  40a552:	jb     0x40a5c3
  40a554:	jb     0x40a5c9
  40a556:	add    BYTE PTR [rax],al
  40a558:	and    BYTE PTR [rip+0x74090964],ch        # 0x7449aec2
  40a55e:	jb     0x40a5d5
  40a560:	outs   dx,BYTE PTR ds:[rsi]
  40a561:	movsxd esp,DWORD PTR [rcx+0x74]
  40a564:	and    BYTE PTR gs:[rax],bh
  40a567:	and    BYTE PTR [rdx+0x69],ah
  40a56a:	je     0x40a5df
  40a56c:	jo     0x40a5d3
  40a56e:	jb     0x40a5e3
  40a570:	(bad)  
  40a571:	ins    DWORD PTR es:[rdi],dx
  40a572:	jo     0x40a5e0
  40a574:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40a579:	xor    al,0x62
  40a57b:	imul   esi,DWORD PTR [rbx+rsi*2+0x70],0x61737265
  40a583:	ins    DWORD PTR es:[rdi],dx
  40a584:	jo     0x40a5f2
  40a586:	add    BYTE PTR gs:[rax],al
  40a589:	add    BYTE PTR [rax],al
  40a58b:	add    BYTE PTR [rax],al
  40a58d:	add    BYTE PTR [rax],al
  40a58f:	add    BYTE PTR [rax],ah
  40a591:	sub    eax,0x9232072
  40a596:	or     DWORD PTR [rbp+0x61],ebp
  40a599:	imul   esp,DWORD PTR [rbp+0x20],0x65
  40a59d:	(bad)  
  40a59e:	movsxd ebp,DWORD PTR [rax+0x20]
  40a5a1:	jae    0x40a617
  40a5a3:	jb     0x40a60e
  40a5a5:	jo     0x40a5c7
  40a5a7:	push   0x20657661
  40a5ac:	outs   dx,BYTE PTR ds:[rsi]
  40a5ad:	outs   dx,DWORD PTR ds:[rsi]
  40a5ae:	and    BYTE PTR [rbp+0x6f],ch
  40a5b1:	jb     0x40a618
  40a5b3:	and    BYTE PTR [rax+rbp*2+0x61],dh
  40a5b7:	outs   dx,BYTE PTR ds:[rsi]
  40a5b8:	and    BYTE PTR [rbx],ah
  40a5ba:	and    BYTE PTR [rdx+0x6f],dh
  40a5bd:	ja     0x40a632
  40a5bf:	add    BYTE PTR [rax],ah
  40a5c1:	sub    eax,0x9232077
  40a5c6:	or     DWORD PTR [rbx+0x65],esi
  40a5c9:	je     0x40a5eb
  40a5cb:	outs   dx,DWORD PTR ds:[rsi]
  40a5cc:	jne    0x40a642
  40a5ce:	jo     0x40a645
  40a5d0:	je     0x40a5f2
  40a5d2:	je     0x40a63d
  40a5d4:	ins    BYTE PTR es:[rdi],dx
  40a5d5:	and    BYTE PTR gs:[rdi+0x69],dh
  40a5d9:	fs je  0x40a644
  40a5dc:	and    BYTE PTR [rax],ch
  40a5de:	jo     0x40a649
  40a5e0:	js     0x40a647
  40a5e2:	ins    BYTE PTR es:[rdi],dx
  40a5e3:	jae    0x40a60e
  40a5e5:	add    BYTE PTR [rax],al
  40a5e7:	add    BYTE PTR [rax],ah
  40a5e9:	sub    eax,0x923206c
  40a5ee:	or     DWORD PTR [rbx+0x65],esi
  40a5f1:	je     0x40a613
  40a5f3:	outs   dx,DWORD PTR ds:[rsi]
  40a5f4:	jne    0x40a66a
  40a5f6:	jo     0x40a66d
  40a5f8:	je     0x40a61a
  40a5fa:	je     0x40a665
  40a5fc:	ins    BYTE PTR es:[rdi],dx
  40a5fd:	and    BYTE PTR gs:[rbp+riz*2+0x6e],ch
  40a602:	addr32 je 0x40a66d
  40a605:	and    BYTE PTR [rax],ch
  40a607:	jo     0x40a672
  40a609:	js     0x40a670
  40a60b:	ins    BYTE PTR es:[rdi],dx
  40a60c:	jae    0x40a637
  40a60e:	add    BYTE PTR [rax],al
  40a610:	and    BYTE PTR [rip+0x736c2066],ch        # 0x73acc67c
  40a616:	(bad)
  40a61b:	or     DWORD PTR [rsi+0x6f],esp
  40a61e:	jb     0x40a683
  40a620:	and    BYTE PTR gs:[rbx+rsi*2+0x62],ch
  40a625:	sub    eax,0x6d2d6f74
  40a62a:	jae    0x40a68e
  40a62c:	and    BYTE PTR [rsi+0x69],al
  40a62f:	ins    BYTE PTR es:[rdi],dx
  40a630:	ins    BYTE PTR es:[rdi],dx
  40a631:	rex.WRXB jb 0x40a698
  40a634:	gs jb  0x40a657
  40a637:	outs   dx,WORD PTR ds:[rsi]
  40a639:	jb     0x40a65b
  40a63b:	outs   dx,DWORD PTR ds:[rsi]
  40a63c:	jne    0x40a6b2
  40a63e:	jo     0x40a6b5
  40a640:	je     0x40a642
  40a642:	add    BYTE PTR [rax],al
  40a644:	add    BYTE PTR [rax],al
  40a646:	add    BYTE PTR [rax],al
  40a648:	and    BYTE PTR [rip+0x736d2066],ch        # 0x73adc6b4
  40a64e:	(bad)
  40a653:	or     DWORD PTR [rsi+0x6f],esp
  40a656:	jb     0x40a6bb
  40a658:	and    BYTE PTR gs:[rbp+0x73],ch
  40a65c:	(bad)  
  40a65d:	sub    eax,0x6c2d6f74
  40a662:	jae    0x40a6c6
  40a664:	and    BYTE PTR [rsi+0x69],al
  40a667:	ins    BYTE PTR es:[rdi],dx
  40a668:	ins    BYTE PTR es:[rdi],dx
  40a669:	rex.WRXB jb 0x40a6d0
  40a66c:	gs jb  0x40a68f
  40a66f:	outs   dx,WORD PTR ds:[rsi]
  40a671:	jb     0x40a693
  40a673:	outs   dx,DWORD PTR ds:[rsi]
  40a674:	jne    0x40a6ea
  40a676:	jo     0x40a6ed
  40a678:	je     0x40a67a
  40a67a:	add    BYTE PTR [rax],al
  40a67c:	add    BYTE PTR [rax],al
  40a67e:	add    BYTE PTR [rax],al
  40a680:	and    BYTE PTR [rip+0x7a6c2063],ch        # 0x7aacc6e9
  40a686:	ja     0x40a6e3
  40a688:	cmp    ch,BYTE PTR [rdi+0x70]
  40a68b:	je     0x40a700
  40a68d:	pop    rbp
  40a68e:	or     DWORD PTR [rbx+0x6f],esp
  40a691:	ins    DWORD PTR es:[rdi],dx
  40a692:	jo     0x40a706
  40a694:	gs jae 0x40a70a
  40a697:	and    BYTE PTR [rdi+0x75],ch
  40a69a:	je     0x40a70c
  40a69c:	jne    0x40a712
  40a69e:	and    BYTE PTR [rdi+0x69],dh
  40a6a1:	je     0x40a70b
  40a6a3:	and    BYTE PTR [rbp+riz*2+0x6d],cl
  40a6a7:	jo     0x40a70e
  40a6a9:	ins    BYTE PTR es:[rdi],dx
  40a6aa:	sub    eax,0x2076695a
  40a6af:	and    BYTE PTR es:[rdi+0x65],dl
  40a6b3:	ins    BYTE PTR es:[rdi],dx
  40a6b4:	movsxd ebp,DWORD PTR [rax+0x20]
  40a6b7:	outs   dx,BYTE PTR gs:[rsi]
  40a6b9:	movsxd ebp,DWORD PTR [rdi+0x64]
  40a6bc:	imul   ebp,DWORD PTR [rsi+0x67],0x632d2000
  40a6c3:	and    BYTE PTR [rdx+0x69],bh
  40a6c6:	jo     0x40a723
  40a6c8:	cmp    ch,BYTE PTR [rdi+0x70]
  40a6cb:	je     0x40a740
  40a6cd:	pop    rbp
  40a6ce:	or     DWORD PTR [rbx+0x6f],esp
  40a6d1:	ins    DWORD PTR es:[rdi],dx
  40a6d2:	jo     0x40a746
  40a6d4:	gs jae 0x40a74a
  40a6d7:	and    BYTE PTR [rdi+0x75],ch
  40a6da:	je     0x40a74c
  40a6dc:	jne    0x40a752
  40a6de:	and    BYTE PTR [rdi+0x69],dh
  40a6e1:	je     0x40a74b
  40a6e3:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40a6e7:	ins    BYTE PTR es:[rdi],dx
  40a6e8:	(bad)  
  40a6e9:	je     0x40a750
  40a6eb:	and    BYTE PTR [rbp+0x6e],ah
  40a6ee:	movsxd ebp,DWORD PTR [rdi+0x64]
  40a6f1:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  40a6f8:	and    BYTE PTR [rip+0x706a2063],ch        # 0x70aac761
  40a6fe:	gs addr32 pop rbx
  40a701:	cmp    ch,BYTE PTR [rdi+0x70]
  40a704:	je     0x40a779
  40a706:	pop    rbp
  40a707:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40a70a:	jo     0x40a77e
  40a70c:	gs jae 0x40a782
  40a70f:	and    BYTE PTR [rdi+0x75],ch
  40a712:	je     0x40a784
  40a714:	jne    0x40a78a
  40a716:	and    BYTE PTR [rdi+0x69],dh
  40a719:	je     0x40a783
  40a71b:	and    BYTE PTR [rdx+0x50],cl
  40a71e:	rex.RB
  40a71f:	rex.RXB and BYTE PTR [r13+0x6e],r12b
  40a723:	movsxd ebp,DWORD PTR [rdi+0x64]
  40a726:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  40a72d:	add    BYTE PTR [rax],al
  40a72f:	add    BYTE PTR [rax],ah
  40a731:	sub    eax,0x61702063
  40a736:	movsxd ebp,DWORD PTR [rbx+0x62]
  40a739:	imul   esi,DWORD PTR [rbx+rsi*2+0x9],0x706d6f63
  40a741:	jb     0x40a7a8
  40a743:	jae    0x40a7b8
  40a745:	and    BYTE PTR [rdi+0x75],ch
  40a748:	je     0x40a7ba
  40a74a:	jne    0x40a7c0
  40a74c:	and    BYTE PTR [rdi+0x69],dh
  40a74f:	je     0x40a7b9
  40a751:	and    BYTE PTR [rax+0x61],dh
  40a754:	movsxd ebp,DWORD PTR [rbx+0x62]
  40a757:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x6f636e65
  40a75f:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x0
  40a767:	add    BYTE PTR [rax],ah
  40a769:	sub    eax,0x33672063
  40a76e:	pop    rbx
  40a76f:	cmp    ch,BYTE PTR [rdi+0x70]
  40a772:	je     0x40a7e7
  40a774:	pop    rbp
  40a775:	or     DWORD PTR [rbx+0x6f],esp
  40a778:	ins    DWORD PTR es:[rdi],dx
  40a779:	jo     0x40a7ed
  40a77b:	gs jae 0x40a7f1
  40a77e:	and    BYTE PTR [rdi+0x75],ch
  40a781:	je     0x40a7f3
  40a783:	jne    0x40a7f9
  40a785:	and    BYTE PTR [rdi+0x69],dh
  40a788:	je     0x40a7f2
  40a78a:	and    BYTE PTR [rbx+0x43],al
  40a78d:	rex.WB push r12
  40a78f:	push   rsp
  40a790:	and    BYTE PTR [rdi+0x72],al
  40a793:	outs   dx,DWORD PTR ds:[rsi]
  40a794:	jne    0x40a806
  40a796:	and    BYTE PTR [rbx],dh
  40a798:	and    BYTE PTR [rbp+0x6e],ah
  40a79b:	movsxd ebp,DWORD PTR [rdi+0x64]
  40a79e:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  40a7a5:	add    BYTE PTR [rax],al
  40a7a7:	add    BYTE PTR [rax],ah
  40a7a9:	sub    eax,0x34672063
  40a7ae:	or     DWORD PTR [rcx],ecx
  40a7b0:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40a7b3:	jo     0x40a827
  40a7b5:	gs jae 0x40a82b
  40a7b8:	and    BYTE PTR [rdi+0x75],ch
  40a7bb:	je     0x40a82d
  40a7bd:	jne    0x40a833
  40a7bf:	and    BYTE PTR [rdi+0x69],dh
  40a7c2:	je     0x40a82c
  40a7c4:	and    BYTE PTR [rbx+0x43],al
  40a7c7:	rex.WB push r12
  40a7c9:	push   rsp
  40a7ca:	and    BYTE PTR [rdi+0x72],al
  40a7cd:	outs   dx,DWORD PTR ds:[rsi]
  40a7ce:	jne    0x40a840
  40a7d0:	and    BYTE PTR [rax+riz*1],dh
  40a7d3:	outs   dx,BYTE PTR gs:[rsi]
  40a7d5:	movsxd ebp,DWORD PTR [rdi+0x64]
  40a7d8:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  40a7df:	add    BYTE PTR [rax],ah
  40a7e1:	sub    eax,0x6f6e2063
  40a7e6:	outs   dx,BYTE PTR ds:[rsi]
  40a7e7:	or     DWORD PTR gs:[rbp+0x73],esi
  40a7eb:	and    BYTE PTR gs:[rsi+0x6f],ch
  40a7ef:	and    BYTE PTR [rbx+0x6f],ah
  40a7f2:	ins    DWORD PTR es:[rdi],dx
  40a7f3:	jo     0x40a867
  40a7f5:	gs jae 0x40a86b
  40a7f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x676c6120
  40a7ff:	outs   dx,DWORD PTR ds:[rsi]
  40a800:	jb     0x40a86b
  40a802:	je     0x40a86c
  40a804:	ins    DWORD PTR es:[rdi],dx
  40a805:	and    BYTE PTR [rdi+0x6e],ch
  40a808:	and    BYTE PTR [rdi+0x75],ch
  40a80b:	je     0x40a87d
  40a80d:	jne    0x40a883
  40a80f:	add    BYTE PTR [rdi+0x72],al
  40a812:	outs   dx,DWORD PTR ds:[rsi]
  40a813:	jne    0x40a885
  40a815:	and    BYTE PTR [rbx],dh
  40a817:	and    BYTE PTR [rdi+0x70],ch
  40a81a:	je     0x40a885
  40a81c:	outs   dx,DWORD PTR ds:[rsi]
  40a81d:	outs   dx,BYTE PTR ds:[rsi]
  40a81e:	jae    0x40a85a
	...
  40a828:	and    BYTE PTR [rcx],dh
  40a82a:	or     DWORD PTR fs:[rcx],ecx
  40a82d:	jne    0x40a8a2
  40a82f:	and    BYTE PTR gs:[rbp+riz*2+0x66],ah
  40a834:	(bad)  
  40a835:	jne    0x40a8a3
  40a837:	je     0x40a859
  40a839:	rex.XB
  40a83a:	rex.XB
  40a83b:	rex.WB push r12
  40a83d:	push   rsp
  40a83e:	and    BYTE PTR [rdi+0x72],al
  40a841:	outs   dx,DWORD PTR ds:[rsi]
  40a842:	jne    0x40a8b4
  40a844:	and    BYTE PTR [rbx],dh
  40a846:	and    BYTE PTR [rcx],dh
  40a848:	rex.R sub eax,0x6f636e65
  40a84e:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x0
  40a856:	add    BYTE PTR [rax],al
  40a858:	and    BYTE PTR [rdx],dh
  40a85a:	or     DWORD PTR fs:[rcx],ecx
  40a85d:	jne    0x40a8d2
  40a85f:	and    BYTE PTR gs:[rdi+0x70],ch
  40a863:	je     0x40a8ce
  40a865:	outs   dx,DWORD PTR ds:[rsi]
  40a866:	outs   dx,BYTE PTR ds:[rsi]
  40a867:	(bad)  
  40a868:	ins    BYTE PTR es:[rdi],dx
  40a869:	and    BYTE PTR [rbx+0x43],al
  40a86c:	rex.WB push r12
  40a86e:	push   rsp
  40a86f:	and    BYTE PTR [rdi+0x72],al
  40a872:	outs   dx,DWORD PTR ds:[rsi]
  40a873:	jne    0x40a8e5
  40a875:	and    BYTE PTR [rbx],dh
  40a877:	and    BYTE PTR [rdx],dh
  40a879:	rex.R sub eax,0x6f636e65
  40a87f:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x69662000
  40a887:	ins    BYTE PTR es:[rdi],dx
  40a888:	ins    BYTE PTR es:[rdi],dx
  40a889:	or     DWORD PTR [rcx],ecx
  40a88b:	(bad)  
  40a88c:	jns    0x40a902
  40a88e:	gs sub eax,0x67696c61
  40a894:	outs   dx,BYTE PTR ds:[rsi]
  40a895:	and    BYTE PTR [rbp+0x4f],al
  40a898:	rex.WR and BYTE PTR [rbx+0x6f],r12b
  40a89c:	fs gs jae 0x40a8a0
  40a8a0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a8a2:	jb     0x40a8c4
  40a8a4:	gs js  0x40a908
  40a8a7:	ins    DWORD PTR es:[rdi],dx
  40a8a8:	jo     0x40a916
  40a8aa:	gs sub al,0x20
  40a8ad:	sub    eax,0x33672063
  40a8b2:	cmp    dh,BYTE PTR [rdx]
  40a8b4:	cmp    ah,BYTE PTR fs:[rsi+0x69]
  40a8b8:	ins    BYTE PTR es:[rdi],dx
  40a8b9:	ins    BYTE PTR es:[rdi],dx
  40a8ba:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40a8be:	addr32 gs je 0x40a8e2
  40a8c2:	rex.RXB xor r13d,DWORD PTR [rip+0x652d4432]        # 0x656decfb
  40a8c9:	outs   dx,BYTE PTR ds:[rsi]
  40a8ca:	movsxd ebp,DWORD PTR [rdi+0x64]
  40a8cd:	gs and BYTE PTR fs:[rcx+riz*2+0x74],ah
  40a8d3:	(bad)  
  40a8d4:	and    BYTE PTR [rdi+0x69],dh
  40a8d7:	je     0x40a941
  40a8d9:	and    BYTE PTR [rdx+0x79],ah
  40a8dc:	je     0x40a943
  40a8de:	sub    eax,0x67696c61
  40a8e3:	outs   dx,BYTE PTR ds:[rsi]
  40a8e4:	gs and BYTE PTR fs:[rbp+0x4f],al
  40a8e9:	rex.WR jae 0x40a8ec
  40a8ec:	rex.WX push rax
  40a8ee:	rex.RB
  40a8ef:	rex.RXB and BYTE PTR [r15+0x70],r13b
  40a8f3:	je     0x40a95e
  40a8f5:	outs   dx,DWORD PTR ds:[rsi]
  40a8f6:	outs   dx,BYTE PTR ds:[rsi]
  40a8f7:	jae    0x40a933
  40a8f9:	add    BYTE PTR [rax],al
  40a8fb:	add    BYTE PTR [rax],al
  40a8fd:	add    BYTE PTR [rax],al
  40a8ff:	add    BYTE PTR [rax],ah
  40a901:	and    ecx,DWORD PTR [rcx]
  40a903:	or     DWORD PTR [rbx+0x65],esi
  40a906:	je     0x40a928
  40a908:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40a90b:	jo     0x40a97f
  40a90d:	gs jae 0x40a983
  40a910:	imul   ebp,DWORD PTR [rdi+0x6e],0x61757120
  40a917:	ins    BYTE PTR es:[rdi],dx
  40a918:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x6576656c
  40a920:	ins    BYTE PTR es:[rdi],dx
  40a921:	and    BYTE PTR [rax],ch
  40a923:	xor    BYTE PTR [rip+0x2c303031],ch        # 0x2c70d95a
  40a929:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40a92d:	(bad)  
  40a92e:	jne    0x40a99c
  40a930:	je     0x40a952
  40a932:	(bad)  
  40a933:	xor    eax,0x29
  40a938:	and    BYTE PTR [rdx+0x9],dh
  40a93b:	or     DWORD PTR [rdi+0x75],ebp
  40a93e:	je     0x40a9b0
  40a940:	jne    0x40a9b6
  40a942:	and    BYTE PTR [rbx+0x6f],ah
  40a945:	ins    BYTE PTR es:[rdi],dx
  40a946:	outs   dx,DWORD PTR ds:[rsi]
  40a947:	jb     0x40a969
  40a949:	imul   ebp,DWORD PTR [rbp+0x61],0x61206567
  40a950:	jae    0x40a972
  40a952:	push   rdx
  40a953:	rex.RXB
  40a954:	rex.X and BYTE PTR [rdx+0x61],sil
  40a958:	je     0x40a9c2
  40a95a:	gs jb  0x40a97d
  40a95d:	je     0x40a9c7
  40a95f:	(bad)  
  40a960:	outs   dx,BYTE PTR ds:[rsi]
  40a961:	and    BYTE PTR [rcx+0x43],bl
  40a964:	(bad)  
  40a966:	jb     0x40a968
  40a968:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a96a:	jb     0x40a98c
  40a96c:	gs js  0x40a9d0
  40a96f:	ins    DWORD PTR es:[rdi],dx
  40a970:	jo     0x40a9de
  40a972:	gs sub al,0x20
  40a975:	sub    eax,0x706a2063
  40a97a:	cmp    dh,BYTE PTR gs:[edx+0x3a]
  40a97f:	xor    eax,0x6f742030
  40a984:	and    BYTE PTR [rdi+0x65],ah
  40a987:	je     0x40a9a9
  40a989:	rex.WX push rax
  40a98b:	rex.RB
  40a98c:	rex.RXB sub eax,0x6f636e65
  40a992:	fs gs and BYTE PTR fs:[rdx+0x47],dl
  40a998:	and    BYTE PTR [rcx+r12*2+0x74],spl
  40a99d:	(bad)  
  40a99e:	and    BYTE PTR [rdi+0x69],dh
  40a9a1:	je     0x40aa0b
  40a9a3:	and    BYTE PTR [rip+0x63202530],dh        # 0x6360ced9
  40a9a9:	outs   dx,DWORD PTR ds:[rsi]
  40a9aa:	ins    DWORD PTR es:[rdi],dx
  40a9ab:	jo     0x40a9db
  40a9ad:	and    BYTE PTR [rcx+0x75],dh
  40a9b0:	(bad)  
  40a9b1:	ins    BYTE PTR es:[rdi],dx
  40a9b2:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x20575a4c
  40a9ba:	(bad)  
  40a9bb:	outs   dx,BYTE PTR ds:[rsi]
  40a9bc:	and    BYTE PTR fs:[rbp+riz*2+0x66],ah
  40a9c1:	ins    BYTE PTR es:[rdi],dx
  40a9c2:	(bad)  
  40a9c3:	je     0x40aa2a
  40a9c5:	and    BYTE PTR [rdi+0x70],ch
  40a9c8:	je     0x40aa33
  40a9ca:	outs   dx,DWORD PTR ds:[rsi]
  40a9cb:	outs   dx,BYTE PTR ds:[rsi]
  40a9cc:	jae    0x40aa08
  40a9ce:	add    BYTE PTR [rax],ah
  40a9d0:	and    ecx,DWORD PTR [rcx]
  40a9d2:	or     DWORD PTR [rbx+0x65],esi
  40a9d5:	je     0x40a9f7
  40a9d7:	jo     0x40aa4b
  40a9d9:	gs imul esp,DWORD PTR fs:[rbx+0x74],0x7620726f
  40a9e2:	(bad)  
  40a9e3:	ins    BYTE PTR es:[rdi],dx
  40a9e4:	jne    0x40aa4b
  40a9e6:	add    BYTE PTR [rax],al
  40a9e8:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a9ea:	jb     0x40aa0c
  40a9ec:	gs js  0x40aa50
  40a9ef:	ins    DWORD PTR es:[rdi],dx
  40a9f0:	jo     0x40aa5e
  40a9f2:	gs sub al,0x20
  40a9f5:	sub    eax,0x7a6c2063
  40a9fa:	ja     0x40aa36
  40a9fc:	xor    ah,BYTE PTR [rax]
  40a9fe:	je     0x40aa6f
  40aa00:	and    BYTE PTR [rdi+0x65],ah
  40aa03:	je     0x40aa25
  40aa05:	rex.WR pop rdx
  40aa07:	push   rdi
  40aa08:	sub    eax,0x6f636e65
  40aa0d:	fs gs and BYTE PTR fs:[rcx+riz*2+0x74],ah
  40aa14:	(bad)  
  40aa15:	and    BYTE PTR [rdi+0x69],dh
  40aa18:	je     0x40aa82
  40aa1a:	and    BYTE PTR [rax+0x6f],ch
  40aa1d:	jb     0x40aa88
  40aa1f:	jp     0x40aa90
  40aa21:	outs   dx,BYTE PTR ds:[rsi]
  40aa22:	je     0x40aa85
  40aa24:	ins    BYTE PTR es:[rdi],dx
  40aa25:	and    BYTE PTR [rcx+rbp*2+0x66],ah
  40aa29:	data16 gs jb 0x40aa92
  40aa2d:	outs   dx,BYTE PTR ds:[rsi]
  40aa2e:	movsxd ebp,DWORD PTR [rcx+0x6e]
  40aa31:	add    BYTE PTR [eax],al
	...
  40aa40:	add    DWORD PTR [rcx],eax
  40aa42:	add    DWORD PTR [rcx],eax
  40aa44:	add    DWORD PTR [rcx],eax
  40aa46:	add    DWORD PTR [rcx],eax
  40aa48:	add    DWORD PTR [rcx],eax
  40aa4a:	add    DWORD PTR [rcx],eax
  40aa4c:	add    DWORD PTR [rcx],eax
  40aa4e:	add    DWORD PTR [rcx],eax
  40aa50:	add    BYTE PTR [rax],al
  40aa52:	add    BYTE PTR [rax],al
  40aa54:	add    BYTE PTR [rax],al
  40aa56:	add    BYTE PTR [rax+0x0],al
	...
  40aa64:	add    BYTE PTR [rax],al
  40aa66:	loopne 0x40aaa7
  40aa68:	add    BYTE PTR [rax],al
  40aa6a:	add    BYTE PTR [rax],al
  40aa6c:	add    BYTE PTR [rax],al
  40aa6e:	lock (bad) 
  40aa70:	shl    ch,0x40
  40aa73:	add    BYTE PTR [rax],al
  40aa75:	add    BYTE PTR [rax],al
  40aa77:	add    al,al
  40aa79:	loopne 0x40aabb
  40aa7b:	add    BYTE PTR [rax],al
  40aa7d:	add    BYTE PTR [rax],al
  40aa7f:	add    BYTE PTR [rax+0x5d],ah
  40aa82:	add    BYTE PTR [rax],al
	...
  40aa8d:	add    BYTE PTR [rax],al
  40aa8f:	add    BYTE PTR [rcx+0x72],al
  40aa92:	addr32 jne 0x40ab02
  40aa95:	outs   dx,BYTE PTR gs:[rsi]
  40aa97:	je     0x40aab9
  40aa99:	outs   dx,DWORD PTR fs:[rsi]
  40aa9b:	ins    DWORD PTR es:[rdi],dx
  40aa9c:	(bad)  
  40aa9d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  40aaa4:	jb     0x40aac6
  40aaa6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40aaaa:	rex.B
  40aaab:	rex.WB
  40aaac:	rex.WRX sub QWORD PTR [rax],r8
  40aaaf:	rex.B jb 0x40ab19
  40aab2:	jne    0x40ab21
  40aab4:	outs   dx,BYTE PTR gs:[rsi]
  40aab6:	je     0x40aad8
  40aab8:	jae    0x40ab23
  40aaba:	outs   dx,BYTE PTR ds:[rsi]
  40aabb:	addr32 jne 0x40ab2a
  40aabe:	(bad)  
  40aabf:	jb     0x40ab2a
  40aac1:	je     0x40ab3c
  40aac3:	and    BYTE PTR [rax],ch
  40aac5:	push   rbx
  40aac6:	rex.WB
  40aac7:	rex.RXB
  40aac8:	rex.WRX sub QWORD PTR [rax],r8
  40aacb:	add    BYTE PTR [rax],al
  40aacd:	add    BYTE PTR [rax],al
  40aacf:	add    BYTE PTR [rdi+0x76],cl
  40aad2:	gs jb  0x40ab3b
  40aad5:	ins    BYTE PTR es:[rdi],dx
  40aad6:	outs   dx,DWORD PTR ds:[rsi]
  40aad7:	ja     0x40aaf9
  40aad9:	jb     0x40ab3c
  40aadb:	outs   dx,BYTE PTR ds:[rsi]
  40aadc:	and    BYTE PTR gs:[ebp+0x72],ah
  40aae1:	jb     0x40ab52
  40aae3:	jb     0x40ab05
  40aae5:	sub    BYTE PTR [rdi+0x56],cl
  40aae8:	rex.RB push r10
  40aaea:	rex.RX
  40aaeb:	rex.WR
  40aaec:	rex.WRXB push r15
  40aaee:	sub    DWORD PTR [rax],eax
  40aaf0:	push   rax
  40aaf1:	(bad)  
  40aaf2:	jb     0x40ab68
  40aaf4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40aafb:	jae    0x40ab1d
  40aafd:	outs   dx,DWORD PTR ds:[rsi]
  40aafe:	data16 and BYTE PTR [rbx+0x69],dh
  40ab02:	outs   dx,BYTE PTR ds:[esi]
  40ab04:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40ab0b:	and    BYTE PTR gs:[rax],ch
  40ab0e:	push   rax
  40ab0f:	rex.WR
  40ab10:	rex.WRXB push r11
  40ab12:	push   rbx
  40ab13:	sub    DWORD PTR [rax],eax
  40ab15:	add    BYTE PTR [rax],al
  40ab17:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40ab1b:	(bad)  
  40ab1c:	ins    BYTE PTR es:[rdi],dx
  40ab1d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40ab21:	jae    0x40ab43
  40ab23:	outs   dx,DWORD PTR ds:[rsi]
  40ab24:	data16 and BYTE PTR [rbx+0x69],dh
  40ab28:	outs   dx,BYTE PTR ds:[esi]
  40ab2a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40ab31:	and    BYTE PTR gs:[rax],ch
  40ab34:	push   rsp
  40ab35:	rex.WR
  40ab36:	rex.WRXB push r11
  40ab38:	push   rbx
  40ab39:	sub    DWORD PTR [rax],eax
  40ab3b:	add    BYTE PTR [rax],al
  40ab3d:	add    BYTE PTR [rax],al
  40ab3f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40ab43:	and    BYTE PTR [rdx+0x65],dh
  40ab46:	jae    0x40abbd
  40ab48:	ins    BYTE PTR es:[rdi],dx
  40ab49:	je     0x40ab6b
  40ab4b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40ab52:	jae    0x40abc1
  40ab54:	(bad)  
  40ab55:	ins    BYTE PTR es:[rdi],dx
  40ab56:	ins    BYTE PTR es:[rdi],dx
  40ab57:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40ab5b:	(bad)  
  40ab5c:	and    BYTE PTR gs:[rdx+0x65],dh
  40ab60:	jo     0x40abd4
  40ab62:	gs jae 0x40abca
  40ab65:	outs   dx,BYTE PTR ds:[rsi]
  40ab66:	je     0x40abcd
  40ab68:	and    BYTE PTR fs:[rax],ch
  40ab6b:	push   rbp
  40ab6c:	rex.WRX
  40ab6d:	rex.R
  40ab6e:	rex.RB push r10
  40ab70:	rex.RX
  40ab71:	rex.WR
  40ab72:	rex.WRXB push r15
  40ab74:	sub    DWORD PTR [rax],eax
  40ab76:	push   rbp
  40ab77:	outs   dx,BYTE PTR ds:[rsi]
  40ab78:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40ab7c:	outs   dx,BYTE PTR ds:[rsi]
  40ab7d:	and    BYTE PTR [rbp+0x72],ah
  40ab80:	jb     0x40abf1
  40ab82:	jb     0x40ab84
  40ab84:	add    BYTE PTR [rax],al
  40ab86:	add    BYTE PTR [rax],al
  40ab88:	pop    rdi
  40ab89:	ins    DWORD PTR es:[rdi],dx
  40ab8a:	(bad)  
  40ab8b:	je     0x40abf5
  40ab8d:	gs jb  0x40ac02
  40ab90:	sub    BYTE PTR [rcx],ch
  40ab92:	cmp    ah,BYTE PTR [rax]
  40ab94:	and    eax,0x6e692073
  40ab99:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765d412
  40ab9f:	sub    al,0x20
  40aba1:	and    eax,0x20202967
  40aba6:	sub    BYTE PTR [rdx+0x65],dh
  40aba9:	je     0x40ac21
  40abab:	(bad)  
  40abac:	ins    BYTE PTR es:[rdi],dx
  40abad:	cmp    eax,0xa296725
  40abb2:	add    BYTE PTR [rax],al
  40abb4:	jl     0x40ab69
  40abb6:	(bad)  
  40abb7:	(bad)  
  40abb8:	mov    ebp,0x2cffffb2
  40abbd:	mov    bl,0xff
  40abbf:	(bad)  
  40abc0:	cmp    al,0xb3
  40abc2:	(bad)  
  40abc3:	dec    DWORD PTR [rbx+rsi*4-0x1]
  40abc7:	call   FWORD PTR [rbx+rsi*4-0x1]
  40abcb:	jmp    FWORD PTR [rbx+rsi*4-0x1]
  40abcf:	dec    DWORD PTR [rbp+0x69]
  40abd2:	outs   dx,BYTE PTR ds:[rsi]
  40abd3:	addr32 ja 0x40ac03
  40abd6:	ja     0x40ac0e
  40abd8:	xor    al,0x20
  40abda:	jb     0x40ac51
  40abdc:	outs   dx,BYTE PTR ds:[rsi]
  40abdd:	je     0x40ac48
  40abdf:	ins    DWORD PTR es:[rdi],dx
  40abe0:	and    BYTE PTR gs:[rsi+0x61],ah
  40abe4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40abec:	add    BYTE PTR [rax],al
  40abee:	add    BYTE PTR [rax],al
  40abf0:	rex.B
  40abf1:	fs fs jb 0x40ac5a
  40abf5:	jae    0x40ac6a
  40abf7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8cc6d
  40abfd:	jae    0x40ac1f
  40abff:	outs   dx,BYTE PTR ds:[rsi]
  40ac00:	outs   dx,DWORD PTR ds:[rsi]
  40ac01:	and    BYTE PTR [rcx+0x6d],ch
  40ac04:	(bad)  
  40ac05:	addr32 gs sub eax,0x74636573
  40ac0c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  40ac13:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40ac1a:	jne    0x40ac81
  40ac1c:	jb     0x40ac97
  40ac1e:	and    BYTE PTR [rsi+0x61],ah
  40ac21:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  40ac29:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2cc93
  40ac2f:	je     0x40ac96
  40ac31:	jae    0x40ac53
  40ac33:	(bad)  
  40ac34:	je     0x40ac56
  40ac36:	(bad)  
  40ac37:	fs fs jb 0x40aca0
  40ac3b:	jae    0x40acb0
  40ac3d:	and    BYTE PTR [rip+0x70],ah        # 0x40acb3
  40ac43:	add    BYTE PTR [rax],al
  40ac45:	add    BYTE PTR [rax],al
  40ac47:	add    BYTE PTR [rax],ah
  40ac49:	and    BYTE PTR [rsi+0x69],dl
  40ac4c:	jb     0x40acc2
  40ac4e:	jne    0x40acb1
  40ac50:	ins    BYTE PTR es:[rdi],dx
  40ac51:	push   rax
  40ac52:	jb     0x40acc3
  40ac54:	je     0x40acbb
  40ac56:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40ac5a:	(bad)  
  40ac5b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40ac63:	push   0x646f6320
  40ac68:	and    BYTE PTR gs:[rax],dh
  40ac6b:	js     0x40ac92
  40ac6d:	js     0x40ac6f
  40ac6f:	add    BYTE PTR [rax],ah
  40ac71:	and    BYTE PTR [rbp+0x6e],dl
  40ac74:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40ac78:	outs   dx,BYTE PTR ds:[rsi]
  40ac79:	and    BYTE PTR [rax+0x73],dh
  40ac7c:	gs jne 0x40ace3
  40ac7f:	outs   dx,DWORD PTR ds:[rsi]
  40ac80:	and    BYTE PTR [rdx+0x65],dh
  40ac83:	ins    BYTE PTR es:[rdi],dx
  40ac84:	outs   dx,DWORD PTR ds:[rsi]
  40ac85:	movsxd esp,DWORD PTR [rcx+0x74]
  40ac88:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40ac8f:	je     0x40ad00
  40ac91:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40ac94:	and    BYTE PTR [rsi+0x65],dh
  40ac97:	jb     0x40ad0c
  40ac99:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40aca0:	or     al,BYTE PTR [rax]
  40aca2:	add    BYTE PTR [rax],al
  40aca4:	add    BYTE PTR [rax],al
  40aca6:	add    BYTE PTR [rax],al
  40aca8:	and    BYTE PTR [rax],ah
  40acaa:	push   rbp
  40acab:	outs   dx,BYTE PTR ds:[rsi]
  40acac:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40acb0:	outs   dx,BYTE PTR ds:[rsi]
  40acb1:	and    BYTE PTR [rax+0x73],dh
  40acb4:	gs jne 0x40ad1b
  40acb7:	outs   dx,DWORD PTR ds:[rsi]
  40acb8:	and    BYTE PTR [rdx+0x65],dh
  40acbb:	ins    BYTE PTR es:[rdi],dx
  40acbc:	outs   dx,DWORD PTR ds:[rsi]
  40acbd:	movsxd esp,DWORD PTR [rcx+0x74]
  40acc0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  40acc7:	and    BYTE PTR [rbx+0x69],dh
  40acca:	jp     0x40ad31
  40accc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4adb36
	...
  40acde:	add    BYTE PTR [rax],al
  40ace0:	cs jo  0x40ad47
  40ace3:	(bad)  
  40ace4:	je     0x40ad47
	...
  40acfe:	add    BYTE PTR [rax],al
  40ad00:	and    eax,0x203a73
  40ad05:	push   rax
  40ad06:	rex.WRXB push r11
  40ad08:	rex.WB pop r8
  40ad0a:	rex.WR pop rcx
  40ad0c:	pop    rdi
  40ad0d:	rex.XB
  40ad0e:	rex.WRXB push r10
  40ad10:	push   rdx
  40ad11:	rex.RB
  40ad12:	rex.XB push r12
	...
  40ad20:	jne    0x40ad90
  40ad22:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40ad26:	outs   dx,BYTE PTR ds:[rsi]
  40ad27:	and    BYTE PTR [rdi+0x70],ch
  40ad2a:	je     0x40ad95
  40ad2c:	outs   dx,DWORD PTR ds:[rsi]
  40ad2d:	outs   dx,BYTE PTR ds:[rsi]
  40ad2e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x7365cd61
	...
  40ad40:	jne    0x40adb0
  40ad42:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40ad46:	outs   dx,BYTE PTR ds:[rsi]
  40ad47:	and    BYTE PTR [rdi+0x70],ch
  40ad4a:	je     0x40adb5
  40ad4c:	outs   dx,DWORD PTR ds:[rsi]
  40ad4d:	outs   dx,BYTE PTR ds:[rsi]
  40ad4e:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6365cd81
	...
  40ad60:	outs   dx,DWORD PTR ds:[rsi]
  40ad61:	jo     0x40add7
  40ad63:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  40ad6a:	jae    0x40adda
  40ad6c:	(bad)  
  40ad6d:	je     0x40ad8f
  40ad6f:	je     0x40add2
  40ad71:	imul   esp,DWORD PTR [rbp+0x20],0x61
  40ad75:	outs   dx,BYTE PTR ds:[rsi]
  40ad76:	and    BYTE PTR [rcx+0x72],ah
  40ad79:	addr32 jne 0x40ade9
  40ad7c:	outs   dx,BYTE PTR gs:[rsi]
  40ad7e:	je     0x40ada0
  40ad80:	sub    eax,0x2e25202d
  40ad85:	sub    dh,BYTE PTR [rbx+0x0]
	...
  40ad90:	(bad)  
  40ad91:	ins    DWORD PTR es:[rdi],dx
  40ad92:	(bad)  
  40ad93:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  40ad9a:	outs   dx,DWORD PTR ds:[rsi]
  40ad9b:	jo     0x40ae11
  40ad9d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  40ada4:	and    eax,0x732a2e
	...
  40adbd:	add    BYTE PTR [rax],al
  40adbf:	add    BYTE PTR [rdi+0x70],ch
  40adc2:	je     0x40ae2d
  40adc4:	outs   dx,DWORD PTR ds:[rsi]
  40adc5:	outs   dx,BYTE PTR ds:[rsi]
  40adc6:	and    BYTE PTR [rdx+0x65],dh
  40adc9:	jno    0x40ae40
  40adcb:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  40add2:	and    BYTE PTR [rcx+0x72],ah
  40add5:	addr32 jne 0x40ae45
  40add8:	outs   dx,BYTE PTR gs:[rsi]
  40adda:	je     0x40adfc
  40addc:	sub    eax,0x7325202d
	...
  40adfd:	add    BYTE PTR [rax],al
  40adff:	add    BYTE PTR [rdi+0x70],ch
  40ae02:	je     0x40ae6d
  40ae04:	outs   dx,DWORD PTR ds:[rsi]
  40ae05:	outs   dx,BYTE PTR ds:[rsi]
  40ae06:	and    BYTE PTR [rdx+0x65],dh
  40ae09:	jno    0x40ae80
  40ae0b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  40ae12:	and    BYTE PTR [rcx+0x72],ah
  40ae15:	addr32 jne 0x40ae85
  40ae18:	outs   dx,BYTE PTR gs:[rsi]
  40ae1a:	je     0x40ae3c
  40ae1c:	sub    eax,0x6325202d
	...
  40ae3d:	add    BYTE PTR [rax],al
  40ae3f:	add    BYTE PTR [rax],dh
  40ae41:	xchg   ebx,eax
  40ae42:	add    BYTE PTR [rax],al
	...
  40ae4d:	add    BYTE PTR [rax],al
  40ae4f:	add    BYTE PTR [rax-0x6d],dh
  40ae52:	add    BYTE PTR [rax],al
	...
  40ae5d:	add    BYTE PTR [rax],al
  40ae5f:	add    BYTE PTR [rax+0x4084],al
	...
  40ae6d:	add    BYTE PTR [rax],al
  40ae6f:	add    al,dl
  40ae71:	mov    bl,0x40
	...
  40ae7f:	add    al,dl
  40ae81:	mov    bl,0x40
	...
  40ae8f:	add    BYTE PTR [rax+0x40aa],al
	...
  40aea1:	add    BYTE PTR [rax+0x0],al
	...
  40aeb0:	pushf  
  40aeb1:	hlt    
  40aeb2:	add    BYTE PTR [rax],al
	...
  40aebd:	add    BYTE PTR [rax],al
  40aebf:	add    BYTE PTR [rsp+rsi*8+0x40],dh
	...
  40aece:	add    BYTE PTR [rax],al
  40aed0:	fdivr  st(4),st
  40aed2:	add    BYTE PTR [rax],al
	...
  40aedd:	add    BYTE PTR [rax],al
  40aedf:	add    ah,dh
  40aee1:	hlt    
  40aee2:	add    BYTE PTR [rax],al
	...
  40aeed:	add    BYTE PTR [rax],al
  40aeef:	add    BYTE PTR [rsi*8+0x40],cl
	...
  40aefe:	add    BYTE PTR [rax],al
  40af00:	add    bh,ah
  40af02:	add    BYTE PTR [rax],al
	...
  40af0d:	add    BYTE PTR [rax],al
  40af0f:	add    BYTE PTR [rax-0x16],ch
  40af12:	add    BYTE PTR [rax],al
	...
  40af1d:	add    BYTE PTR [rax],al
  40af1f:	add    BYTE PTR [rax-0x16],ah
  40af22:	add    BYTE PTR [rax],al
	...
  40af2d:	add    BYTE PTR [rax],al
  40af2f:	add    BYTE PTR [rax-0x16],dl
  40af32:	add    BYTE PTR [rax],al
	...
  40af3d:	add    BYTE PTR [rax],al
  40af3f:	add    BYTE PTR [rax-0x16],bl
  40af42:	add    BYTE PTR [rax],al
	...
  40af51:	add    BYTE PTR [rcx+0x0],al
	...
  40af60:	adc    BYTE PTR [rax],al
  40af62:	add    BYTE PTR [r8],al
	...
  40af6d:	add    BYTE PTR [rax],al
  40af6f:	add    BYTE PTR [rax],bl
  40af71:	add    BYTE PTR [rcx+0x0],al
	...
  40af80:	xor    BYTE PTR [rax],al
  40af82:	add    BYTE PTR [r8],al
	...
  40af8d:	add    BYTE PTR [rax],al
  40af8f:	add    BYTE PTR [rax+0x40e0],al
	...
  40af9d:	add    BYTE PTR [rax],al
  40af9f:	add    al,dl
  40afa1:	out    0x40,al
	...
  40afaf:	add    al,dh
  40afb1:	data16 add BYTE PTR [rax],al
	...
  40afbd:	add    BYTE PTR [rax],al
  40afbf:	add    BYTE PTR [rax+0x5e],al
  40afc2:	add    BYTE PTR [rax],al
	...
  40afcd:	add    BYTE PTR [rax],al
  40afcf:	add    BYTE PTR [rax+0x40e6],al
	...
  40afdd:	add    BYTE PTR [rax],al
  40afdf:	add    BYTE PTR [rax+0x40e6],dh
	...
  40afed:	add    BYTE PTR [rax],al
  40afef:	add    BYTE PTR [rax+0x40e0],dl
	...
  40affd:	add    BYTE PTR [rax],al
  40afff:	add    BYTE PTR [rax+0x40e6],bl
	...
  40b00d:	add    BYTE PTR [rax],al
  40b00f:	add    BYTE PTR [rsi+riz*8+0x40],dl
	...
  40b01e:	add    BYTE PTR [rax],al
  40b020:	nop
  40b021:	out    0x40,al
	...
  40b02f:	add    BYTE PTR [rax+0x40ea],dl
	...
  40b03d:	add    BYTE PTR [rax],al
  40b03f:	add    BYTE PTR [rbx+rdx*4+0x40],bl
	...
  40b04f:	add    BYTE PTR [rdi+0x43],al
  40b052:	rex.XB cmp spl,BYTE PTR [r8]
  40b055:	sub    BYTE PTR [rdi+0x4e],al
  40b058:	push   rbp
  40b059:	sub    DWORD PTR [rax],esp
  40b05b:	xor    al,0x2e
  40b05d:	cmp    DWORD PTR [rsi],ebp
  40b05f:	xor    al,0x0
	...
  40b06d:	add    BYTE PTR [rax],al
  40b06f:	add    BYTE PTR [rdi+0x43],al
  40b072:	rex.XB cmp spl,BYTE PTR [r8]
  40b075:	sub    BYTE PTR [rdi+0x4e],al
  40b078:	push   rbp
  40b079:	sub    DWORD PTR [rax],esp
  40b07b:	xor    al,0x2e
  40b07d:	cmp    DWORD PTR [rsi],ebp
  40b07f:	xor    al,0x0
	...
  40b08d:	add    BYTE PTR [rax],al
  40b08f:	add    BYTE PTR [rdi+0x43],al
  40b092:	rex.XB cmp spl,BYTE PTR [r8]
  40b095:	sub    BYTE PTR [rdi+0x4e],al
  40b098:	push   rbp
  40b099:	sub    DWORD PTR [rax],esp
  40b09b:	xor    al,0x2e
  40b09d:	cmp    DWORD PTR [rsi],ebp
  40b09f:	xor    al,0x0
	...
  40b0ad:	add    BYTE PTR [rax],al
  40b0af:	add    BYTE PTR [rdi+0x43],al
  40b0b2:	rex.XB cmp spl,BYTE PTR [r8]
  40b0b5:	sub    BYTE PTR [rdi+0x4e],al
  40b0b8:	push   rbp
  40b0b9:	sub    DWORD PTR [rax],esp
  40b0bb:	xor    al,0x2e
  40b0bd:	cmp    DWORD PTR [rsi],ebp
  40b0bf:	xor    al,0x0
	...
  40b0cd:	add    BYTE PTR [rax],al
  40b0cf:	add    BYTE PTR [rdi+0x43],al
  40b0d2:	rex.XB cmp spl,BYTE PTR [r8]
  40b0d5:	sub    BYTE PTR [rdi+0x4e],al
  40b0d8:	push   rbp
  40b0d9:	sub    DWORD PTR [rax],esp
  40b0db:	xor    al,0x2e
  40b0dd:	cmp    DWORD PTR [rsi],ebp
  40b0df:	xor    al,0x0
	...
  40b0ed:	add    BYTE PTR [rax],al
  40b0ef:	add    BYTE PTR [rdi+0x43],al
  40b0f2:	rex.XB cmp spl,BYTE PTR [r8]
  40b0f5:	sub    BYTE PTR [rdi+0x4e],al
  40b0f8:	push   rbp
  40b0f9:	sub    DWORD PTR [rax],esp
  40b0fb:	xor    al,0x2e
  40b0fd:	cmp    DWORD PTR [rsi],ebp
  40b0ff:	xor    al,0x0
	...
  40b10d:	add    BYTE PTR [rax],al
  40b10f:	add    BYTE PTR [rdi+0x43],al
  40b112:	rex.XB cmp spl,BYTE PTR [r8]
  40b115:	sub    BYTE PTR [rdi+0x4e],al
  40b118:	push   rbp
  40b119:	sub    DWORD PTR [rax],esp
  40b11b:	xor    al,0x2e
  40b11d:	cmp    DWORD PTR [rsi],ebp
  40b11f:	xor    al,0x0
	...
  40b12d:	add    BYTE PTR [rax],al
  40b12f:	add    BYTE PTR [rdi+0x43],al
  40b132:	rex.XB cmp spl,BYTE PTR [r8]
  40b135:	sub    BYTE PTR [rdi+0x4e],al
  40b138:	push   rbp
  40b139:	sub    DWORD PTR [rax],esp
  40b13b:	xor    al,0x2e
  40b13d:	cmp    DWORD PTR [rsi],ebp
  40b13f:	xor    al,0x0
	...
  40b14d:	add    BYTE PTR [rax],al
  40b14f:	add    BYTE PTR [rdi+0x43],al
  40b152:	rex.XB cmp spl,BYTE PTR [r8]
  40b155:	sub    BYTE PTR [rdi+0x4e],al
  40b158:	push   rbp
  40b159:	sub    DWORD PTR [rax],esp
  40b15b:	xor    al,0x2e
  40b15d:	cmp    DWORD PTR [rsi],ebp
  40b15f:	xor    al,0x0
	...
  40b16d:	add    BYTE PTR [rax],al
  40b16f:	add    BYTE PTR [rdi+0x43],al
  40b172:	rex.XB cmp spl,BYTE PTR [r8]
  40b175:	sub    BYTE PTR [rdi+0x4e],al
  40b178:	push   rbp
  40b179:	sub    DWORD PTR [rax],esp
  40b17b:	xor    al,0x2e
  40b17d:	cmp    DWORD PTR [rsi],ebp
  40b17f:	xor    al,0x0
	...
  40b18d:	add    BYTE PTR [rax],al
  40b18f:	add    BYTE PTR [rdi+0x43],al
  40b192:	rex.XB cmp spl,BYTE PTR [r8]
  40b195:	sub    BYTE PTR [rdi+0x4e],al
  40b198:	push   rbp
  40b199:	sub    DWORD PTR [rax],esp
  40b19b:	xor    al,0x2e
  40b19d:	cmp    DWORD PTR [rsi],ebp
  40b19f:	xor    al,0x0
	...
  40b1ad:	add    BYTE PTR [rax],al
  40b1af:	add    BYTE PTR [rdi+0x43],al
  40b1b2:	rex.XB cmp spl,BYTE PTR [r8]
  40b1b5:	sub    BYTE PTR [rdi+0x4e],al
  40b1b8:	push   rbp
  40b1b9:	sub    DWORD PTR [rax],esp
  40b1bb:	xor    al,0x2e
  40b1bd:	cmp    DWORD PTR [rsi],ebp
  40b1bf:	xor    al,0x0
	...
  40b1cd:	add    BYTE PTR [rax],al
  40b1cf:	add    BYTE PTR [rdi+0x43],al
  40b1d2:	rex.XB cmp spl,BYTE PTR [r8]
  40b1d5:	sub    BYTE PTR [rdi+0x4e],al
  40b1d8:	push   rbp
  40b1d9:	sub    DWORD PTR [rax],esp
  40b1db:	xor    al,0x2e
  40b1dd:	cmp    DWORD PTR [rsi],ebp
  40b1df:	xor    al,0x0
	...
  40b1ed:	add    BYTE PTR [rax],al
  40b1ef:	add    BYTE PTR [rdi+0x43],al
  40b1f2:	rex.XB cmp spl,BYTE PTR [r8]
  40b1f5:	sub    BYTE PTR [rdi+0x4e],al
  40b1f8:	push   rbp
  40b1f9:	sub    DWORD PTR [rax],esp
  40b1fb:	xor    al,0x2e
  40b1fd:	cmp    DWORD PTR [rsi],ebp
  40b1ff:	xor    al,0x0
	...
  40b20d:	add    BYTE PTR [rax],al
  40b20f:	add    BYTE PTR [rdi+0x43],al
  40b212:	rex.XB cmp spl,BYTE PTR [r8]
  40b215:	sub    BYTE PTR [rdi+0x4e],al
  40b218:	push   rbp
  40b219:	sub    DWORD PTR [rax],esp
  40b21b:	xor    al,0x2e
  40b21d:	cmp    DWORD PTR [rsi],ebp
  40b21f:	xor    al,0x0
	...
  40b22d:	add    BYTE PTR [rax],al
  40b22f:	add    BYTE PTR [rdi+0x43],al
  40b232:	rex.XB cmp spl,BYTE PTR [r8]
  40b235:	sub    BYTE PTR [rdi+0x4e],al
  40b238:	push   rbp
  40b239:	sub    DWORD PTR [rax],esp
  40b23b:	xor    al,0x2e
  40b23d:	cmp    DWORD PTR [rsi],ebp
  40b23f:	xor    al,0x0
	...
  40b24d:	add    BYTE PTR [rax],al
  40b24f:	add    BYTE PTR [rdi+0x43],al
  40b252:	rex.XB cmp spl,BYTE PTR [r8]
  40b255:	sub    BYTE PTR [rdi+0x4e],al
  40b258:	push   rbp
  40b259:	sub    DWORD PTR [rax],esp
  40b25b:	xor    al,0x2e
  40b25d:	cmp    DWORD PTR [rsi],ebp
  40b25f:	xor    al,0x0
	...
  40b26d:	add    BYTE PTR [rax],al
  40b26f:	add    BYTE PTR [rdi+0x43],al
  40b272:	rex.XB cmp spl,BYTE PTR [r8]
  40b275:	sub    BYTE PTR [rdi+0x4e],al
  40b278:	push   rbp
  40b279:	sub    DWORD PTR [rax],esp
  40b27b:	xor    al,0x2e
  40b27d:	cmp    DWORD PTR [rsi],ebp
  40b27f:	xor    al,0x0
	...
  40b28d:	add    BYTE PTR [rax],al
  40b28f:	add    BYTE PTR [rdi+0x43],al
  40b292:	rex.XB cmp spl,BYTE PTR [r8]
  40b295:	sub    BYTE PTR [rdi+0x4e],al
  40b298:	push   rbp
  40b299:	sub    DWORD PTR [rax],esp
  40b29b:	xor    al,0x2e
  40b29d:	cmp    DWORD PTR [rsi],ebp
  40b29f:	xor    al,0x0
	...
  40b2ad:	add    BYTE PTR [rax],al
  40b2af:	add    BYTE PTR [rdi+0x43],al
  40b2b2:	rex.XB cmp spl,BYTE PTR [r8]
  40b2b5:	sub    BYTE PTR [rdi+0x4e],al
  40b2b8:	push   rbp
  40b2b9:	sub    DWORD PTR [rax],esp
  40b2bb:	xor    al,0x2e
  40b2bd:	cmp    DWORD PTR [rsi],ebp
  40b2bf:	xor    al,0x0
	...
  40b2cd:	add    BYTE PTR [rax],al
  40b2cf:	add    BYTE PTR [rdi+0x43],al
  40b2d2:	rex.XB cmp spl,BYTE PTR [r8]
  40b2d5:	sub    BYTE PTR [rdi+0x4e],al
  40b2d8:	push   rbp
  40b2d9:	sub    DWORD PTR [rax],esp
  40b2db:	xor    al,0x2e
  40b2dd:	cmp    DWORD PTR [rsi],ebp
  40b2df:	xor    al,0x0
	...
  40b2ed:	add    BYTE PTR [rax],al
  40b2ef:	add    BYTE PTR [rdi+0x43],al
  40b2f2:	rex.XB cmp spl,BYTE PTR [r8]
  40b2f5:	sub    BYTE PTR [rdi+0x4e],al
  40b2f8:	push   rbp
  40b2f9:	sub    DWORD PTR [rax],esp
  40b2fb:	xor    al,0x2e
  40b2fd:	cmp    DWORD PTR [rsi],ebp
  40b2ff:	xor    al,0x0
	...
  40b30d:	add    BYTE PTR [rax],al
  40b30f:	add    BYTE PTR [rdi+0x43],al
  40b312:	rex.XB cmp spl,BYTE PTR [r8]
  40b315:	sub    BYTE PTR [rdi+0x4e],al
  40b318:	push   rbp
  40b319:	sub    DWORD PTR [rax],esp
  40b31b:	xor    al,0x2e
  40b31d:	cmp    DWORD PTR [rsi],ebp
  40b31f:	xor    al,0x0
	...
  40b32d:	add    BYTE PTR [rax],al
  40b32f:	add    BYTE PTR [rdi+0x43],al
  40b332:	rex.XB cmp spl,BYTE PTR [r8]
  40b335:	sub    BYTE PTR [rdi+0x4e],al
  40b338:	push   rbp
  40b339:	sub    DWORD PTR [rax],esp
  40b33b:	xor    al,0x2e
  40b33d:	cmp    DWORD PTR [rsi],ebp
  40b33f:	xor    al,0x0
	...
  40b34d:	add    BYTE PTR [rax],al
  40b34f:	add    BYTE PTR [rdi+0x43],al
  40b352:	rex.XB cmp spl,BYTE PTR [r8]
  40b355:	sub    BYTE PTR [rdi+0x4e],al
  40b358:	push   rbp
  40b359:	sub    DWORD PTR [rax],esp
  40b35b:	xor    al,0x2e
  40b35d:	cmp    DWORD PTR [rsi],ebp
  40b35f:	xor    al,0x0
	...
  40b36d:	add    BYTE PTR [rax],al
  40b36f:	add    BYTE PTR [rdi+0x43],al
  40b372:	rex.XB cmp spl,BYTE PTR [r8]
  40b375:	sub    BYTE PTR [rdi+0x4e],al
  40b378:	push   rbp
  40b379:	sub    DWORD PTR [rax],esp
  40b37b:	xor    al,0x2e
  40b37d:	cmp    DWORD PTR [rsi],ebp
  40b37f:	xor    al,0x0
	...
  40b38d:	add    BYTE PTR [rax],al
  40b38f:	add    BYTE PTR [rdi+0x43],al
  40b392:	rex.XB cmp spl,BYTE PTR [r8]
  40b395:	sub    BYTE PTR [rdi+0x4e],al
  40b398:	push   rbp
  40b399:	sub    DWORD PTR [rax],esp
  40b39b:	xor    al,0x2e
  40b39d:	cmp    DWORD PTR [rsi],ebp
  40b39f:	xor    al,0x0
	...
  40b3ad:	add    BYTE PTR [rax],al
  40b3af:	add    BYTE PTR [rdi+0x43],al
  40b3b2:	rex.XB cmp spl,BYTE PTR [r8]
  40b3b5:	sub    BYTE PTR [rdi+0x4e],al
  40b3b8:	push   rbp
  40b3b9:	sub    DWORD PTR [rax],esp
  40b3bb:	xor    al,0x2e
  40b3bd:	cmp    DWORD PTR [rsi],ebp
  40b3bf:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040c000 <.pdata>:
  40c000:	add    BYTE PTR [rax],dl
  40c002:	add    BYTE PTR [rax],al
  40c004:	add    DWORD PTR [rax],edx
  40c006:	add    BYTE PTR [rax],al
  40c008:	add    al,dl
  40c00a:	add    BYTE PTR [rax],al
  40c00c:	adc    BYTE PTR [rax],dl
  40c00e:	add    BYTE PTR [rax],al
  40c010:	push   rcx
  40c011:	adc    DWORD PTR [rax],eax
  40c013:	add    BYTE PTR [rax+rdx*8],al
  40c016:	add    BYTE PTR [rax],al
  40c018:	(bad)  
  40c019:	adc    DWORD PTR [rax],eax
  40c01b:	add    BYTE PTR [rsi+0xc000011],ch
  40c021:	rol    BYTE PTR [rax],1
  40c023:	add    BYTE PTR [rax-0x31ffffef],dh
  40c029:	adc    al,0x0
  40c02b:	add    BYTE PTR [rax+rdx*8],dl
  40c02e:	add    BYTE PTR [rax],al
  40c030:	rcl    BYTE PTR [rax+rax*1],1
  40c033:	add    dl,dh
  40c035:	adc    al,0x0
  40c037:	add    BYTE PTR [rax],ch
  40c039:	rol    BYTE PTR [rax],1
  40c03b:	add    BYTE PTR [rax],al
  40c03d:	adc    eax,0x15220000
  40c042:	add    BYTE PTR [rax],al
  40c044:	rex.W rol BYTE PTR [rax],1
  40c047:	add    BYTE PTR [rax],dh
  40c049:	adc    eax,0x15910000
  40c04e:	add    BYTE PTR [rax],al
  40c050:	push   0xffffffffa00000d0
  40c055:	adc    eax,0x2b3d0000
  40c05a:	add    BYTE PTR [rax],al
  40c05c:	js     0x40c02e
  40c05e:	add    BYTE PTR [rax],al
  40c060:	rex sub eax,DWORD PTR [rax]
  40c063:	add    BYTE PTR [rcx],bl
  40c065:	sub    al,0x0
  40c067:	add    BYTE PTR [rax+0x200000d0],dl
  40c06d:	sub    al,0x0
  40c06f:	add    BYTE PTR [rcx-0x5bffffd3],cl
  40c075:	rol    BYTE PTR [rax],1
  40c077:	add    BYTE PTR [rax-0x1fffffd3],dl
  40c07d:	add    BYTE PTR cs:[rax],al
  40c080:	mov    esp,0xe00000d0
  40c085:	add    BYTE PTR cs:[rax],al
  40c088:	js     0x40c0b9
  40c08a:	add    BYTE PTR [rax],al
  40c08c:	(bad)  
  40c08d:	rol    BYTE PTR [rax],1
  40c08f:	add    BYTE PTR [rax-0x6effffd1],al
  40c095:	xor    BYTE PTR [rax],al
  40c097:	add    ah,ah
  40c099:	rol    BYTE PTR [rax],1
  40c09b:	add    BYTE PTR [rax+0x7e000030],ah
  40c0a1:	xor    DWORD PTR [rax],eax
  40c0a3:	add    al,bh
  40c0a5:	rol    BYTE PTR [rax],1
  40c0a7:	add    BYTE PTR [rax-0x2dffffcf],al
  40c0ad:	xor    al,0x0
  40c0af:	add    BYTE PTR [rax],dl
  40c0b1:	rol    DWORD PTR [rax],1
  40c0b3:	add    al,ah
  40c0b5:	xor    al,0x0
  40c0b7:	add    BYTE PTR [rbp+0x3f],al
  40c0ba:	add    BYTE PTR [rax],al
  40c0bc:	sub    cl,dl
  40c0be:	add    BYTE PTR [rax],al
  40c0c0:	push   rax
  40c0c1:	(bad)  
  40c0c2:	add    BYTE PTR [rax],al
  40c0c4:	add    eax,0x40000043
  40c0c9:	rol    DWORD PTR [rax],1
  40c0cb:	add    BYTE PTR [rax],dl
  40c0cd:	rex.XB add BYTE PTR [r8],al
  40c0d0:	rex.WRB add BYTE PTR [r8d],r8b
  40c0d4:	pop    rax
  40c0d5:	rol    DWORD PTR [rax],1
  40c0d7:	add    BYTE PTR [rax+0x4d],dh
  40c0da:	add    BYTE PTR [rax],al
  40c0dc:	cli    
  40c0dd:	rex.WRB add BYTE PTR [r8],r8b
  40c0e0:	jo     0x40c0b3
  40c0e2:	add    BYTE PTR [rax],al
  40c0e4:	add    BYTE PTR [rsi+0x0],cl
  40c0e7:	add    BYTE PTR [rdx-0x7bffffb2],cl
  40c0ed:	rol    DWORD PTR [rax],1
  40c0ef:	add    BYTE PTR [rax+0x1a00004e],dl
  40c0f5:	rex.WRXB add BYTE PTR [r8],r8b
  40c0f8:	cwde   
  40c0f9:	rol    DWORD PTR [rax],1
  40c0fb:	add    BYTE PTR [rax],ah
  40c0fd:	rex.WRXB add BYTE PTR [r8],r8b
  40c100:	xlat   BYTE PTR ds:[rbx]
  40c101:	rex.WRXB add BYTE PTR [r8],r8b
  40c104:	lods   al,BYTE PTR ds:[rsi]
  40c105:	rol    DWORD PTR [rax],1
  40c107:	add    al,ah
  40c109:	rex.WRXB add BYTE PTR [r8],r8b
  40c10c:	push   0x50
  40c10e:	add    BYTE PTR [rax],al
  40c110:	rcl    cl,0x0
  40c113:	add    BYTE PTR [rax+0x50],dh
  40c116:	add    BYTE PTR [rax],al
  40c118:	(bad)  
  40c119:	push   rcx
  40c11a:	add    BYTE PTR [rax],al
  40c11c:	(bad)  
  40c11d:	rol    DWORD PTR [rax],1
  40c11f:	add    BYTE PTR [rax],dh
  40c121:	push   rcx
  40c122:	add    BYTE PTR [rax],al
  40c124:	cwde   
  40c125:	push   rdx
  40c126:	add    BYTE PTR [rax],al
  40c128:	call   0xffffffffa040c1fe
  40c12d:	push   rdx
  40c12e:	add    BYTE PTR [rax],al
  40c130:	or     BYTE PTR [rax+rax*1+0x0],dl
  40c134:	add    dl,dl
  40c136:	add    BYTE PTR [rax],al
  40c138:	adc    BYTE PTR [rax+rax*1+0x0],dl
  40c13c:	iret   
  40c13d:	push   rsp
  40c13e:	add    BYTE PTR [rax],al
  40c140:	sbb    dl,dl
  40c142:	add    BYTE PTR [rax],al
  40c144:	rcl    BYTE PTR [rax+rax*1+0x0],1
  40c148:	(bad)  
  40c149:	push   rbp
  40c14a:	add    BYTE PTR [rax],al
  40c14c:	xor    dl,dl
  40c14e:	add    BYTE PTR [rax],al
  40c150:	nop
  40c151:	push   rbp
  40c152:	add    BYTE PTR [rax],al
  40c154:	adc    BYTE PTR [rdi+0x0],dl
  40c157:	add    BYTE PTR [rax-0x2e],cl
  40c15a:	add    BYTE PTR [rax],al
  40c15c:	adc    BYTE PTR [rdi+0x0],dl
  40c15f:	add    BYTE PTR [rax+0x60000058],dl
  40c165:	rol    BYTE PTR [rax],cl
  40c167:	add    BYTE PTR [rax+0x47000059],ah
  40c16d:	pop    rdx
  40c16e:	add    BYTE PTR [rax],al
  40c170:	nop
  40c171:	rol    BYTE PTR [rax],cl
  40c173:	add    BYTE PTR [rax+0x5a],dl
  40c176:	add    BYTE PTR [rax],al
  40c178:	imul   ebx,DWORD PTR [rdx+0x0],0xd29800
  40c17f:	add    BYTE PTR [rax+0x5a],dh
  40c182:	add    BYTE PTR [rax],al
  40c184:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c185:	pop    rdx
  40c186:	add    BYTE PTR [rax],al
  40c188:	movabs al,ds:0x500005ab00000d2
  40c191:	pop    rbx
  40c192:	add    BYTE PTR [rax],al
  40c194:	test   al,0xd2
  40c196:	add    BYTE PTR [rax],al
  40c198:	adc    BYTE PTR [rbx+0x0],bl
  40c19b:	add    BYTE PTR [rbx+rbx*2],ch
  40c19e:	add    BYTE PTR [rax],al
  40c1a0:	mov    ah,0xd2
  40c1a2:	add    BYTE PTR [rax],al
  40c1a4:	xor    BYTE PTR [rbx+0x0],bl
  40c1a7:	add    BYTE PTR [rdx],bh
  40c1a9:	pop    rbx
  40c1aa:	add    BYTE PTR [rax],al
  40c1ac:	mov    eax,0x400000d2
  40c1b1:	pop    rbx
  40c1b2:	add    BYTE PTR [rax],al
  40c1b4:	rex.XB pop r11
  40c1b6:	add    BYTE PTR [rax],al
  40c1b8:	mov    esp,0x500000d2
  40c1bd:	pop    rbx
  40c1be:	add    BYTE PTR [rax],al
  40c1c0:	es pop rsp
  40c1c2:	add    BYTE PTR [rax],al
  40c1c4:	rcl    dl,0x0
  40c1c7:	add    BYTE PTR [rax],dh
  40c1c9:	pop    rsp
  40c1ca:	add    BYTE PTR [rax],al
  40c1cc:	sub    ebx,DWORD PTR [rbp+0x0]
  40c1cf:	add    al,dl
  40c1d1:	rol    BYTE PTR [rax],cl
  40c1d3:	add    BYTE PTR [rax],dh
  40c1d5:	pop    rbp
  40c1d6:	add    BYTE PTR [rax],al
  40c1d8:	pop    rdi
  40c1d9:	pop    rbp
  40c1da:	add    BYTE PTR [rax],al
  40c1dc:	loopne 0x40c1b0
  40c1de:	add    BYTE PTR [rax],al
  40c1e0:	(bad)  
  40c1e1:	pop    rbp
  40c1e2:	add    BYTE PTR [rax],al
  40c1e4:	leave  
  40c1e5:	pop    rbp
  40c1e6:	add    BYTE PTR [rax],al
  40c1e8:	call   0xffffffffd040c2bf
  40c1ed:	pop    rbp
  40c1ee:	add    BYTE PTR [rax],al
  40c1f0:	rcr    DWORD PTR [rbp+0x0],cl
  40c1f3:	add    ah,dh
  40c1f5:	rol    BYTE PTR [rax],cl
  40c1f7:	add    al,ah
  40c1f9:	pop    rbp
  40c1fa:	add    BYTE PTR [rax],al
  40c1fc:	and    DWORD PTR [rsi+0x0],ebx
  40c1ff:	add    al,bh
  40c201:	rol    BYTE PTR [rax],cl
  40c203:	add    BYTE PTR [rax],dh
  40c205:	pop    rsi
  40c206:	add    BYTE PTR [rax],al
  40c208:	cmp    al,0x5e
  40c20a:	add    BYTE PTR [rax],al
  40c20c:	add    bl,dl
  40c20e:	add    BYTE PTR [rax],al
  40c210:	rex pop rsi
  40c212:	add    BYTE PTR [rax],al
  40c214:	cmp    al,0x5f
  40c216:	add    BYTE PTR [rax],al
  40c218:	add    al,0xd3
  40c21a:	add    BYTE PTR [rax],al
  40c21c:	rex pop rdi
  40c21e:	add    BYTE PTR [rax],al
  40c220:	rex.XB pop r15
  40c222:	add    BYTE PTR [rax],al
  40c224:	sbb    al,0xd3
  40c226:	add    BYTE PTR [rax],al
  40c228:	push   rax
  40c229:	pop    rdi
  40c22a:	add    BYTE PTR [rax],al
  40c22c:	push   rsp
  40c22d:	pop    rdi
  40c22e:	add    BYTE PTR [rax],al
  40c230:	and    bl,dl
  40c232:	add    BYTE PTR [rax],al
  40c234:	(bad)  
  40c235:	pop    rdi
  40c236:	add    BYTE PTR [rax],al
  40c238:	fs pop rdi
  40c23a:	add    BYTE PTR [rax],al
  40c23c:	and    al,0xd3
  40c23e:	add    BYTE PTR [rax],al
  40c240:	jo     0x40c2a1
  40c242:	add    BYTE PTR [rax],al
  40c244:	rcr    DWORD PTR [rdi+0x0],1
  40c247:	add    BYTE PTR [rax],ch
  40c249:	rol    DWORD PTR [rax],cl
  40c24b:	add    al,ah
  40c24d:	pop    rdi
  40c24e:	add    BYTE PTR [rax],al
  40c250:	rex.X (bad) 
  40c252:	add    BYTE PTR [rax],al
  40c254:	xor    al,0xd3
  40c256:	add    BYTE PTR [rax],al
  40c258:	push   rax
  40c259:	(bad)  
  40c25a:	add    BYTE PTR [rax],al
  40c25c:	rex.WB
  40c25d:	add    BYTE PTR fs:[rax],al
  40c260:	rol    QWORD PTR [rax],cl
  40c263:	add    BYTE PTR [rax+0x64],dl
  40c266:	add    BYTE PTR [rax],al
  40c268:	mul    BYTE PTR [rbp+0x0]
  40c26b:	add    BYTE PTR [rax-0x2d],ah
  40c26e:	add    BYTE PTR [rax],al
  40c270:	add    BYTE PTR [rsi+0x0],ah
  40c273:	add    ah,ch
  40c275:	data16 add BYTE PTR [rax],al
  40c278:	push   0xfffffffff00000d3
  40c27d:	data16 add BYTE PTR [rax],al
  40c280:	test   al,0x68
  40c282:	add    BYTE PTR [rax],al
  40c284:	js     0x40c259
  40c286:	add    BYTE PTR [rax],al
  40c288:	mov    al,0x68
  40c28a:	add    BYTE PTR [rax],al
  40c28c:	sbb    eax,0x80000069
  40c291:	rol    DWORD PTR [rax],cl
  40c293:	add    BYTE PTR [rax],ah
  40c295:	imul   eax,DWORD PTR [rax],0x699f00
  40c29b:	add    BYTE PTR [rax-0x5fffff2d],dl
  40c2a1:	imul   eax,DWORD PTR [rax],0x6a3f00
  40c2a7:	add    BYTE PTR [rbx+rdx*8+0x6a400000],bl
  40c2ae:	add    BYTE PTR [rax],al
  40c2b0:	sbb    ch,BYTE PTR [rbx+0x0]
  40c2b3:	add    BYTE PTR [rbx+rdx*8+0x6b200000],ah
  40c2ba:	add    BYTE PTR [rax],al
  40c2bc:	(bad)  
  40c2bd:	imul   eax,DWORD PTR [rax],0x0
  40c2c0:	lods   al,BYTE PTR ds:[rsi]
  40c2c1:	rol    DWORD PTR [rax],cl
  40c2c3:	add    BYTE PTR [rax+0x6b],al
  40c2c6:	add    BYTE PTR [rax],al
  40c2c8:	push   rdx
  40c2c9:	imul   eax,DWORD PTR [rax],0x0
  40c2cc:	mov    al,0xd3
  40c2ce:	add    BYTE PTR [rax],al
  40c2d0:	(bad)  
  40c2d1:	imul   eax,DWORD PTR [rax],0x0
  40c2d4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c2d5:	imul   eax,DWORD PTR [rax],0x0
  40c2d8:	mov    ah,0xd3
  40c2da:	add    BYTE PTR [rax],al
  40c2dc:	mov    al,0x6b
  40c2de:	add    BYTE PTR [rax],al
  40c2e0:	rex.WRX ins BYTE PTR es:[rdi],dx
  40c2e2:	add    BYTE PTR [rax],al
  40c2e4:	mov    eax,0x500000d3
  40c2e9:	ins    BYTE PTR es:[rdi],dx
  40c2ea:	add    BYTE PTR [rax],al
  40c2ec:	xchg   ebx,eax
  40c2ed:	ins    BYTE PTR es:[rdi],dx
  40c2ee:	add    BYTE PTR [rax],al
  40c2f0:	(bad)  
  40c2f1:	rol    DWORD PTR [rax],cl
  40c2f3:	add    BYTE PTR [rax-0x24ffff94],ah
  40c2f9:	ins    BYTE PTR es:[rdi],dx
  40c2fa:	add    BYTE PTR [rax],al
  40c2fc:	rcl    bl,1
  40c2fe:	add    BYTE PTR [rax],al
  40c300:	loopne 0x40c36e
  40c302:	add    BYTE PTR [rax],al
  40c304:	outs   dx,BYTE PTR ds:[rsi]
  40c305:	ins    DWORD PTR es:[rdi],dx
  40c306:	add    BYTE PTR [rax],al
  40c308:	fcom   st(3)
  40c30a:	add    BYTE PTR [rax],al
  40c30c:	jo     0x40c37b
  40c30e:	add    BYTE PTR [rax],al
  40c310:	test   al,0x6d
  40c312:	add    BYTE PTR [rax],al
  40c314:	in     al,0xd3
  40c316:	add    BYTE PTR [rax],al
  40c318:	mov    al,0x6d
  40c31a:	add    BYTE PTR [rax],al
  40c31c:	add    eax,0xf000006e
  40c321:	rol    DWORD PTR [rax],cl
  40c323:	add    BYTE PTR [rax],dl
  40c325:	outs   dx,BYTE PTR ds:[rsi]
  40c326:	add    BYTE PTR [rax],al
  40c328:	mov    esi,0xfc00006e
  40c32d:	rol    DWORD PTR [rax],cl
  40c32f:	add    BYTE PTR [rax],al
  40c331:	outs   dx,DWORD PTR ds:[rsi]
  40c332:	add    BYTE PTR [rax],al
  40c334:	stos   BYTE PTR es:[rdi],al
  40c335:	outs   dx,DWORD PTR ds:[rsi]
  40c336:	add    BYTE PTR [rax],al
  40c338:	or     al,0xd4
  40c33a:	add    BYTE PTR [rax],al
  40c33c:	mov    al,0x6f
  40c33e:	add    BYTE PTR [rax],al
  40c340:	xor    BYTE PTR [rax+0x0],dh
  40c343:	add    BYTE PTR [rsp+rdx*8],bl
  40c346:	add    BYTE PTR [rax],al
  40c348:	xor    BYTE PTR [rax+0x0],dh
  40c34b:	add    dh,ah
  40c34d:	jae    0x40c34f
  40c34f:	add    BYTE PTR [rax],ch
  40c351:	(bad)  
  40c352:	add    BYTE PTR [rax],al
  40c354:	lock jae 0x40c357
  40c357:	add    ch,dl
  40c359:	jp     0x40c35b
  40c35b:	add    BYTE PTR [rax-0x2c],al
  40c35e:	add    BYTE PTR [rax],al
  40c360:	loopne 0x40c3dc
  40c362:	add    BYTE PTR [rax],al
  40c364:	add    bh,BYTE PTR [rbx+0x0]
  40c367:	add    BYTE PTR [rax-0x2c],bl
  40c36a:	add    BYTE PTR [rax],al
  40c36c:	adc    BYTE PTR [rbx+0x0],bh
  40c36f:	add    BYTE PTR [rax],dh
  40c371:	jnp    0x40c373
  40c373:	add    BYTE PTR [rax-0x2c],ah
  40c376:	add    BYTE PTR [rax],al
  40c378:	xor    BYTE PTR [rbx+0x0],bh
  40c37b:	add    BYTE PTR [rax+0x7b],dl
  40c37e:	add    BYTE PTR [rax],al
  40c380:	push   0xffffffff800000d4
  40c385:	jl     0x40c387
  40c387:	add    BYTE PTR [rax+0x7000007c],cl
  40c38d:	(bad)  
  40c38e:	add    BYTE PTR [rax],al
  40c390:	nop
  40c391:	jl     0x40c393
  40c393:	add    BYTE PTR [rbx+0x7400007c],bl
  40c399:	(bad)  
  40c39a:	add    BYTE PTR [rax],al
  40c39c:	(bad)  
  40c39d:	jge    0x40c39f
  40c39f:	add    BYTE PTR [rcx-0x7c],bh
  40c3a2:	add    BYTE PTR [rax],al
  40c3a4:	js     0x40c378
	...

Disassembly of section .xdata:

000000000040d000 <.xdata>:
  40d000:	add    DWORD PTR [rax],eax
  40d002:	add    BYTE PTR [rax],al
  40d004:	add    DWORD PTR [rcx+rax*1],eax
  40d007:	add    BYTE PTR [rdx+rax*2],al
  40d00a:	add    BYTE PTR [rax],al
  40d00c:	add    DWORD PTR [rcx+rax*1],eax
  40d00f:	add    BYTE PTR [rdx+riz*2],al
  40d012:	add    BYTE PTR [rax],al
  40d014:	add    DWORD PTR [rdi],ecx
  40d016:	or     BYTE PTR [rax],al
  40d018:	lgdt   [rbx]
  40d01b:	add    BYTE PTR [rax],cl
  40d01d:	xor    BYTE PTR [rdi],al
  40d01f:	(bad)  
  40d020:	(bad)  
  40d021:	jo     0x40d028
  40d023:	push   rax
  40d024:	add    al,0xc0
  40d026:	add    dl,al
  40d028:	or     DWORD PTR [rcx+rax*1],eax
  40d02b:	add    BYTE PTR [rdx+rax*2],al
  40d02e:	add    BYTE PTR [rax],al
  40d030:	js     0x40d0ae
  40d032:	add    BYTE PTR [rax],al
  40d034:	add    DWORD PTR [rax],eax
  40d036:	add    BYTE PTR [rax],al
  40d038:	(bad)  
  40d039:	adc    al,0x0
  40d03b:	add    ah,ch
  40d03d:	adc    al,0x0
  40d03f:	add    al,dh
  40d041:	data16 add BYTE PTR [rax],al
  40d044:	in     al,dx
  40d045:	adc    al,0x0
  40d047:	add    BYTE PTR [rcx],cl
  40d049:	add    al,0x1
  40d04b:	add    BYTE PTR [rdx+rax*2],al
  40d04e:	add    BYTE PTR [rax],al
  40d050:	js     0x40d0ce
  40d052:	add    BYTE PTR [rax],al
  40d054:	add    DWORD PTR [rax],eax
  40d056:	add    BYTE PTR [rax],al
  40d058:	add    al,0x15
  40d05a:	add    BYTE PTR [rax],al
  40d05c:	sbb    al,0x15
  40d05e:	add    BYTE PTR [rax],al
  40d060:	lock data16 add BYTE PTR [rax],al
  40d064:	sbb    al,0x15
  40d066:	add    BYTE PTR [rax],al
  40d068:	add    DWORD PTR [rdx],ecx
  40d06a:	add    eax,0x44010a00
  40d06f:	add    BYTE PTR [rbx],al
  40d071:	xor    BYTE PTR [rdx],al
  40d073:	(bad)  
  40d074:	add    DWORD PTR [rax+0x0],esi
  40d077:	add    BYTE PTR [rcx],al
  40d079:	adc    ecx,DWORD PTR [rdx]
  40d07b:	add    BYTE PTR [rbx],dl
  40d07d:	add    DWORD PTR [rbx],esp
  40d07f:	add    BYTE PTR [rax+rsi*1],cl
  40d082:	or     esp,DWORD PTR [rax+0xa]
  40d085:	jo     0x40d090
  40d087:	push   rax
  40d088:	or     al,al
  40d08a:	(bad)  
  40d08b:	rol    BYTE PTR [rax+riz*8],1
  40d08e:	add    dh,al
  40d090:	add    DWORD PTR [rsi],ecx
  40d092:	or     BYTE PTR [rax],al
  40d094:	(bad)  
  40d095:	xor    cl,BYTE PTR [rdx]
  40d097:	xor    BYTE PTR [rcx],cl
  40d099:	(bad)  
  40d09a:	or     BYTE PTR [rax+0x7],dh
  40d09d:	push   rax
  40d09e:	(bad)  
  40d09f:	rol    BYTE PTR [rax+rdx*8],0x2
  40d0a3:	loopne 0x40d0a6
  40d0a5:	adc    BYTE PTR [rcx],cl
  40d0a7:	add    BYTE PTR [rax],dl
  40d0a9:	(bad)  
  40d0aa:	or     al,0x30
  40d0ac:	or     esp,DWORD PTR [rax+0xa]
  40d0af:	jo     0x40d0ba
  40d0b1:	push   rax
  40d0b2:	or     al,al
  40d0b4:	(bad)  
  40d0b5:	rol    BYTE PTR [rax+riz*8],1
  40d0b8:	add    dh,al
  40d0ba:	add    BYTE PTR [rax],al
  40d0bc:	add    DWORD PTR [rax],edx
  40d0be:	or     DWORD PTR [rax],eax
  40d0c0:	adc    BYTE PTR [rdx+0xc],ah
  40d0c3:	xor    BYTE PTR [rbx],cl
  40d0c5:	(bad)  
  40d0c6:	or     dh,BYTE PTR [rax+0x9]
  40d0c9:	push   rax
  40d0ca:	or     al,al
  40d0cc:	(bad)  
  40d0cd:	rol    BYTE PTR [rax+riz*8],1
  40d0d0:	add    dh,al
  40d0d2:	add    BYTE PTR [rax],al
  40d0d4:	add    DWORD PTR [rdx],ecx
  40d0d6:	(bad)  
  40d0d7:	add    BYTE PTR [rdx],cl
  40d0d9:	xor    al,BYTE PTR [rsi]
  40d0db:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0d541
  40d0e1:	push   rax
  40d0e2:	add    al,al
  40d0e4:	add    DWORD PTR [rsi],ecx
  40d0e6:	or     BYTE PTR [rax],al
  40d0e8:	(bad)  
  40d0e9:	xor    cl,BYTE PTR [rdx]
  40d0eb:	xor    BYTE PTR [rcx],cl
  40d0ed:	(bad)  
  40d0ee:	or     BYTE PTR [rax+0x7],dh
  40d0f1:	push   rax
  40d0f2:	(bad)  
  40d0f3:	rol    BYTE PTR [rax+rdx*8],0x2
  40d0f7:	loopne 0x40d0fa
  40d0f9:	adc    BYTE PTR [rcx],cl
  40d0fb:	add    BYTE PTR [rax],dl
  40d0fd:	rex.X or al,0x30
  40d100:	or     esp,DWORD PTR [rax+0xa]
  40d103:	jo     0x40d10e
  40d105:	push   rax
  40d106:	or     al,al
  40d108:	(bad)  
  40d109:	rol    BYTE PTR [rax+riz*8],1
  40d10c:	add    dh,al
  40d10e:	add    BYTE PTR [rax],al
  40d110:	add    DWORD PTR [rbx],edx
  40d112:	or     al,BYTE PTR [rax]
  40d114:	adc    eax,DWORD PTR [rcx]
  40d116:	adc    eax,DWORD PTR [rax]
  40d118:	or     al,0x30
  40d11a:	or     esp,DWORD PTR [rax+0xa]
  40d11d:	jo     0x40d128
  40d11f:	push   rax
  40d120:	or     al,al
  40d122:	(bad)  
  40d123:	rol    BYTE PTR [rax+riz*8],1
  40d126:	add    dh,al
  40d128:	add    DWORD PTR [rbx],edx
  40d12a:	or     al,BYTE PTR [rax]
  40d12c:	adc    eax,DWORD PTR [rcx]
  40d12e:	sbb    DWORD PTR [rax],eax
  40d130:	or     al,0x30
  40d132:	or     esp,DWORD PTR [rax+0xa]
  40d135:	jo     0x40d140
  40d137:	push   rax
  40d138:	or     al,al
  40d13a:	(bad)  
  40d13b:	rol    BYTE PTR [rax+riz*8],1
  40d13e:	add    dh,al
  40d140:	add    DWORD PTR [rbx],edx
  40d142:	or     al,BYTE PTR [rax]
  40d144:	adc    eax,DWORD PTR [rcx]
  40d146:	(bad)  
  40d147:	add    BYTE PTR [rax+rsi*1],cl
  40d14a:	or     esp,DWORD PTR [rax+0xa]
  40d14d:	jo     0x40d158
  40d14f:	push   rax
  40d150:	or     al,al
  40d152:	(bad)  
  40d153:	rol    BYTE PTR [rax+riz*8],1
  40d156:	add    dh,al
  40d158:	add    DWORD PTR [rbx],edx
  40d15a:	or     al,BYTE PTR [rax]
  40d15c:	adc    eax,DWORD PTR [rcx]
  40d15e:	sbb    DWORD PTR [rax],eax
  40d160:	or     al,0x30
  40d162:	or     esp,DWORD PTR [rax+0xa]
  40d165:	jo     0x40d170
  40d167:	push   rax
  40d168:	or     al,al
  40d16a:	(bad)  
  40d16b:	rol    BYTE PTR [rax+riz*8],1
  40d16e:	add    dh,al
  40d170:	add    DWORD PTR [rsi],ecx
  40d172:	or     BYTE PTR [rax],al
  40d174:	(bad)  
  40d175:	push   rdx
  40d176:	or     dh,BYTE PTR [rax]
  40d178:	or     DWORD PTR [rax+0x8],esp
  40d17b:	jo     0x40d184
  40d17d:	push   rax
  40d17e:	(bad)  
  40d17f:	rol    BYTE PTR [rax+rdx*8],0x2
  40d183:	loopne 0x40d186
  40d185:	(bad)  
  40d186:	or     BYTE PTR [rax],al
  40d188:	(bad)  
  40d189:	push   rdx
  40d18a:	or     dh,BYTE PTR [rax]
  40d18c:	or     DWORD PTR [rax+0x8],esp
  40d18f:	jo     0x40d198
  40d191:	push   rax
  40d192:	(bad)  
  40d193:	rol    BYTE PTR [rax+rdx*8],0x2
  40d197:	loopne 0x40d19a
  40d199:	(bad)  
  40d19a:	or     BYTE PTR [rax],al
  40d19c:	(bad)  
  40d19d:	push   rdx
  40d19e:	or     dh,BYTE PTR [rax]
  40d1a0:	or     DWORD PTR [rax+0x8],esp
  40d1a3:	jo     0x40d1ac
  40d1a5:	push   rax
  40d1a6:	(bad)  
  40d1a7:	rol    BYTE PTR [rax+rdx*8],0x2
  40d1ab:	loopne 0x40d1ae
  40d1ad:	(bad)  
  40d1ae:	or     BYTE PTR [rax],al
  40d1b0:	(bad)  
  40d1b1:	push   rdx
  40d1b2:	or     dh,BYTE PTR [rax]
  40d1b4:	or     DWORD PTR [rax+0x8],esp
  40d1b7:	jo     0x40d1c0
  40d1b9:	push   rax
  40d1ba:	(bad)  
  40d1bb:	rol    BYTE PTR [rax+rdx*8],0x2
  40d1bf:	loopne 0x40d1c2
  40d1c1:	(bad)  
  40d1c2:	or     BYTE PTR [rax],al
  40d1c4:	(bad)  
  40d1c5:	push   rdx
  40d1c6:	or     dh,BYTE PTR [rax]
  40d1c8:	or     DWORD PTR [rax+0x8],esp
  40d1cb:	jo     0x40d1d4
  40d1cd:	push   rax
  40d1ce:	(bad)  
  40d1cf:	rol    BYTE PTR [rax+rdx*8],0x2
  40d1d3:	loopne 0x40d1d6
  40d1d5:	(bad)  
  40d1d6:	or     BYTE PTR [rax],al
  40d1d8:	(bad)  
  40d1d9:	push   rdx
  40d1da:	or     dh,BYTE PTR [rax]
  40d1dc:	or     DWORD PTR [rax+0x8],esp
  40d1df:	jo     0x40d1e8
  40d1e1:	push   rax
  40d1e2:	(bad)  
  40d1e3:	rol    BYTE PTR [rax+rdx*8],0x2
  40d1e7:	loopne 0x40d1ea
  40d1e9:	adc    BYTE PTR [rcx],cl
  40d1eb:	add    BYTE PTR [rax],dl
  40d1ed:	ret    0x300c
  40d1f0:	or     esp,DWORD PTR [rax+0xa]
  40d1f3:	jo     0x40d1fe
  40d1f5:	push   rax
  40d1f6:	or     al,al
  40d1f8:	(bad)  
  40d1f9:	rol    BYTE PTR [rax+riz*8],1
  40d1fc:	add    dh,al
  40d1fe:	add    BYTE PTR [rax],al
  40d200:	add    DWORD PTR [rax],edx
  40d202:	or     DWORD PTR [rax],eax
  40d204:	adc    dl,al
  40d206:	or     al,0x30
  40d208:	or     esp,DWORD PTR [rax+0xa]
  40d20b:	jo     0x40d216
  40d20d:	push   rax
  40d20e:	or     al,al
  40d210:	(bad)  
  40d211:	rol    BYTE PTR [rax+riz*8],1
  40d214:	add    dh,al
  40d216:	add    BYTE PTR [rax],al
  40d218:	add    DWORD PTR [rax],edx
  40d21a:	or     DWORD PTR [rax],eax
  40d21c:	adc    BYTE PTR [rdx+0x600b300c],al
  40d222:	or     dh,BYTE PTR [rax+0x9]
  40d225:	push   rax
  40d226:	or     al,al
  40d228:	(bad)  
  40d229:	rol    BYTE PTR [rax+riz*8],1
  40d22c:	add    dh,al
  40d22e:	add    BYTE PTR [rax],al
  40d230:	add    DWORD PTR [rax],edx
  40d232:	or     DWORD PTR [rax],eax
  40d234:	adc    BYTE PTR [rdx+0x600b300c],al
  40d23a:	or     dh,BYTE PTR [rax+0x9]
  40d23d:	push   rax
  40d23e:	or     al,al
  40d240:	(bad)  
  40d241:	rol    BYTE PTR [rax+riz*8],1
  40d244:	add    dh,al
  40d246:	add    BYTE PTR [rax],al
  40d248:	add    DWORD PTR [rax],edx
  40d24a:	or     DWORD PTR [rax],eax
  40d24c:	adc    BYTE PTR [rdx+0x600b300c],ah
  40d252:	or     dh,BYTE PTR [rax+0x9]
  40d255:	push   rax
  40d256:	or     al,al
  40d258:	(bad)  
  40d259:	rol    BYTE PTR [rax+riz*8],1
  40d25c:	add    dh,al
  40d25e:	add    BYTE PTR [rax],al
  40d260:	add    DWORD PTR [rax],edx
  40d262:	or     DWORD PTR [rax],eax
  40d264:	adc    BYTE PTR [rdx+0x600b300c],ah
  40d26a:	or     dh,BYTE PTR [rax+0x9]
  40d26d:	push   rax
  40d26e:	or     al,al
  40d270:	(bad)  
  40d271:	rol    BYTE PTR [rax+riz*8],1
  40d274:	add    dh,al
  40d276:	add    BYTE PTR [rax],al
  40d278:	add    DWORD PTR [rbx],edx
  40d27a:	or     al,BYTE PTR [rax]
  40d27c:	adc    eax,DWORD PTR [rcx]
  40d27e:	adc    DWORD PTR [rax],eax
  40d280:	or     al,0x30
  40d282:	or     esp,DWORD PTR [rax+0xa]
  40d285:	jo     0x40d290
  40d287:	push   rax
  40d288:	or     al,al
  40d28a:	(bad)  
  40d28b:	rol    BYTE PTR [rax+riz*8],1
  40d28e:	add    dh,al
  40d290:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245d298
  40d296:	add    DWORD PTR [rax],esi
  40d298:	add    DWORD PTR [rcx+rax*1],eax
  40d29b:	add    BYTE PTR [rdx+rax*2],al
  40d29e:	add    BYTE PTR [rax],al
  40d2a0:	add    DWORD PTR [rcx+rax*1],eax
  40d2a3:	add    BYTE PTR [rdx+rax*2],al
  40d2a6:	add    BYTE PTR [rax],al
  40d2a8:	add    DWORD PTR [rsi],eax
  40d2aa:	add    eax,DWORD PTR [rax]
  40d2ac:	(bad)  
  40d2ad:	rex.X add sil,BYTE PTR [rax]
  40d2b0:	add    DWORD PTR [rax+0x0],esp
  40d2b3:	add    BYTE PTR [rcx],al
  40d2b5:	add    BYTE PTR [rax],al
  40d2b7:	add    BYTE PTR [rcx],al
  40d2b9:	add    BYTE PTR [rax],al
  40d2bb:	add    BYTE PTR [rcx],al
  40d2bd:	add    BYTE PTR [rax],al
  40d2bf:	add    BYTE PTR [rcx],al
  40d2c1:	or     al,BYTE PTR [rsi]
  40d2c3:	add    BYTE PTR [rdx],cl
  40d2c5:	jb     0x40d2cd
  40d2c7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0d72d
  40d2cd:	push   rax
  40d2ce:	add    al,al
  40d2d0:	add    DWORD PTR [rdx],ecx
  40d2d2:	add    eax,0x6d20a05
  40d2d7:	add    eax,DWORD PTR [rbx]
  40d2d9:	xor    BYTE PTR [rdx],al
  40d2db:	(bad)  
  40d2dc:	add    DWORD PTR [rax+0x0],edx
  40d2df:	add    BYTE PTR [rcx],al
  40d2e1:	add    al,0x1
  40d2e3:	add    BYTE PTR [rdx+rax*2],al
  40d2e6:	add    BYTE PTR [rax],al
  40d2e8:	add    DWORD PTR [rsi],eax
  40d2ea:	add    eax,DWORD PTR [rax]
  40d2ec:	(bad)  
  40d2ed:	rex.X add sil,BYTE PTR [rax]
  40d2f0:	add    DWORD PTR [rax+0x0],esp
  40d2f3:	add    BYTE PTR [rcx],al
  40d2f5:	add    BYTE PTR [rax],al
  40d2f7:	add    BYTE PTR [rcx],al
  40d2f9:	add    al,0x1
  40d2fb:	add    BYTE PTR [rdx+riz*4],al
  40d2fe:	add    BYTE PTR [rax],al
  40d300:	add    DWORD PTR [rax],eax
  40d302:	add    BYTE PTR [rax],al
  40d304:	add    DWORD PTR [rsi],edx
  40d306:	or     DWORD PTR [rax],eax
  40d308:	(bad)  
  40d309:	mov    BYTE PTR [rsi],al
  40d30b:	add    BYTE PTR [rax],dl
  40d30d:	js     0x40d314
  40d30f:	add    BYTE PTR [rbx],cl
  40d311:	push   0xffffffffe2060004
  40d316:	add    dh,BYTE PTR [rax]
  40d318:	add    DWORD PTR [rax+0x0],esp
  40d31b:	add    BYTE PTR [rcx],al
  40d31d:	add    BYTE PTR [rax],al
  40d31f:	add    BYTE PTR [rcx],al
  40d321:	add    BYTE PTR [rax],al
  40d323:	add    BYTE PTR [rcx],al
  40d325:	add    BYTE PTR [rax],al
  40d327:	add    BYTE PTR [rcx],al
  40d329:	(bad)  
  40d32a:	add    eax,DWORD PTR [rax]
  40d32c:	(bad)  
  40d32d:	(bad)  
  40d32f:	xor    BYTE PTR [rcx],al
  40d331:	(bad)  
  40d332:	add    BYTE PTR [rax],al
  40d334:	add    DWORD PTR [rdi+rax*1],ecx
  40d337:	add    BYTE PTR [rdx+riz*4],cl
  40d33a:	or     BYTE PTR [rax],dh
  40d33c:	(bad)  
  40d33d:	(bad)  
  40d33e:	(bad)  
  40d33f:	jo     0x40d346
  40d341:	push   rax
  40d342:	add    al,0xc0
  40d344:	add    dl,al
  40d346:	add    BYTE PTR [rax],al
  40d348:	add    DWORD PTR [rcx],edx
  40d34a:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e8561
  40d350:	or     dh,BYTE PTR [rax]
  40d352:	or     DWORD PTR [rax+0x8],esp
  40d355:	jo     0x40d35e
  40d357:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220d72e
  40d35e:	add    BYTE PTR [rax],al
  40d360:	add    DWORD PTR [rcx+rax*1],eax
  40d363:	add    BYTE PTR [rdx+rax*2],al
  40d366:	add    BYTE PTR [rax],al
  40d368:	add    DWORD PTR [rdx],ecx
  40d36a:	(bad)  
  40d36b:	add    BYTE PTR [rdx],cl
  40d36d:	xor    al,BYTE PTR [rsi]
  40d36f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0d7d5
  40d375:	push   rax
  40d376:	add    al,al
  40d378:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245d380
  40d37e:	add    DWORD PTR [rax],esi
  40d380:	add    DWORD PTR [rax],ecx
  40d382:	add    eax,0x4420800
  40d387:	xor    BYTE PTR [rbx],al
  40d389:	(bad)  
  40d38a:	add    dh,BYTE PTR [rax+0x1]
  40d38d:	push   rax
  40d38e:	add    BYTE PTR [rax],al
  40d390:	add    DWORD PTR [rdi],eax
  40d392:	add    al,0x0
  40d394:	(bad)  
  40d395:	xor    al,BYTE PTR [rbx]
  40d397:	xor    BYTE PTR [rdx],al
  40d399:	(bad)  
  40d39a:	add    DWORD PTR [rax+0x1],esi
  40d39d:	add    eax,0x32050002
  40d3a2:	add    DWORD PTR [rax],esi
  40d3a4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245d3ac
  40d3aa:	add    DWORD PTR [rax],esi
  40d3ac:	add    DWORD PTR [rax],eax
  40d3ae:	add    BYTE PTR [rax],al
  40d3b0:	add    DWORD PTR [rax],eax
  40d3b2:	add    BYTE PTR [rax],al
  40d3b4:	add    DWORD PTR [rax],eax
  40d3b6:	add    BYTE PTR [rax],al
  40d3b8:	add    DWORD PTR [rdi],eax
  40d3ba:	add    al,0x0
  40d3bc:	(bad)  
  40d3bd:	xor    al,BYTE PTR [rbx]
  40d3bf:	xor    BYTE PTR [rdx],al
  40d3c1:	(bad)  
  40d3c2:	add    DWORD PTR [rax+0x1],esi
  40d3c5:	(bad)  
  40d3c6:	add    eax,DWORD PTR [rax]
  40d3c8:	(bad)  
  40d3c9:	rex.X add sil,BYTE PTR [rax]
  40d3cc:	add    DWORD PTR [rax+0x0],esp
  40d3cf:	add    BYTE PTR [rcx],al
  40d3d1:	add    eax,0x32050002
  40d3d6:	add    DWORD PTR [rax],esi
  40d3d8:	add    DWORD PTR [rdi],eax
  40d3da:	add    al,0x0
  40d3dc:	(bad)  
  40d3dd:	xor    al,BYTE PTR [rbx]
  40d3df:	xor    BYTE PTR [rdx],al
  40d3e1:	(bad)  
  40d3e2:	add    DWORD PTR [rax+0x1],esi
  40d3e5:	(bad)  
  40d3e6:	add    eax,DWORD PTR [rax]
  40d3e8:	(bad)  
  40d3e9:	rex.X add sil,BYTE PTR [rax]
  40d3ec:	add    DWORD PTR [rax+0x0],esp
  40d3ef:	add    BYTE PTR [rcx],al
  40d3f1:	(bad)  
  40d3f2:	add    eax,DWORD PTR [rax]
  40d3f4:	(bad)  
  40d3f5:	rex.X add sil,BYTE PTR [rax]
  40d3f8:	add    DWORD PTR [rax+0x0],esp
  40d3fb:	add    BYTE PTR [rcx],al
  40d3fd:	or     BYTE PTR [rip+0x4420800],al        # 0x482dc03
  40d403:	xor    BYTE PTR [rbx],al
  40d405:	(bad)  
  40d406:	add    dh,BYTE PTR [rax+0x1]
  40d409:	push   rax
  40d40a:	add    BYTE PTR [rax],al
  40d40c:	add    DWORD PTR [rax],ecx
  40d40e:	(bad)  
  40d40f:	add    BYTE PTR [rax],cl
  40d411:	xor    BYTE PTR [rdi],al
  40d413:	(bad)  
  40d414:	(bad)  
  40d415:	jo     0x40d41c
  40d417:	push   rax
  40d418:	add    al,0xc0
  40d41a:	add    dl,al
  40d41c:	add    DWORD PTR [rdi],eax
  40d41e:	add    al,0x0
  40d420:	(bad)  
  40d421:	push   rdx
  40d422:	add    esi,DWORD PTR [rax]
  40d424:	add    ah,BYTE PTR [rax+0x1]
  40d427:	jo     0x40d42a
  40d429:	adc    BYTE PTR [rcx],cl
  40d42b:	add    BYTE PTR [rax],dl
  40d42d:	(bad)  
  40d42e:	or     al,0x30
  40d430:	or     esp,DWORD PTR [rax+0xa]
  40d433:	jo     0x40d43e
  40d435:	push   rax
  40d436:	or     al,al
  40d438:	(bad)  
  40d439:	rol    BYTE PTR [rax+riz*8],1
  40d43c:	add    dh,al
  40d43e:	add    BYTE PTR [rax],al
  40d440:	add    DWORD PTR [rax],edx
  40d442:	or     DWORD PTR [rax],eax
  40d444:	adc    BYTE PTR [rdx+0xc],ah
  40d447:	xor    BYTE PTR [rbx],cl
  40d449:	(bad)  
  40d44a:	or     dh,BYTE PTR [rax+0x9]
  40d44d:	push   rax
  40d44e:	or     al,al
  40d450:	(bad)  
  40d451:	rol    BYTE PTR [rax+riz*8],1
  40d454:	add    dh,al
  40d456:	add    BYTE PTR [rax],al
  40d458:	add    DWORD PTR [rcx+rax*1],eax
  40d45b:	add    BYTE PTR [rdx+riz*2],al
  40d45e:	add    BYTE PTR [rax],al
  40d460:	add    DWORD PTR [rcx+rax*1],eax
  40d463:	add    BYTE PTR [rdx+riz*2],al
  40d466:	add    BYTE PTR [rax],al
  40d468:	add    DWORD PTR [rcx+rax*1],eax
  40d46b:	add    BYTE PTR [rdx+riz*2],al
  40d46e:	add    BYTE PTR [rax],al
  40d470:	add    DWORD PTR [rax],eax
  40d472:	add    BYTE PTR [rax],al
  40d474:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040e000 <.bss>:
	...

Disassembly of section .idata:

000000000040f000 <.idata>:
  40f000:	lock add BYTE PTR fs:[rax],al
	...
  40f00c:	clc    
  40f00d:	cld    
  40f00e:	add    BYTE PTR [rax],al
  40f010:	xchg   esp,eax
  40f011:	repz add BYTE PTR [rax],al
  40f014:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40f015:	lock add BYTE PTR [rax],al
	...
  40f020:	push   0xffffffffd40000fd
  40f025:	repz add BYTE PTR [rax],al
  40f028:	fs icebp 
	...
  40f032:	add    BYTE PTR [rax],al
  40f034:	and    dh,bh
  40f036:	add    BYTE PTR [rax],al
  40f038:	xchg   esp,eax
  40f039:	hlt    
  40f03a:	add    BYTE PTR [rax],al
  40f03c:	mov    esp,0xf2
  40f041:	add    BYTE PTR [rax],al
  40f043:	add    BYTE PTR [rax],al
  40f045:	add    BYTE PTR [rax],al
  40f047:	add    BYTE PTR [rsi+rdi*8-0xa140000],dl
	...
  40f062:	add    BYTE PTR [rax],al
  40f064:	(bad)  
  40f065:	test   BYTE PTR [rax],0x0
  40f068:	add    BYTE PTR [rax],al
  40f06a:	add    BYTE PTR [rax],al
  40f06c:	shl    dh,1
  40f06e:	add    BYTE PTR [rax],al
  40f070:	add    BYTE PTR [rax],al
  40f072:	add    BYTE PTR [rax],al
  40f074:	loopne 0x40f06c
  40f076:	add    BYTE PTR [rax],al
  40f078:	add    BYTE PTR [rax],al
  40f07a:	add    BYTE PTR [rax],al
  40f07c:	in     al,dx
  40f07d:	test   BYTE PTR [rax],0x0
  40f080:	add    BYTE PTR [rax],al
  40f082:	add    BYTE PTR [rax],al
  40f084:	add    bh,dh
  40f086:	add    BYTE PTR [rax],al
  40f088:	add    BYTE PTR [rax],al
  40f08a:	add    BYTE PTR [rax],al
  40f08c:	adc    bh,dh
  40f08e:	add    BYTE PTR [rax],al
  40f090:	add    BYTE PTR [rax],al
  40f092:	add    BYTE PTR [rax],al
  40f094:	and    bh,dh
	...
  40f0a2:	add    BYTE PTR [rax],al
  40f0a4:	sub    al,0xf7
  40f0a6:	add    BYTE PTR [rax],al
  40f0a8:	add    BYTE PTR [rax],al
  40f0aa:	add    BYTE PTR [rax],al
  40f0ac:	rex.R test DWORD PTR [rax],0x0
  40f0b3:	add    BYTE PTR [rdi+rsi*8+0x0],bl
  40f0b7:	add    BYTE PTR [rax],al
  40f0b9:	add    BYTE PTR [rax],al
  40f0bb:	add    BYTE PTR [rax-0x9],dh
  40f0be:	add    BYTE PTR [rax],al
  40f0c0:	add    BYTE PTR [rax],al
  40f0c2:	add    BYTE PTR [rax],al
  40f0c4:	xchg   bh,dh
  40f0c6:	add    BYTE PTR [rax],al
  40f0c8:	add    BYTE PTR [rax],al
  40f0ca:	add    BYTE PTR [rax],al
  40f0cc:	pushf  
  40f0cd:	test   DWORD PTR [rax],0x0
  40f0d3:	add    BYTE PTR [rdi+rsi*8+0x0],ch
  40f0da:	add    BYTE PTR [rax],al
  40f0dc:	mov    esi,0xf7
  40f0e1:	add    BYTE PTR [rax],al
  40f0e3:	add    al,bl
  40f0e5:	test   DWORD PTR [rax],0x0
  40f0eb:	add    al,ch
  40f0ed:	test   DWORD PTR [rax],0x0
  40f0f3:	add    BYTE PTR [rax+rdi*8],al
  40f0f6:	add    BYTE PTR [rax],al
  40f0f8:	add    BYTE PTR [rax],al
  40f0fa:	add    BYTE PTR [rax],al
  40f0fc:	sbb    al,0xf8
  40f0fe:	add    BYTE PTR [rax],al
  40f100:	add    BYTE PTR [rax],al
  40f102:	add    BYTE PTR [rax],al
  40f104:	ss clc 
  40f106:	add    BYTE PTR [rax],al
  40f108:	add    BYTE PTR [rax],al
  40f10a:	add    BYTE PTR [rax],al
  40f10c:	rex.WR clc 
  40f10e:	add    BYTE PTR [rax],al
  40f110:	add    BYTE PTR [rax],al
  40f112:	add    BYTE PTR [rax],al
  40f114:	(bad)  
  40f115:	clc    
  40f116:	add    BYTE PTR [rax],al
  40f118:	add    BYTE PTR [rax],al
  40f11a:	add    BYTE PTR [rax],al
  40f11c:	jp     0x40f116
  40f11e:	add    BYTE PTR [rax],al
  40f120:	add    BYTE PTR [rax],al
  40f122:	add    BYTE PTR [rax],al
  40f124:	mov    ?,eax
  40f126:	add    BYTE PTR [rax],al
  40f128:	add    BYTE PTR [rax],al
  40f12a:	add    BYTE PTR [rax],al
  40f12c:	lods   al,BYTE PTR ds:[rsi]
  40f12d:	clc    
  40f12e:	add    BYTE PTR [rax],al
  40f130:	add    BYTE PTR [rax],al
  40f132:	add    BYTE PTR [rax],al
  40f134:	mov    ah,0xf8
  40f136:	add    BYTE PTR [rax],al
  40f138:	add    BYTE PTR [rax],al
  40f13a:	add    BYTE PTR [rax],al
  40f13c:	enter  0xf8,0x0
  40f140:	add    BYTE PTR [rax],al
  40f142:	add    BYTE PTR [rax],al
  40f144:	(bad)  
  40f145:	clc    
  40f146:	add    BYTE PTR [rax],al
  40f148:	add    BYTE PTR [rax],al
  40f14a:	add    BYTE PTR [rax],al
  40f14c:	repnz clc 
  40f14e:	add    BYTE PTR [rax],al
  40f150:	add    BYTE PTR [rax],al
  40f152:	add    BYTE PTR [rax],al
  40f154:	add    al,0xf9
	...
  40f162:	add    BYTE PTR [rax],al
  40f164:	adc    al,0xf9
  40f166:	add    BYTE PTR [rax],al
  40f168:	add    BYTE PTR [rax],al
  40f16a:	add    BYTE PTR [rax],al
  40f16c:	sub    al,0xf9
  40f16e:	add    BYTE PTR [rax],al
  40f170:	add    BYTE PTR [rax],al
  40f172:	add    BYTE PTR [rax],al
  40f174:	ss stc 
  40f176:	add    BYTE PTR [rax],al
  40f178:	add    BYTE PTR [rax],al
  40f17a:	add    BYTE PTR [rax],al
  40f17c:	rex.R stc 
  40f17e:	add    BYTE PTR [rax],al
  40f180:	add    BYTE PTR [rax],al
  40f182:	add    BYTE PTR [rax],al
  40f184:	push   rsp
  40f185:	stc    
  40f186:	add    BYTE PTR [rax],al
  40f188:	add    BYTE PTR [rax],al
  40f18a:	add    BYTE PTR [rax],al
  40f18c:	(bad)  
  40f18d:	stc    
  40f18e:	add    BYTE PTR [rax],al
  40f190:	add    BYTE PTR [rax],al
  40f192:	add    BYTE PTR [rax],al
  40f194:	outs   dx,BYTE PTR ds:[rsi]
  40f195:	stc    
  40f196:	add    BYTE PTR [rax],al
  40f198:	add    BYTE PTR [rax],al
  40f19a:	add    BYTE PTR [rax],al
  40f19c:	jle    0x40f197
  40f19e:	add    BYTE PTR [rax],al
  40f1a0:	add    BYTE PTR [rax],al
  40f1a2:	add    BYTE PTR [rax],al
  40f1a4:	nop
  40f1a5:	stc    
  40f1a6:	add    BYTE PTR [rax],al
  40f1a8:	add    BYTE PTR [rax],al
  40f1aa:	add    BYTE PTR [rax],al
  40f1ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40f1ad:	stc    
  40f1ae:	add    BYTE PTR [rax],al
  40f1b0:	add    BYTE PTR [rax],al
  40f1b2:	add    BYTE PTR [rax],al
  40f1b4:	scas   al,BYTE PTR es:[rdi]
  40f1b5:	stc    
  40f1b6:	add    BYTE PTR [rax],al
  40f1b8:	add    BYTE PTR [rax],al
  40f1ba:	add    BYTE PTR [rax],al
  40f1bc:	mov    esp,0xf9
  40f1c1:	add    BYTE PTR [rax],al
  40f1c3:	add    dh,al
  40f1c5:	stc    
  40f1c6:	add    BYTE PTR [rax],al
  40f1c8:	add    BYTE PTR [rax],al
  40f1ca:	add    BYTE PTR [rax],al
  40f1cc:	sar    cl,1
  40f1ce:	add    BYTE PTR [rax],al
  40f1d0:	add    BYTE PTR [rax],al
  40f1d2:	add    BYTE PTR [rax],al
  40f1d4:	fdiv   st(1),st
  40f1d6:	add    BYTE PTR [rax],al
  40f1d8:	add    BYTE PTR [rax],al
  40f1da:	add    BYTE PTR [rax],al
  40f1dc:	in     al,0xf9
  40f1de:	add    BYTE PTR [rax],al
  40f1e0:	add    BYTE PTR [rax],al
  40f1e2:	add    BYTE PTR [rax],al
  40f1e4:	out    dx,al
  40f1e5:	stc    
  40f1e6:	add    BYTE PTR [rax],al
  40f1e8:	add    BYTE PTR [rax],al
  40f1ea:	add    BYTE PTR [rax],al
  40f1ec:	clc    
  40f1ed:	stc    
  40f1ee:	add    BYTE PTR [rax],al
  40f1f0:	add    BYTE PTR [rax],al
  40f1f2:	add    BYTE PTR [rax],al
  40f1f4:	add    dl,bh
  40f1f6:	add    BYTE PTR [rax],al
  40f1f8:	add    BYTE PTR [rax],al
  40f1fa:	add    BYTE PTR [rax],al
  40f1fc:	or     dl,bh
  40f1fe:	add    BYTE PTR [rax],al
  40f200:	add    BYTE PTR [rax],al
  40f202:	add    BYTE PTR [rax],al
  40f204:	adc    bh,dl
  40f206:	add    BYTE PTR [rax],al
  40f208:	add    BYTE PTR [rax],al
  40f20a:	add    BYTE PTR [rax],al
  40f20c:	sbb    bh,dl
  40f20e:	add    BYTE PTR [rax],al
  40f210:	add    BYTE PTR [rax],al
  40f212:	add    BYTE PTR [rax],al
  40f214:	and    al,0xfa
  40f216:	add    BYTE PTR [rax],al
  40f218:	add    BYTE PTR [rax],al
  40f21a:	add    BYTE PTR [rax],al
  40f21c:	sub    al,0xfa
  40f21e:	add    BYTE PTR [rax],al
  40f220:	add    BYTE PTR [rax],al
  40f222:	add    BYTE PTR [rax],al
  40f224:	ss cli 
  40f226:	add    BYTE PTR [rax],al
  40f228:	add    BYTE PTR [rax],al
  40f22a:	add    BYTE PTR [rax],al
  40f22c:	ds cli 
  40f22e:	add    BYTE PTR [rax],al
  40f230:	add    BYTE PTR [rax],al
  40f232:	add    BYTE PTR [rax],al
  40f234:	rex.RX cli 
  40f236:	add    BYTE PTR [rax],al
  40f238:	add    BYTE PTR [rax],al
  40f23a:	add    BYTE PTR [rax],al
  40f23c:	push   rax
  40f23d:	cli    
  40f23e:	add    BYTE PTR [rax],al
  40f240:	add    BYTE PTR [rax],al
  40f242:	add    BYTE PTR [rax],al
  40f244:	pop    rdx
  40f245:	cli    
  40f246:	add    BYTE PTR [rax],al
  40f248:	add    BYTE PTR [rax],al
  40f24a:	add    BYTE PTR [rax],al
  40f24c:	fs cli 
  40f24e:	add    BYTE PTR [rax],al
  40f250:	add    BYTE PTR [rax],al
  40f252:	add    BYTE PTR [rax],al
  40f254:	outs   dx,BYTE PTR ds:[rsi]
  40f255:	cli    
  40f256:	add    BYTE PTR [rax],al
  40f258:	add    BYTE PTR [rax],al
  40f25a:	add    BYTE PTR [rax],al
  40f25c:	js     0x40f258
  40f25e:	add    BYTE PTR [rax],al
  40f260:	add    BYTE PTR [rax],al
  40f262:	add    BYTE PTR [rax],al
  40f264:	(bad)  
  40f265:	cli    
  40f266:	add    BYTE PTR [rax],al
  40f268:	add    BYTE PTR [rax],al
  40f26a:	add    BYTE PTR [rax],al
  40f26c:	mov    edx,?
  40f26e:	add    BYTE PTR [rax],al
  40f270:	add    BYTE PTR [rax],al
  40f272:	add    BYTE PTR [rax],al
  40f274:	xchg   esp,eax
  40f275:	cli    
  40f276:	add    BYTE PTR [rax],al
  40f278:	add    BYTE PTR [rax],al
  40f27a:	add    BYTE PTR [rax],al
  40f27c:	sahf   
  40f27d:	cli    
  40f27e:	add    BYTE PTR [rax],al
  40f280:	add    BYTE PTR [rax],al
  40f282:	add    BYTE PTR [rax],al
  40f284:	test   al,0xfa
  40f286:	add    BYTE PTR [rax],al
  40f288:	add    BYTE PTR [rax],al
  40f28a:	add    BYTE PTR [rax],al
  40f28c:	mov    dl,0xfa
  40f28e:	add    BYTE PTR [rax],al
  40f290:	add    BYTE PTR [rax],al
  40f292:	add    BYTE PTR [rax],al
  40f294:	mov    esp,0xfa
  40f299:	add    BYTE PTR [rax],al
  40f29b:	add    dh,al
  40f29d:	cli    
  40f29e:	add    BYTE PTR [rax],al
  40f2a0:	add    BYTE PTR [rax],al
  40f2a2:	add    BYTE PTR [rax],al
  40f2a4:	sar    dl,1
  40f2a6:	add    BYTE PTR [rax],al
  40f2a8:	add    BYTE PTR [rax],al
  40f2aa:	add    BYTE PTR [rax],al
  40f2ac:	(bad)  
	...
  40f2ba:	add    BYTE PTR [rax],al
  40f2bc:	call   0x40f3bb
  40f2c1:	add    BYTE PTR [rax],al
  40f2c3:	add    BYTE PTR [rax],al
  40f2c5:	sti    
  40f2c6:	add    BYTE PTR [rax],al
  40f2c8:	add    BYTE PTR [rax],al
  40f2ca:	add    BYTE PTR [rax],al
  40f2cc:	sbb    bl,bh
  40f2ce:	add    BYTE PTR [rax],al
  40f2d0:	add    BYTE PTR [rax],al
  40f2d2:	add    BYTE PTR [rax],al
  40f2d4:	and    al,0xfb
  40f2d6:	add    BYTE PTR [rax],al
  40f2d8:	add    BYTE PTR [rax],al
  40f2da:	add    BYTE PTR [rax],al
  40f2dc:	xor    al,0xfb
  40f2de:	add    BYTE PTR [rax],al
  40f2e0:	add    BYTE PTR [rax],al
  40f2e2:	add    BYTE PTR [rax],al
  40f2e4:	rex.R sti 
  40f2e6:	add    BYTE PTR [rax],al
  40f2e8:	add    BYTE PTR [rax],al
  40f2ea:	add    BYTE PTR [rax],al
  40f2ec:	push   rsp
  40f2ed:	sti    
  40f2ee:	add    BYTE PTR [rax],al
  40f2f0:	add    BYTE PTR [rax],al
  40f2f2:	add    BYTE PTR [rax],al
  40f2f4:	ins    BYTE PTR es:[rdi],dx
  40f2f5:	sti    
  40f2f6:	add    BYTE PTR [rax],al
  40f2f8:	add    BYTE PTR [rax],al
  40f2fa:	add    BYTE PTR [rax],al
  40f2fc:	mov    bl,bh
  40f2fe:	add    BYTE PTR [rax],al
  40f300:	add    BYTE PTR [rax],al
  40f302:	add    BYTE PTR [rax],al
  40f304:	pushf  
  40f305:	sti    
  40f306:	add    BYTE PTR [rax],al
  40f308:	add    BYTE PTR [rax],al
  40f30a:	add    BYTE PTR [rax],al
  40f30c:	mov    ah,0xfb
  40f30e:	add    BYTE PTR [rax],al
  40f310:	add    BYTE PTR [rax],al
  40f312:	add    BYTE PTR [rax],al
  40f314:	enter  0xfb,0x0
  40f318:	add    BYTE PTR [rax],al
  40f31a:	add    BYTE PTR [rax],al
  40f31c:	fdivr  st,st(3)
  40f31e:	add    BYTE PTR [rax],al
  40f320:	add    BYTE PTR [rax],al
  40f322:	add    BYTE PTR [rax],al
  40f324:	in     al,dx
  40f325:	sti    
  40f326:	add    BYTE PTR [rax],al
  40f328:	add    BYTE PTR [rax],al
  40f32a:	add    BYTE PTR [rax],al
  40f32c:	cld    
  40f32d:	sti    
  40f32e:	add    BYTE PTR [rax],al
  40f330:	add    BYTE PTR [rax],al
  40f332:	add    BYTE PTR [rax],al
  40f334:	adc    al,0xfc
  40f336:	add    BYTE PTR [rax],al
  40f338:	add    BYTE PTR [rax],al
  40f33a:	add    BYTE PTR [rax],al
  40f33c:	and    al,0xfc
  40f33e:	add    BYTE PTR [rax],al
  40f340:	add    BYTE PTR [rax],al
  40f342:	add    BYTE PTR [rax],al
  40f344:	cmp    ah,bh
  40f346:	add    BYTE PTR [rax],al
  40f348:	add    BYTE PTR [rax],al
  40f34a:	add    BYTE PTR [rax],al
  40f34c:	rex.W cld 
  40f34e:	add    BYTE PTR [rax],al
  40f350:	add    BYTE PTR [rax],al
  40f352:	add    BYTE PTR [rax],al
  40f354:	pop    rsp
  40f355:	cld    
  40f356:	add    BYTE PTR [rax],al
  40f358:	add    BYTE PTR [rax],al
  40f35a:	add    BYTE PTR [rax],al
  40f35c:	ins    BYTE PTR es:[rdi],dx
  40f35d:	cld    
  40f35e:	add    BYTE PTR [rax],al
  40f360:	add    BYTE PTR [rax],al
  40f362:	add    BYTE PTR [rax],al
  40f364:	test   ah,bh
  40f366:	add    BYTE PTR [rax],al
  40f368:	add    BYTE PTR [rax],al
  40f36a:	add    BYTE PTR [rax],al
  40f36c:	pushf  
  40f36d:	cld    
  40f36e:	add    BYTE PTR [rax],al
  40f370:	add    BYTE PTR [rax],al
  40f372:	add    BYTE PTR [rax],al
  40f374:	mov    al,0xfc
  40f376:	add    BYTE PTR [rax],al
  40f378:	add    BYTE PTR [rax],al
  40f37a:	add    BYTE PTR [rax],al
  40f37c:	sar    ah,0x0
  40f37f:	add    BYTE PTR [rax],al
  40f381:	add    BYTE PTR [rax],al
  40f383:	add    ah,cl
  40f385:	cld    
	...
  40f392:	add    BYTE PTR [rax],al
  40f394:	(bad)  
  40f395:	test   BYTE PTR [rax],0x0
  40f398:	add    BYTE PTR [rax],al
  40f39a:	add    BYTE PTR [rax],al
  40f39c:	shl    dh,1
  40f39e:	add    BYTE PTR [rax],al
  40f3a0:	add    BYTE PTR [rax],al
  40f3a2:	add    BYTE PTR [rax],al
  40f3a4:	loopne 0x40f39c
  40f3a6:	add    BYTE PTR [rax],al
  40f3a8:	add    BYTE PTR [rax],al
  40f3aa:	add    BYTE PTR [rax],al
  40f3ac:	in     al,dx
  40f3ad:	test   BYTE PTR [rax],0x0
  40f3b0:	add    BYTE PTR [rax],al
  40f3b2:	add    BYTE PTR [rax],al
  40f3b4:	add    bh,dh
  40f3b6:	add    BYTE PTR [rax],al
  40f3b8:	add    BYTE PTR [rax],al
  40f3ba:	add    BYTE PTR [rax],al
  40f3bc:	adc    bh,dh
  40f3be:	add    BYTE PTR [rax],al
  40f3c0:	add    BYTE PTR [rax],al
  40f3c2:	add    BYTE PTR [rax],al
  40f3c4:	and    bh,dh
	...
  40f3d2:	add    BYTE PTR [rax],al
  40f3d4:	sub    al,0xf7
  40f3d6:	add    BYTE PTR [rax],al
  40f3d8:	add    BYTE PTR [rax],al
  40f3da:	add    BYTE PTR [rax],al
  40f3dc:	rex.R test DWORD PTR [rax],0x0
  40f3e3:	add    BYTE PTR [rdi+rsi*8+0x0],bl
  40f3e7:	add    BYTE PTR [rax],al
  40f3e9:	add    BYTE PTR [rax],al
  40f3eb:	add    BYTE PTR [rax-0x9],dh
  40f3ee:	add    BYTE PTR [rax],al
  40f3f0:	add    BYTE PTR [rax],al
  40f3f2:	add    BYTE PTR [rax],al
  40f3f4:	xchg   bh,dh
  40f3f6:	add    BYTE PTR [rax],al
  40f3f8:	add    BYTE PTR [rax],al
  40f3fa:	add    BYTE PTR [rax],al
  40f3fc:	pushf  
  40f3fd:	test   DWORD PTR [rax],0x0
  40f403:	add    BYTE PTR [rdi+rsi*8+0x0],ch
  40f40a:	add    BYTE PTR [rax],al
  40f40c:	mov    esi,0xf7
  40f411:	add    BYTE PTR [rax],al
  40f413:	add    al,bl
  40f415:	test   DWORD PTR [rax],0x0
  40f41b:	add    al,ch
  40f41d:	test   DWORD PTR [rax],0x0
  40f423:	add    BYTE PTR [rax+rdi*8],al
  40f426:	add    BYTE PTR [rax],al
  40f428:	add    BYTE PTR [rax],al
  40f42a:	add    BYTE PTR [rax],al
  40f42c:	sbb    al,0xf8
  40f42e:	add    BYTE PTR [rax],al
  40f430:	add    BYTE PTR [rax],al
  40f432:	add    BYTE PTR [rax],al
  40f434:	ss clc 
  40f436:	add    BYTE PTR [rax],al
  40f438:	add    BYTE PTR [rax],al
  40f43a:	add    BYTE PTR [rax],al
  40f43c:	rex.WR clc 
  40f43e:	add    BYTE PTR [rax],al
  40f440:	add    BYTE PTR [rax],al
  40f442:	add    BYTE PTR [rax],al
  40f444:	(bad)  
  40f445:	clc    
  40f446:	add    BYTE PTR [rax],al
  40f448:	add    BYTE PTR [rax],al
  40f44a:	add    BYTE PTR [rax],al
  40f44c:	jp     0x40f446
  40f44e:	add    BYTE PTR [rax],al
  40f450:	add    BYTE PTR [rax],al
  40f452:	add    BYTE PTR [rax],al
  40f454:	mov    ?,eax
  40f456:	add    BYTE PTR [rax],al
  40f458:	add    BYTE PTR [rax],al
  40f45a:	add    BYTE PTR [rax],al
  40f45c:	lods   al,BYTE PTR ds:[rsi]
  40f45d:	clc    
  40f45e:	add    BYTE PTR [rax],al
  40f460:	add    BYTE PTR [rax],al
  40f462:	add    BYTE PTR [rax],al
  40f464:	mov    ah,0xf8
  40f466:	add    BYTE PTR [rax],al
  40f468:	add    BYTE PTR [rax],al
  40f46a:	add    BYTE PTR [rax],al
  40f46c:	enter  0xf8,0x0
  40f470:	add    BYTE PTR [rax],al
  40f472:	add    BYTE PTR [rax],al
  40f474:	(bad)  
  40f475:	clc    
  40f476:	add    BYTE PTR [rax],al
  40f478:	add    BYTE PTR [rax],al
  40f47a:	add    BYTE PTR [rax],al
  40f47c:	repnz clc 
  40f47e:	add    BYTE PTR [rax],al
  40f480:	add    BYTE PTR [rax],al
  40f482:	add    BYTE PTR [rax],al
  40f484:	add    al,0xf9
	...
  40f492:	add    BYTE PTR [rax],al
  40f494:	adc    al,0xf9
  40f496:	add    BYTE PTR [rax],al
  40f498:	add    BYTE PTR [rax],al
  40f49a:	add    BYTE PTR [rax],al
  40f49c:	sub    al,0xf9
  40f49e:	add    BYTE PTR [rax],al
  40f4a0:	add    BYTE PTR [rax],al
  40f4a2:	add    BYTE PTR [rax],al
  40f4a4:	ss stc 
  40f4a6:	add    BYTE PTR [rax],al
  40f4a8:	add    BYTE PTR [rax],al
  40f4aa:	add    BYTE PTR [rax],al
  40f4ac:	rex.R stc 
  40f4ae:	add    BYTE PTR [rax],al
  40f4b0:	add    BYTE PTR [rax],al
  40f4b2:	add    BYTE PTR [rax],al
  40f4b4:	push   rsp
  40f4b5:	stc    
  40f4b6:	add    BYTE PTR [rax],al
  40f4b8:	add    BYTE PTR [rax],al
  40f4ba:	add    BYTE PTR [rax],al
  40f4bc:	(bad)  
  40f4bd:	stc    
  40f4be:	add    BYTE PTR [rax],al
  40f4c0:	add    BYTE PTR [rax],al
  40f4c2:	add    BYTE PTR [rax],al
  40f4c4:	outs   dx,BYTE PTR ds:[rsi]
  40f4c5:	stc    
  40f4c6:	add    BYTE PTR [rax],al
  40f4c8:	add    BYTE PTR [rax],al
  40f4ca:	add    BYTE PTR [rax],al
  40f4cc:	jle    0x40f4c7
  40f4ce:	add    BYTE PTR [rax],al
  40f4d0:	add    BYTE PTR [rax],al
  40f4d2:	add    BYTE PTR [rax],al
  40f4d4:	nop
  40f4d5:	stc    
  40f4d6:	add    BYTE PTR [rax],al
  40f4d8:	add    BYTE PTR [rax],al
  40f4da:	add    BYTE PTR [rax],al
  40f4dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40f4dd:	stc    
  40f4de:	add    BYTE PTR [rax],al
  40f4e0:	add    BYTE PTR [rax],al
  40f4e2:	add    BYTE PTR [rax],al
  40f4e4:	scas   al,BYTE PTR es:[rdi]
  40f4e5:	stc    
  40f4e6:	add    BYTE PTR [rax],al
  40f4e8:	add    BYTE PTR [rax],al
  40f4ea:	add    BYTE PTR [rax],al
  40f4ec:	mov    esp,0xf9
  40f4f1:	add    BYTE PTR [rax],al
  40f4f3:	add    dh,al
  40f4f5:	stc    
  40f4f6:	add    BYTE PTR [rax],al
  40f4f8:	add    BYTE PTR [rax],al
  40f4fa:	add    BYTE PTR [rax],al
  40f4fc:	sar    cl,1
  40f4fe:	add    BYTE PTR [rax],al
  40f500:	add    BYTE PTR [rax],al
  40f502:	add    BYTE PTR [rax],al
  40f504:	fdiv   st(1),st
  40f506:	add    BYTE PTR [rax],al
  40f508:	add    BYTE PTR [rax],al
  40f50a:	add    BYTE PTR [rax],al
  40f50c:	in     al,0xf9
  40f50e:	add    BYTE PTR [rax],al
  40f510:	add    BYTE PTR [rax],al
  40f512:	add    BYTE PTR [rax],al
  40f514:	out    dx,al
  40f515:	stc    
  40f516:	add    BYTE PTR [rax],al
  40f518:	add    BYTE PTR [rax],al
  40f51a:	add    BYTE PTR [rax],al
  40f51c:	clc    
  40f51d:	stc    
  40f51e:	add    BYTE PTR [rax],al
  40f520:	add    BYTE PTR [rax],al
  40f522:	add    BYTE PTR [rax],al
  40f524:	add    dl,bh
  40f526:	add    BYTE PTR [rax],al
  40f528:	add    BYTE PTR [rax],al
  40f52a:	add    BYTE PTR [rax],al
  40f52c:	or     dl,bh
  40f52e:	add    BYTE PTR [rax],al
  40f530:	add    BYTE PTR [rax],al
  40f532:	add    BYTE PTR [rax],al
  40f534:	adc    bh,dl
  40f536:	add    BYTE PTR [rax],al
  40f538:	add    BYTE PTR [rax],al
  40f53a:	add    BYTE PTR [rax],al
  40f53c:	sbb    bh,dl
  40f53e:	add    BYTE PTR [rax],al
  40f540:	add    BYTE PTR [rax],al
  40f542:	add    BYTE PTR [rax],al
  40f544:	and    al,0xfa
  40f546:	add    BYTE PTR [rax],al
  40f548:	add    BYTE PTR [rax],al
  40f54a:	add    BYTE PTR [rax],al
  40f54c:	sub    al,0xfa
  40f54e:	add    BYTE PTR [rax],al
  40f550:	add    BYTE PTR [rax],al
  40f552:	add    BYTE PTR [rax],al
  40f554:	ss cli 
  40f556:	add    BYTE PTR [rax],al
  40f558:	add    BYTE PTR [rax],al
  40f55a:	add    BYTE PTR [rax],al
  40f55c:	ds cli 
  40f55e:	add    BYTE PTR [rax],al
  40f560:	add    BYTE PTR [rax],al
  40f562:	add    BYTE PTR [rax],al
  40f564:	rex.RX cli 
  40f566:	add    BYTE PTR [rax],al
  40f568:	add    BYTE PTR [rax],al
  40f56a:	add    BYTE PTR [rax],al
  40f56c:	push   rax
  40f56d:	cli    
  40f56e:	add    BYTE PTR [rax],al
  40f570:	add    BYTE PTR [rax],al
  40f572:	add    BYTE PTR [rax],al
  40f574:	pop    rdx
  40f575:	cli    
  40f576:	add    BYTE PTR [rax],al
  40f578:	add    BYTE PTR [rax],al
  40f57a:	add    BYTE PTR [rax],al
  40f57c:	fs cli 
  40f57e:	add    BYTE PTR [rax],al
  40f580:	add    BYTE PTR [rax],al
  40f582:	add    BYTE PTR [rax],al
  40f584:	outs   dx,BYTE PTR ds:[rsi]
  40f585:	cli    
  40f586:	add    BYTE PTR [rax],al
  40f588:	add    BYTE PTR [rax],al
  40f58a:	add    BYTE PTR [rax],al
  40f58c:	js     0x40f588
  40f58e:	add    BYTE PTR [rax],al
  40f590:	add    BYTE PTR [rax],al
  40f592:	add    BYTE PTR [rax],al
  40f594:	(bad)  
  40f595:	cli    
  40f596:	add    BYTE PTR [rax],al
  40f598:	add    BYTE PTR [rax],al
  40f59a:	add    BYTE PTR [rax],al
  40f59c:	mov    edx,?
  40f59e:	add    BYTE PTR [rax],al
  40f5a0:	add    BYTE PTR [rax],al
  40f5a2:	add    BYTE PTR [rax],al
  40f5a4:	xchg   esp,eax
  40f5a5:	cli    
  40f5a6:	add    BYTE PTR [rax],al
  40f5a8:	add    BYTE PTR [rax],al
  40f5aa:	add    BYTE PTR [rax],al
  40f5ac:	sahf   
  40f5ad:	cli    
  40f5ae:	add    BYTE PTR [rax],al
  40f5b0:	add    BYTE PTR [rax],al
  40f5b2:	add    BYTE PTR [rax],al
  40f5b4:	test   al,0xfa
  40f5b6:	add    BYTE PTR [rax],al
  40f5b8:	add    BYTE PTR [rax],al
  40f5ba:	add    BYTE PTR [rax],al
  40f5bc:	mov    dl,0xfa
  40f5be:	add    BYTE PTR [rax],al
  40f5c0:	add    BYTE PTR [rax],al
  40f5c2:	add    BYTE PTR [rax],al
  40f5c4:	mov    esp,0xfa
  40f5c9:	add    BYTE PTR [rax],al
  40f5cb:	add    dh,al
  40f5cd:	cli    
  40f5ce:	add    BYTE PTR [rax],al
  40f5d0:	add    BYTE PTR [rax],al
  40f5d2:	add    BYTE PTR [rax],al
  40f5d4:	sar    dl,1
  40f5d6:	add    BYTE PTR [rax],al
  40f5d8:	add    BYTE PTR [rax],al
  40f5da:	add    BYTE PTR [rax],al
  40f5dc:	(bad)  
	...
  40f5ea:	add    BYTE PTR [rax],al
  40f5ec:	call   0x40f6eb
  40f5f1:	add    BYTE PTR [rax],al
  40f5f3:	add    BYTE PTR [rax],al
  40f5f5:	sti    
  40f5f6:	add    BYTE PTR [rax],al
  40f5f8:	add    BYTE PTR [rax],al
  40f5fa:	add    BYTE PTR [rax],al
  40f5fc:	sbb    bl,bh
  40f5fe:	add    BYTE PTR [rax],al
  40f600:	add    BYTE PTR [rax],al
  40f602:	add    BYTE PTR [rax],al
  40f604:	and    al,0xfb
  40f606:	add    BYTE PTR [rax],al
  40f608:	add    BYTE PTR [rax],al
  40f60a:	add    BYTE PTR [rax],al
  40f60c:	xor    al,0xfb
  40f60e:	add    BYTE PTR [rax],al
  40f610:	add    BYTE PTR [rax],al
  40f612:	add    BYTE PTR [rax],al
  40f614:	rex.R sti 
  40f616:	add    BYTE PTR [rax],al
  40f618:	add    BYTE PTR [rax],al
  40f61a:	add    BYTE PTR [rax],al
  40f61c:	push   rsp
  40f61d:	sti    
  40f61e:	add    BYTE PTR [rax],al
  40f620:	add    BYTE PTR [rax],al
  40f622:	add    BYTE PTR [rax],al
  40f624:	ins    BYTE PTR es:[rdi],dx
  40f625:	sti    
  40f626:	add    BYTE PTR [rax],al
  40f628:	add    BYTE PTR [rax],al
  40f62a:	add    BYTE PTR [rax],al
  40f62c:	mov    bl,bh
  40f62e:	add    BYTE PTR [rax],al
  40f630:	add    BYTE PTR [rax],al
  40f632:	add    BYTE PTR [rax],al
  40f634:	pushf  
  40f635:	sti    
  40f636:	add    BYTE PTR [rax],al
  40f638:	add    BYTE PTR [rax],al
  40f63a:	add    BYTE PTR [rax],al
  40f63c:	mov    ah,0xfb
  40f63e:	add    BYTE PTR [rax],al
  40f640:	add    BYTE PTR [rax],al
  40f642:	add    BYTE PTR [rax],al
  40f644:	enter  0xfb,0x0
  40f648:	add    BYTE PTR [rax],al
  40f64a:	add    BYTE PTR [rax],al
  40f64c:	fdivr  st,st(3)
  40f64e:	add    BYTE PTR [rax],al
  40f650:	add    BYTE PTR [rax],al
  40f652:	add    BYTE PTR [rax],al
  40f654:	in     al,dx
  40f655:	sti    
  40f656:	add    BYTE PTR [rax],al
  40f658:	add    BYTE PTR [rax],al
  40f65a:	add    BYTE PTR [rax],al
  40f65c:	cld    
  40f65d:	sti    
  40f65e:	add    BYTE PTR [rax],al
  40f660:	add    BYTE PTR [rax],al
  40f662:	add    BYTE PTR [rax],al
  40f664:	adc    al,0xfc
  40f666:	add    BYTE PTR [rax],al
  40f668:	add    BYTE PTR [rax],al
  40f66a:	add    BYTE PTR [rax],al
  40f66c:	and    al,0xfc
  40f66e:	add    BYTE PTR [rax],al
  40f670:	add    BYTE PTR [rax],al
  40f672:	add    BYTE PTR [rax],al
  40f674:	cmp    ah,bh
  40f676:	add    BYTE PTR [rax],al
  40f678:	add    BYTE PTR [rax],al
  40f67a:	add    BYTE PTR [rax],al
  40f67c:	rex.W cld 
  40f67e:	add    BYTE PTR [rax],al
  40f680:	add    BYTE PTR [rax],al
  40f682:	add    BYTE PTR [rax],al
  40f684:	pop    rsp
  40f685:	cld    
  40f686:	add    BYTE PTR [rax],al
  40f688:	add    BYTE PTR [rax],al
  40f68a:	add    BYTE PTR [rax],al
  40f68c:	ins    BYTE PTR es:[rdi],dx
  40f68d:	cld    
  40f68e:	add    BYTE PTR [rax],al
  40f690:	add    BYTE PTR [rax],al
  40f692:	add    BYTE PTR [rax],al
  40f694:	test   ah,bh
  40f696:	add    BYTE PTR [rax],al
  40f698:	add    BYTE PTR [rax],al
  40f69a:	add    BYTE PTR [rax],al
  40f69c:	pushf  
  40f69d:	cld    
  40f69e:	add    BYTE PTR [rax],al
  40f6a0:	add    BYTE PTR [rax],al
  40f6a2:	add    BYTE PTR [rax],al
  40f6a4:	mov    al,0xfc
  40f6a6:	add    BYTE PTR [rax],al
  40f6a8:	add    BYTE PTR [rax],al
  40f6aa:	add    BYTE PTR [rax],al
  40f6ac:	sar    ah,0x0
  40f6af:	add    BYTE PTR [rax],al
  40f6b1:	add    BYTE PTR [rax],al
  40f6b3:	add    ah,cl
  40f6b5:	cld    
	...
  40f6c2:	add    BYTE PTR [rax],al
  40f6c4:	(bad)  
  40f6c5:	add    BYTE PTR [rdi+0x54],al
  40f6c8:	rex.WB
  40f6c9:	rex.RX
  40f6ca:	rex.RX jb 0x40f732
  40f6cd:	add    BYTE PTR gs:[rax],al
  40f6d0:	adc    al,0x0
  40f6d2:	rex.RXB push r12
  40f6d4:	rex.WB
  40f6d5:	rex.RX
  40f6d6:	rex.WB ins DWORD PTR es:[rdi],dx
  40f6d8:	jo     0x40f749
  40f6da:	jb     0x40f750
  40f6dc:	add    BYTE PTR [rax],al
  40f6de:	add    BYTE PTR [rax],al
  40f6e0:	sbb    al,0x0
  40f6e2:	rex.RXB push r12
  40f6e4:	rex.WB
  40f6e5:	rex.RX
  40f6e6:	rex.WRX
  40f6e7:	gs ja  0x40f6ea
  40f6ea:	add    BYTE PTR [rax],al
  40f6ec:	add    BYTE PTR es:[rdi+0x54],al
  40f6f0:	rex.WB
  40f6f1:	rex.RX push rbx
  40f6f3:	gs je  0x40f73c
  40f6f6:	jb     0x40f767
  40f6f8:	ins    DWORD PTR es:[rdi],dx
  40f6f9:	push   rax
  40f6fa:	jb     0x40f76b
  40f6fc:	push   0x34
  40f6fe:	add    BYTE PTR [rax],al
  40f700:	(bad)  
  40f701:	add    BYTE PTR [rdi+0x54],al
  40f704:	rex.WB
  40f705:	rex.RX push rdi
  40f707:	jb     0x40f772
  40f709:	je     0x40f770
  40f70b:	rex.WXB
  40f70c:	gs jns 0x40f782
  40f70f:	add    BYTE PTR [rsi],dh
  40f711:	add    BYTE PTR [rax+0x54],bl
  40f714:	rex.WB
  40f715:	rex.RX
  40f716:	rex.RX
  40f717:	rex.XB ins BYTE PTR es:[rdi],dx
  40f719:	outs   dx,DWORD PTR ds:[rsi]
  40f71a:	jae    0x40f781
  40f71c:	add    BYTE PTR [rax],al
  40f71e:	add    BYTE PTR [rax],al
  40f720:	cmp    DWORD PTR [rax],eax
  40f722:	pop    rax
  40f723:	push   rsp
  40f724:	rex.WB
  40f725:	rex.RX
  40f726:	rex.RX
  40f727:	rex.WRXB jo 0x40f78f
  40f72a:	outs   dx,BYTE PTR ds:[rsi]
  40f72b:	add    al,bl
  40f72d:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40f731:	gs je  0x40f799
  40f734:	rex.XB jb 0x40f7a0
  40f737:	je     0x40f7a2
  40f739:	movsxd esp,DWORD PTR [rcx+0x6c]
  40f73c:	push   rbx
  40f73d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40f742:	outs   dx,BYTE PTR ds:[rsi]
  40f743:	add    al,bh
  40f745:	add    BYTE PTR [rbp+0x6e],al
  40f748:	je     0x40f7af
  40f74a:	jb     0x40f78f
  40f74c:	jb     0x40f7b7
  40f74e:	je     0x40f7b9
  40f750:	movsxd esp,DWORD PTR [rcx+0x6c]
  40f753:	push   rbx
  40f754:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40f759:	outs   dx,BYTE PTR ds:[rsi]
  40f75a:	add    BYTE PTR [rax],al
  40f75c:	int    0x1
  40f75e:	rex.RXB
  40f75f:	gs je  0x40f7a5
  40f762:	jne    0x40f7d6
  40f764:	jb     0x40f7cb
  40f766:	outs   dx,BYTE PTR ds:[rsi]
  40f767:	je     0x40f7b9
  40f769:	jb     0x40f7da
  40f76b:	movsxd esp,DWORD PTR [rbp+0x73]
  40f76e:	jae    0x40f770
  40f770:	(bad)  
  40f771:	add    DWORD PTR [rdi+0x65],eax
  40f774:	je     0x40f7b9
  40f776:	jne    0x40f7ea
  40f778:	jb     0x40f7df
  40f77a:	outs   dx,BYTE PTR ds:[rsi]
  40f77b:	je     0x40f7cd
  40f77d:	jb     0x40f7ee
  40f77f:	movsxd esp,DWORD PTR [rbp+0x73]
  40f782:	jae    0x40f7cd
  40f784:	fs add dl,dl
  40f787:	add    DWORD PTR [rdi+0x65],eax
  40f78a:	je     0x40f7cf
  40f78c:	jne    0x40f800
  40f78e:	jb     0x40f7f5
  40f790:	outs   dx,BYTE PTR ds:[rsi]
  40f791:	je     0x40f7e7
  40f793:	push   0x64616572
  40f798:	rex.WB
  40f799:	add    BYTE PTR fs:[rax],al
  40f79c:	adc    BYTE PTR [rdx],al
  40f79e:	rex.RXB
  40f79f:	gs je  0x40f7ee
  40f7a2:	(bad)  
  40f7a3:	jae    0x40f819
  40f7a5:	rex.RB jb 0x40f81a
  40f7a8:	outs   dx,DWORD PTR ds:[rsi]
  40f7a9:	jb     0x40f7ab
  40f7ab:	add    BYTE PTR [rbx+0x2],dh
  40f7ae:	rex.RXB
  40f7af:	gs je  0x40f805
  40f7b2:	je     0x40f815
  40f7b4:	jb     0x40f82a
  40f7b6:	jne    0x40f828
  40f7b8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40f7ba:	outs   dx,WORD PTR ds:[rsi]
  40f7bc:	add    BYTE PTR [r10+0x74654702],cl
  40f7c3:	push   rbx
  40f7c4:	jns    0x40f839
  40f7c6:	je     0x40f82d
  40f7c8:	ins    DWORD PTR es:[rdi],dx
  40f7c9:	push   rsp
  40f7ca:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40f7d1:	ins    BYTE PTR es:[rdi],dx
  40f7d2:	gs push rsp
  40f7d4:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40f7db:	gs je  0x40f832
  40f7de:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40f7e5:	je     0x40f7e7
  40f7e7:	add    cl,bh
  40f7e9:	add    cl,BYTE PTR [rcx+0x6e]
  40f7ec:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40f7f4:	rex.XB jb 0x40f860
  40f7f7:	je     0x40f862
  40f7f9:	movsxd esp,DWORD PTR [rcx+0x6c]
  40f7fc:	push   rbx
  40f7fd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40f802:	outs   dx,BYTE PTR ds:[rsi]
  40f803:	add    BYTE PTR [rbx+0x3],cl
  40f806:	rex.WR
  40f807:	gs (bad) 
  40f809:	jbe    0x40f870
  40f80b:	rex.XB jb 0x40f877
  40f80e:	je     0x40f879
  40f810:	movsxd esp,DWORD PTR [rcx+0x6c]
  40f813:	push   rbx
  40f814:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40f819:	outs   dx,BYTE PTR ds:[rsi]
  40f81a:	add    BYTE PTR [rax],al
  40f81c:	mov    ebx,0x65755103
  40f821:	jb     0x40f89c
  40f823:	push   rax
  40f824:	gs jb  0x40f88d
  40f827:	outs   dx,DWORD PTR ds:[rsi]
  40f828:	jb     0x40f897
  40f82a:	(bad)  
  40f82b:	outs   dx,BYTE PTR ds:[rsi]
  40f82c:	movsxd esp,DWORD PTR [rbp+0x43]
  40f82f:	outs   dx,DWORD PTR ds:[rsi]
  40f830:	jne    0x40f8a0
  40f832:	je     0x40f899
  40f834:	jb     0x40f836
  40f836:	add    DWORD PTR [rdx+rdx*2],eax
  40f839:	je     0x40f8a7
  40f83b:	rex.B
  40f83c:	fs fs rex.RX jne 0x40f8af
  40f841:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40f845:	outs   dx,BYTE PTR ds:[rsi]
  40f846:	push   rsp
  40f847:	(bad)  
  40f848:	(bad)  
  40f849:	ins    BYTE PTR es:[rdi],dx
  40f84a:	add    BYTE PTR gs:[rdx],al
  40f84d:	add    al,0x52
  40f84f:	je     0x40f8bd
  40f851:	rex.XB (bad) 
  40f853:	jo     0x40f8c9
  40f855:	jne    0x40f8c9
  40f857:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40f85a:	outs   dx,BYTE PTR ds:[rsi]
  40f85b:	je     0x40f8c2
  40f85d:	js     0x40f8d3
  40f85f:	add    BYTE PTR [rcx],cl
  40f861:	add    al,0x52
  40f863:	je     0x40f8d1
  40f865:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40f867:	outs   dx,DWORD PTR ds:[rsi]
  40f868:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40f86c:	jne    0x40f8dc
  40f86e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40f872:	outs   dx,BYTE PTR ds:[rsi]
  40f873:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40f875:	je     0x40f8e9
  40f877:	jns    0x40f879
  40f879:	add    BYTE PTR [rax],dl
  40f87b:	add    al,0x52
  40f87d:	je     0x40f8eb
  40f87f:	push   rsi
  40f880:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40f887:	outs   dx,BYTE PTR ds:[rsi]
  40f888:	ja     0x40f8f3
  40f88a:	outs   dx,BYTE PTR ds:[rsi]
  40f88b:	add    BYTE PTR fs:[rax],al
  40f88e:	lahf   
  40f88f:	add    al,0x53
  40f891:	gs je  0x40f8e9
  40f894:	outs   dx,BYTE PTR ds:[rsi]
  40f895:	push   0x6c646e61
  40f89a:	gs fs rex.RB js 0x40f902
  40f89f:	gs jo  0x40f916
  40f8a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40f8a9:	gs jb  0x40f8ac
  40f8ac:	lods   al,BYTE PTR ds:[rsi]
  40f8ad:	add    al,0x53
  40f8af:	ins    BYTE PTR es:[rdi],dx
  40f8b0:	gs gs jo 0x40f8b4
  40f8b4:	mov    edx,0x72655404
  40f8b9:	ins    DWORD PTR es:[rdi],dx
  40f8ba:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40f8c1:	outs   dx,DWORD PTR ds:[rsi]
  40f8c2:	movsxd esp,DWORD PTR [rbp+0x73]
  40f8c5:	jae    0x40f8c7
  40f8c7:	add    cl,al
  40f8c9:	add    al,0x54
  40f8cb:	ins    BYTE PTR es:[rdi],dx
  40f8cc:	jae    0x40f915
  40f8ce:	gs je  0x40f927
  40f8d1:	(bad)  
  40f8d2:	ins    BYTE PTR es:[rdi],dx
  40f8d3:	jne    0x40f93a
  40f8d5:	add    dh,cl
  40f8d7:	add    al,0x55
  40f8d9:	outs   dx,BYTE PTR ds:[rsi]
  40f8da:	push   0x6c646e61
  40f8df:	gs fs rex.RB js 0x40f947
  40f8e4:	gs jo  0x40f95b
  40f8e7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40f8ee:	gs jb  0x40f8f1
  40f8f1:	add    ah,ch
  40f8f3:	add    al,0x56
  40f8f5:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40f8fc:	jb     0x40f96d
  40f8fe:	je     0x40f965
  40f900:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40f904:	out    dx,al
  40f905:	add    al,0x56
  40f907:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40f90e:	jne    0x40f975
  40f910:	jb     0x40f98b
  40f912:	add    BYTE PTR [rax],al
  40f914:	(bad)  
  40f915:	add    BYTE PTR [rdi+0x5f],bl
  40f918:	rex.XB pop r15
  40f91a:	jae    0x40f98c
  40f91c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40f920:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40f927:	ins    BYTE PTR es:[rdi],dx
  40f928:	gs jb  0x40f92b
  40f92b:	add    BYTE PTR [rsi+0x0],al
  40f92e:	pop    rdi
  40f92f:	pop    rdi
  40f930:	(bad)  
  40f931:	jb     0x40f99a
  40f933:	jbe    0x40f935
  40f935:	add    BYTE PTR [rsi+0x0],cl
  40f938:	pop    rdi
  40f939:	pop    rdi
  40f93a:	fs ins BYTE PTR es:[rdi],dx
  40f93c:	ins    BYTE PTR es:[rdi],dx
  40f93d:	outs   dx,DWORD PTR ds:[rsi]
  40f93e:	outs   dx,BYTE PTR ds:[rsi]
  40f93f:	gs js  0x40f9ab
  40f942:	je     0x40f944
  40f944:	push   rcx
  40f945:	add    BYTE PTR [rdi+0x5f],bl
  40f948:	addr32 gs je 0x40f9b9
  40f94c:	(bad)  
  40f94d:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40f954:	push   rdx
  40f955:	add    BYTE PTR [rdi+0x5f],bl
  40f958:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40f95f:	add    BYTE PTR [rbx+0x0],dl
  40f962:	pop    rdi
  40f963:	pop    rdi
  40f964:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40f96b:	movsxd eax,DWORD PTR [rax]
  40f96d:	add    BYTE PTR [rdx+0x0],bl
  40f970:	pop    rdi
  40f971:	pop    rdi
  40f972:	ins    BYTE PTR es:[rdi],dx
  40f973:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40f976:	jbe    0x40f9d7
  40f978:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40f97f:	add    BYTE PTR [rdi+0x5f],bl
  40f982:	jae    0x40f9e9
  40f984:	je     0x40f9e5
  40f986:	(bad)  
  40f987:	jo     0x40f9f9
  40f989:	pop    rdi
  40f98a:	je     0x40fa05
  40f98c:	jo     0x40f9f3
  40f98e:	add    BYTE PTR [rax],al
  40f990:	(bad)  
  40f991:	add    BYTE PTR [rdi+0x5f],bl
  40f994:	jae    0x40f9fb
  40f996:	je     0x40fa0d
  40f998:	jae    0x40f9ff
  40f99a:	jb     0x40fa09
  40f99c:	(bad)  
  40f99d:	je     0x40fa07
  40f99f:	gs jb  0x40fa14
  40f9a2:	add    BYTE PTR [rax],al
  40f9a4:	jno    0x40f9a6
  40f9a6:	pop    rdi
  40f9a7:	(bad)  
  40f9a8:	movsxd ebp,DWORD PTR [rbp+0x64]
  40f9ab:	ins    BYTE PTR es:[rdi],dx
  40f9ac:	outs   dx,BYTE PTR ds:[rsi]
  40f9ad:	add    BYTE PTR [rax+0x0],bh
  40f9b0:	pop    rdi
  40f9b1:	(bad)  
  40f9b2:	ins    DWORD PTR es:[rdi],dx
  40f9b3:	jae    0x40fa1c
  40f9b5:	pop    rdi
  40f9b6:	gs js  0x40fa22
  40f9b9:	je     0x40f9bb
  40f9bb:	add    BYTE PTR [rdx+0x65635f00],cl
  40f9c1:	js     0x40fa2c
  40f9c3:	je     0x40f9c5
  40f9c5:	add    dl,bl
  40f9c7:	add    BYTE PTR [rdi+0x66],bl
  40f9ca:	ins    DWORD PTR es:[rdi],dx
  40f9cb:	outs   dx,DWORD PTR ds:[rsi]
  40f9cc:	fs add BYTE PTR gs:[rax],al
  40f9d0:	sbb    al,BYTE PTR [rcx]
  40f9d2:	pop    rdi
  40f9d3:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40f9da:	ins    DWORD PTR es:[rdi],dx
  40f9db:	add    BYTE PTR [rax+0x6f6c5f01],al
  40f9e1:	movsxd ebp,DWORD PTR [rbx+0x0]
  40f9e4:	and    eax,0x6e6f5f02
  40f9e9:	gs js  0x40fa55
  40f9ec:	je     0x40f9ee
  40f9ee:	(bad)
  40f9f2:	outs   dx,BYTE PTR ds:[rsi]
  40f9f3:	ins    BYTE PTR es:[rdi],dx
  40f9f4:	outs   dx,DWORD PTR ds:[rsi]
  40f9f5:	movsxd ebp,DWORD PTR [rbx+0x0]
  40f9f8:	jg     0x40f9fd
  40f9fa:	(bad)  
  40f9fb:	(bad)  
  40f9fc:	outs   dx,DWORD PTR ds:[rsi]
  40f9fd:	jb     0x40fa73
  40f9ff:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  40fa06:	add    BYTE PTR [rax],al
  40fa08:	nop
  40fa09:	add    esp,DWORD PTR [rbx+0x61]
  40fa0c:	ins    BYTE PTR es:[rdi],dx
  40fa0d:	ins    BYTE PTR es:[rdi],dx
  40fa0e:	outs   dx,DWORD PTR ds:[rsi]
  40fa0f:	movsxd eax,DWORD PTR [rax]
  40fa11:	add    BYTE PTR [rbp+0x69786503],bl
  40fa17:	je     0x40fa19
  40fa19:	add    BYTE PTR [rcx+0x6c636603],ah
  40fa1f:	outs   dx,DWORD PTR ds:[rsi]
  40fa20:	jae    0x40fa87
  40fa22:	add    BYTE PTR [rax],al
  40fa24:	scas   al,BYTE PTR es:[rdi]
  40fa25:	add    esp,DWORD PTR [rsi+0x6f]
  40fa28:	jo     0x40fa8f
  40fa2a:	outs   dx,BYTE PTR ds:[rsi]
  40fa2b:	add    BYTE PTR [rax+0x72706603],dh
  40fa31:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  40fa38:	data16 jo 0x40fab0
  40fa3b:	je     0x40faa0
  40fa3d:	add    BYTE PTR [rdi+0x65726603],dh
  40fa43:	add    BYTE PTR gs:[rax],al
  40fa46:	mov    ebx,0x63736603
  40fa4b:	(bad)  
  40fa4c:	outs   dx,BYTE PTR ds:[rsi]
  40fa4d:	data16 add BYTE PTR [rax],al
  40fa50:	ret    0x6603
  40fa53:	ja     0x40fac7
  40fa55:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  40fa5d:	gs je  0x40fac5
  40fa60:	outs   dx,BYTE PTR ds:[rsi]
  40fa61:	jbe    0x40fa63
  40fa63:	add    al,dh
  40fa65:	add    ebp,DWORD PTR [rbp+0x61]
  40fa68:	ins    BYTE PTR es:[rdi],dx
  40fa69:	ins    BYTE PTR es:[rdi],dx
  40fa6a:	outs   dx,DWORD PTR ds:[rsi]
  40fa6b:	movsxd eax,DWORD PTR [rax]
  40fa6d:	add    al,bh
  40fa6f:	add    ebp,DWORD PTR [rbp+0x65]
  40fa72:	ins    DWORD PTR es:[rdi],dx
  40fa73:	movsxd esi,DWORD PTR [rax+0x79]
  40fa76:	add    BYTE PTR [rax],al
  40fa78:	inc    BYTE PTR [rbx]
  40fa7a:	jo     0x40fae1
  40fa7c:	jb     0x40faf0
  40fa7e:	outs   dx,DWORD PTR ds:[rsi]
  40fa7f:	jb     0x40fa81
  40fa81:	add    BYTE PTR [rcx],al
  40fa83:	add    al,0x70
  40fa85:	jb     0x40faf0
  40fa87:	outs   dx,BYTE PTR ds:[rsi]
  40fa88:	je     0x40faf0
  40fa8a:	add    BYTE PTR [rax],al
  40fa8c:	add    eax,0x74757004
  40fa91:	jae    0x40fa93
  40fa93:	add    BYTE PTR [rdx],dl
  40fa95:	add    al,0x73
  40fa97:	gs je  0x40fafc
  40fa9a:	jne    0x40fb02
  40fa9c:	add    BYTE PTR [rax],al
  40fa9e:	(bad)  
  40fa9f:	add    al,0x73
  40faa1:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40faa8:	and    eax,DWORD PTR [rbx+rsi*2]
  40faab:	je     0x40fb1f
  40faad:	movsxd ebp,DWORD PTR [rax+0x72]
  40fab0:	add    BYTE PTR [rax],al
  40fab2:	and    al,0x4
  40fab4:	jae    0x40fb2a
  40fab6:	jb     0x40fb1b
  40fab8:	ins    DWORD PTR es:[rdi],dx
  40fab9:	jo     0x40fabb
  40fabb:	add    BYTE PTR [rbx],ch
  40fabd:	add    al,0x73
  40fabf:	je     0x40fb33
  40fac1:	ins    BYTE PTR es:[rdi],dx
  40fac2:	outs   dx,BYTE PTR gs:[rsi]
  40fac4:	add    BYTE PTR [rax],al
  40fac6:	cs add al,0x73
  40fac9:	je     0x40fb3d
  40facb:	outs   dx,BYTE PTR ds:[rsi]
  40facc:	movsxd ebp,DWORD PTR [rbp+0x70]
  40facf:	add    BYTE PTR [rcx],bh
  40fad1:	add    al,0x73
  40fad3:	je     0x40fb47
  40fad5:	je     0x40fb46
  40fad7:	jne    0x40fb45
  40fad9:	add    BYTE PTR [rsi+0x4],cl
  40fadc:	jbe    0x40fb44
  40fade:	jo     0x40fb52
  40fae0:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40fae7:	add    BYTE PTR [rip+0x46495400],bl        # 0x468a4eed
  40faed:	rex.RX
  40faee:	rex.R
  40faef:	gs data16 (bad) 
  40faf2:	jne    0x40fb60
  40faf4:	je     0x40fb49
  40faf6:	je     0x40fb6a
  40faf8:	imul   esi,DWORD PTR [rax+0x53],0x657a69
  40faff:	add    BYTE PTR [rsi],bl
  40fb01:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  40fb05:	rex.RX
  40fb06:	rex.R
  40fb07:	gs data16 (bad) 
  40fb0a:	jne    0x40fb78
  40fb0c:	je     0x40fb62
  40fb0e:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
  40fb16:	add    BYTE PTR [rax],al
  40fb18:	(bad)  
  40fb19:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  40fb1d:	rex.RX
  40fb1e:	rex.RB jb 0x40fb93
  40fb21:	outs   dx,DWORD PTR ds:[rsi]
  40fb22:	jb     0x40fb24
  40fb24:	(bad)  
  40fb25:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  40fb29:	rex.RX
  40fb2a:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x656d61
  40fb33:	add    BYTE PTR [rip+0x46495400],bh        # 0x468a4f39
  40fb39:	rex.RX
  40fb3a:	rex.RXB
  40fb3b:	gs je  0x40fb84
  40fb3e:	imul   esp,DWORD PTR [rbp+0x6c],0x5c000064
  40fb45:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  40fb49:	rex.RX
  40fb4a:	rex.WB jae 0x40fba1
  40fb4d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x61000000
  40fb55:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  40fb59:	rex.RX
  40fb5a:	rex.WRX jne 0x40fbca
  40fb5d:	(bad)  
  40fb5e:	gs jb  0x40fbb0
  40fb61:	push   bx
  40fb63:	je     0x40fbd7
  40fb65:	imul   esi,DWORD PTR [rax+0x73],0x0
  40fb6c:	ins    BYTE PTR es:[rdi],dx
  40fb6d:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  40fb71:	rex.RX push rdx
  40fb73:	(bad)  
  40fb74:	jae    0x40fbea
  40fb76:	gs jb  0x40fbcc
  40fb79:	movsxd esp,DWORD PTR [rcx+0x6e]
  40fb7c:	ins    BYTE PTR es:[rdi],dx
  40fb7d:	imul   ebp,DWORD PTR [rsi+0x65],0x657a6953
  40fb84:	add    BYTE PTR [rax],al
  40fb86:	add    BYTE PTR [rax],al
  40fb88:	jb     0x40fb8a
  40fb8a:	push   rsp
  40fb8b:	rex.WB
  40fb8c:	rex.RX
  40fb8d:	rex.RX push rdx
  40fb8f:	gs (bad) 
  40fb91:	imul   r14d,DWORD PTR fs:[rdx+0x65],0x726f7463
  40fb9a:	jns    0x40fb9c
  40fb9c:	je     0x40fb9e
  40fb9e:	push   rsp
  40fb9f:	rex.WB
  40fba0:	rex.RX
  40fba1:	rex.RX push rdx
  40fba3:	gs (bad) 
  40fba5:	rex.RB outs dx,BYTE PTR fs:[rsi]
  40fba8:	movsxd ebp,DWORD PTR [rdi+0x64]
  40fbab:	gs fs push rbx
  40fbae:	je     0x40fc22
  40fbb0:	imul   esi,DWORD PTR [rax+0x0],0x54007c00
  40fbb7:	rex.WB
  40fbb8:	rex.RX
  40fbb9:	rex.RX push rdx
  40fbbb:	gs (bad) 
  40fbbd:	fs push rbx
  40fbbf:	movsxd esp,DWORD PTR [rcx+0x6e]
  40fbc2:	ins    BYTE PTR es:[rdi],dx
  40fbc3:	imul   ebp,DWORD PTR [rsi+0x65],0x7d0000
  40fbca:	push   rsp
  40fbcb:	rex.WB
  40fbcc:	rex.RX
  40fbcd:	rex.RX push rdx
  40fbcf:	gs (bad) 
  40fbd1:	fs push rsp
  40fbd3:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x54008100
  40fbdb:	rex.WB
  40fbdc:	rex.RX
  40fbdd:	rex.RX push rbx
  40fbdf:	movsxd esp,DWORD PTR [rcx+0x6e]
  40fbe2:	ins    BYTE PTR es:[rdi],dx
  40fbe3:	imul   ebp,DWORD PTR [rsi+0x65],0x657a6953
  40fbea:	add    BYTE PTR [rax],al
  40fbec:	mov    DWORD PTR [rax],eax
  40fbee:	push   rsp
  40fbef:	rex.WB
  40fbf0:	rex.RX
  40fbf1:	rex.RX push rbx
  40fbf3:	gs je  0x40fc3c
  40fbf6:	imul   esp,DWORD PTR [rbp+0x6c],0x8d000064
  40fbfd:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  40fc01:	rex.RX push rbx
  40fc03:	gs je  0x40fc59
  40fc06:	jne    0x40fc6a
  40fc08:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
  40fc10:	jns    0x40fc12
  40fc12:	add    BYTE PTR [rax],al
  40fc14:	xchg   ebx,eax
  40fc15:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  40fc19:	rex.RX push rbx
  40fc1b:	je     0x40fc8f
  40fc1d:	imul   esi,DWORD PTR [rax+0x53],0x657a69
  40fc24:	movabs al,ds:0x6c69544646495400
  40fc2d:	gs push rdx
  40fc2f:	outs   dx,DWORD PTR ds:[rsi]
  40fc30:	ja     0x40fc85
  40fc32:	imul   edi,DWORD PTR [rdx+0x65],0xa2000000
  40fc39:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  40fc3d:	rex.RX push rsp
  40fc3f:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
  40fc47:	add    BYTE PTR [rdx+0x46495400],ch
  40fc4d:	rex.RX push rsi
  40fc4f:	push   rbx
  40fc50:	je     0x40fcc4
  40fc52:	imul   esi,DWORD PTR [rax+0x53],0x657a69
  40fc59:	add    BYTE PTR [rax],al
  40fc5b:	add    BYTE PTR [rsi+0x46495400],ch
  40fc61:	rex.RX push rdi
  40fc63:	(bad)  
  40fc64:	jb     0x40fcd4
  40fc66:	imul   ebp,DWORD PTR [rsi+0x67],0xb3000000
  40fc6d:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  40fc71:	rex.RX push rdi
  40fc73:	jb     0x40fcde
  40fc75:	je     0x40fcdc
  40fc77:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
  40fc7f:	jns    0x40fc81
  40fc81:	add    BYTE PTR [rax],al
  40fc83:	add    BYTE PTR [rax+rax*1+0x46464954],dh
  40fc8a:	push   rdi
  40fc8b:	jb     0x40fcf6
  40fc8d:	je     0x40fcf4
  40fc8f:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40fc91:	movsxd ebp,DWORD PTR [rdi+0x64]
  40fc94:	gs fs push rbx
  40fc97:	je     0x40fd0b
  40fc99:	imul   esi,DWORD PTR [rax+0x0],0x495400b8
  40fca0:	rex.RX
  40fca1:	rex.RX push rdi
  40fca3:	jb     0x40fd0e
  40fca5:	je     0x40fd0c
  40fca7:	push   rbx
  40fca8:	movsxd esp,DWORD PTR [rcx+0x6e]
  40fcab:	ins    BYTE PTR es:[rdi],dx
  40fcac:	imul   ebp,DWORD PTR [rsi+0x65],0x5400b900
  40fcb3:	rex.WB
  40fcb4:	rex.RX
  40fcb5:	rex.RX push rdi
  40fcb7:	jb     0x40fd22
  40fcb9:	je     0x40fd20
  40fcbb:	push   rsp
  40fcbc:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x545f00e2
  40fcc4:	rex.WB
  40fcc5:	rex.RX
  40fcc6:	rex.RX
  40fcc7:	data16 jb 0x40fd2f
  40fcca:	gs add ah,ah
  40fccd:	add    BYTE PTR [rdi+0x54],bl
  40fcd0:	rex.WB
  40fcd1:	rex.RX
  40fcd2:	rex.RX ins DWORD PTR es:[rdi],dx
  40fcd4:	(bad)  
  40fcd5:	ins    BYTE PTR es:[rdi],dx
  40fcd6:	ins    BYTE PTR es:[rdi],dx
  40fcd7:	outs   dx,DWORD PTR ds:[rsi]
  40fcd8:	movsxd eax,DWORD PTR [rax]
  40fcda:	add    BYTE PTR [rax],al
  40fcdc:	add    al,dh
  40fcde:	add    BYTE PTR [rax],al
  40fce0:	add    al,dh
  40fce2:	add    BYTE PTR [rax],al
  40fce4:	add    al,dh
  40fce6:	add    BYTE PTR [rax],al
  40fce8:	add    al,dh
  40fcea:	add    BYTE PTR [rax],al
  40fcec:	add    al,dh
  40fcee:	add    BYTE PTR [rax],al
  40fcf0:	add    al,dh
  40fcf2:	add    BYTE PTR [rax],al
  40fcf4:	add    al,dh
  40fcf6:	add    BYTE PTR [rax],al
  40fcf8:	ins    BYTE PTR es:[rdi],dx
  40fcf9:	imul   esp,DWORD PTR [rdx+0x67],0x69746f65
  40fd00:	data16 sub ax,0x2e32
  40fd05:	fs ins BYTE PTR es:[rdi],dx
  40fd07:	ins    BYTE PTR es:[rdi],dx
  40fd08:	add    BYTE PTR [rax],al
  40fd0a:	add    BYTE PTR [rax],al
  40fd0c:	adc    al,0xf0
  40fd0e:	add    BYTE PTR [rax],al
  40fd10:	adc    al,0xf0
  40fd12:	add    BYTE PTR [rax],al
  40fd14:	adc    al,0xf0
  40fd16:	add    BYTE PTR [rax],al
  40fd18:	adc    al,0xf0
  40fd1a:	add    BYTE PTR [rax],al
  40fd1c:	adc    al,0xf0
  40fd1e:	add    BYTE PTR [rax],al
  40fd20:	adc    al,0xf0
  40fd22:	add    BYTE PTR [rax],al
  40fd24:	adc    al,0xf0
  40fd26:	add    BYTE PTR [rax],al
  40fd28:	adc    al,0xf0
  40fd2a:	add    BYTE PTR [rax],al
  40fd2c:	adc    al,0xf0
  40fd2e:	add    BYTE PTR [rax],al
  40fd30:	adc    al,0xf0
  40fd32:	add    BYTE PTR [rax],al
  40fd34:	adc    al,0xf0
  40fd36:	add    BYTE PTR [rax],al
  40fd38:	adc    al,0xf0
  40fd3a:	add    BYTE PTR [rax],al
  40fd3c:	adc    al,0xf0
  40fd3e:	add    BYTE PTR [rax],al
  40fd40:	adc    al,0xf0
  40fd42:	add    BYTE PTR [rax],al
  40fd44:	adc    al,0xf0
  40fd46:	add    BYTE PTR [rax],al
  40fd48:	adc    al,0xf0
  40fd4a:	add    BYTE PTR [rax],al
  40fd4c:	adc    al,0xf0
  40fd4e:	add    BYTE PTR [rax],al
  40fd50:	adc    al,0xf0
  40fd52:	add    BYTE PTR [rax],al
  40fd54:	adc    al,0xf0
  40fd56:	add    BYTE PTR [rax],al
  40fd58:	adc    al,0xf0
  40fd5a:	add    BYTE PTR [rax],al
  40fd5c:	adc    al,0xf0
  40fd5e:	add    BYTE PTR [rax],al
  40fd60:	adc    al,0xf0
  40fd62:	add    BYTE PTR [rax],al
  40fd64:	adc    al,0xf0
  40fd66:	add    BYTE PTR [rax],al
  40fd68:	rex.WXB
  40fd69:	rex.RB push r10
  40fd6b:	rex.WRX
  40fd6c:	rex.RB
  40fd6d:	xor    r14,QWORD PTR [rdx]
  40fd70:	cs fs ins BYTE PTR es:[rdi],dx
  40fd73:	ins    BYTE PTR es:[rdi],dx
  40fd74:	add    BYTE PTR [rax],al
  40fd76:	add    BYTE PTR [rax],al
  40fd78:	sub    al,dh
  40fd7a:	add    BYTE PTR [rax],al
  40fd7c:	sub    al,dh
  40fd7e:	add    BYTE PTR [rax],al
  40fd80:	sub    al,dh
  40fd82:	add    BYTE PTR [rax],al
  40fd84:	sub    al,dh
  40fd86:	add    BYTE PTR [rax],al
  40fd88:	sub    al,dh
  40fd8a:	add    BYTE PTR [rax],al
  40fd8c:	sub    al,dh
  40fd8e:	add    BYTE PTR [rax],al
  40fd90:	sub    al,dh
  40fd92:	add    BYTE PTR [rax],al
  40fd94:	sub    al,dh
  40fd96:	add    BYTE PTR [rax],al
  40fd98:	sub    al,dh
  40fd9a:	add    BYTE PTR [rax],al
  40fd9c:	sub    al,dh
  40fd9e:	add    BYTE PTR [rax],al
  40fda0:	sub    al,dh
  40fda2:	add    BYTE PTR [rax],al
  40fda4:	sub    al,dh
  40fda6:	add    BYTE PTR [rax],al
  40fda8:	sub    al,dh
  40fdaa:	add    BYTE PTR [rax],al
  40fdac:	sub    al,dh
  40fdae:	add    BYTE PTR [rax],al
  40fdb0:	sub    al,dh
  40fdb2:	add    BYTE PTR [rax],al
  40fdb4:	sub    al,dh
  40fdb6:	add    BYTE PTR [rax],al
  40fdb8:	sub    al,dh
  40fdba:	add    BYTE PTR [rax],al
  40fdbc:	sub    al,dh
  40fdbe:	add    BYTE PTR [rax],al
  40fdc0:	sub    al,dh
  40fdc2:	add    BYTE PTR [rax],al
  40fdc4:	sub    al,dh
  40fdc6:	add    BYTE PTR [rax],al
  40fdc8:	sub    al,dh
  40fdca:	add    BYTE PTR [rax],al
  40fdcc:	sub    al,dh
  40fdce:	add    BYTE PTR [rax],al
  40fdd0:	sub    al,dh
  40fdd2:	add    BYTE PTR [rax],al
  40fdd4:	sub    al,dh
  40fdd6:	add    BYTE PTR [rax],al
  40fdd8:	sub    al,dh
  40fdda:	add    BYTE PTR [rax],al
  40fddc:	sub    al,dh
  40fdde:	add    BYTE PTR [rax],al
  40fde0:	sub    al,dh
  40fde2:	add    BYTE PTR [rax],al
  40fde4:	sub    al,dh
  40fde6:	add    BYTE PTR [rax],al
  40fde8:	sub    al,dh
  40fdea:	add    BYTE PTR [rax],al
  40fdec:	sub    al,dh
  40fdee:	add    BYTE PTR [rax],al
  40fdf0:	sub    al,dh
  40fdf2:	add    BYTE PTR [rax],al
  40fdf4:	sub    al,dh
  40fdf6:	add    BYTE PTR [rax],al
  40fdf8:	sub    al,dh
  40fdfa:	add    BYTE PTR [rax],al
  40fdfc:	sub    al,dh
  40fdfe:	add    BYTE PTR [rax],al
  40fe00:	sub    al,dh
  40fe02:	add    BYTE PTR [rax],al
  40fe04:	sub    al,dh
  40fe06:	add    BYTE PTR [rax],al
  40fe08:	sub    al,dh
  40fe0a:	add    BYTE PTR [rax],al
  40fe0c:	sub    al,dh
  40fe0e:	add    BYTE PTR [rax],al
  40fe10:	sub    al,dh
  40fe12:	add    BYTE PTR [rax],al
  40fe14:	sub    al,dh
  40fe16:	add    BYTE PTR [rax],al
  40fe18:	sub    al,dh
  40fe1a:	add    BYTE PTR [rax],al
  40fe1c:	sub    al,dh
  40fe1e:	add    BYTE PTR [rax],al
  40fe20:	ins    DWORD PTR es:[rdi],dx
  40fe21:	jae    0x40fe99
  40fe23:	movsxd esi,DWORD PTR [rdx+0x74]
  40fe26:	cs fs ins BYTE PTR es:[rdi],dx
  40fe29:	ins    BYTE PTR es:[rdi],dx
  40fe2a:	add    BYTE PTR [rax],al
  40fe2c:	cmp    al,0xf0
  40fe2e:	add    BYTE PTR [rax],al
  40fe30:	cmp    al,0xf0
  40fe32:	add    BYTE PTR [rax],al
  40fe34:	cmp    al,0xf0
  40fe36:	add    BYTE PTR [rax],al
  40fe38:	cmp    al,0xf0
  40fe3a:	add    BYTE PTR [rax],al
  40fe3c:	cmp    al,0xf0
  40fe3e:	add    BYTE PTR [rax],al
  40fe40:	cmp    al,0xf0
  40fe42:	add    BYTE PTR [rax],al
  40fe44:	cmp    al,0xf0
  40fe46:	add    BYTE PTR [rax],al
  40fe48:	cmp    al,0xf0
  40fe4a:	add    BYTE PTR [rax],al
  40fe4c:	cmp    al,0xf0
  40fe4e:	add    BYTE PTR [rax],al
  40fe50:	cmp    al,0xf0
  40fe52:	add    BYTE PTR [rax],al
  40fe54:	cmp    al,0xf0
  40fe56:	add    BYTE PTR [rax],al
  40fe58:	cmp    al,0xf0
  40fe5a:	add    BYTE PTR [rax],al
  40fe5c:	cmp    al,0xf0
  40fe5e:	add    BYTE PTR [rax],al
  40fe60:	cmp    al,0xf0
  40fe62:	add    BYTE PTR [rax],al
  40fe64:	cmp    al,0xf0
  40fe66:	add    BYTE PTR [rax],al
  40fe68:	cmp    al,0xf0
  40fe6a:	add    BYTE PTR [rax],al
  40fe6c:	cmp    al,0xf0
  40fe6e:	add    BYTE PTR [rax],al
  40fe70:	cmp    al,0xf0
  40fe72:	add    BYTE PTR [rax],al
  40fe74:	cmp    al,0xf0
  40fe76:	add    BYTE PTR [rax],al
  40fe78:	cmp    al,0xf0
  40fe7a:	add    BYTE PTR [rax],al
  40fe7c:	cmp    al,0xf0
  40fe7e:	add    BYTE PTR [rax],al
  40fe80:	cmp    al,0xf0
  40fe82:	add    BYTE PTR [rax],al
  40fe84:	cmp    al,0xf0
  40fe86:	add    BYTE PTR [rax],al
  40fe88:	cmp    al,0xf0
  40fe8a:	add    BYTE PTR [rax],al
  40fe8c:	cmp    al,0xf0
  40fe8e:	add    BYTE PTR [rax],al
  40fe90:	cmp    al,0xf0
  40fe92:	add    BYTE PTR [rax],al
  40fe94:	ins    BYTE PTR es:[rdi],dx
  40fe95:	imul   esp,DWORD PTR [rdx+0x74],0x2d666669
  40fe9c:	xor    eax,0x6c6c642e
  40fea1:	add    BYTE PTR [rax],al
	...

Disassembly of section .CRT:

0000000000410000 <.CRT>:
	...
  410008:	(bad)  
  410009:	adc    DWORD PTR [rax+0x0],eax
	...
  410020:	adc    BYTE PTR [rax],dl
  410022:	add    BYTE PTR [rax],al
  410025:	add    BYTE PTR [rax],al
  410027:	add    BYTE PTR [rax],dh
  410029:	pop    rbx
  41002a:	add    BYTE PTR [rax],al
	...
  41003d:	add    BYTE PTR [rax],al
  41003f:	add    BYTE PTR [rax+0x5d],ah
  410042:	add    BYTE PTR [rax],al
  410045:	add    BYTE PTR [rax],al
  410047:	add    BYTE PTR [rax],dh
  410049:	pop    rbp
  41004a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000411000 <.tls>:
	...
  411020:	add    BYTE PTR [rax],dl
  411022:	add    BYTE PTR [r8],al
  411025:	add    BYTE PTR [rax],al
  411027:	add    BYTE PTR [rax+0x10],ah
  41102a:	add    BYTE PTR [r8],al
  41102d:	add    BYTE PTR [rax],al
  41102f:	add    BYTE PTR [rsi+riz*8+0x40],bl
  411036:	add    BYTE PTR [rax],al
  411038:	add    BYTE PTR [rcx+0x0],al
	...
