
0dfd9b9733913d7e1fc1ca19798b9ed57c2d4138ae5fa1ad9c6e12f1dee7062c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x45f5]        # 0x405610
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x45f6]        # 0x405620
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x45f9]        # 0x405630
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x45bc]        # 0x405600
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x446f]        # 0x4054c0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4591]        # 0x4055f0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x403590
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402540
  401081:	mov    rdx,QWORD PTR [rip+0x44c8]        # 0x405550
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x44ae]        # 0x405540
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x4514]        # 0x4055b0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x443b]        # 0x4054e0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x402510
  4010af:	mov    rax,QWORD PTR [rip+0x437a]        # 0x405430
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x403590
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x12e9]        # 0x402410
  401127:	call   0x402400
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4475]        # 0x4055e0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x4405]        # 0x4055a0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403580
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rsi,QWORD PTR [rip+0x442a]        # 0x4055f0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rsi]
  4011d5:	mov    rdi,rdx
  4011d8:	rep stos QWORD PTR es:[rdi],rax
  4011db:	test   r9d,r9d
  4011de:	jne    0x4014b0
  4011e4:	mov    rax,QWORD PTR gs:0x30
  4011ed:	mov    rbx,QWORD PTR [rip+0x432c]        # 0x405520
  4011f4:	mov    rdi,QWORD PTR [rax+0x8]
  4011f8:	xor    ebp,ebp
  4011fa:	mov    r12,QWORD PTR [rip+0x8177]        # 0x409378
  401201:	jmp    0x401214
  401203:	cmp    rdi,rax
  401206:	je     0x401459
  40120c:	mov    ecx,0x3e8
  401211:	call   r12
  401214:	mov    rax,rbp
  401217:	lock cmpxchg QWORD PTR [rbx],rdi
  40121c:	test   rax,rax
  40121f:	jne    0x401203
  401221:	mov    rdi,QWORD PTR [rip+0x4308]        # 0x405530
  401228:	xor    ebp,ebp
  40122a:	mov    eax,DWORD PTR [rdi]
  40122c:	cmp    eax,0x1
  40122f:	je     0x401470
  401235:	mov    eax,DWORD PTR [rdi]
  401237:	test   eax,eax
  401239:	je     0x4014be
  40123f:	mov    DWORD PTR [rip+0x6dbb],0x1        # 0x408004
  401249:	mov    eax,DWORD PTR [rdi]
  40124b:	cmp    eax,0x1
  40124e:	je     0x401485
  401254:	test   ebp,ebp
  401256:	je     0x4014a6
  40125c:	mov    rax,QWORD PTR [rip+0x424d]        # 0x4054b0
  401263:	mov    rax,QWORD PTR [rax]
  401266:	test   rax,rax
  401269:	je     0x401277
  40126b:	xor    r8d,r8d
  40126e:	mov    edx,0x2
  401273:	xor    ecx,ecx
  401275:	call   rax
  401277:	call   0x402730
  40127c:	lea    rcx,[rip+0x1a4d]        # 0x402cd0
  401283:	call   QWORD PTR [rip+0x80e7]        # 0x409370
  401289:	mov    rdx,QWORD PTR [rip+0x4280]        # 0x405510
  401290:	mov    QWORD PTR [rdx],rax
  401293:	call   0x402be0
  401298:	lea    rcx,[rip+0xfffffffffffffd61]        # 0x401000
  40129f:	call   0x4035d0
  4012a4:	call   0x402520
  4012a9:	mov    rax,QWORD PTR [rip+0x4210]        # 0x4054c0
  4012b0:	mov    QWORD PTR [rip+0x7751],rax        # 0x408a08
  4012b7:	mov    rax,QWORD PTR [rip+0x4242]        # 0x405500
  4012be:	mov    rax,QWORD PTR [rax]
  4012c1:	mov    rax,QWORD PTR [rax]
  4012c4:	test   rax,rax
  4012c7:	je     0x401327
  4012c9:	xor    ecx,ecx
  4012cb:	jmp    0x4012e3
  4012cd:	nop    DWORD PTR [rax]
  4012d0:	mov    r8d,ecx
  4012d3:	xor    r8d,0x1
  4012d7:	cmp    dx,0x22
  4012db:	cmove  ecx,r8d
  4012df:	add    rax,0x2
  4012e3:	movzx  edx,WORD PTR [rax]
  4012e6:	cmp    dx,0x20
  4012ea:	ja     0x4012d0
  4012ec:	test   dx,dx
  4012ef:	je     0x4012fd
  4012f1:	and    ecx,0x1
  4012f4:	je     0x4012fd
  4012f6:	mov    ecx,0x1
  4012fb:	jmp    0x4012df
  4012fd:	sub    edx,0x1
  401300:	cmp    dx,0x1f
  401304:	ja     0x401320
  401306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401310:	add    rax,0x2
  401314:	movzx  ebx,WORD PTR [rax]
  401317:	lea    edx,[rbx-0x1]
  40131a:	cmp    dx,0x1f
  40131e:	jbe    0x401310
  401320:	mov    QWORD PTR [rip+0x76d9],rax        # 0x408a00
  401327:	mov    r8d,DWORD PTR [rsi]
  40132a:	test   r8d,r8d
  40132d:	je     0x401345
  40132f:	test   BYTE PTR [rsp+0x5c],0x1
  401334:	mov    eax,0xa
  401339:	jne    0x40144f
  40133f:	mov    DWORD PTR [rip+0x2cbb],eax        # 0x404000
  401345:	mov    r12d,DWORD PTR [rip+0x6cdc]        # 0x408028
  40134c:	lea    r13d,[r12+0x1]
  401351:	movsxd r13,r13d
  401354:	shl    r13,0x3
  401358:	mov    rcx,r13
  40135b:	call   0x403518
  401360:	test   r12d,r12d
  401363:	mov    rbp,rax
  401366:	mov    rdi,QWORD PTR [rip+0x6cb3]        # 0x408020
  40136d:	jle    0x4014dc
  401373:	xor    esi,esi
  401375:	mov    rdx,QWORD PTR [rdi+rsi*8]
  401379:	cmp    WORD PTR [rdx],0x0
  40137d:	je     0x401445
  401383:	mov    r8d,0x1
  401389:	nop    DWORD PTR [rax+0x0]
  401390:	add    r8,0x1
  401394:	cmp    WORD PTR [rdx+r8*2-0x2],0x0
  40139b:	jne    0x401390
  40139d:	lea    rbx,[r8+r8*1]
  4013a1:	mov    rcx,rbx
  4013a4:	call   0x403518
  4013a9:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
  4013ae:	mov    rdx,QWORD PTR [rdi+rsi*8]
  4013b2:	mov    r8,rbx
  4013b5:	mov    rcx,rax
  4013b8:	add    rsi,0x1
  4013bc:	call   0x403510
  4013c1:	cmp    r12d,esi
  4013c4:	jg     0x401375
  4013c6:	sub    r13,0x8
  4013ca:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013d3:	mov    QWORD PTR [rip+0x6c46],rbp        # 0x408020
  4013da:	call   0x4020f0
  4013df:	mov    rax,QWORD PTR [rip+0x40ea]        # 0x4054d0
  4013e6:	mov    rdx,QWORD PTR [rip+0x6c2b]        # 0x408018
  4013ed:	mov    ecx,DWORD PTR [rip+0x6c35]        # 0x408028
  4013f3:	mov    rax,QWORD PTR [rax]
  4013f6:	mov    QWORD PTR [rax],rdx
  4013f9:	mov    r8,QWORD PTR [rip+0x6c18]        # 0x408018
  401400:	mov    rdx,QWORD PTR [rip+0x6c19]        # 0x408020
  401407:	call   0x40160d
  40140c:	mov    ecx,DWORD PTR [rip+0x6bf6]        # 0x408008
  401412:	mov    DWORD PTR [rip+0x6bf4],eax        # 0x40800c
  401418:	test   ecx,ecx
  40141a:	je     0x4014e4
  401420:	mov    edx,DWORD PTR [rip+0x6bde]        # 0x408004
  401426:	test   edx,edx
  401428:	jne    0x401435
  40142a:	call   0x403570
  40142f:	mov    eax,DWORD PTR [rip+0x6bd7]        # 0x40800c
  401435:	add    rsp,0x98
  40143c:	pop    rbx
  40143d:	pop    rsi
  40143e:	pop    rdi
  40143f:	pop    rbp
  401440:	pop    r12
  401442:	pop    r13
  401444:	ret    
  401445:	mov    ebx,0x2
  40144a:	jmp    0x4013a1
  40144f:	movzx  eax,WORD PTR [rsp+0x60]
  401454:	jmp    0x40133f
  401459:	mov    rdi,QWORD PTR [rip+0x40d0]        # 0x405530
  401460:	mov    ebp,0x1
  401465:	mov    eax,DWORD PTR [rdi]
  401467:	cmp    eax,0x1
  40146a:	jne    0x401235
  401470:	mov    ecx,0x1f
  401475:	call   0x403578
  40147a:	mov    eax,DWORD PTR [rdi]
  40147c:	cmp    eax,0x1
  40147f:	jne    0x401254
  401485:	mov    rdx,QWORD PTR [rip+0x40e4]        # 0x405570
  40148c:	mov    rcx,QWORD PTR [rip+0x40cd]        # 0x405560
  401493:	call   0x403568
  401498:	test   ebp,ebp
  40149a:	mov    DWORD PTR [rdi],0x2
  4014a0:	jne    0x40125c
  4014a6:	xor    eax,eax
  4014a8:	xchg   QWORD PTR [rbx],rax
  4014ab:	jmp    0x40125c
  4014b0:	mov    rcx,rdx
  4014b3:	call   QWORD PTR [rip+0x7e67]        # 0x409320
  4014b9:	jmp    0x4011e4
  4014be:	mov    rdx,QWORD PTR [rip+0x40cb]        # 0x405590
  4014c5:	mov    rcx,QWORD PTR [rip+0x40b4]        # 0x405580
  4014cc:	mov    DWORD PTR [rdi],0x1
  4014d2:	call   0x403568
  4014d7:	jmp    0x401249
  4014dc:	xor    r13d,r13d
  4014df:	jmp    0x4013ca
  4014e4:	mov    ecx,eax
  4014e6:	call   0x403538
  4014eb:	nop
  4014ec:	nop    DWORD PTR [rax+0x0]
  4014f0:	sub    rsp,0x28
  4014f4:	mov    rax,QWORD PTR [rip+0x40f5]        # 0x4055f0
  4014fb:	mov    DWORD PTR [rax],0x1
  401501:	call   0x402120
  401506:	call   0x4011b0
  40150b:	nop
  40150c:	nop
  40150d:	add    rsp,0x28
  401511:	ret    
  401512:	nop    DWORD PTR [rax+0x0]
  401516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401520:	sub    rsp,0x28
  401524:	mov    rax,QWORD PTR [rip+0x40c5]        # 0x4055f0
  40152b:	mov    DWORD PTR [rax],0x0
  401531:	call   0x402120
  401536:	call   0x4011b0
  40153b:	nop
  40153c:	nop
  40153d:	add    rsp,0x28
  401541:	ret    
  401542:	nop
  401543:	nop
  401544:	nop
  401545:	nop
  401546:	nop
  401547:	nop
  401548:	nop
  401549:	nop
  40154a:	nop
  40154b:	nop
  40154c:	nop
  40154d:	nop
  40154e:	nop
  40154f:	nop
  401550:	push   rbp
  401551:	push   rbx
  401552:	sub    rsp,0x28
  401556:	lea    rbp,[rsp+0x80]
  40155e:	mov    QWORD PTR [rbp-0x40],rcx
  401562:	mov    rcx,QWORD PTR [rbp-0x40]
  401566:	call   0x401f70
  40156b:	mov    rbx,rax
  40156e:	lea    rdx,[rip+0x3a8b]        # 0x405000
  401575:	mov    rcx,QWORD PTR [rip+0x3ec4]        # 0x405440
  40157c:	call   0x401f08
  401581:	mov    rdx,rbx
  401584:	mov    rcx,rax
  401587:	call   0x401f08
  40158c:	mov    rdx,QWORD PTR [rip+0x3ebd]        # 0x405450
  401593:	mov    rcx,rax
  401596:	call   0x401f58
  40159b:	mov    ecx,0x1
  4015a0:	call   0x403538
  4015a5:	nop
  4015a6:	push   rbp
  4015a7:	push   rbx
  4015a8:	sub    rsp,0x38
  4015ac:	lea    rbp,[rsp+0x80]
  4015b4:	mov    DWORD PTR [rbp-0x30],ecx
  4015b7:	mov    QWORD PTR [rbp-0x28],rdx
  4015bb:	cmp    DWORD PTR [rbp-0x30],0x0
  4015bf:	jns    0x401606
  4015c1:	mov    rdx,QWORD PTR [rbp-0x28]
  4015c5:	lea    rax,[rbp-0x60]
  4015c9:	mov    rcx,rax
  4015cc:	call   0x401f40
  4015d1:	lea    rax,[rbp-0x60]
  4015d5:	mov    rcx,rax
  4015d8:	call   0x401550
  4015dd:	lea    rax,[rbp-0x60]
  4015e1:	mov    rcx,rax
  4015e4:	call   0x401f38
  4015e9:	jmp    0x401606
  4015eb:	mov    rbx,rax
  4015ee:	lea    rax,[rbp-0x60]
  4015f2:	mov    rcx,rax
  4015f5:	call   0x401f38
  4015fa:	mov    rax,rbx
  4015fd:	mov    rcx,rax
  401600:	call   0x4034a0
  401605:	nop
  401606:	add    rsp,0x38
  40160a:	pop    rbx
  40160b:	pop    rbp
  40160c:	ret    
  40160d:	push   rbp
  40160e:	push   rsi
  40160f:	push   rbx
  401610:	sub    rsp,0x110
  401617:	lea    rbp,[rsp+0x80]
  40161f:	mov    DWORD PTR [rbp+0xb0],ecx
  401625:	mov    QWORD PTR [rbp+0xb8],rdx
  40162c:	lea    rax,[rbp-0x11]
  401630:	mov    rcx,rax
  401633:	call   0x401f68
  401638:	lea    rdx,[rbp-0x11]
  40163c:	lea    rax,[rbp-0x20]
  401640:	mov    r8,rdx
  401643:	lea    rdx,[rip+0x39be]        # 0x405008
  40164a:	mov    rcx,rax
  40164d:	call   0x401f48
  401652:	mov    edx,0x2
  401657:	mov    ecx,0x0
  40165c:	mov    rax,QWORD PTR [rip+0x7e3d]        # 0x4094a0
  401663:	call   rax
  401665:	mov    ecx,eax
  401667:	lea    rax,[rbp-0x20]
  40166b:	mov    rdx,rax
  40166e:	call   0x4015a6
  401673:	lea    rax,[rbp-0x20]
  401677:	mov    rcx,rax
  40167a:	call   0x401f38
  40167f:	lea    rax,[rbp-0x11]
  401683:	mov    rcx,rax
  401686:	call   0x401f60
  40168b:	lea    rax,[rbp-0x1]
  40168f:	mov    rcx,rax
  401692:	call   0x401f68
  401697:	lea    rdx,[rbp-0x1]
  40169b:	lea    rax,[rbp-0x10]
  40169f:	mov    r8,rdx
  4016a2:	lea    rdx,[rip+0x397f]        # 0x405028
  4016a9:	mov    rcx,rax
  4016ac:	call   0x401f48
  4016b1:	lea    rax,[rbp-0x28]
  4016b5:	mov    rcx,rax
  4016b8:	call   0x4036d0
  4016bd:	mov    rbx,rax
  4016c0:	call   0x4036a0
  4016c5:	mov    QWORD PTR [rsp+0x20],rbx
  4016ca:	mov    r9,rax
  4016cd:	mov    r8d,0x1
  4016d3:	mov    edx,0x0
  4016d8:	mov    rcx,QWORD PTR [rip+0x3d31]        # 0x405410
  4016df:	mov    rax,QWORD PTR [rip+0x7db2]        # 0x409498
  4016e6:	call   rax
  4016e8:	mov    ecx,eax
  4016ea:	lea    rax,[rbp-0x10]
  4016ee:	mov    rdx,rax
  4016f1:	call   0x4015a6
  4016f6:	lea    rax,[rbp-0x10]
  4016fa:	mov    rcx,rax
  4016fd:	call   0x401f38
  401702:	lea    rax,[rbp-0x1]
  401706:	mov    rcx,rax
  401709:	call   0x401f60
  40170e:	lea    rax,[rbp+0xf]
  401712:	mov    rcx,rax
  401715:	call   0x401f68
  40171a:	lea    rdx,[rbp+0xf]
  40171e:	mov    rax,rbp
  401721:	mov    r8,rdx
  401724:	lea    rdx,[rip+0x3925]        # 0x405050
  40172b:	mov    rcx,rax
  40172e:	call   0x401f48
  401733:	mov    rax,QWORD PTR [rbp-0x28]
  401737:	mov    rax,QWORD PTR [rax]
  40173a:	mov    rbx,QWORD PTR [rax]
  40173d:	lea    rax,[rbp-0x30]
  401741:	mov    rcx,rax
  401744:	call   0x4036e0
  401749:	mov    rsi,rax
  40174c:	call   0x4036b0
  401751:	mov    rdx,rax
  401754:	mov    rax,QWORD PTR [rbp-0x28]
  401758:	mov    r8,rsi
  40175b:	mov    rcx,rax
  40175e:	call   rbx
  401760:	mov    ecx,eax
  401762:	mov    rax,rbp
  401765:	mov    rdx,rax
  401768:	call   0x4015a6
  40176d:	mov    rax,rbp
  401770:	mov    rcx,rax
  401773:	call   0x401f38
  401778:	lea    rax,[rbp+0xf]
  40177c:	mov    rcx,rax
  40177f:	call   0x401f60
  401784:	cmp    DWORD PTR [rbp+0xb0],0x2
  40178b:	jle    0x401803
  40178d:	lea    rax,[rbp+0x1f]
  401791:	mov    rcx,rax
  401794:	call   0x401f68
  401799:	lea    rdx,[rbp+0x1f]
  40179d:	lea    rax,[rbp+0x10]
  4017a1:	mov    r8,rdx
  4017a4:	lea    rdx,[rip+0x38cc]        # 0x405077
  4017ab:	mov    rcx,rax
  4017ae:	call   0x401f48
  4017b3:	mov    rax,QWORD PTR [rbp-0x30]
  4017b7:	mov    rax,QWORD PTR [rax]
  4017ba:	add    rax,0x28
  4017be:	mov    rax,QWORD PTR [rax]
  4017c1:	mov    rdx,QWORD PTR [rbp+0xb8]
  4017c8:	add    rdx,0x8
  4017cc:	mov    rdx,QWORD PTR [rdx]
  4017cf:	mov    rcx,QWORD PTR [rbp-0x30]
  4017d3:	mov    r8d,0x2
  4017d9:	call   rax
  4017db:	mov    ecx,eax
  4017dd:	lea    rax,[rbp+0x10]
  4017e1:	mov    rdx,rax
  4017e4:	call   0x4015a6
  4017e9:	lea    rax,[rbp+0x10]
  4017ed:	mov    rcx,rax
  4017f0:	call   0x401f38
  4017f5:	lea    rax,[rbp+0x1f]
  4017f9:	mov    rcx,rax
  4017fc:	call   0x401f60
  401801:	jmp    0x401877
  401803:	lea    rax,[rbp+0x2f]
  401807:	mov    rcx,rax
  40180a:	call   0x401f68
  40180f:	lea    rdx,[rbp+0x2f]
  401813:	lea    rax,[rbp+0x20]
  401817:	mov    r8,rdx
  40181a:	lea    rdx,[rip+0x3856]        # 0x405077
  401821:	mov    rcx,rax
  401824:	call   0x401f48
  401829:	mov    rax,QWORD PTR [rbp-0x30]
  40182d:	mov    rax,QWORD PTR [rax]
  401830:	add    rax,0x28
  401834:	mov    rax,QWORD PTR [rax]
  401837:	mov    rdx,QWORD PTR [rbp+0xb8]
  40183e:	add    rdx,0x8
  401842:	mov    rdx,QWORD PTR [rdx]
  401845:	mov    rcx,QWORD PTR [rbp-0x30]
  401849:	mov    r8d,0x40
  40184f:	call   rax
  401851:	mov    ecx,eax
  401853:	lea    rax,[rbp+0x20]
  401857:	mov    rdx,rax
  40185a:	call   0x4015a6
  40185f:	lea    rax,[rbp+0x20]
  401863:	mov    rcx,rax
  401866:	call   0x401f38
  40186b:	lea    rax,[rbp+0x2f]
  40186f:	mov    rcx,rax
  401872:	call   0x401f60
  401877:	lea    rax,[rbp+0x3f]
  40187b:	mov    rcx,rax
  40187e:	call   0x401f68
  401883:	lea    rdx,[rbp+0x3f]
  401887:	lea    rax,[rbp+0x30]
  40188b:	mov    r8,rdx
  40188e:	lea    rdx,[rip+0x3803]        # 0x405098
  401895:	mov    rcx,rax
  401898:	call   0x401f48
  40189d:	mov    rax,QWORD PTR [rbp-0x28]
  4018a1:	mov    rax,QWORD PTR [rax]
  4018a4:	mov    rbx,QWORD PTR [rax]
  4018a7:	lea    rax,[rbp-0x38]
  4018ab:	mov    rcx,rax
  4018ae:	call   0x4036f0
  4018b3:	mov    rsi,rax
  4018b6:	call   0x4036c0
  4018bb:	mov    rdx,rax
  4018be:	mov    rax,QWORD PTR [rbp-0x28]
  4018c2:	mov    r8,rsi
  4018c5:	mov    rcx,rax
  4018c8:	call   rbx
  4018ca:	mov    ecx,eax
  4018cc:	lea    rax,[rbp+0x30]
  4018d0:	mov    rdx,rax
  4018d3:	call   0x4015a6
  4018d8:	lea    rax,[rbp+0x30]
  4018dc:	mov    rcx,rax
  4018df:	call   0x401f38
  4018e4:	lea    rax,[rbp+0x3f]
  4018e8:	mov    rcx,rax
  4018eb:	call   0x401f60
  4018f0:	lea    rax,[rbp+0x4f]
  4018f4:	mov    rcx,rax
  4018f7:	call   0x401f68
  4018fc:	lea    rdx,[rbp+0x4f]
  401900:	lea    rax,[rbp+0x40]
  401904:	mov    r8,rdx
  401907:	lea    rdx,[rip+0x37b3]        # 0x4050c1
  40190e:	mov    rcx,rax
  401911:	call   0x401f48
  401916:	mov    rax,QWORD PTR [rbp-0x38]
  40191a:	mov    rax,QWORD PTR [rax]
  40191d:	add    rax,0x28
  401921:	mov    rax,QWORD PTR [rax]
  401924:	mov    rcx,QWORD PTR [rbp-0x38]
  401928:	lea    rdx,[rbp-0x50]
  40192c:	mov    r8,rdx
  40192f:	lea    rdx,[rip+0x3e3a]        # 0x405770
  401936:	call   rax
  401938:	mov    ecx,eax
  40193a:	lea    rax,[rbp+0x40]
  40193e:	mov    rdx,rax
  401941:	call   0x4015a6
  401946:	lea    rax,[rbp+0x40]
  40194a:	mov    rcx,rax
  40194d:	call   0x401f38
  401952:	lea    rax,[rbp+0x4f]
  401956:	mov    rcx,rax
  401959:	call   0x401f60
  40195e:	movzx  eax,WORD PTR [rbp-0x50]
  401962:	test   ax,ax
  401965:	je     0x401a25
  40196b:	movzx  eax,WORD PTR [rbp-0x50]
  40196f:	cmp    ax,0x1f
  401973:	je     0x4019f2
  401975:	movzx  eax,WORD PTR [rbp-0x50]
  401979:	movzx  ebx,ax
  40197c:	lea    rdx,[rip+0x3757]        # 0x4050da
  401983:	mov    rcx,QWORD PTR [rip+0x3ab6]        # 0x405440
  40198a:	call   0x401f08
  40198f:	mov    edx,ebx
  401991:	mov    rcx,rax
  401994:	call   0x401f50
  401999:	mov    rdx,QWORD PTR [rip+0x3ab0]        # 0x405450
  4019a0:	mov    rcx,rax
  4019a3:	call   0x401f58
  4019a8:	lea    rax,[rbp+0x5f]
  4019ac:	mov    rcx,rax
  4019af:	call   0x401f68
  4019b4:	lea    rdx,[rbp+0x5f]
  4019b8:	lea    rax,[rbp+0x50]
  4019bc:	mov    r8,rdx
  4019bf:	lea    rdx,[rip+0x3722]        # 0x4050e8
  4019c6:	mov    rcx,rax
  4019c9:	call   0x401f48
  4019ce:	lea    rax,[rbp+0x50]
  4019d2:	mov    rcx,rax
  4019d5:	call   0x401550
  4019da:	lea    rax,[rbp+0x50]
  4019de:	mov    rcx,rax
  4019e1:	call   0x401f38
  4019e6:	lea    rax,[rbp+0x5f]
  4019ea:	mov    rcx,rax
  4019ed:	call   0x401f60
  4019f2:	mov    rbx,QWORD PTR [rbp-0x48]
  4019f6:	lea    rdx,[rip+0x370a]        # 0x405107
  4019fd:	mov    rcx,QWORD PTR [rip+0x3a6c]        # 0x405470
  401a04:	call   0x401ef8
  401a09:	mov    rdx,rbx
  401a0c:	mov    rcx,rax
  401a0f:	call   0x401f00
  401a14:	mov    rdx,QWORD PTR [rip+0x3a45]        # 0x405460
  401a1b:	mov    rcx,rax
  401a1e:	call   0x401f30
  401a23:	jmp    0x401a47
  401a25:	lea    rdx,[rip+0x36eb]        # 0x405117
  401a2c:	mov    rcx,QWORD PTR [rip+0x3a0d]        # 0x405440
  401a33:	call   0x401f08
  401a38:	mov    rdx,QWORD PTR [rip+0x3a11]        # 0x405450
  401a3f:	mov    rcx,rax
  401a42:	call   0x401f58
  401a47:	lea    rax,[rbp-0x50]
  401a4b:	mov    rcx,rax
  401a4e:	mov    rax,QWORD PTR [rip+0x7a53]        # 0x4094a8
  401a55:	call   rax
  401a57:	cmp    DWORD PTR [rbp+0xb0],0x2
  401a5e:	jle    0x401c1a
  401a64:	mov    rax,QWORD PTR [rbp+0xb8]
  401a6b:	add    rax,0x10
  401a6f:	mov    rbx,QWORD PTR [rax]
  401a72:	lea    rdx,[rip+0x36af]        # 0x405128
  401a79:	mov    rcx,QWORD PTR [rip+0x39f0]        # 0x405470
  401a80:	call   0x401ef8
  401a85:	mov    rdx,rbx
  401a88:	mov    rcx,rax
  401a8b:	call   0x401f00
  401a90:	mov    rdx,QWORD PTR [rip+0x39c9]        # 0x405460
  401a97:	mov    rcx,rax
  401a9a:	call   0x401f30
  401a9f:	mov    WORD PTR [rbp-0x50],0x1f
  401aa5:	mov    rax,QWORD PTR [rbp+0xb8]
  401aac:	mov    rax,QWORD PTR [rax+0x10]
  401ab0:	mov    QWORD PTR [rbp-0x48],rax
  401ab4:	lea    rax,[rbp+0x6f]
  401ab8:	mov    rcx,rax
  401abb:	call   0x401f68
  401ac0:	lea    rdx,[rbp+0x6f]
  401ac4:	lea    rax,[rbp+0x60]
  401ac8:	mov    r8,rdx
  401acb:	lea    rdx,[rip+0x3662]        # 0x405134
  401ad2:	mov    rcx,rax
  401ad5:	call   0x401f48
  401ada:	mov    rax,QWORD PTR [rbp-0x38]
  401ade:	mov    rax,QWORD PTR [rax]
  401ae1:	add    rax,0x30
  401ae5:	mov    rax,QWORD PTR [rax]
  401ae8:	mov    rcx,QWORD PTR [rbp-0x38]
  401aec:	lea    rdx,[rbp-0x50]
  401af0:	mov    r8,rdx
  401af3:	lea    rdx,[rip+0x3c76]        # 0x405770
  401afa:	call   rax
  401afc:	mov    ecx,eax
  401afe:	lea    rax,[rbp+0x60]
  401b02:	mov    rdx,rax
  401b05:	call   0x4015a6
  401b0a:	lea    rax,[rbp+0x60]
  401b0e:	mov    rcx,rax
  401b11:	call   0x401f38
  401b16:	lea    rax,[rbp+0x6f]
  401b1a:	mov    rcx,rax
  401b1d:	call   0x401f60
  401b22:	mov    QWORD PTR [rbp-0x48],0x0
  401b2a:	lea    rax,[rbp-0x50]
  401b2e:	mov    rcx,rax
  401b31:	mov    rax,QWORD PTR [rip+0x7970]        # 0x4094a8
  401b38:	call   rax
  401b3a:	lea    rax,[rbp+0x7f]
  401b3e:	mov    rcx,rax
  401b41:	call   0x401f68
  401b46:	lea    rdx,[rbp+0x7f]
  401b4a:	lea    rax,[rbp+0x70]
  401b4e:	mov    r8,rdx
  401b51:	lea    rdx,[rip+0x35f0]        # 0x405148
  401b58:	mov    rcx,rax
  401b5b:	call   0x401f48
  401b60:	mov    rax,QWORD PTR [rbp-0x38]
  401b64:	mov    rax,QWORD PTR [rax]
  401b67:	add    rax,0x38
  401b6b:	mov    rax,QWORD PTR [rax]
  401b6e:	mov    rdx,QWORD PTR [rbp-0x38]
  401b72:	mov    rcx,rdx
  401b75:	call   rax
  401b77:	mov    ecx,eax
  401b79:	lea    rax,[rbp+0x70]
  401b7d:	mov    rdx,rax
  401b80:	call   0x4015a6
  401b85:	lea    rax,[rbp+0x70]
  401b89:	mov    rcx,rax
  401b8c:	call   0x401f38
  401b91:	lea    rax,[rbp+0x7f]
  401b95:	mov    rcx,rax
  401b98:	call   0x401f60
  401b9d:	lea    rax,[rbp+0x8f]
  401ba4:	mov    rcx,rax
  401ba7:	call   0x401f68
  401bac:	lea    rdx,[rbp+0x8f]
  401bb3:	lea    rax,[rbp+0x80]
  401bba:	mov    r8,rdx
  401bbd:	lea    rdx,[rip+0x35a4]        # 0x405168
  401bc4:	mov    rcx,rax
  401bc7:	call   0x401f48
  401bcc:	mov    rax,QWORD PTR [rbp-0x30]
  401bd0:	mov    rax,QWORD PTR [rax]
  401bd3:	add    rax,0x30
  401bd7:	mov    rax,QWORD PTR [rax]
  401bda:	mov    rcx,QWORD PTR [rbp-0x30]
  401bde:	mov    r8d,0x1
  401be4:	mov    edx,0x0
  401be9:	call   rax
  401beb:	mov    ecx,eax
  401bed:	lea    rax,[rbp+0x80]
  401bf4:	mov    rdx,rax
  401bf7:	call   0x4015a6
  401bfc:	lea    rax,[rbp+0x80]
  401c03:	mov    rcx,rax
  401c06:	call   0x401f38
  401c0b:	lea    rax,[rbp+0x8f]
  401c12:	mov    rcx,rax
  401c15:	call   0x401f60
  401c1a:	mov    rax,QWORD PTR [rbp-0x38]
  401c1e:	mov    rax,QWORD PTR [rax]
  401c21:	add    rax,0x10
  401c25:	mov    rax,QWORD PTR [rax]
  401c28:	mov    rdx,QWORD PTR [rbp-0x38]
  401c2c:	mov    rcx,rdx
  401c2f:	call   rax
  401c31:	mov    rax,QWORD PTR [rbp-0x30]
  401c35:	mov    rax,QWORD PTR [rax]
  401c38:	add    rax,0x10
  401c3c:	mov    rax,QWORD PTR [rax]
  401c3f:	mov    rdx,QWORD PTR [rbp-0x30]
  401c43:	mov    rcx,rdx
  401c46:	call   rax
  401c48:	mov    rax,QWORD PTR [rbp-0x28]
  401c4c:	mov    rax,QWORD PTR [rax]
  401c4f:	add    rax,0x10
  401c53:	mov    rax,QWORD PTR [rax]
  401c56:	mov    rdx,QWORD PTR [rbp-0x28]
  401c5a:	mov    rcx,rdx
  401c5d:	call   rax
  401c5f:	mov    eax,0x0
  401c64:	jmp    0x401e47
  401c69:	mov    rbx,rax
  401c6c:	lea    rax,[rbp-0x20]
  401c70:	mov    rcx,rax
  401c73:	call   0x401f38
  401c78:	jmp    0x401c7d
  401c7a:	mov    rbx,rax
  401c7d:	lea    rax,[rbp-0x11]
  401c81:	mov    rcx,rax
  401c84:	call   0x401f60
  401c89:	mov    rax,rbx
  401c8c:	mov    rcx,rax
  401c8f:	call   0x4034a0
  401c94:	mov    rbx,rax
  401c97:	lea    rax,[rbp-0x10]
  401c9b:	mov    rcx,rax
  401c9e:	call   0x401f38
  401ca3:	jmp    0x401ca8
  401ca5:	mov    rbx,rax
  401ca8:	lea    rax,[rbp-0x1]
  401cac:	mov    rcx,rax
  401caf:	call   0x401f60
  401cb4:	mov    rax,rbx
  401cb7:	mov    rcx,rax
  401cba:	call   0x4034a0
  401cbf:	mov    rbx,rax
  401cc2:	mov    rax,rbp
  401cc5:	mov    rcx,rax
  401cc8:	call   0x401f38
  401ccd:	jmp    0x401cd2
  401ccf:	mov    rbx,rax
  401cd2:	lea    rax,[rbp+0xf]
  401cd6:	mov    rcx,rax
  401cd9:	call   0x401f60
  401cde:	mov    rax,rbx
  401ce1:	mov    rcx,rax
  401ce4:	call   0x4034a0
  401ce9:	mov    rbx,rax
  401cec:	lea    rax,[rbp+0x10]
  401cf0:	mov    rcx,rax
  401cf3:	call   0x401f38
  401cf8:	jmp    0x401cfd
  401cfa:	mov    rbx,rax
  401cfd:	lea    rax,[rbp+0x1f]
  401d01:	mov    rcx,rax
  401d04:	call   0x401f60
  401d09:	mov    rax,rbx
  401d0c:	mov    rcx,rax
  401d0f:	call   0x4034a0
  401d14:	mov    rbx,rax
  401d17:	lea    rax,[rbp+0x20]
  401d1b:	mov    rcx,rax
  401d1e:	call   0x401f38
  401d23:	jmp    0x401d28
  401d25:	mov    rbx,rax
  401d28:	lea    rax,[rbp+0x2f]
  401d2c:	mov    rcx,rax
  401d2f:	call   0x401f60
  401d34:	mov    rax,rbx
  401d37:	mov    rcx,rax
  401d3a:	call   0x4034a0
  401d3f:	mov    rbx,rax
  401d42:	lea    rax,[rbp+0x30]
  401d46:	mov    rcx,rax
  401d49:	call   0x401f38
  401d4e:	jmp    0x401d53
  401d50:	mov    rbx,rax
  401d53:	lea    rax,[rbp+0x3f]
  401d57:	mov    rcx,rax
  401d5a:	call   0x401f60
  401d5f:	mov    rax,rbx
  401d62:	mov    rcx,rax
  401d65:	call   0x4034a0
  401d6a:	mov    rbx,rax
  401d6d:	lea    rax,[rbp+0x40]
  401d71:	mov    rcx,rax
  401d74:	call   0x401f38
  401d79:	jmp    0x401d7e
  401d7b:	mov    rbx,rax
  401d7e:	lea    rax,[rbp+0x4f]
  401d82:	mov    rcx,rax
  401d85:	call   0x401f60
  401d8a:	mov    rax,rbx
  401d8d:	mov    rcx,rax
  401d90:	call   0x4034a0
  401d95:	mov    rbx,rax
  401d98:	lea    rax,[rbp+0x50]
  401d9c:	mov    rcx,rax
  401d9f:	call   0x401f38
  401da4:	jmp    0x401da9
  401da6:	mov    rbx,rax
  401da9:	lea    rax,[rbp+0x5f]
  401dad:	mov    rcx,rax
  401db0:	call   0x401f60
  401db5:	mov    rax,rbx
  401db8:	mov    rcx,rax
  401dbb:	call   0x4034a0
  401dc0:	mov    rbx,rax
  401dc3:	lea    rax,[rbp+0x60]
  401dc7:	mov    rcx,rax
  401dca:	call   0x401f38
  401dcf:	jmp    0x401dd4
  401dd1:	mov    rbx,rax
  401dd4:	lea    rax,[rbp+0x6f]
  401dd8:	mov    rcx,rax
  401ddb:	call   0x401f60
  401de0:	mov    rax,rbx
  401de3:	mov    rcx,rax
  401de6:	call   0x4034a0
  401deb:	mov    rbx,rax
  401dee:	lea    rax,[rbp+0x70]
  401df2:	mov    rcx,rax
  401df5:	call   0x401f38
  401dfa:	jmp    0x401dff
  401dfc:	mov    rbx,rax
  401dff:	lea    rax,[rbp+0x7f]
  401e03:	mov    rcx,rax
  401e06:	call   0x401f60
  401e0b:	mov    rax,rbx
  401e0e:	mov    rcx,rax
  401e11:	call   0x4034a0
  401e16:	mov    rbx,rax
  401e19:	lea    rax,[rbp+0x80]
  401e20:	mov    rcx,rax
  401e23:	call   0x401f38
  401e28:	jmp    0x401e2d
  401e2a:	mov    rbx,rax
  401e2d:	lea    rax,[rbp+0x8f]
  401e34:	mov    rcx,rax
  401e37:	call   0x401f60
  401e3c:	mov    rax,rbx
  401e3f:	mov    rcx,rax
  401e42:	call   0x4034a0
  401e47:	add    rsp,0x110
  401e4e:	pop    rbx
  401e4f:	pop    rsi
  401e50:	pop    rbp
  401e51:	ret    
  401e52:	push   rbp
  401e53:	mov    rbp,rsp
  401e56:	sub    rsp,0x20
  401e5a:	lea    rcx,[rip+0x61cf]        # 0x408030
  401e61:	call   0x401f20
  401e66:	nop
  401e67:	add    rsp,0x20
  401e6b:	pop    rbp
  401e6c:	ret    
  401e6d:	push   rbp
  401e6e:	mov    rbp,rsp
  401e71:	sub    rsp,0x20
  401e75:	mov    DWORD PTR [rbp+0x10],ecx
  401e78:	mov    DWORD PTR [rbp+0x18],edx
  401e7b:	cmp    DWORD PTR [rbp+0x10],0x1
  401e7f:	jne    0x401ea3
  401e81:	cmp    DWORD PTR [rbp+0x18],0xffff
  401e88:	jne    0x401ea3
  401e8a:	lea    rcx,[rip+0x619f]        # 0x408030
  401e91:	call   0x401f28
  401e96:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x401e52
  401e9d:	call   0x402030
  401ea2:	nop
  401ea3:	add    rsp,0x20
  401ea7:	pop    rbp
  401ea8:	ret    
  401ea9:	push   rbp
  401eaa:	mov    rbp,rsp
  401ead:	sub    rsp,0x20
  401eb1:	mov    edx,0xffff
  401eb6:	mov    ecx,0x1
  401ebb:	call   0x401e6d
  401ec0:	nop
  401ec1:	add    rsp,0x20
  401ec5:	pop    rbp
  401ec6:	ret    
  401ec7:	nop
  401ec8:	nop
  401ec9:	nop
  401eca:	nop
  401ecb:	nop
  401ecc:	nop
  401ecd:	nop
  401ece:	nop
  401ecf:	nop
  401ed0:	jmp    QWORD PTR [rip+0x75d2]        # 0x4094a8
  401ed6:	nop
  401ed7:	nop
  401ed8:	jmp    QWORD PTR [rip+0x75c2]        # 0x4094a0
  401ede:	nop
  401edf:	nop
  401ee0:	jmp    QWORD PTR [rip+0x75b2]        # 0x409498
  401ee6:	nop
  401ee7:	nop
  401ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ef0:	jmp    QWORD PTR [rip+0x7662]        # 0x409558
  401ef6:	nop
  401ef7:	nop
  401ef8:	jmp    QWORD PTR [rip+0x7652]        # 0x409550
  401efe:	nop
  401eff:	nop
  401f00:	jmp    QWORD PTR [rip+0x7642]        # 0x409548
  401f06:	nop
  401f07:	nop
  401f08:	jmp    QWORD PTR [rip+0x7632]        # 0x409540
  401f0e:	nop
  401f0f:	nop
  401f10:	jmp    QWORD PTR [rip+0x761a]        # 0x409530
  401f16:	nop
  401f17:	nop
  401f18:	jmp    QWORD PTR [rip+0x760a]        # 0x409528
  401f1e:	nop
  401f1f:	nop
  401f20:	jmp    QWORD PTR [rip+0x75f2]        # 0x409518
  401f26:	nop
  401f27:	nop
  401f28:	jmp    QWORD PTR [rip+0x75e2]        # 0x409510
  401f2e:	nop
  401f2f:	nop
  401f30:	jmp    QWORD PTR [rip+0x75d2]        # 0x409508
  401f36:	nop
  401f37:	nop
  401f38:	jmp    QWORD PTR [rip+0x75c2]        # 0x409500
  401f3e:	nop
  401f3f:	nop
  401f40:	jmp    QWORD PTR [rip+0x75b2]        # 0x4094f8
  401f46:	nop
  401f47:	nop
  401f48:	jmp    QWORD PTR [rip+0x75a2]        # 0x4094f0
  401f4e:	nop
  401f4f:	nop
  401f50:	jmp    QWORD PTR [rip+0x7592]        # 0x4094e8
  401f56:	nop
  401f57:	nop
  401f58:	jmp    QWORD PTR [rip+0x7582]        # 0x4094e0
  401f5e:	nop
  401f5f:	nop
  401f60:	jmp    QWORD PTR [rip+0x7572]        # 0x4094d8
  401f66:	nop
  401f67:	nop
  401f68:	jmp    QWORD PTR [rip+0x7562]        # 0x4094d0
  401f6e:	nop
  401f6f:	nop
  401f70:	jmp    QWORD PTR [rip+0x7552]        # 0x4094c8
  401f76:	nop
  401f77:	nop
  401f78:	nop    DWORD PTR [rax+rax*1+0x0]
  401f80:	push   rbx
  401f81:	sub    rsp,0x30
  401f85:	mov    rbx,rcx
  401f88:	mov    rcx,QWORD PTR [rip+0x6a81]        # 0x408a10
  401f8f:	call   0x402530
  401f94:	cmp    rax,0xffffffffffffffff
  401f98:	mov    QWORD PTR [rsp+0x20],rax
  401f9d:	je     0x402015
  401f9f:	mov    ecx,0x8
  401fa4:	call   0x403560
  401fa9:	mov    rcx,QWORD PTR [rip+0x6a60]        # 0x408a10
  401fb0:	call   0x402530
  401fb5:	mov    rcx,QWORD PTR [rip+0x6a5c]        # 0x408a18
  401fbc:	mov    QWORD PTR [rsp+0x20],rax
  401fc1:	call   0x402530
  401fc6:	lea    rdx,[rsp+0x20]
  401fcb:	lea    r8,[rsp+0x28]
  401fd0:	mov    rcx,rbx
  401fd3:	mov    QWORD PTR [rsp+0x28],rax
  401fd8:	call   0x4035a8
  401fdd:	mov    rcx,QWORD PTR [rsp+0x20]
  401fe2:	mov    rbx,rax
  401fe5:	call   0x402540
  401fea:	mov    rcx,QWORD PTR [rsp+0x28]
  401fef:	mov    QWORD PTR [rip+0x6a1a],rax        # 0x408a10
  401ff6:	call   0x402540
  401ffb:	mov    ecx,0x8
  402000:	mov    QWORD PTR [rip+0x6a11],rax        # 0x408a18
  402007:	call   0x403550
  40200c:	mov    rax,rbx
  40200f:	add    rsp,0x30
  402013:	pop    rbx
  402014:	ret    
  402015:	mov    rax,QWORD PTR [rip+0x34d4]        # 0x4054f0
  40201c:	mov    rcx,rbx
  40201f:	call   QWORD PTR [rax]
  402021:	add    rsp,0x30
  402025:	pop    rbx
  402026:	ret    
  402027:	nop    WORD PTR [rax+rax*1+0x0]
  402030:	sub    rsp,0x28
  402034:	call   0x401f80
  402039:	test   rax,rax
  40203c:	sete   al
  40203f:	movzx  eax,al
  402042:	neg    eax
  402044:	add    rsp,0x28
  402048:	ret    
  402049:	nop
  40204a:	nop
  40204b:	nop
  40204c:	nop
  40204d:	nop
  40204e:	nop
  40204f:	nop
  402050:	sub    rsp,0x28
  402054:	mov    rax,QWORD PTR [rip+0x1fb5]        # 0x404010
  40205b:	mov    rax,QWORD PTR [rax]
  40205e:	test   rax,rax
  402061:	je     0x402080
  402063:	call   rax
  402065:	mov    rax,QWORD PTR [rip+0x1fa4]        # 0x404010
  40206c:	lea    rdx,[rax+0x8]
  402070:	mov    rax,QWORD PTR [rax+0x8]
  402074:	mov    QWORD PTR [rip+0x1f95],rdx        # 0x404010
  40207b:	test   rax,rax
  40207e:	jne    0x402063
  402080:	add    rsp,0x28
  402084:	ret    
  402085:	nop
  402086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402090:	push   rsi
  402091:	push   rbx
  402092:	sub    rsp,0x28
  402096:	mov    rsi,QWORD PTR [rip+0x33e3]        # 0x405480
  40209d:	mov    rax,QWORD PTR [rsi]
  4020a0:	cmp    eax,0xffffffff
  4020a3:	mov    ebx,eax
  4020a5:	je     0x4020d0
  4020a7:	test   ebx,ebx
  4020a9:	je     0x4020ba
  4020ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4020b0:	mov    eax,ebx
  4020b2:	call   QWORD PTR [rsi+rax*8]
  4020b5:	sub    ebx,0x1
  4020b8:	jne    0x4020b0
  4020ba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x402050
  4020c1:	add    rsp,0x28
  4020c5:	pop    rbx
  4020c6:	pop    rsi
  4020c7:	jmp    0x402030
  4020cc:	nop    DWORD PTR [rax+0x0]
  4020d0:	xor    ebx,ebx
  4020d2:	jmp    0x4020d6
  4020d4:	mov    ebx,eax
  4020d6:	lea    edx,[rbx+0x1]
  4020d9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4020de:	mov    rax,rdx
  4020e1:	jne    0x4020d4
  4020e3:	jmp    0x4020a7
  4020e5:	nop
  4020e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020f0:	mov    eax,DWORD PTR [rip+0x5f4a]        # 0x408040
  4020f6:	test   eax,eax
  4020f8:	je     0x402100
  4020fa:	repz ret 
  4020fc:	nop    DWORD PTR [rax+0x0]
  402100:	mov    DWORD PTR [rip+0x5f36],0x1        # 0x408040
  40210a:	jmp    0x402090
  40210c:	nop
  40210d:	nop
  40210e:	nop
  40210f:	nop
  402110:	mov    rax,QWORD PTR [rip+0x72b1]        # 0x4093c8
  402117:	rex.W jmp rax
  40211a:	nop
  40211b:	nop
  40211c:	nop
  40211d:	nop
  40211e:	nop
  40211f:	nop
  402120:	push   r12
  402122:	push   rbp
  402123:	push   rdi
  402124:	push   rsi
  402125:	push   rbx
  402126:	sub    rsp,0x40
  40212a:	mov    rbx,QWORD PTR [rip+0x1f3f]        # 0x404070
  402131:	movabs rax,0x2b992ddfa232
  40213b:	mov    QWORD PTR [rsp+0x20],0x0
  402144:	cmp    rbx,rax
  402147:	je     0x402160
  402149:	not    rbx
  40214c:	mov    QWORD PTR [rip+0x1f2d],rbx        # 0x404080
  402153:	add    rsp,0x40
  402157:	pop    rbx
  402158:	pop    rsi
  402159:	pop    rdi
  40215a:	pop    rbp
  40215b:	pop    r12
  40215d:	ret    
  40215e:	xchg   ax,ax
  402160:	lea    rcx,[rsp+0x20]
  402165:	call   QWORD PTR [rip+0x71bd]        # 0x409328
  40216b:	mov    r12,QWORD PTR [rsp+0x20]
  402170:	call   QWORD PTR [rip+0x7192]        # 0x409308
  402176:	mov    ebp,eax
  402178:	call   QWORD PTR [rip+0x7192]        # 0x409310
  40217e:	mov    edi,eax
  402180:	call   QWORD PTR [rip+0x71aa]        # 0x409330
  402186:	lea    rcx,[rsp+0x30]
  40218b:	mov    esi,eax
  40218d:	call   QWORD PTR [rip+0x71b5]        # 0x409348
  402193:	xor    r12,QWORD PTR [rsp+0x30]
  402198:	mov    edx,edi
  40219a:	movabs rax,0xffffffffffff
  4021a4:	xor    rbp,r12
  4021a7:	mov    rdi,rbp
  4021aa:	xor    rdi,rdx
  4021ad:	mov    edx,esi
  4021af:	xor    rdi,rdx
  4021b2:	mov    rsi,rdi
  4021b5:	and    rsi,rax
  4021b8:	cmp    rsi,rbx
  4021bb:	je     0x4021e0
  4021bd:	mov    rax,rsi
  4021c0:	not    rax
  4021c3:	mov    QWORD PTR [rip+0x1ea6],rsi        # 0x404070
  4021ca:	mov    QWORD PTR [rip+0x1eaf],rax        # 0x404080
  4021d1:	add    rsp,0x40
  4021d5:	pop    rbx
  4021d6:	pop    rsi
  4021d7:	pop    rdi
  4021d8:	pop    rbp
  4021d9:	pop    r12
  4021db:	ret    
  4021dc:	nop    DWORD PTR [rax+0x0]
  4021e0:	movabs rax,0xffffd466d2205dcc
  4021ea:	movabs rsi,0x2b992ddfa233
  4021f4:	jmp    0x4021c3
  4021f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402200:	push   rbp
  402201:	push   rsi
  402202:	push   rbx
  402203:	mov    rbp,rsp
  402206:	sub    rsp,0x70
  40220a:	mov    rsi,rcx
  40220d:	lea    rcx,[rip+0x5e6c]        # 0x408080
  402214:	call   QWORD PTR [rip+0x713e]        # 0x409358
  40221a:	mov    rbx,QWORD PTR [rip+0x5f57]        # 0x408178
  402221:	xor    r8d,r8d
  402224:	lea    rdx,[rbp-0x28]
  402228:	mov    rcx,rbx
  40222b:	call   QWORD PTR [rip+0x712f]        # 0x409360
  402231:	test   rax,rax
  402234:	mov    r9,rax
  402237:	je     0x4022e0
  40223d:	lea    rax,[rbp-0x20]
  402241:	mov    QWORD PTR [rsp+0x38],0x0
  40224a:	mov    r8,rbx
  40224d:	mov    rdx,QWORD PTR [rbp-0x28]
  402251:	xor    ecx,ecx
  402253:	mov    QWORD PTR [rsp+0x30],rax
  402258:	lea    rax,[rbp-0x18]
  40225c:	mov    QWORD PTR [rsp+0x28],rax
  402261:	lea    rax,[rip+0x5e18]        # 0x408080
  402268:	mov    QWORD PTR [rsp+0x20],rax
  40226d:	call   QWORD PTR [rip+0x70f5]        # 0x409368
  402273:	mov    rax,QWORD PTR [rip+0x5efe]        # 0x408178
  40227a:	xor    ecx,ecx
  40227c:	mov    QWORD PTR [rip+0x5e7d],rsi        # 0x408100
  402283:	mov    DWORD PTR [rip+0x62f3],0xc0000409        # 0x408580
  40228d:	mov    DWORD PTR [rip+0x62ed],0x1        # 0x408584
  402297:	mov    QWORD PTR [rip+0x62f2],rax        # 0x408590
  40229e:	mov    rax,QWORD PTR [rip+0x1dcb]        # 0x404070
  4022a5:	mov    QWORD PTR [rbp-0x10],rax
  4022a9:	mov    rax,QWORD PTR [rip+0x1dd0]        # 0x404080
  4022b0:	mov    QWORD PTR [rbp-0x8],rax
  4022b4:	call   QWORD PTR [rip+0x70b6]        # 0x409370
  4022ba:	lea    rcx,[rip+0x2ebf]        # 0x405180
  4022c1:	call   QWORD PTR [rip+0x70c9]        # 0x409390
  4022c7:	call   QWORD PTR [rip+0x7033]        # 0x409300
  4022cd:	mov    edx,0xc0000409
  4022d2:	mov    rcx,rax
  4022d5:	call   QWORD PTR [rip+0x70a5]        # 0x409380
  4022db:	call   0x403548
  4022e0:	mov    rax,QWORD PTR [rbp+0x18]
  4022e4:	mov    QWORD PTR [rip+0x5e8d],rax        # 0x408178
  4022eb:	lea    rax,[rbp+0x8]
  4022ef:	mov    QWORD PTR [rip+0x5e22],rax        # 0x408118
  4022f6:	jmp    0x402273
  4022fb:	nop
  4022fc:	nop
  4022fd:	nop
  4022fe:	nop
  4022ff:	nop
  402300:	sub    rsp,0x28
  402304:	test   edx,edx
  402306:	je     0x402320
  402308:	cmp    edx,0x3
  40230b:	je     0x402320
  40230d:	mov    eax,0x1
  402312:	add    rsp,0x28
  402316:	ret    
  402317:	nop    WORD PTR [rax+rax*1+0x0]
  402320:	call   0x403020
  402325:	mov    eax,0x1
  40232a:	add    rsp,0x28
  40232e:	ret    
  40232f:	nop
  402330:	push   rsi
  402331:	push   rbx
  402332:	sub    rsp,0x28
  402336:	mov    rax,QWORD PTR [rip+0x30e3]        # 0x405420
  40233d:	cmp    DWORD PTR [rax],0x2
  402340:	je     0x402348
  402342:	mov    DWORD PTR [rax],0x2
  402348:	cmp    edx,0x2
  40234b:	je     0x402360
  40234d:	cmp    edx,0x1
  402350:	je     0x402392
  402352:	mov    eax,0x1
  402357:	add    rsp,0x28
  40235b:	pop    rbx
  40235c:	pop    rsi
  40235d:	ret    
  40235e:	xchg   ax,ax
  402360:	lea    rbx,[rip+0x7cf9]        # 0x40a060
  402367:	lea    rsi,[rip+0x7cf2]        # 0x40a060
  40236e:	cmp    rbx,rsi
  402371:	je     0x402352
  402373:	mov    rax,QWORD PTR [rbx]
  402376:	test   rax,rax
  402379:	je     0x40237d
  40237b:	call   rax
  40237d:	add    rbx,0x8
  402381:	cmp    rbx,rsi
  402384:	jne    0x402373
  402386:	mov    eax,0x1
  40238b:	add    rsp,0x28
  40238f:	pop    rbx
  402390:	pop    rsi
  402391:	ret    
  402392:	call   0x403020
  402397:	jmp    0x402352
  402399:	nop    DWORD PTR [rax+0x0]
  4023a0:	xor    eax,eax
  4023a2:	ret    
  4023a3:	nop
  4023a4:	nop
  4023a5:	nop
  4023a6:	nop
  4023a7:	nop
  4023a8:	nop
  4023a9:	nop
  4023aa:	nop
  4023ab:	nop
  4023ac:	nop
  4023ad:	nop
  4023ae:	nop
  4023af:	nop
  4023b0:	sub    rsp,0x58
  4023b4:	mov    rax,QWORD PTR [rip+0x62a5]        # 0x408660
  4023bb:	test   rax,rax
  4023be:	je     0x4023ec
  4023c0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4023c9:	mov    DWORD PTR [rsp+0x20],ecx
  4023cd:	lea    rcx,[rsp+0x20]
  4023d2:	mov    QWORD PTR [rsp+0x28],rdx
  4023d7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4023dd:	movsd  QWORD PTR [rsp+0x38],xmm3
  4023e3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4023e9:	call   rax
  4023eb:	nop
  4023ec:	add    rsp,0x58
  4023f0:	ret    
  4023f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4023f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402400:	mov    QWORD PTR [rip+0x6259],rcx        # 0x408660
  402407:	jmp    0x403588
  40240c:	nop    DWORD PTR [rax+0x0]
  402410:	push   rsi
  402411:	push   rbx
  402412:	sub    rsp,0x78
  402416:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40241b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402420:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402426:	cmp    DWORD PTR [rcx],0x6
  402429:	ja     0x402500
  40242f:	mov    edx,DWORD PTR [rcx]
  402431:	lea    rax,[rip+0x2e8c]        # 0x4052c4
  402438:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40243c:	add    rax,rdx
  40243f:	jmp    rax
  402441:	lea    rbx,[rip+0x2d58]        # 0x4051a0
  402448:	nop    DWORD PTR [rax+rax*1+0x0]
  402450:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402456:	mov    rsi,QWORD PTR [rcx+0x8]
  40245a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40245f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402464:	call   0x4035a0
  402469:	movsd  QWORD PTR [rsp+0x30],xmm8
  402470:	lea    rcx,[rax+0x60]
  402474:	lea    rdx,[rip+0x2e1d]        # 0x405298
  40247b:	movsd  QWORD PTR [rsp+0x28],xmm7
  402481:	mov    r9,rsi
  402484:	mov    r8,rbx
  402487:	movsd  QWORD PTR [rsp+0x20],xmm6
  40248d:	call   0x403530
  402492:	nop
  402493:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  402498:	xor    eax,eax
  40249a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40249f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4024a5:	add    rsp,0x78
  4024a9:	pop    rbx
  4024aa:	pop    rsi
  4024ab:	ret    
  4024ac:	nop    DWORD PTR [rax+0x0]
  4024b0:	lea    rbx,[rip+0x2d08]        # 0x4051bf
  4024b7:	jmp    0x402450
  4024b9:	nop    DWORD PTR [rax+0x0]
  4024c0:	lea    rbx,[rip+0x2d19]        # 0x4051e0
  4024c7:	jmp    0x402450
  4024c9:	nop    DWORD PTR [rax+0x0]
  4024d0:	lea    rbx,[rip+0x2d79]        # 0x405250
  4024d7:	jmp    0x402450
  4024dc:	nop    DWORD PTR [rax+0x0]
  4024e0:	lea    rbx,[rip+0x2d41]        # 0x405228
  4024e7:	jmp    0x402450
  4024ec:	nop    DWORD PTR [rax+0x0]
  4024f0:	lea    rbx,[rip+0x2d09]        # 0x405200
  4024f7:	jmp    0x402450
  4024fc:	nop    DWORD PTR [rax+0x0]
  402500:	lea    rbx,[rip+0x2d7f]        # 0x405286
  402507:	jmp    0x402450
  40250c:	nop
  40250d:	nop
  40250e:	nop
  40250f:	nop
  402510:	xor    eax,eax
  402512:	ret    
  402513:	nop
  402514:	nop
  402515:	nop
  402516:	nop
  402517:	nop
  402518:	nop
  402519:	nop
  40251a:	nop
  40251b:	nop
  40251c:	nop
  40251d:	nop
  40251e:	nop
  40251f:	nop
  402520:	fninit 
  402522:	ret    
  402523:	nop
  402524:	nop
  402525:	nop
  402526:	nop
  402527:	nop
  402528:	nop
  402529:	nop
  40252a:	nop
  40252b:	nop
  40252c:	nop
  40252d:	nop
  40252e:	nop
  40252f:	nop
  402530:	mov    rax,rcx
  402533:	ret    
  402534:	xchg   ax,ax
  402536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402540:	mov    rax,rcx
  402543:	ret    
  402544:	nop
  402545:	nop
  402546:	nop
  402547:	nop
  402548:	nop
  402549:	nop
  40254a:	nop
  40254b:	nop
  40254c:	nop
  40254d:	nop
  40254e:	nop
  40254f:	nop
  402550:	push   rsi
  402551:	push   rbx
  402552:	sub    rsp,0x38
  402556:	lea    rax,[rsp+0x58]
  40255b:	mov    rbx,rcx
  40255e:	mov    QWORD PTR [rsp+0x58],rdx
  402563:	mov    QWORD PTR [rsp+0x60],r8
  402568:	mov    QWORD PTR [rsp+0x68],r9
  40256d:	mov    QWORD PTR [rsp+0x28],rax
  402572:	call   0x4035a0
  402577:	lea    rcx,[rip+0x2d62]        # 0x4052e0
  40257e:	lea    r9,[rax+0x60]
  402582:	mov    r8d,0x1b
  402588:	mov    edx,0x1
  40258d:	call   0x403520
  402592:	mov    rsi,QWORD PTR [rsp+0x28]
  402597:	call   0x4035a0
  40259c:	lea    rcx,[rax+0x60]
  4025a0:	mov    rdx,rbx
  4025a3:	mov    r8,rsi
  4025a6:	call   0x4034f0
  4025ab:	call   0x403548
  4025b0:	nop
  4025b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4025b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025c0:	push   r13
  4025c2:	push   r12
  4025c4:	push   rbp
  4025c5:	push   rdi
  4025c6:	push   rsi
  4025c7:	push   rbx
  4025c8:	sub    rsp,0x58
  4025cc:	movsxd rbp,DWORD PTR [rip+0x60b1]        # 0x408684
  4025d3:	mov    rbx,rcx
  4025d6:	mov    rsi,rdx
  4025d9:	mov    rdi,r8
  4025dc:	test   ebp,ebp
  4025de:	jle    0x4026da
  4025e4:	mov    rax,QWORD PTR [rip+0x609d]        # 0x408688
  4025eb:	xor    r9d,r9d
  4025ee:	add    rax,0x8
  4025f2:	mov    r10,QWORD PTR [rax]
  4025f5:	cmp    rbx,r10
  4025f8:	jb     0x40260e
  4025fa:	mov    rdx,QWORD PTR [rax+0x8]
  4025fe:	mov    r11d,DWORD PTR [rdx+0x8]
  402602:	add    r10,r11
  402605:	cmp    rbx,r10
  402608:	jb     0x4026c0
  40260e:	add    r9d,0x1
  402612:	add    rax,0x18
  402616:	cmp    r9d,ebp
  402619:	jne    0x4025f2
  40261b:	mov    rcx,rbx
  40261e:	call   0x403230
  402623:	test   rax,rax
  402626:	mov    r12,rax
  402629:	je     0x402712
  40262f:	lea    rbp,[rbp+rbp*2+0x0]
  402634:	shl    rbp,0x3
  402638:	mov    r13,rbp
  40263b:	add    r13,QWORD PTR [rip+0x6046]        # 0x408688
  402642:	mov    QWORD PTR [r13+0x10],rax
  402646:	mov    DWORD PTR [r13+0x0],0x0
  40264e:	call   0x403350
  402653:	mov    edx,DWORD PTR [r12+0xc]
  402658:	mov    r8d,0x30
  40265e:	add    rax,rdx
  402661:	lea    rdx,[rsp+0x20]
  402666:	mov    QWORD PTR [r13+0x8],rax
  40266a:	mov    rax,QWORD PTR [rip+0x6017]        # 0x408688
  402671:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402676:	call   QWORD PTR [rip+0x6d24]        # 0x4093a0
  40267c:	test   rax,rax
  40267f:	je     0x4026f5
  402681:	mov    eax,DWORD PTR [rsp+0x44]
  402685:	lea    edx,[rax-0x4]
  402688:	and    edx,0xfffffffb
  40268b:	je     0x4026b9
  40268d:	sub    eax,0x40
  402690:	and    eax,0xffffffbf
  402693:	je     0x4026b9
  402695:	mov    r9,rbp
  402698:	add    r9,QWORD PTR [rip+0x5fe9]        # 0x408688
  40269f:	mov    r8d,0x40
  4026a5:	mov    rdx,QWORD PTR [rsp+0x38]
  4026aa:	mov    rcx,QWORD PTR [rsp+0x20]
  4026af:	call   QWORD PTR [rip+0x6ce3]        # 0x409398
  4026b5:	test   eax,eax
  4026b7:	je     0x4026e1
  4026b9:	add    DWORD PTR [rip+0x5fc4],0x1        # 0x408684
  4026c0:	mov    r8,rdi
  4026c3:	mov    rdx,rsi
  4026c6:	mov    rcx,rbx
  4026c9:	add    rsp,0x58
  4026cd:	pop    rbx
  4026ce:	pop    rsi
  4026cf:	pop    rdi
  4026d0:	pop    rbp
  4026d1:	pop    r12
  4026d3:	pop    r13
  4026d5:	jmp    0x403510
  4026da:	xor    ebp,ebp
  4026dc:	jmp    0x40261b
  4026e1:	call   QWORD PTR [rip+0x6c31]        # 0x409318
  4026e7:	lea    rcx,[rip+0x2c6a]        # 0x405358
  4026ee:	mov    edx,eax
  4026f0:	call   0x402550
  4026f5:	mov    rax,QWORD PTR [rip+0x5f8c]        # 0x408688
  4026fc:	mov    edx,DWORD PTR [r12+0x8]
  402701:	lea    rcx,[rip+0x2c18]        # 0x405320
  402708:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40270d:	call   0x402550
  402712:	lea    rcx,[rip+0x2be7]        # 0x405300
  402719:	mov    rdx,rbx
  40271c:	call   0x402550
  402721:	nop
  402722:	nop    DWORD PTR [rax+0x0]
  402726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402730:	push   rbp
  402731:	push   r14
  402733:	push   r13
  402735:	push   r12
  402737:	push   rdi
  402738:	push   rsi
  402739:	push   rbx
  40273a:	mov    rbp,rsp
  40273d:	sub    rsp,0x60
  402741:	mov    ebx,DWORD PTR [rip+0x5f39]        # 0x408680
  402747:	test   ebx,ebx
  402749:	je     0x402760
  40274b:	mov    rsp,rbp
  40274e:	pop    rbx
  40274f:	pop    rsi
  402750:	pop    rdi
  402751:	pop    r12
  402753:	pop    r13
  402755:	pop    r14
  402757:	pop    rbp
  402758:	ret    
  402759:	nop    DWORD PTR [rax+0x0]
  402760:	mov    DWORD PTR [rip+0x5f16],0x1        # 0x408680
  40276a:	call   0x403280
  40276f:	cdqe   
  402771:	lea    rax,[rax+rax*2]
  402775:	lea    rax,[rax*8+0x1e]
  40277d:	and    rax,0xfffffffffffffff0
  402781:	call   0x4034b0
  402786:	mov    rsi,QWORD PTR [rip+0x2d03]        # 0x405490
  40278d:	mov    rbx,QWORD PTR [rip+0x2d0c]        # 0x4054a0
  402794:	sub    rsp,rax
  402797:	mov    DWORD PTR [rip+0x5ee3],0x0        # 0x408684
  4027a1:	lea    rax,[rsp+0x20]
  4027a6:	mov    QWORD PTR [rip+0x5edb],rax        # 0x408688
  4027ad:	mov    rax,rsi
  4027b0:	sub    rax,rbx
  4027b3:	cmp    rax,0x7
  4027b7:	jle    0x40274b
  4027b9:	cmp    rax,0xb
  4027bd:	jle    0x4027e5
  4027bf:	mov    r11d,DWORD PTR [rbx]
  4027c2:	test   r11d,r11d
  4027c5:	jne    0x402910
  4027cb:	mov    r10d,DWORD PTR [rbx+0x4]
  4027cf:	test   r10d,r10d
  4027d2:	jne    0x402910
  4027d8:	mov    r9d,DWORD PTR [rbx+0x8]
  4027dc:	test   r9d,r9d
  4027df:	jne    0x4027fc
  4027e1:	add    rbx,0xc
  4027e5:	mov    r8d,DWORD PTR [rbx]
  4027e8:	test   r8d,r8d
  4027eb:	jne    0x402910
  4027f1:	mov    ecx,DWORD PTR [rbx+0x4]
  4027f4:	test   ecx,ecx
  4027f6:	jne    0x402910
  4027fc:	mov    edx,DWORD PTR [rbx+0x8]
  4027ff:	cmp    edx,0x1
  402802:	jne    0x402a1c
  402808:	add    rbx,0xc
  40280c:	cmp    rbx,rsi
  40280f:	jae    0x40274b
  402815:	mov    r12,QWORD PTR [rip+0x2ca4]        # 0x4054c0
  40281c:	lea    r13,[rbp-0x30]
  402820:	movabs r14,0xffffffff00000000
  40282a:	mov    ecx,DWORD PTR [rbx+0x4]
  40282d:	mov    eax,DWORD PTR [rbx]
  40282f:	movzx  edx,BYTE PTR [rbx+0x8]
  402833:	add    rax,r12
  402836:	add    rcx,r12
  402839:	cmp    edx,0x10
  40283c:	mov    r8,QWORD PTR [rax]
  40283f:	je     0x402986
  402845:	jbe    0x40294d
  40284b:	cmp    edx,0x20
  40284e:	je     0x4029cf
  402854:	cmp    edx,0x40
  402857:	jne    0x4029bb
  40285d:	sub    r8,rax
  402860:	mov    rdx,r13
  402863:	mov    rdi,r13
  402866:	mov    rax,r8
  402869:	add    rax,QWORD PTR [rcx]
  40286c:	mov    r8d,0x8
  402872:	mov    QWORD PTR [rbp-0x30],rax
  402876:	call   0x4025c0
  40287b:	add    rbx,0xc
  40287f:	cmp    rbx,rsi
  402882:	jb     0x40282a
  402884:	mov    eax,DWORD PTR [rip+0x5dfa]        # 0x408684
  40288a:	xor    ebx,ebx
  40288c:	xor    esi,esi
  40288e:	test   eax,eax
  402890:	jle    0x40274b
  402896:	mov    r14,QWORD PTR [rip+0x6b03]        # 0x4093a0
  40289d:	lea    r13,[rbp-0x34]
  4028a1:	mov    r12,QWORD PTR [rip+0x6af0]        # 0x409398
  4028a8:	jmp    0x4028c3
  4028aa:	nop    WORD PTR [rax+rax*1+0x0]
  4028b0:	add    esi,0x1
  4028b3:	add    rbx,0x18
  4028b7:	cmp    esi,DWORD PTR [rip+0x5dc7]        # 0x408684
  4028bd:	jge    0x40274b
  4028c3:	mov    rax,rbx
  4028c6:	add    rax,QWORD PTR [rip+0x5dbb]        # 0x408688
  4028cd:	mov    edx,DWORD PTR [rax]
  4028cf:	test   edx,edx
  4028d1:	je     0x4028b0
  4028d3:	mov    rcx,QWORD PTR [rax+0x8]
  4028d7:	mov    r8d,0x30
  4028dd:	mov    rdx,rdi
  4028e0:	call   r14
  4028e3:	test   rax,rax
  4028e6:	je     0x4029fe
  4028ec:	mov    rax,QWORD PTR [rip+0x5d95]        # 0x408688
  4028f3:	mov    r9,r13
  4028f6:	mov    rdx,QWORD PTR [rbp-0x18]
  4028fa:	mov    rcx,QWORD PTR [rbp-0x30]
  4028fe:	mov    r8d,DWORD PTR [rax+rbx*1]
  402902:	call   r12
  402905:	jmp    0x4028b0
  402907:	nop    WORD PTR [rax+rax*1+0x0]
  402910:	cmp    rbx,rsi
  402913:	jae    0x40274b
  402919:	mov    r12,QWORD PTR [rip+0x2ba0]        # 0x4054c0
  402920:	lea    rdi,[rbp-0x30]
  402924:	mov    ecx,DWORD PTR [rbx+0x4]
  402927:	mov    eax,DWORD PTR [rbx]
  402929:	mov    r8d,0x4
  40292f:	mov    rdx,rdi
  402932:	add    rbx,0x8
  402936:	add    rcx,r12
  402939:	add    eax,DWORD PTR [rcx]
  40293b:	mov    DWORD PTR [rbp-0x30],eax
  40293e:	call   0x4025c0
  402943:	cmp    rbx,rsi
  402946:	jb     0x402924
  402948:	jmp    0x402884
  40294d:	cmp    edx,0x8
  402950:	jne    0x4029bb
  402952:	movzx  edx,BYTE PTR [rcx]
  402955:	mov    rdi,r13
  402958:	mov    r10,rdx
  40295b:	or     r10,0xffffffffffffff00
  402962:	test   dl,dl
  402964:	cmovs  rdx,r10
  402968:	sub    rdx,rax
  40296b:	lea    rax,[r8+rdx*1]
  40296f:	mov    r8d,0x1
  402975:	mov    rdx,r13
  402978:	mov    QWORD PTR [rbp-0x30],rax
  40297c:	call   0x4025c0
  402981:	jmp    0x40287b
  402986:	movzx  edx,WORD PTR [rcx]
  402989:	mov    rdi,r13
  40298c:	mov    r10,rdx
  40298f:	or     r10,0xffffffffffff0000
  402996:	test   dx,dx
  402999:	cmovs  rdx,r10
  40299d:	sub    rdx,rax
  4029a0:	lea    rax,[r8+rdx*1]
  4029a4:	mov    r8d,0x2
  4029aa:	mov    rdx,r13
  4029ad:	mov    QWORD PTR [rbp-0x30],rax
  4029b1:	call   0x4025c0
  4029b6:	jmp    0x40287b
  4029bb:	lea    rcx,[rip+0x29f6]        # 0x4053b8
  4029c2:	mov    QWORD PTR [rbp-0x30],0x0
  4029ca:	call   0x402550
  4029cf:	mov    edx,DWORD PTR [rcx]
  4029d1:	mov    rdi,r13
  4029d4:	mov    r10,rdx
  4029d7:	or     r10,r14
  4029da:	test   edx,edx
  4029dc:	cmovs  rdx,r10
  4029e0:	sub    rdx,rax
  4029e3:	lea    rax,[r8+rdx*1]
  4029e7:	mov    r8d,0x4
  4029ed:	mov    rdx,r13
  4029f0:	mov    QWORD PTR [rbp-0x30],rax
  4029f4:	call   0x4025c0
  4029f9:	jmp    0x40287b
  4029fe:	add    rbx,QWORD PTR [rip+0x5c83]        # 0x408688
  402a05:	lea    rcx,[rip+0x2914]        # 0x405320
  402a0c:	mov    rax,QWORD PTR [rbx+0x10]
  402a10:	mov    r8,QWORD PTR [rbx+0x8]
  402a14:	mov    edx,DWORD PTR [rax+0x8]
  402a17:	call   0x402550
  402a1c:	lea    rcx,[rip+0x295d]        # 0x405380
  402a23:	call   0x402550
  402a28:	nop
  402a29:	nop
  402a2a:	nop
  402a2b:	nop
  402a2c:	nop
  402a2d:	nop
  402a2e:	nop
  402a2f:	nop
  402a30:	sub    rsp,0x28
  402a34:	mov    eax,DWORD PTR [rcx]
  402a36:	cmp    eax,0xc0000091
  402a3b:	ja     0x402aa0
  402a3d:	cmp    eax,0xc000008d
  402a42:	jae    0x402abf
  402a44:	cmp    eax,0xc0000008
  402a49:	je     0x402b60
  402a4f:	ja     0x402b30
  402a55:	cmp    eax,0x80000002
  402a5a:	je     0x402b60
  402a60:	cmp    eax,0xc0000005
  402a65:	jne    0x402b3e
  402a6b:	xor    edx,edx
  402a6d:	mov    ecx,0xb
  402a72:	call   0x403508
  402a77:	cmp    rax,0x1
  402a7b:	je     0x402bc0
  402a81:	test   rax,rax
  402a84:	je     0x402ba0
  402a8a:	mov    ecx,0xb
  402a8f:	call   rax
  402a91:	xor    eax,eax
  402a93:	add    rsp,0x28
  402a97:	ret    
  402a98:	nop    DWORD PTR [rax+rax*1+0x0]
  402aa0:	cmp    eax,0xc0000094
  402aa5:	je     0x402b70
  402aab:	ja     0x402af0
  402aad:	cmp    eax,0xc0000092
  402ab2:	je     0x402b60
  402ab8:	cmp    eax,0xc0000093
  402abd:	jne    0x402b3e
  402abf:	xor    edx,edx
  402ac1:	mov    ecx,0x8
  402ac6:	call   0x403508
  402acb:	cmp    rax,0x1
  402acf:	mov    rdx,rax
  402ad2:	je     0x402b48
  402ad4:	test   rdx,rdx
  402ad7:	mov    eax,0x1
  402adc:	je     0x402a93
  402ade:	mov    ecx,0x8
  402ae3:	call   rdx
  402ae5:	xor    eax,eax
  402ae7:	add    rsp,0x28
  402aeb:	ret    
  402aec:	nop    DWORD PTR [rax+0x0]
  402af0:	cmp    eax,0xc0000095
  402af5:	je     0x402b60
  402af7:	cmp    eax,0xc0000096
  402afc:	jne    0x402b3e
  402afe:	xor    edx,edx
  402b00:	mov    ecx,0x4
  402b05:	call   0x403508
  402b0a:	cmp    rax,0x1
  402b0e:	je     0x402baa
  402b14:	test   rax,rax
  402b17:	je     0x402ba0
  402b1d:	mov    ecx,0x4
  402b22:	call   rax
  402b24:	xor    eax,eax
  402b26:	jmp    0x402a93
  402b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b30:	cmp    eax,0xc000001d
  402b35:	je     0x402afe
  402b37:	cmp    eax,0xc000008c
  402b3c:	je     0x402b60
  402b3e:	mov    eax,0x1
  402b43:	add    rsp,0x28
  402b47:	ret    
  402b48:	mov    edx,0x1
  402b4d:	mov    ecx,0x8
  402b52:	call   0x403508
  402b57:	call   0x402520
  402b5c:	nop    DWORD PTR [rax+0x0]
  402b60:	xor    eax,eax
  402b62:	add    rsp,0x28
  402b66:	ret    
  402b67:	nop    WORD PTR [rax+rax*1+0x0]
  402b70:	xor    edx,edx
  402b72:	mov    ecx,0x8
  402b77:	call   0x403508
  402b7c:	cmp    rax,0x1
  402b80:	mov    rdx,rax
  402b83:	jne    0x402ad4
  402b89:	mov    edx,0x1
  402b8e:	mov    ecx,0x8
  402b93:	call   0x403508
  402b98:	xor    eax,eax
  402b9a:	jmp    0x402a93
  402b9f:	nop
  402ba0:	mov    eax,0x4
  402ba5:	add    rsp,0x28
  402ba9:	ret    
  402baa:	mov    edx,0x1
  402baf:	mov    ecx,0x4
  402bb4:	call   0x403508
  402bb9:	xor    eax,eax
  402bbb:	jmp    0x402a93
  402bc0:	mov    edx,0x1
  402bc5:	mov    ecx,0xb
  402bca:	call   0x403508
  402bcf:	xor    eax,eax
  402bd1:	jmp    0x402a93
  402bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402be0:	push   r12
  402be2:	push   rbp
  402be3:	push   rdi
  402be4:	push   rsi
  402be5:	push   rbx
  402be6:	sub    rsp,0x20
  402bea:	call   0x403350
  402bef:	mov    rbp,rax
  402bf2:	mov    eax,DWORD PTR [rip+0x5ad0]        # 0x4086c8
  402bf8:	test   eax,eax
  402bfa:	jne    0x402c21
  402bfc:	test   rbp,rbp
  402bff:	je     0x402c21
  402c01:	lea    rcx,[rip+0x27e8]        # 0x4053f0
  402c08:	mov    DWORD PTR [rip+0x5ab6],0x1        # 0x4086c8
  402c12:	call   0x403190
  402c17:	test   rax,rax
  402c1a:	je     0x402c30
  402c1c:	mov    eax,0x1
  402c21:	add    rsp,0x20
  402c25:	pop    rbx
  402c26:	pop    rsi
  402c27:	pop    rdi
  402c28:	pop    rbp
  402c29:	pop    r12
  402c2b:	ret    
  402c2c:	nop    DWORD PTR [rax+0x0]
  402c30:	lea    rbx,[rip+0x5bc9]        # 0x408800
  402c37:	mov    ecx,0x30
  402c3c:	lea    rdx,[rip+0x5abd]        # 0x408700
  402c43:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402a30
  402c4a:	xor    esi,esi
  402c4c:	mov    rdi,rbx
  402c4f:	rep stos QWORD PTR es:[rdi],rax
  402c52:	mov    rdi,rdx
  402c55:	sub    r12,rbp
  402c58:	mov    cl,0x20
  402c5a:	rep stos QWORD PTR es:[rdi],rax
  402c5d:	mov    rdi,rdx
  402c60:	jmp    0x402c90
  402c62:	mov    BYTE PTR [rdi],0x9
  402c65:	mov    DWORD PTR [rdi+0x4],r12d
  402c69:	add    rsi,0x1
  402c6d:	mov    edx,DWORD PTR [rax+0xc]
  402c70:	add    rbx,0xc
  402c74:	mov    DWORD PTR [rbx-0xc],edx
  402c77:	add    edx,DWORD PTR [rax+0x8]
  402c7a:	mov    rax,rdi
  402c7d:	sub    rax,rbp
  402c80:	add    rdi,0x8
  402c84:	mov    DWORD PTR [rbx-0x4],eax
  402c87:	mov    DWORD PTR [rbx-0x8],edx
  402c8a:	cmp    rsi,0x20
  402c8e:	je     0x402cc5
  402c90:	mov    rcx,rsi
  402c93:	call   0x4032c0
  402c98:	test   rax,rax
  402c9b:	jne    0x402c62
  402c9d:	test   rsi,rsi
  402ca0:	je     0x402c1c
  402ca6:	mov    edx,esi
  402ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cb0:	mov    r8,rbp
  402cb3:	lea    rcx,[rip+0x5b46]        # 0x408800
  402cba:	call   QWORD PTR [rip+0x6690]        # 0x409350
  402cc0:	jmp    0x402c1c
  402cc5:	mov    edx,0x20
  402cca:	jmp    0x402cb0
  402ccc:	nop    DWORD PTR [rax+0x0]
  402cd0:	push   rbx
  402cd1:	sub    rsp,0x20
  402cd5:	mov    rdx,QWORD PTR [rcx]
  402cd8:	mov    eax,DWORD PTR [rdx]
  402cda:	mov    r8d,eax
  402cdd:	and    r8d,0x20ffffff
  402ce4:	cmp    r8d,0x20474343
  402ceb:	je     0x402df0
  402cf1:	cmp    eax,0xc0000091
  402cf6:	mov    rbx,rcx
  402cf9:	ja     0x402d80
  402cff:	cmp    eax,0xc000008d
  402d04:	jae    0x402d97
  402d0a:	cmp    eax,0xc0000008
  402d0f:	je     0x402d43
  402d11:	ja     0x402d50
  402d13:	cmp    eax,0x80000002
  402d18:	je     0x402d43
  402d1a:	cmp    eax,0xc0000005
  402d1f:	jne    0x402d62
  402d21:	xor    edx,edx
  402d23:	mov    ecx,0xb
  402d28:	call   0x403508
  402d2d:	cmp    rax,0x1
  402d31:	je     0x402e60
  402d37:	test   rax,rax
  402d3a:	je     0x402d62
  402d3c:	mov    ecx,0xb
  402d41:	call   rax
  402d43:	mov    eax,0xffffffff
  402d48:	add    rsp,0x20
  402d4c:	pop    rbx
  402d4d:	ret    
  402d4e:	xchg   ax,ax
  402d50:	cmp    eax,0xc000001d
  402d55:	je     0x402e16
  402d5b:	cmp    eax,0xc000008c
  402d60:	je     0x402d43
  402d62:	mov    rax,QWORD PTR [rip+0x5957]        # 0x4086c0
  402d69:	test   rax,rax
  402d6c:	je     0x402d48
  402d6e:	mov    rcx,rbx
  402d71:	add    rsp,0x20
  402d75:	pop    rbx
  402d76:	rex.W jmp rax
  402d79:	nop    DWORD PTR [rax+0x0]
  402d80:	cmp    eax,0xc0000094
  402d85:	je     0x402dc2
  402d87:	ja     0x402e00
  402d89:	cmp    eax,0xc0000092
  402d8e:	je     0x402d43
  402d90:	cmp    eax,0xc0000093
  402d95:	jne    0x402d62
  402d97:	xor    edx,edx
  402d99:	mov    ecx,0x8
  402d9e:	call   0x403508
  402da3:	cmp    rax,0x1
  402da7:	jne    0x402dd4
  402da9:	mov    edx,0x1
  402dae:	mov    ecx,0x8
  402db3:	call   0x403508
  402db8:	call   0x402520
  402dbd:	jmp    0x402d43
  402dc2:	xor    edx,edx
  402dc4:	mov    ecx,0x8
  402dc9:	call   0x403508
  402dce:	cmp    rax,0x1
  402dd2:	je     0x402e42
  402dd4:	test   rax,rax
  402dd7:	je     0x402d62
  402dd9:	mov    ecx,0x8
  402dde:	call   rax
  402de0:	mov    eax,0xffffffff
  402de5:	jmp    0x402d48
  402dea:	nop    WORD PTR [rax+rax*1+0x0]
  402df0:	test   BYTE PTR [rdx+0x4],0x1
  402df4:	jne    0x402cf1
  402dfa:	jmp    0x402d43
  402dff:	nop
  402e00:	cmp    eax,0xc0000095
  402e05:	je     0x402d43
  402e0b:	cmp    eax,0xc0000096
  402e10:	jne    0x402d62
  402e16:	xor    edx,edx
  402e18:	mov    ecx,0x4
  402e1d:	call   0x403508
  402e22:	cmp    rax,0x1
  402e26:	je     0x402e74
  402e28:	test   rax,rax
  402e2b:	je     0x402d62
  402e31:	mov    ecx,0x4
  402e36:	call   rax
  402e38:	mov    eax,0xffffffff
  402e3d:	jmp    0x402d48
  402e42:	mov    edx,0x1
  402e47:	mov    ecx,0x8
  402e4c:	call   0x403508
  402e51:	jmp    0x402d43
  402e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e60:	mov    edx,0x1
  402e65:	mov    ecx,0xb
  402e6a:	call   0x403508
  402e6f:	jmp    0x402d43
  402e74:	mov    edx,0x1
  402e79:	mov    ecx,0x4
  402e7e:	call   0x403508
  402e83:	jmp    0x402d43
  402e88:	nop
  402e89:	nop
  402e8a:	nop
  402e8b:	nop
  402e8c:	nop
  402e8d:	nop
  402e8e:	nop
  402e8f:	nop
  402e90:	push   rbp
  402e91:	push   rdi
  402e92:	push   rsi
  402e93:	push   rbx
  402e94:	sub    rsp,0x28
  402e98:	lea    rcx,[rip+0x5b01]        # 0x4089a0
  402e9f:	call   QWORD PTR [rip+0x6453]        # 0x4092f8
  402ea5:	mov    rbx,QWORD PTR [rip+0x5ad4]        # 0x408980
  402eac:	test   rbx,rbx
  402eaf:	je     0x402ee4
  402eb1:	mov    rbp,QWORD PTR [rip+0x64d0]        # 0x409388
  402eb8:	mov    rdi,QWORD PTR [rip+0x6459]        # 0x409318
  402ebf:	nop
  402ec0:	mov    ecx,DWORD PTR [rbx]
  402ec2:	call   rbp
  402ec4:	mov    rsi,rax
  402ec7:	call   rdi
  402ec9:	test   eax,eax
  402ecb:	jne    0x402edb
  402ecd:	test   rsi,rsi
  402ed0:	je     0x402edb
  402ed2:	mov    rax,QWORD PTR [rbx+0x8]
  402ed6:	mov    rcx,rsi
  402ed9:	call   rax
  402edb:	mov    rbx,QWORD PTR [rbx+0x10]
  402edf:	test   rbx,rbx
  402ee2:	jne    0x402ec0
  402ee4:	mov    rax,QWORD PTR [rip+0x6455]        # 0x409340
  402eeb:	lea    rcx,[rip+0x5aae]        # 0x4089a0
  402ef2:	add    rsp,0x28
  402ef6:	pop    rbx
  402ef7:	pop    rsi
  402ef8:	pop    rdi
  402ef9:	pop    rbp
  402efa:	rex.W jmp rax
  402efd:	nop    DWORD PTR [rax]
  402f00:	push   rdi
  402f01:	push   rsi
  402f02:	push   rbx
  402f03:	sub    rsp,0x20
  402f07:	mov    eax,DWORD PTR [rip+0x5a7b]        # 0x408988
  402f0d:	test   eax,eax
  402f0f:	jne    0x402f20
  402f11:	add    rsp,0x20
  402f15:	pop    rbx
  402f16:	pop    rsi
  402f17:	pop    rdi
  402f18:	ret    
  402f19:	nop    DWORD PTR [rax+0x0]
  402f20:	mov    rsi,rdx
  402f23:	mov    edi,ecx
  402f25:	mov    edx,0x18
  402f2a:	mov    ecx,0x1
  402f2f:	call   0x403540
  402f34:	test   rax,rax
  402f37:	mov    rbx,rax
  402f3a:	je     0x402f78
  402f3c:	mov    DWORD PTR [rax],edi
  402f3e:	mov    QWORD PTR [rax+0x8],rsi
  402f42:	lea    rcx,[rip+0x5a57]        # 0x4089a0
  402f49:	call   QWORD PTR [rip+0x63a9]        # 0x4092f8
  402f4f:	mov    rax,QWORD PTR [rip+0x5a2a]        # 0x408980
  402f56:	lea    rcx,[rip+0x5a43]        # 0x4089a0
  402f5d:	mov    QWORD PTR [rip+0x5a1c],rbx        # 0x408980
  402f64:	mov    QWORD PTR [rbx+0x10],rax
  402f68:	call   QWORD PTR [rip+0x63d2]        # 0x409340
  402f6e:	xor    eax,eax
  402f70:	add    rsp,0x20
  402f74:	pop    rbx
  402f75:	pop    rsi
  402f76:	pop    rdi
  402f77:	ret    
  402f78:	mov    eax,0xffffffff
  402f7d:	jmp    0x402f11
  402f7f:	nop
  402f80:	push   rbx
  402f81:	sub    rsp,0x20
  402f85:	mov    eax,DWORD PTR [rip+0x59fd]        # 0x408988
  402f8b:	test   eax,eax
  402f8d:	jne    0x402fa0
  402f8f:	xor    eax,eax
  402f91:	add    rsp,0x20
  402f95:	pop    rbx
  402f96:	ret    
  402f97:	nop    WORD PTR [rax+rax*1+0x0]
  402fa0:	mov    ebx,ecx
  402fa2:	lea    rcx,[rip+0x59f7]        # 0x4089a0
  402fa9:	call   QWORD PTR [rip+0x6349]        # 0x4092f8
  402faf:	mov    rdx,QWORD PTR [rip+0x59ca]        # 0x408980
  402fb6:	test   rdx,rdx
  402fb9:	je     0x402fd7
  402fbb:	mov    eax,DWORD PTR [rdx]
  402fbd:	cmp    eax,ebx
  402fbf:	jne    0x402fce
  402fc1:	jmp    0x40300f
  402fc3:	mov    r8d,DWORD PTR [rax]
  402fc6:	cmp    r8d,ebx
  402fc9:	je     0x402ff0
  402fcb:	mov    rdx,rax
  402fce:	mov    rax,QWORD PTR [rdx+0x10]
  402fd2:	test   rax,rax
  402fd5:	jne    0x402fc3
  402fd7:	lea    rcx,[rip+0x59c2]        # 0x4089a0
  402fde:	call   QWORD PTR [rip+0x635c]        # 0x409340
  402fe4:	xor    eax,eax
  402fe6:	add    rsp,0x20
  402fea:	pop    rbx
  402feb:	ret    
  402fec:	nop    DWORD PTR [rax+0x0]
  402ff0:	mov    rcx,rax
  402ff3:	mov    rax,QWORD PTR [rax+0x10]
  402ff7:	mov    QWORD PTR [rdx+0x10],rax
  402ffb:	call   0x403528
  403000:	lea    rcx,[rip+0x5999]        # 0x4089a0
  403007:	call   QWORD PTR [rip+0x6333]        # 0x409340
  40300d:	jmp    0x402fe4
  40300f:	mov    rax,QWORD PTR [rdx+0x10]
  403013:	mov    rcx,rdx
  403016:	mov    QWORD PTR [rip+0x5963],rax        # 0x408980
  40301d:	jmp    0x402ffb
  40301f:	nop
  403020:	push   rbx
  403021:	sub    rsp,0x20
  403025:	cmp    edx,0x1
  403028:	je     0x4030c0
  40302e:	jb     0x403060
  403030:	cmp    edx,0x2
  403033:	je     0x403050
  403035:	cmp    edx,0x3
  403038:	jne    0x403055
  40303a:	mov    eax,DWORD PTR [rip+0x5948]        # 0x408988
  403040:	test   eax,eax
  403042:	je     0x403055
  403044:	call   0x402e90
  403049:	jmp    0x403055
  40304b:	nop    DWORD PTR [rax+rax*1+0x0]
  403050:	call   0x402520
  403055:	mov    eax,0x1
  40305a:	add    rsp,0x20
  40305e:	pop    rbx
  40305f:	ret    
  403060:	mov    eax,DWORD PTR [rip+0x5922]        # 0x408988
  403066:	test   eax,eax
  403068:	jne    0x4030f0
  40306e:	mov    eax,DWORD PTR [rip+0x5914]        # 0x408988
  403074:	cmp    eax,0x1
  403077:	jne    0x403055
  403079:	mov    rcx,QWORD PTR [rip+0x5900]        # 0x408980
  403080:	test   rcx,rcx
  403083:	je     0x403096
  403085:	mov    rbx,QWORD PTR [rcx+0x10]
  403089:	call   0x403528
  40308e:	test   rbx,rbx
  403091:	mov    rcx,rbx
  403094:	jne    0x403085
  403096:	lea    rcx,[rip+0x5903]        # 0x4089a0
  40309d:	mov    QWORD PTR [rip+0x58d8],0x0        # 0x408980
  4030a8:	mov    DWORD PTR [rip+0x58d6],0x0        # 0x408988
  4030b2:	call   QWORD PTR [rip+0x6238]        # 0x4092f0
  4030b8:	jmp    0x403055
  4030ba:	nop    WORD PTR [rax+rax*1+0x0]
  4030c0:	mov    eax,DWORD PTR [rip+0x58c2]        # 0x408988
  4030c6:	test   eax,eax
  4030c8:	je     0x4030e0
  4030ca:	mov    eax,0x1
  4030cf:	mov    DWORD PTR [rip+0x58af],0x1        # 0x408988
  4030d9:	add    rsp,0x20
  4030dd:	pop    rbx
  4030de:	ret    
  4030df:	nop
  4030e0:	lea    rcx,[rip+0x58b9]        # 0x4089a0
  4030e7:	call   QWORD PTR [rip+0x624b]        # 0x409338
  4030ed:	jmp    0x4030ca
  4030ef:	nop
  4030f0:	call   0x402e90
  4030f5:	jmp    0x40306e
  4030fa:	nop
  4030fb:	nop
  4030fc:	nop
  4030fd:	nop
  4030fe:	nop
  4030ff:	nop
  403100:	movsxd rax,DWORD PTR [rcx+0x3c]
  403104:	add    rcx,rax
  403107:	xor    eax,eax
  403109:	cmp    DWORD PTR [rcx],0x4550
  40310f:	je     0x403113
  403111:	repz ret 
  403113:	xor    eax,eax
  403115:	cmp    WORD PTR [rcx+0x18],0x20b
  40311b:	sete   al
  40311e:	ret    
  40311f:	nop
  403120:	cmp    WORD PTR [rcx],0x5a4d
  403125:	je     0x403130
  403127:	xor    eax,eax
  403129:	ret    
  40312a:	nop    WORD PTR [rax+rax*1+0x0]
  403130:	jmp    0x403100
  403132:	nop    DWORD PTR [rax+0x0]
  403136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403140:	movsxd rax,DWORD PTR [rcx+0x3c]
  403144:	add    rcx,rax
  403147:	movzx  eax,WORD PTR [rcx+0x14]
  40314b:	lea    rax,[rcx+rax*1+0x18]
  403150:	movzx  ecx,WORD PTR [rcx+0x6]
  403154:	test   ecx,ecx
  403156:	je     0x403181
  403158:	sub    ecx,0x1
  40315b:	lea    rcx,[rcx+rcx*4]
  40315f:	lea    r9,[rax+rcx*8+0x28]
  403164:	mov    r8d,DWORD PTR [rax+0xc]
  403168:	cmp    r8,rdx
  40316b:	mov    rcx,r8
  40316e:	ja     0x403178
  403170:	add    ecx,DWORD PTR [rax+0x8]
  403173:	cmp    rdx,rcx
  403176:	jb     0x403183
  403178:	add    rax,0x28
  40317c:	cmp    rax,r9
  40317f:	jne    0x403164
  403181:	xor    eax,eax
  403183:	repz ret 
  403185:	nop
  403186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403190:	push   rdi
  403191:	push   rsi
  403192:	push   rbx
  403193:	sub    rsp,0x20
  403197:	mov    rsi,rcx
  40319a:	call   0x403500
  40319f:	cmp    rax,0x8
  4031a3:	ja     0x4031c0
  4031a5:	mov    rbx,QWORD PTR [rip+0x2314]        # 0x4054c0
  4031ac:	xor    edi,edi
  4031ae:	cmp    WORD PTR [rbx],0x5a4d
  4031b3:	je     0x4031d0
  4031b5:	mov    rax,rdi
  4031b8:	add    rsp,0x20
  4031bc:	pop    rbx
  4031bd:	pop    rsi
  4031be:	pop    rdi
  4031bf:	ret    
  4031c0:	xor    edi,edi
  4031c2:	mov    rax,rdi
  4031c5:	add    rsp,0x20
  4031c9:	pop    rbx
  4031ca:	pop    rsi
  4031cb:	pop    rdi
  4031cc:	ret    
  4031cd:	nop    DWORD PTR [rax]
  4031d0:	mov    rcx,rbx
  4031d3:	call   0x403100
  4031d8:	test   eax,eax
  4031da:	je     0x4031b5
  4031dc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4031e0:	add    rdx,rbx
  4031e3:	movzx  eax,WORD PTR [rdx+0x14]
  4031e7:	lea    rbx,[rdx+rax*1+0x18]
  4031ec:	movzx  eax,WORD PTR [rdx+0x6]
  4031f0:	test   eax,eax
  4031f2:	je     0x4031b5
  4031f4:	sub    eax,0x1
  4031f7:	lea    rax,[rax+rax*4]
  4031fb:	lea    rdi,[rbx+rax*8+0x28]
  403200:	jmp    0x40320b
  403202:	add    rbx,0x28
  403206:	cmp    rbx,rdi
  403209:	je     0x4031c0
  40320b:	mov    r8d,0x8
  403211:	mov    rdx,rsi
  403214:	mov    rcx,rbx
  403217:	call   0x4034f8
  40321c:	test   eax,eax
  40321e:	jne    0x403202
  403220:	mov    rdi,rbx
  403223:	mov    rax,rdi
  403226:	add    rsp,0x20
  40322a:	pop    rbx
  40322b:	pop    rsi
  40322c:	pop    rdi
  40322d:	ret    
  40322e:	xchg   ax,ax
  403230:	push   rsi
  403231:	push   rbx
  403232:	sub    rsp,0x28
  403236:	mov    rbx,QWORD PTR [rip+0x2283]        # 0x4054c0
  40323d:	cmp    WORD PTR [rbx],0x5a4d
  403242:	je     0x403250
  403244:	xor    eax,eax
  403246:	add    rsp,0x28
  40324a:	pop    rbx
  40324b:	pop    rsi
  40324c:	ret    
  40324d:	nop    DWORD PTR [rax]
  403250:	mov    rsi,rcx
  403253:	mov    rcx,rbx
  403256:	call   0x403100
  40325b:	test   eax,eax
  40325d:	je     0x403244
  40325f:	sub    rsi,rbx
  403262:	mov    rcx,rbx
  403265:	mov    rdx,rsi
  403268:	add    rsp,0x28
  40326c:	pop    rbx
  40326d:	pop    rsi
  40326e:	jmp    0x403140
  403273:	nop    DWORD PTR [rax]
  403276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403280:	push   rbx
  403281:	sub    rsp,0x20
  403285:	mov    rbx,QWORD PTR [rip+0x2234]        # 0x4054c0
  40328c:	xor    eax,eax
  40328e:	cmp    WORD PTR [rbx],0x5a4d
  403293:	je     0x4032a0
  403295:	add    rsp,0x20
  403299:	pop    rbx
  40329a:	ret    
  40329b:	nop    DWORD PTR [rax+rax*1+0x0]
  4032a0:	mov    rcx,rbx
  4032a3:	call   0x403100
  4032a8:	test   eax,eax
  4032aa:	je     0x403295
  4032ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4032b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4032b5:	add    rsp,0x20
  4032b9:	pop    rbx
  4032ba:	ret    
  4032bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4032c0:	push   rdi
  4032c1:	push   rsi
  4032c2:	push   rbx
  4032c3:	sub    rsp,0x20
  4032c7:	mov    rsi,QWORD PTR [rip+0x21f2]        # 0x4054c0
  4032ce:	xor    edi,edi
  4032d0:	mov    rbx,rcx
  4032d3:	cmp    WORD PTR [rsi],0x5a4d
  4032d8:	je     0x4032e5
  4032da:	mov    rax,rdi
  4032dd:	add    rsp,0x20
  4032e1:	pop    rbx
  4032e2:	pop    rsi
  4032e3:	pop    rdi
  4032e4:	ret    
  4032e5:	mov    rcx,rsi
  4032e8:	call   0x403100
  4032ed:	test   eax,eax
  4032ef:	je     0x4032da
  4032f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4032f5:	add    rsi,rax
  4032f8:	movzx  eax,WORD PTR [rsi+0x14]
  4032fc:	lea    rdx,[rsi+rax*1+0x18]
  403301:	movzx  eax,WORD PTR [rsi+0x6]
  403305:	test   eax,eax
  403307:	je     0x4032da
  403309:	sub    eax,0x1
  40330c:	lea    rax,[rax+rax*4]
  403310:	lea    rax,[rdx+rax*8+0x28]
  403315:	test   BYTE PTR [rdx+0x27],0x20
  403319:	je     0x403324
  40331b:	test   rbx,rbx
  40331e:	je     0x403340
  403320:	sub    rbx,0x1
  403324:	add    rdx,0x28
  403328:	cmp    rdx,rax
  40332b:	jne    0x403315
  40332d:	xor    edi,edi
  40332f:	mov    rax,rdi
  403332:	add    rsp,0x20
  403336:	pop    rbx
  403337:	pop    rsi
  403338:	pop    rdi
  403339:	ret    
  40333a:	nop    WORD PTR [rax+rax*1+0x0]
  403340:	mov    rdi,rdx
  403343:	mov    rax,rdi
  403346:	add    rsp,0x20
  40334a:	pop    rbx
  40334b:	pop    rsi
  40334c:	pop    rdi
  40334d:	ret    
  40334e:	xchg   ax,ax
  403350:	push   rsi
  403351:	push   rbx
  403352:	sub    rsp,0x28
  403356:	mov    rsi,QWORD PTR [rip+0x2163]        # 0x4054c0
  40335d:	xor    ebx,ebx
  40335f:	cmp    WORD PTR [rsi],0x5a4d
  403364:	je     0x403370
  403366:	mov    rax,rbx
  403369:	add    rsp,0x28
  40336d:	pop    rbx
  40336e:	pop    rsi
  40336f:	ret    
  403370:	mov    rcx,rsi
  403373:	call   0x403100
  403378:	test   eax,eax
  40337a:	cmovne rbx,rsi
  40337e:	mov    rax,rbx
  403381:	add    rsp,0x28
  403385:	pop    rbx
  403386:	pop    rsi
  403387:	ret    
  403388:	nop    DWORD PTR [rax+rax*1+0x0]
  403390:	push   rsi
  403391:	push   rbx
  403392:	sub    rsp,0x28
  403396:	mov    rbx,QWORD PTR [rip+0x2123]        # 0x4054c0
  40339d:	xor    eax,eax
  40339f:	cmp    WORD PTR [rbx],0x5a4d
  4033a4:	je     0x4033b0
  4033a6:	add    rsp,0x28
  4033aa:	pop    rbx
  4033ab:	pop    rsi
  4033ac:	ret    
  4033ad:	nop    DWORD PTR [rax]
  4033b0:	mov    rsi,rcx
  4033b3:	mov    rcx,rbx
  4033b6:	call   0x403100
  4033bb:	test   eax,eax
  4033bd:	je     0x4033a6
  4033bf:	sub    rsi,rbx
  4033c2:	mov    rcx,rbx
  4033c5:	mov    rdx,rsi
  4033c8:	call   0x403140
  4033cd:	test   rax,rax
  4033d0:	je     0x4033e1
  4033d2:	mov    eax,DWORD PTR [rax+0x24]
  4033d5:	not    eax
  4033d7:	shr    eax,0x1f
  4033da:	add    rsp,0x28
  4033de:	pop    rbx
  4033df:	pop    rsi
  4033e0:	ret    
  4033e1:	xor    eax,eax
  4033e3:	jmp    0x4033a6
  4033e5:	nop
  4033e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033f0:	push   rbp
  4033f1:	push   rdi
  4033f2:	push   rsi
  4033f3:	push   rbx
  4033f4:	sub    rsp,0x28
  4033f8:	mov    rdi,QWORD PTR [rip+0x20c1]        # 0x4054c0
  4033ff:	xor    ebp,ebp
  403401:	mov    esi,ecx
  403403:	cmp    WORD PTR [rdi],0x5a4d
  403408:	je     0x403420
  40340a:	mov    rax,rbp
  40340d:	add    rsp,0x28
  403411:	pop    rbx
  403412:	pop    rsi
  403413:	pop    rdi
  403414:	pop    rbp
  403415:	ret    
  403416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403420:	mov    rcx,rdi
  403423:	call   0x403100
  403428:	test   eax,eax
  40342a:	je     0x40340a
  40342c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403430:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403437:	test   edx,edx
  403439:	je     0x40340a
  40343b:	mov    ebx,edx
  40343d:	mov    rcx,rdi
  403440:	mov    rdx,rbx
  403443:	call   0x403140
  403448:	test   rax,rax
  40344b:	je     0x40340a
  40344d:	add    rbx,rdi
  403450:	mov    rdx,rbx
  403453:	jne    0x403467
  403455:	jmp    0x40340a
  403457:	nop    WORD PTR [rax+rax*1+0x0]
  403460:	sub    esi,0x1
  403463:	add    rdx,0x14
  403467:	mov    ecx,DWORD PTR [rdx+0x4]
  40346a:	test   ecx,ecx
  40346c:	jne    0x403475
  40346e:	mov    eax,DWORD PTR [rdx+0xc]
  403471:	test   eax,eax
  403473:	je     0x403490
  403475:	test   esi,esi
  403477:	jg     0x403460
  403479:	mov    ebp,DWORD PTR [rdx+0xc]
  40347c:	add    rbp,rdi
  40347f:	mov    rax,rbp
  403482:	add    rsp,0x28
  403486:	pop    rbx
  403487:	pop    rsi
  403488:	pop    rdi
  403489:	pop    rbp
  40348a:	ret    
  40348b:	nop    DWORD PTR [rax+rax*1+0x0]
  403490:	xor    ebp,ebp
  403492:	mov    rax,rbp
  403495:	add    rsp,0x28
  403499:	pop    rbx
  40349a:	pop    rsi
  40349b:	pop    rdi
  40349c:	pop    rbp
  40349d:	ret    
  40349e:	nop
  40349f:	nop
  4034a0:	jmp    QWORD PTR [rip+0x6012]        # 0x4094b8
  4034a6:	nop
  4034a7:	nop
  4034a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4034b0:	push   rcx
  4034b1:	push   rax
  4034b2:	cmp    rax,0x1000
  4034b8:	lea    rcx,[rsp+0x18]
  4034bd:	jb     0x4034d8
  4034bf:	sub    rcx,0x1000
  4034c6:	or     QWORD PTR [rcx],0x0
  4034ca:	sub    rax,0x1000
  4034d0:	cmp    rax,0x1000
  4034d6:	ja     0x4034bf
  4034d8:	sub    rcx,rax
  4034db:	or     QWORD PTR [rcx],0x0
  4034df:	pop    rax
  4034e0:	pop    rcx
  4034e1:	ret    
  4034e2:	nop
  4034e3:	nop
  4034e4:	nop
  4034e5:	nop
  4034e6:	nop
  4034e7:	nop
  4034e8:	nop
  4034e9:	nop
  4034ea:	nop
  4034eb:	nop
  4034ec:	nop
  4034ed:	nop
  4034ee:	nop
  4034ef:	nop
  4034f0:	jmp    QWORD PTR [rip+0x5f92]        # 0x409488
  4034f6:	nop
  4034f7:	nop
  4034f8:	jmp    QWORD PTR [rip+0x5f82]        # 0x409480
  4034fe:	nop
  4034ff:	nop
  403500:	jmp    QWORD PTR [rip+0x5f72]        # 0x409478
  403506:	nop
  403507:	nop
  403508:	jmp    QWORD PTR [rip+0x5f62]        # 0x409470
  40350e:	nop
  40350f:	nop
  403510:	jmp    QWORD PTR [rip+0x5f52]        # 0x409468
  403516:	nop
  403517:	nop
  403518:	jmp    QWORD PTR [rip+0x5f42]        # 0x409460
  40351e:	nop
  40351f:	nop
  403520:	jmp    QWORD PTR [rip+0x5f32]        # 0x409458
  403526:	nop
  403527:	nop
  403528:	jmp    QWORD PTR [rip+0x5f22]        # 0x409450
  40352e:	nop
  40352f:	nop
  403530:	jmp    QWORD PTR [rip+0x5f12]        # 0x409448
  403536:	nop
  403537:	nop
  403538:	jmp    QWORD PTR [rip+0x5f02]        # 0x409440
  40353e:	nop
  40353f:	nop
  403540:	jmp    QWORD PTR [rip+0x5ef2]        # 0x409438
  403546:	nop
  403547:	nop
  403548:	jmp    QWORD PTR [rip+0x5ee2]        # 0x409430
  40354e:	nop
  40354f:	nop
  403550:	jmp    QWORD PTR [rip+0x5eca]        # 0x409420
  403556:	nop
  403557:	nop
  403558:	jmp    QWORD PTR [rip+0x5eba]        # 0x409418
  40355e:	nop
  40355f:	nop
  403560:	jmp    QWORD PTR [rip+0x5eaa]        # 0x409410
  403566:	nop
  403567:	nop
  403568:	jmp    QWORD PTR [rip+0x5e9a]        # 0x409408
  40356e:	nop
  40356f:	nop
  403570:	jmp    QWORD PTR [rip+0x5e82]        # 0x4093f8
  403576:	nop
  403577:	nop
  403578:	jmp    QWORD PTR [rip+0x5e72]        # 0x4093f0
  40357e:	nop
  40357f:	nop
  403580:	jmp    QWORD PTR [rip+0x5e5a]        # 0x4093e0
  403586:	nop
  403587:	nop
  403588:	jmp    QWORD PTR [rip+0x5e4a]        # 0x4093d8
  40358e:	nop
  40358f:	nop
  403590:	jmp    QWORD PTR [rip+0x5e3a]        # 0x4093d0
  403596:	nop
  403597:	nop
  403598:	jmp    QWORD PTR [rip+0x5e2a]        # 0x4093c8
  40359e:	nop
  40359f:	nop
  4035a0:	jmp    QWORD PTR [rip+0x5e1a]        # 0x4093c0
  4035a6:	nop
  4035a7:	nop
  4035a8:	jmp    QWORD PTR [rip+0x5e0a]        # 0x4093b8
  4035ae:	nop
  4035af:	nop
  4035b0:	jmp    QWORD PTR [rip+0x5dfa]        # 0x4093b0
  4035b6:	nop
  4035b7:	nop
  4035b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4035c0:	mov    rax,QWORD PTR [rip+0x5429]        # 0x4089f0
  4035c7:	ret    
  4035c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4035d0:	mov    rax,rcx
  4035d3:	xchg   QWORD PTR [rip+0x5416],rax        # 0x4089f0
  4035da:	ret    
  4035db:	nop
  4035dc:	nop
  4035dd:	nop
  4035de:	nop
  4035df:	nop
  4035e0:	jmp    QWORD PTR [rip+0x5dba]        # 0x4093a0
  4035e6:	nop
  4035e7:	nop
  4035e8:	jmp    QWORD PTR [rip+0x5daa]        # 0x409398
  4035ee:	nop
  4035ef:	nop
  4035f0:	jmp    QWORD PTR [rip+0x5d9a]        # 0x409390
  4035f6:	nop
  4035f7:	nop
  4035f8:	jmp    QWORD PTR [rip+0x5d8a]        # 0x409388
  4035fe:	nop
  4035ff:	nop
  403600:	jmp    QWORD PTR [rip+0x5d7a]        # 0x409380
  403606:	nop
  403607:	nop
  403608:	jmp    QWORD PTR [rip+0x5d6a]        # 0x409378
  40360e:	nop
  40360f:	nop
  403610:	jmp    QWORD PTR [rip+0x5d5a]        # 0x409370
  403616:	nop
  403617:	nop
  403618:	jmp    QWORD PTR [rip+0x5d4a]        # 0x409368
  40361e:	nop
  40361f:	nop
  403620:	jmp    QWORD PTR [rip+0x5d3a]        # 0x409360
  403626:	nop
  403627:	nop
  403628:	jmp    QWORD PTR [rip+0x5d2a]        # 0x409358
  40362e:	nop
  40362f:	nop
  403630:	jmp    QWORD PTR [rip+0x5d1a]        # 0x409350
  403636:	nop
  403637:	nop
  403638:	jmp    QWORD PTR [rip+0x5d0a]        # 0x409348
  40363e:	nop
  40363f:	nop
  403640:	jmp    QWORD PTR [rip+0x5cfa]        # 0x409340
  403646:	nop
  403647:	nop
  403648:	jmp    QWORD PTR [rip+0x5cea]        # 0x409338
  40364e:	nop
  40364f:	nop
  403650:	jmp    QWORD PTR [rip+0x5cda]        # 0x409330
  403656:	nop
  403657:	nop
  403658:	jmp    QWORD PTR [rip+0x5cca]        # 0x409328
  40365e:	nop
  40365f:	nop
  403660:	jmp    QWORD PTR [rip+0x5cba]        # 0x409320
  403666:	nop
  403667:	nop
  403668:	jmp    QWORD PTR [rip+0x5caa]        # 0x409318
  40366e:	nop
  40366f:	nop
  403670:	jmp    QWORD PTR [rip+0x5c9a]        # 0x409310
  403676:	nop
  403677:	nop
  403678:	jmp    QWORD PTR [rip+0x5c8a]        # 0x409308
  40367e:	nop
  40367f:	nop
  403680:	jmp    QWORD PTR [rip+0x5c7a]        # 0x409300
  403686:	nop
  403687:	nop
  403688:	jmp    QWORD PTR [rip+0x5c6a]        # 0x4092f8
  40368e:	nop
  40368f:	nop
  403690:	jmp    QWORD PTR [rip+0x5c5a]        # 0x4092f0
  403696:	nop
  403697:	nop
  403698:	nop    DWORD PTR [rax+rax*1+0x0]
  4036a0:	push   rbp
  4036a1:	mov    rbp,rsp
  4036a4:	lea    rax,[rip+0x20e5]        # 0x405790
  4036ab:	pop    rbp
  4036ac:	ret    
  4036ad:	nop
  4036ae:	nop
  4036af:	nop
  4036b0:	push   rbp
  4036b1:	mov    rbp,rsp
  4036b4:	lea    rax,[rip+0x20e5]        # 0x4057a0
  4036bb:	pop    rbp
  4036bc:	ret    
  4036bd:	nop
  4036be:	nop
  4036bf:	nop
  4036c0:	push   rbp
  4036c1:	mov    rbp,rsp
  4036c4:	lea    rax,[rip+0x20e5]        # 0x4057b0
  4036cb:	pop    rbp
  4036cc:	ret    
  4036cd:	nop
  4036ce:	nop
  4036cf:	nop
  4036d0:	push   rbp
  4036d1:	mov    rbp,rsp
  4036d4:	mov    QWORD PTR [rbp+0x10],rcx
  4036d8:	mov    rax,QWORD PTR [rbp+0x10]
  4036dc:	pop    rbp
  4036dd:	ret    
  4036de:	nop
  4036df:	nop
  4036e0:	push   rbp
  4036e1:	mov    rbp,rsp
  4036e4:	mov    QWORD PTR [rbp+0x10],rcx
  4036e8:	mov    rax,QWORD PTR [rbp+0x10]
  4036ec:	pop    rbp
  4036ed:	ret    
  4036ee:	nop
  4036ef:	nop
  4036f0:	push   rbp
  4036f1:	mov    rbp,rsp
  4036f4:	mov    QWORD PTR [rbp+0x10],rcx
  4036f8:	mov    rax,QWORD PTR [rbp+0x10]
  4036fc:	pop    rbp
  4036fd:	ret    
  4036fe:	nop
  4036ff:	nop
  403700:	(bad)  
  403701:	(bad)  
  403702:	(bad)  
  403703:	(bad)  
  403704:	(bad)  
  403705:	(bad)  
  403706:	(bad)  
  403707:	jmp    FWORD PTR [rcx+0x401e]
	...
  403715:	add    BYTE PTR [rax],al
  403717:	add    bh,bh
  403719:	(bad)  
  40371a:	(bad)  
  40371b:	(bad)  
  40371c:	(bad)  
  40371d:	(bad)  
  40371e:	(bad)  
  40371f:	inc    DWORD PTR [rax]
  403721:	add    BYTE PTR [rax],al
  403723:	add    BYTE PTR [rax],al
  403725:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	and    BYTE PTR [rdi],dh
  404012:	add    BYTE PTR [rax],al
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    al,al
  404061:	xor    eax,0x40
  404066:	add    BYTE PTR [rax],al
  404068:	shl    BYTE PTR [rip+0x40],1        # 0x4040ae
  40406e:	add    BYTE PTR [rax],al
  404070:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	rex.RB jb 0x405075
  405003:	outs   dx,DWORD PTR ds:[rsi]
  405004:	jb     0x405040
  405006:	and    BYTE PTR [rax],al
  405008:	rex.RX (bad) 
  40500a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  405012:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  405019:	imul   esi,DWORD PTR [rbx+0x65],0x4d4f4320
	...
  405028:	rex.RX (bad) 
  40502a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  405032:	movsxd esi,DWORD PTR [rdx+0x65]
  405035:	(bad)  
  405036:	je     0x40509d
  405038:	and    BYTE PTR [rbx+0x68],dl
  40503b:	gs ins BYTE PTR es:[rdi],dx
  40503d:	ins    BYTE PTR es:[rdi],dx
  40503e:	imul   r13,QWORD PTR [rsi+0x6b],0x6a626f20
  405046:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
  40504b:	add    BYTE PTR [rax],al
  40504d:	add    BYTE PTR [rax],al
  40504f:	add    BYTE PTR [rsi+0x61],al
  405052:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40505a:	outs   dx,DWORD PTR ds:[rsi]
  40505b:	(bad)  
  40505c:	je     0x4050bf
  40505e:	imul   ebp,DWORD PTR [rsi+0x20],0x73726550
  405065:	imul   esi,DWORD PTR [rbx+0x74],0x656c6946
  40506c:	and    BYTE PTR [rcx+0x6e],ch
  40506f:	je     0x4050d6
  405071:	jb     0x4050d9
  405073:	(bad)  
  405074:	movsxd esp,DWORD PTR [rbp+0x0]
  405077:	rex.RX (bad) 
  405079:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  405081:	ins    BYTE PTR es:[rdi],dx
  405082:	outs   dx,DWORD PTR ds:[rsi]
  405083:	(bad)  
  405084:	and    BYTE PTR fs:[rbx+0x68],dh
  405088:	outs   dx,DWORD PTR ds:[rsi]
  405089:	jb     0x4050ff
  40508b:	movsxd esi,DWORD PTR [rbp+0x74]
  40508e:	and    BYTE PTR [rsi+0x69],ah
  405091:	ins    BYTE PTR es:[rdi],dx
  405092:	add    BYTE PTR gs:[rax],al
  405095:	add    BYTE PTR [rax],al
  405097:	add    BYTE PTR [rsi+0x61],al
  40509a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4050a2:	outs   dx,DWORD PTR ds:[rsi]
  4050a3:	(bad)  
  4050a4:	je     0x405107
  4050a6:	imul   ebp,DWORD PTR [rsi+0x20],0x706f7250
  4050ad:	gs jb  0x405124
  4050b0:	jns    0x405105
  4050b2:	je     0x405123
  4050b4:	jb     0x40511b
  4050b6:	and    BYTE PTR [rcx+0x6e],ch
  4050b9:	je     0x405120
  4050bb:	jb     0x405123
  4050bd:	(bad)  
  4050be:	movsxd esp,DWORD PTR [rbp+0x0]
  4050c1:	rex.RX (bad) 
  4050c3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4050cb:	jb     0x405132
  4050cd:	je     0x405141
  4050cf:	imul   esp,DWORD PTR [rbp+0x76],0x70412065
  4050d6:	jo     0x405121
  4050d8:	add    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  4050dd:	cmp    ah,BYTE PTR gs:[rax]
	...
  4050e8:	push   rbp
  4050e9:	outs   dx,BYTE PTR ds:[rsi]
  4050ea:	gs js  0x40515d
  4050ed:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4050f2:	and    BYTE PTR [rax+0x72],dh
  4050f5:	outs   dx,DWORD PTR ds:[rsi]
  4050f6:	jo     0x40515d
  4050f8:	jb     0x40516e
  4050fa:	jns    0x40511c
  4050fc:	jbe    0x40515f
  4050fe:	ins    BYTE PTR es:[rdi],dx
  4050ff:	jne    0x405166
  405101:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  405105:	add    BYTE PTR gs:[rbx+0x75],al
  405109:	jb     0x40517d
  40510b:	outs   dx,BYTE PTR gs:[rsi]
  40510d:	je     0x40512f
  40510f:	rex.B jo 0x405182
  405112:	rex.WB
  405113:	cmp    ah,BYTE PTR fs:[rax]
  405116:	add    BYTE PTR [rsi+0x6f],cl
  405119:	and    BYTE PTR [rbx+0x75],ah
  40511c:	jb     0x405190
  40511e:	outs   dx,BYTE PTR gs:[rsi]
  405120:	je     0x405142
  405122:	rex.B jo 0x405195
  405125:	rex.WB
  405126:	add    BYTE PTR fs:[rsi+0x65],cl
  40512a:	ja     0x40514c
  40512c:	rex.B jo 0x40519f
  40512f:	rex.WB
  405130:	cmp    ah,BYTE PTR fs:[rax]
  405133:	add    BYTE PTR [rsi+0x61],al
  405136:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40513e:	jae    0x4051a5
  405140:	je     0x405162
  405142:	rex.B jo 0x4051b5
  405145:	rex.WB
  405146:	add    BYTE PTR fs:[rsi+0x61],al
  40514a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  405152:	movsxd ebp,DWORD PTR [rdi+0x6d]
  405155:	ins    DWORD PTR es:[rdi],dx
  405156:	imul   esi,DWORD PTR [rax+riz*1+0x41],0x64497070
  40515e:	and    BYTE PTR [rax+0x72],dh
  405161:	outs   dx,DWORD PTR ds:[rsi]
  405162:	jo     0x4051c9
  405164:	jb     0x4051da
  405166:	jns    0x405168
  405168:	rex.RX (bad) 
  40516a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  405172:	jae    0x4051d5
  405174:	jbe    0x4051db
  405176:	and    BYTE PTR [rbx+0x68],dh
  405179:	outs   dx,DWORD PTR ds:[rsi]
  40517a:	jb     0x4051f0
  40517c:	movsxd esi,DWORD PTR [rbp+0x74]
  40517f:	add    BYTE PTR [rax+0x4085],al
  405185:	add    BYTE PTR [rax],al
  405187:	add    BYTE PTR [rax+0x4080],al
  40518d:	add    BYTE PTR [rax],al
  40518f:	add    BYTE PTR [rax],dh
  405191:	and    eax,DWORD PTR [rax+0x0]
	...
  4051a0:	rex.B jb 0x40520a
  4051a3:	jne    0x405212
  4051a5:	outs   dx,BYTE PTR gs:[rsi]
  4051a7:	je     0x4051c9
  4051a9:	outs   dx,DWORD PTR fs:[rsi]
  4051ab:	ins    DWORD PTR es:[rdi],dx
  4051ac:	(bad)  
  4051ad:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4051b4:	jb     0x4051d6
  4051b6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4051ba:	rex.B
  4051bb:	rex.WB
  4051bc:	rex.WRX sub QWORD PTR [rax],r8
  4051bf:	rex.B jb 0x405229
  4051c2:	jne    0x405231
  4051c4:	outs   dx,BYTE PTR gs:[rsi]
  4051c6:	je     0x4051e8
  4051c8:	jae    0x405233
  4051ca:	outs   dx,BYTE PTR ds:[rsi]
  4051cb:	addr32 jne 0x40523a
  4051ce:	(bad)  
  4051cf:	jb     0x40523a
  4051d1:	je     0x40524c
  4051d3:	and    BYTE PTR [rax],ch
  4051d5:	push   rbx
  4051d6:	rex.WB
  4051d7:	rex.RXB
  4051d8:	rex.WRX sub QWORD PTR [rax],r8
  4051db:	add    BYTE PTR [rax],al
  4051dd:	add    BYTE PTR [rax],al
  4051df:	add    BYTE PTR [rdi+0x76],cl
  4051e2:	gs jb  0x40524b
  4051e5:	ins    BYTE PTR es:[rdi],dx
  4051e6:	outs   dx,DWORD PTR ds:[rsi]
  4051e7:	ja     0x405209
  4051e9:	jb     0x40524c
  4051eb:	outs   dx,BYTE PTR ds:[rsi]
  4051ec:	and    BYTE PTR gs:[ebp+0x72],ah
  4051f1:	jb     0x405262
  4051f3:	jb     0x405215
  4051f5:	sub    BYTE PTR [rdi+0x56],cl
  4051f8:	rex.RB push r10
  4051fa:	rex.RX
  4051fb:	rex.WR
  4051fc:	rex.WRXB push r15
  4051fe:	sub    DWORD PTR [rax],eax
  405200:	push   rax
  405201:	(bad)  
  405202:	jb     0x405278
  405204:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40520b:	jae    0x40522d
  40520d:	outs   dx,DWORD PTR ds:[rsi]
  40520e:	data16 and BYTE PTR [rbx+0x69],dh
  405212:	outs   dx,BYTE PTR ds:[esi]
  405214:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40521b:	and    BYTE PTR gs:[rax],ch
  40521e:	push   rax
  40521f:	rex.WR
  405220:	rex.WRXB push r11
  405222:	push   rbx
  405223:	sub    DWORD PTR [rax],eax
  405225:	add    BYTE PTR [rax],al
  405227:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40522b:	(bad)  
  40522c:	ins    BYTE PTR es:[rdi],dx
  40522d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405231:	jae    0x405253
  405233:	outs   dx,DWORD PTR ds:[rsi]
  405234:	data16 and BYTE PTR [rbx+0x69],dh
  405238:	outs   dx,BYTE PTR ds:[esi]
  40523a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405241:	and    BYTE PTR gs:[rax],ch
  405244:	push   rsp
  405245:	rex.WR
  405246:	rex.WRXB push r11
  405248:	push   rbx
  405249:	sub    DWORD PTR [rax],eax
  40524b:	add    BYTE PTR [rax],al
  40524d:	add    BYTE PTR [rax],al
  40524f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405253:	and    BYTE PTR [rdx+0x65],dh
  405256:	jae    0x4052cd
  405258:	ins    BYTE PTR es:[rdi],dx
  405259:	je     0x40527b
  40525b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405262:	jae    0x4052d1
  405264:	(bad)  
  405265:	ins    BYTE PTR es:[rdi],dx
  405266:	ins    BYTE PTR es:[rdi],dx
  405267:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40526b:	(bad)  
  40526c:	and    BYTE PTR gs:[rdx+0x65],dh
  405270:	jo     0x4052e4
  405272:	gs jae 0x4052da
  405275:	outs   dx,BYTE PTR ds:[rsi]
  405276:	je     0x4052dd
  405278:	and    BYTE PTR fs:[rax],ch
  40527b:	push   rbp
  40527c:	rex.WRX
  40527d:	rex.R
  40527e:	rex.RB push r10
  405280:	rex.RX
  405281:	rex.WR
  405282:	rex.WRXB push r15
  405284:	sub    DWORD PTR [rax],eax
  405286:	push   rbp
  405287:	outs   dx,BYTE PTR ds:[rsi]
  405288:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40528c:	outs   dx,BYTE PTR ds:[rsi]
  40528d:	and    BYTE PTR [rbp+0x72],ah
  405290:	jb     0x405301
  405292:	jb     0x405294
  405294:	add    BYTE PTR [rax],al
  405296:	add    BYTE PTR [rax],al
  405298:	pop    rdi
  405299:	ins    DWORD PTR es:[rdi],dx
  40529a:	(bad)  
  40529b:	je     0x405305
  40529d:	gs jb  0x405312
  4052a0:	sub    BYTE PTR [rcx],ch
  4052a2:	cmp    ah,BYTE PTR [rax]
  4052a4:	and    eax,0x6e692073
  4052a9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657b22
  4052af:	sub    al,0x20
  4052b1:	and    eax,0x20202967
  4052b6:	sub    BYTE PTR [rdx+0x65],dh
  4052b9:	je     0x405331
  4052bb:	(bad)  
  4052bc:	ins    BYTE PTR es:[rdi],dx
  4052bd:	cmp    eax,0xa296725
  4052c2:	add    BYTE PTR [rax],al
  4052c4:	cmp    al,0xd2
  4052c6:	(bad)  
  4052c7:	(bad)  
  4052c8:	jge    0x40529b
  4052ca:	(bad)  
  4052cb:	(bad)  
  4052cc:	in     al,dx
  4052cd:	sar    edi,1
  4052cf:	(bad)  
  4052d0:	cld    
  4052d1:	sar    edi,1
  4052d3:	dec    DWORD PTR [rdx+rdx*8]
  4052d6:	(bad)  
  4052d7:	call   FWORD PTR [rdx+rdx*8]
  4052da:	(bad)  
  4052db:	jmp    FWORD PTR [rdx+rdx*8]
  4052de:	(bad)  
  4052df:	dec    DWORD PTR [rbp+0x69]
  4052e2:	outs   dx,BYTE PTR ds:[rsi]
  4052e3:	addr32 ja 0x405313
  4052e6:	ja     0x40531e
  4052e8:	xor    al,0x20
  4052ea:	jb     0x405361
  4052ec:	outs   dx,BYTE PTR ds:[rsi]
  4052ed:	je     0x405358
  4052ef:	ins    DWORD PTR es:[rdi],dx
  4052f0:	and    BYTE PTR gs:[rsi+0x61],ah
  4052f4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4052fc:	add    BYTE PTR [rax],al
  4052fe:	add    BYTE PTR [rax],al
  405300:	rex.B
  405301:	fs fs jb 0x40536a
  405305:	jae    0x40537a
  405307:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8737d
  40530d:	jae    0x40532f
  40530f:	outs   dx,BYTE PTR ds:[rsi]
  405310:	outs   dx,DWORD PTR ds:[rsi]
  405311:	and    BYTE PTR [rcx+0x6d],ch
  405314:	(bad)  
  405315:	addr32 gs sub eax,0x74636573
  40531c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405323:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40532a:	jne    0x405391
  40532c:	jb     0x4053a7
  40532e:	and    BYTE PTR [rsi+0x61],ah
  405331:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405339:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a273a3
  40533f:	je     0x4053a6
  405341:	jae    0x405363
  405343:	(bad)  
  405344:	je     0x405366
  405346:	(bad)  
  405347:	fs fs jb 0x4053b0
  40534b:	jae    0x4053c0
  40534d:	and    BYTE PTR [rip+0x70],ah        # 0x4053c3
  405353:	add    BYTE PTR [rax],al
  405355:	add    BYTE PTR [rax],al
  405357:	add    BYTE PTR [rax],ah
  405359:	and    BYTE PTR [rsi+0x69],dl
  40535c:	jb     0x4053d2
  40535e:	jne    0x4053c1
  405360:	ins    BYTE PTR es:[rdi],dx
  405361:	push   rax
  405362:	jb     0x4053d3
  405364:	je     0x4053cb
  405366:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40536a:	(bad)  
  40536b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405373:	push   0x646f6320
  405378:	and    BYTE PTR gs:[rax],dh
  40537b:	js     0x4053a2
  40537d:	js     0x40537f
  40537f:	add    BYTE PTR [rax],ah
  405381:	and    BYTE PTR [rbp+0x6e],dl
  405384:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405388:	outs   dx,BYTE PTR ds:[rsi]
  405389:	and    BYTE PTR [rax+0x73],dh
  40538c:	gs jne 0x4053f3
  40538f:	outs   dx,DWORD PTR ds:[rsi]
  405390:	and    BYTE PTR [rdx+0x65],dh
  405393:	ins    BYTE PTR es:[rdi],dx
  405394:	outs   dx,DWORD PTR ds:[rsi]
  405395:	movsxd esp,DWORD PTR [rcx+0x74]
  405398:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40539f:	je     0x405410
  4053a1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4053a4:	and    BYTE PTR [rsi+0x65],dh
  4053a7:	jb     0x40541c
  4053a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4053b0:	or     al,BYTE PTR [rax]
  4053b2:	add    BYTE PTR [rax],al
  4053b4:	add    BYTE PTR [rax],al
  4053b6:	add    BYTE PTR [rax],al
  4053b8:	and    BYTE PTR [rax],ah
  4053ba:	push   rbp
  4053bb:	outs   dx,BYTE PTR ds:[rsi]
  4053bc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4053c0:	outs   dx,BYTE PTR ds:[rsi]
  4053c1:	and    BYTE PTR [rax+0x73],dh
  4053c4:	gs jne 0x40542b
  4053c7:	outs   dx,DWORD PTR ds:[rsi]
  4053c8:	and    BYTE PTR [rdx+0x65],dh
  4053cb:	ins    BYTE PTR es:[rdi],dx
  4053cc:	outs   dx,DWORD PTR ds:[rsi]
  4053cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4053d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4053d7:	and    BYTE PTR [rbx+0x69],dh
  4053da:	jp     0x405441
  4053dc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8246
	...
  4053ee:	add    BYTE PTR [rax],al
  4053f0:	cs jo  0x405457
  4053f3:	(bad)  
  4053f4:	je     0x405457
	...
  4053fe:	add    BYTE PTR [rax],al
  405400:	xor    BYTE PTR [rdi],ah
	...
  40540e:	add    BYTE PTR [rax],al
  405410:	adc    BYTE PTR [rsi+0x40],0x0
	...
  405420:	rex
  405421:	rex
  405422:	add    BYTE PTR [rax],al
	...
  40542d:	add    BYTE PTR [rax],al
  40542f:	add    BYTE PTR [rax+0x40],dl
  405432:	add    BYTE PTR [rax],al
	...
  40543d:	add    BYTE PTR [rax],al
  40543f:	add    BYTE PTR [rax],ah
  405441:	xchg   ebp,eax
  405442:	add    BYTE PTR [rax],al
	...
  40544d:	add    BYTE PTR [rax],al
  40544f:	add    BYTE PTR [rax],bl
  405451:	(bad)  
  405452:	add    BYTE PTR [rax],al
	...
  40545d:	add    BYTE PTR [rax],al
  40545f:	add    BYTE PTR [rax],dl
  405461:	(bad)  
  405462:	add    BYTE PTR [rax],al
	...
  40546d:	add    BYTE PTR [rax],al
  40546f:	add    BYTE PTR [rax],bh
  405471:	xchg   ebp,eax
  405472:	add    BYTE PTR [rax],al
	...
  405481:	(bad)  
  405482:	add    BYTE PTR [rax],al
	...
  40548d:	add    BYTE PTR [rax],al
  40548f:	add    BYTE PTR [rbx+rbx*2+0x40],ah
	...
  40549f:	add    BYTE PTR [rax+0x5b],al
  4054a2:	add    BYTE PTR [rax],al
	...
  4054ad:	add    BYTE PTR [rax],al
  4054af:	add    BYTE PTR [rax+0x4051],dl
	...
  4054c1:	add    BYTE PTR [rax+0x0],al
	...
  4054d0:	call   0x409568
	...
  4054e1:	xchg   esp,eax
  4054e2:	add    BYTE PTR [rax],al
	...
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    BYTE PTR [rax],bl
  4054f1:	xchg   esp,eax
  4054f2:	add    BYTE PTR [rax],al
	...
  4054fd:	add    BYTE PTR [rax],al
  4054ff:	add    BYTE PTR [rax],ch
  405501:	xchg   esp,eax
  405502:	add    BYTE PTR [rax],al
	...
  40550d:	add    BYTE PTR [rax],al
  40550f:	add    al,al
  405511:	xchg   BYTE PTR [rax+0x0],al
	...
  405520:	sub    BYTE PTR [rdx+0x40],cl
	...
  40552e:	add    BYTE PTR [rax],al
  405530:	and    BYTE PTR [rdx+0x40],cl
	...
  40553e:	add    BYTE PTR [rax],al
  405540:	adc    BYTE PTR [rdx+0x40],cl
	...
  40554e:	add    BYTE PTR [rax],al
  405550:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40555e:	add    BYTE PTR [rax],al
  405560:	add    BYTE PTR [rax+0x40],ah
	...
  40556e:	add    BYTE PTR [rax],al
  405570:	adc    BYTE PTR [rax+0x40],ah
	...
  40557e:	add    BYTE PTR [rax],al
  405580:	sbb    BYTE PTR [rax+0x40],ah
	...
  40558e:	add    BYTE PTR [rax],al
  405590:	xor    BYTE PTR [rax+0x40],ah
	...
  40559e:	add    BYTE PTR [rax],al
  4055a0:	push   rax
  4055a1:	add    BYTE PTR [rax+0x0],0x0
	...
  4055ad:	add    BYTE PTR [rax],al
  4055af:	add    BYTE PTR [rax+0x4086],dl
	...
  4055bd:	add    BYTE PTR [rax],al
  4055bf:	add    al,dl
  4055c1:	sub    al,0x40
	...
  4055cf:	add    BYTE PTR [rax],dl
  4055d1:	and    al,0x40
	...
  4055df:	add    BYTE PTR [rax-0x7a],al
  4055e2:	add    BYTE PTR [rax],al
	...
  4055ed:	add    BYTE PTR [rax],al
  4055ef:	add    BYTE PTR [rax-0x7a],dh
  4055f2:	add    BYTE PTR [rax],al
	...
  4055fd:	add    BYTE PTR [rax],al
  4055ff:	add    BYTE PTR [rax-0x80],ah
  405602:	add    BYTE PTR [rax],al
	...
  40560d:	add    BYTE PTR [rax],al
  40560f:	add    BYTE PTR [rax-0x7a],bl
  405612:	add    BYTE PTR [rax],al
	...
  40561d:	add    BYTE PTR [rax],al
  40561f:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  40562f:	add    BYTE PTR [rax-0x7a],dl
  405632:	add    BYTE PTR [rax],al
	...
  40563d:	add    BYTE PTR [rax],al
  40563f:	add    BYTE PTR [rbp+0x10],ch
  405642:	push   0xffffffffcff3b519
  405647:	mov    DWORD PTR [rsi],r9d
  40564a:	adc    DWORD PTR [rdi-0x35],ebp
  40564d:	sahf   
  40564e:	(bad)  
  40564f:	icebp  
  405650:	add    edi,ebx
  405652:	add    al,BYTE PTR [rax]
  405654:	add    BYTE PTR [rax],al
  405656:	add    BYTE PTR [rax],al
  405658:	rol    BYTE PTR [rax],0x0
  40565b:	add    BYTE PTR [rax],al
  40565d:	add    BYTE PTR [rax],al
  40565f:	rex.RX (bad) 
  405661:	sub    dh,BYTE PTR [rdx-0x30cf3e16]
  405667:	adc    DWORD PTR [rdi-0x3fffff15],esp
  40566d:	pop    rbx
  40566e:	scas   al,BYTE PTR es:[rdi]
  40566f:	or     eax,ebx
  405671:	sub    dh,BYTE PTR [rdx-0x30cf3e16]
  405677:	adc    DWORD PTR [rdi-0x3fffff15],esp
  40567d:	pop    rbx
  40567e:	scas   al,BYTE PTR es:[rdi]
  40567f:	or     eax,DWORD PTR [rcx]
  405681:	adc    al,0x2
  405683:	add    BYTE PTR [rax],al
  405685:	add    BYTE PTR [rax],al
  405687:	add    al,al
  405689:	add    BYTE PTR [rax],al
  40568b:	add    BYTE PTR [rax],al
  40568d:	add    BYTE PTR [rax],al
  40568f:	rex.RX or edi,r11d
  405692:	add    al,BYTE PTR [rax]
  405694:	add    BYTE PTR [rax],al
  405696:	add    BYTE PTR [rax],al
  405698:	rol    BYTE PTR [rax],0x0
  40569b:	add    BYTE PTR [rax],al
  40569d:	add    BYTE PTR [rax],al
  40569f:	rex.RX
  4056a0:	rex.R
  4056a1:	repz std 
  4056a3:	push   rsi
  4056a4:	ins    DWORD PTR es:[rdi],dx
  4056a5:	std    
  4056a6:	rcl    BYTE PTR [rcx],1
  4056a8:	xchg   ebp,eax
  4056a9:	mov    al,BYTE PTR [rax]
  4056ab:	(bad)  
  4056ac:	xchg   edi,eax
  4056ad:	leave  
  4056ae:	movabs al,ds:0x2df0690
  4056b7:	add    al,al
  4056b9:	add    BYTE PTR [rax],al
  4056bb:	add    BYTE PTR [rax],al
  4056bd:	add    BYTE PTR [rax],al
  4056bf:	(bad)
  4056c3:	(bad)  
  4056c4:	shl    DWORD PTR [rax],0xcf
  4056c7:	adc    DWORD PTR [rdi-0x3fffff15],esp
  4056cd:	pop    rbx
  4056ce:	scas   al,BYTE PTR es:[rdi]
  4056cf:	or     eax,edx
  4056d1:	sub    dh,BYTE PTR [rdx-0x30cf3e16]
  4056d7:	adc    DWORD PTR [rdi-0x3fffff15],esp
  4056dd:	pop    rbx
  4056de:	scas   al,BYTE PTR es:[rdi]
  4056df:	or     eax,DWORD PTR [rdi]
  4056e1:	fild   WORD PTR [rdx]
  4056e3:	add    BYTE PTR [rax],al
  4056e5:	add    BYTE PTR [rax],al
  4056e7:	add    al,al
  4056e9:	add    BYTE PTR [rax],al
  4056eb:	add    BYTE PTR [rax],al
  4056ed:	add    BYTE PTR [rax],al
  4056ef:	rex.RX add eax,0x2df
  4056f5:	add    BYTE PTR [rax],al
  4056f7:	add    al,al
  4056f9:	add    BYTE PTR [rax],al
  4056fb:	add    BYTE PTR [rax],al
  4056fd:	add    BYTE PTR [rax],al
  4056ff:	rex.RX imul r12d,DWORD PTR [rcx-0x66be08a],0xc88f40ac
  40570a:	or     DWORD PTR [rcx-0x18],ebx
  40570d:	xchg   DWORD PTR [rdi+0x10],eax
  405710:	(bad)  
  405711:	(bad)  
  405712:	mov    ebx,0xd06a7700
  405717:	adc    DWORD PTR [rbp+0x4fc00035],esp
  40571d:	xlat   BYTE PTR ds:[rbx]
  40571e:	shl    BYTE PTR [rdx-0x40],1
  405721:	rex.WXB shr r10b,0x91
  405725:	(bad)  
  405726:	rcl    BYTE PTR [rcx],cl
  405728:	mov    ebx,0x97600095
  40572d:	jnp    0x405775
  40572f:	rex.WR (bad) 
  405731:	sub    dh,BYTE PTR [rdx-0x30cf3e16]
  405737:	adc    DWORD PTR [rdi-0x3fffff15],esp
  40573d:	pop    rbx
  40573e:	scas   al,BYTE PTR es:[rdi]
  40573f:	or     eax,ecx
  405741:	sub    dh,BYTE PTR [rdx-0x30cf3e16]
  405747:	adc    DWORD PTR [rdi-0x3fffff15],esp
  40574d:	pop    rbx
  40574e:	scas   al,BYTE PTR es:[rdi]
  40574f:	or     edx,DWORD PTR [rcx+0x28ea1afb]
  405755:	sahf   
  405756:	xchg   BYTE PTR [rbx-0x70],cl
  405759:	jmp    0x5ecaf6fc
  40575e:	out    dx,eax
  40575f:	scas   eax,DWORD PTR es:[rdi]
  405760:	shr    BYTE PTR [rdx],0xb2
  405763:	(bad)  
  405764:	shl    DWORD PTR [rax],0xcf
  405767:	adc    DWORD PTR [rdi-0x3fffff15],esp
  40576d:	pop    rbx
  40576e:	scas   al,BYTE PTR es:[rdi]
  40576f:	or     edx,DWORD PTR [rbp+0x28]
  405772:	rex.WR lahf 
  405774:	jns    0x405715
  405776:	cmp    DWORD PTR [rbx-0x58],ecx
  405779:	shl    cl,1
  40577b:	(bad)  
  40577c:	sub    eax,0x5f3d5e1
	...
  40578d:	add    BYTE PTR [rax],al
  40578f:	add    cl,bh
  405791:	adc    al,0x2
  405793:	add    BYTE PTR [rax],al
  405795:	add    BYTE PTR [rax],al
  405797:	add    al,al
  405799:	add    BYTE PTR [rax],al
  40579b:	add    BYTE PTR [rax],al
  40579d:	add    BYTE PTR [rax],al
  40579f:	rex.RX or r8d,DWORD PTR [rcx]
  4057a2:	add    BYTE PTR [rax],al
  4057a4:	add    BYTE PTR [rax],al
  4057a6:	add    BYTE PTR [rax],al
  4057a8:	rol    BYTE PTR [rax],0x0
  4057ab:	add    BYTE PTR [rax],al
  4057ad:	add    BYTE PTR [rax],al
  4057af:	rex.RX jmp 0x405740
  4057b2:	ins    DWORD PTR es:[rdi],dx
  4057b3:	mov    dl,dh
  4057b5:	mov    WORD PTR [rsi+0x44],es
  4057b8:	lea    eax,[rdx]
  4057ba:	int    0xba
  4057bc:	sbb    eax,0x4799cfbd
  4057c1:	rex.XB
  4057c2:	rex.XB cmp spl,BYTE PTR [r8]
  4057c5:	sub    BYTE PTR [rdi+0x4e],al
  4057c8:	push   rbp
  4057c9:	sub    DWORD PTR [rax],esp
  4057cb:	xor    al,0x2e
  4057cd:	cmp    DWORD PTR [rsi],ebp
  4057cf:	xor    al,0x0
	...
  4057dd:	add    BYTE PTR [rax],al
  4057df:	add    BYTE PTR [rdi+0x43],al
  4057e2:	rex.XB cmp spl,BYTE PTR [r8]
  4057e5:	sub    BYTE PTR [rdi+0x4e],al
  4057e8:	push   rbp
  4057e9:	sub    DWORD PTR [rax],esp
  4057eb:	xor    al,0x2e
  4057ed:	cmp    DWORD PTR [rsi],ebp
  4057ef:	xor    al,0x0
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    BYTE PTR [rdi+0x43],al
  405802:	rex.XB cmp spl,BYTE PTR [r8]
  405805:	sub    BYTE PTR [rdi+0x4e],al
  405808:	push   rbp
  405809:	sub    DWORD PTR [rax],esp
  40580b:	xor    al,0x2e
  40580d:	cmp    DWORD PTR [rsi],ebp
  40580f:	xor    al,0x0
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rdi+0x43],al
  405822:	rex.XB cmp spl,BYTE PTR [r8]
  405825:	sub    BYTE PTR [rdi+0x4e],al
  405828:	push   rbp
  405829:	sub    DWORD PTR [rax],esp
  40582b:	xor    al,0x2e
  40582d:	cmp    DWORD PTR [rsi],ebp
  40582f:	xor    al,0x0
	...
  40583d:	add    BYTE PTR [rax],al
  40583f:	add    BYTE PTR [rdi+0x43],al
  405842:	rex.XB cmp spl,BYTE PTR [r8]
  405845:	sub    BYTE PTR [rdi+0x4e],al
  405848:	push   rbp
  405849:	sub    DWORD PTR [rax],esp
  40584b:	xor    al,0x2e
  40584d:	cmp    DWORD PTR [rsi],ebp
  40584f:	xor    al,0x0
	...
  40585d:	add    BYTE PTR [rax],al
  40585f:	add    BYTE PTR [rdi+0x43],al
  405862:	rex.XB cmp spl,BYTE PTR [r8]
  405865:	sub    BYTE PTR [rdi+0x4e],al
  405868:	push   rbp
  405869:	sub    DWORD PTR [rax],esp
  40586b:	xor    al,0x2e
  40586d:	cmp    DWORD PTR [rsi],ebp
  40586f:	xor    al,0x0
	...
  40587d:	add    BYTE PTR [rax],al
  40587f:	add    BYTE PTR [rdi+0x43],al
  405882:	rex.XB cmp spl,BYTE PTR [r8]
  405885:	sub    BYTE PTR [rdi+0x4e],al
  405888:	push   rbp
  405889:	sub    DWORD PTR [rax],esp
  40588b:	xor    al,0x2e
  40588d:	cmp    DWORD PTR [rsi],ebp
  40588f:	xor    al,0x0
	...
  40589d:	add    BYTE PTR [rax],al
  40589f:	add    BYTE PTR [rdi+0x43],al
  4058a2:	rex.XB cmp spl,BYTE PTR [r8]
  4058a5:	sub    BYTE PTR [rdi+0x4e],al
  4058a8:	push   rbp
  4058a9:	sub    DWORD PTR [rax],esp
  4058ab:	xor    al,0x2e
  4058ad:	cmp    DWORD PTR [rsi],ebp
  4058af:	xor    al,0x0
	...
  4058bd:	add    BYTE PTR [rax],al
  4058bf:	add    BYTE PTR [rdi+0x43],al
  4058c2:	rex.XB cmp spl,BYTE PTR [r8]
  4058c5:	sub    BYTE PTR [rdi+0x4e],al
  4058c8:	push   rbp
  4058c9:	sub    DWORD PTR [rax],esp
  4058cb:	xor    al,0x2e
  4058cd:	cmp    DWORD PTR [rsi],ebp
  4058cf:	xor    al,0x0
	...
  4058dd:	add    BYTE PTR [rax],al
  4058df:	add    BYTE PTR [rdi+0x43],al
  4058e2:	rex.XB cmp spl,BYTE PTR [r8]
  4058e5:	sub    BYTE PTR [rdi+0x4e],al
  4058e8:	push   rbp
  4058e9:	sub    DWORD PTR [rax],esp
  4058eb:	xor    al,0x2e
  4058ed:	cmp    DWORD PTR [rsi],ebp
  4058ef:	xor    al,0x0
	...
  4058fd:	add    BYTE PTR [rax],al
  4058ff:	add    BYTE PTR [rdi+0x43],al
  405902:	rex.XB cmp spl,BYTE PTR [r8]
  405905:	sub    BYTE PTR [rdi+0x4e],al
  405908:	push   rbp
  405909:	sub    DWORD PTR [rax],esp
  40590b:	xor    al,0x2e
  40590d:	cmp    DWORD PTR [rsi],ebp
  40590f:	xor    al,0x0
	...
  40591d:	add    BYTE PTR [rax],al
  40591f:	add    BYTE PTR [rdi+0x43],al
  405922:	rex.XB cmp spl,BYTE PTR [r8]
  405925:	sub    BYTE PTR [rdi+0x4e],al
  405928:	push   rbp
  405929:	sub    DWORD PTR [rax],esp
  40592b:	xor    al,0x2e
  40592d:	cmp    DWORD PTR [rsi],ebp
  40592f:	xor    al,0x0
	...
  40593d:	add    BYTE PTR [rax],al
  40593f:	add    BYTE PTR [rdi+0x43],al
  405942:	rex.XB cmp spl,BYTE PTR [r8]
  405945:	sub    BYTE PTR [rdi+0x4e],al
  405948:	push   rbp
  405949:	sub    DWORD PTR [rax],esp
  40594b:	xor    al,0x2e
  40594d:	cmp    DWORD PTR [rsi],ebp
  40594f:	xor    al,0x0
	...
  40595d:	add    BYTE PTR [rax],al
  40595f:	add    BYTE PTR [rdi+0x43],al
  405962:	rex.XB cmp spl,BYTE PTR [r8]
  405965:	sub    BYTE PTR [rdi+0x4e],al
  405968:	push   rbp
  405969:	sub    DWORD PTR [rax],esp
  40596b:	xor    al,0x2e
  40596d:	cmp    DWORD PTR [rsi],ebp
  40596f:	xor    al,0x0
	...
  40597d:	add    BYTE PTR [rax],al
  40597f:	add    BYTE PTR [rdi+0x43],al
  405982:	rex.XB cmp spl,BYTE PTR [r8]
  405985:	sub    BYTE PTR [rdi+0x4e],al
  405988:	push   rbp
  405989:	sub    DWORD PTR [rax],esp
  40598b:	xor    al,0x2e
  40598d:	cmp    DWORD PTR [rsi],ebp
  40598f:	xor    al,0x0
	...
  40599d:	add    BYTE PTR [rax],al
  40599f:	add    BYTE PTR [rdi+0x43],al
  4059a2:	rex.XB cmp spl,BYTE PTR [r8]
  4059a5:	sub    BYTE PTR [rdi+0x4e],al
  4059a8:	push   rbp
  4059a9:	sub    DWORD PTR [rax],esp
  4059ab:	xor    al,0x2e
  4059ad:	cmp    DWORD PTR [rsi],ebp
  4059af:	xor    al,0x0
	...
  4059bd:	add    BYTE PTR [rax],al
  4059bf:	add    BYTE PTR [rdi+0x43],al
  4059c2:	rex.XB cmp spl,BYTE PTR [r8]
  4059c5:	sub    BYTE PTR [rdi+0x4e],al
  4059c8:	push   rbp
  4059c9:	sub    DWORD PTR [rax],esp
  4059cb:	xor    al,0x2e
  4059cd:	cmp    DWORD PTR [rsi],ebp
  4059cf:	xor    al,0x0
	...
  4059dd:	add    BYTE PTR [rax],al
  4059df:	add    BYTE PTR [rdi+0x43],al
  4059e2:	rex.XB cmp spl,BYTE PTR [r8]
  4059e5:	sub    BYTE PTR [rdi+0x4e],al
  4059e8:	push   rbp
  4059e9:	sub    DWORD PTR [rax],esp
  4059eb:	xor    al,0x2e
  4059ed:	cmp    DWORD PTR [rsi],ebp
  4059ef:	xor    al,0x0
	...
  4059fd:	add    BYTE PTR [rax],al
  4059ff:	add    BYTE PTR [rdi+0x43],al
  405a02:	rex.XB cmp spl,BYTE PTR [r8]
  405a05:	sub    BYTE PTR [rdi+0x4e],al
  405a08:	push   rbp
  405a09:	sub    DWORD PTR [rax],esp
  405a0b:	xor    al,0x2e
  405a0d:	cmp    DWORD PTR [rsi],ebp
  405a0f:	xor    al,0x0
	...
  405a1d:	add    BYTE PTR [rax],al
  405a1f:	add    BYTE PTR [rdi+0x43],al
  405a22:	rex.XB cmp spl,BYTE PTR [r8]
  405a25:	sub    BYTE PTR [rdi+0x4e],al
  405a28:	push   rbp
  405a29:	sub    DWORD PTR [rax],esp
  405a2b:	xor    al,0x2e
  405a2d:	cmp    DWORD PTR [rsi],ebp
  405a2f:	xor    al,0x0
	...
  405a3d:	add    BYTE PTR [rax],al
  405a3f:	add    BYTE PTR [rdi+0x43],al
  405a42:	rex.XB cmp spl,BYTE PTR [r8]
  405a45:	sub    BYTE PTR [rdi+0x4e],al
  405a48:	push   rbp
  405a49:	sub    DWORD PTR [rax],esp
  405a4b:	xor    al,0x2e
  405a4d:	cmp    DWORD PTR [rsi],ebp
  405a4f:	xor    al,0x0
	...
  405a5d:	add    BYTE PTR [rax],al
  405a5f:	add    BYTE PTR [rdi+0x43],al
  405a62:	rex.XB cmp spl,BYTE PTR [r8]
  405a65:	sub    BYTE PTR [rdi+0x4e],al
  405a68:	push   rbp
  405a69:	sub    DWORD PTR [rax],esp
  405a6b:	xor    al,0x2e
  405a6d:	cmp    DWORD PTR [rsi],ebp
  405a6f:	xor    al,0x0
	...
  405a7d:	add    BYTE PTR [rax],al
  405a7f:	add    BYTE PTR [rdi+0x43],al
  405a82:	rex.XB cmp spl,BYTE PTR [r8]
  405a85:	sub    BYTE PTR [rdi+0x4e],al
  405a88:	push   rbp
  405a89:	sub    DWORD PTR [rax],esp
  405a8b:	xor    al,0x2e
  405a8d:	cmp    DWORD PTR [rsi],ebp
  405a8f:	xor    al,0x0
	...
  405a9d:	add    BYTE PTR [rax],al
  405a9f:	add    BYTE PTR [rdi+0x43],al
  405aa2:	rex.XB cmp spl,BYTE PTR [r8]
  405aa5:	sub    BYTE PTR [rdi+0x4e],al
  405aa8:	push   rbp
  405aa9:	sub    DWORD PTR [rax],esp
  405aab:	xor    al,0x2e
  405aad:	cmp    DWORD PTR [rsi],ebp
  405aaf:	xor    al,0x0
	...
  405abd:	add    BYTE PTR [rax],al
  405abf:	add    BYTE PTR [rdi+0x43],al
  405ac2:	rex.XB cmp spl,BYTE PTR [r8]
  405ac5:	sub    BYTE PTR [rdi+0x4e],al
  405ac8:	push   rbp
  405ac9:	sub    DWORD PTR [rax],esp
  405acb:	xor    al,0x2e
  405acd:	cmp    DWORD PTR [rsi],ebp
  405acf:	xor    al,0x0
	...
  405add:	add    BYTE PTR [rax],al
  405adf:	add    BYTE PTR [rdi+0x43],al
  405ae2:	rex.XB cmp spl,BYTE PTR [r8]
  405ae5:	sub    BYTE PTR [rdi+0x4e],al
  405ae8:	push   rbp
  405ae9:	sub    DWORD PTR [rax],esp
  405aeb:	xor    al,0x2e
  405aed:	cmp    DWORD PTR [rsi],ebp
  405aef:	xor    al,0x0
	...
  405afd:	add    BYTE PTR [rax],al
  405aff:	add    BYTE PTR [rdi+0x43],al
  405b02:	rex.XB cmp spl,BYTE PTR [r8]
  405b05:	sub    BYTE PTR [rdi+0x4e],al
  405b08:	push   rbp
  405b09:	sub    DWORD PTR [rax],esp
  405b0b:	xor    al,0x2e
  405b0d:	cmp    DWORD PTR [rsi],ebp
  405b0f:	xor    al,0x0
	...
  405b1d:	add    BYTE PTR [rax],al
  405b1f:	add    BYTE PTR [rdi+0x43],al
  405b22:	rex.XB cmp spl,BYTE PTR [r8]
  405b25:	sub    BYTE PTR [rdi+0x4e],al
  405b28:	push   rbp
  405b29:	sub    DWORD PTR [rax],esp
  405b2b:	xor    al,0x2e
  405b2d:	cmp    DWORD PTR [rsi],ebp
  405b2f:	xor    al,0x0
	...
  405b45:	add    BYTE PTR [rax],al
  405b47:	add    BYTE PTR [rcx],al
  405b49:	add    BYTE PTR [rax],al
  405b4b:	add    BYTE PTR [rax],bh
  405b4d:	xchg   ebp,eax
  405b4e:	add    BYTE PTR [rax],al
  405b50:	jo     0x405ba6
  405b52:	add    BYTE PTR [rax],al
  405b54:	add    BYTE PTR [rax],al
  405b57:	add    BYTE PTR [rax],ah
  405b59:	xchg   ebp,eax
  405b5a:	add    BYTE PTR [rax],al
  405b5c:	rex push rsp
  405b5e:	add    BYTE PTR [rax],al
  405b60:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x13ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	lock adc al,0x0
  406033:	add    BYTE PTR [rdx],dl
  406035:	adc    eax,0x70280000
  40603a:	add    BYTE PTR [rax],al
  40603c:	and    BYTE PTR [rip+0x15420000],dl        # 0x15826042
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax+0x15],dl
  40604a:	add    BYTE PTR [rax],al
  40604c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40604d:	adc    eax,0x70800000
  406052:	add    BYTE PTR [rax],al
  406054:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406055:	adc    eax,0x160d0000
  40605a:	add    BYTE PTR [rax],al
  40605c:	mov    WORD PTR [rax+0x0],?
  40605f:	add    BYTE PTR [rip+0x52000016],cl        # 0x5240607b
  406065:	(bad)  
  406066:	add    BYTE PTR [rax],al
  406068:	mov    al,0x70
  40606a:	add    BYTE PTR [rax],al
  40606c:	push   rdx
  40606d:	(bad)  
  40606e:	add    BYTE PTR [rax],al
  406070:	ins    DWORD PTR es:[rdi],dx
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	fdiv   DWORD PTR [rcx+0x0]
  406077:	add    BYTE PTR [rbp+0x1e],ch
  40607a:	add    BYTE PTR [rax],al
  40607c:	test   eax,0xe400001e
  406081:	jno    0x406083
  406083:	add    BYTE PTR [rcx-0x38ffffe2],ch
  406089:	(bad)  
  40608a:	add    BYTE PTR [rax],al
  40608c:	lock jno 0x40608f
  40608f:	add    BYTE PTR [rax+0x2700001f],al
  406095:	and    BYTE PTR [rax],al
  406097:	add    BYTE PTR [rdx+rsi*2],dl
  40609a:	add    BYTE PTR [rax],al
  40609c:	xor    BYTE PTR [rax],ah
  40609e:	add    BYTE PTR [rax],al
  4060a0:	rex.WB and BYTE PTR [r8],al
  4060a3:	add    BYTE PTR [rdx+rsi*2],bl
  4060a6:	add    BYTE PTR [rax],al
  4060a8:	push   rax
  4060a9:	and    BYTE PTR [rax],al
  4060ab:	add    BYTE PTR [rbp+0x24000020],al
  4060b1:	jb     0x4060b3
  4060b3:	add    BYTE PTR [rax-0x1affffe0],dl
  4060b9:	and    BYTE PTR [rax],al
  4060bb:	add    BYTE PTR [rdx+rsi*2],ch
  4060be:	add    BYTE PTR [rax],al
  4060c0:	lock and BYTE PTR [rax],al
  4060c3:	add    BYTE PTR [rcx+riz*1],cl
  4060c6:	add    BYTE PTR [rax],al
  4060c8:	cmp    BYTE PTR [rdx+0x0],dh
  4060cb:	add    BYTE PTR [rax],dl
  4060cd:	and    DWORD PTR [rax],eax
  4060cf:	add    BYTE PTR [rdx],bl
  4060d1:	and    DWORD PTR [rax],eax
  4060d3:	add    BYTE PTR [rdx+rsi*2],bh
  4060d6:	add    BYTE PTR [rax],al
  4060d8:	and    BYTE PTR [rcx],ah
  4060da:	add    BYTE PTR [rax],al
  4060dc:	mul    BYTE PTR [rcx]
  4060de:	add    BYTE PTR [rax],al
  4060e0:	rex jb 0x4060e3
  4060e3:	add    BYTE PTR [rax],al
  4060e5:	and    al,BYTE PTR [rax]
  4060e7:	add    bl,bh
  4060e9:	and    al,BYTE PTR [rax]
  4060eb:	add    BYTE PTR [rax+0x72],dl
  4060ee:	add    BYTE PTR [rax],al
  4060f0:	add    BYTE PTR [rbx],ah
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	(bad)  
  4060f5:	and    eax,DWORD PTR [rax]
  4060f7:	add    BYTE PTR [rax+0x72],ah
  4060fa:	add    BYTE PTR [rax],al
  4060fc:	xor    BYTE PTR [rbx],ah
  4060fe:	add    BYTE PTR [rax],al
  406100:	cdq    
  406101:	and    eax,DWORD PTR [rax]
  406103:	add    BYTE PTR [rax+0x72],ch
  406106:	add    BYTE PTR [rax],al
  406108:	movabs al,ds:0x74000023a3000023
  406111:	jb     0x406113
  406113:	add    BYTE PTR [rax-0xeffffdd],dh
  406119:	and    eax,DWORD PTR [rax]
  40611b:	add    BYTE PTR [rax+0x72],bh
  40611e:	add    BYTE PTR [rax],al
  406120:	add    BYTE PTR [rax+rax*1],ah
  406123:	add    BYTE PTR [rsp],cl
  406126:	add    BYTE PTR [rax],al
  406128:	xor    BYTE PTR [rdx+0x0],0x0
  40612c:	adc    BYTE PTR [rax+rax*1],ah
  40612f:	add    BYTE PTR ds:0x72840000,cl
  406136:	add    BYTE PTR [rax],al
  406138:	adc    BYTE PTR [rip+0x25130000],ah        # 0x2553613e
  40613e:	add    BYTE PTR [rax],al
  406140:	pushf  
  406141:	jb     0x406143
  406143:	add    BYTE PTR [rax],ah
  406145:	and    eax,0x25230000
  40614a:	add    BYTE PTR [rax],al
  40614c:	movabs al,ds:0x3400002530000072
  406155:	and    eax,0x72a40000
  40615a:	add    BYTE PTR [rax],al
  40615c:	rex and eax,0x25440000
  406162:	add    BYTE PTR [rax],al
  406164:	test   al,0x72
  406166:	add    BYTE PTR [rax],al
  406168:	push   rax
  406169:	and    eax,0x25b10000
  40616e:	add    BYTE PTR [rax],al
  406170:	lods   al,BYTE PTR ds:[rsi]
  406171:	jb     0x406173
  406173:	add    al,al
  406175:	and    eax,0x27220000
  40617a:	add    BYTE PTR [rax],al
  40617c:	mov    eax,0x30000072
  406181:	(bad)  
  406182:	add    BYTE PTR [rax],al
  406184:	sub    DWORD PTR [rdx],ebp
  406186:	add    BYTE PTR [rax],al
  406188:	int3   
  406189:	jb     0x40618b
  40618b:	add    BYTE PTR [rax],dh
  40618d:	sub    al,BYTE PTR [rax]
  40618f:	add    dh,dl
  406191:	sub    eax,DWORD PTR [rax]
  406193:	add    ah,ah
  406195:	jb     0x406197
  406197:	add    al,ah
  406199:	sub    eax,DWORD PTR [rax]
  40619b:	add    ah,cl
  40619d:	sub    al,0x0
  40619f:	add    ah,ch
  4061a1:	jb     0x4061a3
  4061a3:	add    al,dl
  4061a5:	sub    al,0x0
  4061a7:	add    BYTE PTR [rax-0x3ffffd2],cl
  4061ad:	jb     0x4061af
  4061af:	add    BYTE PTR [rax-0x2ffffd2],dl
  4061b5:	add    BYTE PTR cs:[rax],al
  4061b8:	add    al,0x73
  4061ba:	add    BYTE PTR [rax],al
  4061bc:	add    BYTE PTR [rdi],ch
  4061be:	add    BYTE PTR [rax],al
  4061c0:	jg     0x4061f1
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	adc    al,0x73
  4061c6:	add    BYTE PTR [rax],al
  4061c8:	sub    BYTE PTR [rdi],0x0
  4061cb:	add    BYTE PTR [rdi],bl
  4061cd:	xor    BYTE PTR [rax],al
  4061cf:	add    BYTE PTR [rax],ah
  4061d1:	jae    0x4061d3
  4061d3:	add    BYTE PTR [rax],ah
  4061d5:	xor    BYTE PTR [rax],al
  4061d7:	add    dl,bh
  4061d9:	xor    BYTE PTR [rax],al
  4061db:	add    BYTE PTR [rax],ch
  4061dd:	jae    0x4061df
  4061df:	add    BYTE PTR [rax],al
  4061e1:	xor    DWORD PTR [rax],eax
  4061e3:	add    BYTE PTR [rdi],bl
  4061e5:	xor    DWORD PTR [rax],eax
  4061e7:	add    BYTE PTR [rax],dh
  4061e9:	jae    0x4061eb
  4061eb:	add    BYTE PTR [rax],ah
  4061ed:	xor    DWORD PTR [rax],eax
  4061ef:	add    BYTE PTR [rdx],dh
  4061f1:	xor    DWORD PTR [rax],eax
  4061f3:	add    BYTE PTR [rbx+rsi*2],dh
  4061f6:	add    BYTE PTR [rax],al
  4061f8:	rex xor DWORD PTR [rax],eax
  4061fb:	add    BYTE PTR [rbp+0x38000031],al
  406201:	jae    0x406203
  406203:	add    BYTE PTR [rax+0x2e000031],dl
  406209:	xor    al,BYTE PTR [rax]
  40620b:	add    BYTE PTR [rbx+rsi*2],bh
  40620e:	add    BYTE PTR [rax],al
  406210:	xor    BYTE PTR [rdx],dh
  406212:	add    BYTE PTR [rax],al
  406214:	jae    0x406248
  406216:	add    BYTE PTR [rax],al
  406218:	rex.W jae 0x40621b
  40621b:	add    BYTE PTR [rax-0x44ffffce],al
  406221:	xor    al,BYTE PTR [rax]
  406223:	add    BYTE PTR [rbx+rsi*2+0x0],dl
  406227:	add    al,al
  406229:	xor    al,BYTE PTR [rax]
  40622b:	add    BYTE PTR [rsi+0x33],cl
  40622e:	add    BYTE PTR [rax],al
  406230:	pop    rsp
  406231:	jae    0x406233
  406233:	add    BYTE PTR [rax+0x33],dl
  406236:	add    BYTE PTR [rax],al
  406238:	mov    BYTE PTR [rbx],dh
  40623a:	add    BYTE PTR [rax],al
  40623c:	push   0xffffffff90000073
  406241:	xor    eax,DWORD PTR [rax]
  406243:	add    ch,ah
  406245:	xor    eax,DWORD PTR [rax]
  406247:	add    BYTE PTR [rbx+rsi*2+0x0],dh
  40624b:	add    al,dh
  40624d:	xor    eax,DWORD PTR [rax]
  40624f:	add    BYTE PTR [rsi-0x7fffffcc],bl
  406255:	jae    0x406257
  406257:	add    al,al
  406259:	xor    eax,0x35c80000
  40625e:	add    BYTE PTR [rax],al
  406260:	nop
  406261:	jae    0x406263
  406263:	add    al,dl
  406265:	xor    eax,0x35db0000
  40626a:	add    BYTE PTR [rax],al
  40626c:	xchg   esp,eax
  40626d:	jae    0x40626f
  40626f:	add    BYTE PTR [rax-0x52ffffca],ah
  406275:	add    BYTE PTR ss:[rax],al
  406278:	js     0x4062ea
  40627a:	add    BYTE PTR [rax],al
  40627c:	mov    al,0x36
  40627e:	add    BYTE PTR [rax],al
  406280:	mov    ebp,0x68000036
  406285:	jo     0x406287
  406287:	add    al,al
  406289:	add    BYTE PTR ss:[rax],al
  40628c:	int    0x36
  40628e:	add    BYTE PTR [rax],al
  406290:	jo     0x406302
  406292:	add    BYTE PTR [rax],al
  406294:	shl    BYTE PTR [rsi],1
  406296:	add    BYTE PTR [rax],al
  406298:	fidiv  WORD PTR [rsi]
  40629a:	add    BYTE PTR [rax],al
  40629c:	cld    
  40629d:	jno    0x40629f
  40629f:	add    al,ah
  4062a1:	add    BYTE PTR ss:[rax],al
  4062a4:	out    dx,al
  4062a5:	add    BYTE PTR ss:[rax],al
  4062a8:	add    al,0x72
  4062aa:	add    BYTE PTR [rax],al
  4062ac:	lock add BYTE PTR ss:[rax],al
  4062b0:	(bad)  
  4062b1:	add    BYTE PTR ss:[rax],al
  4062b4:	or     al,0x72
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	mov    al,0x35
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	hlt    
  407039:	adc    al,0x0
  40703b:	add    BYTE PTR [rdx*1+0x2cd00000],cl
  407042:	add    BYTE PTR [rax],al
  407044:	or     al,0x15
  407046:	add    BYTE PTR [rax],al
  407048:	or     DWORD PTR [rcx+rax*1],eax
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	mov    al,0x35
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	and    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	cmp    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	shr    BYTE PTR [rax+rax*1],1
  407063:	add    BYTE PTR [rdx*1+0x4010000],bh
  40706a:	add    al,BYTE PTR [rip+0x50010304]        # 0x50417374
  407070:	add    DWORD PTR [rdx+rax*1],eax
  407073:	add    eax,0x50010304
  407078:	add    DWORD PTR [rdx+rax*1],eax
  40707b:	add    eax,0x50010304
  407080:	add    DWORD PTR [rsi],ecx
  407082:	add    al,0x85
  407084:	(bad)  
  407085:	add    eax,DWORD PTR [rsi]
  407087:	rex.X add sil,BYTE PTR [rax]
  40708a:	add    DWORD PTR [rax+0x19],edx
  40708d:	(bad)  
  40708e:	add    al,0x85
  407090:	(bad)  
  407091:	add    eax,DWORD PTR [rsi]
  407093:	(bad)  
  407095:	xor    BYTE PTR [rcx],al
  407097:	push   rax
  407098:	lock (bad) 
  40709a:	add    BYTE PTR [rax],al
  40709c:	(bad)  
  40709d:	inc    DWORD PTR [rcx]
  40709f:	adc    BYTE PTR [rsi],ah
  4070a1:	add    eax,0x5320000
  4070a6:	add    BYTE PTR [r14],r15b
  4070a9:	add    eax,0x65a0000
  4070ae:	add    BYTE PTR [rax],al
  4070b0:	sbb    DWORD PTR [rdx],edx
  4070b2:	(bad)  
  4070b3:	test   DWORD PTR [rdx],edx
  4070b5:	add    ecx,DWORD PTR [rdx]
  4070b7:	add    DWORD PTR [rdx],esp
  4070b9:	add    BYTE PTR [rbx],al
  4070bb:	xor    BYTE PTR [rdx],al
  4070bd:	(bad)  
  4070be:	add    DWORD PTR [rax-0x10],edx
  4070c1:	(bad)  
  4070c2:	add    BYTE PTR [rax],al
  4070c4:	(bad)  
  4070c5:	inc    DWORD PTR [rcx]
  4070c7:	pop    QWORD PTR [rdx]
  4070c9:	rex add eax,0x56000ced
  4070cf:	adc    ah,bl
  4070d1:	or     al,0x0
  4070d3:	ins    DWORD PTR es:[rdi],dx
  4070d4:	add    eax,0x9f000ced
  4070d9:	add    DWORD PTR [rip+0xffffffffd9000d98],eax        # 0xffffffffd9407e77
  4070df:	add    DWORD PTR [rax],edx
  4070e1:	xchg   DWORD PTR [rip+0x501f000],ecx        # 0x54260e7
  4070e7:	cwde   
  4070e8:	or     eax,0x502a100
  4070ed:	ret    0xd
  4070f0:	rol    DWORD PTR [rdx],1
  4070f2:	lss    ecx,FWORD PTR [rip+0x502e600]        # 0x54356f9
  4070f9:	ret    0xd
  4070fc:	movabs eax,ds:0x1003cc000ded0503
  407105:	fmul   QWORD PTR [rip+0x503e300]        # 0x544540b
  40710b:	in     eax,dx
  40710c:	or     eax,0x5049700
  407111:	cwde   
  407112:	(bad)  
  407113:	add    dl,al
  407115:	add    al,0x10
  407117:	xchg   DWORD PTR [rsi],ecx
  407119:	add    cl,bl
  40711b:	add    al,0x5
  40711d:	cwde   
  40711e:	(bad)  
  40711f:	add    BYTE PTR [rbx+0xec30505],cl
  407125:	add    BYTE PTR [rbx+0xeb21005],bh
  40712b:	add    dl,dl
  40712d:	add    eax,0xec305
  407132:	test   BYTE PTR [rsi],al
  407134:	add    eax,0xa9000eee
  407139:	(bad)  
  40713a:	adc    ch,bl
  40713c:	(bad)  
  40713d:	add    al,al
  40713f:	(bad)  
  407140:	add    eax,0xfd000eee
  407145:	(bad)  
  407146:	(bad)  
  407147:	add    BYTE PTR [rax],al
  407149:	mov    esp,0xf990507
  40714e:	add    al,cl
  407150:	(bad)  
  407151:	add    eax,0xd4000f88
  407156:	(bad)  
  407157:	add    eax,0xf7000f99
  40715c:	(bad)  
  40715d:	fwait
  40715e:	add    DWORD PTR [rax],eax
  407160:	add    al,cl
  407162:	or     DWORD PTR [rip+0xffffffffed000fc4],eax        # 0xffffffffed40812c
  407168:	or     DWORD PTR [rax],edx
  40716a:	mov    bl,0xf
  40716c:	add    BYTE PTR [rdx+rcx*1+0xfc405],al
  407173:	stos   DWORD PTR es:[rdi],eax
  407174:	or     al,BYTE PTR [rdx]
  407176:	add    BYTE PTR [rax],al
  407178:	(bad)  
  407179:	or     al,BYTE PTR [rip+0xffffffffe8000fef]        # 0xffffffffe840816e
  40717f:	or     dl,BYTE PTR [rax]
  407181:	fimul  WORD PTR [rdi]
  407183:	add    bh,bh
  407185:	or     al,BYTE PTR [rip+0xffffffffba000fef]        # 0xffffffffba40817a
  40718b:	or     eax,DWORD PTR [rip+0xffffffffdc00109d]        # 0xffffffffdc40822e
  407191:	or     edx,DWORD PTR [rbx]
  407193:	mov    DWORD PTR [rax],edx
  407195:	add    cl,bh
  407197:	or     eax,DWORD PTR [rip+0xffffffffa200109d]        # 0xffffffffa240823a
  40719d:	or     al,0x30
  40719f:	add    BYTE PTR [rax],al
  4071a1:	(bad)  
  4071a2:	or     eax,0xad000005
  4071a7:	or     eax,0xd7000005
  4071ac:	or     eax,0x82000005
  4071b1:	(bad)  
  4071b2:	add    eax,0xead0000
  4071b7:	add    eax,0xed80000
  4071bc:	add    eax,0xf830000
  4071c1:	add    eax,0xfae0000
  4071c6:	add    eax,0xfd90000
  4071cb:	add    eax,0x10840000
  4071d0:	add    eax,0x10b50000
  4071d5:	add    eax,0x8010000
  4071da:	add    eax,DWORD PTR [rip+0x3043208]        # 0x344a3e8
  4071e0:	add    DWORD PTR [rax+0x0],edx
  4071e3:	add    BYTE PTR [rcx],al
  4071e5:	or     BYTE PTR [rbx],al
  4071e7:	add    eax,0x3043208
  4071ec:	add    DWORD PTR [rax+0x0],edx
  4071ef:	add    BYTE PTR [rcx],al
  4071f1:	or     BYTE PTR [rbx],al
  4071f3:	add    eax,0x3043208
  4071f8:	add    DWORD PTR [rax+0x0],edx
  4071fb:	add    BYTE PTR [rcx],al
  4071fd:	add    al,0x2
  4071ff:	add    eax,0x50010304
  407204:	add    DWORD PTR [rdx+rax*1],eax
  407207:	add    eax,0x50010304
  40720c:	add    DWORD PTR [rdx+rax*1],eax
  40720f:	add    eax,0x50010304
  407214:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245721c
  40721a:	add    DWORD PTR [rax],esi
  40721c:	add    DWORD PTR [rcx+rax*1],eax
  40721f:	add    BYTE PTR [rdx+rax*2],al
  407222:	add    BYTE PTR [rax],al
  407224:	add    DWORD PTR [rcx+rax*1],eax
  407227:	add    BYTE PTR [rdx+rax*2],al
  40722a:	add    BYTE PTR [rax],al
  40722c:	add    DWORD PTR [rsi],eax
  40722e:	add    eax,DWORD PTR [rax]
  407230:	(bad)  
  407231:	rex.X add sil,BYTE PTR [rax]
  407234:	add    DWORD PTR [rax+0x0],esp
  407237:	add    BYTE PTR [rcx],al
  407239:	add    BYTE PTR [rax],al
  40723b:	add    BYTE PTR [rcx],al
  40723d:	add    BYTE PTR [rax],al
  40723f:	add    BYTE PTR [rcx],al
  407241:	or     al,BYTE PTR [rsi]
  407243:	add    BYTE PTR [rdx],cl
  407245:	jb     0x40724d
  407247:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b076ad
  40724d:	push   rax
  40724e:	add    al,al
  407250:	add    DWORD PTR [rdx],ecx
  407252:	add    eax,0x6d20a05
  407257:	add    eax,DWORD PTR [rbx]
  407259:	xor    BYTE PTR [rdx],al
  40725b:	(bad)  
  40725c:	add    DWORD PTR [rax+0x0],edx
  40725f:	add    BYTE PTR [rcx],al
  407261:	add    al,0x1
  407263:	add    BYTE PTR [rdx+rax*2],al
  407266:	add    BYTE PTR [rax],al
  407268:	add    DWORD PTR [rsi],eax
  40726a:	add    eax,DWORD PTR [rax]
  40726c:	(bad)  
  40726d:	rex.X add sil,BYTE PTR [rax]
  407270:	add    DWORD PTR [rax+0x0],esp
  407273:	add    BYTE PTR [rcx],al
  407275:	add    BYTE PTR [rax],al
  407277:	add    BYTE PTR [rcx],al
  407279:	add    al,0x1
  40727b:	add    BYTE PTR [rdx+riz*4],al
  40727e:	add    BYTE PTR [rax],al
  407280:	add    DWORD PTR [rax],eax
  407282:	add    BYTE PTR [rax],al
  407284:	add    DWORD PTR [rsi],edx
  407286:	or     DWORD PTR [rax],eax
  407288:	(bad)  
  407289:	mov    BYTE PTR [rsi],al
  40728b:	add    BYTE PTR [rax],dl
  40728d:	js     0x407294
  40728f:	add    BYTE PTR [rbx],cl
  407291:	push   0xffffffffe2060004
  407296:	add    dh,BYTE PTR [rax]
  407298:	add    DWORD PTR [rax+0x0],esp
  40729b:	add    BYTE PTR [rcx],al
  40729d:	add    BYTE PTR [rax],al
  40729f:	add    BYTE PTR [rcx],al
  4072a1:	add    BYTE PTR [rax],al
  4072a3:	add    BYTE PTR [rcx],al
  4072a5:	add    BYTE PTR [rax],al
  4072a7:	add    BYTE PTR [rcx],al
  4072a9:	add    BYTE PTR [rax],al
  4072ab:	add    BYTE PTR [rcx],al
  4072ad:	(bad)  
  4072ae:	add    eax,DWORD PTR [rax]
  4072b0:	(bad)  
  4072b1:	(bad)  
  4072b3:	xor    BYTE PTR [rcx],al
  4072b5:	(bad)  
  4072b6:	add    BYTE PTR [rax],al
  4072b8:	add    DWORD PTR [rdi+rax*1],ecx
  4072bb:	add    BYTE PTR [rdx+riz*4],cl
  4072be:	or     BYTE PTR [rax],dh
  4072c0:	(bad)  
  4072c1:	(bad)  
  4072c2:	(bad)  
  4072c3:	jo     0x4072ca
  4072c5:	push   rax
  4072c6:	add    al,0xc0
  4072c8:	add    dl,al
  4072ca:	add    BYTE PTR [rax],al
  4072cc:	add    DWORD PTR [rcx],edx
  4072ce:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e24e5
  4072d4:	or     dh,BYTE PTR [rax]
  4072d6:	or     DWORD PTR [rax+0x8],esp
  4072d9:	jo     0x4072e2
  4072db:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x22076b2
  4072e2:	add    BYTE PTR [rax],al
  4072e4:	add    DWORD PTR [rcx+rax*1],eax
  4072e7:	add    BYTE PTR [rdx+rax*2],al
  4072ea:	add    BYTE PTR [rax],al
  4072ec:	add    DWORD PTR [rdx],ecx
  4072ee:	(bad)  
  4072ef:	add    BYTE PTR [rdx],cl
  4072f1:	xor    al,BYTE PTR [rsi]
  4072f3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07759
  4072f9:	push   rax
  4072fa:	add    al,al
  4072fc:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457304
  407302:	add    DWORD PTR [rax],esi
  407304:	add    DWORD PTR [rax],ecx
  407306:	add    eax,0x4420800
  40730b:	xor    BYTE PTR [rbx],al
  40730d:	(bad)  
  40730e:	add    dh,BYTE PTR [rax+0x1]
  407311:	push   rax
  407312:	add    BYTE PTR [rax],al
  407314:	add    DWORD PTR [rdi],eax
  407316:	add    al,0x0
  407318:	(bad)  
  407319:	xor    al,BYTE PTR [rbx]
  40731b:	xor    BYTE PTR [rdx],al
  40731d:	(bad)  
  40731e:	add    DWORD PTR [rax+0x1],esi
  407321:	add    eax,0x32050002
  407326:	add    DWORD PTR [rax],esi
  407328:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457330
  40732e:	add    DWORD PTR [rax],esi
  407330:	add    DWORD PTR [rax],eax
  407332:	add    BYTE PTR [rax],al
  407334:	add    DWORD PTR [rax],eax
  407336:	add    BYTE PTR [rax],al
  407338:	add    DWORD PTR [rax],eax
  40733a:	add    BYTE PTR [rax],al
  40733c:	add    DWORD PTR [rdi],eax
  40733e:	add    al,0x0
  407340:	(bad)  
  407341:	xor    al,BYTE PTR [rbx]
  407343:	xor    BYTE PTR [rdx],al
  407345:	(bad)  
  407346:	add    DWORD PTR [rax+0x1],esi
  407349:	(bad)  
  40734a:	add    eax,DWORD PTR [rax]
  40734c:	(bad)  
  40734d:	rex.X add sil,BYTE PTR [rax]
  407350:	add    DWORD PTR [rax+0x0],esp
  407353:	add    BYTE PTR [rcx],al
  407355:	add    eax,0x32050002
  40735a:	add    DWORD PTR [rax],esi
  40735c:	add    DWORD PTR [rdi],eax
  40735e:	add    al,0x0
  407360:	(bad)  
  407361:	xor    al,BYTE PTR [rbx]
  407363:	xor    BYTE PTR [rdx],al
  407365:	(bad)  
  407366:	add    DWORD PTR [rax+0x1],esi
  407369:	(bad)  
  40736a:	add    eax,DWORD PTR [rax]
  40736c:	(bad)  
  40736d:	rex.X add sil,BYTE PTR [rax]
  407370:	add    DWORD PTR [rax+0x0],esp
  407373:	add    BYTE PTR [rcx],al
  407375:	(bad)  
  407376:	add    eax,DWORD PTR [rax]
  407378:	(bad)  
  407379:	rex.X add sil,BYTE PTR [rax]
  40737c:	add    DWORD PTR [rax+0x0],esp
  40737f:	add    BYTE PTR [rcx],al
  407381:	or     BYTE PTR [rip+0x4420800],al        # 0x4827b87
  407387:	xor    BYTE PTR [rbx],al
  407389:	(bad)  
  40738a:	add    dh,BYTE PTR [rax+0x1]
  40738d:	push   rax
  40738e:	add    BYTE PTR [rax],al
  407390:	add    DWORD PTR [rax],eax
  407392:	add    BYTE PTR [rax],al
  407394:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	js     0x408f92
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	mov    esp,0xf000009b
  409011:	xchg   edx,eax
  409012:	add    BYTE PTR [rax],al
  409014:	cmp    BYTE PTR [rcx+0x0],dl
  40901a:	add    BYTE PTR [rax],al
  40901c:	add    BYTE PTR [rax],al
  40901e:	add    BYTE PTR [rax],al
  409020:	cmp    al,0x9c
  409022:	add    BYTE PTR [rax],al
  409024:	mov    al,0x93
  409026:	add    BYTE PTR [rax],al
  409028:	and    BYTE PTR [rdx+0x0],dl
  40902e:	add    BYTE PTR [rax],al
  409030:	add    BYTE PTR [rax],al
  409032:	add    BYTE PTR [rax],al
  409034:	push   rsp
  409035:	pushf  
  409036:	add    BYTE PTR [rax],al
  409038:	cwde   
  409039:	xchg   esp,eax
  40903a:	add    BYTE PTR [rax],al
  40903c:	rex xchg edx,eax
	...
  409046:	add    BYTE PTR [rax],al
  409048:	fs pushf 
  40904a:	add    BYTE PTR [rax],al
  40904c:	mov    eax,0x50000094
  409051:	xchg   edx,eax
	...
  40905a:	add    BYTE PTR [rax],al
  40905c:	(bad)  
  40905d:	pushf  
  40905e:	add    BYTE PTR [rax],al
  409060:	enter  0x94,0x0
	...
  409078:	push   0x95
  40907d:	add    BYTE PTR [rax],al
  40907f:	add    BYTE PTR [rax+0x95],al
  409085:	add    BYTE PTR [rax],al
  409087:	add    BYTE PTR [rax+0x95],bl
  40908d:	add    BYTE PTR [rax],al
  40908f:	add    BYTE PTR [rbp+rdx*4+0x0],ch
  409096:	add    BYTE PTR [rax],al
  409098:	ret    0x95
  40909b:	add    BYTE PTR [rax],al
  40909d:	add    BYTE PTR [rax],al
  40909f:	add    al,bl
  4090a1:	xchg   ebp,eax
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	call   0x409142
  4090ad:	add    BYTE PTR [rax],al
  4090af:	add    dl,bh
  4090b1:	xchg   ebp,eax
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    BYTE PTR [rax],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	adc    al,0x96
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    BYTE PTR [rax],al
  4090be:	add    BYTE PTR [rax],al
  4090c0:	and    al,0x96
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	add    BYTE PTR [rax],al
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	rex xchg esi,eax
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	pop    rax
  4090d1:	xchg   esi,eax
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	add    BYTE PTR [rax],al
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	jb     0x409070
  4090da:	add    BYTE PTR [rax],al
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	mov    BYTE PTR [rsi+0x0],dl
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	pushf  
  4090e9:	xchg   esi,eax
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    BYTE PTR [rax],al
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	mov    dh,0x96
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	retf   0x96
  4090fb:	add    BYTE PTR [rax],al
  4090fd:	add    BYTE PTR [rax],al
  4090ff:	add    al,ch
  409101:	xchg   esi,eax
  409102:	add    BYTE PTR [rax],al
  409104:	add    BYTE PTR [rax],al
  409106:	add    BYTE PTR [rax],al
  409108:	lock xchg esi,eax
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	add    al,0x97
  409112:	add    BYTE PTR [rax],al
  409114:	add    BYTE PTR [rax],al
  409116:	add    BYTE PTR [rax],al
  409118:	adc    dl,BYTE PTR [rdi+0x0]
  40911e:	add    BYTE PTR [rax],al
  409120:	cs xchg edi,eax
  409122:	add    BYTE PTR [rax],al
  409124:	add    BYTE PTR [rax],al
  409126:	add    BYTE PTR [rax],al
  409128:	rex xchg edi,eax
	...
  409136:	add    BYTE PTR [rax],al
  409138:	push   rax
  409139:	xchg   edi,eax
  40913a:	add    BYTE PTR [rax],al
  40913c:	add    BYTE PTR [rax],al
  40913e:	add    BYTE PTR [rax],al
  409140:	push   0x97
  409145:	add    BYTE PTR [rax],al
  409147:	add    BYTE PTR [rsi-0x69],dh
  40914a:	add    BYTE PTR [rax],al
  40914c:	add    BYTE PTR [rax],al
  40914e:	add    BYTE PTR [rax],al
  409150:	test   BYTE PTR [rdi+0x0],dl
  409156:	add    BYTE PTR [rax],al
  409158:	xchg   esp,eax
  409159:	xchg   edi,eax
  40915a:	add    BYTE PTR [rax],al
  40915c:	add    BYTE PTR [rax],al
  40915e:	add    BYTE PTR [rax],al
  409160:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409161:	xchg   edi,eax
  409162:	add    BYTE PTR [rax],al
  409164:	add    BYTE PTR [rax],al
  409166:	add    BYTE PTR [rax],al
  409168:	mov    edx,0x97
  40916d:	add    BYTE PTR [rax],al
  40916f:	add    ah,cl
  409171:	xchg   edi,eax
  409172:	add    BYTE PTR [rax],al
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	ficom  DWORD PTR [rdi+0x0]
  40917e:	add    BYTE PTR [rax],al
  409180:	call   0x40921c
  409185:	add    BYTE PTR [rax],al
  409187:	add    dl,dh
  409189:	xchg   edi,eax
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	cld    
  409191:	xchg   edi,eax
  409192:	add    BYTE PTR [rax],al
  409194:	add    BYTE PTR [rax],al
  409196:	add    BYTE PTR [rax],al
  409198:	or     BYTE PTR [rax+0x0],bl
  40919e:	add    BYTE PTR [rax],al
  4091a0:	adc    BYTE PTR [rax+0x0],bl
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	sbb    bl,BYTE PTR [rax+0x0]
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	and    al,0x98
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	add    BYTE PTR [rax],al
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	cs cwde 
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    BYTE PTR [rax],al
  4091be:	add    BYTE PTR [rax],al
  4091c0:	ss cwde 
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	rex cwde 
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	add    BYTE PTR [rax],al
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	cdqe   
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	add    BYTE PTR [rax],al
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	push   rdx
  4091d9:	cwde   
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    BYTE PTR [rax],al
  4091de:	add    BYTE PTR [rax],al
  4091e0:	pop    rdx
  4091e1:	cwde   
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	add    BYTE PTR [rax],al
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	fs cwde 
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	add    BYTE PTR [rax],al
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	outs   dx,BYTE PTR ds:[rsi]
  4091f1:	cwde   
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    BYTE PTR [rax],al
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	js     0x409192
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	add    BYTE PTR [rax],al
  4091fe:	add    BYTE PTR [rax],al
  409200:	(bad)  
  409201:	cwde   
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	mov    WORD PTR [rax+0x0],ds
  40920e:	add    BYTE PTR [rax],al
  409210:	xchg   esi,eax
  409211:	cwde   
	...
  40921e:	add    BYTE PTR [rax],al
  409220:	movabs ds:0xb600000000000098,al
  409229:	cwde   
  40922a:	add    BYTE PTR [rax],al
  40922c:	add    BYTE PTR [rax],al
  40922e:	add    BYTE PTR [rax],al
  409230:	enter  0x98,0x0
	...
  409240:	fcomp  QWORD PTR [rax+0x0]
	...
  40924e:	add    BYTE PTR [rax],al
  409250:	lock cwde 
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	add    al,0x99
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    BYTE PTR [rax],al
  40925e:	add    BYTE PTR [rax],al
  409260:	adc    al,0x99
  409262:	add    BYTE PTR [rax],al
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	and    al,0x99
  40926a:	add    BYTE PTR [rax],al
  40926c:	add    BYTE PTR [rax],al
  40926e:	add    BYTE PTR [rax],al
  409270:	cmp    BYTE PTR [rcx+0x0],bl
  409276:	add    BYTE PTR [rax],al
  409278:	rex.R cdq 
  40927a:	add    BYTE PTR [rax],al
  40927c:	add    BYTE PTR [rax],al
  40927e:	add    BYTE PTR [rax],al
  409280:	pop    rsp
  409281:	cdq    
  409282:	add    BYTE PTR [rax],al
  409284:	add    BYTE PTR [rax],al
  409286:	add    BYTE PTR [rax],al
  409288:	ins    BYTE PTR es:[rdi],dx
  409289:	cdq    
  40928a:	add    BYTE PTR [rax],al
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	js     0x40922b
  409292:	add    BYTE PTR [rax],al
  409294:	add    BYTE PTR [rax],al
  409296:	add    BYTE PTR [rax],al
  409298:	mov    ah,0x99
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	rcr    BYTE PTR [rcx+0x0],1
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	in     al,dx
  4092a9:	cdq    
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	add    BYTE PTR [rax],al
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	clc    
  4092b1:	cdq    
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rax],al
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	cmp    BYTE PTR [rdx+0x0],bl
  4092be:	add    BYTE PTR [rax],al
  4092c0:	js     0x40925c
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	mov    BYTE PTR [rdx+0x0],bl
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	(bad)  
  4092d1:	(bad)  
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	add    al,0x9b
  4092da:	add    BYTE PTR [rax],al
  4092dc:	add    BYTE PTR [rax],al
  4092de:	add    BYTE PTR [rax],al
  4092e0:	rex.R
  4092e1:	fwait
	...
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	push   0x95
  4092f5:	add    BYTE PTR [rax],al
  4092f7:	add    BYTE PTR [rax+0x95],al
  4092fd:	add    BYTE PTR [rax],al
  4092ff:	add    BYTE PTR [rax+0x95],bl
  409305:	add    BYTE PTR [rax],al
  409307:	add    BYTE PTR [rbp+rdx*4+0x0],ch
  40930e:	add    BYTE PTR [rax],al
  409310:	ret    0x95
  409313:	add    BYTE PTR [rax],al
  409315:	add    BYTE PTR [rax],al
  409317:	add    al,bl
  409319:	xchg   ebp,eax
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	call   0x4093ba
  409325:	add    BYTE PTR [rax],al
  409327:	add    dl,bh
  409329:	xchg   ebp,eax
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    BYTE PTR [rax],al
  40932e:	add    BYTE PTR [rax],al
  409330:	adc    al,0x96
  409332:	add    BYTE PTR [rax],al
  409334:	add    BYTE PTR [rax],al
  409336:	add    BYTE PTR [rax],al
  409338:	and    al,0x96
  40933a:	add    BYTE PTR [rax],al
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],al
  409340:	rex xchg esi,eax
  409342:	add    BYTE PTR [rax],al
  409344:	add    BYTE PTR [rax],al
  409346:	add    BYTE PTR [rax],al
  409348:	pop    rax
  409349:	xchg   esi,eax
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	jb     0x4092e8
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	mov    BYTE PTR [rsi+0x0],dl
  40935e:	add    BYTE PTR [rax],al
  409360:	pushf  
  409361:	xchg   esi,eax
  409362:	add    BYTE PTR [rax],al
  409364:	add    BYTE PTR [rax],al
  409366:	add    BYTE PTR [rax],al
  409368:	mov    dh,0x96
  40936a:	add    BYTE PTR [rax],al
  40936c:	add    BYTE PTR [rax],al
  40936e:	add    BYTE PTR [rax],al
  409370:	retf   0x96
  409373:	add    BYTE PTR [rax],al
  409375:	add    BYTE PTR [rax],al
  409377:	add    al,ch
  409379:	xchg   esi,eax
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	lock xchg esi,eax
  409382:	add    BYTE PTR [rax],al
  409384:	add    BYTE PTR [rax],al
  409386:	add    BYTE PTR [rax],al
  409388:	add    al,0x97
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	adc    dl,BYTE PTR [rdi+0x0]
  409396:	add    BYTE PTR [rax],al
  409398:	cs xchg edi,eax
  40939a:	add    BYTE PTR [rax],al
  40939c:	add    BYTE PTR [rax],al
  40939e:	add    BYTE PTR [rax],al
  4093a0:	rex xchg edi,eax
	...
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	push   rax
  4093b1:	xchg   edi,eax
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	add    BYTE PTR [rax],al
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	push   0x97
  4093bd:	add    BYTE PTR [rax],al
  4093bf:	add    BYTE PTR [rsi-0x69],dh
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	add    BYTE PTR [rax],al
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	test   BYTE PTR [rdi+0x0],dl
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	xchg   esp,eax
  4093d1:	xchg   edi,eax
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	add    BYTE PTR [rax],al
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4093d9:	xchg   edi,eax
  4093da:	add    BYTE PTR [rax],al
  4093dc:	add    BYTE PTR [rax],al
  4093de:	add    BYTE PTR [rax],al
  4093e0:	mov    edx,0x97
  4093e5:	add    BYTE PTR [rax],al
  4093e7:	add    ah,cl
  4093e9:	xchg   edi,eax
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	add    BYTE PTR [rax],al
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	ficom  DWORD PTR [rdi+0x0]
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	call   0x409494
  4093fd:	add    BYTE PTR [rax],al
  4093ff:	add    dl,dh
  409401:	xchg   edi,eax
  409402:	add    BYTE PTR [rax],al
  409404:	add    BYTE PTR [rax],al
  409406:	add    BYTE PTR [rax],al
  409408:	cld    
  409409:	xchg   edi,eax
  40940a:	add    BYTE PTR [rax],al
  40940c:	add    BYTE PTR [rax],al
  40940e:	add    BYTE PTR [rax],al
  409410:	or     BYTE PTR [rax+0x0],bl
  409416:	add    BYTE PTR [rax],al
  409418:	adc    BYTE PTR [rax+0x0],bl
  40941e:	add    BYTE PTR [rax],al
  409420:	sbb    bl,BYTE PTR [rax+0x0]
  409426:	add    BYTE PTR [rax],al
  409428:	and    al,0x98
  40942a:	add    BYTE PTR [rax],al
  40942c:	add    BYTE PTR [rax],al
  40942e:	add    BYTE PTR [rax],al
  409430:	cs cwde 
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
  409436:	add    BYTE PTR [rax],al
  409438:	ss cwde 
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
  40943e:	add    BYTE PTR [rax],al
  409440:	rex cwde 
  409442:	add    BYTE PTR [rax],al
  409444:	add    BYTE PTR [rax],al
  409446:	add    BYTE PTR [rax],al
  409448:	cdqe   
  40944a:	add    BYTE PTR [rax],al
  40944c:	add    BYTE PTR [rax],al
  40944e:	add    BYTE PTR [rax],al
  409450:	push   rdx
  409451:	cwde   
  409452:	add    BYTE PTR [rax],al
  409454:	add    BYTE PTR [rax],al
  409456:	add    BYTE PTR [rax],al
  409458:	pop    rdx
  409459:	cwde   
  40945a:	add    BYTE PTR [rax],al
  40945c:	add    BYTE PTR [rax],al
  40945e:	add    BYTE PTR [rax],al
  409460:	fs cwde 
  409462:	add    BYTE PTR [rax],al
  409464:	add    BYTE PTR [rax],al
  409466:	add    BYTE PTR [rax],al
  409468:	outs   dx,BYTE PTR ds:[rsi]
  409469:	cwde   
  40946a:	add    BYTE PTR [rax],al
  40946c:	add    BYTE PTR [rax],al
  40946e:	add    BYTE PTR [rax],al
  409470:	js     0x40940a
  409472:	add    BYTE PTR [rax],al
  409474:	add    BYTE PTR [rax],al
  409476:	add    BYTE PTR [rax],al
  409478:	(bad)  
  409479:	cwde   
  40947a:	add    BYTE PTR [rax],al
  40947c:	add    BYTE PTR [rax],al
  40947e:	add    BYTE PTR [rax],al
  409480:	mov    WORD PTR [rax+0x0],ds
  409486:	add    BYTE PTR [rax],al
  409488:	xchg   esi,eax
  409489:	cwde   
	...
  409496:	add    BYTE PTR [rax],al
  409498:	movabs ds:0xb600000000000098,al
  4094a1:	cwde   
  4094a2:	add    BYTE PTR [rax],al
  4094a4:	add    BYTE PTR [rax],al
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	enter  0x98,0x0
	...
  4094b8:	fcomp  QWORD PTR [rax+0x0]
	...
  4094c6:	add    BYTE PTR [rax],al
  4094c8:	lock cwde 
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	add    BYTE PTR [rax],al
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	add    al,0x99
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	add    BYTE PTR [rax],al
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	adc    al,0x99
  4094da:	add    BYTE PTR [rax],al
  4094dc:	add    BYTE PTR [rax],al
  4094de:	add    BYTE PTR [rax],al
  4094e0:	and    al,0x99
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	add    BYTE PTR [rax],al
  4094e6:	add    BYTE PTR [rax],al
  4094e8:	cmp    BYTE PTR [rcx+0x0],bl
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	rex.R cdq 
  4094f2:	add    BYTE PTR [rax],al
  4094f4:	add    BYTE PTR [rax],al
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	pop    rsp
  4094f9:	cdq    
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	add    BYTE PTR [rax],al
  4094fe:	add    BYTE PTR [rax],al
  409500:	ins    BYTE PTR es:[rdi],dx
  409501:	cdq    
  409502:	add    BYTE PTR [rax],al
  409504:	add    BYTE PTR [rax],al
  409506:	add    BYTE PTR [rax],al
  409508:	js     0x4094a3
  40950a:	add    BYTE PTR [rax],al
  40950c:	add    BYTE PTR [rax],al
  40950e:	add    BYTE PTR [rax],al
  409510:	mov    ah,0x99
  409512:	add    BYTE PTR [rax],al
  409514:	add    BYTE PTR [rax],al
  409516:	add    BYTE PTR [rax],al
  409518:	rcr    BYTE PTR [rcx+0x0],1
  40951e:	add    BYTE PTR [rax],al
  409520:	in     al,dx
  409521:	cdq    
  409522:	add    BYTE PTR [rax],al
  409524:	add    BYTE PTR [rax],al
  409526:	add    BYTE PTR [rax],al
  409528:	clc    
  409529:	cdq    
  40952a:	add    BYTE PTR [rax],al
  40952c:	add    BYTE PTR [rax],al
  40952e:	add    BYTE PTR [rax],al
  409530:	cmp    BYTE PTR [rdx+0x0],bl
  409536:	add    BYTE PTR [rax],al
  409538:	js     0x4094d4
  40953a:	add    BYTE PTR [rax],al
  40953c:	add    BYTE PTR [rax],al
  40953e:	add    BYTE PTR [rax],al
  409540:	mov    BYTE PTR [rdx+0x0],bl
  409546:	add    BYTE PTR [rax],al
  409548:	(bad)  
  409549:	(bad)  
  40954a:	add    BYTE PTR [rax],al
  40954c:	add    BYTE PTR [rax],al
  40954e:	add    BYTE PTR [rax],al
  409550:	add    al,0x9b
  409552:	add    BYTE PTR [rax],al
  409554:	add    BYTE PTR [rax],al
  409556:	add    BYTE PTR [rax],al
  409558:	rex.R
  409559:	fwait
	...
  409566:	add    BYTE PTR [rax],al
  409568:	fadd   DWORD PTR [rax]
  40956a:	rex.R
  40956b:	gs ins BYTE PTR es:[rdi],dx
  40956d:	gs je  0x4095d5
  409570:	rex.XB jb 0x4095dc
  409573:	je     0x4095de
  409575:	movsxd esp,DWORD PTR [rcx+0x6c]
  409578:	push   rbx
  409579:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40957e:	outs   dx,BYTE PTR ds:[rsi]
  40957f:	add    al,bh
  409581:	add    BYTE PTR [rbp+0x6e],al
  409584:	je     0x4095eb
  409586:	jb     0x4095cb
  409588:	jb     0x4095f3
  40958a:	je     0x4095f5
  40958c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40958f:	push   rbx
  409590:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409595:	outs   dx,BYTE PTR ds:[rsi]
  409596:	add    BYTE PTR [rax],al
  409598:	int    0x1
  40959a:	rex.RXB
  40959b:	gs je  0x4095e1
  40959e:	jne    0x409612
  4095a0:	jb     0x409607
  4095a2:	outs   dx,BYTE PTR ds:[rsi]
  4095a3:	je     0x4095f5
  4095a5:	jb     0x409616
  4095a7:	movsxd esp,DWORD PTR [rbp+0x73]
  4095aa:	jae    0x4095ac
  4095ac:	(bad)  
  4095ad:	add    DWORD PTR [rdi+0x65],eax
  4095b0:	je     0x4095f5
  4095b2:	jne    0x409626
  4095b4:	jb     0x40961b
  4095b6:	outs   dx,BYTE PTR ds:[rsi]
  4095b7:	je     0x409609
  4095b9:	jb     0x40962a
  4095bb:	movsxd esp,DWORD PTR [rbp+0x73]
  4095be:	jae    0x409609
  4095c0:	fs add dl,dl
  4095c3:	add    DWORD PTR [rdi+0x65],eax
  4095c6:	je     0x40960b
  4095c8:	jne    0x40963c
  4095ca:	jb     0x409631
  4095cc:	outs   dx,BYTE PTR ds:[rsi]
  4095cd:	je     0x409623
  4095cf:	push   0x64616572
  4095d4:	rex.WB
  4095d5:	add    BYTE PTR fs:[rax],al
  4095d8:	adc    BYTE PTR [rdx],al
  4095da:	rex.RXB
  4095db:	gs je  0x40962a
  4095de:	(bad)  
  4095df:	jae    0x409655
  4095e1:	rex.RB jb 0x409656
  4095e4:	outs   dx,DWORD PTR ds:[rsi]
  4095e5:	jb     0x4095e7
  4095e7:	add    BYTE PTR [rdx+rax*1+0x47],dh
  4095eb:	gs je  0x409641
  4095ee:	je     0x409651
  4095f0:	jb     0x409666
  4095f2:	jne    0x409664
  4095f4:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4095f6:	outs   dx,WORD PTR ds:[rsi]
  4095f8:	push   rdi
  4095f9:	add    BYTE PTR [rdx+0x74654702],cl
  4095ff:	push   rbx
  409600:	jns    0x409675
  409602:	je     0x409669
  409604:	ins    DWORD PTR es:[rdi],dx
  409605:	push   rsp
  409606:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40960d:	ins    BYTE PTR es:[rdi],dx
  40960e:	gs push rsp
  409610:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  409617:	gs je  0x40966e
  40961a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  409621:	je     0x409623
  409623:	add    cl,bh
  409625:	add    cl,BYTE PTR [rcx+0x6e]
  409628:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  409630:	rex.XB jb 0x40969c
  409633:	je     0x40969e
  409635:	movsxd esp,DWORD PTR [rcx+0x6c]
  409638:	push   rbx
  409639:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40963e:	outs   dx,BYTE PTR ds:[rsi]
  40963f:	add    BYTE PTR [rbx+0x3],cl
  409642:	rex.WR
  409643:	gs (bad) 
  409645:	jbe    0x4096ac
  409647:	rex.XB jb 0x4096b3
  40964a:	je     0x4096b5
  40964c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40964f:	push   rbx
  409650:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409655:	outs   dx,BYTE PTR ds:[rsi]
  409656:	add    BYTE PTR [rax],al
  409658:	mov    ebx,0x65755103
  40965d:	jb     0x4096d8
  40965f:	push   rax
  409660:	gs jb  0x4096c9
  409663:	outs   dx,DWORD PTR ds:[rsi]
  409664:	jb     0x4096d3
  409666:	(bad)  
  409667:	outs   dx,BYTE PTR ds:[rsi]
  409668:	movsxd esp,DWORD PTR [rbp+0x43]
  40966b:	outs   dx,DWORD PTR ds:[rsi]
  40966c:	jne    0x4096dc
  40966e:	je     0x4096d5
  409670:	jb     0x409672
  409672:	add    DWORD PTR [rdx+rdx*2],eax
  409675:	je     0x4096e3
  409677:	rex.B
  409678:	fs fs rex.RX jne 0x4096eb
  40967d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409681:	outs   dx,BYTE PTR ds:[rsi]
  409682:	push   rsp
  409683:	(bad)  
  409684:	(bad)  
  409685:	ins    BYTE PTR es:[rdi],dx
  409686:	add    BYTE PTR gs:[rdx],al
  409689:	add    al,0x52
  40968b:	je     0x4096f9
  40968d:	rex.XB (bad) 
  40968f:	jo     0x409705
  409691:	jne    0x409705
  409693:	rex.XB outs dx,DWORD PTR gs:[rsi]
  409696:	outs   dx,BYTE PTR ds:[rsi]
  409697:	je     0x4096fe
  409699:	js     0x40970f
  40969b:	add    BYTE PTR [rcx],cl
  40969d:	add    al,0x52
  40969f:	je     0x40970d
  4096a1:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4096a3:	outs   dx,DWORD PTR ds:[rsi]
  4096a4:	imul   esi,DWORD PTR [rbp+0x70],0x46
  4096a8:	jne    0x409718
  4096aa:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4096ae:	outs   dx,BYTE PTR ds:[rsi]
  4096af:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4096b1:	je     0x409725
  4096b3:	jns    0x4096b5
  4096b5:	add    BYTE PTR [rax],dl
  4096b7:	add    al,0x52
  4096b9:	je     0x409727
  4096bb:	push   rsi
  4096bc:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4096c3:	outs   dx,BYTE PTR ds:[rsi]
  4096c4:	ja     0x40972f
  4096c6:	outs   dx,BYTE PTR ds:[rsi]
  4096c7:	add    BYTE PTR fs:[rax],al
  4096ca:	lahf   
  4096cb:	add    al,0x53
  4096cd:	gs je  0x409725
  4096d0:	outs   dx,BYTE PTR ds:[rsi]
  4096d1:	push   0x6c646e61
  4096d6:	gs fs rex.RB js 0x40973e
  4096db:	gs jo  0x409752
  4096de:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4096e5:	gs jb  0x4096e8
  4096e8:	lods   al,BYTE PTR ds:[rsi]
  4096e9:	add    al,0x53
  4096eb:	ins    BYTE PTR es:[rdi],dx
  4096ec:	gs gs jo 0x4096f0
  4096f0:	mov    edx,0x72655404
  4096f5:	ins    DWORD PTR es:[rdi],dx
  4096f6:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4096fd:	outs   dx,DWORD PTR ds:[rsi]
  4096fe:	movsxd esp,DWORD PTR [rbp+0x73]
  409701:	jae    0x409703
  409703:	add    cl,al
  409705:	add    al,0x54
  409707:	ins    BYTE PTR es:[rdi],dx
  409708:	jae    0x409751
  40970a:	gs je  0x409763
  40970d:	(bad)  
  40970e:	ins    BYTE PTR es:[rdi],dx
  40970f:	jne    0x409776
  409711:	add    dh,cl
  409713:	add    al,0x55
  409715:	outs   dx,BYTE PTR ds:[rsi]
  409716:	push   0x6c646e61
  40971b:	gs fs rex.RB js 0x409783
  409720:	gs jo  0x409797
  409723:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40972a:	gs jb  0x40972d
  40972d:	add    ah,ch
  40972f:	add    al,0x56
  409731:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  409738:	jb     0x4097a9
  40973a:	je     0x4097a1
  40973c:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409740:	out    dx,al
  409741:	add    al,0x56
  409743:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40974a:	jne    0x4097b1
  40974c:	jb     0x4097c7
  40974e:	add    BYTE PTR [rax],al
  409750:	(bad)  
  409751:	add    BYTE PTR [rdi+0x5f],bl
  409754:	rex.XB pop r15
  409756:	jae    0x4097c8
  409758:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40975c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409763:	ins    BYTE PTR es:[rdi],dx
  409764:	gs jb  0x409767
  409767:	add    BYTE PTR [rsi+0x0],cl
  40976a:	pop    rdi
  40976b:	pop    rdi
  40976c:	fs ins BYTE PTR es:[rdi],dx
  40976e:	ins    BYTE PTR es:[rdi],dx
  40976f:	outs   dx,DWORD PTR ds:[rsi]
  409770:	outs   dx,BYTE PTR ds:[rsi]
  409771:	gs js  0x4097dd
  409774:	je     0x409776
  409776:	push   rbx
  409777:	add    BYTE PTR [rdi+0x5f],bl
  40977a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409781:	movsxd eax,DWORD PTR [rax]
  409783:	add    BYTE PTR [rdx+0x0],bl
  409786:	pop    rdi
  409787:	pop    rdi
  409788:	ins    BYTE PTR es:[rdi],dx
  409789:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40978c:	jbe    0x4097ed
  40978e:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409795:	add    BYTE PTR [rdi+0x5f],bl
  409798:	jae    0x4097ff
  40979a:	je     0x4097fb
  40979c:	(bad)  
  40979d:	jo     0x40980f
  40979f:	pop    rdi
  4097a0:	je     0x40981b
  4097a2:	jo     0x409809
  4097a4:	add    BYTE PTR [rax],al
  4097a6:	(bad)  
  4097a7:	add    BYTE PTR [rdi+0x5f],bl
  4097aa:	jae    0x409811
  4097ac:	je     0x409823
  4097ae:	jae    0x409815
  4097b0:	jb     0x40981f
  4097b2:	(bad)  
  4097b3:	je     0x40981d
  4097b5:	gs jb  0x40982a
  4097b8:	add    BYTE PTR [rax],al
  4097ba:	ins    DWORD PTR es:[rdi],dx
  4097bb:	add    BYTE PTR [rdi+0x5f],bl
  4097be:	ja     0x409827
  4097c0:	gs je  0x409830
  4097c3:	(bad)  
  4097c4:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4097cb:	add    BYTE PTR [rsi+0x0],ch
  4097ce:	pop    rdi
  4097cf:	pop    rdi
  4097d0:	ja     0x40983b
  4097d2:	outs   dx,BYTE PTR ds:[rsi]
  4097d3:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x78000076
  4097db:	add    BYTE PTR [rdi+0x61],bl
  4097de:	ins    DWORD PTR es:[rdi],dx
  4097df:	jae    0x409848
  4097e1:	pop    rdi
  4097e2:	gs js  0x40984e
  4097e5:	je     0x4097e7
  4097e7:	add    BYTE PTR [rdx+0x65635f00],cl
  4097ed:	js     0x409858
  4097ef:	je     0x4097f1
  4097f1:	add    dl,bl
  4097f3:	add    BYTE PTR [rdi+0x66],bl
  4097f6:	ins    DWORD PTR es:[rdi],dx
  4097f7:	outs   dx,DWORD PTR ds:[rsi]
  4097f8:	fs add BYTE PTR gs:[rax],al
  4097fc:	sbb    al,BYTE PTR [rcx]
  4097fe:	pop    rdi
  4097ff:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  409806:	ins    DWORD PTR es:[rdi],dx
  409807:	add    BYTE PTR [rax+0x6f6c5f01],al
  40980d:	movsxd ebp,DWORD PTR [rbx+0x0]
  409810:	and    eax,0x6e6f5f02
  409815:	gs js  0x409881
  409818:	je     0x40981a
  40981a:	(bad)
  40981e:	outs   dx,BYTE PTR ds:[rsi]
  40981f:	ins    BYTE PTR es:[rdi],dx
  409820:	outs   dx,DWORD PTR ds:[rsi]
  409821:	movsxd ebp,DWORD PTR [rbx+0x0]
  409824:	std    
  409825:	add    bl,BYTE PTR [rdi+0x77]
  409828:	movsxd ebp,DWORD PTR [rbp+0x64]
  40982b:	ins    BYTE PTR es:[rdi],dx
  40982c:	outs   dx,BYTE PTR ds:[rsi]
  40982d:	add    BYTE PTR [rdi+0x3],bh
  409830:	(bad)  
  409831:	(bad)  
  409832:	outs   dx,DWORD PTR ds:[rsi]
  409833:	jb     0x4098a9
  409835:	add    BYTE PTR [rax+0x6c616303],dl
  40983b:	ins    BYTE PTR es:[rdi],dx
  40983c:	outs   dx,DWORD PTR ds:[rsi]
  40983d:	movsxd eax,DWORD PTR [rax]
  40983f:	add    BYTE PTR [rbp+0x69786503],bl
  409845:	je     0x409847
  409847:	add    BYTE PTR [rax+0x72706603],dh
  40984d:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  409854:	data16 jb 0x4098bc
  409857:	add    BYTE PTR gs:[rax],al
  40985a:	ret    0x6603
  40985d:	ja     0x4098d1
  40985f:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  409867:	(bad)  
  409868:	ins    BYTE PTR es:[rdi],dx
  409869:	ins    BYTE PTR es:[rdi],dx
  40986a:	outs   dx,DWORD PTR ds:[rsi]
  40986b:	movsxd eax,DWORD PTR [rax]
  40986d:	add    al,bh
  40986f:	add    ebp,DWORD PTR [rbp+0x65]
  409872:	ins    DWORD PTR es:[rdi],dx
  409873:	movsxd esi,DWORD PTR [rax+0x79]
  409876:	add    BYTE PTR [rax],al
  409878:	(bad)  
  409879:	add    al,0x73
  40987b:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409882:	sub    eax,DWORD PTR [rbx+rsi*2]
  409885:	je     0x4098f9
  409887:	ins    BYTE PTR es:[rdi],dx
  409888:	outs   dx,BYTE PTR gs:[rsi]
  40988a:	add    BYTE PTR [rax],al
  40988c:	cs add al,0x73
  40988f:	je     0x409903
  409891:	outs   dx,BYTE PTR ds:[rsi]
  409892:	movsxd ebp,DWORD PTR [rbp+0x70]
  409895:	add    BYTE PTR [rsi+0x4],cl
  409898:	jbe    0x409900
  40989a:	jo     0x40990e
  40989c:	imul   ebp,DWORD PTR [rsi+0x74],0x14000066
  4098a3:	add    BYTE PTR [rbx+0x6f],al
  4098a6:	rex.XB jb 0x40990e
  4098a9:	(bad)  
  4098aa:	je     0x409911
  4098ac:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4098ae:	jae    0x409924
  4098b0:	(bad)  
  4098b1:	outs   dx,BYTE PTR ds:[rsi]
  4098b2:	movsxd esp,DWORD PTR [rbp+0x0]
  4098b5:	add    BYTE PTR [rbp+0x0],al
  4098b8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4098ba:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4098bc:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4098c4:	rex.RB js 0x4098c7
  4098c7:	add    BYTE PTR [rsi+0x6f725001],al
  4098cd:	jo     0x409925
  4098cf:	(bad)  
  4098d0:	jb     0x40993b
  4098d2:	(bad)  
  4098d3:	outs   dx,BYTE PTR ds:[rsi]
  4098d4:	je     0x409919
  4098d6:	ins    BYTE PTR es:[rdi],dx
  4098d7:	gs (bad) 
  4098d9:	jb     0x4098db
  4098db:	add    BYTE PTR [rsi],cl
  4098dd:	add    BYTE PTR [rdi+0x55],bl
  4098e0:	outs   dx,BYTE PTR ds:[rsi]
  4098e1:	ja     0x40994c
  4098e3:	outs   dx,BYTE PTR ds:[rsi]
  4098e4:	fs pop rdi
  4098e6:	push   rdx
  4098e7:	gs jae 0x40995f
  4098ea:	ins    DWORD PTR es:[rdi],dx
  4098eb:	add    BYTE PTR gs:[rax],al
  4098ee:	add    BYTE PTR [rax],al
  4098f0:	repnz add BYTE PTR [rdi+0x5a],bl
  4098f4:	rex.WRX
  4098f5:	rex.WXB push r11
  4098f7:	jae    0x40992e
  4098f9:	movsxd ebx,DWORD PTR [rdi+0x73]
  4098fc:	je     0x409970
  4098fe:	rex.RB jbe 0x409901
  409901:	add    BYTE PTR [rax],al
  409903:	add    cl,ch
  409905:	add    bl,BYTE PTR [rdi+0x5a]
  409908:	rex.WRX push rbx
  40990a:	(bad)  
  40990b:	movsxd rax,DWORD PTR [r13+0x43]
  40990f:	xor    DWORD PTR [rbp+0x76],eax
  409912:	add    BYTE PTR [rax],al
  409914:	in     al,dx
  409915:	add    bl,BYTE PTR [rdi+0x5a]
  409918:	rex.WRX push rbx
  40991a:	(bad)  
  40991b:	movsxd rax,DWORD PTR [r13+0x44]
  40991f:	xor    DWORD PTR [rbp+0x76],eax
  409922:	add    BYTE PTR [rax],al
  409924:	(bad)  
  409925:	add    ebx,DWORD PTR [rdi+0x5a]
  409928:	rex.WRX push rbx
  40992a:	outs   dx,DWORD PTR ds:[rsi]
  40992b:	ins    BYTE PTR es:[rdi],dx
  40992c:	jae    0x409973
  40992e:	push   rax
  40992f:	rex.RX push rdx
  409931:	push   rbx
  409932:	outs   dx,DWORD PTR ds:[rsi]
  409933:	push   rbx
  409934:	pop    rdi
  409935:	add    BYTE PTR [r8],r8b
  409938:	fadd   QWORD PTR [rbx]
  40993a:	pop    rdi
  40993b:	pop    rdx
  40993c:	rex.WRX push rbx
  40993e:	outs   dx,DWORD PTR ds:[rsi]
  40993f:	ins    BYTE PTR es:[rdi],dx
  409940:	jae    0x409987
  409942:	je     0x409944
  409944:	cmp    al,BYTE PTR [rdi+rbx*2]
  409947:	pop    rdx
  409948:	rex.WRX push rbx
  40994a:	jae    0x40998f
  40994c:	xor    DWORD PTR [rbp+0x50],eax
  40994f:	rex.WXB movsxd rdx,DWORD PTR [r10+0x4b]
  409953:	push   rbx
  409954:	(bad)  
  409955:	movsxd rax,DWORD PTR [r13+0x0]
  409959:	add    BYTE PTR [rax],al
  40995b:	add    BYTE PTR [rip+0x4e5a5f04],bh        # 0x4e9af865
  409961:	push   rbx
  409962:	jae    0x4099a7
  409964:	xor    DWORD PTR [rbp+0x52],eax
  409967:	rex.WXB push r11
  409969:	jae    0x40996b
  40996b:	add    BYTE PTR [rbx+0x4],dl
  40996e:	pop    rdi
  40996f:	pop    rdx
  409970:	rex.WRX push rbx
  409972:	jae    0x4099b8
  409974:	xor    DWORD PTR [rbp+0x76],eax
  409977:	add    al,dh
  409979:	add    eax,0x534e5a5f
  40997e:	je     0x4099b1
  409980:	xor    esp,DWORD PTR [rdx+0x61]
  409983:	jae    0x4099ee
  409985:	movsxd ebx,DWORD PTR [rdi+0x6f]
  409988:	jae    0x4099fe
  40998a:	jb     0x4099f1
  40998c:	(bad)  
  40998d:	ins    DWORD PTR es:[rdi],dx
  40998e:	rex.WB ja 0x4099e4
  409991:	je     0x4099c4
  409993:	xor    DWORD PTR [rbx+0x68],esp
  409996:	(bad)  
  409997:	jb     0x4099f8
  409999:	je     0x409a0d
  40999b:	(bad)  
  40999c:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x6c454577
  4099a4:	jae    0x4099eb
  4099a6:	push   rax
  4099a7:	rex.RX push rdx
  4099a9:	push   rbx
  4099aa:	xor    bl,BYTE PTR [rdi+0x53]
  4099ad:	xor    ebx,DWORD PTR [rdi+0x45]
  4099b0:	add    BYTE PTR [rax],al
  4099b2:	add    BYTE PTR [rax],al
  4099b4:	xor    BYTE PTR [rdx],cl
  4099b6:	pop    rdi
  4099b7:	pop    rdx
  4099b8:	rex.WRX push rbx
  4099ba:	je     0x4099f4
  4099bc:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  4099c3:	gs xor al,0x49
  4099c6:	outs   dx,BYTE PTR ds:[rsi]
  4099c7:	imul   esi,DWORD PTR [rbx+rax*2+0x31],0x7645
  4099cf:	add    BYTE PTR [rdx],dh
  4099d1:	or     bl,BYTE PTR [rdi+0x5a]
  4099d4:	rex.WRX push rbx
  4099d6:	je     0x409a10
  4099d8:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  4099df:	gs xor al,0x49
  4099e2:	outs   dx,BYTE PTR ds:[rsi]
  4099e3:	imul   esi,DWORD PTR [rsp+rax*2+0x31],0x7645
  4099eb:	add    BYTE PTR [rbx],ch
  4099ed:	or     ebx,DWORD PTR [rdi+0x5a]
  4099f0:	push   rbx
  4099f1:	je     0x409a27
  4099f3:	movsxd ebp,DWORD PTR [rdi+0x75]
  4099f6:	je     0x4099f8
  4099f8:	sub    al,0xb
  4099fa:	pop    rdi
  4099fb:	pop    rdx
  4099fc:	push   rbx
  4099fd:	je     0x409a33
  4099ff:	outs   dx,BYTE PTR gs:[rsi]
  409a01:	fs ins BYTE PTR es:[rdi],dx
  409a03:	movsxd rdx,DWORD PTR [r11+0x74]
  409a07:	xor    DWORD PTR [rcx],esi
  409a09:	movsxd ebp,DWORD PTR [rax+0x61]
  409a0c:	jb     0x409a6d
  409a0e:	je     0x409a82
  409a10:	(bad)  
  409a11:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  409a19:	push   rbx
  409a1a:	je     0x409a4d
  409a1c:	xor    esp,DWORD PTR [rdx+0x61]
  409a1f:	jae    0x409a8a
  409a21:	movsxd ebx,DWORD PTR [rdi+0x6f]
  409a24:	jae    0x409a9a
  409a26:	jb     0x409a8d
  409a28:	(bad)  
  409a29:	ins    DWORD PTR es:[rdi],dx
  409a2a:	rex.WB push r12
  409a2c:	pop    rdi
  409a2d:	push   rsp
  409a2e:	xor    BYTE PTR [rdi+0x45],bl
  409a31:	push   rbx
  409a32:	ss pop rdi
  409a34:	add    BYTE PTR [rax],al
  409a36:	add    BYTE PTR [rax],al
  409a38:	sub    eax,0x535a5f0b
  409a3d:	je     0x409a73
  409a3f:	outs   dx,BYTE PTR gs:[rsi]
  409a41:	fs ins BYTE PTR es:[rdi],dx
  409a43:	rex.WB ja 0x409a99
  409a46:	je     0x409a79
  409a48:	xor    DWORD PTR [rbx+0x68],esp
  409a4b:	(bad)  
  409a4c:	jb     0x409aad
  409a4e:	je     0x409ac2
  409a50:	(bad)  
  409a51:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454577
  409a59:	push   rbx
  409a5a:	je     0x409a8d
  409a5c:	xor    esp,DWORD PTR [rdx+0x61]
  409a5f:	jae    0x409aca
  409a61:	movsxd ebx,DWORD PTR [rdi+0x6f]
  409a64:	jae    0x409ada
  409a66:	jb     0x409acd
  409a68:	(bad)  
  409a69:	ins    DWORD PTR es:[rdi],dx
  409a6a:	rex.WB push r12
  409a6c:	pop    rdi
  409a6d:	push   rsp
  409a6e:	xor    BYTE PTR [rdi+0x45],bl
  409a71:	push   rbx
  409a72:	ss pop rdi
  409a74:	add    BYTE PTR [rax],al
  409a76:	add    BYTE PTR [rax],al
  409a78:	xor    eax,0x535a5f0b
  409a7d:	je     0x409ab4
  409a7f:	ja     0x409ae4
  409a81:	outs   dx,DWORD PTR ds:[rsi]
  409a82:	jne    0x409af8
  409a84:	add    BYTE PTR [rax],al
  409a86:	add    BYTE PTR [rax],al
  409a88:	jae    0x409a95
  409a8a:	pop    rdi
  409a8b:	pop    rdx
  409a8c:	push   rbx
  409a8d:	je     0x409afb
  409a8f:	jae    0x409ada
  409a91:	push   rbx
  409a92:	je     0x409ac5
  409a94:	xor    DWORD PTR [rbx+0x68],esp
  409a97:	(bad)  
  409a98:	jb     0x409af9
  409a9a:	je     0x409b0e
  409a9c:	(bad)  
  409a9d:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  409aa5:	push   rbx
  409aa6:	je     0x409ad9
  409aa8:	xor    esp,DWORD PTR [rdx+0x61]
  409aab:	jae    0x409b16
  409aad:	movsxd ebx,DWORD PTR [rdi+0x6f]
  409ab0:	jae    0x409b26
  409ab2:	jb     0x409b19
  409ab4:	(bad)  
  409ab5:	ins    DWORD PTR es:[rdi],dx
  409ab6:	movsxd rdx,DWORD PTR [r15+rbx*2+0x45]
  409abb:	push   rbx
  409abc:	xor    eax,0x634b505f
  409ac1:	add    BYTE PTR [rax],al
  409ac3:	add    BYTE PTR [rbp+0x535a5f0b],al
  409ac9:	je     0x409b37
  409acb:	jae    0x409b16
  409acd:	ja     0x409b22
  409acf:	je     0x409b02
  409ad1:	xor    DWORD PTR [rbx+0x68],esp
  409ad4:	(bad)  
  409ad5:	jb     0x409b36
  409ad7:	je     0x409b4b
  409ad9:	(bad)  
  409ada:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454577
  409ae2:	push   rbx
  409ae3:	je     0x409b16
  409ae5:	xor    esp,DWORD PTR [rdx+0x61]
  409ae8:	jae    0x409b53
  409aea:	movsxd ebx,DWORD PTR [rdi+0x6f]
  409aed:	jae    0x409b63
  409aef:	jb     0x409b56
  409af1:	(bad)  
  409af2:	ins    DWORD PTR es:[rdi],dx
  409af3:	rex.WB push r12
  409af5:	pop    rdi
  409af6:	push   rsp
  409af7:	xor    BYTE PTR [rdi+0x45],bl
  409afa:	push   rbx
  409afb:	ss pop rdi
  409afd:	push   rax
  409afe:	rex.WXB push r11
  409b00:	xor    ebx,DWORD PTR [rdi+0x0]
  409b03:	add    BYTE PTR [rsi+0x535a5f0b],al
  409b09:	je     0x409b77
  409b0b:	jae    0x409b56
  409b0d:	ja     0x409b62
  409b0f:	je     0x409b42
  409b11:	xor    DWORD PTR [rbx+0x68],esp
  409b14:	(bad)  
  409b15:	jb     0x409b76
  409b17:	je     0x409b8b
  409b19:	(bad)  
  409b1a:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454577
  409b22:	push   rbx
  409b23:	je     0x409b56
  409b25:	xor    esp,DWORD PTR [rdx+0x61]
  409b28:	jae    0x409b93
  409b2a:	movsxd ebx,DWORD PTR [rdi+0x6f]
  409b2d:	jae    0x409ba3
  409b2f:	jb     0x409b96
  409b31:	(bad)  
  409b32:	ins    DWORD PTR es:[rdi],dx
  409b33:	rex.WB push r12
  409b35:	pop    rdi
  409b36:	push   rsp
  409b37:	xor    BYTE PTR [rdi+0x45],bl
  409b3a:	push   rbx
  409b3b:	ss pop rdi
  409b3d:	push   rax
  409b3e:	rex.WXB movsxd rax,DWORD PTR [r8]
  409b41:	add    BYTE PTR [rax],al
  409b43:	add    BYTE PTR [rsi],dl
  409b45:	(bad)  
  409b46:	pop    rdi
  409b47:	pop    rdi
  409b48:	addr32 js 0x409bc3
  409b4b:	pop    rdi
  409b4c:	jo     0x409bb3
  409b4e:	jb     0x409bc3
  409b50:	outs   dx,DWORD PTR ds:[rsi]
  409b51:	outs   dx,BYTE PTR ds:[rsi]
  409b52:	(bad)  
  409b53:	ins    BYTE PTR es:[rdi],dx
  409b54:	imul   esi,DWORD PTR [rcx+rdi*2+0x5f],0x30686573
  409b5c:	add    BYTE PTR [rax],al
  409b5e:	add    BYTE PTR [rax],al
  409b60:	add    BYTE PTR [rax-0x70000000],dl
  409b66:	add    BYTE PTR [rax],al
  409b68:	add    BYTE PTR [rax-0x70000000],dl
  409b6e:	add    BYTE PTR [rax],al
  409b70:	add    BYTE PTR [rax-0x70000000],dl
  409b76:	add    BYTE PTR [rax],al
  409b78:	add    BYTE PTR [rax-0x70000000],dl
  409b7e:	add    BYTE PTR [rax],al
  409b80:	add    BYTE PTR [rax-0x70000000],dl
  409b86:	add    BYTE PTR [rax],al
  409b88:	add    BYTE PTR [rax-0x70000000],dl
  409b8e:	add    BYTE PTR [rax],al
  409b90:	add    BYTE PTR [rax-0x70000000],dl
  409b96:	add    BYTE PTR [rax],al
  409b98:	add    BYTE PTR [rax-0x70000000],dl
  409b9e:	add    BYTE PTR [rax],al
  409ba0:	add    BYTE PTR [rax-0x70000000],dl
  409ba6:	add    BYTE PTR [rax],al
  409ba8:	add    BYTE PTR [rax-0x70000000],dl
  409bae:	add    BYTE PTR [rax],al
  409bb0:	add    BYTE PTR [rax-0x70000000],dl
  409bb6:	add    BYTE PTR [rax],al
  409bb8:	add    BYTE PTR [rax+0x454b0000],dl
  409bbe:	push   rdx
  409bbf:	rex.WRX
  409bc0:	rex.RB
  409bc1:	xor    r14,QWORD PTR [rdx]
  409bc4:	cs fs ins BYTE PTR es:[rdi],dx
  409bc7:	ins    BYTE PTR es:[rdi],dx
  409bc8:	add    BYTE PTR [rax],al
  409bca:	add    BYTE PTR [rax],al
  409bcc:	adc    al,0x90
  409bce:	add    BYTE PTR [rax],al
  409bd0:	adc    al,0x90
  409bd2:	add    BYTE PTR [rax],al
  409bd4:	adc    al,0x90
  409bd6:	add    BYTE PTR [rax],al
  409bd8:	adc    al,0x90
  409bda:	add    BYTE PTR [rax],al
  409bdc:	adc    al,0x90
  409bde:	add    BYTE PTR [rax],al
  409be0:	adc    al,0x90
  409be2:	add    BYTE PTR [rax],al
  409be4:	adc    al,0x90
  409be6:	add    BYTE PTR [rax],al
  409be8:	adc    al,0x90
  409bea:	add    BYTE PTR [rax],al
  409bec:	adc    al,0x90
  409bee:	add    BYTE PTR [rax],al
  409bf0:	adc    al,0x90
  409bf2:	add    BYTE PTR [rax],al
  409bf4:	adc    al,0x90
  409bf6:	add    BYTE PTR [rax],al
  409bf8:	adc    al,0x90
  409bfa:	add    BYTE PTR [rax],al
  409bfc:	adc    al,0x90
  409bfe:	add    BYTE PTR [rax],al
  409c00:	adc    al,0x90
  409c02:	add    BYTE PTR [rax],al
  409c04:	adc    al,0x90
  409c06:	add    BYTE PTR [rax],al
  409c08:	adc    al,0x90
  409c0a:	add    BYTE PTR [rax],al
  409c0c:	adc    al,0x90
  409c0e:	add    BYTE PTR [rax],al
  409c10:	adc    al,0x90
  409c12:	add    BYTE PTR [rax],al
  409c14:	adc    al,0x90
  409c16:	add    BYTE PTR [rax],al
  409c18:	adc    al,0x90
  409c1a:	add    BYTE PTR [rax],al
  409c1c:	adc    al,0x90
  409c1e:	add    BYTE PTR [rax],al
  409c20:	adc    al,0x90
  409c22:	add    BYTE PTR [rax],al
  409c24:	adc    al,0x90
  409c26:	add    BYTE PTR [rax],al
  409c28:	adc    al,0x90
  409c2a:	add    BYTE PTR [rax],al
  409c2c:	adc    al,0x90
  409c2e:	add    BYTE PTR [rax],al
  409c30:	adc    al,0x90
  409c32:	add    BYTE PTR [rax],al
  409c34:	adc    al,0x90
  409c36:	add    BYTE PTR [rax],al
  409c38:	adc    al,0x90
  409c3a:	add    BYTE PTR [rax],al
  409c3c:	ins    DWORD PTR es:[rdi],dx
  409c3d:	jae    0x409cb5
  409c3f:	movsxd esi,DWORD PTR [rdx+0x74]
  409c42:	cs fs ins BYTE PTR es:[rdi],dx
  409c45:	ins    BYTE PTR es:[rdi],dx
  409c46:	add    BYTE PTR [rax],al
  409c48:	sub    BYTE PTR [rax-0x6fd80000],dl
  409c4e:	add    BYTE PTR [rax],al
  409c50:	sub    BYTE PTR [rax+0x6c6f0000],dl
  409c56:	xor    esi,DWORD PTR gs:[rdx]
  409c59:	cs fs ins BYTE PTR es:[rdi],dx
  409c5c:	ins    BYTE PTR es:[rdi],dx
  409c5d:	add    BYTE PTR [rax],al
  409c5f:	add    BYTE PTR [rax+rdx*4],bh
  409c62:	add    BYTE PTR [rax],al
  409c64:	ins    BYTE PTR es:[rdi],dx
  409c65:	imul   esp,DWORD PTR [rdx+0x67],0x735f6363
  409c6c:	pop    rdi
  409c6d:	jae    0x409cd4
  409c6f:	push   0x642e312d
  409c74:	ins    BYTE PTR es:[rdi],dx
  409c75:	ins    BYTE PTR es:[rdi],dx
  409c76:	add    BYTE PTR [rax],al
  409c78:	push   rax
  409c79:	nop
  409c7a:	add    BYTE PTR [rax],al
  409c7c:	push   rax
  409c7d:	nop
  409c7e:	add    BYTE PTR [rax],al
  409c80:	push   rax
  409c81:	nop
  409c82:	add    BYTE PTR [rax],al
  409c84:	push   rax
  409c85:	nop
  409c86:	add    BYTE PTR [rax],al
  409c88:	push   rax
  409c89:	nop
  409c8a:	add    BYTE PTR [rax],al
  409c8c:	push   rax
  409c8d:	nop
  409c8e:	add    BYTE PTR [rax],al
  409c90:	push   rax
  409c91:	nop
  409c92:	add    BYTE PTR [rax],al
  409c94:	push   rax
  409c95:	nop
  409c96:	add    BYTE PTR [rax],al
  409c98:	push   rax
  409c99:	nop
  409c9a:	add    BYTE PTR [rax],al
  409c9c:	push   rax
  409c9d:	nop
  409c9e:	add    BYTE PTR [rax],al
  409ca0:	push   rax
  409ca1:	nop
  409ca2:	add    BYTE PTR [rax],al
  409ca4:	push   rax
  409ca5:	nop
  409ca6:	add    BYTE PTR [rax],al
  409ca8:	push   rax
  409ca9:	nop
  409caa:	add    BYTE PTR [rax],al
  409cac:	push   rax
  409cad:	nop
  409cae:	add    BYTE PTR [rax],al
  409cb0:	push   rax
  409cb1:	nop
  409cb2:	add    BYTE PTR [rax],al
  409cb4:	push   rax
  409cb5:	nop
  409cb6:	add    BYTE PTR [rax],al
  409cb8:	push   rax
  409cb9:	nop
  409cba:	add    BYTE PTR [rax],al
  409cbc:	push   rax
  409cbd:	nop
  409cbe:	add    BYTE PTR [rax],al
  409cc0:	push   rax
  409cc1:	nop
  409cc2:	add    BYTE PTR [rax],al
  409cc4:	ins    BYTE PTR es:[rdi],dx
  409cc5:	imul   esp,DWORD PTR [rdx+0x73],0x2b636474
  409ccc:	sub    ebp,DWORD PTR [rip+0x6c642e36]        # 0x6ca4cb08
  409cd2:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax],dl
  40a029:	and    DWORD PTR [rax+0x0],eax
	...
  40a040:	xor    BYTE PTR [rbx],ah
  40a042:	add    BYTE PTR [rax],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax],al
  40a049:	and    eax,DWORD PTR [rax+0x0]
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
