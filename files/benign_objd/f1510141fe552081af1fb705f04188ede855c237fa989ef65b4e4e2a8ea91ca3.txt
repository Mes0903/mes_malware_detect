
f1510141fe552081af1fb705f04188ede855c237fa989ef65b4e4e2a8ea91ca3.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	call   QWORD PTR [rip+0xc0d6]        # 0x14000d0e0
   14000100a:	mov    QWORD PTR [rip+0x11b8f],rax        # 0x140012ba0
   140001011:	add    rsp,0x28
   140001015:	ret    
   140001016:	int3   
   140001017:	int3   
   140001018:	int3   
   140001019:	int3   
   14000101a:	int3   
   14000101b:	int3   
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	mov    rax,QWORD PTR [rip+0xc0c9]        # 0x14000d0f0
   140001027:	mov    QWORD PTR [rip+0x11b6a],rax        # 0x140012b98
   14000102e:	ret    
   14000102f:	int3   
   140001030:	mov    rax,QWORD PTR [rip+0xc0b1]        # 0x14000d0e8
   140001037:	mov    QWORD PTR [rip+0x11b52],rax        # 0x140012b90
   14000103e:	ret    
   14000103f:	int3   
   140001040:	lea    rcx,[rip+0x3ea9]        # 0x140004ef0
   140001047:	jmp    0x140004518
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	lea    rcx,[rip+0x3ea9]        # 0x140004f00
   140001057:	jmp    0x140004518
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	lea    rcx,[rip+0x3ea9]        # 0x140004f10
   140001067:	jmp    0x140004518
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	lea    rcx,[rip+0x3ea9]        # 0x140004f20
   140001077:	jmp    0x140004518
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	lea    rcx,[rip+0x3ea9]        # 0x140004f30
   140001087:	jmp    0x140004518
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	lea    rcx,[rip+0x3ea9]        # 0x140004f40
   140001097:	jmp    0x140004518
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	lea    rcx,[rip+0x3ea9]        # 0x140004f50
   1400010a7:	jmp    0x140004518
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	lea    rcx,[rip+0x3ea9]        # 0x140004f60
   1400010b7:	jmp    0x140004518
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	sub    rsp,0x28
   1400010c4:	call   0x140003eb8
   1400010c9:	lea    rcx,[rip+0x3ea0]        # 0x140004f70
   1400010d0:	add    rsp,0x28
   1400010d4:	jmp    0x140004518
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	int3   
   1400010dd:	int3   
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	sub    rsp,0x28
   1400010e4:	call   0x140004b74
   1400010e9:	lea    rcx,[rip+0x3e90]        # 0x140004f80
   1400010f0:	add    rsp,0x28
   1400010f4:	jmp    0x140004518
   1400010f9:	int3   
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	int3   
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	int3   
   140001101:	int3   
   140001102:	int3   
   140001103:	int3   
   140001104:	int3   
   140001105:	int3   
   140001106:	int3   
   140001107:	int3   
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	rex push rbp
   140001112:	push   rsi
   140001113:	push   rdi
   140001114:	push   r12
   140001116:	push   r13
   140001118:	push   r14
   14000111a:	push   r15
   14000111c:	lea    rbp,[rsp-0x190]
   140001124:	sub    rsp,0x290
   14000112b:	mov    rax,QWORD PTR [rip+0x10ed6]        # 0x140012008
   140001132:	xor    rax,rsp
   140001135:	mov    QWORD PTR [rbp+0x180],rax
   14000113c:	mov    r15,QWORD PTR [rbp+0x1f0]
   140001143:	mov    r13,rcx
   140001146:	xor    esi,esi
   140001148:	mov    QWORD PTR [rsp+0x68],rdx
   14000114d:	mov    QWORD PTR [r9],rsi
   140001150:	lea    rcx,[rsp+0x40]
   140001155:	mov    QWORD PTR [rsp+0x28],rcx
   14000115a:	mov    r14,r9
   14000115d:	lea    rcx,[rsp+0x70]
   140001162:	mov    BYTE PTR [r15],sil
   140001165:	mov    QWORD PTR [rsp+0x20],rcx
   14000116a:	lea    r9,[rsp+0x44]
   14000116f:	mov    rcx,QWORD PTR [r13+0x0]
   140001173:	xor    r8d,r8d
   140001176:	mov    DWORD PTR [rsp+0x44],esi
   14000117a:	mov    r12b,0x1
   14000117d:	mov    DWORD PTR [rsp+0x40],0x208
   140001185:	call   QWORD PTR [rip+0xc045]        # 0x14000d1d0
   14000118b:	mov    edi,eax
   14000118d:	test   eax,eax
   14000118f:	jg     0x140004f86
   140001195:	cmp    edi,0x8007007a
   14000119b:	je     0x140004f94
   1400011a1:	cmp    edi,0x800700ea
   1400011a7:	je     0x140004f94
   1400011ad:	test   edi,edi
   1400011af:	js     0x140001291
   1400011b5:	mov    eax,DWORD PTR [rsp+0x44]
   1400011b9:	dec    eax
   1400011bb:	mov    QWORD PTR [rsp+0x2e0],rbx
   1400011c3:	cmp    eax,0x1
   1400011c6:	ja     0x140004fd6
   1400011cc:	mov    ebx,DWORD PTR [rsp+0x40]
   1400011d0:	test   ebx,ebx
   1400011d2:	je     0x140004fd6
   1400011d8:	test   bl,0x1
   1400011db:	jne    0x140004fd6
   1400011e1:	shr    ebx,1
   1400011e3:	sub    ebx,0x1
   1400011e6:	je     0x140004f9e
   1400011ec:	lea    r8,[rsp+0x60]
   1400011f1:	mov    QWORD PTR [rsp+0x50],rsi
   1400011f6:	lea    rdx,[rsp+0x50]
   1400011fb:	mov    QWORD PTR [rsp+0x60],rsi
   140001200:	mov    ecx,ebx
   140001202:	call   QWORD PTR [rip+0xc0a8]        # 0x14000d2b0
   140001208:	mov    edi,eax
   14000120a:	test   eax,eax
   14000120c:	js     0x140001289
   14000120e:	test   r12b,r12b
   140001211:	je     0x140004fe0
   140001217:	mov    r8d,DWORD PTR [rsp+0x40]
   14000121c:	lea    rdx,[rsp+0x70]
   140001221:	mov    rcx,QWORD PTR [rsp+0x50]
   140001226:	call   0x140004b4a
   14000122b:	mov    rcx,QWORD PTR [rsp+0x50]
   140001230:	cmp    WORD PTR [rcx+rbx*2],si
   140001234:	jne    0x140004fb2
   14000123a:	test   edi,edi
   14000123c:	js     0x140004fb7
   140001242:	mov    rcx,QWORD PTR [rsp+0x60]
   140001247:	lea    rdx,[rsp+0x58]
   14000124c:	mov    QWORD PTR [rsp+0x58],rsi
   140001251:	call   QWORD PTR [rip+0xc0a1]        # 0x14000d2f8
   140001257:	mov    rcx,QWORD PTR [rsp+0x58]
   14000125c:	lea    rdx,[rsp+0x48]
   140001261:	mov    DWORD PTR [rsp+0x48],esi
   140001265:	call   QWORD PTR [rip+0xc07d]        # 0x14000d2e8
   14000126b:	cmp    DWORD PTR [rsp+0x48],esi
   14000126f:	jne    0x14000500e
   140001275:	cmp    DWORD PTR [rsp+0x44],0x2
   14000127a:	mov    rax,QWORD PTR [rsp+0x58]
   14000127f:	sete   sil
   140001283:	mov    QWORD PTR [r14],rax
   140001286:	mov    BYTE PTR [r15],sil
   140001289:	mov    rbx,QWORD PTR [rsp+0x2e0]
   140001291:	mov    eax,edi
   140001293:	mov    rcx,QWORD PTR [rbp+0x180]
   14000129a:	xor    rcx,rsp
   14000129d:	call   0x140004450
   1400012a2:	add    rsp,0x290
   1400012a9:	pop    r15
   1400012ab:	pop    r14
   1400012ad:	pop    r13
   1400012af:	pop    r12
   1400012b1:	pop    rdi
   1400012b2:	pop    rsi
   1400012b3:	pop    rbp
   1400012b4:	ret    
   1400012b5:	int3   
   1400012b6:	int3   
   1400012b7:	int3   
   1400012b8:	int3   
   1400012b9:	int3   
   1400012ba:	int3   
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	rex push rbp
   1400012c2:	push   rbx
   1400012c3:	push   rsi
   1400012c4:	push   rdi
   1400012c5:	push   r12
   1400012c7:	push   r13
   1400012c9:	push   r14
   1400012cb:	push   r15
   1400012cd:	lea    rbp,[rsp-0x88]
   1400012d5:	sub    rsp,0x188
   1400012dc:	mov    rax,QWORD PTR [rip+0x10d25]        # 0x140012008
   1400012e3:	xor    rax,rsp
   1400012e6:	mov    QWORD PTR [rbp+0x70],rax
   1400012ea:	mov    r12,QWORD PTR [rbp+0xf0]
   1400012f1:	lea    rax,[rsp+0x44]
   1400012f6:	xor    edi,edi
   1400012f8:	mov    QWORD PTR [rsp+0x28],rax
   1400012fd:	mov    QWORD PTR [r9],rdi
   140001300:	lea    rax,[rsp+0x70]
   140001305:	mov    rsi,r9
   140001308:	mov    DWORD PTR [rsp+0x48],r8d
   14000130d:	mov    BYTE PTR [r12],dil
   140001311:	lea    r9,[rsp+0x4c]
   140001316:	mov    r13d,r8d
   140001319:	mov    DWORD PTR [rsp+0x4c],edi
   14000131d:	mov    r14,rcx
   140001320:	mov    DWORD PTR [rsp+0x44],0x100
   140001328:	mov    rcx,QWORD PTR [rcx]
   14000132b:	xor    r8d,r8d
   14000132e:	mov    r15,rdx
   140001331:	mov    BYTE PTR [rsp+0x40],0x1
   140001336:	mov    QWORD PTR [rsp+0x20],rax
   14000133b:	call   QWORD PTR [rip+0xbe8f]        # 0x14000d1d0
   140001341:	mov    ebx,eax
   140001343:	test   eax,eax
   140001345:	jle    0x140001350
   140001347:	movzx  ebx,ax
   14000134a:	or     ebx,0x80070000
   140001350:	cmp    ebx,0x8007007a
   140001356:	je     0x14000138d
   140001358:	cmp    ebx,0x800700ea
   14000135e:	je     0x14000138d
   140001360:	test   ebx,ebx
   140001362:	jns    0x140001386
   140001364:	mov    eax,ebx
   140001366:	mov    rcx,QWORD PTR [rbp+0x70]
   14000136a:	xor    rcx,rsp
   14000136d:	call   0x140004450
   140001372:	add    rsp,0x188
   140001379:	pop    r15
   14000137b:	pop    r14
   14000137d:	pop    r13
   14000137f:	pop    r12
   140001381:	pop    rdi
   140001382:	pop    rsi
   140001383:	pop    rbx
   140001384:	pop    rbp
   140001385:	ret    
   140001386:	mov    cl,0x1
   140001388:	jmp    0x14000501c
   14000138d:	xor    cl,cl
   14000138f:	mov    ebx,edi
   140001391:	mov    BYTE PTR [rsp+0x40],cl
   140001395:	jmp    0x14000501c
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	rex.W jmp QWORD PTR [rip+0xbcd9]        # 0x14000d080
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	mov    QWORD PTR [rsp+0x18],rbp
   1400013b5:	push   rdi
   1400013b6:	sub    rsp,0x20
   1400013ba:	mov    QWORD PTR [r9],0x0
   1400013c1:	mov    rdi,r9
   1400013c4:	mov    rbp,r8
   1400013c7:	test   rdx,rdx
   1400013ca:	jne    0x140005260
   1400013d0:	lea    ecx,[rdx+0x10]
   1400013d3:	mov    QWORD PTR [rsp+0x30],rbx
   1400013d8:	call   QWORD PTR [rip+0xbca2]        # 0x14000d080
   1400013de:	mov    rbx,rax
   1400013e1:	test   rax,rax
   1400013e4:	je     0x14000145e
   1400013e6:	lea    rax,[rip+0xc813]        # 0x14000dc00
   1400013ed:	mov    QWORD PTR [rsp+0x38],rsi
   1400013f2:	mov    QWORD PTR [rbx],rax
   1400013f5:	mov    DWORD PTR [rbx+0x8],0x1
   1400013fc:	call   QWORD PTR [rip+0xbc16]        # 0x14000d018
   140001402:	mov    rax,QWORD PTR [rbx]
   140001405:	mov    rsi,QWORD PTR [rax]
   140001408:	lea    rax,[rip+0x101]        # 0x140001510
   14000140f:	cmp    rsi,rax
   140001412:	jne    0x14000526a
   140001418:	mov    r8,rdi
   14000141b:	mov    rdx,rbp
   14000141e:	mov    rcx,rbx
   140001421:	call   0x140001510
   140001426:	mov    esi,eax
   140001428:	mov    rax,QWORD PTR [rbx]
   14000142b:	mov    rdi,QWORD PTR [rax+0x10]
   14000142f:	lea    rax,[rip+0x38a]        # 0x1400017c0
   140001436:	cmp    rdi,rax
   140001439:	jne    0x140005284
   14000143f:	mov    rcx,rbx
   140001442:	call   0x1400017c0
   140001447:	mov    eax,esi
   140001449:	mov    rsi,QWORD PTR [rsp+0x38]
   14000144e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001453:	mov    rbp,QWORD PTR [rsp+0x40]
   140001458:	add    rsp,0x20
   14000145c:	pop    rdi
   14000145d:	ret    
   14000145e:	mov    eax,0x8007000e
   140001463:	jmp    0x14000144e
   140001465:	int3   
   140001466:	int3   
   140001467:	int3   
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	mov    eax,0x2
   140001475:	ret    
   140001476:	int3   
   140001477:	int3   
   140001478:	int3   
   140001479:	int3   
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	rex push rdi
   140001482:	sub    rsp,0x20
   140001486:	mov    QWORD PTR [r8],0x0
   14000148d:	mov    rdi,rcx
   140001490:	mov    rax,QWORD PTR [rdx]
   140001493:	sub    rax,QWORD PTR [rip+0xc3c6]        # 0x14000d860
   14000149a:	jne    0x1400014a7
   14000149c:	mov    rax,QWORD PTR [rdx+0x8]
   1400014a0:	sub    rax,QWORD PTR [rip+0xc3c1]        # 0x14000d868
   1400014a7:	test   rax,rax
   1400014aa:	je     0x1400014c8
   1400014ac:	mov    rcx,QWORD PTR [rdx]
   1400014af:	sub    rcx,QWORD PTR [rip+0xc39a]        # 0x14000d850
   1400014b6:	jne    0x1400014c3
   1400014b8:	mov    rcx,QWORD PTR [rdx+0x8]
   1400014bc:	sub    rcx,QWORD PTR [rip+0xc395]        # 0x14000d858
   1400014c3:	test   rcx,rcx
   1400014c6:	jne    0x1400014f4
   1400014c8:	mov    QWORD PTR [r8],rdi
   1400014cb:	mov    rcx,QWORD PTR [rdi]
   1400014ce:	mov    QWORD PTR [rsp+0x30],rbx
   1400014d3:	mov    rbx,QWORD PTR [rcx+0x8]
   1400014d7:	lea    rcx,[rip+0xffffffffffffff92]        # 0x140001470
   1400014de:	cmp    rbx,rcx
   1400014e1:	jne    0x140005298
   1400014e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014ec:	xor    eax,eax
   1400014ee:	add    rsp,0x20
   1400014f2:	pop    rdi
   1400014f3:	ret    
   1400014f4:	mov    eax,0x80004002
   1400014f9:	jmp    0x1400014ee
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	int3   
   140001501:	int3   
   140001502:	int3   
   140001503:	int3   
   140001504:	int3   
   140001505:	int3   
   140001506:	int3   
   140001507:	int3   
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	rex push rdi
   140001512:	sub    rsp,0x20
   140001516:	mov    QWORD PTR [r8],0x0
   14000151d:	mov    rdi,rcx
   140001520:	mov    rax,QWORD PTR [rdx]
   140001523:	sub    rax,QWORD PTR [rip+0xc336]        # 0x14000d860
   14000152a:	jne    0x140001537
   14000152c:	mov    rax,QWORD PTR [rdx+0x8]
   140001530:	sub    rax,QWORD PTR [rip+0xc331]        # 0x14000d868
   140001537:	test   rax,rax
   14000153a:	je     0x14000157f
   14000153c:	mov    rax,QWORD PTR [rdx]
   14000153f:	sub    rax,QWORD PTR [rip+0xc33a]        # 0x14000d880
   140001546:	jne    0x140001553
   140001548:	mov    rax,QWORD PTR [rdx+0x8]
   14000154c:	sub    rax,QWORD PTR [rip+0xc335]        # 0x14000d888
   140001553:	test   rax,rax
   140001556:	je     0x14000157f
   140001558:	mov    rcx,QWORD PTR [rdx]
   14000155b:	sub    rcx,QWORD PTR [rip+0xc30e]        # 0x14000d870
   140001562:	jne    0x14000156f
   140001564:	mov    rcx,QWORD PTR [rdx+0x8]
   140001568:	sub    rcx,QWORD PTR [rip+0xc309]        # 0x14000d878
   14000156f:	test   rcx,rcx
   140001572:	je     0x14000157f
   140001574:	mov    eax,0x80004002
   140001579:	add    rsp,0x20
   14000157d:	pop    rdi
   14000157e:	ret    
   14000157f:	mov    QWORD PTR [r8],rdi
   140001582:	mov    rax,QWORD PTR [rdi]
   140001585:	mov    QWORD PTR [rsp+0x30],rbx
   14000158a:	mov    rbx,QWORD PTR [rax+0x8]
   14000158e:	lea    rax,[rip+0x27b]        # 0x140001810
   140001595:	cmp    rbx,rax
   140001598:	jne    0x1400052ac
   14000159e:	mov    rcx,rdi
   1400015a1:	call   0x140001810
   1400015a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015ab:	xor    eax,eax
   1400015ad:	jmp    0x140001579
   1400015af:	int3   
   1400015b0:	int3   
   1400015b1:	int3   
   1400015b2:	int3   
   1400015b3:	int3   
   1400015b4:	int3   
   1400015b5:	int3   
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	rex push rbx
   1400015c2:	push   rbp
   1400015c3:	push   rdi
   1400015c4:	push   r14
   1400015c6:	push   r15
   1400015c8:	sub    rsp,0x60
   1400015cc:	mov    rax,QWORD PTR [rip+0x10a35]        # 0x140012008
   1400015d3:	xor    rax,rsp
   1400015d6:	mov    QWORD PTR [rsp+0x50],rax
   1400015db:	xor    ebx,ebx
   1400015dd:	xor    bpl,bpl
   1400015e0:	mov    QWORD PTR [r9],rbx
   1400015e3:	mov    r14,r9
   1400015e6:	mov    r15,r8
   1400015e9:	mov    rdi,rdx
   1400015ec:	test   rdx,rdx
   1400015ef:	je     0x1400052c0
   1400015f5:	or     rax,0xffffffffffffffff
   1400015f9:	nop    DWORD PTR [rax+0x0]
   140001600:	inc    rax
   140001603:	cmp    WORD PTR [rdx+rax*2],bx
   140001607:	jne    0x140001600
   140001609:	mov    ecx,0xffffffff
   14000160e:	cmp    rax,rcx
   140001611:	ja     0x1400052c0
   140001617:	lea    r8,[rsp+0x20]
   14000161c:	mov    QWORD PTR [rsp+0x90],rsi
   140001624:	mov    edx,eax
   140001626:	mov    rcx,rdi
   140001629:	call   QWORD PTR [rip+0xbcc1]        # 0x14000d2f0
   14000162f:	mov    esi,eax
   140001631:	test   eax,eax
   140001633:	js     0x140001642
   140001635:	mov    rbx,QWORD PTR [rsp+0x20]
   14000163a:	xor    ecx,ecx
   14000163c:	call   QWORD PTR [rip+0xbc96]        # 0x14000d2d8
   140001642:	test   esi,esi
   140001644:	js     0x14000167a
   140001646:	lea    rdx,[rsp+0x20]
   14000164b:	mov    rcx,rdi
   14000164e:	call   0x1400029b0
   140001653:	mov    esi,eax
   140001655:	test   eax,eax
   140001657:	js     0x14000167a
   140001659:	cmp    DWORD PTR [rsp+0x20],0x1
   14000165e:	je     0x14000530d
   140001664:	mov    r8,r14
   140001667:	mov    rdx,r15
   14000166a:	mov    rcx,rbx
   14000166d:	call   QWORD PTR [rip+0xbc2d]        # 0x14000d2a0
   140001673:	mov    esi,eax
   140001675:	test   bpl,bpl
   140001678:	jne    0x1400016ab
   14000167a:	test   rbx,rbx
   14000167d:	je     0x140001688
   14000167f:	mov    rcx,rbx
   140001682:	call   QWORD PTR [rip+0xbc50]        # 0x14000d2d8
   140001688:	mov    eax,esi
   14000168a:	mov    rsi,QWORD PTR [rsp+0x90]
   140001692:	mov    rcx,QWORD PTR [rsp+0x50]
   140001697:	xor    rcx,rsp
   14000169a:	call   0x140004450
   14000169f:	add    rsp,0x60
   1400016a3:	pop    r15
   1400016a5:	pop    r14
   1400016a7:	pop    rdi
   1400016a8:	pop    rbp
   1400016a9:	pop    rbx
   1400016aa:	ret    
   1400016ab:	call   QWORD PTR [rip+0xb99f]        # 0x14000d050
   1400016b1:	jmp    0x14000167a
   1400016b3:	int3   
   1400016b4:	int3   
   1400016b5:	int3   
   1400016b6:	int3   
   1400016b7:	int3   
   1400016b8:	int3   
   1400016b9:	int3   
   1400016ba:	int3   
   1400016bb:	int3   
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	mov    QWORD PTR [rsp+0x20],rbx
   1400016c5:	push   rbp
   1400016c6:	push   rdi
   1400016c7:	push   r14
   1400016c9:	sub    rsp,0x60
   1400016cd:	mov    rax,QWORD PTR [rip+0x10934]        # 0x140012008
   1400016d4:	xor    rax,rsp
   1400016d7:	mov    QWORD PTR [rsp+0x50],rax
   1400016dc:	xor    ebx,ebx
   1400016de:	xor    bpl,bpl
   1400016e1:	mov    QWORD PTR [r8],rbx
   1400016e4:	mov    r14,r8
   1400016e7:	mov    rdi,rdx
   1400016ea:	test   rdx,rdx
   1400016ed:	je     0x140005326
   1400016f3:	or     rax,0xffffffffffffffff
   1400016f7:	inc    rax
   1400016fa:	cmp    WORD PTR [rdx+rax*2],bx
   1400016fe:	jne    0x1400016f7
   140001700:	mov    ecx,0xffffffff
   140001705:	cmp    rax,rcx
   140001708:	ja     0x140005326
   14000170e:	lea    r8,[rsp+0x20]
   140001713:	mov    QWORD PTR [rsp+0x80],rsi
   14000171b:	mov    edx,eax
   14000171d:	mov    rcx,rdi
   140001720:	call   QWORD PTR [rip+0xbbca]        # 0x14000d2f0
   140001726:	mov    esi,eax
   140001728:	test   eax,eax
   14000172a:	js     0x140001739
   14000172c:	mov    rbx,QWORD PTR [rsp+0x20]
   140001731:	xor    ecx,ecx
   140001733:	call   QWORD PTR [rip+0xbb9f]        # 0x14000d2d8
   140001739:	test   esi,esi
   14000173b:	js     0x14000176e
   14000173d:	lea    rdx,[rsp+0x20]
   140001742:	mov    rcx,rdi
   140001745:	call   0x1400029b0
   14000174a:	mov    esi,eax
   14000174c:	test   eax,eax
   14000174e:	js     0x14000176e
   140001750:	cmp    DWORD PTR [rsp+0x20],0x1
   140001755:	je     0x140005373
   14000175b:	mov    rdx,r14
   14000175e:	mov    rcx,rbx
   140001761:	call   QWORD PTR [rip+0xbb31]        # 0x14000d298
   140001767:	mov    esi,eax
   140001769:	test   bpl,bpl
   14000176c:	jne    0x1400017a4
   14000176e:	test   rbx,rbx
   140001771:	je     0x14000177c
   140001773:	mov    rcx,rbx
   140001776:	call   QWORD PTR [rip+0xbb5c]        # 0x14000d2d8
   14000177c:	mov    eax,esi
   14000177e:	mov    rsi,QWORD PTR [rsp+0x80]
   140001786:	mov    rcx,QWORD PTR [rsp+0x50]
   14000178b:	xor    rcx,rsp
   14000178e:	call   0x140004450
   140001793:	mov    rbx,QWORD PTR [rsp+0x98]
   14000179b:	add    rsp,0x60
   14000179f:	pop    r14
   1400017a1:	pop    rdi
   1400017a2:	pop    rbp
   1400017a3:	ret    
   1400017a4:	call   QWORD PTR [rip+0xb8a6]        # 0x14000d050
   1400017aa:	jmp    0x14000176e
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	int3   
   1400017b1:	int3   
   1400017b2:	int3   
   1400017b3:	int3   
   1400017b4:	int3   
   1400017b5:	int3   
   1400017b6:	int3   
   1400017b7:	int3   
   1400017b8:	int3   
   1400017b9:	int3   
   1400017ba:	int3   
   1400017bb:	int3   
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017c5:	push   rdi
   1400017c6:	sub    rsp,0x20
   1400017ca:	mov    rdi,rcx
   1400017cd:	or     ebx,0xffffffff
   1400017d0:	lock xadd DWORD PTR [rcx+0x8],ebx
   1400017d5:	sub    ebx,0x1
   1400017d8:	je     0x1400017e7
   1400017da:	mov    eax,ebx
   1400017dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017e1:	add    rsp,0x20
   1400017e5:	pop    rdi
   1400017e6:	ret    
   1400017e7:	test   rcx,rcx
   1400017ea:	je     0x1400017da
   1400017ec:	lea    rax,[rip+0xc40d]        # 0x14000dc00
   1400017f3:	mov    QWORD PTR [rcx],rax
   1400017f6:	call   QWORD PTR [rip+0xb814]        # 0x14000d010
   1400017fc:	mov    rcx,rdi
   1400017ff:	call   QWORD PTR [rip+0xb833]        # 0x14000d038
   140001805:	jmp    0x1400017da
   140001807:	int3   
   140001808:	int3   
   140001809:	int3   
   14000180a:	int3   
   14000180b:	int3   
   14000180c:	int3   
   14000180d:	int3   
   14000180e:	int3   
   14000180f:	int3   
   140001810:	mov    eax,0x1
   140001815:	lock xadd DWORD PTR [rcx+0x8],eax
   14000181a:	inc    eax
   14000181c:	ret    
   14000181d:	int3   
   14000181e:	int3   
   14000181f:	int3   
   140001820:	int3   
   140001821:	int3   
   140001822:	int3   
   140001823:	int3   
   140001824:	int3   
   140001825:	int3   
   140001826:	int3   
   140001827:	int3   
   140001828:	int3   
   140001829:	int3   
   14000182a:	int3   
   14000182b:	int3   
   14000182c:	int3   
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	mov    QWORD PTR [rsp+0x18],r8
   140001835:	mov    QWORD PTR [rsp+0x10],rdx
   14000183a:	push   rbp
   14000183b:	push   rbx
   14000183c:	push   rsi
   14000183d:	push   rdi
   14000183e:	push   r12
   140001840:	mov    rbp,rsp
   140001843:	sub    rsp,0x70
   140001847:	mov    QWORD PTR [rsp+0x68],r13
   14000184c:	mov    r12,r8
   14000184f:	mov    QWORD PTR [rsp+0x60],r14
   140001854:	mov    r13,rdx
   140001857:	mov    r14,rcx
   14000185a:	mov    QWORD PTR [rsp+0x58],r15
   14000185f:	mov    eax,DWORD PTR [r14+0x18]
   140001863:	lea    r15,[r14+0x10]
   140001867:	sub    eax,DWORD PTR [r15+0xc]
   14000186b:	xor    ecx,ecx
   14000186d:	mov    QWORD PTR [r8],rcx
   140001870:	cmp    eax,0x10
   140001873:	ja     0x14000538c
   140001879:	cmp    QWORD PTR [r14+0x30],0x0
   14000187e:	mov    esi,ecx
   140001880:	mov    QWORD PTR [rbp-0x48],rcx
   140001884:	jne    0x1400019d2
   14000188a:	cmp    DWORD PTR [r14+0x38],0x0
   14000188f:	mov    QWORD PTR [rbp+0x48],rcx
   140001893:	jne    0x1400054a1
   140001899:	mov    rdi,QWORD PTR [rip+0x10880]        # 0x140012120
   1400018a0:	or     rbx,0xffffffffffffffff
   1400018a4:	inc    rbx
   1400018a7:	cmp    WORD PTR [rdi+rbx*2],0x0
   1400018ac:	jne    0x1400018a4
   1400018ae:	mov    QWORD PTR [rbp-0x40],rcx
   1400018b2:	lea    r8,[rbp-0x38]
   1400018b6:	mov    QWORD PTR [rbp-0x38],rcx
   1400018ba:	lea    rdx,[rbp-0x40]
   1400018be:	inc    ebx
   1400018c0:	lea    ecx,[rbx-0x1]
   1400018c3:	call   QWORD PTR [rip+0xb9e7]        # 0x14000d2b0
   1400018c9:	mov    esi,eax
   1400018cb:	test   eax,eax
   1400018cd:	js     0x1400018eb
   1400018cf:	mov    rcx,QWORD PTR [rbp-0x40]
   1400018d3:	mov    r8,rdi
   1400018d6:	mov    edx,ebx
   1400018d8:	call   0x1400035e0
   1400018dd:	mov    rcx,QWORD PTR [rbp-0x38]
   1400018e1:	lea    rdx,[rbp+0x48]
   1400018e5:	call   QWORD PTR [rip+0xba0d]        # 0x14000d2f8
   1400018eb:	test   esi,esi
   1400018ed:	js     0x1400019c1
   1400018f3:	mov    ecx,0x58
   1400018f8:	call   QWORD PTR [rip+0xb782]        # 0x14000d080
   1400018fe:	mov    rbx,rax
   140001901:	test   rax,rax
   140001904:	je     0x140005490
   14000190a:	cmp    QWORD PTR [r14],0x0
   14000190e:	jne    0x140005403
   140001914:	mov    r12b,0x1
   140001917:	mov    QWORD PTR [rbx+0x8],r15
   14000191b:	lea    rax,[rip+0xc146]        # 0x14000da68
   140001922:	mov    QWORD PTR [rbx],rax
   140001925:	lea    rdx,[rbp-0x30]
   140001929:	lea    rax,[rip+0x10a60]        # 0x140012390
   140001930:	xor    r13d,r13d
   140001933:	mov    QWORD PTR [rbx+0x10],rax
   140001937:	mov    QWORD PTR [rbx+0x18],r13
   14000193b:	mov    QWORD PTR [rbx+0x20],r13
   14000193f:	mov    rcx,QWORD PTR [rbp+0x48]
   140001943:	call   QWORD PTR [rip+0xb97f]        # 0x14000d2c8
   140001949:	test   eax,eax
   14000194b:	js     0x14000195f
   14000194d:	mov    rax,QWORD PTR [rbp-0x30]
   140001951:	mov    rcx,QWORD PTR [rbx+0x20]
   140001955:	mov    QWORD PTR [rbx+0x20],rax
   140001959:	call   QWORD PTR [rip+0xb979]        # 0x14000d2d8
   14000195f:	mov    QWORD PTR [rbx+0x40],r13
   140001963:	lea    rdi,[rbx+0x28]
   140001967:	mov    DWORD PTR [rbx+0x48],r13d
   14000196b:	mov    QWORD PTR [rdi],rdi
   14000196e:	mov    QWORD PTR [rdi+0x8],r13
   140001972:	mov    QWORD PTR [rdi+0x10],r13
   140001976:	mov    rax,QWORD PTR [rbx+0x8]
   14000197a:	inc    DWORD PTR [rax+0x8]
   14000197d:	mov    rax,QWORD PTR [rbx+0x8]
   140001981:	mov    r13,QWORD PTR [rax]
   140001984:	test   r13,r13
   140001987:	jne    0x14000540b
   14000198d:	mov    QWORD PTR [rax],rdi
   140001990:	mov    r13,QWORD PTR [rbp+0x38]
   140001994:	lea    rax,[rip+0xbef5]        # 0x14000d890
   14000199b:	mov    BYTE PTR [rbx+0x50],r12b
   14000199f:	mov    r12,QWORD PTR [rbp+0x40]
   1400019a3:	mov    QWORD PTR [rbx],rax
   1400019a6:	mov    DWORD PTR [rbx+0x4c],0x0
   1400019ad:	mov    DWORD PTR [rbx+0x54],0x0
   1400019b4:	mov    QWORD PTR [r14+0x30],rbx
   1400019b8:	test   rbx,rbx
   1400019bb:	je     0x140005497
   1400019c1:	mov    rcx,QWORD PTR [rbp+0x48]
   1400019c5:	test   rcx,rcx
   1400019c8:	je     0x1400019d0
   1400019ca:	call   QWORD PTR [rip+0xb908]        # 0x14000d2d8
   1400019d0:	xor    ecx,ecx
   1400019d2:	mov    r15,QWORD PTR [rsp+0x58]
   1400019d7:	test   esi,esi
   1400019d9:	js     0x140001a8e
   1400019df:	mov    rdi,QWORD PTR [r14+0x30]
   1400019e3:	mov    QWORD PTR [rbp-0x50],rcx
   1400019e7:	mov    QWORD PTR [rbp+0x30],rcx
   1400019eb:	mov    rax,QWORD PTR [rdi]
   1400019ee:	mov    rbx,QWORD PTR [rax+0x38]
   1400019f2:	lea    rax,[rip+0x1c67]        # 0x140003660
   1400019f9:	cmp    rbx,rax
   1400019fc:	jne    0x1400054b4
   140001a02:	lea    r8,[rbp+0x30]
   140001a06:	xor    edx,edx
   140001a08:	mov    rcx,rdi
   140001a0b:	call   0x140003660
   140001a10:	mov    esi,eax
   140001a12:	test   eax,eax
   140001a14:	js     0x140001a69
   140001a16:	mov    rax,QWORD PTR [rdi+0x8]
   140001a1a:	mov    rbx,QWORD PTR [rax]
   140001a1d:	test   rbx,rbx
   140001a20:	je     0x140001a40
   140001a22:	mov    r8,QWORD PTR [rbx-0x10]
   140001a26:	lea    rsi,[rbx-0x28]
   140001a2a:	test   r8,r8
   140001a2d:	jne    0x1400054ce
   140001a33:	mov    rbx,QWORD PTR [rbx+0x10]
   140001a37:	test   rbx,rbx
   140001a3a:	jne    0x14000550e
   140001a40:	mov    rax,QWORD PTR [rdi]
   140001a43:	mov    rbx,QWORD PTR [rax+0x30]
   140001a47:	lea    rax,[rip+0x1522]        # 0x140002f70
   140001a4e:	cmp    rbx,rax
   140001a51:	jne    0x140005537
   140001a57:	lea    r8,[rbp-0x50]
   140001a5b:	mov    rcx,rdi
   140001a5e:	lea    rdx,[rbp+0x30]
   140001a62:	call   0x140002f70
   140001a67:	mov    esi,eax
   140001a69:	mov    rcx,QWORD PTR [rbp+0x30]
   140001a6d:	test   rcx,rcx
   140001a70:	je     0x140001a78
   140001a72:	call   QWORD PTR [rip+0xb860]        # 0x14000d2d8
   140001a78:	test   esi,esi
   140001a7a:	js     0x140001a8e
   140001a7c:	mov    rcx,QWORD PTR [rbp-0x50]
   140001a80:	lea    r8,[rbp-0x48]
   140001a84:	mov    rdx,r13
   140001a87:	call   0x140002870
   140001a8c:	mov    esi,eax
   140001a8e:	mov    r14,QWORD PTR [rsp+0x60]
   140001a93:	mov    r13,QWORD PTR [rsp+0x68]
   140001a98:	test   esi,esi
   140001a9a:	js     0x140001b14
   140001a9c:	mov    rcx,QWORD PTR [rbp-0x48]
   140001aa0:	xor    bl,bl
   140001aa2:	mov    rax,QWORD PTR [rcx]
   140001aa5:	mov    rdi,QWORD PTR [rax+0x28]
   140001aa9:	lea    rax,[rip+0x6a0]        # 0x140002150
   140001ab0:	cmp    rdi,rax
   140001ab3:	jne    0x140005553
   140001ab9:	call   0x140002150
   140001abe:	mov    r8d,eax
   140001ac1:	test   eax,eax
   140001ac3:	js     0x140005568
   140001ac9:	mov    bl,0x1
   140001acb:	test   r8d,r8d
   140001ace:	js     0x140001aff
   140001ad0:	test   bl,bl
   140001ad2:	je     0x140001b0d
   140001ad4:	mov    rdx,QWORD PTR [rbp-0x48]
   140001ad8:	inc    DWORD PTR [rdx+0x4c]
   140001adb:	cmp    DWORD PTR [rdx+0x4c],0x1
   140001adf:	jne    0x140001ae8
   140001ae1:	mov    rcx,QWORD PTR [rdx+0x8]
   140001ae5:	inc    DWORD PTR [rcx+0xc]
   140001ae8:	mov    rcx,QWORD PTR [rdx+0x10]
   140001aec:	cmp    DWORD PTR [rcx+0x4],0xffffffff
   140001af0:	je     0x140001afb
   140001af2:	mov    rcx,QWORD PTR [rdx+0x18]
   140001af6:	call   0x140002380
   140001afb:	mov    QWORD PTR [r12],rdx
   140001aff:	mov    eax,r8d
   140001b02:	add    rsp,0x70
   140001b06:	pop    r12
   140001b08:	pop    rdi
   140001b09:	pop    rsi
   140001b0a:	pop    rbx
   140001b0b:	pop    rbp
   140001b0c:	ret    
   140001b0d:	mov    eax,0x80070002
   140001b12:	jmp    0x140001b02
   140001b14:	mov    eax,esi
   140001b16:	jmp    0x140001b02
   140001b18:	int3   
   140001b19:	int3   
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	int3   
   140001b1d:	int3   
   140001b1e:	int3   
   140001b1f:	int3   
   140001b20:	rex push rbp
   140001b22:	push   rsi
   140001b23:	push   r12
   140001b25:	push   r13
   140001b27:	push   r14
   140001b29:	lea    rbp,[rsp-0x37]
   140001b2e:	sub    rsp,0x100
   140001b35:	mov    rax,QWORD PTR [rip+0x104cc]        # 0x140012008
   140001b3c:	xor    rax,rsp
   140001b3f:	mov    QWORD PTR [rbp+0xf],rax
   140001b43:	mov    QWORD PTR [rsp+0x48],r9
   140001b48:	mov    r12,rdx
   140001b4b:	mov    QWORD PTR [rbp-0x79],r8
   140001b4f:	mov    r13,rcx
   140001b52:	test   r8,r8
   140001b55:	je     0x140001b5e
   140001b57:	mov    DWORD PTR [r8],0x0
   140001b5e:	test   r9,r9
   140001b61:	je     0x140001b6a
   140001b63:	mov    DWORD PTR [r9],0x0
   140001b6a:	mov    rax,QWORD PTR [rcx+0x10]
   140001b6e:	xor    esi,esi
   140001b70:	xor    r14d,r14d
   140001b73:	mov    BYTE PTR [rsp+0x40],sil
   140001b78:	mov    rcx,QWORD PTR [rax+0x28]
   140001b7c:	cmp    DWORD PTR [rcx+0x10],esi
   140001b7f:	jbe    0x1400058b9
   140001b85:	mov    QWORD PTR [rsp+0xf8],rbx
   140001b8d:	lea    r10,[rip+0xffffffffffffe46c]        # 0x140000000
   140001b94:	mov    QWORD PTR [rsp+0xf0],rdi
   140001b9c:	mov    ebx,0x80000000
   140001ba1:	mov    QWORD PTR [rsp+0xe8],r15
   140001ba9:	mov    r15d,0x8007000d
   140001baf:	nop
   140001bb0:	mov    rdx,QWORD PTR [rcx+0x8]
   140001bb4:	mov    edi,r14d
   140001bb7:	shl    rdi,0x5
   140001bbb:	add    rdx,rdi
   140001bbe:	mov    eax,DWORD PTR [rdx+0x8]
   140001bc1:	cmp    eax,0xd
   140001bc4:	je     0x140001ca0
   140001bca:	cmp    eax,0x8
   140001bcd:	je     0x140001dc2
   140001bd3:	cmp    eax,0xf
   140001bd6:	ja     0x140001d38
   140001bdc:	mov    ecx,DWORD PTR [r10+rax*4+0x2100]
   140001be4:	add    rcx,r10
   140001be7:	jmp    rcx
   140001be9:	mov    r15d,DWORD PTR [rdx+0xc]
   140001bed:	lea    r9,[rbp-0x21]
   140001bf1:	mov    edx,0x5
   140001bf6:	lea    r8,[rbp-0x19]
   140001bfa:	lea    rcx,[rip+0xbfbf]        # 0x14000dbc0
   140001c01:	add    r15,r12
   140001c04:	call   QWORD PTR [rip+0xb6d6]        # 0x14000d2e0
   140001c0a:	test   eax,eax
   140001c0c:	js     0x140005659
   140001c12:	xor    eax,eax
   140001c14:	mov    BYTE PTR [rbp-0x6f],al
   140001c17:	or     rbx,0xffffffffffffffff
   140001c1b:	mov    rax,QWORD PTR [r13+0x10]
   140001c1f:	mov    rcx,QWORD PTR [rax+0x28]
   140001c23:	mov    rax,QWORD PTR [rcx+0x8]
   140001c27:	mov    rsi,QWORD PTR [rdi+rax*1]
   140001c2b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001c30:	inc    rbx
   140001c33:	cmp    WORD PTR [rsi+rbx*2],0x0
   140001c38:	jne    0x140001c30
   140001c3a:	mov    eax,0xffffffff
   140001c3f:	cmp    rbx,rax
   140001c42:	ja     0x140005674
   140001c48:	lea    r9,[rbp-0x41]
   140001c4c:	mov    edx,ebx
   140001c4e:	lea    r8,[rbp-0x39]
   140001c52:	mov    rcx,rsi
   140001c55:	call   QWORD PTR [rip+0xb685]        # 0x14000d2e0
   140001c5b:	mov    eax,DWORD PTR [rip+0x10f27]        # 0x140012b88
   140001c61:	test   eax,eax
   140001c63:	je     0x1400020c2
   140001c69:	cmp    eax,0x2
   140001c6c:	jne    0x1400056a5
   140001c72:	mov    rdx,QWORD PTR [rbp-0x41]
   140001c76:	lea    r8,[rbp-0x61]
   140001c7a:	mov    rcx,QWORD PTR [rbp-0x21]
   140001c7e:	mov    DWORD PTR [rbp-0x61],0x0
   140001c85:	call   QWORD PTR [rip+0xb635]        # 0x14000d2c0
   140001c8b:	cmp    DWORD PTR [rbp-0x61],0x0
   140001c8f:	jne    0x1400056a5
   140001c95:	mov    BYTE PTR [r15],0x0
   140001c99:	xor    esi,esi
   140001c9b:	jmp    0x140001d51
   140001ca0:	mov    ebx,DWORD PTR [rdx+0xc]
   140001ca3:	lea    rax,[rbp-0x51]
   140001ca7:	mov    r8,QWORD PTR [rdx]
   140001caa:	lea    r15,[r12+0x4]
   140001caf:	mov    QWORD PTR [rsp+0x30],rax
   140001cb4:	add    r15,rbx
   140001cb7:	xor    edx,edx
   140001cb9:	mov    QWORD PTR [rsp+0x28],r15
   140001cbe:	mov    DWORD PTR [rbp-0x51],0x4
   140001cc5:	mov    QWORD PTR [rsp+0x20],0x0
   140001cce:	mov    DWORD PTR [r15],0x0
   140001cd5:	mov    rcx,QWORD PTR [r13+0x40]
   140001cd9:	lea    r9d,[rdx+0x10]
   140001cdd:	call   QWORD PTR [rip+0xb4e5]        # 0x14000d1c8
   140001ce3:	mov    esi,eax
   140001ce5:	test   eax,eax
   140001ce7:	jg     0x140002088
   140001ced:	cmp    esi,0x8007065e
   140001cf3:	je     0x14000584a
   140001cf9:	test   esi,esi
   140001cfb:	js     0x140002096
   140001d01:	mov    BYTE PTR [rbx+r12*1],0x1
   140001d06:	mov    rax,QWORD PTR [r13+0x10]
   140001d0a:	mov    rcx,QWORD PTR [rax+0x28]
   140001d0e:	mov    rax,QWORD PTR [rcx+0x8]
   140001d12:	mov    ecx,DWORD PTR [r15]
   140001d15:	cmp    ecx,DWORD PTR [rax+rdi*1+0x10]
   140001d19:	jb     0x140005854
   140001d1f:	cmp    ecx,DWORD PTR [rax+rdi*1+0x14]
   140001d23:	ja     0x140005854
   140001d29:	mov    r15d,0x8007000d
   140001d2f:	mov    r8,QWORD PTR [rbp-0x79]
   140001d33:	mov    r9,QWORD PTR [rsp+0x48]
   140001d38:	cmp    esi,0x80070002
   140001d3e:	je     0x140005871
   140001d44:	cmp    esi,r15d
   140001d47:	je     0x140005891
   140001d4d:	test   esi,esi
   140001d4f:	js     0x140001d81
   140001d51:	mov    rcx,QWORD PTR [r13+0x10]
   140001d55:	lea    r10,[rip+0xffffffffffffe2a4]        # 0x140000000
   140001d5c:	mov    r9,QWORD PTR [rsp+0x48]
   140001d61:	inc    r14d
   140001d64:	mov    r8,QWORD PTR [rbp-0x79]
   140001d68:	mov    r15d,0x8007000d
   140001d6e:	mov    ebx,0x80000000
   140001d73:	mov    rcx,QWORD PTR [rcx+0x28]
   140001d77:	cmp    r14d,DWORD PTR [rcx+0x10]
   140001d7b:	jb     0x140001bb0
   140001d81:	cmp    BYTE PTR [rsp+0x40],0x0
   140001d86:	mov    rdi,QWORD PTR [rsp+0xf0]
   140001d8e:	mov    rbx,QWORD PTR [rsp+0xf8]
   140001d96:	jne    0x1400058b1
   140001d9c:	mov    eax,esi
   140001d9e:	mov    r15,QWORD PTR [rsp+0xe8]
   140001da6:	mov    rcx,QWORD PTR [rbp+0xf]
   140001daa:	xor    rcx,rsp
   140001dad:	call   0x140004450
   140001db2:	add    rsp,0x100
   140001db9:	pop    r14
   140001dbb:	pop    r13
   140001dbd:	pop    r12
   140001dbf:	pop    rsi
   140001dc0:	pop    rbp
   140001dc1:	ret    
   140001dc2:	mov    r15d,DWORD PTR [rdx+0xc]
   140001dc6:	add    r15,r12
   140001dc9:	mov    rcx,QWORD PTR [r15+0x8]
   140001dcd:	call   QWORD PTR [rip+0xb505]        # 0x14000d2d8
   140001dd3:	mov    QWORD PTR [r15+0x8],0x0
   140001ddb:	lea    rdx,[rbp-0x70]
   140001ddf:	mov    rax,QWORD PTR [r13+0x10]
   140001de3:	lea    r9,[r15+0x8]
   140001de7:	mov    QWORD PTR [rsp+0x20],rdx
   140001dec:	mov    r8d,0x2
   140001df2:	mov    rcx,QWORD PTR [rax+0x28]
   140001df6:	mov    rax,QWORD PTR [rcx+0x8]
   140001dfa:	lea    rcx,[r13+0x40]
   140001dfe:	mov    rdx,QWORD PTR [rdi+rax*1]
   140001e02:	call   0x1400012c0
   140001e07:	mov    esi,eax
   140001e09:	test   eax,eax
   140001e0b:	jns    0x14000207f
   140001e11:	cmp    eax,0x80070002
   140001e16:	jne    0x14000571a
   140001e1c:	mov    BYTE PTR [r15],0x0
   140001e20:	xor    esi,esi
   140001e22:	jmp    0x140001d29
   140001e27:	mov    ebx,DWORD PTR [rdx+0xc]
   140001e2a:	lea    rax,[rbp-0x4d]
   140001e2e:	mov    r8,QWORD PTR [rdx]
   140001e31:	add    rbx,r12
   140001e34:	mov    QWORD PTR [rsp+0x30],rax
   140001e39:	xor    edx,edx
   140001e3b:	mov    QWORD PTR [rsp+0x28],rbx
   140001e40:	mov    DWORD PTR [rbp-0x4d],0x4
   140001e47:	mov    DWORD PTR [rbx],0x0
   140001e4d:	mov    rcx,QWORD PTR [r13+0x40]
   140001e51:	lea    r9d,[rdx+0x10]
   140001e55:	mov    QWORD PTR [rsp+0x20],0x0
   140001e5e:	call   QWORD PTR [rip+0xb364]        # 0x14000d1c8
   140001e64:	mov    esi,eax
   140001e66:	test   eax,eax
   140001e68:	jg     0x140005607
   140001e6e:	cmp    esi,0x8007065e
   140001e74:	je     0x140005615
   140001e7a:	test   esi,esi
   140001e7c:	js     0x140005862
   140001e82:	mov    rax,QWORD PTR [r13+0x10]
   140001e86:	mov    rcx,QWORD PTR [rax+0x28]
   140001e8a:	mov    rax,QWORD PTR [rcx+0x8]
   140001e8e:	mov    ecx,DWORD PTR [rbx]
   140001e90:	cmp    ecx,DWORD PTR [rax+rdi*1+0x10]
   140001e94:	jb     0x14000561f
   140001e9a:	cmp    ecx,DWORD PTR [rax+rdi*1+0x14]
   140001e9e:	jbe    0x140001d2f
   140001ea4:	jmp    0x14000561f
   140001ea9:	mov    r15d,DWORD PTR [rdx+0xc]
   140001ead:	add    r15,r12
   140001eb0:	mov    rcx,QWORD PTR [r15+0x8]
   140001eb4:	call   QWORD PTR [rip+0xb41e]        # 0x14000d2d8
   140001eba:	mov    QWORD PTR [r15+0x8],0x0
   140001ec2:	lea    r9,[r15+0x8]
   140001ec6:	mov    rax,QWORD PTR [r13+0x10]
   140001eca:	mov    rcx,QWORD PTR [rax+0x28]
   140001ece:	mov    rax,QWORD PTR [rcx+0x8]
   140001ed2:	lea    rcx,[r13+0x40]
   140001ed6:	mov    rdx,QWORD PTR [rdi+rax*1]
   140001eda:	lea    rax,[r15+0x10]
   140001ede:	mov    QWORD PTR [rsp+0x20],rax
   140001ee3:	call   0x140001110
   140001ee8:	jmp    0x140001e07
   140001eed:	mov    r15d,DWORD PTR [rdx+0xc]
   140001ef1:	add    r15,r12
   140001ef4:	mov    rsi,QWORD PTR [r15]
   140001ef7:	test   rsi,rsi
   140001efa:	jne    0x14000579e
   140001f00:	mov    rax,QWORD PTR [r13+0x10]
   140001f04:	mov    r9d,0x20119
   140001f0a:	mov    QWORD PTR [rbp-0x69],0x0
   140001f12:	xor    r8d,r8d
   140001f15:	mov    rcx,QWORD PTR [rax+0x28]
   140001f19:	mov    rax,QWORD PTR [rcx+0x8]
   140001f1d:	mov    rcx,QWORD PTR [r13+0x40]
   140001f21:	mov    rdx,QWORD PTR [rdi+rax*1]
   140001f25:	lea    rax,[rbp-0x69]
   140001f29:	mov    QWORD PTR [rsp+0x20],rax
   140001f2e:	call   QWORD PTR [rip+0xb27c]        # 0x14000d1b0
   140001f34:	mov    esi,eax
   140001f36:	test   eax,eax
   140001f38:	jle    0x140001f43
   140001f3a:	movzx  esi,ax
   140001f3d:	or     esi,0x80070000
   140001f43:	lea    eax,[rsi+rbx*1]
   140001f46:	test   ebx,eax
   140001f48:	je     0x1400020b4
   140001f4e:	xor    ebx,ebx
   140001f50:	lea    rdx,[rip+0xbb09]        # 0x14000da60
   140001f57:	mov    QWORD PTR [rbp-0x59],rbx
   140001f5b:	lea    ecx,[rbx+0x48]
   140001f5e:	call   0x140004a7c
   140001f63:	mov    rdi,rax
   140001f66:	test   rax,rax
   140001f69:	je     0x140005815
   140001f6f:	mov    rsi,QWORD PTR [rip+0x10e12]        # 0x140012d88
   140001f76:	mov    QWORD PTR [rax+0x28],0x1
   140001f7e:	lea    rax,[rip+0xba83]        # 0x14000da08
   140001f85:	mov    QWORD PTR [rdi],rax
   140001f88:	lea    rax,[rip+0xb9c9]        # 0x14000d958
   140001f8f:	mov    QWORD PTR [rdi+0x8],rax
   140001f93:	lea    rax,[rip+0xba36]        # 0x14000d9d0
   140001f9a:	mov    QWORD PTR [rdi+0x10],rax
   140001f9e:	lea    rax,[rip+0xb94b]        # 0x14000d8f0
   140001fa5:	mov    QWORD PTR [rdi+0x18],rax
   140001fa9:	test   rsi,rsi
   140001fac:	jne    0x1400057c4
   140001fb2:	mov    BYTE PTR [rdi+0x30],0x0
   140001fb6:	lea    rax,[rip+0xb9bb]        # 0x14000d978
   140001fbd:	mov    QWORD PTR [rdi],rax
   140001fc0:	xor    edx,edx
   140001fc2:	lea    rax,[rip+0xb98f]        # 0x14000d958
   140001fc9:	mov    QWORD PTR [rbp-0x59],rdi
   140001fcd:	mov    QWORD PTR [rdi+0x8],rax
   140001fd1:	lea    rax,[rip+0xb948]        # 0x14000d920
   140001fd8:	mov    QWORD PTR [rdi+0x10],rax
   140001fdc:	lea    rax,[rip+0xb90d]        # 0x14000d8f0
   140001fe3:	mov    QWORD PTR [rdi+0x18],rax
   140001fe7:	mov    QWORD PTR [rdi+0x38],rdx
   140001feb:	mov    QWORD PTR [rdi+0x40],rdx
   140001fef:	mov    rax,QWORD PTR [r13+0x10]
   140001ff3:	cmp    DWORD PTR [rax],0x6
   140001ff6:	je     0x1400057df
   140001ffc:	xor    cl,cl
   140001ffe:	mov    rax,QWORD PTR [rbp-0x69]
   140002002:	mov    esi,edx
   140002004:	mov    QWORD PTR [rbp-0x69],rdx
   140002008:	mov    QWORD PTR [rdi+0x38],rax
   14000200c:	mov    BYTE PTR [rdi+0x30],cl
   14000200f:	mov    rax,QWORD PTR [rdi]
   140002012:	mov    rbx,QWORD PTR [rax+0x8]
   140002016:	lea    rax,[rip+0x1493]        # 0x1400034b0
   14000201d:	cmp    rbx,rax
   140002020:	jne    0x1400057e6
   140002026:	mov    rcx,rdi
   140002029:	call   0x1400034b0
   14000202e:	mov    rbx,QWORD PTR [r15]
   140002031:	mov    QWORD PTR [r15],rdi
   140002034:	test   rbx,rbx
   140002037:	jne    0x1400057fa
   14000203d:	mov    rbx,QWORD PTR [rbp-0x59]
   140002041:	test   rbx,rbx
   140002044:	je     0x14000206d
   140002046:	mov    rax,QWORD PTR [rbx]
   140002049:	mov    QWORD PTR [rbp-0x59],0x0
   140002051:	mov    rdi,QWORD PTR [rax+0x10]
   140002055:	lea    rax,[rip+0x1484]        # 0x1400034e0
   14000205c:	cmp    rdi,rax
   14000205f:	jne    0x14000581f
   140002065:	mov    rcx,rbx
   140002068:	call   0x1400034e0
   14000206d:	mov    rax,QWORD PTR [rbp-0x69]
   140002071:	test   rax,rax
   140002074:	je     0x140001d29
   14000207a:	jmp    0x140005833
   14000207f:	mov    BYTE PTR [r15],0x1
   140002083:	jmp    0x140001d29
   140002088:	movzx  esi,ax
   14000208b:	or     esi,0x80070000
   140002091:	jmp    0x140001ced
   140002096:	mov    r15d,0x8007000d
   14000209c:	cmp    esi,0x80070002
   1400020a2:	jne    0x140005862
   1400020a8:	mov    BYTE PTR [rbx+r12*1],0x0
   1400020ad:	xor    esi,esi
   1400020af:	jmp    0x140001d2f
   1400020b4:	cmp    esi,0x80070002
   1400020ba:	je     0x140001f4e
   1400020c0:	jmp    0x14000206d
   1400020c2:	lea    rax,[rbp-0x49]
   1400020c6:	mov    r9d,0x20019
   1400020cc:	xor    r8d,r8d
   1400020cf:	mov    QWORD PTR [rsp+0x20],rax
   1400020d4:	lea    rdx,[rip+0xbb95]        # 0x14000dc70
   1400020db:	mov    rcx,0xffffffff80000002
   1400020e2:	call   QWORD PTR [rip+0xb0c8]        # 0x14000d1b0
   1400020e8:	test   eax,eax
   1400020ea:	je     0x140005691
   1400020f0:	mov    DWORD PTR [rip+0x10a8e],0x2        # 0x140012b88
   1400020fa:	jmp    0x140001c72
   1400020ff:	nop
   140002100:	adc    BYTE PTR [rbp+0x0],0x0
   140002104:	cdq    
   140002105:	push   rbp
   140002106:	add    BYTE PTR [rax],al
   140002108:	mov    dl,0x55
   14000210a:	add    BYTE PTR [rax],al
   14000210c:	retf   
   14000210d:	push   rbp
   14000210e:	add    BYTE PTR [rax],al
   140002110:	in     al,0x55
   140002112:	add    BYTE PTR [rax],al
   140002114:	(bad)  
   140002115:	(bad)  
   140002116:	add    BYTE PTR [rax],al
   140002118:	(bad)  
   140002119:	push   rsi
   14000211a:	add    BYTE PTR [rax],al
   14000211c:	rex push rsi
   14000211e:	add    BYTE PTR [rax],al
   140002120:	cmp    BYTE PTR [rip+0x1be90000],bl        # 0x15be92126
   140002126:	add    BYTE PTR [rax],al
   140002128:	cs push rdi
   14000212a:	add    BYTE PTR [rax],al
   14000212c:	test   eax,0x4700001e
   140002131:	push   rdi
   140002132:	add    BYTE PTR [rax],al
   140002134:	cmp    BYTE PTR [rip+0x57850000],bl        # 0x19785213a
   14000213a:	add    BYTE PTR [rax],al
   14000213c:	in     eax,dx
   14000213d:	(bad)  
   14000213e:	add    BYTE PTR [rax],al
   140002140:	int3   
   140002141:	int3   
   140002142:	int3   
   140002143:	int3   
   140002144:	int3   
   140002145:	int3   
   140002146:	int3   
   140002147:	int3   
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	rex push rbp
   140002152:	push   rbx
   140002153:	push   rsi
   140002154:	push   rdi
   140002155:	push   r13
   140002157:	push   r14
   140002159:	push   r15
   14000215b:	lea    rbp,[rsp-0x27]
   140002160:	sub    rsp,0xa0
   140002167:	mov    rax,QWORD PTR [rcx+0x40]
   14000216b:	xor    r13d,r13d
   14000216e:	xor    sil,sil
   140002171:	mov    QWORD PTR [rsp+0x98],r12
   140002179:	mov    QWORD PTR [rbp-0x39],r13
   14000217d:	mov    r15,rcx
   140002180:	mov    ebx,r13d
   140002183:	test   rax,rax
   140002186:	jne    0x140002196
   140002188:	mov    rax,QWORD PTR [rcx+0x10]
   14000218c:	cmp    QWORD PTR [rax+0x10],rbx
   140002190:	jne    0x1400058c0
   140002196:	mov    rax,QWORD PTR [r15+0x40]
   14000219a:	mov    ecx,0x1
   14000219f:	test   rax,rax
   1400021a2:	movzx  esi,sil
   1400021a6:	cmovne esi,ecx
   1400021a9:	mov    r12,QWORD PTR [rsp+0x98]
   1400021b1:	test   ebx,ebx
   1400021b3:	js     0x14000232d
   1400021b9:	test   sil,sil
   1400021bc:	jne    0x140002313
   1400021c2:	mov    rax,QWORD PTR [r15]
   1400021c5:	mov    QWORD PTR [rbp-0x31],r13
   1400021c9:	mov    QWORD PTR [rbp+0x7f],r13
   1400021cd:	mov    DWORD PTR [rbp+0x67],0x4
   1400021d4:	mov    rbx,QWORD PTR [rax+0x40]
   1400021d8:	lea    rax,[rip+0x331]        # 0x140002510
   1400021df:	cmp    rbx,rax
   1400021e2:	jne    0x14000599b
   1400021e8:	lea    r9,[rbp+0x67]
   1400021ec:	mov    BYTE PTR [rsp+0x20],r13b
   1400021f1:	lea    r8,[rbp+0x7f]
   1400021f5:	mov    rcx,r15
   1400021f8:	lea    rdx,[rbp-0x31]
   1400021fc:	call   0x140002510
   140002201:	test   eax,eax
   140002203:	js     0x14000232f
   140002209:	mov    eax,DWORD PTR [rbp+0x67]
   14000220c:	lea    rcx,[rbp-0x29]
   140002210:	mov    rdx,QWORD PTR [rbp+0x7f]
   140002214:	add    eax,0xfffffffc
   140002217:	mov    rbx,QWORD PTR [rbp-0x31]
   14000221b:	mov    DWORD PTR [r15+0x48],eax
   14000221f:	mov    QWORD PTR [rbp+0x77],r13
   140002223:	call   QWORD PTR [rip+0xb257]        # 0x14000d480
   140002229:	lea    rax,[rbp-0x29]
   14000222d:	mov    DWORD PTR [rbp-0x19],0x30
   140002234:	xorps  xmm0,xmm0
   140002237:	mov    QWORD PTR [rbp-0x9],rax
   14000223b:	lea    r8,[rbp-0x19]
   14000223f:	mov    QWORD PTR [rbp-0x11],rbx
   140002243:	mov    edx,0x20119
   140002248:	mov    DWORD PTR [rbp-0x1],0x40
   14000224f:	lea    rcx,[rbp+0x77]
   140002253:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   140002258:	call   QWORD PTR [rip+0xb22a]        # 0x14000d488
   14000225e:	mov    ecx,eax
   140002260:	call   QWORD PTR [rip+0xb1fa]        # 0x14000d460
   140002266:	mov    ebx,eax
   140002268:	test   eax,eax
   14000226a:	jg     0x1400059c0
   140002270:	test   ebx,ebx
   140002272:	js     0x1400022fc
   140002278:	mov    eax,DWORD PTR [rbp+0x67]
   14000227b:	mov    edx,0x3
   140002280:	mov    rcx,QWORD PTR [rbp+0x77]
   140002284:	add    eax,eax
   140002286:	mov    r8,QWORD PTR [rbp+0x7f]
   14000228a:	mov    rdi,QWORD PTR [rbp+0x7f]
   14000228e:	mov    DWORD PTR [rbp+0x6f],eax
   140002291:	lea    rax,[rbp+0x6f]
   140002295:	mov    r9d,DWORD PTR [rbp+0x6f]
   140002299:	mov    QWORD PTR [rsp+0x20],rax
   14000229e:	call   QWORD PTR [rip+0xb1ec]        # 0x14000d490
   1400022a4:	mov    ecx,eax
   1400022a6:	call   QWORD PTR [rip+0xb1b4]        # 0x14000d460
   1400022ac:	mov    ebx,eax
   1400022ae:	test   eax,eax
   1400022b0:	jg     0x1400059ce
   1400022b6:	test   ebx,ebx
   1400022b8:	js     0x1400022fc
   1400022ba:	mov    rax,QWORD PTR [r15]
   1400022bd:	lea    rsi,[rdi+0x4]
   1400022c1:	mov    ebx,DWORD PTR [rdi]
   1400022c3:	shr    ebx,1
   1400022c5:	mov    rdi,QWORD PTR [rax+0x48]
   1400022c9:	lea    rax,[rip+0xe0]        # 0x1400023b0
   1400022d0:	cmp    rdi,rax
   1400022d3:	jne    0x1400059dc
   1400022d9:	mov    r9b,0x1
   1400022dc:	mov    r8d,ebx
   1400022df:	mov    rdx,rsi
   1400022e2:	mov    rcx,r15
   1400022e5:	call   0x1400023b0
   1400022ea:	mov    ebx,eax
   1400022ec:	test   eax,eax
   1400022ee:	js     0x1400022fc
   1400022f0:	mov    rax,QWORD PTR [rbp+0x77]
   1400022f4:	mov    QWORD PTR [rbp+0x77],r13
   1400022f8:	mov    QWORD PTR [r15+0x40],rax
   1400022fc:	mov    rcx,QWORD PTR [rbp+0x7f]
   140002300:	call   QWORD PTR [rip+0xad32]        # 0x14000d038
   140002306:	mov    rax,QWORD PTR [rbp+0x77]
   14000230a:	test   rax,rax
   14000230d:	jne    0x1400059f9
   140002313:	test   ebx,ebx
   140002315:	js     0x14000232d
   140002317:	mov    rax,QWORD PTR [r15+0x40]
   14000231b:	test   rax,rax
   14000231e:	je     0x14000232d
   140002320:	mov    rax,QWORD PTR [rbp-0x39]
   140002324:	test   rax,rax
   140002327:	jne    0x140005a0c
   14000232d:	mov    eax,ebx
   14000232f:	add    rsp,0xa0
   140002336:	pop    r15
   140002338:	pop    r14
   14000233a:	pop    r13
   14000233c:	pop    rdi
   14000233d:	pop    rsi
   14000233e:	pop    rbx
   14000233f:	pop    rbp
   140002340:	ret    
   140002341:	int3   
   140002342:	int3   
   140002343:	int3   
   140002344:	int3   
   140002345:	int3   
   140002346:	int3   
   140002347:	int3   
   140002348:	int3   
   140002349:	int3   
   14000234a:	int3   
   14000234b:	int3   
   14000234c:	int3   
   14000234d:	int3   
   14000234e:	int3   
   14000234f:	int3   
   140002350:	xchg   ax,ax
   140002352:	add    DWORD PTR [rcx+0x4c],0xffffffff
   140002356:	jne    0x14000235f
   140002358:	mov    rax,QWORD PTR [rcx+0x8]
   14000235c:	dec    DWORD PTR [rax+0xc]
   14000235f:	mov    rax,QWORD PTR [rcx+0x10]
   140002363:	cmp    DWORD PTR [rax+0x4],0xffffffff
   140002367:	je     0x14000236f
   140002369:	mov    rcx,QWORD PTR [rcx+0x18]
   14000236d:	jmp    0x140002352
   14000236f:	ret    
   140002370:	int3   
   140002371:	int3   
   140002372:	int3   
   140002373:	int3   
   140002374:	int3   
   140002375:	int3   
   140002376:	int3   
   140002377:	int3   
   140002378:	int3   
   140002379:	int3   
   14000237a:	int3   
   14000237b:	int3   
   14000237c:	int3   
   14000237d:	int3   
   14000237e:	int3   
   14000237f:	int3   
   140002380:	xchg   ax,ax
   140002382:	inc    DWORD PTR [rcx+0x4c]
   140002385:	cmp    DWORD PTR [rcx+0x4c],0x1
   140002389:	jne    0x140002392
   14000238b:	mov    rax,QWORD PTR [rcx+0x8]
   14000238f:	inc    DWORD PTR [rax+0xc]
   140002392:	mov    rax,QWORD PTR [rcx+0x10]
   140002396:	cmp    DWORD PTR [rax+0x4],0xffffffff
   14000239a:	je     0x1400023a2
   14000239c:	mov    rcx,QWORD PTR [rcx+0x18]
   1400023a0:	jmp    0x140002382
   1400023a2:	ret    
   1400023a3:	int3   
   1400023a4:	int3   
   1400023a5:	int3   
   1400023a6:	int3   
   1400023a7:	int3   
   1400023a8:	int3   
   1400023a9:	int3   
   1400023aa:	int3   
   1400023ab:	int3   
   1400023ac:	int3   
   1400023ad:	int3   
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400023b5:	mov    QWORD PTR [rsp+0x10],rdx
   1400023ba:	push   rbp
   1400023bb:	push   rsi
   1400023bc:	push   rdi
   1400023bd:	sub    rsp,0x30
   1400023c1:	mov    rax,QWORD PTR [rcx]
   1400023c4:	movzx  esi,r9b
   1400023c8:	mov    edi,r8d
   1400023cb:	mov    rbx,rcx
   1400023ce:	mov    rbp,QWORD PTR [rax+0x20]
   1400023d2:	lea    rax,[rip+0x487]        # 0x140002860
   1400023d9:	cmp    rbp,rax
   1400023dc:	jne    0x140005a3c
   1400023e2:	movzx  edx,r9b
   1400023e6:	call   0x140002860
   1400023eb:	mov    rax,QWORD PTR [rax]
   1400023ee:	test   rax,rax
   1400023f1:	jne    0x1400024f2
   1400023f7:	mov    rcx,QWORD PTR [rbx+0x20]
   1400023fb:	call   QWORD PTR [rip+0xaeff]        # 0x14000d300
   140002401:	mov    esi,eax
   140002403:	cmp    edi,eax
   140002405:	jbe    0x140005a54
   14000240b:	mov    rcx,QWORD PTR [rbx+0x18]
   14000240f:	mov    rdx,rdi
   140002412:	mov    rbp,QWORD PTR [rsp+0x58]
   140002417:	sub    rdx,rsi
   14000241a:	lea    rax,[rdx*2+0x0]
   140002422:	mov    rdx,QWORD PTR [rcx+0x10]
   140002426:	add    rax,rbp
   140002429:	mov    QWORD PTR [rsp+0x50],rax
   14000242e:	mov    rax,QWORD PTR [rdx+0x20]
   140002432:	test   rax,rax
   140002435:	je     0x1400024c6
   14000243b:	cmp    BYTE PTR [rax+0x4],0x0
   14000243f:	je     0x1400024c6
   140002445:	mov    DWORD PTR [rsp+0x68],0x0
   14000244d:	mov    rcx,QWORD PTR [rbx+0x20]
   140002451:	xor    edx,edx
   140002453:	call   QWORD PTR [rip+0xae5f]        # 0x14000d2b8
   140002459:	mov    ecx,DWORD PTR [rsp+0x68]
   14000245d:	mov    r9d,esi
   140002460:	mov    DWORD PTR [rsp+0x20],ecx
   140002464:	mov    r8,rax
   140002467:	mov    rcx,QWORD PTR [rsp+0x50]
   14000246c:	mov    edx,esi
   14000246e:	call   QWORD PTR [rip+0xad74]        # 0x14000d1e8
   140002474:	cmp    eax,0x2
   140002477:	jne    0x1400024f6
   140002479:	mov    rax,QWORD PTR [rbx+0x10]
   14000247d:	sub    edi,esi
   14000247f:	mov    rbx,QWORD PTR [rbx+0x18]
   140002483:	movzx  ecx,BYTE PTR [rax+0x9]
   140002487:	mov    rax,QWORD PTR [rbx]
   14000248a:	mov    BYTE PTR [rsp+0x68],cl
   14000248e:	mov    rsi,QWORD PTR [rax+0x48]
   140002492:	lea    rax,[rip+0xffffffffffffff17]        # 0x1400023b0
   140002499:	cmp    rsi,rax
   14000249c:	je     0x1400024d3
   14000249e:	mov    rcx,rsi
   1400024a1:	call   QWORD PTR [rip+0xb011]        # 0x14000d4b8
   1400024a7:	movzx  r9d,BYTE PTR [rsp+0x68]
   1400024ad:	lea    r8d,[rdi-0x1]
   1400024b1:	mov    rdx,rbp
   1400024b4:	mov    rcx,rbx
   1400024b7:	call   rsi
   1400024b9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400024be:	add    rsp,0x30
   1400024c2:	pop    rdi
   1400024c3:	pop    rsi
   1400024c4:	pop    rbp
   1400024c5:	ret    
   1400024c6:	mov    DWORD PTR [rsp+0x68],0x1
   1400024ce:	jmp    0x14000244d
   1400024d3:	movzx  r9d,cl
   1400024d7:	lea    r8d,[rdi-0x1]
   1400024db:	mov    rcx,rbx
   1400024de:	mov    rdx,rbp
   1400024e1:	mov    rbx,QWORD PTR [rsp+0x60]
   1400024e6:	add    rsp,0x30
   1400024ea:	pop    rdi
   1400024eb:	pop    rsi
   1400024ec:	pop    rbp
   1400024ed:	jmp    0x1400023b0
   1400024f2:	xor    eax,eax
   1400024f4:	jmp    0x1400024b9
   1400024f6:	mov    eax,0x80070002
   1400024fb:	jmp    0x1400024b9
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	int3   
   140002501:	int3   
   140002502:	int3   
   140002503:	int3   
   140002504:	int3   
   140002505:	int3   
   140002506:	int3   
   140002507:	int3   
   140002508:	int3   
   140002509:	int3   
   14000250a:	int3   
   14000250b:	int3   
   14000250c:	int3   
   14000250d:	int3   
   14000250e:	int3   
   14000250f:	int3   
   140002510:	mov    QWORD PTR [rsp+0x20],rbx
   140002515:	mov    QWORD PTR [rsp+0x18],r8
   14000251a:	mov    QWORD PTR [rsp+0x8],rcx
   14000251f:	push   rbp
   140002520:	push   rsi
   140002521:	push   rdi
   140002522:	sub    rsp,0x30
   140002526:	xor    eax,eax
   140002528:	mov    rbp,rcx
   14000252b:	mov    QWORD PTR [rdx],rax
   14000252e:	mov    ecx,eax
   140002530:	mov    DWORD PTR [rsp+0x58],eax
   140002534:	mov    rdi,r9
   140002537:	mov    rsi,r8
   14000253a:	mov    rbx,rdx
   14000253d:	mov    rax,QWORD PTR [rbp+0x40]
   140002541:	test   rax,rax
   140002544:	jne    0x140005a5e
   14000254a:	mov    rax,QWORD PTR [rbp+0x10]
   14000254e:	cmp    QWORD PTR [rax+0x10],rcx
   140002552:	je     0x1400025ca
   140002554:	mov    rax,QWORD PTR [rbp+0x0]
   140002558:	mov    rsi,QWORD PTR [rax+0x8]
   14000255c:	lea    rax,[rip+0x40d]        # 0x140002970
   140002563:	cmp    rsi,rax
   140002566:	jne    0x140005a6d
   14000256c:	mov    rcx,rbp
   14000256f:	call   0x140002970
   140002574:	test   al,al
   140002576:	je     0x140005ac8
   14000257c:	mov    rax,QWORD PTR [rbp+0x0]
   140002580:	mov    rsi,QWORD PTR [rax+0x10]
   140002584:	lea    rax,[rip+0x3a5]        # 0x140002930
   14000258b:	cmp    rsi,rax
   14000258e:	jne    0x140005a81
   140002594:	mov    rcx,rbp
   140002597:	call   0x140002930
   14000259c:	mov    rcx,QWORD PTR [rbp+0x10]
   1400025a0:	test   eax,eax
   1400025a2:	jne    0x140005a95
   1400025a8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400025ac:	test   rcx,rcx
   1400025af:	je     0x140005ac8
   1400025b5:	mov    rax,QWORD PTR [rcx]
   1400025b8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400025bd:	test   rax,rax
   1400025c0:	jne    0x140005ab5
   1400025c6:	mov    ecx,DWORD PTR [rsp+0x58]
   1400025ca:	cmp    QWORD PTR [rbx],0x0
   1400025ce:	jne    0x140005ad2
   1400025d4:	mov    rcx,QWORD PTR [rbp+0x20]
   1400025d8:	call   QWORD PTR [rip+0xad22]        # 0x14000d300
   1400025de:	inc    eax
   1400025e0:	add    DWORD PTR [rdi],eax
   1400025e2:	mov    rax,QWORD PTR [rbp+0x10]
   1400025e6:	mov    rsi,QWORD PTR [rbp+0x18]
   1400025ea:	movzx  ecx,BYTE PTR [rax+0x9]
   1400025ee:	mov    rax,QWORD PTR [rsi]
   1400025f1:	mov    BYTE PTR [rsp+0x58],cl
   1400025f5:	mov    rbp,QWORD PTR [rax+0x40]
   1400025f9:	lea    rax,[rip+0x7c0]        # 0x140002dc0
   140002600:	cmp    rbp,rax
   140002603:	jne    0x1400027f4
   140002609:	mov    r8,QWORD PTR [rsp+0x60]
   14000260e:	mov    r9,rdi
   140002611:	mov    BYTE PTR [rsp+0x20],cl
   140002615:	mov    rdx,rbx
   140002618:	mov    rcx,rsi
   14000261b:	call   0x140002dc0
   140002620:	mov    ebp,eax
   140002622:	test   eax,eax
   140002624:	js     0x1400027e5
   14000262a:	mov    rax,QWORD PTR [rsp+0x60]
   14000262f:	mov    ebx,DWORD PTR [rdi]
   140002631:	mov    rsi,QWORD PTR [rax]
   140002634:	cmp    WORD PTR [rsi],0x0
   140002638:	je     0x14000283a
   14000263e:	xor    r10d,r10d
   140002641:	lea    rax,[rbx-0x1]
   140002645:	mov    ebp,r10d
   140002648:	cmp    rax,0x7ffffffe
   14000264e:	ja     0x140005b38
   140002654:	test   ebp,ebp
   140002656:	js     0x140005b47
   14000265c:	mov    rcx,rbx
   14000265f:	mov    rax,rsi
   140002662:	mov    ebp,r10d
   140002665:	test   rbx,rbx
   140002668:	je     0x140005b42
   14000266e:	xchg   ax,ax
   140002670:	cmp    WORD PTR [rax],bp
   140002673:	je     0x140002684
   140002675:	add    rax,0x2
   140002679:	sub    rcx,0x1
   14000267d:	jne    0x140002670
   14000267f:	jmp    0x140005b42
   140002684:	test   rcx,rcx
   140002687:	je     0x140005b42
   14000268d:	mov    rax,rbx
   140002690:	sub    rax,rcx
   140002693:	test   ebp,ebp
   140002695:	js     0x14000283a
   14000269b:	mov    rcx,rbx
   14000269e:	lea    r8,[rsi+rax*2]
   1400026a2:	sub    rcx,rax
   1400026a5:	mov    ebp,r10d
   1400026a8:	cmp    rcx,0x1
   1400026ac:	jbe    0x140005b4f
   1400026b2:	mov    rdx,rcx
   1400026b5:	mov    r9,r8
   1400026b8:	test   rcx,rcx
   1400026bb:	je     0x140005b77
   1400026c1:	mov    r11d,0x7ffffffe
   1400026c7:	lea    rdi,[rip+0xb52a]        # 0x14000dbf8
   1400026ce:	sub    r11,rcx
   1400026d1:	sub    rdi,r8
   1400026d4:	lea    rax,[rdx+r11*1]
   1400026d8:	test   rax,rax
   1400026db:	je     0x1400026eb
   1400026dd:	movzx  eax,WORD PTR [rdi+r9*1]
   1400026e2:	test   ax,ax
   1400026e5:	jne    0x140002820
   1400026eb:	test   rdx,rdx
   1400026ee:	je     0x140005b77
   1400026f4:	mov    edx,0x80000000
   1400026f9:	lea    r8,[r8+r10*2]
   1400026fd:	xor    edi,edi
   1400026ff:	sub    rcx,r10
   140002702:	mov    WORD PTR [r9],di
   140002706:	lea    eax,[rdx+rbp*1]
   140002709:	test   edx,eax
   14000270b:	je     0x140002841
   140002711:	mov    rsi,r8
   140002714:	mov    rbx,rcx
   140002717:	test   ebp,ebp
   140002719:	js     0x140005bbb
   14000271f:	mov    rcx,QWORD PTR [rsp+0x50]
   140002724:	xor    edx,edx
   140002726:	mov    rcx,QWORD PTR [rcx+0x20]
   14000272a:	call   QWORD PTR [rip+0xab88]        # 0x14000d2b8
   140002730:	xor    r10d,r10d
   140002733:	lea    rcx,[rbx-0x1]
   140002737:	mov    r9,rax
   14000273a:	mov    ebp,r10d
   14000273d:	cmp    rcx,0x7ffffffe
   140002744:	ja     0x140005b88
   14000274a:	test   ebp,ebp
   14000274c:	js     0x140005ba5
   140002752:	mov    rax,rbx
   140002755:	mov    rcx,rsi
   140002758:	mov    ebp,r10d
   14000275b:	test   rbx,rbx
   14000275e:	je     0x140005ba0
   140002764:	cmp    WORD PTR [rcx],bp
   140002767:	jne    0x140005b92
   14000276d:	test   rax,rax
   140002770:	je     0x140005ba0
   140002776:	mov    rdx,rbx
   140002779:	sub    rdx,rax
   14000277c:	test   ebp,ebp
   14000277e:	js     0x140002852
   140002784:	mov    r8,rbx
   140002787:	lea    rax,[rsi+rdx*2]
   14000278b:	mov    ebp,r10d
   14000278e:	sub    r8,rdx
   140002791:	je     0x140005bad
   140002797:	add    rdx,0x7ffffffe
   14000279e:	mov    rcx,r8
   1400027a1:	sub    rcx,rbx
   1400027a4:	add    rdx,rcx
   1400027a7:	sub    r9,rax
   1400027aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400027b0:	test   rdx,rdx
   1400027b3:	je     0x1400027d4
   1400027b5:	movzx  ecx,WORD PTR [rax+r9*1]
   1400027ba:	test   cx,cx
   1400027bd:	je     0x1400027d4
   1400027bf:	mov    WORD PTR [rax],cx
   1400027c2:	dec    rdx
   1400027c5:	add    rax,0x2
   1400027c9:	sub    r8,0x1
   1400027cd:	jne    0x1400027b0
   1400027cf:	jmp    0x140005bad
   1400027d4:	test   r8,r8
   1400027d7:	je     0x140005bad
   1400027dd:	mov    WORD PTR [rax],r10w
   1400027e1:	test   ebp,ebp
   1400027e3:	js     0x140002852
   1400027e5:	mov    eax,ebp
   1400027e7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400027ec:	add    rsp,0x30
   1400027f0:	pop    rdi
   1400027f1:	pop    rsi
   1400027f2:	pop    rbp
   1400027f3:	ret    
   1400027f4:	lea    rax,[rip+0xfffffffffffffd15]        # 0x140002510
   1400027fb:	cmp    rbp,rax
   1400027fe:	jne    0x140005b10
   140002804:	mov    r8,QWORD PTR [rsp+0x60]
   140002809:	mov    r9,rdi
   14000280c:	mov    BYTE PTR [rsp+0x20],cl
   140002810:	mov    rdx,rbx
   140002813:	mov    rcx,rsi
   140002816:	call   0x140002510
   14000281b:	jmp    0x140002620
   140002820:	mov    WORD PTR [r9],ax
   140002824:	inc    r10
   140002827:	add    r9,0x2
   14000282b:	sub    rdx,0x1
   14000282f:	jne    0x1400026d4
   140002835:	jmp    0x140005b77
   14000283a:	xor    edi,edi
   14000283c:	jmp    0x140002717
   140002841:	cmp    ebp,0x8007007a
   140002847:	je     0x140002711
   14000284d:	jmp    0x140002717
   140002852:	xor    edi,edi
   140002854:	jmp    0x140005bbb
   140002859:	int3   
   14000285a:	int3   
   14000285b:	int3   
   14000285c:	int3   
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	lea    rax,[rcx+0x40]
   140002864:	ret    
   140002865:	int3   
   140002866:	int3   
   140002867:	int3   
   140002868:	int3   
   140002869:	int3   
   14000286a:	int3   
   14000286b:	int3   
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	mov    QWORD PTR [rsp+0x8],rbx
   140002875:	mov    QWORD PTR [rsp+0x10],rbp
   14000287a:	mov    QWORD PTR [rsp+0x18],rsi
   14000287f:	mov    QWORD PTR [rsp+0x20],rdi
   140002884:	push   r14
   140002886:	sub    rsp,0x20
   14000288a:	mov    rbx,QWORD PTR [rcx+0x8]
   14000288e:	mov    r14,r8
   140002891:	mov    rbp,rdx
   140002894:	mov    rdi,rcx
   140002897:	mov    rbx,QWORD PTR [rbx]
   14000289a:	test   rbx,rbx
   14000289d:	je     0x1400028e5
   14000289f:	mov    r8,QWORD PTR [rbx-0x10]
   1400028a3:	lea    rsi,[rbx-0x28]
   1400028a7:	test   r8,r8
   1400028aa:	je     0x1400028d8
   1400028ac:	cmp    rdi,r8
   1400028af:	je     0x140005bd2
   1400028b5:	mov    rcx,QWORD PTR [rdi+0x18]
   1400028b9:	lea    r9,[r8+0x20]
   1400028bd:	mov    r8,QWORD PTR [r8+0x18]
   1400028c1:	lea    rdx,[rdi+0x20]
   1400028c5:	call   0x140003480
   1400028ca:	test   eax,eax
   1400028cc:	je     0x140005bff
   1400028d2:	js     0x140005be4
   1400028d8:	mov    rbx,QWORD PTR [rbx+0x10]
   1400028dc:	test   rbx,rbx
   1400028df:	jne    0x140005bf1
   1400028e5:	mov    rax,QWORD PTR [rdi]
   1400028e8:	mov    rbx,QWORD PTR [rax+0x30]
   1400028ec:	lea    rax,[rip+0x95d]        # 0x140003250
   1400028f3:	cmp    rbx,rax
   1400028f6:	jne    0x140005c19
   1400028fc:	mov    r8,r14
   1400028ff:	mov    rdx,rbp
   140002902:	mov    rcx,rdi
   140002905:	call   0x140003250
   14000290a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000290f:	mov    rbp,QWORD PTR [rsp+0x38]
   140002914:	mov    rsi,QWORD PTR [rsp+0x40]
   140002919:	mov    rdi,QWORD PTR [rsp+0x48]
   14000291e:	add    rsp,0x20
   140002922:	pop    r14
   140002924:	ret    
   140002925:	int3   
   140002926:	int3   
   140002927:	int3   
   140002928:	int3   
   140002929:	int3   
   14000292a:	int3   
   14000292b:	int3   
   14000292c:	int3   
   14000292d:	int3   
   14000292e:	int3   
   14000292f:	int3   
   140002930:	mov    QWORD PTR [rsp+0x8],rbx
   140002935:	push   rdi
   140002936:	sub    rsp,0x20
   14000293a:	mov    rbx,QWORD PTR [rcx+0x18]
   14000293e:	mov    rax,QWORD PTR [rbx]
   140002941:	mov    rdi,QWORD PTR [rax+0x10]
   140002945:	lea    rax,[rip+0x454]        # 0x140002da0
   14000294c:	cmp    rdi,rax
   14000294f:	jne    0x140005c34
   140002955:	mov    rcx,rbx
   140002958:	call   0x140002da0
   14000295d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002962:	add    rsp,0x20
   140002966:	pop    rdi
   140002967:	ret    
   140002968:	int3   
   140002969:	int3   
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	mov    QWORD PTR [rsp+0x8],rbx
   140002975:	push   rdi
   140002976:	sub    rsp,0x20
   14000297a:	mov    rbx,QWORD PTR [rcx+0x18]
   14000297e:	mov    rax,QWORD PTR [rbx]
   140002981:	mov    rdi,QWORD PTR [rax+0x8]
   140002985:	lea    rax,[rip+0x424]        # 0x140002db0
   14000298c:	cmp    rdi,rax
   14000298f:	jne    0x140005c48
   140002995:	mov    rcx,rbx
   140002998:	call   0x140002db0
   14000299d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029a2:	add    rsp,0x20
   1400029a6:	pop    rdi
   1400029a7:	ret    
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	mov    r11,rsp
   1400029b3:	push   rbp
   1400029b4:	push   rbx
   1400029b5:	push   rsi
   1400029b6:	push   rdi
   1400029b7:	lea    rbp,[r11-0x48]
   1400029bb:	sub    rsp,0x128
   1400029c2:	mov    rax,QWORD PTR [rip+0xf63f]        # 0x140012008
   1400029c9:	xor    rax,rsp
   1400029cc:	mov    QWORD PTR [rbp+0x0],rax
   1400029d0:	mov    QWORD PTR [r11+0x18],r12
   1400029d4:	xorps  xmm0,xmm0
   1400029d7:	mov    QWORD PTR [r11-0x28],r13
   1400029db:	mov    r12,rdx
   1400029de:	mov    QWORD PTR [r11-0x30],r14
   1400029e2:	xor    r13b,r13b
   1400029e5:	xor    r14d,r14d
   1400029e8:	mov    QWORD PTR [rsp+0x38],rdx
   1400029ed:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   1400029f2:	mov    edi,r14d
   1400029f5:	mov    QWORD PTR [rbp-0x40],r14
   1400029f9:	mov    QWORD PTR [rbp-0x38],r14
   1400029fd:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140002a02:	mov    QWORD PTR [rbp-0x20],r14
   140002a06:	mov    DWORD PTR [rbp-0x18],r14d
   140002a0a:	mov    QWORD PTR [rsp+0x28],r14
   140002a0f:	mov    QWORD PTR [rsp+0x30],r14
   140002a14:	test   rcx,rcx
   140002a17:	je     0x140005d97
   140002a1d:	mov    QWORD PTR [rsp+0x20],r14
   140002a22:	or     rax,0xffffffffffffffff
   140002a26:	inc    rax
   140002a29:	cmp    WORD PTR [rcx+rax*2],di
   140002a2d:	jne    0x140002a26
   140002a2f:	mov    ebx,0xffffffff
   140002a34:	cmp    rax,rbx
   140002a37:	ja     0x140005c5c
   140002a3d:	lea    r8,[rsp+0x20]
   140002a42:	mov    edx,eax
   140002a44:	call   QWORD PTR [rip+0xa8a6]        # 0x14000d2f0
   140002a4a:	mov    esi,eax
   140002a4c:	test   eax,eax
   140002a4e:	js     0x140002a65
   140002a50:	mov    rax,QWORD PTR [rsp+0x20]
   140002a55:	mov    rcx,QWORD PTR [rsp+0x30]
   140002a5a:	mov    QWORD PTR [rsp+0x30],rax
   140002a5f:	call   QWORD PTR [rip+0xa873]        # 0x14000d2d8
   140002a65:	test   esi,esi
   140002a67:	js     0x140002a8a
   140002a69:	lea    r8,[rsp+0x28]
   140002a6e:	mov    QWORD PTR [rbp-0x50],r14
   140002a72:	lea    rdx,[rsp+0x30]
   140002a77:	mov    r13b,0x1
   140002a7a:	lea    rcx,[rbp-0x50]
   140002a7e:	call   0x140001830
   140002a83:	mov    rdi,QWORD PTR [rsp+0x28]
   140002a88:	mov    esi,eax
   140002a8a:	mov    QWORD PTR [rsp+0x110],r15
   140002a92:	cmp    esi,0x80070002
   140002a98:	je     0x140005c66
   140002a9e:	test   esi,esi
   140002aa0:	js     0x140002c3d
   140002aa6:	mov    eax,DWORD PTR [rbp-0x38]
   140002aa9:	mov    r15d,r14d
   140002aac:	sub    eax,DWORD PTR [rbp-0x34]
   140002aaf:	mov    BYTE PTR [rsp+0x40],r14b
   140002ab4:	mov    QWORD PTR [rsp+0x48],r14
   140002ab9:	mov    BYTE PTR [rsp+0x58],r14b
   140002abe:	mov    QWORD PTR [rsp+0x60],r14
   140002ac3:	mov    BYTE PTR [rsp+0x68],r14b
   140002ac8:	mov    QWORD PTR [rsp+0x70],r14
   140002acd:	mov    BYTE PTR [rbp-0x80],r14b
   140002ad1:	mov    DWORD PTR [rbp-0x7c],r14d
   140002ad5:	mov    BYTE PTR [rbp-0x78],r14b
   140002ad9:	mov    DWORD PTR [rbp-0x74],r14d
   140002add:	mov    QWORD PTR [rbp-0x70],r14
   140002ae1:	mov    BYTE PTR [rbp-0x68],r14b
   140002ae5:	mov    QWORD PTR [rbp-0x60],r14
   140002ae9:	mov    BYTE PTR [rbp-0x58],r14b
   140002aed:	mov    DWORD PTR [rbp-0x54],r14d
   140002af1:	mov    DWORD PTR [rsp+0x28],r14d
   140002af6:	mov    DWORD PTR [rsp+0x20],r14d
   140002afb:	cmp    eax,0x10
   140002afe:	ja     0x140005c70
   140002b04:	mov    rax,QWORD PTR [rdi]
   140002b07:	mov    rbx,QWORD PTR [rax+0x28]
   140002b0b:	lea    rax,[rip+0xfffffffffffff63e]        # 0x140002150
   140002b12:	cmp    rbx,rax
   140002b15:	jne    0x140005ceb
   140002b1b:	mov    rcx,rdi
   140002b1e:	call   0x140002150
   140002b23:	mov    esi,eax
   140002b25:	test   eax,eax
   140002b27:	js     0x140002b4c
   140002b29:	lea    r9,[rsp+0x20]
   140002b2e:	mov    rcx,rdi
   140002b31:	lea    r8,[rsp+0x28]
   140002b36:	lea    rdx,[rsp+0x40]
   140002b3b:	call   0x140001b20
   140002b40:	mov    r15d,DWORD PTR [rsp+0x28]
   140002b45:	mov    esi,eax
   140002b47:	mov    r14d,DWORD PTR [rsp+0x20]
   140002b4c:	cmp    BYTE PTR [rbp-0x78],0x0
   140002b50:	je     0x140005d3b
   140002b56:	test   esi,esi
   140002b58:	js     0x140002b6e
   140002b5a:	test   r15b,0x20
   140002b5e:	jne    0x140005d3b
   140002b64:	test   r14b,0x20
   140002b68:	jne    0x140005cff
   140002b6e:	cmp    esi,0x80070002
   140002b74:	je     0x140005d3b
   140002b7a:	test   esi,esi
   140002b7c:	js     0x140002bcc
   140002b7e:	cmp    DWORD PTR [rbp-0x74],0x1
   140002b82:	jne    0x140005d3b
   140002b88:	test   r15b,0x2
   140002b8c:	jne    0x140005d09
   140002b92:	test   r14b,0x2
   140002b96:	jne    0x140005d13
   140002b9c:	cmp    DWORD PTR [rsp+0x50],0x0
   140002ba1:	jne    0x140005d3b
   140002ba7:	cmp    BYTE PTR [rbp-0x80],0x0
   140002bab:	je     0x140005d1d
   140002bb1:	mov    eax,DWORD PTR [rbp-0x7c]
   140002bb4:	mov    DWORD PTR [r12],eax
   140002bb8:	test   r15b,0x10
   140002bbc:	jne    0x140005d27
   140002bc2:	test   r14b,0x10
   140002bc6:	jne    0x140005d31
   140002bcc:	mov    rcx,QWORD PTR [rbp-0x60]
   140002bd0:	test   rcx,rcx
   140002bd3:	jne    0x140005d45
   140002bd9:	mov    rbx,QWORD PTR [rbp-0x70]
   140002bdd:	test   rbx,rbx
   140002be0:	je     0x140002c09
   140002be2:	mov    QWORD PTR [rbp-0x70],0x0
   140002bea:	mov    rax,QWORD PTR [rbx]
   140002bed:	mov    r14,QWORD PTR [rax+0x10]
   140002bf1:	lea    rax,[rip+0x8e8]        # 0x1400034e0
   140002bf8:	cmp    r14,rax
   140002bfb:	jne    0x140005d51
   140002c01:	mov    rcx,rbx
   140002c04:	call   0x1400034e0
   140002c09:	mov    rcx,QWORD PTR [rsp+0x70]
   140002c0e:	test   rcx,rcx
   140002c11:	je     0x140002c19
   140002c13:	call   QWORD PTR [rip+0xa6bf]        # 0x14000d2d8
   140002c19:	mov    rcx,QWORD PTR [rsp+0x60]
   140002c1e:	test   rcx,rcx
   140002c21:	jne    0x140005d66
   140002c27:	mov    rcx,QWORD PTR [rsp+0x48]
   140002c2c:	test   rcx,rcx
   140002c2f:	jne    0x140005d72
   140002c35:	mov    ebx,0xffffffff
   140002c3a:	xor    r14d,r14d
   140002c3d:	test   rdi,rdi
   140002c40:	je     0x140002c60
   140002c42:	add    DWORD PTR [rdi+0x4c],ebx
   140002c45:	jne    0x140002c4e
   140002c47:	mov    rax,QWORD PTR [rdi+0x8]
   140002c4b:	add    DWORD PTR [rax+0xc],ebx
   140002c4e:	mov    rax,QWORD PTR [rdi+0x10]
   140002c52:	cmp    DWORD PTR [rax+0x4],ebx
   140002c55:	je     0x140002c60
   140002c57:	mov    rcx,QWORD PTR [rdi+0x18]
   140002c5b:	call   0x140002350
   140002c60:	test   r13b,r13b
   140002c63:	je     0x140002d08
   140002c69:	mov    rcx,QWORD PTR [rbp-0x48]
   140002c6d:	mov    QWORD PTR [rbp-0x50],r14
   140002c71:	call   QWORD PTR [rip+0xa491]        # 0x14000d108
   140002c77:	mov    rax,QWORD PTR [rbp-0x40]
   140002c7b:	mov    QWORD PTR [rbp-0x48],r14
   140002c7f:	mov    QWORD PTR [rbp-0x30],r14
   140002c83:	mov    QWORD PTR [rsp+0x20],rax
   140002c88:	test   rax,rax
   140002c8b:	je     0x140002cfc
   140002c8d:	lea    r15,[rip+0x55c]        # 0x1400031f0
   140002c94:	lea    r12,[rip+0x775]        # 0x140003410
   140002c9b:	lea    r13,[rip+0x25e]        # 0x140002f00
   140002ca2:	lea    rdx,[rsp+0x20]
   140002ca7:	mov    rcx,rax
   140002caa:	lea    rbx,[rax-0x28]
   140002cae:	call   QWORD PTR [rip+0xa7bc]        # 0x14000d470
   140002cb4:	test   rbx,rbx
   140002cb7:	je     0x140002cf2
   140002cb9:	mov    rax,QWORD PTR [rbx]
   140002cbc:	mov    rdi,QWORD PTR [rax]
   140002cbf:	cmp    rdi,r15
   140002cc2:	je     0x140002ce5
   140002cc4:	cmp    rdi,r12
   140002cc7:	je     0x140002d7a
   140002ccd:	cmp    rdi,r13
   140002cd0:	jne    0x140005d7e
   140002cd6:	mov    edx,0x1
   140002cdb:	mov    rcx,rbx
   140002cde:	call   0x140002f00
   140002ce3:	jmp    0x140002cf2
   140002ce5:	mov    edx,0x1
   140002cea:	mov    rcx,rbx
   140002ced:	call   0x1400031f0
   140002cf2:	mov    rax,QWORD PTR [rsp+0x20]
   140002cf7:	test   rax,rax
   140002cfa:	jne    0x140002ca2
   140002cfc:	mov    QWORD PTR [rbp-0x40],r14
   140002d00:	mov    QWORD PTR [rbp-0x38],0x0
   140002d08:	mov    rcx,QWORD PTR [rsp+0x30]
   140002d0d:	mov    r15,QWORD PTR [rsp+0x110]
   140002d15:	test   rcx,rcx
   140002d18:	je     0x140002d20
   140002d1a:	call   QWORD PTR [rip+0xa5b8]        # 0x14000d2d8
   140002d20:	mov    rcx,QWORD PTR [rbp-0x48]
   140002d24:	mov    QWORD PTR [rbp-0x50],r14
   140002d28:	call   QWORD PTR [rip+0xa3da]        # 0x14000d108
   140002d2e:	mov    rax,QWORD PTR [rbp-0x40]
   140002d32:	mov    r13,QWORD PTR [rsp+0x120]
   140002d3a:	mov    r12,QWORD PTR [rsp+0x160]
   140002d42:	mov    QWORD PTR [rbp-0x48],r14
   140002d46:	mov    QWORD PTR [rbp-0x30],r14
   140002d4a:	mov    r14,QWORD PTR [rsp+0x118]
   140002d52:	mov    QWORD PTR [rsp+0x20],rax
   140002d57:	test   rax,rax
   140002d5a:	jne    0x140005da1
   140002d60:	mov    eax,esi
   140002d62:	mov    rcx,QWORD PTR [rbp+0x0]
   140002d66:	xor    rcx,rsp
   140002d69:	call   0x140004450
   140002d6e:	add    rsp,0x128
   140002d75:	pop    rdi
   140002d76:	pop    rsi
   140002d77:	pop    rbx
   140002d78:	pop    rbp
   140002d79:	ret    
   140002d7a:	mov    edx,0x1
   140002d7f:	mov    rcx,rbx
   140002d82:	call   0x140003410
   140002d87:	jmp    0x140002cf2
   140002d8c:	int3   
   140002d8d:	int3   
   140002d8e:	int3   
   140002d8f:	int3   
   140002d90:	int3   
   140002d91:	int3   
   140002d92:	int3   
   140002d93:	int3   
   140002d94:	int3   
   140002d95:	int3   
   140002d96:	int3   
   140002d97:	int3   
   140002d98:	int3   
   140002d99:	int3   
   140002d9a:	int3   
   140002d9b:	int3   
   140002d9c:	int3   
   140002d9d:	int3   
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	mov    eax,DWORD PTR [rcx+0x54]
   140002da3:	ret    
   140002da4:	int3   
   140002da5:	int3   
   140002da6:	int3   
   140002da7:	int3   
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	mov    al,BYTE PTR [rcx+0x50]
   140002db3:	ret    
   140002db4:	int3   
   140002db5:	int3   
   140002db6:	int3   
   140002db7:	int3   
   140002db8:	int3   
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	mov    QWORD PTR [rsp+0x8],rbx
   140002dc5:	mov    QWORD PTR [rsp+0x10],rbp
   140002dca:	mov    QWORD PTR [rsp+0x18],rsi
   140002dcf:	push   rdi
   140002dd0:	push   r12
   140002dd2:	push   r13
   140002dd4:	push   r14
   140002dd6:	push   r15
   140002dd8:	sub    rsp,0x20
   140002ddc:	xor    r13d,r13d
   140002ddf:	mov    r15,r9
   140002de2:	mov    QWORD PTR [rdx],r13
   140002de5:	mov    r12,r8
   140002de8:	mov    rax,QWORD PTR [rcx+0x40]
   140002dec:	mov    rsi,rdx
   140002def:	mov    rbx,rcx
   140002df2:	mov    r14d,r13d
   140002df5:	mov    ebp,r13d
   140002df8:	test   rax,rax
   140002dfb:	jne    0x140005de0
   140002e01:	mov    rax,QWORD PTR [rcx+0x10]
   140002e05:	cmp    QWORD PTR [rax+0x10],rbp
   140002e09:	je     0x140002e74
   140002e0b:	mov    rax,QWORD PTR [rcx]
   140002e0e:	mov    rdi,QWORD PTR [rax+0x8]
   140002e12:	lea    rax,[rip+0xffffffffffffff97]        # 0x140002db0
   140002e19:	cmp    rdi,rax
   140002e1c:	jne    0x140005def
   140002e22:	call   0x140002db0
   140002e27:	test   al,al
   140002e29:	je     0x140002e74
   140002e2b:	mov    rax,QWORD PTR [rbx]
   140002e2e:	mov    rdi,QWORD PTR [rax+0x10]
   140002e32:	lea    rax,[rip+0xffffffffffffff67]        # 0x140002da0
   140002e39:	cmp    rdi,rax
   140002e3c:	jne    0x140005e03
   140002e42:	mov    rcx,rbx
   140002e45:	call   0x140002da0
   140002e4a:	mov    rcx,QWORD PTR [rbx+0x10]
   140002e4e:	test   eax,eax
   140002e50:	jne    0x140005e17
   140002e56:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e5a:	test   rcx,rcx
   140002e5d:	je     0x140002e74
   140002e5f:	mov    rax,QWORD PTR [rcx]
   140002e62:	test   rax,rax
   140002e65:	je     0x140002e74
   140002e67:	mov    rax,QWORD PTR [rcx]
   140002e6a:	mov    QWORD PTR [rsi],rax
   140002e6d:	lock or DWORD PTR [rsp],ebp
   140002e71:	mov    ebp,DWORD PTR [rcx+0x8]
   140002e74:	cmp    QWORD PTR [rsi],r13
   140002e77:	je     0x140002ecb
   140002e79:	lea    eax,[rbp+0x1]
   140002e7c:	add    DWORD PTR [r15],eax
   140002e7f:	mov    eax,0x2
   140002e84:	mov    ecx,DWORD PTR [r15]
   140002e87:	mul    rcx
   140002e8a:	mov    rcx,0xffffffffffffffff
   140002e91:	cmovo  rax,rcx
   140002e95:	mov    rcx,rax
   140002e98:	call   QWORD PTR [rip+0xa1e2]        # 0x14000d080
   140002e9e:	mov    QWORD PTR [r12],rax
   140002ea2:	test   rax,rax
   140002ea5:	je     0x140002ef3
   140002ea7:	mov    WORD PTR [rax],r13w
   140002eab:	mov    eax,r14d
   140002eae:	mov    rbx,QWORD PTR [rsp+0x50]
   140002eb3:	mov    rbp,QWORD PTR [rsp+0x58]
   140002eb8:	mov    rsi,QWORD PTR [rsp+0x60]
   140002ebd:	add    rsp,0x20
   140002ec1:	pop    r15
   140002ec3:	pop    r14
   140002ec5:	pop    r13
   140002ec7:	pop    r12
   140002ec9:	pop    rdi
   140002eca:	ret    
   140002ecb:	mov    rax,QWORD PTR [rbx]
   140002ece:	mov    rdi,QWORD PTR [rax+0x28]
   140002ed2:	mov    rcx,rdi
   140002ed5:	call   QWORD PTR [rip+0xa5dd]        # 0x14000d4b8
   140002edb:	mov    rcx,rbx
   140002ede:	call   rdi
   140002ee0:	mov    r14d,eax
   140002ee3:	test   eax,eax
   140002ee5:	js     0x140002eae
   140002ee7:	mov    rax,QWORD PTR [rbx+0x40]
   140002eeb:	mov    QWORD PTR [rsi],rax
   140002eee:	mov    ebp,DWORD PTR [rbx+0x48]
   140002ef1:	jmp    0x140002e79
   140002ef3:	mov    eax,0x8007000e
   140002ef8:	jmp    0x140002eae
   140002efa:	int3   
   140002efb:	int3   
   140002efc:	int3   
   140002efd:	int3   
   140002efe:	int3   
   140002eff:	int3   
   140002f00:	mov    QWORD PTR [rsp+0x8],rbx
   140002f05:	push   rdi
   140002f06:	sub    rsp,0x20
   140002f0a:	lea    rax,[rip+0xab57]        # 0x14000da68
   140002f11:	mov    edi,edx
   140002f13:	mov    QWORD PTR [rcx],rax
   140002f16:	mov    rbx,rcx
   140002f19:	mov    rax,QWORD PTR [rcx+0x8]
   140002f1d:	dec    DWORD PTR [rax+0x8]
   140002f20:	mov    rax,QWORD PTR [rcx+0x40]
   140002f24:	test   rax,rax
   140002f27:	jne    0x140002f55
   140002f29:	mov    rcx,QWORD PTR [rbx+0x20]
   140002f2d:	test   rcx,rcx
   140002f30:	je     0x140002f38
   140002f32:	call   QWORD PTR [rip+0xa3a0]        # 0x14000d2d8
   140002f38:	test   dil,0x1
   140002f3c:	je     0x140002f47
   140002f3e:	mov    rcx,rbx
   140002f41:	call   QWORD PTR [rip+0xa0f1]        # 0x14000d038
   140002f47:	mov    rax,rbx
   140002f4a:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f4f:	add    rsp,0x20
   140002f53:	pop    rdi
   140002f54:	ret    
   140002f55:	mov    rcx,QWORD PTR [rcx+0x40]
   140002f59:	call   QWORD PTR [rip+0xa261]        # 0x14000d1c0
   140002f5f:	mov    QWORD PTR [rbx+0x40],0x0
   140002f67:	jmp    0x140002f29
   140002f69:	int3   
   140002f6a:	int3   
   140002f6b:	int3   
   140002f6c:	int3   
   140002f6d:	int3   
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	mov    r11,rsp
   140002f73:	push   rbp
   140002f74:	push   rbx
   140002f75:	push   r15
   140002f77:	lea    rbp,[r11-0x5f]
   140002f7b:	sub    rsp,0x100
   140002f82:	mov    rax,QWORD PTR [rip+0xf07f]        # 0x140012008
   140002f89:	xor    rax,rsp
   140002f8c:	mov    QWORD PTR [rbp+0x17],rax
   140002f90:	mov    QWORD PTR [r11+0x8],rsi
   140002f94:	lea    r9,[rbp-0x29]
   140002f98:	mov    QWORD PTR [r11-0x20],rdi
   140002f9c:	mov    rsi,rcx
   140002f9f:	mov    QWORD PTR [r11-0x30],r13
   140002fa3:	lea    rcx,[rip+0xac26]        # 0x14000dbd0
   140002faa:	mov    r13,r8
   140002fad:	mov    QWORD PTR [r11-0x38],r14
   140002fb1:	mov    rdi,rdx
   140002fb4:	lea    r8,[rbp-0x21]
   140002fb8:	mov    edx,0x12
   140002fbd:	call   QWORD PTR [rip+0xa31d]        # 0x14000d2e0
   140002fc3:	test   eax,eax
   140002fc5:	js     0x140005e3c
   140002fcb:	lea    r9,[rbp-0x69]
   140002fcf:	mov    edx,0x5
   140002fd4:	lea    r8,[rbp-0x61]
   140002fd8:	lea    rcx,[rip+0xabe1]        # 0x14000dbc0
   140002fdf:	call   QWORD PTR [rip+0xa2fb]        # 0x14000d2e0
   140002fe5:	test   eax,eax
   140002fe7:	js     0x140005e57
   140002fed:	lea    r9,[rbp-0x49]
   140002ff1:	mov    edx,0x6
   140002ff6:	lea    r8,[rbp-0x41]
   140002ffa:	lea    rcx,[rip+0xabaf]        # 0x14000dbb0
   140003001:	call   QWORD PTR [rip+0xa2d9]        # 0x14000d2e0
   140003007:	test   eax,eax
   140003009:	js     0x140005e72
   14000300f:	lea    r9,[rbp-0x9]
   140003013:	mov    edx,0x10
   140003018:	lea    r8,[rbp-0x1]
   14000301c:	lea    rcx,[rip+0xab65]        # 0x14000db88
   140003023:	call   QWORD PTR [rip+0xa2b7]        # 0x14000d2e0
   140003029:	test   eax,eax
   14000302b:	js     0x140005e8d
   140003031:	mov    rcx,QWORD PTR [rdi]
   140003034:	lea    rdx,[rbp-0x71]
   140003038:	xor    r14d,r14d
   14000303b:	mov    ebx,r14d
   14000303e:	mov    QWORD PTR [rsp+0x30],rbx
   140003043:	call   QWORD PTR [rip+0xa27f]        # 0x14000d2c8
   140003049:	mov    r15d,eax
   14000304c:	test   eax,eax
   14000304e:	js     0x140003061
   140003050:	mov    rbx,QWORD PTR [rbp-0x71]
   140003054:	xor    ecx,ecx
   140003056:	mov    QWORD PTR [rsp+0x30],rbx
   14000305b:	call   QWORD PTR [rip+0xa277]        # 0x14000d2d8
   140003061:	test   r15d,r15d
   140003064:	js     0x140003181
   14000306a:	mov    rdx,QWORD PTR [rbp-0x29]
   14000306e:	lea    r8,[rsp+0x38]
   140003073:	mov    rcx,rbx
   140003076:	mov    DWORD PTR [rsp+0x38],r14d
   14000307b:	call   QWORD PTR [rip+0xa23f]        # 0x14000d2c0
   140003081:	cmp    DWORD PTR [rsp+0x38],r14d
   140003086:	jne    0x140005f01
   14000308c:	mov    ecx,0x50
   140003091:	call   QWORD PTR [rip+0x9fe9]        # 0x14000d080
   140003097:	mov    rdi,rax
   14000309a:	test   rax,rax
   14000309d:	je     0x1400031cf
   1400030a3:	mov    rax,QWORD PTR [rsi+0x8]
   1400030a7:	lea    rcx,[rip+0xa9ba]        # 0x14000da68
   1400030ae:	mov    QWORD PTR [rdi+0x8],rax
   1400030b2:	lea    rdx,[rbp-0x79]
   1400030b6:	mov    QWORD PTR [rdi],rcx
   1400030b9:	lea    rax,[rip+0xf080]        # 0x140012140
   1400030c0:	mov    QWORD PTR [rdi+0x10],rax
   1400030c4:	mov    rcx,rbx
   1400030c7:	mov    QWORD PTR [rdi+0x18],rsi
   1400030cb:	mov    QWORD PTR [rdi+0x20],r14
   1400030cf:	mov    QWORD PTR [rsp+0xf0],r12
   1400030d7:	call   QWORD PTR [rip+0xa1eb]        # 0x14000d2c8
   1400030dd:	test   eax,eax
   1400030df:	js     0x1400030f3
   1400030e1:	mov    rax,QWORD PTR [rbp-0x79]
   1400030e5:	mov    rcx,QWORD PTR [rdi+0x20]
   1400030e9:	mov    QWORD PTR [rdi+0x20],rax
   1400030ed:	call   QWORD PTR [rip+0xa1e5]        # 0x14000d2d8
   1400030f3:	mov    QWORD PTR [rdi+0x40],r14
   1400030f7:	lea    rsi,[rdi+0x28]
   1400030fb:	mov    DWORD PTR [rdi+0x48],r14d
   1400030ff:	mov    QWORD PTR [rsi],rsi
   140003102:	mov    QWORD PTR [rsi+0x8],r14
   140003106:	mov    QWORD PTR [rsi+0x10],r14
   14000310a:	mov    rax,QWORD PTR [rdi+0x8]
   14000310e:	inc    DWORD PTR [rax+0x8]
   140003111:	mov    rax,QWORD PTR [rdi+0x8]
   140003115:	mov    r14,QWORD PTR [rax]
   140003118:	test   r14,r14
   14000311b:	je     0x1400031ca
   140003121:	mov    rcx,QWORD PTR [rdi+0x18]
   140003125:	mov    r8,QWORD PTR [r14-0x10]
   140003129:	test   rcx,rcx
   14000312c:	je     0x140005ea8
   140003132:	test   r8,r8
   140003135:	jne    0x140005ed4
   14000313b:	mov    rax,QWORD PTR [r14+0x10]
   14000313f:	test   rax,rax
   140003142:	jne    0x140005ef0
   140003148:	mov    QWORD PTR [r14+0x10],rsi
   14000314c:	mov    rcx,rsi
   14000314f:	mov    QWORD PTR [rsi],r14
   140003152:	call   QWORD PTR [rip+0xa2f0]        # 0x14000d448
   140003158:	mov    rcx,QWORD PTR [rdi+0x8]
   14000315c:	mov    QWORD PTR [rcx],rax
   14000315f:	mov    r12,QWORD PTR [rsp+0xf0]
   140003167:	lea    rax,[rip+0xa9ba]        # 0x14000db28
   14000316e:	mov    QWORD PTR [rdi],rax
   140003171:	mov    DWORD PTR [rdi+0x4c],0x0
   140003178:	mov    QWORD PTR [r13+0x0],rdi
   14000317c:	test   rdi,rdi
   14000317f:	je     0x1400031d4
   140003181:	mov    r14,QWORD PTR [rsp+0xe0]
   140003189:	mov    r13,QWORD PTR [rsp+0xe8]
   140003191:	mov    rdi,QWORD PTR [rsp+0xf8]
   140003199:	mov    rsi,QWORD PTR [rsp+0x120]
   1400031a1:	test   rbx,rbx
   1400031a4:	je     0x1400031af
   1400031a6:	mov    rcx,rbx
   1400031a9:	call   QWORD PTR [rip+0xa129]        # 0x14000d2d8
   1400031af:	mov    eax,r15d
   1400031b2:	mov    rcx,QWORD PTR [rbp+0x17]
   1400031b6:	xor    rcx,rsp
   1400031b9:	call   0x140004450
   1400031be:	add    rsp,0x100
   1400031c5:	pop    r15
   1400031c7:	pop    rbx
   1400031c8:	pop    rbp
   1400031c9:	ret    
   1400031ca:	mov    QWORD PTR [rax],rsi
   1400031cd:	jmp    0x14000315f
   1400031cf:	mov    rdi,r14
   1400031d2:	jmp    0x140003178
   1400031d4:	mov    r15d,0x8007000e
   1400031da:	jmp    0x140003181
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	int3   
   1400031e1:	int3   
   1400031e2:	int3   
   1400031e3:	int3   
   1400031e4:	int3   
   1400031e5:	int3   
   1400031e6:	int3   
   1400031e7:	int3   
   1400031e8:	int3   
   1400031e9:	int3   
   1400031ea:	int3   
   1400031eb:	int3   
   1400031ec:	int3   
   1400031ed:	int3   
   1400031ee:	int3   
   1400031ef:	int3   
   1400031f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400031f5:	push   rdi
   1400031f6:	sub    rsp,0x20
   1400031fa:	lea    rax,[rip+0xa867]        # 0x14000da68
   140003201:	mov    edi,edx
   140003203:	mov    QWORD PTR [rcx],rax
   140003206:	mov    rbx,rcx
   140003209:	mov    rax,QWORD PTR [rcx+0x8]
   14000320d:	dec    DWORD PTR [rax+0x8]
   140003210:	mov    rax,QWORD PTR [rcx+0x40]
   140003214:	test   rax,rax
   140003217:	jne    0x140006020
   14000321d:	mov    rcx,QWORD PTR [rbx+0x20]
   140003221:	test   rcx,rcx
   140003224:	je     0x14000322c
   140003226:	call   QWORD PTR [rip+0xa0ac]        # 0x14000d2d8
   14000322c:	test   dil,0x1
   140003230:	je     0x14000323b
   140003232:	mov    rcx,rbx
   140003235:	call   QWORD PTR [rip+0x9dfd]        # 0x14000d038
   14000323b:	mov    rax,rbx
   14000323e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003243:	add    rsp,0x20
   140003247:	pop    rdi
   140003248:	ret    
   140003249:	int3   
   14000324a:	int3   
   14000324b:	int3   
   14000324c:	int3   
   14000324d:	int3   
   14000324e:	int3   
   14000324f:	int3   
   140003250:	mov    r11,rsp
   140003253:	push   rbx
   140003254:	push   r14
   140003256:	sub    rsp,0x58
   14000325a:	mov    QWORD PTR [r11-0x18],rsi
   14000325e:	mov    rax,rdx
   140003261:	mov    QWORD PTR [r11-0x28],r12
   140003265:	lea    rdx,[r11+0x10]
   140003269:	mov    QWORD PTR [r11-0x30],r13
   14000326d:	mov    rsi,rcx
   140003270:	xor    r13d,r13d
   140003273:	mov    r12,r8
   140003276:	mov    rcx,QWORD PTR [rax]
   140003279:	mov    ebx,r13d
   14000327c:	mov    QWORD PTR [r11+0x20],rbx
   140003280:	call   QWORD PTR [rip+0xa042]        # 0x14000d2c8
   140003286:	mov    r14d,eax
   140003289:	test   eax,eax
   14000328b:	js     0x1400032a2
   14000328d:	mov    rbx,QWORD PTR [rsp+0x78]
   140003292:	xor    ecx,ecx
   140003294:	mov    QWORD PTR [rsp+0x88],rbx
   14000329c:	call   QWORD PTR [rip+0xa036]        # 0x14000d2d8
   1400032a2:	test   r14d,r14d
   1400032a5:	js     0x1400033cf
   1400032ab:	mov    ecx,0x50
   1400032b0:	mov    QWORD PTR [rsp+0x48],rdi
   1400032b5:	call   QWORD PTR [rip+0x9dc5]        # 0x14000d080
   1400032bb:	mov    rdi,rax
   1400032be:	test   rax,rax
   1400032c1:	je     0x1400033fc
   1400032c7:	mov    rax,QWORD PTR [rsi+0x8]
   1400032cb:	lea    rcx,[rip+0xa796]        # 0x14000da68
   1400032d2:	mov    QWORD PTR [rdi+0x8],rax
   1400032d6:	lea    rdx,[rsp+0x20]
   1400032db:	mov    QWORD PTR [rdi],rcx
   1400032de:	lea    rax,[rip+0xf03b]        # 0x140012320
   1400032e5:	mov    QWORD PTR [rdi+0x10],rax
   1400032e9:	mov    rcx,rbx
   1400032ec:	mov    QWORD PTR [rdi+0x18],rsi
   1400032f0:	mov    QWORD PTR [rsp+0x70],rbp
   1400032f5:	mov    QWORD PTR [rdi+0x20],r13
   1400032f9:	mov    QWORD PTR [rsp+0x30],r15
   1400032fe:	call   QWORD PTR [rip+0x9fc4]        # 0x14000d2c8
   140003304:	test   eax,eax
   140003306:	js     0x14000331b
   140003308:	mov    rax,QWORD PTR [rsp+0x20]
   14000330d:	mov    rcx,QWORD PTR [rdi+0x20]
   140003311:	mov    QWORD PTR [rdi+0x20],rax
   140003315:	call   QWORD PTR [rip+0x9fbd]        # 0x14000d2d8
   14000331b:	mov    QWORD PTR [rdi+0x40],r13
   14000331f:	lea    rsi,[rdi+0x28]
   140003323:	mov    DWORD PTR [rdi+0x48],r13d
   140003327:	mov    QWORD PTR [rsi],rsi
   14000332a:	mov    QWORD PTR [rsi+0x8],r13
   14000332e:	mov    QWORD PTR [rsi+0x10],r13
   140003332:	mov    rax,QWORD PTR [rdi+0x8]
   140003336:	inc    DWORD PTR [rax+0x8]
   140003339:	mov    rax,QWORD PTR [rdi+0x8]
   14000333d:	mov    rbp,QWORD PTR [rax]
   140003340:	test   rbp,rbp
   140003343:	je     0x1400033f7
   140003349:	mov    rcx,QWORD PTR [rdi+0x18]
   14000334d:	mov    r8,QWORD PTR [rbp-0x10]
   140003351:	test   rcx,rcx
   140003354:	je     0x140006038
   14000335a:	test   r8,r8
   14000335d:	je     0x140003385
   14000335f:	cmp    rcx,r8
   140003362:	je     0x14000603d
   140003368:	lea    r9,[r8+0x20]
   14000336c:	mov    r8,QWORD PTR [r8+0x18]
   140003370:	lea    rdx,[rcx+0x20]
   140003374:	mov    rcx,QWORD PTR [rcx+0x18]
   140003378:	call   0x140003480
   14000337d:	test   eax,eax
   14000337f:	js     0x140006050
   140003385:	mov    rax,QWORD PTR [rbp+0x10]
   140003389:	test   rax,rax
   14000338c:	jne    0x140006062
   140003392:	mov    QWORD PTR [rbp+0x10],rsi
   140003396:	mov    rcx,rsi
   140003399:	mov    QWORD PTR [rsi],rbp
   14000339c:	call   QWORD PTR [rip+0xa0a6]        # 0x14000d448
   1400033a2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400033a6:	mov    QWORD PTR [rcx],rax
   1400033a9:	mov    r15,QWORD PTR [rsp+0x30]
   1400033ae:	lea    rax,[rip+0xa713]        # 0x14000dac8
   1400033b5:	mov    rbp,QWORD PTR [rsp+0x70]
   1400033ba:	mov    QWORD PTR [rdi],rax
   1400033bd:	mov    DWORD PTR [rdi+0x4c],r13d
   1400033c1:	mov    QWORD PTR [r12],rdi
   1400033c5:	test   rdi,rdi
   1400033c8:	mov    rdi,QWORD PTR [rsp+0x48]
   1400033cd:	je     0x140003401
   1400033cf:	mov    r13,QWORD PTR [rsp+0x38]
   1400033d4:	mov    r12,QWORD PTR [rsp+0x40]
   1400033d9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400033de:	test   rbx,rbx
   1400033e1:	je     0x1400033ec
   1400033e3:	mov    rcx,rbx
   1400033e6:	call   QWORD PTR [rip+0x9eec]        # 0x14000d2d8
   1400033ec:	mov    eax,r14d
   1400033ef:	add    rsp,0x58
   1400033f3:	pop    r14
   1400033f5:	pop    rbx
   1400033f6:	ret    
   1400033f7:	mov    QWORD PTR [rax],rsi
   1400033fa:	jmp    0x1400033a9
   1400033fc:	mov    rdi,r13
   1400033ff:	jmp    0x1400033c1
   140003401:	mov    r14d,0x8007000e
   140003407:	jmp    0x1400033cf
   140003409:	int3   
   14000340a:	int3   
   14000340b:	int3   
   14000340c:	int3   
   14000340d:	int3   
   14000340e:	int3   
   14000340f:	int3   
   140003410:	mov    QWORD PTR [rsp+0x8],rbx
   140003415:	push   rdi
   140003416:	sub    rsp,0x20
   14000341a:	lea    rax,[rip+0xa647]        # 0x14000da68
   140003421:	mov    edi,edx
   140003423:	mov    QWORD PTR [rcx],rax
   140003426:	mov    rbx,rcx
   140003429:	mov    rax,QWORD PTR [rcx+0x8]
   14000342d:	dec    DWORD PTR [rax+0x8]
   140003430:	mov    rax,QWORD PTR [rcx+0x40]
   140003434:	test   rax,rax
   140003437:	je     0x14000344b
   140003439:	mov    rcx,QWORD PTR [rcx+0x40]
   14000343d:	call   QWORD PTR [rip+0x9d7d]        # 0x14000d1c0
   140003443:	mov    QWORD PTR [rbx+0x40],0x0
   14000344b:	mov    rcx,QWORD PTR [rbx+0x20]
   14000344f:	test   rcx,rcx
   140003452:	je     0x14000345a
   140003454:	call   QWORD PTR [rip+0x9e7e]        # 0x14000d2d8
   14000345a:	test   dil,0x1
   14000345e:	je     0x140003469
   140003460:	mov    rcx,rbx
   140003463:	call   QWORD PTR [rip+0x9bcf]        # 0x14000d038
   140003469:	mov    rax,rbx
   14000346c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003471:	add    rsp,0x20
   140003475:	pop    rdi
   140003476:	ret    
   140003477:	int3   
   140003478:	int3   
   140003479:	int3   
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	sub    rsp,0x28
   140003484:	mov    rax,rdx
   140003487:	test   rcx,rcx
   14000348a:	je     0x14000608e
   140003490:	test   r8,r8
   140003493:	jne    0x140006074
   140003499:	lea    eax,[r8+0x1]
   14000349d:	add    rsp,0x28
   1400034a1:	ret    
   1400034a2:	int3   
   1400034a3:	int3   
   1400034a4:	int3   
   1400034a5:	int3   
   1400034a6:	int3   
   1400034a7:	int3   
   1400034a8:	int3   
   1400034a9:	int3   
   1400034aa:	int3   
   1400034ab:	int3   
   1400034ac:	int3   
   1400034ad:	int3   
   1400034ae:	int3   
   1400034af:	int3   
   1400034b0:	mov    rax,QWORD PTR [rcx+0x28]
   1400034b4:	test   rax,rax
   1400034b7:	js     0x1400060ac
   1400034bd:	lea    rdx,[rax+0x1]
   1400034c1:	lock cmpxchg QWORD PTR [rcx+0x28],rdx
   1400034c7:	jne    0x1400034b4
   1400034c9:	mov    eax,edx
   1400034cb:	ret    
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	int3   
   1400034d1:	int3   
   1400034d2:	int3   
   1400034d3:	int3   
   1400034d4:	int3   
   1400034d5:	int3   
   1400034d6:	int3   
   1400034d7:	int3   
   1400034d8:	int3   
   1400034d9:	int3   
   1400034da:	int3   
   1400034db:	int3   
   1400034dc:	int3   
   1400034dd:	int3   
   1400034de:	int3   
   1400034df:	int3   
   1400034e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400034e5:	push   rdi
   1400034e6:	sub    rsp,0x20
   1400034ea:	mov    rax,QWORD PTR [rcx+0x28]
   1400034ee:	mov    rbx,rcx
   1400034f1:	test   rax,rax
   1400034f4:	js     0x1400060bc
   1400034fa:	lea    rdi,[rax-0x1]
   1400034fe:	lock cmpxchg QWORD PTR [rcx+0x28],rdi
   140003504:	jne    0x1400034f1
   140003506:	test   edi,edi
   140003508:	je     0x140003517
   14000350a:	mov    eax,edi
   14000350c:	mov    rbx,QWORD PTR [rsp+0x38]
   140003511:	add    rsp,0x20
   140003515:	pop    rdi
   140003516:	ret    
   140003517:	mov    QWORD PTR [rsp+0x30],rsi
   14000351c:	test   rcx,rcx
   14000351f:	je     0x140003542
   140003521:	mov    rax,QWORD PTR [rcx]
   140003524:	mov    rsi,QWORD PTR [rax+0x50]
   140003528:	lea    rax,[rip+0x41]        # 0x140003570
   14000352f:	cmp    rsi,rax
   140003532:	jne    0x1400060cc
   140003538:	mov    edx,0x1
   14000353d:	call   0x140003570
   140003542:	mov    rsi,QWORD PTR [rip+0xf83f]        # 0x140012d88
   140003549:	test   rsi,rsi
   14000354c:	jne    0x1400060e5
   140003552:	mov    rsi,QWORD PTR [rsp+0x30]
   140003557:	mov    eax,edi
   140003559:	jmp    0x14000350c
   14000355b:	int3   
   14000355c:	int3   
   14000355d:	int3   
   14000355e:	int3   
   14000355f:	int3   
   140003560:	int3   
   140003561:	int3   
   140003562:	int3   
   140003563:	int3   
   140003564:	int3   
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	int3   
   14000356d:	int3   
   14000356e:	int3   
   14000356f:	int3   
   140003570:	rex push rbx
   140003572:	sub    rsp,0x20
   140003576:	mov    QWORD PTR [rsp+0x30],rsi
   14000357b:	mov    rbx,rcx
   14000357e:	mov    QWORD PTR [rsp+0x40],r14
   140003583:	mov    esi,edx
   140003585:	mov    r14,QWORD PTR [rcx+0x40]
   140003589:	test   r14,r14
   14000358c:	jne    0x140006100
   140003592:	mov    rax,QWORD PTR [rbx+0x38]
   140003596:	mov    r14,QWORD PTR [rsp+0x40]
   14000359b:	test   rax,rax
   14000359e:	jne    0x14000612c
   1400035a4:	mov    rcx,QWORD PTR [rbx+0x28]
   1400035a8:	test   rcx,rcx
   1400035ab:	js     0x140006143
   1400035b1:	test   sil,0x1
   1400035b5:	mov    rsi,QWORD PTR [rsp+0x30]
   1400035ba:	je     0x1400035c5
   1400035bc:	mov    rcx,rbx
   1400035bf:	call   QWORD PTR [rip+0x9a73]        # 0x14000d038
   1400035c5:	mov    rax,rbx
   1400035c8:	add    rsp,0x20
   1400035cc:	pop    rbx
   1400035cd:	ret    
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	int3   
   1400035d1:	int3   
   1400035d2:	int3   
   1400035d3:	int3   
   1400035d4:	int3   
   1400035d5:	int3   
   1400035d6:	int3   
   1400035d7:	int3   
   1400035d8:	int3   
   1400035d9:	int3   
   1400035da:	int3   
   1400035db:	int3   
   1400035dc:	int3   
   1400035dd:	int3   
   1400035de:	int3   
   1400035df:	int3   
   1400035e0:	mov    QWORD PTR [rsp+0x18],r8
   1400035e5:	mov    QWORD PTR [rsp+0x20],r9
   1400035ea:	push   rsi
   1400035eb:	push   rdi
   1400035ec:	sub    rsp,0x28
   1400035f0:	xor    edi,edi
   1400035f2:	lea    rax,[rdx-0x1]
   1400035f6:	mov    rsi,rcx
   1400035f9:	mov    ecx,edi
   1400035fb:	cmp    rax,0x7ffffffe
   140003601:	ja     0x140003644
   140003603:	test   ecx,ecx
   140003605:	js     0x140006152
   14000360b:	mov    QWORD PTR [rsp+0x20],rbx
   140003610:	lea    r9,[rsp+0x58]
   140003615:	lea    rbx,[rdx-0x1]
   140003619:	mov    rcx,rsi
   14000361c:	mov    rdx,rbx
   14000361f:	call   QWORD PTR [rip+0x9d73]        # 0x14000d398
   140003625:	test   eax,eax
   140003627:	js     0x14000364b
   140003629:	cdqe   
   14000362b:	cmp    rax,rbx
   14000362e:	ja     0x14000364b
   140003630:	jne    0x140003636
   140003632:	mov    WORD PTR [rsi+rbx*2],di
   140003636:	mov    rbx,QWORD PTR [rsp+0x20]
   14000363b:	mov    eax,edi
   14000363d:	add    rsp,0x28
   140003641:	pop    rdi
   140003642:	pop    rsi
   140003643:	ret    
   140003644:	mov    ecx,0x80070057
   140003649:	jmp    0x140003603
   14000364b:	mov    WORD PTR [rsi+rbx*2],di
   14000364f:	mov    edi,0x8007007a
   140003654:	jmp    0x140003636
   140003656:	int3   
   140003657:	int3   
   140003658:	int3   
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	mov    QWORD PTR [rsp+0x10],rbx
   140003665:	push   rdi
   140003666:	sub    rsp,0x20
   14000366a:	mov    rax,QWORD PTR [rcx+0x10]
   14000366e:	mov    rdi,r8
   140003671:	mov    ecx,edx
   140003673:	add    rcx,rcx
   140003676:	mov    rax,QWORD PTR [rax+0x18]
   14000367a:	mov    rax,QWORD PTR [rax]
   14000367d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140003681:	or     rax,0xffffffffffffffff
   140003685:	inc    rax
   140003688:	cmp    WORD PTR [rcx+rax*2],0x0
   14000368d:	jne    0x140003685
   14000368f:	lea    r8,[rsp+0x30]
   140003694:	mov    edx,eax
   140003696:	call   QWORD PTR [rip+0x9c54]        # 0x14000d2f0
   14000369c:	mov    ebx,eax
   14000369e:	test   eax,eax
   1400036a0:	js     0x1400036b5
   1400036a2:	mov    rdx,QWORD PTR [rsp+0x30]
   1400036a7:	mov    rcx,QWORD PTR [rdi]
   1400036aa:	mov    QWORD PTR [rdi],rdx
   1400036ad:	call   QWORD PTR [rip+0x9c25]        # 0x14000d2d8
   1400036b3:	mov    eax,ebx
   1400036b5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400036ba:	add    rsp,0x20
   1400036be:	pop    rdi
   1400036bf:	ret    
   1400036c0:	int3   
   1400036c1:	int3   
   1400036c2:	int3   
   1400036c3:	int3   
   1400036c4:	int3   
   1400036c5:	int3   
   1400036c6:	int3   
   1400036c7:	int3   
   1400036c8:	int3   
   1400036c9:	int3   
   1400036ca:	int3   
   1400036cb:	int3   
   1400036cc:	int3   
   1400036cd:	int3   
   1400036ce:	int3   
   1400036cf:	int3   
   1400036d0:	mov    rax,rsp
   1400036d3:	mov    QWORD PTR [rax+0x8],rbx
   1400036d7:	mov    QWORD PTR [rax+0x20],rsi
   1400036db:	push   rdi
   1400036dc:	sub    rsp,0x20
   1400036e0:	and    QWORD PTR [rax+0x18],0x0
   1400036e5:	lea    r8,[rax+0x18]
   1400036e9:	lea    rdx,[rax+0x10]
   1400036ed:	mov    BYTE PTR [rax+0x10],0x0
   1400036f1:	mov    rbx,rcx
   1400036f4:	call   0x14000377c
   1400036f9:	mov    edi,eax
   1400036fb:	test   eax,eax
   1400036fd:	js     0x140003763
   1400036ff:	cmp    BYTE PTR [rsp+0x38],0x0
   140003704:	jne    0x140003763
   140003706:	mov    rcx,QWORD PTR [rbx+0x20]
   14000370a:	call   QWORD PTR [rip+0x9bf0]        # 0x14000d300
   140003710:	mov    rcx,QWORD PTR [rbx+0x20]
   140003714:	xor    edx,edx
   140003716:	mov    DWORD PTR [rbx+0x48],eax
   140003719:	call   QWORD PTR [rip+0x9b99]        # 0x14000d2b8
   14000371f:	xor    edx,edx
   140003721:	lea    rcx,[rbx+0x40]
   140003725:	mov    r8,rax
   140003728:	call   0x1400038e4
   14000372d:	mov    edi,eax
   14000372f:	test   eax,eax
   140003731:	js     0x140003763
   140003733:	mov    rax,QWORD PTR [rsp+0x40]
   140003738:	test   rax,rax
   14000373b:	je     0x140003763
   14000373d:	mov    rax,QWORD PTR [rax]
   140003740:	test   rax,rax
   140003743:	jne    0x140003763
   140003745:	mov    rax,QWORD PTR [rsp+0x40]
   14000374a:	mov    ecx,DWORD PTR [rbx+0x48]
   14000374d:	mov    DWORD PTR [rax+0x8],ecx
   140003750:	lock or DWORD PTR [rsp],0x0
   140003755:	mov    rcx,QWORD PTR [rsp+0x40]
   14000375a:	lea    rdx,[rbx+0x40]
   14000375e:	call   0x140003850
   140003763:	mov    rbx,QWORD PTR [rsp+0x30]
   140003768:	mov    eax,edi
   14000376a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000376f:	add    rsp,0x20
   140003773:	pop    rdi
   140003774:	ret    
   140003775:	int3   
   140003776:	int3   
   140003777:	int3   
   140003778:	int3   
   140003779:	int3   
   14000377a:	int3   
   14000377b:	int3   
   14000377c:	mov    rax,rsp
   14000377f:	mov    QWORD PTR [rax+0x8],rbx
   140003783:	mov    QWORD PTR [rax+0x10],rbp
   140003787:	mov    QWORD PTR [rax+0x18],rsi
   14000378b:	mov    QWORD PTR [rax+0x20],rdi
   14000378f:	push   r12
   140003791:	push   r14
   140003793:	push   r15
   140003795:	sub    rsp,0x40
   140003799:	mov    BYTE PTR [rdx],0x0
   14000379c:	mov    r15,r8
   14000379f:	mov    r12,rdx
   1400037a2:	mov    r14,rcx
   1400037a5:	test   r8,r8
   1400037a8:	je     0x1400037ae
   1400037aa:	and    QWORD PTR [r8],0x0
   1400037ae:	lea    rbp,[rcx+0x40]
   1400037b2:	xor    edi,edi
   1400037b4:	mov    rax,QWORD PTR [rbp+0x0]
   1400037b8:	test   rax,rax
   1400037bb:	jne    0x140003819
   1400037bd:	mov    rax,QWORD PTR [rcx+0x10]
   1400037c1:	cmp    QWORD PTR [rax+0x10],rdi
   1400037c5:	je     0x140003819
   1400037c7:	mov    rax,QWORD PTR [rcx]
   1400037ca:	mov    rbx,QWORD PTR [rax+0x8]
   1400037ce:	mov    rcx,rbx
   1400037d1:	call   QWORD PTR [rip+0x9ce1]        # 0x14000d4b8
   1400037d7:	mov    rcx,r14
   1400037da:	call   rbx
   1400037dc:	test   al,al
   1400037de:	je     0x140003819
   1400037e0:	mov    rax,QWORD PTR [r14]
   1400037e3:	mov    rbx,QWORD PTR [rax+0x10]
   1400037e7:	mov    rcx,rbx
   1400037ea:	call   QWORD PTR [rip+0x9cc8]        # 0x14000d4b8
   1400037f0:	mov    rcx,r14
   1400037f3:	call   rbx
   1400037f5:	mov    rsi,QWORD PTR [r14+0x10]
   1400037f9:	test   eax,eax
   1400037fb:	jne    0x1400051bc
   140003801:	mov    rsi,QWORD PTR [rsi+0x10]
   140003805:	test   r15,r15
   140003808:	je     0x14000380d
   14000380a:	mov    QWORD PTR [r15],rsi
   14000380d:	mov    rax,QWORD PTR [rsi]
   140003810:	test   rax,rax
   140003813:	jne    0x1400051de
   140003819:	mov    rcx,QWORD PTR [rbp+0x0]
   14000381d:	test   rcx,rcx
   140003820:	jne    0x140003843
   140003822:	mov    rbx,QWORD PTR [rsp+0x60]
   140003827:	mov    eax,edi
   140003829:	mov    rdi,QWORD PTR [rsp+0x78]
   14000382e:	mov    rbp,QWORD PTR [rsp+0x68]
   140003833:	mov    rsi,QWORD PTR [rsp+0x70]
   140003838:	add    rsp,0x40
   14000383c:	pop    r15
   14000383e:	pop    r14
   140003840:	pop    r12
   140003842:	ret    
   140003843:	mov    BYTE PTR [r12],0x1
   140003848:	jmp    0x140003822
   14000384a:	int3   
   14000384b:	int3   
   14000384c:	int3   
   14000384d:	int3   
   14000384e:	int3   
   14000384f:	int3   
   140003850:	mov    QWORD PTR [rsp+0x8],rbx
   140003855:	mov    QWORD PTR [rsp+0x18],rsi
   14000385a:	push   rdi
   14000385b:	sub    rsp,0x40
   14000385f:	mov    rdi,QWORD PTR [rdx]
   140003862:	mov    rsi,rcx
   140003865:	and    QWORD PTR [rsp+0x58],0x0
   14000386b:	call   QWORD PTR [rip+0x9917]        # 0x14000d188
   140003871:	mov    rbx,rax
   140003874:	call   QWORD PTR [rip+0x990e]        # 0x14000d188
   14000387a:	mov    DWORD PTR [rsp+0x30],0x2
   140003882:	lea    r9,[rsp+0x58]
   140003887:	and    DWORD PTR [rsp+0x28],0x0
   14000388c:	mov    rcx,rax
   14000388f:	and    DWORD PTR [rsp+0x20],0x0
   140003894:	mov    r8,rbx
   140003897:	mov    rdx,rdi
   14000389a:	call   QWORD PTR [rip+0x9ba0]        # 0x14000d440
   1400038a0:	mov    ecx,eax
   1400038a2:	call   QWORD PTR [rip+0x9bb8]        # 0x14000d460
   1400038a8:	mov    ebx,eax
   1400038aa:	test   eax,eax
   1400038ac:	jg     0x140005244
   1400038b2:	test   ebx,ebx
   1400038b4:	js     0x1400038c4
   1400038b6:	mov    rcx,QWORD PTR [rsp+0x58]
   1400038bb:	xor    eax,eax
   1400038bd:	lock cmpxchg QWORD PTR [rsi],rcx
   1400038c2:	jne    0x1400038d6
   1400038c4:	mov    rsi,QWORD PTR [rsp+0x60]
   1400038c9:	mov    eax,ebx
   1400038cb:	mov    rbx,QWORD PTR [rsp+0x50]
   1400038d0:	add    rsp,0x40
   1400038d4:	pop    rdi
   1400038d5:	ret    
   1400038d6:	call   QWORD PTR [rip+0x98e4]        # 0x14000d1c0
   1400038dc:	jmp    0x1400038c4
   1400038de:	int3   
   1400038df:	int3   
   1400038e0:	int3   
   1400038e1:	int3   
   1400038e2:	int3   
   1400038e3:	int3   
   1400038e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400038e9:	push   rdi
   1400038ea:	sub    rsp,0x60
   1400038ee:	mov    rbx,rdx
   1400038f1:	mov    rdi,rcx
   1400038f4:	mov    rdx,r8
   1400038f7:	lea    rcx,[rsp+0x20]
   1400038fc:	call   QWORD PTR [rip+0x9b7e]        # 0x14000d480
   140003902:	lea    rax,[rsp+0x20]
   140003907:	mov    DWORD PTR [rsp+0x30],0x30
   14000390f:	xorps  xmm0,xmm0
   140003912:	mov    QWORD PTR [rsp+0x40],rax
   140003917:	lea    r8,[rsp+0x30]
   14000391c:	mov    QWORD PTR [rsp+0x38],rbx
   140003921:	mov    edx,0x20119
   140003926:	mov    DWORD PTR [rsp+0x48],0x40
   14000392e:	mov    rcx,rdi
   140003931:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140003937:	call   QWORD PTR [rip+0x9b4b]        # 0x14000d488
   14000393d:	mov    ecx,eax
   14000393f:	call   QWORD PTR [rip+0x9b1b]        # 0x14000d460
   140003945:	test   eax,eax
   140003947:	jg     0x140005252
   14000394d:	mov    rbx,QWORD PTR [rsp+0x70]
   140003952:	add    rsp,0x60
   140003956:	pop    rdi
   140003957:	ret    
   140003958:	int3   
   140003959:	int3   
   14000395a:	int3   
   14000395b:	int3   
   14000395c:	int3   
   14000395d:	int3   
   14000395e:	int3   
   14000395f:	int3   
   140003960:	rex push rbx
   140003962:	sub    rsp,0x20
   140003966:	mov    rbx,r8
   140003969:	cmp    edx,0x8013
   14000396f:	jne    0x1400039bf
   140003971:	lea    r8,[rsp+0x38]
   140003976:	mov    rcx,rbx
   140003979:	lea    rdx,[rip+0xa398]        # 0x14000dd18
   140003980:	call   QWORD PTR [rip+0x967a]        # 0x14000d000
   140003986:	test   eax,eax
   140003988:	je     0x1400039bf
   14000398a:	cmp    DWORD PTR [rbx+0x10],0x4
   14000398e:	jne    0x1400039bf
   140003990:	cmp    DWORD PTR [rbx+0x14],0x1
   140003994:	je     0x1400039c6
   140003996:	mov    DWORD PTR [rip+0xe680],0xea60        # 0x140012020
   1400039a0:	lock or DWORD PTR [rsp],0x0
   1400039a5:	mov    rcx,QWORD PTR [rip+0xf214]        # 0x140012bc0
   1400039ac:	test   rcx,rcx
   1400039af:	je     0x1400039b7
   1400039b1:	call   QWORD PTR [rip+0x9851]        # 0x14000d208
   1400039b7:	xor    eax,eax
   1400039b9:	add    rsp,0x20
   1400039bd:	pop    rbx
   1400039be:	ret    
   1400039bf:	mov    eax,0x57
   1400039c4:	jmp    0x1400039b9
   1400039c6:	or     DWORD PTR [rip+0xe653],0xffffffff        # 0x140012020
   1400039cd:	jmp    0x1400039a0
   1400039cf:	int3   
   1400039d0:	int3   
   1400039d1:	int3   
   1400039d2:	int3   
   1400039d3:	int3   
   1400039d4:	int3   
   1400039d5:	int3   
   1400039d6:	int3   
   1400039d7:	int3   
   1400039d8:	mov    rax,rsp
   1400039db:	mov    QWORD PTR [rax+0x8],rbx
   1400039df:	mov    QWORD PTR [rax+0x10],rdi
   1400039e3:	mov    QWORD PTR [rax+0x18],r14
   1400039e7:	mov    QWORD PTR [rax+0x20],r15
   1400039eb:	push   rbp
   1400039ec:	mov    rbp,rsp
   1400039ef:	sub    rsp,0x60
   1400039f3:	mov    rcx,QWORD PTR [rip+0xf1a6]        # 0x140012ba0
   1400039fa:	xor    r9d,r9d
   1400039fd:	xor    r8d,r8d
   140003a00:	lea    r14d,[r9+0x1]
   140003a04:	mov    edx,r14d
   140003a07:	call   QWORD PTR [rip+0x96eb]        # 0x14000d0f8
   140003a0d:	call   QWORD PTR [rip+0x9775]        # 0x14000d188
   140003a13:	lea    r15d,[r14+0x3]
   140003a17:	mov    edx,r14d
   140003a1a:	mov    rcx,rax
   140003a1d:	lea    r8,[rbp-0x10]
   140003a21:	mov    r9d,r15d
   140003a24:	call   QWORD PTR [rip+0x9736]        # 0x14000d160
   140003a2a:	test   eax,eax
   140003a2c:	je     0x140003a42
   140003a2e:	or     DWORD PTR [rbp-0x10],0x2
   140003a32:	lea    rdx,[rbp-0x10]
   140003a36:	mov    r8d,r15d
   140003a39:	mov    ecx,r14d
   140003a3c:	call   QWORD PTR [rip+0x96fe]        # 0x14000d140
   140003a42:	mov    ecx,0x3
   140003a47:	lea    rdx,[rbp-0x8]
   140003a4b:	mov    r8,r15
   140003a4e:	mov    DWORD PTR [rbp-0x8],ecx
   140003a51:	call   QWORD PTR [rip+0x96e9]        # 0x14000d140
   140003a57:	mov    ecx,0x8001
   140003a5c:	call   QWORD PTR [rip+0x9646]        # 0x14000d0a8
   140003a62:	xor    edx,edx
   140003a64:	lea    ecx,[rdx+0x2]
   140003a67:	call   QWORD PTR [rip+0x9703]        # 0x14000d170
   140003a6d:	xor    edx,edx
   140003a6f:	xor    ecx,ecx
   140003a71:	call   QWORD PTR [rip+0x95c9]        # 0x14000d040
   140003a77:	mov    ebx,eax
   140003a79:	test   eax,eax
   140003a7b:	js     0x140006184
   140003a81:	call   0x140003e54
   140003a86:	mov    ebx,eax
   140003a88:	test   eax,eax
   140003a8a:	jg     0x140006166
   140003a90:	test   ebx,ebx
   140003a92:	js     0x14000617e
   140003a98:	and    QWORD PTR [rbp-0x10],0x0
   140003a9d:	lea    rcx,[rbp-0x10]
   140003aa1:	call   QWORD PTR [rip+0x95d1]        # 0x14000d078
   140003aa7:	mov    ebx,eax
   140003aa9:	test   eax,eax
   140003aab:	js     0x14000617e
   140003ab1:	call   0x140003cc0
   140003ab6:	mov    ebx,eax
   140003ab8:	test   eax,eax
   140003aba:	js     0x140006174
   140003ac0:	mov    rdi,QWORD PTR [rip+0xf101]        # 0x140012bc8
   140003ac7:	test   rdi,rdi
   140003aca:	je     0x140003ad9
   140003acc:	mov    rcx,rdi
   140003acf:	call   QWORD PTR [rip+0x99e3]        # 0x14000d4b8
   140003ad5:	call   rdi
   140003ad7:	mov    ebx,eax
   140003ad9:	test   ebx,ebx
   140003adb:	js     0x140006174
   140003ae1:	and    QWORD PTR [rbp-0x8],0x0
   140003ae6:	lea    rax,[rbp-0x8]
   140003aea:	lea    r9,[rip+0xa217]        # 0x14000dd08
   140003af1:	mov    QWORD PTR [rsp+0x20],rax
   140003af6:	mov    r8d,r14d
   140003af9:	lea    rcx,[rip+0xa1f8]        # 0x14000dcf8
   140003b00:	xor    edx,edx
   140003b02:	call   QWORD PTR [rip+0x9528]        # 0x14000d030
   140003b08:	mov    ebx,eax
   140003b0a:	test   eax,eax
   140003b0c:	js     0x140003bdd
   140003b12:	mov    rdi,QWORD PTR [rbp-0x8]
   140003b16:	mov    rax,QWORD PTR [rdi]
   140003b19:	mov    rbx,QWORD PTR [rax+0x18]
   140003b1d:	mov    rcx,rbx
   140003b20:	call   QWORD PTR [rip+0x9992]        # 0x14000d4b8
   140003b26:	mov    r8d,0x2
   140003b2c:	mov    edx,r14d
   140003b2f:	mov    rcx,rdi
   140003b32:	call   rbx
   140003b34:	mov    rdi,QWORD PTR [rbp-0x8]
   140003b38:	mov    rax,QWORD PTR [rdi]
   140003b3b:	mov    rbx,QWORD PTR [rax+0x18]
   140003b3f:	mov    rcx,rbx
   140003b42:	call   QWORD PTR [rip+0x9970]        # 0x14000d4b8
   140003b48:	mov    r8d,0x338
   140003b4e:	mov    edx,r15d
   140003b51:	mov    rcx,rdi
   140003b54:	call   rbx
   140003b56:	mov    rdi,QWORD PTR [rbp-0x8]
   140003b5a:	mov    rax,QWORD PTR [rdi]
   140003b5d:	mov    rbx,QWORD PTR [rax+0x18]
   140003b61:	mov    rcx,rbx
   140003b64:	call   QWORD PTR [rip+0x994e]        # 0x14000d4b8
   140003b6a:	mov    r8,r14
   140003b6d:	mov    edx,0x5
   140003b72:	mov    rcx,rdi
   140003b75:	call   rbx
   140003b77:	mov    rdi,QWORD PTR [rbp-0x8]
   140003b7b:	mov    rax,QWORD PTR [rdi]
   140003b7e:	mov    rbx,QWORD PTR [rax+0x10]
   140003b82:	mov    rcx,rbx
   140003b85:	call   QWORD PTR [rip+0x992d]        # 0x14000d4b8
   140003b8b:	mov    rcx,rdi
   140003b8e:	call   rbx
   140003b90:	and    QWORD PTR [rbp-0x8],0x0
   140003b95:	call   QWORD PTR [rip+0x97cd]        # 0x14000d368
   140003b9b:	and    QWORD PTR [rsp+0x40],0x0
   140003ba1:	xor    r9d,r9d
   140003ba4:	mov    DWORD PTR [rsp+0x38],0x48
   140003bac:	xor    r8d,r8d
   140003baf:	and    QWORD PTR [rsp+0x30],0x0
   140003bb5:	or     edx,0xffffffff
   140003bb8:	mov    DWORD PTR [rsp+0x28],0x2
   140003bc0:	xor    ecx,ecx
   140003bc2:	mov    DWORD PTR [rsp+0x20],0x6
   140003bca:	call   QWORD PTR [rip+0x94b8]        # 0x14000d088
   140003bd0:	mov    ebx,eax
   140003bd2:	test   eax,eax
   140003bd4:	js     0x140003bdd
   140003bd6:	call   0x140003bf0
   140003bdb:	mov    ebx,eax
   140003bdd:	call   0x140006b00
   140003be2:	nop
   140003be3:	jmp    0x140006174
   140003be8:	int3   
   140003be9:	int3   
   140003bea:	int3   
   140003beb:	int3   
   140003bec:	int3   
   140003bed:	int3   
   140003bee:	int3   
   140003bef:	int3   
   140003bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140003bf5:	push   rdi
   140003bf6:	sub    rsp,0x40
   140003bfa:	xor    r9d,r9d
   140003bfd:	xor    r8d,r8d
   140003c00:	xor    ecx,ecx
   140003c02:	lea    edx,[r9+0x1]
   140003c06:	call   QWORD PTR [rip+0x961c]        # 0x14000d228
   140003c0c:	mov    QWORD PTR [rip+0xef95],rax        # 0x140012ba8
   140003c13:	test   rax,rax
   140003c16:	je     0x1400061d4
   140003c1c:	mov    edx,0x7530
   140003c21:	mov    rcx,rax
   140003c24:	call   QWORD PTR [rip+0x9736]        # 0x14000d360
   140003c2a:	mov    ebx,eax
   140003c2c:	test   eax,eax
   140003c2e:	js     0x140006201
   140003c34:	mov    r9d,0x1
   140003c3a:	lea    rax,[rip+0xef77]        # 0x140012bb8
   140003c41:	lea    rdx,[rip+0xe948]        # 0x140012590
   140003c48:	mov    QWORD PTR [rsp+0x20],rax
   140003c4d:	lea    rcx,[rip+0xa134]        # 0x14000dd88
   140003c54:	lea    r8d,[r9+0x3]
   140003c58:	call   QWORD PTR [rip+0x940a]        # 0x14000d068
   140003c5e:	mov    ebx,eax
   140003c60:	test   eax,eax
   140003c62:	js     0x1400061f7
   140003c68:	mov    rax,QWORD PTR [rip+0xef39]        # 0x140012ba8
   140003c6f:	mov    QWORD PTR [rsp+0x30],rax
   140003c74:	mov    rax,QWORD PTR [rip+0xef45]        # 0x140012bc0
   140003c7b:	mov    QWORD PTR [rsp+0x38],rax
   140003c80:	mov    r9d,DWORD PTR [rip+0xe399]        # 0x140012020
   140003c87:	lea    rdx,[rsp+0x30]
   140003c8c:	xor    r8d,r8d
   140003c8f:	lea    ecx,[r8+0x2]
   140003c93:	call   QWORD PTR [rip+0x95a7]        # 0x14000d240
   140003c99:	xor    edx,edx
   140003c9b:	mov    ecx,0xea60
   140003ca0:	mov    edi,eax
   140003ca2:	call   QWORD PTR [rip+0x93b0]        # 0x14000d058
   140003ca8:	cmp    edi,0x102
   140003cae:	je     0x140003c80
   140003cb0:	cmp    edi,0x1
   140003cb3:	je     0x140003c80
   140003cb5:	jmp    0x1400061eb
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	int3   
   140003cbd:	int3   
   140003cbe:	int3   
   140003cbf:	int3   
   140003cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140003cc5:	mov    QWORD PTR [rsp+0x10],rsi
   140003cca:	push   rdi
   140003ccb:	sub    rsp,0x260
   140003cd2:	mov    rax,QWORD PTR [rip+0xe32f]        # 0x140012008
   140003cd9:	xor    rax,rsp
   140003cdc:	mov    QWORD PTR [rsp+0x250],rax
   140003ce4:	mov    ebx,0x208
   140003ce9:	lea    rcx,[rsp+0x40]
   140003cee:	mov    r8d,ebx
   140003cf1:	xor    edx,edx
   140003cf3:	call   0x140004b56
   140003cf8:	mov    DWORD PTR [rsp+0x38],ebx
   140003cfc:	lea    rax,[rsp+0x30]
   140003d01:	xor    ebx,ebx
   140003d03:	mov    QWORD PTR [rsp+0x20],rax
   140003d08:	xor    r8d,r8d
   140003d0b:	mov    QWORD PTR [rsp+0x30],rbx
   140003d10:	lea    rdx,[rip+0xa029]        # 0x14000dd40
   140003d17:	mov    rcx,0xffffffff80000002
   140003d1e:	mov    sil,bl
   140003d21:	lea    r9d,[rbx+0x1]
   140003d25:	call   QWORD PTR [rip+0x9485]        # 0x14000d1b0
   140003d2b:	mov    edi,eax
   140003d2d:	test   eax,eax
   140003d2f:	jne    0x140003e48
   140003d35:	mov    rcx,QWORD PTR [rsp+0x30]
   140003d3a:	lea    rax,[rsp+0x38]
   140003d3f:	mov    QWORD PTR [rsp+0x28],rax
   140003d44:	lea    r9,[rsp+0x3c]
   140003d49:	lea    rax,[rsp+0x40]
   140003d4e:	xor    r8d,r8d
   140003d51:	lea    rdx,[rip+0x9fd0]        # 0x14000dd28
   140003d58:	mov    QWORD PTR [rsp+0x20],rax
   140003d5d:	call   QWORD PTR [rip+0x946d]        # 0x14000d1d0
   140003d63:	mov    edi,eax
   140003d65:	test   eax,eax
   140003d67:	jne    0x140003e43
   140003d6d:	xor    r8d,r8d
   140003d70:	lea    rcx,[rsp+0x40]
   140003d75:	xor    edx,edx
   140003d77:	call   QWORD PTR [rip+0x939b]        # 0x14000d118
   140003d7d:	mov    QWORD PTR [rip+0xee5c],rax        # 0x140012be0
   140003d84:	test   rax,rax
   140003d87:	je     0x140006224
   140003d8d:	mov    edx,0x320
   140003d92:	mov    rcx,rax
   140003d95:	call   QWORD PTR [rip+0x9395]        # 0x14000d130
   140003d9b:	mov    rcx,rax
   140003d9e:	mov    QWORD PTR [rip+0xee0b],rax        # 0x140012bb0
   140003da5:	mov    rax,QWORD PTR [rip+0xee34]        # 0x140012be0
   140003dac:	test   rcx,rcx
   140003daf:	je     0x140006230
   140003db5:	mov    edx,0x323
   140003dba:	mov    rcx,rax
   140003dbd:	call   QWORD PTR [rip+0x936d]        # 0x14000d130
   140003dc3:	mov    rcx,rax
   140003dc6:	mov    QWORD PTR [rip+0xedfb],rax        # 0x140012bc8
   140003dcd:	mov    rax,QWORD PTR [rip+0xee0c]        # 0x140012be0
   140003dd4:	test   rcx,rcx
   140003dd7:	je     0x140003e3a
   140003dd9:	mov    edx,0x321
   140003dde:	mov    rcx,rax
   140003de1:	call   QWORD PTR [rip+0x9349]        # 0x14000d130
   140003de7:	mov    QWORD PTR [rip+0xedea],rax        # 0x140012bd8
   140003dee:	test   rax,rax
   140003df1:	je     0x14000623c
   140003df7:	mov    rcx,QWORD PTR [rsp+0x30]
   140003dfc:	call   QWORD PTR [rip+0x93be]        # 0x14000d1c0
   140003e02:	test   sil,sil
   140003e05:	jne    0x140003e13
   140003e07:	test   edi,0xfffffffd
   140003e0d:	jne    0x140006249
   140003e13:	mov    eax,ebx
   140003e15:	mov    rcx,QWORD PTR [rsp+0x250]
   140003e1d:	xor    rcx,rsp
   140003e20:	call   0x140004450
   140003e25:	lea    r11,[rsp+0x260]
   140003e2d:	mov    rbx,QWORD PTR [r11+0x10]
   140003e31:	mov    rsi,QWORD PTR [r11+0x18]
   140003e35:	mov    rsp,r11
   140003e38:	pop    rdi
   140003e39:	ret    
   140003e3a:	mov    rax,QWORD PTR [rip+0xed97]        # 0x140012bd8
   140003e41:	jmp    0x140003dee
   140003e43:	mov    sil,0x1
   140003e46:	jmp    0x140003df7
   140003e48:	mov    sil,0x1
   140003e4b:	jmp    0x140003e02
   140003e4d:	int3   
   140003e4e:	int3   
   140003e4f:	int3   
   140003e50:	int3   
   140003e51:	int3   
   140003e52:	int3   
   140003e53:	int3   
   140003e54:	sub    rsp,0x38
   140003e58:	and    QWORD PTR [rsp+0x28],0x0
   140003e5e:	lea    rax,[rip+0xfffffffffffffafb]        # 0x140003960
   140003e65:	xor    r9d,r9d
   140003e68:	mov    QWORD PTR [rsp+0x20],rax
   140003e6d:	xor    edx,edx
   140003e6f:	xor    ecx,ecx
   140003e71:	lea    r8d,[r9+0x1]
   140003e75:	call   QWORD PTR [rip+0x93ad]        # 0x14000d228
   140003e7b:	mov    QWORD PTR [rip+0xed3e],rax        # 0x140012bc0
   140003e82:	test   rax,rax
   140003e85:	je     0x140003eaa
   140003e87:	lea    r9,[rip+0xed42]        # 0x140012bd0
   140003e8e:	mov    edx,0x2
   140003e93:	lea    r8,[rsp+0x20]
   140003e98:	lea    rcx,[rip+0x9e79]        # 0x14000dd18
   140003e9f:	call   QWORD PTR [rip+0x947b]        # 0x14000d320
   140003ea5:	add    rsp,0x38
   140003ea9:	ret    
   140003eaa:	call   QWORD PTR [rip+0x9200]        # 0x14000d0b0
   140003eb0:	jmp    0x140003ea5
   140003eb2:	int3   
   140003eb3:	int3   
   140003eb4:	int3   
   140003eb5:	int3   
   140003eb6:	int3   
   140003eb7:	int3   
   140003eb8:	sub    rsp,0x28
   140003ebc:	and    QWORD PTR [rip+0xee74],0x0        # 0x140012d38
   140003ec4:	lea    rcx,[rip+0xee7d]        # 0x140012d48
   140003ecb:	and    DWORD PTR [rip+0xee6e],0x0        # 0x140012d40
   140003ed2:	call   QWORD PTR [rip+0x9320]        # 0x14000d1f8
   140003ed8:	lea    rax,[rip+0xee59]        # 0x140012d38
   140003edf:	add    rsp,0x28
   140003ee3:	ret    
   140003ee4:	int3   
   140003ee5:	int3   
   140003ee6:	int3   
   140003ee7:	int3   
   140003ee8:	int3   
   140003ee9:	int3   
   140003eea:	int3   
   140003eeb:	int3   
   140003eec:	int3   
   140003eed:	int3   
   140003eee:	int3   
   140003eef:	int3   
   140003ef0:	int3   
   140003ef1:	int3   
   140003ef2:	int3   
   140003ef3:	int3   
   140003ef4:	int3   
   140003ef5:	int3   
   140003ef6:	int3   
   140003ef7:	int3   
   140003ef8:	rex push rbx
   140003efa:	sub    rsp,0x20
   140003efe:	mov    rbx,rcx
   140003f01:	add    rcx,0x10
   140003f05:	call   0x140008230
   140003f0a:	mov    rcx,rbx
   140003f0d:	add    rsp,0x20
   140003f11:	pop    rbx
   140003f12:	jmp    0x140008230
   140003f17:	int3   
   140003f18:	int3   
   140003f19:	int3   
   140003f1a:	int3   
   140003f1b:	int3   
   140003f1c:	int3   
   140003f1d:	int3   
   140003f1e:	int3   
   140003f1f:	int3   
   140003f20:	rex push rbx
   140003f22:	sub    rsp,0x20
   140003f26:	cmp    QWORD PTR [rip+0xedc2],0x0        # 0x140012cf0
   140003f2e:	je     0x140003f5a
   140003f30:	mov    rbx,QWORD PTR [rip+0xec59]        # 0x140012b90
   140003f37:	mov    rcx,rbx
   140003f3a:	call   QWORD PTR [rip+0x9578]        # 0x14000d4b8
   140003f40:	mov    r8,QWORD PTR [rip+0xeda9]        # 0x140012cf0
   140003f47:	xor    edx,edx
   140003f49:	mov    rcx,QWORD PTR [rip+0xec50]        # 0x140012ba0
   140003f50:	call   rbx
   140003f52:	and    QWORD PTR [rip+0xed96],0x0        # 0x140012cf0
   140003f5a:	mov    rcx,QWORD PTR [rip+0xed97]        # 0x140012cf8
   140003f61:	test   rcx,rcx
   140003f64:	je     0x140003f74
   140003f66:	call   QWORD PTR [rip+0x919c]        # 0x14000d108
   140003f6c:	and    QWORD PTR [rip+0xed84],0x0        # 0x140012cf8
   140003f74:	cmp    QWORD PTR [rip+0xed84],0x0        # 0x140012d00
   140003f7c:	je     0x140003fa8
   140003f7e:	mov    rbx,QWORD PTR [rip+0xec0b]        # 0x140012b90
   140003f85:	mov    rcx,rbx
   140003f88:	call   QWORD PTR [rip+0x952a]        # 0x14000d4b8
   140003f8e:	mov    r8,QWORD PTR [rip+0xed6b]        # 0x140012d00
   140003f95:	xor    edx,edx
   140003f97:	mov    rcx,QWORD PTR [rip+0xec02]        # 0x140012ba0
   140003f9e:	call   rbx
   140003fa0:	and    QWORD PTR [rip+0xed58],0x0        # 0x140012d00
   140003fa8:	mov    rcx,QWORD PTR [rip+0xed59]        # 0x140012d08
   140003faf:	test   rcx,rcx
   140003fb2:	je     0x140003fc2
   140003fb4:	call   QWORD PTR [rip+0x914e]        # 0x14000d108
   140003fba:	and    QWORD PTR [rip+0xed46],0x0        # 0x140012d08
   140003fc2:	cmp    QWORD PTR [rip+0xed46],0x0        # 0x140012d10
   140003fca:	je     0x140003ff6
   140003fcc:	mov    rbx,QWORD PTR [rip+0xebbd]        # 0x140012b90
   140003fd3:	mov    rcx,rbx
   140003fd6:	call   QWORD PTR [rip+0x94dc]        # 0x14000d4b8
   140003fdc:	mov    r8,QWORD PTR [rip+0xed2d]        # 0x140012d10
   140003fe3:	xor    edx,edx
   140003fe5:	mov    rcx,QWORD PTR [rip+0xebb4]        # 0x140012ba0
   140003fec:	call   rbx
   140003fee:	and    QWORD PTR [rip+0xed1a],0x0        # 0x140012d10
   140003ff6:	add    rsp,0x20
   140003ffa:	pop    rbx
   140003ffb:	ret    
   140003ffc:	int3   
   140003ffd:	int3   
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	int3   
   140004001:	int3   
   140004002:	int3   
   140004003:	int3   
   140004004:	mov    QWORD PTR [rsp+0x8],rcx
   140004009:	push   rbx
   14000400a:	sub    rsp,0x20
   14000400e:	lea    rdx,[rsp+0x30]
   140004013:	lea    rcx,[rip+0xed2e]        # 0x140012d48
   14000401a:	call   0x14000b380
   14000401f:	mov    rcx,QWORD PTR [rip+0xed12]        # 0x140012d38
   140004026:	test   rcx,rcx
   140004029:	je     0x14000403b
   14000402b:	mov    rbx,QWORD PTR [rcx]
   14000402e:	call   0x14000b338
   140004033:	mov    rcx,rbx
   140004036:	test   rbx,rbx
   140004039:	jne    0x14000402b
   14000403b:	and    QWORD PTR [rip+0xecf5],0x0        # 0x140012d38
   140004043:	and    DWORD PTR [rip+0xecf6],0x0        # 0x140012d40
   14000404a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000404f:	test   rcx,rcx
   140004052:	je     0x14000405a
   140004054:	call   QWORD PTR [rip+0x91be]        # 0x14000d218
   14000405a:	add    rsp,0x20
   14000405e:	pop    rbx
   14000405f:	ret    
   140004060:	int3   
   140004061:	int3   
   140004062:	int3   
   140004063:	int3   
   140004064:	int3   
   140004065:	int3   
   140004066:	int3   
   140004067:	int3   
   140004068:	int3   
   140004069:	int3   
   14000406a:	int3   
   14000406b:	int3   
   14000406c:	int3   
   14000406d:	int3   
   14000406e:	int3   
   14000406f:	int3   
   140004070:	sub    rsp,0x28
   140004074:	mov    eax,0x5a4d
   140004079:	cmp    WORD PTR [rip+0xffffffffffffbf80],ax        # 0x140000000
   140004080:	je     0x140004086
   140004082:	xor    eax,eax
   140004084:	jmp    0x1400040d5
   140004086:	movsxd rcx,DWORD PTR [rip+0xffffffffffffbfaf]        # 0x14000003c
   14000408d:	lea    rax,[rip+0xffffffffffffbf6c]        # 0x140000000
   140004094:	add    rcx,rax
   140004097:	cmp    DWORD PTR [rcx],0x4550
   14000409d:	jne    0x140004082
   14000409f:	movzx  eax,WORD PTR [rcx+0x18]
   1400040a3:	cmp    eax,0x10b
   1400040a8:	je     0x1400040c4
   1400040aa:	cmp    eax,0x20b
   1400040af:	jne    0x140004082
   1400040b1:	xor    eax,eax
   1400040b3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400040ba:	jbe    0x1400040d5
   1400040bc:	cmp    DWORD PTR [rcx+0xf8],eax
   1400040c2:	jmp    0x1400040d2
   1400040c4:	xor    eax,eax
   1400040c6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400040ca:	jbe    0x1400040d5
   1400040cc:	cmp    DWORD PTR [rcx+0xe8],eax
   1400040d2:	setne  al
   1400040d5:	mov    ecx,0x2
   1400040da:	mov    DWORD PTR [rip+0xe4e0],eax        # 0x1400125c0
   1400040e0:	call   0x140004608
   1400040e5:	mov    ecx,eax
   1400040e7:	call   QWORD PTR [rip+0x92db]        # 0x14000d3c8
   1400040ed:	mov    rcx,QWORD PTR [rip+0x92bc]        # 0x14000d3b0
   1400040f4:	or     rax,0xffffffffffffffff
   1400040f8:	mov    QWORD PTR [rip+0xea71],rax        # 0x140012b70
   1400040ff:	mov    QWORD PTR [rip+0xea72],rax        # 0x140012b78
   140004106:	mov    eax,DWORD PTR [rip+0xe4c8]        # 0x1400125d4
   14000410c:	mov    DWORD PTR [rcx],eax
   14000410e:	mov    rcx,QWORD PTR [rip+0x92db]        # 0x14000d3f0
   140004115:	mov    eax,DWORD PTR [rip+0xe4ad]        # 0x1400125c8
   14000411b:	mov    DWORD PTR [rcx],eax
   14000411d:	call   0x140004660
   140004122:	cmp    DWORD PTR [rip+0xded7],0x0        # 0x140012000
   140004129:	jne    0x140004138
   14000412b:	lea    rcx,[rip+0x52e]        # 0x140004660
   140004132:	call   QWORD PTR [rip+0x9248]        # 0x14000d380
   140004138:	xor    eax,eax
   14000413a:	add    rsp,0x28
   14000413e:	ret    
   14000413f:	int3   
   140004140:	int3   
   140004141:	int3   
   140004142:	int3   
   140004143:	int3   
   140004144:	int3   
   140004145:	int3   
   140004146:	int3   
   140004147:	int3   
   140004148:	int3   
   140004149:	int3   
   14000414a:	int3   
   14000414b:	int3   
   14000414c:	int3   
   14000414d:	int3   
   14000414e:	int3   
   14000414f:	int3   
   140004150:	sub    rsp,0x38
   140004154:	mov    eax,DWORD PTR [rip+0xe476]        # 0x1400125d0
   14000415a:	lea    r8,[rip+0xe457]        # 0x1400125b8
   140004161:	mov    r9d,DWORD PTR [rip+0xe464]        # 0x1400125cc
   140004168:	lea    rdx,[rip+0xe441]        # 0x1400125b0
   14000416f:	mov    DWORD PTR [rip+0xe44f],eax        # 0x1400125c4
   140004175:	lea    rcx,[rip+0xe42c]        # 0x1400125a8
   14000417c:	lea    rax,[rip+0xe441]        # 0x1400125c4
   140004183:	mov    QWORD PTR [rsp+0x20],rax
   140004188:	call   QWORD PTR [rip+0x9252]        # 0x14000d3e0
   14000418e:	mov    DWORD PTR [rip+0xe418],eax        # 0x1400125ac
   140004194:	add    rsp,0x38
   140004198:	ret    
   140004199:	int3   
   14000419a:	int3   
   14000419b:	int3   
   14000419c:	int3   
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400041aa:	mov    QWORD PTR [rsp+0x18],rdi
   1400041af:	push   r12
   1400041b1:	push   r14
   1400041b3:	push   r15
   1400041b5:	sub    rsp,0xb0
   1400041bc:	xor    r15d,r15d
   1400041bf:	mov    DWORD PTR [rsp+0x20],r15d
   1400041c4:	lea    rcx,[rsp+0x40]
   1400041c9:	call   QWORD PTR [rip+0x8f99]        # 0x14000d168
   1400041cf:	nop
   1400041d0:	mov    rax,QWORD PTR gs:0x30
   1400041d9:	mov    rbx,QWORD PTR [rax+0x8]
   1400041dd:	mov    r14d,r15d
   1400041e0:	xor    eax,eax
   1400041e2:	lock cmpxchg QWORD PTR [rip+0xe975],rbx        # 0x140012b60
   1400041eb:	je     0x140004209
   1400041ed:	cmp    rax,rbx
   1400041f0:	jne    0x1400041fc
   1400041f2:	mov    edi,0x1
   1400041f7:	mov    r14d,edi
   1400041fa:	jmp    0x14000420e
   1400041fc:	mov    ecx,0x3e8
   140004201:	call   QWORD PTR [rip+0x9029]        # 0x14000d230
   140004207:	jmp    0x1400041e0
   140004209:	mov    edi,0x1
   14000420e:	mov    eax,DWORD PTR [rip+0xe954]        # 0x140012b68
   140004214:	cmp    eax,edi
   140004216:	jne    0x140004226
   140004218:	mov    esi,0x1f
   14000421d:	mov    ecx,esi
   14000421f:	call   0x140004654
   140004224:	jmp    0x140004297
   140004226:	mov    eax,DWORD PTR [rip+0xe93c]        # 0x140012b68
   14000422c:	test   eax,eax
   14000422e:	jne    0x14000428c
   140004230:	mov    DWORD PTR [rip+0xe932],edi        # 0x140012b68
   140004236:	lea    r12,[rip+0x9323]        # 0x14000d560
   14000423d:	lea    rbx,[rip+0x9304]        # 0x14000d548
   140004244:	mov    QWORD PTR [rsp+0x30],rbx
   140004249:	mov    eax,r15d
   14000424c:	mov    DWORD PTR [rsp+0x24],eax
   140004250:	cmp    rbx,r12
   140004253:	jae    0x14000427e
   140004255:	test   eax,eax
   140004257:	jne    0x140004282
   140004259:	mov    rsi,QWORD PTR [rbx]
   14000425c:	test   rsi,rsi
   14000425f:	je     0x140004273
   140004261:	mov    rcx,rsi
   140004264:	mov    rax,QWORD PTR [rip+0x924d]        # 0x14000d4b8
   14000426b:	call   rax
   14000426d:	call   rsi
   14000426f:	mov    DWORD PTR [rsp+0x24],eax
   140004273:	add    rbx,0x8
   140004277:	mov    QWORD PTR [rsp+0x30],rbx
   14000427c:	jmp    0x140004250
   14000427e:	test   eax,eax
   140004280:	je     0x140004292
   140004282:	mov    eax,0xff
   140004287:	jmp    0x1400043f3
   14000428c:	mov    DWORD PTR [rip+0xe312],edi        # 0x1400125a4
   140004292:	mov    esi,0x1f
   140004297:	mov    eax,DWORD PTR [rip+0xe8cb]        # 0x140012b68
   14000429d:	cmp    eax,edi
   14000429f:	jne    0x1400042be
   1400042a1:	lea    rdx,[rip+0x9298]        # 0x14000d540
   1400042a8:	lea    rcx,[rip+0x9219]        # 0x14000d4c8
   1400042af:	call   0x14000482a
   1400042b4:	mov    DWORD PTR [rip+0xe8aa],0x2        # 0x140012b68
   1400042be:	test   r14d,r14d
   1400042c1:	jne    0x1400042cd
   1400042c3:	mov    rax,r15
   1400042c6:	xchg   QWORD PTR [rip+0xe893],rax        # 0x140012b60
   1400042cd:	cmp    QWORD PTR [rip+0xe8ac],r15        # 0x140012b80
   1400042d4:	je     0x140004304
   1400042d6:	lea    rcx,[rip+0xe8a3]        # 0x140012b80
   1400042dd:	call   0x1400046c0
   1400042e2:	test   eax,eax
   1400042e4:	je     0x140004304
   1400042e6:	mov    rbx,QWORD PTR [rip+0xe893]        # 0x140012b80
   1400042ed:	mov    rcx,rbx
   1400042f0:	mov    rax,QWORD PTR [rip+0x91c1]        # 0x14000d4b8
   1400042f7:	call   rax
   1400042f9:	xor    r8d,r8d
   1400042fc:	lea    edx,[r8+0x2]
   140004300:	xor    ecx,ecx
   140004302:	call   rbx
   140004304:	mov    rax,QWORD PTR [rip+0x9105]        # 0x14000d410
   14000430b:	mov    rdx,QWORD PTR [rax]
   14000430e:	test   rdx,rdx
   140004311:	jne    0x14000431d
   140004313:	mov    eax,0xff
   140004318:	jmp    0x1400043f3
   14000431d:	mov    QWORD PTR [rsp+0x28],rdx
   140004322:	mov    ecx,DWORD PTR [rsp+0x20]
   140004326:	cmp    WORD PTR [rdx],0x20
   14000432a:	ja     0x1400043a4
   14000432c:	cmp    WORD PTR [rdx],r15w
   140004330:	je     0x140004336
   140004332:	test   ecx,ecx
   140004334:	jne    0x1400043a4
   140004336:	movzx  eax,WORD PTR [rdx]
   140004339:	sub    ax,di
   14000433c:	cmp    ax,si
   14000433f:	ja     0x14000434c
   140004341:	add    rdx,0x2
   140004345:	mov    QWORD PTR [rsp+0x28],rdx
   14000434a:	jmp    0x140004336
   14000434c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140004350:	movzx  eax,WORD PTR [rsp+0x80]
   140004358:	mov    r9d,0xa
   14000435e:	and    cl,dil
   140004361:	cmovne r9d,eax
   140004365:	mov    r8,rdx
   140004368:	xor    edx,edx
   14000436a:	lea    rcx,[rip+0xffffffffffffbc8f]        # 0x140000000
   140004371:	call   0x1400039d8
   140004376:	mov    DWORD PTR [rip+0xe224],eax        # 0x1400125a0
   14000437c:	cmp    DWORD PTR [rip+0xe23d],r15d        # 0x1400125c0
   140004383:	jne    0x14000438d
   140004385:	mov    ecx,eax
   140004387:	call   QWORD PTR [rip+0x902b]        # 0x14000d3b8
   14000438d:	cmp    DWORD PTR [rip+0xe210],r15d        # 0x1400125a4
   140004394:	jne    0x1400043a2
   140004396:	call   QWORD PTR [rip+0x906c]        # 0x14000d408
   14000439c:	mov    eax,DWORD PTR [rip+0xe1fe]        # 0x1400125a0
   1400043a2:	jmp    0x1400043f3
   1400043a4:	cmp    WORD PTR [rdx],0x22
   1400043a8:	jne    0x1400043b8
   1400043aa:	mov    eax,r15d
   1400043ad:	test   ecx,ecx
   1400043af:	sete   al
   1400043b2:	mov    ecx,eax
   1400043b4:	mov    DWORD PTR [rsp+0x20],eax
   1400043b8:	add    rdx,0x2
   1400043bc:	mov    QWORD PTR [rsp+0x28],rdx
   1400043c1:	jmp    0x140004326
   1400043c6:	mov    DWORD PTR [rip+0xe1d4],eax        # 0x1400125a0
   1400043cc:	cmp    DWORD PTR [rip+0xe1ed],0x0        # 0x1400125c0
   1400043d3:	jne    0x1400043de
   1400043d5:	mov    ecx,eax
   1400043d7:	call   QWORD PTR [rip+0x901b]        # 0x14000d3f8
   1400043dd:	int3   
   1400043de:	cmp    DWORD PTR [rip+0xe1bf],0x0        # 0x1400125a4
   1400043e5:	jne    0x1400043f3
   1400043e7:	call   QWORD PTR [rip+0x901b]        # 0x14000d408
   1400043ed:	mov    eax,DWORD PTR [rip+0xe1ad]        # 0x1400125a0
   1400043f3:	lea    r11,[rsp+0xb0]
   1400043fb:	mov    rbx,QWORD PTR [r11+0x20]
   1400043ff:	mov    rsi,QWORD PTR [r11+0x28]
   140004403:	mov    rdi,QWORD PTR [r11+0x30]
   140004407:	mov    rsp,r11
   14000440a:	pop    r15
   14000440c:	pop    r14
   14000440e:	pop    r12
   140004410:	ret    
   140004411:	int3   
   140004412:	int3   
   140004413:	int3   
   140004414:	int3   
   140004415:	int3   
   140004416:	int3   
   140004417:	int3   
   140004418:	int3   
   140004419:	int3   
   14000441a:	int3   
   14000441b:	int3   
   14000441c:	int3   
   14000441d:	int3   
   14000441e:	int3   
   14000441f:	int3   
   140004420:	sub    rsp,0x28
   140004424:	call   0x140004754
   140004429:	add    rsp,0x28
   14000442d:	jmp    0x1400041a0
   140004432:	int3   
   140004433:	int3   
   140004434:	int3   
   140004435:	int3   
   140004436:	int3   
   140004437:	int3   
   140004438:	int3   
   140004439:	int3   
   14000443a:	int3   
   14000443b:	int3   
   14000443c:	int3   
   14000443d:	int3   
   14000443e:	int3   
   14000443f:	int3   
   140004440:	int3   
   140004441:	int3   
   140004442:	int3   
   140004443:	int3   
   140004444:	int3   
   140004445:	int3   
   140004446:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004450:	cmp    rcx,QWORD PTR [rip+0xdbb1]        # 0x140012008
   140004457:	jne    0x140004469
   140004459:	rol    rcx,0x10
   14000445d:	test   cx,0xffff
   140004462:	jne    0x140004465
   140004464:	ret    
   140004465:	ror    rcx,0x10
   140004469:	jmp    0x1400048a0
   14000446e:	int3   
   14000446f:	int3   
   140004470:	int3   
   140004471:	int3   
   140004472:	int3   
   140004473:	int3   
   140004474:	mov    QWORD PTR [rsp+0x8],rbx
   140004479:	push   rdi
   14000447a:	sub    rsp,0x20
   14000447e:	mov    rdi,rcx
   140004481:	mov    rax,QWORD PTR [rip+0xe6f0]        # 0x140012b78
   140004488:	mov    QWORD PTR [rsp+0x38],rax
   14000448d:	cmp    rax,0xffffffffffffffff
   140004491:	jne    0x1400044aa
   140004493:	mov    rbx,QWORD PTR [rip+0x8f36]        # 0x14000d3d0
   14000449a:	mov    rcx,rbx
   14000449d:	call   QWORD PTR [rip+0x9015]        # 0x14000d4b8
   1400044a3:	mov    rcx,rdi
   1400044a6:	call   rbx
   1400044a8:	jmp    0x140004507
   1400044aa:	mov    ecx,0x8
   1400044af:	call   0x140004a18
   1400044b4:	nop
   1400044b5:	mov    rax,QWORD PTR [rip+0xe6bc]        # 0x140012b78
   1400044bc:	mov    QWORD PTR [rsp+0x38],rax
   1400044c1:	mov    rax,QWORD PTR [rip+0xe6a8]        # 0x140012b70
   1400044c8:	mov    QWORD PTR [rsp+0x40],rax
   1400044cd:	lea    r8,[rsp+0x40]
   1400044d2:	lea    rdx,[rsp+0x38]
   1400044d7:	mov    rcx,rdi
   1400044da:	call   0x140004a30
   1400044df:	mov    rbx,rax
   1400044e2:	mov    rdx,QWORD PTR [rsp+0x38]
   1400044e7:	mov    QWORD PTR [rip+0xe68a],rdx        # 0x140012b78
   1400044ee:	mov    rdx,QWORD PTR [rsp+0x40]
   1400044f3:	mov    QWORD PTR [rip+0xe676],rdx        # 0x140012b70
   1400044fa:	mov    ecx,0x8
   1400044ff:	call   0x140004a24
   140004504:	mov    rax,rbx
   140004507:	mov    rbx,QWORD PTR [rsp+0x30]
   14000450c:	add    rsp,0x20
   140004510:	pop    rdi
   140004511:	ret    
   140004512:	int3   
   140004513:	int3   
   140004514:	int3   
   140004515:	int3   
   140004516:	int3   
   140004517:	int3   
   140004518:	sub    rsp,0x28
   14000451c:	call   0x140004474
   140004521:	neg    rax
   140004524:	sbb    eax,eax
   140004526:	neg    eax
   140004528:	dec    eax
   14000452a:	add    rsp,0x28
   14000452e:	ret    
   14000452f:	int3   
   140004530:	int3   
   140004531:	int3   
   140004532:	int3   
   140004533:	int3   
   140004534:	int3   
   140004535:	int3   
   140004536:	int3   
   140004537:	int3   
   140004538:	int3   
   140004539:	int3   
   14000453a:	int3   
   14000453b:	int3   
   14000453c:	int3   
   14000453d:	int3   
   14000453e:	int3   
   14000453f:	int3   
   140004540:	sub    rsp,0x28
   140004544:	mov    rax,QWORD PTR [rcx]
   140004547:	cmp    DWORD PTR [rax],0xe06d7363
   14000454d:	jne    0x140004572
   14000454f:	cmp    DWORD PTR [rax+0x18],0x4
   140004553:	jne    0x140004572
   140004555:	mov    ecx,DWORD PTR [rax+0x20]
   140004558:	lea    eax,[rcx-0x19930520]
   14000455e:	cmp    eax,0x2
   140004561:	jbe    0x14000456b
   140004563:	cmp    ecx,0x1994000
   140004569:	jne    0x140004572
   14000456b:	call   QWORD PTR [rip+0x8e67]        # 0x14000d3d8
   140004571:	int3   
   140004572:	xor    eax,eax
   140004574:	add    rsp,0x28
   140004578:	ret    
   140004579:	int3   
   14000457a:	int3   
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	sub    rsp,0x28
   140004584:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140004540
   14000458b:	call   QWORD PTR [rip+0x8b2f]        # 0x14000d0c0
   140004591:	xor    eax,eax
   140004593:	add    rsp,0x28
   140004597:	ret    
   140004598:	int3   
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	jmp    QWORD PTR [rip+0x8dfc]        # 0x14000d3a0
   1400045a4:	int3   
   1400045a5:	int3   
   1400045a6:	int3   
   1400045a7:	int3   
   1400045a8:	int3   
   1400045a9:	int3   
   1400045aa:	int3   
   1400045ab:	int3   
   1400045ac:	sub    rsp,0x18
   1400045b0:	xor    edx,edx
   1400045b2:	lea    rax,[rcx-0x1]
   1400045b6:	cmp    rax,0xfffffffffffffffd
   1400045ba:	ja     0x1400045f8
   1400045bc:	mov    eax,0x5a4d
   1400045c1:	cmp    WORD PTR [rcx],ax
   1400045c4:	jne    0x1400045f0
   1400045c6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400045c9:	jl     0x1400045f0
   1400045cb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400045d2:	jae    0x1400045f0
   1400045d4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400045d8:	add    rax,rcx
   1400045db:	mov    QWORD PTR [rsp],rax
   1400045df:	cmp    DWORD PTR [rax],0x4550
   1400045e5:	cmovne rax,rdx
   1400045e9:	mov    rdx,rax
   1400045ec:	mov    QWORD PTR [rsp],rax
   1400045f0:	jmp    0x1400045f8
   1400045f2:	xor    edx,edx
   1400045f4:	mov    QWORD PTR [rsp],rdx
   1400045f8:	mov    rax,rdx
   1400045fb:	add    rsp,0x18
   1400045ff:	ret    
   140004600:	int3   
   140004601:	int3   
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	rex push rbx
   14000460a:	sub    rsp,0x20
   14000460e:	mov    ebx,ecx
   140004610:	xor    ecx,ecx
   140004612:	call   QWORD PTR [rip+0x8b10]        # 0x14000d128
   140004618:	test   rax,rax
   14000461b:	je     0x140004645
   14000461d:	mov    rcx,rax
   140004620:	call   0x1400045ac
   140004625:	test   rax,rax
   140004628:	je     0x140004645
   14000462a:	mov    ecx,0x2
   14000462f:	cmp    WORD PTR [rax+0x5c],cx
   140004633:	jne    0x140004639
   140004635:	mov    eax,ecx
   140004637:	jmp    0x140004647
   140004639:	cmp    WORD PTR [rax+0x5c],0x3
   14000463e:	mov    eax,0x1
   140004643:	je     0x140004647
   140004645:	mov    eax,ebx
   140004647:	add    rsp,0x20
   14000464b:	pop    rbx
   14000464c:	ret    
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	int3   
   140004651:	int3   
   140004652:	int3   
   140004653:	int3   
   140004654:	jmp    QWORD PTR [rip+0x8d8e]        # 0x14000d3e8
   14000465a:	int3   
   14000465b:	int3   
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	xor    eax,eax
   140004662:	ret    
   140004663:	int3   
   140004664:	int3   
   140004665:	int3   
   140004666:	int3   
   140004667:	int3   
   140004668:	int3   
   140004669:	int3   
   14000466a:	int3   
   14000466b:	int3   
   14000466c:	int3   
   14000466d:	int3   
   14000466e:	int3   
   14000466f:	int3   
   140004670:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004674:	xor    r9d,r9d
   140004677:	add    r8,rcx
   14000467a:	mov    r10,rdx
   14000467d:	movzx  eax,WORD PTR [r8+0x14]
   140004682:	movzx  r11d,WORD PTR [r8+0x6]
   140004687:	add    rax,0x18
   14000468b:	add    rax,r8
   14000468e:	test   r11d,r11d
   140004691:	je     0x1400046b1
   140004693:	mov    edx,DWORD PTR [rax+0xc]
   140004696:	cmp    r10,rdx
   140004699:	jb     0x1400046a5
   14000469b:	mov    ecx,DWORD PTR [rax+0x8]
   14000469e:	add    ecx,edx
   1400046a0:	cmp    r10,rcx
   1400046a3:	jb     0x1400046b3
   1400046a5:	inc    r9d
   1400046a8:	add    rax,0x28
   1400046ac:	cmp    r9d,r11d
   1400046af:	jb     0x140004693
   1400046b1:	xor    eax,eax
   1400046b3:	ret    
   1400046b4:	int3   
   1400046b5:	int3   
   1400046b6:	int3   
   1400046b7:	int3   
   1400046b8:	int3   
   1400046b9:	int3   
   1400046ba:	int3   
   1400046bb:	int3   
   1400046bc:	int3   
   1400046bd:	int3   
   1400046be:	int3   
   1400046bf:	int3   
   1400046c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400046c5:	push   rdi
   1400046c6:	sub    rsp,0x20
   1400046ca:	mov    rbx,rcx
   1400046cd:	lea    rdi,[rip+0xffffffffffffb92c]        # 0x140000000
   1400046d4:	mov    rcx,rdi
   1400046d7:	call   0x140004720
   1400046dc:	test   eax,eax
   1400046de:	je     0x140004702
   1400046e0:	sub    rbx,rdi
   1400046e3:	mov    rdx,rbx
   1400046e6:	mov    rcx,rdi
   1400046e9:	call   0x140004670
   1400046ee:	test   rax,rax
   1400046f1:	je     0x140004702
   1400046f3:	mov    eax,DWORD PTR [rax+0x24]
   1400046f6:	shr    eax,0x1f
   1400046f9:	not    eax
   1400046fb:	and    eax,0x1
   1400046fe:	jmp    0x140004702
   140004700:	xor    eax,eax
   140004702:	mov    rbx,QWORD PTR [rsp+0x30]
   140004707:	add    rsp,0x20
   14000470b:	pop    rdi
   14000470c:	ret    
   14000470d:	int3   
   14000470e:	int3   
   14000470f:	int3   
   140004710:	int3   
   140004711:	int3   
   140004712:	int3   
   140004713:	int3   
   140004714:	int3   
   140004715:	int3   
   140004716:	int3   
   140004717:	int3   
   140004718:	int3   
   140004719:	int3   
   14000471a:	int3   
   14000471b:	int3   
   14000471c:	int3   
   14000471d:	int3   
   14000471e:	int3   
   14000471f:	int3   
   140004720:	mov    rax,rcx
   140004723:	mov    ecx,0x5a4d
   140004728:	cmp    WORD PTR [rax],cx
   14000472b:	je     0x140004730
   14000472d:	xor    eax,eax
   14000472f:	ret    
   140004730:	movsxd rcx,DWORD PTR [rax+0x3c]
   140004734:	add    rcx,rax
   140004737:	xor    eax,eax
   140004739:	cmp    DWORD PTR [rcx],0x4550
   14000473f:	jne    0x14000474d
   140004741:	mov    edx,0x20b
   140004746:	cmp    WORD PTR [rcx+0x18],dx
   14000474a:	sete   al
   14000474d:	ret    
   14000474e:	int3   
   14000474f:	int3   
   140004750:	int3   
   140004751:	int3   
   140004752:	int3   
   140004753:	int3   
   140004754:	mov    QWORD PTR [rsp+0x20],rbx
   140004759:	push   rbp
   14000475a:	mov    rbp,rsp
   14000475d:	sub    rsp,0x20
   140004761:	and    QWORD PTR [rbp+0x18],0x0
   140004766:	movabs rbx,0x2b992ddfa232
   140004770:	mov    rax,QWORD PTR [rip+0xd891]        # 0x140012008
   140004777:	cmp    rax,rbx
   14000477a:	jne    0x14000480f
   140004780:	lea    rcx,[rbp+0x18]
   140004784:	call   QWORD PTR [rip+0x8ac6]        # 0x14000d250
   14000478a:	mov    rax,QWORD PTR [rbp+0x18]
   14000478e:	mov    QWORD PTR [rbp+0x10],rax
   140004792:	call   QWORD PTR [rip+0x89c0]        # 0x14000d158
   140004798:	mov    eax,eax
   14000479a:	xor    QWORD PTR [rbp+0x10],rax
   14000479e:	call   QWORD PTR [rip+0x89d4]        # 0x14000d178
   1400047a4:	mov    eax,eax
   1400047a6:	xor    QWORD PTR [rbp+0x10],rax
   1400047aa:	call   QWORD PTR [rip+0x8aa8]        # 0x14000d258
   1400047b0:	mov    eax,eax
   1400047b2:	shl    rax,0x18
   1400047b6:	xor    QWORD PTR [rbp+0x10],rax
   1400047ba:	call   QWORD PTR [rip+0x8a98]        # 0x14000d258
   1400047c0:	mov    eax,eax
   1400047c2:	lea    rcx,[rbp+0x10]
   1400047c6:	xor    rax,QWORD PTR [rbp+0x10]
   1400047ca:	xor    rax,rcx
   1400047cd:	lea    rcx,[rbp+0x20]
   1400047d1:	mov    QWORD PTR [rbp+0x10],rax
   1400047d5:	call   QWORD PTR [rip+0x89bd]        # 0x14000d198
   1400047db:	mov    eax,DWORD PTR [rbp+0x20]
   1400047de:	movabs rcx,0xffffffffffff
   1400047e8:	shl    rax,0x20
   1400047ec:	xor    rax,QWORD PTR [rbp+0x20]
   1400047f0:	xor    rax,QWORD PTR [rbp+0x10]
   1400047f4:	and    rax,rcx
   1400047f7:	movabs rcx,0x2b992ddfa233
   140004801:	cmp    rax,rbx
   140004804:	cmove  rax,rcx
   140004808:	mov    QWORD PTR [rip+0xd7f9],rax        # 0x140012008
   14000480f:	mov    rbx,QWORD PTR [rsp+0x48]
   140004814:	not    rax
   140004817:	mov    QWORD PTR [rip+0xd7f2],rax        # 0x140012010
   14000481e:	add    rsp,0x20
   140004822:	pop    rbp
   140004823:	ret    
   140004824:	int3   
   140004825:	int3   
   140004826:	int3   
   140004827:	int3   
   140004828:	int3   
   140004829:	int3   
   14000482a:	jmp    QWORD PTR [rip+0x8b48]        # 0x14000d378
   140004830:	int3   
   140004831:	int3   
   140004832:	int3   
   140004833:	int3   
   140004834:	int3   
   140004835:	int3   
   140004836:	jmp    QWORD PTR [rip+0x8b6c]        # 0x14000d3a8
   14000483c:	int3   
   14000483d:	int3   
   14000483e:	int3   
   14000483f:	int3   
   140004840:	int3   
   140004841:	int3   
   140004842:	int3   
   140004843:	int3   
   140004844:	int3   
   140004845:	int3   
   140004846:	int3   
   140004847:	int3   
   140004848:	int3   
   140004849:	int3   
   14000484a:	int3   
   14000484b:	int3   
   14000484c:	int3   
   14000484d:	int3   
   14000484e:	int3   
   14000484f:	int3   
   140004850:	ret    0x0
   140004853:	int3   
   140004854:	int3   
   140004855:	int3   
   140004856:	int3   
   140004857:	int3   
   140004858:	int3   
   140004859:	int3   
   14000485a:	int3   
   14000485b:	int3   
   14000485c:	rex push rbx
   14000485e:	sub    rsp,0x20
   140004862:	mov    rbx,rcx
   140004865:	xor    ecx,ecx
   140004867:	call   QWORD PTR [rip+0x8853]        # 0x14000d0c0
   14000486d:	mov    rcx,rbx
   140004870:	call   QWORD PTR [rip+0x8842]        # 0x14000d0b8
   140004876:	call   QWORD PTR [rip+0x890c]        # 0x14000d188
   14000487c:	mov    rcx,rax
   14000487f:	mov    edx,0xc0000409
   140004884:	add    rsp,0x20
   140004888:	pop    rbx
   140004889:	rex.W jmp QWORD PTR [rip+0x88b8]        # 0x14000d148
   140004890:	int3   
   140004891:	int3   
   140004892:	int3   
   140004893:	int3   
   140004894:	int3   
   140004895:	int3   
   140004896:	int3   
   140004897:	int3   
   140004898:	int3   
   140004899:	int3   
   14000489a:	int3   
   14000489b:	int3   
   14000489c:	int3   
   14000489d:	int3   
   14000489e:	int3   
   14000489f:	int3   
   1400048a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400048a5:	sub    rsp,0x88
   1400048ac:	lea    rcx,[rip+0xddcd]        # 0x140012680
   1400048b3:	call   QWORD PTR [rip+0x8bef]        # 0x14000d4a8
   1400048b9:	mov    rax,QWORD PTR [rip+0xdeb8]        # 0x140012778
   1400048c0:	mov    QWORD PTR [rsp+0x48],rax
   1400048c5:	xor    r8d,r8d
   1400048c8:	lea    rdx,[rsp+0x50]
   1400048cd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400048d2:	call   QWORD PTR [rip+0x8bc8]        # 0x14000d4a0
   1400048d8:	mov    QWORD PTR [rsp+0x40],rax
   1400048dd:	cmp    QWORD PTR [rsp+0x40],0x0
   1400048e3:	je     0x140004927
   1400048e5:	mov    QWORD PTR [rsp+0x38],0x0
   1400048ee:	lea    rax,[rsp+0x58]
   1400048f3:	mov    QWORD PTR [rsp+0x30],rax
   1400048f8:	lea    rax,[rsp+0x60]
   1400048fd:	mov    QWORD PTR [rsp+0x28],rax
   140004902:	lea    rax,[rip+0xdd77]        # 0x140012680
   140004909:	mov    QWORD PTR [rsp+0x20],rax
   14000490e:	mov    r9,QWORD PTR [rsp+0x40]
   140004913:	mov    r8,QWORD PTR [rsp+0x48]
   140004918:	mov    rdx,QWORD PTR [rsp+0x50]
   14000491d:	xor    ecx,ecx
   14000491f:	call   QWORD PTR [rip+0x8b73]        # 0x14000d498
   140004925:	jmp    0x14000494a
   140004927:	mov    rax,QWORD PTR [rip+0xddea]        # 0x140012718
   14000492e:	mov    rax,QWORD PTR [rax]
   140004931:	mov    QWORD PTR [rip+0xde40],rax        # 0x140012778
   140004938:	mov    rax,QWORD PTR [rip+0xddd9]        # 0x140012718
   14000493f:	add    rax,0x8
   140004943:	mov    QWORD PTR [rip+0xddce],rax        # 0x140012718
   14000494a:	mov    rax,QWORD PTR [rip+0xde27]        # 0x140012778
   140004951:	mov    QWORD PTR [rip+0xdc98],rax        # 0x1400125f0
   140004958:	mov    rax,QWORD PTR [rsp+0x90]
   140004960:	mov    QWORD PTR [rip+0xdd99],rax        # 0x140012700
   140004967:	mov    DWORD PTR [rip+0xdc6f],0xc0000409        # 0x1400125e0
   140004971:	mov    DWORD PTR [rip+0xdc69],0x1        # 0x1400125e4
   14000497b:	mov    DWORD PTR [rip+0xdc73],0x3        # 0x1400125f8
   140004985:	mov    eax,0x8
   14000498a:	imul   rax,rax,0x0
   14000498e:	lea    rcx,[rip+0xdc6b]        # 0x140012600
   140004995:	mov    QWORD PTR [rcx+rax*1],0x2
   14000499d:	mov    eax,0x8
   1400049a2:	imul   rax,rax,0x1
   1400049a6:	lea    rcx,[rip+0xdc53]        # 0x140012600
   1400049ad:	mov    rdx,QWORD PTR [rip+0xd654]        # 0x140012008
   1400049b4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400049b8:	mov    eax,0x8
   1400049bd:	imul   rax,rax,0x2
   1400049c1:	lea    rcx,[rip+0xdc38]        # 0x140012600
   1400049c8:	mov    rdx,QWORD PTR [rip+0xd641]        # 0x140012010
   1400049cf:	mov    QWORD PTR [rcx+rax*1],rdx
   1400049d3:	mov    eax,0x8
   1400049d8:	imul   rax,rax,0x0
   1400049dc:	mov    rcx,QWORD PTR [rip+0xd625]        # 0x140012008
   1400049e3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400049e8:	mov    eax,0x8
   1400049ed:	imul   rax,rax,0x1
   1400049f1:	mov    rcx,QWORD PTR [rip+0xd618]        # 0x140012010
   1400049f8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400049fd:	lea    rcx,[rip+0x9394]        # 0x14000dd98
   140004a04:	call   0x14000485c
   140004a09:	add    rsp,0x88
   140004a10:	ret    
   140004a11:	int3   
   140004a12:	int3   
   140004a13:	int3   
   140004a14:	int3   
   140004a15:	int3   
   140004a16:	int3   
   140004a17:	int3   
   140004a18:	jmp    QWORD PTR [rip+0x89e2]        # 0x14000d400
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	int3   
   140004a21:	int3   
   140004a22:	int3   
   140004a23:	int3   
   140004a24:	jmp    QWORD PTR [rip+0x89fe]        # 0x14000d428
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	int3   
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	jmp    QWORD PTR [rip+0x898a]        # 0x14000d3c0
   140004a36:	int3   
   140004a37:	int3   
   140004a38:	int3   
   140004a39:	int3   
   140004a3a:	int3   
   140004a3b:	int3   
   140004a3c:	int3   
   140004a3d:	int3   
   140004a3e:	int3   
   140004a3f:	int3   
   140004a40:	int3   
   140004a41:	int3   
   140004a42:	int3   
   140004a43:	int3   
   140004a44:	int3   
   140004a45:	int3   
   140004a46:	int3   
   140004a47:	int3   
   140004a48:	int3   
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	jmp    QWORD PTR [rip+0x869a]        # 0x14000d0f0
   140004a56:	int3   
   140004a57:	int3   
   140004a58:	int3   
   140004a59:	int3   
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	int3   
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	jmp    QWORD PTR [rip+0x8682]        # 0x14000d0e8
   140004a66:	int3   
   140004a67:	int3   
   140004a68:	int3   
   140004a69:	int3   
   140004a6a:	int3   
   140004a6b:	int3   
   140004a6c:	int3   
   140004a6d:	int3   
   140004a6e:	int3   
   140004a6f:	int3   
   140004a70:	jmp    QWORD PTR [rip+0x891a]        # 0x14000d390
   140004a76:	int3   
   140004a77:	int3   
   140004a78:	int3   
   140004a79:	int3   
   140004a7a:	int3   
   140004a7b:	int3   
   140004a7c:	sub    rsp,0x38
   140004a80:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004a89:	call   0x1400013a0
   140004a8e:	nop
   140004a8f:	jmp    0x140004a96
   140004a91:	mov    rax,QWORD PTR [rsp+0x50]
   140004a96:	add    rsp,0x38
   140004a9a:	ret    
   140004a9b:	int3   
   140004a9c:	int3   
   140004a9d:	int3   
   140004a9e:	int3   
   140004a9f:	int3   
   140004aa0:	int3   
   140004aa1:	int3   
   140004aa2:	jmp    QWORD PTR [rip+0x88e0]        # 0x14000d388
   140004aa8:	int3   
   140004aa9:	int3   
   140004aaa:	int3   
   140004aab:	int3   
   140004aac:	int3   
   140004aad:	int3   
   140004aae:	int3   
   140004aaf:	int3   
   140004ab0:	sub    rsp,0x28
   140004ab4:	mov    r8,QWORD PTR [r9+0x38]
   140004ab8:	mov    rcx,rdx
   140004abb:	mov    rdx,r9
   140004abe:	call   0x140004ad4
   140004ac3:	mov    eax,0x1
   140004ac8:	add    rsp,0x28
   140004acc:	ret    
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	int3   
   140004ad1:	int3   
   140004ad2:	int3   
   140004ad3:	int3   
   140004ad4:	rex push rbx
   140004ad6:	sub    rsp,0x20
   140004ada:	mov    r11d,DWORD PTR [r8]
   140004add:	mov    rbx,rdx
   140004ae0:	and    r11d,0xfffffff8
   140004ae4:	mov    r9,rcx
   140004ae7:	test   BYTE PTR [r8],0x4
   140004aeb:	mov    r10,rcx
   140004aee:	je     0x140004b03
   140004af0:	mov    eax,DWORD PTR [r8+0x8]
   140004af4:	movsxd r10,DWORD PTR [r8+0x4]
   140004af8:	neg    eax
   140004afa:	add    r10,rcx
   140004afd:	movsxd rcx,eax
   140004b00:	and    r10,rcx
   140004b03:	movsxd rax,r11d
   140004b06:	mov    rdx,QWORD PTR [rax+r10*1]
   140004b0a:	mov    rax,QWORD PTR [rbx+0x10]
   140004b0e:	mov    ecx,DWORD PTR [rax+0x8]
   140004b11:	add    rcx,QWORD PTR [rbx+0x8]
   140004b15:	test   BYTE PTR [rcx+0x3],0xf
   140004b19:	je     0x140004b27
   140004b1b:	movzx  eax,BYTE PTR [rcx+0x3]
   140004b1f:	and    eax,0xfffffff0
   140004b22:	cdqe   
   140004b24:	add    r9,rax
   140004b27:	xor    r9,rdx
   140004b2a:	mov    rcx,r9
   140004b2d:	add    rsp,0x20
   140004b31:	pop    rbx
   140004b32:	jmp    0x140004450
   140004b37:	int3   
   140004b38:	int3   
   140004b39:	int3   
   140004b3a:	int3   
   140004b3b:	int3   
   140004b3c:	int3   
   140004b3d:	int3   
   140004b3e:	jmp    QWORD PTR [rip+0x88dc]        # 0x14000d420
   140004b44:	int3   
   140004b45:	int3   
   140004b46:	int3   
   140004b47:	int3   
   140004b48:	int3   
   140004b49:	int3   
   140004b4a:	jmp    QWORD PTR [rip+0x88c8]        # 0x14000d418
   140004b50:	int3   
   140004b51:	int3   
   140004b52:	int3   
   140004b53:	int3   
   140004b54:	int3   
   140004b55:	int3   
   140004b56:	jmp    QWORD PTR [rip+0x88d4]        # 0x14000d430
   140004b5c:	int3   
   140004b5d:	int3   
   140004b5e:	int3   
   140004b5f:	int3   
   140004b60:	int3   
   140004b61:	int3   
   140004b62:	int3   
   140004b63:	int3   
   140004b64:	int3   
   140004b65:	int3   
   140004b66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004b70:	jmp    rax
   140004b72:	int3   
   140004b73:	int3   
   140004b74:	xor    eax,eax
   140004b76:	mov    QWORD PTR [rip+0xe197],0x1        # 0x140012d18
   140004b81:	xorps  xmm0,xmm0
   140004b84:	mov    QWORD PTR [rip+0xe185],rax        # 0x140012d10
   140004b8b:	xorps  xmm1,xmm1
   140004b8e:	mov    DWORD PTR [rip+0xe19c],eax        # 0x140012d30
   140004b94:	lea    rax,[rip+0xe155]        # 0x140012cf0
   140004b9b:	movdqa XMMWORD PTR [rip+0xe14d],xmm0        # 0x140012cf0
   140004ba3:	movdqa XMMWORD PTR [rip+0xe155],xmm1        # 0x140012d00
   140004bab:	movdqa XMMWORD PTR [rip+0xe16d],xmm0        # 0x140012d20
   140004bb3:	ret    
   140004bb4:	int3   
   140004bb5:	int3   
   140004bb6:	int3   
   140004bb7:	int3   
   140004bb8:	int3   
   140004bb9:	int3   
   140004bba:	int3   
   140004bbb:	int3   
   140004bbc:	int3   
   140004bbd:	int3   
   140004bbe:	int3   
   140004bbf:	int3   
   140004bc0:	mov    DWORD PTR [rdx],0x1
   140004bc6:	xor    eax,eax
   140004bc8:	ret    
   140004bc9:	int3   
   140004bca:	int3   
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	mov    eax,0x1
   140004bd5:	ret    
   140004bd6:	int3   
   140004bd7:	int3   
   140004bd8:	int3   
   140004bd9:	int3   
   140004bda:	int3   
   140004bdb:	int3   
   140004bdc:	int3   
   140004bdd:	int3   
   140004bde:	int3   
   140004bdf:	int3   
   140004be0:	sub    rcx,0x8
   140004be4:	jmp    0x140008060
   140004be9:	int3   
   140004bea:	int3   
   140004beb:	int3   
   140004bec:	int3   
   140004bed:	int3   
   140004bee:	int3   
   140004bef:	int3   
   140004bf0:	sub    rcx,0x8
   140004bf4:	jmp    0x1400034b0
   140004bf9:	int3   
   140004bfa:	int3   
   140004bfb:	int3   
   140004bfc:	int3   
   140004bfd:	int3   
   140004bfe:	int3   
   140004bff:	int3   
   140004c00:	sub    rcx,0x10
   140004c04:	jmp    0x1400034b0
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	sub    rcx,0x18
   140004c14:	jmp    0x1400034b0
   140004c19:	int3   
   140004c1a:	int3   
   140004c1b:	int3   
   140004c1c:	int3   
   140004c1d:	int3   
   140004c1e:	int3   
   140004c1f:	int3   
   140004c20:	sub    rcx,0x10
   140004c24:	jmp    0x140008030
   140004c29:	int3   
   140004c2a:	int3   
   140004c2b:	int3   
   140004c2c:	int3   
   140004c2d:	int3   
   140004c2e:	int3   
   140004c2f:	int3   
   140004c30:	mov    eax,0x1
   140004c35:	lock xadd DWORD PTR [rcx+0xc],eax
   140004c3a:	inc    eax
   140004c3c:	ret    
   140004c3d:	int3   
   140004c3e:	int3   
   140004c3f:	int3   
   140004c40:	sub    rcx,0x8
   140004c44:	jmp    0x140008030
   140004c49:	int3   
   140004c4a:	int3   
   140004c4b:	int3   
   140004c4c:	int3   
   140004c4d:	int3   
   140004c4e:	int3   
   140004c4f:	int3   
   140004c50:	mov    eax,0x8000ffff
   140004c55:	ret    
   140004c56:	int3   
   140004c57:	int3   
   140004c58:	int3   
   140004c59:	int3   
   140004c5a:	int3   
   140004c5b:	int3   
   140004c5c:	int3   
   140004c5d:	int3   
   140004c5e:	int3   
   140004c5f:	int3   
   140004c60:	and    DWORD PTR [rdx],0x0
   140004c63:	xor    eax,eax
   140004c65:	ret    
   140004c66:	int3   
   140004c67:	int3   
   140004c68:	int3   
   140004c69:	int3   
   140004c6a:	int3   
   140004c6b:	int3   
   140004c6c:	int3   
   140004c6d:	int3   
   140004c6e:	int3   
   140004c6f:	int3   
   140004c70:	sub    rcx,0x10
   140004c74:	jmp    0x140008db0
   140004c79:	int3   
   140004c7a:	int3   
   140004c7b:	int3   
   140004c7c:	int3   
   140004c7d:	int3   
   140004c7e:	int3   
   140004c7f:	int3   
   140004c80:	sub    rcx,0x18
   140004c84:	jmp    0x140008db0
   140004c89:	int3   
   140004c8a:	int3   
   140004c8b:	int3   
   140004c8c:	int3   
   140004c8d:	int3   
   140004c8e:	int3   
   140004c8f:	int3   
   140004c90:	sub    rcx,0x10
   140004c94:	jmp    0x140008e40
   140004c99:	int3   
   140004c9a:	int3   
   140004c9b:	int3   
   140004c9c:	int3   
   140004c9d:	int3   
   140004c9e:	int3   
   140004c9f:	int3   
   140004ca0:	sub    rcx,0x10
   140004ca4:	jmp    0x140009380
   140004ca9:	int3   
   140004caa:	int3   
   140004cab:	int3   
   140004cac:	int3   
   140004cad:	int3   
   140004cae:	int3   
   140004caf:	int3   
   140004cb0:	sub    rcx,0x10
   140004cb4:	jmp    0x1400093a0
   140004cb9:	int3   
   140004cba:	int3   
   140004cbb:	int3   
   140004cbc:	int3   
   140004cbd:	int3   
   140004cbe:	int3   
   140004cbf:	int3   
   140004cc0:	sub    rcx,0x18
   140004cc4:	jmp    0x1400093a0
   140004cc9:	int3   
   140004cca:	int3   
   140004ccb:	int3   
   140004ccc:	int3   
   140004ccd:	int3   
   140004cce:	int3   
   140004ccf:	int3   
   140004cd0:	sub    rcx,0x10
   140004cd4:	jmp    0x140009410
   140004cd9:	int3   
   140004cda:	int3   
   140004cdb:	int3   
   140004cdc:	int3   
   140004cdd:	int3   
   140004cde:	int3   
   140004cdf:	int3   
   140004ce0:	sub    rcx,0x10
   140004ce4:	jmp    0x140004c60
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	sub    rcx,0x18
   140004cf4:	jmp    0x140009430
   140004cf9:	int3   
   140004cfa:	int3   
   140004cfb:	int3   
   140004cfc:	int3   
   140004cfd:	int3   
   140004cfe:	int3   
   140004cff:	int3   
   140004d00:	sub    rcx,0x10
   140004d04:	jmp    0x140009430
   140004d09:	int3   
   140004d0a:	int3   
   140004d0b:	int3   
   140004d0c:	int3   
   140004d0d:	int3   
   140004d0e:	int3   
   140004d0f:	int3   
   140004d10:	sub    rcx,0x8
   140004d14:	jmp    0x14000a320
   140004d19:	int3   
   140004d1a:	int3   
   140004d1b:	int3   
   140004d1c:	int3   
   140004d1d:	int3   
   140004d1e:	int3   
   140004d1f:	int3   
   140004d20:	sub    rcx,0x10
   140004d24:	jmp    0x14000a320
   140004d29:	int3   
   140004d2a:	int3   
   140004d2b:	int3   
   140004d2c:	int3   
   140004d2d:	int3   
   140004d2e:	int3   
   140004d2f:	int3   
   140004d30:	sub    rcx,0x18
   140004d34:	jmp    0x14000a320
   140004d39:	int3   
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	int3   
   140004d3d:	int3   
   140004d3e:	int3   
   140004d3f:	int3   
   140004d40:	sub    rcx,0x8
   140004d44:	jmp    0x14000a310
   140004d49:	int3   
   140004d4a:	int3   
   140004d4b:	int3   
   140004d4c:	int3   
   140004d4d:	int3   
   140004d4e:	int3   
   140004d4f:	int3   
   140004d50:	sub    rcx,0x8
   140004d54:	jmp    0x14000a300
   140004d59:	int3   
   140004d5a:	int3   
   140004d5b:	int3   
   140004d5c:	int3   
   140004d5d:	int3   
   140004d5e:	int3   
   140004d5f:	int3   
   140004d60:	sub    rcx,0x8
   140004d64:	jmp    0x14000a3b0
   140004d69:	int3   
   140004d6a:	int3   
   140004d6b:	int3   
   140004d6c:	int3   
   140004d6d:	int3   
   140004d6e:	int3   
   140004d6f:	int3   
   140004d70:	sub    rcx,0x10
   140004d74:	jmp    0x14000a3b0
   140004d79:	int3   
   140004d7a:	int3   
   140004d7b:	int3   
   140004d7c:	int3   
   140004d7d:	int3   
   140004d7e:	int3   
   140004d7f:	int3   
   140004d80:	sub    rcx,0x8
   140004d84:	jmp    0x14000ac50
   140004d89:	int3   
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	int3   
   140004d8d:	int3   
   140004d8e:	int3   
   140004d8f:	int3   
   140004d90:	sub    rcx,0x10
   140004d94:	jmp    0x14000ac50
   140004d99:	int3   
   140004d9a:	int3   
   140004d9b:	int3   
   140004d9c:	int3   
   140004d9d:	int3   
   140004d9e:	int3   
   140004d9f:	int3   
   140004da0:	sub    rcx,0x8
   140004da4:	jmp    0x14000aa10
   140004da9:	int3   
   140004daa:	int3   
   140004dab:	int3   
   140004dac:	int3   
   140004dad:	int3   
   140004dae:	int3   
   140004daf:	int3   
   140004db0:	sub    rcx,0x8
   140004db4:	jmp    0x14000aaa0
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	sub    rcx,0x8
   140004dc4:	jmp    0x1400034e0
   140004dc9:	int3   
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	sub    rcx,0x10
   140004dd4:	jmp    0x1400034e0
   140004dd9:	int3   
   140004dda:	int3   
   140004ddb:	int3   
   140004ddc:	int3   
   140004ddd:	int3   
   140004dde:	int3   
   140004ddf:	int3   
   140004de0:	sub    rcx,0x18
   140004de4:	jmp    0x1400034e0
   140004de9:	int3   
   140004dea:	int3   
   140004deb:	int3   
   140004dec:	int3   
   140004ded:	int3   
   140004dee:	int3   
   140004def:	int3   
   140004df0:	sub    rcx,0x8
   140004df4:	jmp    0x14000ab30
   140004df9:	int3   
   140004dfa:	int3   
   140004dfb:	int3   
   140004dfc:	int3   
   140004dfd:	int3   
   140004dfe:	int3   
   140004dff:	int3   
   140004e00:	sub    rcx,0x10
   140004e04:	jmp    0x14000ab30
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	sub    rcx,0x8
   140004e14:	jmp    0x14000ac40
   140004e19:	int3   
   140004e1a:	int3   
   140004e1b:	int3   
   140004e1c:	int3   
   140004e1d:	int3   
   140004e1e:	int3   
   140004e1f:	int3   
   140004e20:	sub    rcx,0x8
   140004e24:	jmp    0x14000ac60
   140004e29:	int3   
   140004e2a:	int3   
   140004e2b:	int3   
   140004e2c:	int3   
   140004e2d:	int3   
   140004e2e:	int3   
   140004e2f:	int3   
   140004e30:	and    QWORD PTR [rdx],0x0
   140004e34:	xor    eax,eax
   140004e36:	and    QWORD PTR [r8],0x0
   140004e3a:	ret    
   140004e3b:	int3   
   140004e3c:	int3   
   140004e3d:	int3   
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	mov    rax,QWORD PTR [rcx+0x28]
   140004e44:	mov    ecx,DWORD PTR [rax+0xc]
   140004e47:	xor    eax,eax
   140004e49:	mov    DWORD PTR [rdx],ecx
   140004e4b:	ret    
   140004e4c:	int3   
   140004e4d:	int3   
   140004e4e:	int3   
   140004e4f:	int3   
   140004e50:	int3   
   140004e51:	int3   
   140004e52:	int3   
   140004e53:	int3   
   140004e54:	int3   
   140004e55:	int3   
   140004e56:	rex push rbp
   140004e58:	sub    rsp,0x20
   140004e5c:	mov    rbp,rdx
   140004e5f:	mov    rax,QWORD PTR [rcx]
   140004e62:	mov    rdx,rcx
   140004e65:	mov    ecx,DWORD PTR [rax]
   140004e67:	call   0x14000459e
   140004e6c:	nop
   140004e6d:	add    rsp,0x20
   140004e71:	pop    rbp
   140004e72:	ret    
   140004e73:	int3   
   140004e74:	int3   
   140004e75:	int3   
   140004e76:	int3   
   140004e77:	int3   
   140004e78:	int3   
   140004e79:	int3   
   140004e7a:	rex push rbp
   140004e7c:	sub    rsp,0x20
   140004e80:	mov    rbp,rdx
   140004e83:	mov    ecx,0x8
   140004e88:	call   0x140004a24
   140004e8d:	nop
   140004e8e:	add    rsp,0x20
   140004e92:	pop    rbp
   140004e93:	ret    
   140004e94:	int3   
   140004e95:	int3   
   140004e96:	int3   
   140004e97:	int3   
   140004e98:	int3   
   140004e99:	int3   
   140004e9a:	int3   
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	rex push rbp
   140004ea2:	sub    rsp,0x20
   140004ea6:	mov    rbp,rdx
   140004ea9:	mov    rax,QWORD PTR [rcx]
   140004eac:	xor    ecx,ecx
   140004eae:	cmp    DWORD PTR [rax],0xc0000005
   140004eb4:	sete   cl
   140004eb7:	mov    eax,ecx
   140004eb9:	add    rsp,0x20
   140004ebd:	pop    rbp
   140004ebe:	ret    
   140004ebf:	int3   
   140004ec0:	int3   
   140004ec1:	int3   
   140004ec2:	int3   
   140004ec3:	int3   
   140004ec4:	int3   
   140004ec5:	int3   
   140004ec6:	mov    QWORD PTR [rsp+0x10],rdx
   140004ecb:	push   rbp
   140004ecc:	sub    rsp,0x20
   140004ed0:	mov    rbp,rdx
   140004ed3:	and    QWORD PTR [rbp+0x50],0x0
   140004ed8:	lea    rax,[rip+0xfffffffffffffbb2]        # 0x140004a91
   140004edf:	add    rsp,0x20
   140004ee3:	pop    rbp
   140004ee4:	ret    
   140004ee5:	int3   
   140004ee6:	int3   
   140004ee7:	int3   
   140004ee8:	int3   
   140004ee9:	int3   
   140004eea:	int3   
   140004eeb:	int3   
   140004eec:	int3   
   140004eed:	int3   
   140004eee:	int3   
   140004eef:	int3   
   140004ef0:	lea    rcx,[rip+0xdd59]        # 0x140012c50
   140004ef7:	jmp    0x140003ef8
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	int3   
   140004eff:	int3   
   140004f00:	lea    rcx,[rip+0xdce1]        # 0x140012be8
   140004f07:	jmp    0x140003ef8
   140004f0c:	int3   
   140004f0d:	int3   
   140004f0e:	int3   
   140004f0f:	int3   
   140004f10:	lea    rcx,[rip+0xdcf9]        # 0x140012c10
   140004f17:	jmp    0x140003ef8
   140004f1c:	int3   
   140004f1d:	int3   
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	lea    rcx,[rip+0xdd89]        # 0x140012cb0
   140004f27:	jmp    0x140003ef8
   140004f2c:	int3   
   140004f2d:	int3   
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	lea    rcx,[rip+0xdcf9]        # 0x140012c30
   140004f37:	jmp    0x140003ef8
   140004f3c:	int3   
   140004f3d:	int3   
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	lea    rcx,[rip+0xdd89]        # 0x140012cd0
   140004f47:	jmp    0x140003ef8
   140004f4c:	int3   
   140004f4d:	int3   
   140004f4e:	int3   
   140004f4f:	int3   
   140004f50:	lea    rcx,[rip+0xdd39]        # 0x140012c90
   140004f57:	jmp    0x140003ef8
   140004f5c:	int3   
   140004f5d:	int3   
   140004f5e:	int3   
   140004f5f:	int3   
   140004f60:	lea    rcx,[rip+0xdd09]        # 0x140012c70
   140004f67:	jmp    0x140003ef8
   140004f6c:	int3   
   140004f6d:	int3   
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	jmp    0x140004004
   140004f75:	int3   
   140004f76:	int3   
   140004f77:	int3   
   140004f78:	int3   
   140004f79:	int3   
   140004f7a:	int3   
   140004f7b:	int3   
   140004f7c:	int3   
   140004f7d:	int3   
   140004f7e:	int3   
   140004f7f:	int3   
   140004f80:	jmp    0x140003f20
   140004f85:	int3   
   140004f86:	movzx  edi,ax
   140004f89:	or     edi,0x80070000
   140004f8f:	jmp    0x140001195
   140004f94:	xor    r12b,r12b
   140004f97:	mov    edi,esi
   140004f99:	jmp    0x1400011b5
   140004f9e:	test   r12b,r12b
   140004fa1:	je     0x140004fd6
   140004fa3:	cmp    WORD PTR [rsp+0x70],si
   140004fa8:	jne    0x140004fd6
   140004faa:	mov    QWORD PTR [r14],rsi
   140004fad:	jmp    0x140001289
   140004fb2:	mov    edi,0x8007000d
   140004fb7:	mov    rcx,QWORD PTR [rsp+0x60]
   140004fbc:	call   QWORD PTR [rip+0x830e]        # 0x14000d2d0
   140004fc2:	cmp    edi,0x8007007a
   140004fc8:	je     0x140004fd6
   140004fca:	cmp    edi,0x800700ea
   140004fd0:	jne    0x140001289
   140004fd6:	mov    edi,0x8007000d
   140004fdb:	jmp    0x140001289
   140004fe0:	mov    r8,QWORD PTR [rsp+0x68]
   140004fe5:	lea    rax,[rsp+0x40]
   140004fea:	mov    QWORD PTR [rsp+0x30],rax
   140004fef:	mov    r9d,0x10000006
   140004ff5:	mov    rax,QWORD PTR [rsp+0x50]
   140004ffa:	mov    rcx,r13
   140004ffd:	mov    QWORD PTR [rsp+0x28],rax
   140005002:	call   0x140006448
   140005007:	mov    edi,eax
   140005009:	jmp    0x14000123a
   14000500e:	mov    rcx,QWORD PTR [rsp+0x58]
   140005013:	call   QWORD PTR [rip+0x82bf]        # 0x14000d2d8
   140005019:	jmp    0x140004fd6
   14000501b:	int3   
   14000501c:	mov    eax,DWORD PTR [rsp+0x4c]
   140005020:	cmp    eax,0x1
   140005023:	jne    0x140005031
   140005025:	test   r13b,0x2
   140005029:	je     0x140005123
   14000502f:	jmp    0x140005055
   140005031:	cmp    eax,0x2
   140005034:	jne    0x140005042
   140005036:	test   r13b,0x4
   14000503a:	je     0x140005123
   140005040:	jmp    0x140005055
   140005042:	cmp    eax,0x7
   140005045:	jne    0x140005123
   14000504b:	test   r13b,0x20
   14000504f:	je     0x140005123
   140005055:	mov    r13d,DWORD PTR [rsp+0x44]
   14000505a:	test   r13d,r13d
   14000505d:	je     0x140005123
   140005063:	test   r13b,0x1
   140005067:	jne    0x140005123
   14000506d:	shr    r13d,1
   140005070:	sub    r13d,0x1
   140005074:	jne    0x14000509c
   140005076:	test   cl,cl
   140005078:	je     0x140005123
   14000507e:	cmp    WORD PTR [rsp+0x70],di
   140005083:	jne    0x140005123
   140005089:	test   BYTE PTR [rsp+0x48],0x20
   14000508e:	jne    0x140005123
   140005094:	mov    QWORD PTR [rsi],rdi
   140005097:	jmp    0x140001364
   14000509c:	lea    r8,[rsp+0x68]
   1400050a1:	mov    QWORD PTR [rsp+0x60],rdi
   1400050a6:	lea    rdx,[rsp+0x60]
   1400050ab:	mov    QWORD PTR [rsp+0x68],rdi
   1400050b0:	mov    ecx,r13d
   1400050b3:	call   QWORD PTR [rip+0x81f7]        # 0x14000d2b0
   1400050b9:	mov    ebx,eax
   1400050bb:	test   eax,eax
   1400050bd:	js     0x140001364
   1400050c3:	cmp    BYTE PTR [rsp+0x40],dil
   1400050c8:	je     0x14000512d
   1400050ca:	mov    r8d,DWORD PTR [rsp+0x44]
   1400050cf:	lea    rdx,[rsp+0x70]
   1400050d4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400050d9:	call   0x140004b4a
   1400050de:	mov    rdx,QWORD PTR [rsp+0x60]
   1400050e3:	cmp    WORD PTR [rdx+r13*2],di
   1400050e8:	jne    0x1400050ff
   1400050ea:	mov    r14d,DWORD PTR [rsp+0x48]
   1400050ef:	test   r14b,0x20
   1400050f3:	je     0x140005158
   1400050f5:	lea    eax,[r13-0x1]
   1400050f9:	cmp    WORD PTR [rdx+rax*2],di
   1400050fd:	je     0x140005158
   1400050ff:	mov    ebx,0x8007000d
   140005104:	mov    rcx,QWORD PTR [rsp+0x68]
   140005109:	call   QWORD PTR [rip+0x81c1]        # 0x14000d2d0
   14000510f:	cmp    ebx,0x8007007a
   140005115:	je     0x140005123
   140005117:	cmp    ebx,0x800700ea
   14000511d:	jne    0x140001364
   140005123:	mov    ebx,0x8007000d
   140005128:	jmp    0x140001364
   14000512d:	mov    r9d,DWORD PTR [rsp+0x48]
   140005132:	lea    rax,[rsp+0x44]
   140005137:	mov    QWORD PTR [rsp+0x30],rax
   14000513c:	mov    r8,r15
   14000513f:	mov    rax,QWORD PTR [rsp+0x60]
   140005144:	mov    rcx,r14
   140005147:	mov    QWORD PTR [rsp+0x28],rax
   14000514c:	call   0x140006448
   140005151:	mov    r14d,DWORD PTR [rsp+0x48]
   140005156:	mov    ebx,eax
   140005158:	test   ebx,ebx
   14000515a:	js     0x140005104
   14000515c:	mov    rcx,QWORD PTR [rsp+0x68]
   140005161:	lea    rdx,[rsp+0x58]
   140005166:	mov    QWORD PTR [rsp+0x58],rdi
   14000516b:	call   QWORD PTR [rip+0x8187]        # 0x14000d2f8
   140005171:	and    r14d,0x20
   140005175:	mov    DWORD PTR [rsp+0x50],edi
   140005179:	test   r14b,r14b
   14000517c:	jne    0x1400051a1
   14000517e:	mov    rcx,QWORD PTR [rsp+0x58]
   140005183:	lea    rdx,[rsp+0x50]
   140005188:	call   QWORD PTR [rip+0x815a]        # 0x14000d2e8
   14000518e:	cmp    DWORD PTR [rsp+0x50],edi
   140005192:	je     0x1400051a1
   140005194:	mov    rcx,QWORD PTR [rsp+0x58]
   140005199:	call   QWORD PTR [rip+0x8139]        # 0x14000d2d8
   14000519f:	jmp    0x140005123
   1400051a1:	cmp    DWORD PTR [rsp+0x4c],0x2
   1400051a6:	mov    rax,QWORD PTR [rsp+0x58]
   1400051ab:	sete   dil
   1400051af:	mov    QWORD PTR [rsi],rax
   1400051b2:	mov    BYTE PTR [r12],dil
   1400051b6:	jmp    0x140001364
   1400051bb:	int3   
   1400051bc:	cmp    eax,0x2
   1400051bf:	je     0x140003801
   1400051c5:	cmp    eax,0x1
   1400051c8:	jne    0x1400051d7
   1400051ca:	mov    rsi,QWORD PTR [rsi+0x10]
   1400051ce:	add    rsi,0x10
   1400051d2:	jmp    0x140003805
   1400051d7:	xor    esi,esi
   1400051d9:	jmp    0x140003805
   1400051de:	mov    rdi,QWORD PTR [rsi]
   1400051e1:	call   QWORD PTR [rip+0x7fa1]        # 0x14000d188
   1400051e7:	mov    rbx,rax
   1400051ea:	call   QWORD PTR [rip+0x7f98]        # 0x14000d188
   1400051f0:	mov    DWORD PTR [rsp+0x30],0x2
   1400051f8:	mov    r9,rbp
   1400051fb:	and    DWORD PTR [rsp+0x28],0x0
   140005200:	mov    rcx,rax
   140005203:	and    DWORD PTR [rsp+0x20],0x0
   140005208:	mov    r8,rbx
   14000520b:	mov    rdx,rdi
   14000520e:	call   QWORD PTR [rip+0x822c]        # 0x14000d440
   140005214:	mov    ecx,eax
   140005216:	call   QWORD PTR [rip+0x8244]        # 0x14000d460
   14000521c:	mov    edi,eax
   14000521e:	test   eax,eax
   140005220:	jle    0x14000522b
   140005222:	movzx  edi,ax
   140005225:	or     edi,0x80070000
   14000522b:	test   edi,edi
   14000522d:	js     0x140003822
   140005233:	lock or DWORD PTR [rsp],0x0
   140005238:	mov    ecx,DWORD PTR [rsi+0x8]
   14000523b:	mov    DWORD PTR [r14+0x48],ecx
   14000523f:	jmp    0x140003819
   140005244:	movzx  ebx,ax
   140005247:	or     ebx,0x80070000
   14000524d:	jmp    0x1400038b2
   140005252:	movzx  eax,ax
   140005255:	or     eax,0x80070000
   14000525a:	jmp    0x14000394d
   14000525f:	int3   
   140005260:	mov    eax,0x80040110
   140005265:	jmp    0x140001453
   14000526a:	mov    rcx,rsi
   14000526d:	call   QWORD PTR [rip+0x8245]        # 0x14000d4b8
   140005273:	mov    r8,rdi
   140005276:	mov    rdx,rbp
   140005279:	mov    rcx,rbx
   14000527c:	call   rsi
   14000527e:	nop
   14000527f:	jmp    0x140001426
   140005284:	mov    rcx,rdi
   140005287:	call   QWORD PTR [rip+0x822b]        # 0x14000d4b8
   14000528d:	mov    rcx,rbx
   140005290:	call   rdi
   140005292:	nop
   140005293:	jmp    0x140001447
   140005298:	mov    rcx,rbx
   14000529b:	call   QWORD PTR [rip+0x8217]        # 0x14000d4b8
   1400052a1:	mov    rcx,rdi
   1400052a4:	call   rbx
   1400052a6:	nop
   1400052a7:	jmp    0x1400014e7
   1400052ac:	mov    rcx,rbx
   1400052af:	call   QWORD PTR [rip+0x8203]        # 0x14000d4b8
   1400052b5:	mov    rcx,rdi
   1400052b8:	call   rbx
   1400052ba:	nop
   1400052bb:	jmp    0x1400015a6
   1400052c0:	mov    eax,DWORD PTR [rip+0x910a]        # 0x14000e3d0
   1400052c6:	lea    r8,[rsp+0x28]
   1400052cb:	movups xmm0,XMMWORD PTR [rip+0x90de]        # 0x14000e3b0
   1400052d2:	mov    DWORD PTR [rsp+0x48],eax
   1400052d6:	mov    edx,0x12
   1400052db:	movups xmm1,XMMWORD PTR [rip+0x90de]        # 0x14000e3c0
   1400052e2:	movzx  eax,WORD PTR [rip+0x90eb]        # 0x14000e3d4
   1400052e9:	mov    ecx,0x80070057
   1400052ee:	movups XMMWORD PTR [rsp+0x28],xmm0
   1400052f3:	mov    WORD PTR [rsp+0x4c],ax
   1400052f8:	movups XMMWORD PTR [rsp+0x38],xmm1
   1400052fd:	call   QWORD PTR [rip+0x7f85]        # 0x14000d288
   140005303:	mov    eax,0x80070057
   140005308:	jmp    0x140001692
   14000530d:	call   QWORD PTR [rip+0x7d5d]        # 0x14000d070
   140005313:	mov    esi,eax
   140005315:	test   eax,eax
   140005317:	js     0x14000167a
   14000531d:	mov    bpl,0x1
   140005320:	jmp    0x140001664
   140005325:	int3   
   140005326:	mov    eax,DWORD PTR [rip+0x90a4]        # 0x14000e3d0
   14000532c:	lea    r8,[rsp+0x28]
   140005331:	movups xmm0,XMMWORD PTR [rip+0x9078]        # 0x14000e3b0
   140005338:	mov    DWORD PTR [rsp+0x48],eax
   14000533c:	mov    edx,0x12
   140005341:	movups xmm1,XMMWORD PTR [rip+0x9078]        # 0x14000e3c0
   140005348:	movzx  eax,WORD PTR [rip+0x9085]        # 0x14000e3d4
   14000534f:	mov    ecx,0x80070057
   140005354:	movups XMMWORD PTR [rsp+0x28],xmm0
   140005359:	mov    WORD PTR [rsp+0x4c],ax
   14000535e:	movups XMMWORD PTR [rsp+0x38],xmm1
   140005363:	call   QWORD PTR [rip+0x7f1f]        # 0x14000d288
   140005369:	mov    eax,0x80070057
   14000536e:	jmp    0x140001786
   140005373:	call   QWORD PTR [rip+0x7cf7]        # 0x14000d070
   140005379:	mov    esi,eax
   14000537b:	test   eax,eax
   14000537d:	js     0x14000176e
   140005383:	mov    bpl,0x1
   140005386:	jmp    0x14000175b
   14000538b:	int3   
   14000538c:	mov    rax,QWORD PTR [r15]
   14000538f:	mov    rbx,rcx
   140005392:	test   rax,rax
   140005395:	je     0x1400053a3
   140005397:	mov    rbx,rax
   14000539a:	mov    rax,QWORD PTR [rax+0x10]
   14000539e:	test   rax,rax
   1400053a1:	jne    0x140005397
   1400053a3:	test   rbx,rbx
   1400053a6:	je     0x140001879
   1400053ac:	mov    eax,DWORD PTR [r15+0x8]
   1400053b0:	sub    eax,DWORD PTR [r15+0xc]
   1400053b4:	cmp    eax,0x8
   1400053b7:	jbe    0x1400053fc
   1400053b9:	mov    rcx,rbx
   1400053bc:	lea    rsi,[rbx-0x28]
   1400053c0:	call   QWORD PTR [rip+0x808a]        # 0x14000d450
   1400053c6:	cmp    DWORD PTR [rsi+0x4c],0x0
   1400053ca:	mov    rdi,rax
   1400053cd:	ja     0x1400053f4
   1400053cf:	mov    rdx,r15
   1400053d2:	mov    rcx,rbx
   1400053d5:	call   QWORD PTR [rip+0x8095]        # 0x14000d470
   1400053db:	mov    rdx,QWORD PTR [rsi]
   1400053de:	mov    rbx,QWORD PTR [rdx]
   1400053e1:	mov    rcx,rbx
   1400053e4:	call   QWORD PTR [rip+0x80ce]        # 0x14000d4b8
   1400053ea:	mov    edx,0x1
   1400053ef:	mov    rcx,rsi
   1400053f2:	call   rbx
   1400053f4:	mov    rbx,rdi
   1400053f7:	test   rdi,rdi
   1400053fa:	jne    0x1400053ac
   1400053fc:	xor    ecx,ecx
   1400053fe:	jmp    0x140001879
   140005403:	xor    r12b,r12b
   140005406:	jmp    0x140001917
   14000540b:	mov    rcx,QWORD PTR [rbx+0x18]
   14000540f:	mov    r8,QWORD PTR [r13-0x10]
   140005413:	test   rcx,rcx
   140005416:	jne    0x140005453
   140005418:	test   r8,r8
   14000541b:	jne    0x14000542e
   14000541d:	lea    rdx,[r13-0x8]
   140005421:	lea    rcx,[rbx+0x20]
   140005425:	call   0x14000628c
   14000542a:	test   eax,eax
   14000542c:	jns    0x140005474
   14000542e:	mov    rax,QWORD PTR [r13+0x8]
   140005432:	test   rax,rax
   140005435:	jne    0x140005483
   140005437:	mov    QWORD PTR [r13+0x8],rdi
   14000543b:	mov    rcx,rdi
   14000543e:	mov    QWORD PTR [rdi],r13
   140005441:	call   QWORD PTR [rip+0x8001]        # 0x14000d448
   140005447:	mov    rcx,QWORD PTR [rbx+0x8]
   14000544b:	mov    QWORD PTR [rcx],rax
   14000544e:	jmp    0x140001990
   140005453:	test   r8,r8
   140005456:	je     0x140005474
   140005458:	cmp    rcx,r8
   14000545b:	je     0x14000541d
   14000545d:	lea    r9,[r8+0x20]
   140005461:	mov    r8,QWORD PTR [r8+0x18]
   140005465:	lea    rdx,[rcx+0x20]
   140005469:	mov    rcx,QWORD PTR [rcx+0x18]
   14000546d:	call   0x140003480
   140005472:	jmp    0x14000542a
   140005474:	mov    rax,QWORD PTR [r13+0x10]
   140005478:	test   rax,rax
   14000547b:	jne    0x140005483
   14000547d:	mov    QWORD PTR [r13+0x10],rdi
   140005481:	jmp    0x14000543b
   140005483:	mov    r13,rax
   140005486:	test   rax,rax
   140005489:	jne    0x14000540b
   14000548b:	jmp    0x140001990
   140005490:	xor    ebx,ebx
   140005492:	jmp    0x1400019b4
   140005497:	mov    esi,0x8007000e
   14000549c:	jmp    0x1400019c1
   1400054a1:	lea    rcx,[rbp+0x48]
   1400054a5:	call   0x1400062f0
   1400054aa:	mov    esi,0x80004005
   1400054af:	jmp    0x1400019d0
   1400054b4:	mov    rcx,rbx
   1400054b7:	call   QWORD PTR [rip+0x7ffb]        # 0x14000d4b8
   1400054bd:	lea    r8,[rbp+0x30]
   1400054c1:	xor    edx,edx
   1400054c3:	mov    rcx,rdi
   1400054c6:	call   rbx
   1400054c8:	nop
   1400054c9:	jmp    0x140001a10
   1400054ce:	cmp    rdi,r8
   1400054d1:	je     0x1400054ea
   1400054d3:	mov    rcx,QWORD PTR [rdi+0x18]
   1400054d7:	lea    r9,[r8+0x20]
   1400054db:	mov    r8,QWORD PTR [r8+0x18]
   1400054df:	lea    rdx,[rdi+0x20]
   1400054e3:	call   0x140003480
   1400054e8:	jmp    0x1400054f7
   1400054ea:	lea    rdx,[rsi+0x20]
   1400054ee:	lea    rcx,[rbp+0x30]
   1400054f2:	call   0x14000628c
   1400054f7:	test   eax,eax
   1400054f9:	je     0x14000551c
   1400054fb:	jns    0x140001a33
   140005501:	mov    rbx,QWORD PTR [rbx+0x8]
   140005505:	test   rbx,rbx
   140005508:	je     0x140001a40
   14000550e:	test   rbx,rbx
   140005511:	jne    0x140001a22
   140005517:	jmp    0x140001a40
   14000551c:	mov    rcx,rbx
   14000551f:	call   QWORD PTR [rip+0x7f23]        # 0x14000d448
   140005525:	mov    rcx,QWORD PTR [rdi+0x8]
   140005529:	mov    QWORD PTR [rcx],rax
   14000552c:	mov    QWORD PTR [rbp-0x50],rsi
   140005530:	xor    esi,esi
   140005532:	jmp    0x140001a69
   140005537:	mov    rcx,rbx
   14000553a:	call   QWORD PTR [rip+0x7f78]        # 0x14000d4b8
   140005540:	lea    r8,[rbp-0x50]
   140005544:	mov    rcx,rdi
   140005547:	lea    rdx,[rbp+0x30]
   14000554b:	call   rbx
   14000554d:	nop
   14000554e:	jmp    0x140001a67
   140005553:	mov    rcx,rdi
   140005556:	call   QWORD PTR [rip+0x7f5c]        # 0x14000d4b8
   14000555c:	mov    rcx,QWORD PTR [rbp-0x48]
   140005560:	call   rdi
   140005562:	nop
   140005563:	jmp    0x140001abe
   140005568:	cmp    r8d,0x80070002
   14000556f:	jne    0x140001acb
   140005575:	xor    bl,bl
   140005577:	xor    r8d,r8d
   14000557a:	jmp    0x140001acb
   14000557f:	int3   
   140005580:	mov    r8d,DWORD PTR [rdx+0xc]
   140005584:	mov    rcx,r13
   140005587:	add    r8,r12
   14000558a:	mov    edx,r14d
   14000558d:	call   0x14000a924
   140005592:	mov    esi,eax
   140005594:	jmp    0x140001d2f
   140005599:	mov    r8d,DWORD PTR [rdx+0xc]
   14000559d:	mov    rcx,r13
   1400055a0:	add    r8,r12
   1400055a3:	mov    edx,r14d
   1400055a6:	call   0x14000a6b8
   1400055ab:	mov    esi,eax
   1400055ad:	jmp    0x140001d2f
   1400055b2:	mov    r8d,DWORD PTR [rdx+0xc]
   1400055b6:	mov    rcx,r13
   1400055b9:	add    r8,r12
   1400055bc:	mov    edx,r14d
   1400055bf:	call   0x14000a768
   1400055c4:	mov    esi,eax
   1400055c6:	jmp    0x140001d2f
   1400055cb:	mov    r8d,DWORD PTR [rdx+0xc]
   1400055cf:	mov    rcx,r13
   1400055d2:	add    r8,r12
   1400055d5:	mov    edx,r14d
   1400055d8:	call   0x14000a644
   1400055dd:	mov    esi,eax
   1400055df:	jmp    0x140001d2f
   1400055e4:	mov    r8d,DWORD PTR [rdx+0xc]
   1400055e8:	lea    rcx,[r13+0x40]
   1400055ec:	mov    rdx,QWORD PTR [rdx]
   1400055ef:	add    r8,r12
   1400055f2:	call   0x1400063c4
   1400055f7:	mov    esi,eax
   1400055f9:	cmp    eax,0x8007065e
   1400055fe:	cmove  esi,r15d
   140005602:	jmp    0x140001d2f
   140005607:	movzx  esi,ax
   14000560a:	or     esi,0x80070000
   140005610:	jmp    0x140001e6e
   140005615:	mov    esi,0x80040153
   14000561a:	jmp    0x140001e7a
   14000561f:	mov    esi,r15d
   140005622:	jmp    0x140001d2f
   140005627:	mov    r8d,DWORD PTR [rdx+0xc]
   14000562b:	mov    rcx,r13
   14000562e:	add    r8,r12
   140005631:	mov    edx,r14d
   140005634:	call   0x14000a9a0
   140005639:	mov    esi,eax
   14000563b:	jmp    0x140001d2f
   140005640:	mov    r8d,DWORD PTR [rdx+0xc]
   140005644:	mov    rcx,r13
   140005647:	add    r8,r12
   14000564a:	mov    edx,r14d
   14000564d:	call   0x14000a7e4
   140005652:	mov    esi,eax
   140005654:	jmp    0x140001d2f
   140005659:	xor    r9d,r9d
   14000565c:	xor    r8d,r8d
   14000565f:	mov    ecx,0xc000000d
   140005664:	lea    edx,[r9+0x1]
   140005668:	call   QWORD PTR [rip+0x7a32]        # 0x14000d0a0
   14000566e:	nop
   14000566f:	jmp    0x140001c12
   140005674:	xor    r9d,r9d
   140005677:	xor    r8d,r8d
   14000567a:	mov    ecx,0xc000000d
   14000567f:	mov    ebx,eax
   140005681:	lea    edx,[r9+0x1]
   140005685:	call   QWORD PTR [rip+0x7a15]        # 0x14000d0a0
   14000568b:	nop
   14000568c:	jmp    0x140001c48
   140005691:	mov    rcx,QWORD PTR [rbp-0x49]
   140005695:	call   QWORD PTR [rip+0x7b25]        # 0x14000d1c0
   14000569b:	mov    DWORD PTR [rip+0xd4e3],0x1        # 0x140012b88
   1400056a5:	mov    rcx,QWORD PTR [r15+0x8]
   1400056a9:	call   QWORD PTR [rip+0x7c29]        # 0x14000d2d8
   1400056af:	mov    QWORD PTR [r15+0x8],0x0
   1400056b7:	lea    rdx,[rbp-0x71]
   1400056bb:	mov    rax,QWORD PTR [r13+0x10]
   1400056bf:	lea    r9,[r15+0x8]
   1400056c3:	mov    QWORD PTR [rsp+0x20],rdx
   1400056c8:	mov    rcx,QWORD PTR [rax+0x28]
   1400056cc:	mov    rax,QWORD PTR [rcx+0x8]
   1400056d0:	lea    rcx,[r13+0x40]
   1400056d4:	mov    rdx,QWORD PTR [rdi+rax*1]
   1400056d8:	call   0x1400072f4
   1400056dd:	mov    esi,eax
   1400056df:	test   eax,eax
   1400056e1:	js     0x140001e11
   1400056e7:	mov    rcx,QWORD PTR [r15+0x8]
   1400056eb:	xor    edx,edx
   1400056ed:	mov    BYTE PTR [r15],0x1
   1400056f1:	call   QWORD PTR [rip+0x7bc1]        # 0x14000d2b8
   1400056f7:	mov    rcx,rax
   1400056fa:	lea    rdx,[rbp-0x1]
   1400056fe:	call   QWORD PTR [rip+0x791c]        # 0x14000d020
   140005704:	mov    r15d,0x8007000d
   14000570a:	test   eax,eax
   14000570c:	jns    0x140001d2f
   140005712:	mov    esi,r15d
   140005715:	jmp    0x140001d2f
   14000571a:	cmp    eax,0x8007065e
   14000571f:	mov    r15d,0x8007000d
   140005725:	cmove  esi,r15d
   140005729:	jmp    0x140001d2f
   14000572e:	mov    r8d,DWORD PTR [rdx+0xc]
   140005732:	mov    rcx,r13
   140005735:	add    r8,r12
   140005738:	mov    edx,r14d
   14000573b:	call   0x14000a44c
   140005740:	mov    esi,eax
   140005742:	jmp    0x140001d2f
   140005747:	mov    ebx,DWORD PTR [rdx+0xc]
   14000574a:	lea    r8,[r12+0x4]
   14000574f:	mov    rdx,QWORD PTR [rdx]
   140005752:	lea    rcx,[r13+0x40]
   140005756:	add    r8,rbx
   140005759:	call   0x1400063c4
   14000575e:	mov    esi,eax
   140005760:	test   eax,eax
   140005762:	js     0x14000576e
   140005764:	mov    BYTE PTR [rbx+r12*1],0x1
   140005769:	jmp    0x140001d2f
   14000576e:	cmp    eax,0x80070002
   140005773:	jne    0x1400055f9
   140005779:	mov    BYTE PTR [rbx+r12*1],0x0
   14000577e:	xor    esi,esi
   140005780:	jmp    0x140001d2f
   140005785:	mov    r8d,DWORD PTR [rdx+0xc]
   140005789:	mov    rcx,r13
   14000578c:	add    r8,r12
   14000578f:	mov    edx,r14d
   140005792:	call   0x14000a4f0
   140005797:	mov    esi,eax
   140005799:	jmp    0x140001d2f
   14000579e:	mov    QWORD PTR [r15],0x0
   1400057a5:	mov    rax,QWORD PTR [rsi]
   1400057a8:	mov    rbx,QWORD PTR [rax+0x10]
   1400057ac:	mov    rcx,rbx
   1400057af:	call   QWORD PTR [rip+0x7d03]        # 0x14000d4b8
   1400057b5:	mov    rcx,rsi
   1400057b8:	call   rbx
   1400057ba:	mov    ebx,0x80000000
   1400057bf:	jmp    0x140001f00
   1400057c4:	mov    rax,QWORD PTR [rsi]
   1400057c7:	mov    rbx,QWORD PTR [rax+0x8]
   1400057cb:	mov    rcx,rbx
   1400057ce:	call   QWORD PTR [rip+0x7ce4]        # 0x14000d4b8
   1400057d4:	mov    rcx,rsi
   1400057d7:	call   rbx
   1400057d9:	nop
   1400057da:	jmp    0x140001fb2
   1400057df:	mov    cl,0x1
   1400057e1:	jmp    0x140001ffe
   1400057e6:	mov    rcx,rbx
   1400057e9:	call   QWORD PTR [rip+0x7cc9]        # 0x14000d4b8
   1400057ef:	mov    rcx,rdi
   1400057f2:	call   rbx
   1400057f4:	nop
   1400057f5:	jmp    0x14000202e
   1400057fa:	mov    rax,QWORD PTR [rbx]
   1400057fd:	mov    rdi,QWORD PTR [rax+0x10]
   140005801:	mov    rcx,rdi
   140005804:	call   QWORD PTR [rip+0x7cae]        # 0x14000d4b8
   14000580a:	mov    rcx,rbx
   14000580d:	call   rdi
   14000580f:	nop
   140005810:	jmp    0x14000203d
   140005815:	mov    esi,0x8007000e
   14000581a:	jmp    0x140002041
   14000581f:	mov    rcx,rdi
   140005822:	call   QWORD PTR [rip+0x7c90]        # 0x14000d4b8
   140005828:	mov    rcx,rbx
   14000582b:	call   rdi
   14000582d:	nop
   14000582e:	jmp    0x14000206d
   140005833:	mov    rcx,QWORD PTR [rbp-0x69]
   140005837:	call   QWORD PTR [rip+0x7983]        # 0x14000d1c0
   14000583d:	mov    QWORD PTR [rbp-0x69],0x0
   140005845:	jmp    0x140001d29
   14000584a:	mov    esi,0x80040153
   14000584f:	jmp    0x140001cf9
   140005854:	mov    r15d,0x8007000d
   14000585a:	mov    esi,r15d
   14000585d:	jmp    0x140001d2f
   140005862:	cmp    esi,0x8007065e
   140005868:	cmove  esi,r15d
   14000586c:	jmp    0x140001d2f
   140005871:	mov    BYTE PTR [rsp+0x40],0x1
   140005876:	test   r8,r8
   140005879:	je     0x140001d51
   14000587f:	mov    ecx,r14d
   140005882:	mov    eax,0x1
   140005887:	shl    eax,cl
   140005889:	or     DWORD PTR [r8],eax
   14000588c:	jmp    0x140001d51
   140005891:	mov    BYTE PTR [rsp+0x40],0x1
   140005896:	test   r9,r9
   140005899:	je     0x140001d51
   14000589f:	mov    ecx,r14d
   1400058a2:	mov    eax,0x1
   1400058a7:	shl    eax,cl
   1400058a9:	or     DWORD PTR [r9],eax
   1400058ac:	jmp    0x140001d51
   1400058b1:	mov    eax,r15d
   1400058b4:	jmp    0x140001d9e
   1400058b9:	mov    eax,esi
   1400058bb:	jmp    0x140001da6
   1400058c0:	mov    rax,QWORD PTR [rcx]
   1400058c3:	mov    rdi,QWORD PTR [rax+0x8]
   1400058c7:	mov    rcx,rdi
   1400058ca:	call   QWORD PTR [rip+0x7be8]        # 0x14000d4b8
   1400058d0:	mov    rcx,r15
   1400058d3:	call   rdi
   1400058d5:	test   al,al
   1400058d7:	je     0x140002196
   1400058dd:	mov    rax,QWORD PTR [r15]
   1400058e0:	mov    rdi,QWORD PTR [rax+0x10]
   1400058e4:	mov    rcx,rdi
   1400058e7:	call   QWORD PTR [rip+0x7bcb]        # 0x14000d4b8
   1400058ed:	mov    rcx,r15
   1400058f0:	call   rdi
   1400058f2:	mov    r12,QWORD PTR [r15+0x10]
   1400058f6:	test   eax,eax
   1400058f8:	jne    0x140005901
   1400058fa:	mov    r12,QWORD PTR [r12+0x10]
   1400058ff:	jmp    0x140005920
   140005901:	cmp    eax,0x2
   140005904:	jne    0x14000590d
   140005906:	mov    r12,QWORD PTR [r12+0x10]
   14000590b:	jmp    0x140005920
   14000590d:	cmp    eax,0x1
   140005910:	jne    0x14000591d
   140005912:	mov    r12,QWORD PTR [r12+0x10]
   140005917:	add    r12,0x10
   14000591b:	jmp    0x140005920
   14000591d:	mov    r12,r13
   140005920:	mov    rax,QWORD PTR [r12]
   140005924:	mov    QWORD PTR [rbp-0x39],r12
   140005928:	test   rax,rax
   14000592b:	je     0x140002196
   140005931:	mov    rdi,QWORD PTR [r12]
   140005935:	call   QWORD PTR [rip+0x784d]        # 0x14000d188
   14000593b:	mov    rbx,rax
   14000593e:	call   QWORD PTR [rip+0x7844]        # 0x14000d188
   140005944:	mov    DWORD PTR [rsp+0x30],0x2
   14000594c:	lea    r9,[r15+0x40]
   140005950:	mov    rcx,rax
   140005953:	mov    DWORD PTR [rsp+0x28],r13d
   140005958:	mov    r8,rbx
   14000595b:	mov    DWORD PTR [rsp+0x20],r13d
   140005960:	mov    rdx,rdi
   140005963:	call   QWORD PTR [rip+0x7ad7]        # 0x14000d440
   140005969:	mov    ecx,eax
   14000596b:	call   QWORD PTR [rip+0x7aef]        # 0x14000d460
   140005971:	mov    ebx,eax
   140005973:	test   eax,eax
   140005975:	jle    0x140005980
   140005977:	movzx  ebx,ax
   14000597a:	or     ebx,0x80070000
   140005980:	test   ebx,ebx
   140005982:	js     0x1400021a9
   140005988:	lock or DWORD PTR [rsp],r13d
   14000598d:	mov    eax,DWORD PTR [r12+0x8]
   140005992:	mov    DWORD PTR [r15+0x48],eax
   140005996:	jmp    0x140002196
   14000599b:	mov    rcx,rbx
   14000599e:	call   QWORD PTR [rip+0x7b14]        # 0x14000d4b8
   1400059a4:	lea    r9,[rbp+0x67]
   1400059a8:	mov    BYTE PTR [rsp+0x20],r13b
   1400059ad:	lea    r8,[rbp+0x7f]
   1400059b1:	mov    rcx,r15
   1400059b4:	lea    rdx,[rbp-0x31]
   1400059b8:	call   rbx
   1400059ba:	nop
   1400059bb:	jmp    0x140002201
   1400059c0:	movzx  ebx,ax
   1400059c3:	or     ebx,0x80070000
   1400059c9:	jmp    0x140002270
   1400059ce:	movzx  ebx,ax
   1400059d1:	or     ebx,0x80070000
   1400059d7:	jmp    0x1400022b6
   1400059dc:	mov    rcx,rdi
   1400059df:	call   QWORD PTR [rip+0x7ad3]        # 0x14000d4b8
   1400059e5:	mov    r9b,0x1
   1400059e8:	mov    r8d,ebx
   1400059eb:	mov    rdx,rsi
   1400059ee:	mov    rcx,r15
   1400059f1:	call   rdi
   1400059f3:	nop
   1400059f4:	jmp    0x1400022ea
   1400059f9:	mov    rcx,QWORD PTR [rbp+0x77]
   1400059fd:	call   QWORD PTR [rip+0x77bd]        # 0x14000d1c0
   140005a03:	mov    QWORD PTR [rbp+0x77],r13
   140005a07:	jmp    0x140002313
   140005a0c:	mov    rax,QWORD PTR [rax]
   140005a0f:	test   rax,rax
   140005a12:	jne    0x14000232d
   140005a18:	mov    rax,QWORD PTR [rbp-0x39]
   140005a1c:	mov    ecx,DWORD PTR [r15+0x48]
   140005a20:	mov    DWORD PTR [rax+0x8],ecx
   140005a23:	lock or DWORD PTR [rsp],r13d
   140005a28:	mov    rcx,QWORD PTR [rbp-0x39]
   140005a2c:	lea    rdx,[r15+0x40]
   140005a30:	call   0x140003850
   140005a35:	nop
   140005a36:	jmp    0x14000232d
   140005a3b:	int3   
   140005a3c:	mov    rcx,rbp
   140005a3f:	call   QWORD PTR [rip+0x7a73]        # 0x14000d4b8
   140005a45:	movzx  edx,sil
   140005a49:	mov    rcx,rbx
   140005a4c:	call   rbp
   140005a4e:	nop
   140005a4f:	jmp    0x1400023eb
   140005a54:	mov    eax,0x8007000d
   140005a59:	jmp    0x1400024b9
   140005a5e:	mov    rax,QWORD PTR [rbp+0x40]
   140005a62:	mov    QWORD PTR [rdx],rax
   140005a65:	mov    ecx,DWORD PTR [rbp+0x48]
   140005a68:	jmp    0x1400025ca
   140005a6d:	mov    rcx,rsi
   140005a70:	call   QWORD PTR [rip+0x7a42]        # 0x14000d4b8
   140005a76:	mov    rcx,rbp
   140005a79:	call   rsi
   140005a7b:	nop
   140005a7c:	jmp    0x140002574
   140005a81:	mov    rcx,rsi
   140005a84:	call   QWORD PTR [rip+0x7a2e]        # 0x14000d4b8
   140005a8a:	mov    rcx,rbp
   140005a8d:	call   rsi
   140005a8f:	nop
   140005a90:	jmp    0x14000259c
   140005a95:	cmp    eax,0x2
   140005a98:	jne    0x140005aa3
   140005a9a:	mov    rcx,QWORD PTR [rcx+0x10]
   140005a9e:	jmp    0x1400025ac
   140005aa3:	cmp    eax,0x1
   140005aa6:	jne    0x140005ac8
   140005aa8:	mov    rcx,QWORD PTR [rcx+0x10]
   140005aac:	add    rcx,0x10
   140005ab0:	jmp    0x1400025ac
   140005ab5:	mov    rax,QWORD PTR [rcx]
   140005ab8:	mov    QWORD PTR [rbx],rax
   140005abb:	lock or DWORD PTR [rsp],0x0
   140005ac0:	mov    ecx,DWORD PTR [rcx+0x8]
   140005ac3:	jmp    0x1400025ca
   140005ac8:	mov    rsi,QWORD PTR [rsp+0x60]
   140005acd:	jmp    0x1400025c6
   140005ad2:	add    DWORD PTR [rdi],ecx
   140005ad4:	mov    eax,0x2
   140005ad9:	mov    ecx,DWORD PTR [rdi]
   140005adb:	mul    rcx
   140005ade:	mov    rcx,0xffffffffffffffff
   140005ae5:	cmovo  rax,rcx
   140005ae9:	mov    rcx,rax
   140005aec:	call   QWORD PTR [rip+0x758e]        # 0x14000d080
   140005af2:	mov    QWORD PTR [rsi],rax
   140005af5:	test   rax,rax
   140005af8:	je     0x140005b06
   140005afa:	xor    edi,edi
   140005afc:	mov    WORD PTR [rax],di
   140005aff:	xor    eax,eax
   140005b01:	jmp    0x1400027e7
   140005b06:	mov    eax,0x8007000e
   140005b0b:	jmp    0x1400027e7
   140005b10:	mov    rcx,rbp
   140005b13:	call   QWORD PTR [rip+0x799f]        # 0x14000d4b8
   140005b19:	movzx  eax,BYTE PTR [rsp+0x58]
   140005b1e:	mov    r9,rdi
   140005b21:	mov    r8,QWORD PTR [rsp+0x60]
   140005b26:	mov    rdx,rbx
   140005b29:	mov    rcx,rsi
   140005b2c:	mov    BYTE PTR [rsp+0x20],al
   140005b30:	call   rbp
   140005b32:	nop
   140005b33:	jmp    0x140002620
   140005b38:	mov    ebp,0x80070057
   140005b3d:	jmp    0x140002654
   140005b42:	mov    ebp,0x80070057
   140005b47:	mov    rax,r10
   140005b4a:	jmp    0x140002693
   140005b4f:	xor    edi,edi
   140005b51:	cmp    WORD PTR [rip+0x80a0],bp        # 0x14000dbf8
   140005b58:	je     0x140002711
   140005b5e:	test   rsi,rsi
   140005b61:	jne    0x140005b6d
   140005b63:	mov    ebp,0x80070057
   140005b68:	jmp    0x140002717
   140005b6d:	mov    ebp,0x8007007a
   140005b72:	jmp    0x140002711
   140005b77:	sub    r9,0x2
   140005b7b:	mov    ebp,0x8007007a
   140005b80:	dec    r10
   140005b83:	jmp    0x1400026f4
   140005b88:	mov    ebp,0x80070057
   140005b8d:	jmp    0x14000274a
   140005b92:	add    rcx,0x2
   140005b96:	sub    rax,0x1
   140005b9a:	jne    0x140002764
   140005ba0:	mov    ebp,0x80070057
   140005ba5:	mov    rdx,r10
   140005ba8:	jmp    0x14000277c
   140005bad:	sub    rax,0x2
   140005bb1:	mov    ebp,0x8007007a
   140005bb6:	jmp    0x1400027dd
   140005bbb:	mov    rbx,QWORD PTR [rsp+0x60]
   140005bc0:	mov    rcx,QWORD PTR [rbx]
   140005bc3:	call   QWORD PTR [rip+0x746f]        # 0x14000d038
   140005bc9:	mov    QWORD PTR [rbx],rdi
   140005bcc:	jmp    0x1400027e5
   140005bd1:	int3   
   140005bd2:	lea    rdx,[rsi+0x20]
   140005bd6:	mov    rcx,rbp
   140005bd9:	call   0x14000628c
   140005bde:	nop
   140005bdf:	jmp    0x1400028ca
   140005be4:	mov    rbx,QWORD PTR [rbx+0x8]
   140005be8:	test   rbx,rbx
   140005beb:	je     0x1400028e5
   140005bf1:	test   rbx,rbx
   140005bf4:	jne    0x14000289f
   140005bfa:	jmp    0x1400028e5
   140005bff:	mov    rcx,rbx
   140005c02:	call   QWORD PTR [rip+0x7840]        # 0x14000d448
   140005c08:	mov    rcx,QWORD PTR [rdi+0x8]
   140005c0c:	mov    QWORD PTR [rcx],rax
   140005c0f:	xor    eax,eax
   140005c11:	mov    QWORD PTR [r14],rsi
   140005c14:	jmp    0x14000290a
   140005c19:	mov    rcx,rbx
   140005c1c:	call   QWORD PTR [rip+0x7896]        # 0x14000d4b8
   140005c22:	mov    r8,r14
   140005c25:	mov    rdx,rbp
   140005c28:	mov    rcx,rdi
   140005c2b:	call   rbx
   140005c2d:	nop
   140005c2e:	jmp    0x14000290a
   140005c33:	int3   
   140005c34:	mov    rcx,rdi
   140005c37:	call   QWORD PTR [rip+0x787b]        # 0x14000d4b8
   140005c3d:	mov    rcx,rbx
   140005c40:	call   rdi
   140005c42:	nop
   140005c43:	jmp    0x14000295d
   140005c48:	mov    rcx,rdi
   140005c4b:	call   QWORD PTR [rip+0x7867]        # 0x14000d4b8
   140005c51:	mov    rcx,rbx
   140005c54:	call   rdi
   140005c56:	nop
   140005c57:	jmp    0x14000299d
   140005c5c:	mov    esi,0x80070216
   140005c61:	jmp    0x140002a65
   140005c66:	mov    esi,0x80070005
   140005c6b:	jmp    0x140002c3d
   140005c70:	mov    rax,QWORD PTR [rbp-0x40]
   140005c74:	xor    ebx,ebx
   140005c76:	test   rax,rax
   140005c79:	je     0x140005c87
   140005c7b:	mov    rbx,rax
   140005c7e:	mov    rax,QWORD PTR [rax+0x10]
   140005c82:	test   rax,rax
   140005c85:	jne    0x140005c7b
   140005c87:	test   rbx,rbx
   140005c8a:	je     0x140002b04
   140005c90:	mov    eax,DWORD PTR [rbp-0x38]
   140005c93:	sub    eax,DWORD PTR [rbp-0x34]
   140005c96:	cmp    eax,0x8
   140005c99:	jbe    0x140005ce1
   140005c9b:	mov    rcx,rbx
   140005c9e:	lea    r12,[rbx-0x28]
   140005ca2:	call   QWORD PTR [rip+0x77a8]        # 0x14000d450
   140005ca8:	mov    rsi,rax
   140005cab:	cmp    DWORD PTR [r12+0x4c],r14d
   140005cb0:	ja     0x140005cd9
   140005cb2:	lea    rdx,[rbp-0x40]
   140005cb6:	mov    rcx,rbx
   140005cb9:	call   QWORD PTR [rip+0x77b1]        # 0x14000d470
   140005cbf:	mov    rdx,QWORD PTR [r12]
   140005cc3:	mov    rbx,QWORD PTR [rdx]
   140005cc6:	mov    rcx,rbx
   140005cc9:	call   QWORD PTR [rip+0x77e9]        # 0x14000d4b8
   140005ccf:	mov    edx,0x1
   140005cd4:	mov    rcx,r12
   140005cd7:	call   rbx
   140005cd9:	mov    rbx,rsi
   140005cdc:	test   rsi,rsi
   140005cdf:	jne    0x140005c90
   140005ce1:	mov    r12,QWORD PTR [rsp+0x38]
   140005ce6:	jmp    0x140002b04
   140005ceb:	mov    rcx,rbx
   140005cee:	call   QWORD PTR [rip+0x77c4]        # 0x14000d4b8
   140005cf4:	mov    rcx,rdi
   140005cf7:	call   rbx
   140005cf9:	nop
   140005cfa:	jmp    0x140002b23
   140005cff:	mov    esi,0x8007000d
   140005d04:	jmp    0x140002bcc
   140005d09:	mov    esi,0x80070002
   140005d0e:	jmp    0x140002bcc
   140005d13:	mov    esi,0x8007000d
   140005d18:	jmp    0x140002bcc
   140005d1d:	mov    esi,0x80070002
   140005d22:	jmp    0x140002bb8
   140005d27:	mov    esi,0x80070002
   140005d2c:	jmp    0x140002bcc
   140005d31:	mov    esi,0x8007000d
   140005d36:	jmp    0x140002bcc
   140005d3b:	mov    esi,0x80070005
   140005d40:	jmp    0x140002bcc
   140005d45:	call   QWORD PTR [rip+0x758d]        # 0x14000d2d8
   140005d4b:	nop
   140005d4c:	jmp    0x140002bd9
   140005d51:	mov    rcx,r14
   140005d54:	call   QWORD PTR [rip+0x775e]        # 0x14000d4b8
   140005d5a:	mov    rcx,rbx
   140005d5d:	call   r14
   140005d60:	nop
   140005d61:	jmp    0x140002c09
   140005d66:	call   QWORD PTR [rip+0x756c]        # 0x14000d2d8
   140005d6c:	nop
   140005d6d:	jmp    0x140002c27
   140005d72:	call   QWORD PTR [rip+0x7560]        # 0x14000d2d8
   140005d78:	nop
   140005d79:	jmp    0x140002c35
   140005d7e:	mov    rcx,rdi
   140005d81:	call   QWORD PTR [rip+0x7731]        # 0x14000d4b8
   140005d87:	mov    edx,0x1
   140005d8c:	mov    rcx,rbx
   140005d8f:	call   rdi
   140005d91:	nop
   140005d92:	jmp    0x140002cf2
   140005d97:	mov    esi,0x80004003
   140005d9c:	jmp    0x140002d20
   140005da1:	lea    rdx,[rsp+0x20]
   140005da6:	mov    rcx,rax
   140005da9:	lea    rdi,[rax-0x28]
   140005dad:	call   QWORD PTR [rip+0x76bd]        # 0x14000d470
   140005db3:	test   rdi,rdi
   140005db6:	je     0x140005dd1
   140005db8:	mov    rax,QWORD PTR [rdi]
   140005dbb:	mov    rbx,QWORD PTR [rax]
   140005dbe:	mov    rcx,rbx
   140005dc1:	call   QWORD PTR [rip+0x76f1]        # 0x14000d4b8
   140005dc7:	mov    edx,0x1
   140005dcc:	mov    rcx,rdi
   140005dcf:	call   rbx
   140005dd1:	mov    rax,QWORD PTR [rsp+0x20]
   140005dd6:	test   rax,rax
   140005dd9:	jne    0x140005da1
   140005ddb:	jmp    0x140002d60
   140005de0:	mov    rax,QWORD PTR [rcx+0x40]
   140005de4:	mov    QWORD PTR [rdx],rax
   140005de7:	mov    ebp,DWORD PTR [rcx+0x48]
   140005dea:	jmp    0x140002e74
   140005def:	mov    rcx,rdi
   140005df2:	call   QWORD PTR [rip+0x76c0]        # 0x14000d4b8
   140005df8:	mov    rcx,rbx
   140005dfb:	call   rdi
   140005dfd:	nop
   140005dfe:	jmp    0x140002e27
   140005e03:	mov    rcx,rdi
   140005e06:	call   QWORD PTR [rip+0x76ac]        # 0x14000d4b8
   140005e0c:	mov    rcx,rbx
   140005e0f:	call   rdi
   140005e11:	nop
   140005e12:	jmp    0x140002e4a
   140005e17:	cmp    eax,0x2
   140005e1a:	jne    0x140005e25
   140005e1c:	mov    rcx,QWORD PTR [rcx+0x10]
   140005e20:	jmp    0x140002e5a
   140005e25:	cmp    eax,0x1
   140005e28:	jne    0x140002e74
   140005e2e:	mov    rcx,QWORD PTR [rcx+0x10]
   140005e32:	add    rcx,0x10
   140005e36:	jmp    0x140002e5a
   140005e3b:	int3   
   140005e3c:	xor    r9d,r9d
   140005e3f:	xor    r8d,r8d
   140005e42:	mov    ecx,0xc000000d
   140005e47:	lea    edx,[r9+0x1]
   140005e4b:	call   QWORD PTR [rip+0x724f]        # 0x14000d0a0
   140005e51:	nop
   140005e52:	jmp    0x140002fcb
   140005e57:	xor    r9d,r9d
   140005e5a:	xor    r8d,r8d
   140005e5d:	mov    ecx,0xc000000d
   140005e62:	lea    edx,[r9+0x1]
   140005e66:	call   QWORD PTR [rip+0x7234]        # 0x14000d0a0
   140005e6c:	nop
   140005e6d:	jmp    0x140002fed
   140005e72:	xor    r9d,r9d
   140005e75:	xor    r8d,r8d
   140005e78:	mov    ecx,0xc000000d
   140005e7d:	lea    edx,[r9+0x1]
   140005e81:	call   QWORD PTR [rip+0x7219]        # 0x14000d0a0
   140005e87:	nop
   140005e88:	jmp    0x14000300f
   140005e8d:	xor    r9d,r9d
   140005e90:	xor    r8d,r8d
   140005e93:	mov    ecx,0xc000000d
   140005e98:	lea    edx,[r9+0x1]
   140005e9c:	call   QWORD PTR [rip+0x71fe]        # 0x14000d0a0
   140005ea2:	nop
   140005ea3:	jmp    0x140003031
   140005ea8:	test   r8,r8
   140005eab:	jne    0x140005ec2
   140005ead:	lea    rdx,[r14-0x8]
   140005eb1:	lea    rcx,[rdi+0x20]
   140005eb5:	call   0x14000628c
   140005eba:	test   eax,eax
   140005ebc:	jns    0x14000313b
   140005ec2:	mov    rax,QWORD PTR [r14+0x8]
   140005ec6:	test   rax,rax
   140005ec9:	jne    0x140005ef0
   140005ecb:	mov    QWORD PTR [r14+0x8],rsi
   140005ecf:	jmp    0x14000314c
   140005ed4:	cmp    rcx,r8
   140005ed7:	je     0x140005ead
   140005ed9:	lea    r9,[r8+0x20]
   140005edd:	mov    r8,QWORD PTR [r8+0x18]
   140005ee1:	lea    rdx,[rcx+0x20]
   140005ee5:	mov    rcx,QWORD PTR [rcx+0x18]
   140005ee9:	call   0x140003480
   140005eee:	jmp    0x140005eba
   140005ef0:	mov    r14,rax
   140005ef3:	test   rax,rax
   140005ef6:	jne    0x140003121
   140005efc:	jmp    0x14000315f
   140005f01:	lea    rdx,[rbp-0x69]
   140005f05:	lea    rcx,[rsp+0x30]
   140005f0a:	call   0x14000628c
   140005f0f:	test   eax,eax
   140005f11:	jne    0x140005f57
   140005f13:	lea    ecx,[rax+0x50]
   140005f16:	call   QWORD PTR [rip+0x7164]        # 0x14000d080
   140005f1c:	mov    rdi,rax
   140005f1f:	test   rax,rax
   140005f22:	je     0x1400031cf
   140005f28:	mov    rdx,QWORD PTR [rsi+0x8]
   140005f2c:	lea    rax,[rsp+0x30]
   140005f31:	mov    r9,rsi
   140005f34:	mov    QWORD PTR [rsp+0x20],rax
   140005f39:	lea    r8,[rip+0xc5c0]        # 0x140012500
   140005f40:	mov    rcx,rdi
   140005f43:	call   0x14000648c
   140005f48:	lea    rax,[rip+0x8871]        # 0x14000e7c0
   140005f4f:	mov    QWORD PTR [rdi],rax
   140005f52:	jmp    0x140003178
   140005f57:	lea    rdx,[rbp-0x49]
   140005f5b:	lea    rcx,[rsp+0x30]
   140005f60:	call   0x14000628c
   140005f65:	test   eax,eax
   140005f67:	jne    0x140005fad
   140005f69:	lea    ecx,[rax+0x50]
   140005f6c:	call   QWORD PTR [rip+0x710e]        # 0x14000d080
   140005f72:	mov    rdi,rax
   140005f75:	test   rax,rax
   140005f78:	je     0x1400031cf
   140005f7e:	mov    rdx,QWORD PTR [rsi+0x8]
   140005f82:	lea    rax,[rsp+0x30]
   140005f87:	mov    r9,rsi
   140005f8a:	mov    QWORD PTR [rsp+0x20],rax
   140005f8f:	lea    r8,[rip+0xc0ea]        # 0x140012080
   140005f96:	mov    rcx,rdi
   140005f99:	call   0x14000648c
   140005f9e:	lea    rax,[rip+0x899b]        # 0x14000e940
   140005fa5:	mov    QWORD PTR [rdi],rax
   140005fa8:	jmp    0x140003178
   140005fad:	lea    rdx,[rbp-0x9]
   140005fb1:	lea    rcx,[rsp+0x30]
   140005fb6:	call   0x14000628c
   140005fbb:	test   eax,eax
   140005fbd:	jne    0x140003181
   140005fc3:	lea    ecx,[rax+0x50]
   140005fc6:	call   QWORD PTR [rip+0x70b4]        # 0x14000d080
   140005fcc:	mov    rdi,rax
   140005fcf:	test   rax,rax
   140005fd2:	je     0x140006000
   140005fd4:	mov    rdx,QWORD PTR [rsi+0x8]
   140005fd8:	lea    rax,[rsp+0x30]
   140005fdd:	mov    r9,rsi
   140005fe0:	mov    QWORD PTR [rsp+0x20],rax
   140005fe5:	lea    r8,[rip+0xc0c4]        # 0x1400120b0
   140005fec:	mov    rcx,rdi
   140005fef:	call   0x14000648c
   140005ff4:	lea    rax,[rip+0x85ad]        # 0x14000e5a8
   140005ffb:	mov    QWORD PTR [rdi],rax
   140005ffe:	jmp    0x140006003
   140006000:	mov    rdi,r14
   140006003:	mov    ecx,r15d
   140006006:	mov    QWORD PTR [r13+0x0],rdi
   14000600a:	mov    r15d,0x8007000e
   140006010:	test   rdi,rdi
   140006013:	cmove  ecx,r15d
   140006017:	mov    r15d,ecx
   14000601a:	jmp    0x140003181
   14000601f:	int3   
   140006020:	mov    rcx,QWORD PTR [rcx+0x40]
   140006024:	call   QWORD PTR [rip+0x7196]        # 0x14000d1c0
   14000602a:	mov    QWORD PTR [rbx+0x40],0x0
   140006032:	jmp    0x14000321d
   140006037:	int3   
   140006038:	test   r8,r8
   14000603b:	jne    0x140006050
   14000603d:	lea    rdx,[rbp-0x8]
   140006041:	lea    rcx,[rdi+0x20]
   140006045:	call   0x14000628c
   14000604a:	nop
   14000604b:	jmp    0x14000337d
   140006050:	mov    rax,QWORD PTR [rbp+0x8]
   140006054:	test   rax,rax
   140006057:	jne    0x140006062
   140006059:	mov    QWORD PTR [rbp+0x8],rsi
   14000605d:	jmp    0x140003396
   140006062:	mov    rbp,rax
   140006065:	test   rax,rax
   140006068:	jne    0x140003349
   14000606e:	jmp    0x1400033a9
   140006073:	int3   
   140006074:	cmp    rcx,r8
   140006077:	je     0x14000609b
   140006079:	lea    r9,[r8+0x20]
   14000607d:	mov    r8,QWORD PTR [r8+0x18]
   140006081:	lea    rax,[rcx+0x20]
   140006085:	mov    rcx,QWORD PTR [rcx+0x18]
   140006089:	jmp    0x140003487
   14000608e:	test   r8,r8
   140006091:	je     0x14000609b
   140006093:	or     eax,0xffffffff
   140006096:	jmp    0x14000349d
   14000609b:	mov    rdx,r9
   14000609e:	mov    rcx,rax
   1400060a1:	call   0x14000628c
   1400060a6:	nop
   1400060a7:	jmp    0x14000349d
   1400060ac:	mov    ecx,0x1
   1400060b1:	lock xadd DWORD PTR [rax+rax*1+0x10],ecx
   1400060b7:	lea    eax,[rcx+0x1]
   1400060ba:	ret    
   1400060bb:	int3   
   1400060bc:	or     edi,0xffffffff
   1400060bf:	lock xadd DWORD PTR [rax+rax*1+0x10],edi
   1400060c5:	dec    edi
   1400060c7:	jmp    0x140003506
   1400060cc:	mov    rcx,rsi
   1400060cf:	call   QWORD PTR [rip+0x73e3]        # 0x14000d4b8
   1400060d5:	mov    edx,0x1
   1400060da:	mov    rcx,rbx
   1400060dd:	call   rsi
   1400060df:	nop
   1400060e0:	jmp    0x140003542
   1400060e5:	mov    rdx,QWORD PTR [rsi]
   1400060e8:	mov    rbx,QWORD PTR [rdx+0x10]
   1400060ec:	mov    rcx,rbx
   1400060ef:	call   QWORD PTR [rip+0x73c3]        # 0x14000d4b8
   1400060f5:	mov    rcx,rsi
   1400060f8:	call   rbx
   1400060fa:	nop
   1400060fb:	jmp    0x140003552
   140006100:	mov    QWORD PTR [rcx+0x40],0x0
   140006108:	mov    rax,QWORD PTR [r14]
   14000610b:	mov    QWORD PTR [rsp+0x38],rdi
   140006110:	mov    rdi,QWORD PTR [rax+0x10]
   140006114:	mov    rcx,rdi
   140006117:	call   QWORD PTR [rip+0x739b]        # 0x14000d4b8
   14000611d:	mov    rcx,r14
   140006120:	call   rdi
   140006122:	mov    rdi,QWORD PTR [rsp+0x38]
   140006127:	jmp    0x140003592
   14000612c:	mov    rcx,QWORD PTR [rbx+0x38]
   140006130:	call   QWORD PTR [rip+0x708a]        # 0x14000d1c0
   140006136:	mov    QWORD PTR [rbx+0x38],0x0
   14000613e:	jmp    0x1400035a4
   140006143:	add    rcx,rcx
   140006146:	call   0x14000abc0
   14000614b:	nop
   14000614c:	jmp    0x1400035b1
   140006151:	int3   
   140006152:	mov    eax,ecx
   140006154:	test   rdx,rdx
   140006157:	je     0x14000363d
   14000615d:	mov    WORD PTR [rsi],di
   140006160:	jmp    0x14000363d
   140006165:	int3   
   140006166:	movzx  ebx,ax
   140006169:	or     ebx,0x80070000
   14000616f:	jmp    0x140003a90
   140006174:	mov    rcx,QWORD PTR [rbp-0x10]
   140006178:	call   QWORD PTR [rip+0x6eca]        # 0x14000d048
   14000617e:	call   QWORD PTR [rip+0x6f0c]        # 0x14000d090
   140006184:	mov    rcx,QWORD PTR [rip+0xca45]        # 0x140012bd0
   14000618b:	test   rcx,rcx
   14000618e:	je     0x14000619e
   140006190:	call   QWORD PTR [rip+0x7192]        # 0x14000d328
   140006196:	and    QWORD PTR [rip+0xca32],0x0        # 0x140012bd0
   14000619e:	mov    rcx,QWORD PTR [rip+0xca1b]        # 0x140012bc0
   1400061a5:	test   rcx,rcx
   1400061a8:	je     0x1400061b8
   1400061aa:	call   QWORD PTR [rip+0x6f20]        # 0x14000d0d0
   1400061b0:	and    QWORD PTR [rip+0xca08],0x0        # 0x140012bc0
   1400061b8:	lea    r11,[rsp+0x60]
   1400061bd:	mov    eax,ebx
   1400061bf:	mov    rbx,QWORD PTR [r11+0x10]
   1400061c3:	mov    rdi,QWORD PTR [r11+0x18]
   1400061c7:	mov    r14,QWORD PTR [r11+0x20]
   1400061cb:	mov    r15,QWORD PTR [r11+0x28]
   1400061cf:	mov    rsp,r11
   1400061d2:	pop    rbp
   1400061d3:	ret    
   1400061d4:	call   QWORD PTR [rip+0x6ed6]        # 0x14000d0b0
   1400061da:	mov    ebx,eax
   1400061dc:	test   eax,eax
   1400061de:	jle    0x140006216
   1400061e0:	movzx  ebx,ax
   1400061e3:	or     ebx,0x80070000
   1400061e9:	jmp    0x140006216
   1400061eb:	mov    ecx,DWORD PTR [rip+0xc9c7]        # 0x140012bb8
   1400061f1:	call   QWORD PTR [rip+0x6e69]        # 0x14000d060
   1400061f7:	xor    edx,edx
   1400061f9:	xor    ecx,ecx
   1400061fb:	call   QWORD PTR [rip+0x715f]        # 0x14000d360
   140006201:	mov    rcx,QWORD PTR [rip+0xc9a0]        # 0x140012ba8
   140006208:	call   QWORD PTR [rip+0x6ec2]        # 0x14000d0d0
   14000620e:	and    QWORD PTR [rip+0xc992],0x0        # 0x140012ba8
   140006216:	mov    eax,ebx
   140006218:	mov    rbx,QWORD PTR [rsp+0x50]
   14000621d:	add    rsp,0x40
   140006221:	pop    rdi
   140006222:	ret    
   140006223:	int3   
   140006224:	mov    rcx,QWORD PTR [rip+0xc985]        # 0x140012bb0
   14000622b:	jmp    0x140003dac
   140006230:	mov    rcx,QWORD PTR [rip+0xc991]        # 0x140012bc8
   140006237:	jmp    0x140003dd4
   14000623c:	call   QWORD PTR [rip+0x6e6e]        # 0x14000d0b0
   140006242:	mov    edi,eax
   140006244:	jmp    0x140003df7
   140006249:	test   edi,edi
   14000624b:	jg     0x140006254
   14000624d:	mov    ebx,edi
   14000624f:	jmp    0x140003e13
   140006254:	movzx  ebx,di
   140006257:	or     ebx,0x80070000
   14000625d:	jmp    0x140003e13
   140006262:	int3   
   140006263:	int3   
   140006264:	int3   
   140006265:	int3   
   140006266:	int3   
   140006267:	int3   
   140006268:	int3   
   140006269:	int3   
   14000626a:	int3   
   14000626b:	int3   
   14000626c:	sub    rsp,0x28
   140006270:	mov    rcx,QWORD PTR [rcx+0x28]
   140006274:	test   rcx,rcx
   140006277:	jns    0x140006281
   140006279:	add    rcx,rcx
   14000627c:	call   0x14000abc0
   140006281:	add    rsp,0x28
   140006285:	ret    
   140006286:	int3   
   140006287:	int3   
   140006288:	int3   
   140006289:	int3   
   14000628a:	int3   
   14000628b:	int3   
   14000628c:	sub    rsp,0x28
   140006290:	and    DWORD PTR [rsp+0x30],0x0
   140006295:	lea    r8,[rsp+0x30]
   14000629a:	mov    rdx,QWORD PTR [rdx]
   14000629d:	mov    rcx,QWORD PTR [rcx]
   1400062a0:	call   QWORD PTR [rip+0x701a]        # 0x14000d2c0
   1400062a6:	mov    eax,DWORD PTR [rsp+0x30]
   1400062aa:	add    rsp,0x28
   1400062ae:	ret    
   1400062af:	int3   
   1400062b0:	int3   
   1400062b1:	int3   
   1400062b2:	int3   
   1400062b3:	int3   
   1400062b4:	int3   
   1400062b5:	int3   
   1400062b6:	int3   
   1400062b7:	int3   
   1400062b8:	rex push rbx
   1400062ba:	sub    rsp,0x20
   1400062be:	mov    rax,rdx
   1400062c1:	mov    rbx,rcx
   1400062c4:	lea    rdx,[rsp+0x30]
   1400062c9:	mov    rcx,QWORD PTR [rax]
   1400062cc:	call   QWORD PTR [rip+0x6ff6]        # 0x14000d2c8
   1400062d2:	mov    rdx,QWORD PTR [rsp+0x30]
   1400062d7:	mov    r8,rbx
   1400062da:	mov    ecx,eax
   1400062dc:	call   0x1400069c0
   1400062e1:	add    rsp,0x20
   1400062e5:	pop    rbx
   1400062e6:	ret    
   1400062e7:	int3   
   1400062e8:	int3   
   1400062e9:	int3   
   1400062ea:	int3   
   1400062eb:	int3   
   1400062ec:	int3   
   1400062ed:	int3   
   1400062ee:	int3   
   1400062ef:	int3   
   1400062f0:	sub    rsp,0x28
   1400062f4:	mov    rcx,QWORD PTR [rcx]
   1400062f7:	test   rcx,rcx
   1400062fa:	je     0x140006302
   1400062fc:	call   QWORD PTR [rip+0x6fd6]        # 0x14000d2d8
   140006302:	add    rsp,0x28
   140006306:	ret    
   140006307:	int3   
   140006308:	int3   
   140006309:	int3   
   14000630a:	int3   
   14000630b:	int3   
   14000630c:	int3   
   14000630d:	int3   
   14000630e:	int3   
   14000630f:	int3   
   140006310:	rex push rbx
   140006312:	sub    rsp,0x20
   140006316:	mov    eax,r8d
   140006319:	mov    r9,rdx
   14000631c:	mov    rbx,rcx
   14000631f:	lea    r8,[rsp+0x30]
   140006324:	mov    edx,eax
   140006326:	mov    rcx,r9
   140006329:	call   QWORD PTR [rip+0x6fc1]        # 0x14000d2f0
   14000632f:	mov    rdx,QWORD PTR [rsp+0x30]
   140006334:	mov    r8,rbx
   140006337:	mov    ecx,eax
   140006339:	call   0x1400069c0
   14000633e:	add    rsp,0x20
   140006342:	pop    rbx
   140006343:	ret    
   140006344:	int3   
   140006345:	int3   
   140006346:	int3   
   140006347:	int3   
   140006348:	int3   
   140006349:	int3   
   14000634a:	int3   
   14000634b:	int3   
   14000634c:	mov    QWORD PTR [rsp+0x8],rbx
   140006351:	push   rdi
   140006352:	sub    rsp,0x20
   140006356:	mov    rdi,QWORD PTR [rcx]
   140006359:	test   rdi,rdi
   14000635c:	je     0x140006373
   14000635e:	mov    rax,QWORD PTR [rdi]
   140006361:	mov    rbx,QWORD PTR [rax+0x8]
   140006365:	mov    rcx,rbx
   140006368:	call   QWORD PTR [rip+0x714a]        # 0x14000d4b8
   14000636e:	mov    rcx,rdi
   140006371:	call   rbx
   140006373:	mov    rbx,QWORD PTR [rsp+0x30]
   140006378:	add    rsp,0x20
   14000637c:	pop    rdi
   14000637d:	ret    
   14000637e:	int3   
   14000637f:	int3   
   140006380:	int3   
   140006381:	int3   
   140006382:	int3   
   140006383:	int3   
   140006384:	mov    QWORD PTR [rsp+0x8],rbx
   140006389:	push   rdi
   14000638a:	sub    rsp,0x20
   14000638e:	mov    rdi,QWORD PTR [rcx]
   140006391:	xor    eax,eax
   140006393:	test   rdi,rdi
   140006396:	je     0x1400063b0
   140006398:	mov    QWORD PTR [rcx],rax
   14000639b:	mov    rax,QWORD PTR [rdi]
   14000639e:	mov    rbx,QWORD PTR [rax+0x10]
   1400063a2:	mov    rcx,rbx
   1400063a5:	call   QWORD PTR [rip+0x710d]        # 0x14000d4b8
   1400063ab:	mov    rcx,rdi
   1400063ae:	call   rbx
   1400063b0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400063b5:	add    rsp,0x20
   1400063b9:	pop    rdi
   1400063ba:	ret    
   1400063bb:	int3   
   1400063bc:	int3   
   1400063bd:	int3   
   1400063be:	int3   
   1400063bf:	int3   
   1400063c0:	int3   
   1400063c1:	int3   
   1400063c2:	int3   
   1400063c3:	int3   
   1400063c4:	sub    rsp,0x48
   1400063c8:	and    DWORD PTR [r8],0x0
   1400063cc:	lea    rax,[rsp+0x60]
   1400063d1:	mov    QWORD PTR [rsp+0x30],rax
   1400063d6:	mov    r9d,0x10
   1400063dc:	mov    QWORD PTR [rsp+0x28],r8
   1400063e1:	mov    r8,rdx
   1400063e4:	mov    DWORD PTR [rsp+0x60],0x4
   1400063ec:	call   0x140006448
   1400063f1:	cmp    eax,0x8007065e
   1400063f6:	mov    ecx,0x80040153
   1400063fb:	cmove  eax,ecx
   1400063fe:	add    rsp,0x48
   140006402:	ret    
   140006403:	int3   
   140006404:	int3   
   140006405:	int3   
   140006406:	int3   
   140006407:	int3   
   140006408:	int3   
   140006409:	int3   
   14000640a:	int3   
   14000640b:	int3   
   14000640c:	sub    rsp,0x38
   140006410:	mov    rax,QWORD PTR [rsp+0x60]
   140006415:	mov    rcx,QWORD PTR [rcx]
   140006418:	mov    QWORD PTR [rsp+0x28],rax
   14000641d:	mov    QWORD PTR [rsp+0x20],r9
   140006422:	mov    r9,r8
   140006425:	xor    r8d,r8d
   140006428:	call   QWORD PTR [rip+0x6da2]        # 0x14000d1d0
   14000642e:	test   eax,eax
   140006430:	jle    0x14000643a
   140006432:	movzx  eax,ax
   140006435:	or     eax,0x80070000
   14000643a:	add    rsp,0x38
   14000643e:	ret    
   14000643f:	int3   
   140006440:	int3   
   140006441:	int3   
   140006442:	int3   
   140006443:	int3   
   140006444:	int3   
   140006445:	int3   
   140006446:	int3   
   140006447:	int3   
   140006448:	sub    rsp,0x48
   14000644c:	mov    rax,QWORD PTR [rsp+0x80]
   140006454:	xor    edx,edx
   140006456:	mov    rcx,QWORD PTR [rcx]
   140006459:	mov    QWORD PTR [rsp+0x30],rax
   14000645e:	mov    rax,QWORD PTR [rsp+0x78]
   140006463:	mov    QWORD PTR [rsp+0x28],rax
   140006468:	and    QWORD PTR [rsp+0x20],0x0
   14000646e:	call   QWORD PTR [rip+0x6d54]        # 0x14000d1c8
   140006474:	test   eax,eax
   140006476:	jle    0x140006480
   140006478:	movzx  eax,ax
   14000647b:	or     eax,0x80070000
   140006480:	add    rsp,0x48
   140006484:	ret    
   140006485:	int3   
   140006486:	int3   
   140006487:	int3   
   140006488:	int3   
   140006489:	int3   
   14000648a:	int3   
   14000648b:	int3   
   14000648c:	rex push rbx
   14000648e:	sub    rsp,0x30
   140006492:	mov    rax,QWORD PTR [rsp+0x60]
   140006497:	mov    rbx,rcx
   14000649a:	mov    QWORD PTR [rsp+0x20],rax
   14000649f:	call   0x1400065e8
   1400064a4:	lea    rax,[rip+0x7b55]        # 0x14000e000
   1400064ab:	mov    QWORD PTR [rbx],rax
   1400064ae:	mov    rax,rbx
   1400064b1:	add    rsp,0x30
   1400064b5:	pop    rbx
   1400064b6:	ret    
   1400064b7:	int3   
   1400064b8:	int3   
   1400064b9:	int3   
   1400064ba:	int3   
   1400064bb:	int3   
   1400064bc:	int3   
   1400064bd:	int3   
   1400064be:	int3   
   1400064bf:	int3   
   1400064c0:	rex push rbx
   1400064c2:	sub    rsp,0x30
   1400064c6:	mov    rax,QWORD PTR [rsp+0x60]
   1400064cb:	mov    rbx,rcx
   1400064ce:	mov    QWORD PTR [rsp+0x20],rax
   1400064d3:	call   0x1400065e8
   1400064d8:	lea    rax,[rip+0x7ac1]        # 0x14000dfa0
   1400064df:	mov    QWORD PTR [rbx],rax
   1400064e2:	mov    rax,rbx
   1400064e5:	add    rsp,0x30
   1400064e9:	pop    rbx
   1400064ea:	ret    
   1400064eb:	int3   
   1400064ec:	int3   
   1400064ed:	int3   
   1400064ee:	int3   
   1400064ef:	int3   
   1400064f0:	int3   
   1400064f1:	int3   
   1400064f2:	int3   
   1400064f3:	int3   
   1400064f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400064f9:	push   rdi
   1400064fa:	sub    rsp,0x20
   1400064fe:	mov    rax,QWORD PTR [rcx+0x8]
   140006502:	mov    rdi,rcx
   140006505:	inc    DWORD PTR [rax+0x8]
   140006508:	mov    rcx,QWORD PTR [rcx+0x8]
   14000650c:	mov    rbx,QWORD PTR [rcx]
   14000650f:	test   rbx,rbx
   140006512:	jne    0x14000651a
   140006514:	lea    rax,[rdi+0x28]
   140006518:	jmp    0x140006599
   14000651a:	mov    rcx,QWORD PTR [rdi+0x18]
   14000651e:	mov    r8,QWORD PTR [rbx-0x10]
   140006522:	test   rcx,rcx
   140006525:	jne    0x140006550
   140006527:	test   r8,r8
   14000652a:	jne    0x14000653d
   14000652c:	lea    rdx,[rbx-0x8]
   140006530:	lea    rcx,[rdi+0x20]
   140006534:	call   0x14000628c
   140006539:	test   eax,eax
   14000653b:	jns    0x140006571
   14000653d:	mov    rax,QWORD PTR [rbx+0x8]
   140006541:	test   rax,rax
   140006544:	jne    0x14000657a
   140006546:	lea    rcx,[rdi+0x28]
   14000654a:	mov    QWORD PTR [rbx+0x8],rcx
   14000654e:	jmp    0x14000658c
   140006550:	test   r8,r8
   140006553:	je     0x140006571
   140006555:	cmp    rcx,r8
   140006558:	je     0x14000652c
   14000655a:	lea    r9,[r8+0x20]
   14000655e:	mov    r8,QWORD PTR [r8+0x18]
   140006562:	lea    rdx,[rcx+0x20]
   140006566:	mov    rcx,QWORD PTR [rcx+0x18]
   14000656a:	call   0x140003480
   14000656f:	jmp    0x140006539
   140006571:	mov    rax,QWORD PTR [rbx+0x10]
   140006575:	test   rax,rax
   140006578:	je     0x140006584
   14000657a:	mov    rbx,rax
   14000657d:	test   rax,rax
   140006580:	jne    0x14000651a
   140006582:	jmp    0x14000659c
   140006584:	lea    rcx,[rdi+0x28]
   140006588:	mov    QWORD PTR [rbx+0x10],rcx
   14000658c:	mov    QWORD PTR [rcx],rbx
   14000658f:	call   QWORD PTR [rip+0x6eb3]        # 0x14000d448
   140006595:	mov    rcx,QWORD PTR [rdi+0x8]
   140006599:	mov    QWORD PTR [rcx],rax
   14000659c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400065a1:	add    rsp,0x20
   1400065a5:	pop    rdi
   1400065a6:	ret    
   1400065a7:	int3   
   1400065a8:	int3   
   1400065a9:	int3   
   1400065aa:	int3   
   1400065ab:	int3   
   1400065ac:	int3   
   1400065ad:	int3   
   1400065ae:	int3   
   1400065af:	int3   
   1400065b0:	rex push rbx
   1400065b2:	sub    rsp,0x20
   1400065b6:	lea    rax,[rip+0x74ab]        # 0x14000da68
   1400065bd:	mov    rbx,rcx
   1400065c0:	mov    QWORD PTR [rcx],rax
   1400065c3:	mov    rax,QWORD PTR [rcx+0x8]
   1400065c7:	add    rcx,0x40
   1400065cb:	dec    DWORD PTR [rax+0x8]
   1400065ce:	call   0x140008230
   1400065d3:	lea    rcx,[rbx+0x20]
   1400065d7:	add    rsp,0x20
   1400065db:	pop    rbx
   1400065dc:	jmp    0x1400062f0
   1400065e1:	int3   
   1400065e2:	int3   
   1400065e3:	int3   
   1400065e4:	int3   
   1400065e5:	int3   
   1400065e6:	int3   
   1400065e7:	int3   
   1400065e8:	rex push rbx
   1400065ea:	sub    rsp,0x20
   1400065ee:	mov    QWORD PTR [rcx+0x8],rdx
   1400065f2:	lea    rax,[rip+0x746f]        # 0x14000da68
   1400065f9:	mov    rdx,QWORD PTR [rsp+0x50]
   1400065fe:	mov    rbx,rcx
   140006601:	mov    QWORD PTR [rcx],rax
   140006604:	mov    QWORD PTR [rcx+0x10],r8
   140006608:	mov    QWORD PTR [rcx+0x18],r9
   14000660c:	add    rcx,0x20
   140006610:	and    QWORD PTR [rcx],0x0
   140006614:	call   0x1400062b8
   140006619:	mov    QWORD PTR [rbx+0x40],0x0
   140006621:	lea    rax,[rbx+0x28]
   140006625:	and    DWORD PTR [rbx+0x48],0x0
   140006629:	mov    rcx,rbx
   14000662c:	and    QWORD PTR [rax+0x8],0x0
   140006631:	and    QWORD PTR [rax+0x10],0x0
   140006636:	mov    QWORD PTR [rax],rax
   140006639:	call   0x1400064f4
   14000663e:	and    DWORD PTR [rbx+0x4c],0x0
   140006642:	mov    rax,rbx
   140006645:	add    rsp,0x20
   140006649:	pop    rbx
   14000664a:	ret    
   14000664b:	int3   
   14000664c:	int3   
   14000664d:	int3   
   14000664e:	int3   
   14000664f:	int3   
   140006650:	int3   
   140006651:	int3   
   140006652:	int3   
   140006653:	int3   
   140006654:	mov    QWORD PTR [rsp+0x10],rbx
   140006659:	mov    QWORD PTR [rsp+0x8],rcx
   14000665e:	push   rdi
   14000665f:	sub    rsp,0x20
   140006663:	and    QWORD PTR [rsp+0x30],0x0
   140006669:	mov    rdi,rdx
   14000666c:	mov    BYTE PTR [rdx],0x0
   14000666f:	call   QWORD PTR [rip+0x69fb]        # 0x14000d070
   140006675:	mov    ebx,eax
   140006677:	test   eax,eax
   140006679:	js     0x1400066e2
   14000667b:	call   QWORD PTR [rip+0x6acf]        # 0x14000d150
   140006681:	mov    edx,0x8
   140006686:	lea    r9,[rsp+0x30]
   14000668b:	mov    rcx,rax
   14000668e:	lea    r8d,[rdx-0x7]
   140006692:	call   QWORD PTR [rip+0x6ae8]        # 0x14000d180
   140006698:	test   eax,eax
   14000669a:	jne    0x1400066b1
   14000669c:	call   QWORD PTR [rip+0x6a0e]        # 0x14000d0b0
   1400066a2:	mov    ebx,eax
   1400066a4:	test   eax,eax
   1400066a6:	jle    0x1400066b1
   1400066a8:	movzx  ebx,ax
   1400066ab:	or     ebx,0x80070000
   1400066b1:	call   QWORD PTR [rip+0x6999]        # 0x14000d050
   1400066b7:	test   ebx,ebx
   1400066b9:	js     0x1400066e2
   1400066bb:	mov    r8,QWORD PTR [rsp+0x30]
   1400066c0:	mov    rdx,rdi
   1400066c3:	call   0x140006884
   1400066c8:	mov    ebx,eax
   1400066ca:	test   eax,eax
   1400066cc:	js     0x1400066e2
   1400066ce:	cmp    BYTE PTR [rdi],0x0
   1400066d1:	jne    0x1400066e2
   1400066d3:	mov    r8,QWORD PTR [rsp+0x30]
   1400066d8:	mov    rdx,rdi
   1400066db:	call   0x140006708
   1400066e0:	mov    ebx,eax
   1400066e2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400066e7:	test   rcx,rcx
   1400066ea:	je     0x1400066f2
   1400066ec:	call   QWORD PTR [rip+0x69de]        # 0x14000d0d0
   1400066f2:	mov    eax,ebx
   1400066f4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400066f9:	add    rsp,0x20
   1400066fd:	pop    rdi
   1400066fe:	ret    
   1400066ff:	int3   
   140006700:	int3   
   140006701:	int3   
   140006702:	int3   
   140006703:	int3   
   140006704:	int3   
   140006705:	int3   
   140006706:	int3   
   140006707:	int3   
   140006708:	mov    QWORD PTR [rsp+0x8],rbx
   14000670d:	mov    QWORD PTR [rsp+0x20],rsi
   140006712:	push   rbp
   140006713:	push   rdi
   140006714:	push   r14
   140006716:	lea    rbp,[rsp-0x47]
   14000671b:	sub    rsp,0x90
   140006722:	mov    rax,QWORD PTR [rip+0xb8df]        # 0x140012008
   140006729:	xor    rax,rsp
   14000672c:	mov    QWORD PTR [rbp+0x37],rax
   140006730:	xor    eax,eax
   140006732:	mov    DWORD PTR [rbp+0x7],0x14
   140006739:	and    DWORD PTR [rbp-0x1],eax
   14000673c:	lea    rcx,[rbp-0x5]
   140006740:	and    DWORD PTR [rbp+0x3],eax
   140006743:	mov    rsi,rdx
   140006746:	xor    ebx,ebx
   140006748:	mov    QWORD PTR [rbp+0x13],rax
   14000674c:	and    DWORD PTR [rbp+0xf],ebx
   14000674f:	lea    rdx,[rbp+0xf]
   140006753:	mov    DWORD PTR [rbp+0x1b],eax
   140006756:	mov    r14,r8
   140006759:	mov    DWORD PTR [rbp-0x5],0x1fffff
   140006760:	call   QWORD PTR [rip+0x6bea]        # 0x14000d350
   140006766:	and    DWORD PTR [rbp-0x9],ebx
   140006769:	mov    BYTE PTR [rsi],bl
   14000676b:	call   QWORD PTR [rip+0x6a17]        # 0x14000d188
   140006771:	xor    r9d,r9d
   140006774:	lea    edx,[rbx+0x7]
   140006777:	mov    rcx,rax
   14000677a:	xor    r8d,r8d
   14000677d:	lea    rax,[rbp-0x9]
   140006781:	mov    QWORD PTR [rsp+0x20],rax
   140006786:	call   QWORD PTR [rip+0x6bac]        # 0x14000d338
   14000678c:	mov    ecx,DWORD PTR [rbp-0x9]
   14000678f:	call   QWORD PTR [rip+0x68eb]        # 0x14000d080
   140006795:	mov    rdi,rax
   140006798:	test   rax,rax
   14000679b:	je     0x1400067da
   14000679d:	call   QWORD PTR [rip+0x69e5]        # 0x14000d188
   1400067a3:	mov    r9d,DWORD PTR [rbp-0x9]
   1400067a7:	lea    edx,[rbx+0x7]
   1400067aa:	mov    rcx,rax
   1400067ad:	mov    r8,rdi
   1400067b0:	lea    rax,[rbp-0x9]
   1400067b4:	mov    QWORD PTR [rsp+0x20],rax
   1400067b9:	call   QWORD PTR [rip+0x6b79]        # 0x14000d338
   1400067bf:	test   eax,eax
   1400067c1:	jne    0x1400067ed
   1400067c3:	call   QWORD PTR [rip+0x68e7]        # 0x14000d0b0
   1400067c9:	mov    ebx,eax
   1400067cb:	test   eax,eax
   1400067cd:	jle    0x1400067e9
   1400067cf:	movzx  ebx,ax
   1400067d2:	or     ebx,0x80070000
   1400067d8:	jmp    0x1400067e9
   1400067da:	mov    ebx,0x8007000e
   1400067df:	xor    edx,edx
   1400067e1:	mov    ecx,ebx
   1400067e3:	call   QWORD PTR [rip+0x6a87]        # 0x14000d270
   1400067e9:	test   ebx,ebx
   1400067eb:	js     0x140006849
   1400067ed:	mov    r8d,DWORD PTR [rbp-0x5]
   1400067f1:	lea    rax,[rbp-0x1]
   1400067f5:	mov    QWORD PTR [rsp+0x38],rax
   1400067fa:	lea    r9,[rbp+0xf]
   1400067fe:	lea    rax,[rbp+0x3]
   140006802:	mov    rdx,r14
   140006805:	mov    QWORD PTR [rsp+0x30],rax
   14000680a:	mov    rcx,rdi
   14000680d:	lea    rax,[rbp+0x7]
   140006811:	mov    QWORD PTR [rsp+0x28],rax
   140006816:	lea    rax,[rbp+0x1f]
   14000681a:	mov    QWORD PTR [rsp+0x20],rax
   14000681f:	call   QWORD PTR [rip+0x6b1b]        # 0x14000d340
   140006825:	test   eax,eax
   140006827:	jne    0x140006840
   140006829:	call   QWORD PTR [rip+0x6881]        # 0x14000d0b0
   14000682f:	mov    ebx,eax
   140006831:	test   eax,eax
   140006833:	jle    0x140006849
   140006835:	movzx  ebx,ax
   140006838:	or     ebx,0x80070000
   14000683e:	jmp    0x140006849
   140006840:	cmp    DWORD PTR [rbp-0x1],0x0
   140006844:	setne  cl
   140006847:	mov    BYTE PTR [rsi],cl
   140006849:	test   rdi,rdi
   14000684c:	je     0x140006857
   14000684e:	mov    rcx,rdi
   140006851:	call   QWORD PTR [rip+0x67e1]        # 0x14000d038
   140006857:	mov    eax,ebx
   140006859:	mov    rcx,QWORD PTR [rbp+0x37]
   14000685d:	xor    rcx,rsp
   140006860:	call   0x140004450
   140006865:	lea    r11,[rsp+0x90]
   14000686d:	mov    rbx,QWORD PTR [r11+0x20]
   140006871:	mov    rsi,QWORD PTR [r11+0x38]
   140006875:	mov    rsp,r11
   140006878:	pop    r14
   14000687a:	pop    rdi
   14000687b:	pop    rbp
   14000687c:	ret    
   14000687d:	int3   
   14000687e:	int3   
   14000687f:	int3   
   140006880:	int3   
   140006881:	int3   
   140006882:	int3   
   140006883:	int3   
   140006884:	mov    QWORD PTR [rsp+0x8],rbx
   140006889:	mov    QWORD PTR [rsp+0x20],rdi
   14000688e:	push   rbp
   14000688f:	mov    rbp,rsp
   140006892:	sub    rsp,0x50
   140006896:	mov    rax,QWORD PTR [rip+0xb76b]        # 0x140012008
   14000689d:	xor    rax,rsp
   1400068a0:	mov    QWORD PTR [rbp-0x8],rax
   1400068a4:	xor    eax,eax
   1400068a6:	mov    QWORD PTR [rbp-0x28],0x14
   1400068ae:	mov    QWORD PTR [rbp-0x1c],rax
   1400068b2:	xor    ebx,ebx
   1400068b4:	mov    QWORD PTR [rbp-0x14],rax
   1400068b8:	mov    rcx,r8
   1400068bb:	mov    rdi,rdx
   1400068be:	mov    BYTE PTR [rdx],bl
   1400068c0:	lea    r8,[rbp-0x30]
   1400068c4:	mov    DWORD PTR [rbp-0x30],ebx
   1400068c7:	lea    eax,[rbx+0x1]
   1400068ca:	mov    DWORD PTR [rbp-0x20],eax
   1400068cd:	lea    rdx,[rbp-0x20]
   1400068d1:	mov    DWORD PTR [rbp-0x1c],eax
   1400068d4:	mov    rax,QWORD PTR [rbp-0x28]
   1400068d8:	mov    QWORD PTR [rbp-0x18],rax
   1400068dc:	call   QWORD PTR [rip+0x6a66]        # 0x14000d348
   1400068e2:	test   eax,eax
   1400068e4:	jne    0x1400068ff
   1400068e6:	call   QWORD PTR [rip+0x67c4]        # 0x14000d0b0
   1400068ec:	test   eax,eax
   1400068ee:	jg     0x1400068f4
   1400068f0:	mov    ebx,eax
   1400068f2:	jmp    0x140006907
   1400068f4:	movzx  ebx,ax
   1400068f7:	or     ebx,0x80070000
   1400068fd:	jmp    0x140006907
   1400068ff:	cmp    DWORD PTR [rbp-0x30],ebx
   140006902:	setne  cl
   140006905:	mov    BYTE PTR [rdi],cl
   140006907:	mov    eax,ebx
   140006909:	mov    rcx,QWORD PTR [rbp-0x8]
   14000690d:	xor    rcx,rsp
   140006910:	call   0x140004450
   140006915:	mov    rbx,QWORD PTR [rsp+0x60]
   14000691a:	mov    rdi,QWORD PTR [rsp+0x78]
   14000691f:	add    rsp,0x50
   140006923:	pop    rbp
   140006924:	ret    
   140006925:	int3   
   140006926:	int3   
   140006927:	int3   
   140006928:	int3   
   140006929:	int3   
   14000692a:	int3   
   14000692b:	int3   
   14000692c:	int3   
   14000692d:	int3   
   14000692e:	int3   
   14000692f:	int3   
   140006930:	sub    rsp,0x28
   140006934:	lea    rdx,[rsp+0x38]
   140006939:	mov    BYTE PTR [rsp+0x38],0x0
   14000693e:	call   0x140006654
   140006943:	test   eax,eax
   140006945:	js     0x14000695f
   140006947:	cmp    BYTE PTR [rsp+0x38],0x0
   14000694c:	mov    ecx,0x80070005
   140006951:	cmove  eax,ecx
   140006954:	test   eax,eax
   140006956:	js     0x14000695f
   140006958:	lock inc DWORD PTR [rip+0xc421]        # 0x140012d80
   14000695f:	add    rsp,0x28
   140006963:	ret    
   140006964:	int3   
   140006965:	int3   
   140006966:	int3   
   140006967:	int3   
   140006968:	int3   
   140006969:	int3   
   14000696a:	int3   
   14000696b:	int3   
   14000696c:	int3   
   14000696d:	int3   
   14000696e:	int3   
   14000696f:	int3   
   140006970:	sub    rsp,0x28
   140006974:	lea    rdx,[rsp+0x38]
   140006979:	mov    BYTE PTR [rsp+0x38],0x0
   14000697e:	call   0x140006654
   140006983:	test   eax,eax
   140006985:	js     0x1400069b3
   140006987:	cmp    BYTE PTR [rsp+0x38],0x0
   14000698c:	mov    ecx,0x80070005
   140006991:	cmove  eax,ecx
   140006994:	test   eax,eax
   140006996:	js     0x1400069b3
   140006998:	or     ecx,0xffffffff
   14000699b:	lock xadd DWORD PTR [rip+0xc3dd],ecx        # 0x140012d80
   1400069a3:	cmp    ecx,0x1
   1400069a6:	jne    0x1400069b3
   1400069a8:	mov    ecx,0x4
   1400069ad:	call   QWORD PTR [rip+0x68b5]        # 0x14000d268
   1400069b3:	add    rsp,0x28
   1400069b7:	ret    
   1400069b8:	int3   
   1400069b9:	int3   
   1400069ba:	int3   
   1400069bb:	int3   
   1400069bc:	int3   
   1400069bd:	int3   
   1400069be:	int3   
   1400069bf:	int3   
   1400069c0:	rex push rbx
   1400069c2:	sub    rsp,0x20
   1400069c6:	mov    ebx,ecx
   1400069c8:	test   ecx,ecx
   1400069ca:	js     0x1400069d8
   1400069cc:	mov    rcx,QWORD PTR [r8]
   1400069cf:	mov    QWORD PTR [r8],rdx
   1400069d2:	call   QWORD PTR [rip+0x6900]        # 0x14000d2d8
   1400069d8:	mov    eax,ebx
   1400069da:	add    rsp,0x20
   1400069de:	pop    rbx
   1400069df:	ret    
   1400069e0:	int3   
   1400069e1:	int3   
   1400069e2:	int3   
   1400069e3:	int3   
   1400069e4:	int3   
   1400069e5:	int3   
   1400069e6:	int3   
   1400069e7:	int3   
   1400069e8:	int3   
   1400069e9:	int3   
   1400069ea:	int3   
   1400069eb:	int3   
   1400069ec:	int3   
   1400069ed:	int3   
   1400069ee:	int3   
   1400069ef:	int3   
   1400069f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400069f5:	push   rdi
   1400069f6:	sub    rsp,0x20
   1400069fa:	and    QWORD PTR [rdx],0x0
   1400069fe:	mov    rdi,rdx
   140006a01:	mov    rbx,QWORD PTR [rip+0xc1a8]        # 0x140012bb0
   140006a08:	test   rbx,rbx
   140006a0b:	je     0x140006a1d
   140006a0d:	mov    rcx,rbx
   140006a10:	call   QWORD PTR [rip+0x6aa2]        # 0x14000d4b8
   140006a16:	mov    rcx,rdi
   140006a19:	call   rbx
   140006a1b:	jmp    0x140006a22
   140006a1d:	mov    eax,0x80004001
   140006a22:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a27:	add    rsp,0x20
   140006a2b:	pop    rdi
   140006a2c:	ret    
   140006a2d:	int3   
   140006a2e:	int3   
   140006a2f:	int3   
   140006a30:	int3   
   140006a31:	int3   
   140006a32:	int3   
   140006a33:	int3   
   140006a34:	int3   
   140006a35:	int3   
   140006a36:	int3   
   140006a37:	int3   
   140006a38:	int3   
   140006a39:	int3   
   140006a3a:	int3   
   140006a3b:	int3   
   140006a3c:	int3   
   140006a3d:	int3   
   140006a3e:	int3   
   140006a3f:	int3   
   140006a40:	rex push rbx
   140006a42:	sub    rsp,0x20
   140006a46:	mov    rbx,rdx
   140006a49:	mov    BYTE PTR [rsp+0x40],0x0
   140006a4e:	lea    rdx,[rsp+0x40]
   140006a53:	call   0x140006654
   140006a58:	test   eax,eax
   140006a5a:	js     0x140006a76
   140006a5c:	cmp    BYTE PTR [rsp+0x40],0x0
   140006a61:	mov    ecx,0x80070005
   140006a66:	cmove  eax,ecx
   140006a69:	test   eax,eax
   140006a6b:	js     0x140006a76
   140006a6d:	mov    rcx,rbx
   140006a70:	call   QWORD PTR [rip+0x680a]        # 0x14000d280
   140006a76:	add    rsp,0x20
   140006a7a:	pop    rbx
   140006a7b:	ret    
   140006a7c:	int3   
   140006a7d:	int3   
   140006a7e:	int3   
   140006a7f:	int3   
   140006a80:	int3   
   140006a81:	int3   
   140006a82:	int3   
   140006a83:	int3   
   140006a84:	int3   
   140006a85:	int3   
   140006a86:	int3   
   140006a87:	int3   
   140006a88:	int3   
   140006a89:	int3   
   140006a8a:	int3   
   140006a8b:	int3   
   140006a8c:	int3   
   140006a8d:	int3   
   140006a8e:	int3   
   140006a8f:	int3   
   140006a90:	sub    rsp,0x28
   140006a94:	and    DWORD PTR [rdx],0x0
   140006a97:	mov    ecx,0x80004001
   140006a9c:	and    QWORD PTR [r8],0x0
   140006aa0:	xor    edx,edx
   140006aa2:	call   QWORD PTR [rip+0x67c8]        # 0x14000d270
   140006aa8:	mov    eax,0x80004001
   140006aad:	add    rsp,0x28
   140006ab1:	ret    
   140006ab2:	int3   
   140006ab3:	int3   
   140006ab4:	int3   
   140006ab5:	int3   
   140006ab6:	int3   
   140006ab7:	int3   
   140006ab8:	int3   
   140006ab9:	int3   
   140006aba:	int3   
   140006abb:	int3   
   140006abc:	int3   
   140006abd:	int3   
   140006abe:	int3   
   140006abf:	int3   
   140006ac0:	rex push rbx
   140006ac2:	sub    rsp,0x20
   140006ac6:	mov    ebx,edx
   140006ac8:	mov    BYTE PTR [rsp+0x40],0x0
   140006acd:	lea    rdx,[rsp+0x40]
   140006ad2:	call   0x140006654
   140006ad7:	test   eax,eax
   140006ad9:	js     0x140006af4
   140006adb:	cmp    BYTE PTR [rsp+0x40],0x0
   140006ae0:	mov    ecx,0x80070005
   140006ae5:	cmove  eax,ecx
   140006ae8:	test   eax,eax
   140006aea:	js     0x140006af4
   140006aec:	mov    ecx,ebx
   140006aee:	call   QWORD PTR [rip+0x6774]        # 0x14000d268
   140006af4:	add    rsp,0x20
   140006af8:	pop    rbx
   140006af9:	ret    
   140006afa:	int3   
   140006afb:	int3   
   140006afc:	int3   
   140006afd:	int3   
   140006afe:	int3   
   140006aff:	int3   
   140006b00:	rex push rbx
   140006b02:	sub    rsp,0x20
   140006b06:	mov    rbx,QWORD PTR [rip+0xc0cb]        # 0x140012bd8
   140006b0d:	test   rbx,rbx
   140006b10:	je     0x140006b1d
   140006b12:	mov    rcx,rbx
   140006b15:	call   QWORD PTR [rip+0x699d]        # 0x14000d4b8
   140006b1b:	call   rbx
   140006b1d:	mov    rcx,QWORD PTR [rip+0xc0bc]        # 0x140012be0
   140006b24:	test   rcx,rcx
   140006b27:	je     0x140006b4f
   140006b29:	and    QWORD PTR [rip+0xc097],0x0        # 0x140012bc8
   140006b31:	and    QWORD PTR [rip+0xc077],0x0        # 0x140012bb0
   140006b39:	and    QWORD PTR [rip+0xc097],0x0        # 0x140012bd8
   140006b41:	call   QWORD PTR [rip+0x65d9]        # 0x14000d120
   140006b47:	and    QWORD PTR [rip+0xc091],0x0        # 0x140012be0
   140006b4f:	add    rsp,0x20
   140006b53:	pop    rbx
   140006b54:	ret    
   140006b55:	int3   
   140006b56:	int3   
   140006b57:	int3   
   140006b58:	int3   
   140006b59:	int3   
   140006b5a:	int3   
   140006b5b:	int3   
   140006b5c:	mov    QWORD PTR [rsp+0x8],rbx
   140006b61:	mov    QWORD PTR [rsp+0x10],rsi
   140006b66:	push   rdi
   140006b67:	sub    rsp,0x20
   140006b6b:	and    QWORD PTR [r8],0x0
   140006b6f:	mov    r9,rdx
   140006b72:	mov    rdi,rcx
   140006b75:	lea    rdx,[rip+0x6ce4]        # 0x14000d860
   140006b7c:	mov    rcx,r9
   140006b7f:	call   0x140009c9c
   140006b84:	test   eax,eax
   140006b86:	jne    0x140006bdd
   140006b88:	lea    rdx,[rip+0x6cf1]        # 0x14000d880
   140006b8f:	call   0x140009c9c
   140006b94:	test   eax,eax
   140006b96:	jne    0x140006bdd
   140006b98:	lea    rdx,[rip+0x81b9]        # 0x14000ed58
   140006b9f:	call   0x140009c9c
   140006ba4:	test   eax,eax
   140006ba6:	je     0x140006baf
   140006ba8:	mov    QWORD PTR [r8],rdi
   140006bab:	xor    esi,esi
   140006bad:	jmp    0x140006bc1
   140006baf:	lea    rcx,[rdi+0x8]
   140006bb3:	mov    rdx,r9
   140006bb6:	call   0x1400081fc
   140006bbb:	mov    esi,eax
   140006bbd:	test   eax,eax
   140006bbf:	js     0x140006bd9
   140006bc1:	mov    rdi,QWORD PTR [r8]
   140006bc4:	mov    rdx,QWORD PTR [rdi]
   140006bc7:	mov    rbx,QWORD PTR [rdx+0x8]
   140006bcb:	mov    rcx,rbx
   140006bce:	call   QWORD PTR [rip+0x68e4]        # 0x14000d4b8
   140006bd4:	mov    rcx,rdi
   140006bd7:	call   rbx
   140006bd9:	mov    eax,esi
   140006bdb:	jmp    0x140006bf7
   140006bdd:	mov    QWORD PTR [r8],rdi
   140006be0:	mov    rax,QWORD PTR [rdi]
   140006be3:	mov    rbx,QWORD PTR [rax+0x8]
   140006be7:	mov    rcx,rbx
   140006bea:	call   QWORD PTR [rip+0x68c8]        # 0x14000d4b8
   140006bf0:	mov    rcx,rdi
   140006bf3:	call   rbx
   140006bf5:	xor    eax,eax
   140006bf7:	mov    rbx,QWORD PTR [rsp+0x30]
   140006bfc:	mov    rsi,QWORD PTR [rsp+0x38]
   140006c01:	add    rsp,0x20
   140006c05:	pop    rdi
   140006c06:	ret    
   140006c07:	int3   
   140006c08:	int3   
   140006c09:	int3   
   140006c0a:	int3   
   140006c0b:	int3   
   140006c0c:	int3   
   140006c0d:	int3   
   140006c0e:	int3   
   140006c0f:	int3   
   140006c10:	mov    QWORD PTR [rsp+0x8],rbx
   140006c15:	mov    QWORD PTR [rsp+0x10],rsi
   140006c1a:	push   rdi
   140006c1b:	sub    rsp,0x20
   140006c1f:	and    QWORD PTR [r8],0x0
   140006c23:	mov    r9,rdx
   140006c26:	mov    rdi,rcx
   140006c29:	lea    rdx,[rip+0x6c30]        # 0x14000d860
   140006c30:	mov    rcx,r9
   140006c33:	call   0x140009c9c
   140006c38:	test   eax,eax
   140006c3a:	jne    0x140006c91
   140006c3c:	lea    rdx,[rip+0x6c3d]        # 0x14000d880
   140006c43:	call   0x140009c9c
   140006c48:	test   eax,eax
   140006c4a:	jne    0x140006c91
   140006c4c:	lea    rdx,[rip+0x8135]        # 0x14000ed88
   140006c53:	call   0x140009c9c
   140006c58:	test   eax,eax
   140006c5a:	je     0x140006c63
   140006c5c:	mov    QWORD PTR [r8],rdi
   140006c5f:	xor    esi,esi
   140006c61:	jmp    0x140006c75
   140006c63:	lea    rcx,[rdi+0x8]
   140006c67:	mov    rdx,r9
   140006c6a:	call   0x1400081fc
   140006c6f:	mov    esi,eax
   140006c71:	test   eax,eax
   140006c73:	js     0x140006c8d
   140006c75:	mov    rdi,QWORD PTR [r8]
   140006c78:	mov    rdx,QWORD PTR [rdi]
   140006c7b:	mov    rbx,QWORD PTR [rdx+0x8]
   140006c7f:	mov    rcx,rbx
   140006c82:	call   QWORD PTR [rip+0x6830]        # 0x14000d4b8
   140006c88:	mov    rcx,rdi
   140006c8b:	call   rbx
   140006c8d:	mov    eax,esi
   140006c8f:	jmp    0x140006cab
   140006c91:	mov    QWORD PTR [r8],rdi
   140006c94:	mov    rax,QWORD PTR [rdi]
   140006c97:	mov    rbx,QWORD PTR [rax+0x8]
   140006c9b:	mov    rcx,rbx
   140006c9e:	call   QWORD PTR [rip+0x6814]        # 0x14000d4b8
   140006ca4:	mov    rcx,rdi
   140006ca7:	call   rbx
   140006ca9:	xor    eax,eax
   140006cab:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cb0:	mov    rsi,QWORD PTR [rsp+0x38]
   140006cb5:	add    rsp,0x20
   140006cb9:	pop    rdi
   140006cba:	ret    
   140006cbb:	int3   
   140006cbc:	int3   
   140006cbd:	int3   
   140006cbe:	int3   
   140006cbf:	int3   
   140006cc0:	int3   
   140006cc1:	int3   
   140006cc2:	int3   
   140006cc3:	int3   
   140006cc4:	mov    QWORD PTR [rsp+0x8],rbx
   140006cc9:	mov    QWORD PTR [rsp+0x10],rsi
   140006cce:	push   rdi
   140006ccf:	sub    rsp,0x20
   140006cd3:	and    QWORD PTR [r8],0x0
   140006cd7:	mov    r9,rdx
   140006cda:	mov    rdi,rcx
   140006cdd:	lea    rdx,[rip+0x6b7c]        # 0x14000d860
   140006ce4:	mov    rcx,r9
   140006ce7:	call   0x140009c9c
   140006cec:	test   eax,eax
   140006cee:	jne    0x140006d45
   140006cf0:	lea    rdx,[rip+0x6b89]        # 0x14000d880
   140006cf7:	call   0x140009c9c
   140006cfc:	test   eax,eax
   140006cfe:	jne    0x140006d45
   140006d00:	lea    rdx,[rip+0x8031]        # 0x14000ed38
   140006d07:	call   0x140009c9c
   140006d0c:	test   eax,eax
   140006d0e:	je     0x140006d17
   140006d10:	mov    QWORD PTR [r8],rdi
   140006d13:	xor    esi,esi
   140006d15:	jmp    0x140006d29
   140006d17:	lea    rcx,[rdi+0x8]
   140006d1b:	mov    rdx,r9
   140006d1e:	call   0x14000818c
   140006d23:	mov    esi,eax
   140006d25:	test   eax,eax
   140006d27:	js     0x140006d41
   140006d29:	mov    rdi,QWORD PTR [r8]
   140006d2c:	mov    rdx,QWORD PTR [rdi]
   140006d2f:	mov    rbx,QWORD PTR [rdx+0x8]
   140006d33:	mov    rcx,rbx
   140006d36:	call   QWORD PTR [rip+0x677c]        # 0x14000d4b8
   140006d3c:	mov    rcx,rdi
   140006d3f:	call   rbx
   140006d41:	mov    eax,esi
   140006d43:	jmp    0x140006d5f
   140006d45:	mov    QWORD PTR [r8],rdi
   140006d48:	mov    rax,QWORD PTR [rdi]
   140006d4b:	mov    rbx,QWORD PTR [rax+0x8]
   140006d4f:	mov    rcx,rbx
   140006d52:	call   QWORD PTR [rip+0x6760]        # 0x14000d4b8
   140006d58:	mov    rcx,rdi
   140006d5b:	call   rbx
   140006d5d:	xor    eax,eax
   140006d5f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d64:	mov    rsi,QWORD PTR [rsp+0x38]
   140006d69:	add    rsp,0x20
   140006d6d:	pop    rdi
   140006d6e:	ret    
   140006d6f:	int3   
   140006d70:	int3   
   140006d71:	int3   
   140006d72:	int3   
   140006d73:	int3   
   140006d74:	int3   
   140006d75:	int3   
   140006d76:	int3   
   140006d77:	int3   
   140006d78:	mov    QWORD PTR [rsp+0x8],rbx
   140006d7d:	push   rdi
   140006d7e:	sub    rsp,0x20
   140006d82:	mov    QWORD PTR [rcx],rdx
   140006d85:	mov    rdi,rdx
   140006d88:	test   rdx,rdx
   140006d8b:	je     0x140006da2
   140006d8d:	mov    rax,QWORD PTR [rdx]
   140006d90:	mov    rbx,QWORD PTR [rax+0x8]
   140006d94:	mov    rcx,rbx
   140006d97:	call   QWORD PTR [rip+0x671b]        # 0x14000d4b8
   140006d9d:	mov    rcx,rdi
   140006da0:	call   rbx
   140006da2:	xor    eax,eax
   140006da4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006da9:	add    rsp,0x20
   140006dad:	pop    rdi
   140006dae:	ret    
   140006daf:	int3   
   140006db0:	int3   
   140006db1:	int3   
   140006db2:	int3   
   140006db3:	int3   
   140006db4:	int3   
   140006db5:	int3   
   140006db6:	int3   
   140006db7:	int3   
   140006db8:	mov    QWORD PTR [rsp+0x8],rbx
   140006dbd:	mov    QWORD PTR [rsp+0x10],rbp
   140006dc2:	mov    QWORD PTR [rsp+0x18],rsi
   140006dc7:	push   rdi
   140006dc8:	sub    rsp,0x20
   140006dcc:	xor    ebp,ebp
   140006dce:	mov    rsi,rdx
   140006dd1:	mov    dil,bpl
   140006dd4:	mov    eax,ebp
   140006dd6:	mov    rbx,rcx
   140006dd9:	test   dil,dil
   140006ddc:	jne    0x140006e2a
   140006dde:	test   rbx,rbx
   140006de1:	je     0x140006e25
   140006de3:	cmp    DWORD PTR [rbx+0x48],ebp
   140006de6:	je     0x140006e25
   140006de8:	mov    rcx,rbx
   140006deb:	call   0x1400087e4
   140006df0:	test   eax,eax
   140006df2:	js     0x140006e2a
   140006df4:	mov    rdx,QWORD PTR [rsi]
   140006df7:	mov    dil,bpl
   140006dfa:	mov    r8,QWORD PTR [rsi+0x8]
   140006dfe:	mov    rcx,QWORD PTR [rbx+0x30]
   140006e02:	mov    rdx,QWORD PTR [rdx]
   140006e05:	call   0x140009ee0
   140006e0a:	test   eax,eax
   140006e0c:	js     0x140006e13
   140006e0e:	mov    dil,0x1
   140006e11:	jmp    0x140006e1b
   140006e13:	cmp    eax,0x8000000b
   140006e18:	cmove  eax,ebp
   140006e1b:	test   eax,eax
   140006e1d:	js     0x140006e2a
   140006e1f:	mov    rbx,QWORD PTR [rbx+0x38]
   140006e23:	jmp    0x140006dd9
   140006e25:	mov    eax,0x8000000b
   140006e2a:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e2f:	mov    rbp,QWORD PTR [rsp+0x38]
   140006e34:	mov    rsi,QWORD PTR [rsp+0x40]
   140006e39:	add    rsp,0x20
   140006e3d:	pop    rdi
   140006e3e:	ret    
   140006e3f:	int3   
   140006e40:	int3   
   140006e41:	int3   
   140006e42:	int3   
   140006e43:	int3   
   140006e44:	int3   
   140006e45:	int3   
   140006e46:	int3   
   140006e47:	int3   
   140006e48:	mov    QWORD PTR [rsp+0x8],rbx
   140006e4d:	mov    QWORD PTR [rsp+0x10],rsi
   140006e52:	push   rdi
   140006e53:	sub    rsp,0x20
   140006e57:	xor    dil,dil
   140006e5a:	mov    rsi,rdx
   140006e5d:	xor    r8d,r8d
   140006e60:	mov    rbx,rcx
   140006e63:	test   dil,dil
   140006e66:	jne    0x140006ec3
   140006e68:	test   rbx,rbx
   140006e6b:	je     0x140006ec0
   140006e6d:	cmp    DWORD PTR [rbx+0x48],0x0
   140006e71:	je     0x140006ec0
   140006e73:	mov    rcx,rbx
   140006e76:	call   0x1400087e4
   140006e7b:	mov    r8d,eax
   140006e7e:	test   eax,eax
   140006e80:	js     0x140006ec3
   140006e82:	mov    r8,QWORD PTR [rsi+0x8]
   140006e86:	mov    rdx,QWORD PTR [rsi]
   140006e89:	mov    rcx,QWORD PTR [rbx+0x30]
   140006e8d:	mov    r8,QWORD PTR [r8]
   140006e90:	mov    rdx,QWORD PTR [rdx]
   140006e93:	call   0x1400097e0
   140006e98:	mov    r8d,eax
   140006e9b:	test   eax,eax
   140006e9d:	js     0x140006eb5
   140006e9f:	mov    rax,QWORD PTR [rsi+0x8]
   140006ea3:	movzx  edi,dil
   140006ea7:	mov    rcx,QWORD PTR [rax]
   140006eaa:	mov    eax,0x1
   140006eaf:	cmp    BYTE PTR [rcx],0x0
   140006eb2:	cmovne edi,eax
   140006eb5:	test   r8d,r8d
   140006eb8:	js     0x140006ec3
   140006eba:	mov    rbx,QWORD PTR [rbx+0x38]
   140006ebe:	jmp    0x140006e63
   140006ec0:	xor    r8d,r8d
   140006ec3:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ec8:	mov    eax,r8d
   140006ecb:	mov    rsi,QWORD PTR [rsp+0x38]
   140006ed0:	add    rsp,0x20
   140006ed4:	pop    rdi
   140006ed5:	ret    
   140006ed6:	int3   
   140006ed7:	int3   
   140006ed8:	int3   
   140006ed9:	int3   
   140006eda:	int3   
   140006edb:	int3   
   140006edc:	mov    QWORD PTR [rsp+0x8],rbx
   140006ee1:	mov    QWORD PTR [rsp+0x10],rsi
   140006ee6:	push   rdi
   140006ee7:	sub    rsp,0x20
   140006eeb:	and    QWORD PTR [rcx],0x0
   140006eef:	mov    rsi,rdx
   140006ef2:	mov    rdi,rcx
   140006ef5:	lea    rdx,[rip+0x6b64]        # 0x14000da60
   140006efc:	mov    ecx,0x30
   140006f01:	call   0x140004a7c
   140006f06:	mov    rbx,rax
   140006f09:	test   rax,rax
   140006f0c:	je     0x140006f4f
   140006f0e:	mov    rsi,QWORD PTR [rsi]
   140006f11:	mov    rcx,rax
   140006f14:	call   0x140007658
   140006f19:	lea    rax,[rip+0x7580]        # 0x14000e4a0
   140006f20:	mov    QWORD PTR [rbx],rax
   140006f23:	lea    rax,[rip+0x74fe]        # 0x14000e428
   140006f2a:	mov    QWORD PTR [rbx+0x8],rax
   140006f2e:	mov    QWORD PTR [rbx+0x20],rsi
   140006f32:	test   rsi,rsi
   140006f35:	je     0x140006f3b
   140006f37:	lock inc DWORD PTR [rsi+0x8]
   140006f3b:	and    DWORD PTR [rbx+0x28],0x0
   140006f3f:	mov    rcx,QWORD PTR [rdi]
   140006f42:	test   rcx,rcx
   140006f45:	je     0x140006f4c
   140006f47:	call   0x14000aa10
   140006f4c:	mov    QWORD PTR [rdi],rbx
   140006f4f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f54:	mov    rax,rdi
   140006f57:	mov    rsi,QWORD PTR [rsp+0x38]
   140006f5c:	add    rsp,0x20
   140006f60:	pop    rdi
   140006f61:	ret    
   140006f62:	int3   
   140006f63:	int3   
   140006f64:	int3   
   140006f65:	int3   
   140006f66:	int3   
   140006f67:	int3   
   140006f68:	mov    QWORD PTR [rsp+0x8],rbx
   140006f6d:	push   rdi
   140006f6e:	sub    rsp,0x20
   140006f72:	and    QWORD PTR [rcx],0x0
   140006f76:	lea    rdx,[rip+0x6ae3]        # 0x14000da60
   140006f7d:	mov    rdi,rcx
   140006f80:	mov    ecx,0x38
   140006f85:	call   0x140004a7c
   140006f8a:	mov    rbx,rax
   140006f8d:	test   rax,rax
   140006f90:	je     0x140006fcf
   140006f92:	mov    rcx,rax
   140006f95:	call   0x1400076c4
   140006f9a:	lea    rax,[rip+0x74a7]        # 0x14000e448
   140006fa1:	mov    QWORD PTR [rbx],rax
   140006fa4:	lea    rax,[rip+0x754d]        # 0x14000e4f8
   140006fab:	mov    QWORD PTR [rbx+0x8],rax
   140006faf:	lea    rax,[rip+0x7732]        # 0x14000e6e8
   140006fb6:	mov    QWORD PTR [rbx+0x10],rax
   140006fba:	and    QWORD PTR [rbx+0x28],0x0
   140006fbf:	mov    rcx,QWORD PTR [rdi]
   140006fc2:	test   rcx,rcx
   140006fc5:	je     0x140006fcc
   140006fc7:	call   0x14000ab30
   140006fcc:	mov    QWORD PTR [rdi],rbx
   140006fcf:	mov    rax,rdi
   140006fd2:	mov    rbx,QWORD PTR [rsp+0x30]
   140006fd7:	add    rsp,0x20
   140006fdb:	pop    rdi
   140006fdc:	ret    
   140006fdd:	int3   
   140006fde:	int3   
   140006fdf:	int3   
   140006fe0:	int3   
   140006fe1:	int3   
   140006fe2:	int3   
   140006fe3:	int3   
   140006fe4:	mov    QWORD PTR [rsp+0x8],rbx
   140006fe9:	push   rdi
   140006fea:	sub    rsp,0x20
   140006fee:	and    QWORD PTR [rcx],0x0
   140006ff2:	mov    rdi,rdx
   140006ff5:	mov    rbx,rcx
   140006ff8:	lea    rdx,[rip+0x6a61]        # 0x14000da60
   140006fff:	mov    ecx,0x40
   140007004:	call   0x140004a7c
   140007009:	test   rax,rax
   14000700c:	je     0x14000702c
   14000700e:	mov    rdx,QWORD PTR [rdi]
   140007011:	mov    rcx,rax
   140007014:	call   0x1400078f0
   140007019:	mov    rcx,QWORD PTR [rbx]
   14000701c:	mov    rdi,rax
   14000701f:	test   rcx,rcx
   140007022:	je     0x140007029
   140007024:	call   0x14000aa10
   140007029:	mov    QWORD PTR [rbx],rdi
   14000702c:	mov    rax,rbx
   14000702f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007034:	add    rsp,0x20
   140007038:	pop    rdi
   140007039:	ret    
   14000703a:	int3   
   14000703b:	int3   
   14000703c:	int3   
   14000703d:	int3   
   14000703e:	int3   
   14000703f:	int3   
   140007040:	mov    QWORD PTR [rsp+0x8],rbx
   140007045:	mov    QWORD PTR [rsp+0x10],rsi
   14000704a:	push   rdi
   14000704b:	sub    rsp,0x50
   14000704f:	mov    rax,QWORD PTR [rcx]
   140007052:	mov    rdi,r8
   140007055:	mov    eax,DWORD PTR [r9]
   140007058:	mov    rsi,rdx
   14000705b:	mov    rcx,QWORD PTR [rcx]
   14000705e:	mov    QWORD PTR [rsp+0x28],r9
   140007063:	mov    r9,r8
   140007066:	xor    r8d,r8d
   140007069:	mov    DWORD PTR [rsp+0x20],eax
   14000706d:	call   QWORD PTR [rip+0x63e5]        # 0x14000d458
   140007073:	mov    ecx,eax
   140007075:	call   QWORD PTR [rip+0x63e5]        # 0x14000d460
   14000707b:	mov    ebx,eax
   14000707d:	test   eax,eax
   14000707f:	jle    0x14000708a
   140007081:	movzx  ebx,ax
   140007084:	or     ebx,0x80070000
   14000708a:	test   ebx,ebx
   14000708c:	js     0x1400070cb
   14000708e:	movzx  eax,WORD PTR [rdi+0x8]
   140007092:	lea    rcx,[rsp+0x40]
   140007097:	mov    WORD PTR [rsp+0x30],ax
   14000709c:	xor    r8d,r8d
   14000709f:	mov    WORD PTR [rsp+0x32],ax
   1400070a4:	mov    rdx,rsi
   1400070a7:	lea    rax,[rdi+0xc]
   1400070ab:	mov    QWORD PTR [rsp+0x38],rax
   1400070b0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400070b5:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400070bb:	call   QWORD PTR [rip+0x63b7]        # 0x14000d478
   1400070c1:	test   al,al
   1400070c3:	mov    ecx,0x80070002
   1400070c8:	cmove  ebx,ecx
   1400070cb:	mov    rsi,QWORD PTR [rsp+0x68]
   1400070d0:	mov    eax,ebx
   1400070d2:	mov    rbx,QWORD PTR [rsp+0x60]
   1400070d7:	add    rsp,0x50
   1400070db:	pop    rdi
   1400070dc:	ret    
   1400070dd:	int3   
   1400070de:	int3   
   1400070df:	int3   
   1400070e0:	int3   
   1400070e1:	int3   
   1400070e2:	int3   
   1400070e3:	int3   
   1400070e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400070e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400070ee:	push   rdi
   1400070ef:	sub    rsp,0x30
   1400070f3:	mov    rax,rdx
   1400070f6:	mov    rsi,rcx
   1400070f9:	mov    rcx,rax
   1400070fc:	xor    edx,edx
   1400070fe:	mov    rbx,r9
   140007101:	mov    rdi,r8
   140007104:	call   QWORD PTR [rip+0x61ae]        # 0x14000d2b8
   14000710a:	mov    rdx,rax
   14000710d:	lea    rcx,[rsp+0x20]
   140007112:	call   QWORD PTR [rip+0x6368]        # 0x14000d480
   140007118:	mov    r9,rbx
   14000711b:	lea    rdx,[rsp+0x20]
   140007120:	mov    r8,rdi
   140007123:	mov    rcx,rsi
   140007126:	call   0x140007040
   14000712b:	mov    rbx,QWORD PTR [rsp+0x40]
   140007130:	mov    rsi,QWORD PTR [rsp+0x48]
   140007135:	add    rsp,0x30
   140007139:	pop    rdi
   14000713a:	ret    
   14000713b:	int3   
   14000713c:	int3   
   14000713d:	int3   
   14000713e:	int3   
   14000713f:	int3   
   140007140:	int3   
   140007141:	int3   
   140007142:	int3   
   140007143:	int3   
   140007144:	mov    r11,rsp
   140007147:	mov    QWORD PTR [r11+0x10],rbx
   14000714b:	mov    DWORD PTR [r11+0x18],r8d
   14000714f:	mov    QWORD PTR [r11+0x8],rcx
   140007153:	push   rbp
   140007154:	push   rsi
   140007155:	push   rdi
   140007156:	push   r12
   140007158:	push   r13
   14000715a:	push   r14
   14000715c:	push   r15
   14000715e:	mov    rbp,rsp
   140007161:	sub    rsp,0x60
   140007165:	mov    r12,QWORD PTR [rbp+0x60]
   140007169:	lea    r8,[rbp+0x58]
   14000716d:	mov    rax,rcx
   140007170:	mov    DWORD PTR [rbp+0x60],0x2
   140007177:	xor    ebx,ebx
   140007179:	lea    rcx,[rbp+0x60]
   14000717d:	mov    QWORD PTR [r11-0x78],rcx
   140007181:	mov    r15,r9
   140007184:	mov    QWORD PTR [r9],rbx
   140007187:	mov    rcx,rax
   14000718a:	lea    r9,[rbp+0x50]
   14000718e:	mov    BYTE PTR [r12],bl
   140007192:	mov    r13,rdx
   140007195:	mov    DWORD PTR [rbp+0x58],ebx
   140007198:	mov    r14b,0x1
   14000719b:	call   0x14000640c
   1400071a0:	mov    edi,eax
   1400071a2:	cmp    eax,0x8007007a
   1400071a7:	je     0x1400071b0
   1400071a9:	cmp    eax,0x800700ea
   1400071ae:	jne    0x1400071b5
   1400071b0:	mov    r14b,bl
   1400071b3:	mov    edi,ebx
   1400071b5:	test   edi,edi
   1400071b7:	js     0x1400072d4
   1400071bd:	cmp    DWORD PTR [rbp+0x58],0x1
   1400071c1:	jne    0x1400072cf
   1400071c7:	mov    esi,DWORD PTR [rbp+0x60]
   1400071ca:	test   esi,esi
   1400071cc:	je     0x1400072cf
   1400071d2:	test   sil,0x1
   1400071d6:	jne    0x1400072cf
   1400071dc:	shr    esi,1
   1400071de:	sub    esi,0x1
   1400071e1:	jne    0x1400071fe
   1400071e3:	test   r14b,r14b
   1400071e6:	je     0x1400072cf
   1400071ec:	cmp    WORD PTR [rbp+0x50],bx
   1400071f0:	jne    0x1400072cf
   1400071f6:	mov    QWORD PTR [r15],rbx
   1400071f9:	jmp    0x1400072d4
   1400071fe:	lea    r8,[rbp-0x8]
   140007202:	mov    QWORD PTR [rbp-0x18],rbx
   140007206:	lea    rdx,[rbp-0x18]
   14000720a:	mov    QWORD PTR [rbp-0x8],rbx
   14000720e:	mov    ecx,esi
   140007210:	call   QWORD PTR [rip+0x609a]        # 0x14000d2b0
   140007216:	mov    edi,eax
   140007218:	test   eax,eax
   14000721a:	js     0x1400072d4
   140007220:	test   r14b,r14b
   140007223:	je     0x140007247
   140007225:	mov    r8d,DWORD PTR [rbp+0x60]
   140007229:	lea    rdx,[rbp+0x50]
   14000722d:	mov    rcx,QWORD PTR [rbp-0x18]
   140007231:	call   0x140004b4a
   140007236:	mov    rax,QWORD PTR [rbp-0x18]
   14000723a:	cmp    WORD PTR [rax+rsi*2],bx
   14000723e:	je     0x14000726d
   140007240:	mov    edi,0x8007000d
   140007245:	jmp    0x14000726d
   140007247:	mov    rcx,QWORD PTR [rbp+0x40]
   14000724b:	lea    rax,[rbp+0x60]
   14000724f:	mov    QWORD PTR [rsp+0x30],rax
   140007254:	mov    r9d,0x2
   14000725a:	mov    rax,QWORD PTR [rbp-0x18]
   14000725e:	mov    r8,r13
   140007261:	mov    QWORD PTR [rsp+0x28],rax
   140007266:	call   0x140006448
   14000726b:	mov    edi,eax
   14000726d:	mov    rcx,QWORD PTR [rbp-0x8]
   140007271:	test   edi,edi
   140007273:	js     0x1400072b9
   140007275:	lea    rdx,[rbp-0x10]
   140007279:	mov    QWORD PTR [rbp-0x10],rbx
   14000727d:	call   QWORD PTR [rip+0x6075]        # 0x14000d2f8
   140007283:	mov    rcx,QWORD PTR [rbp-0x10]
   140007287:	lea    rdx,[rbp-0x20]
   14000728b:	mov    DWORD PTR [rbp-0x20],ebx
   14000728e:	call   QWORD PTR [rip+0x6054]        # 0x14000d2e8
   140007294:	cmp    DWORD PTR [rbp-0x20],ebx
   140007297:	jne    0x1400072ad
   140007299:	cmp    DWORD PTR [rbp+0x58],0x2
   14000729d:	mov    rax,QWORD PTR [rbp-0x10]
   1400072a1:	sete   bl
   1400072a4:	mov    QWORD PTR [r15],rax
   1400072a7:	mov    BYTE PTR [r12],bl
   1400072ab:	jmp    0x1400072d4
   1400072ad:	mov    rcx,QWORD PTR [rbp-0x10]
   1400072b1:	call   QWORD PTR [rip+0x6021]        # 0x14000d2d8
   1400072b7:	jmp    0x1400072cf
   1400072b9:	call   QWORD PTR [rip+0x6011]        # 0x14000d2d0
   1400072bf:	cmp    edi,0x8007007a
   1400072c5:	je     0x1400072cf
   1400072c7:	cmp    edi,0x800700ea
   1400072cd:	jne    0x1400072d4
   1400072cf:	mov    edi,0x8007000d
   1400072d4:	mov    eax,edi
   1400072d6:	mov    rbx,QWORD PTR [rsp+0xa8]
   1400072de:	add    rsp,0x60
   1400072e2:	pop    r15
   1400072e4:	pop    r14
   1400072e6:	pop    r13
   1400072e8:	pop    r12
   1400072ea:	pop    rdi
   1400072eb:	pop    rsi
   1400072ec:	pop    rbp
   1400072ed:	ret    
   1400072ee:	int3   
   1400072ef:	int3   
   1400072f0:	int3   
   1400072f1:	int3   
   1400072f2:	int3   
   1400072f3:	int3   
   1400072f4:	mov    QWORD PTR [rsp+0x18],rbx
   1400072f9:	push   rbp
   1400072fa:	push   rsi
   1400072fb:	push   rdi
   1400072fc:	push   r12
   1400072fe:	push   r13
   140007300:	push   r14
   140007302:	push   r15
   140007304:	lea    rbp,[rsp-0x1f]
   140007309:	sub    rsp,0xd0
   140007310:	mov    rax,QWORD PTR [rip+0xacf1]        # 0x140012008
   140007317:	xor    rax,rsp
   14000731a:	mov    QWORD PTR [rbp+0xf],rax
   14000731e:	mov    r12,QWORD PTR [rbp+0x7f]
   140007322:	lea    r8,[rbp-0x6d]
   140007326:	mov    r13,rcx
   140007329:	mov    QWORD PTR [rbp-0x69],rdx
   14000732d:	xor    ebx,ebx
   14000732f:	mov    DWORD PTR [rbp-0x71],0x50
   140007336:	mov    QWORD PTR [r9],rbx
   140007339:	lea    rcx,[rbp-0x71]
   14000733d:	mov    QWORD PTR [rsp+0x20],rcx
   140007342:	mov    r15,r9
   140007345:	mov    rcx,r13
   140007348:	mov    BYTE PTR [r12],bl
   14000734c:	lea    r9,[rbp-0x41]
   140007350:	mov    DWORD PTR [rbp-0x6d],ebx
   140007353:	mov    r14b,0x1
   140007356:	call   0x14000640c
   14000735b:	mov    edi,eax
   14000735d:	cmp    eax,0x8007007a
   140007362:	je     0x14000736b
   140007364:	cmp    eax,0x800700ea
   140007369:	jne    0x140007370
   14000736b:	mov    r14b,bl
   14000736e:	mov    edi,ebx
   140007370:	test   edi,edi
   140007372:	js     0x14000748f
   140007378:	cmp    DWORD PTR [rbp-0x6d],0x1
   14000737c:	jne    0x14000748a
   140007382:	mov    esi,DWORD PTR [rbp-0x71]
   140007385:	test   esi,esi
   140007387:	je     0x14000748a
   14000738d:	test   sil,0x1
   140007391:	jne    0x14000748a
   140007397:	shr    esi,1
   140007399:	sub    esi,0x1
   14000739c:	jne    0x1400073b9
   14000739e:	test   r14b,r14b
   1400073a1:	je     0x14000748a
   1400073a7:	cmp    WORD PTR [rbp-0x41],bx
   1400073ab:	jne    0x14000748a
   1400073b1:	mov    QWORD PTR [r15],rbx
   1400073b4:	jmp    0x14000748f
   1400073b9:	lea    r8,[rbp-0x51]
   1400073bd:	mov    QWORD PTR [rbp-0x59],rbx
   1400073c1:	lea    rdx,[rbp-0x59]
   1400073c5:	mov    QWORD PTR [rbp-0x51],rbx
   1400073c9:	mov    ecx,esi
   1400073cb:	call   QWORD PTR [rip+0x5edf]        # 0x14000d2b0
   1400073d1:	mov    edi,eax
   1400073d3:	test   eax,eax
   1400073d5:	js     0x14000748f
   1400073db:	test   r14b,r14b
   1400073de:	je     0x140007402
   1400073e0:	mov    r8d,DWORD PTR [rbp-0x71]
   1400073e4:	lea    rdx,[rbp-0x41]
   1400073e8:	mov    rcx,QWORD PTR [rbp-0x59]
   1400073ec:	call   0x140004b4a
   1400073f1:	mov    rax,QWORD PTR [rbp-0x59]
   1400073f5:	cmp    WORD PTR [rax+rsi*2],bx
   1400073f9:	je     0x140007428
   1400073fb:	mov    edi,0x8007000d
   140007400:	jmp    0x140007428
   140007402:	mov    r8,QWORD PTR [rbp-0x69]
   140007406:	lea    rax,[rbp-0x71]
   14000740a:	mov    QWORD PTR [rsp+0x30],rax
   14000740f:	mov    r9d,0x2
   140007415:	mov    rax,QWORD PTR [rbp-0x59]
   140007419:	mov    rcx,r13
   14000741c:	mov    QWORD PTR [rsp+0x28],rax
   140007421:	call   0x140006448
   140007426:	mov    edi,eax
   140007428:	mov    rcx,QWORD PTR [rbp-0x51]
   14000742c:	test   edi,edi
   14000742e:	js     0x140007474
   140007430:	lea    rdx,[rbp-0x69]
   140007434:	mov    QWORD PTR [rbp-0x69],rbx
   140007438:	call   QWORD PTR [rip+0x5eba]        # 0x14000d2f8
   14000743e:	mov    rcx,QWORD PTR [rbp-0x69]
   140007442:	lea    rdx,[rbp-0x61]
   140007446:	mov    DWORD PTR [rbp-0x61],ebx
   140007449:	call   QWORD PTR [rip+0x5e99]        # 0x14000d2e8
   14000744f:	cmp    DWORD PTR [rbp-0x61],ebx
   140007452:	jne    0x140007468
   140007454:	cmp    DWORD PTR [rbp-0x6d],0x2
   140007458:	mov    rax,QWORD PTR [rbp-0x69]
   14000745c:	sete   bl
   14000745f:	mov    QWORD PTR [r15],rax
   140007462:	mov    BYTE PTR [r12],bl
   140007466:	jmp    0x14000748f
   140007468:	mov    rcx,QWORD PTR [rbp-0x69]
   14000746c:	call   QWORD PTR [rip+0x5e66]        # 0x14000d2d8
   140007472:	jmp    0x14000748a
   140007474:	call   QWORD PTR [rip+0x5e56]        # 0x14000d2d0
   14000747a:	cmp    edi,0x8007007a
   140007480:	je     0x14000748a
   140007482:	cmp    edi,0x800700ea
   140007488:	jne    0x14000748f
   14000748a:	mov    edi,0x8007000d
   14000748f:	mov    eax,edi
   140007491:	mov    rcx,QWORD PTR [rbp+0xf]
   140007495:	xor    rcx,rsp
   140007498:	call   0x140004450
   14000749d:	mov    rbx,QWORD PTR [rsp+0x120]
   1400074a5:	add    rsp,0xd0
   1400074ac:	pop    r15
   1400074ae:	pop    r14
   1400074b0:	pop    r13
   1400074b2:	pop    r12
   1400074b4:	pop    rdi
   1400074b5:	pop    rsi
   1400074b6:	pop    rbp
   1400074b7:	ret    
   1400074b8:	int3   
   1400074b9:	int3   
   1400074ba:	int3   
   1400074bb:	int3   
   1400074bc:	int3   
   1400074bd:	int3   
   1400074be:	int3   
   1400074bf:	int3   
   1400074c0:	test   edx,edx
   1400074c2:	je     0x140007517
   1400074c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400074c9:	mov    QWORD PTR [rsp+0x10],rbp
   1400074ce:	mov    QWORD PTR [rsp+0x18],rsi
   1400074d3:	push   rdi
   1400074d4:	sub    rsp,0x20
   1400074d8:	mov    rsi,rcx
   1400074db:	mov    ebp,edx
   1400074dd:	mov    rdi,QWORD PTR [rsi]
   1400074e0:	mov    rax,QWORD PTR [rdi]
   1400074e3:	mov    rbx,QWORD PTR [rax+0x10]
   1400074e7:	mov    rcx,rbx
   1400074ea:	call   QWORD PTR [rip+0x5fc8]        # 0x14000d4b8
   1400074f0:	mov    rcx,rdi
   1400074f3:	call   rbx
   1400074f5:	and    QWORD PTR [rsi],0x0
   1400074f9:	lea    rsi,[rsi+0x8]
   1400074fd:	sub    rbp,0x1
   140007501:	jne    0x1400074dd
   140007503:	mov    rbx,QWORD PTR [rsp+0x30]
   140007508:	mov    rbp,QWORD PTR [rsp+0x38]
   14000750d:	mov    rsi,QWORD PTR [rsp+0x40]
   140007512:	add    rsp,0x20
   140007516:	pop    rdi
   140007517:	ret    
   140007518:	int3   
   140007519:	int3   
   14000751a:	int3   
   14000751b:	int3   
   14000751c:	int3   
   14000751d:	int3   
   14000751e:	int3   
   14000751f:	int3   
   140007520:	mov    QWORD PTR [rsp+0x8],rbx
   140007525:	mov    QWORD PTR [rsp+0x18],rbp
   14000752a:	push   rsi
   14000752b:	push   rdi
   14000752c:	push   r12
   14000752e:	push   r14
   140007530:	push   r15
   140007532:	sub    rsp,0x20
   140007536:	mov    r12,r8
   140007539:	mov    ebp,edx
   14000753b:	mov    r8d,edx
   14000753e:	mov    r14,rcx
   140007541:	shl    r8,0x3
   140007545:	xor    edx,edx
   140007547:	mov    rcx,r12
   14000754a:	mov    BYTE PTR [rsp+0x58],0x0
   14000754f:	mov    r15,r9
   140007552:	xor    esi,esi
   140007554:	call   0x140004b56
   140007559:	and    DWORD PTR [r15],esi
   14000755c:	mov    rax,QWORD PTR [r14]
   14000755f:	mov    rbx,QWORD PTR [rax+0x38]
   140007563:	mov    rcx,rbx
   140007566:	call   QWORD PTR [rip+0x5f4c]        # 0x14000d4b8
   14000756c:	lea    rdx,[rsp+0x58]
   140007571:	mov    rcx,r14
   140007574:	call   rbx
   140007576:	mov    ebx,eax
   140007578:	test   eax,eax
   14000757a:	js     0x1400075d4
   14000757c:	cmp    BYTE PTR [rsp+0x58],0x0
   140007581:	je     0x1400075cb
   140007583:	cmp    esi,ebp
   140007585:	jae    0x1400075cb
   140007587:	mov    rcx,QWORD PTR [r14]
   14000758a:	lea    rbx,[r12+rsi*8]
   14000758e:	mov    rdi,QWORD PTR [rcx+0x30]
   140007592:	mov    rcx,rdi
   140007595:	call   QWORD PTR [rip+0x5f1d]        # 0x14000d4b8
   14000759b:	mov    rdx,rbx
   14000759e:	mov    rcx,r14
   1400075a1:	call   rdi
   1400075a3:	mov    ebx,eax
   1400075a5:	test   eax,eax
   1400075a7:	js     0x1400075d4
   1400075a9:	mov    rax,QWORD PTR [r14]
   1400075ac:	inc    esi
   1400075ae:	mov    rbx,QWORD PTR [rax+0x40]
   1400075b2:	mov    rcx,rbx
   1400075b5:	call   QWORD PTR [rip+0x5efd]        # 0x14000d4b8
   1400075bb:	lea    rdx,[rsp+0x58]
   1400075c0:	mov    rcx,r14
   1400075c3:	call   rbx
   1400075c5:	mov    ebx,eax
   1400075c7:	test   eax,eax
   1400075c9:	jns    0x14000757c
   1400075cb:	test   ebx,ebx
   1400075cd:	js     0x1400075d4
   1400075cf:	mov    DWORD PTR [r15],esi
   1400075d2:	jmp    0x1400075df
   1400075d4:	mov    edx,DWORD PTR [r15]
   1400075d7:	mov    rcx,r12
   1400075da:	call   0x1400074c0
   1400075df:	mov    rbp,QWORD PTR [rsp+0x60]
   1400075e4:	mov    eax,ebx
   1400075e6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400075eb:	add    rsp,0x20
   1400075ef:	pop    r15
   1400075f1:	pop    r14
   1400075f3:	pop    r12
   1400075f5:	pop    rdi
   1400075f6:	pop    rsi
   1400075f7:	ret    
   1400075f8:	int3   
   1400075f9:	int3   
   1400075fa:	int3   
   1400075fb:	int3   
   1400075fc:	int3   
   1400075fd:	int3   
   1400075fe:	int3   
   1400075ff:	int3   
   140007600:	rex push rbx
   140007602:	sub    rsp,0x20
   140007606:	mov    rbx,rcx
   140007609:	call   0x1400076c4
   14000760e:	lea    rax,[rip+0x705b]        # 0x14000e670
   140007615:	mov    QWORD PTR [rbx],rax
   140007618:	lea    rcx,[rbx+0x28]
   14000761c:	lea    rax,[rip+0x6ed5]        # 0x14000e4f8
   140007623:	mov    QWORD PTR [rbx+0x8],rax
   140007627:	lea    rax,[rip+0x6f42]        # 0x14000e570
   14000762e:	mov    QWORD PTR [rbx+0x10],rax
   140007632:	call   QWORD PTR [rip+0x5bc0]        # 0x14000d1f8
   140007638:	xor    eax,eax
   14000763a:	mov    QWORD PTR [rbx+0x30],rax
   14000763e:	mov    QWORD PTR [rbx+0x38],rax
   140007642:	mov    QWORD PTR [rbx+0x40],rax
   140007646:	mov    BYTE PTR [rbx+0x4d],al
   140007649:	mov    rax,rbx
   14000764c:	add    rsp,0x20
   140007650:	pop    rbx
   140007651:	ret    
   140007652:	int3   
   140007653:	int3   
   140007654:	int3   
   140007655:	int3   
   140007656:	int3   
   140007657:	int3   
   140007658:	mov    QWORD PTR [rsp+0x8],rbx
   14000765d:	mov    QWORD PTR [rsp+0x10],rsi
   140007662:	push   rdi
   140007663:	sub    rsp,0x20
   140007667:	mov    rsi,QWORD PTR [rip+0xb71a]        # 0x140012d88
   14000766e:	lea    rax,[rip+0x7203]        # 0x14000e878
   140007675:	mov    QWORD PTR [rcx],rax
   140007678:	lea    rax,[rip+0x7049]        # 0x14000e6c8
   14000767f:	mov    QWORD PTR [rcx+0x8],rax
   140007683:	mov    rdi,rcx
   140007686:	mov    QWORD PTR [rcx+0x18],0x1
   14000768e:	test   rsi,rsi
   140007691:	je     0x1400076a8
   140007693:	mov    rax,QWORD PTR [rsi]
   140007696:	mov    rbx,QWORD PTR [rax+0x8]
   14000769a:	mov    rcx,rbx
   14000769d:	call   QWORD PTR [rip+0x5e15]        # 0x14000d4b8
   1400076a3:	mov    rcx,rsi
   1400076a6:	call   rbx
   1400076a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400076ad:	mov    rax,rdi
   1400076b0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400076b5:	add    rsp,0x20
   1400076b9:	pop    rdi
   1400076ba:	ret    
   1400076bb:	int3   
   1400076bc:	int3   
   1400076bd:	int3   
   1400076be:	int3   
   1400076bf:	int3   
   1400076c0:	int3   
   1400076c1:	int3   
   1400076c2:	int3   
   1400076c3:	int3   
   1400076c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400076c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400076ce:	push   rdi
   1400076cf:	sub    rsp,0x20
   1400076d3:	mov    rsi,QWORD PTR [rip+0xb6ae]        # 0x140012d88
   1400076da:	lea    rax,[rip+0x703f]        # 0x14000e720
   1400076e1:	mov    QWORD PTR [rcx],rax
   1400076e4:	lea    rax,[rip+0x7355]        # 0x14000ea40
   1400076eb:	mov    QWORD PTR [rcx+0x8],rax
   1400076ef:	lea    rax,[rip+0x72aa]        # 0x14000e9a0
   1400076f6:	mov    QWORD PTR [rcx+0x10],rax
   1400076fa:	mov    rdi,rcx
   1400076fd:	mov    QWORD PTR [rcx+0x20],0x1
   140007705:	test   rsi,rsi
   140007708:	je     0x14000771f
   14000770a:	mov    rax,QWORD PTR [rsi]
   14000770d:	mov    rbx,QWORD PTR [rax+0x8]
   140007711:	mov    rcx,rbx
   140007714:	call   QWORD PTR [rip+0x5d9e]        # 0x14000d4b8
   14000771a:	mov    rcx,rsi
   14000771d:	call   rbx
   14000771f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007724:	mov    rax,rdi
   140007727:	mov    rsi,QWORD PTR [rsp+0x38]
   14000772c:	add    rsp,0x20
   140007730:	pop    rdi
   140007731:	ret    
   140007732:	int3   
   140007733:	int3   
   140007734:	int3   
   140007735:	int3   
   140007736:	int3   
   140007737:	int3   
   140007738:	mov    QWORD PTR [rsp+0x8],rbx
   14000773d:	mov    QWORD PTR [rsp+0x10],rsi
   140007742:	push   rdi
   140007743:	sub    rsp,0x20
   140007747:	mov    rsi,QWORD PTR [rip+0xb63a]        # 0x140012d88
   14000774e:	lea    rax,[rip+0x71a3]        # 0x14000e8f8
   140007755:	mov    QWORD PTR [rcx],rax
   140007758:	lea    rax,[rip+0x7041]        # 0x14000e7a0
   14000775f:	mov    QWORD PTR [rcx+0x8],rax
   140007763:	mov    rdi,rcx
   140007766:	mov    QWORD PTR [rcx+0x18],0x1
   14000776e:	test   rsi,rsi
   140007771:	je     0x140007788
   140007773:	mov    rax,QWORD PTR [rsi]
   140007776:	mov    rbx,QWORD PTR [rax+0x8]
   14000777a:	mov    rcx,rbx
   14000777d:	call   QWORD PTR [rip+0x5d35]        # 0x14000d4b8
   140007783:	mov    rcx,rsi
   140007786:	call   rbx
   140007788:	mov    rbx,QWORD PTR [rsp+0x30]
   14000778d:	lea    rax,[rip+0x7244]        # 0x14000e9d8
   140007794:	mov    rsi,QWORD PTR [rsp+0x38]
   140007799:	mov    QWORD PTR [rdi],rax
   14000779c:	lea    rax,[rip+0x727d]        # 0x14000ea20
   1400077a3:	mov    QWORD PTR [rdi+0x8],rax
   1400077a7:	mov    rax,rdi
   1400077aa:	and    QWORD PTR [rdi+0x20],0x0
   1400077af:	and    QWORD PTR [rdi+0x28],0x0
   1400077b4:	add    rsp,0x20
   1400077b8:	pop    rdi
   1400077b9:	ret    
   1400077ba:	int3   
   1400077bb:	int3   
   1400077bc:	int3   
   1400077bd:	int3   
   1400077be:	int3   
   1400077bf:	int3   
   1400077c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400077c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400077ca:	push   rdi
   1400077cb:	sub    rsp,0x20
   1400077cf:	mov    rsi,rdx
   1400077d2:	mov    rdi,rcx
   1400077d5:	call   0x140007658
   1400077da:	lea    rax,[rip+0x6d37]        # 0x14000e518
   1400077e1:	mov    QWORD PTR [rdi],rax
   1400077e4:	lea    rax,[rip+0x6edd]        # 0x14000e6c8
   1400077eb:	mov    QWORD PTR [rdi+0x8],rax
   1400077ef:	mov    QWORD PTR [rdi+0x28],rsi
   1400077f3:	test   rsi,rsi
   1400077f6:	je     0x14000780d
   1400077f8:	mov    rax,QWORD PTR [rsi]
   1400077fb:	mov    rbx,QWORD PTR [rax+0x8]
   1400077ff:	mov    rcx,rbx
   140007802:	call   QWORD PTR [rip+0x5cb0]        # 0x14000d4b8
   140007808:	mov    rcx,rsi
   14000780b:	call   rbx
   14000780d:	and    DWORD PTR [rdi+0x30],0x0
   140007811:	lea    rcx,[rdi+0x20]
   140007815:	and    QWORD PTR [rdi+0x38],0x0
   14000781a:	call   QWORD PTR [rip+0x59d8]        # 0x14000d1f8
   140007820:	mov    rbx,QWORD PTR [rsp+0x30]
   140007825:	mov    rax,rdi
   140007828:	mov    rsi,QWORD PTR [rsp+0x38]
   14000782d:	add    rsp,0x20
   140007831:	pop    rdi
   140007832:	ret    
   140007833:	int3   
   140007834:	int3   
   140007835:	int3   
   140007836:	int3   
   140007837:	int3   
   140007838:	int3   
   140007839:	int3   
   14000783a:	int3   
   14000783b:	int3   
   14000783c:	mov    QWORD PTR [rsp+0x10],rbx
   140007841:	mov    QWORD PTR [rsp+0x18],rsi
   140007846:	push   rdi
   140007847:	sub    rsp,0x20
   14000784b:	mov    rsi,rdx
   14000784e:	mov    rdi,rcx
   140007851:	test   rdx,rdx
   140007854:	jne    0x14000785e
   140007856:	and    QWORD PTR [rcx],rdx
   140007859:	and    DWORD PTR [rcx+0x8],edx
   14000785c:	jmp    0x1400078d7
   14000785e:	mov    rax,QWORD PTR [rdx]
   140007861:	mov    rbx,QWORD PTR [rax]
   140007864:	mov    rcx,rbx
   140007867:	call   QWORD PTR [rip+0x5c4b]        # 0x14000d4b8
   14000786d:	lea    r8,[rsp+0x30]
   140007872:	mov    rcx,rsi
   140007875:	lea    rdx,[rip+0x66dc]        # 0x14000df58
   14000787c:	call   rbx
   14000787e:	test   eax,eax
   140007880:	js     0x1400078a8
   140007882:	mov    rax,QWORD PTR [rsp+0x30]
   140007887:	mov    QWORD PTR [rdi],rax
   14000788a:	mov    rax,QWORD PTR [rsi]
   14000788d:	mov    rbx,QWORD PTR [rax+0x10]
   140007891:	mov    rcx,rbx
   140007894:	call   QWORD PTR [rip+0x5c1e]        # 0x14000d4b8
   14000789a:	mov    rcx,rsi
   14000789d:	call   rbx
   14000789f:	mov    DWORD PTR [rdi+0x8],0x7
   1400078a6:	jmp    0x1400078d7
   1400078a8:	cmp    eax,0x80004002
   1400078ad:	jne    0x1400078bb
   1400078af:	mov    QWORD PTR [rdi],rsi
   1400078b2:	mov    DWORD PTR [rdi+0x8],0x3
   1400078b9:	jmp    0x1400078d7
   1400078bb:	and    QWORD PTR [rdi],0x0
   1400078bf:	mov    DWORD PTR [rdi+0x8],eax
   1400078c2:	mov    rax,QWORD PTR [rsi]
   1400078c5:	mov    rbx,QWORD PTR [rax+0x10]
   1400078c9:	mov    rcx,rbx
   1400078cc:	call   QWORD PTR [rip+0x5be6]        # 0x14000d4b8
   1400078d2:	mov    rcx,rsi
   1400078d5:	call   rbx
   1400078d7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400078dc:	mov    rax,rdi
   1400078df:	mov    rsi,QWORD PTR [rsp+0x40]
   1400078e4:	add    rsp,0x20
   1400078e8:	pop    rdi
   1400078e9:	ret    
   1400078ea:	int3   
   1400078eb:	int3   
   1400078ec:	int3   
   1400078ed:	int3   
   1400078ee:	int3   
   1400078ef:	int3   
   1400078f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400078f5:	push   rdi
   1400078f6:	sub    rsp,0x20
   1400078fa:	mov    rdi,rdx
   1400078fd:	mov    rbx,rcx
   140007900:	call   0x140007658
   140007905:	lea    rax,[rip+0x6f14]        # 0x14000e820
   14000790c:	mov    QWORD PTR [rbx],rax
   14000790f:	lea    rdx,[rsp+0x38]
   140007914:	lea    rax,[rip+0x6b0d]        # 0x14000e428
   14000791b:	lea    rcx,[rsp+0x30]
   140007920:	mov    QWORD PTR [rbx+0x8],rax
   140007924:	call   QWORD PTR [rip+0x56fe]        # 0x14000d028
   14000792a:	mov    ecx,DWORD PTR [rsp+0x30]
   14000792e:	mov    edx,0x1
   140007933:	test   eax,eax
   140007935:	cmovs  ecx,edx
   140007938:	mov    DWORD PTR [rsp+0x30],ecx
   14000793c:	cmp    ecx,0x3
   14000793f:	je     0x14000795a
   140007941:	test   ecx,ecx
   140007943:	je     0x14000795a
   140007945:	and    DWORD PTR [rbx+0x20],0x0
   140007949:	lea    rcx,[rbx+0x28]
   14000794d:	test   rcx,rcx
   140007950:	je     0x140007969
   140007952:	call   QWORD PTR [rip+0x58a0]        # 0x14000d1f8
   140007958:	jmp    0x140007969
   14000795a:	lea    rax,[rbx+0x28]
   14000795e:	mov    DWORD PTR [rbx+0x20],edx
   140007961:	test   rax,rax
   140007964:	je     0x140007969
   140007966:	and    DWORD PTR [rax],0x0
   140007969:	lea    rcx,[rbx+0x30]
   14000796d:	mov    QWORD PTR [rcx],rdi
   140007970:	call   0x140009ccc
   140007975:	and    QWORD PTR [rbx+0x38],0x0
   14000797a:	mov    rax,rbx
   14000797d:	mov    rbx,QWORD PTR [rsp+0x40]
   140007982:	add    rsp,0x20
   140007986:	pop    rdi
   140007987:	ret    
   140007988:	int3   
   140007989:	int3   
   14000798a:	int3   
   14000798b:	int3   
   14000798c:	int3   
   14000798d:	int3   
   14000798e:	int3   
   14000798f:	int3   
   140007990:	mov    QWORD PTR [rsp+0x8],rbx
   140007995:	mov    QWORD PTR [rsp+0x10],rbp
   14000799a:	mov    QWORD PTR [rsp+0x18],rsi
   14000799f:	push   rdi
   1400079a0:	sub    rsp,0x20
   1400079a4:	mov    rsi,QWORD PTR [rip+0xb3dd]        # 0x140012d88
   1400079ab:	lea    rax,[rip+0x6dc6]        # 0x14000e778
   1400079b2:	mov    DWORD PTR [rcx+0xc],0x1
   1400079b9:	mov    rbp,rdx
   1400079bc:	mov    QWORD PTR [rcx],rax
   1400079bf:	mov    rdi,rcx
   1400079c2:	test   rsi,rsi
   1400079c5:	je     0x1400079dc
   1400079c7:	mov    rax,QWORD PTR [rsi]
   1400079ca:	mov    rbx,QWORD PTR [rax+0x8]
   1400079ce:	mov    rcx,rbx
   1400079d1:	call   QWORD PTR [rip+0x5ae1]        # 0x14000d4b8
   1400079d7:	mov    rcx,rsi
   1400079da:	call   rbx
   1400079dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400079e1:	lea    rax,[rip+0x6ee8]        # 0x14000e8d0
   1400079e8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400079ed:	mov    DWORD PTR [rdi+0x10],0x3fffffff
   1400079f4:	mov    QWORD PTR [rdi],rax
   1400079f7:	mov    rax,rdi
   1400079fa:	mov    QWORD PTR [rdi+0x18],rbp
   1400079fe:	mov    rbp,QWORD PTR [rsp+0x38]
   140007a03:	mov    DWORD PTR [rdi+0xc],0x2
   140007a0a:	add    rsp,0x20
   140007a0e:	pop    rdi
   140007a0f:	ret    
   140007a10:	int3   
   140007a11:	int3   
   140007a12:	int3   
   140007a13:	int3   
   140007a14:	int3   
   140007a15:	int3   
   140007a16:	int3   
   140007a17:	int3   
   140007a18:	sub    rsp,0x28
   140007a1c:	mov    rcx,QWORD PTR [rcx+0x18]
   140007a20:	test   rcx,rcx
   140007a23:	jns    0x140007a2d
   140007a25:	add    rcx,rcx
   140007a28:	call   0x14000abc0
   140007a2d:	add    rsp,0x28
   140007a31:	ret    
   140007a32:	int3   
   140007a33:	int3   
   140007a34:	int3   
   140007a35:	int3   
   140007a36:	int3   
   140007a37:	int3   
   140007a38:	sub    rsp,0x28
   140007a3c:	mov    rcx,QWORD PTR [rcx+0x20]
   140007a40:	test   rcx,rcx
   140007a43:	jns    0x140007a4d
   140007a45:	add    rcx,rcx
   140007a48:	call   0x14000abc0
   140007a4d:	add    rsp,0x28
   140007a51:	ret    
   140007a52:	int3   
   140007a53:	int3   
   140007a54:	int3   
   140007a55:	int3   
   140007a56:	int3   
   140007a57:	int3   
   140007a58:	mov    QWORD PTR [rsp+0x8],rbx
   140007a5d:	push   rdi
   140007a5e:	sub    rsp,0x20
   140007a62:	mov    rdi,QWORD PTR [rcx]
   140007a65:	test   rdi,rdi
   140007a68:	je     0x140007a8c
   140007a6a:	mov    eax,DWORD PTR [rcx+0x8]
   140007a6d:	add    eax,0xfffffffd
   140007a70:	test   eax,0xfffffffb
   140007a75:	jne    0x140007a8c
   140007a77:	mov    rax,QWORD PTR [rdi]
   140007a7a:	mov    rbx,QWORD PTR [rax+0x10]
   140007a7e:	mov    rcx,rbx
   140007a81:	call   QWORD PTR [rip+0x5a31]        # 0x14000d4b8
   140007a87:	mov    rcx,rdi
   140007a8a:	call   rbx
   140007a8c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a91:	add    rsp,0x20
   140007a95:	pop    rdi
   140007a96:	ret    
   140007a97:	int3   
   140007a98:	int3   
   140007a99:	int3   
   140007a9a:	int3   
   140007a9b:	int3   
   140007a9c:	int3   
   140007a9d:	int3   
   140007a9e:	int3   
   140007a9f:	int3   
   140007aa0:	rex push rbx
   140007aa2:	sub    rsp,0x20
   140007aa6:	mov    r8,QWORD PTR [rdx]
   140007aa9:	mov    rbx,rcx
   140007aac:	cmp    QWORD PTR [rcx],r8
   140007aaf:	je     0x140007ad5
   140007ab1:	lea    rcx,[rsp+0x30]
   140007ab6:	mov    QWORD PTR [rsp+0x30],r8
   140007abb:	call   0x140009ccc
   140007ac0:	mov    rax,QWORD PTR [rbx]
   140007ac3:	lea    rcx,[rsp+0x30]
   140007ac8:	mov    QWORD PTR [rsp+0x30],rax
   140007acd:	mov    QWORD PTR [rbx],r8
   140007ad0:	call   0x140009cf8
   140007ad5:	mov    rax,rbx
   140007ad8:	add    rsp,0x20
   140007adc:	pop    rbx
   140007add:	ret    
   140007ade:	int3   
   140007adf:	int3   
   140007ae0:	int3   
   140007ae1:	int3   
   140007ae2:	int3   
   140007ae3:	int3   
   140007ae4:	mov    rax,rsp
   140007ae7:	mov    QWORD PTR [rax+0x10],rbx
   140007aeb:	mov    QWORD PTR [rax+0x18],rsi
   140007aef:	mov    QWORD PTR [rax+0x8],rcx
   140007af3:	push   rdi
   140007af4:	sub    rsp,0x30
   140007af8:	mov    rcx,rdx
   140007afb:	mov    rdi,r9
   140007afe:	lea    rdx,[rax-0x18]
   140007b02:	mov    rbx,r8
   140007b05:	call   QWORD PTR [rip+0x57ad]        # 0x14000d2b8
   140007b0b:	lea    rdx,[rsp+0x40]
   140007b10:	mov    rcx,rbx
   140007b13:	mov    rsi,rax
   140007b16:	call   QWORD PTR [rip+0x579c]        # 0x14000d2b8
   140007b1c:	mov    ecx,DWORD PTR [rsp+0x40]
   140007b20:	cmp    DWORD PTR [rsp+0x20],ecx
   140007b24:	je     0x140007b2a
   140007b26:	xor    ecx,ecx
   140007b28:	jmp    0x140007b40
   140007b2a:	mov    r8,rcx
   140007b2d:	mov    rdx,rax
   140007b30:	add    r8,r8
   140007b33:	mov    rcx,rsi
   140007b36:	call   0x140004b3e
   140007b3b:	test   eax,eax
   140007b3d:	sete   cl
   140007b40:	mov    rbx,QWORD PTR [rsp+0x48]
   140007b45:	xor    eax,eax
   140007b47:	mov    rsi,QWORD PTR [rsp+0x50]
   140007b4c:	mov    BYTE PTR [rdi],cl
   140007b4e:	add    rsp,0x30
   140007b52:	pop    rdi
   140007b53:	ret    
   140007b54:	int3   
   140007b55:	int3   
   140007b56:	int3   
   140007b57:	int3   
   140007b58:	int3   
   140007b59:	int3   
   140007b5a:	int3   
   140007b5b:	int3   
   140007b5c:	int3   
   140007b5d:	int3   
   140007b5e:	int3   
   140007b5f:	int3   
   140007b60:	mov    QWORD PTR [rsp+0x8],rbx
   140007b65:	push   rdi
   140007b66:	sub    rsp,0x20
   140007b6a:	lea    rax,[rip+0x642f]        # 0x14000dfa0
   140007b71:	mov    ebx,edx
   140007b73:	mov    QWORD PTR [rcx],rax
   140007b76:	mov    rdi,rcx
   140007b79:	call   0x1400065b0
   140007b7e:	test   bl,0x1
   140007b81:	je     0x140007b8c
   140007b83:	mov    rcx,rdi
   140007b86:	call   QWORD PTR [rip+0x54ac]        # 0x14000d038
   140007b8c:	mov    rax,rdi
   140007b8f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007b94:	add    rsp,0x20
   140007b98:	pop    rdi
   140007b99:	ret    
   140007b9a:	int3   
   140007b9b:	int3   
   140007b9c:	int3   
   140007b9d:	int3   
   140007b9e:	int3   
   140007b9f:	int3   
   140007ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140007ba5:	push   rdi
   140007ba6:	sub    rsp,0x20
   140007baa:	mov    rbx,rcx
   140007bad:	mov    edi,edx
   140007baf:	add    rcx,0x40
   140007bb3:	call   0x140006384
   140007bb8:	lea    rcx,[rbx+0x38]
   140007bbc:	call   0x140009cf8
   140007bc1:	mov    rcx,QWORD PTR [rbx+0x30]
   140007bc5:	test   rcx,rcx
   140007bc8:	je     0x140007bd4
   140007bca:	and    QWORD PTR [rbx+0x30],0x0
   140007bcf:	call   0x14000ab30
   140007bd4:	mov    rcx,rbx
   140007bd7:	call   0x140007a38
   140007bdc:	test   dil,0x1
   140007be0:	je     0x140007beb
   140007be2:	mov    rcx,rbx
   140007be5:	call   QWORD PTR [rip+0x544d]        # 0x14000d038
   140007beb:	mov    rax,rbx
   140007bee:	mov    rbx,QWORD PTR [rsp+0x30]
   140007bf3:	add    rsp,0x20
   140007bf7:	pop    rdi
   140007bf8:	ret    
   140007bf9:	int3   
   140007bfa:	int3   
   140007bfb:	int3   
   140007bfc:	int3   
   140007bfd:	int3   
   140007bfe:	int3   
   140007bff:	int3   
   140007c00:	mov    QWORD PTR [rsp+0x8],rbx
   140007c05:	push   rdi
   140007c06:	sub    rsp,0x20
   140007c0a:	mov    ebx,edx
   140007c0c:	mov    rdi,rcx
   140007c0f:	call   0x140007a18
   140007c14:	test   bl,0x1
   140007c17:	je     0x140007c22
   140007c19:	mov    rcx,rdi
   140007c1c:	call   QWORD PTR [rip+0x5416]        # 0x14000d038
   140007c22:	mov    rax,rdi
   140007c25:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c2a:	add    rsp,0x20
   140007c2e:	pop    rdi
   140007c2f:	ret    
   140007c30:	int3   
   140007c31:	int3   
   140007c32:	int3   
   140007c33:	int3   
   140007c34:	int3   
   140007c35:	int3   
   140007c36:	int3   
   140007c37:	int3   
   140007c38:	int3   
   140007c39:	int3   
   140007c3a:	int3   
   140007c3b:	int3   
   140007c3c:	int3   
   140007c3d:	int3   
   140007c3e:	int3   
   140007c3f:	int3   
   140007c40:	mov    QWORD PTR [rsp+0x8],rbx
   140007c45:	push   rdi
   140007c46:	sub    rsp,0x20
   140007c4a:	mov    ebx,edx
   140007c4c:	mov    rdi,rcx
   140007c4f:	call   0x14000626c
   140007c54:	test   bl,0x1
   140007c57:	je     0x140007c62
   140007c59:	mov    rcx,rdi
   140007c5c:	call   QWORD PTR [rip+0x53d6]        # 0x14000d038
   140007c62:	mov    rax,rdi
   140007c65:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c6a:	add    rsp,0x20
   140007c6e:	pop    rdi
   140007c6f:	ret    
   140007c70:	int3   
   140007c71:	int3   
   140007c72:	int3   
   140007c73:	int3   
   140007c74:	int3   
   140007c75:	int3   
   140007c76:	int3   
   140007c77:	int3   
   140007c78:	int3   
   140007c79:	int3   
   140007c7a:	int3   
   140007c7b:	int3   
   140007c7c:	int3   
   140007c7d:	int3   
   140007c7e:	int3   
   140007c7f:	int3   
   140007c80:	mov    QWORD PTR [rsp+0x8],rbx
   140007c85:	push   rdi
   140007c86:	sub    rsp,0x20
   140007c8a:	mov    ebx,edx
   140007c8c:	mov    rdi,rcx
   140007c8f:	call   0x140007a38
   140007c94:	test   bl,0x1
   140007c97:	je     0x140007ca2
   140007c99:	mov    rcx,rdi
   140007c9c:	call   QWORD PTR [rip+0x5396]        # 0x14000d038
   140007ca2:	mov    rax,rdi
   140007ca5:	mov    rbx,QWORD PTR [rsp+0x30]
   140007caa:	add    rsp,0x20
   140007cae:	pop    rdi
   140007caf:	ret    
   140007cb0:	int3   
   140007cb1:	int3   
   140007cb2:	int3   
   140007cb3:	int3   
   140007cb4:	int3   
   140007cb5:	int3   
   140007cb6:	int3   
   140007cb7:	int3   
   140007cb8:	int3   
   140007cb9:	int3   
   140007cba:	int3   
   140007cbb:	int3   
   140007cbc:	int3   
   140007cbd:	int3   
   140007cbe:	int3   
   140007cbf:	int3   
   140007cc0:	rex push rbx
   140007cc2:	sub    rsp,0x20
   140007cc6:	mov    DWORD PTR [rcx+0xc],0xc0000001
   140007ccd:	mov    rbx,rcx
   140007cd0:	test   dl,0x1
   140007cd3:	je     0x140007cdb
   140007cd5:	call   QWORD PTR [rip+0x535d]        # 0x14000d038
   140007cdb:	mov    rax,rbx
   140007cde:	add    rsp,0x20
   140007ce2:	pop    rbx
   140007ce3:	ret    
   140007ce4:	int3   
   140007ce5:	int3   
   140007ce6:	int3   
   140007ce7:	int3   
   140007ce8:	int3   
   140007ce9:	int3   
   140007cea:	int3   
   140007ceb:	int3   
   140007cec:	int3   
   140007ced:	int3   
   140007cee:	int3   
   140007cef:	int3   
   140007cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140007cf5:	mov    QWORD PTR [rsp+0x10],rbp
   140007cfa:	mov    QWORD PTR [rsp+0x18],rsi
   140007cff:	push   rdi
   140007d00:	sub    rsp,0x20
   140007d04:	mov    rsi,QWORD PTR [rcx+0x28]
   140007d08:	mov    ebp,edx
   140007d0a:	mov    rdi,rcx
   140007d0d:	test   rsi,rsi
   140007d10:	je     0x140007d2c
   140007d12:	mov    rax,QWORD PTR [rsi]
   140007d15:	mov    rbx,QWORD PTR [rax+0x10]
   140007d19:	mov    rcx,rbx
   140007d1c:	call   QWORD PTR [rip+0x5796]        # 0x14000d4b8
   140007d22:	mov    rcx,rsi
   140007d25:	call   rbx
   140007d27:	and    QWORD PTR [rdi+0x28],0x0
   140007d2c:	mov    rcx,QWORD PTR [rdi+0x20]
   140007d30:	call   QWORD PTR [rip+0x55a2]        # 0x14000d2d8
   140007d36:	and    QWORD PTR [rdi+0x20],0x0
   140007d3b:	mov    rcx,rdi
   140007d3e:	call   0x140007a18
   140007d43:	test   bpl,0x1
   140007d47:	je     0x140007d52
   140007d49:	mov    rcx,rdi
   140007d4c:	call   QWORD PTR [rip+0x52e6]        # 0x14000d038
   140007d52:	mov    rbx,QWORD PTR [rsp+0x30]
   140007d57:	mov    rax,rdi
   140007d5a:	mov    rbp,QWORD PTR [rsp+0x38]
   140007d5f:	mov    rsi,QWORD PTR [rsp+0x40]
   140007d64:	add    rsp,0x20
   140007d68:	pop    rdi
   140007d69:	ret    
   140007d6a:	int3   
   140007d6b:	int3   
   140007d6c:	int3   
   140007d6d:	int3   
   140007d6e:	int3   
   140007d6f:	int3   
   140007d70:	mov    QWORD PTR [rsp+0x8],rbx
   140007d75:	mov    QWORD PTR [rsp+0x10],rbp
   140007d7a:	mov    QWORD PTR [rsp+0x18],rsi
   140007d7f:	push   rdi
   140007d80:	sub    rsp,0x20
   140007d84:	mov    rdi,rcx
   140007d87:	mov    ebp,edx
   140007d89:	add    rcx,0x38
   140007d8d:	call   0x140006384
   140007d92:	mov    rsi,QWORD PTR [rdi+0x28]
   140007d96:	test   rsi,rsi
   140007d99:	je     0x140007db5
   140007d9b:	and    QWORD PTR [rdi+0x28],0x0
   140007da0:	mov    rax,QWORD PTR [rsi]
   140007da3:	mov    rbx,QWORD PTR [rax+0x10]
   140007da7:	mov    rcx,rbx
   140007daa:	call   QWORD PTR [rip+0x5708]        # 0x14000d4b8
   140007db0:	mov    rcx,rsi
   140007db3:	call   rbx
   140007db5:	mov    rcx,rdi
   140007db8:	call   0x140007a18
   140007dbd:	test   bpl,0x1
   140007dc1:	je     0x140007dcc
   140007dc3:	mov    rcx,rdi
   140007dc6:	call   QWORD PTR [rip+0x526c]        # 0x14000d038
   140007dcc:	mov    rbx,QWORD PTR [rsp+0x30]
   140007dd1:	mov    rax,rdi
   140007dd4:	mov    rbp,QWORD PTR [rsp+0x38]
   140007dd9:	mov    rsi,QWORD PTR [rsp+0x40]
   140007dde:	add    rsp,0x20
   140007de2:	pop    rdi
   140007de3:	ret    
   140007de4:	int3   
   140007de5:	int3   
   140007de6:	int3   
   140007de7:	int3   
   140007de8:	int3   
   140007de9:	int3   
   140007dea:	int3   
   140007deb:	int3   
   140007dec:	mov    QWORD PTR [rsp+0x8],rbx
   140007df1:	mov    QWORD PTR [rsp+0x10],rbp
   140007df6:	mov    QWORD PTR [rsp+0x18],rsi
   140007dfb:	push   rdi
   140007dfc:	sub    rsp,0x20
   140007e00:	xor    ebp,ebp
   140007e02:	lea    rax,[rip+0x685f]        # 0x14000e668
   140007e09:	mov    rsi,rcx
   140007e0c:	mov    QWORD PTR [rcx],rax
   140007e0f:	cmp    DWORD PTR [rcx+0xc],ebp
   140007e12:	jbe    0x140007e35
   140007e14:	mov    rdi,QWORD PTR [rsi+rbp*8+0x10]
   140007e19:	mov    rax,QWORD PTR [rdi]
   140007e1c:	mov    rbx,QWORD PTR [rax+0x10]
   140007e20:	mov    rcx,rbx
   140007e23:	call   QWORD PTR [rip+0x568f]        # 0x14000d4b8
   140007e29:	mov    rcx,rdi
   140007e2c:	call   rbx
   140007e2e:	inc    ebp
   140007e30:	cmp    ebp,DWORD PTR [rsi+0xc]
   140007e33:	jb     0x140007e14
   140007e35:	mov    rcx,rsi
   140007e38:	call   QWORD PTR [rip+0x51fa]        # 0x14000d038
   140007e3e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e43:	mov    rax,rsi
   140007e46:	mov    rsi,QWORD PTR [rsp+0x40]
   140007e4b:	mov    rbp,QWORD PTR [rsp+0x38]
   140007e50:	add    rsp,0x20
   140007e54:	pop    rdi
   140007e55:	ret    
   140007e56:	int3   
   140007e57:	int3   
   140007e58:	int3   
   140007e59:	int3   
   140007e5a:	int3   
   140007e5b:	int3   
   140007e5c:	int3   
   140007e5d:	int3   
   140007e5e:	int3   
   140007e5f:	int3   
   140007e60:	mov    QWORD PTR [rsp+0x8],rbx
   140007e65:	push   rdi
   140007e66:	sub    rsp,0x20
   140007e6a:	mov    rdi,rcx
   140007e6d:	mov    ebx,edx
   140007e6f:	add    rcx,0x20
   140007e73:	call   0x140009d1c
   140007e78:	mov    rcx,rdi
   140007e7b:	call   0x140007a18
   140007e80:	test   bl,0x1
   140007e83:	je     0x140007e8e
   140007e85:	mov    rcx,rdi
   140007e88:	call   QWORD PTR [rip+0x51aa]        # 0x14000d038
   140007e8e:	mov    rax,rdi
   140007e91:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e96:	add    rsp,0x20
   140007e9a:	pop    rdi
   140007e9b:	ret    
   140007e9c:	int3   
   140007e9d:	int3   
   140007e9e:	int3   
   140007e9f:	int3   
   140007ea0:	int3   
   140007ea1:	int3   
   140007ea2:	int3   
   140007ea3:	int3   
   140007ea4:	int3   
   140007ea5:	int3   
   140007ea6:	int3   
   140007ea7:	int3   
   140007ea8:	int3   
   140007ea9:	int3   
   140007eaa:	int3   
   140007eab:	int3   
   140007eac:	int3   
   140007ead:	int3   
   140007eae:	int3   
   140007eaf:	int3   
   140007eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140007eb5:	push   rdi
   140007eb6:	sub    rsp,0x20
   140007eba:	mov    rdi,rcx
   140007ebd:	mov    ebx,edx
   140007ebf:	add    rcx,0x28
   140007ec3:	call   0x140009d1c
   140007ec8:	mov    rcx,rdi
   140007ecb:	call   0x140007a38
   140007ed0:	test   bl,0x1
   140007ed3:	je     0x140007ede
   140007ed5:	mov    rcx,rdi
   140007ed8:	call   QWORD PTR [rip+0x515a]        # 0x14000d038
   140007ede:	mov    rax,rdi
   140007ee1:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ee6:	add    rsp,0x20
   140007eea:	pop    rdi
   140007eeb:	ret    
   140007eec:	int3   
   140007eed:	int3   
   140007eee:	int3   
   140007eef:	int3   
   140007ef0:	int3   
   140007ef1:	int3   
   140007ef2:	int3   
   140007ef3:	int3   
   140007ef4:	int3   
   140007ef5:	int3   
   140007ef6:	int3   
   140007ef7:	int3   
   140007ef8:	int3   
   140007ef9:	int3   
   140007efa:	int3   
   140007efb:	int3   
   140007efc:	int3   
   140007efd:	int3   
   140007efe:	int3   
   140007eff:	int3   
   140007f00:	mov    QWORD PTR [rsp+0x8],rbx
   140007f05:	push   rdi
   140007f06:	sub    rsp,0x20
   140007f0a:	mov    ebx,edx
   140007f0c:	mov    rdi,rcx
   140007f0f:	call   0x1400065b0
   140007f14:	test   bl,0x1
   140007f17:	je     0x140007f22
   140007f19:	mov    rcx,rdi
   140007f1c:	call   QWORD PTR [rip+0x5116]        # 0x14000d038
   140007f22:	mov    rax,rdi
   140007f25:	mov    rbx,QWORD PTR [rsp+0x30]
   140007f2a:	add    rsp,0x20
   140007f2e:	pop    rdi
   140007f2f:	ret    
   140007f30:	int3   
   140007f31:	int3   
   140007f32:	int3   
   140007f33:	int3   
   140007f34:	int3   
   140007f35:	int3   
   140007f36:	int3   
   140007f37:	int3   
   140007f38:	int3   
   140007f39:	int3   
   140007f3a:	int3   
   140007f3b:	int3   
   140007f3c:	int3   
   140007f3d:	int3   
   140007f3e:	int3   
   140007f3f:	int3   
   140007f40:	mov    QWORD PTR [rsp+0x8],rbx
   140007f45:	push   rdi
   140007f46:	sub    rsp,0x20
   140007f4a:	mov    rdi,rcx
   140007f4d:	mov    ebx,edx
   140007f4f:	add    rcx,0x38
   140007f53:	call   0x140006384
   140007f58:	lea    rcx,[rdi+0x30]
   140007f5c:	call   0x140009cf8
   140007f61:	mov    rcx,rdi
   140007f64:	call   0x140007a18
   140007f69:	test   bl,0x1
   140007f6c:	je     0x140007f77
   140007f6e:	mov    rcx,rdi
   140007f71:	call   QWORD PTR [rip+0x50c1]        # 0x14000d038
   140007f77:	mov    rax,rdi
   140007f7a:	mov    rbx,QWORD PTR [rsp+0x30]
   140007f7f:	add    rsp,0x20
   140007f83:	pop    rdi
   140007f84:	ret    
   140007f85:	int3   
   140007f86:	int3   
   140007f87:	int3   
   140007f88:	int3   
   140007f89:	int3   
   140007f8a:	int3   
   140007f8b:	int3   
   140007f8c:	int3   
   140007f8d:	int3   
   140007f8e:	int3   
   140007f8f:	int3   
   140007f90:	rex push rbx
   140007f92:	sub    rsp,0x20
   140007f96:	lea    rax,[rip+0x6933]        # 0x14000e8d0
   140007f9d:	mov    rbx,rcx
   140007fa0:	mov    QWORD PTR [rcx],rax
   140007fa3:	mov    eax,0xc0000001
   140007fa8:	mov    DWORD PTR [rcx+0x10],eax
   140007fab:	mov    DWORD PTR [rcx+0xc],eax
   140007fae:	test   dl,0x1
   140007fb1:	je     0x140007fb9
   140007fb3:	call   QWORD PTR [rip+0x507f]        # 0x14000d038
   140007fb9:	mov    rax,rbx
   140007fbc:	add    rsp,0x20
   140007fc0:	pop    rbx
   140007fc1:	ret    
   140007fc2:	int3   
   140007fc3:	int3   
   140007fc4:	int3   
   140007fc5:	int3   
   140007fc6:	int3   
   140007fc7:	int3   
   140007fc8:	mov    QWORD PTR [rsp+0x8],rbx
   140007fcd:	mov    QWORD PTR [rsp+0x10],rsi
   140007fd2:	mov    QWORD PTR [rsp+0x18],rdi
   140007fd7:	push   r14
   140007fd9:	sub    rsp,0x20
   140007fdd:	xor    edi,edi
   140007fdf:	mov    r14,rdx
   140007fe2:	cmp    DWORD PTR [rcx+0xc],0x10
   140007fe6:	mov    rsi,rcx
   140007fe9:	jne    0x140007ff2
   140007feb:	mov    edi,0x8007000e
   140007ff0:	jmp    0x140008012
   140007ff2:	mov    rcx,QWORD PTR [rdx]
   140007ff5:	mov    rbx,QWORD PTR [rcx+0x8]
   140007ff9:	mov    rcx,rbx
   140007ffc:	call   QWORD PTR [rip+0x54b6]        # 0x14000d4b8
   140008002:	mov    rcx,r14
   140008005:	call   rbx
   140008007:	mov    ecx,DWORD PTR [rsi+0xc]
   14000800a:	mov    QWORD PTR [rsi+rcx*8+0x10],r14
   14000800f:	inc    DWORD PTR [rsi+0xc]
   140008012:	mov    rbx,QWORD PTR [rsp+0x30]
   140008017:	mov    eax,edi
   140008019:	mov    rdi,QWORD PTR [rsp+0x40]
   14000801e:	mov    rsi,QWORD PTR [rsp+0x38]
   140008023:	add    rsp,0x20
   140008027:	pop    r14
   140008029:	ret    
   14000802a:	int3   
   14000802b:	int3   
   14000802c:	int3   
   14000802d:	int3   
   14000802e:	int3   
   14000802f:	int3   
   140008030:	mov    rax,QWORD PTR [rcx+0x20]
   140008034:	test   rax,rax
   140008037:	js     0x140008047
   140008039:	lea    rdx,[rax+0x1]
   14000803d:	lock cmpxchg QWORD PTR [rcx+0x20],rdx
   140008043:	jne    0x140008034
   140008045:	jmp    0x140008054
   140008047:	mov    edx,0x1
   14000804c:	lock xadd DWORD PTR [rax+rax*1+0x10],edx
   140008052:	inc    edx
   140008054:	mov    eax,edx
   140008056:	ret    
   140008057:	int3   
   140008058:	int3   
   140008059:	int3   
   14000805a:	int3   
   14000805b:	int3   
   14000805c:	int3   
   14000805d:	int3   
   14000805e:	int3   
   14000805f:	int3   
   140008060:	mov    rax,QWORD PTR [rcx+0x18]
   140008064:	test   rax,rax
   140008067:	js     0x140008077
   140008069:	lea    rdx,[rax+0x1]
   14000806d:	lock cmpxchg QWORD PTR [rcx+0x18],rdx
   140008073:	jne    0x140008064
   140008075:	jmp    0x140008084
   140008077:	mov    edx,0x1
   14000807c:	lock xadd DWORD PTR [rax+rax*1+0x10],edx
   140008082:	inc    edx
   140008084:	mov    eax,edx
   140008086:	ret    
   140008087:	int3   
   140008088:	int3   
   140008089:	int3   
   14000808a:	int3   
   14000808b:	int3   
   14000808c:	int3   
   14000808d:	int3   
   14000808e:	int3   
   14000808f:	int3   
   140008090:	mov    QWORD PTR [rsp+0x8],rbx
   140008095:	mov    QWORD PTR [rsp+0x10],rsi
   14000809a:	push   rdi
   14000809b:	sub    rsp,0x20
   14000809f:	mov    rbx,rcx
   1400080a2:	xor    esi,esi
   1400080a4:	mov    rcx,QWORD PTR [rcx]
   1400080a7:	movzx  edi,dx
   1400080aa:	test   rcx,rcx
   1400080ad:	je     0x1400080bc
   1400080af:	call   QWORD PTR [rip+0x4f83]        # 0x14000d038
   1400080b5:	mov    QWORD PTR [rbx],rsi
   1400080b8:	mov    WORD PTR [rbx+0x8],si
   1400080bc:	movzx  ecx,di
   1400080bf:	call   QWORD PTR [rip+0x4fbb]        # 0x14000d080
   1400080c5:	mov    QWORD PTR [rbx],rax
   1400080c8:	test   rax,rax
   1400080cb:	je     0x1400080d1
   1400080cd:	mov    WORD PTR [rbx+0x8],di
   1400080d1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400080d6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400080db:	add    rsp,0x20
   1400080df:	pop    rdi
   1400080e0:	ret    
   1400080e1:	int3   
   1400080e2:	int3   
   1400080e3:	int3   
   1400080e4:	int3   
   1400080e5:	int3   
   1400080e6:	int3   
   1400080e7:	int3   
   1400080e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400080ed:	push   rdi
   1400080ee:	sub    rsp,0x20
   1400080f2:	mov    rbx,rcx
   1400080f5:	mov    rdi,rdx
   1400080f8:	mov    rcx,QWORD PTR [rcx]
   1400080fb:	test   rcx,rcx
   1400080fe:	je     0x140008105
   140008100:	call   0x14000ab30
   140008105:	mov    QWORD PTR [rbx],rdi
   140008108:	mov    rbx,QWORD PTR [rsp+0x30]
   14000810d:	add    rsp,0x20
   140008111:	pop    rdi
   140008112:	ret    
   140008113:	int3   
   140008114:	int3   
   140008115:	int3   
   140008116:	int3   
   140008117:	int3   
   140008118:	int3   
   140008119:	int3   
   14000811a:	int3   
   14000811b:	int3   
   14000811c:	sub    rsp,0x28
   140008120:	mov    r11,rdx
   140008123:	mov    r10,rcx
   140008126:	mov    rcx,r11
   140008129:	lea    rdx,[rip+0x6c08]        # 0x14000ed38
   140008130:	call   0x140009c9c
   140008135:	xor    r9d,r9d
   140008138:	test   eax,eax
   14000813a:	je     0x140008143
   14000813c:	mov    QWORD PTR [r8],r10
   14000813f:	xor    eax,eax
   140008141:	jmp    0x14000817e
   140008143:	lea    rdx,[rip+0x6c2e]        # 0x14000ed78
   14000814a:	add    r10,0x8
   14000814e:	call   0x140009c9c
   140008153:	test   eax,eax
   140008155:	je     0x14000815c
   140008157:	mov    QWORD PTR [r8],r10
   14000815a:	jmp    0x14000817b
   14000815c:	lea    rdx,[rip+0x613d]        # 0x14000e2a0
   140008163:	call   0x140009c9c
   140008168:	test   eax,eax
   14000816a:	je     0x140008175
   14000816c:	lea    rax,[r10+0x8]
   140008170:	mov    QWORD PTR [r8],rax
   140008173:	jmp    0x14000817b
   140008175:	mov    r9d,0x80004002
   14000817b:	mov    eax,r9d
   14000817e:	add    rsp,0x28
   140008182:	ret    
   140008183:	int3   
   140008184:	int3   
   140008185:	int3   
   140008186:	int3   
   140008187:	int3   
   140008188:	int3   
   140008189:	int3   
   14000818a:	int3   
   14000818b:	int3   
   14000818c:	sub    rsp,0x28
   140008190:	mov    r11,rdx
   140008193:	mov    r10,rcx
   140008196:	mov    rcx,r11
   140008199:	lea    rdx,[rip+0x6bd8]        # 0x14000ed78
   1400081a0:	call   0x140009c9c
   1400081a5:	xor    r9d,r9d
   1400081a8:	test   eax,eax
   1400081aa:	je     0x1400081b3
   1400081ac:	mov    QWORD PTR [r8],r10
   1400081af:	xor    eax,eax
   1400081b1:	jmp    0x1400081ee
   1400081b3:	lea    rdx,[rip+0x60e6]        # 0x14000e2a0
   1400081ba:	add    r10,0x8
   1400081be:	call   0x140009c9c
   1400081c3:	test   eax,eax
   1400081c5:	je     0x1400081cc
   1400081c7:	mov    QWORD PTR [r8],r10
   1400081ca:	jmp    0x1400081eb
   1400081cc:	lea    rdx,[rip+0x56ad]        # 0x14000d880
   1400081d3:	call   0x140009c9c
   1400081d8:	test   eax,eax
   1400081da:	je     0x1400081e5
   1400081dc:	lea    rax,[r10+0x8]
   1400081e0:	mov    QWORD PTR [r8],rax
   1400081e3:	jmp    0x1400081eb
   1400081e5:	mov    r9d,0x80004002
   1400081eb:	mov    eax,r9d
   1400081ee:	add    rsp,0x28
   1400081f2:	ret    
   1400081f3:	int3   
   1400081f4:	int3   
   1400081f5:	int3   
   1400081f6:	int3   
   1400081f7:	int3   
   1400081f8:	int3   
   1400081f9:	int3   
   1400081fa:	int3   
   1400081fb:	int3   
   1400081fc:	sub    rsp,0x28
   140008200:	mov    rax,rdx
   140008203:	mov    r9,rcx
   140008206:	mov    rcx,rax
   140008209:	lea    rdx,[rip+0x6b68]        # 0x14000ed78
   140008210:	call   0x140009c9c
   140008215:	test   eax,eax
   140008217:	je     0x140008220
   140008219:	mov    QWORD PTR [r8],r9
   14000821c:	xor    eax,eax
   14000821e:	jmp    0x140008225
   140008220:	mov    eax,0x80004002
   140008225:	add    rsp,0x28
   140008229:	ret    
   14000822a:	int3   
   14000822b:	int3   
   14000822c:	int3   
   14000822d:	int3   
   14000822e:	int3   
   14000822f:	int3   
   140008230:	rex push rbx
   140008232:	sub    rsp,0x20
   140008236:	mov    rax,QWORD PTR [rcx]
   140008239:	mov    rbx,rcx
   14000823c:	test   rax,rax
   14000823f:	je     0x140008251
   140008241:	mov    rcx,QWORD PTR [rcx]
   140008244:	call   QWORD PTR [rip+0x4f76]        # 0x14000d1c0
   14000824a:	mov    QWORD PTR [rbx],0x0
   140008251:	add    rsp,0x20
   140008255:	pop    rbx
   140008256:	ret    
   140008257:	int3   
   140008258:	int3   
   140008259:	int3   
   14000825a:	int3   
   14000825b:	int3   
   14000825c:	int3   
   14000825d:	int3   
   14000825e:	int3   
   14000825f:	int3   
   140008260:	mov    rax,rsp
   140008263:	mov    QWORD PTR [rax+0x8],rbx
   140008267:	mov    QWORD PTR [rax+0x10],rsi
   14000826b:	mov    QWORD PTR [rax+0x18],rdi
   14000826f:	push   r14
   140008271:	sub    rsp,0x30
   140008275:	and    QWORD PTR [rax+0x20],0x0
   14000827a:	mov    rsi,rcx
   14000827d:	lea    rcx,[rax+0x20]
   140008281:	mov    r14,r8
   140008284:	call   0x1400062b8
   140008289:	mov    ebx,eax
   14000828b:	test   eax,eax
   14000828d:	js     0x1400082de
   14000828f:	mov    ecx,0x50
   140008294:	call   QWORD PTR [rip+0x4de6]        # 0x14000d080
   14000829a:	mov    rdi,rax
   14000829d:	test   rax,rax
   1400082a0:	je     0x1400082ce
   1400082a2:	mov    rdx,QWORD PTR [rsi+0x8]
   1400082a6:	lea    rax,[rsp+0x58]
   1400082ab:	mov    r9,rsi
   1400082ae:	mov    QWORD PTR [rsp+0x20],rax
   1400082b3:	lea    r8,[rip+0xa0a6]        # 0x140012360
   1400082ba:	mov    rcx,rdi
   1400082bd:	call   0x1400064c0
   1400082c2:	lea    rax,[rip+0x633f]        # 0x14000e608
   1400082c9:	mov    QWORD PTR [rdi],rax
   1400082cc:	jmp    0x1400082d0
   1400082ce:	xor    edi,edi
   1400082d0:	test   rdi,rdi
   1400082d3:	mov    QWORD PTR [r14],rdi
   1400082d6:	mov    eax,0x8007000e
   1400082db:	cmove  ebx,eax
   1400082de:	lea    rcx,[rsp+0x58]
   1400082e3:	call   0x1400062f0
   1400082e8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400082ed:	mov    eax,ebx
   1400082ef:	mov    rbx,QWORD PTR [rsp+0x40]
   1400082f4:	mov    rdi,QWORD PTR [rsp+0x50]
   1400082f9:	add    rsp,0x30
   1400082fd:	pop    r14
   1400082ff:	ret    
   140008300:	int3   
   140008301:	int3   
   140008302:	int3   
   140008303:	int3   
   140008304:	int3   
   140008305:	int3   
   140008306:	int3   
   140008307:	int3   
   140008308:	int3   
   140008309:	int3   
   14000830a:	int3   
   14000830b:	int3   
   14000830c:	int3   
   14000830d:	int3   
   14000830e:	int3   
   14000830f:	int3   
   140008310:	mov    rax,rsp
   140008313:	mov    QWORD PTR [rax+0x8],rbx
   140008317:	mov    QWORD PTR [rax+0x10],rsi
   14000831b:	mov    QWORD PTR [rax+0x18],rdi
   14000831f:	push   r14
   140008321:	sub    rsp,0x30
   140008325:	and    QWORD PTR [rax+0x20],0x0
   14000832a:	mov    rsi,rcx
   14000832d:	lea    rcx,[rax+0x20]
   140008331:	mov    r14,r8
   140008334:	call   0x1400062b8
   140008339:	mov    ebx,eax
   14000833b:	test   eax,eax
   14000833d:	js     0x14000838e
   14000833f:	mov    ecx,0x50
   140008344:	call   QWORD PTR [rip+0x4d36]        # 0x14000d080
   14000834a:	mov    rdi,rax
   14000834d:	test   rax,rax
   140008350:	je     0x14000837e
   140008352:	mov    rdx,QWORD PTR [rsi+0x8]
   140008356:	lea    rax,[rsp+0x58]
   14000835b:	mov    r9,rsi
   14000835e:	mov    QWORD PTR [rsp+0x20],rax
   140008363:	lea    r8,[rip+0x9f86]        # 0x1400122f0
   14000836a:	mov    rcx,rdi
   14000836d:	call   0x1400064c0
   140008372:	lea    rax,[rip+0x628f]        # 0x14000e608
   140008379:	mov    QWORD PTR [rdi],rax
   14000837c:	jmp    0x140008380
   14000837e:	xor    edi,edi
   140008380:	test   rdi,rdi
   140008383:	mov    QWORD PTR [r14],rdi
   140008386:	mov    eax,0x8007000e
   14000838b:	cmove  ebx,eax
   14000838e:	lea    rcx,[rsp+0x58]
   140008393:	call   0x1400062f0
   140008398:	mov    rsi,QWORD PTR [rsp+0x48]
   14000839d:	mov    eax,ebx
   14000839f:	mov    rbx,QWORD PTR [rsp+0x40]
   1400083a4:	mov    rdi,QWORD PTR [rsp+0x50]
   1400083a9:	add    rsp,0x30
   1400083ad:	pop    r14
   1400083af:	ret    
   1400083b0:	int3   
   1400083b1:	int3   
   1400083b2:	int3   
   1400083b3:	int3   
   1400083b4:	int3   
   1400083b5:	int3   
   1400083b6:	int3   
   1400083b7:	int3   
   1400083b8:	int3   
   1400083b9:	int3   
   1400083ba:	int3   
   1400083bb:	int3   
   1400083bc:	int3   
   1400083bd:	int3   
   1400083be:	int3   
   1400083bf:	int3   
   1400083c0:	mov    rax,rsp
   1400083c3:	mov    QWORD PTR [rax+0x8],rbx
   1400083c7:	mov    QWORD PTR [rax+0x10],rsi
   1400083cb:	mov    QWORD PTR [rax+0x18],rdi
   1400083cf:	push   r14
   1400083d1:	sub    rsp,0x30
   1400083d5:	and    QWORD PTR [rax+0x20],0x0
   1400083da:	mov    rsi,rcx
   1400083dd:	lea    rcx,[rax+0x20]
   1400083e1:	mov    r14,r8
   1400083e4:	call   0x1400062b8
   1400083e9:	mov    ebx,eax
   1400083eb:	test   eax,eax
   1400083ed:	js     0x14000843e
   1400083ef:	mov    ecx,0x50
   1400083f4:	call   QWORD PTR [rip+0x4c86]        # 0x14000d080
   1400083fa:	mov    rdi,rax
   1400083fd:	test   rax,rax
   140008400:	je     0x14000842e
   140008402:	mov    rdx,QWORD PTR [rsi+0x8]
   140008406:	lea    rax,[rsp+0x58]
   14000840b:	mov    r9,rsi
   14000840e:	mov    QWORD PTR [rsp+0x20],rax
   140008413:	lea    r8,[rip+0x9c16]        # 0x140012030
   14000841a:	mov    rcx,rdi
   14000841d:	call   0x1400064c0
   140008422:	lea    rax,[rip+0x61df]        # 0x14000e608
   140008429:	mov    QWORD PTR [rdi],rax
   14000842c:	jmp    0x140008430
   14000842e:	xor    edi,edi
   140008430:	test   rdi,rdi
   140008433:	mov    QWORD PTR [r14],rdi
   140008436:	mov    eax,0x8007000e
   14000843b:	cmove  ebx,eax
   14000843e:	lea    rcx,[rsp+0x58]
   140008443:	call   0x1400062f0
   140008448:	mov    rsi,QWORD PTR [rsp+0x48]
   14000844d:	mov    eax,ebx
   14000844f:	mov    rbx,QWORD PTR [rsp+0x40]
   140008454:	mov    rdi,QWORD PTR [rsp+0x50]
   140008459:	add    rsp,0x30
   14000845d:	pop    r14
   14000845f:	ret    
   140008460:	int3   
   140008461:	int3   
   140008462:	int3   
   140008463:	int3   
   140008464:	int3   
   140008465:	int3   
   140008466:	int3   
   140008467:	int3   
   140008468:	mov    QWORD PTR [rsp+0x8],rbx
   14000846d:	push   rdi
   14000846e:	sub    rsp,0x20
   140008472:	mov    rdi,rcx
   140008475:	lea    rdx,[rip+0x55e4]        # 0x14000da60
   14000847c:	xor    ebx,ebx
   14000847e:	lea    ecx,[rbx+0x20]
   140008481:	call   0x140004a7c
   140008486:	test   rax,rax
   140008489:	je     0x140008499
   14000848b:	mov    rdx,rdi
   14000848e:	mov    rcx,rax
   140008491:	call   0x140007990
   140008496:	mov    rbx,rax
   140008499:	mov    rax,rbx
   14000849c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084a1:	add    rsp,0x20
   1400084a5:	pop    rdi
   1400084a6:	ret    
   1400084a7:	int3   
   1400084a8:	int3   
   1400084a9:	int3   
   1400084aa:	int3   
   1400084ab:	int3   
   1400084ac:	int3   
   1400084ad:	int3   
   1400084ae:	int3   
   1400084af:	int3   
   1400084b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400084b5:	push   rsi
   1400084b6:	push   rdi
   1400084b7:	push   r14
   1400084b9:	sub    rsp,0x20
   1400084bd:	and    QWORD PTR [rsp+0x48],0x0
   1400084c3:	lea    r14,[rcx+0x38]
   1400084c7:	xor    edi,edi
   1400084c9:	cmp    QWORD PTR [r14],rdi
   1400084cc:	jne    0x14000856a
   1400084d2:	lea    rsi,[rcx+0x30]
   1400084d6:	mov    rcx,QWORD PTR [rsi]
   1400084d9:	test   rcx,rcx
   1400084dc:	je     0x14000856a
   1400084e2:	call   0x1400087e4
   1400084e7:	mov    edi,eax
   1400084e9:	test   eax,eax
   1400084eb:	js     0x14000856a
   1400084ed:	lea    rcx,[rsp+0x48]
   1400084f2:	call   0x140006384
   1400084f7:	mov    rax,QWORD PTR [rsi]
   1400084fa:	lea    rdx,[rsp+0x48]
   1400084ff:	mov    rcx,QWORD PTR [rax+0x30]
   140008503:	add    rcx,0x10
   140008507:	call   0x140008760
   14000850c:	mov    edi,eax
   14000850e:	test   eax,eax
   140008510:	js     0x14000856a
   140008512:	mov    rbx,QWORD PTR [rsp+0x48]
   140008517:	mov    rax,QWORD PTR [rbx]
   14000851a:	mov    rdi,QWORD PTR [rax+0x38]
   14000851e:	mov    rcx,rdi
   140008521:	call   QWORD PTR [rip+0x4f91]        # 0x14000d4b8
   140008527:	lea    rdx,[rsp+0x40]
   14000852c:	mov    rcx,rbx
   14000852f:	call   rdi
   140008531:	mov    edi,eax
   140008533:	test   eax,eax
   140008535:	js     0x14000856a
   140008537:	cmp    BYTE PTR [rsp+0x40],0x0
   14000853c:	je     0x14000855a
   14000853e:	mov    rax,QWORD PTR [r14]
   140008541:	mov    rcx,rsi
   140008544:	mov    QWORD PTR [r14],rbx
   140008547:	mov    rdx,QWORD PTR [rsi]
   14000854a:	add    rdx,0x38
   14000854e:	mov    QWORD PTR [rsp+0x48],rax
   140008553:	call   0x140007aa0
   140008558:	jmp    0x14000856a
   14000855a:	mov    rcx,r14
   14000855d:	call   0x140006384
   140008562:	mov    rcx,rsi
   140008565:	call   0x140009cf8
   14000856a:	lea    rcx,[rsp+0x48]
   14000856f:	call   0x140006384
   140008574:	mov    rbx,QWORD PTR [rsp+0x50]
   140008579:	mov    eax,edi
   14000857b:	add    rsp,0x20
   14000857f:	pop    r14
   140008581:	pop    rdi
   140008582:	pop    rsi
   140008583:	ret    
   140008584:	int3   
   140008585:	int3   
   140008586:	int3   
   140008587:	int3   
   140008588:	int3   
   140008589:	int3   
   14000858a:	int3   
   14000858b:	int3   
   14000858c:	rex push rbx
   14000858e:	sub    rsp,0x20
   140008592:	xor    ebx,ebx
   140008594:	cmp    BYTE PTR [rcx+0x4d],bl
   140008597:	jne    0x1400085a8
   140008599:	mov    ebx,0x8000ffff
   14000859e:	xor    edx,edx
   1400085a0:	mov    ecx,ebx
   1400085a2:	call   QWORD PTR [rip+0x4cc8]        # 0x14000d270
   1400085a8:	mov    eax,ebx
   1400085aa:	add    rsp,0x20
   1400085ae:	pop    rbx
   1400085af:	ret    
   1400085b0:	int3   
   1400085b1:	int3   
   1400085b2:	int3   
   1400085b3:	int3   
   1400085b4:	int3   
   1400085b5:	int3   
   1400085b6:	int3   
   1400085b7:	int3   
   1400085b8:	mov    r11,rsp
   1400085bb:	sub    rsp,0x48
   1400085bf:	and    QWORD PTR [r11-0x10],0x0
   1400085c4:	and    QWORD PTR [r11-0x18],0x0
   1400085c9:	mov    rax,QWORD PTR [rsp+0x70]
   1400085ce:	mov    rcx,QWORD PTR [rcx]
   1400085d1:	mov    QWORD PTR [r11-0x20],rax
   1400085d5:	and    QWORD PTR [r11-0x28],0x0
   1400085da:	call   QWORD PTR [rip+0x4bf8]        # 0x14000d1d8
   1400085e0:	test   eax,eax
   1400085e2:	jle    0x1400085ec
   1400085e4:	movzx  eax,ax
   1400085e7:	or     eax,0x80070000
   1400085ec:	add    rsp,0x48
   1400085f0:	ret    
   1400085f1:	int3   
   1400085f2:	int3   
   1400085f3:	int3   
   1400085f4:	int3   
   1400085f5:	int3   
   1400085f6:	int3   
   1400085f7:	int3   
   1400085f8:	int3   
   1400085f9:	int3   
   1400085fa:	int3   
   1400085fb:	int3   
   1400085fc:	int3   
   1400085fd:	int3   
   1400085fe:	int3   
   1400085ff:	int3   
   140008600:	mov    QWORD PTR [rsp+0x18],rbx
   140008605:	mov    QWORD PTR [rsp+0x20],rsi
   14000860a:	push   rdi
   14000860b:	sub    rsp,0x20
   14000860f:	and    QWORD PTR [rdx],0x0
   140008613:	lea    rbx,[rcx-0x10]
   140008617:	mov    rcx,rbx
   14000861a:	mov    rdi,rdx
   14000861d:	call   0x14000858c
   140008622:	mov    esi,eax
   140008624:	test   eax,eax
   140008626:	js     0x140008675
   140008628:	lea    rdx,[rsp+0x30]
   14000862d:	mov    QWORD PTR [rsp+0x30],rbx
   140008632:	lea    rcx,[rsp+0x38]
   140008637:	call   0x140006fe4
   14000863c:	mov    rbx,QWORD PTR [rsp+0x38]
   140008641:	mov    eax,0x8007000e
   140008646:	test   rbx,rbx
   140008649:	cmove  esi,eax
   14000864c:	test   esi,esi
   14000864e:	js     0x140008668
   140008650:	mov    QWORD PTR [rdi],rbx
   140008653:	mov    rax,QWORD PTR [rbx]
   140008656:	mov    rdi,QWORD PTR [rax+0x8]
   14000865a:	mov    rcx,rdi
   14000865d:	call   QWORD PTR [rip+0x4e55]        # 0x14000d4b8
   140008663:	mov    rcx,rbx
   140008666:	call   rdi
   140008668:	test   rbx,rbx
   14000866b:	je     0x140008675
   14000866d:	mov    rcx,rbx
   140008670:	call   0x14000aa10
   140008675:	mov    rbx,QWORD PTR [rsp+0x40]
   14000867a:	mov    eax,esi
   14000867c:	mov    rsi,QWORD PTR [rsp+0x48]
   140008681:	add    rsp,0x20
   140008685:	pop    rdi
   140008686:	ret    
   140008687:	int3   
   140008688:	int3   
   140008689:	int3   
   14000868a:	int3   
   14000868b:	int3   
   14000868c:	int3   
   14000868d:	int3   
   14000868e:	int3   
   14000868f:	int3   
   140008690:	mov    rax,rsp
   140008693:	mov    QWORD PTR [rax+0x8],rbx
   140008697:	mov    QWORD PTR [rax+0x10],rbp
   14000869b:	mov    QWORD PTR [rax+0x18],rsi
   14000869f:	mov    QWORD PTR [rax+0x20],rdi
   1400086a3:	push   r14
   1400086a5:	sub    rsp,0x20
   1400086a9:	xor    ebp,ebp
   1400086ab:	mov    r14,rdx
   1400086ae:	mov    rdi,rcx
   1400086b1:	mov    QWORD PTR [rdx],rbp
   1400086b4:	lea    rdx,[rip+0x53a5]        # 0x14000da60
   1400086bb:	mov    ebx,ebp
   1400086bd:	lea    ecx,[rbp+0x40]
   1400086c0:	call   0x140004a7c
   1400086c5:	test   rax,rax
   1400086c8:	je     0x14000870a
   1400086ca:	lea    rdx,[rdi-0x10]
   1400086ce:	mov    rcx,rax
   1400086d1:	call   0x1400077c0
   1400086d6:	mov    rdi,rax
   1400086d9:	mov    rbx,rax
   1400086dc:	test   rax,rax
   1400086df:	je     0x14000870a
   1400086e1:	mov    edx,DWORD PTR [rax+0x30]
   1400086e4:	lea    r8,[rax+0x38]
   1400086e8:	mov    rcx,QWORD PTR [rax+0x28]
   1400086ec:	lea    r9,[rax+0x30]
   1400086f0:	call   0x14000906c
   1400086f5:	cmp    eax,0x8000000b
   1400086fa:	mov    esi,eax
   1400086fc:	cmove  esi,ebp
   1400086ff:	test   esi,esi
   140008701:	js     0x140008719
   140008703:	mov    ebx,ebp
   140008705:	mov    QWORD PTR [r14],rdi
   140008708:	jmp    0x140008719
   14000870a:	mov    esi,0x8007000e
   14000870f:	xor    edx,edx
   140008711:	mov    ecx,esi
   140008713:	call   QWORD PTR [rip+0x4b57]        # 0x14000d270
   140008719:	test   rbx,rbx
   14000871c:	je     0x140008733
   14000871e:	mov    rcx,QWORD PTR [rbx]
   140008721:	mov    rdi,QWORD PTR [rcx+0x10]
   140008725:	mov    rcx,rdi
   140008728:	call   QWORD PTR [rip+0x4d8a]        # 0x14000d4b8
   14000872e:	mov    rcx,rbx
   140008731:	call   rdi
   140008733:	mov    rbx,QWORD PTR [rsp+0x30]
   140008738:	mov    eax,esi
   14000873a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000873f:	mov    rbp,QWORD PTR [rsp+0x38]
   140008744:	mov    rdi,QWORD PTR [rsp+0x48]
   140008749:	add    rsp,0x20
   14000874d:	pop    r14
   14000874f:	ret    
   140008750:	int3   
   140008751:	int3   
   140008752:	int3   
   140008753:	int3   
   140008754:	int3   
   140008755:	int3   
   140008756:	int3   
   140008757:	int3   
   140008758:	int3   
   140008759:	int3   
   14000875a:	int3   
   14000875b:	int3   
   14000875c:	int3   
   14000875d:	int3   
   14000875e:	int3   
   14000875f:	int3   
   140008760:	mov    r11,rsp
   140008763:	mov    QWORD PTR [r11+0x18],rbx
   140008767:	mov    QWORD PTR [r11+0x20],rsi
   14000876b:	push   rdi
   14000876c:	sub    rsp,0x20
   140008770:	mov    rsi,rdx
   140008773:	xor    ebx,ebx
   140008775:	mov    QWORD PTR [rdx],rbx
   140008778:	lea    rdx,[r11+0x10]
   14000877c:	mov    rax,QWORD PTR [rcx+0x18]
   140008780:	lea    rcx,[r11+0x8]
   140008784:	mov    QWORD PTR [r11+0x10],rax
   140008788:	call   0x140006edc
   14000878d:	mov    rdi,QWORD PTR [rax]
   140008790:	mov    QWORD PTR [rax],rbx
   140008793:	mov    rcx,QWORD PTR [rsp+0x30]
   140008798:	mov    QWORD PTR [rsp+0x38],rdi
   14000879d:	test   rcx,rcx
   1400087a0:	je     0x1400087ac
   1400087a2:	mov    QWORD PTR [rsp+0x30],rbx
   1400087a7:	call   0x14000aa10
   1400087ac:	test   rdi,rdi
   1400087af:	jne    0x1400087b8
   1400087b1:	mov    ebx,0x8007000e
   1400087b6:	jmp    0x1400087c0
   1400087b8:	mov    QWORD PTR [rsp+0x38],rbx
   1400087bd:	mov    QWORD PTR [rsi],rdi
   1400087c0:	lea    rcx,[rsp+0x38]
   1400087c5:	call   0x140006384
   1400087ca:	mov    rsi,QWORD PTR [rsp+0x48]
   1400087cf:	mov    eax,ebx
   1400087d1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400087d6:	add    rsp,0x20
   1400087da:	pop    rdi
   1400087db:	ret    
   1400087dc:	int3   
   1400087dd:	int3   
   1400087de:	int3   
   1400087df:	int3   
   1400087e0:	int3   
   1400087e1:	int3   
   1400087e2:	int3   
   1400087e3:	int3   
   1400087e4:	mov    QWORD PTR [rsp+0x20],rbx
   1400087e9:	push   rbp
   1400087ea:	push   rsi
   1400087eb:	push   rdi
   1400087ec:	push   r12
   1400087ee:	push   r13
   1400087f0:	push   r14
   1400087f2:	push   r15
   1400087f4:	sub    rsp,0x20
   1400087f8:	lea    r13,[rcx+0x28]
   1400087fc:	mov    rbp,rcx
   1400087ff:	mov    rcx,r13
   140008802:	call   QWORD PTR [rip+0x4a18]        # 0x14000d220
   140008808:	lea    r12,[rbp+0x40]
   14000880c:	cmp    QWORD PTR [r12],0x0
   140008811:	je     0x140008967
   140008817:	lea    rcx,[rsp+0x68]
   14000881c:	call   0x140006f68
   140008821:	mov    rbx,QWORD PTR [rsp+0x68]
   140008826:	test   rbx,rbx
   140008829:	je     0x140008953
   14000882f:	mov    rdx,QWORD PTR [r12]
   140008833:	mov    rcx,rbx
   140008836:	call   0x140009a80
   14000883b:	mov    esi,eax
   14000883d:	test   eax,eax
   14000883f:	js     0x140008958
   140008845:	and    QWORD PTR [rsp+0x60],0x0
   14000884b:	lea    rdx,[rip+0x520e]        # 0x14000da60
   140008852:	mov    ecx,0x50
   140008857:	call   0x140004a7c
   14000885c:	test   rax,rax
   14000885f:	je     0x140008942
   140008865:	mov    rcx,rax
   140008868:	call   0x140007600
   14000886d:	mov    rdx,rax
   140008870:	lea    rcx,[rsp+0x60]
   140008875:	call   0x1400080e8
   14000887a:	mov    rdi,QWORD PTR [rsp+0x60]
   14000887f:	test   rdi,rdi
   140008882:	je     0x140008942
   140008888:	mov    rax,QWORD PTR [rbx+0x28]
   14000888c:	xor    esi,esi
   14000888e:	mov    r15d,DWORD PTR [rbp+0x48]
   140008892:	sub    r15d,DWORD PTR [rax+0xc]
   140008896:	cmp    DWORD PTR [rax+0xc],esi
   140008899:	je     0x1400088e7
   14000889b:	test   r15d,r15d
   14000889e:	je     0x1400088e7
   1400088a0:	mov    r14,QWORD PTR [r12]
   1400088a4:	cmp    QWORD PTR [rdi+0x40],r14
   1400088a8:	je     0x1400088db
   1400088aa:	test   r14,r14
   1400088ad:	je     0x1400088c4
   1400088af:	mov    rax,QWORD PTR [r14]
   1400088b2:	mov    rsi,QWORD PTR [rax+0x8]
   1400088b6:	mov    rcx,rsi
   1400088b9:	call   QWORD PTR [rip+0x4bf9]        # 0x14000d4b8
   1400088bf:	mov    rcx,r14
   1400088c2:	call   rsi
   1400088c4:	mov    rax,QWORD PTR [rdi+0x40]
   1400088c8:	lea    rcx,[rsp+0x70]
   1400088cd:	mov    QWORD PTR [rsp+0x70],rax
   1400088d2:	mov    QWORD PTR [rdi+0x40],r14
   1400088d6:	call   0x140006384
   1400088db:	mov    DWORD PTR [rdi+0x48],r15d
   1400088df:	xor    esi,esi
   1400088e1:	mov    BYTE PTR [rdi+0x4d],0x1
   1400088e5:	jmp    0x1400088f1
   1400088e7:	lea    rcx,[rsp+0x60]
   1400088ec:	call   0x140009cf8
   1400088f1:	cmp    QWORD PTR [rbp+0x30],rbx
   1400088f5:	je     0x14000892a
   1400088f7:	mov    rax,QWORD PTR [rbx+0x20]
   1400088fb:	test   rax,rax
   1400088fe:	js     0x14000890e
   140008900:	lea    rcx,[rax+0x1]
   140008904:	lock cmpxchg QWORD PTR [rbx+0x20],rcx
   14000890a:	jne    0x1400088fb
   14000890c:	jmp    0x140008913
   14000890e:	lock inc DWORD PTR [rax+rax*1+0x10]
   140008913:	mov    rcx,QWORD PTR [rbp+0x30]
   140008917:	mov    rbx,QWORD PTR [rsp+0x68]
   14000891c:	mov    QWORD PTR [rbp+0x30],rbx
   140008920:	test   rcx,rcx
   140008923:	je     0x14000892a
   140008925:	call   0x14000ab30
   14000892a:	lea    rcx,[rbp+0x38]
   14000892e:	lea    rdx,[rsp+0x60]
   140008933:	call   0x140007aa0
   140008938:	mov    rcx,r12
   14000893b:	call   0x140006384
   140008940:	jmp    0x140008947
   140008942:	mov    esi,0x8007000e
   140008947:	lea    rcx,[rsp+0x60]
   14000894c:	call   0x140009cf8
   140008951:	jmp    0x140008958
   140008953:	mov    esi,0x8007000e
   140008958:	test   rbx,rbx
   14000895b:	je     0x140008969
   14000895d:	mov    rcx,rbx
   140008960:	call   0x14000ab30
   140008965:	jmp    0x140008969
   140008967:	xor    esi,esi
   140008969:	test   r13,r13
   14000896c:	je     0x140008977
   14000896e:	mov    rcx,r13
   140008971:	call   QWORD PTR [rip+0x48a1]        # 0x14000d218
   140008977:	mov    eax,esi
   140008979:	mov    rbx,QWORD PTR [rsp+0x78]
   14000897e:	add    rsp,0x20
   140008982:	pop    r15
   140008984:	pop    r14
   140008986:	pop    r13
   140008988:	pop    r12
   14000898a:	pop    rdi
   14000898b:	pop    rsi
   14000898c:	pop    rbp
   14000898d:	ret    
   14000898e:	int3   
   14000898f:	int3   
   140008990:	int3   
   140008991:	int3   
   140008992:	int3   
   140008993:	int3   
   140008994:	rex push rbx
   140008996:	push   rbp
   140008997:	push   rsi
   140008998:	push   rdi
   140008999:	push   r14
   14000899b:	sub    rsp,0x40
   14000899f:	and    QWORD PTR [r8],0x0
   1400089a3:	lea    rsi,[rcx+0x38]
   1400089a7:	mov    rax,QWORD PTR [rsi]
   1400089aa:	mov    r14,r8
   1400089ad:	mov    rbp,rdx
   1400089b0:	mov    rdi,rcx
   1400089b3:	test   rax,rax
   1400089b6:	jne    0x1400089cc
   1400089b8:	mov    ebx,0x8000000b
   1400089bd:	xor    edx,edx
   1400089bf:	mov    ecx,ebx
   1400089c1:	call   QWORD PTR [rip+0x48a9]        # 0x14000d270
   1400089c7:	jmp    0x140008ab1
   1400089cc:	call   0x140009bd0
   1400089d1:	mov    ebx,eax
   1400089d3:	test   eax,eax
   1400089d5:	js     0x140008ab1
   1400089db:	lea    r8,[rsp+0x80]
   1400089e3:	mov    rdx,rbp
   1400089e6:	mov    rcx,rdi
   1400089e9:	call   0x140008ac4
   1400089ee:	mov    ebx,eax
   1400089f0:	test   eax,eax
   1400089f2:	js     0x140008ab1
   1400089f8:	xor    edx,edx
   1400089fa:	mov    rcx,rbp
   1400089fd:	call   QWORD PTR [rip+0x48b5]        # 0x14000d2b8
   140008a03:	cmp    DWORD PTR [rsp+0x80],0x5
   140008a0b:	je     0x140008a73
   140008a0d:	cmp    DWORD PTR [rsp+0x80],0xc
   140008a15:	jne    0x140008ab1
   140008a1b:	and    QWORD PTR [rsp+0x30],0x0
   140008a21:	lea    rcx,[rsp+0x70]
   140008a26:	mov    QWORD PTR [rsp+0x20],rcx
   140008a2b:	lea    r9,[rsp+0x30]
   140008a30:	mov    rcx,rsi
   140008a33:	mov    rdx,rax
   140008a36:	call   0x140007144
   140008a3b:	mov    ebx,eax
   140008a3d:	test   eax,eax
   140008a3f:	js     0x140008a67
   140008a41:	mov    rdi,QWORD PTR [rdi+0x40]
   140008a45:	mov    rax,QWORD PTR [rdi]
   140008a48:	mov    rbx,QWORD PTR [rax+0x90]
   140008a4f:	mov    rcx,rbx
   140008a52:	call   QWORD PTR [rip+0x4a60]        # 0x14000d4b8
   140008a58:	mov    rdx,QWORD PTR [rsp+0x30]
   140008a5d:	mov    r8,r14
   140008a60:	mov    rcx,rdi
   140008a63:	call   rbx
   140008a65:	mov    ebx,eax
   140008a67:	lea    rcx,[rsp+0x30]
   140008a6c:	call   0x1400062f0
   140008a71:	jmp    0x140008ab1
   140008a73:	lea    r8,[rsp+0x88]
   140008a7b:	mov    rdx,rax
   140008a7e:	mov    rcx,rsi
   140008a81:	call   0x1400063c4
   140008a86:	mov    ebx,eax
   140008a88:	test   eax,eax
   140008a8a:	js     0x140008ab1
   140008a8c:	mov    rdi,QWORD PTR [rdi+0x40]
   140008a90:	mov    rax,QWORD PTR [rdi]
   140008a93:	mov    rbx,QWORD PTR [rax+0x58]
   140008a97:	mov    rcx,rbx
   140008a9a:	call   QWORD PTR [rip+0x4a18]        # 0x14000d4b8
   140008aa0:	mov    edx,DWORD PTR [rsp+0x88]
   140008aa7:	mov    r8,r14
   140008aaa:	mov    rcx,rdi
   140008aad:	call   rbx
   140008aaf:	mov    ebx,eax
   140008ab1:	mov    eax,ebx
   140008ab3:	add    rsp,0x40
   140008ab7:	pop    r14
   140008ab9:	pop    rdi
   140008aba:	pop    rsi
   140008abb:	pop    rbp
   140008abc:	pop    rbx
   140008abd:	ret    
   140008abe:	int3   
   140008abf:	int3   
   140008ac0:	int3   
   140008ac1:	int3   
   140008ac2:	int3   
   140008ac3:	int3   
   140008ac4:	mov    QWORD PTR [rsp+0x10],rbx
   140008ac9:	mov    QWORD PTR [rsp+0x18],rbp
   140008ace:	push   rsi
   140008acf:	push   rdi
   140008ad0:	push   r14
   140008ad2:	sub    rsp,0x20
   140008ad6:	lea    r14,[rcx+0x38]
   140008ada:	mov    rsi,r8
   140008add:	mov    rax,QWORD PTR [r14]
   140008ae0:	mov    rbp,rdx
   140008ae3:	test   rax,rax
   140008ae6:	jne    0x140008af2
   140008ae8:	mov    eax,0x8000000b
   140008aed:	jmp    0x140008b87
   140008af2:	and    DWORD PTR [rsp+0x40],0x0
   140008af7:	lea    r9,[rsp+0x40]
   140008afc:	xor    r8d,r8d
   140008aff:	mov    rcx,r14
   140008b02:	call   0x1400070e4
   140008b07:	mov    ebx,eax
   140008b09:	cmp    eax,0x8007007a
   140008b0e:	jne    0x140008b77
   140008b10:	mov    ecx,DWORD PTR [rsp+0x40]
   140008b14:	call   QWORD PTR [rip+0x4566]        # 0x14000d080
   140008b1a:	mov    rdi,rax
   140008b1d:	test   rax,rax
   140008b20:	je     0x140008b68
   140008b22:	lea    r9,[rsp+0x40]
   140008b27:	mov    r8,rax
   140008b2a:	mov    rdx,rbp
   140008b2d:	mov    rcx,r14
   140008b30:	call   0x1400070e4
   140008b35:	mov    ebx,eax
   140008b37:	test   eax,eax
   140008b39:	js     0x140008b5d
   140008b3b:	mov    ecx,DWORD PTR [rdi+0x4]
   140008b3e:	sub    ecx,0x1
   140008b41:	je     0x140008b57
   140008b43:	cmp    ecx,0x3
   140008b46:	je     0x140008b4f
   140008b48:	mov    ebx,0x80040153
   140008b4d:	jmp    0x140008b5d
   140008b4f:	mov    DWORD PTR [rsi],0x5
   140008b55:	jmp    0x140008b5d
   140008b57:	mov    DWORD PTR [rsi],0xc
   140008b5d:	mov    rcx,rdi
   140008b60:	call   QWORD PTR [rip+0x44d2]        # 0x14000d038
   140008b66:	jmp    0x140008b77
   140008b68:	mov    ebx,0x8007000e
   140008b6d:	xor    edx,edx
   140008b6f:	mov    ecx,ebx
   140008b71:	call   QWORD PTR [rip+0x46f9]        # 0x14000d270
   140008b77:	mov    eax,0x8000000b
   140008b7c:	cmp    ebx,0x80070002
   140008b82:	cmove  ebx,eax
   140008b85:	mov    eax,ebx
   140008b87:	mov    rbx,QWORD PTR [rsp+0x48]
   140008b8c:	mov    rbp,QWORD PTR [rsp+0x50]
   140008b91:	add    rsp,0x20
   140008b95:	pop    r14
   140008b97:	pop    rdi
   140008b98:	pop    rsi
   140008b99:	ret    
   140008b9a:	int3   
   140008b9b:	int3   
   140008b9c:	int3   
   140008b9d:	int3   
   140008b9e:	int3   
   140008b9f:	int3   
   140008ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ba5:	mov    QWORD PTR [rsp+0x10],rsi
   140008baa:	push   rdi
   140008bab:	sub    rsp,0x40
   140008baf:	mov    rax,QWORD PTR [rcx]
   140008bb2:	mov    rdi,rcx
   140008bb5:	mov    rsi,rdx
   140008bb8:	mov    rbx,QWORD PTR [rax+0x28]
   140008bbc:	mov    rcx,rbx
   140008bbf:	call   QWORD PTR [rip+0x48f3]        # 0x14000d4b8
   140008bc5:	mov    rcx,rdi
   140008bc8:	call   rbx
   140008bca:	test   eax,eax
   140008bcc:	js     0x140008bdd
   140008bce:	lea    rcx,[rdi+0x40]
   140008bd2:	xor    r9d,r9d
   140008bd5:	mov    rdx,rsi
   140008bd8:	call   0x14000a2a4
   140008bdd:	mov    rbx,QWORD PTR [rsp+0x50]
   140008be2:	mov    rsi,QWORD PTR [rsp+0x58]
   140008be7:	add    rsp,0x40
   140008beb:	pop    rdi
   140008bec:	ret    
   140008bed:	int3   
   140008bee:	int3   
   140008bef:	int3   
   140008bf0:	int3   
   140008bf1:	int3   
   140008bf2:	int3   
   140008bf3:	int3   
   140008bf4:	int3   
   140008bf5:	int3   
   140008bf6:	int3   
   140008bf7:	int3   
   140008bf8:	int3   
   140008bf9:	int3   
   140008bfa:	int3   
   140008bfb:	int3   
   140008bfc:	int3   
   140008bfd:	int3   
   140008bfe:	int3   
   140008bff:	int3   
   140008c00:	mov    QWORD PTR [rsp+0x8],rbx
   140008c05:	mov    QWORD PTR [rsp+0x10],rsi
   140008c0a:	push   rdi
   140008c0b:	sub    rsp,0x40
   140008c0f:	mov    rax,QWORD PTR [rcx]
   140008c12:	mov    rdi,rcx
   140008c15:	mov    rsi,rdx
   140008c18:	mov    rbx,QWORD PTR [rax+0x28]
   140008c1c:	mov    rcx,rbx
   140008c1f:	call   QWORD PTR [rip+0x4893]        # 0x14000d4b8
   140008c25:	mov    rcx,rdi
   140008c28:	call   rbx
   140008c2a:	test   eax,eax
   140008c2c:	js     0x140008c53
   140008c2e:	mov    rax,QWORD PTR [rdi]
   140008c31:	mov    rbx,QWORD PTR [rax+0x20]
   140008c35:	mov    rcx,rbx
   140008c38:	call   QWORD PTR [rip+0x487a]        # 0x14000d4b8
   140008c3e:	mov    dl,0x1
   140008c40:	mov    rcx,rdi
   140008c43:	call   rbx
   140008c45:	xor    r9d,r9d
   140008c48:	mov    rdx,rsi
   140008c4b:	mov    rcx,rax
   140008c4e:	call   0x14000a2a4
   140008c53:	mov    rbx,QWORD PTR [rsp+0x50]
   140008c58:	mov    rsi,QWORD PTR [rsp+0x58]
   140008c5d:	add    rsp,0x40
   140008c61:	pop    rdi
   140008c62:	ret    
   140008c63:	int3   
   140008c64:	int3   
   140008c65:	int3   
   140008c66:	int3   
   140008c67:	int3   
   140008c68:	int3   
   140008c69:	int3   
   140008c6a:	int3   
   140008c6b:	int3   
   140008c6c:	int3   
   140008c6d:	int3   
   140008c6e:	int3   
   140008c6f:	int3   
   140008c70:	mov    QWORD PTR [rsp+0x20],rbx
   140008c75:	push   rbp
   140008c76:	push   rsi
   140008c77:	push   rdi
   140008c78:	sub    rsp,0x270
   140008c7f:	mov    rax,QWORD PTR [rip+0x9382]        # 0x140012008
   140008c86:	xor    rax,rsp
   140008c89:	mov    QWORD PTR [rsp+0x260],rax
   140008c91:	mov    rax,QWORD PTR [rcx]
   140008c94:	mov    rdi,rcx
   140008c97:	mov    rsi,r8
   140008c9a:	mov    ebp,edx
   140008c9c:	mov    rbx,QWORD PTR [rax+0x28]
   140008ca0:	mov    rcx,rbx
   140008ca3:	call   QWORD PTR [rip+0x480f]        # 0x14000d4b8
   140008ca9:	mov    rcx,rdi
   140008cac:	call   rbx
   140008cae:	xor    ebx,ebx
   140008cb0:	test   eax,eax
   140008cb2:	js     0x140008d08
   140008cb4:	mov    rcx,QWORD PTR [rdi+0x40]
   140008cb8:	lea    r9,[rsp+0x40]
   140008cbd:	mov    QWORD PTR [rsp+0x38],rbx
   140008cc2:	lea    r8,[rsp+0x50]
   140008cc7:	mov    QWORD PTR [rsp+0x30],rbx
   140008ccc:	mov    edx,ebp
   140008cce:	mov    QWORD PTR [rsp+0x28],rbx
   140008cd3:	mov    QWORD PTR [rsp+0x20],rbx
   140008cd8:	mov    DWORD PTR [rsp+0x40],0x104
   140008ce0:	call   QWORD PTR [rip+0x44c2]        # 0x14000d1a8
   140008ce6:	test   eax,eax
   140008ce8:	jle    0x140008cf4
   140008cea:	movzx  eax,ax
   140008ced:	or     eax,0x80070000
   140008cf2:	test   eax,eax
   140008cf4:	js     0x140008d08
   140008cf6:	mov    r8d,DWORD PTR [rsp+0x40]
   140008cfb:	lea    rdx,[rsp+0x50]
   140008d00:	mov    rcx,rsi
   140008d03:	call   0x140006310
   140008d08:	mov    rcx,QWORD PTR [rsp+0x260]
   140008d10:	xor    rcx,rsp
   140008d13:	call   0x140004450
   140008d18:	mov    rbx,QWORD PTR [rsp+0x2a8]
   140008d20:	add    rsp,0x270
   140008d27:	pop    rdi
   140008d28:	pop    rsi
   140008d29:	pop    rbp
   140008d2a:	ret    
   140008d2b:	int3   
   140008d2c:	int3   
   140008d2d:	int3   
   140008d2e:	int3   
   140008d2f:	int3   
   140008d30:	int3   
   140008d31:	int3   
   140008d32:	int3   
   140008d33:	int3   
   140008d34:	int3   
   140008d35:	int3   
   140008d36:	int3   
   140008d37:	int3   
   140008d38:	int3   
   140008d39:	int3   
   140008d3a:	int3   
   140008d3b:	int3   
   140008d3c:	int3   
   140008d3d:	int3   
   140008d3e:	int3   
   140008d3f:	int3   
   140008d40:	mov    QWORD PTR [rsp+0x8],rbx
   140008d45:	mov    QWORD PTR [rsp+0x10],rsi
   140008d4a:	push   rdi
   140008d4b:	sub    rsp,0x20
   140008d4f:	xor    ebx,ebx
   140008d51:	mov    rdi,r8
   140008d54:	mov    QWORD PTR [r8],rbx
   140008d57:	mov    rsi,rdx
   140008d5a:	mov    DWORD PTR [rdx],ebx
   140008d5c:	lea    ecx,[rbx+0x20]
   140008d5f:	call   QWORD PTR [rip+0x431b]        # 0x14000d080
   140008d65:	test   rax,rax
   140008d68:	jne    0x140008d71
   140008d6a:	mov    ebx,0x8007000e
   140008d6f:	jmp    0x140008d91
   140008d71:	movups xmm0,XMMWORD PTR [rip+0x6010]        # 0x14000ed88
   140008d78:	movdqu XMMWORD PTR [rax],xmm0
   140008d7c:	movups xmm1,XMMWORD PTR [rip+0x5ff5]        # 0x14000ed78
   140008d83:	movdqu XMMWORD PTR [rax+0x10],xmm1
   140008d88:	mov    DWORD PTR [rsi],0x2
   140008d8e:	mov    QWORD PTR [rdi],rax
   140008d91:	mov    rsi,QWORD PTR [rsp+0x38]
   140008d96:	mov    eax,ebx
   140008d98:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d9d:	add    rsp,0x20
   140008da1:	pop    rdi
   140008da2:	ret    
   140008da3:	int3   
   140008da4:	int3   
   140008da5:	int3   
   140008da6:	int3   
   140008da7:	int3   
   140008da8:	int3   
   140008da9:	int3   
   140008daa:	int3   
   140008dab:	int3   
   140008dac:	int3   
   140008dad:	int3   
   140008dae:	int3   
   140008daf:	int3   
   140008db0:	mov    QWORD PTR [rsp+0x8],rbx
   140008db5:	mov    QWORD PTR [rsp+0x10],rsi
   140008dba:	push   rdi
   140008dbb:	sub    rsp,0x20
   140008dbf:	xor    ebx,ebx
   140008dc1:	mov    rdi,r8
   140008dc4:	mov    QWORD PTR [r8],rbx
   140008dc7:	mov    rsi,rdx
   140008dca:	mov    DWORD PTR [rdx],ebx
   140008dcc:	lea    ecx,[rbx+0x40]
   140008dcf:	call   QWORD PTR [rip+0x42ab]        # 0x14000d080
   140008dd5:	test   rax,rax
   140008dd8:	jne    0x140008de1
   140008dda:	mov    ebx,0x8007000e
   140008ddf:	jmp    0x140008e19
   140008de1:	movups xmm0,XMMWORD PTR [rip+0x5f50]        # 0x14000ed38
   140008de8:	movdqu XMMWORD PTR [rax],xmm0
   140008dec:	movups xmm1,XMMWORD PTR [rip+0x5f85]        # 0x14000ed78
   140008df3:	movdqu XMMWORD PTR [rax+0x10],xmm1
   140008df8:	movups xmm0,XMMWORD PTR [rip+0x54a1]        # 0x14000e2a0
   140008dff:	movdqu XMMWORD PTR [rax+0x20],xmm0
   140008e04:	movups xmm1,XMMWORD PTR [rip+0x4a75]        # 0x14000d880
   140008e0b:	movdqu XMMWORD PTR [rax+0x30],xmm1
   140008e10:	mov    DWORD PTR [rsi],0x4
   140008e16:	mov    QWORD PTR [rdi],rax
   140008e19:	mov    rsi,QWORD PTR [rsp+0x38]
   140008e1e:	mov    eax,ebx
   140008e20:	mov    rbx,QWORD PTR [rsp+0x30]
   140008e25:	add    rsp,0x20
   140008e29:	pop    rdi
   140008e2a:	ret    
   140008e2b:	int3   
   140008e2c:	int3   
   140008e2d:	int3   
   140008e2e:	int3   
   140008e2f:	int3   
   140008e30:	int3   
   140008e31:	int3   
   140008e32:	int3   
   140008e33:	int3   
   140008e34:	int3   
   140008e35:	int3   
   140008e36:	int3   
   140008e37:	int3   
   140008e38:	int3   
   140008e39:	int3   
   140008e3a:	int3   
   140008e3b:	int3   
   140008e3c:	int3   
   140008e3d:	int3   
   140008e3e:	int3   
   140008e3f:	int3   
   140008e40:	mov    QWORD PTR [rsp+0x8],rbx
   140008e45:	mov    QWORD PTR [rsp+0x10],rsi
   140008e4a:	push   rdi
   140008e4b:	sub    rsp,0x20
   140008e4f:	xor    ebx,ebx
   140008e51:	mov    rdi,r8
   140008e54:	mov    QWORD PTR [r8],rbx
   140008e57:	mov    rsi,rdx
   140008e5a:	mov    DWORD PTR [rdx],ebx
   140008e5c:	lea    ecx,[rbx+0x30]
   140008e5f:	call   QWORD PTR [rip+0x421b]        # 0x14000d080
   140008e65:	test   rax,rax
   140008e68:	jne    0x140008e71
   140008e6a:	mov    ebx,0x8007000e
   140008e6f:	jmp    0x140008e9d
   140008e71:	movups xmm0,XMMWORD PTR [rip+0x5ec0]        # 0x14000ed38
   140008e78:	movdqu XMMWORD PTR [rax],xmm0
   140008e7c:	movups xmm1,XMMWORD PTR [rip+0x5ef5]        # 0x14000ed78
   140008e83:	movdqu XMMWORD PTR [rax+0x10],xmm1
   140008e88:	movups xmm0,XMMWORD PTR [rip+0x5411]        # 0x14000e2a0
   140008e8f:	movdqu XMMWORD PTR [rax+0x20],xmm0
   140008e94:	mov    DWORD PTR [rsi],0x3
   140008e9a:	mov    QWORD PTR [rdi],rax
   140008e9d:	mov    rsi,QWORD PTR [rsp+0x38]
   140008ea2:	mov    eax,ebx
   140008ea4:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ea9:	add    rsp,0x20
   140008ead:	pop    rdi
   140008eae:	ret    
   140008eaf:	int3   
   140008eb0:	int3   
   140008eb1:	int3   
   140008eb2:	int3   
   140008eb3:	int3   
   140008eb4:	int3   
   140008eb5:	int3   
   140008eb6:	int3   
   140008eb7:	int3   
   140008eb8:	int3   
   140008eb9:	int3   
   140008eba:	int3   
   140008ebb:	int3   
   140008ebc:	int3   
   140008ebd:	int3   
   140008ebe:	int3   
   140008ebf:	int3   
   140008ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ec5:	mov    QWORD PTR [rsp+0x10],rsi
   140008eca:	push   rdi
   140008ecb:	sub    rsp,0x20
   140008ecf:	xor    ebx,ebx
   140008ed1:	mov    rdi,r8
   140008ed4:	mov    QWORD PTR [r8],rbx
   140008ed7:	mov    rsi,rdx
   140008eda:	mov    DWORD PTR [rdx],ebx
   140008edc:	lea    ecx,[rbx+0x20]
   140008edf:	call   QWORD PTR [rip+0x419b]        # 0x14000d080
   140008ee5:	test   rax,rax
   140008ee8:	jne    0x140008ef1
   140008eea:	mov    ebx,0x8007000e
   140008eef:	jmp    0x140008f11
   140008ef1:	movups xmm0,XMMWORD PTR [rip+0x5e60]        # 0x14000ed58
   140008ef8:	movdqu XMMWORD PTR [rax],xmm0
   140008efc:	movups xmm1,XMMWORD PTR [rip+0x5e75]        # 0x14000ed78
   140008f03:	movdqu XMMWORD PTR [rax+0x10],xmm1
   140008f08:	mov    DWORD PTR [rsi],0x2
   140008f0e:	mov    QWORD PTR [rdi],rax
   140008f11:	mov    rsi,QWORD PTR [rsp+0x38]
   140008f16:	mov    eax,ebx
   140008f18:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f1d:	add    rsp,0x20
   140008f21:	pop    rdi
   140008f22:	ret    
   140008f23:	int3   
   140008f24:	int3   
   140008f25:	int3   
   140008f26:	int3   
   140008f27:	int3   
   140008f28:	int3   
   140008f29:	int3   
   140008f2a:	int3   
   140008f2b:	int3   
   140008f2c:	mov    QWORD PTR [rsp+0x18],rbx
   140008f31:	push   rdi
   140008f32:	sub    rsp,0x70
   140008f36:	mov    rax,QWORD PTR [rip+0x90cb]        # 0x140012008
   140008f3d:	xor    rax,rsp
   140008f40:	mov    QWORD PTR [rsp+0x60],rax
   140008f45:	mov    rdi,rdx
   140008f48:	mov    rbx,rcx
   140008f4b:	xor    edx,edx
   140008f4d:	lea    rcx,[rsp+0x38]
   140008f52:	lea    r8d,[rdx+0x28]
   140008f56:	call   0x140004b56
   140008f5b:	mov    rcx,QWORD PTR [rbx+0x40]
   140008f5f:	lea    rax,[rsp+0x30]
   140008f64:	mov    r9d,0x28
   140008f6a:	mov    DWORD PTR [rsp+0x30],0x28
   140008f72:	lea    r8,[rsp+0x38]
   140008f77:	mov    QWORD PTR [rsp+0x20],rax
   140008f7c:	lea    edx,[r9-0x24]
   140008f80:	call   QWORD PTR [rip+0x450a]        # 0x14000d490
   140008f86:	mov    ecx,eax
   140008f88:	call   QWORD PTR [rip+0x44d2]        # 0x14000d460
   140008f8e:	test   eax,eax
   140008f90:	jle    0x140008f9c
   140008f92:	movzx  eax,ax
   140008f95:	or     eax,0x80070000
   140008f9a:	test   eax,eax
   140008f9c:	js     0x140008fa6
   140008f9e:	mov    rcx,QWORD PTR [rsp+0x38]
   140008fa3:	mov    QWORD PTR [rdi],rcx
   140008fa6:	mov    rcx,QWORD PTR [rsp+0x60]
   140008fab:	xor    rcx,rsp
   140008fae:	call   0x140004450
   140008fb3:	mov    rbx,QWORD PTR [rsp+0x90]
   140008fbb:	add    rsp,0x70
   140008fbf:	pop    rdi
   140008fc0:	ret    
   140008fc1:	int3   
   140008fc2:	int3   
   140008fc3:	int3   
   140008fc4:	int3   
   140008fc5:	int3   
   140008fc6:	int3   
   140008fc7:	int3   
   140008fc8:	int3   
   140008fc9:	int3   
   140008fca:	int3   
   140008fcb:	int3   
   140008fcc:	int3   
   140008fcd:	int3   
   140008fce:	int3   
   140008fcf:	int3   
   140008fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140008fd5:	mov    QWORD PTR [rsp+0x10],rsi
   140008fda:	push   rdi
   140008fdb:	sub    rsp,0x20
   140008fdf:	mov    rsi,r8
   140008fe2:	mov    rdi,rcx
   140008fe5:	test   edx,edx
   140008fe7:	je     0x140009018
   140008fe9:	cmp    edx,0x1
   140008fec:	je     0x140008ff5
   140008fee:	mov    eax,0x80004005
   140008ff3:	jmp    0x14000903c
   140008ff5:	mov    rdi,QWORD PTR [rcx+0x18]
   140008ff9:	mov    rax,QWORD PTR [rdi]
   140008ffc:	mov    rbx,QWORD PTR [rax+0x58]
   140009000:	mov    rcx,rbx
   140009003:	call   QWORD PTR [rip+0x44af]        # 0x14000d4b8
   140009009:	mov    r8,rsi
   14000900c:	mov    edx,0x1
   140009011:	mov    rcx,rdi
   140009014:	call   rbx
   140009016:	jmp    0x14000903c
   140009018:	mov    rax,QWORD PTR [rcx]
   14000901b:	mov    rbx,QWORD PTR [rax+0x28]
   14000901f:	mov    rcx,rbx
   140009022:	call   QWORD PTR [rip+0x4490]        # 0x14000d4b8
   140009028:	mov    rcx,rdi
   14000902b:	call   rbx
   14000902d:	test   eax,eax
   14000902f:	js     0x14000903c
   140009031:	mov    rdx,rsi
   140009034:	mov    rcx,rdi
   140009037:	call   0x140008f2c
   14000903c:	mov    rbx,QWORD PTR [rsp+0x30]
   140009041:	mov    rsi,QWORD PTR [rsp+0x38]
   140009046:	add    rsp,0x20
   14000904a:	pop    rdi
   14000904b:	ret    
   14000904c:	int3   
   14000904d:	int3   
   14000904e:	int3   
   14000904f:	int3   
   140009050:	int3   
   140009051:	int3   
   140009052:	int3   
   140009053:	int3   
   140009054:	int3   
   140009055:	int3   
   140009056:	int3   
   140009057:	int3   
   140009058:	int3   
   140009059:	int3   
   14000905a:	int3   
   14000905b:	int3   
   14000905c:	int3   
   14000905d:	int3   
   14000905e:	int3   
   14000905f:	int3   
   140009060:	jmp    0x140007520
   140009065:	int3   
   140009066:	int3   
   140009067:	int3   
   140009068:	int3   
   140009069:	int3   
   14000906a:	int3   
   14000906b:	int3   
   14000906c:	rex push rbp
   14000906e:	push   rbx
   14000906f:	push   rsi
   140009070:	push   rdi
   140009071:	push   r12
   140009073:	push   r13
   140009075:	push   r14
   140009077:	push   r15
   140009079:	lea    rbp,[rsp-0x1e8]
   140009081:	sub    rsp,0x2e8
   140009088:	mov    rax,QWORD PTR [rip+0x8f79]        # 0x140012008
   14000908f:	xor    rax,rsp
   140009092:	mov    QWORD PTR [rbp+0x1d0],rax
   140009099:	xor    esi,esi
   14000909b:	mov    QWORD PTR [rbp-0x60],r9
   14000909f:	mov    QWORD PTR [r8],rsi
   1400090a2:	lea    r13,[rcx+0x38]
   1400090a6:	mov    DWORD PTR [r9],esi
   1400090a9:	mov    r12d,edx
   1400090ac:	mov    rax,QWORD PTR [r13+0x0]
   1400090b0:	mov    rdi,rcx
   1400090b3:	mov    QWORD PTR [rbp-0x70],r8
   1400090b7:	mov    QWORD PTR [rsp+0x58],rcx
   1400090bc:	test   rax,rax
   1400090bf:	jne    0x1400090cc
   1400090c1:	mov    r14d,0x8000000b
   1400090c7:	jmp    0x1400092cb
   1400090cc:	lea    rax,[rsp+0x44]
   1400090d1:	mov    DWORD PTR [rsp+0x40],0x104
   1400090d9:	lea    r9,[rsp+0x40]
   1400090de:	mov    QWORD PTR [rsp+0x20],rax
   1400090e3:	lea    r8,[rbp-0x40]
   1400090e7:	mov    DWORD PTR [rsp+0x44],esi
   1400090eb:	mov    edx,r12d
   1400090ee:	lea    rbx,[rbp-0x40]
   1400090f2:	mov    rcx,r13
   1400090f5:	mov    r15,rsi
   1400090f8:	call   0x1400085b8
   1400090fd:	mov    r14d,eax
   140009100:	cmp    eax,0x8007007a
   140009105:	jne    0x140009184
   140009107:	cmp    DWORD PTR [rsp+0x44],0x1
   14000910c:	je     0x140009120
   14000910e:	cmp    DWORD PTR [rsp+0x44],0x4
   140009113:	je     0x140009120
   140009115:	mov    r14d,0x80040153
   14000911b:	jmp    0x1400092a1
   140009120:	mov    ecx,DWORD PTR [rsp+0x40]
   140009124:	mov    eax,0x2
   140009129:	inc    ecx
   14000912b:	mul    rcx
   14000912e:	mov    rcx,0xffffffffffffffff
   140009135:	cmovo  rax,rcx
   140009139:	mov    rcx,rax
   14000913c:	call   QWORD PTR [rip+0x3f3e]        # 0x14000d080
   140009142:	mov    r15,rax
   140009145:	mov    rbx,rax
   140009148:	test   rax,rax
   14000914b:	jne    0x140009164
   14000914d:	mov    eax,0x8007000e
   140009152:	xor    edx,edx
   140009154:	mov    ecx,eax
   140009156:	mov    r14d,eax
   140009159:	call   QWORD PTR [rip+0x4111]        # 0x14000d270
   14000915f:	jmp    0x1400092a1
   140009164:	lea    rax,[rsp+0x44]
   140009169:	mov    r8,r15
   14000916c:	lea    r9,[rsp+0x40]
   140009171:	mov    QWORD PTR [rsp+0x20],rax
   140009176:	mov    edx,r12d
   140009179:	mov    rcx,r13
   14000917c:	call   0x1400085b8
   140009181:	mov    r14d,eax
   140009184:	test   r14d,r14d
   140009187:	js     0x140009293
   14000918d:	mov    r8d,DWORD PTR [rsp+0x40]
   140009192:	lea    rcx,[rsp+0x48]
   140009197:	mov    rdx,rbx
   14000919a:	mov    QWORD PTR [rsp+0x48],rsi
   14000919f:	mov    QWORD PTR [rsp+0x70],rsi
   1400091a4:	mov    DWORD PTR [rsp+0x78],esi
   1400091a8:	call   0x140006310
   1400091ad:	mov    r14d,eax
   1400091b0:	test   eax,eax
   1400091b2:	js     0x14000927f
   1400091b8:	mov    rdx,QWORD PTR [rsp+0x48]
   1400091bd:	lea    rax,[rsp+0x70]
   1400091c2:	lea    r8,[rbp-0x78]
   1400091c6:	mov    QWORD PTR [rbp-0x80],rax
   1400091ca:	mov    rcx,rdi
   1400091cd:	mov    QWORD PTR [rbp-0x78],rsi
   1400091d1:	call   0x140008994
   1400091d6:	mov    rdx,QWORD PTR [rbp-0x78]
   1400091da:	lea    rcx,[rsp+0x60]
   1400091df:	mov    rsi,QWORD PTR [rbp-0x80]
   1400091e3:	mov    r14d,eax
   1400091e6:	call   0x14000783c
   1400091eb:	mov    rbx,QWORD PTR [rsp+0x60]
   1400091f0:	lea    rcx,[rsp+0x60]
   1400091f5:	mov    edi,DWORD PTR [rsp+0x68]
   1400091f9:	and    QWORD PTR [rsp+0x60],0x0
   1400091ff:	and    DWORD PTR [rsp+0x68],0x0
   140009204:	call   0x140007a58
   140009209:	mov    rax,QWORD PTR [rsi]
   14000920c:	lea    rcx,[rbp-0x58]
   140009210:	mov    QWORD PTR [rsi],rbx
   140009213:	mov    QWORD PTR [rbp-0x58],rax
   140009217:	mov    eax,DWORD PTR [rsi+0x8]
   14000921a:	mov    DWORD PTR [rsi+0x8],edi
   14000921d:	mov    DWORD PTR [rbp-0x50],eax
   140009220:	call   0x140007a58
   140009225:	xor    esi,esi
   140009227:	test   r14d,r14d
   14000922a:	js     0x14000927a
   14000922c:	mov    rax,QWORD PTR [rsp+0x70]
   140009231:	lea    r8,[rsp+0x50]
   140009236:	lea    rdx,[rbp-0x68]
   14000923a:	mov    QWORD PTR [rbp-0x68],rax
   14000923e:	lea    rcx,[rsp+0x48]
   140009243:	mov    QWORD PTR [rsp+0x50],rsi
   140009248:	call   0x140009fe0
   14000924d:	mov    r14d,eax
   140009250:	test   eax,eax
   140009252:	js     0x14000926b
   140009254:	mov    rax,QWORD PTR [rsp+0x50]
   140009259:	mov    ecx,esi
   14000925b:	mov    rdx,QWORD PTR [rbp-0x70]
   14000925f:	mov    QWORD PTR [rdx],rax
   140009262:	mov    rax,QWORD PTR [rbp-0x60]
   140009266:	mov    DWORD PTR [rax],r12d
   140009269:	jmp    0x140009270
   14000926b:	mov    rcx,QWORD PTR [rsp+0x50]
   140009270:	test   rcx,rcx
   140009273:	je     0x14000927a
   140009275:	call   0x14000aaa0
   14000927a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000927f:	lea    rcx,[rsp+0x70]
   140009284:	call   0x140007a58
   140009289:	lea    rcx,[rsp+0x48]
   14000928e:	call   0x1400062f0
   140009293:	test   r15,r15
   140009296:	je     0x1400092a1
   140009298:	mov    rcx,r15
   14000929b:	call   QWORD PTR [rip+0x3d97]        # 0x14000d038
   1400092a1:	inc    r12d
   1400092a4:	cmp    r14d,0x80040153
   1400092ab:	je     0x1400090cc
   1400092b1:	cmp    r14d,0x80070103
   1400092b8:	jne    0x1400092cb
   1400092ba:	mov    r14d,0x8000000b
   1400092c0:	xor    edx,edx
   1400092c2:	mov    ecx,r14d
   1400092c5:	call   QWORD PTR [rip+0x3fa5]        # 0x14000d270
   1400092cb:	mov    eax,r14d
   1400092ce:	mov    rcx,QWORD PTR [rbp+0x1d0]
   1400092d5:	xor    rcx,rsp
   1400092d8:	call   0x140004450
   1400092dd:	add    rsp,0x2e8
   1400092e4:	pop    r15
   1400092e6:	pop    r14
   1400092e8:	pop    r13
   1400092ea:	pop    r12
   1400092ec:	pop    rdi
   1400092ed:	pop    rsi
   1400092ee:	pop    rbx
   1400092ef:	pop    rbp
   1400092f0:	ret    
   1400092f1:	int3   
   1400092f2:	int3   
   1400092f3:	int3   
   1400092f4:	int3   
   1400092f5:	int3   
   1400092f6:	int3   
   1400092f7:	int3   
   1400092f8:	int3   
   1400092f9:	int3   
   1400092fa:	int3   
   1400092fb:	int3   
   1400092fc:	int3   
   1400092fd:	int3   
   1400092fe:	int3   
   1400092ff:	int3   
   140009300:	mov    QWORD PTR [rsp+0x8],rbx
   140009305:	mov    QWORD PTR [rsp+0x10],rsi
   14000930a:	push   rdi
   14000930b:	sub    rsp,0x20
   14000930f:	mov    rax,QWORD PTR [rcx+0x10]
   140009313:	mov    rsi,rdx
   140009316:	mov    rdi,rcx
   140009319:	cmp    BYTE PTR [rax+0x9],0x0
   14000931d:	je     0x140009343
   14000931f:	cmp    DWORD PTR [rax+0x4],0xffffffff
   140009323:	je     0x140009343
   140009325:	mov    rdi,QWORD PTR [rcx+0x18]
   140009329:	mov    rax,QWORD PTR [rdi]
   14000932c:	mov    rbx,QWORD PTR [rax+0x50]
   140009330:	mov    rcx,rbx
   140009333:	call   QWORD PTR [rip+0x417f]        # 0x14000d4b8
   140009339:	mov    rdx,rsi
   14000933c:	mov    rcx,rdi
   14000933f:	call   rbx
   140009341:	jmp    0x140009365
   140009343:	mov    rax,QWORD PTR [rcx]
   140009346:	mov    rbx,QWORD PTR [rax+0x10]
   14000934a:	mov    rcx,rbx
   14000934d:	call   QWORD PTR [rip+0x4165]        # 0x14000d4b8
   140009353:	mov    rcx,rdi
   140009356:	call   rbx
   140009358:	dec    eax
   14000935a:	neg    eax
   14000935c:	sbb    eax,eax
   14000935e:	and    eax,0x2
   140009361:	mov    DWORD PTR [rsi],eax
   140009363:	xor    eax,eax
   140009365:	mov    rbx,QWORD PTR [rsp+0x30]
   14000936a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000936f:	add    rsp,0x20
   140009373:	pop    rdi
   140009374:	ret    
   140009375:	int3   
   140009376:	int3   
   140009377:	int3   
   140009378:	int3   
   140009379:	int3   
   14000937a:	int3   
   14000937b:	int3   
   14000937c:	int3   
   14000937d:	int3   
   14000937e:	int3   
   14000937f:	int3   
   140009380:	and    QWORD PTR [rdx],0x0
   140009384:	lea    rcx,[rip+0x5915]        # 0x14000eca0
   14000938b:	mov    r8,rdx
   14000938e:	mov    edx,0x39
   140009393:	rex.W jmp QWORD PTR [rip+0x3f56]        # 0x14000d2f0
   14000939a:	int3   
   14000939b:	int3   
   14000939c:	int3   
   14000939d:	int3   
   14000939e:	int3   
   14000939f:	int3   
   1400093a0:	sub    rsp,0x28
   1400093a4:	and    QWORD PTR [rdx],0x0
   1400093a8:	mov    ecx,0x80004001
   1400093ad:	xor    edx,edx
   1400093af:	call   QWORD PTR [rip+0x3ebb]        # 0x14000d270
   1400093b5:	mov    eax,0x80004001
   1400093ba:	add    rsp,0x28
   1400093be:	ret    
   1400093bf:	int3   
   1400093c0:	int3   
   1400093c1:	int3   
   1400093c2:	int3   
   1400093c3:	int3   
   1400093c4:	int3   
   1400093c5:	int3   
   1400093c6:	int3   
   1400093c7:	int3   
   1400093c8:	int3   
   1400093c9:	int3   
   1400093ca:	int3   
   1400093cb:	int3   
   1400093cc:	int3   
   1400093cd:	int3   
   1400093ce:	int3   
   1400093cf:	int3   
   1400093d0:	and    QWORD PTR [rdx],0x0
   1400093d4:	lea    rcx,[rip+0x5685]        # 0x14000ea60
   1400093db:	mov    r8,rdx
   1400093de:	mov    edx,0x3e
   1400093e3:	rex.W jmp QWORD PTR [rip+0x3f06]        # 0x14000d2f0
   1400093ea:	int3   
   1400093eb:	int3   
   1400093ec:	int3   
   1400093ed:	int3   
   1400093ee:	int3   
   1400093ef:	int3   
   1400093f0:	and    QWORD PTR [rdx],0x0
   1400093f4:	lea    rcx,[rip+0x56e5]        # 0x14000eae0
   1400093fb:	mov    r8,rdx
   1400093fe:	mov    edx,0x6a
   140009403:	rex.W jmp QWORD PTR [rip+0x3ee6]        # 0x14000d2f0
   14000940a:	int3   
   14000940b:	int3   
   14000940c:	int3   
   14000940d:	int3   
   14000940e:	int3   
   14000940f:	int3   
   140009410:	and    QWORD PTR [rdx],0x0
   140009414:	lea    rcx,[rip+0x57a5]        # 0x14000ebc0
   14000941b:	mov    r8,rdx
   14000941e:	mov    edx,0x6a
   140009423:	rex.W jmp QWORD PTR [rip+0x3ec6]        # 0x14000d2f0
   14000942a:	int3   
   14000942b:	int3   
   14000942c:	int3   
   14000942d:	int3   
   14000942e:	int3   
   14000942f:	int3   
   140009430:	sub    rsp,0x28
   140009434:	xor    edx,edx
   140009436:	mov    ecx,0x80004001
   14000943b:	call   QWORD PTR [rip+0x3e2f]        # 0x14000d270
   140009441:	mov    eax,0x80004001
   140009446:	add    rsp,0x28
   14000944a:	ret    
   14000944b:	int3   
   14000944c:	int3   
   14000944d:	int3   
   14000944e:	int3   
   14000944f:	int3   
   140009450:	int3   
   140009451:	int3   
   140009452:	int3   
   140009453:	int3   
   140009454:	int3   
   140009455:	int3   
   140009456:	int3   
   140009457:	int3   
   140009458:	int3   
   140009459:	int3   
   14000945a:	int3   
   14000945b:	int3   
   14000945c:	int3   
   14000945d:	int3   
   14000945e:	int3   
   14000945f:	int3   
   140009460:	mov    r11,rsp
   140009463:	mov    QWORD PTR [r11+0x10],rbx
   140009467:	mov    QWORD PTR [r11+0x18],rsi
   14000946b:	push   rdi
   14000946c:	sub    rsp,0x20
   140009470:	mov    rax,QWORD PTR [rcx+0x10]
   140009474:	mov    rbx,rdx
   140009477:	and    QWORD PTR [rdx],0x0
   14000947b:	mov    rsi,rcx
   14000947e:	mov    QWORD PTR [r11+0x8],rax
   140009482:	mov    rdi,rax
   140009485:	test   rax,rax
   140009488:	jns    0x140009497
   14000948a:	lea    rax,[rax+rax*1]
   14000948e:	lock inc DWORD PTR [rax+0xc]
   140009492:	mov    QWORD PTR [rdx],rax
   140009495:	jmp    0x1400094f1
   140009497:	add    rcx,0xfffffffffffffff8
   14000949b:	call   0x140008468
   1400094a0:	mov    r8,rax
   1400094a3:	test   rax,rax
   1400094a6:	jne    0x1400094af
   1400094a8:	mov    eax,0x8007000e
   1400094ad:	jmp    0x1400094f3
   1400094af:	mov    rdx,rax
   1400094b2:	mov    DWORD PTR [r8+0x10],edi
   1400094b6:	movabs rax,0x8000000000000000
   1400094c0:	sar    rdx,1
   1400094c3:	or     rdx,rax
   1400094c6:	mov    rax,rdi
   1400094c9:	lock cmpxchg QWORD PTR [rsi+0x10],rdx
   1400094cf:	jmp    0x1400094e9
   1400094d1:	test   rdi,rdi
   1400094d4:	js     0x140009503
   1400094d6:	mov    rcx,rdi
   1400094d9:	mov    DWORD PTR [r8+0x10],edi
   1400094dd:	mov    rax,rdi
   1400094e0:	lock cmpxchg QWORD PTR [rsi+0x10],rdx
   1400094e6:	cmp    rax,rcx
   1400094e9:	mov    rdi,rax
   1400094ec:	jne    0x1400094d1
   1400094ee:	mov    QWORD PTR [rbx],r8
   1400094f1:	xor    eax,eax
   1400094f3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400094f8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400094fd:	add    rsp,0x20
   140009501:	pop    rdi
   140009502:	ret    
   140009503:	mov    edx,0x1
   140009508:	mov    rcx,r8
   14000950b:	call   0x140007f90
   140009510:	lea    rax,[rdi+rdi*1]
   140009514:	lock inc DWORD PTR [rax+0xc]
   140009518:	mov    QWORD PTR [rbx],rax
   14000951b:	jmp    0x1400094f1
   14000951d:	int3   
   14000951e:	int3   
   14000951f:	int3   
   140009520:	int3   
   140009521:	int3   
   140009522:	int3   
   140009523:	int3   
   140009524:	int3   
   140009525:	int3   
   140009526:	int3   
   140009527:	int3   
   140009528:	int3   
   140009529:	int3   
   14000952a:	int3   
   14000952b:	int3   
   14000952c:	int3   
   14000952d:	int3   
   14000952e:	int3   
   14000952f:	int3   
   140009530:	mov    r11,rsp
   140009533:	mov    QWORD PTR [r11+0x10],rbx
   140009537:	mov    QWORD PTR [r11+0x18],rsi
   14000953b:	push   rdi
   14000953c:	sub    rsp,0x20
   140009540:	mov    rax,QWORD PTR [rcx+0x20]
   140009544:	mov    rbx,rdx
   140009547:	and    QWORD PTR [rdx],0x0
   14000954b:	mov    rsi,rcx
   14000954e:	mov    QWORD PTR [r11+0x8],rax
   140009552:	mov    rdi,rax
   140009555:	test   rax,rax
   140009558:	jns    0x140009567
   14000955a:	lea    rax,[rax+rax*1]
   14000955e:	lock inc DWORD PTR [rax+0xc]
   140009562:	mov    QWORD PTR [rdx],rax
   140009565:	jmp    0x1400095c1
   140009567:	add    rcx,0xfffffffffffffff8
   14000956b:	call   0x140008468
   140009570:	mov    r8,rax
   140009573:	test   rax,rax
   140009576:	jne    0x14000957f
   140009578:	mov    eax,0x8007000e
   14000957d:	jmp    0x1400095c3
   14000957f:	mov    rdx,rax
   140009582:	mov    DWORD PTR [r8+0x10],edi
   140009586:	movabs rax,0x8000000000000000
   140009590:	sar    rdx,1
   140009593:	or     rdx,rax
   140009596:	mov    rax,rdi
   140009599:	lock cmpxchg QWORD PTR [rsi+0x20],rdx
   14000959f:	jmp    0x1400095b9
   1400095a1:	test   rdi,rdi
   1400095a4:	js     0x1400095d3
   1400095a6:	mov    rcx,rdi
   1400095a9:	mov    DWORD PTR [r8+0x10],edi
   1400095ad:	mov    rax,rdi
   1400095b0:	lock cmpxchg QWORD PTR [rsi+0x20],rdx
   1400095b6:	cmp    rax,rcx
   1400095b9:	mov    rdi,rax
   1400095bc:	jne    0x1400095a1
   1400095be:	mov    QWORD PTR [rbx],r8
   1400095c1:	xor    eax,eax
   1400095c3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400095c8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400095cd:	add    rsp,0x20
   1400095d1:	pop    rdi
   1400095d2:	ret    
   1400095d3:	mov    edx,0x1
   1400095d8:	mov    rcx,r8
   1400095db:	call   0x140007f90
   1400095e0:	lea    rax,[rdi+rdi*1]
   1400095e4:	lock inc DWORD PTR [rax+0xc]
   1400095e8:	mov    QWORD PTR [rbx],rax
   1400095eb:	jmp    0x1400095c1
   1400095ed:	int3   
   1400095ee:	int3   
   1400095ef:	int3   
   1400095f0:	int3   
   1400095f1:	int3   
   1400095f2:	int3   
   1400095f3:	int3   
   1400095f4:	int3   
   1400095f5:	int3   
   1400095f6:	int3   
   1400095f7:	int3   
   1400095f8:	int3   
   1400095f9:	int3   
   1400095fa:	int3   
   1400095fb:	int3   
   1400095fc:	int3   
   1400095fd:	int3   
   1400095fe:	int3   
   1400095ff:	int3   
   140009600:	mov    r11,rsp
   140009603:	mov    QWORD PTR [r11+0x10],rbx
   140009607:	mov    QWORD PTR [r11+0x18],rsi
   14000960b:	push   rdi
   14000960c:	sub    rsp,0x20
   140009610:	mov    rax,QWORD PTR [rcx+0x18]
   140009614:	mov    rbx,rdx
   140009617:	and    QWORD PTR [rdx],0x0
   14000961b:	mov    rsi,rcx
   14000961e:	mov    QWORD PTR [r11+0x8],rax
   140009622:	mov    rdi,rax
   140009625:	test   rax,rax
   140009628:	jns    0x140009637
   14000962a:	lea    rax,[rax+rax*1]
   14000962e:	lock inc DWORD PTR [rax+0xc]
   140009632:	mov    QWORD PTR [rdx],rax
   140009635:	jmp    0x140009691
   140009637:	add    rcx,0xfffffffffffffff8
   14000963b:	call   0x140008468
   140009640:	mov    r8,rax
   140009643:	test   rax,rax
   140009646:	jne    0x14000964f
   140009648:	mov    eax,0x8007000e
   14000964d:	jmp    0x140009693
   14000964f:	mov    rdx,rax
   140009652:	mov    DWORD PTR [r8+0x10],edi
   140009656:	movabs rax,0x8000000000000000
   140009660:	sar    rdx,1
   140009663:	or     rdx,rax
   140009666:	mov    rax,rdi
   140009669:	lock cmpxchg QWORD PTR [rsi+0x18],rdx
   14000966f:	jmp    0x140009689
   140009671:	test   rdi,rdi
   140009674:	js     0x1400096a3
   140009676:	mov    rcx,rdi
   140009679:	mov    DWORD PTR [r8+0x10],edi
   14000967d:	mov    rax,rdi
   140009680:	lock cmpxchg QWORD PTR [rsi+0x18],rdx
   140009686:	cmp    rax,rcx
   140009689:	mov    rdi,rax
   14000968c:	jne    0x140009671
   14000968e:	mov    QWORD PTR [rbx],r8
   140009691:	xor    eax,eax
   140009693:	mov    rbx,QWORD PTR [rsp+0x38]
   140009698:	mov    rsi,QWORD PTR [rsp+0x40]
   14000969d:	add    rsp,0x20
   1400096a1:	pop    rdi
   1400096a2:	ret    
   1400096a3:	mov    edx,0x1
   1400096a8:	mov    rcx,r8
   1400096ab:	call   0x140007f90
   1400096b0:	lea    rax,[rdi+rdi*1]
   1400096b4:	lock inc DWORD PTR [rax+0xc]
   1400096b8:	mov    QWORD PTR [rbx],rax
   1400096bb:	jmp    0x140009691
   1400096bd:	int3   
   1400096be:	int3   
   1400096bf:	int3   
   1400096c0:	int3   
   1400096c1:	int3   
   1400096c2:	int3   
   1400096c3:	int3   
   1400096c4:	int3   
   1400096c5:	int3   
   1400096c6:	int3   
   1400096c7:	int3   
   1400096c8:	int3   
   1400096c9:	int3   
   1400096ca:	int3   
   1400096cb:	int3   
   1400096cc:	int3   
   1400096cd:	int3   
   1400096ce:	int3   
   1400096cf:	int3   
   1400096d0:	mov    QWORD PTR [rsp+0x18],r8
   1400096d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400096da:	push   rbx
   1400096db:	sub    rsp,0x30
   1400096df:	mov    rbx,rcx
   1400096e2:	mov    BYTE PTR [r8],0x0
   1400096e6:	call   0x14000858c
   1400096eb:	test   eax,eax
   1400096ed:	js     0x140009720
   1400096ef:	mov    r8b,BYTE PTR [rsp+0x50]
   1400096f4:	lea    rax,[rsp+0x48]
   1400096f9:	mov    QWORD PTR [rsp+0x20],rax
   1400096fe:	lea    rdx,[rsp+0x20]
   140009703:	lea    rax,[rsp+0x50]
   140009708:	mov    rcx,rbx
   14000970b:	mov    QWORD PTR [rsp+0x28],rax
   140009710:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140009715:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000971b:	call   0x140006e48
   140009720:	add    rsp,0x30
   140009724:	pop    rbx
   140009725:	ret    
   140009726:	int3   
   140009727:	int3   
   140009728:	int3   
   140009729:	int3   
   14000972a:	int3   
   14000972b:	int3   
   14000972c:	int3   
   14000972d:	int3   
   14000972e:	int3   
   14000972f:	int3   
   140009730:	rex push rbx
   140009732:	push   rsi
   140009733:	push   rdi
   140009734:	sub    rsp,0x40
   140009738:	mov    rax,QWORD PTR [rip+0x88c9]        # 0x140012008
   14000973f:	xor    rax,rsp
   140009742:	mov    QWORD PTR [rsp+0x30],rax
   140009747:	mov    rbx,rdx
   14000974a:	mov    BYTE PTR [r8],0x0
   14000974e:	mov    rsi,rcx
   140009751:	lea    rdx,[rsp+0x20]
   140009756:	mov    rcx,rbx
   140009759:	mov    rdi,r8
   14000975c:	call   QWORD PTR [rip+0x3b86]        # 0x14000d2e8
   140009762:	cmp    DWORD PTR [rsp+0x20],0x0
   140009767:	je     0x140009791
   140009769:	movabs rax,0x790065006b
   140009773:	lea    r8,[rsp+0x28]
   140009778:	mov    ebx,0x80070057
   14000977d:	mov    QWORD PTR [rsp+0x28],rax
   140009782:	mov    ecx,ebx
   140009784:	mov    edx,0x3
   140009789:	call   QWORD PTR [rip+0x3af9]        # 0x14000d288
   14000978f:	jmp    0x1400097b8
   140009791:	lea    r8,[rsp+0x28]
   140009796:	mov    rdx,rbx
   140009799:	mov    rcx,rsi
   14000979c:	call   0x140008ac4
   1400097a1:	mov    ebx,eax
   1400097a3:	test   eax,eax
   1400097a5:	js     0x1400097ac
   1400097a7:	mov    BYTE PTR [rdi],0x1
   1400097aa:	jmp    0x1400097b6
   1400097ac:	cmp    eax,0x8000000b
   1400097b1:	jne    0x1400097b8
   1400097b3:	mov    BYTE PTR [rdi],0x0
   1400097b6:	xor    ebx,ebx
   1400097b8:	mov    eax,ebx
   1400097ba:	mov    rcx,QWORD PTR [rsp+0x30]
   1400097bf:	xor    rcx,rsp
   1400097c2:	call   0x140004450
   1400097c7:	add    rsp,0x40
   1400097cb:	pop    rdi
   1400097cc:	pop    rsi
   1400097cd:	pop    rbx
   1400097ce:	ret    
   1400097cf:	int3   
   1400097d0:	int3   
   1400097d1:	int3   
   1400097d2:	int3   
   1400097d3:	int3   
   1400097d4:	int3   
   1400097d5:	int3   
   1400097d6:	int3   
   1400097d7:	int3   
   1400097d8:	int3   
   1400097d9:	int3   
   1400097da:	int3   
   1400097db:	int3   
   1400097dc:	int3   
   1400097dd:	int3   
   1400097de:	int3   
   1400097df:	int3   
   1400097e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400097e5:	mov    QWORD PTR [rsp+0x20],rbp
   1400097ea:	push   rsi
   1400097eb:	push   rdi
   1400097ec:	push   r12
   1400097ee:	push   r14
   1400097f0:	push   r15
   1400097f2:	sub    rsp,0x20
   1400097f6:	mov    BYTE PTR [r8],0x0
   1400097fa:	xor    ebx,ebx
   1400097fc:	mov    rax,QWORD PTR [rcx+0x28]
   140009800:	mov    r14,r8
   140009803:	mov    r12,rdx
   140009806:	mov    BYTE PTR [rsp+0x50],0x0
   14000980b:	mov    rbp,rcx
   14000980e:	xor    esi,esi
   140009810:	mov    r15d,DWORD PTR [rax+0xc]
   140009814:	cmp    esi,r15d
   140009817:	jae    0x14000988f
   140009819:	mov    rax,QWORD PTR [rbp+0x28]
   14000981d:	mov    rdi,QWORD PTR [rax+rsi*8+0x10]
   140009822:	and    QWORD PTR [rsp+0x60],0x0
   140009828:	mov    rax,QWORD PTR [rdi]
   14000982b:	mov    rbx,QWORD PTR [rax+0x30]
   14000982f:	mov    rcx,rbx
   140009832:	call   QWORD PTR [rip+0x3c80]        # 0x14000d4b8
   140009838:	lea    rdx,[rsp+0x60]
   14000983d:	mov    rcx,rdi
   140009840:	call   rbx
   140009842:	mov    ebx,eax
   140009844:	test   eax,eax
   140009846:	js     0x140009867
   140009848:	mov    r8,QWORD PTR [rsp+0x60]
   14000984d:	lea    r9,[rsp+0x50]
   140009852:	mov    rdx,r12
   140009855:	call   0x140007ae4
   14000985a:	mov    ebx,eax
   14000985c:	test   eax,eax
   14000985e:	js     0x140009867
   140009860:	cmp    BYTE PTR [rsp+0x50],0x0
   140009865:	jne    0x140009880
   140009867:	mov    rcx,QWORD PTR [rsp+0x60]
   14000986c:	call   QWORD PTR [rip+0x3a66]        # 0x14000d2d8
   140009872:	and    QWORD PTR [rsp+0x60],0x0
   140009878:	inc    esi
   14000987a:	test   ebx,ebx
   14000987c:	jns    0x140009814
   14000987e:	jmp    0x14000988f
   140009880:	mov    rcx,QWORD PTR [rsp+0x60]
   140009885:	mov    BYTE PTR [r14],0x1
   140009889:	call   QWORD PTR [rip+0x3a49]        # 0x14000d2d8
   14000988f:	mov    rbp,QWORD PTR [rsp+0x68]
   140009894:	mov    eax,ebx
   140009896:	mov    rbx,QWORD PTR [rsp+0x58]
   14000989b:	add    rsp,0x20
   14000989f:	pop    r15
   1400098a1:	pop    r14
   1400098a3:	pop    r12
   1400098a5:	pop    rdi
   1400098a6:	pop    rsi
   1400098a7:	ret    
   1400098a8:	int3   
   1400098a9:	int3   
   1400098aa:	int3   
   1400098ab:	int3   
   1400098ac:	int3   
   1400098ad:	int3   
   1400098ae:	int3   
   1400098af:	int3   
   1400098b0:	rex push rbp
   1400098b2:	push   rbx
   1400098b3:	push   rsi
   1400098b4:	push   rdi
   1400098b5:	push   r14
   1400098b7:	mov    rbp,rsp
   1400098ba:	sub    rsp,0x20
   1400098be:	mov    rax,QWORD PTR [rdx]
   1400098c1:	mov    rsi,rcx
   1400098c4:	and    QWORD PTR [rbp+0x48],0x0
   1400098c9:	mov    rdi,rdx
   1400098cc:	mov    rbx,QWORD PTR [rax+0x38]
   1400098d0:	mov    rcx,rbx
   1400098d3:	call   QWORD PTR [rip+0x3bdf]        # 0x14000d4b8
   1400098d9:	lea    rdx,[rbp+0x38]
   1400098dd:	mov    rcx,rdi
   1400098e0:	call   rbx
   1400098e2:	mov    ebx,eax
   1400098e4:	test   eax,eax
   1400098e6:	js     0x1400099c0
   1400098ec:	and    QWORD PTR [rbp+0x40],0x0
   1400098f1:	lea    rcx,[rbp+0x40]
   1400098f5:	call   0x140006384
   1400098fa:	mov    rax,QWORD PTR [rdi]
   1400098fd:	mov    rbx,QWORD PTR [rax]
   140009900:	mov    rcx,rbx
   140009903:	call   QWORD PTR [rip+0x3baf]        # 0x14000d4b8
   140009909:	lea    r8,[rbp+0x40]
   14000990d:	mov    rcx,rdi
   140009910:	lea    rdx,[rip+0x4989]        # 0x14000e2a0
   140009917:	call   rbx
   140009919:	mov    edi,0x80004002
   14000991e:	mov    ebx,eax
   140009920:	cmp    eax,edi
   140009922:	jne    0x140009940
   140009924:	mov    ebx,0x8000ffff
   140009929:	xor    edx,edx
   14000992b:	mov    ecx,ebx
   14000992d:	call   QWORD PTR [rip+0x393d]        # 0x14000d270
   140009933:	xor    r8d,r8d
   140009936:	mov    edx,ebx
   140009938:	mov    ecx,edi
   14000993a:	call   QWORD PTR [rip+0x3938]        # 0x14000d278
   140009940:	test   ebx,ebx
   140009942:	js     0x14000996c
   140009944:	mov    rdi,QWORD PTR [rbp+0x40]
   140009948:	lea    rcx,[rbp+0x48]
   14000994c:	call   0x140006384
   140009951:	mov    rax,QWORD PTR [rdi]
   140009954:	mov    rbx,QWORD PTR [rax+0x30]
   140009958:	mov    rcx,rbx
   14000995b:	call   QWORD PTR [rip+0x3b57]        # 0x14000d4b8
   140009961:	lea    rdx,[rbp+0x48]
   140009965:	mov    rcx,rdi
   140009968:	call   rbx
   14000996a:	mov    ebx,eax
   14000996c:	lea    rcx,[rbp+0x40]
   140009970:	call   0x140006384
   140009975:	test   ebx,ebx
   140009977:	js     0x1400099c0
   140009979:	mov    rdi,QWORD PTR [rbp+0x48]
   14000997d:	mov    r14d,DWORD PTR [rbp+0x38]
   140009981:	cmp    QWORD PTR [rsi+0x40],rdi
   140009985:	je     0x1400099b6
   140009987:	test   rdi,rdi
   14000998a:	je     0x1400099a1
   14000998c:	mov    rax,QWORD PTR [rdi]
   14000998f:	mov    rbx,QWORD PTR [rax+0x8]
   140009993:	mov    rcx,rbx
   140009996:	call   QWORD PTR [rip+0x3b1c]        # 0x14000d4b8
   14000999c:	mov    rcx,rdi
   14000999f:	call   rbx
   1400099a1:	mov    rax,QWORD PTR [rsi+0x40]
   1400099a5:	lea    rcx,[rbp+0x40]
   1400099a9:	mov    QWORD PTR [rbp+0x40],rax
   1400099ad:	mov    QWORD PTR [rsi+0x40],rdi
   1400099b1:	call   0x140006384
   1400099b6:	mov    DWORD PTR [rsi+0x48],r14d
   1400099ba:	xor    ebx,ebx
   1400099bc:	mov    BYTE PTR [rsi+0x4d],0x1
   1400099c0:	lea    rcx,[rbp+0x48]
   1400099c4:	call   0x140006384
   1400099c9:	mov    eax,ebx
   1400099cb:	add    rsp,0x20
   1400099cf:	pop    r14
   1400099d1:	pop    rdi
   1400099d2:	pop    rsi
   1400099d3:	pop    rbx
   1400099d4:	pop    rbp
   1400099d5:	ret    
   1400099d6:	int3   
   1400099d7:	int3   
   1400099d8:	int3   
   1400099d9:	int3   
   1400099da:	int3   
   1400099db:	int3   
   1400099dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400099e1:	mov    QWORD PTR [rsp+0x18],rsi
   1400099e6:	push   rdi
   1400099e7:	sub    rsp,0x20
   1400099eb:	mov    rax,rdx
   1400099ee:	mov    rbx,rcx
   1400099f1:	lea    rdx,[rsp+0x38]
   1400099f6:	mov    rsi,r8
   1400099f9:	mov    rcx,QWORD PTR [rax]
   1400099fc:	call   QWORD PTR [rip+0x38c6]        # 0x14000d2c8
   140009a02:	mov    edi,eax
   140009a04:	test   eax,eax
   140009a06:	jns    0x140009a10
   140009a08:	and    QWORD PTR [rsp+0x38],0x0
   140009a0e:	jmp    0x140009a5c
   140009a10:	mov    rdx,QWORD PTR [rsi]
   140009a13:	lea    rcx,[rsp+0x48]
   140009a18:	call   0x140006d78
   140009a1d:	mov    edi,eax
   140009a1f:	test   eax,eax
   140009a21:	js     0x140009a5c
   140009a23:	mov    rax,QWORD PTR [rsp+0x38]
   140009a28:	mov    rcx,QWORD PTR [rbx+0x20]
   140009a2c:	mov    QWORD PTR [rbx+0x20],rax
   140009a30:	mov    rsi,QWORD PTR [rbx+0x28]
   140009a34:	mov    rax,QWORD PTR [rsp+0x48]
   140009a39:	mov    QWORD PTR [rsp+0x38],rcx
   140009a3e:	mov    QWORD PTR [rbx+0x28],rax
   140009a42:	test   rsi,rsi
   140009a45:	je     0x140009a5c
   140009a47:	mov    rax,QWORD PTR [rsi]
   140009a4a:	mov    rbx,QWORD PTR [rax+0x10]
   140009a4e:	mov    rcx,rbx
   140009a51:	call   QWORD PTR [rip+0x3a61]        # 0x14000d4b8
   140009a57:	mov    rcx,rsi
   140009a5a:	call   rbx
   140009a5c:	mov    rcx,QWORD PTR [rsp+0x38]
   140009a61:	call   QWORD PTR [rip+0x3871]        # 0x14000d2d8
   140009a67:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a6c:	mov    eax,edi
   140009a6e:	mov    rsi,QWORD PTR [rsp+0x40]
   140009a73:	add    rsp,0x20
   140009a77:	pop    rdi
   140009a78:	ret    
   140009a79:	int3   
   140009a7a:	int3   
   140009a7b:	int3   
   140009a7c:	int3   
   140009a7d:	int3   
   140009a7e:	int3   
   140009a7f:	int3   
   140009a80:	mov    QWORD PTR [rsp+0x8],rbx
   140009a85:	push   rbp
   140009a86:	push   rsi
   140009a87:	push   rdi
   140009a88:	push   r14
   140009a8a:	push   r15
   140009a8c:	mov    rbp,rsp
   140009a8f:	sub    rsp,0x30
   140009a93:	and    QWORD PTR [rbp-0x10],0x0
   140009a98:	mov    r14,rcx
   140009a9b:	lea    rcx,[rbp-0x10]
   140009a9f:	mov    r15,rdx
   140009aa2:	call   0x140009d1c
   140009aa7:	lea    rdx,[rip+0x3fb2]        # 0x14000da60
   140009aae:	mov    ecx,0x90
   140009ab3:	call   0x140004a7c
   140009ab8:	mov    rbx,rax
   140009abb:	test   rax,rax
   140009abe:	je     0x140009ad7
   140009ac0:	and    DWORD PTR [rbx+0xc],0x0
   140009ac4:	lea    rax,[rip+0x4b9d]        # 0x14000e668
   140009acb:	mov    QWORD PTR [rbx],rax
   140009ace:	mov    DWORD PTR [rbx+0x8],0x1
   140009ad5:	jmp    0x140009ad9
   140009ad7:	xor    ebx,ebx
   140009ad9:	mov    QWORD PTR [rbp-0x10],rbx
   140009add:	test   rbx,rbx
   140009ae0:	jne    0x140009aec
   140009ae2:	mov    edi,0x8007000e
   140009ae7:	jmp    0x140009bac
   140009aec:	mov    rax,QWORD PTR [r15]
   140009aef:	mov    rdi,QWORD PTR [rax+0x38]
   140009af3:	mov    rcx,rdi
   140009af6:	call   QWORD PTR [rip+0x39bc]        # 0x14000d4b8
   140009afc:	lea    rdx,[rbp+0x40]
   140009b00:	mov    rcx,r15
   140009b03:	call   rdi
   140009b05:	xor    esi,esi
   140009b07:	mov    edi,eax
   140009b09:	test   eax,eax
   140009b0b:	js     0x140009bac
   140009b11:	cmp    BYTE PTR [rbp+0x40],0x0
   140009b15:	je     0x140009b85
   140009b17:	cmp    esi,0x10
   140009b1a:	jae    0x140009b85
   140009b1c:	and    QWORD PTR [rbp+0x48],0x0
   140009b21:	lea    rcx,[rbp+0x48]
   140009b25:	call   0x140006384
   140009b2a:	mov    rax,QWORD PTR [r15]
   140009b2d:	mov    rdi,QWORD PTR [rax+0x30]
   140009b31:	mov    rcx,rdi
   140009b34:	call   QWORD PTR [rip+0x397e]        # 0x14000d4b8
   140009b3a:	lea    rdx,[rbp+0x48]
   140009b3e:	mov    rcx,r15
   140009b41:	call   rdi
   140009b43:	mov    edi,eax
   140009b45:	test   eax,eax
   140009b47:	js     0x140009b76
   140009b49:	mov    rdx,QWORD PTR [rbp+0x48]
   140009b4d:	mov    rcx,rbx
   140009b50:	call   0x140007fc8
   140009b55:	mov    edi,eax
   140009b57:	test   eax,eax
   140009b59:	js     0x140009b76
   140009b5b:	mov    rax,QWORD PTR [r15]
   140009b5e:	mov    rdi,QWORD PTR [rax+0x40]
   140009b62:	mov    rcx,rdi
   140009b65:	call   QWORD PTR [rip+0x394d]        # 0x14000d4b8
   140009b6b:	lea    rdx,[rbp+0x40]
   140009b6f:	mov    rcx,r15
   140009b72:	call   rdi
   140009b74:	mov    edi,eax
   140009b76:	lea    rcx,[rbp+0x48]
   140009b7a:	call   0x140006384
   140009b7f:	inc    esi
   140009b81:	test   edi,edi
   140009b83:	jns    0x140009b11
   140009b85:	test   edi,edi
   140009b87:	js     0x140009bac
   140009b89:	cmp    QWORD PTR [r14+0x28],rbx
   140009b8d:	je     0x140009bac
   140009b8f:	lock inc DWORD PTR [rbx+0x8]
   140009b93:	mov    rax,QWORD PTR [r14+0x28]
   140009b97:	lea    rcx,[rbp-0x8]
   140009b9b:	mov    QWORD PTR [rbp-0x8],rax
   140009b9f:	mov    rax,QWORD PTR [rbp-0x10]
   140009ba3:	mov    QWORD PTR [r14+0x28],rax
   140009ba7:	call   0x140009d1c
   140009bac:	lea    rcx,[rbp-0x10]
   140009bb0:	call   0x140009d1c
   140009bb5:	mov    rbx,QWORD PTR [rsp+0x60]
   140009bba:	mov    eax,edi
   140009bbc:	add    rsp,0x30
   140009bc0:	pop    r15
   140009bc2:	pop    r14
   140009bc4:	pop    rdi
   140009bc5:	pop    rsi
   140009bc6:	pop    rbp
   140009bc7:	ret    
   140009bc8:	int3   
   140009bc9:	int3   
   140009bca:	int3   
   140009bcb:	int3   
   140009bcc:	int3   
   140009bcd:	int3   
   140009bce:	int3   
   140009bcf:	int3   
   140009bd0:	mov    r11,rsp
   140009bd3:	mov    QWORD PTR [r11+0x10],rbx
   140009bd7:	mov    QWORD PTR [r11+0x18],rsi
   140009bdb:	push   rdi
   140009bdc:	sub    rsp,0x50
   140009be0:	mov    rax,QWORD PTR [rip+0x8421]        # 0x140012008
   140009be7:	xor    rax,rsp
   140009bea:	mov    QWORD PTR [rsp+0x48],rax
   140009bef:	xor    esi,esi
   140009bf1:	mov    rbx,rcx
   140009bf4:	cmp    QWORD PTR [rcx+0x40],rsi
   140009bf8:	jne    0x140009c75
   140009bfa:	lea    r9,[r11-0x30]
   140009bfe:	lea    r8,[r11-0x28]
   140009c02:	lea    edx,[rsi+0x20]
   140009c05:	lea    rcx,[rip+0x47d4]        # 0x14000e3e0
   140009c0c:	call   QWORD PTR [rip+0x36ce]        # 0x14000d2e0
   140009c12:	test   eax,eax
   140009c14:	jns    0x140009c2a
   140009c16:	xor    r9d,r9d
   140009c19:	lea    edx,[rsi+0x1]
   140009c1c:	xor    r8d,r8d
   140009c1f:	mov    ecx,0xc000000d
   140009c24:	call   QWORD PTR [rip+0x3476]        # 0x14000d0a0
   140009c2a:	mov    rcx,QWORD PTR [rsp+0x28]
   140009c2f:	lea    r8,[rsp+0x20]
   140009c34:	and    QWORD PTR [rsp+0x20],rsi
   140009c39:	lea    rdx,[rip+0x4350]        # 0x14000df90
   140009c40:	call   QWORD PTR [rip+0x365a]        # 0x14000d2a0
   140009c46:	mov    esi,eax
   140009c48:	test   eax,eax
   140009c4a:	js     0x140009c75
   140009c4c:	mov    rcx,QWORD PTR [rsp+0x20]
   140009c51:	xor    eax,eax
   140009c53:	lock cmpxchg QWORD PTR [rbx+0x40],rcx
   140009c59:	je     0x140009c75
   140009c5b:	mov    rdi,QWORD PTR [rsp+0x20]
   140009c60:	mov    rdx,QWORD PTR [rdi]
   140009c63:	mov    rbx,QWORD PTR [rdx+0x10]
   140009c67:	mov    rcx,rbx
   140009c6a:	call   QWORD PTR [rip+0x3848]        # 0x14000d4b8
   140009c70:	mov    rcx,rdi
   140009c73:	call   rbx
   140009c75:	mov    eax,esi
   140009c77:	mov    rcx,QWORD PTR [rsp+0x48]
   140009c7c:	xor    rcx,rsp
   140009c7f:	call   0x140004450
   140009c84:	mov    rbx,QWORD PTR [rsp+0x68]
   140009c89:	mov    rsi,QWORD PTR [rsp+0x70]
   140009c8e:	add    rsp,0x50
   140009c92:	pop    rdi
   140009c93:	ret    
   140009c94:	int3   
   140009c95:	int3   
   140009c96:	int3   
   140009c97:	int3   
   140009c98:	int3   
   140009c99:	int3   
   140009c9a:	int3   
   140009c9b:	int3   
   140009c9c:	mov    eax,DWORD PTR [rdx]
   140009c9e:	cmp    DWORD PTR [rcx],eax
   140009ca0:	jne    0x140009cc0
   140009ca2:	mov    eax,DWORD PTR [rdx+0x4]
   140009ca5:	cmp    DWORD PTR [rcx+0x4],eax
   140009ca8:	jne    0x140009cc0
   140009caa:	mov    eax,DWORD PTR [rdx+0x8]
   140009cad:	cmp    DWORD PTR [rcx+0x8],eax
   140009cb0:	jne    0x140009cc0
   140009cb2:	mov    eax,DWORD PTR [rdx+0xc]
   140009cb5:	cmp    DWORD PTR [rcx+0xc],eax
   140009cb8:	jne    0x140009cc0
   140009cba:	mov    eax,0x1
   140009cbf:	ret    
   140009cc0:	xor    eax,eax
   140009cc2:	ret    
   140009cc3:	int3   
   140009cc4:	int3   
   140009cc5:	int3   
   140009cc6:	int3   
   140009cc7:	int3   
   140009cc8:	int3   
   140009cc9:	int3   
   140009cca:	int3   
   140009ccb:	int3   
   140009ccc:	mov    rdx,QWORD PTR [rcx]
   140009ccf:	test   rdx,rdx
   140009cd2:	je     0x140009cef
   140009cd4:	mov    rax,QWORD PTR [rdx+0x20]
   140009cd8:	test   rax,rax
   140009cdb:	js     0x140009cea
   140009cdd:	lea    rcx,[rax+0x1]
   140009ce1:	lock cmpxchg QWORD PTR [rdx+0x20],rcx
   140009ce7:	jne    0x140009cd8
   140009ce9:	ret    
   140009cea:	lock inc DWORD PTR [rax+rax*1+0x10]
   140009cef:	ret    
   140009cf0:	int3   
   140009cf1:	int3   
   140009cf2:	int3   
   140009cf3:	int3   
   140009cf4:	int3   
   140009cf5:	int3   
   140009cf6:	int3   
   140009cf7:	int3   
   140009cf8:	sub    rsp,0x28
   140009cfc:	mov    rdx,QWORD PTR [rcx]
   140009cff:	xor    eax,eax
   140009d01:	test   rdx,rdx
   140009d04:	je     0x140009d11
   140009d06:	mov    QWORD PTR [rcx],rax
   140009d09:	mov    rcx,rdx
   140009d0c:	call   0x14000ab30
   140009d11:	add    rsp,0x28
   140009d15:	ret    
   140009d16:	int3   
   140009d17:	int3   
   140009d18:	int3   
   140009d19:	int3   
   140009d1a:	int3   
   140009d1b:	int3   
   140009d1c:	rex push rbx
   140009d1e:	sub    rsp,0x20
   140009d22:	mov    rdx,rcx
   140009d25:	xor    eax,eax
   140009d27:	mov    rcx,QWORD PTR [rcx]
   140009d2a:	test   rcx,rcx
   140009d2d:	je     0x140009d46
   140009d2f:	mov    QWORD PTR [rdx],rax
   140009d32:	or     ebx,0xffffffff
   140009d35:	lock xadd DWORD PTR [rcx+0x8],ebx
   140009d3a:	sub    ebx,0x1
   140009d3d:	jne    0x140009d44
   140009d3f:	call   0x140007dec
   140009d44:	mov    eax,ebx
   140009d46:	add    rsp,0x20
   140009d4a:	pop    rbx
   140009d4b:	ret    
   140009d4c:	int3   
   140009d4d:	int3   
   140009d4e:	int3   
   140009d4f:	int3   
   140009d50:	int3   
   140009d51:	int3   
   140009d52:	int3   
   140009d53:	int3   
   140009d54:	int3   
   140009d55:	int3   
   140009d56:	int3   
   140009d57:	int3   
   140009d58:	int3   
   140009d59:	int3   
   140009d5a:	int3   
   140009d5b:	int3   
   140009d5c:	int3   
   140009d5d:	int3   
   140009d5e:	int3   
   140009d5f:	int3   
   140009d60:	mov    QWORD PTR [rsp+0x8],rbx
   140009d65:	mov    QWORD PTR [rsp+0x10],rdx
   140009d6a:	push   rbp
   140009d6b:	push   rsi
   140009d6c:	push   rdi
   140009d6d:	mov    rbp,rsp
   140009d70:	sub    rsp,0x30
   140009d74:	and    QWORD PTR [rbp+0x38],0x0
   140009d79:	mov    rbx,r8
   140009d7c:	mov    rdi,rcx
   140009d7f:	call   0x14000858c
   140009d84:	mov    esi,eax
   140009d86:	test   eax,eax
   140009d88:	js     0x140009dc2
   140009d8a:	mov    r8b,BYTE PTR [rbp+0x38]
   140009d8e:	lea    rax,[rbp+0x28]
   140009d92:	mov    QWORD PTR [rbp-0x10],rax
   140009d96:	lea    rdx,[rbp-0x10]
   140009d9a:	lea    rax,[rbp+0x38]
   140009d9e:	mov    rcx,rdi
   140009da1:	mov    QWORD PTR [rbp-0x8],rax
   140009da5:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140009da9:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140009dae:	call   0x140006db8
   140009db3:	mov    esi,eax
   140009db5:	test   eax,eax
   140009db7:	js     0x140009dc2
   140009db9:	mov    rax,QWORD PTR [rbp+0x38]
   140009dbd:	mov    QWORD PTR [rbx],rax
   140009dc0:	jmp    0x140009de4
   140009dc2:	and    QWORD PTR [rbx],0x0
   140009dc6:	mov    rbx,QWORD PTR [rbp+0x38]
   140009dca:	test   rbx,rbx
   140009dcd:	je     0x140009de4
   140009dcf:	mov    rax,QWORD PTR [rbx]
   140009dd2:	mov    rdi,QWORD PTR [rax+0x10]
   140009dd6:	mov    rcx,rdi
   140009dd9:	call   QWORD PTR [rip+0x36d9]        # 0x14000d4b8
   140009ddf:	mov    rcx,rbx
   140009de2:	call   rdi
   140009de4:	mov    eax,esi
   140009de6:	mov    rbx,QWORD PTR [rsp+0x50]
   140009deb:	add    rsp,0x30
   140009def:	pop    rdi
   140009df0:	pop    rsi
   140009df1:	pop    rbp
   140009df2:	ret    
   140009df3:	int3   
   140009df4:	int3   
   140009df5:	int3   
   140009df6:	int3   
   140009df7:	int3   
   140009df8:	int3   
   140009df9:	int3   
   140009dfa:	int3   
   140009dfb:	int3   
   140009dfc:	int3   
   140009dfd:	int3   
   140009dfe:	int3   
   140009dff:	int3   
   140009e00:	rex push rbx
   140009e02:	push   rsi
   140009e03:	push   rdi
   140009e04:	sub    rsp,0x40
   140009e08:	mov    rax,QWORD PTR [rip+0x81f9]        # 0x140012008
   140009e0f:	xor    rax,rsp
   140009e12:	mov    QWORD PTR [rsp+0x30],rax
   140009e17:	cmp    BYTE PTR [rcx+0x30],0x0
   140009e1b:	mov    rbx,r8
   140009e1e:	mov    rdi,rdx
   140009e21:	mov    rsi,rcx
   140009e24:	je     0x140009e42
   140009e26:	test   BYTE PTR [rip+0x8f93],0x4        # 0x140012dc0
   140009e2d:	je     0x140009e42
   140009e2f:	xor    edx,edx
   140009e31:	mov    rcx,rdi
   140009e34:	call   QWORD PTR [rip+0x347e]        # 0x14000d2b8
   140009e3a:	mov    r8,rax
   140009e3d:	call   0x14000b2b4
   140009e42:	lea    rdx,[rsp+0x20]
   140009e47:	mov    rcx,rdi
   140009e4a:	call   QWORD PTR [rip+0x3498]        # 0x14000d2e8
   140009e50:	cmp    DWORD PTR [rsp+0x20],0x0
   140009e55:	je     0x140009e7f
   140009e57:	movabs rax,0x790065006b
   140009e61:	lea    r8,[rsp+0x28]
   140009e66:	mov    ebx,0x80070057
   140009e6b:	mov    QWORD PTR [rsp+0x28],rax
   140009e70:	mov    ecx,ebx
   140009e72:	mov    edx,0x3
   140009e77:	call   QWORD PTR [rip+0x340b]        # 0x14000d288
   140009e7d:	jmp    0x140009e8f
   140009e7f:	mov    r8,rbx
   140009e82:	mov    rdx,rdi
   140009e85:	mov    rcx,rsi
   140009e88:	call   0x140008994
   140009e8d:	mov    ebx,eax
   140009e8f:	cmp    BYTE PTR [rsi+0x30],0x0
   140009e93:	je     0x140009eb4
   140009e95:	test   BYTE PTR [rip+0x8f24],0x4        # 0x140012dc0
   140009e9c:	je     0x140009eb4
   140009e9e:	xor    edx,edx
   140009ea0:	mov    rcx,rdi
   140009ea3:	call   QWORD PTR [rip+0x340f]        # 0x14000d2b8
   140009ea9:	mov    r9,rax
   140009eac:	mov    r8d,ebx
   140009eaf:	call   0x14000b218
   140009eb4:	mov    eax,ebx
   140009eb6:	mov    rcx,QWORD PTR [rsp+0x30]
   140009ebb:	xor    rcx,rsp
   140009ebe:	call   0x140004450
   140009ec3:	add    rsp,0x40
   140009ec7:	pop    rdi
   140009ec8:	pop    rsi
   140009ec9:	pop    rbx
   140009eca:	ret    
   140009ecb:	int3   
   140009ecc:	int3   
   140009ecd:	int3   
   140009ece:	int3   
   140009ecf:	int3   
   140009ed0:	int3   
   140009ed1:	int3   
   140009ed2:	int3   
   140009ed3:	int3   
   140009ed4:	int3   
   140009ed5:	int3   
   140009ed6:	int3   
   140009ed7:	int3   
   140009ed8:	int3   
   140009ed9:	int3   
   140009eda:	int3   
   140009edb:	int3   
   140009edc:	int3   
   140009edd:	int3   
   140009ede:	int3   
   140009edf:	int3   
   140009ee0:	mov    QWORD PTR [rsp+0x10],rbx
   140009ee5:	push   rbp
   140009ee6:	push   rsi
   140009ee7:	push   rdi
   140009ee8:	push   r12
   140009eea:	push   r13
   140009eec:	push   r14
   140009eee:	push   r15
   140009ef0:	sub    rsp,0x20
   140009ef4:	mov    rax,QWORD PTR [rcx+0x28]
   140009ef8:	xor    dil,dil
   140009efb:	xor    ebx,ebx
   140009efd:	mov    BYTE PTR [rsp+0x60],dil
   140009f02:	mov    r15,r8
   140009f05:	mov    r13,rdx
   140009f08:	mov    rbp,rcx
   140009f0b:	xor    esi,esi
   140009f0d:	mov    r12d,DWORD PTR [rax+0xc]
   140009f11:	cmp    esi,r12d
   140009f14:	jae    0x140009fa9
   140009f1a:	mov    rax,QWORD PTR [rbp+0x28]
   140009f1e:	mov    r14,QWORD PTR [rax+rsi*8+0x10]
   140009f23:	and    QWORD PTR [rsp+0x78],0x0
   140009f29:	mov    rax,QWORD PTR [r14]
   140009f2c:	mov    rbx,QWORD PTR [rax+0x30]
   140009f30:	mov    rcx,rbx
   140009f33:	call   QWORD PTR [rip+0x357f]        # 0x14000d4b8
   140009f39:	lea    rdx,[rsp+0x78]
   140009f3e:	mov    rcx,r14
   140009f41:	call   rbx
   140009f43:	mov    ebx,eax
   140009f45:	test   eax,eax
   140009f47:	js     0x140009f6b
   140009f49:	mov    r8,QWORD PTR [rsp+0x78]
   140009f4e:	lea    r9,[rsp+0x60]
   140009f53:	mov    rdx,r13
   140009f56:	call   0x140007ae4
   140009f5b:	mov    dil,BYTE PTR [rsp+0x60]
   140009f60:	mov    ebx,eax
   140009f62:	test   eax,eax
   140009f64:	js     0x140009f6b
   140009f66:	test   dil,dil
   140009f69:	jne    0x140009f84
   140009f6b:	mov    rcx,QWORD PTR [rsp+0x78]
   140009f70:	call   QWORD PTR [rip+0x3362]        # 0x14000d2d8
   140009f76:	and    QWORD PTR [rsp+0x78],0x0
   140009f7c:	inc    esi
   140009f7e:	test   ebx,ebx
   140009f80:	jns    0x140009f11
   140009f82:	jmp    0x140009fa9
   140009f84:	mov    rax,QWORD PTR [r14]
   140009f87:	mov    rbx,QWORD PTR [rax+0x38]
   140009f8b:	mov    rcx,rbx
   140009f8e:	call   QWORD PTR [rip+0x3524]        # 0x14000d4b8
   140009f94:	mov    rdx,r15
   140009f97:	mov    rcx,r14
   140009f9a:	call   rbx
   140009f9c:	mov    rcx,QWORD PTR [rsp+0x78]
   140009fa1:	mov    ebx,eax
   140009fa3:	call   QWORD PTR [rip+0x332f]        # 0x14000d2d8
   140009fa9:	test   ebx,ebx
   140009fab:	js     0x140009fbc
   140009fad:	test   dil,dil
   140009fb0:	mov    eax,0x8000000b
   140009fb5:	cmove  ebx,eax
   140009fb8:	test   ebx,ebx
   140009fba:	jns    0x140009fc0
   140009fbc:	and    QWORD PTR [r15],0x0
   140009fc0:	mov    eax,ebx
   140009fc2:	mov    rbx,QWORD PTR [rsp+0x68]
   140009fc7:	add    rsp,0x20
   140009fcb:	pop    r15
   140009fcd:	pop    r14
   140009fcf:	pop    r13
   140009fd1:	pop    r12
   140009fd3:	pop    rdi
   140009fd4:	pop    rsi
   140009fd5:	pop    rbp
   140009fd6:	ret    
   140009fd7:	int3   
   140009fd8:	int3   
   140009fd9:	int3   
   140009fda:	int3   
   140009fdb:	int3   
   140009fdc:	int3   
   140009fdd:	int3   
   140009fde:	int3   
   140009fdf:	int3   
   140009fe0:	mov    rax,rsp
   140009fe3:	mov    QWORD PTR [rax+0x8],rbx
   140009fe7:	mov    QWORD PTR [rax+0x10],rbp
   140009feb:	mov    QWORD PTR [rax+0x18],rsi
   140009fef:	mov    QWORD PTR [rax+0x20],rdi
   140009ff3:	push   r14
   140009ff5:	sub    rsp,0x20
   140009ff9:	and    QWORD PTR [r8],0x0
   140009ffd:	mov    rsi,rdx
   14000a000:	mov    rbp,rcx
   14000a003:	lea    rdx,[rip+0x3a56]        # 0x14000da60
   14000a00a:	xor    ebx,ebx
   14000a00c:	mov    r14,r8
   14000a00f:	lea    ecx,[rbx+0x30]
   14000a012:	call   0x140004a7c
   14000a017:	test   rax,rax
   14000a01a:	je     0x14000a04a
   14000a01c:	mov    rcx,rax
   14000a01f:	call   0x140007738
   14000a024:	mov    rdi,rax
   14000a027:	mov    rbx,rax
   14000a02a:	test   rax,rax
   14000a02d:	je     0x14000a04a
   14000a02f:	mov    r8,rsi
   14000a032:	mov    rdx,rbp
   14000a035:	mov    rcx,rax
   14000a038:	call   0x1400099dc
   14000a03d:	mov    esi,eax
   14000a03f:	test   eax,eax
   14000a041:	js     0x14000a04f
   14000a043:	xor    ebx,ebx
   14000a045:	mov    QWORD PTR [r14],rdi
   14000a048:	jmp    0x14000a04f
   14000a04a:	mov    esi,0x8007000e
   14000a04f:	test   rbx,rbx
   14000a052:	je     0x14000a05c
   14000a054:	mov    rcx,rbx
   14000a057:	call   0x14000aaa0
   14000a05c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a061:	mov    eax,esi
   14000a063:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a068:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a06d:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a072:	add    rsp,0x20
   14000a076:	pop    r14
   14000a078:	ret    
   14000a079:	int3   
   14000a07a:	int3   
   14000a07b:	int3   
   14000a07c:	int3   
   14000a07d:	int3   
   14000a07e:	int3   
   14000a07f:	int3   
   14000a080:	mov    QWORD PTR [rsp+0x18],rbx
   14000a085:	mov    QWORD PTR [rsp+0x20],rbp
   14000a08a:	push   rsi
   14000a08b:	push   rdi
   14000a08c:	push   r14
   14000a08e:	sub    rsp,0x20
   14000a092:	lea    rbp,[rcx+0x20]
   14000a096:	mov    BYTE PTR [rdx],0x0
   14000a099:	mov    rbx,rcx
   14000a09c:	mov    r14,rdx
   14000a09f:	mov    rcx,rbp
   14000a0a2:	call   QWORD PTR [rip+0x3178]        # 0x14000d220
   14000a0a8:	lea    rdi,[rbx+0x38]
   14000a0ac:	cmp    QWORD PTR [rdi],0x0
   14000a0b0:	je     0x14000a13a
   14000a0b6:	mov    edx,DWORD PTR [rbx+0x30]
   14000a0b9:	lea    r9,[rsp+0x40]
   14000a0be:	and    QWORD PTR [rsp+0x48],0x0
   14000a0c4:	lea    r8,[rsp+0x48]
   14000a0c9:	mov    rcx,QWORD PTR [rbx+0x28]
   14000a0cd:	mov    DWORD PTR [rsp+0x40],edx
   14000a0d1:	inc    edx
   14000a0d3:	call   0x14000906c
   14000a0d8:	mov    esi,eax
   14000a0da:	test   eax,eax
   14000a0dc:	js     0x14000a119
   14000a0de:	mov    ecx,DWORD PTR [rsp+0x40]
   14000a0e2:	mov    DWORD PTR [rbx+0x30],ecx
   14000a0e5:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a0ea:	cmp    QWORD PTR [rdi],rbx
   14000a0ed:	je     0x14000a113
   14000a0ef:	lea    rcx,[rsp+0x40]
   14000a0f4:	mov    QWORD PTR [rsp+0x40],rbx
   14000a0f9:	call   0x14000634c
   14000a0fe:	mov    rcx,QWORD PTR [rdi]
   14000a101:	mov    QWORD PTR [rsp+0x40],rcx
   14000a106:	lea    rcx,[rsp+0x40]
   14000a10b:	mov    QWORD PTR [rdi],rbx
   14000a10e:	call   0x140006384
   14000a113:	mov    BYTE PTR [r14],0x1
   14000a117:	jmp    0x14000a12e
   14000a119:	cmp    eax,0x8000000b
   14000a11e:	jne    0x14000a12e
   14000a120:	mov    rcx,rdi
   14000a123:	call   0x140006384
   14000a128:	xor    esi,esi
   14000a12a:	mov    BYTE PTR [r14],0x0
   14000a12e:	lea    rcx,[rsp+0x48]
   14000a133:	call   0x140006384
   14000a138:	jmp    0x14000a14c
   14000a13a:	xor    edx,edx
   14000a13c:	mov    ecx,0x8000000b
   14000a141:	call   QWORD PTR [rip+0x3129]        # 0x14000d270
   14000a147:	mov    esi,0x8000000b
   14000a14c:	mov    rcx,rbp
   14000a14f:	call   QWORD PTR [rip+0x30c3]        # 0x14000d218
   14000a155:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a15a:	mov    eax,esi
   14000a15c:	mov    rbp,QWORD PTR [rsp+0x58]
   14000a161:	add    rsp,0x20
   14000a165:	pop    r14
   14000a167:	pop    rdi
   14000a168:	pop    rsi
   14000a169:	ret    
   14000a16a:	int3   
   14000a16b:	int3   
   14000a16c:	int3   
   14000a16d:	int3   
   14000a16e:	int3   
   14000a16f:	int3   
   14000a170:	rex push rbx
   14000a172:	sub    rsp,0x20
   14000a176:	xor    ebx,ebx
   14000a178:	mov    BYTE PTR [rdx],bl
   14000a17a:	mov    r8,QWORD PTR [rcx+0x20]
   14000a17e:	mov    eax,DWORD PTR [rcx+0x28]
   14000a181:	cmp    eax,DWORD PTR [r8+0xc]
   14000a185:	jae    0x14000a197
   14000a187:	inc    eax
   14000a189:	mov    DWORD PTR [rcx+0x28],eax
   14000a18c:	cmp    eax,DWORD PTR [r8+0xc]
   14000a190:	setb   al
   14000a193:	mov    BYTE PTR [rdx],al
   14000a195:	jmp    0x14000a1a6
   14000a197:	mov    ebx,0x8000000b
   14000a19c:	xor    edx,edx
   14000a19e:	mov    ecx,ebx
   14000a1a0:	call   QWORD PTR [rip+0x30ca]        # 0x14000d270
   14000a1a6:	mov    eax,ebx
   14000a1a8:	add    rsp,0x20
   14000a1ac:	pop    rbx
   14000a1ad:	ret    
   14000a1ae:	int3   
   14000a1af:	int3   
   14000a1b0:	int3   
   14000a1b1:	int3   
   14000a1b2:	int3   
   14000a1b3:	int3   
   14000a1b4:	int3   
   14000a1b5:	int3   
   14000a1b6:	int3   
   14000a1b7:	int3   
   14000a1b8:	int3   
   14000a1b9:	int3   
   14000a1ba:	int3   
   14000a1bb:	int3   
   14000a1bc:	int3   
   14000a1bd:	int3   
   14000a1be:	int3   
   14000a1bf:	int3   
   14000a1c0:	mov    QWORD PTR [rsp+0x10],rbx
   14000a1c5:	mov    QWORD PTR [rsp+0x18],rbp
   14000a1ca:	push   rsi
   14000a1cb:	push   rdi
   14000a1cc:	push   r14
   14000a1ce:	sub    rsp,0x30
   14000a1d2:	mov    r14,rdx
   14000a1d5:	mov    BYTE PTR [rdx],0x0
   14000a1d8:	mov    rbp,rcx
   14000a1db:	lea    rdx,[rsp+0x20]
   14000a1e0:	add    rcx,0x20
   14000a1e4:	call   0x14000aebc
   14000a1e9:	mov    ebx,DWORD PTR [rsp+0x28]
   14000a1ed:	test   ebx,ebx
   14000a1ef:	js     0x14000a266
   14000a1f1:	mov    rcx,rbp
   14000a1f4:	call   0x1400084b0
   14000a1f9:	mov    ebx,eax
   14000a1fb:	test   eax,eax
   14000a1fd:	js     0x14000a266
   14000a1ff:	lea    rsi,[rbp+0x38]
   14000a203:	cmp    QWORD PTR [rsi],0x0
   14000a207:	jne    0x14000a218
   14000a209:	mov    ebx,0x8000000b
   14000a20e:	xor    edx,edx
   14000a210:	mov    ecx,ebx
   14000a212:	call   QWORD PTR [rip+0x3058]        # 0x14000d270
   14000a218:	test   ebx,ebx
   14000a21a:	js     0x14000a266
   14000a21c:	mov    rdi,QWORD PTR [rsi]
   14000a21f:	mov    rax,QWORD PTR [rdi]
   14000a222:	mov    rbx,QWORD PTR [rax+0x40]
   14000a226:	mov    rcx,rbx
   14000a229:	call   QWORD PTR [rip+0x3289]        # 0x14000d4b8
   14000a22f:	lea    rdx,[rsp+0x50]
   14000a234:	mov    rcx,rdi
   14000a237:	call   rbx
   14000a239:	mov    ebx,eax
   14000a23b:	test   eax,eax
   14000a23d:	js     0x14000a266
   14000a23f:	cmp    BYTE PTR [rsp+0x50],0x0
   14000a244:	jne    0x14000a258
   14000a246:	mov    rcx,rsi
   14000a249:	call   0x140006384
   14000a24e:	mov    rcx,rbp
   14000a251:	call   0x1400084b0
   14000a256:	mov    ebx,eax
   14000a258:	test   ebx,ebx
   14000a25a:	js     0x14000a266
   14000a25c:	cmp    QWORD PTR [rsi],0x0
   14000a260:	setne  al
   14000a263:	mov    BYTE PTR [r14],al
   14000a266:	mov    rcx,QWORD PTR [rsp+0x20]
   14000a26b:	test   rcx,rcx
   14000a26e:	je     0x14000a288
   14000a270:	cmp    DWORD PTR [rcx],0x1
   14000a273:	jne    0x14000a27e
   14000a275:	add    DWORD PTR [rcx+0x8],0x10000000
   14000a27c:	jmp    0x14000a288
   14000a27e:	add    rcx,0x8
   14000a282:	call   QWORD PTR [rip+0x2f90]        # 0x14000d218
   14000a288:	mov    rbp,QWORD PTR [rsp+0x60]
   14000a28d:	mov    eax,ebx
   14000a28f:	mov    rbx,QWORD PTR [rsp+0x58]
   14000a294:	add    rsp,0x30
   14000a298:	pop    r14
   14000a29a:	pop    rdi
   14000a29b:	pop    rsi
   14000a29c:	ret    
   14000a29d:	int3   
   14000a29e:	int3   
   14000a29f:	int3   
   14000a2a0:	int3   
   14000a2a1:	int3   
   14000a2a2:	int3   
   14000a2a3:	int3   
   14000a2a4:	mov    rax,rsp
   14000a2a7:	sub    rsp,0x68
   14000a2ab:	and    QWORD PTR [rax-0x10],0x0
   14000a2b0:	xor    r8d,r8d
   14000a2b3:	and    QWORD PTR [rax-0x18],0x0
   14000a2b8:	and    QWORD PTR [rax-0x20],0x0
   14000a2bd:	and    QWORD PTR [rax-0x28],0x0
   14000a2c2:	mov    rcx,QWORD PTR [rcx]
   14000a2c5:	mov    QWORD PTR [rax-0x30],r9
   14000a2c9:	xor    r9d,r9d
   14000a2cc:	and    QWORD PTR [rax-0x38],0x0
   14000a2d1:	and    QWORD PTR [rax-0x40],0x0
   14000a2d6:	mov    QWORD PTR [rax-0x48],rdx
   14000a2da:	xor    edx,edx
   14000a2dc:	call   QWORD PTR [rip+0x2ed6]        # 0x14000d1b8
   14000a2e2:	test   eax,eax
   14000a2e4:	jle    0x14000a2ee
   14000a2e6:	movzx  eax,ax
   14000a2e9:	or     eax,0x80070000
   14000a2ee:	add    rsp,0x68
   14000a2f2:	ret    
   14000a2f3:	int3   
   14000a2f4:	int3   
   14000a2f5:	int3   
   14000a2f6:	int3   
   14000a2f7:	int3   
   14000a2f8:	int3   
   14000a2f9:	int3   
   14000a2fa:	int3   
   14000a2fb:	int3   
   14000a2fc:	int3   
   14000a2fd:	int3   
   14000a2fe:	int3   
   14000a2ff:	int3   
   14000a300:	jmp    0x140006b5c
   14000a305:	int3   
   14000a306:	int3   
   14000a307:	int3   
   14000a308:	int3   
   14000a309:	int3   
   14000a30a:	int3   
   14000a30b:	int3   
   14000a30c:	int3   
   14000a30d:	int3   
   14000a30e:	int3   
   14000a30f:	int3   
   14000a310:	jmp    0x140006c10
   14000a315:	int3   
   14000a316:	int3   
   14000a317:	int3   
   14000a318:	int3   
   14000a319:	int3   
   14000a31a:	int3   
   14000a31b:	int3   
   14000a31c:	int3   
   14000a31d:	int3   
   14000a31e:	int3   
   14000a31f:	int3   
   14000a320:	jmp    0x140006cc4
   14000a325:	int3   
   14000a326:	int3   
   14000a327:	int3   
   14000a328:	int3   
   14000a329:	int3   
   14000a32a:	int3   
   14000a32b:	int3   
   14000a32c:	int3   
   14000a32d:	int3   
   14000a32e:	int3   
   14000a32f:	int3   
   14000a330:	mov    QWORD PTR [rsp+0x8],rbx
   14000a335:	mov    QWORD PTR [rsp+0x10],rsi
   14000a33a:	push   rdi
   14000a33b:	sub    rsp,0x20
   14000a33f:	mov    r9,rdx
   14000a342:	mov    rsi,rcx
   14000a345:	xor    edi,edi
   14000a347:	lea    rdx,[rip+0x3512]        # 0x14000d860
   14000a34e:	mov    rcx,r9
   14000a351:	mov    QWORD PTR [r8],rdi
   14000a354:	call   0x140009c9c
   14000a359:	test   eax,eax
   14000a35b:	jne    0x14000a380
   14000a35d:	lea    rdx,[rip+0x4a04]        # 0x14000ed68
   14000a364:	call   0x140009c9c
   14000a369:	test   eax,eax
   14000a36b:	je     0x14000a379
   14000a36d:	mov    QWORD PTR [r8],rsi
   14000a370:	mov    rax,QWORD PTR [rsi]
   14000a373:	mov    rbx,QWORD PTR [rax+0x8]
   14000a377:	jmp    0x14000a38a
   14000a379:	mov    edi,0x80004002
   14000a37e:	jmp    0x14000a398
   14000a380:	mov    QWORD PTR [r8],rsi
   14000a383:	mov    rcx,QWORD PTR [rsi]
   14000a386:	mov    rbx,QWORD PTR [rcx+0x8]
   14000a38a:	mov    rcx,rbx
   14000a38d:	call   QWORD PTR [rip+0x3125]        # 0x14000d4b8
   14000a393:	mov    rcx,rsi
   14000a396:	call   rbx
   14000a398:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a39d:	mov    eax,edi
   14000a39f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a3a4:	add    rsp,0x20
   14000a3a8:	pop    rdi
   14000a3a9:	ret    
   14000a3aa:	int3   
   14000a3ab:	int3   
   14000a3ac:	int3   
   14000a3ad:	int3   
   14000a3ae:	int3   
   14000a3af:	int3   
   14000a3b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a3b5:	mov    QWORD PTR [rsp+0x10],rsi
   14000a3ba:	push   rdi
   14000a3bb:	sub    rsp,0x20
   14000a3bf:	and    QWORD PTR [r8],0x0
   14000a3c3:	mov    r9,rdx
   14000a3c6:	mov    rdi,rcx
   14000a3c9:	lea    rdx,[rip+0x3490]        # 0x14000d860
   14000a3d0:	mov    rcx,r9
   14000a3d3:	call   0x140009c9c
   14000a3d8:	test   eax,eax
   14000a3da:	jne    0x14000a417
   14000a3dc:	lea    rdx,[rip+0x349d]        # 0x14000d880
   14000a3e3:	call   0x140009c9c
   14000a3e8:	test   eax,eax
   14000a3ea:	jne    0x14000a417
   14000a3ec:	mov    rdx,r9
   14000a3ef:	mov    rcx,rdi
   14000a3f2:	call   0x14000811c
   14000a3f7:	mov    esi,eax
   14000a3f9:	test   eax,eax
   14000a3fb:	js     0x14000a431
   14000a3fd:	mov    rdi,QWORD PTR [r8]
   14000a400:	mov    rax,QWORD PTR [rdi]
   14000a403:	mov    rbx,QWORD PTR [rax+0x8]
   14000a407:	mov    rcx,rbx
   14000a40a:	call   QWORD PTR [rip+0x30a8]        # 0x14000d4b8
   14000a410:	mov    rcx,rdi
   14000a413:	call   rbx
   14000a415:	jmp    0x14000a431
   14000a417:	mov    QWORD PTR [r8],rdi
   14000a41a:	mov    rax,QWORD PTR [rdi]
   14000a41d:	mov    rbx,QWORD PTR [rax+0x8]
   14000a421:	mov    rcx,rbx
   14000a424:	call   QWORD PTR [rip+0x308e]        # 0x14000d4b8
   14000a42a:	mov    rcx,rdi
   14000a42d:	call   rbx
   14000a42f:	xor    esi,esi
   14000a431:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a436:	mov    eax,esi
   14000a438:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a43d:	add    rsp,0x20
   14000a441:	pop    rdi
   14000a442:	ret    
   14000a443:	int3   
   14000a444:	int3   
   14000a445:	int3   
   14000a446:	int3   
   14000a447:	int3   
   14000a448:	int3   
   14000a449:	int3   
   14000a44a:	int3   
   14000a44b:	int3   
   14000a44c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a451:	mov    QWORD PTR [rsp+0x18],rsi
   14000a456:	mov    QWORD PTR [rsp+0x20],rdi
   14000a45b:	push   r14
   14000a45d:	sub    rsp,0x30
   14000a461:	lea    rsi,[r8+0x8]
   14000a465:	mov    ebx,edx
   14000a467:	mov    rdi,rcx
   14000a46a:	mov    r14,r8
   14000a46d:	mov    rcx,QWORD PTR [rsi]
   14000a470:	call   QWORD PTR [rip+0x2e62]        # 0x14000d2d8
   14000a476:	and    QWORD PTR [rsi],0x0
   14000a47a:	lea    r8,[rsp+0x48]
   14000a47f:	mov    rax,QWORD PTR [rdi+0x10]
   14000a483:	lea    rcx,[rdi+0x40]
   14000a487:	mov    QWORD PTR [rsp+0x20],r8
   14000a48c:	mov    edx,ebx
   14000a48e:	shl    rdx,0x5
   14000a492:	mov    r9,rsi
   14000a495:	mov    r8d,0x20
   14000a49b:	mov    rax,QWORD PTR [rax+0x28]
   14000a49f:	mov    rax,QWORD PTR [rax+0x8]
   14000a4a3:	mov    rdx,QWORD PTR [rdx+rax*1]
   14000a4a7:	call   0x1400012c0
   14000a4ac:	test   eax,eax
   14000a4ae:	js     0x14000a4b6
   14000a4b0:	mov    BYTE PTR [r14],0x1
   14000a4b4:	jmp    0x14000a4d2
   14000a4b6:	cmp    eax,0x80070002
   14000a4bb:	jne    0x14000a4c5
   14000a4bd:	mov    BYTE PTR [r14],0x0
   14000a4c1:	xor    eax,eax
   14000a4c3:	jmp    0x14000a4d2
   14000a4c5:	cmp    eax,0x8007065e
   14000a4ca:	mov    ecx,0x8007000d
   14000a4cf:	cmove  eax,ecx
   14000a4d2:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a4d7:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a4dc:	mov    rdi,QWORD PTR [rsp+0x58]
   14000a4e1:	add    rsp,0x30
   14000a4e5:	pop    r14
   14000a4e7:	ret    
   14000a4e8:	int3   
   14000a4e9:	int3   
   14000a4ea:	int3   
   14000a4eb:	int3   
   14000a4ec:	int3   
   14000a4ed:	int3   
   14000a4ee:	int3   
   14000a4ef:	int3   
   14000a4f0:	rex push rbx
   14000a4f2:	push   rbp
   14000a4f3:	push   rsi
   14000a4f4:	push   rdi
   14000a4f5:	push   r14
   14000a4f7:	sub    rsp,0xe0
   14000a4fe:	mov    rax,QWORD PTR [rip+0x7b03]        # 0x140012008
   14000a505:	xor    rax,rsp
   14000a508:	mov    QWORD PTR [rsp+0xd0],rax
   14000a510:	mov    rax,QWORD PTR [rcx+0x10]
   14000a514:	mov    rbp,rcx
   14000a517:	mov    DWORD PTR [rsp+0x40],0x80
   14000a51f:	lea    rcx,[rsp+0x40]
   14000a524:	mov    QWORD PTR [rsp+0x30],rcx
   14000a529:	mov    rdi,r8
   14000a52c:	mov    esi,edx
   14000a52e:	lea    rcx,[rsp+0x50]
   14000a533:	mov    rdx,QWORD PTR [rax+0x28]
   14000a537:	mov    r9d,0x8
   14000a53d:	mov    QWORD PTR [rsp+0x28],rcx
   14000a542:	lea    rcx,[rbp+0x40]
   14000a546:	shl    rsi,0x5
   14000a54a:	mov    rax,QWORD PTR [rdx+0x8]
   14000a54e:	mov    r8,QWORD PTR [rsi+rax*1]
   14000a552:	call   0x140006448
   14000a557:	mov    ebx,eax
   14000a559:	mov    eax,0x80000000
   14000a55e:	lea    ecx,[rbx+rax*1]
   14000a561:	test   eax,ecx
   14000a563:	jne    0x14000a5a9
   14000a565:	cmp    ebx,0x800700ea
   14000a56b:	je     0x14000a5a9
   14000a56d:	cmp    ebx,0x80070002
   14000a573:	jne    0x14000a57c
   14000a575:	mov    BYTE PTR [rdi],0x0
   14000a578:	xor    ebx,ebx
   14000a57a:	jmp    0x14000a589
   14000a57c:	cmp    ebx,0x8007065e
   14000a582:	jne    0x14000a589
   14000a584:	mov    ebx,0x8007000d
   14000a589:	mov    eax,ebx
   14000a58b:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a593:	xor    rcx,rsp
   14000a596:	call   0x140004450
   14000a59b:	add    rsp,0xe0
   14000a5a2:	pop    r14
   14000a5a4:	pop    rdi
   14000a5a5:	pop    rsi
   14000a5a6:	pop    rbp
   14000a5a7:	pop    rbx
   14000a5a8:	ret    
   14000a5a9:	cmp    DWORD PTR [rsp+0x40],0xffff
   14000a5b1:	mov    BYTE PTR [rdi],0x1
   14000a5b4:	ja     0x14000a584
   14000a5b6:	movzx  edx,WORD PTR [rsp+0x40]
   14000a5bb:	lea    rcx,[rdi+0x8]
   14000a5bf:	call   0x140008090
   14000a5c4:	mov    rdi,rax
   14000a5c7:	test   rax,rax
   14000a5ca:	je     0x14000a633
   14000a5cc:	test   ebx,ebx
   14000a5ce:	js     0x14000a5e4
   14000a5d0:	mov    r8d,DWORD PTR [rsp+0x40]
   14000a5d5:	lea    rdx,[rsp+0x50]
   14000a5da:	mov    rcx,rax
   14000a5dd:	call   0x140004b4a
   14000a5e2:	jmp    0x14000a614
   14000a5e4:	mov    rax,QWORD PTR [rbp+0x10]
   14000a5e8:	lea    rcx,[rsp+0x40]
   14000a5ed:	mov    QWORD PTR [rsp+0x30],rcx
   14000a5f2:	mov    r9d,0x8
   14000a5f8:	lea    rcx,[rbp+0x40]
   14000a5fc:	mov    QWORD PTR [rsp+0x28],rdi
   14000a601:	mov    rdx,QWORD PTR [rax+0x28]
   14000a605:	mov    rax,QWORD PTR [rdx+0x8]
   14000a609:	mov    r8,QWORD PTR [rsi+rax*1]
   14000a60d:	call   0x140006448
   14000a612:	mov    ebx,eax
   14000a614:	test   ebx,ebx
   14000a616:	js     0x14000a589
   14000a61c:	mov    edx,DWORD PTR [rsp+0x40]
   14000a620:	xor    r8d,r8d
   14000a623:	mov    rcx,rdi
   14000a626:	call   QWORD PTR [rip+0x2e3c]        # 0x14000d468
   14000a62c:	test   al,al
   14000a62e:	jmp    0x14000a582
   14000a633:	mov    ebx,0x8007000e
   14000a638:	jmp    0x14000a589
   14000a63d:	int3   
   14000a63e:	int3   
   14000a63f:	int3   
   14000a640:	int3   
   14000a641:	int3   
   14000a642:	int3   
   14000a643:	int3   
   14000a644:	mov    QWORD PTR [rsp+0x8],rbx
   14000a649:	mov    QWORD PTR [rsp+0x10],rsi
   14000a64e:	push   rdi
   14000a64f:	sub    rsp,0x30
   14000a653:	mov    rdi,rcx
   14000a656:	mov    ebx,edx
   14000a658:	mov    rcx,QWORD PTR [r8]
   14000a65b:	mov    rsi,r8
   14000a65e:	call   QWORD PTR [rip+0x2c74]        # 0x14000d2d8
   14000a664:	and    QWORD PTR [rsi],0x0
   14000a668:	lea    rcx,[rdi+0x40]
   14000a66c:	mov    rax,QWORD PTR [rdi+0x10]
   14000a670:	mov    edx,ebx
   14000a672:	shl    rdx,0x5
   14000a676:	mov    r9,rsi
   14000a679:	mov    rax,QWORD PTR [rax+0x28]
   14000a67d:	mov    rax,QWORD PTR [rax+0x8]
   14000a681:	mov    rdx,QWORD PTR [rdx+rax*1]
   14000a685:	lea    rax,[rsi+0x8]
   14000a689:	mov    QWORD PTR [rsp+0x20],rax
   14000a68e:	call   0x140001110
   14000a693:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a698:	cmp    eax,0x8007065e
   14000a69d:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a6a2:	mov    ecx,0x8007000d
   14000a6a7:	cmove  eax,ecx
   14000a6aa:	add    rsp,0x30
   14000a6ae:	pop    rdi
   14000a6af:	ret    
   14000a6b0:	int3   
   14000a6b1:	int3   
   14000a6b2:	int3   
   14000a6b3:	int3   
   14000a6b4:	int3   
   14000a6b5:	int3   
   14000a6b6:	int3   
   14000a6b7:	int3   
   14000a6b8:	rex push rbx
   14000a6ba:	push   rsi
   14000a6bb:	push   rdi
   14000a6bc:	sub    rsp,0x50
   14000a6c0:	mov    rax,QWORD PTR [rip+0x7941]        # 0x140012008
   14000a6c7:	xor    rax,rsp
   14000a6ca:	mov    QWORD PTR [rsp+0x48],rax
   14000a6cf:	mov    rdi,rcx
   14000a6d2:	mov    ebx,edx
   14000a6d4:	mov    rcx,QWORD PTR [r8]
   14000a6d7:	mov    rsi,r8
   14000a6da:	call   QWORD PTR [rip+0x2bf8]        # 0x14000d2d8
   14000a6e0:	and    QWORD PTR [rsi],0x0
   14000a6e4:	lea    r8,[rsp+0x30]
   14000a6e9:	mov    rax,QWORD PTR [rdi+0x10]
   14000a6ed:	lea    rcx,[rdi+0x40]
   14000a6f1:	mov    edx,ebx
   14000a6f3:	mov    QWORD PTR [rsp+0x20],r8
   14000a6f8:	shl    rdx,0x5
   14000a6fc:	mov    r9,rsi
   14000a6ff:	mov    rax,QWORD PTR [rax+0x28]
   14000a703:	mov    rax,QWORD PTR [rax+0x8]
   14000a707:	mov    rdx,QWORD PTR [rdx+rax*1]
   14000a70b:	call   0x1400072f4
   14000a710:	mov    ebx,eax
   14000a712:	test   eax,eax
   14000a714:	js     0x14000a73a
   14000a716:	mov    rcx,QWORD PTR [rsi]
   14000a719:	xor    edx,edx
   14000a71b:	call   QWORD PTR [rip+0x2b97]        # 0x14000d2b8
   14000a721:	mov    rcx,rax
   14000a724:	lea    rdx,[rsp+0x38]
   14000a729:	call   QWORD PTR [rip+0x28f1]        # 0x14000d020
   14000a72f:	test   eax,eax
   14000a731:	jns    0x14000a748
   14000a733:	mov    ebx,0x8007000d
   14000a738:	jmp    0x14000a748
   14000a73a:	cmp    ebx,0x8007065e
   14000a740:	mov    eax,0x8007000d
   14000a745:	cmove  ebx,eax
   14000a748:	mov    eax,ebx
   14000a74a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a74f:	xor    rcx,rsp
   14000a752:	call   0x140004450
   14000a757:	add    rsp,0x50
   14000a75b:	pop    rdi
   14000a75c:	pop    rsi
   14000a75d:	pop    rbx
   14000a75e:	ret    
   14000a75f:	int3   
   14000a760:	int3   
   14000a761:	int3   
   14000a762:	int3   
   14000a763:	int3   
   14000a764:	int3   
   14000a765:	int3   
   14000a766:	int3   
   14000a767:	int3   
   14000a768:	mov    QWORD PTR [rsp+0x8],rbx
   14000a76d:	mov    QWORD PTR [rsp+0x18],rsi
   14000a772:	push   rdi
   14000a773:	sub    rsp,0x30
   14000a777:	mov    rdi,rcx
   14000a77a:	mov    ebx,edx
   14000a77c:	mov    rcx,QWORD PTR [r8]
   14000a77f:	mov    rsi,r8
   14000a782:	call   QWORD PTR [rip+0x2b50]        # 0x14000d2d8
   14000a788:	and    QWORD PTR [rsi],0x0
   14000a78c:	lea    r8,[rsp+0x48]
   14000a791:	mov    rax,QWORD PTR [rdi+0x10]
   14000a795:	lea    rcx,[rdi+0x40]
   14000a799:	mov    QWORD PTR [rsp+0x20],r8
   14000a79e:	mov    edx,ebx
   14000a7a0:	shl    rdx,0x5
   14000a7a4:	mov    r9,rsi
   14000a7a7:	mov    r8d,0x20
   14000a7ad:	mov    rax,QWORD PTR [rax+0x28]
   14000a7b1:	mov    rax,QWORD PTR [rax+0x8]
   14000a7b5:	mov    rdx,QWORD PTR [rdx+rax*1]
   14000a7b9:	call   0x1400012c0
   14000a7be:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a7c3:	cmp    eax,0x8007065e
   14000a7c8:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a7cd:	mov    ecx,0x8007000d
   14000a7d2:	cmove  eax,ecx
   14000a7d5:	add    rsp,0x30
   14000a7d9:	pop    rdi
   14000a7da:	ret    
   14000a7db:	int3   
   14000a7dc:	int3   
   14000a7dd:	int3   
   14000a7de:	int3   
   14000a7df:	int3   
   14000a7e0:	int3   
   14000a7e1:	int3   
   14000a7e2:	int3   
   14000a7e3:	int3   
   14000a7e4:	rex push rbx
   14000a7e6:	push   rbp
   14000a7e7:	push   rsi
   14000a7e8:	push   rdi
   14000a7e9:	push   r14
   14000a7eb:	sub    rsp,0xe0
   14000a7f2:	mov    rax,QWORD PTR [rip+0x780f]        # 0x140012008
   14000a7f9:	xor    rax,rsp
   14000a7fc:	mov    QWORD PTR [rsp+0xd0],rax
   14000a804:	mov    rax,QWORD PTR [rcx+0x10]
   14000a808:	mov    rbp,rcx
   14000a80b:	mov    DWORD PTR [rsp+0x40],0x80
   14000a813:	lea    rcx,[rsp+0x40]
   14000a818:	mov    QWORD PTR [rsp+0x30],rcx
   14000a81d:	mov    rdi,r8
   14000a820:	mov    esi,edx
   14000a822:	lea    rcx,[rsp+0x50]
   14000a827:	mov    rdx,QWORD PTR [rax+0x28]
   14000a82b:	mov    r9d,0x8
   14000a831:	mov    QWORD PTR [rsp+0x28],rcx
   14000a836:	lea    rcx,[rbp+0x40]
   14000a83a:	shl    rsi,0x5
   14000a83e:	mov    rax,QWORD PTR [rdx+0x8]
   14000a842:	mov    r8,QWORD PTR [rsi+rax*1]
   14000a846:	call   0x140006448
   14000a84b:	mov    ebx,eax
   14000a84d:	mov    eax,0x80000000
   14000a852:	lea    ecx,[rbx+rax*1]
   14000a855:	test   eax,ecx
   14000a857:	jne    0x14000a88e
   14000a859:	cmp    ebx,0x800700ea
   14000a85f:	je     0x14000a88e
   14000a861:	cmp    ebx,0x8007065e
   14000a867:	jne    0x14000a86e
   14000a869:	mov    ebx,0x8007000d
   14000a86e:	mov    eax,ebx
   14000a870:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a878:	xor    rcx,rsp
   14000a87b:	call   0x140004450
   14000a880:	add    rsp,0xe0
   14000a887:	pop    r14
   14000a889:	pop    rdi
   14000a88a:	pop    rsi
   14000a88b:	pop    rbp
   14000a88c:	pop    rbx
   14000a88d:	ret    
   14000a88e:	cmp    DWORD PTR [rsp+0x40],0xffff
   14000a896:	ja     0x14000a869
   14000a898:	movzx  edx,WORD PTR [rsp+0x40]
   14000a89d:	mov    rcx,rdi
   14000a8a0:	call   0x140008090
   14000a8a5:	mov    rdi,rax
   14000a8a8:	test   rax,rax
   14000a8ab:	je     0x14000a914
   14000a8ad:	test   ebx,ebx
   14000a8af:	js     0x14000a8c5
   14000a8b1:	mov    r8d,DWORD PTR [rsp+0x40]
   14000a8b6:	lea    rdx,[rsp+0x50]
   14000a8bb:	mov    rcx,rax
   14000a8be:	call   0x140004b4a
   14000a8c3:	jmp    0x14000a8f5
   14000a8c5:	mov    rax,QWORD PTR [rbp+0x10]
   14000a8c9:	lea    rcx,[rsp+0x40]
   14000a8ce:	mov    QWORD PTR [rsp+0x30],rcx
   14000a8d3:	mov    r9d,0x8
   14000a8d9:	lea    rcx,[rbp+0x40]
   14000a8dd:	mov    QWORD PTR [rsp+0x28],rdi
   14000a8e2:	mov    rdx,QWORD PTR [rax+0x28]
   14000a8e6:	mov    rax,QWORD PTR [rdx+0x8]
   14000a8ea:	mov    r8,QWORD PTR [rsi+rax*1]
   14000a8ee:	call   0x140006448
   14000a8f3:	mov    ebx,eax
   14000a8f5:	test   ebx,ebx
   14000a8f7:	js     0x14000a86e
   14000a8fd:	mov    edx,DWORD PTR [rsp+0x40]
   14000a901:	xor    r8d,r8d
   14000a904:	mov    rcx,rdi
   14000a907:	call   QWORD PTR [rip+0x2b5b]        # 0x14000d468
   14000a90d:	test   al,al
   14000a90f:	jmp    0x14000a867
   14000a914:	mov    ebx,0x8007000e
   14000a919:	jmp    0x14000a86e
   14000a91e:	int3   
   14000a91f:	int3   
   14000a920:	int3   
   14000a921:	int3   
   14000a922:	int3   
   14000a923:	int3   
   14000a924:	mov    QWORD PTR [rsp+0x8],rbx
   14000a929:	mov    QWORD PTR [rsp+0x18],rsi
   14000a92e:	push   rdi
   14000a92f:	sub    rsp,0x30
   14000a933:	mov    rdi,rcx
   14000a936:	mov    ebx,edx
   14000a938:	mov    rcx,QWORD PTR [r8]
   14000a93b:	mov    rsi,r8
   14000a93e:	call   QWORD PTR [rip+0x2994]        # 0x14000d2d8
   14000a944:	and    QWORD PTR [rsi],0x0
   14000a948:	lea    r8,[rsp+0x48]
   14000a94d:	mov    rax,QWORD PTR [rdi+0x10]
   14000a951:	lea    rcx,[rdi+0x40]
   14000a955:	mov    QWORD PTR [rsp+0x20],r8
   14000a95a:	mov    edx,ebx
   14000a95c:	shl    rdx,0x5
   14000a960:	mov    r9,rsi
   14000a963:	mov    r8d,0x2
   14000a969:	mov    rax,QWORD PTR [rax+0x28]
   14000a96d:	mov    rax,QWORD PTR [rax+0x8]
   14000a971:	mov    rdx,QWORD PTR [rdx+rax*1]
   14000a975:	call   0x1400012c0
   14000a97a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a97f:	cmp    eax,0x8007065e
   14000a984:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a989:	mov    ecx,0x8007000d
   14000a98e:	cmove  eax,ecx
   14000a991:	add    rsp,0x30
   14000a995:	pop    rdi
   14000a996:	ret    
   14000a997:	int3   
   14000a998:	int3   
   14000a999:	int3   
   14000a99a:	int3   
   14000a99b:	int3   
   14000a99c:	int3   
   14000a99d:	int3   
   14000a99e:	int3   
   14000a99f:	int3   
   14000a9a0:	sub    rsp,0x48
   14000a9a4:	mov    rax,QWORD PTR [rcx+0x10]
   14000a9a8:	mov    r9,r8
   14000a9ab:	mov    edx,edx
   14000a9ad:	add    rcx,0x40
   14000a9b1:	shl    rdx,0x5
   14000a9b5:	mov    DWORD PTR [rsp+0x58],0x8
   14000a9bd:	mov    rax,QWORD PTR [rax+0x28]
   14000a9c1:	mov    rax,QWORD PTR [rax+0x8]
   14000a9c5:	mov    r8,QWORD PTR [rdx+rax*1]
   14000a9c9:	lea    rax,[rsp+0x58]
   14000a9ce:	and    QWORD PTR [r9],0x0
   14000a9d2:	mov    QWORD PTR [rsp+0x30],rax
   14000a9d7:	mov    QWORD PTR [rsp+0x28],r9
   14000a9dc:	mov    r9d,0x40
   14000a9e2:	call   0x140006448
   14000a9e7:	mov    edx,0x8007065e
   14000a9ec:	mov    ecx,0x80040153
   14000a9f1:	cmp    eax,edx
   14000a9f3:	cmove  eax,ecx
   14000a9f6:	mov    ecx,0x8007000d
   14000a9fb:	cmp    eax,edx
   14000a9fd:	cmove  eax,ecx
   14000aa00:	add    rsp,0x48
   14000aa04:	ret    
   14000aa05:	int3   
   14000aa06:	int3   
   14000aa07:	int3   
   14000aa08:	int3   
   14000aa09:	int3   
   14000aa0a:	int3   
   14000aa0b:	int3   
   14000aa0c:	int3   
   14000aa0d:	int3   
   14000aa0e:	int3   
   14000aa0f:	int3   
   14000aa10:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa15:	mov    QWORD PTR [rsp+0x10],rsi
   14000aa1a:	push   rdi
   14000aa1b:	sub    rsp,0x20
   14000aa1f:	mov    rax,QWORD PTR [rcx+0x18]
   14000aa23:	mov    rdi,rcx
   14000aa26:	test   rax,rax
   14000aa29:	js     0x14000aa39
   14000aa2b:	lea    rsi,[rax-0x1]
   14000aa2f:	lock cmpxchg QWORD PTR [rcx+0x18],rsi
   14000aa35:	jne    0x14000aa26
   14000aa37:	jmp    0x14000aa44
   14000aa39:	or     esi,0xffffffff
   14000aa3c:	lock xadd DWORD PTR [rax+rax*1+0x10],esi
   14000aa42:	dec    esi
   14000aa44:	test   esi,esi
   14000aa46:	jne    0x14000aa86
   14000aa48:	test   rcx,rcx
   14000aa4b:	je     0x14000aa65
   14000aa4d:	mov    rax,QWORD PTR [rcx]
   14000aa50:	mov    rbx,QWORD PTR [rax+0x50]
   14000aa54:	mov    rcx,rbx
   14000aa57:	call   QWORD PTR [rip+0x2a5b]        # 0x14000d4b8
   14000aa5d:	lea    edx,[rsi+0x1]
   14000aa60:	mov    rcx,rdi
   14000aa63:	call   rbx
   14000aa65:	mov    rdi,QWORD PTR [rip+0x831c]        # 0x140012d88
   14000aa6c:	test   rdi,rdi
   14000aa6f:	je     0x14000aa86
   14000aa71:	mov    rdx,QWORD PTR [rdi]
   14000aa74:	mov    rbx,QWORD PTR [rdx+0x10]
   14000aa78:	mov    rcx,rbx
   14000aa7b:	call   QWORD PTR [rip+0x2a37]        # 0x14000d4b8
   14000aa81:	mov    rcx,rdi
   14000aa84:	call   rbx
   14000aa86:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aa8b:	mov    eax,esi
   14000aa8d:	mov    rsi,QWORD PTR [rsp+0x38]
   14000aa92:	add    rsp,0x20
   14000aa96:	pop    rdi
   14000aa97:	ret    
   14000aa98:	int3   
   14000aa99:	int3   
   14000aa9a:	int3   
   14000aa9b:	int3   
   14000aa9c:	int3   
   14000aa9d:	int3   
   14000aa9e:	int3   
   14000aa9f:	int3   
   14000aaa0:	mov    QWORD PTR [rsp+0x8],rbx
   14000aaa5:	mov    QWORD PTR [rsp+0x10],rsi
   14000aaaa:	push   rdi
   14000aaab:	sub    rsp,0x20
   14000aaaf:	mov    rax,QWORD PTR [rcx+0x18]
   14000aab3:	mov    rdi,rcx
   14000aab6:	test   rax,rax
   14000aab9:	js     0x14000aac9
   14000aabb:	lea    rsi,[rax-0x1]
   14000aabf:	lock cmpxchg QWORD PTR [rcx+0x18],rsi
   14000aac5:	jne    0x14000aab6
   14000aac7:	jmp    0x14000aad4
   14000aac9:	or     esi,0xffffffff
   14000aacc:	lock xadd DWORD PTR [rax+rax*1+0x10],esi
   14000aad2:	dec    esi
   14000aad4:	test   esi,esi
   14000aad6:	jne    0x14000ab16
   14000aad8:	test   rcx,rcx
   14000aadb:	je     0x14000aaf5
   14000aadd:	mov    rax,QWORD PTR [rcx]
   14000aae0:	mov    rbx,QWORD PTR [rax+0x40]
   14000aae4:	mov    rcx,rbx
   14000aae7:	call   QWORD PTR [rip+0x29cb]        # 0x14000d4b8
   14000aaed:	lea    edx,[rsi+0x1]
   14000aaf0:	mov    rcx,rdi
   14000aaf3:	call   rbx
   14000aaf5:	mov    rdi,QWORD PTR [rip+0x828c]        # 0x140012d88
   14000aafc:	test   rdi,rdi
   14000aaff:	je     0x14000ab16
   14000ab01:	mov    rdx,QWORD PTR [rdi]
   14000ab04:	mov    rbx,QWORD PTR [rdx+0x10]
   14000ab08:	mov    rcx,rbx
   14000ab0b:	call   QWORD PTR [rip+0x29a7]        # 0x14000d4b8
   14000ab11:	mov    rcx,rdi
   14000ab14:	call   rbx
   14000ab16:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ab1b:	mov    eax,esi
   14000ab1d:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ab22:	add    rsp,0x20
   14000ab26:	pop    rdi
   14000ab27:	ret    
   14000ab28:	int3   
   14000ab29:	int3   
   14000ab2a:	int3   
   14000ab2b:	int3   
   14000ab2c:	int3   
   14000ab2d:	int3   
   14000ab2e:	int3   
   14000ab2f:	int3   
   14000ab30:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab35:	mov    QWORD PTR [rsp+0x10],rsi
   14000ab3a:	push   rdi
   14000ab3b:	sub    rsp,0x20
   14000ab3f:	mov    rax,QWORD PTR [rcx+0x20]
   14000ab43:	mov    rdi,rcx
   14000ab46:	test   rax,rax
   14000ab49:	js     0x14000ab59
   14000ab4b:	lea    rsi,[rax-0x1]
   14000ab4f:	lock cmpxchg QWORD PTR [rcx+0x20],rsi
   14000ab55:	jne    0x14000ab46
   14000ab57:	jmp    0x14000ab64
   14000ab59:	or     esi,0xffffffff
   14000ab5c:	lock xadd DWORD PTR [rax+rax*1+0x10],esi
   14000ab62:	dec    esi
   14000ab64:	test   esi,esi
   14000ab66:	jne    0x14000aba6
   14000ab68:	test   rcx,rcx
   14000ab6b:	je     0x14000ab85
   14000ab6d:	mov    rax,QWORD PTR [rcx]
   14000ab70:	mov    rbx,QWORD PTR [rax+0x50]
   14000ab74:	mov    rcx,rbx
   14000ab77:	call   QWORD PTR [rip+0x293b]        # 0x14000d4b8
   14000ab7d:	lea    edx,[rsi+0x1]
   14000ab80:	mov    rcx,rdi
   14000ab83:	call   rbx
   14000ab85:	mov    rdi,QWORD PTR [rip+0x81fc]        # 0x140012d88
   14000ab8c:	test   rdi,rdi
   14000ab8f:	je     0x14000aba6
   14000ab91:	mov    rdx,QWORD PTR [rdi]
   14000ab94:	mov    rbx,QWORD PTR [rdx+0x10]
   14000ab98:	mov    rcx,rbx
   14000ab9b:	call   QWORD PTR [rip+0x2917]        # 0x14000d4b8
   14000aba1:	mov    rcx,rdi
   14000aba4:	call   rbx
   14000aba6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000abab:	mov    eax,esi
   14000abad:	mov    rsi,QWORD PTR [rsp+0x38]
   14000abb2:	add    rsp,0x20
   14000abb6:	pop    rdi
   14000abb7:	ret    
   14000abb8:	int3   
   14000abb9:	int3   
   14000abba:	int3   
   14000abbb:	int3   
   14000abbc:	int3   
   14000abbd:	int3   
   14000abbe:	int3   
   14000abbf:	int3   
   14000abc0:	mov    QWORD PTR [rsp+0x8],rbx
   14000abc5:	mov    QWORD PTR [rsp+0x10],rsi
   14000abca:	push   rdi
   14000abcb:	sub    rsp,0x20
   14000abcf:	mov    rsi,rcx
   14000abd2:	or     edi,0xffffffff
   14000abd5:	lock xadd DWORD PTR [rcx+0xc],edi
   14000abda:	sub    edi,0x1
   14000abdd:	jne    0x14000ac1d
   14000abdf:	test   rcx,rcx
   14000abe2:	je     0x14000abfc
   14000abe4:	mov    rax,QWORD PTR [rcx]
   14000abe7:	mov    rbx,QWORD PTR [rax+0x20]
   14000abeb:	mov    rcx,rbx
   14000abee:	call   QWORD PTR [rip+0x28c4]        # 0x14000d4b8
   14000abf4:	lea    edx,[rdi+0x1]
   14000abf7:	mov    rcx,rsi
   14000abfa:	call   rbx
   14000abfc:	mov    rsi,QWORD PTR [rip+0x8185]        # 0x140012d88
   14000ac03:	test   rsi,rsi
   14000ac06:	je     0x14000ac1d
   14000ac08:	mov    rdx,QWORD PTR [rsi]
   14000ac0b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000ac0f:	mov    rcx,rbx
   14000ac12:	call   QWORD PTR [rip+0x28a0]        # 0x14000d4b8
   14000ac18:	mov    rcx,rsi
   14000ac1b:	call   rbx
   14000ac1d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ac22:	mov    eax,edi
   14000ac24:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ac29:	add    rsp,0x20
   14000ac2d:	pop    rdi
   14000ac2e:	ret    
   14000ac2f:	int3   
   14000ac30:	int3   
   14000ac31:	int3   
   14000ac32:	int3   
   14000ac33:	int3   
   14000ac34:	int3   
   14000ac35:	int3   
   14000ac36:	int3   
   14000ac37:	int3   
   14000ac38:	int3   
   14000ac39:	int3   
   14000ac3a:	int3   
   14000ac3b:	int3   
   14000ac3c:	int3   
   14000ac3d:	int3   
   14000ac3e:	int3   
   14000ac3f:	int3   
   14000ac40:	jmp    0x14000aaa0
   14000ac45:	int3   
   14000ac46:	int3   
   14000ac47:	int3   
   14000ac48:	int3   
   14000ac49:	int3   
   14000ac4a:	int3   
   14000ac4b:	int3   
   14000ac4c:	int3   
   14000ac4d:	int3   
   14000ac4e:	int3   
   14000ac4f:	int3   
   14000ac50:	jmp    0x14000ab30
   14000ac55:	int3   
   14000ac56:	int3   
   14000ac57:	int3   
   14000ac58:	int3   
   14000ac59:	int3   
   14000ac5a:	int3   
   14000ac5b:	int3   
   14000ac5c:	int3   
   14000ac5d:	int3   
   14000ac5e:	int3   
   14000ac5f:	int3   
   14000ac60:	jmp    0x14000aa10
   14000ac65:	int3   
   14000ac66:	int3   
   14000ac67:	int3   
   14000ac68:	int3   
   14000ac69:	int3   
   14000ac6a:	int3   
   14000ac6b:	int3   
   14000ac6c:	int3   
   14000ac6d:	int3   
   14000ac6e:	int3   
   14000ac6f:	int3   
   14000ac70:	mov    rax,rsp
   14000ac73:	mov    QWORD PTR [rax+0x8],rbx
   14000ac77:	mov    QWORD PTR [rax+0x10],rbp
   14000ac7b:	mov    QWORD PTR [rax+0x18],rsi
   14000ac7f:	mov    QWORD PTR [rax+0x20],rdi
   14000ac83:	push   r14
   14000ac85:	sub    rsp,0x20
   14000ac89:	and    QWORD PTR [r8],0x0
   14000ac8d:	mov    rsi,r8
   14000ac90:	mov    r14,rdx
   14000ac93:	mov    rbp,rcx
   14000ac96:	jmp    0x14000aca4
   14000ac98:	lea    r9d,[rax+0x1]
   14000ac9c:	lock cmpxchg DWORD PTR [rcx+0x10],r9d
   14000aca2:	je     0x14000acc6
   14000aca4:	mov    eax,DWORD PTR [rcx+0x10]
   14000aca7:	test   eax,eax
   14000aca9:	jne    0x14000ac98
   14000acab:	mov    rbx,QWORD PTR [rsp+0x30]
   14000acb0:	mov    rbp,QWORD PTR [rsp+0x38]
   14000acb5:	mov    rsi,QWORD PTR [rsp+0x40]
   14000acba:	mov    rdi,QWORD PTR [rsp+0x48]
   14000acbf:	add    rsp,0x20
   14000acc3:	pop    r14
   14000acc5:	ret    
   14000acc6:	mov    rdi,QWORD PTR [rcx+0x18]
   14000acca:	mov    rax,QWORD PTR [rdi]
   14000accd:	mov    rbx,QWORD PTR [rax]
   14000acd0:	mov    rcx,rbx
   14000acd3:	call   QWORD PTR [rip+0x27df]        # 0x14000d4b8
   14000acd9:	mov    r8,rsi
   14000acdc:	mov    rdx,r14
   14000acdf:	mov    rcx,rdi
   14000ace2:	call   rbx
   14000ace4:	mov    rdi,QWORD PTR [rbp+0x18]
   14000ace8:	mov    esi,eax
   14000acea:	mov    rdx,QWORD PTR [rdi]
   14000aced:	mov    rbx,QWORD PTR [rdx+0x10]
   14000acf1:	mov    rcx,rbx
   14000acf4:	call   QWORD PTR [rip+0x27be]        # 0x14000d4b8
   14000acfa:	mov    rcx,rdi
   14000acfd:	call   rbx
   14000acff:	mov    eax,esi
   14000ad01:	jmp    0x14000acab
   14000ad03:	int3   
   14000ad04:	int3   
   14000ad05:	int3   
   14000ad06:	int3   
   14000ad07:	int3   
   14000ad08:	int3   
   14000ad09:	int3   
   14000ad0a:	int3   
   14000ad0b:	int3   
   14000ad0c:	mov    rax,rsp
   14000ad0f:	mov    QWORD PTR [rax+0x8],rsi
   14000ad13:	mov    QWORD PTR [rax+0x10],rdi
   14000ad17:	mov    QWORD PTR [rax+0x20],r9
   14000ad1b:	push   r14
   14000ad1d:	sub    rsp,0x20
   14000ad21:	and    QWORD PTR [rdx],0x0
   14000ad25:	mov    r14,rdx
   14000ad28:	and    QWORD PTR [r8],0x0
   14000ad2c:	lea    rdx,[rip+0x2d2d]        # 0x14000da60
   14000ad33:	and    QWORD PTR [rax+0x20],0x0
   14000ad38:	mov    rdi,rcx
   14000ad3b:	mov    ecx,0x50
   14000ad40:	mov    rsi,r8
   14000ad43:	call   0x140004a7c
   14000ad48:	test   rax,rax
   14000ad4b:	je     0x14000ad91
   14000ad4d:	mov    rcx,rax
   14000ad50:	call   0x140007600
   14000ad55:	mov    rdx,rax
   14000ad58:	lea    rcx,[rsp+0x48]
   14000ad5d:	call   0x1400080e8
   14000ad62:	cmp    QWORD PTR [rsp+0x48],0x0
   14000ad68:	je     0x14000ad91
   14000ad6a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ad6f:	mov    rdx,rdi
   14000ad72:	call   0x1400098b0
   14000ad77:	mov    edi,eax
   14000ad79:	test   eax,eax
   14000ad7b:	js     0x14000ad96
   14000ad7d:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ad82:	mov    r8,rsi
   14000ad85:	mov    rdx,r14
   14000ad88:	call   0x14000adc0
   14000ad8d:	mov    edi,eax
   14000ad8f:	jmp    0x14000ad96
   14000ad91:	mov    edi,0x8007000e
   14000ad96:	lea    rcx,[rsp+0x48]
   14000ad9b:	call   0x140009cf8
   14000ada0:	mov    rsi,QWORD PTR [rsp+0x30]
   14000ada5:	mov    eax,edi
   14000ada7:	mov    rdi,QWORD PTR [rsp+0x38]
   14000adac:	add    rsp,0x20
   14000adb0:	pop    r14
   14000adb2:	ret    
   14000adb3:	int3   
   14000adb4:	int3   
   14000adb5:	int3   
   14000adb6:	int3   
   14000adb7:	int3   
   14000adb8:	int3   
   14000adb9:	int3   
   14000adba:	int3   
   14000adbb:	int3   
   14000adbc:	int3   
   14000adbd:	int3   
   14000adbe:	int3   
   14000adbf:	int3   
   14000adc0:	mov    QWORD PTR [rsp+0x8],rbx
   14000adc5:	mov    QWORD PTR [rsp+0x18],rsi
   14000adca:	push   rdi
   14000adcb:	push   r14
   14000adcd:	push   r15
   14000adcf:	sub    rsp,0x20
   14000add3:	and    QWORD PTR [rdx],0x0
   14000add7:	mov    r14,r8
   14000adda:	and    QWORD PTR [r8],0x0
   14000adde:	mov    r15,rdx
   14000ade1:	mov    rsi,rcx
   14000ade4:	call   0x14000858c
   14000ade9:	mov    edi,eax
   14000adeb:	test   eax,eax
   14000aded:	js     0x14000ae8b
   14000adf3:	mov    rcx,rsi
   14000adf6:	call   0x1400087e4
   14000adfb:	mov    edi,eax
   14000adfd:	test   eax,eax
   14000adff:	js     0x14000ae8b
   14000ae05:	mov    rax,QWORD PTR [rsi+0x30]
   14000ae09:	xor    edi,edi
   14000ae0b:	mov    rcx,QWORD PTR [rax+0x28]
   14000ae0f:	mov    eax,DWORD PTR [rcx+0xc]
   14000ae12:	mov    DWORD PTR [rsp+0x48],eax
   14000ae16:	test   eax,eax
   14000ae18:	je     0x14000ae8b
   14000ae1a:	mov    rcx,QWORD PTR [rsi+0x38]
   14000ae1e:	test   rcx,rcx
   14000ae21:	je     0x14000ae35
   14000ae23:	lea    rdx,[rsp+0x48]
   14000ae28:	call   0x14000b180
   14000ae2d:	mov    edi,eax
   14000ae2f:	mov    eax,DWORD PTR [rsp+0x48]
   14000ae33:	jmp    0x14000ae37
   14000ae35:	xor    eax,eax
   14000ae37:	test   edi,edi
   14000ae39:	js     0x14000ae8b
   14000ae3b:	test   eax,eax
   14000ae3d:	je     0x14000ae8b
   14000ae3f:	mov    rbx,QWORD PTR [rsi+0x30]
   14000ae43:	lea    rcx,[rsp+0x48]
   14000ae48:	mov    QWORD PTR [rsp+0x48],rbx
   14000ae4d:	call   0x14000634c
   14000ae52:	and    QWORD PTR [rsp+0x48],0x0
   14000ae58:	lea    rcx,[rsp+0x48]
   14000ae5d:	mov    QWORD PTR [r15],rbx
   14000ae60:	call   0x140006384
   14000ae65:	mov    rbx,QWORD PTR [rsi+0x38]
   14000ae69:	lea    rcx,[rsp+0x48]
   14000ae6e:	mov    QWORD PTR [rsp+0x48],rbx
   14000ae73:	call   0x14000634c
   14000ae78:	and    QWORD PTR [rsp+0x48],0x0
   14000ae7e:	lea    rcx,[rsp+0x48]
   14000ae83:	mov    QWORD PTR [r14],rbx
   14000ae86:	call   0x140006384
   14000ae8b:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ae90:	mov    eax,edi
   14000ae92:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ae97:	add    rsp,0x20
   14000ae9b:	pop    r15
   14000ae9d:	pop    r14
   14000ae9f:	pop    rdi
   14000aea0:	ret    
   14000aea1:	int3   
   14000aea2:	int3   
   14000aea3:	int3   
   14000aea4:	int3   
   14000aea5:	int3   
   14000aea6:	int3   
   14000aea7:	int3   
   14000aea8:	int3   
   14000aea9:	int3   
   14000aeaa:	int3   
   14000aeab:	int3   
   14000aeac:	int3   
   14000aead:	int3   
   14000aeae:	int3   
   14000aeaf:	int3   
   14000aeb0:	jmp    0x14000ad0c
   14000aeb5:	int3   
   14000aeb6:	int3   
   14000aeb7:	int3   
   14000aeb8:	int3   
   14000aeb9:	int3   
   14000aeba:	int3   
   14000aebb:	int3   
   14000aebc:	rex push rbx
   14000aebe:	sub    rsp,0x20
   14000aec2:	cmp    DWORD PTR [rcx],0x1
   14000aec5:	mov    rbx,rdx
   14000aec8:	mov    QWORD PTR [rdx],rcx
   14000aecb:	jne    0x14000aedc
   14000aecd:	cmp    DWORD PTR [rcx+0x8],0x0
   14000aed1:	jne    0x14000aee6
   14000aed3:	mov    DWORD PTR [rcx+0x8],0xf0000000
   14000aeda:	jmp    0x14000aee6
   14000aedc:	add    rcx,0x8
   14000aee0:	call   QWORD PTR [rip+0x233a]        # 0x14000d220
   14000aee6:	and    DWORD PTR [rbx+0x8],0x0
   14000aeea:	mov    rax,rbx
   14000aeed:	add    rsp,0x20
   14000aef1:	pop    rbx
   14000aef2:	ret    
   14000aef3:	int3   
   14000aef4:	int3   
   14000aef5:	int3   
   14000aef6:	int3   
   14000aef7:	int3   
   14000aef8:	int3   
   14000aef9:	int3   
   14000aefa:	int3   
   14000aefb:	int3   
   14000aefc:	int3   
   14000aefd:	int3   
   14000aefe:	int3   
   14000aeff:	int3   
   14000af00:	mov    QWORD PTR [rsp+0x8],rbx
   14000af05:	mov    QWORD PTR [rsp+0x10],rsi
   14000af0a:	mov    QWORD PTR [rsp+0x18],rdi
   14000af0f:	push   r14
   14000af11:	sub    rsp,0x20
   14000af15:	lea    rsi,[rcx+0x20]
   14000af19:	mov    rbx,rcx
   14000af1c:	xor    edi,edi
   14000af1e:	mov    rcx,rsi
   14000af21:	mov    r14,rdx
   14000af24:	mov    QWORD PTR [rdx],rdi
   14000af27:	call   QWORD PTR [rip+0x22d3]        # 0x14000d200
   14000af2d:	cmp    QWORD PTR [rbx+0x38],rdi
   14000af31:	je     0x14000af45
   14000af33:	lea    rcx,[rbx+0x38]
   14000af37:	call   0x14000634c
   14000af3c:	mov    rax,QWORD PTR [rbx+0x38]
   14000af40:	mov    QWORD PTR [r14],rax
   14000af43:	jmp    0x14000af56
   14000af45:	mov    ebx,0x8000000b
   14000af4a:	xor    edx,edx
   14000af4c:	mov    ecx,ebx
   14000af4e:	call   QWORD PTR [rip+0x231c]        # 0x14000d270
   14000af54:	mov    edi,ebx
   14000af56:	mov    rcx,rsi
   14000af59:	call   QWORD PTR [rip+0x22b1]        # 0x14000d210
   14000af5f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000af64:	mov    eax,edi
   14000af66:	mov    rdi,QWORD PTR [rsp+0x40]
   14000af6b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000af70:	add    rsp,0x20
   14000af74:	pop    r14
   14000af76:	ret    
   14000af77:	int3   
   14000af78:	int3   
   14000af79:	int3   
   14000af7a:	int3   
   14000af7b:	int3   
   14000af7c:	int3   
   14000af7d:	int3   
   14000af7e:	int3   
   14000af7f:	int3   
   14000af80:	mov    QWORD PTR [rsp+0x8],rbx
   14000af85:	mov    QWORD PTR [rsp+0x10],rsi
   14000af8a:	push   rdi
   14000af8b:	sub    rsp,0x20
   14000af8f:	xor    esi,esi
   14000af91:	mov    QWORD PTR [rdx],rsi
   14000af94:	mov    rdi,QWORD PTR [rcx+0x20]
   14000af98:	mov    eax,DWORD PTR [rcx+0x28]
   14000af9b:	cmp    eax,DWORD PTR [rdi+0xc]
   14000af9e:	jae    0x14000afbf
   14000afa0:	mov    rdi,QWORD PTR [rdi+rax*8+0x10]
   14000afa5:	mov    QWORD PTR [rdx],rdi
   14000afa8:	mov    rax,QWORD PTR [rdi]
   14000afab:	mov    rbx,QWORD PTR [rax+0x8]
   14000afaf:	mov    rcx,rbx
   14000afb2:	call   QWORD PTR [rip+0x2500]        # 0x14000d4b8
   14000afb8:	mov    rcx,rdi
   14000afbb:	call   rbx
   14000afbd:	jmp    0x14000afd0
   14000afbf:	mov    ebx,0x8000000b
   14000afc4:	xor    edx,edx
   14000afc6:	mov    ecx,ebx
   14000afc8:	call   QWORD PTR [rip+0x22a2]        # 0x14000d270
   14000afce:	mov    esi,ebx
   14000afd0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000afd5:	mov    eax,esi
   14000afd7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000afdc:	add    rsp,0x20
   14000afe0:	pop    rdi
   14000afe1:	ret    
   14000afe2:	int3   
   14000afe3:	int3   
   14000afe4:	int3   
   14000afe5:	int3   
   14000afe6:	int3   
   14000afe7:	int3   
   14000afe8:	int3   
   14000afe9:	int3   
   14000afea:	int3   
   14000afeb:	int3   
   14000afec:	int3   
   14000afed:	int3   
   14000afee:	int3   
   14000afef:	int3   
   14000aff0:	mov    QWORD PTR [rsp+0x8],rbx
   14000aff5:	mov    QWORD PTR [rsp+0x10],rsi
   14000affa:	push   rdi
   14000affb:	sub    rsp,0x30
   14000afff:	mov    rsi,rdx
   14000b002:	mov    rdi,rcx
   14000b005:	add    rcx,0x20
   14000b009:	lea    rdx,[rsp+0x20]
   14000b00e:	call   0x14000aebc
   14000b013:	mov    ebx,DWORD PTR [rsp+0x28]
   14000b017:	test   ebx,ebx
   14000b019:	js     0x14000b061
   14000b01b:	mov    rcx,rdi
   14000b01e:	call   0x1400084b0
   14000b023:	mov    ebx,eax
   14000b025:	test   eax,eax
   14000b027:	js     0x14000b061
   14000b029:	cmp    QWORD PTR [rdi+0x38],0x0
   14000b02e:	jne    0x14000b03f
   14000b030:	mov    ebx,0x8000000b
   14000b035:	xor    edx,edx
   14000b037:	mov    ecx,ebx
   14000b039:	call   QWORD PTR [rip+0x2231]        # 0x14000d270
   14000b03f:	test   ebx,ebx
   14000b041:	js     0x14000b061
   14000b043:	mov    rdi,QWORD PTR [rdi+0x38]
   14000b047:	mov    rax,QWORD PTR [rdi]
   14000b04a:	mov    rbx,QWORD PTR [rax+0x30]
   14000b04e:	mov    rcx,rbx
   14000b051:	call   QWORD PTR [rip+0x2461]        # 0x14000d4b8
   14000b057:	mov    rdx,rsi
   14000b05a:	mov    rcx,rdi
   14000b05d:	call   rbx
   14000b05f:	mov    ebx,eax
   14000b061:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b066:	test   rcx,rcx
   14000b069:	je     0x14000b083
   14000b06b:	cmp    DWORD PTR [rcx],0x1
   14000b06e:	jne    0x14000b079
   14000b070:	add    DWORD PTR [rcx+0x8],0x10000000
   14000b077:	jmp    0x14000b083
   14000b079:	add    rcx,0x8
   14000b07d:	call   QWORD PTR [rip+0x2195]        # 0x14000d218
   14000b083:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b088:	mov    eax,ebx
   14000b08a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b08f:	add    rsp,0x30
   14000b093:	pop    rdi
   14000b094:	ret    
   14000b095:	int3   
   14000b096:	int3   
   14000b097:	int3   
   14000b098:	int3   
   14000b099:	int3   
   14000b09a:	int3   
   14000b09b:	int3   
   14000b09c:	int3   
   14000b09d:	int3   
   14000b09e:	int3   
   14000b09f:	int3   
   14000b0a0:	xor    eax,eax
   14000b0a2:	cmp    QWORD PTR [rcx+0x38],rax
   14000b0a6:	setne  al
   14000b0a9:	mov    BYTE PTR [rdx],al
   14000b0ab:	xor    eax,eax
   14000b0ad:	ret    
   14000b0ae:	int3   
   14000b0af:	int3   
   14000b0b0:	int3   
   14000b0b1:	int3   
   14000b0b2:	int3   
   14000b0b3:	int3   
   14000b0b4:	int3   
   14000b0b5:	int3   
   14000b0b6:	int3   
   14000b0b7:	int3   
   14000b0b8:	int3   
   14000b0b9:	int3   
   14000b0ba:	int3   
   14000b0bb:	int3   
   14000b0bc:	int3   
   14000b0bd:	int3   
   14000b0be:	int3   
   14000b0bf:	int3   
   14000b0c0:	mov    rax,QWORD PTR [rcx+0x20]
   14000b0c4:	mov    r8d,DWORD PTR [rax+0xc]
   14000b0c8:	cmp    DWORD PTR [rcx+0x28],r8d
   14000b0cc:	setb   al
   14000b0cf:	mov    BYTE PTR [rdx],al
   14000b0d1:	xor    eax,eax
   14000b0d3:	ret    
   14000b0d4:	int3   
   14000b0d5:	int3   
   14000b0d6:	int3   
   14000b0d7:	int3   
   14000b0d8:	int3   
   14000b0d9:	int3   
   14000b0da:	int3   
   14000b0db:	int3   
   14000b0dc:	int3   
   14000b0dd:	int3   
   14000b0de:	int3   
   14000b0df:	int3   
   14000b0e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b0e5:	mov    QWORD PTR [rsp+0x10],rsi
   14000b0ea:	push   rdi
   14000b0eb:	sub    rsp,0x30
   14000b0ef:	mov    rsi,rdx
   14000b0f2:	mov    BYTE PTR [rdx],0x0
   14000b0f5:	mov    rdi,rcx
   14000b0f8:	lea    rdx,[rsp+0x20]
   14000b0fd:	add    rcx,0x20
   14000b101:	call   0x14000aebc
   14000b106:	mov    ebx,DWORD PTR [rsp+0x28]
   14000b10a:	test   ebx,ebx
   14000b10c:	js     0x14000b126
   14000b10e:	mov    rcx,rdi
   14000b111:	call   0x1400084b0
   14000b116:	mov    ebx,eax
   14000b118:	test   eax,eax
   14000b11a:	js     0x14000b126
   14000b11c:	cmp    QWORD PTR [rdi+0x38],0x0
   14000b121:	setne  cl
   14000b124:	mov    BYTE PTR [rsi],cl
   14000b126:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b12b:	test   rcx,rcx
   14000b12e:	je     0x14000b148
   14000b130:	cmp    DWORD PTR [rcx],0x1
   14000b133:	jne    0x14000b13e
   14000b135:	add    DWORD PTR [rcx+0x8],0x10000000
   14000b13c:	jmp    0x14000b148
   14000b13e:	add    rcx,0x8
   14000b142:	call   QWORD PTR [rip+0x20d0]        # 0x14000d218
   14000b148:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b14d:	mov    eax,ebx
   14000b14f:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b154:	add    rsp,0x30
   14000b158:	pop    rdi
   14000b159:	ret    
   14000b15a:	int3   
   14000b15b:	int3   
   14000b15c:	int3   
   14000b15d:	int3   
   14000b15e:	int3   
   14000b15f:	int3   
   14000b160:	mov    rcx,QWORD PTR [rcx+0x20]
   14000b164:	rex.W jmp QWORD PTR [rip+0x215d]        # 0x14000d2c8
   14000b16b:	int3   
   14000b16c:	int3   
   14000b16d:	int3   
   14000b16e:	int3   
   14000b16f:	int3   
   14000b170:	int3   
   14000b171:	int3   
   14000b172:	int3   
   14000b173:	int3   
   14000b174:	int3   
   14000b175:	int3   
   14000b176:	int3   
   14000b177:	int3   
   14000b178:	int3   
   14000b179:	int3   
   14000b17a:	int3   
   14000b17b:	int3   
   14000b17c:	int3   
   14000b17d:	int3   
   14000b17e:	int3   
   14000b17f:	int3   
   14000b180:	mov    QWORD PTR [rsp+0x8],rbx
   14000b185:	push   rdi
   14000b186:	sub    rsp,0x20
   14000b18a:	and    DWORD PTR [rdx],0x0
   14000b18d:	mov    rbx,rdx
   14000b190:	mov    rdi,rcx
   14000b193:	call   0x14000858c
   14000b198:	test   eax,eax
   14000b19a:	js     0x14000b1a1
   14000b19c:	mov    ecx,DWORD PTR [rdi+0x48]
   14000b19f:	mov    DWORD PTR [rbx],ecx
   14000b1a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b1a6:	add    rsp,0x20
   14000b1aa:	pop    rdi
   14000b1ab:	ret    
   14000b1ac:	int3   
   14000b1ad:	int3   
   14000b1ae:	int3   
   14000b1af:	int3   
   14000b1b0:	int3   
   14000b1b1:	int3   
   14000b1b2:	int3   
   14000b1b3:	int3   
   14000b1b4:	int3   
   14000b1b5:	int3   
   14000b1b6:	int3   
   14000b1b7:	int3   
   14000b1b8:	int3   
   14000b1b9:	int3   
   14000b1ba:	int3   
   14000b1bb:	int3   
   14000b1bc:	int3   
   14000b1bd:	int3   
   14000b1be:	int3   
   14000b1bf:	int3   
   14000b1c0:	rex push rbx
   14000b1c2:	sub    rsp,0x40
   14000b1c6:	and    DWORD PTR [rdx],0x0
   14000b1c9:	add    rcx,0x38
   14000b1cd:	mov    rbx,rdx
   14000b1d0:	mov    rax,QWORD PTR [rcx]
   14000b1d3:	test   rax,rax
   14000b1d6:	jne    0x14000b1dc
   14000b1d8:	and    DWORD PTR [rdx],eax
   14000b1da:	jmp    0x14000b1f2
   14000b1dc:	lea    r9,[rsp+0x50]
   14000b1e1:	xor    edx,edx
   14000b1e3:	call   0x14000a2a4
   14000b1e8:	test   eax,eax
   14000b1ea:	js     0x14000b1f2
   14000b1ec:	mov    ecx,DWORD PTR [rsp+0x50]
   14000b1f0:	mov    DWORD PTR [rbx],ecx
   14000b1f2:	add    rsp,0x40
   14000b1f6:	pop    rbx
   14000b1f7:	ret    
   14000b1f8:	int3   
   14000b1f9:	int3   
   14000b1fa:	int3   
   14000b1fb:	int3   
   14000b1fc:	int3   
   14000b1fd:	int3   
   14000b1fe:	int3   
   14000b1ff:	int3   
   14000b200:	mov    rax,rdx
   14000b203:	mov    rdx,QWORD PTR [rcx+0x28]
   14000b207:	mov    rcx,rax
   14000b20a:	jmp    0x140006d78
   14000b20f:	int3   
   14000b210:	int3   
   14000b211:	int3   
   14000b212:	int3   
   14000b213:	int3   
   14000b214:	int3   
   14000b215:	int3   
   14000b216:	int3   
   14000b217:	int3   
   14000b218:	mov    r11,rsp
   14000b21b:	mov    DWORD PTR [r11+0x18],r8d
   14000b21f:	sub    rsp,0x58
   14000b223:	mov    rax,QWORD PTR [rip+0x6dde]        # 0x140012008
   14000b22a:	xor    rax,rsp
   14000b22d:	mov    QWORD PTR [rsp+0x40],rax
   14000b232:	xor    edx,edx
   14000b234:	mov    QWORD PTR [r11-0x30],0x4
   14000b23c:	lea    rax,[r11+0x18]
   14000b240:	mov    QWORD PTR [r11-0x38],rax
   14000b244:	test   r9,r9
   14000b247:	je     0x14000b260
   14000b249:	or     rax,0xffffffffffffffff
   14000b24d:	inc    rax
   14000b250:	cmp    WORD PTR [r9+rax*2],dx
   14000b255:	jne    0x14000b24d
   14000b257:	lea    ecx,[rax*2+0x2]
   14000b25e:	jmp    0x14000b265
   14000b260:	mov    ecx,0xa
   14000b265:	test   r9,r9
   14000b268:	mov    DWORD PTR [rsp+0x38],ecx
   14000b26c:	mov    DWORD PTR [rsp+0x3c],edx
   14000b270:	lea    rax,[rip+0x3aa1]        # 0x14000ed18
   14000b277:	cmovne rax,r9
   14000b27b:	lea    rdx,[rip+0x3ac6]        # 0x14000ed48
   14000b282:	lea    r9,[rsp+0x20]
   14000b287:	mov    QWORD PTR [rsp+0x30],rax
   14000b28c:	xor    ecx,ecx
   14000b28e:	mov    r8d,0x2
   14000b294:	call   QWORD PTR [rip+0x2076]        # 0x14000d310
   14000b29a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b29f:	xor    rcx,rsp
   14000b2a2:	call   0x140004450
   14000b2a7:	add    rsp,0x58
   14000b2ab:	ret    
   14000b2ac:	int3   
   14000b2ad:	int3   
   14000b2ae:	int3   
   14000b2af:	int3   
   14000b2b0:	int3   
   14000b2b1:	int3   
   14000b2b2:	int3   
   14000b2b3:	int3   
   14000b2b4:	sub    rsp,0x48
   14000b2b8:	mov    rax,QWORD PTR [rip+0x6d49]        # 0x140012008
   14000b2bf:	xor    rax,rsp
   14000b2c2:	mov    QWORD PTR [rsp+0x30],rax
   14000b2c7:	xor    edx,edx
   14000b2c9:	test   r8,r8
   14000b2cc:	je     0x14000b2e5
   14000b2ce:	or     rax,0xffffffffffffffff
   14000b2d2:	inc    rax
   14000b2d5:	cmp    WORD PTR [r8+rax*2],dx
   14000b2da:	jne    0x14000b2d2
   14000b2dc:	lea    ecx,[rax*2+0x2]
   14000b2e3:	jmp    0x14000b2ea
   14000b2e5:	mov    ecx,0xa
   14000b2ea:	test   r8,r8
   14000b2ed:	mov    DWORD PTR [rsp+0x28],ecx
   14000b2f1:	mov    DWORD PTR [rsp+0x2c],edx
   14000b2f5:	lea    rax,[rip+0x3a1c]        # 0x14000ed18
   14000b2fc:	cmovne rax,r8
   14000b300:	lea    r9,[rsp+0x20]
   14000b305:	mov    r8d,0x1
   14000b30b:	mov    QWORD PTR [rsp+0x20],rax
   14000b310:	xor    ecx,ecx
   14000b312:	lea    rdx,[rip+0x3a0f]        # 0x14000ed28
   14000b319:	call   QWORD PTR [rip+0x1ff1]        # 0x14000d310
   14000b31f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b324:	xor    rcx,rsp
   14000b327:	call   0x140004450
   14000b32c:	add    rsp,0x48
   14000b330:	ret    
   14000b331:	int3   
   14000b332:	int3   
   14000b333:	int3   
   14000b334:	int3   
   14000b335:	int3   
   14000b336:	int3   
   14000b337:	int3   
   14000b338:	mov    QWORD PTR [rsp+0x8],rbx
   14000b33d:	push   rdi
   14000b33e:	sub    rsp,0x20
   14000b342:	mov    rdi,rcx
   14000b345:	add    rcx,0x18
   14000b349:	call   0x140008230
   14000b34e:	lea    rcx,[rdi+0x10]
   14000b352:	call   0x1400062f0
   14000b357:	lea    rcx,[rdi+0x8]
   14000b35b:	call   0x1400062f0
   14000b360:	mov    rcx,rdi
   14000b363:	call   QWORD PTR [rip+0x1ccf]        # 0x14000d038
   14000b369:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b36e:	mov    rax,rdi
   14000b371:	add    rsp,0x20
   14000b375:	pop    rdi
   14000b376:	ret    
   14000b377:	int3   
   14000b378:	int3   
   14000b379:	int3   
   14000b37a:	int3   
   14000b37b:	int3   
   14000b37c:	int3   
   14000b37d:	int3   
   14000b37e:	int3   
   14000b37f:	int3   
   14000b380:	mov    QWORD PTR [rsp+0x8],rbx
   14000b385:	push   rdi
   14000b386:	sub    rsp,0x20
   14000b38a:	mov    rdi,rdx
   14000b38d:	mov    rbx,rcx
   14000b390:	call   QWORD PTR [rip+0x1e8a]        # 0x14000d220
   14000b396:	mov    QWORD PTR [rdi],rbx
   14000b399:	mov    rax,rdi
   14000b39c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b3a1:	add    rsp,0x20
   14000b3a5:	pop    rdi
   14000b3a6:	ret    

Disassembly of section .imrsiv:

000000014000c000 <.imrsiv>:
   14000c000:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000014000d000 <.rdata>:
   14000d000:	loopne 0x14000d00a
   14000d002:	add    DWORD PTR [rax],eax
	...
   14000d010:	(bad)  
   14000d011:	or     eax,DWORD PTR [rcx]
   14000d013:	add    BYTE PTR [rax],al
   14000d015:	add    BYTE PTR [rax],al
   14000d017:	add    BYTE PTR [rax+0x109],ch
   14000d01d:	add    BYTE PTR [rax],al
   14000d01f:	add    BYTE PTR [rsi+0x13],bl
   14000d022:	add    DWORD PTR [rax],eax
   14000d024:	add    BYTE PTR [rax],al
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	adc    rax,QWORD PTR [rcx]
   14000d02b:	add    BYTE PTR [rax],al
   14000d02d:	add    BYTE PTR [rax],al
   14000d02f:	add    dh,bh
   14000d031:	or     BYTE PTR [rcx],al
   14000d033:	add    BYTE PTR [rax],al
   14000d035:	add    BYTE PTR [rax],al
   14000d037:	add    BYTE PTR [rbx+rcx*1+0x1],dh
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	cmp    al,0xc
   14000d042:	add    DWORD PTR [rax],eax
   14000d044:	add    BYTE PTR [rax],al
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	rex.WRX or al,0x1
   14000d04b:	add    BYTE PTR [rax],al
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rdx],ch
   14000d051:	or     eax,DWORD PTR [rcx]
   14000d053:	add    BYTE PTR [rax],al
   14000d055:	add    BYTE PTR [rax],al
   14000d057:	add    BYTE PTR [rsp+rcx*1+0x1],ah
   14000d05b:	add    BYTE PTR [rax],al
   14000d05d:	add    BYTE PTR [rax],al
   14000d05f:	add    BYTE PTR [rsi+0xc],bh
   14000d062:	add    DWORD PTR [rax],eax
   14000d064:	add    BYTE PTR [rax],al
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	xchg   esp,eax
   14000d069:	or     al,0x1
   14000d06b:	add    BYTE PTR [rax],al
   14000d06d:	add    BYTE PTR [rax],al
   14000d06f:	add    ah,dl
   14000d071:	or     eax,DWORD PTR [rcx]
   14000d073:	add    BYTE PTR [rax],al
   14000d075:	add    BYTE PTR [rax],al
   14000d077:	add    al,al
   14000d079:	or     al,BYTE PTR [rcx]
   14000d07b:	add    BYTE PTR [rax],al
   14000d07d:	add    BYTE PTR [rax],al
   14000d07f:	add    BYTE PTR [rsp+rcx*1],dl
   14000d082:	add    DWORD PTR [rax],eax
   14000d084:	add    BYTE PTR [rax],al
   14000d086:	add    BYTE PTR [rax],al
   14000d088:	js     0x14000d094
   14000d08a:	add    DWORD PTR [rax],eax
   14000d08c:	add    BYTE PTR [rax],al
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	cmp    al,0x9
   14000d092:	add    DWORD PTR [rax],eax
	...
   14000d0a0:	(bad)  
   14000d0a1:	adc    al,BYTE PTR [rcx]
   14000d0a3:	add    BYTE PTR [rax],al
   14000d0a5:	add    BYTE PTR [rax],al
   14000d0a7:	add    BYTE PTR [rdx],dl
   14000d0a9:	or     DWORD PTR [rcx],eax
   14000d0ab:	add    BYTE PTR [rax],al
   14000d0ad:	add    BYTE PTR [rax],al
   14000d0af:	add    BYTE PTR [rax+0xb],bh
   14000d0b2:	add    DWORD PTR [rax],eax
   14000d0b4:	add    BYTE PTR [rax],al
   14000d0b6:	add    BYTE PTR [rax],al
   14000d0b8:	fmul   DWORD PTR [rip+0x1]        # 0x14000d0bf
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	ss or  eax,0x1
	...
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	loop   0x14000d0de
   14000d0d2:	add    DWORD PTR [rax],eax
	...
   14000d0e0:	or     BYTE PTR [rdx],cl
   14000d0e2:	add    DWORD PTR [rax],eax
   14000d0e4:	add    BYTE PTR [rax],al
   14000d0e6:	add    BYTE PTR [rax],al
   14000d0e8:	xchg   BYTE PTR [rcx],cl
   14000d0ea:	add    DWORD PTR [rax],eax
   14000d0ec:	add    BYTE PTR [rax],al
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	xor    BYTE PTR [rcx],cl
   14000d0f2:	add    DWORD PTR [rax],eax
   14000d0f4:	add    BYTE PTR [rax],al
   14000d0f6:	add    BYTE PTR [rax],al
   14000d0f8:	es or  al,0x1
	...
   14000d107:	add    BYTE PTR [rdx+0x113],dh
	...
   14000d115:	add    BYTE PTR [rax],al
   14000d117:	add    BYTE PTR [rsi+0x9],cl
   14000d11a:	add    DWORD PTR [rax],eax
   14000d11c:	add    BYTE PTR [rax],al
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	and    cl,BYTE PTR [rcx]
   14000d122:	add    DWORD PTR [rax],eax
   14000d124:	add    BYTE PTR [rax],al
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	push   rsp
   14000d129:	or     eax,0x1
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	mov    BYTE PTR [rbx],cl
   14000d132:	add    DWORD PTR [rax],eax
	...
   14000d140:	movabs ds:0xf40000000000010a,al
   14000d149:	or     eax,0x1
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	int3   
   14000d151:	or     DWORD PTR [rcx],eax
   14000d153:	add    BYTE PTR [rax],al
   14000d155:	add    BYTE PTR [rax],al
   14000d157:	add    BYTE PTR [rdx+0x10d],al
   14000d15d:	add    BYTE PTR [rax],al
   14000d15f:	add    al,dh
   14000d161:	or     al,0x1
   14000d163:	add    BYTE PTR [rax],al
   14000d165:	add    BYTE PTR [rax],al
   14000d167:	add    BYTE PTR [rcx*1+0x1],ah
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	lods   al,BYTE PTR ds:[rsi]
   14000d171:	or     al,0x1
   14000d173:	add    BYTE PTR [rax],al
   14000d175:	add    BYTE PTR [rax],al
   14000d177:	add    BYTE PTR [rax+0x10d],bl
   14000d17d:	add    BYTE PTR [rax],al
   14000d17f:	add    ah,ch
   14000d181:	or     BYTE PTR [rcx],al
   14000d183:	add    BYTE PTR [rax],al
   14000d185:	add    BYTE PTR [rax],al
   14000d187:	add    BYTE PTR [rax+0x9],ah
   14000d18a:	add    DWORD PTR [rax],eax
	...
   14000d198:	push   0x10d
	...
   14000d1a5:	add    BYTE PTR [rax],al
   14000d1a7:	add    BYTE PTR [rsi+0x113],al
   14000d1ad:	add    BYTE PTR [rax],al
   14000d1af:	add    dl,ch
   14000d1b1:	or     eax,DWORD PTR [rcx]
   14000d1b3:	add    BYTE PTR [rax],al
   14000d1b5:	add    BYTE PTR [rax],al
   14000d1b7:	add    BYTE PTR [rdx+rdx*1+0x1],ch
   14000d1bb:	add    BYTE PTR [rax],al
   14000d1bd:	add    BYTE PTR [rax],al
   14000d1bf:	add    BYTE PTR [rsi],cl
   14000d1c1:	or     eax,0x1
   14000d1c6:	add    BYTE PTR [rax],al
   14000d1c8:	not    BYTE PTR [rdx]
   14000d1ca:	add    DWORD PTR [rax],eax
   14000d1cc:	add    BYTE PTR [rax],al
   14000d1ce:	add    BYTE PTR [rax],al
   14000d1d0:	or     al,BYTE PTR fs:[rcx]
   14000d1d3:	add    BYTE PTR [rax],al
   14000d1d5:	add    BYTE PTR [rax],al
   14000d1d7:	add    BYTE PTR [rax],bh
   14000d1d9:	adc    eax,DWORD PTR [rcx]
	...
   14000d1e7:	add    BYTE PTR [rdx+rdx*1+0x1],dl
	...
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	(bad)  
   14000d1f9:	adc    eax,DWORD PTR [rcx]
   14000d1fb:	add    BYTE PTR [rax],al
   14000d1fd:	add    BYTE PTR [rax],al
   14000d1ff:	add    BYTE PTR [rsi+0x13],ch
   14000d202:	add    DWORD PTR [rax],eax
   14000d204:	add    BYTE PTR [rax],al
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	ror    BYTE PTR [rcx],0x1
   14000d20b:	add    BYTE PTR [rax],al
   14000d20d:	add    BYTE PTR [rax],al
   14000d20f:	add    BYTE PTR [rdx+rdx*1+0x1],ch
   14000d216:	add    BYTE PTR [rax],al
   14000d218:	adc    BYTE PTR [rdx],dl
   14000d21a:	add    DWORD PTR [rax],eax
   14000d21c:	add    BYTE PTR [rax],al
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	push   rdx
   14000d221:	adc    al,BYTE PTR [rcx]
   14000d223:	add    BYTE PTR [rax],al
   14000d225:	add    BYTE PTR [rax],al
   14000d227:	add    ah,al
   14000d229:	or     eax,DWORD PTR [rcx]
   14000d22b:	add    BYTE PTR [rax],al
   14000d22d:	add    BYTE PTR [rax],al
   14000d22f:	add    BYTE PTR [rcx*1+0x1],bl
	...
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	cli    
   14000d241:	or     eax,DWORD PTR [rcx]
	...
   14000d24f:	add    BYTE PTR [rsi+0x10d],ch
   14000d255:	add    BYTE PTR [rax],al
   14000d257:	add    al,cl
   14000d259:	or     eax,0x1
	...
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	(bad)  
   14000d269:	or     al,BYTE PTR [rcx]
   14000d26b:	add    BYTE PTR [rax],al
   14000d26d:	add    BYTE PTR [rax],al
   14000d26f:	add    dl,dh
   14000d271:	or     al,BYTE PTR [rcx]
   14000d273:	add    BYTE PTR [rax],al
   14000d275:	add    BYTE PTR [rax],al
   14000d277:	add    BYTE PTR [rax+0x112],al
   14000d27d:	add    BYTE PTR [rax],al
   14000d27f:	add    BYTE PTR [rdx],bl
   14000d281:	or     al,BYTE PTR [rcx]
   14000d283:	add    BYTE PTR [rax],al
   14000d285:	add    BYTE PTR [rax],al
   14000d287:	add    BYTE PTR [rax+0xa],dl
   14000d28a:	add    DWORD PTR [rax],eax
	...
   14000d298:	cmp    al,0xb
   14000d29a:	add    DWORD PTR [rax],eax
   14000d29c:	add    BYTE PTR [rax],al
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	or     al,BYTE PTR ss:[rcx]
	...
   14000d2af:	add    BYTE PTR [rdx+0x111],bl
   14000d2b5:	add    BYTE PTR [rax],al
   14000d2b7:	add    BYTE PTR [rsi+0x113],dl
   14000d2bd:	add    BYTE PTR [rax],al
   14000d2bf:	add    BYTE PTR [rcx+rdx*1+0x1],bh
   14000d2c6:	add    BYTE PTR [rax],al
   14000d2c8:	cmp    BYTE PTR [rdx],dl
   14000d2ca:	add    DWORD PTR [rax],eax
   14000d2cc:	add    BYTE PTR [rax],al
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	jle    0x14000d2e3
   14000d2d2:	add    DWORD PTR [rax],eax
   14000d2d4:	add    BYTE PTR [rax],al
   14000d2d6:	add    BYTE PTR [rax],al
   14000d2d8:	xchg   edx,eax
   14000d2d9:	or     DWORD PTR [rcx],eax
   14000d2db:	add    BYTE PTR [rax],al
   14000d2dd:	add    BYTE PTR [rax],al
   14000d2df:	add    al,dh
   14000d2e1:	adc    DWORD PTR [rcx],eax
   14000d2e3:	add    BYTE PTR [rax],al
   14000d2e5:	add    BYTE PTR [rax],al
   14000d2e7:	add    dh,dl
   14000d2e9:	adc    al,BYTE PTR [rcx]
   14000d2eb:	add    BYTE PTR [rax],al
   14000d2ed:	add    BYTE PTR [rax],al
   14000d2ef:	add    ah,cl
   14000d2f1:	or     al,0x1
   14000d2f3:	add    BYTE PTR [rax],al
   14000d2f5:	add    BYTE PTR [rax],al
   14000d2f7:	add    BYTE PTR [rdx],bl
   14000d2f9:	adc    eax,DWORD PTR [rcx]
   14000d2fb:	add    BYTE PTR [rax],al
   14000d2fd:	add    BYTE PTR [rax],al
   14000d2ff:	add    dl,bl
   14000d301:	adc    DWORD PTR [rcx],eax
	...
   14000d30f:	add    BYTE PTR [rdx],ch
   14000d311:	adc    al,BYTE PTR [rcx]
	...
   14000d31f:	add    BYTE PTR [rsi],al
   14000d321:	or     eax,DWORD PTR [rcx]
   14000d323:	add    BYTE PTR [rax],al
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	add    BYTE PTR [rdx+0xb],dl
   14000d32a:	add    DWORD PTR [rax],eax
	...
   14000d338:	out    dx,al
   14000d339:	or     DWORD PTR [rcx],eax
   14000d33b:	add    BYTE PTR [rax],al
   14000d33d:	add    BYTE PTR [rax],al
   14000d33f:	add    al,ah
   14000d341:	or     DWORD PTR [rcx],eax
   14000d343:	add    BYTE PTR [rax],al
   14000d345:	add    BYTE PTR [rax],al
   14000d347:	add    BYTE PTR [rax+0x10a],dl
   14000d34d:	add    BYTE PTR [rax],al
   14000d34f:	add    BYTE PTR [rcx+rcx*1+0x1],dh
	...
   14000d35f:	add    BYTE PTR [rbp+0x0],al
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	add    BYTE PTR [rax],al
   14000d366:	add    BYTE PTR [rax+0x63],al
   14000d36c:	add    BYTE PTR [rax],al
   14000d36e:	add    BYTE PTR [rax+0x0],al
   14000d374:	add    BYTE PTR [rax],al
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	(bad)  
   14000d379:	or     BYTE PTR [rcx],al
   14000d37b:	add    BYTE PTR [rax],al
   14000d37d:	add    BYTE PTR [rax],al
   14000d37f:	add    dl,dh
   14000d381:	(bad)  
   14000d382:	add    DWORD PTR [rax],eax
   14000d384:	add    BYTE PTR [rax],al
   14000d386:	add    BYTE PTR [rax],al
   14000d388:	test   BYTE PTR [rax],dl
   14000d38a:	add    DWORD PTR [rax],eax
   14000d38c:	add    BYTE PTR [rax],al
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	js     0x14000d3a2
   14000d392:	add    DWORD PTR [rax],eax
   14000d394:	add    BYTE PTR [rax],al
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	push   0x10
   14000d39a:	add    DWORD PTR [rax],eax
   14000d39c:	add    BYTE PTR [rax],al
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	cwde   
   14000d3a1:	(bad)  
   14000d3a2:	add    DWORD PTR [rax],eax
   14000d3a4:	add    BYTE PTR [rax],al
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	adc    cl,BYTE PTR [rax]
   14000d3aa:	add    DWORD PTR [rax],eax
   14000d3ac:	add    BYTE PTR [rax],al
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	xor    al,0x8
   14000d3b2:	add    DWORD PTR [rax],eax
   14000d3b4:	add    BYTE PTR [rax],al
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	fadd   DWORD PTR [rdi]
   14000d3ba:	add    DWORD PTR [rax],eax
   14000d3bc:	add    BYTE PTR [rax],al
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	pop    rsp
   14000d3c1:	or     BYTE PTR [rcx],al
   14000d3c3:	add    BYTE PTR [rax],al
   14000d3c5:	add    BYTE PTR [rax],al
   14000d3c7:	add    dh,al
   14000d3c9:	(bad)  
   14000d3ca:	add    DWORD PTR [rax],eax
   14000d3cc:	add    BYTE PTR [rax],al
   14000d3ce:	add    BYTE PTR [rax],al
   14000d3d0:	push   0x8
   14000d3d2:	add    DWORD PTR [rax],eax
   14000d3d4:	add    BYTE PTR [rax],al
   14000d3d6:	add    BYTE PTR [rax],al
   14000d3d8:	je     0x14000d3e2
   14000d3da:	add    DWORD PTR [rax],eax
   14000d3dc:	add    BYTE PTR [rax],al
   14000d3de:	add    BYTE PTR [rax],al
   14000d3e0:	mov    ah,0x7
   14000d3e2:	add    DWORD PTR [rax],eax
   14000d3e4:	add    BYTE PTR [rax],al
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d3e9:	(bad)  
   14000d3ea:	add    DWORD PTR [rax],eax
   14000d3ec:	add    BYTE PTR [rax],al
   14000d3ee:	add    BYTE PTR [rax],al
   14000d3f0:	or     BYTE PTR ds:[rcx],al
   14000d3f3:	add    BYTE PTR [rax],al
   14000d3f5:	add    BYTE PTR [rax],al
   14000d3f7:	add    al,ah
   14000d3f9:	(bad)  
   14000d3fa:	add    DWORD PTR [rax],eax
   14000d3fc:	add    BYTE PTR [rax],al
   14000d3fe:	add    BYTE PTR [rax],al
   14000d400:	rex.WX or BYTE PTR [rcx],al
   14000d403:	add    BYTE PTR [rax],al
   14000d405:	add    BYTE PTR [rax],al
   14000d407:	add    al,ch
   14000d409:	(bad)  
   14000d40a:	add    DWORD PTR [rax],eax
   14000d40c:	add    BYTE PTR [rax],al
   14000d40e:	add    BYTE PTR [rax],al
   14000d410:	sub    cl,BYTE PTR [rax]
   14000d412:	add    DWORD PTR [rax],eax
   14000d414:	add    BYTE PTR [rax],al
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	xor    dl,BYTE PTR [rcx+rax*1]
   14000d41b:	add    BYTE PTR [rax],al
   14000d41d:	add    BYTE PTR [rax],al
   14000d41f:	add    BYTE PTR [rax],ch
   14000d421:	adc    al,0x1
   14000d423:	add    BYTE PTR [rax],al
   14000d425:	add    BYTE PTR [rax],al
   14000d427:	add    BYTE PTR [rdx+0x8],dl
   14000d42a:	add    DWORD PTR [rax],eax
   14000d42c:	add    BYTE PTR [rax],al
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	cmp    al,0x14
   14000d432:	add    DWORD PTR [rax],eax
	...
   14000d440:	push   0x11
   14000d442:	add    DWORD PTR [rax],eax
   14000d444:	add    BYTE PTR [rax],al
   14000d446:	add    BYTE PTR [rax],al
   14000d448:	pop    rsi
   14000d449:	adc    DWORD PTR [rcx],eax
   14000d44b:	add    BYTE PTR [rax],al
   14000d44d:	add    BYTE PTR [rax],al
   14000d44f:	add    BYTE PTR [rax+0x11],cl
   14000d452:	add    DWORD PTR [rax],eax
   14000d454:	add    BYTE PTR [rax],al
   14000d456:	add    BYTE PTR [rax],al
   14000d458:	adc    DWORD PTR ss:[rcx],eax
   14000d45b:	add    BYTE PTR [rax],al
   14000d45d:	add    BYTE PTR [rax],al
   14000d45f:	add    BYTE PTR [rsi],bl
   14000d461:	adc    DWORD PTR [rcx],eax
   14000d463:	add    BYTE PTR [rax],al
   14000d465:	add    BYTE PTR [rax],al
   14000d467:	add    al,bh
   14000d469:	adc    BYTE PTR [rcx],al
   14000d46b:	add    BYTE PTR [rax],al
   14000d46d:	add    BYTE PTR [rax],al
   14000d46f:	add    ah,ah
   14000d471:	adc    BYTE PTR [rcx],al
   14000d473:	add    BYTE PTR [rax],al
   14000d475:	add    BYTE PTR [rax],al
   14000d477:	add    ah,cl
   14000d479:	adc    BYTE PTR [rcx],al
   14000d47b:	add    BYTE PTR [rax],al
   14000d47d:	add    BYTE PTR [rax],al
   14000d47f:	add    BYTE PTR [rax+rdx*1+0x1],dh
   14000d486:	add    BYTE PTR [rax],al
   14000d488:	test   al,0x10
   14000d48a:	add    DWORD PTR [rax],eax
   14000d48c:	add    BYTE PTR [rax],al
   14000d48e:	add    BYTE PTR [rax],al
   14000d490:	(bad)  
   14000d491:	adc    BYTE PTR [rcx],al
   14000d493:	add    BYTE PTR [rax],al
   14000d495:	add    BYTE PTR [rax],al
   14000d497:	add    dl,al
   14000d499:	or     BYTE PTR [rcx],al
   14000d49b:	add    BYTE PTR [rax],al
   14000d49d:	add    BYTE PTR [rax],al
   14000d49f:	add    BYTE PTR [rax+0x108],ch
   14000d4a5:	add    BYTE PTR [rax],al
   14000d4a7:	add    BYTE PTR [rax+rcx*1+0x1],dl
	...
   14000d4b6:	add    BYTE PTR [rax],al
   14000d4b8:	push   rax
   14000d4b9:	rex.W add BYTE PTR [rax+0x1],al
   14000d4bd:	add    BYTE PTR [rax],al
   14000d4bf:	add    BYTE PTR [rax+0x4b],dh
   14000d4c2:	add    BYTE PTR [rax+0x1],al
	...
   14000d4cd:	add    BYTE PTR [rax],al
   14000d4cf:	add    BYTE PTR [rax+0x41],dl
   14000d4d2:	add    BYTE PTR [rax+0x1],al
   14000d4d5:	add    BYTE PTR [rax],al
   14000d4d7:	add    BYTE PTR [rax],al
   14000d4d9:	adc    BYTE PTR [rax],al
   14000d4db:	rex add DWORD PTR [rax],eax
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	and    BYTE PTR [rax],dl
   14000d4e2:	add    BYTE PTR [rax+0x1],al
   14000d4e5:	add    BYTE PTR [rax],al
   14000d4e7:	add    BYTE PTR [rax],dh
   14000d4e9:	adc    BYTE PTR [rax],al
   14000d4eb:	rex add DWORD PTR [rax],eax
   14000d4ee:	add    BYTE PTR [rax],al
   14000d4f0:	(bad)  
   14000d4f1:	adc    BYTE PTR [rax],al
   14000d4f3:	rex add DWORD PTR [rax],eax
   14000d4f6:	add    BYTE PTR [rax],al
   14000d4f8:	push   rax
   14000d4f9:	adc    BYTE PTR [rax],al
   14000d4fb:	rex add DWORD PTR [rax],eax
   14000d4fe:	add    BYTE PTR [rax],al
   14000d500:	adc    BYTE PTR [rax],0x0
   14000d503:	rex add DWORD PTR [rax],eax
   14000d506:	add    BYTE PTR [rax],al
   14000d508:	jo     0x14000d51a
   14000d50a:	add    BYTE PTR [rax+0x1],al
   14000d50d:	add    BYTE PTR [rax],al
   14000d50f:	add    BYTE PTR [rax+0x1400010],ah
   14000d515:	add    BYTE PTR [rax],al
   14000d517:	add    BYTE PTR [rax+0x1400010],dh
   14000d51d:	add    BYTE PTR [rax],al
   14000d51f:	add    BYTE PTR [rax+0x1400010],dl
   14000d525:	add    BYTE PTR [rax],al
   14000d527:	add    BYTE PTR [rax+0x10],al
   14000d52a:	add    BYTE PTR [rax+0x1],al
   14000d52d:	add    BYTE PTR [rax],al
   14000d52f:	add    al,al
   14000d531:	adc    BYTE PTR [rax],al
   14000d533:	rex add DWORD PTR [rax],eax
   14000d536:	add    BYTE PTR [rax],al
   14000d538:	loopne 0x14000d54a
   14000d53a:	add    BYTE PTR [rax+0x1],al
	...
   14000d54d:	add    BYTE PTR [rax],al
   14000d54f:	add    BYTE PTR [rax+0x40],dh
   14000d552:	add    BYTE PTR [rax+0x1],al
   14000d555:	add    BYTE PTR [rax],al
   14000d557:	add    BYTE PTR [rax+0x1400045],al
	...
   14000d569:	adc    BYTE PTR [rax],al
   14000d56b:	add    BYTE PTR [rax],ah
   14000d56d:	adc    BYTE PTR [rax],al
   14000d56f:	add    BYTE PTR [rax],dh
   14000d571:	adc    BYTE PTR [rax],al
   14000d573:	add    BYTE PTR [rax+0x10],al
   14000d576:	add    BYTE PTR [rax],al
   14000d578:	push   rax
   14000d579:	adc    BYTE PTR [rax],al
   14000d57b:	add    BYTE PTR [rax+0x10],ah
   14000d57e:	add    BYTE PTR [rax],al
   14000d580:	jo     0x14000d592
   14000d582:	add    BYTE PTR [rax],al
   14000d584:	adc    BYTE PTR [rax],0x0
   14000d587:	add    BYTE PTR [rax-0x5ffffff0],dl
   14000d58d:	adc    BYTE PTR [rax],al
   14000d58f:	add    BYTE PTR [rax-0x3ffffff0],dh
   14000d595:	adc    BYTE PTR [rax],al
   14000d597:	add    al,ah
   14000d599:	adc    BYTE PTR [rax],al
   14000d59b:	add    BYTE PTR [rax+0x70000013],dh
   14000d5a1:	adc    al,0x0
   14000d5a3:	add    BYTE PTR [rax+0x10000014],al
   14000d5a9:	adc    eax,0x15c00000
   14000d5ae:	add    BYTE PTR [rax],al
   14000d5b0:	rcl    BYTE PTR [rsi],0x0
   14000d5b3:	add    al,al
   14000d5b5:	(bad)  
   14000d5b6:	add    BYTE PTR [rax],al
   14000d5b8:	adc    BYTE PTR [rax],bl
   14000d5ba:	add    BYTE PTR [rax],al
   14000d5bc:	push   rax
   14000d5bd:	and    DWORD PTR [rax],eax
   14000d5bf:	add    BYTE PTR [rax+0x10000023],dh
   14000d5c5:	and    eax,0x28600000
   14000d5ca:	add    BYTE PTR [rax],al
   14000d5cc:	xor    BYTE PTR [rcx],ch
   14000d5ce:	add    BYTE PTR [rax],al
   14000d5d0:	jo     0x14000d5fb
   14000d5d2:	add    BYTE PTR [rax],al
   14000d5d4:	movabs al,ds:0xc000002db000002d
   14000d5dd:	sub    eax,0x2f000000
   14000d5e2:	add    BYTE PTR [rax],al
   14000d5e4:	jo     0x14000d615
   14000d5e6:	add    BYTE PTR [rax],al
   14000d5e8:	lock xor DWORD PTR [rax],eax
   14000d5eb:	add    BYTE PTR [rax+0x32],dl
   14000d5ee:	add    BYTE PTR [rax],al
   14000d5f0:	adc    BYTE PTR [rax+rax*1],dh
   14000d5f3:	add    BYTE PTR [rax-0x1fffffcc],dh
   14000d5f9:	xor    al,0x0
   14000d5fb:	add    BYTE PTR [rax+0x35],dh
   14000d5fe:	add    BYTE PTR [rax],al
   14000d600:	(bad)  
   14000d601:	add    BYTE PTR ss:[rax],al
   14000d604:	shl    BYTE PTR [rsi],1
   14000d606:	add    BYTE PTR [rax],al
   14000d608:	(bad)  
   14000d609:	cmp    DWORD PTR [rax],eax
   14000d60b:	add    BYTE PTR [rax+0x40],dh
   14000d60e:	add    BYTE PTR [rax],al
   14000d610:	push   rax
   14000d611:	add    BYTE PTR [r8],al
   14000d614:	and    BYTE PTR [rax+rax*1+0x0],al
   14000d618:	rex
   14000d619:	add    BYTE PTR [r8],r8b
   14000d61c:	add    BYTE PTR [rbp+0x0],0x0
   14000d620:	(bad)  
   14000d621:	rex.RX add BYTE PTR [rax],r8b
   14000d624:	push   rax
   14000d625:	rex.W add BYTE PTR [rax],al
   14000d628:	movabs al,ds:0x6000004a50000048
   14000d631:	rex.WX add BYTE PTR [rax],al
   14000d634:	jo     0x14000d680
   14000d636:	add    BYTE PTR [rax],al
   14000d638:	ror    BYTE PTR [rbx+0x0],0x0
   14000d63c:	ror    BYTE PTR [rbx+0x0],1
   14000d63f:	add    al,ah
   14000d641:	rex.WXB add BYTE PTR [r8],al
   14000d644:	lock rex.WXB add BYTE PTR [r8],al
   14000d648:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000d64c:	adc    BYTE PTR [rax+rax*1+0x0],cl
   14000d650:	and    BYTE PTR [rax+rax*1+0x0],cl
   14000d654:	xor    BYTE PTR [rax+rax*1+0x0],cl
   14000d658:	rex
   14000d659:	rex.WR add BYTE PTR [rax],r8b
   14000d65c:	push   rax
   14000d65d:	rex.WR add BYTE PTR [rax],r8b
   14000d660:	(bad)  
   14000d661:	rex.WR add BYTE PTR [rax],r8b
   14000d664:	jo     0x14000d6b2
   14000d666:	add    BYTE PTR [rax],al
   14000d668:	or     BYTE PTR [rax+rax*1+0x0],0x90
   14000d66d:	rex.WR add BYTE PTR [rax],r8b
   14000d670:	movabs al,ds:0xc000004cb000004c
   14000d679:	rex.WR add BYTE PTR [rax],r8b
   14000d67c:	ror    BYTE PTR [rax+rax*1+0x0],1
   14000d680:	loopne 0x14000d6ce
   14000d682:	add    BYTE PTR [rax],al
   14000d684:	lock rex.WR add BYTE PTR [rax],r8b
   14000d688:	add    BYTE PTR [rbp+0x0],cl
   14000d68b:	add    BYTE PTR [rax],dl
   14000d68d:	rex.WRB add BYTE PTR [r8],r8b
   14000d690:	and    BYTE PTR [rbp+0x0],cl
   14000d693:	add    BYTE PTR [rax],dh
   14000d695:	rex.WRB add BYTE PTR [r8],r8b
   14000d698:	rex
   14000d699:	rex.WRB add BYTE PTR [r8],r8b
   14000d69c:	push   rax
   14000d69d:	rex.WRB add BYTE PTR [r8],r8b
   14000d6a0:	(bad)  
   14000d6a1:	rex.WRB add BYTE PTR [r8],r8b
   14000d6a4:	jo     0x14000d6f3
   14000d6a6:	add    BYTE PTR [rax],al
   14000d6a8:	or     BYTE PTR [rbp+0x0],0x0
   14000d6ac:	nop
   14000d6ad:	rex.WRB add BYTE PTR [r8],r8b
   14000d6b0:	movabs al,ds:0xc000004db000004d
   14000d6b9:	rex.WRB add BYTE PTR [r8],r8b
   14000d6bc:	ror    BYTE PTR [rbp+0x0],1
   14000d6bf:	add    al,ah
   14000d6c1:	rex.WRB add BYTE PTR [r8],r8b
   14000d6c4:	lock rex.WRB add BYTE PTR [r8],r8b
   14000d6c8:	add    BYTE PTR [rsi+0x0],cl
   14000d6cb:	add    BYTE PTR [rax],dl
   14000d6cd:	rex.WRX add BYTE PTR [rax],r8b
   14000d6d0:	and    BYTE PTR [rsi+0x0],cl
   14000d6d3:	add    BYTE PTR [rax],dh
   14000d6d5:	rex.WRX add BYTE PTR [rax],r8b
   14000d6d8:	rex
   14000d6d9:	rex.WRX add BYTE PTR [rax],r8b
   14000d6dc:	lock rex.WRX add BYTE PTR [rax],r8b
   14000d6e0:	add    BYTE PTR [rdi+0x0],cl
   14000d6e3:	add    BYTE PTR [rax],dl
   14000d6e5:	rex.WRXB add BYTE PTR [r8],r8b
   14000d6e8:	and    BYTE PTR [rdi+0x0],cl
   14000d6eb:	add    BYTE PTR [rax],dh
   14000d6ed:	rex.WRXB add BYTE PTR [r8],r8b
   14000d6f0:	rex
   14000d6f1:	rex.WRXB add BYTE PTR [r8],r8b
   14000d6f4:	push   rax
   14000d6f5:	rex.WRXB add BYTE PTR [r8],r8b
   14000d6f8:	(bad)  
   14000d6f9:	rex.WRXB add BYTE PTR [r8],r8b
   14000d6fc:	jo     0x14000d74d
   14000d6fe:	add    BYTE PTR [rax],al
   14000d700:	or     BYTE PTR [rdi+0x0],0x0
   14000d704:	xor    BYTE PTR [rcx+0x0],ch
   14000d707:	add    BYTE PTR [rax+0x69],dh
   14000d70a:	add    BYTE PTR [rax],al
   14000d70c:	lock imul eax,DWORD PTR [rax],0x6a4000
   14000d713:	add    BYTE PTR [rax-0x3fffff96],dl
   14000d719:	push   0x0
   14000d71b:	add    BYTE PTR [rax+0x7b],ah
   14000d71e:	add    BYTE PTR [rax],al
   14000d720:	movabs al,ds:0x4000007c0000007b
   14000d729:	jl     0x14000d72b
   14000d72b:	add    BYTE PTR [rax-0x3fffff84],al
   14000d731:	jl     0x14000d733
   14000d733:	add    al,dh
   14000d735:	jl     0x14000d737
   14000d737:	add    BYTE PTR [rax+0x7d],dh
   14000d73a:	add    BYTE PTR [rax],al
   14000d73c:	(bad)  
   14000d73d:	jle    0x14000d73f
   14000d73f:	add    BYTE PTR [rax+0x7e],dh
   14000d745:	jg     0x14000d747
   14000d747:	add    BYTE PTR [rax+0x7f],al
   14000d74a:	add    BYTE PTR [rax],al
   14000d74c:	nop
   14000d74d:	jg     0x14000d74f
   14000d74f:	add    BYTE PTR [rax],dh
   14000d751:	add    BYTE PTR [rax],0x0
   14000d754:	(bad)  
   14000d755:	add    BYTE PTR [rax],0x0
   14000d758:	(bad)  
   14000d759:	(bad)  
   14000d75a:	add    BYTE PTR [rax],al
   14000d75c:	adc    BYTE PTR [rbx-0x7c400000],al
   14000d762:	add    BYTE PTR [rax],al
   14000d764:	add    BYTE PTR [rsi-0x79700000],al
   14000d76a:	add    BYTE PTR [rax],al
   14000d76c:	(bad)  
   14000d76d:	xchg   DWORD PTR [rax],eax
   14000d76f:	add    BYTE PTR [rax+0x8b],ah
   14000d775:	mov    WORD PTR [rax],es
   14000d777:	add    BYTE PTR [rax-0x74],dh
   14000d77a:	add    BYTE PTR [rax],al
   14000d77c:	rex lea eax,[rax]
   14000d77f:	add    BYTE PTR [rax+0x4000008d],dh
   14000d785:	mov    es,WORD PTR [rax]
   14000d787:	add    al,al
   14000d789:	mov    es,WORD PTR [rax]
   14000d78b:	add    al,dl
   14000d78d:	pop    QWORD PTR [rax]
   14000d78f:	add    BYTE PTR [rax-0x70],ah
   14000d792:	add    BYTE PTR [rax],al
   14000d794:	add    BYTE PTR [rbx-0x6c800000],dl
   14000d79a:	add    BYTE PTR [rax],al
   14000d79c:	movabs al,ds:0xf0000093d0000093
   14000d7a5:	xchg   ebx,eax
   14000d7a6:	add    BYTE PTR [rax],al
   14000d7a8:	adc    BYTE PTR [rax+rax*1+0x943000],dl
   14000d7af:	add    BYTE PTR [rax-0x6c],ah
   14000d7b2:	add    BYTE PTR [rax],al
   14000d7b4:	xor    BYTE PTR [rbp-0x6a000000],dl
   14000d7ba:	add    BYTE PTR [rax],al
   14000d7bc:	rcl    BYTE PTR [rsi-0x68d00000],1
   14000d7c2:	add    BYTE PTR [rax],al
   14000d7c4:	loopne 0x14000d75d
   14000d7c6:	add    BYTE PTR [rax],al
   14000d7c8:	(bad)  
   14000d7c9:	popf   
   14000d7ca:	add    BYTE PTR [rax],al
   14000d7cc:	add    BYTE PTR [rsi-0x61200000],bl
   14000d7d2:	add    BYTE PTR [rax],al
   14000d7d4:	and    BYTE PTR [rax-0x5e900000],0x0
   14000d7db:	add    al,al
   14000d7dd:	movabs eax,ds:0xa3100000a3000000
   14000d7e6:	add    BYTE PTR [rax],al
   14000d7e8:	and    BYTE PTR [rbx-0x5cd00000],ah
   14000d7ee:	add    BYTE PTR [rax],al
   14000d7f0:	mov    al,0xa3
   14000d7f2:	add    BYTE PTR [rax],al
   14000d7f4:	adc    BYTE PTR [rdx-0x55600000],ch
   14000d7fa:	add    BYTE PTR [rax],al
   14000d7fc:	xor    BYTE PTR [rbx-0x54400000],ch
   14000d802:	add    BYTE PTR [rax],al
   14000d804:	lods   al,BYTE PTR ds:[rsi]
   14000d806:	add    BYTE PTR [rax],al
   14000d808:	push   rax
   14000d809:	lods   al,BYTE PTR ds:[rsi]
   14000d80a:	add    BYTE PTR [rax],al
   14000d80c:	(bad)  
   14000d80d:	lods   al,BYTE PTR ds:[rsi]
   14000d80e:	add    BYTE PTR [rax],al
   14000d810:	jo     0x14000d7be
   14000d812:	add    BYTE PTR [rax],al
   14000d814:	shr    BYTE PTR [rbp-0x51500000],0x0
   14000d81b:	add    BYTE PTR [rax],al
   14000d81d:	scas   eax,DWORD PTR es:[rdi]
   14000d81e:	add    BYTE PTR [rax],al
   14000d820:	sub    BYTE PTR [rdi-0x50100000],0x0
   14000d827:	add    BYTE PTR [rax-0x3fffff50],ah
   14000d82d:	mov    al,0x0
   14000d82f:	add    al,ah
   14000d831:	mov    al,0x0
   14000d833:	add    BYTE PTR [rax-0x4f],ah
   14000d836:	add    BYTE PTR [rax],al
   14000d838:	xor    BYTE PTR [rcx-0x4e400000],0x0
   14000d83f:	add    BYTE PTR [rax],al
   14000d841:	mov    dl,0x0
	...
   14000d84f:	add    BYTE PTR [rcx],al
   14000d851:	add    BYTE PTR [rax],al
   14000d853:	add    BYTE PTR [rax],al
   14000d855:	add    BYTE PTR [rax],al
   14000d857:	add    al,al
   14000d859:	add    BYTE PTR [rax],al
   14000d85b:	add    BYTE PTR [rax],al
   14000d85d:	add    BYTE PTR [rax],al
   14000d85f:	rex.RX add BYTE PTR [rax],r8b
   14000d862:	add    BYTE PTR [rax],al
   14000d864:	add    BYTE PTR [rax],al
   14000d866:	add    BYTE PTR [rax],al
   14000d868:	rol    BYTE PTR [rax],0x0
   14000d86b:	add    BYTE PTR [rax],al
   14000d86d:	add    BYTE PTR [rax],al
   14000d86f:	rex.RX adc al,0xec
   14000d872:	rex (bad) 
   14000d874:	push   rdi
   14000d875:	gs stc 
   14000d877:	rex.B movabs ds:0xe02021b4b7cab1f7,eax
   14000d881:	loop   0x14000d809
   14000d883:	scas   eax,DWORD PTR es:[rdi]
   14000d884:	sub    eax,0x9c4c6ab1
   14000d889:	pop    rdx
   14000d88a:	xlat   BYTE PTR ds:[rbx]
   14000d88b:	stos   BYTE PTR es:[rdi],al
   14000d88c:	adc    BYTE PTR gs:[rsi],bl
   14000d88f:	nop
   14000d890:	add    BYTE PTR [rdi],ch
   14000d892:	add    BYTE PTR [rax+0x1],al
   14000d895:	add    BYTE PTR [rax],al
   14000d897:	add    BYTE PTR [rax+0x140002d],dh
   14000d89d:	add    BYTE PTR [rax],al
   14000d89f:	add    BYTE PTR [rax+0x140002d],ah
   14000d8a5:	add    BYTE PTR [rax],al
   14000d8a7:	add    BYTE PTR [rax],al
   14000d8a9:	mov    WORD PTR [rax],es
   14000d8ab:	rex add DWORD PTR [rax],eax
   14000d8ae:	add    BYTE PTR [rax],al
   14000d8b0:	(bad)  
   14000d8b1:	sub    BYTE PTR [rax],al
   14000d8b3:	rex add DWORD PTR [rax],eax
   14000d8b6:	add    BYTE PTR [rax],al
   14000d8b8:	shl    BYTE PTR [rsi],1
   14000d8ba:	add    BYTE PTR [rax+0x1],al
   14000d8bd:	add    BYTE PTR [rax],al
   14000d8bf:	add    BYTE PTR [rax+0x2f],dh
   14000d8c2:	add    BYTE PTR [rax+0x1],al
   14000d8c5:	add    BYTE PTR [rax],al
   14000d8c7:	add    BYTE PTR [rax+0x36],ah
   14000d8ca:	add    BYTE PTR [rax+0x1],al
   14000d8cd:	add    BYTE PTR [rax],al
   14000d8cf:	add    al,al
   14000d8d1:	sub    eax,0x14000
   14000d8d6:	add    BYTE PTR [rax],al
   14000d8d8:	(bad)  
   14000d8d9:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000d8dd:	add    BYTE PTR [rax],al
   14000d8df:	add    BYTE PTR [rax],al
   14000d8e1:	xchg   ebx,eax
   14000d8e2:	add    BYTE PTR [rax+0x1],al
   14000d8e5:	add    BYTE PTR [rax],al
   14000d8e7:	add    al,dl
   14000d8e9:	pop    QWORD PTR [rax]
   14000d8eb:	rex add DWORD PTR [rax],eax
   14000d8ee:	add    BYTE PTR [rax],al
   14000d8f0:	xor    BYTE PTR [rbp+0x0],cl
   14000d8f3:	rex add DWORD PTR [rax],eax
   14000d8f6:	add    BYTE PTR [rax],al
   14000d8f8:	adc    BYTE PTR [rax+rax*1+0x40],cl
   14000d8fc:	add    DWORD PTR [rax],eax
   14000d8fe:	add    BYTE PTR [rax],al
   14000d900:	loopne 0x14000d94f
   14000d902:	add    BYTE PTR [rax+0x1],al
   14000d905:	add    BYTE PTR [rax],al
   14000d907:	add    BYTE PTR [rax+0x140004c],al
   14000d90d:	add    BYTE PTR [rax],al
   14000d90f:	add    al,al
   14000d911:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000d915:	add    BYTE PTR [rax],al
   14000d917:	add    al,dh
   14000d919:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000d91d:	add    BYTE PTR [rax],al
   14000d91f:	add    BYTE PTR [rax],ah
   14000d921:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000d925:	add    BYTE PTR [rax],al
   14000d927:	add    BYTE PTR [rax],al
   14000d929:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000d92d:	add    BYTE PTR [rax],al
   14000d92f:	add    al,dl
   14000d931:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000d935:	add    BYTE PTR [rax],al
   14000d937:	add    BYTE PTR [rax+0x4c],dh
   14000d93a:	add    BYTE PTR [rax+0x1],al
   14000d93d:	add    BYTE PTR [rax],al
   14000d93f:	add    BYTE PTR [rax+0x140004c],dh
   14000d945:	add    BYTE PTR [rax],al
   14000d947:	add    BYTE PTR [rax],al
   14000d949:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000d94d:	add    BYTE PTR [rax],al
   14000d94f:	add    BYTE PTR [rax+0x1400086],dl
   14000d955:	add    BYTE PTR [rax],al
   14000d957:	add    BYTE PTR [rax],dl
   14000d959:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000d95d:	add    BYTE PTR [rax],al
   14000d95f:	add    al,dh
   14000d961:	rex.WXB add BYTE PTR [r8+0x1],al
   14000d965:	add    BYTE PTR [rax],al
   14000d967:	add    al,al
   14000d969:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000d96d:	add    BYTE PTR [rax],al
   14000d96f:	add    BYTE PTR [rax],dh
   14000d971:	xchg   ebp,eax
   14000d972:	add    BYTE PTR [rax+0x1],al
   14000d975:	add    BYTE PTR [rax],al
   14000d977:	add    BYTE PTR [rax],ah
   14000d979:	movabs ds:0x34b0000000014000,eax
   14000d982:	add    BYTE PTR [rax+0x1],al
   14000d985:	add    BYTE PTR [rax],al
   14000d987:	add    al,ah
   14000d989:	xor    al,0x0
   14000d98b:	rex add DWORD PTR [rax],eax
   14000d98e:	add    BYTE PTR [rax],al
   14000d990:	mov    al,0x8d
   14000d992:	add    BYTE PTR [rax+0x1],al
   14000d995:	add    BYTE PTR [rax],al
   14000d997:	add    BYTE PTR [rax+0x1400093],ah
   14000d99d:	add    BYTE PTR [rax],al
   14000d99f:	add    BYTE PTR [rax],dh
   14000d9a1:	xchg   esp,eax
   14000d9a2:	add    BYTE PTR [rax+0x1],al
   14000d9a5:	add    BYTE PTR [rax],al
   14000d9a7:	add    BYTE PTR [rax],al
   14000d9a9:	sahf   
   14000d9aa:	add    BYTE PTR [rax+0x1],al
   14000d9ad:	add    BYTE PTR [rax],al
   14000d9af:	add    al,al
   14000d9b1:	mov    cl,0x0
   14000d9b3:	rex add DWORD PTR [rax],eax
   14000d9b6:	add    BYTE PTR [rax],al
   14000d9b8:	xor    BYTE PTR [rdi+0x14000],dl
   14000d9be:	add    BYTE PTR [rax],al
   14000d9c0:	mov    al,0xae
   14000d9c2:	add    BYTE PTR [rax+0x1],al
   14000d9c5:	add    BYTE PTR [rax],al
   14000d9c7:	add    BYTE PTR [rax+0x35],dh
   14000d9ca:	add    BYTE PTR [rax+0x1],al
   14000d9cd:	add    BYTE PTR [rax],al
   14000d9cf:	add    BYTE PTR [rax],ah
   14000d9d1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000d9d5:	add    BYTE PTR [rax],al
   14000d9d7:	add    BYTE PTR [rax],al
   14000d9d9:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000d9dd:	add    BYTE PTR [rax],al
   14000d9df:	add    al,dl
   14000d9e1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000d9e5:	add    BYTE PTR [rax],al
   14000d9e7:	add    BYTE PTR [rax+0x4c],dh
   14000d9ea:	add    BYTE PTR [rax+0x1],al
   14000d9ed:	add    BYTE PTR [rax],al
   14000d9ef:	add    BYTE PTR [rax+0x140004c],dh
   14000d9f5:	add    BYTE PTR [rax],al
   14000d9f7:	add    BYTE PTR [rax],al
   14000d9f9:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000d9fd:	add    BYTE PTR [rax],al
   14000d9ff:	add    BYTE PTR [rax+0x4a],dh
   14000da02:	add    BYTE PTR [rax+0x1],al
   14000da05:	add    BYTE PTR [rax],al
   14000da07:	add    BYTE PTR [rax],ah
   14000da09:	movabs ds:0x34b0000000014000,eax
   14000da12:	add    BYTE PTR [rax+0x1],al
   14000da15:	add    BYTE PTR [rax],al
   14000da17:	add    al,ah
   14000da19:	xor    al,0x0
   14000da1b:	rex add DWORD PTR [rax],eax
   14000da1e:	add    BYTE PTR [rax],al
   14000da20:	mov    al,0x8d
   14000da22:	add    BYTE PTR [rax+0x1],al
   14000da25:	add    BYTE PTR [rax],al
   14000da27:	add    BYTE PTR [rax+0x1400093],ah
   14000da2d:	add    BYTE PTR [rax],al
   14000da2f:	add    BYTE PTR [rax],dh
   14000da31:	xchg   esp,eax
   14000da32:	add    BYTE PTR [rax+0x1],al
   14000da35:	add    BYTE PTR [rax],al
   14000da37:	add    BYTE PTR [rax+0x4a],dh
   14000da3a:	add    BYTE PTR [rax+0x1],al
   14000da3d:	add    BYTE PTR [rax],al
   14000da3f:	add    BYTE PTR [rax+0x4a],dh
   14000da42:	add    BYTE PTR [rax+0x1],al
   14000da45:	add    BYTE PTR [rax],al
   14000da47:	add    BYTE PTR [rax+0x4a],dh
   14000da4a:	add    BYTE PTR [rax+0x1],al
   14000da4d:	add    BYTE PTR [rax],al
   14000da4f:	add    BYTE PTR [rax+0x4a],dh
   14000da52:	add    BYTE PTR [rax+0x1],al
   14000da55:	add    BYTE PTR [rax],al
   14000da57:	add    BYTE PTR [rax+0x7c],al
   14000da5a:	add    BYTE PTR [rax+0x1],al
	...
   14000da69:	jg     0x14000da6b
   14000da6b:	rex add DWORD PTR [rax],eax
   14000da6e:	add    BYTE PTR [rax],al
   14000da70:	jo     0x14000da9b
   14000da72:	add    BYTE PTR [rax+0x1],al
   14000da75:	add    BYTE PTR [rax],al
   14000da77:	add    BYTE PTR [rax],dh
   14000da79:	sub    DWORD PTR [rax],eax
   14000da7b:	rex add DWORD PTR [rax],eax
   14000da7e:	add    BYTE PTR [rax],al
   14000da80:	jo     0x14000dacc
   14000da82:	add    BYTE PTR [rax+0x1],al
   14000da85:	add    BYTE PTR [rax],al
   14000da87:	add    BYTE PTR [rax+0x28],ah
   14000da8a:	add    BYTE PTR [rax+0x1],al
   14000da8d:	add    BYTE PTR [rax],al
   14000da8f:	add    BYTE PTR [rax+0x21],dl
   14000da92:	add    BYTE PTR [rax+0x1],al
   14000da95:	add    BYTE PTR [rax],al
   14000da97:	add    BYTE PTR [rax+0x4a],dh
   14000da9a:	add    BYTE PTR [rax+0x1],al
   14000da9d:	add    BYTE PTR [rax],al
   14000da9f:	add    BYTE PTR [rax+0x4a],dh
   14000daa2:	add    BYTE PTR [rax+0x1],al
   14000daa5:	add    BYTE PTR [rax],al
   14000daa7:	add    BYTE PTR [rax],dl
   14000daa9:	and    eax,0x14000
   14000daae:	add    BYTE PTR [rax],al
   14000dab0:	mov    al,0x23
   14000dab2:	add    BYTE PTR [rax+0x1],al
   14000dab5:	add    BYTE PTR [rax],al
   14000dab7:	add    BYTE PTR [rax],al
   14000dab9:	xchg   ebx,eax
   14000daba:	add    BYTE PTR [rax+0x1],al
   14000dabd:	add    BYTE PTR [rax],al
   14000dabf:	add    al,dl
   14000dac1:	pop    QWORD PTR [rax]
   14000dac3:	rex add DWORD PTR [rax],eax
   14000dac6:	add    BYTE PTR [rax],al
   14000dac8:	adc    BYTE PTR [rax+rax*1],dh
   14000dacb:	rex add DWORD PTR [rax],eax
   14000dace:	add    BYTE PTR [rax],al
   14000dad0:	jo     0x14000dafb
   14000dad2:	add    BYTE PTR [rax+0x1],al
   14000dad5:	add    BYTE PTR [rax],al
   14000dad7:	add    BYTE PTR [rax],dh
   14000dad9:	sub    DWORD PTR [rax],eax
   14000dadb:	rex add DWORD PTR [rax],eax
   14000dade:	add    BYTE PTR [rax],al
   14000dae0:	(bad)  
   14000dae1:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000dae5:	add    BYTE PTR [rax],al
   14000dae7:	add    BYTE PTR [rax+0x28],ah
   14000daea:	add    BYTE PTR [rax+0x1],al
   14000daed:	add    BYTE PTR [rax],al
   14000daef:	add    BYTE PTR [rax+0x21],dl
   14000daf2:	add    BYTE PTR [rax+0x1],al
   14000daf5:	add    BYTE PTR [rax],al
   14000daf7:	add    BYTE PTR [rax+0x4c],dl
   14000dafa:	add    BYTE PTR [rax+0x1],al
   14000dafd:	add    BYTE PTR [rax],al
   14000daff:	add    BYTE PTR [rax+0x4c],dl
   14000db02:	add    BYTE PTR [rax+0x1],al
   14000db05:	add    BYTE PTR [rax],al
   14000db07:	add    BYTE PTR [rax],dl
   14000db09:	and    eax,0x14000
   14000db0e:	add    BYTE PTR [rax],al
   14000db10:	mov    al,0x23
   14000db12:	add    BYTE PTR [rax+0x1],al
   14000db15:	add    BYTE PTR [rax],al
   14000db17:	add    BYTE PTR [rax],al
   14000db19:	xchg   ebx,eax
   14000db1a:	add    BYTE PTR [rax+0x1],al
   14000db1d:	add    BYTE PTR [rax],al
   14000db1f:	add    al,dl
   14000db21:	pop    QWORD PTR [rax]
   14000db23:	rex add DWORD PTR [rax],eax
   14000db26:	add    BYTE PTR [rax],al
   14000db28:	lock xor DWORD PTR [rax],eax
   14000db2b:	rex add DWORD PTR [rax],eax
   14000db2e:	add    BYTE PTR [rax],al
   14000db30:	jo     0x14000db5b
   14000db32:	add    BYTE PTR [rax+0x1],al
   14000db35:	add    BYTE PTR [rax],al
   14000db37:	add    BYTE PTR [rax],dh
   14000db39:	sub    DWORD PTR [rax],eax
   14000db3b:	rex add DWORD PTR [rax],eax
   14000db3e:	add    BYTE PTR [rax],al
   14000db40:	movabs al,ds:0x600000000140008b
   14000db49:	sub    BYTE PTR [rax],al
   14000db4b:	rex add DWORD PTR [rax],eax
   14000db4e:	add    BYTE PTR [rax],al
   14000db50:	push   rax
   14000db51:	and    DWORD PTR [rax],eax
   14000db53:	rex add DWORD PTR [rax],eax
   14000db56:	add    BYTE PTR [rax],al
   14000db58:	push   rax
   14000db59:	xor    al,BYTE PTR [rax]
   14000db5b:	rex add DWORD PTR [rax],eax
   14000db5e:	add    BYTE PTR [rax],al
   14000db60:	jo     0x14000daee
   14000db62:	add    BYTE PTR [rax+0x1],al
   14000db65:	add    BYTE PTR [rax],al
   14000db67:	add    BYTE PTR [rax],dl
   14000db69:	and    eax,0x14000
   14000db6e:	add    BYTE PTR [rax],al
   14000db70:	mov    al,0x23
   14000db72:	add    BYTE PTR [rax+0x1],al
   14000db75:	add    BYTE PTR [rax],al
   14000db77:	add    BYTE PTR [rax],al
   14000db79:	xchg   ebx,eax
   14000db7a:	add    BYTE PTR [rax+0x1],al
   14000db7d:	add    BYTE PTR [rax],al
   14000db7f:	add    al,dl
   14000db81:	pop    QWORD PTR [rax]
   14000db83:	rex add DWORD PTR [rax],eax
   14000db86:	add    BYTE PTR [rax],al
   14000db88:	add    BYTE PTR [rbp+0x0],r12b
   14000db8c:	(bad)  
   14000db8d:	add    BYTE PTR [rbp+0x0],dh
   14000db90:	add    BYTE PTR [ecx+0x0],cl
   14000db94:	outs   dx,BYTE PTR ds:[rsi]
   14000db95:	add    BYTE PTR [rsi+0x0],ah
   14000db98:	outs   dx,DWORD PTR ds:[rsi]
   14000db99:	add    BYTE PTR [rdx+0x0],dh
   14000db9c:	ins    DWORD PTR es:[rdi],dx
   14000db9d:	add    BYTE PTR [rcx+0x0],ah
   14000dba0:	je     0x14000dba2
   14000dba2:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14000dbb0:	push   rbx
   14000dbb1:	add    BYTE PTR [rbp+0x0],ah
   14000dbb4:	jb     0x14000dbb6
   14000dbb6:	jbe    0x14000dbb8
   14000dbb8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000dbbc:	add    BYTE PTR [rax],al
   14000dbbe:	add    BYTE PTR [rax],al
   14000dbc0:	add    BYTE PTR [r8+r8*1+0x53],cl
   14000dbc5:	add    BYTE PTR [rcx+0x0],cl
   14000dbc8:	add    BYTE PTR [rax],r8b
   14000dbcb:	add    BYTE PTR [rax],al
   14000dbcd:	add    BYTE PTR [rax],al
   14000dbcf:	add    BYTE PTR [rcx+0x0],al
   14000dbd2:	movsxd eax,DWORD PTR [rax]
   14000dbd4:	je     0x14000dbd6
   14000dbd6:	imul   eax,DWORD PTR [rax],0x610076
   14000dbdc:	je     0x14000dbde
   14000dbde:	(bad)  
   14000dbdf:	add    BYTE PTR [rdx+0x0],ah
   14000dbe2:	ins    BYTE PTR es:[rdi],dx
   14000dbe3:	add    BYTE PTR [rbp+0x0],ah
   14000dbe6:	add    BYTE PTR [r8+r8*1+0x61],bpl
   14000dbeb:	add    BYTE PTR [rbx+0x0],dh
   14000dbee:	jae    0x14000dbf0
   14000dbf0:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   14000dbf5:	add    BYTE PTR [rax],al
   14000dbf7:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000dbfb:	add    BYTE PTR [rax],al
   14000dbfd:	add    BYTE PTR [rax],al
   14000dbff:	add    BYTE PTR [rax],dl
   14000dc01:	adc    eax,0x14000
   14000dc06:	add    BYTE PTR [rax],al
   14000dc08:	adc    BYTE PTR [rax],bl
   14000dc0a:	add    BYTE PTR [rax+0x1],al
   14000dc0d:	add    BYTE PTR [rax],al
   14000dc0f:	add    al,al
   14000dc11:	(bad)  
   14000dc12:	add    BYTE PTR [rax+0x1],al
   14000dc15:	add    BYTE PTR [rax],al
   14000dc17:	add    BYTE PTR [rax+0x140006a],dl
   14000dc1d:	add    BYTE PTR [rax],al
   14000dc1f:	add    BYTE PTR [rax+0x1400093],ah
   14000dc25:	add    BYTE PTR [rax],al
   14000dc27:	add    al,al
   14000dc29:	rex.WXB add BYTE PTR [r8+0x1],al
   14000dc2d:	add    BYTE PTR [rax],al
   14000dc2f:	add    al,al
   14000dc31:	(bad)  
   14000dc32:	add    BYTE PTR [rax+0x1],al
   14000dc35:	add    BYTE PTR [rax],al
   14000dc37:	add    al,al
   14000dc39:	adc    eax,0x14000
   14000dc3e:	add    BYTE PTR [rax],al
   14000dc40:	shr    BYTE PTR [rdx+0x0],0x40
   14000dc44:	add    DWORD PTR [rax],eax
   14000dc46:	add    BYTE PTR [rax],al
   14000dc48:	rex push 0x0
   14000dc4b:	rex add DWORD PTR [rax],eax
   14000dc4e:	add    BYTE PTR [rax],al
   14000dc50:	xor    BYTE PTR [rcx+0x0],ch
   14000dc53:	rex add DWORD PTR [rax],eax
   14000dc56:	add    BYTE PTR [rax],al
   14000dc58:	jo     0x14000dcc3
   14000dc5a:	add    BYTE PTR [rax+0x1],al
   14000dc5d:	add    BYTE PTR [rax],al
   14000dc5f:	add    al,dh
   14000dc61:	imul   eax,DWORD PTR [rax],0x140
	...
   14000dc6f:	add    BYTE PTR [rbx+0x0],dl
   14000dc72:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14000dc76:	push   rsp
   14000dc77:	add    BYTE PTR [rdi+0x0],dl
   14000dc7a:	add    BYTE PTR [r10+0x0],dl
   14000dc7e:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   14000dc83:	add    BYTE PTR [rcx+0x0],ch
   14000dc86:	movsxd eax,DWORD PTR [rax]
   14000dc88:	jb     0x14000dc8a
   14000dc8a:	outs   dx,DWORD PTR ds:[rsi]
   14000dc8b:	add    BYTE PTR [rbx+0x0],dh
   14000dc8e:	outs   dx,DWORD PTR ds:[rsi]
   14000dc8f:	add    BYTE PTR [rsi+0x0],ah
   14000dc92:	je     0x14000dc94
   14000dc94:	pop    rsp
   14000dc95:	add    BYTE PTR [rdi+0x0],cl
   14000dc98:	ins    BYTE PTR es:[rdi],dx
   14000dc99:	add    BYTE PTR [rbp+0x0],ah
   14000dc9c:	pop    rsp
   14000dc9d:	add    BYTE PTR [rcx+0x0],al
   14000dca0:	jo     0x14000dca2
   14000dca2:	jo     0x14000dca4
   14000dca4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000dca8:	ins    DWORD PTR es:[rdi],dx
   14000dca9:	add    BYTE PTR [rax+0x0],dh
   14000dcac:	(bad)  
   14000dcad:	add    BYTE PTR [rax+rax*1+0x5c],dh
   14000dcb1:	add    BYTE PTR [rax+rax*1+0x69],al
   14000dcb5:	add    BYTE PTR [rbx+0x0],dh
   14000dcb8:	(bad)  
   14000dcb9:	add    BYTE PTR [rdx+0x0],ah
   14000dcbc:	ins    BYTE PTR es:[rdi],dx
   14000dcbd:	add    BYTE PTR [rbp+0x0],ah
   14000dcc0:	add    BYTE PTR [r8+r8*1+0x73],bpl
   14000dcc5:	add    BYTE PTR [rcx+0x0],ch
   14000dcc8:	add    BYTE PTR fs:[rsi+0x0],al
   14000dccc:	jb     0x14000dcce
   14000dcce:	add    BYTE PTR gs:[rbp+0x0],ah
   14000dcd2:	add    BYTE PTR [r11+0x0],spl
   14000dcd6:	je     0x14000dcd8
   14000dcd8:	imul   eax,DWORD PTR [rax],0x610076
   14000dcde:	je     0x14000dce0
   14000dce0:	(bad)  
   14000dce1:	add    BYTE PTR [rdx+0x0],ah
   14000dce4:	ins    BYTE PTR es:[rdi],dx
   14000dce5:	add    BYTE PTR [rbp+0x0],ah
   14000dce8:	add    BYTE PTR [r8+r8*1+0x61],bpl
   14000dced:	add    BYTE PTR [rbx+0x0],dh
   14000dcf0:	jae    0x14000dcf2
   14000dcf2:	add    BYTE PTR gs:[rbx+0x0],dh
   14000dcf6:	add    BYTE PTR [rax],al
   14000dcf8:	rex.WXB add rax,QWORD PTR [r8]
   14000dcfb:	add    BYTE PTR [rax],al
   14000dcfd:	add    BYTE PTR [rax],al
   14000dcff:	add    al,al
   14000dd01:	add    BYTE PTR [rax],al
   14000dd03:	add    BYTE PTR [rax],al
   14000dd05:	add    BYTE PTR [rax],al
   14000dd07:	rex.RX pop rbx
   14000dd09:	add    DWORD PTR [rax],eax
   14000dd0b:	add    BYTE PTR [rax],al
   14000dd0d:	add    BYTE PTR [rax],al
   14000dd0f:	add    al,al
   14000dd11:	add    BYTE PTR [rax],al
   14000dd13:	add    BYTE PTR [rax],al
   14000dd15:	add    BYTE PTR [rax],al
   14000dd17:	rex.RX xchg ebx,eax
   14000dd19:	cmp    DWORD PTR [rbx],esp
   14000dd1b:	loope  0x14000dcc1
   14000dd1d:	(bad)  
   14000dd1e:	cmova  ebx,DWORD PTR [rbp-0x3eae5c19]
   14000dd25:	mov    dh,0xfb
   14000dd27:	jno    0x14000dd98
   14000dd29:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000dd2d:	add    BYTE PTR [rbx],dh
   14000dd2f:	add    BYTE PTR [rdx],dh
   14000dd31:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000dd35:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000dd39:	add    BYTE PTR [rax],al
   14000dd3b:	add    BYTE PTR [rax],al
   14000dd3d:	add    BYTE PTR [rax],al
   14000dd3f:	add    BYTE PTR [rbx+0x0],dl
   14000dd42:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14000dd46:	push   rsp
   14000dd47:	add    BYTE PTR [rdi+0x0],dl
   14000dd4a:	add    BYTE PTR [r10+0x0],dl
   14000dd4e:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   14000dd53:	add    BYTE PTR [rcx+0x0],ch
   14000dd56:	movsxd eax,DWORD PTR [rax]
   14000dd58:	jb     0x14000dd5a
   14000dd5a:	outs   dx,DWORD PTR ds:[rsi]
   14000dd5b:	add    BYTE PTR [rbx+0x0],dh
   14000dd5e:	outs   dx,DWORD PTR ds:[rsi]
   14000dd5f:	add    BYTE PTR [rsi+0x0],ah
   14000dd62:	je     0x14000dd64
   14000dd64:	pop    rsp
   14000dd65:	add    BYTE PTR [rdi+0x0],cl
   14000dd68:	ins    BYTE PTR es:[rdi],dx
   14000dd69:	add    BYTE PTR [rbp+0x0],ah
   14000dd6c:	pop    rsp
   14000dd6d:	add    BYTE PTR [rbp+0x0],al
   14000dd70:	js     0x14000dd72
   14000dd72:	je     0x14000dd74
   14000dd74:	add    BYTE PTR gs:[rsi+0x0],ch
   14000dd78:	jae    0x14000dd7a
   14000dd7a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000dd80:	jae    0x14000dd82
   14000dd82:	add    BYTE PTR [rax],al
   14000dd84:	add    BYTE PTR [rax],al
   14000dd86:	add    BYTE PTR [rax],al
   14000dd88:	(bad)
   14000dd8b:	(bad)  
   14000dd8c:	rex.RX mov ebx,0x4fa94990
   14000dd92:	in     al,0xb
   14000dd94:	popf   
   14000dd95:	push   rdx
   14000dd96:	add    DWORD PTR [rax-0x20],esp
   14000dd99:	and    eax,0x14001
   14000dd9e:	add    BYTE PTR [rax],al
   14000dda0:	and    BYTE PTR [rsi],0x1
   14000dda3:	rex add DWORD PTR [rax],eax
   14000dda6:	add    BYTE PTR [rax],al
   14000dda8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002f741
   14000ddae:	add    BYTE PTR [rax],al
   14000ddb0:	int3   
   14000ddb1:	cld    
   14000ddb2:	add    BYTE PTR [rax],al
   14000ddb4:	add    DWORD PTR [rax],eax
   14000ddb6:	add    BYTE PTR [rax],al
   14000ddb8:	fdiv   st(4),st
   14000ddba:	add    BYTE PTR [rax],al
   14000ddbc:	(bad)  
   14000ddbd:	add    BYTE PTR [rax],al
   14000ddbf:	add    BYTE PTR [rax],cl
   14000ddc1:	std    
   14000ddc2:	add    BYTE PTR [rax],al
   14000ddc4:	and    BYTE PTR [rax],al
   14000ddc6:	add    BYTE PTR [rax],al
   14000ddc8:	add    BYTE PTR [rax],al
   14000ddca:	add    BYTE PTR [rax],al
   14000ddcc:	add    DWORD PTR [rax],eax
   14000ddce:	add    BYTE PTR [rax],al
   14000ddd0:	add    BYTE PTR [rsi+0x0],r8b
   14000ddd4:	add    BYTE PTR [rax],al
   14000ddd6:	add    BYTE PTR [rax],al
   14000ddd8:	loopne 0x14000ddb7
   14000ddda:	add    BYTE PTR [rax+0x1],al
   14000dddd:	add    BYTE PTR [rax],al
   14000dddf:	add    BYTE PTR [rbp+0x0],ah
   14000dde2:	js     0x14000dde4
   14000dde4:	je     0x14000dde6
   14000dde6:	sub    eax,0x73006d00
   14000ddeb:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a90154f1
   14000ddf1:	add    BYTE PTR [rsi+0x0],ch
   14000ddf4:	sub    eax,0x65006b00
   14000ddf9:	add    BYTE PTR [rdx+0x0],dh
   14000ddfc:	outs   dx,BYTE PTR ds:[rsi]
   14000ddfd:	add    BYTE PTR [rbp+0x0],ah
   14000de00:	ins    BYTE PTR es:[rdi],dx
   14000de01:	add    BYTE PTR [rbx],dh
   14000de03:	add    BYTE PTR [rdx],dh
   14000de05:	add    BYTE PTR [rip+0x61007000],ch        # 0x1a1014e0b
   14000de0b:	add    BYTE PTR [rbx+0x0],ah
   14000de0e:	imul   eax,DWORD PTR [rax],0x61
   14000de11:	add    BYTE PTR [rdi+0x0],ah
   14000de14:	add    BYTE PTR gs:[rip+0x31006c00],ch        # 0x171014a1b
   14000de1b:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d010f21
   14000de21:	add    BYTE PTR [rcx],dh
   14000de23:	add    BYTE PTR [rax],al
   14000de25:	add    BYTE PTR [rax],al
   14000de27:	add    BYTE PTR [rax+rax*1+0x56],dl
   14000de2b:	add    BYTE PTR [rax],al
   14000de2d:	add    BYTE PTR [rax],al
   14000de2f:	add    BYTE PTR [rax-0x22],al
   14000de32:	add    BYTE PTR [rax+0x1],al
	...
   14000de3d:	add    BYTE PTR [rax],al
   14000de3f:	add    BYTE PTR [rbp+0x0],ah
   14000de42:	js     0x14000de44
   14000de44:	je     0x14000de46
   14000de46:	sub    eax,0x73006d00
   14000de4b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a9015551
   14000de51:	add    BYTE PTR [rsi+0x0],ch
   14000de54:	sub    eax,0x65006b00
   14000de59:	add    BYTE PTR [rdx+0x0],dh
   14000de5c:	outs   dx,BYTE PTR ds:[rsi]
   14000de5d:	add    BYTE PTR [rbp+0x0],ah
   14000de60:	ins    BYTE PTR es:[rdi],dx
   14000de61:	add    BYTE PTR [rbx],dh
   14000de63:	add    BYTE PTR [rdx],dh
   14000de65:	add    BYTE PTR [rip+0x61007000],ch        # 0x1a1014e6b
   14000de6b:	add    BYTE PTR [rbx+0x0],ah
   14000de6e:	imul   eax,DWORD PTR [rax],0x61
   14000de71:	add    BYTE PTR [rdi+0x0],ah
   14000de74:	add    BYTE PTR gs:[rip+0x75006300],ch        # 0x1b501417b
   14000de7b:	add    BYTE PTR [rdx+0x0],dh
   14000de7e:	jb     0x14000de80
   14000de80:	add    BYTE PTR gs:[rsi+0x0],ch
   14000de84:	je     0x14000de86
   14000de86:	sub    eax,0x31006c00
   14000de8b:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d010f91
   14000de91:	add    BYTE PTR [rax],dh
   14000de93:	add    BYTE PTR [rax],al
   14000de95:	add    BYTE PTR [rax],al
   14000de97:	add    BYTE PTR [rax+0x0],cl
   14000de9a:	rex.WX add BYTE PTR [rax],al
   14000de9d:	add    BYTE PTR [rax],al
   14000de9f:	add    BYTE PTR [rax+0x14000de],dh
   14000dea5:	add    BYTE PTR [rax],al
   14000dea7:	add    BYTE PTR [rax],cl
   14000dea9:	add    BYTE PTR [rax],al
   14000deab:	add    BYTE PTR [rax],al
   14000dead:	add    BYTE PTR [rax],al
   14000deaf:	add    BYTE PTR [rbp+0x0],ah
   14000deb2:	js     0x14000deb4
   14000deb4:	je     0x14000deb6
   14000deb6:	sub    eax,0x73006d00
   14000debb:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a90155c1
   14000dec1:	add    BYTE PTR [rsi+0x0],ch
   14000dec4:	sub    eax,0x70006100
   14000dec9:	add    BYTE PTR [rax+0x0],dh
   14000decc:	ins    DWORD PTR es:[rdi],dx
   14000decd:	add    BYTE PTR [rdi+0x0],ch
   14000ded0:	add    BYTE PTR fs:[rbp+0x0],ah
   14000ded4:	ins    BYTE PTR es:[rdi],dx
   14000ded5:	add    BYTE PTR [rip+0x74007300],ch        # 0x1b40151db
   14000dedb:	add    BYTE PTR [rcx+0x0],ah
   14000dede:	je     0x14000dee0
   14000dee0:	add    BYTE PTR gs:[rip+0x78006500],ch        # 0x1b80143e7
   14000dee7:	add    BYTE PTR [rax+rax*1+0x2d],dh
   14000deeb:	add    BYTE PTR [rax+rax*1+0x31],ch
   14000deef:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d0110f5
   14000def5:	add    BYTE PTR [rax],dh
	...
   14000deff:	add    BYTE PTR [rsi+0x0],al
   14000df02:	rex.W add BYTE PTR [rax],al
   14000df05:	add    BYTE PTR [rax],al
   14000df07:	add    BYTE PTR [rax],dl
   14000df09:	fild   WORD PTR [rax]
   14000df0b:	rex add DWORD PTR [rax],eax
   14000df0e:	add    BYTE PTR [rax],al
   14000df10:	add    BYTE PTR gs:[rax+0x0],bh
   14000df14:	je     0x14000df16
   14000df16:	sub    eax,0x73006d00
   14000df1b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a9015621
   14000df21:	add    BYTE PTR [rsi+0x0],ch
   14000df24:	sub    eax,0x6f006300
   14000df29:	add    BYTE PTR [rdx+0x0],dh
   14000df2c:	add    BYTE PTR gs:[rip+0x69007700],ch        # 0x1a9015633
   14000df33:	add    BYTE PTR [rsi+0x0],ch
   14000df36:	jb     0x14000df38
   14000df38:	je     0x14000df3a
   14000df3a:	sub    eax,0x65007200
   14000df3f:	add    BYTE PTR [rbp+0x0],ch
   14000df42:	outs   dx,DWORD PTR ds:[rsi]
   14000df43:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000df47:	add    BYTE PTR [rip+0x31006c00],ch        # 0x171014b4d
   14000df4d:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d011053
   14000df53:	add    BYTE PTR [rax],dh
   14000df55:	add    BYTE PTR [rax],al
   14000df57:	add    ch,bl
   14000df59:	(bad)  
   14000df5a:	(bad)  
   14000df5b:	rex.WXB push r12
   14000df5d:	jne    0x14000df48
   14000df5f:	rex (bad) 
   14000df61:	fwait
   14000df62:	(bad)  
   14000df63:	rex.WRX fidivr WORD PTR gs:[rsi+0x62]
   14000df68:	adc    BYTE PTR [rax+rax*1],0x40
   14000df6c:	add    DWORD PTR [rax],eax
   14000df6e:	add    BYTE PTR [rax],al
   14000df70:	jo     0x14000df86
   14000df72:	add    BYTE PTR [rax+0x1],al
   14000df75:	add    BYTE PTR [rax],al
   14000df77:	add    al,dl
   14000df79:	rex.WXB add BYTE PTR [r8+0x1],al
   14000df7d:	add    BYTE PTR [rax],al
   14000df7f:	add    BYTE PTR [rax+0x1400013],dh
   14000df85:	add    BYTE PTR [rax],al
   14000df87:	add    BYTE PTR [rax+0x46],ah
   14000df8a:	add    BYTE PTR [rax+0x1],al
   14000df8d:	add    BYTE PTR [rax],al
   14000df8f:	add    al,cl
   14000df91:	fistp  DWORD PTR [rbx-0xb26cd9e]
   14000df97:	rex.WRXB xchg r14,rax
   14000df99:	mov    ecx,0xc1c5968d
   14000df9e:	call   0x1407c3ffb
   14000dfa3:	rex add DWORD PTR [rax],eax
   14000dfa6:	add    BYTE PTR [rax],al
   14000dfa8:	jo     0x14000dfd3
   14000dfaa:	add    BYTE PTR [rax+0x1],al
   14000dfad:	add    BYTE PTR [rax],al
   14000dfaf:	add    BYTE PTR [rax],dh
   14000dfb1:	sub    DWORD PTR [rax],eax
   14000dfb3:	rex add DWORD PTR [rax],eax
   14000dfb6:	add    BYTE PTR [rax],al
   14000dfb8:	(bad)  
   14000dfb9:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000dfbd:	add    BYTE PTR [rax],al
   14000dfbf:	add    BYTE PTR [rax+0x28],ah
   14000dfc2:	add    BYTE PTR [rax+0x1],al
   14000dfc5:	add    BYTE PTR [rax],al
   14000dfc7:	add    BYTE PTR [rax+0x21],dl
   14000dfca:	add    BYTE PTR [rax+0x1],al
   14000dfcd:	add    BYTE PTR [rax],al
   14000dfcf:	add    BYTE PTR [rax+0x4c],dl
   14000dfd2:	add    BYTE PTR [rax+0x1],al
   14000dfd5:	add    BYTE PTR [rax],al
   14000dfd7:	add    BYTE PTR [rax+0x4c],dl
   14000dfda:	add    BYTE PTR [rax+0x1],al
   14000dfdd:	add    BYTE PTR [rax],al
   14000dfdf:	add    BYTE PTR [rax],dl
   14000dfe1:	and    eax,0x14000
   14000dfe6:	add    BYTE PTR [rax],al
   14000dfe8:	mov    al,0x23
   14000dfea:	add    BYTE PTR [rax+0x1],al
   14000dfed:	add    BYTE PTR [rax],al
   14000dfef:	add    BYTE PTR [rax],al
   14000dff1:	xchg   ebx,eax
   14000dff2:	add    BYTE PTR [rax+0x1],al
   14000dff5:	add    BYTE PTR [rax],al
   14000dff7:	add    al,dl
   14000dff9:	pop    QWORD PTR [rax]
   14000dffb:	rex add DWORD PTR [rax],eax
   14000dffe:	add    BYTE PTR [rax],al
   14000e000:	add    BYTE PTR [rdi+0x0],bh
   14000e003:	rex add DWORD PTR [rax],eax
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	jo     0x14000e033
   14000e00a:	add    BYTE PTR [rax+0x1],al
   14000e00d:	add    BYTE PTR [rax],al
   14000e00f:	add    BYTE PTR [rax],dh
   14000e011:	sub    DWORD PTR [rax],eax
   14000e013:	rex add DWORD PTR [rax],eax
   14000e016:	add    BYTE PTR [rax],al
   14000e018:	movabs al,ds:0x600000000140008b
   14000e021:	sub    BYTE PTR [rax],al
   14000e023:	rex add DWORD PTR [rax],eax
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	push   rax
   14000e029:	and    DWORD PTR [rax],eax
   14000e02b:	rex add DWORD PTR [rax],eax
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	jo     0x14000e07c
   14000e032:	add    BYTE PTR [rax+0x1],al
   14000e035:	add    BYTE PTR [rax],al
   14000e037:	add    BYTE PTR [rax-0x74],dh
   14000e03a:	add    BYTE PTR [rax+0x1],al
   14000e03d:	add    BYTE PTR [rax],al
   14000e03f:	add    BYTE PTR [rax],dl
   14000e041:	and    eax,0x14000
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	mov    al,0x23
   14000e04a:	add    BYTE PTR [rax+0x1],al
   14000e04d:	add    BYTE PTR [rax],al
   14000e04f:	add    BYTE PTR [rax],al
   14000e051:	xchg   ebx,eax
   14000e052:	add    BYTE PTR [rax+0x1],al
   14000e055:	add    BYTE PTR [rax],al
   14000e057:	add    al,dl
   14000e059:	pop    QWORD PTR [rax]
   14000e05b:	rex add DWORD PTR [rax],eax
   14000e05e:	add    BYTE PTR [rax],al
   14000e060:	pop    rsp
   14000e061:	add    BYTE PTR [rdx+0x0],dl
   14000e064:	add    BYTE PTR [r15+0x0],r8b
   14000e068:	rex.WB add BYTE PTR [r11+0x0],dl
   14000e06c:	push   rsp
   14000e06d:	add    BYTE PTR [rdx+0x0],dl
   14000e070:	pop    rcx
   14000e071:	add    BYTE PTR [rax+rax*1+0x4d],bl
   14000e075:	add    BYTE PTR [rcx+0x0],al
   14000e078:	rex.XB add BYTE PTR [r8+0x0],cl
   14000e07c:	rex.WB add BYTE PTR [r14+0x0],cl
   14000e080:	add    BYTE PTR [r8+rax*1+0x53],r11b
   14000e085:	add    BYTE PTR [rdi+0x0],ch
   14000e088:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000e08d:	add    BYTE PTR [rcx+0x0],ah
   14000e090:	jb     0x14000e092
   14000e092:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000e097:	add    BYTE PTR [rcx+0x0],ch
   14000e09a:	movsxd eax,DWORD PTR [rax]
   14000e09c:	jb     0x14000e09e
   14000e09e:	outs   dx,DWORD PTR ds:[rsi]
   14000e09f:	add    BYTE PTR [rbx+0x0],dh
   14000e0a2:	outs   dx,DWORD PTR ds:[rsi]
   14000e0a3:	add    BYTE PTR [rsi+0x0],ah
   14000e0a6:	je     0x14000e0a8
   14000e0a8:	pop    rsp
   14000e0a9:	add    BYTE PTR [rdi+0x0],dl
   14000e0ac:	imul   eax,DWORD PTR [rax],0x64006e
   14000e0b2:	outs   dx,DWORD PTR ds:[rsi]
   14000e0b3:	add    BYTE PTR [rdi+0x0],dh
   14000e0b6:	jae    0x14000e0b8
   14000e0b8:	push   rdx
   14000e0b9:	add    BYTE PTR [rbp+0x0],dh
   14000e0bc:	outs   dx,BYTE PTR ds:[rsi]
   14000e0bd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e0c1:	add    BYTE PTR [rbp+0x0],ch
   14000e0c4:	add    BYTE PTR gs:[rax],al
   14000e0c7:	add    BYTE PTR [rcx+0x0],al
   14000e0ca:	movsxd eax,DWORD PTR [rax]
   14000e0cc:	je     0x14000e0ce
   14000e0ce:	imul   eax,DWORD PTR [rax],0x610076
   14000e0d4:	je     0x14000e0d6
   14000e0d6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e0dc:	push   rsp
   14000e0dd:	add    BYTE PTR [rcx+0x0],bh
   14000e0e0:	jo     0x14000e0e2
   14000e0e2:	add    BYTE PTR gs:[rax],al
   14000e0e5:	add    BYTE PTR [rax],al
   14000e0e7:	add    BYTE PTR [rax+rax*1+0x6c],al
   14000e0eb:	add    BYTE PTR [rax+rax*1+0x50],ch
   14000e0ef:	add    BYTE PTR [rcx+0x0],ah
   14000e0f2:	je     0x14000e0f4
   14000e0f4:	push   0x54000000
   14000e0f9:	add    BYTE PTR [rax+0x0],ch
   14000e0fc:	jb     0x14000e0fe
   14000e0fe:	add    BYTE PTR gs:[rcx+0x0],ah
   14000e102:	add    BYTE PTR fs:[rcx+0x0],ch
   14000e106:	outs   dx,BYTE PTR ds:[rsi]
   14000e107:	add    BYTE PTR [rdi+0x0],ah
   14000e10a:	add    BYTE PTR [rax],al
   14000e10c:	add    BYTE PTR [rax],al
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	rex.XB add BYTE PTR [r13+0x0],sil
   14000e114:	jae    0x14000e116
   14000e116:	je     0x14000e118
   14000e118:	outs   dx,DWORD PTR ds:[rsi]
   14000e119:	add    BYTE PTR [rbp+0x0],ch
   14000e11c:	add    BYTE PTR [r8+rax*1+0x74],sil
   14000e121:	add    BYTE PTR [rdx+0x0],dh
   14000e124:	imul   eax,DWORD PTR [rax],0x750062
   14000e12a:	je     0x14000e12c
   14000e12c:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   14000e138:	push   rsp
   14000e139:	add    BYTE PTR [rdx+0x0],dh
   14000e13c:	jne    0x14000e13e
   14000e13e:	jae    0x14000e140
   14000e140:	je     0x14000e142
   14000e142:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000e146:	jbe    0x14000e148
   14000e148:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14000e14d:	add    BYTE PTR [rax],al
   14000e14f:	add    BYTE PTR [rdx+0x0],dl
   14000e152:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e156:	outs   dx,DWORD PTR ds:[rsi]
   14000e157:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000e15b:	add    BYTE PTR [rbx+0x0],dl
   14000e15e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e162:	jbe    0x14000e164
   14000e164:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14000e170:	add    BYTE PTR [r11+0x0],spl
   14000e174:	je     0x14000e176
   14000e176:	imul   eax,DWORD PTR [rax],0x610076
   14000e17c:	je     0x14000e17e
   14000e17e:	add    BYTE PTR gs:[rcx+0x0],al
   14000e182:	jae    0x14000e184
   14000e184:	push   rbp
   14000e185:	add    BYTE PTR [rbx+0x0],dh
   14000e188:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e18c:	add    BYTE PTR [rax],al
   14000e18e:	add    BYTE PTR [rax],al
   14000e190:	add    BYTE PTR [r8+0x0],r15b
   14000e194:	add    BYTE PTR gs:[rax+0x0],dl
   14000e198:	(bad)  
   14000e199:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000e19d:	add    BYTE PTR [rax],al
   14000e19f:	add    BYTE PTR [rbx+0x0],al
   14000e1a2:	outs   dx,DWORD PTR ds:[rsi]
   14000e1a3:	add    BYTE PTR [rbp+0x0],ch
   14000e1a6:	ins    DWORD PTR es:[rdi],dx
   14000e1a7:	add    BYTE PTR [rcx+0x0],ah
   14000e1aa:	outs   dx,BYTE PTR ds:[rsi]
   14000e1ab:	add    BYTE PTR [rax+rax*1+0x4c],ah
   14000e1af:	add    BYTE PTR [rcx+0x0],ch
   14000e1b2:	outs   dx,BYTE PTR ds:[rsi]
   14000e1b3:	add    BYTE PTR [rbp+0x0],ah
   14000e1b6:	add    BYTE PTR [rax],al
   14000e1b8:	rex.WB add BYTE PTR [r8+rax*1+0x65],spl
   14000e1bd:	add    BYTE PTR [rsi+0x0],ch
   14000e1c0:	je     0x14000e1c2
   14000e1c2:	imul   eax,DWORD PTR [rax],0x790074
   14000e1c8:	push   rsp
   14000e1c9:	add    BYTE PTR [rcx+0x0],bh
   14000e1cc:	jo     0x14000e1ce
   14000e1ce:	add    BYTE PTR gs:[rax],al
   14000e1d1:	add    BYTE PTR [rax],al
   14000e1d3:	add    BYTE PTR [rax],al
   14000e1d5:	add    BYTE PTR [rax],al
   14000e1d7:	add    BYTE PTR [rax+0x0],dl
   14000e1da:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e1de:	ins    DWORD PTR es:[rdi],dx
   14000e1df:	add    BYTE PTR [rcx+0x0],ch
   14000e1e2:	jae    0x14000e1e4
   14000e1e4:	jae    0x14000e1e6
   14000e1e6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e1ec:	jae    0x14000e1ee
   14000e1ee:	add    BYTE PTR [rax],al
   14000e1f0:	add    BYTE PTR [r11+0x0],spl
   14000e1f4:	je     0x14000e1f6
   14000e1f6:	imul   eax,DWORD PTR [rax],0x610076
   14000e1fc:	je     0x14000e1fe
   14000e1fe:	(bad)  
   14000e1ff:	add    BYTE PTR [rdx+0x0],ah
   14000e202:	ins    BYTE PTR es:[rdi],dx
   14000e203:	add    BYTE PTR [rbp+0x0],ah
   14000e206:	add    BYTE PTR [r8+r8*1+0x61],bpl
   14000e20b:	add    BYTE PTR [rbx+0x0],dh
   14000e20e:	jae    0x14000e210
   14000e210:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e214:	add    BYTE PTR [rax],al
   14000e216:	add    BYTE PTR [rax],al
   14000e218:	push   rbx
   14000e219:	add    BYTE PTR [rbp+0x0],ah
   14000e21c:	jb     0x14000e21e
   14000e21e:	jbe    0x14000e220
   14000e220:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e224:	push   rsp
   14000e225:	add    BYTE PTR [rcx+0x0],bh
   14000e228:	jo     0x14000e22a
   14000e22a:	add    BYTE PTR gs:[rax],al
   14000e22d:	add    BYTE PTR [rax],al
   14000e22f:	add    BYTE PTR [rcx+0x0],al
   14000e232:	jo     0x14000e234
   14000e234:	jo     0x14000e236
   14000e236:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   14000e23b:	add    BYTE PTR [rax],al
   14000e23d:	add    BYTE PTR [rax],al
   14000e23f:	add    BYTE PTR [rcx+0x0],cl
   14000e242:	add    BYTE PTR fs:[rbp+0x0],ah
   14000e246:	outs   dx,BYTE PTR ds:[rsi]
   14000e247:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e24b:	add    BYTE PTR [rax+rax*1+0x79],dh
	...
   14000e257:	add    BYTE PTR [rbx+0x0],dl
   14000e25a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e25e:	jbe    0x14000e260
   14000e260:	imul   eax,DWORD PTR [rax],0x650063
   14000e266:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e26a:	ins    DWORD PTR es:[rdi],dx
   14000e26b:	add    BYTE PTR [rbp+0x0],ah
   14000e26e:	add    BYTE PTR [rax],al
   14000e270:	add    BYTE PTR [rbp+0x0],r12b
   14000e274:	(bad)  
   14000e275:	add    BYTE PTR [rbp+0x0],dh
   14000e278:	add    BYTE PTR [eax+0x0],dl
   14000e27c:	(bad)  
   14000e27d:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000e281:	add    BYTE PTR [rax],al
   14000e283:	add    BYTE PTR [rax],al
   14000e285:	add    BYTE PTR [rax],al
   14000e287:	add    BYTE PTR [rbp+0x0],al
   14000e28a:	outs   dx,BYTE PTR ds:[rsi]
   14000e28b:	add    BYTE PTR [rsi+0x0],dh
   14000e28e:	imul   eax,DWORD PTR [rax],0x6f0072
   14000e294:	outs   dx,BYTE PTR ds:[rsi]
   14000e295:	add    BYTE PTR [rbp+0x0],ch
   14000e298:	add    BYTE PTR gs:[rsi+0x0],ch
   14000e29c:	je     0x14000e29e
   14000e29e:	add    BYTE PTR [rax],al
   14000e2a0:	rex.RXB cmp eax,0x5d47fe2f
   14000e2a6:	cdq    
   14000e2a7:	push   rsp
   14000e2a8:	xor    DWORD PTR [rbx+rax*2+0xc],0x7c
   14000e2ad:	fiadd  DWORD PTR [rdx]
   14000e2af:	add    al,0x0
   14000e2b1:	add    BYTE PTR [rax],al
   14000e2b3:	add    bl,ch
   14000e2b5:	cmp    DWORD PTR [rdi+0x55],ebx
   14000e2bb:	add    BYTE PTR [rdx],al
   14000e2bd:	add    BYTE PTR [rax],al
   14000e2bf:	add    BYTE PTR [rdx],ch
   14000e2c1:	add    BYTE PTR [rax],al
   14000e2c3:	add    BYTE PTR [rax-0x67ffff13],bl
   14000e2c9:	(bad)
   14000e2cc:	add    BYTE PTR [rax],al
   14000e2ce:	add    BYTE PTR [rax],al
   14000e2d0:	jmp    0x14000e30b
   14000e2d2:	lahf   
   14000e2d3:	push   rbp
   14000e2d4:	add    BYTE PTR [rax],al
   14000e2d6:	add    BYTE PTR [rax],al
   14000e2d8:	or     eax,0x6c000000
   14000e2dd:	add    eax,DWORD PTR [rax]
   14000e2df:	add    al,bl
   14000e2e1:	in     eax,dx
   14000e2e2:	add    BYTE PTR [rax],al
   14000e2e4:	fadd   st,st(5)
	...
   14000e30e:	add    BYTE PTR [rax],al
   14000e310:	movabs al,ds:0x0
	...
   14000e365:	add    BYTE PTR [rax],al
   14000e367:	add    BYTE PTR [rax],cl
   14000e369:	and    BYTE PTR [rcx],al
   14000e36b:	rex add DWORD PTR [rax],eax
	...
   14000e37e:	add    BYTE PTR [rax],al
   14000e380:	mov    eax,0x14000d4
   14000e385:	add    BYTE PTR [rax],al
   14000e387:	add    al,al
   14000e389:	(bad)  
   14000e38a:	add    BYTE PTR [rax+0x1],al
   14000e38d:	add    BYTE PTR [rax],al
   14000e38f:	add    BYTE PTR [rax-0x2b],ch
   14000e392:	add    BYTE PTR [rax+0x1],al
   14000e395:	add    BYTE PTR [rax],al
   14000e397:	add    BYTE PTR [rdi+0x0],dh
   14000e39d:	add    BYTE PTR [rax],al
   14000e39f:	add    BYTE PTR [rax],al
   14000e3a1:	xor    eax,0x0
	...
   14000e3ae:	add    BYTE PTR [rax],al
   14000e3b0:	(bad)  
   14000e3b1:	add    BYTE PTR [rbx+0x0],ah
   14000e3b4:	je     0x14000e3b6
   14000e3b6:	imul   eax,DWORD PTR [rax],0x610076
   14000e3bc:	je     0x14000e3be
   14000e3be:	(bad)  
   14000e3bf:	add    BYTE PTR [rdx+0x0],ah
   14000e3c2:	ins    BYTE PTR es:[rdi],dx
   14000e3c3:	add    BYTE PTR [rbp+0x0],ah
   14000e3c6:	add    BYTE PTR [r8+r8*1+0x61],bpl
   14000e3cb:	add    BYTE PTR [rbx+0x0],dh
   14000e3ce:	jae    0x14000e3d0
   14000e3d0:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
	...
   14000e3dd:	add    BYTE PTR [rax],al
   14000e3df:	add    BYTE PTR [rdi+0x0],dl
   14000e3e2:	imul   eax,DWORD PTR [rax],0x64006e
   14000e3e8:	outs   dx,DWORD PTR ds:[rsi]
   14000e3e9:	add    BYTE PTR [rdi+0x0],dh
   14000e3ec:	jae    0x14000e3ee
   14000e3ee:	add    BYTE PTR cs:[rsi+0x0],al
   14000e3f2:	outs   dx,DWORD PTR ds:[rsi]
   14000e3f3:	add    BYTE PTR [rbp+0x0],dh
   14000e3f6:	outs   dx,BYTE PTR ds:[rsi]
   14000e3f7:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000e3fb:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e3ff:	add    BYTE PTR [rdi+0x0],ch
   14000e402:	outs   dx,BYTE PTR ds:[rsi]
   14000e403:	add    BYTE PTR [rsi],ch
   14000e405:	add    BYTE PTR [rax+0x0],dl
   14000e408:	jb     0x14000e40a
   14000e40a:	outs   dx,DWORD PTR ds:[rsi]
   14000e40b:	add    BYTE PTR [rax+0x0],dh
   14000e40e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e412:	je     0x14000e414
   14000e414:	jns    0x14000e416
   14000e416:	push   rsi
   14000e417:	add    BYTE PTR [rcx+0x0],ah
   14000e41a:	ins    BYTE PTR es:[rdi],dx
   14000e41b:	add    BYTE PTR [rbp+0x0],dh
   14000e41e:	add    BYTE PTR gs:[rax],al
   14000e421:	add    BYTE PTR [rax],al
   14000e423:	add    BYTE PTR [rax],al
   14000e425:	add    BYTE PTR [rax],al
   14000e427:	add    BYTE PTR [rax+0x4d],dl
   14000e42a:	add    BYTE PTR [rax+0x1],al
   14000e42d:	add    BYTE PTR [rax],al
   14000e42f:	add    al,ah
   14000e431:	rex.WXB add BYTE PTR [r8+0x1],al
   14000e435:	add    BYTE PTR [rax],al
   14000e437:	add    BYTE PTR [rax],ah
   14000e439:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000e43d:	add    BYTE PTR [rax],al
   14000e43f:	add    BYTE PTR [rax-0x6c],ah
   14000e442:	add    BYTE PTR [rax+0x1],al
   14000e445:	add    BYTE PTR [rax],al
   14000e447:	add    BYTE PTR [rax+0x14000a3],dh
   14000e44d:	add    BYTE PTR [rax],al
   14000e44f:	add    BYTE PTR [rax],dh
   14000e451:	add    BYTE PTR [rax],0x40
   14000e454:	add    DWORD PTR [rax],eax
   14000e456:	add    BYTE PTR [rax],al
   14000e458:	push   rax
   14000e459:	lods   al,BYTE PTR ds:[rsi]
   14000e45a:	add    BYTE PTR [rax+0x1],al
   14000e45d:	add    BYTE PTR [rax],al
   14000e45f:	add    BYTE PTR [rax-0x72],al
   14000e462:	add    BYTE PTR [rax+0x1],al
   14000e465:	add    BYTE PTR [rax],al
   14000e467:	add    BYTE PTR [rax],dl
   14000e469:	xchg   esp,eax
   14000e46a:	add    BYTE PTR [rax+0x1],al
   14000e46d:	add    BYTE PTR [rax],al
   14000e46f:	add    BYTE PTR [rax+0x4c],ah
   14000e472:	add    BYTE PTR [rax+0x1],al
   14000e475:	add    BYTE PTR [rax],al
   14000e477:	add    al,ah
   14000e479:	sahf   
   14000e47a:	add    BYTE PTR [rax+0x1],al
   14000e47d:	add    BYTE PTR [rax],al
   14000e47f:	add    BYTE PTR [rax+0x4e],al
   14000e482:	add    BYTE PTR [rax+0x1],al
   14000e485:	add    BYTE PTR [rax],al
   14000e487:	add    al,ah
   14000e489:	xchg   edi,eax
   14000e48a:	add    BYTE PTR [rax+0x1],al
   14000e48d:	add    BYTE PTR [rax],al
   14000e48f:	add    BYTE PTR [rax],dh
   14000e491:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000e495:	add    BYTE PTR [rax],al
   14000e497:	add    BYTE PTR [rax+0x140007e],dh
   14000e49d:	add    BYTE PTR [rax],al
   14000e49f:	add    BYTE PTR [rax],al
   14000e4a1:	movabs ds:0x8060000000014000,eax
   14000e4aa:	add    BYTE PTR [rax+0x1],al
   14000e4ad:	add    BYTE PTR [rax],al
   14000e4af:	add    BYTE PTR [rax-0x54],ah
   14000e4b2:	add    BYTE PTR [rax+0x1],al
   14000e4b5:	add    BYTE PTR [rax],al
   14000e4b7:	add    al,al
   14000e4b9:	mov    es,WORD PTR [rax]
   14000e4bb:	rex add DWORD PTR [rax],eax
   14000e4be:	add    BYTE PTR [rax],al
   14000e4c0:	lock xchg ebx,eax
   14000e4c2:	add    BYTE PTR [rax+0x1],al
   14000e4c5:	add    BYTE PTR [rax],al
   14000e4c7:	add    BYTE PTR [rax+0x4c],ah
   14000e4ca:	add    BYTE PTR [rax+0x1],al
   14000e4cd:	add    BYTE PTR [rax],al
   14000e4cf:	add    BYTE PTR [rax+0x14000af],al
   14000e4d5:	add    BYTE PTR [rax],al
   14000e4d7:	add    al,al
   14000e4d9:	mov    al,0x0
   14000e4db:	rex add DWORD PTR [rax],eax
   14000e4de:	add    BYTE PTR [rax],al
   14000e4e0:	jo     0x14000e483
   14000e4e2:	add    BYTE PTR [rax+0x1],al
   14000e4e5:	add    BYTE PTR [rax],al
   14000e4e7:	add    BYTE PTR [rax-0x70],ah
   14000e4ea:	add    BYTE PTR [rax+0x1],al
   14000e4ed:	add    BYTE PTR [rax],al
   14000e4ef:	add    BYTE PTR [rax+0x7e],ah
   14000e4f2:	add    BYTE PTR [rax+0x1],al
   14000e4f5:	add    BYTE PTR [rax],al
   14000e4f7:	add    BYTE PTR [rax+0x4d],ah
   14000e4fa:	add    BYTE PTR [rax+0x1],al
   14000e4fd:	add    BYTE PTR [rax],al
   14000e4ff:	add    BYTE PTR [rax+0x4c],al
   14000e502:	add    BYTE PTR [rax+0x1],al
   14000e505:	add    BYTE PTR [rax],al
   14000e507:	add    BYTE PTR [rax+0x140004d],al
   14000e50d:	add    BYTE PTR [rax],al
   14000e50f:	add    BYTE PTR [rax],al
   14000e511:	xchg   esi,eax
   14000e512:	add    BYTE PTR [rax+0x1],al
   14000e515:	add    BYTE PTR [rax],al
   14000e517:	add    BYTE PTR [rax],al
   14000e519:	movabs ds:0x8060000000014000,eax
   14000e522:	add    BYTE PTR [rax+0x1],al
   14000e525:	add    BYTE PTR [rax],al
   14000e527:	add    BYTE PTR [rax],dl
   14000e529:	stos   BYTE PTR es:[rdi],al
   14000e52a:	add    BYTE PTR [rax+0x1],al
   14000e52d:	add    BYTE PTR [rax],al
   14000e52f:	add    al,al
   14000e531:	mov    es,WORD PTR [rax]
   14000e533:	rex add DWORD PTR [rax],eax
   14000e536:	add    BYTE PTR [rax],al
   14000e538:	movabs al,ds:0x3000000001400093
   14000e541:	xchg   esp,eax
   14000e542:	add    BYTE PTR [rax+0x1],al
   14000e545:	add    BYTE PTR [rax],al
   14000e547:	add    BYTE PTR [rax],al
   14000e549:	scas   eax,DWORD PTR es:[rdi]
   14000e54a:	add    BYTE PTR [rax+0x1],al
   14000e54d:	add    BYTE PTR [rax],al
   14000e54f:	add    BYTE PTR [rax+0x14000b0],ah
   14000e555:	add    BYTE PTR [rax],al
   14000e557:	add    BYTE PTR [rax+0x14000a0],al
   14000e55d:	add    BYTE PTR [rax],al
   14000e55f:	add    BYTE PTR [rax-0x70],ah
   14000e562:	add    BYTE PTR [rax+0x1],al
   14000e565:	add    BYTE PTR [rax],al
   14000e567:	add    BYTE PTR [rax+0x7d],dh
   14000e56a:	add    BYTE PTR [rax+0x1],al
   14000e56d:	add    BYTE PTR [rax],al
   14000e56f:	add    BYTE PTR [rax+0x4d],dh
   14000e572:	add    BYTE PTR [rax+0x1],al
   14000e575:	add    BYTE PTR [rax],al
   14000e577:	add    BYTE PTR [rax],ah
   14000e579:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000e57d:	add    BYTE PTR [rax],al
   14000e57f:	add    BYTE PTR [rax+0x140004d],dl
   14000e585:	add    BYTE PTR [rax],al
   14000e587:	add    BYTE PTR [rax+0x140004c],dl
   14000e58d:	add    BYTE PTR [rax],al
   14000e58f:	add    BYTE PTR [rax+0x140004c],ah
   14000e595:	add    BYTE PTR [rax],al
   14000e597:	add    al,ah
   14000e599:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000e59d:	add    BYTE PTR [rax],al
   14000e59f:	add    BYTE PTR [rax],al
   14000e5a1:	xchg   BYTE PTR [rax],al
   14000e5a3:	rex add DWORD PTR [rax],eax
   14000e5a6:	add    BYTE PTR [rax],al
   14000e5a8:	add    BYTE PTR [rdi+0x0],bh
   14000e5ab:	rex add DWORD PTR [rax],eax
   14000e5ae:	add    BYTE PTR [rax],al
   14000e5b0:	jo     0x14000e5db
   14000e5b2:	add    BYTE PTR [rax+0x1],al
   14000e5b5:	add    BYTE PTR [rax],al
   14000e5b7:	add    BYTE PTR [rax],dh
   14000e5b9:	sub    DWORD PTR [rax],eax
   14000e5bb:	rex add DWORD PTR [rax],eax
   14000e5be:	add    BYTE PTR [rax],al
   14000e5c0:	movabs al,ds:0x600000000140008b
   14000e5c9:	sub    BYTE PTR [rax],al
   14000e5cb:	rex add DWORD PTR [rax],eax
   14000e5ce:	add    BYTE PTR [rax],al
   14000e5d0:	push   rax
   14000e5d1:	and    DWORD PTR [rax],eax
   14000e5d3:	rex add DWORD PTR [rax],eax
   14000e5d6:	add    BYTE PTR [rax],al
   14000e5d8:	adc    BYTE PTR [rbx+0x14000],al
   14000e5de:	add    BYTE PTR [rax],al
   14000e5e0:	jo     0x14000e56e
   14000e5e2:	add    BYTE PTR [rax+0x1],al
   14000e5e5:	add    BYTE PTR [rax],al
   14000e5e7:	add    BYTE PTR [rax],dl
   14000e5e9:	and    eax,0x14000
   14000e5ee:	add    BYTE PTR [rax],al
   14000e5f0:	mov    al,0x23
   14000e5f2:	add    BYTE PTR [rax+0x1],al
   14000e5f5:	add    BYTE PTR [rax],al
   14000e5f7:	add    BYTE PTR [rax],al
   14000e5f9:	xchg   ebx,eax
   14000e5fa:	add    BYTE PTR [rax+0x1],al
   14000e5fd:	add    BYTE PTR [rax],al
   14000e5ff:	add    al,dl
   14000e601:	pop    QWORD PTR [rax]
   14000e603:	rex add DWORD PTR [rax],eax
   14000e606:	add    BYTE PTR [rax],al
   14000e608:	(bad)  
   14000e609:	jnp    0x14000e60b
   14000e60b:	rex add DWORD PTR [rax],eax
   14000e60e:	add    BYTE PTR [rax],al
   14000e610:	jo     0x14000e63b
   14000e612:	add    BYTE PTR [rax+0x1],al
   14000e615:	add    BYTE PTR [rax],al
   14000e617:	add    BYTE PTR [rax],dh
   14000e619:	sub    DWORD PTR [rax],eax
   14000e61b:	rex add DWORD PTR [rax],eax
   14000e61e:	add    BYTE PTR [rax],al
   14000e620:	(bad)  
   14000e621:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000e625:	add    BYTE PTR [rax],al
   14000e627:	add    BYTE PTR [rax+0x28],ah
   14000e62a:	add    BYTE PTR [rax+0x1],al
   14000e62d:	add    BYTE PTR [rax],al
   14000e62f:	add    BYTE PTR [rax+0x21],dl
   14000e632:	add    BYTE PTR [rax+0x1],al
   14000e635:	add    BYTE PTR [rax],al
   14000e637:	add    BYTE PTR [rax+0x4c],dl
   14000e63a:	add    BYTE PTR [rax+0x1],al
   14000e63d:	add    BYTE PTR [rax],al
   14000e63f:	add    BYTE PTR [rax+0x4c],dl
   14000e642:	add    BYTE PTR [rax+0x1],al
   14000e645:	add    BYTE PTR [rax],al
   14000e647:	add    BYTE PTR [rax],dl
   14000e649:	and    eax,0x14000
   14000e64e:	add    BYTE PTR [rax],al
   14000e650:	mov    al,0x23
   14000e652:	add    BYTE PTR [rax+0x1],al
   14000e655:	add    BYTE PTR [rax],al
   14000e657:	add    BYTE PTR [rax],al
   14000e659:	xchg   ebx,eax
   14000e65a:	add    BYTE PTR [rax+0x1],al
   14000e65d:	add    BYTE PTR [rax],al
   14000e65f:	add    al,dl
   14000e661:	pop    QWORD PTR [rax]
   14000e663:	rex add DWORD PTR [rax],eax
   14000e666:	add    BYTE PTR [rax],al
   14000e668:	push   rax
   14000e669:	rex.W add BYTE PTR [rax+0x1],al
   14000e66d:	add    BYTE PTR [rax],al
   14000e66f:	add    BYTE PTR [rax+0x14000a3],dh
   14000e675:	add    BYTE PTR [rax],al
   14000e677:	add    BYTE PTR [rax],dh
   14000e679:	add    BYTE PTR [rax],0x40
   14000e67c:	add    DWORD PTR [rax],eax
   14000e67e:	add    BYTE PTR [rax],al
   14000e680:	push   rax
   14000e681:	lods   al,BYTE PTR ds:[rsi]
   14000e682:	add    BYTE PTR [rax+0x1],al
   14000e685:	add    BYTE PTR [rax],al
   14000e687:	add    BYTE PTR [rax-0x72],al
   14000e68a:	add    BYTE PTR [rax+0x1],al
   14000e68d:	add    BYTE PTR [rax],al
   14000e68f:	add    BYTE PTR [rax+0x1400093],al
   14000e695:	add    BYTE PTR [rax],al
   14000e697:	add    BYTE PTR [rax+0x4c],ah
   14000e69a:	add    BYTE PTR [rax+0x1],al
   14000e69d:	add    BYTE PTR [rax],al
   14000e69f:	add    BYTE PTR [rax-0x63],ah
   14000e6a2:	add    BYTE PTR [rax+0x1],al
   14000e6a5:	add    BYTE PTR [rax],al
   14000e6a7:	add    BYTE PTR [rax+0x14000b1],al
   14000e6ad:	add    BYTE PTR [rax],al
   14000e6af:	add    al,dl
   14000e6b1:	xchg   esi,eax
   14000e6b2:	add    BYTE PTR [rax+0x1],al
   14000e6b5:	add    BYTE PTR [rax],al
   14000e6b7:	add    al,al
   14000e6b9:	lods   eax,DWORD PTR ds:[rsi]
   14000e6ba:	add    BYTE PTR [rax+0x1],al
   14000e6bd:	add    BYTE PTR [rax],al
   14000e6bf:	add    BYTE PTR [rax+0x140007b],ah
   14000e6c5:	add    BYTE PTR [rax],al
   14000e6c7:	add    BYTE PTR [rax+0x4d],dl
   14000e6ca:	add    BYTE PTR [rax+0x1],al
   14000e6cd:	add    BYTE PTR [rax],al
   14000e6cf:	add    al,ah
   14000e6d1:	rex.WXB add BYTE PTR [r8+0x1],al
   14000e6d5:	add    BYTE PTR [rax],al
   14000e6d7:	add    BYTE PTR [rax+0x140004d],ah
   14000e6dd:	add    BYTE PTR [rax],al
   14000e6df:	add    BYTE PTR [rax-0x6c],ah
   14000e6e2:	add    BYTE PTR [rax+0x1],al
   14000e6e5:	add    BYTE PTR [rax],al
   14000e6e7:	add    BYTE PTR [rax+0x4d],dh
   14000e6ea:	add    BYTE PTR [rax+0x1],al
   14000e6ed:	add    BYTE PTR [rax],al
   14000e6ef:	add    BYTE PTR [rax],ah
   14000e6f1:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000e6f5:	add    BYTE PTR [rax],al
   14000e6f7:	add    BYTE PTR [rax+0x140004d],dl
   14000e6fd:	add    BYTE PTR [rax],al
   14000e6ff:	add    BYTE PTR [rax+0x140004c],dl
   14000e705:	add    BYTE PTR [rax],al
   14000e707:	add    al,dl
   14000e709:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000e70d:	add    BYTE PTR [rax],al
   14000e70f:	add    al,ah
   14000e711:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000e715:	add    BYTE PTR [rax],al
   14000e717:	add    BYTE PTR [rax-0x79],ah
   14000e71a:	add    BYTE PTR [rax+0x1],al
   14000e71d:	add    BYTE PTR [rax],al
   14000e71f:	add    BYTE PTR [rax+0x14000a3],dh
   14000e725:	add    BYTE PTR [rax],al
   14000e727:	add    BYTE PTR [rax],dh
   14000e729:	add    BYTE PTR [rax],0x40
   14000e72c:	add    DWORD PTR [rax],eax
   14000e72e:	add    BYTE PTR [rax],al
   14000e730:	xor    BYTE PTR [rbx+0x14000],ch
   14000e736:	add    BYTE PTR [rax],al
   14000e738:	rex mov es,WORD PTR [rax]
   14000e73b:	rex add DWORD PTR [rax],eax
   14000e73e:	add    BYTE PTR [rax],al
   14000e740:	movabs al,ds:0x3000000001400093
   14000e749:	xchg   esp,eax
   14000e74a:	add    BYTE PTR [rax+0x1],al
   14000e74d:	add    BYTE PTR [rax],al
   14000e74f:	add    BYTE PTR [rax+0x4a],dh
   14000e752:	add    BYTE PTR [rax+0x1],al
   14000e755:	add    BYTE PTR [rax],al
   14000e757:	add    BYTE PTR [rax+0x4a],dh
   14000e75a:	add    BYTE PTR [rax+0x1],al
   14000e75d:	add    BYTE PTR [rax],al
   14000e75f:	add    BYTE PTR [rax+0x4a],dh
   14000e762:	add    BYTE PTR [rax+0x1],al
   14000e765:	add    BYTE PTR [rax],al
   14000e767:	add    BYTE PTR [rax+0x4a],dh
   14000e76a:	add    BYTE PTR [rax+0x1],al
   14000e76d:	add    BYTE PTR [rax],al
   14000e76f:	add    BYTE PTR [rax+0x140007c],al
   14000e775:	add    BYTE PTR [rax],al
   14000e777:	add    BYTE PTR [rax],dh
   14000e779:	movabs ds:0x4c30000000014000,eax
   14000e782:	add    BYTE PTR [rax+0x1],al
   14000e785:	add    BYTE PTR [rax],al
   14000e787:	add    al,al
   14000e789:	stos   DWORD PTR es:[rdi],eax
   14000e78a:	add    BYTE PTR [rax+0x1],al
   14000e78d:	add    BYTE PTR [rax],al
   14000e78f:	add    BYTE PTR [rax+0x4a],dh
   14000e792:	add    BYTE PTR [rax+0x1],al
   14000e795:	add    BYTE PTR [rax],al
   14000e797:	add    al,al
   14000e799:	jl     0x14000e79b
   14000e79b:	rex add DWORD PTR [rax],eax
   14000e79e:	add    BYTE PTR [rax],al
   14000e7a0:	rex
   14000e7a1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000e7a5:	add    BYTE PTR [rax],al
   14000e7a7:	add    al,ah
   14000e7a9:	rex.WXB add BYTE PTR [r8+0x1],al
   14000e7ad:	add    BYTE PTR [rax],al
   14000e7af:	add    BYTE PTR [rax+0x140004d],dh
   14000e7b5:	add    BYTE PTR [rax],al
   14000e7b7:	add    BYTE PTR [rax-0x6c],ah
   14000e7ba:	add    BYTE PTR [rax+0x1],al
   14000e7bd:	add    BYTE PTR [rax],al
   14000e7bf:	add    BYTE PTR [rax],al
   14000e7c1:	jg     0x14000e7c3
   14000e7c3:	rex add DWORD PTR [rax],eax
   14000e7c6:	add    BYTE PTR [rax],al
   14000e7c8:	jo     0x14000e7f3
   14000e7ca:	add    BYTE PTR [rax+0x1],al
   14000e7cd:	add    BYTE PTR [rax],al
   14000e7cf:	add    BYTE PTR [rax],dh
   14000e7d1:	sub    DWORD PTR [rax],eax
   14000e7d3:	rex add DWORD PTR [rax],eax
   14000e7d6:	add    BYTE PTR [rax],al
   14000e7d8:	movabs al,ds:0x600000000140008b
   14000e7e1:	sub    BYTE PTR [rax],al
   14000e7e3:	rex add DWORD PTR [rax],eax
   14000e7e6:	add    BYTE PTR [rax],al
   14000e7e8:	push   rax
   14000e7e9:	and    DWORD PTR [rax],eax
   14000e7eb:	rex add DWORD PTR [rax],eax
   14000e7ee:	add    BYTE PTR [rax],al
   14000e7f0:	(bad)  
   14000e7f1:	(bad)  
   14000e7f2:	add    BYTE PTR [rax+0x1],al
   14000e7f5:	add    BYTE PTR [rax],al
   14000e7f7:	add    BYTE PTR [rax-0x74],dh
   14000e7fa:	add    BYTE PTR [rax+0x1],al
   14000e7fd:	add    BYTE PTR [rax],al
   14000e7ff:	add    BYTE PTR [rax],dl
   14000e801:	and    eax,0x14000
   14000e806:	add    BYTE PTR [rax],al
   14000e808:	mov    al,0x23
   14000e80a:	add    BYTE PTR [rax+0x1],al
   14000e80d:	add    BYTE PTR [rax],al
   14000e80f:	add    BYTE PTR [rax],al
   14000e811:	xchg   ebx,eax
   14000e812:	add    BYTE PTR [rax+0x1],al
   14000e815:	add    BYTE PTR [rax],al
   14000e817:	add    al,dl
   14000e819:	pop    QWORD PTR [rax]
   14000e81b:	rex add DWORD PTR [rax],eax
   14000e81e:	add    BYTE PTR [rax],al
   14000e820:	add    BYTE PTR [rbx+0x14000],ah
   14000e826:	add    BYTE PTR [rax],al
   14000e828:	(bad)  
   14000e829:	add    BYTE PTR [rax],0x40
   14000e82c:	add    DWORD PTR [rax],eax
   14000e82e:	add    BYTE PTR [rax],al
   14000e830:	(bad)  
   14000e831:	lods   al,BYTE PTR ds:[rsi]
   14000e832:	add    BYTE PTR [rax+0x1],al
   14000e835:	add    BYTE PTR [rax],al
   14000e837:	add    al,al
   14000e839:	mov    es,WORD PTR [rax]
   14000e83b:	rex add DWORD PTR [rax],eax
   14000e83e:	add    BYTE PTR [rax],al
   14000e840:	lock xchg ebx,eax
   14000e842:	add    BYTE PTR [rax+0x1],al
   14000e845:	add    BYTE PTR [rax],al
   14000e847:	add    BYTE PTR [rax+0x4c],ah
   14000e84a:	add    BYTE PTR [rax+0x1],al
   14000e84d:	add    BYTE PTR [rax],al
   14000e84f:	add    al,dh
   14000e851:	scas   eax,DWORD PTR es:[rdi]
   14000e852:	add    BYTE PTR [rax+0x1],al
   14000e855:	add    BYTE PTR [rax],al
   14000e857:	add    al,ah
   14000e859:	mov    al,0x0
   14000e85b:	rex add DWORD PTR [rax],eax
   14000e85e:	add    BYTE PTR [rax],al
   14000e860:	shl    BYTE PTR [rcx+0x14000],0x0
   14000e867:	add    BYTE PTR [rax-0x70],ah
   14000e86a:	add    BYTE PTR [rax+0x1],al
   14000e86d:	add    BYTE PTR [rax],al
   14000e86f:	add    BYTE PTR [rax+0x7f],al
   14000e872:	add    BYTE PTR [rax+0x1],al
   14000e875:	add    BYTE PTR [rax],al
   14000e877:	add    BYTE PTR [rax],al
   14000e879:	movabs ds:0x8060000000014000,eax
   14000e882:	add    BYTE PTR [rax+0x1],al
   14000e885:	add    BYTE PTR [rax],al
   14000e887:	add    BYTE PTR [rax],dl
   14000e889:	stos   BYTE PTR es:[rdi],al
   14000e88a:	add    BYTE PTR [rax+0x1],al
   14000e88d:	add    BYTE PTR [rax],al
   14000e88f:	add    al,al
   14000e891:	mov    es,WORD PTR [rax]
   14000e893:	rex add DWORD PTR [rax],eax
   14000e896:	add    BYTE PTR [rax],al
   14000e898:	movabs al,ds:0x3000000001400093
   14000e8a1:	xchg   esp,eax
   14000e8a2:	add    BYTE PTR [rax+0x1],al
   14000e8a5:	add    BYTE PTR [rax],al
   14000e8a7:	add    BYTE PTR [rax+0x4a],dh
   14000e8aa:	add    BYTE PTR [rax+0x1],al
   14000e8ad:	add    BYTE PTR [rax],al
   14000e8af:	add    BYTE PTR [rax+0x4a],dh
   14000e8b2:	add    BYTE PTR [rax+0x1],al
   14000e8b5:	add    BYTE PTR [rax],al
   14000e8b7:	add    BYTE PTR [rax+0x4a],dh
   14000e8ba:	add    BYTE PTR [rax+0x1],al
   14000e8bd:	add    BYTE PTR [rax],al
   14000e8bf:	add    BYTE PTR [rax-0x70],ah
   14000e8c2:	add    BYTE PTR [rax+0x1],al
   14000e8c5:	add    BYTE PTR [rax],al
   14000e8c7:	add    BYTE PTR [rax],al
   14000e8c9:	jl     0x14000e8cb
   14000e8cb:	rex add DWORD PTR [rax],eax
   14000e8ce:	add    BYTE PTR [rax],al
   14000e8d0:	xor    BYTE PTR [rbx+0x14000],ah
   14000e8d6:	add    BYTE PTR [rax],al
   14000e8d8:	xor    BYTE PTR [rax+rax*1+0x40],cl
   14000e8dc:	add    DWORD PTR [rax],eax
   14000e8de:	add    BYTE PTR [rax],al
   14000e8e0:	shr    BYTE PTR [rbx+0x14000],0x0
   14000e8e7:	add    BYTE PTR [rax-0x54],dh
   14000e8ea:	add    BYTE PTR [rax+0x1],al
   14000e8ed:	add    BYTE PTR [rax],al
   14000e8ef:	add    BYTE PTR [rax+0x140007f],dl
   14000e8f5:	add    BYTE PTR [rax],al
   14000e8f7:	add    BYTE PTR [rax],dl
   14000e8f9:	movabs ds:0x8060000000014000,eax
   14000e902:	add    BYTE PTR [rax+0x1],al
   14000e905:	add    BYTE PTR [rax],al
   14000e907:	add    BYTE PTR [rax+0x14000aa],ah
   14000e90d:	add    BYTE PTR [rax],al
   14000e90f:	add    BYTE PTR [rax-0x73],al
   14000e912:	add    BYTE PTR [rax+0x1],al
   14000e915:	add    BYTE PTR [rax],al
   14000e917:	add    BYTE PTR [rax+0x1400093],ah
   14000e91d:	add    BYTE PTR [rax],al
   14000e91f:	add    BYTE PTR [rax],dh
   14000e921:	xchg   esp,eax
   14000e922:	add    BYTE PTR [rax+0x1],al
   14000e925:	add    BYTE PTR [rax],al
   14000e927:	add    BYTE PTR [rax+0x4a],dh
   14000e92a:	add    BYTE PTR [rax+0x1],al
   14000e92d:	add    BYTE PTR [rax],al
   14000e92f:	add    BYTE PTR [rax+0x4a],dh
   14000e932:	add    BYTE PTR [rax+0x1],al
   14000e935:	add    BYTE PTR [rax],al
   14000e937:	add    BYTE PTR [rax],al
   14000e939:	jl     0x14000e93b
   14000e93b:	rex add DWORD PTR [rax],eax
   14000e93e:	add    BYTE PTR [rax],al
   14000e940:	add    BYTE PTR [rdi+0x0],bh
   14000e943:	rex add DWORD PTR [rax],eax
   14000e946:	add    BYTE PTR [rax],al
   14000e948:	jo     0x14000e973
   14000e94a:	add    BYTE PTR [rax+0x1],al
   14000e94d:	add    BYTE PTR [rax],al
   14000e94f:	add    BYTE PTR [rax],dh
   14000e951:	sub    DWORD PTR [rax],eax
   14000e953:	rex add DWORD PTR [rax],eax
   14000e956:	add    BYTE PTR [rax],al
   14000e958:	movabs al,ds:0x600000000140008b
   14000e961:	sub    BYTE PTR [rax],al
   14000e963:	rex add DWORD PTR [rax],eax
   14000e966:	add    BYTE PTR [rax],al
   14000e968:	push   rax
   14000e969:	and    DWORD PTR [rax],eax
   14000e96b:	rex add DWORD PTR [rax],eax
   14000e96e:	add    BYTE PTR [rax],al
   14000e970:	rol    BYTE PTR [rbx+0x14000],0x0
   14000e977:	add    BYTE PTR [rax-0x74],dh
   14000e97a:	add    BYTE PTR [rax+0x1],al
   14000e97d:	add    BYTE PTR [rax],al
   14000e97f:	add    BYTE PTR [rax],dl
   14000e981:	and    eax,0x14000
   14000e986:	add    BYTE PTR [rax],al
   14000e988:	mov    al,0x23
   14000e98a:	add    BYTE PTR [rax+0x1],al
   14000e98d:	add    BYTE PTR [rax],al
   14000e98f:	add    BYTE PTR [rax],al
   14000e991:	xchg   ebx,eax
   14000e992:	add    BYTE PTR [rax+0x1],al
   14000e995:	add    BYTE PTR [rax],al
   14000e997:	add    al,dl
   14000e999:	pop    QWORD PTR [rax]
   14000e99b:	rex add DWORD PTR [rax],eax
   14000e99e:	add    BYTE PTR [rax],al
   14000e9a0:	jo     0x14000e9ef
   14000e9a2:	add    BYTE PTR [rax+0x1],al
   14000e9a5:	add    BYTE PTR [rax],al
   14000e9a7:	add    BYTE PTR [rax],ah
   14000e9a9:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000e9ad:	add    BYTE PTR [rax],al
   14000e9af:	add    BYTE PTR [rax],al
   14000e9b1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000e9b5:	add    BYTE PTR [rax],al
   14000e9b7:	add    BYTE PTR [rax+0x140004c],dl
   14000e9bd:	add    BYTE PTR [rax],al
   14000e9bf:	add    BYTE PTR [rax+0x140004c],dh
   14000e9c5:	add    BYTE PTR [rax],al
   14000e9c7:	add    BYTE PTR [rax],al
   14000e9c9:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000e9cd:	add    BYTE PTR [rax],al
   14000e9cf:	add    BYTE PTR [rax+0x4a],dh
   14000e9d2:	add    BYTE PTR [rax+0x1],al
   14000e9d5:	add    BYTE PTR [rax],al
   14000e9d7:	add    BYTE PTR [rax],dl
   14000e9d9:	movabs ds:0x8060000000014000,eax
   14000e9e2:	add    BYTE PTR [rax+0x1],al
   14000e9e5:	add    BYTE PTR [rax],al
   14000e9e7:	add    BYTE PTR [rax-0x54],al
   14000e9ea:	add    BYTE PTR [rax+0x1],al
   14000e9ed:	add    BYTE PTR [rax],al
   14000e9ef:	add    BYTE PTR [rax-0x73],al
   14000e9f2:	add    BYTE PTR [rax+0x1],al
   14000e9f5:	add    BYTE PTR [rax],al
   14000e9f7:	add    al,dl
   14000e9f9:	xchg   ebx,eax
   14000e9fa:	add    BYTE PTR [rax+0x1],al
   14000e9fd:	add    BYTE PTR [rax],al
   14000e9ff:	add    BYTE PTR [rax+0x4c],ah
   14000ea02:	add    BYTE PTR [rax+0x1],al
   14000ea05:	add    BYTE PTR [rax],al
   14000ea07:	add    BYTE PTR [rax-0x4f],ah
   14000ea0a:	add    BYTE PTR [rax+0x1],al
   14000ea0d:	add    BYTE PTR [rax],al
   14000ea0f:	add    BYTE PTR [rax],al
   14000ea11:	mov    dl,0x0
   14000ea13:	rex add DWORD PTR [rax],eax
   14000ea16:	add    BYTE PTR [rax],al
   14000ea18:	lock jl 0x14000ea1b
   14000ea1b:	rex add DWORD PTR [rax],eax
   14000ea1e:	add    BYTE PTR [rax],al
   14000ea20:	rex
   14000ea21:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000ea25:	add    BYTE PTR [rax],al
   14000ea27:	add    al,ah
   14000ea29:	rex.WXB add BYTE PTR [r8+0x1],al
   14000ea2d:	add    BYTE PTR [rax],al
   14000ea2f:	add    BYTE PTR [rax],dl
   14000ea31:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000ea35:	add    BYTE PTR [rax],al
   14000ea37:	add    BYTE PTR [rax-0x6c],ah
   14000ea3a:	add    BYTE PTR [rax+0x1],al
   14000ea3d:	add    BYTE PTR [rax],al
   14000ea3f:	add    BYTE PTR [rax+0x4d],ah
   14000ea42:	add    BYTE PTR [rax+0x1],al
   14000ea45:	add    BYTE PTR [rax],al
   14000ea47:	add    BYTE PTR [rax+0x4c],al
   14000ea4a:	add    BYTE PTR [rax+0x1],al
   14000ea4d:	add    BYTE PTR [rax],al
   14000ea4f:	add    al,dh
   14000ea51:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000ea55:	add    BYTE PTR [rax],al
   14000ea57:	add    BYTE PTR [rax],al
   14000ea59:	xchg   esi,eax
   14000ea5a:	add    BYTE PTR [rax+0x1],al
   14000ea5d:	add    BYTE PTR [rax],al
   14000ea5f:	add    BYTE PTR [rdi+0x0],dl
   14000ea62:	imul   eax,DWORD PTR [rax],0x64006e
   14000ea68:	outs   dx,DWORD PTR ds:[rsi]
   14000ea69:	add    BYTE PTR [rdi+0x0],dh
   14000ea6c:	jae    0x14000ea6e
   14000ea6e:	add    BYTE PTR cs:[rsi+0x0],al
   14000ea72:	outs   dx,DWORD PTR ds:[rsi]
   14000ea73:	add    BYTE PTR [rbp+0x0],dh
   14000ea76:	outs   dx,BYTE PTR ds:[rsi]
   14000ea77:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000ea7b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ea7f:	add    BYTE PTR [rdi+0x0],ch
   14000ea82:	outs   dx,BYTE PTR ds:[rsi]
   14000ea83:	add    BYTE PTR [rsi],ch
   14000ea85:	add    BYTE PTR [rbx+0x0],al
   14000ea88:	outs   dx,DWORD PTR ds:[rsi]
   14000ea89:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000ea8d:	add    BYTE PTR [rbp+0x0],ah
   14000ea90:	movsxd eax,DWORD PTR [rax]
   14000ea92:	je     0x14000ea94
   14000ea94:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ea9a:	jae    0x14000ea9c
   14000ea9c:	add    BYTE PTR cs:[rcx+0x0],cl
   14000eaa0:	rex.WXB add BYTE PTR [r13+0x0],spl
   14000eaa4:	jns    0x14000eaa6
   14000eaa6:	push   rsi
   14000eaa7:	add    BYTE PTR [rcx+0x0],ah
   14000eaaa:	ins    BYTE PTR es:[rdi],dx
   14000eaab:	add    BYTE PTR [rbp+0x0],dh
   14000eaae:	add    BYTE PTR gs:[rax+0x0],dl
   14000eab2:	(bad)  
   14000eab3:	add    BYTE PTR [rcx+0x0],ch
   14000eab6:	jb     0x14000eab8
   14000eab8:	(bad)  
   14000eab9:	add    BYTE PTR [rdx],dh
   14000eabb:	add    BYTE PTR [rax+rax*1],bh
   14000eabe:	push   rbx
   14000eabf:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000eac3:	add    BYTE PTR [rcx+0x0],ch
   14000eac6:	outs   dx,BYTE PTR ds:[rsi]
   14000eac7:	add    BYTE PTR [rdi+0x0],ah
   14000eaca:	sub    al,0x0
   14000eacc:	and    BYTE PTR [rax],al
   14000eace:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   14000ead2:	push   0x0
   14000ead4:	add    BYTE PTR gs:[rbx+0x0],ah
   14000ead8:	je     0x14000eada
   14000eada:	add    BYTE PTR ds:[rax],al
   14000eadd:	add    BYTE PTR [rax],al
   14000eadf:	add    BYTE PTR [rdi+0x0],dl
   14000eae2:	imul   eax,DWORD PTR [rax],0x64006e
   14000eae8:	outs   dx,DWORD PTR ds:[rsi]
   14000eae9:	add    BYTE PTR [rdi+0x0],dh
   14000eaec:	jae    0x14000eaee
   14000eaee:	add    BYTE PTR cs:[rsi+0x0],al
   14000eaf2:	outs   dx,DWORD PTR ds:[rsi]
   14000eaf3:	add    BYTE PTR [rbp+0x0],dh
   14000eaf6:	outs   dx,BYTE PTR ds:[rsi]
   14000eaf7:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000eafb:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000eaff:	add    BYTE PTR [rdi+0x0],ch
   14000eb02:	outs   dx,BYTE PTR ds:[rsi]
   14000eb03:	add    BYTE PTR [rsi],ch
   14000eb05:	add    BYTE PTR [rbx+0x0],al
   14000eb08:	outs   dx,DWORD PTR ds:[rsi]
   14000eb09:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000eb0d:	add    BYTE PTR [rbp+0x0],ah
   14000eb10:	movsxd eax,DWORD PTR [rax]
   14000eb12:	je     0x14000eb14
   14000eb14:	imul   eax,DWORD PTR [rax],0x6e006f
   14000eb1a:	jae    0x14000eb1c
   14000eb1c:	add    BYTE PTR cs:[rcx+0x0],cl
   14000eb20:	rex.WB add BYTE PTR [r8+rax*1+0x65],sil
   14000eb25:	add    BYTE PTR [rdx+0x0],dh
   14000eb28:	(bad)  
   14000eb29:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000eb2d:	add    BYTE PTR [rdx+0x0],dh
   14000eb30:	(bad)  
   14000eb31:	add    BYTE PTR [rcx],dh
   14000eb33:	add    BYTE PTR [rax+rax*1],bh
   14000eb36:	push   rdi
   14000eb37:	add    BYTE PTR [rcx+0x0],ch
   14000eb3a:	outs   dx,BYTE PTR ds:[rsi]
   14000eb3b:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000eb3f:	add    BYTE PTR [rdi+0x0],dh
   14000eb42:	jae    0x14000eb44
   14000eb44:	add    BYTE PTR cs:[rsi+0x0],al
   14000eb48:	outs   dx,DWORD PTR ds:[rsi]
   14000eb49:	add    BYTE PTR [rbp+0x0],dh
   14000eb4c:	outs   dx,BYTE PTR ds:[rsi]
   14000eb4d:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000eb51:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000eb55:	add    BYTE PTR [rdi+0x0],ch
   14000eb58:	outs   dx,BYTE PTR ds:[rsi]
   14000eb59:	add    BYTE PTR [rsi],ch
   14000eb5b:	add    BYTE PTR [rbx+0x0],al
   14000eb5e:	outs   dx,DWORD PTR ds:[rsi]
   14000eb5f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000eb63:	add    BYTE PTR [rbp+0x0],ah
   14000eb66:	movsxd eax,DWORD PTR [rax]
   14000eb68:	je     0x14000eb6a
   14000eb6a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000eb70:	jae    0x14000eb72
   14000eb72:	add    BYTE PTR cs:[rcx+0x0],cl
   14000eb76:	rex.WXB add BYTE PTR [r13+0x0],spl
   14000eb7a:	jns    0x14000eb7c
   14000eb7c:	push   rsi
   14000eb7d:	add    BYTE PTR [rcx+0x0],ah
   14000eb80:	ins    BYTE PTR es:[rdi],dx
   14000eb81:	add    BYTE PTR [rbp+0x0],dh
   14000eb84:	add    BYTE PTR gs:[rax+0x0],dl
   14000eb88:	(bad)  
   14000eb89:	add    BYTE PTR [rcx+0x0],ch
   14000eb8c:	jb     0x14000eb8e
   14000eb8e:	(bad)  
   14000eb8f:	add    BYTE PTR [rdx],dh
   14000eb91:	add    BYTE PTR [rax+rax*1],bh
   14000eb94:	push   rbx
   14000eb95:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000eb99:	add    BYTE PTR [rcx+0x0],ch
   14000eb9c:	outs   dx,BYTE PTR ds:[rsi]
   14000eb9d:	add    BYTE PTR [rdi+0x0],ah
   14000eba0:	sub    al,0x0
   14000eba2:	and    BYTE PTR [rax],al
   14000eba4:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   14000eba8:	push   0x0
   14000ebaa:	add    BYTE PTR gs:[rbx+0x0],ah
   14000ebae:	je     0x14000ebb0
   14000ebb0:	add    BYTE PTR ds:[rsi],bh
	...
   14000ebbf:	add    BYTE PTR [rdi+0x0],dl
   14000ebc2:	imul   eax,DWORD PTR [rax],0x64006e
   14000ebc8:	outs   dx,DWORD PTR ds:[rsi]
   14000ebc9:	add    BYTE PTR [rdi+0x0],dh
   14000ebcc:	jae    0x14000ebce
   14000ebce:	add    BYTE PTR cs:[rsi+0x0],al
   14000ebd2:	outs   dx,DWORD PTR ds:[rsi]
   14000ebd3:	add    BYTE PTR [rbp+0x0],dh
   14000ebd6:	outs   dx,BYTE PTR ds:[rsi]
   14000ebd7:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000ebdb:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ebdf:	add    BYTE PTR [rdi+0x0],ch
   14000ebe2:	outs   dx,BYTE PTR ds:[rsi]
   14000ebe3:	add    BYTE PTR [rsi],ch
   14000ebe5:	add    BYTE PTR [rbx+0x0],al
   14000ebe8:	outs   dx,DWORD PTR ds:[rsi]
   14000ebe9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000ebed:	add    BYTE PTR [rbp+0x0],ah
   14000ebf0:	movsxd eax,DWORD PTR [rax]
   14000ebf2:	je     0x14000ebf4
   14000ebf4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ebfa:	jae    0x14000ebfc
   14000ebfc:	add    BYTE PTR cs:[rcx+0x0],cl
   14000ec00:	rex.WB add BYTE PTR [r8+rax*1+0x65],sil
   14000ec05:	add    BYTE PTR [rdx+0x0],dh
   14000ec08:	(bad)  
   14000ec09:	add    BYTE PTR [rdx+0x0],ah
   14000ec0c:	ins    BYTE PTR es:[rdi],dx
   14000ec0d:	add    BYTE PTR [rbp+0x0],ah
   14000ec10:	(bad)  
   14000ec11:	add    BYTE PTR [rcx],dh
   14000ec13:	add    BYTE PTR [rax+rax*1],bh
   14000ec16:	push   rdi
   14000ec17:	add    BYTE PTR [rcx+0x0],ch
   14000ec1a:	outs   dx,BYTE PTR ds:[rsi]
   14000ec1b:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000ec1f:	add    BYTE PTR [rdi+0x0],dh
   14000ec22:	jae    0x14000ec24
   14000ec24:	add    BYTE PTR cs:[rsi+0x0],al
   14000ec28:	outs   dx,DWORD PTR ds:[rsi]
   14000ec29:	add    BYTE PTR [rbp+0x0],dh
   14000ec2c:	outs   dx,BYTE PTR ds:[rsi]
   14000ec2d:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000ec31:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ec35:	add    BYTE PTR [rdi+0x0],ch
   14000ec38:	outs   dx,BYTE PTR ds:[rsi]
   14000ec39:	add    BYTE PTR [rsi],ch
   14000ec3b:	add    BYTE PTR [rbx+0x0],al
   14000ec3e:	outs   dx,DWORD PTR ds:[rsi]
   14000ec3f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000ec43:	add    BYTE PTR [rbp+0x0],ah
   14000ec46:	movsxd eax,DWORD PTR [rax]
   14000ec48:	je     0x14000ec4a
   14000ec4a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ec50:	jae    0x14000ec52
   14000ec52:	add    BYTE PTR cs:[rcx+0x0],cl
   14000ec56:	rex.WXB add BYTE PTR [r13+0x0],spl
   14000ec5a:	jns    0x14000ec5c
   14000ec5c:	push   rsi
   14000ec5d:	add    BYTE PTR [rcx+0x0],ah
   14000ec60:	ins    BYTE PTR es:[rdi],dx
   14000ec61:	add    BYTE PTR [rbp+0x0],dh
   14000ec64:	add    BYTE PTR gs:[rax+0x0],dl
   14000ec68:	(bad)  
   14000ec69:	add    BYTE PTR [rcx+0x0],ch
   14000ec6c:	jb     0x14000ec6e
   14000ec6e:	(bad)  
   14000ec6f:	add    BYTE PTR [rdx],dh
   14000ec71:	add    BYTE PTR [rax+rax*1],bh
   14000ec74:	push   rbx
   14000ec75:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000ec79:	add    BYTE PTR [rcx+0x0],ch
   14000ec7c:	outs   dx,BYTE PTR ds:[rsi]
   14000ec7d:	add    BYTE PTR [rdi+0x0],ah
   14000ec80:	sub    al,0x0
   14000ec82:	and    BYTE PTR [rax],al
   14000ec84:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   14000ec88:	push   0x0
   14000ec8a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000ec8e:	je     0x14000ec90
   14000ec90:	add    BYTE PTR ds:[rsi],bh
	...
   14000ec9f:	add    BYTE PTR [rdi+0x0],dl
   14000eca2:	imul   eax,DWORD PTR [rax],0x64006e
   14000eca8:	outs   dx,DWORD PTR ds:[rsi]
   14000eca9:	add    BYTE PTR [rdi+0x0],dh
   14000ecac:	jae    0x14000ecae
   14000ecae:	add    BYTE PTR cs:[rsi+0x0],al
   14000ecb2:	outs   dx,DWORD PTR ds:[rsi]
   14000ecb3:	add    BYTE PTR [rbp+0x0],dh
   14000ecb6:	outs   dx,BYTE PTR ds:[rsi]
   14000ecb7:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000ecbb:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ecbf:	add    BYTE PTR [rdi+0x0],ch
   14000ecc2:	outs   dx,BYTE PTR ds:[rsi]
   14000ecc3:	add    BYTE PTR [rsi],ch
   14000ecc5:	add    BYTE PTR [rbx+0x0],al
   14000ecc8:	outs   dx,DWORD PTR ds:[rsi]
   14000ecc9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000eccd:	add    BYTE PTR [rbp+0x0],ah
   14000ecd0:	movsxd eax,DWORD PTR [rax]
   14000ecd2:	je     0x14000ecd4
   14000ecd4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ecda:	jae    0x14000ecdc
   14000ecdc:	add    BYTE PTR cs:[rcx+0x0],cl
   14000ece0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000ece4:	jo     0x14000ece6
   14000ece6:	push   rsi
   14000ece7:	add    BYTE PTR [rcx+0x0],ch
   14000ecea:	add    BYTE PTR gs:[rdi+0x0],dh
   14000ecee:	(bad)  
   14000ecef:	add    BYTE PTR [rdx],dh
   14000ecf1:	add    BYTE PTR [rax+rax*1],bh
   14000ecf4:	push   rbx
   14000ecf5:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000ecf9:	add    BYTE PTR [rcx+0x0],ch
   14000ecfc:	outs   dx,BYTE PTR ds:[rsi]
   14000ecfd:	add    BYTE PTR [rdi+0x0],ah
   14000ed00:	sub    al,0x0
   14000ed02:	and    BYTE PTR [rax],al
   14000ed04:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   14000ed08:	push   0x0
   14000ed0a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000ed0e:	je     0x14000ed10
   14000ed10:	add    BYTE PTR ds:[rax],al
   14000ed13:	add    BYTE PTR [rax],al
   14000ed15:	add    BYTE PTR [rax],al
   14000ed17:	add    BYTE PTR [rsi+0x0],cl
   14000ed1a:	push   rbp
   14000ed1b:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   14000ed27:	add    BYTE PTR [rip+0x4120000],dl        # 0x14412ed2d
   14000ed2d:	add    DWORD PTR [rax+rax*1],ecx
   14000ed30:	add    BYTE PTR [rax],al
   14000ed32:	add    BYTE PTR [rax],al
   14000ed34:	add    BYTE PTR [rax],al
   14000ed36:	add    BYTE PTR [rax],ah
   14000ed38:	sub    dl,BYTE PTR [rax+0x78]
   14000ed3b:	mov    ebx,0x54faf79d
   14000ed40:	xchg   edx,eax
   14000ed41:	leave  
   14000ed42:	nop
   14000ed43:	(bad)
   14000ed46:	fistp  QWORD PTR [rsi+0x16]
   14000ed49:	add    BYTE PTR [rax],al
   14000ed4b:	adc    al,BYTE PTR [rdx+rax*1]
   14000ed4e:	or     al,0x0
   14000ed50:	add    BYTE PTR [rax],al
   14000ed52:	add    BYTE PTR [rax],al
   14000ed54:	add    BYTE PTR [rax],al
   14000ed56:	add    BYTE PTR [rax],ah
   14000ed58:	xor    bh,dl
   14000ed5a:	mov    ch,0x5d
   14000ed5c:	jl     0x14000edce
   14000ed5e:	rex.WB pop r8
   14000ed60:	movabs al,ds:0x37e8109debc8916b
   14000ed69:	add    BYTE PTR [rax],al
   14000ed6b:	add    BYTE PTR [rax],al
   14000ed6d:	add    BYTE PTR [rax],al
   14000ed6f:	add    al,al
   14000ed71:	add    BYTE PTR [rax],al
   14000ed73:	add    BYTE PTR [rax],al
   14000ed75:	add    BYTE PTR [rax],al
   14000ed77:	rex.RX cmp BYTE PTR [rax],r8b
   14000ed7a:	add    BYTE PTR [rax],al
   14000ed7c:	add    BYTE PTR [rax],al
   14000ed7e:	add    BYTE PTR [rax],al
   14000ed80:	rol    BYTE PTR [rax],0x0
   14000ed83:	add    BYTE PTR [rax],al
   14000ed85:	add    BYTE PTR [rax],al
   14000ed87:	rex.RX (bad) 
   14000ed89:	push   rbp
   14000ed8a:	xor    ecx,DWORD PTR [rcx]
   14000ed8c:	imul   ebp,DWORD PTR [rsi+riz*1+0x5a],0xffffff93
   14000ed91:	xchg   rdi,rax
   14000ed93:	mov    bh,0x81
   14000ed95:	adc    ebp,DWORD PTR [rbx]
   14000ed97:	and    BYTE PTR [rdx+0x53],dl
   14000ed9a:	rex.R push rbx
   14000ed9c:	loopne 0x14000ed7a
   14000ed9e:	and    al,BYTE PTR [rdi-0x4e]
   14000eda1:	xlat   BYTE PTR ds:[rbx]
   14000eda2:	or     cl,BYTE PTR [rdx-0x4c]
   14000eda5:	enter  0x45cf,0xc3
   14000eda9:	add    cl,BYTE PTR [rdx]
   14000edab:	add    DWORD PTR [r8],r8d
   14000edae:	add    BYTE PTR [rax],al
   14000edb0:	push   rdx
   14000edb1:	jne    0x14000ee21
   14000edb3:	je     0x14000ee1e
   14000edb5:	ins    DWORD PTR es:[rdi],dx
   14000edb6:	gs rex.X jb 0x14000ee29
   14000edba:	imul   esp,DWORD PTR [rbp+0x72],0x2e
   14000edbe:	jo     0x14000ee24
   14000edc0:	(bad)  
	...
   14000edd9:	push   rbp
   14000edda:	rex.RXB push r8
   14000eddc:	add    BYTE PTR [rax],dl
   14000edde:	add    BYTE PTR [rax],al
   14000ede0:	stc    
   14000ede1:	add    BYTE PTR [rax],al
   14000ede3:	add    BYTE PTR [rsi],ch
   14000ede5:	je     0x14000ee4c
   14000ede7:	js     0x14000ee5d
   14000ede9:	and    al,0x64
   14000edeb:	imul   eax,DWORD PTR [rax],0x0
   14000edf1:	adc    DWORD PTR [rax],eax
   14000edf3:	add    al,al
   14000edf5:	and    eax,0x742e0000
   14000edfa:	gs js  0x14000ee71
   14000edfd:	and    al,0x6c
   14000edff:	jo     0x14000ee31
   14000ee01:	xor    DWORD PTR [rdx+0x75],esi
   14000ee04:	outs   dx,BYTE PTR ds:[rsi]
   14000ee05:	je     0x14000ee70
   14000ee07:	ins    DWORD PTR es:[rdi],dx
   14000ee08:	(bad)
   14000ee0e:	jb     0x14000ee3e
   14000ee10:	gs js  0x14000ee78
   14000ee13:	and    DWORD PTR [rdx],esi
   14000ee15:	xor    BYTE PTR [rdi+0x70],bl
   14000ee18:	jb     0x14000ee83
   14000ee1a:	(bad)  
   14000ee1b:	add    al,al
   14000ee1d:	add    BYTE PTR ss:[rax],al
   14000ee20:	and    al,0x8
   14000ee22:	add    BYTE PTR [rax],al
   14000ee24:	cs je  0x14000ee8c
   14000ee27:	js     0x14000ee9d
   14000ee29:	and    al,0x6c
   14000ee2b:	jo     0x14000ee5d
   14000ee2d:	xor    esi,DWORD PTR [rdx+0x75]
   14000ee30:	outs   dx,BYTE PTR ds:[rsi]
   14000ee31:	je     0x14000ee9c
   14000ee33:	ins    DWORD PTR es:[rdi],dx
   14000ee34:	(bad)
   14000ee3a:	jb     0x14000ee6a
   14000ee3c:	gs js  0x14000eea4
   14000ee3f:	and    DWORD PTR [rip+0x6f635f30],esi        # 0x1af644d75
   14000ee45:	ins    BYTE PTR es:[rdi],dx
   14000ee46:	fs (bad) 
   14000ee48:	outs   dx,DWORD PTR ds:[rsi]
   14000ee49:	outs   dx,DWORD PTR ds:[rsi]
   14000ee4a:	je     0x14000ee4c
   14000ee4c:	lock add BYTE PTR ds:[rax],al
   14000ee50:	ins    BYTE PTR es:[rdi],dx
   14000ee51:	or     al,0x0
   14000ee53:	add    BYTE PTR [rsi],ch
   14000ee55:	je     0x14000eebc
   14000ee57:	js     0x14000eecd
   14000ee59:	and    al,0x6d
   14000ee5b:	outs   dx,BYTE PTR ds:[rsi]
   14000ee5c:	add    BYTE PTR [rax],al
   14000ee5e:	add    BYTE PTR [rax],al
   14000ee60:	(bad)  
   14000ee61:	rex.WXB add BYTE PTR [r8],al
   14000ee64:	adc    al,BYTE PTR [rax]
   14000ee66:	add    BYTE PTR [rax],al
   14000ee68:	cs je  0x14000eed0
   14000ee6b:	js     0x14000eee1
   14000ee6d:	and    al,0x6d
   14000ee6f:	outs   dx,BYTE PTR ds:[rsi]
   14000ee70:	and    al,0x30
   14000ee72:	xor    BYTE PTR [rax],al
   14000ee74:	je     0x14000eec1
   14000ee76:	add    BYTE PTR [rax],al
   14000ee78:	fadd   DWORD PTR [rdx]
   14000ee7a:	add    BYTE PTR [rax],al
   14000ee7c:	cs je  0x14000eee4
   14000ee7f:	js     0x14000eef5
   14000ee81:	and    al,0x6e
   14000ee83:	jo     0x14000ee85
   14000ee85:	add    BYTE PTR [rax],al
   14000ee87:	add    BYTE PTR [rax+0x4e],dl
   14000ee8a:	add    BYTE PTR [rax],al
   14000ee8c:	xchg   esi,eax
   14000ee8d:	add    BYTE PTR [rax],al
   14000ee8f:	add    BYTE PTR [rsi],ch
   14000ee91:	je     0x14000eef8
   14000ee93:	js     0x14000ef09
   14000ee95:	and    al,0x78
   14000ee97:	add    al,ch
   14000ee99:	rex.WRX add BYTE PTR [rax],r8b
   14000ee9c:	popf   
   14000ee9d:	add    BYTE PTR [rax],al
   14000ee9f:	add    BYTE PTR [rsi],ch
   14000eea1:	je     0x14000ef08
   14000eea3:	js     0x14000ef19
   14000eea5:	and    al,0x79
   14000eea7:	add    BYTE PTR fs:[rax],al
   14000eeaa:	add    BYTE PTR [rax],al
   14000eeac:	xchg   BYTE PTR [rdi+0x0],cl
   14000eeaf:	add    ah,bl
   14000eeb1:	adc    al,BYTE PTR [rax]
   14000eeb3:	add    BYTE PTR [rsi],ch
   14000eeb5:	je     0x14000ef1c
   14000eeb7:	js     0x14000ef2d
   14000eeb9:	and    al,0x7a
   14000eebb:	jns    0x14000eebd
   14000eebd:	add    BYTE PTR [rax],al
   14000eebf:	add    BYTE PTR [rdx+riz*2+0x0],ah
   14000eec3:	add    BYTE PTR [rbx+0x51],al
   14000eec6:	add    BYTE PTR [rax],al
   14000eec8:	cs je  0x14000ef30
   14000eecb:	js     0x14000ef41
   14000eecd:	and    al,0x7a
   14000eecf:	jp     0x14000eed1
   14000eed1:	add    BYTE PTR [rax],al
   14000eed3:	add    BYTE PTR [rax],al
   14000eed5:	rol    BYTE PTR [rax],0x0
   14000eed8:	add    al,0x0
   14000eeda:	add    BYTE PTR [rax],al
   14000eedc:	imul   ebp,DWORD PTR cs:[rbp+0x72],0x766973
   14000eee4:	add    al,dl
   14000eee6:	add    BYTE PTR [rax],al
   14000eee8:	mov    eax,0x2e000004
   14000eeed:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   14000eef5:	add    BYTE PTR [rax],al
   14000eef7:	add    BYTE PTR [rax+0x100000d4],bh
   14000eefd:	add    BYTE PTR [rax],al
   14000eeff:	add    BYTE PTR [rsi],ch
   14000ef01:	xor    BYTE PTR [rax],dh
   14000ef03:	movsxd esp,DWORD PTR [rsi+0x67]
   14000ef06:	add    BYTE PTR [rax],al
   14000ef08:	enter  0xd4,0x0
   14000ef0c:	or     BYTE PTR [rax],al
   14000ef0e:	add    BYTE PTR [rax],al
   14000ef10:	cs rex.XB push r10
   14000ef13:	push   rsp
   14000ef14:	and    al,0x58
   14000ef16:	rex.XB
   14000ef17:	add    BYTE PTR [r8],al
   14000ef1a:	add    BYTE PTR [rax],al
   14000ef1c:	rcl    ah,1
   14000ef1e:	add    BYTE PTR [rax],al
   14000ef20:	or     BYTE PTR [rax],al
   14000ef22:	add    BYTE PTR [rax],al
   14000ef24:	cs rex.XB push r10
   14000ef27:	push   rsp
   14000ef28:	and    al,0x58
   14000ef2a:	rex.XB
   14000ef2b:	rex.B
   14000ef2c:	add    BYTE PTR [r8],al
   14000ef2f:	add    al,bl
   14000ef31:	(bad)  
   14000ef32:	add    BYTE PTR [rax],al
   14000ef34:	push   0x2e000000
   14000ef39:	rex.XB push r10
   14000ef3b:	push   rsp
   14000ef3c:	and    al,0x58
   14000ef3e:	rex.XB push r13
   14000ef40:	add    BYTE PTR [rax],al
   14000ef42:	add    BYTE PTR [rax],al
   14000ef44:	rex (bad) 
   14000ef46:	add    BYTE PTR [rax],al
   14000ef48:	or     BYTE PTR [rax],al
   14000ef4a:	add    BYTE PTR [rax],al
   14000ef4c:	cs rex.XB push r10
   14000ef4f:	push   rsp
   14000ef50:	and    al,0x58
   14000ef52:	rex.XB pop r10
   14000ef54:	add    BYTE PTR [rax],al
   14000ef56:	add    BYTE PTR [rax],al
   14000ef58:	rex.W (bad) 
   14000ef5a:	add    BYTE PTR [rax],al
   14000ef5c:	or     BYTE PTR [rax],al
   14000ef5e:	add    BYTE PTR [rax],al
   14000ef60:	cs rex.XB push r10
   14000ef63:	push   rsp
   14000ef64:	and    al,0x58
   14000ef66:	rex.WB
   14000ef67:	add    BYTE PTR [r8],al
   14000ef6a:	add    BYTE PTR [rax],al
   14000ef6c:	push   rax
   14000ef6d:	(bad)  
   14000ef6e:	add    BYTE PTR [rax],al
   14000ef70:	or     BYTE PTR [rax],al
   14000ef72:	add    BYTE PTR [rax],al
   14000ef74:	cs rex.XB push r10
   14000ef77:	push   rsp
   14000ef78:	and    al,0x58
   14000ef7a:	rex.WB
   14000ef7b:	rex.B
   14000ef7c:	add    BYTE PTR [r8],al
   14000ef7f:	add    BYTE PTR [rax-0x2b],bl
   14000ef82:	add    BYTE PTR [rax],al
   14000ef84:	or     BYTE PTR [rax],al
   14000ef86:	add    BYTE PTR [rax],al
   14000ef88:	cs rex.XB push r10
   14000ef8b:	push   rsp
   14000ef8c:	and    al,0x58
   14000ef8e:	rex.WB pop r9
   14000ef90:	add    BYTE PTR [rax],al
   14000ef92:	add    BYTE PTR [rax],al
   14000ef94:	(bad)  
   14000ef95:	(bad)  
   14000ef96:	add    BYTE PTR [rax],al
   14000ef98:	or     BYTE PTR [rax],al
   14000ef9a:	add    BYTE PTR [rax],al
   14000ef9c:	cs rex.XB push r10
   14000ef9f:	push   rsp
   14000efa0:	and    al,0x58
   14000efa2:	rex.WB pop r10
   14000efa4:	add    BYTE PTR [rax],al
   14000efa6:	add    BYTE PTR [rax],al
   14000efa8:	push   0xffffffffdc0000d5
   14000efad:	add    al,BYTE PTR [rax]
   14000efaf:	add    BYTE PTR [rsi],ch
   14000efb1:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000efb9:	add    BYTE PTR [rax],al
   14000efbb:	add    BYTE PTR [rax-0x28],dl
   14000efbe:	add    BYTE PTR [rax],al
   14000efc0:	(bad)  
   14000efc1:	or     eax,DWORD PTR [rax]
   14000efc3:	add    BYTE PTR [rsi],ch
   14000efc5:	jb     0x14000f02b
   14000efc7:	(bad)  
   14000efc8:	je     0x14000f02b
   14000efca:	add    BYTE PTR [rax],al
   14000efcc:	mov    al,0xe3
   14000efce:	add    BYTE PTR [rax],al
   14000efd0:	call   0x16e00efde
   14000efd5:	jb     0x14000f03b
   14000efd7:	(bad)  
   14000efd8:	je     0x14000f03b
   14000efda:	and    al,0x7a
   14000efdc:	jp     0x14000efde
   14000efde:	add    BYTE PTR [rax],al
   14000efe0:	cwde   
   14000efe1:	in     eax,dx
   14000efe2:	add    BYTE PTR [rax],al
   14000efe4:	lods   al,BYTE PTR ds:[rsi]
   14000efe5:	add    eax,DWORD PTR [rax]
   14000efe7:	add    BYTE PTR [rsi],ch
   14000efe9:	jb     0x14000f04f
   14000efeb:	(bad)  
   14000efec:	je     0x14000f04f
   14000efee:	and    al,0x7a
   14000eff0:	jp     0x14000f06c
   14000eff2:	fs (bad) 
   14000eff4:	add    BYTE PTR [eax],al
   14000eff7:	add    BYTE PTR [rax-0xf],cl
   14000effa:	add    BYTE PTR [rax],al
   14000effc:	mov    eax,0x2e00000f
   14000f001:	js     0x14000f067
   14000f003:	(bad)  
   14000f004:	je     0x14000f067
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	add    BYTE PTR [rcx],al
   14000f00a:	add    DWORD PTR [rax],eax
   14000f00c:	int3   
   14000f00d:	add    DWORD PTR [rax],eax
   14000f00f:	add    BYTE PTR [rsi],ch
   14000f011:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000f019:	add    BYTE PTR [rax],al
   14000f01b:	add    ah,cl
   14000f01d:	add    al,BYTE PTR [rcx]
   14000f01f:	add    BYTE PTR [rax+rax*1],dl
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000f02d:	add    BYTE PTR [rax],al
   14000f02f:	add    al,ah
   14000f031:	add    al,BYTE PTR [rcx]
   14000f033:	add    BYTE PTR [rax+0x2e000004],bh
   14000f039:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000f041:	add    BYTE PTR [rax],al
   14000f043:	add    BYTE PTR [rax-0x51fffef9],bl
   14000f049:	or     al,0x0
   14000f04b:	add    BYTE PTR [rsi],ch
   14000f04d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000f055:	add    BYTE PTR [rax],al
   14000f057:	add    BYTE PTR [rax],al
   14000f059:	and    BYTE PTR [rcx],al
   14000f05b:	add    BYTE PTR [rax],ah
   14000f05d:	add    BYTE PTR [rax],al
   14000f05f:	add    BYTE PTR [rsi],ch
   14000f061:	fs (bad) 
   14000f063:	je     0x14000f0c6
   14000f065:	add    BYTE PTR [rax],al
   14000f067:	add    BYTE PTR [rax],ah
   14000f069:	and    BYTE PTR [rcx],al
   14000f06b:	add    BYTE PTR [rax+rax*1],al
   14000f06e:	add    BYTE PTR [rax],al
   14000f070:	cs fs (bad) 
   14000f073:	je     0x14000f0d6
   14000f075:	and    al,0x30
   14000f077:	xor    eax,DWORD PTR [rax]
   14000f079:	add    BYTE PTR [rax],al
   14000f07b:	add    BYTE PTR [rax],dh
   14000f07d:	and    BYTE PTR [rcx],al
   14000f07f:	add    BYTE PTR [rax+0x5],ah
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	cs fs (bad) 
   14000f087:	je     0x14000f0ea
   14000f089:	and    al,0x64
   14000f08b:	imul   esi,DWORD PTR [rax],0x30
   14000f08e:	add    BYTE PTR [rax],al
   14000f090:	nop
   14000f091:	and    eax,0x80001
   14000f096:	add    BYTE PTR [rax],al
   14000f098:	cs fs (bad) 
   14000f09b:	je     0x14000f0fe
   14000f09d:	and    al,0x64
   14000f09f:	imul   esi,DWORD PTR [rax],0x31
   14000f0a2:	add    BYTE PTR [rax],al
   14000f0a4:	movabs al,ds:0x2e000005e8000125
   14000f0ad:	(bad)  
   14000f0af:	jae    0x14000f0b1
   14000f0b1:	add    BYTE PTR [rax],al
   14000f0b3:	add    BYTE PTR [rax+0x2000012b],cl
   14000f0b9:	add    BYTE PTR [rax],al
   14000f0bb:	add    BYTE PTR [rsi],ch
   14000f0bd:	(bad)  
   14000f0bf:	jae    0x14000f0e5
   14000f0c1:	xor    BYTE PTR [rcx],dh
   14000f0c3:	add    BYTE PTR [rax+0x6000012b],ch
   14000f0c9:	add    BYTE PTR [rax],al
   14000f0cb:	add    BYTE PTR [rsi],ch
   14000f0cd:	(bad)  
   14000f0cf:	jae    0x14000f0f5
   14000f0d1:	xor    BYTE PTR [rbx],dh
   14000f0d3:	add    BYTE PTR [rax],dl
   14000f0d5:	sub    al,0x1
   14000f0d7:	add    BYTE PTR [rax],ch
   14000f0d9:	add    DWORD PTR [rax],eax
   14000f0db:	add    BYTE PTR [rsi],ch
   14000f0dd:	(bad)  
   14000f0df:	jae    0x14000f105
   14000f0e1:	imul   esi,DWORD PTR fs:[rax],0x30
   14000f0e5:	add    BYTE PTR [rax],al
   14000f0e7:	add    BYTE PTR [rax],bh
   14000f0e9:	sub    eax,0x180001
   14000f0ee:	add    BYTE PTR [rax],al
   14000f0f0:	cs (bad) 
   14000f0f3:	jae    0x14000f119
   14000f0f5:	imul   esi,DWORD PTR fs:[rax],0x31
   14000f0f9:	add    BYTE PTR [rax],al
   14000f0fb:	add    BYTE PTR [rax-0x7ffffed3],al
   14000f101:	add    BYTE PTR [rax],al
   14000f103:	add    BYTE PTR [rsi],ch
   14000f105:	(bad)  
   14000f107:	jae    0x14000f12d
   14000f109:	jp     0x14000f185
   14000f10b:	add    BYTE PTR [rax],al
   14000f10d:	xor    BYTE PTR [rcx],al
   14000f10f:	add    al,ch
   14000f111:	(bad)  
   14000f112:	add    BYTE PTR [rax],al
   14000f114:	cs jo  0x14000f17b
   14000f117:	(bad)  
   14000f118:	je     0x14000f17b
   14000f11a:	add    BYTE PTR [rax],al
   14000f11c:	add    BYTE PTR [rax+0x1],al
   14000f11f:	add    BYTE PTR [rax+0x2e000000],ah
   14000f125:	jb     0x14000f19a
   14000f127:	jb     0x14000f18c
   14000f129:	and    al,0x30
   14000f12b:	xor    DWORD PTR [rax],eax
   14000f12d:	add    BYTE PTR [rax],al
   14000f12f:	add    BYTE PTR [rax-0x3ffffec0],ah
   14000f135:	(bad)  
   14000f136:	add    BYTE PTR [rax],al
   14000f138:	cs jb  0x14000f1ae
   14000f13b:	jb     0x14000f1a0
   14000f13d:	and    al,0x30
   14000f13f:	xor    al,BYTE PTR [rax]
   14000f141:	add    BYTE PTR [rax],al
   14000f143:	add    BYTE PTR [rax],al
   14000f145:	add    BYTE PTR [rax],al
   14000f147:	add    BYTE PTR [rcx],al
   14000f149:	(bad)  
   14000f14a:	add    al,BYTE PTR [rax]
   14000f14c:	(bad)  
   14000f14d:	xor    al,BYTE PTR [rdx]
   14000f14f:	xor    BYTE PTR [rcx],al
   14000f151:	or     al,BYTE PTR [rdx]
   14000f153:	add    BYTE PTR [rdx],cl
   14000f155:	xor    al,BYTE PTR [rsi]
   14000f157:	xor    BYTE PTR [rcx],bl
   14000f159:	sub    al,0x9
   14000f15b:	add    BYTE PTR [rbx],bl
   14000f15d:	add    DWORD PTR [rdx+0x0],edx
   14000f160:	or     al,0xf0
   14000f162:	or     ah,al
   14000f164:	or     al,dl
   14000f166:	(bad)  
   14000f167:	rol    BYTE PTR [rax+rsi*2],0x3
   14000f16b:	(bad)  
   14000f16c:	add    dl,BYTE PTR [rax+0x0]
   14000f16f:	add    BYTE PTR [rax-0x7fffffb6],dh
   14000f175:	add    al,BYTE PTR [rax]
   14000f177:	add    BYTE PTR [rcx],ah
   14000f179:	or     BYTE PTR [rdx],al
   14000f17b:	add    BYTE PTR [rax],cl
   14000f17d:	xor    al,0x5c
   14000f17f:	add    BYTE PTR [rax],dl
   14000f181:	adc    DWORD PTR [rax],eax
   14000f183:	add    BYTE PTR [rbx+0x58000011],bh
   14000f189:	icebp  
   14000f18a:	add    BYTE PTR [rax],al
   14000f18c:	and    DWORD PTR [rax],eax
   14000f18e:	add    BYTE PTR [rax],al
   14000f190:	adc    BYTE PTR [rcx],dl
   14000f192:	add    BYTE PTR [rax],al
   14000f194:	mov    ebx,0x58000011
   14000f199:	icebp  
   14000f19a:	add    BYTE PTR [rax],al
   14000f19c:	and    DWORD PTR [rax],eax
   14000f19e:	add    BYTE PTR [rax],al
   14000f1a0:	adc    BYTE PTR [rcx],dl
   14000f1a2:	add    BYTE PTR [rax],al
   14000f1a4:	mov    ebx,0x58000011
   14000f1a9:	icebp  
   14000f1aa:	add    BYTE PTR [rax],al
   14000f1ac:	and    DWORD PTR [rax],eax
   14000f1ae:	add    al,BYTE PTR [rax]
   14000f1b0:	add    BYTE PTR [rsp+rbx*2],dh
   14000f1b3:	add    BYTE PTR [rsi-0x61ffffb1],al
   14000f1b9:	rex.WRXB add BYTE PTR [r8],r8b
   14000f1bc:	pushf  
   14000f1bd:	icebp  
   14000f1be:	add    BYTE PTR [rax],al
   14000f1c0:	sbb    DWORD PTR [rdx],ebp
   14000f1c2:	or     al,BYTE PTR [rax]
   14000f1c4:	sbb    al,0x1
   14000f1c6:	xor    DWORD PTR [rax],eax
   14000f1c8:	or     eax,0x9e00bf0
   14000f1cd:	rol    BYTE PTR [rdi],1
   14000f1cf:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360f646
   14000f1d6:	add    dl,BYTE PTR [rax-0x50]
   14000f1d9:	rex.WX add BYTE PTR [rax],al
   14000f1dc:	jo     0x14000f1df
   14000f1de:	add    BYTE PTR [rax],al
   14000f1e0:	and    DWORD PTR [rax],eax
   14000f1e2:	add    BYTE PTR [rax],al
   14000f1e4:	rcl    BYTE PTR [rdx],0x0
   14000f1e7:	add    BYTE PTR [rdx-0x3fffffed],bl
   14000f1ed:	icebp  
   14000f1ee:	add    BYTE PTR [rax],al
   14000f1f0:	add    DWORD PTR [rax],edx
   14000f1f2:	(bad)  
   14000f1f3:	add    BYTE PTR [rax],dl
   14000f1f5:	or     DWORD PTR fs:[rax],eax
   14000f1f8:	adc    BYTE PTR [rsi+rax*1],dh
   14000f1fb:	add    BYTE PTR [rax],dl
   14000f1fd:	xor    cl,BYTE PTR [rax+rsi*2]
   14000f200:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41df212
   14000f206:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d010071
   14000f20d:	push   rsp
   14000f20e:	or     eax,0xc341d00
   14000f213:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f10b8b
   14000f219:	loopne 0x14000f230
   14000f21b:	shl    BYTE PTR [rcx],0x0
   14000f21e:	add    BYTE PTR [rax],al
   14000f220:	jl     0x14000f259
   14000f222:	add    BYTE PTR [rax],al
   14000f224:	rex.WX cmp BYTE PTR [rax],al
   14000f227:	add    BYTE PTR [rax],al
   14000f229:	repnz add BYTE PTR [rax],al
   14000f22c:	add    DWORD PTR [rdi],ecx
   14000f22e:	(bad)  
   14000f22f:	add    BYTE PTR [rdi],cl
   14000f231:	fs or  al,0x0
   14000f234:	sysenter 
   14000f236:	or     al,BYTE PTR [rax]
   14000f238:	(bad)  
   14000f23a:	or     esi,DWORD PTR [rax+0x21]
   14000f23d:	add    BYTE PTR [rax],al
   14000f23f:	add    BYTE PTR [rax+0x38],dl
   14000f242:	add    BYTE PTR [rax],al
   14000f244:	fidivr WORD PTR [rax]
   14000f246:	add    BYTE PTR [rax],al
   14000f248:	sub    al,0xf2
   14000f24a:	add    BYTE PTR [rax],al
   14000f24c:	add    DWORD PTR [rdx],ecx
   14000f24e:	add    al,0x0
   14000f250:	or     dh,BYTE PTR [rsi+rcx*1]
   14000f253:	add    BYTE PTR [rdx],cl
   14000f255:	mov    dl,0x6
   14000f257:	jo     0x14000f27a
   14000f259:	add    BYTE PTR [rax],al
   14000f25b:	add    ah,ah
   14000f25d:	cmp    BYTE PTR [rax],al
   14000f25f:	add    BYTE PTR [rax+0x39],bl
   14000f262:	add    BYTE PTR [rax],al
   14000f264:	rex.WR
   14000f265:	repnz add BYTE PTR [rax],al
   14000f268:	add    DWORD PTR [rdx],ecx
   14000f26a:	add    al,0x0
   14000f26c:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   14000f270:	or     dh,BYTE PTR [rdx]
   14000f272:	(bad)  
   14000f273:	jo     0x14000f296
   14000f275:	add    eax,0x34050002
   14000f27a:	(bad)  
   14000f27b:	add    BYTE PTR [rax-0x2cffffed],dh
   14000f281:	adc    eax,DWORD PTR [rax]
   14000f283:	add    BYTE PTR [rax-0xe],ch
   14000f286:	add    BYTE PTR [rax],al
   14000f288:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a405f290
   14000f28e:	(bad)  
   14000f28f:	add    bl,dl
   14000f291:	adc    eax,DWORD PTR [rax]
   14000f293:	add    ch,ch
   14000f295:	adc    eax,DWORD PTR [rax]
   14000f297:	add    BYTE PTR [rdx+rsi*8+0x0],dh
   14000f29b:	add    BYTE PTR [rcx],ah
   14000f29d:	add    BYTE PTR [rax],al
   14000f29f:	add    bl,dl
   14000f2a1:	adc    eax,DWORD PTR [rax]
   14000f2a3:	add    ch,ch
   14000f2a5:	adc    eax,DWORD PTR [rax]
   14000f2a7:	add    BYTE PTR [rdx+rsi*8+0x0],dh
   14000f2ab:	add    BYTE PTR [rcx],ah
   14000f2ad:	add    BYTE PTR [rax],al
   14000f2af:	add    BYTE PTR [rax-0x2cffffed],dh
   14000f2b5:	adc    eax,DWORD PTR [rax]
   14000f2b7:	add    BYTE PTR [rax-0xe],ch
   14000f2ba:	add    BYTE PTR [rax],al
   14000f2bc:	and    DWORD PTR [rax],eax
   14000f2be:	add    al,BYTE PTR [rax]
   14000f2c0:	add    BYTE PTR [rsi+rax*1],dh
   14000f2c3:	add    BYTE PTR [rax-0x2cffffed],dh
   14000f2c9:	adc    eax,DWORD PTR [rax]
   14000f2cb:	add    BYTE PTR [rax-0xe],ch
   14000f2ce:	add    BYTE PTR [rax],al
   14000f2d0:	and    DWORD PTR [rax],eax
   14000f2d2:	add    BYTE PTR [rax],al
   14000f2d4:	mov    al,0x13
   14000f2d6:	add    BYTE PTR [rax],al
   14000f2d8:	rcl    DWORD PTR [rbx],cl
   14000f2da:	add    BYTE PTR [rax],al
   14000f2dc:	push   0x210000f2
   14000f2e1:	add    BYTE PTR [rax+rax*1],al
   14000f2e4:	add    BYTE PTR [rdi+rax*1+0x0],ah
   14000f2e8:	add    BYTE PTR [rsi+rax*1],dh
   14000f2eb:	add    BYTE PTR [rax+0x52],ah
   14000f2ee:	add    BYTE PTR [rax],al
   14000f2f0:	push   0x52
   14000f2f2:	add    BYTE PTR [rax],al
   14000f2f4:	shl    dl,1
   14000f2f6:	add    BYTE PTR [rax],al
   14000f2f8:	add    DWORD PTR [rsi],eax
   14000f2fa:	add    al,BYTE PTR [rax]
   14000f2fc:	(bad)  
   14000f2fd:	xor    al,BYTE PTR [rdx]
   14000f2ff:	jo     0x14000f322
   14000f301:	add    eax,0x34050002
   14000f306:	(bad)  
   14000f307:	add    BYTE PTR [rax-0x31ffffec],al
   14000f30d:	adc    al,0x0
   14000f30f:	add    al,bh
   14000f311:	repnz add BYTE PTR [rax],al
   14000f314:	and    DWORD PTR [rax],eax
   14000f316:	add    BYTE PTR [rax],al
   14000f318:	adc    BYTE PTR [rax+rax*1],0x0
   14000f31c:	(bad)  
   14000f31d:	adc    al,0x0
   14000f31f:	add    al,bh
   14000f321:	repnz add BYTE PTR [rax],al
   14000f324:	and    DWORD PTR [rax],eax
   14000f326:	add    al,BYTE PTR [rax]
   14000f328:	add    BYTE PTR [rsi+rax*1],dh
   14000f32b:	add    BYTE PTR [rax-0x31ffffec],al
   14000f331:	adc    al,0x0
   14000f333:	add    al,bh
   14000f335:	repnz add BYTE PTR [rax],al
   14000f338:	add    DWORD PTR [rsi],eax
   14000f33a:	add    al,BYTE PTR [rax]
   14000f33c:	(bad)  
   14000f33d:	xor    al,BYTE PTR [rdx]
   14000f33f:	jo     0x14000f362
   14000f341:	add    eax,0x34050002
   14000f346:	(bad)  
   14000f347:	add    BYTE PTR [rax],dl
   14000f349:	adc    eax,0x15850000
   14000f34e:	add    BYTE PTR [rax],al
   14000f350:	cmp    bl,dh
   14000f352:	add    BYTE PTR [rax],al
   14000f354:	and    DWORD PTR [rax],eax
   14000f356:	add    al,BYTE PTR [rax]
   14000f358:	add    BYTE PTR [rsi+rax*1],dh
   14000f35b:	add    BYTE PTR [rax],dl
   14000f35d:	adc    eax,0x15850000
   14000f362:	add    BYTE PTR [rax],al
   14000f364:	cmp    bl,dh
   14000f366:	add    BYTE PTR [rax],al
   14000f368:	sbb    DWORD PTR [rbx],ebx
   14000f36a:	(bad)  
   14000f36b:	add    BYTE PTR [rdx+rsi*4],cl
   14000f36e:	or     al,dh
   14000f370:	(bad)  
   14000f371:	loopne 0x14000f377
   14000f373:	jo     0x14000f378
   14000f375:	push   rax
   14000f376:	add    dh,BYTE PTR [rax]
   14000f378:	mov    al,0x4a
   14000f37a:	add    BYTE PTR [rax],al
   14000f37c:	push   rax
   14000f37d:	add    BYTE PTR [rax],al
   14000f37f:	add    BYTE PTR [rcx],ah
   14000f381:	or     BYTE PTR [rdx],al
   14000f383:	add    BYTE PTR [rax],cl
   14000f385:	adc    al,BYTE PTR fs:[rax]
   14000f388:	rcl    BYTE PTR [rip+0x161c0000],0x0        # 0x1561cf38f
   14000f38f:	add    BYTE PTR [rax-0xd],ch
   14000f392:	add    BYTE PTR [rax],al
   14000f394:	and    DWORD PTR [rax],eax
   14000f396:	add    BYTE PTR [rax],al
   14000f398:	rcl    BYTE PTR [rip+0x161c0000],0x0        # 0x1561cf39f
   14000f39f:	add    BYTE PTR [rax-0xd],ch
   14000f3a2:	add    BYTE PTR [rax],al
   14000f3a4:	and    DWORD PTR [rax],eax
   14000f3a6:	add    al,BYTE PTR [rax]
   14000f3a8:	add    BYTE PTR [rdx+rdx*1+0x0],ah
   14000f3ac:	rcl    BYTE PTR [rip+0x161c0000],0x0        # 0x1561cf3b3
   14000f3b3:	add    BYTE PTR [rax-0xd],ch
   14000f3b6:	add    BYTE PTR [rax],al
   14000f3b8:	and    DWORD PTR [rax],eax
   14000f3ba:	add    BYTE PTR [rax],al
   14000f3bc:	rcl    BYTE PTR [rip+0x161c0000],0x0        # 0x1561cf3c3
   14000f3c3:	add    BYTE PTR [rax-0xd],ch
   14000f3c6:	add    BYTE PTR [rax],al
   14000f3c8:	and    DWORD PTR [rax],eax
   14000f3ca:	add    al,BYTE PTR [rax]
   14000f3cc:	add    BYTE PTR [rdx+rdx*1+0x0],ah
   14000f3d0:	rcl    BYTE PTR [rdx+0x0],0x0
   14000f3d4:	or     eax,0xb8000053
   14000f3d9:	repz add BYTE PTR [rax],al
   14000f3dc:	sbb    DWORD PTR [rsi+rax*1],ebx
   14000f3df:	add    BYTE PTR [rip+0xd001334],cl        # 0x14d010719
   14000f3e5:	mov    dl,0x9
   14000f3e7:	loopne 0x14000f3f0
   14000f3e9:	jo     0x14000f3f1
   14000f3eb:	push   rax
   14000f3ec:	mov    al,0x4a
   14000f3ee:	add    BYTE PTR [rax],al
   14000f3f0:	push   rax
   14000f3f1:	add    BYTE PTR [rax],al
   14000f3f3:	add    BYTE PTR [rcx],ah
   14000f3f5:	or     BYTE PTR [rdx],al
   14000f3f7:	add    BYTE PTR [rax],cl
   14000f3f9:	adc    BYTE PTR fs:[rax],al
   14000f3fc:	rcl    BYTE PTR [rsi],0x0
   14000f3ff:	add    BYTE PTR [rbx],dl
   14000f401:	(bad)  
   14000f402:	add    BYTE PTR [rax],al
   14000f404:	fdivr  st(3),st
   14000f406:	add    BYTE PTR [rax],al
   14000f408:	and    DWORD PTR [rax],eax
   14000f40a:	add    BYTE PTR [rax],al
   14000f40c:	rcl    BYTE PTR [rsi],0x0
   14000f40f:	add    BYTE PTR [rbx],dl
   14000f411:	(bad)  
   14000f412:	add    BYTE PTR [rax],al
   14000f414:	fdivr  st(3),st
   14000f416:	add    BYTE PTR [rax],al
   14000f418:	and    DWORD PTR [rax],eax
   14000f41a:	add    al,BYTE PTR [rax]
   14000f41c:	add    BYTE PTR [rax+rdx*1+0x0],ah
   14000f420:	rcl    BYTE PTR [rsi],0x0
   14000f423:	add    BYTE PTR [rbx],dl
   14000f425:	(bad)  
   14000f426:	add    BYTE PTR [rax],al
   14000f428:	fdivr  st(3),st
   14000f42a:	add    BYTE PTR [rax],al
   14000f42c:	and    DWORD PTR [rax],eax
   14000f42e:	add    BYTE PTR [rax],al
   14000f430:	rcl    BYTE PTR [rsi],0x0
   14000f433:	add    BYTE PTR [rbx],dl
   14000f435:	(bad)  
   14000f436:	add    BYTE PTR [rax],al
   14000f438:	fdivr  st(3),st
   14000f43a:	add    BYTE PTR [rax],al
   14000f43c:	and    DWORD PTR [rax],eax
   14000f43e:	add    al,BYTE PTR [rax]
   14000f440:	add    BYTE PTR [rax+rdx*1+0x0],ah
   14000f444:	es push rbx
   14000f446:	add    BYTE PTR [rax],al
   14000f448:	jae    0x14000f49d
   14000f44a:	add    BYTE PTR [rax],al
   14000f44c:	sub    al,0xf4
   14000f44e:	add    BYTE PTR [rax],al
   14000f450:	add    DWORD PTR [rdx],ecx
   14000f452:	add    al,0x0
   14000f454:	or     dh,BYTE PTR [rsi+rax*1]
   14000f457:	add    BYTE PTR [rdx],cl
   14000f459:	xor    al,BYTE PTR [rsi]
   14000f45b:	jo     0x14000f45e
   14000f45d:	(bad)  
   14000f45e:	(bad)  
   14000f45f:	add    BYTE PTR [rdi],dl
   14000f461:	rcl    BYTE PTR [rax],cl
   14000f463:	ror    BYTE PTR [rsi],0x70
   14000f466:	or     eax,0xb300c60
   14000f46b:	push   rax
   14000f46c:	and    DWORD PTR [rip+0xffffffffe40d0004],ecx        # 0x1240df476
   14000f472:	or     al,0x0
   14000f474:	add    eax,0x30000dd4
   14000f479:	sbb    BYTE PTR [rax],al
   14000f47b:	add    BYTE PTR [rdi+0x18],al
   14000f47e:	add    BYTE PTR [rax],al
   14000f480:	pop    rsp
   14000f481:	hlt    
   14000f482:	add    BYTE PTR [rax],al
   14000f484:	and    DWORD PTR [rip+0xfffffffff4050002],eax        # 0x13405f48c
   14000f48a:	or     eax,DWORD PTR [rax]
   14000f48c:	rex.RXB sbb BYTE PTR [r8],r8b
   14000f48f:	add    BYTE PTR [rdx+0x18],bl
   14000f492:	add    BYTE PTR [rax],al
   14000f494:	ins    BYTE PTR es:[rdi],dx
   14000f495:	hlt    
   14000f496:	add    BYTE PTR [rax],al
   14000f498:	and    DWORD PTR [rax],eax
   14000f49a:	add    BYTE PTR [rax],al
   14000f49c:	rex.RXB sbb BYTE PTR [r8],r8b
   14000f49f:	add    BYTE PTR [rdx+0x18],bl
   14000f4a2:	add    BYTE PTR [rax],al
   14000f4a4:	ins    BYTE PTR es:[rdi],dx
   14000f4a5:	hlt    
   14000f4a6:	add    BYTE PTR [rax],al
   14000f4a8:	and    DWORD PTR [rax],eax
   14000f4aa:	add    BYTE PTR [rax],al
   14000f4ac:	xor    BYTE PTR [rax],bl
   14000f4ae:	add    BYTE PTR [rax],al
   14000f4b0:	rex.RXB sbb BYTE PTR [r8],r8b
   14000f4b3:	add    BYTE PTR [rsp+rsi*8+0x0],bl
   14000f4b7:	add    BYTE PTR [rcx],ah
   14000f4b9:	add    BYTE PTR [rsi],al
   14000f4bb:	add    BYTE PTR [rax],al
   14000f4bd:	hlt    
   14000f4be:	or     eax,DWORD PTR [rax]
   14000f4c0:	add    ah,ah
   14000f4c2:	or     al,0x0
   14000f4c4:	add    ah,dl
   14000f4c6:	or     eax,0x183000
   14000f4cb:	add    BYTE PTR [rdi+0x18],al
   14000f4ce:	add    BYTE PTR [rax],al
   14000f4d0:	pop    rsp
   14000f4d1:	hlt    
   14000f4d2:	add    BYTE PTR [rax],al
   14000f4d4:	and    DWORD PTR [rax],eax
   14000f4d6:	add    al,0x0
   14000f4d8:	add    ah,ah
   14000f4da:	or     al,0x0
   14000f4dc:	add    ah,dl
   14000f4de:	or     eax,0x183000
   14000f4e3:	add    BYTE PTR [rdi+0x18],al
   14000f4e6:	add    BYTE PTR [rax],al
   14000f4e8:	pop    rsp
   14000f4e9:	hlt    
   14000f4ea:	add    BYTE PTR [rax],al
   14000f4ec:	and    DWORD PTR [rax],eax
   14000f4ee:	add    BYTE PTR [rax],al
   14000f4f0:	xor    BYTE PTR [rax],bl
   14000f4f2:	add    BYTE PTR [rax],al
   14000f4f4:	rex.RXB sbb BYTE PTR [r8],r8b
   14000f4f7:	add    BYTE PTR [rsp+rsi*8+0x0],bl
   14000f4fb:	add    BYTE PTR [rcx],bl
   14000f4fd:	and    eax,DWORD PTR [rdi]
   14000f4ff:	add    BYTE PTR [rip+0x9002001],dl        # 0x149011506
   14000f505:	loopne 0x14000f50e
   14000f507:	rol    BYTE PTR [rip+0x26003c0],1        # 0x14260f8cd
   14000f50d:	push   rax
   14000f50e:	add    BYTE PTR [rax],al
   14000f510:	mov    al,0x4a
   14000f512:	add    BYTE PTR [rax],al
   14000f514:	fadd   DWORD PTR [rax]
   14000f516:	add    BYTE PTR [rax],al
   14000f518:	and    DWORD PTR [rsi+rax*1],esp
   14000f51b:	add    BYTE PTR [rsp+rsi*8],ah
   14000f51e:	sbb    eax,0x1e741700
   14000f523:	add    BYTE PTR [rax],cl
   14000f525:	xor    al,0x1f
   14000f527:	add    BYTE PTR [rax],ah
   14000f529:	sbb    eax,DWORD PTR [rax]
   14000f52b:	add    BYTE PTR [rbp-0x3ffffe5],al
   14000f531:	hlt    
   14000f532:	add    BYTE PTR [rax],al
   14000f534:	and    DWORD PTR [rax],eax
   14000f536:	add    al,BYTE PTR [rax]
   14000f538:	add    ah,dh
   14000f53a:	sbb    eax,0x1b2000
   14000f53f:	add    BYTE PTR [rbp-0x3ffffe5],al
   14000f545:	hlt    
   14000f546:	add    BYTE PTR [rax],al
   14000f548:	and    DWORD PTR [rax],eax
   14000f54a:	add    BYTE PTR [rax],al
   14000f54c:	and    BYTE PTR [rbx],bl
   14000f54e:	add    BYTE PTR [rax],al
   14000f550:	test   DWORD PTR [rbx],ebx
   14000f552:	add    BYTE PTR [rax],al
   14000f554:	cld    
   14000f555:	hlt    
   14000f556:	add    BYTE PTR [rax],al
   14000f558:	and    DWORD PTR [rax],eax
   14000f55a:	(bad)  
   14000f55b:	add    BYTE PTR [rax],al
   14000f55d:	hlt    
   14000f55e:	sbb    eax,0x1e740000
   14000f563:	add    BYTE PTR [rax],al
   14000f565:	xor    al,0x1f
   14000f567:	add    BYTE PTR [rax],ah
   14000f569:	sbb    eax,DWORD PTR [rax]
   14000f56b:	add    BYTE PTR [rbp-0x3ffffe5],al
   14000f571:	hlt    
   14000f572:	add    BYTE PTR [rax],al
   14000f574:	and    DWORD PTR [rax],eax
   14000f576:	add    BYTE PTR [rax],al
   14000f578:	and    BYTE PTR [rbx],bl
   14000f57a:	add    BYTE PTR [rax],al
   14000f57c:	test   DWORD PTR [rbx],ebx
   14000f57e:	add    BYTE PTR [rax],al
   14000f580:	cld    
   14000f581:	hlt    
   14000f582:	add    BYTE PTR [rax],al
   14000f584:	and    DWORD PTR [rax],eax
   14000f586:	(bad)  
   14000f587:	add    BYTE PTR [rax],al
   14000f589:	hlt    
   14000f58a:	sbb    eax,0x1e740000
   14000f58f:	add    BYTE PTR [rax],al
   14000f591:	xor    al,0x1f
   14000f593:	add    BYTE PTR [rax],ah
   14000f595:	sbb    eax,DWORD PTR [rax]
   14000f597:	add    BYTE PTR [rbp-0x3ffffe5],al
   14000f59d:	hlt    
   14000f59e:	add    BYTE PTR [rax],al
   14000f5a0:	and    DWORD PTR [rax],eax
   14000f5a2:	add    al,BYTE PTR [rax]
   14000f5a4:	add    ah,dh
   14000f5a6:	sbb    eax,0x1b2000
   14000f5ab:	add    BYTE PTR [rbp-0x3ffffe5],al
   14000f5b1:	hlt    
   14000f5b2:	add    BYTE PTR [rax],al
   14000f5b4:	and    DWORD PTR [rax],eax
   14000f5b6:	add    BYTE PTR [rax],al
   14000f5b8:	and    BYTE PTR [rbx],bl
   14000f5ba:	add    BYTE PTR [rax],al
   14000f5bc:	test   DWORD PTR [rbx],ebx
   14000f5be:	add    BYTE PTR [rax],al
   14000f5c0:	cld    
   14000f5c1:	hlt    
   14000f5c2:	add    BYTE PTR [rax],al
   14000f5c4:	add    DWORD PTR [rdi],edx
   14000f5c6:	or     DWORD PTR [rax],eax
   14000f5c8:	(bad)  
   14000f5c9:	add    DWORD PTR [rax+rax*1],edx
   14000f5cc:	or     esi,eax
   14000f5ce:	or     eax,esp
   14000f5d0:	(bad)  
   14000f5d1:	rol    BYTE PTR [rip+0x3600470],1        # 0x14360fa47
   14000f5d7:	xor    BYTE PTR [rdx],al
   14000f5d9:	push   rax
   14000f5da:	add    BYTE PTR [rax],al
   14000f5dc:	and    DWORD PTR [rax],ecx
   14000f5de:	add    al,BYTE PTR [rax]
   14000f5e0:	or     ah,al
   14000f5e2:	adc    eax,DWORD PTR [rax]
   14000f5e4:	push   rax
   14000f5e5:	and    DWORD PTR [rax],eax
   14000f5e7:	add    BYTE PTR [rcx+0x21],dh
   14000f5ea:	add    BYTE PTR [rax],al
   14000f5ec:	(bad)  
   14000f5ed:	cmc    
   14000f5ee:	add    BYTE PTR [rax],al
   14000f5f0:	and    DWORD PTR [rax],eax
   14000f5f2:	add    BYTE PTR [rax],al
   14000f5f4:	push   rax
   14000f5f5:	and    DWORD PTR [rax],eax
   14000f5f7:	add    BYTE PTR [rcx+0x21],dh
   14000f5fa:	add    BYTE PTR [rax],al
   14000f5fc:	(bad)  
   14000f5fd:	cmc    
   14000f5fe:	add    BYTE PTR [rax],al
   14000f600:	and    DWORD PTR [rax],eax
   14000f602:	add    al,BYTE PTR [rax]
   14000f604:	add    ah,al
   14000f606:	adc    eax,DWORD PTR [rax]
   14000f608:	push   rax
   14000f609:	and    DWORD PTR [rax],eax
   14000f60b:	add    BYTE PTR [rcx+0x21],dh
   14000f60e:	add    BYTE PTR [rax],al
   14000f610:	(bad)  
   14000f611:	cmc    
   14000f612:	add    BYTE PTR [rax],al
   14000f614:	and    DWORD PTR [rax],eax
   14000f616:	add    BYTE PTR [rax],al
   14000f618:	push   rax
   14000f619:	and    DWORD PTR [rax],eax
   14000f61b:	add    BYTE PTR [rcx+0x21],dh
   14000f61e:	add    BYTE PTR [rax],al
   14000f620:	(bad)  
   14000f621:	cmc    
   14000f622:	add    BYTE PTR [rax],al
   14000f624:	add    DWORD PTR [rcx],edx
   14000f626:	(bad)  
   14000f627:	add    BYTE PTR [rcx],dl
   14000f629:	xor    al,0xc
   14000f62b:	add    BYTE PTR [rcx],dl
   14000f62d:	push   rdx
   14000f62e:	or     eax,0xb600c70
   14000f633:	push   rax
   14000f634:	and    DWORD PTR [rax],eax
   14000f636:	add    BYTE PTR [rax],al
   14000f638:	mov    al,0x23
   14000f63a:	add    BYTE PTR [rax],al
   14000f63c:	std    
   14000f63d:	and    al,0x0
   14000f63f:	add    BYTE PTR [rsi+rsi*8],ah
   14000f642:	add    BYTE PTR [rax],al
   14000f644:	add    DWORD PTR [rsi],edx
   14000f646:	(bad)  
   14000f647:	add    BYTE PTR [rsi],dl
   14000f649:	xor    al,0xd
   14000f64b:	add    BYTE PTR [rsi],dl
   14000f64d:	push   rdx
   14000f64e:	adc    dh,BYTE PTR [rax+0x11]
   14000f651:	(bad)  
   14000f652:	adc    BYTE PTR [rax+0x21],dl
   14000f655:	add    BYTE PTR [rax],al
   14000f657:	add    BYTE PTR [rax],dl
   14000f659:	and    eax,0x28590000
   14000f65e:	add    BYTE PTR [rax],al
   14000f660:	rex.R test BYTE PTR [rax],0x0
   14000f664:	add    DWORD PTR [rdx],ebx
   14000f666:	or     al,BYTE PTR [rax]
   14000f668:	sbb    dh,BYTE PTR [rcx+rcx*1+0x0]
   14000f66c:	sbb    ah,BYTE PTR [rax+rcx*1+0x0]
   14000f670:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   14000f674:	sbb    dh,BYTE PTR [rsi+rax*1]
   14000f677:	add    BYTE PTR [rdx],bl
   14000f679:	xor    dl,BYTE PTR [rsi]
   14000f67b:	loopne 0x14000f69e
   14000f67d:	add    BYTE PTR [rax],al
   14000f67f:	add    BYTE PTR [rax+0x28],dh
   14000f682:	add    BYTE PTR [rax],al
   14000f684:	and    eax,0x64000029
   14000f689:	test   BYTE PTR [rax],0x0
   14000f68c:	add    DWORD PTR [rdx],ecx
   14000f68e:	add    al,0x0
   14000f690:	or     dh,BYTE PTR [rsi+rax*1]
   14000f693:	add    BYTE PTR [rdx],cl
   14000f695:	xor    al,BYTE PTR [rsi]
   14000f697:	jo     0x14000f6ba
   14000f699:	add    BYTE PTR [rax],al
   14000f69b:	add    BYTE PTR [rax],dh
   14000f69d:	sub    DWORD PTR [rax],eax
   14000f69f:	add    BYTE PTR [rax+0x29],ch
   14000f6a2:	add    BYTE PTR [rax],al
   14000f6a4:	mov    esi,?
   14000f6a6:	add    BYTE PTR [rax],al
   14000f6a8:	add    DWORD PTR [rdx],ecx
   14000f6aa:	add    al,0x0
   14000f6ac:	or     dh,BYTE PTR [rsi+rax*1]
   14000f6af:	add    BYTE PTR [rdx],cl
   14000f6b1:	xor    al,BYTE PTR [rsi]
   14000f6b3:	jo     0x14000f6d6
   14000f6b5:	add    BYTE PTR [rax],al
   14000f6b7:	add    BYTE PTR [rax+0x29],dh
   14000f6ba:	add    BYTE PTR [rax],al
   14000f6bc:	test   al,0x29
   14000f6be:	add    BYTE PTR [rax],al
   14000f6c0:	test   al,0xf6
   14000f6c2:	add    BYTE PTR [rax],al
   14000f6c4:	sbb    DWORD PTR [rax],esp
   14000f6c6:	(bad)  
   14000f6c7:	add    BYTE PTR [rdx],dl
   14000f6c9:	add    DWORD PTR [rip+0x6700700],esp        # 0x14670fdcf
   14000f6cf:	(bad)  
   14000f6d0:	add    eax,0xb0500430
   14000f6d5:	rex.WX add BYTE PTR [rax],al
   14000f6d8:	add    BYTE PTR [rcx],al
   14000f6da:	add    BYTE PTR [rax],al
   14000f6dc:	and    DWORD PTR [rdx],edx
   14000f6de:	(bad)  
   14000f6df:	add    BYTE PTR [rdx],dl
   14000f6e1:	in     al,0x23
   14000f6e3:	add    BYTE PTR [rbx],cl
   14000f6e5:	(bad)  
   14000f6e6:	and    al,0x0
   14000f6e8:	add    al,0xc4
   14000f6ea:	sub    al,0x0
   14000f6ec:	mov    al,0x29
   14000f6ee:	add    BYTE PTR [rax],al
   14000f6f0:	shr    BYTE PTR [rcx],1
   14000f6f2:	add    BYTE PTR [rax],al
   14000f6f4:	(bad)  
   14000f6f5:	test   BYTE PTR [rax],0x0
   14000f6f8:	and    DWORD PTR [rax],ecx
   14000f6fa:	add    al,BYTE PTR [rax]
   14000f6fc:	or     ah,dh
   14000f6fe:	and    al,BYTE PTR [rax]
   14000f700:	shr    BYTE PTR [rcx],1
   14000f702:	add    BYTE PTR [rax],al
   14000f704:	mov    ch,BYTE PTR [rdx]
   14000f706:	add    BYTE PTR [rax],al
   14000f708:	fdivr  st(6),st
   14000f70a:	add    BYTE PTR [rax],al
   14000f70c:	and    DWORD PTR [rax],eax
   14000f70e:	add    BYTE PTR [rax],al
   14000f710:	shr    BYTE PTR [rcx],1
   14000f712:	add    BYTE PTR [rax],al
   14000f714:	mov    ch,BYTE PTR [rdx]
   14000f716:	add    BYTE PTR [rax],al
   14000f718:	fdivr  st(6),st
   14000f71a:	add    BYTE PTR [rax],al
   14000f71c:	and    DWORD PTR [rax],eax
   14000f71e:	add    BYTE PTR [rax],al
   14000f720:	mov    al,0x29
   14000f722:	add    BYTE PTR [rax],al
   14000f724:	shr    BYTE PTR [rcx],1
   14000f726:	add    BYTE PTR [rax],al
   14000f728:	(bad)  
   14000f729:	test   BYTE PTR [rax],0x0
   14000f72c:	and    DWORD PTR [rax],eax
   14000f72e:	or     BYTE PTR [rax],al
   14000f730:	add    ah,dh
   14000f732:	and    al,BYTE PTR [rax]
   14000f734:	add    ah,ah
   14000f736:	and    eax,DWORD PTR [rax]
   14000f738:	add    ah,dl
   14000f73a:	and    al,0x0
   14000f73c:	add    ah,al
   14000f73e:	sub    al,0x0
   14000f740:	mov    al,0x29
   14000f742:	add    BYTE PTR [rax],al
   14000f744:	shr    BYTE PTR [rcx],1
   14000f746:	add    BYTE PTR [rax],al
   14000f748:	(bad)  
   14000f749:	test   BYTE PTR [rax],0x0
   14000f74c:	and    DWORD PTR [rax],eax
   14000f74e:	(bad)  
   14000f74f:	add    BYTE PTR [rax],al
   14000f751:	in     al,0x23
   14000f753:	add    BYTE PTR [rax],al
   14000f755:	(bad)  
   14000f756:	and    al,0x0
   14000f758:	add    ah,al
   14000f75a:	sub    al,0x0
   14000f75c:	mov    al,0x29
   14000f75e:	add    BYTE PTR [rax],al
   14000f760:	shr    BYTE PTR [rcx],1
   14000f762:	add    BYTE PTR [rax],al
   14000f764:	(bad)  
   14000f765:	test   BYTE PTR [rax],0x0
   14000f768:	and    DWORD PTR [rax],eax
   14000f76a:	or     BYTE PTR [rax],al
   14000f76c:	add    ah,dh
   14000f76e:	and    al,BYTE PTR [rax]
   14000f770:	add    ah,ah
   14000f772:	and    eax,DWORD PTR [rax]
   14000f774:	add    ah,dl
   14000f776:	and    al,0x0
   14000f778:	add    ah,al
   14000f77a:	sub    al,0x0
   14000f77c:	mov    al,0x29
   14000f77e:	add    BYTE PTR [rax],al
   14000f780:	shr    BYTE PTR [rcx],1
   14000f782:	add    BYTE PTR [rax],al
   14000f784:	(bad)  
   14000f785:	test   BYTE PTR [rax],0x0
   14000f788:	and    DWORD PTR [rax],eax
   14000f78a:	(bad)  
   14000f78b:	add    BYTE PTR [rax],al
   14000f78d:	in     al,0x23
   14000f78f:	add    BYTE PTR [rax],al
   14000f791:	(bad)  
   14000f792:	and    al,0x0
   14000f794:	add    ah,al
   14000f796:	sub    al,0x0
   14000f798:	mov    al,0x29
   14000f79a:	add    BYTE PTR [rax],al
   14000f79c:	shr    BYTE PTR [rcx],1
   14000f79e:	add    BYTE PTR [rax],al
   14000f7a0:	(bad)  
   14000f7a1:	test   BYTE PTR [rax],0x0
   14000f7a4:	and    DWORD PTR [rax],eax
   14000f7a6:	add    BYTE PTR [rax],al
   14000f7a8:	mov    al,0x29
   14000f7aa:	add    BYTE PTR [rax],al
   14000f7ac:	shr    BYTE PTR [rcx],1
   14000f7ae:	add    BYTE PTR [rax],al
   14000f7b0:	(bad)  
   14000f7b1:	test   BYTE PTR [rax],0x0
   14000f7b4:	add    DWORD PTR [rsp+rcx*1],ebx
   14000f7b7:	add    BYTE PTR [rsp+riz*2],bl
   14000f7ba:	or     al,0x0
   14000f7bc:	sbb    al,0x54
   14000f7be:	or     eax,DWORD PTR [rax]
   14000f7c0:	sbb    al,0x34
   14000f7c2:	or     al,BYTE PTR [rax]
   14000f7c4:	sbb    al,0x32
   14000f7c6:	sbb    al,dh
   14000f7c8:	(bad)  
   14000f7c9:	loopne 0x14000f7df
   14000f7cb:	rcl    BYTE PTR [rdx],1
   14000f7cd:	rcl    BYTE PTR [rax],0x70
   14000f7d0:	and    DWORD PTR [rax],eax
   14000f7d2:	add    BYTE PTR [rax],al
   14000f7d4:	shr    BYTE PTR [rip+0x2efa0000],0x0        # 0x16efaf7db
   14000f7db:	add    BYTE PTR [rdi+rsi*8+0x20190000],dh
   14000f7e2:	add    eax,0x20011200
   14000f7e7:	add    BYTE PTR [rdi],al
   14000f7e9:	lock add eax,0x500430
   14000f7ef:	add    BYTE PTR [rax-0x2fffffb6],dh
   14000f7f5:	add    BYTE PTR [rax],al
   14000f7f7:	add    BYTE PTR [rcx],ah
   14000f7f9:	and    DWORD PTR [rax],ecx
   14000f7fb:	add    BYTE PTR [rcx],ah
   14000f7fd:	in     al,0x1c
   14000f7ff:	add    BYTE PTR [rbx],dl
   14000f801:	(bad)  
   14000f802:	sbb    eax,0x1f740c00
   14000f807:	add    BYTE PTR [rsp+riz*2],al
   14000f80a:	and    al,0x0
   14000f80c:	jo     0x14000f83d
   14000f80e:	add    BYTE PTR [rax],al
   14000f810:	nop
   14000f811:	(bad)  
   14000f812:	add    BYTE PTR [rax],al
   14000f814:	loopne 0x14000f80d
   14000f816:	add    BYTE PTR [rax],al
   14000f818:	and    DWORD PTR [rax],ecx
   14000f81a:	add    al,BYTE PTR [rax]
   14000f81c:	or     ah,al
   14000f81e:	(bad)  
   14000f81f:	add    BYTE PTR [rax-0x30ffffd1],dl
   14000f825:	xor    BYTE PTR [rax],al
   14000f827:	add    al,bh
   14000f829:	test   DWORD PTR [rax],0x2100
   14000f82f:	add    BYTE PTR [rax-0x30ffffd1],dl
   14000f835:	xor    BYTE PTR [rax],al
   14000f837:	add    al,bh
   14000f839:	test   DWORD PTR [rax],0x2100
   14000f83f:	add    BYTE PTR [rax+0x2f],dh
   14000f842:	add    BYTE PTR [rax],al
   14000f844:	nop
   14000f845:	(bad)  
   14000f846:	add    BYTE PTR [rax],al
   14000f848:	loopne 0x14000f841
   14000f84a:	add    BYTE PTR [rax],al
   14000f84c:	and    DWORD PTR [rax],eax
   14000f84e:	or     al,BYTE PTR [rax]
   14000f850:	add    ah,ah
   14000f852:	sbb    al,0x0
   14000f854:	add    ah,dl
   14000f856:	sbb    eax,0x1ec40000
   14000f85b:	add    BYTE PTR [rax],al
   14000f85d:	je     0x14000f87e
   14000f85f:	add    BYTE PTR [rax],al
   14000f861:	fs and al,0x0
   14000f864:	jo     0x14000f895
   14000f866:	add    BYTE PTR [rax],al
   14000f868:	nop
   14000f869:	(bad)  
   14000f86a:	add    BYTE PTR [rax],al
   14000f86c:	loopne 0x14000f865
   14000f86e:	add    BYTE PTR [rax],al
   14000f870:	and    DWORD PTR [rax],eax
   14000f872:	or     BYTE PTR [rax],al
   14000f874:	add    ah,ah
   14000f876:	sbb    al,0x0
   14000f878:	add    ah,dl
   14000f87a:	sbb    eax,0x1f740000
   14000f87f:	add    BYTE PTR [rax],al
   14000f881:	fs and al,0x0
   14000f884:	jo     0x14000f8b5
   14000f886:	add    BYTE PTR [rax],al
   14000f888:	nop
   14000f889:	(bad)  
   14000f88a:	add    BYTE PTR [rax],al
   14000f88c:	loopne 0x14000f885
   14000f88e:	add    BYTE PTR [rax],al
   14000f890:	and    DWORD PTR [rax],eax
   14000f892:	or     BYTE PTR [rax],al
   14000f894:	add    ah,ah
   14000f896:	sbb    al,0x0
   14000f898:	add    ah,dl
   14000f89a:	sbb    eax,0x1f740000
   14000f89f:	add    BYTE PTR [rax],al
   14000f8a1:	fs and al,0x0
   14000f8a4:	jo     0x14000f8d5
   14000f8a6:	add    BYTE PTR [rax],al
   14000f8a8:	nop
   14000f8a9:	(bad)  
   14000f8aa:	add    BYTE PTR [rax],al
   14000f8ac:	loopne 0x14000f8a5
   14000f8ae:	add    BYTE PTR [rax],al
   14000f8b0:	and    DWORD PTR [rax],eax
   14000f8b2:	or     al,BYTE PTR [rax]
   14000f8b4:	add    ah,ah
   14000f8b6:	sbb    al,0x0
   14000f8b8:	add    ah,dl
   14000f8ba:	sbb    eax,0x1ec40000
   14000f8bf:	add    BYTE PTR [rax],al
   14000f8c1:	je     0x14000f8e2
   14000f8c3:	add    BYTE PTR [rax],al
   14000f8c5:	fs and al,0x0
   14000f8c8:	jo     0x14000f8f9
   14000f8ca:	add    BYTE PTR [rax],al
   14000f8cc:	nop
   14000f8cd:	(bad)  
   14000f8ce:	add    BYTE PTR [rax],al
   14000f8d0:	loopne 0x14000f8c9
   14000f8d2:	add    BYTE PTR [rax],al
   14000f8d4:	and    DWORD PTR [rax],eax
   14000f8d6:	or     BYTE PTR [rax],al
   14000f8d8:	add    ah,ah
   14000f8da:	sbb    al,0x0
   14000f8dc:	add    ah,dl
   14000f8de:	sbb    eax,0x1f740000
   14000f8e3:	add    BYTE PTR [rax],al
   14000f8e5:	fs and al,0x0
   14000f8e8:	jo     0x14000f919
   14000f8ea:	add    BYTE PTR [rax],al
   14000f8ec:	nop
   14000f8ed:	(bad)  
   14000f8ee:	add    BYTE PTR [rax],al
   14000f8f0:	loopne 0x14000f8e9
   14000f8f2:	add    BYTE PTR [rax],al
   14000f8f4:	add    DWORD PTR [rdx],ecx
   14000f8f6:	add    al,0x0
   14000f8f8:	or     dh,BYTE PTR [rsi+rax*1]
   14000f8fb:	add    BYTE PTR [rdx],cl
   14000f8fd:	xor    al,BYTE PTR [rsi]
   14000f8ff:	jo     0x14000f922
   14000f901:	add    BYTE PTR [rax],al
   14000f903:	add    al,dh
   14000f905:	xor    DWORD PTR [rax],eax
   14000f907:	add    BYTE PTR [rcx+0x32],cl
   14000f90a:	add    BYTE PTR [rax],al
   14000f90c:	hlt    
   14000f90d:	clc    
   14000f90e:	add    BYTE PTR [rax],al
   14000f910:	add    DWORD PTR [rdx],ecx
   14000f912:	add    eax,DWORD PTR [rax]
   14000f914:	or     ah,BYTE PTR [rdx+0x3004e006]
   14000f91a:	add    BYTE PTR [rax],al
   14000f91c:	and    DWORD PTR [rbx],edx
   14000f91e:	(bad)  
   14000f91f:	add    BYTE PTR [rbx],dl
   14000f921:	(bad)  
   14000f922:	(bad)  
   14000f923:	add    BYTE PTR [rbx],cl
   14000f925:	(bad)  
   14000f926:	or     BYTE PTR [rax],al
   14000f928:	add    al,0x64
   14000f92a:	or     al,BYTE PTR [rax]
   14000f92c:	push   rax
   14000f92d:	xor    al,BYTE PTR [rax]
   14000f92f:	add    BYTE PTR [rdx+0x32],bl
   14000f932:	add    BYTE PTR [rax],al
   14000f934:	adc    cl,bh
   14000f936:	add    BYTE PTR [rax],al
   14000f938:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405f940
   14000f93e:	or     DWORD PTR [rax],eax
   14000f940:	pop    rdx
   14000f941:	xor    al,BYTE PTR [rax]
   14000f943:	add    BYTE PTR [rax+0x1c000032],dh
   14000f949:	stc    
   14000f94a:	add    BYTE PTR [rax],al
   14000f94c:	and    DWORD PTR [rsi],ecx
   14000f94e:	add    al,0x0
   14000f950:	(bad)  
   14000f951:	hlt    
   14000f952:	(bad)  
   14000f953:	add    BYTE PTR [rip+0xffffffffb0000e54],al        # 0xf00107ad
   14000f959:	xor    al,BYTE PTR [rax]
   14000f95b:	add    al,dh
   14000f95d:	xor    al,BYTE PTR [rax]
   14000f95f:	add    BYTE PTR [rax],bh
   14000f961:	stc    
   14000f962:	add    BYTE PTR [rax],al
   14000f964:	and    DWORD PTR [rax],eax
   14000f966:	add    BYTE PTR [rax],al
   14000f968:	mov    al,0x32
   14000f96a:	add    BYTE PTR [rax],al
   14000f96c:	lock xor al,BYTE PTR [rax]
   14000f96f:	add    BYTE PTR [rax],bh
   14000f971:	stc    
   14000f972:	add    BYTE PTR [rax],al
   14000f974:	and    DWORD PTR [rax],eax
   14000f976:	add    BYTE PTR [rax],al
   14000f978:	pop    rdx
   14000f979:	xor    al,BYTE PTR [rax]
   14000f97b:	add    BYTE PTR [rax+0x1c000032],dh
   14000f981:	stc    
   14000f982:	add    BYTE PTR [rax],al
   14000f984:	and    DWORD PTR [rax],eax
   14000f986:	add    BYTE PTR [rax],al
   14000f988:	push   rax
   14000f989:	xor    al,BYTE PTR [rax]
   14000f98b:	add    BYTE PTR [rdx+0x32],bl
   14000f98e:	add    BYTE PTR [rax],al
   14000f990:	adc    cl,bh
   14000f992:	add    BYTE PTR [rax],al
   14000f994:	and    DWORD PTR [rax],eax
   14000f996:	or     al,0x0
   14000f998:	add    ah,dh
   14000f99a:	(bad)  
   14000f99b:	add    BYTE PTR [rax],al
   14000f99d:	(bad)  
   14000f99e:	(bad)  
   14000f99f:	add    BYTE PTR [rax],al
   14000f9a1:	(bad)  
   14000f9a2:	or     BYTE PTR [rax],al
   14000f9a4:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   14000f9a8:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   14000f9ac:	add    BYTE PTR [rsi+rcx*1+0x0],dl
   14000f9b0:	push   rax
   14000f9b1:	xor    al,BYTE PTR [rax]
   14000f9b3:	add    BYTE PTR [rdx+0x32],bl
   14000f9b6:	add    BYTE PTR [rax],al
   14000f9b8:	adc    cl,bh
   14000f9ba:	add    BYTE PTR [rax],al
   14000f9bc:	and    DWORD PTR [rax],eax
   14000f9be:	or     BYTE PTR [rax],al
   14000f9c0:	add    ah,dl
   14000f9c2:	(bad)  
   14000f9c3:	add    BYTE PTR [rax],al
   14000f9c5:	(bad)  
   14000f9c6:	or     BYTE PTR [rax],al
   14000f9c8:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   14000f9cc:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   14000f9d0:	push   rax
   14000f9d1:	xor    al,BYTE PTR [rax]
   14000f9d3:	add    BYTE PTR [rdx+0x32],bl
   14000f9d6:	add    BYTE PTR [rax],al
   14000f9d8:	adc    cl,bh
   14000f9da:	add    BYTE PTR [rax],al
   14000f9dc:	and    DWORD PTR [rax],eax
   14000f9de:	(bad)  
   14000f9df:	add    BYTE PTR [rax],al
   14000f9e1:	(bad)  
   14000f9e2:	(bad)  
   14000f9e3:	add    BYTE PTR [rax],al
   14000f9e5:	(bad)  
   14000f9e6:	or     BYTE PTR [rax],al
   14000f9e8:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   14000f9ec:	push   rax
   14000f9ed:	xor    al,BYTE PTR [rax]
   14000f9ef:	add    BYTE PTR [rdx+0x32],bl
   14000f9f2:	add    BYTE PTR [rax],al
   14000f9f4:	adc    cl,bh
   14000f9f6:	add    BYTE PTR [rax],al
   14000f9f8:	and    DWORD PTR [rax],eax
   14000f9fa:	or     al,0x0
   14000f9fc:	add    ah,dh
   14000f9fe:	(bad)  
   14000f9ff:	add    BYTE PTR [rax],al
   14000fa01:	(bad)  
   14000fa02:	(bad)  
   14000fa03:	add    BYTE PTR [rax],al
   14000fa05:	(bad)  
   14000fa06:	or     BYTE PTR [rax],al
   14000fa08:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   14000fa0c:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   14000fa10:	add    BYTE PTR [rsi+rcx*1+0x0],dl
   14000fa14:	push   rax
   14000fa15:	xor    al,BYTE PTR [rax]
   14000fa17:	add    BYTE PTR [rdx+0x32],bl
   14000fa1a:	add    BYTE PTR [rax],al
   14000fa1c:	adc    cl,bh
   14000fa1e:	add    BYTE PTR [rax],al
   14000fa20:	add    DWORD PTR [rcx+rax*1],eax
   14000fa23:	add    BYTE PTR [rdx+rax*2],al
   14000fa26:	add    BYTE PTR [rax],al
   14000fa28:	and    DWORD PTR [rax],eax
   14000fa2a:	add    BYTE PTR [rax],al
   14000fa2c:	xor    BYTE PTR [rax+rax*1],0x0
   14000fa30:	movabs ds:0x10000fa20000034,al
   14000fa39:	or     al,BYTE PTR [rax+rax*1]
   14000fa3c:	or     dh,BYTE PTR [rdi+rax*1]
   14000fa3f:	add    BYTE PTR [rdx],cl
   14000fa41:	xor    al,BYTE PTR [rsi]
   14000fa43:	jo     0x14000fa66
   14000fa45:	add    eax,0x64050002
   14000fa4a:	(bad)  
   14000fa4b:	add    al,ah
   14000fa4d:	xor    al,0x0
   14000fa4f:	add    BYTE PTR [rdi],dl
   14000fa51:	xor    eax,0xfa380000
   14000fa56:	add    BYTE PTR [rax],al
   14000fa58:	and    DWORD PTR [rax],eax
   14000fa5a:	add    BYTE PTR [rax],al
   14000fa5c:	loopne 0x14000fa92
   14000fa5e:	add    BYTE PTR [rax],al
   14000fa60:	(bad)  
   14000fa61:	xor    eax,0xfa380000
   14000fa66:	add    BYTE PTR [rax],al
   14000fa68:	and    DWORD PTR [rax],eax
   14000fa6a:	add    al,BYTE PTR [rax]
   14000fa6c:	add    BYTE PTR [rsi+rax*1+0x0],ah
   14000fa70:	mov    esp,0xcc000060
   14000fa75:	(bad)  
   14000fa76:	add    BYTE PTR [rax],al
   14000fa78:	pop    rax
   14000fa79:	cli    
   14000fa7a:	add    BYTE PTR [rax],al
   14000fa7c:	add    DWORD PTR [rsi],eax
   14000fa7e:	add    al,BYTE PTR [rax]
   14000fa80:	(bad)  
   14000fa81:	xor    al,BYTE PTR [rdx]
   14000fa83:	xor    BYTE PTR [rcx],ah
   14000fa85:	add    eax,0x64050002
   14000fa8a:	(bad)  
   14000fa8b:	add    BYTE PTR [rax+0x35],dh
   14000fa8e:	add    BYTE PTR [rax],al
   14000fa90:	jbe    0x14000fac7
   14000fa92:	add    BYTE PTR [rax],al
   14000fa94:	jl     0x14000fa90
   14000fa96:	add    BYTE PTR [rax],al
   14000fa98:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x12405faa0
   14000fa9e:	or     BYTE PTR [rax],al
   14000faa0:	jbe    0x14000fad7
   14000faa2:	add    BYTE PTR [rax],al
   14000faa4:	jle    0x14000fadb
   14000faa6:	add    BYTE PTR [rax],al
   14000faa8:	test   dl,bh
   14000faaa:	add    BYTE PTR [rax],al
   14000faac:	and    DWORD PTR [rax],eax
   14000faae:	add    BYTE PTR [rax],al
   14000fab0:	jbe    0x14000fae7
   14000fab2:	add    BYTE PTR [rax],al
   14000fab4:	jle    0x14000faeb
   14000fab6:	add    BYTE PTR [rax],al
   14000fab8:	test   dl,bh
   14000faba:	add    BYTE PTR [rax],al
   14000fabc:	and    DWORD PTR [rax],eax
   14000fabe:	add    BYTE PTR [rax],al
   14000fac0:	jo     0x14000faf7
   14000fac2:	add    BYTE PTR [rax],al
   14000fac4:	jbe    0x14000fafb
   14000fac6:	add    BYTE PTR [rax],al
   14000fac8:	jl     0x14000fac4
   14000faca:	add    BYTE PTR [rax],al
   14000facc:	and    DWORD PTR [rax],eax
   14000face:	add    al,0x0
   14000fad0:	add    ah,ah
   14000fad2:	or     BYTE PTR [rax],al
   14000fad4:	add    BYTE PTR [rsi+rax*1+0x0],ah
   14000fad8:	jo     0x14000fb0f
   14000fada:	add    BYTE PTR [rax],al
   14000fadc:	jbe    0x14000fb13
   14000fade:	add    BYTE PTR [rax],al
   14000fae0:	jl     0x14000fadc
   14000fae2:	add    BYTE PTR [rax],al
   14000fae4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405faec
   14000faea:	(bad)  
   14000faeb:	add    BYTE PTR [rax],al
   14000faed:	(bad)  
   14000faee:	add    BYTE PTR [rax],al
   14000faf0:	or     esp,DWORD PTR [rcx+0x0]
   14000faf3:	add    ah,cl
   14000faf5:	cli    
   14000faf6:	add    BYTE PTR [rax],al
   14000faf8:	and    DWORD PTR [rax],eax
   14000fafa:	add    al,BYTE PTR [rax]
   14000fafc:	add    BYTE PTR [rsi+rax*1+0x0],ah
   14000fb00:	jo     0x14000fb37
   14000fb02:	add    BYTE PTR [rax],al
   14000fb04:	jbe    0x14000fb3b
   14000fb06:	add    BYTE PTR [rax],al
   14000fb08:	jl     0x14000fb04
   14000fb0a:	add    BYTE PTR [rax],al
   14000fb0c:	add    DWORD PTR [rax],edx
   14000fb0e:	add    eax,DWORD PTR [rax]
   14000fb10:	adc    BYTE PTR [rdx+0xc],al
   14000fb13:	jo     0x14000fb20
   14000fb15:	(bad)  
   14000fb16:	add    BYTE PTR [rax],al
   14000fb18:	and    DWORD PTR [rip+0x34050002],eax        # 0x17405fb20
   14000fb1e:	add    al,0x0
   14000fb20:	loopne 0x14000fb57
   14000fb22:	add    BYTE PTR [rax],al
   14000fb24:	or     esi,DWORD PTR [rsi]
   14000fb26:	add    BYTE PTR [rax],al
   14000fb28:	or     al,0xfb
   14000fb2a:	add    BYTE PTR [rax],al
   14000fb2c:	and    DWORD PTR [rax],eax
   14000fb2e:	add    BYTE PTR [rax],al
   14000fb30:	loopne 0x14000fb67
   14000fb32:	add    BYTE PTR [rax],al
   14000fb34:	or     esi,DWORD PTR [rsi]
   14000fb36:	add    BYTE PTR [rax],al
   14000fb38:	or     al,0xfb
   14000fb3a:	add    BYTE PTR [rax],al
   14000fb3c:	and    DWORD PTR [rax],eax
   14000fb3e:	add    al,BYTE PTR [rax]
   14000fb40:	add    BYTE PTR [rsp+rax*1],dh
   14000fb43:	add    al,ah
   14000fb45:	xor    eax,0x360b0000
   14000fb4a:	add    BYTE PTR [rax],al
   14000fb4c:	or     al,0xfb
   14000fb4e:	add    BYTE PTR [rax],al
   14000fb50:	and    DWORD PTR [rax],eax
   14000fb52:	add    BYTE PTR [rax],al
   14000fb54:	loopne 0x14000fb8b
   14000fb56:	add    BYTE PTR [rax],al
   14000fb58:	or     esi,DWORD PTR [rsi]
   14000fb5a:	add    BYTE PTR [rax],al
   14000fb5c:	or     al,0xfb
   14000fb5e:	add    BYTE PTR [rax],al
   14000fb60:	add    DWORD PTR [rdx],ecx
   14000fb62:	add    al,0x0
   14000fb64:	or     dh,BYTE PTR [rdi+rax*1]
   14000fb67:	add    BYTE PTR [rdx],cl
   14000fb69:	xor    al,BYTE PTR [rsi]
   14000fb6b:	jo     0x14000fb6e
   14000fb6d:	sbb    ecx,DWORD PTR [rdx]
   14000fb6f:	add    BYTE PTR [rbx],bl
   14000fb71:	hlt    
   14000fb72:	adc    DWORD PTR [rax],eax
   14000fb74:	sbb    esp,esp
   14000fb76:	adc    BYTE PTR [rax],al
   14000fb78:	sbb    esi,DWORD PTR [rdi+rcx*1+0x0]
   14000fb7c:	sbb    esi,DWORD PTR [rsi+rcx*1]
   14000fb7f:	add    BYTE PTR [rbx],bl
   14000fb81:	mov    dl,0x14
   14000fb83:	push   rax
   14000fb84:	and    DWORD PTR [rax],eax
   14000fb86:	add    BYTE PTR [rax],al
   14000fb88:	fdivr  DWORD PTR [rcx]
   14000fb8a:	add    BYTE PTR [rax],al
   14000fb8c:	call   0x1ac00fbcc
   14000fb91:	sti    
   14000fb92:	add    BYTE PTR [rax],al
   14000fb94:	add    DWORD PTR [rdx],ecx
   14000fb96:	add    al,0x0
   14000fb98:	or     dh,BYTE PTR [rdx+rcx*1]
   14000fb9b:	add    BYTE PTR [rdx],cl
   14000fb9d:	jb     0x14000fba5
   14000fb9f:	jo     0x14000fbc2
   14000fba1:	add    BYTE PTR [rax],al
   14000fba3:	add    al,dh
   14000fba5:	cmp    eax,DWORD PTR [rax]
   14000fba7:	add    BYTE PTR [rdx-0x6bffffc4],bh
   14000fbad:	sti    
   14000fbae:	add    BYTE PTR [rax],al
   14000fbb0:	sbb    DWORD PTR [rdi+rax*1],esp
   14000fbb3:	add    BYTE PTR [rdx],dl
   14000fbb5:	rex.WRXB add BYTE PTR fs:[r10],r10b
   14000fbb9:	xor    al,0x4e
   14000fbbb:	add    BYTE PTR [rdx],dl
   14000fbbd:	add    DWORD PTR [rax+rax*1+0xb],ecx
   14000fbc1:	jo     0x14000fbc3
   14000fbc3:	add    BYTE PTR [rax+0x5000004a],dh
   14000fbc9:	add    al,BYTE PTR [rax]
   14000fbcb:	add    BYTE PTR [rcx],ah
   14000fbcd:	add    BYTE PTR [rax],al
   14000fbcf:	add    al,al
   14000fbd1:	cmp    al,0x0
   14000fbd3:	add    BYTE PTR [rbp+0x3e],cl
   14000fbd6:	add    BYTE PTR [rax],al
   14000fbd8:	mov    al,0xfb
   14000fbda:	add    BYTE PTR [rax],al
   14000fbdc:	add    DWORD PTR [rcx+rax*1],eax
   14000fbdf:	add    BYTE PTR [rdx+riz*2],al
   14000fbe2:	add    BYTE PTR [rax],al
   14000fbe4:	add    DWORD PTR [rcx+rax*1],eax
   14000fbe7:	add    BYTE PTR [rdx+rax*2],al
   14000fbea:	add    BYTE PTR [rax],al
   14000fbec:	add    DWORD PTR [rcx+rax*1],eax
   14000fbef:	add    BYTE PTR [rdx+rax*4],al
   14000fbf2:	add    BYTE PTR [rax],al
   14000fbf4:	add    DWORD PTR [rsi],eax
   14000fbf6:	add    al,BYTE PTR [rax]
   14000fbf8:	(bad)  
   14000fbf9:	push   rdx
   14000fbfa:	add    dh,BYTE PTR [rax]
   14000fbfc:	or     DWORD PTR [rbx+rcx*1],ebx
   14000fbff:	add    BYTE PTR [rsp+rsi*2],bl
   14000fc02:	sbb    al,0x0
   14000fc04:	sbb    al,0x64
   14000fc06:	sbb    eax,DWORD PTR [rax]
   14000fc08:	sbb    al,0x34
   14000fc0a:	sbb    al,BYTE PTR [rax]
   14000fc0c:	sbb    al,0x1
   14000fc0e:	(bad)  
   14000fc0f:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e11005
   14000fc15:	rol    BYTE PTR [rax],0x0
   14000fc18:	rex.W add BYTE PTR ss:[rax],al
   14000fc1c:	add    DWORD PTR [rax],eax
   14000fc1e:	add    BYTE PTR [rax],al
   14000fc20:	rol    BYTE PTR [rcx+0x0],1
   14000fc23:	add    dh,al
   14000fc25:	rex.XB add BYTE PTR [r8],al
   14000fc28:	push   rsi
   14000fc29:	rex.WRX add BYTE PTR [rax],r8b
   14000fc2c:	mov    BYTE PTR [rbx+0x0],0x0
   14000fc30:	add    DWORD PTR [rax],eax
   14000fc32:	add    BYTE PTR [rax],al
   14000fc34:	adc    DWORD PTR [rdx],ecx
   14000fc36:	add    al,0x0
   14000fc38:	or     dh,BYTE PTR [rsi+rax*1]
   14000fc3b:	add    BYTE PTR [rdx],cl
   14000fc3d:	xor    al,BYTE PTR [rsi]
   14000fc3f:	jo     0x14000fc77
   14000fc41:	rex.W add BYTE PTR [rax],al
   14000fc44:	add    DWORD PTR [rax],eax
   14000fc46:	add    BYTE PTR [rax],al
   14000fc48:	mov    ch,0x44
   14000fc4a:	add    BYTE PTR [rax],al
   14000fc4c:	cli    
   14000fc4d:	add    BYTE PTR [rax],r8b
   14000fc50:	jp     0x14000fca0
   14000fc52:	add    BYTE PTR [rax],al
   14000fc54:	add    BYTE PTR [rax],al
   14000fc56:	add    BYTE PTR [rax],al
   14000fc58:	add    DWORD PTR [rsi],eax
   14000fc5a:	add    al,BYTE PTR [rax]
   14000fc5c:	(bad)  
   14000fc5d:	xor    al,BYTE PTR [rdx]
   14000fc5f:	push   rax
   14000fc60:	or     DWORD PTR [rcx+rax*1],eax
   14000fc63:	add    BYTE PTR [rdx+riz*1],al
   14000fc66:	add    BYTE PTR [rax],al
   14000fc68:	rex.W add BYTE PTR ss:[rax],al
   14000fc6c:	add    DWORD PTR [rax],eax
   14000fc6e:	add    BYTE PTR [rax],al
   14000fc70:	mov    esp,0xf2000045
   14000fc75:	add    BYTE PTR [r8],r8b
   14000fc78:	add    DWORD PTR [rax],eax
   14000fc7a:	add    BYTE PTR [rax],al
   14000fc7c:	repnz add BYTE PTR [r8],r8b
   14000fc80:	or     DWORD PTR [rdx],ecx
   14000fc82:	add    al,0x0
   14000fc84:	or     dh,BYTE PTR [rsi+rax*1]
   14000fc87:	add    BYTE PTR [rdx],cl
   14000fc89:	xor    al,BYTE PTR [rsi]
   14000fc8b:	jo     0x14000fcc3
   14000fc8d:	rex.W add BYTE PTR [rax],al
   14000fc90:	add    DWORD PTR [rax],eax
   14000fc92:	add    BYTE PTR [rax],al
   14000fc94:	int    0x46
   14000fc96:	add    BYTE PTR [rax],al
   14000fc98:	add    BYTE PTR [rdi+0x0],al
   14000fc9b:	add    BYTE PTR [rax+0x4e],ah
   14000fca1:	rex.RXB add BYTE PTR [r8],r8b
   14000fca4:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dfcae
   14000fcaa:	or     DWORD PTR [rax],eax
   14000fcac:	or     eax,0x1500632
   14000fcb1:	or     al,0x2
   14000fcb3:	add    BYTE PTR [rcx+rax*1],cl
   14000fcb6:	adc    DWORD PTR [rax],eax
   14000fcb8:	add    DWORD PTR [rax],eax
   14000fcba:	add    BYTE PTR [rax],al
   14000fcbc:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a204fcc3
   14000fcc2:	add    BYTE PTR [rax],al
   14000fcc4:	movabs ds:0xff0000dda800004a,al
   14000fccd:	(bad)  
   14000fcce:	(bad)  
   14000fccf:	inc    DWORD PTR [rax]
   14000fcd1:	add    BYTE PTR [rax],al
   14000fcd3:	add    bh,bh
   14000fcd5:	(bad)  
   14000fcd6:	(bad)  
   14000fcd7:	inc    DWORD PTR [rax]
	...
   14000fce1:	add    BYTE PTR [rax],al
   14000fce3:	add    BYTE PTR [rcx],al
   14000fce5:	add    BYTE PTR [rax],al
   14000fce7:	add    BYTE PTR [rcx],al
   14000fce9:	add    BYTE PTR [rax],al
   14000fceb:	add    al,dh
   14000fced:	cld    
   14000fcee:	add    BYTE PTR [rax],al
   14000fcf0:	add    BYTE PTR [rax],al
	...
   14000fcfb:	add    dh,al
   14000fcfd:	rex.WRX add BYTE PTR [rax],r8b
   14000fd00:	cmp    BYTE PTR [rax],al
   14000fd02:	add    BYTE PTR [rax],al
   14000fd04:	add    BYTE PTR [rax],al
   14000fd06:	add    BYTE PTR [rax],al
   14000fd08:	jl     0x14000fd54
   14000fd0a:	add    BYTE PTR [rax],al
   14000fd0c:	(bad)  
   14000fd0d:	(bad)  
   14000fd0e:	(bad)  
   14000fd0f:	dec    DWORD PTR [rcx+0x4a]
   14000fd15:	add    BYTE PTR [rax],al
   14000fd17:	add    BYTE PTR [rdi-0xffffb6],cl
   14000fd1d:	(bad)  
   14000fd1e:	(bad)  
   14000fd1f:	inc    esi
   14000fd21:	rex.WRX add BYTE PTR [rax],r8b
   14000fd24:	add    BYTE PTR [rax],al
   14000fd26:	add    BYTE PTR [rax],al
   14000fd28:	ror    DWORD PTR [rsi+0x0],cl
   14000fd2b:	add    BYTE PTR [rcx],al
   14000fd2d:	add    BYTE PTR [rax],al
   14000fd2f:	add    al,bl
   14000fd31:	rex.WRX add BYTE PTR [rax],r8b
   14000fd34:	add    BYTE PTR [rax],al
   14000fd36:	add    BYTE PTR [rax],al
   14000fd38:	sbb    DWORD PTR [rdx],ecx
   14000fd3a:	add    al,BYTE PTR [rax]
   14000fd3c:	or     dh,BYTE PTR [rdx]
   14000fd3e:	(bad)  
   14000fd3f:	push   rax
   14000fd40:	movabs ds:0x190000dda800004a,al
   14000fd49:	sub    BYTE PTR [rcx],cl
   14000fd4b:	add    BYTE PTR [rdx],bl
   14000fd4d:	sbb    DWORD PTR fs:[rax],eax
   14000fd50:	sbb    dh,BYTE PTR [rsi+rdx*1]
   14000fd53:	add    BYTE PTR [rdx],bl
   14000fd55:	add    DWORD PTR [rdx],edx
   14000fd57:	add    BYTE PTR [rsi],cl
   14000fd59:	loopne 0x14000fd67
   14000fd5b:	jo     0x14000fd68
   14000fd5d:	push   rax
   14000fd5e:	add    BYTE PTR [rax],al
   14000fd60:	mov    al,0x4a
   14000fd62:	add    BYTE PTR [rax],al
   14000fd64:	add    BYTE PTR [rax],0x0
   14000fd67:	add    BYTE PTR [rcx],bl
   14000fd69:	and    BYTE PTR [rsi],al
   14000fd6b:	add    BYTE PTR [rdx],dl
   14000fd6d:	je     0x14000fd7e
   14000fd6f:	add    BYTE PTR [rdx],dl
   14000fd71:	xor    al,0xc
   14000fd73:	add    BYTE PTR [rdx],dl
   14000fd75:	xchg   edx,eax
   14000fd76:	or     edx,DWORD PTR [rax-0x50]
   14000fd79:	rex.WX add BYTE PTR [rax],al
   14000fd7c:	rex.W add BYTE PTR [rax],al
   14000fd7f:	add    BYTE PTR [rcx],al
   14000fd81:	(bad)  
   14000fd83:	add    BYTE PTR [rdi],cl
   14000fd85:	xor    al,0x7
   14000fd87:	add    BYTE PTR [rdi],cl
   14000fd89:	xor    cl,BYTE PTR [rbx]
   14000fd8b:	jo     0x14000fd8e
   14000fd8d:	clts   
   14000fd8f:	add    BYTE PTR [rdi],cl
   14000fd91:	fs or  eax,0xc340f00
   14000fd97:	add    BYTE PTR [rdi],cl
   14000fd99:	xchg   edx,eax
   14000fd9a:	or     esi,DWORD PTR [rax+0x1]
   14000fd9d:	sbb    BYTE PTR [rax],cl
   14000fd9f:	add    BYTE PTR [rax],bl
   14000fda1:	or     BYTE PTR fs:[rax],al
   14000fda4:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   14000fda8:	sbb    BYTE PTR [rsi+rax*1],dh
   14000fdab:	add    BYTE PTR [rax],bl
   14000fdad:	xor    dl,BYTE PTR [rax+rsi*2]
   14000fdb0:	sbb    DWORD PTR [rdx],ebp
   14000fdb2:	or     eax,DWORD PTR [rax]
   14000fdb4:	sbb    al,0x34
   14000fdb6:	and    al,0x0
   14000fdb8:	sbb    al,0x1
   14000fdba:	sbb    al,BYTE PTR [rax]
   14000fdbc:	adc    al,dh
   14000fdbe:	(bad)  
   14000fdbf:	loopne 0x14000fdcd
   14000fdc1:	ror    BYTE PTR [rdx],1
   14000fdc3:	ror    BYTE PTR [rax],0x70
   14000fdc6:	(bad)  
   14000fdc7:	(bad)  
   14000fdc8:	(bad)  
   14000fdc9:	push   rax
   14000fdca:	add    BYTE PTR [rax],al
   14000fdcc:	mov    al,0x4a
   14000fdce:	add    BYTE PTR [rax],al
   14000fdd0:	rol    BYTE PTR [rax],0x0
   14000fdd3:	add    BYTE PTR [rcx],al
   14000fdd5:	and    DWORD PTR [rdx],ecx
   14000fdd7:	add    BYTE PTR [rcx],ah
   14000fdd9:	xor    al,0x15
   14000fddb:	add    BYTE PTR [rcx],ah
   14000fddd:	mov    dl,0x1a
   14000fddf:	lock sbb al,ah
   14000fde2:	(bad)  
   14000fde3:	rcl    BYTE PTR [rax+rax*8],1
   14000fde6:	adc    dh,BYTE PTR [rax+0x11]
   14000fde9:	(bad)  
   14000fdea:	adc    BYTE PTR [rax+0x1],dl
   14000fded:	adc    al,0x8
   14000fdef:	add    BYTE PTR [rsp+riz*2],dl
   14000fdf2:	or     BYTE PTR [rax],al
   14000fdf4:	adc    al,0x54
   14000fdf6:	(bad)  
   14000fdf7:	add    BYTE PTR [rsp+rsi*1],dl
   14000fdfa:	(bad)  
   14000fdfb:	add    BYTE PTR [rdx+rsi*1],dl
   14000fdfe:	adc    BYTE PTR [rax+0x1],dh
   14000fe01:	or     al,BYTE PTR [rax+rax*1]
   14000fe04:	or     dh,BYTE PTR [rax+rcx*1]
   14000fe07:	add    BYTE PTR [rdx],cl
   14000fe09:	xor    al,BYTE PTR [rsi]
   14000fe0b:	jo     0x14000fe0e
   14000fe0d:	(bad)  
   14000fe0e:	or     al,BYTE PTR [rax]
   14000fe10:	(bad)  
   14000fe11:	push   rsp
   14000fe12:	or     al,0x0
   14000fe14:	(bad)  
   14000fe15:	xor    al,0xa
   14000fe17:	add    BYTE PTR [rsi],dl
   14000fe19:	xor    dl,BYTE PTR [rdx]
   14000fe1b:	lock adc al,ah
   14000fe1e:	(bad)  
   14000fe1f:	ror    BYTE PTR [rax+rsi*2],0xb
   14000fe23:	(bad)  
   14000fe24:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415fe32
   14000fe2a:	or     BYTE PTR [rax],al
   14000fe2c:	adc    eax,0x15000764
   14000fe31:	xor    al,0x6
   14000fe33:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e10f6b
   14000fe39:	adc    ecx,DWORD PTR [rax]
   14000fe3b:	add    BYTE PTR [rbx],dl
   14000fe3d:	xor    al,0xc
   14000fe3f:	add    BYTE PTR [rbx],dl
   14000fe41:	push   rdx
   14000fe42:	or     al,0xf0
   14000fe44:	or     ah,al
   14000fe46:	or     BYTE PTR [rax+0x7],dh
   14000fe49:	(bad)  
   14000fe4a:	(bad)  
   14000fe4b:	push   rax
   14000fe4c:	add    DWORD PTR [rip+0x340d0006],ecx        # 0x1740dfe58
   14000fe52:	or     al,BYTE PTR [rax]
   14000fe54:	or     eax,0x7e00932
   14000fe59:	jo     0x14000fe61
   14000fe5b:	(bad)  
   14000fe5c:	add    DWORD PTR [rsi],ecx
   14000fe5e:	(bad)  
   14000fe5f:	add    BYTE PTR [rsi],cl
   14000fe61:	xor    al,BYTE PTR [rdi]
   14000fe63:	loopne 0x14000fe6a
   14000fe65:	jo     0x14000fe6b
   14000fe67:	(bad)  
   14000fe68:	add    esi,DWORD PTR [rax]
   14000fe6a:	add    dl,BYTE PTR [rax+0x1]
   14000fe6d:	(bad)  
   14000fe6e:	or     al,BYTE PTR [rax]
   14000fe70:	(bad)  
   14000fe71:	push   rsp
   14000fe72:	or     eax,0xb341600
   14000fe77:	add    BYTE PTR [rsi],dl
   14000fe79:	xor    dl,BYTE PTR [rdx]
   14000fe7b:	lock adc al,ah
   14000fe7e:	(bad)  
   14000fe7f:	ror    BYTE PTR [rax+rsi*2],0xb
   14000fe83:	(bad)  
   14000fe84:	add    DWORD PTR [rdx+rcx*1],edx
   14000fe87:	add    BYTE PTR [rsp+rsi*1],dl
   14000fe8a:	or     eax,0x10321400
   14000fe8f:	lock (bad) 
   14000fe91:	loopne 0x14000fe9f
   14000fe93:	ror    BYTE PTR [rdx],1
   14000fe95:	ror    BYTE PTR [rax],0x70
   14000fe98:	(bad)  
   14000fe99:	(bad)  
   14000fe9a:	(bad)  
   14000fe9b:	push   rax
   14000fe9c:	add    DWORD PTR [rax],edx
   14000fe9e:	(bad)  
   14000fe9f:	add    BYTE PTR [rax],dl
   14000fea1:	or     DWORD PTR fs:[rax],eax
   14000fea4:	adc    BYTE PTR [rax+rcx*1],dh
   14000fea7:	add    BYTE PTR [rax],dl
   14000fea9:	xor    cl,BYTE PTR [rax+rsi*2]
   14000feac:	add    DWORD PTR [rdx],edx
   14000feae:	or     BYTE PTR [rax],al
   14000feb0:	adc    dl,BYTE PTR [rsp+rcx*1+0x0]
   14000feb4:	adc    dh,BYTE PTR [rbx+rcx*1]
   14000feb7:	add    BYTE PTR [rdx],dl
   14000feb9:	push   rdx
   14000feba:	(bad)  
   14000febb:	loopne 0x14000fec9
   14000febd:	jo     0x14000feca
   14000febf:	(bad)  
   14000fec0:	add    DWORD PTR [rdi],ecx
   14000fec2:	(bad)  
   14000fec3:	add    BYTE PTR [rdi],cl
   14000fec5:	or     DWORD PTR fs:[rax],eax
   14000fec8:	sysenter 
   14000feca:	or     BYTE PTR [rax],al
   14000fecc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000fecf:	jo     0x14000fed2
   14000fed1:	clts   
   14000fed3:	add    BYTE PTR [rdi],cl
   14000fed5:	or     BYTE PTR fs:[rax],al
   14000fed8:	sysenter 
   14000feda:	(bad)  
   14000fedb:	add    BYTE PTR [rdi],cl
   14000fedd:	xor    cl,BYTE PTR [rbx]
   14000fedf:	jo     0x14000fee2
   14000fee1:	adc    al,0xa
   14000fee3:	add    BYTE PTR [rsp+rsi*1],dl
   14000fee6:	lldt   WORD PTR [rdx+rsi*1]
   14000feea:	adc    al,dh
   14000feec:	(bad)  
   14000feed:	loopne 0x14000fefb
   14000feef:	ror    BYTE PTR [rdx],1
   14000fef1:	ror    BYTE PTR [rax],0x70
   14000fef4:	(bad)  
   14000fef5:	(bad)  
   14000fef6:	(bad)  
   14000fef7:	push   rax
   14000fef8:	add    DWORD PTR [rip+0x74150006],edx        # 0x1b415ff04
   14000fefe:	(bad)  
   14000feff:	add    BYTE PTR [rip+0x15000664],dl        # 0x155010569
   14000ff05:	xor    dl,BYTE PTR [rcx]
   14000ff07:	loopne 0x14000ff0a
   14000ff09:	adc    ecx,DWORD PTR [rax]
   14000ff0b:	add    BYTE PTR [rbx],dl
   14000ff0d:	or     al,BYTE PTR fs:[rax]
   14000ff10:	adc    esi,DWORD PTR [rax+rcx*1]
   14000ff13:	add    BYTE PTR [rbx],dl
   14000ff15:	xor    cl,BYTE PTR [rdi]
   14000ff17:	lock or eax,0x1700be0
   14000ff1d:	lar    eax,WORD PTR [rax]
   14000ff20:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000ff23:	xor    BYTE PTR [rcx],al
   14000ff25:	adc    al,0x6
   14000ff27:	add    BYTE PTR [rsp+rsi*1],dl
   14000ff2a:	or     al,BYTE PTR [rax]
   14000ff2c:	adc    al,0x52
   14000ff2e:	or     eax,0xb600c70
   14000ff33:	push   rax
   14000ff34:	add    DWORD PTR [rdi],ecx
   14000ff36:	(bad)  
   14000ff37:	add    BYTE PTR [rdi],cl
   14000ff39:	or     DWORD PTR fs:[rax],eax
   14000ff3c:	sysenter 
   14000ff3e:	or     BYTE PTR [rax],al
   14000ff40:	rdmsr  
   14000ff42:	or     esi,DWORD PTR [rax+0x1]
   14000ff45:	adc    BYTE PTR [rsi],al
   14000ff47:	add    BYTE PTR [rax],dl
   14000ff49:	or     BYTE PTR fs:[rax],al
   14000ff4c:	adc    BYTE PTR [rdi+rax*1],dh
   14000ff4f:	add    BYTE PTR [rax],dl
   14000ff51:	xor    cl,BYTE PTR [rax+rsi*2]
   14000ff54:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415ff62
   14000ff5a:	or     al,BYTE PTR [rax]
   14000ff5c:	adc    eax,0x15000964
   14000ff61:	xor    al,0x8
   14000ff63:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e110bb
   14000ff69:	adc    eax,0x74150008
   14000ff6e:	or     eax,DWORD PTR [rax]
   14000ff70:	adc    eax,0x15000a64
   14000ff75:	xor    al,0x8
   14000ff77:	add    BYTE PTR [rip+0x19e01152],dl        # 0x159e110cf
   14000ff7d:	and    BYTE PTR [rdi],al
   14000ff7f:	add    BYTE PTR [rsi],cl
   14000ff81:	add    DWORD PTR [rax+rax*1],ebx
   14000ff84:	(bad)  
   14000ff85:	loopne 0x14000ff8c
   14000ff87:	jo     0x14000ff8d
   14000ff89:	(bad)  
   14000ff8a:	add    edx,DWORD PTR [rax+0x2]
   14000ff8d:	xor    BYTE PTR [rax],al
   14000ff8f:	add    BYTE PTR [rax-0x2fffffb6],dh
   14000ff95:	add    BYTE PTR [rax],al
   14000ff97:	add    BYTE PTR [rcx],bl
   14000ff99:	(bad)  
   14000ff9a:	add    al,0x0
   14000ff9c:	or     BYTE PTR [rdx+0x60037004],dl
   14000ffa2:	add    dh,BYTE PTR [rax]
   14000ffa4:	mov    al,0x4a
   14000ffa6:	add    BYTE PTR [rax],al
   14000ffa8:	rex.W add BYTE PTR [rax],al
   14000ffab:	add    BYTE PTR [rcx],al
   14000ffad:	clts   
   14000ffaf:	add    BYTE PTR [rdi],cl
   14000ffb1:	or     al,BYTE PTR fs:[rax]
   14000ffb4:	sysenter 
   14000ffb6:	or     BYTE PTR [rax],al
   14000ffb8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000ffbb:	jo     0x14000ffd6
   14000ffbd:	and    DWORD PTR [rdi],eax
   14000ffbf:	add    BYTE PTR [rdi],cl
   14000ffc1:	xor    al,0x55
   14000ffc3:	add    BYTE PTR [rdi],cl
   14000ffc5:	add    DWORD PTR [rsi+0x0],ecx
   14000ffc8:	or     BYTE PTR [rax+0x7],dh
   14000ffcb:	(bad)  
   14000ffcc:	(bad)  
   14000ffcd:	push   rax
   14000ffce:	add    BYTE PTR [rax],al
   14000ffd0:	mov    al,0x4a
   14000ffd2:	add    BYTE PTR [rax],al
   14000ffd4:	(bad)  
   14000ffd5:	add    al,BYTE PTR [rax]
   14000ffd7:	add    BYTE PTR [rcx],al
   14000ffd9:	clts   
   14000ffdb:	add    BYTE PTR [rdi],cl
   14000ffdd:	or     eax,DWORD PTR fs:[rax]
   14000ffe0:	sysenter 
   14000ffe2:	or     al,BYTE PTR [rax]
   14000ffe4:	(bad)  
   14000ffe6:	or     esi,DWORD PTR [rax+0x1]
   14000ffe9:	clts   
   14000ffeb:	add    BYTE PTR [rdi],cl
   14000ffed:	fs (bad) 
   14000ffef:	add    BYTE PTR [rdi],cl
   14000fff1:	xor    al,0x6
   14000fff3:	add    BYTE PTR [rdi],cl
   14000fff5:	xor    cl,BYTE PTR [rbx]
   14000fff7:	jo     0x140010012
   14000fff9:	sbb    DWORD PTR [rax+rax*1],eax
   14000fffc:	or     dh,BYTE PTR [rdx+rdx*1]
   14000ffff:	add    BYTE PTR [rdx],cl
   140010001:	rol    BYTE PTR [rsi],cl
   140010003:	jo     0x14000ffb5
   140010005:	rex.WX add BYTE PTR [rax],al
   140010008:	(bad)  
   140010009:	add    BYTE PTR [rax],al
   14001000b:	add    BYTE PTR [rcx],bl
   14001000d:	(bad)  
   14001000e:	(bad)  
   14001000f:	add    BYTE PTR [rax],dl
   140010011:	fs (bad) 
   140010013:	add    BYTE PTR [rax],dl
   140010015:	xor    al,0xd
   140010017:	add    BYTE PTR [rax],dl
   140010019:	xchg   edx,eax
   14001001a:	or     al,0x70
   14001001c:	mov    al,0x4a
   14001001e:	add    BYTE PTR [rax],al
   140010020:	rex.W add BYTE PTR [rax],al
   140010023:	add    BYTE PTR [rcx],bl
   140010025:	sub    eax,0x11c000a
   14001002a:	pop    rbp
   14001002b:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e10c21
   140010031:	rol    BYTE PTR [rdi],1
   140010033:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436104aa
   14001003a:	add    dl,BYTE PTR [rax-0x50]
   14001003d:	rex.WX add BYTE PTR [rax],al
   140010040:	rol    BYTE PTR [rdx],1
   140010042:	add    BYTE PTR [rax],al
   140010044:	add    DWORD PTR [rbx],ecx
   140010046:	(bad)  
   140010047:	add    BYTE PTR [rbx],cl
   140010049:	jb     0x140010052
   14001004b:	loopne 0x140010052
   14001004d:	jo     0x140010053
   14001004f:	(bad)  
   140010050:	add    edx,DWORD PTR [rax+0x2]
   140010053:	xor    BYTE PTR [rcx],al
   140010055:	adc    cl,BYTE PTR [rax]
   140010057:	add    BYTE PTR [rdx],dl
   140010059:	push   rsp
   14001005a:	or     al,BYTE PTR [rax]
   14001005c:	adc    dh,BYTE PTR [rcx+rcx*1]
   14001005f:	add    BYTE PTR [rdx],dl
   140010061:	xor    cl,BYTE PTR [rsi]
   140010063:	loopne 0x140010071
   140010065:	jo     0x140010072
   140010067:	(bad)  
   140010068:	add    DWORD PTR [rdx],edx
   14001006a:	or     BYTE PTR [rax],al
   14001006c:	adc    dl,BYTE PTR [rbx+rcx*1+0x0]
   140010070:	adc    dh,BYTE PTR [rdx+rcx*1]
   140010073:	add    BYTE PTR [rdx],dl
   140010075:	xor    cl,BYTE PTR [rsi]
   140010077:	loopne 0x140010085
   140010079:	jo     0x140010086
   14001007b:	(bad)  
   14001007c:	add    DWORD PTR [rcx],ebx
   14001007e:	or     al,BYTE PTR [rax]
   140010080:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140010084:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140010088:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14001008c:	sbb    DWORD PTR [rsi+rax*1],esi
   14001008f:	add    BYTE PTR [rcx],bl
   140010091:	xor    dl,BYTE PTR [rip+0x41719e0]        # 0x144181a77
   140010097:	add    BYTE PTR [rax],cl
   140010099:	jb     0x14001009f
   14001009b:	jo     0x1400100a0
   14001009d:	(bad)  
   14001009e:	add    dh,BYTE PTR [rax]
   1400100a0:	mov    al,0x4a
   1400100a2:	add    BYTE PTR [rax],al
   1400100a4:	xor    BYTE PTR [rax],al
   1400100a6:	add    BYTE PTR [rax],al
   1400100a8:	add    DWORD PTR [rsi],eax
   1400100aa:	add    al,BYTE PTR [rax]
   1400100ac:	(bad)  
   1400100ad:	jb     0x1400100b1
   1400100af:	xor    BYTE PTR [rcx],al
   1400100b1:	clts   
   1400100b3:	add    BYTE PTR [rdi],cl
   1400100b5:	or     BYTE PTR fs:[rax],al
   1400100b8:	sysenter 
   1400100ba:	(bad)  
   1400100bb:	add    BYTE PTR [rdi],cl
   1400100bd:	xor    cl,BYTE PTR [rbx]
   1400100bf:	jo     0x1400100c2
   1400100c1:	adc    al,0x6
   1400100c3:	add    BYTE PTR [rsp+riz*2],dl
   1400100c6:	or     al,BYTE PTR [rax]
   1400100c8:	adc    al,0x34
   1400100ca:	or     DWORD PTR [rax],eax
   1400100cc:	adc    al,0x52
   1400100ce:	adc    BYTE PTR [rax+0x19],dh
   1400100d1:	sbb    al,BYTE PTR [rcx]
   1400100d3:	add    BYTE PTR [rbx],cl
   1400100d5:	movabs ds:0x4000004ab00000,al
   1400100de:	add    BYTE PTR [rax],al
   1400100e0:	sbb    DWORD PTR [rbx],edx
   1400100e2:	add    DWORD PTR [rax],eax
   1400100e4:	add    al,0x82
   1400100e6:	add    BYTE PTR [rax],al
   1400100e8:	mov    al,0x4a
   1400100ea:	add    BYTE PTR [rax],al
   1400100ec:	xor    BYTE PTR [rax],al
   1400100ee:	add    BYTE PTR [rax],al
   1400100f0:	add    DWORD PTR [rdi],eax
   1400100f2:	add    DWORD PTR [rax],eax
   1400100f4:	(bad)  
   1400100f5:	ret    0x0
   1400100f8:	add    DWORD PTR [rdi],eax
   1400100fa:	add    DWORD PTR [rax],eax
   1400100fc:	(bad)  
   1400100fd:	(bad)  
   1400100fe:	add    BYTE PTR [rax],al
   140010100:	pop    rax
   140010101:	(bad)  
   140010102:	add    DWORD PTR [rax],eax
	...
   14001010c:	mov    BYTE PTR [rax],cl
   14001010e:	add    DWORD PTR [rax],eax
   140010110:	js     0x1400100e5
   140010112:	add    BYTE PTR [rax],al
   140010114:	and    BYTE PTR [rdi],al
   140010116:	add    DWORD PTR [rax],eax
	...
   140010120:	(bad)  
   140010121:	or     BYTE PTR [rcx],al
   140010123:	add    BYTE PTR [rax-0x2c],al
   140010126:	add    BYTE PTR [rax],al
   140010128:	loopne 0x14001012c
   14001012a:	add    DWORD PTR [rax],eax
	...
   140010134:	or     BYTE PTR [rsi],cl
   140010136:	add    DWORD PTR [rax],eax
   140010138:	add    al,dl
   14001013a:	add    BYTE PTR [rax],al
   14001013c:	and    BYTE PTR [rcx+rax*1],al
	...
   140010147:	add    BYTE PTR [rsi+rcx*1],dl
   14001014a:	add    DWORD PTR [rax],eax
   14001014c:	rex rol DWORD PTR [rax],1
   14001014f:	add    al,dh
   140010151:	add    al,BYTE PTR [rcx]
	...
   14001015b:	add    BYTE PTR [rsi],bh
   14001015d:	(bad)  
   14001015e:	add    DWORD PTR [rax],eax
   140010160:	adc    al,dl
   140010162:	add    BYTE PTR [rax],al
   140010164:	add    BYTE PTR [rbx],0x1
	...
   14001016f:	add    BYTE PTR [rsi+0xe],bl
   140010172:	add    DWORD PTR [rax],eax
   140010174:	movabs al,ds:0x103f80000d0
   14001017d:	add    BYTE PTR [rax],al
   14001017f:	add    BYTE PTR [rax],al
   140010181:	add    BYTE PTR [rax],al
   140010183:	add    BYTE PTR [rax+0x1800010e],cl
   140010189:	rol    DWORD PTR [rax],1
   14001018b:	add    al,al
   14001018d:	add    eax,DWORD PTR [rcx]
	...
   140010197:	add    BYTE PTR [rdx-0x1ffffef2],dh
   14001019d:	rol    BYTE PTR [rax],1
   14001019f:	add    BYTE PTR [rax],bl
   1400101a1:	(bad)  
   1400101a2:	add    DWORD PTR [rax],eax
	...
   1400101ac:	ror    BYTE PTR [rsi],cl
   1400101ae:	add    DWORD PTR [rax],eax
   1400101b0:	cmp    bl,dl
   1400101b2:	add    BYTE PTR [rax],al
   1400101b4:	nop
   1400101b5:	add    eax,0x1
   1400101ba:	add    BYTE PTR [rax],al
   1400101bc:	add    BYTE PTR [rax],al
   1400101be:	add    BYTE PTR [rax],al
   1400101c0:	test   BYTE PTR [rsi],0x1
   1400101c3:	add    BYTE PTR [rax-0x27ffff2e],dh
   1400101c9:	add    al,0x1
	...
   1400101d3:	add    BYTE PTR [rsi],bl
   1400101d5:	sgdt   [rax]
   1400101d8:	clc    
   1400101d9:	rol    DWORD PTR [rax],1
   1400101db:	add    BYTE PTR [rax+0x5],cl
   1400101de:	add    DWORD PTR [rax],eax
	...
   1400101e8:	rex sgdt [rax]
   1400101ec:	push   0x780000d2
   1400101f1:	add    eax,0x1
   1400101f6:	add    BYTE PTR [rax],al
   1400101f8:	add    BYTE PTR [rax],al
   1400101fa:	add    BYTE PTR [rax],al
   1400101fc:	push   0xffffffff9800010f
   140010201:	rol    BYTE PTR [rax],cl
   140010203:	add    BYTE PTR [rax+0x104],cl
   140010209:	add    BYTE PTR [rax],al
   14001020b:	add    BYTE PTR [rax],al
   14001020d:	add    BYTE PTR [rax],al
   14001020f:	add    BYTE PTR [rdx-0x57fffef1],cl
   140010215:	rol    DWORD PTR [rax],1
   140010217:	add    BYTE PTR [rax],al
   140010219:	(bad)  
   14001021a:	add    DWORD PTR [rax],eax
	...
   140010224:	scas   al,BYTE PTR es:[rdi]
   140010225:	sgdt   [rax]
   140010228:	and    bl,dl
   14001022a:	add    BYTE PTR [rax],al
   14001022c:	and    BYTE PTR [rip+0x1],al        # 0x140010233
   140010232:	add    BYTE PTR [rax],al
   140010234:	add    BYTE PTR [rax],al
   140010236:	add    BYTE PTR [rax],al
   140010238:	ror    BYTE PTR [rdi],cl
   14001023a:	add    DWORD PTR [rax],eax
   14001023c:	rol    BYTE PTR [rax],cl
   14001023f:	add    BYTE PTR [rax+0x103],dh
   140010245:	add    BYTE PTR [rax],al
   140010247:	add    BYTE PTR [rax],al
   140010249:	add    BYTE PTR [rax],al
   14001024b:	add    ah,dh
   14001024d:	sgdt   [rax]
   140010250:	rcl    al,1
   140010252:	add    BYTE PTR [rax],al
   140010254:	js     0x14001025a
   140010256:	add    DWORD PTR [rax],eax
	...
   140010260:	(bad)  
   140010261:	adc    BYTE PTR [rcx],al
   140010263:	add    BYTE PTR [rax+0x300000d1],bl
   140010269:	add    eax,0x1
   14001026e:	add    BYTE PTR [rax],al
   140010270:	add    BYTE PTR [rax],al
   140010272:	add    BYTE PTR [rax],al
   140010274:	cmp    dl,BYTE PTR [rax]
   140010276:	add    DWORD PTR [rax],eax
   140010278:	push   rax
   140010279:	rol    BYTE PTR [rax],cl
   14001027b:	add    BYTE PTR [rax+0x6],al
   14001027e:	add    DWORD PTR [rax],eax
	...
   140010288:	pop    rsi
   140010289:	adc    BYTE PTR [rcx],al
   14001028b:	add    BYTE PTR [rax-0x2d],ah
   14001028e:	add    BYTE PTR [rax],al
   140010290:	lock add eax,0x1
   140010296:	add    BYTE PTR [rax],al
   140010298:	add    BYTE PTR [rax],al
   14001029a:	add    BYTE PTR [rax],al
   14001029c:	mov    esi,0x10000113
   1400102a1:	rol    DWORD PTR [rax],cl
   1400102a3:	add    al,cl
   1400102a5:	add    al,0x1
	...
   1400102af:	add    dh,ah
   1400102b1:	adc    eax,DWORD PTR [rcx]
   1400102b3:	add    al,ch
   1400102b5:	rol    DWORD PTR [rax],1
   1400102b7:	add    al,ch
   1400102b9:	add    eax,DWORD PTR [rcx]
	...
   1400102c3:	add    BYTE PTR [rax],cl
   1400102c5:	adc    al,0x1
   1400102c7:	add    BYTE PTR [rax],cl
   1400102c9:	rol    DWORD PTR [rax],1
	...
   1400102df:	add    al,ah
   1400102e1:	or     BYTE PTR [rcx],al
	...
   1400102ef:	add    BYTE PTR [rdx+0x10b],bl
   1400102f5:	add    BYTE PTR [rax],al
   1400102f7:	add    BYTE PTR [rax+0x109],ch
   1400102fd:	add    BYTE PTR [rax],al
   1400102ff:	add    BYTE PTR [rsi+0x13],bl
   140010302:	add    DWORD PTR [rax],eax
   140010304:	add    BYTE PTR [rax],al
   140010306:	add    BYTE PTR [rax],al
   140010308:	adc    rax,QWORD PTR [rcx]
   14001030b:	add    BYTE PTR [rax],al
   14001030d:	add    BYTE PTR [rax],al
   14001030f:	add    dh,bh
   140010311:	or     BYTE PTR [rcx],al
   140010313:	add    BYTE PTR [rax],al
   140010315:	add    BYTE PTR [rax],al
   140010317:	add    BYTE PTR [rbx+rcx*1+0x1],dh
   14001031e:	add    BYTE PTR [rax],al
   140010320:	cmp    al,0xc
   140010322:	add    DWORD PTR [rax],eax
   140010324:	add    BYTE PTR [rax],al
   140010326:	add    BYTE PTR [rax],al
   140010328:	rex.WRX or al,0x1
   14001032b:	add    BYTE PTR [rax],al
   14001032d:	add    BYTE PTR [rax],al
   14001032f:	add    BYTE PTR [rdx],ch
   140010331:	or     eax,DWORD PTR [rcx]
   140010333:	add    BYTE PTR [rax],al
   140010335:	add    BYTE PTR [rax],al
   140010337:	add    BYTE PTR [rsp+rcx*1+0x1],ah
   14001033b:	add    BYTE PTR [rax],al
   14001033d:	add    BYTE PTR [rax],al
   14001033f:	add    BYTE PTR [rsi+0xc],bh
   140010342:	add    DWORD PTR [rax],eax
   140010344:	add    BYTE PTR [rax],al
   140010346:	add    BYTE PTR [rax],al
   140010348:	xchg   esp,eax
   140010349:	or     al,0x1
   14001034b:	add    BYTE PTR [rax],al
   14001034d:	add    BYTE PTR [rax],al
   14001034f:	add    ah,dl
   140010351:	or     eax,DWORD PTR [rcx]
   140010353:	add    BYTE PTR [rax],al
   140010355:	add    BYTE PTR [rax],al
   140010357:	add    al,al
   140010359:	or     al,BYTE PTR [rcx]
   14001035b:	add    BYTE PTR [rax],al
   14001035d:	add    BYTE PTR [rax],al
   14001035f:	add    BYTE PTR [rsp+rcx*1],dl
   140010362:	add    DWORD PTR [rax],eax
   140010364:	add    BYTE PTR [rax],al
   140010366:	add    BYTE PTR [rax],al
   140010368:	js     0x140010374
   14001036a:	add    DWORD PTR [rax],eax
   14001036c:	add    BYTE PTR [rax],al
   14001036e:	add    BYTE PTR [rax],al
   140010370:	cmp    al,0x9
   140010372:	add    DWORD PTR [rax],eax
	...
   140010380:	(bad)  
   140010381:	adc    al,BYTE PTR [rcx]
   140010383:	add    BYTE PTR [rax],al
   140010385:	add    BYTE PTR [rax],al
   140010387:	add    BYTE PTR [rdx],dl
   140010389:	or     DWORD PTR [rcx],eax
   14001038b:	add    BYTE PTR [rax],al
   14001038d:	add    BYTE PTR [rax],al
   14001038f:	add    BYTE PTR [rax+0xb],bh
   140010392:	add    DWORD PTR [rax],eax
   140010394:	add    BYTE PTR [rax],al
   140010396:	add    BYTE PTR [rax],al
   140010398:	fmul   DWORD PTR [rip+0x1]        # 0x14001039f
   14001039e:	add    BYTE PTR [rax],al
   1400103a0:	ss or  eax,0x1
	...
   1400103ae:	add    BYTE PTR [rax],al
   1400103b0:	loop   0x1400103be
   1400103b2:	add    DWORD PTR [rax],eax
	...
   1400103c0:	or     BYTE PTR [rdx],cl
   1400103c2:	add    DWORD PTR [rax],eax
   1400103c4:	add    BYTE PTR [rax],al
   1400103c6:	add    BYTE PTR [rax],al
   1400103c8:	xchg   BYTE PTR [rcx],cl
   1400103ca:	add    DWORD PTR [rax],eax
   1400103cc:	add    BYTE PTR [rax],al
   1400103ce:	add    BYTE PTR [rax],al
   1400103d0:	xor    BYTE PTR [rcx],cl
   1400103d2:	add    DWORD PTR [rax],eax
   1400103d4:	add    BYTE PTR [rax],al
   1400103d6:	add    BYTE PTR [rax],al
   1400103d8:	es or  al,0x1
	...
   1400103e7:	add    BYTE PTR [rdx+0x113],dh
	...
   1400103f5:	add    BYTE PTR [rax],al
   1400103f7:	add    BYTE PTR [rsi+0x9],cl
   1400103fa:	add    DWORD PTR [rax],eax
   1400103fc:	add    BYTE PTR [rax],al
   1400103fe:	add    BYTE PTR [rax],al
   140010400:	and    cl,BYTE PTR [rcx]
   140010402:	add    DWORD PTR [rax],eax
   140010404:	add    BYTE PTR [rax],al
   140010406:	add    BYTE PTR [rax],al
   140010408:	push   rsp
   140010409:	or     eax,0x1
   14001040e:	add    BYTE PTR [rax],al
   140010410:	mov    BYTE PTR [rbx],cl
   140010412:	add    DWORD PTR [rax],eax
	...
   140010420:	movabs ds:0xf40000000000010a,al
   140010429:	or     eax,0x1
   14001042e:	add    BYTE PTR [rax],al
   140010430:	int3   
   140010431:	or     DWORD PTR [rcx],eax
   140010433:	add    BYTE PTR [rax],al
   140010435:	add    BYTE PTR [rax],al
   140010437:	add    BYTE PTR [rdx+0x10d],al
   14001043d:	add    BYTE PTR [rax],al
   14001043f:	add    al,dh
   140010441:	or     al,0x1
   140010443:	add    BYTE PTR [rax],al
   140010445:	add    BYTE PTR [rax],al
   140010447:	add    BYTE PTR [rcx*1+0x1],ah
   14001044e:	add    BYTE PTR [rax],al
   140010450:	lods   al,BYTE PTR ds:[rsi]
   140010451:	or     al,0x1
   140010453:	add    BYTE PTR [rax],al
   140010455:	add    BYTE PTR [rax],al
   140010457:	add    BYTE PTR [rax+0x10d],bl
   14001045d:	add    BYTE PTR [rax],al
   14001045f:	add    ah,ch
   140010461:	or     BYTE PTR [rcx],al
   140010463:	add    BYTE PTR [rax],al
   140010465:	add    BYTE PTR [rax],al
   140010467:	add    BYTE PTR [rax+0x9],ah
   14001046a:	add    DWORD PTR [rax],eax
	...
   140010478:	push   0x10d
	...
   140010485:	add    BYTE PTR [rax],al
   140010487:	add    BYTE PTR [rsi+0x113],al
   14001048d:	add    BYTE PTR [rax],al
   14001048f:	add    dl,ch
   140010491:	or     eax,DWORD PTR [rcx]
   140010493:	add    BYTE PTR [rax],al
   140010495:	add    BYTE PTR [rax],al
   140010497:	add    BYTE PTR [rdx+rdx*1+0x1],ch
   14001049b:	add    BYTE PTR [rax],al
   14001049d:	add    BYTE PTR [rax],al
   14001049f:	add    BYTE PTR [rsi],cl
   1400104a1:	or     eax,0x1
   1400104a6:	add    BYTE PTR [rax],al
   1400104a8:	not    BYTE PTR [rdx]
   1400104aa:	add    DWORD PTR [rax],eax
   1400104ac:	add    BYTE PTR [rax],al
   1400104ae:	add    BYTE PTR [rax],al
   1400104b0:	or     al,BYTE PTR fs:[rcx]
   1400104b3:	add    BYTE PTR [rax],al
   1400104b5:	add    BYTE PTR [rax],al
   1400104b7:	add    BYTE PTR [rax],bh
   1400104b9:	adc    eax,DWORD PTR [rcx]
	...
   1400104c7:	add    BYTE PTR [rdx+rdx*1+0x1],dl
	...
   1400104d6:	add    BYTE PTR [rax],al
   1400104d8:	(bad)  
   1400104d9:	adc    eax,DWORD PTR [rcx]
   1400104db:	add    BYTE PTR [rax],al
   1400104dd:	add    BYTE PTR [rax],al
   1400104df:	add    BYTE PTR [rsi+0x13],ch
   1400104e2:	add    DWORD PTR [rax],eax
   1400104e4:	add    BYTE PTR [rax],al
   1400104e6:	add    BYTE PTR [rax],al
   1400104e8:	ror    BYTE PTR [rcx],0x1
   1400104eb:	add    BYTE PTR [rax],al
   1400104ed:	add    BYTE PTR [rax],al
   1400104ef:	add    BYTE PTR [rdx+rdx*1+0x1],ch
   1400104f6:	add    BYTE PTR [rax],al
   1400104f8:	adc    BYTE PTR [rdx],dl
   1400104fa:	add    DWORD PTR [rax],eax
   1400104fc:	add    BYTE PTR [rax],al
   1400104fe:	add    BYTE PTR [rax],al
   140010500:	push   rdx
   140010501:	adc    al,BYTE PTR [rcx]
   140010503:	add    BYTE PTR [rax],al
   140010505:	add    BYTE PTR [rax],al
   140010507:	add    ah,al
   140010509:	or     eax,DWORD PTR [rcx]
   14001050b:	add    BYTE PTR [rax],al
   14001050d:	add    BYTE PTR [rax],al
   14001050f:	add    BYTE PTR [rcx*1+0x1],bl
	...
   14001051e:	add    BYTE PTR [rax],al
   140010520:	cli    
   140010521:	or     eax,DWORD PTR [rcx]
	...
   14001052f:	add    BYTE PTR [rsi+0x10d],ch
   140010535:	add    BYTE PTR [rax],al
   140010537:	add    al,cl
   140010539:	or     eax,0x1
	...
   140010546:	add    BYTE PTR [rax],al
   140010548:	(bad)  
   140010549:	or     al,BYTE PTR [rcx]
   14001054b:	add    BYTE PTR [rax],al
   14001054d:	add    BYTE PTR [rax],al
   14001054f:	add    dl,dh
   140010551:	or     al,BYTE PTR [rcx]
   140010553:	add    BYTE PTR [rax],al
   140010555:	add    BYTE PTR [rax],al
   140010557:	add    BYTE PTR [rax+0x112],al
   14001055d:	add    BYTE PTR [rax],al
   14001055f:	add    BYTE PTR [rdx],bl
   140010561:	or     al,BYTE PTR [rcx]
   140010563:	add    BYTE PTR [rax],al
   140010565:	add    BYTE PTR [rax],al
   140010567:	add    BYTE PTR [rax+0xa],dl
   14001056a:	add    DWORD PTR [rax],eax
	...
   140010578:	cmp    al,0xb
   14001057a:	add    DWORD PTR [rax],eax
   14001057c:	add    BYTE PTR [rax],al
   14001057e:	add    BYTE PTR [rax],al
   140010580:	or     al,BYTE PTR ss:[rcx]
	...
   14001058f:	add    BYTE PTR [rdx+0x111],bl
   140010595:	add    BYTE PTR [rax],al
   140010597:	add    BYTE PTR [rsi+0x113],dl
   14001059d:	add    BYTE PTR [rax],al
   14001059f:	add    BYTE PTR [rcx+rdx*1+0x1],bh
   1400105a6:	add    BYTE PTR [rax],al
   1400105a8:	cmp    BYTE PTR [rdx],dl
   1400105aa:	add    DWORD PTR [rax],eax
   1400105ac:	add    BYTE PTR [rax],al
   1400105ae:	add    BYTE PTR [rax],al
   1400105b0:	jle    0x1400105c3
   1400105b2:	add    DWORD PTR [rax],eax
   1400105b4:	add    BYTE PTR [rax],al
   1400105b6:	add    BYTE PTR [rax],al
   1400105b8:	xchg   edx,eax
   1400105b9:	or     DWORD PTR [rcx],eax
   1400105bb:	add    BYTE PTR [rax],al
   1400105bd:	add    BYTE PTR [rax],al
   1400105bf:	add    al,dh
   1400105c1:	adc    DWORD PTR [rcx],eax
   1400105c3:	add    BYTE PTR [rax],al
   1400105c5:	add    BYTE PTR [rax],al
   1400105c7:	add    dh,dl
   1400105c9:	adc    al,BYTE PTR [rcx]
   1400105cb:	add    BYTE PTR [rax],al
   1400105cd:	add    BYTE PTR [rax],al
   1400105cf:	add    ah,cl
   1400105d1:	or     al,0x1
   1400105d3:	add    BYTE PTR [rax],al
   1400105d5:	add    BYTE PTR [rax],al
   1400105d7:	add    BYTE PTR [rdx],bl
   1400105d9:	adc    eax,DWORD PTR [rcx]
   1400105db:	add    BYTE PTR [rax],al
   1400105dd:	add    BYTE PTR [rax],al
   1400105df:	add    dl,bl
   1400105e1:	adc    DWORD PTR [rcx],eax
	...
   1400105ef:	add    BYTE PTR [rdx],ch
   1400105f1:	adc    al,BYTE PTR [rcx]
	...
   1400105ff:	add    BYTE PTR [rsi],al
   140010601:	or     eax,DWORD PTR [rcx]
   140010603:	add    BYTE PTR [rax],al
   140010605:	add    BYTE PTR [rax],al
   140010607:	add    BYTE PTR [rdx+0xb],dl
   14001060a:	add    DWORD PTR [rax],eax
	...
   140010618:	out    dx,al
   140010619:	or     DWORD PTR [rcx],eax
   14001061b:	add    BYTE PTR [rax],al
   14001061d:	add    BYTE PTR [rax],al
   14001061f:	add    al,ah
   140010621:	or     DWORD PTR [rcx],eax
   140010623:	add    BYTE PTR [rax],al
   140010625:	add    BYTE PTR [rax],al
   140010627:	add    BYTE PTR [rax+0x10a],dl
   14001062d:	add    BYTE PTR [rax],al
   14001062f:	add    BYTE PTR [rcx+rcx*1+0x1],dh
	...
   14001063f:	add    BYTE PTR [rbp+0x0],al
   140010642:	add    BYTE PTR [rax],al
   140010644:	add    BYTE PTR [rax],al
   140010646:	add    BYTE PTR [rax+0x63],al
   14001064c:	add    BYTE PTR [rax],al
   14001064e:	add    BYTE PTR [rax+0x0],al
   140010654:	add    BYTE PTR [rax],al
   140010656:	add    BYTE PTR [rax],al
   140010658:	(bad)  
   140010659:	or     BYTE PTR [rcx],al
   14001065b:	add    BYTE PTR [rax],al
   14001065d:	add    BYTE PTR [rax],al
   14001065f:	add    dl,dh
   140010661:	(bad)  
   140010662:	add    DWORD PTR [rax],eax
   140010664:	add    BYTE PTR [rax],al
   140010666:	add    BYTE PTR [rax],al
   140010668:	test   BYTE PTR [rax],dl
   14001066a:	add    DWORD PTR [rax],eax
   14001066c:	add    BYTE PTR [rax],al
   14001066e:	add    BYTE PTR [rax],al
   140010670:	js     0x140010682
   140010672:	add    DWORD PTR [rax],eax
   140010674:	add    BYTE PTR [rax],al
   140010676:	add    BYTE PTR [rax],al
   140010678:	push   0x10
   14001067a:	add    DWORD PTR [rax],eax
   14001067c:	add    BYTE PTR [rax],al
   14001067e:	add    BYTE PTR [rax],al
   140010680:	cwde   
   140010681:	(bad)  
   140010682:	add    DWORD PTR [rax],eax
   140010684:	add    BYTE PTR [rax],al
   140010686:	add    BYTE PTR [rax],al
   140010688:	adc    cl,BYTE PTR [rax]
   14001068a:	add    DWORD PTR [rax],eax
   14001068c:	add    BYTE PTR [rax],al
   14001068e:	add    BYTE PTR [rax],al
   140010690:	xor    al,0x8
   140010692:	add    DWORD PTR [rax],eax
   140010694:	add    BYTE PTR [rax],al
   140010696:	add    BYTE PTR [rax],al
   140010698:	fadd   DWORD PTR [rdi]
   14001069a:	add    DWORD PTR [rax],eax
   14001069c:	add    BYTE PTR [rax],al
   14001069e:	add    BYTE PTR [rax],al
   1400106a0:	pop    rsp
   1400106a1:	or     BYTE PTR [rcx],al
   1400106a3:	add    BYTE PTR [rax],al
   1400106a5:	add    BYTE PTR [rax],al
   1400106a7:	add    dh,al
   1400106a9:	(bad)  
   1400106aa:	add    DWORD PTR [rax],eax
   1400106ac:	add    BYTE PTR [rax],al
   1400106ae:	add    BYTE PTR [rax],al
   1400106b0:	push   0x8
   1400106b2:	add    DWORD PTR [rax],eax
   1400106b4:	add    BYTE PTR [rax],al
   1400106b6:	add    BYTE PTR [rax],al
   1400106b8:	je     0x1400106c2
   1400106ba:	add    DWORD PTR [rax],eax
   1400106bc:	add    BYTE PTR [rax],al
   1400106be:	add    BYTE PTR [rax],al
   1400106c0:	mov    ah,0x7
   1400106c2:	add    DWORD PTR [rax],eax
   1400106c4:	add    BYTE PTR [rax],al
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400106c9:	(bad)  
   1400106ca:	add    DWORD PTR [rax],eax
   1400106cc:	add    BYTE PTR [rax],al
   1400106ce:	add    BYTE PTR [rax],al
   1400106d0:	or     BYTE PTR ds:[rcx],al
   1400106d3:	add    BYTE PTR [rax],al
   1400106d5:	add    BYTE PTR [rax],al
   1400106d7:	add    al,ah
   1400106d9:	(bad)  
   1400106da:	add    DWORD PTR [rax],eax
   1400106dc:	add    BYTE PTR [rax],al
   1400106de:	add    BYTE PTR [rax],al
   1400106e0:	rex.WX or BYTE PTR [rcx],al
   1400106e3:	add    BYTE PTR [rax],al
   1400106e5:	add    BYTE PTR [rax],al
   1400106e7:	add    al,ch
   1400106e9:	(bad)  
   1400106ea:	add    DWORD PTR [rax],eax
   1400106ec:	add    BYTE PTR [rax],al
   1400106ee:	add    BYTE PTR [rax],al
   1400106f0:	sub    cl,BYTE PTR [rax]
   1400106f2:	add    DWORD PTR [rax],eax
   1400106f4:	add    BYTE PTR [rax],al
   1400106f6:	add    BYTE PTR [rax],al
   1400106f8:	xor    dl,BYTE PTR [rcx+rax*1]
   1400106fb:	add    BYTE PTR [rax],al
   1400106fd:	add    BYTE PTR [rax],al
   1400106ff:	add    BYTE PTR [rax],ch
   140010701:	adc    al,0x1
   140010703:	add    BYTE PTR [rax],al
   140010705:	add    BYTE PTR [rax],al
   140010707:	add    BYTE PTR [rdx+0x8],dl
   14001070a:	add    DWORD PTR [rax],eax
   14001070c:	add    BYTE PTR [rax],al
   14001070e:	add    BYTE PTR [rax],al
   140010710:	cmp    al,0x14
   140010712:	add    DWORD PTR [rax],eax
	...
   140010720:	push   0x11
   140010722:	add    DWORD PTR [rax],eax
   140010724:	add    BYTE PTR [rax],al
   140010726:	add    BYTE PTR [rax],al
   140010728:	pop    rsi
   140010729:	adc    DWORD PTR [rcx],eax
   14001072b:	add    BYTE PTR [rax],al
   14001072d:	add    BYTE PTR [rax],al
   14001072f:	add    BYTE PTR [rax+0x11],cl
   140010732:	add    DWORD PTR [rax],eax
   140010734:	add    BYTE PTR [rax],al
   140010736:	add    BYTE PTR [rax],al
   140010738:	adc    DWORD PTR ss:[rcx],eax
   14001073b:	add    BYTE PTR [rax],al
   14001073d:	add    BYTE PTR [rax],al
   14001073f:	add    BYTE PTR [rsi],bl
   140010741:	adc    DWORD PTR [rcx],eax
   140010743:	add    BYTE PTR [rax],al
   140010745:	add    BYTE PTR [rax],al
   140010747:	add    al,bh
   140010749:	adc    BYTE PTR [rcx],al
   14001074b:	add    BYTE PTR [rax],al
   14001074d:	add    BYTE PTR [rax],al
   14001074f:	add    ah,ah
   140010751:	adc    BYTE PTR [rcx],al
   140010753:	add    BYTE PTR [rax],al
   140010755:	add    BYTE PTR [rax],al
   140010757:	add    ah,cl
   140010759:	adc    BYTE PTR [rcx],al
   14001075b:	add    BYTE PTR [rax],al
   14001075d:	add    BYTE PTR [rax],al
   14001075f:	add    BYTE PTR [rax+rdx*1+0x1],dh
   140010766:	add    BYTE PTR [rax],al
   140010768:	test   al,0x10
   14001076a:	add    DWORD PTR [rax],eax
   14001076c:	add    BYTE PTR [rax],al
   14001076e:	add    BYTE PTR [rax],al
   140010770:	(bad)  
   140010771:	adc    BYTE PTR [rcx],al
   140010773:	add    BYTE PTR [rax],al
   140010775:	add    BYTE PTR [rax],al
   140010777:	add    dl,al
   140010779:	or     BYTE PTR [rcx],al
   14001077b:	add    BYTE PTR [rax],al
   14001077d:	add    BYTE PTR [rax],al
   14001077f:	add    BYTE PTR [rax+0x108],ch
   140010785:	add    BYTE PTR [rax],al
   140010787:	add    BYTE PTR [rax+rcx*1+0x1],dl
	...
   140010796:	add    BYTE PTR [rax],al
   140010798:	push   rbp
   140010799:	add    BYTE PTR [rdi+0x58],bl
   14001079c:	movsxd esi,DWORD PTR [rax+0x74]
   14001079f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400107a8:	pop    rdi
   1400107a9:	(bad)  
   1400107aa:	ins    DWORD PTR es:[rdi],dx
   1400107ab:	jae    0x140010814
   1400107ad:	pop    rdi
   1400107ae:	gs js  0x14001081a
   1400107b1:	je     0x1400107b3
   1400107b3:	add    BYTE PTR [rbp+0x775f5f00],bl
   1400107b9:	addr32 gs je 0x14001082a
   1400107bd:	(bad)  
   1400107be:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400107c5:	add    BYTE PTR [rsi+0x735f5f00],cl
   1400107cb:	gs je  0x14001082d
   1400107ce:	(bad)  
   1400107cf:	jo     0x140010841
   1400107d1:	pop    rdi
   1400107d2:	je     0x14001084d
   1400107d4:	jo     0x14001083b
   1400107d6:	add    BYTE PTR [rax],al
   1400107d8:	xor    al,BYTE PTR [riz*2+0x746978]
   1400107df:	add    BYTE PTR [rsi],cl
   1400107e1:	add    DWORD PTR [rdi+0x65],ebx
   1400107e4:	js     0x14001084f
   1400107e6:	je     0x1400107e8
   1400107e8:	rol    DWORD PTR [rax],0x5f
   1400107eb:	movsxd esp,DWORD PTR [rbp+0x78]
   1400107ee:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   1400107f6:	jae    0x14001085d
   1400107f8:	je     0x14001086f
   1400107fa:	jae    0x140010861
   1400107fc:	jb     0x14001086b
   1400107fe:	(bad)  
   1400107ff:	je     0x140010869
   140010801:	gs jb  0x140010876
   140010804:	add    BYTE PTR [rax],al
   140010806:	jge    0x140010809
   140010808:	pop    rdi
   140010809:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140010810:	ins    DWORD PTR es:[rdi],dx
   140010811:	add    BYTE PTR [rdi+0x0],dl
   140010814:	pop    rdi
   140010815:	pop    rdi
   140010816:	rex.XB pop r15
   140010818:	jae    0x14001088a
   14001081a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001081e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140010825:	ins    BYTE PTR es:[rdi],dx
   140010826:	gs jb  0x140010829
   140010829:	add    BYTE PTR [rdx+0x63775f03],al
   14001082f:	ins    DWORD PTR es:[rdi],dx
   140010830:	fs ins BYTE PTR es:[rdi],dx
   140010832:	outs   dx,BYTE PTR ds:[rsi]
   140010833:	add    BYTE PTR [rdi],ah
   140010835:	add    DWORD PTR [rdi+0x66],ebx
   140010838:	ins    DWORD PTR es:[rdi],dx
   140010839:	outs   dx,DWORD PTR ds:[rsi]
   14001083a:	fs add BYTE PTR gs:[rax],al
   14001083e:	rol    BYTE PTR [rax],cl
   140010840:	pop    rdi
   140010841:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140010844:	ins    DWORD PTR es:[rdi],dx
   140010845:	outs   dx,DWORD PTR ds:[rsi]
   140010846:	fs add BYTE PTR gs:[rax],al
   14001084a:	out    0x1,al
   14001084c:	pop    rdi
   14001084d:	ins    BYTE PTR es:[rdi],dx
   14001084e:	outs   dx,DWORD PTR ds:[rsi]
   14001084f:	movsxd ebp,DWORD PTR [rbx+0x0]
   140010852:	add    ebx,DWORD PTR [r15+0x75]
   140010856:	outs   dx,BYTE PTR ds:[rsi]
   140010857:	ins    BYTE PTR es:[rdi],dx
   140010858:	outs   dx,DWORD PTR ds:[rsi]
   140010859:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001085c:	jnp    0x14001085e
   14001085e:	pop    rdi
   14001085f:	pop    rdi
   140010860:	fs ins BYTE PTR es:[rdi],dx
   140010862:	ins    BYTE PTR es:[rdi],dx
   140010863:	outs   dx,DWORD PTR ds:[rsi]
   140010864:	outs   dx,BYTE PTR ds:[rsi]
   140010865:	gs js  0x1400108d1
   140010868:	je     0x14001086a
   14001086a:	nop
   14001086b:	add    bl,BYTE PTR [rdi+0x6f]
   14001086e:	outs   dx,BYTE PTR ds:[rsi]
   14001086f:	gs js  0x1400108db
   140010872:	je     0x140010874
   140010874:	(bad)  
   140010875:	add    BYTE PTR [rdi],bh
   140010877:	je     0x1400108de
   140010879:	jb     0x1400108e8
   14001087b:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140010882:	pop    rcx
   140010883:	pop    r8
   140010885:	pop    rax
   140010886:	pop    rdx
   140010887:	add    BYTE PTR [rbp+0x73],ch
   14001088a:	jbe    0x1400108ef
   14001088c:	jb     0x140010902
   14001088e:	cs fs ins BYTE PTR es:[rdi],dx
   140010891:	ins    BYTE PTR es:[rdi],dx
   140010892:	add    BYTE PTR [rax],al
   140010894:	mov    BYTE PTR [rdx],0x52
   140010897:	je     0x140010905
   140010899:	rex.XB (bad) 
   14001089b:	jo     0x140010911
   14001089d:	jne    0x140010911
   14001089f:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400108a2:	outs   dx,BYTE PTR ds:[rsi]
   1400108a3:	je     0x14001090a
   1400108a5:	js     0x14001091b
   1400108a7:	add    BYTE PTR [rdi+0x4],dh
   1400108aa:	push   rdx
   1400108ab:	je     0x140010919
   1400108ad:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400108af:	outs   dx,DWORD PTR ds:[rsi]
   1400108b0:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400108b4:	jne    0x140010924
   1400108b6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400108ba:	outs   dx,BYTE PTR ds:[rsi]
   1400108bb:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400108bd:	je     0x140010931
   1400108bf:	jns    0x1400108c1
   1400108c1:	add    BYTE PTR [rbx+0x6c745205],cl
   1400108c7:	push   rsi
   1400108c8:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400108cf:	outs   dx,BYTE PTR ds:[rsi]
   1400108d0:	ja     0x14001093b
   1400108d2:	outs   dx,BYTE PTR ds:[rsi]
   1400108d3:	add    BYTE PTR fs:[rax],al
   1400108d6:	outs   dx,BYTE PTR ds:[rsi]
   1400108d7:	je     0x14001093d
   1400108d9:	ins    BYTE PTR es:[rdi],dx
   1400108da:	ins    BYTE PTR es:[rdi],dx
   1400108db:	cs fs ins BYTE PTR es:[rdi],dx
   1400108de:	ins    BYTE PTR es:[rdi],dx
   1400108df:	add    BYTE PTR [rax],bl
   1400108e1:	add    dl,BYTE PTR [rbp+0x75]
   1400108e4:	imul   esp,DWORD PTR [rbp+rax*2+0x71],0x6c6175
   1400108ec:	xor    al,BYTE PTR [rax]
   1400108ee:	rex.WRXB jo 0x140010956
   1400108f1:	outs   dx,BYTE PTR ds:[rsi]
   1400108f2:	push   rsp
   1400108f3:	push   0x64616572
   1400108f8:	push   rsp
   1400108f9:	outs   dx,DWORD PTR ds:[rsi]
   1400108fa:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400108fe:	or     BYTE PTR [rax],al
   140010900:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010902:	rex.XB jb 0x14001096a
   140010905:	(bad)  
   140010906:	je     0x14001096d
   140010908:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001090a:	jae    0x140010980
   14001090c:	(bad)  
   14001090d:	outs   dx,BYTE PTR ds:[rsi]
   14001090e:	movsxd esp,DWORD PTR [rbp+0x0]
   140010911:	add    BYTE PTR [rax+rax*1],cl
   140010914:	push   rbx
   140010915:	gs je  0x14001095d
   140010918:	jb     0x14001098c
   14001091a:	outs   dx,DWORD PTR ds:[rsi]
   14001091b:	jb     0x14001096a
   14001091d:	outs   dx,DWORD PTR ds:[rsi]
   14001091e:	fs add BYTE PTR gs:[rax],al
   140010922:	or     eax,DWORD PTR [rax]
   140010924:	rex.RX jb 0x14001098c
   140010927:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   140010930:	add    al,BYTE PTR [rax]
   140010932:	rex.W
   140010933:	gs (bad) 
   140010935:	jo     0x140010978
   140010937:	ins    BYTE PTR es:[rdi],dx
   140010938:	ins    BYTE PTR es:[rdi],dx
   140010939:	outs   dx,DWORD PTR ds:[rsi]
   14001093a:	movsxd eax,DWORD PTR [rax]
   14001093c:	rex.X add BYTE PTR [rbx+0x6f],al
   140010940:	push   rbp
   140010941:	outs   dx,BYTE PTR ds:[rsi]
   140010942:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140010949:	imul   edi,DWORD PTR [rdx+0x65],0x170000
   140010950:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140010952:	(bad)  
   140010953:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14001095c:	js     0x1400109b5
   14001095e:	add    BYTE PTR [rax],al
   140010960:	or     al,0x0
   140010962:	rex.RXB
   140010963:	gs je  0x1400109a9
   140010966:	jne    0x1400109da
   140010968:	jb     0x1400109cf
   14001096a:	outs   dx,BYTE PTR ds:[rsi]
   14001096b:	je     0x1400109bd
   14001096d:	jb     0x1400109de
   14001096f:	movsxd esp,DWORD PTR [rbp+0x73]
   140010972:	jae    0x140010974
   140010974:	rex.WRXB add BYTE PTR [r13+0x61],r9b
   140010978:	jo     0x1400109c1
   14001097a:	outs   dx,BYTE PTR gs:[rsi]
   14001097c:	gs jb  0x1400109e8
   14001097f:	movsxd ecx,DWORD PTR [rbp+0x61]
   140010982:	jae    0x1400109ef
   140010984:	add    BYTE PTR [rax],al
   140010986:	(bad)  
   140010987:	add    BYTE PTR [rax+0x65],cl
   14001098a:	(bad)  
   14001098b:	jo     0x1400109d3
   14001098d:	jb     0x1400109f4
   14001098f:	add    BYTE PTR gs:[rax],al
   140010992:	or     al,0x0
   140010994:	push   rdi
   140010995:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   14001099c:	gs ins BYTE PTR es:[rdi],dx
   14001099e:	gs je  0x140010a06
   1400109a1:	push   rbx
   1400109a2:	je     0x140010a16
   1400109a4:	imul   ebp,DWORD PTR [rsi+0x67],0x43000200
   1400109ab:	outs   dx,DWORD PTR ds:[rsi]
   1400109ac:	rex.B
   1400109ad:	fs fs push rdx
   1400109b0:	gs push bx
   1400109b3:	gs jb  0x140010a2c
   1400109b6:	gs jb  0x140010a09
   1400109b9:	jb     0x140010a2a
   1400109bb:	movsxd esp,DWORD PTR [rbp+0x73]
   1400109be:	jae    0x1400109c0
   1400109c0:	sub    DWORD PTR [rax],eax
   1400109c2:	push   rbx
   1400109c3:	gs je  0x140010a0b
   1400109c6:	jbe    0x140010a2d
   1400109c8:	outs   dx,BYTE PTR ds:[rsi]
   1400109c9:	je     0x1400109cb
   1400109cb:	add    BYTE PTR [rax],dl
   1400109cd:	add    BYTE PTR [rdi+0x65],al
   1400109d0:	je     0x140010a15
   1400109d2:	jne    0x140010a46
   1400109d4:	jb     0x140010a3b
   1400109d6:	outs   dx,BYTE PTR ds:[rsi]
   1400109d7:	je     0x140010a2d
   1400109d9:	push   0x64616572
   1400109de:	add    BYTE PTR [rax],al
   1400109e0:	add    BYTE PTR [rax],al
   1400109e2:	movsxd esp,DWORD PTR [r11+0x65]
   1400109e6:	jae    0x140010a5b
   1400109e8:	rex.XB push 0x6b6365
   1400109ee:	xor    al,BYTE PTR [rax]
   1400109f0:	rex.RXB
   1400109f1:	gs je  0x140010a3f
   1400109f4:	gs jb  0x140010a65
   1400109f7:	gs ins BYTE PTR es:[rdi],dx
   1400109f9:	rex.WRXB (bad) 
   1400109fb:	push   0x65
   1400109fd:	movsxd esi,DWORD PTR [rbx+rdx*2+0x65]
   140010a01:	movsxd esi,DWORD PTR [rbp+0x72]
   140010a04:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x65470000
   140010a0c:	je     0x140010a5e
   140010a0e:	jb     0x140010a7f
   140010a10:	movsxd esp,DWORD PTR [rbp+0x73]
   140010a13:	jae    0x140010a5d
   140010a15:	gs (bad) 
   140010a17:	jo     0x140010a19
   140010a19:	add    BYTE PTR [rip+0x476f5200],al        # 0x187705c1f
   140010a1f:	gs je  0x140010a67
   140010a22:	jb     0x140010a96
   140010a24:	outs   dx,DWORD PTR ds:[rsi]
   140010a25:	jb     0x140010a79
   140010a27:	gs jo  0x140010a99
   140010a2a:	jb     0x140010aa0
   140010a2c:	imul   ebp,DWORD PTR [rsi+0x67],0x67616c46
   140010a33:	jae    0x140010a35
   140010a35:	add    BYTE PTR [rcx],al
   140010a37:	add    BYTE PTR [rdx+0x6f],dl
   140010a3a:	rex.RXB
   140010a3b:	gs je  0x140010a7f
   140010a3e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140010a42:	(bad)  
   140010a43:	je     0x140010aae
   140010a45:	outs   dx,DWORD PTR ds:[rsi]
   140010a46:	outs   dx,BYTE PTR ds:[rsi]
   140010a47:	rex.RX (bad) 
   140010a49:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140010a4d:	jns    0x140010a4f
   140010a4f:	add    BYTE PTR [rdx],cl
   140010a51:	add    BYTE PTR [rdx+0x6f],dl
   140010a54:	rex.WRXB jb 0x140010ac0
   140010a57:	imul   ebp,DWORD PTR [esi+0x61],0x72456574
   140010a5f:	jb     0x140010ad0
   140010a61:	jb     0x140010aba
   140010a63:	add    BYTE PTR [rbx],ah
   140010a65:	add    BYTE PTR [rdx+0x65],dl
   140010a68:	addr32 push rcx
   140010a6a:	jne    0x140010ad1
   140010a6c:	jb     0x140010ae7
   140010a6e:	push   rsi
   140010a6f:	(bad)  
   140010a70:	ins    BYTE PTR es:[rdi],dx
   140010a71:	jne    0x140010ad8
   140010a73:	rex.RB js 0x140010acd
   140010a76:	add    BYTE PTR [rax],al
   140010a78:	(bad)  
   140010a79:	add    BYTE PTR [rbx+0x6f],al
   140010a7c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010a7e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140010a86:	push   rbx
   140010a87:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140010a8b:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x50005400
   140010a93:	jb     0x140010afe
   140010a95:	jbe    0x140010b00
   140010a97:	ins    BYTE PTR es:[rdi],dx
   140010a98:	gs addr32 gs rex.XB push 0x6b6365
   140010aa1:	add    BYTE PTR [rax+rax*1],bh
   140010aa4:	push   rbx
   140010aa5:	gs je  0x140010af8
   140010aa8:	jb     0x140010b19
   140010aaa:	movsxd esp,DWORD PTR [rbp+0x73]
   140010aad:	jae    0x140010afc
   140010aaf:	imul   esi,DWORD PTR [rcx+rbp*2+0x67],0x6f697461
   140010ab7:	outs   dx,BYTE PTR ds:[rsi]
   140010ab8:	push   rax
   140010ab9:	outs   dx,DWORD PTR ds:[rsi]
   140010aba:	ins    BYTE PTR es:[rdi],dx
   140010abb:	imul   esp,DWORD PTR [rbx+0x79],0x250000
   140010ac2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010ac4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010ac6:	movsxd esi,DWORD PTR [rdx+0x65]
   140010ac9:	ins    DWORD PTR es:[rdi],dx
   140010aca:	outs   dx,BYTE PTR gs:[rsi]
   140010acc:	je     0x140010b1b
   140010ace:	push   rsp
   140010acf:	push   r13
   140010ad1:	jae    0x140010b34
   140010ad3:	add    BYTE PTR gs:[edi],cl
   140010ad7:	add    BYTE PTR [rdx+0x6f],dl
   140010ada:	push   rbx
   140010adb:	gs je  0x140010b23
   140010ade:	jb     0x140010b52
   140010ae0:	outs   dx,DWORD PTR ds:[rsi]
   140010ae1:	jb     0x140010b35
   140010ae3:	gs jo  0x140010b55
   140010ae6:	jb     0x140010b5c
   140010ae8:	imul   ebp,DWORD PTR [rsi+0x67],0x67616c46
   140010aef:	jae    0x140010af1
   140010af1:	add    BYTE PTR [rcx],cl
   140010af3:	add    BYTE PTR [rdx+0x6f],dl
   140010af6:	rex.WRXB jb 0x140010b62
   140010af9:	imul   ebp,DWORD PTR [esi+0x61],0x72456574
   140010b01:	jb     0x140010b72
   140010b03:	jb     0x140010b05
   140010b05:	add    BYTE PTR [rax+rax*1],al
   140010b08:	push   rax
   140010b09:	outs   dx,DWORD PTR ds:[rsi]
   140010b0a:	ja     0x140010b71
   140010b0c:	jb     0x140010b61
   140010b0e:	gs je  0x140010b85
   140010b11:	imul   ebp,DWORD PTR [rsi+0x67],0x69676552
   140010b18:	jae    0x140010b8e
   140010b1a:	gs jb  0x140010b6b
   140010b1d:	outs   dx,DWORD PTR ds:[rsi]
   140010b1e:	je     0x140010b89
   140010b20:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140010b26:	outs   dx,DWORD PTR ds:[rsi]
   140010b27:	outs   dx,BYTE PTR ds:[rsi]
   140010b28:	add    BYTE PTR [rax],al
   140010b2a:	cmp    BYTE PTR [rax],al
   140010b2c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010b2e:	push   rdx
   140010b2f:	gs jbe 0x140010b97
   140010b32:	jb     0x140010ba8
   140010b34:	push   rsp
   140010b35:	outs   dx,DWORD PTR ds:[rsi]
   140010b36:	push   rbx
   140010b37:	gs ins BYTE PTR es:[rdi],dx
   140010b39:	data16 add BYTE PTR [rax],al
   140010b3c:	add    BYTE PTR [rax],al
   140010b3e:	push   rdx
   140010b3f:	outs   dx,DWORD PTR ds:[rsi]
   140010b40:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140010b45:	(bad)  
   140010b46:	je     0x140010bad
   140010b48:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010b4a:	jae    0x140010bc0
   140010b4c:	(bad)  
   140010b4d:	outs   dx,BYTE PTR ds:[rsi]
   140010b4e:	movsxd esp,DWORD PTR [rbp+0x0]
   140010b51:	add    BYTE PTR [rip+0x776f5000],al        # 0x1b7705b57
   140010b57:	gs jb  0x140010bad
   140010b5a:	gs je  0x140010bd1
   140010b5d:	imul   ebp,DWORD PTR [rsi+0x67],0x65726e55
   140010b64:	imul   esi,DWORD PTR [ebx+0x74],0x6f4e7265
   140010b6c:	je     0x140010bd7
   140010b6e:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140010b74:	outs   dx,DWORD PTR ds:[rsi]
   140010b75:	outs   dx,BYTE PTR ds:[rsi]
   140010b76:	add    BYTE PTR [rax],al
   140010b78:	add    eax,0x74654700
   140010b7d:	rex.WR (bad) 
   140010b7f:	jae    0x140010bf5
   140010b81:	rex.RB jb 0x140010bf6
   140010b84:	outs   dx,DWORD PTR ds:[rsi]
   140010b85:	jb     0x140010b87
   140010b87:	add    BYTE PTR [rax+rax*1],dl
   140010b8a:	rex.RXB
   140010b8b:	gs je  0x140010bde
   140010b8e:	jb     0x140010bff
   140010b90:	movsxd eax,DWORD PTR [rcx+0x64]
   140010b93:	fs jb  0x140010bfb
   140010b96:	jae    0x140010c0b
   140010b98:	add    BYTE PTR [rax],al
   140010b9a:	add    BYTE PTR ss:[rbx+0x6f],al
   140010b9e:	push   rdx
   140010b9f:	gs ins BYTE PTR es:[rdi],dx
   140010ba1:	gs (bad) 
   140010ba3:	jae    0x140010c0a
   140010ba5:	push   rbx
   140010ba6:	gs jb  0x140010c1f
   140010ba9:	gs jb  0x140010bfc
   140010bac:	jb     0x140010c1d
   140010bae:	movsxd esp,DWORD PTR [rbp+0x73]
   140010bb1:	jae    0x140010bb3
   140010bb3:	add    BYTE PTR [rdi],bh
   140010bb5:	add    BYTE PTR [rbx+0x6f],al
   140010bb8:	push   rsp
   140010bb9:	(bad)  
   140010bba:	jae    0x140010c27
   140010bbc:	rex.WRB
   140010bbd:	gs ins DWORD PTR es:[rdi],dx
   140010bbf:	rex.RX jb 0x140010c27
   140010bc2:	add    BYTE PTR gs:[rsi],al
   140010bc5:	add    BYTE PTR [rbx+0x72],al
   140010bc8:	gs (bad) 
   140010bca:	je     0x140010c31
   140010bcc:	rex.RB jbe 0x140010c34
   140010bcf:	outs   dx,BYTE PTR ds:[rsi]
   140010bd0:	je     0x140010c29
   140010bd2:	add    BYTE PTR [rax],al
   140010bd4:	and    al,0x0
   140010bd6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010bd8:	rex.WB ins DWORD PTR es:[rdi],dx
   140010bda:	jo     0x140010c41
   140010bdc:	jb     0x140010c51
   140010bde:	outs   dx,DWORD PTR ds:[rsi]
   140010bdf:	outs   dx,BYTE PTR ds:[rsi]
   140010be0:	(bad)  
   140010be1:	je     0x140010c48
   140010be3:	rex.XB ins BYTE PTR es:[rdi],dx
   140010be5:	imul   esp,DWORD PTR [rbp+0x6e],0x1e0074
   140010bec:	push   rdx
   140010bed:	gs addr32 rex.WRXB jo 0x140010c57
   140010bf2:	outs   dx,BYTE PTR ds:[rsi]
   140010bf3:	rex.WXB
   140010bf4:	gs jns 0x140010c3c
   140010bf7:	js     0x140010c50
   140010bf9:	add    BYTE PTR [rax+rax*1],dh
   140010bfc:	push   rdi
   140010bfd:	(bad)  
   140010bfe:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6c754d72
   140010c06:	je     0x140010c71
   140010c08:	jo     0x140010c76
   140010c0a:	gs rex.WRXB (bad) 
   140010c0d:	push   0x65
   140010c0f:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   140010c13:	add    BYTE PTR [rsi],bh
   140010c15:	add    BYTE PTR [rbx+0x6f],al
   140010c18:	push   rsp
   140010c19:	(bad)  
   140010c1a:	jae    0x140010c87
   140010c1c:	rex.WRB
   140010c1d:	gs ins DWORD PTR es:[rdi],dx
   140010c1f:	rex.B ins BYTE PTR es:[rdi],dx
   140010c21:	ins    BYTE PTR es:[rdi],dx
   140010c22:	outs   dx,DWORD PTR ds:[rsi]
   140010c23:	movsxd eax,DWORD PTR [rax]
   140010c25:	add    BYTE PTR [rdx],cl
   140010c27:	add    BYTE PTR [rax+0x65],cl
   140010c2a:	(bad)  
   140010c2b:	jo     0x140010c80
   140010c2d:	gs je  0x140010c79
   140010c30:	outs   dx,BYTE PTR ds:[rsi]
   140010c31:	outs   dx,WORD PTR ds:[rsi]
   140010c33:	jb     0x140010ca2
   140010c35:	(bad)  
   140010c36:	je     0x140010ca1
   140010c38:	outs   dx,DWORD PTR ds:[rsi]
   140010c39:	outs   dx,BYTE PTR ds:[rsi]
   140010c3a:	add    BYTE PTR [rax],al
   140010c3c:	add    BYTE PTR es:[rbx+0x6f],al
   140010c40:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010c42:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140010c4a:	rex.RB js 0x140010c4d
   140010c4d:	add    BYTE PTR [rax+rax*1],cl
   140010c50:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010c52:	rex.R
   140010c53:	movsxd esi,DWORD PTR gs:[rdx+0x65]
   140010c57:	ins    DWORD PTR es:[rdi],dx
   140010c58:	outs   dx,BYTE PTR gs:[rsi]
   140010c5a:	je     0x140010ca9
   140010c5c:	push   rsp
   140010c5d:	push   r13
   140010c5f:	jae    0x140010cc2
   140010c61:	add    BYTE PTR gs:[edx],dl
   140010c65:	add    BYTE PTR [rbx+0x6f],al
   140010c68:	rex.RX jb 0x140010cd0
   140010c6b:	gs push rbp
   140010c6d:	outs   dx,BYTE PTR ds:[rsi]
   140010c6e:	jne    0x140010ce3
   140010c70:	gs imul r12,QWORD PTR fs:[rdx+0x72],0x65697261
   140010c7a:	jae    0x140010cc1
   140010c7c:	js     0x140010c7e
   140010c7e:	cmp    DWORD PTR [rax],eax
   140010c80:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010c82:	push   rdx
   140010c83:	gs jbe 0x140010cf5
   140010c86:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   140010c8a:	(bad)  
   140010c8b:	jae    0x140010d00
   140010c8d:	rex.WRXB (bad) 
   140010c8f:	push   0x65
   140010c91:	movsxd esi,DWORD PTR [rax+rax*1+0x32]
   140010c95:	add    BYTE PTR [rbx+0x6f],al
   140010c98:	push   rdx
   140010c99:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   140010ca2:	(bad)  
   140010ca3:	jae    0x140010d18
   140010ca5:	rex.WRXB (bad) 
   140010ca7:	push   0x65
   140010ca9:	movsxd esi,DWORD PTR [rax+rax*1+0x3e]
   140010cad:	add    BYTE PTR [rbx+0x65],dl
   140010cb0:	je     0x140010d02
   140010cb2:	jb     0x140010d23
   140010cb4:	movsxd esp,DWORD PTR [rbp+0x73]
   140010cb7:	jae    0x140010d0c
   140010cb9:	push   0x6f647475
   140010cbe:	ja     0x140010d2e
   140010cc0:	push   rax
   140010cc1:	(bad)  
   140010cc2:	jb     0x140010d25
   140010cc4:	ins    DWORD PTR es:[rdi],dx
   140010cc5:	gs je  0x140010d2d
   140010cc8:	jb     0x140010d3d
   140010cca:	add    BYTE PTR [rax],al
   140010ccc:	or     al,BYTE PTR [rax]
   140010cce:	push   rdi
   140010ccf:	imul   ebp,DWORD PTR [rsi+0x64],0x4373776f
   140010cd6:	jb     0x140010d3d
   140010cd8:	(bad)  
   140010cd9:	je     0x140010d40
   140010cdb:	push   rbx
   140010cdc:	je     0x140010d50
   140010cde:	imul   ebp,DWORD PTR [rsi+0x67],0x43000000
   140010ce5:	ins    BYTE PTR es:[rdi],dx
   140010ce6:	outs   dx,DWORD PTR ds:[rsi]
   140010ce7:	jae    0x140010d4e
   140010ce9:	rex.W (bad) 
   140010ceb:	outs   dx,BYTE PTR ds:[rsi]
   140010cec:	fs ins BYTE PTR es:[rdi],dx
   140010cee:	add    BYTE PTR gs:[rbx],bl
   140010cf1:	add    BYTE PTR [rdi+0x65],al
   140010cf4:	je     0x140010d46
   140010cf6:	jb     0x140010d67
   140010cf8:	movsxd esp,DWORD PTR [rbp+0x73]
   140010cfb:	jae    0x140010d4a
   140010cfd:	imul   esi,DWORD PTR [rcx+rbp*2+0x67],0x6f697461
   140010d05:	outs   dx,BYTE PTR ds:[rsi]
   140010d06:	push   rax
   140010d07:	outs   dx,DWORD PTR ds:[rsi]
   140010d08:	ins    BYTE PTR es:[rdi],dx
   140010d09:	imul   esp,DWORD PTR [rbx+0x79],0x0
   140010d10:	push   rdx
   140010d11:	gs rex.XB ins BYTE PTR es:[edi],dx
   140010d15:	outs   dx,DWORD PTR ds:[rsi]
   140010d16:	jae    0x140010d7d
   140010d18:	rex.WXB
   140010d19:	gs jns 0x140010d1c
   140010d1c:	sub    eax,0x656c5300
   140010d21:	gs jo  0x140010d24
   140010d24:	and    BYTE PTR [rax],al
   140010d26:	rex.RXB
   140010d27:	gs je  0x140010d7d
   140010d2a:	je     0x140010d8d
   140010d2c:	jb     0x140010da2
   140010d2e:	jne    0x140010da0
   140010d30:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010d32:	outs   dx,WORD PTR ds:[rsi]
   140010d34:	push   rdi
   140010d35:	add    BYTE PTR [rdi],cl
   140010d37:	add    BYTE PTR [rbx+0x65],dl
   140010d3a:	je     0x140010d91
   140010d3c:	outs   dx,BYTE PTR ds:[rsi]
   140010d3d:	push   0x6c646e61
   140010d42:	gs fs rex.RB js 0x140010daa
   140010d47:	gs jo  0x140010dbe
   140010d4a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140010d51:	gs jb  0x140010d54
   140010d54:	adc    eax,DWORD PTR [rax]
   140010d56:	rex.RXB
   140010d57:	gs je  0x140010da7
   140010d5a:	outs   dx,DWORD PTR ds:[rsi]
   140010d5b:	fs jne 0x140010dca
   140010d5e:	gs rex.W (bad) 
   140010d61:	outs   dx,BYTE PTR ds:[rsi]
   140010d62:	fs ins BYTE PTR es:[rdi],dx
   140010d64:	gs push rdi
   140010d66:	add    BYTE PTR [rax],al
   140010d68:	add    BYTE PTR [rax],al
   140010d6a:	push   rcx
   140010d6b:	jne    0x140010dd2
   140010d6d:	jb     0x140010de8
   140010d6f:	push   rax
   140010d70:	gs jb  0x140010dd9
   140010d73:	outs   dx,DWORD PTR ds:[rsi]
   140010d74:	jb     0x140010de3
   140010d76:	(bad)  
   140010d77:	outs   dx,BYTE PTR ds:[rsi]
   140010d78:	movsxd esp,DWORD PTR [rbp+0x43]
   140010d7b:	outs   dx,DWORD PTR ds:[rsi]
   140010d7c:	jne    0x140010dec
   140010d7e:	je     0x140010de5
   140010d80:	jb     0x140010d82
   140010d82:	or     eax,0x74654700
   140010d87:	rex.XB jne 0x140010dfc
   140010d8a:	jb     0x140010df1
   140010d8c:	outs   dx,BYTE PTR ds:[rsi]
   140010d8d:	je     0x140010ddf
   140010d8f:	jb     0x140010e00
   140010d91:	movsxd esp,DWORD PTR [rbp+0x73]
   140010d94:	jae    0x140010ddf
   140010d96:	add    BYTE PTR fs:[rcx],dl
   140010d99:	add    BYTE PTR [rdi+0x65],al
   140010d9c:	je     0x140010de1
   140010d9e:	jne    0x140010e12
   140010da0:	jb     0x140010e07
   140010da2:	outs   dx,BYTE PTR ds:[rsi]
   140010da3:	je     0x140010df9
   140010da5:	push   0x64616572
   140010daa:	rex.WB
   140010dab:	add    BYTE PTR fs:[rax],al
   140010dae:	adc    al,0x0
   140010db0:	rex.RXB
   140010db1:	gs je  0x140010e07
   140010db4:	jns    0x140010e29
   140010db6:	je     0x140010e1d
   140010db8:	ins    DWORD PTR es:[rdi],dx
   140010db9:	push   rsp
   140010dba:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140010dc1:	ins    BYTE PTR es:[rdi],dx
   140010dc2:	gs push rsp
   140010dc4:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140010dcb:	gs je  0x140010e22
   140010dce:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140010dd5:	je     0x140010dd7
   140010dd7:	add    BYTE PTR [rcx],dl
   140010dd9:	add    BYTE PTR [rbp+0x6e],dl
   140010ddc:	push   0x6c646e61
   140010de1:	gs fs rex.RB js 0x140010e49
   140010de6:	gs jo  0x140010e5d
   140010de9:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140010df0:	gs jb  0x140010df3
   140010df3:	add    BYTE PTR [rbx+0x0],cl
   140010df6:	push   rsp
   140010df7:	gs jb  0x140010e67
   140010dfa:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140010e01:	outs   dx,DWORD PTR ds:[rsi]
   140010e02:	movsxd esp,DWORD PTR [rbp+0x73]
   140010e05:	jae    0x140010e07
   140010e07:	add    BYTE PTR [rdx+0x50],dl
   140010e0a:	rex.XB push r10
   140010e0c:	push   rsp
   140010e0d:	xor    al,0x2e
   140010e0f:	fs ins BYTE PTR es:[rdi],dx
   140010e11:	ins    BYTE PTR es:[rdi],dx
   140010e12:	add    BYTE PTR [rax],al
   140010e14:	(bad)  
   140010e15:	jo     0x140010e80
   140010e17:	sub    eax,0x772d736d
   140010e1c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010e23:	sub    eax,0x636f7270
   140010e28:	gs jae 0x140010e9e
   140010e2b:	je     0x140010e95
   140010e2d:	jb     0x140010e94
   140010e2f:	(bad)  
   140010e30:	fs jae 0x140010e60
   140010e33:	ins    BYTE PTR es:[rdi],dx
   140010e34:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e333b6b
   140010e3a:	fs ins BYTE PTR es:[rdi],dx
   140010e3c:	ins    BYTE PTR es:[rdi],dx
   140010e3d:	add    BYTE PTR [rcx+0x70],ah
   140010e40:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e81b7
   140010e4a:	outs   dx,DWORD PTR ds:[rsi]
   140010e4b:	jb     0x140010eb2
   140010e4d:	sub    eax,0x2d6d6f63
   140010e52:	ins    BYTE PTR es:[rdi],dx
   140010e53:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e323b8a
   140010e59:	fs ins BYTE PTR es:[rdi],dx
   140010e5b:	ins    BYTE PTR es:[rdi],dx
   140010e5c:	add    BYTE PTR [rax],al
   140010e5e:	(bad)  
   140010e5f:	jo     0x140010eca
   140010e61:	sub    eax,0x772d736d
   140010e66:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010e6d:	sub    eax,0x6f727265
   140010e72:	jb     0x140010edc
   140010e74:	(bad)  
   140010e75:	outs   dx,BYTE PTR ds:[rsi]
   140010e76:	fs ins BYTE PTR es:[rdi],dx
   140010e78:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140010e7f:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac653cb6
   140010e85:	ins    BYTE PTR es:[rdi],dx
   140010e86:	add    BYTE PTR [rax],al
   140010e88:	(bad)  
   140010e89:	jo     0x140010ef4
   140010e8b:	sub    eax,0x772d736d
   140010e90:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010e97:	sub    eax,0x7262696c
   140010e9c:	(bad)  
   140010e9d:	jb     0x140010f18
   140010e9f:	ins    BYTE PTR es:[rdi],dx
   140010ea0:	outs   dx,DWORD PTR ds:[rsi]
   140010ea1:	(bad)  
   140010ea2:	fs gs jb 0x140010ed3
   140010ea6:	ins    BYTE PTR es:[rdi],dx
   140010ea7:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e313bdf
   140010ead:	fs ins BYTE PTR es:[rdi],dx
   140010eaf:	ins    BYTE PTR es:[rdi],dx
   140010eb0:	add    BYTE PTR [rax],al
   140010eb2:	(bad)  
   140010eb3:	jo     0x140010f1e
   140010eb5:	sub    eax,0x772d736d
   140010eba:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010ec1:	sub    eax,0x70616568
   140010ec6:	sub    eax,0x322d316c
   140010ecb:	sub    eax,0x6c642e30
   140010ed0:	ins    BYTE PTR es:[rdi],dx
   140010ed1:	add    BYTE PTR [rcx+0x70],ah
   140010ed4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e824b
   140010ede:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140010ee2:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x65736162
   140010eea:	sub    eax,0x322d316c
   140010eef:	sub    eax,0x6c642e30
   140010ef4:	ins    BYTE PTR es:[rdi],dx
   140010ef5:	add    BYTE PTR [rcx+0x70],ah
   140010ef8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e826f
   140010f02:	outs   dx,DWORD PTR ds:[rsi]
   140010f03:	jb     0x140010f6a
   140010f05:	sub    eax,0x726e6977
   140010f0a:	je     0x140010f39
   140010f0c:	jae    0x140010f82
   140010f0e:	jb     0x140010f79
   140010f10:	outs   dx,BYTE PTR ds:[rsi]
   140010f11:	addr32 sub eax,0x312d316c
   140010f17:	sub    eax,0x6c642e30
   140010f1c:	ins    BYTE PTR es:[rdi],dx
   140010f1d:	add    BYTE PTR [rcx+0x70],ah
   140010f20:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8297
   140010f2a:	outs   dx,DWORD PTR ds:[rsi]
   140010f2b:	jb     0x140010f92
   140010f2d:	sub    eax,0x636e7973
   140010f32:	push   0x2d316c2d
   140010f37:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac653d6d
   140010f3d:	ins    BYTE PTR es:[rdi],dx
   140010f3e:	add    BYTE PTR [rax],al
   140010f40:	(bad)  
   140010f41:	jo     0x140010fac
   140010f43:	sub    eax,0x772d736d
   140010f48:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010f4f:	sub    eax,0x726e6977
   140010f54:	je     0x140010f83
   140010f56:	gs jb  0x140010fcb
   140010f59:	outs   dx,DWORD PTR ds:[rsi]
   140010f5a:	jb     0x140010f89
   140010f5c:	ins    BYTE PTR es:[rdi],dx
   140010f5d:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e323c94
   140010f63:	fs ins BYTE PTR es:[rdi],dx
   140010f65:	ins    BYTE PTR es:[rdi],dx
   140010f66:	add    BYTE PTR [rax],al
   140010f68:	(bad)  
   140010f69:	jo     0x140010fd4
   140010f6b:	sub    eax,0x772d736d
   140010f70:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010f77:	sub    eax,0x726e6977
   140010f7c:	je     0x140010fab
   140010f7e:	ins    BYTE PTR es:[rdi],dx
   140010f7f:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e313cb6
   140010f85:	fs ins BYTE PTR es:[rdi],dx
   140010f87:	ins    BYTE PTR es:[rdi],dx
   140010f88:	add    BYTE PTR [rax],al
   140010f8a:	(bad)  
   140010f8b:	jo     0x140010ff6
   140010f8d:	sub    eax,0x772d736d
   140010f92:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010f99:	sub    eax,0x69676572
   140010f9e:	jae    0x140011014
   140010fa0:	jb     0x14001101b
   140010fa2:	sub    eax,0x312d316c
   140010fa7:	sub    eax,0x6c642e30
   140010fac:	ins    BYTE PTR es:[rdi],dx
   140010fad:	add    BYTE PTR [rcx+0x70],ah
   140010fb0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x702d6e69        # 0x1b72e8327
   140010fba:	outs   dx,DWORD PTR ds:[rsi]
   140010fbb:	ja     0x140011022
   140010fbd:	jb     0x140010fec
   140010fbf:	jae    0x140011026
   140010fc1:	je     0x140011037
   140010fc3:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140010fca:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac653e00
   140010fd0:	ins    BYTE PTR es:[rdi],dx
   140010fd1:	add    BYTE PTR [rcx+0x70],ah
   140010fd4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e834b
   140010fde:	outs   dx,DWORD PTR ds:[rsi]
   140010fdf:	jb     0x140011046
   140010fe1:	sub    eax,0x636e7973
   140010fe6:	push   0x2d316c2d
   140010feb:	xor    ch,BYTE PTR [rip+0x6c642e31]        # 0x1ac653e22
   140010ff1:	ins    BYTE PTR es:[rdi],dx
   140010ff2:	add    BYTE PTR [rax],al
   140010ff4:	(bad)  
   140010ff5:	jo     0x140011060
   140010ff7:	sub    eax,0x772d736d
   140010ffc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140011003:	sub    eax,0x646e6168
   140011008:	ins    BYTE PTR es:[rdi],dx
   140011009:	gs sub eax,0x312d316c
   14001100f:	sub    eax,0x6c642e30
   140011014:	ins    BYTE PTR es:[rdi],dx
   140011015:	add    BYTE PTR [rcx+0x70],ah
   140011018:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e838f
   140011022:	outs   dx,DWORD PTR ds:[rsi]
   140011023:	jb     0x14001108a
   140011025:	sub    eax,0x666f7270
   14001102a:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140011032:	sub    eax,0x6c642e30
   140011037:	ins    BYTE PTR es:[rdi],dx
   140011038:	add    BYTE PTR [rax],al
   14001103a:	(bad)  
   14001103b:	jo     0x1400110a6
   14001103d:	sub    eax,0x772d736d
   140011042:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140011049:	sub    eax,0x69737973
   14001104e:	outs   dx,BYTE PTR ds:[rsi]
   14001104f:	outs   dx,WORD PTR ds:[rsi]
   140011051:	sub    eax,0x322d316c
   140011056:	sub    eax,0x6c642e31
   14001105b:	ins    BYTE PTR es:[rdi],dx
   14001105c:	add    BYTE PTR [rax],al
   14001105e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011061:	(bad)  
   140011063:	jae    0x1400110ca
   140011065:	cs fs ins BYTE PTR es:[rdi],dx
   140011068:	ins    BYTE PTR es:[rdi],dx
   140011069:	add    BYTE PTR [rcx+0x3],ch
   14001106c:	pop    rdi
   14001106d:	jbe    0x1400110e2
   14001106f:	outs   dx,BYTE PTR ds:[rsi]
   140011070:	ja     0x1400110e2
   140011072:	jb     0x1400110dd
   140011074:	outs   dx,BYTE PTR ds:[rsi]
   140011075:	je     0x1400110dd
   140011077:	add    BYTE PTR [rsi+0x75705f02],bl
   14001107d:	jb     0x1400110e4
   14001107f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140011082:	ins    BYTE PTR es:[rdi],dx
   140011083:	add    BYTE PTR [rbx+0x0],bl
   140011086:	pop    rdi
   140011087:	pop    rdi
   140011088:	rex.XB js 0x140011103
   14001108b:	rex.RX jb 0x1400110ef
   14001108e:	ins    DWORD PTR es:[rdi],dx
   14001108f:	gs rex.W (bad) 
   140011092:	outs   dx,BYTE PTR ds:[rsi]
   140011093:	fs ins BYTE PTR es:[rdi],dx
   140011095:	gs jb  0x1400110cb
   140011098:	add    BYTE PTR [rax],al
   14001109a:	ret    
   14001109b:	add    DWORD PTR [rsi+0x74],ecx
   14001109e:	push   rcx
   14001109f:	jne    0x140011106
   1400110a1:	jb     0x14001111c
   1400110a3:	rex.WXB
   1400110a4:	gs jns 0x1400110a7
   1400110a7:	add    BYTE PTR [rcx+rax*1+0x704f744e],al
   1400110ae:	outs   dx,BYTE PTR gs:[rsi]
   1400110b0:	rex.WXB
   1400110b1:	gs jns 0x1400110b4
   1400110b4:	(bad)  
   1400110b5:	add    al,0x52
   1400110b7:	je     0x140011125
   1400110b9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400110bb:	imul   esi,DWORD PTR [rbp+rdx*2+0x6e],0x646f6369
   1400110c3:	gs push rbx
   1400110c5:	je     0x140011139
   1400110c7:	imul   ebp,DWORD PTR [rsi+0x67],0x37c0000
   1400110ce:	push   rdx
   1400110cf:	je     0x14001113d
   1400110d1:	rex.RB jno 0x140011149
   1400110d4:	(bad)  
   1400110d5:	ins    BYTE PTR es:[rdi],dx
   1400110d6:	push   rbp
   1400110d7:	outs   dx,BYTE PTR ds:[rsi]
   1400110d8:	imul   esp,DWORD PTR [rbx+0x6f],0x74536564
   1400110df:	jb     0x14001114a
   1400110e1:	outs   dx,BYTE PTR ds:[rsi]
   1400110e2:	add    BYTE PTR [eip+0x6c745203],bh        # 0x1ac7562ec
   1400110e9:	rex.R
   1400110ea:	gs ins BYTE PTR es:[rdi],dx
   1400110ec:	gs je  0x140011154
   1400110ef:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400110f1:	push   rbx
   1400110f2:	jo     0x140011160
   1400110f4:	(bad)  
   1400110f5:	jns    0x1400110f7
   1400110f7:	add    BYTE PTR [rbp+rax*1+0x566c7452],al
   1400110fe:	(bad)  
   1400110ff:	ins    BYTE PTR es:[rdi],dx
   140011100:	imul   esp,DWORD PTR [rdx+rdx*2+0x65],0x6974616c
   140011108:	jbe    0x14001116f
   14001110a:	push   rbx
   14001110b:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001110f:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140011117:	imul   esi,DWORD PTR [rax+0x74],0x726f
   14001111e:	mov    al,BYTE PTR [rdx+rdx*2]
   140011121:	je     0x14001118f
   140011123:	rex.WRX je 0x140011179
   140011126:	je     0x140011189
   140011128:	je     0x14001119f
   14001112a:	jae    0x140011180
   14001112c:	outs   dx,DWORD PTR ds:[rsi]
   14001112d:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001112f:	jae    0x140011176
   140011131:	jb     0x1400111a5
   140011133:	outs   dx,DWORD PTR ds:[rsi]
   140011134:	jb     0x140011136
   140011136:	fld    DWORD PTR [rcx]
   140011138:	rex.WRX je 0x14001118c
   14001113b:	jne    0x1400111a2
   14001113d:	jb     0x1400111b8
   14001113f:	push   rsi
   140011140:	(bad)  
   140011141:	ins    BYTE PTR es:[rdi],dx
   140011142:	jne    0x1400111a9
   140011144:	rex.WXB
   140011145:	gs jns 0x140011148
   140011148:	(bad)  
   140011149:	add    al,0x52
   14001114b:	je     0x1400111b9
   14001114d:	push   rdx
   14001114e:	gs (bad) 
   140011150:	ins    BYTE PTR es:[rdi],dx
   140011151:	push   rax
   140011152:	jb     0x1400111b9
   140011154:	fs movsxd esp,DWORD PTR gs:[rbp+0x73]
   140011159:	jae    0x1400111ca
   14001115b:	jb     0x14001115d
   14001115d:	add    BYTE PTR [rsi],dh
   14001115f:	add    eax,0x536c7452
   140011164:	jo     0x1400111d2
   140011166:	(bad)  
   140011167:	jns    0x140011169
   140011169:	add    BYTE PTR [rsi],dh
   14001116b:	add    DWORD PTR [rsi+0x74],ecx
   14001116e:	rex.R jne 0x1400111e1
   140011171:	ins    BYTE PTR es:[rdi],dx
   140011172:	imul   esp,DWORD PTR [rbx+0x61],0x624f6574
   140011179:	push   0x65
   14001117b:	movsxd esi,DWORD PTR [rax+rax*1+0xd]
   14001117f:	add    BYTE PTR [rdi+0x69],dl
   140011182:	outs   dx,BYTE PTR ds:[rsi]
   140011183:	outs   dx,DWORD PTR fs:[rsi]
   140011185:	ja     0x1400111fa
   140011187:	rex.R
   140011188:	gs ins BYTE PTR es:[rdi],dx
   14001118a:	gs je  0x1400111f2
   14001118d:	push   rbx
   14001118e:	je     0x140011202
   140011190:	imul   ebp,DWORD PTR [rsi+0x67],0x66667542
   140011197:	gs jb  0x14001119a
   14001119a:	adc    al,0x0
   14001119c:	push   rdi
   14001119d:	imul   ebp,DWORD PTR [rsi+0x64],0x5073776f
   1400111a4:	jb     0x14001120b
   1400111a6:	(bad)  
   1400111a7:	ins    BYTE PTR es:[rdi],dx
   1400111a8:	ins    BYTE PTR es:[rdi],dx
   1400111a9:	outs   dx,DWORD PTR ds:[rsi]
   1400111aa:	movsxd esp,DWORD PTR [rcx+0x74]
   1400111ad:	gs push rbx
   1400111af:	je     0x140011223
   1400111b1:	imul   ebp,DWORD PTR [rsi+0x67],0x66667542
   1400111b8:	gs jb  0x1400111bb
   1400111bb:	add    BYTE PTR [rax],cl
   1400111bd:	add    BYTE PTR [rdi+0x69],dl
   1400111c0:	outs   dx,BYTE PTR ds:[rsi]
   1400111c1:	outs   dx,DWORD PTR fs:[rsi]
   1400111c3:	ja     0x140011238
   1400111c5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400111c7:	ins    DWORD PTR es:[rdi],dx
   1400111c8:	jo     0x14001122b
   1400111ca:	jb     0x140011231
   1400111cc:	push   rbx
   1400111cd:	je     0x140011241
   1400111cf:	imul   ebp,DWORD PTR [rsi+0x67],0x6964724f
   1400111d6:	outs   dx,BYTE PTR ds:[rsi]
   1400111d7:	(bad)  
   1400111d8:	ins    BYTE PTR es:[rdi],dx
   1400111d9:	add    BYTE PTR [rdi],cl
   1400111db:	add    BYTE PTR [rdi+0x69],dl
   1400111de:	outs   dx,BYTE PTR ds:[rsi]
   1400111df:	outs   dx,DWORD PTR fs:[rsi]
   1400111e1:	ja     0x140011256
   1400111e3:	rex.RXB
   1400111e4:	gs je  0x14001123a
   1400111e7:	je     0x14001125b
   1400111e9:	imul   ebp,DWORD PTR [rsi+0x67],0x6e654c
   1400111f0:	or     eax,DWORD PTR [rax]
   1400111f2:	push   rdi
   1400111f3:	imul   ebp,DWORD PTR [rsi+0x64],0x4373776f
   1400111fa:	jb     0x140011261
   1400111fc:	(bad)  
   1400111fd:	je     0x140011264
   1400111ff:	push   rbx
   140011200:	je     0x140011274
   140011202:	imul   ebp,DWORD PTR [rsi+0x67],0x65666552
   140011209:	jb     0x140011270
   14001120b:	outs   dx,BYTE PTR ds:[rsi]
   14001120c:	movsxd esp,DWORD PTR [rbp+0x0]
   14001120f:	add    BYTE PTR [rax+rax*1],ah
   140011212:	push   rdx
   140011213:	gs ins BYTE PTR es:[rdi],dx
   140011215:	gs (bad) 
   140011217:	jae    0x14001127e
   140011219:	push   rbx
   14001121a:	push   rdx
   14001121b:	push   rdi
   14001121c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001121e:	movsxd ebp,DWORD PTR [rbx+0x45]
   140011221:	js     0x140011286
   140011223:	ins    BYTE PTR es:[rdi],dx
   140011224:	jne    0x140011299
   140011226:	imul   esi,DWORD PTR [rsi+0x65],0x45000600
   14001122d:	jbe    0x140011294
   14001122f:	outs   dx,BYTE PTR ds:[rsi]
   140011230:	je     0x140011289
   140011232:	jb     0x14001129d
   140011234:	je     0x14001129b
   140011236:	add    BYTE PTR [rax],al
   140011238:	(bad)  
   140011239:	add    BYTE PTR [rdi+0x69],dl
   14001123c:	outs   dx,BYTE PTR ds:[rsi]
   14001123d:	outs   dx,DWORD PTR fs:[rsi]
   14001123f:	ja     0x1400112b4
   140011241:	rex.R jne 0x1400112b4
   140011244:	ins    BYTE PTR es:[rdi],dx
   140011245:	imul   esp,DWORD PTR [rbx+0x61],0x74536574
   14001124c:	jb     0x1400112b7
   14001124e:	outs   dx,BYTE PTR ds:[rsi]
   14001124f:	add    BYTE PTR [eax],al
   140011252:	add    BYTE PTR [rax],al
   140011254:	movsxd esi,DWORD PTR [r9+0x75]
   140011258:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14001125f:	outs   dx,DWORD PTR ds:[rsi]
   140011260:	movsxd ebp,DWORD PTR [rbx+0x45]
   140011263:	js     0x1400112c8
   140011265:	ins    BYTE PTR es:[rdi],dx
   140011266:	jne    0x1400112db
   140011268:	imul   esi,DWORD PTR [rsi+0x65],0x52002100
   14001126f:	gs addr32 push rcx
   140011272:	jne    0x1400112d9
   140011274:	jb     0x1400112ef
   140011276:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011278:	outs   dx,WORD PTR ds:[rsi]
   14001127a:	rex.WXB
   14001127b:	gs jns 0x1400112d5
   14001127e:	add    BYTE PTR [rax],al
   140011280:	adc    BYTE PTR [rax],al
   140011282:	push   rdx
   140011283:	outs   dx,DWORD PTR ds:[rsi]
   140011284:	push   rsp
   140011285:	jb     0x1400112e8
   140011287:	outs   dx,BYTE PTR ds:[rsi]
   140011288:	jae    0x1400112f0
   14001128a:	outs   dx,DWORD PTR ds:[rsi]
   14001128b:	jb     0x1400112fa
   14001128d:	rex.RB jb 0x140011302
   140011290:	outs   dx,DWORD PTR ds:[rsi]
   140011291:	jb     0x140011293
   140011293:	add    BYTE PTR [rcx],al
   140011295:	add    BYTE PTR [rbx+0x6f],al
   140011298:	ins    DWORD PTR es:[rdi],dx
   140011299:	jo     0x1400112fc
   14001129b:	jb     0x140011302
   14001129d:	push   rbx
   14001129e:	je     0x140011312
   1400112a0:	imul   ebp,DWORD PTR [rsi+0x67],0x6964724f
   1400112a7:	outs   dx,BYTE PTR ds:[rsi]
   1400112a8:	(bad)  
   1400112a9:	ins    BYTE PTR es:[rdi],dx
   1400112aa:	add    BYTE PTR [rax],al
   1400112ac:	and    eax,0x6c655200
   1400112b1:	gs (bad) 
   1400112b3:	jae    0x14001131a
   1400112b5:	push   rbx
   1400112b6:	push   rdx
   1400112b7:	push   rdi
   1400112b8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400112ba:	movsxd ebp,DWORD PTR [rbx+0x53]
   1400112bd:	push   0x64657261
   1400112c2:	add    BYTE PTR [rax],al
   1400112c4:	(bad)  
   1400112c5:	add    BYTE PTR [rdx+0x61],dl
   1400112c8:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   1400112cf:	jo     0x140011345
   1400112d1:	imul   ebp,DWORD PTR [rdi+0x6e],0x170000
   1400112d8:	push   rdi
   1400112d9:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   1400112e0:	je     0x140011354
   1400112e2:	imul   ebp,DWORD PTR [rsi+0x67],0x45736148
   1400112e9:	ins    DWORD PTR es:[rdi],dx
   1400112ea:	(bad)  
   1400112eb:	gs fs fs gs fs rex.WRX jne 0x14001135f
   1400112f3:	ins    BYTE PTR es:[rdi],dx
   1400112f4:	add    BYTE PTR [rax],al
   1400112f6:	adc    al,0x0
   1400112f8:	push   rdx
   1400112f9:	gs addr32 rex.RXB
   1400112fc:	gs je  0x140011355
   1400112ff:	(bad)  
   140011300:	ins    BYTE PTR es:[rdi],dx
   140011301:	jne    0x140011368
   140011303:	push   rdi
   140011304:	add    BYTE PTR [rax],al
   140011306:	sbb    eax,DWORD PTR [rax]
   140011308:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001130a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140011312:	push   rbx
   140011313:	push   rdx
   140011314:	push   rdi
   140011315:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140011317:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001131a:	adc    eax,0x6e695700
   14001131f:	outs   dx,DWORD PTR fs:[rsi]
   140011321:	ja     0x140011396
   140011323:	push   rax
   140011324:	jb     0x140011395
   140011326:	ins    DWORD PTR es:[rdi],dx
   140011327:	outs   dx,DWORD PTR ds:[rsi]
   140011328:	je     0x14001138f
   14001132a:	push   rbx
   14001132b:	je     0x14001139f
   14001132d:	imul   ebp,DWORD PTR [rsi+0x67],0x66667542
   140011334:	gs jb  0x140011337
   140011337:	add    BYTE PTR [rax],dl
   140011339:	add    BYTE PTR [rdx+0x65],dl
   14001133c:	rex.RB outs dx,BYTE PTR ds:[esi]
   14001133f:	jne    0x1400113ae
   140011341:	push   rsi
   140011342:	(bad)  
   140011343:	ins    BYTE PTR es:[rdi],dx
   140011344:	jne    0x1400113ab
   140011346:	push   rdi
   140011347:	add    BYTE PTR [rbx],dl
   140011349:	add    BYTE PTR [rbx+0x6f],al
   14001134c:	rex.RXB
   14001134d:	gs je  0x140011391
   140011350:	jo     0x1400113b3
   140011352:	jb     0x1400113c8
   140011354:	ins    DWORD PTR es:[rdi],dx
   140011355:	outs   dx,BYTE PTR gs:[rsi]
   140011357:	je     0x1400113ad
   140011359:	jns    0x1400113cb
   14001135b:	add    BYTE PTR gs:[rax],al
   14001135e:	rex.WX add BYTE PTR [rcx+0x49],cl
   140011362:	rex.R
   140011363:	rex.RX jb 0x1400113d5
   140011366:	ins    DWORD PTR es:[rdi],dx
   140011367:	push   rbx
   140011368:	je     0x1400113dc
   14001136a:	imul   ebp,DWORD PTR [rsi+0x67],0x41000100
   140011371:	movsxd esi,DWORD PTR [rcx+0x75]
   140011374:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14001137b:	outs   dx,DWORD PTR ds:[rsi]
   14001137c:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001137f:	push   0x64657261
   140011384:	add    BYTE PTR [rax],al
   140011386:	(bad)  
   140011387:	add    BYTE PTR [rdx+0x65],dl
   14001138a:	rex.RB outs dx,BYTE PTR ds:[esi]
   14001138d:	jne    0x1400113fc
   14001138f:	rex.WXB
   140011390:	gs jns 0x1400113d8
   140011393:	js     0x1400113ec
   140011395:	add    BYTE PTR [rax],dl
   140011397:	add    BYTE PTR [rdi+0x69],dl
   14001139a:	outs   dx,BYTE PTR ds:[rsi]
   14001139b:	outs   dx,DWORD PTR fs:[rsi]
   14001139d:	ja     0x140011412
   14001139f:	rex.RXB
   1400113a0:	gs je  0x1400113f6
   1400113a3:	je     0x140011417
   1400113a5:	imul   ebp,DWORD PTR [rsi+0x67],0x42776152
   1400113ac:	jne    0x140011414
   1400113ae:	data16 gs jb 0x1400113b2
   1400113b2:	add    eax,DWORD PTR [rax]
   1400113b4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400113b6:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400113b9:	rex.RX jb 0x140011421
   1400113bc:	add    BYTE PTR gs:[rcx+0x70],ah
   1400113c0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x652d6e69        # 0x1b72e8737
   1400113ca:	jbe    0x140011431
   1400113cc:	outs   dx,BYTE PTR ds:[rsi]
   1400113cd:	je     0x140011438
   1400113cf:	outs   dx,BYTE PTR ds:[rsi]
   1400113d0:	addr32 sub eax,0x766f7270
   1400113d6:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   1400113de:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac654214
   1400113e4:	ins    BYTE PTR es:[rdi],dx
   1400113e5:	add    BYTE PTR [rcx+0x70],ah
   1400113e8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e875f
   1400113f2:	outs   dx,DWORD PTR ds:[rsi]
   1400113f3:	jb     0x14001145a
   1400113f5:	sub    eax,0x69727473
   1400113fa:	outs   dx,BYTE PTR ds:[rsi]
   1400113fb:	addr32 sub eax,0x312d316c
   140011401:	sub    eax,0x6c642e30
   140011406:	ins    BYTE PTR es:[rdi],dx
   140011407:	add    BYTE PTR [rcx+0x70],ah
   14001140a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8781
   140011414:	outs   dx,DWORD PTR ds:[rsi]
   140011415:	jb     0x14001147c
   140011417:	sub    eax,0x70616568
   14001141c:	sub    eax,0x312d326c
   140011421:	sub    eax,0x6c642e30
   140011426:	ins    BYTE PTR es:[rdi],dx
   140011427:	add    BYTE PTR [rcx+0x6d656d04],dl
   14001142d:	movsxd ebp,DWORD PTR [rbp+0x70]
   140011430:	add    BYTE PTR [rax],al
   140011432:	xchg   edx,eax
   140011433:	add    al,0x6d
   140011435:	gs ins DWORD PTR es:[rdi],dx
   140011437:	movsxd esi,DWORD PTR [rax+0x79]
   14001143a:	add    BYTE PTR [rax],al
   14001143c:	xchg   esi,eax
   14001143d:	add    al,0x6d
   14001143f:	gs ins DWORD PTR es:[rdi],dx
   140011441:	jae    0x1400114a8
   140011443:	je     0x140011445
	...

Disassembly of section .data:

0000000140012000 <.data>:
   140012000:	add    DWORD PTR [rax],eax
   140012002:	add    BYTE PTR [rax],al
   140012004:	add    BYTE PTR [rax],al
   140012006:	add    BYTE PTR [rax],al
   140012008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14001200e:	add    BYTE PTR [rax],al
   140012010:	int    0x5d
   140012012:	and    dl,dl
   140012014:	data16 (bad) 
   140012016:	(bad)  
   140012017:	inc    DWORD PTR [rax]
   140012019:	add    BYTE PTR [rax],al
   14001201b:	add    BYTE PTR [rax],al
   14001201d:	add    BYTE PTR [rax],al
   14001201f:	add    BYTE PTR [rax-0x16],ah
	...
   14001202e:	add    BYTE PTR [rax],al
   140012030:	adc    al,BYTE PTR [rax]
   140012032:	add    BYTE PTR [rax],al
   140012034:	adc    BYTE PTR [rax],al
   140012036:	add    BYTE PTR [rax],al
   140012038:	add    BYTE PTR [rcx],al
	...
   140012056:	add    BYTE PTR [rax],al
   140012058:	call   0x14141217d
   14001205d:	add    BYTE PTR [rax],al
   14001205f:	add    al,dl
   140012061:	fild   DWORD PTR [rax]
   140012063:	rex add DWORD PTR [rax],eax
	...
   14001207e:	add    BYTE PTR [rax],al
   140012080:	adc    BYTE PTR [rax],al
   140012082:	add    BYTE PTR [rax],al
   140012084:	or     BYTE PTR [rax],al
   140012086:	add    BYTE PTR [rax],al
   140012088:	add    BYTE PTR [rcx],al
   14001208a:	add    BYTE PTR [rax],al
   14001208c:	add    BYTE PTR [rax],al
   14001208e:	add    BYTE PTR [rax],al
   140012090:	jo     0x1400120be
   140012092:	add    DWORD PTR [rax+0x1],eax
	...
   14001209d:	add    BYTE PTR [rax],al
   14001209f:	add    BYTE PTR [rax+0x23],dl
   1400120a2:	add    DWORD PTR [rax+0x1],eax
	...
   1400120ad:	add    BYTE PTR [rax],al
   1400120af:	add    BYTE PTR [rax+rax*1],dl
   1400120b2:	add    BYTE PTR [rax],al
   1400120b4:	or     BYTE PTR [rax],al
   1400120b6:	add    BYTE PTR [rax],al
   1400120b8:	add    DWORD PTR [rax],eax
   1400120ba:	add    BYTE PTR [rax],al
   1400120bc:	add    BYTE PTR [rax],al
   1400120be:	add    BYTE PTR [rax],al
   1400120c0:	shr    BYTE PTR [rcx+rax*1],1
   1400120c3:	rex add DWORD PTR [rax],eax
	...
   1400120ce:	add    BYTE PTR [rax],al
   1400120d0:	loopne 0x1400120f6
   1400120d2:	add    DWORD PTR [rax+0x1],eax
	...
   1400120dd:	add    BYTE PTR [rax],al
   1400120df:	add    BYTE PTR [rsi],bl
   1400120e1:	add    BYTE PTR [rax],al
   1400120e3:	add    BYTE PTR [rax],al
   1400120e5:	add    BYTE PTR [rax],al
   1400120e7:	add    BYTE PTR [rax+0x0],ah
   1400120ed:	add    BYTE PTR [rax],al
   1400120ef:	add    BYTE PTR [rax+0x1400121],dh
   1400120f5:	add    BYTE PTR [rax],al
   1400120f7:	add    BYTE PTR [rdx],cl
   1400120f9:	add    BYTE PTR [rax],al
   1400120fb:	add    BYTE PTR [rax],al
   1400120fd:	add    BYTE PTR [rax],al
   1400120ff:	add    BYTE PTR [rax+0x25],dl
   140012102:	add    DWORD PTR [rax+0x1],eax
   140012105:	add    BYTE PTR [rax],al
   140012107:	add    BYTE PTR [rax+rax*1],al
	...
   14001211e:	add    BYTE PTR [rax],al
   140012120:	(bad)  
   140012121:	loopne 0x140012123
   140012123:	rex add DWORD PTR [rax],eax
   140012126:	add    BYTE PTR [rax],al
   140012128:	jo     0x14001212a
   14001212a:	add    BYTE PTR [rax],al
   14001212c:	add    BYTE PTR [rax],al
   14001212e:	add    BYTE PTR [rax],al
   140012130:	shl    BYTE PTR [rbx],0x1
   140012133:	rex add DWORD PTR [rax],eax
   140012136:	add    BYTE PTR [rax],al
   140012138:	or     DWORD PTR [rax],eax
   14001213a:	add    BYTE PTR [rax],al
   14001213c:	add    BYTE PTR [rax],al
   14001213e:	add    BYTE PTR [rax],al
   140012140:	or     al,0x0
   140012142:	add    BYTE PTR [rax],al
   140012144:	or     BYTE PTR [rax],al
   140012146:	add    BYTE PTR [rax],al
   140012148:	add    BYTE PTR [rcx],al
   14001214a:	add    BYTE PTR [rax],al
   14001214c:	add    BYTE PTR [rax],al
   14001214e:	add    BYTE PTR [rax],al
   140012150:	push   rax
   140012151:	sub    al,0x1
   140012153:	rex add DWORD PTR [rax],eax
	...
   14001215e:	add    BYTE PTR [rax],al
   140012160:	pop    rax
   140012161:	and    eax,DWORD PTR [rcx]
   140012163:	rex add DWORD PTR [rax],eax
	...
   14001216e:	add    BYTE PTR [rax],al
   140012170:	jo     0x140012154
   140012172:	add    BYTE PTR [rax+0x1],al
   140012175:	add    BYTE PTR [rax],al
   140012177:	add    BYTE PTR [rbx],al
	...
   14001218d:	add    BYTE PTR [rax],al
   14001218f:	add    BYTE PTR [rax+0x14000e2],cl
   140012195:	add    BYTE PTR [rax],al
   140012197:	add    BYTE PTR [rdx],cl
   140012199:	add    BYTE PTR [rax],al
   14001219b:	add    BYTE PTR [rax],dl
	...
   1400121a5:	add    BYTE PTR [rax],al
   1400121a7:	add    BYTE PTR [rcx],al
   1400121a9:	add    BYTE PTR [rax],al
   1400121ab:	add    BYTE PTR [rax],al
   1400121ad:	add    BYTE PTR [rax],al
   1400121af:	add    BYTE PTR [rax+0x14000e1],dl
   1400121b5:	add    BYTE PTR [rax],al
   1400121b7:	add    BYTE PTR [rbx],cl
	...
   1400121cd:	add    BYTE PTR [rax],al
   1400121cf:	add    BYTE PTR [rax+0x14000e1],ah
   1400121d5:	add    BYTE PTR [rax],al
   1400121d7:	add    BYTE PTR [rbx],cl
   1400121d9:	add    BYTE PTR [rax],al
   1400121db:	add    BYTE PTR [rax],bl
	...
   1400121e5:	add    BYTE PTR [rax],al
   1400121e7:	add    BYTE PTR [rcx],al
   1400121e9:	add    BYTE PTR [rax],al
   1400121eb:	add    BYTE PTR [rax],al
   1400121ed:	add    BYTE PTR [rax],al
   1400121ef:	add    BYTE PTR [rax+0x14000e1],bh
   1400121f5:	add    BYTE PTR [rax],al
   1400121f7:	add    BYTE PTR [rip+0x30000000],al        # 0x1700121fd
   1400121fd:	add    BYTE PTR [rax],al
   1400121ff:	add    BYTE PTR [rax],al
   140012201:	add    BYTE PTR [rax],al
   140012203:	add    BYTE PTR [rax+rax*1],al
   140012206:	add    BYTE PTR [rax],al
   140012208:	add    al,BYTE PTR [rax]
   14001220a:	add    BYTE PTR [rax],al
   14001220c:	add    BYTE PTR [rax],al
   14001220e:	add    BYTE PTR [rax],al
   140012210:	fsub   st,st(1)
   140012212:	add    BYTE PTR [rax+0x1],al
   140012215:	add    BYTE PTR [rax],al
   140012217:	add    BYTE PTR [rsi],cl
   140012219:	add    BYTE PTR [rax],al
   14001221b:	add    BYTE PTR [rax],bh
	...
   140012225:	add    BYTE PTR [rax],al
   140012227:	add    BYTE PTR [rbx],al
   140012229:	add    BYTE PTR [rax],al
   14001222b:	add    BYTE PTR [rax],al
   14001222d:	add    BYTE PTR [rax],al
   14001222f:	add    al,dh
   140012231:	loope  0x140012233
   140012233:	rex add DWORD PTR [rax],eax
   140012236:	add    BYTE PTR [rax],al
   140012238:	or     al,BYTE PTR [rax]
   14001223a:	add    BYTE PTR [rax],al
   14001223c:	push   rax
	...
   140012245:	add    BYTE PTR [rax],al
   140012247:	add    BYTE PTR [rax+rax*1],al
   14001224a:	add    BYTE PTR [rax],al
   14001224c:	add    BYTE PTR [rax],al
   14001224e:	add    BYTE PTR [rax],al
   140012250:	sbb    dl,ah
   140012252:	add    BYTE PTR [rax+0x1],al
   140012255:	add    BYTE PTR [rax],al
   140012257:	add    BYTE PTR [rip+0x60000000],al        # 0x1a001225d
   14001225d:	add    BYTE PTR [rax],al
   14001225f:	add    BYTE PTR [rax],al
   140012261:	add    BYTE PTR [rax],al
   140012263:	add    BYTE PTR [rdx],al
   140012265:	add    BYTE PTR [rax],al
   140012267:	add    BYTE PTR [rip+0x0],al        # 0x14001226d
   14001226d:	add    BYTE PTR [rax],al
   14001226f:	add    BYTE PTR [rax],dh
   140012271:	loop   0x140012273
   140012273:	rex add DWORD PTR [rax],eax
   140012276:	add    BYTE PTR [rax],al
   140012278:	or     BYTE PTR [rax],al
   14001227a:	add    BYTE PTR [rax],al
   14001227c:	push   0x0
   140012281:	add    BYTE PTR [rax],al
   140012283:	add    BYTE PTR [rax],al
   140012285:	add    BYTE PTR [rax],al
   140012287:	add    BYTE PTR [rsi],al
   140012289:	add    BYTE PTR [rax],al
   14001228b:	add    BYTE PTR [rax],al
   14001228d:	add    BYTE PTR [rax],al
   14001228f:	add    BYTE PTR [rax-0x1e],al
   140012292:	add    BYTE PTR [rax+0x1],al
   140012295:	add    BYTE PTR [rax],al
   140012297:	add    BYTE PTR [rax],cl
   140012299:	add    BYTE PTR [rax],al
   14001229b:	add    BYTE PTR [rax+0x0],bh
	...
   1400122a6:	add    BYTE PTR [rax],al
   1400122a8:	(bad)  
   1400122a9:	add    BYTE PTR [rax],al
   1400122ab:	add    BYTE PTR [rax],al
   1400122ad:	add    BYTE PTR [rax],al
   1400122af:	add    BYTE PTR [rax-0x1e],bl
   1400122b2:	add    BYTE PTR [rax+0x1],al
   1400122b5:	add    BYTE PTR [rax],al
   1400122b7:	add    BYTE PTR [rax],cl
   1400122b9:	add    BYTE PTR [rax],al
   1400122bb:	add    BYTE PTR [rax+0x0],cl
   1400122c1:	add    BYTE PTR [rax],al
   1400122c3:	add    BYTE PTR [rax],al
   1400122c5:	add    BYTE PTR [rax],al
   1400122c7:	add    BYTE PTR [rax],cl
   1400122c9:	add    BYTE PTR [rax],al
   1400122cb:	add    BYTE PTR [rax],al
   1400122cd:	add    BYTE PTR [rax],al
   1400122cf:	add    BYTE PTR [rax],dl
   1400122d1:	loope  0x1400122d3
   1400122d3:	rex add DWORD PTR [rax],eax
   1400122d6:	add    BYTE PTR [rax],al
   1400122d8:	sldt   WORD PTR [rax]
   1400122db:	add    BYTE PTR [rax+0x0],bl
   1400122e1:	add    BYTE PTR [rax],al
   1400122e3:	add    BYTE PTR [rax],al
   1400122e5:	add    BYTE PTR [rax],al
   1400122e7:	add    BYTE PTR [rcx],cl
   1400122e9:	add    BYTE PTR [rax],al
   1400122eb:	add    BYTE PTR [rax],al
   1400122ed:	add    BYTE PTR [rax],al
   1400122ef:	add    BYTE PTR [rsi],dl
   1400122f1:	add    BYTE PTR [rax],al
   1400122f3:	add    BYTE PTR [rax+rax*1],dl
   1400122f6:	add    BYTE PTR [rax],al
   1400122f8:	add    DWORD PTR [rax],eax
	...
   140012316:	add    BYTE PTR [rax],al
   140012318:	call   0x141412441
   14001231d:	add    BYTE PTR [rax],al
   14001231f:	add    BYTE PTR [rsi],cl
   140012321:	add    BYTE PTR [rax],al
   140012323:	add    BYTE PTR [rax+rax*1],cl
   140012326:	add    BYTE PTR [rax],al
   140012328:	add    BYTE PTR [rcx],al
	...
   140012346:	add    BYTE PTR [rax],al
   140012348:	sub    BYTE PTR [rcx],ah
   14001234a:	add    DWORD PTR [rax+0x1],eax
   14001234d:	add    BYTE PTR [rax],al
   14001234f:	add    BYTE PTR [rdx],dl
   140012351:	add    BYTE PTR [rax],al
   140012353:	add    BYTE PTR [rcx],al
   140012355:	add    BYTE PTR [rax],al
   140012357:	add    BYTE PTR [rsi],cl
   140012359:	add    BYTE PTR [rax],al
   14001235b:	add    BYTE PTR [rcx],al
   14001235d:	add    BYTE PTR [rax],al
   14001235f:	add    BYTE PTR [rsi],bl
   140012361:	add    BYTE PTR [rax],al
   140012363:	add    BYTE PTR [rax],bl
   140012365:	add    BYTE PTR [rax],al
   140012367:	add    BYTE PTR [rax],al
   140012369:	add    DWORD PTR [rax],eax
	...
   140012387:	add    BYTE PTR [rax],dh
   140012389:	and    eax,0x14001
   14001238e:	add    BYTE PTR [rax],al
   140012390:	or     BYTE PTR [rax],al
   140012392:	add    BYTE PTR [rax],al
   140012394:	(bad)  
   140012395:	(bad)  
   140012396:	(bad)  
   140012397:	inc    DWORD PTR [rax]
   140012399:	add    DWORD PTR [rax],eax
   14001239b:	add    BYTE PTR [rax],al
   14001239d:	add    BYTE PTR [rax],al
   14001239f:	add    al,ch
   1400123a1:	sub    eax,DWORD PTR [rcx]
   1400123a3:	rex add DWORD PTR [rax],eax
   1400123a6:	add    BYTE PTR [rax],al
   1400123a8:	add    BYTE PTR [rcx],ah
   1400123aa:	add    DWORD PTR [rax+0x1],eax
	...
   1400123bd:	add    BYTE PTR [rax],al
   1400123bf:	add    al,al
   1400123c1:	fild   DWORD PTR [rax]
   1400123c3:	rex add DWORD PTR [rax],eax
   1400123c6:	add    BYTE PTR [rax],al
   1400123c8:	or     DWORD PTR [rax],eax
	...
   1400123de:	add    BYTE PTR [rax],al
   1400123e0:	enter  0xe0,0x40
   1400123e4:	add    DWORD PTR [rax],eax
   1400123e6:	add    BYTE PTR [rax],al
   1400123e8:	add    eax,0x10000000
   1400123ed:	add    BYTE PTR [rax],al
   1400123ef:	add    BYTE PTR [rax],al
   1400123f1:	add    BYTE PTR [rax],al
   1400123f3:	add    BYTE PTR [rdx],al
   1400123f5:	add    BYTE PTR [rax],al
   1400123f7:	add    BYTE PTR [rcx],al
   1400123f9:	add    BYTE PTR [rax],al
   1400123fb:	add    BYTE PTR [rax],al
   1400123fd:	add    BYTE PTR [rax],al
   1400123ff:	add    BYTE PTR [rax+0x14000db],dh
   140012405:	add    BYTE PTR [rax],al
   140012407:	add    BYTE PTR [rax],cl
   140012409:	add    BYTE PTR [rax],al
   14001240b:	add    BYTE PTR [rax],bl
	...
   140012415:	add    BYTE PTR [rax],al
   140012417:	add    BYTE PTR [rdx],al
   140012419:	add    BYTE PTR [rax],al
   14001241b:	add    BYTE PTR [rax],al
   14001241d:	add    BYTE PTR [rax],al
   14001241f:	add    al,ch
   140012421:	loopne 0x140012423
   140012423:	rex add DWORD PTR [rax],eax
   140012426:	add    BYTE PTR [rax],al
   140012428:	or     eax,DWORD PTR [rax]
   14001242a:	add    BYTE PTR [rax],al
   14001242c:	sub    BYTE PTR [rax],al
	...
   140012436:	add    BYTE PTR [rax],al
   140012438:	add    eax,DWORD PTR [rax]
   14001243a:	add    BYTE PTR [rax],al
   14001243c:	add    BYTE PTR [rax],al
   14001243e:	add    BYTE PTR [rax],al
   140012440:	clc    
   140012441:	loopne 0x140012443
   140012443:	rex add DWORD PTR [rax],eax
   140012446:	add    BYTE PTR [rax],al
   140012448:	or     eax,0x40000000
   14001244d:	add    BYTE PTR [rax],al
   14001244f:	add    BYTE PTR [rax],al
   140012451:	add    BYTE PTR [rax],al
   140012453:	add    BYTE PTR [rdx],al
   140012455:	add    BYTE PTR [rax],al
   140012457:	add    BYTE PTR [rax+rax*1],al
   14001245a:	add    BYTE PTR [rax],al
   14001245c:	add    BYTE PTR [rax],al
   14001245e:	add    BYTE PTR [rax],al
   140012460:	cmp    cl,ah
   140012462:	add    BYTE PTR [rax+0x1],al
   140012465:	add    BYTE PTR [rax],al
   140012467:	add    BYTE PTR [rip+0x48000000],cl        # 0x18801246d
   14001246d:	add    BYTE PTR [rax],al
   14001246f:	add    BYTE PTR [rax],al
   140012471:	add    BYTE PTR [rax],al
   140012473:	add    BYTE PTR [rdx],al
   140012475:	add    BYTE PTR [rax],al
   140012477:	add    BYTE PTR [rip+0x0],al        # 0x14001247d
   14001247d:	add    BYTE PTR [rax],al
   14001247f:	add    BYTE PTR [rax],dl
   140012481:	loope  0x140012483
   140012483:	rex add DWORD PTR [rax],eax
   140012486:	add    BYTE PTR [rax],al
   140012488:	sldt   WORD PTR [rax]
   14001248b:	add    BYTE PTR [rax+0x0],dl
	...
   140012496:	add    BYTE PTR [rax],al
   140012498:	(bad)  
   140012499:	add    BYTE PTR [rax],al
   14001249b:	add    BYTE PTR [rax],al
   14001249d:	add    BYTE PTR [rax],al
   14001249f:	add    BYTE PTR [rax-0x1f],dl
   1400124a2:	add    BYTE PTR [rax+0x1],al
   1400124a5:	add    BYTE PTR [rax],al
   1400124a7:	add    BYTE PTR [rax],cl
   1400124a9:	add    BYTE PTR [rax],al
   1400124ab:	add    BYTE PTR [rax+0x0],bl
	...
   1400124b6:	add    BYTE PTR [rax],al
   1400124b8:	(bad)  
   1400124b9:	add    BYTE PTR [rax],al
   1400124bb:	add    BYTE PTR [rax],al
   1400124bd:	add    BYTE PTR [rax],al
   1400124bf:	add    BYTE PTR [rax-0x1f],dh
   1400124c2:	add    BYTE PTR [rax+0x1],al
   1400124c5:	add    BYTE PTR [rax],al
   1400124c7:	add    BYTE PTR [rip+0x68000000],cl        # 0x1a80124cd
   1400124cd:	add    BYTE PTR [rax],al
   1400124cf:	add    BYTE PTR [rax],al
   1400124d1:	add    BYTE PTR [rax],al
   1400124d3:	add    BYTE PTR [rcx],al
   1400124d5:	add    BYTE PTR [rax],al
   1400124d7:	add    BYTE PTR [rax],cl
   1400124d9:	add    BYTE PTR [rax],al
   1400124db:	add    BYTE PTR [rax],al
   1400124dd:	add    BYTE PTR [rax],al
   1400124df:	add    BYTE PTR [rsi],dl
   1400124e1:	add    BYTE PTR [rax],al
   1400124e3:	add    BYTE PTR [rcx],al
   1400124e5:	add    BYTE PTR [rax],al
   1400124e7:	add    BYTE PTR [rax],ah
   1400124e9:	add    BYTE PTR [rax],al
   1400124eb:	add    BYTE PTR [rax],al
   1400124ed:	add    BYTE PTR [rax],al
   1400124ef:	add    BYTE PTR [rax+0x21],dh
   1400124f2:	add    DWORD PTR [rax+0x1],eax
   1400124f5:	add    BYTE PTR [rax],al
   1400124f7:	add    BYTE PTR [rdx],al
   1400124f9:	add    BYTE PTR [rax],al
   1400124fb:	add    BYTE PTR [rax],al
   1400124fd:	add    BYTE PTR [rax],al
   1400124ff:	add    BYTE PTR [rax],bl
   140012501:	add    BYTE PTR [rax],al
   140012503:	add    BYTE PTR [rax],cl
   140012505:	add    BYTE PTR [rax],al
   140012507:	add    BYTE PTR [rax],al
   140012509:	add    DWORD PTR [rax],eax
   14001250b:	add    BYTE PTR [rax],al
   14001250d:	add    BYTE PTR [rax],al
   14001250f:	add    BYTE PTR [rax+0x140012c],dh
	...
   14001251d:	add    BYTE PTR [rax],al
   14001251f:	add    al,ah
   140012521:	and    BYTE PTR [rcx],al
   140012523:	rex add DWORD PTR [rax],eax
	...
   14001252e:	add    BYTE PTR [rax],al
   140012530:	or     BYTE PTR [rax],al
   140012532:	add    BYTE PTR [rax],al
   140012534:	add    BYTE PTR [rax],al
   140012536:	add    BYTE PTR [rax],al
   140012538:	(bad)  
   140012539:	and    BYTE PTR [rcx],al
   14001253b:	rex add DWORD PTR [rax],eax
   14001253e:	add    BYTE PTR [rax],al
   140012540:	add    DWORD PTR [rax],eax
	...
   14001254e:	add    BYTE PTR [rax],al
   140012550:	rcr    bl,1
   140012552:	add    BYTE PTR [rax+0x1],al
   140012555:	add    BYTE PTR [rax],al
   140012557:	add    BYTE PTR [rax+rax*1],cl
   14001255a:	add    BYTE PTR [rax],al
   14001255c:	add    BYTE PTR [rax],al
   14001255e:	add    BYTE PTR [rax],al
   140012560:	rcr    bl,0x0
   140012563:	rex add DWORD PTR [rax],eax
   140012566:	add    BYTE PTR [rax],al
   140012568:	sbb    BYTE PTR [rax],al
   14001256a:	add    BYTE PTR [rax],al
   14001256c:	add    BYTE PTR [rax],al
   14001256e:	add    BYTE PTR [rax],al
   140012570:	mov    al,0xdb
   140012572:	add    BYTE PTR [rax+0x1],al
   140012575:	add    BYTE PTR [rax],al
   140012577:	add    BYTE PTR [rax],dl
   140012579:	add    BYTE PTR [rax],al
   14001257b:	add    BYTE PTR [rax],al
   14001257d:	add    BYTE PTR [rax],al
   14001257f:	add    BYTE PTR [rax+0x14000db],cl
   140012585:	add    BYTE PTR [rax],al
   140012587:	add    BYTE PTR [rax+rax*1],dl
   14001258a:	add    BYTE PTR [rax],al
   14001258c:	add    BYTE PTR [rax],al
   14001258e:	add    BYTE PTR [rax],al
   140012590:	push   0x14000df
	...

Disassembly of section .pdata:

0000000140013000 <.pdata>:
   140013000:	add    BYTE PTR [rax],dl
   140013002:	add    BYTE PTR [rax],al
   140013004:	(bad)  
   140013005:	adc    BYTE PTR [rax],al
   140013007:	add    ah,ah
   140013009:	sti    
   14001300a:	add    BYTE PTR [rax],al
   14001300c:	rcl    BYTE PTR [rax],0x0
   14001300f:	add    cl,bl
   140013011:	adc    BYTE PTR [rax],al
   140013013:	add    ah,ah
   140013015:	sti    
   140013016:	add    BYTE PTR [rax],al
   140013018:	loopne 0x14001302a
   14001301a:	add    BYTE PTR [rax],al
   14001301c:	stc    
   14001301d:	adc    BYTE PTR [rax],al
   14001301f:	add    ah,ah
   140013021:	sti    
   140013022:	add    BYTE PTR [rax],al
   140013024:	adc    BYTE PTR [rcx],dl
   140013026:	add    BYTE PTR [rax],al
   140013028:	mov    ebx,0x58000011
   14001302d:	icebp  
   14001302e:	add    BYTE PTR [rax],al
   140013030:	mov    ebx,0x91000011
   140013035:	adc    al,BYTE PTR [rax]
   140013037:	add    BYTE PTR [rax-0xf],bh
   14001303a:	add    BYTE PTR [rax],al
   14001303c:	xchg   ecx,eax
   14001303d:	adc    al,BYTE PTR [rax]
   14001303f:	add    BYTE PTR [rbp-0x73ffffee],dh
   140013045:	icebp  
   140013046:	add    BYTE PTR [rax],al
   140013048:	rcl    BYTE PTR [rdx],0x0
   14001304b:	add    BYTE PTR [rdx-0x3fffffed],bl
   140013051:	icebp  
   140013052:	add    BYTE PTR [rax],al
   140013054:	mov    al,0x13
   140013056:	add    BYTE PTR [rax],al
   140013058:	rcl    DWORD PTR [rbx],cl
   14001305a:	add    BYTE PTR [rax],al
   14001305c:	push   0xffffffffd30000f2
   140013061:	adc    eax,DWORD PTR [rax]
   140013063:	add    ch,ch
   140013065:	adc    eax,DWORD PTR [rax]
   140013067:	add    BYTE PTR [rdx+rsi*8+0x0],dh
   14001306b:	add    ch,ch
   14001306d:	adc    eax,DWORD PTR [rax]
   14001306f:	add    BYTE PTR [rsi+0x14],cl
   140013072:	add    BYTE PTR [rax],al
   140013074:	mov    dl,dh
   140013076:	add    BYTE PTR [rax],al
   140013078:	rex.WRX adc al,0x0
   14001307b:	add    BYTE PTR [rbx+0x14],dl
   14001307e:	add    BYTE PTR [rax],al
   140013080:	pushf  
   140013081:	repnz add BYTE PTR [rax],al
   140013084:	push   rbx
   140013085:	adc    al,0x0
   140013087:	add    BYTE PTR [rsi+0x14],bl
   14001308a:	add    BYTE PTR [rax],al
   14001308c:	lods   al,BYTE PTR ds:[rsi]
   14001308d:	repnz add BYTE PTR [rax],al
   140013090:	pop    rsi
   140013091:	adc    al,0x0
   140013093:	add    BYTE PTR [rbp+0x14],ah
   140013096:	add    BYTE PTR [rax],al
   140013098:	mov    esp,0x800000f2
   14001309d:	adc    al,0x0
   14001309f:	add    dh,cl
   1400130a1:	adc    al,0x0
   1400130a3:	add    al,bh
   1400130a5:	repnz add BYTE PTR [rax],al
   1400130a8:	(bad)  
   1400130a9:	adc    al,0x0
   1400130ab:	add    dh,ch
   1400130ad:	adc    al,0x0
   1400130af:	add    BYTE PTR [rax],al
   1400130b1:	repz add BYTE PTR [rax],al
   1400130b4:	out    dx,al
   1400130b5:	adc    al,0x0
   1400130b7:	add    bl,bh
   1400130b9:	adc    al,0x0
   1400130bb:	add    BYTE PTR [rbx+rsi*8],dl
   1400130be:	add    BYTE PTR [rax],al
   1400130c0:	adc    BYTE PTR [rip+0x15850000],dl        # 0x1558630c6
   1400130c6:	add    BYTE PTR [rax],al
   1400130c8:	cmp    bl,dh
   1400130ca:	add    BYTE PTR [rax],al
   1400130cc:	test   DWORD PTR [rip+0x15af0000],edx        # 0x155b030d2
   1400130d2:	add    BYTE PTR [rax],al
   1400130d4:	rex
   1400130d5:	repz add BYTE PTR [rax],al
   1400130d8:	rcl    BYTE PTR [rip+0x161c0000],0x0        # 0x1561d30df
   1400130df:	add    BYTE PTR [rax-0xd],ch
   1400130e2:	add    BYTE PTR [rax],al
   1400130e4:	sbb    al,0x16
   1400130e6:	add    BYTE PTR [rax],al
   1400130e8:	xchg   edx,eax
   1400130e9:	(bad)  
   1400130ea:	add    BYTE PTR [rax],al
   1400130ec:	xor    bl,0x0
   1400130ef:	add    BYTE PTR [rdx-0x54ffffea],dl
   1400130f5:	(bad)  
   1400130f6:	add    BYTE PTR [rax],al
   1400130f8:	xchg   esp,eax
   1400130f9:	repz add BYTE PTR [rax],al
   1400130fc:	stos   DWORD PTR es:[rdi],eax
   1400130fd:	(bad)  
   1400130fe:	add    BYTE PTR [rax],al
   140013100:	mov    bl,0x16
   140013102:	add    BYTE PTR [rax],al
   140013104:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013105:	repz add BYTE PTR [rax],al
   140013108:	rcl    BYTE PTR [rsi],0x0
   14001310b:	add    BYTE PTR [rbx],dl
   14001310d:	(bad)  
   14001310e:	add    BYTE PTR [rax],al
   140013110:	fdivr  st(3),st
   140013112:	add    BYTE PTR [rax],al
   140013114:	adc    edx,DWORD PTR [rdi]
   140013116:	add    BYTE PTR [rax],al
   140013118:	xchg   BYTE PTR [rdi],dl
   14001311a:	add    BYTE PTR [rax],al
   14001311c:	hlt    
   14001311d:	repz add BYTE PTR [rax],al
   140013120:	xchg   BYTE PTR [rdi],dl
   140013122:	add    BYTE PTR [rax],al
   140013124:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013125:	(bad)  
   140013126:	add    BYTE PTR [rax],al
   140013128:	or     ah,dh
   14001312a:	add    BYTE PTR [rax],al
   14001312c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001312d:	(bad)  
   14001312e:	add    BYTE PTR [rax],al
   140013130:	lods   al,BYTE PTR ds:[rsi]
   140013131:	(bad)  
   140013132:	add    BYTE PTR [rax],al
   140013134:	sbb    ah,dh
   140013136:	add    BYTE PTR [rax],al
   140013138:	rcl    BYTE PTR [rdi],0x0
   14001313b:	add    BYTE PTR [rdi],al
   14001313d:	sbb    BYTE PTR [rax],al
   14001313f:	add    BYTE PTR [rax-0xc],dl
   140013142:	add    BYTE PTR [rax],al
   140013144:	xor    BYTE PTR [rax],bl
   140013146:	add    BYTE PTR [rax],al
   140013148:	rex.RXB sbb BYTE PTR [r8],r8b
   14001314b:	add    BYTE PTR [rsp+rsi*8+0x0],bl
   14001314f:	add    BYTE PTR [rdi+0x18],al
   140013152:	add    BYTE PTR [rax],al
   140013154:	pop    rdx
   140013155:	sbb    BYTE PTR [rax],al
   140013157:	add    BYTE PTR [rsp+rsi*8+0x0],ch
   14001315b:	add    BYTE PTR [rdx+0x18],bl
   14001315e:	add    BYTE PTR [rax],al
   140013160:	fistp  WORD PTR [rcx]
   140013162:	add    BYTE PTR [rax],al
   140013164:	test   ah,dh
   140013166:	add    BYTE PTR [rax],al
   140013168:	fistp  WORD PTR [rcx]
   14001316a:	add    BYTE PTR [rax],al
   14001316c:	pushf  
   14001316d:	sbb    al,BYTE PTR [rax]
   14001316f:	add    BYTE PTR [rax-0x63ffff0c],bl
   140013175:	sbb    al,BYTE PTR [rax]
   140013177:	add    BYTE PTR [rax],bl
   140013179:	sbb    eax,DWORD PTR [rax]
   14001317b:	add    BYTE PTR [rax+0x200000f4],ch
   140013181:	sbb    eax,DWORD PTR [rax]
   140013183:	add    BYTE PTR [rbp-0x3ffffe5],al
   140013189:	hlt    
   14001318a:	add    BYTE PTR [rax],al
   14001318c:	test   DWORD PTR [rbx],ebx
   14001318e:	add    BYTE PTR [rax],al
   140013190:	pushf  
   140013191:	sbb    eax,0xf5180000
   140013196:	add    BYTE PTR [rax],al
   140013198:	pushf  
   140013199:	sbb    eax,0x1da60000
   14001319e:	add    BYTE PTR [rax],al
   1400131a0:	xor    al,0xf5
   1400131a2:	add    BYTE PTR [rax],al
   1400131a4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400131a5:	sbb    eax,0x1dc20000
   1400131aa:	add    BYTE PTR [rax],al
   1400131ac:	rex.W cmc 
   1400131ae:	add    BYTE PTR [rax],al
   1400131b0:	ret    0x1d
   1400131b3:	add    BYTE PTR [rax],al
   1400131b5:	and    DWORD PTR [rax],eax
   1400131b7:	add    BYTE PTR [rax-0xb],bl
   1400131ba:	add    BYTE PTR [rax],al
   1400131bc:	add    BYTE PTR [rcx],ah
   1400131be:	add    BYTE PTR [rax],al
   1400131c0:	rex and DWORD PTR [rax],eax
   1400131c3:	add    BYTE PTR [rbp+rsi*8+0x0],dh
   1400131c7:	add    BYTE PTR [rax+0x21],dl
   1400131ca:	add    BYTE PTR [rax],al
   1400131cc:	jno    0x1400131ef
   1400131ce:	add    BYTE PTR [rax],al
   1400131d0:	(bad)  
   1400131d1:	cmc    
   1400131d2:	add    BYTE PTR [rax],al
   1400131d4:	jno    0x1400131f7
   1400131d6:	add    BYTE PTR [rax],al
   1400131d8:	mov    ecx,0xdc000021
   1400131dd:	cmc    
   1400131de:	add    BYTE PTR [rax],al
   1400131e0:	mov    ecx,0x41000021
   1400131e5:	and    eax,DWORD PTR [rax]
   1400131e7:	add    al,dh
   1400131e9:	cmc    
   1400131ea:	add    BYTE PTR [rax],al
   1400131ec:	mov    al,0x23
   1400131ee:	add    BYTE PTR [rax],al
   1400131f0:	std    
   1400131f1:	and    al,0x0
   1400131f3:	add    BYTE PTR [rsi+rsi*8],ah
   1400131f6:	add    BYTE PTR [rax],al
   1400131f8:	adc    BYTE PTR [rip+0x28590000],ah        # 0x1685a31fe
   1400131fe:	add    BYTE PTR [rax],al
   140013200:	rex.R test BYTE PTR [rax],0x0
   140013204:	jo     0x14001322e
   140013206:	add    BYTE PTR [rax],al
   140013208:	and    eax,0x64000029
   14001320d:	test   BYTE PTR [rax],0x0
   140013210:	xor    BYTE PTR [rcx],ch
   140013212:	add    BYTE PTR [rax],al
   140013214:	push   0xffffffff8c000029
   140013219:	test   BYTE PTR [rax],0x0
   14001321c:	jo     0x140013247
   14001321e:	add    BYTE PTR [rax],al
   140013220:	test   al,0x29
   140013222:	add    BYTE PTR [rax],al
   140013224:	test   al,0xf6
   140013226:	add    BYTE PTR [rax],al
   140013228:	mov    al,0x29
   14001322a:	add    BYTE PTR [rax],al
   14001322c:	shr    BYTE PTR [rcx],1
   14001322e:	add    BYTE PTR [rax],al
   140013230:	(bad)  
   140013231:	test   BYTE PTR [rax],0x0
   140013234:	shr    BYTE PTR [rcx],1
   140013236:	add    BYTE PTR [rax],al
   140013238:	mov    ch,BYTE PTR [rdx]
   14001323a:	add    BYTE PTR [rax],al
   14001323c:	fdivr  st(6),st
   14001323e:	add    BYTE PTR [rax],al
   140013240:	mov    ch,BYTE PTR [rdx]
   140013242:	add    BYTE PTR [rax],al
   140013244:	sbb    ch,BYTE PTR [rip+0xfffffffff6f80000]        # 0x136f9324a
   14001324a:	add    BYTE PTR [rax],al
   14001324c:	sbb    ch,BYTE PTR [rip+0x2d600000]        # 0x16d613252
   140013252:	add    BYTE PTR [rax],al
   140013254:	or     al,0xf7
   140013256:	add    BYTE PTR [rax],al
   140013258:	(bad)  
   140013259:	sub    eax,0x2d7a0000
   14001325e:	add    BYTE PTR [rax],al
   140013260:	sbb    al,0xf7
   140013262:	add    BYTE PTR [rax],al
   140013264:	jp     0x140013293
   140013266:	add    BYTE PTR [rax],al
   140013268:	mov    WORD PTR [rip+0xfffffffff72c0000],gs        # 0x1372d326e
   14001326e:	add    BYTE PTR [rax],al
   140013270:	shr    BYTE PTR [rip+0x2efa0000],0x0        # 0x16efb3277
   140013277:	add    BYTE PTR [rdi+rsi*8+0x2f000000],dh
   14001327e:	add    BYTE PTR [rax],al
   140013280:	imul   ebp,DWORD PTR [rdi],0xf4500000
   140013286:	add    BYTE PTR [rax],al
   140013288:	jo     0x1400132b9
   14001328a:	add    BYTE PTR [rax],al
   14001328c:	nop
   14001328d:	(bad)  
   14001328e:	add    BYTE PTR [rax],al
   140013290:	loopne 0x140013289
   140013292:	add    BYTE PTR [rax],al
   140013294:	nop
   140013295:	(bad)  
   140013296:	add    BYTE PTR [rax],al
   140013298:	iret   
   140013299:	xor    BYTE PTR [rax],al
   14001329b:	add    al,bh
   14001329d:	test   DWORD PTR [rax],0x30cf00
   1400132a3:	add    BYTE PTR [rax+0x31],bh
   1400132a6:	add    BYTE PTR [rax],al
   1400132a8:	sbb    al,bh
   1400132aa:	add    BYTE PTR [rax],al
   1400132ac:	js     0x1400132df
   1400132ae:	add    BYTE PTR [rax],al
   1400132b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400132b1:	xor    DWORD PTR [rax],eax
   1400132b3:	add    BYTE PTR [rax+rdi*8],ch
   1400132b6:	add    BYTE PTR [rax],al
   1400132b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400132b9:	xor    DWORD PTR [rax],eax
   1400132bb:	add    dl,cl
   1400132bd:	xor    DWORD PTR [rax],eax
   1400132bf:	add    BYTE PTR [rax+rdi*8],bh
   1400132c2:	add    BYTE PTR [rax],al
   1400132c4:	retf   0x31
   1400132c7:	add    bh,cl
   1400132c9:	xor    DWORD PTR [rax],eax
   1400132cb:	add    BYTE PTR [rax+rdi*8+0x0],cl
   1400132cf:	add    bh,cl
   1400132d1:	xor    DWORD PTR [rax],eax
   1400132d3:	add    ah,bl
   1400132d5:	xor    DWORD PTR [rax],eax
   1400132d7:	add    BYTE PTR [rax-0x8],dh
   1400132da:	add    BYTE PTR [rax],al
   1400132dc:	lock xor DWORD PTR [rax],eax
   1400132df:	add    BYTE PTR [rcx+0x32],cl
   1400132e2:	add    BYTE PTR [rax],al
   1400132e4:	hlt    
   1400132e5:	clc    
   1400132e6:	add    BYTE PTR [rax],al
   1400132e8:	push   rax
   1400132e9:	xor    al,BYTE PTR [rax]
   1400132eb:	add    BYTE PTR [rdx+0x32],bl
   1400132ee:	add    BYTE PTR [rax],al
   1400132f0:	adc    cl,bh
   1400132f2:	add    BYTE PTR [rax],al
   1400132f4:	pop    rdx
   1400132f5:	xor    al,BYTE PTR [rax]
   1400132f7:	add    BYTE PTR [rax+0x1c000032],dh
   1400132fd:	stc    
   1400132fe:	add    BYTE PTR [rax],al
   140013300:	mov    al,0x32
   140013302:	add    BYTE PTR [rax],al
   140013304:	lock xor al,BYTE PTR [rax]
   140013307:	add    BYTE PTR [rax],bh
   140013309:	stc    
   14001330a:	add    BYTE PTR [rax],al
   14001330c:	lock xor al,BYTE PTR [rax]
   14001330f:	add    cl,al
   140013311:	xor    eax,DWORD PTR [rax]
   140013313:	add    BYTE PTR [rcx+rdi*8+0x0],cl
   140013317:	add    cl,al
   140013319:	xor    eax,DWORD PTR [rax]
   14001331b:	add    bh,cl
   14001331d:	xor    eax,DWORD PTR [rax]
   14001331f:	add    BYTE PTR [rcx+rdi*8+0x0],ah
   140013323:	add    bh,cl
   140013325:	xor    eax,DWORD PTR [rax]
   140013327:	add    bl,ah
   140013329:	xor    eax,DWORD PTR [rax]
   14001332b:	add    BYTE PTR [rcx+rdi*8+0x0],dh
   14001332f:	add    bl,ah
   140013331:	xor    eax,DWORD PTR [rax]
   140013333:	add    bh,dh
   140013335:	xor    eax,DWORD PTR [rax]
   140013337:	add    BYTE PTR [rcx+rdi*8+0x33f70000],al
   14001333e:	add    BYTE PTR [rax],al
   140013340:	cld    
   140013341:	xor    eax,DWORD PTR [rax]
   140013343:	add    BYTE PTR [rcx+rdi*8+0x33fc0000],dl
   14001334a:	add    BYTE PTR [rax],al
   14001334c:	add    DWORD PTR [rax+rax*1],esi
   14001334f:	add    BYTE PTR [rcx+rdi*8+0x34010000],bh
   140013356:	add    BYTE PTR [rax],al
   140013358:	or     DWORD PTR [rax+rax*1],esi
   14001335b:	add    ah,bl
   14001335d:	stc    
   14001335e:	add    BYTE PTR [rax],al
   140013360:	adc    BYTE PTR [rax+rax*1],dh
   140013363:	add    BYTE PTR [rdi+0x34],dh
   140013366:	add    BYTE PTR [rax],al
   140013368:	push   rax
   140013369:	hlt    
   14001336a:	add    BYTE PTR [rax],al
   14001336c:	xor    BYTE PTR [rax+rax*1],0x0
   140013370:	movabs ds:0xe00000fa20000034,al
   140013379:	xor    al,0x0
   14001337b:	add    BYTE PTR [rdi],dl
   14001337d:	xor    eax,0xfa380000
   140013382:	add    BYTE PTR [rax],al
   140013384:	(bad)  
   140013385:	xor    eax,0x355b0000
   14001338a:	add    BYTE PTR [rax],al
   14001338c:	rex.R cli 
   14001338e:	add    BYTE PTR [rax],al
   140013390:	jo     0x1400133c7
   140013392:	add    BYTE PTR [rax],al
   140013394:	jbe    0x1400133cb
   140013396:	add    BYTE PTR [rax],al
   140013398:	jl     0x140013394
   14001339a:	add    BYTE PTR [rax],al
   14001339c:	jbe    0x1400133d3
   14001339e:	add    BYTE PTR [rax],al
   1400133a0:	jle    0x1400133d7
   1400133a2:	add    BYTE PTR [rax],al
   1400133a4:	test   dl,bh
   1400133a6:	add    BYTE PTR [rax],al
   1400133a8:	jle    0x1400133df
   1400133aa:	add    BYTE PTR [rax],al
   1400133ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400133ad:	xor    eax,0xfa980000
   1400133b2:	add    BYTE PTR [rax],al
   1400133b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400133b5:	xor    eax,0x35bc0000
   1400133ba:	add    BYTE PTR [rax],al
   1400133bc:	lods   al,BYTE PTR ds:[rsi]
   1400133bd:	cli    
   1400133be:	add    BYTE PTR [rax],al
   1400133c0:	mov    esp,0xce000035
   1400133c5:	xor    eax,0xfabc0000
   1400133ca:	add    BYTE PTR [rax],al
   1400133cc:	loopne 0x140013403
   1400133ce:	add    BYTE PTR [rax],al
   1400133d0:	or     esi,DWORD PTR [rsi]
   1400133d2:	add    BYTE PTR [rax],al
   1400133d4:	or     al,0xfb
   1400133d6:	add    BYTE PTR [rax],al
   1400133d8:	or     esi,DWORD PTR [rsi]
   1400133da:	add    BYTE PTR [rax],al
   1400133dc:	cmp    eax,0x18000036
   1400133e1:	sti    
   1400133e2:	add    BYTE PTR [rax],al
   1400133e4:	cmp    eax,0x4b000036
   1400133e9:	add    BYTE PTR ss:[rax],al
   1400133ec:	sub    al,0xfb
   1400133ee:	add    BYTE PTR [rax],al
   1400133f0:	rex.WXB
   1400133f1:	add    BYTE PTR ss:[rax],al
   1400133f4:	push   rsi
   1400133f5:	add    BYTE PTR ss:[rax],al
   1400133f8:	cmp    al,0xfb
   1400133fa:	add    BYTE PTR [rax],al
   1400133fc:	(bad)  
   1400133fd:	add    BYTE PTR ss:[rax],al
   140013400:	shl    BYTE PTR [rsi],0x0
   140013403:	add    BYTE PTR [rax-0x5],ah
   140013406:	add    BYTE PTR [rax],al
   140013408:	shl    BYTE PTR [rsi],1
   14001340a:	add    BYTE PTR [rax],al
   14001340c:	jne    0x140013445
   14001340e:	add    BYTE PTR [rax],al
   140013410:	lock icebp 
   140013412:	add    BYTE PTR [rax],al
   140013414:	jl     0x14001344d
   140013416:	add    BYTE PTR [rax],al
   140013418:	rex.WX cmp BYTE PTR [rax],al
   14001341b:	add    BYTE PTR [rax],al
   14001341d:	repnz add BYTE PTR [rax],al
   140013420:	push   rax
   140013421:	cmp    BYTE PTR [rax],al
   140013423:	add    dh,bl
   140013425:	cmp    BYTE PTR [rax],al
   140013427:	add    BYTE PTR [rdx+rsi*8],ch
   14001342a:	add    BYTE PTR [rax],al
   14001342c:	in     al,0x38
   14001342e:	add    BYTE PTR [rax],al
   140013430:	pop    rax
   140013431:	cmp    DWORD PTR [rax],eax
   140013433:	add    BYTE PTR [rdx+rsi*8+0x0],cl
   140013437:	add    BYTE PTR [rax+0x39],ah
   14001343a:	add    BYTE PTR [rax],al
   14001343c:	iret   
   14001343d:	cmp    DWORD PTR [rax],eax
   14001343f:	add    BYTE PTR [rax-0xf],cl
   140013442:	add    BYTE PTR [rax],al
   140013444:	fdivr  DWORD PTR [rcx]
   140013446:	add    BYTE PTR [rax],al
   140013448:	call   0x1ac013488
   14001344d:	sti    
   14001344e:	add    BYTE PTR [rax],al
   140013450:	lock cmp eax,DWORD PTR [rax]
   140013453:	add    BYTE PTR [rdx-0x6bffffc4],bh
   140013459:	sti    
   14001345a:	add    BYTE PTR [rax],al
   14001345c:	sar    BYTE PTR [rax+rax*1],0x0
   140013460:	rex.WRB
   140013461:	add    BYTE PTR ds:[rax],al
   140013464:	mov    al,0xfb
   140013466:	add    BYTE PTR [rax],al
   140013468:	push   rsp
   140013469:	add    BYTE PTR ds:[rax],al
   14001346c:	mov    dl,0x3e
   14001346e:	add    BYTE PTR [rax],al
   140013470:	fdiv   st(3),st
   140013472:	add    BYTE PTR [rax],al
   140013474:	mov    eax,0xe400003e
   140013479:	add    BYTE PTR ds:[rax],al
   14001347c:	in     al,0xfb
   14001347e:	add    BYTE PTR [rax],al
   140013480:	clc    
   140013481:	add    BYTE PTR ds:[rax],al
   140013484:	(bad)  
   140013485:	(bad)  
   140013486:	add    BYTE PTR [rax],al
   140013488:	rex.W icebp 
   14001348a:	add    BYTE PTR [rax],al
   14001348c:	and    BYTE PTR [rdi],bh
   14001348e:	add    BYTE PTR [rax],al
   140013490:	cld    
   140013491:	(bad)  
   140013492:	add    BYTE PTR [rax],al
   140013494:	rex.W icebp 
   140013496:	add    BYTE PTR [rax],al
   140013498:	add    al,0x40
   14001349a:	add    BYTE PTR [rax],al
   14001349c:	(bad)  
   14001349d:	add    BYTE PTR [rax],al
   1400134a0:	push   rax
   1400134a1:	icebp  
   1400134a2:	add    BYTE PTR [rax],al
   1400134a4:	jo     0x1400134e6
   1400134a6:	add    BYTE PTR [rax],al
   1400134a8:	(bad)  
   1400134a9:	add    BYTE PTR [r8],al
   1400134ac:	in     al,0xfb
   1400134ae:	add    BYTE PTR [rax],al
   1400134b0:	push   rax
   1400134b1:	add    BYTE PTR [r8],al
   1400134b4:	cdq    
   1400134b5:	add    BYTE PTR [r8],al
   1400134b8:	fdiv   st(3),st
   1400134ba:	add    BYTE PTR [rax],al
   1400134bc:	movabs al,ds:0xfc00004411000041
   1400134c5:	sti    
   1400134c6:	add    BYTE PTR [rax],al
   1400134c8:	and    BYTE PTR [rax+rax*1+0x0],al
   1400134cc:	xor    al,BYTE PTR [rax+rax*1+0x0]
   1400134d0:	in     al,0xfb
   1400134d2:	add    BYTE PTR [rax],al
   1400134d4:	push   rax
   1400134d5:	add    BYTE PTR [rax],r8b
   1400134d8:	outs   dx,BYTE PTR ds:[rsi]
   1400134d9:	add    BYTE PTR [rax],r8b
   1400134dc:	xor    ah,bh
   1400134de:	add    BYTE PTR [rax],al
   1400134e0:	je     0x140013526
   1400134e2:	add    BYTE PTR [rax],al
   1400134e4:	adc    al,BYTE PTR [rbp+0x0]
   1400134e7:	add    BYTE PTR [rsp+rdi*8],dh
   1400134ea:	add    BYTE PTR [rax],al
   1400134ec:	sbb    BYTE PTR [rbp+0x0],al
   1400134ef:	add    BYTE PTR [rdi],ch
   1400134f1:	add    BYTE PTR [r8],r8b
   1400134f4:	in     al,0xfb
   1400134f6:	add    BYTE PTR [rax],al
   1400134f8:	rex
   1400134f9:	add    BYTE PTR [r8],r8b
   1400134fc:	jns    0x140013543
   1400134fe:	add    BYTE PTR [rax],al
   140013500:	in     al,0xfb
   140013502:	add    BYTE PTR [rax],al
   140013504:	add    BYTE PTR [rbp+0x0],0x0
   140013508:	cwde   
   140013509:	add    BYTE PTR [r8],r8b
   14001350c:	in     al,0xfb
   14001350e:	add    BYTE PTR [rax],al
   140013510:	lods   al,BYTE PTR ds:[rsi]
   140013511:	add    BYTE PTR [r8],r8b
   140013514:	add    BYTE PTR [rsi+0x0],al
   140013517:	add    BYTE PTR [rax-0x4],ah
   14001351a:	add    BYTE PTR [rax],al
   14001351c:	or     BYTE PTR [rsi+0x0],al
   14001351f:	add    BYTE PTR [rbp+0x46],cl
   140013522:	add    BYTE PTR [rax],al
   140013524:	rex.W icebp 
   140013526:	add    BYTE PTR [rax],al
   140013528:	rol    BYTE PTR [rsi+0x0],0x0
   14001352c:	or     eax,0x80000047
   140013531:	cld    
   140013532:	add    BYTE PTR [rax],al
   140013534:	push   rsp
   140013535:	rex.RXB add BYTE PTR [r8],r8b
   140013538:	and    al,0x48
   14001353a:	add    BYTE PTR [rax],al
   14001353c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001353d:	cld    
   14001353e:	add    BYTE PTR [rax],al
   140013540:	pop    rsp
   140013541:	rex.W add BYTE PTR [rax],al
   140013544:	nop
   140013545:	rex.W add BYTE PTR [rax],al
   140013548:	rex.W icebp 
   14001354a:	add    BYTE PTR [rax],al
   14001354c:	movabs al,ds:0xb000004a11000048
   140013555:	cld    
   140013556:	add    BYTE PTR [rax],al
   140013558:	jl     0x1400135a4
   14001355a:	add    BYTE PTR [rax],al
   14001355c:	fwait
   14001355d:	rex.WX add BYTE PTR [rax],al
   140013560:	mov    esp,0xb00000fc
   140013565:	rex.WX add BYTE PTR [rax],al
   140013568:	int    0x4a
   14001356a:	add    BYTE PTR [rax],al
   14001356c:	in     al,0xfb
   14001356e:	add    BYTE PTR [rax],al
   140013570:	(bad)  
   140013571:	rex.WX add BYTE PTR [rax],al
   140013574:	(bad)  
   140013575:	rex.WXB add BYTE PTR [r8],al
   140013578:	rex.W icebp 
   14001357a:	add    BYTE PTR [rax],al
   14001357c:	jo     0x1400135c9
   14001357e:	add    BYTE PTR [rax],al
   140013580:	jb     0x1400135cd
   140013582:	add    BYTE PTR [rax],al
   140013584:	mov    eax,0x560000fc
   140013589:	rex.WRX add BYTE PTR [rax],r8b
   14001358c:	je     0x1400135dc
   14001358e:	add    BYTE PTR [rax],al
   140013590:	pop    rax
   140013591:	cld    
   140013592:	add    BYTE PTR [rax],al
   140013594:	jp     0x1400135e4
   140013596:	add    BYTE PTR [rax],al
   140013598:	xchg   ebp,eax
   140013599:	rex.WRX add BYTE PTR [rax],r8b
   14001359c:	pop    rax
   14001359d:	cld    
   14001359e:	add    BYTE PTR [rax],al
   1400135a0:	movabs al,ds:0x5800004ec000004e
   1400135a9:	cld    
   1400135aa:	add    BYTE PTR [rax],al
   1400135ac:	(bad)  
   1400135ad:	rex.WRX add BYTE PTR [rax],r8b
   1400135b0:	out    0x4e,al
   1400135b2:	add    BYTE PTR [rax],al
   1400135b4:	cmp    ch,bh
   1400135b6:	add    BYTE PTR [rax],al
   1400135b8:	xchg   BYTE PTR [rdi+0x0],cl
   1400135bb:	add    BYTE PTR [rsi-0x63ffffb1],bl
   1400135c1:	icebp  
   1400135c2:	add    BYTE PTR [rax],al
   1400135c4:	sahf   
   1400135c5:	rex.WRXB add BYTE PTR [r8],r8b
   1400135c8:	sbb    edx,DWORD PTR [rax+0x0]
   1400135cb:	add    BYTE PTR [rcx+rsi*8+0x501c0000],ch
   1400135d2:	add    BYTE PTR [rax],al
   1400135d4:	mov    ebx,0xe0000051
   1400135d9:	icebp  
   1400135da:	add    BYTE PTR [rax],al
   1400135dc:	mov    esp,0x44000051
   1400135e1:	push   rdx
   1400135e2:	add    BYTE PTR [rax],al
   1400135e4:	sbb    al,0xf2
   1400135e6:	add    BYTE PTR [rax],al
   1400135e8:	rex.R push rdx
   1400135ea:	add    BYTE PTR [rax],al
   1400135ec:	push   rdx
   1400135ed:	push   rdx
   1400135ee:	add    BYTE PTR [rax],al
   1400135f0:	cmp    al,0xf2
   1400135f2:	add    BYTE PTR [rax],al
   1400135f4:	push   rdx
   1400135f5:	push   rdx
   1400135f6:	add    BYTE PTR [rax],al
   1400135f8:	pop    rdi
   1400135f9:	push   rdx
   1400135fa:	add    BYTE PTR [rax],al
   1400135fc:	pop    rax
   1400135fd:	repnz add BYTE PTR [rax],al
   140013600:	(bad)  
   140013601:	push   rdx
   140013602:	add    BYTE PTR [rax],al
   140013604:	push   0x52
   140013606:	add    BYTE PTR [rax],al
   140013608:	shl    dl,1
   14001360a:	add    BYTE PTR [rax],al
   14001360c:	push   0x52
   14001360e:	add    BYTE PTR [rax],al
   140013610:	cwde   
   140013611:	push   rdx
   140013612:	add    BYTE PTR [rax],al
   140013614:	loopne 0x140013608
   140013616:	add    BYTE PTR [rax],al
   140013618:	cwde   
   140013619:	push   rdx
   14001361a:	add    BYTE PTR [rax],al
   14001361c:	lods   al,BYTE PTR ds:[rsi]
   14001361d:	push   rdx
   14001361e:	add    BYTE PTR [rax],al
   140013620:	and    al,0xf3
   140013622:	add    BYTE PTR [rax],al
   140013624:	lods   al,BYTE PTR ds:[rsi]
   140013625:	push   rdx
   140013626:	add    BYTE PTR [rax],al
   140013628:	rcl    BYTE PTR [rdx+0x0],0x0
   14001362c:	push   rsp
   14001362d:	repz add BYTE PTR [rax],al
   140013630:	rcl    BYTE PTR [rdx+0x0],0x0
   140013634:	or     eax,0xb8000053
   140013639:	repz add BYTE PTR [rax],al
   14001363c:	or     eax,0x25000053
   140013641:	push   rbx
   140013642:	add    BYTE PTR [rax],al
   140013644:	enter  0xf3,0x0
   140013648:	es push rbx
   14001364a:	add    BYTE PTR [rax],al
   14001364c:	jae    0x1400136a1
   14001364e:	add    BYTE PTR [rax],al
   140013650:	sub    al,0xf4
   140013652:	add    BYTE PTR [rax],al
   140013654:	jae    0x1400136a9
   140013656:	add    BYTE PTR [rax],al
   140013658:	mov    edx,DWORD PTR [rbx+0x0]
   14001365b:	add    BYTE PTR [rsp+rsi*8],bh
   14001365e:	add    BYTE PTR [rax],al
   140013660:	mov    WORD PTR [rbx+0x0],ss
   140013663:	add    BYTE PTR [rsp+rdx*2-0xb480000],dh
   14001366a:	add    BYTE PTR [rax],al
   14001366c:	mov    ah,0x54
   14001366e:	add    BYTE PTR [rax],al
   140013670:	push   rbx
   140013671:	push   rbp
   140013672:	add    BYTE PTR [rax],al
   140013674:	(bad)  
   140013675:	hlt    
   140013676:	add    BYTE PTR [rax],al
   140013678:	push   rbx
   140013679:	push   rbp
   14001367a:	add    BYTE PTR [rax],al
   14001367c:	jg     0x1400136d3
   14001367e:	add    BYTE PTR [rax],al
   140013680:	in     al,dx
   140013681:	hlt    
   140013682:	add    BYTE PTR [rax],al
   140013684:	adc    BYTE PTR [rbp+0x0],0x0
   140013688:	mov    cl,0x58
   14001368a:	add    BYTE PTR [rax],al
   14001368c:	test   ch,dh
   14001368e:	add    BYTE PTR [rax],al
   140013690:	mov    cl,0x58
   140013692:	add    BYTE PTR [rax],al
   140013694:	mov    ecx,0xa0000058
   140013699:	cmc    
   14001369a:	add    BYTE PTR [rax],al
   14001369c:	mov    ecx,0xc0000058
   1400136a1:	pop    rax
   1400136a2:	add    BYTE PTR [rax],al
   1400136a4:	mov    ah,0xf5
   1400136a6:	add    BYTE PTR [rax],al
   1400136a8:	rcr    BYTE PTR [rax+0x0],0x0
   1400136ac:	fwait
   1400136ad:	pop    rcx
   1400136ae:	add    BYTE PTR [rax],al
   1400136b0:	add    dh,dh
   1400136b2:	add    BYTE PTR [rax],al
   1400136b4:	fwait
   1400136b5:	pop    rcx
   1400136b6:	add    BYTE PTR [rax],al
   1400136b8:	cmp    ebx,DWORD PTR [rdx+0x0]
   1400136bb:	add    BYTE PTR [rsi+rsi*8],dl
   1400136be:	add    BYTE PTR [rax],al
   1400136c0:	cmp    al,0x5a
   1400136c2:	add    BYTE PTR [rax],al
   1400136c4:	pop    rsi
   1400136c5:	pop    rdx
   1400136c6:	add    BYTE PTR [rax],al
   1400136c8:	xor    al,0xf6
   1400136ca:	add    BYTE PTR [rax],al
   1400136cc:	pop    rsi
   1400136cd:	pop    rdx
   1400136ce:	add    BYTE PTR [rax],al
   1400136d0:	rcr    DWORD PTR [rbx+0x0],1
   1400136d3:	add    BYTE PTR [rsi+rsi*8+0x0],dl
   1400136d7:	add    dl,dl
   1400136d9:	pop    rbx
   1400136da:	add    BYTE PTR [rax],al
   1400136dc:	xor    ebx,DWORD PTR [rax+rax*1+0x0]
   1400136e0:	jl     0x1400136d8
   1400136e2:	add    BYTE PTR [rax],al
   1400136e4:	xor    al,0x5c
   1400136e6:	add    BYTE PTR [rax],al
   1400136e8:	rex.W pop rsp
   1400136ea:	add    BYTE PTR [rax],al
   1400136ec:	cwde   
   1400136ed:	test   BYTE PTR [rax],0x0
   1400136f0:	rex.W pop rsp
   1400136f2:	add    BYTE PTR [rax],al
   1400136f4:	pop    rsp
   1400136f5:	pop    rsp
   1400136f6:	add    BYTE PTR [rax],al
   1400136f8:	mov    ah,0xf6
   1400136fa:	add    BYTE PTR [rax],al
   1400136fc:	pop    rsp
   1400136fd:	pop    rsp
   1400136fe:	add    BYTE PTR [rax],al
   140013700:	pop    sp
   140013702:	add    BYTE PTR [rax],al
   140013704:	rex.WR test QWORD PTR [rax],0x5c6600
   14001370b:	add    BYTE PTR [rdi+0x6800005d],dl
   140013711:	test   DWORD PTR [rax],0x5d9700
   140013717:	add    BYTE PTR [rcx-0x77ffffa3],ah
   14001371d:	test   DWORD PTR [rax],0x5da100
   140013723:	add    al,ah
   140013725:	pop    rbp
   140013726:	add    BYTE PTR [rax],al
   140013728:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013729:	test   DWORD PTR [rax],0x5de000
   14001372f:	add    BYTE PTR [rbx],bh
   140013731:	pop    rsi
   140013732:	add    BYTE PTR [rax],al
   140013734:	shl    bh,1
   140013736:	add    BYTE PTR [rax],al
   140013738:	cmp    al,0x5e
   14001373a:	add    BYTE PTR [rax],al
   14001373c:	test   al,0x5e
   14001373e:	add    BYTE PTR [rax],al
   140013740:	nop
   140013741:	clc    
   140013742:	add    BYTE PTR [rax],al
   140013744:	test   al,0x5e
   140013746:	add    BYTE PTR [rax],al
   140013748:	add    DWORD PTR [rdi+0x0],ebx
   14001374b:	add    BYTE PTR [rax+0x10000f8],dh
   140013751:	pop    rdi
   140013752:	add    BYTE PTR [rax],al
   140013754:	(bad)  
   140013755:	(bad)  
   140013756:	add    BYTE PTR [rax],al
   140013758:	(bad)  
   140013759:	clc    
   14001375a:	add    BYTE PTR [rax],al
   14001375c:	and    BYTE PTR [rax+0x0],ah
   14001375f:	add    BYTE PTR [rdi],dh
   140013761:	(bad)  
   140013762:	add    BYTE PTR [rax],al
   140013764:	add    cl,bh
   140013766:	add    BYTE PTR [rax],al
   140013768:	cmp    BYTE PTR [rax+0x0],ah
   14001376b:	add    BYTE PTR [rbx+0x60],dh
   14001376e:	add    BYTE PTR [rax],al
   140013770:	clc    
   140013771:	stc    
   140013772:	add    BYTE PTR [rax],al
   140013774:	je     0x1400137d6
   140013776:	add    BYTE PTR [rax],al
   140013778:	lods   al,BYTE PTR ds:[rsi]
   140013779:	(bad)  
   14001377a:	add    BYTE PTR [rax],al
   14001377c:	sub    dl,bh
   14001377e:	add    BYTE PTR [rax],al
   140013780:	mov    esp,0xcc000060
   140013785:	(bad)  
   140013786:	add    BYTE PTR [rax],al
   140013788:	pop    rax
   140013789:	cli    
   14001378a:	add    BYTE PTR [rax],al
   14001378c:	int3   
   14001378d:	(bad)  
   14001378e:	add    BYTE PTR [rax],al
   140013790:	add    BYTE PTR [rcx+0x0],ah
   140013793:	add    BYTE PTR [rax-0x6],ch
   140013796:	add    BYTE PTR [rax],al
   140013798:	add    BYTE PTR [rcx+0x0],ah
   14001379b:	add    BYTE PTR [rbx],cl
   14001379d:	(bad)  
   14001379e:	add    BYTE PTR [rax],al
   1400137a0:	int3   
   1400137a1:	cli    
   1400137a2:	add    BYTE PTR [rax],al
   1400137a4:	or     esp,DWORD PTR [rcx+0x0]
   1400137a7:	add    BYTE PTR [rcx+riz*2],ch
   1400137aa:	add    BYTE PTR [rax],al
   1400137ac:	in     al,0xfa
   1400137ae:	add    BYTE PTR [rax],al
   1400137b0:	sub    al,0x61
   1400137b2:	add    BYTE PTR [rax],al
   1400137b4:	push   rcx
   1400137b5:	(bad)  
   1400137b6:	add    BYTE PTR [rax],al
   1400137b8:	clc    
   1400137b9:	cli    
   1400137ba:	add    BYTE PTR [rax],al
   1400137bc:	push   rdx
   1400137bd:	(bad)  
   1400137be:	add    BYTE PTR [rax],al
   1400137c0:	gs (bad) 
   1400137c2:	add    BYTE PTR [rax],al
   1400137c4:	push   rax
   1400137c5:	sti    
   1400137c6:	add    BYTE PTR [rax],al
   1400137c8:	data16 (bad) 
   1400137ca:	add    BYTE PTR [rax],al
   1400137cc:	(bad)  
   1400137cd:	(bad)  
   1400137ce:	add    BYTE PTR [rax],al
   1400137d0:	test   bl,bh
   1400137d2:	add    BYTE PTR [rax],al
   1400137d4:	(bad)  
   1400137d5:	(bad)  
   1400137d6:	add    BYTE PTR [rax],al
   1400137d8:	and    esp,DWORD PTR [rdx+0x0]
   1400137db:	add    BYTE PTR [rax+0x240000fb],ah
   1400137e1:	(bad)  
   1400137e2:	add    BYTE PTR [rax],al
   1400137e4:	(bad)  
   1400137e6:	add    BYTE PTR [rax],al
   1400137e8:	int3   
   1400137e9:	sti    
   1400137ea:	add    BYTE PTR [rax],al
   1400137ec:	ins    BYTE PTR es:[rdi],dx
   1400137ed:	(bad)  
   1400137ee:	add    BYTE PTR [rax],al
   1400137f0:	xchg   BYTE PTR [rdx+0x0],ah
   1400137f3:	add    ah,ah
   1400137f5:	sti    
   1400137f6:	add    BYTE PTR [rax],al
   1400137f8:	mov    WORD PTR [rdx+0x0],fs
   1400137fb:	add    BYTE PTR [rdi-0x1bffff9e],ch
   140013801:	sti    
   140013802:	add    BYTE PTR [rax],al
   140013804:	mov    eax,0xe7000062
   140013809:	(bad)  
   14001380a:	add    BYTE PTR [rax],al
   14001380c:	rex.W icebp 
   14001380e:	add    BYTE PTR [rax],al
   140013810:	lock (bad) 
   140013812:	add    BYTE PTR [rax],al
   140013814:	(bad)  
   140013815:	movsxd eax,DWORD PTR [rax]
   140013817:	add    ah,ah
   140013819:	sti    
   14001381a:	add    BYTE PTR [rax],al
   14001381c:	adc    BYTE PTR [rbx+0x0],ah
   14001381f:	add    BYTE PTR [rbx+riz*2+0x0],al
   140013823:	add    BYTE PTR [rax-0xf],cl
   140013826:	add    BYTE PTR [rax],al
   140013828:	movsxd r8,DWORD PTR [rax]
   14001382b:	add    BYTE PTR [rsi+0x63],bh
   14001382e:	add    BYTE PTR [rax],al
   140013830:	push   rax
   140013831:	hlt    
   140013832:	add    BYTE PTR [rax],al
   140013834:	test   BYTE PTR [rbx+0x0],ah
   140013837:	add    BYTE PTR [rbx+0x50000063],bh
   14001383d:	hlt    
   14001383e:	add    BYTE PTR [rax],al
   140013840:	(bad)
   140013844:	add    esp,DWORD PTR [rax+rax*1+0x0]
   140013848:	in     al,dx
   140013849:	sti    
   14001384a:	add    BYTE PTR [rax],al
   14001384c:	or     al,0x64
   14001384e:	add    BYTE PTR [rax],al
   140013850:	(bad)  
   140013851:	add    BYTE PTR fs:[rax],al
   140013854:	fdiv   st(3),st
   140013856:	add    BYTE PTR [rax],al
   140013858:	rex.W
   140013859:	add    BYTE PTR fs:[rax],al
   14001385c:	test   DWORD PTR [rax+rax*1+0x0],esp
   140013860:	in     al,dx
   140013861:	sti    
   140013862:	add    BYTE PTR [rax],al
   140013864:	mov    WORD PTR [rax+rax*1+0x0],fs
   140013868:	mov    bh,0x64
   14001386a:	add    BYTE PTR [rax],al
   14001386c:	hlt    
   14001386d:	sti    
   14001386e:	add    BYTE PTR [rax],al
   140013870:	shl    BYTE PTR [rax+rax*1+0x0],0xeb
   140013875:	add    BYTE PTR fs:[rax],al
   140013878:	hlt    
   140013879:	sti    
   14001387a:	add    BYTE PTR [rax],al
   14001387c:	hlt    
   14001387d:	add    BYTE PTR fs:[rax],al
   140013880:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013881:	add    BYTE PTR gs:[rax],al
   140013884:	push   rax
   140013885:	hlt    
   140013886:	add    BYTE PTR [rax],al
   140013888:	mov    al,0x65
   14001388a:	add    BYTE PTR [rax],al
   14001388c:	loope  0x1400138f3
   14001388e:	add    BYTE PTR [rax],al
   140013890:	rex.W icebp 
   140013892:	add    BYTE PTR [rax],al
   140013894:	call   0x18b0138fe
   140013899:	data16 add BYTE PTR [rax],al
   14001389c:	rex.W icebp 
   14001389e:	add    BYTE PTR [rax],al
   1400138a0:	push   rsp
   1400138a1:	data16 add BYTE PTR [rax],al
   1400138a4:	jmp    QWORD PTR [rsi+0x0]
   1400138a7:	add    BYTE PTR [rax+0x80000fd],al
   1400138ad:	add    BYTE PTR [eax],al
   1400138b0:	jge    0x14001391a
   1400138b2:	add    BYTE PTR [rax],al
   1400138b4:	rex.W std 
   1400138b6:	add    BYTE PTR [rax],al
   1400138b8:	test   BYTE PTR [rax+0x0],ch
   1400138bb:	add    BYTE PTR [rip+0x68000069],ah        # 0x1a801392a
   1400138c1:	std    
   1400138c2:	add    BYTE PTR [rax],al
   1400138c4:	xor    BYTE PTR [rcx+0x0],ch
   1400138c7:	add    BYTE PTR [rcx+rbp*2+0x0],ah
   1400138cb:	add    ah,ah
   1400138cd:	sti    
   1400138ce:	add    BYTE PTR [rax],al
   1400138d0:	jo     0x14001393b
   1400138d2:	add    BYTE PTR [rax],al
   1400138d4:	mov    eax,0xe4000069
   1400138d9:	sti    
   1400138da:	add    BYTE PTR [rax],al
   1400138dc:	shr    BYTE PTR [rcx+0x0],0x0
   1400138e0:	loopne 0x14001394b
   1400138e2:	add    BYTE PTR [rax],al
   1400138e4:	rex.W icebp 
   1400138e6:	add    BYTE PTR [rax],al
   1400138e8:	lock imul eax,DWORD PTR [rax],0x6a2d00
   1400138ef:	add    BYTE PTR [rax-0xc],dl
   1400138f2:	add    BYTE PTR [rax],al
   1400138f4:	rex push 0x0
   1400138f7:	add    BYTE PTR [rdx+rbp*2+0x0],bh
   1400138fb:	add    BYTE PTR [rax-0xf],cl
   1400138fe:	add    BYTE PTR [rax],al
   140013900:	nop
   140013901:	push   0x0
   140013903:	add    BYTE PTR [rdx-0x1bffff96],dh
   140013909:	sti    
   14001390a:	add    BYTE PTR [rax],al
   14001390c:	shr    BYTE PTR [rdx+0x0],0x0
   140013910:	cli    
   140013911:	push   0x0
   140013913:	add    BYTE PTR [rax-0xf],cl
   140013916:	add    BYTE PTR [rax],al
   140013918:	add    BYTE PTR [rbx+0x0],ch
   14001391b:	add    BYTE PTR [rbp+0x6b],dl
   14001391e:	add    BYTE PTR [rax],al
   140013920:	rex.W icebp 
   140013922:	add    BYTE PTR [rax],al
   140013924:	pop    rsp
   140013925:	imul   eax,DWORD PTR [rax],0x0
   140013928:	(bad)  
   140013929:	ins    BYTE PTR es:[rdi],dx
   14001392a:	add    BYTE PTR [rax],al
   14001392c:	call   0x150013a30
   140013931:	ins    BYTE PTR es:[rdi],dx
   140013932:	add    BYTE PTR [rax],al
   140013934:	mov    ebx,0xe800006c
   140013939:	inc    DWORD PTR [rax]
   14001393b:	add    ah,al
   14001393d:	ins    BYTE PTR es:[rdi],dx
   14001393e:	add    BYTE PTR [rax],al
   140013940:	outs   dx,DWORD PTR ds:[rsi]
   140013941:	ins    DWORD PTR es:[rdi],dx
   140013942:	add    BYTE PTR [rax],al
   140013944:	call   0x1b8013a48
   140013949:	ins    DWORD PTR es:[rdi],dx
   14001394a:	add    BYTE PTR [rax],al
   14001394c:	scas   eax,DWORD PTR es:[rdi]
   14001394d:	ins    DWORD PTR es:[rdi],dx
   14001394e:	add    BYTE PTR [rax],al
   140013950:	push   rax
   140013951:	hlt    
   140013952:	add    BYTE PTR [rax],al
   140013954:	mov    eax,0x3f00006d
   140013959:	outs   dx,BYTE PTR ds:[rsi]
   14001395a:	add    BYTE PTR [rax],al
   14001395c:	in     al,dx
   14001395d:	std    
   14001395e:	add    BYTE PTR [rax],al
   140013960:	rex.W outs dx,BYTE PTR ds:[rsi]
   140013962:	add    BYTE PTR [rax],al
   140013964:	(bad)  
   140013965:	outs   dx,BYTE PTR ds:[rsi]
   140013966:	add    BYTE PTR [rax],al
   140013968:	call   0x11c013a6c
   14001396d:	outs   dx,BYTE PTR ds:[rsi]
   14001396e:	add    BYTE PTR [rax],al
   140013970:	(bad)  
   140013971:	outs   dx,DWORD PTR ds:[rsi]
   140013972:	add    BYTE PTR [rax],al
   140013974:	call   0x1a8013a78
   140013979:	outs   dx,DWORD PTR ds:[rsi]
   14001397a:	add    BYTE PTR [rax],al
   14001397c:	(bad)  [rdi+0x0]
   14001397f:	add    BYTE PTR [rax-0xc],dl
   140013982:	add    BYTE PTR [rax],al
   140013984:	in     al,0x6f
   140013986:	add    BYTE PTR [rax],al
   140013988:	cmp    dh,BYTE PTR [rax+0x0]
   14001398b:	add    BYTE PTR [rax-0xc],dl
   14001398e:	add    BYTE PTR [rax],al
   140013990:	rex jo 0x140013993
   140013993:	add    ch,bl
   140013995:	jo     0x140013997
   140013997:	add    BYTE PTR [rbp+rdi*8+0x70e40000],cl
   14001399e:	add    BYTE PTR [rax],al
   1400139a0:	cmp    esi,DWORD PTR [rcx+0x0]
   1400139a3:	add    al,al
   1400139a5:	inc    BYTE PTR [rax]
   1400139a7:	add    BYTE PTR [rcx+rsi*2+0x0],al
   1400139ab:	add    dh,ch
   1400139ad:	jb     0x1400139af
   1400139af:	add    ah,dl
   1400139b1:	std    
   1400139b2:	add    BYTE PTR [rax],al
   1400139b4:	hlt    
   1400139b5:	jb     0x1400139b7
   1400139b7:	add    BYTE PTR [rax-0x4fffff8c],bh
   1400139bd:	std    
   1400139be:	add    BYTE PTR [rax],al
   1400139c0:	shl    BYTE PTR [rax+rax*1+0x0],0x18
   1400139c5:	jne    0x1400139c7
   1400139c7:	add    BYTE PTR [rbp+rdi*8+0x75200000],bl
   1400139ce:	add    BYTE PTR [rax],al
   1400139d0:	clc    
   1400139d1:	jne    0x1400139d3
   1400139d3:	add    BYTE PTR [rsi+rdi*8],cl
   1400139d6:	add    BYTE PTR [rax],al
   1400139d8:	add    BYTE PTR [rsi+0x0],dh
   1400139db:	add    BYTE PTR [rdx+0x76],dl
   1400139de:	add    BYTE PTR [rax],al
   1400139e0:	rex.W icebp 
   1400139e2:	add    BYTE PTR [rax],al
   1400139e4:	pop    rax
   1400139e5:	jbe    0x1400139e7
   1400139e7:	add    BYTE PTR [rbx-0x17ffff8a],bh
   1400139ed:	inc    DWORD PTR [rax]
   1400139ef:	add    ah,al
   1400139f1:	jbe    0x1400139f3
   1400139f3:	add    BYTE PTR [rdx],dh
   1400139f5:	ja     0x1400139f7
   1400139f7:	add    al,ch
   1400139f9:	inc    DWORD PTR [rax]
   1400139fb:	add    BYTE PTR [rax],bh
   1400139fd:	ja     0x1400139ff
   1400139ff:	add    BYTE PTR [rdx-0x17ffff89],bh
   140013a05:	inc    DWORD PTR [rax]
   140013a07:	add    al,al
   140013a09:	ja     0x140013a0b
   140013a0b:	add    BYTE PTR [rbx],dh
   140013a0d:	js     0x140013a0f
   140013a0f:	add    al,ch
   140013a11:	inc    DWORD PTR [rax]
   140013a13:	add    BYTE PTR [rax+rdi*2],bh
   140013a16:	add    BYTE PTR [rax],al
   140013a18:	(bad)  
   140013a19:	js     0x140013a1b
   140013a1b:	add    BYTE PTR [rax-0xfffff00],dh
   140013a21:	js     0x140013a23
   140013a23:	add    BYTE PTR [rax+0x79],cl
   140013a29:	inc    BYTE PTR [rax]
   140013a2b:	add    BYTE PTR [rax+0x10000079],dl
   140013a31:	jp     0x140013a33
   140013a33:	add    ah,ch
   140013a35:	std    
   140013a36:	add    BYTE PTR [rax],al
   140013a38:	sbb    BYTE PTR [rdx+0x0],bh
   140013a3b:	add    BYTE PTR [rdx],dh
   140013a3d:	jp     0x140013a3f
   140013a3f:	add    ah,ah
   140013a41:	sti    
   140013a42:	add    BYTE PTR [rax],al
   140013a44:	cmp    BYTE PTR [rdx+0x0],bh
   140013a47:	add    BYTE PTR [rdx+0x7a],dl
   140013a4a:	add    BYTE PTR [rax],al
   140013a4c:	in     al,0xfb
   140013a4e:	add    BYTE PTR [rax],al
   140013a50:	pop    rax
   140013a51:	jp     0x140013a53
   140013a53:	add    BYTE PTR [rdi+0x5000007a],dl
   140013a59:	hlt    
   140013a5a:	add    BYTE PTR [rax],al
   140013a5c:	movabs al,ds:0x4800007ade00007a
   140013a65:	icebp  
   140013a66:	add    BYTE PTR [rax],al
   140013a68:	in     al,0x7a
   140013a6a:	add    BYTE PTR [rax],al
   140013a6c:	push   rsp
   140013a6d:	jnp    0x140013a6f
   140013a6f:	add    al,al
   140013a71:	add    BYTE PTR [rcx],al
   140013a73:	add    BYTE PTR [rax+0x7b],ah
   140013a76:	add    BYTE PTR [rax],al
   140013a78:	(bad)  
   140013a79:	jnp    0x140013a7b
   140013a7b:	add    BYTE PTR [rax-0xc],dl
   140013a7e:	add    BYTE PTR [rax],al
   140013a80:	movabs al,ds:0x5000007bf900007b
   140013a89:	hlt    
   140013a8a:	add    BYTE PTR [rax],al
   140013a8c:	add    BYTE PTR [rax+rax*1+0x0],bh
   140013a90:	xor    BYTE PTR [rax+rax*1+0x0],bh
   140013a94:	push   rax
   140013a95:	hlt    
   140013a96:	add    BYTE PTR [rax],al
   140013a98:	rex jl 0x140013a9b
   140013a9b:	add    BYTE PTR [rax+0x7c],dh
   140013a9e:	add    BYTE PTR [rax],al
   140013aa0:	push   rax
   140013aa1:	hlt    
   140013aa2:	add    BYTE PTR [rax],al
   140013aa4:	cmp    BYTE PTR [rax+rax*1+0x0],0xb0
   140013aa9:	jl     0x140013aab
   140013aab:	add    BYTE PTR [rax-0xc],dl
   140013aae:	add    BYTE PTR [rax],al
   140013ab0:	sar    BYTE PTR [rax+rax*1+0x0],0xe4
   140013ab5:	jl     0x140013ab7
   140013ab7:	add    BYTE PTR [rax-0xf],cl
   140013aba:	add    BYTE PTR [rax],al
   140013abc:	lock jl 0x140013abf
   140013abf:	add    BYTE PTR [rdx+0x7d],ch
   140013ac2:	add    BYTE PTR [rax],al
   140013ac4:	in     al,dx
   140013ac5:	std    
   140013ac6:	add    BYTE PTR [rax],al
   140013ac8:	jo     0x140013b47
   140013aca:	add    BYTE PTR [rax],al
   140013acc:	in     al,0x7d
   140013ace:	add    BYTE PTR [rax],al
   140013ad0:	in     al,dx
   140013ad1:	std    
   140013ad2:	add    BYTE PTR [rax],al
   140013ad4:	in     al,dx
   140013ad5:	jge    0x140013ad7
   140013ad7:	add    BYTE PTR [rsi+0x7e],dl
   140013ada:	add    BYTE PTR [rax],al
   140013adc:	in     al,dx
   140013add:	std    
   140013ade:	add    BYTE PTR [rax],al
   140013ae0:	(bad)  
   140013ae1:	jle    0x140013ae3
   140013ae3:	add    BYTE PTR [rsi+rdi*2-0xbb00000],bl
   140013aea:	add    BYTE PTR [rax],al
   140013aec:	mov    al,0x7e
   140013aee:	add    BYTE PTR [rax],al
   140013af0:	in     al,dx
   140013af1:	jle    0x140013af3
   140013af3:	add    BYTE PTR [rax-0xc],dl
   140013af6:	add    BYTE PTR [rax],al
   140013af8:	add    BYTE PTR [rdi+0x0],bh
   140013afb:	add    BYTE PTR [rax],dh
   140013afd:	jg     0x140013aff
   140013aff:	add    BYTE PTR [rax-0xc],dl
   140013b02:	add    BYTE PTR [rax],al
   140013b04:	rex jg 0x140013b07
   140013b07:	add    BYTE PTR [rbp+0x5000007f],al
   140013b0d:	hlt    
   140013b0e:	add    BYTE PTR [rax],al
   140013b10:	nop
   140013b11:	jg     0x140013b13
   140013b13:	add    dl,al
   140013b15:	jg     0x140013b17
   140013b17:	add    BYTE PTR [rax-0xf],cl
   140013b1a:	add    BYTE PTR [rax],al
   140013b1c:	enter  0x7f,0x0
   140013b20:	sub    al,BYTE PTR [rax-0x1dc0000]
   140013b26:	add    BYTE PTR [rax],al
   140013b28:	nop
   140013b29:	add    BYTE PTR [rax],0x0
   140013b2c:	loope  0x140013aae
   140013b2e:	add    BYTE PTR [rax],al
   140013b30:	call   0x128013c34
   140013b35:	add    BYTE PTR [rax],0x0
   140013b38:	adc    eax,DWORD PTR [rcx-0xbb00000]
   140013b3e:	add    BYTE PTR [rax],al
   140013b40:	sbb    al,0x81
   140013b42:	add    BYTE PTR [rax],al
   140013b44:	add    DWORD PTR [rcx-0x41c0000],0x0
   140013b4b:	add    BYTE PTR [rcx+rax*4-0x7e0d0000],cl
   140013b52:	add    BYTE PTR [rax],al
   140013b54:	in     al,0xfb
   140013b56:	add    BYTE PTR [rax],al
   140013b58:	cld    
   140013b59:	add    DWORD PTR [rax],0x822a00
   140013b5f:	add    ah,ah
   140013b61:	sti    
   140013b62:	add    BYTE PTR [rax],al
   140013b64:	xor    BYTE PTR [rdx-0x7da90000],al
   140013b6a:	add    BYTE PTR [rax],al
   140013b6c:	rex.W icebp 
   140013b6e:	add    BYTE PTR [rax],al
   140013b70:	(bad)  
   140013b71:	(bad)  
   140013b72:	add    BYTE PTR [rax],al
   140013b74:	add    BYTE PTR [rbx-0xac0000],al
   140013b7a:	add    BYTE PTR [rax],al
   140013b7c:	adc    BYTE PTR [rbx-0x7c500000],al
   140013b82:	add    BYTE PTR [rax],al
   140013b84:	push   rsp
   140013b85:	inc    DWORD PTR [rax]
   140013b87:	add    al,al
   140013b89:	add    DWORD PTR [rax],0x0
   140013b8c:	(bad)  
   140013b8d:	test   BYTE PTR [rax],al
   140013b8f:	add    BYTE PTR [rdi+rdi*8+0x0],dl
   140013b93:	add    BYTE PTR [rax-0x7c],ch
   140013b96:	add    BYTE PTR [rax],al
   140013b98:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013b99:	test   BYTE PTR [rax],al
   140013b9b:	add    BYTE PTR [rax-0xc],dl
   140013b9e:	add    BYTE PTR [rax],al
   140013ba0:	mov    al,0x84
   140013ba2:	add    BYTE PTR [rax],al
   140013ba4:	test   BYTE PTR [rbp-0x1b40000],al
   140013baa:	add    BYTE PTR [rax],al
   140013bac:	mov    WORD PTR [rbp-0x7a500000],es
   140013bb2:	add    BYTE PTR [rax],al
   140013bb4:	rex.W icebp 
   140013bb6:	add    BYTE PTR [rax],al
   140013bb8:	mov    eax,0xf1000085
   140013bbd:	test   DWORD PTR [rax],eax
   140013bbf:	add    al,bh
   140013bc1:	add    BYTE PTR [rcx],al
   140013bc3:	add    BYTE PTR [rax],al
   140013bc5:	xchg   BYTE PTR [rax],al
   140013bc7:	add    BYTE PTR [rdi+0x34000086],al
   140013bcd:	inc    DWORD PTR [rax]
   140013bcf:	add    BYTE PTR [rax+0x50000086],dl
   140013bd5:	xchg   DWORD PTR [rax],eax
   140013bd7:	add    BYTE PTR [rax+rax*1+0x1],bh
   140013bdb:	add    BYTE PTR [rax-0x79],ah
   140013bde:	add    BYTE PTR [rax],al
   140013be0:	fadd   QWORD PTR [rdi-0x1640000]
   140013be6:	add    BYTE PTR [rax],al
   140013be8:	in     al,0x87
   140013bea:	add    BYTE PTR [rax],al
   140013bec:	mov    cs,WORD PTR [rcx-0x1200000]
   140013bf2:	add    BYTE PTR [rax],al
   140013bf4:	xchg   esp,eax
   140013bf5:	mov    DWORD PTR [rax],eax
   140013bf7:	add    BYTE PTR [rsi+0x4400008a],bh
   140013bfd:	add    BYTE PTR [rcx],al
   140013bff:	add    ah,al
   140013c01:	mov    al,BYTE PTR [rax]
   140013c03:	add    BYTE PTR [rdx+0x5400008b],bl
   140013c09:	add    BYTE PTR [rcx],al
   140013c0b:	add    BYTE PTR [rax-0x12ffff75],ah
   140013c11:	mov    eax,DWORD PTR [rax]
   140013c13:	add    al,bl
   140013c15:	inc    DWORD PTR [rax]
   140013c17:	add    BYTE PTR [rax],al
   140013c19:	mov    WORD PTR [rax],es
   140013c1b:	add    BYTE PTR [rbx-0x74],ah
   140013c1e:	add    BYTE PTR [rax],al
   140013c20:	fdivr  st,st(7)
   140013c22:	add    BYTE PTR [rax],al
   140013c24:	jo     0x140013bb2
   140013c26:	add    BYTE PTR [rax],al
   140013c28:	sub    ecx,DWORD PTR [rbp-0x440000]
   140013c2e:	add    BYTE PTR [rax],al
   140013c30:	rex lea eax,[rax]
   140013c33:	add    BYTE PTR [rbx-0x17ffff73],ah
   140013c39:	inc    DWORD PTR [rax]
   140013c3b:	add    BYTE PTR [rax+0x2b00008d],dh
   140013c41:	mov    es,WORD PTR [rax]
   140013c43:	add    al,ch
   140013c45:	inc    DWORD PTR [rax]
   140013c47:	add    BYTE PTR [rax-0x72],al
   140013c4a:	add    BYTE PTR [rax],al
   140013c4c:	scas   eax,DWORD PTR es:[rdi]
   140013c4d:	mov    es,WORD PTR [rax]
   140013c4f:	add    al,ch
   140013c51:	inc    DWORD PTR [rax]
   140013c53:	add    al,al
   140013c55:	mov    es,WORD PTR [rax]
   140013c57:	add    BYTE PTR [rbx],ah
   140013c59:	pop    QWORD PTR [rax]
   140013c5b:	add    al,ch
   140013c5d:	inc    DWORD PTR [rax]
   140013c5f:	add    BYTE PTR [rdi+rcx*4],ch
   140013c62:	add    BYTE PTR [rax],al
   140013c64:	ror    DWORD PTR [rdi-0x80000],0x0
   140013c6b:	add    al,dl
   140013c6d:	pop    QWORD PTR [rax]
   140013c6f:	add    BYTE PTR [rax+rdx*4+0x0],cl
   140013c73:	add    al,ch
   140013c75:	inc    DWORD PTR [rax]
   140013c77:	add    BYTE PTR [rax+rdx*4+0x0],ch
   140013c7b:	add    cl,dh
   140013c7d:	xchg   edx,eax
   140013c7e:	add    BYTE PTR [rax],al
   140013c80:	and    al,0x0
   140013c82:	add    DWORD PTR [rax],eax
   140013c84:	add    BYTE PTR [rbx-0x6c8b0000],dl
   140013c8a:	add    BYTE PTR [rax],al
   140013c8c:	call   0xe0013d90
   140013c91:	xchg   ebx,eax
   140013c92:	add    BYTE PTR [rax],al
   140013c94:	mov    edi,0xe4000093
   140013c99:	sti    
   140013c9a:	add    BYTE PTR [rax],al
   140013c9c:	xor    BYTE PTR [rax+rax*1+0x944b00],dl
   140013ca3:	add    ah,ah
   140013ca5:	sti    
   140013ca6:	add    BYTE PTR [rax],al
   140013ca8:	(bad)  
   140013ca9:	xchg   esp,eax
   140013caa:	add    BYTE PTR [rax],al
   140013cac:	sbb    eax,0x44000095
   140013cb1:	inc    DWORD PTR [rax]
   140013cb3:	add    BYTE PTR [rax],dh
   140013cb5:	xchg   ebp,eax
   140013cb6:	add    BYTE PTR [rax],al
   140013cb8:	in     eax,dx
   140013cb9:	xchg   ebp,eax
   140013cba:	add    BYTE PTR [rax],al
   140013cbc:	rex.R inc DWORD PTR [rax]
   140013cbf:	add    BYTE PTR [rax],al
   140013cc1:	xchg   esi,eax
   140013cc2:	add    BYTE PTR [rax],al
   140013cc4:	mov    ebp,0x44000096
   140013cc9:	inc    DWORD PTR [rax]
   140013ccb:	add    al,dl
   140013ccd:	xchg   esi,eax
   140013cce:	add    BYTE PTR [rax],al
   140013cd0:	es xchg edi,eax
   140013cd2:	add    BYTE PTR [rax],al
   140013cd4:	sbb    al,0xff
   140013cd6:	add    BYTE PTR [rax],al
   140013cd8:	xor    BYTE PTR [rdi-0x68310000],dl
   140013cde:	add    BYTE PTR [rax],al
   140013ce0:	xchg   esp,eax
   140013ce1:	add    BYTE PTR [rcx],al
   140013ce3:	add    al,ah
   140013ce5:	xchg   edi,eax
   140013ce6:	add    BYTE PTR [rax],al
   140013ce8:	test   al,0x98
   140013cea:	add    BYTE PTR [rax],al
   140013cec:	ins    BYTE PTR es:[rdi],dx
   140013ced:	inc    BYTE PTR [rax]
   140013cef:	add    BYTE PTR [rax-0x29ffff68],dh
   140013cf5:	cdq    
   140013cf6:	add    BYTE PTR [rax],al
   140013cf8:	pop    rsp
   140013cf9:	inc    BYTE PTR [rax]
   140013cfb:	add    ah,bl
   140013cfd:	cdq    
   140013cfe:	add    BYTE PTR [rax],al
   140013d00:	jns    0x140013c9c
   140013d02:	add    BYTE PTR [rax],al
   140013d04:	sar    dh,1
   140013d06:	add    BYTE PTR [rax],al
   140013d08:	sbb    BYTE PTR [rdx-0x64380000],0x0
   140013d0f:	add    BYTE PTR [rax],bh
   140013d11:	inc    BYTE PTR [rax]
   140013d13:	add    al,dl
   140013d15:	fwait
   140013d16:	add    BYTE PTR [rax],al
   140013d18:	xchg   esp,eax
   140013d19:	pushf  
   140013d1a:	add    BYTE PTR [rax],al
   140013d1c:	or     al,0x0
   140013d1e:	add    DWORD PTR [rax],eax
   140013d20:	clc    
   140013d21:	pushf  
   140013d22:	add    BYTE PTR [rax],al
   140013d24:	(bad)  
   140013d25:	popf   
   140013d26:	add    BYTE PTR [rax],al
   140013d28:	in     al,0xfb
   140013d2a:	add    BYTE PTR [rax],al
   140013d2c:	sbb    al,0x9d
   140013d2e:	add    BYTE PTR [rax],al
   140013d30:	rex.WR popf 
   140013d32:	add    BYTE PTR [rax],al
   140013d34:	rex.W icebp 
   140013d36:	add    BYTE PTR [rax],al
   140013d38:	(bad)  
   140013d39:	popf   
   140013d3a:	add    BYTE PTR [rax],al
   140013d3c:	repz popf 
   140013d3e:	add    BYTE PTR [rax],al
   140013d40:	and    al,0xff
   140013d42:	add    BYTE PTR [rax],al
   140013d44:	add    BYTE PTR [rsi-0x61350000],bl
   140013d4a:	add    BYTE PTR [rax],al
   140013d4c:	xchg   esp,eax
   140013d4d:	add    BYTE PTR [rcx],al
   140013d4f:	add    al,ah
   140013d51:	sahf   
   140013d52:	add    BYTE PTR [rax],al
   140013d54:	xlat   BYTE PTR ds:[rbx]
   140013d55:	lahf   
   140013d56:	add    BYTE PTR [rax],al
   140013d58:	test   dh,bh
   140013d5a:	add    BYTE PTR [rax],al
   140013d5c:	loopne 0x140013cfd
   140013d5e:	add    BYTE PTR [rax],al
   140013d60:	jns    0x140013d02
   140013d62:	add    BYTE PTR [rax],al
   140013d64:	jl     0x140013d66
   140013d66:	add    DWORD PTR [rax],eax
   140013d68:	and    BYTE PTR [rax-0x5e960000],0x0
   140013d6f:	add    BYTE PTR [rax+0x0],ch
   140013d72:	add    DWORD PTR [rax],eax
   140013d74:	jo     0x140013d17
   140013d76:	add    BYTE PTR [rax],al
   140013d78:	scas   al,BYTE PTR es:[rdi]
   140013d79:	movabs eax,ds:0xa1c00000f1480000
   140013d82:	add    BYTE PTR [rax],al
   140013d84:	popf   
   140013d85:	movabs ds:0xa2a40000feac0000,al
   140013d8e:	add    BYTE PTR [rax],al
   140013d90:	repz movabs ds:0xa330000100f00000,al
   140013d9a:	add    BYTE PTR [rax],al
   140013d9c:	stos   BYTE PTR es:[rdi],al
   140013d9d:	movabs ds:0xa3b00000ffe80000,eax
   140013da6:	add    BYTE PTR [rax],al
   140013da8:	rex.XB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013daa:	add    BYTE PTR [rax],al
   140013dac:	call   0x18c013eb0
   140013db1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013db2:	add    BYTE PTR [rax],al
   140013db4:	call   0x1a8013e5d
   140013db9:	inc    DWORD PTR [rax]
   140013dbb:	add    al,dh
   140013dbd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013dbe:	add    BYTE PTR [rax],al
   140013dc0:	cmp    eax,0x7c0000a6
   140013dc5:	inc    DWORD PTR [rax]
   140013dc7:	add    BYTE PTR [rsi+riz*4+0x0],al
   140013dcb:	add    BYTE PTR [rax-0x3fffff5a],dh
   140013dd1:	inc    BYTE PTR [rax]
   140013dd3:	add    BYTE PTR [rax+0x5f0000a6],bh
   140013dd9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013dda:	add    BYTE PTR [rax],al
   140013ddc:	cwde   
   140013ddd:	inc    DWORD PTR [rax]
   140013ddf:	add    BYTE PTR [rax-0x59],ch
   140013de2:	add    BYTE PTR [rax],al
   140013de4:	(bad)  [rdi-0x540000]
   140013dea:	add    BYTE PTR [rax],al
   140013dec:	in     al,0xa7
   140013dee:	add    BYTE PTR [rax],al
   140013df0:	(bad)  
   140013df1:	test   eax,0xff7c0000
   140013df6:	add    BYTE PTR [rax],al
   140013df8:	and    al,0xa9
   140013dfa:	add    BYTE PTR [rax],al
   140013dfc:	xchg   edi,eax
   140013dfd:	test   eax,0xffac0000
   140013e02:	add    BYTE PTR [rax],al
   140013e04:	movabs al,ds:0xec0000aa050000a9
   140013e0d:	sti    
   140013e0e:	add    BYTE PTR [rax],al
   140013e10:	adc    BYTE PTR [rdx-0x55680000],ch
   140013e16:	add    BYTE PTR [rax],al
   140013e18:	call   0xe0013f1c
   140013e1d:	stos   BYTE PTR es:[rdi],al
   140013e1e:	add    BYTE PTR [rax],al
   140013e20:	sub    BYTE PTR [rbx-0x180000],ch
   140013e26:	add    BYTE PTR [rax],al
   140013e28:	xor    BYTE PTR [rbx-0x54480000],ch
   140013e2e:	add    BYTE PTR [rax],al
   140013e30:	call   0x100013f34
   140013e35:	stos   DWORD PTR es:[rdi],eax
   140013e36:	add    BYTE PTR [rax],al
   140013e38:	(bad)  
   140013e39:	lods   al,BYTE PTR ds:[rsi]
   140013e3a:	add    BYTE PTR [rax],al
   140013e3c:	call   0x1b0013f40
   140013e41:	lods   al,BYTE PTR ds:[rsi]
   140013e42:	add    BYTE PTR [rax],al
   140013e44:	add    ebp,DWORD PTR [rbp+0x7c0000]
   140013e4a:	add    DWORD PTR [rax],eax
   140013e4c:	or     al,0xad
   140013e4e:	add    BYTE PTR [rax],al
   140013e50:	mov    bl,0xad
   140013e52:	add    BYTE PTR [rax],al
   140013e54:	clc    
   140013e55:	inc    BYTE PTR [rax]
   140013e57:	add    al,al
   140013e59:	lods   eax,DWORD PTR ds:[rsi]
   140013e5a:	add    BYTE PTR [rax],al
   140013e5c:	movabs eax,ds:0xbc0000ff080000ae
   140013e65:	scas   al,BYTE PTR es:[rdi]
   140013e66:	add    BYTE PTR [rax],al
   140013e68:	repz scas al,BYTE PTR es:[rdi]
   140013e6a:	add    BYTE PTR [rax],al
   140013e6c:	rex.W icebp 
   140013e6e:	add    BYTE PTR [rax],al
   140013e70:	add    BYTE PTR [rdi-0x50890000],ch
   140013e76:	add    BYTE PTR [rax],al
   140013e78:	and    al,0xfe
   140013e7a:	add    BYTE PTR [rax],al
   140013e7c:	sub    BYTE PTR [rdi-0x501e0000],0x0
   140013e83:	add    al,ch
   140013e85:	inc    DWORD PTR [rax]
   140013e87:	add    al,dh
   140013e89:	scas   eax,DWORD PTR es:[rdi]
   140013e8a:	add    BYTE PTR [rax],al
   140013e8c:	xchg   ebp,eax
   140013e8d:	mov    al,0x0
   140013e8f:	add    al,al
   140013e91:	inc    BYTE PTR [rax]
   140013e93:	add    al,ah
   140013e95:	mov    al,0x0
   140013e97:	add    BYTE PTR [rdx-0x4f],bl
   140013e9a:	add    BYTE PTR [rax],al
   140013e9c:	sar    dh,0x0
   140013e9f:	add    BYTE PTR [rax-0x53ffff4f],al
   140013ea5:	mov    cl,0x0
   140013ea7:	add    BYTE PTR [rax-0xc],dl
   140013eaa:	add    BYTE PTR [rax],al
   140013eac:	shl    BYTE PTR [rcx-0x4e080000],0x0
   140013eb3:	add    BYTE PTR [rax+0x18000100],ch
   140013eb9:	mov    dl,0x0
   140013ebb:	add    BYTE PTR [rdx+rsi*4+0xd00000],ch
   140013ec2:	add    DWORD PTR [rax],eax
   140013ec4:	mov    ah,0xb2
   140013ec6:	add    BYTE PTR [rax],al
   140013ec8:	xor    DWORD PTR [rbx+0xe00000],esi
   140013ece:	add    DWORD PTR [rax],eax
   140013ed0:	cmp    BYTE PTR [rbx-0x4c890000],dh
   140013ed6:	add    BYTE PTR [rax],al
   140013ed8:	push   rax
   140013ed9:	hlt    
   140013eda:	add    BYTE PTR [rax],al
   140013edc:	xor    BYTE PTR [rbx-0x4c590000],0x0
   140013ee3:	add    BYTE PTR [rax-0xc],dl
	...

Disassembly of section .rsrc:

0000000140014000 <.rsrc>:
	...
   14001400c:	add    BYTE PTR [rax],al
   14001400e:	add    al,BYTE PTR [rax]
   140014010:	adc    BYTE PTR [rax],al
   140014012:	add    BYTE PTR [rax],al
   140014014:	and    BYTE PTR [rax],al
   140014016:	add    BYTE PTR [rax+0x18],al
   14001401c:	cmp    BYTE PTR [rax],al
   14001401e:	add    BYTE PTR [rax+0x0],al
	...
   14001402c:	add    BYTE PTR [rax],al
   14001402e:	add    DWORD PTR [rax],eax
   140014030:	add    DWORD PTR [rax],eax
   140014032:	add    BYTE PTR [rax],al
   140014034:	push   rax
   140014035:	add    BYTE PTR [rax],al
   140014037:	add    BYTE PTR [rax],0x0
	...
   140014046:	add    DWORD PTR [rax],eax
   140014048:	add    DWORD PTR [rax],eax
   14001404a:	add    BYTE PTR [rax],al
   14001404c:	push   0x800000
	...
   14001405d:	add    BYTE PTR [rcx],al
   14001405f:	add    BYTE PTR [rcx],cl
   140014061:	add    al,0x0
   140014063:	add    BYTE PTR [rax+0x0],al
	...
   140014075:	add    BYTE PTR [rcx],al
   140014077:	add    BYTE PTR [rcx],cl
   140014079:	add    al,0x0
   14001407b:	add    BYTE PTR [rax-0x40000000],dl
   140014081:	add    DWORD PTR [rax],r8d
   140014084:	pushf  
   140014085:	add    eax,DWORD PTR [rax]
	...
   14001408f:	add    BYTE PTR [rax+0x1d000140],ah
   140014095:	add    al,0x0
	...
   14001409f:	add    BYTE PTR [rdi+rdi*1],bh
   1400140a2:	js     0x140014111
   1400140a4:	ins    BYTE PTR es:[rdi],dx
   1400140a5:	and    BYTE PTR [rsi+0x65],dh
   1400140a8:	jb     0x14001411d
   1400140aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400140b1:	xor    BYTE PTR [rdx],ah
   1400140b3:	and    BYTE PTR [rbp+0x6e],ah
   1400140b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400140b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400140c0:	rex.RX sub eax,0x73202238
   1400140c6:	je     0x140014129
   1400140c8:	outs   dx,BYTE PTR ds:[rsi]
   1400140c9:	fs (bad) 
   1400140cb:	ins    BYTE PTR es:[rdi],dx
   1400140cc:	outs   dx,DWORD PTR ds:[rsi]
   1400140cd:	outs   dx,BYTE PTR ds:[rsi]
   1400140ce:	gs cmp eax,0x73657922
   1400140d4:	and    bh,BYTE PTR [rdi]
   1400140d6:	ds or  eax,0x2d213c0a
   1400140dc:	sub    eax,0x706f4320
   1400140e1:	jns    0x140014155
   1400140e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400140ea:	sub    DWORD PTR [rax],esp
   1400140ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400140f4:	je     0x140014116
   1400140f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400140f8:	jb     0x14001416a
   1400140fa:	outs   dx,DWORD PTR ds:[rsi]
   1400140fb:	jb     0x14001415e
   1400140fd:	je     0x140014168
   1400140ff:	outs   dx,DWORD PTR ds:[rsi]
   140014100:	outs   dx,BYTE PTR ds:[rsi]
   140014101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e7f34
   140014107:	cmp    al,0x61
   140014109:	jae    0x14001417e
   14001410b:	gs ins DWORD PTR es:[rdi],dx
   14001410d:	(bad)  
   14001410e:	ins    BYTE PTR es:[rdi],dx
   14001410f:	jns    0x140014131
   140014111:	js     0x140014180
   140014113:	ins    BYTE PTR es:[rdi],dx
   140014114:	outs   dx,BYTE PTR ds:[rsi]
   140014115:	jae    0x140014154
   140014117:	and    dh,BYTE PTR [rbp+0x72]
   14001411a:	outs   dx,BYTE PTR ds:[rsi]
   14001411b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001411e:	push   0x73616d65
   140014123:	sub    eax,0x7263696d
   140014128:	outs   dx,DWORD PTR ds:[rsi]
   140014129:	jae    0x14001419a
   14001412b:	data16 je 0x14001415b
   14001412e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140014131:	cmp    ah,BYTE PTR [rcx+0x73]
   140014134:	ins    DWORD PTR es:[rdi],dx
   140014135:	cs jbe 0x140014169
   140014138:	and    ah,BYTE PTR [rax]
   14001413a:	ins    DWORD PTR es:[rdi],dx
   14001413b:	(bad)  
   14001413c:	outs   dx,BYTE PTR ds:[rsi]
   14001413d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140014144:	jb     0x1400141b9
   140014146:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001414d:	xor    BYTE PTR [rdx],ah
   14001414f:	ds or  eax,0x73613c0a
   140014155:	jae    0x1400141bc
   140014157:	ins    DWORD PTR es:[rdi],dx
   140014158:	(bad)  
   140014159:	ins    BYTE PTR es:[rdi],dx
   14001415a:	jns    0x1400141a5
   14001415c:	fs outs dx,BYTE PTR gs:[rsi]
   14001415f:	je     0x1400141ca
   140014161:	je     0x1400141dc
   140014163:	or     eax,0x2020200a
   140014168:	and    BYTE PTR [rsi+0x65],dh
   14001416b:	jb     0x1400141e0
   14001416d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   140014174:	xor    DWORD PTR [rsi],ebp
   140014176:	xor    BYTE PTR [rsi],ch
   140014178:	xor    BYTE PTR [rdx],ah
   14001417a:	or     eax,0x2020200a
   14001417f:	and    BYTE PTR [rax+0x72],dh
   140014182:	outs   dx,DWORD PTR ds:[rsi]
   140014183:	movsxd esp,DWORD PTR [rbp+0x73]
   140014186:	jae    0x1400141f7
   140014188:	jb     0x1400141cb
   14001418a:	jb     0x1400141ef
   14001418c:	push   0x63657469
   140014191:	je     0x140014208
   140014193:	jb     0x1400141fa
   140014195:	cmp    eax,0x646d6122
   14001419a:	ss xor al,0x22
   14001419d:	or     eax,0x2020200a
   1400141a2:	and    BYTE PTR [rsi+0x61],ch
   1400141a5:	ins    DWORD PTR es:[rdi],dx
   1400141a6:	gs cmp eax,0x63694d22
   1400141ac:	jb     0x14001421d
   1400141ae:	jae    0x14001421f
   1400141b0:	data16 je 0x1400141e1
   1400141b3:	push   rdi
   1400141b4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400141bb:	rex.XB
   1400141bc:	rex.WRXB
   1400141bd:	rex.WRB
   1400141be:	cs push rdx
   1400141c0:	jne    0x140014230
   1400141c2:	je     0x14001422d
   1400141c4:	ins    DWORD PTR es:[rdi],dx
   1400141c5:	gs rex.X jb 0x140014238
   1400141c9:	imul   esp,DWORD PTR [rbp+0x72],0x22
   1400141cd:	or     eax,0x2020200a
   1400141d2:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400141d6:	gs cmp eax,0x6e697722
   1400141dc:	xor    esi,DWORD PTR [rdx]
   1400141de:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f70ee
   1400141e4:	or     bh,BYTE PTR [rsp+riz*2]
   1400141e7:	gs jae 0x14001424d
   1400141ea:	jb     0x140014255
   1400141ec:	jo     0x140014262
   1400141ee:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f72423e
   1400141f5:	imul   esp,DWORD PTR [rbp+0x72],0x20
   1400141f9:	push   rax
   1400141fa:	jb     0x14001426b
   1400141fc:	movsxd esp,DWORD PTR [rbp+0x73]
   1400141ff:	jae    0x140014221
   140014201:	outs   dx,WORD PTR ds:[rsi]
   140014203:	jb     0x140014225
   140014205:	push   rdi
   140014206:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   14001420d:	push   rax
   14001420e:	(bad)  
   14001420f:	jb     0x140014285
   140014211:	imul   esp,DWORD PTR [rcx+0x6c],0x75725420
   140014218:	jae    0x14001428e
   14001421a:	and    BYTE PTR [rbx+0x6f],al
   14001421d:	ins    DWORD PTR es:[rdi],dx
   14001421e:	jo     0x14001428f
   140014220:	outs   dx,BYTE PTR ds:[rsi]
   140014221:	outs   dx,BYTE PTR gs:[rsi]
   140014223:	je     0x140014298
   140014225:	cmp    al,0x2f
   140014227:	fs gs jae 0x14001428e
   14001422b:	jb     0x140014296
   14001422d:	jo     0x1400142a3
   14001422f:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   140014236:	or     bh,BYTE PTR [rsp+riz*2]
   140014239:	gs jo  0x1400142a1
   14001423c:	outs   dx,BYTE PTR ds:[rsi]
   14001423d:	fs outs dx,BYTE PTR gs:[rsi]
   140014240:	movsxd edi,DWORD PTR [rcx+0x3e]
   140014243:	or     eax,0x2020200a
   140014248:	and    BYTE PTR [rsp+riz*2],bh
   14001424b:	gs jo  0x1400142b3
   14001424e:	outs   dx,BYTE PTR ds:[rsi]
   14001424f:	fs outs dx,BYTE PTR gs:[rsi]
   140014252:	je     0x140014295
   140014254:	jae    0x1400142c9
   140014256:	gs ins DWORD PTR es:[rdi],dx
   140014258:	(bad)  
   140014259:	ins    BYTE PTR es:[rdi],dx
   14001425a:	jns    0x14001429a
   14001425c:	or     eax,0x2020200a
   140014261:	and    BYTE PTR [rax],ah
   140014263:	and    BYTE PTR [rax],ah
   140014265:	and    BYTE PTR [rcx+riz*2],bh
   140014268:	jae    0x1400142dd
   14001426a:	gs ins DWORD PTR es:[rdi],dx
   14001426c:	(bad)  
   14001426d:	ins    BYTE PTR es:[rdi],dx
   14001426e:	jns    0x1400142b9
   140014270:	fs outs dx,BYTE PTR gs:[rsi]
   140014273:	je     0x1400142de
   140014275:	je     0x1400142f0
   140014277:	or     eax,0x2020200a
   14001427c:	and    BYTE PTR [rax],ah
   14001427e:	and    BYTE PTR [rax],ah
   140014280:	and    BYTE PTR [rax],ah
   140014282:	and    BYTE PTR [rax],ah
   140014284:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140014288:	gs cmp eax,0x6e697722
   14001428e:	xor    esi,DWORD PTR [rdx]
   140014290:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602162a0
   140014296:	and    BYTE PTR [rax],ah
   140014298:	and    BYTE PTR [rax],ah
   14001429a:	and    BYTE PTR [rax],ah
   14001429c:	and    BYTE PTR [rax],ah
   14001429e:	and    BYTE PTR [rsi+0x61],ch
   1400142a1:	ins    DWORD PTR es:[rdi],dx
   1400142a2:	gs cmp eax,0x63694d22
   1400142a8:	jb     0x140014319
   1400142aa:	jae    0x14001431b
   1400142ac:	data16 je 0x1400142dd
   1400142af:	push   rdi
   1400142b0:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400142b7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400142b9:	ins    DWORD PTR es:[rdi],dx
   1400142ba:	ins    DWORD PTR es:[rdi],dx
   1400142bb:	outs   dx,DWORD PTR ds:[rsi]
   1400142bc:	outs   dx,BYTE PTR ds:[rsi]
   1400142bd:	sub    eax,0x746e6f43
   1400142c2:	jb     0x140014333
   1400142c4:	ins    BYTE PTR es:[rdi],dx
   1400142c5:	jae    0x1400142e9
   1400142c7:	or     eax,0x2020200a
   1400142cc:	and    BYTE PTR [rax],ah
   1400142ce:	and    BYTE PTR [rax],ah
   1400142d0:	and    BYTE PTR [rax],ah
   1400142d2:	and    BYTE PTR [rax],ah
   1400142d4:	and    BYTE PTR [rsi+0x65],dh
   1400142d7:	jb     0x14001434c
   1400142d9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   1400142e0:	xor    BYTE PTR [rsi],ch
   1400142e2:	xor    BYTE PTR [rsi],ch
   1400142e4:	xor    BYTE PTR [rdx],ah
   1400142e6:	or     eax,0x2020200a
   1400142eb:	and    BYTE PTR [rax],ah
   1400142ed:	and    BYTE PTR [rax],ah
   1400142ef:	and    BYTE PTR [rax],ah
   1400142f1:	and    BYTE PTR [rax],ah
   1400142f3:	and    BYTE PTR [rax+0x72],dh
   1400142f6:	outs   dx,DWORD PTR ds:[rsi]
   1400142f7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400142fa:	jae    0x14001436b
   1400142fc:	jb     0x14001433f
   1400142fe:	jb     0x140014363
   140014300:	push   0x63657469
   140014305:	je     0x14001437c
   140014307:	jb     0x14001436e
   140014309:	cmp    eax,0xd222a22
   14001430e:	or     ah,BYTE PTR [rax]
   140014310:	and    BYTE PTR [rax],ah
   140014312:	and    BYTE PTR [rax],ah
   140014314:	and    BYTE PTR [rax],ah
   140014316:	and    BYTE PTR [rax],ah
   140014318:	and    BYTE PTR [rax],ah
   14001431a:	and    BYTE PTR [rax+0x75],dh
   14001431d:	(bad)  
   14001431e:	ins    BYTE PTR es:[rdi],dx
   14001431f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140014326:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14001432a:	and    dh,BYTE PTR [rsi]
   14001432c:	xor    eax,0x36623539
   140014331:	xor    al,0x31
   140014333:	xor    al,0x34
   140014335:	movsxd esp,DWORD PTR [rbx+0x66]
   140014338:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14001433c:	or     eax,0x2020200a
   140014341:	and    BYTE PTR [rax],ah
   140014343:	and    BYTE PTR [rax],ah
   140014345:	and    BYTE PTR [rax],ah
   140014347:	and    BYTE PTR [rax],ah
   140014349:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14001434d:	addr32 jne 0x1400143b1
   140014350:	addr32 gs cmp eax,0xd222a22
   140014357:	or     ah,BYTE PTR [rax]
   140014359:	and    BYTE PTR [rax],ah
   14001435b:	and    BYTE PTR [rax],ah
   14001435d:	and    BYTE PTR [rax],ah
   14001435f:	and    BYTE PTR [rdi],ch
   140014361:	ds or  eax,0x2020200a
   140014367:	and    BYTE PTR [rdi+rbp*1],bh
   14001436a:	fs gs jo 0x1400143d3
   14001436e:	outs   dx,BYTE PTR ds:[rsi]
   14001436f:	fs outs dx,BYTE PTR gs:[rsi]
   140014372:	je     0x1400143b5
   140014374:	jae    0x1400143e9
   140014376:	gs ins DWORD PTR es:[rdi],dx
   140014378:	(bad)  
   140014379:	ins    BYTE PTR es:[rdi],dx
   14001437a:	jns    0x1400143ba
   14001437c:	or     eax,0x642f3c0a
   140014381:	gs jo  0x1400143e9
   140014384:	outs   dx,BYTE PTR ds:[rsi]
   140014385:	fs outs dx,BYTE PTR gs:[rsi]
   140014388:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001438b:	or     eax,0x3c0a0d0a
   140014390:	je     0x140014404
   140014392:	jne    0x140014407
   140014394:	je     0x1400143df
   140014396:	outs   dx,BYTE PTR ds:[rsi]
   140014397:	outs   dx,WORD PTR ds:[rsi]
   140014399:	and    BYTE PTR [rax+0x6d],bh
   14001439c:	ins    BYTE PTR es:[rdi],dx
   14001439d:	outs   dx,BYTE PTR ds:[rsi]
   14001439e:	jae    0x1400143dd
   1400143a0:	and    dh,BYTE PTR [rbp+0x72]
   1400143a3:	outs   dx,BYTE PTR ds:[rsi]
   1400143a4:	cmp    dh,BYTE PTR [rbx+0x63]
   1400143a7:	push   0x73616d65
   1400143ac:	sub    eax,0x7263696d
   1400143b1:	outs   dx,DWORD PTR ds:[rsi]
   1400143b2:	jae    0x140014423
   1400143b4:	data16 je 0x1400143e4
   1400143b7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400143ba:	cmp    ah,BYTE PTR [rcx+0x73]
   1400143bd:	ins    DWORD PTR es:[rdi],dx
   1400143be:	cs jbe 0x1400143f4
   1400143c1:	and    bh,BYTE PTR [rsi]
   1400143c3:	or     eax,0x2020200a
   1400143c8:	and    BYTE PTR [rbx+rsi*2],bh
   1400143cb:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400143cf:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400143d7:	and    BYTE PTR [rax],ah
   1400143d9:	and    BYTE PTR [rax],ah
   1400143db:	and    BYTE PTR [rax],ah
   1400143dd:	cmp    al,0x72
   1400143df:	gs jno 0x140014457
   1400143e2:	gs jae 0x140014459
   1400143e5:	gs fs push rax
   1400143e8:	jb     0x140014453
   1400143ea:	jbe    0x140014455
   1400143ec:	ins    BYTE PTR es:[rdi],dx
   1400143ed:	gs addr32 gs jae 0x140014430
   1400143f2:	or     eax,0x2020200a
   1400143f7:	and    BYTE PTR [rax],ah
   1400143f9:	and    BYTE PTR [rax],ah
   1400143fb:	and    BYTE PTR [rax],ah
   1400143fd:	and    BYTE PTR [rax],ah
   1400143ff:	and    BYTE PTR [rdx+rsi*2],bh
   140014402:	gs jno 0x14001447a
   140014405:	gs jae 0x14001447c
   140014408:	gs fs rex.RB js 0x140014472
   14001440d:	movsxd esi,DWORD PTR [rbp+0x74]
   140014410:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140014417:	ins    BYTE PTR es:[rdi],dx
   140014418:	or     eax,0x2020200a
   14001441d:	and    BYTE PTR [rax],ah
   14001441f:	and    BYTE PTR [rax],ah
   140014421:	and    BYTE PTR [rax],ah
   140014423:	and    BYTE PTR [rax],ah
   140014425:	and    BYTE PTR [rax],ah
   140014427:	and    BYTE PTR [rax],ah
   140014429:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001442d:	gs ins BYTE PTR es:[rdi],dx
   14001442f:	cmp    eax,0x49736122
   140014434:	outs   dx,BYTE PTR ds:[rsi]
   140014435:	jbe    0x1400144a6
   140014437:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001443b:	or     eax,0x2020200a
   140014440:	and    BYTE PTR [rax],ah
   140014442:	and    BYTE PTR [rax],ah
   140014444:	and    BYTE PTR [rax],ah
   140014446:	and    BYTE PTR [rax],ah
   140014448:	and    BYTE PTR [rax],ah
   14001444a:	and    BYTE PTR [rax],ah
   14001444c:	and    BYTE PTR [rbp+0x69],dh
   14001444f:	movsxd esp,DWORD PTR [r11+0x65]
   140014453:	jae    0x1400144c8
   140014455:	cmp    eax,0x6c616622
   14001445a:	jae    0x1400144c1
   14001445c:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021646c
   140014462:	and    BYTE PTR [rax],ah
   140014464:	and    BYTE PTR [rax],ah
   140014466:	and    BYTE PTR [rax],ah
   140014468:	and    BYTE PTR [rax],ah
   14001446a:	and    BYTE PTR [rdi],ch
   14001446c:	ds or  eax,0x2020200a
   140014472:	and    BYTE PTR [rax],ah
   140014474:	and    BYTE PTR [rax],ah
   140014476:	and    BYTE PTR [rdi+rbp*1],bh
   140014479:	jb     0x1400144e0
   14001447b:	jno    0x1400144f2
   14001447d:	gs jae 0x1400144f4
   140014480:	gs fs push rax
   140014483:	jb     0x1400144ee
   140014485:	jbe    0x1400144f0
   140014487:	ins    BYTE PTR es:[rdi],dx
   140014488:	gs addr32 gs jae 0x1400144cb
   14001448d:	or     eax,0x2020200a
   140014492:	and    BYTE PTR [rdi+rbp*1],bh
   140014495:	jae    0x1400144fc
   140014497:	movsxd esi,DWORD PTR [rbp+0x72]
   14001449a:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   1400144a2:	je     0x140014516
   1400144a4:	jne    0x140014519
   1400144a6:	je     0x1400144f1
   1400144a8:	outs   dx,BYTE PTR ds:[rsi]
   1400144a9:	outs   dx,WORD PTR ds:[rsi]
   1400144ab:	ds or  eax,0x612f3c0a
   1400144b1:	jae    0x140014526
   1400144b3:	gs ins DWORD PTR es:[rdi],dx
   1400144b5:	(bad)  
   1400144b6:	ins    BYTE PTR es:[rdi],dx
   1400144b7:	jns    0x1400144f7
   1400144b9:	or     eax,0xa0d0a
   1400144be:	add    BYTE PTR [rax],al
   1400144c0:	pushf  
   1400144c1:	add    esi,DWORD PTR [rax+rax*1]
   1400144c4:	add    BYTE PTR [rax],al
   1400144c6:	push   rsi
   1400144c7:	add    BYTE PTR [rbx+0x0],dl
   1400144ca:	pop    rdi
   1400144cb:	add    BYTE PTR [rsi+0x0],dl
   1400144ce:	add    BYTE PTR [r10+0x0],r10b
   1400144d2:	push   rbx
   1400144d3:	add    BYTE PTR [rcx+0x0],cl
   1400144d6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400144da:	pop    rdi
   1400144db:	add    BYTE PTR [rcx+0x0],cl
   1400144de:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400144e2:	rex.WRXB add BYTE PTR [r8],r8b
   1400144e5:	add    BYTE PTR [rax],al
   1400144e7:	add    BYTE PTR [rbp+0xfeef04],bh
   1400144ed:	add    BYTE PTR [rcx],al
   1400144ef:	add    BYTE PTR [rax],al
   1400144f1:	add    BYTE PTR [rdx],cl
   1400144f3:	add    BYTE PTR [rax],al
   1400144f5:	add    BYTE PTR [rax],bpl
   1400144f8:	add    BYTE PTR [rax],al
   1400144fa:	or     al,BYTE PTR [rax]
   1400144fc:	add    BYTE PTR [rax+0x0],al
   1400144ff:	sub    BYTE PTR [rdi],bh
   140014501:	add    BYTE PTR [rax],al
   140014503:	add    BYTE PTR [rax],al
   140014505:	add    BYTE PTR [rax],al
   140014507:	add    BYTE PTR [rax+rax*1],al
   14001450a:	add    al,0x0
   14001450c:	add    al,BYTE PTR [rax]
	...
   14001451a:	add    BYTE PTR [rax],al
   14001451c:	cli    
   14001451d:	add    al,BYTE PTR [rax]
   14001451f:	add    BYTE PTR [rcx],al
   140014521:	add    BYTE PTR [rbx+0x0],dl
   140014524:	je     0x140014526
   140014526:	jb     0x140014528
   140014528:	imul   eax,DWORD PTR [rax],0x67006e
   14001452e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140014532:	ins    BYTE PTR es:[rdi],dx
   140014533:	add    BYTE PTR [rbp+0x0],ah
   140014536:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001453a:	data16 add BYTE PTR [rdi+0x0],ch
   14001453e:	add    BYTE PTR [rax],al
   140014540:	(bad)  
   140014541:	add    al,BYTE PTR [rax]
   140014543:	add    BYTE PTR [rcx],al
   140014545:	add    BYTE PTR [rax],dh
   140014547:	add    BYTE PTR [rax+rax*1],dh
   14001454a:	xor    BYTE PTR [rax],al
   14001454c:	cmp    DWORD PTR [rax],eax
   14001454e:	xor    BYTE PTR [rax],al
   140014550:	xor    al,0x0
   140014552:	rex.X add BYTE PTR [rax],sil
   140014555:	add    BYTE PTR [rax],al
   140014557:	add    BYTE PTR [rax+rax*1+0x16],cl
   14001455b:	add    BYTE PTR [rcx],al
   14001455d:	add    BYTE PTR [rbx+0x0],al
   140014560:	outs   dx,DWORD PTR ds:[rsi]
   140014561:	add    BYTE PTR [rbp+0x0],ch
   140014564:	jo     0x140014566
   140014566:	(bad)  
   140014567:	add    BYTE PTR [rsi+0x0],ch
   14001456a:	jns    0x14001456c
   14001456c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014570:	ins    DWORD PTR es:[rdi],dx
   140014571:	add    BYTE PTR [rbp+0x0],ah
   140014574:	add    BYTE PTR [rax],al
   140014576:	add    BYTE PTR [rax],al
   140014578:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001457c:	movsxd eax,DWORD PTR [rax]
   14001457e:	jb     0x140014580
   140014580:	outs   dx,DWORD PTR ds:[rsi]
   140014581:	add    BYTE PTR [rbx+0x0],dh
   140014584:	outs   dx,DWORD PTR ds:[rsi]
   140014585:	add    BYTE PTR [rsi+0x0],ah
   140014588:	je     0x14001458a
   14001458a:	and    BYTE PTR [rax],al
   14001458c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140014590:	jb     0x140014592
   140014592:	jo     0x140014594
   140014594:	outs   dx,DWORD PTR ds:[rsi]
   140014595:	add    BYTE PTR [rdx+0x0],dh
   140014598:	(bad)  
   140014599:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001459d:	add    BYTE PTR [rdi+0x0],ch
   1400145a0:	outs   dx,BYTE PTR ds:[rsi]
   1400145a1:	add    BYTE PTR [rax],al
   1400145a3:	add    BYTE PTR [rsi+0x0],al
   1400145a6:	sldt   WORD PTR [rcx]
   1400145a9:	add    BYTE PTR [rsi+0x0],al
   1400145ac:	imul   eax,DWORD PTR [rax],0x65006c
   1400145b2:	add    BYTE PTR [rbp+0x0],r12b
   1400145b6:	jae    0x1400145b8
   1400145b8:	movsxd eax,DWORD PTR [rax]
   1400145ba:	jb     0x1400145bc
   1400145bc:	imul   eax,DWORD PTR [rax],0x740070
   1400145c2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400145c8:	add    BYTE PTR [rax],al
   1400145ca:	add    BYTE PTR [rax],al
   1400145cc:	push   rdx
   1400145cd:	add    BYTE PTR [rbp+0x0],dh
   1400145d0:	outs   dx,BYTE PTR ds:[rsi]
   1400145d1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400145d5:	add    BYTE PTR [rbp+0x0],ch
   1400145d8:	add    BYTE PTR gs:[rax],ah
   1400145db:	add    BYTE PTR [rdx+0x0],al
   1400145de:	jb     0x1400145e0
   1400145e0:	outs   dx,DWORD PTR ds:[rsi]
   1400145e1:	add    BYTE PTR [rbx+0x0],ch
   1400145e4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400145e8:	add    BYTE PTR [rax],al
   1400145ea:	add    BYTE PTR [rax],al
   1400145ec:	data16 add BYTE PTR [rbx],ah
   1400145ef:	add    BYTE PTR [rcx],al
   1400145f1:	add    BYTE PTR [rsi+0x0],al
   1400145f4:	imul   eax,DWORD PTR [rax],0x65006c
   1400145fa:	push   rsi
   1400145fb:	add    BYTE PTR [rbp+0x0],ah
   1400145fe:	jb     0x140014600
   140014600:	jae    0x140014602
   140014602:	imul   eax,DWORD PTR [rax],0x6e006f
   140014608:	add    BYTE PTR [rax],al
   14001460a:	add    BYTE PTR [rax],al
   14001460c:	xor    DWORD PTR [rax],eax
   14001460e:	xor    BYTE PTR [rax],al
   140014610:	add    BYTE PTR cs:[rax],dh
   140014613:	add    BYTE PTR [rsi],ch
   140014615:	add    BYTE PTR [rcx],dh
   140014617:	add    BYTE PTR [rax],dh
   140014619:	add    BYTE PTR [rdx],dh
   14001461b:	add    BYTE PTR [rax+rax*1],dh
   14001461e:	xor    BYTE PTR [rax],al
   140014620:	add    BYTE PTR cs:[rcx],dh
   140014623:	add    BYTE PTR [rsi],dh
   140014625:	add    BYTE PTR [rbx],dh
   140014627:	add    BYTE PTR [rax],bh
   140014629:	add    BYTE PTR [rax+rax*1],dh
   14001462c:	and    BYTE PTR [rax],al
   14001462e:	sub    BYTE PTR [rax],al
   140014630:	je     0x140014632
   140014632:	push   0x2e003100
   140014637:	add    BYTE PTR [rcx],dh
   140014639:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701763f
   14001463f:	add    BYTE PTR [rax],dh
   140014641:	add    BYTE PTR [rcx],bh
   140014643:	add    BYTE PTR [rip+0x37003100],ch        # 0x177017749
   140014649:	add    BYTE PTR [rax],dh
   14001464b:	add    BYTE PTR [rax],dh
   14001464d:	add    BYTE PTR [rcx],ch
   14001464f:	add    BYTE PTR [rax],al
   140014651:	add    BYTE PTR [rax],al
   140014653:	add    BYTE PTR [rax+rax*1+0x12],al
   140014657:	add    BYTE PTR [rcx],al
   140014659:	add    BYTE PTR [rcx+0x0],cl
   14001465c:	outs   dx,BYTE PTR ds:[rsi]
   14001465d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140014661:	add    BYTE PTR [rdx+0x0],dh
   140014664:	outs   dx,BYTE PTR ds:[rsi]
   140014665:	add    BYTE PTR [rcx+0x0],ah
   140014668:	ins    BYTE PTR es:[rdi],dx
   140014669:	add    BYTE PTR [rsi+0x0],cl
   14001466c:	(bad)  
   14001466d:	add    BYTE PTR [rbp+0x0],ch
   140014670:	add    BYTE PTR gs:[rax],al
   140014673:	add    BYTE PTR [rdx+0x0],dl
   140014676:	jne    0x140014678
   140014678:	outs   dx,BYTE PTR ds:[rsi]
   140014679:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001467d:	add    BYTE PTR [rbp+0x0],ch
   140014680:	add    BYTE PTR gs:[rdx+0x0],al
   140014684:	jb     0x140014686
   140014686:	outs   dx,DWORD PTR ds:[rsi]
   140014687:	add    BYTE PTR [rbx+0x0],ch
   14001468a:	add    BYTE PTR gs:[rdx+0x0],dh
   14001468e:	add    BYTE PTR cs:[rbp+0x0],ah
   140014692:	js     0x140014694
   140014694:	add    BYTE PTR gs:[rax],al
   140014697:	add    BYTE PTR [rax+0x1002e00],al
   14001469d:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400146a1:	add    BYTE PTR [rdi+0x0],ah
   1400146a4:	(bad)  
   1400146a5:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400146a9:	add    BYTE PTR [rdi+0x0],ch
   1400146ac:	jo     0x1400146ae
   1400146ae:	jns    0x1400146b0
   1400146b0:	jb     0x1400146b2
   1400146b2:	imul   eax,DWORD PTR [rax],0x680067
   1400146b8:	je     0x1400146ba
   1400146ba:	add    BYTE PTR [rax],al
   1400146bc:	test   eax,0x4d002000
   1400146c1:	add    BYTE PTR [rcx+0x0],ch
   1400146c4:	movsxd eax,DWORD PTR [rax]
   1400146c6:	jb     0x1400146c8
   1400146c8:	outs   dx,DWORD PTR ds:[rsi]
   1400146c9:	add    BYTE PTR [rbx+0x0],dh
   1400146cc:	outs   dx,DWORD PTR ds:[rsi]
   1400146cd:	add    BYTE PTR [rsi+0x0],ah
   1400146d0:	je     0x1400146d2
   1400146d2:	and    BYTE PTR [rax],al
   1400146d4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400146d8:	jb     0x1400146da
   1400146da:	jo     0x1400146dc
   1400146dc:	outs   dx,DWORD PTR ds:[rsi]
   1400146dd:	add    BYTE PTR [rdx+0x0],dh
   1400146e0:	(bad)  
   1400146e1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400146e5:	add    BYTE PTR [rdi+0x0],ch
   1400146e8:	outs   dx,BYTE PTR ds:[rsi]
   1400146e9:	add    BYTE PTR [rsi],ch
   1400146eb:	add    BYTE PTR [rax],ah
   1400146ed:	add    BYTE PTR [rcx+0x0],al
   1400146f0:	ins    BYTE PTR es:[rdi],dx
   1400146f1:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400146f5:	add    BYTE PTR [rdx+0x0],dh
   1400146f8:	imul   eax,DWORD PTR [rax],0x680067
   1400146fe:	je     0x140014700
   140014700:	jae    0x140014702
   140014702:	and    BYTE PTR [rax],al
   140014704:	jb     0x140014706
   140014706:	add    BYTE PTR gs:[rbx+0x0],dh
   14001470a:	add    BYTE PTR gs:[rdx+0x0],dh
   14001470e:	jbe    0x140014710
   140014710:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140014715:	add    BYTE PTR [rax],al
   140014717:	add    BYTE PTR [rax+rax*1+0x12],cl
   14001471b:	add    BYTE PTR [rcx],al
   14001471d:	add    BYTE PTR [rdi+0x0],cl
   140014720:	jb     0x140014722
   140014722:	imul   eax,DWORD PTR [rax],0x690067
   140014728:	outs   dx,BYTE PTR ds:[rsi]
   140014729:	add    BYTE PTR [rcx+0x0],ah
   14001472c:	ins    BYTE PTR es:[rdi],dx
   14001472d:	add    BYTE PTR [rsi+0x0],al
   140014730:	imul   eax,DWORD PTR [rax],0x65006c
   140014736:	outs   dx,BYTE PTR ds:[rsi]
   140014737:	add    BYTE PTR [rcx+0x0],ah
   14001473a:	ins    DWORD PTR es:[rdi],dx
   14001473b:	add    BYTE PTR [rbp+0x0],ah
   14001473e:	add    BYTE PTR [rax],al
   140014740:	push   rdx
   140014741:	add    BYTE PTR [rbp+0x0],dh
   140014744:	outs   dx,BYTE PTR ds:[rsi]
   140014745:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014749:	add    BYTE PTR [rbp+0x0],ch
   14001474c:	add    BYTE PTR gs:[rdx+0x0],al
   140014750:	jb     0x140014752
   140014752:	outs   dx,DWORD PTR ds:[rsi]
   140014753:	add    BYTE PTR [rbx+0x0],ch
   140014756:	add    BYTE PTR gs:[rdx+0x0],dh
   14001475a:	add    BYTE PTR cs:[rbp+0x0],ah
   14001475e:	js     0x140014760
   140014760:	add    BYTE PTR gs:[rax],al
   140014763:	add    BYTE PTR [rdx+0x0],ch
   140014766:	and    eax,0x50000100
   14001476b:	add    BYTE PTR [rdx+0x0],dh
   14001476e:	outs   dx,DWORD PTR ds:[rsi]
   14001476f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140014773:	add    BYTE PTR [rbx+0x0],ah
   140014776:	je     0x140014778
   140014778:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001477c:	ins    DWORD PTR es:[rdi],dx
   14001477d:	add    BYTE PTR [rbp+0x0],ah
   140014780:	add    BYTE PTR [rax],al
   140014782:	add    BYTE PTR [rax],al
   140014784:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140014788:	movsxd eax,DWORD PTR [rax]
   14001478a:	jb     0x14001478c
   14001478c:	outs   dx,DWORD PTR ds:[rsi]
   14001478d:	add    BYTE PTR [rbx+0x0],dh
   140014790:	outs   dx,DWORD PTR ds:[rsi]
   140014791:	add    BYTE PTR [rsi+0x0],ah
   140014794:	je     0x140014796
   140014796:	scas   al,BYTE PTR es:[rdi]
   140014797:	add    BYTE PTR [rax],ah
   140014799:	add    BYTE PTR [rdi+0x0],dl
   14001479c:	imul   eax,DWORD PTR [rax],0x64006e
   1400147a2:	outs   dx,DWORD PTR ds:[rsi]
   1400147a3:	add    BYTE PTR [rdi+0x0],dh
   1400147a6:	jae    0x1400147a8
   1400147a8:	scas   al,BYTE PTR es:[rdi]
   1400147a9:	add    BYTE PTR [rax],ah
   1400147ab:	add    BYTE PTR [rdi+0x0],cl
   1400147ae:	jo     0x1400147b0
   1400147b0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400147b4:	(bad)  
   1400147b5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400147b9:	add    BYTE PTR [rsi+0x0],ch
   1400147bc:	add    BYTE PTR [eax],ah
   1400147bf:	add    BYTE PTR [rbx+0x0],dl
   1400147c2:	jns    0x1400147c4
   1400147c4:	jae    0x1400147c6
   1400147c6:	je     0x1400147c8
   1400147c8:	add    BYTE PTR gs:[rbp+0x0],ch
   1400147cc:	add    BYTE PTR [rax],al
   1400147ce:	add    BYTE PTR [rax],al
   1400147d0:	rex.RX add BYTE PTR [rcx],r10b
   1400147d3:	add    BYTE PTR [rcx],al
   1400147d5:	add    BYTE PTR [rax+0x0],dl
   1400147d8:	jb     0x1400147da
   1400147da:	outs   dx,DWORD PTR ds:[rsi]
   1400147db:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400147df:	add    BYTE PTR [rbx+0x0],ah
   1400147e2:	je     0x1400147e4
   1400147e4:	push   rsi
   1400147e5:	add    BYTE PTR [rbp+0x0],ah
   1400147e8:	jb     0x1400147ea
   1400147ea:	jae    0x1400147ec
   1400147ec:	imul   eax,DWORD PTR [rax],0x6e006f
   1400147f2:	add    BYTE PTR [rax],al
   1400147f4:	xor    DWORD PTR [rax],eax
   1400147f6:	xor    BYTE PTR [rax],al
   1400147f8:	add    BYTE PTR cs:[rax],dh
   1400147fb:	add    BYTE PTR [rsi],ch
   1400147fd:	add    BYTE PTR [rcx],dh
   1400147ff:	add    BYTE PTR [rax],dh
   140014801:	add    BYTE PTR [rdx],dh
   140014803:	add    BYTE PTR [rax+rax*1],dh
   140014806:	xor    BYTE PTR [rax],al
   140014808:	add    BYTE PTR cs:[rcx],dh
   14001480b:	add    BYTE PTR [rsi],dh
   14001480d:	add    BYTE PTR [rbx],dh
   14001480f:	add    BYTE PTR [rax],bh
   140014811:	add    BYTE PTR [rax+rax*1],dh
   140014814:	add    BYTE PTR [rax],al
   140014816:	add    BYTE PTR [rax],al
   140014818:	add    BYTE PTR [rax],r8b
   14001481b:	add    BYTE PTR [rcx],al
   14001481d:	add    BYTE PTR [rsi+0x0],dl
   140014820:	(bad)  
   140014821:	add    BYTE PTR [rdx+0x0],dh
   140014824:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140014828:	ins    BYTE PTR es:[rdi],dx
   140014829:	add    BYTE PTR [rbp+0x0],ah
   14001482c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140014830:	data16 add BYTE PTR [rdi+0x0],ch
   140014834:	add    BYTE PTR [rax],al
   140014836:	add    BYTE PTR [rax],al
   140014838:	and    al,0x0
   14001483a:	add    al,0x0
   14001483c:	add    BYTE PTR [rax],al
   14001483e:	push   rsp
   14001483f:	add    BYTE PTR [rdx+0x0],dh
   140014842:	(bad)  
   140014843:	add    BYTE PTR [rsi+0x0],ch
   140014846:	jae    0x140014848
   140014848:	ins    BYTE PTR es:[rdi],dx
   140014849:	add    BYTE PTR [rcx+0x0],ah
   14001484c:	je     0x14001484e
   14001484e:	imul   eax,DWORD PTR [rax],0x6e006f
   140014854:	add    BYTE PTR [rax],al
   140014856:	add    BYTE PTR [rax],al
   140014858:	or     DWORD PTR [rax+rsi*4],eax
   14001485b:	add    al,0x0
   14001485d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140015000 <.reloc>:
   140015000:	add    al,dl
   140015002:	add    BYTE PTR [rax],al
   140015004:	xor    BYTE PTR [rcx],al
   140015006:	add    BYTE PTR [rax],al
   140015008:	mov    eax,0xd0a4c0a4
   14001500d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001500e:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   140015015:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015016:	clc    
   140015017:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015018:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14001501e:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   140015024:	xor    BYTE PTR [rbp-0x5aaf5ac8],ah
   14001502a:	pop    rax
   14001502b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001502c:	nop
   14001502d:	test   al,0x98
   14001502f:	test   al,0xa0
   140015031:	test   al,0xa8
   140015033:	test   al,0xb0
   140015035:	test   al,0xb8
   140015037:	test   al,0xc0
   140015039:	test   al,0xc8
   14001503b:	test   al,0xd0
   14001503d:	test   al,0xd8
   14001503f:	test   al,0xe0
   140015041:	test   al,0xe8
   140015043:	test   al,0xf0
   140015045:	test   al,0xf8
   140015047:	test   al,0x0
   140015049:	test   eax,0xa910a908
   14001504e:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140015054:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14001505a:	test   rax,0xffffffffa958a950
   140015060:	(bad)  
   140015061:	test   eax,0xa970a968
   140015066:	js     0x140015011
   140015068:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14001506f:	test   eax,0xa9a8a9a0
   140015074:	mov    al,0xa9
   140015076:	mov    eax,0xc8a9c0a9
   14001507b:	test   eax,0xa9d8a9d0
   140015080:	loopne 0x14001502b
   140015082:	call   0x138ab4130
   140015087:	test   eax,0xaa08aa00
   14001508c:	adc    BYTE PTR [rdx-0x55df55e8],ch
   140015092:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140015098:	stos   BYTE PTR es:[rdi],al
   14001509a:	rex.W stos BYTE PTR es:[rdi],al
   14001509c:	push   rax
   14001509d:	stos   BYTE PTR es:[rdi],al
   14001509e:	pop    rax
   14001509f:	stos   BYTE PTR es:[rdi],al
   1400150a0:	push   0x78aa70aa
   1400150a5:	stos   BYTE PTR es:[rdi],al
   1400150a6:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400150ad:	stos   BYTE PTR es:[rdi],al
   1400150ae:	movabs al,ds:0xc0aab8aab0aaa8aa
   1400150b7:	stos   BYTE PTR es:[rdi],al
   1400150b8:	enter  0xd0aa,0xaa
   1400150bc:	fsubr  DWORD PTR [rdx-0x55175520]
   1400150c2:	lock stos BYTE PTR es:[rdi],al
   1400150c4:	clc    
   1400150c5:	stos   BYTE PTR es:[rdi],al
   1400150c6:	add    BYTE PTR [rbx-0x54ef54f8],ch
   1400150cc:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   1400150d2:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   1400150d8:	stos   QWORD PTR es:[rdi],rax
   1400150da:	push   rax
   1400150db:	stos   DWORD PTR es:[rdi],eax
   1400150dc:	pop    rax
   1400150dd:	stos   DWORD PTR es:[rdi],eax
   1400150de:	(bad)  
   1400150df:	stos   DWORD PTR es:[rdi],eax
   1400150e0:	push   0x78ab70ab
   1400150e5:	stos   DWORD PTR es:[rdi],eax
   1400150e6:	sub    BYTE PTR [rbx-0x53f75400],0x10
   1400150ed:	lods   al,BYTE PTR ds:[rsi]
   1400150ee:	sbb    BYTE PTR [rax+riz*1+0x30ac28ac],ch
   1400150f5:	lods   al,BYTE PTR ds:[rsi]
   1400150f6:	cmp    BYTE PTR [rax+rax*2+0x50ac48ac],ch
   1400150fd:	lods   al,BYTE PTR ds:[rsi]
   1400150fe:	pop    rax
   1400150ff:	lods   al,BYTE PTR ds:[rsi]
   140015100:	(bad)  
   140015101:	lods   al,BYTE PTR ds:[rsi]
   140015102:	cwde   
   140015103:	lods   eax,DWORD PTR ds:[rsi]
   140015104:	movabs al,ds:0x8aea0ae30add8ad
   14001510d:	scas   eax,DWORD PTR es:[rdi]
   14001510e:	push   0x78af70af
   140015113:	scas   eax,DWORD PTR es:[rdi]
   140015114:	sub    BYTE PTR [rdi-0x505f5078],0xa8
   14001511b:	scas   eax,DWORD PTR es:[rdi]
   14001511c:	mov    al,0xaf
   14001511e:	mov    eax,0xc8afc0af
   140015123:	scas   eax,DWORD PTR es:[rdi]
   140015124:	shr    BYTE PTR [rdi-0x501f5028],1
   14001512a:	call   0x138b141de
   14001512f:	scas   eax,DWORD PTR es:[rdi]
   140015130:	add    al,ah
   140015132:	add    BYTE PTR [rax],al
   140015134:	mov    eax,0x1
   140015139:	movabs al,ds:0xa020a018a010a008
   140015142:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   140015148:	movabs al,ds:0xa368a058a050a048
   140015152:	and    BYTE PTR [rbx-0x5c6f5c78],0x28
   140015159:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001515a:	xor    BYTE PTR [rax+rdi*1+0x48a440a4],ah
   140015161:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015162:	push   rax
   140015163:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015164:	pop    rax
   140015165:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015166:	(bad)  
   140015167:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015168:	push   0x78a470a4
   14001516d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001516e:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140015176:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14001517f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015180:	enter  0xd0a4,0xa4
   140015184:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   14001518b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001518c:	clc    
   14001518d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001518e:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140015194:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14001519a:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   1400151a0:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400151a2:	push   rax
   1400151a3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400151a4:	pop    rax
   1400151a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400151a6:	(bad)  
   1400151a7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400151a8:	push   0x78a570a5
   1400151ad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400151ae:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   1400151b5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400151b6:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   1400151bf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400151c0:	enter  0xd0a5,0xa5
   1400151c4:	fsub   DWORD PTR [rbp-0x5a175a20]
   1400151ca:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400151cc:	clc    
   1400151cd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400151ce:	add    BYTE PTR [rsi-0x59ef59f8],ah
   1400151d4:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   1400151da:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   1400151e0:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400151e2:	push   rax
   1400151e3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400151e4:	pop    rax
   1400151e5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400151e6:	(bad)  
   1400151e7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400151e8:	push   0x78a670a6
   1400151ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400151ee:	and    BYTE PTR [rsi-0x596f5978],0x98
   1400151f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400151f6:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   1400151ff:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015200:	enter  0xd0a6,0xa6
   140015204:	fsub   DWORD PTR [rsi-0x59175920]
   14001520a:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001520c:	clc    
   14001520d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001520e:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140015214:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14001521a:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140015220:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140015222:	push   rax
   140015223:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015224:	pop    rax
   140015225:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015226:	(bad)  
   140015227:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015228:	push   0x78a770a7
   14001522d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001522e:	and    BYTE PTR [rdi-0x586f5878],0x98
   140015235:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015236:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14001523f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015240:	enter  0xd0a7,0xa7
   140015244:	fsub   DWORD PTR [rdi-0x58175820]
   14001524a:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001524c:	clc    
   14001524d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001524e:	add    BYTE PTR [rax-0x57ef57f8],ch
   140015254:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14001525a:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140015260:	rex.W test al,0x50
   140015263:	test   al,0x58
   140015265:	test   al,0x60
   140015267:	test   al,0x68
   140015269:	test   al,0x70
   14001526b:	test   al,0x78
   14001526d:	test   al,0x80
   14001526f:	test   al,0x88
   140015271:	test   al,0x90
   140015273:	test   al,0x98
   140015275:	test   al,0xa0
   140015277:	test   al,0xa8
   140015279:	test   al,0xb0
   14001527b:	test   al,0xb8
   14001527d:	test   al,0xc0
   14001527f:	test   al,0xc8
   140015281:	test   al,0xd0
   140015283:	test   al,0xd8
   140015285:	test   al,0xe0
   140015287:	test   al,0xe8
   140015289:	test   al,0xf0
   14001528b:	test   al,0xf8
   14001528d:	test   al,0x0
   14001528f:	test   eax,0xa910a908
   140015294:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14001529a:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400152a0:	test   rax,0xffffffffa958a950
   1400152a6:	(bad)  
   1400152a7:	test   eax,0xa970a968
   1400152ac:	js     0x140015257
   1400152ae:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400152b5:	test   eax,0xa9a8a9a0
   1400152ba:	mov    al,0xa9
   1400152bc:	mov    eax,0xc8a9c0a9
   1400152c1:	test   eax,0xa9d8a9d0
   1400152c6:	loopne 0x140015271
   1400152c8:	call   0x138ab4376
   1400152cd:	test   eax,0xaa08aa00
   1400152d2:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400152d8:	sub    BYTE PTR [rdx-0x55c755d0],ch
   1400152de:	stos   BYTE PTR es:[rdi],al
   1400152e0:	rex.W stos BYTE PTR es:[rdi],al
   1400152e2:	push   rax
   1400152e3:	stos   BYTE PTR es:[rdi],al
   1400152e4:	pop    rax
   1400152e5:	stos   BYTE PTR es:[rdi],al
   1400152e6:	add    BYTE PTR [rax],al
   1400152e8:	add    BYTE PTR [rax],ah
   1400152ea:	add    DWORD PTR [rax],eax
   1400152ec:	push   0x58000000
   1400152f1:	movabs al,ds:0xa0c0a0a0a090a060
   1400152fa:	shl    BYTE PTR [rax-0x5eff5f10],1
   140015300:	and    BYTE PTR [rcx-0x5eaf5ed0],ah
   140015306:	(bad)  
   140015307:	movabs eax,ds:0xa1d0a1b0a190a170
   140015310:	lock movabs eax,ds:0xa270a250a230a210
   14001531a:	nop
   14001531b:	movabs ds:0xa348a318a2d0a2b0,al
   140015324:	mov    BYTE PTR [rbx-0x5c575c60],ah
   14001532a:	shl    BYTE PTR [rbx-0x5bff5c20],0x20
   140015331:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015332:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015334:	(bad)  
   140015335:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015336:	and    BYTE PTR [rax+riz*4-0xf5b3f5c],0xa4
   14001533e:	adc    BYTE PTR [rbp-0x5ac75ae0],ah
   140015344:	push   rax
   140015345:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015346:	(bad)  
   140015347:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015348:	jo     0x1400152ef
   14001534a:	.byte 0x80
   14001534b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001534c:	nop
   14001534d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
