
4c5a4bfbd6de5221c044b95c96fabc094fd854508471f9d7cb3890853ea318c3.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xb215]        # 0x40c230
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xb216]        # 0x40c240
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xb219]        # 0x40c250
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xb1dc]        # 0x40c220
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xb03f]        # 0x40c090
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xb1b1]        # 0x40c210
  40105f:	mov    DWORD PTR [rip+0xdfa3],edx        # 0x40f008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x408240
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402520
  401081:	mov    rdx,QWORD PTR [rip+0xb098]        # 0x40c120
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xb07e]        # 0x40c110
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xb114]        # 0x40c1b0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xb01b]        # 0x40c0c0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x402100
  4010af:	mov    rax,QWORD PTR [rip+0xaf6a]        # 0x40c020
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x408240
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x12d9]        # 0x402400
  401127:	call   0x4023f0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xb075]        # 0x40c1e0
  40116b:	lea    r8,[rip+0xdea6]        # 0x40f018
  401172:	lea    rdx,[rip+0xdea7]        # 0x40f020
  401179:	lea    rcx,[rip+0xdea8]        # 0x40f028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xde78],eax        # 0x40f000
  401188:	lea    rax,[rip+0xde71]        # 0x40f000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xb005]        # 0x40c1a0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x408258
  4011a3:	mov    DWORD PTR [rip+0xde67],eax        # 0x40f010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xb04a]        # 0x40c210
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xaefb]        # 0x40c0f0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x10286]        # 0x411488
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xaed7]        # 0x40c100
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xddba],0x1        # 0x40f004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xae0c]        # 0x40c070
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402710
  40127d:	lea    rcx,[rip+0x1a2c]        # 0x402cb0
  401284:	call   QWORD PTR [rip+0x101f6]        # 0x411480
  40128a:	mov    rdx,QWORD PTR [rip+0xae4f]        # 0x40c0e0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402bc0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x408280
  4012a5:	call   0x402500
  4012aa:	mov    rax,QWORD PTR [rip+0xaddf]        # 0x40c090
  4012b1:	mov    QWORD PTR [rip+0xf2a0],rax        # 0x410558
  4012b8:	mov    rax,QWORD PTR [rip+0xadf1]        # 0x40c0b0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xf239],rax        # 0x410550
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x8cca],eax        # 0x40a000
  401336:	mov    r12d,DWORD PTR [rip+0xdceb]        # 0x40f028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x408180
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xdcc2]        # 0x40f020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x408138
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x408180
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x408178
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xdc6a],rbp        # 0x40f020
  4013b6:	call   0x4020d0
  4013bb:	mov    rax,QWORD PTR [rip+0xacde]        # 0x40c0a0
  4013c2:	mov    rdx,QWORD PTR [rip+0xdc4f]        # 0x40f018
  4013c9:	mov    ecx,DWORD PTR [rip+0xdc59]        # 0x40f028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xdc3c]        # 0x40f018
  4013dc:	mov    rdx,QWORD PTR [rip+0xdc3d]        # 0x40f020
  4013e3:	call   0x408350
  4013e8:	mov    ecx,DWORD PTR [rip+0xdc1a]        # 0x40f008
  4013ee:	mov    DWORD PTR [rip+0xdc18],eax        # 0x40f00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xdc02]        # 0x40f004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x408228
  40140b:	mov    eax,DWORD PTR [rip+0xdbfb]        # 0x40f00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xacc9]        # 0x40c100
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x408230
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0xad0d]        # 0x40c170
  401463:	mov    rcx,QWORD PTR [rip+0xacf6]        # 0x40c160
  40146a:	call   0x408218
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xff97]        # 0x411430
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xace9]        # 0x40c190
  4014a7:	mov    rcx,QWORD PTR [rip+0xacd2]        # 0x40c180
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x408218
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4081e0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xad35]        # 0x40c210
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x402110
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xad05]        # 0x40c210
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x402110
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbx
  401531:	sub    rsp,0x40
  401535:	movsd  xmm1,QWORD PTR [rdx]
  401539:	mov    rbx,rcx
  40153c:	movsd  xmm0,QWORD PTR [rdx+0x8]
  401541:	mov    edx,DWORD PTR [rip+0xdbc1]        # 0x40f108
  401547:	test   edx,edx
  401549:	je     0x40155b
  40154b:	movsd  xmm2,QWORD PTR [rip+0xdaed]        # 0x40f040
  401553:	mulsd  xmm1,xmm2
  401557:	mulsd  xmm0,xmm2
  40155b:	movq   QWORD PTR [rsp+0x20],xmm1
  401561:	lea    rcx,[rsp+0x30]
  401566:	lea    rdx,[rsp+0x20]
  40156b:	movq   QWORD PTR [rsp+0x28],xmm0
  401571:	mov    r8,QWORD PTR [rip+0xdbb8]        # 0x40f130
  401578:	call   QWORD PTR [rip+0xdbaa]        # 0x40f128
  40157e:	mov    eax,DWORD PTR [rip+0xdb74]        # 0x40f0f8
  401584:	movsd  xmm0,QWORD PTR [rsp+0x30]
  40158a:	movsd  xmm1,QWORD PTR [rsp+0x38]
  401590:	test   eax,eax
  401592:	je     0x4015ae
  401594:	ucomisd xmm0,QWORD PTR [rip+0xa19c]        # 0x40b738
  40159c:	ja     0x4015ae
  40159e:	movsd  xmm2,QWORD PTR [rip+0xda9a]        # 0x40f040
  4015a6:	mulsd  xmm0,xmm2
  4015aa:	mulsd  xmm1,xmm2
  4015ae:	mov    rax,rbx
  4015b1:	movsd  QWORD PTR [rbx],xmm0
  4015b5:	movsd  QWORD PTR [rbx+0x8],xmm1
  4015ba:	add    rsp,0x40
  4015be:	pop    rbx
  4015bf:	ret    
  4015c0:	push   r15
  4015c2:	push   r14
  4015c4:	push   r13
  4015c6:	push   r12
  4015c8:	push   rbp
  4015c9:	push   rdi
  4015ca:	push   rsi
  4015cb:	push   rbx
  4015cc:	sub    rsp,0xe8
  4015d3:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  4015db:	movaps XMMWORD PTR [rsp+0xb0],xmm7
  4015e3:	movaps XMMWORD PTR [rsp+0xc0],xmm8
  4015ec:	movaps XMMWORD PTR [rsp+0xd0],xmm9
  4015f5:	lea    rax,[rip+0x954]        # 0x401f50
  4015fc:	pxor   xmm6,xmm6
  401600:	test   ecx,ecx
  401602:	mov    ebp,ecx
  401604:	mov    r12,r9
  401607:	mov    QWORD PTR [rsp+0x138],rdx
  40160f:	lea    rdx,[rip+0x1eaa]        # 0x4034c0
  401616:	mov    QWORD PTR [rsp+0x140],r8
  40161e:	mov    ebx,DWORD PTR [rsp+0x150]
  401625:	mov    r15,QWORD PTR [rsp+0x158]
  40162d:	cmovne rax,rdx
  401631:	cmp    BYTE PTR [r8],0x0
  401635:	mov    rsi,rax
  401638:	movapd xmm7,xmm6
  40163c:	jne    0x4019a3
  401642:	movapd xmm8,xmm6
  401647:	movapd xmm9,xmm6
  40164c:	lea    rdx,[rip+0xa21e]        # 0x40b871
  401653:	mov    ecx,0x10
  401658:	call   0x401f48
  40165d:	mov    rsi,QWORD PTR [rsp+0x140]
  401665:	cmp    BYTE PTR [rsi],0x2c
  401668:	je     0x401a30
  40166e:	mov    BYTE PTR [rsp+0x5f],0x0
  401673:	mov    BYTE PTR [rsp+0x5e],0x0
  401678:	mov    r13d,0xffffffff
  40167e:	mov    DWORD PTR [rsp+0x58],0xf
  401686:	mov    DWORD PTR [rsp+0x54],0xf
  40168e:	xor    edi,edi
  401690:	cmp    BYTE PTR [rsi],0x0
  401693:	lea    rdx,[rip+0xa0cc]        # 0x40b766
  40169a:	jne    0x401960
  4016a0:	lea    rcx,[rip+0xa0cc]        # 0x40b773
  4016a7:	lea    rsi,[rsp+0x90]
  4016af:	call   0x408170
  4016b4:	test   ebx,ebx
  4016b6:	jle    0x40173b
  4016bc:	lea    eax,[rbx-0x1]
  4016bf:	xor    r14d,r14d
  4016c2:	lea    rsi,[rsp+0x90]
  4016ca:	lea    rbx,[r15+rax*8+0x8]
  4016cf:	jmp    0x4016f3
  4016d1:	lea    rcx,[rip+0xa0b4]        # 0x40b78c
  4016d8:	mov    r8,rsi
  4016db:	call   0x408170
  4016e0:	add    r14d,DWORD PTR [rsp+0x90]
  4016e8:	cmp    r14d,0x32
  4016ec:	jg     0x401720
  4016ee:	cmp    r15,rbx
  4016f1:	je     0x401732
  4016f3:	add    r15,0x8
  4016f7:	mov    rdx,QWORD PTR [r15-0x8]
  4016fb:	cmp    BYTE PTR [rdx],0x2b
  4016fe:	je     0x4016ee
  401700:	test   r14d,r14d
  401703:	jne    0x4016d1
  401705:	mov    ecx,0x23
  40170a:	mov    QWORD PTR [rsp+0x48],rdx
  40170f:	mov    r14b,0x1
  401712:	call   0x408168
  401717:	mov    rdx,QWORD PTR [rsp+0x48]
  40171c:	jmp    0x4016d1
  40171e:	xchg   ax,ax
  401720:	mov    ecx,0xa
  401725:	xor    r14d,r14d
  401728:	call   0x408168
  40172d:	cmp    r15,rbx
  401730:	jne    0x4016f3
  401732:	test   r14d,r14d
  401735:	jne    0x401994
  40173b:	lea    rcx,[rip+0xa050]        # 0x40b792
  401742:	call   0x408160
  401747:	mov    rcx,r12
  40174a:	call   0x401ee0
  40174f:	ucomisd xmm8,xmm7
  401754:	jp     0x40175c
  401756:	je     0x401910
  40175c:	ucomisd xmm9,xmm6
  401761:	jae    0x401910
  401767:	ucomisd xmm7,xmm8
  40176c:	jbe    0x401776
  40176e:	subsd  xmm7,QWORD PTR [rip+0xa11a]        # 0x40b890
  401776:	cmp    BYTE PTR [rsp+0x5e],0x0
  40177b:	jne    0x401b51
  401781:	cmp    BYTE PTR [rsp+0x5f],0x0
  401786:	jne    0x401b51
  40178c:	pxor   xmm1,xmm1
  401790:	movsd  xmm0,QWORD PTR [rip+0xa100]        # 0x40b898
  401798:	cvtsi2sd xmm1,r13d
  40179d:	call   0x403770
  4017a2:	mov    eax,DWORD PTR [rsp+0x54]
  4017a6:	movsd  xmm2,QWORD PTR [rip+0xa0f2]        # 0x40b8a0
  4017ae:	lea    rdx,[rsp+0x60]
  4017b3:	lea    rcx,[rsp+0x70]
  4017b8:	mov    DWORD PTR [rsp+0x38],edi
  4017bc:	mulsd  xmm2,xmm0
  4017c0:	mov    r9,rsi
  4017c3:	movq   QWORD PTR [rsp+0x70],xmm7
  4017c9:	mov    DWORD PTR [rsp+0x30],eax
  4017cd:	mov    eax,DWORD PTR [rsp+0x58]
  4017d1:	movq   QWORD PTR [rsp+0x78],xmm9
  4017d8:	movq   QWORD PTR [rsp+0x60],xmm8
  4017df:	movq   QWORD PTR [rsp+0x68],xmm6
  4017e5:	mov    DWORD PTR [rsp+0x28],eax
  4017e9:	mov    rax,QWORD PTR [rsp+0x138]
  4017f1:	mov    QWORD PTR [rsp+0x20],rax
  4017f6:	call   0x401f40
  4017fb:	test   rax,rax
  4017fe:	mov    rbx,rax
  401801:	je     0x401bd2
  401807:	test   ebp,ebp
  401809:	je     0x401930
  40180f:	movsd  xmm1,QWORD PTR [rip+0xa091]        # 0x40b8a8
  401817:	mov    edx,0x49
  40181c:	mulsd  xmm1,QWORD PTR [r12+0x98]
  401826:	movsd  QWORD PTR [rsp+0x30],xmm6
  40182c:	movapd xmm3,xmm7
  401830:	movsd  QWORD PTR [rsp+0x28],xmm9
  401837:	movq   r9,xmm7
  40183c:	movq   r8,xmm1
  401841:	movsd  QWORD PTR [rsp+0x20],xmm8
  401848:	movapd xmm2,xmm1
  40184c:	lea    rcx,[rip+0x9fcd]        # 0x40b820
  401853:	call   0x408170
  401858:	test   edi,edi
  40185a:	jne    0x401b10
  401860:	test   r13d,r13d
  401863:	jle    0x401b80
  401869:	lea    rsi,[rsp+0x80]
  401871:	mov    DWORD PTR [rsp+0x80],0x66302e25
  40187c:	mov    BYTE PTR [rsp+0x84],0x0
  401884:	call   QWORD PTR [rip+0xfc56]        # 0x4114e0
  40188a:	lea    rdx,[rax+0x30]
  40188e:	mov    r8,rsi
  401891:	mov    rcx,rbx
  401894:	call   0x401c30
  401899:	lea    r9,[rip+0x9ec6]        # 0x40b766
  4018a0:	movsd  xmm1,QWORD PTR [rsp+0x98]
  4018a9:	lea    rcx,[rip+0x9fa0]        # 0x40b850
  4018b0:	movsd  xmm0,QWORD PTR [rsp+0x90]
  4018b9:	movapd xmm2,xmm1
  4018bd:	movq   r8,xmm1
  4018c2:	movq   rdx,xmm0
  4018c7:	movapd xmm1,xmm0
  4018cb:	call   0x408170
  4018d0:	nop
  4018d1:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  4018d9:	movaps xmm7,XMMWORD PTR [rsp+0xb0]
  4018e1:	movaps xmm8,XMMWORD PTR [rsp+0xc0]
  4018ea:	movaps xmm9,XMMWORD PTR [rsp+0xd0]
  4018f3:	add    rsp,0xe8
  4018fa:	pop    rbx
  4018fb:	pop    rsi
  4018fc:	pop    rdi
  4018fd:	pop    rbp
  4018fe:	pop    r12
  401900:	pop    r13
  401902:	pop    r14
  401904:	pop    r15
  401906:	ret    
  401907:	nop    WORD PTR [rax+rax*1+0x0]
  401910:	lea    rdx,[rip+0x9e93]        # 0x40b7aa
  401917:	mov    ecx,0x10
  40191c:	call   0x401f48
  401921:	jmp    0x401767
  401926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401930:	movsd  xmm1,QWORD PTR [rip+0x9f70]        # 0x40b8a8
  401938:	mov    edx,0x46
  40193d:	mulsd  xmm6,xmm1
  401941:	mulsd  xmm9,xmm1
  401946:	mulsd  xmm8,xmm1
  40194b:	mulsd  xmm7,xmm1
  40194f:	mulsd  xmm1,QWORD PTR [r12+0x98]
  401959:	jmp    0x401826
  40195e:	xchg   ax,ax
  401960:	lea    rdi,[rip+0x9e09]        # 0x40b770
  401967:	mov    ecx,0x3
  40196c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40196e:	seta   al
  401971:	setb   cl
  401974:	xor    edi,edi
  401976:	sub    eax,ecx
  401978:	movsx  eax,al
  40197b:	cmp    eax,0x1
  40197e:	setb   dil
  401982:	test   eax,eax
  401984:	lea    rax,[rip+0x9dd5]        # 0x40b760
  40198b:	cmove  rdx,rax
  40198f:	jmp    0x4016a0
  401994:	mov    ecx,0xa
  401999:	call   0x408168
  40199e:	jmp    0x40173b
  4019a3:	lea    rdi,[rsp+0x140]
  4019ab:	mov    rcx,r8
  4019ae:	pxor   xmm6,xmm6
  4019b2:	mov    rdx,rdi
  4019b5:	call   rax
  4019b7:	mov    rcx,QWORD PTR [rsp+0x140]
  4019bf:	movapd xmm7,xmm0
  4019c3:	cmp    BYTE PTR [rcx],0x2c
  4019c6:	jne    0x401642
  4019cc:	add    rcx,0x1
  4019d0:	mov    rdx,rdi
  4019d3:	call   rsi
  4019d5:	mov    rcx,QWORD PTR [rsp+0x140]
  4019dd:	movapd xmm8,xmm0
  4019e2:	cmp    BYTE PTR [rcx],0x2c
  4019e5:	jne    0x401647
  4019eb:	add    rcx,0x1
  4019ef:	mov    rdx,rdi
  4019f2:	call   rsi
  4019f4:	mov    rcx,QWORD PTR [rsp+0x140]
  4019fc:	movapd xmm9,xmm0
  401a01:	cmp    BYTE PTR [rcx],0x2c
  401a04:	jne    0x40164c
  401a0a:	add    rcx,0x1
  401a0e:	mov    rdx,rdi
  401a11:	call   rsi
  401a13:	mov    rsi,QWORD PTR [rsp+0x140]
  401a1b:	movapd xmm6,xmm0
  401a1f:	cmp    BYTE PTR [rsi],0x2c
  401a22:	jne    0x40166e
  401a28:	nop    DWORD PTR [rax+rax*1+0x0]
  401a30:	lea    rcx,[rsi+0x1]
  401a34:	mov    QWORD PTR [rsp+0x140],rcx
  401a3c:	cmp    BYTE PTR [rsi+0x1],0x2c
  401a40:	je     0x401b71
  401a46:	lea    rdx,[rsp+0x140]
  401a4e:	mov    r8d,0xa
  401a54:	call   0x408118
  401a59:	mov    rcx,QWORD PTR [rsp+0x140]
  401a61:	mov    r13d,eax
  401a64:	cmp    BYTE PTR [rcx],0x2c
  401a67:	jne    0x401bf8
  401a6d:	lea    rax,[rcx+0x1]
  401a71:	mov    QWORD PTR [rsp+0x140],rax
  401a79:	cmp    BYTE PTR [rcx+0x1],0x2c
  401a7d:	je     0x401bc0
  401a83:	lea    rdx,[rsp+0x140]
  401a8b:	mov    r8d,0xa
  401a91:	mov    rcx,rax
  401a94:	call   0x408118
  401a99:	mov    edi,eax
  401a9b:	mov    DWORD PTR [rsp+0x58],eax
  401a9f:	mov    rax,QWORD PTR [rsp+0x140]
  401aa7:	cmp    edi,0x1
  401aaa:	setle  BYTE PTR [rsp+0x5f]
  401aaf:	cmp    BYTE PTR [rax],0x2c
  401ab2:	jne    0x401c1a
  401ab8:	lea    rsi,[rax+0x1]
  401abc:	mov    QWORD PTR [rsp+0x140],rsi
  401ac4:	cmp    BYTE PTR [rax+0x1],0x2c
  401ac8:	je     0x401ba5
  401ace:	lea    rdx,[rsp+0x140]
  401ad6:	mov    rcx,rsi
  401ad9:	mov    r8d,0xa
  401adf:	call   0x408118
  401ae4:	mov    rsi,QWORD PTR [rsp+0x140]
  401aec:	cmp    eax,0x1
  401aef:	mov    DWORD PTR [rsp+0x54],eax
  401af3:	setle  BYTE PTR [rsp+0x5e]
  401af8:	xor    edi,edi
  401afa:	test   rsi,rsi
  401afd:	lea    rdx,[rip+0x9c62]        # 0x40b766
  401b04:	je     0x4016a0
  401b0a:	jmp    0x40168e
  401b0f:	nop
  401b10:	mov    eax,0x67
  401b15:	lea    rsi,[rsp+0x80]
  401b1d:	mov    DWORD PTR [rsp+0x80],0x35312e25
  401b28:	mov    WORD PTR [rsp+0x84],ax
  401b30:	call   QWORD PTR [rip+0xf9aa]        # 0x4114e0
  401b36:	lea    rdx,[rax+0x30]
  401b3a:	mov    r8,rsi
  401b3d:	mov    rcx,rbx
  401b40:	call   0x401c30
  401b45:	lea    r9,[rip+0x9c14]        # 0x40b760
  401b4c:	jmp    0x4018a0
  401b51:	mov    r9d,DWORD PTR [rsp+0x54]
  401b56:	mov    r8d,DWORD PTR [rsp+0x58]
  401b5b:	lea    rdx,[rip+0x9c66]        # 0x40b7c8
  401b62:	mov    ecx,0x10
  401b67:	call   0x401f48
  401b6c:	jmp    0x40178c
  401b71:	mov    r13d,0xffffffff
  401b77:	jmp    0x401a6d
  401b7c:	nop    DWORD PTR [rax+0x0]
  401b80:	lea    rsi,[rsp+0x80]
  401b88:	mov    r8d,0x1
  401b8e:	lea    rdx,[rip+0x9cad]        # 0x40b842
  401b95:	sub    r8d,r13d
  401b98:	mov    rcx,rsi
  401b9b:	call   0x408150
  401ba0:	jmp    0x401884
  401ba5:	mov    BYTE PTR [rsp+0x5e],0x0
  401baa:	mov    DWORD PTR [rsp+0x54],0xf
  401bb2:	jmp    0x401af8
  401bb7:	nop    WORD PTR [rax+rax*1+0x0]
  401bc0:	mov    BYTE PTR [rsp+0x5f],0x0
  401bc5:	mov    DWORD PTR [rsp+0x58],0xf
  401bcd:	jmp    0x401ab8
  401bd2:	call   QWORD PTR [rip+0xf940]        # 0x411518
  401bd8:	mov    ecx,DWORD PTR [rax]
  401bda:	call   0x401ed0
  401bdf:	lea    rdx,[rip+0x9c12]        # 0x40b7f8
  401be6:	mov    r8,rax
  401be9:	mov    ecx,0x10
  401bee:	call   0x401f48
  401bf3:	jmp    0x401807
  401bf8:	mov    rsi,rcx
  401bfb:	mov    BYTE PTR [rsp+0x5f],0x0
  401c00:	mov    BYTE PTR [rsp+0x5e],0x0
  401c05:	mov    DWORD PTR [rsp+0x58],0xf
  401c0d:	mov    DWORD PTR [rsp+0x54],0xf
  401c15:	jmp    0x40168e
  401c1a:	mov    rsi,rax
  401c1d:	mov    BYTE PTR [rsp+0x5e],0x0
  401c22:	mov    DWORD PTR [rsp+0x54],0xf
  401c2a:	jmp    0x40168e
  401c2f:	nop
  401c30:	push   r15
  401c32:	push   r14
  401c34:	push   r13
  401c36:	push   r12
  401c38:	push   rbp
  401c39:	push   rdi
  401c3a:	push   rsi
  401c3b:	push   rbx
  401c3c:	sub    rsp,0x68
  401c40:	lea    rbp,[rsp+0x40]
  401c45:	mov    rbx,rcx
  401c48:	mov    rdi,rdx
  401c4b:	mov    rdx,r8
  401c4e:	mov    r8d,0x11
  401c54:	mov    BYTE PTR [rsp+0x40],0x20
  401c59:	lea    rcx,[rbp+0x1]
  401c5d:	call   0x408128
  401c62:	mov    rdx,rbp
  401c65:	mov    ecx,DWORD PTR [rdx]
  401c67:	add    rdx,0x4
  401c6b:	lea    eax,[rcx-0x1010101]
  401c71:	not    ecx
  401c73:	and    eax,ecx
  401c75:	and    eax,0x80808080
  401c7a:	je     0x401c65
  401c7c:	mov    ecx,eax
  401c7e:	mov    r8d,DWORD PTR [rbx+0x30]
  401c82:	mov    r10d,0x6e25
  401c88:	shr    ecx,0x10
  401c8b:	test   eax,0x8080
  401c90:	lea    r14,[rsp+0x3c]
  401c95:	cmove  eax,ecx
  401c98:	lea    rcx,[rdx+0x2]
  401c9c:	lea    r13,[rsp+0x38]
  401ca1:	cmove  rdx,rcx
  401ca5:	add    al,al
  401ca7:	mov    rcx,rdi
  401caa:	sbb    rdx,0x3
  401cae:	add    r8d,0x1
  401cb2:	xor    esi,esi
  401cb4:	mov    WORD PTR [rdx],r10w
  401cb8:	mov    BYTE PTR [rdx+0x2],0x0
  401cbc:	lea    rdx,[rip+0x9bed]        # 0x40b8b0
  401cc3:	xor    r12d,r12d
  401cc6:	call   0x4081b8
  401ccb:	mov    r11d,DWORD PTR [rbx+0x30]
  401ccf:	test   r11d,r11d
  401cd2:	jns    0x401df0
  401cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ce0:	mov    r8d,DWORD PTR [rbx+0x34]
  401ce4:	lea    rdx,[rip+0x9bcc]        # 0x40b8b7
  401ceb:	mov    rcx,rdi
  401cee:	xor    r15d,r15d
  401cf1:	xor    esi,esi
  401cf3:	lea    r13,[rsp+0x3c]
  401cf8:	lea    r12,[rsp+0x38]
  401cfd:	add    r8d,0x1
  401d01:	call   0x4081b8
  401d06:	mov    r9d,DWORD PTR [rbx+0x34]
  401d0a:	test   r9d,r9d
  401d0d:	jns    0x401d24
  401d0f:	jmp    0x401ead
  401d14:	add    esi,0x1
  401d17:	add    r15,0x10
  401d1b:	cmp    DWORD PTR [rbx+0x34],esi
  401d1e:	jl     0x401ead
  401d24:	mov    rax,QWORD PTR [rbx+0x28]
  401d28:	mov    r9d,DWORD PTR [rax+r15*1]
  401d2c:	test   r9d,r9d
  401d2f:	je     0x401d14
  401d31:	lea    rdx,[rip+0x9b86]        # 0x40b8be
  401d38:	mov    rcx,rdi
  401d3b:	mov    QWORD PTR [rsp+0x20],r13
  401d40:	mov    r8d,esi
  401d43:	xor    r14d,r14d
  401d46:	call   0x4081b8
  401d4b:	mov    rdx,QWORD PTR [rbx+0x28]
  401d4f:	xor    eax,eax
  401d51:	mov    DWORD PTR [rsp+0x38],0x0
  401d59:	mov    ecx,DWORD PTR [rdx+r15*1]
  401d5d:	test   ecx,ecx
  401d5f:	jg     0x401dac
  401d61:	jmp    0x401e90
  401d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d70:	mov    rax,QWORD PTR [rdx+r15*1+0x8]
  401d75:	mov    r9,r12
  401d78:	mov    rdx,rbp
  401d7b:	mov    rcx,rdi
  401d7e:	movsd  xmm0,QWORD PTR [rax+r14*8]
  401d84:	movapd xmm2,xmm0
  401d88:	movq   r8,xmm0
  401d8d:	call   0x4081b8
  401d92:	mov    rdx,QWORD PTR [rbx+0x28]
  401d96:	lea    eax,[r14+0x1]
  401d9a:	add    r14,0x1
  401d9e:	cmp    DWORD PTR [rdx+r15*1],eax
  401da2:	jle    0x401e90
  401da8:	mov    eax,DWORD PTR [rsp+0x38]
  401dac:	add    eax,DWORD PTR [rsp+0x3c]
  401db0:	cmp    eax,0x3c
  401db3:	mov    DWORD PTR [rsp+0x3c],eax
  401db7:	jle    0x401d70
  401db9:	lea    rdx,[rip+0x9b06]        # 0x40b8c6
  401dc0:	mov    r8,r13
  401dc3:	mov    rcx,rdi
  401dc6:	call   0x4081b8
  401dcb:	mov    rdx,QWORD PTR [rbx+0x28]
  401dcf:	jmp    0x401d70
  401dd1:	mov    rdx,rdi
  401dd4:	mov    ecx,0xa
  401dd9:	call   0x4081b0
  401dde:	add    r12d,0x1
  401de2:	add    rsi,0x10
  401de6:	cmp    DWORD PTR [rbx+0x30],r12d
  401dea:	jl     0x401ce0
  401df0:	mov    rax,QWORD PTR [rbx+0x20]
  401df4:	mov    r9d,DWORD PTR [rax+rsi*1]
  401df8:	test   r9d,r9d
  401dfb:	je     0x401dde
  401dfd:	lea    rdx,[rip+0x9aba]        # 0x40b8be
  401e04:	mov    r8d,r12d
  401e07:	mov    QWORD PTR [rsp+0x20],r14
  401e0c:	mov    rcx,rdi
  401e0f:	xor    r15d,r15d
  401e12:	call   0x4081b8
  401e17:	mov    rdx,QWORD PTR [rbx+0x20]
  401e1b:	xor    eax,eax
  401e1d:	mov    DWORD PTR [rsp+0x38],0x0
  401e25:	mov    r8d,DWORD PTR [rdx+rsi*1]
  401e29:	test   r8d,r8d
  401e2c:	jg     0x401e6b
  401e2e:	jmp    0x401dd1
  401e30:	mov    rax,QWORD PTR [rdx+rsi*1+0x8]
  401e35:	mov    r9,r13
  401e38:	mov    rdx,rbp
  401e3b:	mov    rcx,rdi
  401e3e:	movsd  xmm0,QWORD PTR [rax+r15*8]
  401e44:	movapd xmm2,xmm0
  401e48:	movq   r8,xmm0
  401e4d:	call   0x4081b8
  401e52:	mov    rdx,QWORD PTR [rbx+0x20]
  401e56:	lea    eax,[r15+0x1]
  401e5a:	add    r15,0x1
  401e5e:	cmp    DWORD PTR [rdx+rsi*1],eax
  401e61:	jle    0x401dd1
  401e67:	mov    eax,DWORD PTR [rsp+0x38]
  401e6b:	add    eax,DWORD PTR [rsp+0x3c]
  401e6f:	cmp    eax,0x3c
  401e72:	mov    DWORD PTR [rsp+0x3c],eax
  401e76:	jle    0x401e30
  401e78:	lea    rdx,[rip+0x9a47]        # 0x40b8c6
  401e7f:	mov    r8,r14
  401e82:	mov    rcx,rdi
  401e85:	call   0x4081b8
  401e8a:	mov    rdx,QWORD PTR [rbx+0x20]
  401e8e:	jmp    0x401e30
  401e90:	mov    rdx,rdi
  401e93:	mov    ecx,0xa
  401e98:	add    esi,0x1
  401e9b:	call   0x4081b0
  401ea0:	add    r15,0x10
  401ea4:	cmp    DWORD PTR [rbx+0x34],esi
  401ea7:	jge    0x401d24
  401ead:	add    rsp,0x68
  401eb1:	pop    rbx
  401eb2:	pop    rsi
  401eb3:	pop    rdi
  401eb4:	pop    rbp
  401eb5:	pop    r12
  401eb7:	pop    r13
  401eb9:	pop    r14
  401ebb:	pop    r15
  401ebd:	ret    
  401ebe:	nop
  401ebf:	nop
  401ec0:	jmp    QWORD PTR [rip+0xf52a]        # 0x4113f0
  401ec6:	nop
  401ec7:	nop
  401ec8:	jmp    QWORD PTR [rip+0xf51a]        # 0x4113e8
  401ece:	nop
  401ecf:	nop
  401ed0:	jmp    QWORD PTR [rip+0xf50a]        # 0x4113e0
  401ed6:	nop
  401ed7:	nop
  401ed8:	jmp    QWORD PTR [rip+0xf4fa]        # 0x4113d8
  401ede:	nop
  401edf:	nop
  401ee0:	jmp    QWORD PTR [rip+0xf4ea]        # 0x4113d0
  401ee6:	nop
  401ee7:	nop
  401ee8:	jmp    QWORD PTR [rip+0xf4da]        # 0x4113c8
  401eee:	nop
  401eef:	nop
  401ef0:	jmp    QWORD PTR [rip+0xf4ca]        # 0x4113c0
  401ef6:	nop
  401ef7:	nop
  401ef8:	jmp    QWORD PTR [rip+0xf4ba]        # 0x4113b8
  401efe:	nop
  401eff:	nop
  401f00:	jmp    QWORD PTR [rip+0xf4aa]        # 0x4113b0
  401f06:	nop
  401f07:	nop
  401f08:	jmp    QWORD PTR [rip+0xf49a]        # 0x4113a8
  401f0e:	nop
  401f0f:	nop
  401f10:	jmp    QWORD PTR [rip+0xf48a]        # 0x4113a0
  401f16:	nop
  401f17:	nop
  401f18:	jmp    QWORD PTR [rip+0xf47a]        # 0x411398
  401f1e:	nop
  401f1f:	nop
  401f20:	jmp    QWORD PTR [rip+0xf46a]        # 0x411390
  401f26:	nop
  401f27:	nop
  401f28:	jmp    QWORD PTR [rip+0xf45a]        # 0x411388
  401f2e:	nop
  401f2f:	nop
  401f30:	jmp    QWORD PTR [rip+0xf44a]        # 0x411380
  401f36:	nop
  401f37:	nop
  401f38:	jmp    QWORD PTR [rip+0xf43a]        # 0x411378
  401f3e:	nop
  401f3f:	nop
  401f40:	jmp    QWORD PTR [rip+0xf422]        # 0x411368
  401f46:	nop
  401f47:	nop
  401f48:	jmp    QWORD PTR [rip+0xf40a]        # 0x411358
  401f4e:	nop
  401f4f:	nop
  401f50:	jmp    QWORD PTR [rip+0xf3fa]        # 0x411350
  401f56:	nop
  401f57:	nop
  401f58:	nop    DWORD PTR [rax+rax*1+0x0]
  401f60:	push   rbx
  401f61:	sub    rsp,0x30
  401f65:	mov    rbx,rcx
  401f68:	mov    rcx,QWORD PTR [rip+0xe5f1]        # 0x410560
  401f6f:	call   0x402510
  401f74:	cmp    rax,0xffffffffffffffff
  401f78:	mov    QWORD PTR [rsp+0x20],rax
  401f7d:	je     0x401ff5
  401f7f:	mov    ecx,0x8
  401f84:	call   0x408210
  401f89:	mov    rcx,QWORD PTR [rip+0xe5d0]        # 0x410560
  401f90:	call   0x402510
  401f95:	mov    rcx,QWORD PTR [rip+0xe5cc]        # 0x410568
  401f9c:	mov    QWORD PTR [rsp+0x20],rax
  401fa1:	call   0x402510
  401fa6:	lea    rdx,[rsp+0x20]
  401fab:	lea    r8,[rsp+0x28]
  401fb0:	mov    rcx,rbx
  401fb3:	mov    QWORD PTR [rsp+0x28],rax
  401fb8:	call   0x408260
  401fbd:	mov    rcx,QWORD PTR [rsp+0x20]
  401fc2:	mov    rbx,rax
  401fc5:	call   0x402520
  401fca:	mov    rcx,QWORD PTR [rsp+0x28]
  401fcf:	mov    QWORD PTR [rip+0xe58a],rax        # 0x410560
  401fd6:	call   0x402520
  401fdb:	mov    ecx,0x8
  401fe0:	mov    QWORD PTR [rip+0xe581],rax        # 0x410568
  401fe7:	call   0x408200
  401fec:	mov    rax,rbx
  401fef:	add    rsp,0x30
  401ff3:	pop    rbx
  401ff4:	ret    
  401ff5:	mov    rax,QWORD PTR [rip+0xa0d4]        # 0x40c0d0
  401ffc:	mov    rcx,rbx
  401fff:	call   QWORD PTR [rax]
  402001:	add    rsp,0x30
  402005:	pop    rbx
  402006:	ret    
  402007:	nop    WORD PTR [rax+rax*1+0x0]
  402010:	sub    rsp,0x28
  402014:	call   0x401f60
  402019:	test   rax,rax
  40201c:	sete   al
  40201f:	movzx  eax,al
  402022:	neg    eax
  402024:	add    rsp,0x28
  402028:	ret    
  402029:	nop
  40202a:	nop
  40202b:	nop
  40202c:	nop
  40202d:	nop
  40202e:	nop
  40202f:	nop
  402030:	sub    rsp,0x28
  402034:	mov    rax,QWORD PTR [rip+0x7fe5]        # 0x40a020
  40203b:	mov    rax,QWORD PTR [rax]
  40203e:	test   rax,rax
  402041:	je     0x402060
  402043:	call   rax
  402045:	mov    rax,QWORD PTR [rip+0x7fd4]        # 0x40a020
  40204c:	lea    rdx,[rax+0x8]
  402050:	mov    rax,QWORD PTR [rax+0x8]
  402054:	mov    QWORD PTR [rip+0x7fc5],rdx        # 0x40a020
  40205b:	test   rax,rax
  40205e:	jne    0x402043
  402060:	add    rsp,0x28
  402064:	ret    
  402065:	nop
  402066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402070:	push   rsi
  402071:	push   rbx
  402072:	sub    rsp,0x28
  402076:	mov    rsi,QWORD PTR [rip+0x9fb3]        # 0x40c030
  40207d:	mov    rax,QWORD PTR [rsi]
  402080:	cmp    eax,0xffffffff
  402083:	mov    ebx,eax
  402085:	je     0x4020b0
  402087:	test   ebx,ebx
  402089:	je     0x40209a
  40208b:	nop    DWORD PTR [rax+rax*1+0x0]
  402090:	mov    eax,ebx
  402092:	call   QWORD PTR [rsi+rax*8]
  402095:	sub    ebx,0x1
  402098:	jne    0x402090
  40209a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x402030
  4020a1:	add    rsp,0x28
  4020a5:	pop    rbx
  4020a6:	pop    rsi
  4020a7:	jmp    0x402010
  4020ac:	nop    DWORD PTR [rax+0x0]
  4020b0:	xor    ebx,ebx
  4020b2:	jmp    0x4020b6
  4020b4:	mov    ebx,eax
  4020b6:	lea    edx,[rbx+0x1]
  4020b9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4020be:	mov    rax,rdx
  4020c1:	jne    0x4020b4
  4020c3:	jmp    0x402087
  4020c5:	nop
  4020c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020d0:	mov    eax,DWORD PTR [rip+0xd06a]        # 0x40f140
  4020d6:	test   eax,eax
  4020d8:	je     0x4020e0
  4020da:	repz ret 
  4020dc:	nop    DWORD PTR [rax+0x0]
  4020e0:	mov    DWORD PTR [rip+0xd056],0x1        # 0x40f140
  4020ea:	jmp    0x402070
  4020ec:	nop
  4020ed:	nop
  4020ee:	nop
  4020ef:	nop
  4020f0:	mov    rax,QWORD PTR [rip+0xf3f1]        # 0x4114e8
  4020f7:	rex.W jmp rax
  4020fa:	nop
  4020fb:	nop
  4020fc:	nop
  4020fd:	nop
  4020fe:	nop
  4020ff:	nop
  402100:	xor    eax,eax
  402102:	ret    
  402103:	nop
  402104:	nop
  402105:	nop
  402106:	nop
  402107:	nop
  402108:	nop
  402109:	nop
  40210a:	nop
  40210b:	nop
  40210c:	nop
  40210d:	nop
  40210e:	nop
  40210f:	nop
  402110:	push   r12
  402112:	push   rbp
  402113:	push   rdi
  402114:	push   rsi
  402115:	push   rbx
  402116:	sub    rsp,0x40
  40211a:	mov    rbx,QWORD PTR [rip+0x7f8f]        # 0x40a0b0
  402121:	movabs rax,0x2b992ddfa232
  40212b:	mov    QWORD PTR [rsp+0x20],0x0
  402134:	cmp    rbx,rax
  402137:	je     0x402150
  402139:	not    rbx
  40213c:	mov    QWORD PTR [rip+0x7f7d],rbx        # 0x40a0c0
  402143:	add    rsp,0x40
  402147:	pop    rbx
  402148:	pop    rsi
  402149:	pop    rdi
  40214a:	pop    rbp
  40214b:	pop    r12
  40214d:	ret    
  40214e:	xchg   ax,ax
  402150:	lea    rcx,[rsp+0x20]
  402155:	call   QWORD PTR [rip+0xf2dd]        # 0x411438
  40215b:	mov    r12,QWORD PTR [rsp+0x20]
  402160:	call   QWORD PTR [rip+0xf2b2]        # 0x411418
  402166:	mov    ebp,eax
  402168:	call   QWORD PTR [rip+0xf2b2]        # 0x411420
  40216e:	mov    edi,eax
  402170:	call   QWORD PTR [rip+0xf2ca]        # 0x411440
  402176:	lea    rcx,[rsp+0x30]
  40217b:	mov    esi,eax
  40217d:	call   QWORD PTR [rip+0xf2d5]        # 0x411458
  402183:	xor    r12,QWORD PTR [rsp+0x30]
  402188:	mov    edx,edi
  40218a:	movabs rax,0xffffffffffff
  402194:	xor    rbp,r12
  402197:	mov    rdi,rbp
  40219a:	xor    rdi,rdx
  40219d:	mov    edx,esi
  40219f:	xor    rdi,rdx
  4021a2:	mov    rsi,rdi
  4021a5:	and    rsi,rax
  4021a8:	cmp    rsi,rbx
  4021ab:	je     0x4021d0
  4021ad:	mov    rax,rsi
  4021b0:	not    rax
  4021b3:	mov    QWORD PTR [rip+0x7ef6],rsi        # 0x40a0b0
  4021ba:	mov    QWORD PTR [rip+0x7eff],rax        # 0x40a0c0
  4021c1:	add    rsp,0x40
  4021c5:	pop    rbx
  4021c6:	pop    rsi
  4021c7:	pop    rdi
  4021c8:	pop    rbp
  4021c9:	pop    r12
  4021cb:	ret    
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	movabs rax,0xffffd466d2205dcc
  4021da:	movabs rsi,0x2b992ddfa233
  4021e4:	jmp    0x4021b3
  4021e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021f0:	push   rbp
  4021f1:	push   rsi
  4021f2:	push   rbx
  4021f3:	mov    rbp,rsp
  4021f6:	sub    rsp,0x70
  4021fa:	mov    rsi,rcx
  4021fd:	lea    rcx,[rip+0xcf7c]        # 0x40f180
  402204:	call   QWORD PTR [rip+0xf25e]        # 0x411468
  40220a:	mov    rbx,QWORD PTR [rip+0xd067]        # 0x40f278
  402211:	xor    r8d,r8d
  402214:	lea    rdx,[rbp-0x28]
  402218:	mov    rcx,rbx
  40221b:	call   QWORD PTR [rip+0xf24f]        # 0x411470
  402221:	test   rax,rax
  402224:	mov    r9,rax
  402227:	je     0x4022d0
  40222d:	lea    rax,[rbp-0x20]
  402231:	mov    QWORD PTR [rsp+0x38],0x0
  40223a:	mov    r8,rbx
  40223d:	mov    rdx,QWORD PTR [rbp-0x28]
  402241:	xor    ecx,ecx
  402243:	mov    QWORD PTR [rsp+0x30],rax
  402248:	lea    rax,[rbp-0x18]
  40224c:	mov    QWORD PTR [rsp+0x28],rax
  402251:	lea    rax,[rip+0xcf28]        # 0x40f180
  402258:	mov    QWORD PTR [rsp+0x20],rax
  40225d:	call   QWORD PTR [rip+0xf215]        # 0x411478
  402263:	mov    rax,QWORD PTR [rip+0xd00e]        # 0x40f278
  40226a:	xor    ecx,ecx
  40226c:	mov    QWORD PTR [rip+0xcf8d],rsi        # 0x40f200
  402273:	mov    DWORD PTR [rip+0xd403],0xc0000409        # 0x40f680
  40227d:	mov    DWORD PTR [rip+0xd3fd],0x1        # 0x40f684
  402287:	mov    QWORD PTR [rip+0xd402],rax        # 0x40f690
  40228e:	mov    rax,QWORD PTR [rip+0x7e1b]        # 0x40a0b0
  402295:	mov    QWORD PTR [rbp-0x10],rax
  402299:	mov    rax,QWORD PTR [rip+0x7e20]        # 0x40a0c0
  4022a0:	mov    QWORD PTR [rbp-0x8],rax
  4022a4:	call   QWORD PTR [rip+0xf1d6]        # 0x411480
  4022aa:	lea    rcx,[rip+0x961f]        # 0x40b8d0
  4022b1:	call   QWORD PTR [rip+0xf1e9]        # 0x4114a0
  4022b7:	call   QWORD PTR [rip+0xf153]        # 0x411410
  4022bd:	mov    edx,0xc0000409
  4022c2:	mov    rcx,rax
  4022c5:	call   QWORD PTR [rip+0xf1c5]        # 0x411490
  4022cb:	call   0x4081f8
  4022d0:	mov    rax,QWORD PTR [rbp+0x18]
  4022d4:	mov    QWORD PTR [rip+0xcf9d],rax        # 0x40f278
  4022db:	lea    rax,[rbp+0x8]
  4022df:	mov    QWORD PTR [rip+0xcf32],rax        # 0x40f218
  4022e6:	jmp    0x402263
  4022eb:	nop
  4022ec:	nop
  4022ed:	nop
  4022ee:	nop
  4022ef:	nop
  4022f0:	sub    rsp,0x28
  4022f4:	test   edx,edx
  4022f6:	je     0x402310
  4022f8:	cmp    edx,0x3
  4022fb:	je     0x402310
  4022fd:	mov    eax,0x1
  402302:	add    rsp,0x28
  402306:	ret    
  402307:	nop    WORD PTR [rax+rax*1+0x0]
  402310:	call   0x403000
  402315:	mov    eax,0x1
  40231a:	add    rsp,0x28
  40231e:	ret    
  40231f:	nop
  402320:	push   rsi
  402321:	push   rbx
  402322:	sub    rsp,0x28
  402326:	mov    rax,QWORD PTR [rip+0x9ce3]        # 0x40c010
  40232d:	cmp    DWORD PTR [rax],0x2
  402330:	je     0x402338
  402332:	mov    DWORD PTR [rax],0x2
  402338:	cmp    edx,0x2
  40233b:	je     0x402350
  40233d:	cmp    edx,0x1
  402340:	je     0x402382
  402342:	mov    eax,0x1
  402347:	add    rsp,0x28
  40234b:	pop    rbx
  40234c:	pop    rsi
  40234d:	ret    
  40234e:	xchg   ax,ax
  402350:	lea    rbx,[rip+0xfd09]        # 0x412060
  402357:	lea    rsi,[rip+0xfd02]        # 0x412060
  40235e:	cmp    rbx,rsi
  402361:	je     0x402342
  402363:	mov    rax,QWORD PTR [rbx]
  402366:	test   rax,rax
  402369:	je     0x40236d
  40236b:	call   rax
  40236d:	add    rbx,0x8
  402371:	cmp    rbx,rsi
  402374:	jne    0x402363
  402376:	mov    eax,0x1
  40237b:	add    rsp,0x28
  40237f:	pop    rbx
  402380:	pop    rsi
  402381:	ret    
  402382:	call   0x403000
  402387:	jmp    0x402342
  402389:	nop    DWORD PTR [rax+0x0]
  402390:	xor    eax,eax
  402392:	ret    
  402393:	nop
  402394:	nop
  402395:	nop
  402396:	nop
  402397:	nop
  402398:	nop
  402399:	nop
  40239a:	nop
  40239b:	nop
  40239c:	nop
  40239d:	nop
  40239e:	nop
  40239f:	nop
  4023a0:	sub    rsp,0x58
  4023a4:	mov    rax,QWORD PTR [rip+0xd3b5]        # 0x40f760
  4023ab:	test   rax,rax
  4023ae:	je     0x4023dc
  4023b0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4023b9:	mov    DWORD PTR [rsp+0x20],ecx
  4023bd:	lea    rcx,[rsp+0x20]
  4023c2:	mov    QWORD PTR [rsp+0x28],rdx
  4023c7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4023cd:	movsd  QWORD PTR [rsp+0x38],xmm3
  4023d3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4023d9:	call   rax
  4023db:	nop
  4023dc:	add    rsp,0x58
  4023e0:	ret    
  4023e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4023e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023f0:	mov    QWORD PTR [rip+0xd369],rcx        # 0x40f760
  4023f7:	jmp    0x408238
  4023fc:	nop    DWORD PTR [rax+0x0]
  402400:	push   rsi
  402401:	push   rbx
  402402:	sub    rsp,0x78
  402406:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40240b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402410:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402416:	cmp    DWORD PTR [rcx],0x6
  402419:	ja     0x4024f0
  40241f:	mov    edx,DWORD PTR [rcx]
  402421:	lea    rax,[rip+0x95ec]        # 0x40ba14
  402428:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40242c:	add    rax,rdx
  40242f:	jmp    rax
  402431:	lea    rbx,[rip+0x94b8]        # 0x40b8f0
  402438:	nop    DWORD PTR [rax+rax*1+0x0]
  402440:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402446:	mov    rsi,QWORD PTR [rcx+0x8]
  40244a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40244f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402454:	call   0x408250
  402459:	movsd  QWORD PTR [rsp+0x30],xmm8
  402460:	lea    rcx,[rax+0x60]
  402464:	lea    rdx,[rip+0x957d]        # 0x40b9e8
  40246b:	movsd  QWORD PTR [rsp+0x28],xmm7
  402471:	mov    r9,rsi
  402474:	mov    r8,rbx
  402477:	movsd  QWORD PTR [rsp+0x20],xmm6
  40247d:	call   0x4081b8
  402482:	nop
  402483:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  402488:	xor    eax,eax
  40248a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40248f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  402495:	add    rsp,0x78
  402499:	pop    rbx
  40249a:	pop    rsi
  40249b:	ret    
  40249c:	nop    DWORD PTR [rax+0x0]
  4024a0:	lea    rbx,[rip+0x9468]        # 0x40b90f
  4024a7:	jmp    0x402440
  4024a9:	nop    DWORD PTR [rax+0x0]
  4024b0:	lea    rbx,[rip+0x9479]        # 0x40b930
  4024b7:	jmp    0x402440
  4024b9:	nop    DWORD PTR [rax+0x0]
  4024c0:	lea    rbx,[rip+0x94d9]        # 0x40b9a0
  4024c7:	jmp    0x402440
  4024cc:	nop    DWORD PTR [rax+0x0]
  4024d0:	lea    rbx,[rip+0x94a1]        # 0x40b978
  4024d7:	jmp    0x402440
  4024dc:	nop    DWORD PTR [rax+0x0]
  4024e0:	lea    rbx,[rip+0x9469]        # 0x40b950
  4024e7:	jmp    0x402440
  4024ec:	nop    DWORD PTR [rax+0x0]
  4024f0:	lea    rbx,[rip+0x94df]        # 0x40b9d6
  4024f7:	jmp    0x402440
  4024fc:	nop
  4024fd:	nop
  4024fe:	nop
  4024ff:	nop
  402500:	fninit 
  402502:	ret    
  402503:	nop
  402504:	nop
  402505:	nop
  402506:	nop
  402507:	nop
  402508:	nop
  402509:	nop
  40250a:	nop
  40250b:	nop
  40250c:	nop
  40250d:	nop
  40250e:	nop
  40250f:	nop
  402510:	mov    rax,rcx
  402513:	ret    
  402514:	xchg   ax,ax
  402516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402520:	mov    rax,rcx
  402523:	ret    
  402524:	nop
  402525:	nop
  402526:	nop
  402527:	nop
  402528:	nop
  402529:	nop
  40252a:	nop
  40252b:	nop
  40252c:	nop
  40252d:	nop
  40252e:	nop
  40252f:	nop
  402530:	push   rsi
  402531:	push   rbx
  402532:	sub    rsp,0x38
  402536:	lea    rax,[rsp+0x58]
  40253b:	mov    rbx,rcx
  40253e:	mov    QWORD PTR [rsp+0x58],rdx
  402543:	mov    QWORD PTR [rsp+0x60],r8
  402548:	mov    QWORD PTR [rsp+0x68],r9
  40254d:	mov    QWORD PTR [rsp+0x28],rax
  402552:	call   0x408250
  402557:	lea    rcx,[rip+0x94d2]        # 0x40ba30
  40255e:	lea    r9,[rax+0x60]
  402562:	mov    r8d,0x1b
  402568:	mov    edx,0x1
  40256d:	call   0x408190
  402572:	mov    rsi,QWORD PTR [rsp+0x28]
  402577:	call   0x408250
  40257c:	lea    rcx,[rax+0x60]
  402580:	mov    rdx,rbx
  402583:	mov    r8,rsi
  402586:	call   0x408110
  40258b:	call   0x4081f8
  402590:	nop
  402591:	nop    DWORD PTR [rax+rax*1+0x0]
  402596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025a0:	push   r13
  4025a2:	push   r12
  4025a4:	push   rbp
  4025a5:	push   rdi
  4025a6:	push   rsi
  4025a7:	push   rbx
  4025a8:	sub    rsp,0x58
  4025ac:	movsxd rbp,DWORD PTR [rip+0xd1d1]        # 0x40f784
  4025b3:	mov    rbx,rcx
  4025b6:	mov    rsi,rdx
  4025b9:	mov    rdi,r8
  4025bc:	test   ebp,ebp
  4025be:	jle    0x4026ba
  4025c4:	mov    rax,QWORD PTR [rip+0xd1bd]        # 0x40f788
  4025cb:	xor    r9d,r9d
  4025ce:	add    rax,0x8
  4025d2:	mov    r10,QWORD PTR [rax]
  4025d5:	cmp    rbx,r10
  4025d8:	jb     0x4025ee
  4025da:	mov    rdx,QWORD PTR [rax+0x8]
  4025de:	mov    r11d,DWORD PTR [rdx+0x8]
  4025e2:	add    r10,r11
  4025e5:	cmp    rbx,r10
  4025e8:	jb     0x4026a0
  4025ee:	add    r9d,0x1
  4025f2:	add    rax,0x18
  4025f6:	cmp    r9d,ebp
  4025f9:	jne    0x4025d2
  4025fb:	mov    rcx,rbx
  4025fe:	call   0x403210
  402603:	test   rax,rax
  402606:	mov    r12,rax
  402609:	je     0x4026f2
  40260f:	lea    rbp,[rbp+rbp*2+0x0]
  402614:	shl    rbp,0x3
  402618:	mov    r13,rbp
  40261b:	add    r13,QWORD PTR [rip+0xd166]        # 0x40f788
  402622:	mov    QWORD PTR [r13+0x10],rax
  402626:	mov    DWORD PTR [r13+0x0],0x0
  40262e:	call   0x403330
  402633:	mov    edx,DWORD PTR [r12+0xc]
  402638:	mov    r8d,0x30
  40263e:	add    rax,rdx
  402641:	lea    rdx,[rsp+0x20]
  402646:	mov    QWORD PTR [r13+0x8],rax
  40264a:	mov    rax,QWORD PTR [rip+0xd137]        # 0x40f788
  402651:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402656:	call   QWORD PTR [rip+0xee54]        # 0x4114b0
  40265c:	test   rax,rax
  40265f:	je     0x4026d5
  402661:	mov    eax,DWORD PTR [rsp+0x44]
  402665:	lea    edx,[rax-0x4]
  402668:	and    edx,0xfffffffb
  40266b:	je     0x402699
  40266d:	sub    eax,0x40
  402670:	and    eax,0xffffffbf
  402673:	je     0x402699
  402675:	mov    r9,rbp
  402678:	add    r9,QWORD PTR [rip+0xd109]        # 0x40f788
  40267f:	mov    r8d,0x40
  402685:	mov    rdx,QWORD PTR [rsp+0x38]
  40268a:	mov    rcx,QWORD PTR [rsp+0x20]
  40268f:	call   QWORD PTR [rip+0xee13]        # 0x4114a8
  402695:	test   eax,eax
  402697:	je     0x4026c1
  402699:	add    DWORD PTR [rip+0xd0e4],0x1        # 0x40f784
  4026a0:	mov    r8,rdi
  4026a3:	mov    rdx,rsi
  4026a6:	mov    rcx,rbx
  4026a9:	add    rsp,0x58
  4026ad:	pop    rbx
  4026ae:	pop    rsi
  4026af:	pop    rdi
  4026b0:	pop    rbp
  4026b1:	pop    r12
  4026b3:	pop    r13
  4026b5:	jmp    0x408178
  4026ba:	xor    ebp,ebp
  4026bc:	jmp    0x4025fb
  4026c1:	call   QWORD PTR [rip+0xed61]        # 0x411428
  4026c7:	lea    rcx,[rip+0x93da]        # 0x40baa8
  4026ce:	mov    edx,eax
  4026d0:	call   0x402530
  4026d5:	mov    rax,QWORD PTR [rip+0xd0ac]        # 0x40f788
  4026dc:	mov    edx,DWORD PTR [r12+0x8]
  4026e1:	lea    rcx,[rip+0x9388]        # 0x40ba70
  4026e8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  4026ed:	call   0x402530
  4026f2:	lea    rcx,[rip+0x9357]        # 0x40ba50
  4026f9:	mov    rdx,rbx
  4026fc:	call   0x402530
  402701:	nop
  402702:	nop    DWORD PTR [rax+0x0]
  402706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402710:	push   rbp
  402711:	push   r14
  402713:	push   r13
  402715:	push   r12
  402717:	push   rdi
  402718:	push   rsi
  402719:	push   rbx
  40271a:	mov    rbp,rsp
  40271d:	sub    rsp,0x60
  402721:	mov    ebx,DWORD PTR [rip+0xd059]        # 0x40f780
  402727:	test   ebx,ebx
  402729:	je     0x402740
  40272b:	mov    rsp,rbp
  40272e:	pop    rbx
  40272f:	pop    rsi
  402730:	pop    rdi
  402731:	pop    r12
  402733:	pop    r13
  402735:	pop    r14
  402737:	pop    rbp
  402738:	ret    
  402739:	nop    DWORD PTR [rax+0x0]
  402740:	mov    DWORD PTR [rip+0xd036],0x1        # 0x40f780
  40274a:	call   0x403260
  40274f:	cdqe   
  402751:	lea    rax,[rax+rax*2]
  402755:	lea    rax,[rax*8+0x1e]
  40275d:	and    rax,0xfffffffffffffff0
  402761:	call   0x403480
  402766:	mov    rsi,QWORD PTR [rip+0x98d3]        # 0x40c040
  40276d:	mov    rbx,QWORD PTR [rip+0x98dc]        # 0x40c050
  402774:	sub    rsp,rax
  402777:	mov    DWORD PTR [rip+0xd003],0x0        # 0x40f784
  402781:	lea    rax,[rsp+0x20]
  402786:	mov    QWORD PTR [rip+0xcffb],rax        # 0x40f788
  40278d:	mov    rax,rsi
  402790:	sub    rax,rbx
  402793:	cmp    rax,0x7
  402797:	jle    0x40272b
  402799:	cmp    rax,0xb
  40279d:	jle    0x4027c5
  40279f:	mov    r11d,DWORD PTR [rbx]
  4027a2:	test   r11d,r11d
  4027a5:	jne    0x4028f0
  4027ab:	mov    r10d,DWORD PTR [rbx+0x4]
  4027af:	test   r10d,r10d
  4027b2:	jne    0x4028f0
  4027b8:	mov    r9d,DWORD PTR [rbx+0x8]
  4027bc:	test   r9d,r9d
  4027bf:	jne    0x4027dc
  4027c1:	add    rbx,0xc
  4027c5:	mov    r8d,DWORD PTR [rbx]
  4027c8:	test   r8d,r8d
  4027cb:	jne    0x4028f0
  4027d1:	mov    ecx,DWORD PTR [rbx+0x4]
  4027d4:	test   ecx,ecx
  4027d6:	jne    0x4028f0
  4027dc:	mov    edx,DWORD PTR [rbx+0x8]
  4027df:	cmp    edx,0x1
  4027e2:	jne    0x4029fc
  4027e8:	add    rbx,0xc
  4027ec:	cmp    rbx,rsi
  4027ef:	jae    0x40272b
  4027f5:	mov    r12,QWORD PTR [rip+0x9894]        # 0x40c090
  4027fc:	lea    r13,[rbp-0x30]
  402800:	movabs r14,0xffffffff00000000
  40280a:	mov    ecx,DWORD PTR [rbx+0x4]
  40280d:	mov    eax,DWORD PTR [rbx]
  40280f:	movzx  edx,BYTE PTR [rbx+0x8]
  402813:	add    rax,r12
  402816:	add    rcx,r12
  402819:	cmp    edx,0x10
  40281c:	mov    r8,QWORD PTR [rax]
  40281f:	je     0x402966
  402825:	jbe    0x40292d
  40282b:	cmp    edx,0x20
  40282e:	je     0x4029af
  402834:	cmp    edx,0x40
  402837:	jne    0x40299b
  40283d:	sub    r8,rax
  402840:	mov    rdx,r13
  402843:	mov    rdi,r13
  402846:	mov    rax,r8
  402849:	add    rax,QWORD PTR [rcx]
  40284c:	mov    r8d,0x8
  402852:	mov    QWORD PTR [rbp-0x30],rax
  402856:	call   0x4025a0
  40285b:	add    rbx,0xc
  40285f:	cmp    rbx,rsi
  402862:	jb     0x40280a
  402864:	mov    eax,DWORD PTR [rip+0xcf1a]        # 0x40f784
  40286a:	xor    ebx,ebx
  40286c:	xor    esi,esi
  40286e:	test   eax,eax
  402870:	jle    0x40272b
  402876:	mov    r14,QWORD PTR [rip+0xec33]        # 0x4114b0
  40287d:	lea    r13,[rbp-0x34]
  402881:	mov    r12,QWORD PTR [rip+0xec20]        # 0x4114a8
  402888:	jmp    0x4028a3
  40288a:	nop    WORD PTR [rax+rax*1+0x0]
  402890:	add    esi,0x1
  402893:	add    rbx,0x18
  402897:	cmp    esi,DWORD PTR [rip+0xcee7]        # 0x40f784
  40289d:	jge    0x40272b
  4028a3:	mov    rax,rbx
  4028a6:	add    rax,QWORD PTR [rip+0xcedb]        # 0x40f788
  4028ad:	mov    edx,DWORD PTR [rax]
  4028af:	test   edx,edx
  4028b1:	je     0x402890
  4028b3:	mov    rcx,QWORD PTR [rax+0x8]
  4028b7:	mov    r8d,0x30
  4028bd:	mov    rdx,rdi
  4028c0:	call   r14
  4028c3:	test   rax,rax
  4028c6:	je     0x4029de
  4028cc:	mov    rax,QWORD PTR [rip+0xceb5]        # 0x40f788
  4028d3:	mov    r9,r13
  4028d6:	mov    rdx,QWORD PTR [rbp-0x18]
  4028da:	mov    rcx,QWORD PTR [rbp-0x30]
  4028de:	mov    r8d,DWORD PTR [rax+rbx*1]
  4028e2:	call   r12
  4028e5:	jmp    0x402890
  4028e7:	nop    WORD PTR [rax+rax*1+0x0]
  4028f0:	cmp    rbx,rsi
  4028f3:	jae    0x40272b
  4028f9:	mov    r12,QWORD PTR [rip+0x9790]        # 0x40c090
  402900:	lea    rdi,[rbp-0x30]
  402904:	mov    ecx,DWORD PTR [rbx+0x4]
  402907:	mov    eax,DWORD PTR [rbx]
  402909:	mov    r8d,0x4
  40290f:	mov    rdx,rdi
  402912:	add    rbx,0x8
  402916:	add    rcx,r12
  402919:	add    eax,DWORD PTR [rcx]
  40291b:	mov    DWORD PTR [rbp-0x30],eax
  40291e:	call   0x4025a0
  402923:	cmp    rbx,rsi
  402926:	jb     0x402904
  402928:	jmp    0x402864
  40292d:	cmp    edx,0x8
  402930:	jne    0x40299b
  402932:	movzx  edx,BYTE PTR [rcx]
  402935:	mov    rdi,r13
  402938:	mov    r10,rdx
  40293b:	or     r10,0xffffffffffffff00
  402942:	test   dl,dl
  402944:	cmovs  rdx,r10
  402948:	sub    rdx,rax
  40294b:	lea    rax,[r8+rdx*1]
  40294f:	mov    r8d,0x1
  402955:	mov    rdx,r13
  402958:	mov    QWORD PTR [rbp-0x30],rax
  40295c:	call   0x4025a0
  402961:	jmp    0x40285b
  402966:	movzx  edx,WORD PTR [rcx]
  402969:	mov    rdi,r13
  40296c:	mov    r10,rdx
  40296f:	or     r10,0xffffffffffff0000
  402976:	test   dx,dx
  402979:	cmovs  rdx,r10
  40297d:	sub    rdx,rax
  402980:	lea    rax,[r8+rdx*1]
  402984:	mov    r8d,0x2
  40298a:	mov    rdx,r13
  40298d:	mov    QWORD PTR [rbp-0x30],rax
  402991:	call   0x4025a0
  402996:	jmp    0x40285b
  40299b:	lea    rcx,[rip+0x9166]        # 0x40bb08
  4029a2:	mov    QWORD PTR [rbp-0x30],0x0
  4029aa:	call   0x402530
  4029af:	mov    edx,DWORD PTR [rcx]
  4029b1:	mov    rdi,r13
  4029b4:	mov    r10,rdx
  4029b7:	or     r10,r14
  4029ba:	test   edx,edx
  4029bc:	cmovs  rdx,r10
  4029c0:	sub    rdx,rax
  4029c3:	lea    rax,[r8+rdx*1]
  4029c7:	mov    r8d,0x4
  4029cd:	mov    rdx,r13
  4029d0:	mov    QWORD PTR [rbp-0x30],rax
  4029d4:	call   0x4025a0
  4029d9:	jmp    0x40285b
  4029de:	add    rbx,QWORD PTR [rip+0xcda3]        # 0x40f788
  4029e5:	lea    rcx,[rip+0x9084]        # 0x40ba70
  4029ec:	mov    rax,QWORD PTR [rbx+0x10]
  4029f0:	mov    r8,QWORD PTR [rbx+0x8]
  4029f4:	mov    edx,DWORD PTR [rax+0x8]
  4029f7:	call   0x402530
  4029fc:	lea    rcx,[rip+0x90cd]        # 0x40bad0
  402a03:	call   0x402530
  402a08:	nop
  402a09:	nop
  402a0a:	nop
  402a0b:	nop
  402a0c:	nop
  402a0d:	nop
  402a0e:	nop
  402a0f:	nop
  402a10:	sub    rsp,0x28
  402a14:	mov    eax,DWORD PTR [rcx]
  402a16:	cmp    eax,0xc0000091
  402a1b:	ja     0x402a80
  402a1d:	cmp    eax,0xc000008d
  402a22:	jae    0x402a9f
  402a24:	cmp    eax,0xc0000008
  402a29:	je     0x402b40
  402a2f:	ja     0x402b10
  402a35:	cmp    eax,0x80000002
  402a3a:	je     0x402b40
  402a40:	cmp    eax,0xc0000005
  402a45:	jne    0x402b1e
  402a4b:	xor    edx,edx
  402a4d:	mov    ecx,0xb
  402a52:	call   0x408158
  402a57:	cmp    rax,0x1
  402a5b:	je     0x402ba0
  402a61:	test   rax,rax
  402a64:	je     0x402b80
  402a6a:	mov    ecx,0xb
  402a6f:	call   rax
  402a71:	xor    eax,eax
  402a73:	add    rsp,0x28
  402a77:	ret    
  402a78:	nop    DWORD PTR [rax+rax*1+0x0]
  402a80:	cmp    eax,0xc0000094
  402a85:	je     0x402b50
  402a8b:	ja     0x402ad0
  402a8d:	cmp    eax,0xc0000092
  402a92:	je     0x402b40
  402a98:	cmp    eax,0xc0000093
  402a9d:	jne    0x402b1e
  402a9f:	xor    edx,edx
  402aa1:	mov    ecx,0x8
  402aa6:	call   0x408158
  402aab:	cmp    rax,0x1
  402aaf:	mov    rdx,rax
  402ab2:	je     0x402b28
  402ab4:	test   rdx,rdx
  402ab7:	mov    eax,0x1
  402abc:	je     0x402a73
  402abe:	mov    ecx,0x8
  402ac3:	call   rdx
  402ac5:	xor    eax,eax
  402ac7:	add    rsp,0x28
  402acb:	ret    
  402acc:	nop    DWORD PTR [rax+0x0]
  402ad0:	cmp    eax,0xc0000095
  402ad5:	je     0x402b40
  402ad7:	cmp    eax,0xc0000096
  402adc:	jne    0x402b1e
  402ade:	xor    edx,edx
  402ae0:	mov    ecx,0x4
  402ae5:	call   0x408158
  402aea:	cmp    rax,0x1
  402aee:	je     0x402b8a
  402af4:	test   rax,rax
  402af7:	je     0x402b80
  402afd:	mov    ecx,0x4
  402b02:	call   rax
  402b04:	xor    eax,eax
  402b06:	jmp    0x402a73
  402b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b10:	cmp    eax,0xc000001d
  402b15:	je     0x402ade
  402b17:	cmp    eax,0xc000008c
  402b1c:	je     0x402b40
  402b1e:	mov    eax,0x1
  402b23:	add    rsp,0x28
  402b27:	ret    
  402b28:	mov    edx,0x1
  402b2d:	mov    ecx,0x8
  402b32:	call   0x408158
  402b37:	call   0x402500
  402b3c:	nop    DWORD PTR [rax+0x0]
  402b40:	xor    eax,eax
  402b42:	add    rsp,0x28
  402b46:	ret    
  402b47:	nop    WORD PTR [rax+rax*1+0x0]
  402b50:	xor    edx,edx
  402b52:	mov    ecx,0x8
  402b57:	call   0x408158
  402b5c:	cmp    rax,0x1
  402b60:	mov    rdx,rax
  402b63:	jne    0x402ab4
  402b69:	mov    edx,0x1
  402b6e:	mov    ecx,0x8
  402b73:	call   0x408158
  402b78:	xor    eax,eax
  402b7a:	jmp    0x402a73
  402b7f:	nop
  402b80:	mov    eax,0x4
  402b85:	add    rsp,0x28
  402b89:	ret    
  402b8a:	mov    edx,0x1
  402b8f:	mov    ecx,0x4
  402b94:	call   0x408158
  402b99:	xor    eax,eax
  402b9b:	jmp    0x402a73
  402ba0:	mov    edx,0x1
  402ba5:	mov    ecx,0xb
  402baa:	call   0x408158
  402baf:	xor    eax,eax
  402bb1:	jmp    0x402a73
  402bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bc0:	push   r12
  402bc2:	push   rbp
  402bc3:	push   rdi
  402bc4:	push   rsi
  402bc5:	push   rbx
  402bc6:	sub    rsp,0x20
  402bca:	call   0x403330
  402bcf:	mov    rbp,rax
  402bd2:	mov    eax,DWORD PTR [rip+0xcbf0]        # 0x40f7c8
  402bd8:	test   eax,eax
  402bda:	jne    0x402c01
  402bdc:	test   rbp,rbp
  402bdf:	je     0x402c01
  402be1:	lea    rcx,[rip+0x8f58]        # 0x40bb40
  402be8:	mov    DWORD PTR [rip+0xcbd6],0x1        # 0x40f7c8
  402bf2:	call   0x403170
  402bf7:	test   rax,rax
  402bfa:	je     0x402c10
  402bfc:	mov    eax,0x1
  402c01:	add    rsp,0x20
  402c05:	pop    rbx
  402c06:	pop    rsi
  402c07:	pop    rdi
  402c08:	pop    rbp
  402c09:	pop    r12
  402c0b:	ret    
  402c0c:	nop    DWORD PTR [rax+0x0]
  402c10:	lea    rbx,[rip+0xcce9]        # 0x40f900
  402c17:	mov    ecx,0x30
  402c1c:	lea    rdx,[rip+0xcbdd]        # 0x40f800
  402c23:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402a10
  402c2a:	xor    esi,esi
  402c2c:	mov    rdi,rbx
  402c2f:	rep stos QWORD PTR es:[rdi],rax
  402c32:	mov    rdi,rdx
  402c35:	sub    r12,rbp
  402c38:	mov    cl,0x20
  402c3a:	rep stos QWORD PTR es:[rdi],rax
  402c3d:	mov    rdi,rdx
  402c40:	jmp    0x402c70
  402c42:	mov    BYTE PTR [rdi],0x9
  402c45:	mov    DWORD PTR [rdi+0x4],r12d
  402c49:	add    rsi,0x1
  402c4d:	mov    edx,DWORD PTR [rax+0xc]
  402c50:	add    rbx,0xc
  402c54:	mov    DWORD PTR [rbx-0xc],edx
  402c57:	add    edx,DWORD PTR [rax+0x8]
  402c5a:	mov    rax,rdi
  402c5d:	sub    rax,rbp
  402c60:	add    rdi,0x8
  402c64:	mov    DWORD PTR [rbx-0x4],eax
  402c67:	mov    DWORD PTR [rbx-0x8],edx
  402c6a:	cmp    rsi,0x20
  402c6e:	je     0x402ca5
  402c70:	mov    rcx,rsi
  402c73:	call   0x4032a0
  402c78:	test   rax,rax
  402c7b:	jne    0x402c42
  402c7d:	test   rsi,rsi
  402c80:	je     0x402bfc
  402c86:	mov    edx,esi
  402c88:	nop    DWORD PTR [rax+rax*1+0x0]
  402c90:	mov    r8,rbp
  402c93:	lea    rcx,[rip+0xcc66]        # 0x40f900
  402c9a:	call   QWORD PTR [rip+0xe7c0]        # 0x411460
  402ca0:	jmp    0x402bfc
  402ca5:	mov    edx,0x20
  402caa:	jmp    0x402c90
  402cac:	nop    DWORD PTR [rax+0x0]
  402cb0:	push   rbx
  402cb1:	sub    rsp,0x20
  402cb5:	mov    rdx,QWORD PTR [rcx]
  402cb8:	mov    eax,DWORD PTR [rdx]
  402cba:	mov    r8d,eax
  402cbd:	and    r8d,0x20ffffff
  402cc4:	cmp    r8d,0x20474343
  402ccb:	je     0x402dd0
  402cd1:	cmp    eax,0xc0000091
  402cd6:	mov    rbx,rcx
  402cd9:	ja     0x402d60
  402cdf:	cmp    eax,0xc000008d
  402ce4:	jae    0x402d77
  402cea:	cmp    eax,0xc0000008
  402cef:	je     0x402d23
  402cf1:	ja     0x402d30
  402cf3:	cmp    eax,0x80000002
  402cf8:	je     0x402d23
  402cfa:	cmp    eax,0xc0000005
  402cff:	jne    0x402d42
  402d01:	xor    edx,edx
  402d03:	mov    ecx,0xb
  402d08:	call   0x408158
  402d0d:	cmp    rax,0x1
  402d11:	je     0x402e40
  402d17:	test   rax,rax
  402d1a:	je     0x402d42
  402d1c:	mov    ecx,0xb
  402d21:	call   rax
  402d23:	mov    eax,0xffffffff
  402d28:	add    rsp,0x20
  402d2c:	pop    rbx
  402d2d:	ret    
  402d2e:	xchg   ax,ax
  402d30:	cmp    eax,0xc000001d
  402d35:	je     0x402df6
  402d3b:	cmp    eax,0xc000008c
  402d40:	je     0x402d23
  402d42:	mov    rax,QWORD PTR [rip+0xca77]        # 0x40f7c0
  402d49:	test   rax,rax
  402d4c:	je     0x402d28
  402d4e:	mov    rcx,rbx
  402d51:	add    rsp,0x20
  402d55:	pop    rbx
  402d56:	rex.W jmp rax
  402d59:	nop    DWORD PTR [rax+0x0]
  402d60:	cmp    eax,0xc0000094
  402d65:	je     0x402da2
  402d67:	ja     0x402de0
  402d69:	cmp    eax,0xc0000092
  402d6e:	je     0x402d23
  402d70:	cmp    eax,0xc0000093
  402d75:	jne    0x402d42
  402d77:	xor    edx,edx
  402d79:	mov    ecx,0x8
  402d7e:	call   0x408158
  402d83:	cmp    rax,0x1
  402d87:	jne    0x402db4
  402d89:	mov    edx,0x1
  402d8e:	mov    ecx,0x8
  402d93:	call   0x408158
  402d98:	call   0x402500
  402d9d:	jmp    0x402d23
  402da2:	xor    edx,edx
  402da4:	mov    ecx,0x8
  402da9:	call   0x408158
  402dae:	cmp    rax,0x1
  402db2:	je     0x402e22
  402db4:	test   rax,rax
  402db7:	je     0x402d42
  402db9:	mov    ecx,0x8
  402dbe:	call   rax
  402dc0:	mov    eax,0xffffffff
  402dc5:	jmp    0x402d28
  402dca:	nop    WORD PTR [rax+rax*1+0x0]
  402dd0:	test   BYTE PTR [rdx+0x4],0x1
  402dd4:	jne    0x402cd1
  402dda:	jmp    0x402d23
  402ddf:	nop
  402de0:	cmp    eax,0xc0000095
  402de5:	je     0x402d23
  402deb:	cmp    eax,0xc0000096
  402df0:	jne    0x402d42
  402df6:	xor    edx,edx
  402df8:	mov    ecx,0x4
  402dfd:	call   0x408158
  402e02:	cmp    rax,0x1
  402e06:	je     0x402e54
  402e08:	test   rax,rax
  402e0b:	je     0x402d42
  402e11:	mov    ecx,0x4
  402e16:	call   rax
  402e18:	mov    eax,0xffffffff
  402e1d:	jmp    0x402d28
  402e22:	mov    edx,0x1
  402e27:	mov    ecx,0x8
  402e2c:	call   0x408158
  402e31:	jmp    0x402d23
  402e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e40:	mov    edx,0x1
  402e45:	mov    ecx,0xb
  402e4a:	call   0x408158
  402e4f:	jmp    0x402d23
  402e54:	mov    edx,0x1
  402e59:	mov    ecx,0x4
  402e5e:	call   0x408158
  402e63:	jmp    0x402d23
  402e68:	nop
  402e69:	nop
  402e6a:	nop
  402e6b:	nop
  402e6c:	nop
  402e6d:	nop
  402e6e:	nop
  402e6f:	nop
  402e70:	push   rbp
  402e71:	push   rdi
  402e72:	push   rsi
  402e73:	push   rbx
  402e74:	sub    rsp,0x28
  402e78:	lea    rcx,[rip+0xcc21]        # 0x40faa0
  402e7f:	call   QWORD PTR [rip+0xe583]        # 0x411408
  402e85:	mov    rbx,QWORD PTR [rip+0xcbf4]        # 0x40fa80
  402e8c:	test   rbx,rbx
  402e8f:	je     0x402ec4
  402e91:	mov    rbp,QWORD PTR [rip+0xe600]        # 0x411498
  402e98:	mov    rdi,QWORD PTR [rip+0xe589]        # 0x411428
  402e9f:	nop
  402ea0:	mov    ecx,DWORD PTR [rbx]
  402ea2:	call   rbp
  402ea4:	mov    rsi,rax
  402ea7:	call   rdi
  402ea9:	test   eax,eax
  402eab:	jne    0x402ebb
  402ead:	test   rsi,rsi
  402eb0:	je     0x402ebb
  402eb2:	mov    rax,QWORD PTR [rbx+0x8]
  402eb6:	mov    rcx,rsi
  402eb9:	call   rax
  402ebb:	mov    rbx,QWORD PTR [rbx+0x10]
  402ebf:	test   rbx,rbx
  402ec2:	jne    0x402ea0
  402ec4:	mov    rax,QWORD PTR [rip+0xe585]        # 0x411450
  402ecb:	lea    rcx,[rip+0xcbce]        # 0x40faa0
  402ed2:	add    rsp,0x28
  402ed6:	pop    rbx
  402ed7:	pop    rsi
  402ed8:	pop    rdi
  402ed9:	pop    rbp
  402eda:	rex.W jmp rax
  402edd:	nop    DWORD PTR [rax]
  402ee0:	push   rdi
  402ee1:	push   rsi
  402ee2:	push   rbx
  402ee3:	sub    rsp,0x20
  402ee7:	mov    eax,DWORD PTR [rip+0xcb9b]        # 0x40fa88
  402eed:	test   eax,eax
  402eef:	jne    0x402f00
  402ef1:	add    rsp,0x20
  402ef5:	pop    rbx
  402ef6:	pop    rsi
  402ef7:	pop    rdi
  402ef8:	ret    
  402ef9:	nop    DWORD PTR [rax+0x0]
  402f00:	mov    rsi,rdx
  402f03:	mov    edi,ecx
  402f05:	mov    edx,0x18
  402f0a:	mov    ecx,0x1
  402f0f:	call   0x4081e8
  402f14:	test   rax,rax
  402f17:	mov    rbx,rax
  402f1a:	je     0x402f58
  402f1c:	mov    DWORD PTR [rax],edi
  402f1e:	mov    QWORD PTR [rax+0x8],rsi
  402f22:	lea    rcx,[rip+0xcb77]        # 0x40faa0
  402f29:	call   QWORD PTR [rip+0xe4d9]        # 0x411408
  402f2f:	mov    rax,QWORD PTR [rip+0xcb4a]        # 0x40fa80
  402f36:	lea    rcx,[rip+0xcb63]        # 0x40faa0
  402f3d:	mov    QWORD PTR [rip+0xcb3c],rbx        # 0x40fa80
  402f44:	mov    QWORD PTR [rbx+0x10],rax
  402f48:	call   QWORD PTR [rip+0xe502]        # 0x411450
  402f4e:	xor    eax,eax
  402f50:	add    rsp,0x20
  402f54:	pop    rbx
  402f55:	pop    rsi
  402f56:	pop    rdi
  402f57:	ret    
  402f58:	mov    eax,0xffffffff
  402f5d:	jmp    0x402ef1
  402f5f:	nop
  402f60:	push   rbx
  402f61:	sub    rsp,0x20
  402f65:	mov    eax,DWORD PTR [rip+0xcb1d]        # 0x40fa88
  402f6b:	test   eax,eax
  402f6d:	jne    0x402f80
  402f6f:	xor    eax,eax
  402f71:	add    rsp,0x20
  402f75:	pop    rbx
  402f76:	ret    
  402f77:	nop    WORD PTR [rax+rax*1+0x0]
  402f80:	mov    ebx,ecx
  402f82:	lea    rcx,[rip+0xcb17]        # 0x40faa0
  402f89:	call   QWORD PTR [rip+0xe479]        # 0x411408
  402f8f:	mov    rdx,QWORD PTR [rip+0xcaea]        # 0x40fa80
  402f96:	test   rdx,rdx
  402f99:	je     0x402fb7
  402f9b:	mov    eax,DWORD PTR [rdx]
  402f9d:	cmp    eax,ebx
  402f9f:	jne    0x402fae
  402fa1:	jmp    0x402fef
  402fa3:	mov    r8d,DWORD PTR [rax]
  402fa6:	cmp    r8d,ebx
  402fa9:	je     0x402fd0
  402fab:	mov    rdx,rax
  402fae:	mov    rax,QWORD PTR [rdx+0x10]
  402fb2:	test   rax,rax
  402fb5:	jne    0x402fa3
  402fb7:	lea    rcx,[rip+0xcae2]        # 0x40faa0
  402fbe:	call   QWORD PTR [rip+0xe48c]        # 0x411450
  402fc4:	xor    eax,eax
  402fc6:	add    rsp,0x20
  402fca:	pop    rbx
  402fcb:	ret    
  402fcc:	nop    DWORD PTR [rax+0x0]
  402fd0:	mov    rcx,rax
  402fd3:	mov    rax,QWORD PTR [rax+0x10]
  402fd7:	mov    QWORD PTR [rdx+0x10],rax
  402fdb:	call   0x408198
  402fe0:	lea    rcx,[rip+0xcab9]        # 0x40faa0
  402fe7:	call   QWORD PTR [rip+0xe463]        # 0x411450
  402fed:	jmp    0x402fc4
  402fef:	mov    rax,QWORD PTR [rdx+0x10]
  402ff3:	mov    rcx,rdx
  402ff6:	mov    QWORD PTR [rip+0xca83],rax        # 0x40fa80
  402ffd:	jmp    0x402fdb
  402fff:	nop
  403000:	push   rbx
  403001:	sub    rsp,0x20
  403005:	cmp    edx,0x1
  403008:	je     0x4030a0
  40300e:	jb     0x403040
  403010:	cmp    edx,0x2
  403013:	je     0x403030
  403015:	cmp    edx,0x3
  403018:	jne    0x403035
  40301a:	mov    eax,DWORD PTR [rip+0xca68]        # 0x40fa88
  403020:	test   eax,eax
  403022:	je     0x403035
  403024:	call   0x402e70
  403029:	jmp    0x403035
  40302b:	nop    DWORD PTR [rax+rax*1+0x0]
  403030:	call   0x402500
  403035:	mov    eax,0x1
  40303a:	add    rsp,0x20
  40303e:	pop    rbx
  40303f:	ret    
  403040:	mov    eax,DWORD PTR [rip+0xca42]        # 0x40fa88
  403046:	test   eax,eax
  403048:	jne    0x4030d0
  40304e:	mov    eax,DWORD PTR [rip+0xca34]        # 0x40fa88
  403054:	cmp    eax,0x1
  403057:	jne    0x403035
  403059:	mov    rcx,QWORD PTR [rip+0xca20]        # 0x40fa80
  403060:	test   rcx,rcx
  403063:	je     0x403076
  403065:	mov    rbx,QWORD PTR [rcx+0x10]
  403069:	call   0x408198
  40306e:	test   rbx,rbx
  403071:	mov    rcx,rbx
  403074:	jne    0x403065
  403076:	lea    rcx,[rip+0xca23]        # 0x40faa0
  40307d:	mov    QWORD PTR [rip+0xc9f8],0x0        # 0x40fa80
  403088:	mov    DWORD PTR [rip+0xc9f6],0x0        # 0x40fa88
  403092:	call   QWORD PTR [rip+0xe368]        # 0x411400
  403098:	jmp    0x403035
  40309a:	nop    WORD PTR [rax+rax*1+0x0]
  4030a0:	mov    eax,DWORD PTR [rip+0xc9e2]        # 0x40fa88
  4030a6:	test   eax,eax
  4030a8:	je     0x4030c0
  4030aa:	mov    eax,0x1
  4030af:	mov    DWORD PTR [rip+0xc9cf],0x1        # 0x40fa88
  4030b9:	add    rsp,0x20
  4030bd:	pop    rbx
  4030be:	ret    
  4030bf:	nop
  4030c0:	lea    rcx,[rip+0xc9d9]        # 0x40faa0
  4030c7:	call   QWORD PTR [rip+0xe37b]        # 0x411448
  4030cd:	jmp    0x4030aa
  4030cf:	nop
  4030d0:	call   0x402e70
  4030d5:	jmp    0x40304e
  4030da:	nop
  4030db:	nop
  4030dc:	nop
  4030dd:	nop
  4030de:	nop
  4030df:	nop
  4030e0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4030e4:	add    rcx,rax
  4030e7:	xor    eax,eax
  4030e9:	cmp    DWORD PTR [rcx],0x4550
  4030ef:	je     0x4030f3
  4030f1:	repz ret 
  4030f3:	xor    eax,eax
  4030f5:	cmp    WORD PTR [rcx+0x18],0x20b
  4030fb:	sete   al
  4030fe:	ret    
  4030ff:	nop
  403100:	cmp    WORD PTR [rcx],0x5a4d
  403105:	je     0x403110
  403107:	xor    eax,eax
  403109:	ret    
  40310a:	nop    WORD PTR [rax+rax*1+0x0]
  403110:	jmp    0x4030e0
  403112:	nop    DWORD PTR [rax+0x0]
  403116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403120:	movsxd rax,DWORD PTR [rcx+0x3c]
  403124:	add    rcx,rax
  403127:	movzx  eax,WORD PTR [rcx+0x14]
  40312b:	lea    rax,[rcx+rax*1+0x18]
  403130:	movzx  ecx,WORD PTR [rcx+0x6]
  403134:	test   ecx,ecx
  403136:	je     0x403161
  403138:	sub    ecx,0x1
  40313b:	lea    rcx,[rcx+rcx*4]
  40313f:	lea    r9,[rax+rcx*8+0x28]
  403144:	mov    r8d,DWORD PTR [rax+0xc]
  403148:	cmp    r8,rdx
  40314b:	mov    rcx,r8
  40314e:	ja     0x403158
  403150:	add    ecx,DWORD PTR [rax+0x8]
  403153:	cmp    rdx,rcx
  403156:	jb     0x403163
  403158:	add    rax,0x28
  40315c:	cmp    rax,r9
  40315f:	jne    0x403144
  403161:	xor    eax,eax
  403163:	repz ret 
  403165:	nop
  403166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403170:	push   rdi
  403171:	push   rsi
  403172:	push   rbx
  403173:	sub    rsp,0x20
  403177:	mov    rsi,rcx
  40317a:	call   0x408138
  40317f:	cmp    rax,0x8
  403183:	ja     0x4031a0
  403185:	mov    rbx,QWORD PTR [rip+0x8f04]        # 0x40c090
  40318c:	xor    edi,edi
  40318e:	cmp    WORD PTR [rbx],0x5a4d
  403193:	je     0x4031b0
  403195:	mov    rax,rdi
  403198:	add    rsp,0x20
  40319c:	pop    rbx
  40319d:	pop    rsi
  40319e:	pop    rdi
  40319f:	ret    
  4031a0:	xor    edi,edi
  4031a2:	mov    rax,rdi
  4031a5:	add    rsp,0x20
  4031a9:	pop    rbx
  4031aa:	pop    rsi
  4031ab:	pop    rdi
  4031ac:	ret    
  4031ad:	nop    DWORD PTR [rax]
  4031b0:	mov    rcx,rbx
  4031b3:	call   0x4030e0
  4031b8:	test   eax,eax
  4031ba:	je     0x403195
  4031bc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4031c0:	add    rdx,rbx
  4031c3:	movzx  eax,WORD PTR [rdx+0x14]
  4031c7:	lea    rbx,[rdx+rax*1+0x18]
  4031cc:	movzx  eax,WORD PTR [rdx+0x6]
  4031d0:	test   eax,eax
  4031d2:	je     0x403195
  4031d4:	sub    eax,0x1
  4031d7:	lea    rax,[rax+rax*4]
  4031db:	lea    rdi,[rbx+rax*8+0x28]
  4031e0:	jmp    0x4031eb
  4031e2:	add    rbx,0x28
  4031e6:	cmp    rbx,rdi
  4031e9:	je     0x4031a0
  4031eb:	mov    r8d,0x8
  4031f1:	mov    rdx,rsi
  4031f4:	mov    rcx,rbx
  4031f7:	call   0x408130
  4031fc:	test   eax,eax
  4031fe:	jne    0x4031e2
  403200:	mov    rdi,rbx
  403203:	mov    rax,rdi
  403206:	add    rsp,0x20
  40320a:	pop    rbx
  40320b:	pop    rsi
  40320c:	pop    rdi
  40320d:	ret    
  40320e:	xchg   ax,ax
  403210:	push   rsi
  403211:	push   rbx
  403212:	sub    rsp,0x28
  403216:	mov    rbx,QWORD PTR [rip+0x8e73]        # 0x40c090
  40321d:	cmp    WORD PTR [rbx],0x5a4d
  403222:	je     0x403230
  403224:	xor    eax,eax
  403226:	add    rsp,0x28
  40322a:	pop    rbx
  40322b:	pop    rsi
  40322c:	ret    
  40322d:	nop    DWORD PTR [rax]
  403230:	mov    rsi,rcx
  403233:	mov    rcx,rbx
  403236:	call   0x4030e0
  40323b:	test   eax,eax
  40323d:	je     0x403224
  40323f:	sub    rsi,rbx
  403242:	mov    rcx,rbx
  403245:	mov    rdx,rsi
  403248:	add    rsp,0x28
  40324c:	pop    rbx
  40324d:	pop    rsi
  40324e:	jmp    0x403120
  403253:	nop    DWORD PTR [rax]
  403256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403260:	push   rbx
  403261:	sub    rsp,0x20
  403265:	mov    rbx,QWORD PTR [rip+0x8e24]        # 0x40c090
  40326c:	xor    eax,eax
  40326e:	cmp    WORD PTR [rbx],0x5a4d
  403273:	je     0x403280
  403275:	add    rsp,0x20
  403279:	pop    rbx
  40327a:	ret    
  40327b:	nop    DWORD PTR [rax+rax*1+0x0]
  403280:	mov    rcx,rbx
  403283:	call   0x4030e0
  403288:	test   eax,eax
  40328a:	je     0x403275
  40328c:	movsxd rax,DWORD PTR [rbx+0x3c]
  403290:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  403295:	add    rsp,0x20
  403299:	pop    rbx
  40329a:	ret    
  40329b:	nop    DWORD PTR [rax+rax*1+0x0]
  4032a0:	push   rdi
  4032a1:	push   rsi
  4032a2:	push   rbx
  4032a3:	sub    rsp,0x20
  4032a7:	mov    rsi,QWORD PTR [rip+0x8de2]        # 0x40c090
  4032ae:	xor    edi,edi
  4032b0:	mov    rbx,rcx
  4032b3:	cmp    WORD PTR [rsi],0x5a4d
  4032b8:	je     0x4032c5
  4032ba:	mov    rax,rdi
  4032bd:	add    rsp,0x20
  4032c1:	pop    rbx
  4032c2:	pop    rsi
  4032c3:	pop    rdi
  4032c4:	ret    
  4032c5:	mov    rcx,rsi
  4032c8:	call   0x4030e0
  4032cd:	test   eax,eax
  4032cf:	je     0x4032ba
  4032d1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4032d5:	add    rsi,rax
  4032d8:	movzx  eax,WORD PTR [rsi+0x14]
  4032dc:	lea    rdx,[rsi+rax*1+0x18]
  4032e1:	movzx  eax,WORD PTR [rsi+0x6]
  4032e5:	test   eax,eax
  4032e7:	je     0x4032ba
  4032e9:	sub    eax,0x1
  4032ec:	lea    rax,[rax+rax*4]
  4032f0:	lea    rax,[rdx+rax*8+0x28]
  4032f5:	test   BYTE PTR [rdx+0x27],0x20
  4032f9:	je     0x403304
  4032fb:	test   rbx,rbx
  4032fe:	je     0x403320
  403300:	sub    rbx,0x1
  403304:	add    rdx,0x28
  403308:	cmp    rdx,rax
  40330b:	jne    0x4032f5
  40330d:	xor    edi,edi
  40330f:	mov    rax,rdi
  403312:	add    rsp,0x20
  403316:	pop    rbx
  403317:	pop    rsi
  403318:	pop    rdi
  403319:	ret    
  40331a:	nop    WORD PTR [rax+rax*1+0x0]
  403320:	mov    rdi,rdx
  403323:	mov    rax,rdi
  403326:	add    rsp,0x20
  40332a:	pop    rbx
  40332b:	pop    rsi
  40332c:	pop    rdi
  40332d:	ret    
  40332e:	xchg   ax,ax
  403330:	push   rsi
  403331:	push   rbx
  403332:	sub    rsp,0x28
  403336:	mov    rsi,QWORD PTR [rip+0x8d53]        # 0x40c090
  40333d:	xor    ebx,ebx
  40333f:	cmp    WORD PTR [rsi],0x5a4d
  403344:	je     0x403350
  403346:	mov    rax,rbx
  403349:	add    rsp,0x28
  40334d:	pop    rbx
  40334e:	pop    rsi
  40334f:	ret    
  403350:	mov    rcx,rsi
  403353:	call   0x4030e0
  403358:	test   eax,eax
  40335a:	cmovne rbx,rsi
  40335e:	mov    rax,rbx
  403361:	add    rsp,0x28
  403365:	pop    rbx
  403366:	pop    rsi
  403367:	ret    
  403368:	nop    DWORD PTR [rax+rax*1+0x0]
  403370:	push   rsi
  403371:	push   rbx
  403372:	sub    rsp,0x28
  403376:	mov    rbx,QWORD PTR [rip+0x8d13]        # 0x40c090
  40337d:	xor    eax,eax
  40337f:	cmp    WORD PTR [rbx],0x5a4d
  403384:	je     0x403390
  403386:	add    rsp,0x28
  40338a:	pop    rbx
  40338b:	pop    rsi
  40338c:	ret    
  40338d:	nop    DWORD PTR [rax]
  403390:	mov    rsi,rcx
  403393:	mov    rcx,rbx
  403396:	call   0x4030e0
  40339b:	test   eax,eax
  40339d:	je     0x403386
  40339f:	sub    rsi,rbx
  4033a2:	mov    rcx,rbx
  4033a5:	mov    rdx,rsi
  4033a8:	call   0x403120
  4033ad:	test   rax,rax
  4033b0:	je     0x4033c1
  4033b2:	mov    eax,DWORD PTR [rax+0x24]
  4033b5:	not    eax
  4033b7:	shr    eax,0x1f
  4033ba:	add    rsp,0x28
  4033be:	pop    rbx
  4033bf:	pop    rsi
  4033c0:	ret    
  4033c1:	xor    eax,eax
  4033c3:	jmp    0x403386
  4033c5:	nop
  4033c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033d0:	push   rbp
  4033d1:	push   rdi
  4033d2:	push   rsi
  4033d3:	push   rbx
  4033d4:	sub    rsp,0x28
  4033d8:	mov    rdi,QWORD PTR [rip+0x8cb1]        # 0x40c090
  4033df:	xor    ebp,ebp
  4033e1:	mov    esi,ecx
  4033e3:	cmp    WORD PTR [rdi],0x5a4d
  4033e8:	je     0x403400
  4033ea:	mov    rax,rbp
  4033ed:	add    rsp,0x28
  4033f1:	pop    rbx
  4033f2:	pop    rsi
  4033f3:	pop    rdi
  4033f4:	pop    rbp
  4033f5:	ret    
  4033f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403400:	mov    rcx,rdi
  403403:	call   0x4030e0
  403408:	test   eax,eax
  40340a:	je     0x4033ea
  40340c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403410:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403417:	test   edx,edx
  403419:	je     0x4033ea
  40341b:	mov    ebx,edx
  40341d:	mov    rcx,rdi
  403420:	mov    rdx,rbx
  403423:	call   0x403120
  403428:	test   rax,rax
  40342b:	je     0x4033ea
  40342d:	add    rbx,rdi
  403430:	mov    rdx,rbx
  403433:	jne    0x403447
  403435:	jmp    0x4033ea
  403437:	nop    WORD PTR [rax+rax*1+0x0]
  403440:	sub    esi,0x1
  403443:	add    rdx,0x14
  403447:	mov    ecx,DWORD PTR [rdx+0x4]
  40344a:	test   ecx,ecx
  40344c:	jne    0x403455
  40344e:	mov    eax,DWORD PTR [rdx+0xc]
  403451:	test   eax,eax
  403453:	je     0x403470
  403455:	test   esi,esi
  403457:	jg     0x403440
  403459:	mov    ebp,DWORD PTR [rdx+0xc]
  40345c:	add    rbp,rdi
  40345f:	mov    rax,rbp
  403462:	add    rsp,0x28
  403466:	pop    rbx
  403467:	pop    rsi
  403468:	pop    rdi
  403469:	pop    rbp
  40346a:	ret    
  40346b:	nop    DWORD PTR [rax+rax*1+0x0]
  403470:	xor    ebp,ebp
  403472:	mov    rax,rbp
  403475:	add    rsp,0x28
  403479:	pop    rbx
  40347a:	pop    rsi
  40347b:	pop    rdi
  40347c:	pop    rbp
  40347d:	ret    
  40347e:	nop
  40347f:	nop
  403480:	push   rcx
  403481:	push   rax
  403482:	cmp    rax,0x1000
  403488:	lea    rcx,[rsp+0x18]
  40348d:	jb     0x4034a8
  40348f:	sub    rcx,0x1000
  403496:	or     QWORD PTR [rcx],0x0
  40349a:	sub    rax,0x1000
  4034a0:	cmp    rax,0x1000
  4034a6:	ja     0x40348f
  4034a8:	sub    rcx,rax
  4034ab:	or     QWORD PTR [rcx],0x0
  4034af:	pop    rax
  4034b0:	pop    rcx
  4034b1:	ret    
  4034b2:	nop
  4034b3:	nop
  4034b4:	nop
  4034b5:	nop
  4034b6:	nop
  4034b7:	nop
  4034b8:	nop
  4034b9:	nop
  4034ba:	nop
  4034bb:	nop
  4034bc:	nop
  4034bd:	nop
  4034be:	nop
  4034bf:	nop
  4034c0:	push   rbx
  4034c1:	sub    rsp,0x60
  4034c5:	lea    r8,[rip+0x6b94]        # 0x40a060
  4034cc:	lea    rax,[rsp+0x50]
  4034d1:	lea    r9,[rsp+0x4c]
  4034d6:	mov    QWORD PTR [rsp+0x20],rax
  4034db:	call   0x4042c0
  4034e0:	mov    edx,eax
  4034e2:	and    edx,0x7
  4034e5:	cmp    edx,0x6
  4034e8:	ja     0x403515
  4034ea:	lea    rcx,[rip+0x865f]        # 0x40bb50
  4034f1:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  4034f5:	add    rcx,rdx
  4034f8:	jmp    rcx
  4034fa:	nop    WORD PTR [rax+rax*1+0x0]
  403500:	mov    ebx,DWORD PTR [rsp+0x54]
  403504:	mov    edx,DWORD PTR [rsp+0x50]
  403508:	or     ebx,0x7ff00000
  40350e:	shl    rbx,0x20
  403512:	or     rbx,rdx
  403515:	test   al,0x8
  403517:	je     0x40352e
  403519:	mov    rax,rbx
  40351c:	mov    ebx,ebx
  40351e:	shr    rax,0x20
  403522:	or     eax,0x80000000
  403527:	shl    rax,0x20
  40352b:	or     rbx,rax
  40352e:	mov    QWORD PTR [rsp+0x38],rbx
  403533:	movsd  xmm0,QWORD PTR [rsp+0x38]
  403539:	add    rsp,0x60
  40353d:	pop    rbx
  40353e:	ret    
  40353f:	nop
  403540:	movabs rbx,0x7ff8000000000000
  40354a:	jmp    0x403515
  40354c:	nop    DWORD PTR [rax+0x0]
  403550:	xor    ebx,ebx
  403552:	jmp    0x403515
  403554:	mov    ebx,DWORD PTR [rsp+0x4c]
  403558:	mov    edx,DWORD PTR [rsp+0x54]
  40355c:	add    ebx,0x433
  403562:	and    edx,0xffefffff
  403568:	shl    ebx,0x14
  40356b:	or     ebx,edx
  40356d:	mov    edx,DWORD PTR [rsp+0x50]
  403571:	shl    rbx,0x20
  403575:	or     rbx,rdx
  403578:	jmp    0x403515
  40357a:	nop    WORD PTR [rax+rax*1+0x0]
  403580:	mov    ebx,DWORD PTR [rsp+0x54]
  403584:	mov    edx,DWORD PTR [rsp+0x50]
  403588:	shl    rbx,0x20
  40358c:	or     rbx,rdx
  40358f:	jmp    0x403515
  403591:	movabs rbx,0x7ff0000000000000
  40359b:	jmp    0x403515
  4035a0:	push   rbx
  4035a1:	sub    rsp,0x60
  4035a5:	movaps XMMWORD PTR [rsp+0x50],xmm6
  4035aa:	movq   QWORD PTR [rsp+0x48],xmm0
  4035b0:	movq   rbx,xmm0
  4035b5:	mov    eax,DWORD PTR [rsp+0x4c]
  4035b9:	mov    edx,eax
  4035bb:	and    eax,0x7ff00000
  4035c0:	and    edx,0xfffff
  4035c6:	or     edx,DWORD PTR [rsp+0x48]
  4035ca:	mov    ecx,edx
  4035cc:	or     ecx,eax
  4035ce:	je     0x403620
  4035d0:	test   eax,eax
  4035d2:	jne    0x403640
  4035d4:	mov    rax,rbx
  4035d7:	shr    rax,0x20
  4035db:	test   eax,eax
  4035dd:	js     0x403662
  4035e3:	mov    QWORD PTR [rsp+0x38],rbx
  4035e8:	movsd  xmm0,QWORD PTR [rip+0x85a8]        # 0x40bb98
  4035f0:	movsd  xmm1,QWORD PTR [rsp+0x38]
  4035f6:	ucomisd xmm1,xmm0
  4035fa:	jp     0x4035fe
  4035fc:	je     0x403613
  4035fe:	mov    QWORD PTR [rsp+0x38],rbx
  403603:	fld    QWORD PTR [rsp+0x38]
  403607:	fsqrt  
  403609:	fstp   QWORD PTR [rsp+0x38]
  40360d:	movsd  xmm0,QWORD PTR [rsp+0x38]
  403613:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  403618:	add    rsp,0x60
  40361c:	pop    rbx
  40361d:	ret    
  40361e:	xchg   ax,ax
  403620:	shr    rbx,0x20
  403624:	pxor   xmm0,xmm0
  403628:	test   ebx,ebx
  40362a:	jns    0x403613
  40362c:	movsd  xmm0,QWORD PTR [rip+0x8554]        # 0x40bb88
  403634:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  403639:	add    rsp,0x60
  40363d:	pop    rbx
  40363e:	ret    
  40363f:	nop
  403640:	cmp    eax,0x7ff00000
  403645:	jne    0x4035d4
  403647:	movq   rax,xmm0
  40364c:	shr    rax,0x20
  403650:	test   edx,edx
  403652:	je     0x4036b0
  403654:	test   eax,eax
  403656:	js     0x403662
  403658:	movsd  xmm6,QWORD PTR [rip+0x8520]        # 0x40bb80
  403660:	jmp    0x40366a
  403662:	movsd  xmm6,QWORD PTR [rip+0x850e]        # 0x40bb78
  40366a:	call   0x408220
  40366f:	mov    QWORD PTR [rsp+0x38],rbx
  403674:	pxor   xmm3,xmm3
  403678:	mov    DWORD PTR [rax],0x21
  40367e:	movsd  xmm2,QWORD PTR [rsp+0x38]
  403684:	movsd  QWORD PTR [rsp+0x20],xmm6
  40368a:	lea    rdx,[rip+0x84df]        # 0x40bb70
  403691:	mov    ecx,0x1
  403696:	call   0x4023a0
  40369b:	movapd xmm0,xmm6
  40369f:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  4036a4:	add    rsp,0x60
  4036a8:	pop    rbx
  4036a9:	ret    
  4036aa:	nop    WORD PTR [rax+rax*1+0x0]
  4036b0:	test   eax,eax
  4036b2:	js     0x403662
  4036b4:	movsd  xmm0,QWORD PTR [rip+0x84d4]        # 0x40bb90
  4036bc:	jmp    0x403613
  4036c1:	nop
  4036c2:	nop
  4036c3:	nop
  4036c4:	nop
  4036c5:	nop
  4036c6:	nop
  4036c7:	nop
  4036c8:	nop
  4036c9:	nop
  4036ca:	nop
  4036cb:	nop
  4036cc:	nop
  4036cd:	nop
  4036ce:	nop
  4036cf:	nop
  4036d0:	sub    rsp,0x28
  4036d4:	movsd  QWORD PTR [rsp+0x8],xmm0
  4036da:	fld    QWORD PTR [rsp+0x8]
  4036de:	push   rax
  4036df:	sub    rsp,0x8
  4036e3:	fnstcw WORD PTR [rsp+0x4]
  4036e7:	movzx  eax,WORD PTR [rsp+0x4]
  4036ec:	or     ah,0xc
  4036ef:	mov    WORD PTR [rsp],ax
  4036f3:	fldcw  WORD PTR [rsp]
  4036f6:	frndint 
  4036f8:	fldcw  WORD PTR [rsp+0x4]
  4036fc:	add    rsp,0x8
  403700:	pop    rax
  403701:	test   rdx,rdx
  403704:	fstp   QWORD PTR [rsp+0x8]
  403708:	je     0x403714
  40370a:	movsd  xmm2,QWORD PTR [rsp+0x8]
  403710:	movsd  QWORD PTR [rdx],xmm2
  403714:	movsd  QWORD PTR [rsp+0x18],xmm0
  40371a:	mov    eax,DWORD PTR [rsp+0x1c]
  40371e:	mov    ecx,eax
  403720:	and    eax,0x7ff00000
  403725:	and    ecx,0xfffff
  40372b:	or     ecx,DWORD PTR [rsp+0x18]
  40372f:	mov    edx,ecx
  403731:	or     edx,eax
  403733:	sete   r8b
  403737:	test   eax,eax
  403739:	sete   dl
  40373c:	or     edx,r8d
  40373f:	xor    edx,0x1
  403742:	cmp    eax,0x7ff00000
  403747:	sete   al
  40374a:	and    edx,eax
  40374c:	test   ecx,ecx
  40374e:	setne  al
  403751:	cmp    dl,al
  403753:	jbe    0x403760
  403755:	pxor   xmm0,xmm0
  403759:	add    rsp,0x28
  40375d:	ret    
  40375e:	xchg   ax,ax
  403760:	subsd  xmm0,QWORD PTR [rsp+0x8]
  403766:	add    rsp,0x28
  40376a:	ret    
  40376b:	nop    DWORD PTR [rax+rax*1+0x0]
  403770:	push   rdi
  403771:	push   rsi
  403772:	push   rbx
  403773:	sub    rsp,0xc0
  40377a:	movaps XMMWORD PTR [rsp+0x80],xmm6
  403782:	movaps XMMWORD PTR [rsp+0x90],xmm7
  40378a:	movaps XMMWORD PTR [rsp+0xa0],xmm8
  403793:	movaps XMMWORD PTR [rsp+0xb0],xmm9
  40379c:	mov    ecx,0x4000
  4037a1:	movsd  QWORD PTR [rsp+0x70],xmm0
  4037a7:	movapd xmm8,xmm0
  4037ac:	mov    eax,DWORD PTR [rsp+0x74]
  4037b0:	movapd xmm7,xmm1
  4037b4:	mov    edx,eax
  4037b6:	and    eax,0x7ff00000
  4037bb:	and    edx,0xfffff
  4037c1:	or     edx,DWORD PTR [rsp+0x70]
  4037c5:	mov    edi,edx
  4037c7:	or     edi,eax
  4037c9:	je     0x4037d7
  4037cb:	test   eax,eax
  4037cd:	mov    cx,0x4400
  4037d1:	jne    0x4038d1
  4037d7:	movsd  QWORD PTR [rsp+0x78],xmm7
  4037dd:	mov    eax,DWORD PTR [rsp+0x7c]
  4037e1:	movsd  xmm0,QWORD PTR [rip+0x83e7]        # 0x40bbd0
  4037e9:	mov    edx,eax
  4037eb:	and    eax,0x7ff00000
  4037f0:	and    edx,0xfffff
  4037f6:	or     edx,DWORD PTR [rsp+0x78]
  4037fa:	mov    esi,edx
  4037fc:	or     esi,eax
  4037fe:	je     0x403873
  403800:	test   eax,eax
  403802:	jne    0x4038a0
  403808:	mov    r8d,0x4400
  40380e:	movsd  xmm6,QWORD PTR [rip+0x83ba]        # 0x40bbd0
  403816:	ucomisd xmm8,xmm6
  40381b:	jp     0x40381f
  40381d:	je     0x40386f
  40381f:	cmp    ecx,0x100
  403825:	jne    0x403900
  40382b:	movq   rax,xmm8
  403830:	shr    rax,0x20
  403834:	test   eax,eax
  403836:	js     0x403ae0
  40383c:	movsd  xmm6,QWORD PTR [rip+0x836c]        # 0x40bbb0
  403844:	call   0x408220
  403849:	mov    DWORD PTR [rax],0x21
  40384f:	movsd  QWORD PTR [rsp+0x20],xmm6
  403855:	movapd xmm3,xmm7
  403859:	movapd xmm2,xmm8
  40385e:	lea    rdx,[rip+0x833b]        # 0x40bba0
  403865:	mov    ecx,0x1
  40386a:	call   0x4023a0
  40386f:	movapd xmm0,xmm6
  403873:	movaps xmm6,XMMWORD PTR [rsp+0x80]
  40387b:	movaps xmm7,XMMWORD PTR [rsp+0x90]
  403883:	movaps xmm8,XMMWORD PTR [rsp+0xa0]
  40388c:	movaps xmm9,XMMWORD PTR [rsp+0xb0]
  403895:	add    rsp,0xc0
  40389c:	pop    rbx
  40389d:	pop    rsi
  40389e:	pop    rdi
  40389f:	ret    
  4038a0:	cmp    eax,0x7ff00000
  4038a5:	mov    r8d,0x400
  4038ab:	jne    0x40380e
  4038b1:	test   edx,edx
  4038b3:	mov    r8w,0x500
  4038b8:	je     0x40380e
  4038be:	ucomisd xmm8,xmm0
  4038c3:	jp     0x40382b
  4038c9:	jne    0x40382b
  4038cf:	jmp    0x403873
  4038d1:	cmp    eax,0x7ff00000
  4038d6:	mov    cx,0x400
  4038da:	jne    0x4037d7
  4038e0:	cmp    edx,0x1
  4038e3:	sbb    ecx,ecx
  4038e5:	and    ecx,0x400
  4038eb:	add    ecx,0x100
  4038f1:	jmp    0x4037d7
  4038f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403900:	cmp    ecx,0x4000
  403906:	je     0x4039a0
  40390c:	cmp    r8d,0x500
  403913:	je     0x403970
  403915:	cmp    ecx,0x500
  40391b:	jne    0x4039f2
  403921:	movq   rax,xmm8
  403926:	shr    rax,0x20
  40392a:	test   eax,eax
  40392c:	js     0x403c10
  403932:	movapd xmm0,xmm7
  403936:	mov    edx,0xffffffff
  40393b:	call   0x4062e0
  403940:	lea    rdx,[rsp+0x68]
  403945:	call   0x4036d0
  40394a:	movq   rax,xmm7
  40394f:	shr    rax,0x20
  403953:	test   eax,eax
  403955:	pxor   xmm9,xmm9
  40395a:	js     0x4039e8
  403960:	movsd  xmm0,QWORD PTR [rip+0x8260]        # 0x40bbc8
  403968:	jmp    0x403873
  40396d:	nop    DWORD PTR [rax]
  403970:	cmp    ecx,0x500
  403976:	je     0x40394a
  403978:	movq   rax,xmm8
  40397d:	shr    rax,0x20
  403981:	test   eax,eax
  403983:	js     0x403c80
  403989:	movq   rax,xmm7
  40398e:	shr    rax,0x20
  403992:	ucomisd xmm8,xmm6
  403997:	ja     0x403953
  403999:	jmp    0x4039db
  40399b:	nop    DWORD PTR [rax+rax*1+0x0]
  4039a0:	cmp    r8d,0x500
  4039a7:	je     0x4039d2
  4039a9:	movq   rax,xmm8
  4039ae:	shr    rax,0x20
  4039b2:	test   eax,eax
  4039b4:	js     0x403b74
  4039ba:	movapd xmm0,xmm7
  4039be:	mov    edx,0xffffffff
  4039c3:	call   0x4062e0
  4039c8:	lea    rdx,[rsp+0x68]
  4039cd:	call   0x4036d0
  4039d2:	movq   rax,xmm7
  4039d7:	shr    rax,0x20
  4039db:	test   eax,eax
  4039dd:	pxor   xmm9,xmm9
  4039e2:	js     0x403960
  4039e8:	movapd xmm0,xmm9
  4039ed:	jmp    0x403873
  4039f2:	lea    rbx,[rsp+0x68]
  4039f7:	pxor   xmm9,xmm9
  4039fc:	movapd xmm0,xmm7
  403a00:	mov    rdx,rbx
  403a03:	call   0x4036d0
  403a08:	ucomisd xmm0,xmm9
  403a0d:	jp     0x403af0
  403a13:	jne    0x403af0
  403a19:	movsd  xmm0,QWORD PTR [rsp+0x68]
  403a1f:	movsd  xmm1,QWORD PTR [rip+0x81d1]        # 0x40bbf8
  403a27:	ucomisd xmm1,xmm0
  403a2b:	jb     0x403a3b
  403a2d:	ucomisd xmm0,QWORD PTR [rip+0x81db]        # 0x40bc10
  403a35:	jae    0x403d20
  403a3b:	movsd  xmm0,QWORD PTR [rip+0x81bd]        # 0x40bc00
  403a43:	lea    rsi,[rsp+0x50]
  403a48:	lea    rdi,[rsp+0x40]
  403a4d:	andpd  xmm0,xmm8
  403a52:	mov    rdx,rdi
  403a55:	mov    rcx,rsi
  403a58:	movsd  QWORD PTR [rsp+0x30],xmm0
  403a5e:	fld    QWORD PTR [rsp+0x30]
  403a62:	fstp   TBYTE PTR [rsp+0x40]
  403a66:	call   0x4063f0
  403a6b:	mov    rdx,rdi
  403a6e:	mov    rcx,rsi
  403a71:	movsd  QWORD PTR [rsp+0x30],xmm7
  403a77:	fld    TBYTE PTR [rsp+0x50]
  403a7b:	fld    QWORD PTR [rsp+0x30]
  403a7f:	fmulp  st(1),st
  403a81:	fstp   TBYTE PTR [rsp+0x40]
  403a85:	call   0x406270
  403a8a:	movq   rax,xmm8
  403a8f:	fld    TBYTE PTR [rsp+0x50]
  403a93:	shr    rax,0x20
  403a97:	test   eax,eax
  403a99:	fstp   QWORD PTR [rsp+0x38]
  403a9d:	movsd  xmm6,QWORD PTR [rsp+0x38]
  403aa3:	jns    0x40386f
  403aa9:	movapd xmm0,xmm7
  403aad:	mov    edx,0xffffffff
  403ab2:	call   0x4062e0
  403ab7:	mov    rdx,rbx
  403aba:	call   0x4036d0
  403abf:	ucomisd xmm0,xmm9
  403ac4:	jp     0x403acc
  403ac6:	je     0x40386f
  403acc:	movsd  xmm4,QWORD PTR [rip+0x810c]        # 0x40bbe0
  403ad4:	xorpd  xmm6,xmm4
  403ad8:	jmp    0x40386f
  403add:	nop    DWORD PTR [rax]
  403ae0:	movsd  xmm6,QWORD PTR [rip+0x80c0]        # 0x40bba8
  403ae8:	jmp    0x403844
  403aed:	nop    DWORD PTR [rax]
  403af0:	movq   rax,xmm8
  403af5:	shr    rax,0x20
  403af9:	test   eax,eax
  403afb:	js     0x403d33
  403b01:	ucomisd xmm7,QWORD PTR [rip+0x80e7]        # 0x40bbf0
  403b09:	jp     0x403b11
  403b0b:	je     0x403c60
  403b11:	movsd  xmm0,QWORD PTR [rip+0x80e7]        # 0x40bc00
  403b19:	lea    rbx,[rsp+0x50]
  403b1e:	lea    rsi,[rsp+0x40]
  403b23:	andpd  xmm8,xmm0
  403b28:	mov    rdx,rsi
  403b2b:	mov    rcx,rbx
  403b2e:	movsd  QWORD PTR [rsp+0x30],xmm8
  403b35:	fld    QWORD PTR [rsp+0x30]
  403b39:	fstp   TBYTE PTR [rsp+0x40]
  403b3d:	call   0x4063f0
  403b42:	mov    rdx,rsi
  403b45:	mov    rcx,rbx
  403b48:	movsd  QWORD PTR [rsp+0x30],xmm7
  403b4e:	fld    TBYTE PTR [rsp+0x50]
  403b52:	fld    QWORD PTR [rsp+0x30]
  403b56:	fmulp  st(1),st
  403b58:	fstp   TBYTE PTR [rsp+0x40]
  403b5c:	call   0x406270
  403b61:	fld    TBYTE PTR [rsp+0x50]
  403b65:	fstp   QWORD PTR [rsp+0x38]
  403b69:	movsd  xmm0,QWORD PTR [rsp+0x38]
  403b6f:	jmp    0x403873
  403b74:	lea    rbx,[rsp+0x68]
  403b79:	pxor   xmm9,xmm9
  403b7e:	movapd xmm0,xmm7
  403b82:	mov    rdx,rbx
  403b85:	call   0x4036d0
  403b8a:	ucomisd xmm0,xmm9
  403b8f:	jp     0x403b93
  403b91:	je     0x403bbf
  403b93:	movq   rax,xmm7
  403b98:	shr    rax,0x20
  403b9c:	test   eax,eax
  403b9e:	jns    0x4039e8
  403ba4:	movsd  xmm0,QWORD PTR [rip+0x8034]        # 0x40bbe0
  403bac:	xorpd  xmm8,xmm0
  403bb1:	divsd  xmm6,xmm8
  403bb6:	movapd xmm0,xmm6
  403bba:	jmp    0x403873
  403bbf:	movapd xmm0,xmm7
  403bc3:	mov    edx,0xffffffff
  403bc8:	call   0x4062e0
  403bcd:	mov    rdx,rbx
  403bd0:	call   0x4036d0
  403bd5:	ucomisd xmm0,xmm9
  403bda:	mov    edx,0x1
  403bdf:	setp   al
  403be2:	cmove  edx,eax
  403be5:	movq   rax,xmm7
  403bea:	shr    rax,0x20
  403bee:	test   eax,eax
  403bf0:	js     0x403d4b
  403bf6:	test   dl,dl
  403bf8:	je     0x4039e8
  403bfe:	movsd  xmm0,QWORD PTR [rip+0x7fb2]        # 0x40bbb8
  403c06:	jmp    0x403873
  403c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c10:	lea    rbx,[rsp+0x68]
  403c15:	pxor   xmm9,xmm9
  403c1a:	movapd xmm0,xmm7
  403c1e:	mov    rdx,rbx
  403c21:	call   0x4036d0
  403c26:	ucomisd xmm0,xmm9
  403c2b:	jp     0x403c2f
  403c2d:	je     0x403ca3
  403c2f:	movq   rax,xmm7
  403c34:	shr    rax,0x20
  403c38:	test   eax,eax
  403c3a:	js     0x403ba4
  403c40:	movsd  xmm4,QWORD PTR [rip+0x7f98]        # 0x40bbe0
  403c48:	movapd xmm0,xmm8
  403c4d:	xorpd  xmm0,xmm4
  403c51:	jmp    0x403873
  403c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c60:	movsd  QWORD PTR [rsp+0x30],xmm8
  403c67:	fld    QWORD PTR [rsp+0x30]
  403c6b:	fsqrt  
  403c6d:	fstp   QWORD PTR [rsp+0x30]
  403c71:	movsd  xmm0,QWORD PTR [rsp+0x30]
  403c77:	jmp    0x403873
  403c7c:	nop    DWORD PTR [rax+0x0]
  403c80:	movsd  xmm0,QWORD PTR [rip+0x7f58]        # 0x40bbe0
  403c88:	xorpd  xmm8,xmm0
  403c8d:	ucomisd xmm8,xmm6
  403c92:	jp     0x403989
  403c98:	je     0x40386f
  403c9e:	jmp    0x403989
  403ca3:	movapd xmm0,xmm7
  403ca7:	mov    edx,0xffffffff
  403cac:	call   0x4062e0
  403cb1:	mov    rdx,rbx
  403cb4:	call   0x4036d0
  403cb9:	ucomisd xmm0,xmm9
  403cbe:	mov    edx,0x1
  403cc3:	setp   al
  403cc6:	cmove  edx,eax
  403cc9:	movq   rax,xmm7
  403cce:	shr    rax,0x20
  403cd2:	mov    ecx,eax
  403cd4:	shr    ecx,0x1f
  403cd7:	cmp    cl,dl
  403cd9:	ja     0x4039e8
  403cdf:	not    eax
  403ce1:	shr    eax,0x1f
  403ce4:	test   dl,dl
  403ce6:	je     0x403cf8
  403ce8:	test   al,al
  403cea:	movsd  xmm0,QWORD PTR [rip+0x7ece]        # 0x40bbc0
  403cf2:	jne    0x403873
  403cf8:	cmp    al,dl
  403cfa:	ja     0x403960
  403d00:	test   cl,cl
  403d02:	jne    0x403bf6
  403d08:	test   dl,dl
  403d0a:	movsd  xmm0,QWORD PTR [rip+0x7eae]        # 0x40bbc0
  403d12:	jne    0x403873
  403d18:	jmp    0x403960
  403d1d:	nop    DWORD PTR [rax]
  403d20:	cvttsd2si edx,xmm7
  403d24:	movapd xmm0,xmm8
  403d29:	call   0x405f70
  403d2e:	jmp    0x403873
  403d33:	call   0x408220
  403d38:	movsd  xmm6,QWORD PTR [rip+0x7e68]        # 0x40bba8
  403d40:	mov    DWORD PTR [rax],0x21
  403d46:	jmp    0x40384f
  403d4b:	test   dl,dl
  403d4d:	je     0x403960
  403d53:	movsd  xmm0,QWORD PTR [rip+0x7e65]        # 0x40bbc0
  403d5b:	jmp    0x403873
  403d60:	push   rsi
  403d61:	push   rbx
  403d62:	sub    rsp,0x28
  403d66:	movsxd rax,DWORD PTR [rcx+0x14]
  403d6a:	lea    rdx,[rcx+0x18]
  403d6e:	mov    rbx,rcx
  403d71:	lea    r9,[rdx+rax*4]
  403d75:	mov    rcx,rax
  403d78:	jmp    0x403d90
  403d7a:	nop    WORD PTR [rax+rax*1+0x0]
  403d80:	add    rdx,0x4
  403d84:	mov    DWORD PTR [rdx-0x4],0x0
  403d8b:	cmp    r9,rdx
  403d8e:	jbe    0x403db0
  403d90:	mov    r8d,DWORD PTR [rdx]
  403d93:	cmp    r8d,0xffffffff
  403d97:	je     0x403d80
  403d99:	add    r8d,0x1
  403d9d:	mov    rax,rbx
  403da0:	mov    DWORD PTR [rdx],r8d
  403da3:	add    rsp,0x28
  403da7:	pop    rbx
  403da8:	pop    rsi
  403da9:	ret    
  403daa:	nop    WORD PTR [rax+rax*1+0x0]
  403db0:	cmp    ecx,DWORD PTR [rbx+0xc]
  403db3:	jge    0x403dd0
  403db5:	add    ecx,0x1
  403db8:	mov    DWORD PTR [rbx+0x14],ecx
  403dbb:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  403dc3:	mov    rax,rbx
  403dc6:	add    rsp,0x28
  403dca:	pop    rbx
  403dcb:	pop    rsi
  403dcc:	ret    
  403dcd:	nop    DWORD PTR [rax]
  403dd0:	mov    eax,DWORD PTR [rbx+0x8]
  403dd3:	lea    ecx,[rax+0x1]
  403dd6:	call   0x4073d0
  403ddb:	mov    rsi,rax
  403dde:	lea    rcx,[rax+0x10]
  403de2:	movsxd rax,DWORD PTR [rbx+0x14]
  403de6:	lea    rdx,[rbx+0x10]
  403dea:	lea    r8,[rax*4+0x8]
  403df2:	call   0x408178
  403df7:	mov    rcx,rbx
  403dfa:	mov    rbx,rsi
  403dfd:	call   0x4074e0
  403e02:	movsxd rax,DWORD PTR [rsi+0x14]
  403e06:	mov    rcx,rax
  403e09:	jmp    0x403db5
  403e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e10:	push   r15
  403e12:	push   r14
  403e14:	push   r13
  403e16:	push   r12
  403e18:	push   rbp
  403e19:	push   rdi
  403e1a:	push   rsi
  403e1b:	push   rbx
  403e1c:	sub    rsp,0x48
  403e20:	mov    rdi,rdx
  403e23:	mov    r12,r8
  403e26:	lea    rdx,[rsp+0x3c]
  403e2b:	lea    r8,[rsp+0x38]
  403e30:	movsd  xmm0,QWORD PTR [rcx]
  403e34:	mov    r13,r9
  403e37:	call   0x407cb0
  403e3c:	mov    r10d,DWORD PTR [rsp+0x38]
  403e41:	mov    esi,DWORD PTR [rdi]
  403e43:	mov    rbx,rax
  403e46:	mov    edx,DWORD PTR [rsp+0x3c]
  403e4a:	sub    r10d,esi
  403e4d:	add    edx,r10d
  403e50:	test   r10d,r10d
  403e53:	mov    DWORD PTR [rsp+0x38],r10d
  403e58:	mov    DWORD PTR [rsp+0x3c],edx
  403e5c:	jle    0x404020
  403e62:	cmp    esi,0x35
  403e65:	je     0x404050
  403e6b:	cmp    DWORD PTR [rsp+0xb8],0x1
  403e73:	je     0x403f24
  403e79:	cmp    DWORD PTR [rsp+0xb8],0x2
  403e81:	je     0x403eb0
  403e83:	mov    eax,r10d
  403e86:	sub    eax,0x1
  403e89:	jne    0x404120
  403e8f:	mov    ecx,DWORD PTR [rsp+0xb0]
  403e96:	xor    r15d,r15d
  403e99:	test   ecx,ecx
  403e9b:	je     0x403fa7
  403ea1:	test   BYTE PTR [rbx+0x18],0x2
  403ea5:	je     0x40406e
  403eab:	nop    DWORD PTR [rax+rax*1+0x0]
  403eb0:	mov    edx,r10d
  403eb3:	mov    rcx,rbx
  403eb6:	call   0x408070
  403ebb:	mov    edx,DWORD PTR [rsp+0x38]
  403ebf:	mov    rcx,rbx
  403ec2:	mov    r14d,eax
  403ec5:	call   0x406d20
  403eca:	mov    rcx,rbx
  403ecd:	call   0x403d60
  403ed2:	mov    edx,esi
  403ed4:	mov    rbx,rax
  403ed7:	and    edx,0x1f
  403eda:	jne    0x404110
  403ee0:	mov    eax,DWORD PTR [rbx+0x14]
  403ee3:	sub    eax,0x1
  403ee6:	cdqe   
  403ee8:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  403eed:	xor    eax,0x1f
  403ef0:	cmp    edx,eax
  403ef2:	je     0x4041a0
  403ef8:	test   r14d,r14d
  403efb:	jne    0x403f05
  403efd:	mov    r14d,DWORD PTR [rbx+0x18]
  403f01:	and    r14d,0x1
  403f05:	mov    edx,0x1
  403f0a:	mov    rcx,rbx
  403f0d:	mov    ebp,0x20
  403f12:	call   0x406d20
  403f17:	mov    eax,DWORD PTR [rsp+0x3c]
  403f1b:	lea    edx,[rax+0x1]
  403f1e:	mov    DWORD PTR [rsp+0x3c],edx
  403f22:	jmp    0x403f4f
  403f24:	mov    edx,r10d
  403f27:	mov    rcx,rax
  403f2a:	call   0x408070
  403f2f:	test   eax,eax
  403f31:	mov    r14d,eax
  403f34:	jne    0x403fc3
  403f3a:	mov    edx,DWORD PTR [rsp+0x38]
  403f3e:	mov    rcx,rbx
  403f41:	xor    r14d,r14d
  403f44:	xor    ebp,ebp
  403f46:	call   0x406d20
  403f4b:	mov    edx,DWORD PTR [rsp+0x3c]
  403f4f:	mov    eax,DWORD PTR [rdi+0x4]
  403f52:	cmp    eax,edx
  403f54:	jle    0x403fe0
  403f5a:	mov    r8d,eax
  403f5d:	mov    DWORD PTR [rsp+0x3c],eax
  403f61:	sub    r8d,edx
  403f64:	cmp    esi,r8d
  403f67:	jge    0x4040a0
  403f6d:	mov    rdi,QWORD PTR [rsp+0xc0]
  403f75:	mov    DWORD PTR [rbx+0x14],0x0
  403f7c:	mov    edx,eax
  403f7e:	xor    ebp,ebp
  403f80:	mov    DWORD PTR [rdi],0x50
  403f86:	mov    DWORD PTR [r12],edx
  403f8a:	mov    r8,rbx
  403f8d:	mov    edx,esi
  403f8f:	mov    rcx,r13
  403f92:	mov    r15d,0x1
  403f98:	call   0x408000
  403f9d:	mov    rax,QWORD PTR [rsp+0xc0]
  403fa5:	or     DWORD PTR [rax],ebp
  403fa7:	mov    rcx,rbx
  403faa:	call   0x4074e0
  403faf:	mov    eax,r15d
  403fb2:	add    rsp,0x48
  403fb6:	pop    rbx
  403fb7:	pop    rsi
  403fb8:	pop    rdi
  403fb9:	pop    rbp
  403fba:	pop    r12
  403fbc:	pop    r13
  403fbe:	pop    r14
  403fc0:	pop    r15
  403fc2:	ret    
  403fc3:	mov    edx,DWORD PTR [rsp+0x38]
  403fc7:	mov    rcx,rbx
  403fca:	mov    ebp,0x10
  403fcf:	call   0x406d20
  403fd4:	jmp    0x403f4b
  403fd9:	nop    DWORD PTR [rax+0x0]
  403fe0:	mov    eax,DWORD PTR [rdi+0x8]
  403fe3:	cmp    eax,edx
  403fe5:	jge    0x403f86
  403fe7:	add    eax,0x1
  403fea:	xor    ebp,ebp
  403fec:	mov    DWORD PTR [rsp+0x3c],eax
  403ff0:	mov    rax,QWORD PTR [rsp+0xc0]
  403ff8:	mov    DWORD PTR [rax],0xa3
  403ffe:	call   0x408220
  404003:	mov    DWORD PTR [rax],0x22
  404009:	mov    DWORD PTR [rbx+0x14],0x0
  404010:	mov    edx,DWORD PTR [rsp+0x3c]
  404014:	jmp    0x403f86
  404019:	nop    DWORD PTR [rax+0x0]
  404020:	mov    r9d,DWORD PTR [rsp+0xb0]
  404028:	xor    r15d,r15d
  40402b:	test   r9d,r9d
  40402e:	je     0x403fa7
  404034:	test   r10d,r10d
  404037:	jne    0x404180
  40403d:	xor    r14d,r14d
  404040:	xor    ebp,ebp
  404042:	jmp    0x403f4f
  404047:	nop    WORD PTR [rax+rax*1+0x0]
  404050:	mov    r8d,DWORD PTR [rsp+0xb0]
  404058:	xor    r15d,r15d
  40405b:	test   r8d,r8d
  40405e:	je     0x403fa7
  404064:	cmp    DWORD PTR [rdi+0xc],0x1
  404068:	jne    0x403fa7
  40406e:	mov    edx,r10d
  404071:	mov    rcx,rbx
  404074:	call   0x408070
  404079:	test   eax,eax
  40407b:	mov    r14d,eax
  40407e:	je     0x403f3a
  404084:	mov    edx,DWORD PTR [rsp+0x38]
  404088:	mov    rcx,rbx
  40408b:	mov    ebp,0x10
  404090:	call   0x406d20
  404095:	mov    edx,DWORD PTR [rsp+0x3c]
  404099:	jmp    0x403f4f
  40409e:	xchg   ax,ax
  4040a0:	mov    edx,DWORD PTR [rdi+0x10]
  4040a3:	test   edx,edx
  4040a5:	jne    0x403f6d
  4040ab:	lea    edi,[r8-0x1]
  4040af:	test   r14d,r14d
  4040b2:	sete   al
  4040b5:	test   edi,edi
  4040b7:	jle    0x40415c
  4040bd:	test   al,al
  4040bf:	jne    0x404140
  4040c1:	mov    ecx,edi
  4040c3:	sar    edi,0x5
  4040c6:	mov    eax,0x1
  4040cb:	movsxd rdi,edi
  4040ce:	shl    eax,cl
  4040d0:	mov    edx,r8d
  4040d3:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  4040d7:	mov    rcx,rbx
  4040da:	mov    edi,eax
  4040dc:	call   0x406d20
  4040e1:	mov    rax,QWORD PTR [rsp+0xc0]
  4040e9:	test   edi,edi
  4040eb:	mov    DWORD PTR [rax],0x2
  4040f1:	jne    0x4041b0
  4040f7:	test   r14d,r14d
  4040fa:	mov    edx,DWORD PTR [rsp+0x3c]
  4040fe:	je     0x403f86
  404104:	mov    ebp,0x50
  404109:	jmp    0x403f86
  40410e:	xchg   ax,ax
  404110:	mov    eax,0x20
  404115:	sub    eax,edx
  404117:	mov    edx,eax
  404119:	jmp    0x403ee0
  40411e:	xchg   ax,ax
  404120:	mov    edx,eax
  404122:	sar    edx,0x5
  404125:	movsxd rdx,edx
  404128:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  40412c:	bt     edx,eax
  40412f:	jb     0x403eb0
  404135:	jmp    0x40406e
  40413a:	nop    WORD PTR [rax+rax*1+0x0]
  404140:	mov    edx,edi
  404142:	mov    rcx,rbx
  404145:	mov    DWORD PTR [rsp+0x2c],r8d
  40414a:	call   0x408070
  40414f:	mov    r8d,DWORD PTR [rsp+0x2c]
  404154:	test   eax,eax
  404156:	mov    r14d,eax
  404159:	sete   al
  40415c:	test   al,al
  40415e:	je     0x4040c1
  404164:	mov    eax,DWORD PTR [rsp+0xb0]
  40416b:	xor    r15d,r15d
  40416e:	test   eax,eax
  404170:	je     0x403fa7
  404176:	jmp    0x4040c1
  40417b:	nop    DWORD PTR [rax+rax*1+0x0]
  404180:	mov    edx,r10d
  404183:	mov    rcx,rbx
  404186:	neg    edx
  404188:	call   0x4078e0
  40418d:	mov    edx,DWORD PTR [rsp+0x3c]
  404191:	mov    rbx,rax
  404194:	jmp    0x40403d
  404199:	nop    DWORD PTR [rax+0x0]
  4041a0:	mov    edx,DWORD PTR [rsp+0x3c]
  4041a4:	mov    ebp,0x20
  4041a9:	jmp    0x403f4f
  4041ae:	xchg   ax,ax
  4041b0:	mov    rcx,rbx
  4041b3:	mov    ebp,0x60
  4041b8:	call   0x403d60
  4041bd:	mov    edx,DWORD PTR [rsp+0x3c]
  4041c1:	mov    rbx,rax
  4041c4:	jmp    0x403f86
  4041c9:	nop    DWORD PTR [rax+0x0]
  4041d0:	movsxd rdx,DWORD PTR [rcx+0x14]
  4041d4:	lea    rax,[rcx+0x18]
  4041d8:	lea    rcx,[rax+rdx*4]
  4041dc:	jmp    0x4041f0
  4041de:	xchg   ax,ax
  4041e0:	add    rax,0x4
  4041e4:	mov    DWORD PTR [rax-0x4],0xffffffff
  4041eb:	cmp    rcx,rax
  4041ee:	jbe    0x404200
  4041f0:	mov    edx,DWORD PTR [rax]
  4041f2:	test   edx,edx
  4041f4:	je     0x4041e0
  4041f6:	sub    edx,0x1
  4041f9:	mov    DWORD PTR [rax],edx
  4041fb:	ret    
  4041fc:	nop    DWORD PTR [rax+0x0]
  404200:	repz ret 
  404202:	nop    DWORD PTR [rax+0x0]
  404206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404210:	push   rbx
  404211:	sub    rsp,0x30
  404215:	lea    ebx,[rdx+0x1f]
  404218:	mov    rax,rcx
  40421b:	sar    ebx,0x5
  40421e:	cmp    ebx,DWORD PTR [rcx+0x8]
  404221:	jg     0x4042a0
  404223:	mov    r9d,edx
  404226:	sar    r9d,0x5
  40422a:	and    edx,0x1f
  40422d:	je     0x404280
  40422f:	add    r9d,0x1
  404233:	lea    r8,[rax+0x18]
  404237:	mov    DWORD PTR [rax+0x14],r9d
  40423b:	movsxd r9,r9d
  40423e:	lea    r9,[r8+r9*4]
  404242:	cmp    r8,r9
  404245:	jae    0x404265
  404247:	nop    WORD PTR [rax+rax*1+0x0]
  404250:	add    r8,0x4
  404254:	mov    DWORD PTR [r8-0x4],0xffffffff
  40425c:	cmp    r8,r9
  40425f:	jb     0x404250
  404261:	test   edx,edx
  404263:	je     0x404270
  404265:	mov    ecx,0x20
  40426a:	sub    ecx,edx
  40426c:	shr    DWORD PTR [r8-0x4],cl
  404270:	add    rsp,0x30
  404274:	pop    rbx
  404275:	ret    
  404276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404280:	lea    r8,[rax+0x18]
  404284:	mov    DWORD PTR [rax+0x14],r9d
  404288:	movsxd r9,r9d
  40428b:	lea    r9,[r8+r9*4]
  40428f:	cmp    r8,r9
  404292:	jb     0x404250
  404294:	jmp    0x404270
  404296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042a0:	mov    DWORD PTR [rsp+0x2c],edx
  4042a4:	call   0x4074e0
  4042a9:	mov    ecx,ebx
  4042ab:	call   0x4073d0
  4042b0:	mov    edx,DWORD PTR [rsp+0x2c]
  4042b4:	jmp    0x404223
  4042b9:	nop    DWORD PTR [rax+0x0]
  4042c0:	push   r15
  4042c2:	push   r14
  4042c4:	push   r13
  4042c6:	push   r12
  4042c8:	push   rbp
  4042c9:	push   rdi
  4042ca:	push   rsi
  4042cb:	push   rbx
  4042cc:	sub    rsp,0x138
  4042d3:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  4042db:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  4042e3:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  4042ec:	movaps XMMWORD PTR [rsp+0x100],xmm9
  4042f5:	movaps XMMWORD PTR [rsp+0x110],xmm10
  4042fe:	movaps XMMWORD PTR [rsp+0x120],xmm11
  404307:	mov    rdi,rcx
  40430a:	mov    QWORD PTR [rsp+0x190],r8
  404312:	mov    QWORD PTR [rsp+0x188],rdx
  40431a:	mov    QWORD PTR [rsp+0x198],r9
  404322:	call   0x408188
  404327:	mov    rbp,QWORD PTR [rax]
  40432a:	mov    rcx,rbp
  40432d:	call   0x408138
  404332:	mov    r14,rax
  404335:	mov    rax,QWORD PTR [rsp+0x190]
  40433d:	mov    DWORD PTR [rsp+0xa4],0x0
  404348:	mov    QWORD PTR [rsp+0xb0],0x0
  404354:	mov    QWORD PTR [rsp+0xc8],0x0
  404360:	lea    rcx,[rip+0x78e5]        # 0x40bc4c
  404367:	mov    QWORD PTR [rsp+0xc0],rdi
  40436f:	mov    eax,DWORD PTR [rax]
  404371:	mov    DWORD PTR [rsp+0x40],eax
  404375:	mov    rax,rdi
  404378:	movzx  r8d,BYTE PTR [rax]
  40437c:	cmp    r8b,0x2d
  404380:	ja     0x404530
  404386:	movzx  edx,r8b
  40438a:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40438e:	add    rdx,rcx
  404391:	jmp    rdx
  404393:	mov    DWORD PTR [rsp+0xa4],0x6
  40439e:	mov    QWORD PTR [rsp+0xc0],rdi
  4043a6:	xor    r8d,r8d
  4043a9:	mov    DWORD PTR [rsp+0x58],0x0
  4043b1:	cmp    QWORD PTR [rsp+0x188],0x0
  4043ba:	je     0x4043cf
  4043bc:	mov    rax,QWORD PTR [rsp+0xc0]
  4043c4:	mov    rsi,QWORD PTR [rsp+0x188]
  4043cc:	mov    QWORD PTR [rsi],rax
  4043cf:	mov    eax,DWORD PTR [rsp+0x58]
  4043d3:	test   eax,eax
  4043d5:	jne    0x404450
  4043d7:	test   r8,r8
  4043da:	je     0x4043fa
  4043dc:	mov    rcx,QWORD PTR [rsp+0x1a0]
  4043e4:	mov    edx,DWORD PTR [rsp+0x40]
  4043e8:	call   0x408000
  4043ed:	mov    rcx,QWORD PTR [rsp+0xc8]
  4043f5:	call   0x4074e0
  4043fa:	mov    eax,DWORD PTR [rsp+0xa4]
  404401:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  404409:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  404411:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  40441a:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  404423:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  40442c:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  404435:	add    rsp,0x138
  40443c:	pop    rbx
  40443d:	pop    rsi
  40443e:	pop    rdi
  40443f:	pop    rbp
  404440:	pop    r12
  404442:	pop    r13
  404444:	pop    r14
  404446:	pop    r15
  404448:	ret    
  404449:	nop    DWORD PTR [rax+0x0]
  404450:	or     DWORD PTR [rsp+0xa4],0x8
  404458:	jmp    0x4043d7
  40445d:	nop    DWORD PTR [rax]
  404460:	mov    rdx,rax
  404463:	mov    DWORD PTR [rsp+0x58],0x0
  40446b:	add    rax,0x1
  40446f:	mov    QWORD PTR [rsp+0xc0],rax
  404477:	movzx  r8d,BYTE PTR [rdx+0x1]
  40447c:	test   r8b,r8b
  40447f:	je     0x404393
  404485:	xor    r12d,r12d
  404488:	cmp    r8b,0x30
  40448c:	mov    r15,rax
  40448f:	je     0x404548
  404495:	mov    rax,QWORD PTR [rsp+0x190]
  40449d:	mov    eax,DWORD PTR [rax+0x10]
  4044a0:	mov    DWORD PTR [rsp+0x84],eax
  4044a7:	movsx  eax,r8b
  4044ab:	lea    edx,[rax-0x30]
  4044ae:	cmp    edx,0x9
  4044b1:	ja     0x4045a3
  4044b7:	lea    rcx,[r15+0x1]
  4044bb:	xor    edx,edx
  4044bd:	xor    esi,esi
  4044bf:	xor    ebx,ebx
  4044c1:	jmp    0x4044f5
  4044c3:	lea    eax,[rsi+rsi*4]
  4044c6:	movsx  r8d,r8b
  4044ca:	lea    esi,[r8+rax*2-0x30]
  4044cf:	mov    QWORD PTR [rsp+0xc0],rcx
  4044d7:	movsx  eax,BYTE PTR [rcx]
  4044da:	add    ebx,0x1
  4044dd:	mov    r9,rcx
  4044e0:	lea    rcx,[rcx+0x1]
  4044e4:	lea    r10d,[rax-0x30]
  4044e8:	mov    r8d,eax
  4044eb:	cmp    r10d,0x9
  4044ef:	ja     0x4045b0
  4044f5:	cmp    ebx,0x8
  4044f8:	jle    0x4044c3
  4044fa:	cmp    ebx,0xf
  4044fd:	jg     0x4044cf
  4044ff:	lea    eax,[rdx+rdx*4]
  404502:	movsx  r8d,r8b
  404506:	lea    edx,[r8+rax*2-0x30]
  40450b:	jmp    0x4044cf
  40450d:	nop    DWORD PTR [rax]
  404510:	add    rax,0x1
  404514:	mov    QWORD PTR [rsp+0xc0],rax
  40451c:	movzx  r8d,BYTE PTR [rax]
  404520:	cmp    r8b,0x2d
  404524:	jbe    0x404386
  40452a:	nop    WORD PTR [rax+rax*1+0x0]
  404530:	xor    r12d,r12d
  404533:	cmp    r8b,0x30
  404537:	mov    DWORD PTR [rsp+0x58],0x0
  40453f:	mov    r15,rax
  404542:	jne    0x404495
  404548:	movzx  edx,BYTE PTR [rax+0x1]
  40454c:	cmp    dl,0x58
  40454f:	je     0x40570f
  404555:	add    rax,0x1
  404559:	cmp    dl,0x78
  40455c:	je     0x40570f
  404562:	mov    r15,rax
  404565:	mov    QWORD PTR [rsp+0xc0],rax
  40456d:	add    rax,0x1
  404571:	movzx  edx,BYTE PTR [rax-0x1]
  404575:	cmp    dl,0x30
  404578:	je     0x404562
  40457a:	xor    r8d,r8d
  40457d:	test   dl,dl
  40457f:	je     0x4043b1
  404585:	mov    r8d,edx
  404588:	mov    r12d,0x1
  40458e:	jmp    0x404495
  404593:	mov    rdx,rax
  404596:	mov    DWORD PTR [rsp+0x58],0x1
  40459e:	jmp    0x40446b
  4045a3:	mov    r9,r15
  4045a6:	xor    edx,edx
  4045a8:	xor    esi,esi
  4045aa:	xor    ebx,ebx
  4045ac:	nop    DWORD PTR [rax+0x0]
  4045b0:	movsx  ecx,BYTE PTR [rbp+0x0]
  4045b4:	cmp    ecx,eax
  4045b6:	je     0x4049b4
  4045bc:	mov    ebp,ebx
  4045be:	xor    ecx,ecx
  4045c0:	xor    r13d,r13d
  4045c3:	xor    r11d,r11d
  4045c6:	mov    r8d,eax
  4045c9:	and    r8d,0xffffffdf
  4045cd:	cmp    r8d,0x45
  4045d1:	je     0x4046d0
  4045d7:	xor    r8d,r8d
  4045da:	test   ebp,ebp
  4045dc:	jne    0x404845
  4045e2:	or     ecx,r12d
  4045e5:	jne    0x404838
  4045eb:	test   r11d,r11d
  4045ee:	jne    0x404803
  4045f4:	cmp    eax,0x4e
  4045f7:	je     0x404611
  4045f9:	jle    0x4047fa
  4045ff:	cmp    eax,0x69
  404602:	je     0x40599a
  404608:	cmp    eax,0x6e
  40460b:	jne    0x404803
  404611:	lea    rbx,[rsp+0xc0]
  404619:	lea    rdx,[rip+0x7629]        # 0x40bc49
  404620:	mov    rcx,rbx
  404623:	call   0x407fb0
  404628:	test   eax,eax
  40462a:	je     0x404803
  404630:	mov    rax,QWORD PTR [rsp+0x190]
  404638:	mov    rsi,QWORD PTR [rsp+0x198]
  404640:	xor    ebp,ebp
  404642:	mov    rdx,QWORD PTR [rsp+0xc0]
  40464a:	mov    DWORD PTR [rsp+0xa4],0x4
  404655:	mov    eax,DWORD PTR [rax+0x8]
  404658:	mov    DWORD PTR [rsp+0x44],eax
  40465c:	add    eax,0x1
  40465f:	mov    DWORD PTR [rsi],eax
  404661:	cmp    BYTE PTR [rdx],0x28
  404664:	je     0x405d76
  40466a:	nop    WORD PTR [rax+rax*1+0x0]
  404670:	mov    rsi,QWORD PTR [rsp+0x198]
  404678:	mov    DWORD PTR [rsi],eax
  40467a:	mov    r8,QWORD PTR [rsp+0xc8]
  404682:	test   ebp,ebp
  404684:	je     0x4043b1
  40468a:	mov    r9d,DWORD PTR [rsp+0x84]
  404692:	test   r9d,r9d
  404695:	jne    0x404dc4
  40469b:	mov    eax,DWORD PTR [rsp+0xa4]
  4046a2:	mov    ecx,DWORD PTR [r8+0x14]
  4046a6:	xor    edx,edx
  4046a8:	and    eax,0xfffffff8
  4046ab:	test   ecx,ecx
  4046ad:	setg   dl
  4046b0:	add    edx,edx
  4046b2:	or     eax,edx
  4046b4:	test   al,0x30
  4046b6:	jne    0x404823
  4046bc:	mov    DWORD PTR [rsp+0xa4],eax
  4046c3:	jmp    0x4043b1
  4046c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4046d0:	mov    eax,ebp
  4046d2:	or     eax,ecx
  4046d4:	or     eax,r12d
  4046d7:	je     0x404803
  4046dd:	mov    rdi,QWORD PTR [rsp+0xc0]
  4046e5:	lea    rax,[rdi+0x1]
  4046e9:	mov    QWORD PTR [rsp+0xc0],rax
  4046f1:	movsx  eax,BYTE PTR [rdi+0x1]
  4046f5:	cmp    al,0x2b
  4046f7:	je     0x4058b8
  4046fd:	cmp    al,0x2d
  4046ff:	je     0x404cc1
  404705:	mov    DWORD PTR [rsp+0x44],0x0
  40470d:	lea    r8d,[rax-0x30]
  404711:	cmp    r8d,0x9
  404715:	ja     0x404df0
  40471b:	cmp    eax,0x30
  40471e:	jne    0x404745
  404720:	mov    rax,QWORD PTR [rsp+0xc0]
  404728:	lea    r8,[rax+0x1]
  40472c:	nop    DWORD PTR [rax+0x0]
  404730:	mov    QWORD PTR [rsp+0xc0],r8
  404738:	movsx  eax,BYTE PTR [r8]
  40473c:	add    r8,0x1
  404740:	cmp    eax,0x30
  404743:	je     0x404730
  404745:	lea    r9d,[rax-0x31]
  404749:	xor    r8d,r8d
  40474c:	cmp    r9d,0x8
  404750:	ja     0x4045da
  404756:	lea    r9d,[rax-0x30]
  40475a:	mov    rax,QWORD PTR [rsp+0xc0]
  404762:	lea    r10,[rax+0x1]
  404766:	mov    QWORD PTR [rsp+0x50],rax
  40476b:	mov    QWORD PTR [rsp+0xc0],r10
  404773:	mov    QWORD PTR [rsp+0x48],r10
  404778:	mov    r10,rax
  40477b:	movsx  eax,BYTE PTR [rax+0x1]
  40477f:	lea    r8d,[rax-0x30]
  404783:	cmp    r8d,0x9
  404787:	ja     0x4047c3
  404789:	lea    r8,[r10+0x2]
  40478d:	mov    DWORD PTR [rsp+0x5c],r11d
  404792:	lea    r9d,[r9+r9*4]
  404796:	mov    QWORD PTR [rsp+0xc0],r8
  40479e:	mov    r11,r8
  4047a1:	add    r8,0x1
  4047a5:	lea    r9d,[rax+r9*2-0x30]
  4047aa:	movsx  eax,BYTE PTR [r8-0x1]
  4047af:	lea    r10d,[rax-0x30]
  4047b3:	cmp    r10d,0x9
  4047b7:	jbe    0x404792
  4047b9:	mov    QWORD PTR [rsp+0x48],r11
  4047be:	mov    r11d,DWORD PTR [rsp+0x5c]
  4047c3:	mov    r8,QWORD PTR [rsp+0x48]
  4047c8:	sub    r8,QWORD PTR [rsp+0x50]
  4047cd:	cmp    r8,0x8
  4047d1:	jg     0x40598f
  4047d7:	cmp    r9d,0x4e1f
  4047de:	jg     0x40598f
  4047e4:	mov    r10d,DWORD PTR [rsp+0x44]
  4047e9:	mov    r8d,r10d
  4047ec:	neg    r8d
  4047ef:	xor    r8d,r9d
  4047f2:	add    r8d,r10d
  4047f5:	jmp    0x4045da
  4047fa:	cmp    eax,0x49
  4047fd:	je     0x40599a
  404803:	mov    DWORD PTR [rsp+0xa4],0x6
  40480e:	mov    QWORD PTR [rsp+0xc0],rdi
  404816:	mov    r8,QWORD PTR [rsp+0xc8]
  40481e:	jmp    0x4043b1
  404823:	or     eax,0x40
  404826:	mov    DWORD PTR [rsp+0xa4],eax
  40482d:	call   0x408220
  404832:	mov    DWORD PTR [rax],0x22
  404838:	mov    r8,QWORD PTR [rsp+0xc8]
  404840:	jmp    0x4043b1
  404845:	mov    rax,QWORD PTR [rsp+0x190]
  40484d:	mov    ecx,DWORD PTR [rsp+0x58]
  404851:	sub    r8d,r13d
  404854:	mov    DWORD PTR [rsp+0xa4],0x1
  40485f:	mov    DWORD PTR [rsp+0x68],r8d
  404864:	mov    eax,DWORD PTR [rax+0xc]
  404867:	mov    DWORD PTR [rsp+0x44],eax
  40486b:	and    eax,0x3
  40486e:	mov    edi,eax
  404870:	sub    edi,ecx
  404872:	cmp    eax,0x2
  404875:	mov    DWORD PTR [rsp+0x6c],edi
  404879:	je     0x404893
  40487b:	lea    edi,[rcx+0x1]
  40487e:	cmp    eax,0x3
  404881:	mov    DWORD PTR [rsp+0x6c],edi
  404885:	je     0x404893
  404887:	test   eax,eax
  404889:	sete   al
  40488c:	movzx  eax,al
  40488f:	mov    DWORD PTR [rsp+0x6c],eax
  404893:	pxor   xmm0,xmm0
  404897:	mov    eax,esi
  404899:	test   ebx,ebx
  40489b:	cmove  ebx,ebp
  40489e:	mov    edi,0x10
  4048a3:	cmp    ebp,0x10
  4048a6:	cmovle edi,ebp
  4048a9:	cvtsi2sd xmm0,rax
  4048ae:	cmp    edi,0x9
  4048b1:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4048ba:	jle    0x4048e3
  4048bc:	pxor   xmm1,xmm1
  4048c0:	lea    eax,[rdi-0x9]
  4048c3:	mov    rcx,QWORD PTR [rip+0x7876]        # 0x40c140
  4048ca:	cdqe   
  4048cc:	cvtsi2sd xmm1,rdx
  4048d1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  4048d6:	addsd  xmm0,xmm1
  4048da:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4048e3:	cmp    ebp,0xf
  4048e6:	jg     0x404a55
  4048ec:	cmp    DWORD PTR [rsp+0x40],0x35
  4048f1:	jg     0x404a55
  4048f7:	cmp    DWORD PTR [rsp+0x68],0x0
  4048fc:	je     0x4058e0
  404902:	jle    0x404d69
  404908:	cmp    DWORD PTR [rsp+0x68],0x16
  40490d:	jg     0x40590a
  404913:	movsxd rcx,DWORD PTR [rsp+0x68]
  404918:	mov    edx,DWORD PTR [rsp+0xb0]
  40491f:	lea    rax,[rip+0x741a]        # 0x40bd40
  404926:	test   edx,edx
  404928:	mov    r8d,DWORD PTR [rax+rcx*4]
  40492c:	je     0x4059fe
  404932:	tzcnt  edx,edx
  404936:	mov    eax,0x35
  40493b:	sub    eax,edx
  40493d:	mov    rdx,QWORD PTR [rip+0x77fc]        # 0x40c140
  404944:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40494d:	add    eax,r8d
  404950:	cmp    eax,0x35
  404953:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  404958:	lea    rdx,[rsp+0xa4]
  404960:	setle  al
  404963:	movzx  eax,al
  404966:	lea    rcx,[rsp+0xb0]
  40496e:	mov    QWORD PTR [rsp+0x30],rdx
  404973:	mov    edx,DWORD PTR [rsp+0x6c]
  404977:	mov    DWORD PTR [rsp+0x20],eax
  40497b:	mov    DWORD PTR [rsp+0x28],edx
  40497f:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404988:	mov    r9,QWORD PTR [rsp+0x1a0]
  404990:	mov    r8,QWORD PTR [rsp+0x198]
  404998:	mov    rdx,QWORD PTR [rsp+0x190]
  4049a0:	call   0x403e10
  4049a5:	test   eax,eax
  4049a7:	jne    0x404838
  4049ad:	xor    eax,eax
  4049af:	jmp    0x404a59
  4049b4:	movzx  r8d,BYTE PTR [rbp+0x1]
  4049b9:	test   r8b,r8b
  4049bc:	je     0x405c3d
  4049c2:	cmp    r8b,BYTE PTR [r9+0x1]
  4049c6:	jne    0x4045bc
  4049cc:	mov    eax,0x2
  4049d1:	jmp    0x4049e2
  4049d3:	add    rax,0x1
  4049d7:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  4049dc:	jne    0x404be0
  4049e2:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  4049e8:	test   r8b,r8b
  4049eb:	jne    0x4049d3
  4049ed:	lea    r8,[r9+rax*1]
  4049f1:	test   ebx,ebx
  4049f3:	mov    QWORD PTR [rsp+0xc0],r8
  4049fb:	movsx  eax,BYTE PTR [r8]
  4049ff:	je     0x404cde
  404a05:	lea    r8d,[rax-0x30]
  404a09:	xor    ecx,ecx
  404a0b:	xor    r13d,r13d
  404a0e:	mov    ebp,ebx
  404a10:	cmp    r8d,0x9
  404a14:	ja     0x404a4a
  404a16:	test   r8d,r8d
  404a19:	lea    eax,[rcx+0x1]
  404a1c:	mov    r9d,r8d
  404a1f:	jne    0x405bbd
  404a25:	mov    r8,QWORD PTR [rsp+0xc0]
  404a2d:	mov    ecx,eax
  404a2f:	lea    rax,[r8+0x1]
  404a33:	mov    QWORD PTR [rsp+0xc0],rax
  404a3b:	movsx  eax,BYTE PTR [r8+0x1]
  404a40:	lea    r8d,[rax-0x30]
  404a44:	cmp    r8d,0x9
  404a48:	jbe    0x404a16
  404a4a:	mov    r11d,0x1
  404a50:	jmp    0x4045c6
  404a55:	mov    eax,DWORD PTR [rsp+0x68]
  404a59:	mov    edx,ebp
  404a5b:	sub    edx,edi
  404a5d:	add    edx,eax
  404a5f:	cmp    edx,0x0
  404a62:	jle    0x40579a
  404a68:	mov    eax,edx
  404a6a:	and    eax,0xf
  404a6d:	je     0x404a8f
  404a6f:	mov    rcx,QWORD PTR [rip+0x76ca]        # 0x40c140
  404a76:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404a7f:	cdqe   
  404a81:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  404a86:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404a8f:	and    edx,0xfffffff0
  404a92:	jne    0x404bf1
  404a98:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404aa1:	xor    edi,edi
  404aa3:	lea    rdx,[rsp+0xac]
  404aab:	lea    r8,[rsp+0xa8]
  404ab3:	call   0x407cb0
  404ab8:	mov    edx,DWORD PTR [rsp+0xa8]
  404abf:	mov    r13d,DWORD PTR [rsp+0x40]
  404ac4:	add    edi,DWORD PTR [rsp+0xac]
  404acb:	mov    QWORD PTR [rsp+0xc8],rax
  404ad3:	mov    r12d,edx
  404ad6:	sub    r12d,r13d
  404ad9:	test   r12d,r12d
  404adc:	mov    DWORD PTR [rsp+0xac],edi
  404ae3:	jle    0x404b0c
  404ae5:	mov    edx,r12d
  404ae8:	mov    rcx,rax
  404aeb:	call   0x406d20
  404af0:	mov    edi,DWORD PTR [rsp+0xac]
  404af7:	mov    DWORD PTR [rsp+0xa8],r13d
  404aff:	mov    edx,r13d
  404b02:	add    edi,r12d
  404b05:	mov    DWORD PTR [rsp+0xac],edi
  404b0c:	lea    eax,[rdi+rdx*1]
  404b0f:	sub    eax,DWORD PTR [rsp+0x40]
  404b13:	mov    ecx,eax
  404b15:	mov    DWORD PTR [rsp+0x8c],eax
  404b1c:	mov    rax,QWORD PTR [rsp+0x190]
  404b24:	mov    eax,DWORD PTR [rax+0x8]
  404b27:	mov    DWORD PTR [rsp+0x44],eax
  404b2b:	add    eax,0x1
  404b2e:	cmp    ecx,eax
  404b30:	jg     0x4056d5
  404b36:	mov    rax,QWORD PTR [rsp+0x190]
  404b3e:	mov    eax,DWORD PTR [rax+0x4]
  404b41:	cmp    ecx,eax
  404b43:	mov    DWORD PTR [rsp+0x50],eax
  404b47:	jge    0x4058d3
  404b4d:	sub    edi,eax
  404b4f:	cmp    edi,0x0
  404b52:	jle    0x404d3c
  404b58:	mov    rcx,QWORD PTR [rsp+0xc8]
  404b60:	mov    edx,edi
  404b62:	call   0x4078e0
  404b67:	add    DWORD PTR [rsp+0xa8],edi
  404b6e:	mov    QWORD PTR [rsp+0xc8],rax
  404b76:	mov    eax,DWORD PTR [rsp+0x50]
  404b7a:	mov    DWORD PTR [rsp+0xac],eax
  404b81:	mov    eax,DWORD PTR [rsp+0x84]
  404b88:	test   eax,eax
  404b8a:	je     0x404e00
  404b90:	mov    eax,DWORD PTR [rsp+0x8c]
  404b97:	add    eax,0x1
  404b9a:	cmp    DWORD PTR [rsp+0x50],eax
  404b9e:	jle    0x404e00
  404ba4:	mov    r8,QWORD PTR [rsp+0xc8]
  404bac:	mov    rax,QWORD PTR [rsp+0x198]
  404bb4:	mov    esi,DWORD PTR [rsp+0x50]
  404bb8:	mov    DWORD PTR [rsp+0xa4],0x50
  404bc3:	mov    DWORD PTR [r8+0x14],0x0
  404bcb:	mov    DWORD PTR [r8+0x18],0x0
  404bd3:	mov    DWORD PTR [rax],esi
  404bd5:	jmp    0x40468a
  404bda:	nop    WORD PTR [rax+rax*1+0x0]
  404be0:	mov    eax,ecx
  404be2:	mov    ebp,ebx
  404be4:	xor    ecx,ecx
  404be6:	xor    r13d,r13d
  404be9:	xor    r11d,r11d
  404bec:	jmp    0x4045c6
  404bf1:	sar    edx,0x4
  404bf4:	cmp    edx,0xf
  404bf7:	jle    0x405cc3
  404bfd:	mov    rax,QWORD PTR [rip+0x745c]        # 0x40c060
  404c04:	mov    ecx,edx
  404c06:	xor    r8d,r8d
  404c09:	movsd  xmm1,QWORD PTR [rax+0x20]
  404c0e:	xchg   ax,ax
  404c10:	mov    eax,DWORD PTR [rsp+0xb4]
  404c17:	sub    ecx,0x10
  404c1a:	mov    r9d,eax
  404c1d:	and    eax,0x800fffff
  404c22:	or     eax,0x3ff00000
  404c27:	and    r9d,0x7ff00000
  404c2e:	mov    DWORD PTR [rsp+0xb4],eax
  404c35:	shr    r9d,0x14
  404c39:	cmp    ecx,0xf
  404c3c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404c45:	lea    r8d,[r8+r9*1-0x3ff]
  404c4d:	mulsd  xmm0,xmm1
  404c51:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404c5a:	jg     0x404c10
  404c5c:	and    edx,0xf
  404c5f:	mov    eax,DWORD PTR [rsp+0xb4]
  404c66:	mov    ecx,eax
  404c68:	and    eax,0x800fffff
  404c6d:	or     eax,0x3ff00000
  404c72:	and    ecx,0x7ff00000
  404c78:	shr    ecx,0x14
  404c7b:	mov    DWORD PTR [rsp+0xb4],eax
  404c82:	test   edx,edx
  404c84:	lea    edi,[r8+rcx*1-0x3ff]
  404c8c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404c95:	mov    rax,QWORD PTR [rip+0x73c4]        # 0x40c060
  404c9c:	je     0x404aa3
  404ca2:	test   dl,0x1
  404ca5:	je     0x404cab
  404ca7:	mulsd  xmm0,QWORD PTR [rax]
  404cab:	add    rax,0x8
  404caf:	sar    edx,1
  404cb1:	jne    0x404ca2
  404cb3:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404cbc:	jmp    0x404aa3
  404cc1:	mov    DWORD PTR [rsp+0x44],0x1
  404cc9:	lea    rax,[rdi+0x2]
  404ccd:	mov    QWORD PTR [rsp+0xc0],rax
  404cd5:	movsx  eax,BYTE PTR [rdi+0x2]
  404cd9:	jmp    0x40470d
  404cde:	cmp    eax,0x30
  404ce1:	jne    0x405d25
  404ce7:	add    r8,0x1
  404ceb:	xor    ecx,ecx
  404ced:	nop    DWORD PTR [rax]
  404cf0:	mov    QWORD PTR [rsp+0xc0],r8
  404cf8:	movsx  eax,BYTE PTR [r8]
  404cfc:	add    ecx,0x1
  404cff:	add    r8,0x1
  404d03:	cmp    eax,0x30
  404d06:	je     0x404cf0
  404d08:	lea    r8d,[rax-0x31]
  404d0c:	cmp    r8d,0x8
  404d10:	ja     0x405985
  404d16:	mov    r15,QWORD PTR [rsp+0xc0]
  404d1e:	lea    r9d,[rax-0x30]
  404d22:	lea    r13d,[rcx+0x1]
  404d26:	mov    ebp,0x1
  404d2b:	mov    r8,r15
  404d2e:	lea    eax,[rsi+rsi*4]
  404d31:	xor    ecx,ecx
  404d33:	lea    esi,[r9+rax*2]
  404d37:	jmp    0x404a2f
  404d3c:	je     0x404b76
  404d42:	add    edx,edi
  404d44:	test   edx,edx
  404d46:	mov    DWORD PTR [rsp+0xa8],edx
  404d4d:	jle    0x405ce6
  404d53:	mov    rcx,QWORD PTR [rsp+0xc8]
  404d5b:	neg    edi
  404d5d:	mov    edx,edi
  404d5f:	call   0x406d20
  404d64:	jmp    0x404b76
  404d69:	mov    edx,DWORD PTR [rsp+0x68]
  404d6d:	cmp    edx,0xffffffea
  404d70:	mov    eax,edx
  404d72:	jl     0x404a59
  404d78:	mov    rdx,QWORD PTR [rip+0x73c1]        # 0x40c140
  404d7f:	neg    eax
  404d81:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404d8a:	cdqe   
  404d8c:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  404d91:	lea    rax,[rsp+0xa4]
  404d99:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404da2:	lea    rcx,[rsp+0xb0]
  404daa:	mov    DWORD PTR [rsp+0x20],0x0
  404db2:	mov    QWORD PTR [rsp+0x30],rax
  404db7:	mov    eax,DWORD PTR [rsp+0x6c]
  404dbb:	mov    DWORD PTR [rsp+0x28],eax
  404dbf:	jmp    0x404988
  404dc4:	mov    DWORD PTR [r8+0x14],0x0
  404dcc:	mov    DWORD PTR [rsp+0xa4],0x50
  404dd7:	call   0x408220
  404ddc:	mov    r8,QWORD PTR [rsp+0xc8]
  404de4:	mov    DWORD PTR [rax],0x22
  404dea:	jmp    0x4043b1
  404def:	nop
  404df0:	mov    QWORD PTR [rsp+0xc0],rdi
  404df8:	xor    r8d,r8d
  404dfb:	jmp    0x4045da
  404e00:	mov    eax,DWORD PTR [rsp+0x50]
  404e04:	mov    DWORD PTR [rsp+0x44],0x1
  404e0c:	mov    DWORD PTR [rsp+0x8c],eax
  404e13:	mov    r8d,ebp
  404e16:	mov    edx,ebx
  404e18:	mov    DWORD PTR [rsp+0x20],r14d
  404e1d:	mov    r9d,esi
  404e20:	mov    rcx,r15
  404e23:	call   0x407df0
  404e28:	mov    QWORD PTR [rsp+0x70],rax
  404e2d:	add    rax,0x10
  404e31:	mov    QWORD PTR [rsp+0x78],rax
  404e36:	mov    eax,DWORD PTR [rsp+0x40]
  404e3a:	movsd  xmm8,QWORD PTR [rip+0x6f5d]        # 0x40bda0
  404e43:	movsd  xmm9,QWORD PTR [rip+0x6f64]        # 0x40bdb0
  404e4c:	add    eax,0x1
  404e4f:	movapd xmm11,xmm8
  404e54:	mov    DWORD PTR [rsp+0x80],eax
  404e5b:	mov    eax,DWORD PTR [rsp+0x68]
  404e5f:	movsd  xmm10,QWORD PTR [rip+0x6f68]        # 0x40bdd0
  404e68:	mov    edx,eax
  404e6a:	neg    edx
  404e6c:	test   eax,eax
  404e6e:	mov    eax,0x0
  404e73:	cmovs  eax,edx
  404e76:	xor    ebp,ebp
  404e78:	mov    DWORD PTR [rsp+0x5c],eax
  404e7c:	jmp    0x4050c0
  404e81:	mov    rcx,rsi
  404e84:	call   0x4078e0
  404e89:	mov    rsi,rax
  404e8c:	test   r15d,r15d
  404e8f:	je     0x404e9f
  404e91:	mov    rcx,rdi
  404e94:	mov    edx,r15d
  404e97:	call   0x407770
  404e9c:	mov    rdi,rax
  404e9f:	test   r12d,r12d
  404ea2:	jle    0x404eb2
  404ea4:	mov    rcx,rdi
  404ea7:	mov    edx,r12d
  404eaa:	call   0x4078e0
  404eaf:	mov    rdi,rax
  404eb2:	test   r14d,r14d
  404eb5:	jle    0x404ec5
  404eb7:	mov    rcx,r13
  404eba:	mov    edx,r14d
  404ebd:	call   0x4078e0
  404ec2:	mov    r13,rax
  404ec5:	mov    rdx,rdi
  404ec8:	mov    rcx,rsi
  404ecb:	call   0x407a50
  404ed0:	cmp    DWORD PTR [rax+0x14],0x1
  404ed4:	mov    rbx,rax
  404ed7:	jle    0x405270
  404edd:	mov    ebp,DWORD PTR [rbx+0x10]
  404ee0:	mov    rdx,r13
  404ee3:	mov    DWORD PTR [rbx+0x10],0x0
  404eea:	mov    rcx,rbx
  404eed:	call   0x407a00
  404ef2:	test   eax,eax
  404ef4:	jg     0x405200
  404efa:	mov    ecx,DWORD PTR [rsp+0x6c]
  404efe:	test   ecx,ecx
  404f00:	je     0x405200
  404f06:	mov    eax,ecx
  404f08:	and    eax,0x1
  404f0b:	xor    eax,ebp
  404f0d:	mov    DWORD PTR [rsp+0x60],eax
  404f11:	je     0x405a1b
  404f17:	test   ebp,ebp
  404f19:	je     0x405471
  404f1f:	movsd  xmm6,QWORD PTR [rip+0x6e79]        # 0x40bda0
  404f27:	mov    DWORD PTR [rsp+0xa4],0x21
  404f32:	xor    r12d,r12d
  404f35:	mov    DWORD PTR [rsp+0x88],0x20
  404f40:	xor    r14d,r14d
  404f43:	movapd xmm7,xmm6
  404f47:	mov    eax,DWORD PTR [rsp+0xa8]
  404f4e:	mov    edx,DWORD PTR [rsp+0xac]
  404f55:	mov    r8d,DWORD PTR [rsp+0x44]
  404f5a:	add    edx,eax
  404f5c:	test   r8d,r8d
  404f5f:	mov    DWORD PTR [rsp+0x48],edx
  404f63:	jne    0x404f6f
  404f65:	cmp    DWORD PTR [rsp+0x40],eax
  404f69:	jg     0x405625
  404f6f:	lea    rdx,[rsp+0x9c]
  404f77:	lea    r8,[rsp+0xa0]
  404f7f:	movapd xmm0,xmm6
  404f83:	call   0x407cb0
  404f88:	mov    edx,DWORD PTR [rsp+0x9c]
  404f8f:	mov    r15,rax
  404f92:	test   edx,edx
  404f94:	js     0x405660
  404f9a:	je     0x404fa7
  404f9c:	mov    rcx,rax
  404f9f:	call   0x4078e0
  404fa4:	mov    r15,rax
  404fa7:	mov    rbp,QWORD PTR [rsp+0xc8]
  404faf:	test   r14d,r14d
  404fb2:	mov    rdx,r15
  404fb5:	mov    rcx,rbp
  404fb8:	je     0x4053a0
  404fbe:	call   0x407a50
  404fc3:	mov    ecx,DWORD PTR [rsp+0x44]
  404fc7:	mov    QWORD PTR [rsp+0xc8],rax
  404fcf:	mov    edx,DWORD PTR [rbp+0x14]
  404fd2:	test   ecx,ecx
  404fd4:	jne    0x405540
  404fda:	sub    edx,0x1
  404fdd:	cmp    edx,DWORD PTR [rax+0x14]
  404fe0:	jge    0x404ffd
  404fe2:	movsxd rdx,edx
  404fe5:	add    rdx,0x4
  404fe9:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  404fee:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  404ff3:	xor    ecx,0x1f
  404ff6:	xor    edx,0x1f
  404ff9:	cmp    ecx,edx
  404ffb:	jle    0x405020
  404ffd:	mov    ecx,DWORD PTR [rsp+0x50]
  405001:	cmp    DWORD PTR [rsp+0x8c],ecx
  405008:	jne    0x405420
  40500e:	sub    DWORD PTR [rsp+0xa8],0x1
  405016:	mov    DWORD PTR [rsp+0x44],0x1
  40501e:	xchg   ax,ax
  405020:	mov    rcx,r15
  405023:	call   0x4074e0
  405028:	mov    rcx,rbp
  40502b:	call   0x4074e0
  405030:	mov    r14d,DWORD PTR [rsp+0x60]
  405035:	test   r14d,r14d
  405038:	jne    0x405280
  40503e:	test   r12d,r12d
  405041:	je     0x405088
  405043:	mov    eax,DWORD PTR [rsp+0xa8]
  40504a:	add    eax,DWORD PTR [rsp+0xac]
  405051:	cmp    DWORD PTR [rsp+0x48],eax
  405055:	jne    0x405088
  405057:	mulsd  xmm6,QWORD PTR [rip+0x6d69]        # 0x40bdc8
  40505f:	movapd xmm0,xmm7
  405063:	subsd  xmm0,QWORD PTR [rip+0x6d4d]        # 0x40bdb8
  40506b:	movapd xmm1,xmm6
  40506f:	xorpd  xmm1,xmm10
  405074:	ucomisd xmm1,xmm0
  405078:	jbe    0x4055f2
  40507e:	ucomisd xmm7,xmm6
  405082:	ja     0x405612
  405088:	mov    r12d,DWORD PTR [rsp+0x44]
  40508d:	test   r12d,r12d
  405090:	je     0x405455
  405096:	mov    DWORD PTR [rsp+0x44],0x1
  40509e:	xor    ebp,ebp
  4050a0:	mov    rcx,rsi
  4050a3:	call   0x4074e0
  4050a8:	mov    rcx,rdi
  4050ab:	call   0x4074e0
  4050b0:	mov    rcx,r13
  4050b3:	call   0x4074e0
  4050b8:	mov    rcx,rbx
  4050bb:	call   0x4074e0
  4050c0:	mov    rsi,QWORD PTR [rsp+0x70]
  4050c5:	mov    r15d,0x0
  4050cb:	mov    ecx,DWORD PTR [rsi+0x8]
  4050ce:	call   0x4073d0
  4050d3:	lea    rcx,[rax+0x10]
  4050d7:	mov    rdi,rax
  4050da:	movsxd rax,DWORD PTR [rsi+0x14]
  4050de:	mov    rdx,QWORD PTR [rsp+0x78]
  4050e3:	lea    r8,[rax*4+0x8]
  4050eb:	call   0x408178
  4050f0:	mov    rax,QWORD PTR [rsp+0xc8]
  4050f8:	mov    ecx,DWORD PTR [rax+0x8]
  4050fb:	call   0x4073d0
  405100:	mov    rdx,QWORD PTR [rsp+0xc8]
  405108:	lea    rcx,[rax+0x10]
  40510c:	mov    rsi,rax
  40510f:	movsxd rax,DWORD PTR [rdx+0x14]
  405113:	add    rdx,0x10
  405117:	lea    r8,[rax*4+0x8]
  40511f:	call   0x408178
  405124:	mov    eax,DWORD PTR [rsp+0xa8]
  40512b:	mov    ecx,0x1
  405130:	mov    ebx,DWORD PTR [rsp+0xac]
  405137:	sub    eax,ebp
  405139:	add    ebx,ebp
  40513b:	mov    DWORD PTR [rsp+0x48],eax
  40513f:	call   0x407610
  405144:	mov    r13,rax
  405147:	mov    eax,DWORD PTR [rsp+0x68]
  40514b:	test   eax,eax
  40514d:	cmovg  r15d,eax
  405151:	test   ebx,ebx
  405153:	js     0x405410
  405159:	mov    eax,DWORD PTR [rsp+0x5c]
  40515d:	mov    edx,r15d
  405160:	lea    r14d,[rax+rbx*1]
  405164:	mov    ecx,DWORD PTR [rsp+0x48]
  405168:	mov    eax,DWORD PTR [rsp+0x80]
  40516f:	add    ebx,ecx
  405171:	sub    ebx,DWORD PTR [rsp+0x40]
  405175:	sub    eax,ecx
  405177:	cmp    DWORD PTR [rsp+0x50],ebx
  40517b:	jle    0x405183
  40517d:	sub    ebx,DWORD PTR [rsp+0x50]
  405181:	add    eax,ebx
  405183:	lea    ebx,[r14+rax*1]
  405187:	lea    r12d,[rdx+rax*1]
  40518b:	cmp    ebx,r12d
  40518e:	mov    eax,r12d
  405191:	cmovle eax,ebx
  405194:	cmp    eax,r14d
  405197:	cmovg  eax,r14d
  40519b:	test   eax,eax
  40519d:	jle    0x4051a7
  40519f:	sub    ebx,eax
  4051a1:	sub    r12d,eax
  4051a4:	sub    r14d,eax
  4051a7:	mov    eax,DWORD PTR [rsp+0x5c]
  4051ab:	test   eax,eax
  4051ad:	je     0x4051dc
  4051af:	mov    rcx,r13
  4051b2:	mov    edx,eax
  4051b4:	call   0x407770
  4051b9:	mov    rdx,rsi
  4051bc:	mov    rcx,rax
  4051bf:	mov    r13,rax
  4051c2:	call   0x407640
  4051c7:	mov    rcx,rsi
  4051ca:	mov    QWORD PTR [rsp+0x60],rax
  4051cf:	call   0x4074e0
  4051d4:	mov    rax,QWORD PTR [rsp+0x60]
  4051d9:	mov    rsi,rax
  4051dc:	sub    ebx,ebp
  4051de:	cmp    ebx,0x0
  4051e1:	mov    edx,ebx
  4051e3:	jg     0x404e81
  4051e9:	je     0x404e8c
  4051ef:	neg    edx
  4051f1:	mov    rcx,rsi
  4051f4:	call   0x406d20
  4051f9:	jmp    0x404e8c
  4051fe:	xchg   ax,ax
  405200:	test   eax,eax
  405202:	js     0x405a32
  405208:	je     0x405afe
  40520e:	mov    rdx,r13
  405211:	mov    rcx,rbx
  405214:	call   0x407ef0
  405219:	ucomisd xmm9,xmm0
  40521e:	jb     0x405550
  405224:	test   ebp,ebp
  405226:	jne    0x405680
  40522c:	mov    DWORD PTR [rsp+0x60],0x0
  405234:	cmp    DWORD PTR [rsp+0x48],0x1
  405239:	jg     0x405249
  40523b:	mov    r9d,DWORD PTR [rsp+0x44]
  405240:	test   r9d,r9d
  405243:	jne    0x405c0a
  405249:	movapd xmm6,xmm8
  40524e:	xor    r12d,r12d
  405251:	mov    DWORD PTR [rsp+0x88],0x10
  40525c:	movapd xmm7,xmm8
  405261:	mov    r14d,0x1
  405267:	jmp    0x404f47
  40526c:	nop    DWORD PTR [rax+0x0]
  405270:	mov    r15d,DWORD PTR [rax+0x18]
  405274:	test   r15d,r15d
  405277:	jne    0x404edd
  40527d:	nop    DWORD PTR [rax]
  405280:	mov    ebp,DWORD PTR [rsp+0x44]
  405284:	test   ebp,ebp
  405286:	je     0x405778
  40528c:	mov    eax,DWORD PTR [rsp+0xac]
  405293:	mov    ebp,0x1
  405298:	mov    rdx,QWORD PTR [rsp+0x198]
  4052a0:	mov    rcx,rsi
  4052a3:	mov    DWORD PTR [rdx],eax
  4052a5:	call   0x4074e0
  4052aa:	mov    rcx,rdi
  4052ad:	call   0x4074e0
  4052b2:	mov    rcx,r13
  4052b5:	call   0x4074e0
  4052ba:	mov    rcx,QWORD PTR [rsp+0x70]
  4052bf:	call   0x4074e0
  4052c4:	mov    rcx,rbx
  4052c7:	call   0x4074e0
  4052cc:	mov    rax,QWORD PTR [rsp+0x190]
  4052d4:	mov    esi,DWORD PTR [rsp+0xac]
  4052db:	cmp    DWORD PTR [rax+0x8],esi
  4052de:	jge    0x40467a
  4052e4:	mov    rax,QWORD PTR [rsp+0x190]
  4052ec:	mov    eax,DWORD PTR [rax+0xc]
  4052ef:	mov    DWORD PTR [rsp+0x44],eax
  4052f3:	and    eax,0x3
  4052f6:	cmp    eax,0x2
  4052f9:	je     0x405aeb
  4052ff:	cmp    eax,0x3
  405302:	je     0x405ad8
  405308:	cmp    eax,0x1
  40530b:	je     0x4056d7
  405311:	mov    rcx,QWORD PTR [rsp+0xc8]
  405319:	call   0x4074e0
  40531e:	mov    rax,QWORD PTR [rsp+0x190]
  405326:	mov    rsi,QWORD PTR [rsp+0x198]
  40532e:	mov    QWORD PTR [rsp+0xc8],0x0
  40533a:	mov    DWORD PTR [rsp+0xa4],0x11
  405345:	mov    eax,DWORD PTR [rax+0x8]
  405348:	mov    DWORD PTR [rsi],eax
  40534a:	mov    rax,QWORD PTR [rsp+0x190]
  405352:	mov    rsi,QWORD PTR [rsp+0x1a0]
  40535a:	mov    ecx,DWORD PTR [rax]
  40535c:	lea    eax,[rcx+0x1f]
  40535f:	sar    eax,0x5
  405362:	cdqe   
  405364:	lea    rdx,[rsi+rax*4]
  405368:	mov    rax,rsi
  40536b:	cmp    rsi,rdx
  40536e:	jae    0x405380
  405370:	add    rax,0x4
  405374:	mov    DWORD PTR [rax-0x4],0xffffffff
  40537b:	cmp    rdx,rax
  40537e:	ja     0x405370
  405380:	and    ecx,0x1f
  405383:	je     0x405391
  405385:	mov    eax,0x20
  40538a:	sub    eax,ecx
  40538c:	mov    ecx,eax
  40538e:	shr    DWORD PTR [rdx-0x4],cl
  405391:	xor    r8d,r8d
  405394:	jmp    0x404682
  405399:	nop    DWORD PTR [rax+0x0]
  4053a0:	call   0x405e10
  4053a5:	mov    edx,DWORD PTR [rax+0x14]
  4053a8:	mov    QWORD PTR [rsp+0xc8],rax
  4053b0:	sub    edx,0x1
  4053b3:	cmp    edx,DWORD PTR [rbp+0x14]
  4053b6:	jge    0x4053d7
  4053b8:	movsxd rdx,edx
  4053bb:	add    rdx,0x4
  4053bf:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  4053c4:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  4053c9:	xor    ecx,0x1f
  4053cc:	xor    edx,0x1f
  4053cf:	cmp    ecx,edx
  4053d1:	jge    0x405020
  4053d7:	mov    edx,DWORD PTR [rsp+0x44]
  4053db:	test   edx,edx
  4053dd:	je     0x4056b0
  4053e3:	mov    eax,DWORD PTR [rsp+0xa8]
  4053ea:	add    eax,0x1
  4053ed:	cmp    DWORD PTR [rsp+0x40],eax
  4053f1:	mov    DWORD PTR [rsp+0xa8],eax
  4053f8:	setne  al
  4053fb:	movzx  eax,al
  4053fe:	mov    DWORD PTR [rsp+0x44],eax
  405402:	jmp    0x405020
  405407:	nop    WORD PTR [rax+rax*1+0x0]
  405410:	mov    edx,r15d
  405413:	mov    r14d,DWORD PTR [rsp+0x5c]
  405418:	sub    edx,ebx
  40541a:	jmp    0x405164
  40541f:	nop
  405420:	mov    edx,0x1
  405425:	mov    rcx,rax
  405428:	call   0x4078e0
  40542d:	mov    rcx,r15
  405430:	mov    QWORD PTR [rsp+0xc8],rax
  405438:	sub    DWORD PTR [rsp+0xac],0x1
  405440:	sub    DWORD PTR [rsp+0x8c],0x1
  405448:	call   0x4074e0
  40544d:	mov    rcx,rbp
  405450:	call   0x4074e0
  405455:	mov    rcx,QWORD PTR [rsp+0xc8]
  40545d:	call   0x406e20
  405462:	mov    DWORD PTR [rsp+0x44],0x0
  40546a:	mov    ebp,eax
  40546c:	jmp    0x4050a0
  405471:	mov    edx,DWORD PTR [rsp+0x50]
  405475:	cmp    DWORD PTR [rsp+0x8c],edx
  40547c:	mov    DWORD PTR [rsp+0xa4],0x11
  405487:	je     0x405234
  40548d:	xor    ecx,ecx
  40548f:	cmp    DWORD PTR [rsp+0x40],0x1f
  405494:	mov    r9,QWORD PTR [rsp+0xc8]
  40549c:	mov    eax,DWORD PTR [rsp+0x40]
  4054a0:	jle    0x4054dc
  4054a2:	mov    r14d,DWORD PTR [r9+0x18]
  4054a6:	test   r14d,r14d
  4054a9:	jne    0x405234
  4054af:	lea    rdx,[r9+0x1c]
  4054b3:	mov    eax,DWORD PTR [rsp+0x40]
  4054b7:	xor    ecx,ecx
  4054b9:	jmp    0x4054d1
  4054bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4054c0:	add    rdx,0x4
  4054c4:	mov    r12d,DWORD PTR [rdx-0x4]
  4054c8:	test   r12d,r12d
  4054cb:	jne    0x405234
  4054d1:	sub    eax,0x20
  4054d4:	add    ecx,0x1
  4054d7:	cmp    eax,0x1f
  4054da:	jg     0x4054c0
  4054dc:	cmp    eax,0x1
  4054df:	jle    0x405503
  4054e1:	movsxd rcx,ecx
  4054e4:	sub    eax,0x1
  4054e7:	lea    r8,[r9+rcx*4]
  4054eb:	xor    ecx,ecx
  4054ed:	mov    edx,DWORD PTR [r8+0x18]
  4054f1:	tzcnt  ecx,edx
  4054f5:	shr    edx,cl
  4054f7:	cmp    eax,ecx
  4054f9:	mov    DWORD PTR [r8+0x18],edx
  4054fd:	jg     0x405234
  405503:	mov    eax,DWORD PTR [rsp+0x8c]
  40550a:	mov    rcx,r9
  40550d:	sub    eax,0x1
  405510:	mov    DWORD PTR [rsp+0xac],eax
  405517:	mov    eax,DWORD PTR [rsp+0x40]
  40551b:	mov    edx,eax
  40551d:	mov    DWORD PTR [rsp+0xa8],eax
  405524:	call   0x404210
  405529:	mov    QWORD PTR [rsp+0xc8],rax
  405531:	jmp    0x405280
  405536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405540:	mov    DWORD PTR [rsp+0x44],0x1
  405548:	jmp    0x405020
  40554d:	nop    DWORD PTR [rax]
  405550:	movapd xmm7,xmm0
  405554:	cmp    ebp,0x1
  405557:	movsd  xmm1,QWORD PTR [rip+0x6859]        # 0x40bdb8
  40555f:	sbb    eax,eax
  405561:	and    eax,0x10
  405564:	movsd  xmm0,QWORD PTR [rip+0x6854]        # 0x40bdc0
  40556c:	mulsd  xmm7,xmm1
  405570:	add    eax,0x10
  405573:	xor    r14d,r14d
  405576:	cmp    ebp,0x1
  405579:	mov    DWORD PTR [rsp+0x88],eax
  405580:	setb   r14b
  405584:	ucomisd xmm0,xmm7
  405588:	jbe    0x405670
  40558e:	cvttsd2si r12d,xmm7
  405593:	pxor   xmm6,xmm6
  405597:	mov    eax,DWORD PTR [rsp+0x6c]
  40559b:	cmp    eax,0x1
  40559e:	cvtsi2sd xmm6,r12d
  4055a3:	subsd  xmm7,xmm6
  4055a7:	je     0x4058c5
  4055ad:	cmp    eax,0x2
  4055b0:	jne    0x405769
  4055b6:	test   r14d,r14d
  4055b9:	jne    0x4055e5
  4055bb:	ucomisd xmm7,QWORD PTR [rip+0x67e5]        # 0x40bda8
  4055c3:	jbe    0x4055e5
  4055c5:	pxor   xmm6,xmm6
  4055c9:	add    r12d,0x1
  4055cd:	mov    eax,0x30
  4055d2:	sub    eax,DWORD PTR [rsp+0x88]
  4055d9:	cvtsi2sd xmm6,r12d
  4055de:	mov    DWORD PTR [rsp+0x88],eax
  4055e5:	mov    DWORD PTR [rsp+0x60],0x0
  4055ed:	jmp    0x404f47
  4055f2:	ucomisd xmm0,xmm6
  4055f6:	jbe    0x405088
  4055fc:	movsd  xmm0,QWORD PTR [rip+0x679c]        # 0x40bda0
  405604:	subsd  xmm0,xmm6
  405608:	ucomisd xmm0,xmm7
  40560c:	jbe    0x405088
  405612:	mov    eax,DWORD PTR [rsp+0x88]
  405619:	or     DWORD PTR [rsp+0xa4],eax
  405620:	jmp    0x405280
  405625:	mov    r15d,DWORD PTR [rsp+0x40]
  40562a:	mov    rcx,QWORD PTR [rsp+0xc8]
  405632:	mov    ebp,r15d
  405635:	sub    ebp,eax
  405637:	mov    edx,ebp
  405639:	call   0x4078e0
  40563e:	sub    DWORD PTR [rsp+0xac],ebp
  405645:	mov    QWORD PTR [rsp+0xc8],rax
  40564d:	mov    DWORD PTR [rsp+0xa8],r15d
  405655:	jmp    0x404f6f
  40565a:	nop    WORD PTR [rax+rax*1+0x0]
  405660:	neg    edx
  405662:	mov    rcx,rax
  405665:	call   0x406d20
  40566a:	jmp    0x404fa7
  40566f:	nop
  405670:	movapd xmm6,xmm7
  405674:	xor    r12d,r12d
  405677:	jmp    0x4055e5
  40567c:	nop    DWORD PTR [rax+0x0]
  405680:	movapd xmm6,xmm11
  405685:	xor    r12d,r12d
  405688:	movapd xmm7,xmm11
  40568d:	mov    DWORD PTR [rsp+0x88],0x20
  405698:	mov    DWORD PTR [rsp+0x60],0x0
  4056a0:	xor    r14d,r14d
  4056a3:	jmp    0x404f47
  4056a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4056b0:	mov    edx,0x1
  4056b5:	mov    rcx,rax
  4056b8:	xor    r12d,r12d
  4056bb:	call   0x406d20
  4056c0:	add    DWORD PTR [rsp+0xac],0x1
  4056c8:	add    DWORD PTR [rsp+0x8c],0x1
  4056d0:	jmp    0x405020
  4056d5:	xor    ebp,ebp
  4056d7:	mov    rax,QWORD PTR [rsp+0xc8]
  4056df:	mov    DWORD PTR [rsp+0xa4],0xa3
  4056ea:	mov    DWORD PTR [rax+0x14],0x0
  4056f1:	call   0x408220
  4056f6:	mov    DWORD PTR [rax],0x22
  4056fc:	mov    rax,QWORD PTR [rsp+0x190]
  405704:	mov    eax,DWORD PTR [rax+0x8]
  405707:	add    eax,0x1
  40570a:	jmp    0x404670
  40570f:	mov    eax,DWORD PTR [rsp+0x58]
  405713:	mov    r8,QWORD PTR [rsp+0x198]
  40571b:	lea    rcx,[rsp+0xc0]
  405723:	mov    rdx,QWORD PTR [rsp+0x190]
  40572b:	lea    r9,[rsp+0xc8]
  405733:	mov    DWORD PTR [rsp+0x20],eax
  405737:	call   0x406450
  40573c:	cmp    eax,0x6
  40573f:	mov    DWORD PTR [rsp+0xa4],eax
  405746:	mov    r8,QWORD PTR [rsp+0xc8]
  40574e:	jne    0x4043b1
  405754:	mov    QWORD PTR [rsp+0xc0],rdi
  40575c:	mov    DWORD PTR [rsp+0x58],0x0
  405764:	jmp    0x4043b1
  405769:	ucomisd xmm7,xmm1
  40576d:	jae    0x4055c5
  405773:	jmp    0x4055e5
  405778:	mov    eax,DWORD PTR [rsp+0xa8]
  40577f:	mov    ebp,DWORD PTR [rsp+0x40]
  405783:	sub    ebp,eax
  405785:	cmp    ebp,0x0
  405788:	jne    0x405951
  40578e:	mov    eax,DWORD PTR [rsp+0xac]
  405795:	jmp    0x405298
  40579a:	je     0x404a98
  4057a0:	neg    edx
  4057a2:	mov    eax,edx
  4057a4:	and    eax,0xf
  4057a7:	je     0x4057c9
  4057a9:	mov    rcx,QWORD PTR [rip+0x6990]        # 0x40c140
  4057b0:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4057b9:	cdqe   
  4057bb:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  4057c0:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4057c9:	and    edx,0xfffffff0
  4057cc:	je     0x404a98
  4057d2:	mov    eax,edx
  4057d4:	sar    eax,0x4
  4057d7:	cmp    eax,0xf
  4057da:	jle    0x405da8
  4057e0:	mov    rdx,QWORD PTR [rip+0x6969]        # 0x40c150
  4057e7:	mov    ecx,eax
  4057e9:	xor    r8d,r8d
  4057ec:	movsd  xmm1,QWORD PTR [rdx+0x20]
  4057f1:	mov    edx,DWORD PTR [rsp+0xb4]
  4057f8:	sub    ecx,0x10
  4057fb:	mov    r9d,edx
  4057fe:	and    edx,0x800fffff
  405804:	or     edx,0x3ff00000
  40580a:	and    r9d,0x7ff00000
  405811:	mov    DWORD PTR [rsp+0xb4],edx
  405818:	shr    r9d,0x14
  40581c:	cmp    ecx,0xf
  40581f:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405828:	lea    r8d,[r8+r9*1-0x3ff]
  405830:	mulsd  xmm0,xmm1
  405834:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40583d:	jg     0x4057f1
  40583f:	and    eax,0xf
  405842:	mov    edx,DWORD PTR [rsp+0xb4]
  405849:	mov    ecx,edx
  40584b:	and    edx,0x800fffff
  405851:	and    ecx,0x7ff00000
  405857:	or     edx,0x3ff00000
  40585d:	shr    ecx,0x14
  405860:	mov    DWORD PTR [rsp+0xb4],edx
  405867:	test   eax,eax
  405869:	lea    edi,[r8+rcx*1-0x3ff]
  405871:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40587a:	jle    0x404aa3
  405880:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  405889:	mov    rdx,QWORD PTR [rip+0x68c0]        # 0x40c150
  405890:	movapd xmm0,xmm1
  405894:	test   al,0x1
  405896:	je     0x4058a0
  405898:	mulsd  xmm1,QWORD PTR [rdx]
  40589c:	movapd xmm0,xmm1
  4058a0:	sar    eax,1
  4058a2:	add    rdx,0x8
  4058a6:	test   eax,eax
  4058a8:	jg     0x405894
  4058aa:	movsd  QWORD PTR [rsp+0xb0],xmm1
  4058b3:	jmp    0x404aa3
  4058b8:	mov    DWORD PTR [rsp+0x44],0x0
  4058c0:	jmp    0x404cc9
  4058c5:	test   r14d,r14d
  4058c8:	je     0x4055e5
  4058ce:	jmp    0x4055bb
  4058d3:	mov    DWORD PTR [rsp+0x44],0x0
  4058db:	jmp    0x404e13
  4058e0:	lea    rax,[rsp+0xa4]
  4058e8:	lea    rcx,[rsp+0xb0]
  4058f0:	mov    DWORD PTR [rsp+0x20],0x1
  4058f8:	mov    QWORD PTR [rsp+0x30],rax
  4058fd:	mov    eax,DWORD PTR [rsp+0x6c]
  405901:	mov    DWORD PTR [rsp+0x28],eax
  405905:	jmp    0x404988
  40590a:	mov    ecx,DWORD PTR [rsp+0x68]
  40590e:	mov    edx,0x25
  405913:	sub    edx,ebp
  405915:	cmp    ecx,edx
  405917:	mov    eax,ecx
  405919:	jg     0x404a59
  40591f:	mov    rdx,QWORD PTR [rip+0x681a]        # 0x40c140
  405926:	mov    eax,0xf
  40592b:	sub    eax,ebp
  40592d:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405936:	movsxd rcx,eax
  405939:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  40593e:	mov    ecx,DWORD PTR [rsp+0x68]
  405942:	sub    ecx,eax
  405944:	movsxd rax,ecx
  405947:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  40594c:	jmp    0x404d91
  405951:	mov    edx,ebp
  405953:	jle    0x405caf
  405959:	mov    rcx,QWORD PTR [rsp+0xc8]
  405961:	call   0x4078e0
  405966:	mov    QWORD PTR [rsp+0xc8],rax
  40596e:	mov    eax,DWORD PTR [rsp+0xac]
  405975:	sub    eax,ebp
  405977:	xor    ebp,ebp
  405979:	mov    DWORD PTR [rsp+0xac],eax
  405980:	jmp    0x405298
  405985:	xor    ebp,ebp
  405987:	xor    r13d,r13d
  40598a:	jmp    0x404a4a
  40598f:	mov    r9d,0x4e1f
  405995:	jmp    0x4047e4
  40599a:	lea    rbx,[rsp+0xc0]
  4059a2:	lea    rdx,[rip+0x6297]        # 0x40bc40
  4059a9:	mov    rcx,rbx
  4059ac:	call   0x407fb0
  4059b1:	test   eax,eax
  4059b3:	je     0x404803
  4059b9:	lea    rdx,[rip+0x6283]        # 0x40bc43
  4059c0:	mov    rcx,rbx
  4059c3:	sub    QWORD PTR [rsp+0xc0],0x1
  4059cc:	call   0x407fb0
  4059d1:	test   eax,eax
  4059d3:	jne    0x4059de
  4059d5:	add    QWORD PTR [rsp+0xc0],0x1
  4059de:	mov    rax,QWORD PTR [rsp+0x190]
  4059e6:	mov    DWORD PTR [rsp+0xa4],0x3
  4059f1:	xor    ebp,ebp
  4059f3:	mov    eax,DWORD PTR [rax+0x8]
  4059f6:	add    eax,0x1
  4059f9:	jmp    0x404670
  4059fe:	mov    edx,DWORD PTR [rsp+0xb4]
  405a05:	mov    eax,0x15
  405a0a:	or     edx,0x100000
  405a10:	tzcnt  edx,edx
  405a14:	sub    eax,edx
  405a16:	jmp    0x40493d
  405a1b:	cmp    ebp,0x1
  405a1e:	sbb    eax,eax
  405a20:	and    eax,0x10
  405a23:	add    eax,0x11
  405a26:	mov    DWORD PTR [rsp+0xa4],eax
  405a2d:	jmp    0x405280
  405a32:	cmp    ebp,0x1
  405a35:	sbb    eax,eax
  405a37:	and    eax,0x10
  405a3a:	add    eax,0x11
  405a3d:	test   ebp,ebp
  405a3f:	mov    DWORD PTR [rsp+0xa4],eax
  405a46:	jne    0x405280
  405a4c:	cmp    DWORD PTR [rsp+0x48],0x1
  405a51:	jg     0x405280
  405a57:	mov    ebp,DWORD PTR [rsp+0x44]
  405a5b:	test   ebp,ebp
  405a5d:	jne    0x405280
  405a63:	mov    edx,DWORD PTR [rsp+0x8c]
  405a6a:	cmp    DWORD PTR [rsp+0x50],edx
  405a6e:	je     0x405280
  405a74:	mov    rcx,rbx
  405a77:	mov    edx,0x1
  405a7c:	call   0x4078e0
  405a81:	mov    rdx,r13
  405a84:	mov    rcx,rax
  405a87:	mov    rbx,rax
  405a8a:	call   0x407a00
  405a8f:	test   eax,eax
  405a91:	jle    0x405778
  405a97:	mov    DWORD PTR [rsp+0xa4],0x11
  405aa2:	mov    DWORD PTR [rsp+0x44],0x0
  405aaa:	mov    eax,DWORD PTR [rsp+0x40]
  405aae:	mov    rcx,QWORD PTR [rsp+0xc8]
  405ab6:	sub    DWORD PTR [rsp+0xac],eax
  405abd:	mov    edx,eax
  405abf:	mov    DWORD PTR [rsp+0xa8],eax
  405ac6:	call   0x404210
  405acb:	mov    QWORD PTR [rsp+0xc8],rax
  405ad3:	jmp    0x405280
  405ad8:	mov    r10d,DWORD PTR [rsp+0x58]
  405add:	test   r10d,r10d
  405ae0:	jne    0x4056d7
  405ae6:	jmp    0x405311
  405aeb:	mov    r11d,DWORD PTR [rsp+0x58]
  405af0:	test   r11d,r11d
  405af3:	je     0x4056d7
  405af9:	jmp    0x405311
  405afe:	test   ebp,ebp
  405b00:	je     0x405c47
  405b06:	mov    r11d,DWORD PTR [rsp+0x44]
  405b0b:	test   r11d,r11d
  405b0e:	je     0x405d15
  405b14:	mov    ecx,DWORD PTR [rsp+0xa8]
  405b1b:	mov    r8,QWORD PTR [rsp+0xc8]
  405b23:	mov    edx,ecx
  405b25:	lea    rax,[r8+0x18]
  405b29:	sar    edx,0x5
  405b2c:	movsxd rdx,edx
  405b2f:	lea    rdx,[rax+rdx*4]
  405b33:	cmp    rax,rdx
  405b36:	jae    0x405b63
  405b38:	cmp    DWORD PTR [r8+0x18],0xffffffff
  405b3d:	lea    rax,[r8+0x1c]
  405b41:	je     0x405b5e
  405b43:	jmp    0x405d15
  405b48:	nop    DWORD PTR [rax+rax*1+0x0]
  405b50:	add    rax,0x4
  405b54:	cmp    DWORD PTR [rax-0x4],0xffffffff
  405b58:	jne    0x405d15
  405b5e:	cmp    rdx,rax
  405b61:	ja     0x405b50
  405b63:	and    ecx,0x1f
  405b66:	je     0x405b7a
  405b68:	or     edx,0xffffffff
  405b6b:	shl    edx,cl
  405b6d:	or     edx,DWORD PTR [rax]
  405b6f:	mov    eax,edx
  405b71:	add    eax,0x1
  405b74:	jne    0x405d15
  405b7a:	mov    eax,DWORD PTR [rsp+0x40]
  405b7e:	mov    edx,DWORD PTR [rsp+0x50]
  405b82:	mov    DWORD PTR [r8+0x14],0x1
  405b8a:	mov    DWORD PTR [r8+0x18],0x1
  405b92:	mov    DWORD PTR [rsp+0xa8],0x1
  405b9d:	mov    DWORD PTR [rsp+0xa4],0x21
  405ba8:	lea    eax,[rax+rdx*1-0x1]
  405bac:	mov    DWORD PTR [rsp+0xac],eax
  405bb3:	mov    eax,0x1
  405bb8:	jmp    0x40577f
  405bbd:	add    r13d,eax
  405bc0:	cmp    eax,0x1
  405bc3:	je     0x405bec
  405bc5:	add    ecx,ebp
  405bc7:	mov    r10d,ecx
  405bca:	jmp    0x405bd5
  405bcc:	lea    esi,[rsi+rsi*4]
  405bcf:	add    esi,esi
  405bd1:	cmp    ebp,ecx
  405bd3:	je     0x405bef
  405bd5:	add    ebp,0x1
  405bd8:	lea    eax,[rbp-0x1]
  405bdb:	cmp    eax,0x8
  405bde:	jle    0x405bcc
  405be0:	cmp    ebp,0x10
  405be3:	jg     0x405bd1
  405be5:	lea    edx,[rdx+rdx*4]
  405be8:	add    edx,edx
  405bea:	jmp    0x405bd1
  405bec:	mov    r10d,ebp
  405bef:	cmp    r10d,0x8
  405bf3:	lea    ebp,[r10+0x1]
  405bf7:	jg     0x405ccb
  405bfd:	mov    r8,QWORD PTR [rsp+0xc0]
  405c05:	jmp    0x404d2e
  405c0a:	mov    r9,QWORD PTR [rsp+0xc8]
  405c12:	mov    DWORD PTR [rsp+0x44],0x1
  405c1a:	mov    eax,DWORD PTR [rsp+0x50]
  405c1e:	mov    DWORD PTR [r9+0x14],0x0
  405c26:	mov    DWORD PTR [rsp+0xa4],0x50
  405c31:	mov    DWORD PTR [rsp+0xac],eax
  405c38:	jmp    0x405280
  405c3d:	mov    eax,0x1
  405c42:	jmp    0x4049ed
  405c47:	cmp    DWORD PTR [rsp+0x48],0x1
  405c4c:	je     0x405d2c
  405c52:	mov    DWORD PTR [rsp+0xa4],0x21
  405c5d:	mov    r10d,DWORD PTR [rsp+0x44]
  405c62:	test   r10d,r10d
  405c65:	jne    0x405c75
  405c67:	mov    edx,DWORD PTR [rsp+0x40]
  405c6b:	cmp    DWORD PTR [rsp+0x48],edx
  405c6f:	jl     0x405778
  405c75:	mov    r9,QWORD PTR [rsp+0xc8]
  405c7d:	mov    eax,DWORD PTR [r9+0x18]
  405c81:	test   al,0x1
  405c83:	je     0x405280
  405c89:	test   ebp,ebp
  405c8b:	jne    0x405db0
  405c91:	cmp    DWORD PTR [rsp+0x48],0x1
  405c96:	je     0x405c1a
  405c98:	sub    eax,0x1
  405c9b:	mov    DWORD PTR [rsp+0xa4],0x11
  405ca6:	mov    DWORD PTR [r9+0x18],eax
  405caa:	jmp    0x405280
  405caf:	mov    rcx,QWORD PTR [rsp+0xc8]
  405cb7:	neg    edx
  405cb9:	call   0x406d20
  405cbe:	jmp    0x40596e
  405cc3:	xor    r8d,r8d
  405cc6:	jmp    0x404c5f
  405ccb:	cmp    ebp,0x10
  405cce:	jg     0x405cd7
  405cd0:	lea    eax,[rdx+rdx*4]
  405cd3:	lea    edx,[r8+rax*2]
  405cd7:	mov    r8,QWORD PTR [rsp+0xc0]
  405cdf:	xor    ecx,ecx
  405ce1:	jmp    0x404a2f
  405ce6:	cmp    edx,0xffffffff
  405ce9:	jl     0x404ba4
  405cef:	mov    rax,QWORD PTR [rsp+0xc8]
  405cf7:	mov    DWORD PTR [rsp+0xa8],0x1
  405d02:	mov    DWORD PTR [rax+0x14],0x1
  405d09:	mov    DWORD PTR [rax+0x18],0x1
  405d10:	jmp    0x404b76
  405d15:	mov    DWORD PTR [rsp+0xa4],0x11
  405d20:	jmp    0x405c5d
  405d25:	xor    ecx,ecx
  405d27:	jmp    0x404d08
  405d2c:	mov    edx,DWORD PTR [rsp+0x8c]
  405d33:	cmp    DWORD PTR [rsp+0x50],edx
  405d37:	jne    0x405dfd
  405d3d:	mov    rax,QWORD PTR [rsp+0xc8]
  405d45:	mov    DWORD PTR [rsp+0xa4],0x21
  405d50:	cmp    DWORD PTR [rax+0x14],0x1
  405d54:	jne    0x405280
  405d5a:	cmp    DWORD PTR [rax+0x18],0x1
  405d5e:	mov    eax,DWORD PTR [rsp+0x48]
  405d62:	cmovne eax,DWORD PTR [rsp+0x84]
  405d6a:	mov    DWORD PTR [rsp+0x84],eax
  405d71:	jmp    0x405280
  405d76:	mov    r8,QWORD PTR [rsp+0x1a0]
  405d7e:	mov    rdx,QWORD PTR [rsp+0x190]
  405d86:	mov    rcx,rbx
  405d89:	call   0x406ef0
  405d8e:	mov    DWORD PTR [rsp+0xa4],eax
  405d95:	mov    rax,QWORD PTR [rsp+0x190]
  405d9d:	mov    eax,DWORD PTR [rax+0x8]
  405da0:	add    eax,0x1
  405da3:	jmp    0x404670
  405da8:	xor    r8d,r8d
  405dab:	jmp    0x405842
  405db0:	mov    rcx,r9
  405db3:	call   0x403d60
  405db8:	mov    edx,DWORD PTR [rax+0x14]
  405dbb:	mov    ecx,DWORD PTR [rsp+0xa8]
  405dc2:	mov    QWORD PTR [rsp+0xc8],rax
  405dca:	sub    edx,0x1
  405dcd:	movsxd rdx,edx
  405dd0:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  405dd5:	mov    eax,ecx
  405dd7:	neg    eax
  405dd9:	and    eax,0x1f
  405ddc:	xor    edx,0x1f
  405ddf:	cmp    edx,eax
  405de1:	je     0x405ded
  405de3:	add    ecx,0x1
  405de6:	mov    DWORD PTR [rsp+0xa8],ecx
  405ded:	mov    DWORD PTR [rsp+0xa4],0x21
  405df8:	jmp    0x405280
  405dfd:	mov    DWORD PTR [rsp+0xa4],0x1
  405e08:	jmp    0x405aaa
  405e0d:	nop
  405e0e:	nop
  405e0f:	nop
  405e10:	push   r13
  405e12:	push   r12
  405e14:	push   rbp
  405e15:	push   rdi
  405e16:	push   rsi
  405e17:	push   rbx
  405e18:	sub    rsp,0x28
  405e1c:	mov    eax,DWORD PTR [rdx+0x14]
  405e1f:	cmp    DWORD PTR [rcx+0x14],eax
  405e22:	mov    rsi,rcx
  405e25:	mov    rdi,rdx
  405e28:	jge    0x405e30
  405e2a:	mov    rsi,rdx
  405e2d:	mov    rdi,rcx
  405e30:	mov    ecx,DWORD PTR [rsi+0x8]
  405e33:	xor    r12d,r12d
  405e36:	call   0x4073d0
  405e3b:	movsxd rcx,DWORD PTR [rsi+0x14]
  405e3f:	mov    rbx,rax
  405e42:	lea    r11,[rdi+0x18]
  405e46:	lea    r8,[rbx+0x18]
  405e4a:	mov    DWORD PTR [rax+0x14],ecx
  405e4d:	movsxd rdx,DWORD PTR [rdi+0x14]
  405e51:	lea    rax,[rsi+0x18]
  405e55:	lea    rdi,[r8+rdx*4]
  405e59:	mov    rbp,rdx
  405e5c:	nop    DWORD PTR [rax+0x0]
  405e60:	mov    r10d,DWORD PTR [rax]
  405e63:	mov    r9d,DWORD PTR [r11]
  405e66:	add    r8,0x4
  405e6a:	add    rax,0x4
  405e6e:	add    r11,0x4
  405e72:	movzx  r13d,r9w
  405e76:	movzx  edx,r10w
  405e7a:	shr    r9d,0x10
  405e7e:	add    edx,r13d
  405e81:	shr    r10d,0x10
  405e85:	add    edx,r12d
  405e88:	add    r10d,r9d
  405e8b:	mov    r9d,edx
  405e8e:	mov    WORD PTR [r8-0x4],dx
  405e93:	and    r9d,0x10000
  405e9a:	shr    r9d,0x10
  405e9e:	add    r9d,r10d
  405ea1:	mov    r12d,r9d
  405ea4:	mov    WORD PTR [r8-0x2],r9w
  405ea9:	and    r12d,0x10000
  405eb0:	shr    r12d,0x10
  405eb4:	cmp    rdi,r8
  405eb7:	ja     0x405e60
  405eb9:	mov    edx,DWORD PTR [rsi+0x14]
  405ebc:	sub    edx,ebp
  405ebe:	movsxd rdx,edx
  405ec1:	lea    r11,[rdi+rdx*4]
  405ec5:	cmp    r11,r8
  405ec8:	jbe    0x405f0b
  405eca:	nop    WORD PTR [rax+rax*1+0x0]
  405ed0:	mov    r9d,DWORD PTR [rax]
  405ed3:	add    r8,0x4
  405ed7:	add    rax,0x4
  405edb:	movzx  r10d,r9w
  405edf:	shr    r9d,0x10
  405ee3:	add    r10d,r12d
  405ee6:	mov    edx,r10d
  405ee9:	mov    WORD PTR [r8-0x4],r10w
  405eee:	and    edx,0x10000
  405ef4:	shr    edx,0x10
  405ef7:	add    edx,r9d
  405efa:	mov    WORD PTR [r8-0x2],dx
  405eff:	mov    r12d,edx
  405f02:	shr    r12d,0x10
  405f06:	cmp    r11,r8
  405f09:	ja     0x405ed0
  405f0b:	test   r12d,r12d
  405f0e:	je     0x405f23
  405f10:	cmp    ecx,DWORD PTR [rbx+0xc]
  405f13:	je     0x405f33
  405f15:	lea    eax,[rcx+0x1]
  405f18:	mov    DWORD PTR [rbx+0x14],eax
  405f1b:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  405f23:	mov    rax,rbx
  405f26:	add    rsp,0x28
  405f2a:	pop    rbx
  405f2b:	pop    rsi
  405f2c:	pop    rdi
  405f2d:	pop    rbp
  405f2e:	pop    r12
  405f30:	pop    r13
  405f32:	ret    
  405f33:	mov    eax,DWORD PTR [rbx+0x8]
  405f36:	lea    ecx,[rax+0x1]
  405f39:	call   0x4073d0
  405f3e:	mov    rsi,rax
  405f41:	lea    rcx,[rax+0x10]
  405f45:	movsxd rax,DWORD PTR [rbx+0x14]
  405f49:	lea    rdx,[rbx+0x10]
  405f4d:	lea    r8,[rax*4+0x8]
  405f55:	call   0x408178
  405f5a:	mov    rcx,rbx
  405f5d:	mov    rbx,rsi
  405f60:	call   0x4074e0
  405f65:	movsxd rcx,DWORD PTR [rsi+0x14]
  405f69:	jmp    0x405f15
  405f6b:	nop
  405f6c:	nop
  405f6d:	nop
  405f6e:	nop
  405f6f:	nop
  405f70:	sub    rsp,0x78
  405f74:	movaps XMMWORD PTR [rsp+0x50],xmm6
  405f79:	movaps XMMWORD PTR [rsp+0x60],xmm7
  405f7e:	movsd  QWORD PTR [rsp+0x48],xmm0
  405f84:	movapd xmm7,xmm0
  405f88:	mov    eax,DWORD PTR [rsp+0x4c]
  405f8c:	mov    ecx,eax
  405f8e:	and    eax,0x7ff00000
  405f93:	and    ecx,0xfffff
  405f99:	or     ecx,DWORD PTR [rsp+0x48]
  405f9d:	mov    r9d,ecx
  405fa0:	or     r9d,eax
  405fa3:	je     0x406040
  405fa9:	cmp    eax,0x7ff00000
  405fae:	je     0x4060a3
  405fb4:	movsd  xmm1,QWORD PTR [rip+0x5e5c]        # 0x40be18
  405fbc:	mov    ecx,0x0
  405fc1:	ucomisd xmm0,xmm1
  405fc5:	setnp  al
  405fc8:	cmovne eax,ecx
  405fcb:	test   al,al
  405fcd:	jne    0x406090
  405fd3:	test   edx,edx
  405fd5:	je     0x406090
  405fdb:	movsd  xmm0,QWORD PTR [rip+0x5e5d]        # 0x40be40
  405fe3:	test   edx,edx
  405fe5:	mov    eax,edx
  405fe7:	andpd  xmm0,xmm7
  405feb:	js     0x406130
  405ff1:	cmp    eax,0x1
  405ff4:	je     0x406020
  405ff6:	test   al,0x1
  405ff8:	movapd xmm3,xmm1
  405ffc:	jne    0x406143
  406002:	movapd xmm2,xmm0
  406006:	movapd xmm0,xmm3
  40600a:	shr    eax,1
  40600c:	nop    DWORD PTR [rax+0x0]
  406010:	test   al,0x1
  406012:	mulsd  xmm2,xmm2
  406016:	je     0x40601c
  406018:	mulsd  xmm0,xmm2
  40601c:	shr    eax,1
  40601e:	jne    0x406010
  406020:	and    edx,0x1
  406023:	je     0x406094
  406025:	movq   rax,xmm7
  40602a:	test   rax,rax
  40602d:	jns    0x406094
  40602f:	movsd  xmm2,QWORD PTR [rip+0x5e19]        # 0x40be50
  406037:	xorpd  xmm0,xmm2
  40603b:	jmp    0x406094
  40603d:	nop    DWORD PTR [rax]
  406040:	movsd  xmm1,QWORD PTR [rip+0x5dd0]        # 0x40be18
  406048:	mov    ecx,0x0
  40604d:	ucomisd xmm0,xmm1
  406051:	setnp  al
  406054:	cmovne eax,ecx
  406057:	test   al,al
  406059:	jne    0x406090
  40605b:	test   edx,edx
  40605d:	je     0x406090
  40605f:	mov    eax,edx
  406061:	and    eax,0x1
  406064:	test   edx,edx
  406066:	js     0x4061a0
  40606c:	test   eax,eax
  40606e:	je     0x406081
  406070:	movq   rax,xmm7
  406075:	shr    rax,0x20
  406079:	test   eax,eax
  40607b:	js     0x4061e0
  406081:	pxor   xmm0,xmm0
  406085:	jmp    0x406094
  406087:	nop    WORD PTR [rax+rax*1+0x0]
  406090:	movapd xmm0,xmm1
  406094:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  406099:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  40609e:	add    rsp,0x78
  4060a2:	ret    
  4060a3:	test   ecx,ecx
  4060a5:	je     0x406150
  4060ab:	movsd  xmm1,QWORD PTR [rip+0x5d65]        # 0x40be18
  4060b3:	mov    ecx,0x0
  4060b8:	ucomisd xmm0,xmm1
  4060bc:	setnp  al
  4060bf:	cmovne eax,ecx
  4060c2:	test   al,al
  4060c4:	jne    0x406090
  4060c6:	test   edx,edx
  4060c8:	je     0x406090
  4060ca:	movq   rax,xmm7
  4060cf:	shr    rax,0x20
  4060d3:	test   eax,eax
  4060d5:	js     0x4061f0
  4060db:	movsd  xmm6,QWORD PTR [rip+0x5d2d]        # 0x40be10
  4060e3:	mov    DWORD PTR [rsp+0x3c],edx
  4060e7:	call   0x408220
  4060ec:	mov    edx,DWORD PTR [rsp+0x3c]
  4060f0:	pxor   xmm3,xmm3
  4060f4:	mov    DWORD PTR [rax],0x21
  4060fa:	movapd xmm2,xmm7
  4060fe:	movsd  QWORD PTR [rsp+0x20],xmm6
  406104:	mov    ecx,0x1
  406109:	cvtsi2sd xmm3,edx
  40610d:	lea    rdx,[rip+0x5cec]        # 0x40be00
  406114:	call   0x4023a0
  406119:	movapd xmm0,xmm6
  40611d:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  406122:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  406127:	add    rsp,0x78
  40612b:	ret    
  40612c:	nop    DWORD PTR [rax+0x0]
  406130:	movapd xmm4,xmm1
  406134:	neg    eax
  406136:	divsd  xmm4,xmm0
  40613a:	movapd xmm0,xmm4
  40613e:	jmp    0x405ff1
  406143:	movapd xmm3,xmm0
  406147:	jmp    0x406002
  40614c:	nop    DWORD PTR [rax+0x0]
  406150:	movsd  xmm1,QWORD PTR [rip+0x5cc0]        # 0x40be18
  406158:	mov    r8d,edx
  40615b:	and    r8d,0x1
  40615f:	mov    ecx,0x0
  406164:	ucomisd xmm0,xmm1
  406168:	setnp  al
  40616b:	cmovne eax,ecx
  40616e:	test   al,al
  406170:	jne    0x406090
  406176:	test   edx,edx
  406178:	je     0x406090
  40617e:	movq   rax,xmm7
  406183:	shr    rax,0x20
  406187:	test   eax,eax
  406189:	js     0x406200
  40618b:	test   edx,edx
  40618d:	movsd  xmm0,QWORD PTR [rip+0x5c9b]        # 0x40be30
  406195:	jns    0x406094
  40619b:	jmp    0x406081
  4061a0:	test   eax,eax
  4061a2:	je     0x406260
  4061a8:	movq   rax,xmm7
  4061ad:	movsd  xmm0,QWORD PTR [rip+0x5c7b]        # 0x40be30
  4061b5:	shr    rax,0x20
  4061b9:	test   eax,eax
  4061bb:	jns    0x406094
  4061c1:	movsd  xmm0,QWORD PTR [rip+0x5c5f]        # 0x40be28
  4061c9:	jmp    0x406094
  4061ce:	xchg   ax,ax
  4061d0:	test   r8d,r8d
  4061d3:	pxor   xmm0,xmm0
  4061d7:	je     0x406094
  4061dd:	nop    DWORD PTR [rax]
  4061e0:	movsd  xmm0,QWORD PTR [rip+0x5c38]        # 0x40be20
  4061e8:	jmp    0x406094
  4061ed:	nop    DWORD PTR [rax]
  4061f0:	movsd  xmm6,QWORD PTR [rip+0x5c10]        # 0x40be08
  4061f8:	jmp    0x4060e3
  4061fd:	nop    DWORD PTR [rax]
  406200:	mov    eax,r8d
  406203:	mov    ecx,edx
  406205:	xor    eax,0x1
  406208:	shr    ecx,0x1f
  40620b:	and    eax,0x1
  40620e:	je     0x40621c
  406210:	test   cl,cl
  406212:	pxor   xmm0,xmm0
  406216:	jne    0x406094
  40621c:	not    edx
  40621e:	shr    edx,0x1f
  406221:	test   r8d,r8d
  406224:	je     0x406236
  406226:	test   dl,dl
  406228:	movsd  xmm0,QWORD PTR [rip+0x5bf8]        # 0x40be28
  406230:	jne    0x406094
  406236:	test   al,al
  406238:	je     0x40624a
  40623a:	test   dl,dl
  40623c:	movsd  xmm0,QWORD PTR [rip+0x5bec]        # 0x40be30
  406244:	jne    0x406094
  40624a:	test   cl,cl
  40624c:	jne    0x4061d0
  40624e:	test   r8d,r8d
  406251:	movsd  xmm0,QWORD PTR [rip+0x5bcf]        # 0x40be28
  406259:	jne    0x406094
  40625f:	nop
  406260:	movsd  xmm0,QWORD PTR [rip+0x5bc8]        # 0x40be30
  406268:	jmp    0x406094
  40626d:	nop
  40626e:	nop
  40626f:	nop
  406270:	fld    TBYTE PTR [rdx]
  406272:	fxam   
  406274:	fstsw  ax
  406277:	mov    dh,0x45
  406279:	and    dh,ah
  40627b:	cmp    dh,0x5
  40627e:	je     0x4062bf
  406280:	fld    st(0)
  406282:	sub    rsp,0x8
  406286:	fnstcw WORD PTR [rsp+0x4]
  40628a:	movzx  eax,WORD PTR [rsp+0x4]
  40628f:	or     ah,0xc
  406292:	mov    WORD PTR [rsp],ax
  406296:	fldcw  WORD PTR [rsp]
  406299:	frndint 
  40629b:	fldcw  WORD PTR [rsp+0x4]
  40629f:	add    rsp,0x8
  4062a3:	fsub   st(1),st
  4062a5:	fxch   st(1)
  4062a7:	f2xm1  
  4062a9:	fld1   
  4062ab:	faddp  st(1),st
  4062ad:	fscale 
  4062af:	fstp   st(1)
  4062b1:	mov    rax,rcx
  4062b4:	mov    QWORD PTR [rcx+0x8],0x0
  4062bc:	fstp   TBYTE PTR [rcx]
  4062be:	ret    
  4062bf:	test   eax,0x200
  4062c4:	je     0x4062ca
  4062c6:	fstp   st(0)
  4062c8:	fldz   
  4062ca:	mov    rax,rcx
  4062cd:	mov    QWORD PTR [rcx+0x8],0x0
  4062d5:	fstp   TBYTE PTR [rcx]
  4062d7:	ret    
  4062d8:	nop
  4062d9:	nop
  4062da:	nop
  4062db:	nop
  4062dc:	nop
  4062dd:	nop
  4062de:	nop
  4062df:	nop
  4062e0:	sub    rsp,0x48
  4062e4:	movsd  QWORD PTR [rsp+0x30],xmm0
  4062ea:	mov    eax,DWORD PTR [rsp+0x34]
  4062ee:	movapd xmm1,xmm0
  4062f2:	mov    ecx,eax
  4062f4:	and    ecx,0x7ff00000
  4062fa:	cmp    ecx,0x7ff00000
  406300:	sete   r8b
  406304:	and    eax,0xfffff
  406309:	or     eax,ecx
  40630b:	or     eax,DWORD PTR [rsp+0x30]
  40630f:	sete   r9b
  406313:	test   ecx,ecx
  406315:	sete   al
  406318:	or     eax,r9d
  40631b:	cmp    r8b,al
  40631e:	ja     0x4063b9
  406324:	pxor   xmm2,xmm2
  406328:	ucomisd xmm0,xmm2
  40632c:	jp     0x406338
  40632e:	movapd xmm1,xmm0
  406332:	je     0x4063b9
  406338:	pxor   xmm3,xmm3
  40633c:	movsd  QWORD PTR [rsp+0x20],xmm0
  406342:	fld    QWORD PTR [rsp+0x20]
  406346:	cvtsi2sd xmm3,edx
  40634a:	movsd  QWORD PTR [rsp+0x28],xmm3
  406350:	fld    QWORD PTR [rsp+0x28]
  406354:	fxch   st(1)
  406356:	fscale 
  406358:	fstp   st(1)
  40635a:	fstp   QWORD PTR [rsp+0x20]
  40635e:	movsd  xmm4,QWORD PTR [rsp+0x20]
  406364:	movsd  QWORD PTR [rsp+0x38],xmm4
  40636a:	mov    eax,DWORD PTR [rsp+0x3c]
  40636e:	mov    edx,eax
  406370:	and    edx,0x7ff00000
  406376:	cmp    edx,0x7ff00000
  40637c:	sete   cl
  40637f:	and    eax,0xfffff
  406384:	or     eax,edx
  406386:	or     eax,DWORD PTR [rsp+0x38]
  40638a:	sete   r8b
  40638e:	test   edx,edx
  406390:	sete   al
  406393:	or     eax,r8d
  406396:	cmp    cl,al
  406398:	ja     0x4063a8
  40639a:	movsd  xmm5,QWORD PTR [rsp+0x20]
  4063a0:	ucomisd xmm5,xmm2
  4063a4:	jp     0x4063c2
  4063a6:	jne    0x4063c2
  4063a8:	call   0x408220
  4063ad:	movsd  xmm1,QWORD PTR [rsp+0x20]
  4063b3:	mov    DWORD PTR [rax],0x22
  4063b9:	movapd xmm0,xmm1
  4063bd:	add    rsp,0x48
  4063c1:	ret    
  4063c2:	movsd  xmm1,QWORD PTR [rsp+0x20]
  4063c8:	movapd xmm0,xmm1
  4063cc:	add    rsp,0x48
  4063d0:	ret    
  4063d1:	nop
  4063d2:	nop
  4063d3:	nop
  4063d4:	nop
  4063d5:	nop
  4063d6:	nop
  4063d7:	nop
  4063d8:	nop
  4063d9:	nop
  4063da:	nop
  4063db:	nop
  4063dc:	nop
  4063dd:	nop
  4063de:	nop
  4063df:	nop
  4063e0:	add    BYTE PTR [rax],al
  4063e2:	add    BYTE PTR [rax],al
  4063e4:	add    BYTE PTR [rax],al
  4063e6:	lock (bad) 
  4063e8:	pop    rdx
  4063ea:	cmc    
  4063eb:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  4063ef:	(bad)  
  4063f0:	fld    QWORD PTR [rip+0xffffffffffffffea]        # 0x4063e0
  4063f6:	fld    TBYTE PTR [rdx]
  4063f8:	fxam   
  4063fa:	fnstsw ax
  4063fc:	fld    st(0)
  4063fe:	sahf   
  4063ff:	jb     0x406438
  406401:	fsub   st,st(2)
  406403:	fld    st(0)
  406405:	fabs   
  406407:	fcomp  QWORD PTR [rip+0xffffffffffffffdb]        # 0x4063e8
  40640d:	fnstsw ax
  40640f:	and    ah,0x45
  406412:	je     0x406426
  406414:	fstp   st(1)
  406416:	fyl2xp1 
  406418:	mov    rax,rcx
  40641b:	mov    QWORD PTR [rcx+0x8],0x0
  406423:	fstp   TBYTE PTR [rcx]
  406425:	ret    
  406426:	fstp   st(0)
  406428:	fyl2x  
  40642a:	mov    rax,rcx
  40642d:	mov    QWORD PTR [rcx+0x8],0x0
  406435:	fstp   TBYTE PTR [rcx]
  406437:	ret    
  406438:	jp     0x406401
  40643a:	fstp   st(1)
  40643c:	fstp   st(1)
  40643e:	mov    rax,rcx
  406441:	mov    QWORD PTR [rcx+0x8],0x0
  406449:	fstp   TBYTE PTR [rcx]
  40644b:	ret    
  40644c:	nop
  40644d:	nop
  40644e:	nop
  40644f:	nop
  406450:	push   r15
  406452:	push   r14
  406454:	push   r13
  406456:	push   r12
  406458:	push   rbp
  406459:	push   rdi
  40645a:	push   rsi
  40645b:	push   rbx
  40645c:	sub    rsp,0x28
  406460:	mov    r14,rcx
  406463:	mov    r13,rdx
  406466:	mov    QWORD PTR [rsp+0x80],r8
  40646e:	mov    QWORD PTR [rsp+0x88],r9
  406476:	call   0x408188
  40647b:	mov    rdi,QWORD PTR [rip+0x5bfe]        # 0x40c080
  406482:	mov    rsi,QWORD PTR [rax]
  406485:	cmp    BYTE PTR [rdi+0x30],0x0
  406489:	je     0x4068b0
  40648f:	mov    rax,QWORD PTR [rsp+0x88]
  406497:	xor    r8d,r8d
  40649a:	mov    QWORD PTR [rax],0x0
  4064a1:	mov    rbx,QWORD PTR [r14]
  4064a4:	movzx  edx,BYTE PTR [rbx+0x2]
  4064a8:	lea    rax,[rbx+0x3]
  4064ac:	add    rbx,0x2
  4064b0:	cmp    dl,0x30
  4064b3:	jne    0x4064c9
  4064b5:	mov    rbx,rax
  4064b8:	add    rax,0x1
  4064bc:	movzx  edx,BYTE PTR [rax-0x1]
  4064c0:	add    r8d,0x1
  4064c4:	cmp    dl,0x30
  4064c7:	je     0x4064b5
  4064c9:	cmp    BYTE PTR [rdi+rdx*1],0x0
  4064cd:	jne    0x406620
  4064d3:	movzx  r9d,BYTE PTR [rsi]
  4064d7:	test   r9b,r9b
  4064da:	je     0x406b1a
  4064e0:	movzx  edx,BYTE PTR [rbx]
  4064e3:	cmp    r9b,dl
  4064e6:	jne    0x4068c3
  4064ec:	mov    eax,0x1
  4064f1:	jmp    0x406501
  4064f3:	add    rax,0x1
  4064f7:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  4064fb:	jne    0x4068c0
  406501:	movzx  edx,BYTE PTR [rsi+rax*1]
  406505:	test   dl,dl
  406507:	jne    0x4064f3
  406509:	add    rax,rbx
  40650c:	movzx  ecx,BYTE PTR [rax]
  40650f:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  406514:	mov    rdx,rcx
  406517:	test   r10b,r10b
  40651a:	jne    0x4069a0
  406520:	cmp    dl,0x50
  406523:	je     0x4067d0
  406529:	cmp    dl,0x70
  40652c:	je     0x4067d0
  406532:	mov    rbp,rax
  406535:	mov    r11d,0x1
  40653b:	xor    r12d,r12d
  40653e:	xor    r15d,r15d
  406541:	xor    r10d,r10d
  406544:	test   r8d,r8d
  406547:	jne    0x40654d
  406549:	lea    rax,[rbx-0x1]
  40654d:	test   r11d,r11d
  406550:	mov    QWORD PTR [r14],rax
  406553:	jne    0x406880
  406559:	test   r10d,r10d
  40655c:	je     0x406690
  406562:	test   r15d,r15d
  406565:	mov    eax,DWORD PTR [r13+0xc]
  406569:	jne    0x406910
  40656f:	cmp    eax,0x2
  406572:	je     0x406bb8
  406578:	cmp    eax,0x3
  40657b:	je     0x406ba2
  406581:	cmp    eax,0x1
  406584:	je     0x406988
  40658a:	mov    esi,DWORD PTR [r13+0x0]
  40658e:	mov    ebx,esi
  406590:	and    esi,0x1f
  406593:	sar    ebx,0x5
  406596:	cmp    esi,0x1
  406599:	mov    edi,ebx
  40659b:	sbb    edi,0xffffffff
  40659e:	xor    ecx,ecx
  4065a0:	mov    eax,edi
  4065a2:	sar    eax,1
  4065a4:	je     0x4065b7
  4065a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065b0:	add    ecx,0x1
  4065b3:	sar    eax,1
  4065b5:	jne    0x4065b0
  4065b7:	call   0x4073d0
  4065bc:	mov    rcx,QWORD PTR [rsp+0x88]
  4065c4:	test   ebx,ebx
  4065c6:	mov    QWORD PTR [rcx],rax
  4065c9:	mov    DWORD PTR [rax+0x14],edi
  4065cc:	jle    0x406cd8
  4065d2:	lea    ecx,[rbx-0x1]
  4065d5:	lea    rdx,[rax+0x18]
  4065d9:	lea    rcx,[rax+rcx*4+0x1c]
  4065de:	xchg   ax,ax
  4065e0:	mov    DWORD PTR [rdx],0xffffffff
  4065e6:	add    rdx,0x4
  4065ea:	cmp    rdx,rcx
  4065ed:	jne    0x4065e0
  4065ef:	mov    edx,ebx
  4065f1:	cmp    edi,ebx
  4065f3:	jle    0x406608
  4065f5:	movsxd r8,edx
  4065f8:	mov    edx,0x20
  4065fd:	mov    ecx,edx
  4065ff:	sub    ecx,esi
  406601:	sar    edx,cl
  406603:	mov    DWORD PTR [rax+r8*4+0x18],edx
  406608:	mov    eax,DWORD PTR [r13+0x4]
  40660c:	mov    rdi,QWORD PTR [rsp+0x80]
  406614:	mov    DWORD PTR [rdi],eax
  406616:	mov    eax,0x11
  40661b:	jmp    0x406882
  406620:	movzx  eax,BYTE PTR [rbx]
  406623:	movzx  r9d,BYTE PTR [rsi]
  406627:	add    r8d,0x1
  40662b:	xor    r11d,r11d
  40662e:	xor    r12d,r12d
  406631:	movzx  r10d,BYTE PTR [rdi+rax*1]
  406636:	mov    rdx,rax
  406639:	test   r10b,r10b
  40663c:	mov    rax,rbx
  40663f:	je     0x406651
  406641:	add    rax,0x1
  406645:	movzx  ecx,BYTE PTR [rax]
  406648:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40664c:	mov    rdx,rcx
  40664f:	jne    0x406641
  406651:	cmp    dl,r9b
  406654:	je     0x4068d0
  40665a:	test   r12,r12
  40665d:	movzx  edx,BYTE PTR [rax]
  406660:	je     0x406669
  406662:	sub    r12d,eax
  406665:	shl    r12d,0x2
  406669:	cmp    dl,0x50
  40666c:	je     0x4067d9
  406672:	cmp    dl,0x70
  406675:	je     0x4067d9
  40667b:	test   r11d,r11d
  40667e:	mov    QWORD PTR [r14],rax
  406681:	mov    rbp,rax
  406684:	jne    0x406880
  40668a:	nop    WORD PTR [rax+rax*1+0x0]
  406690:	mov    rax,rbp
  406693:	xor    ecx,ecx
  406695:	sub    rax,rbx
  406698:	sub    eax,0x1
  40669b:	cmp    eax,0x7
  40669e:	jle    0x4066aa
  4066a0:	sar    eax,1
  4066a2:	add    ecx,0x1
  4066a5:	cmp    eax,0x7
  4066a8:	jg     0x4066a0
  4066aa:	call   0x4073d0
  4066af:	cmp    BYTE PTR [rsi+0x1],0x0
  4066b3:	mov    r14,rax
  4066b6:	lea    r15,[rax+0x18]
  4066ba:	je     0x406bce
  4066c0:	mov    edx,0x1
  4066c5:	jmp    0x4066d3
  4066c7:	nop    WORD PTR [rax+rax*1+0x0]
  4066d0:	mov    rdx,rax
  4066d3:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  4066d8:	lea    rax,[rdx+0x1]
  4066dc:	jne    0x4066d0
  4066de:	cmp    rbx,rbp
  4066e1:	jae    0x406bd5
  4066e7:	add    rsi,rdx
  4066ea:	mov    rax,r15
  4066ed:	xor    r9d,r9d
  4066f0:	xor    r8d,r8d
  4066f3:	jmp    0x406721
  4066f5:	cmp    r8d,0x20
  4066f9:	je     0x406893
  4066ff:	movzx  r10d,cl
  406703:	mov    ecx,r8d
  406706:	add    r8d,0x4
  40670a:	movzx  r10d,BYTE PTR [rdi+r10*1]
  40670f:	mov    rbp,r11
  406712:	and    r10d,0xf
  406716:	shl    r10d,cl
  406719:	or     r9d,r10d
  40671c:	cmp    rbx,rbp
  40671f:	jae    0x406738
  406721:	movzx  ecx,BYTE PTR [rbp-0x1]
  406725:	lea    r11,[rbp-0x1]
  406729:	cmp    cl,BYTE PTR [rsi]
  40672b:	jne    0x4066f5
  40672d:	sub    r11,rdx
  406730:	mov    rbp,r11
  406733:	cmp    rbx,rbp
  406736:	jb     0x406721
  406738:	bsr    edx,r9d
  40673c:	xor    edx,0x1f
  40673f:	mov    DWORD PTR [rax],r9d
  406742:	add    rax,0x4
  406746:	mov    esi,DWORD PTR [r13+0x0]
  40674a:	sub    rax,r15
  40674d:	sar    rax,0x2
  406751:	mov    DWORD PTR [r14+0x14],eax
  406755:	shl    eax,0x5
  406758:	sub    eax,edx
  40675a:	cmp    eax,esi
  40675c:	jg     0x406a08
  406762:	mov    edi,0x0
  406767:	jl     0x4069de
  40676d:	cmp    r12d,DWORD PTR [r13+0x8]
  406771:	jg     0x406980
  406777:	mov    eax,DWORD PTR [r13+0x4]
  40677b:	cmp    r12d,eax
  40677e:	jge    0x406a69
  406784:	mov    ebx,eax
  406786:	sub    ebx,r12d
  406789:	cmp    esi,ebx
  40678b:	jg     0x406ac7
  406791:	mov    edx,DWORD PTR [r13+0xc]
  406795:	cmp    edx,0x2
  406798:	je     0x406ca2
  40679e:	cmp    edx,0x3
  4067a1:	je     0x406c7f
  4067a7:	cmp    edx,0x1
  4067aa:	je     0x406cb2
  4067b0:	mov    rcx,r14
  4067b3:	call   0x4074e0
  4067b8:	call   0x408220
  4067bd:	mov    DWORD PTR [rax],0x22
  4067c3:	mov    eax,0x50
  4067c8:	jmp    0x406882
  4067cd:	nop    DWORD PTR [rax]
  4067d0:	xor    r12d,r12d
  4067d3:	mov    r11d,0x1
  4067d9:	movzx  edx,BYTE PTR [rax+0x1]
  4067dd:	cmp    dl,0x2b
  4067e0:	je     0x406a00
  4067e6:	cmp    dl,0x2d
  4067e9:	je     0x4068e1
  4067ef:	movzx  edx,BYTE PTR [rdi+rdx*1]
  4067f3:	xor    r15d,r15d
  4067f6:	lea    r9,[rax+0x1]
  4067fa:	lea    ecx,[rdx-0x1]
  4067fd:	cmp    cl,0x18
  406800:	ja     0x4068ff
  406806:	lea    rcx,[r9+0x1]
  40680a:	movzx  r9d,BYTE PTR [r9+0x1]
  40680f:	sub    edx,0x10
  406812:	xor    r10d,r10d
  406815:	movzx  ebp,BYTE PTR [rdi+r9*1]
  40681a:	mov    r9d,ebp
  40681d:	sub    r9d,0x1
  406821:	cmp    r9b,0x18
  406825:	ja     0x406861
  406827:	nop    WORD PTR [rax+rax*1+0x0]
  406830:	test   edx,0xf8000000
  406836:	mov    r9d,0x1
  40683c:	lea    edx,[rdx+rdx*4]
  40683f:	cmovne r10d,r9d
  406843:	add    rcx,0x1
  406847:	movzx  r9d,BYTE PTR [rcx]
  40684b:	lea    edx,[rbp+rdx*2-0x10]
  40684f:	movzx  ebp,BYTE PTR [rdi+r9*1]
  406854:	mov    r9d,ebp
  406857:	sub    r9d,0x1
  40685b:	cmp    r9b,0x18
  40685f:	jbe    0x406830
  406861:	mov    r9d,r15d
  406864:	mov    rbp,rax
  406867:	mov    rax,rcx
  40686a:	neg    r9d
  40686d:	xor    edx,r9d
  406870:	add    edx,r15d
  406873:	add    r12d,edx
  406876:	jmp    0x406544
  40687b:	nop    DWORD PTR [rax+rax*1+0x0]
  406880:	xor    eax,eax
  406882:	add    rsp,0x28
  406886:	pop    rbx
  406887:	pop    rsi
  406888:	pop    rdi
  406889:	pop    rbp
  40688a:	pop    r12
  40688c:	pop    r13
  40688e:	pop    r14
  406890:	pop    r15
  406892:	ret    
  406893:	mov    DWORD PTR [rax],r9d
  406896:	mov    r8d,0x4
  40689c:	movzx  r10d,BYTE PTR [rbp-0x1]
  4068a1:	add    rax,0x4
  4068a5:	xor    r9d,r9d
  4068a8:	xor    ecx,ecx
  4068aa:	jmp    0x40670a
  4068af:	nop
  4068b0:	call   0x406e60
  4068b5:	jmp    0x40648f
  4068ba:	nop    WORD PTR [rax+rax*1+0x0]
  4068c0:	mov    edx,r9d
  4068c3:	mov    rax,rbx
  4068c6:	jmp    0x406520
  4068cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4068d0:	test   r12,r12
  4068d3:	je     0x406be5
  4068d9:	movzx  edx,BYTE PTR [rax]
  4068dc:	jmp    0x406662
  4068e1:	mov    r15d,0x1
  4068e7:	movzx  edx,BYTE PTR [rax+0x2]
  4068eb:	lea    r9,[rax+0x2]
  4068ef:	movzx  edx,BYTE PTR [rdi+rdx*1]
  4068f3:	lea    ecx,[rdx-0x1]
  4068f6:	cmp    cl,0x18
  4068f9:	jbe    0x406806
  4068ff:	mov    rbp,rax
  406902:	xor    r10d,r10d
  406905:	jmp    0x406544
  40690a:	nop    WORD PTR [rax+rax*1+0x0]
  406910:	cmp    eax,0x2
  406913:	je     0x406ab1
  406919:	cmp    eax,0x3
  40691c:	jne    0x4067b8
  406922:	mov    r10d,DWORD PTR [rsp+0x90]
  40692a:	test   r10d,r10d
  40692d:	je     0x4067b8
  406933:	xor    ecx,ecx
  406935:	call   0x4073d0
  40693a:	mov    r14,rax
  40693d:	mov    DWORD PTR [rax+0x14],0x1
  406944:	mov    DWORD PTR [rax+0x18],0x1
  40694b:	mov    eax,DWORD PTR [r13+0x4]
  40694f:	mov    rdi,QWORD PTR [rsp+0x88]
  406957:	mov    QWORD PTR [rdi],r14
  40695a:	mov    rdi,QWORD PTR [rsp+0x80]
  406962:	mov    DWORD PTR [rdi],eax
  406964:	call   0x408220
  406969:	mov    DWORD PTR [rax],0x22
  40696f:	mov    eax,0x62
  406974:	jmp    0x406882
  406979:	nop    DWORD PTR [rax+0x0]
  406980:	mov    rcx,r14
  406983:	call   0x4074e0
  406988:	call   0x408220
  40698d:	mov    DWORD PTR [rax],0x22
  406993:	mov    eax,0xa3
  406998:	jmp    0x406882
  40699d:	nop    DWORD PTR [rax]
  4069a0:	cmp    cl,0x30
  4069a3:	mov    rbx,rax
  4069a6:	jne    0x4069c6
  4069a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4069b0:	add    rbx,0x1
  4069b4:	movzx  ecx,BYTE PTR [rbx]
  4069b7:	cmp    cl,0x30
  4069ba:	je     0x4069b0
  4069bc:	movzx  edx,cl
  4069bf:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  4069c4:	mov    edx,ecx
  4069c6:	xor    r11d,r11d
  4069c9:	test   r10b,r10b
  4069cc:	mov    r12,rax
  4069cf:	sete   r11b
  4069d3:	mov    r8d,0x1
  4069d9:	jmp    0x406639
  4069de:	mov    ebx,esi
  4069e0:	mov    rcx,r14
  4069e3:	sub    ebx,eax
  4069e5:	mov    edx,ebx
  4069e7:	sub    r12d,ebx
  4069ea:	call   0x4078e0
  4069ef:	mov    r14,rax
  4069f2:	lea    r15,[rax+0x18]
  4069f6:	jmp    0x40676d
  4069fb:	nop    DWORD PTR [rax+rax*1+0x0]
  406a00:	xor    r15d,r15d
  406a03:	jmp    0x4068e7
  406a08:	mov    ebx,eax
  406a0a:	mov    rcx,r14
  406a0d:	xor    edi,edi
  406a0f:	sub    ebx,esi
  406a11:	mov    edx,ebx
  406a13:	call   0x408070
  406a18:	test   eax,eax
  406a1a:	je     0x406a57
  406a1c:	lea    ecx,[rbx-0x1]
  406a1f:	mov    r8d,0x1
  406a25:	mov    dil,0x1
  406a28:	mov    eax,ecx
  406a2a:	shl    r8d,cl
  406a2d:	sar    eax,0x5
  406a30:	cdqe   
  406a32:	test   DWORD PTR [r15+rax*4],r8d
  406a36:	je     0x406a57
  406a38:	test   ecx,ecx
  406a3a:	jle    0x406c4f
  406a40:	mov    edx,ecx
  406a42:	mov    rcx,r14
  406a45:	call   0x408070
  406a4a:	test   eax,eax
  406a4c:	je     0x406c4f
  406a52:	mov    edi,0x3
  406a57:	mov    edx,ebx
  406a59:	mov    rcx,r14
  406a5c:	add    r12d,ebx
  406a5f:	call   0x406d20
  406a64:	jmp    0x40676d
  406a69:	mov    ebx,0x1
  406a6e:	test   edi,edi
  406a70:	je     0x406a94
  406a72:	mov    eax,DWORD PTR [r13+0xc]
  406a76:	cmp    eax,0x2
  406a79:	je     0x406b21
  406a7f:	cmp    eax,0x3
  406a82:	je     0x406b34
  406a88:	cmp    eax,0x1
  406a8b:	je     0x406c59
  406a91:	or     ebx,0x10
  406a94:	mov    rax,QWORD PTR [rsp+0x88]
  406a9c:	mov    QWORD PTR [rax],r14
  406a9f:	mov    rax,QWORD PTR [rsp+0x80]
  406aa7:	mov    DWORD PTR [rax],r12d
  406aaa:	mov    eax,ebx
  406aac:	jmp    0x406882
  406ab1:	mov    r11d,DWORD PTR [rsp+0x90]
  406ab9:	test   r11d,r11d
  406abc:	jne    0x4067b8
  406ac2:	jmp    0x406933
  406ac7:	test   edi,edi
  406ac9:	lea    ebp,[rbx-0x1]
  406acc:	jne    0x406c45
  406ad2:	test   ebp,ebp
  406ad4:	jle    0x406ae2
  406ad6:	mov    edx,ebp
  406ad8:	mov    rcx,r14
  406adb:	call   0x408070
  406ae0:	mov    edi,eax
  406ae2:	mov    eax,ebp
  406ae4:	mov    ecx,ebp
  406ae6:	mov    edx,edi
  406ae8:	sar    eax,0x5
  406aeb:	mov    r8d,0x1
  406af1:	or     edx,0x2
  406af4:	cdqe   
  406af6:	shl    r8d,cl
  406af9:	mov    rcx,r14
  406afc:	test   DWORD PTR [r15+rax*4],r8d
  406b00:	cmovne edi,edx
  406b03:	mov    edx,ebx
  406b05:	sub    esi,ebx
  406b07:	call   0x406d20
  406b0c:	mov    ebx,0x2
  406b11:	mov    r12d,DWORD PTR [r13+0x4]
  406b15:	jmp    0x406a6e
  406b1a:	xor    eax,eax
  406b1c:	jmp    0x406509
  406b21:	mov    eax,0x1
  406b26:	sub    eax,DWORD PTR [rsp+0x90]
  406b2d:	mov    DWORD PTR [rsp+0x90],eax
  406b34:	mov    eax,DWORD PTR [rsp+0x90]
  406b3b:	test   eax,eax
  406b3d:	je     0x406a91
  406b43:	mov    rcx,r14
  406b46:	movsxd rdi,DWORD PTR [r14+0x14]
  406b4a:	call   0x403d60
  406b4f:	cmp    ebx,0x2
  406b52:	mov    r14,rax
  406b55:	lea    r8,[rax+0x18]
  406b59:	je     0x406cdf
  406b5f:	cmp    edi,DWORD PTR [rax+0x14]
  406b62:	jl     0x406b7d
  406b64:	and    esi,0x1f
  406b67:	je     0x406b98
  406b69:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  406b6f:	mov    edx,0x20
  406b74:	sub    edx,esi
  406b76:	xor    eax,0x1f
  406b79:	cmp    edx,eax
  406b7b:	jle    0x406b98
  406b7d:	mov    edx,0x1
  406b82:	mov    rcx,r14
  406b85:	add    r12d,0x1
  406b89:	call   0x406d20
  406b8e:	cmp    r12d,DWORD PTR [r13+0x8]
  406b92:	jg     0x406980
  406b98:	mov    ebx,0x21
  406b9d:	jmp    0x406a94
  406ba2:	mov    r8d,DWORD PTR [rsp+0x90]
  406baa:	test   r8d,r8d
  406bad:	jne    0x406988
  406bb3:	jmp    0x40658a
  406bb8:	mov    r9d,DWORD PTR [rsp+0x90]
  406bc0:	test   r9d,r9d
  406bc3:	je     0x406988
  406bc9:	jmp    0x40658a
  406bce:	xor    edx,edx
  406bd0:	jmp    0x4066de
  406bd5:	mov    rax,r15
  406bd8:	mov    edx,0x20
  406bdd:	xor    r9d,r9d
  406be0:	jmp    0x40673f
  406be5:	movzx  edx,BYTE PTR [rsi+0x1]
  406be9:	test   dl,dl
  406beb:	je     0x406d14
  406bf1:	cmp    dl,BYTE PTR [rax+0x1]
  406bf4:	jne    0x406c74
  406bf6:	mov    r12d,0x2
  406bfc:	jmp    0x406c0b
  406bfe:	xchg   ax,ax
  406c00:	add    r12,0x1
  406c04:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  406c09:	jne    0x406c74
  406c0b:	movzx  edx,BYTE PTR [rsi+r12*1]
  406c10:	test   dl,dl
  406c12:	jne    0x406c00
  406c14:	add    r12,rax
  406c17:	movzx  eax,BYTE PTR [r12]
  406c1c:	cmp    BYTE PTR [rdi+rax*1],0x0
  406c20:	mov    rdx,rax
  406c23:	mov    rax,r12
  406c26:	je     0x406662
  406c2c:	nop    DWORD PTR [rax+0x0]
  406c30:	add    rax,0x1
  406c34:	movzx  ecx,BYTE PTR [rax]
  406c37:	cmp    BYTE PTR [rdi+rcx*1],0x0
  406c3b:	mov    rdx,rcx
  406c3e:	jne    0x406c30
  406c40:	jmp    0x406662
  406c45:	mov    edi,0x1
  406c4a:	jmp    0x406ae2
  406c4f:	mov    edi,0x2
  406c54:	jmp    0x406a57
  406c59:	test   dil,0x2
  406c5d:	je     0x406a91
  406c63:	or     edi,DWORD PTR [r15]
  406c66:	and    edi,0x1
  406c69:	jne    0x406b43
  406c6f:	jmp    0x406a91
  406c74:	movzx  edx,BYTE PTR [rax]
  406c77:	xor    r12d,r12d
  406c7a:	jmp    0x406669
  406c7f:	mov    edx,DWORD PTR [rsp+0x90]
  406c86:	test   edx,edx
  406c88:	je     0x4067b0
  406c8e:	mov    DWORD PTR [r14+0x14],0x1
  406c96:	mov    DWORD PTR [r15],0x1
  406c9d:	jmp    0x40694f
  406ca2:	mov    ecx,DWORD PTR [rsp+0x90]
  406ca9:	test   ecx,ecx
  406cab:	je     0x406c8e
  406cad:	jmp    0x4067b0
  406cb2:	cmp    ebx,esi
  406cb4:	jne    0x4067b0
  406cba:	cmp    esi,0x1
  406cbd:	jle    0x406c8e
  406cbf:	lea    edx,[rsi-0x1]
  406cc2:	mov    rcx,r14
  406cc5:	call   0x408070
  406cca:	test   eax,eax
  406ccc:	je     0x4067b0
  406cd2:	mov    eax,DWORD PTR [r13+0x4]
  406cd6:	jmp    0x406c8e
  406cd8:	xor    edx,edx
  406cda:	jmp    0x4065f1
  406cdf:	mov    eax,DWORD PTR [r13+0x0]
  406ce3:	mov    bl,0x22
  406ce5:	sub    eax,0x1
  406ce8:	cmp    eax,esi
  406cea:	jne    0x406a94
  406cf0:	mov    edx,esi
  406cf2:	mov    eax,0x1
  406cf7:	mov    ecx,esi
  406cf9:	sar    edx,0x5
  406cfc:	shl    eax,cl
  406cfe:	movsxd rdx,edx
  406d01:	and    eax,DWORD PTR [r8+rdx*4]
  406d05:	cmp    eax,0x1
  406d08:	sbb    ebx,ebx
  406d0a:	not    ebx
  406d0c:	add    ebx,0x22
  406d0f:	jmp    0x406a94
  406d14:	mov    r12d,0x1
  406d1a:	jmp    0x406c14
  406d1f:	nop
  406d20:	push   rbp
  406d21:	push   rdi
  406d22:	push   rsi
  406d23:	push   rbx
  406d24:	mov    rsi,rcx
  406d27:	lea    r10,[rcx+0x18]
  406d2b:	movsxd rcx,DWORD PTR [rcx+0x14]
  406d2f:	mov    eax,edx
  406d31:	sar    eax,0x5
  406d34:	cmp    eax,ecx
  406d36:	jge    0x406dc0
  406d3c:	cdqe   
  406d3e:	and    edx,0x1f
  406d41:	lea    rbx,[r10+rcx*4]
  406d45:	lea    rdi,[r10+rax*4]
  406d49:	je     0x406dd3
  406d4f:	mov    r9d,DWORD PTR [rdi]
  406d52:	lea    r8,[rdi+0x4]
  406d56:	mov    ebp,0x20
  406d5b:	mov    ecx,edx
  406d5d:	sub    ebp,edx
  406d5f:	shr    r9d,cl
  406d62:	cmp    rbx,r8
  406d65:	jbe    0x406e18
  406d6b:	mov    r11,r10
  406d6e:	xchg   ax,ax
  406d70:	mov    eax,DWORD PTR [r8]
  406d73:	mov    ecx,ebp
  406d75:	add    r11,0x4
  406d79:	add    r8,0x4
  406d7d:	shl    eax,cl
  406d7f:	mov    ecx,edx
  406d81:	or     eax,r9d
  406d84:	mov    DWORD PTR [r11-0x4],eax
  406d88:	mov    r9d,DWORD PTR [r8-0x4]
  406d8c:	shr    r9d,cl
  406d8f:	cmp    rbx,r8
  406d92:	ja     0x406d70
  406d94:	sub    rbx,rdi
  406d97:	lea    rax,[rbx-0x5]
  406d9b:	shr    rax,0x2
  406d9f:	lea    rax,[r10+rax*4+0x4]
  406da4:	test   r9d,r9d
  406da7:	mov    DWORD PTR [rax],r9d
  406daa:	je     0x406db0
  406dac:	add    rax,0x4
  406db0:	sub    rax,r10
  406db3:	shr    rax,0x2
  406db7:	jmp    0x406e0c
  406db9:	nop    DWORD PTR [rax+0x0]
  406dc0:	mov    DWORD PTR [rsi+0x14],0x0
  406dc7:	mov    DWORD PTR [rsi+0x18],0x0
  406dce:	pop    rbx
  406dcf:	pop    rsi
  406dd0:	pop    rdi
  406dd1:	pop    rbp
  406dd2:	ret    
  406dd3:	cmp    rbx,rdi
  406dd6:	mov    rdx,r10
  406dd9:	mov    rax,rdi
  406ddc:	jbe    0x406dc0
  406dde:	xchg   ax,ax
  406de0:	add    rax,0x4
  406de4:	mov    r8d,DWORD PTR [rax-0x4]
  406de8:	add    rdx,0x4
  406dec:	cmp    rbx,rax
  406def:	mov    DWORD PTR [rdx-0x4],r8d
  406df3:	ja     0x406de0
  406df5:	not    rdi
  406df8:	lea    rax,[rdi+rbx*1]
  406dfc:	shr    rax,0x2
  406e00:	lea    rax,[rax*4+0x4]
  406e08:	shr    rax,0x2
  406e0c:	test   eax,eax
  406e0e:	mov    DWORD PTR [rsi+0x14],eax
  406e11:	je     0x406dc7
  406e13:	pop    rbx
  406e14:	pop    rsi
  406e15:	pop    rdi
  406e16:	pop    rbp
  406e17:	ret    
  406e18:	mov    rax,r10
  406e1b:	jmp    0x406da4
  406e1d:	nop    DWORD PTR [rax]
  406e20:	movsxd rax,DWORD PTR [rcx+0x14]
  406e24:	lea    rdx,[rcx+0x18]
  406e28:	lea    r8,[rdx+rax*4]
  406e2c:	cmp    rdx,r8
  406e2f:	jae    0x406e5b
  406e31:	mov    ecx,DWORD PTR [rcx+0x18]
  406e34:	xor    eax,eax
  406e36:	test   ecx,ecx
  406e38:	je     0x406e46
  406e3a:	jmp    0x406e54
  406e3c:	nop    DWORD PTR [rax+0x0]
  406e40:	mov    ecx,DWORD PTR [rdx]
  406e42:	test   ecx,ecx
  406e44:	jne    0x406e54
  406e46:	add    rdx,0x4
  406e4a:	add    eax,0x20
  406e4d:	cmp    r8,rdx
  406e50:	ja     0x406e40
  406e52:	repz ret 
  406e54:	tzcnt  ecx,ecx
  406e58:	add    eax,ecx
  406e5a:	ret    
  406e5b:	xor    eax,eax
  406e5d:	ret    
  406e5e:	nop
  406e5f:	nop
  406e60:	lea    r8,[rip+0x5007]        # 0x40be6e
  406e67:	lea    rdx,[rip+0x9752]        # 0x4105c0
  406e6e:	mov    ecx,0x10
  406e73:	mov    eax,0x30
  406e78:	nop    DWORD PTR [rax+rax*1+0x0]
  406e80:	mov    BYTE PTR [rdx+rax*1],cl
  406e83:	movzx  eax,BYTE PTR [r8+0x1]
  406e88:	add    ecx,0x1
  406e8b:	add    r8,0x1
  406e8f:	test   al,al
  406e91:	jne    0x406e80
  406e93:	lea    r8,[rip+0x4fcd]        # 0x40be67
  406e9a:	mov    ecx,0x1a
  406e9f:	mov    eax,0x61
  406ea4:	mov    BYTE PTR [rdx+rax*1],cl
  406ea7:	movzx  eax,BYTE PTR [r8+0x1]
  406eac:	add    ecx,0x1
  406eaf:	add    r8,0x1
  406eb3:	test   al,al
  406eb5:	jne    0x406ea4
  406eb7:	lea    r8,[rip+0x4fa2]        # 0x40be60
  406ebe:	mov    ecx,0x1a
  406ec3:	mov    eax,0x41
  406ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ed0:	mov    BYTE PTR [rdx+rax*1],cl
  406ed3:	movzx  eax,BYTE PTR [r8+0x1]
  406ed8:	add    ecx,0x1
  406edb:	add    r8,0x1
  406edf:	test   al,al
  406ee1:	jne    0x406ed0
  406ee3:	ret    
  406ee4:	nop
  406ee5:	nop
  406ee6:	nop
  406ee7:	nop
  406ee8:	nop
  406ee9:	nop
  406eea:	nop
  406eeb:	nop
  406eec:	nop
  406eed:	nop
  406eee:	nop
  406eef:	nop
  406ef0:	push   r15
  406ef2:	push   r14
  406ef4:	push   r13
  406ef6:	push   r12
  406ef8:	push   rbp
  406ef9:	push   rdi
  406efa:	push   rsi
  406efb:	push   rbx
  406efc:	sub    rsp,0x48
  406f00:	mov    r14,QWORD PTR [rip+0x5179]        # 0x40c080
  406f07:	mov    QWORD PTR [rsp+0x90],rcx
  406f0f:	cmp    BYTE PTR [r14+0x30],0x0
  406f14:	je     0x4071e6
  406f1a:	mov    eax,DWORD PTR [rdx]
  406f1c:	mov    edx,eax
  406f1e:	sar    edx,0x5
  406f21:	and    eax,0x1f
  406f24:	movsxd rdx,edx
  406f27:	mov    DWORD PTR [rsp+0x3c],eax
  406f2b:	mov    rax,QWORD PTR [rsp+0x90]
  406f33:	lea    rdi,[r8+rdx*4]
  406f37:	lea    rdx,[rdi+0x4]
  406f3b:	mov    rax,QWORD PTR [rax]
  406f3e:	cmove  rdx,rdi
  406f42:	mov    QWORD PTR [rsp+0x30],rdx
  406f47:	lea    rsi,[rdx-0x4]
  406f4b:	mov    DWORD PTR [rdx-0x4],0x0
  406f52:	jmp    0x406f58
  406f54:	add    rax,0x1
  406f58:	movzx  edx,BYTE PTR [rax+0x1]
  406f5c:	mov    ecx,edx
  406f5e:	sub    edx,0x1
  406f61:	cmp    edx,0x1f
  406f64:	jbe    0x406f54
  406f66:	cmp    cl,0x30
  406f69:	je     0x407204
  406f6f:	movzx  edx,BYTE PTR [rax+0x1]
  406f73:	xor    r9d,r9d
  406f76:	xor    r15d,r15d
  406f79:	xor    r12d,r12d
  406f7c:	test   edx,edx
  406f7e:	mov    rbp,rsi
  406f81:	mov    r11,rsi
  406f84:	lea    rbx,[rax+0x1]
  406f88:	je     0x407030
  406f8e:	xchg   ax,ax
  406f90:	mov    ecx,edx
  406f92:	movzx  ecx,BYTE PTR [r14+rcx*1]
  406f97:	test   cl,cl
  406f99:	jne    0x407104
  406f9f:	cmp    edx,0x20
  406fa2:	ja     0x4071b5
  406fa8:	cmp    r12d,r15d
  406fab:	jle    0x407145
  406fb1:	cmp    r9d,0x7
  406fb5:	jg     0x40700a
  406fb7:	cmp    r11,rbp
  406fba:	jae    0x40700a
  406fbc:	mov    edi,0x8
  406fc1:	mov    edx,DWORD PTR [r11]
  406fc4:	mov    r13d,0x20
  406fca:	sub    edi,r9d
  406fcd:	mov    QWORD PTR [rsp+0x28],rax
  406fd2:	mov    r9,r11
  406fd5:	shl    edi,0x2
  406fd8:	sub    r13d,edi
  406fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  406fe0:	mov    r10d,DWORD PTR [r9+0x4]
  406fe4:	mov    ecx,r13d
  406fe7:	add    r9,0x4
  406feb:	mov    eax,r10d
  406fee:	shl    eax,cl
  406ff0:	mov    ecx,edi
  406ff2:	or     edx,eax
  406ff4:	mov    DWORD PTR [r9-0x4],edx
  406ff8:	mov    edx,r10d
  406ffb:	shr    edx,cl
  406ffd:	mov    DWORD PTR [r9],edx
  407000:	cmp    rbp,r9
  407003:	ja     0x406fe0
  407005:	mov    rax,QWORD PTR [rsp+0x28]
  40700a:	cmp    r11,r8
  40700d:	ja     0x407130
  407013:	mov    rax,rbx
  407016:	mov    r9d,0x8
  40701c:	nop    DWORD PTR [rax+0x0]
  407020:	movzx  edx,BYTE PTR [rax+0x1]
  407024:	lea    rbx,[rax+0x1]
  407028:	test   edx,edx
  40702a:	jne    0x406f90
  407030:	test   r12d,r12d
  407033:	mov    eax,0x4
  407038:	je     0x4070f3
  40703e:	mov    r10,r11
  407041:	cmp    r9d,0x7
  407045:	jg     0x407093
  407047:	cmp    rbp,r11
  40704a:	jbe    0x407093
  40704c:	mov    edi,0x8
  407051:	mov    eax,DWORD PTR [r11]
  407054:	mov    r12d,0x20
  40705a:	sub    edi,r9d
  40705d:	mov    r9,r11
  407060:	shl    edi,0x2
  407063:	sub    r12d,edi
  407066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407070:	mov    ebx,DWORD PTR [r9+0x4]
  407074:	mov    ecx,r12d
  407077:	add    r9,0x4
  40707b:	mov    edx,ebx
  40707d:	shl    edx,cl
  40707f:	mov    ecx,edi
  407081:	or     eax,edx
  407083:	mov    DWORD PTR [r9-0x4],eax
  407087:	mov    eax,ebx
  407089:	shr    eax,cl
  40708b:	mov    DWORD PTR [r9],eax
  40708e:	cmp    rbp,r9
  407091:	ja     0x407070
  407093:	cmp    r8,r11
  407096:	jae    0x407234
  40709c:	mov    rax,r8
  40709f:	nop
  4070a0:	add    r10,0x4
  4070a4:	mov    edx,DWORD PTR [r10-0x4]
  4070a8:	add    rax,0x4
  4070ac:	cmp    rsi,r10
  4070af:	mov    DWORD PTR [rax-0x4],edx
  4070b2:	jae    0x4070a0
  4070b4:	add    rax,0x4
  4070b8:	mov    DWORD PTR [rax-0x4],0x0
  4070bf:	cmp    rsi,rax
  4070c2:	jae    0x4070b4
  4070c4:	mov    rax,QWORD PTR [rsp+0x30]
  4070c9:	mov    eax,DWORD PTR [rax-0x4]
  4070cc:	test   eax,eax
  4070ce:	je     0x4070e3
  4070d0:	jmp    0x40722a
  4070d5:	sub    rsi,0x4
  4070d9:	mov    eax,DWORD PTR [rsi]
  4070db:	test   eax,eax
  4070dd:	jne    0x40722a
  4070e3:	cmp    r8,rsi
  4070e6:	jne    0x4070d5
  4070e8:	mov    DWORD PTR [rsi],0x1
  4070ee:	mov    eax,0x5
  4070f3:	add    rsp,0x48
  4070f7:	pop    rbx
  4070f8:	pop    rsi
  4070f9:	pop    rdi
  4070fa:	pop    rbp
  4070fb:	pop    r12
  4070fd:	pop    r13
  4070ff:	pop    r14
  407101:	pop    r15
  407103:	ret    
  407104:	add    r9d,0x1
  407108:	add    r12d,0x1
  40710c:	cmp    r9d,0x8
  407110:	jg     0x407190
  407112:	mov    eax,DWORD PTR [r11]
  407115:	shl    eax,0x4
  407118:	and    ecx,0xf
  40711b:	or     ecx,eax
  40711d:	mov    rax,rbx
  407120:	mov    DWORD PTR [r11],ecx
  407123:	jmp    0x407020
  407128:	nop    DWORD PTR [rax+rax*1+0x0]
  407130:	lea    rbp,[r11-0x4]
  407134:	mov    DWORD PTR [r11-0x4],0x0
  40713c:	mov    r15d,r12d
  40713f:	xor    r9d,r9d
  407142:	mov    r11,rbp
  407145:	movzx  edx,BYTE PTR [rax+0x2]
  407149:	mov    rax,rbx
  40714c:	cmp    dl,0x20
  40714f:	ja     0x40715e
  407151:	add    rax,0x1
  407155:	movzx  edx,BYTE PTR [rax+0x1]
  407159:	cmp    dl,0x20
  40715c:	jbe    0x407151
  40715e:	cmp    dl,0x30
  407161:	jne    0x407020
  407167:	movzx  edx,BYTE PTR [rax+0x2]
  40716b:	and    edx,0xffffffdf
  40716e:	cmp    dl,0x58
  407171:	jne    0x407020
  407177:	cmp    BYTE PTR [rax+0x3],0x21
  40717b:	lea    rdx,[rax+0x2]
  40717f:	cmovae rax,rdx
  407183:	jmp    0x407020
  407188:	nop    DWORD PTR [rax+rax*1+0x0]
  407190:	cmp    r11,r8
  407193:	mov    rax,rbx
  407196:	jbe    0x407020
  40719c:	mov    DWORD PTR [r11-0x4],0x0
  4071a4:	xor    eax,eax
  4071a6:	sub    r11,0x4
  4071aa:	mov    r9d,0x1
  4071b0:	jmp    0x407118
  4071b5:	cmp    edx,0x29
  4071b8:	mov    rcx,rbx
  4071bb:	sete   dl
  4071be:	test   r12d,r12d
  4071c1:	je     0x407260
  4071c7:	test   dl,dl
  4071c9:	je     0x407264
  4071cf:	mov    rbx,QWORD PTR [rsp+0x90]
  4071d7:	add    rax,0x2
  4071db:	mov    r10,r11
  4071de:	mov    QWORD PTR [rbx],rax
  4071e1:	jmp    0x407041
  4071e6:	mov    QWORD PTR [rsp+0x30],r8
  4071eb:	mov    QWORD PTR [rsp+0x28],rdx
  4071f0:	call   0x406e60
  4071f5:	mov    r8,QWORD PTR [rsp+0x30]
  4071fa:	mov    rdx,QWORD PTR [rsp+0x28]
  4071ff:	jmp    0x406f1a
  407204:	movzx  edx,BYTE PTR [rax+0x2]
  407208:	and    edx,0xffffffdf
  40720b:	cmp    dl,0x58
  40720e:	jne    0x406f6f
  407214:	movzx  edx,BYTE PTR [rax+0x3]
  407218:	cmp    dl,0x20
  40721b:	jbe    0x406f6f
  407221:	add    rax,0x2
  407225:	jmp    0x406f73
  40722a:	mov    eax,0x5
  40722f:	jmp    0x4070f3
  407234:	mov    edx,DWORD PTR [rsp+0x3c]
  407238:	test   edx,edx
  40723a:	je     0x4070c4
  407240:	mov    ecx,0x20
  407245:	sub    ecx,DWORD PTR [rsp+0x3c]
  407249:	mov    rbx,QWORD PTR [rsp+0x30]
  40724e:	mov    eax,0xffffffff
  407253:	shr    eax,cl
  407255:	and    eax,DWORD PTR [rbx-0x4]
  407258:	mov    DWORD PTR [rbx-0x4],eax
  40725b:	jmp    0x4070cc
  407260:	test   dl,dl
  407262:	jne    0x407282
  407264:	movsx  eax,BYTE PTR [rbx+0x1]
  407268:	lea    rcx,[rbx+0x1]
  40726c:	test   eax,eax
  40726e:	jne    0x40727d
  407270:	jmp    0x40729b
  407272:	add    rcx,0x1
  407276:	movsx  eax,BYTE PTR [rcx]
  407279:	test   eax,eax
  40727b:	je     0x40729b
  40727d:	cmp    eax,0x29
  407280:	jne    0x407272
  407282:	mov    rax,QWORD PTR [rsp+0x90]
  40728a:	add    rcx,0x1
  40728e:	mov    QWORD PTR [rax],rcx
  407291:	mov    eax,0x4
  407296:	jmp    0x4070f3
  40729b:	mov    al,0x4
  40729d:	jmp    0x4070f3
  4072a2:	nop
  4072a3:	nop
  4072a4:	nop
  4072a5:	nop
  4072a6:	nop
  4072a7:	nop
  4072a8:	nop
  4072a9:	nop
  4072aa:	nop
  4072ab:	nop
  4072ac:	nop
  4072ad:	nop
  4072ae:	nop
  4072af:	nop
  4072b0:	push   rsi
  4072b1:	push   rbx
  4072b2:	sub    rsp,0x28
  4072b6:	mov    eax,DWORD PTR [rip+0x91d4]        # 0x410490
  4072bc:	movsxd rsi,ecx
  4072bf:	cmp    eax,0x2
  4072c2:	je     0x40732d
  4072c4:	test   eax,eax
  4072c6:	je     0x4072f2
  4072c8:	cmp    eax,0x1
  4072cb:	jne    0x4072eb
  4072cd:	mov    rbx,QWORD PTR [rip+0xa1b4]        # 0x411488
  4072d4:	mov    ecx,0x1
  4072d9:	call   rbx
  4072db:	mov    eax,DWORD PTR [rip+0x91af]        # 0x410490
  4072e1:	cmp    eax,0x1
  4072e4:	je     0x4072d4
  4072e6:	cmp    eax,0x2
  4072e9:	je     0x40732d
  4072eb:	add    rsp,0x28
  4072ef:	pop    rbx
  4072f0:	pop    rsi
  4072f1:	ret    
  4072f2:	mov    al,0x1
  4072f4:	xchg   DWORD PTR [rip+0x9196],eax        # 0x410490
  4072fa:	test   eax,eax
  4072fc:	jne    0x407350
  4072fe:	lea    rcx,[rip+0x91bb]        # 0x4104c0
  407305:	mov    rbx,QWORD PTR [rip+0xa13c]        # 0x411448
  40730c:	call   rbx
  40730e:	lea    rcx,[rip+0x91d3]        # 0x4104e8
  407315:	call   rbx
  407317:	lea    rcx,[rip+0x62]        # 0x407380
  40731e:	call   0x402010
  407323:	mov    DWORD PTR [rip+0x9163],0x2        # 0x410490
  40732d:	lea    rdx,[rsi+rsi*4]
  407331:	lea    rax,[rip+0x9188]        # 0x4104c0
  407338:	lea    rcx,[rax+rdx*8]
  40733c:	mov    rax,QWORD PTR [rip+0xa0c5]        # 0x411408
  407343:	add    rsp,0x28
  407347:	pop    rbx
  407348:	pop    rsi
  407349:	rex.W jmp rax
  40734c:	nop    DWORD PTR [rax+0x0]
  407350:	cmp    eax,0x2
  407353:	je     0x407370
  407355:	mov    eax,DWORD PTR [rip+0x9135]        # 0x410490
  40735b:	cmp    eax,0x1
  40735e:	je     0x4072cd
  407364:	jmp    0x4072e6
  407366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407370:	mov    DWORD PTR [rip+0x9116],0x2        # 0x410490
  40737a:	jmp    0x40732d
  40737c:	nop    DWORD PTR [rax+0x0]
  407380:	push   rbx
  407381:	sub    rsp,0x20
  407385:	mov    eax,0x3
  40738a:	xchg   DWORD PTR [rip+0x9100],eax        # 0x410490
  407390:	cmp    eax,0x2
  407393:	je     0x4073a0
  407395:	add    rsp,0x20
  407399:	pop    rbx
  40739a:	ret    
  40739b:	nop    DWORD PTR [rax+rax*1+0x0]
  4073a0:	mov    rbx,QWORD PTR [rip+0xa059]        # 0x411400
  4073a7:	lea    rcx,[rip+0x9112]        # 0x4104c0
  4073ae:	call   rbx
  4073b0:	lea    rcx,[rip+0x9131]        # 0x4104e8
  4073b7:	mov    rax,rbx
  4073ba:	add    rsp,0x20
  4073be:	pop    rbx
  4073bf:	rex.W jmp rax
  4073c2:	nop    DWORD PTR [rax+0x0]
  4073c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073d0:	push   rdi
  4073d1:	push   rsi
  4073d2:	push   rbx
  4073d3:	sub    rsp,0x20
  4073d7:	mov    ebx,ecx
  4073d9:	xor    ecx,ecx
  4073db:	call   0x4072b0
  4073e0:	cmp    ebx,0x9
  4073e3:	jg     0x407420
  4073e5:	lea    rdx,[rip+0x9054]        # 0x410440
  4073ec:	movsxd rcx,ebx
  4073ef:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4073f3:	test   rdi,rdi
  4073f6:	je     0x407480
  4073fc:	cmp    DWORD PTR [rip+0x908d],0x2        # 0x410490
  407403:	mov    r8,QWORD PTR [rdi]
  407406:	mov    QWORD PTR [rdx+rcx*8],r8
  40740a:	jne    0x407466
  40740c:	lea    rcx,[rip+0x90ad]        # 0x4104c0
  407413:	call   QWORD PTR [rip+0xa037]        # 0x411450
  407419:	jmp    0x407466
  40741b:	nop    DWORD PTR [rax+rax*1+0x0]
  407420:	mov    eax,0x1
  407425:	mov    ecx,ebx
  407427:	shl    eax,cl
  407429:	mov    esi,eax
  40742b:	lea    eax,[rax-0x1]
  40742e:	cdqe   
  407430:	lea    rdx,[rax*4+0x27]
  407438:	shr    rdx,0x3
  40743c:	mov    edx,edx
  40743e:	lea    rcx,[rdx*8+0x0]
  407446:	call   0x408180
  40744b:	test   rax,rax
  40744e:	mov    rdi,rax
  407451:	je     0x4074da
  407457:	cmp    DWORD PTR [rip+0x9032],0x2        # 0x410490
  40745e:	mov    DWORD PTR [rdi+0x8],ebx
  407461:	mov    DWORD PTR [rdi+0xc],esi
  407464:	je     0x40740c
  407466:	mov    DWORD PTR [rdi+0x14],0x0
  40746d:	mov    DWORD PTR [rdi+0x10],0x0
  407474:	mov    rax,rdi
  407477:	add    rsp,0x20
  40747b:	pop    rbx
  40747c:	pop    rsi
  40747d:	pop    rdi
  40747e:	ret    
  40747f:	nop
  407480:	mov    ecx,ebx
  407482:	mov    eax,0x1
  407487:	mov    rdi,QWORD PTR [rip+0x2c02]        # 0x40a090
  40748e:	shl    eax,cl
  407490:	lea    rcx,[rip+0x86a9]        # 0x40fb40
  407497:	lea    edx,[rax-0x1]
  40749a:	mov    esi,eax
  40749c:	mov    rax,rdi
  40749f:	movsxd rdx,edx
  4074a2:	sub    rax,rcx
  4074a5:	lea    rdx,[rdx*4+0x27]
  4074ad:	mov    rcx,rax
  4074b0:	sar    rcx,0x3
  4074b4:	shr    rdx,0x3
  4074b8:	mov    edx,edx
  4074ba:	add    rcx,rdx
  4074bd:	cmp    rcx,0x120
  4074c4:	ja     0x40743e
  4074ca:	lea    rdx,[rdi+rdx*8]
  4074ce:	mov    QWORD PTR [rip+0x2bbb],rdx        # 0x40a090
  4074d5:	jmp    0x407457
  4074da:	xor    eax,eax
  4074dc:	jmp    0x407477
  4074de:	xchg   ax,ax
  4074e0:	push   rbx
  4074e1:	sub    rsp,0x20
  4074e5:	test   rcx,rcx
  4074e8:	je     0x407519
  4074ea:	cmp    DWORD PTR [rcx+0x8],0x9
  4074ee:	jg     0x407520
  4074f0:	mov    rbx,rcx
  4074f3:	xor    ecx,ecx
  4074f5:	call   0x4072b0
  4074fa:	movsxd rdx,DWORD PTR [rbx+0x8]
  4074fe:	lea    rax,[rip+0x8f3b]        # 0x410440
  407505:	cmp    DWORD PTR [rip+0x8f84],0x2        # 0x410490
  40750c:	mov    rcx,QWORD PTR [rax+rdx*8]
  407510:	mov    QWORD PTR [rax+rdx*8],rbx
  407514:	mov    QWORD PTR [rbx],rcx
  407517:	je     0x407530
  407519:	add    rsp,0x20
  40751d:	pop    rbx
  40751e:	ret    
  40751f:	nop
  407520:	add    rsp,0x20
  407524:	pop    rbx
  407525:	jmp    0x408198
  40752a:	nop    WORD PTR [rax+rax*1+0x0]
  407530:	mov    rax,QWORD PTR [rip+0x9f19]        # 0x411450
  407537:	lea    rcx,[rip+0x8f82]        # 0x4104c0
  40753e:	add    rsp,0x20
  407542:	pop    rbx
  407543:	rex.W jmp rax
  407546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407550:	push   rbp
  407551:	push   rdi
  407552:	push   rsi
  407553:	push   rbx
  407554:	sub    rsp,0x28
  407558:	mov    esi,DWORD PTR [rcx+0x14]
  40755b:	xor    r9d,r9d
  40755e:	lea    r10,[rcx+0x18]
  407562:	mov    rdi,rcx
  407565:	movsxd rbx,r8d
  407568:	movsxd rdx,edx
  40756b:	nop    DWORD PTR [rax+rax*1+0x0]
  407570:	mov    eax,DWORD PTR [r10+r9*4]
  407574:	imul   rax,rdx
  407578:	add    rax,rbx
  40757b:	mov    rbx,rax
  40757e:	mov    DWORD PTR [r10+r9*4],eax
  407582:	add    r9,0x1
  407586:	shr    rbx,0x20
  40758a:	cmp    esi,r9d
  40758d:	jg     0x407570
  40758f:	test   rbx,rbx
  407592:	mov    rax,rdi
  407595:	je     0x4075ac
  407597:	cmp    esi,DWORD PTR [rdi+0xc]
  40759a:	jge    0x4075b5
  40759c:	movsxd rax,esi
  40759f:	add    esi,0x1
  4075a2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4075a6:	mov    DWORD PTR [rdi+0x14],esi
  4075a9:	mov    rax,rdi
  4075ac:	add    rsp,0x28
  4075b0:	pop    rbx
  4075b1:	pop    rsi
  4075b2:	pop    rdi
  4075b3:	pop    rbp
  4075b4:	ret    
  4075b5:	mov    eax,DWORD PTR [rdi+0x8]
  4075b8:	lea    ecx,[rax+0x1]
  4075bb:	call   0x4073d0
  4075c0:	test   rax,rax
  4075c3:	mov    rbp,rax
  4075c6:	je     0x4075fe
  4075c8:	lea    rcx,[rax+0x10]
  4075cc:	movsxd rax,DWORD PTR [rdi+0x14]
  4075d0:	lea    rdx,[rdi+0x10]
  4075d4:	lea    r8,[rax*4+0x8]
  4075dc:	call   0x408178
  4075e1:	mov    rcx,rdi
  4075e4:	mov    rdi,rbp
  4075e7:	call   0x4074e0
  4075ec:	movsxd rax,esi
  4075ef:	add    esi,0x1
  4075f2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4075f6:	mov    DWORD PTR [rdi+0x14],esi
  4075f9:	mov    rax,rdi
  4075fc:	jmp    0x4075ac
  4075fe:	xor    eax,eax
  407600:	jmp    0x4075ac
  407602:	nop    DWORD PTR [rax+0x0]
  407606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407610:	push   rbx
  407611:	sub    rsp,0x20
  407615:	mov    ebx,ecx
  407617:	mov    ecx,0x1
  40761c:	call   0x4073d0
  407621:	test   rax,rax
  407624:	je     0x407630
  407626:	mov    DWORD PTR [rax+0x18],ebx
  407629:	mov    DWORD PTR [rax+0x14],0x1
  407630:	add    rsp,0x20
  407634:	pop    rbx
  407635:	ret    
  407636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407640:	push   r14
  407642:	push   r13
  407644:	push   r12
  407646:	push   rbp
  407647:	push   rdi
  407648:	push   rsi
  407649:	push   rbx
  40764a:	sub    rsp,0x20
  40764e:	movsxd r13,DWORD PTR [rcx+0x14]
  407652:	movsxd rbx,DWORD PTR [rdx+0x14]
  407656:	mov    r12,rcx
  407659:	mov    r14,rdx
  40765c:	cmp    r13d,ebx
  40765f:	jl     0x407761
  407665:	mov    eax,ebx
  407667:	movsxd rbx,r13d
  40766a:	movsxd r13,eax
  40766d:	xor    eax,eax
  40766f:	lea    esi,[rbx+r13*1]
  407673:	cmp    esi,DWORD PTR [r12+0xc]
  407678:	setg   al
  40767b:	add    eax,DWORD PTR [r12+0x8]
  407680:	mov    ecx,eax
  407682:	call   0x4073d0
  407687:	test   rax,rax
  40768a:	je     0x40776c
  407690:	lea    rdi,[rax+0x18]
  407694:	movsxd rdx,esi
  407697:	lea    rbp,[rdi+rdx*4]
  40769b:	mov    r8,rdi
  40769e:	cmp    rdi,rbp
  4076a1:	jae    0x4076b3
  4076a3:	mov    DWORD PTR [r8],0x0
  4076aa:	add    r8,0x4
  4076ae:	cmp    rbp,r8
  4076b1:	ja     0x4076a3
  4076b3:	lea    rdx,[r14+0x18]
  4076b7:	add    r12,0x18
  4076bb:	lea    rbx,[r12+rbx*4]
  4076bf:	lea    r13,[rdx+r13*4]
  4076c3:	cmp    rdx,r13
  4076c6:	jae    0x407729
  4076c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4076d0:	add    rdx,0x4
  4076d4:	mov    r11d,DWORD PTR [rdx-0x4]
  4076d8:	test   r11d,r11d
  4076db:	je     0x407720
  4076dd:	mov    r9,rdi
  4076e0:	mov    r8,r12
  4076e3:	xor    r10d,r10d
  4076e6:	jmp    0x4076f3
  4076e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4076f0:	mov    r9,r14
  4076f3:	add    r8,0x4
  4076f7:	mov    ecx,DWORD PTR [r8-0x4]
  4076fb:	mov    r14d,DWORD PTR [r9]
  4076fe:	imul   rcx,r11
  407702:	add    rcx,r14
  407705:	lea    r14,[r9+0x4]
  407709:	add    rcx,r10
  40770c:	mov    r10,rcx
  40770f:	mov    DWORD PTR [r14-0x4],ecx
  407713:	shr    r10,0x20
  407717:	cmp    rbx,r8
  40771a:	ja     0x4076f0
  40771c:	mov    DWORD PTR [r9+0x4],r10d
  407720:	add    rdi,0x4
  407724:	cmp    r13,rdx
  407727:	ja     0x4076d0
  407729:	test   esi,esi
  40772b:	jle    0x40774f
  40772d:	mov    r8d,DWORD PTR [rbp-0x4]
  407731:	lea    rdx,[rbp-0x4]
  407735:	test   r8d,r8d
  407738:	je     0x40774a
  40773a:	jmp    0x40774f
  40773c:	nop    DWORD PTR [rax+0x0]
  407740:	sub    rdx,0x4
  407744:	mov    ecx,DWORD PTR [rdx]
  407746:	test   ecx,ecx
  407748:	jne    0x40774f
  40774a:	sub    esi,0x1
  40774d:	jne    0x407740
  40774f:	mov    DWORD PTR [rax+0x14],esi
  407752:	add    rsp,0x20
  407756:	pop    rbx
  407757:	pop    rsi
  407758:	pop    rdi
  407759:	pop    rbp
  40775a:	pop    r12
  40775c:	pop    r13
  40775e:	pop    r14
  407760:	ret    
  407761:	mov    r12,rdx
  407764:	mov    r14,rcx
  407767:	jmp    0x40766d
  40776c:	xor    eax,eax
  40776e:	jmp    0x407752
  407770:	push   rbp
  407771:	push   rdi
  407772:	push   rsi
  407773:	push   rbx
  407774:	sub    rsp,0x28
  407778:	mov    eax,edx
  40777a:	mov    rbp,rcx
  40777d:	mov    ebx,edx
  40777f:	and    eax,0x3
  407782:	jne    0x407810
  407788:	sar    ebx,0x2
  40778b:	mov    rax,rbp
  40778e:	test   ebx,ebx
  407790:	je     0x4077dc
  407792:	mov    rdi,QWORD PTR [rip+0x8367]        # 0x40fb00
  407799:	test   rdi,rdi
  40779c:	jne    0x4077b2
  40779e:	jmp    0x40785d
  4077a3:	sar    ebx,1
  4077a5:	je     0x4077d9
  4077a7:	mov    rsi,QWORD PTR [rdi]
  4077aa:	test   rsi,rsi
  4077ad:	je     0x4077e5
  4077af:	mov    rdi,rsi
  4077b2:	test   bl,0x1
  4077b5:	je     0x4077a3
  4077b7:	mov    rdx,rdi
  4077ba:	mov    rcx,rbp
  4077bd:	call   0x407640
  4077c2:	test   rax,rax
  4077c5:	mov    rsi,rax
  4077c8:	je     0x407833
  4077ca:	mov    rcx,rbp
  4077cd:	mov    rbp,rsi
  4077d0:	call   0x4074e0
  4077d5:	sar    ebx,1
  4077d7:	jne    0x4077a7
  4077d9:	mov    rax,rbp
  4077dc:	add    rsp,0x28
  4077e0:	pop    rbx
  4077e1:	pop    rsi
  4077e2:	pop    rdi
  4077e3:	pop    rbp
  4077e4:	ret    
  4077e5:	mov    ecx,0x1
  4077ea:	call   0x4072b0
  4077ef:	mov    rsi,QWORD PTR [rdi]
  4077f2:	test   rsi,rsi
  4077f5:	je     0x40783e
  4077f7:	cmp    DWORD PTR [rip+0x8c92],0x2        # 0x410490
  4077fe:	jne    0x4077af
  407800:	lea    rcx,[rip+0x8ce1]        # 0x4104e8
  407807:	call   QWORD PTR [rip+0x9c43]        # 0x411450
  40780d:	jmp    0x4077af
  40780f:	nop
  407810:	sub    eax,0x1
  407813:	lea    rdx,[rip+0x4666]        # 0x40be80
  40781a:	xor    r8d,r8d
  40781d:	cdqe   
  40781f:	mov    edx,DWORD PTR [rdx+rax*4]
  407822:	call   0x407550
  407827:	test   rax,rax
  40782a:	mov    rbp,rax
  40782d:	jne    0x407788
  407833:	xor    eax,eax
  407835:	add    rsp,0x28
  407839:	pop    rbx
  40783a:	pop    rsi
  40783b:	pop    rdi
  40783c:	pop    rbp
  40783d:	ret    
  40783e:	mov    rdx,rdi
  407841:	mov    rcx,rdi
  407844:	call   0x407640
  407849:	test   rax,rax
  40784c:	mov    rsi,rax
  40784f:	mov    QWORD PTR [rdi],rax
  407852:	je     0x407833
  407854:	mov    QWORD PTR [rax],0x0
  40785b:	jmp    0x4077f7
  40785d:	mov    ecx,0x1
  407862:	call   0x4072b0
  407867:	mov    rdi,QWORD PTR [rip+0x8292]        # 0x40fb00
  40786e:	test   rdi,rdi
  407871:	je     0x407892
  407873:	cmp    DWORD PTR [rip+0x8c16],0x2        # 0x410490
  40787a:	jne    0x4077b2
  407880:	lea    rcx,[rip+0x8c61]        # 0x4104e8
  407887:	call   QWORD PTR [rip+0x9bc3]        # 0x411450
  40788d:	jmp    0x4077b2
  407892:	mov    ecx,0x1
  407897:	call   0x4073d0
  40789c:	test   rax,rax
  40789f:	mov    rdi,rax
  4078a2:	je     0x4078c2
  4078a4:	mov    DWORD PTR [rax+0x18],0x271
  4078ab:	mov    DWORD PTR [rax+0x14],0x1
  4078b2:	mov    QWORD PTR [rip+0x8247],rax        # 0x40fb00
  4078b9:	mov    QWORD PTR [rax],0x0
  4078c0:	jmp    0x407873
  4078c2:	mov    QWORD PTR [rip+0x8233],0x0        # 0x40fb00
  4078cd:	xor    eax,eax
  4078cf:	jmp    0x407835
  4078d4:	xchg   ax,ax
  4078d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078e0:	push   r13
  4078e2:	push   r12
  4078e4:	push   rbp
  4078e5:	push   rdi
  4078e6:	push   rsi
  4078e7:	push   rbx
  4078e8:	sub    rsp,0x28
  4078ec:	mov    rdi,rcx
  4078ef:	mov    ebp,edx
  4078f1:	mov    esi,edx
  4078f3:	mov    r12d,DWORD PTR [rdi+0x14]
  4078f7:	sar    ebp,0x5
  4078fa:	mov    eax,DWORD PTR [rdi+0xc]
  4078fd:	mov    ecx,DWORD PTR [rcx+0x8]
  407900:	add    r12d,ebp
  407903:	lea    ebx,[r12+0x1]
  407908:	cmp    ebx,eax
  40790a:	jle    0x407919
  40790c:	nop    DWORD PTR [rax+0x0]
  407910:	add    eax,eax
  407912:	add    ecx,0x1
  407915:	cmp    ebx,eax
  407917:	jg     0x407910
  407919:	call   0x4073d0
  40791e:	test   rax,rax
  407921:	mov    r13,rax
  407924:	je     0x4079ef
  40792a:	test   ebp,ebp
  40792c:	lea    r8,[rax+0x18]
  407930:	jle    0x4079e7
  407936:	lea    eax,[rbp-0x1]
  407939:	lea    r9,[r8+rax*4+0x4]
  40793e:	xchg   ax,ax
  407940:	add    r8,0x4
  407944:	mov    DWORD PTR [r8-0x4],0x0
  40794c:	cmp    r8,r9
  40794f:	jne    0x407940
  407951:	movsxd rax,DWORD PTR [rdi+0x14]
  407955:	lea    r8,[rdi+0x18]
  407959:	mov    edx,esi
  40795b:	and    edx,0x1f
  40795e:	lea    rbp,[r8+rax*4]
  407962:	je     0x4079d0
  407964:	mov    eax,0x20
  407969:	xor    r11d,r11d
  40796c:	sub    eax,edx
  40796e:	jmp    0x407973
  407970:	mov    r9,rsi
  407973:	mov    r10d,DWORD PTR [r8]
  407976:	mov    ecx,edx
  407978:	lea    rsi,[r9+0x4]
  40797c:	add    r8,0x4
  407980:	shl    r10d,cl
  407983:	mov    ecx,eax
  407985:	or     r10d,r11d
  407988:	mov    DWORD PTR [rsi-0x4],r10d
  40798c:	mov    r11d,DWORD PTR [r8-0x4]
  407990:	shr    r11d,cl
  407993:	cmp    rbp,r8
  407996:	ja     0x407970
  407998:	add    r12d,0x2
  40799c:	test   r11d,r11d
  40799f:	mov    DWORD PTR [r9+0x4],r11d
  4079a3:	cmovne ebx,r12d
  4079a7:	sub    ebx,0x1
  4079aa:	mov    rcx,rdi
  4079ad:	mov    DWORD PTR [r13+0x14],ebx
  4079b1:	call   0x4074e0
  4079b6:	mov    rax,r13
  4079b9:	add    rsp,0x28
  4079bd:	pop    rbx
  4079be:	pop    rsi
  4079bf:	pop    rdi
  4079c0:	pop    rbp
  4079c1:	pop    r12
  4079c3:	pop    r13
  4079c5:	ret    
  4079c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079d0:	add    r8,0x4
  4079d4:	mov    edx,DWORD PTR [r8-0x4]
  4079d8:	add    r9,0x4
  4079dc:	cmp    rbp,r8
  4079df:	mov    DWORD PTR [r9-0x4],edx
  4079e3:	ja     0x4079d0
  4079e5:	jmp    0x4079a7
  4079e7:	mov    r9,r8
  4079ea:	jmp    0x407951
  4079ef:	xor    eax,eax
  4079f1:	jmp    0x4079b9
  4079f3:	nop    DWORD PTR [rax]
  4079f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a00:	movsxd r8,DWORD PTR [rdx+0x14]
  407a04:	mov    eax,DWORD PTR [rcx+0x14]
  407a07:	sub    eax,r8d
  407a0a:	test   eax,eax
  407a0c:	jne    0x407a42
  407a0e:	shl    r8,0x2
  407a12:	add    rcx,0x18
  407a16:	lea    rax,[rcx+r8*1]
  407a1a:	lea    rdx,[rdx+r8*1+0x18]
  407a1f:	jmp    0x407a26
  407a21:	cmp    rcx,rax
  407a24:	jae    0x407a40
  407a26:	sub    rdx,0x4
  407a2a:	sub    rax,0x4
  407a2e:	mov    r9d,DWORD PTR [rdx]
  407a31:	cmp    DWORD PTR [rax],r9d
  407a34:	je     0x407a21
  407a36:	sbb    eax,eax
  407a38:	or     eax,0x1
  407a3b:	ret    
  407a3c:	nop    DWORD PTR [rax+0x0]
  407a40:	xor    eax,eax
  407a42:	repz ret 
  407a44:	xchg   ax,ax
  407a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a50:	push   rdi
  407a51:	push   rsi
  407a52:	push   rbx
  407a53:	sub    rsp,0x20
  407a57:	mov    rsi,rcx
  407a5a:	mov    rdi,rdx
  407a5d:	call   0x407a00
  407a62:	test   eax,eax
  407a64:	je     0x407b50
  407a6a:	mov    ebx,0x0
  407a6f:	js     0x407b72
  407a75:	mov    ecx,DWORD PTR [rsi+0x8]
  407a78:	call   0x4073d0
  407a7d:	test   rax,rax
  407a80:	je     0x407b82
  407a86:	movsxd rdx,DWORD PTR [rsi+0x14]
  407a8a:	lea    rcx,[rsi+0x18]
  407a8e:	mov    DWORD PTR [rax+0x10],ebx
  407a91:	lea    r10,[rdi+0x18]
  407a95:	xor    r9d,r9d
  407a98:	mov    rbx,rdx
  407a9b:	lea    rsi,[rcx+rdx*4]
  407a9f:	movsxd rdx,DWORD PTR [rdi+0x14]
  407aa3:	lea    rdi,[r10+rdx*4]
  407aa7:	lea    rdx,[rax+0x18]
  407aab:	nop    DWORD PTR [rax+rax*1+0x0]
  407ab0:	add    rcx,0x4
  407ab4:	add    r10,0x4
  407ab8:	mov    r11d,DWORD PTR [r10-0x4]
  407abc:	mov    r8d,DWORD PTR [rcx-0x4]
  407ac0:	add    rdx,0x4
  407ac4:	sub    r8,r11
  407ac7:	sub    r8,r9
  407aca:	mov    r9,r8
  407acd:	mov    r11d,r8d
  407ad0:	mov    DWORD PTR [rdx-0x4],r8d
  407ad4:	shr    r9,0x20
  407ad8:	and    r9d,0x1
  407adc:	cmp    rdi,r10
  407adf:	ja     0x407ab0
  407ae1:	cmp    rsi,rcx
  407ae4:	mov    rdi,rdx
  407ae7:	mov    r10,rcx
  407aea:	jbe    0x407b26
  407aec:	nop    DWORD PTR [rax+0x0]
  407af0:	add    rcx,0x4
  407af4:	mov    r8d,DWORD PTR [rcx-0x4]
  407af8:	add    rdx,0x4
  407afc:	sub    r8,r9
  407aff:	mov    r9,r8
  407b02:	mov    r11d,r8d
  407b05:	mov    DWORD PTR [rdx-0x4],r8d
  407b09:	shr    r9,0x20
  407b0d:	and    r9d,0x1
  407b11:	cmp    rsi,rcx
  407b14:	ja     0x407af0
  407b16:	not    r10
  407b19:	lea    rdx,[r10+rsi*1]
  407b1d:	shr    rdx,0x2
  407b21:	lea    rdx,[rdi+rdx*4+0x4]
  407b26:	sub    rdx,0x4
  407b2a:	test   r11d,r11d
  407b2d:	jne    0x407b3d
  407b2f:	nop
  407b30:	sub    rdx,0x4
  407b34:	mov    ecx,DWORD PTR [rdx]
  407b36:	sub    ebx,0x1
  407b39:	test   ecx,ecx
  407b3b:	je     0x407b30
  407b3d:	mov    DWORD PTR [rax+0x14],ebx
  407b40:	add    rsp,0x20
  407b44:	pop    rbx
  407b45:	pop    rsi
  407b46:	pop    rdi
  407b47:	ret    
  407b48:	nop    DWORD PTR [rax+rax*1+0x0]
  407b50:	xor    ecx,ecx
  407b52:	call   0x4073d0
  407b57:	test   rax,rax
  407b5a:	je     0x407b82
  407b5c:	mov    DWORD PTR [rax+0x14],0x1
  407b63:	mov    DWORD PTR [rax+0x18],0x0
  407b6a:	add    rsp,0x20
  407b6e:	pop    rbx
  407b6f:	pop    rsi
  407b70:	pop    rdi
  407b71:	ret    
  407b72:	mov    rax,rsi
  407b75:	mov    bl,0x1
  407b77:	mov    rsi,rdi
  407b7a:	mov    rdi,rax
  407b7d:	jmp    0x407a75
  407b82:	xor    eax,eax
  407b84:	jmp    0x407b40
  407b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b90:	push   rsi
  407b91:	push   rbx
  407b92:	sub    rsp,0x18
  407b96:	movsxd rax,DWORD PTR [rcx+0x14]
  407b9a:	lea    r10,[rcx+0x18]
  407b9e:	mov    ecx,0x20
  407ba3:	lea    r9,[r10+rax*4]
  407ba7:	mov    eax,DWORD PTR [r9-0x4]
  407bab:	lea    rbx,[r9-0x4]
  407baf:	bsr    r8d,eax
  407bb3:	xor    r8d,0x1f
  407bb7:	sub    ecx,r8d
  407bba:	cmp    r8d,0xa
  407bbe:	mov    DWORD PTR [rdx],ecx
  407bc0:	jg     0x407c10
  407bc2:	mov    ecx,0xb
  407bc7:	mov    r11d,eax
  407bca:	xor    esi,esi
  407bcc:	sub    ecx,r8d
  407bcf:	shr    r11d,cl
  407bd2:	or     r11d,0x3ff00000
  407bd9:	shl    r11,0x20
  407bdd:	cmp    r10,rbx
  407be0:	jae    0x407be8
  407be2:	mov    esi,DWORD PTR [r9-0x8]
  407be6:	shr    esi,cl
  407be8:	lea    ecx,[r8+0x15]
  407bec:	shl    eax,cl
  407bee:	mov    edx,eax
  407bf0:	mov    eax,esi
  407bf2:	or     eax,edx
  407bf4:	or     rax,r11
  407bf7:	mov    QWORD PTR [rsp+0x8],rax
  407bfc:	movsd  xmm0,QWORD PTR [rsp+0x8]
  407c02:	add    rsp,0x18
  407c06:	pop    rbx
  407c07:	pop    rsi
  407c08:	ret    
  407c09:	nop    DWORD PTR [rax+0x0]
  407c10:	cmp    r10,rbx
  407c13:	jae    0x407c70
  407c15:	mov    r11d,r8d
  407c18:	lea    rsi,[r9-0x8]
  407c1c:	mov    edx,DWORD PTR [r9-0x8]
  407c20:	sub    r11d,0xb
  407c24:	je     0x407c92
  407c26:	mov    ebx,0x2b
  407c2b:	mov    ecx,r11d
  407c2e:	sub    ebx,r8d
  407c31:	shl    eax,cl
  407c33:	mov    r8d,edx
  407c36:	mov    ecx,ebx
  407c38:	shr    r8d,cl
  407c3b:	or     eax,r8d
  407c3e:	xor    r8d,r8d
  407c41:	or     eax,0x3ff00000
  407c46:	shl    rax,0x20
  407c4a:	cmp    r10,rsi
  407c4d:	jae    0x407c56
  407c4f:	mov    r8d,DWORD PTR [r9-0xc]
  407c53:	shr    r8d,cl
  407c56:	mov    ecx,r11d
  407c59:	shl    edx,cl
  407c5b:	or     r8d,edx
  407c5e:	movabs rdx,0xffffffff00000000
  407c68:	and    rax,rdx
  407c6b:	or     rax,r8
  407c6e:	jmp    0x407bf7
  407c70:	mov    r11d,r8d
  407c73:	sub    r11d,0xb
  407c77:	je     0x407c90
  407c79:	mov    ecx,r11d
  407c7c:	xor    r8d,r8d
  407c7f:	xor    edx,edx
  407c81:	shl    eax,cl
  407c83:	or     eax,0x3ff00000
  407c88:	shl    rax,0x20
  407c8c:	jmp    0x407c56
  407c8e:	xchg   ax,ax
  407c90:	xor    edx,edx
  407c92:	or     eax,0x3ff00000
  407c97:	shl    rax,0x20
  407c9b:	or     rax,rdx
  407c9e:	jmp    0x407bf7
  407ca3:	nop    DWORD PTR [rax]
  407ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407cb0:	push   rdi
  407cb1:	push   rsi
  407cb2:	push   rbx
  407cb3:	sub    rsp,0x20
  407cb7:	mov    ecx,0x1
  407cbc:	movq   rbx,xmm0
  407cc1:	mov    rdi,rdx
  407cc4:	mov    rsi,r8
  407cc7:	call   0x4073d0
  407ccc:	test   rax,rax
  407ccf:	je     0x407db5
  407cd5:	mov    r9,rbx
  407cd8:	shr    r9,0x20
  407cdc:	mov    r10d,r9d
  407cdf:	and    r9d,0x7fffffff
  407ce6:	and    r10d,0xfffff
  407ced:	shr    r9d,0x14
  407cf1:	mov    edx,r10d
  407cf4:	or     edx,0x100000
  407cfa:	test   r9d,r9d
  407cfd:	cmovne r10d,edx
  407d01:	test   ebx,ebx
  407d03:	jne    0x407d44
  407d05:	xor    ecx,ecx
  407d07:	mov    DWORD PTR [rax+0x14],0x1
  407d0e:	mov    edx,0x1
  407d13:	tzcnt  ecx,r10d
  407d18:	shr    r10d,cl
  407d1b:	test   r9d,r9d
  407d1e:	lea    r11d,[rcx+0x20]
  407d22:	mov    DWORD PTR [rax+0x18],r10d
  407d26:	je     0x407d83
  407d28:	lea    edx,[r11+r9*1-0x433]
  407d30:	mov    DWORD PTR [rdi],edx
  407d32:	mov    edx,0x35
  407d37:	sub    edx,r11d
  407d3a:	mov    DWORD PTR [rsi],edx
  407d3c:	add    rsp,0x20
  407d40:	pop    rbx
  407d41:	pop    rsi
  407d42:	pop    rdi
  407d43:	ret    
  407d44:	xor    r11d,r11d
  407d47:	tzcnt  r11d,ebx
  407d4c:	mov    ecx,r11d
  407d4f:	shr    ebx,cl
  407d51:	test   r11d,r11d
  407d54:	je     0x407db0
  407d56:	mov    ecx,0x20
  407d5b:	mov    edx,r10d
  407d5e:	sub    ecx,r11d
  407d61:	shl    edx,cl
  407d63:	mov    ecx,r11d
  407d66:	or     ebx,edx
  407d68:	shr    r10d,cl
  407d6b:	mov    DWORD PTR [rax+0x18],ebx
  407d6e:	cmp    r10d,0x1
  407d72:	mov    DWORD PTR [rax+0x1c],r10d
  407d76:	sbb    edx,edx
  407d78:	add    edx,0x2
  407d7b:	test   r9d,r9d
  407d7e:	mov    DWORD PTR [rax+0x14],edx
  407d81:	jne    0x407d28
  407d83:	movsxd rcx,edx
  407d86:	shl    edx,0x5
  407d89:	sub    r11d,0x432
  407d90:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  407d95:	mov    DWORD PTR [rdi],r11d
  407d98:	xor    ecx,0x1f
  407d9b:	sub    edx,ecx
  407d9d:	mov    DWORD PTR [rsi],edx
  407d9f:	add    rsp,0x20
  407da3:	pop    rbx
  407da4:	pop    rsi
  407da5:	pop    rdi
  407da6:	ret    
  407da7:	nop    WORD PTR [rax+rax*1+0x0]
  407db0:	mov    DWORD PTR [rax+0x18],ebx
  407db3:	jmp    0x407d6e
  407db5:	xor    eax,eax
  407db7:	jmp    0x407d3c
  407db9:	nop    DWORD PTR [rax+0x0]
  407dc0:	mov    rax,rcx
  407dc3:	lea    rcx,[rdx+0x1]
  407dc7:	movzx  edx,BYTE PTR [rdx]
  407dca:	test   dl,dl
  407dcc:	mov    BYTE PTR [rax],dl
  407dce:	je     0x407de2
  407dd0:	add    rcx,0x1
  407dd4:	movzx  edx,BYTE PTR [rcx-0x1]
  407dd8:	add    rax,0x1
  407ddc:	test   dl,dl
  407dde:	mov    BYTE PTR [rax],dl
  407de0:	jne    0x407dd0
  407de2:	repz ret 
  407de4:	nop
  407de5:	nop
  407de6:	nop
  407de7:	nop
  407de8:	nop
  407de9:	nop
  407dea:	nop
  407deb:	nop
  407dec:	nop
  407ded:	nop
  407dee:	nop
  407def:	nop
  407df0:	push   r13
  407df2:	push   r12
  407df4:	push   rbp
  407df5:	push   rdi
  407df6:	push   rsi
  407df7:	push   rbx
  407df8:	sub    rsp,0x28
  407dfc:	mov    rsi,rcx
  407dff:	lea    ecx,[r8+0x8]
  407e03:	mov    ebp,edx
  407e05:	mov    edx,0x38e38e39
  407e0a:	mov    edi,r8d
  407e0d:	mov    ebx,r9d
  407e10:	mov    eax,ecx
  407e12:	sar    ecx,0x1f
  407e15:	imul   edx
  407e17:	sar    edx,1
  407e19:	sub    edx,ecx
  407e1b:	cmp    edx,0x1
  407e1e:	jle    0x407ee4
  407e24:	mov    eax,0x1
  407e29:	xor    ecx,ecx
  407e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  407e30:	add    eax,eax
  407e32:	add    ecx,0x1
  407e35:	cmp    edx,eax
  407e37:	jg     0x407e30
  407e39:	call   0x4073d0
  407e3e:	cmp    ebp,0x9
  407e41:	mov    DWORD PTR [rax+0x18],ebx
  407e44:	mov    DWORD PTR [rax+0x14],0x1
  407e4b:	jle    0x407ed0
  407e51:	lea    rbx,[rsi+0x9]
  407e55:	lea    r12d,[rbp-0xa]
  407e59:	lea    r13,[rsi+r12*1+0xa]
  407e5e:	mov    rsi,rbx
  407e61:	add    rsi,0x1
  407e65:	movsx  r8d,BYTE PTR [rsi-0x1]
  407e6a:	mov    edx,0xa
  407e6f:	mov    rcx,rax
  407e72:	sub    r8d,0x30
  407e76:	call   0x407550
  407e7b:	cmp    rsi,r13
  407e7e:	jne    0x407e61
  407e80:	movsxd rdx,DWORD PTR [rsp+0x80]
  407e88:	lea    r9,[r12+rdx*1+0x1]
  407e8d:	add    rbx,r9
  407e90:	cmp    edi,ebp
  407e92:	jle    0x407ebf
  407e94:	sub    edi,0x1
  407e97:	sub    edi,ebp
  407e99:	lea    rsi,[rbx+rdi*1+0x1]
  407e9e:	xchg   ax,ax
  407ea0:	add    rbx,0x1
  407ea4:	movsx  r8d,BYTE PTR [rbx-0x1]
  407ea9:	mov    edx,0xa
  407eae:	mov    rcx,rax
  407eb1:	sub    r8d,0x30
  407eb5:	call   0x407550
  407eba:	cmp    rbx,rsi
  407ebd:	jne    0x407ea0
  407ebf:	add    rsp,0x28
  407ec3:	pop    rbx
  407ec4:	pop    rsi
  407ec5:	pop    rdi
  407ec6:	pop    rbp
  407ec7:	pop    r12
  407ec9:	pop    r13
  407ecb:	ret    
  407ecc:	nop    DWORD PTR [rax+0x0]
  407ed0:	movsxd rdx,DWORD PTR [rsp+0x80]
  407ed8:	mov    ebp,0x9
  407edd:	lea    rbx,[rsi+rdx*1+0x9]
  407ee2:	jmp    0x407e90
  407ee4:	xor    ecx,ecx
  407ee6:	jmp    0x407e39
  407eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  407ef0:	push   rdi
  407ef1:	push   rsi
  407ef2:	push   rbx
  407ef3:	sub    rsp,0x50
  407ef7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  407efc:	mov    rsi,rdx
  407eff:	lea    rdx,[rsp+0x38]
  407f04:	mov    rdi,rcx
  407f07:	call   0x407b90
  407f0c:	lea    rdx,[rsp+0x3c]
  407f11:	mov    rcx,rsi
  407f14:	movq   rbx,xmm0
  407f19:	movapd xmm6,xmm0
  407f1d:	call   0x407b90
  407f22:	mov    eax,DWORD PTR [rsp+0x38]
  407f26:	sub    eax,DWORD PTR [rsp+0x3c]
  407f2a:	movq   rcx,xmm0
  407f2f:	mov    r8d,eax
  407f32:	mov    eax,DWORD PTR [rdi+0x14]
  407f35:	sub    eax,DWORD PTR [rsi+0x14]
  407f38:	shl    eax,0x5
  407f3b:	add    eax,r8d
  407f3e:	test   eax,eax
  407f40:	jle    0x407f80
  407f42:	movq   rdx,xmm6
  407f47:	shl    eax,0x14
  407f4a:	shr    rdx,0x20
  407f4e:	add    eax,edx
  407f50:	shl    rax,0x20
  407f54:	mov    rdx,rax
  407f57:	mov    eax,ebx
  407f59:	or     rax,rdx
  407f5c:	mov    QWORD PTR [rsp+0x28],rax
  407f61:	movsd  xmm6,QWORD PTR [rsp+0x28]
  407f67:	divsd  xmm6,xmm0
  407f6b:	movapd xmm0,xmm6
  407f6f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  407f74:	add    rsp,0x50
  407f78:	pop    rbx
  407f79:	pop    rsi
  407f7a:	pop    rdi
  407f7b:	ret    
  407f7c:	nop    DWORD PTR [rax+0x0]
  407f80:	movq   rdx,xmm0
  407f85:	shl    eax,0x14
  407f88:	shr    rdx,0x20
  407f8c:	mov    ebx,edx
  407f8e:	sub    ebx,eax
  407f90:	mov    rax,rbx
  407f93:	shl    rax,0x20
  407f97:	mov    rdx,rax
  407f9a:	mov    eax,ecx
  407f9c:	or     rax,rdx
  407f9f:	mov    QWORD PTR [rsp+0x28],rax
  407fa4:	movsd  xmm0,QWORD PTR [rsp+0x28]
  407faa:	jmp    0x407f67
  407fac:	nop    DWORD PTR [rax+0x0]
  407fb0:	mov    r8,QWORD PTR [rcx]
  407fb3:	jmp    0x407fce
  407fb5:	movsx  eax,BYTE PTR [r8]
  407fb9:	lea    r11d,[rax-0x41]
  407fbd:	lea    r10d,[rax+0x20]
  407fc1:	cmp    r11d,0x19
  407fc5:	cmovbe eax,r10d
  407fc9:	cmp    eax,r9d
  407fcc:	jne    0x407ff0
  407fce:	add    rdx,0x1
  407fd2:	movsx  r9d,BYTE PTR [rdx-0x1]
  407fd7:	add    r8,0x1
  407fdb:	test   r9d,r9d
  407fde:	jne    0x407fb5
  407fe0:	mov    QWORD PTR [rcx],r8
  407fe3:	mov    eax,0x1
  407fe8:	ret    
  407fe9:	nop    DWORD PTR [rax+0x0]
  407ff0:	xor    eax,eax
  407ff2:	ret    
  407ff3:	nop    DWORD PTR [rax]
  407ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408000:	sub    edx,0x1
  408003:	lea    rax,[r8+0x18]
  408007:	sar    edx,0x5
  40800a:	movsxd rdx,edx
  40800d:	lea    r11,[rcx+rdx*4+0x4]
  408012:	movsxd rdx,DWORD PTR [r8+0x14]
  408016:	lea    r10,[rax+rdx*4]
  40801a:	cmp    rax,r10
  40801d:	jae    0x40805b
  40801f:	mov    rdx,rcx
  408022:	add    rax,0x4
  408026:	mov    r9d,DWORD PTR [rax-0x4]
  40802a:	add    rdx,0x4
  40802e:	cmp    r10,rax
  408031:	mov    DWORD PTR [rdx-0x4],r9d
  408035:	ja     0x408022
  408037:	sub    r10,r8
  40803a:	lea    rax,[r10-0x19]
  40803e:	shr    rax,0x2
  408042:	lea    rcx,[rcx+rax*4+0x4]
  408047:	cmp    r11,rcx
  40804a:	jbe    0x408060
  40804c:	nop    DWORD PTR [rax+0x0]
  408050:	add    rcx,0x4
  408054:	mov    DWORD PTR [rcx-0x4],0x0
  40805b:	cmp    r11,rcx
  40805e:	ja     0x408050
  408060:	repz ret 
  408062:	nop    DWORD PTR [rax+0x0]
  408066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408070:	movsxd rax,DWORD PTR [rcx+0x14]
  408074:	mov    r9d,edx
  408077:	lea    r8,[rcx+0x18]
  40807b:	sar    r9d,0x5
  40807f:	cmp    eax,r9d
  408082:	jge    0x4080b1
  408084:	lea    r9,[r8+rax*4]
  408088:	cmp    r8,r9
  40808b:	jae    0x4080f6
  40808d:	mov    eax,DWORD PTR [r9-0x4]
  408091:	lea    rdx,[r9-0x4]
  408095:	test   eax,eax
  408097:	je     0x4080aa
  408099:	jmp    0x4080f0
  40809b:	nop    DWORD PTR [rax+rax*1+0x0]
  4080a0:	sub    rdx,0x4
  4080a4:	mov    ecx,DWORD PTR [rdx]
  4080a6:	test   ecx,ecx
  4080a8:	jne    0x4080f0
  4080aa:	cmp    r8,rdx
  4080ad:	jb     0x4080a0
  4080af:	repz ret 
  4080b1:	jle    0x4080e0
  4080b3:	mov    ecx,edx
  4080b5:	movsxd r9,r9d
  4080b8:	and    ecx,0x1f
  4080bb:	lea    r9,[r8+r9*4]
  4080bf:	je     0x408088
  4080c1:	mov    r10d,DWORD PTR [r9]
  4080c4:	mov    eax,r10d
  4080c7:	shr    eax,cl
  4080c9:	shl    eax,cl
  4080cb:	mov    edx,eax
  4080cd:	mov    eax,0x1
  4080d2:	cmp    edx,r10d
  4080d5:	je     0x408088
  4080d7:	repz ret 
  4080d9:	nop    DWORD PTR [rax+0x0]
  4080e0:	movsxd r9,r9d
  4080e3:	lea    r9,[r8+r9*4]
  4080e7:	jmp    0x408088
  4080e9:	nop    DWORD PTR [rax+0x0]
  4080f0:	mov    eax,0x1
  4080f5:	ret    
  4080f6:	xor    eax,eax
  4080f8:	ret    
  4080f9:	nop
  4080fa:	nop
  4080fb:	nop
  4080fc:	nop
  4080fd:	nop
  4080fe:	nop
  4080ff:	nop
  408100:	jmp    QWORD PTR [rip+0x953a]        # 0x411640
  408106:	nop
  408107:	nop
  408108:	jmp    QWORD PTR [rip+0x952a]        # 0x411638
  40810e:	nop
  40810f:	nop
  408110:	jmp    QWORD PTR [rip+0x951a]        # 0x411630
  408116:	nop
  408117:	nop
  408118:	jmp    QWORD PTR [rip+0x950a]        # 0x411628
  40811e:	nop
  40811f:	nop
  408120:	jmp    QWORD PTR [rip+0x94fa]        # 0x411620
  408126:	nop
  408127:	nop
  408128:	jmp    QWORD PTR [rip+0x94ea]        # 0x411618
  40812e:	nop
  40812f:	nop
  408130:	jmp    QWORD PTR [rip+0x94da]        # 0x411610
  408136:	nop
  408137:	nop
  408138:	jmp    QWORD PTR [rip+0x94ca]        # 0x411608
  40813e:	nop
  40813f:	nop
  408140:	jmp    QWORD PTR [rip+0x94ba]        # 0x411600
  408146:	nop
  408147:	nop
  408148:	jmp    QWORD PTR [rip+0x94aa]        # 0x4115f8
  40814e:	nop
  40814f:	nop
  408150:	jmp    QWORD PTR [rip+0x949a]        # 0x4115f0
  408156:	nop
  408157:	nop
  408158:	jmp    QWORD PTR [rip+0x948a]        # 0x4115e8
  40815e:	nop
  40815f:	nop
  408160:	jmp    QWORD PTR [rip+0x947a]        # 0x4115e0
  408166:	nop
  408167:	nop
  408168:	jmp    QWORD PTR [rip+0x946a]        # 0x4115d8
  40816e:	nop
  40816f:	nop
  408170:	jmp    QWORD PTR [rip+0x945a]        # 0x4115d0
  408176:	nop
  408177:	nop
  408178:	jmp    QWORD PTR [rip+0x944a]        # 0x4115c8
  40817e:	nop
  40817f:	nop
  408180:	jmp    QWORD PTR [rip+0x943a]        # 0x4115c0
  408186:	nop
  408187:	nop
  408188:	jmp    QWORD PTR [rip+0x942a]        # 0x4115b8
  40818e:	nop
  40818f:	nop
  408190:	jmp    QWORD PTR [rip+0x941a]        # 0x4115b0
  408196:	nop
  408197:	nop
  408198:	jmp    QWORD PTR [rip+0x940a]        # 0x4115a8
  40819e:	nop
  40819f:	nop
  4081a0:	jmp    QWORD PTR [rip+0x93fa]        # 0x4115a0
  4081a6:	nop
  4081a7:	nop
  4081a8:	jmp    QWORD PTR [rip+0x93ea]        # 0x411598
  4081ae:	nop
  4081af:	nop
  4081b0:	jmp    QWORD PTR [rip+0x93da]        # 0x411590
  4081b6:	nop
  4081b7:	nop
  4081b8:	jmp    QWORD PTR [rip+0x93ca]        # 0x411588
  4081be:	nop
  4081bf:	nop
  4081c0:	jmp    QWORD PTR [rip+0x93ba]        # 0x411580
  4081c6:	nop
  4081c7:	nop
  4081c8:	jmp    QWORD PTR [rip+0x93aa]        # 0x411578
  4081ce:	nop
  4081cf:	nop
  4081d0:	jmp    QWORD PTR [rip+0x939a]        # 0x411570
  4081d6:	nop
  4081d7:	nop
  4081d8:	jmp    QWORD PTR [rip+0x938a]        # 0x411568
  4081de:	nop
  4081df:	nop
  4081e0:	jmp    QWORD PTR [rip+0x937a]        # 0x411560
  4081e6:	nop
  4081e7:	nop
  4081e8:	jmp    QWORD PTR [rip+0x936a]        # 0x411558
  4081ee:	nop
  4081ef:	nop
  4081f0:	jmp    QWORD PTR [rip+0x935a]        # 0x411550
  4081f6:	nop
  4081f7:	nop
  4081f8:	jmp    QWORD PTR [rip+0x934a]        # 0x411548
  4081fe:	nop
  4081ff:	nop
  408200:	jmp    QWORD PTR [rip+0x933a]        # 0x411540
  408206:	nop
  408207:	nop
  408208:	jmp    QWORD PTR [rip+0x932a]        # 0x411538
  40820e:	nop
  40820f:	nop
  408210:	jmp    QWORD PTR [rip+0x931a]        # 0x411530
  408216:	nop
  408217:	nop
  408218:	jmp    QWORD PTR [rip+0x930a]        # 0x411528
  40821e:	nop
  40821f:	nop
  408220:	jmp    QWORD PTR [rip+0x92f2]        # 0x411518
  408226:	nop
  408227:	nop
  408228:	jmp    QWORD PTR [rip+0x92e2]        # 0x411510
  40822e:	nop
  40822f:	nop
  408230:	jmp    QWORD PTR [rip+0x92d2]        # 0x411508
  408236:	nop
  408237:	nop
  408238:	jmp    QWORD PTR [rip+0x92ba]        # 0x4114f8
  40823e:	nop
  40823f:	nop
  408240:	jmp    QWORD PTR [rip+0x92aa]        # 0x4114f0
  408246:	nop
  408247:	nop
  408248:	jmp    QWORD PTR [rip+0x929a]        # 0x4114e8
  40824e:	nop
  40824f:	nop
  408250:	jmp    QWORD PTR [rip+0x928a]        # 0x4114e0
  408256:	nop
  408257:	nop
  408258:	jmp    QWORD PTR [rip+0x9272]        # 0x4114d0
  40825e:	nop
  40825f:	nop
  408260:	jmp    QWORD PTR [rip+0x9262]        # 0x4114c8
  408266:	nop
  408267:	nop
  408268:	jmp    QWORD PTR [rip+0x9252]        # 0x4114c0
  40826e:	nop
  40826f:	nop
  408270:	mov    rax,QWORD PTR [rip+0x82c9]        # 0x410540
  408277:	ret    
  408278:	nop    DWORD PTR [rax+rax*1+0x0]
  408280:	mov    rax,rcx
  408283:	xchg   QWORD PTR [rip+0x82b6],rax        # 0x410540
  40828a:	ret    
  40828b:	nop
  40828c:	nop
  40828d:	nop
  40828e:	nop
  40828f:	nop
  408290:	jmp    QWORD PTR [rip+0x921a]        # 0x4114b0
  408296:	nop
  408297:	nop
  408298:	jmp    QWORD PTR [rip+0x920a]        # 0x4114a8
  40829e:	nop
  40829f:	nop
  4082a0:	jmp    QWORD PTR [rip+0x91fa]        # 0x4114a0
  4082a6:	nop
  4082a7:	nop
  4082a8:	jmp    QWORD PTR [rip+0x91ea]        # 0x411498
  4082ae:	nop
  4082af:	nop
  4082b0:	jmp    QWORD PTR [rip+0x91da]        # 0x411490
  4082b6:	nop
  4082b7:	nop
  4082b8:	jmp    QWORD PTR [rip+0x91ca]        # 0x411488
  4082be:	nop
  4082bf:	nop
  4082c0:	jmp    QWORD PTR [rip+0x91ba]        # 0x411480
  4082c6:	nop
  4082c7:	nop
  4082c8:	jmp    QWORD PTR [rip+0x91aa]        # 0x411478
  4082ce:	nop
  4082cf:	nop
  4082d0:	jmp    QWORD PTR [rip+0x919a]        # 0x411470
  4082d6:	nop
  4082d7:	nop
  4082d8:	jmp    QWORD PTR [rip+0x918a]        # 0x411468
  4082de:	nop
  4082df:	nop
  4082e0:	jmp    QWORD PTR [rip+0x917a]        # 0x411460
  4082e6:	nop
  4082e7:	nop
  4082e8:	jmp    QWORD PTR [rip+0x916a]        # 0x411458
  4082ee:	nop
  4082ef:	nop
  4082f0:	jmp    QWORD PTR [rip+0x915a]        # 0x411450
  4082f6:	nop
  4082f7:	nop
  4082f8:	jmp    QWORD PTR [rip+0x914a]        # 0x411448
  4082fe:	nop
  4082ff:	nop
  408300:	jmp    QWORD PTR [rip+0x913a]        # 0x411440
  408306:	nop
  408307:	nop
  408308:	jmp    QWORD PTR [rip+0x912a]        # 0x411438
  40830e:	nop
  40830f:	nop
  408310:	jmp    QWORD PTR [rip+0x911a]        # 0x411430
  408316:	nop
  408317:	nop
  408318:	jmp    QWORD PTR [rip+0x910a]        # 0x411428
  40831e:	nop
  40831f:	nop
  408320:	jmp    QWORD PTR [rip+0x90fa]        # 0x411420
  408326:	nop
  408327:	nop
  408328:	jmp    QWORD PTR [rip+0x90ea]        # 0x411418
  40832e:	nop
  40832f:	nop
  408330:	jmp    QWORD PTR [rip+0x90da]        # 0x411410
  408336:	nop
  408337:	nop
  408338:	jmp    QWORD PTR [rip+0x90ca]        # 0x411408
  40833e:	nop
  40833f:	nop
  408340:	jmp    QWORD PTR [rip+0x90ba]        # 0x411400
  408346:	nop
  408347:	nop
  408348:	nop    DWORD PTR [rax+rax*1+0x0]
  408350:	push   r15
  408352:	push   r14
  408354:	push   r13
  408356:	push   r12
  408358:	push   rbp
  408359:	push   rdi
  40835a:	push   rsi
  40835b:	push   rbx
  40835c:	sub    rsp,0x868
  408363:	movaps XMMWORD PTR [rsp+0x7d0],xmm6
  40836b:	movaps XMMWORD PTR [rsp+0x7e0],xmm7
  408373:	movaps XMMWORD PTR [rsp+0x7f0],xmm8
  40837c:	movaps XMMWORD PTR [rsp+0x800],xmm9
  408385:	movaps XMMWORD PTR [rsp+0x810],xmm10
  40838e:	movaps XMMWORD PTR [rsp+0x820],xmm11
  408397:	movaps XMMWORD PTR [rsp+0x830],xmm12
  4083a0:	movaps XMMWORD PTR [rsp+0x840],xmm13
  4083a9:	movaps XMMWORD PTR [rsp+0x850],xmm14
  4083b2:	mov    r14,rdx
  4083b5:	mov    DWORD PTR [rsp+0x8b0],ecx
  4083bc:	call   0x4020d0
  4083c1:	mov    rcx,QWORD PTR [r14]
  4083c4:	mov    edx,0x5c
  4083c9:	call   0x408120
  4083ce:	mov    rbx,QWORD PTR [rip+0x3e2b]        # 0x40c200
  4083d5:	test   rax,rax
  4083d8:	mov    QWORD PTR [rbx+0x8],rax
  4083dc:	je     0x4089b8
  4083e2:	lea    r12,[rax+0x1]
  4083e6:	mov    QWORD PTR [rbx+0x8],r12
  4083ea:	lea    rdi,[rip+0x2c16]        # 0x40b007
  4083f1:	mov    ecx,0x3
  4083f6:	mov    rsi,r12
  4083f9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4083fb:	sete   al
  4083fe:	cmp    DWORD PTR [rsp+0x8b0],0x1
  408406:	movzx  eax,al
  408409:	mov    DWORD PTR [rip+0x6cfd],eax        # 0x40f10c
  40840f:	jle    0x409c12
  408415:	mov    esi,DWORD PTR [rsp+0x8b0]
  40841c:	pxor   xmm6,xmm6
  408420:	lea    r15,[rip+0x3129]        # 0x40b550
  408427:	mov    rdx,r14
  40842a:	mov    DWORD PTR [rsp+0x40],0x0
  408432:	xor    r12d,r12d
  408435:	xor    edi,edi
  408437:	sub    esi,0x1
  40843a:	test   esi,esi
  40843c:	jle    0x408470
  40843e:	mov    r13,QWORD PTR [rdx+0x8]
  408442:	lea    r9,[rdx+0x8]
  408446:	movzx  eax,BYTE PTR [r13+0x0]
  40844b:	cmp    al,0x2d
  40844d:	je     0x408560
  408453:	cmp    al,0x2b
  408455:	je     0x4085d1
  40845b:	sub    esi,0x1
  40845e:	movsxd rax,r12d
  408461:	add    r12d,0x1
  408465:	test   esi,esi
  408467:	mov    QWORD PTR [r14+rax*8],r13
  40846b:	mov    rdx,r9
  40846e:	jg     0x40843e
  408470:	test   r12d,r12d
  408473:	mov    DWORD PTR [rsp+0x48],r12d
  408478:	jne    0x408a16
  40847e:	cmp    QWORD PTR [rip+0x6c6a],0x0        # 0x40f0f0
  408486:	je     0x409b4b
  40848c:	cmp    DWORD PTR [rip+0x6c79],0x0        # 0x40f10c
  408493:	je     0x4084a2
  408495:	cmp    DWORD PTR [rip+0x6c5c],0x0        # 0x40f0f8
  40849c:	jne    0x409021
  4084a2:	lea    rdx,[rsp+0xc0]
  4084aa:	mov    ecx,edi
  4084ac:	call   0x401ef8
  4084b1:	test   rax,rax
  4084b4:	mov    QWORD PTR [rip+0x6c75],rax        # 0x40f130
  4084bb:	je     0x409b62
  4084c1:	mov    rcx,QWORD PTR [rip+0x6c68]        # 0x40f130
  4084c8:	call   0x401ee8
  4084cd:	test   eax,eax
  4084cf:	jne    0x409bfc
  4084d5:	cmp    DWORD PTR [rip+0x6c30],0x0        # 0x40f10c
  4084dc:	je     0x408a5d
  4084e2:	mov    rax,QWORD PTR [rip+0x6c47]        # 0x40f130
  4084e9:	cmp    QWORD PTR [rax+0x10],0x0
  4084ee:	je     0x409b89
  4084f4:	mov    rax,QWORD PTR [rip+0x3d85]        # 0x40c280
  4084fb:	mov    QWORD PTR [rip+0x6c26],rax        # 0x40f128
  408502:	mov    r8,QWORD PTR [rip+0x6be7]        # 0x40f0f0
  408509:	test   r8,r8
  40850c:	je     0x408a70
  408512:	mov    eax,DWORD PTR [rsp+0x8b0]
  408519:	mov    ecx,DWORD PTR [rip+0x6bed]        # 0x40f10c
  40851f:	lea    rdx,[rip+0xffffffffffff900a]        # 0x401530
  408526:	mov    r9,QWORD PTR [rip+0x6c03]        # 0x40f130
  40852d:	mov    QWORD PTR [rsp+0x28],r14
  408532:	mov    DWORD PTR [rsp+0x20],eax
  408536:	call   0x4015c0
  40853b:	xor    ecx,ecx
  40853d:	call   0x4081e0
  408542:	lea    rdx,[rip+0x2c37]        # 0x40b180
  408549:	mov    ecx,0x1
  40854e:	call   0x401f48
  408553:	mov    r9,QWORD PTR [rsp+0x48]
  408558:	mov    r13,rbp
  40855b:	nop    DWORD PTR [rax+rax*1+0x0]
  408560:	movzx  r8d,BYTE PTR [r13+0x1]
  408565:	lea    rbp,[r13+0x1]
  408569:	cmp    r8b,0x77
  40856d:	ja     0x4085aa
  40856f:	movzx  eax,r8b
  408573:	movsxd rax,DWORD PTR [r15+rax*4]
  408577:	add    rax,r15
  40857a:	jmp    rax
  40857c:	mov    DWORD PTR [rip+0x6b76],0x1        # 0x40f0fc
  408586:	mov    DWORD PTR [rsp+0x40],0x1
  40858e:	mov    r13,rbp
  408591:	mov    DWORD PTR [rip+0x6b69],0x1        # 0x40f104
  40859b:	movzx  r8d,BYTE PTR [r13+0x1]
  4085a0:	lea    rbp,[r13+0x1]
  4085a4:	cmp    r8b,0x77
  4085a8:	jbe    0x40856f
  4085aa:	lea    rdx,[rip+0x2bf0]        # 0x40b1a1
  4085b1:	movsx  r8d,r8b
  4085b5:	mov    ecx,0x1
  4085ba:	mov    QWORD PTR [rsp+0x48],r9
  4085bf:	call   0x401f48
  4085c4:	mov    r9,QWORD PTR [rsp+0x48]
  4085c9:	mov    rdx,r9
  4085cc:	jmp    0x408437
  4085d1:	cmp    edi,0x63
  4085d4:	jg     0x4088ed
  4085da:	movsxd rax,edi
  4085dd:	add    r13,0x1
  4085e1:	add    edi,0x1
  4085e4:	mov    QWORD PTR [rsp+rax*8+0xc0],r13
  4085ec:	mov    rdx,r9
  4085ef:	jmp    0x408437
  4085f4:	mov    r13,rbp
  4085f7:	mov    DWORD PTR [rsp+0x40],0x1
  4085ff:	jmp    0x408560
  408604:	movsx  eax,BYTE PTR [r13+0x2]
  408609:	test   al,al
  40860b:	je     0x408a3a
  408611:	add    r13,0x2
  408615:	mov    DWORD PTR [rip+0x19fd],eax        # 0x40a018
  40861b:	jmp    0x408560
  408620:	mov    DWORD PTR [rip+0x6af2],0x1        # 0x40f11c
  40862a:	mov    r13,rbp
  40862d:	jmp    0x408560
  408632:	mov    DWORD PTR [rip+0x6ae4],0x1        # 0x40f120
  40863c:	mov    r13,rbp
  40863f:	jmp    0x408560
  408644:	mov    DWORD PTR [rip+0x6ac6],0x1        # 0x40f114
  40864e:	mov    r13,rbp
  408651:	jmp    0x408560
  408656:	sub    esi,0x1
  408659:	test   esi,esi
  40865b:	jle    0x4088c9
  408661:	mov    r13,QWORD PTR [r9+0x8]
  408665:	lea    rax,[r9+0x8]
  408669:	lea    rcx,[rip+0x2aed]        # 0x40b15d
  408670:	mov    r8d,0x2
  408676:	mov    DWORD PTR [rip+0x6a78],0x1        # 0x40f0f8
  408680:	mov    QWORD PTR [rsp+0x48],rax
  408685:	mov    rdx,r13
  408688:	call   0x408130
  40868d:	test   eax,eax
  40868f:	je     0x4086ae
  408691:	lea    rcx,[rip+0x2ac8]        # 0x40b160
  408698:	mov    r8d,0x2
  40869e:	mov    rdx,r13
  4086a1:	call   0x408130
  4086a6:	test   eax,eax
  4086a8:	jne    0x408993
  4086ae:	lea    rcx,[r13+0x2]
  4086b2:	call   0x4081f0
  4086b7:	pxor   xmm5,xmm5
  4086bb:	ucomisd xmm0,xmm5
  4086bf:	jp     0x408972
  4086c5:	jne    0x408972
  4086cb:	movsd  QWORD PTR [rip+0x696d],xmm0        # 0x40f040
  4086d3:	lea    rdx,[rip+0x2a89]        # 0x40b163
  4086da:	mov    ecx,0x1
  4086df:	mov    r13,rbp
  4086e2:	call   0x401f48
  4086e7:	mov    r9,QWORD PTR [rsp+0x48]
  4086ec:	jmp    0x408560
  4086f1:	movzx  r12d,BYTE PTR [r13+0x2]
  4086f6:	mov    eax,r12d
  4086f9:	and    eax,0xffffffdf
  4086fc:	cmp    al,0x50
  4086fe:	je     0x408910
  408704:	test   r12b,r12b
  408707:	je     0x408910
  40870d:	cmp    r12b,0x3d
  408711:	je     0x409065
  408717:	cmp    r12b,0x65
  40871b:	je     0x409a9c
  408721:	cmp    r12b,0x75
  408725:	je     0x409ad4
  40872b:	cmp    r12b,0x64
  40872f:	je     0x409a24
  408735:	lea    rdx,[rip+0x29ef]        # 0x40b12b
  40873c:	movsx  r8d,r12b
  408740:	mov    ecx,0x1
  408745:	call   0x401f48
  40874a:	xor    ecx,ecx
  40874c:	call   0x4081e0
  408751:	mov    DWORD PTR [rip+0x69bd],0x1        # 0x40f118
  40875b:	mov    r13,rbp
  40875e:	jmp    0x408560
  408763:	mov    DWORD PTR [rip+0x69a3],0x1        # 0x40f110
  40876d:	mov    r13,rbp
  408770:	jmp    0x408560
  408775:	mov    ecx,DWORD PTR [rip+0x6981]        # 0x40f0fc
  40877b:	call   0x401ed8
  408780:	movaps xmm6,XMMWORD PTR [rsp+0x7d0]
  408788:	movaps xmm7,XMMWORD PTR [rsp+0x7e0]
  408790:	movaps xmm8,XMMWORD PTR [rsp+0x7f0]
  408799:	movaps xmm9,XMMWORD PTR [rsp+0x800]
  4087a2:	movaps xmm10,XMMWORD PTR [rsp+0x810]
  4087ab:	movaps xmm11,XMMWORD PTR [rsp+0x820]
  4087b4:	movaps xmm12,XMMWORD PTR [rsp+0x830]
  4087bd:	movaps xmm13,XMMWORD PTR [rsp+0x840]
  4087c6:	movaps xmm14,XMMWORD PTR [rsp+0x850]
  4087cf:	add    rsp,0x868
  4087d6:	pop    rbx
  4087d7:	pop    rsi
  4087d8:	pop    rdi
  4087d9:	pop    rbp
  4087da:	pop    r12
  4087dc:	pop    r13
  4087de:	pop    r14
  4087e0:	pop    r15
  4087e2:	ret    
  4087e3:	cmp    BYTE PTR [r13+0x0],0x2d
  4087e8:	mov    rdx,r9
  4087eb:	jne    0x408437
  4087f1:	lea    rcx,[rip+0x2860]        # 0x40b058
  4087f8:	movsxd rax,r12d
  4087fb:	add    r12d,0x1
  4087ff:	mov    QWORD PTR [r14+rax*8],rcx
  408803:	jmp    0x408437
  408808:	movsx  eax,BYTE PTR [r13+0x2]
  40880d:	mov    QWORD PTR [rsp+0x48],r9
  408812:	lea    edx,[rax-0x30]
  408815:	cmp    dl,0x9
  408818:	ja     0x408542
  40881e:	xor    edx,edx
  408820:	lea    ecx,[rax-0x30]
  408823:	cmp    r8b,0x57
  408827:	sete   dl
  40882a:	add    r13,0x2
  40882e:	call   0x401ec0
  408833:	mov    r9,QWORD PTR [rsp+0x48]
  408838:	jmp    0x408560
  40883d:	sub    esi,0x1
  408840:	test   esi,esi
  408842:	jle    0x4088c9
  408848:	mov    rax,QWORD PTR [r9+0x8]
  40884c:	mov    r13,rbp
  40884f:	add    r9,0x8
  408853:	mov    QWORD PTR [rip+0x17b6],rax        # 0x40a010
  40885a:	jmp    0x408560
  40885f:	mov    DWORD PTR [rip+0x68ab],0x1        # 0x40f114
  408869:	mov    DWORD PTR [rip+0x68a5],0x1        # 0x40f118
  408873:	mov    r13,rbp
  408876:	jmp    0x408560
  40887b:	sub    esi,0x1
  40887e:	test   esi,esi
  408880:	jle    0x4088c9
  408882:	mov    rax,QWORD PTR [r9+0x8]
  408886:	mov    r13,rbp
  408889:	add    r9,0x8
  40888d:	mov    QWORD PTR [rip+0x6854],rax        # 0x40f0e8
  408894:	jmp    0x408560
  408899:	sub    esi,0x1
  40889c:	test   esi,esi
  40889e:	jle    0x4088c9
  4088a0:	mov    rax,QWORD PTR [r9+0x8]
  4088a4:	mov    r13,rbp
  4088a7:	add    r9,0x8
  4088ab:	mov    QWORD PTR [rip+0x683e],rax        # 0x40f0f0
  4088b2:	jmp    0x408560
  4088b7:	mov    DWORD PTR [rip+0x684b],0x1        # 0x40f10c
  4088c1:	mov    r13,rbp
  4088c4:	jmp    0x408560
  4088c9:	lea    rdx,[rip+0x2874]        # 0x40b144
  4088d0:	movsx  r8d,r8b
  4088d4:	mov    ecx,0x1
  4088d9:	mov    QWORD PTR [rsp+0x48],r9
  4088de:	call   0x401f48
  4088e3:	mov    r9,QWORD PTR [rsp+0x48]
  4088e8:	jmp    0x408848
  4088ed:	lea    rdx,[rip+0x28c1]        # 0x40b1b5
  4088f4:	mov    ecx,0x1
  4088f9:	mov    QWORD PTR [rsp+0x48],r9
  4088fe:	call   0x401f48
  408903:	mov    r9,QWORD PTR [rsp+0x48]
  408908:	mov    rdx,r9
  40890b:	jmp    0x408437
  408910:	call   0x401f10
  408915:	mov    rbx,QWORD PTR [rax]
  408918:	mov    r14,rax
  40891b:	lea    r13,[rip+0x274e]        # 0x40b070
  408922:	mov    ebp,0x8
  408927:	test   rbx,rbx
  40892a:	je     0x40874a
  408930:	mov    rsi,rbx
  408933:	mov    rdi,r13
  408936:	mov    rcx,rbp
  408939:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40893b:	je     0x408961
  40893d:	lea    rdi,[rip+0x2734]        # 0x40b078
  408944:	mov    rsi,rbx
  408947:	mov    rcx,rbp
  40894a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40894c:	je     0x408961
  40894e:	lea    rdx,[rip+0x272b]        # 0x40b080
  408955:	mov    rcx,rbx
  408958:	call   0x408140
  40895d:	test   eax,eax
  40895f:	jne    0x4089c4
  408961:	add    r14,0x18
  408965:	mov    rbx,QWORD PTR [r14]
  408968:	test   rbx,rbx
  40896b:	jne    0x408930
  40896d:	jmp    0x40874a
  408972:	movsd  xmm5,QWORD PTR [rip+0x2dc6]        # 0x40b740
  40897a:	mov    r13,rbp
  40897d:	mov    r9,QWORD PTR [rsp+0x48]
  408982:	divsd  xmm5,xmm0
  408986:	movsd  QWORD PTR [rip+0x66b2],xmm5        # 0x40f040
  40898e:	jmp    0x408560
  408993:	mov    rcx,r13
  408996:	call   0x4081f0
  40899b:	ucomisd xmm0,xmm6
  40899f:	movsd  QWORD PTR [rip+0x6699],xmm0        # 0x40f040
  4089a7:	jp     0x408553
  4089ad:	je     0x4086d3
  4089b3:	jmp    0x408553
  4089b8:	mov    r12,QWORD PTR [r14]
  4089bb:	mov    QWORD PTR [rbx+0x8],r12
  4089bf:	jmp    0x4083ea
  4089c4:	lea    rcx,[rip+0x26bd]        # 0x40b088
  4089cb:	mov    rdx,rbx
  4089ce:	call   0x408170
  4089d3:	cmp    r12b,0x50
  4089d7:	mov    rax,QWORD PTR [r14+0x10]
  4089db:	je     0x409b03
  4089e1:	mov    rax,QWORD PTR [rax]
  4089e4:	movsx  ecx,BYTE PTR [rax]
  4089e7:	lea    rbx,[rax+0x1]
  4089eb:	test   ecx,ecx
  4089ed:	jne    0x408a02
  4089ef:	jmp    0x408a07
  4089f1:	add    rbx,0x1
  4089f5:	call   0x408168
  4089fa:	movsx  ecx,BYTE PTR [rbx-0x1]
  4089fe:	test   ecx,ecx
  408a00:	je     0x408a07
  408a02:	cmp    ecx,0xa
  408a05:	jne    0x4089f1
  408a07:	mov    ecx,0xa
  408a0c:	call   0x408168
  408a11:	jmp    0x408961
  408a16:	cmp    QWORD PTR [rip+0x66d2],0x0        # 0x40f0f0
  408a1e:	je     0x40848c
  408a24:	lea    rdx,[rip+0x27ad]        # 0x40b1d8
  408a2b:	mov    ecx,0x4
  408a30:	call   0x401f48
  408a35:	jmp    0x40848c
  408a3a:	lea    rdx,[rip+0x2619]        # 0x40b05a
  408a41:	mov    ecx,0x1
  408a46:	mov    QWORD PTR [rsp+0x48],r9
  408a4b:	mov    r13,rbp
  408a4e:	call   0x401f48
  408a53:	mov    r9,QWORD PTR [rsp+0x48]
  408a58:	jmp    0x408560
  408a5d:	mov    rax,QWORD PTR [rip+0x380c]        # 0x40c270
  408a64:	mov    QWORD PTR [rip+0x66bd],rax        # 0x40f128
  408a6b:	jmp    0x408502
  408a70:	cmp    DWORD PTR [rsp+0x40],0x0
  408a75:	jne    0x409097
  408a7b:	cmp    DWORD PTR [rip+0x668a],0x0        # 0x40f10c
  408a82:	jne    0x409052
  408a88:	cmp    QWORD PTR [rip+0x6658],0x0        # 0x40f0e8
  408a90:	mov    rax,QWORD PTR [rip+0x3759]        # 0x40c1f0
  408a97:	mov    QWORD PTR [rip+0x65aa],rax        # 0x40f048
  408a9e:	je     0x409b9f
  408aa4:	cmp    DWORD PTR [rip+0x6669],0x0        # 0x40f114
  408aab:	jne    0x409b10
  408ab1:	xor    esi,esi
  408ab3:	cmp    DWORD PTR [rsp+0x48],0x0
  408ab8:	je     0x409282
  408abe:	mov    r13,QWORD PTR [rip+0x8a1b]        # 0x4114e0
  408ac5:	movsd  xmm8,QWORD PTR [rip+0x2c6a]        # 0x40b738
  408ace:	mov    r12,rsi
  408ad1:	mov    QWORD PTR [rsp+0x8b8],r14
  408ad9:	movapd xmm7,xmm8
  408ade:	mov    r15,r13
  408ae1:	mov    rax,QWORD PTR [rsp+0x8b8]
  408ae9:	mov    rcx,QWORD PTR [rax+r12*8]
  408aed:	cmp    BYTE PTR [rcx],0x2d
  408af0:	je     0x40995f
  408af6:	lea    rdx,[rip+0x2823]        # 0x40b320
  408afd:	call   0x4081c0
  408b02:	mov    rsi,rax
  408b05:	mov    rax,QWORD PTR [rsp+0x8b8]
  408b0d:	test   rsi,rsi
  408b10:	je     0x409a82
  408b16:	mov    rax,QWORD PTR [rax+r12*8]
  408b1a:	mov    QWORD PTR [rbx],rax
  408b1d:	cmp    DWORD PTR [rip+0x65d8],0x0        # 0x40f0fc
  408b24:	mov    DWORD PTR [rbx+0x10],0x0
  408b2b:	je     0x4092b8
  408b31:	cmp    QWORD PTR [rip+0x65af],0x0        # 0x40f0e8
  408b39:	je     0x409a11
  408b3f:	cmp    DWORD PTR [rip+0x65d2],0x0        # 0x40f118
  408b46:	jne    0x408b51
  408b48:	cmp    DWORD PTR [rip+0x65c5],0x0        # 0x40f114
  408b4f:	je     0x408b62
  408b51:	lea    rdx,[rip+0x27d8]        # 0x40b330
  408b58:	mov    ecx,0x1
  408b5d:	call   0x401f48
  408b62:	mov    rax,QWORD PTR [rip+0x8977]        # 0x4114e0
  408b69:	lea    rbp,[rsp+0x3e0]
  408b71:	movsd  xmm11,QWORD PTR [rip+0x2bce]        # 0x40b748
  408b7a:	movsd  xmm13,QWORD PTR [rip+0x2bbd]        # 0x40b740
  408b83:	movsd  xmm12,QWORD PTR [rip+0x2bc4]        # 0x40b750
  408b8c:	mov    QWORD PTR [rsp+0x40],rax
  408b91:	mov    r8,rsi
  408b94:	mov    edx,0x3e8
  408b99:	mov    rcx,rbp
  408b9c:	add    DWORD PTR [rbx+0x10],0x1
  408ba0:	call   0x4081c8
  408ba5:	test   rax,rax
  408ba8:	mov    r13,rax
  408bab:	mov    QWORD PTR [rsp+0x80],rax
  408bb3:	je     0x409264
  408bb9:	mov    edx,0xa
  408bbe:	mov    rcx,rax
  408bc1:	call   0x408148
  408bc6:	test   rax,rax
  408bc9:	je     0x409921
  408bcf:	movsx  eax,BYTE PTR [r13+0x0]
  408bd4:	cmp    eax,DWORD PTR [rip+0x143e]        # 0x40a018
  408bda:	mov    edx,eax
  408bdc:	je     0x40929c
  408be2:	and    edx,0xffffffdf
  408be5:	cmp    dl,0x49
  408be8:	je     0x409190
  408bee:	cmp    DWORD PTR [rip+0x6517],0x0        # 0x40f10c
  408bf5:	je     0x4091c2
  408bfb:	mov    rax,QWORD PTR [rip+0x652e]        # 0x40f130
  408c02:	cmp    QWORD PTR [rax+0x10],0x0
  408c07:	je     0x4091ae
  408c0d:	lea    rdi,[rsp+0x80]
  408c15:	mov    rcx,QWORD PTR [rsp+0x80]
  408c1d:	mov    rdx,rdi
  408c20:	call   0x4034c0
  408c25:	mov    rcx,QWORD PTR [rsp+0x80]
  408c2d:	mov    rdx,rdi
  408c30:	movapd xmm6,xmm0
  408c34:	call   0x4034c0
  408c39:	movapd xmm9,xmm0
  408c3e:	movsd  xmm0,QWORD PTR [rip+0x2af2]        # 0x40b738
  408c46:	ucomisd xmm6,xmm0
  408c4a:	ja     0x409173
  408c50:	ucomisd xmm9,xmm0
  408c55:	ja     0x409173
  408c5b:	cmp    DWORD PTR [rip+0x64a6],0x0        # 0x40f108
  408c62:	je     0x408c75
  408c64:	movsd  xmm0,QWORD PTR [rip+0x63d4]        # 0x40f040
  408c6c:	mulsd  xmm6,xmm0
  408c70:	mulsd  xmm9,xmm0
  408c75:	lea    rdi,[rsp+0x60]
  408c7a:	mov    r8,QWORD PTR [rip+0x64af]        # 0x40f130
  408c81:	lea    rdx,[rsp+0x50]
  408c86:	movq   QWORD PTR [rsp+0x50],xmm6
  408c8c:	mov    rcx,rdi
  408c8f:	movq   QWORD PTR [rsp+0x58],xmm9
  408c96:	call   0x401ef0
  408c9b:	movsd  xmm14,QWORD PTR [rsp+0x60]
  408ca2:	movsd  xmm10,QWORD PTR [rsp+0x68]
  408ca9:	mov    rax,QWORD PTR [rip+0x35b0]        # 0x40c260
  408cb0:	mov    ecx,DWORD PTR [rax]
  408cb2:	test   ecx,ecx
  408cb4:	jne    0x40988c
  408cba:	mov    rax,QWORD PTR [rsp+0x80]
  408cc2:	cmp    BYTE PTR [rax],0x0
  408cc5:	jne    0x408cd8
  408cc7:	cmp    rax,rbp
  408cca:	jbe    0x408cd8
  408ccc:	sub    rax,0x1
  408cd0:	mov    QWORD PTR [rsp+0x80],rax
  408cd8:	pxor   xmm2,xmm2
  408cdc:	mov    rdx,QWORD PTR [rip+0x644d]        # 0x40f130
  408ce3:	lea    r9,[rip+0x6396]        # 0x40f080
  408cea:	mov    rcx,rdi
  408ced:	movq   QWORD PTR [rsp+0x60],xmm14
  408cf4:	movq   QWORD PTR [rsp+0x68],xmm10
  408cfb:	call   0x401f38
  408d00:	test   eax,eax
  408d02:	jne    0x40999e
  408d08:	mov    rax,QWORD PTR [rsp+0x80]
  408d10:	mov    rdi,QWORD PTR [rsp+0x40]
  408d15:	cmp    BYTE PTR [rax],0xa
  408d18:	je     0x408d34
  408d1a:	mov    rdi,QWORD PTR [rip+0x87bf]        # 0x4114e0
  408d21:	call   rdi
  408d23:	mov    rcx,QWORD PTR [rsp+0x80]
  408d2b:	lea    rdx,[rax+0x30]
  408d2f:	call   0x4081a8
  408d34:	call   rdi
  408d36:	lea    rcx,[rip+0x2681]        # 0x40b3be
  408d3d:	lea    r9,[rax+0x30]
  408d41:	mov    edx,0x1
  408d46:	lea    r13,[rsp+0x90]
  408d4e:	mov    r8d,0xb
  408d54:	call   0x408190
  408d59:	call   rdi
  408d5b:	movapd xmm1,xmm14
  408d60:	mov    r9d,0x57
  408d66:	mov    r8d,0x45
  408d6c:	mov    r14,rax
  408d6f:	mov    rcx,r13
  408d72:	call   0x401ec8
  408d77:	lea    rdx,[r14+0x30]
  408d7b:	mov    rcx,rax
  408d7e:	call   0x4081a8
  408d83:	movapd xmm2,xmm14
  408d88:	lea    rcx,[rip+0x263b]        # 0x40b3ca
  408d8f:	mulsd  xmm2,xmm11
  408d94:	movapd xmm1,xmm2
  408d98:	movq   rdx,xmm2
  408d9d:	call   0x408170
  408da2:	call   rdi
  408da4:	lea    rcx,[rip+0x262b]        # 0x40b3d6
  408dab:	lea    r9,[rax+0x30]
  408daf:	mov    edx,0x1
  408db4:	mov    r8d,0xb
  408dba:	call   0x408190
  408dbf:	call   rdi
  408dc1:	movapd xmm1,xmm10
  408dc6:	mov    r9d,0x53
  408dcc:	mov    r8d,0x4e
  408dd2:	mov    r14,rax
  408dd5:	mov    rcx,r13
  408dd8:	call   0x401ec8
  408ddd:	lea    rdx,[r14+0x30]
  408de1:	mov    rcx,rax
  408de4:	call   0x4081a8
  408de9:	mulsd  xmm10,xmm11
  408dee:	lea    rcx,[rip+0x25d5]        # 0x40b3ca
  408df5:	movapd xmm1,xmm10
  408dfa:	movq   rdx,xmm10
  408dff:	call   0x408170
  408e04:	call   rdi
  408e06:	lea    rcx,[rip+0x25d5]        # 0x40b3e2
  408e0d:	lea    r9,[rax+0x30]
  408e11:	mov    r8d,0xf
  408e17:	mov    edx,0x1
  408e1c:	call   0x408190
  408e21:	mov    rcx,QWORD PTR [rip+0x62c0]        # 0x40f0e8
  408e28:	movapd xmm1,xmm6
  408e2c:	movq   rdx,xmm6
  408e31:	call   0x408170
  408e36:	mov    ecx,0xa
  408e3b:	call   0x408168
  408e40:	call   rdi
  408e42:	lea    rcx,[rip+0x25a9]        # 0x40b3f2
  408e49:	lea    r9,[rax+0x30]
  408e4d:	mov    r8d,0xf
  408e53:	mov    edx,0x1
  408e58:	call   0x408190
  408e5d:	mov    rcx,QWORD PTR [rip+0x6284]        # 0x40f0e8
  408e64:	movapd xmm1,xmm9
  408e69:	movq   rdx,xmm9
  408e6e:	call   0x408170
  408e73:	mov    ecx,0xa
  408e78:	call   0x408168
  408e7d:	movsd  xmm1,QWORD PTR [rip+0x621b]        # 0x40f0a0
  408e85:	mov    eax,DWORD PTR [rip+0x6255]        # 0x40f0e0
  408e8b:	lea    rcx,[rip+0x2576]        # 0x40b408
  408e92:	movapd xmm0,xmm1
  408e96:	movapd xmm2,xmm1
  408e9a:	and    eax,0x4
  408e9d:	movq   r8,xmm1
  408ea2:	subsd  xmm0,xmm13
  408ea7:	cmp    eax,0x1
  408eaa:	sbb    edx,edx
  408eac:	and    edx,0xfffffff6
  408eaf:	add    edx,0x2a
  408eb2:	mulsd  xmm0,xmm12
  408eb7:	movapd xmm3,xmm0
  408ebb:	movq   r9,xmm0
  408ec0:	call   0x408170
  408ec5:	movsd  xmm1,QWORD PTR [rip+0x61db]        # 0x40f0a8
  408ecd:	mov    eax,DWORD PTR [rip+0x620d]        # 0x40f0e0
  408ed3:	lea    rcx,[rip+0x255e]        # 0x40b438
  408eda:	movapd xmm0,xmm1
  408ede:	movapd xmm2,xmm1
  408ee2:	and    eax,0x4
  408ee5:	movq   r8,xmm1
  408eea:	subsd  xmm0,xmm13
  408eef:	cmp    eax,0x1
  408ef2:	sbb    edx,edx
  408ef4:	and    edx,0xfffffff6
  408ef7:	add    edx,0x2a
  408efa:	mulsd  xmm0,xmm12
  408eff:	movq   r9,xmm0
  408f04:	movapd xmm3,xmm0
  408f08:	call   0x408170
  408f0d:	movsd  xmm3,QWORD PTR [rip+0x61b3]        # 0x40f0c8
  408f15:	lea    rcx,[rip+0x254c]        # 0x40b468
  408f1c:	movapd xmm0,xmm3
  408f20:	movq   rdx,xmm3
  408f25:	movapd xmm1,xmm3
  408f29:	subsd  xmm0,xmm13
  408f2e:	mulsd  xmm0,xmm12
  408f33:	movapd xmm2,xmm0
  408f37:	movq   r8,xmm0
  408f3c:	call   0x408170
  408f41:	movsd  xmm0,QWORD PTR [rip+0x6167]        # 0x40f0b0
  408f49:	lea    rcx,[rip+0x2546]        # 0x40b496
  408f50:	mulsd  xmm0,xmm11
  408f55:	movapd xmm1,xmm0
  408f59:	movq   rdx,xmm0
  408f5e:	call   0x408170
  408f63:	movsd  xmm0,QWORD PTR [rip+0x614d]        # 0x40f0b8
  408f6b:	lea    rcx,[rip+0x2546]        # 0x40b4b8
  408f72:	mulsd  xmm0,xmm11
  408f77:	movapd xmm1,xmm0
  408f7b:	movq   rdx,xmm0
  408f80:	call   0x408170
  408f85:	mov    eax,DWORD PTR [rip+0x6155]        # 0x40f0e0
  408f8b:	lea    rcx,[rip+0x2545]        # 0x40b4d7
  408f92:	and    eax,0x8
  408f95:	cmp    eax,0x1
  408f98:	sbb    edx,edx
  408f9a:	and    edx,0xfffffff6
  408f9d:	add    edx,0x2a
  408fa0:	call   0x408170
  408fa5:	call   rdi
  408fa7:	movsd  xmm1,QWORD PTR [rip+0x6111]        # 0x40f0c0
  408faf:	xor    r8d,r8d
  408fb2:	xor    r9d,r9d
  408fb5:	mov    rdi,rax
  408fb8:	mov    rcx,r13
  408fbb:	call   0x401ec8
  408fc0:	lea    rdx,[rdi+0x30]
  408fc4:	mov    rcx,rax
  408fc7:	call   0x4081a8
  408fcc:	movsd  xmm0,QWORD PTR [rip+0x60ec]        # 0x40f0c0
  408fd4:	lea    rcx,[rip+0x250c]        # 0x40b4e7
  408fdb:	mulsd  xmm0,xmm11
  408fe0:	movapd xmm1,xmm0
  408fe4:	movq   rdx,xmm0
  408fe9:	call   0x408170
  408fee:	movsd  xmm1,QWORD PTR [rip+0x60e2]        # 0x40f0d8
  408ff6:	lea    rcx,[rip+0x24fb]        # 0x40b4f8
  408ffd:	movsd  xmm0,QWORD PTR [rip+0x60cb]        # 0x40f0d0
  409005:	movapd xmm2,xmm1
  409009:	movq   r8,xmm1
  40900e:	movq   rdx,xmm0
  409013:	movapd xmm1,xmm0
  409017:	call   0x408170
  40901c:	jmp    0x408b91
  409021:	movsd  xmm0,QWORD PTR [rip+0x2717]        # 0x40b740
  409029:	mov    DWORD PTR [rip+0x60d5],0x1        # 0x40f108
  409033:	mov    DWORD PTR [rip+0x60bb],0x0        # 0x40f0f8
  40903d:	divsd  xmm0,QWORD PTR [rip+0x5ffb]        # 0x40f040
  409045:	movsd  QWORD PTR [rip+0x5ff3],xmm0        # 0x40f040
  40904d:	jmp    0x4084a2
  409052:	mov    rax,QWORD PTR [rip+0x30d7]        # 0x40c130
  409059:	mov    QWORD PTR [rip+0x5fe8],rax        # 0x40f048
  409060:	jmp    0x408aa4
  409065:	call   0x401f10
  40906a:	add    r13,0x3
  40906e:	mov    rsi,rax
  409071:	jmp    0x40908a
  409073:	mov    rdx,r13
  409076:	mov    rcx,rbx
  409079:	call   0x408140
  40907e:	test   eax,eax
  409080:	je     0x409b30
  409086:	add    rsi,0x18
  40908a:	mov    rbx,QWORD PTR [rsi]
  40908d:	test   rbx,rbx
  409090:	jne    0x409073
  409092:	jmp    0x40874a
  409097:	mov    rcx,QWORD PTR [rip+0x6092]        # 0x40f130
  40909e:	call   0x401ee0
  4090a3:	cmp    DWORD PTR [rip+0x6052],0x0        # 0x40f0fc
  4090aa:	je     0x408a7b
  4090b0:	lea    rcx,[rip+0x21da]        # 0x40b291
  4090b7:	call   0x408170
  4090bc:	pxor   xmm0,xmm0
  4090c0:	mov    rax,QWORD PTR [rip+0x6069]        # 0x40f130
  4090c7:	ucomisd xmm0,QWORD PTR [rax+0x68]
  4090cc:	jp     0x4090d4
  4090ce:	je     0x409bb2
  4090d4:	lea    rcx,[rip+0x21cc]        # 0x40b2a7
  4090db:	call   0x408170
  4090e0:	mov    rax,QWORD PTR [rip+0x6049]        # 0x40f130
  4090e7:	lea    rcx,[rip+0x1f12]        # 0x40b000
  4090ee:	movsd  xmm0,QWORD PTR [rax+0x58]
  4090f3:	mov    rax,QWORD PTR [rip+0x5fee]        # 0x40f0e8
  4090fa:	movapd xmm1,xmm0
  4090fe:	movq   rdx,xmm0
  409103:	test   rax,rax
  409106:	cmovne rcx,rax
  40910a:	call   0x408170
  40910f:	movsd  xmm6,QWORD PTR [rip+0x2629]        # 0x40b740
  409117:	mov    rax,QWORD PTR [rip+0x6012]        # 0x40f130
  40911e:	movapd xmm0,xmm6
  409122:	subsd  xmm0,QWORD PTR [rax+0x68]
  409127:	call   0x4035a0
  40912c:	movapd xmm4,xmm6
  409130:	lea    rcx,[rip+0x218e]        # 0x40b2c5
  409137:	subsd  xmm4,xmm0
  40913b:	divsd  xmm6,xmm4
  40913f:	movapd xmm1,xmm6
  409143:	movq   rdx,xmm6
  409148:	call   0x408170
  40914d:	mov    rax,QWORD PTR [rip+0x5fdc]        # 0x40f130
  409154:	lea    rcx,[rip+0x2185]        # 0x40b2e0
  40915b:	movsd  xmm0,QWORD PTR [rax+0x68]
  409160:	movapd xmm1,xmm0
  409164:	movq   rdx,xmm0
  409169:	call   0x408170
  40916e:	jmp    0x408a7b
  409173:	lea    rdx,[rip+0x2206]        # 0x40b380
  40917a:	mov    ecx,0xffffffff
  40917f:	call   0x401f48
  409184:	jmp    0x408b91
  409189:	nop    DWORD PTR [rax+0x0]
  409190:	mov    rax,QWORD PTR [rip+0x5f99]        # 0x40f130
  409197:	add    r13,0x1
  40919b:	mov    QWORD PTR [rsp+0x80],r13
  4091a3:	cmp    QWORD PTR [rax+0x10],0x0
  4091a8:	jne    0x408c0d
  4091ae:	lea    rdx,[rip+0x21a3]        # 0x40b358
  4091b5:	or     ecx,0xffffffff
  4091b8:	call   0x401f48
  4091bd:	jmp    0x408b91
  4091c2:	lea    rdi,[rsp+0x80]
  4091ca:	mov    rcx,r13
  4091cd:	mov    rdx,rdi
  4091d0:	call   0x401f50
  4091d5:	mov    rcx,QWORD PTR [rsp+0x80]
  4091dd:	mov    rdx,rdi
  4091e0:	movapd xmm14,xmm0
  4091e5:	call   0x401f50
  4091ea:	movapd xmm10,xmm0
  4091ef:	movsd  xmm0,QWORD PTR [rip+0x2541]        # 0x40b738
  4091f7:	ucomisd xmm14,xmm0
  4091fc:	ja     0x409173
  409202:	ucomisd xmm10,xmm0
  409207:	ja     0x409173
  40920d:	lea    rdi,[rsp+0x60]
  409212:	mov    r8,QWORD PTR [rip+0x5f17]        # 0x40f130
  409219:	lea    rdx,[rsp+0x50]
  40921e:	movq   QWORD PTR [rsp+0x50],xmm14
  409225:	mov    rcx,rdi
  409228:	movq   QWORD PTR [rsp+0x58],xmm10
  40922f:	call   0x401f28
  409234:	cmp    DWORD PTR [rip+0x5ebd],0x0        # 0x40f0f8
  40923b:	movsd  xmm6,QWORD PTR [rsp+0x60]
  409241:	movsd  xmm9,QWORD PTR [rsp+0x68]
  409248:	je     0x408ca9
  40924e:	movsd  xmm0,QWORD PTR [rip+0x5dea]        # 0x40f040
  409256:	mulsd  xmm6,xmm0
  40925a:	mulsd  xmm9,xmm0
  40925f:	jmp    0x408ca9
  409264:	mov    rcx,rsi
  409267:	call   0x4081d8
  40926c:	mov    QWORD PTR [rbx],0x0
  409273:	add    r12,0x1
  409277:	cmp    DWORD PTR [rsp+0x48],r12d
  40927c:	jne    0x408ae1
  409282:	mov    rcx,QWORD PTR [rip+0x5ea7]        # 0x40f130
  409289:	test   rcx,rcx
  40928c:	je     0x40874a
  409292:	call   0x401f30
  409297:	jmp    0x40874a
  40929c:	call   QWORD PTR [rip+0x823e]        # 0x4114e0
  4092a2:	mov    rcx,QWORD PTR [rsp+0x80]
  4092aa:	lea    rdx,[rax+0x30]
  4092ae:	call   0x4081a8
  4092b3:	jmp    0x408b91
  4092b8:	mov    r14,QWORD PTR [rip+0x8221]        # 0x4114e0
  4092bf:	mov    QWORD PTR [rsp+0x40],r14
  4092c4:	mov    r10d,DWORD PTR [rip+0x5e4d]        # 0x40f118
  4092cb:	add    DWORD PTR [rbx+0x10],0x1
  4092cf:	test   r10d,r10d
  4092d2:	je     0x4095d0
  4092d8:	lea    rcx,[rsp+0x80]
  4092e0:	mov    r9,rsi
  4092e3:	mov    r8d,0x1
  4092e9:	mov    edx,0x10
  4092ee:	call   0x4081a0
  4092f3:	cmp    rax,0x1
  4092f7:	jne    0x409264
  4092fd:	movapd xmm6,xmm8
  409302:	mov    rdi,r15
  409305:	movsd  xmm0,QWORD PTR [rsp+0x80]
  40930e:	ucomisd xmm0,xmm6
  409312:	ja     0x4095a0
  409318:	mov    eax,DWORD PTR [rip+0x5dea]        # 0x40f108
  40931e:	test   eax,eax
  409320:	je     0x409349
  409322:	movsd  xmm1,QWORD PTR [rip+0x5d16]        # 0x40f040
  40932a:	mulsd  xmm0,xmm1
  40932e:	mulsd  xmm1,QWORD PTR [rsp+0x88]
  409337:	movsd  QWORD PTR [rsp+0x80],xmm0
  409340:	movsd  QWORD PTR [rsp+0x88],xmm1
  409349:	mov    eax,DWORD PTR [rip+0x5db5]        # 0x40f104
  40934f:	lea    rbp,[rsp+0x60]
  409354:	test   eax,eax
  409356:	je     0x409366
  409358:	mov    eax,DWORD PTR [rip+0x5dae]        # 0x40f10c
  40935e:	test   eax,eax
  409360:	je     0x4097bb
  409366:	mov    rax,QWORD PTR [rsp+0x80]
  40936e:	mov    rdx,QWORD PTR [rsp+0x88]
  409376:	mov    rcx,rbp
  409379:	mov    r8,QWORD PTR [rip+0x5db0]        # 0x40f130
  409380:	mov    QWORD PTR [rsp+0x50],rax
  409385:	mov    QWORD PTR [rsp+0x58],rdx
  40938a:	lea    rdx,[rsp+0x50]
  40938f:	call   QWORD PTR [rip+0x5d93]        # 0x40f128
  409395:	mov    rax,QWORD PTR [rsp+0x60]
  40939a:	mov    rdx,QWORD PTR [rsp+0x68]
  40939f:	mov    QWORD PTR [rsp+0x80],rax
  4093a7:	mov    eax,DWORD PTR [rip+0x5d57]        # 0x40f104
  4093ad:	mov    QWORD PTR [rsp+0x88],rdx
  4093b5:	test   eax,eax
  4093b7:	je     0x4093c7
  4093b9:	mov    eax,DWORD PTR [rip+0x5d4d]        # 0x40f10c
  4093bf:	test   eax,eax
  4093c1:	jne    0x4097fa
  4093c7:	mov    eax,DWORD PTR [rip+0x5d2b]        # 0x40f0f8
  4093cd:	test   eax,eax
  4093cf:	je     0x40940b
  4093d1:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4093da:	ucomisd xmm0,xmm6
  4093de:	ja     0x4095a0
  4093e4:	movsd  xmm1,QWORD PTR [rip+0x5c54]        # 0x40f040
  4093ec:	mulsd  xmm0,xmm1
  4093f0:	mulsd  xmm1,QWORD PTR [rsp+0x88]
  4093f9:	movsd  QWORD PTR [rsp+0x80],xmm0
  409402:	movsd  QWORD PTR [rsp+0x88],xmm1
  40940b:	mov    r13d,DWORD PTR [rip+0x5d02]        # 0x40f114
  409412:	test   r13d,r13d
  409415:	jne    0x4095aa
  40941b:	movsd  xmm0,QWORD PTR [rsp+0x80]
  409424:	ucomisd xmm0,xmm6
  409428:	ja     0x409580
  40942e:	mov    ebp,DWORD PTR [rip+0x5cd8]        # 0x40f10c
  409434:	mov    rcx,QWORD PTR [rip+0x5cad]        # 0x40f0e8
  40943b:	test   ebp,ebp
  40943d:	je     0x409473
  40943f:	test   rcx,rcx
  409442:	je     0x4098a1
  409448:	movsd  xmm1,QWORD PTR [rip+0x22f8]        # 0x40b748
  409450:	movsd  xmm2,QWORD PTR [rsp+0x88]
  409459:	mulsd  xmm0,xmm1
  40945d:	mulsd  xmm2,xmm1
  409461:	movsd  QWORD PTR [rsp+0x80],xmm0
  40946a:	movsd  QWORD PTR [rsp+0x88],xmm2
  409473:	mov    r11d,DWORD PTR [rip+0x5ca2]        # 0x40f11c
  40947a:	test   r11d,r11d
  40947d:	je     0x4096e0
  409483:	movsd  xmm0,QWORD PTR [rsp+0x88]
  40948c:	movapd xmm1,xmm0
  409490:	movq   rdx,xmm0
  409495:	call   0x408170
  40949a:	mov    ecx,0x9
  40949f:	call   0x408168
  4094a4:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4094ad:	mov    rcx,QWORD PTR [rip+0x5c34]        # 0x40f0e8
  4094b4:	movapd xmm1,xmm0
  4094b8:	movq   rdx,xmm0
  4094bd:	call   0x408170
  4094c2:	mov    r10d,DWORD PTR [rip+0x5c3b]        # 0x40f104
  4094c9:	test   r10d,r10d
  4094cc:	je     0x409553
  4094d2:	mov    r9d,DWORD PTR [rip+0x5c27]        # 0x40f100
  4094d9:	test   r9d,r9d
  4094dc:	jne    0x409772
  4094e2:	movsd  xmm0,QWORD PTR [rip+0x5bee]        # 0x40f0d8
  4094ea:	lea    rcx,[rip+0x203a]        # 0x40b52b
  4094f1:	movsd  xmm2,QWORD PTR [rip+0x5bcf]        # 0x40f0c8
  4094f9:	movsd  QWORD PTR [rsp+0x30],xmm0
  4094ff:	movsd  xmm0,QWORD PTR [rip+0x5bc9]        # 0x40f0d0
  409507:	movapd xmm3,xmm2
  40950b:	movsd  xmm1,QWORD PTR [rip+0x5b95]        # 0x40f0a8
  409513:	movq   r9,xmm2
  409518:	movsd  QWORD PTR [rsp+0x28],xmm0
  40951e:	movsd  xmm0,QWORD PTR [rip+0x2222]        # 0x40b748
  409526:	movapd xmm2,xmm1
  40952a:	movsd  xmm4,QWORD PTR [rip+0x5b6e]        # 0x40f0a0
  409532:	movq   r8,xmm1
  409537:	mulsd  xmm0,QWORD PTR [rip+0x5b71]        # 0x40f0b0
  40953f:	movapd xmm1,xmm4
  409543:	movq   rdx,xmm4
  409548:	movsd  QWORD PTR [rsp+0x20],xmm0
  40954e:	call   0x408170
  409553:	call   rdi
  409555:	mov    r8d,DWORD PTR [rip+0x5bbc]        # 0x40f118
  40955c:	lea    rcx,[rip+0x1aa2]        # 0x40b005
  409563:	lea    rdx,[rax+0x30]
  409567:	test   r8d,r8d
  40956a:	cmove  rcx,QWORD PTR [rsp+0x78]
  409570:	call   0x4081a8
  409575:	jmp    0x4092c4
  40957a:	nop    WORD PTR [rax+rax*1+0x0]
  409580:	call   rdi
  409582:	mov    rcx,QWORD PTR [rip+0xa87]        # 0x40a010
  409589:	lea    rdx,[rax+0x30]
  40958d:	call   0x4081a8
  409592:	jmp    0x4094c2
  409597:	nop    WORD PTR [rax+rax*1+0x0]
  4095a0:	mov    eax,DWORD PTR [rip+0x5b6e]        # 0x40f114
  4095a6:	test   eax,eax
  4095a8:	je     0x409580
  4095aa:	call   rdi
  4095ac:	lea    rcx,[rsp+0x80]
  4095b4:	lea    r9,[rax+0x30]
  4095b8:	mov    r8d,0x1
  4095be:	mov    edx,0x10
  4095c3:	call   0x408190
  4095c8:	jmp    0x4092c4
  4095cd:	nop    DWORD PTR [rax]
  4095d0:	lea    r13,[rsp+0x3e0]
  4095d8:	mov    r8,rsi
  4095db:	mov    edx,0x3e8
  4095e0:	mov    rcx,r13
  4095e3:	call   0x4081c8
  4095e8:	test   rax,rax
  4095eb:	mov    rbp,rax
  4095ee:	mov    QWORD PTR [rsp+0x78],rax
  4095f3:	je     0x409264
  4095f9:	mov    edx,0xa
  4095fe:	mov    rcx,rax
  409601:	call   0x408148
  409606:	test   rax,rax
  409609:	je     0x409856
  40960f:	movsx  eax,BYTE PTR [rbp+0x0]
  409613:	cmp    eax,DWORD PTR [rip+0x9ff]        # 0x40a018
  409619:	je     0x409794
  40961f:	mov    r8d,DWORD PTR [rip+0x5afa]        # 0x40f120
  409626:	lea    rdi,[rsp+0x78]
  40962b:	mov    rcx,rbp
  40962e:	mov    rdx,rdi
  409631:	test   r8d,r8d
  409634:	je     0x409724
  40963a:	call   QWORD PTR [rip+0x5a08]        # 0x40f048
  409640:	mov    rdx,rdi
  409643:	movsd  QWORD PTR [rsp+0x88],xmm0
  40964c:	mov    rcx,QWORD PTR [rsp+0x78]
  409651:	call   QWORD PTR [rip+0x59f1]        # 0x40f048
  409657:	movsd  QWORD PTR [rsp+0x80],xmm0
  409660:	movsd  xmm0,QWORD PTR [rsp+0x88]
  409669:	ucomisd xmm0,xmm7
  40966d:	movapd xmm6,xmm7
  409671:	jbe    0x409684
  409673:	movsd  xmm5,QWORD PTR [rip+0x20dd]        # 0x40b758
  40967b:	movsd  QWORD PTR [rsp+0x80],xmm5
  409684:	mov    rax,QWORD PTR [rsp+0x78]
  409689:	cmp    BYTE PTR [rax],0x0
  40968c:	jne    0x40969c
  40968e:	cmp    rax,r13
  409691:	jbe    0x40969c
  409693:	sub    rax,0x1
  409697:	mov    QWORD PTR [rsp+0x78],rax
  40969c:	mov    ecx,DWORD PTR [rip+0x5a72]        # 0x40f114
  4096a2:	test   ecx,ecx
  4096a4:	jne    0x409750
  4096aa:	mov    edx,DWORD PTR [rip+0x5a60]        # 0x40f110
  4096b0:	test   edx,edx
  4096b2:	jne    0x40981f
  4096b8:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4096c1:	mov    rdi,QWORD PTR [rip+0x7e18]        # 0x4114e0
  4096c8:	ucomisd xmm0,xmm7
  4096cc:	ja     0x409580
  4096d2:	mov    rdi,QWORD PTR [rsp+0x40]
  4096d7:	jmp    0x409318
  4096dc:	nop    DWORD PTR [rax+0x0]
  4096e0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4096e9:	movapd xmm1,xmm0
  4096ed:	movq   rdx,xmm0
  4096f2:	call   0x408170
  4096f7:	mov    ecx,0x9
  4096fc:	call   0x408168
  409701:	movsd  xmm0,QWORD PTR [rsp+0x88]
  40970a:	mov    rcx,QWORD PTR [rip+0x59d7]        # 0x40f0e8
  409711:	movapd xmm1,xmm0
  409715:	movq   rdx,xmm0
  40971a:	call   0x408170
  40971f:	jmp    0x4094c2
  409724:	call   QWORD PTR [rip+0x591e]        # 0x40f048
  40972a:	mov    rdx,rdi
  40972d:	movsd  QWORD PTR [rsp+0x80],xmm0
  409736:	mov    rcx,QWORD PTR [rsp+0x78]
  40973b:	call   QWORD PTR [rip+0x5907]        # 0x40f048
  409741:	movsd  QWORD PTR [rsp+0x88],xmm0
  40974a:	jmp    0x409669
  40974f:	nop
  409750:	movsd  xmm0,QWORD PTR [rsp+0x80]
  409759:	mov    rdi,r14
  40975c:	ucomisd xmm0,xmm7
  409760:	ja     0x4095aa
  409766:	mov    rdi,QWORD PTR [rip+0x7d73]        # 0x4114e0
  40976d:	jmp    0x409318
  409772:	call   rdi
  409774:	lea    rcx,[rip+0x1dc5]        # 0x40b540
  40977b:	lea    r9,[rax+0x30]
  40977f:	mov    r8d,0xe
  409785:	mov    edx,0x1
  40978a:	call   0x408190
  40978f:	jmp    0x409553
  409794:	mov    r9d,DWORD PTR [rip+0x5979]        # 0x40f114
  40979b:	test   r9d,r9d
  40979e:	jne    0x4092c4
  4097a4:	call   QWORD PTR [rip+0x7d36]        # 0x4114e0
  4097aa:	lea    rdx,[rax+0x30]
  4097ae:	mov    rcx,r13
  4097b1:	call   0x4081a8
  4097b6:	jmp    0x4092c4
  4097bb:	mov    rdx,QWORD PTR [rsp+0x88]
  4097c3:	mov    rax,QWORD PTR [rsp+0x80]
  4097cb:	lea    r9,[rip+0x58ae]        # 0x40f080
  4097d2:	pxor   xmm2,xmm2
  4097d6:	mov    rcx,rbp
  4097d9:	mov    QWORD PTR [rsp+0x68],rdx
  4097de:	mov    rdx,QWORD PTR [rip+0x594b]        # 0x40f130
  4097e5:	mov    QWORD PTR [rsp+0x60],rax
  4097ea:	call   0x401f38
  4097ef:	mov    DWORD PTR [rip+0x590b],eax        # 0x40f100
  4097f5:	jmp    0x409366
  4097fa:	pxor   xmm2,xmm2
  4097fe:	mov    rdx,QWORD PTR [rip+0x592b]        # 0x40f130
  409805:	lea    r9,[rip+0x5874]        # 0x40f080
  40980c:	mov    rcx,rbp
  40980f:	call   0x401f38
  409814:	mov    DWORD PTR [rip+0x58e6],eax        # 0x40f100
  40981a:	jmp    0x4093c7
  40981f:	mov    rax,QWORD PTR [rsp+0x78]
  409824:	mov    rdi,QWORD PTR [rip+0x7cb5]        # 0x4114e0
  40982b:	movzx  ebp,BYTE PTR [rax]
  40982e:	mov    BYTE PTR [rax],0x0
  409831:	call   rdi
  409833:	lea    rdx,[rax+0x30]
  409837:	mov    rcx,r13
  40983a:	call   0x4081a8
  40983f:	mov    rax,QWORD PTR [rsp+0x78]
  409844:	mov    ecx,0x9
  409849:	mov    BYTE PTR [rax],bpl
  40984c:	call   0x408168
  409851:	jmp    0x409305
  409856:	or     rcx,0xffffffffffffffff
  40985a:	mov    rdi,rbp
  40985d:	repnz scas al,BYTE PTR es:[rdi]
  40985f:	not    rcx
  409862:	mov    WORD PTR [rbp+rcx*1-0x1],0xa
  409869:	jmp    0x409875
  40986b:	nop    DWORD PTR [rax+rax*1+0x0]
  409870:	cmp    eax,0xa
  409873:	je     0x409882
  409875:	mov    rcx,rsi
  409878:	call   0x4081d0
  40987d:	cmp    eax,0xffffffff
  409880:	jne    0x409870
  409882:	mov    rbp,QWORD PTR [rsp+0x78]
  409887:	jmp    0x40960f
  40988c:	call   0x401ed0
  409891:	or     ecx,0xffffffff
  409894:	mov    rdx,rax
  409897:	call   0x401f48
  40989c:	jmp    0x408b91
  4098a1:	cmp    DWORD PTR [rip+0x5874],0x0        # 0x40f11c
  4098a8:	je     0x4099b2
  4098ae:	lea    r13,[rsp+0x90]
  4098b6:	call   rdi
  4098b8:	movsd  xmm1,QWORD PTR [rsp+0x88]
  4098c1:	mov    r9d,0x53
  4098c7:	mov    r8d,0x4e
  4098cd:	mov    rbp,rax
  4098d0:	mov    rcx,r13
  4098d3:	call   0x401ec8
  4098d8:	lea    rdx,[rbp+0x30]
  4098dc:	mov    rcx,rax
  4098df:	call   0x4081a8
  4098e4:	mov    ecx,0x9
  4098e9:	call   0x408168
  4098ee:	call   rdi
  4098f0:	movsd  xmm1,QWORD PTR [rsp+0x80]
  4098f9:	mov    rbp,rax
  4098fc:	mov    r9d,0x57
  409902:	mov    r8d,0x45
  409908:	mov    rcx,r13
  40990b:	call   0x401ec8
  409910:	lea    rdx,[rbp+0x30]
  409914:	mov    rcx,rax
  409917:	call   0x4081a8
  40991c:	jmp    0x4094c2
  409921:	or     rcx,0xffffffffffffffff
  409925:	mov    rdi,r13
  409928:	repnz scas al,BYTE PTR es:[rdi]
  40992a:	not    rcx
  40992d:	mov    WORD PTR [r13+rcx*1-0x1],0xa
  409935:	jmp    0x409945
  409937:	nop    WORD PTR [rax+rax*1+0x0]
  409940:	cmp    eax,0xa
  409943:	je     0x409952
  409945:	mov    rcx,rsi
  409948:	call   0x4081d0
  40994d:	cmp    eax,0xffffffff
  409950:	jne    0x409940
  409952:	mov    r13,QWORD PTR [rsp+0x80]
  40995a:	jmp    0x408bcf
  40995f:	call   QWORD PTR [rip+0x7b7b]        # 0x4114e0
  409965:	cmp    DWORD PTR [rip+0x57ac],0x0        # 0x40f118
  40996c:	mov    rsi,rax
  40996f:	lea    rax,[rip+0x19a2]        # 0x40b318
  409976:	mov    QWORD PTR [rbx],rax
  409979:	je     0x408b1d
  40997f:	call   QWORD PTR [rip+0x7b5b]        # 0x4114e0
  409985:	mov    rcx,rax
  409988:	call   0x408100
  40998d:	mov    edx,0x8000
  409992:	mov    ecx,eax
  409994:	call   0x408108
  409999:	jmp    0x408b1d
  40999e:	lea    rdx,[rip+0x19fd]        # 0x40b3a2
  4099a5:	or     ecx,0xffffffff
  4099a8:	call   0x401f48
  4099ad:	jmp    0x408b91
  4099b2:	lea    r13,[rsp+0x90]
  4099ba:	call   rdi
  4099bc:	movsd  xmm1,QWORD PTR [rsp+0x80]
  4099c5:	mov    r9d,0x57
  4099cb:	mov    r8d,0x45
  4099d1:	mov    rbp,rax
  4099d4:	mov    rcx,r13
  4099d7:	call   0x401ec8
  4099dc:	lea    rdx,[rbp+0x30]
  4099e0:	mov    rcx,rax
  4099e3:	call   0x4081a8
  4099e8:	mov    ecx,0x9
  4099ed:	call   0x408168
  4099f2:	call   rdi
  4099f4:	mov    r9d,0x53
  4099fa:	mov    rbp,rax
  4099fd:	mov    r8d,0x4e
  409a03:	movsd  xmm1,QWORD PTR [rsp+0x88]
  409a0c:	jmp    0x409908
  409a11:	lea    rax,[rip+0x15e8]        # 0x40b000
  409a18:	mov    QWORD PTR [rip+0x56c9],rax        # 0x40f0e8
  409a1f:	jmp    0x408b3f
  409a24:	lea    rcx,[rip+0x1695]        # 0x40b0c0
  409a2b:	call   0x408160
  409a30:	call   0x401f20
  409a35:	mov    rbx,rax
  409a38:	jmp    0x409a3e
  409a3a:	add    rbx,0x20
  409a3e:	mov    rdx,QWORD PTR [rbx]
  409a41:	test   rdx,rdx
  409a44:	je     0x40874a
  409a4a:	mov    r8,QWORD PTR [rbx+0x10]
  409a4e:	mov    r9,QWORD PTR [rbx+0x8]
  409a52:	lea    rcx,[rip+0x16b5]        # 0x40b10e
  409a59:	call   0x408170
  409a5e:	mov    r8,QWORD PTR [rbx+0x18]
  409a62:	test   r8,r8
  409a65:	je     0x409a3a
  409a67:	cmp    BYTE PTR [r8],0x0
  409a6b:	je     0x409a3a
  409a6d:	lea    rdx,[rip+0x16ac]        # 0x40b120
  409a74:	lea    rcx,[rip+0x16a7]        # 0x40b122
  409a7b:	call   0x408170
  409a80:	jmp    0x409a3a
  409a82:	mov    rdx,QWORD PTR [rax+r12*8]
  409a86:	lea    r8,[rip+0x1896]        # 0x40b323
  409a8d:	mov    ecx,0xfffffffe
  409a92:	call   0x401f48
  409a97:	jmp    0x409273
  409a9c:	call   0x401f18
  409aa1:	mov    rbx,rax
  409aa4:	jmp    0x409ac7
  409aa6:	mov    rax,QWORD PTR [rbx+0x18]
  409aaa:	mov    r9,QWORD PTR [rbx+0x10]
  409aae:	lea    rcx,[rip+0x15e3]        # 0x40b098
  409ab5:	mov    r8,QWORD PTR [rbx+0x8]
  409ab9:	add    rbx,0x20
  409abd:	mov    QWORD PTR [rsp+0x20],rax
  409ac2:	call   0x408170
  409ac7:	mov    rdx,QWORD PTR [rbx]
  409aca:	test   rdx,rdx
  409acd:	jne    0x409aa6
  409acf:	jmp    0x40874a
  409ad4:	call   0x401f00
  409ad9:	mov    rbx,rax
  409adc:	jmp    0x409af6
  409ade:	mov    r9,QWORD PTR [rbx+0x10]
  409ae2:	mov    r8,QWORD PTR [rbx+0x8]
  409ae6:	lea    rcx,[rip+0x15bf]        # 0x40b0ac
  409aed:	add    rbx,0x18
  409af1:	call   0x408170
  409af6:	mov    rdx,QWORD PTR [rbx]
  409af9:	test   rdx,rdx
  409afc:	jne    0x409ade
  409afe:	jmp    0x40874a
  409b03:	mov    rcx,QWORD PTR [rax]
  409b06:	call   0x408160
  409b0b:	jmp    0x408961
  409b10:	call   QWORD PTR [rip+0x79ca]        # 0x4114e0
  409b16:	lea    rcx,[rax+0x30]
  409b1a:	call   0x408100
  409b1f:	mov    edx,0x8000
  409b24:	mov    ecx,eax
  409b26:	call   0x408108
  409b2b:	jmp    0x408ab1
  409b30:	mov    rax,QWORD PTR [rsi+0x10]
  409b34:	lea    rcx,[rip+0x1553]        # 0x40b08e
  409b3b:	mov    rdx,rbx
  409b3e:	mov    r8,QWORD PTR [rax]
  409b41:	call   0x408170
  409b46:	jmp    0x40874a
  409b4b:	lea    rax,[rip+0x1506]        # 0x40b058
  409b52:	mov    DWORD PTR [rsp+0x48],0x1
  409b5a:	mov    QWORD PTR [r14],rax
  409b5d:	jmp    0x40848c
  409b62:	mov    rax,QWORD PTR [rip+0x26f7]        # 0x40c260
  409b69:	mov    ecx,DWORD PTR [rax]
  409b6b:	call   0x401ed0
  409b70:	lea    rdx,[rip+0x1691]        # 0x40b208
  409b77:	mov    r8,rax
  409b7a:	mov    ecx,0x3
  409b7f:	call   0x401f48
  409b84:	jmp    0x4084c1
  409b89:	lea    rdx,[rip+0x16e0]        # 0x40b270
  409b90:	mov    ecx,0x3
  409b95:	call   0x401f48
  409b9a:	jmp    0x4084f4
  409b9f:	lea    rax,[rip+0x176d]        # 0x40b313
  409ba6:	mov    QWORD PTR [rip+0x553b],rax        # 0x40f0e8
  409bad:	jmp    0x408aa4
  409bb2:	lea    rcx,[rip+0x1747]        # 0x40b300
  409bb9:	call   0x408170
  409bbe:	mov    rax,QWORD PTR [rip+0x556b]        # 0x40f130
  409bc5:	lea    rcx,[rip+0x1434]        # 0x40b000
  409bcc:	movsd  xmm0,QWORD PTR [rax+0x58]
  409bd1:	mov    rax,QWORD PTR [rip+0x5510]        # 0x40f0e8
  409bd8:	movapd xmm1,xmm0
  409bdc:	movq   rdx,xmm0
  409be1:	test   rax,rax
  409be4:	cmovne rcx,rax
  409be8:	call   0x408170
  409bed:	mov    ecx,0xa
  409bf2:	call   0x408168
  409bf7:	jmp    0x408a7b
  409bfc:	lea    rdx,[rip+0x1635]        # 0x40b238
  409c03:	mov    ecx,0x3
  409c08:	call   0x401f48
  409c0d:	jmp    0x40874a
  409c12:	call   0x401f08
  409c17:	mov    rbx,rax
  409c1a:	call   QWORD PTR [rip+0x78c0]        # 0x4114e0
  409c20:	lea    rdx,[rip+0x13e9]        # 0x40b010
  409c27:	lea    rcx,[rax+0x60]
  409c2b:	mov    r9,r12
  409c2e:	mov    r8,rbx
  409c31:	call   0x4081b8
  409c36:	xor    ecx,ecx
  409c38:	call   0x4081e0
  409c3d:	nop
  409c3e:	nop
  409c3f:	nop
  409c40:	(bad)  
  409c41:	(bad)  
  409c42:	(bad)  
  409c43:	(bad)  
  409c44:	(bad)  
  409c45:	(bad)  
  409c46:	(bad)  
  409c47:	inc    DWORD PTR [rax]
  409c49:	add    BYTE PTR [rax],al
  409c4b:	add    BYTE PTR [rax],al
  409c4d:	add    BYTE PTR [rax],al
  409c4f:	add    bh,bh
  409c51:	(bad)  
  409c52:	(bad)  
  409c53:	(bad)  
  409c54:	(bad)  
  409c55:	(bad)  
  409c56:	(bad)  
  409c57:	inc    DWORD PTR [rax]
  409c59:	add    BYTE PTR [rax],al
  409c5b:	add    BYTE PTR [rax],al
  409c5d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000040a000 <.data>:
  40a000:	or     al,BYTE PTR [rax]
	...
  40a00e:	add    BYTE PTR [rax],al
  40a010:	xor    BYTE PTR [rdi+0x40],dh
  40a016:	add    BYTE PTR [rax],al
  40a018:	and    eax,DWORD PTR [rax]
  40a01a:	add    BYTE PTR [rax],al
  40a01c:	add    BYTE PTR [rax],al
  40a01e:	add    BYTE PTR [rax],al
  40a020:	pop    rax
  40a021:	pushf  
  40a022:	add    BYTE PTR [rax],al
	...
  40a02d:	add    BYTE PTR [rax],al
  40a02f:	add    bh,bh
  40a031:	(bad)  
  40a032:	(bad)  
  40a033:	(bad)  
  40a034:	(bad)  
  40a035:	(bad)  
  40a036:	(bad)  
  40a037:	inc    DWORD PTR [rax]
  40a039:	add    BYTE PTR [rax],al
  40a03b:	add    BYTE PTR [rax],al
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    bh,bh
	...
  40a04d:	add    BYTE PTR [rax],al
  40a04f:	add    BYTE PTR [rdx],al
	...
  40a05d:	add    BYTE PTR [rax],al
  40a05f:	add    BYTE PTR [rip+0xffffffffce000000],dh        # 0xffffffffce40a065
  40a065:	sti    
  40a066:	(bad)  
  40a067:	dec    ebx
  40a069:	add    eax,DWORD PTR [rax]
  40a06b:	add    BYTE PTR [rcx],al
  40a06d:	add    BYTE PTR [rax],al
  40a06f:	add    BYTE PTR [rax],al
  40a071:	add    BYTE PTR [rax],al
  40a073:	add    BYTE PTR [rsi],cl
	...
  40a07d:	add    BYTE PTR [rax],al
  40a07f:	add    bh,bh
  40a081:	(bad)  
  40a082:	(bad)  
  40a083:	inc    DWORD PTR [rax]
	...
  40a08d:	add    BYTE PTR [rax],al
  40a08f:	add    BYTE PTR [rax-0x5],al
  40a092:	add    BYTE PTR [rax],al
	...
  40a09d:	add    BYTE PTR [rax],al
  40a09f:	add    BYTE PTR [rax-0x7e],dh
  40a0a2:	add    BYTE PTR [rax],al
  40a0a5:	add    BYTE PTR [rax],al
  40a0a7:	add    BYTE PTR [rax+0x4082],al
  40a0ad:	add    BYTE PTR [rax],al
  40a0af:	add    BYTE PTR [rdx],dh
  40a0b1:	movabs ds:0x2b992ddf,al
  40a0ba:	add    BYTE PTR [rax],al
  40a0bc:	add    BYTE PTR [rax],al
  40a0be:	add    BYTE PTR [rax],al
  40a0c0:	int    0x5d
  40a0c2:	and    dl,dl
  40a0c4:	data16 (bad) 
  40a0c6:	(bad)  
  40a0c7:	inc    DWORD PTR [rax]
  40a0c9:	add    BYTE PTR [rax],al
  40a0cb:	add    BYTE PTR [rax],al
  40a0cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000040b000 <.rdata>:
  40b000:	and    eax,0x66332e
  40b005:	or     al,BYTE PTR [rax]
  40b007:	imul   ebp,DWORD PTR [rsi+0x76],0x0
  40b00e:	add    BYTE PTR [rax],al
  40b010:	and    eax,0x73750a73
  40b015:	(bad)  
  40b016:	cmp    ah,BYTE PTR gs:[eax]
  40b01a:	and    eax,0x205b2073
  40b01f:	sub    eax,0x45654362
  40b024:	imul   cx,WORD PTR [rcx+0x6c],0x726f
  40b02a:	ins    DWORD PTR es:[rdi],dx
  40b02b:	jae    0x40b080
  40b02d:	je     0x40b083
  40b02f:	jbe    0x40b087
  40b031:	ja     0x40b08a
  40b033:	and    BYTE PTR [rbx+0x61],bl
  40b036:	jb     0x40b09f
  40b038:	jae    0x40b097
  40b03a:	and    BYTE PTR [rbp+0x20],bl
  40b03d:	pop    rbx
  40b03e:	and    BYTE PTR [rbx],ch
  40b040:	outs   dx,DWORD PTR ds:[rsi]
  40b041:	jo     0x40b0b7
  40b043:	jae    0x40b0a0
  40b045:	cmp    eax,0x5d677261
  40b04a:	and    BYTE PTR [rbp+0x20],bl
  40b04d:	pop    rbx
  40b04e:	and    BYTE PTR [rsi+0x69],ah
  40b051:	ins    BYTE PTR es:[rdi],dx
  40b052:	gs jae 0x40b075
  40b055:	pop    rbp
  40b056:	or     al,BYTE PTR [rax]
  40b058:	sub    eax,0x73696d00
  40b05d:	jae    0x40b0c8
  40b05f:	outs   dx,BYTE PTR ds:[rsi]
  40b060:	and    BYTE PTR [eip+0x6f632074],ch        # 0x6fa3d0db
  40b067:	ins    BYTE PTR es:[rdi],dx
  40b068:	and    BYTE PTR cs:[rcx],dh
  40b06b:	and    BYTE PTR [rcx+riz*2+0x67],dh
  40b06f:	add    BYTE PTR [rcx+riz*2+0x74],ch
  40b073:	ins    BYTE PTR es:[rdi],dx
  40b074:	outs   dx,DWORD PTR ds:[rsi]
  40b075:	outs   dx,BYTE PTR ds:[rsi]
  40b076:	add    BYTE PTR [edi+ebp*2+0x6e],ch
  40b07b:	ins    BYTE PTR es:[edi],dx
  40b07d:	(bad)  
  40b07e:	je     0x40b080
  40b080:	outs   dx,DWORD PTR gs:[esi]
  40b083:	movsxd esp,DWORD PTR [rbp+0x6e]
  40b086:	je     0x40b088
  40b088:	and    eax,0x203a2073
  40b08d:	add    BYTE PTR [rip+0x3a207339],ah        # 0x3a6123cc
  40b093:	and    BYTE PTR [rip+0x25000a73],ah        # 0x2540bb0c
  40b099:	cmp    DWORD PTR [rbx+0x20],esi
  40b09c:	and    eax,0x7336312d
  40b0a1:	and    BYTE PTR [rip+0x7336312d],ah        # 0x7376e1d4
  40b0a7:	and    BYTE PTR [rip+0x25000a73],ah        # 0x2540bb20
  40b0ad:	xor    DWORD PTR [rdx],esi
  40b0af:	jae    0x40b0d1
  40b0b1:	and    eax,0x7330322d
  40b0b6:	and    BYTE PTR [rip+0xa73],ah        # 0x40bb2f
  40b0bc:	add    BYTE PTR [rax],al
  40b0be:	add    BYTE PTR [rax],al
  40b0c0:	pop    rdi
  40b0c1:	pop    rdi
  40b0c2:	fs (bad) 
  40b0c4:	je     0x40b13b
  40b0c6:	ins    DWORD PTR es:[rdi],dx
  40b0c7:	pop    rdi
  40b0c8:	imul   esp,DWORD PTR [rdi+rbx*2+0x5f],0x655f5f20
  40b0d0:	ins    BYTE PTR es:[rdi],dx
  40b0d1:	ins    BYTE PTR es:[rdi],dx
  40b0d2:	imul   esi,DWORD PTR [rax+0x73],0x5f5f5f65
  40b0d9:	and    BYTE PTR [rdi+0x5f],bl
  40b0dc:	fs imul bp,WORD PTR gs:[rsi+0x69],0x6974
  40b0e4:	outs   dx,DWORD PTR ds:[rsi]
  40b0e5:	outs   dx,BYTE PTR ds:[rsi]
  40b0e6:	(bad)  
  40b0e7:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40b0ea:	ins    DWORD PTR es:[rdi],dx
  40b0eb:	outs   dx,BYTE PTR gs:[rsi]
  40b0ed:	je     0x40b162
  40b0ef:	pop    rdi
  40b0f0:	pop    rdi
  40b0f1:	pop    rdi
  40b0f2:	pop    rdi
  40b0f3:	pop    rdi
  40b0f4:	pop    rdi
  40b0f5:	pop    rdi
  40b0f6:	pop    rdi
  40b0f7:	pop    rdi
  40b0f8:	pop    rdi
  40b0f9:	pop    rdi
  40b0fa:	pop    rdi
  40b0fb:	pop    rdi
  40b0fc:	pop    rdi
  40b0fd:	pop    rdi
  40b0fe:	pop    rdi
  40b0ff:	pop    rdi
  40b100:	pop    rdi
  40b101:	pop    rdi
  40b102:	pop    rdi
  40b103:	pop    rdi
  40b104:	pop    rdi
  40b105:	pop    rdi
  40b106:	pop    rdi
  40b107:	pop    rdi
  40b108:	pop    rdi
  40b109:	pop    rdi
  40b10a:	pop    rdi
  40b10b:	pop    rdi
  40b10c:	pop    rdi
  40b10d:	add    BYTE PTR [rip+0x20733231],ah        # 0x20b3e344
  40b113:	and    eax,0x7332312d
  40b118:	and    BYTE PTR [rip+0x7330332d],ah        # 0x7370e44b
  40b11e:	or     al,BYTE PTR [rax]
  40b120:	and    BYTE PTR [rax],al
  40b122:	and    eax,0x20733532
  40b127:	and    eax,0x69000a73
  40b12c:	outs   dx,BYTE PTR ds:[rsi]
  40b12d:	jbe    0x40b190
  40b12f:	ins    BYTE PTR es:[rdi],dx
  40b130:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x20747369
  40b138:	outs   dx,DWORD PTR ds:[rsi]
  40b139:	jo     0x40b1af
  40b13b:	imul   ebp,DWORD PTR [rdi+0x6e],0x256c203a
  40b142:	movsxd eax,DWORD PTR [rax]
  40b144:	ins    DWORD PTR es:[rdi],dx
  40b145:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  40b14c:	(bad)  
  40b14d:	jb     0x40b1b6
  40b14f:	jne    0x40b1be
  40b151:	outs   dx,BYTE PTR gs:[rsi]
  40b153:	je     0x40b175
  40b155:	outs   dx,WORD PTR ds:[rsi]
  40b157:	jb     0x40b179
  40b159:	sub    eax,0x31006325
  40b15e:	(bad)  
  40b15f:	add    BYTE PTR [rcx],dh
  40b161:	cmp    al,BYTE PTR [rax]
  40b163:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  40b16a:	and    BYTE PTR [rbx+0x63],dh
  40b16d:	(bad)  
  40b16e:	ins    BYTE PTR es:[rdi],dx
  40b16f:	and    BYTE PTR gs:[rcx+0x72],ah
  40b173:	addr32 jne 0x40b1e3
  40b176:	outs   dx,BYTE PTR gs:[rsi]
  40b178:	je     0x40b17a
  40b17a:	add    BYTE PTR [rax],al
  40b17c:	add    BYTE PTR [rax],al
  40b17e:	add    BYTE PTR [rax],al
  40b180:	sub    eax,0x72612057
  40b185:	addr32 jne 0x40b1f5
  40b188:	outs   dx,BYTE PTR gs:[rsi]
  40b18a:	je     0x40b1ac
  40b18c:	ins    DWORD PTR es:[rdi],dx
  40b18d:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  40b194:	outs   dx,DWORD PTR ds:[rsi]
  40b195:	jb     0x40b1b7
  40b197:	outs   dx,BYTE PTR ds:[rsi]
  40b198:	outs   dx,DWORD PTR ds:[rsi]
  40b199:	outs   dx,BYTE PTR ds:[rsi]
  40b19a:	sub    eax,0x69676964
  40b19f:	je     0x40b1a1
  40b1a1:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  40b1a8:	and    BYTE PTR [rdi+0x70],ch
  40b1ab:	je     0x40b216
  40b1ad:	outs   dx,DWORD PTR ds:[rsi]
  40b1ae:	outs   dx,BYTE PTR ds:[rsi]
  40b1af:	cmp    ah,BYTE PTR [rax]
  40b1b1:	sub    eax,0x6f006325
  40b1b6:	jbe    0x40b21d
  40b1b8:	jb     0x40b220
  40b1ba:	ins    BYTE PTR es:[rdi],dx
  40b1bb:	outs   dx,DWORD PTR ds:[rsi]
  40b1bc:	ja     0x40b223
  40b1be:	and    BYTE PTR fs:[rbx],ch
  40b1c1:	and    BYTE PTR [rcx+0x72],ah
  40b1c4:	addr32 jne 0x40b234
  40b1c7:	outs   dx,BYTE PTR gs:[rsi]
  40b1c9:	je     0x40b1eb
  40b1cb:	je     0x40b22e
  40b1cd:	(bad)  
  40b1ce:	ins    BYTE PTR es:[rdi],dx
  40b1cf:	add    BYTE PTR gs:[rax],al
  40b1d2:	add    BYTE PTR [rax],al
  40b1d4:	add    BYTE PTR [rax],al
  40b1d6:	add    BYTE PTR [rax],al
  40b1d8:	fs (bad) 
  40b1da:	je     0x40b23d
  40b1dc:	and    BYTE PTR [rsi+0x69],ah
  40b1df:	ins    BYTE PTR es:[rdi],dx
  40b1e0:	gs jae 0x40b203
  40b1e3:	ja     0x40b24d
  40b1e5:	outs   dx,BYTE PTR gs:[rsi]
  40b1e7:	and    BYTE PTR [rdi+0x65],ah
  40b1ea:	outs   dx,BYTE PTR ds:[rsi]
  40b1eb:	gs jb  0x40b24f
  40b1ee:	je     0x40b259
  40b1f0:	outs   dx,BYTE PTR ds:[rsi]
  40b1f1:	and    BYTE PTR [ebx+0x68],al
  40b1f5:	gs (bad) 
  40b1f7:	jns    0x40b25c
  40b1f9:	push   0x70207665
  40b1fe:	jb     0x40b26f
  40b200:	push   0x74696269
  40b205:	gs add BYTE PTR fs:[rax+0x72],dh
  40b20a:	outs   dx,DWORD PTR ds:[rsi]
  40b20b:	push   0x65
  40b20d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b211:	outs   dx,BYTE PTR ds:[rsi]
  40b212:	and    BYTE PTR [rcx+0x6e],ch
  40b215:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
  40b21d:	je     0x40b288
  40b21f:	outs   dx,DWORD PTR ds:[rsi]
  40b220:	outs   dx,BYTE PTR ds:[rsi]
  40b221:	and    BYTE PTR [rsi+0x61],ah
  40b224:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x61630a65
  40b22c:	jne    0x40b2a1
  40b22e:	cmp    ah,BYTE PTR gs:[rax]
  40b231:	and    eax,0x73
  40b236:	add    BYTE PTR [rax],al
  40b238:	sub    esi,DWORD PTR [rax+0x72]
  40b23b:	outs   dx,DWORD PTR ds:[rsi]
  40b23c:	push   0x3d
  40b23e:	ins    BYTE PTR es:[rdi],dx
  40b23f:	(bad)  
  40b240:	je     0x40b2ae
  40b242:	outs   dx,DWORD PTR ds:[rsi]
  40b243:	outs   dx,BYTE PTR ds:[rsi]
  40b244:	and    BYTE PTR [ebp+0x6e],dh
  40b248:	jae    0x40b2bf
  40b24a:	imul   esi,DWORD PTR [rcx+riz*2+0x62],0x6620656c
  40b252:	outs   dx,DWORD PTR ds:[rsi]
  40b253:	jb     0x40b275
  40b255:	jne    0x40b2ca
  40b257:	and    BYTE PTR gs:[rdi+0x69],dh
  40b25b:	je     0x40b2c5
  40b25d:	and    BYTE PTR [rax+0x72],dh
  40b260:	outs   dx,DWORD PTR ds:[rsi]
  40b261:	push   0x20
  40b263:	jo     0x40b2d7
  40b265:	outs   dx,DWORD PTR ds:[rsi]
  40b266:	addr32 jb 0x40b2ca
  40b269:	ins    DWORD PTR es:[rdi],dx
  40b26a:	add    BYTE PTR cs:[rax],al
  40b26d:	add    BYTE PTR [rax],al
  40b26f:	add    BYTE PTR [rcx+0x6e],ch
  40b272:	jbe    0x40b2d9
  40b274:	jb     0x40b2e9
  40b276:	and    BYTE PTR gs:[rax+0x72],dh
  40b27a:	outs   dx,DWORD PTR ds:[rsi]
  40b27b:	push   0x65
  40b27d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b281:	outs   dx,BYTE PTR ds:[rsi]
  40b282:	and    BYTE PTR [rsi+0x6f],ch
  40b285:	je     0x40b2a7
  40b287:	(bad)  
  40b288:	jbe    0x40b2eb
  40b28a:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x2300656c
  40b292:	rex.RX imul r13d,DWORD PTR [rsi+0x61],0x6145206c
  40b29a:	jb     0x40b310
  40b29c:	push   0x67696620
  40b2a1:	jne    0x40b315
  40b2a3:	cmp    ah,BYTE PTR gs:[rax]
  40b2a6:	add    BYTE PTR [rbp+0x6c],ah
  40b2a9:	ins    BYTE PTR es:[rdi],dx
  40b2aa:	imul   esi,DWORD PTR [rax+0x73],0xa64696f
  40b2b1:	and    esp,DWORD PTR [rax]
  40b2b3:	and    BYTE PTR [rbp+0x61],cl
  40b2b6:	push   0x6f
  40b2b8:	jb     0x40b2da
  40b2ba:	(bad)  
  40b2bb:	js     0x40b326
  40b2bd:	jae    0x40b2df
  40b2bf:	sub    BYTE PTR [rcx+0x29],ah
  40b2c2:	cmp    ah,BYTE PTR [rax]
  40b2c4:	add    BYTE PTR [rdx],cl
  40b2c6:	and    esp,DWORD PTR [rax]
  40b2c8:	and    BYTE PTR [rcx],dh
  40b2ca:	(bad)  
  40b2cb:	data16 ins BYTE PTR es:[rdi],dx
  40b2cd:	(bad)  
  40b2ce:	je     0x40b344
  40b2d0:	outs   dx,BYTE PTR gs:[rsi]
  40b2d2:	imul   ebp,DWORD PTR [rsi+0x67],0x2e25203a
  40b2d9:	data16 or al,BYTE PTR ss:[rax]
  40b2dd:	add    BYTE PTR [rax],al
  40b2df:	add    BYTE PTR [rbx],ah
  40b2e1:	and    BYTE PTR [rax],ah
  40b2e3:	jae    0x40b356
  40b2e5:	jne    0x40b348
  40b2e7:	jb     0x40b34e
  40b2e9:	and    BYTE PTR fs:[rbp+0x63],ah
  40b2ed:	movsxd esp,DWORD PTR [rbp+0x6e]
  40b2f0:	je     0x40b364
  40b2f2:	imul   esp,DWORD PTR [rbx+0x69],0x203a7974
  40b2f9:	and    eax,0x6632312e
  40b2fe:	or     al,BYTE PTR [rax]
  40b300:	jae    0x40b372
  40b302:	push   0xa657265
  40b307:	and    esp,DWORD PTR [rax]
  40b309:	and    BYTE PTR [rdx+0x61],dl
  40b30c:	imul   esi,DWORD PTR fs:[rbp+0x73],0x2500203a
  40b314:	xor    ah,BYTE PTR cs:[rsi+0x0]
  40b318:	cmp    al,0x73
  40b31a:	je     0x40b380
  40b31c:	imul   ebp,DWORD PTR [rsi+0x3e],0x627200
  40b323:	imul   ebp,DWORD PTR [rsi+0x70],0x66207475
  40b32a:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x69620000
  40b332:	outs   dx,BYTE PTR ds:[rsi]
  40b333:	(bad)  
  40b334:	jb     0x40b3af
  40b336:	and    BYTE PTR [rcx+0x2f],cl
  40b339:	rex.WRXB and BYTE PTR [r14+0x6f],r13b
  40b33d:	je     0x40b35f
  40b33f:	(bad)  
  40b340:	jbe    0x40b3a3
  40b342:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6920656c
  40b34a:	outs   dx,BYTE PTR ds:[rsi]
  40b34b:	and    BYTE PTR [rip+0x706f2056],ch        # 0x70afd3a7
  40b351:	je     0x40b3bc
  40b353:	outs   dx,DWORD PTR ds:[rsi]
  40b354:	outs   dx,BYTE PTR ds:[rsi]
  40b355:	add    BYTE PTR [rax],al
  40b357:	add    BYTE PTR [rcx+0x6e],ch
  40b35a:	jbe    0x40b3c1
  40b35c:	jb     0x40b3d1
  40b35e:	and    BYTE PTR gs:[rsi+0x6f],ah
  40b362:	jb     0x40b384
  40b364:	je     0x40b3ce
  40b366:	imul   esi,DWORD PTR [rbx+0x20],0x6a6f7270
  40b36d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b372:	outs   dx,BYTE PTR ds:[rsi]
  40b373:	and    BYTE PTR [rsi+0x6f],ch
  40b376:	je     0x40b398
  40b378:	(bad)  
  40b379:	jbe    0x40b3dc
  40b37b:	imul   ebp,DWORD PTR [rsi+rbp*1+0xa],0x6e6f6c00
  40b383:	sub    eax,0x2074616c
  40b388:	imul   ebp,DWORD PTR [rsi+0x70],0x63207475
  40b38f:	outs   dx,DWORD PTR ds:[rsi]
  40b390:	outs   dx,BYTE PTR ds:[rsi]
  40b391:	jbe    0x40b3f8
  40b393:	jb     0x40b408
  40b395:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  40b39c:	ins    BYTE PTR es:[rdi],dx
  40b39d:	jne    0x40b411
  40b39f:	or     al,BYTE PTR gs:[rax]
  40b3a2:	data16 (bad) 
  40b3a4:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b3ac:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b3af:	jo     0x40b426
  40b3b1:	je     0x40b418
  40b3b3:	and    BYTE PTR [rsi+0x61],ah
  40b3b6:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  40b3ba:	jae    0x40b3c6
  40b3bc:	or     al,BYTE PTR [rax]
  40b3be:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40b3c0:	outs   dx,BYTE PTR ds:[rsi]
  40b3c1:	imul   esi,DWORD PTR [ebp+esi*2+0x64],0x203a65
  40b3ca:	and    BYTE PTR [rbx+0x20],bl
  40b3cd:	and    eax,0x6731312e
  40b3d2:	and    BYTE PTR [rbp+0xa],bl
  40b3d5:	add    BYTE PTR [rcx+riz*2+0x74],cl
  40b3d9:	imul   esi,DWORD PTR [rbp+rsi*2+0x64],0x20203a65
  40b3e1:	add    BYTE PTR [rbp+0x61],al
  40b3e4:	jae    0x40b45a
  40b3e6:	imul   ebp,DWORD PTR [rsi+0x67],0x29782820
  40b3ed:	cmp    ah,BYTE PTR [rax]
  40b3ef:	and    BYTE PTR [rax],ah
  40b3f1:	add    BYTE PTR [rsi+0x6f],cl
  40b3f4:	jb     0x40b46a
  40b3f6:	push   0x20676e69
  40b3fb:	sub    BYTE PTR [rcx+0x29],bh
  40b3fe:	cmp    ah,BYTE PTR [rax]
  40b400:	and    BYTE PTR [rax],al
  40b402:	add    BYTE PTR [rax],al
  40b404:	add    BYTE PTR [rax],al
  40b406:	add    BYTE PTR [rax],al
  40b408:	rex.WRB
  40b409:	gs jb  0x40b475
  40b40c:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x61637320
  40b414:	ins    BYTE PTR es:[rdi],dx
  40b415:	and    BYTE PTR gs:[rax],ch
  40b418:	push   0x3a632529
  40b41d:	and    BYTE PTR [rip+0x2066382e],ah        # 0x20a6ec51
  40b423:	and    BYTE PTR [rax],ch
  40b425:	and    BYTE PTR [rip+0x2067342e],ah        # 0x20a7e859
  40b42b:	and    eax,0x72652025
  40b430:	jb     0x40b4a1
  40b432:	jb     0x40b454
  40b434:	sub    DWORD PTR [rdx],ecx
  40b436:	add    BYTE PTR [rax],al
  40b438:	push   rax
  40b439:	(bad)  
  40b43a:	jb     0x40b49d
  40b43c:	ins    BYTE PTR es:[rdi],dx
  40b43d:	ins    BYTE PTR es:[rdi],dx
  40b43e:	gs ins BYTE PTR es:[rdi],dx
  40b440:	and    BYTE PTR [rbx+0x63],dh
  40b443:	(bad)  
  40b444:	ins    BYTE PTR es:[rdi],dx
  40b445:	and    BYTE PTR gs:[rax],ch
  40b448:	imul   ebp,DWORD PTR [rcx],0x25
  40b44b:	movsxd edi,DWORD PTR [rdx]
  40b44d:	and    BYTE PTR [rip+0x2066382e],ah        # 0x20a6ec81
  40b453:	and    BYTE PTR [rax],ch
  40b455:	and    BYTE PTR [rip+0x2067342e],ah        # 0x20a7e889
  40b45b:	and    eax,0x72652025
  40b460:	jb     0x40b4d1
  40b462:	jb     0x40b484
  40b464:	sub    DWORD PTR [rdx],ecx
  40b466:	add    BYTE PTR [rax],al
  40b468:	rex.B jb 0x40b4d0
  40b46b:	(bad)  
  40b46c:	ins    BYTE PTR es:[rdi],dx
  40b46d:	and    BYTE PTR [rbx+0x63],dh
  40b470:	(bad)  
  40b471:	ins    BYTE PTR es:[rdi],dx
  40b472:	and    BYTE PTR gs:[rax],ch
  40b475:	jae    0x40b4a0
  40b477:	cmp    ah,BYTE PTR [rax]
  40b479:	and    BYTE PTR [rax],ah
  40b47b:	and    BYTE PTR [rax],ah
  40b47d:	and    eax,0x2066382e
  40b482:	and    BYTE PTR [rax],ch
  40b484:	and    BYTE PTR [rip+0x2067342e],ah        # 0x20a7e8b8
  40b48a:	and    eax,0x72652025
  40b48f:	jb     0x40b500
  40b491:	jb     0x40b4b3
  40b493:	sub    DWORD PTR [rdx],ecx
  40b495:	add    BYTE PTR [rcx+0x6e],al
  40b498:	addr32 jne 0x40b507
  40b49b:	(bad)  
  40b49c:	jb     0x40b4be
  40b49e:	imul   esi,DWORD PTR fs:[rbx+0x74],0x6974726f
  40b4a6:	outs   dx,DWORD PTR ds:[rsi]
  40b4a7:	outs   dx,BYTE PTR ds:[rsi]
  40b4a8:	and    BYTE PTR [rax],ch
  40b4aa:	ja     0x40b4d5
  40b4ac:	cmp    ah,BYTE PTR [rax]
  40b4ae:	and    eax,0xa66332e
  40b4b3:	add    BYTE PTR [rax],al
  40b4b5:	add    BYTE PTR [rax],al
  40b4b7:	add    BYTE PTR [rbp+0x65],cl
  40b4ba:	jb     0x40b525
  40b4bc:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x7261502f
  40b4c4:	(bad)  
  40b4c5:	ins    BYTE PTR es:[rdi],dx
  40b4c6:	ins    BYTE PTR es:[rdi],dx
  40b4c7:	gs ins BYTE PTR es:[rdi],dx
  40b4c9:	and    BYTE PTR [rcx+0x6e],ah
  40b4cc:	ins    BYTE PTR es:[edi],dx
  40b4ce:	cmp    ah,BYTE PTR gs:[rax]
  40b4d1:	and    eax,0xa66352e
  40b4d6:	add    BYTE PTR [rbx+0x6f],al
  40b4d9:	outs   dx,BYTE PTR ds:[rsi]
  40b4da:	jbe    0x40b541
  40b4dc:	jb     0x40b545
  40b4de:	outs   dx,BYTE PTR gs:[rsi]
  40b4e0:	movsxd esp,DWORD PTR [rbp+0x25]
  40b4e3:	movsxd edi,DWORD PTR [rdx]
  40b4e5:	and    BYTE PTR [rax],al
  40b4e7:	and    BYTE PTR [rbx+0x20],bl
  40b4ea:	and    eax,0x2066382e
  40b4ef:	pop    rbp
  40b4f0:	or     al,BYTE PTR [rax]
  40b4f2:	add    BYTE PTR [rax],al
  40b4f4:	add    BYTE PTR [rax],al
  40b4f6:	add    BYTE PTR [rax],al
  40b4f8:	rex.WRB (bad) 
  40b4fa:	js     0x40b529
  40b4fc:	ins    DWORD PTR es:[rdi],dx
  40b4fd:	imul   ebp,DWORD PTR [rsi+0x20],0x73695428
  40b504:	jae    0x40b575
  40b506:	je     0x40b528
  40b508:	(bad)  
  40b509:	js     0x40b574
  40b50b:	jae    0x40b52d
  40b50d:	(bad)  
  40b50e:	sub    eax,0x73202962
  40b513:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b516:	and    BYTE PTR gs:[rbp+0x72],ah
  40b51a:	jb     0x40b58b
  40b51c:	jb     0x40b558
  40b51e:	and    BYTE PTR [rip+0x2066352e],ah        # 0x20a6ea52
  40b524:	and    eax,0xa66352e
  40b529:	or     al,BYTE PTR [rax]
  40b52b:	or     DWORD PTR ds:0x67252067,edi
  40b532:	and    BYTE PTR [rip+0x67252067],ah        # 0x6765d59f
  40b538:	and    BYTE PTR [rip+0x67252067],ah        # 0x6765d5a5
  40b53e:	add    BYTE PTR ds:[rcx],cl
  40b541:	cmp    al,0x2a
  40b543:	and    BYTE PTR [rdx],ch
  40b545:	and    BYTE PTR [rdx],ch
  40b547:	and    BYTE PTR [rdx],ch
  40b549:	and    BYTE PTR [rdx],ch
  40b54b:	and    BYTE PTR [rdx],ch
  40b54d:	add    BYTE PTR ds:[rax],al
  40b550:	xchg   ebx,eax
  40b551:	sar    bh,cl
  40b553:	call   FWORD PTR [rdx-0x30]
  40b556:	(bad)  
  40b557:	call   FWORD PTR [rdx-0x30]
  40b55a:	(bad)  
  40b55b:	call   FWORD PTR [rdx-0x30]
  40b55e:	(bad)  
  40b55f:	call   FWORD PTR [rdx-0x30]
  40b562:	(bad)  
  40b563:	call   FWORD PTR [rdx-0x30]
  40b566:	(bad)  
  40b567:	call   FWORD PTR [rdx-0x30]
  40b56a:	(bad)  
  40b56b:	call   FWORD PTR [rdx-0x30]
  40b56e:	(bad)  
  40b56f:	call   FWORD PTR [rdx-0x30]
  40b572:	(bad)  
  40b573:	call   FWORD PTR [rdx-0x30]
  40b576:	(bad)  
  40b577:	call   FWORD PTR [rdx-0x30]
  40b57a:	(bad)  
  40b57b:	call   FWORD PTR [rdx-0x30]
  40b57e:	(bad)  
  40b57f:	call   FWORD PTR [rdx-0x30]
  40b582:	(bad)  
  40b583:	call   FWORD PTR [rdx-0x30]
  40b586:	(bad)  
  40b587:	call   FWORD PTR [rdx-0x30]
  40b58a:	(bad)  
  40b58b:	call   FWORD PTR [rdx-0x30]
  40b58e:	(bad)  
  40b58f:	call   FWORD PTR [rdx-0x30]
  40b592:	(bad)  
  40b593:	call   FWORD PTR [rdx-0x30]
  40b596:	(bad)  
  40b597:	call   FWORD PTR [rdx-0x30]
  40b59a:	(bad)  
  40b59b:	call   FWORD PTR [rdx-0x30]
  40b59e:	(bad)  
  40b59f:	call   FWORD PTR [rdx-0x30]
  40b5a2:	(bad)  
  40b5a3:	call   FWORD PTR [rdx-0x30]
  40b5a6:	(bad)  
  40b5a7:	call   FWORD PTR [rdx-0x30]
  40b5aa:	(bad)  
  40b5ab:	call   FWORD PTR [rdx-0x30]
  40b5ae:	(bad)  
  40b5af:	call   FWORD PTR [rdx-0x30]
  40b5b2:	(bad)  
  40b5b3:	call   FWORD PTR [rdx-0x30]
  40b5b6:	(bad)  
  40b5b7:	call   FWORD PTR [rdx-0x30]
  40b5ba:	(bad)  
  40b5bb:	call   FWORD PTR [rdx-0x30]
  40b5be:	(bad)  
  40b5bf:	call   FWORD PTR [rdx-0x30]
  40b5c2:	(bad)  
  40b5c3:	call   FWORD PTR [rdx-0x30]
  40b5c6:	(bad)  
  40b5c7:	call   FWORD PTR [rdx-0x30]
  40b5ca:	(bad)  
  40b5cb:	call   FWORD PTR [rdx-0x30]
  40b5ce:	(bad)  
  40b5cf:	call   FWORD PTR [rdx-0x30]
  40b5d2:	(bad)  
  40b5d3:	call   FWORD PTR [rdx-0x30]
  40b5d6:	(bad)  
  40b5d7:	call   FWORD PTR [rdx-0x30]
  40b5da:	(bad)  
  40b5db:	call   FWORD PTR [rdx-0x30]
  40b5de:	(bad)  
  40b5df:	call   FWORD PTR [rdx-0x30]
  40b5e2:	(bad)  
  40b5e3:	call   FWORD PTR [rdx-0x30]
  40b5e6:	(bad)  
  40b5e7:	call   FWORD PTR [rdx-0x30]
  40b5ea:	(bad)  
  40b5eb:	call   FWORD PTR [rdx-0x30]
  40b5ee:	(bad)  
  40b5ef:	call   FWORD PTR [rdx-0x30]
  40b5f2:	(bad)  
  40b5f3:	call   FWORD PTR [rdx-0x30]
  40b5f6:	(bad)  
  40b5f7:	call   FWORD PTR [rdx-0x30]
  40b5fa:	(bad)  
  40b5fb:	call   FWORD PTR [rdx-0x30]
  40b5fe:	(bad)  
  40b5ff:	call   FWORD PTR [rdx-0x30]
  40b602:	(bad)  
  40b603:	call   FWORD PTR [rdx-0x30]
  40b606:	(bad)  
  40b607:	call   FWORD PTR [rdx-0x30]
  40b60a:	(bad)  
  40b60b:	call   FWORD PTR [rdx-0x30]
  40b60e:	(bad)  
  40b60f:	call   FWORD PTR [rdx-0x30]
  40b612:	(bad)  
  40b613:	call   FWORD PTR [rdx-0x30]
  40b616:	(bad)  
  40b617:	call   FWORD PTR [rdx-0x30]
  40b61a:	(bad)  
  40b61b:	call   FWORD PTR [rdx-0x30]
  40b61e:	(bad)  
  40b61f:	call   FWORD PTR [rdx-0x30]
  40b622:	(bad)  
  40b623:	call   FWORD PTR [rdx-0x30]
  40b626:	(bad)  
  40b627:	call   FWORD PTR [rdx-0x30]
  40b62a:	(bad)  
  40b62b:	call   FWORD PTR [rdx-0x30]
  40b62e:	(bad)  
  40b62f:	call   FWORD PTR [rdx-0x30]
  40b632:	(bad)  
  40b633:	call   FWORD PTR [rdx-0x30]
  40b636:	(bad)  
  40b637:	call   FWORD PTR [rdx-0x30]
  40b63a:	(bad)  
  40b63b:	call   FWORD PTR [rdx-0x30]
  40b63e:	(bad)  
  40b63f:	call   FWORD PTR [rdx-0x30]
  40b642:	(bad)  
  40b643:	call   FWORD PTR [rdx-0x30]
  40b646:	(bad)  
  40b647:	call   FWORD PTR [rdx-0x30]
  40b64a:	(bad)  
  40b64b:	call   FWORD PTR [rdx-0x30]
  40b64e:	(bad)  
  40b64f:	call   FWORD PTR [rdx-0x30]
  40b652:	(bad)  
  40b653:	call   FWORD PTR [rdx-0x30]
  40b656:	(bad)  
  40b657:	call   FWORD PTR [rdx-0x30]
  40b65a:	(bad)  
  40b65b:	jmp    QWORD PTR [rip+0x5affffd2]        # 0x5b40b633
  40b661:	sar    bh,1
  40b663:	call   QWORD PTR [rbx]
  40b665:	sar    bh,cl
  40b667:	call   FWORD PTR [rdx-0x30]
  40b66a:	(bad)  
  40b66b:	call   FWORD PTR [rdx-0x30]
  40b66e:	(bad)  
  40b66f:	call   FWORD PTR [rdx-0x30]
  40b672:	(bad)  
  40b673:	jmp    QWORD PTR [rdi-0x2d]
  40b676:	(bad)  
  40b677:	call   FWORD PTR [rdx-0x30]
  40b67a:	(bad)  
  40b67b:	call   FWORD PTR [rdx-0x30]
  40b67e:	(bad)  
  40b67f:	call   FWORD PTR [rdx-0x30]
  40b682:	(bad)  
  40b683:	call   FWORD PTR [rdx-0x30]
  40b686:	(bad)  
  40b687:	call   FWORD PTR [rdx-0x30]
  40b68a:	(bad)  
  40b68b:	call   FWORD PTR [rdx-0x30]
  40b68e:	(bad)  
  40b68f:	call   FWORD PTR [rdx-0x30]
  40b692:	(bad)  
  40b693:	call   FWORD PTR [rdx-0x30]
  40b696:	(bad)  
  40b697:	call   FWORD PTR [rdx-0x30]
  40b69a:	(bad)  
  40b69b:	(bad)  
  40b69c:	ds sar bh,1
  40b69f:	dec    DWORD PTR [rcx-0x2d]
  40b6a2:	(bad)  
  40b6a3:	call   FWORD PTR [rdx-0x30]
  40b6a6:	(bad)  
  40b6a7:	jmp    FWORD PTR [rax+rdx*8]
  40b6aa:	(bad)  
  40b6ab:	(bad)  
  40b6ac:	mov    eax,0x5affffd2
  40b6b1:	sar    bh,1
  40b6b3:	call   FWORD PTR [rdx-0x30]
  40b6b6:	(bad)  
  40b6b7:	call   FWORD PTR [rdx-0x30]
  40b6ba:	(bad)  
  40b6bb:	call   FWORD PTR [rdx-0x30]
  40b6be:	(bad)  
  40b6bf:	call   FWORD PTR [rdx-0x30]
  40b6c2:	(bad)  
  40b6c3:	call   FWORD PTR [rdx-0x30]
  40b6c6:	(bad)  
  40b6c7:	call   FWORD PTR [rdx-0x30]
  40b6ca:	(bad)  
  40b6cb:	call   FWORD PTR [rdx-0x30]
  40b6ce:	(bad)  
  40b6cf:	call   FWORD PTR [rdx-0x30]
  40b6d2:	(bad)  
  40b6d3:	call   FWORD PTR [rdx-0x30]
  40b6d6:	(bad)  
  40b6d7:	dec    DWORD PTR [rdi]
  40b6d9:	sar    edi,cl
  40b6db:	call   FWORD PTR [rdx-0x30]
  40b6de:	(bad)  
  40b6df:	call   FWORD PTR [rdx-0x30]
  40b6e2:	(bad)  
  40b6e3:	(bad)  
  40b6e4:	in     eax,dx
  40b6e5:	sar    bh,cl
  40b6e7:	jmp    FWORD PTR [rbx]
  40b6e9:	sar    edi,cl
  40b6eb:	call   FWORD PTR [rdx-0x30]
  40b6ee:	(bad)  
  40b6ef:	call   FWORD PTR [rdx-0x30]
  40b6f2:	(bad)  
  40b6f3:	inc    DWORD PTR [rcx]
  40b6f5:	sar    bh,cl
  40b6f7:	call   FWORD PTR [rdx-0x30]
  40b6fa:	(bad)  
  40b6fb:	call   FWORD PTR [rdx-0x30]
  40b6fe:	(bad)  
  40b6ff:	jmp    QWORD PTR [rcx+0x6ffffd1]
  40b705:	sar    edi,1
  40b707:	call   FWORD PTR [rdx-0x30]
  40b70a:	(bad)  
  40b70b:	push   rsp
  40b70d:	sar    bh,1
  40b70f:	call   FWORD PTR [rdx-0x30]
  40b712:	(bad)  
  40b713:	call   FWORD PTR [rdx-0x30]
  40b716:	(bad)  
  40b717:	jmp    rdx
  40b719:	sar    bh,1
  40b71b:	call   rax
  40b71d:	sar    bh,1
  40b71f:	push   QWORD PTR [rax+rdx*8-0x2fa50001]
  40b726:	(bad)  
  40b727:	jmp    QWORD PTR [rax+rdx*8-0x2d470001]
  40b72e:	(bad)  
  40b72f:	jmp    FWORD PTR [rdx]
  40b731:	or     DWORD PTR [rdx],ebp
  40b733:	add    BYTE PTR [rax],al
  40b735:	add    BYTE PTR [rax],al
  40b737:	add    bh,bh
  40b739:	(bad)  
  40b73a:	(bad)  
  40b73b:	(bad)  
  40b73c:	(bad)  
  40b73d:	(bad)  
  40b73e:	out    dx,eax
  40b73f:	jg     0x40b741
  40b741:	add    BYTE PTR [rax],al
  40b743:	add    BYTE PTR [rax],al
  40b745:	add    al,dh
  40b747:	(bad)  
  40b748:	clc    
  40b749:	shl    DWORD PTR [rbx+0x1a],0xdc
  40b74d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40b74e:	rex.WR
  40b74f:	add    BYTE PTR [rax],al
  40b752:	add    BYTE PTR [rax],al
  40b754:	add    BYTE PTR [rax],al
  40b756:	pop    rcx
  40b757:	add    BYTE PTR [rax],al
  40b75a:	add    BYTE PTR [rax],al
  40b75c:	add    BYTE PTR [rax],al
  40b75e:	lock jg 0x40b7b1
  40b761:	outs   dx,DWORD PTR ds:[rsi]
  40b762:	ja     0x40b7c9
  40b764:	jb     0x40b766
  40b766:	rex.XB push 0x73796265
  40b76c:	push   0x2c007665
  40b771:	push   rax
  40b772:	add    BYTE PTR [rbx],ah
  40b774:	jo     0x40b7e8
  40b776:	outs   dx,DWORD PTR ds:[rsi]
  40b777:	push   0x5f
  40b779:	and    eax,0x20230a73
  40b77e:	and    BYTE PTR [rax],ah
  40b780:	and    BYTE PTR [rdx+0x75],dh
  40b783:	outs   dx,BYTE PTR ds:[rsi]
  40b784:	sub    eax,0x656e696c
  40b789:	cmp    cl,BYTE PTR [rdx]
  40b78b:	add    BYTE PTR [rax],ah
  40b78d:	and    eax,0x6e2573
  40b792:	and    esp,DWORD PTR [rax]
  40b794:	jo     0x40b808
  40b796:	outs   dx,DWORD PTR ds:[rsi]
  40b797:	push   0x65
  40b799:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b79d:	outs   dx,BYTE PTR ds:[rsi]
  40b79e:	and    BYTE PTR [rax+0x61],dh
  40b7a1:	jb     0x40b804
  40b7a3:	ins    DWORD PTR es:[rdi],dx
  40b7a4:	gs je  0x40b80c
  40b7a7:	jb     0x40b81c
  40b7a9:	add    BYTE PTR [rcx+0x70],ah
  40b7ac:	jo     0x40b820
  40b7ae:	outs   dx,DWORD PTR ds:[rsi]
  40b7af:	js     0x40b7df
  40b7b1:	and    BYTE PTR [rcx+0x72],ah
  40b7b4:	addr32 jne 0x40b824
  40b7b7:	outs   dx,BYTE PTR gs:[rsi]
  40b7b9:	je     0x40b7db
  40b7bb:	jb     0x40b81e
  40b7bd:	outs   dx,BYTE PTR ds:[rsi]
  40b7be:	and    BYTE PTR gs:[ebp+0x72],ah
  40b7c3:	jb     0x40b834
  40b7c5:	jb     0x40b7c7
  40b7c7:	add    BYTE PTR [rcx+0x70],ah
  40b7ca:	jo     0x40b83e
  40b7cc:	outs   dx,DWORD PTR ds:[rsi]
  40b7cd:	js     0x40b7fd
  40b7cf:	and    BYTE PTR [rdi+0x6f],dh
  40b7d2:	jb     0x40b83f
  40b7d4:	and    BYTE PTR [rcx+rbp*2+0x6d],ah
  40b7d8:	outs   dx,BYTE PTR gs:[rsi]
  40b7da:	jae    0x40b845
  40b7dc:	outs   dx,DWORD PTR ds:[rsi]
  40b7dd:	outs   dx,BYTE PTR ds:[rsi]
  40b7de:	jae    0x40b800
  40b7e0:	sub    BYTE PTR [rip+0x64252064],ah        # 0x6465d84a
  40b7e6:	sub    DWORD PTR [rax],esp
  40b7e8:	je     0x40b859
  40b7ea:	outs   dx,DWORD PTR ds:[rsi]
  40b7eb:	and    BYTE PTR [rbx+0x6d],dh
  40b7ee:	(bad)  
  40b7ef:	ins    BYTE PTR es:[rdi],dx
  40b7f0:	ins    BYTE PTR es:[rdi],dx
  40b7f1:	add    BYTE PTR [rax],al
  40b7f3:	add    BYTE PTR [rax],al
  40b7f5:	add    BYTE PTR [rax],al
  40b7f7:	add    BYTE PTR [rdi+0x65],ah
  40b7fa:	outs   dx,BYTE PTR ds:[rsi]
  40b7fb:	gs jb  0x40b85f
  40b7fe:	je     0x40b869
  40b800:	outs   dx,DWORD PTR ds:[rsi]
  40b801:	outs   dx,BYTE PTR ds:[rsi]
  40b802:	and    BYTE PTR [rdi+0x66],ch
  40b805:	and    BYTE PTR [rcx+0x70],ah
  40b808:	jo     0x40b87c
  40b80a:	outs   dx,DWORD PTR ds:[rsi]
  40b80b:	js     0x40b82d
  40b80d:	data16 (bad) 
  40b80f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6165720a
  40b817:	jae    0x40b888
  40b819:	outs   dx,BYTE PTR ds:[rsi]
  40b81a:	cmp    ah,BYTE PTR [rax]
  40b81c:	and    eax,0x25000a73
  40b821:	movsxd ebp,DWORD PTR ds:0x6732312e
  40b828:	sub    al,0x25
  40b82a:	xor    DWORD PTR cs:[rdx],esi
  40b82d:	addr32 sub al,0x25
  40b830:	xor    DWORD PTR cs:[rdx],esi
  40b833:	addr32 sub al,0x25
  40b836:	xor    DWORD PTR cs:[rdx],esi
  40b839:	addr32 sub al,0x25
  40b83c:	xor    DWORD PTR cs:[rdx],esi
  40b83f:	or     al,BYTE PTR [eax]
  40b842:	and    eax,0x64252e25
  40b847:	data16 add BYTE PTR [rax],al
  40b84a:	add    BYTE PTR [rax],al
  40b84c:	add    BYTE PTR [rax],al
  40b84e:	add    BYTE PTR [rax],al
  40b850:	and    esp,DWORD PTR [rax]
  40b852:	jl     0x40b8c9
  40b854:	sub    al,0x76
  40b856:	jl     0x40b878
  40b858:	jae    0x40b8cf
  40b85a:	ins    DWORD PTR es:[rdi],dx
  40b85b:	jae    0x40b87d
  40b85d:	and    eax,0x67252067
  40b862:	or     ah,BYTE PTR [rbx]
  40b864:	outs   dx,BYTE PTR gs:[rsi]
  40b866:	fs pop rdi
  40b868:	jo     0x40b8dc
  40b86a:	outs   dx,DWORD PTR ds:[rsi]
  40b86b:	push   0x5f
  40b86d:	and    eax,0x6e000a73
  40b872:	jne    0x40b8e0
  40b874:	ins    BYTE PTR es:[rdi],dx
  40b875:	and    BYTE PTR [rdi+0x72],ch
  40b878:	and    BYTE PTR [rcx+0x62],ah
  40b87b:	jae    0x40b8e2
  40b87d:	outs   dx,BYTE PTR ds:[rsi]
  40b87e:	je     0x40b8a0
  40b880:	sub    eax,0x61702054
  40b885:	jb     0x40b8e8
  40b887:	ins    DWORD PTR es:[rdi],dx
  40b888:	gs je  0x40b8f0
  40b88b:	jb     0x40b900
  40b88d:	add    BYTE PTR [rax],al
  40b88f:	add    BYTE PTR [rax],bl
  40b891:	sub    eax,0x21fb5444
  40b896:	sbb    DWORD PTR [rax+0x0],eax
  40b899:	add    BYTE PTR [rax],al
  40b89b:	add    BYTE PTR [rax],al
  40b89d:	add    BYTE PTR [rax+rax*2],ah
  40b8a0:	add    BYTE PTR [rax],al
  40b8a2:	add    BYTE PTR [rax],al
  40b8a4:	add    BYTE PTR [rax],al
  40b8a6:	loopne 0x40b8e7
  40b8a8:	clc    
  40b8a9:	shl    DWORD PTR [rbx+0x1a],0xdc
  40b8ad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40b8ae:	rex.WR
  40b8af:	rex jne 0x40b8ec
  40b8b2:	and    BYTE PTR [rip+0x76000a64],ah        # 0x7640c31c
  40b8b8:	cmp    ah,BYTE PTR [rax]
  40b8ba:	and    eax,0x25000a64
  40b8bf:	and    BYTE PTR fs:[rip+0x6e2564],ah        # 0xaede2a
  40b8c6:	or     ah,BYTE PTR [rax]
  40b8c8:	and    eax,0x6e
  40b8cd:	add    BYTE PTR [rax],al
  40b8cf:	add    BYTE PTR [rax+0x40f6],al
  40b8d5:	add    BYTE PTR [rax],al
  40b8d7:	add    BYTE PTR [rax+0x40f1],al
  40b8dd:	add    BYTE PTR [rax],al
  40b8df:	add    BYTE PTR [rax],ah
  40b8e1:	and    eax,DWORD PTR [rax+0x0]
	...
  40b8f0:	rex.B jb 0x40b95a
  40b8f3:	jne    0x40b962
  40b8f5:	outs   dx,BYTE PTR gs:[rsi]
  40b8f7:	je     0x40b919
  40b8f9:	outs   dx,DWORD PTR fs:[rsi]
  40b8fb:	ins    DWORD PTR es:[rdi],dx
  40b8fc:	(bad)  
  40b8fd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  40b904:	jb     0x40b926
  40b906:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40b90a:	rex.B
  40b90b:	rex.WB
  40b90c:	rex.WRX sub QWORD PTR [rax],r8
  40b90f:	rex.B jb 0x40b979
  40b912:	jne    0x40b981
  40b914:	outs   dx,BYTE PTR gs:[rsi]
  40b916:	je     0x40b938
  40b918:	jae    0x40b983
  40b91a:	outs   dx,BYTE PTR ds:[rsi]
  40b91b:	addr32 jne 0x40b98a
  40b91e:	(bad)  
  40b91f:	jb     0x40b98a
  40b921:	je     0x40b99c
  40b923:	and    BYTE PTR [rax],ch
  40b925:	push   rbx
  40b926:	rex.WB
  40b927:	rex.RXB
  40b928:	rex.WRX sub QWORD PTR [rax],r8
  40b92b:	add    BYTE PTR [rax],al
  40b92d:	add    BYTE PTR [rax],al
  40b92f:	add    BYTE PTR [rdi+0x76],cl
  40b932:	gs jb  0x40b99b
  40b935:	ins    BYTE PTR es:[rdi],dx
  40b936:	outs   dx,DWORD PTR ds:[rsi]
  40b937:	ja     0x40b959
  40b939:	jb     0x40b99c
  40b93b:	outs   dx,BYTE PTR ds:[rsi]
  40b93c:	and    BYTE PTR gs:[ebp+0x72],ah
  40b941:	jb     0x40b9b2
  40b943:	jb     0x40b965
  40b945:	sub    BYTE PTR [rdi+0x56],cl
  40b948:	rex.RB push r10
  40b94a:	rex.RX
  40b94b:	rex.WR
  40b94c:	rex.WRXB push r15
  40b94e:	sub    DWORD PTR [rax],eax
  40b950:	push   rax
  40b951:	(bad)  
  40b952:	jb     0x40b9c8
  40b954:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40b95b:	jae    0x40b97d
  40b95d:	outs   dx,DWORD PTR ds:[rsi]
  40b95e:	data16 and BYTE PTR [rbx+0x69],dh
  40b962:	outs   dx,BYTE PTR ds:[esi]
  40b964:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40b96b:	and    BYTE PTR gs:[rax],ch
  40b96e:	push   rax
  40b96f:	rex.WR
  40b970:	rex.WRXB push r11
  40b972:	push   rbx
  40b973:	sub    DWORD PTR [rax],eax
  40b975:	add    BYTE PTR [rax],al
  40b977:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40b97b:	(bad)  
  40b97c:	ins    BYTE PTR es:[rdi],dx
  40b97d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40b981:	jae    0x40b9a3
  40b983:	outs   dx,DWORD PTR ds:[rsi]
  40b984:	data16 and BYTE PTR [rbx+0x69],dh
  40b988:	outs   dx,BYTE PTR ds:[esi]
  40b98a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40b991:	and    BYTE PTR gs:[rax],ch
  40b994:	push   rsp
  40b995:	rex.WR
  40b996:	rex.WRXB push r11
  40b998:	push   rbx
  40b999:	sub    DWORD PTR [rax],eax
  40b99b:	add    BYTE PTR [rax],al
  40b99d:	add    BYTE PTR [rax],al
  40b99f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40b9a3:	and    BYTE PTR [rdx+0x65],dh
  40b9a6:	jae    0x40ba1d
  40b9a8:	ins    BYTE PTR es:[rdi],dx
  40b9a9:	je     0x40b9cb
  40b9ab:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40b9b2:	jae    0x40ba21
  40b9b4:	(bad)  
  40b9b5:	ins    BYTE PTR es:[rdi],dx
  40b9b6:	ins    BYTE PTR es:[rdi],dx
  40b9b7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40b9bb:	(bad)  
  40b9bc:	and    BYTE PTR gs:[rdx+0x65],dh
  40b9c0:	jo     0x40ba34
  40b9c2:	gs jae 0x40ba2a
  40b9c5:	outs   dx,BYTE PTR ds:[rsi]
  40b9c6:	je     0x40ba2d
  40b9c8:	and    BYTE PTR fs:[rax],ch
  40b9cb:	push   rbp
  40b9cc:	rex.WRX
  40b9cd:	rex.R
  40b9ce:	rex.RB push r10
  40b9d0:	rex.RX
  40b9d1:	rex.WR
  40b9d2:	rex.WRXB push r15
  40b9d4:	sub    DWORD PTR [rax],eax
  40b9d6:	push   rbp
  40b9d7:	outs   dx,BYTE PTR ds:[rsi]
  40b9d8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40b9dc:	outs   dx,BYTE PTR ds:[rsi]
  40b9dd:	and    BYTE PTR [rbp+0x72],ah
  40b9e0:	jb     0x40ba51
  40b9e2:	jb     0x40b9e4
  40b9e4:	add    BYTE PTR [rax],al
  40b9e6:	add    BYTE PTR [rax],al
  40b9e8:	pop    rdi
  40b9e9:	ins    DWORD PTR es:[rdi],dx
  40b9ea:	(bad)  
  40b9eb:	je     0x40ba55
  40b9ed:	gs jb  0x40ba62
  40b9f0:	sub    BYTE PTR [rcx],ch
  40b9f2:	cmp    ah,BYTE PTR [rax]
  40b9f4:	and    eax,0x6e692073
  40b9f9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765e272
  40b9ff:	sub    al,0x20
  40ba01:	and    eax,0x20202967
  40ba06:	sub    BYTE PTR [rdx+0x65],dh
  40ba09:	je     0x40ba81
  40ba0b:	(bad)  
  40ba0c:	ins    BYTE PTR es:[rdi],dx
  40ba0d:	cmp    eax,0xa296725
  40ba12:	add    BYTE PTR [rax],al
  40ba14:	fsubr  QWORD PTR [rdx-0x1]
  40ba17:	call   FWORD PTR [rip+0xffffffff8cffff6a]        # 0xffffffff8d40b987
  40ba1d:	push   0xffffffffffffffff
  40ba1f:	call   FWORD PTR [rdx+rbp*2+0x6aacffff]
  40ba26:	(bad)  
  40ba27:	(bad)  
  40ba28:	mov    esp,0xccffff6a
  40ba2d:	push   0xffffffffffffffff
  40ba2f:	dec    DWORD PTR [rbp+0x69]
  40ba32:	outs   dx,BYTE PTR ds:[rsi]
  40ba33:	addr32 ja 0x40ba63
  40ba36:	ja     0x40ba6e
  40ba38:	xor    al,0x20
  40ba3a:	jb     0x40bab1
  40ba3c:	outs   dx,BYTE PTR ds:[rsi]
  40ba3d:	je     0x40baa8
  40ba3f:	ins    DWORD PTR es:[rdi],dx
  40ba40:	and    BYTE PTR gs:[rsi+0x61],ah
  40ba44:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40ba4c:	add    BYTE PTR [rax],al
  40ba4e:	add    BYTE PTR [rax],al
  40ba50:	rex.B
  40ba51:	fs fs jb 0x40baba
  40ba55:	jae    0x40baca
  40ba57:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8dacd
  40ba5d:	jae    0x40ba7f
  40ba5f:	outs   dx,BYTE PTR ds:[rsi]
  40ba60:	outs   dx,DWORD PTR ds:[rsi]
  40ba61:	and    BYTE PTR [rcx+0x6d],ch
  40ba64:	(bad)  
  40ba65:	addr32 gs sub eax,0x74636573
  40ba6c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  40ba73:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40ba7a:	jne    0x40bae1
  40ba7c:	jb     0x40baf7
  40ba7e:	and    BYTE PTR [rsi+0x61],ah
  40ba81:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  40ba89:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2daf3
  40ba8f:	je     0x40baf6
  40ba91:	jae    0x40bab3
  40ba93:	(bad)  
  40ba94:	je     0x40bab6
  40ba96:	(bad)  
  40ba97:	fs fs jb 0x40bb00
  40ba9b:	jae    0x40bb10
  40ba9d:	and    BYTE PTR [rip+0x70],ah        # 0x40bb13
  40baa3:	add    BYTE PTR [rax],al
  40baa5:	add    BYTE PTR [rax],al
  40baa7:	add    BYTE PTR [rax],ah
  40baa9:	and    BYTE PTR [rsi+0x69],dl
  40baac:	jb     0x40bb22
  40baae:	jne    0x40bb11
  40bab0:	ins    BYTE PTR es:[rdi],dx
  40bab1:	push   rax
  40bab2:	jb     0x40bb23
  40bab4:	je     0x40bb1b
  40bab6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40baba:	(bad)  
  40babb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40bac3:	push   0x646f6320
  40bac8:	and    BYTE PTR gs:[rax],dh
  40bacb:	js     0x40baf2
  40bacd:	js     0x40bacf
  40bacf:	add    BYTE PTR [rax],ah
  40bad1:	and    BYTE PTR [rbp+0x6e],dl
  40bad4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40bad8:	outs   dx,BYTE PTR ds:[rsi]
  40bad9:	and    BYTE PTR [rax+0x73],dh
  40badc:	gs jne 0x40bb43
  40badf:	outs   dx,DWORD PTR ds:[rsi]
  40bae0:	and    BYTE PTR [rdx+0x65],dh
  40bae3:	ins    BYTE PTR es:[rdi],dx
  40bae4:	outs   dx,DWORD PTR ds:[rsi]
  40bae5:	movsxd esp,DWORD PTR [rcx+0x74]
  40bae8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40baef:	je     0x40bb60
  40baf1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40baf4:	and    BYTE PTR [rsi+0x65],dh
  40baf7:	jb     0x40bb6c
  40baf9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40bb00:	or     al,BYTE PTR [rax]
  40bb02:	add    BYTE PTR [rax],al
  40bb04:	add    BYTE PTR [rax],al
  40bb06:	add    BYTE PTR [rax],al
  40bb08:	and    BYTE PTR [rax],ah
  40bb0a:	push   rbp
  40bb0b:	outs   dx,BYTE PTR ds:[rsi]
  40bb0c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40bb10:	outs   dx,BYTE PTR ds:[rsi]
  40bb11:	and    BYTE PTR [rax+0x73],dh
  40bb14:	gs jne 0x40bb7b
  40bb17:	outs   dx,DWORD PTR ds:[rsi]
  40bb18:	and    BYTE PTR [rdx+0x65],dh
  40bb1b:	ins    BYTE PTR es:[rdi],dx
  40bb1c:	outs   dx,DWORD PTR ds:[rsi]
  40bb1d:	movsxd esp,DWORD PTR [rcx+0x74]
  40bb20:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  40bb27:	and    BYTE PTR [rbx+0x69],dh
  40bb2a:	jp     0x40bb91
  40bb2c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4ae996
	...
  40bb3e:	add    BYTE PTR [rax],al
  40bb40:	cs jo  0x40bba7
  40bb43:	(bad)  
  40bb44:	je     0x40bba7
	...
  40bb4e:	add    BYTE PTR [rax],al
  40bb50:	add    BYTE PTR [rdx-0x1],bh
  40bb53:	inc    DWORD PTR [rdx+rdi*2]
  40bb56:	(bad)  
  40bb57:	push   QWORD PTR [rax]
  40bb59:	jp     0x40bb5a
  40bb5b:	inc    DWORD PTR [rcx+0x7a]
  40bb5e:	(bad)  
  40bb5f:	push   rax
  40bb61:	jns    0x40bb62
  40bb63:	push   QWORD PTR [rax+0xffff79]
  40bb69:	jp     0x40bb6a
  40bb6b:	inc    DWORD PTR [rax]
  40bb6d:	add    BYTE PTR [rax],al
  40bb6f:	add    BYTE PTR [rbx+0x71],dh
  40bb72:	jb     0x40bbe8
	...
  40bb7c:	add    BYTE PTR [rax],al
  40bb7e:	clc    
  40bb7f:	inc    DWORD PTR [rax]
  40bb81:	add    BYTE PTR [rax],al
  40bb83:	add    BYTE PTR [rax],al
  40bb85:	add    al,bh
  40bb87:	jg     0x40bb89
  40bb89:	add    BYTE PTR [rax],al
  40bb8b:	add    BYTE PTR [rax],al
  40bb8d:	add    BYTE PTR [rax],al
  40bb8f:	add    BYTE PTR [rax],0x0
  40bb92:	add    BYTE PTR [rax],al
  40bb94:	add    BYTE PTR [rax],al
  40bb96:	lock jg 0x40bb99
  40bb99:	add    BYTE PTR [rax],al
  40bb9b:	add    BYTE PTR [rax],al
  40bb9d:	add    al,dh
  40bb9f:	(bad)  
  40bba0:	jo     0x40bc11
  40bba2:	ja     0x40bba4
	...
  40bbac:	add    BYTE PTR [rax],al
  40bbae:	clc    
  40bbaf:	inc    DWORD PTR [rax]
  40bbb1:	add    BYTE PTR [rax],al
  40bbb3:	add    BYTE PTR [rax],al
  40bbb5:	add    al,bh
  40bbb7:	jg     0x40bbb9
  40bbb9:	add    BYTE PTR [rax],al
  40bbbb:	add    BYTE PTR [rax],al
  40bbbd:	add    BYTE PTR [rax],al
  40bbbf:	add    BYTE PTR [rax],0x0
  40bbc2:	add    BYTE PTR [rax],al
  40bbc4:	add    BYTE PTR [rax],al
  40bbc6:	lock inc DWORD PTR [rax]
  40bbc9:	add    BYTE PTR [rax],al
  40bbcb:	add    BYTE PTR [rax],al
  40bbcd:	add    al,dh
  40bbcf:	jg     0x40bbd1
  40bbd1:	add    BYTE PTR [rax],al
  40bbd3:	add    BYTE PTR [rax],al
  40bbd5:	add    al,dh
  40bbd7:	(bad)  
	...
  40bbe4:	add    BYTE PTR [rax],al
  40bbe6:	add    BYTE PTR [rax+0x0],al
	...
  40bbf4:	add    BYTE PTR [rax],al
  40bbf6:	loopne 0x40bc37
  40bbf8:	add    BYTE PTR [rax],al
  40bbfa:	sar    bh,0xff
  40bbfd:	(bad)  
  40bbfe:	fild   WORD PTR [rcx-0x1]
  40bc01:	(bad)  
  40bc02:	(bad)  
  40bc03:	(bad)  
  40bc04:	(bad)  
  40bc05:	(bad)  
  40bc06:	(bad)  
  40bc07:	jg     0x40bc09
	...
  40bc15:	add    al,ah
  40bc17:	rol    DWORD PTR [rax],0x0
	...
  40bc3e:	add    BYTE PTR [rax],al
  40bc40:	outs   dx,BYTE PTR ds:[rsi]
  40bc41:	data16 add BYTE PTR [rcx+0x6e],ch
  40bc45:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x47006e61
  40bc4d:	xchg   edi,edi
  40bc4f:	jmp    rsp
  40bc51:	mov    bh,bh
  40bc53:	jmp    rsp
  40bc55:	mov    bh,bh
  40bc57:	jmp    rsp
  40bc59:	mov    bh,bh
  40bc5b:	jmp    rsp
  40bc5d:	mov    bh,bh
  40bc5f:	jmp    rsp
  40bc61:	mov    bh,bh
  40bc63:	jmp    rsp
  40bc65:	mov    bh,bh
  40bc67:	jmp    rsp
  40bc69:	mov    bh,bh
  40bc6b:	jmp    rsp
  40bc6d:	mov    bh,bh
  40bc6f:	inc    esp
  40bc71:	mov    bh,bh
  40bc73:	inc    esp
  40bc75:	mov    bh,bh
  40bc77:	inc    esp
  40bc79:	mov    bh,bh
  40bc7b:	inc    esp
  40bc7d:	mov    bh,bh
  40bc7f:	inc    esp
  40bc81:	mov    bh,bh
  40bc83:	jmp    rsp
  40bc85:	mov    bh,bh
  40bc87:	jmp    rsp
  40bc89:	mov    bh,bh
  40bc8b:	jmp    rsp
  40bc8d:	mov    bh,bh
  40bc8f:	jmp    rsp
  40bc91:	mov    bh,bh
  40bc93:	jmp    rsp
  40bc95:	mov    bh,bh
  40bc97:	jmp    rsp
  40bc99:	mov    bh,bh
  40bc9b:	jmp    rsp
  40bc9d:	mov    bh,bh
  40bc9f:	jmp    rsp
  40bca1:	mov    bh,bh
  40bca3:	jmp    rsp
  40bca5:	mov    bh,bh
  40bca7:	jmp    rsp
  40bca9:	mov    bh,bh
  40bcab:	jmp    rsp
  40bcad:	mov    bh,bh
  40bcaf:	jmp    rsp
  40bcb1:	mov    bh,bh
  40bcb3:	jmp    rsp
  40bcb5:	mov    bh,bh
  40bcb7:	jmp    rsp
  40bcb9:	mov    bh,bh
  40bcbb:	jmp    rsp
  40bcbd:	mov    bh,bh
  40bcbf:	jmp    rsp
  40bcc1:	mov    bh,bh
  40bcc3:	jmp    rsp
  40bcc5:	mov    bh,bh
  40bcc7:	jmp    rsp
  40bcc9:	mov    bh,bh
  40bccb:	inc    esp
  40bccd:	mov    bh,bh
  40bccf:	jmp    rsp
  40bcd1:	mov    bh,bh
  40bcd3:	jmp    rsp
  40bcd5:	mov    bh,bh
  40bcd7:	jmp    rsp
  40bcd9:	mov    bh,bh
  40bcdb:	jmp    rsp
  40bcdd:	mov    bh,bh
  40bcdf:	jmp    rsp
  40bce1:	mov    bh,bh
  40bce3:	jmp    rsp
  40bce5:	mov    bh,bh
  40bce7:	jmp    rsp
  40bce9:	mov    bh,bh
  40bceb:	jmp    rsp
  40bced:	mov    bh,bh
  40bcef:	jmp    rsp
  40bcf1:	mov    bh,bh
  40bcf3:	jmp    rsp
  40bcf5:	mov    bh,bh
  40bcf7:	call   QWORD PTR [rax+rcx*4]
  40bcfa:	(bad)  
  40bcfb:	jmp    rsp
  40bcfd:	mov    bh,bh
  40bcff:	inc    DWORD PTR [rdi-0x77]
  40bd02:	(bad)  
  40bd03:	inc    DWORD PTR [rax]
	...
  40bd41:	add    BYTE PTR [rax],al
  40bd43:	add    BYTE PTR [rbx],al
  40bd45:	add    BYTE PTR [rax],al
  40bd47:	add    BYTE PTR [rip+0x7000000],al        # 0x740bd4d
  40bd4d:	add    BYTE PTR [rax],al
  40bd4f:	add    BYTE PTR [rdx],cl
  40bd51:	add    BYTE PTR [rax],al
  40bd53:	add    BYTE PTR [rax+rax*1],cl
  40bd56:	add    BYTE PTR [rax],al
  40bd58:	(bad)  
  40bd59:	add    BYTE PTR [rax],al
  40bd5b:	add    BYTE PTR [rcx],dl
  40bd5d:	add    BYTE PTR [rax],al
  40bd5f:	add    BYTE PTR [rbx],dl
  40bd61:	add    BYTE PTR [rax],al
  40bd63:	add    BYTE PTR [rip+0x18000000],dl        # 0x1840bd69
  40bd69:	add    BYTE PTR [rax],al
  40bd6b:	add    BYTE PTR [rdx],bl
  40bd6d:	add    BYTE PTR [rax],al
  40bd6f:	add    BYTE PTR [rax+rax*1],bl
  40bd72:	add    BYTE PTR [rax],al
  40bd74:	(bad)  
  40bd75:	add    BYTE PTR [rax],al
  40bd77:	add    BYTE PTR [rcx],ah
  40bd79:	add    BYTE PTR [rax],al
  40bd7b:	add    BYTE PTR [rbx],ah
  40bd7d:	add    BYTE PTR [rax],al
  40bd7f:	add    BYTE PTR [rsi],ah
  40bd81:	add    BYTE PTR [rax],al
  40bd83:	add    BYTE PTR [rax],ch
  40bd85:	add    BYTE PTR [rax],al
  40bd87:	add    BYTE PTR [rdx],ch
  40bd89:	add    BYTE PTR [rax],al
  40bd8b:	add    BYTE PTR [rip+0x2f000000],ch        # 0x2f40bd91
  40bd91:	add    BYTE PTR [rax],al
  40bd93:	add    BYTE PTR [rcx],dh
  40bd95:	add    BYTE PTR [rax],al
  40bd97:	add    BYTE PTR [rax+rax*1],dh
	...
  40bda6:	lock (bad) 
	...
  40bdb4:	add    BYTE PTR [rax],al
  40bdb6:	add    BYTE PTR [rax+0x0],al
  40bdb9:	add    BYTE PTR [rax],al
  40bdbb:	add    BYTE PTR [rax],al
  40bdbd:	add    al,ah
  40bdbf:	(bad)  
  40bdc0:	add    BYTE PTR [rax],al
  40bdc2:	sar    bh,0xff
  40bdc5:	(bad)  
  40bdc6:	fild   WORD PTR [rcx+0x16]
  40bdc9:	push   rsi
  40bdca:	out    0x9e,eax
  40bdcc:	scas   eax,DWORD PTR es:[rdi]
  40bdcd:	add    eax,edx
  40bdcf:	cmp    al,0x0
  40bdd1:	add    BYTE PTR [rax],al
  40bdd3:	add    BYTE PTR [rax],al
  40bdd5:	add    BYTE PTR [rax],al
  40bdd7:	add    BYTE PTR [rax],0x0
	...
  40bdfe:	add    BYTE PTR [rax],al
  40be00:	pop    rdi
  40be01:	pop    rdi
  40be02:	jo     0x40be73
  40be04:	ja     0x40be6f
	...
  40be0e:	clc    
  40be0f:	inc    DWORD PTR [rax]
  40be11:	add    BYTE PTR [rax],al
  40be13:	add    BYTE PTR [rax],al
  40be15:	add    al,bh
  40be17:	jg     0x40be19
  40be19:	add    BYTE PTR [rax],al
  40be1b:	add    BYTE PTR [rax],al
  40be1d:	add    al,dh
  40be1f:	(bad)  
  40be20:	add    BYTE PTR [rax],al
  40be22:	add    BYTE PTR [rax],al
  40be24:	add    BYTE PTR [rax],al
  40be26:	add    BYTE PTR [rax+0x0],al
  40be2c:	add    BYTE PTR [rax],al
  40be2e:	lock inc DWORD PTR [rax]
  40be31:	add    BYTE PTR [rax],al
  40be33:	add    BYTE PTR [rax],al
  40be35:	add    al,dh
  40be37:	jg     0x40be39
  40be39:	add    BYTE PTR [rax],al
  40be3b:	add    BYTE PTR [rax],al
  40be3d:	add    BYTE PTR [rax],al
  40be3f:	add    bh,bh
  40be41:	(bad)  
  40be42:	(bad)  
  40be43:	(bad)  
  40be44:	(bad)  
  40be45:	(bad)  
  40be46:	(bad)  
  40be47:	jg     0x40be49
	...
  40be55:	add    BYTE PTR [rax],al
  40be57:	add    BYTE PTR [rax],0x0
  40be5a:	add    BYTE PTR [rax],al
  40be5c:	add    BYTE PTR [rax],al
  40be5e:	add    BYTE PTR [rax],al
  40be60:	rex.B
  40be61:	rex.X
  40be62:	rex.XB
  40be63:	rex.R
  40be64:	rex.RB
  40be65:	rex.RX add BYTE PTR [rcx+0x62],r12b
  40be69:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  40be6d:	add    BYTE PTR [rax],dh
  40be6f:	xor    DWORD PTR [rdx],esi
  40be71:	xor    esi,DWORD PTR [rsi*1+0x39383736]
	...
  40be80:	add    eax,0x19000000
  40be85:	add    BYTE PTR [rax],al
  40be87:	add    BYTE PTR [rbp+0x0],bh
	...
  40bec6:	lock (bad) 
  40bec8:	add    BYTE PTR [rax],al
  40beca:	add    BYTE PTR [rax],al
  40becc:	add    BYTE PTR [rax],al
  40bece:	and    al,0x40
  40bed0:	add    BYTE PTR [rax],al
  40bed2:	add    BYTE PTR [rax],al
  40bed4:	add    BYTE PTR [rax],al
  40bed6:	pop    rcx
  40bed7:	add    BYTE PTR [rax],al
  40beda:	add    BYTE PTR [rax],al
  40bedc:	add    BYTE PTR [rax-0x71],al
  40bedf:	add    BYTE PTR [rax],al
  40bee2:	add    BYTE PTR [rax],al
  40bee4:	add    BYTE PTR [rax+0x40c3],cl
  40beea:	add    BYTE PTR [rax],al
  40beec:	add    BYTE PTR [rdx-0x8],ch
  40beef:	add    BYTE PTR [rax],al
  40bef2:	add    BYTE PTR [rax],al
  40bef4:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  40befc:	rcl    BYTE PTR [rdx],1
  40befe:	movsxd eax,DWORD PTR [rcx+0x0]
  40bf01:	add    BYTE PTR [rax],al
  40bf03:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  40bf0a:	add    BYTE PTR [rax],al
  40bf0c:	gs int 0xcd
  40bf0f:	add    BYTE PTR [r8],al
  40bf12:	add    BYTE PTR [rax],ah
  40bf14:	pop    rdi
  40bf15:	movabs al,ds:0x4876e80000004202
  40bf1e:	(bad)  
  40bf1f:	rex.X add BYTE PTR [rax],al
  40bf22:	add    BYTE PTR [rdx+0x426d1a94],ah
  40bf28:	add    BYTE PTR [rax],al
  40bf2a:	rex in eax,0x9c
  40bf2d:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  40bf33:	(bad)  
  40bf34:	(bad)  
  40bf35:	mov    esp,0x42d6
  40bf3a:	xor    al,0x26
  40bf3c:	cmc    
  40bf3d:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  40bf41:	and    al,0x37
  40bf44:	jns    0x40bf09
  40bf46:	rex.B
  40bf47:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  40bf4e:	jbe    0x40bf93
  40bf50:	add    al,cl
  40bf52:	rex.WRX
  40bf53:	ins    DWORD PTR es:[edi],dx
  40bf55:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  40bf5c:	in     al,0x58
  40bf5e:	loope  0x40bfa3
  40bf60:	rex mov WORD PTR [rbp+0x15af1d78],?
  40bf67:	rex.R push rax
  40bf69:	out    dx,eax
  40bf6a:	loop   0x40bf42
  40bf6c:	in     al,0x1a
  40bf6e:	rex.WXB
  40bf6f:	rex.R xchg edx,eax
  40bf71:	(bad)  
  40bf72:	rex.WRB (bad) 
  40bf74:	iret   
  40bf75:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  40bf7b:	add    BYTE PTR [rax],al
  40bf7d:	add    BYTE PTR [rax],al
  40bf7f:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  40bf86:	pushf  
  40bf87:	cmp    al,0x33
  40bf89:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40bf8a:	test   al,0xd5
  40bf8c:	and    esi,esi
  40bf8e:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd85b43c
  40bf95:	shld   DWORD PTR [rdx],esi,cl
  40bf98:	popf   
  40bf99:	xchg   edi,eax
  40bf9a:	mov    edi,cs
  40bf9c:	or     BYTE PTR [rdx+0x6f43255b],bh
  40bfa2:	lods   al,BYTE PTR ds:[rsi]
  40bfa3:	sub    BYTE PTR fs:[rsi],al
  40bfa6:	enter  0xa,0x0
	...
  40bfbe:	add    BYTE PTR [rax],al
  40bfc0:	add    BYTE PTR [rax-0x3c86c820],al
  40bfc6:	rex.B
  40bfc7:	rex.XB (bad) 
  40bfc9:	outs   dx,BYTE PTR ds:[rsi]
  40bfca:	add    eax,0x93b8b5b5
  40bfcf:	rex.RX cmc 
  40bfd1:	stc    
  40bfd2:	(bad)  
  40bfd3:	jmp    0x4d790edb
  40bfd8:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x7789b90e
  40bfde:	(bad)  
  40bfdf:	pop    rdx
  40bfe0:	cmp    al,0xbf
  40bfe2:	jae    0x40c063
  40bfe4:	fisttp QWORD PTR [rdi+0x15]
  40bfe7:	jne    0x40bfe9
	...
  40bffd:	add    BYTE PTR [rax],al
  40bfff:	add    BYTE PTR [rax],dl
  40c001:	(bad)  
	...
  40c00e:	add    BYTE PTR [rax],al
  40c010:	push   rax
  40c011:	movabs al,ds:0x40
  40c01a:	add    BYTE PTR [rax],al
  40c01c:	add    BYTE PTR [rax],al
  40c01e:	add    BYTE PTR [rax],al
  40c020:	and    BYTE PTR [rax+0x40],0x0
	...
  40c02f:	add    BYTE PTR [rax-0x64],al
  40c032:	add    BYTE PTR [rax],al
	...
  40c03d:	add    BYTE PTR [rax],al
  40c03f:	add    ah,dh
  40c041:	mov    DWORD PTR [rax+0x0],0x0
	...
  40c050:	rol    bh,1
  40c052:	add    BYTE PTR [rax],al
	...
  40c05d:	add    BYTE PTR [rax],al
  40c05f:	add    al,al
  40c061:	mov    edi,0x40
	...
  40c06e:	add    BYTE PTR [rax],al
  40c070:	loopne 0x40c02a
  40c072:	add    BYTE PTR [rax],al
	...
  40c07d:	add    BYTE PTR [rax],al
  40c07f:	add    al,al
  40c081:	add    eax,0x41
	...
  40c092:	add    BYTE PTR [rax],al
	...
  40c09d:	add    BYTE PTR [rax],al
  40c09f:	add    al,bl
  40c0a1:	adc    al,0x41
	...
  40c0af:	add    BYTE PTR [rax],al
  40c0b1:	adc    eax,0x41
	...
  40c0be:	add    BYTE PTR [rax],al
  40c0c0:	and    BYTE PTR [rip+0x41],dl        # 0x40c107
	...
  40c0ce:	add    BYTE PTR [rax],al
  40c0d0:	cmp    BYTE PTR [rip+0x41],dl        # 0x40c117
	...
  40c0de:	add    BYTE PTR [rax],al
  40c0e0:	shl    bh,0x40
	...
  40c0ef:	add    BYTE PTR [rax+0x5],bh
  40c0f2:	add    BYTE PTR [r8],al
	...
  40c0fd:	add    BYTE PTR [rax],al
  40c0ff:	add    BYTE PTR [rax+0x5],dh
  40c102:	add    BYTE PTR [r8],al
	...
  40c10d:	add    BYTE PTR [rax],al
  40c10f:	add    BYTE PTR [rax+0x5],ah
  40c112:	add    BYTE PTR [r8],al
	...
  40c11d:	add    BYTE PTR [rax],al
  40c11f:	add    BYTE PTR [rax+0x5],ch
  40c122:	add    BYTE PTR [r8],al
	...
  40c12d:	add    BYTE PTR [rax],al
  40c12f:	add    al,al
  40c131:	xor    al,0x40
	...
  40c13f:	add    al,al
  40c141:	mov    esi,0x40
	...
  40c14e:	add    BYTE PTR [rax],al
  40c150:	cmp    BYTE PTR [rdi+0x40],0x0
	...
  40c15f:	add    BYTE PTR [rax],al
  40c161:	and    BYTE PTR [rcx+0x0],al
	...
  40c170:	adc    BYTE PTR [rax],ah
  40c172:	add    BYTE PTR [r8],al
	...
  40c17d:	add    BYTE PTR [rax],al
  40c17f:	add    BYTE PTR [rax],bl
  40c181:	and    BYTE PTR [rcx+0x0],al
	...
  40c190:	xor    BYTE PTR [rax],ah
  40c192:	add    BYTE PTR [r8],al
	...
  40c19d:	add    BYTE PTR [rax],al
  40c19f:	add    BYTE PTR [rax-0xf],dl
  40c1a2:	add    BYTE PTR [rax],al
	...
  40c1ad:	add    BYTE PTR [rax],al
  40c1af:	add    BYTE PTR [rax+0x40f7],dl
	...
  40c1bd:	add    BYTE PTR [rax],al
  40c1bf:	add    BYTE PTR [rax+0x402c],dh
	...
  40c1d1:	and    al,0x40
	...
  40c1df:	add    BYTE PTR [rax-0x9],al
  40c1e2:	add    BYTE PTR [rax],al
	...
  40c1ed:	add    BYTE PTR [rax],al
  40c1ef:	add    BYTE PTR [rax+0x1f],dl
  40c1f2:	add    BYTE PTR [rax],al
	...
  40c1fd:	add    BYTE PTR [rax],al
  40c1ff:	add    BYTE PTR [rax+0x13],ah
  40c202:	add    BYTE PTR [r8],al
	...
  40c20d:	add    BYTE PTR [rax],al
  40c20f:	add    BYTE PTR [rax-0x9],dh
  40c212:	add    BYTE PTR [rax],al
	...
  40c21d:	add    BYTE PTR [rax],al
  40c21f:	add    BYTE PTR [rax-0xf],ah
  40c222:	add    BYTE PTR [rax],al
	...
  40c22d:	add    BYTE PTR [rax],al
  40c22f:	add    BYTE PTR [rax-0x9],bl
  40c232:	add    BYTE PTR [rax],al
	...
  40c23d:	add    BYTE PTR [rax],al
  40c23f:	add    BYTE PTR [rdi+rsi*8+0x40],dl
	...
  40c24f:	add    BYTE PTR [rax-0x9],dl
  40c252:	add    BYTE PTR [rax],al
	...
  40c25d:	add    BYTE PTR [rax],al
  40c25f:	add    BYTE PTR [rax+0x13],dh
  40c262:	add    BYTE PTR [r8],al
	...
  40c26d:	add    BYTE PTR [rax],al
  40c26f:	add    BYTE PTR [rax],ch
  40c271:	(bad)  
  40c272:	add    BYTE PTR [rax],al
	...
  40c27d:	add    BYTE PTR [rax],al
  40c27f:	add    al,dh
  40c281:	(bad)  
  40c282:	add    BYTE PTR [rax],al
	...
  40c28d:	add    BYTE PTR [rax],al
  40c28f:	add    BYTE PTR [rdi+0x43],al
  40c292:	rex.XB cmp spl,BYTE PTR [r8]
  40c295:	sub    BYTE PTR [rdi+0x4e],al
  40c298:	push   rbp
  40c299:	sub    DWORD PTR [rax],esp
  40c29b:	xor    al,0x2e
  40c29d:	cmp    DWORD PTR [rsi],ebp
  40c29f:	xor    al,0x0
	...
  40c2ad:	add    BYTE PTR [rax],al
  40c2af:	add    BYTE PTR [rdi+0x43],al
  40c2b2:	rex.XB cmp spl,BYTE PTR [r8]
  40c2b5:	sub    BYTE PTR [rdi+0x4e],al
  40c2b8:	push   rbp
  40c2b9:	sub    DWORD PTR [rax],esp
  40c2bb:	xor    al,0x2e
  40c2bd:	cmp    DWORD PTR [rsi],ebp
  40c2bf:	xor    al,0x0
	...
  40c2cd:	add    BYTE PTR [rax],al
  40c2cf:	add    BYTE PTR [rdi+0x43],al
  40c2d2:	rex.XB cmp spl,BYTE PTR [r8]
  40c2d5:	sub    BYTE PTR [rdi+0x4e],al
  40c2d8:	push   rbp
  40c2d9:	sub    DWORD PTR [rax],esp
  40c2db:	xor    al,0x2e
  40c2dd:	cmp    DWORD PTR [rsi],ebp
  40c2df:	xor    al,0x0
	...
  40c2ed:	add    BYTE PTR [rax],al
  40c2ef:	add    BYTE PTR [rdi+0x43],al
  40c2f2:	rex.XB cmp spl,BYTE PTR [r8]
  40c2f5:	sub    BYTE PTR [rdi+0x4e],al
  40c2f8:	push   rbp
  40c2f9:	sub    DWORD PTR [rax],esp
  40c2fb:	xor    al,0x2e
  40c2fd:	cmp    DWORD PTR [rsi],ebp
  40c2ff:	xor    al,0x0
	...
  40c30d:	add    BYTE PTR [rax],al
  40c30f:	add    BYTE PTR [rdi+0x43],al
  40c312:	rex.XB cmp spl,BYTE PTR [r8]
  40c315:	sub    BYTE PTR [rdi+0x4e],al
  40c318:	push   rbp
  40c319:	sub    DWORD PTR [rax],esp
  40c31b:	xor    al,0x2e
  40c31d:	cmp    DWORD PTR [rsi],ebp
  40c31f:	xor    al,0x0
	...
  40c32d:	add    BYTE PTR [rax],al
  40c32f:	add    BYTE PTR [rdi+0x43],al
  40c332:	rex.XB cmp spl,BYTE PTR [r8]
  40c335:	sub    BYTE PTR [rdi+0x4e],al
  40c338:	push   rbp
  40c339:	sub    DWORD PTR [rax],esp
  40c33b:	xor    al,0x2e
  40c33d:	cmp    DWORD PTR [rsi],ebp
  40c33f:	xor    al,0x0
	...
  40c34d:	add    BYTE PTR [rax],al
  40c34f:	add    BYTE PTR [rdi+0x43],al
  40c352:	rex.XB cmp spl,BYTE PTR [r8]
  40c355:	sub    BYTE PTR [rdi+0x4e],al
  40c358:	push   rbp
  40c359:	sub    DWORD PTR [rax],esp
  40c35b:	xor    al,0x2e
  40c35d:	cmp    DWORD PTR [rsi],ebp
  40c35f:	xor    al,0x0
	...
  40c36d:	add    BYTE PTR [rax],al
  40c36f:	add    BYTE PTR [rdi+0x43],al
  40c372:	rex.XB cmp spl,BYTE PTR [r8]
  40c375:	sub    BYTE PTR [rdi+0x4e],al
  40c378:	push   rbp
  40c379:	sub    DWORD PTR [rax],esp
  40c37b:	xor    al,0x2e
  40c37d:	cmp    DWORD PTR [rsi],ebp
  40c37f:	xor    al,0x0
	...
  40c38d:	add    BYTE PTR [rax],al
  40c38f:	add    BYTE PTR [rdi+0x43],al
  40c392:	rex.XB cmp spl,BYTE PTR [r8]
  40c395:	sub    BYTE PTR [rdi+0x4e],al
  40c398:	push   rbp
  40c399:	sub    DWORD PTR [rax],esp
  40c39b:	xor    al,0x2e
  40c39d:	cmp    DWORD PTR [rsi],ebp
  40c39f:	xor    al,0x0
	...
  40c3ad:	add    BYTE PTR [rax],al
  40c3af:	add    BYTE PTR [rdi+0x43],al
  40c3b2:	rex.XB cmp spl,BYTE PTR [r8]
  40c3b5:	sub    BYTE PTR [rdi+0x4e],al
  40c3b8:	push   rbp
  40c3b9:	sub    DWORD PTR [rax],esp
  40c3bb:	xor    al,0x2e
  40c3bd:	cmp    DWORD PTR [rsi],ebp
  40c3bf:	xor    al,0x0
	...
  40c3cd:	add    BYTE PTR [rax],al
  40c3cf:	add    BYTE PTR [rdi+0x43],al
  40c3d2:	rex.XB cmp spl,BYTE PTR [r8]
  40c3d5:	sub    BYTE PTR [rdi+0x4e],al
  40c3d8:	push   rbp
  40c3d9:	sub    DWORD PTR [rax],esp
  40c3db:	xor    al,0x2e
  40c3dd:	cmp    DWORD PTR [rsi],ebp
  40c3df:	xor    al,0x0
	...
  40c3ed:	add    BYTE PTR [rax],al
  40c3ef:	add    BYTE PTR [rdi+0x43],al
  40c3f2:	rex.XB cmp spl,BYTE PTR [r8]
  40c3f5:	sub    BYTE PTR [rdi+0x4e],al
  40c3f8:	push   rbp
  40c3f9:	sub    DWORD PTR [rax],esp
  40c3fb:	xor    al,0x2e
  40c3fd:	cmp    DWORD PTR [rsi],ebp
  40c3ff:	xor    al,0x0
	...
  40c40d:	add    BYTE PTR [rax],al
  40c40f:	add    BYTE PTR [rdi+0x43],al
  40c412:	rex.XB cmp spl,BYTE PTR [r8]
  40c415:	sub    BYTE PTR [rdi+0x4e],al
  40c418:	push   rbp
  40c419:	sub    DWORD PTR [rax],esp
  40c41b:	xor    al,0x2e
  40c41d:	cmp    DWORD PTR [rsi],ebp
  40c41f:	xor    al,0x0
	...
  40c42d:	add    BYTE PTR [rax],al
  40c42f:	add    BYTE PTR [rdi+0x43],al
  40c432:	rex.XB cmp spl,BYTE PTR [r8]
  40c435:	sub    BYTE PTR [rdi+0x4e],al
  40c438:	push   rbp
  40c439:	sub    DWORD PTR [rax],esp
  40c43b:	xor    al,0x2e
  40c43d:	cmp    DWORD PTR [rsi],ebp
  40c43f:	xor    al,0x0
	...
  40c44d:	add    BYTE PTR [rax],al
  40c44f:	add    BYTE PTR [rdi+0x43],al
  40c452:	rex.XB cmp spl,BYTE PTR [r8]
  40c455:	sub    BYTE PTR [rdi+0x4e],al
  40c458:	push   rbp
  40c459:	sub    DWORD PTR [rax],esp
  40c45b:	xor    al,0x2e
  40c45d:	cmp    DWORD PTR [rsi],ebp
  40c45f:	xor    al,0x0
	...
  40c46d:	add    BYTE PTR [rax],al
  40c46f:	add    BYTE PTR [rdi+0x43],al
  40c472:	rex.XB cmp spl,BYTE PTR [r8]
  40c475:	sub    BYTE PTR [rdi+0x4e],al
  40c478:	push   rbp
  40c479:	sub    DWORD PTR [rax],esp
  40c47b:	xor    al,0x2e
  40c47d:	cmp    DWORD PTR [rsi],ebp
  40c47f:	xor    al,0x0
	...
  40c48d:	add    BYTE PTR [rax],al
  40c48f:	add    BYTE PTR [rdi+0x43],al
  40c492:	rex.XB cmp spl,BYTE PTR [r8]
  40c495:	sub    BYTE PTR [rdi+0x4e],al
  40c498:	push   rbp
  40c499:	sub    DWORD PTR [rax],esp
  40c49b:	xor    al,0x2e
  40c49d:	cmp    DWORD PTR [rsi],ebp
  40c49f:	xor    al,0x0
	...
  40c4ad:	add    BYTE PTR [rax],al
  40c4af:	add    BYTE PTR [rdi+0x43],al
  40c4b2:	rex.XB cmp spl,BYTE PTR [r8]
  40c4b5:	sub    BYTE PTR [rdi+0x4e],al
  40c4b8:	push   rbp
  40c4b9:	sub    DWORD PTR [rax],esp
  40c4bb:	xor    al,0x2e
  40c4bd:	cmp    DWORD PTR [rsi],ebp
  40c4bf:	xor    al,0x0
	...
  40c4cd:	add    BYTE PTR [rax],al
  40c4cf:	add    BYTE PTR [rdi+0x43],al
  40c4d2:	rex.XB cmp spl,BYTE PTR [r8]
  40c4d5:	sub    BYTE PTR [rdi+0x4e],al
  40c4d8:	push   rbp
  40c4d9:	sub    DWORD PTR [rax],esp
  40c4db:	xor    al,0x2e
  40c4dd:	cmp    DWORD PTR [rsi],ebp
  40c4df:	xor    al,0x0
	...
  40c4ed:	add    BYTE PTR [rax],al
  40c4ef:	add    BYTE PTR [rdi+0x43],al
  40c4f2:	rex.XB cmp spl,BYTE PTR [r8]
  40c4f5:	sub    BYTE PTR [rdi+0x4e],al
  40c4f8:	push   rbp
  40c4f9:	sub    DWORD PTR [rax],esp
  40c4fb:	xor    al,0x2e
  40c4fd:	cmp    DWORD PTR [rsi],ebp
  40c4ff:	xor    al,0x0
	...
  40c50d:	add    BYTE PTR [rax],al
  40c50f:	add    BYTE PTR [rdi+0x43],al
  40c512:	rex.XB cmp spl,BYTE PTR [r8]
  40c515:	sub    BYTE PTR [rdi+0x4e],al
  40c518:	push   rbp
  40c519:	sub    DWORD PTR [rax],esp
  40c51b:	xor    al,0x2e
  40c51d:	cmp    DWORD PTR [rsi],ebp
  40c51f:	xor    al,0x0
	...
  40c52d:	add    BYTE PTR [rax],al
  40c52f:	add    BYTE PTR [rdi+0x43],al
  40c532:	rex.XB cmp spl,BYTE PTR [r8]
  40c535:	sub    BYTE PTR [rdi+0x4e],al
  40c538:	push   rbp
  40c539:	sub    DWORD PTR [rax],esp
  40c53b:	xor    al,0x2e
  40c53d:	cmp    DWORD PTR [rsi],ebp
  40c53f:	xor    al,0x0
	...
  40c54d:	add    BYTE PTR [rax],al
  40c54f:	add    BYTE PTR [rdi+0x43],al
  40c552:	rex.XB cmp spl,BYTE PTR [r8]
  40c555:	sub    BYTE PTR [rdi+0x4e],al
  40c558:	push   rbp
  40c559:	sub    DWORD PTR [rax],esp
  40c55b:	xor    al,0x2e
  40c55d:	cmp    DWORD PTR [rsi],ebp
  40c55f:	xor    al,0x0
	...
  40c56d:	add    BYTE PTR [rax],al
  40c56f:	add    BYTE PTR [rdi+0x43],al
  40c572:	rex.XB cmp spl,BYTE PTR [r8]
  40c575:	sub    BYTE PTR [rdi+0x4e],al
  40c578:	push   rbp
  40c579:	sub    DWORD PTR [rax],esp
  40c57b:	xor    al,0x2e
  40c57d:	cmp    DWORD PTR [rsi],ebp
  40c57f:	xor    al,0x0
	...
  40c58d:	add    BYTE PTR [rax],al
  40c58f:	add    BYTE PTR [rdi+0x43],al
  40c592:	rex.XB cmp spl,BYTE PTR [r8]
  40c595:	sub    BYTE PTR [rdi+0x4e],al
  40c598:	push   rbp
  40c599:	sub    DWORD PTR [rax],esp
  40c59b:	xor    al,0x2e
  40c59d:	cmp    DWORD PTR [rsi],ebp
  40c59f:	xor    al,0x0
	...
  40c5ad:	add    BYTE PTR [rax],al
  40c5af:	add    BYTE PTR [rdi+0x43],al
  40c5b2:	rex.XB cmp spl,BYTE PTR [r8]
  40c5b5:	sub    BYTE PTR [rdi+0x4e],al
  40c5b8:	push   rbp
  40c5b9:	sub    DWORD PTR [rax],esp
  40c5bb:	xor    al,0x2e
  40c5bd:	cmp    DWORD PTR [rsi],ebp
  40c5bf:	xor    al,0x0
	...
  40c5cd:	add    BYTE PTR [rax],al
  40c5cf:	add    BYTE PTR [rdi+0x43],al
  40c5d2:	rex.XB cmp spl,BYTE PTR [r8]
  40c5d5:	sub    BYTE PTR [rdi+0x4e],al
  40c5d8:	push   rbp
  40c5d9:	sub    DWORD PTR [rax],esp
  40c5db:	xor    al,0x2e
  40c5dd:	cmp    DWORD PTR [rsi],ebp
  40c5df:	xor    al,0x0
	...
  40c5ed:	add    BYTE PTR [rax],al
  40c5ef:	add    BYTE PTR [rdi+0x43],al
  40c5f2:	rex.XB cmp spl,BYTE PTR [r8]
  40c5f5:	sub    BYTE PTR [rdi+0x4e],al
  40c5f8:	push   rbp
  40c5f9:	sub    DWORD PTR [rax],esp
  40c5fb:	xor    al,0x2e
  40c5fd:	cmp    DWORD PTR [rsi],ebp
  40c5ff:	xor    al,0x0
	...
  40c60d:	add    BYTE PTR [rax],al
  40c60f:	add    BYTE PTR [rdi+0x43],al
  40c612:	rex.XB cmp spl,BYTE PTR [r8]
  40c615:	sub    BYTE PTR [rdi+0x4e],al
  40c618:	push   rbp
  40c619:	sub    DWORD PTR [rax],esp
  40c61b:	xor    al,0x2e
  40c61d:	cmp    DWORD PTR [rsi],ebp
  40c61f:	xor    al,0x0
	...
  40c62d:	add    BYTE PTR [rax],al
  40c62f:	add    BYTE PTR [rdi+0x43],al
  40c632:	rex.XB cmp spl,BYTE PTR [r8]
  40c635:	sub    BYTE PTR [rdi+0x4e],al
  40c638:	push   rbp
  40c639:	sub    DWORD PTR [rax],esp
  40c63b:	xor    al,0x2e
  40c63d:	cmp    DWORD PTR [rsi],ebp
  40c63f:	xor    al,0x0
	...
  40c64d:	add    BYTE PTR [rax],al
  40c64f:	add    BYTE PTR [rdi+0x43],al
  40c652:	rex.XB cmp spl,BYTE PTR [r8]
  40c655:	sub    BYTE PTR [rdi+0x4e],al
  40c658:	push   rbp
  40c659:	sub    DWORD PTR [rax],esp
  40c65b:	xor    al,0x2e
  40c65d:	cmp    DWORD PTR [rsi],ebp
  40c65f:	xor    al,0x0
	...
  40c66d:	add    BYTE PTR [rax],al
  40c66f:	add    BYTE PTR [rdi+0x43],al
  40c672:	rex.XB cmp spl,BYTE PTR [r8]
  40c675:	sub    BYTE PTR [rdi+0x4e],al
  40c678:	push   rbp
  40c679:	sub    DWORD PTR [rax],esp
  40c67b:	xor    al,0x2e
  40c67d:	cmp    DWORD PTR [rsi],ebp
  40c67f:	xor    al,0x0
	...
  40c68d:	add    BYTE PTR [rax],al
  40c68f:	add    BYTE PTR [rdi+0x43],al
  40c692:	rex.XB cmp spl,BYTE PTR [r8]
  40c695:	sub    BYTE PTR [rdi+0x4e],al
  40c698:	push   rbp
  40c699:	sub    DWORD PTR [rax],esp
  40c69b:	xor    al,0x2e
  40c69d:	cmp    DWORD PTR [rsi],ebp
  40c69f:	xor    al,0x0
	...
  40c6ad:	add    BYTE PTR [rax],al
  40c6af:	add    BYTE PTR [rdi+0x43],al
  40c6b2:	rex.XB cmp spl,BYTE PTR [r8]
  40c6b5:	sub    BYTE PTR [rdi+0x4e],al
  40c6b8:	push   rbp
  40c6b9:	sub    DWORD PTR [rax],esp
  40c6bb:	xor    al,0x2e
  40c6bd:	cmp    DWORD PTR [rsi],ebp
  40c6bf:	xor    al,0x0
	...
  40c6cd:	add    BYTE PTR [rax],al
  40c6cf:	add    BYTE PTR [rdi+0x43],al
  40c6d2:	rex.XB cmp spl,BYTE PTR [r8]
  40c6d5:	sub    BYTE PTR [rdi+0x4e],al
  40c6d8:	push   rbp
  40c6d9:	sub    DWORD PTR [rax],esp
  40c6db:	xor    al,0x2e
  40c6dd:	cmp    DWORD PTR [rsi],ebp
  40c6df:	xor    al,0x0
	...
  40c6ed:	add    BYTE PTR [rax],al
  40c6ef:	add    BYTE PTR [rdi+0x43],al
  40c6f2:	rex.XB cmp spl,BYTE PTR [r8]
  40c6f5:	sub    BYTE PTR [rdi+0x4e],al
  40c6f8:	push   rbp
  40c6f9:	sub    DWORD PTR [rax],esp
  40c6fb:	xor    al,0x2e
  40c6fd:	cmp    DWORD PTR [rsi],ebp
  40c6ff:	xor    al,0x0
	...
  40c70d:	add    BYTE PTR [rax],al
  40c70f:	add    BYTE PTR [rdi+0x43],al
  40c712:	rex.XB cmp spl,BYTE PTR [r8]
  40c715:	sub    BYTE PTR [rdi+0x4e],al
  40c718:	push   rbp
  40c719:	sub    DWORD PTR [rax],esp
  40c71b:	xor    al,0x2e
  40c71d:	cmp    DWORD PTR [rsi],ebp
  40c71f:	xor    al,0x0
	...
  40c72d:	add    BYTE PTR [rax],al
  40c72f:	add    BYTE PTR [rdi+0x43],al
  40c732:	rex.XB cmp spl,BYTE PTR [r8]
  40c735:	sub    BYTE PTR [rdi+0x4e],al
  40c738:	push   rbp
  40c739:	sub    DWORD PTR [rax],esp
  40c73b:	xor    al,0x2e
  40c73d:	cmp    DWORD PTR [rsi],ebp
  40c73f:	xor    al,0x0
	...
  40c74d:	add    BYTE PTR [rax],al
  40c74f:	add    BYTE PTR [rdi+0x43],al
  40c752:	rex.XB cmp spl,BYTE PTR [r8]
  40c755:	sub    BYTE PTR [rdi+0x4e],al
  40c758:	push   rbp
  40c759:	sub    DWORD PTR [rax],esp
  40c75b:	xor    al,0x2e
  40c75d:	cmp    DWORD PTR [rsi],ebp
  40c75f:	xor    al,0x0
	...
  40c76d:	add    BYTE PTR [rax],al
  40c76f:	add    BYTE PTR [rdi+0x43],al
  40c772:	rex.XB cmp spl,BYTE PTR [r8]
  40c775:	sub    BYTE PTR [rdi+0x4e],al
  40c778:	push   rbp
  40c779:	sub    DWORD PTR [rax],esp
  40c77b:	xor    al,0x2e
  40c77d:	cmp    DWORD PTR [rsi],ebp
  40c77f:	xor    al,0x0
	...
  40c78d:	add    BYTE PTR [rax],al
  40c78f:	add    BYTE PTR [rdi+0x43],al
  40c792:	rex.XB cmp spl,BYTE PTR [r8]
  40c795:	sub    BYTE PTR [rdi+0x4e],al
  40c798:	push   rbp
  40c799:	sub    DWORD PTR [rax],esp
  40c79b:	xor    al,0x2e
  40c79d:	cmp    DWORD PTR [rsi],ebp
  40c79f:	xor    al,0x0
	...
  40c7ad:	add    BYTE PTR [rax],al
  40c7af:	add    BYTE PTR [rdi+0x43],al
  40c7b2:	rex.XB cmp spl,BYTE PTR [r8]
  40c7b5:	sub    BYTE PTR [rdi+0x4e],al
  40c7b8:	push   rbp
  40c7b9:	sub    DWORD PTR [rax],esp
  40c7bb:	xor    al,0x2e
  40c7bd:	cmp    DWORD PTR [rsi],ebp
  40c7bf:	xor    al,0x0
	...
  40c7d5:	add    BYTE PTR [rax],al
  40c7d7:	add    BYTE PTR [rcx],al
  40c7d9:	add    BYTE PTR [rax],al
  40c7db:	add    BYTE PTR [rax+0x13],dh
  40c7de:	add    DWORD PTR [rax],eax
  40c7e0:	(bad)  
  40c7e1:	ret    0x0
  40c7e4:	add    BYTE PTR [rax],al
  40c7e7:	add    BYTE PTR [rax+0x13],ah
  40c7ea:	add    DWORD PTR [rax],eax
  40c7ec:	add    dl,al
  40c7ee:	add    BYTE PTR [rax],al
  40c7f0:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000000040d000 <.pdata>:
  40d000:	add    BYTE PTR [rax],dl
  40d002:	add    BYTE PTR [rax],al
  40d004:	add    DWORD PTR [rax],edx
  40d006:	add    BYTE PTR [rax],al
  40d008:	add    al,ah
  40d00a:	add    BYTE PTR [rax],al
  40d00c:	adc    BYTE PTR [rax],dl
  40d00e:	add    BYTE PTR [rax],al
  40d010:	push   rcx
  40d011:	adc    DWORD PTR [rax],eax
  40d013:	add    BYTE PTR [rax+riz*8],al
  40d016:	add    BYTE PTR [rax],al
  40d018:	(bad)  
  40d019:	adc    DWORD PTR [rax],eax
  40d01b:	add    BYTE PTR [rsi+0xc000011],ch
  40d021:	loopne 0x40d023
  40d023:	add    BYTE PTR [rax-0x31ffffef],dh
  40d029:	adc    al,0x0
  40d02b:	add    BYTE PTR [rax+riz*8],dl
  40d02e:	add    BYTE PTR [rax],al
  40d030:	rcl    BYTE PTR [rax+rax*1],1
  40d033:	add    dl,dh
  40d035:	adc    al,0x0
  40d037:	add    BYTE PTR [rax],ch
  40d039:	loopne 0x40d03b
  40d03b:	add    BYTE PTR [rax],al
  40d03d:	adc    eax,0x15220000
  40d042:	add    BYTE PTR [rax],al
  40d044:	rex.W loopne 0x40d047
  40d047:	add    BYTE PTR [rax],dh
  40d049:	adc    eax,0x15c00000
  40d04e:	add    BYTE PTR [rax],al
  40d050:	push   0xffffffffc00000e0
  40d055:	adc    eax,0x1c2f0000
  40d05a:	add    BYTE PTR [rax],al
  40d05c:	lods   al,BYTE PTR ds:[rsi]
  40d05d:	loopne 0x40d05f
  40d05f:	add    BYTE PTR [rax],dh
  40d061:	sbb    al,0x0
  40d063:	add    BYTE PTR [rsi-0x2bffffe2],bh
  40d069:	loopne 0x40d06b
  40d06b:	add    BYTE PTR [rax+0x1f],ah
  40d06e:	add    BYTE PTR [rax],al
  40d070:	(bad)  
  40d071:	and    BYTE PTR [rax],al
  40d073:	add    ah,ch
  40d075:	loopne 0x40d077
  40d077:	add    BYTE PTR [rax],dl
  40d079:	and    BYTE PTR [rax],al
  40d07b:	add    BYTE PTR [rcx],ch
  40d07d:	and    BYTE PTR [rax],al
  40d07f:	add    ah,dh
  40d081:	loopne 0x40d083
  40d083:	add    BYTE PTR [rax],dh
  40d085:	and    BYTE PTR [rax],al
  40d087:	add    BYTE PTR [rbp+0x20],ah
  40d08a:	add    BYTE PTR [rax],al
  40d08c:	cld    
  40d08d:	loopne 0x40d08f
  40d08f:	add    BYTE PTR [rax+0x20],dh
  40d092:	add    BYTE PTR [rax],al
  40d094:	(bad)
  40d097:	add    BYTE PTR [rcx+riz*8],al
  40d09a:	add    BYTE PTR [rax],al
  40d09c:	shl    BYTE PTR [rax],1
  40d09e:	add    BYTE PTR [rax],al
  40d0a0:	in     al,dx
  40d0a1:	and    BYTE PTR [rax],al
  40d0a3:	add    BYTE PTR [rax],dl
  40d0a5:	loope  0x40d0a7
  40d0a7:	add    al,dh
  40d0a9:	and    BYTE PTR [rax],al
  40d0ab:	add    dl,bh
  40d0ad:	and    BYTE PTR [rax],al
  40d0af:	add    BYTE PTR [rcx+riz*8],dl
  40d0b2:	add    BYTE PTR [rax],al
  40d0b4:	add    BYTE PTR [rcx],ah
  40d0b6:	add    BYTE PTR [rax],al
  40d0b8:	add    esp,DWORD PTR [rcx]
  40d0ba:	add    BYTE PTR [rax],al
  40d0bc:	sbb    cl,ah
  40d0be:	add    BYTE PTR [rax],al
  40d0c0:	adc    BYTE PTR [rcx],ah
  40d0c2:	add    BYTE PTR [rax],al
  40d0c4:	out    0x21,al
  40d0c6:	add    BYTE PTR [rax],al
  40d0c8:	sbb    al,0xe1
  40d0ca:	add    BYTE PTR [rax],al
  40d0cc:	lock and DWORD PTR [rax],eax
  40d0cf:	add    bl,ch
  40d0d1:	and    al,BYTE PTR [rax]
  40d0d3:	add    BYTE PTR [rcx+riz*8],ch
  40d0d6:	add    BYTE PTR [rax],al
  40d0d8:	lock and al,BYTE PTR [rax]
  40d0db:	add    BYTE PTR [rdi],bl
  40d0dd:	and    eax,DWORD PTR [rax]
  40d0df:	add    BYTE PTR [rcx+riz*8],bh
  40d0e2:	add    BYTE PTR [rax],al
  40d0e4:	and    BYTE PTR [rbx],ah
  40d0e6:	add    BYTE PTR [rax],al
  40d0e8:	mov    DWORD PTR [rbx],esp
  40d0ea:	add    BYTE PTR [rax],al
  40d0ec:	rex.R loope 0x40d0ef
  40d0ef:	add    BYTE PTR [rax-0x6cffffdd],dl
  40d0f5:	and    eax,DWORD PTR [rax]
  40d0f7:	add    BYTE PTR [rax-0x1f],dl
  40d0fa:	add    BYTE PTR [rax],al
  40d0fc:	movabs al,ds:0x54000023e1000023
  40d105:	loope  0x40d107
  40d107:	add    al,dh
  40d109:	and    eax,DWORD PTR [rax]
  40d10b:	add    ah,bh
  40d10d:	and    eax,DWORD PTR [rax]
  40d10f:	add    BYTE PTR [rcx+riz*8+0x0],bl
  40d113:	add    BYTE PTR [rax],al
  40d115:	and    al,0x0
  40d117:	add    ah,bh
  40d119:	and    al,0x0
  40d11b:	add    BYTE PTR [rax-0x1f],ah
  40d11e:	add    BYTE PTR [rax],al
  40d120:	add    BYTE PTR [rip+0x25030000],ah        # 0x2543d126
  40d126:	add    BYTE PTR [rax],al
  40d128:	js     0x40d10b
  40d12a:	add    BYTE PTR [rax],al
  40d12c:	adc    BYTE PTR [rip+0x25140000],ah        # 0x2554d132
  40d132:	add    BYTE PTR [rax],al
  40d134:	jl     0x40d117
  40d136:	add    BYTE PTR [rax],al
  40d138:	and    BYTE PTR [rip+0x25240000],ah        # 0x2564d13e
  40d13e:	add    BYTE PTR [rax],al
  40d140:	and    cl,0x0
  40d143:	add    BYTE PTR [rax],dh
  40d145:	and    eax,0x25910000
  40d14a:	add    BYTE PTR [rax],al
  40d14c:	test   cl,ah
  40d14e:	add    BYTE PTR [rax],al
  40d150:	movabs al,ds:0x9000002702000025
  40d159:	loope  0x40d15b
  40d15b:	add    BYTE PTR [rax],dl
  40d15d:	(bad)  
  40d15e:	add    BYTE PTR [rax],al
  40d160:	or     DWORD PTR [rdx],ebp
  40d162:	add    BYTE PTR [rax],al
  40d164:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d165:	loope  0x40d167
  40d167:	add    BYTE PTR [rax],dl
  40d169:	sub    al,BYTE PTR [rax]
  40d16b:	add    BYTE PTR [rsi-0x43ffffd5],dh
  40d171:	loope  0x40d173
  40d173:	add    al,al
  40d175:	sub    eax,DWORD PTR [rax]
  40d177:	add    BYTE PTR [rsp+rbp*1-0x1e3c0000],ch
  40d17e:	add    BYTE PTR [rax],al
  40d180:	mov    al,0x2c
  40d182:	add    BYTE PTR [rax],al
  40d184:	push   0xffffffffd400002e
  40d189:	loope  0x40d18b
  40d18b:	add    BYTE PTR [rax+0x2e],dh
  40d18e:	add    BYTE PTR [rax],al
  40d190:	(bad)  [rsi]
  40d192:	add    BYTE PTR [rax],al
  40d194:	fsubr  st(1),st
  40d196:	add    BYTE PTR [rax],al
  40d198:	loopne 0x40d1c8
  40d19a:	add    BYTE PTR [rax],al
  40d19c:	pop    rdi
  40d19d:	(bad)  
  40d19e:	add    BYTE PTR [rax],al
  40d1a0:	in     al,dx
  40d1a1:	loope  0x40d1a3
  40d1a3:	add    BYTE PTR [rax+0x2f],ah
  40d1a6:	add    BYTE PTR [rax],al
  40d1a8:	jmp    FWORD PTR [rdi]
  40d1aa:	add    BYTE PTR [rax],al
  40d1ac:	clc    
  40d1ad:	loope  0x40d1af
  40d1af:	add    BYTE PTR [rax],al
  40d1b1:	xor    BYTE PTR [rax],al
  40d1b3:	add    dl,bl
  40d1b5:	xor    BYTE PTR [rax],al
  40d1b7:	add    BYTE PTR [rax],al
  40d1b9:	loop   0x40d1bb
  40d1bb:	add    al,ah
  40d1bd:	xor    BYTE PTR [rax],al
  40d1bf:	add    bh,bh
  40d1c1:	xor    BYTE PTR [rax],al
  40d1c3:	add    BYTE PTR [rax],cl
  40d1c5:	loop   0x40d1c7
  40d1c7:	add    BYTE PTR [rax],al
  40d1c9:	xor    DWORD PTR [rax],eax
  40d1cb:	add    BYTE PTR [rdx],dl
  40d1cd:	xor    DWORD PTR [rax],eax
  40d1cf:	add    BYTE PTR [rdx+riz*8],cl
  40d1d2:	add    BYTE PTR [rax],al
  40d1d4:	and    BYTE PTR [rcx],dh
  40d1d6:	add    BYTE PTR [rax],al
  40d1d8:	xor    DWORD PTR gs:[rax],eax
  40d1db:	add    BYTE PTR [rax],dl
  40d1dd:	loop   0x40d1df
  40d1df:	add    BYTE PTR [rax+0x31],dh
  40d1e2:	add    BYTE PTR [rax],al
  40d1e4:	(bad)  
  40d1e5:	xor    al,BYTE PTR [rax]
  40d1e7:	add    BYTE PTR [rdx+riz*8],dl
  40d1ea:	add    BYTE PTR [rax],al
  40d1ec:	adc    BYTE PTR [rdx],dh
  40d1ee:	add    BYTE PTR [rax],al
  40d1f0:	push   rbx
  40d1f1:	xor    al,BYTE PTR [rax]
  40d1f3:	add    BYTE PTR [rax],ah
  40d1f5:	loop   0x40d1f7
  40d1f7:	add    BYTE PTR [rax+0x32],ah
  40d1fa:	add    BYTE PTR [rax],al
  40d1fc:	fwait
  40d1fd:	xor    al,BYTE PTR [rax]
  40d1ff:	add    BYTE PTR [rdx+riz*8],ch
  40d202:	add    BYTE PTR [rax],al
  40d204:	movabs al,ds:0x340000332e000032
  40d20d:	loop   0x40d20f
  40d20f:	add    BYTE PTR [rax],dh
  40d211:	xor    eax,DWORD PTR [rax]
  40d213:	add    BYTE PTR [rax+0x33],ch
  40d216:	add    BYTE PTR [rax],al
  40d218:	rex loop 0x40d21b
  40d21b:	add    BYTE PTR [rax+0x33],dh
  40d21e:	add    BYTE PTR [rax],al
  40d220:	(bad)
  40d223:	add    BYTE PTR [rdx+riz*8+0x0],cl
  40d227:	add    al,dl
  40d229:	xor    eax,DWORD PTR [rax]
  40d22b:	add    BYTE PTR [rsi+0x34],bh
  40d22e:	add    BYTE PTR [rax],al
  40d230:	pop    rax
  40d231:	loop   0x40d233
  40d233:	add    al,al
  40d235:	xor    al,0x0
  40d237:	add    BYTE PTR [rax+0x68000035],ah
  40d23d:	loop   0x40d23f
  40d23f:	add    BYTE PTR [rax-0x3effffcb],ah
  40d245:	add    BYTE PTR ss:[rax],al
  40d248:	jo     0x40d22c
  40d24a:	add    BYTE PTR [rax],al
  40d24c:	shl    BYTE PTR [rsi],1
  40d24e:	add    BYTE PTR [rax],al
  40d250:	imul   esi,DWORD PTR [rdi],0x0
  40d253:	add    BYTE PTR [rdx+riz*8+0x0],bh
  40d257:	add    BYTE PTR [rax+0x37],dh
  40d25a:	add    BYTE PTR [rax],al
  40d25c:	(bad)  
  40d25d:	cmp    eax,0xe2840000
  40d262:	add    BYTE PTR [rax],al
  40d264:	(bad)  
  40d265:	cmp    eax,0x3e0b0000
  40d26a:	add    BYTE PTR [rax],al
  40d26c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d26d:	loop   0x40d26f
  40d26f:	add    BYTE PTR [rax],dl
  40d271:	add    BYTE PTR ds:[rax],al
  40d274:	leave  
  40d275:	add    BYTE PTR [r8],al
  40d278:	mov    al,0xe2
  40d27a:	add    BYTE PTR [rax],al
  40d27c:	rol    BYTE PTR [rcx+0x0],1
  40d27f:	add    BYTE PTR [rdx],al
  40d281:	rex.X add BYTE PTR [rax],al
  40d284:	enter  0xe2,0x0
  40d288:	adc    BYTE PTR [rdx+0x0],al
  40d28b:	add    BYTE PTR [rcx-0x33ffffbe],bh
  40d291:	loop   0x40d293
  40d293:	add    al,al
  40d295:	rex.X add BYTE PTR [rax],al
  40d298:	or     eax,0xd400005e
  40d29d:	loop   0x40d29f
  40d29f:	add    BYTE PTR [rax],dl
  40d2a1:	pop    rsi
  40d2a2:	add    BYTE PTR [rax],al
  40d2a4:	imul   ebx,DWORD PTR [rdi+0x0],0x0
  40d2a8:	add    al,0xe3
  40d2aa:	add    BYTE PTR [rax],al
  40d2ac:	jo     0x40d30d
  40d2ae:	add    BYTE PTR [rax],al
  40d2b0:	ins    DWORD PTR es:[rdi],dx
  40d2b1:	(bad)  
  40d2b2:	add    BYTE PTR [rax],al
  40d2b4:	sbb    bl,ah
  40d2b6:	add    BYTE PTR [rax],al
  40d2b8:	loopne 0x40d31c
  40d2ba:	add    BYTE PTR [rax],al
  40d2bc:	shl    DWORD PTR [rbx+0x0],1
  40d2bf:	add    BYTE PTR [rax],ch
  40d2c1:	jrcxz  0x40d2c3
  40d2c3:	add    BYTE PTR [rax+0x64],dl
  40d2c6:	add    BYTE PTR [rax],al
  40d2c8:	(bad)  
  40d2c9:	ins    DWORD PTR es:[rdi],dx
  40d2ca:	add    BYTE PTR [rax],al
  40d2cc:	xor    bl,ah
  40d2ce:	add    BYTE PTR [rax],al
  40d2d0:	and    BYTE PTR [rbp+0x0],ch
  40d2d3:	add    BYTE PTR [rip+0x4800006e],bl        # 0x4840d347
  40d2d9:	jrcxz  0x40d2db
  40d2db:	add    BYTE PTR [rax],ah
  40d2dd:	outs   dx,BYTE PTR ds:[rsi]
  40d2de:	add    BYTE PTR [rax],al
  40d2e0:	pop    rsi
  40d2e1:	outs   dx,BYTE PTR ds:[rsi]
  40d2e2:	add    BYTE PTR [rax],al
  40d2e4:	push   rsp
  40d2e5:	jrcxz  0x40d2e7
  40d2e7:	add    BYTE PTR [rax+0x6e],ah
  40d2ea:	add    BYTE PTR [rax],al
  40d2ec:	in     al,0x6e
  40d2ee:	add    BYTE PTR [rax],al
  40d2f0:	pop    rax
  40d2f1:	jrcxz  0x40d2f3
  40d2f3:	add    al,dh
  40d2f5:	outs   dx,BYTE PTR ds:[rsi]
  40d2f6:	add    BYTE PTR [rax],al
  40d2f8:	movabs ds:0xb00000e35c000072,al
  40d301:	jb     0x40d303
  40d303:	add    BYTE PTR [rbx+rsi*2+0x0],bh
  40d307:	add    BYTE PTR [rbx+riz*8+0x0],dh
  40d30b:	add    BYTE PTR [rax-0x3dffff8d],al
  40d311:	jae    0x40d313
  40d313:	add    BYTE PTR [rax-0x2fffff1d],al
  40d319:	jae    0x40d31b
  40d31b:	add    dh,bl
  40d31d:	je     0x40d31f
  40d31f:	add    BYTE PTR [rax-0x1fffff1d],cl
  40d325:	je     0x40d327
  40d327:	add    BYTE PTR [rsi+0x75],al
  40d32a:	add    BYTE PTR [rax],al
  40d32c:	xchg   esp,eax
  40d32d:	jrcxz  0x40d32f
  40d32f:	add    BYTE PTR [rax+0x75],dl
  40d332:	add    BYTE PTR [rax],al
  40d334:	add    dh,BYTE PTR [rsi+0x0]
  40d337:	add    BYTE PTR [rbx+riz*8+0x76100000],bl
  40d33e:	add    BYTE PTR [rax],al
  40d340:	ss jbe 0x40d343
  40d343:	add    BYTE PTR [rbx+riz*8+0x76400000],ch
  40d34a:	add    BYTE PTR [rax],al
  40d34c:	jo     0x40d3c5
  40d34e:	add    BYTE PTR [rax],al
  40d350:	mov    ah,0xe3
  40d352:	add    BYTE PTR [rax],al
  40d354:	jo     0x40d3cd
  40d356:	add    BYTE PTR [rax],al
  40d358:	(bad)  
  40d359:	js     0x40d35b
  40d35b:	add    al,cl
  40d35d:	jrcxz  0x40d35f
  40d35f:	add    al,ah
  40d361:	js     0x40d363
  40d363:	add    bl,dh
  40d365:	jns    0x40d367
  40d367:	add    al,bl
  40d369:	jrcxz  0x40d36b
  40d36b:	add    BYTE PTR [rax],al
  40d36d:	jp     0x40d36f
  40d36f:	add    BYTE PTR [rdx+rdi*2+0x0],al
  40d373:	add    ah,ch
  40d375:	jrcxz  0x40d377
  40d377:	add    BYTE PTR [rax+0x7a],dl
  40d37a:	add    BYTE PTR [rax],al
  40d37c:	xchg   BYTE PTR [rbx+0x0],bh
  40d37f:	add    al,dh
  40d381:	jrcxz  0x40d383
  40d383:	add    BYTE PTR [rax-0x5cffff85],dl
  40d389:	jl     0x40d38b
  40d38b:	add    ah,bh
  40d38d:	jrcxz  0x40d38f
  40d38f:	add    BYTE PTR [rax-0x46ffff84],dh
  40d395:	jge    0x40d397
  40d397:	add    BYTE PTR [rax],cl
  40d399:	in     al,0x0
  40d39b:	add    al,al
  40d39d:	jge    0x40d39f
  40d39f:	add    ah,ah
  40d3a1:	jge    0x40d3a3
  40d3a3:	add    BYTE PTR [rsp+riz*8],dl
  40d3a6:	add    BYTE PTR [rax],al
  40d3a8:	lock jge 0x40d3ab
  40d3ab:	add    bl,ch
  40d3ad:	jle    0x40d3af
  40d3af:	add    BYTE PTR [rax],bl
  40d3b1:	in     al,0x0
  40d3b3:	add    al,dh
  40d3b5:	jle    0x40d3b7
  40d3b7:	add    BYTE PTR [rdi+rdi*2-0x1bd40000],ch
  40d3be:	add    BYTE PTR [rax],al
  40d3c0:	mov    al,0x7f
  40d3c2:	add    BYTE PTR [rax],al
  40d3c4:	repz jg 0x40d3c7
  40d3c7:	add    BYTE PTR [rsp+riz*8],bh
  40d3ca:	add    BYTE PTR [rax],al
  40d3cc:	add    BYTE PTR [rax-0x7f9e0000],al
  40d3d2:	add    BYTE PTR [rax],al
  40d3d4:	in     al,0x0
  40d3d7:	add    BYTE PTR [rax-0x80],dh
  40d3da:	add    BYTE PTR [rax],al
  40d3dc:	stc    
  40d3dd:	add    BYTE PTR [rax],0x0
  40d3e0:	rex.R in al,0x0
  40d3e3:	add    BYTE PTR [rax-0x7e],dh
  40d3e6:	add    BYTE PTR [rax],al
  40d3e8:	js     0x40d36c
  40d3ea:	add    BYTE PTR [rax],al
  40d3ec:	rex.W in al,0x0
  40d3ef:	add    BYTE PTR [rax-0x74ffff7e],al
  40d3f5:	(bad)  
  40d3f6:	add    BYTE PTR [rax],al
  40d3f8:	rex.WR in al,0x0
  40d3fb:	add    BYTE PTR [rax-0x7d],dl
  40d3fe:	add    BYTE PTR [rax],al
  40d400:	ds pushf 
  40d402:	add    BYTE PTR [rax],al
  40d404:	jo     0x40d3e6
	...

Disassembly of section .xdata:

000000000040e000 <.xdata>:
  40e000:	add    DWORD PTR [rax],eax
  40e002:	add    BYTE PTR [rax],al
  40e004:	add    DWORD PTR [rcx+rax*1],eax
  40e007:	add    BYTE PTR [rdx+rax*2],al
  40e00a:	add    BYTE PTR [rax],al
  40e00c:	add    DWORD PTR [rcx+rax*1],eax
  40e00f:	add    BYTE PTR [rdx+riz*2],al
  40e012:	add    BYTE PTR [rax],al
  40e014:	add    DWORD PTR [rdi],ecx
  40e016:	or     BYTE PTR [rax],al
  40e018:	lgdt   [rbx]
  40e01b:	add    BYTE PTR [rax],cl
  40e01d:	xor    BYTE PTR [rdi],al
  40e01f:	(bad)  
  40e020:	(bad)  
  40e021:	jo     0x40e028
  40e023:	push   rax
  40e024:	add    al,0xc0
  40e026:	add    dl,al
  40e028:	or     DWORD PTR [rcx+rax*1],eax
  40e02b:	add    BYTE PTR [rdx+rax*2],al
  40e02e:	add    BYTE PTR [rax],al
  40e030:	push   0x1000082
  40e035:	add    BYTE PTR [rax],al
  40e037:	add    ah,dl
  40e039:	adc    al,0x0
  40e03b:	add    ah,ch
  40e03d:	adc    al,0x0
  40e03f:	add    BYTE PTR [rax-0x13ffffd4],dh
  40e045:	adc    al,0x0
  40e047:	add    BYTE PTR [rcx],cl
  40e049:	add    al,0x1
  40e04b:	add    BYTE PTR [rdx+rax*2],al
  40e04e:	add    BYTE PTR [rax],al
  40e050:	push   0x1000082
  40e055:	add    BYTE PTR [rax],al
  40e057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40e05e:	add    BYTE PTR [rax],al
  40e060:	mov    al,0x2c
  40e062:	add    BYTE PTR [rax],al
  40e064:	sbb    al,0x15
  40e066:	add    BYTE PTR [rax],al
  40e068:	add    DWORD PTR [rip+0x72050002],eax        # 0x7245e070
  40e06e:	add    DWORD PTR [rax],esi
  40e070:	add    DWORD PTR [rdx+0x1c],esp
  40e073:	add    BYTE PTR [rdx-0x18],ah
  40e076:	test   DWORD PTR [rax],eax
  40e078:	pop    rcx
  40e079:	fadd   DWORD PTR [rax+rax*1+0x83c850]
  40e080:	rex.RXB mov r8d,0xa83e0082
  40e086:	add    DWORD PTR [rax],0x809835
  40e08c:	sub    al,0x88
  40e08e:	jg     0x40e090
  40e090:	and    edi,DWORD PTR [rax+0x7e]
  40e093:	add    BYTE PTR [rbx],bl
  40e095:	push   0x113007d
  40e09a:	or     eax,0xb300c01
  40e09f:	(bad)  
  40e0a0:	or     dh,BYTE PTR [rax+0x9]
  40e0a3:	push   rax
  40e0a4:	or     al,al
  40e0a6:	(bad)  
  40e0a7:	rol    BYTE PTR [rax+riz*8],1
  40e0aa:	add    dh,al
  40e0ac:	add    DWORD PTR [rip+0xffffffff98350012],esi        # 0xffffffff9875e0c4
  40e0b2:	or     eax,0xc882c00
  40e0b7:	add    BYTE PTR [rbx],ah
  40e0b9:	js     0x40e0c6
  40e0bb:	add    BYTE PTR [rbx],bl
  40e0bd:	push   0x113000a
  40e0c2:	sbb    eax,0xb300c00
  40e0c7:	(bad)  
  40e0c8:	or     dh,BYTE PTR [rax+0x9]
  40e0cb:	push   rax
  40e0cc:	or     al,al
  40e0ce:	(bad)  
  40e0cf:	rol    BYTE PTR [rax+riz*8],1
  40e0d2:	add    dh,al
  40e0d4:	add    DWORD PTR [rax],edx
  40e0d6:	or     DWORD PTR [rax],eax
  40e0d8:	adc    dl,al
  40e0da:	or     al,0x30
  40e0dc:	or     esp,DWORD PTR [rax+0xa]
  40e0df:	jo     0x40e0ea
  40e0e1:	push   rax
  40e0e2:	or     al,al
  40e0e4:	(bad)  
  40e0e5:	rol    BYTE PTR [rax+riz*8],1
  40e0e8:	add    dh,al
  40e0ea:	add    BYTE PTR [rax],al
  40e0ec:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245e0f4
  40e0f2:	add    DWORD PTR [rax],esi
  40e0f4:	add    DWORD PTR [rcx+rax*1],eax
  40e0f7:	add    BYTE PTR [rdx+rax*2],al
  40e0fa:	add    BYTE PTR [rax],al
  40e0fc:	add    DWORD PTR [rcx+rax*1],eax
  40e0ff:	add    BYTE PTR [rdx+rax*2],al
  40e102:	add    BYTE PTR [rax],al
  40e104:	add    DWORD PTR [rsi],eax
  40e106:	add    eax,DWORD PTR [rax]
  40e108:	(bad)  
  40e109:	rex.X add sil,BYTE PTR [rax]
  40e10c:	add    DWORD PTR [rax+0x0],esp
  40e10f:	add    BYTE PTR [rcx],al
  40e111:	add    BYTE PTR [rax],al
  40e113:	add    BYTE PTR [rcx],al
  40e115:	add    BYTE PTR [rax],al
  40e117:	add    BYTE PTR [rcx],al
  40e119:	add    BYTE PTR [rax],al
  40e11b:	add    BYTE PTR [rcx],al
  40e11d:	or     al,BYTE PTR [rsi]
  40e11f:	add    BYTE PTR [rdx],cl
  40e121:	jb     0x40e129
  40e123:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0e589
  40e129:	push   rax
  40e12a:	add    al,al
  40e12c:	add    DWORD PTR [rdx],ecx
  40e12e:	add    eax,0x6d20a05
  40e133:	add    eax,DWORD PTR [rbx]
  40e135:	xor    BYTE PTR [rdx],al
  40e137:	(bad)  
  40e138:	add    DWORD PTR [rax+0x0],edx
  40e13b:	add    BYTE PTR [rcx],al
  40e13d:	add    al,0x1
  40e13f:	add    BYTE PTR [rdx+rax*2],al
  40e142:	add    BYTE PTR [rax],al
  40e144:	add    DWORD PTR [rsi],eax
  40e146:	add    eax,DWORD PTR [rax]
  40e148:	(bad)  
  40e149:	rex.X add sil,BYTE PTR [rax]
  40e14c:	add    DWORD PTR [rax+0x0],esp
  40e14f:	add    BYTE PTR [rcx],al
  40e151:	add    BYTE PTR [rax],al
  40e153:	add    BYTE PTR [rcx],al
  40e155:	add    al,0x1
  40e157:	add    BYTE PTR [rdx+riz*4],al
  40e15a:	add    BYTE PTR [rax],al
  40e15c:	add    DWORD PTR [rax],eax
  40e15e:	add    BYTE PTR [rax],al
  40e160:	add    DWORD PTR [rsi],edx
  40e162:	or     DWORD PTR [rax],eax
  40e164:	(bad)  
  40e165:	mov    BYTE PTR [rsi],al
  40e167:	add    BYTE PTR [rax],dl
  40e169:	js     0x40e170
  40e16b:	add    BYTE PTR [rbx],cl
  40e16d:	push   0xffffffffe2060004
  40e172:	add    dh,BYTE PTR [rax]
  40e174:	add    DWORD PTR [rax+0x0],esp
  40e177:	add    BYTE PTR [rcx],al
  40e179:	add    BYTE PTR [rax],al
  40e17b:	add    BYTE PTR [rcx],al
  40e17d:	add    BYTE PTR [rax],al
  40e17f:	add    BYTE PTR [rcx],al
  40e181:	add    BYTE PTR [rax],al
  40e183:	add    BYTE PTR [rcx],al
  40e185:	(bad)  
  40e186:	add    eax,DWORD PTR [rax]
  40e188:	(bad)  
  40e189:	(bad)  
  40e18b:	xor    BYTE PTR [rcx],al
  40e18d:	(bad)  
  40e18e:	add    BYTE PTR [rax],al
  40e190:	add    DWORD PTR [rdi+rax*1],ecx
  40e193:	add    BYTE PTR [rdx+riz*4],cl
  40e196:	or     BYTE PTR [rax],dh
  40e198:	(bad)  
  40e199:	(bad)  
  40e19a:	(bad)  
  40e19b:	jo     0x40e1a2
  40e19d:	push   rax
  40e19e:	add    al,0xc0
  40e1a0:	add    dl,al
  40e1a2:	add    BYTE PTR [rax],al
  40e1a4:	add    DWORD PTR [rcx],edx
  40e1a6:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e93bd
  40e1ac:	or     dh,BYTE PTR [rax]
  40e1ae:	or     DWORD PTR [rax+0x8],esp
  40e1b1:	jo     0x40e1ba
  40e1b3:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220e58a
  40e1ba:	add    BYTE PTR [rax],al
  40e1bc:	add    DWORD PTR [rcx+rax*1],eax
  40e1bf:	add    BYTE PTR [rdx+rax*2],al
  40e1c2:	add    BYTE PTR [rax],al
  40e1c4:	add    DWORD PTR [rdx],ecx
  40e1c6:	(bad)  
  40e1c7:	add    BYTE PTR [rdx],cl
  40e1c9:	xor    al,BYTE PTR [rsi]
  40e1cb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0e631
  40e1d1:	push   rax
  40e1d2:	add    al,al
  40e1d4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245e1dc
  40e1da:	add    DWORD PTR [rax],esi
  40e1dc:	add    DWORD PTR [rax],ecx
  40e1de:	add    eax,0x4420800
  40e1e3:	xor    BYTE PTR [rbx],al
  40e1e5:	(bad)  
  40e1e6:	add    dh,BYTE PTR [rax+0x1]
  40e1e9:	push   rax
  40e1ea:	add    BYTE PTR [rax],al
  40e1ec:	add    DWORD PTR [rdi],eax
  40e1ee:	add    al,0x0
  40e1f0:	(bad)  
  40e1f1:	xor    al,BYTE PTR [rbx]
  40e1f3:	xor    BYTE PTR [rdx],al
  40e1f5:	(bad)  
  40e1f6:	add    DWORD PTR [rax+0x1],esi
  40e1f9:	add    eax,0x32050002
  40e1fe:	add    DWORD PTR [rax],esi
  40e200:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245e208
  40e206:	add    DWORD PTR [rax],esi
  40e208:	add    DWORD PTR [rax],eax
  40e20a:	add    BYTE PTR [rax],al
  40e20c:	add    DWORD PTR [rax],eax
  40e20e:	add    BYTE PTR [rax],al
  40e210:	add    DWORD PTR [rax],eax
  40e212:	add    BYTE PTR [rax],al
  40e214:	add    DWORD PTR [rdi],eax
  40e216:	add    al,0x0
  40e218:	(bad)  
  40e219:	xor    al,BYTE PTR [rbx]
  40e21b:	xor    BYTE PTR [rdx],al
  40e21d:	(bad)  
  40e21e:	add    DWORD PTR [rax+0x1],esi
  40e221:	(bad)  
  40e222:	add    eax,DWORD PTR [rax]
  40e224:	(bad)  
  40e225:	rex.X add sil,BYTE PTR [rax]
  40e228:	add    DWORD PTR [rax+0x0],esp
  40e22b:	add    BYTE PTR [rcx],al
  40e22d:	add    eax,0x32050002
  40e232:	add    DWORD PTR [rax],esi
  40e234:	add    DWORD PTR [rdi],eax
  40e236:	add    al,0x0
  40e238:	(bad)  
  40e239:	xor    al,BYTE PTR [rbx]
  40e23b:	xor    BYTE PTR [rdx],al
  40e23d:	(bad)  
  40e23e:	add    DWORD PTR [rax+0x1],esi
  40e241:	(bad)  
  40e242:	add    eax,DWORD PTR [rax]
  40e244:	(bad)  
  40e245:	rex.X add sil,BYTE PTR [rax]
  40e248:	add    DWORD PTR [rax+0x0],esp
  40e24b:	add    BYTE PTR [rcx],al
  40e24d:	(bad)  
  40e24e:	add    eax,DWORD PTR [rax]
  40e250:	(bad)  
  40e251:	rex.X add sil,BYTE PTR [rax]
  40e254:	add    DWORD PTR [rax+0x0],esp
  40e257:	add    BYTE PTR [rcx],al
  40e259:	or     BYTE PTR [rip+0x4420800],al        # 0x482ea5f
  40e25f:	xor    BYTE PTR [rbx],al
  40e261:	(bad)  
  40e262:	add    dh,BYTE PTR [rax+0x1]
  40e265:	push   rax
  40e266:	add    BYTE PTR [rax],al
  40e268:	add    DWORD PTR [rip+0xffffffffb2050002],eax        # 0xffffffffb245e270
  40e26e:	add    DWORD PTR [rax],esi
  40e270:	add    DWORD PTR [rdx],ecx
  40e272:	add    al,0x0
  40e274:	or     ch,BYTE PTR [rax+0x5]
  40e277:	add    BYTE PTR [rip+0x13001b2],al        # 0x170e42f
  40e27d:	add    al,0x1
  40e27f:	add    BYTE PTR [rdx+rax*2],al
  40e282:	add    BYTE PTR [rax],al
  40e284:	add    DWORD PTR [rcx*1+0xb982c00],ebp
  40e28b:	add    BYTE PTR [rbx],ah
  40e28d:	mov    BYTE PTR [rdx],cl
  40e28f:	add    BYTE PTR [rdx],bl
  40e291:	js     0x40e29c
  40e293:	add    BYTE PTR [rdx],dl
  40e295:	push   0x10a0008
  40e29a:	sbb    BYTE PTR [rax],al
  40e29c:	add    esi,DWORD PTR [rax]
  40e29e:	add    ah,BYTE PTR [rax+0x1]
  40e2a1:	jo     0x40e2a3
  40e2a3:	add    BYTE PTR [rcx],al
  40e2a5:	(bad)  
  40e2a6:	add    eax,DWORD PTR [rax]
  40e2a8:	(bad)  
  40e2a9:	rex.X add sil,BYTE PTR [rax]
  40e2ac:	add    DWORD PTR [rax+0x0],esp
  40e2af:	add    BYTE PTR [rcx],al
  40e2b1:	adc    BYTE PTR [rcx],cl
  40e2b3:	add    BYTE PTR [rax],dl
  40e2b5:	(bad)  
  40e2b6:	or     al,0x30
  40e2b8:	or     esp,DWORD PTR [rax+0xa]
  40e2bb:	jo     0x40e2c6
  40e2bd:	push   rax
  40e2be:	or     al,al
  40e2c0:	(bad)  
  40e2c1:	rol    BYTE PTR [rax+riz*8],1
  40e2c4:	add    dh,al
  40e2c6:	add    BYTE PTR [rax],al
  40e2c8:	add    DWORD PTR [rax],eax
  40e2ca:	add    BYTE PTR [rax],al
  40e2cc:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245e2d4
  40e2d2:	add    DWORD PTR [rax],esi
  40e2d4:	add    DWORD PTR [rdi+0x16],eax
  40e2d7:	add    BYTE PTR [rdi-0x48],al
  40e2da:	adc    al,BYTE PTR [rax]
  40e2dc:	ds test al,0x11
  40e2df:	add    BYTE PTR [rip+0x2c001098],dh        # 0x2c40f37d
  40e2e5:	mov    BYTE PTR [rdi],cl
  40e2e7:	add    BYTE PTR [rbx],ah
  40e2e9:	js     0x40e2f9
  40e2eb:	add    BYTE PTR [rbx],bl
  40e2ed:	push   0x113000d
  40e2f2:	(bad)  
  40e2f3:	add    BYTE PTR [rax+rsi*1],cl
  40e2f6:	or     esp,DWORD PTR [rax+0xa]
  40e2f9:	jo     0x40e304
  40e2fb:	push   rax
  40e2fc:	or     al,al
  40e2fe:	(bad)  
  40e2ff:	rol    BYTE PTR [rax+riz*8],1
  40e302:	add    dh,al
  40e304:	add    DWORD PTR [rdi+rax*1],ecx
  40e307:	add    BYTE PTR [rdx+rax*2],cl
  40e30a:	or     BYTE PTR [rax],dh
  40e30c:	(bad)  
  40e30d:	(bad)  
  40e30e:	(bad)  
  40e30f:	jo     0x40e316
  40e311:	push   rax
  40e312:	add    al,0xc0
  40e314:	add    dl,al
  40e316:	add    BYTE PTR [rax],al
  40e318:	add    DWORD PTR [rsi],ecx
  40e31a:	add    eax,0x6780e00
  40e31f:	add    BYTE PTR [rcx],cl
  40e321:	push   0xffffffffe2040005
  40e326:	add    BYTE PTR [rax],al
  40e328:	add    DWORD PTR [rcx+rax*1],eax
  40e32b:	add    BYTE PTR [rdx+rax*4],al
  40e32e:	add    BYTE PTR [rax],al
  40e330:	add    DWORD PTR [rax],edx
  40e332:	or     DWORD PTR [rax],eax
  40e334:	adc    BYTE PTR [rdx+0xc],al
  40e337:	xor    BYTE PTR [rbx],cl
  40e339:	(bad)  
  40e33a:	or     dh,BYTE PTR [rax+0x9]
  40e33d:	push   rax
  40e33e:	or     al,al
  40e340:	(bad)  
  40e341:	rol    BYTE PTR [rax+riz*8],1
  40e344:	add    dh,al
  40e346:	add    BYTE PTR [rax],al
  40e348:	add    DWORD PTR [rsp+rax*1],eax
  40e34b:	add    BYTE PTR [rax+rsi*1],al
  40e34e:	add    esp,DWORD PTR [rax+0x2]
  40e351:	jo     0x40e354
  40e353:	push   rax
  40e354:	add    DWORD PTR [rax],eax
  40e356:	add    BYTE PTR [rax],al
  40e358:	add    DWORD PTR [rax],eax
  40e35a:	add    BYTE PTR [rax],al
  40e35c:	add    DWORD PTR [rax],edx
  40e35e:	or     DWORD PTR [rax],eax
  40e360:	adc    BYTE PTR [rdx+0x600b300c],al
  40e366:	or     dh,BYTE PTR [rax+0x9]
  40e369:	push   rax
  40e36a:	or     al,al
  40e36c:	(bad)  
  40e36d:	rol    BYTE PTR [rax+riz*8],1
  40e370:	add    dh,al
  40e372:	add    BYTE PTR [rax],al
  40e374:	add    DWORD PTR [rsi],eax
  40e376:	add    eax,DWORD PTR [rax]
  40e378:	(bad)  
  40e379:	rex.X add sil,BYTE PTR [rax]
  40e37c:	add    DWORD PTR [rax+0x0],esp
  40e37f:	add    BYTE PTR [rcx],al
  40e381:	add    eax,0x32050002
  40e386:	add    DWORD PTR [rax],esi
  40e388:	add    DWORD PTR [rdi],eax
  40e38a:	add    al,0x0
  40e38c:	(bad)  
  40e38d:	xor    al,BYTE PTR [rbx]
  40e38f:	xor    BYTE PTR [rdx],al
  40e391:	(bad)  
  40e392:	add    DWORD PTR [rax+0x1],esi
  40e395:	add    eax,0x32050002
  40e39a:	add    DWORD PTR [rax],esi
  40e39c:	add    DWORD PTR [rax],ecx
  40e39e:	add    eax,0x4420800
  40e3a3:	xor    BYTE PTR [rbx],al
  40e3a5:	(bad)  
  40e3a6:	add    dh,BYTE PTR [rax+0x1]
  40e3a9:	push   rax
  40e3aa:	add    BYTE PTR [rax],al
  40e3ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245e3b4
  40e3b2:	add    DWORD PTR [rax],esi
  40e3b4:	add    DWORD PTR [rsi],ecx
  40e3b6:	or     BYTE PTR [rax],al
  40e3b8:	(bad)  
  40e3b9:	xor    cl,BYTE PTR [rdx]
  40e3bb:	xor    BYTE PTR [rcx],cl
  40e3bd:	(bad)  
  40e3be:	or     BYTE PTR [rax+0x7],dh
  40e3c1:	push   rax
  40e3c2:	(bad)  
  40e3c3:	rol    BYTE PTR [rax+rdx*8],0x2
  40e3c7:	loopne 0x40e3ca
  40e3c9:	or     BYTE PTR [rip+0x4420800],al        # 0x482ebcf
  40e3cf:	xor    BYTE PTR [rbx],al
  40e3d1:	(bad)  
  40e3d2:	add    dh,BYTE PTR [rax+0x1]
  40e3d5:	push   rax
  40e3d6:	add    BYTE PTR [rax],al
  40e3d8:	add    DWORD PTR [rdi+rax*1],ecx
  40e3db:	add    BYTE PTR [rdx+rax*2],cl
  40e3de:	or     BYTE PTR [rax],dh
  40e3e0:	(bad)  
  40e3e1:	(bad)  
  40e3e2:	(bad)  
  40e3e3:	jo     0x40e3ea
  40e3e5:	push   rax
  40e3e6:	add    al,0xc0
  40e3e8:	add    dl,al
  40e3ea:	add    BYTE PTR [rax],al
  40e3ec:	add    DWORD PTR [rax],eax
  40e3ee:	add    BYTE PTR [rax],al
  40e3f0:	add    DWORD PTR [rdi],eax
  40e3f2:	add    al,0x0
  40e3f4:	(bad)  
  40e3f5:	xor    al,BYTE PTR [rbx]
  40e3f7:	xor    BYTE PTR [rdx],al
  40e3f9:	(bad)  
  40e3fa:	add    DWORD PTR [rax+0x1],esi
  40e3fd:	(bad)  
  40e3fe:	add    eax,DWORD PTR [rax]
  40e400:	(bad)  
  40e401:	and    al,BYTE PTR [rdx]
  40e403:	xor    BYTE PTR [rcx],al
  40e405:	(bad)  
  40e406:	add    BYTE PTR [rax],al
  40e408:	add    DWORD PTR [rdi],eax
  40e40a:	add    al,0x0
  40e40c:	(bad)  
  40e40d:	xor    al,BYTE PTR [rbx]
  40e40f:	xor    BYTE PTR [rdx],al
  40e411:	(bad)  
  40e412:	add    DWORD PTR [rax+0x1],esi
  40e415:	add    BYTE PTR [rax],al
  40e417:	add    BYTE PTR [rcx],al
  40e419:	or     al,0x7
  40e41b:	add    BYTE PTR [rdx+rax*2],cl
  40e41e:	or     BYTE PTR [rax],dh
  40e420:	(bad)  
  40e421:	(bad)  
  40e422:	(bad)  
  40e423:	jo     0x40e42a
  40e425:	push   rax
  40e426:	add    al,0xc0
  40e428:	add    dl,al
  40e42a:	add    BYTE PTR [rax],al
  40e42c:	add    DWORD PTR [rsi+rax*1],ecx
  40e42f:	add    BYTE PTR [rax+rbp*2],cl
  40e432:	add    al,0x0
  40e434:	(bad)  
  40e435:	xchg   edx,eax
  40e436:	add    esi,DWORD PTR [rax]
  40e438:	add    ah,BYTE PTR [rax+0x1]
  40e43b:	jo     0x40e43e
  40e43d:	add    BYTE PTR [rax],al
  40e43f:	add    BYTE PTR [rcx],al
  40e441:	add    BYTE PTR [rax],al
  40e443:	add    BYTE PTR [rcx],al
  40e445:	add    BYTE PTR [rax],al
  40e447:	add    BYTE PTR [rcx],al
  40e449:	add    BYTE PTR [rax],al
  40e44b:	add    BYTE PTR [rcx],al
  40e44d:	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

000000000040f000 <.bss>:
	...

Disassembly of section .idata:

0000000000411000 <.idata>:
  411000:	push   rax
  411001:	adc    BYTE PTR [rcx],al
	...
  41100b:	add    al,ah
  41100d:	sbb    eax,DWORD PTR [rcx]
  41100f:	add    BYTE PTR [rax+0x13],dl
  411012:	add    DWORD PTR [rax],eax
  411014:	add    BYTE PTR [rcx],dl
  411016:	add    DWORD PTR [rax],eax
	...
  411020:	rex.WR sbb al,0x1
  411023:	add    BYTE PTR [rax],al
  411025:	adc    al,0x1
  411027:	add    al,al
  411029:	adc    DWORD PTR [rcx],eax
	...
  411033:	add    BYTE PTR [rax],ah
  411035:	sbb    eax,0x14c00001
  41103a:	add    DWORD PTR [rax],eax
	...
  411050:	push   rax
  411051:	(bad)  
  411052:	add    DWORD PTR [rax],eax
  411054:	add    BYTE PTR [rax],al
  411056:	add    BYTE PTR [rax],al
  411058:	pop    rsp
  411059:	(bad)  
  41105a:	add    DWORD PTR [rax],eax
  41105c:	add    BYTE PTR [rax],al
  41105e:	add    BYTE PTR [rax],al
  411060:	fs (bad) 
  411062:	add    DWORD PTR [rax],eax
  411064:	add    BYTE PTR [rax],al
  411066:	add    BYTE PTR [rax],al
  411068:	jo     0x411080
  41106a:	add    DWORD PTR [rax],eax
  41106c:	add    BYTE PTR [rax],al
  41106e:	add    BYTE PTR [rax],al
  411070:	jl     0x411088
  411072:	add    DWORD PTR [rax],eax
  411074:	add    BYTE PTR [rax],al
  411076:	add    BYTE PTR [rax],al
  411078:	mov    BYTE PTR [rsi],dl
  41107a:	add    DWORD PTR [rax],eax
  41107c:	add    BYTE PTR [rax],al
  41107e:	add    BYTE PTR [rax],al
  411080:	cwde   
  411081:	(bad)  
  411082:	add    DWORD PTR [rax],eax
  411084:	add    BYTE PTR [rax],al
  411086:	add    BYTE PTR [rax],al
  411088:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411089:	(bad)  
  41108a:	add    DWORD PTR [rax],eax
  41108c:	add    BYTE PTR [rax],al
  41108e:	add    BYTE PTR [rax],al
  411090:	mov    al,0x16
  411092:	add    DWORD PTR [rax],eax
  411094:	add    BYTE PTR [rax],al
  411096:	add    BYTE PTR [rax],al
  411098:	(bad)  
  411099:	(bad)  
  41109a:	add    DWORD PTR [rax],eax
  41109c:	add    BYTE PTR [rax],al
  41109e:	add    BYTE PTR [rax],al
  4110a0:	fcom   DWORD PTR [rsi]
  4110a2:	add    DWORD PTR [rax],eax
  4110a4:	add    BYTE PTR [rax],al
  4110a6:	add    BYTE PTR [rax],al
  4110a8:	in     al,dx
  4110a9:	(bad)  
  4110aa:	add    DWORD PTR [rax],eax
  4110ac:	add    BYTE PTR [rax],al
  4110ae:	add    BYTE PTR [rax],al
  4110b0:	add    BYTE PTR [rdi],dl
  4110b2:	add    DWORD PTR [rax],eax
  4110b4:	add    BYTE PTR [rax],al
  4110b6:	add    BYTE PTR [rax],al
  4110b8:	adc    al,0x17
  4110ba:	add    DWORD PTR [rax],eax
  4110bc:	add    BYTE PTR [rax],al
  4110be:	add    BYTE PTR [rax],al
  4110c0:	and    BYTE PTR [rdi],dl
  4110c2:	add    DWORD PTR [rax],eax
  4110c4:	add    BYTE PTR [rax],al
  4110c6:	add    BYTE PTR [rax],al
  4110c8:	sub    al,0x17
  4110ca:	add    DWORD PTR [rax],eax
  4110cc:	add    BYTE PTR [rax],al
  4110ce:	add    BYTE PTR [rax],al
  4110d0:	cmp    al,0x17
  4110d2:	add    DWORD PTR [rax],eax
  4110d4:	add    BYTE PTR [rax],al
  4110d6:	add    BYTE PTR [rax],al
  4110d8:	rex.WR (bad) 
  4110da:	add    DWORD PTR [rax],eax
  4110dc:	add    BYTE PTR [rax],al
  4110de:	add    BYTE PTR [rax],al
  4110e0:	(bad)  
  4110e1:	(bad)  
  4110e2:	add    DWORD PTR [rax],eax
  4110e4:	add    BYTE PTR [rax],al
  4110e6:	add    BYTE PTR [rax],al
  4110e8:	jo     0x411101
  4110ea:	add    DWORD PTR [rax],eax
  4110ec:	add    BYTE PTR [rax],al
  4110ee:	add    BYTE PTR [rax],al
  4110f0:	jl     0x411109
  4110f2:	add    DWORD PTR [rax],eax
	...
  411100:	mov    WORD PTR [rdi],ss
  411102:	add    DWORD PTR [rax],eax
  411104:	add    BYTE PTR [rax],al
  411106:	add    BYTE PTR [rax],al
  411108:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411109:	(bad)  
  41110a:	add    DWORD PTR [rax],eax
  41110c:	add    BYTE PTR [rax],al
  41110e:	add    BYTE PTR [rax],al
  411110:	mov    esp,0x117
  411115:	add    BYTE PTR [rax],al
  411117:	add    al,dl
  411119:	(bad)  
  41111a:	add    DWORD PTR [rax],eax
  41111c:	add    BYTE PTR [rax],al
  41111e:	add    BYTE PTR [rax],al
  411120:	out    0x17,al
  411122:	add    DWORD PTR [rax],eax
  411124:	add    BYTE PTR [rax],al
  411126:	add    BYTE PTR [rax],al
  411128:	cld    
  411129:	(bad)  
  41112a:	add    DWORD PTR [rax],eax
  41112c:	add    BYTE PTR [rax],al
  41112e:	add    BYTE PTR [rax],al
  411130:	or     al,0x18
  411132:	add    DWORD PTR [rax],eax
  411134:	add    BYTE PTR [rax],al
  411136:	add    BYTE PTR [rax],al
  411138:	(bad)  
  411139:	sbb    BYTE PTR [rcx],al
  41113b:	add    BYTE PTR [rax],al
  41113d:	add    BYTE PTR [rax],al
  41113f:	add    BYTE PTR [rax],bh
  411141:	sbb    BYTE PTR [rcx],al
  411143:	add    BYTE PTR [rax],al
  411145:	add    BYTE PTR [rax],al
  411147:	add    BYTE PTR [rax+0x18],cl
  41114a:	add    DWORD PTR [rax],eax
  41114c:	add    BYTE PTR [rax],al
  41114e:	add    BYTE PTR [rax],al
  411150:	sbb    BYTE PTR fs:[rcx],al
  411153:	add    BYTE PTR [rax],al
  411155:	add    BYTE PTR [rax],al
  411157:	add    BYTE PTR [rax+rbx*1+0x1],bh
  41115b:	add    BYTE PTR [rax],al
  41115d:	add    BYTE PTR [rax],al
  41115f:	add    BYTE PTR [rsi+0x118],dl
  411165:	add    BYTE PTR [rax],al
  411167:	add    BYTE PTR [rax+rbx*1+0x1],ch
  41116e:	add    BYTE PTR [rax],al
  411170:	rcr    BYTE PTR [rax],0x1
  411173:	add    BYTE PTR [rax],al
  411175:	add    BYTE PTR [rax],al
  411177:	add    dl,bl
  411179:	sbb    BYTE PTR [rcx],al
  41117b:	add    BYTE PTR [rax],al
  41117d:	add    BYTE PTR [rax],al
  41117f:	add    dh,ch
  411181:	sbb    BYTE PTR [rcx],al
  411183:	add    BYTE PTR [rax],al
  411185:	add    BYTE PTR [rax],al
  411187:	add    BYTE PTR [rcx+rbx*1],cl
  41118a:	add    DWORD PTR [rax],eax
  41118c:	add    BYTE PTR [rax],al
  41118e:	add    BYTE PTR [rax],al
  411190:	adc    al,0x19
  411192:	add    DWORD PTR [rax],eax
  411194:	add    BYTE PTR [rax],al
  411196:	add    BYTE PTR [rax],al
  411198:	sub    BYTE PTR [rcx],bl
  41119a:	add    DWORD PTR [rax],eax
  41119c:	add    BYTE PTR [rax],al
  41119e:	add    BYTE PTR [rax],al
  4111a0:	sbb    DWORD PTR ss:[rcx],eax
  4111a3:	add    BYTE PTR [rax],al
  4111a5:	add    BYTE PTR [rax],al
  4111a7:	add    BYTE PTR [rdx+0x19],dl
  4111aa:	add    DWORD PTR [rax],eax
  4111ac:	add    BYTE PTR [rax],al
  4111ae:	add    BYTE PTR [rax],al
  4111b0:	sbb    DWORD PTR fs:[rcx],eax
	...
  4111bf:	add    BYTE PTR [rcx+rbx*1+0x1],dh
  4111c3:	add    BYTE PTR [rax],al
  4111c5:	add    BYTE PTR [rax],al
  4111c7:	add    BYTE PTR [rcx+rbx*1+0x1],cl
  4111ce:	add    BYTE PTR [rax],al
  4111d0:	(bad)  
  4111d1:	sbb    DWORD PTR [rcx],eax
  4111d3:	add    BYTE PTR [rax],al
  4111d5:	add    BYTE PTR [rax],al
  4111d7:	add    BYTE PTR [rdx+0x119],ch
  4111dd:	add    BYTE PTR [rax],al
  4111df:	add    BYTE PTR [rsi+0x119],dh
  4111e5:	add    BYTE PTR [rax],al
  4111e7:	add    ah,al
  4111e9:	sbb    DWORD PTR [rcx],eax
  4111eb:	add    BYTE PTR [rax],al
  4111ed:	add    BYTE PTR [rax],al
  4111ef:	add    ah,dl
  4111f1:	sbb    DWORD PTR [rcx],eax
  4111f3:	add    BYTE PTR [rax],al
  4111f5:	add    BYTE PTR [rax],al
  4111f7:	add    dh,ah
  4111f9:	sbb    DWORD PTR [rcx],eax
  4111fb:	add    BYTE PTR [rax],al
  4111fd:	add    BYTE PTR [rax],al
  4111ff:	add    dl,bh
  411201:	sbb    DWORD PTR [rcx],eax
  411203:	add    BYTE PTR [rax],al
  411205:	add    BYTE PTR [rax],al
  411207:	add    BYTE PTR [rdx+rbx*1],al
  41120a:	add    DWORD PTR [rax],eax
  41120c:	add    BYTE PTR [rax],al
  41120e:	add    BYTE PTR [rax],al
  411210:	adc    bl,BYTE PTR [rdx]
  411212:	add    DWORD PTR [rax],eax
  411214:	add    BYTE PTR [rax],al
  411216:	add    BYTE PTR [rax],al
  411218:	sbb    al,0x1a
  41121a:	add    DWORD PTR [rax],eax
  41121c:	add    BYTE PTR [rax],al
  41121e:	add    BYTE PTR [rax],al
  411220:	sbb    al,BYTE PTR es:[rcx]
  411223:	add    BYTE PTR [rax],al
  411225:	add    BYTE PTR [rax],al
  411227:	add    BYTE PTR [rax],dh
  411229:	sbb    al,BYTE PTR [rcx]
  41122b:	add    BYTE PTR [rax],al
  41122d:	add    BYTE PTR [rax],al
  41122f:	add    BYTE PTR [rdx+rbx*1],bh
  411232:	add    DWORD PTR [rax],eax
  411234:	add    BYTE PTR [rax],al
  411236:	add    BYTE PTR [rax],al
  411238:	sbb    r8b,BYTE PTR [rcx]
  41123b:	add    BYTE PTR [rax],al
  41123d:	add    BYTE PTR [rax],al
  41123f:	add    BYTE PTR [rsi+0x1a],cl
  411242:	add    DWORD PTR [rax],eax
  411244:	add    BYTE PTR [rax],al
  411246:	add    BYTE PTR [rax],al
  411248:	pop    rax
  411249:	sbb    al,BYTE PTR [rcx]
  41124b:	add    BYTE PTR [rax],al
  41124d:	add    BYTE PTR [rax],al
  41124f:	add    BYTE PTR [rax+0x1a],ah
  411252:	add    DWORD PTR [rax],eax
  411254:	add    BYTE PTR [rax],al
  411256:	add    BYTE PTR [rax],al
  411258:	push   0x11a
  41125d:	add    BYTE PTR [rax],al
  41125f:	add    BYTE PTR [rdx+0x1a],dh
  411262:	add    DWORD PTR [rax],eax
  411264:	add    BYTE PTR [rax],al
  411266:	add    BYTE PTR [rax],al
  411268:	jp     0x411284
  41126a:	add    DWORD PTR [rax],eax
  41126c:	add    BYTE PTR [rax],al
  41126e:	add    BYTE PTR [rax],al
  411270:	test   BYTE PTR [rdx],bl
  411272:	add    DWORD PTR [rax],eax
  411274:	add    BYTE PTR [rax],al
  411276:	add    BYTE PTR [rax],al
  411278:	mov    WORD PTR [rdx],ds
  41127a:	add    DWORD PTR [rax],eax
  41127c:	add    BYTE PTR [rax],al
  41127e:	add    BYTE PTR [rax],al
  411280:	xchg   esp,eax
  411281:	sbb    al,BYTE PTR [rcx]
  411283:	add    BYTE PTR [rax],al
  411285:	add    BYTE PTR [rax],al
  411287:	add    BYTE PTR [rdx+rbx*1+0x1],bl
  41128e:	add    BYTE PTR [rax],al
  411290:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411291:	sbb    al,BYTE PTR [rcx]
  411293:	add    BYTE PTR [rax],al
  411295:	add    BYTE PTR [rax],al
  411297:	add    BYTE PTR [rsi+0x11a],ch
  41129d:	add    BYTE PTR [rax],al
  41129f:	add    BYTE PTR [rsi+0x11a],dh
  4112a5:	add    BYTE PTR [rax],al
  4112a7:	add    BYTE PTR [rsi+0x11a],bh
  4112ad:	add    BYTE PTR [rax],al
  4112af:	add    dh,al
  4112b1:	sbb    al,BYTE PTR [rcx]
  4112b3:	add    BYTE PTR [rax],al
  4112b5:	add    BYTE PTR [rax],al
  4112b7:	add    al,dl
  4112b9:	sbb    al,BYTE PTR [rcx]
  4112bb:	add    BYTE PTR [rax],al
  4112bd:	add    BYTE PTR [rax],al
  4112bf:	add    dh,bl
  4112c1:	sbb    al,BYTE PTR [rcx]
  4112c3:	add    BYTE PTR [rax],al
  4112c5:	add    BYTE PTR [rax],al
  4112c7:	add    al,ch
  4112c9:	sbb    al,BYTE PTR [rcx]
  4112cb:	add    BYTE PTR [rax],al
  4112cd:	add    BYTE PTR [rax],al
  4112cf:	add    dl,dh
  4112d1:	sbb    al,BYTE PTR [rcx]
  4112d3:	add    BYTE PTR [rax],al
  4112d5:	add    BYTE PTR [rax],al
  4112d7:	add    ah,bh
  4112d9:	sbb    al,BYTE PTR [rcx]
  4112db:	add    BYTE PTR [rax],al
  4112dd:	add    BYTE PTR [rax],al
  4112df:	add    BYTE PTR [rsi],al
  4112e1:	sbb    eax,DWORD PTR [rcx]
  4112e3:	add    BYTE PTR [rax],al
  4112e5:	add    BYTE PTR [rax],al
  4112e7:	add    BYTE PTR [rsi],cl
  4112e9:	sbb    eax,DWORD PTR [rcx]
  4112eb:	add    BYTE PTR [rax],al
  4112ed:	add    BYTE PTR [rax],al
  4112ef:	add    BYTE PTR [rax],bl
  4112f1:	sbb    eax,DWORD PTR [rcx]
  4112f3:	add    BYTE PTR [rax],al
  4112f5:	add    BYTE PTR [rax],al
  4112f7:	add    BYTE PTR [rdx],ah
  4112f9:	sbb    eax,DWORD PTR [rcx]
  4112fb:	add    BYTE PTR [rax],al
  4112fd:	add    BYTE PTR [rax],al
  4112ff:	add    BYTE PTR [rbx+rbx*1],ch
  411302:	add    DWORD PTR [rax],eax
  411304:	add    BYTE PTR [rax],al
  411306:	add    BYTE PTR [rax],al
  411308:	sbb    eax,DWORD PTR ss:[rcx]
  41130b:	add    BYTE PTR [rax],al
  41130d:	add    BYTE PTR [rax],al
  41130f:	add    BYTE PTR [rax+0x1b],al
  411312:	add    DWORD PTR [rax],eax
  411314:	add    BYTE PTR [rax],al
  411316:	add    BYTE PTR [rax],al
  411318:	rex.WX sbb rax,QWORD PTR [rcx]
  41131b:	add    BYTE PTR [rax],al
  41131d:	add    BYTE PTR [rax],al
  41131f:	add    BYTE PTR [rbx+rbx*1+0x1],dl
  411323:	add    BYTE PTR [rax],al
  411325:	add    BYTE PTR [rax],al
  411327:	add    BYTE PTR [rsi+0x1b],bl
  41132a:	add    DWORD PTR [rax],eax
  41132c:	add    BYTE PTR [rax],al
  41132e:	add    BYTE PTR [rax],al
  411330:	push   0x11b
  411335:	add    BYTE PTR [rax],al
  411337:	add    BYTE PTR [rbx+rbx*1+0x1],dh
  41133b:	add    BYTE PTR [rax],al
  41133d:	add    BYTE PTR [rax],al
  41133f:	add    BYTE PTR [rax+0x11b],al
	...
  41134d:	add    BYTE PTR [rax],al
  41134f:	add    BYTE PTR [rax+0x16],dl
  411352:	add    DWORD PTR [rax],eax
  411354:	add    BYTE PTR [rax],al
  411356:	add    BYTE PTR [rax],al
  411358:	pop    rsp
  411359:	(bad)  
  41135a:	add    DWORD PTR [rax],eax
  41135c:	add    BYTE PTR [rax],al
  41135e:	add    BYTE PTR [rax],al
  411360:	fs (bad) 
  411362:	add    DWORD PTR [rax],eax
  411364:	add    BYTE PTR [rax],al
  411366:	add    BYTE PTR [rax],al
  411368:	jo     0x411380
  41136a:	add    DWORD PTR [rax],eax
  41136c:	add    BYTE PTR [rax],al
  41136e:	add    BYTE PTR [rax],al
  411370:	jl     0x411388
  411372:	add    DWORD PTR [rax],eax
  411374:	add    BYTE PTR [rax],al
  411376:	add    BYTE PTR [rax],al
  411378:	mov    BYTE PTR [rsi],dl
  41137a:	add    DWORD PTR [rax],eax
  41137c:	add    BYTE PTR [rax],al
  41137e:	add    BYTE PTR [rax],al
  411380:	cwde   
  411381:	(bad)  
  411382:	add    DWORD PTR [rax],eax
  411384:	add    BYTE PTR [rax],al
  411386:	add    BYTE PTR [rax],al
  411388:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411389:	(bad)  
  41138a:	add    DWORD PTR [rax],eax
  41138c:	add    BYTE PTR [rax],al
  41138e:	add    BYTE PTR [rax],al
  411390:	mov    al,0x16
  411392:	add    DWORD PTR [rax],eax
  411394:	add    BYTE PTR [rax],al
  411396:	add    BYTE PTR [rax],al
  411398:	(bad)  
  411399:	(bad)  
  41139a:	add    DWORD PTR [rax],eax
  41139c:	add    BYTE PTR [rax],al
  41139e:	add    BYTE PTR [rax],al
  4113a0:	fcom   DWORD PTR [rsi]
  4113a2:	add    DWORD PTR [rax],eax
  4113a4:	add    BYTE PTR [rax],al
  4113a6:	add    BYTE PTR [rax],al
  4113a8:	in     al,dx
  4113a9:	(bad)  
  4113aa:	add    DWORD PTR [rax],eax
  4113ac:	add    BYTE PTR [rax],al
  4113ae:	add    BYTE PTR [rax],al
  4113b0:	add    BYTE PTR [rdi],dl
  4113b2:	add    DWORD PTR [rax],eax
  4113b4:	add    BYTE PTR [rax],al
  4113b6:	add    BYTE PTR [rax],al
  4113b8:	adc    al,0x17
  4113ba:	add    DWORD PTR [rax],eax
  4113bc:	add    BYTE PTR [rax],al
  4113be:	add    BYTE PTR [rax],al
  4113c0:	and    BYTE PTR [rdi],dl
  4113c2:	add    DWORD PTR [rax],eax
  4113c4:	add    BYTE PTR [rax],al
  4113c6:	add    BYTE PTR [rax],al
  4113c8:	sub    al,0x17
  4113ca:	add    DWORD PTR [rax],eax
  4113cc:	add    BYTE PTR [rax],al
  4113ce:	add    BYTE PTR [rax],al
  4113d0:	cmp    al,0x17
  4113d2:	add    DWORD PTR [rax],eax
  4113d4:	add    BYTE PTR [rax],al
  4113d6:	add    BYTE PTR [rax],al
  4113d8:	rex.WR (bad) 
  4113da:	add    DWORD PTR [rax],eax
  4113dc:	add    BYTE PTR [rax],al
  4113de:	add    BYTE PTR [rax],al
  4113e0:	(bad)  
  4113e1:	(bad)  
  4113e2:	add    DWORD PTR [rax],eax
  4113e4:	add    BYTE PTR [rax],al
  4113e6:	add    BYTE PTR [rax],al
  4113e8:	jo     0x411401
  4113ea:	add    DWORD PTR [rax],eax
  4113ec:	add    BYTE PTR [rax],al
  4113ee:	add    BYTE PTR [rax],al
  4113f0:	jl     0x411409
  4113f2:	add    DWORD PTR [rax],eax
	...
  411400:	mov    WORD PTR [rdi],ss
  411402:	add    DWORD PTR [rax],eax
  411404:	add    BYTE PTR [rax],al
  411406:	add    BYTE PTR [rax],al
  411408:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411409:	(bad)  
  41140a:	add    DWORD PTR [rax],eax
  41140c:	add    BYTE PTR [rax],al
  41140e:	add    BYTE PTR [rax],al
  411410:	mov    esp,0x117
  411415:	add    BYTE PTR [rax],al
  411417:	add    al,dl
  411419:	(bad)  
  41141a:	add    DWORD PTR [rax],eax
  41141c:	add    BYTE PTR [rax],al
  41141e:	add    BYTE PTR [rax],al
  411420:	out    0x17,al
  411422:	add    DWORD PTR [rax],eax
  411424:	add    BYTE PTR [rax],al
  411426:	add    BYTE PTR [rax],al
  411428:	cld    
  411429:	(bad)  
  41142a:	add    DWORD PTR [rax],eax
  41142c:	add    BYTE PTR [rax],al
  41142e:	add    BYTE PTR [rax],al
  411430:	or     al,0x18
  411432:	add    DWORD PTR [rax],eax
  411434:	add    BYTE PTR [rax],al
  411436:	add    BYTE PTR [rax],al
  411438:	(bad)  
  411439:	sbb    BYTE PTR [rcx],al
  41143b:	add    BYTE PTR [rax],al
  41143d:	add    BYTE PTR [rax],al
  41143f:	add    BYTE PTR [rax],bh
  411441:	sbb    BYTE PTR [rcx],al
  411443:	add    BYTE PTR [rax],al
  411445:	add    BYTE PTR [rax],al
  411447:	add    BYTE PTR [rax+0x18],cl
  41144a:	add    DWORD PTR [rax],eax
  41144c:	add    BYTE PTR [rax],al
  41144e:	add    BYTE PTR [rax],al
  411450:	sbb    BYTE PTR fs:[rcx],al
  411453:	add    BYTE PTR [rax],al
  411455:	add    BYTE PTR [rax],al
  411457:	add    BYTE PTR [rax+rbx*1+0x1],bh
  41145b:	add    BYTE PTR [rax],al
  41145d:	add    BYTE PTR [rax],al
  41145f:	add    BYTE PTR [rsi+0x118],dl
  411465:	add    BYTE PTR [rax],al
  411467:	add    BYTE PTR [rax+rbx*1+0x1],ch
  41146e:	add    BYTE PTR [rax],al
  411470:	rcr    BYTE PTR [rax],0x1
  411473:	add    BYTE PTR [rax],al
  411475:	add    BYTE PTR [rax],al
  411477:	add    dl,bl
  411479:	sbb    BYTE PTR [rcx],al
  41147b:	add    BYTE PTR [rax],al
  41147d:	add    BYTE PTR [rax],al
  41147f:	add    dh,ch
  411481:	sbb    BYTE PTR [rcx],al
  411483:	add    BYTE PTR [rax],al
  411485:	add    BYTE PTR [rax],al
  411487:	add    BYTE PTR [rcx+rbx*1],cl
  41148a:	add    DWORD PTR [rax],eax
  41148c:	add    BYTE PTR [rax],al
  41148e:	add    BYTE PTR [rax],al
  411490:	adc    al,0x19
  411492:	add    DWORD PTR [rax],eax
  411494:	add    BYTE PTR [rax],al
  411496:	add    BYTE PTR [rax],al
  411498:	sub    BYTE PTR [rcx],bl
  41149a:	add    DWORD PTR [rax],eax
  41149c:	add    BYTE PTR [rax],al
  41149e:	add    BYTE PTR [rax],al
  4114a0:	sbb    DWORD PTR ss:[rcx],eax
  4114a3:	add    BYTE PTR [rax],al
  4114a5:	add    BYTE PTR [rax],al
  4114a7:	add    BYTE PTR [rdx+0x19],dl
  4114aa:	add    DWORD PTR [rax],eax
  4114ac:	add    BYTE PTR [rax],al
  4114ae:	add    BYTE PTR [rax],al
  4114b0:	sbb    DWORD PTR fs:[rcx],eax
	...
  4114bf:	add    BYTE PTR [rcx+rbx*1+0x1],dh
  4114c3:	add    BYTE PTR [rax],al
  4114c5:	add    BYTE PTR [rax],al
  4114c7:	add    BYTE PTR [rcx+rbx*1+0x1],cl
  4114ce:	add    BYTE PTR [rax],al
  4114d0:	(bad)  
  4114d1:	sbb    DWORD PTR [rcx],eax
  4114d3:	add    BYTE PTR [rax],al
  4114d5:	add    BYTE PTR [rax],al
  4114d7:	add    BYTE PTR [rdx+0x119],ch
  4114dd:	add    BYTE PTR [rax],al
  4114df:	add    BYTE PTR [rsi+0x119],dh
  4114e5:	add    BYTE PTR [rax],al
  4114e7:	add    ah,al
  4114e9:	sbb    DWORD PTR [rcx],eax
  4114eb:	add    BYTE PTR [rax],al
  4114ed:	add    BYTE PTR [rax],al
  4114ef:	add    ah,dl
  4114f1:	sbb    DWORD PTR [rcx],eax
  4114f3:	add    BYTE PTR [rax],al
  4114f5:	add    BYTE PTR [rax],al
  4114f7:	add    dh,ah
  4114f9:	sbb    DWORD PTR [rcx],eax
  4114fb:	add    BYTE PTR [rax],al
  4114fd:	add    BYTE PTR [rax],al
  4114ff:	add    dl,bh
  411501:	sbb    DWORD PTR [rcx],eax
  411503:	add    BYTE PTR [rax],al
  411505:	add    BYTE PTR [rax],al
  411507:	add    BYTE PTR [rdx+rbx*1],al
  41150a:	add    DWORD PTR [rax],eax
  41150c:	add    BYTE PTR [rax],al
  41150e:	add    BYTE PTR [rax],al
  411510:	adc    bl,BYTE PTR [rdx]
  411512:	add    DWORD PTR [rax],eax
  411514:	add    BYTE PTR [rax],al
  411516:	add    BYTE PTR [rax],al
  411518:	sbb    al,0x1a
  41151a:	add    DWORD PTR [rax],eax
  41151c:	add    BYTE PTR [rax],al
  41151e:	add    BYTE PTR [rax],al
  411520:	sbb    al,BYTE PTR es:[rcx]
  411523:	add    BYTE PTR [rax],al
  411525:	add    BYTE PTR [rax],al
  411527:	add    BYTE PTR [rax],dh
  411529:	sbb    al,BYTE PTR [rcx]
  41152b:	add    BYTE PTR [rax],al
  41152d:	add    BYTE PTR [rax],al
  41152f:	add    BYTE PTR [rdx+rbx*1],bh
  411532:	add    DWORD PTR [rax],eax
  411534:	add    BYTE PTR [rax],al
  411536:	add    BYTE PTR [rax],al
  411538:	sbb    r8b,BYTE PTR [rcx]
  41153b:	add    BYTE PTR [rax],al
  41153d:	add    BYTE PTR [rax],al
  41153f:	add    BYTE PTR [rsi+0x1a],cl
  411542:	add    DWORD PTR [rax],eax
  411544:	add    BYTE PTR [rax],al
  411546:	add    BYTE PTR [rax],al
  411548:	pop    rax
  411549:	sbb    al,BYTE PTR [rcx]
  41154b:	add    BYTE PTR [rax],al
  41154d:	add    BYTE PTR [rax],al
  41154f:	add    BYTE PTR [rax+0x1a],ah
  411552:	add    DWORD PTR [rax],eax
  411554:	add    BYTE PTR [rax],al
  411556:	add    BYTE PTR [rax],al
  411558:	push   0x11a
  41155d:	add    BYTE PTR [rax],al
  41155f:	add    BYTE PTR [rdx+0x1a],dh
  411562:	add    DWORD PTR [rax],eax
  411564:	add    BYTE PTR [rax],al
  411566:	add    BYTE PTR [rax],al
  411568:	jp     0x411584
  41156a:	add    DWORD PTR [rax],eax
  41156c:	add    BYTE PTR [rax],al
  41156e:	add    BYTE PTR [rax],al
  411570:	test   BYTE PTR [rdx],bl
  411572:	add    DWORD PTR [rax],eax
  411574:	add    BYTE PTR [rax],al
  411576:	add    BYTE PTR [rax],al
  411578:	mov    WORD PTR [rdx],ds
  41157a:	add    DWORD PTR [rax],eax
  41157c:	add    BYTE PTR [rax],al
  41157e:	add    BYTE PTR [rax],al
  411580:	xchg   esp,eax
  411581:	sbb    al,BYTE PTR [rcx]
  411583:	add    BYTE PTR [rax],al
  411585:	add    BYTE PTR [rax],al
  411587:	add    BYTE PTR [rdx+rbx*1+0x1],bl
  41158e:	add    BYTE PTR [rax],al
  411590:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411591:	sbb    al,BYTE PTR [rcx]
  411593:	add    BYTE PTR [rax],al
  411595:	add    BYTE PTR [rax],al
  411597:	add    BYTE PTR [rsi+0x11a],ch
  41159d:	add    BYTE PTR [rax],al
  41159f:	add    BYTE PTR [rsi+0x11a],dh
  4115a5:	add    BYTE PTR [rax],al
  4115a7:	add    BYTE PTR [rsi+0x11a],bh
  4115ad:	add    BYTE PTR [rax],al
  4115af:	add    dh,al
  4115b1:	sbb    al,BYTE PTR [rcx]
  4115b3:	add    BYTE PTR [rax],al
  4115b5:	add    BYTE PTR [rax],al
  4115b7:	add    al,dl
  4115b9:	sbb    al,BYTE PTR [rcx]
  4115bb:	add    BYTE PTR [rax],al
  4115bd:	add    BYTE PTR [rax],al
  4115bf:	add    dh,bl
  4115c1:	sbb    al,BYTE PTR [rcx]
  4115c3:	add    BYTE PTR [rax],al
  4115c5:	add    BYTE PTR [rax],al
  4115c7:	add    al,ch
  4115c9:	sbb    al,BYTE PTR [rcx]
  4115cb:	add    BYTE PTR [rax],al
  4115cd:	add    BYTE PTR [rax],al
  4115cf:	add    dl,dh
  4115d1:	sbb    al,BYTE PTR [rcx]
  4115d3:	add    BYTE PTR [rax],al
  4115d5:	add    BYTE PTR [rax],al
  4115d7:	add    ah,bh
  4115d9:	sbb    al,BYTE PTR [rcx]
  4115db:	add    BYTE PTR [rax],al
  4115dd:	add    BYTE PTR [rax],al
  4115df:	add    BYTE PTR [rsi],al
  4115e1:	sbb    eax,DWORD PTR [rcx]
  4115e3:	add    BYTE PTR [rax],al
  4115e5:	add    BYTE PTR [rax],al
  4115e7:	add    BYTE PTR [rsi],cl
  4115e9:	sbb    eax,DWORD PTR [rcx]
  4115eb:	add    BYTE PTR [rax],al
  4115ed:	add    BYTE PTR [rax],al
  4115ef:	add    BYTE PTR [rax],bl
  4115f1:	sbb    eax,DWORD PTR [rcx]
  4115f3:	add    BYTE PTR [rax],al
  4115f5:	add    BYTE PTR [rax],al
  4115f7:	add    BYTE PTR [rdx],ah
  4115f9:	sbb    eax,DWORD PTR [rcx]
  4115fb:	add    BYTE PTR [rax],al
  4115fd:	add    BYTE PTR [rax],al
  4115ff:	add    BYTE PTR [rbx+rbx*1],ch
  411602:	add    DWORD PTR [rax],eax
  411604:	add    BYTE PTR [rax],al
  411606:	add    BYTE PTR [rax],al
  411608:	sbb    eax,DWORD PTR ss:[rcx]
  41160b:	add    BYTE PTR [rax],al
  41160d:	add    BYTE PTR [rax],al
  41160f:	add    BYTE PTR [rax+0x1b],al
  411612:	add    DWORD PTR [rax],eax
  411614:	add    BYTE PTR [rax],al
  411616:	add    BYTE PTR [rax],al
  411618:	rex.WX sbb rax,QWORD PTR [rcx]
  41161b:	add    BYTE PTR [rax],al
  41161d:	add    BYTE PTR [rax],al
  41161f:	add    BYTE PTR [rbx+rbx*1+0x1],dl
  411623:	add    BYTE PTR [rax],al
  411625:	add    BYTE PTR [rax],al
  411627:	add    BYTE PTR [rsi+0x1b],bl
  41162a:	add    DWORD PTR [rax],eax
  41162c:	add    BYTE PTR [rax],al
  41162e:	add    BYTE PTR [rax],al
  411630:	push   0x11b
  411635:	add    BYTE PTR [rax],al
  411637:	add    BYTE PTR [rbx+rbx*1+0x1],dh
  41163b:	add    BYTE PTR [rax],al
  41163d:	add    BYTE PTR [rax],al
  41163f:	add    BYTE PTR [rax+0x11b],al
	...
  41164d:	add    BYTE PTR [rax],al
  41164f:	add    BYTE PTR [rbx],cl
  411651:	add    BYTE PTR [rbp+rbp*2+0x73],ah
  411655:	je     0x4116c6
  411657:	jb     0x411659
  411659:	add    BYTE PTR [rax],al
  41165b:	add    BYTE PTR [rip+0x656d6500],cl        # 0x65ae7b61
  411661:	jae    0x4116d6
  411663:	add    BYTE PTR [rsi],cl
  411665:	add    BYTE PTR [rbp+0x6d],ah
  411668:	gs jae 0x4116de
  41166b:	pop    rdi
  41166c:	fs (bad) 
  41166e:	je     0x411670
  411670:	sub    DWORD PTR [rax],eax
  411672:	ins    DWORD PTR es:[rdi],dx
  411673:	imul   ebx,DWORD PTR [rdi+0x63],0x68
  411677:	gs (bad) 
  411679:	jns    0x41167b
  41167b:	add    BYTE PTR [rbp+0x5f6a7000],dl
  411681:	gs jb  0x4116f6
  411684:	outs   dx,BYTE PTR ds:[rsi]
  411685:	outs   dx,DWORD PTR ds:[rsi]
  411686:	add    BYTE PTR [rax],al
  411688:	(bad)  
  411689:	add    BYTE PTR [rax+0x6a],dh
  41168c:	pop    rdi
  41168d:	data16 (bad) 
  41168f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  411693:	jae    0x411695
  411695:	add    BYTE PTR [rax],al
  411697:	add    BYTE PTR [rcx+0x5f6a7000],ah
  41169d:	data16 jb 0x411705
  4116a0:	add    BYTE PTR gs:[rax],al
  4116a3:	add    BYTE PTR [rdx+0x5f6a7000],ah
  4116a9:	data16 ja 0x411710
  4116ac:	add    BYTE PTR [rax],al
  4116ae:	add    BYTE PTR [rax],al
  4116b0:	mov    eax,0x5f6a7000
  4116b5:	addr32 gs je 0x411718
  4116b9:	fs (bad) 
  4116bb:	je     0x411732
  4116bd:	ins    DWORD PTR es:[rdi],dx
  4116be:	jae    0x41171f
  4116c0:	jb     0x411727
  4116c2:	data16 add BYTE PTR [rax+rax*1+0x675f6a70],bh
  4116ca:	gs je  0x41172c
  4116cd:	gs ins BYTE PTR es:[rdi],dx
  4116cf:	ins    BYTE PTR es:[rdi],dx
  4116d0:	jo     0x411745
  4116d2:	pop    rdi
  4116d3:	jb     0x41173a
  4116d5:	data16 add BYTE PTR [rax],al
  4116d8:	mov    esi,0x5f6a7000
  4116dd:	addr32 gs je 0x411740
  4116e1:	ins    BYTE PTR es:[rdi],dx
  4116e2:	imul   esi,DWORD PTR [rbx+0x74],0x6665725f
  4116e9:	add    BYTE PTR [rax],al
  4116eb:	add    al,al
  4116ed:	add    BYTE PTR [rax+0x6a],dh
  4116f0:	pop    rdi
  4116f1:	addr32 gs je 0x411754
  4116f5:	jb     0x41175c
  4116f7:	ins    BYTE PTR es:[rdi],dx
  4116f8:	gs (bad) 
  4116fa:	jae    0x411761
  4116fc:	add    BYTE PTR [rax],al
  4116fe:	add    BYTE PTR [rax],al
  411700:	ret    
  411701:	add    BYTE PTR [rax+0x6a],dh
  411704:	pop    rdi
  411705:	addr32 gs je 0x411768
  411709:	jne    0x411779
  41170b:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x666572
  411713:	add    al,ah
  411715:	add    BYTE PTR [rax+0x6a],dh
  411718:	pop    rdi
  411719:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  411720:	in     eax,0x0
  411722:	jo     0x41178e
  411724:	pop    rdi
  411725:	imul   ebp,DWORD PTR [rsi+0x76],0x0
  41172c:	(bad)  
  41172d:	add    BYTE PTR [rax+0x6a],dh
  411730:	pop    rdi
  411731:	imul   esi,DWORD PTR [rbx+0x5f],0x6c74616c
  411738:	outs   dx,DWORD PTR ds:[rsi]
  411739:	outs   dx,BYTE PTR ds:[rsi]
  41173a:	add    BYTE PTR [ebp+0x1],dl
  41173e:	jo     0x4117aa
  411740:	pop    rdi
  411741:	jo     0x4117b5
  411743:	pop    rdi
  411744:	ins    BYTE PTR es:[rdi],dx
  411745:	imul   esi,DWORD PTR [rbx+0x74],0x0
  41174c:	or     BYTE PTR [rdx],al
  41174e:	jo     0x4117ba
  411750:	pop    rdi
  411751:	jb     0x4117c8
  411753:	outs   dx,BYTE PTR ds:[rsi]
  411754:	pop    rdi
  411755:	jae    0x4117bc
  411757:	ins    BYTE PTR es:[rdi],dx
  411758:	data16 je 0x4117c0
  41175b:	jae    0x4117d1
  41175d:	jae    0x41175f
  41175f:	add    BYTE PTR [rcx+0x5f6a7002],ch
  411765:	jae    0x4117db
  411767:	jb     0x4117ce
  411769:	jb     0x4117dd
  41176b:	outs   dx,BYTE PTR ds:[rsi]
  41176c:	outs   dx,DWORD PTR ds:[rsi]
  41176d:	add    BYTE PTR [rax],al
  41176f:	add    dl,ch
  411771:	add    dh,BYTE PTR [rdx+0x74]
  411774:	outs   dx,DWORD PTR ds:[rsi]
  411775:	fs ins DWORD PTR es:[rdi],dx
  411777:	jae    0x411779
  411779:	add    BYTE PTR [rax],al
  41177b:	add    bl,ch
  41177d:	add    dh,BYTE PTR [rbx+0x65]
  411780:	je     0x4117e1
  411782:	jb     0x4117f8
  411784:	outs   dx,DWORD PTR ds:[rsi]
  411785:	fs ins DWORD PTR es:[rdi],dx
  411787:	jae    0x411789
  411789:	add    BYTE PTR [rax],al
  41178b:	add    al,bl
  41178d:	add    BYTE PTR [rbp+riz*2+0x6c],al
  411791:	gs je  0x4117f9
  411794:	rex.XB jb 0x411800
  411797:	je     0x411802
  411799:	movsxd esp,DWORD PTR [rcx+0x6c]
  41179c:	push   rbx
  41179d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4117a2:	outs   dx,BYTE PTR ds:[rsi]
  4117a3:	add    al,bh
  4117a5:	add    BYTE PTR [rbp+0x6e],al
  4117a8:	je     0x41180f
  4117aa:	jb     0x4117ef
  4117ac:	jb     0x411817
  4117ae:	je     0x411819
  4117b0:	movsxd esp,DWORD PTR [rcx+0x6c]
  4117b3:	push   rbx
  4117b4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4117b9:	outs   dx,BYTE PTR ds:[rsi]
  4117ba:	add    BYTE PTR [rax],al
  4117bc:	int    0x1
  4117be:	rex.RXB
  4117bf:	gs je  0x411805
  4117c2:	jne    0x411836
  4117c4:	jb     0x41182b
  4117c6:	outs   dx,BYTE PTR ds:[rsi]
  4117c7:	je     0x411819
  4117c9:	jb     0x41183a
  4117cb:	movsxd esp,DWORD PTR [rbp+0x73]
  4117ce:	jae    0x4117d0
  4117d0:	(bad)  
  4117d1:	add    DWORD PTR [rdi+0x65],eax
  4117d4:	je     0x411819
  4117d6:	jne    0x41184a
  4117d8:	jb     0x41183f
  4117da:	outs   dx,BYTE PTR ds:[rsi]
  4117db:	je     0x41182d
  4117dd:	jb     0x41184e
  4117df:	movsxd esp,DWORD PTR [rbp+0x73]
  4117e2:	jae    0x41182d
  4117e4:	fs add dl,dl
  4117e7:	add    DWORD PTR [rdi+0x65],eax
  4117ea:	je     0x41182f
  4117ec:	jne    0x411860
  4117ee:	jb     0x411855
  4117f0:	outs   dx,BYTE PTR ds:[rsi]
  4117f1:	je     0x411847
  4117f3:	push   0x64616572
  4117f8:	rex.WB
  4117f9:	add    BYTE PTR fs:[rax],al
  4117fc:	adc    BYTE PTR [rdx],al
  4117fe:	rex.RXB
  4117ff:	gs je  0x41184e
  411802:	(bad)  
  411803:	jae    0x411879
  411805:	rex.RB jb 0x41187a
  411808:	outs   dx,DWORD PTR ds:[rsi]
  411809:	jb     0x41180b
  41180b:	add    BYTE PTR [rbx+0x2],dh
  41180e:	rex.RXB
  41180f:	gs je  0x411865
  411812:	je     0x411875
  411814:	jb     0x41188a
  411816:	jne    0x411888
  411818:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41181a:	outs   dx,WORD PTR ds:[rsi]
  41181c:	add    BYTE PTR [r10+0x74654702],cl
  411823:	push   rbx
  411824:	jns    0x411899
  411826:	je     0x41188d
  411828:	ins    DWORD PTR es:[rdi],dx
  411829:	push   rsp
  41182a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  411831:	ins    BYTE PTR es:[rdi],dx
  411832:	gs push rsp
  411834:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  41183b:	gs je  0x411892
  41183e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  411845:	je     0x411847
  411847:	add    cl,bh
  411849:	add    cl,BYTE PTR [rcx+0x6e]
  41184c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  411854:	rex.XB jb 0x4118c0
  411857:	je     0x4118c2
  411859:	movsxd esp,DWORD PTR [rcx+0x6c]
  41185c:	push   rbx
  41185d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411862:	outs   dx,BYTE PTR ds:[rsi]
  411863:	add    BYTE PTR [rbx+0x3],cl
  411866:	rex.WR
  411867:	gs (bad) 
  411869:	jbe    0x4118d0
  41186b:	rex.XB jb 0x4118d7
  41186e:	je     0x4118d9
  411870:	movsxd esp,DWORD PTR [rcx+0x6c]
  411873:	push   rbx
  411874:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411879:	outs   dx,BYTE PTR ds:[rsi]
  41187a:	add    BYTE PTR [rax],al
  41187c:	mov    ebx,0x65755103
  411881:	jb     0x4118fc
  411883:	push   rax
  411884:	gs jb  0x4118ed
  411887:	outs   dx,DWORD PTR ds:[rsi]
  411888:	jb     0x4118f7
  41188a:	(bad)  
  41188b:	outs   dx,BYTE PTR ds:[rsi]
  41188c:	movsxd esp,DWORD PTR [rbp+0x43]
  41188f:	outs   dx,DWORD PTR ds:[rsi]
  411890:	jne    0x411900
  411892:	je     0x4118f9
  411894:	jb     0x411896
  411896:	add    DWORD PTR [rdx+rdx*2],eax
  411899:	je     0x411907
  41189b:	rex.B
  41189c:	fs fs rex.RX jne 0x41190f
  4118a1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4118a5:	outs   dx,BYTE PTR ds:[rsi]
  4118a6:	push   rsp
  4118a7:	(bad)  
  4118a8:	(bad)  
  4118a9:	ins    BYTE PTR es:[rdi],dx
  4118aa:	add    BYTE PTR gs:[rdx],al
  4118ad:	add    al,0x52
  4118af:	je     0x41191d
  4118b1:	rex.XB (bad) 
  4118b3:	jo     0x411929
  4118b5:	jne    0x411929
  4118b7:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4118ba:	outs   dx,BYTE PTR ds:[rsi]
  4118bb:	je     0x411922
  4118bd:	js     0x411933
  4118bf:	add    BYTE PTR [rcx],cl
  4118c1:	add    al,0x52
  4118c3:	je     0x411931
  4118c5:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4118c7:	outs   dx,DWORD PTR ds:[rsi]
  4118c8:	imul   esi,DWORD PTR [rbp+0x70],0x46
  4118cc:	jne    0x41193c
  4118ce:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4118d2:	outs   dx,BYTE PTR ds:[rsi]
  4118d3:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4118d5:	je     0x411949
  4118d7:	jns    0x4118d9
  4118d9:	add    BYTE PTR [rax],dl
  4118db:	add    al,0x52
  4118dd:	je     0x41194b
  4118df:	push   rsi
  4118e0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4118e7:	outs   dx,BYTE PTR ds:[rsi]
  4118e8:	ja     0x411953
  4118ea:	outs   dx,BYTE PTR ds:[rsi]
  4118eb:	add    BYTE PTR fs:[rax],al
  4118ee:	lahf   
  4118ef:	add    al,0x53
  4118f1:	gs je  0x411949
  4118f4:	outs   dx,BYTE PTR ds:[rsi]
  4118f5:	push   0x6c646e61
  4118fa:	gs fs rex.RB js 0x411962
  4118ff:	gs jo  0x411976
  411902:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  411909:	gs jb  0x41190c
  41190c:	lods   al,BYTE PTR ds:[rsi]
  41190d:	add    al,0x53
  41190f:	ins    BYTE PTR es:[rdi],dx
  411910:	gs gs jo 0x411914
  411914:	mov    edx,0x72655404
  411919:	ins    DWORD PTR es:[rdi],dx
  41191a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  411921:	outs   dx,DWORD PTR ds:[rsi]
  411922:	movsxd esp,DWORD PTR [rbp+0x73]
  411925:	jae    0x411927
  411927:	add    cl,al
  411929:	add    al,0x54
  41192b:	ins    BYTE PTR es:[rdi],dx
  41192c:	jae    0x411975
  41192e:	gs je  0x411987
  411931:	(bad)  
  411932:	ins    BYTE PTR es:[rdi],dx
  411933:	jne    0x41199a
  411935:	add    dh,cl
  411937:	add    al,0x55
  411939:	outs   dx,BYTE PTR ds:[rsi]
  41193a:	push   0x6c646e61
  41193f:	gs fs rex.RB js 0x4119a7
  411944:	gs jo  0x4119bb
  411947:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  41194e:	gs jb  0x411951
  411951:	add    ah,ch
  411953:	add    al,0x56
  411955:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  41195c:	jb     0x4119cd
  41195e:	je     0x4119c5
  411960:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  411964:	out    dx,al
  411965:	add    al,0x56
  411967:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  41196e:	jne    0x4119d5
  411970:	jb     0x4119eb
  411972:	add    BYTE PTR [rax],al
  411974:	(bad)  
  411975:	add    BYTE PTR [rdi+0x5f],bl
  411978:	rex.XB pop r15
  41197a:	jae    0x4119ec
  41197c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  411980:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  411987:	ins    BYTE PTR es:[rdi],dx
  411988:	gs jb  0x41198b
  41198b:	add    BYTE PTR [rsi+0x0],cl
  41198e:	pop    rdi
  41198f:	pop    rdi
  411990:	fs ins BYTE PTR es:[rdi],dx
  411992:	ins    BYTE PTR es:[rdi],dx
  411993:	outs   dx,DWORD PTR ds:[rsi]
  411994:	outs   dx,BYTE PTR ds:[rsi]
  411995:	gs js  0x411a01
  411998:	je     0x41199a
  41199a:	push   rcx
  41199b:	add    BYTE PTR [rdi+0x5f],bl
  41199e:	addr32 gs je 0x411a0f
  4119a2:	(bad)  
  4119a3:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4119aa:	push   rdx
  4119ab:	add    BYTE PTR [rdi+0x5f],bl
  4119ae:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  4119b5:	add    BYTE PTR [rbx+0x0],dl
  4119b8:	pop    rdi
  4119b9:	pop    rdi
  4119ba:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4119c1:	movsxd eax,DWORD PTR [rax]
  4119c3:	add    BYTE PTR [rdx+0x0],bl
  4119c6:	pop    rdi
  4119c7:	pop    rdi
  4119c8:	ins    BYTE PTR es:[rdi],dx
  4119c9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4119cc:	jbe    0x411a2d
  4119ce:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4119d5:	add    BYTE PTR [rdi+0x5f],bl
  4119d8:	jae    0x411a3f
  4119da:	je     0x411a3b
  4119dc:	(bad)  
  4119dd:	jo     0x411a4f
  4119df:	pop    rdi
  4119e0:	je     0x411a5b
  4119e2:	jo     0x411a49
  4119e4:	add    BYTE PTR [rax],al
  4119e6:	(bad)  
  4119e7:	add    BYTE PTR [rdi+0x5f],bl
  4119ea:	jae    0x411a51
  4119ec:	je     0x411a63
  4119ee:	jae    0x411a55
  4119f0:	jb     0x411a5f
  4119f2:	(bad)  
  4119f3:	je     0x411a5d
  4119f5:	gs jb  0x411a6a
  4119f8:	add    BYTE PTR [rax],al
  4119fa:	jno    0x4119fc
  4119fc:	pop    rdi
  4119fd:	(bad)  
  4119fe:	movsxd ebp,DWORD PTR [rbp+0x64]
  411a01:	ins    BYTE PTR es:[rdi],dx
  411a02:	outs   dx,BYTE PTR ds:[rsi]
  411a03:	add    BYTE PTR [rax+0x0],bh
  411a06:	pop    rdi
  411a07:	(bad)  
  411a08:	ins    DWORD PTR es:[rdi],dx
  411a09:	jae    0x411a72
  411a0b:	pop    rdi
  411a0c:	gs js  0x411a78
  411a0f:	je     0x411a11
  411a11:	add    BYTE PTR [rdx+0x65635f00],cl
  411a17:	js     0x411a82
  411a19:	je     0x411a1b
  411a1b:	add    BYTE PTR [rdx+0x72655f00],bh
  411a21:	jb     0x411a91
  411a23:	outs   dx,DWORD PTR ds:[rsi]
  411a24:	add    BYTE PTR [rax],al
  411a26:	fiadd  DWORD PTR [rax]
  411a28:	pop    rdi
  411a29:	ins    WORD PTR es:[rdi],dx
  411a2b:	outs   dx,DWORD PTR ds:[rsi]
  411a2c:	fs add BYTE PTR gs:[rax],al
  411a30:	sbb    al,BYTE PTR [rcx]
  411a32:	pop    rdi
  411a33:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  411a3a:	ins    DWORD PTR es:[rdi],dx
  411a3b:	add    BYTE PTR [rax+0x6f6c5f01],al
  411a41:	movsxd ebp,DWORD PTR [rbx+0x0]
  411a44:	and    eax,0x6e6f5f02
  411a49:	gs js  0x411ab5
  411a4c:	je     0x411a4e
  411a4e:	(bad)
  411a52:	outs   dx,BYTE PTR ds:[rsi]
  411a53:	ins    BYTE PTR es:[rdi],dx
  411a54:	outs   dx,DWORD PTR ds:[rsi]
  411a55:	movsxd ebp,DWORD PTR [rbx+0x0]
  411a58:	jg     0x411a5d
  411a5a:	(bad)  
  411a5b:	(bad)  
  411a5c:	outs   dx,DWORD PTR ds:[rsi]
  411a5d:	jb     0x411ad3
  411a5f:	add    BYTE PTR [rbx+0x6f746103],cl
  411a65:	data16 add BYTE PTR [rax],al
  411a68:	nop
  411a69:	add    esp,DWORD PTR [rbx+0x61]
  411a6c:	ins    BYTE PTR es:[rdi],dx
  411a6d:	ins    BYTE PTR es:[rdi],dx
  411a6e:	outs   dx,DWORD PTR ds:[rsi]
  411a6f:	movsxd eax,DWORD PTR [rax]
  411a71:	add    BYTE PTR [rbp+0x69786503],bl
  411a77:	je     0x411a79
  411a79:	add    BYTE PTR [rcx+0x6c636603],ah
  411a7f:	outs   dx,DWORD PTR ds:[rsi]
  411a80:	jae    0x411ae7
  411a82:	add    BYTE PTR [rax],al
  411a84:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  411a85:	add    esp,DWORD PTR [rsi+0x67]
  411a88:	gs je  0x411aee
  411a8b:	add    BYTE PTR [rdi+0x65676603],ah
  411a91:	je     0x411b06
  411a93:	add    BYTE PTR [rsi+0x706f6603],ch
  411a99:	outs   dx,BYTE PTR gs:[rsi]
  411a9b:	add    BYTE PTR [rax+0x72706603],dh
  411aa1:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  411aa8:	data16 jo 0x411b20
  411aab:	je     0x411b10
  411aad:	add    BYTE PTR [rbx+0x75706603],dh
  411ab3:	je     0x411b28
  411ab5:	add    BYTE PTR [rsi+0x65726603],dh
  411abb:	(bad)  
  411abc:	add    BYTE PTR fs:[rdi+0x65726603],dh
  411ac3:	add    BYTE PTR gs:[rax],al
  411ac6:	ret    0x6603
  411ac9:	ja     0x411b3d
  411acb:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6c03ea00
  411ad3:	outs   dx,DWORD PTR ds:[rsi]
  411ad4:	movsxd esp,DWORD PTR [rcx+0x6c]
  411ad7:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  411adb:	jbe    0x411add
  411add:	add    al,dh
  411adf:	add    ebp,DWORD PTR [rbp+0x61]
  411ae2:	ins    BYTE PTR es:[rdi],dx
  411ae3:	ins    BYTE PTR es:[rdi],dx
  411ae4:	outs   dx,DWORD PTR ds:[rsi]
  411ae5:	movsxd eax,DWORD PTR [rax]
  411ae7:	add    al,bh
  411ae9:	add    ebp,DWORD PTR [rbp+0x65]
  411aec:	ins    DWORD PTR es:[rdi],dx
  411aed:	movsxd esi,DWORD PTR [rax+0x79]
  411af0:	add    BYTE PTR [rax],al
  411af2:	add    DWORD PTR [rax+rsi*2],eax
  411af5:	jb     0x411b60
  411af7:	outs   dx,BYTE PTR ds:[rsi]
  411af8:	je     0x411b60
  411afa:	add    BYTE PTR [rax],al
  411afc:	add    al,0x4
  411afe:	jo     0x411b75
  411b00:	je     0x411b65
  411b02:	push   0x5007261
  411b07:	add    al,0x70
  411b09:	jne    0x411b7f
  411b0b:	jae    0x411b0d
  411b0d:	add    BYTE PTR [rsi],dl
  411b0f:	add    al,0x73
  411b11:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  411b18:	sbb    eax,DWORD PTR [rbx+rsi*2]
  411b1b:	jo     0x411b8f
  411b1d:	imul   ebp,DWORD PTR [rsi+0x74],0x4230066
  411b24:	jae    0x411b9a
  411b26:	jb     0x411b8b
  411b28:	push   0x24000072
  411b2d:	add    al,0x73
  411b2f:	je     0x411ba3
  411b31:	movsxd ebp,DWORD PTR [rbp+0x70]
  411b34:	add    BYTE PTR [rax],al
  411b36:	sub    eax,DWORD PTR [rbx+rsi*2]
  411b39:	je     0x411bad
  411b3b:	ins    BYTE PTR es:[rdi],dx
  411b3c:	outs   dx,BYTE PTR gs:[rsi]
  411b3e:	add    BYTE PTR [rax],al
  411b40:	cs add al,0x73
  411b43:	je     0x411bb7
  411b45:	outs   dx,BYTE PTR ds:[rsi]
  411b46:	movsxd ebp,DWORD PTR [rbp+0x70]
  411b49:	add    BYTE PTR [rdi],ch
  411b4b:	add    al,0x73
  411b4d:	je     0x411bc1
  411b4f:	outs   dx,BYTE PTR ds:[rsi]
  411b50:	movsxd esi,DWORD PTR [rax+0x79]
  411b53:	add    BYTE PTR [rdx],dh
  411b55:	add    al,0x73
  411b57:	je     0x411bcb
  411b59:	jb     0x411bbe
  411b5b:	push   0x4380072
  411b60:	jae    0x411bd6
  411b62:	jb     0x411bd8
  411b64:	outs   dx,DWORD PTR ds:[rsi]
  411b65:	ins    BYTE PTR es:[rdi],dx
  411b66:	add    BYTE PTR [rax],al
  411b68:	rex.WRX add al,0x76
  411b6b:	data16 jo 0x411be0
  411b6e:	imul   ebp,DWORD PTR [rsi+0x74],0xc9000066
  411b75:	add    al,0x5f
  411b77:	jae    0x411bde
  411b79:	je     0x411be8
  411b7b:	outs   dx,DWORD PTR ds:[rsi]
  411b7c:	fs add BYTE PTR gs:[rax],al
  411b80:	call   0x69a77a89
  411b85:	ins    BYTE PTR es:[rdi],dx
  411b86:	outs   dx,BYTE PTR gs:[rsi]
  411b88:	outs   dx,DWORD PTR ds:[rsi]
  411b89:	add    BYTE PTR [rax],al
  411b8b:	add    BYTE PTR [rax],al
  411b8d:	adc    BYTE PTR [rcx],al
  411b8f:	add    BYTE PTR [rax],al
  411b91:	adc    BYTE PTR [rcx],al
  411b93:	add    BYTE PTR [rax],al
  411b95:	adc    BYTE PTR [rcx],al
  411b97:	add    BYTE PTR [rax],al
  411b99:	adc    BYTE PTR [rcx],al
  411b9b:	add    BYTE PTR [rax],al
  411b9d:	adc    BYTE PTR [rcx],al
  411b9f:	add    BYTE PTR [rax],al
  411ba1:	adc    BYTE PTR [rcx],al
  411ba3:	add    BYTE PTR [rax],al
  411ba5:	adc    BYTE PTR [rcx],al
  411ba7:	add    BYTE PTR [rax],al
  411ba9:	adc    BYTE PTR [rcx],al
  411bab:	add    BYTE PTR [rax],al
  411bad:	adc    BYTE PTR [rcx],al
  411baf:	add    BYTE PTR [rax],al
  411bb1:	adc    BYTE PTR [rcx],al
  411bb3:	add    BYTE PTR [rax],al
  411bb5:	adc    BYTE PTR [rcx],al
  411bb7:	add    BYTE PTR [rax],al
  411bb9:	adc    BYTE PTR [rcx],al
  411bbb:	add    BYTE PTR [rax],al
  411bbd:	adc    BYTE PTR [rcx],al
  411bbf:	add    BYTE PTR [rax],al
  411bc1:	adc    BYTE PTR [rcx],al
  411bc3:	add    BYTE PTR [rax],al
  411bc5:	adc    BYTE PTR [rcx],al
  411bc7:	add    BYTE PTR [rax],al
  411bc9:	adc    BYTE PTR [rcx],al
  411bcb:	add    BYTE PTR [rax],al
  411bcd:	adc    BYTE PTR [rcx],al
  411bcf:	add    BYTE PTR [rax],al
  411bd1:	adc    BYTE PTR [rcx],al
  411bd3:	add    BYTE PTR [rax],al
  411bd5:	adc    BYTE PTR [rcx],al
  411bd7:	add    BYTE PTR [rax],al
  411bd9:	adc    BYTE PTR [rcx],al
  411bdb:	add    BYTE PTR [rax],al
  411bdd:	adc    BYTE PTR [rcx],al
  411bdf:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  411be3:	jo     0x411c57
  411be5:	outs   dx,DWORD PTR ds:[rsi]
  411be6:	push   0x2d
  411be8:	xor    DWORD PTR [rdx],esi
  411bea:	cs fs ins BYTE PTR es:[rdi],dx
  411bed:	ins    BYTE PTR es:[rdi],dx
  411bee:	add    BYTE PTR [rax],al
  411bf0:	adc    al,0x10
  411bf2:	add    DWORD PTR [rax],eax
  411bf4:	adc    al,0x10
  411bf6:	add    DWORD PTR [rax],eax
  411bf8:	adc    al,0x10
  411bfa:	add    DWORD PTR [rax],eax
  411bfc:	adc    al,0x10
  411bfe:	add    DWORD PTR [rax],eax
  411c00:	adc    al,0x10
  411c02:	add    DWORD PTR [rax],eax
  411c04:	adc    al,0x10
  411c06:	add    DWORD PTR [rax],eax
  411c08:	adc    al,0x10
  411c0a:	add    DWORD PTR [rax],eax
  411c0c:	adc    al,0x10
  411c0e:	add    DWORD PTR [rax],eax
  411c10:	adc    al,0x10
  411c12:	add    DWORD PTR [rax],eax
  411c14:	adc    al,0x10
  411c16:	add    DWORD PTR [rax],eax
  411c18:	adc    al,0x10
  411c1a:	add    DWORD PTR [rax],eax
  411c1c:	adc    al,0x10
  411c1e:	add    DWORD PTR [rax],eax
  411c20:	adc    al,0x10
  411c22:	add    DWORD PTR [rax],eax
  411c24:	adc    al,0x10
  411c26:	add    DWORD PTR [rax],eax
  411c28:	adc    al,0x10
  411c2a:	add    DWORD PTR [rax],eax
  411c2c:	adc    al,0x10
  411c2e:	add    DWORD PTR [rax],eax
  411c30:	adc    al,0x10
  411c32:	add    DWORD PTR [rax],eax
  411c34:	adc    al,0x10
  411c36:	add    DWORD PTR [rax],eax
  411c38:	adc    al,0x10
  411c3a:	add    DWORD PTR [rax],eax
  411c3c:	adc    al,0x10
  411c3e:	add    DWORD PTR [rax],eax
  411c40:	adc    al,0x10
  411c42:	add    DWORD PTR [rax],eax
  411c44:	adc    al,0x10
  411c46:	add    DWORD PTR [rax],eax
  411c48:	adc    al,0x10
  411c4a:	add    DWORD PTR [rax],eax
  411c4c:	rex.WXB
  411c4d:	rex.RB push r10
  411c4f:	rex.WRX
  411c50:	rex.RB
  411c51:	xor    r14,QWORD PTR [rdx]
  411c54:	cs fs ins BYTE PTR es:[rdi],dx
  411c57:	ins    BYTE PTR es:[rdi],dx
  411c58:	add    BYTE PTR [rax],al
  411c5a:	add    BYTE PTR [rax],al
  411c5c:	sub    BYTE PTR [rax],dl
  411c5e:	add    DWORD PTR [rax],eax
  411c60:	sub    BYTE PTR [rax],dl
  411c62:	add    DWORD PTR [rax],eax
  411c64:	sub    BYTE PTR [rax],dl
  411c66:	add    DWORD PTR [rax],eax
  411c68:	sub    BYTE PTR [rax],dl
  411c6a:	add    DWORD PTR [rax],eax
  411c6c:	sub    BYTE PTR [rax],dl
  411c6e:	add    DWORD PTR [rax],eax
  411c70:	sub    BYTE PTR [rax],dl
  411c72:	add    DWORD PTR [rax],eax
  411c74:	sub    BYTE PTR [rax],dl
  411c76:	add    DWORD PTR [rax],eax
  411c78:	sub    BYTE PTR [rax],dl
  411c7a:	add    DWORD PTR [rax],eax
  411c7c:	sub    BYTE PTR [rax],dl
  411c7e:	add    DWORD PTR [rax],eax
  411c80:	sub    BYTE PTR [rax],dl
  411c82:	add    DWORD PTR [rax],eax
  411c84:	sub    BYTE PTR [rax],dl
  411c86:	add    DWORD PTR [rax],eax
  411c88:	sub    BYTE PTR [rax],dl
  411c8a:	add    DWORD PTR [rax],eax
  411c8c:	sub    BYTE PTR [rax],dl
  411c8e:	add    DWORD PTR [rax],eax
  411c90:	sub    BYTE PTR [rax],dl
  411c92:	add    DWORD PTR [rax],eax
  411c94:	sub    BYTE PTR [rax],dl
  411c96:	add    DWORD PTR [rax],eax
  411c98:	sub    BYTE PTR [rax],dl
  411c9a:	add    DWORD PTR [rax],eax
  411c9c:	sub    BYTE PTR [rax],dl
  411c9e:	add    DWORD PTR [rax],eax
  411ca0:	sub    BYTE PTR [rax],dl
  411ca2:	add    DWORD PTR [rax],eax
  411ca4:	sub    BYTE PTR [rax],dl
  411ca6:	add    DWORD PTR [rax],eax
  411ca8:	sub    BYTE PTR [rax],dl
  411caa:	add    DWORD PTR [rax],eax
  411cac:	sub    BYTE PTR [rax],dl
  411cae:	add    DWORD PTR [rax],eax
  411cb0:	sub    BYTE PTR [rax],dl
  411cb2:	add    DWORD PTR [rax],eax
  411cb4:	sub    BYTE PTR [rax],dl
  411cb6:	add    DWORD PTR [rax],eax
  411cb8:	sub    BYTE PTR [rax],dl
  411cba:	add    DWORD PTR [rax],eax
  411cbc:	sub    BYTE PTR [rax],dl
  411cbe:	add    DWORD PTR [rax],eax
  411cc0:	sub    BYTE PTR [rax],dl
  411cc2:	add    DWORD PTR [rax],eax
  411cc4:	sub    BYTE PTR [rax],dl
  411cc6:	add    DWORD PTR [rax],eax
  411cc8:	sub    BYTE PTR [rax],dl
  411cca:	add    DWORD PTR [rax],eax
  411ccc:	sub    BYTE PTR [rax],dl
  411cce:	add    DWORD PTR [rax],eax
  411cd0:	sub    BYTE PTR [rax],dl
  411cd2:	add    DWORD PTR [rax],eax
  411cd4:	sub    BYTE PTR [rax],dl
  411cd6:	add    DWORD PTR [rax],eax
  411cd8:	sub    BYTE PTR [rax],dl
  411cda:	add    DWORD PTR [rax],eax
  411cdc:	sub    BYTE PTR [rax],dl
  411cde:	add    DWORD PTR [rax],eax
  411ce0:	sub    BYTE PTR [rax],dl
  411ce2:	add    DWORD PTR [rax],eax
  411ce4:	sub    BYTE PTR [rax],dl
  411ce6:	add    DWORD PTR [rax],eax
  411ce8:	sub    BYTE PTR [rax],dl
  411cea:	add    DWORD PTR [rax],eax
  411cec:	sub    BYTE PTR [rax],dl
  411cee:	add    DWORD PTR [rax],eax
  411cf0:	sub    BYTE PTR [rax],dl
  411cf2:	add    DWORD PTR [rax],eax
  411cf4:	sub    BYTE PTR [rax],dl
  411cf6:	add    DWORD PTR [rax],eax
  411cf8:	sub    BYTE PTR [rax],dl
  411cfa:	add    DWORD PTR [rax],eax
  411cfc:	sub    BYTE PTR [rax],dl
  411cfe:	add    DWORD PTR [rax],eax
  411d00:	sub    BYTE PTR [rax],dl
  411d02:	add    DWORD PTR [rax],eax
  411d04:	sub    BYTE PTR [rax],dl
  411d06:	add    DWORD PTR [rax],eax
  411d08:	sub    BYTE PTR [rax],dl
  411d0a:	add    DWORD PTR [rax],eax
  411d0c:	sub    BYTE PTR [rax],dl
  411d0e:	add    DWORD PTR [rax],eax
  411d10:	sub    BYTE PTR [rax],dl
  411d12:	add    DWORD PTR [rax],eax
  411d14:	sub    BYTE PTR [rax],dl
  411d16:	add    DWORD PTR [rax],eax
  411d18:	sub    BYTE PTR [rax],dl
  411d1a:	add    DWORD PTR [rax],eax
  411d1c:	sub    BYTE PTR [rax],dl
  411d1e:	add    DWORD PTR [rax],eax
  411d20:	ins    DWORD PTR es:[rdi],dx
  411d21:	jae    0x411d99
  411d23:	movsxd esi,DWORD PTR [rdx+0x74]
  411d26:	cs fs ins BYTE PTR es:[rdi],dx
  411d29:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000412000 <.CRT>:
	...
  412008:	(bad)  
  412009:	adc    DWORD PTR [rax+0x0],eax
	...
  412020:	adc    BYTE PTR [rax],dl
  412022:	add    BYTE PTR [rax],al
  412025:	add    BYTE PTR [rax],al
  412027:	add    al,dh
  412029:	and    BYTE PTR [rax+0x0],al
	...
  412040:	and    BYTE PTR [rbx],ah
  412042:	add    BYTE PTR [rax],al
  412045:	add    BYTE PTR [rax],al
  412047:	add    al,dh
  412049:	and    al,BYTE PTR [rax+0x0]
	...

Disassembly of section .tls:

0000000000413000 <.tls>:
	...
  413020:	add    BYTE PTR [rax],dh
  413022:	add    BYTE PTR [r8],al
  413025:	add    BYTE PTR [rax],al
  413027:	add    BYTE PTR [rax+0x30],ah
  41302a:	add    BYTE PTR [r8],al
  41302d:	add    BYTE PTR [rax],al
  41302f:	add    BYTE PTR [rdi+rsi*8+0x40],bl
  413033:	add    BYTE PTR [rax],al
  413035:	add    BYTE PTR [rax],al
  413037:	add    BYTE PTR [rax+0x20],al
  41303a:	add    BYTE PTR [r8],al
	...
