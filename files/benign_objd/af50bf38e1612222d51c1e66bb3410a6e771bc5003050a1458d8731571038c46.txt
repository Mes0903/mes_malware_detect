
af50bf38e1612222d51c1e66bb3410a6e771bc5003050a1458d8731571038c46.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xc125]        # 40d140 <_head_lib64_libkernel32_a-0x3ec0>
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xc126]        # 40d150 <_head_lib64_libkernel32_a-0x3eb0>
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xc129]        # 40d160 <_head_lib64_libkernel32_a-0x3ea0>
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xc0ec]        # 40d130 <_head_lib64_libkernel32_a-0x3ed0>
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xbf7f]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     4010d0 <_head_lib64_libkernel32_a-0xff30>
  401058:	mov    rax,QWORD PTR [rip+0xc0c1]        # 40d120 <_head_lib64_libkernel32_a-0x3ee0>
  40105f:	mov    DWORD PTR [rip+0xefa3],edx        # 410008 <_head_lib64_libkernel32_a-0xff8>
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     4010c2 <_head_lib64_libkernel32_a-0xff3e>
  40106b:	mov    ecx,0x2
  401070:	call   409ee0 <_head_lib64_libkernel32_a-0x7120>
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   408e70 <_head_lib64_libkernel32_a-0x8190>
  401081:	mov    rdx,QWORD PTR [rip+0xbff8]        # 40d080 <_head_lib64_libkernel32_a-0x3f80>
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xbfde]        # 40d070 <_head_lib64_libkernel32_a-0x3f90>
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xc044]        # 40d0e0 <_head_lib64_libkernel32_a-0x3f20>
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xbf7b]        # 40d020 <_head_lib64_libkernel32_a-0x3fe0>
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   408a50 <_head_lib64_libkernel32_a-0x85b0>
  4010af:	mov    rax,QWORD PTR [rip+0xbeca]        # 40cf80 <_head_lib64_libkernel32_a-0x4080>
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     401120 <_head_lib64_libkernel32_a-0xfee0>
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   409ee0 <_head_lib64_libkernel32_a-0x7120>
  4010cc:	jmp    401075 <_head_lib64_libkernel32_a-0xff8b>
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    401058 <_head_lib64_libkernel32_a-0xffa8>
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     401133 <_head_lib64_libkernel32_a-0xfecd>
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    401058 <_head_lib64_libkernel32_a-0xffa8>
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    401058 <_head_lib64_libkernel32_a-0xffa8>
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    401058 <_head_lib64_libkernel32_a-0xffa8>
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x7c29]        # 408d50 <_head_lib64_libkernel32_a-0x82b0>
  401127:	call   408d40 <_head_lib64_libkernel32_a-0x82c0>
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    401058 <_head_lib64_libkernel32_a-0xffa8>
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    401058 <_head_lib64_libkernel32_a-0xffa8>
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xbfa5]        # 40d110 <_head_lib64_libkernel32_a-0x3ef0>
  40116b:	lea    r8,[rip+0xeea6]        # 410018 <_head_lib64_libkernel32_a-0xfe8>
  401172:	lea    rdx,[rip+0xeea7]        # 410020 <_head_lib64_libkernel32_a-0xfe0>
  401179:	lea    rcx,[rip+0xeea8]        # 410028 <_head_lib64_libkernel32_a-0xfd8>
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xee78],eax        # 410000 <_head_lib64_libkernel32_a-0x1000>
  401188:	lea    rax,[rip+0xee71]        # 410000 <_head_lib64_libkernel32_a-0x1000>
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xbf35]        # 40d0d0 <_head_lib64_libkernel32_a-0x3f30>
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   409ef8 <_head_lib64_libkernel32_a-0x7108>
  4011a3:	mov    DWORD PTR [rip+0xee67],eax        # 410010 <_head_lib64_libkernel32_a-0xff0>
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xbf5a]        # 40d120 <_head_lib64_libkernel32_a-0x3ee0>
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    401490 <_head_lib64_libkernel32_a-0xfb70>
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xbe5b]        # 40d050 <_head_lib64_libkernel32_a-0x3fb0>
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1050e]        # 411710 <__imp_Sleep>
  401202:	jmp    401215 <_head_lib64_libkernel32_a-0xfdeb>
  401204:	cmp    rsi,rax
  401207:	je     401430 <_head_lib64_libkernel32_a-0xfbd0>
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    401204 <_head_lib64_libkernel32_a-0xfdfc>
  401222:	mov    rsi,QWORD PTR [rip+0xbe37]        # 40d060 <_head_lib64_libkernel32_a-0x3fa0>
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     401447 <_head_lib64_libkernel32_a-0xfbb9>
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     4014a0 <_head_lib64_libkernel32_a-0xfb60>
  401240:	mov    DWORD PTR [rip+0xedba],0x1        # 410004 <_head_lib64_libkernel32_a-0xffc>
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     40145c <_head_lib64_libkernel32_a-0xfba4>
  401255:	test   edi,edi
  401257:	je     401480 <_head_lib64_libkernel32_a-0xfb80>
  40125d:	mov    rax,QWORD PTR [rip+0xbd5c]        # 40cfc0 <_head_lib64_libkernel32_a-0x4040>
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     401278 <_head_lib64_libkernel32_a-0xfd88>
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   409060 <_head_lib64_libkernel32_a-0x7fa0>
  40127d:	lea    rcx,[rip+0x837c]        # 409600 <_head_lib64_libkernel32_a-0x7a00>
  401284:	call   QWORD PTR [rip+0x1047e]        # 411708 <__imp_SetUnhandledExceptionFilter>
  40128a:	mov    rdx,QWORD PTR [rip+0xbdaf]        # 40d040 <_head_lib64_libkernel32_a-0x3fc0>
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   409510 <_head_lib64_libkernel32_a-0x7af0>
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 401000 <_head_lib64_libkernel32_a-0x10000>
  4012a0:	call   409f20 <_head_lib64_libkernel32_a-0x70e0>
  4012a5:	call   408e50 <_head_lib64_libkernel32_a-0x81b0>
  4012aa:	mov    rax,QWORD PTR [rip+0xbd1f]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  4012b1:	mov    QWORD PTR [rip+0xf810],rax        # 410ac8 <_head_lib64_libkernel32_a-0x538>
  4012b8:	mov    rax,QWORD PTR [rip+0xbd51]        # 40d010 <_head_lib64_libkernel32_a-0x3ff0>
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     401317 <_head_lib64_libkernel32_a-0xfce9>
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    4012e2 <_head_lib64_libkernel32_a-0xfd1e>
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     401310 <_head_lib64_libkernel32_a-0xfcf0>
  4012d4:	and    ecx,0x1
  4012d7:	je     401304 <_head_lib64_libkernel32_a-0xfcfc>
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    4012d0 <_head_lib64_libkernel32_a-0xfd30>
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    4012de <_head_lib64_libkernel32_a-0xfd22>
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     401310 <_head_lib64_libkernel32_a-0xfcf0>
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    401300 <_head_lib64_libkernel32_a-0xfd00>
  401310:	mov    QWORD PTR [rip+0xf7a9],rax        # 410ac0 <_head_lib64_libkernel32_a-0x540>
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     401336 <_head_lib64_libkernel32_a-0xfcca>
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    401421 <_head_lib64_libkernel32_a-0xfbdf>
  401330:	mov    DWORD PTR [rip+0x9cca],eax        # 40b000 <_head_lib64_libkernel32_a-0x6000>
  401336:	mov    r12d,DWORD PTR [rip+0xeceb]        # 410028 <_head_lib64_libkernel32_a-0xfd8>
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   409e40 <_head_lib64_libkernel32_a-0x71c0>
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xecc2]        # 410020 <_head_lib64_libkernel32_a-0xfe0>
  40135e:	jle    4014be <_head_lib64_libkernel32_a-0xfb42>
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   409e20 <_head_lib64_libkernel32_a-0x71e0>
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   409e40 <_head_lib64_libkernel32_a-0x71c0>
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   409e30 <_head_lib64_libkernel32_a-0x71d0>
  40139d:	cmp    r12d,ebx
  4013a0:	jg     401370 <_head_lib64_libkernel32_a-0xfc90>
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xec6a],rbp        # 410020 <_head_lib64_libkernel32_a-0xfe0>
  4013b6:	call   408a20 <_head_lib64_libkernel32_a-0x85e0>
  4013bb:	mov    rax,QWORD PTR [rip+0xbc3e]        # 40d000 <_head_lib64_libkernel32_a-0x4000>
  4013c2:	mov    rdx,QWORD PTR [rip+0xec4f]        # 410018 <_head_lib64_libkernel32_a-0xfe8>
  4013c9:	mov    ecx,DWORD PTR [rip+0xec59]        # 410028 <_head_lib64_libkernel32_a-0xfd8>
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xec3c]        # 410018 <_head_lib64_libkernel32_a-0xfe8>
  4013dc:	mov    rdx,QWORD PTR [rip+0xec3d]        # 410020 <_head_lib64_libkernel32_a-0xfe0>
  4013e3:	call   40a000 <_head_lib64_libkernel32_a-0x7000>
  4013e8:	mov    ecx,DWORD PTR [rip+0xec1a]        # 410008 <_head_lib64_libkernel32_a-0xff8>
  4013ee:	mov    DWORD PTR [rip+0xec18],eax        # 41000c <_head_lib64_libkernel32_a-0xff4>
  4013f4:	test   ecx,ecx
  4013f6:	je     4014c6 <_head_lib64_libkernel32_a-0xfb3a>
  4013fc:	mov    edx,DWORD PTR [rip+0xec02]        # 410004 <_head_lib64_libkernel32_a-0xffc>
  401402:	test   edx,edx
  401404:	jne    401411 <_head_lib64_libkernel32_a-0xfbef>
  401406:	call   409ec8 <_head_lib64_libkernel32_a-0x7138>
  40140b:	mov    eax,DWORD PTR [rip+0xebfb]        # 41000c <_head_lib64_libkernel32_a-0xff4>
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    401330 <_head_lib64_libkernel32_a-0xfcd0>
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xbc29]        # 40d060 <_head_lib64_libkernel32_a-0x3fa0>
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    401236 <_head_lib64_libkernel32_a-0xfdca>
  401447:	mov    ecx,0x1f
  40144c:	call   409ed0 <_head_lib64_libkernel32_a-0x7130>
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    401255 <_head_lib64_libkernel32_a-0xfdab>
  40145c:	mov    rdx,QWORD PTR [rip+0xbc3d]        # 40d0a0 <_head_lib64_libkernel32_a-0x3f60>
  401463:	mov    rcx,QWORD PTR [rip+0xbc26]        # 40d090 <_head_lib64_libkernel32_a-0x3f70>
  40146a:	call   409eb8 <_head_lib64_libkernel32_a-0x7148>
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    40125d <_head_lib64_libkernel32_a-0xfda3>
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    40125d <_head_lib64_libkernel32_a-0xfda3>
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x1021f]        # 4116b8 <__imp_GetStartupInfoA>
  401499:	jmp    4011e5 <_head_lib64_libkernel32_a-0xfe1b>
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xbc19]        # 40d0c0 <_head_lib64_libkernel32_a-0x3f40>
  4014a7:	mov    rcx,QWORD PTR [rip+0xbc02]        # 40d0b0 <_head_lib64_libkernel32_a-0x3f50>
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   409eb8 <_head_lib64_libkernel32_a-0x7148>
  4014b9:	jmp    40124a <_head_lib64_libkernel32_a-0xfdb6>
  4014be:	xor    r13d,r13d
  4014c1:	jmp    4013a6 <_head_lib64_libkernel32_a-0xfc5a>
  4014c6:	mov    ecx,eax
  4014c8:	call   409e88 <_head_lib64_libkernel32_a-0x7178>
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xbc45]        # 40d120 <_head_lib64_libkernel32_a-0x3ee0>
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   408a60 <_head_lib64_libkernel32_a-0x85a0>
  4014e6:	call   4011b0 <_head_lib64_libkernel32_a-0xfe50>
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xbc15]        # 40d120 <_head_lib64_libkernel32_a-0x3ee0>
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   408a60 <_head_lib64_libkernel32_a-0x85a0>
  401516:	call   4011b0 <_head_lib64_libkernel32_a-0xfe50>
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	mov    rbp,rsp
  401534:	pop    rbp
  401535:	ret    
  401536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401540:	push   rbp
  401541:	mov    rbp,rsp
  401544:	sub    rsp,0x20
  401548:	cmp    QWORD PTR [rip+0x9b80],0x0        # 40b0d0 <_head_lib64_libkernel32_a-0x5f30>
  401550:	je     401582 <_head_lib64_libkernel32_a-0xfa7e>
  401552:	lea    rcx,[rip+0xaaa7]        # 40c000 <_head_lib64_libkernel32_a-0x5000>
  401559:	call   QWORD PTR [rip+0x10149]        # 4116a8 <__imp_GetModuleHandleA>
  40155f:	test   rax,rax
  401562:	je     401593 <_head_lib64_libkernel32_a-0xfa6d>
  401564:	lea    rdx,[rip+0xaaa3]        # 40c00e <_head_lib64_libkernel32_a-0x4ff2>
  40156b:	mov    rcx,rax
  40156e:	call   QWORD PTR [rip+0x1013c]        # 4116b0 <__imp_GetProcAddress>
  401574:	test   rax,rax
  401577:	je     401582 <_head_lib64_libkernel32_a-0xfa7e>
  401579:	lea    rcx,[rip+0x9b50]        # 40b0d0 <_head_lib64_libkernel32_a-0x5f30>
  401580:	call   rax
  401582:	lea    rcx,[rip+0x17]        # 4015a0 <_head_lib64_libkernel32_a-0xfa60>
  401589:	add    rsp,0x20
  40158d:	pop    rbp
  40158e:	jmp    408960 <_head_lib64_libkernel32_a-0x86a0>
  401593:	lea    rax,[rip+0xffffffffffffff96]        # 401530 <_head_lib64_libkernel32_a-0xfad0>
  40159a:	jmp    401579 <_head_lib64_libkernel32_a-0xfa87>
  40159c:	nop    DWORD PTR [rax+0x0]
  4015a0:	push   rbp
  4015a1:	mov    rbp,rsp
  4015a4:	pop    rbp
  4015a5:	ret    
  4015a6:	nop
  4015a7:	nop
  4015a8:	nop
  4015a9:	nop
  4015aa:	nop
  4015ab:	nop
  4015ac:	nop
  4015ad:	nop
  4015ae:	nop
  4015af:	nop
  4015b0:	push   r13
  4015b2:	push   r12
  4015b4:	push   rbp
  4015b5:	push   rdi
  4015b6:	push   rsi
  4015b7:	push   rbx
  4015b8:	sub    rsp,0x38
  4015bc:	lea    rsi,[rip+0xea7d]        # 410040 <_head_lib64_libkernel32_a-0xfc0>
  4015c3:	lea    rdi,[rip+0xaa90]        # 40c05a <_head_lib64_libkernel32_a-0x4fa6>
  4015ca:	mov    rbp,r9
  4015cd:	mov    r13,r8
  4015d0:	mov    rbx,rcx
  4015d3:	mov    QWORD PTR [rsp+0x28],0x0
  4015dc:	mov    r12d,edx
  4015df:	call   408710 <_head_lib64_libkernel32_a-0x88f0>
  4015e4:	lea    rcx,[rip+0xaa55]        # 40c040 <_head_lib64_libkernel32_a-0x4fc0>
  4015eb:	mov    rdx,rax
  4015ee:	call   408898 <_head_lib64_libkernel32_a-0x8768>
  4015f3:	lea    rdx,[rip+0xaa5a]        # 40c054 <_head_lib64_libkernel32_a-0x4fac>
  4015fa:	lea    rcx,[rip+0xaa3f]        # 40c040 <_head_lib64_libkernel32_a-0x4fc0>
  401601:	call   4088a0 <_head_lib64_libkernel32_a-0x8760>
  401606:	lea    rcx,[rip+0xaa33]        # 40c040 <_head_lib64_libkernel32_a-0x4fc0>
  40160d:	call   408888 <_head_lib64_libkernel32_a-0x8778>
  401612:	mov    rax,QWORD PTR [rsp+0x90]
  40161a:	mov    ecx,0xe
  40161f:	mov    DWORD PTR [rbp+0x0],0x1
  401626:	mov    QWORD PTR [rax],rsi
  401629:	mov    rsi,rbx
  40162c:	mov    DWORD PTR [rip+0xea0a],0x15        # 410040 <_head_lib64_libkernel32_a-0xfc0>
  401636:	mov    DWORD PTR [rip+0xea08],0x0        # 410048 <_head_lib64_libkernel32_a-0xfb8>
  401640:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401642:	je     401723 <_head_lib64_libkernel32_a-0xf8dd>
  401648:	lea    rdi,[rip+0xaa19]        # 40c068 <_head_lib64_libkernel32_a-0x4f98>
  40164f:	mov    ecx,0x14
  401654:	mov    rsi,rbx
  401657:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401659:	seta   al
  40165c:	setb   dl
  40165f:	sub    eax,edx
  401661:	cmp    r12d,0x1
  401665:	movsx  eax,al
  401668:	jle    4016e5 <_head_lib64_libkernel32_a-0xf91b>
  40166a:	test   eax,eax
  40166c:	jne    4016e5 <_head_lib64_libkernel32_a-0xf91b>
  40166e:	mov    rcx,QWORD PTR [r13+0x8]
  401672:	lea    rdx,[rsp+0x20]
  401677:	mov    DWORD PTR [rsp+0x20],0x0
  40167f:	lea    r9,[rsp+0x28]
  401684:	mov    DWORD PTR [rsp+0x24],0x0
  40168c:	lea    r8,[rsp+0x24]
  401691:	call   405cd0 <_head_lib64_libkernel32_a-0xb330>
  401696:	cmp    eax,0xffffffff
  401699:	je     401754 <_head_lib64_libkernel32_a-0xf8ac>
  40169f:	mov    DWORD PTR [rbp+0x0],0x4
  4016a6:	mov    edx,0x3
  4016ab:	mov    DWORD PTR [rip+0xe9bf],eax        # 410070 <_head_lib64_libkernel32_a-0xf90>
  4016b1:	mov    eax,DWORD PTR [rsp+0x20]
  4016b5:	mov    DWORD PTR [rip+0xe9a9],0xd        # 410068 <_head_lib64_libkernel32_a-0xf98>
  4016bf:	mov    DWORD PTR [rip+0xe9c7],0x0        # 410090 <_head_lib64_libkernel32_a-0xf70>
  4016c9:	mov    DWORD PTR [rip+0xe9e5],0x0        # 4100b8 <_head_lib64_libkernel32_a-0xf48>
  4016d3:	mov    DWORD PTR [rip+0xe9bf],eax        # 410098 <_head_lib64_libkernel32_a-0xf68>
  4016d9:	mov    eax,DWORD PTR [rsp+0x24]
  4016dd:	mov    DWORD PTR [rip+0xe9dd],eax        # 4100c0 <_head_lib64_libkernel32_a-0xf40>
  4016e3:	jmp    401710 <_head_lib64_libkernel32_a-0xf8f0>
  4016e5:	mov    edx,0x1
  4016ea:	mov    rax,QWORD PTR [rsp+0x28]
  4016ef:	test   rax,rax
  4016f2:	je     401710 <_head_lib64_libkernel32_a-0xf8f0>
  4016f4:	mov    rax,QWORD PTR [rax+0x8]
  4016f8:	mov    DWORD PTR [rbp+0x0],0x2
  4016ff:	mov    DWORD PTR [rip+0xe95f],0x4        # 410068 <_head_lib64_libkernel32_a-0xf98>
  401709:	mov    QWORD PTR [rip+0xe960],rax        # 410070 <_head_lib64_libkernel32_a-0xf90>
  401710:	mov    DWORD PTR [rip+0xe932],edx        # 410048 <_head_lib64_libkernel32_a-0xfb8>
  401716:	add    rsp,0x38
  40171a:	pop    rbx
  40171b:	pop    rsi
  40171c:	pop    rdi
  40171d:	pop    rbp
  40171e:	pop    r12
  401720:	pop    r13
  401722:	ret    
  401723:	mov    rcx,QWORD PTR [r13+0x30]
  401727:	lea    rdx,[rsp+0x28]
  40172c:	call   4036c0 <_head_lib64_libkernel32_a-0xd940>
  401731:	cmp    eax,0xffffffff
  401734:	je     401754 <_head_lib64_libkernel32_a-0xf8ac>
  401736:	mov    DWORD PTR [rbp+0x0],0x2
  40173d:	mov    edx,0x3
  401742:	mov    DWORD PTR [rip+0xe91c],0xd        # 410068 <_head_lib64_libkernel32_a-0xf98>
  40174c:	mov    DWORD PTR [rip+0xe91e],eax        # 410070 <_head_lib64_libkernel32_a-0xf90>
  401752:	jmp    401710 <_head_lib64_libkernel32_a-0xf8f0>
  401754:	xor    edx,edx
  401756:	jmp    4016ea <_head_lib64_libkernel32_a-0xf916>
  401758:	nop    DWORD PTR [rax+rax*1+0x0]
  401760:	push   rsi
  401761:	push   rbx
  401762:	sub    rsp,0x78
  401766:	lea    rax,[rip+0xabb3]        # 40c320 <_head_lib64_libkernel32_a-0x4ce0>
  40176d:	lea    rbx,[rip+0xa908]        # 40c07c <_head_lib64_libkernel32_a-0x4f84>
  401774:	lea    rsi,[rip+0xa99d]        # 40c118 <_head_lib64_libkernel32_a-0x4ee8>
  40177b:	mov    r9,rbx
  40177e:	lea    r8,[rip+0xa90b]        # 40c090 <_head_lib64_libkernel32_a-0x4f70>
  401785:	lea    rdx,[rip+0xa94c]        # 40c0d8 <_head_lib64_libkernel32_a-0x4f28>
  40178c:	lea    rcx,[rip+0xa8c7]        # 40c05a <_head_lib64_libkernel32_a-0x4fa6>
  401793:	mov    QWORD PTR [rsp+0x60],rax
  401798:	lea    rax,[rip+0xac01]        # 40c3a0 <_head_lib64_libkernel32_a-0x4c60>
  40179f:	mov    QWORD PTR [rsp+0x58],rax
  4017a4:	lea    rax,[rip+0xa95d]        # 40c108 <_head_lib64_libkernel32_a-0x4ef8>
  4017ab:	mov    QWORD PTR [rsp+0x30],rax
  4017b0:	mov    DWORD PTR [rsp+0x50],0x1
  4017b8:	mov    DWORD PTR [rsp+0x48],0x3
  4017c0:	mov    DWORD PTR [rsp+0x40],0x1
  4017c8:	mov    QWORD PTR [rsp+0x38],0x0
  4017d1:	mov    QWORD PTR [rsp+0x28],rsi
  4017d6:	mov    QWORD PTR [rsp+0x20],rbx
  4017db:	call   4085e8 <_head_lib64_libkernel32_a-0x8a18>
  4017e0:	lea    rdx,[rip+0xa936]        # 40c11d <_head_lib64_libkernel32_a-0x4ee3>
  4017e7:	lea    rcx,[rip+0xa86c]        # 40c05a <_head_lib64_libkernel32_a-0x4fa6>
  4017ee:	call   408558 <_head_lib64_libkernel32_a-0x8aa8>
  4017f3:	lea    r9,[rip+0xa92f]        # 40c129 <_head_lib64_libkernel32_a-0x4ed7>
  4017fa:	lea    r8,[rip+0xa936]        # 40c137 <_head_lib64_libkernel32_a-0x4ec9>
  401801:	lea    rdx,[rip+0xa930]        # 40c138 <_head_lib64_libkernel32_a-0x4ec8>
  401808:	lea    rcx,[rip+0xa84b]        # 40c05a <_head_lib64_libkernel32_a-0x4fa6>
  40180f:	call   408550 <_head_lib64_libkernel32_a-0x8ab0>
  401814:	lea    rax,[rip+0xaa25]        # 40c240 <_head_lib64_libkernel32_a-0x4dc0>
  40181b:	mov    r9,rbx
  40181e:	mov    DWORD PTR [rsp+0x50],0x3
  401826:	mov    QWORD PTR [rsp+0x60],rax
  40182b:	lea    rax,[rip+0xaaae]        # 40c2e0 <_head_lib64_libkernel32_a-0x4d20>
  401832:	mov    QWORD PTR [rsp+0x58],rax
  401837:	lea    r8,[rip+0xa902]        # 40c140 <_head_lib64_libkernel32_a-0x4ec0>
  40183e:	mov    DWORD PTR [rsp+0x48],0x2
  401846:	lea    rdx,[rip+0xa94b]        # 40c198 <_head_lib64_libkernel32_a-0x4e68>
  40184d:	mov    DWORD PTR [rsp+0x40],0x1
  401855:	lea    rcx,[rip+0xa80c]        # 40c068 <_head_lib64_libkernel32_a-0x4f98>
  40185c:	mov    QWORD PTR [rsp+0x38],0x0
  401865:	mov    QWORD PTR [rsp+0x30],0x0
  40186e:	mov    QWORD PTR [rsp+0x28],rsi
  401873:	mov    QWORD PTR [rsp+0x20],rbx
  401878:	call   4085e8 <_head_lib64_libkernel32_a-0x8a18>
  40187d:	lea    rdx,[rip+0xa7e4]        # 40c068 <_head_lib64_libkernel32_a-0x4f98>
  401884:	lea    rcx,[rip+0xa7cf]        # 40c05a <_head_lib64_libkernel32_a-0x4fa6>
  40188b:	add    rsp,0x78
  40188f:	pop    rbx
  401890:	pop    rsi
  401891:	jmp    408548 <_head_lib64_libkernel32_a-0x8ab8>
  401896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018a0:	mov    rax,QWORD PTR [rip+0xb749]        # 40cff0 <_head_lib64_libkernel32_a-0x4010>
  4018a7:	lea    rcx,[rip+0x9772]        # 40b020 <_head_lib64_libkernel32_a-0x5fe0>
  4018ae:	mov    rdx,QWORD PTR [rax]
  4018b1:	mov    rax,QWORD PTR [rip+0xb728]        # 40cfe0 <_head_lib64_libkernel32_a-0x4020>
  4018b8:	mov    r8,QWORD PTR [rdx]
  4018bb:	mov    rax,QWORD PTR [rax]
  4018be:	mov    edx,DWORD PTR [rax]
  4018c0:	jmp    408580 <_head_lib64_libkernel32_a-0x8a80>
  4018c5:	nop
  4018c6:	nop
  4018c7:	nop
  4018c8:	nop
  4018c9:	nop
  4018ca:	nop
  4018cb:	nop
  4018cc:	nop
  4018cd:	nop
  4018ce:	nop
  4018cf:	nop
  4018d0:	push   rdi
  4018d1:	push   rsi
  4018d2:	push   rbx
  4018d3:	sub    rsp,0x30
  4018d7:	test   ecx,ecx
  4018d9:	mov    ebx,edx
  4018db:	mov    rsi,r8
  4018de:	jne    401920 <_head_lib64_libkernel32_a-0xf6e0>
  4018e0:	mov    ecx,edx
  4018e2:	call   4087a8 <_head_lib64_libkernel32_a-0x8858>
  4018e7:	mov    ecx,ebx
  4018e9:	mov    rdi,rax
  4018ec:	call   408828 <_head_lib64_libkernel32_a-0x87d8>
  4018f1:	mov    ebx,eax
  4018f3:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4018f8:	mov    QWORD PTR [rsp+0x20],rdi
  4018fd:	mov    r8d,ebx
  401900:	mov    rcx,rsi
  401903:	lea    r9,[rip+0xab0d]        # 40c417 <_head_lib64_libkernel32_a-0x4be9>
  40190a:	mov    edx,eax
  40190c:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  401911:	nop
  401912:	add    rsp,0x30
  401916:	pop    rbx
  401917:	pop    rsi
  401918:	pop    rdi
  401919:	ret    
  40191a:	nop    WORD PTR [rax+rax*1+0x0]
  401920:	lea    rcx,[rip+0xaad9]        # 40c400 <_head_lib64_libkernel32_a-0x4c00>
  401927:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  40192c:	mov    rbx,rax
  40192f:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  401934:	mov    QWORD PTR [rsp+0x20],rbx
  401939:	lea    r9,[rip+0xaad7]        # 40c417 <_head_lib64_libkernel32_a-0x4be9>
  401940:	mov    rcx,rsi
  401943:	mov    r8d,0x18
  401949:	mov    edx,eax
  40194b:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  401950:	nop
  401951:	add    rsp,0x30
  401955:	pop    rbx
  401956:	pop    rsi
  401957:	pop    rdi
  401958:	ret    
  401959:	nop    DWORD PTR [rax+0x0]
  401960:	push   r13
  401962:	push   r12
  401964:	push   rbp
  401965:	push   rdi
  401966:	push   rsi
  401967:	push   rbx
  401968:	sub    rsp,0x38
  40196c:	mov    DWORD PTR [rcx],0x0
  401972:	mov    rsi,rcx
  401975:	mov    r12,rdx
  401978:	mov    edi,r8d
  40197b:	mov    DWORD PTR [rdx],0xffffffff
  401981:	lea    rcx,[rsp+0x2f]
  401986:	mov    edx,0x1
  40198b:	mov    rbp,r9
  40198e:	mov    r8d,0x1
  401994:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  401999:	test   rax,rax
  40199c:	je     401ad0 <_head_lib64_libkernel32_a-0xf530>
  4019a2:	movzx  ecx,BYTE PTR [rsp+0x2f]
  4019a7:	add    DWORD PTR [rsi],0x1
  4019aa:	test   cl,cl
  4019ac:	je     401a62 <_head_lib64_libkernel32_a-0xf59e>
  4019b2:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  4019b7:	movzx  edx,BYTE PTR [rsp+0x2f]
  4019bc:	mov    r9,rbp
  4019bf:	mov    r8d,0x1
  4019c5:	mov    rcx,rax
  4019c8:	mov    r13,rax
  4019cb:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4019d0:	test   rax,rax
  4019d3:	je     401a2a <_head_lib64_libkernel32_a-0xf5d6>
  4019d5:	movzx  ebx,BYTE PTR [rsp+0x2f]
  4019da:	add    DWORD PTR [rsi],ebx
  4019dc:	test   di,di
  4019df:	mov    ecx,ebx
  4019e1:	je     401a9a <_head_lib64_libkernel32_a-0xf566>
  4019e7:	add    ebx,0x1
  4019ea:	movzx  edi,di
  4019ed:	mov    eax,ebx
  4019ef:	cdq    
  4019f0:	idiv   edi
  4019f2:	test   edx,edx
  4019f4:	jne    401a13 <_head_lib64_libkernel32_a-0xf5ed>
  4019f6:	jmp    401a9a <_head_lib64_libkernel32_a-0xf566>
  4019fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401a00:	add    DWORD PTR [rsi],0x1
  401a03:	add    ebx,0x1
  401a06:	mov    eax,ebx
  401a08:	cdq    
  401a09:	idiv   edi
  401a0b:	test   edx,edx
  401a0d:	je     401a95 <_head_lib64_libkernel32_a-0xf56b>
  401a13:	mov    r8d,0x1
  401a19:	mov    edx,0x1
  401a1e:	mov    rcx,rbp
  401a21:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  401a26:	test   eax,eax
  401a28:	jns    401a00 <_head_lib64_libkernel32_a-0xf600>
  401a2a:	call   QWORD PTR [rip+0xfd80]        # 4117b0 <__imp__errno>
  401a30:	mov    rcx,rbp
  401a33:	mov    ebx,DWORD PTR [rax]
  401a35:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  401a3a:	mov    r8,QWORD PTR [rsp+0x90]
  401a42:	mov    ecx,eax
  401a44:	mov    edx,ebx
  401a46:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  401a4b:	mov    rcx,r13
  401a4e:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  401a53:	xor    eax,eax
  401a55:	add    rsp,0x38
  401a59:	pop    rbx
  401a5a:	pop    rsi
  401a5b:	pop    rdi
  401a5c:	pop    rbp
  401a5d:	pop    r12
  401a5f:	pop    r13
  401a61:	ret    
  401a62:	movzx  edi,di
  401a65:	mov    r8d,0x1
  401a6b:	mov    rcx,rbp
  401a6e:	sub    edi,0x1
  401a71:	mov    edx,edi
  401a73:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  401a78:	test   eax,eax
  401a7a:	js     401ad0 <_head_lib64_libkernel32_a-0xf530>
  401a7c:	add    DWORD PTR [rsi],edi
  401a7e:	xor    eax,eax
  401a80:	mov    DWORD PTR [r12],0x0
  401a88:	add    rsp,0x38
  401a8c:	pop    rbx
  401a8d:	pop    rsi
  401a8e:	pop    rdi
  401a8f:	pop    rbp
  401a90:	pop    r12
  401a92:	pop    r13
  401a94:	ret    
  401a95:	movzx  ecx,BYTE PTR [rsp+0x2f]
  401a9a:	movzx  edx,cl
  401a9d:	xor    r8d,r8d
  401aa0:	mov    rcx,r13
  401aa3:	call   408720 <_head_lib64_libkernel32_a-0x88e0>
  401aa8:	mov    rcx,rax
  401aab:	mov    rbx,rax
  401aae:	call   409e20 <_head_lib64_libkernel32_a-0x71e0>
  401ab3:	mov    rcx,r13
  401ab6:	mov    DWORD PTR [r12],eax
  401aba:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  401abf:	mov    rax,rbx
  401ac2:	add    rsp,0x38
  401ac6:	pop    rbx
  401ac7:	pop    rsi
  401ac8:	pop    rdi
  401ac9:	pop    rbp
  401aca:	pop    r12
  401acc:	pop    r13
  401ace:	ret    
  401acf:	nop
  401ad0:	call   QWORD PTR [rip+0xfcda]        # 4117b0 <__imp__errno>
  401ad6:	mov    rcx,rbp
  401ad9:	mov    ebx,DWORD PTR [rax]
  401adb:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  401ae0:	mov    r8,QWORD PTR [rsp+0x90]
  401ae8:	mov    ecx,eax
  401aea:	mov    edx,ebx
  401aec:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  401af1:	xor    eax,eax
  401af3:	add    rsp,0x38
  401af7:	pop    rbx
  401af8:	pop    rsi
  401af9:	pop    rdi
  401afa:	pop    rbp
  401afb:	pop    r12
  401afd:	pop    r13
  401aff:	ret    
  401b00:	push   r12
  401b02:	push   rbp
  401b03:	push   rdi
  401b04:	push   rsi
  401b05:	push   rbx
  401b06:	sub    rsp,0x40
  401b0a:	test   rcx,rcx
  401b0d:	mov    esi,edx
  401b0f:	mov    rdi,r8
  401b12:	mov    BYTE PTR [rsp+0x36],0x0
  401b17:	mov    r12,r9
  401b1a:	je     401c50 <_head_lib64_libkernel32_a-0xf3b0>
  401b20:	lea    r9,[rsp+0x38]
  401b25:	xor    r8d,r8d
  401b28:	mov    rdx,0xffffffffffffffff
  401b2f:	mov    QWORD PTR [rsp+0x20],0x0
  401b38:	call   408808 <_head_lib64_libkernel32_a-0x87f8>
  401b3d:	mov    rdx,QWORD PTR [rsp+0x38]
  401b42:	mov    rbx,rax
  401b45:	cmp    rdx,0xff
  401b4c:	ja     401c30 <_head_lib64_libkernel32_a-0xf3d0>
  401b52:	mov    BYTE PTR [rsp+0x37],dl
  401b56:	mov    rcx,rbx
  401b59:	call   408778 <_head_lib64_libkernel32_a-0x8888>
  401b5e:	mov    rcx,rbx
  401b61:	mov    rbp,rax
  401b64:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  401b69:	lea    rcx,[rsp+0x37]
  401b6e:	mov    r9,rdi
  401b71:	mov    r8d,0x1
  401b77:	mov    edx,0x1
  401b7c:	call   409e48 <_head_lib64_libkernel32_a-0x71b8>
  401b81:	test   rax,rax
  401b84:	je     401ca0 <_head_lib64_libkernel32_a-0xf360>
  401b8a:	movzx  edx,BYTE PTR [rsp+0x37]
  401b8f:	mov    r9,rdi
  401b92:	mov    r8d,0x1
  401b98:	mov    rcx,rbp
  401b9b:	call   409e48 <_head_lib64_libkernel32_a-0x71b8>
  401ba0:	test   rax,rax
  401ba3:	je     401ca0 <_head_lib64_libkernel32_a-0xf360>
  401ba9:	movzx  ebx,BYTE PTR [rsp+0x37]
  401bae:	mov    rcx,rbp
  401bb1:	add    ebx,0x1
  401bb4:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  401bb9:	test   si,si
  401bbc:	mov    ecx,ebx
  401bbe:	je     401c1b <_head_lib64_libkernel32_a-0xf3e5>
  401bc0:	mov    eax,ebx
  401bc2:	movzx  esi,si
  401bc5:	cdq    
  401bc6:	idiv   esi
  401bc8:	test   edx,edx
  401bca:	je     401c1b <_head_lib64_libkernel32_a-0xf3e5>
  401bcc:	lea    rbp,[rsp+0x36]
  401bd1:	jmp    401bdf <_head_lib64_libkernel32_a-0xf421>
  401bd3:	add    ebx,0x1
  401bd6:	mov    eax,ebx
  401bd8:	cdq    
  401bd9:	idiv   esi
  401bdb:	test   edx,edx
  401bdd:	je     401c40 <_head_lib64_libkernel32_a-0xf3c0>
  401bdf:	mov    r9,rdi
  401be2:	mov    r8d,0x1
  401be8:	mov    edx,0x1
  401bed:	mov    rcx,rbp
  401bf0:	call   409e48 <_head_lib64_libkernel32_a-0x71b8>
  401bf5:	test   rax,rax
  401bf8:	jne    401bd3 <_head_lib64_libkernel32_a-0xf42d>
  401bfa:	call   QWORD PTR [rip+0xfbb0]        # 4117b0 <__imp__errno>
  401c00:	mov    rcx,rdi
  401c03:	mov    ebx,DWORD PTR [rax]
  401c05:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  401c0a:	mov    r8,r12
  401c0d:	mov    ecx,eax
  401c0f:	mov    edx,ebx
  401c11:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  401c16:	mov    ecx,0xffffffff
  401c1b:	mov    eax,ecx
  401c1d:	add    rsp,0x40
  401c21:	pop    rbx
  401c22:	pop    rsi
  401c23:	pop    rdi
  401c24:	pop    rbp
  401c25:	pop    r12
  401c27:	ret    
  401c28:	nop    DWORD PTR [rax+rax*1+0x0]
  401c30:	mov    BYTE PTR [rsp+0x37],0xff
  401c35:	mov    edx,0xff
  401c3a:	jmp    401b56 <_head_lib64_libkernel32_a-0xf4aa>
  401c3f:	nop
  401c40:	mov    ecx,ebx
  401c42:	mov    eax,ecx
  401c44:	add    rsp,0x40
  401c48:	pop    rbx
  401c49:	pop    rsi
  401c4a:	pop    rdi
  401c4b:	pop    rbp
  401c4c:	pop    r12
  401c4e:	ret    
  401c4f:	nop
  401c50:	lea    rbp,[rsp+0x36]
  401c55:	mov    r9,r8
  401c58:	mov    edx,0x1
  401c5d:	mov    r8d,0x1
  401c63:	mov    rcx,rbp
  401c66:	call   409e48 <_head_lib64_libkernel32_a-0x71b8>
  401c6b:	test   rax,rax
  401c6e:	je     401bfa <_head_lib64_libkernel32_a-0xf406>
  401c70:	mov    r9,rdi
  401c73:	mov    r8d,0x1
  401c79:	mov    edx,0x1
  401c7e:	mov    rcx,rbp
  401c81:	call   409e48 <_head_lib64_libkernel32_a-0x71b8>
  401c86:	test   rax,rax
  401c89:	je     401bfa <_head_lib64_libkernel32_a-0xf406>
  401c8f:	mov    ebx,0x2
  401c94:	jmp    401bb9 <_head_lib64_libkernel32_a-0xf447>
  401c99:	nop    DWORD PTR [rax+0x0]
  401ca0:	call   QWORD PTR [rip+0xfb0a]        # 4117b0 <__imp__errno>
  401ca6:	mov    rcx,rdi
  401ca9:	mov    ebx,DWORD PTR [rax]
  401cab:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  401cb0:	mov    r8,r12
  401cb3:	mov    ecx,eax
  401cb5:	mov    edx,ebx
  401cb7:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  401cbc:	mov    rcx,rbp
  401cbf:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  401cc4:	mov    ecx,0xffffffff
  401cc9:	mov    eax,ecx
  401ccb:	add    rsp,0x40
  401ccf:	pop    rbx
  401cd0:	pop    rsi
  401cd1:	pop    rdi
  401cd2:	pop    rbp
  401cd3:	pop    r12
  401cd5:	ret    
  401cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ce0:	push   r14
  401ce2:	push   r13
  401ce4:	push   r12
  401ce6:	push   rbp
  401ce7:	push   rdi
  401ce8:	push   rsi
  401ce9:	push   rbx
  401cea:	sub    rsp,0x40
  401cee:	mov    DWORD PTR [rcx],0x0
  401cf4:	mov    rsi,rcx
  401cf7:	mov    r13,rdx
  401cfa:	mov    r12d,r8d
  401cfd:	mov    DWORD PTR [rdx],0xffffffff
  401d03:	lea    rcx,[rsp+0x38]
  401d08:	mov    edx,0x4
  401d0d:	mov    rbp,r9
  401d10:	mov    r8d,0x1
  401d16:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  401d1b:	test   rax,rax
  401d1e:	je     401ea4 <_head_lib64_libkernel32_a-0xf15c>
  401d24:	mov    ecx,DWORD PTR [rsp+0x38]
  401d28:	add    DWORD PTR [rsi],0x4
  401d2b:	bswap  ecx
  401d2d:	test   ecx,ecx
  401d2f:	mov    DWORD PTR [rsp+0x38],ecx
  401d33:	je     401dd0 <_head_lib64_libkernel32_a-0xf230>
  401d39:	add    ecx,ecx
  401d3b:	movsxd rcx,ecx
  401d3e:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  401d43:	mov    ecx,DWORD PTR [rsp+0x38]
  401d47:	mov    r14,rax
  401d4a:	test   ecx,ecx
  401d4c:	jle    401e10 <_head_lib64_libkernel32_a-0xf1f0>
  401d52:	mov    rbx,rax
  401d55:	xor    edi,edi
  401d57:	jmp    401d7a <_head_lib64_libkernel32_a-0xf286>
  401d59:	nop    DWORD PTR [rax+0x0]
  401d60:	mov    ecx,DWORD PTR [rsp+0x38]
  401d64:	add    edi,0x1
  401d67:	rol    WORD PTR [rbx],0x8
  401d6b:	add    rbx,0x2
  401d6f:	add    DWORD PTR [rsi],0x2
  401d72:	cmp    ecx,edi
  401d74:	jle    401e10 <_head_lib64_libkernel32_a-0xf1f0>
  401d7a:	mov    r9,rbp
  401d7d:	mov    r8d,0x1
  401d83:	mov    edx,0x2
  401d88:	mov    rcx,rbx
  401d8b:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  401d90:	test   rax,rax
  401d93:	jne    401d60 <_head_lib64_libkernel32_a-0xf2a0>
  401d95:	call   QWORD PTR [rip+0xfa15]        # 4117b0 <__imp__errno>
  401d9b:	mov    rcx,rbp
  401d9e:	mov    ebx,DWORD PTR [rax]
  401da0:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  401da5:	mov    r8,QWORD PTR [rsp+0xa0]
  401dad:	mov    ecx,eax
  401daf:	mov    edx,ebx
  401db1:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  401db6:	mov    rcx,r14
  401db9:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  401dbe:	xor    eax,eax
  401dc0:	add    rsp,0x40
  401dc4:	pop    rbx
  401dc5:	pop    rsi
  401dc6:	pop    rdi
  401dc7:	pop    rbp
  401dc8:	pop    r12
  401dca:	pop    r13
  401dcc:	pop    r14
  401dce:	ret    
  401dcf:	nop
  401dd0:	movzx  r12d,r12w
  401dd4:	mov    r8d,0x1
  401dda:	mov    rcx,rbp
  401ddd:	sub    r12d,0x1
  401de1:	mov    edx,r12d
  401de4:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  401de9:	test   eax,eax
  401deb:	js     401ea4 <_head_lib64_libkernel32_a-0xf15c>
  401df1:	add    DWORD PTR [rsi],r12d
  401df4:	xor    eax,eax
  401df6:	mov    DWORD PTR [r13+0x0],0x0
  401dfe:	add    rsp,0x40
  401e02:	pop    rbx
  401e03:	pop    rsi
  401e04:	pop    rdi
  401e05:	pop    rbp
  401e06:	pop    r12
  401e08:	pop    r13
  401e0a:	pop    r14
  401e0c:	ret    
  401e0d:	nop    DWORD PTR [rax]
  401e10:	test   r12w,r12w
  401e14:	je     401e64 <_head_lib64_libkernel32_a-0xf19c>
  401e16:	lea    ebx,[rcx+0x1]
  401e19:	movzx  r12d,r12w
  401e1d:	mov    eax,ebx
  401e1f:	cdq    
  401e20:	idiv   r12d
  401e23:	test   edx,edx
  401e25:	jne    401e40 <_head_lib64_libkernel32_a-0xf1c0>
  401e27:	jmp    401e64 <_head_lib64_libkernel32_a-0xf19c>
  401e29:	nop    DWORD PTR [rax+0x0]
  401e30:	add    DWORD PTR [rsi],0x1
  401e33:	add    ebx,0x1
  401e36:	mov    eax,ebx
  401e38:	cdq    
  401e39:	idiv   r12d
  401e3c:	test   edx,edx
  401e3e:	je     401e60 <_head_lib64_libkernel32_a-0xf1a0>
  401e40:	mov    r8d,0x1
  401e46:	mov    edx,0x1
  401e4b:	mov    rcx,rbp
  401e4e:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  401e53:	test   eax,eax
  401e55:	jns    401e30 <_head_lib64_libkernel32_a-0xf1d0>
  401e57:	jmp    401d95 <_head_lib64_libkernel32_a-0xf26b>
  401e5c:	nop    DWORD PTR [rax+0x0]
  401e60:	mov    ecx,DWORD PTR [rsp+0x38]
  401e64:	lea    r9,[rsp+0x3c]
  401e69:	mov    edx,ecx
  401e6b:	xor    r8d,r8d
  401e6e:	mov    QWORD PTR [rsp+0x20],0x0
  401e77:	mov    rcx,r14
  401e7a:	call   408770 <_head_lib64_libkernel32_a-0x8890>
  401e7f:	mov    rcx,r14
  401e82:	mov    rbx,rax
  401e85:	mov    eax,DWORD PTR [rsp+0x3c]
  401e89:	mov    DWORD PTR [r13+0x0],eax
  401e8d:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  401e92:	mov    rax,rbx
  401e95:	add    rsp,0x40
  401e99:	pop    rbx
  401e9a:	pop    rsi
  401e9b:	pop    rdi
  401e9c:	pop    rbp
  401e9d:	pop    r12
  401e9f:	pop    r13
  401ea1:	pop    r14
  401ea3:	ret    
  401ea4:	call   QWORD PTR [rip+0xf906]        # 4117b0 <__imp__errno>
  401eaa:	mov    rcx,rbp
  401ead:	mov    ebx,DWORD PTR [rax]
  401eaf:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  401eb4:	mov    r8,QWORD PTR [rsp+0xa0]
  401ebc:	mov    ecx,eax
  401ebe:	mov    edx,ebx
  401ec0:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  401ec5:	xor    eax,eax
  401ec7:	add    rsp,0x40
  401ecb:	pop    rbx
  401ecc:	pop    rsi
  401ecd:	pop    rdi
  401ece:	pop    rbp
  401ecf:	pop    r12
  401ed1:	pop    r13
  401ed3:	pop    r14
  401ed5:	ret    
  401ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ee0:	push   r12
  401ee2:	push   rbp
  401ee3:	push   rdi
  401ee4:	push   rsi
  401ee5:	push   rbx
  401ee6:	sub    rsp,0x40
  401eea:	test   rcx,rcx
  401eed:	mov    esi,edx
  401eef:	mov    rdi,r8
  401ef2:	mov    BYTE PTR [rsp+0x37],0x0
  401ef7:	mov    rbp,r9
  401efa:	mov    DWORD PTR [rsp+0x38],0x0
  401f02:	je     402024 <_head_lib64_libkernel32_a-0xefdc>
  401f08:	lea    r9,[rsp+0x3c]
  401f0d:	xor    r8d,r8d
  401f10:	mov    edx,0xffffffff
  401f15:	mov    QWORD PTR [rsp+0x20],0x0
  401f1e:	call   408768 <_head_lib64_libkernel32_a-0x8898>
  401f23:	mov    ecx,DWORD PTR [rsp+0x3c]
  401f27:	mov    rbx,rax
  401f2a:	test   ecx,ecx
  401f2c:	jle    401f4d <_head_lib64_libkernel32_a-0xf0b3>
  401f2e:	lea    edx,[rcx-0x1]
  401f31:	lea    rdx,[rax+rdx*2+0x2]
  401f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f40:	rol    WORD PTR [rax],0x8
  401f44:	add    rax,0x2
  401f48:	cmp    rax,rdx
  401f4b:	jne    401f40 <_head_lib64_libkernel32_a-0xf0c0>
  401f4d:	bswap  ecx
  401f4f:	mov    r9,rdi
  401f52:	mov    DWORD PTR [rsp+0x38],ecx
  401f56:	mov    edx,0x4
  401f5b:	lea    rcx,[rsp+0x38]
  401f60:	mov    r8d,0x1
  401f66:	call   409e48 <_head_lib64_libkernel32_a-0x71b8>
  401f6b:	test   rax,rax
  401f6e:	je     401fe7 <_head_lib64_libkernel32_a-0xf019>
  401f70:	mov    eax,DWORD PTR [rsp+0x38]
  401f74:	mov    edx,0x2
  401f79:	mov    rcx,rbx
  401f7c:	mov    r9,rdi
  401f7f:	lea    r8d,[rax+0x1]
  401f83:	movsxd r8,r8d
  401f86:	call   409e48 <_head_lib64_libkernel32_a-0x71b8>
  401f8b:	mov    ecx,DWORD PTR [rsp+0x38]
  401f8f:	lea    edx,[rcx+0x1]
  401f92:	movsxd rdx,edx
  401f95:	cmp    rax,rdx
  401f98:	jb     401fe7 <_head_lib64_libkernel32_a-0xf019>
  401f9a:	lea    ebx,[rcx+rcx*1+0x6]
  401f9e:	test   si,si
  401fa1:	mov    ecx,ebx
  401fa3:	je     402008 <_head_lib64_libkernel32_a-0xeff8>
  401fa5:	mov    eax,ebx
  401fa7:	movzx  esi,si
  401faa:	cdq    
  401fab:	idiv   esi
  401fad:	test   edx,edx
  401faf:	je     402008 <_head_lib64_libkernel32_a-0xeff8>
  401fb1:	lea    r12,[rsp+0x37]
  401fb6:	jmp    401fcc <_head_lib64_libkernel32_a-0xf034>
  401fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  401fc0:	add    ebx,0x1
  401fc3:	mov    eax,ebx
  401fc5:	cdq    
  401fc6:	idiv   esi
  401fc8:	test   edx,edx
  401fca:	je     402015 <_head_lib64_libkernel32_a-0xefeb>
  401fcc:	mov    r9,rdi
  401fcf:	mov    r8d,0x1
  401fd5:	mov    edx,0x1
  401fda:	mov    rcx,r12
  401fdd:	call   409e48 <_head_lib64_libkernel32_a-0x71b8>
  401fe2:	test   rax,rax
  401fe5:	jne    401fc0 <_head_lib64_libkernel32_a-0xf040>
  401fe7:	call   QWORD PTR [rip+0xf7c3]        # 4117b0 <__imp__errno>
  401fed:	mov    rcx,rdi
  401ff0:	mov    ebx,DWORD PTR [rax]
  401ff2:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  401ff7:	mov    r8,rbp
  401ffa:	mov    ecx,eax
  401ffc:	mov    edx,ebx
  401ffe:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  402003:	mov    ecx,0xffffffff
  402008:	mov    eax,ecx
  40200a:	add    rsp,0x40
  40200e:	pop    rbx
  40200f:	pop    rsi
  402010:	pop    rdi
  402011:	pop    rbp
  402012:	pop    r12
  402014:	ret    
  402015:	mov    ecx,ebx
  402017:	mov    eax,ecx
  402019:	add    rsp,0x40
  40201d:	pop    rbx
  40201e:	pop    rsi
  40201f:	pop    rdi
  402020:	pop    rbp
  402021:	pop    r12
  402023:	ret    
  402024:	lea    rcx,[rsp+0x38]
  402029:	mov    r9,r8
  40202c:	mov    edx,0x4
  402031:	mov    r8d,0x1
  402037:	call   409e48 <_head_lib64_libkernel32_a-0x71b8>
  40203c:	test   rax,rax
  40203f:	je     401fe7 <_head_lib64_libkernel32_a-0xf019>
  402041:	mov    ebx,0x4
  402046:	jmp    401f9e <_head_lib64_libkernel32_a-0xf062>
  40204b:	nop    DWORD PTR [rax+rax*1+0x0]
  402050:	push   r12
  402052:	push   rbp
  402053:	push   rdi
  402054:	push   rsi
  402055:	push   rbx
  402056:	xor    edi,edi
  402058:	mov    ebp,0x1
  40205d:	mov    r12d,0x2
  402063:	movzx  r8d,r8w
  402067:	nop    WORD PTR [rax+rax*1+0x0]
  402070:	test   r9d,r9d
  402073:	jle    40210b <_head_lib64_libkernel32_a-0xeef5>
  402079:	test   r8d,r8d
  40207c:	jle    40210b <_head_lib64_libkernel32_a-0xeef5>
  402082:	movsx  r10d,BYTE PTR [rcx]
  402086:	lea    rsi,[rcx+0x1]
  40208a:	lea    ebx,[r8-0x1]
  40208e:	test   r10d,r10d
  402091:	js     402150 <_head_lib64_libkernel32_a-0xeeb0>
  402097:	test   ebx,ebx
  402099:	je     4021c6 <_head_lib64_libkernel32_a-0xee3a>
  40209f:	movzx  eax,BYTE PTR [rcx+0x1]
  4020a3:	sub    r9d,0x1
  4020a7:	add    rcx,0x2
  4020ab:	sub    r8d,0x2
  4020af:	test   r10d,r10d
  4020b2:	mov    BYTE PTR [rdx],al
  4020b4:	lea    rax,[rdx+0x1]
  4020b8:	je     4021be <_head_lib64_libkernel32_a-0xee42>
  4020be:	sub    r10d,0x1
  4020c2:	lea    r10,[rdx+r10*1+0x2]
  4020c7:	mov    rdx,rax
  4020ca:	jmp    4020f8 <_head_lib64_libkernel32_a-0xef08>
  4020cc:	nop    DWORD PTR [rax+0x0]
  4020d0:	test   r9d,r9d
  4020d3:	je     4021a5 <_head_lib64_libkernel32_a-0xee5b>
  4020d9:	movzx  eax,BYTE PTR [rcx]
  4020dc:	add    rdx,0x1
  4020e0:	sub    r9d,0x1
  4020e4:	add    rcx,0x1
  4020e8:	sub    r8d,0x1
  4020ec:	mov    BYTE PTR [rdx-0x1],al
  4020ef:	cmp    rdx,r10
  4020f2:	je     402070 <_head_lib64_libkernel32_a-0xef90>
  4020f8:	test   r8d,r8d
  4020fb:	jne    4020d0 <_head_lib64_libkernel32_a-0xef30>
  4020fd:	mov    edi,0x3
  402102:	test   r9d,r9d
  402105:	jg     402079 <_head_lib64_libkernel32_a-0xef87>
  40210b:	cmp    r9d,0x0
  40210f:	jle    4021d6 <_head_lib64_libkernel32_a-0xee2a>
  402115:	test   r8d,r8d
  402118:	jle    40212f <_head_lib64_libkernel32_a-0xeed1>
  40211a:	lea    eax,[r8-0x1]
  40211e:	lea    rax,[rdx+rax*1+0x1]
  402123:	mov    BYTE PTR [rdx],0x0
  402126:	add    rdx,0x1
  40212a:	cmp    rdx,rax
  40212d:	jne    402123 <_head_lib64_libkernel32_a-0xeedd>
  40212f:	mov    eax,r9d
  402132:	neg    eax
  402134:	test   r8d,r8d
  402137:	je     402146 <_head_lib64_libkernel32_a-0xeeba>
  402139:	test   edi,edi
  40213b:	jne    402143 <_head_lib64_libkernel32_a-0xeebd>
  40213d:	cmp    r8d,0x1
  402141:	je     402146 <_head_lib64_libkernel32_a-0xeeba>
  402143:	mov    eax,r8d
  402146:	pop    rbx
  402147:	pop    rsi
  402148:	pop    rdi
  402149:	pop    rbp
  40214a:	pop    r12
  40214c:	ret    
  40214d:	nop    DWORD PTR [rax]
  402150:	mov    eax,ebp
  402152:	sub    eax,r10d
  402155:	test   ebx,ebx
  402157:	je     4021e3 <_head_lib64_libkernel32_a-0xee1d>
  40215d:	movzx  r11d,BYTE PTR [rcx+0x1]
  402162:	cmp    r9d,eax
  402165:	lea    eax,[r9-0x1]
  402169:	cmovl  edi,r12d
  40216d:	add    r10d,eax
  402170:	add    rdx,0x1
  402174:	mov    r9d,r10d
  402177:	mov    BYTE PTR [rdx-0x1],r11b
  40217b:	nop    DWORD PTR [rax+rax*1+0x0]
  402180:	test   eax,eax
  402182:	je     4021b0 <_head_lib64_libkernel32_a-0xee50>
  402184:	sub    eax,0x1
  402187:	mov    BYTE PTR [rdx],r11b
  40218a:	add    rdx,0x1
  40218e:	cmp    r10d,eax
  402191:	jne    402180 <_head_lib64_libkernel32_a-0xee80>
  402193:	test   r10d,r10d
  402196:	je     4021f0 <_head_lib64_libkernel32_a-0xee10>
  402198:	add    rcx,0x2
  40219c:	sub    r8d,0x2
  4021a0:	jmp    402070 <_head_lib64_libkernel32_a-0xef90>
  4021a5:	mov    edi,0x4
  4021aa:	jmp    402070 <_head_lib64_libkernel32_a-0xef90>
  4021af:	nop
  4021b0:	mov    r8d,ebx
  4021b3:	xor    r9d,r9d
  4021b6:	mov    rcx,rsi
  4021b9:	jmp    402070 <_head_lib64_libkernel32_a-0xef90>
  4021be:	mov    rdx,rax
  4021c1:	jmp    402070 <_head_lib64_libkernel32_a-0xef90>
  4021c6:	xor    r8d,r8d
  4021c9:	mov    rcx,rsi
  4021cc:	mov    edi,0x3
  4021d1:	jmp    402102 <_head_lib64_libkernel32_a-0xeefe>
  4021d6:	jne    40212f <_head_lib64_libkernel32_a-0xeed1>
  4021dc:	xor    eax,eax
  4021de:	jmp    402134 <_head_lib64_libkernel32_a-0xeecc>
  4021e3:	xor    r8d,r8d
  4021e6:	mov    edi,0x1
  4021eb:	jmp    40212f <_head_lib64_libkernel32_a-0xeed1>
  4021f0:	mov    r8d,ebx
  4021f3:	mov    rcx,rsi
  4021f6:	jmp    402070 <_head_lib64_libkernel32_a-0xef90>
  4021fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402200:	push   r15
  402202:	push   r14
  402204:	push   r13
  402206:	push   r12
  402208:	push   rbp
  402209:	push   rdi
  40220a:	push   rsi
  40220b:	push   rbx
  40220c:	sub    rsp,0xb8
  402213:	xor    esi,esi
  402215:	mov    r13d,0x1
  40221b:	mov    QWORD PTR [rsp+0x110],r8
  402223:	lea    r12,[rsp+0x30]
  402228:	mov    rdi,rcx
  40222b:	mov    ecx,edx
  40222d:	mov    rbx,rcx
  402230:	add    rdi,0x1
  402234:	call   408788 <_head_lib64_libkernel32_a-0x8878>
  402239:	movsx  ebp,BYTE PTR [rdi-0x1]
  40223d:	test   ebx,ebx
  40223f:	mov    r15,rax
  402242:	jle    402359 <_head_lib64_libkernel32_a-0xeca7>
  402248:	nop    DWORD PTR [rax+rax*1+0x0]
  402250:	movzx  eax,sil
  402254:	mov    r14d,ebp
  402257:	mov    BYTE PTR [rsp+rax*1+0x30],bpl
  40225c:	lea    eax,[rsi+0x1]
  40225f:	cmp    al,0x2
  402261:	jbe    402338 <_head_lib64_libkernel32_a-0xecc8>
  402267:	movzx  edx,al
  40226a:	lea    ecx,[rdx-0x2]
  40226d:	movsxd rcx,ecx
  402270:	movsx  ecx,BYTE PTR [rsp+rcx*1+0x30]
  402275:	cmp    ebp,ecx
  402277:	jne    402390 <_head_lib64_libkernel32_a-0xec70>
  40227d:	sub    edx,0x3
  402280:	movsxd r10,edx
  402283:	movsx  edx,BYTE PTR [rsp+r10*1+0x30]
  402289:	cmp    ebp,edx
  40228b:	jne    402390 <_head_lib64_libkernel32_a-0xec70>
  402291:	cmp    al,0x3
  402293:	jne    402420 <_head_lib64_libkernel32_a-0xebe0>
  402299:	movsx  esi,BYTE PTR [rdi]
  40229c:	lea    rax,[rdi+0x1]
  4022a0:	sub    ebx,0x1
  4022a3:	add    rdi,0x7d
  4022a7:	mov    edx,0x4
  4022ac:	cmp    ebp,esi
  4022ae:	je     4022c1 <_head_lib64_libkernel32_a-0xed3f>
  4022b0:	jmp    4024e0 <_head_lib64_libkernel32_a-0xeb20>
  4022b5:	add    edx,0x1
  4022b8:	cmp    rax,rdi
  4022bb:	je     4024d3 <_head_lib64_libkernel32_a-0xeb2d>
  4022c1:	movsx  esi,BYTE PTR [rax]
  4022c4:	sub    ebx,0x1
  4022c7:	add    rax,0x1
  4022cb:	cmp    ebp,esi
  4022cd:	je     4022b5 <_head_lib64_libkernel32_a-0xed4b>
  4022cf:	mov    r8d,r13d
  4022d2:	mov    rdi,rax
  4022d5:	sub    r8d,edx
  4022d8:	mov    rax,QWORD PTR [r15+0x8]
  4022dc:	lea    rdx,[rax+0x1]
  4022e0:	cmp    rdx,QWORD PTR [r15+0x10]
  4022e4:	jae    402400 <_head_lib64_libkernel32_a-0xec00>
  4022ea:	mov    rcx,QWORD PTR [r15]
  4022ed:	mov    QWORD PTR [r15+0x8],rdx
  4022f1:	mov    BYTE PTR [rcx+rax*1],r8b
  4022f5:	mov    rdx,QWORD PTR [r15]
  4022f8:	mov    rax,QWORD PTR [r15+0x8]
  4022fc:	mov    BYTE PTR [rdx+rax*1],0x0
  402300:	mov    rax,QWORD PTR [r15+0x8]
  402304:	lea    rdx,[rax+0x1]
  402308:	cmp    rdx,QWORD PTR [r15+0x10]
  40230c:	jae    4023e0 <_head_lib64_libkernel32_a-0xec20>
  402312:	mov    rcx,QWORD PTR [r15]
  402315:	mov    QWORD PTR [r15+0x8],rdx
  402319:	mov    BYTE PTR [rcx+rax*1],r14b
  40231d:	mov    rdx,QWORD PTR [r15]
  402320:	mov    rax,QWORD PTR [r15+0x8]
  402324:	mov    BYTE PTR [rdx+rax*1],0x0
  402328:	xor    eax,eax
  40232a:	test   ebx,ebx
  40232c:	jle    402338 <_head_lib64_libkernel32_a-0xecc8>
  40232e:	mov    BYTE PTR [rsp+0x30],sil
  402333:	mov    eax,0x1
  402338:	mov    esi,eax
  40233a:	sub    ebx,0x1
  40233d:	movsx  ebp,BYTE PTR [rdi]
  402340:	add    rdi,0x1
  402344:	test   ebx,ebx
  402346:	jg     402250 <_head_lib64_libkernel32_a-0xedb0>
  40234c:	mov    r8d,esi
  40234f:	sub    r8b,0x1
  402353:	jns    402499 <_head_lib64_libkernel32_a-0xeb67>
  402359:	mov    rcx,QWORD PTR [rsp+0x110]
  402361:	xor    edx,edx
  402363:	mov    rax,QWORD PTR [r15+0x8]
  402367:	mov    WORD PTR [rcx],ax
  40236a:	mov    rcx,r15
  40236d:	call   408798 <_head_lib64_libkernel32_a-0x8868>
  402372:	add    rsp,0xb8
  402379:	pop    rbx
  40237a:	pop    rsi
  40237b:	pop    rdi
  40237c:	pop    rbp
  40237d:	pop    r12
  40237f:	pop    r13
  402381:	pop    r14
  402383:	pop    r15
  402385:	ret    
  402386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402390:	cmp    al,0x80
  402392:	mov    esi,eax
  402394:	jne    40233a <_head_lib64_libkernel32_a-0xecc6>
  402396:	mov    rax,QWORD PTR [r15+0x8]
  40239a:	lea    rdx,[rax+0x1]
  40239e:	cmp    rdx,QWORD PTR [r15+0x10]
  4023a2:	jae    402460 <_head_lib64_libkernel32_a-0xeba0>
  4023a8:	mov    rcx,QWORD PTR [r15]
  4023ab:	mov    QWORD PTR [r15+0x8],rdx
  4023af:	mov    BYTE PTR [rcx+rax*1],0x7f
  4023b3:	mov    rdx,QWORD PTR [r15]
  4023b6:	mov    rax,QWORD PTR [r15+0x8]
  4023ba:	mov    BYTE PTR [rdx+rax*1],0x0
  4023be:	mov    r8d,0x80
  4023c4:	mov    rdx,r12
  4023c7:	mov    rcx,r15
  4023ca:	call   4087a0 <_head_lib64_libkernel32_a-0x8860>
  4023cf:	xor    esi,esi
  4023d1:	jmp    40233a <_head_lib64_libkernel32_a-0xecc6>
  4023d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023e0:	mov    r8d,ebp
  4023e3:	mov    rdx,0xffffffffffffffff
  4023ea:	mov    rcx,r15
  4023ed:	call   408790 <_head_lib64_libkernel32_a-0x8870>
  4023f2:	jmp    402328 <_head_lib64_libkernel32_a-0xecd8>
  4023f7:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	movsx  r8d,r8b
  402404:	mov    rdx,0xffffffffffffffff
  40240b:	mov    rcx,r15
  40240e:	call   408790 <_head_lib64_libkernel32_a-0x8870>
  402413:	jmp    402300 <_head_lib64_libkernel32_a-0xed00>
  402418:	nop    DWORD PTR [rax+rax*1+0x0]
  402420:	mov    rax,QWORD PTR [r15+0x8]
  402424:	lea    r8d,[rsi-0x3]
  402428:	lea    rdx,[rax+0x1]
  40242c:	cmp    rdx,QWORD PTR [r15+0x10]
  402430:	jae    40247a <_head_lib64_libkernel32_a-0xeb86>
  402432:	mov    rcx,QWORD PTR [r15]
  402435:	mov    QWORD PTR [r15+0x8],rdx
  402439:	mov    BYTE PTR [rcx+rax*1],r8b
  40243d:	mov    rdx,QWORD PTR [r15]
  402440:	mov    rax,QWORD PTR [r15+0x8]
  402444:	mov    BYTE PTR [rdx+rax*1],0x0
  402448:	mov    r8,r10
  40244b:	mov    rdx,r12
  40244e:	mov    rcx,r15
  402451:	call   4087a0 <_head_lib64_libkernel32_a-0x8860>
  402456:	jmp    402299 <_head_lib64_libkernel32_a-0xed67>
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]
  402460:	mov    r8d,0x7f
  402466:	mov    rdx,0xffffffffffffffff
  40246d:	mov    rcx,r15
  402470:	call   408790 <_head_lib64_libkernel32_a-0x8870>
  402475:	jmp    4023be <_head_lib64_libkernel32_a-0xec42>
  40247a:	movsx  r8d,r8b
  40247e:	mov    rdx,0xffffffffffffffff
  402485:	mov    rcx,r15
  402488:	mov    QWORD PTR [rsp+0x28],r10
  40248d:	call   408790 <_head_lib64_libkernel32_a-0x8870>
  402492:	mov    r10,QWORD PTR [rsp+0x28]
  402497:	jmp    402448 <_head_lib64_libkernel32_a-0xebb8>
  402499:	mov    rax,QWORD PTR [r15+0x8]
  40249d:	lea    rdx,[rax+0x1]
  4024a1:	cmp    rdx,QWORD PTR [r15+0x10]
  4024a5:	jae    4024ee <_head_lib64_libkernel32_a-0xeb12>
  4024a7:	mov    rcx,QWORD PTR [r15]
  4024aa:	mov    QWORD PTR [r15+0x8],rdx
  4024ae:	mov    BYTE PTR [rcx+rax*1],r8b
  4024b2:	mov    rdx,QWORD PTR [r15]
  4024b5:	mov    rax,QWORD PTR [r15+0x8]
  4024b9:	mov    BYTE PTR [rdx+rax*1],0x0
  4024bd:	lea    rdx,[rsp+0x30]
  4024c2:	movzx  r8d,sil
  4024c6:	mov    rcx,r15
  4024c9:	call   4087a0 <_head_lib64_libkernel32_a-0x8860>
  4024ce:	jmp    402359 <_head_lib64_libkernel32_a-0xeca7>
  4024d3:	mov    esi,ebp
  4024d5:	mov    r8d,0xffffff81
  4024db:	jmp    4022d8 <_head_lib64_libkernel32_a-0xed28>
  4024e0:	mov    rdi,rax
  4024e3:	mov    r8d,0xfffffffe
  4024e9:	jmp    4022d8 <_head_lib64_libkernel32_a-0xed28>
  4024ee:	movzx  r8d,r8b
  4024f2:	mov    rdx,0xffffffffffffffff
  4024f9:	mov    rcx,r15
  4024fc:	call   408790 <_head_lib64_libkernel32_a-0x8870>
  402501:	jmp    4024bd <_head_lib64_libkernel32_a-0xeb43>
  402503:	nop    DWORD PTR [rax]
  402506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402510:	push   rbx
  402511:	sub    rsp,0x20
  402515:	lea    rdx,[rip+0x9efe]        # 40c41a <_head_lib64_libkernel32_a-0x4be6>
  40251c:	mov    r8d,0x4
  402522:	mov    rbx,rcx
  402525:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  40252a:	xor    edx,edx
  40252c:	test   eax,eax
  40252e:	jne    402540 <_head_lib64_libkernel32_a-0xeac0>
  402530:	mov    eax,edx
  402532:	add    rsp,0x20
  402536:	pop    rbx
  402537:	ret    
  402538:	nop    DWORD PTR [rax+rax*1+0x0]
  402540:	lea    rdx,[rip+0x9ed8]        # 40c41f <_head_lib64_libkernel32_a-0x4be1>
  402547:	mov    r8d,0x4
  40254d:	mov    rcx,rbx
  402550:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402555:	mov    edx,0x9
  40255a:	test   eax,eax
  40255c:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  40255e:	lea    rdx,[rip+0x9ebf]        # 40c424 <_head_lib64_libkernel32_a-0x4bdc>
  402565:	mov    r8d,0x4
  40256b:	mov    rcx,rbx
  40256e:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402573:	mov    edx,0xa
  402578:	test   eax,eax
  40257a:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  40257c:	lea    rdx,[rip+0x9ea6]        # 40c429 <_head_lib64_libkernel32_a-0x4bd7>
  402583:	mov    r8d,0x4
  402589:	mov    rcx,rbx
  40258c:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402591:	mov    edx,0xb
  402596:	test   eax,eax
  402598:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  40259a:	lea    rdx,[rip+0x9e8d]        # 40c42e <_head_lib64_libkernel32_a-0x4bd2>
  4025a1:	mov    r8d,0x4
  4025a7:	mov    rcx,rbx
  4025aa:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  4025af:	mov    edx,0xc
  4025b4:	test   eax,eax
  4025b6:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  4025bc:	lea    rdx,[rip+0x9e70]        # 40c433 <_head_lib64_libkernel32_a-0x4bcd>
  4025c3:	mov    r8d,0x4
  4025c9:	mov    rcx,rbx
  4025cc:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  4025d1:	mov    edx,0xd
  4025d6:	test   eax,eax
  4025d8:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  4025de:	lea    rdx,[rip+0x9e53]        # 40c438 <_head_lib64_libkernel32_a-0x4bc8>
  4025e5:	mov    r8d,0x4
  4025eb:	mov    rcx,rbx
  4025ee:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  4025f3:	mov    edx,0xe
  4025f8:	test   eax,eax
  4025fa:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  402600:	lea    rdx,[rip+0x9e36]        # 40c43d <_head_lib64_libkernel32_a-0x4bc3>
  402607:	mov    r8d,0x4
  40260d:	mov    rcx,rbx
  402610:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402615:	mov    edx,0x3
  40261a:	test   eax,eax
  40261c:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  402622:	lea    rdx,[rip+0x9e19]        # 40c442 <_head_lib64_libkernel32_a-0x4bbe>
  402629:	mov    r8d,0x4
  40262f:	mov    rcx,rbx
  402632:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402637:	mov    edx,0x7
  40263c:	test   eax,eax
  40263e:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  402644:	lea    rdx,[rip+0x9dfc]        # 40c447 <_head_lib64_libkernel32_a-0x4bb9>
  40264b:	mov    r8d,0x4
  402651:	mov    rcx,rbx
  402654:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402659:	mov    edx,0x4
  40265e:	test   eax,eax
  402660:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  402666:	lea    rdx,[rip+0x9ddf]        # 40c44c <_head_lib64_libkernel32_a-0x4bb4>
  40266d:	mov    r8d,0x4
  402673:	mov    rcx,rbx
  402676:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  40267b:	mov    edx,0x1
  402680:	test   eax,eax
  402682:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  402688:	lea    rdx,[rip+0x9dc2]        # 40c451 <_head_lib64_libkernel32_a-0x4baf>
  40268f:	mov    r8d,0x4
  402695:	mov    rcx,rbx
  402698:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  40269d:	mov    edx,0x5
  4026a2:	test   eax,eax
  4026a4:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  4026aa:	lea    rdx,[rip+0x9da5]        # 40c456 <_head_lib64_libkernel32_a-0x4baa>
  4026b1:	mov    r8d,0x4
  4026b7:	mov    rcx,rbx
  4026ba:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  4026bf:	mov    edx,0x12
  4026c4:	test   eax,eax
  4026c6:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  4026cc:	lea    rdx,[rip+0x9d88]        # 40c45b <_head_lib64_libkernel32_a-0x4ba5>
  4026d3:	mov    r8d,0x4
  4026d9:	mov    rcx,rbx
  4026dc:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  4026e1:	mov    edx,0x13
  4026e6:	test   eax,eax
  4026e8:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  4026ee:	lea    rdx,[rip+0x9d6b]        # 40c460 <_head_lib64_libkernel32_a-0x4ba0>
  4026f5:	mov    r8d,0x4
  4026fb:	mov    rcx,rbx
  4026fe:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402703:	mov    edx,0x6
  402708:	test   eax,eax
  40270a:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  402710:	mov    r8d,0x4
  402716:	mov    rcx,rbx
  402719:	lea    rdx,[rip+0x9d45]        # 40c465 <_head_lib64_libkernel32_a-0x4b9b>
  402720:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402725:	test   eax,eax
  402727:	jne    402730 <_head_lib64_libkernel32_a-0xe8d0>
  402729:	xor    edx,edx
  40272b:	jmp    402530 <_head_lib64_libkernel32_a-0xead0>
  402730:	lea    rdx,[rip+0x9d33]        # 40c46a <_head_lib64_libkernel32_a-0x4b96>
  402737:	mov    r8d,0x4
  40273d:	mov    rcx,rbx
  402740:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402745:	mov    edx,0x10
  40274a:	test   eax,eax
  40274c:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  402752:	lea    rdx,[rip+0x9d16]        # 40c46f <_head_lib64_libkernel32_a-0x4b91>
  402759:	mov    r8d,0x4
  40275f:	mov    rcx,rbx
  402762:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402767:	mov    edx,0x11
  40276c:	test   eax,eax
  40276e:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  402774:	mov    r8d,0x4
  40277a:	mov    rcx,rbx
  40277d:	lea    rdx,[rip+0x9cf0]        # 40c474 <_head_lib64_libkernel32_a-0x4b8c>
  402784:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  402789:	test   eax,eax
  40278b:	je     402729 <_head_lib64_libkernel32_a-0xe8d7>
  40278d:	lea    rdx,[rip+0x9cae]        # 40c442 <_head_lib64_libkernel32_a-0x4bbe>
  402794:	mov    r8d,0x4
  40279a:	mov    rcx,rbx
  40279d:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  4027a2:	mov    edx,0x7
  4027a7:	test   eax,eax
  4027a9:	je     402530 <_head_lib64_libkernel32_a-0xead0>
  4027af:	mov    r8d,0x4
  4027b5:	mov    rcx,rbx
  4027b8:	lea    rdx,[rip+0x9cba]        # 40c479 <_head_lib64_libkernel32_a-0x4b87>
  4027bf:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  4027c4:	test   eax,eax
  4027c6:	je     402729 <_head_lib64_libkernel32_a-0xe8d7>
  4027cc:	mov    r8d,0x4
  4027d2:	mov    rcx,rbx
  4027d5:	lea    rdx,[rip+0x9ca2]        # 40c47e <_head_lib64_libkernel32_a-0x4b82>
  4027dc:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  4027e1:	test   eax,eax
  4027e3:	je     402729 <_head_lib64_libkernel32_a-0xe8d7>
  4027e9:	mov    r8d,0x4
  4027ef:	mov    rcx,rbx
  4027f2:	lea    rdx,[rip+0x9c8a]        # 40c483 <_head_lib64_libkernel32_a-0x4b7d>
  4027f9:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  4027fe:	test   eax,eax
  402800:	je     402729 <_head_lib64_libkernel32_a-0xe8d7>
  402806:	mov    r8d,0x4
  40280c:	mov    rcx,rbx
  40280f:	lea    rdx,[rip+0x9c72]        # 40c488 <_head_lib64_libkernel32_a-0x4b78>
  402816:	call   408838 <_head_lib64_libkernel32_a-0x87c8>
  40281b:	jmp    402729 <_head_lib64_libkernel32_a-0xe8d7>
  402820:	cmp    ecx,0x16
  402823:	ja     402840 <_head_lib64_libkernel32_a-0xe7c0>
  402825:	lea    rax,[rip+0x9c64]        # 40c490 <_head_lib64_libkernel32_a-0x4b70>
  40282c:	mov    ecx,ecx
  40282e:	movsxd rdx,DWORD PTR [rax+rcx*4]
  402832:	add    rax,rdx
  402835:	mov    edx,0x4
  40283a:	jmp    rax
  40283c:	nop    DWORD PTR [rax+0x0]
  402840:	mov    edx,0x4
  402845:	lea    rcx,[rip+0x9bce]        # 40c41a <_head_lib64_libkernel32_a-0x4be6>
  40284c:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  402851:	lea    rcx,[rip+0x9c12]        # 40c46a <_head_lib64_libkernel32_a-0x4b96>
  402858:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  40285d:	nop    DWORD PTR [rax]
  402860:	lea    rcx,[rip+0x9bd1]        # 40c438 <_head_lib64_libkernel32_a-0x4bc8>
  402867:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  40286c:	nop    DWORD PTR [rax+0x0]
  402870:	lea    rcx,[rip+0x9bbc]        # 40c433 <_head_lib64_libkernel32_a-0x4bcd>
  402877:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  40287c:	nop    DWORD PTR [rax+0x0]
  402880:	lea    rcx,[rip+0x9ba7]        # 40c42e <_head_lib64_libkernel32_a-0x4bd2>
  402887:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  40288c:	nop    DWORD PTR [rax+0x0]
  402890:	lea    rcx,[rip+0x9b92]        # 40c429 <_head_lib64_libkernel32_a-0x4bd7>
  402897:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  40289c:	nop    DWORD PTR [rax+0x0]
  4028a0:	lea    rcx,[rip+0x9b7d]        # 40c424 <_head_lib64_libkernel32_a-0x4bdc>
  4028a7:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  4028ac:	nop    DWORD PTR [rax+0x0]
  4028b0:	lea    rcx,[rip+0x9b68]        # 40c41f <_head_lib64_libkernel32_a-0x4be1>
  4028b7:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  4028bc:	nop    DWORD PTR [rax+0x0]
  4028c0:	lea    rcx,[rip+0x9ba8]        # 40c46f <_head_lib64_libkernel32_a-0x4b91>
  4028c7:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  4028cc:	nop    DWORD PTR [rax+0x0]
  4028d0:	lea    rcx,[rip+0x9b6b]        # 40c442 <_head_lib64_libkernel32_a-0x4bbe>
  4028d7:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  4028dc:	nop    DWORD PTR [rax+0x0]
  4028e0:	lea    rcx,[rip+0x9b79]        # 40c460 <_head_lib64_libkernel32_a-0x4ba0>
  4028e7:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  4028ec:	nop    DWORD PTR [rax+0x0]
  4028f0:	lea    rcx,[rip+0x9b5a]        # 40c451 <_head_lib64_libkernel32_a-0x4baf>
  4028f7:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  4028fc:	nop    DWORD PTR [rax+0x0]
  402900:	lea    rcx,[rip+0x9b40]        # 40c447 <_head_lib64_libkernel32_a-0x4bb9>
  402907:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  40290c:	nop    DWORD PTR [rax+0x0]
  402910:	lea    rcx,[rip+0x9b26]        # 40c43d <_head_lib64_libkernel32_a-0x4bc3>
  402917:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  40291c:	nop    DWORD PTR [rax+0x0]
  402920:	lea    rcx,[rip+0x9b2f]        # 40c456 <_head_lib64_libkernel32_a-0x4baa>
  402927:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  40292c:	nop    DWORD PTR [rax+0x0]
  402930:	lea    rcx,[rip+0x9b15]        # 40c44c <_head_lib64_libkernel32_a-0x4bb4>
  402937:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  40293c:	nop    DWORD PTR [rax+0x0]
  402940:	lea    rcx,[rip+0x9b14]        # 40c45b <_head_lib64_libkernel32_a-0x4ba5>
  402947:	jmp    408778 <_head_lib64_libkernel32_a-0x8888>
  40294c:	nop
  40294d:	nop
  40294e:	nop
  40294f:	nop
  402950:	push   r15
  402952:	push   r14
  402954:	push   r13
  402956:	push   r12
  402958:	push   rbp
  402959:	push   rdi
  40295a:	push   rsi
  40295b:	push   rbx
  40295c:	sub    rsp,0x38
  402960:	cmp    dx,0x1
  402964:	mov    r12,rcx
  402967:	mov    DWORD PTR [rsp+0x2c],edx
  40296b:	mov    edi,r8d
  40296e:	mov    rbx,r9
  402971:	je     402b30 <_head_lib64_libkernel32_a-0xe4d0>
  402977:	movzx  esi,WORD PTR [rsp+0x2c]
  40297c:	imul   esi,DWORD PTR [rcx+0x1c]
  402980:	shr    esi,0x3
  402983:	mov    ecx,DWORD PTR [r12+0x18]
  402988:	test   ecx,ecx
  40298a:	je     402c54 <_head_lib64_libkernel32_a-0xe3ac>
  402990:	mov    r8d,DWORD PTR [r12+0x1c]
  402995:	test   r8d,r8d
  402998:	je     402c54 <_head_lib64_libkernel32_a-0xe3ac>
  40299e:	xor    edx,edx
  4029a0:	mov    eax,0x7fffffff
  4029a5:	div    r8d
  4029a8:	movzx  r8d,WORD PTR [rsp+0x2c]
  4029ae:	shr    r8w,0x3
  4029b3:	cmp    r8w,0x2
  4029b8:	movzx  edx,r8w
  4029bc:	mov    r8d,0x1
  4029c2:	cmovae r8d,edx
  4029c6:	xor    edx,edx
  4029c8:	div    r8d
  4029cb:	cmp    ecx,eax
  4029cd:	ja     402c54 <_head_lib64_libkernel32_a-0xe3ac>
  4029d3:	imul   ecx,esi
  4029d6:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  4029db:	test   di,di
  4029de:	mov    r15,rax
  4029e1:	je     402ad2 <_head_lib64_libkernel32_a-0xe52e>
  4029e7:	cmp    di,0x1
  4029eb:	jne    402af2 <_head_lib64_libkernel32_a-0xe50e>
  4029f1:	mov    eax,DWORD PTR [r12+0x18]
  4029f6:	test   eax,eax
  4029f8:	je     402af2 <_head_lib64_libkernel32_a-0xe50e>
  4029fe:	mov    eax,esi
  402a00:	xor    r14d,r14d
  402a03:	xor    r13d,r13d
  402a06:	mov    QWORD PTR [rsp+0x20],rax
  402a0b:	jmp    402a5b <_head_lib64_libkernel32_a-0xe5a5>
  402a0d:	nop    DWORD PTR [rax]
  402a10:	movzx  r8d,WORD PTR [rbx]
  402a14:	mov    r9d,esi
  402a17:	mov    rdx,rbp
  402a1a:	mov    rcx,rdi
  402a1d:	add    r13d,0x1
  402a21:	add    rbx,0x2
  402a25:	call   402050 <_head_lib64_libkernel32_a-0xefb0>
  402a2a:	mov    rcx,rdi
  402a2d:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  402a32:	mov    r8,QWORD PTR [rsp+0x20]
  402a37:	mov    ecx,r14d
  402a3a:	mov    rdx,rbp
  402a3d:	add    rcx,r15
  402a40:	add    r14d,esi
  402a43:	call   409e30 <_head_lib64_libkernel32_a-0x71d0>
  402a48:	mov    rcx,rbp
  402a4b:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  402a50:	cmp    DWORD PTR [r12+0x18],r13d
  402a55:	jbe    402af2 <_head_lib64_libkernel32_a-0xe50e>
  402a5b:	movzx  ecx,WORD PTR [rbx]
  402a5e:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  402a63:	mov    rcx,QWORD PTR [rsp+0x20]
  402a68:	mov    rdi,rax
  402a6b:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  402a70:	movzx  edx,WORD PTR [rbx]
  402a73:	mov    r8d,0x1
  402a79:	mov    rcx,rdi
  402a7c:	mov    r9,QWORD PTR [rsp+0xa0]
  402a84:	mov    rbp,rax
  402a87:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  402a8c:	test   rax,rax
  402a8f:	jne    402a10 <_head_lib64_libkernel32_a-0xe5f0>
  402a95:	call   QWORD PTR [rip+0xed15]        # 4117b0 <__imp__errno>
  402a9b:	mov    rcx,QWORD PTR [rsp+0xa0]
  402aa3:	mov    ebx,DWORD PTR [rax]
  402aa5:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  402aaa:	mov    r8,QWORD PTR [rsp+0xa8]
  402ab2:	mov    ecx,eax
  402ab4:	mov    edx,ebx
  402ab6:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  402abb:	mov    rcx,rdi
  402abe:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  402ac3:	mov    rcx,rbp
  402ac6:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  402acb:	mov    eax,0xffffffff
  402ad0:	jmp    402b1d <_head_lib64_libkernel32_a-0xe4e3>
  402ad2:	mov    r9,QWORD PTR [rsp+0xa0]
  402ada:	mov    edx,esi
  402adc:	mov    rcx,rax
  402adf:	mov    r8d,DWORD PTR [r12+0x18]
  402ae4:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  402ae9:	test   rax,rax
  402aec:	je     402c8a <_head_lib64_libkernel32_a-0xe376>
  402af2:	mov    eax,DWORD PTR [rsp+0x2c]
  402af6:	cmp    ax,0x8
  402afa:	je     402b83 <_head_lib64_libkernel32_a-0xe47d>
  402b00:	cmp    ax,0x10
  402b04:	je     402b3e <_head_lib64_libkernel32_a-0xe4c2>
  402b06:	cmp    ax,0x1
  402b0a:	je     402bb3 <_head_lib64_libkernel32_a-0xe44d>
  402b10:	mov    rcx,r15
  402b13:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  402b18:	mov    eax,0x1
  402b1d:	add    rsp,0x38
  402b21:	pop    rbx
  402b22:	pop    rsi
  402b23:	pop    rdi
  402b24:	pop    rbp
  402b25:	pop    r12
  402b27:	pop    r13
  402b29:	pop    r14
  402b2b:	pop    r15
  402b2d:	ret    
  402b2e:	xchg   ax,ax
  402b30:	mov    eax,DWORD PTR [rcx+0x1c]
  402b33:	lea    esi,[rax+0x7]
  402b36:	shr    esi,0x3
  402b39:	jmp    402983 <_head_lib64_libkernel32_a-0xe67d>
  402b3e:	mov    ecx,DWORD PTR [r12+0x18]
  402b43:	imul   ecx,DWORD PTR [r12+0x1c]
  402b49:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  402b4e:	mov    r8d,DWORD PTR [r12+0x18]
  402b53:	xor    edx,edx
  402b55:	imul   r8d,DWORD PTR [r12+0x1c]
  402b5b:	mov    QWORD PTR [r12+0x10],rax
  402b60:	and    r8d,0x7fffffff
  402b67:	je     402b10 <_head_lib64_libkernel32_a-0xe4f0>
  402b69:	nop    DWORD PTR [rax+0x0]
  402b70:	movzx  ecx,BYTE PTR [r15+rdx*2]
  402b75:	mov    BYTE PTR [rax+rdx*1],cl
  402b78:	add    rdx,0x1
  402b7c:	cmp    r8d,edx
  402b7f:	ja     402b70 <_head_lib64_libkernel32_a-0xe490>
  402b81:	jmp    402b10 <_head_lib64_libkernel32_a-0xe4f0>
  402b83:	mov    ecx,DWORD PTR [r12+0x18]
  402b88:	imul   ecx,DWORD PTR [r12+0x1c]
  402b8e:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  402b93:	mov    r8d,DWORD PTR [r12+0x18]
  402b98:	mov    rdx,r15
  402b9b:	imul   r8d,DWORD PTR [r12+0x1c]
  402ba1:	mov    QWORD PTR [r12+0x10],rax
  402ba6:	mov    rcx,rax
  402ba9:	call   409e30 <_head_lib64_libkernel32_a-0x71d0>
  402bae:	jmp    402b10 <_head_lib64_libkernel32_a-0xe4f0>
  402bb3:	mov    ecx,DWORD PTR [r12+0x18]
  402bb8:	imul   ecx,DWORD PTR [r12+0x1c]
  402bbe:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  402bc3:	mov    r10d,DWORD PTR [r12+0x1c]
  402bc8:	mov    QWORD PTR [r12+0x10],rax
  402bcd:	lea    edx,[r10+0x7]
  402bd1:	shr    edx,0x3
  402bd4:	imul   edx,DWORD PTR [r12+0x18]
  402bda:	test   edx,edx
  402bdc:	je     402b10 <_head_lib64_libkernel32_a-0xe4f0>
  402be2:	xor    r9d,r9d
  402be5:	sub    edx,0x1
  402be8:	xor    edi,edi
  402bea:	lea    rsi,[r15+rdx*1+0x1]
  402bef:	cmp    r10d,r9d
  402bf2:	mov    rbx,r15
  402bf5:	jbe    402c4f <_head_lib64_libkernel32_a-0xe3b1>
  402bf7:	nop    WORD PTR [rax+rax*1+0x0]
  402c00:	movsx  r11d,BYTE PTR [rbx]
  402c04:	mov    edx,r9d
  402c07:	mov    ecx,0xffffff80
  402c0c:	jmp    402c15 <_head_lib64_libkernel32_a-0xe3eb>
  402c0e:	xchg   ax,ax
  402c10:	cmp    r10d,edx
  402c13:	jbe    402c34 <_head_lib64_libkernel32_a-0xe3cc>
  402c15:	movzx  r8d,cl
  402c19:	test   r8d,r11d
  402c1c:	sete   BYTE PTR [rax]
  402c1f:	add    edx,0x1
  402c22:	add    rax,0x1
  402c26:	mov    r8d,edx
  402c29:	shr    cl,1
  402c2b:	sub    r8d,r9d
  402c2e:	cmp    r8d,0x7
  402c32:	jle    402c10 <_head_lib64_libkernel32_a-0xe3f0>
  402c34:	cmp    r10d,edx
  402c37:	cmovbe edx,edi
  402c3a:	mov    r9d,edx
  402c3d:	add    rbx,0x1
  402c41:	cmp    rbx,rsi
  402c44:	je     402b10 <_head_lib64_libkernel32_a-0xe4f0>
  402c4a:	cmp    r10d,r9d
  402c4d:	ja     402c00 <_head_lib64_libkernel32_a-0xe400>
  402c4f:	xor    r9d,r9d
  402c52:	jmp    402c3d <_head_lib64_libkernel32_a-0xe3c3>
  402c54:	lea    rcx,[rip+0x98a5]        # 40c500 <_head_lib64_libkernel32_a-0x4b00>
  402c5b:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  402c60:	mov    rbx,rax
  402c63:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  402c68:	mov    rcx,QWORD PTR [rsp+0xa8]
  402c70:	mov    r9,rbx
  402c73:	mov    r8d,0x18
  402c79:	mov    edx,eax
  402c7b:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  402c80:	mov    eax,0xffffffff
  402c85:	jmp    402b1d <_head_lib64_libkernel32_a-0xe4e3>
  402c8a:	call   QWORD PTR [rip+0xeb20]        # 4117b0 <__imp__errno>
  402c90:	mov    rcx,QWORD PTR [rsp+0xa0]
  402c98:	mov    ebx,DWORD PTR [rax]
  402c9a:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  402c9f:	mov    r8,QWORD PTR [rsp+0xa8]
  402ca7:	mov    ecx,eax
  402ca9:	mov    edx,ebx
  402cab:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  402cb0:	mov    eax,0xffffffff
  402cb5:	jmp    402b1d <_head_lib64_libkernel32_a-0xe4e3>
  402cba:	nop    WORD PTR [rax+rax*1+0x0]
  402cc0:	push   r15
  402cc2:	push   r14
  402cc4:	push   r13
  402cc6:	push   r12
  402cc8:	push   rbp
  402cc9:	push   rdi
  402cca:	push   rsi
  402ccb:	push   rbx
  402ccc:	sub    rsp,0x9d8
  402cd3:	movaps XMMWORD PTR [rsp+0x9a0],xmm6
  402cdb:	movaps XMMWORD PTR [rsp+0x9b0],xmm7
  402ce3:	movaps XMMWORD PTR [rsp+0x9c0],xmm8
  402cec:	movzx  eax,WORD PTR [rdx+0x12]
  402cf0:	movzx  r14d,WORD PTR [rdx]
  402cf4:	mov    DWORD PTR [rsp+0xa20],ecx
  402cfb:	mov    rsi,rdx
  402cfe:	mov    rdi,r8
  402d01:	mov    r12,r9
  402d04:	cmp    ax,0x2
  402d08:	jbe    402da9 <_head_lib64_libkernel32_a-0xe257>
  402d0e:	cmp    ax,0x8
  402d12:	je     402da9 <_head_lib64_libkernel32_a-0xe257>
  402d18:	cmp    ax,0x3
  402d1c:	sete   cl
  402d1f:	cmp    ax,0x9
  402d23:	sete   dl
  402d26:	or     cl,dl
  402d28:	je     40323c <_head_lib64_libkernel32_a-0xddc4>
  402d2e:	cmp    r14w,0x3
  402d33:	jbe    40323c <_head_lib64_libkernel32_a-0xddc4>
  402d39:	mov    ecx,DWORD PTR [rsi+0x4]
  402d3c:	lea    ebp,[r14-0x3]
  402d40:	test   ecx,ecx
  402d42:	je     402dbf <_head_lib64_libkernel32_a-0xe241>
  402d44:	sub    bp,0x1
  402d48:	setne  al
  402d4b:	mov    ebx,r14d
  402d4e:	sub    ebx,ebp
  402d50:	cmp    WORD PTR [rsi+0x40],0x0
  402d55:	je     402dc4 <_head_lib64_libkernel32_a-0xe23c>
  402d57:	test   al,al
  402d59:	jne    402dc4 <_head_lib64_libkernel32_a-0xe23c>
  402d5b:	test   bp,bp
  402d5e:	je     40313d <_head_lib64_libkernel32_a-0xdec3>
  402d64:	test   bx,bx
  402d67:	je     4036a4 <_head_lib64_libkernel32_a-0xd95c>
  402d6d:	lea    rdx,[rsp+0x2a0]
  402d75:	movzx  eax,bx
  402d78:	lea    rdi,[rsp+0x2b0]
  402d80:	sub    eax,0x1
  402d83:	shl    rax,0x5
  402d87:	lea    r12,[rdx+rax*1+0x30]
  402d8c:	nop    DWORD PTR [rax+0x0]
  402d90:	mov    rcx,QWORD PTR [rdi]
  402d93:	add    rdi,0x20
  402d97:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  402d9c:	cmp    r12,rdi
  402d9f:	jne    402d90 <_head_lib64_libkernel32_a-0xe270>
  402da1:	mov    r14d,ebx
  402da4:	jmp    40326f <_head_lib64_libkernel32_a-0xdd91>
  402da9:	cmp    r14w,0x1
  402dae:	jbe    402d18 <_head_lib64_libkernel32_a-0xe2e8>
  402db4:	lea    ebp,[r14-0x1]
  402db8:	mov    ecx,DWORD PTR [rsi+0x4]
  402dbb:	test   ecx,ecx
  402dbd:	jne    402d44 <_head_lib64_libkernel32_a-0xe2bc>
  402dbf:	mov    ebx,r14d
  402dc2:	sub    ebx,ebp
  402dc4:	mov    edx,DWORD PTR [rsi+0x4c]
  402dc7:	xor    r8d,r8d
  402dca:	mov    rcx,rdi
  402dcd:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  402dd2:	lea    rcx,[rsp+0x8a]
  402dda:	mov    r9,rdi
  402ddd:	mov    r8d,0x1
  402de3:	mov    edx,0x2
  402de8:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  402ded:	test   rax,rax
  402df0:	je     402ecd <_head_lib64_libkernel32_a-0xe133>
  402df6:	movzx  r13d,WORD PTR [rsp+0x8a]
  402dff:	rol    r13w,0x8
  402e04:	mov    WORD PTR [rsp+0x8a],r13w
  402e0d:	test   r13w,r13w
  402e11:	je     4031d5 <_head_lib64_libkernel32_a-0xde2b>
  402e17:	cmp    r13w,0x1
  402e1c:	jne    40319b <_head_lib64_libkernel32_a-0xde65>
  402e22:	test   r14w,r14w
  402e26:	je     402f8d <_head_lib64_libkernel32_a-0xe073>
  402e2c:	lea    eax,[r14-0x1]
  402e30:	mov    WORD PTR [rsp+0x68],bx
  402e35:	xor    r14d,r14d
  402e38:	lea    rcx,[rsp+0xe0]
  402e40:	add    rax,0x1
  402e44:	mov    QWORD PTR [rsp+0x50],rax
  402e49:	shl    rax,0x3
  402e4d:	mov    QWORD PTR [rsp+0x58],rax
  402e52:	lea    rax,[rsp+0x2a0]
  402e5a:	mov    QWORD PTR [rsp+0x60],rax
  402e5f:	mov    r13,rax
  402e62:	mov    QWORD PTR [rsp+0x48],rcx
  402e67:	mov    eax,DWORD PTR [rsi+0xc]
  402e6a:	xor    r15d,r15d
  402e6d:	mov    DWORD PTR [r13+r14*4+0x1c],eax
  402e72:	mov    eax,DWORD PTR [rsi+0x8]
  402e75:	mov    DWORD PTR [r13+r14*4+0x18],eax
  402e7a:	lea    ecx,[rax+rax*1]
  402e7d:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  402e82:	mov    r11d,DWORD PTR [rsi+0x8]
  402e86:	mov    rbx,QWORD PTR [rsp+0x48]
  402e8b:	test   r11d,r11d
  402e8e:	mov    QWORD PTR [r14+rbx*1],rax
  402e92:	mov    rbx,rax
  402e95:	jne    402eb2 <_head_lib64_libkernel32_a-0xe14e>
  402e97:	jmp    402f1b <_head_lib64_libkernel32_a-0xe0e5>
  402e9c:	nop    DWORD PTR [rax+0x0]
  402ea0:	rol    WORD PTR [rbx],0x8
  402ea4:	add    r15d,0x1
  402ea8:	add    rbx,0x2
  402eac:	cmp    DWORD PTR [rsi+0x8],r15d
  402eb0:	jbe    402f1b <_head_lib64_libkernel32_a-0xe0e5>
  402eb2:	mov    r9,rdi
  402eb5:	mov    r8d,0x1
  402ebb:	mov    edx,0x2
  402ec0:	mov    rcx,rbx
  402ec3:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  402ec8:	test   rax,rax
  402ecb:	jne    402ea0 <_head_lib64_libkernel32_a-0xe160>
  402ecd:	call   QWORD PTR [rip+0xe8dd]        # 4117b0 <__imp__errno>
  402ed3:	mov    rcx,rdi
  402ed6:	mov    ebx,DWORD PTR [rax]
  402ed8:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  402edd:	mov    r8,r12
  402ee0:	mov    ecx,eax
  402ee2:	mov    edx,ebx
  402ee4:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  402ee9:	mov    eax,0xffffffff
  402eee:	movaps xmm6,XMMWORD PTR [rsp+0x9a0]
  402ef6:	movaps xmm7,XMMWORD PTR [rsp+0x9b0]
  402efe:	movaps xmm8,XMMWORD PTR [rsp+0x9c0]
  402f07:	add    rsp,0x9d8
  402f0e:	pop    rbx
  402f0f:	pop    rsi
  402f10:	pop    rdi
  402f11:	pop    rbp
  402f12:	pop    r12
  402f14:	pop    r13
  402f16:	pop    r14
  402f18:	pop    r15
  402f1a:	ret    
  402f1b:	add    r14,0x8
  402f1f:	cmp    r14,QWORD PTR [rsp+0x58]
  402f24:	jne    402e67 <_head_lib64_libkernel32_a-0xe199>
  402f2a:	mov    r14,QWORD PTR [rsp+0x50]
  402f2f:	mov    r13,QWORD PTR [rsp+0x60]
  402f34:	movzx  ebx,WORD PTR [rsp+0x68]
  402f39:	mov    r15,QWORD PTR [rsp+0x48]
  402f3e:	shl    r14,0x5
  402f42:	lea    rax,[r13+r14*1+0x0]
  402f47:	mov    QWORD PTR [rsp+0x48],rax
  402f4c:	mov    r14,QWORD PTR [r15]
  402f4f:	mov    r8d,0x1
  402f55:	mov    QWORD PTR [rsp+0x28],r12
  402f5a:	mov    rcx,r13
  402f5d:	movzx  edx,WORD PTR [rsi+0x10]
  402f61:	mov    QWORD PTR [rsp+0x20],rdi
  402f66:	mov    r9,r14
  402f69:	call   402950 <_head_lib64_libkernel32_a-0xe6b0>
  402f6e:	test   eax,eax
  402f70:	jle    4031cb <_head_lib64_libkernel32_a-0xde35>
  402f76:	mov    rcx,r14
  402f79:	add    r15,0x8
  402f7d:	add    r13,0x20
  402f81:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  402f86:	cmp    QWORD PTR [rsp+0x48],r13
  402f8b:	jne    402f4c <_head_lib64_libkernel32_a-0xe0b4>
  402f8d:	movzx  eax,WORD PTR [rsi+0x40]
  402f91:	test   ax,ax
  402f94:	jne    402d5b <_head_lib64_libkernel32_a-0xe2a5>
  402f9a:	mov    edx,DWORD PTR [rsi+0x14]
  402f9d:	mov    eax,DWORD PTR [rsi+0x4]
  402fa0:	cmp    edx,0x1
  402fa3:	je     403668 <_head_lib64_libkernel32_a-0xd998>
  402fa9:	jb     403686 <_head_lib64_libkernel32_a-0xd97a>
  402faf:	cmp    edx,0x2
  402fb2:	jne    403679 <_head_lib64_libkernel32_a-0xd987>
  402fb8:	cmp    eax,0x1
  402fbb:	sbb    eax,eax
  402fbd:	add    eax,0x5
  402fc0:	mov    DWORD PTR [rsp+0x48],eax
  402fc4:	mov    edi,DWORD PTR [rsi+0xc]
  402fc7:	movzx  r12d,bx
  402fcb:	imul   edi,DWORD PTR [rsi+0x8]
  402fcf:	mov    ecx,edi
  402fd1:	imul   ecx,r12d
  402fd5:	movsxd rcx,ecx
  402fd8:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  402fdd:	test   r12d,r12d
  402fe0:	mov    QWORD PTR [rsp+0x50],rax
  402fe5:	je     403055 <_head_lib64_libkernel32_a-0xdfab>
  402fe7:	mov    r15,QWORD PTR [rsp+0x50]
  402fec:	lea    eax,[r12-0x1]
  402ff1:	lea    rdx,[rsp+0x2a0]
  402ff9:	shl    rax,0x5
  402ffd:	lea    r13d,[rdi-0x1]
  403001:	lea    r14,[rsp+0x2b0]
  403009:	add    r13,0x1
  40300d:	lea    r12,[rdx+rax*1+0x30]
  403012:	test   edi,edi
  403014:	mov    rcx,QWORD PTR [r14]
  403017:	jle    403043 <_head_lib64_libkernel32_a-0xdfbd>
  403019:	mov    rax,rcx
  40301c:	movzx  r10d,bx
  403020:	mov    rdx,r15
  403023:	lea    r9,[rcx+r13*1]
  403027:	nop    WORD PTR [rax+rax*1+0x0]
  403030:	movzx  r8d,BYTE PTR [rax]
  403034:	add    rax,0x1
  403038:	mov    BYTE PTR [rdx],r8b
  40303b:	add    rdx,r10
  40303e:	cmp    r9,rax
  403041:	jne    403030 <_head_lib64_libkernel32_a-0xdfd0>
  403043:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  403048:	add    r14,0x20
  40304c:	add    r15,0x1
  403050:	cmp    r12,r14
  403053:	jne    403012 <_head_lib64_libkernel32_a-0xdfee>
  403055:	lea    rcx,[rip+0x94ed]        # 40c549 <_head_lib64_libkernel32_a-0x4ab7>
  40305c:	mov    edi,DWORD PTR [rsi+0xc]
  40305f:	mov    r12d,DWORD PTR [rsi+0x8]
  403063:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  403068:	mov    ecx,DWORD PTR [rsp+0x48]
  40306c:	mov    DWORD PTR [rsp+0x30],0x0
  403074:	movsd  xmm4,QWORD PTR [rip+0x9934]        # 40c9b0 <_head_lib64_libkernel32_a-0x4650>
  40307c:	mov    rdx,rax
  40307f:	mov    r8d,edi
  403082:	movsd  QWORD PTR [rsp+0x28],xmm4
  403088:	mov    r9d,r12d
  40308b:	mov    DWORD PTR [rsp+0x20],ecx
  40308f:	mov    ecx,DWORD PTR [rsp+0xa20]
  403096:	call   4085b0 <_head_lib64_libkernel32_a-0x8a50>
  40309b:	mov    ecx,DWORD PTR [rsp+0xa20]
  4030a2:	xor    r9d,r9d
  4030a5:	mov    r8d,0xffffffff
  4030ab:	mov    edi,eax
  4030ad:	mov    edx,eax
  4030af:	call   408648 <_head_lib64_libkernel32_a-0x89b8>
  4030b4:	mov    ecx,edi
  4030b6:	call   408698 <_head_lib64_libkernel32_a-0x8968>
  4030bb:	mov    DWORD PTR [rsp+0x38],0x0
  4030c3:	xor    r9d,r9d
  4030c6:	xor    r8d,r8d
  4030c9:	mov    rdi,rax
  4030cc:	mov    DWORD PTR [rsp+0x30],0x1
  4030d4:	lea    rax,[rsp+0xb0]
  4030dc:	mov    rdx,rdi
  4030df:	mov    r14,rax
  4030e2:	mov    eax,DWORD PTR [rdi+0x8]
  4030e5:	mov    rcx,r14
  4030e8:	mov    DWORD PTR [rsp+0x28],eax
  4030ec:	mov    eax,DWORD PTR [rdi+0x4]
  4030ef:	mov    DWORD PTR [rsp+0x20],eax
  4030f3:	call   408578 <_head_lib64_libkernel32_a-0x8a88>
  4030f8:	mov    eax,DWORD PTR [rdi+0x8]
  4030fb:	xor    r9d,r9d
  4030fe:	xor    r8d,r8d
  403101:	mov    r15,QWORD PTR [rsp+0x50]
  403106:	mov    rcx,r14
  403109:	mov    DWORD PTR [rsp+0x28],eax
  40310d:	mov    eax,DWORD PTR [rdi+0x4]
  403110:	mov    rdx,r15
  403113:	mov    DWORD PTR [rsp+0x20],eax
  403117:	call   408570 <_head_lib64_libkernel32_a-0x8a90>
  40311c:	mov    rcx,rdi
  40311f:	call   4086a0 <_head_lib64_libkernel32_a-0x8960>
  403124:	mov    rcx,rdi
  403127:	call   4086b0 <_head_lib64_libkernel32_a-0x8950>
  40312c:	mov    rcx,r15
  40312f:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  403134:	test   bp,bp
  403137:	jne    402da1 <_head_lib64_libkernel32_a-0xe25f>
  40313d:	mov    eax,DWORD PTR [rsi+0x4]
  403140:	test   eax,eax
  403142:	jne    4036ac <_head_lib64_libkernel32_a-0xd954>
  403148:	mov    ecx,DWORD PTR [rsp+0xa20]
  40314f:	lea    rdx,[rsp+0x8c]
  403157:	call   408660 <_head_lib64_libkernel32_a-0x89a0>
  40315c:	movzx  edx,WORD PTR [rsi+0x58]
  403160:	mov    rbx,rax
  403163:	mov    eax,DWORD PTR [rsp+0x8c]
  40316a:	cmp    eax,edx
  40316c:	jg     403178 <_head_lib64_libkernel32_a-0xde88>
  40316e:	xor    r8d,r8d
  403171:	xor    edx,edx
  403173:	mov    WORD PTR [rsi+0x58],r8w
  403178:	sub    eax,edx
  40317a:	mov    ecx,DWORD PTR [rsp+0xa20]
  403181:	cdqe   
  403183:	mov    edx,DWORD PTR [rbx+rax*4-0x4]
  403187:	call   408628 <_head_lib64_libkernel32_a-0x89d8>
  40318c:	mov    rcx,rbx
  40318f:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  403194:	xor    eax,eax
  403196:	jmp    402eee <_head_lib64_libkernel32_a-0xe112>
  40319b:	lea    rcx,[rip+0x9386]        # 40c528 <_head_lib64_libkernel32_a-0x4ad8>
  4031a2:	movzx  r13d,r13w
  4031a6:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  4031ab:	mov    rbx,rax
  4031ae:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4031b3:	mov    DWORD PTR [rsp+0x20],r13d
  4031b8:	mov    r9,rbx
  4031bb:	mov    rcx,r12
  4031be:	mov    r8d,0x18
  4031c4:	mov    edx,eax
  4031c6:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  4031cb:	mov    eax,0xffffffff
  4031d0:	jmp    402eee <_head_lib64_libkernel32_a-0xe112>
  4031d5:	test   r14w,r14w
  4031d9:	je     402f8d <_head_lib64_libkernel32_a-0xe073>
  4031df:	lea    r13,[rsp+0x2a0]
  4031e7:	sub    r14d,0x1
  4031eb:	add    r14,0x1
  4031ef:	shl    r14,0x5
  4031f3:	add    r14,r13
  4031f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403200:	mov    eax,DWORD PTR [rsi+0xc]
  403203:	xor    r9d,r9d
  403206:	xor    r8d,r8d
  403209:	mov    rcx,r13
  40320c:	movzx  edx,WORD PTR [rsi+0x10]
  403210:	mov    DWORD PTR [r13+0x1c],eax
  403214:	mov    eax,DWORD PTR [rsi+0x8]
  403217:	mov    DWORD PTR [r13+0x18],eax
  40321b:	mov    QWORD PTR [rsp+0x28],r12
  403220:	mov    QWORD PTR [rsp+0x20],rdi
  403225:	call   402950 <_head_lib64_libkernel32_a-0xe6b0>
  40322a:	test   eax,eax
  40322c:	jle    4031cb <_head_lib64_libkernel32_a-0xde35>
  40322e:	add    r13,0x20
  403232:	cmp    r13,r14
  403235:	jne    403200 <_head_lib64_libkernel32_a-0xde00>
  403237:	jmp    402f8d <_head_lib64_libkernel32_a-0xe073>
  40323c:	lea    ebp,[r14-0x4]
  403240:	cmp    r14w,0x4
  403245:	seta   dl
  403248:	cmp    ax,0x4
  40324c:	sete   al
  40324f:	and    al,dl
  403251:	jne    402db8 <_head_lib64_libkernel32_a-0xe248>
  403257:	mov    edx,DWORD PTR [rsi+0x4]
  40325a:	test   edx,edx
  40325c:	je     403657 <_head_lib64_libkernel32_a-0xd9a9>
  403262:	xor    ebp,ebp
  403264:	cmp    WORD PTR [rsi+0x40],0x0
  403269:	je     40365e <_head_lib64_libkernel32_a-0xd9a2>
  40326f:	mov    r10d,DWORD PTR [rsp+0xa20]
  403277:	test   r10d,r10d
  40327a:	js     403148 <_head_lib64_libkernel32_a-0xdeb8>
  403280:	xor    ecx,ecx
  403282:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  403287:	mov    r9d,DWORD PTR [rsi+0x4]
  40328b:	mov    DWORD PTR [rsp+0x48],0x0
  403293:	mov    r12,rax
  403296:	test   r9d,r9d
  403299:	je     4032c0 <_head_lib64_libkernel32_a-0xdd40>
  40329b:	mov    rax,QWORD PTR [rsi+0x60]
  40329f:	test   rax,rax
  4032a2:	je     403697 <_head_lib64_libkernel32_a-0xd969>
  4032a8:	mov    rax,QWORD PTR [rax]
  4032ab:	mov    DWORD PTR [rsp+0x48],0x1
  4032b3:	mov    rcx,QWORD PTR [rax]
  4032b6:	test   rcx,rcx
  4032b9:	je     4032c0 <_head_lib64_libkernel32_a-0xdd40>
  4032bb:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4032c0:	movzx  eax,bp
  4032c3:	test   eax,eax
  4032c5:	mov    DWORD PTR [rsp+0x74],eax
  4032c9:	je     4035f0 <_head_lib64_libkernel32_a-0xda10>
  4032cf:	movzx  eax,r14w
  4032d3:	pxor   xmm7,xmm7
  4032d7:	xor    ebp,ebp
  4032d9:	mov    r14d,DWORD PTR [rsp+0x48]
  4032de:	mov    DWORD PTR [rsp+0x60],eax
  4032e2:	lea    rax,[rsp+0xb0]
  4032ea:	movapd xmm8,xmm7
  4032ef:	movsd  xmm6,QWORD PTR [rip+0x96c1]        # 40c9b8 <_head_lib64_libkernel32_a-0x4648>
  4032f7:	mov    QWORD PTR [rsp+0x78],rax
  4032fc:	lea    rax,[rsp+0x90]
  403304:	mov    QWORD PTR [rsp+0x58],rax
  403309:	jmp    403527 <_head_lib64_libkernel32_a-0xdad9>
  40330e:	xchg   ax,ax
  403310:	sub    eax,DWORD PTR [rsp+0x60]
  403314:	mov    DWORD PTR [rsp+0x50],0x0
  40331c:	add    eax,DWORD PTR [rsp+0x48]
  403320:	cmp    eax,ebp
  403322:	je     4035b0 <_head_lib64_libkernel32_a-0xda50>
  403328:	mov    rax,QWORD PTR [rsi+0x60]
  40332c:	test   rax,rax
  40332f:	je     40354c <_head_lib64_libkernel32_a-0xdab4>
  403335:	mov    edx,DWORD PTR [rax+0x8]
  403338:	cmp    edx,DWORD PTR [rsp+0x48]
  40333c:	jbe    40354c <_head_lib64_libkernel32_a-0xdab4>
  403342:	cmp    edx,r14d
  403345:	jb     40354c <_head_lib64_libkernel32_a-0xdab4>
  40334b:	mov    rcx,QWORD PTR [rax]
  40334e:	movsxd rdx,r14d
  403351:	mov    rax,QWORD PTR [rcx+rdx*8]
  403355:	test   rax,rax
  403358:	mov    QWORD PTR [rsp+0x68],rax
  40335d:	je     40354c <_head_lib64_libkernel32_a-0xdab4>
  403363:	movzx  eax,WORD PTR [rsi+0x80]
  40336a:	xor    r13d,r13d
  40336d:	cmp    DWORD PTR [rsp+0x48],eax
  403371:	jge    403383 <_head_lib64_libkernel32_a-0xdc7d>
  403373:	cmp    eax,r14d
  403376:	jl     403383 <_head_lib64_libkernel32_a-0xdc7d>
  403378:	mov    rdx,QWORD PTR [rsi+0x78]
  40337c:	movsxd rax,r14d
  40337f:	mov    r13d,DWORD PTR [rdx+rax*4]
  403383:	movzx  eax,WORD PTR [rsi+0x70]
  403387:	cmp    DWORD PTR [rsp+0x48],eax
  40338b:	jge    403570 <_head_lib64_libkernel32_a-0xda90>
  403391:	cmp    eax,r14d
  403394:	jl     403570 <_head_lib64_libkernel32_a-0xda90>
  40339a:	mov    rdx,QWORD PTR [rsi+0x68]
  40339e:	movsxd rax,r14d
  4033a1:	mov    rax,QWORD PTR [rdx+rax*8]
  4033a5:	mov    rdx,QWORD PTR [rax]
  4033a8:	movsx  edi,WORD PTR [rax+0x20]
  4033ac:	mov    QWORD PTR [rsp+0x90],rdx
  4033b4:	mov    rdx,QWORD PTR [rax+0x8]
  4033b8:	mov    QWORD PTR [rsp+0x98],rdx
  4033c0:	mov    rdx,QWORD PTR [rax+0x10]
  4033c4:	mov    QWORD PTR [rsp+0xa0],rdx
  4033cc:	mov    rdx,QWORD PTR [rax+0x18]
  4033d0:	mov    QWORD PTR [rsp+0xa8],rdx
  4033d8:	mov    eax,DWORD PTR [rsp+0x60]
  4033dc:	mov    rcx,r12
  4033df:	lea    ebx,[rbp+rax*1+0x0]
  4033e3:	movsxd rbx,ebx
  4033e6:	mov    r15,rbx
  4033e9:	shl    r15,0x5
  4033ed:	mov    edx,DWORD PTR [rsp+r15*1+0x2bc]
  4033f5:	imul   edx,DWORD PTR [rsp+r15*1+0x2b8]
  4033fe:	call   4087d0 <_head_lib64_libkernel32_a-0x8830>
  403403:	mov    rdx,QWORD PTR [rsp+r15*1+0x2b0]
  40340b:	mov    r8d,DWORD PTR [rsp+r15*1+0x2bc]
  403413:	mov    rcx,rax
  403416:	mov    r12,rax
  403419:	imul   r8d,DWORD PTR [rsp+r15*1+0x2b8]
  403422:	call   409e30 <_head_lib64_libkernel32_a-0x71d0>
  403427:	mov    rax,QWORD PTR [rsp+0x58]
  40342c:	pxor   xmm0,xmm0
  403430:	cvtsi2sd xmm0,edi
  403434:	mov    ecx,DWORD PTR [rsp+0xa20]
  40343b:	mov    QWORD PTR [rsp+0x28],rax
  403440:	movsd  QWORD PTR [rsp+0x20],xmm0
  403446:	mov    r9d,DWORD PTR [rsp+r15*1+0x2b8]
  40344e:	mov    r8d,DWORD PTR [rsp+r15*1+0x2bc]
  403456:	mov    r15,QWORD PTR [rsp+0x68]
  40345b:	mov    rdx,r15
  40345e:	call   4086c0 <_head_lib64_libkernel32_a-0x8940>
  403463:	mov    ecx,DWORD PTR [rsp+0xa20]
  40346a:	xor    r9d,r9d
  40346d:	mov    r8d,0xffffffff
  403473:	mov    edx,eax
  403475:	mov    edi,eax
  403477:	call   408650 <_head_lib64_libkernel32_a-0x89b0>
  40347c:	mov    rcx,r15
  40347f:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  403484:	mov    ecx,edi
  403486:	call   408698 <_head_lib64_libkernel32_a-0x8968>
  40348b:	test   r13d,r13d
  40348e:	mov    rdi,rax
  403491:	jne    4035a0 <_head_lib64_libkernel32_a-0xda60>
  403497:	mov    edx,DWORD PTR [rsp+0x50]
  40349b:	shl    rbx,0x5
  40349f:	add    ebp,0x1
  4034a2:	add    r14d,0x1
  4034a6:	mov    ecx,DWORD PTR [rdi]
  4034a8:	call   4085d0 <_head_lib64_libkernel32_a-0x8a30>
  4034ad:	mov    r15,QWORD PTR [rsp+0x78]
  4034b2:	xor    r9d,r9d
  4034b5:	xor    r8d,r8d
  4034b8:	mov    DWORD PTR [rsp+0x38],0x0
  4034c0:	mov    rdx,rdi
  4034c3:	mov    DWORD PTR [rsp+0x30],0x1
  4034cb:	mov    eax,DWORD PTR [rdi+0x8]
  4034ce:	mov    rcx,r15
  4034d1:	mov    DWORD PTR [rsp+0x28],eax
  4034d5:	mov    eax,DWORD PTR [rdi+0x4]
  4034d8:	mov    DWORD PTR [rsp+0x20],eax
  4034dc:	call   408578 <_head_lib64_libkernel32_a-0x8a88>
  4034e1:	mov    eax,DWORD PTR [rdi+0x8]
  4034e4:	xor    r9d,r9d
  4034e7:	xor    r8d,r8d
  4034ea:	mov    rdx,r12
  4034ed:	mov    rcx,r15
  4034f0:	mov    DWORD PTR [rsp+0x28],eax
  4034f4:	mov    eax,DWORD PTR [rdi+0x4]
  4034f7:	mov    DWORD PTR [rsp+0x20],eax
  4034fb:	call   408570 <_head_lib64_libkernel32_a-0x8a90>
  403500:	mov    rcx,rdi
  403503:	call   4086a0 <_head_lib64_libkernel32_a-0x8960>
  403508:	mov    rcx,rdi
  40350b:	call   4086b0 <_head_lib64_libkernel32_a-0x8950>
  403510:	mov    rcx,QWORD PTR [rsp+rbx*1+0x2b0]
  403518:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  40351d:	cmp    ebp,DWORD PTR [rsp+0x74]
  403521:	je     4035f0 <_head_lib64_libkernel32_a-0xda10>
  403527:	movzx  eax,WORD PTR [rsi+0x82]
  40352e:	test   ax,ax
  403531:	jne    403310 <_head_lib64_libkernel32_a-0xdcf0>
  403537:	mov    rax,QWORD PTR [rsi+0x60]
  40353b:	mov    DWORD PTR [rsp+0x50],0x0
  403543:	test   rax,rax
  403546:	jne    403335 <_head_lib64_libkernel32_a-0xdccb>
  40354c:	lea    rcx,[rip+0x9007]        # 40c55a <_head_lib64_libkernel32_a-0x4aa6>
  403553:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  403558:	mov    rcx,rax
  40355b:	call   4087b8 <_head_lib64_libkernel32_a-0x8848>
  403560:	mov    QWORD PTR [rsp+0x68],rax
  403565:	jmp    403363 <_head_lib64_libkernel32_a-0xdc9d>
  40356a:	nop    WORD PTR [rax+rax*1+0x0]
  403570:	mov    rcx,QWORD PTR [rsp+0x58]
  403575:	movsd  QWORD PTR [rsp+0x20],xmm6
  40357b:	movapd xmm3,xmm7
  40357f:	movapd xmm2,xmm8
  403584:	movapd xmm1,xmm6
  403588:	mov    edi,0x32
  40358d:	call   4086c8 <_head_lib64_libkernel32_a-0x8938>
  403592:	jmp    4033d8 <_head_lib64_libkernel32_a-0xdc28>
  403597:	nop    WORD PTR [rax+rax*1+0x0]
  4035a0:	mov    ecx,DWORD PTR [rax]
  4035a2:	mov    edx,r13d
  4035a5:	call   4085d8 <_head_lib64_libkernel32_a-0x8a28>
  4035aa:	jmp    403497 <_head_lib64_libkernel32_a-0xdb69>
  4035af:	nop
  4035b0:	mov    rdx,QWORD PTR [rsi+0x60]
  4035b4:	movsxd rax,r14d
  4035b7:	mov    rdx,QWORD PTR [rdx]
  4035ba:	mov    rcx,QWORD PTR [rdx+rax*8]
  4035be:	test   rcx,rcx
  4035c1:	je     4035c8 <_head_lib64_libkernel32_a-0xda38>
  4035c3:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4035c8:	lea    rcx,[rip+0x8f85]        # 40c554 <_head_lib64_libkernel32_a-0x4aac>
  4035cf:	call   4087b8 <_head_lib64_libkernel32_a-0x8848>
  4035d4:	mov    DWORD PTR [rsp+0x50],0x1
  4035dc:	test   rax,rax
  4035df:	mov    QWORD PTR [rsp+0x68],rax
  4035e4:	jne    403363 <_head_lib64_libkernel32_a-0xdc9d>
  4035ea:	jmp    403328 <_head_lib64_libkernel32_a-0xdcd8>
  4035ef:	nop
  4035f0:	mov    rcx,r12
  4035f3:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4035f8:	mov    rcx,QWORD PTR [rsi+0x60]
  4035fc:	test   rcx,rcx
  4035ff:	je     40360b <_head_lib64_libkernel32_a-0xd9f5>
  403601:	mov    edx,0x1
  403606:	call   4087e0 <_head_lib64_libkernel32_a-0x8820>
  40360b:	mov    rcx,QWORD PTR [rsi+0x78]
  40360f:	test   rcx,rcx
  403612:	je     403619 <_head_lib64_libkernel32_a-0xd9e7>
  403614:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  403619:	mov    rcx,QWORD PTR [rsi+0x68]
  40361d:	test   rcx,rcx
  403620:	je     403148 <_head_lib64_libkernel32_a-0xdeb8>
  403626:	cmp    WORD PTR [rsi+0x70],0x0
  40362b:	je     40364d <_head_lib64_libkernel32_a-0xd9b3>
  40362d:	xor    edi,edi
  40362f:	xor    ebx,ebx
  403631:	mov    rcx,QWORD PTR [rcx+rdi*1]
  403635:	add    ebx,0x1
  403638:	add    rdi,0x8
  40363c:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  403641:	movzx  eax,WORD PTR [rsi+0x70]
  403645:	mov    rcx,QWORD PTR [rsi+0x68]
  403649:	cmp    eax,ebx
  40364b:	jg     403631 <_head_lib64_libkernel32_a-0xd9cf>
  40364d:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  403652:	jmp    403148 <_head_lib64_libkernel32_a-0xdeb8>
  403657:	xor    ebp,ebp
  403659:	jmp    402d4b <_head_lib64_libkernel32_a-0xe2b5>
  40365e:	mov    ebx,r14d
  403661:	xor    ebp,ebp
  403663:	jmp    402dc4 <_head_lib64_libkernel32_a-0xe23c>
  403668:	cmp    eax,0x1
  40366b:	sbb    eax,eax
  40366d:	add    eax,0x3
  403670:	mov    DWORD PTR [rsp+0x48],eax
  403674:	jmp    402fc4 <_head_lib64_libkernel32_a-0xe03c>
  403679:	mov    DWORD PTR [rsp+0x48],0xffffffff
  403681:	jmp    402fc4 <_head_lib64_libkernel32_a-0xe03c>
  403686:	test   eax,eax
  403688:	setne  al
  40368b:	movzx  eax,al
  40368e:	mov    DWORD PTR [rsp+0x48],eax
  403692:	jmp    402fc4 <_head_lib64_libkernel32_a-0xe03c>
  403697:	mov    DWORD PTR [rsp+0x48],0x1
  40369f:	jmp    4032c0 <_head_lib64_libkernel32_a-0xdd40>
  4036a4:	xor    r14d,r14d
  4036a7:	jmp    40326f <_head_lib64_libkernel32_a-0xdd91>
  4036ac:	mov    r14d,ebx
  4036af:	xor    ebp,ebp
  4036b1:	jmp    40326f <_head_lib64_libkernel32_a-0xdd91>
  4036b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036c0:	push   r15
  4036c2:	push   r14
  4036c4:	push   r13
  4036c6:	push   r12
  4036c8:	push   rbp
  4036c9:	push   rdi
  4036ca:	push   rsi
  4036cb:	push   rbx
  4036cc:	sub    rsp,0x308
  4036d3:	mov    QWORD PTR [rsp+0x358],rdx
  4036db:	mov    rbx,rcx
  4036de:	lea    rdx,[rsp+0x120]
  4036e6:	mov    QWORD PTR [rsp+0xe8],0x0
  4036f2:	call   4087c0 <_head_lib64_libkernel32_a-0x8840>
  4036f7:	cmp    eax,0xffffffff
  4036fa:	je     403e8d <_head_lib64_libkernel32_a-0xd173>
  403700:	lea    rdx,[rip+0x8e59]        # 40c560 <_head_lib64_libkernel32_a-0x4aa0>
  403707:	mov    rcx,rbx
  40370a:	call   408818 <_head_lib64_libkernel32_a-0x87e8>
  40370f:	test   rax,rax
  403712:	mov    r15,rax
  403715:	je     40489b <_head_lib64_libkernel32_a-0xc765>
  40371b:	lea    r13,[rsp+0xf0]
  403723:	mov    rcx,rbx
  403726:	call   408718 <_head_lib64_libkernel32_a-0x88e8>
  40372b:	lea    rcx,[rip+0x8e5a]        # 40c58c <_head_lib64_libkernel32_a-0x4a74>
  403732:	mov    rsi,rax
  403735:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  40373a:	mov    rdx,rsi
  40373d:	mov    rcx,rax
  403740:	call   408568 <_head_lib64_libkernel32_a-0x8a98>
  403745:	mov    r9,r15
  403748:	mov    edx,0x4
  40374d:	mov    rcx,r13
  403750:	mov    r8d,0x1
  403756:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40375b:	test   rax,rax
  40375e:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  403764:	lea    rax,[rsp+0xe4]
  40376c:	mov    r9,r15
  40376f:	mov    r8d,0x1
  403775:	mov    edx,0x2
  40377a:	mov    rcx,rax
  40377d:	mov    QWORD PTR [rsp+0x58],rax
  403782:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403787:	test   rax,rax
  40378a:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  403790:	lea    r14,[rsp+0x1f0]
  403798:	mov    r9,r15
  40379b:	mov    r8d,0x1
  4037a1:	mov    edx,0x6
  4037a6:	mov    rcx,r14
  4037a9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4037ae:	test   rax,rax
  4037b1:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  4037b7:	lea    r12,[rsp+0x160]
  4037bf:	mov    r9,r15
  4037c2:	mov    r8d,0x1
  4037c8:	mov    edx,0x2
  4037cd:	mov    rcx,r12
  4037d0:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4037d5:	test   rax,rax
  4037d8:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  4037de:	lea    rcx,[r12+0x8]
  4037e3:	mov    r9,r15
  4037e6:	mov    r8d,0x1
  4037ec:	mov    edx,0x4
  4037f1:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4037f6:	test   rax,rax
  4037f9:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  4037ff:	lea    rcx,[r12+0xc]
  403804:	mov    r9,r15
  403807:	mov    r8d,0x1
  40380d:	mov    edx,0x4
  403812:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403817:	test   rax,rax
  40381a:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  403820:	lea    rcx,[r12+0x10]
  403825:	mov    r9,r15
  403828:	mov    r8d,0x1
  40382e:	mov    edx,0x2
  403833:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403838:	test   rax,rax
  40383b:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  403841:	lea    rcx,[r12+0x12]
  403846:	mov    r9,r15
  403849:	mov    r8d,0x1
  40384f:	mov    edx,0x2
  403854:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403859:	test   rax,rax
  40385c:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  403862:	movzx  r11d,WORD PTR [rsp+0xe4]
  40386b:	mov    r8d,0x4
  403871:	mov    rcx,r13
  403874:	movzx  esi,WORD PTR [rsp+0x170]
  40387c:	lea    rdx,[rip+0x8d16]        # 40c599 <_head_lib64_libkernel32_a-0x4a67>
  403883:	movzx  r10d,WORD PTR [rsp+0x160]
  40388c:	movzx  r9d,WORD PTR [rsp+0x172]
  403895:	mov    edi,DWORD PTR [rsp+0x168]
  40389c:	rol    r11w,0x8
  4038a1:	mov    ebp,DWORD PTR [rsp+0x16c]
  4038a8:	rol    si,0x8
  4038ac:	mov    DWORD PTR [rsp+0x50],r11d
  4038b1:	rol    r10w,0x8
  4038b6:	mov    WORD PTR [rsp+0x170],si
  4038be:	rol    r9w,0x8
  4038c3:	mov    DWORD PTR [rsp+0x48],r10d
  4038c8:	mov    WORD PTR [rsp+0xe4],r11w
  4038d1:	bswap  edi
  4038d3:	mov    WORD PTR [rsp+0x160],r10w
  4038dc:	bswap  ebp
  4038de:	mov    WORD PTR [rsp+0x172],r9w
  4038e7:	mov    DWORD PTR [rsp+0x40],r9d
  4038ec:	mov    DWORD PTR [rsp+0x168],edi
  4038f3:	mov    DWORD PTR [rsp+0x16c],ebp
  4038fa:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4038ff:	mov    r9d,DWORD PTR [rsp+0x40]
  403904:	test   eax,eax
  403906:	mov    r10d,DWORD PTR [rsp+0x48]
  40390b:	mov    r11d,DWORD PTR [rsp+0x50]
  403910:	jne    4047bd <_head_lib64_libkernel32_a-0xc843>
  403916:	cmp    r11w,0x1
  40391b:	jne    404398 <_head_lib64_libkernel32_a-0xcc68>
  403921:	cmp    r10w,0x38
  403926:	ja     4047c6 <_head_lib64_libkernel32_a-0xc83a>
  40392c:	lea    eax,[rdi-0x1]
  40392f:	cmp    eax,0x3ffff
  403934:	ja     40480a <_head_lib64_libkernel32_a-0xc7f6>
  40393a:	lea    eax,[rbp-0x1]
  40393d:	cmp    eax,0x3ffff
  403942:	ja     404901 <_head_lib64_libkernel32_a-0xc6ff>
  403948:	xor    edx,edx
  40394a:	mov    eax,0x7fffffff
  40394f:	div    edi
  403951:	cmp    ebp,eax
  403953:	ja     404936 <_head_lib64_libkernel32_a-0xc6ca>
  403959:	cmp    r9w,0x3
  40395e:	jbe    40396b <_head_lib64_libkernel32_a-0xd695>
  403960:	cmp    r9w,0x8
  403965:	jne    40484b <_head_lib64_libkernel32_a-0xc7b5>
  40396b:	cmp    si,0x10
  40396f:	movzx  esi,si
  403972:	ja     404310 <_head_lib64_libkernel32_a-0xccf0>
  403978:	mov    eax,0x1
  40397d:	mov    ecx,esi
  40397f:	shl    rax,cl
  403982:	test   eax,0x10102
  403987:	je     404310 <_head_lib64_libkernel32_a-0xccf0>
  40398d:	movsd  xmm0,QWORD PTR [rip+0x904b]        # 40c9e0 <_head_lib64_libkernel32_a-0x4620>
  403995:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  40399a:	mov    r9,r15
  40399d:	mov    edx,0x4
  4039a2:	mov    rcx,r14
  4039a5:	mov    r8d,0x1
  4039ab:	mov    DWORD PTR [rsp+0x18c],0x0
  4039b6:	mov    DWORD PTR [rsp+0x188],0x0
  4039c1:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4039c6:	test   rax,rax
  4039c9:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  4039cf:	mov    eax,DWORD PTR [rsp+0x1f0]
  4039d6:	movzx  edx,WORD PTR [rsp+0x172]
  4039de:	bswap  eax
  4039e0:	test   eax,eax
  4039e2:	mov    DWORD PTR [rsp+0x1f0],eax
  4039e9:	jne    403ea1 <_head_lib64_libkernel32_a-0xd15f>
  4039ef:	cmp    dx,0x2
  4039f3:	je     40478c <_head_lib64_libkernel32_a-0xc874>
  4039f9:	cmp    dx,0x8
  4039fd:	je     40478c <_head_lib64_libkernel32_a-0xc874>
  403a03:	test   dx,dx
  403a06:	jne    403a47 <_head_lib64_libkernel32_a-0xd5b9>
  403a08:	mov    DWORD PTR [rsp+0x188],0x6
  403a13:	mov    ecx,0x6
  403a18:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  403a1d:	mov    r8d,DWORD PTR [rsp+0x188]
  403a25:	lea    rdx,[rip+0x7614]        # 40b040 <_head_lib64_libkernel32_a-0x5fc0>
  403a2c:	mov    rcx,rax
  403a2f:	mov    QWORD PTR [rsp+0x180],rax
  403a37:	call   409e30 <_head_lib64_libkernel32_a-0x71d0>
  403a3c:	mov    DWORD PTR [rsp+0x18c],0x2
  403a47:	movsd  xmm0,QWORD PTR [rip+0x8f99]        # 40c9e8 <_head_lib64_libkernel32_a-0x4618>
  403a4f:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  403a54:	mov    r9,r15
  403a57:	mov    edx,0x4
  403a5c:	mov    rcx,r14
  403a5f:	mov    r8d,0x1
  403a65:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403a6a:	test   rax,rax
  403a6d:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  403a73:	mov    eax,DWORD PTR [rsp+0x1f0]
  403a7a:	mov    rcx,r15
  403a7d:	bswap  eax
  403a7f:	mov    DWORD PTR [rsp+0x194],eax
  403a86:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  403a8b:	xor    r8d,r8d
  403a8e:	mov    rcx,r15
  403a91:	mov    DWORD PTR [rsp+0x190],eax
  403a98:	add    eax,DWORD PTR [rsp+0x194]
  403a9f:	mov    edx,eax
  403aa1:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  403aa6:	test   eax,eax
  403aa8:	js     403e00 <_head_lib64_libkernel32_a-0xd200>
  403aae:	movsd  xmm0,QWORD PTR [rip+0x8f3a]        # 40c9f0 <_head_lib64_libkernel32_a-0x4610>
  403ab6:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  403abb:	lea    rax,[rsp+0xe0]
  403ac3:	mov    r9,r15
  403ac6:	mov    r8d,0x1
  403acc:	mov    edx,0x4
  403ad1:	mov    rcx,rax
  403ad4:	mov    QWORD PTR [rsp+0x40],rax
  403ad9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403ade:	test   rax,rax
  403ae1:	je     404345 <_head_lib64_libkernel32_a-0xccbb>
  403ae7:	mov    eax,DWORD PTR [rsp+0xe0]
  403aee:	mov    DWORD PTR [rsp+0x164],0x0
  403af9:	mov    DWORD PTR [rsp+0x1a8],0x0
  403b04:	bswap  eax
  403b06:	test   eax,eax
  403b08:	mov    DWORD PTR [rsp+0x19c],eax
  403b0f:	je     403fb8 <_head_lib64_libkernel32_a-0xd048>
  403b15:	mov    rcx,r15
  403b18:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  403b1d:	mov    rcx,QWORD PTR [rsp+0x40]
  403b22:	mov    r9,r15
  403b25:	mov    r8d,0x1
  403b2b:	mov    DWORD PTR [rsp+0x60],eax
  403b2f:	mov    edx,0x4
  403b34:	mov    DWORD PTR [rsp+0x198],eax
  403b3b:	mov    eax,DWORD PTR [rsp+0x19c]
  403b42:	mov    DWORD PTR [rsp+0x68],eax
  403b46:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403b4b:	test   rax,rax
  403b4e:	je     404345 <_head_lib64_libkernel32_a-0xccbb>
  403b54:	lea    rcx,[r12+0x40]
  403b59:	mov    r9,r15
  403b5c:	mov    r8d,0x1
  403b62:	mov    edx,0x2
  403b67:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403b6c:	test   rax,rax
  403b6f:	je     404345 <_head_lib64_libkernel32_a-0xccbb>
  403b75:	movzx  eax,WORD PTR [rsp+0x1a0]
  403b7d:	rol    ax,0x8
  403b81:	test   ax,ax
  403b84:	mov    WORD PTR [rsp+0x1a0],ax
  403b8c:	js     40437a <_head_lib64_libkernel32_a-0xcc86>
  403b92:	movsx  rcx,ax
  403b96:	je     404274 <_head_lib64_libkernel32_a-0xcd8c>
  403b9c:	mov    edx,0x8
  403ba1:	call   4087f0 <_head_lib64_libkernel32_a-0x8810>
  403ba6:	cmp    WORD PTR [rsp+0x1a0],0x0
  403baf:	mov    QWORD PTR [rsp+0x50],rax
  403bb4:	jle    404e33 <_head_lib64_libkernel32_a-0xc1cd>
  403bba:	mov    rsi,QWORD PTR [rsp+0x50]
  403bbf:	lea    rax,[rsp+0xe8]
  403bc7:	mov    DWORD PTR [rsp+0x70],0x0
  403bcf:	mov    QWORD PTR [rsp+0x48],rax
  403bd4:	mov    ecx,0x88
  403bd9:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  403bde:	mov    r9,r15
  403be1:	mov    r8d,0x1
  403be7:	mov    edx,0x4
  403bec:	mov    QWORD PTR [rsi],rax
  403bef:	lea    rcx,[rax+0x4]
  403bf3:	mov    DWORD PTR [rax],0x0
  403bf9:	mov    DWORD PTR [rax+0x80],0x0
  403c03:	mov    BYTE PTR [rax+0x84],0x0
  403c0a:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403c0f:	test   rax,rax
  403c12:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  403c18:	mov    rax,QWORD PTR [rsi]
  403c1b:	mov    r9,r15
  403c1e:	mov    r8d,0x1
  403c24:	mov    edx,0x4
  403c29:	lea    rcx,[rax+0x8]
  403c2d:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403c32:	test   rax,rax
  403c35:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  403c3b:	mov    rax,QWORD PTR [rsi]
  403c3e:	mov    r9,r15
  403c41:	mov    r8d,0x1
  403c47:	mov    edx,0x4
  403c4c:	lea    rcx,[rax+0xc]
  403c50:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403c55:	test   rax,rax
  403c58:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  403c5e:	mov    rax,QWORD PTR [rsi]
  403c61:	mov    r9,r15
  403c64:	mov    r8d,0x1
  403c6a:	mov    edx,0x4
  403c6f:	lea    rcx,[rax+0x10]
  403c73:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403c78:	test   rax,rax
  403c7b:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  403c81:	mov    rax,QWORD PTR [rsi]
  403c84:	mov    r9,r15
  403c87:	mov    r8d,0x1
  403c8d:	mov    edx,0x2
  403c92:	lea    rcx,[rax+0x14]
  403c96:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403c9b:	test   rax,rax
  403c9e:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  403ca4:	mov    rdi,QWORD PTR [rsi]
  403ca7:	movzx  r8d,WORD PTR [rdi+0x14]
  403cac:	mov    eax,DWORD PTR [rdi+0x4]
  403caf:	mov    edx,DWORD PTR [rdi+0x8]
  403cb2:	mov    ecx,DWORD PTR [rdi+0xc]
  403cb5:	mov    ebp,DWORD PTR [rdi+0x10]
  403cb8:	rol    r8w,0x8
  403cbd:	cmp    r8w,0x38
  403cc2:	bswap  eax
  403cc4:	mov    WORD PTR [rdi+0x14],r8w
  403cc9:	bswap  edx
  403ccb:	mov    DWORD PTR [rdi+0x4],eax
  403cce:	bswap  ecx
  403cd0:	mov    DWORD PTR [rdi+0x8],edx
  403cd3:	bswap  ebp
  403cd5:	mov    DWORD PTR [rdi+0xc],ecx
  403cd8:	mov    DWORD PTR [rdi+0x10],ebp
  403cdb:	ja     405273 <_head_lib64_libkernel32_a-0xbd8d>
  403ce1:	cmp    eax,ecx
  403ce3:	jg     40529c <_head_lib64_libkernel32_a-0xbd64>
  403ce9:	sub    ecx,eax
  403ceb:	cmp    ecx,0x40000
  403cf1:	jg     405257 <_head_lib64_libkernel32_a-0xbda9>
  403cf7:	cmp    edx,ebp
  403cf9:	jg     405223 <_head_lib64_libkernel32_a-0xbddd>
  403cff:	sub    ebp,edx
  403d01:	cmp    ebp,0x40000
  403d07:	jg     405225 <_head_lib64_libkernel32_a-0xbddb>
  403d0d:	test   ecx,ecx
  403d0f:	mov    r9d,0x1
  403d15:	mov    eax,0x7fffffff
  403d1a:	cmovg  r9d,ecx
  403d1e:	cdq    
  403d1f:	idiv   r9d
  403d22:	cmp    ebp,eax
  403d24:	jg     4042d8 <_head_lib64_libkernel32_a-0xcd28>
  403d2a:	movzx  ecx,r8w
  403d2e:	mov    edx,0x8
  403d33:	call   4087f0 <_head_lib64_libkernel32_a-0x8810>
  403d38:	mov    QWORD PTR [rdi+0x18],rax
  403d3c:	mov    r8,QWORD PTR [rsi]
  403d3f:	cmp    WORD PTR [r8+0x14],0x0
  403d45:	je     4043dc <_head_lib64_libkernel32_a-0xcc24>
  403d4b:	mov    rcx,QWORD PTR [r8+0x18]
  403d4f:	xor    ebp,ebp
  403d51:	xor    edi,edi
  403d53:	jmp    403dad <_head_lib64_libkernel32_a-0xd253>
  403d55:	mov    rax,QWORD PTR [rsi]
  403d58:	mov    rcx,rbp
  403d5b:	mov    r9,r15
  403d5e:	mov    r8d,0x1
  403d64:	mov    edx,0x4
  403d69:	add    rcx,QWORD PTR [rax+0x18]
  403d6d:	add    rcx,0x4
  403d71:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403d76:	test   rax,rax
  403d79:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  403d7b:	mov    r8,QWORD PTR [rsi]
  403d7e:	add    edi,0x1
  403d81:	mov    rcx,QWORD PTR [r8+0x18]
  403d85:	lea    rdx,[rcx+rbp*1]
  403d89:	add    rbp,0x8
  403d8d:	mov    eax,DWORD PTR [rdx+0x4]
  403d90:	rol    WORD PTR [rdx],0x8
  403d94:	bswap  eax
  403d96:	mov    DWORD PTR [rdx+0x4],eax
  403d99:	add    DWORD PTR [rsp+0x1a8],eax
  403da0:	movzx  eax,WORD PTR [r8+0x14]
  403da5:	cmp    edi,eax
  403da7:	jge    4043dc <_head_lib64_libkernel32_a-0xcc24>
  403dad:	add    rcx,rbp
  403db0:	mov    r9,r15
  403db3:	mov    r8d,0x1
  403db9:	mov    edx,0x2
  403dbe:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403dc3:	test   rax,rax
  403dc6:	jne    403d55 <_head_lib64_libkernel32_a-0xd2ab>
  403dc8:	call   QWORD PTR [rip+0xd9e2]        # 4117b0 <__imp__errno>
  403dce:	mov    rcx,r15
  403dd1:	mov    esi,DWORD PTR [rax]
  403dd3:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  403dd8:	mov    r8,QWORD PTR [rsp+0x48]
  403ddd:	mov    ecx,eax
  403ddf:	mov    edx,esi
  403de1:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  403de6:	cmp    WORD PTR [rsp+0x1a0],0x0
  403def:	mov    QWORD PTR [rsp+0x50],0x0
  403df8:	setne  al
  403dfb:	jmp    4042b1 <_head_lib64_libkernel32_a-0xcd4f>
  403e00:	call   QWORD PTR [rip+0xd9aa]        # 4117b0 <__imp__errno>
  403e06:	mov    rcx,r15
  403e09:	mov    ebx,DWORD PTR [rax]
  403e0b:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  403e10:	lea    r8,[rsp+0xe8]
  403e18:	mov    ecx,eax
  403e1a:	mov    edx,ebx
  403e1c:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  403e21:	mov    rax,QWORD PTR [rsp+0xe8]
  403e29:	mov    ebp,0xffffffff
  403e2e:	test   rax,rax
  403e31:	je     403e80 <_head_lib64_libkernel32_a-0xd180>
  403e33:	lea    rcx,[rip+0x8a73]        # 40c8ad <_head_lib64_libkernel32_a-0x4753>
  403e3a:	mov    rsi,QWORD PTR [rax+0x8]
  403e3e:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  403e43:	mov    rbx,rax
  403e46:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  403e4b:	mov    rcx,QWORD PTR [rsp+0x358]
  403e53:	mov    r9,rbx
  403e56:	mov    r8d,0x18
  403e5c:	mov    QWORD PTR [rsp+0x20],rsi
  403e61:	mov    edx,eax
  403e63:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  403e68:	mov    rcx,QWORD PTR [rsp+0xe8]
  403e70:	call   408830 <_head_lib64_libkernel32_a-0x87d0>
  403e75:	test   ebp,ebp
  403e77:	jle    403e80 <_head_lib64_libkernel32_a-0xd180>
  403e79:	mov    ecx,ebp
  403e7b:	call   408670 <_head_lib64_libkernel32_a-0x8990>
  403e80:	mov    rcx,r15
  403e83:	call   409e80 <_head_lib64_libkernel32_a-0x7180>
  403e88:	mov    eax,0xffffffff
  403e8d:	add    rsp,0x308
  403e94:	pop    rbx
  403e95:	pop    rsi
  403e96:	pop    rdi
  403e97:	pop    rbp
  403e98:	pop    r12
  403e9a:	pop    r13
  403e9c:	pop    r14
  403e9e:	pop    r15
  403ea0:	ret    
  403ea1:	cmp    dx,0x2
  403ea5:	je     403ef5 <_head_lib64_libkernel32_a-0xd10b>
  403ea7:	cmp    dx,0x8
  403eab:	jne    403a03 <_head_lib64_libkernel32_a-0xd5fd>
  403eb1:	mov    ecx,eax
  403eb3:	mov    DWORD PTR [rsp+0x188],eax
  403eba:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  403ebf:	mov    edx,DWORD PTR [rsp+0x1f0]
  403ec6:	mov    r9,r15
  403ec9:	mov    r8d,0x1
  403ecf:	mov    rcx,rax
  403ed2:	mov    QWORD PTR [rsp+0x180],rax
  403eda:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403edf:	test   rax,rax
  403ee2:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  403ee8:	movzx  edx,WORD PTR [rsp+0x172]
  403ef0:	jmp    403a03 <_head_lib64_libkernel32_a-0xd5fd>
  403ef5:	cmp    eax,0x300
  403efa:	jne    40478c <_head_lib64_libkernel32_a-0xc874>
  403f00:	mov    DWORD PTR [rsp+0x188],0x300
  403f0b:	mov    ecx,0x300
  403f10:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  403f15:	mov    edx,DWORD PTR [rsp+0x1f0]
  403f1c:	mov    r9,r15
  403f1f:	mov    r8d,0x1
  403f25:	mov    rcx,rax
  403f28:	mov    QWORD PTR [rsp+0x180],rax
  403f30:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  403f35:	test   rax,rax
  403f38:	je     403e00 <_head_lib64_libkernel32_a-0xd200>
  403f3e:	mov    rdi,QWORD PTR [rsp+0x180]
  403f46:	mov    ecx,0x300
  403f4b:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  403f50:	lea    r8,[rax+0x300]
  403f57:	mov    rsi,rax
  403f5a:	mov    rdx,rdi
  403f5d:	nop    DWORD PTR [rax]
  403f60:	movzx  ecx,BYTE PTR [rdx]
  403f63:	add    rax,0x3
  403f67:	add    rdx,0x1
  403f6b:	mov    BYTE PTR [rax-0x3],cl
  403f6e:	movzx  ecx,BYTE PTR [rdx+0xff]
  403f75:	mov    BYTE PTR [rax-0x2],cl
  403f78:	movzx  ecx,BYTE PTR [rdx+0x1ff]
  403f7f:	mov    BYTE PTR [rax-0x1],cl
  403f82:	cmp    r8,rax
  403f85:	jne    403f60 <_head_lib64_libkernel32_a-0xd0a0>
  403f87:	mov    rdx,rsi
  403f8a:	mov    r8d,0x300
  403f90:	mov    rcx,rdi
  403f93:	call   409e30 <_head_lib64_libkernel32_a-0x71d0>
  403f98:	mov    rcx,rsi
  403f9b:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  403fa0:	movzx  edx,WORD PTR [rsp+0x172]
  403fa8:	mov    DWORD PTR [rsp+0x18c],0x100
  403fb3:	jmp    403a03 <_head_lib64_libkernel32_a-0xd5fd>
  403fb8:	mov    QWORD PTR [rsp+0x50],0x0
  403fc1:	xor    esi,esi
  403fc3:	mov    WORD PTR [rsp+0x1a0],si
  403fcb:	movsd  xmm0,QWORD PTR [rip+0x89ed]        # 40c9c0 <_head_lib64_libkernel32_a-0x4640>
  403fd3:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  403fd8:	mov    rcx,r15
  403fdb:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  403fe0:	xor    edx,edx
  403fe2:	mov    r8d,0x2
  403fe8:	mov    rcx,r15
  403feb:	mov    DWORD PTR [rsp+0x1ac],eax
  403ff2:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  403ff7:	test   eax,eax
  403ff9:	js     403e00 <_head_lib64_libkernel32_a-0xd200>
  403fff:	mov    rcx,r15
  404002:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  404007:	sub    eax,DWORD PTR [rsp+0x1ac]
  40400e:	movsd  xmm0,QWORD PTR [rip+0x89b2]        # 40c9c8 <_head_lib64_libkernel32_a-0x4638>
  404016:	mov    DWORD PTR [rsp+0x1b0],eax
  40401d:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  404022:	cmp    WORD PTR [rsp+0x172],0x8
  40402b:	ja     4042c0 <_head_lib64_libkernel32_a-0xcd40>
  404031:	movzx  edx,WORD PTR [rsp+0x172]
  404039:	lea    rax,[rip+0x8888]        # 40c8c8 <_head_lib64_libkernel32_a-0x4738>
  404040:	movsxd rdx,DWORD PTR [rax+rdx*4]
  404044:	add    rax,rdx
  404047:	jmp    rax
  404049:	mov    DWORD PTR [rsp+0x174],0x0
  404054:	xor    r8d,r8d
  404057:	mov    edx,DWORD PTR [rsp+0x168]
  40405e:	mov    ecx,DWORD PTR [rsp+0x16c]
  404065:	call   408638 <_head_lib64_libkernel32_a-0x89c8>
  40406a:	mov    rdx,rbx
  40406d:	mov    ebp,eax
  40406f:	mov    ecx,eax
  404071:	call   408618 <_head_lib64_libkernel32_a-0x89e8>
  404076:	mov    ecx,ebp
  404078:	call   408600 <_head_lib64_libkernel32_a-0x8a00>
  40407d:	test   ebp,ebp
  40407f:	js     404232 <_head_lib64_libkernel32_a-0xcdce>
  404085:	movsd  xmm0,QWORD PTR [rip+0x8943]        # 40c9d0 <_head_lib64_libkernel32_a-0x4630>
  40408d:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  404092:	mov    r8d,DWORD PTR [rsp+0x188]
  40409a:	test   r8d,r8d
  40409d:	je     4040d2 <_head_lib64_libkernel32_a-0xcf2e>
  40409f:	cmp    WORD PTR [rsp+0x172],0x8
  4040a8:	je     40496f <_head_lib64_libkernel32_a-0xc691>
  4040ae:	mov    r8d,DWORD PTR [rsp+0x18c]
  4040b6:	mov    ecx,ebp
  4040b8:	mov    rdx,QWORD PTR [rsp+0x180]
  4040c0:	call   408620 <_head_lib64_libkernel32_a-0x89e0>
  4040c5:	mov    rcx,QWORD PTR [rsp+0x180]
  4040cd:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4040d2:	movsd  xmm0,QWORD PTR [rip+0x88fe]        # 40c9d8 <_head_lib64_libkernel32_a-0x4628>
  4040da:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  4040df:	mov    edx,DWORD PTR [rsp+0x190]
  4040e6:	xor    r8d,r8d
  4040e9:	mov    rcx,r15
  4040ec:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  4040f1:	test   eax,eax
  4040f3:	js     405c56 <_head_lib64_libkernel32_a-0xb3aa>
  4040f9:	lea    rax,[rsp+0xe8]
  404101:	xor    ecx,ecx
  404103:	xor    r8d,r8d
  404106:	mov    DWORD PTR [rsp+0x1b4],0x0
  404111:	xor    r9d,r9d
  404114:	xor    r10d,r10d
  404117:	mov    QWORD PTR [rsp+0x48],rax
  40411c:	mov    rbx,rax
  40411f:	mov    WORD PTR [rsp+0x1b8],cx
  404127:	mov    QWORD PTR [rsp+0x1c0],0x0
  404133:	mov    QWORD PTR [rsp+0x1c8],0x0
  40413f:	mov    WORD PTR [rsp+0x1d0],r8w
  404148:	mov    QWORD PTR [rsp+0x1d8],0x0
  404154:	mov    WORD PTR [rsp+0x1e0],r9w
  40415d:	mov    WORD PTR [rsp+0x1e2],r10w
  404166:	jmp    4041bf <_head_lib64_libkernel32_a-0xce41>
  404168:	nop    DWORD PTR [rax+rax*1+0x0]
  404170:	mov    r8,rbx
  404173:	mov    rdx,r15
  404176:	mov    rcx,r14
  404179:	call   406cc0 <_head_lib64_libkernel32_a-0xa340>
  40417e:	test   eax,eax
  404180:	js     404232 <_head_lib64_libkernel32_a-0xcdce>
  404186:	mov    edx,DWORD PTR [rsp+0x2fc]
  40418d:	mov    eax,DWORD PTR [rsp+0x194]
  404194:	add    edx,DWORD PTR [rsp+0x2f8]
  40419b:	add    eax,DWORD PTR [rsp+0x190]
  4041a2:	cmp    edx,eax
  4041a4:	ja     4041d9 <_head_lib64_libkernel32_a-0xce27>
  4041a6:	mov    QWORD PTR [rsp+0x20],rbx
  4041ab:	mov    r9,r15
  4041ae:	mov    r8,r12
  4041b1:	mov    edx,ebp
  4041b3:	mov    rcx,r14
  4041b6:	call   406df0 <_head_lib64_libkernel32_a-0xa210>
  4041bb:	test   eax,eax
  4041bd:	js     404232 <_head_lib64_libkernel32_a-0xcdce>
  4041bf:	mov    rcx,r15
  4041c2:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  4041c7:	mov    edx,DWORD PTR [rsp+0x194]
  4041ce:	add    edx,DWORD PTR [rsp+0x190]
  4041d5:	cmp    eax,edx
  4041d7:	jb     404170 <_head_lib64_libkernel32_a-0xce90>
  4041d9:	movsd  xmm0,QWORD PTR [rip+0x8817]        # 40c9f8 <_head_lib64_libkernel32_a-0x4608>
  4041e1:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  4041e6:	cmp    WORD PTR [rsp+0x1a0],0x0
  4041ef:	mov    DWORD PTR [rsp+0xe0],0xffffffff
  4041fa:	mov    DWORD PTR [rsp+0xe4],0xffffffff
  404205:	jne    40499f <_head_lib64_libkernel32_a-0xc661>
  40420b:	movsd  xmm0,QWORD PTR [rip+0x87ed]        # 40ca00 <_head_lib64_libkernel32_a-0x4600>
  404213:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  404218:	mov    r9,QWORD PTR [rsp+0x48]
  40421d:	mov    r8,r15
  404220:	mov    rdx,r12
  404223:	mov    ecx,ebp
  404225:	call   402cc0 <_head_lib64_libkernel32_a-0xe340>
  40422a:	test   eax,eax
  40422c:	jns    4051f9 <_head_lib64_libkernel32_a-0xbe07>
  404232:	mov    rax,QWORD PTR [rsp+0xe8]
  40423a:	test   rax,rax
  40423d:	jne    403e33 <_head_lib64_libkernel32_a-0xd1cd>
  404243:	jmp    403e75 <_head_lib64_libkernel32_a-0xd18b>
  404248:	mov    DWORD PTR [rsp+0x174],0x1
  404253:	mov    r8d,0x1
  404259:	jmp    404057 <_head_lib64_libkernel32_a-0xcfa9>
  40425e:	mov    DWORD PTR [rsp+0x174],0x2
  404269:	mov    r8d,0x2
  40426f:	jmp    404057 <_head_lib64_libkernel32_a-0xcfa9>
  404274:	mov    QWORD PTR [rsp+0x50],0x0
  40427d:	mov    edx,DWORD PTR [rsp+0x60]
  404281:	xor    r8d,r8d
  404284:	mov    rcx,r15
  404287:	add    edx,DWORD PTR [rsp+0x68]
  40428b:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  404290:	test   eax,eax
  404292:	js     404e5f <_head_lib64_libkernel32_a-0xc1a1>
  404298:	cmp    WORD PTR [rsp+0x1a0],0x0
  4042a1:	mov    rdi,QWORD PTR [rsp+0x50]
  4042a6:	setne  dl
  4042a9:	test   rdi,rdi
  4042ac:	sete   al
  4042af:	and    eax,edx
  4042b1:	test   al,al
  4042b3:	je     403fcb <_head_lib64_libkernel32_a-0xd035>
  4042b9:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  4042be:	xchg   ax,ax
  4042c0:	lea    r8,[rip+0x8547]        # 40c80e <_head_lib64_libkernel32_a-0x47f2>
  4042c7:	mov    edx,0x10
  4042cc:	xor    ecx,ecx
  4042ce:	call   408800 <_head_lib64_libkernel32_a-0x8800>
  4042d3:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  4042d8:	mov    edi,ecx
  4042da:	lea    rcx,[rip+0x846f]        # 40c750 <_head_lib64_libkernel32_a-0x48b0>
  4042e1:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  4042e6:	mov    rsi,rax
  4042e9:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4042ee:	mov    DWORD PTR [rsp+0x28],edi
  4042f2:	mov    DWORD PTR [rsp+0x20],ebp
  4042f6:	mov    rcx,QWORD PTR [rsp+0x48]
  4042fb:	mov    r9,rsi
  4042fe:	mov    r8d,0x18
  404304:	mov    edx,eax
  404306:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  40430b:	jmp    403de6 <_head_lib64_libkernel32_a-0xd21a>
  404310:	lea    rcx,[rip+0x839a]        # 40c6b1 <_head_lib64_libkernel32_a-0x494f>
  404317:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  40431c:	mov    rbx,rax
  40431f:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  404324:	lea    rcx,[rsp+0xe8]
  40432c:	mov    DWORD PTR [rsp+0x20],esi
  404330:	mov    r9,rbx
  404333:	mov    r8d,0x18
  404339:	mov    edx,eax
  40433b:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  404340:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  404345:	call   QWORD PTR [rip+0xd465]        # 4117b0 <__imp__errno>
  40434b:	mov    rcx,r15
  40434e:	mov    ebx,DWORD PTR [rax]
  404350:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  404355:	lea    r8,[rsp+0xe8]
  40435d:	mov    ecx,eax
  40435f:	mov    edx,ebx
  404361:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  404366:	mov    r11d,0xffffffff
  40436c:	mov    WORD PTR [rsp+0x1a0],r11w
  404375:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  40437a:	mov    DWORD PTR [rsp+0x164],0x1
  404385:	neg    eax
  404387:	mov    WORD PTR [rsp+0x1a0],ax
  40438f:	movsx  rcx,ax
  404393:	jmp    403b9c <_head_lib64_libkernel32_a-0xd464>
  404398:	lea    rcx,[rip+0x8229]        # 40c5c8 <_head_lib64_libkernel32_a-0x4a38>
  40439f:	mov    DWORD PTR [rsp+0x40],r11d
  4043a4:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  4043a9:	mov    rbx,rax
  4043ac:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4043b1:	mov    r11d,DWORD PTR [rsp+0x40]
  4043b6:	mov    r9,rbx
  4043b9:	mov    r8d,0x18
  4043bf:	lea    rcx,[rsp+0xe8]
  4043c7:	mov    edx,eax
  4043c9:	movzx  r13d,r11w
  4043cd:	mov    DWORD PTR [rsp+0x20],r13d
  4043d2:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  4043d7:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  4043dc:	lea    rcx,[r8+0x20]
  4043e0:	mov    r9,r15
  4043e3:	mov    r8d,0x1
  4043e9:	mov    edx,0x4
  4043ee:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4043f3:	test   rax,rax
  4043f6:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  4043fc:	mov    rax,QWORD PTR [rsi]
  4043ff:	mov    r9,r15
  404402:	mov    r8d,0x1
  404408:	mov    edx,0x4
  40440d:	lea    rcx,[rax+0x24]
  404411:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404416:	test   rax,rax
  404419:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  40441f:	mov    rax,QWORD PTR [rsi]
  404422:	mov    r9,r15
  404425:	mov    r8d,0x1
  40442b:	mov    edx,0x1
  404430:	lea    rcx,[rax+0x28]
  404434:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404439:	test   rax,rax
  40443c:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404442:	mov    rax,QWORD PTR [rsi]
  404445:	mov    r9,r15
  404448:	mov    r8d,0x1
  40444e:	mov    edx,0x1
  404453:	lea    rcx,[rax+0x29]
  404457:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40445c:	test   rax,rax
  40445f:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404465:	mov    rax,QWORD PTR [rsi]
  404468:	mov    r9,r15
  40446b:	mov    r8d,0x1
  404471:	mov    edx,0x1
  404476:	lea    rcx,[rax+0x2a]
  40447a:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40447f:	test   rax,rax
  404482:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404488:	mov    rax,QWORD PTR [rsi]
  40448b:	mov    r9,r15
  40448e:	mov    r8d,0x1
  404494:	mov    edx,0x1
  404499:	lea    rcx,[rax+0x2b]
  40449d:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4044a2:	test   rax,rax
  4044a5:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  4044ab:	mov    rax,QWORD PTR [rsi]
  4044ae:	mov    r9,r15
  4044b1:	mov    r8d,0x1
  4044b7:	mov    edx,0x4
  4044bc:	lea    rcx,[rax+0x2c]
  4044c0:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4044c5:	test   rax,rax
  4044c8:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  4044ce:	mov    rbp,QWORD PTR [rsi]
  4044d1:	mov    r8d,0x4
  4044d7:	lea    rdx,[rip+0x829b]        # 40c779 <_head_lib64_libkernel32_a-0x4887>
  4044de:	lea    rcx,[rbp+0x20]
  4044e2:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4044e7:	test   eax,eax
  4044e9:	jne    40475e <_head_lib64_libkernel32_a-0xc8a2>
  4044ef:	movzx  eax,BYTE PTR [rbp+0x2a]
  4044f3:	mov    edx,eax
  4044f5:	and    edx,0x1
  4044f8:	mov    DWORD PTR [rbp+0x6c],edx
  4044fb:	mov    edx,eax
  4044fd:	shr    dl,1
  4044ff:	xor    edx,0x1
  404502:	and    edx,0x1
  404505:	test   al,0x8
  404507:	mov    DWORD PTR [rbp+0x70],edx
  40450a:	je     40483f <_head_lib64_libkernel32_a-0xc7c1>
  404510:	shr    al,0x4
  404513:	and    eax,0x1
  404516:	mov    DWORD PTR [rbp+0x7c],eax
  404519:	mov    edi,DWORD PTR [rbp+0x2c]
  40451c:	mov    r9,r15
  40451f:	mov    edx,0x4
  404524:	mov    r8d,0x1
  40452a:	mov    rcx,QWORD PTR [rsp+0x40]
  40452f:	bswap  edi
  404531:	mov    DWORD PTR [rbp+0x2c],edi
  404534:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404539:	test   rax,rax
  40453c:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404542:	mov    ebp,DWORD PTR [rsp+0xe0]
  404549:	mov    rax,QWORD PTR [rsi]
  40454c:	bswap  ebp
  40454e:	mov    DWORD PTR [rsp+0xe0],ebp
  404555:	cmp    ebp,0x14
  404558:	mov    BYTE PTR [rax+0x4c],0x0
  40455c:	mov    DWORD PTR [rax+0x5c],0x0
  404563:	mov    DWORD PTR [rax+0x60],0x0
  40456a:	mov    DWORD PTR [rax+0x64],0x0
  404571:	mov    DWORD PTR [rax+0x68],0x0
  404578:	mov    DWORD PTR [rax+0x3c],0x0
  40457f:	mov    DWORD PTR [rax+0x40],0x0
  404586:	mov    DWORD PTR [rax+0x44],0x0
  40458d:	mov    DWORD PTR [rax+0x48],0x0
  404594:	mov    rax,QWORD PTR [rsi]
  404597:	mov    BYTE PTR [rax+0x4e],0x0
  40459b:	mov    rax,QWORD PTR [rsi]
  40459e:	mov    DWORD PTR [rax+0x50],0x0
  4045a5:	mov    DWORD PTR [rax+0x54],0x0
  4045ac:	mov    DWORD PTR [rax+0x58],0x0
  4045b3:	je     404aa7 <_head_lib64_libkernel32_a-0xc559>
  4045b9:	cmp    ebp,0x24
  4045bc:	je     404c1c <_head_lib64_libkernel32_a-0xc3e4>
  4045c2:	test   ebp,ebp
  4045c4:	je     404c11 <_head_lib64_libkernel32_a-0xc3ef>
  4045ca:	mov    r8d,0x1
  4045d0:	mov    edx,ebp
  4045d2:	mov    rcx,r15
  4045d5:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  4045da:	test   eax,eax
  4045dc:	js     403dc8 <_head_lib64_libkernel32_a-0xd238>
  4045e2:	mov    rax,QWORD PTR [rsi]
  4045e5:	mov    ecx,DWORD PTR [rax+0x44]
  4045e8:	mov    edx,DWORD PTR [rax+0x3c]
  4045eb:	cmp    ecx,edx
  4045ed:	jl     4053e1 <_head_lib64_libkernel32_a-0xbc1f>
  4045f3:	mov    r8d,ecx
  4045f6:	sub    r8d,edx
  4045f9:	cmp    r8d,0x40000
  404600:	jg     4053e1 <_head_lib64_libkernel32_a-0xbc1f>
  404606:	mov    edx,DWORD PTR [rax+0x48]
  404609:	mov    eax,DWORD PTR [rax+0x40]
  40460c:	cmp    edx,eax
  40460e:	jl     4053ab <_head_lib64_libkernel32_a-0xbc55>
  404614:	mov    r9d,edx
  404617:	sub    r9d,eax
  40461a:	cmp    r9d,0x40000
  404621:	jg     4053ab <_head_lib64_libkernel32_a-0xbc55>
  404627:	test   r8d,r8d
  40462a:	mov    ecx,0x1
  40462f:	mov    eax,0x7fffffff
  404634:	cmovg  ecx,r8d
  404638:	cdq    
  404639:	idiv   ecx
  40463b:	cmp    r9d,eax
  40463e:	jg     405c07 <_head_lib64_libkernel32_a-0xb3f9>
  404644:	mov    rcx,QWORD PTR [rsp+0x40]
  404649:	mov    r9,r15
  40464c:	mov    r8d,0x1
  404652:	mov    edx,0x4
  404657:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40465c:	test   rax,rax
  40465f:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404665:	mov    r10d,DWORD PTR [rsp+0xe0]
  40466d:	bswap  r10d
  404670:	test   r10d,r10d
  404673:	mov    DWORD PTR [rsp+0xe0],r10d
  40467b:	je     4046a0 <_head_lib64_libkernel32_a-0xc960>
  40467d:	mov    edx,r10d
  404680:	mov    r8d,0x1
  404686:	mov    rcx,r15
  404689:	mov    DWORD PTR [rsp+0x78],r10d
  40468e:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  404693:	mov    r10d,DWORD PTR [rsp+0x78]
  404698:	test   eax,eax
  40469a:	js     403dc8 <_head_lib64_libkernel32_a-0xd238>
  4046a0:	mov    r11,QWORD PTR [rsi]
  4046a3:	mov    r9,r15
  4046a6:	mov    r8d,0x4
  4046ac:	mov    rdx,r13
  4046af:	mov    rax,QWORD PTR [rsp+0x48]
  4046b4:	mov    DWORD PTR [rsp+0x80],r10d
  4046bc:	mov    rcx,QWORD PTR [rsp+0x58]
  4046c1:	mov    QWORD PTR [rsp+0x78],r11
  4046c6:	mov    QWORD PTR [rsp+0x20],rax
  4046cb:	call   401960 <_head_lib64_libkernel32_a-0xf6a0>
  4046d0:	mov    r11,QWORD PTR [rsp+0x78]
  4046d5:	cmp    QWORD PTR [rsp+0xe8],0x0
  4046de:	mov    QWORD PTR [r11+0x30],rax
  4046e2:	jne    403de6 <_head_lib64_libkernel32_a-0xd21a>
  4046e8:	mov    eax,0xfffffff8
  4046ed:	sub    eax,DWORD PTR [rsp+0xe4]
  4046f4:	mov    r10d,DWORD PTR [rsp+0x80]
  4046fc:	add    edi,eax
  4046fe:	sub    edi,ebp
  404700:	sub    edi,r10d
  404703:	cmp    edi,0x7
  404706:	jbe    404e0e <_head_lib64_libkernel32_a-0xc1f2>
  40470c:	mov    rbp,QWORD PTR [rsp+0x48]
  404711:	jmp    40473c <_head_lib64_libkernel32_a-0xc8c4>
  404713:	mov    rdx,QWORD PTR [rsi]
  404716:	mov    r9,rbp
  404719:	mov    r8,r15
  40471c:	mov    rcx,r14
  40471f:	call   407fc0 <_head_lib64_libkernel32_a-0x9040>
  404724:	test   eax,eax
  404726:	js     403de6 <_head_lib64_libkernel32_a-0xd21a>
  40472c:	sub    edi,DWORD PTR [rsp+0x1fc]
  404733:	cmp    edi,0x7
  404736:	jbe    404e0e <_head_lib64_libkernel32_a-0xc1f2>
  40473c:	mov    r8,rbp
  40473f:	mov    rdx,r15
  404742:	mov    rcx,r14
  404745:	call   407f10 <_head_lib64_libkernel32_a-0x90f0>
  40474a:	test   eax,eax
  40474c:	js     403de6 <_head_lib64_libkernel32_a-0xd21a>
  404752:	sub    edi,0xc
  404755:	cmp    edi,DWORD PTR [rsp+0x1fc]
  40475c:	jae    404713 <_head_lib64_libkernel32_a-0xc8ed>
  40475e:	lea    rcx,[rip+0x7f66]        # 40c6cb <_head_lib64_libkernel32_a-0x4935>
  404765:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  40476a:	mov    rsi,rax
  40476d:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  404772:	mov    rcx,QWORD PTR [rsp+0x48]
  404777:	mov    r9,rsi
  40477a:	mov    r8d,0x18
  404780:	mov    edx,eax
  404782:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  404787:	jmp    403de6 <_head_lib64_libkernel32_a-0xd21a>
  40478c:	lea    rcx,[rip+0x7f38]        # 40c6cb <_head_lib64_libkernel32_a-0x4935>
  404793:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  404798:	mov    rbx,rax
  40479b:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4047a0:	lea    rcx,[rsp+0xe8]
  4047a8:	mov    r9,rbx
  4047ab:	mov    r8d,0x18
  4047b1:	mov    edx,eax
  4047b3:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  4047b8:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  4047bd:	lea    rcx,[rip+0x7ddc]        # 40c5a0 <_head_lib64_libkernel32_a-0x4a60>
  4047c4:	jmp    404793 <_head_lib64_libkernel32_a-0xc86d>
  4047c6:	lea    rcx,[rip+0x7e1f]        # 40c5ec <_head_lib64_libkernel32_a-0x4a14>
  4047cd:	mov    DWORD PTR [rsp+0x40],r10d
  4047d2:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  4047d7:	mov    rbx,rax
  4047da:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4047df:	mov    r10d,DWORD PTR [rsp+0x40]
  4047e4:	mov    r9,rbx
  4047e7:	mov    r8d,0x18
  4047ed:	lea    rcx,[rsp+0xe8]
  4047f5:	mov    edx,eax
  4047f7:	movzx  r14d,r10w
  4047fb:	mov    DWORD PTR [rsp+0x20],r14d
  404800:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  404805:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  40480a:	lea    rcx,[rip+0x7dff]        # 40c610 <_head_lib64_libkernel32_a-0x49f0>
  404811:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  404816:	mov    rbx,rax
  404819:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  40481e:	lea    rcx,[rsp+0xe8]
  404826:	mov    DWORD PTR [rsp+0x20],edi
  40482a:	mov    r9,rbx
  40482d:	mov    r8d,0x18
  404833:	mov    edx,eax
  404835:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  40483a:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  40483f:	mov    DWORD PTR [rbp+0x7c],0x0
  404846:	jmp    404519 <_head_lib64_libkernel32_a-0xcae7>
  40484b:	cmp    r9w,0x9
  404850:	movzx  ebx,r9w
  404854:	ja     404de5 <_head_lib64_libkernel32_a-0xc21b>
  40485a:	lea    rax,[rip+0x80ff]        # 40c960 <_head_lib64_libkernel32_a-0x46a0>
  404861:	mov    rbx,QWORD PTR [rax+rbx*8]
  404865:	lea    rcx,[rip+0x7e2a]        # 40c696 <_head_lib64_libkernel32_a-0x496a>
  40486c:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  404871:	mov    rsi,rax
  404874:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  404879:	lea    rcx,[rsp+0xe8]
  404881:	mov    QWORD PTR [rsp+0x20],rbx
  404886:	mov    r9,rsi
  404889:	mov    r8d,0x18
  40488f:	mov    edx,eax
  404891:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  404896:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  40489b:	mov    rsi,QWORD PTR [rip+0xcf0e]        # 4117b0 <__imp__errno>
  4048a2:	call   rsi
  4048a4:	mov    ecx,DWORD PTR [rax]
  4048a6:	call   4087a8 <_head_lib64_libkernel32_a-0x8858>
  4048ab:	mov    rcx,rbx
  4048ae:	mov    r12,rax
  4048b1:	call   408718 <_head_lib64_libkernel32_a-0x88e8>
  4048b6:	lea    rcx,[rip+0x7cab]        # 40c568 <_head_lib64_libkernel32_a-0x4a98>
  4048bd:	mov    rbp,rax
  4048c0:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  4048c5:	mov    rdi,rax
  4048c8:	call   rsi
  4048ca:	mov    ecx,DWORD PTR [rax]
  4048cc:	call   408828 <_head_lib64_libkernel32_a-0x87d8>
  4048d1:	mov    ebx,eax
  4048d3:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4048d8:	mov    QWORD PTR [rsp+0x28],r12
  4048dd:	mov    r9,rdi
  4048e0:	mov    r8d,ebx
  4048e3:	mov    rcx,QWORD PTR [rsp+0x358]
  4048eb:	mov    edx,eax
  4048ed:	mov    QWORD PTR [rsp+0x20],rbp
  4048f2:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  4048f7:	mov    eax,0xffffffff
  4048fc:	jmp    403e8d <_head_lib64_libkernel32_a-0xd173>
  404901:	lea    rcx,[rip+0x7d30]        # 40c638 <_head_lib64_libkernel32_a-0x49c8>
  404908:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  40490d:	mov    rbx,rax
  404910:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  404915:	lea    rcx,[rsp+0xe8]
  40491d:	mov    DWORD PTR [rsp+0x20],ebp
  404921:	mov    r9,rbx
  404924:	mov    r8d,0x18
  40492a:	mov    edx,eax
  40492c:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  404931:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  404936:	lea    rcx,[rip+0x7d23]        # 40c660 <_head_lib64_libkernel32_a-0x49a0>
  40493d:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  404942:	mov    rbx,rax
  404945:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  40494a:	lea    rcx,[rsp+0xe8]
  404952:	mov    DWORD PTR [rsp+0x28],edi
  404956:	mov    r9,rbx
  404959:	mov    DWORD PTR [rsp+0x20],ebp
  40495d:	mov    r8d,0x18
  404963:	mov    edx,eax
  404965:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  40496a:	jmp    403e21 <_head_lib64_libkernel32_a-0xd1df>
  40496f:	mov    r9,QWORD PTR [rsp+0x180]
  404977:	xor    edx,edx
  404979:	lea    rcx,[rip+0x7ea1]        # 40c821 <_head_lib64_libkernel32_a-0x47df>
  404980:	call   408700 <_head_lib64_libkernel32_a-0x8900>
  404985:	mov    ecx,ebp
  404987:	mov    rbx,rax
  40498a:	mov    rdx,rax
  40498d:	call   408680 <_head_lib64_libkernel32_a-0x8980>
  404992:	mov    rcx,rbx
  404995:	call   408708 <_head_lib64_libkernel32_a-0x88f8>
  40499a:	jmp    4040c5 <_head_lib64_libkernel32_a-0xcf3b>
  40499f:	mov    edx,DWORD PTR [rsp+0x1a4]
  4049a6:	xor    r8d,r8d
  4049a9:	mov    rcx,r15
  4049ac:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  4049b1:	test   eax,eax
  4049b3:	js     404a84 <_head_lib64_libkernel32_a-0xc57c>
  4049b9:	xor    edx,edx
  4049bb:	xor    ecx,ecx
  4049bd:	mov    r8d,0x4
  4049c3:	call   408848 <_head_lib64_libkernel32_a-0x87b8>
  4049c8:	mov    rdx,QWORD PTR [rsp+0x40]
  4049cd:	mov    r8d,0x1
  4049d3:	mov    rcx,rax
  4049d6:	mov    QWORD PTR [rsp+0x68],rax
  4049db:	call   408858 <_head_lib64_libkernel32_a-0x87a8>
  4049e0:	cmp    WORD PTR [rsp+0x1a0],0x0
  4049e9:	jle    4052ee <_head_lib64_libkernel32_a-0xbd12>
  4049ef:	mov    rdi,QWORD PTR [rsp+0x50]
  4049f4:	lea    rax,[rsp+0xde]
  4049fc:	mov    DWORD PTR [rsp+0x40],ebp
  404a00:	mov    DWORD PTR [rsp+0x8c],0x0
  404a0b:	mov    QWORD PTR [rsp+0xb0],rax
  404a13:	mov    QWORD PTR [rsp+0xa0],r14
  404a1b:	mov    QWORD PTR [rsp+0xa8],r13
  404a23:	mov    QWORD PTR [rsp+0xb8],r12
  404a2b:	mov    rax,QWORD PTR [rdi]
  404a2e:	mov    edx,DWORD PTR [rax]
  404a30:	test   edx,edx
  404a32:	je     404e85 <_head_lib64_libkernel32_a-0xc17b>
  404a38:	cmp    WORD PTR [rax+0x14],0x0
  404a3d:	je     4052a2 <_head_lib64_libkernel32_a-0xbd5e>
  404a43:	xor    esi,esi
  404a45:	xor    ebx,ebx
  404a47:	jmp    404a66 <_head_lib64_libkernel32_a-0xc59a>
  404a49:	nop    DWORD PTR [rax+0x0]
  404a50:	mov    rax,QWORD PTR [rdi]
  404a53:	add    ebx,0x1
  404a56:	add    rsi,0x8
  404a5a:	movzx  edx,WORD PTR [rax+0x14]
  404a5e:	cmp    ebx,edx
  404a60:	jge    4052a2 <_head_lib64_libkernel32_a-0xbd5e>
  404a66:	mov    rax,QWORD PTR [rax+0x18]
  404a6a:	mov    r8d,0x1
  404a70:	mov    rcx,r15
  404a73:	mov    edx,DWORD PTR [rax+rsi*1+0x4]
  404a77:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  404a7c:	test   eax,eax
  404a7e:	jns    404a50 <_head_lib64_libkernel32_a-0xc5b0>
  404a80:	mov    ebp,DWORD PTR [rsp+0x40]
  404a84:	call   QWORD PTR [rip+0xcd26]        # 4117b0 <__imp__errno>
  404a8a:	mov    rcx,r15
  404a8d:	mov    ebx,DWORD PTR [rax]
  404a8f:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  404a94:	mov    r8,QWORD PTR [rsp+0x48]
  404a99:	mov    ecx,eax
  404a9b:	mov    edx,ebx
  404a9d:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  404aa2:	jmp    404232 <_head_lib64_libkernel32_a-0xcdce>
  404aa7:	lea    rcx,[rax+0x3c]
  404aab:	mov    r9,r15
  404aae:	mov    r8d,0x1
  404ab4:	mov    edx,0x4
  404ab9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404abe:	test   rax,rax
  404ac1:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404ac7:	mov    rax,QWORD PTR [rsi]
  404aca:	mov    r9,r15
  404acd:	mov    r8d,0x1
  404ad3:	mov    edx,0x4
  404ad8:	lea    rcx,[rax+0x40]
  404adc:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404ae1:	test   rax,rax
  404ae4:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404aea:	mov    rax,QWORD PTR [rsi]
  404aed:	mov    r9,r15
  404af0:	mov    r8d,0x1
  404af6:	mov    edx,0x4
  404afb:	lea    rcx,[rax+0x44]
  404aff:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404b04:	test   rax,rax
  404b07:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404b0d:	mov    rax,QWORD PTR [rsi]
  404b10:	mov    r9,r15
  404b13:	mov    r8d,0x1
  404b19:	mov    edx,0x4
  404b1e:	lea    rcx,[rax+0x48]
  404b22:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404b27:	test   rax,rax
  404b2a:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404b30:	mov    rax,QWORD PTR [rsi]
  404b33:	mov    r9,r15
  404b36:	mov    r8d,0x1
  404b3c:	mov    edx,0x1
  404b41:	lea    rcx,[rax+0x4c]
  404b45:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404b4a:	test   rax,rax
  404b4d:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404b53:	mov    rax,QWORD PTR [rsi]
  404b56:	mov    r9,r15
  404b59:	mov    r8d,0x1
  404b5f:	mov    edx,0x1
  404b64:	lea    rcx,[rax+0x4d]
  404b68:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404b6d:	test   rax,rax
  404b70:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404b76:	mov    rax,QWORD PTR [rsi]
  404b79:	mov    r9,r15
  404b7c:	mov    r8d,0x1
  404b82:	mov    edx,0x1
  404b87:	lea    rcx,[rax+0x4e]
  404b8b:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404b90:	test   rax,rax
  404b93:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404b99:	mov    rax,QWORD PTR [rsi]
  404b9c:	mov    r9,r15
  404b9f:	mov    r8d,0x1
  404ba5:	mov    edx,0x1
  404baa:	lea    rcx,[rax+0x4f]
  404bae:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404bb3:	test   rax,rax
  404bb6:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404bbc:	mov    rax,QWORD PTR [rsi]
  404bbf:	mov    r8d,DWORD PTR [rax+0x48]
  404bc3:	mov    ecx,DWORD PTR [rax+0x40]
  404bc6:	mov    edx,DWORD PTR [rax+0x3c]
  404bc9:	bswap  r8d
  404bcc:	mov    DWORD PTR [rax+0x48],r8d
  404bd0:	movzx  r8d,BYTE PTR [rax+0x4d]
  404bd5:	bswap  ecx
  404bd7:	mov    DWORD PTR [rax+0x40],ecx
  404bda:	mov    ecx,DWORD PTR [rax+0x44]
  404bdd:	bswap  edx
  404bdf:	mov    DWORD PTR [rax+0x3c],edx
  404be2:	mov    r9d,r8d
  404be5:	and    r9d,0x1
  404be9:	bswap  ecx
  404beb:	mov    DWORD PTR [rax+0x44],ecx
  404bee:	mov    DWORD PTR [rax+0x50],r9d
  404bf2:	mov    r9d,r8d
  404bf5:	shr    r8b,0x2
  404bf9:	shr    r9b,1
  404bfc:	and    r8d,0x1
  404c00:	and    r9d,0x1
  404c04:	mov    DWORD PTR [rax+0x58],r8d
  404c08:	mov    DWORD PTR [rax+0x54],r9d
  404c0c:	jmp    4045eb <_head_lib64_libkernel32_a-0xca15>
  404c11:	mov    ecx,DWORD PTR [rax+0x44]
  404c14:	mov    edx,DWORD PTR [rax+0x3c]
  404c17:	jmp    4045eb <_head_lib64_libkernel32_a-0xca15>
  404c1c:	lea    rcx,[rax+0x5c]
  404c20:	mov    r9,r15
  404c23:	mov    r8d,0x1
  404c29:	mov    edx,0x4
  404c2e:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404c33:	test   rax,rax
  404c36:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404c3c:	mov    rax,QWORD PTR [rsi]
  404c3f:	mov    r9,r15
  404c42:	mov    r8d,0x1
  404c48:	mov    edx,0x4
  404c4d:	lea    rcx,[rax+0x60]
  404c51:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404c56:	test   rax,rax
  404c59:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404c5f:	mov    rax,QWORD PTR [rsi]
  404c62:	mov    r9,r15
  404c65:	mov    r8d,0x1
  404c6b:	mov    edx,0x4
  404c70:	lea    rcx,[rax+0x64]
  404c74:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404c79:	test   rax,rax
  404c7c:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404c82:	mov    rax,QWORD PTR [rsi]
  404c85:	mov    r9,r15
  404c88:	mov    r8d,0x1
  404c8e:	mov    edx,0x4
  404c93:	lea    rcx,[rax+0x68]
  404c97:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404c9c:	test   rax,rax
  404c9f:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404ca5:	mov    rax,QWORD PTR [rsi]
  404ca8:	mov    r9,r15
  404cab:	mov    r8d,0x1
  404cb1:	mov    edx,0x1
  404cb6:	lea    rcx,[rax+0x4e]
  404cba:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404cbf:	test   rax,rax
  404cc2:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404cc8:	mov    rax,QWORD PTR [rsi]
  404ccb:	mov    r9,r15
  404cce:	mov    r8d,0x1
  404cd4:	mov    edx,0x1
  404cd9:	lea    rcx,[rax+0x4f]
  404cdd:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404ce2:	test   rax,rax
  404ce5:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404ceb:	mov    rax,QWORD PTR [rsi]
  404cee:	mov    r9,r15
  404cf1:	mov    r8d,0x1
  404cf7:	mov    edx,0x1
  404cfc:	lea    rcx,[rax+0x4c]
  404d00:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404d05:	test   rax,rax
  404d08:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404d0e:	mov    rax,QWORD PTR [rsi]
  404d11:	mov    r9,r15
  404d14:	mov    r8d,0x1
  404d1a:	mov    edx,0x1
  404d1f:	lea    rcx,[rax+0x4d]
  404d23:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404d28:	test   rax,rax
  404d2b:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404d31:	mov    rax,QWORD PTR [rsi]
  404d34:	mov    r9,r15
  404d37:	mov    r8d,0x1
  404d3d:	mov    edx,0x4
  404d42:	lea    rcx,[rax+0x3c]
  404d46:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404d4b:	test   rax,rax
  404d4e:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404d54:	mov    rax,QWORD PTR [rsi]
  404d57:	mov    r9,r15
  404d5a:	mov    r8d,0x1
  404d60:	mov    edx,0x4
  404d65:	lea    rcx,[rax+0x40]
  404d69:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404d6e:	test   rax,rax
  404d71:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404d77:	mov    rax,QWORD PTR [rsi]
  404d7a:	mov    r9,r15
  404d7d:	mov    r8d,0x1
  404d83:	mov    edx,0x4
  404d88:	lea    rcx,[rax+0x44]
  404d8c:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404d91:	test   rax,rax
  404d94:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404d9a:	mov    rax,QWORD PTR [rsi]
  404d9d:	mov    r9,r15
  404da0:	mov    r8d,0x1
  404da6:	mov    edx,0x4
  404dab:	lea    rcx,[rax+0x48]
  404daf:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404db4:	test   rax,rax
  404db7:	je     403dc8 <_head_lib64_libkernel32_a-0xd238>
  404dbd:	mov    rax,QWORD PTR [rsi]
  404dc0:	mov    edx,DWORD PTR [rax+0x5c]
  404dc3:	bswap  edx
  404dc5:	mov    DWORD PTR [rax+0x5c],edx
  404dc8:	mov    edx,DWORD PTR [rax+0x60]
  404dcb:	bswap  edx
  404dcd:	mov    DWORD PTR [rax+0x60],edx
  404dd0:	mov    edx,DWORD PTR [rax+0x64]
  404dd3:	bswap  edx
  404dd5:	mov    DWORD PTR [rax+0x64],edx
  404dd8:	mov    edx,DWORD PTR [rax+0x68]
  404ddb:	bswap  edx
  404ddd:	mov    DWORD PTR [rax+0x68],edx
  404de0:	jmp    404bbf <_head_lib64_libkernel32_a-0xc441>
  404de5:	mov    rcx,QWORD PTR [rip+0xb2f4]        # 4100e0 <_head_lib64_libkernel32_a-0xf20>
  404dec:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  404df1:	lea    rcx,[rip+0x7891]        # 40c689 <_head_lib64_libkernel32_a-0x4977>
  404df8:	mov    edx,ebx
  404dfa:	call   4087b0 <_head_lib64_libkernel32_a-0x8850>
  404dff:	mov    rbx,rax
  404e02:	mov    QWORD PTR [rip+0xb2d7],rax        # 4100e0 <_head_lib64_libkernel32_a-0xf20>
  404e09:	jmp    404865 <_head_lib64_libkernel32_a-0xc79b>
  404e0e:	test   edi,edi
  404e10:	jne    405310 <_head_lib64_libkernel32_a-0xbcf0>
  404e16:	add    DWORD PTR [rsp+0x70],0x1
  404e1b:	add    rsi,0x8
  404e1f:	mov    edi,DWORD PTR [rsp+0x70]
  404e23:	movsx  eax,WORD PTR [rsp+0x1a0]
  404e2b:	cmp    edi,eax
  404e2d:	jl     403bd4 <_head_lib64_libkernel32_a-0xd42c>
  404e33:	mov    rcx,r15
  404e36:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  404e3b:	mov    edx,DWORD PTR [rsp+0x1a8]
  404e42:	mov    r8d,0x1
  404e48:	mov    rcx,r15
  404e4b:	mov    DWORD PTR [rsp+0x1a4],eax
  404e52:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  404e57:	test   eax,eax
  404e59:	jns    40427d <_head_lib64_libkernel32_a-0xcd83>
  404e5f:	call   QWORD PTR [rip+0xc94b]        # 4117b0 <__imp__errno>
  404e65:	mov    rcx,r15
  404e68:	mov    esi,DWORD PTR [rax]
  404e6a:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  404e6f:	lea    r8,[rsp+0xe8]
  404e77:	mov    ecx,eax
  404e79:	mov    edx,esi
  404e7b:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  404e80:	jmp    403de6 <_head_lib64_libkernel32_a-0xd21a>
  404e85:	movzx  edx,BYTE PTR [rax+0x84]
  404e8c:	test   dl,dl
  404e8e:	je     404eb4 <_head_lib64_libkernel32_a-0xc14c>
  404e90:	cmp    dl,0x3
  404e93:	je     405c3e <_head_lib64_libkernel32_a-0xb3c2>
  404e99:	mov    rbx,QWORD PTR [rsp+0x68]
  404e9e:	mov    edx,DWORD PTR [rbx+0x8]
  404ea1:	test   edx,edx
  404ea3:	jne    405330 <_head_lib64_libkernel32_a-0xbcd0>
  404ea9:	mov    DWORD PTR [rsp+0xe4],0xffffffff
  404eb4:	mov    DWORD PTR [rsp+0x80],0x1
  404ebf:	mov    ebx,DWORD PTR [rax+0x4]
  404ec2:	cmp    DWORD PTR [rax+0xc],ebx
  404ec5:	je     404eda <_head_lib64_libkernel32_a-0xc126>
  404ec7:	mov    ebx,DWORD PTR [rax+0x8]
  404eca:	cmp    DWORD PTR [rax+0x10],ebx
  404ecd:	sete   bl
  404ed0:	movzx  ebx,bl
  404ed3:	mov    DWORD PTR [rsp+0x80],ebx
  404eda:	mov    ebx,DWORD PTR [rax+0x3c]
  404edd:	cmp    DWORD PTR [rax+0x44],ebx
  404ee0:	je     405353 <_head_lib64_libkernel32_a-0xbcad>
  404ee6:	mov    ebx,DWORD PTR [rax+0x40]
  404ee9:	cmp    DWORD PTR [rax+0x48],ebx
  404eec:	movzx  ecx,WORD PTR [rax+0x14]
  404ef0:	sete   bl
  404ef3:	movzx  ebx,bl
  404ef6:	mov    DWORD PTR [rsp+0x70],ebx
  404efa:	mov    edx,0x8
  404eff:	call   4087f0 <_head_lib64_libkernel32_a-0x8810>
  404f04:	mov    rdx,QWORD PTR [rdi]
  404f07:	mov    r14,rax
  404f0a:	cmp    WORD PTR [rdx+0x14],0x0
  404f0f:	je     4050ac <_head_lib64_libkernel32_a-0xbf54>
  404f15:	mov    rbx,rax
  404f18:	xor    ebp,ebp
  404f1a:	xor    eax,eax
  404f1c:	mov    ecx,0x20
  404f21:	mov    rsi,rbx
  404f24:	mov    WORD PTR [rsp+0xde],ax
  404f2c:	sub    rsi,r14
  404f2f:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  404f34:	mov    rdx,QWORD PTR [rdi]
  404f37:	mov    rcx,rsi
  404f3a:	mov    QWORD PTR [rbx],rax
  404f3d:	mov    r10d,DWORD PTR [rdx+0xc]
  404f41:	mov    r11d,DWORD PTR [rdx+0x4]
  404f45:	add    rcx,QWORD PTR [rdx+0x18]
  404f49:	mov    r9d,DWORD PTR [rdx+0x8]
  404f4d:	mov    r8d,r10d
  404f50:	sub    r8d,r11d
  404f53:	movzx  r12d,WORD PTR [rcx]
  404f57:	mov    DWORD PTR [rax+0x18],r8d
  404f5b:	mov    r8d,DWORD PTR [rdx+0x10]
  404f5f:	mov    WORD PTR [rax],r12w
  404f63:	mov    r13d,r8d
  404f66:	sub    r13d,r9d
  404f69:	cmp    r12w,0xfffe
  404f6e:	mov    r12d,DWORD PTR [rcx+0x4]
  404f72:	mov    DWORD PTR [rax+0x1c],r13d
  404f76:	je     40515f <_head_lib64_libkernel32_a-0xbea1>
  404f7c:	cmp    r12d,0x1
  404f80:	jbe    404fb9 <_head_lib64_libkernel32_a-0xc047>
  404f82:	mov    rcx,QWORD PTR [rsp+0xb0]
  404f8a:	mov    r9,r15
  404f8d:	mov    r8d,0x1
  404f93:	mov    edx,0x2
  404f98:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  404f9d:	test   rax,rax
  404fa0:	je     404a80 <_head_lib64_libkernel32_a-0xc580>
  404fa6:	mov    rdx,QWORD PTR [rdi]
  404fa9:	rol    WORD PTR [rsp+0xde],0x8
  404fb2:	add    rsi,QWORD PTR [rdx+0x18]
  404fb6:	mov    rcx,rsi
  404fb9:	cmp    DWORD PTR [rcx+0x4],0x2
  404fbd:	jbe    405099 <_head_lib64_libkernel32_a-0xbf67>
  404fc3:	movzx  esi,WORD PTR [rsp+0xde]
  404fcb:	test   si,si
  404fce:	je     405069 <_head_lib64_libkernel32_a-0xbf97>
  404fd4:	cmp    si,0x1
  404fd8:	jne    4051b0 <_head_lib64_libkernel32_a-0xbe50>
  404fde:	mov    rax,QWORD PTR [rbx]
  404fe1:	mov    ecx,DWORD PTR [rax+0x18]
  404fe4:	add    ecx,ecx
  404fe6:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  404feb:	mov    rcx,QWORD PTR [rbx]
  404fee:	mov    rsi,rax
  404ff1:	mov    eax,DWORD PTR [rcx+0x18]
  404ff4:	test   eax,eax
  404ff6:	je     405364 <_head_lib64_libkernel32_a-0xbc9c>
  404ffc:	mov    r12,rsi
  404fff:	xor    r13d,r13d
  405002:	jmp    40501f <_head_lib64_libkernel32_a-0xbfe1>
  405004:	mov    rcx,QWORD PTR [rbx]
  405007:	add    r13d,0x1
  40500b:	rol    WORD PTR [r12],0x8
  405011:	add    r12,0x2
  405015:	cmp    DWORD PTR [rcx+0x18],r13d
  405019:	jbe    405364 <_head_lib64_libkernel32_a-0xbc9c>
  40501f:	mov    r9,r15
  405022:	mov    r8d,0x1
  405028:	mov    edx,0x2
  40502d:	mov    rcx,r12
  405030:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405035:	test   rax,rax
  405038:	jne    405004 <_head_lib64_libkernel32_a-0xbffc>
  40503a:	mov    ebp,DWORD PTR [rsp+0x40]
  40503e:	call   QWORD PTR [rip+0xc76c]        # 4117b0 <__imp__errno>
  405044:	mov    rcx,r15
  405047:	mov    ebx,DWORD PTR [rax]
  405049:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  40504e:	mov    r8,QWORD PTR [rsp+0x48]
  405053:	mov    ecx,eax
  405055:	mov    edx,ebx
  405057:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  40505c:	mov    rcx,rsi
  40505f:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  405064:	jmp    404232 <_head_lib64_libkernel32_a-0xcdce>
  405069:	mov    rax,QWORD PTR [rsp+0x48]
  40506e:	mov    QWORD PTR [rsp+0x20],r15
  405073:	xor    r9d,r9d
  405076:	xor    r8d,r8d
  405079:	movzx  edx,WORD PTR [rsp+0x170]
  405081:	mov    QWORD PTR [rsp+0x28],rax
  405086:	mov    rcx,QWORD PTR [rbx]
  405089:	call   402950 <_head_lib64_libkernel32_a-0xe6b0>
  40508e:	test   eax,eax
  405090:	jle    405c7c <_head_lib64_libkernel32_a-0xb384>
  405096:	mov    rdx,QWORD PTR [rdi]
  405099:	movzx  eax,WORD PTR [rdx+0x14]
  40509d:	add    ebp,0x1
  4050a0:	add    rbx,0x8
  4050a4:	cmp    ebp,eax
  4050a6:	jl     404f1a <_head_lib64_libkernel32_a-0xc0e6>
  4050ac:	mov    rcx,QWORD PTR [rdx+0x18]
  4050b0:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4050b5:	mov    eax,DWORD PTR [rsp+0x16c]
  4050bc:	mov    rbx,QWORD PTR [rsp+0x68]
  4050c1:	mov    ebp,DWORD PTR [rsp+0x168]
  4050c8:	mov    DWORD PTR [rsp+0x60],eax
  4050cc:	mov    eax,DWORD PTR [rbx+0x8]
  4050cf:	test   eax,eax
  4050d1:	je     405cbf <_head_lib64_libkernel32_a-0xb341>
  4050d7:	lea    edx,[rax-0x1]
  4050da:	mov    rax,QWORD PTR [rbx]
  4050dd:	mov    eax,DWORD PTR [rax+rdx*4]
  4050e0:	mov    DWORD PTR [rsp+0xe0],eax
  4050e7:	mov    rax,QWORD PTR [rdi]
  4050ea:	movzx  r8d,WORD PTR [rax+0x14]
  4050ef:	test   r8d,r8d
  4050f2:	je     405ca2 <_head_lib64_libkernel32_a-0xb35e>
  4050f8:	or     ecx,0xffffffff
  4050fb:	xor    edx,edx
  4050fd:	xor    r12d,r12d
  405100:	mov    DWORD PTR [rsp+0x90],0x0
  40510b:	mov    WORD PTR [rsp+0x78],cx
  405110:	xor    r10d,r10d
  405113:	jmp    40513e <_head_lib64_libkernel32_a-0xbec2>
  405115:	cmp    r9w,0xffff
  40511a:	je     40539e <_head_lib64_libkernel32_a-0xbc62>
  405120:	movzx  r9d,r10w
  405124:	add    r10d,0x1
  405128:	mov    WORD PTR [rsp+r9*2+0x1f0],dx
  405131:	add    rdx,0x1
  405135:	cmp    r8d,edx
  405138:	jle    4053ee <_head_lib64_libkernel32_a-0xbc12>
  40513e:	mov    r9,QWORD PTR [r14+rdx*8]
  405142:	movzx  r9d,WORD PTR [r9]
  405146:	cmp    r9w,0xfffe
  40514b:	jne    405115 <_head_lib64_libkernel32_a-0xbeeb>
  40514d:	mov    WORD PTR [rsp+0x78],dx
  405152:	mov    DWORD PTR [rsp+0x90],0x1
  40515d:	jmp    405131 <_head_lib64_libkernel32_a-0xbecf>
  40515f:	mov    r13d,DWORD PTR [rsp+0x70]
  405164:	test   r13d,r13d
  405167:	je     4051f3 <_head_lib64_libkernel32_a-0xbe0d>
  40516d:	cmp    r12d,0x2
  405171:	je     4051eb <_head_lib64_libkernel32_a-0xbe15>
  405173:	mov    r13d,DWORD PTR [rdx+0x44]
  405177:	cmp    DWORD PTR [rdx+0x3c],r13d
  40517b:	je     405c95 <_head_lib64_libkernel32_a-0xb36b>
  405181:	mov    r10d,DWORD PTR [rdx+0x48]
  405185:	mov    DWORD PTR [rsp+0x70],0x0
  40518d:	cmp    r10d,DWORD PTR [rdx+0x40]
  405191:	je     405c85 <_head_lib64_libkernel32_a-0xb37b>
  405197:	mov    r8d,DWORD PTR [rdx+0x44]
  40519b:	sub    r10d,DWORD PTR [rdx+0x40]
  40519f:	sub    r8d,DWORD PTR [rdx+0x3c]
  4051a3:	mov    DWORD PTR [rax+0x1c],r10d
  4051a7:	mov    DWORD PTR [rax+0x18],r8d
  4051ab:	jmp    404f7c <_head_lib64_libkernel32_a-0xc084>
  4051b0:	lea    rcx,[rip+0x7371]        # 40c528 <_head_lib64_libkernel32_a-0x4ad8>
  4051b7:	mov    ebp,DWORD PTR [rsp+0x40]
  4051bb:	movzx  r13d,si
  4051bf:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  4051c4:	mov    rbx,rax
  4051c7:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4051cc:	mov    rcx,QWORD PTR [rsp+0x48]
  4051d1:	mov    DWORD PTR [rsp+0x20],r13d
  4051d6:	mov    r9,rbx
  4051d9:	mov    r8d,0x18
  4051df:	mov    edx,eax
  4051e1:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  4051e6:	jmp    404232 <_head_lib64_libkernel32_a-0xcdce>
  4051eb:	mov    DWORD PTR [rsp+0x70],0x1
  4051f3:	mov    r10d,DWORD PTR [rdx+0x48]
  4051f7:	jmp    405197 <_head_lib64_libkernel32_a-0xbe69>
  4051f9:	movsd  xmm0,QWORD PTR [rip+0x77b7]        # 40c9b8 <_head_lib64_libkernel32_a-0x4648>
  405201:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  405206:	mov    ecx,ebp
  405208:	call   408678 <_head_lib64_libkernel32_a-0x8988>
  40520d:	mov    ecx,ebp
  40520f:	call   4085f8 <_head_lib64_libkernel32_a-0x8a08>
  405214:	mov    rcx,r15
  405217:	call   409e80 <_head_lib64_libkernel32_a-0x7180>
  40521c:	mov    eax,ebp
  40521e:	jmp    403e8d <_head_lib64_libkernel32_a-0xd173>
  405223:	sub    ebp,edx
  405225:	lea    rcx,[rip+0x74fc]        # 40c728 <_head_lib64_libkernel32_a-0x48d8>
  40522c:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  405231:	mov    rsi,rax
  405234:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  405239:	mov    DWORD PTR [rsp+0x20],ebp
  40523d:	mov    rcx,QWORD PTR [rsp+0x48]
  405242:	mov    r9,rsi
  405245:	mov    r8d,0x18
  40524b:	mov    edx,eax
  40524d:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  405252:	jmp    403de6 <_head_lib64_libkernel32_a-0xd21a>
  405257:	mov    edi,ecx
  405259:	lea    rcx,[rip+0x74a0]        # 40c700 <_head_lib64_libkernel32_a-0x4900>
  405260:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  405265:	mov    rsi,rax
  405268:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  40526d:	mov    DWORD PTR [rsp+0x20],edi
  405271:	jmp    40523d <_head_lib64_libkernel32_a-0xbdc3>
  405273:	lea    rcx,[rip+0x7466]        # 40c6e0 <_head_lib64_libkernel32_a-0x4920>
  40527a:	mov    DWORD PTR [rsp+0x50],r8d
  40527f:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  405284:	mov    rsi,rax
  405287:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  40528c:	mov    r8d,DWORD PTR [rsp+0x50]
  405291:	movzx  r8d,r8w
  405295:	mov    DWORD PTR [rsp+0x20],r8d
  40529a:	jmp    40523d <_head_lib64_libkernel32_a-0xbdc3>
  40529c:	mov    edi,ecx
  40529e:	sub    edi,eax
  4052a0:	jmp    405259 <_head_lib64_libkernel32_a-0xbda7>
  4052a2:	mov    rcx,QWORD PTR [rax+0x18]
  4052a6:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4052ab:	mov    rax,QWORD PTR [rdi]
  4052ae:	mov    rcx,QWORD PTR [rax+0x30]
  4052b2:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4052b7:	mov    rcx,QWORD PTR [rdi]
  4052ba:	add    rdi,0x8
  4052be:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4052c3:	movsx  eax,WORD PTR [rsp+0x1a0]
  4052cb:	add    DWORD PTR [rsp+0x8c],0x1
  4052d3:	mov    ebx,DWORD PTR [rsp+0x8c]
  4052da:	cmp    ebx,eax
  4052dc:	jl     404a2b <_head_lib64_libkernel32_a-0xc5d5>
  4052e2:	mov    ebp,DWORD PTR [rsp+0x40]
  4052e6:	mov    r12,QWORD PTR [rsp+0xb8]
  4052ee:	mov    rcx,QWORD PTR [rsp+0x50]
  4052f3:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4052f8:	mov    rcx,QWORD PTR [rsp+0x68]
  4052fd:	xor    edx,edx
  4052ff:	call   408850 <_head_lib64_libkernel32_a-0x87b0>
  405304:	jmp    40420b <_head_lib64_libkernel32_a-0xcdf5>
  405309:	nop    DWORD PTR [rax+0x0]
  405310:	mov    r8d,0x1
  405316:	mov    edx,edi
  405318:	mov    rcx,r15
  40531b:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  405320:	test   eax,eax
  405322:	jns    404e16 <_head_lib64_libkernel32_a-0xc1ea>
  405328:	jmp    403dc8 <_head_lib64_libkernel32_a-0xd238>
  40532d:	nop    DWORD PTR [rax]
  405330:	mov    rax,QWORD PTR [rbx]
  405333:	lea    ecx,[rdx-0x1]
  405336:	mov    rdx,rcx
  405339:	mov    eax,DWORD PTR [rax+rcx*4]
  40533c:	mov    rcx,rbx
  40533f:	mov    DWORD PTR [rsp+0xe4],eax
  405346:	call   408840 <_head_lib64_libkernel32_a-0x87c0>
  40534b:	mov    rax,QWORD PTR [rdi]
  40534e:	jmp    404eb4 <_head_lib64_libkernel32_a-0xc14c>
  405353:	movzx  ecx,WORD PTR [rax+0x14]
  405357:	mov    DWORD PTR [rsp+0x70],0x1
  40535f:	jmp    404efa <_head_lib64_libkernel32_a-0xc106>
  405364:	mov    rax,QWORD PTR [rsp+0x48]
  405369:	mov    QWORD PTR [rsp+0x20],r15
  40536e:	mov    r9,rsi
  405371:	mov    r8d,0x1
  405377:	movzx  edx,WORD PTR [rsp+0x170]
  40537f:	mov    QWORD PTR [rsp+0x28],rax
  405384:	call   402950 <_head_lib64_libkernel32_a-0xe6b0>
  405389:	test   eax,eax
  40538b:	jle    405c7c <_head_lib64_libkernel32_a-0xb384>
  405391:	mov    rcx,rsi
  405394:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  405399:	jmp    405096 <_head_lib64_libkernel32_a-0xbf6a>
  40539e:	mov    ecx,edx
  4053a0:	mov    r12d,0x1
  4053a6:	jmp    405131 <_head_lib64_libkernel32_a-0xbecf>
  4053ab:	lea    rcx,[rip+0x73fe]        # 40c7b0 <_head_lib64_libkernel32_a-0x4850>
  4053b2:	mov    esi,edx
  4053b4:	sub    esi,eax
  4053b6:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  4053bb:	mov    rdi,rax
  4053be:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4053c3:	mov    rcx,QWORD PTR [rsp+0x48]
  4053c8:	mov    DWORD PTR [rsp+0x20],esi
  4053cc:	mov    r9,rdi
  4053cf:	mov    r8d,0x18
  4053d5:	mov    edx,eax
  4053d7:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  4053dc:	jmp    403de6 <_head_lib64_libkernel32_a-0xd21a>
  4053e1:	mov    esi,ecx
  4053e3:	lea    rcx,[rip+0x7396]        # 40c780 <_head_lib64_libkernel32_a-0x4880>
  4053ea:	sub    esi,edx
  4053ec:	jmp    4053b6 <_head_lib64_libkernel32_a-0xbc4a>
  4053ee:	test   r12d,r12d
  4053f1:	je     405409 <_head_lib64_libkernel32_a-0xbbf7>
  4053f3:	movzx  edx,r10w
  4053f7:	mov    r12d,0x1
  4053fd:	add    r10d,0x1
  405401:	mov    WORD PTR [rsp+rdx*2+0x1f0],cx
  405409:	movzx  edx,BYTE PTR [rax+0x84]
  405410:	test   dl,dl
  405412:	je     4058c4 <_head_lib64_libkernel32_a-0xb73c>
  405418:	cmp    dl,0x3
  40541b:	je     405882 <_head_lib64_libkernel32_a-0xb77e>
  405421:	mov    ecx,DWORD PTR [rsp+0xe4]
  405428:	cmp    ecx,0xffffffff
  40542b:	je     405529 <_head_lib64_libkernel32_a-0xbad7>
  405431:	call   408698 <_head_lib64_libkernel32_a-0x8968>
  405436:	mov    rbx,rax
  405439:	mov    rax,QWORD PTR [rdi]
  40543c:	lea    rcx,[rax+0x24]
  405440:	call   402510 <_head_lib64_libkernel32_a-0xeaf0>
  405445:	mov    ecx,DWORD PTR [rsp+0xe4]
  40544c:	mov    edx,eax
  40544e:	call   408598 <_head_lib64_libkernel32_a-0x8a68>
  405453:	mov    rax,QWORD PTR [rdi]
  405456:	mov    ecx,0xff
  40545b:	pxor   xmm1,xmm1
  40545f:	movzx  eax,BYTE PTR [rax+0x28]
  405463:	imul   eax,eax,0x64
  405466:	cdq    
  405467:	idiv   ecx
  405469:	mov    ecx,DWORD PTR [rsp+0xe4]
  405470:	cvtsi2sd xmm1,eax
  405474:	call   408588 <_head_lib64_libkernel32_a-0x8a78>
  405479:	mov    rax,QWORD PTR [rdi]
  40547c:	mov    ecx,DWORD PTR [rbx]
  40547e:	mov    rdx,QWORD PTR [rax+0x30]
  405482:	call   4085e0 <_head_lib64_libkernel32_a-0x8a20>
  405487:	mov    rax,QWORD PTR [rdi]
  40548a:	mov    rcx,QWORD PTR [rax+0x30]
  40548e:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  405493:	mov    rax,QWORD PTR [rdi]
  405496:	mov    ecx,DWORD PTR [rbx]
  405498:	mov    edx,DWORD PTR [rax+0x70]
  40549b:	call   4085d0 <_head_lib64_libkernel32_a-0x8a30>
  4054a0:	mov    rax,QWORD PTR [rdi]
  4054a3:	mov    edx,DWORD PTR [rax+0x80]
  4054a9:	test   edx,edx
  4054ab:	je     4054b4 <_head_lib64_libkernel32_a-0xbb4c>
  4054ad:	mov    ecx,DWORD PTR [rbx]
  4054af:	call   4085d8 <_head_lib64_libkernel32_a-0x8a28>
  4054b4:	mov    rcx,rbx
  4054b7:	xor    esi,esi
  4054b9:	call   4086a0 <_head_lib64_libkernel32_a-0x8960>
  4054be:	mov    rcx,rbx
  4054c1:	xor    ebx,ebx
  4054c3:	call   4086b0 <_head_lib64_libkernel32_a-0x8950>
  4054c8:	cmp    DWORD PTR [rsp+0x90],0x0
  4054d0:	mov    rax,QWORD PTR [rdi]
  4054d3:	je     405529 <_head_lib64_libkernel32_a-0xbad7>
  4054d5:	cmp    BYTE PTR [rax+0x84],0x0
  4054dc:	jne    405529 <_head_lib64_libkernel32_a-0xbad7>
  4054de:	cmp    DWORD PTR [rsp+0x70],0x0
  4054e3:	je     405571 <_head_lib64_libkernel32_a-0xba8f>
  4054e9:	cmp    BYTE PTR [rax+0x4c],0xff
  4054ed:	je     405561 <_head_lib64_libkernel32_a-0xba9f>
  4054ef:	mov    ecx,DWORD PTR [rsp+0xe4]
  4054f6:	mov    edx,0x1
  4054fb:	call   4085c0 <_head_lib64_libkernel32_a-0x8a40>
  405500:	mov    ecx,DWORD PTR [rsp+0xe4]
  405507:	mov    edx,eax
  405509:	call   4085c8 <_head_lib64_libkernel32_a-0x8a38>
  40550e:	mov    rax,QWORD PTR [rdi]
  405511:	xor    edx,edx
  405513:	mov    ecx,DWORD PTR [rsp+0xe4]
  40551a:	cmp    DWORD PTR [rax+0x54],0x0
  40551e:	sete   dl
  405521:	call   4085a8 <_head_lib64_libkernel32_a-0x8a58>
  405526:	mov    rax,QWORD PTR [rdi]
  405529:	xor    ebx,ebx
  40552b:	cmp    WORD PTR [rax+0x14],0x0
  405530:	mov    rsi,r14
  405533:	je     405554 <_head_lib64_libkernel32_a-0xbaac>
  405535:	mov    rcx,QWORD PTR [rsi]
  405538:	test   rcx,rcx
  40553b:	je     405545 <_head_lib64_libkernel32_a-0xbabb>
  40553d:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  405542:	mov    rax,QWORD PTR [rdi]
  405545:	movzx  edx,WORD PTR [rax+0x14]
  405549:	add    ebx,0x1
  40554c:	add    rsi,0x8
  405550:	cmp    ebx,edx
  405552:	jl     405535 <_head_lib64_libkernel32_a-0xbacb>
  405554:	mov    rcx,r14
  405557:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  40555c:	jmp    4052b7 <_head_lib64_libkernel32_a-0xbd49>
  405561:	mov    ecx,DWORD PTR [rsp+0xe4]
  405568:	xor    edx,edx
  40556a:	call   4085c0 <_head_lib64_libkernel32_a-0x8a40>
  40556f:	jmp    405500 <_head_lib64_libkernel32_a-0xbb00>
  405571:	cmp    DWORD PTR [rax+0x50],0x0
  405575:	je     40583a <_head_lib64_libkernel32_a-0xb7c6>
  40557b:	mov    r13d,DWORD PTR [rax+0x40]
  40557f:	mov    r12d,DWORD PTR [rax+0x3c]
  405583:	mov    ebx,DWORD PTR [rax+0x48]
  405586:	mov    esi,DWORD PTR [rax+0x44]
  405589:	sub    ebx,r13d
  40558c:	sub    esi,r12d
  40558f:	mov    eax,ebx
  405591:	imul   eax,esi
  405594:	movsxd r8,eax
  405597:	mov    DWORD PTR [rsp+0x80],eax
  40559e:	mov    rcx,r8
  4055a1:	mov    QWORD PTR [rsp+0x90],r8
  4055a9:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  4055ae:	mov    r8,QWORD PTR [rsp+0x90]
  4055b6:	mov    QWORD PTR [rsp+0x70],rax
  4055bb:	mov    eax,r13d
  4055be:	shr    eax,0x1f
  4055c1:	test   al,al
  4055c3:	jne    405817 <_head_lib64_libkernel32_a-0xb7e9>
  4055c9:	lea    r11d,[rbx+r13*1]
  4055cd:	mov    eax,r12d
  4055d0:	lea    r10d,[rsi+r12*1]
  4055d4:	shr    eax,0x1f
  4055d7:	test   al,al
  4055d9:	jne    4055eb <_head_lib64_libkernel32_a-0xba15>
  4055db:	cmp    r11d,DWORD PTR [rsp+0x60]
  4055e0:	jg     4055eb <_head_lib64_libkernel32_a-0xba15>
  4055e2:	cmp    r10d,ebp
  4055e5:	jle    40585b <_head_lib64_libkernel32_a-0xb7a5>
  4055eb:	lea    rcx,[rip+0x7246]        # 40c838 <_head_lib64_libkernel32_a-0x47c8>
  4055f2:	mov    DWORD PTR [rsp+0xc0],r10d
  4055fa:	mov    DWORD PTR [rsp+0x90],r11d
  405602:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  405607:	xor    ecx,ecx
  405609:	mov    edx,0x20
  40560e:	mov    r8,rax
  405611:	call   408800 <_head_lib64_libkernel32_a-0x8800>
  405616:	movzx  r9d,WORD PTR [rsp+0x78]
  40561c:	mov    r8d,r13d
  40561f:	mov    ecx,r12d
  405622:	mov    r11d,DWORD PTR [rsp+0x90]
  40562a:	mov    QWORD PTR [rsp+0x98],r14
  405632:	neg    r8d
  405635:	mov    r10d,DWORD PTR [rsp+0xc0]
  40563d:	mov    DWORD PTR [rsp+0x80],0x0
  405648:	lea    rax,[r14+r9*8]
  40564c:	mov    r14,r15
  40564f:	mov    QWORD PTR [rsp+0x78],rax
  405654:	mov    eax,ecx
  405656:	sub    eax,r12d
  405659:	cmp    esi,eax
  40565b:	jle    4056d8 <_head_lib64_libkernel32_a-0xb928>
  40565d:	cmp    ebp,ecx
  40565f:	jle    4056cd <_head_lib64_libkernel32_a-0xb933>
  405661:	test   ecx,ecx
  405663:	js     4056cd <_head_lib64_libkernel32_a-0xb933>
  405665:	test   ebx,ebx
  405667:	jle    4056cd <_head_lib64_libkernel32_a-0xb933>
  405669:	mov    eax,r13d
  40566c:	mov    DWORD PTR [rsp+0xc0],ecx
  405673:	test   eax,eax
  405675:	js     4056be <_head_lib64_libkernel32_a-0xb942>
  405677:	cmp    DWORD PTR [rsp+0x60],eax
  40567b:	jle    4056be <_head_lib64_libkernel32_a-0xb942>
  40567d:	movsxd r15,DWORD PTR [rsp+0x80]
  405685:	mov    rdx,QWORD PTR [rsp+0x78]
  40568a:	mov    rcx,QWORD PTR [rsp+0x70]
  40568f:	add    DWORD PTR [rsp+0x80],0x1
  405697:	mov    QWORD PTR [rsp+0x90],r15
  40569f:	mov    r15,QWORD PTR [rdx]
  4056a2:	lea    edx,[rax+r8*1]
  4056a6:	movsxd rdx,edx
  4056a9:	mov    r15,QWORD PTR [r15+0x10]
  4056ad:	movzx  edx,BYTE PTR [r15+rdx*1]
  4056b2:	mov    r15,QWORD PTR [rsp+0x90]
  4056ba:	mov    BYTE PTR [rcx+r15*1],dl
  4056be:	add    eax,0x1
  4056c1:	cmp    eax,r11d
  4056c4:	jne    405673 <_head_lib64_libkernel32_a-0xb98d>
  4056c6:	mov    ecx,DWORD PTR [rsp+0xc0]
  4056cd:	add    ecx,0x1
  4056d0:	add    r8d,ebx
  4056d3:	jmp    405654 <_head_lib64_libkernel32_a-0xb9ac>
  4056d8:	test   r13d,r13d
  4056db:	mov    r15,r14
  4056de:	mov    r14,QWORD PTR [rsp+0x98]
  4056e6:	jns    4056ee <_head_lib64_libkernel32_a-0xb912>
  4056e8:	mov    ebx,r11d
  4056eb:	xor    r13d,r13d
  4056ee:	test   r12d,r12d
  4056f1:	jns    4056f9 <_head_lib64_libkernel32_a-0xb907>
  4056f3:	mov    esi,r10d
  4056f6:	xor    r12d,r12d
  4056f9:	mov    edx,DWORD PTR [rsp+0x60]
  4056fd:	mov    eax,edx
  4056ff:	sub    eax,r13d
  405702:	cmp    edx,r11d
  405705:	cmovl  ebx,eax
  405708:	mov    eax,ebp
  40570a:	sub    eax,r12d
  40570d:	cmp    ebp,r10d
  405710:	cmovl  esi,eax
  405713:	mov    rax,QWORD PTR [r14+r9*8]
  405717:	mov    rcx,QWORD PTR [rax+0x10]
  40571b:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  405720:	cmp    DWORD PTR [rsp+0x80],0x0
  405728:	jle    4057f9 <_head_lib64_libkernel32_a-0xb807>
  40572e:	mov    rax,QWORD PTR [rdi]
  405731:	cmp    BYTE PTR [rax+0x4c],0xff
  405735:	je     405824 <_head_lib64_libkernel32_a-0xb7dc>
  40573b:	mov    ecx,DWORD PTR [rsp+0xe4]
  405742:	mov    edx,0x1
  405747:	call   4085c0 <_head_lib64_libkernel32_a-0x8a40>
  40574c:	mov    r8d,eax
  40574f:	mov    ecx,DWORD PTR [rsp+0xe4]
  405756:	mov    edx,r8d
  405759:	mov    DWORD PTR [rsp+0x60],r8d
  40575e:	call   4085c8 <_head_lib64_libkernel32_a-0x8a38>
  405763:	mov    r8d,DWORD PTR [rsp+0x60]
  405768:	mov    ecx,r8d
  40576b:	call   408698 <_head_lib64_libkernel32_a-0x8968>
  405770:	mov    DWORD PTR [rsp+0x38],0x0
  405778:	xor    r9d,r9d
  40577b:	xor    r8d,r8d
  40577e:	mov    DWORD PTR [rsp+0x30],0x1
  405786:	mov    edx,DWORD PTR [rax+0x8]
  405789:	mov    rbp,QWORD PTR [rsp+0xa8]
  405791:	mov    QWORD PTR [rsp+0x60],rax
  405796:	mov    DWORD PTR [rsp+0x28],edx
  40579a:	mov    edx,DWORD PTR [rax+0x4]
  40579d:	mov    rcx,rbp
  4057a0:	mov    DWORD PTR [rsp+0x20],edx
  4057a4:	mov    rdx,rax
  4057a7:	call   408578 <_head_lib64_libkernel32_a-0x8a88>
  4057ac:	mov    rdx,QWORD PTR [rsp+0x70]
  4057b1:	mov    r9d,r12d
  4057b4:	mov    r8d,r13d
  4057b7:	mov    rcx,rbp
  4057ba:	mov    DWORD PTR [rsp+0x28],esi
  4057be:	mov    DWORD PTR [rsp+0x20],ebx
  4057c2:	call   408570 <_head_lib64_libkernel32_a-0x8a90>
  4057c7:	mov    rax,QWORD PTR [rsp+0x60]
  4057cc:	mov    rcx,rax
  4057cf:	call   4086a0 <_head_lib64_libkernel32_a-0x8960>
  4057d4:	mov    rax,QWORD PTR [rsp+0x60]
  4057d9:	mov    rcx,rax
  4057dc:	call   4086b0 <_head_lib64_libkernel32_a-0x8950>
  4057e1:	mov    rax,QWORD PTR [rdi]
  4057e4:	xor    edx,edx
  4057e6:	mov    ecx,DWORD PTR [rsp+0xe4]
  4057ed:	cmp    DWORD PTR [rax+0x54],0x0
  4057f1:	sete   dl
  4057f4:	call   4085a8 <_head_lib64_libkernel32_a-0x8a58>
  4057f9:	cmp    QWORD PTR [rsp+0x70],0x0
  4057ff:	je     405526 <_head_lib64_libkernel32_a-0xbada>
  405805:	mov    rcx,QWORD PTR [rsp+0x70]
  40580a:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  40580f:	mov    rax,QWORD PTR [rdi]
  405812:	jmp    405529 <_head_lib64_libkernel32_a-0xbad7>
  405817:	lea    r11d,[rbx+r13*1]
  40581b:	lea    r10d,[rsi+r12*1]
  40581f:	jmp    4055eb <_head_lib64_libkernel32_a-0xba15>
  405824:	mov    ecx,DWORD PTR [rsp+0xe4]
  40582b:	xor    edx,edx
  40582d:	call   4085c0 <_head_lib64_libkernel32_a-0x8a40>
  405832:	mov    r8d,eax
  405835:	jmp    40574f <_head_lib64_libkernel32_a-0xb8b1>
  40583a:	mov    ecx,DWORD PTR [rax+0x40]
  40583d:	mov    edx,DWORD PTR [rax+0x3c]
  405840:	mov    r13d,ecx
  405843:	mov    r12d,edx
  405846:	sub    r13d,ebx
  405849:	mov    ebx,DWORD PTR [rax+0x48]
  40584c:	sub    r12d,esi
  40584f:	mov    esi,DWORD PTR [rax+0x44]
  405852:	sub    ebx,ecx
  405854:	sub    esi,edx
  405856:	jmp    40558f <_head_lib64_libkernel32_a-0xba71>
  40585b:	movzx  r9d,WORD PTR [rsp+0x78]
  405861:	mov    rcx,QWORD PTR [rsp+0x70]
  405866:	mov    rax,QWORD PTR [r14+r9*8]
  40586a:	mov    QWORD PTR [rsp+0x60],r9
  40586f:	mov    rdx,QWORD PTR [rax+0x10]
  405873:	call   409e30 <_head_lib64_libkernel32_a-0x71d0>
  405878:	mov    r9,QWORD PTR [rsp+0x60]
  40587d:	jmp    405713 <_head_lib64_libkernel32_a-0xb8ed>
  405882:	mov    rcx,QWORD PTR [rax+0x30]
  405886:	xor    esi,esi
  405888:	xor    ebx,ebx
  40588a:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  40588f:	mov    r8d,DWORD PTR [rsp+0xe0]
  405897:	xor    r9d,r9d
  40589a:	mov    edx,DWORD PTR [rsp+0xe4]
  4058a1:	mov    ecx,DWORD PTR [rsp+0x40]
  4058a5:	call   408648 <_head_lib64_libkernel32_a-0x89b8>
  4058aa:	mov    rdx,QWORD PTR [rsp+0x58]
  4058af:	mov    r8d,0x1
  4058b5:	mov    rcx,QWORD PTR [rsp+0x68]
  4058ba:	call   408858 <_head_lib64_libkernel32_a-0x87a8>
  4058bf:	jmp    4054c8 <_head_lib64_libkernel32_a-0xbb38>
  4058c4:	cmp    DWORD PTR [rsp+0x80],0x0
  4058cc:	je     40599a <_head_lib64_libkernel32_a-0xb666>
  4058d2:	mov    edx,DWORD PTR [rsp+0x174]
  4058d9:	or     ecx,0xffffffff
  4058dc:	cmp    edx,0x2
  4058df:	ja     4058eb <_head_lib64_libkernel32_a-0xb715>
  4058e1:	lea    rcx,[rip+0x7008]        # 40c8f0 <_head_lib64_libkernel32_a-0x4710>
  4058e8:	mov    ecx,DWORD PTR [rcx+rdx*4]
  4058eb:	mov    ebx,DWORD PTR [rsp+0x40]
  4058ef:	mov    r9d,ebp
  4058f2:	mov    rdx,QWORD PTR [rax+0x30]
  4058f6:	mov    DWORD PTR [rsp+0x20],ecx
  4058fa:	mov    r8d,DWORD PTR [rsp+0x60]
  4058ff:	mov    DWORD PTR [rsp+0x30],0x0
  405907:	mov    QWORD PTR [rsp+0x28],0x0
  405910:	mov    ecx,ebx
  405912:	call   4085b0 <_head_lib64_libkernel32_a-0x8a50>
  405917:	mov    DWORD PTR [rsp+0xe4],eax
  40591e:	mov    rax,QWORD PTR [rdi]
  405921:	mov    rcx,QWORD PTR [rax+0x30]
  405925:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  40592a:	mov    r8d,DWORD PTR [rsp+0xe0]
  405932:	xor    r9d,r9d
  405935:	mov    ecx,ebx
  405937:	mov    edx,DWORD PTR [rsp+0xe4]
  40593e:	call   408648 <_head_lib64_libkernel32_a-0x89b8>
  405943:	mov    ecx,DWORD PTR [rsp+0xe4]
  40594a:	call   408698 <_head_lib64_libkernel32_a-0x8968>
  40594f:	mov    edx,0x3
  405954:	mov    ecx,DWORD PTR [rax]
  405956:	mov    rbx,rax
  405959:	call   4086a8 <_head_lib64_libkernel32_a-0x8958>
  40595e:	mov    rax,QWORD PTR [rdi]
  405961:	mov    ecx,DWORD PTR [rbx]
  405963:	mov    edx,DWORD PTR [rax+0x70]
  405966:	call   4085d0 <_head_lib64_libkernel32_a-0x8a30>
  40596b:	mov    rax,QWORD PTR [rdi]
  40596e:	mov    edx,DWORD PTR [rax+0x80]
  405974:	test   edx,edx
  405976:	je     405982 <_head_lib64_libkernel32_a-0xb67e>
  405978:	mov    ecx,DWORD PTR [rbx]
  40597a:	call   4085d8 <_head_lib64_libkernel32_a-0x8a28>
  40597f:	mov    rax,QWORD PTR [rdi]
  405982:	cmp    DWORD PTR [rax+0x7c],0x0
  405986:	je     4054b4 <_head_lib64_libkernel32_a-0xbb4c>
  40598c:	mov    ecx,DWORD PTR [rbx]
  40598e:	xor    edx,edx
  405990:	call   4085d0 <_head_lib64_libkernel32_a-0x8a30>
  405995:	jmp    4054b4 <_head_lib64_libkernel32_a-0xbb4c>
  40599a:	mov    ebx,DWORD PTR [rax+0x8]
  40599d:	mov    esi,DWORD PTR [rax+0x4]
  4059a0:	mov    edx,DWORD PTR [rax+0x10]
  4059a3:	mov    eax,DWORD PTR [rax+0xc]
  4059a6:	sub    edx,ebx
  4059a8:	sub    eax,esi
  4059aa:	mov    DWORD PTR [rsp+0x60],edx
  4059ae:	mov    ebp,eax
  4059b0:	mov    eax,DWORD PTR [rsp+0x174]
  4059b7:	cmp    eax,0x1
  4059ba:	je     405bee <_head_lib64_libkernel32_a-0xb412>
  4059c0:	jb     4059d6 <_head_lib64_libkernel32_a-0xb62a>
  4059c2:	cmp    eax,0x2
  4059c5:	jne    405bfe <_head_lib64_libkernel32_a-0xb402>
  4059cb:	cmp    r12d,0x1
  4059cf:	sbb    r12d,r12d
  4059d2:	add    r12d,0x5
  4059d6:	mov    r13d,DWORD PTR [rsp+0x60]
  4059db:	movzx  eax,r10w
  4059df:	mov    DWORD PTR [rsp+0xc0],r10d
  4059e7:	mov    ecx,eax
  4059e9:	mov    DWORD PTR [rsp+0x98],eax
  4059f0:	imul   r13d,ebp
  4059f4:	imul   ecx,r13d
  4059f8:	movsxd rcx,ecx
  4059fb:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  405a00:	xor    r8d,r8d
  405a03:	mov    r10d,DWORD PTR [rsp+0xc0]
  405a0b:	cmp    DWORD PTR [rsp+0x98],0x0
  405a13:	mov    QWORD PTR [rsp+0x80],rax
  405a1b:	movzx  r10d,r10w
  405a1f:	je     405a94 <_head_lib64_libkernel32_a-0xb56c>
  405a21:	mov    rax,QWORD PTR [rsp+0xa0]
  405a29:	test   r13d,r13d
  405a2c:	movzx  eax,WORD PTR [rax+r8*2]
  405a31:	mov    r9,QWORD PTR [r14+rax*8]
  405a35:	jle    405a5b <_head_lib64_libkernel32_a-0xb5a5>
  405a37:	mov    rax,QWORD PTR [rsp+0x80]
  405a3f:	lea    rdx,[rax+r8*1]
  405a43:	xor    eax,eax
  405a45:	mov    rcx,QWORD PTR [r9+0x10]
  405a49:	movzx  ecx,BYTE PTR [rcx+rax*1]
  405a4d:	add    rax,0x1
  405a51:	mov    BYTE PTR [rdx],cl
  405a53:	add    rdx,r10
  405a56:	cmp    r13d,eax
  405a59:	jg     405a45 <_head_lib64_libkernel32_a-0xb5bb>
  405a5b:	mov    rcx,QWORD PTR [r9+0x10]
  405a5f:	mov    QWORD PTR [rsp+0xc0],r8
  405a67:	mov    QWORD PTR [rsp+0xc8],r10
  405a6f:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  405a74:	mov    r8,QWORD PTR [rsp+0xc0]
  405a7c:	add    r8,0x1
  405a80:	cmp    DWORD PTR [rsp+0x98],r8d
  405a88:	jle    405a94 <_head_lib64_libkernel32_a-0xb56c>
  405a8a:	mov    r10,QWORD PTR [rsp+0xc8]
  405a92:	jmp    405a21 <_head_lib64_libkernel32_a-0xb5df>
  405a94:	mov    rax,QWORD PTR [rdi]
  405a97:	lea    rcx,[rax+0x24]
  405a9b:	call   402510 <_head_lib64_libkernel32_a-0xeaf0>
  405aa0:	mov    rdx,QWORD PTR [rdi]
  405aa3:	pxor   xmm0,xmm0
  405aa7:	mov    r9d,ebp
  405aaa:	mov    r8d,0xff
  405ab0:	mov    r13d,DWORD PTR [rsp+0x40]
  405ab5:	mov    rcx,QWORD PTR [rdx+0x30]
  405ab9:	mov    DWORD PTR [rsp+0x30],eax
  405abd:	movzx  eax,BYTE PTR [rdx+0x28]
  405ac1:	mov    DWORD PTR [rsp+0x20],r12d
  405ac6:	imul   eax,eax,0x64
  405ac9:	cdq    
  405aca:	idiv   r8d
  405acd:	mov    r8d,DWORD PTR [rsp+0x60]
  405ad2:	mov    rdx,rcx
  405ad5:	mov    ecx,r13d
  405ad8:	cvtsi2sd xmm0,eax
  405adc:	movsd  QWORD PTR [rsp+0x28],xmm0
  405ae2:	call   4085b0 <_head_lib64_libkernel32_a-0x8a50>
  405ae7:	mov    DWORD PTR [rsp+0xe4],eax
  405aee:	mov    rax,QWORD PTR [rdi]
  405af1:	mov    rcx,QWORD PTR [rax+0x30]
  405af5:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  405afa:	mov    r8d,DWORD PTR [rsp+0xe0]
  405b02:	xor    r9d,r9d
  405b05:	mov    ecx,r13d
  405b08:	mov    edx,DWORD PTR [rsp+0xe4]
  405b0f:	call   408648 <_head_lib64_libkernel32_a-0x89b8>
  405b14:	mov    ecx,DWORD PTR [rsp+0xe4]
  405b1b:	mov    r8d,esi
  405b1e:	mov    edx,ebx
  405b20:	call   408590 <_head_lib64_libkernel32_a-0x8a70>
  405b25:	mov    rax,QWORD PTR [rdi]
  405b28:	mov    ecx,DWORD PTR [rsp+0xe4]
  405b2f:	mov    edx,DWORD PTR [rax+0x6c]
  405b32:	call   4085a0 <_head_lib64_libkernel32_a-0x8a60>
  405b37:	mov    ecx,DWORD PTR [rsp+0xe4]
  405b3e:	call   408698 <_head_lib64_libkernel32_a-0x8968>
  405b43:	mov    DWORD PTR [rsp+0x38],0x0
  405b4b:	xor    r9d,r9d
  405b4e:	xor    r8d,r8d
  405b51:	mov    r12,rax
  405b54:	mov    DWORD PTR [rsp+0x30],0x1
  405b5c:	mov    eax,DWORD PTR [rax+0x8]
  405b5f:	mov    r13,QWORD PTR [rsp+0xa8]
  405b67:	mov    rdx,r12
  405b6a:	mov    DWORD PTR [rsp+0x28],eax
  405b6e:	mov    eax,DWORD PTR [r12+0x4]
  405b73:	mov    rcx,r13
  405b76:	mov    DWORD PTR [rsp+0x20],eax
  405b7a:	call   408578 <_head_lib64_libkernel32_a-0x8a88>
  405b7f:	mov    eax,DWORD PTR [r12+0x8]
  405b84:	xor    r9d,r9d
  405b87:	xor    r8d,r8d
  405b8a:	mov    rdx,QWORD PTR [rsp+0x80]
  405b92:	mov    rcx,r13
  405b95:	mov    DWORD PTR [rsp+0x28],eax
  405b99:	mov    eax,DWORD PTR [r12+0x4]
  405b9e:	mov    DWORD PTR [rsp+0x20],eax
  405ba2:	call   408570 <_head_lib64_libkernel32_a-0x8a90>
  405ba7:	mov    rax,QWORD PTR [rdi]
  405baa:	mov    ecx,DWORD PTR [r12]
  405bae:	mov    edx,DWORD PTR [rax+0x70]
  405bb1:	call   4085d0 <_head_lib64_libkernel32_a-0x8a30>
  405bb6:	mov    rax,QWORD PTR [rdi]
  405bb9:	mov    edx,DWORD PTR [rax+0x80]
  405bbf:	test   edx,edx
  405bc1:	je     405bcc <_head_lib64_libkernel32_a-0xb434>
  405bc3:	mov    ecx,DWORD PTR [r12]
  405bc7:	call   4085d8 <_head_lib64_libkernel32_a-0x8a28>
  405bcc:	mov    rcx,r12
  405bcf:	call   4086a0 <_head_lib64_libkernel32_a-0x8960>
  405bd4:	mov    rcx,r12
  405bd7:	call   4086b0 <_head_lib64_libkernel32_a-0x8950>
  405bdc:	mov    rcx,QWORD PTR [rsp+0x80]
  405be4:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  405be9:	jmp    4054c8 <_head_lib64_libkernel32_a-0xbb38>
  405bee:	cmp    r12d,0x1
  405bf2:	sbb    r12d,r12d
  405bf5:	add    r12d,0x3
  405bf9:	jmp    4059d6 <_head_lib64_libkernel32_a-0xb62a>
  405bfe:	or     r12d,0xffffffff
  405c02:	jmp    4059d6 <_head_lib64_libkernel32_a-0xb62a>
  405c07:	lea    rcx,[rip+0x6bd2]        # 40c7e0 <_head_lib64_libkernel32_a-0x4820>
  405c0e:	mov    DWORD PTR [rsp+0x60],r8d
  405c13:	mov    DWORD PTR [rsp+0x50],r9d
  405c18:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  405c1d:	mov    rsi,rax
  405c20:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  405c25:	mov    r8d,DWORD PTR [rsp+0x60]
  405c2a:	mov    r9d,DWORD PTR [rsp+0x50]
  405c2f:	mov    DWORD PTR [rsp+0x28],r8d
  405c34:	mov    DWORD PTR [rsp+0x20],r9d
  405c39:	jmp    4042f6 <_head_lib64_libkernel32_a-0xcd0a>
  405c3e:	mov    ecx,DWORD PTR [rsp+0x40]
  405c42:	call   4085b8 <_head_lib64_libkernel32_a-0x8a48>
  405c47:	mov    DWORD PTR [rsp+0xe4],eax
  405c4e:	mov    rax,QWORD PTR [rdi]
  405c51:	jmp    404eb4 <_head_lib64_libkernel32_a-0xc14c>
  405c56:	call   QWORD PTR [rip+0xbb54]        # 4117b0 <__imp__errno>
  405c5c:	mov    rcx,r15
  405c5f:	mov    ebx,DWORD PTR [rax]
  405c61:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  405c66:	lea    r8,[rsp+0xe8]
  405c6e:	mov    ecx,eax
  405c70:	mov    edx,ebx
  405c72:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  405c77:	jmp    404232 <_head_lib64_libkernel32_a-0xcdce>
  405c7c:	mov    ebp,DWORD PTR [rsp+0x40]
  405c80:	jmp    404232 <_head_lib64_libkernel32_a-0xcdce>
  405c85:	mov    DWORD PTR [rdx+0x48],r8d
  405c89:	mov    r10d,r8d
  405c8c:	mov    DWORD PTR [rdx+0x40],r9d
  405c90:	jmp    405197 <_head_lib64_libkernel32_a-0xbe69>
  405c95:	mov    DWORD PTR [rdx+0x3c],r11d
  405c99:	mov    DWORD PTR [rdx+0x44],r10d
  405c9d:	jmp    405181 <_head_lib64_libkernel32_a-0xbe7f>
  405ca2:	mov    WORD PTR [rsp+0x78],0xffff
  405ca9:	xor    r12d,r12d
  405cac:	xor    r10d,r10d
  405caf:	mov    DWORD PTR [rsp+0x90],0x0
  405cba:	jmp    405409 <_head_lib64_libkernel32_a-0xbbf7>
  405cbf:	mov    DWORD PTR [rsp+0xe0],0xffffffff
  405cca:	jmp    4050e7 <_head_lib64_libkernel32_a-0xbf19>
  405ccf:	nop
  405cd0:	push   r15
  405cd2:	push   r14
  405cd4:	push   r13
  405cd6:	push   r12
  405cd8:	push   rbp
  405cd9:	push   rdi
  405cda:	push   rsi
  405cdb:	push   rbx
  405cdc:	sub    rsp,0x248
  405ce3:	mov    r13,rdx
  405ce6:	mov    rdi,rcx
  405ce9:	mov    r12,r8
  405cec:	mov    QWORD PTR [rsp+0x58],0x0
  405cf5:	lea    rdx,[rsp+0x60]
  405cfa:	mov    rbp,r9
  405cfd:	call   4087c0 <_head_lib64_libkernel32_a-0x8840>
  405d02:	cmp    eax,0xffffffff
  405d05:	je     40612c <_head_lib64_libkernel32_a-0xaed4>
  405d0b:	lea    rdx,[rip+0x6d0e]        # 40ca20 <_head_lib64_libkernel32_a-0x45e0>
  405d12:	mov    rcx,rdi
  405d15:	call   408818 <_head_lib64_libkernel32_a-0x87e8>
  405d1a:	test   rax,rax
  405d1d:	mov    rbx,rax
  405d20:	je     4061b3 <_head_lib64_libkernel32_a-0xae4d>
  405d26:	lea    r15,[rsp+0x50]
  405d2b:	mov    rcx,rdi
  405d2e:	call   408718 <_head_lib64_libkernel32_a-0x88e8>
  405d33:	lea    rcx,[rip+0x6d12]        # 40ca4c <_head_lib64_libkernel32_a-0x45b4>
  405d3a:	mov    rsi,rax
  405d3d:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  405d42:	mov    rdx,rsi
  405d45:	mov    rcx,rax
  405d48:	call   408568 <_head_lib64_libkernel32_a-0x8a98>
  405d4d:	mov    r9,rbx
  405d50:	mov    edx,0x4
  405d55:	mov    rcx,r15
  405d58:	mov    r8d,0x1
  405d5e:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405d63:	test   rax,rax
  405d66:	je     406140 <_head_lib64_libkernel32_a-0xaec0>
  405d6c:	lea    rcx,[rsp+0x4e]
  405d71:	mov    r9,rbx
  405d74:	mov    r8d,0x1
  405d7a:	mov    edx,0x2
  405d7f:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405d84:	test   rax,rax
  405d87:	je     406140 <_head_lib64_libkernel32_a-0xaec0>
  405d8d:	lea    r14,[rsp+0x130]
  405d95:	mov    r9,rbx
  405d98:	mov    r8d,0x1
  405d9e:	mov    edx,0x6
  405da3:	mov    rcx,r14
  405da6:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405dab:	test   rax,rax
  405dae:	je     406140 <_head_lib64_libkernel32_a-0xaec0>
  405db4:	lea    rsi,[rsp+0xa0]
  405dbc:	mov    r9,rbx
  405dbf:	mov    r8d,0x1
  405dc5:	mov    edx,0x2
  405dca:	mov    rcx,rsi
  405dcd:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405dd2:	test   rax,rax
  405dd5:	je     406140 <_head_lib64_libkernel32_a-0xaec0>
  405ddb:	lea    rcx,[rsi+0x8]
  405ddf:	mov    r9,rbx
  405de2:	mov    r8d,0x1
  405de8:	mov    edx,0x4
  405ded:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405df2:	test   rax,rax
  405df5:	je     406140 <_head_lib64_libkernel32_a-0xaec0>
  405dfb:	lea    rcx,[rsi+0xc]
  405dff:	mov    r9,rbx
  405e02:	mov    r8d,0x1
  405e08:	mov    edx,0x4
  405e0d:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405e12:	test   rax,rax
  405e15:	je     406140 <_head_lib64_libkernel32_a-0xaec0>
  405e1b:	lea    rcx,[rsi+0x10]
  405e1f:	mov    r9,rbx
  405e22:	mov    r8d,0x1
  405e28:	mov    edx,0x2
  405e2d:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405e32:	test   rax,rax
  405e35:	je     406140 <_head_lib64_libkernel32_a-0xaec0>
  405e3b:	lea    rcx,[rsi+0x12]
  405e3f:	mov    r9,rbx
  405e42:	mov    r8d,0x1
  405e48:	mov    edx,0x2
  405e4d:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405e52:	test   rax,rax
  405e55:	je     406140 <_head_lib64_libkernel32_a-0xaec0>
  405e5b:	movzx  r9d,WORD PTR [rsp+0x4e]
  405e61:	lea    rdx,[rip+0x6bff]        # 40ca67 <_head_lib64_libkernel32_a-0x4599>
  405e68:	mov    rcx,r15
  405e6b:	mov    r8d,0x4
  405e71:	movzx  r11d,WORD PTR [rsp+0xa0]
  405e7a:	mov    esi,DWORD PTR [rsp+0xa8]
  405e81:	mov    r10d,DWORD PTR [rsp+0xac]
  405e89:	rol    WORD PTR [rsp+0xb0],0x8
  405e92:	rol    r9w,0x8
  405e97:	rol    r11w,0x8
  405e9c:	mov    WORD PTR [rsp+0x4e],r9w
  405ea2:	rol    WORD PTR [rsp+0xb2],0x8
  405eab:	bswap  esi
  405ead:	bswap  r10d
  405eb0:	mov    DWORD PTR [rsp+0x34],r9d
  405eb5:	mov    WORD PTR [rsp+0xa0],r11w
  405ebe:	mov    DWORD PTR [rsp+0x38],r11d
  405ec3:	mov    DWORD PTR [rsp+0xa8],esi
  405eca:	mov    DWORD PTR [rsp+0xac],r10d
  405ed2:	mov    DWORD PTR [rsp+0x3c],r10d
  405ed7:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  405edc:	mov    r9d,DWORD PTR [rsp+0x34]
  405ee1:	test   eax,eax
  405ee3:	setne  dl
  405ee6:	cmp    r9w,0x1
  405eeb:	setne  al
  405eee:	or     dl,al
  405ef0:	jne    40615e <_head_lib64_libkernel32_a-0xaea2>
  405ef6:	mov    r11d,DWORD PTR [rsp+0x38]
  405efb:	cmp    r11w,0x38
  405f00:	ja     40615e <_head_lib64_libkernel32_a-0xaea2>
  405f06:	sub    esi,0x1
  405f09:	cmp    esi,0x3ffff
  405f0f:	ja     40615e <_head_lib64_libkernel32_a-0xaea2>
  405f15:	mov    r10d,DWORD PTR [rsp+0x3c]
  405f1a:	sub    r10d,0x1
  405f1e:	cmp    r10d,0x3ffff
  405f25:	ja     40615e <_head_lib64_libkernel32_a-0xaea2>
  405f2b:	movsd  xmm0,QWORD PTR [rip+0x6b55]        # 40ca88 <_head_lib64_libkernel32_a-0x4578>
  405f33:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  405f38:	mov    r9,rbx
  405f3b:	mov    edx,0x4
  405f40:	mov    rcx,r14
  405f43:	mov    r8d,0x1
  405f49:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405f4e:	test   rax,rax
  405f51:	je     406140 <_head_lib64_libkernel32_a-0xaec0>
  405f57:	mov    eax,DWORD PTR [rsp+0x130]
  405f5e:	mov    rcx,rbx
  405f61:	bswap  eax
  405f63:	mov    DWORD PTR [rsp+0x130],eax
  405f6a:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  405f6f:	add    eax,DWORD PTR [rsp+0x130]
  405f76:	xor    r8d,r8d
  405f79:	mov    rcx,rbx
  405f7c:	mov    edx,eax
  405f7e:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  405f83:	test   eax,eax
  405f85:	js     406140 <_head_lib64_libkernel32_a-0xaec0>
  405f8b:	movsd  xmm0,QWORD PTR [rip+0x6afd]        # 40ca90 <_head_lib64_libkernel32_a-0x4570>
  405f93:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  405f98:	mov    r9,rbx
  405f9b:	mov    edx,0x4
  405fa0:	mov    rcx,r14
  405fa3:	mov    r8d,0x1
  405fa9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  405fae:	test   rax,rax
  405fb1:	je     406140 <_head_lib64_libkernel32_a-0xaec0>
  405fb7:	mov    eax,DWORD PTR [rsp+0x130]
  405fbe:	mov    rcx,rbx
  405fc1:	bswap  eax
  405fc3:	mov    DWORD PTR [rsp+0xd4],eax
  405fca:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  405fcf:	xor    r8d,r8d
  405fd2:	mov    rcx,rbx
  405fd5:	mov    DWORD PTR [rsp+0xd0],eax
  405fdc:	add    eax,DWORD PTR [rsp+0xd4]
  405fe3:	mov    edx,eax
  405fe5:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  405fea:	test   eax,eax
  405fec:	js     406140 <_head_lib64_libkernel32_a-0xaec0>
  405ff2:	movsd  xmm0,QWORD PTR [rip+0x6a9e]        # 40ca98 <_head_lib64_libkernel32_a-0x4568>
  405ffa:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  405fff:	mov    edx,DWORD PTR [rsp+0xa8]
  406006:	xor    r8d,r8d
  406009:	mov    DWORD PTR [rsp+0xb4],0x0
  406014:	mov    ecx,DWORD PTR [rsp+0xac]
  40601b:	call   408638 <_head_lib64_libkernel32_a-0x89c8>
  406020:	mov    rdx,rdi
  406023:	mov    esi,eax
  406025:	mov    ecx,eax
  406027:	call   408618 <_head_lib64_libkernel32_a-0x89e8>
  40602c:	mov    ecx,esi
  40602e:	call   408600 <_head_lib64_libkernel32_a-0x8a00>
  406033:	test   esi,esi
  406035:	js     4060d0 <_head_lib64_libkernel32_a-0xaf30>
  40603b:	mov    edx,DWORD PTR [rsp+0xd0]
  406042:	xor    r8d,r8d
  406045:	mov    rcx,rbx
  406048:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  40604d:	test   eax,eax
  40604f:	js     406214 <_head_lib64_libkernel32_a-0xadec>
  406055:	lea    rdi,[rsp+0x58]
  40605a:	jmp    4060ac <_head_lib64_libkernel32_a-0xaf54>
  40605c:	nop    DWORD PTR [rax+0x0]
  406060:	mov    r8,rdi
  406063:	mov    rdx,rbx
  406066:	mov    rcx,r14
  406069:	call   406cc0 <_head_lib64_libkernel32_a-0xa340>
  40606e:	test   eax,eax
  406070:	js     4060d0 <_head_lib64_libkernel32_a-0xaf30>
  406072:	mov    edx,DWORD PTR [rsp+0x23c]
  406079:	mov    eax,DWORD PTR [rsp+0xd4]
  406080:	add    edx,DWORD PTR [rsp+0x238]
  406087:	add    eax,DWORD PTR [rsp+0xd0]
  40608e:	cmp    edx,eax
  406090:	ja     4060d0 <_head_lib64_libkernel32_a-0xaf30>
  406092:	mov    r9,rdi
  406095:	mov    r8,rbx
  406098:	mov    edx,esi
  40609a:	mov    rcx,r14
  40609d:	call   407e50 <_head_lib64_libkernel32_a-0x91b0>
  4060a2:	test   eax,eax
  4060a4:	js     4060d0 <_head_lib64_libkernel32_a-0xaf30>
  4060a6:	jne    406173 <_head_lib64_libkernel32_a-0xae8d>
  4060ac:	mov    rcx,rbx
  4060af:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  4060b4:	mov    edx,DWORD PTR [rsp+0xd4]
  4060bb:	add    edx,DWORD PTR [rsp+0xd0]
  4060c2:	cmp    eax,edx
  4060c4:	jb     406060 <_head_lib64_libkernel32_a-0xafa0>
  4060c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060d0:	mov    rax,QWORD PTR [rsp+0x58]
  4060d5:	test   rax,rax
  4060d8:	je     406114 <_head_lib64_libkernel32_a-0xaeec>
  4060da:	mov    r12,QWORD PTR [rax+0x8]
  4060de:	lea    rcx,[rip+0x6987]        # 40ca6c <_head_lib64_libkernel32_a-0x4594>
  4060e5:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  4060ea:	mov    rdi,rax
  4060ed:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4060f2:	mov    rcx,rbp
  4060f5:	mov    r9,rdi
  4060f8:	mov    r8d,0x18
  4060fe:	mov    QWORD PTR [rsp+0x20],r12
  406103:	mov    edx,eax
  406105:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  40610a:	mov    rcx,QWORD PTR [rsp+0x58]
  40610f:	call   408830 <_head_lib64_libkernel32_a-0x87d0>
  406114:	test   esi,esi
  406116:	jle    40611f <_head_lib64_libkernel32_a-0xaee1>
  406118:	mov    ecx,esi
  40611a:	call   408670 <_head_lib64_libkernel32_a-0x8990>
  40611f:	mov    rcx,rbx
  406122:	call   409e80 <_head_lib64_libkernel32_a-0x7180>
  406127:	mov    eax,0xffffffff
  40612c:	add    rsp,0x248
  406133:	pop    rbx
  406134:	pop    rsi
  406135:	pop    rdi
  406136:	pop    rbp
  406137:	pop    r12
  406139:	pop    r13
  40613b:	pop    r14
  40613d:	pop    r15
  40613f:	ret    
  406140:	call   QWORD PTR [rip+0xb66a]        # 4117b0 <__imp__errno>
  406146:	mov    rcx,rbx
  406149:	mov    esi,DWORD PTR [rax]
  40614b:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  406150:	lea    r8,[rsp+0x58]
  406155:	mov    ecx,eax
  406157:	mov    edx,esi
  406159:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  40615e:	mov    rax,QWORD PTR [rsp+0x58]
  406163:	mov    esi,0xffffffff
  406168:	test   rax,rax
  40616b:	jne    4060da <_head_lib64_libkernel32_a-0xaf26>
  406171:	jmp    40611f <_head_lib64_libkernel32_a-0xaee1>
  406173:	movsd  xmm0,QWORD PTR [rip+0x6925]        # 40caa0 <_head_lib64_libkernel32_a-0x4560>
  40617b:	call   408560 <_head_lib64_libkernel32_a-0x8aa0>
  406180:	mov    ecx,esi
  406182:	call   408678 <_head_lib64_libkernel32_a-0x8988>
  406187:	mov    ecx,esi
  406189:	call   4085f8 <_head_lib64_libkernel32_a-0x8a08>
  40618e:	mov    rcx,rbx
  406191:	call   409e80 <_head_lib64_libkernel32_a-0x7180>
  406196:	mov    eax,DWORD PTR [rsp+0xac]
  40619d:	mov    DWORD PTR [r13+0x0],eax
  4061a1:	mov    eax,DWORD PTR [rsp+0xa8]
  4061a8:	mov    DWORD PTR [r12],eax
  4061ac:	mov    eax,esi
  4061ae:	jmp    40612c <_head_lib64_libkernel32_a-0xaed4>
  4061b3:	mov    rbx,QWORD PTR [rip+0xb5f6]        # 4117b0 <__imp__errno>
  4061ba:	call   rbx
  4061bc:	mov    ecx,DWORD PTR [rax]
  4061be:	call   4087a8 <_head_lib64_libkernel32_a-0x8858>
  4061c3:	mov    rcx,rdi
  4061c6:	mov    r12,rax
  4061c9:	call   408718 <_head_lib64_libkernel32_a-0x88e8>
  4061ce:	lea    rcx,[rip+0x6853]        # 40ca28 <_head_lib64_libkernel32_a-0x45d8>
  4061d5:	mov    rdi,rax
  4061d8:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  4061dd:	mov    rsi,rax
  4061e0:	call   rbx
  4061e2:	mov    ecx,DWORD PTR [rax]
  4061e4:	call   408828 <_head_lib64_libkernel32_a-0x87d8>
  4061e9:	mov    ebx,eax
  4061eb:	call   408820 <_head_lib64_libkernel32_a-0x87e0>
  4061f0:	mov    QWORD PTR [rsp+0x28],r12
  4061f5:	mov    r9,rsi
  4061f8:	mov    r8d,ebx
  4061fb:	mov    edx,eax
  4061fd:	mov    QWORD PTR [rsp+0x20],rdi
  406202:	mov    rcx,rbp
  406205:	call   4087c8 <_head_lib64_libkernel32_a-0x8838>
  40620a:	mov    eax,0xffffffff
  40620f:	jmp    40612c <_head_lib64_libkernel32_a-0xaed4>
  406214:	call   QWORD PTR [rip+0xb596]        # 4117b0 <__imp__errno>
  40621a:	mov    rcx,rbx
  40621d:	mov    edi,DWORD PTR [rax]
  40621f:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  406224:	lea    r8,[rsp+0x58]
  406229:	mov    ecx,eax
  40622b:	mov    edx,edi
  40622d:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  406232:	jmp    4060d0 <_head_lib64_libkernel32_a-0xaf30>
  406237:	nop
  406238:	nop
  406239:	nop
  40623a:	nop
  40623b:	nop
  40623c:	nop
  40623d:	nop
  40623e:	nop
  40623f:	nop
  406240:	push   r12
  406242:	push   rbp
  406243:	push   rdi
  406244:	push   rsi
  406245:	push   rbx
  406246:	sub    rsp,0x20
  40624a:	mov    rbx,rcx
  40624d:	movsxd rcx,DWORD PTR [rcx+0x10c]
  406254:	mov    rdi,r8
  406257:	mov    ebp,edx
  406259:	mov    r12,r9
  40625c:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  406261:	movsxd rdx,DWORD PTR [rbx+0x10c]
  406268:	mov    r9,rdi
  40626b:	mov    r8d,0x1
  406271:	mov    rcx,rax
  406274:	mov    rsi,rax
  406277:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40627c:	test   rax,rax
  40627f:	je     4062e0 <_head_lib64_libkernel32_a-0xad20>
  406281:	movsx  r8d,WORD PTR [rbx+0x4]
  406286:	lea    rcx,[rip+0x6823]        # 40cab0 <_head_lib64_libkernel32_a-0x4550>
  40628d:	mov    rdx,rbx
  406290:	call   4087b0 <_head_lib64_libkernel32_a-0x8850>
  406295:	mov    r8d,DWORD PTR [rbx+0x10c]
  40629c:	mov    r9,rsi
  40629f:	xor    edx,edx
  4062a1:	mov    rcx,rax
  4062a4:	mov    rdi,rax
  4062a7:	call   408700 <_head_lib64_libkernel32_a-0x8900>
  4062ac:	mov    ecx,ebp
  4062ae:	mov    rdx,rax
  4062b1:	mov    rbx,rax
  4062b4:	call   408680 <_head_lib64_libkernel32_a-0x8980>
  4062b9:	mov    rcx,rbx
  4062bc:	call   408708 <_head_lib64_libkernel32_a-0x88f8>
  4062c1:	mov    rcx,rsi
  4062c4:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4062c9:	mov    rcx,rdi
  4062cc:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4062d1:	xor    eax,eax
  4062d3:	add    rsp,0x20
  4062d7:	pop    rbx
  4062d8:	pop    rsi
  4062d9:	pop    rdi
  4062da:	pop    rbp
  4062db:	pop    r12
  4062dd:	ret    
  4062de:	xchg   ax,ax
  4062e0:	call   QWORD PTR [rip+0xb4ca]        # 4117b0 <__imp__errno>
  4062e6:	mov    rcx,rdi
  4062e9:	mov    ebx,DWORD PTR [rax]
  4062eb:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  4062f0:	mov    r8,r12
  4062f3:	mov    ecx,eax
  4062f5:	mov    edx,ebx
  4062f7:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  4062fc:	mov    rcx,rsi
  4062ff:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  406304:	mov    eax,0xffffffff
  406309:	jmp    4062d3 <_head_lib64_libkernel32_a-0xad2d>
  40630b:	nop    DWORD PTR [rax+rax*1+0x0]
  406310:	push   r15
  406312:	push   r14
  406314:	push   r13
  406316:	push   r12
  406318:	push   rbp
  406319:	push   rdi
  40631a:	push   rsi
  40631b:	push   rbx
  40631c:	sub    rsp,0xa8
  406323:	movaps XMMWORD PTR [rsp+0x90],xmm6
  40632b:	mov    rbp,rcx
  40632e:	mov    ecx,DWORD PTR [rcx+0x10c]
  406334:	mov    edi,edx
  406336:	mov    edx,0x4ec4ec4f
  40633b:	mov    rsi,r8
  40633e:	mov    r15,r9
  406341:	mov    eax,ecx
  406343:	sar    ecx,0x1f
  406346:	imul   edx
  406348:	mov    ebx,edx
  40634a:	sar    ebx,0x3
  40634d:	sub    ebx,ecx
  40634f:	test   bx,bx
  406352:	jne    406380 <_head_lib64_libkernel32_a-0xac80>
  406354:	xor    r12d,r12d
  406357:	movaps xmm6,XMMWORD PTR [rsp+0x90]
  40635f:	mov    eax,r12d
  406362:	add    rsp,0xa8
  406369:	pop    rbx
  40636a:	pop    rsi
  40636b:	pop    rdi
  40636c:	pop    rbp
  40636d:	pop    r12
  40636f:	pop    r13
  406371:	pop    r14
  406373:	pop    r15
  406375:	ret    
  406376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406380:	lea    r14,[rsp+0x6a]
  406385:	mov    r9,r8
  406388:	mov    edx,0x2
  40638d:	mov    r8d,0x1
  406393:	mov    rcx,r14
  406396:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40639b:	test   rax,rax
  40639e:	je     406768 <_head_lib64_libkernel32_a-0xa898>
  4063a4:	movzx  eax,WORD PTR [rsp+0x6a]
  4063a9:	mov    r12d,0xffffffff
  4063af:	rol    ax,0x8
  4063b3:	cmp    ax,0x6
  4063b7:	mov    WORD PTR [rsp+0x6a],ax
  4063bc:	jne    406357 <_head_lib64_libkernel32_a-0xaca9>
  4063be:	mov    r8d,0x1
  4063c4:	mov    edx,0x18
  4063c9:	mov    rcx,rsi
  4063cc:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  4063d1:	test   eax,eax
  4063d3:	js     40681a <_head_lib64_libkernel32_a-0xa7e6>
  4063d9:	sub    bx,0x1
  4063dd:	je     406354 <_head_lib64_libkernel32_a-0xacac>
  4063e3:	mov    ecx,edi
  4063e5:	call   4085f0 <_head_lib64_libkernel32_a-0x8a10>
  4063ea:	mov    ecx,edi
  4063ec:	mov    DWORD PTR [rsp+0x48],eax
  4063f0:	call   408658 <_head_lib64_libkernel32_a-0x89a8>
  4063f5:	cmp    WORD PTR [rbp+0x4],0x401
  4063fb:	mov    DWORD PTR [rsp+0x4c],eax
  4063ff:	je     406790 <_head_lib64_libkernel32_a-0xa870>
  406405:	lea    rdx,[rbp+0x6]
  406409:	mov    ecx,edi
  40640b:	call   408538 <_head_lib64_libkernel32_a-0x8ac8>
  406410:	mov    DWORD PTR [rsp+0x58],eax
  406414:	mov    edx,DWORD PTR [rsp+0x58]
  406418:	mov    r9d,0xffffffff
  40641e:	mov    ecx,edi
  406420:	mov    r8d,r9d
  406423:	call   408640 <_head_lib64_libkernel32_a-0x89c0>
  406428:	test   bx,bx
  40642b:	jle    406354 <_head_lib64_libkernel32_a-0xacac>
  406431:	lea    rax,[rsp+0x6e]
  406436:	movsd  xmm6,QWORD PTR [rip+0x67ea]        # 40cc28 <_head_lib64_libkernel32_a-0x43d8>
  40643e:	mov    QWORD PTR [rsp+0x108],r15
  406446:	lea    rbp,[rsp+0x80]
  40644e:	mov    QWORD PTR [rsp+0x50],rax
  406453:	lea    rdi,[rsp+0x70]
  406458:	lea    rax,[rbp+0x4]
  40645c:	mov    QWORD PTR [rsp+0x38],rax
  406461:	lea    rax,[rdi+0x4]
  406465:	mov    QWORD PTR [rsp+0x40],rax
  40646a:	mov    r9,rsi
  40646d:	mov    r8d,0x1
  406473:	mov    edx,0x2
  406478:	mov    rcx,r14
  40647b:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  406480:	test   rax,rax
  406483:	je     406760 <_head_lib64_libkernel32_a-0xa8a0>
  406489:	movzx  eax,WORD PTR [rsp+0x6a]
  40648e:	rol    ax,0x8
  406492:	cmp    ax,0x6
  406496:	mov    WORD PTR [rsp+0x6a],ax
  40649b:	je     4064b2 <_head_lib64_libkernel32_a-0xab4e>
  40649d:	cmp    ax,0x8
  4064a1:	je     406720 <_head_lib64_libkernel32_a-0xa8e0>
  4064a7:	test   ax,ax
  4064aa:	je     4064e0 <_head_lib64_libkernel32_a-0xab20>
  4064ac:	cmp    ax,0x3
  4064b0:	je     4064e0 <_head_lib64_libkernel32_a-0xab20>
  4064b2:	mov    r8d,0x1
  4064b8:	mov    edx,0x18
  4064bd:	mov    rcx,rsi
  4064c0:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  4064c5:	test   eax,eax
  4064c7:	js     406760 <_head_lib64_libkernel32_a-0xa8a0>
  4064cd:	sub    ebx,0x1
  4064d0:	test   bx,bx
  4064d3:	jg     40646a <_head_lib64_libkernel32_a-0xab96>
  4064d5:	jmp    406354 <_head_lib64_libkernel32_a-0xacac>
  4064da:	nop    WORD PTR [rax+rax*1+0x0]
  4064e0:	mov    rcx,QWORD PTR [rsp+0x50]
  4064e5:	mov    r9,rsi
  4064e8:	mov    r8d,0x1
  4064ee:	mov    edx,0x2
  4064f3:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4064f8:	test   rax,rax
  4064fb:	je     406760 <_head_lib64_libkernel32_a-0xa8a0>
  406501:	movzx  eax,WORD PTR [rsp+0x6e]
  406506:	rol    ax,0x8
  40650a:	cmp    ax,bx
  40650d:	mov    WORD PTR [rsp+0x6e],ax
  406512:	jg     406760 <_head_lib64_libkernel32_a-0xa8a0>
  406518:	movzx  ecx,WORD PTR [rsp+0x6a]
  40651d:	movsx  rax,ax
  406521:	mov    WORD PTR [rsp+0x5e],cx
  406526:	lea    rcx,[rax+rax*2]
  40652a:	shl    rcx,0x4
  40652e:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  406533:	mov    r8d,0x1
  406539:	mov    edx,0x16
  40653e:	mov    rcx,rsi
  406541:	mov    r12,rax
  406544:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  406549:	test   eax,eax
  40654b:	js     4067e3 <_head_lib64_libkernel32_a-0xa81d>
  406551:	cmp    WORD PTR [rsp+0x6e],0x0
  406557:	jle    4067de <_head_lib64_libkernel32_a-0xa822>
  40655d:	lea    r15,[rbp+0x8]
  406561:	xor    r13d,r13d
  406564:	jmp    4065a4 <_head_lib64_libkernel32_a-0xaa5c>
  406566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406570:	mov    r8d,0x1
  406576:	mov    edx,0x18
  40657b:	mov    rcx,rsi
  40657e:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  406583:	test   eax,eax
  406585:	js     406760 <_head_lib64_libkernel32_a-0xa8a0>
  40658b:	movzx  eax,WORD PTR [rsp+0x6e]
  406590:	sub    ebx,0x1
  406593:	sub    eax,0x1
  406596:	test   ax,ax
  406599:	mov    WORD PTR [rsp+0x6e],ax
  40659e:	jle    4067b0 <_head_lib64_libkernel32_a-0xa850>
  4065a4:	mov    r9,rsi
  4065a7:	mov    r8d,0x1
  4065ad:	mov    edx,0x2
  4065b2:	mov    rcx,r14
  4065b5:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4065ba:	test   rax,rax
  4065bd:	je     406760 <_head_lib64_libkernel32_a-0xa8a0>
  4065c3:	movzx  eax,WORD PTR [rsp+0x6a]
  4065c8:	rol    ax,0x8
  4065cc:	lea    edx,[rax-0x1]
  4065cf:	mov    WORD PTR [rsp+0x6a],ax
  4065d4:	cmp    dx,0x1
  4065d8:	jbe    4065e3 <_head_lib64_libkernel32_a-0xaa1d>
  4065da:	sub    eax,0x4
  4065dd:	cmp    ax,0x1
  4065e1:	ja     406570 <_head_lib64_libkernel32_a-0xaa90>
  4065e3:	mov    r9,rsi
  4065e6:	mov    r8d,0x1
  4065ec:	mov    edx,0x4
  4065f1:	mov    rcx,rbp
  4065f4:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4065f9:	test   rax,rax
  4065fc:	je     406760 <_head_lib64_libkernel32_a-0xa8a0>
  406602:	mov    r9,rsi
  406605:	mov    r8d,0x1
  40660b:	mov    edx,0x4
  406610:	mov    rcx,rdi
  406613:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  406618:	test   rax,rax
  40661b:	je     406760 <_head_lib64_libkernel32_a-0xa8a0>
  406621:	mov    rcx,QWORD PTR [rsp+0x38]
  406626:	mov    r9,rsi
  406629:	mov    r8d,0x1
  40662f:	mov    edx,0x4
  406634:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  406639:	test   rax,rax
  40663c:	je     406760 <_head_lib64_libkernel32_a-0xa8a0>
  406642:	mov    rcx,QWORD PTR [rsp+0x40]
  406647:	mov    r9,rsi
  40664a:	mov    r8d,0x1
  406650:	mov    edx,0x4
  406655:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40665a:	test   rax,rax
  40665d:	je     406760 <_head_lib64_libkernel32_a-0xa8a0>
  406663:	mov    r9,rsi
  406666:	mov    r8d,0x1
  40666c:	mov    edx,0x4
  406671:	mov    rcx,r15
  406674:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  406679:	test   rax,rax
  40667c:	je     406760 <_head_lib64_libkernel32_a-0xa8a0>
  406682:	lea    rcx,[rdi+0x8]
  406686:	mov    r9,rsi
  406689:	mov    r8d,0x1
  40668f:	mov    edx,0x4
  406694:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  406699:	test   rax,rax
  40669c:	je     406760 <_head_lib64_libkernel32_a-0xa8a0>
  4066a2:	pxor   xmm2,xmm2
  4066a6:	pxor   xmm1,xmm1
  4066aa:	cvtsi2sd xmm2,DWORD PTR [rsp+0x48]
  4066b0:	mov    ecx,r13d
  4066b3:	cvtsi2sd xmm1,DWORD PTR [rsp+0x4c]
  4066b9:	xor    edx,edx
  4066bb:	mov    eax,DWORD PTR [rdi+rdx*1]
  4066be:	pxor   xmm0,xmm0
  4066c2:	movsx  r8,cx
  4066c6:	bswap  eax
  4066c8:	cvtsi2sd xmm0,eax
  4066cc:	mov    DWORD PTR [rdi+rdx*1],eax
  4066cf:	mov    eax,DWORD PTR [rbp+rdx*1+0x0]
  4066d3:	mulsd  xmm0,xmm6
  4066d7:	bswap  eax
  4066d9:	mov    DWORD PTR [rbp+rdx*1+0x0],eax
  4066dd:	add    rdx,0x4
  4066e1:	mulsd  xmm0,xmm2
  4066e5:	movsd  QWORD PTR [r12+r8*8],xmm0
  4066eb:	pxor   xmm0,xmm0
  4066ef:	lea    r8d,[rcx+0x1]
  4066f3:	add    ecx,0x2
  4066f6:	cvtsi2sd xmm0,eax
  4066fa:	movsx  r8,r8w
  4066fe:	cmp    rdx,0xc
  406702:	mulsd  xmm0,xmm6
  406706:	mulsd  xmm0,xmm1
  40670a:	movsd  QWORD PTR [r12+r8*8],xmm0
  406710:	jne    4066bb <_head_lib64_libkernel32_a-0xa945>
  406712:	add    r13d,0x6
  406716:	jmp    40658b <_head_lib64_libkernel32_a-0xaa75>
  40671b:	nop    DWORD PTR [rax+rax*1+0x0]
  406720:	lea    rcx,[rsp+0x6c]
  406725:	mov    r9,rsi
  406728:	mov    r8d,0x1
  40672e:	mov    edx,0x2
  406733:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  406738:	test   rax,rax
  40673b:	je     406760 <_head_lib64_libkernel32_a-0xa8a0>
  40673d:	mov    r8d,0x1
  406743:	mov    edx,0x16
  406748:	mov    rcx,rsi
  40674b:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  406750:	test   eax,eax
  406752:	jns    4064cd <_head_lib64_libkernel32_a-0xab33>
  406758:	nop    DWORD PTR [rax+rax*1+0x0]
  406760:	mov    r15,QWORD PTR [rsp+0x108]
  406768:	call   QWORD PTR [rip+0xb042]        # 4117b0 <__imp__errno>
  40676e:	mov    rcx,rsi
  406771:	mov    r12d,0xffffffff
  406777:	mov    ebx,DWORD PTR [rax]
  406779:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  40677e:	mov    r8,r15
  406781:	mov    ecx,eax
  406783:	mov    edx,ebx
  406785:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  40678a:	jmp    406357 <_head_lib64_libkernel32_a-0xaca9>
  40678f:	nop
  406790:	lea    rdx,[rip+0x6336]        # 40cacd <_head_lib64_libkernel32_a-0x4533>
  406797:	mov    ecx,edi
  406799:	call   408538 <_head_lib64_libkernel32_a-0x8ac8>
  40679e:	mov    DWORD PTR [rsp+0x58],eax
  4067a2:	jmp    406414 <_head_lib64_libkernel32_a-0xabec>
  4067a7:	nop    WORD PTR [rax+rax*1+0x0]
  4067b0:	movsx  r8d,r13w
  4067b4:	xor    eax,eax
  4067b6:	cmp    WORD PTR [rsp+0x5e],0x0
  4067bc:	mov    r9,r12
  4067bf:	mov    ecx,DWORD PTR [rsp+0x58]
  4067c3:	sete   al
  4067c6:	xor    edx,edx
  4067c8:	mov    DWORD PTR [rsp+0x20],eax
  4067cc:	call   408530 <_head_lib64_libkernel32_a-0x8ad0>
  4067d1:	mov    rcx,r12
  4067d4:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4067d9:	jmp    4064cd <_head_lib64_libkernel32_a-0xab33>
  4067de:	xor    r8d,r8d
  4067e1:	jmp    4067b4 <_head_lib64_libkernel32_a-0xa84c>
  4067e3:	mov    r15,QWORD PTR [rsp+0x108]
  4067eb:	call   QWORD PTR [rip+0xafbf]        # 4117b0 <__imp__errno>
  4067f1:	mov    rcx,rsi
  4067f4:	mov    ebx,DWORD PTR [rax]
  4067f6:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  4067fb:	mov    ecx,eax
  4067fd:	mov    r8,r15
  406800:	mov    edx,ebx
  406802:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  406807:	mov    rcx,r12
  40680a:	mov    r12d,0xffffffff
  406810:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  406815:	jmp    406357 <_head_lib64_libkernel32_a-0xaca9>
  40681a:	call   QWORD PTR [rip+0xaf90]        # 4117b0 <__imp__errno>
  406820:	mov    rcx,rsi
  406823:	mov    ebx,DWORD PTR [rax]
  406825:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  40682a:	mov    r8,r15
  40682d:	mov    ecx,eax
  40682f:	mov    edx,ebx
  406831:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  406836:	jmp    406357 <_head_lib64_libkernel32_a-0xaca9>
  40683b:	nop    DWORD PTR [rax+rax*1+0x0]
  406840:	push   r15
  406842:	push   r14
  406844:	push   r13
  406846:	push   r12
  406848:	push   rbp
  406849:	push   rdi
  40684a:	push   rsi
  40684b:	push   rbx
  40684c:	sub    rsp,0x3c8
  406853:	mov    DWORD PTR [rsp+0x418],edx
  40685a:	mov    rbp,rcx
  40685d:	mov    rsi,r8
  406860:	mov    rdi,r9
  406863:	lea    rbx,[rsp+0x50]
  406868:	mov    r9,r8
  40686b:	mov    edx,0x4
  406870:	mov    r8d,0x1
  406876:	mov    rcx,rbx
  406879:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40687e:	test   rax,rax
  406881:	je     406c10 <_head_lib64_libkernel32_a-0xa3f0>
  406887:	lea    rcx,[rbx+0x4]
  40688b:	mov    r9,rsi
  40688e:	mov    r8d,0x1
  406894:	mov    edx,0x4
  406899:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40689e:	test   rax,rax
  4068a1:	je     406c10 <_head_lib64_libkernel32_a-0xa3f0>
  4068a7:	lea    rcx,[rbx+0x8]
  4068ab:	mov    r9,rsi
  4068ae:	mov    r8d,0x1
  4068b4:	mov    edx,0x4
  4068b9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4068be:	test   rax,rax
  4068c1:	je     406c10 <_head_lib64_libkernel32_a-0xa3f0>
  4068c7:	lea    rcx,[rbx+0xc]
  4068cb:	mov    r9,rsi
  4068ce:	mov    r8d,0x1
  4068d4:	mov    edx,0x4
  4068d9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4068de:	test   rax,rax
  4068e1:	je     406c10 <_head_lib64_libkernel32_a-0xa3f0>
  4068e7:	lea    rcx,[rbx+0x10]
  4068eb:	mov    r9,rsi
  4068ee:	mov    r8d,0x1
  4068f4:	mov    edx,0x4
  4068f9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4068fe:	test   rax,rax
  406901:	je     406c10 <_head_lib64_libkernel32_a-0xa3f0>
  406907:	lea    rcx,[rbx+0x14]
  40690b:	mov    r9,rsi
  40690e:	mov    r8d,0x1
  406914:	mov    edx,0x4
  406919:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40691e:	test   rax,rax
  406921:	je     406c10 <_head_lib64_libkernel32_a-0xa3f0>
  406927:	lea    rcx,[rbx+0x18]
  40692b:	mov    r9,rsi
  40692e:	mov    r8d,0x1
  406934:	mov    edx,0x2
  406939:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40693e:	test   rax,rax
  406941:	je     406c10 <_head_lib64_libkernel32_a-0xa3f0>
  406947:	lea    rcx,[rbx+0x1a]
  40694b:	mov    r9,rsi
  40694e:	mov    r8d,0x1
  406954:	mov    edx,0x2
  406959:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40695e:	test   rax,rax
  406961:	je     406c10 <_head_lib64_libkernel32_a-0xa3f0>
  406967:	mov    eax,DWORD PTR [rsp+0x54]
  40696b:	mov    edx,DWORD PTR [rsp+0x50]
  40696f:	rol    WORD PTR [rsp+0x68],0x8
  406975:	rol    WORD PTR [rsp+0x6a],0x8
  40697b:	bswap  eax
  40697d:	bswap  edx
  40697f:	cmp    edx,0x1
  406982:	mov    DWORD PTR [rsp+0x54],eax
  406986:	mov    eax,DWORD PTR [rsp+0x58]
  40698a:	mov    DWORD PTR [rsp+0x50],edx
  40698e:	bswap  eax
  406990:	mov    DWORD PTR [rsp+0x58],eax
  406994:	mov    eax,DWORD PTR [rsp+0x5c]
  406998:	bswap  eax
  40699a:	mov    DWORD PTR [rsp+0x5c],eax
  40699e:	mov    eax,DWORD PTR [rsp+0x60]
  4069a2:	bswap  eax
  4069a4:	mov    DWORD PTR [rsp+0x60],eax
  4069a8:	mov    eax,DWORD PTR [rsp+0x64]
  4069ac:	bswap  eax
  4069ae:	mov    DWORD PTR [rsp+0x64],eax
  4069b2:	mov    eax,0xffffffff
  4069b7:	jne    406c31 <_head_lib64_libkernel32_a-0xa3cf>
  4069bd:	lea    rbx,[rsp+0x150]
  4069c5:	lea    rcx,[rsp+0xa0]
  4069cd:	call   408730 <_head_lib64_libkernel32_a-0x88d0>
  4069d2:	mov    r8d,0x270
  4069d8:	mov    edx,0x50
  4069dd:	mov    rcx,rbx
  4069e0:	mov    QWORD PTR [rsp+0x150],rax
  4069e8:	call   408760 <_head_lib64_libkernel32_a-0x88a0>
  4069ed:	mov    rdx,rsi
  4069f0:	mov    rcx,rbx
  4069f3:	call   408728 <_head_lib64_libkernel32_a-0x88d8>
  4069f8:	mov    edx,0x1
  4069fd:	mov    rcx,rbx
  406a00:	call   408748 <_head_lib64_libkernel32_a-0x88b8>
  406a05:	mov    rcx,rbx
  406a08:	call   408738 <_head_lib64_libkernel32_a-0x88c8>
  406a0d:	mov    ecx,DWORD PTR [rsp+0x1c8]
  406a14:	imul   ecx,DWORD PTR [rsp+0x1c4]
  406a1c:	imul   ecx,DWORD PTR [rsp+0x1d0]
  406a24:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  406a29:	cmp    WORD PTR [rbp+0x0],0x409
  406a2f:	mov    rsi,rax
  406a32:	je     406c92 <_head_lib64_libkernel32_a-0xa36e>
  406a38:	mov    ecx,DWORD PTR [rsp+0x1c8]
  406a3f:	xor    r14d,r14d
  406a42:	mov    edx,0x8
  406a47:	call   4087f0 <_head_lib64_libkernel32_a-0x8810>
  406a4c:	mov    r8d,DWORD PTR [rsp+0x1c8]
  406a54:	mov    rdi,rax
  406a57:	mov    edx,DWORD PTR [rsp+0x1c4]
  406a5e:	test   r8d,r8d
  406a61:	je     406a96 <_head_lib64_libkernel32_a-0xa56a>
  406a63:	mov    r11d,DWORD PTR [rsp+0x1d0]
  406a6b:	lea    ecx,[r8-0x1]
  406a6f:	xor    r9d,r9d
  406a72:	lea    r10,[rax+rcx*8+0x8]
  406a77:	imul   r11d,edx
  406a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a80:	mov    ecx,r9d
  406a83:	add    rax,0x8
  406a87:	add    r9d,r11d
  406a8a:	add    rcx,rsi
  406a8d:	mov    QWORD PTR [rax-0x8],rcx
  406a91:	cmp    r10,rax
  406a94:	jne    406a80 <_head_lib64_libkernel32_a-0xa580>
  406a96:	mov    ecx,DWORD PTR [rsp+0x418]
  406a9d:	xor    r9d,r9d
  406aa0:	mov    DWORD PTR [rsp+0x20],0x0
  406aa8:	call   408630 <_head_lib64_libkernel32_a-0x89d0>
  406aad:	mov    r13d,DWORD PTR [rsp+0x1c8]
  406ab5:	lea    rcx,[rip+0x601e]        # 40cada <_head_lib64_libkernel32_a-0x4526>
  406abc:	mov    r12d,DWORD PTR [rsp+0x1c4]
  406ac4:	call   408890 <_head_lib64_libkernel32_a-0x8770>
  406ac9:	mov    ecx,DWORD PTR [rsp+0x418]
  406ad0:	mov    DWORD PTR [rsp+0x30],0x0
  406ad8:	movsd  xmm0,QWORD PTR [rip+0x6150]        # 40cc30 <_head_lib64_libkernel32_a-0x43d0>
  406ae0:	mov    rdx,rax
  406ae3:	mov    DWORD PTR [rsp+0x20],0x0
  406aeb:	mov    r9d,r13d
  406aee:	mov    r13,r14
  406af1:	mov    r8d,r12d
  406af4:	movsd  QWORD PTR [rsp+0x28],xmm0
  406afa:	call   4085b0 <_head_lib64_libkernel32_a-0x8a50>
  406aff:	lea    r12,[rsp+0x70]
  406b04:	mov    ecx,eax
  406b06:	mov    DWORD PTR [rsp+0x4c],eax
  406b0a:	call   408698 <_head_lib64_libkernel32_a-0x8968>
  406b0f:	xor    r9d,r9d
  406b12:	xor    r8d,r8d
  406b15:	mov    rcx,r12
  406b18:	mov    r15,rax
  406b1b:	mov    DWORD PTR [rsp+0x38],0x0
  406b23:	mov    DWORD PTR [rsp+0x30],0x1
  406b2b:	mov    eax,DWORD PTR [rax+0x8]
  406b2e:	mov    rdx,r15
  406b31:	mov    DWORD PTR [rsp+0x28],eax
  406b35:	mov    eax,DWORD PTR [r15+0x4]
  406b39:	mov    DWORD PTR [rsp+0x20],eax
  406b3d:	call   408578 <_head_lib64_libkernel32_a-0x8a88>
  406b42:	test   r14,r14
  406b45:	mov    eax,DWORD PTR [rsp+0x1e8]
  406b4c:	cmove  r13,rsi
  406b50:	cmp    DWORD PTR [rsp+0x1c8],eax
  406b57:	ja     406b97 <_head_lib64_libkernel32_a-0xa469>
  406b59:	jmp    406c45 <_head_lib64_libkernel32_a-0xa3bb>
  406b5e:	xchg   ax,ax
  406b60:	mov    r9d,DWORD PTR [r15+0x8]
  406b64:	mov    r8d,DWORD PTR [r15+0x4]
  406b68:	mov    DWORD PTR [rsp+0x28],r9d
  406b6d:	mov    rdx,r13
  406b70:	xor    r9d,r9d
  406b73:	mov    rcx,r12
  406b76:	mov    DWORD PTR [rsp+0x20],r8d
  406b7b:	xor    r8d,r8d
  406b7e:	call   408570 <_head_lib64_libkernel32_a-0x8a90>
  406b83:	mov    eax,DWORD PTR [rsp+0x1e8]
  406b8a:	cmp    eax,DWORD PTR [rsp+0x1c8]
  406b91:	jae    406c45 <_head_lib64_libkernel32_a-0xa3bb>
  406b97:	lea    rdx,[rdi+rax*8]
  406b9b:	mov    r8d,0x1
  406ba1:	mov    rcx,rbx
  406ba4:	call   408740 <_head_lib64_libkernel32_a-0x88c0>
  406ba9:	cmp    WORD PTR [rbp+0x0],0x409
  406baf:	jne    406b60 <_head_lib64_libkernel32_a-0xa4a0>
  406bb1:	mov    r9d,DWORD PTR [r15+0x8]
  406bb5:	mov    r8d,DWORD PTR [r15+0x4]
  406bb9:	mov    eax,r9d
  406bbc:	imul   eax,r8d
  406bc0:	test   eax,eax
  406bc2:	je     406b68 <_head_lib64_libkernel32_a-0xa498>
  406bc4:	mov    rdx,r14
  406bc7:	mov    rax,rsi
  406bca:	xor    ecx,ecx
  406bcc:	nop    DWORD PTR [rax+0x0]
  406bd0:	movzx  r8d,BYTE PTR [rax]
  406bd4:	add    rax,0x3
  406bd8:	add    rdx,0x3
  406bdc:	add    ecx,0x1
  406bdf:	movzx  r9d,BYTE PTR [rax-0x2]
  406be4:	movzx  r10d,BYTE PTR [rax-0x1]
  406be9:	mov    BYTE PTR [rdx-0x2],r9b
  406bed:	mov    BYTE PTR [rdx-0x3],r10b
  406bf1:	mov    BYTE PTR [rdx-0x1],r8b
  406bf5:	mov    r8d,DWORD PTR [r15+0x4]
  406bf9:	mov    r9d,DWORD PTR [r15+0x8]
  406bfd:	mov    r10d,r8d
  406c00:	imul   r10d,r9d
  406c04:	cmp    r10d,ecx
  406c07:	ja     406bd0 <_head_lib64_libkernel32_a-0xa430>
  406c09:	jmp    406b68 <_head_lib64_libkernel32_a-0xa498>
  406c0e:	xchg   ax,ax
  406c10:	call   QWORD PTR [rip+0xab9a]        # 4117b0 <__imp__errno>
  406c16:	mov    rcx,rsi
  406c19:	mov    ebx,DWORD PTR [rax]
  406c1b:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  406c20:	mov    r8,rdi
  406c23:	mov    ecx,eax
  406c25:	mov    edx,ebx
  406c27:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  406c2c:	mov    eax,0xffffffff
  406c31:	add    rsp,0x3c8
  406c38:	pop    rbx
  406c39:	pop    rsi
  406c3a:	pop    rdi
  406c3b:	pop    rbp
  406c3c:	pop    r12
  406c3e:	pop    r13
  406c40:	pop    r14
  406c42:	pop    r15
  406c44:	ret    
  406c45:	mov    rcx,rbx
  406c48:	call   408750 <_head_lib64_libkernel32_a-0x88b0>
  406c4d:	mov    rcx,rbx
  406c50:	call   408758 <_head_lib64_libkernel32_a-0x88a8>
  406c55:	mov    rcx,rdi
  406c58:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  406c5d:	mov    rcx,rsi
  406c60:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  406c65:	mov    rcx,r14
  406c68:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  406c6d:	mov    edx,DWORD PTR [rsp+0x4c]
  406c71:	xor    r9d,r9d
  406c74:	mov    r8d,0xffffffff
  406c7a:	mov    ecx,DWORD PTR [rsp+0x418]
  406c81:	call   408648 <_head_lib64_libkernel32_a-0x89b8>
  406c86:	mov    rcx,r15
  406c89:	call   4086b0 <_head_lib64_libkernel32_a-0x8950>
  406c8e:	xor    eax,eax
  406c90:	jmp    406c31 <_head_lib64_libkernel32_a-0xa3cf>
  406c92:	mov    ecx,DWORD PTR [rsp+0x1c8]
  406c99:	imul   ecx,DWORD PTR [rsp+0x1c4]
  406ca1:	imul   ecx,DWORD PTR [rsp+0x1d0]
  406ca9:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  406cae:	mov    ecx,DWORD PTR [rsp+0x1c8]
  406cb5:	mov    r14,rax
  406cb8:	jmp    406a42 <_head_lib64_libkernel32_a-0xa5be>
  406cbd:	nop    DWORD PTR [rax]
  406cc0:	push   rbp
  406cc1:	push   rdi
  406cc2:	push   rsi
  406cc3:	push   rbx
  406cc4:	sub    rsp,0x48
  406cc8:	mov    r9,rdx
  406ccb:	mov    rsi,rdx
  406cce:	mov    rdi,r8
  406cd1:	mov    edx,0x4
  406cd6:	mov    r8d,0x1
  406cdc:	mov    rbx,rcx
  406cdf:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  406ce4:	test   rax,rax
  406ce7:	je     406dc0 <_head_lib64_libkernel32_a-0xa240>
  406ced:	lea    rcx,[rbx+0x4]
  406cf1:	mov    r9,rsi
  406cf4:	mov    r8d,0x1
  406cfa:	mov    edx,0x2
  406cff:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  406d04:	test   rax,rax
  406d07:	je     406dc0 <_head_lib64_libkernel32_a-0xa240>
  406d0d:	rol    WORD PTR [rbx+0x4],0x8
  406d12:	lea    rdx,[rsp+0x3c]
  406d17:	mov    QWORD PTR [rsp+0x20],rdi
  406d1c:	mov    r9,rsi
  406d1f:	mov    r8d,0x2
  406d25:	lea    rcx,[rsp+0x38]
  406d2a:	call   401960 <_head_lib64_libkernel32_a-0xf6a0>
  406d2f:	cmp    QWORD PTR [rdi],0x0
  406d33:	mov    rbp,rax
  406d36:	mov    eax,0xffffffff
  406d3b:	jne    406d9e <_head_lib64_libkernel32_a-0xa262>
  406d3d:	test   rbp,rbp
  406d40:	je     406db0 <_head_lib64_libkernel32_a-0xa250>
  406d42:	mov    eax,DWORD PTR [rsp+0x3c]
  406d46:	lea    rcx,[rbx+0x6]
  406d4a:	mov    rdx,rbp
  406d4d:	lea    r8d,[rax+0x1]
  406d51:	movsxd r8,r8d
  406d54:	call   408780 <_head_lib64_libkernel32_a-0x8880>
  406d59:	mov    rcx,rbp
  406d5c:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  406d61:	lea    rcx,[rbx+0x10c]
  406d68:	mov    r9,rsi
  406d6b:	mov    r8d,0x1
  406d71:	mov    edx,0x4
  406d76:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  406d7b:	test   rax,rax
  406d7e:	je     406dc0 <_head_lib64_libkernel32_a-0xa240>
  406d80:	mov    eax,DWORD PTR [rbx+0x10c]
  406d86:	mov    rcx,rsi
  406d89:	bswap  eax
  406d8b:	mov    DWORD PTR [rbx+0x10c],eax
  406d91:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  406d96:	mov    DWORD PTR [rbx+0x108],eax
  406d9c:	xor    eax,eax
  406d9e:	add    rsp,0x48
  406da2:	pop    rbx
  406da3:	pop    rsi
  406da4:	pop    rdi
  406da5:	pop    rbp
  406da6:	ret    
  406da7:	nop    WORD PTR [rax+rax*1+0x0]
  406db0:	mov    BYTE PTR [rbx+0x6],0x0
  406db4:	jmp    406d59 <_head_lib64_libkernel32_a-0xa2a7>
  406db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406dc0:	call   QWORD PTR [rip+0xa9ea]        # 4117b0 <__imp__errno>
  406dc6:	mov    rcx,rsi
  406dc9:	mov    ebx,DWORD PTR [rax]
  406dcb:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  406dd0:	mov    r8,rdi
  406dd3:	mov    ecx,eax
  406dd5:	mov    edx,ebx
  406dd7:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  406ddc:	mov    eax,0xffffffff
  406de1:	add    rsp,0x48
  406de5:	pop    rbx
  406de6:	pop    rsi
  406de7:	pop    rdi
  406de8:	pop    rbp
  406de9:	ret    
  406dea:	nop    WORD PTR [rax+rax*1+0x0]
  406df0:	push   r15
  406df2:	push   r14
  406df4:	push   r13
  406df6:	push   r12
  406df8:	push   rbp
  406df9:	push   rdi
  406dfa:	push   rsi
  406dfb:	push   rbx
  406dfc:	sub    rsp,0x138
  406e03:	movaps XMMWORD PTR [rsp+0xe0],xmm6
  406e0b:	movaps XMMWORD PTR [rsp+0xf0],xmm7
  406e13:	movaps XMMWORD PTR [rsp+0x100],xmm8
  406e1c:	movaps XMMWORD PTR [rsp+0x110],xmm9
  406e25:	movaps XMMWORD PTR [rsp+0x120],xmm10
  406e2e:	mov    ebp,edx
  406e30:	mov    edx,DWORD PTR [rcx+0x108]
  406e36:	mov    rbx,rcx
  406e39:	mov    rdi,r8
  406e3c:	mov    rcx,r9
  406e3f:	xor    r8d,r8d
  406e42:	mov    rsi,r9
  406e45:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  406e4a:	test   eax,eax
  406e4c:	js     407d30 <_head_lib64_libkernel32_a-0x92d0>
  406e52:	mov    r8d,0x4
  406e58:	mov    rcx,rbx
  406e5b:	lea    rdx,[rip+0x5c83]        # 40cae5 <_head_lib64_libkernel32_a-0x451b>
  406e62:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  406e67:	test   eax,eax
  406e69:	jne    407090 <_head_lib64_libkernel32_a-0x9f70>
  406e6f:	movzx  ecx,WORD PTR [rbx+0x4]
  406e73:	lea    eax,[rcx-0x3e8]
  406e79:	cmp    ax,0x3c
  406e7d:	ja     407bb0 <_head_lib64_libkernel32_a-0x9450>
  406e83:	lea    rdx,[rip+0x5ca6]        # 40cb30 <_head_lib64_libkernel32_a-0x44d0>
  406e8a:	movzx  eax,ax
  406e8d:	movsxd rax,DWORD PTR [rdx+rax*4]
  406e91:	add    rdx,rax
  406e94:	jmp    rdx
  406e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ea0:	movsxd rcx,DWORD PTR [rbx+0x10c]
  406ea7:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  406eac:	movsxd rdx,DWORD PTR [rbx+0x10c]
  406eb3:	mov    r9,rsi
  406eb6:	mov    r8d,0x1
  406ebc:	mov    rcx,rax
  406ebf:	mov    r13,rax
  406ec2:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  406ec7:	test   rax,rax
  406eca:	je     407e16 <_head_lib64_libkernel32_a-0x91ea>
  406ed0:	mov    r12d,DWORD PTR [rbx+0x10c]
  406ed7:	lea    ecx,[r12+0xc]
  406edc:	add    r12d,0x8
  406ee0:	movsxd rcx,ecx
  406ee3:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  406ee8:	movsxd r8,DWORD PTR [rbx+0x10c]
  406eef:	mov    rdx,r13
  406ef2:	mov    rdi,rax
  406ef5:	mov    WORD PTR [rax+0x4],r12w
  406efa:	mov    DWORD PTR [rax],0xe1ffd8ff
  406f00:	lea    rcx,[rdi+0xc]
  406f04:	mov    DWORD PTR [rax+0x6],0x66697845
  406f0b:	xor    eax,eax
  406f0d:	mov    r12,r8
  406f10:	mov    WORD PTR [rdi+0xa],ax
  406f14:	call   409e30 <_head_lib64_libkernel32_a-0x71d0>
  406f19:	lea    edx,[r12+0xc]
  406f1e:	mov    rcx,rdi
  406f21:	call   408870 <_head_lib64_libkernel32_a-0x8790>
  406f26:	mov    rcx,rdi
  406f29:	mov    r12,rax
  406f2c:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  406f31:	mov    rcx,QWORD PTR [r12]
  406f35:	mov    edx,0x2bc
  406f3a:	call   408880 <_head_lib64_libkernel32_a-0x8780>
  406f3f:	test   rax,rax
  406f42:	mov    rdi,rax
  406f45:	je     406fc5 <_head_lib64_libkernel32_a-0xa03b>
  406f47:	mov    eax,DWORD PTR [rax+0x18]
  406f4a:	lea    ecx,[rax+0x1]
  406f4d:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  406f52:	mov    rdx,QWORD PTR [rdi+0x10]
  406f56:	mov    r8d,DWORD PTR [rdi+0x18]
  406f5a:	mov    rcx,rax
  406f5d:	mov    r14,rax
  406f60:	call   409e30 <_head_lib64_libkernel32_a-0x71d0>
  406f65:	mov    eax,DWORD PTR [rdi+0x18]
  406f68:	mov    r9d,ebp
  406f6b:	mov    r8d,0xd
  406f71:	lea    rdx,[rsp+0x90]
  406f79:	lea    rcx,[rip+0x5b88]        # 40cb08 <_head_lib64_libkernel32_a-0x44f8>
  406f80:	mov    BYTE PTR [r14+rax*1],0x0
  406f85:	mov    DWORD PTR [rsp+0x30],0x16
  406f8d:	mov    QWORD PTR [rsp+0x28],r14
  406f92:	mov    DWORD PTR [rsp+0x20],0x4
  406f9a:	call   408540 <_head_lib64_libkernel32_a-0x8ac0>
  406f9f:	mov    rcx,r14
  406fa2:	mov    r15,rax
  406fa5:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  406faa:	mov    edx,DWORD PTR [rsp+0x90]
  406fb1:	mov    rcx,r15
  406fb4:	call   4086b8 <_head_lib64_libkernel32_a-0x8948>
  406fb9:	mov    rcx,QWORD PTR [r12]
  406fbd:	mov    rdx,rdi
  406fc0:	call   408878 <_head_lib64_libkernel32_a-0x8788>
  406fc5:	mov    rcx,QWORD PTR [r12]
  406fc9:	mov    edx,0x8649
  406fce:	call   408880 <_head_lib64_libkernel32_a-0x8780>
  406fd3:	test   rax,rax
  406fd6:	je     406fe4 <_head_lib64_libkernel32_a-0xa01c>
  406fd8:	mov    rcx,QWORD PTR [r12]
  406fdc:	mov    rdx,rax
  406fdf:	call   408878 <_head_lib64_libkernel32_a-0x8788>
  406fe4:	lea    r8,[rsp+0x70]
  406fe9:	mov    rcx,r12
  406fec:	lea    rdx,[rsp+0xb0]
  406ff4:	call   408868 <_head_lib64_libkernel32_a-0x8798>
  406ff9:	mov    r8d,DWORD PTR [rsp+0x70]
  406ffe:	cmp    r8d,0x8
  407002:	ja     407d60 <_head_lib64_libkernel32_a-0x92a0>
  407008:	mov    rcx,r12
  40700b:	call   408860 <_head_lib64_libkernel32_a-0x87a0>
  407010:	mov    rcx,QWORD PTR [rsp+0xb0]
  407018:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  40701d:	mov    rcx,r13
  407020:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  407025:	mov    edx,DWORD PTR [rbx+0x10c]
  40702b:	mov    eax,DWORD PTR [rbx+0x108]
  407031:	xor    r8d,r8d
  407034:	mov    rcx,rsi
  407037:	add    eax,edx
  407039:	and    edx,0x1
  40703c:	add    edx,eax
  40703e:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  407043:	test   eax,eax
  407045:	js     407d30 <_head_lib64_libkernel32_a-0x92d0>
  40704b:	xor    eax,eax
  40704d:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
  407055:	movaps xmm7,XMMWORD PTR [rsp+0xf0]
  40705d:	movaps xmm8,XMMWORD PTR [rsp+0x100]
  407066:	movaps xmm9,XMMWORD PTR [rsp+0x110]
  40706f:	movaps xmm10,XMMWORD PTR [rsp+0x120]
  407078:	add    rsp,0x138
  40707f:	pop    rbx
  407080:	pop    rsi
  407081:	pop    rdi
  407082:	pop    rbp
  407083:	pop    r12
  407085:	pop    r13
  407087:	pop    r14
  407089:	pop    r15
  40708b:	ret    
  40708c:	nop    DWORD PTR [rax+0x0]
  407090:	mov    r8d,0x4
  407096:	mov    rcx,rbx
  407099:	lea    rdx,[rip+0x5a4a]        # 40caea <_head_lib64_libkernel32_a-0x4516>
  4070a0:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4070a5:	test   eax,eax
  4070a7:	jne    407025 <_head_lib64_libkernel32_a-0x9fdb>
  4070ad:	jmp    406e6f <_head_lib64_libkernel32_a-0xa191>
  4070b2:	mov    edx,DWORD PTR [rbx+0x10c]
  4070b8:	lea    ebp,[rdx+0x3]
  4070bb:	test   edx,edx
  4070bd:	cmovns ebp,edx
  4070c0:	sar    ebp,0x2
  4070c3:	test   bp,bp
  4070c6:	movsx  rax,bp
  4070ca:	je     40702b <_head_lib64_libkernel32_a-0x9fd5>
  4070d0:	lea    rcx,[rax*8+0x0]
  4070d8:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  4070dd:	test   bp,bp
  4070e0:	mov    WORD PTR [rdi+0x80],bp
  4070e7:	mov    QWORD PTR [rdi+0x78],rax
  4070eb:	jle    407025 <_head_lib64_libkernel32_a-0x9fdb>
  4070f1:	lea    edx,[rbp-0x1]
  4070f4:	xor    r12d,r12d
  4070f7:	movzx  edx,dx
  4070fa:	lea    rbp,[rdx*4+0x4]
  407102:	jmp    40711f <_head_lib64_libkernel32_a-0x9ee1>
  407104:	mov    rax,QWORD PTR [rdi+0x78]
  407108:	lea    rcx,[rax+r12*1]
  40710c:	add    r12,0x4
  407110:	mov    edx,DWORD PTR [rcx]
  407112:	cmp    r12,rbp
  407115:	bswap  edx
  407117:	mov    DWORD PTR [rcx],edx
  407119:	je     407025 <_head_lib64_libkernel32_a-0x9fdb>
  40711f:	lea    rcx,[rax+r12*1]
  407123:	mov    r9,rsi
  407126:	mov    r8d,0x1
  40712c:	mov    edx,0x4
  407131:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  407136:	test   rax,rax
  407139:	jne    407104 <_head_lib64_libkernel32_a-0x9efc>
  40713b:	call   QWORD PTR [rip+0xa66f]        # 4117b0 <__imp__errno>
  407141:	mov    rcx,rsi
  407144:	mov    edi,DWORD PTR [rax]
  407146:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  40714b:	mov    r8,QWORD PTR [rsp+0x1a0]
  407153:	mov    ecx,eax
  407155:	mov    edx,edi
  407157:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  40715c:	mov    edx,DWORD PTR [rbx+0x10c]
  407162:	jmp    40702b <_head_lib64_libkernel32_a-0x9fd5>
  407167:	nop    WORD PTR [rax+rax*1+0x0]
  407170:	mov    r9,QWORD PTR [rsp+0x1a0]
  407178:	mov    edx,ebp
  40717a:	mov    r8,rsi
  40717d:	mov    rcx,rbx
  407180:	call   406310 <_head_lib64_libkernel32_a-0xacf0>
  407185:	mov    edx,DWORD PTR [rbx+0x10c]
  40718b:	jmp    40702b <_head_lib64_libkernel32_a-0x9fd5>
  407190:	movsxd rcx,DWORD PTR [rbx+0x10c]
  407197:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  40719c:	movsxd rdx,DWORD PTR [rbx+0x10c]
  4071a3:	mov    r9,rsi
  4071a6:	mov    r8d,0x1
  4071ac:	mov    rcx,rax
  4071af:	mov    rdi,rax
  4071b2:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4071b7:	test   rax,rax
  4071ba:	je     407db5 <_head_lib64_libkernel32_a-0x924b>
  4071c0:	mov    r8d,DWORD PTR [rbx+0x10c]
  4071c7:	mov    r9,rdi
  4071ca:	mov    edx,0x1
  4071cf:	lea    rcx,[rip+0x5926]        # 40cafc <_head_lib64_libkernel32_a-0x4504>
  4071d6:	call   408700 <_head_lib64_libkernel32_a-0x8900>
  4071db:	mov    ecx,ebp
  4071dd:	mov    rdx,rax
  4071e0:	mov    r12,rax
  4071e3:	call   408680 <_head_lib64_libkernel32_a-0x8980>
  4071e8:	mov    rcx,r12
  4071eb:	call   408708 <_head_lib64_libkernel32_a-0x88f8>
  4071f0:	mov    rcx,rdi
  4071f3:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  4071f8:	mov    edx,DWORD PTR [rbx+0x10c]
  4071fe:	jmp    40702b <_head_lib64_libkernel32_a-0x9fd5>
  407203:	mov    eax,DWORD PTR [rbx+0x10c]
  407209:	lea    ecx,[rax+0x1]
  40720c:	movsxd rcx,ecx
  40720f:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  407214:	movsxd rdx,DWORD PTR [rbx+0x10c]
  40721b:	mov    r9,rsi
  40721e:	mov    r8d,0x1
  407224:	mov    rcx,rax
  407227:	mov    rdi,rax
  40722a:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40722f:	test   rax,rax
  407232:	je     407df0 <_head_lib64_libkernel32_a-0x9210>
  407238:	movsxd rax,DWORD PTR [rbx+0x10c]
  40723f:	mov    r9d,ebp
  407242:	mov    r8d,0xd
  407248:	lea    rdx,[rsp+0xb0]
  407250:	lea    rcx,[rip+0x58b1]        # 40cb08 <_head_lib64_libkernel32_a-0x44f8>
  407257:	mov    BYTE PTR [rdi+rax*1],0x0
  40725b:	mov    DWORD PTR [rsp+0x30],0x16
  407263:	mov    QWORD PTR [rsp+0x28],rdi
  407268:	mov    DWORD PTR [rsp+0x20],0x4
  407270:	call   408540 <_head_lib64_libkernel32_a-0x8ac0>
  407275:	mov    rcx,rdi
  407278:	mov    rbp,rax
  40727b:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  407280:	mov    edx,DWORD PTR [rsp+0xb0]
  407287:	mov    rcx,rbp
  40728a:	call   4086b8 <_head_lib64_libkernel32_a-0x8948>
  40728f:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407294:	lea    rdi,[rsp+0xb0]
  40729c:	mov    r9,rsi
  40729f:	mov    r8d,0x1
  4072a5:	mov    edx,0x4
  4072aa:	mov    rcx,rdi
  4072ad:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4072b2:	test   rax,rax
  4072b5:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4072bb:	lea    rcx,[rdi+0x4]
  4072bf:	mov    r9,rsi
  4072c2:	mov    r8d,0x1
  4072c8:	mov    edx,0x4
  4072cd:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4072d2:	test   rax,rax
  4072d5:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4072db:	lea    rcx,[rdi+0x8]
  4072df:	mov    r9,rsi
  4072e2:	mov    r8d,0x1
  4072e8:	mov    edx,0x4
  4072ed:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4072f2:	test   rax,rax
  4072f5:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4072fb:	lea    rcx,[rdi+0xc]
  4072ff:	mov    r9,rsi
  407302:	mov    r8d,0x1
  407308:	mov    edx,0x4
  40730d:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  407312:	test   rax,rax
  407315:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  40731b:	mov    eax,DWORD PTR [rsp+0xb0]
  407322:	xor    edi,edi
  407324:	lea    r12,[rsp+0x90]
  40732c:	lea    r13,[r12+0x4]
  407331:	bswap  eax
  407333:	mov    DWORD PTR [rsp+0xb0],eax
  40733a:	mov    eax,DWORD PTR [rsp+0xb4]
  407341:	bswap  eax
  407343:	mov    DWORD PTR [rsp+0xb4],eax
  40734a:	mov    eax,DWORD PTR [rsp+0xb8]
  407351:	bswap  eax
  407353:	mov    DWORD PTR [rsp+0xb8],eax
  40735a:	mov    eax,DWORD PTR [rsp+0xbc]
  407361:	bswap  eax
  407363:	test   eax,eax
  407365:	mov    DWORD PTR [rsp+0xbc],eax
  40736c:	jne    407388 <_head_lib64_libkernel32_a-0x9c78>
  40736e:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407373:	call   408688 <_head_lib64_libkernel32_a-0x8978>
  407378:	add    edi,0x1
  40737b:	cmp    DWORD PTR [rsp+0xbc],edi
  407382:	jbe    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407388:	mov    r9,rsi
  40738b:	mov    r8d,0x1
  407391:	mov    edx,0x4
  407396:	mov    rcx,r12
  407399:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40739e:	test   rax,rax
  4073a1:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4073a7:	mov    r9,rsi
  4073aa:	mov    r8d,0x1
  4073b0:	mov    edx,0x1
  4073b5:	mov    rcx,r13
  4073b8:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4073bd:	test   rax,rax
  4073c0:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4073c6:	mov    edx,DWORD PTR [rsp+0x90]
  4073cd:	mov    ecx,ebp
  4073cf:	bswap  edx
  4073d1:	shr    edx,0x5
  4073d4:	cmp    BYTE PTR [rsp+0x94],0x0
  4073dc:	mov    DWORD PTR [rsp+0x90],edx
  4073e3:	je     407373 <_head_lib64_libkernel32_a-0x9c8d>
  4073e5:	call   408690 <_head_lib64_libkernel32_a-0x8970>
  4073ea:	jmp    407378 <_head_lib64_libkernel32_a-0x9c88>
  4073ec:	nop    DWORD PTR [rax+0x0]
  4073f0:	mov    r8d,DWORD PTR [rbx+0x10c]
  4073f7:	mov    edx,0x92492493
  4073fc:	mov    eax,r8d
  4073ff:	imul   edx
  407401:	mov    eax,r8d
  407404:	sar    eax,0x1f
  407407:	lea    ebp,[rdx+r8*1]
  40740b:	mov    edx,r8d
  40740e:	sar    ebp,0x3
  407411:	sub    ebp,eax
  407413:	test   bp,bp
  407416:	movsx  rcx,bp
  40741a:	je     40702b <_head_lib64_libkernel32_a-0x9fd5>
  407420:	mov    edx,0x8
  407425:	call   4087f0 <_head_lib64_libkernel32_a-0x8810>
  40742a:	test   bp,bp
  40742d:	mov    WORD PTR [rdi+0x70],bp
  407431:	mov    QWORD PTR [rdi+0x68],rax
  407435:	jle    407025 <_head_lib64_libkernel32_a-0x9fdb>
  40743b:	lea    r15,[rsp+0x60]
  407440:	movsx  ebp,bp
  407443:	movsd  xmm6,QWORD PTR [rip+0x57f5]        # 40cc40 <_head_lib64_libkernel32_a-0x43c0>
  40744b:	mov    QWORD PTR [rsp+0x180],rbx
  407453:	movsd  xmm7,QWORD PTR [rip+0x57ed]        # 40cc48 <_head_lib64_libkernel32_a-0x43b8>
  40745b:	lea    eax,[rbp-0x1]
  40745e:	xor    ebp,ebp
  407460:	lea    rax,[rax*8+0x8]
  407468:	movapd xmm9,xmm6
  40746d:	movapd xmm8,xmm6
  407472:	movsd  xmm10,QWORD PTR [rip+0x57d5]        # 40cc50 <_head_lib64_libkernel32_a-0x43b0>
  40747b:	mov    QWORD PTR [rsp+0x48],rax
  407480:	lea    rax,[rsp+0x90]
  407488:	mov    QWORD PTR [rsp+0x50],rax
  40748d:	jmp    40756e <_head_lib64_libkernel32_a-0x9a92>
  407492:	jb     407cd0 <_head_lib64_libkernel32_a-0x9330>
  407498:	cmp    ax,0x2
  40749c:	je     407c32 <_head_lib64_libkernel32_a-0x93ce>
  4074a2:	cmp    ax,0x8
  4074a6:	jne    407c10 <_head_lib64_libkernel32_a-0x93f0>
  4074ac:	pxor   xmm1,xmm1
  4074b0:	lea    r14,[rsp+0x70]
  4074b5:	movzx  eax,bx
  4074b8:	cvtsi2sd xmm1,eax
  4074bc:	mov    rcx,r14
  4074bf:	divsd  xmm1,xmm10
  4074c4:	movapd xmm3,xmm1
  4074c8:	movapd xmm2,xmm1
  4074cc:	call   4086d8 <_head_lib64_libkernel32_a-0x8928>
  4074d1:	movsd  xmm1,QWORD PTR [rip+0x576f]        # 40cc48 <_head_lib64_libkernel32_a-0x43b8>
  4074d9:	mov    rcx,r14
  4074dc:	mov    r14,rbp
  4074df:	call   4086d0 <_head_lib64_libkernel32_a-0x8930>
  4074e4:	add    r14,QWORD PTR [rdi+0x68]
  4074e8:	mov    ecx,0x30
  4074ed:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  4074f2:	mov    rdx,QWORD PTR [rsp+0x70]
  4074f7:	mov    QWORD PTR [r14],rax
  4074fa:	mov    rax,QWORD PTR [rdi+0x68]
  4074fe:	mov    rax,QWORD PTR [rax+rbp*1]
  407502:	mov    QWORD PTR [rax],rdx
  407505:	mov    rdx,QWORD PTR [rsp+0x78]
  40750a:	mov    QWORD PTR [rax+0x8],rdx
  40750e:	mov    rdx,QWORD PTR [rsp+0x80]
  407516:	mov    QWORD PTR [rax+0x10],rdx
  40751a:	mov    rdx,QWORD PTR [rsp+0x88]
  407522:	mov    QWORD PTR [rax+0x18],rdx
  407526:	movzx  edx,WORD PTR [rsp+0x6a]
  40752b:	mov    WORD PTR [rax+0x20],dx
  40752f:	movzx  edx,BYTE PTR [rsp+0x6c]
  407534:	mov    BYTE PTR [rax+0x22],dl
  407537:	mov    rax,QWORD PTR [rdi+0x68]
  40753b:	movzx  edx,WORD PTR [rsp+0x60]
  407540:	mov    rax,QWORD PTR [rax+rbp*1]
  407544:	add    rbp,0x8
  407548:	cmp    QWORD PTR [rsp+0x48],rbp
  40754d:	mov    WORD PTR [rax+0x26],bx
  407551:	movzx  ebx,WORD PTR [rsp+0x46]
  407556:	mov    WORD PTR [rax+0x24],dx
  40755a:	mov    WORD PTR [rax+0x28],r13w
  40755f:	mov    WORD PTR [rax+0x2a],r12w
  407564:	mov    WORD PTR [rax+0x2c],bx
  407568:	je     407d93 <_head_lib64_libkernel32_a-0x926d>
  40756e:	mov    r9,rsi
  407571:	mov    r8d,0x1
  407577:	mov    edx,0x2
  40757c:	mov    rcx,r15
  40757f:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  407584:	test   rax,rax
  407587:	je     407d14 <_head_lib64_libkernel32_a-0x92ec>
  40758d:	lea    rcx,[r15+0x2]
  407591:	mov    r9,rsi
  407594:	mov    r8d,0x1
  40759a:	mov    edx,0x8
  40759f:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4075a4:	test   rax,rax
  4075a7:	je     407d14 <_head_lib64_libkernel32_a-0x92ec>
  4075ad:	lea    rcx,[r15+0xa]
  4075b1:	mov    r9,rsi
  4075b4:	mov    r8d,0x1
  4075ba:	mov    edx,0x2
  4075bf:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4075c4:	test   rax,rax
  4075c7:	je     407d14 <_head_lib64_libkernel32_a-0x92ec>
  4075cd:	lea    rcx,[r15+0xc]
  4075d1:	mov    r9,rsi
  4075d4:	mov    r8d,0x1
  4075da:	mov    edx,0x1
  4075df:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4075e4:	test   rax,rax
  4075e7:	je     407d14 <_head_lib64_libkernel32_a-0x92ec>
  4075ed:	lea    rcx,[r15+0xd]
  4075f1:	mov    r9,rsi
  4075f4:	mov    r8d,0x1
  4075fa:	mov    edx,0x1
  4075ff:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  407604:	test   rax,rax
  407607:	je     407d14 <_head_lib64_libkernel32_a-0x92ec>
  40760d:	movzx  eax,WORD PTR [rsp+0x60]
  407612:	movzx  ebx,WORD PTR [rsp+0x62]
  407617:	movzx  r13d,WORD PTR [rsp+0x64]
  40761d:	movzx  r12d,WORD PTR [rsp+0x66]
  407623:	movzx  ecx,WORD PTR [rsp+0x68]
  407628:	rol    ax,0x8
  40762c:	rol    WORD PTR [rsp+0x6a],0x8
  407632:	rol    bx,0x8
  407636:	mov    WORD PTR [rsp+0x60],ax
  40763b:	rol    r13w,0x8
  407640:	rol    r12w,0x8
  407645:	rol    cx,0x8
  407649:	cmp    ax,0x1
  40764d:	mov    WORD PTR [rsp+0x46],cx
  407652:	jne    407492 <_head_lib64_libkernel32_a-0x9b6e>
  407658:	movzx  eax,r12w
  40765c:	pxor   xmm3,xmm3
  407660:	pxor   xmm2,xmm2
  407664:	pxor   xmm1,xmm1
  407668:	cvtsi2sd xmm3,eax
  40766c:	movzx  eax,r13w
  407670:	mov    rcx,QWORD PTR [rsp+0x50]
  407675:	cvtsi2sd xmm2,eax
  407679:	movzx  eax,bx
  40767c:	cvtsi2sd xmm1,eax
  407680:	lea    r14,[rsp+0x70]
  407685:	divsd  xmm3,xmm6
  407689:	divsd  xmm2,xmm6
  40768d:	divsd  xmm1,xmm6
  407691:	call   4086e8 <_head_lib64_libkernel32_a-0x8918>
  407696:	mov    rcx,QWORD PTR [rsp+0x50]
  40769b:	mov    rdx,r14
  40769e:	call   4086e0 <_head_lib64_libkernel32_a-0x8920>
  4076a3:	jmp    4074d1 <_head_lib64_libkernel32_a-0x9b2f>
  4076a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4076b0:	cmp    QWORD PTR [rdi+0x60],0x0
  4076b5:	jne    407025 <_head_lib64_libkernel32_a-0x9fdb>
  4076bb:	call   4087d8 <_head_lib64_libkernel32_a-0x8828>
  4076c0:	mov    ebp,DWORD PTR [rbx+0x10c]
  4076c6:	mov    QWORD PTR [rdi+0x60],rax
  4076ca:	cmp    ebp,0x1
  4076cd:	jle    407025 <_head_lib64_libkernel32_a-0x9fdb>
  4076d3:	lea    r13,[rsp+0xb0]
  4076db:	mov    r14,QWORD PTR [rsp+0x1a0]
  4076e3:	lea    r12,[rsp+0x90]
  4076eb:	jmp    407719 <_head_lib64_libkernel32_a-0x98e7>
  4076ed:	nop    DWORD PTR [rax]
  4076f0:	mov    r9d,DWORD PTR [rsp+0xb0]
  4076f8:	test   r9d,r9d
  4076fb:	js     407709 <_head_lib64_libkernel32_a-0x98f7>
  4076fd:	mov    rcx,QWORD PTR [rdi+0x60]
  407701:	mov    rdx,rax
  407704:	call   4087e8 <_head_lib64_libkernel32_a-0x8818>
  407709:	sub    ebp,DWORD PTR [rsp+0x90]
  407710:	cmp    ebp,0x1
  407713:	jle    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407719:	mov    QWORD PTR [rsp+0x20],r14
  40771e:	mov    r9,rsi
  407721:	mov    rdx,r13
  407724:	mov    rcx,r12
  407727:	mov    r8d,0x1
  40772d:	call   401960 <_head_lib64_libkernel32_a-0xf6a0>
  407732:	cmp    QWORD PTR [r14],0x0
  407736:	je     4076f0 <_head_lib64_libkernel32_a-0x9910>
  407738:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  40773d:	nop    DWORD PTR [rax]
  407740:	lea    rdi,[rsp+0xb0]
  407748:	mov    r9,rsi
  40774b:	mov    r8d,0x1
  407751:	mov    edx,0x4
  407756:	mov    rcx,rdi
  407759:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40775e:	test   rax,rax
  407761:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  407767:	lea    rcx,[rdi+0x4]
  40776b:	mov    r9,rsi
  40776e:	mov    r8d,0x1
  407774:	mov    edx,0x2
  407779:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40777e:	test   rax,rax
  407781:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  407787:	lea    rcx,[rdi+0x6]
  40778b:	mov    r9,rsi
  40778e:	mov    r8d,0x1
  407794:	mov    edx,0x2
  407799:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40779e:	test   rax,rax
  4077a1:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4077a7:	lea    rcx,[rdi+0x8]
  4077ab:	mov    r9,rsi
  4077ae:	mov    r8d,0x1
  4077b4:	mov    edx,0x4
  4077b9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4077be:	test   rax,rax
  4077c1:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4077c7:	lea    rcx,[rdi+0xc]
  4077cb:	mov    r9,rsi
  4077ce:	mov    r8d,0x1
  4077d4:	mov    edx,0x2
  4077d9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4077de:	test   rax,rax
  4077e1:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4077e7:	lea    rcx,[rdi+0xe]
  4077eb:	mov    r9,rsi
  4077ee:	mov    r8d,0x1
  4077f4:	mov    edx,0x2
  4077f9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4077fe:	test   rax,rax
  407801:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  407807:	mov    eax,DWORD PTR [rsp+0xb0]
  40780e:	pxor   xmm2,xmm2
  407812:	pxor   xmm0,xmm0
  407816:	mov    ecx,ebp
  407818:	mov    edx,DWORD PTR [rsp+0xb8]
  40781f:	movsd  xmm1,QWORD PTR [rip+0x5411]        # 40cc38 <_head_lib64_libkernel32_a-0x43c8>
  407827:	rol    WORD PTR [rsp+0xb4],0x8
  407830:	rol    WORD PTR [rsp+0xb6],0x8
  407839:	bswap  eax
  40783b:	mov    DWORD PTR [rsp+0xb0],eax
  407842:	rol    WORD PTR [rsp+0xbc],0x8
  40784b:	bswap  edx
  40784d:	rol    WORD PTR [rsp+0xbe],0x8
  407856:	cvtsi2sd xmm2,edx
  40785a:	cvtsi2sd xmm0,eax
  40785e:	mov    DWORD PTR [rsp+0xb8],edx
  407865:	mulsd  xmm2,xmm1
  407869:	mulsd  xmm1,xmm0
  40786d:	call   408610 <_head_lib64_libkernel32_a-0x89f0>
  407872:	xor    edx,edx
  407874:	mov    ecx,ebp
  407876:	cmp    WORD PTR [rsp+0xb4],0x2
  40787f:	sete   dl
  407882:	add    edx,0x1
  407885:	call   408608 <_head_lib64_libkernel32_a-0x89f8>
  40788a:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  40788f:	nop
  407890:	mov    r9,QWORD PTR [rsp+0x1a0]
  407898:	mov    edx,ebp
  40789a:	mov    r8,rsi
  40789d:	mov    rcx,rbx
  4078a0:	call   406240 <_head_lib64_libkernel32_a-0xadc0>
  4078a5:	mov    edx,DWORD PTR [rbx+0x10c]
  4078ab:	jmp    40702b <_head_lib64_libkernel32_a-0x9fd5>
  4078b0:	lea    rcx,[rdi+0x82]
  4078b7:	mov    r9,rsi
  4078ba:	mov    r8d,0x1
  4078c0:	mov    edx,0x2
  4078c5:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4078ca:	test   rax,rax
  4078cd:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4078d3:	lea    rcx,[rsp+0xb0]
  4078db:	mov    r9,rsi
  4078de:	mov    r8d,0x1
  4078e4:	mov    edx,0x1
  4078e9:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4078ee:	test   rax,rax
  4078f1:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4078f7:	rol    WORD PTR [rdi+0x82],0x8
  4078ff:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407904:	mov    rax,QWORD PTR [rsp+0x1a0]
  40790c:	lea    rdx,[rsp+0xb0]
  407914:	mov    r9,rsi
  407917:	mov    r8d,0x1
  40791d:	lea    rcx,[rsp+0x90]
  407925:	mov    QWORD PTR [rsp+0x20],rax
  40792a:	call   401960 <_head_lib64_libkernel32_a-0xf6a0>
  40792f:	mov    rdi,rax
  407932:	mov    rax,QWORD PTR [rsp+0x1a0]
  40793a:	cmp    QWORD PTR [rax],0x0
  40793e:	jne    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407944:	mov    r8d,DWORD PTR [rsp+0xb0]
  40794c:	mov    r9,rdi
  40794f:	mov    edx,0x1
  407954:	lea    rcx,[rip+0x5194]        # 40caef <_head_lib64_libkernel32_a-0x4511>
  40795b:	call   408700 <_head_lib64_libkernel32_a-0x8900>
  407960:	mov    ecx,ebp
  407962:	mov    r12,rax
  407965:	mov    rdx,rax
  407968:	call   408680 <_head_lib64_libkernel32_a-0x8980>
  40796d:	mov    rcx,r12
  407970:	call   408708 <_head_lib64_libkernel32_a-0x88f8>
  407975:	mov    rcx,rdi
  407978:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  40797d:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407982:	lea    rcx,[rdi+0x58]
  407986:	mov    r9,rsi
  407989:	mov    r8d,0x1
  40798f:	mov    edx,0x2
  407994:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  407999:	test   rax,rax
  40799c:	je     40713b <_head_lib64_libkernel32_a-0x9ec5>
  4079a2:	rol    WORD PTR [rdi+0x58],0x8
  4079a7:	mov    edx,DWORD PTR [rbx+0x10c]
  4079ad:	jmp    40702b <_head_lib64_libkernel32_a-0x9fd5>
  4079b2:	xor    edx,edx
  4079b4:	mov    r9,rsi
  4079b7:	mov    r8d,0x1
  4079bd:	mov    DWORD PTR [rsp+0xb0],0x0
  4079c8:	mov    WORD PTR [rsp+0x90],dx
  4079d0:	lea    rcx,[rsp+0x90]
  4079d8:	mov    edx,0x2
  4079dd:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4079e2:	test   rax,rax
  4079e5:	je     407be0 <_head_lib64_libkernel32_a-0x9420>
  4079eb:	movzx  eax,WORD PTR [rsp+0x90]
  4079f3:	rol    ax,0x8
  4079f7:	test   ax,ax
  4079fa:	mov    WORD PTR [rsp+0x90],ax
  407a02:	je     407025 <_head_lib64_libkernel32_a-0x9fdb>
  407a08:	cmp    ax,0xff
  407a0c:	jg     407025 <_head_lib64_libkernel32_a-0x9fdb>
  407a12:	lea    rdx,[rsp+0xb0]
  407a1a:	mov    ecx,ebp
  407a1c:	call   408668 <_head_lib64_libkernel32_a-0x8998>
  407a21:	test   rax,rax
  407a24:	mov    rdi,rax
  407a27:	je     407a40 <_head_lib64_libkernel32_a-0x95c0>
  407a29:	movsx  r8d,WORD PTR [rsp+0x90]
  407a32:	cmp    r8d,DWORD PTR [rsp+0xb0]
  407a3a:	jl     407da6 <_head_lib64_libkernel32_a-0x925a>
  407a40:	mov    rcx,rdi
  407a43:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  407a48:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407a4d:	nop    DWORD PTR [rax]
  407a50:	mov    rcx,QWORD PTR [rdi+0x60]
  407a54:	test   rcx,rcx
  407a57:	je     407a96 <_head_lib64_libkernel32_a-0x956a>
  407a59:	mov    r8d,DWORD PTR [rcx+0x8]
  407a5d:	test   r8d,r8d
  407a60:	je     407a8c <_head_lib64_libkernel32_a-0x9574>
  407a62:	xor    r12d,r12d
  407a65:	xor    ebp,ebp
  407a67:	nop    WORD PTR [rax+rax*1+0x0]
  407a70:	mov    rax,QWORD PTR [rcx]
  407a73:	add    ebp,0x1
  407a76:	mov    rcx,QWORD PTR [rax+r12*1]
  407a7a:	add    r12,0x8
  407a7e:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  407a83:	mov    rcx,QWORD PTR [rdi+0x60]
  407a87:	cmp    DWORD PTR [rcx+0x8],ebp
  407a8a:	ja     407a70 <_head_lib64_libkernel32_a-0x9590>
  407a8c:	mov    edx,0x1
  407a91:	call   4087e0 <_head_lib64_libkernel32_a-0x8820>
  407a96:	call   4087d8 <_head_lib64_libkernel32_a-0x8828>
  407a9b:	mov    ebp,DWORD PTR [rbx+0x10c]
  407aa1:	mov    QWORD PTR [rdi+0x60],rax
  407aa5:	cmp    ebp,0x1
  407aa8:	jle    407de9 <_head_lib64_libkernel32_a-0x9217>
  407aae:	lea    r13,[rsp+0xb0]
  407ab6:	mov    r14,QWORD PTR [rsp+0x1a0]
  407abe:	lea    r12,[rsp+0x90]
  407ac6:	jmp    407af7 <_head_lib64_libkernel32_a-0x9509>
  407ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  407ad0:	mov    ecx,DWORD PTR [rsp+0xb0]
  407ad7:	test   ecx,ecx
  407ad9:	js     407ae7 <_head_lib64_libkernel32_a-0x9519>
  407adb:	mov    rcx,QWORD PTR [rdi+0x60]
  407adf:	mov    rdx,rax
  407ae2:	call   4087e8 <_head_lib64_libkernel32_a-0x8818>
  407ae7:	sub    ebp,DWORD PTR [rsp+0x90]
  407aee:	cmp    ebp,0x1
  407af1:	jle    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407af7:	mov    QWORD PTR [rsp+0x20],r14
  407afc:	mov    r9,rsi
  407aff:	mov    rdx,r13
  407b02:	mov    rcx,r12
  407b05:	mov    r8d,0x1
  407b0b:	call   401ce0 <_head_lib64_libkernel32_a-0xf320>
  407b10:	cmp    QWORD PTR [r14],0x0
  407b14:	je     407ad0 <_head_lib64_libkernel32_a-0x9530>
  407b16:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  407b20:	movsxd rcx,DWORD PTR [rbx+0x10c]
  407b27:	call   4087f8 <_head_lib64_libkernel32_a-0x8808>
  407b2c:	movsxd rdx,DWORD PTR [rbx+0x10c]
  407b33:	mov    r9,rsi
  407b36:	mov    r8d,0x1
  407b3c:	mov    rcx,rax
  407b3f:	mov    rdi,rax
  407b42:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  407b47:	test   rax,rax
  407b4a:	je     407db5 <_head_lib64_libkernel32_a-0x924b>
  407b50:	movsx  r8d,WORD PTR [rbx+0x4]
  407b55:	lea    rcx,[rip+0x4f54]        # 40cab0 <_head_lib64_libkernel32_a-0x4550>
  407b5c:	mov    rdx,rbx
  407b5f:	call   4087b0 <_head_lib64_libkernel32_a-0x8850>
  407b64:	mov    r8d,DWORD PTR [rbx+0x10c]
  407b6b:	mov    r9,rdi
  407b6e:	xor    edx,edx
  407b70:	mov    rcx,rax
  407b73:	mov    r12,rax
  407b76:	call   408700 <_head_lib64_libkernel32_a-0x8900>
  407b7b:	mov    ecx,ebp
  407b7d:	mov    rdx,rax
  407b80:	mov    r13,rax
  407b83:	call   408680 <_head_lib64_libkernel32_a-0x8980>
  407b88:	mov    rcx,r13
  407b8b:	call   408708 <_head_lib64_libkernel32_a-0x88f8>
  407b90:	mov    rcx,r12
  407b93:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  407b98:	mov    rcx,rdi
  407b9b:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  407ba0:	mov    edx,DWORD PTR [rbx+0x10c]
  407ba6:	jmp    40702b <_head_lib64_libkernel32_a-0x9fd5>
  407bab:	nop    DWORD PTR [rax+rax*1+0x0]
  407bb0:	sub    cx,0x7d0
  407bb5:	mov    r9,QWORD PTR [rsp+0x1a0]
  407bbd:	mov    r8,rsi
  407bc0:	mov    edx,ebp
  407bc2:	cmp    cx,0x3e6
  407bc7:	mov    rcx,rbx
  407bca:	ja     407d21 <_head_lib64_libkernel32_a-0x92df>
  407bd0:	call   406310 <_head_lib64_libkernel32_a-0xacf0>
  407bd5:	mov    edx,DWORD PTR [rbx+0x10c]
  407bdb:	jmp    40702b <_head_lib64_libkernel32_a-0x9fd5>
  407be0:	call   QWORD PTR [rip+0x9bca]        # 4117b0 <__imp__errno>
  407be6:	mov    rcx,rsi
  407be9:	mov    edi,DWORD PTR [rax]
  407beb:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  407bf0:	mov    r8,QWORD PTR [rsp+0x1a0]
  407bf8:	mov    ecx,eax
  407bfa:	mov    edx,edi
  407bfc:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  407c01:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c10:	lea    r14,[rsp+0x70]
  407c15:	pxor   xmm3,xmm3
  407c19:	movapd xmm2,xmm3
  407c1d:	movsd  xmm1,QWORD PTR [rip+0x5023]        # 40cc48 <_head_lib64_libkernel32_a-0x43b8>
  407c25:	mov    rcx,r14
  407c28:	call   4086d8 <_head_lib64_libkernel32_a-0x8928>
  407c2d:	jmp    4074d1 <_head_lib64_libkernel32_a-0x9b2f>
  407c32:	movzx  eax,r12w
  407c36:	pxor   xmm2,xmm2
  407c3a:	pxor   xmm1,xmm1
  407c3e:	pxor   xmm0,xmm0
  407c42:	cvtsi2sd xmm2,eax
  407c46:	movzx  eax,r13w
  407c4a:	pxor   xmm3,xmm3
  407c4e:	cvtsi2sd xmm1,eax
  407c52:	movzx  eax,bx
  407c55:	cvtsi2sd xmm0,eax
  407c59:	movzx  eax,WORD PTR [rsp+0x46]
  407c5e:	movapd xmm4,xmm7
  407c62:	lea    r8,[rsp+0xb0]
  407c6a:	divsd  xmm2,xmm8
  407c6f:	mov    rcx,r8
  407c72:	mov    QWORD PTR [rsp+0x58],r8
  407c77:	lea    r14,[rsp+0x70]
  407c7c:	cvtsi2sd xmm3,eax
  407c80:	divsd  xmm3,xmm8
  407c85:	divsd  xmm1,xmm8
  407c8a:	subsd  xmm4,xmm3
  407c8e:	movapd xmm3,xmm7
  407c92:	subsd  xmm3,xmm2
  407c96:	movapd xmm2,xmm7
  407c9a:	movsd  QWORD PTR [rsp+0x20],xmm4
  407ca0:	divsd  xmm0,xmm8
  407ca5:	subsd  xmm2,xmm1
  407ca9:	movapd xmm1,xmm7
  407cad:	subsd  xmm1,xmm0
  407cb1:	call   4086f8 <_head_lib64_libkernel32_a-0x8908>
  407cb6:	mov    r8,QWORD PTR [rsp+0x58]
  407cbb:	mov    rdx,r14
  407cbe:	mov    rcx,r8
  407cc1:	call   4086f0 <_head_lib64_libkernel32_a-0x8910>
  407cc6:	jmp    4074d1 <_head_lib64_libkernel32_a-0x9b2f>
  407ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  407cd0:	movzx  eax,r12w
  407cd4:	pxor   xmm3,xmm3
  407cd8:	pxor   xmm2,xmm2
  407cdc:	pxor   xmm1,xmm1
  407ce0:	cvtsi2sd xmm3,eax
  407ce4:	movzx  eax,r13w
  407ce8:	cvtsi2sd xmm2,eax
  407cec:	movzx  eax,bx
  407cef:	cvtsi2sd xmm1,eax
  407cf3:	lea    r14,[rsp+0x70]
  407cf8:	divsd  xmm3,xmm9
  407cfd:	mov    rcx,r14
  407d00:	divsd  xmm2,xmm9
  407d05:	divsd  xmm1,xmm9
  407d0a:	call   4086d8 <_head_lib64_libkernel32_a-0x8928>
  407d0f:	jmp    4074d1 <_head_lib64_libkernel32_a-0x9b2f>
  407d14:	mov    rbx,QWORD PTR [rsp+0x180]
  407d1c:	jmp    40713b <_head_lib64_libkernel32_a-0x9ec5>
  407d21:	call   406240 <_head_lib64_libkernel32_a-0xadc0>
  407d26:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d30:	call   QWORD PTR [rip+0x9a7a]        # 4117b0 <__imp__errno>
  407d36:	mov    rcx,rsi
  407d39:	mov    ebx,DWORD PTR [rax]
  407d3b:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  407d40:	mov    r8,QWORD PTR [rsp+0x1a0]
  407d48:	mov    ecx,eax
  407d4a:	mov    edx,ebx
  407d4c:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  407d51:	mov    eax,0xffffffff
  407d56:	jmp    40704d <_head_lib64_libkernel32_a-0x9fb3>
  407d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d60:	mov    r9,QWORD PTR [rsp+0xb0]
  407d68:	mov    edx,0x1
  407d6d:	lea    rcx,[rip+0x4db0]        # 40cb24 <_head_lib64_libkernel32_a-0x44dc>
  407d74:	call   408700 <_head_lib64_libkernel32_a-0x8900>
  407d79:	mov    ecx,ebp
  407d7b:	mov    rdi,rax
  407d7e:	mov    rdx,rax
  407d81:	call   408680 <_head_lib64_libkernel32_a-0x8980>
  407d86:	mov    rcx,rdi
  407d89:	call   408708 <_head_lib64_libkernel32_a-0x88f8>
  407d8e:	jmp    407008 <_head_lib64_libkernel32_a-0x9ff8>
  407d93:	mov    rbx,QWORD PTR [rsp+0x180]
  407d9b:	mov    edx,DWORD PTR [rbx+0x10c]
  407da1:	jmp    40702b <_head_lib64_libkernel32_a-0x9fd5>
  407da6:	mov    rdx,rax
  407da9:	mov    ecx,ebp
  407dab:	call   408620 <_head_lib64_libkernel32_a-0x89e0>
  407db0:	jmp    407a40 <_head_lib64_libkernel32_a-0x95c0>
  407db5:	call   QWORD PTR [rip+0x99f5]        # 4117b0 <__imp__errno>
  407dbb:	mov    rcx,rsi
  407dbe:	mov    ebp,DWORD PTR [rax]
  407dc0:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  407dc5:	mov    r8,QWORD PTR [rsp+0x1a0]
  407dcd:	mov    ecx,eax
  407dcf:	mov    edx,ebp
  407dd1:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  407dd6:	mov    rcx,rdi
  407dd9:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  407dde:	mov    edx,DWORD PTR [rbx+0x10c]
  407de4:	jmp    40702b <_head_lib64_libkernel32_a-0x9fd5>
  407de9:	mov    edx,ebp
  407deb:	jmp    40702b <_head_lib64_libkernel32_a-0x9fd5>
  407df0:	call   QWORD PTR [rip+0x99ba]        # 4117b0 <__imp__errno>
  407df6:	mov    rcx,rsi
  407df9:	mov    ebp,DWORD PTR [rax]
  407dfb:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  407e00:	mov    r8,QWORD PTR [rsp+0x1a0]
  407e08:	mov    ecx,eax
  407e0a:	mov    edx,ebp
  407e0c:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  407e11:	jmp    407a40 <_head_lib64_libkernel32_a-0x95c0>
  407e16:	call   QWORD PTR [rip+0x9994]        # 4117b0 <__imp__errno>
  407e1c:	mov    rcx,rsi
  407e1f:	mov    edi,DWORD PTR [rax]
  407e21:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  407e26:	mov    r8,QWORD PTR [rsp+0x1a0]
  407e2e:	mov    ecx,eax
  407e30:	mov    edx,edi
  407e32:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  407e37:	mov    rcx,r13
  407e3a:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  407e3f:	jmp    407025 <_head_lib64_libkernel32_a-0x9fdb>
  407e44:	xchg   ax,ax
  407e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e50:	push   r12
  407e52:	push   rbp
  407e53:	push   rdi
  407e54:	push   rsi
  407e55:	push   rbx
  407e56:	sub    rsp,0x20
  407e5a:	mov    r12d,edx
  407e5d:	mov    edx,DWORD PTR [rcx+0x108]
  407e63:	mov    rdi,r8
  407e66:	mov    rbx,rcx
  407e69:	xor    r8d,r8d
  407e6c:	mov    rcx,rdi
  407e6f:	mov    rbp,r9
  407e72:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  407e77:	test   eax,eax
  407e79:	js     407ee0 <_head_lib64_libkernel32_a-0x9120>
  407e7b:	movzx  eax,WORD PTR [rbx+0x4]
  407e7f:	cmp    ax,0x409
  407e83:	je     407ec0 <_head_lib64_libkernel32_a-0x9140>
  407e85:	xor    esi,esi
  407e87:	cmp    ax,0x40c
  407e8b:	je     407ec0 <_head_lib64_libkernel32_a-0x9140>
  407e8d:	mov    ecx,DWORD PTR [rbx+0x10c]
  407e93:	xor    r8d,r8d
  407e96:	mov    edx,ecx
  407e98:	add    ecx,DWORD PTR [rbx+0x108]
  407e9e:	and    edx,0x1
  407ea1:	add    edx,ecx
  407ea3:	mov    rcx,rdi
  407ea6:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  407eab:	test   eax,eax
  407ead:	js     407ee0 <_head_lib64_libkernel32_a-0x9120>
  407eaf:	mov    eax,esi
  407eb1:	add    rsp,0x20
  407eb5:	pop    rbx
  407eb6:	pop    rsi
  407eb7:	pop    rdi
  407eb8:	pop    rbp
  407eb9:	pop    r12
  407ebb:	ret    
  407ebc:	nop    DWORD PTR [rax+0x0]
  407ec0:	lea    rcx,[rbx+0x4]
  407ec4:	mov    r9,rbp
  407ec7:	mov    r8,rdi
  407eca:	mov    edx,r12d
  407ecd:	mov    esi,0x1
  407ed2:	call   406840 <_head_lib64_libkernel32_a-0xa7c0>
  407ed7:	jmp    407e8d <_head_lib64_libkernel32_a-0x9173>
  407ed9:	nop    DWORD PTR [rax+0x0]
  407ee0:	call   QWORD PTR [rip+0x98ca]        # 4117b0 <__imp__errno>
  407ee6:	mov    rcx,rdi
  407ee9:	mov    ebx,DWORD PTR [rax]
  407eeb:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  407ef0:	mov    r8,rbp
  407ef3:	mov    ecx,eax
  407ef5:	mov    edx,ebx
  407ef7:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  407efc:	mov    eax,0xffffffff
  407f01:	jmp    407eb1 <_head_lib64_libkernel32_a-0x914f>
  407f03:	nop
  407f04:	nop
  407f05:	nop
  407f06:	nop
  407f07:	nop
  407f08:	nop
  407f09:	nop
  407f0a:	nop
  407f0b:	nop
  407f0c:	nop
  407f0d:	nop
  407f0e:	nop
  407f0f:	nop
  407f10:	push   rdi
  407f11:	push   rsi
  407f12:	push   rbx
  407f13:	sub    rsp,0x20
  407f17:	mov    r9,rdx
  407f1a:	mov    rsi,rdx
  407f1d:	mov    rdi,r8
  407f20:	mov    edx,0x4
  407f25:	mov    r8d,0x1
  407f2b:	mov    rbx,rcx
  407f2e:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  407f33:	test   rax,rax
  407f36:	je     407f90 <_head_lib64_libkernel32_a-0x9070>
  407f38:	lea    rcx,[rbx+0x4]
  407f3c:	mov    r9,rsi
  407f3f:	mov    r8d,0x1
  407f45:	mov    edx,0x4
  407f4a:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  407f4f:	test   rax,rax
  407f52:	je     407f90 <_head_lib64_libkernel32_a-0x9070>
  407f54:	lea    rcx,[rbx+0xc]
  407f58:	mov    r9,rsi
  407f5b:	mov    r8d,0x1
  407f61:	mov    edx,0x4
  407f66:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  407f6b:	test   rax,rax
  407f6e:	je     407f90 <_head_lib64_libkernel32_a-0x9070>
  407f70:	mov    eax,DWORD PTR [rbx+0xc]
  407f73:	mov    rcx,rsi
  407f76:	bswap  eax
  407f78:	mov    DWORD PTR [rbx+0xc],eax
  407f7b:	call   409e50 <_head_lib64_libkernel32_a-0x71b0>
  407f80:	mov    DWORD PTR [rbx+0x8],eax
  407f83:	xor    eax,eax
  407f85:	add    rsp,0x20
  407f89:	pop    rbx
  407f8a:	pop    rsi
  407f8b:	pop    rdi
  407f8c:	ret    
  407f8d:	nop    DWORD PTR [rax]
  407f90:	call   QWORD PTR [rip+0x981a]        # 4117b0 <__imp__errno>
  407f96:	mov    rcx,rsi
  407f99:	mov    ebx,DWORD PTR [rax]
  407f9b:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  407fa0:	mov    r8,rdi
  407fa3:	mov    ecx,eax
  407fa5:	mov    edx,ebx
  407fa7:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  407fac:	mov    eax,0xffffffff
  407fb1:	add    rsp,0x20
  407fb5:	pop    rbx
  407fb6:	pop    rsi
  407fb7:	pop    rdi
  407fb8:	ret    
  407fb9:	nop    DWORD PTR [rax+0x0]
  407fc0:	push   r12
  407fc2:	push   rbp
  407fc3:	push   rdi
  407fc4:	push   rsi
  407fc5:	push   rbx
  407fc6:	sub    rsp,0x70
  407fca:	mov    rbp,rdx
  407fcd:	mov    edx,DWORD PTR [rcx+0x8]
  407fd0:	mov    rsi,r8
  407fd3:	mov    rbx,rcx
  407fd6:	xor    r8d,r8d
  407fd9:	mov    rcx,rsi
  407fdc:	mov    rdi,r9
  407fdf:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  407fe4:	test   eax,eax
  407fe6:	js     408400 <_head_lib64_libkernel32_a-0x8c00>
  407fec:	mov    r8d,0x4
  407ff2:	mov    rcx,rbx
  407ff5:	lea    rdx,[rip+0x4c64]        # 40cc60 <_head_lib64_libkernel32_a-0x43a0>
  407ffc:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408001:	test   eax,eax
  408003:	je     408030 <_head_lib64_libkernel32_a-0x8fd0>
  408005:	mov    edx,DWORD PTR [rbx+0xc]
  408008:	xor    r8d,r8d
  40800b:	mov    rcx,rsi
  40800e:	add    edx,DWORD PTR [rbx+0x8]
  408011:	call   409e58 <_head_lib64_libkernel32_a-0x71a8>
  408016:	test   eax,eax
  408018:	js     408400 <_head_lib64_libkernel32_a-0x8c00>
  40801e:	xor    eax,eax
  408020:	add    rsp,0x70
  408024:	pop    rbx
  408025:	pop    rsi
  408026:	pop    rdi
  408027:	pop    rbp
  408028:	pop    r12
  40802a:	ret    
  40802b:	nop    DWORD PTR [rax+rax*1+0x0]
  408030:	lea    r12,[rbx+0x4]
  408034:	mov    r8d,0x4
  40803a:	lea    rdx,[rip+0x4c24]        # 40cc65 <_head_lib64_libkernel32_a-0x439b>
  408041:	mov    rcx,r12
  408044:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408049:	test   eax,eax
  40804b:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  408051:	mov    r8d,0x4
  408057:	mov    rcx,r12
  40805a:	lea    rdx,[rip+0x4c09]        # 40cc6a <_head_lib64_libkernel32_a-0x4396>
  408061:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408066:	test   eax,eax
  408068:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  40806e:	mov    r8d,0x4
  408074:	mov    rcx,r12
  408077:	lea    rdx,[rip+0x4bf1]        # 40cc6f <_head_lib64_libkernel32_a-0x4391>
  40807e:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408083:	test   eax,eax
  408085:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  40808b:	mov    r8d,0x4
  408091:	mov    rcx,r12
  408094:	lea    rdx,[rip+0x4bd9]        # 40cc74 <_head_lib64_libkernel32_a-0x438c>
  40809b:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4080a0:	test   eax,eax
  4080a2:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  4080a8:	mov    r8d,0x4
  4080ae:	mov    rcx,r12
  4080b1:	lea    rdx,[rip+0x4bc1]        # 40cc79 <_head_lib64_libkernel32_a-0x4387>
  4080b8:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4080bd:	test   eax,eax
  4080bf:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  4080c5:	mov    r8d,0x4
  4080cb:	mov    rcx,r12
  4080ce:	lea    rdx,[rip+0x4ba9]        # 40cc7e <_head_lib64_libkernel32_a-0x4382>
  4080d5:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4080da:	test   eax,eax
  4080dc:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  4080e2:	mov    r8d,0x4
  4080e8:	mov    rcx,r12
  4080eb:	lea    rdx,[rip+0x4b91]        # 40cc83 <_head_lib64_libkernel32_a-0x437d>
  4080f2:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4080f7:	test   eax,eax
  4080f9:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  4080ff:	mov    r8d,0x4
  408105:	mov    rcx,r12
  408108:	lea    rdx,[rip+0x4b79]        # 40cc88 <_head_lib64_libkernel32_a-0x4378>
  40810f:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408114:	test   eax,eax
  408116:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  40811c:	mov    r8d,0x4
  408122:	mov    rcx,r12
  408125:	lea    rdx,[rip+0x4b61]        # 40cc8d <_head_lib64_libkernel32_a-0x4373>
  40812c:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408131:	test   eax,eax
  408133:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  408139:	mov    r8d,0x4
  40813f:	mov    rcx,r12
  408142:	lea    rdx,[rip+0x4b49]        # 40cc92 <_head_lib64_libkernel32_a-0x436e>
  408149:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  40814e:	test   eax,eax
  408150:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  408156:	mov    r8d,0x4
  40815c:	mov    rcx,r12
  40815f:	lea    rdx,[rip+0x4b31]        # 40cc97 <_head_lib64_libkernel32_a-0x4369>
  408166:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  40816b:	test   eax,eax
  40816d:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  408173:	mov    r8d,0x4
  408179:	mov    rcx,r12
  40817c:	lea    rdx,[rip+0x4b19]        # 40cc9c <_head_lib64_libkernel32_a-0x4364>
  408183:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408188:	test   eax,eax
  40818a:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  408190:	mov    r8d,0x4
  408196:	mov    rcx,r12
  408199:	lea    rdx,[rip+0x4b01]        # 40cca1 <_head_lib64_libkernel32_a-0x435f>
  4081a0:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4081a5:	test   eax,eax
  4081a7:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  4081ad:	mov    r8d,0x4
  4081b3:	mov    rcx,r12
  4081b6:	lea    rdx,[rip+0x4ae9]        # 40cca6 <_head_lib64_libkernel32_a-0x435a>
  4081bd:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4081c2:	test   eax,eax
  4081c4:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  4081ca:	mov    r8d,0x4
  4081d0:	mov    rcx,r12
  4081d3:	lea    rdx,[rip+0x4ad1]        # 40ccab <_head_lib64_libkernel32_a-0x4355>
  4081da:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4081df:	test   eax,eax
  4081e1:	je     4083f0 <_head_lib64_libkernel32_a-0x8c10>
  4081e7:	mov    r8d,0x4
  4081ed:	mov    rcx,r12
  4081f0:	lea    rdx,[rip+0x4ab9]        # 40ccb0 <_head_lib64_libkernel32_a-0x4350>
  4081f7:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4081fc:	test   eax,eax
  4081fe:	je     408005 <_head_lib64_libkernel32_a-0x8ffb>
  408204:	mov    r8d,0x4
  40820a:	mov    rcx,r12
  40820d:	lea    rdx,[rip+0x4aa1]        # 40ccb5 <_head_lib64_libkernel32_a-0x434b>
  408214:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408219:	test   eax,eax
  40821b:	je     408005 <_head_lib64_libkernel32_a-0x8ffb>
  408221:	mov    r8d,0x4
  408227:	mov    rcx,r12
  40822a:	lea    rdx,[rip+0x4a89]        # 40ccba <_head_lib64_libkernel32_a-0x4346>
  408231:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408236:	test   eax,eax
  408238:	je     408005 <_head_lib64_libkernel32_a-0x8ffb>
  40823e:	mov    r8d,0x4
  408244:	mov    rcx,r12
  408247:	lea    rdx,[rip+0x4a71]        # 40ccbf <_head_lib64_libkernel32_a-0x4341>
  40824e:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408253:	test   eax,eax
  408255:	je     408005 <_head_lib64_libkernel32_a-0x8ffb>
  40825b:	mov    r8d,0x4
  408261:	mov    rcx,r12
  408264:	lea    rdx,[rip+0x4a59]        # 40ccc4 <_head_lib64_libkernel32_a-0x433c>
  40826b:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408270:	test   eax,eax
  408272:	je     408005 <_head_lib64_libkernel32_a-0x8ffb>
  408278:	mov    r8d,0x4
  40827e:	mov    rcx,r12
  408281:	lea    rdx,[rip+0x4a41]        # 40ccc9 <_head_lib64_libkernel32_a-0x4337>
  408288:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  40828d:	mov    r8d,0x4
  408293:	mov    rcx,r12
  408296:	lea    rdx,[rip+0x4a31]        # 40ccce <_head_lib64_libkernel32_a-0x4332>
  40829d:	test   eax,eax
  40829f:	je     4084ab <_head_lib64_libkernel32_a-0x8b55>
  4082a5:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4082aa:	test   eax,eax
  4082ac:	jne    408426 <_head_lib64_libkernel32_a-0x8bda>
  4082b2:	lea    rcx,[rsp+0x38]
  4082b7:	mov    r9,rsi
  4082ba:	mov    r8d,0x1
  4082c0:	mov    edx,0x2
  4082c5:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4082ca:	test   rax,rax
  4082cd:	je     4083cb <_head_lib64_libkernel32_a-0x8c35>
  4082d3:	lea    rcx,[rsp+0x40]
  4082d8:	mov    r9,rsi
  4082db:	mov    r8d,0x1
  4082e1:	mov    edx,0x8
  4082e6:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4082eb:	test   rax,rax
  4082ee:	je     4083cb <_head_lib64_libkernel32_a-0x8c35>
  4082f4:	lea    rcx,[rsp+0x48]
  4082f9:	mov    r9,rsi
  4082fc:	mov    r8d,0x1
  408302:	mov    edx,0x8
  408307:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40830c:	test   rax,rax
  40830f:	je     4083cb <_head_lib64_libkernel32_a-0x8c35>
  408315:	lea    rcx,[rsp+0x50]
  40831a:	mov    r9,rsi
  40831d:	mov    r8d,0x1
  408323:	mov    edx,0x8
  408328:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40832d:	test   rax,rax
  408330:	je     4083cb <_head_lib64_libkernel32_a-0x8c35>
  408336:	lea    rcx,[rsp+0x58]
  40833b:	mov    r9,rsi
  40833e:	mov    r8d,0x1
  408344:	mov    edx,0x8
  408349:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40834e:	test   rax,rax
  408351:	je     4083cb <_head_lib64_libkernel32_a-0x8c35>
  408353:	lea    rcx,[rsp+0x60]
  408358:	mov    r9,rsi
  40835b:	mov    r8d,0x1
  408361:	mov    edx,0x8
  408366:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  40836b:	test   rax,rax
  40836e:	je     4083cb <_head_lib64_libkernel32_a-0x8c35>
  408370:	lea    rcx,[rsp+0x68]
  408375:	mov    r9,rsi
  408378:	mov    r8d,0x1
  40837e:	mov    edx,0x8
  408383:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  408388:	test   rax,rax
  40838b:	je     4083cb <_head_lib64_libkernel32_a-0x8c35>
  40838d:	lea    rcx,[rsp+0x3a]
  408392:	mov    r9,rsi
  408395:	mov    r8d,0x1
  40839b:	mov    edx,0x2
  4083a0:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4083a5:	test   rax,rax
  4083a8:	je     4083cb <_head_lib64_libkernel32_a-0x8c35>
  4083aa:	lea    rcx,[rsp+0x3c]
  4083af:	mov    r9,rsi
  4083b2:	mov    r8d,0x1
  4083b8:	mov    edx,0x4
  4083bd:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4083c2:	test   rax,rax
  4083c5:	jne    408005 <_head_lib64_libkernel32_a-0x8ffb>
  4083cb:	call   QWORD PTR [rip+0x93df]        # 4117b0 <__imp__errno>
  4083d1:	mov    rcx,rsi
  4083d4:	mov    ebp,DWORD PTR [rax]
  4083d6:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  4083db:	mov    r8,rdi
  4083de:	mov    ecx,eax
  4083e0:	mov    edx,ebp
  4083e2:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  4083e7:	jmp    408005 <_head_lib64_libkernel32_a-0x8ffb>
  4083ec:	nop    DWORD PTR [rax+0x0]
  4083f0:	mov    DWORD PTR [rbp+0x0],0x1
  4083f7:	jmp    408005 <_head_lib64_libkernel32_a-0x8ffb>
  4083fc:	nop    DWORD PTR [rax+0x0]
  408400:	call   QWORD PTR [rip+0x93aa]        # 4117b0 <__imp__errno>
  408406:	mov    rcx,rsi
  408409:	mov    ebx,DWORD PTR [rax]
  40840b:	call   409e78 <_head_lib64_libkernel32_a-0x7188>
  408410:	mov    r8,rdi
  408413:	mov    ecx,eax
  408415:	mov    edx,ebx
  408417:	call   4018d0 <_head_lib64_libkernel32_a-0xf730>
  40841c:	mov    eax,0xffffffff
  408421:	jmp    408020 <_head_lib64_libkernel32_a-0x8fe0>
  408426:	mov    r8d,0x4
  40842c:	mov    rcx,r12
  40842f:	lea    rdx,[rip+0x489d]        # 40ccd3 <_head_lib64_libkernel32_a-0x432d>
  408436:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  40843b:	test   eax,eax
  40843d:	je     4084f3 <_head_lib64_libkernel32_a-0x8b0d>
  408443:	mov    r8d,0x4
  408449:	mov    rcx,r12
  40844c:	lea    rdx,[rip+0x4885]        # 40ccd8 <_head_lib64_libkernel32_a-0x4328>
  408453:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408458:	test   eax,eax
  40845a:	je     4084bd <_head_lib64_libkernel32_a-0x8b43>
  40845c:	mov    r8d,0x4
  408462:	mov    rcx,r12
  408465:	lea    rdx,[rip+0x4871]        # 40ccdd <_head_lib64_libkernel32_a-0x4323>
  40846c:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  408471:	test   eax,eax
  408473:	jne    408005 <_head_lib64_libkernel32_a-0x8ffb>
  408479:	lea    rcx,[rsp+0x68]
  40847e:	mov    r9,rsi
  408481:	mov    r8d,0x1
  408487:	mov    edx,0x4
  40848c:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  408491:	test   rax,rax
  408494:	je     4083cb <_head_lib64_libkernel32_a-0x8c35>
  40849a:	mov    eax,DWORD PTR [rsp+0x68]
  40849e:	bswap  eax
  4084a0:	mov    BYTE PTR [rbp+0x84],al
  4084a6:	jmp    408005 <_head_lib64_libkernel32_a-0x8ffb>
  4084ab:	call   409e38 <_head_lib64_libkernel32_a-0x71c8>
  4084b0:	test   eax,eax
  4084b2:	jne    408005 <_head_lib64_libkernel32_a-0x8ffb>
  4084b8:	jmp    4082b2 <_head_lib64_libkernel32_a-0x8d4e>
  4084bd:	lea    rcx,[rbp+0x80]
  4084c4:	mov    r9,rsi
  4084c7:	mov    r8d,0x1
  4084cd:	mov    edx,0x4
  4084d2:	call   409e68 <_head_lib64_libkernel32_a-0x7198>
  4084d7:	test   rax,rax
  4084da:	je     4083cb <_head_lib64_libkernel32_a-0x8c35>
  4084e0:	mov    eax,DWORD PTR [rbp+0x80]
  4084e6:	bswap  eax
  4084e8:	mov    DWORD PTR [rbp+0x80],eax
  4084ee:	jmp    408005 <_head_lib64_libkernel32_a-0x8ffb>
  4084f3:	mov    rcx,QWORD PTR [rbp+0x30]
  4084f7:	test   rcx,rcx
  4084fa:	je     408501 <_head_lib64_libkernel32_a-0x8aff>
  4084fc:	call   408810 <_head_lib64_libkernel32_a-0x87f0>
  408501:	lea    rdx,[rsp+0x68]
  408506:	mov    QWORD PTR [rsp+0x20],rdi
  40850b:	mov    r9,rsi
  40850e:	mov    r8d,0x4
  408514:	lea    rcx,[rsp+0x60]
  408519:	call   401ce0 <_head_lib64_libkernel32_a-0xf320>
  40851e:	mov    QWORD PTR [rbp+0x30],rax
  408522:	jmp    408005 <_head_lib64_libkernel32_a-0x8ffb>
  408527:	nop
  408528:	nop
  408529:	nop
  40852a:	nop
  40852b:	nop
  40852c:	nop
  40852d:	nop
  40852e:	nop
  40852f:	nop
  408530:	jmp    QWORD PTR [rip+0x94d2]        # 411a08 <__imp_gimp_vectors_stroke_new_from_points>
  408536:	nop
  408537:	nop
  408538:	jmp    QWORD PTR [rip+0x94c2]        # 411a00 <__imp_gimp_vectors_new>
  40853e:	nop
  40853f:	nop
  408540:	jmp    QWORD PTR [rip+0x94b2]        # 4119f8 <__imp_gimp_run_procedure>
  408546:	nop
  408547:	nop
  408548:	jmp    QWORD PTR [rip+0x94a2]        # 4119f0 <__imp_gimp_register_thumbnail_loader>
  40854e:	nop
  40854f:	nop
  408550:	jmp    QWORD PTR [rip+0x9492]        # 4119e8 <__imp_gimp_register_magic_load_handler>
  408556:	nop
  408557:	nop
  408558:	jmp    QWORD PTR [rip+0x9482]        # 4119e0 <__imp_gimp_register_file_handler_mime>
  40855e:	nop
  40855f:	nop
  408560:	jmp    QWORD PTR [rip+0x9472]        # 4119d8 <__imp_gimp_progress_update>
  408566:	nop
  408567:	nop
  408568:	jmp    QWORD PTR [rip+0x9462]        # 4119d0 <__imp_gimp_progress_init_printf>
  40856e:	nop
  40856f:	nop
  408570:	jmp    QWORD PTR [rip+0x9452]        # 4119c8 <__imp_gimp_pixel_rgn_set_rect>
  408576:	nop
  408577:	nop
  408578:	jmp    QWORD PTR [rip+0x9442]        # 4119c0 <__imp_gimp_pixel_rgn_init>
  40857e:	nop
  40857f:	nop
  408580:	jmp    QWORD PTR [rip+0x9432]        # 4119b8 <__imp_gimp_main>
  408586:	nop
  408587:	nop
  408588:	jmp    QWORD PTR [rip+0x9422]        # 4119b0 <__imp_gimp_layer_set_opacity>
  40858e:	nop
  40858f:	nop
  408590:	jmp    QWORD PTR [rip+0x9412]        # 4119a8 <__imp_gimp_layer_set_offsets>
  408596:	nop
  408597:	nop
  408598:	jmp    QWORD PTR [rip+0x9402]        # 4119a0 <__imp_gimp_layer_set_mode>
  40859e:	nop
  40859f:	nop
  4085a0:	jmp    QWORD PTR [rip+0x93f2]        # 411998 <__imp_gimp_layer_set_lock_alpha>
  4085a6:	nop
  4085a7:	nop
  4085a8:	jmp    QWORD PTR [rip+0x93e2]        # 411990 <__imp_gimp_layer_set_apply_mask>
  4085ae:	nop
  4085af:	nop
  4085b0:	jmp    QWORD PTR [rip+0x93d2]        # 411988 <__imp_gimp_layer_new>
  4085b6:	nop
  4085b7:	nop
  4085b8:	jmp    QWORD PTR [rip+0x93c2]        # 411980 <__imp_gimp_layer_group_new>
  4085be:	nop
  4085bf:	nop
  4085c0:	jmp    QWORD PTR [rip+0x93b2]        # 411978 <__imp_gimp_layer_create_mask>
  4085c6:	nop
  4085c7:	nop
  4085c8:	jmp    QWORD PTR [rip+0x93a2]        # 411970 <__imp_gimp_layer_add_mask>
  4085ce:	nop
  4085cf:	nop
  4085d0:	jmp    QWORD PTR [rip+0x9392]        # 411968 <__imp_gimp_item_set_visible>
  4085d6:	nop
  4085d7:	nop
  4085d8:	jmp    QWORD PTR [rip+0x9382]        # 411960 <__imp_gimp_item_set_tattoo>
  4085de:	nop
  4085df:	nop
  4085e0:	jmp    QWORD PTR [rip+0x9372]        # 411958 <__imp_gimp_item_set_name>
  4085e6:	nop
  4085e7:	nop
  4085e8:	jmp    QWORD PTR [rip+0x9362]        # 411950 <__imp_gimp_install_procedure>
  4085ee:	nop
  4085ef:	nop
  4085f0:	jmp    QWORD PTR [rip+0x9352]        # 411948 <__imp_gimp_image_width>
  4085f6:	nop
  4085f7:	nop
  4085f8:	jmp    QWORD PTR [rip+0x9342]        # 411940 <__imp_gimp_image_undo_enable>
  4085fe:	nop
  4085ff:	nop
  408600:	jmp    QWORD PTR [rip+0x9332]        # 411938 <__imp_gimp_image_undo_disable>
  408606:	nop
  408607:	nop
  408608:	jmp    QWORD PTR [rip+0x9322]        # 411930 <__imp_gimp_image_set_unit>
  40860e:	nop
  40860f:	nop
  408610:	jmp    QWORD PTR [rip+0x9312]        # 411928 <__imp_gimp_image_set_resolution>
  408616:	nop
  408617:	nop
  408618:	jmp    QWORD PTR [rip+0x9302]        # 411920 <__imp_gimp_image_set_filename>
  40861e:	nop
  40861f:	nop
  408620:	jmp    QWORD PTR [rip+0x92f2]        # 411918 <__imp_gimp_image_set_colormap>
  408626:	nop
  408627:	nop
  408628:	jmp    QWORD PTR [rip+0x92e2]        # 411910 <__imp_gimp_image_set_active_layer>
  40862e:	nop
  40862f:	nop
  408630:	jmp    QWORD PTR [rip+0x92d2]        # 411908 <__imp_gimp_image_resize>
  408636:	nop
  408637:	nop
  408638:	jmp    QWORD PTR [rip+0x92c2]        # 411900 <__imp_gimp_image_new>
  40863e:	nop
  40863f:	nop
  408640:	jmp    QWORD PTR [rip+0x92b2]        # 4118f8 <__imp_gimp_image_insert_vectors>
  408646:	nop
  408647:	nop
  408648:	jmp    QWORD PTR [rip+0x92a2]        # 4118f0 <__imp_gimp_image_insert_layer>
  40864e:	nop
  40864f:	nop
  408650:	jmp    QWORD PTR [rip+0x9292]        # 4118e8 <__imp_gimp_image_insert_channel>
  408656:	nop
  408657:	nop
  408658:	jmp    QWORD PTR [rip+0x9282]        # 4118e0 <__imp_gimp_image_height>
  40865e:	nop
  40865f:	nop
  408660:	jmp    QWORD PTR [rip+0x9272]        # 4118d8 <__imp_gimp_image_get_layers>
  408666:	nop
  408667:	nop
  408668:	jmp    QWORD PTR [rip+0x9262]        # 4118d0 <__imp_gimp_image_get_colormap>
  40866e:	nop
  40866f:	nop
  408670:	jmp    QWORD PTR [rip+0x9252]        # 4118c8 <__imp_gimp_image_delete>
  408676:	nop
  408677:	nop
  408678:	jmp    QWORD PTR [rip+0x9242]        # 4118c0 <__imp_gimp_image_clean_all>
  40867e:	nop
  40867f:	nop
  408680:	jmp    QWORD PTR [rip+0x9232]        # 4118b8 <__imp_gimp_image_attach_parasite>
  408686:	nop
  408687:	nop
  408688:	jmp    QWORD PTR [rip+0x9222]        # 4118b0 <__imp_gimp_image_add_vguide>
  40868e:	nop
  40868f:	nop
  408690:	jmp    QWORD PTR [rip+0x9212]        # 4118a8 <__imp_gimp_image_add_hguide>
  408696:	nop
  408697:	nop
  408698:	jmp    QWORD PTR [rip+0x9202]        # 4118a0 <__imp_gimp_drawable_get>
  40869e:	nop
  40869f:	nop
  4086a0:	jmp    QWORD PTR [rip+0x91f2]        # 411898 <__imp_gimp_drawable_flush>
  4086a6:	nop
  4086a7:	nop
  4086a8:	jmp    QWORD PTR [rip+0x91e2]        # 411890 <__imp_gimp_drawable_fill>
  4086ae:	nop
  4086af:	nop
  4086b0:	jmp    QWORD PTR [rip+0x91d2]        # 411888 <__imp_gimp_drawable_detach>
  4086b6:	nop
  4086b7:	nop
  4086b8:	jmp    QWORD PTR [rip+0x91c2]        # 411880 <__imp_gimp_destroy_params>
  4086be:	nop
  4086bf:	nop
  4086c0:	jmp    QWORD PTR [rip+0x91b2]        # 411878 <__imp_gimp_channel_new>
  4086c6:	nop
  4086c7:	nop
  4086c8:	jmp    QWORD PTR [rip+0x93aa]        # 411a78 <__imp_gimp_rgba_set>
  4086ce:	nop
  4086cf:	nop
  4086d0:	jmp    QWORD PTR [rip+0x939a]        # 411a70 <__imp_gimp_rgb_set_alpha>
  4086d6:	nop
  4086d7:	nop
  4086d8:	jmp    QWORD PTR [rip+0x938a]        # 411a68 <__imp_gimp_rgb_set>
  4086de:	nop
  4086df:	nop
  4086e0:	jmp    QWORD PTR [rip+0x937a]        # 411a60 <__imp_gimp_hsv_to_rgb>
  4086e6:	nop
  4086e7:	nop
  4086e8:	jmp    QWORD PTR [rip+0x936a]        # 411a58 <__imp_gimp_hsv_set>
  4086ee:	nop
  4086ef:	nop
  4086f0:	jmp    QWORD PTR [rip+0x935a]        # 411a50 <__imp_gimp_cmyk_to_rgb>
  4086f6:	nop
  4086f7:	nop
  4086f8:	jmp    QWORD PTR [rip+0x934a]        # 411a48 <__imp_gimp_cmyk_set>
  4086fe:	nop
  4086ff:	nop
  408700:	jmp    QWORD PTR [rip+0x9332]        # 411a38 <__imp_gimp_parasite_new>
  408706:	nop
  408707:	nop
  408708:	jmp    QWORD PTR [rip+0x9322]        # 411a30 <__imp_gimp_parasite_free>
  40870e:	nop
  40870f:	nop
  408710:	jmp    QWORD PTR [rip+0x9312]        # 411a28 <__imp_gimp_locale_directory>
  408716:	nop
  408717:	nop
  408718:	jmp    QWORD PTR [rip+0x9302]        # 411a20 <__imp_gimp_filename_to_utf8>
  40871e:	nop
  40871f:	nop
  408720:	jmp    QWORD PTR [rip+0x92f2]        # 411a18 <__imp_gimp_any_to_utf8>
  408726:	nop
  408727:	nop
  408728:	jmp    QWORD PTR [rip+0x94ea]        # 411c18 <__imp_jpeg_stdio_src>
  40872e:	nop
  40872f:	nop
  408730:	jmp    QWORD PTR [rip+0x94da]        # 411c10 <__imp_jpeg_std_error>
  408736:	nop
  408737:	nop
  408738:	jmp    QWORD PTR [rip+0x94ca]        # 411c08 <__imp_jpeg_start_decompress>
  40873e:	nop
  40873f:	nop
  408740:	jmp    QWORD PTR [rip+0x94ba]        # 411c00 <__imp_jpeg_read_scanlines>
  408746:	nop
  408747:	nop
  408748:	jmp    QWORD PTR [rip+0x94aa]        # 411bf8 <__imp_jpeg_read_header>
  40874e:	nop
  40874f:	nop
  408750:	jmp    QWORD PTR [rip+0x949a]        # 411bf0 <__imp_jpeg_finish_decompress>
  408756:	nop
  408757:	nop
  408758:	jmp    QWORD PTR [rip+0x948a]        # 411be8 <__imp_jpeg_destroy_decompress>
  40875e:	nop
  40875f:	nop
  408760:	jmp    QWORD PTR [rip+0x947a]        # 411be0 <__imp_jpeg_CreateDecompress>
  408766:	nop
  408767:	nop
  408768:	jmp    QWORD PTR [rip+0x943a]        # 411ba8 <__imp_g_utf8_to_utf16>
  40876e:	nop
  40876f:	nop
  408770:	jmp    QWORD PTR [rip+0x942a]        # 411ba0 <__imp_g_utf16_to_utf8>
  408776:	nop
  408777:	nop
  408778:	jmp    QWORD PTR [rip+0x941a]        # 411b98 <__imp_g_strndup>
  40877e:	nop
  40877f:	nop
  408780:	jmp    QWORD PTR [rip+0x940a]        # 411b90 <__imp_g_strlcpy>
  408786:	nop
  408787:	nop
  408788:	jmp    QWORD PTR [rip+0x93fa]        # 411b88 <__imp_g_string_sized_new>
  40878e:	nop
  40878f:	nop
  408790:	jmp    QWORD PTR [rip+0x93ea]        # 411b80 <__imp_g_string_insert_c>
  408796:	nop
  408797:	nop
  408798:	jmp    QWORD PTR [rip+0x93da]        # 411b78 <__imp_g_string_free>
  40879e:	nop
  40879f:	nop
  4087a0:	jmp    QWORD PTR [rip+0x93ca]        # 411b70 <__imp_g_string_append_len>
  4087a6:	nop
  4087a7:	nop
  4087a8:	jmp    QWORD PTR [rip+0x93ba]        # 411b68 <__imp_g_strerror>
  4087ae:	nop
  4087af:	nop
  4087b0:	jmp    QWORD PTR [rip+0x93aa]        # 411b60 <__imp_g_strdup_printf>
  4087b6:	nop
  4087b7:	nop
  4087b8:	jmp    QWORD PTR [rip+0x939a]        # 411b58 <__imp_g_strdup>
  4087be:	nop
  4087bf:	nop
  4087c0:	jmp    QWORD PTR [rip+0x938a]        # 411b50 <__imp_g_stat>
  4087c6:	nop
  4087c7:	nop
  4087c8:	jmp    QWORD PTR [rip+0x937a]        # 411b48 <__imp_g_set_error>
  4087ce:	nop
  4087cf:	nop
  4087d0:	jmp    QWORD PTR [rip+0x936a]        # 411b40 <__imp_g_realloc>
  4087d6:	nop
  4087d7:	nop
  4087d8:	jmp    QWORD PTR [rip+0x935a]        # 411b38 <__imp_g_ptr_array_new>
  4087de:	nop
  4087df:	nop
  4087e0:	jmp    QWORD PTR [rip+0x934a]        # 411b30 <__imp_g_ptr_array_free>
  4087e6:	nop
  4087e7:	nop
  4087e8:	jmp    QWORD PTR [rip+0x933a]        # 411b28 <__imp_g_ptr_array_add>
  4087ee:	nop
  4087ef:	nop
  4087f0:	jmp    QWORD PTR [rip+0x932a]        # 411b20 <__imp_g_malloc_n>
  4087f6:	nop
  4087f7:	nop
  4087f8:	jmp    QWORD PTR [rip+0x931a]        # 411b18 <__imp_g_malloc>
  4087fe:	nop
  4087ff:	nop
  408800:	jmp    QWORD PTR [rip+0x930a]        # 411b10 <__imp_g_log>
  408806:	nop
  408807:	nop
  408808:	jmp    QWORD PTR [rip+0x92fa]        # 411b08 <__imp_g_locale_from_utf8>
  40880e:	nop
  40880f:	nop
  408810:	jmp    QWORD PTR [rip+0x92ea]        # 411b00 <__imp_g_free>
  408816:	nop
  408817:	nop
  408818:	jmp    QWORD PTR [rip+0x92da]        # 411af8 <__imp_g_fopen>
  40881e:	nop
  40881f:	nop
  408820:	jmp    QWORD PTR [rip+0x92ca]        # 411af0 <__imp_g_file_error_quark>
  408826:	nop
  408827:	nop
  408828:	jmp    QWORD PTR [rip+0x92ba]        # 411ae8 <__imp_g_file_error_from_errno>
  40882e:	nop
  40882f:	nop
  408830:	jmp    QWORD PTR [rip+0x92aa]        # 411ae0 <__imp_g_error_free>
  408836:	nop
  408837:	nop
  408838:	jmp    QWORD PTR [rip+0x929a]        # 411ad8 <__imp_g_ascii_strncasecmp>
  40883e:	nop
  40883f:	nop
  408840:	jmp    QWORD PTR [rip+0x928a]        # 411ad0 <__imp_g_array_remove_index>
  408846:	nop
  408847:	nop
  408848:	jmp    QWORD PTR [rip+0x927a]        # 411ac8 <__imp_g_array_new>
  40884e:	nop
  40884f:	nop
  408850:	jmp    QWORD PTR [rip+0x926a]        # 411ac0 <__imp_g_array_free>
  408856:	nop
  408857:	nop
  408858:	jmp    QWORD PTR [rip+0x925a]        # 411ab8 <__imp_g_array_append_vals>
  40885e:	nop
  40885f:	nop
  408860:	jmp    QWORD PTR [rip+0x9242]        # 411aa8 <__imp_exif_data_unref>
  408866:	nop
  408867:	nop
  408868:	jmp    QWORD PTR [rip+0x9232]        # 411aa0 <__imp_exif_data_save_data>
  40886e:	nop
  40886f:	nop
  408870:	jmp    QWORD PTR [rip+0x9222]        # 411a98 <__imp_exif_data_new_from_data>
  408876:	nop
  408877:	nop
  408878:	jmp    QWORD PTR [rip+0x9212]        # 411a90 <__imp_exif_content_remove_entry>
  40887e:	nop
  40887f:	nop
  408880:	jmp    QWORD PTR [rip+0x9202]        # 411a88 <__imp_exif_content_get_entry>
  408886:	nop
  408887:	nop
  408888:	jmp    QWORD PTR [rip+0x9342]        # 411bd0 <__imp_libintl_textdomain>
  40888e:	nop
  40888f:	nop
  408890:	jmp    QWORD PTR [rip+0x9332]        # 411bc8 <__imp_libintl_gettext>
  408896:	nop
  408897:	nop
  408898:	jmp    QWORD PTR [rip+0x9322]        # 411bc0 <__imp_libintl_bindtextdomain>
  40889e:	nop
  40889f:	nop
  4088a0:	jmp    QWORD PTR [rip+0x9312]        # 411bb8 <__imp_libintl_bind_textdomain_codeset>
  4088a6:	nop
  4088a7:	nop
  4088a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4088b0:	push   rbx
  4088b1:	sub    rsp,0x30
  4088b5:	mov    rbx,rcx
  4088b8:	mov    rcx,QWORD PTR [rip+0x8211]        # 410ad0 <_head_lib64_libkernel32_a-0x530>
  4088bf:	call   408e60 <_head_lib64_libkernel32_a-0x81a0>
  4088c4:	cmp    rax,0xffffffffffffffff
  4088c8:	mov    QWORD PTR [rsp+0x20],rax
  4088cd:	je     408945 <_head_lib64_libkernel32_a-0x86bb>
  4088cf:	mov    ecx,0x8
  4088d4:	call   409eb0 <_head_lib64_libkernel32_a-0x7150>
  4088d9:	mov    rcx,QWORD PTR [rip+0x81f0]        # 410ad0 <_head_lib64_libkernel32_a-0x530>
  4088e0:	call   408e60 <_head_lib64_libkernel32_a-0x81a0>
  4088e5:	mov    rcx,QWORD PTR [rip+0x81ec]        # 410ad8 <_head_lib64_libkernel32_a-0x528>
  4088ec:	mov    QWORD PTR [rsp+0x20],rax
  4088f1:	call   408e60 <_head_lib64_libkernel32_a-0x81a0>
  4088f6:	lea    rdx,[rsp+0x20]
  4088fb:	lea    r8,[rsp+0x28]
  408900:	mov    rcx,rbx
  408903:	mov    QWORD PTR [rsp+0x28],rax
  408908:	call   409f00 <_head_lib64_libkernel32_a-0x7100>
  40890d:	mov    rcx,QWORD PTR [rsp+0x20]
  408912:	mov    rbx,rax
  408915:	call   408e70 <_head_lib64_libkernel32_a-0x8190>
  40891a:	mov    rcx,QWORD PTR [rsp+0x28]
  40891f:	mov    QWORD PTR [rip+0x81aa],rax        # 410ad0 <_head_lib64_libkernel32_a-0x530>
  408926:	call   408e70 <_head_lib64_libkernel32_a-0x8190>
  40892b:	mov    ecx,0x8
  408930:	mov    QWORD PTR [rip+0x81a1],rax        # 410ad8 <_head_lib64_libkernel32_a-0x528>
  408937:	call   409ea0 <_head_lib64_libkernel32_a-0x7160>
  40893c:	mov    rax,rbx
  40893f:	add    rsp,0x30
  408943:	pop    rbx
  408944:	ret    
  408945:	mov    rax,QWORD PTR [rip+0x46e4]        # 40d030 <_head_lib64_libkernel32_a-0x3fd0>
  40894c:	mov    rcx,rbx
  40894f:	call   QWORD PTR [rax]
  408951:	add    rsp,0x30
  408955:	pop    rbx
  408956:	ret    
  408957:	nop    WORD PTR [rax+rax*1+0x0]
  408960:	sub    rsp,0x28
  408964:	call   4088b0 <_head_lib64_libkernel32_a-0x8750>
  408969:	test   rax,rax
  40896c:	sete   al
  40896f:	movzx  eax,al
  408972:	neg    eax
  408974:	add    rsp,0x28
  408978:	ret    
  408979:	nop
  40897a:	nop
  40897b:	nop
  40897c:	nop
  40897d:	nop
  40897e:	nop
  40897f:	nop
  408980:	sub    rsp,0x28
  408984:	mov    rax,QWORD PTR [rip+0x26c5]        # 40b050 <_head_lib64_libkernel32_a-0x5fb0>
  40898b:	mov    rax,QWORD PTR [rax]
  40898e:	test   rax,rax
  408991:	je     4089b0 <_head_lib64_libkernel32_a-0x8650>
  408993:	call   rax
  408995:	mov    rax,QWORD PTR [rip+0x26b4]        # 40b050 <_head_lib64_libkernel32_a-0x5fb0>
  40899c:	lea    rdx,[rax+0x8]
  4089a0:	mov    rax,QWORD PTR [rax+0x8]
  4089a4:	mov    QWORD PTR [rip+0x26a5],rdx        # 40b050 <_head_lib64_libkernel32_a-0x5fb0>
  4089ab:	test   rax,rax
  4089ae:	jne    408993 <_head_lib64_libkernel32_a-0x866d>
  4089b0:	add    rsp,0x28
  4089b4:	ret    
  4089b5:	nop
  4089b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089c0:	push   rsi
  4089c1:	push   rbx
  4089c2:	sub    rsp,0x28
  4089c6:	mov    rsi,QWORD PTR [rip+0x45c3]        # 40cf90 <_head_lib64_libkernel32_a-0x4070>
  4089cd:	mov    rax,QWORD PTR [rsi]
  4089d0:	cmp    eax,0xffffffff
  4089d3:	mov    ebx,eax
  4089d5:	je     408a00 <_head_lib64_libkernel32_a-0x8600>
  4089d7:	test   ebx,ebx
  4089d9:	je     4089ea <_head_lib64_libkernel32_a-0x8616>
  4089db:	nop    DWORD PTR [rax+rax*1+0x0]
  4089e0:	mov    eax,ebx
  4089e2:	call   QWORD PTR [rsi+rax*8]
  4089e5:	sub    ebx,0x1
  4089e8:	jne    4089e0 <_head_lib64_libkernel32_a-0x8620>
  4089ea:	lea    rcx,[rip+0xffffffffffffff8f]        # 408980 <_head_lib64_libkernel32_a-0x8680>
  4089f1:	add    rsp,0x28
  4089f5:	pop    rbx
  4089f6:	pop    rsi
  4089f7:	jmp    408960 <_head_lib64_libkernel32_a-0x86a0>
  4089fc:	nop    DWORD PTR [rax+0x0]
  408a00:	xor    ebx,ebx
  408a02:	jmp    408a06 <_head_lib64_libkernel32_a-0x85fa>
  408a04:	mov    ebx,eax
  408a06:	lea    edx,[rbx+0x1]
  408a09:	cmp    QWORD PTR [rsi+rdx*8],0x0
  408a0e:	mov    rax,rdx
  408a11:	jne    408a04 <_head_lib64_libkernel32_a-0x85fc>
  408a13:	jmp    4089d7 <_head_lib64_libkernel32_a-0x8629>
  408a15:	nop
  408a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a20:	mov    eax,DWORD PTR [rip+0x76ca]        # 4100f0 <_head_lib64_libkernel32_a-0xf10>
  408a26:	test   eax,eax
  408a28:	je     408a30 <_head_lib64_libkernel32_a-0x85d0>
  408a2a:	repz ret 
  408a2c:	nop    DWORD PTR [rax+0x0]
  408a30:	mov    DWORD PTR [rip+0x76b6],0x1        # 4100f0 <_head_lib64_libkernel32_a-0xf10>
  408a3a:	jmp    4089c0 <_head_lib64_libkernel32_a-0x8640>
  408a3c:	nop
  408a3d:	nop
  408a3e:	nop
  408a3f:	nop
  408a40:	mov    rax,QWORD PTR [rip+0x8d39]        # 411780 <__imp___lconv_init>
  408a47:	rex.W jmp rax
  408a4a:	nop
  408a4b:	nop
  408a4c:	nop
  408a4d:	nop
  408a4e:	nop
  408a4f:	nop
  408a50:	xor    eax,eax
  408a52:	ret    
  408a53:	nop
  408a54:	nop
  408a55:	nop
  408a56:	nop
  408a57:	nop
  408a58:	nop
  408a59:	nop
  408a5a:	nop
  408a5b:	nop
  408a5c:	nop
  408a5d:	nop
  408a5e:	nop
  408a5f:	nop
  408a60:	push   r12
  408a62:	push   rbp
  408a63:	push   rdi
  408a64:	push   rsi
  408a65:	push   rbx
  408a66:	sub    rsp,0x40
  408a6a:	mov    rbx,QWORD PTR [rip+0x263f]        # 40b0b0 <_head_lib64_libkernel32_a-0x5f50>
  408a71:	movabs rax,0x2b992ddfa232
  408a7b:	mov    QWORD PTR [rsp+0x20],0x0
  408a84:	cmp    rbx,rax
  408a87:	je     408aa0 <_head_lib64_libkernel32_a-0x8560>
  408a89:	not    rbx
  408a8c:	mov    QWORD PTR [rip+0x262d],rbx        # 40b0c0 <_head_lib64_libkernel32_a-0x5f40>
  408a93:	add    rsp,0x40
  408a97:	pop    rbx
  408a98:	pop    rsi
  408a99:	pop    rdi
  408a9a:	pop    rbp
  408a9b:	pop    r12
  408a9d:	ret    
  408a9e:	xchg   ax,ax
  408aa0:	lea    rcx,[rsp+0x20]
  408aa5:	call   QWORD PTR [rip+0x8c15]        # 4116c0 <__imp_GetSystemTimeAsFileTime>
  408aab:	mov    r12,QWORD PTR [rsp+0x20]
  408ab0:	call   QWORD PTR [rip+0x8bda]        # 411690 <__imp_GetCurrentProcessId>
  408ab6:	mov    ebp,eax
  408ab8:	call   QWORD PTR [rip+0x8bda]        # 411698 <__imp_GetCurrentThreadId>
  408abe:	mov    edi,eax
  408ac0:	call   QWORD PTR [rip+0x8c02]        # 4116c8 <__imp_GetTickCount>
  408ac6:	lea    rcx,[rsp+0x30]
  408acb:	mov    esi,eax
  408acd:	call   QWORD PTR [rip+0x8c0d]        # 4116e0 <__imp_QueryPerformanceCounter>
  408ad3:	xor    r12,QWORD PTR [rsp+0x30]
  408ad8:	mov    edx,edi
  408ada:	movabs rax,0xffffffffffff
  408ae4:	xor    rbp,r12
  408ae7:	mov    rdi,rbp
  408aea:	xor    rdi,rdx
  408aed:	mov    edx,esi
  408aef:	xor    rdi,rdx
  408af2:	mov    rsi,rdi
  408af5:	and    rsi,rax
  408af8:	cmp    rsi,rbx
  408afb:	je     408b20 <_head_lib64_libkernel32_a-0x84e0>
  408afd:	mov    rax,rsi
  408b00:	not    rax
  408b03:	mov    QWORD PTR [rip+0x25a6],rsi        # 40b0b0 <_head_lib64_libkernel32_a-0x5f50>
  408b0a:	mov    QWORD PTR [rip+0x25af],rax        # 40b0c0 <_head_lib64_libkernel32_a-0x5f40>
  408b11:	add    rsp,0x40
  408b15:	pop    rbx
  408b16:	pop    rsi
  408b17:	pop    rdi
  408b18:	pop    rbp
  408b19:	pop    r12
  408b1b:	ret    
  408b1c:	nop    DWORD PTR [rax+0x0]
  408b20:	movabs rax,0xffffd466d2205dcc
  408b2a:	movabs rsi,0x2b992ddfa233
  408b34:	jmp    408b03 <_head_lib64_libkernel32_a-0x84fd>
  408b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b40:	push   rbp
  408b41:	push   rsi
  408b42:	push   rbx
  408b43:	mov    rbp,rsp
  408b46:	sub    rsp,0x70
  408b4a:	mov    rsi,rcx
  408b4d:	lea    rcx,[rip+0x75ec]        # 410140 <_head_lib64_libkernel32_a-0xec0>
  408b54:	call   QWORD PTR [rip+0x8b96]        # 4116f0 <__imp_RtlCaptureContext>
  408b5a:	mov    rbx,QWORD PTR [rip+0x76d7]        # 410238 <_head_lib64_libkernel32_a-0xdc8>
  408b61:	xor    r8d,r8d
  408b64:	lea    rdx,[rbp-0x28]
  408b68:	mov    rcx,rbx
  408b6b:	call   QWORD PTR [rip+0x8b87]        # 4116f8 <__imp_RtlLookupFunctionEntry>
  408b71:	test   rax,rax
  408b74:	mov    r9,rax
  408b77:	je     408c20 <_head_lib64_libkernel32_a-0x83e0>
  408b7d:	lea    rax,[rbp-0x20]
  408b81:	mov    QWORD PTR [rsp+0x38],0x0
  408b8a:	mov    r8,rbx
  408b8d:	mov    rdx,QWORD PTR [rbp-0x28]
  408b91:	xor    ecx,ecx
  408b93:	mov    QWORD PTR [rsp+0x30],rax
  408b98:	lea    rax,[rbp-0x18]
  408b9c:	mov    QWORD PTR [rsp+0x28],rax
  408ba1:	lea    rax,[rip+0x7598]        # 410140 <_head_lib64_libkernel32_a-0xec0>
  408ba8:	mov    QWORD PTR [rsp+0x20],rax
  408bad:	call   QWORD PTR [rip+0x8b4d]        # 411700 <__imp_RtlVirtualUnwind>
  408bb3:	mov    rax,QWORD PTR [rip+0x767e]        # 410238 <_head_lib64_libkernel32_a-0xdc8>
  408bba:	xor    ecx,ecx
  408bbc:	mov    QWORD PTR [rip+0x75fd],rsi        # 4101c0 <_head_lib64_libkernel32_a-0xe40>
  408bc3:	mov    DWORD PTR [rip+0x7a73],0xc0000409        # 410640 <_head_lib64_libkernel32_a-0x9c0>
  408bcd:	mov    DWORD PTR [rip+0x7a6d],0x1        # 410644 <_head_lib64_libkernel32_a-0x9bc>
  408bd7:	mov    QWORD PTR [rip+0x7a72],rax        # 410650 <_head_lib64_libkernel32_a-0x9b0>
  408bde:	mov    rax,QWORD PTR [rip+0x24cb]        # 40b0b0 <_head_lib64_libkernel32_a-0x5f50>
  408be5:	mov    QWORD PTR [rbp-0x10],rax
  408be9:	mov    rax,QWORD PTR [rip+0x24d0]        # 40b0c0 <_head_lib64_libkernel32_a-0x5f40>
  408bf0:	mov    QWORD PTR [rbp-0x8],rax
  408bf4:	call   QWORD PTR [rip+0x8b0e]        # 411708 <__imp_SetUnhandledExceptionFilter>
  408bfa:	lea    rcx,[rip+0x40ef]        # 40ccf0 <_head_lib64_libkernel32_a-0x4310>
  408c01:	call   QWORD PTR [rip+0x8b21]        # 411728 <__imp_UnhandledExceptionFilter>
  408c07:	call   QWORD PTR [rip+0x8a7b]        # 411688 <__imp_GetCurrentProcess>
  408c0d:	mov    edx,0xc0000409
  408c12:	mov    rcx,rax
  408c15:	call   QWORD PTR [rip+0x8afd]        # 411718 <__imp_TerminateProcess>
  408c1b:	call   409e98 <_head_lib64_libkernel32_a-0x7168>
  408c20:	mov    rax,QWORD PTR [rbp+0x18]
  408c24:	mov    QWORD PTR [rip+0x760d],rax        # 410238 <_head_lib64_libkernel32_a-0xdc8>
  408c2b:	lea    rax,[rbp+0x8]
  408c2f:	mov    QWORD PTR [rip+0x75a2],rax        # 4101d8 <_head_lib64_libkernel32_a-0xe28>
  408c36:	jmp    408bb3 <_head_lib64_libkernel32_a-0x844d>
  408c3b:	nop
  408c3c:	nop
  408c3d:	nop
  408c3e:	nop
  408c3f:	nop
  408c40:	sub    rsp,0x28
  408c44:	test   edx,edx
  408c46:	je     408c60 <_head_lib64_libkernel32_a-0x83a0>
  408c48:	cmp    edx,0x3
  408c4b:	je     408c60 <_head_lib64_libkernel32_a-0x83a0>
  408c4d:	mov    eax,0x1
  408c52:	add    rsp,0x28
  408c56:	ret    
  408c57:	nop    WORD PTR [rax+rax*1+0x0]
  408c60:	call   409950 <_head_lib64_libkernel32_a-0x76b0>
  408c65:	mov    eax,0x1
  408c6a:	add    rsp,0x28
  408c6e:	ret    
  408c6f:	nop
  408c70:	push   rsi
  408c71:	push   rbx
  408c72:	sub    rsp,0x28
  408c76:	mov    rax,QWORD PTR [rip+0x42f3]        # 40cf70 <_head_lib64_libkernel32_a-0x4090>
  408c7d:	cmp    DWORD PTR [rax],0x2
  408c80:	je     408c88 <_head_lib64_libkernel32_a-0x8378>
  408c82:	mov    DWORD PTR [rax],0x2
  408c88:	cmp    edx,0x2
  408c8b:	je     408ca0 <_head_lib64_libkernel32_a-0x8360>
  408c8d:	cmp    edx,0x1
  408c90:	je     408cd2 <_head_lib64_libkernel32_a-0x832e>
  408c92:	mov    eax,0x1
  408c97:	add    rsp,0x28
  408c9b:	pop    rbx
  408c9c:	pop    rsi
  408c9d:	ret    
  408c9e:	xchg   ax,ax
  408ca0:	lea    rbx,[rip+0xa3b9]        # 413060 <libjpeg_8_dll_iname+0x360>
  408ca7:	lea    rsi,[rip+0xa3b2]        # 413060 <libjpeg_8_dll_iname+0x360>
  408cae:	cmp    rbx,rsi
  408cb1:	je     408c92 <_head_lib64_libkernel32_a-0x836e>
  408cb3:	mov    rax,QWORD PTR [rbx]
  408cb6:	test   rax,rax
  408cb9:	je     408cbd <_head_lib64_libkernel32_a-0x8343>
  408cbb:	call   rax
  408cbd:	add    rbx,0x8
  408cc1:	cmp    rbx,rsi
  408cc4:	jne    408cb3 <_head_lib64_libkernel32_a-0x834d>
  408cc6:	mov    eax,0x1
  408ccb:	add    rsp,0x28
  408ccf:	pop    rbx
  408cd0:	pop    rsi
  408cd1:	ret    
  408cd2:	call   409950 <_head_lib64_libkernel32_a-0x76b0>
  408cd7:	jmp    408c92 <_head_lib64_libkernel32_a-0x836e>
  408cd9:	nop    DWORD PTR [rax+0x0]
  408ce0:	xor    eax,eax
  408ce2:	ret    
  408ce3:	nop
  408ce4:	nop
  408ce5:	nop
  408ce6:	nop
  408ce7:	nop
  408ce8:	nop
  408ce9:	nop
  408cea:	nop
  408ceb:	nop
  408cec:	nop
  408ced:	nop
  408cee:	nop
  408cef:	nop
  408cf0:	sub    rsp,0x58
  408cf4:	mov    rax,QWORD PTR [rip+0x7a25]        # 410720 <_head_lib64_libkernel32_a-0x8e0>
  408cfb:	test   rax,rax
  408cfe:	je     408d2c <_head_lib64_libkernel32_a-0x82d4>
  408d00:	movsd  xmm0,QWORD PTR [rsp+0x80]
  408d09:	mov    DWORD PTR [rsp+0x20],ecx
  408d0d:	lea    rcx,[rsp+0x20]
  408d12:	mov    QWORD PTR [rsp+0x28],rdx
  408d17:	movsd  QWORD PTR [rsp+0x30],xmm2
  408d1d:	movsd  QWORD PTR [rsp+0x38],xmm3
  408d23:	movsd  QWORD PTR [rsp+0x40],xmm0
  408d29:	call   rax
  408d2b:	nop
  408d2c:	add    rsp,0x58
  408d30:	ret    
  408d31:	nop    DWORD PTR [rax+rax*1+0x0]
  408d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d40:	mov    QWORD PTR [rip+0x79d9],rcx        # 410720 <_head_lib64_libkernel32_a-0x8e0>
  408d47:	jmp    409ed8 <_head_lib64_libkernel32_a-0x7128>
  408d4c:	nop    DWORD PTR [rax+0x0]
  408d50:	push   rsi
  408d51:	push   rbx
  408d52:	sub    rsp,0x78
  408d56:	movaps XMMWORD PTR [rsp+0x40],xmm6
  408d5b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  408d60:	movaps XMMWORD PTR [rsp+0x60],xmm8
  408d66:	cmp    DWORD PTR [rcx],0x6
  408d69:	ja     408e40 <_head_lib64_libkernel32_a-0x81c0>
  408d6f:	mov    edx,DWORD PTR [rcx]
  408d71:	lea    rax,[rip+0x40bc]        # 40ce34 <_head_lib64_libkernel32_a-0x41cc>
  408d78:	movsxd rdx,DWORD PTR [rax+rdx*4]
  408d7c:	add    rax,rdx
  408d7f:	jmp    rax
  408d81:	lea    rbx,[rip+0x3f88]        # 40cd10 <_head_lib64_libkernel32_a-0x42f0>
  408d88:	nop    DWORD PTR [rax+rax*1+0x0]
  408d90:	movsd  xmm8,QWORD PTR [rcx+0x20]
  408d96:	mov    rsi,QWORD PTR [rcx+0x8]
  408d9a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  408d9f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  408da4:	call   409ef0 <_head_lib64_libkernel32_a-0x7110>
  408da9:	movsd  QWORD PTR [rsp+0x30],xmm8
  408db0:	lea    rcx,[rax+0x60]
  408db4:	lea    rdx,[rip+0x404d]        # 40ce08 <_head_lib64_libkernel32_a-0x41f8>
  408dbb:	movsd  QWORD PTR [rsp+0x28],xmm7
  408dc1:	mov    r9,rsi
  408dc4:	mov    r8,rbx
  408dc7:	movsd  QWORD PTR [rsp+0x20],xmm6
  408dcd:	call   409e70 <_head_lib64_libkernel32_a-0x7190>
  408dd2:	nop
  408dd3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  408dd8:	xor    eax,eax
  408dda:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  408ddf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  408de5:	add    rsp,0x78
  408de9:	pop    rbx
  408dea:	pop    rsi
  408deb:	ret    
  408dec:	nop    DWORD PTR [rax+0x0]
  408df0:	lea    rbx,[rip+0x3f38]        # 40cd2f <_head_lib64_libkernel32_a-0x42d1>
  408df7:	jmp    408d90 <_head_lib64_libkernel32_a-0x8270>
  408df9:	nop    DWORD PTR [rax+0x0]
  408e00:	lea    rbx,[rip+0x3f49]        # 40cd50 <_head_lib64_libkernel32_a-0x42b0>
  408e07:	jmp    408d90 <_head_lib64_libkernel32_a-0x8270>
  408e09:	nop    DWORD PTR [rax+0x0]
  408e10:	lea    rbx,[rip+0x3fa9]        # 40cdc0 <_head_lib64_libkernel32_a-0x4240>
  408e17:	jmp    408d90 <_head_lib64_libkernel32_a-0x8270>
  408e1c:	nop    DWORD PTR [rax+0x0]
  408e20:	lea    rbx,[rip+0x3f71]        # 40cd98 <_head_lib64_libkernel32_a-0x4268>
  408e27:	jmp    408d90 <_head_lib64_libkernel32_a-0x8270>
  408e2c:	nop    DWORD PTR [rax+0x0]
  408e30:	lea    rbx,[rip+0x3f39]        # 40cd70 <_head_lib64_libkernel32_a-0x4290>
  408e37:	jmp    408d90 <_head_lib64_libkernel32_a-0x8270>
  408e3c:	nop    DWORD PTR [rax+0x0]
  408e40:	lea    rbx,[rip+0x3faf]        # 40cdf6 <_head_lib64_libkernel32_a-0x420a>
  408e47:	jmp    408d90 <_head_lib64_libkernel32_a-0x8270>
  408e4c:	nop
  408e4d:	nop
  408e4e:	nop
  408e4f:	nop
  408e50:	fninit 
  408e52:	ret    
  408e53:	nop
  408e54:	nop
  408e55:	nop
  408e56:	nop
  408e57:	nop
  408e58:	nop
  408e59:	nop
  408e5a:	nop
  408e5b:	nop
  408e5c:	nop
  408e5d:	nop
  408e5e:	nop
  408e5f:	nop
  408e60:	mov    rax,rcx
  408e63:	ret    
  408e64:	xchg   ax,ax
  408e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e70:	mov    rax,rcx
  408e73:	ret    
  408e74:	nop
  408e75:	nop
  408e76:	nop
  408e77:	nop
  408e78:	nop
  408e79:	nop
  408e7a:	nop
  408e7b:	nop
  408e7c:	nop
  408e7d:	nop
  408e7e:	nop
  408e7f:	nop
  408e80:	push   rsi
  408e81:	push   rbx
  408e82:	sub    rsp,0x38
  408e86:	lea    rax,[rsp+0x58]
  408e8b:	mov    rbx,rcx
  408e8e:	mov    QWORD PTR [rsp+0x58],rdx
  408e93:	mov    QWORD PTR [rsp+0x60],r8
  408e98:	mov    QWORD PTR [rsp+0x68],r9
  408e9d:	mov    QWORD PTR [rsp+0x28],rax
  408ea2:	call   409ef0 <_head_lib64_libkernel32_a-0x7110>
  408ea7:	lea    rcx,[rip+0x3fa2]        # 40ce50 <_head_lib64_libkernel32_a-0x41b0>
  408eae:	lea    r9,[rax+0x60]
  408eb2:	mov    r8d,0x1b
  408eb8:	mov    edx,0x1
  408ebd:	call   409e48 <_head_lib64_libkernel32_a-0x71b8>
  408ec2:	mov    rsi,QWORD PTR [rsp+0x28]
  408ec7:	call   409ef0 <_head_lib64_libkernel32_a-0x7110>
  408ecc:	lea    rcx,[rax+0x60]
  408ed0:	mov    rdx,rbx
  408ed3:	mov    r8,rsi
  408ed6:	call   409e10 <_head_lib64_libkernel32_a-0x71f0>
  408edb:	call   409e98 <_head_lib64_libkernel32_a-0x7168>
  408ee0:	nop
  408ee1:	nop    DWORD PTR [rax+rax*1+0x0]
  408ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ef0:	push   r13
  408ef2:	push   r12
  408ef4:	push   rbp
  408ef5:	push   rdi
  408ef6:	push   rsi
  408ef7:	push   rbx
  408ef8:	sub    rsp,0x58
  408efc:	movsxd rbp,DWORD PTR [rip+0x7841]        # 410744 <_head_lib64_libkernel32_a-0x8bc>
  408f03:	mov    rbx,rcx
  408f06:	mov    rsi,rdx
  408f09:	mov    rdi,r8
  408f0c:	test   ebp,ebp
  408f0e:	jle    40900a <_head_lib64_libkernel32_a-0x7ff6>
  408f14:	mov    rax,QWORD PTR [rip+0x782d]        # 410748 <_head_lib64_libkernel32_a-0x8b8>
  408f1b:	xor    r9d,r9d
  408f1e:	add    rax,0x8
  408f22:	mov    r10,QWORD PTR [rax]
  408f25:	cmp    rbx,r10
  408f28:	jb     408f3e <_head_lib64_libkernel32_a-0x80c2>
  408f2a:	mov    rdx,QWORD PTR [rax+0x8]
  408f2e:	mov    r11d,DWORD PTR [rdx+0x8]
  408f32:	add    r10,r11
  408f35:	cmp    rbx,r10
  408f38:	jb     408ff0 <_head_lib64_libkernel32_a-0x8010>
  408f3e:	add    r9d,0x1
  408f42:	add    rax,0x18
  408f46:	cmp    r9d,ebp
  408f49:	jne    408f22 <_head_lib64_libkernel32_a-0x80de>
  408f4b:	mov    rcx,rbx
  408f4e:	call   409b60 <_head_lib64_libkernel32_a-0x74a0>
  408f53:	test   rax,rax
  408f56:	mov    r12,rax
  408f59:	je     409042 <_head_lib64_libkernel32_a-0x7fbe>
  408f5f:	lea    rbp,[rbp+rbp*2+0x0]
  408f64:	shl    rbp,0x3
  408f68:	mov    r13,rbp
  408f6b:	add    r13,QWORD PTR [rip+0x77d6]        # 410748 <_head_lib64_libkernel32_a-0x8b8>
  408f72:	mov    QWORD PTR [r13+0x10],rax
  408f76:	mov    DWORD PTR [r13+0x0],0x0
  408f7e:	call   409c80 <_head_lib64_libkernel32_a-0x7380>
  408f83:	mov    edx,DWORD PTR [r12+0xc]
  408f88:	mov    r8d,0x30
  408f8e:	add    rax,rdx
  408f91:	lea    rdx,[rsp+0x20]
  408f96:	mov    QWORD PTR [r13+0x8],rax
  408f9a:	mov    rax,QWORD PTR [rip+0x77a7]        # 410748 <_head_lib64_libkernel32_a-0x8b8>
  408fa1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  408fa6:	call   QWORD PTR [rip+0x878c]        # 411738 <__imp_VirtualQuery>
  408fac:	test   rax,rax
  408faf:	je     409025 <_head_lib64_libkernel32_a-0x7fdb>
  408fb1:	mov    eax,DWORD PTR [rsp+0x44]
  408fb5:	lea    edx,[rax-0x4]
  408fb8:	and    edx,0xfffffffb
  408fbb:	je     408fe9 <_head_lib64_libkernel32_a-0x8017>
  408fbd:	sub    eax,0x40
  408fc0:	and    eax,0xffffffbf
  408fc3:	je     408fe9 <_head_lib64_libkernel32_a-0x8017>
  408fc5:	mov    r9,rbp
  408fc8:	add    r9,QWORD PTR [rip+0x7779]        # 410748 <_head_lib64_libkernel32_a-0x8b8>
  408fcf:	mov    r8d,0x40
  408fd5:	mov    rdx,QWORD PTR [rsp+0x38]
  408fda:	mov    rcx,QWORD PTR [rsp+0x20]
  408fdf:	call   QWORD PTR [rip+0x874b]        # 411730 <__imp_VirtualProtect>
  408fe5:	test   eax,eax
  408fe7:	je     409011 <_head_lib64_libkernel32_a-0x7fef>
  408fe9:	add    DWORD PTR [rip+0x7754],0x1        # 410744 <_head_lib64_libkernel32_a-0x8bc>
  408ff0:	mov    r8,rdi
  408ff3:	mov    rdx,rsi
  408ff6:	mov    rcx,rbx
  408ff9:	add    rsp,0x58
  408ffd:	pop    rbx
  408ffe:	pop    rsi
  408fff:	pop    rdi
  409000:	pop    rbp
  409001:	pop    r12
  409003:	pop    r13
  409005:	jmp    409e30 <_head_lib64_libkernel32_a-0x71d0>
  40900a:	xor    ebp,ebp
  40900c:	jmp    408f4b <_head_lib64_libkernel32_a-0x80b5>
  409011:	call   QWORD PTR [rip+0x8689]        # 4116a0 <__imp_GetLastError>
  409017:	lea    rcx,[rip+0x3eaa]        # 40cec8 <_head_lib64_libkernel32_a-0x4138>
  40901e:	mov    edx,eax
  409020:	call   408e80 <_head_lib64_libkernel32_a-0x8180>
  409025:	mov    rax,QWORD PTR [rip+0x771c]        # 410748 <_head_lib64_libkernel32_a-0x8b8>
  40902c:	mov    edx,DWORD PTR [r12+0x8]
  409031:	lea    rcx,[rip+0x3e58]        # 40ce90 <_head_lib64_libkernel32_a-0x4170>
  409038:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40903d:	call   408e80 <_head_lib64_libkernel32_a-0x8180>
  409042:	lea    rcx,[rip+0x3e27]        # 40ce70 <_head_lib64_libkernel32_a-0x4190>
  409049:	mov    rdx,rbx
  40904c:	call   408e80 <_head_lib64_libkernel32_a-0x8180>
  409051:	nop
  409052:	nop    DWORD PTR [rax+0x0]
  409056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409060:	push   rbp
  409061:	push   r14
  409063:	push   r13
  409065:	push   r12
  409067:	push   rdi
  409068:	push   rsi
  409069:	push   rbx
  40906a:	mov    rbp,rsp
  40906d:	sub    rsp,0x60
  409071:	mov    ebx,DWORD PTR [rip+0x76c9]        # 410740 <_head_lib64_libkernel32_a-0x8c0>
  409077:	test   ebx,ebx
  409079:	je     409090 <_head_lib64_libkernel32_a-0x7f70>
  40907b:	mov    rsp,rbp
  40907e:	pop    rbx
  40907f:	pop    rsi
  409080:	pop    rdi
  409081:	pop    r12
  409083:	pop    r13
  409085:	pop    r14
  409087:	pop    rbp
  409088:	ret    
  409089:	nop    DWORD PTR [rax+0x0]
  409090:	mov    DWORD PTR [rip+0x76a6],0x1        # 410740 <_head_lib64_libkernel32_a-0x8c0>
  40909a:	call   409bb0 <_head_lib64_libkernel32_a-0x7450>
  40909f:	cdqe   
  4090a1:	lea    rax,[rax+rax*2]
  4090a5:	lea    rax,[rax*8+0x1e]
  4090ad:	and    rax,0xfffffffffffffff0
  4090b1:	call   409dd0 <_head_lib64_libkernel32_a-0x7230>
  4090b6:	mov    rsi,QWORD PTR [rip+0x3ee3]        # 40cfa0 <_head_lib64_libkernel32_a-0x4060>
  4090bd:	mov    rbx,QWORD PTR [rip+0x3eec]        # 40cfb0 <_head_lib64_libkernel32_a-0x4050>
  4090c4:	sub    rsp,rax
  4090c7:	mov    DWORD PTR [rip+0x7673],0x0        # 410744 <_head_lib64_libkernel32_a-0x8bc>
  4090d1:	lea    rax,[rsp+0x20]
  4090d6:	mov    QWORD PTR [rip+0x766b],rax        # 410748 <_head_lib64_libkernel32_a-0x8b8>
  4090dd:	mov    rax,rsi
  4090e0:	sub    rax,rbx
  4090e3:	cmp    rax,0x7
  4090e7:	jle    40907b <_head_lib64_libkernel32_a-0x7f85>
  4090e9:	cmp    rax,0xb
  4090ed:	jle    409115 <_head_lib64_libkernel32_a-0x7eeb>
  4090ef:	mov    r11d,DWORD PTR [rbx]
  4090f2:	test   r11d,r11d
  4090f5:	jne    409240 <_head_lib64_libkernel32_a-0x7dc0>
  4090fb:	mov    r10d,DWORD PTR [rbx+0x4]
  4090ff:	test   r10d,r10d
  409102:	jne    409240 <_head_lib64_libkernel32_a-0x7dc0>
  409108:	mov    r9d,DWORD PTR [rbx+0x8]
  40910c:	test   r9d,r9d
  40910f:	jne    40912c <_head_lib64_libkernel32_a-0x7ed4>
  409111:	add    rbx,0xc
  409115:	mov    r8d,DWORD PTR [rbx]
  409118:	test   r8d,r8d
  40911b:	jne    409240 <_head_lib64_libkernel32_a-0x7dc0>
  409121:	mov    ecx,DWORD PTR [rbx+0x4]
  409124:	test   ecx,ecx
  409126:	jne    409240 <_head_lib64_libkernel32_a-0x7dc0>
  40912c:	mov    edx,DWORD PTR [rbx+0x8]
  40912f:	cmp    edx,0x1
  409132:	jne    40934c <_head_lib64_libkernel32_a-0x7cb4>
  409138:	add    rbx,0xc
  40913c:	cmp    rbx,rsi
  40913f:	jae    40907b <_head_lib64_libkernel32_a-0x7f85>
  409145:	mov    r12,QWORD PTR [rip+0x3e84]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  40914c:	lea    r13,[rbp-0x30]
  409150:	movabs r14,0xffffffff00000000
  40915a:	mov    ecx,DWORD PTR [rbx+0x4]
  40915d:	mov    eax,DWORD PTR [rbx]
  40915f:	movzx  edx,BYTE PTR [rbx+0x8]
  409163:	add    rax,r12
  409166:	add    rcx,r12
  409169:	cmp    edx,0x10
  40916c:	mov    r8,QWORD PTR [rax]
  40916f:	je     4092b6 <_head_lib64_libkernel32_a-0x7d4a>
  409175:	jbe    40927d <_head_lib64_libkernel32_a-0x7d83>
  40917b:	cmp    edx,0x20
  40917e:	je     4092ff <_head_lib64_libkernel32_a-0x7d01>
  409184:	cmp    edx,0x40
  409187:	jne    4092eb <_head_lib64_libkernel32_a-0x7d15>
  40918d:	sub    r8,rax
  409190:	mov    rdx,r13
  409193:	mov    rdi,r13
  409196:	mov    rax,r8
  409199:	add    rax,QWORD PTR [rcx]
  40919c:	mov    r8d,0x8
  4091a2:	mov    QWORD PTR [rbp-0x30],rax
  4091a6:	call   408ef0 <_head_lib64_libkernel32_a-0x8110>
  4091ab:	add    rbx,0xc
  4091af:	cmp    rbx,rsi
  4091b2:	jb     40915a <_head_lib64_libkernel32_a-0x7ea6>
  4091b4:	mov    eax,DWORD PTR [rip+0x758a]        # 410744 <_head_lib64_libkernel32_a-0x8bc>
  4091ba:	xor    ebx,ebx
  4091bc:	xor    esi,esi
  4091be:	test   eax,eax
  4091c0:	jle    40907b <_head_lib64_libkernel32_a-0x7f85>
  4091c6:	mov    r14,QWORD PTR [rip+0x856b]        # 411738 <__imp_VirtualQuery>
  4091cd:	lea    r13,[rbp-0x34]
  4091d1:	mov    r12,QWORD PTR [rip+0x8558]        # 411730 <__imp_VirtualProtect>
  4091d8:	jmp    4091f3 <_head_lib64_libkernel32_a-0x7e0d>
  4091da:	nop    WORD PTR [rax+rax*1+0x0]
  4091e0:	add    esi,0x1
  4091e3:	add    rbx,0x18
  4091e7:	cmp    esi,DWORD PTR [rip+0x7557]        # 410744 <_head_lib64_libkernel32_a-0x8bc>
  4091ed:	jge    40907b <_head_lib64_libkernel32_a-0x7f85>
  4091f3:	mov    rax,rbx
  4091f6:	add    rax,QWORD PTR [rip+0x754b]        # 410748 <_head_lib64_libkernel32_a-0x8b8>
  4091fd:	mov    edx,DWORD PTR [rax]
  4091ff:	test   edx,edx
  409201:	je     4091e0 <_head_lib64_libkernel32_a-0x7e20>
  409203:	mov    rcx,QWORD PTR [rax+0x8]
  409207:	mov    r8d,0x30
  40920d:	mov    rdx,rdi
  409210:	call   r14
  409213:	test   rax,rax
  409216:	je     40932e <_head_lib64_libkernel32_a-0x7cd2>
  40921c:	mov    rax,QWORD PTR [rip+0x7525]        # 410748 <_head_lib64_libkernel32_a-0x8b8>
  409223:	mov    r9,r13
  409226:	mov    rdx,QWORD PTR [rbp-0x18]
  40922a:	mov    rcx,QWORD PTR [rbp-0x30]
  40922e:	mov    r8d,DWORD PTR [rax+rbx*1]
  409232:	call   r12
  409235:	jmp    4091e0 <_head_lib64_libkernel32_a-0x7e20>
  409237:	nop    WORD PTR [rax+rax*1+0x0]
  409240:	cmp    rbx,rsi
  409243:	jae    40907b <_head_lib64_libkernel32_a-0x7f85>
  409249:	mov    r12,QWORD PTR [rip+0x3d80]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  409250:	lea    rdi,[rbp-0x30]
  409254:	mov    ecx,DWORD PTR [rbx+0x4]
  409257:	mov    eax,DWORD PTR [rbx]
  409259:	mov    r8d,0x4
  40925f:	mov    rdx,rdi
  409262:	add    rbx,0x8
  409266:	add    rcx,r12
  409269:	add    eax,DWORD PTR [rcx]
  40926b:	mov    DWORD PTR [rbp-0x30],eax
  40926e:	call   408ef0 <_head_lib64_libkernel32_a-0x8110>
  409273:	cmp    rbx,rsi
  409276:	jb     409254 <_head_lib64_libkernel32_a-0x7dac>
  409278:	jmp    4091b4 <_head_lib64_libkernel32_a-0x7e4c>
  40927d:	cmp    edx,0x8
  409280:	jne    4092eb <_head_lib64_libkernel32_a-0x7d15>
  409282:	movzx  edx,BYTE PTR [rcx]
  409285:	mov    rdi,r13
  409288:	mov    r10,rdx
  40928b:	or     r10,0xffffffffffffff00
  409292:	test   dl,dl
  409294:	cmovs  rdx,r10
  409298:	sub    rdx,rax
  40929b:	lea    rax,[r8+rdx*1]
  40929f:	mov    r8d,0x1
  4092a5:	mov    rdx,r13
  4092a8:	mov    QWORD PTR [rbp-0x30],rax
  4092ac:	call   408ef0 <_head_lib64_libkernel32_a-0x8110>
  4092b1:	jmp    4091ab <_head_lib64_libkernel32_a-0x7e55>
  4092b6:	movzx  edx,WORD PTR [rcx]
  4092b9:	mov    rdi,r13
  4092bc:	mov    r10,rdx
  4092bf:	or     r10,0xffffffffffff0000
  4092c6:	test   dx,dx
  4092c9:	cmovs  rdx,r10
  4092cd:	sub    rdx,rax
  4092d0:	lea    rax,[r8+rdx*1]
  4092d4:	mov    r8d,0x2
  4092da:	mov    rdx,r13
  4092dd:	mov    QWORD PTR [rbp-0x30],rax
  4092e1:	call   408ef0 <_head_lib64_libkernel32_a-0x8110>
  4092e6:	jmp    4091ab <_head_lib64_libkernel32_a-0x7e55>
  4092eb:	lea    rcx,[rip+0x3c36]        # 40cf28 <_head_lib64_libkernel32_a-0x40d8>
  4092f2:	mov    QWORD PTR [rbp-0x30],0x0
  4092fa:	call   408e80 <_head_lib64_libkernel32_a-0x8180>
  4092ff:	mov    edx,DWORD PTR [rcx]
  409301:	mov    rdi,r13
  409304:	mov    r10,rdx
  409307:	or     r10,r14
  40930a:	test   edx,edx
  40930c:	cmovs  rdx,r10
  409310:	sub    rdx,rax
  409313:	lea    rax,[r8+rdx*1]
  409317:	mov    r8d,0x4
  40931d:	mov    rdx,r13
  409320:	mov    QWORD PTR [rbp-0x30],rax
  409324:	call   408ef0 <_head_lib64_libkernel32_a-0x8110>
  409329:	jmp    4091ab <_head_lib64_libkernel32_a-0x7e55>
  40932e:	add    rbx,QWORD PTR [rip+0x7413]        # 410748 <_head_lib64_libkernel32_a-0x8b8>
  409335:	lea    rcx,[rip+0x3b54]        # 40ce90 <_head_lib64_libkernel32_a-0x4170>
  40933c:	mov    rax,QWORD PTR [rbx+0x10]
  409340:	mov    r8,QWORD PTR [rbx+0x8]
  409344:	mov    edx,DWORD PTR [rax+0x8]
  409347:	call   408e80 <_head_lib64_libkernel32_a-0x8180>
  40934c:	lea    rcx,[rip+0x3b9d]        # 40cef0 <_head_lib64_libkernel32_a-0x4110>
  409353:	call   408e80 <_head_lib64_libkernel32_a-0x8180>
  409358:	nop
  409359:	nop
  40935a:	nop
  40935b:	nop
  40935c:	nop
  40935d:	nop
  40935e:	nop
  40935f:	nop
  409360:	sub    rsp,0x28
  409364:	mov    eax,DWORD PTR [rcx]
  409366:	cmp    eax,0xc0000091
  40936b:	ja     4093d0 <_head_lib64_libkernel32_a-0x7c30>
  40936d:	cmp    eax,0xc000008d
  409372:	jae    4093ef <_head_lib64_libkernel32_a-0x7c11>
  409374:	cmp    eax,0xc0000008
  409379:	je     409490 <_head_lib64_libkernel32_a-0x7b70>
  40937f:	ja     409460 <_head_lib64_libkernel32_a-0x7ba0>
  409385:	cmp    eax,0x80000002
  40938a:	je     409490 <_head_lib64_libkernel32_a-0x7b70>
  409390:	cmp    eax,0xc0000005
  409395:	jne    40946e <_head_lib64_libkernel32_a-0x7b92>
  40939b:	xor    edx,edx
  40939d:	mov    ecx,0xb
  4093a2:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  4093a7:	cmp    rax,0x1
  4093ab:	je     4094f0 <_head_lib64_libkernel32_a-0x7b10>
  4093b1:	test   rax,rax
  4093b4:	je     4094d0 <_head_lib64_libkernel32_a-0x7b30>
  4093ba:	mov    ecx,0xb
  4093bf:	call   rax
  4093c1:	xor    eax,eax
  4093c3:	add    rsp,0x28
  4093c7:	ret    
  4093c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4093d0:	cmp    eax,0xc0000094
  4093d5:	je     4094a0 <_head_lib64_libkernel32_a-0x7b60>
  4093db:	ja     409420 <_head_lib64_libkernel32_a-0x7be0>
  4093dd:	cmp    eax,0xc0000092
  4093e2:	je     409490 <_head_lib64_libkernel32_a-0x7b70>
  4093e8:	cmp    eax,0xc0000093
  4093ed:	jne    40946e <_head_lib64_libkernel32_a-0x7b92>
  4093ef:	xor    edx,edx
  4093f1:	mov    ecx,0x8
  4093f6:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  4093fb:	cmp    rax,0x1
  4093ff:	mov    rdx,rax
  409402:	je     409478 <_head_lib64_libkernel32_a-0x7b88>
  409404:	test   rdx,rdx
  409407:	mov    eax,0x1
  40940c:	je     4093c3 <_head_lib64_libkernel32_a-0x7c3d>
  40940e:	mov    ecx,0x8
  409413:	call   rdx
  409415:	xor    eax,eax
  409417:	add    rsp,0x28
  40941b:	ret    
  40941c:	nop    DWORD PTR [rax+0x0]
  409420:	cmp    eax,0xc0000095
  409425:	je     409490 <_head_lib64_libkernel32_a-0x7b70>
  409427:	cmp    eax,0xc0000096
  40942c:	jne    40946e <_head_lib64_libkernel32_a-0x7b92>
  40942e:	xor    edx,edx
  409430:	mov    ecx,0x4
  409435:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  40943a:	cmp    rax,0x1
  40943e:	je     4094da <_head_lib64_libkernel32_a-0x7b26>
  409444:	test   rax,rax
  409447:	je     4094d0 <_head_lib64_libkernel32_a-0x7b30>
  40944d:	mov    ecx,0x4
  409452:	call   rax
  409454:	xor    eax,eax
  409456:	jmp    4093c3 <_head_lib64_libkernel32_a-0x7c3d>
  40945b:	nop    DWORD PTR [rax+rax*1+0x0]
  409460:	cmp    eax,0xc000001d
  409465:	je     40942e <_head_lib64_libkernel32_a-0x7bd2>
  409467:	cmp    eax,0xc000008c
  40946c:	je     409490 <_head_lib64_libkernel32_a-0x7b70>
  40946e:	mov    eax,0x1
  409473:	add    rsp,0x28
  409477:	ret    
  409478:	mov    edx,0x1
  40947d:	mov    ecx,0x8
  409482:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  409487:	call   408e50 <_head_lib64_libkernel32_a-0x81b0>
  40948c:	nop    DWORD PTR [rax+0x0]
  409490:	xor    eax,eax
  409492:	add    rsp,0x28
  409496:	ret    
  409497:	nop    WORD PTR [rax+rax*1+0x0]
  4094a0:	xor    edx,edx
  4094a2:	mov    ecx,0x8
  4094a7:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  4094ac:	cmp    rax,0x1
  4094b0:	mov    rdx,rax
  4094b3:	jne    409404 <_head_lib64_libkernel32_a-0x7bfc>
  4094b9:	mov    edx,0x1
  4094be:	mov    ecx,0x8
  4094c3:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  4094c8:	xor    eax,eax
  4094ca:	jmp    4093c3 <_head_lib64_libkernel32_a-0x7c3d>
  4094cf:	nop
  4094d0:	mov    eax,0x4
  4094d5:	add    rsp,0x28
  4094d9:	ret    
  4094da:	mov    edx,0x1
  4094df:	mov    ecx,0x4
  4094e4:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  4094e9:	xor    eax,eax
  4094eb:	jmp    4093c3 <_head_lib64_libkernel32_a-0x7c3d>
  4094f0:	mov    edx,0x1
  4094f5:	mov    ecx,0xb
  4094fa:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  4094ff:	xor    eax,eax
  409501:	jmp    4093c3 <_head_lib64_libkernel32_a-0x7c3d>
  409506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409510:	push   r12
  409512:	push   rbp
  409513:	push   rdi
  409514:	push   rsi
  409515:	push   rbx
  409516:	sub    rsp,0x20
  40951a:	call   409c80 <_head_lib64_libkernel32_a-0x7380>
  40951f:	mov    rbp,rax
  409522:	mov    eax,DWORD PTR [rip+0x7260]        # 410788 <_head_lib64_libkernel32_a-0x878>
  409528:	test   eax,eax
  40952a:	jne    409551 <_head_lib64_libkernel32_a-0x7aaf>
  40952c:	test   rbp,rbp
  40952f:	je     409551 <_head_lib64_libkernel32_a-0x7aaf>
  409531:	lea    rcx,[rip+0x3a28]        # 40cf60 <_head_lib64_libkernel32_a-0x40a0>
  409538:	mov    DWORD PTR [rip+0x7246],0x1        # 410788 <_head_lib64_libkernel32_a-0x878>
  409542:	call   409ac0 <_head_lib64_libkernel32_a-0x7540>
  409547:	test   rax,rax
  40954a:	je     409560 <_head_lib64_libkernel32_a-0x7aa0>
  40954c:	mov    eax,0x1
  409551:	add    rsp,0x20
  409555:	pop    rbx
  409556:	pop    rsi
  409557:	pop    rdi
  409558:	pop    rbp
  409559:	pop    r12
  40955b:	ret    
  40955c:	nop    DWORD PTR [rax+0x0]
  409560:	lea    rbx,[rip+0x7359]        # 4108c0 <_head_lib64_libkernel32_a-0x740>
  409567:	mov    ecx,0x30
  40956c:	lea    rdx,[rip+0x724d]        # 4107c0 <_head_lib64_libkernel32_a-0x840>
  409573:	lea    r12,[rip+0xfffffffffffffde6]        # 409360 <_head_lib64_libkernel32_a-0x7ca0>
  40957a:	xor    esi,esi
  40957c:	mov    rdi,rbx
  40957f:	rep stos QWORD PTR es:[rdi],rax
  409582:	mov    rdi,rdx
  409585:	sub    r12,rbp
  409588:	mov    cl,0x20
  40958a:	rep stos QWORD PTR es:[rdi],rax
  40958d:	mov    rdi,rdx
  409590:	jmp    4095c0 <_head_lib64_libkernel32_a-0x7a40>
  409592:	mov    BYTE PTR [rdi],0x9
  409595:	mov    DWORD PTR [rdi+0x4],r12d
  409599:	add    rsi,0x1
  40959d:	mov    edx,DWORD PTR [rax+0xc]
  4095a0:	add    rbx,0xc
  4095a4:	mov    DWORD PTR [rbx-0xc],edx
  4095a7:	add    edx,DWORD PTR [rax+0x8]
  4095aa:	mov    rax,rdi
  4095ad:	sub    rax,rbp
  4095b0:	add    rdi,0x8
  4095b4:	mov    DWORD PTR [rbx-0x4],eax
  4095b7:	mov    DWORD PTR [rbx-0x8],edx
  4095ba:	cmp    rsi,0x20
  4095be:	je     4095f5 <_head_lib64_libkernel32_a-0x7a0b>
  4095c0:	mov    rcx,rsi
  4095c3:	call   409bf0 <_head_lib64_libkernel32_a-0x7410>
  4095c8:	test   rax,rax
  4095cb:	jne    409592 <_head_lib64_libkernel32_a-0x7a6e>
  4095cd:	test   rsi,rsi
  4095d0:	je     40954c <_head_lib64_libkernel32_a-0x7ab4>
  4095d6:	mov    edx,esi
  4095d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4095e0:	mov    r8,rbp
  4095e3:	lea    rcx,[rip+0x72d6]        # 4108c0 <_head_lib64_libkernel32_a-0x740>
  4095ea:	call   QWORD PTR [rip+0x80f8]        # 4116e8 <__imp_RtlAddFunctionTable>
  4095f0:	jmp    40954c <_head_lib64_libkernel32_a-0x7ab4>
  4095f5:	mov    edx,0x20
  4095fa:	jmp    4095e0 <_head_lib64_libkernel32_a-0x7a20>
  4095fc:	nop    DWORD PTR [rax+0x0]
  409600:	push   rbx
  409601:	sub    rsp,0x20
  409605:	mov    rdx,QWORD PTR [rcx]
  409608:	mov    eax,DWORD PTR [rdx]
  40960a:	mov    r8d,eax
  40960d:	and    r8d,0x20ffffff
  409614:	cmp    r8d,0x20474343
  40961b:	je     409720 <_head_lib64_libkernel32_a-0x78e0>
  409621:	cmp    eax,0xc0000091
  409626:	mov    rbx,rcx
  409629:	ja     4096b0 <_head_lib64_libkernel32_a-0x7950>
  40962f:	cmp    eax,0xc000008d
  409634:	jae    4096c7 <_head_lib64_libkernel32_a-0x7939>
  40963a:	cmp    eax,0xc0000008
  40963f:	je     409673 <_head_lib64_libkernel32_a-0x798d>
  409641:	ja     409680 <_head_lib64_libkernel32_a-0x7980>
  409643:	cmp    eax,0x80000002
  409648:	je     409673 <_head_lib64_libkernel32_a-0x798d>
  40964a:	cmp    eax,0xc0000005
  40964f:	jne    409692 <_head_lib64_libkernel32_a-0x796e>
  409651:	xor    edx,edx
  409653:	mov    ecx,0xb
  409658:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  40965d:	cmp    rax,0x1
  409661:	je     409790 <_head_lib64_libkernel32_a-0x7870>
  409667:	test   rax,rax
  40966a:	je     409692 <_head_lib64_libkernel32_a-0x796e>
  40966c:	mov    ecx,0xb
  409671:	call   rax
  409673:	mov    eax,0xffffffff
  409678:	add    rsp,0x20
  40967c:	pop    rbx
  40967d:	ret    
  40967e:	xchg   ax,ax
  409680:	cmp    eax,0xc000001d
  409685:	je     409746 <_head_lib64_libkernel32_a-0x78ba>
  40968b:	cmp    eax,0xc000008c
  409690:	je     409673 <_head_lib64_libkernel32_a-0x798d>
  409692:	mov    rax,QWORD PTR [rip+0x70e7]        # 410780 <_head_lib64_libkernel32_a-0x880>
  409699:	test   rax,rax
  40969c:	je     409678 <_head_lib64_libkernel32_a-0x7988>
  40969e:	mov    rcx,rbx
  4096a1:	add    rsp,0x20
  4096a5:	pop    rbx
  4096a6:	rex.W jmp rax
  4096a9:	nop    DWORD PTR [rax+0x0]
  4096b0:	cmp    eax,0xc0000094
  4096b5:	je     4096f2 <_head_lib64_libkernel32_a-0x790e>
  4096b7:	ja     409730 <_head_lib64_libkernel32_a-0x78d0>
  4096b9:	cmp    eax,0xc0000092
  4096be:	je     409673 <_head_lib64_libkernel32_a-0x798d>
  4096c0:	cmp    eax,0xc0000093
  4096c5:	jne    409692 <_head_lib64_libkernel32_a-0x796e>
  4096c7:	xor    edx,edx
  4096c9:	mov    ecx,0x8
  4096ce:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  4096d3:	cmp    rax,0x1
  4096d7:	jne    409704 <_head_lib64_libkernel32_a-0x78fc>
  4096d9:	mov    edx,0x1
  4096de:	mov    ecx,0x8
  4096e3:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  4096e8:	call   408e50 <_head_lib64_libkernel32_a-0x81b0>
  4096ed:	jmp    409673 <_head_lib64_libkernel32_a-0x798d>
  4096f2:	xor    edx,edx
  4096f4:	mov    ecx,0x8
  4096f9:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  4096fe:	cmp    rax,0x1
  409702:	je     409772 <_head_lib64_libkernel32_a-0x788e>
  409704:	test   rax,rax
  409707:	je     409692 <_head_lib64_libkernel32_a-0x796e>
  409709:	mov    ecx,0x8
  40970e:	call   rax
  409710:	mov    eax,0xffffffff
  409715:	jmp    409678 <_head_lib64_libkernel32_a-0x7988>
  40971a:	nop    WORD PTR [rax+rax*1+0x0]
  409720:	test   BYTE PTR [rdx+0x4],0x1
  409724:	jne    409621 <_head_lib64_libkernel32_a-0x79df>
  40972a:	jmp    409673 <_head_lib64_libkernel32_a-0x798d>
  40972f:	nop
  409730:	cmp    eax,0xc0000095
  409735:	je     409673 <_head_lib64_libkernel32_a-0x798d>
  40973b:	cmp    eax,0xc0000096
  409740:	jne    409692 <_head_lib64_libkernel32_a-0x796e>
  409746:	xor    edx,edx
  409748:	mov    ecx,0x4
  40974d:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  409752:	cmp    rax,0x1
  409756:	je     4097a4 <_head_lib64_libkernel32_a-0x785c>
  409758:	test   rax,rax
  40975b:	je     409692 <_head_lib64_libkernel32_a-0x796e>
  409761:	mov    ecx,0x4
  409766:	call   rax
  409768:	mov    eax,0xffffffff
  40976d:	jmp    409678 <_head_lib64_libkernel32_a-0x7988>
  409772:	mov    edx,0x1
  409777:	mov    ecx,0x8
  40977c:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  409781:	jmp    409673 <_head_lib64_libkernel32_a-0x798d>
  409786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409790:	mov    edx,0x1
  409795:	mov    ecx,0xb
  40979a:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  40979f:	jmp    409673 <_head_lib64_libkernel32_a-0x798d>
  4097a4:	mov    edx,0x1
  4097a9:	mov    ecx,0x4
  4097ae:	call   409e28 <_head_lib64_libkernel32_a-0x71d8>
  4097b3:	jmp    409673 <_head_lib64_libkernel32_a-0x798d>
  4097b8:	nop
  4097b9:	nop
  4097ba:	nop
  4097bb:	nop
  4097bc:	nop
  4097bd:	nop
  4097be:	nop
  4097bf:	nop
  4097c0:	push   rbp
  4097c1:	push   rdi
  4097c2:	push   rsi
  4097c3:	push   rbx
  4097c4:	sub    rsp,0x28
  4097c8:	lea    rcx,[rip+0x7291]        # 410a60 <_head_lib64_libkernel32_a-0x5a0>
  4097cf:	call   QWORD PTR [rip+0x7eab]        # 411680 <__imp_EnterCriticalSection>
  4097d5:	mov    rbx,QWORD PTR [rip+0x7264]        # 410a40 <_head_lib64_libkernel32_a-0x5c0>
  4097dc:	test   rbx,rbx
  4097df:	je     409814 <_head_lib64_libkernel32_a-0x77ec>
  4097e1:	mov    rbp,QWORD PTR [rip+0x7f38]        # 411720 <__imp_TlsGetValue>
  4097e8:	mov    rdi,QWORD PTR [rip+0x7eb1]        # 4116a0 <__imp_GetLastError>
  4097ef:	nop
  4097f0:	mov    ecx,DWORD PTR [rbx]
  4097f2:	call   rbp
  4097f4:	mov    rsi,rax
  4097f7:	call   rdi
  4097f9:	test   eax,eax
  4097fb:	jne    40980b <_head_lib64_libkernel32_a-0x77f5>
  4097fd:	test   rsi,rsi
  409800:	je     40980b <_head_lib64_libkernel32_a-0x77f5>
  409802:	mov    rax,QWORD PTR [rbx+0x8]
  409806:	mov    rcx,rsi
  409809:	call   rax
  40980b:	mov    rbx,QWORD PTR [rbx+0x10]
  40980f:	test   rbx,rbx
  409812:	jne    4097f0 <_head_lib64_libkernel32_a-0x7810>
  409814:	mov    rax,QWORD PTR [rip+0x7ebd]        # 4116d8 <__imp_LeaveCriticalSection>
  40981b:	lea    rcx,[rip+0x723e]        # 410a60 <_head_lib64_libkernel32_a-0x5a0>
  409822:	add    rsp,0x28
  409826:	pop    rbx
  409827:	pop    rsi
  409828:	pop    rdi
  409829:	pop    rbp
  40982a:	rex.W jmp rax
  40982d:	nop    DWORD PTR [rax]
  409830:	push   rdi
  409831:	push   rsi
  409832:	push   rbx
  409833:	sub    rsp,0x20
  409837:	mov    eax,DWORD PTR [rip+0x720b]        # 410a48 <_head_lib64_libkernel32_a-0x5b8>
  40983d:	test   eax,eax
  40983f:	jne    409850 <_head_lib64_libkernel32_a-0x77b0>
  409841:	add    rsp,0x20
  409845:	pop    rbx
  409846:	pop    rsi
  409847:	pop    rdi
  409848:	ret    
  409849:	nop    DWORD PTR [rax+0x0]
  409850:	mov    rsi,rdx
  409853:	mov    edi,ecx
  409855:	mov    edx,0x18
  40985a:	mov    ecx,0x1
  40985f:	call   409e90 <_head_lib64_libkernel32_a-0x7170>
  409864:	test   rax,rax
  409867:	mov    rbx,rax
  40986a:	je     4098a8 <_head_lib64_libkernel32_a-0x7758>
  40986c:	mov    DWORD PTR [rax],edi
  40986e:	mov    QWORD PTR [rax+0x8],rsi
  409872:	lea    rcx,[rip+0x71e7]        # 410a60 <_head_lib64_libkernel32_a-0x5a0>
  409879:	call   QWORD PTR [rip+0x7e01]        # 411680 <__imp_EnterCriticalSection>
  40987f:	mov    rax,QWORD PTR [rip+0x71ba]        # 410a40 <_head_lib64_libkernel32_a-0x5c0>
  409886:	lea    rcx,[rip+0x71d3]        # 410a60 <_head_lib64_libkernel32_a-0x5a0>
  40988d:	mov    QWORD PTR [rip+0x71ac],rbx        # 410a40 <_head_lib64_libkernel32_a-0x5c0>
  409894:	mov    QWORD PTR [rbx+0x10],rax
  409898:	call   QWORD PTR [rip+0x7e3a]        # 4116d8 <__imp_LeaveCriticalSection>
  40989e:	xor    eax,eax
  4098a0:	add    rsp,0x20
  4098a4:	pop    rbx
  4098a5:	pop    rsi
  4098a6:	pop    rdi
  4098a7:	ret    
  4098a8:	mov    eax,0xffffffff
  4098ad:	jmp    409841 <_head_lib64_libkernel32_a-0x77bf>
  4098af:	nop
  4098b0:	push   rbx
  4098b1:	sub    rsp,0x20
  4098b5:	mov    eax,DWORD PTR [rip+0x718d]        # 410a48 <_head_lib64_libkernel32_a-0x5b8>
  4098bb:	test   eax,eax
  4098bd:	jne    4098d0 <_head_lib64_libkernel32_a-0x7730>
  4098bf:	xor    eax,eax
  4098c1:	add    rsp,0x20
  4098c5:	pop    rbx
  4098c6:	ret    
  4098c7:	nop    WORD PTR [rax+rax*1+0x0]
  4098d0:	mov    ebx,ecx
  4098d2:	lea    rcx,[rip+0x7187]        # 410a60 <_head_lib64_libkernel32_a-0x5a0>
  4098d9:	call   QWORD PTR [rip+0x7da1]        # 411680 <__imp_EnterCriticalSection>
  4098df:	mov    rdx,QWORD PTR [rip+0x715a]        # 410a40 <_head_lib64_libkernel32_a-0x5c0>
  4098e6:	test   rdx,rdx
  4098e9:	je     409907 <_head_lib64_libkernel32_a-0x76f9>
  4098eb:	mov    eax,DWORD PTR [rdx]
  4098ed:	cmp    eax,ebx
  4098ef:	jne    4098fe <_head_lib64_libkernel32_a-0x7702>
  4098f1:	jmp    40993f <_head_lib64_libkernel32_a-0x76c1>
  4098f3:	mov    r8d,DWORD PTR [rax]
  4098f6:	cmp    r8d,ebx
  4098f9:	je     409920 <_head_lib64_libkernel32_a-0x76e0>
  4098fb:	mov    rdx,rax
  4098fe:	mov    rax,QWORD PTR [rdx+0x10]
  409902:	test   rax,rax
  409905:	jne    4098f3 <_head_lib64_libkernel32_a-0x770d>
  409907:	lea    rcx,[rip+0x7152]        # 410a60 <_head_lib64_libkernel32_a-0x5a0>
  40990e:	call   QWORD PTR [rip+0x7dc4]        # 4116d8 <__imp_LeaveCriticalSection>
  409914:	xor    eax,eax
  409916:	add    rsp,0x20
  40991a:	pop    rbx
  40991b:	ret    
  40991c:	nop    DWORD PTR [rax+0x0]
  409920:	mov    rcx,rax
  409923:	mov    rax,QWORD PTR [rax+0x10]
  409927:	mov    QWORD PTR [rdx+0x10],rax
  40992b:	call   409e60 <_head_lib64_libkernel32_a-0x71a0>
  409930:	lea    rcx,[rip+0x7129]        # 410a60 <_head_lib64_libkernel32_a-0x5a0>
  409937:	call   QWORD PTR [rip+0x7d9b]        # 4116d8 <__imp_LeaveCriticalSection>
  40993d:	jmp    409914 <_head_lib64_libkernel32_a-0x76ec>
  40993f:	mov    rax,QWORD PTR [rdx+0x10]
  409943:	mov    rcx,rdx
  409946:	mov    QWORD PTR [rip+0x70f3],rax        # 410a40 <_head_lib64_libkernel32_a-0x5c0>
  40994d:	jmp    40992b <_head_lib64_libkernel32_a-0x76d5>
  40994f:	nop
  409950:	push   rbx
  409951:	sub    rsp,0x20
  409955:	cmp    edx,0x1
  409958:	je     4099f0 <_head_lib64_libkernel32_a-0x7610>
  40995e:	jb     409990 <_head_lib64_libkernel32_a-0x7670>
  409960:	cmp    edx,0x2
  409963:	je     409980 <_head_lib64_libkernel32_a-0x7680>
  409965:	cmp    edx,0x3
  409968:	jne    409985 <_head_lib64_libkernel32_a-0x767b>
  40996a:	mov    eax,DWORD PTR [rip+0x70d8]        # 410a48 <_head_lib64_libkernel32_a-0x5b8>
  409970:	test   eax,eax
  409972:	je     409985 <_head_lib64_libkernel32_a-0x767b>
  409974:	call   4097c0 <_head_lib64_libkernel32_a-0x7840>
  409979:	jmp    409985 <_head_lib64_libkernel32_a-0x767b>
  40997b:	nop    DWORD PTR [rax+rax*1+0x0]
  409980:	call   408e50 <_head_lib64_libkernel32_a-0x81b0>
  409985:	mov    eax,0x1
  40998a:	add    rsp,0x20
  40998e:	pop    rbx
  40998f:	ret    
  409990:	mov    eax,DWORD PTR [rip+0x70b2]        # 410a48 <_head_lib64_libkernel32_a-0x5b8>
  409996:	test   eax,eax
  409998:	jne    409a20 <_head_lib64_libkernel32_a-0x75e0>
  40999e:	mov    eax,DWORD PTR [rip+0x70a4]        # 410a48 <_head_lib64_libkernel32_a-0x5b8>
  4099a4:	cmp    eax,0x1
  4099a7:	jne    409985 <_head_lib64_libkernel32_a-0x767b>
  4099a9:	mov    rcx,QWORD PTR [rip+0x7090]        # 410a40 <_head_lib64_libkernel32_a-0x5c0>
  4099b0:	test   rcx,rcx
  4099b3:	je     4099c6 <_head_lib64_libkernel32_a-0x763a>
  4099b5:	mov    rbx,QWORD PTR [rcx+0x10]
  4099b9:	call   409e60 <_head_lib64_libkernel32_a-0x71a0>
  4099be:	test   rbx,rbx
  4099c1:	mov    rcx,rbx
  4099c4:	jne    4099b5 <_head_lib64_libkernel32_a-0x764b>
  4099c6:	lea    rcx,[rip+0x7093]        # 410a60 <_head_lib64_libkernel32_a-0x5a0>
  4099cd:	mov    QWORD PTR [rip+0x7068],0x0        # 410a40 <_head_lib64_libkernel32_a-0x5c0>
  4099d8:	mov    DWORD PTR [rip+0x7066],0x0        # 410a48 <_head_lib64_libkernel32_a-0x5b8>
  4099e2:	call   QWORD PTR [rip+0x7c90]        # 411678 <__IAT_start__>
  4099e8:	jmp    409985 <_head_lib64_libkernel32_a-0x767b>
  4099ea:	nop    WORD PTR [rax+rax*1+0x0]
  4099f0:	mov    eax,DWORD PTR [rip+0x7052]        # 410a48 <_head_lib64_libkernel32_a-0x5b8>
  4099f6:	test   eax,eax
  4099f8:	je     409a10 <_head_lib64_libkernel32_a-0x75f0>
  4099fa:	mov    eax,0x1
  4099ff:	mov    DWORD PTR [rip+0x703f],0x1        # 410a48 <_head_lib64_libkernel32_a-0x5b8>
  409a09:	add    rsp,0x20
  409a0d:	pop    rbx
  409a0e:	ret    
  409a0f:	nop
  409a10:	lea    rcx,[rip+0x7049]        # 410a60 <_head_lib64_libkernel32_a-0x5a0>
  409a17:	call   QWORD PTR [rip+0x7cb3]        # 4116d0 <__imp_InitializeCriticalSection>
  409a1d:	jmp    4099fa <_head_lib64_libkernel32_a-0x7606>
  409a1f:	nop
  409a20:	call   4097c0 <_head_lib64_libkernel32_a-0x7840>
  409a25:	jmp    40999e <_head_lib64_libkernel32_a-0x7662>
  409a2a:	nop
  409a2b:	nop
  409a2c:	nop
  409a2d:	nop
  409a2e:	nop
  409a2f:	nop
  409a30:	movsxd rax,DWORD PTR [rcx+0x3c]
  409a34:	add    rcx,rax
  409a37:	xor    eax,eax
  409a39:	cmp    DWORD PTR [rcx],0x4550
  409a3f:	je     409a43 <_head_lib64_libkernel32_a-0x75bd>
  409a41:	repz ret 
  409a43:	xor    eax,eax
  409a45:	cmp    WORD PTR [rcx+0x18],0x20b
  409a4b:	sete   al
  409a4e:	ret    
  409a4f:	nop
  409a50:	cmp    WORD PTR [rcx],0x5a4d
  409a55:	je     409a60 <_head_lib64_libkernel32_a-0x75a0>
  409a57:	xor    eax,eax
  409a59:	ret    
  409a5a:	nop    WORD PTR [rax+rax*1+0x0]
  409a60:	jmp    409a30 <_head_lib64_libkernel32_a-0x75d0>
  409a62:	nop    DWORD PTR [rax+0x0]
  409a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a70:	movsxd rax,DWORD PTR [rcx+0x3c]
  409a74:	add    rcx,rax
  409a77:	movzx  eax,WORD PTR [rcx+0x14]
  409a7b:	lea    rax,[rcx+rax*1+0x18]
  409a80:	movzx  ecx,WORD PTR [rcx+0x6]
  409a84:	test   ecx,ecx
  409a86:	je     409ab1 <_head_lib64_libkernel32_a-0x754f>
  409a88:	sub    ecx,0x1
  409a8b:	lea    rcx,[rcx+rcx*4]
  409a8f:	lea    r9,[rax+rcx*8+0x28]
  409a94:	mov    r8d,DWORD PTR [rax+0xc]
  409a98:	cmp    r8,rdx
  409a9b:	mov    rcx,r8
  409a9e:	ja     409aa8 <_head_lib64_libkernel32_a-0x7558>
  409aa0:	add    ecx,DWORD PTR [rax+0x8]
  409aa3:	cmp    rdx,rcx
  409aa6:	jb     409ab3 <_head_lib64_libkernel32_a-0x754d>
  409aa8:	add    rax,0x28
  409aac:	cmp    rax,r9
  409aaf:	jne    409a94 <_head_lib64_libkernel32_a-0x756c>
  409ab1:	xor    eax,eax
  409ab3:	repz ret 
  409ab5:	nop
  409ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ac0:	push   rdi
  409ac1:	push   rsi
  409ac2:	push   rbx
  409ac3:	sub    rsp,0x20
  409ac7:	mov    rsi,rcx
  409aca:	call   409e20 <_head_lib64_libkernel32_a-0x71e0>
  409acf:	cmp    rax,0x8
  409ad3:	ja     409af0 <_head_lib64_libkernel32_a-0x7510>
  409ad5:	mov    rbx,QWORD PTR [rip+0x34f4]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  409adc:	xor    edi,edi
  409ade:	cmp    WORD PTR [rbx],0x5a4d
  409ae3:	je     409b00 <_head_lib64_libkernel32_a-0x7500>
  409ae5:	mov    rax,rdi
  409ae8:	add    rsp,0x20
  409aec:	pop    rbx
  409aed:	pop    rsi
  409aee:	pop    rdi
  409aef:	ret    
  409af0:	xor    edi,edi
  409af2:	mov    rax,rdi
  409af5:	add    rsp,0x20
  409af9:	pop    rbx
  409afa:	pop    rsi
  409afb:	pop    rdi
  409afc:	ret    
  409afd:	nop    DWORD PTR [rax]
  409b00:	mov    rcx,rbx
  409b03:	call   409a30 <_head_lib64_libkernel32_a-0x75d0>
  409b08:	test   eax,eax
  409b0a:	je     409ae5 <_head_lib64_libkernel32_a-0x751b>
  409b0c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  409b10:	add    rdx,rbx
  409b13:	movzx  eax,WORD PTR [rdx+0x14]
  409b17:	lea    rbx,[rdx+rax*1+0x18]
  409b1c:	movzx  eax,WORD PTR [rdx+0x6]
  409b20:	test   eax,eax
  409b22:	je     409ae5 <_head_lib64_libkernel32_a-0x751b>
  409b24:	sub    eax,0x1
  409b27:	lea    rax,[rax+rax*4]
  409b2b:	lea    rdi,[rbx+rax*8+0x28]
  409b30:	jmp    409b3b <_head_lib64_libkernel32_a-0x74c5>
  409b32:	add    rbx,0x28
  409b36:	cmp    rbx,rdi
  409b39:	je     409af0 <_head_lib64_libkernel32_a-0x7510>
  409b3b:	mov    r8d,0x8
  409b41:	mov    rdx,rsi
  409b44:	mov    rcx,rbx
  409b47:	call   409e18 <_head_lib64_libkernel32_a-0x71e8>
  409b4c:	test   eax,eax
  409b4e:	jne    409b32 <_head_lib64_libkernel32_a-0x74ce>
  409b50:	mov    rdi,rbx
  409b53:	mov    rax,rdi
  409b56:	add    rsp,0x20
  409b5a:	pop    rbx
  409b5b:	pop    rsi
  409b5c:	pop    rdi
  409b5d:	ret    
  409b5e:	xchg   ax,ax
  409b60:	push   rsi
  409b61:	push   rbx
  409b62:	sub    rsp,0x28
  409b66:	mov    rbx,QWORD PTR [rip+0x3463]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  409b6d:	cmp    WORD PTR [rbx],0x5a4d
  409b72:	je     409b80 <_head_lib64_libkernel32_a-0x7480>
  409b74:	xor    eax,eax
  409b76:	add    rsp,0x28
  409b7a:	pop    rbx
  409b7b:	pop    rsi
  409b7c:	ret    
  409b7d:	nop    DWORD PTR [rax]
  409b80:	mov    rsi,rcx
  409b83:	mov    rcx,rbx
  409b86:	call   409a30 <_head_lib64_libkernel32_a-0x75d0>
  409b8b:	test   eax,eax
  409b8d:	je     409b74 <_head_lib64_libkernel32_a-0x748c>
  409b8f:	sub    rsi,rbx
  409b92:	mov    rcx,rbx
  409b95:	mov    rdx,rsi
  409b98:	add    rsp,0x28
  409b9c:	pop    rbx
  409b9d:	pop    rsi
  409b9e:	jmp    409a70 <_head_lib64_libkernel32_a-0x7590>
  409ba3:	nop    DWORD PTR [rax]
  409ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409bb0:	push   rbx
  409bb1:	sub    rsp,0x20
  409bb5:	mov    rbx,QWORD PTR [rip+0x3414]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  409bbc:	xor    eax,eax
  409bbe:	cmp    WORD PTR [rbx],0x5a4d
  409bc3:	je     409bd0 <_head_lib64_libkernel32_a-0x7430>
  409bc5:	add    rsp,0x20
  409bc9:	pop    rbx
  409bca:	ret    
  409bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  409bd0:	mov    rcx,rbx
  409bd3:	call   409a30 <_head_lib64_libkernel32_a-0x75d0>
  409bd8:	test   eax,eax
  409bda:	je     409bc5 <_head_lib64_libkernel32_a-0x743b>
  409bdc:	movsxd rax,DWORD PTR [rbx+0x3c]
  409be0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  409be5:	add    rsp,0x20
  409be9:	pop    rbx
  409bea:	ret    
  409beb:	nop    DWORD PTR [rax+rax*1+0x0]
  409bf0:	push   rdi
  409bf1:	push   rsi
  409bf2:	push   rbx
  409bf3:	sub    rsp,0x20
  409bf7:	mov    rsi,QWORD PTR [rip+0x33d2]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  409bfe:	xor    edi,edi
  409c00:	mov    rbx,rcx
  409c03:	cmp    WORD PTR [rsi],0x5a4d
  409c08:	je     409c15 <_head_lib64_libkernel32_a-0x73eb>
  409c0a:	mov    rax,rdi
  409c0d:	add    rsp,0x20
  409c11:	pop    rbx
  409c12:	pop    rsi
  409c13:	pop    rdi
  409c14:	ret    
  409c15:	mov    rcx,rsi
  409c18:	call   409a30 <_head_lib64_libkernel32_a-0x75d0>
  409c1d:	test   eax,eax
  409c1f:	je     409c0a <_head_lib64_libkernel32_a-0x73f6>
  409c21:	movsxd rax,DWORD PTR [rsi+0x3c]
  409c25:	add    rsi,rax
  409c28:	movzx  eax,WORD PTR [rsi+0x14]
  409c2c:	lea    rdx,[rsi+rax*1+0x18]
  409c31:	movzx  eax,WORD PTR [rsi+0x6]
  409c35:	test   eax,eax
  409c37:	je     409c0a <_head_lib64_libkernel32_a-0x73f6>
  409c39:	sub    eax,0x1
  409c3c:	lea    rax,[rax+rax*4]
  409c40:	lea    rax,[rdx+rax*8+0x28]
  409c45:	test   BYTE PTR [rdx+0x27],0x20
  409c49:	je     409c54 <_head_lib64_libkernel32_a-0x73ac>
  409c4b:	test   rbx,rbx
  409c4e:	je     409c70 <_head_lib64_libkernel32_a-0x7390>
  409c50:	sub    rbx,0x1
  409c54:	add    rdx,0x28
  409c58:	cmp    rdx,rax
  409c5b:	jne    409c45 <_head_lib64_libkernel32_a-0x73bb>
  409c5d:	xor    edi,edi
  409c5f:	mov    rax,rdi
  409c62:	add    rsp,0x20
  409c66:	pop    rbx
  409c67:	pop    rsi
  409c68:	pop    rdi
  409c69:	ret    
  409c6a:	nop    WORD PTR [rax+rax*1+0x0]
  409c70:	mov    rdi,rdx
  409c73:	mov    rax,rdi
  409c76:	add    rsp,0x20
  409c7a:	pop    rbx
  409c7b:	pop    rsi
  409c7c:	pop    rdi
  409c7d:	ret    
  409c7e:	xchg   ax,ax
  409c80:	push   rsi
  409c81:	push   rbx
  409c82:	sub    rsp,0x28
  409c86:	mov    rsi,QWORD PTR [rip+0x3343]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  409c8d:	xor    ebx,ebx
  409c8f:	cmp    WORD PTR [rsi],0x5a4d
  409c94:	je     409ca0 <_head_lib64_libkernel32_a-0x7360>
  409c96:	mov    rax,rbx
  409c99:	add    rsp,0x28
  409c9d:	pop    rbx
  409c9e:	pop    rsi
  409c9f:	ret    
  409ca0:	mov    rcx,rsi
  409ca3:	call   409a30 <_head_lib64_libkernel32_a-0x75d0>
  409ca8:	test   eax,eax
  409caa:	cmovne rbx,rsi
  409cae:	mov    rax,rbx
  409cb1:	add    rsp,0x28
  409cb5:	pop    rbx
  409cb6:	pop    rsi
  409cb7:	ret    
  409cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  409cc0:	push   rsi
  409cc1:	push   rbx
  409cc2:	sub    rsp,0x28
  409cc6:	mov    rbx,QWORD PTR [rip+0x3303]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  409ccd:	xor    eax,eax
  409ccf:	cmp    WORD PTR [rbx],0x5a4d
  409cd4:	je     409ce0 <_head_lib64_libkernel32_a-0x7320>
  409cd6:	add    rsp,0x28
  409cda:	pop    rbx
  409cdb:	pop    rsi
  409cdc:	ret    
  409cdd:	nop    DWORD PTR [rax]
  409ce0:	mov    rsi,rcx
  409ce3:	mov    rcx,rbx
  409ce6:	call   409a30 <_head_lib64_libkernel32_a-0x75d0>
  409ceb:	test   eax,eax
  409ced:	je     409cd6 <_head_lib64_libkernel32_a-0x732a>
  409cef:	sub    rsi,rbx
  409cf2:	mov    rcx,rbx
  409cf5:	mov    rdx,rsi
  409cf8:	call   409a70 <_head_lib64_libkernel32_a-0x7590>
  409cfd:	test   rax,rax
  409d00:	je     409d11 <_head_lib64_libkernel32_a-0x72ef>
  409d02:	mov    eax,DWORD PTR [rax+0x24]
  409d05:	not    eax
  409d07:	shr    eax,0x1f
  409d0a:	add    rsp,0x28
  409d0e:	pop    rbx
  409d0f:	pop    rsi
  409d10:	ret    
  409d11:	xor    eax,eax
  409d13:	jmp    409cd6 <_head_lib64_libkernel32_a-0x732a>
  409d15:	nop
  409d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d20:	push   rbp
  409d21:	push   rdi
  409d22:	push   rsi
  409d23:	push   rbx
  409d24:	sub    rsp,0x28
  409d28:	mov    rdi,QWORD PTR [rip+0x32a1]        # 40cfd0 <_head_lib64_libkernel32_a-0x4030>
  409d2f:	xor    ebp,ebp
  409d31:	mov    esi,ecx
  409d33:	cmp    WORD PTR [rdi],0x5a4d
  409d38:	je     409d50 <_head_lib64_libkernel32_a-0x72b0>
  409d3a:	mov    rax,rbp
  409d3d:	add    rsp,0x28
  409d41:	pop    rbx
  409d42:	pop    rsi
  409d43:	pop    rdi
  409d44:	pop    rbp
  409d45:	ret    
  409d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d50:	mov    rcx,rdi
  409d53:	call   409a30 <_head_lib64_libkernel32_a-0x75d0>
  409d58:	test   eax,eax
  409d5a:	je     409d3a <_head_lib64_libkernel32_a-0x72c6>
  409d5c:	movsxd rax,DWORD PTR [rdi+0x3c]
  409d60:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  409d67:	test   edx,edx
  409d69:	je     409d3a <_head_lib64_libkernel32_a-0x72c6>
  409d6b:	mov    ebx,edx
  409d6d:	mov    rcx,rdi
  409d70:	mov    rdx,rbx
  409d73:	call   409a70 <_head_lib64_libkernel32_a-0x7590>
  409d78:	test   rax,rax
  409d7b:	je     409d3a <_head_lib64_libkernel32_a-0x72c6>
  409d7d:	add    rbx,rdi
  409d80:	mov    rdx,rbx
  409d83:	jne    409d97 <_head_lib64_libkernel32_a-0x7269>
  409d85:	jmp    409d3a <_head_lib64_libkernel32_a-0x72c6>
  409d87:	nop    WORD PTR [rax+rax*1+0x0]
  409d90:	sub    esi,0x1
  409d93:	add    rdx,0x14
  409d97:	mov    ecx,DWORD PTR [rdx+0x4]
  409d9a:	test   ecx,ecx
  409d9c:	jne    409da5 <_head_lib64_libkernel32_a-0x725b>
  409d9e:	mov    eax,DWORD PTR [rdx+0xc]
  409da1:	test   eax,eax
  409da3:	je     409dc0 <_head_lib64_libkernel32_a-0x7240>
  409da5:	test   esi,esi
  409da7:	jg     409d90 <_head_lib64_libkernel32_a-0x7270>
  409da9:	mov    ebp,DWORD PTR [rdx+0xc]
  409dac:	add    rbp,rdi
  409daf:	mov    rax,rbp
  409db2:	add    rsp,0x28
  409db6:	pop    rbx
  409db7:	pop    rsi
  409db8:	pop    rdi
  409db9:	pop    rbp
  409dba:	ret    
  409dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  409dc0:	xor    ebp,ebp
  409dc2:	mov    rax,rbp
  409dc5:	add    rsp,0x28
  409dc9:	pop    rbx
  409dca:	pop    rsi
  409dcb:	pop    rdi
  409dcc:	pop    rbp
  409dcd:	ret    
  409dce:	nop
  409dcf:	nop
  409dd0:	push   rcx
  409dd1:	push   rax
  409dd2:	cmp    rax,0x1000
  409dd8:	lea    rcx,[rsp+0x18]
  409ddd:	jb     409df8 <_head_lib64_libkernel32_a-0x7208>
  409ddf:	sub    rcx,0x1000
  409de6:	or     QWORD PTR [rcx],0x0
  409dea:	sub    rax,0x1000
  409df0:	cmp    rax,0x1000
  409df6:	ja     409ddf <_head_lib64_libkernel32_a-0x7221>
  409df8:	sub    rcx,rax
  409dfb:	or     QWORD PTR [rcx],0x0
  409dff:	pop    rax
  409e00:	pop    rcx
  409e01:	ret    
  409e02:	nop
  409e03:	nop
  409e04:	nop
  409e05:	nop
  409e06:	nop
  409e07:	nop
  409e08:	nop
  409e09:	nop
  409e0a:	nop
  409e0b:	nop
  409e0c:	nop
  409e0d:	nop
  409e0e:	nop
  409e0f:	nop
  409e10:	jmp    QWORD PTR [rip+0x7a52]        # 411868 <__imp_vfprintf>
  409e16:	nop
  409e17:	nop
  409e18:	jmp    QWORD PTR [rip+0x7a42]        # 411860 <__imp_strncmp>
  409e1e:	nop
  409e1f:	nop
  409e20:	jmp    QWORD PTR [rip+0x7a32]        # 411858 <__imp_strlen>
  409e26:	nop
  409e27:	nop
  409e28:	jmp    QWORD PTR [rip+0x7a22]        # 411850 <__imp_signal>
  409e2e:	nop
  409e2f:	nop
  409e30:	jmp    QWORD PTR [rip+0x7a12]        # 411848 <__imp_memcpy>
  409e36:	nop
  409e37:	nop
  409e38:	jmp    QWORD PTR [rip+0x7a02]        # 411840 <__imp_memcmp>
  409e3e:	nop
  409e3f:	nop
  409e40:	jmp    QWORD PTR [rip+0x79f2]        # 411838 <__imp_malloc>
  409e46:	nop
  409e47:	nop
  409e48:	jmp    QWORD PTR [rip+0x79e2]        # 411830 <__imp_fwrite>
  409e4e:	nop
  409e4f:	nop
  409e50:	jmp    QWORD PTR [rip+0x79d2]        # 411828 <__imp_ftell>
  409e56:	nop
  409e57:	nop
  409e58:	jmp    QWORD PTR [rip+0x79c2]        # 411820 <__imp_fseek>
  409e5e:	nop
  409e5f:	nop
  409e60:	jmp    QWORD PTR [rip+0x79b2]        # 411818 <__imp_free>
  409e66:	nop
  409e67:	nop
  409e68:	jmp    QWORD PTR [rip+0x79a2]        # 411810 <__imp_fread>
  409e6e:	nop
  409e6f:	nop
  409e70:	jmp    QWORD PTR [rip+0x7992]        # 411808 <__imp_fprintf>
  409e76:	nop
  409e77:	nop
  409e78:	jmp    QWORD PTR [rip+0x7982]        # 411800 <__imp_feof>
  409e7e:	nop
  409e7f:	nop
  409e80:	jmp    QWORD PTR [rip+0x7972]        # 4117f8 <__imp_fclose>
  409e86:	nop
  409e87:	nop
  409e88:	jmp    QWORD PTR [rip+0x7962]        # 4117f0 <__imp_exit>
  409e8e:	nop
  409e8f:	nop
  409e90:	jmp    QWORD PTR [rip+0x7952]        # 4117e8 <__imp_calloc>
  409e96:	nop
  409e97:	nop
  409e98:	jmp    QWORD PTR [rip+0x7942]        # 4117e0 <__imp_abort>
  409e9e:	nop
  409e9f:	nop
  409ea0:	jmp    QWORD PTR [rip+0x7932]        # 4117d8 <__imp__unlock>
  409ea6:	nop
  409ea7:	nop
  409ea8:	jmp    QWORD PTR [rip+0x7922]        # 4117d0 <__imp__onexit>
  409eae:	nop
  409eaf:	nop
  409eb0:	jmp    QWORD PTR [rip+0x7912]        # 4117c8 <__imp__lock>
  409eb6:	nop
  409eb7:	nop
  409eb8:	jmp    QWORD PTR [rip+0x7902]        # 4117c0 <__imp__initterm>
  409ebe:	nop
  409ebf:	nop
  409ec0:	jmp    QWORD PTR [rip+0x78ea]        # 4117b0 <__imp__errno>
  409ec6:	nop
  409ec7:	nop
  409ec8:	jmp    QWORD PTR [rip+0x78da]        # 4117a8 <__imp__cexit>
  409ece:	nop
  409ecf:	nop
  409ed0:	jmp    QWORD PTR [rip+0x78ca]        # 4117a0 <__imp__amsg_exit>
  409ed6:	nop
  409ed7:	nop
  409ed8:	jmp    QWORD PTR [rip+0x78b2]        # 411790 <__imp___setusermatherr>
  409ede:	nop
  409edf:	nop
  409ee0:	jmp    QWORD PTR [rip+0x78a2]        # 411788 <__imp___set_app_type>
  409ee6:	nop
  409ee7:	nop
  409ee8:	jmp    QWORD PTR [rip+0x7892]        # 411780 <__imp___lconv_init>
  409eee:	nop
  409eef:	nop
  409ef0:	jmp    QWORD PTR [rip+0x7882]        # 411778 <__imp___iob_func>
  409ef6:	nop
  409ef7:	nop
  409ef8:	jmp    QWORD PTR [rip+0x786a]        # 411768 <__imp___getmainargs>
  409efe:	nop
  409eff:	nop
  409f00:	jmp    QWORD PTR [rip+0x785a]        # 411760 <__imp___dllonexit>
  409f06:	nop
  409f07:	nop
  409f08:	jmp    QWORD PTR [rip+0x783a]        # 411748 <__imp___C_specific_handler>
  409f0e:	nop
  409f0f:	nop
  409f10:	mov    rax,QWORD PTR [rip+0x6b99]        # 410ab0 <_head_lib64_libkernel32_a-0x550>
  409f17:	ret    
  409f18:	nop    DWORD PTR [rax+rax*1+0x0]
  409f20:	mov    rax,rcx
  409f23:	xchg   QWORD PTR [rip+0x6b86],rax        # 410ab0 <_head_lib64_libkernel32_a-0x550>
  409f2a:	ret    
  409f2b:	nop
  409f2c:	nop
  409f2d:	nop
  409f2e:	nop
  409f2f:	nop
  409f30:	jmp    QWORD PTR [rip+0x7802]        # 411738 <__imp_VirtualQuery>
  409f36:	nop
  409f37:	nop
  409f38:	jmp    QWORD PTR [rip+0x77f2]        # 411730 <__imp_VirtualProtect>
  409f3e:	nop
  409f3f:	nop
  409f40:	jmp    QWORD PTR [rip+0x77e2]        # 411728 <__imp_UnhandledExceptionFilter>
  409f46:	nop
  409f47:	nop
  409f48:	jmp    QWORD PTR [rip+0x77d2]        # 411720 <__imp_TlsGetValue>
  409f4e:	nop
  409f4f:	nop
  409f50:	jmp    QWORD PTR [rip+0x77c2]        # 411718 <__imp_TerminateProcess>
  409f56:	nop
  409f57:	nop
  409f58:	jmp    QWORD PTR [rip+0x77b2]        # 411710 <__imp_Sleep>
  409f5e:	nop
  409f5f:	nop
  409f60:	jmp    QWORD PTR [rip+0x77a2]        # 411708 <__imp_SetUnhandledExceptionFilter>
  409f66:	nop
  409f67:	nop
  409f68:	jmp    QWORD PTR [rip+0x7792]        # 411700 <__imp_RtlVirtualUnwind>
  409f6e:	nop
  409f6f:	nop
  409f70:	jmp    QWORD PTR [rip+0x7782]        # 4116f8 <__imp_RtlLookupFunctionEntry>
  409f76:	nop
  409f77:	nop
  409f78:	jmp    QWORD PTR [rip+0x7772]        # 4116f0 <__imp_RtlCaptureContext>
  409f7e:	nop
  409f7f:	nop
  409f80:	jmp    QWORD PTR [rip+0x7762]        # 4116e8 <__imp_RtlAddFunctionTable>
  409f86:	nop
  409f87:	nop
  409f88:	jmp    QWORD PTR [rip+0x7752]        # 4116e0 <__imp_QueryPerformanceCounter>
  409f8e:	nop
  409f8f:	nop
  409f90:	jmp    QWORD PTR [rip+0x7742]        # 4116d8 <__imp_LeaveCriticalSection>
  409f96:	nop
  409f97:	nop
  409f98:	jmp    QWORD PTR [rip+0x7732]        # 4116d0 <__imp_InitializeCriticalSection>
  409f9e:	nop
  409f9f:	nop
  409fa0:	jmp    QWORD PTR [rip+0x7722]        # 4116c8 <__imp_GetTickCount>
  409fa6:	nop
  409fa7:	nop
  409fa8:	jmp    QWORD PTR [rip+0x7712]        # 4116c0 <__imp_GetSystemTimeAsFileTime>
  409fae:	nop
  409faf:	nop
  409fb0:	jmp    QWORD PTR [rip+0x7702]        # 4116b8 <__imp_GetStartupInfoA>
  409fb6:	nop
  409fb7:	nop
  409fb8:	jmp    QWORD PTR [rip+0x76f2]        # 4116b0 <__imp_GetProcAddress>
  409fbe:	nop
  409fbf:	nop
  409fc0:	jmp    QWORD PTR [rip+0x76e2]        # 4116a8 <__imp_GetModuleHandleA>
  409fc6:	nop
  409fc7:	nop
  409fc8:	jmp    QWORD PTR [rip+0x76d2]        # 4116a0 <__imp_GetLastError>
  409fce:	nop
  409fcf:	nop
  409fd0:	jmp    QWORD PTR [rip+0x76c2]        # 411698 <__imp_GetCurrentThreadId>
  409fd6:	nop
  409fd7:	nop
  409fd8:	jmp    QWORD PTR [rip+0x76b2]        # 411690 <__imp_GetCurrentProcessId>
  409fde:	nop
  409fdf:	nop
  409fe0:	jmp    QWORD PTR [rip+0x76a2]        # 411688 <__imp_GetCurrentProcess>
  409fe6:	nop
  409fe7:	nop
  409fe8:	jmp    QWORD PTR [rip+0x7692]        # 411680 <__imp_EnterCriticalSection>
  409fee:	nop
  409fef:	nop
  409ff0:	jmp    QWORD PTR [rip+0x7682]        # 411678 <__IAT_start__>
  409ff6:	nop
  409ff7:	nop
  409ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a000:	sub    rsp,0x28
  40a004:	call   408a20 <_head_lib64_libkernel32_a-0x85e0>
  40a009:	mov    rax,QWORD PTR [rip+0x2fe0]        # 40cff0 <_head_lib64_libkernel32_a-0x4010>
  40a010:	lea    rcx,[rip+0x1009]        # 40b020 <_head_lib64_libkernel32_a-0x5fe0>
  40a017:	mov    rdx,QWORD PTR [rax]
  40a01a:	mov    rax,QWORD PTR [rip+0x2fbf]        # 40cfe0 <_head_lib64_libkernel32_a-0x4020>
  40a021:	mov    r8,QWORD PTR [rdx]
  40a024:	mov    rax,QWORD PTR [rax]
  40a027:	mov    edx,DWORD PTR [rax]
  40a029:	add    rsp,0x28
  40a02d:	jmp    408580 <_head_lib64_libkernel32_a-0x8a80>
  40a032:	nop
  40a033:	nop
  40a034:	nop
  40a035:	nop
  40a036:	nop
  40a037:	nop
  40a038:	nop
  40a039:	nop
  40a03a:	nop
  40a03b:	nop
  40a03c:	nop
  40a03d:	nop
  40a03e:	nop
  40a03f:	nop
  40a040:	push   rbp
  40a041:	mov    rbp,rsp
  40a044:	pop    rbp
  40a045:	jmp    401540 <_head_lib64_libkernel32_a-0xfac0>
  40a04a:	nop
  40a04b:	nop
  40a04c:	nop
  40a04d:	nop
  40a04e:	nop
  40a04f:	nop
  40a050:	(bad)  
  40a051:	(bad)  
  40a052:	(bad)  
  40a053:	(bad)  
  40a054:	(bad)  
  40a055:	(bad)  
  40a056:	(bad)  
  40a057:	inc    DWORD PTR [rax-0x60]
  40a05a:	add    BYTE PTR [rax],al
	...
  40a065:	add    BYTE PTR [rax],al
  40a067:	add    bh,bh
  40a069:	(bad)  
  40a06a:	(bad)  
  40a06b:	(bad)  
  40a06c:	(bad)  
  40a06d:	(bad)  
  40a06e:	(bad)  
  40a06f:	inc    DWORD PTR [rax]
  40a071:	add    BYTE PTR [rax],al
  40a073:	add    BYTE PTR [rax],al
  40a075:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000040b000 <.data>:
  40b000:	or     al,BYTE PTR [rax]
	...
  40b02e:	add    BYTE PTR [rax],al
  40b030:	(bad)  
  40b031:	(bad)  
  40b032:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax+0x4015],dh
  40b03d:	add    BYTE PTR [rax],al
  40b03f:	add    BYTE PTR [rax],al
  40b041:	add    BYTE PTR [rax],al
  40b043:	(bad)  
  40b044:	(bad)  
  40b045:	inc    DWORD PTR [rax]
	...
  40b04f:	add    BYTE PTR [rax-0x60],dh
  40b052:	add    BYTE PTR [rax],al
	...
  40b05d:	add    BYTE PTR [rax],al
  40b05f:	add    bh,bh
  40b061:	(bad)  
  40b062:	(bad)  
  40b063:	(bad)  
  40b064:	(bad)  
  40b065:	(bad)  
  40b066:	(bad)  
  40b067:	inc    DWORD PTR [rax]
  40b069:	add    BYTE PTR [rax],al
  40b06b:	add    BYTE PTR [rax],al
  40b06d:	add    BYTE PTR [rax],al
  40b06f:	add    bh,bh
	...
  40b07d:	add    BYTE PTR [rax],al
  40b07f:	add    BYTE PTR [rdx],al
	...
  40b08d:	add    BYTE PTR [rax],al
  40b08f:	add    bh,bh
  40b091:	(bad)  
  40b092:	(bad)  
  40b093:	inc    DWORD PTR [rax]
	...
  40b09d:	add    BYTE PTR [rax],al
  40b09f:	add    BYTE PTR [rax],dl
  40b0a1:	lahf   
  40b0a2:	add    BYTE PTR [rax],al
  40b0a5:	add    BYTE PTR [rax],al
  40b0a7:	add    BYTE PTR [rax],ah
  40b0a9:	lahf   
  40b0aa:	add    BYTE PTR [rax],al
  40b0ad:	add    BYTE PTR [rax],al
  40b0af:	add    BYTE PTR [rdx],dh
  40b0b1:	movabs ds:0x2b992ddf,al
  40b0ba:	add    BYTE PTR [rax],al
  40b0bc:	add    BYTE PTR [rax],al
  40b0be:	add    BYTE PTR [rax],al
  40b0c0:	int    0x5d
  40b0c2:	and    dl,dl
  40b0c4:	data16 (bad) 
  40b0c6:	(bad)  
  40b0c7:	inc    DWORD PTR [rax]
	...

Disassembly of section .rdata:

000000000040c000 <.rdata>:
  40c000:	ins    BYTE PTR es:[rdi],dx
  40c001:	imul   esp,DWORD PTR [rdx+0x67],0x312d6a63
  40c008:	ss cs fs ins BYTE PTR es:[rdi],dx
  40c00c:	ins    BYTE PTR es:[rdi],dx
  40c00d:	add    BYTE PTR [rdi+0x4a],bl
  40c010:	jbe    40c071 <_head_lib64_libkernel32_a-0x4f8f>
  40c012:	push   rdx
  40c013:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
  40c01c:	(bad)  
  40c01d:	jae    40c092 <_head_lib64_libkernel32_a-0x4f6e>
  40c01f:	gs jae 40c022 <_head_lib64_libkernel32_a-0x4fde>
	...
  40c03e:	add    BYTE PTR [rax],al
  40c040:	imul   ebp,DWORD PTR [ebp+0x70],0x732d3032
  40c048:	je     40c0ae <_head_lib64_libkernel32_a-0x4f52>
  40c04a:	sub    eax,0x67756c70
  40c04f:	sub    eax,0x736e69
  40c054:	push   rbp
  40c055:	push   rsp
  40c056:	rex.RX sub eax,0x69660038
  40c05c:	ins    BYTE PTR es:[rdi],dx
  40c05d:	gs sub eax,0x2d647370
  40c063:	ins    BYTE PTR es:[rdi],dx
  40c064:	outs   dx,DWORD PTR ds:[rsi]
  40c065:	(bad)  
  40c066:	add    BYTE PTR fs:[rsi+0x69],ah
  40c06a:	ins    BYTE PTR es:[rdi],dx
  40c06b:	gs sub eax,0x2d647370
  40c071:	ins    BYTE PTR es:[rdi],dx
  40c072:	outs   dx,DWORD PTR ds:[rsi]
  40c073:	(bad)  
  40c074:	fs sub eax,0x6d756874
  40c07a:	(bad)  
  40c07b:	add    BYTE PTR [rdx+0x6f],cl
  40c07e:	push   0x614d206e
  40c083:	jb     40c0f8 <_head_lib64_libkernel32_a-0x4f08>
  40c085:	push   0x6c6c61
  40c08a:	add    BYTE PTR [rax],al
  40c08c:	add    BYTE PTR [rax],al
  40c08e:	add    BYTE PTR [rax],al
  40c090:	push   rsp
  40c091:	push   0x70207369
  40c096:	ins    BYTE PTR es:[rdi],dx
  40c097:	jne    40c100 <_head_lib64_libkernel32_a-0x4f00>
  40c099:	sub    eax,0x6c206e69
  40c09e:	outs   dx,DWORD PTR ds:[rsi]
  40c09f:	(bad)  
  40c0a0:	fs jae 40c0c3 <_head_lib64_libkernel32_a-0x4f3d>
  40c0a3:	imul   ebp,DWORD PTR [rbp+0x61],0x20736567
  40c0aa:	imul   ebp,DWORD PTR [rsi+0x20],0x626f6441
  40c0b1:	and    BYTE PTR gs:[rax+0x68],dl
  40c0b5:	outs   dx,DWORD PTR ds:[rsi]
  40c0b6:	je     40c127 <_head_lib64_libkernel32_a-0x4ed9>
  40c0b8:	jae    40c122 <_head_lib64_libkernel32_a-0x4ede>
  40c0ba:	outs   dx,DWORD PTR ds:[rsi]
  40c0bb:	jo     40c0dd <_head_lib64_libkernel32_a-0x4f23>
  40c0bd:	sub    BYTE PTR [rbp+rcx*2+0x29],dl
  40c0c1:	and    BYTE PTR [rsi+0x61],ch
  40c0c4:	je     40c12f <_head_lib64_libkernel32_a-0x4ed1>
  40c0c6:	jbe    40c12d <_head_lib64_libkernel32_a-0x4ed3>
  40c0c8:	and    BYTE PTR [rax+0x53],dl
  40c0cb:	and    BYTE PTR [rsi+0x6f],r12b
  40c0cf:	jb     40c13e <_head_lib64_libkernel32_a-0x4ec2>
  40c0d1:	(bad)  
  40c0d2:	je     40c102 <_head_lib64_libkernel32_a-0x4efe>
  40c0d4:	add    BYTE PTR [rax],al
  40c0d6:	add    BYTE PTR [rax],al
  40c0d8:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40c0da:	(bad)  
  40c0db:	fs jae 40c0fe <_head_lib64_libkernel32_a-0x4f02>
  40c0de:	imul   ebp,DWORD PTR [rbp+0x61],0x20736567
  40c0e5:	data16 jb 40c157 <_head_lib64_libkernel32_a-0x4ea9>
  40c0e8:	ins    DWORD PTR es:[rdi],dx
  40c0e9:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40c0ed:	and    BYTE PTR [rax+0x68],dl
  40c0f0:	outs   dx,DWORD PTR ds:[rsi]
  40c0f1:	je     40c162 <_head_lib64_libkernel32_a-0x4e9e>
  40c0f3:	jae    40c15d <_head_lib64_libkernel32_a-0x4ea3>
  40c0f5:	outs   dx,DWORD PTR ds:[rsi]
  40c0f6:	jo     40c118 <_head_lib64_libkernel32_a-0x4ee8>
  40c0f8:	push   rax
  40c0f9:	push   rbx
  40c0fa:	and    BYTE PTR [rsi+0x69],r12b
  40c0fe:	ins    BYTE PTR es:[rdi],dx
  40c0ff:	and    BYTE PTR gs:[rsi+0x6f],ah
  40c103:	jb     40c172 <_head_lib64_libkernel32_a-0x4e8e>
  40c105:	(bad)  
  40c106:	je     40c108 <_head_lib64_libkernel32_a-0x4ef8>
  40c108:	push   rax
  40c109:	push   0x736f746f
  40c10e:	push   0x6920706f
  40c113:	ins    DWORD PTR es:[rdi],dx
  40c114:	(bad)  
  40c115:	add    BYTE PTR gs:[edx],dh
  40c119:	xor    BYTE PTR [rax],dh
  40c11b:	(bad)  
  40c11c:	add    BYTE PTR [rcx+0x6d],ch
  40c11f:	(bad)  
  40c120:	addr32 gs (bad) 
  40c123:	js     40c152 <_head_lib64_libkernel32_a-0x4eae>
  40c125:	jo     40c19a <_head_lib64_libkernel32_a-0x4e66>
  40c127:	add    BYTE PTR fs:[rax],dh
  40c12a:	sub    al,0x73
  40c12c:	je     40c1a0 <_head_lib64_libkernel32_a-0x4e60>
  40c12e:	imul   ebp,DWORD PTR [rsi+0x67],0x5042382c
  40c135:	push   rbx
  40c136:	add    BYTE PTR [rax],al
  40c138:	jo     40c1ad <_head_lib64_libkernel32_a-0x4e53>
  40c13a:	add    BYTE PTR fs:[rax],al
  40c13d:	add    BYTE PTR [rax],al
  40c13f:	add    BYTE PTR [rax+rbp*2+0x69],dl
  40c143:	jae    40c165 <_head_lib64_libkernel32_a-0x4e9b>
  40c145:	jo     40c1b3 <_head_lib64_libkernel32_a-0x4e4d>
  40c147:	jne    40c1b0 <_head_lib64_libkernel32_a-0x4e50>
  40c149:	sub    eax,0x6c206e69
  40c14e:	outs   dx,DWORD PTR ds:[rsi]
  40c14f:	(bad)  
  40c150:	fs jae 40c173 <_head_lib64_libkernel32_a-0x4e8d>
  40c153:	je     40c1bd <_head_lib64_libkernel32_a-0x4e43>
  40c155:	jne    40c1c4 <_head_lib64_libkernel32_a-0x4e3c>
  40c157:	outs   dx,BYTE PTR ds:[rsi]
  40c158:	(bad)  
  40c159:	imul   ebp,DWORD PTR [rax+riz*1+0x69],0x6567616d
  40c161:	jae    40c183 <_head_lib64_libkernel32_a-0x4e7d>
  40c163:	data16 jb 40c1d5 <_head_lib64_libkernel32_a-0x4e2b>
  40c166:	ins    DWORD PTR es:[rdi],dx
  40c167:	and    BYTE PTR [rcx+0x64],al
  40c16a:	outs   dx,DWORD PTR ds:[rsi]
  40c16b:	(bad)  
  40c16c:	and    BYTE PTR gs:[rax+0x68],dl
  40c170:	outs   dx,DWORD PTR ds:[rsi]
  40c171:	je     40c1e2 <_head_lib64_libkernel32_a-0x4e1e>
  40c173:	jae    40c1dd <_head_lib64_libkernel32_a-0x4e23>
  40c175:	outs   dx,DWORD PTR ds:[rsi]
  40c176:	jo     40c198 <_head_lib64_libkernel32_a-0x4e68>
  40c178:	sub    BYTE PTR [rbp+rcx*2+0x29],dl
  40c17c:	and    BYTE PTR [rsi+0x61],ch
  40c17f:	je     40c1ea <_head_lib64_libkernel32_a-0x4e16>
  40c181:	jbe    40c1e8 <_head_lib64_libkernel32_a-0x4e18>
  40c183:	and    BYTE PTR [rax+0x53],dl
  40c186:	and    BYTE PTR [rsi+0x6f],r12b
  40c18a:	jb     40c1f9 <_head_lib64_libkernel32_a-0x4e07>
  40c18c:	(bad)  
  40c18d:	je     40c1af <_head_lib64_libkernel32_a-0x4e51>
  40c18f:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2e
  40c196:	add    BYTE PTR [rax],al
  40c198:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40c19a:	(bad)  
  40c19b:	fs jae 40c1be <_head_lib64_libkernel32_a-0x4e42>
  40c19e:	je     40c208 <_head_lib64_libkernel32_a-0x4df8>
  40c1a0:	jne    40c20f <_head_lib64_libkernel32_a-0x4df1>
  40c1a2:	(bad)  
  40c1a3:	outs   dx,BYTE PTR ds:[rsi]
  40c1a4:	(bad)  
  40c1a5:	imul   ebp,DWORD PTR [rbx+rsi*2+0x20],0x6d6f7266
  40c1ad:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40c1b1:	and    BYTE PTR [rax+0x68],dl
  40c1b4:	outs   dx,DWORD PTR ds:[rsi]
  40c1b5:	je     40c226 <_head_lib64_libkernel32_a-0x4dda>
  40c1b7:	jae    40c221 <_head_lib64_libkernel32_a-0x4ddf>
  40c1b9:	outs   dx,DWORD PTR ds:[rsi]
  40c1ba:	jo     40c1dc <_head_lib64_libkernel32_a-0x4e24>
  40c1bc:	push   rax
  40c1bd:	push   rbx
  40c1be:	and    BYTE PTR [rsi+0x69],r12b
  40c1c2:	ins    BYTE PTR es:[rdi],dx
  40c1c3:	and    BYTE PTR gs:[rsi+0x6f],ah
  40c1c7:	jb     40c236 <_head_lib64_libkernel32_a-0x4dca>
  40c1c9:	(bad)  
  40c1ca:	je     40c1cc <_head_lib64_libkernel32_a-0x4e34>
  40c1cc:	imul   ebp,DWORD PTR [rbp+0x61],0x54006567
  40c1d3:	push   0x6e626d75
  40c1d8:	(bad)  
  40c1d9:	imul   ebp,DWORD PTR [rax+riz*1+0x69],0x6567616d
  40c1e1:	add    BYTE PTR [rcx+0x6d],ch
  40c1e4:	(bad)  
  40c1e5:	addr32 gs sub eax,0x74646977
  40c1ec:	push   0x64695700
  40c1f1:	je     40c25b <_head_lib64_libkernel32_a-0x4da5>
  40c1f3:	and    BYTE PTR [rdi+0x66],ch
  40c1f6:	and    BYTE PTR [rsi+0x75],ah
  40c1f9:	ins    BYTE PTR es:[rdi],dx
  40c1fa:	ins    BYTE PTR es:[rdi],dx
  40c1fb:	sub    eax,0x657a6973
  40c200:	and    BYTE PTR fs:[rcx+0x6d],ch
  40c204:	(bad)  
  40c205:	add    BYTE PTR gs:[ecx+0x6d],ch
  40c20a:	(bad)  
  40c20b:	addr32 gs sub eax,0x67696568
  40c212:	push   0x65480074
  40c217:	imul   esp,DWORD PTR [rdi+0x68],0x666f2074
  40c21e:	and    BYTE PTR [rsi+0x75],ah
  40c221:	ins    BYTE PTR es:[rdi],dx
  40c222:	ins    BYTE PTR es:[rdi],dx
  40c223:	sub    eax,0x657a6973
  40c228:	and    BYTE PTR fs:[rcx+0x6d],ch
  40c22c:	(bad)  
  40c22d:	add    BYTE PTR gs:[eax],al
	...
  40c23d:	add    BYTE PTR [rax],al
  40c23f:	add    BYTE PTR [rip+0x0],cl        # 40c245 <_head_lib64_libkernel32_a-0x4dbb>
  40c245:	add    BYTE PTR [rax],al
  40c247:	add    ah,cl
  40c249:	rol    DWORD PTR [rax+0x0],0x0
  40c24d:	add    BYTE PTR [rax],al
  40c24f:	add    dl,dl
  40c251:	rol    DWORD PTR [rax+0x0],0x0
	...
  40c25d:	add    BYTE PTR [rax],al
  40c25f:	add    dl,ah
  40c261:	rol    DWORD PTR [rax+0x0],0x0
  40c265:	add    BYTE PTR [rax],al
  40c267:	add    dh,ch
  40c269:	rol    DWORD PTR [rax+0x0],0x0
	...
  40c275:	add    BYTE PTR [rax],al
  40c277:	add    BYTE PTR [rax],cl
  40c279:	ret    0x40
  40c27c:	add    BYTE PTR [rax],al
  40c27e:	add    BYTE PTR [rax],al
  40c280:	adc    eax,0x40c2
  40c285:	add    BYTE PTR [rax],al
  40c287:	add    BYTE PTR [rsi+0x69],ah
  40c28a:	ins    BYTE PTR es:[rdi],dx
  40c28b:	outs   dx,BYTE PTR gs:[rsi]
  40c28d:	(bad)  
  40c28e:	ins    DWORD PTR es:[rdi],dx
  40c28f:	add    BYTE PTR gs:[rax+rbp*2+0x65],dl
  40c294:	and    BYTE PTR [rsi+0x61],ch
  40c297:	ins    DWORD PTR es:[rdi],dx
  40c298:	and    BYTE PTR gs:[rdi+0x66],ch
  40c29c:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40c2a0:	and    BYTE PTR [rsi+0x69],ah
  40c2a3:	ins    BYTE PTR es:[rdi],dx
  40c2a4:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40c2a9:	ins    BYTE PTR es:[rdi],dx
  40c2aa:	outs   dx,DWORD PTR ds:[rsi]
  40c2ab:	(bad)  
  40c2ac:	add    BYTE PTR fs:[rax+rbp*2+0x75],dh
  40c2b1:	ins    DWORD PTR es:[rdi],dx
  40c2b2:	(bad)  
  40c2b3:	sub    eax,0x657a6973
  40c2b8:	add    BYTE PTR [rax+0x72],dl
  40c2bb:	gs data16 gs jb 40c332 <_head_lib64_libkernel32_a-0x4cce>
  40c2c0:	gs and BYTE PTR fs:[rax+rbp*2+0x75],dh
  40c2c6:	ins    DWORD PTR es:[rdi],dx
  40c2c7:	(bad)  
  40c2c8:	outs   dx,BYTE PTR ds:[rsi]
  40c2c9:	(bad)  
  40c2ca:	imul   ebp,DWORD PTR [rax+riz*1+0x73],0x657a69
	...
  40c2de:	add    BYTE PTR [rax],al
  40c2e0:	add    al,0x0
  40c2e2:	add    BYTE PTR [rax],al
  40c2e4:	add    BYTE PTR [rax],al
  40c2e6:	add    BYTE PTR [rax],al
  40c2e8:	mov    dl,al
  40c2ea:	add    BYTE PTR [rax],al
  40c2ed:	add    BYTE PTR [rax],al
  40c2ef:	add    BYTE PTR [rcx+0x40c2],dl
	...
  40c2fd:	add    BYTE PTR [rax],al
  40c2ff:	add    BYTE PTR [rsi+0x40c2],ch
  40c305:	add    BYTE PTR [rax],al
  40c307:	add    BYTE PTR [rcx+0x40c2],bh
  40c30d:	add    BYTE PTR [rax],al
  40c30f:	add    BYTE PTR [rdi+0x75],cl
  40c312:	je     40c384 <_head_lib64_libkernel32_a-0x4c7c>
  40c314:	jne    40c38a <_head_lib64_libkernel32_a-0x4c76>
  40c316:	and    BYTE PTR [rcx+0x6d],ch
  40c319:	(bad)  
  40c31a:	add    BYTE PTR gs:[eax],al
  40c31e:	add    BYTE PTR [rax],al
  40c320:	or     eax,0x0
  40c325:	add    BYTE PTR [rax],al
  40c327:	add    ah,cl
  40c329:	rol    DWORD PTR [rax+0x0],0x0
  40c32d:	add    BYTE PTR [rax],al
  40c32f:	add    BYTE PTR [rax],dl
  40c331:	ret    
  40c332:	add    BYTE PTR [rax],al
  40c335:	add    BYTE PTR [rax],al
  40c337:	add    BYTE PTR [rdx+0x75],dh
  40c33a:	outs   dx,BYTE PTR ds:[rsi]
  40c33b:	sub    eax,0x65646f6d
	...
  40c348:	push   rsp
  40c349:	push   0x75722065
  40c34e:	outs   dx,BYTE PTR ds:[rsi]
  40c34f:	and    BYTE PTR [rbp+0x6f],ch
  40c352:	fs and BYTE PTR gs:[rbx+0x20],bh
  40c357:	push   rdx
  40c358:	push   rbp
  40c359:	rex.WRX sub rax,0x45544e49
  40c35f:	push   rdx
  40c360:	rex.B
  40c361:	rex.XB push r12
  40c363:	rex.WB push r14
  40c365:	and    BYTE PTR [r8],r13b
  40c368:	xor    BYTE PTR [rcx],ch
  40c36a:	sub    al,0x20
  40c36c:	push   rdx
  40c36d:	push   rbp
  40c36e:	rex.WRX sub rax,0x494e4f4e
  40c374:	rex.WRX push rsp
  40c376:	rex.RB push r10
  40c378:	rex.B
  40c379:	rex.XB push r12
  40c37b:	rex.WB push r14
  40c37d:	and    BYTE PTR [r8],r13b
  40c380:	xor    DWORD PTR [rcx],ebp
  40c382:	and    BYTE PTR [rbp+0x0],bh
  40c385:	jb     40c3e8 <_head_lib64_libkernel32_a-0x4c18>
  40c387:	ja     40c3b6 <_head_lib64_libkernel32_a-0x4c4a>
  40c389:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40c390:	add    BYTE PTR gs:[rax],al
	...
  40c3a7:	add    BYTE PTR [rax],bh
  40c3a9:	ret    
  40c3aa:	add    BYTE PTR [rax],al
  40c3ad:	add    BYTE PTR [rax],al
  40c3af:	add    BYTE PTR [rax-0x3d],cl
  40c3b2:	add    BYTE PTR [rax],al
  40c3b5:	add    BYTE PTR [rax],al
  40c3b7:	add    BYTE PTR [rax+rax*1],al
  40c3ba:	add    BYTE PTR [rax],al
  40c3bc:	add    BYTE PTR [rax],al
  40c3be:	add    BYTE PTR [rax],al
  40c3c0:	mov    dl,al
  40c3c2:	add    BYTE PTR [rax],al
  40c3c5:	add    BYTE PTR [rax],al
  40c3c7:	add    BYTE PTR [rcx+0x40c2],dl
  40c3cd:	add    BYTE PTR [rax],al
  40c3cf:	add    BYTE PTR [rax+rax*1],al
  40c3d2:	add    BYTE PTR [rax],al
  40c3d4:	add    BYTE PTR [rax],al
  40c3d6:	add    BYTE PTR [rax],al
  40c3d8:	test   ebx,eax
  40c3da:	add    BYTE PTR [rax],al
  40c3dd:	add    BYTE PTR [rax],al
  40c3df:	add    BYTE PTR [rcx+0x40c2],dl
	...
  40c3fd:	add    BYTE PTR [rax],al
  40c3ff:	add    BYTE PTR [rbp+0x6e],dl
  40c402:	gs js  40c475 <_head_lib64_libkernel32_a-0x4b8b>
  40c405:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  40c40a:	and    BYTE PTR [rbp+0x6e],ah
  40c40d:	and    BYTE PTR fs:[rdi+0x66],ch
  40c411:	and    BYTE PTR [rsi+0x69],ah
  40c414:	ins    BYTE PTR es:[rdi],dx
  40c415:	add    BYTE PTR gs:[rip+0x6f6e0073],ah        # 6faec48f <libjpeg_8_dll_iname+0x6f6d978f>
  40c41c:	jb     40c48b <_head_lib64_libkernel32_a-0x4b75>
  40c41e:	add    BYTE PTR [rcx+riz*2+0x72],ah
  40c422:	imul   eax,DWORD PTR [rax],0x6c
  40c425:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x20657568
  40c42d:	add    BYTE PTR [rbx+0x61],dh
  40c430:	je     40c452 <_head_lib64_libkernel32_a-0x4bae>
  40c432:	add    BYTE PTR [rbx+0x6f],ah
  40c435:	ins    BYTE PTR es:[rdi],dx
  40c436:	jb     40c438 <_head_lib64_libkernel32_a-0x4bc8>
  40c438:	ins    BYTE PTR es:[rdi],dx
  40c439:	jne    40c4a8 <_head_lib64_libkernel32_a-0x4b58>
  40c43b:	and    BYTE PTR [rax],al
  40c43d:	ins    DWORD PTR es:[rdi],dx
  40c43e:	jne    40c4ac <_head_lib64_libkernel32_a-0x4b54>
  40c440:	and    BYTE PTR [rax],al
  40c442:	ins    BYTE PTR es:[rdi],dx
  40c443:	fs add BYTE PTR fs:[ebx+0x63],dh
  40c449:	jb     40c4b9 <_head_lib64_libkernel32_a-0x4b47>
  40c44b:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  40c44f:	jae    40c451 <_head_lib64_libkernel32_a-0x4baf>
  40c451:	outs   dx,DWORD PTR ds:[rsi]
  40c452:	jbe    40c4b9 <_head_lib64_libkernel32_a-0x4b47>
  40c454:	jb     40c456 <_head_lib64_libkernel32_a-0x4baa>
  40c456:	push   0x74694c
  40c45b:	jae    40c4a9 <_head_lib64_libkernel32_a-0x4b57>
  40c45d:	imul   esi,DWORD PTR [rax+rax*1+0x64],0x666669
  40c465:	jae    40c4d4 <_head_lib64_libkernel32_a-0x4b2c>
  40c467:	jne    40c4cd <_head_lib64_libkernel32_a-0x4b33>
  40c469:	add    BYTE PTR [rcx+rbp*2+0x76],ah
  40c46d:	and    BYTE PTR [rax],al
  40c46f:	imul   esp,DWORD PTR [rcx+rbp*2+0x76],0x72626c00
  40c477:	outs   dx,BYTE PTR ds:[rsi]
  40c478:	add    BYTE PTR [rsp+rcx*2+0x69],ch
  40c47c:	je     40c47e <_head_lib64_libkernel32_a-0x4b82>
  40c47e:	jo     40c4cc <_head_lib64_libkernel32_a-0x4b34>
  40c480:	imul   esi,DWORD PTR [rax+rax*1+0x76],0x74694c
  40c488:	push   0x78694d
  40c48d:	add    BYTE PTR [rax],al
  40c48f:	add    BYTE PTR [rbp-0x5f00009d],dh
  40c495:	fs (bad) 
  40c497:	push   QWORD PTR [rbp-0x7f00009d]
  40c49d:	fs (bad) 
  40c49f:	push   QWORD PTR [rax+0x64]
  40c4a2:	(bad)  
  40c4a3:	jmp    QWORD PTR [rax+0x64]
  40c4a6:	(bad)  
  40c4a7:	call   QWORD PTR [rax+0x64]
  40c4aa:	(bad)  
  40c4ab:	inc    DWORD PTR [rax+0x64]
  40c4ae:	(bad)  
  40c4af:	push   QWORD PTR [rbp+0x20ffff63]
  40c4b5:	fs (bad) 
  40c4b7:	call   QWORD PTR [rax]
  40c4b9:	fs (bad) 
  40c4bb:	inc    DWORD PTR [rax]
  40c4bd:	fs (bad) 
  40c4bf:	push   rax
  40c4c1:	movsxd edi,edi
  40c4c3:	jmp    rax
  40c4c5:	movsxd edi,edi
  40c4c7:	call   rax
  40c4c9:	movsxd edi,edi
  40c4cb:	push   QWORD PTR [rbp-0x3e00009d]
  40c4d1:	movsxd edi,edi
  40c4d3:	push   QWORD PTR [rax]
  40c4d5:	fs (bad) 
  40c4d7:	call   QWORD PTR [rax-0x4f00009c]
  40c4dd:	fs (bad) 
  40c4df:	push   QWORD PTR [rbp-0x4a00009d]
  40c4e5:	movsxd edi,edi
  40c4e7:	push   QWORD PTR [rbp+0xffff63]
	...
  40c4fd:	add    BYTE PTR [rax],al
  40c4ff:	add    BYTE PTR [rbp+0x6e],dl
  40c502:	jae    40c579 <_head_lib64_libkernel32_a-0x4a87>
  40c504:	jo     40c576 <_head_lib64_libkernel32_a-0x4a8a>
  40c506:	outs   dx,DWORD PTR ds:[rsi]
  40c507:	jb     40c57d <_head_lib64_libkernel32_a-0x4a83>
  40c509:	gs and BYTE PTR fs:[rdi+0x72],ch
  40c50e:	and    BYTE PTR [rcx+0x6e],ch
  40c511:	jbe    40c574 <_head_lib64_libkernel32_a-0x4a8c>
  40c513:	ins    BYTE PTR es:[rdi],dx
  40c514:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x6e6e6168
  40c51c:	gs ins BYTE PTR es:[rdi],dx
  40c51e:	and    BYTE PTR [rbx+0x69],dh
  40c521:	jp     40c588 <_head_lib64_libkernel32_a-0x4a78>
  40c523:	add    BYTE PTR [rax],al
  40c525:	add    BYTE PTR [rax],al
  40c527:	add    BYTE PTR [rbp+0x6e],dl
  40c52a:	jae    40c5a1 <_head_lib64_libkernel32_a-0x4a5f>
  40c52c:	jo     40c59e <_head_lib64_libkernel32_a-0x4a62>
  40c52e:	outs   dx,DWORD PTR ds:[rsi]
  40c52f:	jb     40c5a5 <_head_lib64_libkernel32_a-0x4a5b>
  40c531:	gs and BYTE PTR fs:[rbx+0x6f],ah
  40c536:	ins    DWORD PTR es:[rdi],dx
  40c537:	jo     40c5ab <_head_lib64_libkernel32_a-0x4a55>
  40c539:	gs jae 40c5af <_head_lib64_libkernel32_a-0x4a51>
  40c53c:	imul   ebp,DWORD PTR [rdi+0x6e],0x646f6d20
  40c543:	cmp    ah,BYTE PTR gs:[rax]
  40c546:	and    eax,0x61420064
  40c54b:	movsxd ebp,DWORD PTR [rbx+0x67]
  40c54e:	jb     40c5bf <_head_lib64_libkernel32_a-0x4a41>
  40c550:	jne    40c5c0 <_head_lib64_libkernel32_a-0x4a40>
  40c552:	add    BYTE PTR fs:[rcx+0x6d],dl
  40c556:	(bad)  
  40c557:	jae    40c5c4 <_head_lib64_libkernel32_a-0x4a3c>
  40c559:	add    BYTE PTR [rbp+0x78],al
  40c55c:	je     40c5d0 <_head_lib64_libkernel32_a-0x4a30>
  40c55e:	(bad)  
  40c55f:	add    BYTE PTR [rdx+0x62],dh
  40c562:	add    BYTE PTR [rax],al
  40c564:	add    BYTE PTR [rax],al
  40c566:	add    BYTE PTR [rax],al
  40c568:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40c56a:	jne    40c5d8 <_head_lib64_libkernel32_a-0x4a28>
  40c56c:	and    BYTE PTR fs:[rsi+0x6f],ch
  40c570:	je     40c592 <_head_lib64_libkernel32_a-0x4a6e>
  40c572:	outs   dx,DWORD PTR ds:[rsi]
  40c573:	jo     40c5da <_head_lib64_libkernel32_a-0x4a26>
  40c575:	outs   dx,BYTE PTR ds:[rsi]
  40c576:	and    BYTE PTR [rdi],ah
  40c578:	and    eax,0x66202773
  40c57d:	outs   dx,DWORD PTR ds:[rsi]
  40c57e:	jb     40c5a0 <_head_lib64_libkernel32_a-0x4a60>
  40c580:	jb     40c5e7 <_head_lib64_libkernel32_a-0x4a19>
  40c582:	(bad)  
  40c583:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x7325203a
  40c58b:	add    BYTE PTR [rdi+0x70],cl
  40c58e:	outs   dx,BYTE PTR gs:[rsi]
  40c590:	imul   ebp,DWORD PTR [rsi+0x67],0x73252720
  40c597:	(bad)  
  40c598:	add    BYTE PTR [rax],bh
  40c59a:	rex.X push rax
  40c59c:	push   rbx
  40c59d:	add    BYTE PTR [rax],al
  40c59f:	add    BYTE PTR [rsi+0x6f],cl
  40c5a2:	je     40c5c4 <_head_lib64_libkernel32_a-0x4a3c>
  40c5a4:	(bad)  
  40c5a5:	and    BYTE PTR [rsi+0x61],dh
  40c5a8:	ins    BYTE PTR es:[rdi],dx
  40c5a9:	imul   esp,DWORD PTR [rax+riz*1+0x50],0x6f746f68
  40c5b1:	jae    40c61b <_head_lib64_libkernel32_a-0x49e5>
  40c5b3:	outs   dx,DWORD PTR ds:[rsi]
  40c5b4:	jo     40c5d6 <_head_lib64_libkernel32_a-0x4a2a>
  40c5b6:	outs   dx,DWORD PTR fs:[rsi]
  40c5b8:	movsxd esi,DWORD PTR [rbp+0x6d]
  40c5bb:	outs   dx,BYTE PTR gs:[rsi]
  40c5bd:	je     40c5df <_head_lib64_libkernel32_a-0x4a21>
  40c5bf:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  40c5c6:	add    BYTE PTR [rax],al
  40c5c8:	push   rbp
  40c5c9:	outs   dx,BYTE PTR ds:[rsi]
  40c5ca:	jae    40c641 <_head_lib64_libkernel32_a-0x49bf>
  40c5cc:	jo     40c63e <_head_lib64_libkernel32_a-0x49c2>
  40c5ce:	outs   dx,DWORD PTR ds:[rsi]
  40c5cf:	jb     40c645 <_head_lib64_libkernel32_a-0x49bb>
  40c5d1:	gs and BYTE PTR fs:[rsi+0x69],ah
  40c5d6:	ins    BYTE PTR es:[rdi],dx
  40c5d7:	and    BYTE PTR gs:[rsi+0x6f],ah
  40c5db:	jb     40c64a <_head_lib64_libkernel32_a-0x49b6>
  40c5dd:	(bad)  
  40c5de:	je     40c600 <_head_lib64_libkernel32_a-0x4a00>
  40c5e0:	jbe    40c647 <_head_lib64_libkernel32_a-0x49b9>
  40c5e2:	jb     40c657 <_head_lib64_libkernel32_a-0x49a9>
  40c5e4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6425203a
  40c5eb:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  40c5ef:	and    BYTE PTR [rbp+0x61],ch
  40c5f2:	outs   dx,BYTE PTR ds:[rsi]
  40c5f3:	jns    40c615 <_head_lib64_libkernel32_a-0x49eb>
  40c5f5:	movsxd ebp,DWORD PTR [rax+0x61]
  40c5f8:	outs   dx,BYTE PTR ds:[rsi]
  40c5f9:	outs   dx,BYTE PTR ds:[rsi]
  40c5fa:	gs ins BYTE PTR es:[rdi],dx
  40c5fc:	jae    40c61e <_head_lib64_libkernel32_a-0x49e2>
  40c5fe:	imul   ebp,DWORD PTR [rsi+0x20],0x656c6966
  40c605:	cmp    ah,BYTE PTR [rax]
  40c607:	and    eax,0x64
  40c60c:	add    BYTE PTR [rax],al
  40c60e:	add    BYTE PTR [rax],al
  40c610:	push   rbp
  40c611:	outs   dx,BYTE PTR ds:[rsi]
  40c612:	jae    40c689 <_head_lib64_libkernel32_a-0x4977>
  40c614:	jo     40c686 <_head_lib64_libkernel32_a-0x497a>
  40c616:	outs   dx,DWORD PTR ds:[rsi]
  40c617:	jb     40c68d <_head_lib64_libkernel32_a-0x4973>
  40c619:	gs and BYTE PTR fs:[rdi+0x72],ch
  40c61e:	and    BYTE PTR [rcx+0x6e],ch
  40c621:	jbe    40c684 <_head_lib64_libkernel32_a-0x497c>
  40c623:	ins    BYTE PTR es:[rdi],dx
  40c624:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x6567616d
  40c62c:	and    BYTE PTR [rax+0x65],ch
  40c62f:	imul   esp,DWORD PTR [rdi+0x68],0x25203a74
  40c636:	add    BYTE PTR fs:[rbp+0x6e],dl
  40c63a:	jae    40c6b1 <_head_lib64_libkernel32_a-0x494f>
  40c63c:	jo     40c6ae <_head_lib64_libkernel32_a-0x4952>
  40c63e:	outs   dx,DWORD PTR ds:[rsi]
  40c63f:	jb     40c6b5 <_head_lib64_libkernel32_a-0x494b>
  40c641:	gs and BYTE PTR fs:[rdi+0x72],ch
  40c646:	and    BYTE PTR [rcx+0x6e],ch
  40c649:	jbe    40c6ac <_head_lib64_libkernel32_a-0x4954>
  40c64b:	ins    BYTE PTR es:[rdi],dx
  40c64c:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x6567616d
  40c654:	and    BYTE PTR [rdi+0x69],dh
  40c657:	fs je  40c6c2 <_head_lib64_libkernel32_a-0x493e>
  40c65a:	cmp    ah,BYTE PTR [rax]
  40c65c:	and    eax,0x55000064
  40c661:	outs   dx,BYTE PTR ds:[rsi]
  40c662:	jae    40c6d9 <_head_lib64_libkernel32_a-0x4927>
  40c664:	jo     40c6d6 <_head_lib64_libkernel32_a-0x492a>
  40c666:	outs   dx,DWORD PTR ds:[rsi]
  40c667:	jb     40c6dd <_head_lib64_libkernel32_a-0x4923>
  40c669:	gs and BYTE PTR fs:[rdi+0x72],ch
  40c66e:	and    BYTE PTR [rcx+0x6e],ch
  40c671:	jbe    40c6d4 <_head_lib64_libkernel32_a-0x492c>
  40c673:	ins    BYTE PTR es:[rdi],dx
  40c674:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x6567616d
  40c67c:	and    BYTE PTR [rbx+0x69],dh
  40c67f:	jp     40c6e6 <_head_lib64_libkernel32_a-0x491a>
  40c681:	cmp    ah,BYTE PTR [rax]
  40c683:	and    eax,0x64257864
  40c688:	add    BYTE PTR [rbp+0x4e],dl
  40c68b:	rex.WXB
  40c68c:	rex.WRX
  40c68d:	rex.WRXB push r15
  40c68f:	rex.WRX and BYTE PTR [rax],r13b
  40c692:	and    eax,0x55002964
  40c697:	outs   dx,BYTE PTR ds:[rsi]
  40c698:	jae    40c70f <_head_lib64_libkernel32_a-0x48f1>
  40c69a:	jo     40c70c <_head_lib64_libkernel32_a-0x48f4>
  40c69c:	outs   dx,DWORD PTR ds:[rsi]
  40c69d:	jb     40c713 <_head_lib64_libkernel32_a-0x48ed>
  40c69f:	gs and BYTE PTR fs:[rbx+0x6f],ah
  40c6a4:	ins    BYTE PTR es:[rdi],dx
  40c6a5:	outs   dx,DWORD PTR ds:[rsi]
  40c6a6:	jb     40c6c8 <_head_lib64_libkernel32_a-0x4938>
  40c6a8:	ins    DWORD PTR es:[rdi],dx
  40c6a9:	outs   dx,DWORD PTR ds:[rsi]
  40c6aa:	fs cmp ah,BYTE PTR gs:[rax]
  40c6ae:	and    eax,0x6e550073
  40c6b3:	jae    40c72a <_head_lib64_libkernel32_a-0x48d6>
  40c6b5:	jo     40c727 <_head_lib64_libkernel32_a-0x48d9>
  40c6b7:	outs   dx,DWORD PTR ds:[rsi]
  40c6b8:	jb     40c72e <_head_lib64_libkernel32_a-0x48d2>
  40c6ba:	gs and BYTE PTR fs:[rdx+0x69],ah
  40c6bf:	je     40c6e1 <_head_lib64_libkernel32_a-0x491f>
  40c6c1:	fs gs jo 40c739 <_head_lib64_libkernel32_a-0x48c7>
  40c6c5:	push   0x6425203a
  40c6ca:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40c6ce:	and    BYTE PTR [rsi+0x69],ah
  40c6d1:	ins    BYTE PTR es:[rdi],dx
  40c6d2:	and    BYTE PTR gs:[rcx+0x73],ch
  40c6d6:	and    BYTE PTR [rbx+0x6f],ah
  40c6d9:	jb     40c74d <_head_lib64_libkernel32_a-0x48b3>
  40c6db:	jne    40c74d <_head_lib64_libkernel32_a-0x48b3>
  40c6dd:	je     40c700 <_head_lib64_libkernel32_a-0x4900>
  40c6df:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  40c6e3:	and    BYTE PTR [rbp+0x61],ch
  40c6e6:	outs   dx,BYTE PTR ds:[rsi]
  40c6e7:	jns    40c709 <_head_lib64_libkernel32_a-0x48f7>
  40c6e9:	movsxd ebp,DWORD PTR [rax+0x61]
  40c6ec:	outs   dx,BYTE PTR ds:[rsi]
  40c6ed:	outs   dx,BYTE PTR ds:[rsi]
  40c6ee:	gs ins BYTE PTR es:[rdi],dx
  40c6f0:	jae    40c712 <_head_lib64_libkernel32_a-0x48ee>
  40c6f2:	imul   ebp,DWORD PTR [rsi+0x20],0x6579616c
  40c6f9:	jb     40c735 <_head_lib64_libkernel32_a-0x48cb>
  40c6fb:	and    BYTE PTR [rip+0x55000064],ah        # 5540c765 <libjpeg_8_dll_iname+0x54ff9a65>
  40c701:	outs   dx,BYTE PTR ds:[rsi]
  40c702:	jae    40c779 <_head_lib64_libkernel32_a-0x4887>
  40c704:	jo     40c776 <_head_lib64_libkernel32_a-0x488a>
  40c706:	outs   dx,DWORD PTR ds:[rsi]
  40c707:	jb     40c77d <_head_lib64_libkernel32_a-0x4883>
  40c709:	gs and BYTE PTR fs:[rdi+0x72],ch
  40c70e:	and    BYTE PTR [rcx+0x6e],ch
  40c711:	jbe    40c774 <_head_lib64_libkernel32_a-0x488c>
  40c713:	ins    BYTE PTR es:[rdi],dx
  40c714:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x72657961
  40c71c:	and    BYTE PTR [rax+0x65],ch
  40c71f:	imul   esp,DWORD PTR [rdi+0x68],0x25203a74
  40c726:	add    BYTE PTR fs:[rbp+0x6e],dl
  40c72a:	jae    40c7a1 <_head_lib64_libkernel32_a-0x485f>
  40c72c:	jo     40c79e <_head_lib64_libkernel32_a-0x4862>
  40c72e:	outs   dx,DWORD PTR ds:[rsi]
  40c72f:	jb     40c7a5 <_head_lib64_libkernel32_a-0x485b>
  40c731:	gs and BYTE PTR fs:[rdi+0x72],ch
  40c736:	and    BYTE PTR [rcx+0x6e],ch
  40c739:	jbe    40c79c <_head_lib64_libkernel32_a-0x4864>
  40c73b:	ins    BYTE PTR es:[rdi],dx
  40c73c:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x72657961
  40c744:	and    BYTE PTR [rdi+0x69],dh
  40c747:	fs je  40c7b2 <_head_lib64_libkernel32_a-0x484e>
  40c74a:	cmp    ah,BYTE PTR [rax]
  40c74c:	and    eax,0x55000064
  40c751:	outs   dx,BYTE PTR ds:[rsi]
  40c752:	jae    40c7c9 <_head_lib64_libkernel32_a-0x4837>
  40c754:	jo     40c7c6 <_head_lib64_libkernel32_a-0x483a>
  40c756:	outs   dx,DWORD PTR ds:[rsi]
  40c757:	jb     40c7cd <_head_lib64_libkernel32_a-0x4833>
  40c759:	gs and BYTE PTR fs:[rdi+0x72],ch
  40c75e:	and    BYTE PTR [rcx+0x6e],ch
  40c761:	jbe    40c7c4 <_head_lib64_libkernel32_a-0x483c>
  40c763:	ins    BYTE PTR es:[rdi],dx
  40c764:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x72657961
  40c76c:	and    BYTE PTR [rbx+0x69],dh
  40c76f:	jp     40c7d6 <_head_lib64_libkernel32_a-0x482a>
  40c771:	cmp    ah,BYTE PTR [rax]
  40c773:	and    eax,0x64257864
  40c778:	add    BYTE PTR [rax],bh
  40c77a:	rex.X
  40c77b:	rex.WB
  40c77c:	rex.WRB add BYTE PTR [r8],r8b
  40c77f:	add    BYTE PTR [rbp+0x6e],dl
  40c782:	jae    40c7f9 <_head_lib64_libkernel32_a-0x4807>
  40c784:	jo     40c7f6 <_head_lib64_libkernel32_a-0x480a>
  40c786:	outs   dx,DWORD PTR ds:[rsi]
  40c787:	jb     40c7fd <_head_lib64_libkernel32_a-0x4803>
  40c789:	gs and BYTE PTR fs:[rdi+0x72],ch
  40c78e:	and    BYTE PTR [rcx+0x6e],ch
  40c791:	jbe    40c7f4 <_head_lib64_libkernel32_a-0x480c>
  40c793:	ins    BYTE PTR es:[rdi],dx
  40c794:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x72657961
  40c79c:	and    BYTE PTR [rbp+0x61],ch
  40c79f:	jae    40c80c <_head_lib64_libkernel32_a-0x47f4>
  40c7a1:	and    BYTE PTR [rax+0x65],ch
  40c7a4:	imul   esp,DWORD PTR [rdi+0x68],0x25203a74
  40c7ab:	add    BYTE PTR fs:[rax],al
  40c7ae:	add    BYTE PTR [rax],al
  40c7b0:	push   rbp
  40c7b1:	outs   dx,BYTE PTR ds:[rsi]
  40c7b2:	jae    40c829 <_head_lib64_libkernel32_a-0x47d7>
  40c7b4:	jo     40c826 <_head_lib64_libkernel32_a-0x47da>
  40c7b6:	outs   dx,DWORD PTR ds:[rsi]
  40c7b7:	jb     40c82d <_head_lib64_libkernel32_a-0x47d3>
  40c7b9:	gs and BYTE PTR fs:[rdi+0x72],ch
  40c7be:	and    BYTE PTR [rcx+0x6e],ch
  40c7c1:	jbe    40c824 <_head_lib64_libkernel32_a-0x47dc>
  40c7c3:	ins    BYTE PTR es:[rdi],dx
  40c7c4:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x72657961
  40c7cc:	and    BYTE PTR [rbp+0x61],ch
  40c7cf:	jae    40c83c <_head_lib64_libkernel32_a-0x47c4>
  40c7d1:	and    BYTE PTR [rdi+0x69],dh
  40c7d4:	fs je  40c83f <_head_lib64_libkernel32_a-0x47c1>
  40c7d7:	cmp    ah,BYTE PTR [rax]
  40c7d9:	and    eax,0x64
  40c7de:	add    BYTE PTR [rax],al
  40c7e0:	push   rbp
  40c7e1:	outs   dx,BYTE PTR ds:[rsi]
  40c7e2:	jae    40c859 <_head_lib64_libkernel32_a-0x47a7>
  40c7e4:	jo     40c856 <_head_lib64_libkernel32_a-0x47aa>
  40c7e6:	outs   dx,DWORD PTR ds:[rsi]
  40c7e7:	jb     40c85d <_head_lib64_libkernel32_a-0x47a3>
  40c7e9:	gs and BYTE PTR fs:[rdi+0x72],ch
  40c7ee:	and    BYTE PTR [rcx+0x6e],ch
  40c7f1:	jbe    40c854 <_head_lib64_libkernel32_a-0x47ac>
  40c7f3:	ins    BYTE PTR es:[rdi],dx
  40c7f4:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x72657961
  40c7fc:	and    BYTE PTR [rbp+0x61],ch
  40c7ff:	jae    40c86c <_head_lib64_libkernel32_a-0x4794>
  40c801:	and    BYTE PTR [rbx+0x69],dh
  40c804:	jp     40c86b <_head_lib64_libkernel32_a-0x4795>
  40c806:	cmp    ah,BYTE PTR [rax]
  40c808:	and    eax,0x64257864
  40c80d:	add    BYTE PTR [rcx+0x6e],cl
  40c810:	jbe    40c873 <_head_lib64_libkernel32_a-0x478d>
  40c812:	ins    BYTE PTR es:[rdi],dx
  40c813:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x726f6c6f
  40c81b:	and    BYTE PTR [rbp+0x6f],ch
  40c81e:	fs add BYTE PTR gs:[rax+0x73],dh
  40c823:	fs sub eax,0x746f7564
  40c829:	outs   dx,DWORD PTR ds:[rsi]
  40c82a:	outs   dx,BYTE PTR ds:[rsi]
  40c82b:	gs sub eax,0x61746164
  40c831:	add    BYTE PTR [rax],al
  40c833:	add    BYTE PTR [rax],al
  40c835:	add    BYTE PTR [rax],al
  40c837:	add    BYTE PTR [rdi+0x61],dl
  40c83a:	jb     40c8aa <_head_lib64_libkernel32_a-0x4756>
  40c83c:	imul   ebp,DWORD PTR [rsi+0x67],0x6568540a
  40c843:	and    BYTE PTR [rcx+riz*2+0x79],ch
  40c847:	gs jb  40c86a <_head_lib64_libkernel32_a-0x4796>
  40c84a:	ins    DWORD PTR es:[rdi],dx
  40c84b:	(bad)  
  40c84c:	jae    40c8b9 <_head_lib64_libkernel32_a-0x4747>
  40c84e:	and    BYTE PTR [rcx+0x73],ch
  40c851:	and    BYTE PTR [rax+0x61],dh
  40c854:	jb     40c8ca <_head_lib64_libkernel32_a-0x4736>
  40c856:	ins    BYTE PTR es:[rdi],dx
  40c857:	jns    40c879 <_head_lib64_libkernel32_a-0x4787>
  40c859:	outs   dx,DWORD PTR ds:[rsi]
  40c85a:	jne    40c8d0 <_head_lib64_libkernel32_a-0x4730>
  40c85c:	jae    40c8c7 <_head_lib64_libkernel32_a-0x4739>
  40c85e:	fs and BYTE PTR gs:[rax+rbp*2+0x65],dh
  40c864:	and    BYTE PTR [rcx+riz*2+0x79],ch
  40c868:	gs jb  40c88b <_head_lib64_libkernel32_a-0x4775>
  40c86b:	(bad)  
  40c86c:	outs   dx,DWORD PTR ds:[rsi]
  40c86d:	jne    40c8dd <_head_lib64_libkernel32_a-0x4723>
  40c86f:	fs (bad) 
  40c871:	jb     40c8ec <_head_lib64_libkernel32_a-0x4714>
  40c873:	and    BYTE PTR cs:[rax+rbp*2+0x65],dl
  40c878:	and    BYTE PTR [rbp+0x61],ch
  40c87b:	jae    40c8e8 <_head_lib64_libkernel32_a-0x4718>
  40c87d:	and    BYTE PTR [rdi+0x69],dh
  40c880:	ins    BYTE PTR es:[rdi],dx
  40c881:	ins    BYTE PTR es:[rdi],dx
  40c882:	and    BYTE PTR [rdx+0x65],ah
  40c885:	and    BYTE PTR [rbx+0x72],ah
  40c888:	outs   dx,DWORD PTR ds:[rsi]
  40c889:	jo     40c8fb <_head_lib64_libkernel32_a-0x4705>
  40c88b:	gs and BYTE PTR fs:[rdi+0x68],dh
  40c890:	imul   esp,DWORD PTR [rbx+0x68],0x79616d20
  40c897:	and    BYTE PTR [rdx+0x65],dh
  40c89a:	jae    40c911 <_head_lib64_libkernel32_a-0x46ef>
  40c89c:	ins    BYTE PTR es:[rdi],dx
  40c89d:	je     40c8bf <_head_lib64_libkernel32_a-0x4741>
  40c89f:	imul   ebp,DWORD PTR [rsi+0x20],0x61746164
  40c8a6:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40c8aa:	jae    40c8da <_head_lib64_libkernel32_a-0x4726>
  40c8ac:	add    BYTE PTR [rbp+0x72],al
  40c8af:	jb     40c920 <_head_lib64_libkernel32_a-0x46e0>
  40c8b1:	jb     40c8d3 <_head_lib64_libkernel32_a-0x472d>
  40c8b3:	ins    BYTE PTR es:[rdi],dx
  40c8b4:	outs   dx,DWORD PTR ds:[rsi]
  40c8b5:	(bad)  
  40c8b6:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x44535020
  40c8be:	and    BYTE PTR [rsi+0x69],ah
  40c8c1:	ins    BYTE PTR es:[rdi],dx
  40c8c2:	cmp    ah,BYTE PTR gs:[rax]
  40c8c5:	and    eax,0x79960073
  40c8ca:	(bad)  
  40c8cb:	inc    DWORD PTR [rax-0x69000087]
  40c8d1:	jns    40c8d2 <_head_lib64_libkernel32_a-0x472e>
  40c8d3:	inc    DWORD PTR [rcx-0x7000089]
  40c8d9:	jns    40c8da <_head_lib64_libkernel32_a-0x4726>
  40c8db:	(bad)  
  40c8dc:	clc    
  40c8dd:	jns    40c8de <_head_lib64_libkernel32_a-0x4722>
  40c8df:	(bad)  
  40c8e0:	clc    
  40c8e1:	jns    40c8e2 <_head_lib64_libkernel32_a-0x471e>
  40c8e3:	(bad)  
  40c8e4:	clc    
  40c8e5:	jns    40c8e6 <_head_lib64_libkernel32_a-0x471a>
  40c8e7:	inc    DWORD PTR [rax+0xffff79]
  40c8ed:	add    BYTE PTR [rax],al
  40c8ef:	add    BYTE PTR [rcx],al
  40c8f1:	add    BYTE PTR [rax],al
  40c8f3:	add    BYTE PTR [rbx],al
  40c8f5:	add    BYTE PTR [rax],al
  40c8f7:	add    BYTE PTR [rip+0x42000000],al        # 4240c8fd <libjpeg_8_dll_iname+0x41ff9bfd>
  40c8fd:	rex.WB push r12
  40c8ff:	rex.WRB
  40c900:	push   r8
  40c902:	add    BYTE PTR [rdi+0x52],al
  40c905:	pop    r9
  40c907:	push   rbx
  40c908:	rex.XB
  40c909:	rex.B
  40c90a:	rex.WR
  40c90b:	add    BYTE PTR [r9+0x4e],r9b
  40c90f:	rex.R
  40c910:	rex.RB pop r8
  40c912:	rex.RB
  40c913:	add    BYTE PTR [rdx+0x47],r10b
  40c917:	rex.X add BYTE PTR [rbx+0x4d],al
  40c91b:	pop    rcx
  40c91c:	rex.WXB add BYTE PTR [r13+0x4e],dl
  40c920:	rex.WXB
  40c921:	rex.WRX
  40c922:	rex.WRXB push r15
  40c924:	rex.WRX and BYTE PTR [rax],r13b
  40c927:	xor    eax,0x4e550029
  40c92c:	rex.WXB
  40c92d:	rex.WRX
  40c92e:	rex.WRXB push r15
  40c930:	rex.WRX and BYTE PTR [rax],r13b
  40c933:	sub    DWORD PTR ss:[rax],eax
  40c936:	rex.WRB push r13
  40c938:	rex.WR push rsp
  40c93a:	rex.WB
  40c93b:	rex.XB
  40c93c:	rex.W
  40c93d:	rex.B
  40c93e:	rex.WRX
  40c93f:	rex.WRX
  40c940:	rex.RB
  40c941:	rex.WR add BYTE PTR [rbp+rdx*2+0x4f],r8b
  40c946:	push   rsp
  40c947:	rex.WRXB
  40c948:	rex.WRX
  40c949:	add    BYTE PTR [r9+rax*2+0x42],r9b
	...
  40c95e:	add    BYTE PTR [rax],al
  40c960:	cld    
  40c961:	enter  0x40,0x0
  40c965:	add    BYTE PTR [rax],al
  40c967:	add    BYTE PTR [rbx],al
  40c969:	leave  
  40c96a:	add    BYTE PTR [rax],al
  40c96d:	add    BYTE PTR [rax],al
  40c96f:	add    BYTE PTR [rip+0x40c9],cl        # 410a3e <_head_lib64_libkernel32_a-0x5c2>
  40c975:	add    BYTE PTR [rax],al
  40c977:	add    BYTE PTR [rip+0x40c9],dl        # 410a46 <_head_lib64_libkernel32_a-0x5ba>
  40c97d:	add    BYTE PTR [rax],al
  40c97f:	add    BYTE PTR [rcx],bl
  40c981:	leave  
  40c982:	add    BYTE PTR [rax],al
  40c985:	add    BYTE PTR [rax],al
  40c987:	add    BYTE PTR [rsi],bl
  40c989:	leave  
  40c98a:	add    BYTE PTR [rax],al
  40c98d:	add    BYTE PTR [rax],al
  40c98f:	add    BYTE PTR [rdx],ch
  40c991:	leave  
  40c992:	add    BYTE PTR [rax],al
  40c995:	add    BYTE PTR [rax],al
  40c997:	add    BYTE PTR [rsi],dh
  40c999:	leave  
  40c99a:	add    BYTE PTR [rax],al
  40c99d:	add    BYTE PTR [rax],al
  40c99f:	add    BYTE PTR [rbx-0x37],al
  40c9a2:	add    BYTE PTR [rax],al
  40c9a5:	add    BYTE PTR [rax],al
  40c9a7:	add    BYTE PTR [rbx-0x37],cl
  40c9aa:	add    BYTE PTR [rax],al
	...
  40c9b5:	add    BYTE PTR [rcx+0x40],bl
  40c9b8:	add    BYTE PTR [rax],al
  40c9ba:	add    BYTE PTR [rax],al
  40c9bc:	add    BYTE PTR [rax],al
  40c9be:	lock (bad) 
  40c9c0:	(bad)  
  40c9c1:	cdq    
  40c9c2:	cdq    
  40c9c3:	cdq    
  40c9c4:	cdq    
  40c9c5:	cdq    
  40c9c6:	fnstcw WORD PTR [rdi]
  40c9c8:	add    BYTE PTR [rax],al
  40c9ca:	add    BYTE PTR [rax],al
  40c9cc:	add    BYTE PTR [rax],al
  40c9ce:	loopne 40ca0f <_head_lib64_libkernel32_a-0x45f1>
  40c9d0:	xor    esi,DWORD PTR [rbx]
  40c9d2:	xor    esi,DWORD PTR [rbx]
  40c9d4:	xor    esi,DWORD PTR [rbx]
  40c9d6:	jrcxz  40ca17 <_head_lib64_libkernel32_a-0x45e9>
  40c9d8:	data16 data16 data16 data16 data16 data16 out 0x3f,al
  40c9e0:	(bad)  
  40c9e1:	cdq    
  40c9e2:	cdq    
  40c9e3:	cdq    
  40c9e4:	cdq    
  40c9e5:	cdq    
  40c9e6:	mov    ecx,0x99999a3f
  40c9eb:	cdq    
  40c9ec:	cdq    
  40c9ed:	cdq    
  40c9ee:	leave  
  40c9ef:	(bad)  
  40c9f0:	xor    esi,DWORD PTR [rbx]
  40c9f2:	xor    esi,DWORD PTR [rbx]
  40c9f4:	xor    esi,DWORD PTR [rbx]
  40c9f6:	sar    DWORD PTR [rdi],cl
  40c9f8:	(bad)  
  40c9f9:	cdq    
  40c9fa:	cdq    
  40c9fb:	cdq    
  40c9fc:	cdq    
  40c9fd:	cdq    
  40c9fe:	jmp    ffffffffcd0d9742 <libjpeg_8_dll_iname+0xffffffffcccc6a42>
  40ca03:	int3   
  40ca04:	int3   
  40ca05:	int3   
  40ca06:	in     al,dx
  40ca07:	(bad)  
	...
  40ca20:	jb     40ca84 <_head_lib64_libkernel32_a-0x457c>
  40ca22:	add    BYTE PTR [rax],al
  40ca24:	add    BYTE PTR [rax],al
  40ca26:	add    BYTE PTR [rax],al
  40ca28:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ca2a:	jne    40ca98 <_head_lib64_libkernel32_a-0x4568>
  40ca2c:	and    BYTE PTR fs:[rsi+0x6f],ch
  40ca30:	je     40ca52 <_head_lib64_libkernel32_a-0x45ae>
  40ca32:	outs   dx,DWORD PTR ds:[rsi]
  40ca33:	jo     40ca9a <_head_lib64_libkernel32_a-0x4566>
  40ca35:	outs   dx,BYTE PTR ds:[rsi]
  40ca36:	and    BYTE PTR [rdi],ah
  40ca38:	and    eax,0x66202773
  40ca3d:	outs   dx,DWORD PTR ds:[rsi]
  40ca3e:	jb     40ca60 <_head_lib64_libkernel32_a-0x45a0>
  40ca40:	jb     40caa7 <_head_lib64_libkernel32_a-0x4559>
  40ca42:	(bad)  
  40ca43:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x7325203a
  40ca4b:	add    BYTE PTR [rdi+0x70],cl
  40ca4e:	outs   dx,BYTE PTR gs:[rsi]
  40ca50:	imul   ebp,DWORD PTR [rsi+0x67],0x75687420
  40ca57:	ins    DWORD PTR es:[rdi],dx
  40ca58:	(bad)  
  40ca59:	outs   dx,BYTE PTR ds:[rsi]
  40ca5a:	(bad)  
  40ca5b:	imul   ebp,DWORD PTR [rax+riz*1+0x66],0x2720726f
  40ca63:	and    eax,0x38002773
  40ca68:	rex.X push rax
  40ca6a:	push   rbx
  40ca6b:	add    BYTE PTR [rbp+0x72],al
  40ca6e:	jb     40cadf <_head_lib64_libkernel32_a-0x4521>
  40ca70:	jb     40ca92 <_head_lib64_libkernel32_a-0x456e>
  40ca72:	ins    BYTE PTR es:[rdi],dx
  40ca73:	outs   dx,DWORD PTR ds:[rsi]
  40ca74:	(bad)  
  40ca75:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x44535020
  40ca7d:	and    BYTE PTR [rsi+0x69],ah
  40ca80:	ins    BYTE PTR es:[rdi],dx
  40ca81:	cmp    ah,BYTE PTR gs:[rax]
  40ca84:	and    eax,0x9a000073
  40ca89:	cdq    
  40ca8a:	cdq    
  40ca8b:	cdq    
  40ca8c:	cdq    
  40ca8d:	cdq    
  40ca8e:	leave  
  40ca8f:	(bad)  
  40ca90:	(bad)  
  40ca91:	cdq    
  40ca92:	cdq    
  40ca93:	cdq    
  40ca94:	cdq    
  40ca95:	cdq    
  40ca96:	fnstcw WORD PTR [rdi]
  40ca98:	xor    esi,DWORD PTR [rbx]
  40ca9a:	xor    esi,DWORD PTR [rbx]
  40ca9c:	xor    esi,DWORD PTR [rbx]
  40ca9e:	jrcxz  40cadf <_head_lib64_libkernel32_a-0x4521>
  40caa0:	add    BYTE PTR [rax],al
  40caa2:	add    BYTE PTR [rax],al
  40caa4:	add    BYTE PTR [rax],al
  40caa6:	lock (bad) 
	...
  40cab0:	jo     40cb25 <_head_lib64_libkernel32_a-0x44db>
  40cab2:	fs sub eax,0x67616d69
  40cab8:	gs sub eax,0x6f736572
  40cabe:	jne    40cb32 <_head_lib64_libkernel32_a-0x44ce>
  40cac0:	movsxd esp,DWORD PTR [rbp+0x2d]
  40cac3:	and    eax,0x2d73342e
  40cac8:	and    eax,0x78342e
  40cacd:	push   rdi
  40cace:	outs   dx,DWORD PTR ds:[rsi]
  40cacf:	jb     40cb3c <_head_lib64_libkernel32_a-0x44c4>
  40cad1:	imul   ebp,DWORD PTR [rsi+0x67],0x74615020
  40cad8:	push   0x63614200
  40cadd:	imul   esp,DWORD PTR [rdi+0x72],0x6f
  40cae1:	jne    40cb51 <_head_lib64_libkernel32_a-0x44af>
  40cae3:	add    BYTE PTR fs:[rax],bh
  40cae6:	rex.X
  40cae7:	rex.WB
  40cae8:	rex.WRB add BYTE PTR [r13+0x65],r9b
  40caec:	push   rbx
  40caed:	(bad)  
  40caee:	add    BYTE PTR [rdi+0x69],ah
  40caf1:	ins    DWORD PTR es:[rdi],dx
  40caf2:	jo     40cb21 <_head_lib64_libkernel32_a-0x44df>
  40caf4:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40caf7:	ins    DWORD PTR es:[rdi],dx
  40caf8:	outs   dx,BYTE PTR gs:[rsi]
  40cafa:	je     40cafc <_head_lib64_libkernel32_a-0x4504>
  40cafc:	imul   esp,DWORD PTR [rbx+0x63],0x6f72702d
  40cb03:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6c70
  40cb0a:	jne    40cb73 <_head_lib64_libkernel32_a-0x448d>
  40cb0c:	sub    eax,0x6d2d6e69
  40cb11:	gs je  40cb75 <_head_lib64_libkernel32_a-0x448b>
  40cb14:	fs (bad) 
  40cb16:	je     40cb79 <_head_lib64_libkernel32_a-0x4487>
  40cb18:	sub    eax,0x6f636564
  40cb1d:	fs gs sub eax,0x706d78
  40cb24:	gs js  40cb90 <_head_lib64_libkernel32_a-0x4470>
  40cb27:	sub    ax,0x6164
  40cb2b:	je     40cb8e <_head_lib64_libkernel32_a-0x4472>
  40cb2d:	add    BYTE PTR [rax],al
  40cb2f:	add    ch,dh
  40cb31:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40cb32:	(bad)  
  40cb33:	jmp    QWORD PTR [rax-0x53]
  40cb36:	(bad)  
  40cb37:	inc    DWORD PTR [rax-0xa000050]
  40cb3d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40cb3e:	(bad)  
  40cb3f:	inc    DWORD PTR [rax+0x10ffffb0]
  40cb45:	lods   al,BYTE PTR ds:[rsi]
  40cb46:	(bad)  
  40cb47:	inc    DWORD PTR [rax-0x3f000055]
  40cb4d:	test   al,0xff
  40cb4f:	call   rsp
  40cb51:	lods   eax,DWORD PTR ds:[rsi]
  40cb52:	(bad)  
  40cb53:	inc    DWORD PTR [rax-0x7f000050]
  40cb59:	mov    al,0xff
  40cb5b:	inc    DWORD PTR [rax-0x7f000050]
  40cb61:	mov    al,0xff
  40cb63:	inc    DWORD PTR [rax-0x7f000050]
  40cb69:	mov    al,0xff
  40cb6b:	inc    DWORD PTR [rax-0x7f000050]
  40cb71:	mov    al,0xff
  40cb73:	inc    DWORD PTR [rax-0x7f000050]
  40cb79:	mov    al,0xff
  40cb7b:	inc    DWORD PTR [rax-0xa000050]
  40cb81:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40cb82:	(bad)  
  40cb83:	inc    DWORD PTR [rax-0x7f000050]
  40cb89:	lods   eax,DWORD PTR ds:[rsi]
  40cb8a:	(bad)  
  40cb8b:	push   rbp
  40cb8d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40cb8e:	(bad)  
  40cb8f:	call   QWORD PTR [rdx-0x52]
  40cb92:	(bad)  
  40cb93:	inc    DWORD PTR [rax-0x5a]
  40cb96:	(bad)  
  40cb97:	inc    DWORD PTR [rax-0xa000050]
  40cb9d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40cb9e:	(bad)  
  40cb9f:	push   rax
  40cba1:	scas   eax,DWORD PTR es:[rdi]
  40cba2:	(bad)  
  40cba3:	inc    DWORD PTR [rax+0x60ffffb0]
  40cba9:	lods   eax,DWORD PTR ds:[rsi]
  40cbaa:	(bad)  
  40cbab:	inc    DWORD PTR [rax+0x64ffffb0]
  40cbb1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40cbb2:	(bad)  
  40cbb3:	push   rbp
  40cbb5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40cbb6:	(bad)  
  40cbb7:	inc    DWORD PTR [rax-0x7f000050]
  40cbbd:	mov    al,0xff
  40cbbf:	push   rbp
  40cbc1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40cbc2:	(bad)  
  40cbc3:	inc    DWORD PTR [rax-0x7f000050]
  40cbc9:	mov    al,0xff
  40cbcb:	jmp    QWORD PTR [rax-0x5a]
  40cbce:	(bad)  
  40cbcf:	inc    DWORD PTR [rax-0x7f000050]
  40cbd5:	mov    al,0xff
  40cbd7:	inc    DWORD PTR [rax-0x7f000050]
  40cbdd:	mov    al,0xff
  40cbdf:	inc    DWORD PTR [rax+0x20ffffb0]
  40cbe5:	scas   eax,DWORD PTR es:[rdi]
  40cbe6:	(bad)  
  40cbe7:	inc    DWORD PTR [rdx-0x7f000052]
  40cbed:	mov    al,0xff
  40cbef:	inc    DWORD PTR [rax-0x7f000050]
  40cbf5:	mov    al,0xff
  40cbf7:	inc    DWORD PTR [rax-0x7f000050]
  40cbfd:	mov    al,0xff
  40cbff:	inc    DWORD PTR [rax-0x7d000050]
  40cc05:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40cc06:	(bad)  
  40cc07:	inc    DWORD PTR [rax-0x7f000050]
  40cc0d:	mov    al,0xff
  40cc0f:	inc    DWORD PTR [rax-0x7f000050]
  40cc15:	mov    al,0xff
  40cc17:	push   QWORD PTR [rax-0x5d]
  40cc1a:	(bad)  
  40cc1b:	inc    DWORD PTR [rax-0x2c000050]
  40cc21:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40cc22:	(bad)  
  40cc23:	inc    DWORD PTR [rax]
	...
  40cc2d:	add    BYTE PTR [rax+0x3e],dh
  40cc30:	add    BYTE PTR [rax],al
  40cc32:	add    BYTE PTR [rax],al
  40cc34:	add    BYTE PTR [rax],al
  40cc36:	pop    rcx
  40cc37:	add    BYTE PTR [rax],al
  40cc3a:	add    BYTE PTR [rax],al
  40cc3c:	add    BYTE PTR [rax],al
  40cc3e:	lock add BYTE PTR ds:[rax],al
  40cc42:	add    BYTE PTR [rax],al
  40cc44:	loopne 40cc45 <_head_lib64_libkernel32_a-0x43bb>
  40cc46:	out    dx,eax
  40cc47:	add    BYTE PTR [rax],al
  40cc4a:	add    BYTE PTR [rax],al
  40cc4c:	add    BYTE PTR [rax],al
  40cc4e:	lock (bad) 
  40cc50:	add    BYTE PTR [rax],al
  40cc52:	add    BYTE PTR [rax],al
  40cc54:	add    BYTE PTR [rax+0x40c3],cl
  40cc5a:	add    BYTE PTR [rax],al
  40cc5c:	add    BYTE PTR [rax],al
  40cc5e:	add    BYTE PTR [rax],al
  40cc60:	cmp    BYTE PTR [rdx+0x49],al
  40cc63:	rex.WRB add BYTE PTR [r13+riz*2+0x76],r13b
  40cc68:	ins    BYTE PTR es:[rdi],dx
  40cc69:	add    BYTE PTR [rbx+0x75],ah
  40cc6c:	jb     40cce4 <_head_lib64_libkernel32_a-0x431c>
  40cc6e:	add    BYTE PTR [rdx+0x72],ah
  40cc71:	imul   esi,DWORD PTR [rax+rax*1+0x62],0x636e6c
  40cc79:	(bad)  
  40cc7a:	ins    BYTE PTR es:[rdi],dx
  40cc7b:	ja     40cce5 <_head_lib64_libkernel32_a-0x431b>
  40cc7d:	add    BYTE PTR [rax+0x75],ch
  40cc80:	and    BYTE PTR gs:[rax],al
  40cc83:	push   0x326575
  40cc88:	jae    40ccef <_head_lib64_libkernel32_a-0x4311>
  40cc8a:	ins    BYTE PTR es:[rdi],dx
  40cc8b:	movsxd eax,DWORD PTR [rax]
  40cc8d:	ins    DWORD PTR es:[rdi],dx
  40cc8e:	imul   edi,DWORD PTR [rax+0x72],0x64726700
  40cc95:	ins    DWORD PTR es:[rdi],dx
  40cc96:	add    BYTE PTR [rax+0x68],dh
  40cc99:	data16 ins BYTE PTR es:[rdi],dx
  40cc9b:	add    BYTE PTR [rbp+0x78],ah
  40cc9e:	jo     40cce1 <_head_lib64_libkernel32_a-0x431f>
  40cca0:	add    BYTE PTR [rax+rbp*2+0x72],dh
  40cca4:	jae    40cca6 <_head_lib64_libkernel32_a-0x435a>
  40cca6:	outs   dx,BYTE PTR ds:[rsi]
  40cca7:	jbe    40cd1b <_head_lib64_libkernel32_a-0x42e5>
  40cca9:	je     40ccab <_head_lib64_libkernel32_a-0x4355>
  40ccab:	jo     40cd1c <_head_lib64_libkernel32_a-0x42e4>
  40ccad:	jae    40cd23 <_head_lib64_libkernel32_a-0x42dd>
  40ccaf:	add    BYTE PTR [rbx+0x6f],dl
  40ccb2:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ccb4:	add    BYTE PTR [rax+0x74],dl
  40ccb7:	rex.RX ins BYTE PTR es:[rdi],dx
  40ccb9:	add    BYTE PTR [rdi+0x64],al
  40ccbc:	rex.RX ins BYTE PTR es:[rdi],dx
  40ccbe:	add    BYTE PTR [rdx+rsi*2+0x46],ch
  40ccc2:	pop    rax
  40ccc3:	add    BYTE PTR [rsi+riz*2+0x78],ch
  40ccc7:	xor    al,BYTE PTR [rax]
  40ccc9:	je     40cd44 <_head_lib64_libkernel32_a-0x42bc>
  40cccb:	push   rbx
  40cccc:	push   0x53795400
  40ccd1:	push   0x6e756c00
  40ccd6:	imul   eax,DWORD PTR [rax],0x6469796c
  40ccdc:	add    BYTE PTR [rbx+rsi*2+0x63],ch
  40cce0:	je     40cce2 <_head_lib64_libkernel32_a-0x431e>
	...
  40ccee:	add    BYTE PTR [rax],al
  40ccf0:	rex (bad) 
  40ccf2:	add    BYTE PTR [r8],al
  40ccf5:	add    BYTE PTR [rax],al
  40ccf7:	add    BYTE PTR [rax+0x1],al
  40ccfa:	add    BYTE PTR [r8],al
  40ccfd:	add    BYTE PTR [rax],al
  40ccff:	add    BYTE PTR [rax-0x74],dh
  40cd02:	add    BYTE PTR [rax],al
	...
  40cd0d:	add    BYTE PTR [rax],al
  40cd0f:	add    BYTE PTR [rcx+0x72],al
  40cd12:	addr32 jne 40cd82 <_head_lib64_libkernel32_a-0x427e>
  40cd15:	outs   dx,BYTE PTR gs:[rsi]
  40cd17:	je     40cd39 <_head_lib64_libkernel32_a-0x42c7>
  40cd19:	outs   dx,DWORD PTR fs:[rsi]
  40cd1b:	ins    DWORD PTR es:[rdi],dx
  40cd1c:	(bad)  
  40cd1d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  40cd24:	jb     40cd46 <_head_lib64_libkernel32_a-0x42ba>
  40cd26:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40cd2a:	rex.B
  40cd2b:	rex.WB
  40cd2c:	rex.WRX sub QWORD PTR [rax],r8
  40cd2f:	rex.B jb 40cd99 <_head_lib64_libkernel32_a-0x4267>
  40cd32:	jne    40cda1 <_head_lib64_libkernel32_a-0x425f>
  40cd34:	outs   dx,BYTE PTR gs:[rsi]
  40cd36:	je     40cd58 <_head_lib64_libkernel32_a-0x42a8>
  40cd38:	jae    40cda3 <_head_lib64_libkernel32_a-0x425d>
  40cd3a:	outs   dx,BYTE PTR ds:[rsi]
  40cd3b:	addr32 jne 40cdaa <_head_lib64_libkernel32_a-0x4256>
  40cd3e:	(bad)  
  40cd3f:	jb     40cdaa <_head_lib64_libkernel32_a-0x4256>
  40cd41:	je     40cdbc <_head_lib64_libkernel32_a-0x4244>
  40cd43:	and    BYTE PTR [rax],ch
  40cd45:	push   rbx
  40cd46:	rex.WB
  40cd47:	rex.RXB
  40cd48:	rex.WRX sub QWORD PTR [rax],r8
  40cd4b:	add    BYTE PTR [rax],al
  40cd4d:	add    BYTE PTR [rax],al
  40cd4f:	add    BYTE PTR [rdi+0x76],cl
  40cd52:	gs jb  40cdbb <_head_lib64_libkernel32_a-0x4245>
  40cd55:	ins    BYTE PTR es:[rdi],dx
  40cd56:	outs   dx,DWORD PTR ds:[rsi]
  40cd57:	ja     40cd79 <_head_lib64_libkernel32_a-0x4287>
  40cd59:	jb     40cdbc <_head_lib64_libkernel32_a-0x4244>
  40cd5b:	outs   dx,BYTE PTR ds:[rsi]
  40cd5c:	and    BYTE PTR gs:[ebp+0x72],ah
  40cd61:	jb     40cdd2 <_head_lib64_libkernel32_a-0x422e>
  40cd63:	jb     40cd85 <_head_lib64_libkernel32_a-0x427b>
  40cd65:	sub    BYTE PTR [rdi+0x56],cl
  40cd68:	rex.RB push r10
  40cd6a:	rex.RX
  40cd6b:	rex.WR
  40cd6c:	rex.WRXB push r15
  40cd6e:	sub    DWORD PTR [rax],eax
  40cd70:	push   rax
  40cd71:	(bad)  
  40cd72:	jb     40cde8 <_head_lib64_libkernel32_a-0x4218>
  40cd74:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40cd7b:	jae    40cd9d <_head_lib64_libkernel32_a-0x4263>
  40cd7d:	outs   dx,DWORD PTR ds:[rsi]
  40cd7e:	data16 and BYTE PTR [rbx+0x69],dh
  40cd82:	outs   dx,BYTE PTR ds:[esi]
  40cd84:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40cd8b:	and    BYTE PTR gs:[rax],ch
  40cd8e:	push   rax
  40cd8f:	rex.WR
  40cd90:	rex.WRXB push r11
  40cd92:	push   rbx
  40cd93:	sub    DWORD PTR [rax],eax
  40cd95:	add    BYTE PTR [rax],al
  40cd97:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40cd9b:	(bad)  
  40cd9c:	ins    BYTE PTR es:[rdi],dx
  40cd9d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40cda1:	jae    40cdc3 <_head_lib64_libkernel32_a-0x423d>
  40cda3:	outs   dx,DWORD PTR ds:[rsi]
  40cda4:	data16 and BYTE PTR [rbx+0x69],dh
  40cda8:	outs   dx,BYTE PTR ds:[esi]
  40cdaa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40cdb1:	and    BYTE PTR gs:[rax],ch
  40cdb4:	push   rsp
  40cdb5:	rex.WR
  40cdb6:	rex.WRXB push r11
  40cdb8:	push   rbx
  40cdb9:	sub    DWORD PTR [rax],eax
  40cdbb:	add    BYTE PTR [rax],al
  40cdbd:	add    BYTE PTR [rax],al
  40cdbf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40cdc3:	and    BYTE PTR [rdx+0x65],dh
  40cdc6:	jae    40ce3d <_head_lib64_libkernel32_a-0x41c3>
  40cdc8:	ins    BYTE PTR es:[rdi],dx
  40cdc9:	je     40cdeb <_head_lib64_libkernel32_a-0x4215>
  40cdcb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40cdd2:	jae    40ce41 <_head_lib64_libkernel32_a-0x41bf>
  40cdd4:	(bad)  
  40cdd5:	ins    BYTE PTR es:[rdi],dx
  40cdd6:	ins    BYTE PTR es:[rdi],dx
  40cdd7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40cddb:	(bad)  
  40cddc:	and    BYTE PTR gs:[rdx+0x65],dh
  40cde0:	jo     40ce54 <_head_lib64_libkernel32_a-0x41ac>
  40cde2:	gs jae 40ce4a <_head_lib64_libkernel32_a-0x41b6>
  40cde5:	outs   dx,BYTE PTR ds:[rsi]
  40cde6:	je     40ce4d <_head_lib64_libkernel32_a-0x41b3>
  40cde8:	and    BYTE PTR fs:[rax],ch
  40cdeb:	push   rbp
  40cdec:	rex.WRX
  40cded:	rex.R
  40cdee:	rex.RB push r10
  40cdf0:	rex.RX
  40cdf1:	rex.WR
  40cdf2:	rex.WRXB push r15
  40cdf4:	sub    DWORD PTR [rax],eax
  40cdf6:	push   rbp
  40cdf7:	outs   dx,BYTE PTR ds:[rsi]
  40cdf8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40cdfc:	outs   dx,BYTE PTR ds:[rsi]
  40cdfd:	and    BYTE PTR [rbp+0x72],ah
  40ce00:	jb     40ce71 <_head_lib64_libkernel32_a-0x418f>
  40ce02:	jb     40ce04 <_head_lib64_libkernel32_a-0x41fc>
  40ce04:	add    BYTE PTR [rax],al
  40ce06:	add    BYTE PTR [rax],al
  40ce08:	pop    rdi
  40ce09:	ins    DWORD PTR es:[rdi],dx
  40ce0a:	(bad)  
  40ce0b:	je     40ce75 <_head_lib64_libkernel32_a-0x418b>
  40ce0d:	gs jb  40ce82 <_head_lib64_libkernel32_a-0x417e>
  40ce10:	sub    BYTE PTR [rcx],ch
  40ce12:	cmp    ah,BYTE PTR [rax]
  40ce14:	and    eax,0x6e692073
  40ce19:	and    BYTE PTR [rip+0x67252873],ah        # 6765f692 <libjpeg_8_dll_iname+0x6724c992>
  40ce1f:	sub    al,0x20
  40ce21:	and    eax,0x20202967
  40ce26:	sub    BYTE PTR [rdx+0x65],dh
  40ce29:	je     40cea1 <_head_lib64_libkernel32_a-0x415f>
  40ce2b:	(bad)  
  40ce2c:	ins    BYTE PTR es:[rdi],dx
  40ce2d:	cmp    eax,0xa296725
  40ce32:	add    BYTE PTR [rax],al
  40ce34:	or     al,0xc0
  40ce36:	(bad)  
  40ce37:	dec    DWORD PTR [rbp-0x41]
  40ce3a:	(bad)  
  40ce3b:	(bad)  
  40ce3c:	mov    esp,0xccffffbf
  40ce41:	mov    edi,0xbfdcffff
  40ce46:	(bad)  
  40ce47:	(bad)  
  40ce48:	in     al,dx
  40ce49:	mov    edi,0xbffcffff
  40ce4e:	(bad)  
  40ce4f:	dec    DWORD PTR [rbp+0x69]
  40ce52:	outs   dx,BYTE PTR ds:[rsi]
  40ce53:	addr32 ja 40ce83 <_head_lib64_libkernel32_a-0x417d>
  40ce56:	ja     40ce8e <_head_lib64_libkernel32_a-0x4172>
  40ce58:	xor    al,0x20
  40ce5a:	jb     40ced1 <_head_lib64_libkernel32_a-0x412f>
  40ce5c:	outs   dx,BYTE PTR ds:[rsi]
  40ce5d:	je     40cec8 <_head_lib64_libkernel32_a-0x4138>
  40ce5f:	ins    DWORD PTR es:[rdi],dx
  40ce60:	and    BYTE PTR gs:[rsi+0x61],ah
  40ce64:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40ce6c:	add    BYTE PTR [rax],al
  40ce6e:	add    BYTE PTR [rax],al
  40ce70:	rex.B
  40ce71:	fs fs jb 40ceda <_head_lib64_libkernel32_a-0x4126>
  40ce75:	jae    40ceea <_head_lib64_libkernel32_a-0x4116>
  40ce77:	and    BYTE PTR [rip+0x61682070],ah        # 61a8eeed <libjpeg_8_dll_iname+0x6167c1ed>
  40ce7d:	jae    40ce9f <_head_lib64_libkernel32_a-0x4161>
  40ce7f:	outs   dx,BYTE PTR ds:[rsi]
  40ce80:	outs   dx,DWORD PTR ds:[rsi]
  40ce81:	and    BYTE PTR [rcx+0x6d],ch
  40ce84:	(bad)  
  40ce85:	addr32 gs sub eax,0x74636573
  40ce8c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  40ce93:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40ce9a:	jne    40cf01 <_head_lib64_libkernel32_a-0x40ff>
  40ce9c:	jb     40cf17 <_head_lib64_libkernel32_a-0x40e9>
  40ce9e:	and    BYTE PTR [rsi+0x61],ah
  40cea1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  40cea9:	and    BYTE PTR [rip+0x79622064],ah        # 79a2ef13 <libjpeg_8_dll_iname+0x7961c213>
  40ceaf:	je     40cf16 <_head_lib64_libkernel32_a-0x40ea>
  40ceb1:	jae    40ced3 <_head_lib64_libkernel32_a-0x412d>
  40ceb3:	(bad)  
  40ceb4:	je     40ced6 <_head_lib64_libkernel32_a-0x412a>
  40ceb6:	(bad)  
  40ceb7:	fs fs jb 40cf20 <_head_lib64_libkernel32_a-0x40e0>
  40cebb:	jae    40cf30 <_head_lib64_libkernel32_a-0x40d0>
  40cebd:	and    BYTE PTR [rip+0x70],ah        # 40cf33 <_head_lib64_libkernel32_a-0x40cd>
  40cec3:	add    BYTE PTR [rax],al
  40cec5:	add    BYTE PTR [rax],al
  40cec7:	add    BYTE PTR [rax],ah
  40cec9:	and    BYTE PTR [rsi+0x69],dl
  40cecc:	jb     40cf42 <_head_lib64_libkernel32_a-0x40be>
  40cece:	jne    40cf31 <_head_lib64_libkernel32_a-0x40cf>
  40ced0:	ins    BYTE PTR es:[rdi],dx
  40ced1:	push   rax
  40ced2:	jb     40cf43 <_head_lib64_libkernel32_a-0x40bd>
  40ced4:	je     40cf3b <_head_lib64_libkernel32_a-0x40c5>
  40ced6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40ceda:	(bad)  
  40cedb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40cee3:	push   0x646f6320
  40cee8:	and    BYTE PTR gs:[rax],dh
  40ceeb:	js     40cf12 <_head_lib64_libkernel32_a-0x40ee>
  40ceed:	js     40ceef <_head_lib64_libkernel32_a-0x4111>
  40ceef:	add    BYTE PTR [rax],ah
  40cef1:	and    BYTE PTR [rbp+0x6e],dl
  40cef4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40cef8:	outs   dx,BYTE PTR ds:[rsi]
  40cef9:	and    BYTE PTR [rax+0x73],dh
  40cefc:	gs jne 40cf63 <_head_lib64_libkernel32_a-0x409d>
  40ceff:	outs   dx,DWORD PTR ds:[rsi]
  40cf00:	and    BYTE PTR [rdx+0x65],dh
  40cf03:	ins    BYTE PTR es:[rdi],dx
  40cf04:	outs   dx,DWORD PTR ds:[rsi]
  40cf05:	movsxd esp,DWORD PTR [rcx+0x74]
  40cf08:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40cf0f:	je     40cf80 <_head_lib64_libkernel32_a-0x4080>
  40cf11:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40cf14:	and    BYTE PTR [rsi+0x65],dh
  40cf17:	jb     40cf8c <_head_lib64_libkernel32_a-0x4074>
  40cf19:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40cf20:	or     al,BYTE PTR [rax]
  40cf22:	add    BYTE PTR [rax],al
  40cf24:	add    BYTE PTR [rax],al
  40cf26:	add    BYTE PTR [rax],al
  40cf28:	and    BYTE PTR [rax],ah
  40cf2a:	push   rbp
  40cf2b:	outs   dx,BYTE PTR ds:[rsi]
  40cf2c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40cf30:	outs   dx,BYTE PTR ds:[rsi]
  40cf31:	and    BYTE PTR [rax+0x73],dh
  40cf34:	gs jne 40cf9b <_head_lib64_libkernel32_a-0x4065>
  40cf37:	outs   dx,DWORD PTR ds:[rsi]
  40cf38:	and    BYTE PTR [rdx+0x65],dh
  40cf3b:	ins    BYTE PTR es:[rdi],dx
  40cf3c:	outs   dx,DWORD PTR ds:[rsi]
  40cf3d:	movsxd esp,DWORD PTR [rcx+0x74]
  40cf40:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  40cf47:	and    BYTE PTR [rbx+0x69],dh
  40cf4a:	jp     40cfb1 <_head_lib64_libkernel32_a-0x404f>
  40cf4c:	and    BYTE PTR [rip+0xa2e64],ah        # 4afdb6 <libjpeg_8_dll_iname+0x9d0b6>
	...
  40cf5e:	add    BYTE PTR [rax],al
  40cf60:	cs jo  40cfc7 <_head_lib64_libkernel32_a-0x4039>
  40cf63:	(bad)  
  40cf64:	je     40cfc7 <_head_lib64_libkernel32_a-0x4039>
	...
  40cf6e:	add    BYTE PTR [rax],al
  40cf70:	xor    BYTE PTR [rax+0x40],0x0
	...
  40cf7f:	add    BYTE PTR [rax+0x40b0],dl
	...
  40cf8d:	add    BYTE PTR [rax],al
  40cf8f:	add    BYTE PTR [rax-0x60],dl
  40cf92:	add    BYTE PTR [rax],al
	...
  40cf9d:	add    BYTE PTR [rax],al
  40cf9f:	add    BYTE PTR [rax-0x29],dh
  40cfa2:	add    BYTE PTR [rax],al
	...
  40cfad:	add    BYTE PTR [rax],al
  40cfaf:	add    BYTE PTR [rax-0x29],dh
  40cfb2:	add    BYTE PTR [rax],al
	...
  40cfc1:	int    0x40
	...
  40cfcf:	add    BYTE PTR [rax],al
  40cfd1:	add    BYTE PTR [rax+0x0],al
	...
  40cfe0:	push   rax
  40cfe1:	(bad)  
  40cfe2:	add    BYTE PTR [r8],al
	...
  40cfed:	add    BYTE PTR [rax],al
  40cfef:	add    BYTE PTR [rax+0x17],bl
  40cff2:	add    BYTE PTR [r8],al
	...
  40cffd:	add    BYTE PTR [rax],al
  40cfff:	add    BYTE PTR [rax+0x17],dh
  40d002:	add    BYTE PTR [r8],al
	...
  40d00d:	add    BYTE PTR [rax],al
  40d00f:	add    BYTE PTR [rax+0x4117],bl
	...
  40d01d:	add    BYTE PTR [rax],al
  40d01f:	add    BYTE PTR [rax+0x4117],bh
	...
  40d02d:	add    BYTE PTR [rax],al
  40d02f:	add    al,dl
  40d031:	(bad)  
  40d032:	add    BYTE PTR [r8],al
	...
  40d03d:	add    BYTE PTR [rax],al
  40d03f:	add    BYTE PTR [rax+0x4107],al
	...
  40d04d:	add    BYTE PTR [rax],al
  40d04f:	add    al,ch
  40d051:	or     al,BYTE PTR [rcx+0x0]
	...
  40d060:	loopne 40d06c <_head_lib64_libkernel32_a-0x3f94>
  40d062:	add    BYTE PTR [r8],al
	...
  40d06d:	add    BYTE PTR [rax],al
  40d06f:	add    al,dl
  40d071:	or     al,BYTE PTR [rcx+0x0]
	...
  40d080:	fmul   DWORD PTR [rdx]
  40d082:	add    BYTE PTR [r8],al
	...
  40d091:	xor    BYTE PTR [rcx+0x0],al
	...
  40d0a0:	adc    BYTE PTR [rax],dh
  40d0a2:	add    BYTE PTR [r8],al
	...
  40d0ad:	add    BYTE PTR [rax],al
  40d0af:	add    BYTE PTR [rax],bl
  40d0b1:	xor    BYTE PTR [rcx+0x0],al
	...
  40d0c0:	xor    BYTE PTR [rax],dh
  40d0c2:	add    BYTE PTR [r8],al
	...
  40d0d1:	add    DWORD PTR [rcx+0x0],eax
	...
  40d0e0:	push   rax
  40d0e1:	(bad)  
  40d0e2:	add    BYTE PTR [r8],al
	...
  40d0f1:	xchg   esi,eax
  40d0f2:	add    BYTE PTR [rax],al
	...
  40d0fd:	add    BYTE PTR [rax],al
  40d0ff:	add    BYTE PTR [rax-0x73],dl
  40d102:	add    BYTE PTR [rax],al
	...
  40d111:	(bad)  
  40d112:	add    BYTE PTR [r8],al
	...
  40d11d:	add    BYTE PTR [rax],al
  40d11f:	add    BYTE PTR [rax],dh
  40d121:	(bad)  
  40d122:	add    BYTE PTR [r8],al
	...
  40d12d:	add    BYTE PTR [rax],al
  40d12f:	add    BYTE PTR [rax],dl
  40d131:	add    DWORD PTR [rcx+0x0],eax
	...
  40d140:	sbb    BYTE PTR [rdi],al
  40d142:	add    BYTE PTR [r8],al
	...
  40d14d:	add    BYTE PTR [rax],al
  40d14f:	add    BYTE PTR [rdi+rax*1],dl
  40d152:	add    BYTE PTR [r8],al
	...
  40d15d:	add    BYTE PTR [rax],al
  40d15f:	add    BYTE PTR [rax],dl
  40d161:	(bad)  
  40d162:	add    BYTE PTR [r8],al
	...
  40d16d:	add    BYTE PTR [rax],al
  40d16f:	add    BYTE PTR [rdi+0x43],al
  40d172:	rex.XB cmp spl,BYTE PTR [r8]
  40d175:	sub    BYTE PTR [rdi+0x65],al
  40d178:	outs   dx,BYTE PTR ds:[rsi]
  40d179:	je     40d1ea <_head_lib64_libkernel32_a-0x3e16>
  40d17b:	outs   dx,DWORD PTR ds:[rsi]
  40d17c:	and    BYTE PTR [rsi+rbp*1],dh
  40d17f:	cmp    DWORD PTR [rsi],ebp
  40d181:	xor    esp,DWORD PTR [rax]
  40d183:	jo     40d1b6 <_head_lib64_libkernel32_a-0x3e4a>
  40d185:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d189:	jo     40d1f4 <_head_lib64_libkernel32_a-0x3e0c>
  40d18b:	gs sub eax,0x2e362e30
  40d191:	xor    ch,BYTE PTR [rcx]
  40d193:	and    BYTE PTR [rsi+rbp*1],dh
  40d196:	cmp    DWORD PTR [rsi],ebp
  40d198:	xor    eax,DWORD PTR [rax]
  40d19a:	add    BYTE PTR [rax],al
  40d19c:	add    BYTE PTR [rax],al
  40d19e:	add    BYTE PTR [rax],al
  40d1a0:	rex.RXB
  40d1a1:	rex.XB
  40d1a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d1a5:	sub    BYTE PTR [rdi+0x65],al
  40d1a8:	outs   dx,BYTE PTR ds:[rsi]
  40d1a9:	je     40d21a <_head_lib64_libkernel32_a-0x3de6>
  40d1ab:	outs   dx,DWORD PTR ds:[rsi]
  40d1ac:	and    BYTE PTR [rip+0x302e342e],dh        # 306f05e0 <libjpeg_8_dll_iname+0x302dd8e0>
  40d1b2:	sub    eax,0x70203372
  40d1b7:	xor    DWORD PTR [rsi],ebp
  40d1b9:	xor    ebp,DWORD PTR [rax+riz*1]
  40d1bc:	jo     40d227 <_head_lib64_libkernel32_a-0x3dd9>
  40d1be:	gs sub eax,0x2e362e30
  40d1c4:	xor    eax,0x2e352029
  40d1c9:	xor    al,0x2e
  40d1cb:	xor    BYTE PTR [rax],al
  40d1cd:	add    BYTE PTR [rax],al
  40d1cf:	add    BYTE PTR [rdi+0x43],al
  40d1d2:	rex.XB cmp spl,BYTE PTR [r8]
  40d1d5:	sub    BYTE PTR [rdi+0x65],al
  40d1d8:	outs   dx,BYTE PTR ds:[rsi]
  40d1d9:	je     40d24a <_head_lib64_libkernel32_a-0x3db6>
  40d1db:	outs   dx,DWORD PTR ds:[rsi]
  40d1dc:	and    BYTE PTR [rip+0x302e342e],dh        # 306f0610 <libjpeg_8_dll_iname+0x302dd910>
  40d1e2:	sub    eax,0x70203372
  40d1e7:	xor    DWORD PTR [rsi],ebp
  40d1e9:	xor    ebp,DWORD PTR [rax+riz*1]
  40d1ec:	jo     40d257 <_head_lib64_libkernel32_a-0x3da9>
  40d1ee:	gs sub eax,0x2e362e30
  40d1f4:	xor    eax,0x2e352029
  40d1f9:	xor    al,0x2e
  40d1fb:	xor    BYTE PTR [rax],al
  40d1fd:	add    BYTE PTR [rax],al
  40d1ff:	add    BYTE PTR [rdi+0x43],al
  40d202:	rex.XB cmp spl,BYTE PTR [r8]
  40d205:	sub    BYTE PTR [rdi+0x65],al
  40d208:	outs   dx,BYTE PTR ds:[rsi]
  40d209:	je     40d27a <_head_lib64_libkernel32_a-0x3d86>
  40d20b:	outs   dx,DWORD PTR ds:[rsi]
  40d20c:	and    BYTE PTR [rip+0x302e342e],dh        # 306f0640 <libjpeg_8_dll_iname+0x302dd940>
  40d212:	sub    eax,0x70203372
  40d217:	xor    DWORD PTR [rsi],ebp
  40d219:	xor    ebp,DWORD PTR [rax+riz*1]
  40d21c:	jo     40d287 <_head_lib64_libkernel32_a-0x3d79>
  40d21e:	gs sub eax,0x2e362e30
  40d224:	xor    eax,0x2e352029
  40d229:	xor    al,0x2e
  40d22b:	xor    BYTE PTR [rax],al
  40d22d:	add    BYTE PTR [rax],al
  40d22f:	add    BYTE PTR [rdi+0x43],al
  40d232:	rex.XB cmp spl,BYTE PTR [r8]
  40d235:	sub    BYTE PTR [rdi+0x65],al
  40d238:	outs   dx,BYTE PTR ds:[rsi]
  40d239:	je     40d2aa <_head_lib64_libkernel32_a-0x3d56>
  40d23b:	outs   dx,DWORD PTR ds:[rsi]
  40d23c:	and    BYTE PTR [rip+0x302e342e],dh        # 306f0670 <libjpeg_8_dll_iname+0x302dd970>
  40d242:	sub    eax,0x70203372
  40d247:	xor    DWORD PTR [rsi],ebp
  40d249:	xor    ebp,DWORD PTR [rax+riz*1]
  40d24c:	jo     40d2b7 <_head_lib64_libkernel32_a-0x3d49>
  40d24e:	gs sub eax,0x2e362e30
  40d254:	xor    eax,0x2e352029
  40d259:	xor    al,0x2e
  40d25b:	xor    BYTE PTR [rax],al
  40d25d:	add    BYTE PTR [rax],al
  40d25f:	add    BYTE PTR [rdi+0x43],al
  40d262:	rex.XB cmp spl,BYTE PTR [r8]
  40d265:	sub    BYTE PTR [rdi+0x65],al
  40d268:	outs   dx,BYTE PTR ds:[rsi]
  40d269:	je     40d2da <_head_lib64_libkernel32_a-0x3d26>
  40d26b:	outs   dx,DWORD PTR ds:[rsi]
  40d26c:	and    BYTE PTR [rip+0x302e342e],dh        # 306f06a0 <libjpeg_8_dll_iname+0x302dd9a0>
  40d272:	sub    eax,0x70203372
  40d277:	xor    DWORD PTR [rsi],ebp
  40d279:	xor    ebp,DWORD PTR [rax+riz*1]
  40d27c:	jo     40d2e7 <_head_lib64_libkernel32_a-0x3d19>
  40d27e:	gs sub eax,0x2e362e30
  40d284:	xor    eax,0x2e352029
  40d289:	xor    al,0x2e
  40d28b:	xor    BYTE PTR [rax],al
  40d28d:	add    BYTE PTR [rax],al
  40d28f:	add    BYTE PTR [rdi+0x43],al
  40d292:	rex.XB cmp spl,BYTE PTR [r8]
  40d295:	sub    BYTE PTR [rdi+0x65],al
  40d298:	outs   dx,BYTE PTR ds:[rsi]
  40d299:	je     40d30a <_head_lib64_libkernel32_a-0x3cf6>
  40d29b:	outs   dx,DWORD PTR ds:[rsi]
  40d29c:	and    BYTE PTR [rip+0x302e342e],dh        # 306f06d0 <libjpeg_8_dll_iname+0x302dd9d0>
  40d2a2:	sub    eax,0x70203372
  40d2a7:	xor    DWORD PTR [rsi],ebp
  40d2a9:	xor    ebp,DWORD PTR [rax+riz*1]
  40d2ac:	jo     40d317 <_head_lib64_libkernel32_a-0x3ce9>
  40d2ae:	gs sub eax,0x2e362e30
  40d2b4:	xor    eax,0x2e352029
  40d2b9:	xor    al,0x2e
  40d2bb:	xor    BYTE PTR [rax],al
  40d2bd:	add    BYTE PTR [rax],al
  40d2bf:	add    BYTE PTR [rdi+0x43],al
  40d2c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d2c5:	sub    BYTE PTR [rdi+0x65],al
  40d2c8:	outs   dx,BYTE PTR ds:[rsi]
  40d2c9:	je     40d33a <_head_lib64_libkernel32_a-0x3cc6>
  40d2cb:	outs   dx,DWORD PTR ds:[rsi]
  40d2cc:	and    BYTE PTR [rip+0x302e342e],dh        # 306f0700 <libjpeg_8_dll_iname+0x302dda00>
  40d2d2:	sub    eax,0x70203372
  40d2d7:	xor    DWORD PTR [rsi],ebp
  40d2d9:	xor    ebp,DWORD PTR [rax+riz*1]
  40d2dc:	jo     40d347 <_head_lib64_libkernel32_a-0x3cb9>
  40d2de:	gs sub eax,0x2e362e30
  40d2e4:	xor    eax,0x2e352029
  40d2e9:	xor    al,0x2e
  40d2eb:	xor    BYTE PTR [rax],al
  40d2ed:	add    BYTE PTR [rax],al
  40d2ef:	add    BYTE PTR [rdi+0x43],al
  40d2f2:	rex.XB cmp spl,BYTE PTR [r8]
  40d2f5:	sub    BYTE PTR [rdi+0x65],al
  40d2f8:	outs   dx,BYTE PTR ds:[rsi]
  40d2f9:	je     40d36a <_head_lib64_libkernel32_a-0x3c96>
  40d2fb:	outs   dx,DWORD PTR ds:[rsi]
  40d2fc:	and    BYTE PTR [rsi+rbp*1],dh
  40d2ff:	cmp    DWORD PTR [rsi],ebp
  40d301:	xor    esp,DWORD PTR [rax]
  40d303:	jo     40d336 <_head_lib64_libkernel32_a-0x3cca>
  40d305:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d309:	jo     40d374 <_head_lib64_libkernel32_a-0x3c8c>
  40d30b:	gs sub eax,0x2e362e30
  40d311:	xor    ch,BYTE PTR [rcx]
  40d313:	and    BYTE PTR [rsi+rbp*1],dh
  40d316:	cmp    DWORD PTR [rsi],ebp
  40d318:	xor    eax,DWORD PTR [rax]
  40d31a:	add    BYTE PTR [rax],al
  40d31c:	add    BYTE PTR [rax],al
  40d31e:	add    BYTE PTR [rax],al
  40d320:	rex.RXB
  40d321:	rex.XB
  40d322:	rex.XB cmp spl,BYTE PTR [r8]
  40d325:	sub    BYTE PTR [rdi+0x65],al
  40d328:	outs   dx,BYTE PTR ds:[rsi]
  40d329:	je     40d39a <_head_lib64_libkernel32_a-0x3c66>
  40d32b:	outs   dx,DWORD PTR ds:[rsi]
  40d32c:	and    BYTE PTR [rsi+rbp*1],dh
  40d32f:	cmp    DWORD PTR [rsi],ebp
  40d331:	xor    esp,DWORD PTR [rax]
  40d333:	jo     40d366 <_head_lib64_libkernel32_a-0x3c9a>
  40d335:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d339:	jo     40d3a4 <_head_lib64_libkernel32_a-0x3c5c>
  40d33b:	gs sub eax,0x2e362e30
  40d341:	xor    ch,BYTE PTR [rcx]
  40d343:	and    BYTE PTR [rsi+rbp*1],dh
  40d346:	cmp    DWORD PTR [rsi],ebp
  40d348:	xor    eax,DWORD PTR [rax]
  40d34a:	add    BYTE PTR [rax],al
  40d34c:	add    BYTE PTR [rax],al
  40d34e:	add    BYTE PTR [rax],al
  40d350:	rex.RXB
  40d351:	rex.XB
  40d352:	rex.XB cmp spl,BYTE PTR [r8]
  40d355:	sub    BYTE PTR [rdi+0x65],al
  40d358:	outs   dx,BYTE PTR ds:[rsi]
  40d359:	je     40d3ca <_head_lib64_libkernel32_a-0x3c36>
  40d35b:	outs   dx,DWORD PTR ds:[rsi]
  40d35c:	and    BYTE PTR [rsi+rbp*1],dh
  40d35f:	cmp    DWORD PTR [rsi],ebp
  40d361:	xor    esp,DWORD PTR [rax]
  40d363:	jo     40d396 <_head_lib64_libkernel32_a-0x3c6a>
  40d365:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d369:	jo     40d3d4 <_head_lib64_libkernel32_a-0x3c2c>
  40d36b:	gs sub eax,0x2e362e30
  40d371:	xor    ch,BYTE PTR [rcx]
  40d373:	and    BYTE PTR [rsi+rbp*1],dh
  40d376:	cmp    DWORD PTR [rsi],ebp
  40d378:	xor    eax,DWORD PTR [rax]
  40d37a:	add    BYTE PTR [rax],al
  40d37c:	add    BYTE PTR [rax],al
  40d37e:	add    BYTE PTR [rax],al
  40d380:	rex.RXB
  40d381:	rex.XB
  40d382:	rex.XB cmp spl,BYTE PTR [r8]
  40d385:	sub    BYTE PTR [rdi+0x65],al
  40d388:	outs   dx,BYTE PTR ds:[rsi]
  40d389:	je     40d3fa <_head_lib64_libkernel32_a-0x3c06>
  40d38b:	outs   dx,DWORD PTR ds:[rsi]
  40d38c:	and    BYTE PTR [rsi+rbp*1],dh
  40d38f:	cmp    DWORD PTR [rsi],ebp
  40d391:	xor    esp,DWORD PTR [rax]
  40d393:	jo     40d3c6 <_head_lib64_libkernel32_a-0x3c3a>
  40d395:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d399:	jo     40d404 <_head_lib64_libkernel32_a-0x3bfc>
  40d39b:	gs sub eax,0x2e362e30
  40d3a1:	xor    ch,BYTE PTR [rcx]
  40d3a3:	and    BYTE PTR [rsi+rbp*1],dh
  40d3a6:	cmp    DWORD PTR [rsi],ebp
  40d3a8:	xor    eax,DWORD PTR [rax]
  40d3aa:	add    BYTE PTR [rax],al
  40d3ac:	add    BYTE PTR [rax],al
  40d3ae:	add    BYTE PTR [rax],al
  40d3b0:	rex.RXB
  40d3b1:	rex.XB
  40d3b2:	rex.XB cmp spl,BYTE PTR [r8]
  40d3b5:	sub    BYTE PTR [rdi+0x65],al
  40d3b8:	outs   dx,BYTE PTR ds:[rsi]
  40d3b9:	je     40d42a <_head_lib64_libkernel32_a-0x3bd6>
  40d3bb:	outs   dx,DWORD PTR ds:[rsi]
  40d3bc:	and    BYTE PTR [rsi+rbp*1],dh
  40d3bf:	cmp    DWORD PTR [rsi],ebp
  40d3c1:	xor    esp,DWORD PTR [rax]
  40d3c3:	jo     40d3f6 <_head_lib64_libkernel32_a-0x3c0a>
  40d3c5:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d3c9:	jo     40d434 <_head_lib64_libkernel32_a-0x3bcc>
  40d3cb:	gs sub eax,0x2e362e30
  40d3d1:	xor    ch,BYTE PTR [rcx]
  40d3d3:	and    BYTE PTR [rsi+rbp*1],dh
  40d3d6:	cmp    DWORD PTR [rsi],ebp
  40d3d8:	xor    eax,DWORD PTR [rax]
  40d3da:	add    BYTE PTR [rax],al
  40d3dc:	add    BYTE PTR [rax],al
  40d3de:	add    BYTE PTR [rax],al
  40d3e0:	rex.RXB
  40d3e1:	rex.XB
  40d3e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d3e5:	sub    BYTE PTR [rdi+0x65],al
  40d3e8:	outs   dx,BYTE PTR ds:[rsi]
  40d3e9:	je     40d45a <_head_lib64_libkernel32_a-0x3ba6>
  40d3eb:	outs   dx,DWORD PTR ds:[rsi]
  40d3ec:	and    BYTE PTR [rsi+rbp*1],dh
  40d3ef:	cmp    DWORD PTR [rsi],ebp
  40d3f1:	xor    esp,DWORD PTR [rax]
  40d3f3:	jo     40d426 <_head_lib64_libkernel32_a-0x3bda>
  40d3f5:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d3f9:	jo     40d464 <_head_lib64_libkernel32_a-0x3b9c>
  40d3fb:	gs sub eax,0x2e362e30
  40d401:	xor    ch,BYTE PTR [rcx]
  40d403:	and    BYTE PTR [rsi+rbp*1],dh
  40d406:	cmp    DWORD PTR [rsi],ebp
  40d408:	xor    eax,DWORD PTR [rax]
  40d40a:	add    BYTE PTR [rax],al
  40d40c:	add    BYTE PTR [rax],al
  40d40e:	add    BYTE PTR [rax],al
  40d410:	rex.RXB
  40d411:	rex.XB
  40d412:	rex.XB cmp spl,BYTE PTR [r8]
  40d415:	sub    BYTE PTR [rdi+0x65],al
  40d418:	outs   dx,BYTE PTR ds:[rsi]
  40d419:	je     40d48a <_head_lib64_libkernel32_a-0x3b76>
  40d41b:	outs   dx,DWORD PTR ds:[rsi]
  40d41c:	and    BYTE PTR [rsi+rbp*1],dh
  40d41f:	cmp    DWORD PTR [rsi],ebp
  40d421:	xor    esp,DWORD PTR [rax]
  40d423:	jo     40d456 <_head_lib64_libkernel32_a-0x3baa>
  40d425:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d429:	jo     40d494 <_head_lib64_libkernel32_a-0x3b6c>
  40d42b:	gs sub eax,0x2e362e30
  40d431:	xor    ch,BYTE PTR [rcx]
  40d433:	and    BYTE PTR [rsi+rbp*1],dh
  40d436:	cmp    DWORD PTR [rsi],ebp
  40d438:	xor    eax,DWORD PTR [rax]
  40d43a:	add    BYTE PTR [rax],al
  40d43c:	add    BYTE PTR [rax],al
  40d43e:	add    BYTE PTR [rax],al
  40d440:	rex.RXB
  40d441:	rex.XB
  40d442:	rex.XB cmp spl,BYTE PTR [r8]
  40d445:	sub    BYTE PTR [rdi+0x65],al
  40d448:	outs   dx,BYTE PTR ds:[rsi]
  40d449:	je     40d4ba <_head_lib64_libkernel32_a-0x3b46>
  40d44b:	outs   dx,DWORD PTR ds:[rsi]
  40d44c:	and    BYTE PTR [rsi+rbp*1],dh
  40d44f:	cmp    DWORD PTR [rsi],ebp
  40d451:	xor    esp,DWORD PTR [rax]
  40d453:	jo     40d486 <_head_lib64_libkernel32_a-0x3b7a>
  40d455:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d459:	jo     40d4c4 <_head_lib64_libkernel32_a-0x3b3c>
  40d45b:	gs sub eax,0x2e362e30
  40d461:	xor    ch,BYTE PTR [rcx]
  40d463:	and    BYTE PTR [rsi+rbp*1],dh
  40d466:	cmp    DWORD PTR [rsi],ebp
  40d468:	xor    eax,DWORD PTR [rax]
  40d46a:	add    BYTE PTR [rax],al
  40d46c:	add    BYTE PTR [rax],al
  40d46e:	add    BYTE PTR [rax],al
  40d470:	rex.RXB
  40d471:	rex.XB
  40d472:	rex.XB cmp spl,BYTE PTR [r8]
  40d475:	sub    BYTE PTR [rdi+0x65],al
  40d478:	outs   dx,BYTE PTR ds:[rsi]
  40d479:	je     40d4ea <_head_lib64_libkernel32_a-0x3b16>
  40d47b:	outs   dx,DWORD PTR ds:[rsi]
  40d47c:	and    BYTE PTR [rsi+rbp*1],dh
  40d47f:	cmp    DWORD PTR [rsi],ebp
  40d481:	xor    esp,DWORD PTR [rax]
  40d483:	jo     40d4b6 <_head_lib64_libkernel32_a-0x3b4a>
  40d485:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d489:	jo     40d4f4 <_head_lib64_libkernel32_a-0x3b0c>
  40d48b:	gs sub eax,0x2e362e30
  40d491:	xor    ch,BYTE PTR [rcx]
  40d493:	and    BYTE PTR [rsi+rbp*1],dh
  40d496:	cmp    DWORD PTR [rsi],ebp
  40d498:	xor    eax,DWORD PTR [rax]
  40d49a:	add    BYTE PTR [rax],al
  40d49c:	add    BYTE PTR [rax],al
  40d49e:	add    BYTE PTR [rax],al
  40d4a0:	rex.RXB
  40d4a1:	rex.XB
  40d4a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d4a5:	sub    BYTE PTR [rdi+0x65],al
  40d4a8:	outs   dx,BYTE PTR ds:[rsi]
  40d4a9:	je     40d51a <_head_lib64_libkernel32_a-0x3ae6>
  40d4ab:	outs   dx,DWORD PTR ds:[rsi]
  40d4ac:	and    BYTE PTR [rsi+rbp*1],dh
  40d4af:	cmp    DWORD PTR [rsi],ebp
  40d4b1:	xor    esp,DWORD PTR [rax]
  40d4b3:	jo     40d4e6 <_head_lib64_libkernel32_a-0x3b1a>
  40d4b5:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d4b9:	jo     40d524 <_head_lib64_libkernel32_a-0x3adc>
  40d4bb:	gs sub eax,0x2e362e30
  40d4c1:	xor    ch,BYTE PTR [rcx]
  40d4c3:	and    BYTE PTR [rsi+rbp*1],dh
  40d4c6:	cmp    DWORD PTR [rsi],ebp
  40d4c8:	xor    eax,DWORD PTR [rax]
  40d4ca:	add    BYTE PTR [rax],al
  40d4cc:	add    BYTE PTR [rax],al
  40d4ce:	add    BYTE PTR [rax],al
  40d4d0:	rex.RXB
  40d4d1:	rex.XB
  40d4d2:	rex.XB cmp spl,BYTE PTR [r8]
  40d4d5:	sub    BYTE PTR [rdi+0x65],al
  40d4d8:	outs   dx,BYTE PTR ds:[rsi]
  40d4d9:	je     40d54a <_head_lib64_libkernel32_a-0x3ab6>
  40d4db:	outs   dx,DWORD PTR ds:[rsi]
  40d4dc:	and    BYTE PTR [rsi+rbp*1],dh
  40d4df:	cmp    DWORD PTR [rsi],ebp
  40d4e1:	xor    esp,DWORD PTR [rax]
  40d4e3:	jo     40d516 <_head_lib64_libkernel32_a-0x3aea>
  40d4e5:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d4e9:	jo     40d554 <_head_lib64_libkernel32_a-0x3aac>
  40d4eb:	gs sub eax,0x2e362e30
  40d4f1:	xor    ch,BYTE PTR [rcx]
  40d4f3:	and    BYTE PTR [rsi+rbp*1],dh
  40d4f6:	cmp    DWORD PTR [rsi],ebp
  40d4f8:	xor    eax,DWORD PTR [rax]
  40d4fa:	add    BYTE PTR [rax],al
  40d4fc:	add    BYTE PTR [rax],al
  40d4fe:	add    BYTE PTR [rax],al
  40d500:	rex.RXB
  40d501:	rex.XB
  40d502:	rex.XB cmp spl,BYTE PTR [r8]
  40d505:	sub    BYTE PTR [rdi+0x65],al
  40d508:	outs   dx,BYTE PTR ds:[rsi]
  40d509:	je     40d57a <_head_lib64_libkernel32_a-0x3a86>
  40d50b:	outs   dx,DWORD PTR ds:[rsi]
  40d50c:	and    BYTE PTR [rsi+rbp*1],dh
  40d50f:	cmp    DWORD PTR [rsi],ebp
  40d511:	xor    esp,DWORD PTR [rax]
  40d513:	jo     40d546 <_head_lib64_libkernel32_a-0x3aba>
  40d515:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d519:	jo     40d584 <_head_lib64_libkernel32_a-0x3a7c>
  40d51b:	gs sub eax,0x2e362e30
  40d521:	xor    ch,BYTE PTR [rcx]
  40d523:	and    BYTE PTR [rsi+rbp*1],dh
  40d526:	cmp    DWORD PTR [rsi],ebp
  40d528:	xor    eax,DWORD PTR [rax]
  40d52a:	add    BYTE PTR [rax],al
  40d52c:	add    BYTE PTR [rax],al
  40d52e:	add    BYTE PTR [rax],al
  40d530:	rex.RXB
  40d531:	rex.XB
  40d532:	rex.XB cmp spl,BYTE PTR [r8]
  40d535:	sub    BYTE PTR [rdi+0x65],al
  40d538:	outs   dx,BYTE PTR ds:[rsi]
  40d539:	je     40d5aa <_head_lib64_libkernel32_a-0x3a56>
  40d53b:	outs   dx,DWORD PTR ds:[rsi]
  40d53c:	and    BYTE PTR [rsi+rbp*1],dh
  40d53f:	cmp    DWORD PTR [rsi],ebp
  40d541:	xor    esp,DWORD PTR [rax]
  40d543:	jo     40d576 <_head_lib64_libkernel32_a-0x3a8a>
  40d545:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d549:	jo     40d5b4 <_head_lib64_libkernel32_a-0x3a4c>
  40d54b:	gs sub eax,0x2e362e30
  40d551:	xor    ch,BYTE PTR [rcx]
  40d553:	and    BYTE PTR [rsi+rbp*1],dh
  40d556:	cmp    DWORD PTR [rsi],ebp
  40d558:	xor    eax,DWORD PTR [rax]
  40d55a:	add    BYTE PTR [rax],al
  40d55c:	add    BYTE PTR [rax],al
  40d55e:	add    BYTE PTR [rax],al
  40d560:	rex.RXB
  40d561:	rex.XB
  40d562:	rex.XB cmp spl,BYTE PTR [r8]
  40d565:	sub    BYTE PTR [rdi+0x65],al
  40d568:	outs   dx,BYTE PTR ds:[rsi]
  40d569:	je     40d5da <_head_lib64_libkernel32_a-0x3a26>
  40d56b:	outs   dx,DWORD PTR ds:[rsi]
  40d56c:	and    BYTE PTR [rsi+rbp*1],dh
  40d56f:	cmp    DWORD PTR [rsi],ebp
  40d571:	xor    esp,DWORD PTR [rax]
  40d573:	jo     40d5a6 <_head_lib64_libkernel32_a-0x3a5a>
  40d575:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d579:	jo     40d5e4 <_head_lib64_libkernel32_a-0x3a1c>
  40d57b:	gs sub eax,0x2e362e30
  40d581:	xor    ch,BYTE PTR [rcx]
  40d583:	and    BYTE PTR [rsi+rbp*1],dh
  40d586:	cmp    DWORD PTR [rsi],ebp
  40d588:	xor    eax,DWORD PTR [rax]
  40d58a:	add    BYTE PTR [rax],al
  40d58c:	add    BYTE PTR [rax],al
  40d58e:	add    BYTE PTR [rax],al
  40d590:	rex.RXB
  40d591:	rex.XB
  40d592:	rex.XB cmp spl,BYTE PTR [r8]
  40d595:	sub    BYTE PTR [rdi+0x65],al
  40d598:	outs   dx,BYTE PTR ds:[rsi]
  40d599:	je     40d60a <_head_lib64_libkernel32_a-0x39f6>
  40d59b:	outs   dx,DWORD PTR ds:[rsi]
  40d59c:	and    BYTE PTR [rsi+rbp*1],dh
  40d59f:	cmp    DWORD PTR [rsi],ebp
  40d5a1:	xor    esp,DWORD PTR [rax]
  40d5a3:	jo     40d5d6 <_head_lib64_libkernel32_a-0x3a2a>
  40d5a5:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d5a9:	jo     40d614 <_head_lib64_libkernel32_a-0x39ec>
  40d5ab:	gs sub eax,0x2e362e30
  40d5b1:	xor    ch,BYTE PTR [rcx]
  40d5b3:	and    BYTE PTR [rsi+rbp*1],dh
  40d5b6:	cmp    DWORD PTR [rsi],ebp
  40d5b8:	xor    eax,DWORD PTR [rax]
  40d5ba:	add    BYTE PTR [rax],al
  40d5bc:	add    BYTE PTR [rax],al
  40d5be:	add    BYTE PTR [rax],al
  40d5c0:	rex.RXB
  40d5c1:	rex.XB
  40d5c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d5c5:	sub    BYTE PTR [rdi+0x65],al
  40d5c8:	outs   dx,BYTE PTR ds:[rsi]
  40d5c9:	je     40d63a <_head_lib64_libkernel32_a-0x39c6>
  40d5cb:	outs   dx,DWORD PTR ds:[rsi]
  40d5cc:	and    BYTE PTR [rsi+rbp*1],dh
  40d5cf:	cmp    DWORD PTR [rsi],ebp
  40d5d1:	xor    esp,DWORD PTR [rax]
  40d5d3:	jo     40d606 <_head_lib64_libkernel32_a-0x39fa>
  40d5d5:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d5d9:	jo     40d644 <_head_lib64_libkernel32_a-0x39bc>
  40d5db:	gs sub eax,0x2e362e30
  40d5e1:	xor    ch,BYTE PTR [rcx]
  40d5e3:	and    BYTE PTR [rsi+rbp*1],dh
  40d5e6:	cmp    DWORD PTR [rsi],ebp
  40d5e8:	xor    eax,DWORD PTR [rax]
  40d5ea:	add    BYTE PTR [rax],al
  40d5ec:	add    BYTE PTR [rax],al
  40d5ee:	add    BYTE PTR [rax],al
  40d5f0:	rex.RXB
  40d5f1:	rex.XB
  40d5f2:	rex.XB cmp spl,BYTE PTR [r8]
  40d5f5:	sub    BYTE PTR [rdi+0x65],al
  40d5f8:	outs   dx,BYTE PTR ds:[rsi]
  40d5f9:	je     40d66a <_head_lib64_libkernel32_a-0x3996>
  40d5fb:	outs   dx,DWORD PTR ds:[rsi]
  40d5fc:	and    BYTE PTR [rsi+rbp*1],dh
  40d5ff:	cmp    DWORD PTR [rsi],ebp
  40d601:	xor    esp,DWORD PTR [rax]
  40d603:	jo     40d636 <_head_lib64_libkernel32_a-0x39ca>
  40d605:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d609:	jo     40d674 <_head_lib64_libkernel32_a-0x398c>
  40d60b:	gs sub eax,0x2e362e30
  40d611:	xor    ch,BYTE PTR [rcx]
  40d613:	and    BYTE PTR [rsi+rbp*1],dh
  40d616:	cmp    DWORD PTR [rsi],ebp
  40d618:	xor    eax,DWORD PTR [rax]
  40d61a:	add    BYTE PTR [rax],al
  40d61c:	add    BYTE PTR [rax],al
  40d61e:	add    BYTE PTR [rax],al
  40d620:	rex.RXB
  40d621:	rex.XB
  40d622:	rex.XB cmp spl,BYTE PTR [r8]
  40d625:	sub    BYTE PTR [rdi+0x65],al
  40d628:	outs   dx,BYTE PTR ds:[rsi]
  40d629:	je     40d69a <_head_lib64_libkernel32_a-0x3966>
  40d62b:	outs   dx,DWORD PTR ds:[rsi]
  40d62c:	and    BYTE PTR [rsi+rbp*1],dh
  40d62f:	cmp    DWORD PTR [rsi],ebp
  40d631:	xor    esp,DWORD PTR [rax]
  40d633:	jo     40d666 <_head_lib64_libkernel32_a-0x399a>
  40d635:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d639:	jo     40d6a4 <_head_lib64_libkernel32_a-0x395c>
  40d63b:	gs sub eax,0x2e362e30
  40d641:	xor    ch,BYTE PTR [rcx]
  40d643:	and    BYTE PTR [rsi+rbp*1],dh
  40d646:	cmp    DWORD PTR [rsi],ebp
  40d648:	xor    eax,DWORD PTR [rax]
  40d64a:	add    BYTE PTR [rax],al
  40d64c:	add    BYTE PTR [rax],al
  40d64e:	add    BYTE PTR [rax],al
  40d650:	rex.RXB
  40d651:	rex.XB
  40d652:	rex.XB cmp spl,BYTE PTR [r8]
  40d655:	sub    BYTE PTR [rdi+0x65],al
  40d658:	outs   dx,BYTE PTR ds:[rsi]
  40d659:	je     40d6ca <_head_lib64_libkernel32_a-0x3936>
  40d65b:	outs   dx,DWORD PTR ds:[rsi]
  40d65c:	and    BYTE PTR [rsi+rbp*1],dh
  40d65f:	cmp    DWORD PTR [rsi],ebp
  40d661:	xor    esp,DWORD PTR [rax]
  40d663:	jo     40d696 <_head_lib64_libkernel32_a-0x396a>
  40d665:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d669:	jo     40d6d4 <_head_lib64_libkernel32_a-0x392c>
  40d66b:	gs sub eax,0x2e362e30
  40d671:	xor    ch,BYTE PTR [rcx]
  40d673:	and    BYTE PTR [rsi+rbp*1],dh
  40d676:	cmp    DWORD PTR [rsi],ebp
  40d678:	xor    eax,DWORD PTR [rax]
  40d67a:	add    BYTE PTR [rax],al
  40d67c:	add    BYTE PTR [rax],al
  40d67e:	add    BYTE PTR [rax],al
  40d680:	rex.RXB
  40d681:	rex.XB
  40d682:	rex.XB cmp spl,BYTE PTR [r8]
  40d685:	sub    BYTE PTR [rdi+0x65],al
  40d688:	outs   dx,BYTE PTR ds:[rsi]
  40d689:	je     40d6fa <_head_lib64_libkernel32_a-0x3906>
  40d68b:	outs   dx,DWORD PTR ds:[rsi]
  40d68c:	and    BYTE PTR [rsi+rbp*1],dh
  40d68f:	cmp    DWORD PTR [rsi],ebp
  40d691:	xor    esp,DWORD PTR [rax]
  40d693:	jo     40d6c6 <_head_lib64_libkernel32_a-0x393a>
  40d695:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d699:	jo     40d704 <_head_lib64_libkernel32_a-0x38fc>
  40d69b:	gs sub eax,0x2e362e30
  40d6a1:	xor    ch,BYTE PTR [rcx]
  40d6a3:	and    BYTE PTR [rsi+rbp*1],dh
  40d6a6:	cmp    DWORD PTR [rsi],ebp
  40d6a8:	xor    eax,DWORD PTR [rax]
  40d6aa:	add    BYTE PTR [rax],al
  40d6ac:	add    BYTE PTR [rax],al
  40d6ae:	add    BYTE PTR [rax],al
  40d6b0:	rex.RXB
  40d6b1:	rex.XB
  40d6b2:	rex.XB cmp spl,BYTE PTR [r8]
  40d6b5:	sub    BYTE PTR [rdi+0x65],al
  40d6b8:	outs   dx,BYTE PTR ds:[rsi]
  40d6b9:	je     40d72a <_head_lib64_libkernel32_a-0x38d6>
  40d6bb:	outs   dx,DWORD PTR ds:[rsi]
  40d6bc:	and    BYTE PTR [rip+0x302e342e],dh        # 306f0af0 <libjpeg_8_dll_iname+0x302dddf0>
  40d6c2:	sub    eax,0x70203372
  40d6c7:	xor    DWORD PTR [rsi],ebp
  40d6c9:	xor    ebp,DWORD PTR [rax+riz*1]
  40d6cc:	jo     40d737 <_head_lib64_libkernel32_a-0x38c9>
  40d6ce:	gs sub eax,0x2e362e30
  40d6d4:	xor    eax,0x2e352029
  40d6d9:	xor    al,0x2e
  40d6db:	xor    BYTE PTR [rax],al
  40d6dd:	add    BYTE PTR [rax],al
  40d6df:	add    BYTE PTR [rdi+0x43],al
  40d6e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d6e5:	sub    BYTE PTR [rdi+0x65],al
  40d6e8:	outs   dx,BYTE PTR ds:[rsi]
  40d6e9:	je     40d75a <_head_lib64_libkernel32_a-0x38a6>
  40d6eb:	outs   dx,DWORD PTR ds:[rsi]
  40d6ec:	and    BYTE PTR [rsi+rbp*1],dh
  40d6ef:	cmp    DWORD PTR [rsi],ebp
  40d6f1:	xor    esp,DWORD PTR [rax]
  40d6f3:	jo     40d726 <_head_lib64_libkernel32_a-0x38da>
  40d6f5:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d6f9:	jo     40d764 <_head_lib64_libkernel32_a-0x389c>
  40d6fb:	gs sub eax,0x2e362e30
  40d701:	xor    ch,BYTE PTR [rcx]
  40d703:	and    BYTE PTR [rsi+rbp*1],dh
  40d706:	cmp    DWORD PTR [rsi],ebp
  40d708:	xor    eax,DWORD PTR [rax]
  40d70a:	add    BYTE PTR [rax],al
  40d70c:	add    BYTE PTR [rax],al
  40d70e:	add    BYTE PTR [rax],al
  40d710:	rex.RXB
  40d711:	rex.XB
  40d712:	rex.XB cmp spl,BYTE PTR [r8]
  40d715:	sub    BYTE PTR [rdi+0x65],al
  40d718:	outs   dx,BYTE PTR ds:[rsi]
  40d719:	je     40d78a <_head_lib64_libkernel32_a-0x3876>
  40d71b:	outs   dx,DWORD PTR ds:[rsi]
  40d71c:	and    BYTE PTR [rsi+rbp*1],dh
  40d71f:	cmp    DWORD PTR [rsi],ebp
  40d721:	xor    esp,DWORD PTR [rax]
  40d723:	jo     40d756 <_head_lib64_libkernel32_a-0x38aa>
  40d725:	xor    BYTE PTR cs:[rax+riz*1],ch
  40d729:	jo     40d794 <_head_lib64_libkernel32_a-0x386c>
  40d72b:	gs sub eax,0x2e362e30
  40d731:	xor    ch,BYTE PTR [rcx]
  40d733:	and    BYTE PTR [rsi+rbp*1],dh
  40d736:	cmp    DWORD PTR [rsi],ebp
  40d738:	xor    eax,DWORD PTR [rax]
  40d73a:	add    BYTE PTR [rax],al
  40d73c:	add    BYTE PTR [rax],al
  40d73e:	add    BYTE PTR [rax],al
  40d740:	rex.RXB
  40d741:	rex.XB
  40d742:	rex.XB cmp spl,BYTE PTR [r8]
  40d745:	sub    BYTE PTR [rdi+0x65],al
  40d748:	outs   dx,BYTE PTR ds:[rsi]
  40d749:	je     40d7ba <_head_lib64_libkernel32_a-0x3846>
  40d74b:	outs   dx,DWORD PTR ds:[rsi]
  40d74c:	and    BYTE PTR [rip+0x302e342e],dh        # 306f0b80 <libjpeg_8_dll_iname+0x302dde80>
  40d752:	sub    eax,0x70203372
  40d757:	xor    DWORD PTR [rsi],ebp
  40d759:	xor    ebp,DWORD PTR [rax+riz*1]
  40d75c:	jo     40d7c7 <_head_lib64_libkernel32_a-0x3839>
  40d75e:	gs sub eax,0x2e362e30
  40d764:	xor    eax,0x2e352029
  40d769:	xor    al,0x2e
  40d76b:	xor    BYTE PTR [rax],al
  40d76d:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000000040e000 <.pdata>:
  40e000:	add    BYTE PTR [rax],dl
  40e002:	add    BYTE PTR [rax],al
  40e004:	add    DWORD PTR [rax],edx
  40e006:	add    BYTE PTR [rax],al
  40e008:	add    al,dh
  40e00a:	add    BYTE PTR [rax],al
  40e00c:	adc    BYTE PTR [rax],dl
  40e00e:	add    BYTE PTR [rax],al
  40e010:	push   rcx
  40e011:	adc    DWORD PTR [rax],eax
  40e013:	add    BYTE PTR [rax+rsi*8],al
  40e016:	add    BYTE PTR [rax],al
  40e018:	(bad)  
  40e019:	adc    DWORD PTR [rax],eax
  40e01b:	add    BYTE PTR [rsi+0xc000011],ch
  40e021:	lock add BYTE PTR [rax],al
  40e024:	mov    al,0x11
  40e026:	add    BYTE PTR [rax],al
  40e028:	(bad)  
  40e029:	adc    al,0x0
  40e02b:	add    BYTE PTR [rax+rsi*8],dl
  40e02e:	add    BYTE PTR [rax],al
  40e030:	rcl    BYTE PTR [rax+rax*1],1
  40e033:	add    dl,dh
  40e035:	adc    al,0x0
  40e037:	add    BYTE PTR [rax],ch
  40e039:	lock add BYTE PTR [rax],al
  40e03c:	add    BYTE PTR [rip+0x15220000],dl        # 1562e042 <libjpeg_8_dll_iname+0x1521b342>
  40e042:	add    BYTE PTR [rax],al
  40e044:	rex.W
  40e045:	lock add BYTE PTR [rax],al
  40e048:	xor    BYTE PTR [rip+0x15360000],dl        # 1576e04e <libjpeg_8_dll_iname+0x1535b34e>
  40e04e:	add    BYTE PTR [rax],al
  40e050:	push   0x400000f0
  40e055:	adc    eax,0x159c0000
  40e05a:	add    BYTE PTR [rax],al
  40e05c:	jo     40e04e <_head_lib64_libkernel32_a-0x2fb2>
  40e05e:	add    BYTE PTR [rax],al
  40e060:	movabs al,ds:0x7c000015a6000015
  40e069:	lock add BYTE PTR [rax],al
  40e06c:	mov    al,0x15
  40e06e:	add    BYTE PTR [rax],al
  40e070:	pop    rax
  40e071:	(bad)  
  40e072:	add    BYTE PTR [rax],al
  40e074:	test   al,dh
  40e076:	add    BYTE PTR [rax],al
  40e078:	(bad)  
  40e079:	(bad)  
  40e07a:	add    BYTE PTR [rax],al
  40e07c:	xchg   esi,eax
  40e07d:	sbb    BYTE PTR [rax],al
  40e07f:	add    BYTE PTR [rax-0x5fffff10],bl
  40e085:	sbb    BYTE PTR [rax],al
  40e087:	add    ch,al
  40e089:	sbb    BYTE PTR [rax],al
  40e08b:	add    BYTE PTR [rax+rsi*8+0x18d00000],ah
  40e092:	add    BYTE PTR [rax],al
  40e094:	pop    rcx
  40e095:	sbb    DWORD PTR [rax],eax
  40e097:	add    BYTE PTR [rax+0x600000f0],dh
  40e09d:	sbb    DWORD PTR [rax],eax
  40e09f:	add    BYTE PTR [rax],al
  40e0a1:	sbb    eax,DWORD PTR [rax]
  40e0a3:	add    BYTE PTR [rax+rsi*8+0x1b000000],bh
  40e0aa:	add    BYTE PTR [rax],al
  40e0ac:	(bad)  
  40e0ad:	sbb    al,0x0
  40e0af:	add    al,dl
  40e0b1:	lock add BYTE PTR [rax],al
  40e0b4:	loopne 40e0d2 <_head_lib64_libkernel32_a-0x2f2e>
  40e0b6:	add    BYTE PTR [rax],al
  40e0b8:	(bad)  
  40e0b9:	(bad)  
  40e0ba:	add    BYTE PTR [rax],al
  40e0bc:	loopne 40e0ae <_head_lib64_libkernel32_a-0x2f52>
  40e0be:	add    BYTE PTR [rax],al
  40e0c0:	loopne 40e0e0 <_head_lib64_libkernel32_a-0x2f20>
  40e0c2:	add    BYTE PTR [rax],al
  40e0c4:	rex.WXB and BYTE PTR [r8],al
  40e0c7:	add    ah,dh
  40e0c9:	lock add BYTE PTR [rax],al
  40e0cc:	push   rax
  40e0cd:	and    BYTE PTR [rax],al
  40e0cf:	add    bl,bh
  40e0d1:	and    DWORD PTR [rax],eax
  40e0d3:	add    BYTE PTR [rcx+rsi*8],al
  40e0d6:	add    BYTE PTR [rax],al
  40e0d8:	add    BYTE PTR [rdx],ah
  40e0da:	add    BYTE PTR [rax],al
  40e0dc:	add    esp,DWORD PTR [rip+0xfffffffff1140000]        # fffffffff154e0e2 <libjpeg_8_dll_iname+0xfffffffff113b3e2>
  40e0e2:	add    BYTE PTR [rax],al
  40e0e4:	adc    BYTE PTR [rip+0x28200000],ah        # 2860e0ea <libjpeg_8_dll_iname+0x281fb3ea>
  40e0ea:	add    BYTE PTR [rax],al
  40e0ec:	sub    al,0xf1
  40e0ee:	add    BYTE PTR [rax],al
  40e0f0:	and    BYTE PTR [rax],ch
  40e0f2:	add    BYTE PTR [rax],al
  40e0f4:	sub    QWORD PTR [rax],r8
  40e0f7:	add    BYTE PTR [rcx+rsi*8],dh
  40e0fa:	add    BYTE PTR [rax],al
  40e0fc:	push   rax
  40e0fd:	sub    DWORD PTR [rax],eax
  40e0ff:	add    BYTE PTR [rdx+0x3800002c],bh
  40e105:	icebp  
  40e106:	add    BYTE PTR [rax],al
  40e108:	shr    BYTE PTR [rax+rax*1],0x0
  40e10c:	mov    dh,0x36
  40e10e:	add    BYTE PTR [rax],al
  40e110:	push   rax
  40e111:	icebp  
  40e112:	add    BYTE PTR [rax],al
  40e114:	shl    BYTE PTR [rsi],0x0
  40e117:	add    bh,cl
  40e119:	pop    rsp
  40e11a:	add    BYTE PTR [rax],al
  40e11c:	je     40e10f <_head_lib64_libkernel32_a-0x2ef1>
  40e11e:	add    BYTE PTR [rax],al
  40e120:	rcr    BYTE PTR [rax+rax*1+0x0],1
  40e124:	(bad)  
  40e125:	(bad)  
  40e126:	add    BYTE PTR [rax],al
  40e128:	mov    ecx,?
  40e12a:	add    BYTE PTR [rax],al
  40e12c:	rex (bad) 
  40e12e:	add    BYTE PTR [rax],al
  40e130:	or     esp,DWORD PTR [rbx+0x0]
  40e133:	add    BYTE PTR [rcx+rsi*8+0x63100000],ah
  40e13a:	add    BYTE PTR [rax],al
  40e13c:	cmp    ebp,DWORD PTR [rax+0x0]
  40e13f:	add    BYTE PTR [rcx+rsi*8+0x68400000],dh
  40e146:	add    BYTE PTR [rax],al
  40e148:	mov    ebp,0xd000006c
  40e14d:	icebp  
  40e14e:	add    BYTE PTR [rax],al
  40e150:	shr    BYTE PTR [rax+rax*1+0x0],0xea
  40e155:	ins    DWORD PTR es:[rdi],dx
  40e156:	add    BYTE PTR [rax],al
  40e158:	call   fffffffff040e24e <libjpeg_8_dll_iname+0xffffffffefffb54e>
  40e15d:	ins    DWORD PTR es:[rdi],dx
  40e15e:	add    BYTE PTR [rax],al
  40e160:	rex.R jle 40e163 <_head_lib64_libkernel32_a-0x2e9d>
  40e163:	add    al,bh
  40e165:	icebp  
  40e166:	add    BYTE PTR [rax],al
  40e168:	push   rax
  40e169:	jle    40e16b <_head_lib64_libkernel32_a-0x2e95>
  40e16b:	add    BYTE PTR [rbx],al
  40e16d:	jg     40e16f <_head_lib64_libkernel32_a-0x2e91>
  40e16f:	add    BYTE PTR [rdx+rsi*8],ah
  40e172:	add    BYTE PTR [rax],al
  40e174:	adc    BYTE PTR [rdi+0x0],bh
  40e177:	add    BYTE PTR [rcx+0x3400007f],bh
  40e17d:	repnz add BYTE PTR [rax],al
  40e180:	sar    BYTE PTR [rdi+0x0],0x0
  40e184:	(bad)  
  40e185:	test   DWORD PTR [rax],eax
  40e187:	add    BYTE PTR [rax-0xe],al
  40e18a:	add    BYTE PTR [rax],al
  40e18c:	mov    al,0x88
  40e18e:	add    BYTE PTR [rax],al
  40e190:	push   rdi
  40e191:	mov    DWORD PTR [rax],eax
  40e193:	add    BYTE PTR [rax-0xe],dl
  40e196:	add    BYTE PTR [rax],al
  40e198:	(bad)  
  40e199:	mov    DWORD PTR [rax],eax
  40e19b:	add    BYTE PTR [rcx-0x77],bh
  40e19e:	add    BYTE PTR [rax],al
  40e1a0:	pop    rax
  40e1a1:	repnz add BYTE PTR [rax],al
  40e1a4:	or     BYTE PTR [rcx-0x764b0000],0x0
  40e1ab:	add    BYTE PTR [rax-0xe],ah
  40e1ae:	add    BYTE PTR [rax],al
  40e1b0:	ror    BYTE PTR [rcx-0x75eb0000],0x0
  40e1b7:	add    BYTE PTR [rax-0xe],ch
  40e1ba:	add    BYTE PTR [rax],al
  40e1bc:	and    BYTE PTR [rdx-0x75c40000],cl
  40e1c2:	add    BYTE PTR [rax],al
  40e1c4:	je     40e1b8 <_head_lib64_libkernel32_a-0x2e48>
  40e1c6:	add    BYTE PTR [rax],al
  40e1c8:	mov    al,BYTE PTR [rax]
  40e1cb:	add    BYTE PTR [rdx-0x76],cl
  40e1ce:	add    BYTE PTR [rax],al
  40e1d0:	js     40e1c4 <_head_lib64_libkernel32_a-0x2e3c>
  40e1d2:	add    BYTE PTR [rax],al
  40e1d4:	push   rax
  40e1d5:	mov    al,BYTE PTR [rax]
  40e1d7:	add    BYTE PTR [rbx-0x76],dl
  40e1da:	add    BYTE PTR [rax],al
  40e1dc:	jl     40e1d0 <_head_lib64_libkernel32_a-0x2e30>
  40e1de:	add    BYTE PTR [rax],al
  40e1e0:	(bad)  
  40e1e1:	mov    al,BYTE PTR [rax]
  40e1e3:	add    BYTE PTR [rsi],dh
  40e1e5:	mov    eax,DWORD PTR [rax]
  40e1e7:	add    BYTE PTR [rax+0x400000f2],al
  40e1ed:	mov    eax,DWORD PTR [rax]
  40e1ef:	add    BYTE PTR [rbx],bh
  40e1f1:	mov    WORD PTR [rax],es
  40e1f3:	add    BYTE PTR [rax+0x400000f2],dl
  40e1f9:	mov    WORD PTR [rax],es
  40e1fb:	add    BYTE PTR [rdi-0x74],ch
  40e1fe:	add    BYTE PTR [rax],al
  40e200:	movabs al,ds:0xd900008c700000f2
  40e209:	mov    WORD PTR [rax],es
  40e20b:	add    BYTE PTR [rax-0x1fffff0e],ch
  40e211:	mov    WORD PTR [rax],es
  40e213:	add    bl,ah
  40e215:	mov    WORD PTR [rax],es
  40e217:	add    BYTE PTR [rdx+rsi*8-0x73100000],dh
  40e21e:	add    BYTE PTR [rax],al
  40e220:	xor    DWORD PTR [rbp-0xd480000],ecx
  40e226:	add    BYTE PTR [rax],al
  40e228:	rex lea eax,[rax]
  40e22b:	add    BYTE PTR [rbp+rcx*4+0x0],cl
  40e22f:	add    al,al
  40e231:	repnz add BYTE PTR [rax],al
  40e234:	push   rax
  40e235:	lea    eax,[rax]
  40e237:	add    BYTE PTR [rsi+rcx*4+0x0],cl
  40e23b:	add    ah,al
  40e23d:	repnz add BYTE PTR [rax],al
  40e240:	push   rax
  40e241:	mov    es,WORD PTR [rax]
  40e243:	add    BYTE PTR [rbx-0x72],dl
  40e246:	add    BYTE PTR [rax],al
  40e248:	fdivr  st(2),st
  40e24a:	add    BYTE PTR [rax],al
  40e24c:	(bad)  
  40e24d:	mov    es,WORD PTR [rax]
  40e24f:	add    BYTE PTR [rsi+rcx*4+0x0],ah
  40e253:	add    al,ah
  40e255:	repnz add BYTE PTR [rax],al
  40e258:	jo     40e1e8 <_head_lib64_libkernel32_a-0x2e18>
  40e25a:	add    BYTE PTR [rax],al
  40e25c:	je     40e1ec <_head_lib64_libkernel32_a-0x2e14>
  40e25e:	add    BYTE PTR [rax],al
  40e260:	in     al,0xf2
  40e262:	add    BYTE PTR [rax],al
  40e264:	or     BYTE PTR [rsi-0x711f0000],0x0
  40e26b:	add    al,ch
  40e26d:	repnz add BYTE PTR [rax],al
  40e270:	lock mov es,WORD PTR [rax]
  40e273:	add    BYTE PTR [rdx-0x70],dl
  40e276:	add    BYTE PTR [rax],al
  40e278:	hlt    
  40e279:	repnz add BYTE PTR [rax],al
  40e27c:	(bad)  
  40e27d:	nop
  40e27e:	add    BYTE PTR [rax],al
  40e280:	pop    rcx
  40e281:	xchg   ebx,eax
  40e282:	add    BYTE PTR [rax],al
  40e284:	or     bl,dh
  40e286:	add    BYTE PTR [rax],al
  40e288:	(bad)  
  40e289:	xchg   ebx,eax
  40e28a:	add    BYTE PTR [rax],al
  40e28c:	(bad)  
  40e28d:	xchg   ebp,eax
  40e28e:	add    BYTE PTR [rax],al
  40e290:	and    bl,dh
  40e292:	add    BYTE PTR [rax],al
  40e294:	adc    BYTE PTR [rbp-0x6a040000],dl
  40e29a:	add    BYTE PTR [rax],al
  40e29c:	sub    bl,dh
  40e29e:	add    BYTE PTR [rax],al
  40e2a0:	add    BYTE PTR [rsi-0x68480000],dl
  40e2a6:	add    BYTE PTR [rax],al
  40e2a8:	cmp    bl,dh
  40e2aa:	add    BYTE PTR [rax],al
  40e2ac:	rcl    BYTE PTR [rdi-0x67d30000],0x0
  40e2b3:	add    BYTE PTR [rax-0xd],al
  40e2b6:	add    BYTE PTR [rax],al
  40e2b8:	xor    BYTE PTR [rax-0x67510000],bl
  40e2be:	add    BYTE PTR [rax],al
  40e2c0:	push   rax
  40e2c1:	repz add BYTE PTR [rax],al
  40e2c4:	mov    al,0x98
  40e2c6:	add    BYTE PTR [rax],al
  40e2c8:	rex.WRXB cqo 
  40e2ca:	add    BYTE PTR [rax],al
  40e2cc:	pop    rsp
  40e2cd:	repz add BYTE PTR [rax],al
  40e2d0:	push   rax
  40e2d1:	cdq    
  40e2d2:	add    BYTE PTR [rax],al
  40e2d4:	sub    bl,BYTE PTR [rdx-0xc9c0000]
  40e2da:	add    BYTE PTR [rax],al
  40e2dc:	xor    BYTE PTR [rdx-0x65b10000],bl
  40e2e2:	add    BYTE PTR [rax],al
  40e2e4:	ins    BYTE PTR es:[rdi],dx
  40e2e5:	repz add BYTE PTR [rax],al
  40e2e8:	push   rax
  40e2e9:	(bad)  
  40e2ea:	add    BYTE PTR [rax],al
  40e2ec:	(bad)  
  40e2ed:	(bad)  
  40e2ee:	add    BYTE PTR [rax],al
  40e2f0:	jo     40e2e5 <_head_lib64_libkernel32_a-0x2d1b>
  40e2f2:	add    BYTE PTR [rax],al
  40e2f4:	jo     40e290 <_head_lib64_libkernel32_a-0x2d70>
  40e2f6:	add    BYTE PTR [rax],al
  40e2f8:	mov    ch,0x9a
  40e2fa:	add    BYTE PTR [rax],al
  40e2fc:	je     40e2f1 <_head_lib64_libkernel32_a-0x2d0f>
  40e2fe:	add    BYTE PTR [rax],al
  40e300:	rcr    BYTE PTR [rdx-0x64a20000],0x0
  40e307:	add    BYTE PTR [rax-0xd],bh
  40e30a:	add    BYTE PTR [rax],al
  40e30c:	(bad)  
  40e30d:	fwait
  40e30e:	add    BYTE PTR [rax],al
  40e310:	movabs ds:0xb00000f38400009b,eax
  40e319:	fwait
  40e31a:	add    BYTE PTR [rax],al
  40e31c:	jmp    40e2b9 <_head_lib64_libkernel32_a-0x2d47>
  40e31e:	add    BYTE PTR [rax],al
  40e320:	nop
  40e321:	repz add BYTE PTR [rax],al
  40e324:	lock fwait
  40e326:	add    BYTE PTR [rax],al
  40e328:	jle    40e2c6 <_head_lib64_libkernel32_a-0x2d3a>
  40e32a:	add    BYTE PTR [rax],al
  40e32c:	cwde   
  40e32d:	repz add BYTE PTR [rax],al
  40e330:	sbb    BYTE PTR [rax+rax*1+0x9cb800],0x0
  40e338:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e339:	repz add BYTE PTR [rax],al
  40e33c:	rcr    BYTE PTR [rax+rax*1+0x9d1500],0x0
  40e344:	mov    al,0xf3
  40e346:	add    BYTE PTR [rax],al
  40e348:	and    BYTE PTR [rbp-0x62320000],bl
  40e34e:	add    BYTE PTR [rax],al
  40e350:	mov    esp,0x100000f3
  40e355:	lahf   
  40e356:	add    BYTE PTR [rax],al
  40e358:	sbb    BYTE PTR [rdi-0xc340000],bl
  40e35e:	add    BYTE PTR [rax],al
  40e360:	and    BYTE PTR [rdi-0x60d50000],bl
  40e366:	add    BYTE PTR [rax],al
  40e368:	shl    bl,1
  40e36a:	add    BYTE PTR [rax],al
  40e36c:	add    BYTE PTR [rax-0x5fce0000],ah
  40e372:	add    BYTE PTR [rax],al
  40e374:	test   al,0xf0
  40e376:	add    BYTE PTR [rax],al
  40e378:	movabs al,ds:0xf3d40000a04a0000
	...

Disassembly of section .xdata:

000000000040f000 <.xdata>:
  40f000:	add    DWORD PTR [rax],eax
  40f002:	add    BYTE PTR [rax],al
  40f004:	add    DWORD PTR [rcx+rax*1],eax
  40f007:	add    BYTE PTR [rdx+rax*2],al
  40f00a:	add    BYTE PTR [rax],al
  40f00c:	add    DWORD PTR [rcx+rax*1],eax
  40f00f:	add    BYTE PTR [rdx+riz*2],al
  40f012:	add    BYTE PTR [rax],al
  40f014:	add    DWORD PTR [rdi],ecx
  40f016:	or     BYTE PTR [rax],al
  40f018:	lgdt   [rbx]
  40f01b:	add    BYTE PTR [rax],cl
  40f01d:	xor    BYTE PTR [rdi],al
  40f01f:	(bad)  
  40f020:	(bad)  
  40f021:	jo     40f028 <_head_lib64_libkernel32_a-0x1fd8>
  40f023:	push   rax
  40f024:	add    al,0xc0
  40f026:	add    dl,al
  40f028:	or     DWORD PTR [rcx+rax*1],eax
  40f02b:	add    BYTE PTR [rdx+rax*2],al
  40f02e:	add    BYTE PTR [rax],al
  40f030:	or     BYTE PTR [rdi+0x10000],bl
  40f036:	add    BYTE PTR [rax],al
  40f038:	(bad)  
  40f039:	adc    al,0x0
  40f03b:	add    ah,ch
  40f03d:	adc    al,0x0
  40f03f:	add    BYTE PTR [rax],al
  40f041:	xchg   esi,eax
  40f042:	add    BYTE PTR [rax],al
  40f044:	in     al,dx
  40f045:	adc    al,0x0
  40f047:	add    BYTE PTR [rcx],cl
  40f049:	add    al,0x1
  40f04b:	add    BYTE PTR [rdx+rax*2],al
  40f04e:	add    BYTE PTR [rax],al
  40f050:	or     BYTE PTR [rdi+0x10000],bl
  40f056:	add    BYTE PTR [rax],al
  40f058:	add    al,0x15
  40f05a:	add    BYTE PTR [rax],al
  40f05c:	sbb    al,0x15
  40f05e:	add    BYTE PTR [rax],al
  40f060:	add    BYTE PTR [rsi+0x151c0000],dl
  40f066:	add    BYTE PTR [rax],al
  40f068:	add    DWORD PTR [rdx+rax*1],eax
  40f06b:	add    eax,0x50010304
  40f070:	add    DWORD PTR [rax],ecx
  40f072:	add    eax,DWORD PTR [rip+0x3043208]        # 3452280 <libjpeg_8_dll_iname+0x303f580>
  40f078:	add    DWORD PTR [rax+0x0],edx
  40f07b:	add    BYTE PTR [rcx],al
  40f07d:	add    al,0x2
  40f07f:	add    eax,0x50010304
  40f084:	add    DWORD PTR [rdi+rax*1],ecx
  40f087:	add    BYTE PTR [rdx+riz*2],cl
  40f08a:	or     BYTE PTR [rax],dh
  40f08c:	(bad)  
  40f08d:	(bad)  
  40f08e:	(bad)  
  40f08f:	jo     40f096 <_head_lib64_libkernel32_a-0x1f6a>
  40f091:	push   rax
  40f092:	add    al,0xc0
  40f094:	add    dl,al
  40f096:	add    BYTE PTR [rax],al
  40f098:	add    DWORD PTR [rsi],eax
  40f09a:	add    eax,DWORD PTR [rax]
  40f09c:	(bad)  
  40f09d:	loop   40f0a1 <_head_lib64_libkernel32_a-0x1f5f>
  40f09f:	xor    BYTE PTR [rcx],al
  40f0a1:	(bad)  
  40f0a2:	add    BYTE PTR [rax],al
  40f0a4:	add    DWORD PTR [rax],eax
  40f0a6:	add    BYTE PTR [rax],al
  40f0a8:	add    DWORD PTR [rcx+rax*1],eax
  40f0ab:	add    BYTE PTR [rdx+rax*2],al
  40f0ae:	add    BYTE PTR [rax],al
  40f0b0:	add    DWORD PTR [rdi],eax
  40f0b2:	add    al,0x0
  40f0b4:	(bad)  
  40f0b5:	push   rdx
  40f0b6:	add    esi,DWORD PTR [rax]
  40f0b8:	add    ah,BYTE PTR [rax+0x1]
  40f0bb:	jo     40f0be <_head_lib64_libkernel32_a-0x1f42>
  40f0bd:	or     al,0x7
  40f0bf:	add    BYTE PTR [rdx+riz*2],cl
  40f0c2:	or     BYTE PTR [rax],dh
  40f0c4:	(bad)  
  40f0c5:	(bad)  
  40f0c6:	(bad)  
  40f0c7:	jo     40f0ce <_head_lib64_libkernel32_a-0x1f32>
  40f0c9:	push   rax
  40f0ca:	add    al,0xc0
  40f0cc:	add    dl,al
  40f0ce:	add    BYTE PTR [rax],al
  40f0d0:	add    DWORD PTR [rdx],ecx
  40f0d2:	(bad)  
  40f0d3:	add    BYTE PTR [rdx],cl
  40f0d5:	jb     40f0dd <_head_lib64_libkernel32_a-0x1f23>
  40f0d7:	xor    BYTE PTR [rip+0x3700460],al        # 3b0f53d <libjpeg_8_dll_iname+0x36fc83d>
  40f0dd:	push   rax
  40f0de:	add    al,al
  40f0e0:	add    DWORD PTR [rsi],ecx
  40f0e2:	or     BYTE PTR [rax],al
  40f0e4:	(bad)  
  40f0e5:	jb     40f0f1 <_head_lib64_libkernel32_a-0x1f0f>
  40f0e7:	xor    BYTE PTR [rcx],cl
  40f0e9:	(bad)  
  40f0ea:	or     BYTE PTR [rax+0x7],dh
  40f0ed:	push   rax
  40f0ee:	(bad)  
  40f0ef:	rol    BYTE PTR [rax+rdx*8],0x2
  40f0f3:	loopne 40f0f6 <_head_lib64_libkernel32_a-0x1f0a>
  40f0f5:	or     al,BYTE PTR [rsi]
  40f0f7:	add    BYTE PTR [rdx],cl
  40f0f9:	jb     40f101 <_head_lib64_libkernel32_a-0x1eff>
  40f0fb:	xor    BYTE PTR [rip+0x3700460],al        # 3b0f561 <libjpeg_8_dll_iname+0x36fc861>
  40f101:	push   rax
  40f102:	add    al,al
  40f104:	add    DWORD PTR [rsi],eax
  40f106:	add    eax,0x5300600
  40f10b:	(bad)  
  40f10c:	add    al,0x70
  40f10e:	add    edx,DWORD PTR [rax+0x2]
  40f111:	rol    BYTE PTR [rax],0x0
  40f114:	add    DWORD PTR [rbx],edx
  40f116:	or     al,BYTE PTR [rax]
  40f118:	adc    eax,DWORD PTR [rcx]
  40f11a:	(bad)  
  40f11b:	add    BYTE PTR [rax+rsi*1],cl
  40f11e:	or     esp,DWORD PTR [rax+0xa]
  40f121:	jo     40f12c <_head_lib64_libkernel32_a-0x1ed4>
  40f123:	push   rax
  40f124:	or     al,al
  40f126:	(bad)  
  40f127:	rol    BYTE PTR [rax+riz*8],1
  40f12a:	add    dh,al
  40f12c:	add    DWORD PTR [rip+0x32050002],eax        # 3245f134 <libjpeg_8_dll_iname+0x3204c434>
  40f132:	add    DWORD PTR [rax],esi
  40f134:	add    DWORD PTR [rax],eax
  40f136:	add    BYTE PTR [rax],al
  40f138:	add    DWORD PTR [rax],edx
  40f13a:	or     DWORD PTR [rax],eax
  40f13c:	adc    BYTE PTR [rdx+0xc],ah
  40f13f:	xor    BYTE PTR [rbx],cl
  40f141:	(bad)  
  40f142:	or     dh,BYTE PTR [rax+0x9]
  40f145:	push   rax
  40f146:	or     al,al
  40f148:	(bad)  
  40f149:	rol    BYTE PTR [rax+riz*8],1
  40f14c:	add    dh,al
  40f14e:	add    BYTE PTR [rax],al
  40f150:	add    DWORD PTR [rax+rdx*1],ebp
  40f153:	add    BYTE PTR [rax+rcx*4],ch
  40f156:	pushf  
  40f157:	add    BYTE PTR [rbx],ah
  40f159:	js     40f0f6 <_head_lib64_libkernel32_a-0x1f0a>
  40f15b:	add    BYTE PTR [rbx],bl
  40f15d:	push   0x113009a
  40f162:	cmp    eax,DWORD PTR [rcx]
  40f164:	or     al,0x30
  40f166:	or     esp,DWORD PTR [rax+0xa]
  40f169:	jo     40f174 <_head_lib64_libkernel32_a-0x1e8c>
  40f16b:	push   rax
  40f16c:	or     al,al
  40f16e:	(bad)  
  40f16f:	rol    BYTE PTR [rax+riz*8],1
  40f172:	add    dh,al
  40f174:	add    DWORD PTR [rbx],edx
  40f176:	or     al,BYTE PTR [rax]
  40f178:	adc    eax,DWORD PTR [rcx]
  40f17a:	(bad)  
  40f17b:	add    BYTE PTR [rax+rsi*1],cl
  40f17e:	or     esp,DWORD PTR [rax+0xa]
  40f181:	jo     40f18c <_head_lib64_libkernel32_a-0x1e74>
  40f183:	push   rax
  40f184:	or     al,al
  40f186:	(bad)  
  40f187:	rol    BYTE PTR [rax+riz*8],1
  40f18a:	add    dh,al
  40f18c:	add    DWORD PTR [rbx],edx
  40f18e:	or     al,BYTE PTR [rax]
  40f190:	adc    eax,DWORD PTR [rcx]
  40f192:	rex.WB add BYTE PTR [r8+rsi*1],cl
  40f196:	or     esp,DWORD PTR [rax+0xa]
  40f199:	jo     40f1a4 <_head_lib64_libkernel32_a-0x1e5c>
  40f19b:	push   rax
  40f19c:	or     al,al
  40f19e:	(bad)  
  40f19f:	rol    BYTE PTR [rax+riz*8],1
  40f1a2:	add    dh,al
  40f1a4:	add    DWORD PTR [rdx],ecx
  40f1a6:	(bad)  
  40f1a7:	add    BYTE PTR [rdx],cl
  40f1a9:	xor    al,BYTE PTR [rsi]
  40f1ab:	xor    BYTE PTR [rip+0x3700460],al        # 3b0f611 <libjpeg_8_dll_iname+0x36fc911>
  40f1b1:	push   rax
  40f1b2:	add    al,al
  40f1b4:	add    DWORD PTR [rbx],ebx
  40f1b6:	or     al,0x0
  40f1b8:	sbb    ebp,DWORD PTR [rax+0x9]
  40f1bb:	add    BYTE PTR [rbx],dl
  40f1bd:	add    DWORD PTR [rip+0xb300c00],edx        # b70fdc3 <libjpeg_8_dll_iname+0xb2fd0c3>
  40f1c3:	(bad)  
  40f1c4:	or     dh,BYTE PTR [rax+0x9]
  40f1c7:	push   rax
  40f1c8:	or     al,al
  40f1ca:	(bad)  
  40f1cb:	rol    BYTE PTR [rax+riz*8],1
  40f1ce:	add    dh,al
  40f1d0:	add    DWORD PTR [rbx],edx
  40f1d2:	or     al,BYTE PTR [rax]
  40f1d4:	adc    eax,DWORD PTR [rcx]
  40f1d6:	jns    40f1d8 <_head_lib64_libkernel32_a-0x1e28>
  40f1d8:	or     al,0x30
  40f1da:	or     esp,DWORD PTR [rax+0xa]
  40f1dd:	jo     40f1e8 <_head_lib64_libkernel32_a-0x1e18>
  40f1df:	push   rax
  40f1e0:	or     al,al
  40f1e2:	(bad)  
  40f1e3:	rol    BYTE PTR [rax+riz*8],1
  40f1e6:	add    dh,al
  40f1e8:	add    DWORD PTR [rax],ecx
  40f1ea:	add    eax,0x4820800
  40f1ef:	xor    BYTE PTR [rbx],al
  40f1f1:	(bad)  
  40f1f2:	add    dh,BYTE PTR [rax+0x1]
  40f1f5:	push   rax
  40f1f6:	add    BYTE PTR [rax],al
  40f1f8:	add    DWORD PTR [rsi],edi
  40f1fa:	adc    al,0x0
  40f1fc:	ds test al,0x12
  40f1ff:	add    BYTE PTR [rip+0x2c001198],dh        # 2c41039d <libjpeg_8_dll_iname+0x2bffd69d>
  40f205:	mov    BYTE PTR [rax],dl
  40f207:	add    BYTE PTR [rbx],ah
  40f209:	js     40f21a <_head_lib64_libkernel32_a-0x1de6>
  40f20b:	add    BYTE PTR [rbx],bl
  40f20d:	push   0x113000e
  40f212:	(bad)  
  40f213:	add    BYTE PTR [rax+rsi*1],cl
  40f216:	or     esp,DWORD PTR [rax+0xa]
  40f219:	jo     40f224 <_head_lib64_libkernel32_a-0x1ddc>
  40f21b:	push   rax
  40f21c:	or     al,al
  40f21e:	(bad)  
  40f21f:	rol    BYTE PTR [rax+riz*8],1
  40f222:	add    dh,al
  40f224:	add    DWORD PTR [rdx],ecx
  40f226:	(bad)  
  40f227:	add    BYTE PTR [rdx],cl
  40f229:	xor    al,BYTE PTR [rsi]
  40f22b:	xor    BYTE PTR [rip+0x3700460],al        # 3b0f691 <libjpeg_8_dll_iname+0x36fc991>
  40f231:	push   rax
  40f232:	add    al,al
  40f234:	add    DWORD PTR [rdi],eax
  40f236:	add    al,0x0
  40f238:	(bad)  
  40f239:	xor    al,BYTE PTR [rbx]
  40f23b:	xor    BYTE PTR [rdx],al
  40f23d:	(bad)  
  40f23e:	add    DWORD PTR [rax+0x1],esi
  40f241:	or     al,BYTE PTR [rsi]
  40f243:	add    BYTE PTR [rdx],cl
  40f245:	rol    BYTE PTR [rsi],cl
  40f247:	xor    BYTE PTR [rip+0x3700460],al        # 3b0f6ad <libjpeg_8_dll_iname+0x36fc9ad>
  40f24d:	push   rax
  40f24e:	add    al,al
  40f250:	add    DWORD PTR [rip+0x52050002],eax        # 5245f258 <libjpeg_8_dll_iname+0x5204c558>
  40f256:	add    DWORD PTR [rax],esi
  40f258:	add    DWORD PTR [rcx+rax*1],eax
  40f25b:	add    BYTE PTR [rdx+rax*2],al
  40f25e:	add    BYTE PTR [rax],al
  40f260:	add    DWORD PTR [rcx+rax*1],eax
  40f263:	add    BYTE PTR [rdx+rax*2],al
  40f266:	add    BYTE PTR [rax],al
  40f268:	add    DWORD PTR [rsi],eax
  40f26a:	add    eax,DWORD PTR [rax]
  40f26c:	(bad)  
  40f26d:	rex.X add sil,BYTE PTR [rax]
  40f270:	add    DWORD PTR [rax+0x0],esp
  40f273:	add    BYTE PTR [rcx],al
  40f275:	add    BYTE PTR [rax],al
  40f277:	add    BYTE PTR [rcx],al
  40f279:	add    BYTE PTR [rax],al
  40f27b:	add    BYTE PTR [rcx],al
  40f27d:	add    BYTE PTR [rax],al
  40f27f:	add    BYTE PTR [rcx],al
  40f281:	or     al,BYTE PTR [rsi]
  40f283:	add    BYTE PTR [rdx],cl
  40f285:	jb     40f28d <_head_lib64_libkernel32_a-0x1d73>
  40f287:	xor    BYTE PTR [rip+0x3700460],al        # 3b0f6ed <libjpeg_8_dll_iname+0x36fc9ed>
  40f28d:	push   rax
  40f28e:	add    al,al
  40f290:	add    DWORD PTR [rdx],ecx
  40f292:	add    eax,0x6d20a05
  40f297:	add    eax,DWORD PTR [rbx]
  40f299:	xor    BYTE PTR [rdx],al
  40f29b:	(bad)  
  40f29c:	add    DWORD PTR [rax+0x0],edx
  40f29f:	add    BYTE PTR [rcx],al
  40f2a1:	add    al,0x1
  40f2a3:	add    BYTE PTR [rdx+rax*2],al
  40f2a6:	add    BYTE PTR [rax],al
  40f2a8:	add    DWORD PTR [rsi],eax
  40f2aa:	add    eax,DWORD PTR [rax]
  40f2ac:	(bad)  
  40f2ad:	rex.X add sil,BYTE PTR [rax]
  40f2b0:	add    DWORD PTR [rax+0x0],esp
  40f2b3:	add    BYTE PTR [rcx],al
  40f2b5:	add    BYTE PTR [rax],al
  40f2b7:	add    BYTE PTR [rcx],al
  40f2b9:	add    al,0x1
  40f2bb:	add    BYTE PTR [rdx+riz*4],al
  40f2be:	add    BYTE PTR [rax],al
  40f2c0:	add    DWORD PTR [rax],eax
  40f2c2:	add    BYTE PTR [rax],al
  40f2c4:	add    DWORD PTR [rsi],edx
  40f2c6:	or     DWORD PTR [rax],eax
  40f2c8:	(bad)  
  40f2c9:	mov    BYTE PTR [rsi],al
  40f2cb:	add    BYTE PTR [rax],dl
  40f2cd:	js     40f2d4 <_head_lib64_libkernel32_a-0x1d2c>
  40f2cf:	add    BYTE PTR [rbx],cl
  40f2d1:	push   0xffffffffe2060004
  40f2d6:	add    dh,BYTE PTR [rax]
  40f2d8:	add    DWORD PTR [rax+0x0],esp
  40f2db:	add    BYTE PTR [rcx],al
  40f2dd:	add    BYTE PTR [rax],al
  40f2df:	add    BYTE PTR [rcx],al
  40f2e1:	add    BYTE PTR [rax],al
  40f2e3:	add    BYTE PTR [rcx],al
  40f2e5:	add    BYTE PTR [rax],al
  40f2e7:	add    BYTE PTR [rcx],al
  40f2e9:	(bad)  
  40f2ea:	add    eax,DWORD PTR [rax]
  40f2ec:	(bad)  
  40f2ed:	(bad)  
  40f2ef:	xor    BYTE PTR [rcx],al
  40f2f1:	(bad)  
  40f2f2:	add    BYTE PTR [rax],al
  40f2f4:	add    DWORD PTR [rdi+rax*1],ecx
  40f2f7:	add    BYTE PTR [rdx+riz*4],cl
  40f2fa:	or     BYTE PTR [rax],dh
  40f2fc:	(bad)  
  40f2fd:	(bad)  
  40f2fe:	(bad)  
  40f2ff:	jo     40f306 <_head_lib64_libkernel32_a-0x1cfa>
  40f301:	push   rax
  40f302:	add    al,0xc0
  40f304:	add    dl,al
  40f306:	add    BYTE PTR [rax],al
  40f308:	add    DWORD PTR [rcx],edx
  40f30a:	or     DWORD PTR [rip+0x30db211],eax        # 34ea521 <libjpeg_8_dll_iname+0x30d7821>
  40f310:	or     dh,BYTE PTR [rax]
  40f312:	or     DWORD PTR [rax+0x8],esp
  40f315:	jo     40f31e <_head_lib64_libkernel32_a-0x1ce2>
  40f317:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 220f6ee <libjpeg_8_dll_iname+0x1dfc9ee>
  40f31e:	add    BYTE PTR [rax],al
  40f320:	add    DWORD PTR [rcx+rax*1],eax
  40f323:	add    BYTE PTR [rdx+rax*2],al
  40f326:	add    BYTE PTR [rax],al
  40f328:	add    DWORD PTR [rdx],ecx
  40f32a:	(bad)  
  40f32b:	add    BYTE PTR [rdx],cl
  40f32d:	xor    al,BYTE PTR [rsi]
  40f32f:	xor    BYTE PTR [rip+0x3700460],al        # 3b0f795 <libjpeg_8_dll_iname+0x36fca95>
  40f335:	push   rax
  40f336:	add    al,al
  40f338:	add    DWORD PTR [rip+0x32050002],eax        # 3245f340 <libjpeg_8_dll_iname+0x3204c640>
  40f33e:	add    DWORD PTR [rax],esi
  40f340:	add    DWORD PTR [rax],ecx
  40f342:	add    eax,0x4420800
  40f347:	xor    BYTE PTR [rbx],al
  40f349:	(bad)  
  40f34a:	add    dh,BYTE PTR [rax+0x1]
  40f34d:	push   rax
  40f34e:	add    BYTE PTR [rax],al
  40f350:	add    DWORD PTR [rdi],eax
  40f352:	add    al,0x0
  40f354:	(bad)  
  40f355:	xor    al,BYTE PTR [rbx]
  40f357:	xor    BYTE PTR [rdx],al
  40f359:	(bad)  
  40f35a:	add    DWORD PTR [rax+0x1],esi
  40f35d:	add    eax,0x32050002
  40f362:	add    DWORD PTR [rax],esi
  40f364:	add    DWORD PTR [rip+0x32050002],eax        # 3245f36c <libjpeg_8_dll_iname+0x3204c66c>
  40f36a:	add    DWORD PTR [rax],esi
  40f36c:	add    DWORD PTR [rax],eax
  40f36e:	add    BYTE PTR [rax],al
  40f370:	add    DWORD PTR [rax],eax
  40f372:	add    BYTE PTR [rax],al
  40f374:	add    DWORD PTR [rax],eax
  40f376:	add    BYTE PTR [rax],al
  40f378:	add    DWORD PTR [rdi],eax
  40f37a:	add    al,0x0
  40f37c:	(bad)  
  40f37d:	xor    al,BYTE PTR [rbx]
  40f37f:	xor    BYTE PTR [rdx],al
  40f381:	(bad)  
  40f382:	add    DWORD PTR [rax+0x1],esi
  40f385:	(bad)  
  40f386:	add    eax,DWORD PTR [rax]
  40f388:	(bad)  
  40f389:	rex.X add sil,BYTE PTR [rax]
  40f38c:	add    DWORD PTR [rax+0x0],esp
  40f38f:	add    BYTE PTR [rcx],al
  40f391:	add    eax,0x32050002
  40f396:	add    DWORD PTR [rax],esi
  40f398:	add    DWORD PTR [rdi],eax
  40f39a:	add    al,0x0
  40f39c:	(bad)  
  40f39d:	xor    al,BYTE PTR [rbx]
  40f39f:	xor    BYTE PTR [rdx],al
  40f3a1:	(bad)  
  40f3a2:	add    DWORD PTR [rax+0x1],esi
  40f3a5:	(bad)  
  40f3a6:	add    eax,DWORD PTR [rax]
  40f3a8:	(bad)  
  40f3a9:	rex.X add sil,BYTE PTR [rax]
  40f3ac:	add    DWORD PTR [rax+0x0],esp
  40f3af:	add    BYTE PTR [rcx],al
  40f3b1:	(bad)  
  40f3b2:	add    eax,DWORD PTR [rax]
  40f3b4:	(bad)  
  40f3b5:	rex.X add sil,BYTE PTR [rax]
  40f3b8:	add    DWORD PTR [rax+0x0],esp
  40f3bb:	add    BYTE PTR [rcx],al
  40f3bd:	or     BYTE PTR [rip+0x4420800],al        # 482fbc3 <libjpeg_8_dll_iname+0x441cec3>
  40f3c3:	xor    BYTE PTR [rbx],al
  40f3c5:	(bad)  
  40f3c6:	add    dh,BYTE PTR [rax+0x1]
  40f3c9:	push   rax
  40f3ca:	add    BYTE PTR [rax],al
  40f3cc:	add    DWORD PTR [rax],eax
  40f3ce:	add    BYTE PTR [rax],al
  40f3d0:	add    DWORD PTR [rax],eax
  40f3d2:	add    BYTE PTR [rax],al
  40f3d4:	add    DWORD PTR [rdx+rax*1],eax
  40f3d7:	add    eax,0x50010304

Disassembly of section .bss:

0000000000410000 <.bss>:
	...

Disassembly of section .idata:

0000000000411000 <_head_lib64_libkernel32_a>:
  411000:	enter  0x110,0x0
	...
  41100c:	sbb    al,0x2a
  41100e:	add    DWORD PTR [rax],eax
  411010:	js     411028 <_head_libgimp_2_0_0_dll>
  411012:	add    DWORD PTR [rax],eax

0000000000411014 <_head_lib64_libmsvcrt_a>:
  411014:	cwde   
  411015:	adc    DWORD PTR [rcx],eax
	...
  41101f:	add    al,al
  411021:	sub    al,BYTE PTR [rcx]
  411023:	add    BYTE PTR [rax+0x17],cl
  411026:	add    DWORD PTR [rax],eax

0000000000411028 <_head_libgimp_2_0_0_dll>:
  411028:	enter  0x112,0x0
	...
  411034:	cwde   
  411035:	sub    eax,DWORD PTR [rcx]
  411037:	add    BYTE PTR [rax+0x18],bh
  41103a:	add    DWORD PTR [rax],eax

000000000041103c <_head_libgimpbase_2_0_0_dll>:
  41103c:	push   0x114
  411041:	add    BYTE PTR [rax],al
  411043:	add    BYTE PTR [rax],al
  411045:	add    BYTE PTR [rax],al
  411047:	add    al,al
  411049:	sub    eax,DWORD PTR [rcx]
  41104b:	add    BYTE PTR [rax],bl
  41104d:	sbb    al,BYTE PTR [rcx]
	...

0000000000411050 <_head_libgimpcolor_2_0_0_dll>:
  411050:	cwde   
  411051:	adc    al,0x1
	...
  41105b:	add    ah,dh
  41105d:	sub    eax,DWORD PTR [rcx]
  41105f:	add    BYTE PTR [rax+0x1a],cl
  411062:	add    DWORD PTR [rax],eax

0000000000411064 <_head_libexif_12_dll>:
  411064:	fcom   DWORD PTR [rcx+rax*1]
	...
  41106f:	add    BYTE PTR [rax],ah
  411071:	sub    al,0x1
  411073:	add    BYTE PTR [rax+0x800011a],cl

0000000000411078 <_head_libglib_2_0_0_dll>:
  411078:	or     BYTE PTR [rip+0x1],dl        # 41107f <_head_libglib_2_0_0_dll+0x7>
  41107e:	add    BYTE PTR [rax],al
  411080:	add    BYTE PTR [rax],al
  411082:	add    BYTE PTR [rax],al
  411084:	lods   al,BYTE PTR ds:[rsi]
  411085:	sub    al,0x1
  411087:	add    BYTE PTR [rax+0x800011a],bh

000000000041108c <_head_libintl_8_dll>:
  41108c:	or     BYTE PTR [rsi],dl
  41108e:	add    DWORD PTR [rax],eax
	...
  411098:	shr    BYTE PTR [rcx+rax*1],1
  41109b:	add    BYTE PTR [rax+0x3000011b],bh

00000000004110a0 <_head_libjpeg_8_dll>:
  4110a0:	xor    BYTE PTR [rsi],dl
  4110a2:	add    DWORD PTR [rax],eax
	...
  4110ac:	add    BYTE PTR [rip+0x1be00001],ch        # 1c2110b3 <libjpeg_8_dll_iname+0x1bdfe3b3>
  4110b2:	add    DWORD PTR [rax],eax
	...
  4110c8:	sub    BYTE PTR [rcx+rax*1],bl
  4110cb:	add    BYTE PTR [rax],al
  4110cd:	add    BYTE PTR [rax],al
  4110cf:	add    BYTE PTR [rax+0x1c],al
  4110d2:	add    DWORD PTR [rax],eax
  4110d4:	add    BYTE PTR [rax],al
  4110d6:	add    BYTE PTR [rax],al
  4110d8:	pop    rax
  4110d9:	sbb    al,0x1
  4110db:	add    BYTE PTR [rax],al
  4110dd:	add    BYTE PTR [rax],al
  4110df:	add    BYTE PTR [rsp+rbx*1+0x1],ch
  4110e3:	add    BYTE PTR [rax],al
  4110e5:	add    BYTE PTR [rax],al
  4110e7:	add    BYTE PTR [rdx+0x11c],al
  4110ed:	add    BYTE PTR [rax],al
  4110ef:	add    BYTE PTR [rax+0x11c],bl
  4110f5:	add    BYTE PTR [rax],al
  4110f7:	add    BYTE PTR [rax+0x11c],ch
  4110fd:	add    BYTE PTR [rax],al
  4110ff:	add    BYTE PTR [rsp+rbx*1+0x1],bh
  411106:	add    BYTE PTR [rax],al
  411108:	(bad)  
  411109:	sbb    al,0x1
  41110b:	add    BYTE PTR [rax],al
  41110d:	add    BYTE PTR [rax],al
  41110f:	add    al,ah
  411111:	sbb    al,0x1
  411113:	add    BYTE PTR [rax],al
  411115:	add    BYTE PTR [rax],al
  411117:	add    dl,bh
  411119:	sbb    al,0x1
  41111b:	add    BYTE PTR [rax],al
  41111d:	add    BYTE PTR [rax],al
  41111f:	add    BYTE PTR [rdx],cl
  411121:	sbb    eax,0x1
  411126:	add    BYTE PTR [rax],al
  411128:	es sbb eax,0x1
  41112e:	add    BYTE PTR [rax],al
  411130:	ds sbb eax,0x1
  411136:	add    BYTE PTR [rax],al
  411138:	pop    rax
  411139:	sbb    eax,0x1
  41113e:	add    BYTE PTR [rax],al
  411140:	outs   dx,BYTE PTR ds:[rsi]
  411141:	sbb    eax,0x1
  411146:	add    BYTE PTR [rax],al
  411148:	(bad)  
  411149:	sbb    eax,0x1
  41114e:	add    BYTE PTR [rax],al
  411150:	pushf  
  411151:	sbb    eax,0x1
  411156:	add    BYTE PTR [rax],al
  411158:	mov    al,0x1d
  41115a:	add    DWORD PTR [rax],eax
  41115c:	add    BYTE PTR [rax],al
  41115e:	add    BYTE PTR [rax],al
  411160:	(bad)  
  411161:	sbb    eax,0x1
  411166:	add    BYTE PTR [rax],al
  411168:	(bad)  
  411169:	sbb    eax,0x1
  41116e:	add    BYTE PTR [rax],al
  411170:	(bad)  
  411171:	sbb    eax,0x1
  411176:	add    BYTE PTR [rax],al
  411178:	clc    
  411179:	sbb    eax,0x1
  41117e:	add    BYTE PTR [rax],al
  411180:	adc    al,0x1e
  411182:	add    DWORD PTR [rax],eax
  411184:	add    BYTE PTR [rax],al
  411186:	add    BYTE PTR [rax],al
  411188:	es (bad) 
  41118a:	add    DWORD PTR [rax],eax
	...
  411198:	ss (bad) 
  41119a:	add    DWORD PTR [rax],eax
  41119c:	add    BYTE PTR [rax],al
  41119e:	add    BYTE PTR [rax],al
  4111a0:	rex.WRX (bad) 
  4111a2:	add    DWORD PTR [rax],eax
  4111a4:	add    BYTE PTR [rax],al
  4111a6:	add    BYTE PTR [rax],al
  4111a8:	pop    rax
  4111a9:	(bad)  
  4111aa:	add    DWORD PTR [rax],eax
  4111ac:	add    BYTE PTR [rax],al
  4111ae:	add    BYTE PTR [rax],al
  4111b0:	(bad)  
  4111b1:	(bad)  
  4111b2:	add    DWORD PTR [rax],eax
  4111b4:	add    BYTE PTR [rax],al
  4111b6:	add    BYTE PTR [rax],al
  4111b8:	jo     4111d8 <_head_libjpeg_8_dll+0x138>
  4111ba:	add    DWORD PTR [rax],eax
  4111bc:	add    BYTE PTR [rax],al
  4111be:	add    BYTE PTR [rax],al
  4111c0:	sbb    BYTE PTR [rsi],0x1
  4111c3:	add    BYTE PTR [rax],al
  4111c5:	add    BYTE PTR [rax],al
  4111c7:	add    BYTE PTR [rsi+rbx*1+0x1],cl
  4111ce:	add    BYTE PTR [rax],al
  4111d0:	(bad)  
  4111d1:	(bad)  
  4111d2:	add    DWORD PTR [rax],eax
  4111d4:	add    BYTE PTR [rax],al
  4111d6:	add    BYTE PTR [rax],al
  4111d8:	stos   BYTE PTR es:[rdi],al
  4111d9:	(bad)  
  4111da:	add    DWORD PTR [rax],eax
  4111dc:	add    BYTE PTR [rax],al
  4111de:	add    BYTE PTR [rax],al
  4111e0:	mov    esp,0x11e
  4111e5:	add    BYTE PTR [rax],al
  4111e7:	add    al,dl
  4111e9:	(bad)  
  4111ea:	add    DWORD PTR [rax],eax
  4111ec:	add    BYTE PTR [rax],al
  4111ee:	add    BYTE PTR [rax],al
  4111f0:	ficomp DWORD PTR [rsi]
  4111f2:	add    DWORD PTR [rax],eax
  4111f4:	add    BYTE PTR [rax],al
  4111f6:	add    BYTE PTR [rax],al
  4111f8:	call   41131b <_head_libjpeg_8_dll+0x27b>
  4111fd:	add    BYTE PTR [rax],al
  4111ff:	add    dl,dh
  411201:	(bad)  
  411202:	add    DWORD PTR [rax],eax
  411204:	add    BYTE PTR [rax],al
  411206:	add    BYTE PTR [rax],al
  411208:	cld    
  411209:	(bad)  
  41120a:	add    DWORD PTR [rax],eax
  41120c:	add    BYTE PTR [rax],al
  41120e:	add    BYTE PTR [rax],al
  411210:	(bad)  
  411211:	(bad)  
  411212:	add    DWORD PTR [rax],eax
  411214:	add    BYTE PTR [rax],al
  411216:	add    BYTE PTR [rax],al
  411218:	adc    bl,BYTE PTR [rdi]
  41121a:	add    DWORD PTR [rax],eax
  41121c:	add    BYTE PTR [rax],al
  41121e:	add    BYTE PTR [rax],al
  411220:	sbb    bl,BYTE PTR [rdi]
  411222:	add    DWORD PTR [rax],eax
  411224:	add    BYTE PTR [rax],al
  411226:	add    BYTE PTR [rax],al
  411228:	and    al,0x1f
  41122a:	add    DWORD PTR [rax],eax
  41122c:	add    BYTE PTR [rax],al
  41122e:	add    BYTE PTR [rax],al
  411230:	cs (bad) 
  411232:	add    DWORD PTR [rax],eax
  411234:	add    BYTE PTR [rax],al
  411236:	add    BYTE PTR [rax],al
  411238:	ss (bad) 
  41123a:	add    DWORD PTR [rax],eax
  41123c:	add    BYTE PTR [rax],al
  41123e:	add    BYTE PTR [rax],al
  411240:	rex (bad) 
  411242:	add    DWORD PTR [rax],eax
  411244:	add    BYTE PTR [rax],al
  411246:	add    BYTE PTR [rax],al
  411248:	rex.W (bad) 
  41124a:	add    DWORD PTR [rax],eax
  41124c:	add    BYTE PTR [rax],al
  41124e:	add    BYTE PTR [rax],al
  411250:	push   rdx
  411251:	(bad)  
  411252:	add    DWORD PTR [rax],eax
  411254:	add    BYTE PTR [rax],al
  411256:	add    BYTE PTR [rax],al
  411258:	pop    rdx
  411259:	(bad)  
  41125a:	add    DWORD PTR [rax],eax
  41125c:	add    BYTE PTR [rax],al
  41125e:	add    BYTE PTR [rax],al
  411260:	fs (bad) 
  411262:	add    DWORD PTR [rax],eax
  411264:	add    BYTE PTR [rax],al
  411266:	add    BYTE PTR [rax],al
  411268:	ins    BYTE PTR es:[rdi],dx
  411269:	(bad)  
  41126a:	add    DWORD PTR [rax],eax
  41126c:	add    BYTE PTR [rax],al
  41126e:	add    BYTE PTR [rax],al
  411270:	je     411291 <_head_libjpeg_8_dll+0x1f1>
  411272:	add    DWORD PTR [rax],eax
  411274:	add    BYTE PTR [rax],al
  411276:	add    BYTE PTR [rax],al
  411278:	jl     411299 <_head_libjpeg_8_dll+0x1f9>
  41127a:	add    DWORD PTR [rax],eax
  41127c:	add    BYTE PTR [rax],al
  41127e:	add    BYTE PTR [rax],al
  411280:	test   BYTE PTR [rdi],bl
  411282:	add    DWORD PTR [rax],eax
  411284:	add    BYTE PTR [rax],al
  411286:	add    BYTE PTR [rax],al
  411288:	mov    ds,WORD PTR [rdi]
  41128a:	add    DWORD PTR [rax],eax
  41128c:	add    BYTE PTR [rax],al
  41128e:	add    BYTE PTR [rax],al
  411290:	cwde   
  411291:	(bad)  
  411292:	add    DWORD PTR [rax],eax
  411294:	add    BYTE PTR [rax],al
  411296:	add    BYTE PTR [rax],al
  411298:	movabs ds:0xac0000000000011f,al
  4112a1:	(bad)  
  4112a2:	add    DWORD PTR [rax],eax
  4112a4:	add    BYTE PTR [rax],al
  4112a6:	add    BYTE PTR [rax],al
  4112a8:	mov    dh,0x1f
  4112aa:	add    DWORD PTR [rax],eax
  4112ac:	add    BYTE PTR [rax],al
  4112ae:	add    BYTE PTR [rax],al
  4112b0:	rcr    BYTE PTR [rdi],0x1
  4112b3:	add    BYTE PTR [rax],al
  4112b5:	add    BYTE PTR [rax],al
  4112b7:	add    dl,cl
  4112b9:	(bad)  
  4112ba:	add    DWORD PTR [rax],eax
	...
  4112c8:	fcomp  DWORD PTR [rdi]
  4112ca:	add    DWORD PTR [rax],eax
  4112cc:	add    BYTE PTR [rax],al
  4112ce:	add    BYTE PTR [rax],al
  4112d0:	in     al,dx
  4112d1:	(bad)  
  4112d2:	add    DWORD PTR [rax],eax
  4112d4:	add    BYTE PTR [rax],al
  4112d6:	add    BYTE PTR [rax],al
  4112d8:	add    al,0x20
  4112da:	add    DWORD PTR [rax],eax
  4112dc:	add    BYTE PTR [rax],al
  4112de:	add    BYTE PTR [rax],al
  4112e0:	sbb    al,0x20
  4112e2:	add    DWORD PTR [rax],eax
  4112e4:	add    BYTE PTR [rax],al
  4112e6:	add    BYTE PTR [rax],al
  4112e8:	xor    al,0x20
  4112ea:	add    DWORD PTR [rax],eax
  4112ec:	add    BYTE PTR [rax],al
  4112ee:	add    BYTE PTR [rax],al
  4112f0:	rex.WR and BYTE PTR [rcx],r8b
  4112f3:	add    BYTE PTR [rax],al
  4112f5:	add    BYTE PTR [rax],al
  4112f7:	add    BYTE PTR [rax+0x20],ah
  4112fa:	add    DWORD PTR [rax],eax
  4112fc:	add    BYTE PTR [rax],al
  4112fe:	add    BYTE PTR [rax],al
  411300:	js     411322 <_head_libjpeg_8_dll+0x282>
  411302:	add    DWORD PTR [rax],eax
  411304:	add    BYTE PTR [rax],al
  411306:	add    BYTE PTR [rax],al
  411308:	nop
  411309:	and    BYTE PTR [rcx],al
  41130b:	add    BYTE PTR [rax],al
  41130d:	add    BYTE PTR [rax],al
  41130f:	add    BYTE PTR [rax+0x120],dh
  411315:	add    BYTE PTR [rax],al
  411317:	add    al,cl
  411319:	and    BYTE PTR [rcx],al
  41131b:	add    BYTE PTR [rax],al
  41131d:	add    BYTE PTR [rax],al
  41131f:	add    ah,bl
  411321:	and    BYTE PTR [rcx],al
  411323:	add    BYTE PTR [rax],al
  411325:	add    BYTE PTR [rax],al
  411327:	add    al,bh
  411329:	and    BYTE PTR [rcx],al
  41132b:	add    BYTE PTR [rax],al
  41132d:	add    BYTE PTR [rax],al
  41132f:	add    BYTE PTR [rax],dl
  411331:	and    DWORD PTR [rcx],eax
  411333:	add    BYTE PTR [rax],al
  411335:	add    BYTE PTR [rax],al
  411337:	add    BYTE PTR [rcx+riz*1],ah
  41133a:	add    DWORD PTR [rax],eax
  41133c:	add    BYTE PTR [rax],al
  41133e:	add    BYTE PTR [rax],al
  411340:	rex and DWORD PTR [rcx],eax
  411343:	add    BYTE PTR [rax],al
  411345:	add    BYTE PTR [rax],al
  411347:	add    BYTE PTR [rcx+riz*1+0x1],bl
  41134b:	add    BYTE PTR [rax],al
  41134d:	add    BYTE PTR [rax],al
  41134f:	add    BYTE PTR [rax+0x21],bh
  411352:	add    DWORD PTR [rax],eax
  411354:	add    BYTE PTR [rax],al
  411356:	add    BYTE PTR [rax],al
  411358:	mov    WORD PTR [rcx],fs
  41135a:	add    DWORD PTR [rax],eax
  41135c:	add    BYTE PTR [rax],al
  41135e:	add    BYTE PTR [rax],al
  411360:	movabs al,ds:0xc000000000000121
  411369:	and    DWORD PTR [rcx],eax
  41136b:	add    BYTE PTR [rax],al
  41136d:	add    BYTE PTR [rax],al
  41136f:	add    ah,bl
  411371:	and    DWORD PTR [rcx],eax
  411373:	add    BYTE PTR [rax],al
  411375:	add    BYTE PTR [rax],al
  411377:	add    al,bh
  411379:	and    DWORD PTR [rcx],eax
  41137b:	add    BYTE PTR [rax],al
  41137d:	add    BYTE PTR [rax],al
  41137f:	add    BYTE PTR [rdx+riz*1],dl
  411382:	add    DWORD PTR [rax],eax
  411384:	add    BYTE PTR [rax],al
  411386:	add    BYTE PTR [rax],al
  411388:	sub    al,0x22
  41138a:	add    DWORD PTR [rax],eax
  41138c:	add    BYTE PTR [rax],al
  41138e:	add    BYTE PTR [rax],al
  411390:	rex.W and al,BYTE PTR [rcx]
  411393:	add    BYTE PTR [rax],al
  411395:	add    BYTE PTR [rax],al
  411397:	add    BYTE PTR [rdx+riz*1+0x1],ah
  41139b:	add    BYTE PTR [rax],al
  41139d:	add    BYTE PTR [rax],al
  41139f:	add    BYTE PTR [rax+0x22],bh
  4113a2:	add    DWORD PTR [rax],eax
  4113a4:	add    BYTE PTR [rax],al
  4113a6:	add    BYTE PTR [rax],al
  4113a8:	xchg   esp,eax
  4113a9:	and    al,BYTE PTR [rcx]
  4113ab:	add    BYTE PTR [rax],al
  4113ad:	add    BYTE PTR [rax],al
  4113af:	add    BYTE PTR [rdx+riz*1+0x1],ch
  4113b6:	add    BYTE PTR [rax],al
  4113b8:	vpshufb xmm8,xmm15,XMMWORD PTR [rax]
  4113bd:	add    BYTE PTR [rax],al
  4113bf:	add    ah,bl
  4113c1:	and    al,BYTE PTR [rcx]
  4113c3:	add    BYTE PTR [rax],al
  4113c5:	add    BYTE PTR [rax],al
  4113c7:	add    ah,dh
  4113c9:	and    al,BYTE PTR [rcx]
  4113cb:	add    BYTE PTR [rax],al
  4113cd:	add    BYTE PTR [rax],al
  4113cf:	add    BYTE PTR [rax],dl
  4113d1:	and    eax,DWORD PTR [rcx]
  4113d3:	add    BYTE PTR [rax],al
  4113d5:	add    BYTE PTR [rax],al
  4113d7:	add    BYTE PTR [rax],ch
  4113d9:	and    eax,DWORD PTR [rcx]
  4113db:	add    BYTE PTR [rax],al
  4113dd:	add    BYTE PTR [rax],al
  4113df:	add    BYTE PTR [rbx+riz*1],bh
  4113e2:	add    DWORD PTR [rax],eax
  4113e4:	add    BYTE PTR [rax],al
  4113e6:	add    BYTE PTR [rax],al
  4113e8:	pop    rax
  4113e9:	and    eax,DWORD PTR [rcx]
  4113eb:	add    BYTE PTR [rax],al
  4113ed:	add    BYTE PTR [rax],al
  4113ef:	add    BYTE PTR [rbx+riz*1+0x1],dh
  4113f3:	add    BYTE PTR [rax],al
  4113f5:	add    BYTE PTR [rax],al
  4113f7:	add    BYTE PTR [rbx+riz*1+0x1],cl
  4113fe:	add    BYTE PTR [rax],al
  411400:	test   al,0x23
  411402:	add    DWORD PTR [rax],eax
  411404:	add    BYTE PTR [rax],al
  411406:	add    BYTE PTR [rax],al
  411408:	(bad)
  41140c:	add    BYTE PTR [rax],al
  41140e:	add    BYTE PTR [rax],al
  411410:	shl    BYTE PTR [rbx],1
  411412:	add    DWORD PTR [rax],eax
  411414:	add    BYTE PTR [rax],al
  411416:	add    BYTE PTR [rax],al
  411418:	call   411540 <_head_libjpeg_8_dll+0x4a0>
  41141d:	add    BYTE PTR [rax],al
  41141f:	add    BYTE PTR [rsp],al
  411422:	add    DWORD PTR [rax],eax
  411424:	add    BYTE PTR [rax],al
  411426:	add    BYTE PTR [rax],al
  411428:	and    BYTE PTR [rcx+rax*1],ah
  41142b:	add    BYTE PTR [rax],al
  41142d:	add    BYTE PTR [rax],al
  41142f:	add    BYTE PTR [rax],bh
  411431:	and    al,0x1
  411433:	add    BYTE PTR [rax],al
  411435:	add    BYTE PTR [rax],al
  411437:	add    BYTE PTR [rsp+0x1],bl
  41143b:	add    BYTE PTR [rax],al
  41143d:	add    BYTE PTR [rax],al
  41143f:	add    BYTE PTR [rax+0x124],al
  411445:	add    BYTE PTR [rax],al
  411447:	add    BYTE PTR [rsp+0x1],ah
  41144e:	add    BYTE PTR [rax],al
  411450:	mov    esp,0x124
  411455:	add    BYTE PTR [rax],al
  411457:	add    al,dl
  411459:	and    al,0x1
	...
  411467:	add    al,bh
  411469:	and    al,0x1
  41146b:	add    BYTE PTR [rax],al
  41146d:	add    BYTE PTR [rax],al
  41146f:	add    BYTE PTR ds:0x1,cl
  411476:	add    BYTE PTR [rax],al
  411478:	and    al,0x25
  41147a:	add    DWORD PTR [rax],eax
  41147c:	add    BYTE PTR [rax],al
  41147e:	add    BYTE PTR [rax],al
  411480:	cmp    al,0x25
  411482:	add    DWORD PTR [rax],eax
  411484:	add    BYTE PTR [rax],al
  411486:	add    BYTE PTR [rax],al
  411488:	push   rsp
  411489:	and    eax,0x1
	...
  411496:	add    BYTE PTR [rax],al
  411498:	push   0x125
  41149d:	add    BYTE PTR [rax],al
  41149f:	add    BYTE PTR [rax+0x25],bh
  4114a2:	add    DWORD PTR [rax],eax
  4114a4:	add    BYTE PTR [rax],al
  4114a6:	add    BYTE PTR [rax],al
  4114a8:	mov    WORD PTR [rip+0x1],fs        # 4114af <_head_libjpeg_8_dll+0x40f>
  4114ae:	add    BYTE PTR [rax],al
  4114b0:	pushf  
  4114b1:	and    eax,0x1
  4114b6:	add    BYTE PTR [rax],al
  4114b8:	mov    al,0x25
  4114ba:	add    DWORD PTR [rax],eax
  4114bc:	add    BYTE PTR [rax],al
  4114be:	add    BYTE PTR [rax],al
  4114c0:	shl    BYTE PTR [rip+0x1],0x0        # 4114c8 <_head_libjpeg_8_dll+0x428>
  4114c7:	add    al,bl
  4114c9:	and    eax,0x1
	...
  4114d6:	add    BYTE PTR [rax],al
  4114d8:	call   411602 <_head_libjpeg_8_dll+0x562>
  4114dd:	add    BYTE PTR [rax],al
  4114df:	add    BYTE PTR [rsi+riz*1],al
  4114e2:	add    DWORD PTR [rax],eax
  4114e4:	add    BYTE PTR [rax],al
  4114e6:	add    BYTE PTR [rax],al
  4114e8:	and    BYTE PTR [rsi],ah
  4114ea:	add    DWORD PTR [rax],eax
  4114ec:	add    BYTE PTR [rax],al
  4114ee:	add    BYTE PTR [rax],al
  4114f0:	cmp    al,0x26
  4114f2:	add    DWORD PTR [rax],eax
  4114f4:	add    BYTE PTR [rax],al
  4114f6:	add    BYTE PTR [rax],al
  4114f8:	push   rsp
  4114f9:	add    DWORD PTR es:[rax],eax
	...
  411508:	push   0x126
  41150d:	add    BYTE PTR [rax],al
  41150f:	add    BYTE PTR [rax+0x126],al
  411515:	add    BYTE PTR [rax],al
  411517:	add    BYTE PTR [rax+0x126],dl
  41151d:	add    BYTE PTR [rax],al
  41151f:	add    BYTE PTR [rax+0x126],ah
  411525:	add    BYTE PTR [rax],al
  411527:	add    BYTE PTR [rax+0x126],bh
  41152d:	add    BYTE PTR [rax],al
  41152f:	add    al,dl
  411531:	add    DWORD PTR es:[rax],eax
  411534:	add    BYTE PTR [rax],al
  411536:	add    BYTE PTR [rax],al
  411538:	loopne 411560 <_head_libjpeg_8_dll+0x4c0>
  41153a:	add    DWORD PTR [rax],eax
  41153c:	add    BYTE PTR [rax],al
  41153e:	add    BYTE PTR [rax],al
  411540:	cld    
  411541:	add    DWORD PTR es:[rax],eax
  411544:	add    BYTE PTR [rax],al
  411546:	add    BYTE PTR [rax],al
  411548:	adc    al,0x27
  41154a:	add    DWORD PTR [rax],eax
  41154c:	add    BYTE PTR [rax],al
  41154e:	add    BYTE PTR [rax],al
  411550:	and    BYTE PTR [rdi],ah
  411552:	add    DWORD PTR [rax],eax
  411554:	add    BYTE PTR [rax],al
  411556:	add    BYTE PTR [rax],al
  411558:	sub    al,0x27
  41155a:	add    DWORD PTR [rax],eax
  41155c:	add    BYTE PTR [rax],al
  41155e:	add    BYTE PTR [rax],al
  411560:	rex.R (bad) 
  411562:	add    DWORD PTR [rax],eax
  411564:	add    BYTE PTR [rax],al
  411566:	add    BYTE PTR [rax],al
  411568:	rex.WR (bad) 
  41156a:	add    DWORD PTR [rax],eax
  41156c:	add    BYTE PTR [rax],al
  41156e:	add    BYTE PTR [rax],al
  411570:	pop    rax
  411571:	(bad)  
  411572:	add    DWORD PTR [rax],eax
  411574:	add    BYTE PTR [rax],al
  411576:	add    BYTE PTR [rax],al
  411578:	push   0x127
  41157d:	add    BYTE PTR [rax],al
  41157f:	add    BYTE PTR [rdi+riz*1+0x1],bh
  411583:	add    BYTE PTR [rax],al
  411585:	add    BYTE PTR [rax],al
  411587:	add    BYTE PTR [rax+0x127],dl
  41158d:	add    BYTE PTR [rax],al
  41158f:	add    BYTE PTR [rdi+riz*1+0x1],ah
  411596:	add    BYTE PTR [rax],al
  411598:	mov    al,0x27
  41159a:	add    DWORD PTR [rax],eax
  41159c:	add    BYTE PTR [rax],al
  41159e:	add    BYTE PTR [rax],al
  4115a0:	shl    BYTE PTR [rdi],0x1
  4115a3:	add    BYTE PTR [rax],al
  4115a5:	add    BYTE PTR [rax],al
  4115a7:	add    ah,cl
  4115a9:	(bad)  
  4115aa:	add    DWORD PTR [rax],eax
  4115ac:	add    BYTE PTR [rax],al
  4115ae:	add    BYTE PTR [rax],al
  4115b0:	fsub   DWORD PTR [rdi]
  4115b2:	add    DWORD PTR [rax],eax
  4115b4:	add    BYTE PTR [rax],al
  4115b6:	add    BYTE PTR [rax],al
  4115b8:	in     al,dx
  4115b9:	(bad)  
  4115ba:	add    DWORD PTR [rax],eax
  4115bc:	add    BYTE PTR [rax],al
  4115be:	add    BYTE PTR [rax],al
  4115c0:	cld    
  4115c1:	(bad)  
  4115c2:	add    DWORD PTR [rax],eax
  4115c4:	add    BYTE PTR [rax],al
  4115c6:	add    BYTE PTR [rax],al
  4115c8:	adc    al,0x28
  4115ca:	add    DWORD PTR [rax],eax
  4115cc:	add    BYTE PTR [rax],al
  4115ce:	add    BYTE PTR [rax],al
  4115d0:	and    al,0x28
  4115d2:	add    DWORD PTR [rax],eax
  4115d4:	add    BYTE PTR [rax],al
  4115d6:	add    BYTE PTR [rax],al
  4115d8:	cmp    BYTE PTR [rax],ch
  4115da:	add    DWORD PTR [rax],eax
  4115dc:	add    BYTE PTR [rax],al
  4115de:	add    BYTE PTR [rax],al
  4115e0:	push   rax
  4115e1:	sub    BYTE PTR [rcx],al
  4115e3:	add    BYTE PTR [rax],al
  4115e5:	add    BYTE PTR [rax],al
  4115e7:	add    BYTE PTR [rax+rbp*1+0x1],bl
  4115eb:	add    BYTE PTR [rax],al
  4115ed:	add    BYTE PTR [rax],al
  4115ef:	add    BYTE PTR [rax+0x28],ch
  4115f2:	add    DWORD PTR [rax],eax
  4115f4:	add    BYTE PTR [rax],al
  4115f6:	add    BYTE PTR [rax],al
  4115f8:	jl     411622 <_head_libjpeg_8_dll+0x582>
  4115fa:	add    DWORD PTR [rax],eax
	...
  411608:	nop
  411609:	sub    BYTE PTR [rcx],al
  41160b:	add    BYTE PTR [rax],al
  41160d:	add    BYTE PTR [rax],al
  41160f:	add    BYTE PTR [rax+rbp*1+0x1],dh
  411616:	add    BYTE PTR [rax],al
  411618:	shr    BYTE PTR [rax],1
  41161a:	add    DWORD PTR [rax],eax
  41161c:	add    BYTE PTR [rax],al
  41161e:	add    BYTE PTR [rax],al
  411620:	in     al,0x28
  411622:	add    DWORD PTR [rax],eax
	...
  411630:	cld    
  411631:	sub    BYTE PTR [rcx],al
  411633:	add    BYTE PTR [rax],al
  411635:	add    BYTE PTR [rax],al
  411637:	add    BYTE PTR [rcx+rbp*1],dl
  41163a:	add    DWORD PTR [rax],eax
  41163c:	add    BYTE PTR [rax],al
  41163e:	add    BYTE PTR [rax],al
  411640:	xor    BYTE PTR [rcx],ch
  411642:	add    DWORD PTR [rax],eax
  411644:	add    BYTE PTR [rax],al
  411646:	add    BYTE PTR [rax],al
  411648:	sub    QWORD PTR [rcx],r8
  41164b:	add    BYTE PTR [rax],al
  41164d:	add    BYTE PTR [rax],al
  41164f:	add    BYTE PTR [rax+0x29],ah
  411652:	add    DWORD PTR [rax],eax
  411654:	add    BYTE PTR [rax],al
  411656:	add    BYTE PTR [rax],al
  411658:	js     411683 <__imp_EnterCriticalSection+0x3>
  41165a:	add    DWORD PTR [rax],eax
  41165c:	add    BYTE PTR [rax],al
  41165e:	add    BYTE PTR [rax],al
  411660:	nop
  411661:	sub    DWORD PTR [rcx],eax
  411663:	add    BYTE PTR [rax],al
  411665:	add    BYTE PTR [rax],al
  411667:	add    BYTE PTR [rcx+rbp*1+0x1],ah
	...

0000000000411678 <__IAT_start__>:
  411678:	sub    BYTE PTR [rcx+rax*1],bl
  41167b:	add    BYTE PTR [rax],al
  41167d:	add    BYTE PTR [rax],al
	...

0000000000411680 <__imp_EnterCriticalSection>:
  411680:	sbb    al,0x1
  411683:	add    BYTE PTR [rax],al
  411685:	add    BYTE PTR [rax],al
	...

0000000000411688 <__imp_GetCurrentProcess>:
  411688:	pop    rax
  411689:	sbb    al,0x1
  41168b:	add    BYTE PTR [rax],al
  41168d:	add    BYTE PTR [rax],al
	...

0000000000411690 <__imp_GetCurrentProcessId>:
  411690:	ins    BYTE PTR es:[rdi],dx
  411691:	sbb    al,0x1
  411693:	add    BYTE PTR [rax],al
  411695:	add    BYTE PTR [rax],al
	...

0000000000411698 <__imp_GetCurrentThreadId>:
  411698:	(bad)  
  411699:	sbb    al,0x1
  41169b:	add    BYTE PTR [rax],al
  41169d:	add    BYTE PTR [rax],al
	...

00000000004116a0 <__imp_GetLastError>:
  4116a0:	cwde   
  4116a1:	sbb    al,0x1
  4116a3:	add    BYTE PTR [rax],al
  4116a5:	add    BYTE PTR [rax],al
	...

00000000004116a8 <__imp_GetModuleHandleA>:
  4116a8:	test   al,0x1c
  4116aa:	add    DWORD PTR [rax],eax
  4116ac:	add    BYTE PTR [rax],al
	...

00000000004116b0 <__imp_GetProcAddress>:
  4116b0:	mov    esp,0x11c
  4116b5:	add    BYTE PTR [rax],al
	...

00000000004116b8 <__imp_GetStartupInfoA>:
  4116b8:	(bad)  
  4116b9:	sbb    al,0x1
  4116bb:	add    BYTE PTR [rax],al
  4116bd:	add    BYTE PTR [rax],al
	...

00000000004116c0 <__imp_GetSystemTimeAsFileTime>:
  4116c0:	loopne 4116de <__imp_LeaveCriticalSection+0x6>
  4116c2:	add    DWORD PTR [rax],eax
  4116c4:	add    BYTE PTR [rax],al
	...

00000000004116c8 <__imp_GetTickCount>:
  4116c8:	cli    
  4116c9:	sbb    al,0x1
  4116cb:	add    BYTE PTR [rax],al
  4116cd:	add    BYTE PTR [rax],al
	...

00000000004116d0 <__imp_InitializeCriticalSection>:
  4116d0:	or     bl,BYTE PTR [rip+0x1]        # 4116d7 <__imp_InitializeCriticalSection+0x7>
	...

00000000004116d8 <__imp_LeaveCriticalSection>:
  4116d8:	es sbb eax,0x1
	...

00000000004116e0 <__imp_QueryPerformanceCounter>:
  4116e0:	ds sbb eax,0x1
	...

00000000004116e8 <__imp_RtlAddFunctionTable>:
  4116e8:	pop    rax
  4116e9:	sbb    eax,0x1
	...

00000000004116f0 <__imp_RtlCaptureContext>:
  4116f0:	outs   dx,BYTE PTR ds:[rsi]
  4116f1:	sbb    eax,0x1
	...

00000000004116f8 <__imp_RtlLookupFunctionEntry>:
  4116f8:	(bad)  
  4116f9:	sbb    eax,0x1
	...

0000000000411700 <__imp_RtlVirtualUnwind>:
  411700:	pushf  
  411701:	sbb    eax,0x1
	...

0000000000411708 <__imp_SetUnhandledExceptionFilter>:
  411708:	mov    al,0x1d
  41170a:	add    DWORD PTR [rax],eax
  41170c:	add    BYTE PTR [rax],al
	...

0000000000411710 <__imp_Sleep>:
  411710:	(bad)  
  411711:	sbb    eax,0x1
	...

0000000000411718 <__imp_TerminateProcess>:
  411718:	(bad)  
  411719:	sbb    eax,0x1
	...

0000000000411720 <__imp_TlsGetValue>:
  411720:	(bad)  
  411721:	sbb    eax,0x1
	...

0000000000411728 <__imp_UnhandledExceptionFilter>:
  411728:	clc    
  411729:	sbb    eax,0x1
	...

0000000000411730 <__imp_VirtualProtect>:
  411730:	adc    al,0x1e
  411732:	add    DWORD PTR [rax],eax
  411734:	add    BYTE PTR [rax],al
	...

0000000000411738 <__imp_VirtualQuery>:
  411738:	es (bad) 
  41173a:	add    DWORD PTR [rax],eax
	...

0000000000411748 <__imp___C_specific_handler>:
  411748:	ss (bad) 
  41174a:	add    DWORD PTR [rax],eax
  41174c:	add    BYTE PTR [rax],al
	...

0000000000411750 <__imp___argc>:
  411750:	rex.WRX (bad) 
  411752:	add    DWORD PTR [rax],eax
  411754:	add    BYTE PTR [rax],al
	...

0000000000411758 <__imp___argv>:
  411758:	pop    rax
  411759:	(bad)  
  41175a:	add    DWORD PTR [rax],eax
  41175c:	add    BYTE PTR [rax],al
	...

0000000000411760 <__imp___dllonexit>:
  411760:	(bad)  
  411761:	(bad)  
  411762:	add    DWORD PTR [rax],eax
  411764:	add    BYTE PTR [rax],al
	...

0000000000411768 <__imp___getmainargs>:
  411768:	jo     411788 <__imp___set_app_type>
  41176a:	add    DWORD PTR [rax],eax
  41176c:	add    BYTE PTR [rax],al
	...

0000000000411770 <__imp___initenv>:
  411770:	sbb    BYTE PTR [rsi],0x1
  411773:	add    BYTE PTR [rax],al
  411775:	add    BYTE PTR [rax],al
	...

0000000000411778 <__imp___iob_func>:
  411778:	mov    WORD PTR [rsi],ds
  41177a:	add    DWORD PTR [rax],eax
  41177c:	add    BYTE PTR [rax],al
	...

0000000000411780 <__imp___lconv_init>:
  411780:	(bad)  
  411781:	(bad)  
  411782:	add    DWORD PTR [rax],eax
  411784:	add    BYTE PTR [rax],al
	...

0000000000411788 <__imp___set_app_type>:
  411788:	stos   BYTE PTR es:[rdi],al
  411789:	(bad)  
  41178a:	add    DWORD PTR [rax],eax
  41178c:	add    BYTE PTR [rax],al
	...

0000000000411790 <__imp___setusermatherr>:
  411790:	mov    esp,0x11e
  411795:	add    BYTE PTR [rax],al
	...

0000000000411798 <__imp__acmdln>:
  411798:	rcr    BYTE PTR [rsi],1
  41179a:	add    DWORD PTR [rax],eax
  41179c:	add    BYTE PTR [rax],al
	...

00000000004117a0 <__imp__amsg_exit>:
  4117a0:	ficomp DWORD PTR [rsi]
  4117a2:	add    DWORD PTR [rax],eax
  4117a4:	add    BYTE PTR [rax],al
	...

00000000004117a8 <__imp__cexit>:
  4117a8:	call   4118cb <__imp_gimp_image_delete+0x3>
  4117ad:	add    BYTE PTR [rax],al
	...

00000000004117b0 <__imp__errno>:
  4117b0:	repnz (bad) 
  4117b2:	add    DWORD PTR [rax],eax
  4117b4:	add    BYTE PTR [rax],al
	...

00000000004117b8 <__imp__fmode>:
  4117b8:	cld    
  4117b9:	(bad)  
  4117ba:	add    DWORD PTR [rax],eax
  4117bc:	add    BYTE PTR [rax],al
	...

00000000004117c0 <__imp__initterm>:
  4117c0:	(bad)  
  4117c1:	(bad)  
  4117c2:	add    DWORD PTR [rax],eax
  4117c4:	add    BYTE PTR [rax],al
	...

00000000004117c8 <__imp__lock>:
  4117c8:	adc    bl,BYTE PTR [rdi]
  4117ca:	add    DWORD PTR [rax],eax
  4117cc:	add    BYTE PTR [rax],al
	...

00000000004117d0 <__imp__onexit>:
  4117d0:	sbb    bl,BYTE PTR [rdi]
  4117d2:	add    DWORD PTR [rax],eax
  4117d4:	add    BYTE PTR [rax],al
	...

00000000004117d8 <__imp__unlock>:
  4117d8:	and    al,0x1f
  4117da:	add    DWORD PTR [rax],eax
  4117dc:	add    BYTE PTR [rax],al
	...

00000000004117e0 <__imp_abort>:
  4117e0:	cs (bad) 
  4117e2:	add    DWORD PTR [rax],eax
  4117e4:	add    BYTE PTR [rax],al
	...

00000000004117e8 <__imp_calloc>:
  4117e8:	ss (bad) 
  4117ea:	add    DWORD PTR [rax],eax
  4117ec:	add    BYTE PTR [rax],al
	...

00000000004117f0 <__imp_exit>:
  4117f0:	rex (bad) 
  4117f2:	add    DWORD PTR [rax],eax
  4117f4:	add    BYTE PTR [rax],al
	...

00000000004117f8 <__imp_fclose>:
  4117f8:	rex.W (bad) 
  4117fa:	add    DWORD PTR [rax],eax
  4117fc:	add    BYTE PTR [rax],al
	...

0000000000411800 <__imp_feof>:
  411800:	push   rdx
  411801:	(bad)  
  411802:	add    DWORD PTR [rax],eax
  411804:	add    BYTE PTR [rax],al
	...

0000000000411808 <__imp_fprintf>:
  411808:	pop    rdx
  411809:	(bad)  
  41180a:	add    DWORD PTR [rax],eax
  41180c:	add    BYTE PTR [rax],al
	...

0000000000411810 <__imp_fread>:
  411810:	fs (bad) 
  411812:	add    DWORD PTR [rax],eax
  411814:	add    BYTE PTR [rax],al
	...

0000000000411818 <__imp_free>:
  411818:	ins    BYTE PTR es:[rdi],dx
  411819:	(bad)  
  41181a:	add    DWORD PTR [rax],eax
  41181c:	add    BYTE PTR [rax],al
	...

0000000000411820 <__imp_fseek>:
  411820:	je     411841 <__imp_memcmp+0x1>
  411822:	add    DWORD PTR [rax],eax
  411824:	add    BYTE PTR [rax],al
	...

0000000000411828 <__imp_ftell>:
  411828:	jl     411849 <__imp_memcpy+0x1>
  41182a:	add    DWORD PTR [rax],eax
  41182c:	add    BYTE PTR [rax],al
	...

0000000000411830 <__imp_fwrite>:
  411830:	test   BYTE PTR [rdi],bl
  411832:	add    DWORD PTR [rax],eax
  411834:	add    BYTE PTR [rax],al
	...

0000000000411838 <__imp_malloc>:
  411838:	mov    ds,WORD PTR [rdi]
  41183a:	add    DWORD PTR [rax],eax
  41183c:	add    BYTE PTR [rax],al
	...

0000000000411840 <__imp_memcmp>:
  411840:	cwde   
  411841:	(bad)  
  411842:	add    DWORD PTR [rax],eax
  411844:	add    BYTE PTR [rax],al
	...

0000000000411848 <__imp_memcpy>:
  411848:	movabs ds:0xac0000000000011f,al

0000000000411850 <__imp_signal>:
  411850:	lods   al,BYTE PTR ds:[rsi]
  411851:	(bad)  
  411852:	add    DWORD PTR [rax],eax
  411854:	add    BYTE PTR [rax],al
	...

0000000000411858 <__imp_strlen>:
  411858:	mov    dh,0x1f
  41185a:	add    DWORD PTR [rax],eax
  41185c:	add    BYTE PTR [rax],al
	...

0000000000411860 <__imp_strncmp>:
  411860:	rcr    BYTE PTR [rdi],0x1
  411863:	add    BYTE PTR [rax],al
  411865:	add    BYTE PTR [rax],al
	...

0000000000411868 <__imp_vfprintf>:
  411868:	retf   0x11f
	...

0000000000411878 <__imp_gimp_channel_new>:
  411878:	fcomp  DWORD PTR [rdi]
  41187a:	add    DWORD PTR [rax],eax
  41187c:	add    BYTE PTR [rax],al
	...

0000000000411880 <__imp_gimp_destroy_params>:
  411880:	in     al,dx
  411881:	(bad)  
  411882:	add    DWORD PTR [rax],eax
  411884:	add    BYTE PTR [rax],al
	...

0000000000411888 <__imp_gimp_drawable_detach>:
  411888:	add    al,0x20
  41188a:	add    DWORD PTR [rax],eax
  41188c:	add    BYTE PTR [rax],al
	...

0000000000411890 <__imp_gimp_drawable_fill>:
  411890:	sbb    al,0x20
  411892:	add    DWORD PTR [rax],eax
  411894:	add    BYTE PTR [rax],al
	...

0000000000411898 <__imp_gimp_drawable_flush>:
  411898:	xor    al,0x20
  41189a:	add    DWORD PTR [rax],eax
  41189c:	add    BYTE PTR [rax],al
	...

00000000004118a0 <__imp_gimp_drawable_get>:
  4118a0:	rex.WR and BYTE PTR [rcx],r8b
  4118a3:	add    BYTE PTR [rax],al
  4118a5:	add    BYTE PTR [rax],al
	...

00000000004118a8 <__imp_gimp_image_add_hguide>:
  4118a8:	(bad)  
  4118a9:	and    BYTE PTR [rcx],al
  4118ab:	add    BYTE PTR [rax],al
  4118ad:	add    BYTE PTR [rax],al
	...

00000000004118b0 <__imp_gimp_image_add_vguide>:
  4118b0:	js     4118d2 <__imp_gimp_image_get_colormap+0x2>
  4118b2:	add    DWORD PTR [rax],eax
  4118b4:	add    BYTE PTR [rax],al
	...

00000000004118b8 <__imp_gimp_image_attach_parasite>:
  4118b8:	nop
  4118b9:	and    BYTE PTR [rcx],al
  4118bb:	add    BYTE PTR [rax],al
  4118bd:	add    BYTE PTR [rax],al
	...

00000000004118c0 <__imp_gimp_image_clean_all>:
  4118c0:	mov    al,0x20
  4118c2:	add    DWORD PTR [rax],eax
  4118c4:	add    BYTE PTR [rax],al
	...

00000000004118c8 <__imp_gimp_image_delete>:
  4118c8:	enter  0x120,0x0
  4118cc:	add    BYTE PTR [rax],al
	...

00000000004118d0 <__imp_gimp_image_get_colormap>:
  4118d0:	fsub   QWORD PTR [rax]
  4118d2:	add    DWORD PTR [rax],eax
  4118d4:	add    BYTE PTR [rax],al
	...

00000000004118d8 <__imp_gimp_image_get_layers>:
  4118d8:	clc    
  4118d9:	and    BYTE PTR [rcx],al
  4118db:	add    BYTE PTR [rax],al
  4118dd:	add    BYTE PTR [rax],al
	...

00000000004118e0 <__imp_gimp_image_height>:
  4118e0:	adc    BYTE PTR [rcx],ah
  4118e2:	add    DWORD PTR [rax],eax
  4118e4:	add    BYTE PTR [rax],al
	...

00000000004118e8 <__imp_gimp_image_insert_channel>:
  4118e8:	and    al,0x21
  4118ea:	add    DWORD PTR [rax],eax
  4118ec:	add    BYTE PTR [rax],al
	...

00000000004118f0 <__imp_gimp_image_insert_layer>:
  4118f0:	rex and DWORD PTR [rcx],eax
  4118f3:	add    BYTE PTR [rax],al
  4118f5:	add    BYTE PTR [rax],al
	...

00000000004118f8 <__imp_gimp_image_insert_vectors>:
  4118f8:	pop    rsp
  4118f9:	and    DWORD PTR [rcx],eax
  4118fb:	add    BYTE PTR [rax],al
  4118fd:	add    BYTE PTR [rax],al
	...

0000000000411900 <__imp_gimp_image_new>:
  411900:	js     411923 <__imp_gimp_image_set_filename+0x3>
  411902:	add    DWORD PTR [rax],eax
  411904:	add    BYTE PTR [rax],al
	...

0000000000411908 <__imp_gimp_image_resize>:
  411908:	mov    WORD PTR [rcx],fs
  41190a:	add    DWORD PTR [rax],eax
  41190c:	add    BYTE PTR [rax],al
	...

0000000000411910 <__imp_gimp_image_set_active_layer>:
  411910:	movabs al,ds:0xc000000000000121

0000000000411918 <__imp_gimp_image_set_colormap>:
  411918:	shl    BYTE PTR [rcx],0x1
  41191b:	add    BYTE PTR [rax],al
  41191d:	add    BYTE PTR [rax],al
	...

0000000000411920 <__imp_gimp_image_set_filename>:
  411920:	fsub   QWORD PTR [rcx]
  411922:	add    DWORD PTR [rax],eax
  411924:	add    BYTE PTR [rax],al
	...

0000000000411928 <__imp_gimp_image_set_resolution>:
  411928:	clc    
  411929:	and    DWORD PTR [rcx],eax
  41192b:	add    BYTE PTR [rax],al
  41192d:	add    BYTE PTR [rax],al
	...

0000000000411930 <__imp_gimp_image_set_unit>:
  411930:	adc    al,0x22
  411932:	add    DWORD PTR [rax],eax
  411934:	add    BYTE PTR [rax],al
	...

0000000000411938 <__imp_gimp_image_undo_disable>:
  411938:	sub    al,0x22
  41193a:	add    DWORD PTR [rax],eax
  41193c:	add    BYTE PTR [rax],al
	...

0000000000411940 <__imp_gimp_image_undo_enable>:
  411940:	rex.W and al,BYTE PTR [rcx]
  411943:	add    BYTE PTR [rax],al
  411945:	add    BYTE PTR [rax],al
	...

0000000000411948 <__imp_gimp_image_width>:
  411948:	and    al,BYTE PTR fs:[rcx]
  41194b:	add    BYTE PTR [rax],al
  41194d:	add    BYTE PTR [rax],al
	...

0000000000411950 <__imp_gimp_install_procedure>:
  411950:	js     411974 <__imp_gimp_layer_add_mask+0x4>
  411952:	add    DWORD PTR [rax],eax
  411954:	add    BYTE PTR [rax],al
	...

0000000000411958 <__imp_gimp_item_set_name>:
  411958:	xchg   esp,eax
  411959:	and    al,BYTE PTR [rcx]
  41195b:	add    BYTE PTR [rax],al
  41195d:	add    BYTE PTR [rax],al
	...

0000000000411960 <__imp_gimp_item_set_tattoo>:
  411960:	lods   al,BYTE PTR ds:[rsi]
  411961:	and    al,BYTE PTR [rcx]
  411963:	add    BYTE PTR [rax],al
  411965:	add    BYTE PTR [rax],al
	...

0000000000411968 <__imp_gimp_item_set_visible>:
  411968:	vpshufb xmm8,xmm15,XMMWORD PTR [rax]
  41196d:	add    BYTE PTR [rax],al
	...

0000000000411970 <__imp_gimp_layer_add_mask>:
  411970:	fsub   QWORD PTR [rdx]
  411972:	add    DWORD PTR [rax],eax
  411974:	add    BYTE PTR [rax],al
	...

0000000000411978 <__imp_gimp_layer_create_mask>:
  411978:	hlt    
  411979:	and    al,BYTE PTR [rcx]
  41197b:	add    BYTE PTR [rax],al
  41197d:	add    BYTE PTR [rax],al
	...

0000000000411980 <__imp_gimp_layer_group_new>:
  411980:	adc    BYTE PTR [rbx],ah
  411982:	add    DWORD PTR [rax],eax
  411984:	add    BYTE PTR [rax],al
	...

0000000000411988 <__imp_gimp_layer_new>:
  411988:	sub    BYTE PTR [rbx],ah
  41198a:	add    DWORD PTR [rax],eax
  41198c:	add    BYTE PTR [rax],al
	...

0000000000411990 <__imp_gimp_layer_set_apply_mask>:
  411990:	cmp    al,0x23
  411992:	add    DWORD PTR [rax],eax
  411994:	add    BYTE PTR [rax],al
	...

0000000000411998 <__imp_gimp_layer_set_lock_alpha>:
  411998:	pop    rax
  411999:	and    eax,DWORD PTR [rcx]
  41199b:	add    BYTE PTR [rax],al
  41199d:	add    BYTE PTR [rax],al
	...

00000000004119a0 <__imp_gimp_layer_set_mode>:
  4119a0:	je     4119c5 <__imp_gimp_pixel_rgn_init+0x5>
  4119a2:	add    DWORD PTR [rax],eax
  4119a4:	add    BYTE PTR [rax],al
	...

00000000004119a8 <__imp_gimp_layer_set_offsets>:
  4119a8:	mov    WORD PTR [rbx],fs
  4119aa:	add    DWORD PTR [rax],eax
  4119ac:	add    BYTE PTR [rax],al
	...

00000000004119b0 <__imp_gimp_layer_set_opacity>:
  4119b0:	test   al,0x23
  4119b2:	add    DWORD PTR [rax],eax
  4119b4:	add    BYTE PTR [rax],al
	...

00000000004119b8 <__imp_gimp_main>:
  4119b8:	(bad)
  4119bc:	add    BYTE PTR [rax],al
	...

00000000004119c0 <__imp_gimp_pixel_rgn_init>:
  4119c0:	shl    BYTE PTR [rbx],1
  4119c2:	add    DWORD PTR [rax],eax
  4119c4:	add    BYTE PTR [rax],al
	...

00000000004119c8 <__imp_gimp_pixel_rgn_set_rect>:
  4119c8:	call   411af0 <__imp_g_file_error_quark>
  4119cd:	add    BYTE PTR [rax],al
	...

00000000004119d0 <__imp_gimp_progress_init_printf>:
  4119d0:	add    al,0x24
  4119d2:	add    DWORD PTR [rax],eax
  4119d4:	add    BYTE PTR [rax],al
	...

00000000004119d8 <__imp_gimp_progress_update>:
  4119d8:	and    BYTE PTR [rcx+rax*1],ah
  4119db:	add    BYTE PTR [rax],al
  4119dd:	add    BYTE PTR [rax],al
	...

00000000004119e0 <__imp_gimp_register_file_handler_mime>:
  4119e0:	cmp    BYTE PTR [rcx+rax*1],ah
  4119e3:	add    BYTE PTR [rax],al
  4119e5:	add    BYTE PTR [rax],al
	...

00000000004119e8 <__imp_gimp_register_magic_load_handler>:
  4119e8:	pop    rsp
  4119e9:	and    al,0x1
  4119eb:	add    BYTE PTR [rax],al
  4119ed:	add    BYTE PTR [rax],al
	...

00000000004119f0 <__imp_gimp_register_thumbnail_loader>:
  4119f0:	and    BYTE PTR [rcx+rax*1],0x0
  4119f4:	add    BYTE PTR [rax],al
	...

00000000004119f8 <__imp_gimp_run_procedure>:
  4119f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4119f9:	and    al,0x1
  4119fb:	add    BYTE PTR [rax],al
  4119fd:	add    BYTE PTR [rax],al
	...

0000000000411a00 <__imp_gimp_vectors_new>:
  411a00:	mov    esp,0x124
  411a05:	add    BYTE PTR [rax],al
	...

0000000000411a08 <__imp_gimp_vectors_stroke_new_from_points>:
  411a08:	shl    BYTE PTR [rcx+rax*1],1
	...

0000000000411a18 <__imp_gimp_any_to_utf8>:
  411a18:	clc    
  411a19:	and    al,0x1
  411a1b:	add    BYTE PTR [rax],al
  411a1d:	add    BYTE PTR [rax],al
	...

0000000000411a20 <__imp_gimp_filename_to_utf8>:
  411a20:	or     al,0x25
  411a22:	add    DWORD PTR [rax],eax
  411a24:	add    BYTE PTR [rax],al
	...

0000000000411a28 <__imp_gimp_locale_directory>:
  411a28:	and    al,0x25
  411a2a:	add    DWORD PTR [rax],eax
  411a2c:	add    BYTE PTR [rax],al
	...

0000000000411a30 <__imp_gimp_parasite_free>:
  411a30:	cmp    al,0x25
  411a32:	add    DWORD PTR [rax],eax
  411a34:	add    BYTE PTR [rax],al
	...

0000000000411a38 <__imp_gimp_parasite_new>:
  411a38:	push   rsp
  411a39:	and    eax,0x1
	...

0000000000411a48 <__imp_gimp_cmyk_set>:
  411a48:	push   0x125
  411a4d:	add    BYTE PTR [rax],al
	...

0000000000411a50 <__imp_gimp_cmyk_to_rgb>:
  411a50:	js     411a77 <__imp_gimp_rgb_set_alpha+0x7>
  411a52:	add    DWORD PTR [rax],eax
  411a54:	add    BYTE PTR [rax],al
	...

0000000000411a58 <__imp_gimp_hsv_set>:
  411a58:	mov    WORD PTR [rip+0x1],fs        # 411a5f <__imp_gimp_hsv_set+0x7>
	...

0000000000411a60 <__imp_gimp_hsv_to_rgb>:
  411a60:	pushf  
  411a61:	and    eax,0x1
	...

0000000000411a68 <__imp_gimp_rgb_set>:
  411a68:	mov    al,0x25
  411a6a:	add    DWORD PTR [rax],eax
  411a6c:	add    BYTE PTR [rax],al
	...

0000000000411a70 <__imp_gimp_rgb_set_alpha>:
  411a70:	shl    BYTE PTR [rip+0x1],0x0        # 411a78 <__imp_gimp_rgba_set>
	...

0000000000411a78 <__imp_gimp_rgba_set>:
  411a78:	fsub   DWORD PTR [rip+0x1]        # 411a7f <__imp_gimp_rgba_set+0x7>
	...

0000000000411a88 <__imp_exif_content_get_entry>:
  411a88:	call   411bb2 <__imp_g_utf8_to_utf16+0xa>
  411a8d:	add    BYTE PTR [rax],al
	...

0000000000411a90 <__imp_exif_content_remove_entry>:
  411a90:	add    al,0x26
  411a92:	add    DWORD PTR [rax],eax
  411a94:	add    BYTE PTR [rax],al
	...

0000000000411a98 <__imp_exif_data_new_from_data>:
  411a98:	and    BYTE PTR [rsi],ah
  411a9a:	add    DWORD PTR [rax],eax
  411a9c:	add    BYTE PTR [rax],al
	...

0000000000411aa0 <__imp_exif_data_save_data>:
  411aa0:	cmp    al,0x26
  411aa2:	add    DWORD PTR [rax],eax
  411aa4:	add    BYTE PTR [rax],al
	...

0000000000411aa8 <__imp_exif_data_unref>:
  411aa8:	push   rsp
  411aa9:	add    DWORD PTR es:[rax],eax
	...

0000000000411ab8 <__imp_g_array_append_vals>:
  411ab8:	push   0x126
  411abd:	add    BYTE PTR [rax],al
	...

0000000000411ac0 <__imp_g_array_free>:
  411ac0:	and    BYTE PTR [rsi],0x1
  411ac3:	add    BYTE PTR [rax],al
  411ac5:	add    BYTE PTR [rax],al
	...

0000000000411ac8 <__imp_g_array_new>:
  411ac8:	nop
  411ac9:	add    DWORD PTR es:[rax],eax
  411acc:	add    BYTE PTR [rax],al
	...

0000000000411ad0 <__imp_g_array_remove_index>:
  411ad0:	movabs al,ds:0xb800000000000126

0000000000411ad8 <__imp_g_ascii_strncasecmp>:
  411ad8:	mov    eax,0x126
  411add:	add    BYTE PTR [rax],al
	...

0000000000411ae0 <__imp_g_error_free>:
  411ae0:	shl    BYTE PTR [rsi],1
  411ae2:	add    DWORD PTR [rax],eax
  411ae4:	add    BYTE PTR [rax],al
	...

0000000000411ae8 <__imp_g_file_error_from_errno>:
  411ae8:	loopne 411b10 <__imp_g_log>
  411aea:	add    DWORD PTR [rax],eax
  411aec:	add    BYTE PTR [rax],al
	...

0000000000411af0 <__imp_g_file_error_quark>:
  411af0:	cld    
  411af1:	add    DWORD PTR es:[rax],eax
  411af4:	add    BYTE PTR [rax],al
	...

0000000000411af8 <__imp_g_fopen>:
  411af8:	adc    al,0x27
  411afa:	add    DWORD PTR [rax],eax
  411afc:	add    BYTE PTR [rax],al
	...

0000000000411b00 <__imp_g_free>:
  411b00:	and    BYTE PTR [rdi],ah
  411b02:	add    DWORD PTR [rax],eax
  411b04:	add    BYTE PTR [rax],al
	...

0000000000411b08 <__imp_g_locale_from_utf8>:
  411b08:	sub    al,0x27
  411b0a:	add    DWORD PTR [rax],eax
  411b0c:	add    BYTE PTR [rax],al
	...

0000000000411b10 <__imp_g_log>:
  411b10:	rex.R (bad) 
  411b12:	add    DWORD PTR [rax],eax
  411b14:	add    BYTE PTR [rax],al
	...

0000000000411b18 <__imp_g_malloc>:
  411b18:	rex.WR (bad) 
  411b1a:	add    DWORD PTR [rax],eax
  411b1c:	add    BYTE PTR [rax],al
	...

0000000000411b20 <__imp_g_malloc_n>:
  411b20:	pop    rax
  411b21:	(bad)  
  411b22:	add    DWORD PTR [rax],eax
  411b24:	add    BYTE PTR [rax],al
	...

0000000000411b28 <__imp_g_ptr_array_add>:
  411b28:	push   0x127
  411b2d:	add    BYTE PTR [rax],al
	...

0000000000411b30 <__imp_g_ptr_array_free>:
  411b30:	jl     411b59 <__imp_g_strdup+0x1>
  411b32:	add    DWORD PTR [rax],eax
  411b34:	add    BYTE PTR [rax],al
	...

0000000000411b38 <__imp_g_ptr_array_new>:
  411b38:	nop
  411b39:	(bad)  
  411b3a:	add    DWORD PTR [rax],eax
  411b3c:	add    BYTE PTR [rax],al
	...

0000000000411b40 <__imp_g_realloc>:
  411b40:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411b41:	(bad)  
  411b42:	add    DWORD PTR [rax],eax
  411b44:	add    BYTE PTR [rax],al
	...

0000000000411b48 <__imp_g_set_error>:
  411b48:	mov    al,0x27
  411b4a:	add    DWORD PTR [rax],eax
  411b4c:	add    BYTE PTR [rax],al
	...

0000000000411b50 <__imp_g_stat>:
  411b50:	shl    BYTE PTR [rdi],0x1
  411b53:	add    BYTE PTR [rax],al
  411b55:	add    BYTE PTR [rax],al
	...

0000000000411b58 <__imp_g_strdup>:
  411b58:	int3   
  411b59:	(bad)  
  411b5a:	add    DWORD PTR [rax],eax
  411b5c:	add    BYTE PTR [rax],al
	...

0000000000411b60 <__imp_g_strdup_printf>:
  411b60:	fsub   DWORD PTR [rdi]
  411b62:	add    DWORD PTR [rax],eax
  411b64:	add    BYTE PTR [rax],al
	...

0000000000411b68 <__imp_g_strerror>:
  411b68:	in     al,dx
  411b69:	(bad)  
  411b6a:	add    DWORD PTR [rax],eax
  411b6c:	add    BYTE PTR [rax],al
	...

0000000000411b70 <__imp_g_string_append_len>:
  411b70:	cld    
  411b71:	(bad)  
  411b72:	add    DWORD PTR [rax],eax
  411b74:	add    BYTE PTR [rax],al
	...

0000000000411b78 <__imp_g_string_free>:
  411b78:	adc    al,0x28
  411b7a:	add    DWORD PTR [rax],eax
  411b7c:	add    BYTE PTR [rax],al
	...

0000000000411b80 <__imp_g_string_insert_c>:
  411b80:	and    al,0x28
  411b82:	add    DWORD PTR [rax],eax
  411b84:	add    BYTE PTR [rax],al
	...

0000000000411b88 <__imp_g_string_sized_new>:
  411b88:	cmp    BYTE PTR [rax],ch
  411b8a:	add    DWORD PTR [rax],eax
  411b8c:	add    BYTE PTR [rax],al
	...

0000000000411b90 <__imp_g_strlcpy>:
  411b90:	push   rax
  411b91:	sub    BYTE PTR [rcx],al
  411b93:	add    BYTE PTR [rax],al
  411b95:	add    BYTE PTR [rax],al
	...

0000000000411b98 <__imp_g_strndup>:
  411b98:	pop    rsp
  411b99:	sub    BYTE PTR [rcx],al
  411b9b:	add    BYTE PTR [rax],al
  411b9d:	add    BYTE PTR [rax],al
	...

0000000000411ba0 <__imp_g_utf16_to_utf8>:
  411ba0:	push   0x128
  411ba5:	add    BYTE PTR [rax],al
	...

0000000000411ba8 <__imp_g_utf8_to_utf16>:
  411ba8:	jl     411bd2 <__imp_libintl_textdomain+0x2>
  411baa:	add    DWORD PTR [rax],eax
	...

0000000000411bb8 <__imp_libintl_bind_textdomain_codeset>:
  411bb8:	nop
  411bb9:	sub    BYTE PTR [rcx],al
  411bbb:	add    BYTE PTR [rax],al
  411bbd:	add    BYTE PTR [rax],al
	...

0000000000411bc0 <__imp_libintl_bindtextdomain>:
  411bc0:	mov    ah,0x28
  411bc2:	add    DWORD PTR [rax],eax
  411bc4:	add    BYTE PTR [rax],al
	...

0000000000411bc8 <__imp_libintl_gettext>:
  411bc8:	shr    BYTE PTR [rax],1
  411bca:	add    DWORD PTR [rax],eax
  411bcc:	add    BYTE PTR [rax],al
	...

0000000000411bd0 <__imp_libintl_textdomain>:
  411bd0:	in     al,0x28
  411bd2:	add    DWORD PTR [rax],eax
	...

0000000000411be0 <__imp_jpeg_CreateDecompress>:
  411be0:	cld    
  411be1:	sub    BYTE PTR [rcx],al
  411be3:	add    BYTE PTR [rax],al
  411be5:	add    BYTE PTR [rax],al
	...

0000000000411be8 <__imp_jpeg_destroy_decompress>:
  411be8:	adc    al,0x29
  411bea:	add    DWORD PTR [rax],eax
  411bec:	add    BYTE PTR [rax],al
	...

0000000000411bf0 <__imp_jpeg_finish_decompress>:
  411bf0:	xor    BYTE PTR [rcx],ch
  411bf2:	add    DWORD PTR [rax],eax
  411bf4:	add    BYTE PTR [rax],al
	...

0000000000411bf8 <__imp_jpeg_read_header>:
  411bf8:	sub    QWORD PTR [rcx],r8
  411bfb:	add    BYTE PTR [rax],al
  411bfd:	add    BYTE PTR [rax],al
	...

0000000000411c00 <__imp_jpeg_read_scanlines>:
  411c00:	(bad)  
  411c01:	sub    DWORD PTR [rcx],eax
  411c03:	add    BYTE PTR [rax],al
  411c05:	add    BYTE PTR [rax],al
	...

0000000000411c08 <__imp_jpeg_start_decompress>:
  411c08:	js     411c33 <__IAT_end__+0xb>
  411c0a:	add    DWORD PTR [rax],eax
  411c0c:	add    BYTE PTR [rax],al
	...

0000000000411c10 <__imp_jpeg_std_error>:
  411c10:	nop
  411c11:	sub    DWORD PTR [rcx],eax
  411c13:	add    BYTE PTR [rax],al
  411c15:	add    BYTE PTR [rax],al
	...

0000000000411c18 <__imp_jpeg_stdio_src>:
  411c18:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411c19:	sub    DWORD PTR [rcx],eax
	...

0000000000411c28 <__IAT_end__>:
  411c28:	fadd   DWORD PTR [rax]
  411c2a:	rex.R
  411c2b:	gs ins BYTE PTR es:[rdi],dx
  411c2d:	gs je  411c95 <__IAT_end__+0x6d>
  411c30:	rex.XB jb 411c9c <__IAT_end__+0x74>
  411c33:	je     411c9e <__IAT_end__+0x76>
  411c35:	movsxd esp,DWORD PTR [rcx+0x6c]
  411c38:	push   rbx
  411c39:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411c3e:	outs   dx,BYTE PTR ds:[rsi]
  411c3f:	add    cl,bh
  411c41:	add    BYTE PTR [rbp+0x6e],al
  411c44:	je     411cab <__IAT_end__+0x83>
  411c46:	jb     411c8b <__IAT_end__+0x63>
  411c48:	jb     411cb3 <__IAT_end__+0x8b>
  411c4a:	je     411cb5 <__IAT_end__+0x8d>
  411c4c:	movsxd esp,DWORD PTR [rcx+0x6c]
  411c4f:	push   rbx
  411c50:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411c55:	outs   dx,BYTE PTR ds:[rsi]
  411c56:	add    BYTE PTR [rax],al
  411c58:	(bad)  
  411c59:	add    DWORD PTR [rdi+0x65],eax
  411c5c:	je     411ca1 <__IAT_end__+0x79>
  411c5e:	jne    411cd2 <__IAT_end__+0xaa>
  411c60:	jb     411cc7 <__IAT_end__+0x9f>
  411c62:	outs   dx,BYTE PTR ds:[rsi]
  411c63:	je     411cb5 <__IAT_end__+0x8d>
  411c65:	jb     411cd6 <__IAT_end__+0xae>
  411c67:	movsxd esp,DWORD PTR [rbp+0x73]
  411c6a:	jae    411c6c <__IAT_end__+0x44>
  411c6c:	iret   
  411c6d:	add    DWORD PTR [rdi+0x65],eax
  411c70:	je     411cb5 <__IAT_end__+0x8d>
  411c72:	jne    411ce6 <__IAT_end__+0xbe>
  411c74:	jb     411cdb <__IAT_end__+0xb3>
  411c76:	outs   dx,BYTE PTR ds:[rsi]
  411c77:	je     411cc9 <__IAT_end__+0xa1>
  411c79:	jb     411cea <__IAT_end__+0xc2>
  411c7b:	movsxd esp,DWORD PTR [rbp+0x73]
  411c7e:	jae    411cc9 <__IAT_end__+0xa1>
  411c80:	fs add bl,dl
  411c83:	add    DWORD PTR [rdi+0x65],eax
  411c86:	je     411ccb <__IAT_end__+0xa3>
  411c88:	jne    411cfc <__IAT_end__+0xd4>
  411c8a:	jb     411cf1 <__IAT_end__+0xc9>
  411c8c:	outs   dx,BYTE PTR ds:[rsi]
  411c8d:	je     411ce3 <__IAT_end__+0xbb>
  411c8f:	push   0x64616572
  411c94:	rex.WB
  411c95:	add    BYTE PTR fs:[rax],al
  411c98:	adc    DWORD PTR [rdx],eax
  411c9a:	rex.RXB
  411c9b:	gs je  411cea <__IAT_end__+0xc2>
  411c9e:	(bad)  
  411c9f:	jae    411d15 <__IAT_end__+0xed>
  411ca1:	rex.RB jb 411d16 <__IAT_end__+0xee>
  411ca4:	outs   dx,DWORD PTR ds:[rsi]
  411ca5:	jb     411ca7 <__IAT_end__+0x7f>
  411ca7:	add    BYTE PTR [rip+0x74654702],ah        # 74a663af <libjpeg_8_dll_iname+0x746536af>
  411cad:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  411caf:	fs jne 411d1e <__IAT_end__+0xf6>
  411cb2:	gs rex.W (bad) 
  411cb5:	outs   dx,BYTE PTR ds:[rsi]
  411cb6:	fs ins BYTE PTR es:[rdi],dx
  411cb8:	add    BYTE PTR gs:[r8],al
  411cbc:	push   rdi
  411cbd:	add    al,BYTE PTR [rdi+0x65]
  411cc0:	je     411d12 <__IAT_end__+0xea>
  411cc2:	jb     411d33 <__IAT_end__+0x10b>
  411cc4:	movsxd eax,DWORD PTR [rcx+0x64]
  411cc7:	fs jb  411d2f <__IAT_end__+0x107>
  411cca:	jae    411d3f <__IAT_end__+0x117>
  411ccc:	add    BYTE PTR [rax],al
  411cce:	je     411cd2 <__IAT_end__+0xaa>
  411cd0:	rex.RXB
  411cd1:	gs je  411d27 <__IAT_end__+0xff>
  411cd4:	je     411d37 <__IAT_end__+0x10f>
  411cd6:	jb     411d4c <__IAT_end__+0x124>
  411cd8:	jne    411d4a <__IAT_end__+0x122>
  411cda:	rex.WB outs dx,BYTE PTR ds:[rsi]
  411cdc:	outs   dx,WORD PTR ds:[rsi]
  411cde:	add    BYTE PTR [r11+0x74654702],cl
  411ce5:	push   rbx
  411ce6:	jns    411d5b <__IAT_end__+0x133>
  411ce8:	je     411d4f <__IAT_end__+0x127>
  411cea:	ins    DWORD PTR es:[rdi],dx
  411ceb:	push   rsp
  411cec:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  411cf3:	ins    BYTE PTR es:[rdi],dx
  411cf4:	gs push rsp
  411cf6:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a600
  411cfd:	gs je  411d54 <__IAT_end__+0x12c>
  411d00:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  411d07:	je     411d09 <__IAT_end__+0xe1>
  411d09:	add    dl,bh
  411d0b:	add    cl,BYTE PTR [rcx+0x6e]
  411d0e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  411d16:	rex.XB jb 411d82 <__IAT_end__+0x15a>
  411d19:	je     411d84 <__IAT_end__+0x15c>
  411d1b:	movsxd esp,DWORD PTR [rcx+0x6c]
  411d1e:	push   rbx
  411d1f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411d24:	outs   dx,BYTE PTR ds:[rsi]
  411d25:	add    BYTE PTR [rbx+rax*1+0x4c],cl
  411d29:	gs (bad) 
  411d2b:	jbe    411d92 <__IAT_end__+0x16a>
  411d2d:	rex.XB jb 411d99 <__IAT_end__+0x171>
  411d30:	je     411d9b <__IAT_end__+0x173>
  411d32:	movsxd esp,DWORD PTR [rcx+0x6c]
  411d35:	push   rbx
  411d36:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411d3b:	outs   dx,BYTE PTR ds:[rsi]
  411d3c:	add    BYTE PTR [rax],al
  411d3e:	mov    esi,0x65755103
  411d43:	jb     411dbe <__IAT_end__+0x196>
  411d45:	push   rax
  411d46:	gs jb  411daf <__IAT_end__+0x187>
  411d49:	outs   dx,DWORD PTR ds:[rsi]
  411d4a:	jb     411db9 <__IAT_end__+0x191>
  411d4c:	(bad)  
  411d4d:	outs   dx,BYTE PTR ds:[rsi]
  411d4e:	movsxd esp,DWORD PTR [rbp+0x43]
  411d51:	outs   dx,DWORD PTR ds:[rsi]
  411d52:	jne    411dc2 <__IAT_end__+0x19a>
  411d54:	je     411dbb <__IAT_end__+0x193>
  411d56:	jb     411d58 <__IAT_end__+0x130>
  411d58:	add    eax,0x6c745204
  411d5d:	rex.B
  411d5e:	fs fs rex.RX jne 411dd1 <__IAT_end__+0x1a9>
  411d63:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  411d67:	outs   dx,BYTE PTR ds:[rsi]
  411d68:	push   rsp
  411d69:	(bad)  
  411d6a:	(bad)  
  411d6b:	ins    BYTE PTR es:[rdi],dx
  411d6c:	add    BYTE PTR gs:[rsi],al
  411d6f:	add    al,0x52
  411d71:	je     411ddf <__IAT_end__+0x1b7>
  411d73:	rex.XB (bad) 
  411d75:	jo     411deb <__IAT_end__+0x1c3>
  411d77:	jne    411deb <__IAT_end__+0x1c3>
  411d79:	rex.XB outs dx,DWORD PTR gs:[rsi]
  411d7c:	outs   dx,BYTE PTR ds:[rsi]
  411d7d:	je     411de4 <__IAT_end__+0x1bc>
  411d7f:	js     411df5 <__IAT_end__+0x1cd>
  411d81:	add    BYTE PTR [rip+0x6c745204],cl        # 6cb56f8b <libjpeg_8_dll_iname+0x6c74428b>
  411d87:	rex.WR outs dx,DWORD PTR ds:[rsi]
  411d89:	outs   dx,DWORD PTR ds:[rsi]
  411d8a:	imul   esi,DWORD PTR [rbp+0x70],0x46
  411d8e:	jne    411dfe <__IAT_end__+0x1d6>
  411d90:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  411d94:	outs   dx,BYTE PTR ds:[rsi]
  411d95:	rex.RB outs dx,BYTE PTR ds:[rsi]
  411d97:	je     411e0b <__IAT_end__+0x1e3>
  411d99:	jns    411d9b <__IAT_end__+0x173>
  411d9b:	add    BYTE PTR [rsp+rax*1],dl
  411d9e:	push   rdx
  411d9f:	je     411e0d <__IAT_end__+0x1e5>
  411da1:	push   rsi
  411da2:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  411da9:	outs   dx,BYTE PTR ds:[rsi]
  411daa:	ja     411e15 <__IAT_end__+0x1ed>
  411dac:	outs   dx,BYTE PTR ds:[rsi]
  411dad:	add    BYTE PTR fs:[rax],al
  411db0:	movabs ds:0x61686e5574655304,eax
  411db9:	outs   dx,BYTE PTR ds:[rsi]
  411dba:	fs ins BYTE PTR es:[rdi],dx
  411dbc:	gs fs rex.RB js 411e24 <__IAT_end__+0x1fc>
  411dc1:	gs jo  411e38 <__IAT_end__+0x210>
  411dc4:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  411dcb:	gs jb  411dce <__IAT_end__+0x1a6>
  411dce:	mov    al,0x4
  411dd0:	push   rbx
  411dd1:	ins    BYTE PTR es:[rdi],dx
  411dd2:	gs gs jo 411dd6 <__IAT_end__+0x1ae>
  411dd6:	mov    esi,0x72655404
  411ddb:	ins    DWORD PTR es:[rdi],dx
  411ddc:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  411de3:	outs   dx,DWORD PTR ds:[rsi]
  411de4:	movsxd esp,DWORD PTR [rbp+0x73]
  411de7:	jae    411de9 <__IAT_end__+0x1c1>
  411de9:	add    ch,al
  411deb:	add    al,0x54
  411ded:	ins    BYTE PTR es:[rdi],dx
  411dee:	jae    411e37 <__IAT_end__+0x20f>
  411df0:	gs je  411e49 <__IAT_end__+0x221>
  411df3:	(bad)  
  411df4:	ins    BYTE PTR es:[rdi],dx
  411df5:	jne    411e5c <__IAT_end__+0x234>
  411df7:	add    dl,dl
  411df9:	add    al,0x55
  411dfb:	outs   dx,BYTE PTR ds:[rsi]
  411dfc:	push   0x6c646e61
  411e01:	gs fs rex.RB js 411e69 <__IAT_end__+0x241>
  411e06:	gs jo  411e7d <__IAT_end__+0x255>
  411e09:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  411e10:	gs jb  411e13 <__IAT_end__+0x1eb>
  411e13:	add    al,dh
  411e15:	add    al,0x56
  411e17:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  411e1e:	jb     411e8f <__IAT_end__+0x267>
  411e20:	je     411e87 <__IAT_end__+0x25f>
  411e22:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  411e26:	repnz add al,0x56
  411e29:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  411e30:	jne    411e97 <__IAT_end__+0x26f>
  411e32:	jb     411ead <__IAT_end__+0x285>
  411e34:	add    BYTE PTR [rax],al
  411e36:	(bad)  
  411e37:	add    BYTE PTR [rdi+0x5f],bl
  411e3a:	rex.XB pop r15
  411e3c:	jae    411eae <__IAT_end__+0x286>
  411e3e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  411e42:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  411e49:	ins    BYTE PTR es:[rdi],dx
  411e4a:	gs jb  411e4d <__IAT_end__+0x225>
  411e4d:	add    BYTE PTR [rbp+0x0],al
  411e50:	pop    rdi
  411e51:	pop    rdi
  411e52:	(bad)  
  411e53:	jb     411ebc <__IAT_end__+0x294>
  411e55:	movsxd eax,DWORD PTR [rax]
  411e57:	add    BYTE PTR [rsi+0x0],al
  411e5a:	pop    rdi
  411e5b:	pop    rdi
  411e5c:	(bad)  
  411e5d:	jb     411ec6 <__IAT_end__+0x29e>
  411e5f:	jbe    411e61 <__IAT_end__+0x239>
  411e61:	add    BYTE PTR [rsi+0x0],cl
  411e64:	pop    rdi
  411e65:	pop    rdi
  411e66:	fs ins BYTE PTR es:[rdi],dx
  411e68:	ins    BYTE PTR es:[rdi],dx
  411e69:	outs   dx,DWORD PTR ds:[rsi]
  411e6a:	outs   dx,BYTE PTR ds:[rsi]
  411e6b:	gs js  411ed7 <__IAT_end__+0x2af>
  411e6e:	je     411e70 <__IAT_end__+0x248>
  411e70:	push   rcx
  411e71:	add    BYTE PTR [rdi+0x5f],bl
  411e74:	addr32 gs je 411ee5 <__IAT_end__+0x2bd>
  411e78:	(bad)  
  411e79:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  411e80:	push   rdx
  411e81:	add    BYTE PTR [rdi+0x5f],bl
  411e84:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  411e8b:	add    BYTE PTR [rbx+0x0],dl
  411e8e:	pop    rdi
  411e8f:	pop    rdi
  411e90:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  411e97:	movsxd eax,DWORD PTR [rax]
  411e99:	add    BYTE PTR [rdx+0x0],bl
  411e9c:	pop    rdi
  411e9d:	pop    rdi
  411e9e:	ins    BYTE PTR es:[rdi],dx
  411e9f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  411ea2:	jbe    411f03 <__IAT_end__+0x2db>
  411ea4:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  411eab:	add    BYTE PTR [rdi+0x5f],bl
  411eae:	jae    411f15 <__IAT_end__+0x2ed>
  411eb0:	je     411f11 <__IAT_end__+0x2e9>
  411eb2:	(bad)  
  411eb3:	jo     411f25 <__IAT_end__+0x2fd>
  411eb5:	pop    rdi
  411eb6:	je     411f31 <__IAT_end__+0x309>
  411eb8:	jo     411f1f <__IAT_end__+0x2f7>
  411eba:	add    BYTE PTR [rax],al
  411ebc:	(bad)  
  411ebd:	add    BYTE PTR [rdi+0x5f],bl
  411ec0:	jae    411f27 <__IAT_end__+0x2ff>
  411ec2:	je     411f39 <__IAT_end__+0x311>
  411ec4:	jae    411f2b <__IAT_end__+0x303>
  411ec6:	jb     411f35 <__IAT_end__+0x30d>
  411ec8:	(bad)  
  411ec9:	je     411f33 <__IAT_end__+0x30b>
  411ecb:	gs jb  411f40 <__IAT_end__+0x318>
  411ece:	add    BYTE PTR [rax],al
  411ed0:	jno    411ed2 <__IAT_end__+0x2aa>
  411ed2:	pop    rdi
  411ed3:	(bad)  
  411ed4:	movsxd ebp,DWORD PTR [rbp+0x64]
  411ed7:	ins    BYTE PTR es:[rdi],dx
  411ed8:	outs   dx,BYTE PTR ds:[rsi]
  411ed9:	add    BYTE PTR [rax+0x0],bh
  411edc:	pop    rdi
  411edd:	(bad)  
  411ede:	ins    DWORD PTR es:[rdi],dx
  411edf:	jae    411f48 <__IAT_end__+0x320>
  411ee1:	pop    rdi
  411ee2:	gs js  411f4e <__IAT_end__+0x326>
  411ee5:	je     411ee7 <__IAT_end__+0x2bf>
  411ee7:	add    BYTE PTR [rdx+0x65635f00],cl
  411eed:	js     411f58 <__IAT_end__+0x330>
  411eef:	je     411ef1 <__IAT_end__+0x2c9>
  411ef1:	add    BYTE PTR [rdx+0x72655f00],bh
  411ef7:	jb     411f67 <__IAT_end__+0x33f>
  411ef9:	outs   dx,DWORD PTR ds:[rsi]
  411efa:	add    BYTE PTR [rax],al
  411efc:	fiadd  DWORD PTR [rax]
  411efe:	pop    rdi
  411eff:	ins    WORD PTR es:[rdi],dx
  411f01:	outs   dx,DWORD PTR ds:[rsi]
  411f02:	fs add BYTE PTR gs:[rax],al
  411f06:	sbb    al,BYTE PTR [rcx]
  411f08:	pop    rdi
  411f09:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  411f10:	ins    DWORD PTR es:[rdi],dx
  411f11:	add    BYTE PTR [rax+0x6f6c5f01],al
  411f17:	movsxd ebp,DWORD PTR [rbx+0x0]
  411f1a:	and    eax,0x6e6f5f02
  411f1f:	gs js  411f8b <__IAT_end__+0x363>
  411f22:	je     411f24 <__IAT_end__+0x2fc>
  411f24:	leave  
  411f25:	add    bl,BYTE PTR [rdi+0x75]
  411f28:	outs   dx,BYTE PTR ds:[rsi]
  411f29:	ins    BYTE PTR es:[rdi],dx
  411f2a:	outs   dx,DWORD PTR ds:[rsi]
  411f2b:	movsxd ebp,DWORD PTR [rbx+0x0]
  411f2e:	test   DWORD PTR [rbx],eax
  411f30:	(bad)  
  411f31:	(bad)  
  411f32:	outs   dx,DWORD PTR ds:[rsi]
  411f33:	jb     411fa9 <__IAT_end__+0x381>
  411f35:	add    BYTE PTR [rsi+0x6c616303],dl
  411f3b:	ins    BYTE PTR es:[rdi],dx
  411f3c:	outs   dx,DWORD PTR ds:[rsi]
  411f3d:	movsxd eax,DWORD PTR [rax]
  411f3f:	add    BYTE PTR [rbx+0x69786503],ah
  411f45:	je     411f47 <__IAT_end__+0x31f>
  411f47:	add    BYTE PTR [rdi+0x6c636603],ah
  411f4d:	outs   dx,DWORD PTR ds:[rsi]
  411f4e:	jae    411fb5 <__IAT_end__+0x38d>
  411f50:	add    BYTE PTR [rax],al
  411f52:	test   al,0x3
  411f54:	outs   dx,WORD PTR gs:[rsi]
  411f57:	data16 add BYTE PTR [rax],al
  411f5a:	mov    dh,0x3
  411f5c:	data16 jo 411fd1 <__IAT_end__+0x3a9>
  411f5f:	imul   ebp,DWORD PTR [rsi+0x74],0x3bc0066
  411f66:	data16 jb 411fce <__IAT_end__+0x3a6>
  411f69:	(bad)  
  411f6a:	add    BYTE PTR fs:[rbp+0x65726603],bh
  411f71:	add    BYTE PTR gs:[rax],al
  411f74:	ret    
  411f75:	add    esp,DWORD PTR [rsi+0x73]
  411f78:	gs imul eax,DWORD PTR gs:[rax],0xffffffc5
  411f7d:	add    esp,DWORD PTR [rsi+0x74]
  411f80:	gs ins BYTE PTR es:[rdi],dx
  411f82:	ins    BYTE PTR es:[rdi],dx
  411f83:	add    al,cl
  411f85:	add    esp,DWORD PTR [rsi+0x77]
  411f88:	jb     411ff3 <__IAT_end__+0x3cb>
  411f8a:	je     411ff1 <__IAT_end__+0x3c9>
  411f8c:	add    BYTE PTR [rax],al
  411f8e:	test   BYTE PTR [rbx],0x6d
  411f91:	(bad)  
  411f92:	ins    BYTE PTR es:[rdi],dx
  411f93:	ins    BYTE PTR es:[rdi],dx
  411f94:	outs   dx,DWORD PTR ds:[rsi]
  411f95:	movsxd eax,DWORD PTR [rax]
  411f97:	add    ch,bh
  411f99:	add    ebp,DWORD PTR [rbp+0x65]
  411f9c:	ins    DWORD PTR es:[rdi],dx
  411f9d:	movsxd ebp,DWORD PTR [rbp+0x70]
  411fa0:	add    BYTE PTR [rax],al
  411fa2:	inc    BYTE PTR [rbx]
  411fa4:	ins    DWORD PTR es:[rdi],dx
  411fa5:	gs ins DWORD PTR es:[rdi],dx
  411fa7:	movsxd esi,DWORD PTR [rax+0x79]
  411faa:	add    BYTE PTR [rax],al
  411fac:	sbb    al,0x4
  411fae:	jae    412019 <__IAT_end__+0x3f1>
  411fb0:	outs   dx,BYTE PTR ds:[esi]
  411fb2:	(bad)  
  411fb3:	ins    BYTE PTR es:[rdi],dx
  411fb4:	add    BYTE PTR [rax],al
  411fb6:	xor    DWORD PTR [rbx+rsi*2],eax
  411fb9:	je     41202d <__IAT_end__+0x405>
  411fbb:	ins    BYTE PTR es:[rdi],dx
  411fbc:	outs   dx,BYTE PTR gs:[rsi]
  411fbe:	add    BYTE PTR [rax],al
  411fc0:	xor    al,0x4
  411fc2:	jae    412038 <__IAT_end__+0x410>
  411fc4:	jb     412034 <__IAT_end__+0x40c>
  411fc6:	movsxd ebp,DWORD PTR [rbp+0x70]
  411fc9:	add    BYTE PTR [rsp+rax*1+0x76],dl
  411fcd:	data16 jo 412042 <__IAT_end__+0x41a>
  411fd0:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  411fd7:	add    BYTE PTR [rbx],bh
  411fd9:	add    BYTE PTR [rdi+0x69],ah
  411fdc:	ins    DWORD PTR es:[rdi],dx
  411fdd:	jo     41203e <__IAT_end__+0x416>
  411fdf:	movsxd ebp,DWORD PTR [rax+0x61]
  411fe2:	outs   dx,BYTE PTR ds:[rsi]
  411fe3:	outs   dx,BYTE PTR ds:[rsi]
  411fe4:	gs ins BYTE PTR es:[rdi],dx
  411fe6:	pop    rdi
  411fe7:	outs   dx,BYTE PTR ds:[rsi]
  411fe8:	gs ja  411feb <__IAT_end__+0x3c3>
  411feb:	add    BYTE PTR [rbp+0x6d696700],bl
  411ff1:	jo     412052 <__IAT_end__+0x42a>
  411ff3:	fs gs jae 41206b <__IAT_end__+0x443>
  411ff7:	jb     412068 <__IAT_end__+0x440>
  411ff9:	jns    41205a <__IAT_end__+0x432>
  411ffb:	jo     41205e <__IAT_end__+0x436>
  411ffd:	jb     412060 <__IAT_end__+0x438>
  411fff:	ins    DWORD PTR es:[rdi],dx
  412000:	jae    412002 <__IAT_end__+0x3da>
  412002:	add    BYTE PTR [rax],al
  412004:	stos   DWORD PTR es:[rdi],eax
  412005:	add    BYTE PTR [rdi+0x69],ah
  412008:	ins    DWORD PTR es:[rdi],dx
  412009:	jo     41206a <__IAT_end__+0x442>
  41200b:	fs jb  41206f <__IAT_end__+0x447>
  41200e:	ja     412071 <__IAT_end__+0x449>
  412010:	(bad)  
  412011:	ins    BYTE PTR es:[rdi],dx
  412012:	gs pop rdi
  412014:	fs gs je 412079 <__IAT_end__+0x451>
  412018:	movsxd ebp,DWORD PTR [rax+0x0]
  41201b:	add    BYTE PTR [rax+rax*1+0x706d6967],ch
  412022:	pop    rdi
  412023:	fs jb  412087 <__IAT_end__+0x45f>
  412026:	ja     412089 <__IAT_end__+0x461>
  412028:	(bad)  
  412029:	ins    BYTE PTR es:[rdi],dx
  41202a:	gs pop rdi
  41202c:	imul   bp,WORD PTR [rsp+rbp*2+0x0],0x0
  412033:	add    BYTE PTR [rbp+0x6d696700],ch
  412039:	jo     41209a <__IAT_end__+0x472>
  41203b:	fs jb  41209f <__IAT_end__+0x477>
  41203e:	ja     4120a1 <__IAT_end__+0x479>
  412040:	(bad)  
  412041:	ins    BYTE PTR es:[rdi],dx
  412042:	gs pop rdi
  412044:	data16 ins BYTE PTR es:[rdi],dx
  412046:	jne    4120bb <__IAT_end__+0x493>
  412048:	push   0xffffffffb0000000
  41204d:	add    BYTE PTR [rdi+0x69],ah
  412050:	ins    DWORD PTR es:[rdi],dx
  412051:	jo     4120b2 <__IAT_end__+0x48a>
  412053:	fs jb  4120b7 <__IAT_end__+0x48f>
  412056:	ja     4120b9 <__IAT_end__+0x491>
  412058:	(bad)  
  412059:	ins    BYTE PTR es:[rdi],dx
  41205a:	gs pop rdi
  41205c:	addr32 gs je 412060 <__IAT_end__+0x438>
  412060:	(bad)
  412065:	jo     4120c6 <__IAT_end__+0x49e>
  412067:	imul   ebp,DWORD PTR [rbp+0x61],0x615f6567
  41206e:	fs fs pop rdi
  412071:	push   0x64697567
  412076:	add    BYTE PTR gs:[rbp+0x1],ah
  41207a:	imul   ebp,DWORD PTR [ebp+0x70],0x616d695f
  412082:	addr32 gs pop rdi
  412085:	(bad)  
  412086:	fs fs pop rdi
  412089:	jbe    4120f2 <__IAT_end__+0x4ca>
  41208b:	jne    4120f6 <__IAT_end__+0x4ce>
  41208d:	fs add BYTE PTR gs:[rdi+0x1],ah
  412092:	imul   ebp,DWORD PTR [ebp+0x70],0x616d695f
  41209a:	addr32 gs pop rdi
  41209d:	(bad)  
  41209e:	je     412114 <__IAT_end__+0x4ec>
  4120a0:	(bad)  
  4120a1:	movsxd ebp,DWORD PTR [rax+0x5f]
  4120a4:	jo     412107 <__IAT_end__+0x4df>
  4120a6:	jb     412109 <__IAT_end__+0x4e1>
  4120a8:	jae    412113 <__IAT_end__+0x4eb>
  4120aa:	je     412111 <__IAT_end__+0x4e9>
  4120ac:	add    BYTE PTR [rax],al
  4120ae:	add    BYTE PTR [rax],al
  4120b0:	imul   eax,DWORD PTR [rcx],0x706d6967
  4120b6:	pop    rdi
  4120b7:	imul   ebp,DWORD PTR [rbp+0x61],0x635f6567
  4120be:	ins    BYTE PTR es:[rdi],dx
  4120bf:	gs (bad) 
  4120c1:	outs   dx,BYTE PTR ds:[rsi]
  4120c2:	pop    rdi
  4120c3:	(bad)  
  4120c4:	ins    BYTE PTR es:[rdi],dx
  4120c5:	ins    BYTE PTR es:[rdi],dx
  4120c6:	add    BYTE PTR [rax],al
  4120c8:	outs   dx,DWORD PTR ds:[rsi]
  4120c9:	add    DWORD PTR [rdi+0x69],esp
  4120cc:	ins    DWORD PTR es:[rdi],dx
  4120cd:	jo     41212e <__IAT_end__+0x506>
  4120cf:	imul   ebp,DWORD PTR [rbp+0x61],0x645f6567
  4120d6:	gs ins BYTE PTR es:[rdi],dx
  4120d8:	gs je  412140 <__IAT_end__+0x518>
  4120db:	add    BYTE PTR [rcx+0x6d696701],al
  4120e1:	jo     412142 <__IAT_end__+0x51a>
  4120e3:	imul   ebp,DWORD PTR [rbp+0x61],0x675f6567
  4120ea:	gs je  41214c <__IAT_end__+0x524>
  4120ed:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4120f0:	outs   dx,DWORD PTR ds:[rsi]
  4120f1:	jb     412160 <__IAT_end__+0x538>
  4120f3:	(bad)  
  4120f4:	jo     4120f6 <__IAT_end__+0x4ce>
  4120f6:	add    BYTE PTR [rax],al
  4120f8:	mov    es,WORD PTR [rcx]
  4120fa:	imul   ebp,DWORD PTR [ebp+0x70],0x616d695f
  412102:	addr32 gs pop rdi
  412105:	addr32 gs je 412168 <__IAT_end__+0x540>
  412109:	ins    BYTE PTR es:[rdi],dx
  41210a:	(bad)  
  41210b:	jns    412172 <__IAT_end__+0x54a>
  41210d:	jb     412182 <__IAT_end__+0x55a>
  41210f:	add    BYTE PTR [rax+0x6d696701],ch
  412115:	jo     412176 <__IAT_end__+0x54e>
  412117:	imul   ebp,DWORD PTR [rbp+0x61],0x685f6567
  41211e:	imul   esp,DWORD PTR gs:[rdi+0x68],0x1a90074
  412126:	imul   ebp,DWORD PTR [ebp+0x70],0x616d695f
  41212e:	addr32 gs pop rdi
  412131:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  412138:	movsxd ebp,DWORD PTR [rax+0x61]
  41213b:	outs   dx,BYTE PTR ds:[rsi]
  41213c:	outs   dx,BYTE PTR ds:[rsi]
  41213d:	gs ins BYTE PTR es:[rdi],dx
  41213f:	add    BYTE PTR [rdx+0x6d696701],ch
  412145:	jo     4121a6 <__IAT_end__+0x57e>
  412147:	imul   ebp,DWORD PTR [rbp+0x61],0x695f6567
  41214e:	outs   dx,BYTE PTR ds:[rsi]
  41214f:	jae    4121b6 <__IAT_end__+0x58e>
  412151:	jb     4121c7 <__IAT_end__+0x59f>
  412153:	pop    rdi
  412154:	ins    BYTE PTR es:[rdi],dx
  412155:	(bad)  
  412156:	jns    4121bd <__IAT_end__+0x595>
  412158:	jb     41215a <__IAT_end__+0x532>
  41215a:	add    BYTE PTR [rax],al
  41215c:	stos   DWORD PTR es:[rdi],eax
  41215d:	add    DWORD PTR [rdi+0x69],esp
  412160:	ins    DWORD PTR es:[rdi],dx
  412161:	jo     4121c2 <__IAT_end__+0x59a>
  412163:	imul   ebp,DWORD PTR [rbp+0x61],0x695f6567
  41216a:	outs   dx,BYTE PTR ds:[rsi]
  41216b:	jae    4121d2 <__IAT_end__+0x5aa>
  41216d:	jb     4121e3 <__IAT_end__+0x5bb>
  41216f:	pop    rdi
  412170:	jbe    4121d7 <__IAT_end__+0x5af>
  412172:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  412176:	jae    412178 <__IAT_end__+0x550>
  412178:	mov    eax,0x6d696701
  41217d:	jo     4121de <__IAT_end__+0x5b6>
  41217f:	imul   ebp,DWORD PTR [rbp+0x61],0x6e5f6567
  412186:	gs ja  412189 <__IAT_end__+0x561>
  412189:	add    BYTE PTR [rax],al
  41218b:	add    dl,cl
  41218d:	add    DWORD PTR [rdi+0x69],esp
  412190:	ins    DWORD PTR es:[rdi],dx
  412191:	jo     4121f2 <__IAT_end__+0x5ca>
  412193:	imul   ebp,DWORD PTR [rbp+0x61],0x725f6567
  41219a:	gs jae 412206 <__IAT_end__+0x5de>
  41219d:	jp     412204 <__IAT_end__+0x5dc>
  41219f:	add    bh,dl
  4121a1:	add    DWORD PTR [rdi+0x69],esp
  4121a4:	ins    DWORD PTR es:[rdi],dx
  4121a5:	jo     412206 <__IAT_end__+0x5de>
  4121a7:	imul   ebp,DWORD PTR [rbp+0x61],0x735f6567
  4121ae:	gs je  412210 <__IAT_end__+0x5e8>
  4121b1:	(bad)  
  4121b2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
  4121b6:	gs pop rdi
  4121b8:	ins    BYTE PTR es:[rdi],dx
  4121b9:	(bad)  
  4121ba:	jns    412221 <__IAT_end__+0x5f9>
  4121bc:	jb     4121be <__IAT_end__+0x596>
  4121be:	add    BYTE PTR [rax],al
  4121c0:	fiadd  DWORD PTR [rcx]
  4121c2:	imul   ebp,DWORD PTR [ebp+0x70],0x616d695f
  4121ca:	addr32 gs pop rdi
  4121cd:	jae    412234 <__IAT_end__+0x60c>
  4121cf:	je     412230 <__IAT_end__+0x608>
  4121d1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4121d4:	outs   dx,DWORD PTR ds:[rsi]
  4121d5:	jb     412244 <__IAT_end__+0x61c>
  4121d7:	(bad)  
  4121d8:	jo     4121da <__IAT_end__+0x5b2>
  4121da:	add    BYTE PTR [rax],al
  4121dc:	fld    QWORD PTR [rcx]
  4121de:	imul   ebp,DWORD PTR [ebp+0x70],0x616d695f
  4121e6:	addr32 gs pop rdi
  4121e9:	jae    412250 <__IAT_end__+0x628>
  4121eb:	je     41224c <__IAT_end__+0x624>
  4121ed:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  4121f4:	add    BYTE PTR gs:[rax],al
  4121f7:	add    dh,bl
  4121f9:	add    DWORD PTR [rdi+0x69],esp
  4121fc:	ins    DWORD PTR es:[rdi],dx
  4121fd:	jo     41225e <__IAT_end__+0x636>
  4121ff:	imul   ebp,DWORD PTR [rbp+0x61],0x735f6567
  412206:	gs je  412268 <__IAT_end__+0x640>
  412209:	jb     412270 <__IAT_end__+0x648>
  41220b:	jae    41227c <__IAT_end__+0x654>
  41220d:	ins    BYTE PTR es:[rdi],dx
  41220e:	jne    412284 <__IAT_end__+0x65c>
  412210:	imul   ebp,DWORD PTR [rdi+0x6e],0x6701e000
  412217:	imul   ebp,DWORD PTR [rbp+0x70],0x616d695f
  41221e:	addr32 gs pop rdi
  412221:	jae    412288 <__IAT_end__+0x660>
  412223:	je     412284 <__IAT_end__+0x65c>
  412225:	jne    412295 <__IAT_end__+0x66d>
  412227:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x6701e100
  41222f:	imul   ebp,DWORD PTR [rbp+0x70],0x616d695f
  412236:	addr32 gs pop rdi
  412239:	jne    4122a9 <__IAT_end__+0x681>
  41223b:	outs   dx,DWORD PTR fs:[rsi]
  41223d:	pop    rdi
  41223e:	imul   esi,DWORD PTR fs:[rbx+0x61],0x656c62
  412246:	add    BYTE PTR [rax],al
  412248:	loop   41224b <__IAT_end__+0x623>
  41224a:	imul   ebp,DWORD PTR [ebp+0x70],0x616d695f
  412252:	addr32 gs pop rdi
  412255:	jne    4122c5 <__IAT_end__+0x69d>
  412257:	outs   dx,DWORD PTR fs:[rsi]
  412259:	pop    rdi
  41225a:	outs   dx,BYTE PTR gs:[rsi]
  41225c:	(bad)  
  41225d:	(bad)  
  41225e:	ins    BYTE PTR es:[rdi],dx
  41225f:	add    BYTE PTR gs:[rax],al
  412262:	add    BYTE PTR [rax],al
  412264:	jmp    6daa896a <libjpeg_8_dll_iname+0x6d695c6a>
  412269:	jo     4122ca <__IAT_end__+0x6a2>
  41226b:	imul   ebp,DWORD PTR [rbp+0x61],0x775f6567
  412272:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x1ec0000
  41227a:	imul   ebp,DWORD PTR [ebp+0x70],0x736e695f
  412282:	je     4122e5 <__IAT_end__+0x6bd>
  412284:	ins    BYTE PTR es:[rdi],dx
  412285:	ins    BYTE PTR es:[rdi],dx
  412286:	pop    rdi
  412287:	jo     4122fb <__IAT_end__+0x6d3>
  412289:	outs   dx,DWORD PTR ds:[rsi]
  41228a:	movsxd esp,DWORD PTR [rbp+0x64]
  41228d:	jne    412301 <__IAT_end__+0x6d9>
  41228f:	add    BYTE PTR gs:[rax],al
  412292:	add    BYTE PTR [rax],al
  412294:	(bad)  
  412295:	add    ah,BYTE PTR [rdi+0x69]
  412298:	ins    DWORD PTR es:[rdi],dx
  412299:	jo     4122fa <__IAT_end__+0x6d2>
  41229b:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x7465735f
  4122a3:	pop    rdi
  4122a4:	outs   dx,BYTE PTR ds:[rsi]
  4122a5:	(bad)  
  4122a6:	ins    DWORD PTR es:[rdi],dx
  4122a7:	add    BYTE PTR gs:[rax],al
  4122aa:	add    BYTE PTR [rax],al
  4122ac:	or     BYTE PTR [rdx],al
  4122ae:	imul   ebp,DWORD PTR [ebp+0x70],0x6574695f
  4122b6:	ins    DWORD PTR es:[rdi],dx
  4122b7:	pop    rdi
  4122b8:	jae    41231f <__IAT_end__+0x6f7>
  4122ba:	je     41231b <__IAT_end__+0x6f3>
  4122bc:	je     41231f <__IAT_end__+0x6f7>
  4122be:	je     412334 <__IAT_end__+0x70c>
  4122c0:	outs   dx,DWORD PTR ds:[rsi]
  4122c1:	outs   dx,DWORD PTR ds:[rsi]
  4122c2:	add    BYTE PTR [rax],al
  4122c4:	or     DWORD PTR [rdx],eax
  4122c6:	imul   ebp,DWORD PTR [ebp+0x70],0x6574695f
  4122ce:	ins    DWORD PTR es:[rdi],dx
  4122cf:	pop    rdi
  4122d0:	jae    412337 <__IAT_end__+0x70f>
  4122d2:	je     412333 <__IAT_end__+0x70b>
  4122d4:	jbe    41233f <__IAT_end__+0x717>
  4122d6:	jae    412341 <__IAT_end__+0x719>
  4122d8:	(bad)  
  4122d9:	ins    BYTE PTR es:[rdi],dx
  4122da:	add    BYTE PTR gs:[rdx+rax*1],dl
  4122de:	imul   ebp,DWORD PTR [ebp+0x70],0x79616c5f
  4122e6:	gs jb  412348 <__IAT_end__+0x720>
  4122e9:	(bad)  
  4122ea:	fs fs pop rdi
  4122ed:	ins    DWORD PTR es:[rdi],dx
  4122ee:	(bad)  
  4122ef:	jae    41235c <__IAT_end__+0x734>
  4122f1:	add    BYTE PTR [rax],al
  4122f3:	add    BYTE PTR [rsi],dl
  4122f5:	add    ah,BYTE PTR [rdi+0x69]
  4122f8:	ins    DWORD PTR es:[rdi],dx
  4122f9:	jo     41235a <__IAT_end__+0x732>
  4122fb:	ins    BYTE PTR es:[rdi],dx
  4122fc:	(bad)  
  4122fd:	jns    412364 <__IAT_end__+0x73c>
  4122ff:	jb     412360 <__IAT_end__+0x738>
  412301:	movsxd esi,DWORD PTR [rdx+0x65]
  412304:	(bad)  
  412305:	je     41236c <__IAT_end__+0x744>
  412307:	pop    rdi
  412308:	ins    DWORD PTR es:[rdi],dx
  412309:	(bad)  
  41230a:	jae    412377 <__IAT_end__+0x74f>
  41230c:	add    BYTE PTR [rax],al
  41230e:	add    BYTE PTR [rax],al
  412310:	and    DWORD PTR [rdx],eax
  412312:	imul   ebp,DWORD PTR [ebp+0x70],0x79616c5f
  41231a:	gs jb  41237c <__IAT_end__+0x754>
  41231d:	addr32 jb 41238f <__IAT_end__+0x767>
  412320:	jne    412392 <__IAT_end__+0x76a>
  412322:	pop    rdi
  412323:	outs   dx,BYTE PTR ds:[rsi]
  412324:	gs ja  412327 <__IAT_end__+0x6ff>
  412327:	add    BYTE PTR [rdx+rax*1],ah
  41232a:	imul   ebp,DWORD PTR [ebp+0x70],0x79616c5f
  412332:	gs jb  412394 <__IAT_end__+0x76c>
  412335:	outs   dx,BYTE PTR ds:[rsi]
  412336:	gs ja  412339 <__IAT_end__+0x711>
  412339:	add    BYTE PTR [rax],al
  41233b:	add    BYTE PTR [rsi],ch
  41233d:	add    ah,BYTE PTR [rdi+0x69]
  412340:	ins    DWORD PTR es:[rdi],dx
  412341:	jo     4123a2 <__IAT_end__+0x77a>
  412343:	ins    BYTE PTR es:[rdi],dx
  412344:	(bad)  
  412345:	jns    4123ac <__IAT_end__+0x784>
  412347:	jb     4123a8 <__IAT_end__+0x780>
  412349:	jae    4123b0 <__IAT_end__+0x788>
  41234b:	je     4123ac <__IAT_end__+0x784>
  41234d:	(bad)  
  41234e:	jo     4123c0 <__IAT_end__+0x798>
  412350:	ins    BYTE PTR es:[rdi],dx
  412351:	jns    4123b2 <__IAT_end__+0x78a>
  412353:	ins    DWORD PTR es:[rdi],dx
  412354:	(bad)  
  412355:	jae    4123c2 <__IAT_end__+0x79a>
  412357:	add    BYTE PTR [rax],dh
  412359:	add    ah,BYTE PTR [rdi+0x69]
  41235c:	ins    DWORD PTR es:[rdi],dx
  41235d:	jo     4123be <__IAT_end__+0x796>
  41235f:	ins    BYTE PTR es:[rdi],dx
  412360:	(bad)  
  412361:	jns    4123c8 <__IAT_end__+0x7a0>
  412363:	jb     4123c4 <__IAT_end__+0x79c>
  412365:	jae    4123cc <__IAT_end__+0x7a4>
  412367:	je     4123c8 <__IAT_end__+0x7a0>
  412369:	ins    BYTE PTR es:[rdi],dx
  41236a:	outs   dx,DWORD PTR ds:[rsi]
  41236b:	movsxd ebp,DWORD PTR [rbx+0x5f]
  41236e:	(bad)  
  41236f:	ins    BYTE PTR es:[rdi],dx
  412370:	jo     4123da <__IAT_end__+0x7b2>
  412372:	(bad)  
  412373:	add    BYTE PTR [rcx],dh
  412375:	add    ah,BYTE PTR [rdi+0x69]
  412378:	ins    DWORD PTR es:[rdi],dx
  412379:	jo     4123da <__IAT_end__+0x7b2>
  41237b:	ins    BYTE PTR es:[rdi],dx
  41237c:	(bad)  
  41237d:	jns    4123e4 <__IAT_end__+0x7bc>
  41237f:	jb     4123e0 <__IAT_end__+0x7b8>
  412381:	jae    4123e8 <__IAT_end__+0x7c0>
  412383:	je     4123e4 <__IAT_end__+0x7bc>
  412385:	ins    DWORD PTR es:[rdi],dx
  412386:	outs   dx,DWORD PTR ds:[rsi]
  412387:	fs add BYTE PTR gs:[rax],al
  41238b:	add    BYTE PTR [rdx],dh
  41238d:	add    ah,BYTE PTR [rdi+0x69]
  412390:	ins    DWORD PTR es:[rdi],dx
  412391:	jo     4123f2 <__IAT_end__+0x7ca>
  412393:	ins    BYTE PTR es:[rdi],dx
  412394:	(bad)  
  412395:	jns    4123fc <__IAT_end__+0x7d4>
  412397:	jb     4123f8 <__IAT_end__+0x7d0>
  412399:	jae    412400 <__IAT_end__+0x7d8>
  41239b:	je     4123fc <__IAT_end__+0x7d4>
  41239d:	outs   dx,DWORD PTR ds:[rsi]
  41239e:	data16 data16 jae 412407 <__IAT_end__+0x7df>
  4123a2:	je     412417 <__IAT_end__+0x7ef>
  4123a4:	add    BYTE PTR [rax],al
  4123a6:	add    BYTE PTR [rax],al
  4123a8:	xor    eax,DWORD PTR [rdx]
  4123aa:	imul   ebp,DWORD PTR [ebp+0x70],0x79616c5f
  4123b2:	gs jb  412414 <__IAT_end__+0x7ec>
  4123b5:	jae    41241c <__IAT_end__+0x7f4>
  4123b7:	je     412418 <__IAT_end__+0x7f0>
  4123b9:	outs   dx,DWORD PTR ds:[rsi]
  4123ba:	jo     41241d <__IAT_end__+0x7f5>
  4123bc:	movsxd ebp,DWORD PTR [rcx+0x74]
  4123bf:	jns    4123c1 <__IAT_end__+0x799>
  4123c1:	add    BYTE PTR [rax],al
  4123c3:	add    BYTE PTR [rdx],bh
  4123c5:	add    ah,BYTE PTR [rdi+0x69]
  4123c8:	ins    DWORD PTR es:[rdi],dx
  4123c9:	jo     41242a <__IAT_end__+0x802>
  4123cb:	ins    DWORD PTR es:[rdi],dx
  4123cc:	(bad)  
  4123cd:	imul   ebp,DWORD PTR [rsi+0x0],0x6967028f
  4123d4:	ins    DWORD PTR es:[rdi],dx
  4123d5:	jo     412436 <__IAT_end__+0x80e>
  4123d7:	jo     412442 <__IAT_end__+0x81a>
  4123d9:	js     412440 <__IAT_end__+0x818>
  4123db:	ins    BYTE PTR es:[rdi],dx
  4123dc:	pop    rdi
  4123dd:	jb     412446 <__IAT_end__+0x81e>
  4123df:	outs   dx,BYTE PTR ds:[rsi]
  4123e0:	pop    rdi
  4123e1:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  4123e8:	xchg   ebx,eax
  4123e9:	add    ah,BYTE PTR [rdi+0x69]
  4123ec:	ins    DWORD PTR es:[rdi],dx
  4123ed:	jo     41244e <__IAT_end__+0x826>
  4123ef:	jo     41245a <__IAT_end__+0x832>
  4123f1:	js     412458 <__IAT_end__+0x830>
  4123f3:	ins    BYTE PTR es:[rdi],dx
  4123f4:	pop    rdi
  4123f5:	jb     41245e <__IAT_end__+0x836>
  4123f7:	outs   dx,BYTE PTR ds:[rsi]
  4123f8:	pop    rdi
  4123f9:	jae    412460 <__IAT_end__+0x838>
  4123fb:	je     41245c <__IAT_end__+0x834>
  4123fd:	jb     412464 <__IAT_end__+0x83c>
  4123ff:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  412403:	add    BYTE PTR [rsi+0x6d696702],ch
  412409:	jo     41246a <__IAT_end__+0x842>
  41240b:	jo     41247f <__IAT_end__+0x857>
  41240d:	outs   dx,DWORD PTR ds:[rsi]
  41240e:	addr32 jb 412476 <__IAT_end__+0x84e>
  412411:	jae    412486 <__IAT_end__+0x85e>
  412413:	pop    rdi
  412414:	imul   ebp,DWORD PTR [rsi+0x69],0x72705f74
  41241b:	imul   ebp,DWORD PTR [rsi+0x74],0x2b50066
  412422:	imul   ebp,DWORD PTR [ebp+0x70],0x6f72705f
  41242a:	addr32 jb 412492 <__IAT_end__+0x86a>
  41242d:	jae    4124a2 <__IAT_end__+0x87a>
  41242f:	pop    rdi
  412430:	jne    4124a2 <__IAT_end__+0x87a>
  412432:	fs (bad) 
  412434:	je     41249b <__IAT_end__+0x873>
  412436:	add    BYTE PTR [rax],al
  412438:	mov    ecx,0x6d696702
  41243d:	jo     41249e <__IAT_end__+0x876>
  41243f:	jb     4124a6 <__IAT_end__+0x87e>
  412441:	imul   esi,DWORD PTR [ebx+0x74],0x665f7265
  412449:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x646e6168
  412451:	ins    BYTE PTR es:[rdi],dx
  412452:	gs jb  4124b4 <__IAT_end__+0x88c>
  412455:	ins    DWORD PTR es:[rdi],dx
  412456:	imul   ebp,DWORD PTR [rbp+0x65],0xbb000000
  41245d:	add    ah,BYTE PTR [rdi+0x69]
  412460:	ins    DWORD PTR es:[rdi],dx
  412461:	jo     4124c2 <__IAT_end__+0x89a>
  412463:	jb     4124ca <__IAT_end__+0x8a2>
  412465:	imul   esi,DWORD PTR [ebx+0x74],0x6d5f7265
  41246d:	(bad)  
  41246e:	imul   esp,DWORD PTR [ebx+0x5f],0x64616f6c
  412476:	pop    rdi
  412477:	push   0x6c646e61
  41247c:	gs jb  41247f <__IAT_end__+0x857>
  41247f:	add    BYTE PTR [rbp+0x6d696702],bh
  412485:	jo     4124e6 <__IAT_end__+0x8be>
  412487:	jb     4124ee <__IAT_end__+0x8c6>
  412489:	imul   esi,DWORD PTR [ebx+0x74],0x745f7265
  412491:	push   0x6e626d75
  412496:	(bad)  
  412497:	imul   ebp,DWORD PTR [rdi+rbx*2+0x6c],0x6564616f
  41249f:	jb     4124a1 <__IAT_end__+0x879>
  4124a1:	add    BYTE PTR [rax],al
  4124a3:	add    al,cl
  4124a5:	add    ah,BYTE PTR [rdi+0x69]
  4124a8:	ins    DWORD PTR es:[rdi],dx
  4124a9:	jo     41250a <__IAT_end__+0x8e2>
  4124ab:	jb     412522 <__IAT_end__+0x8fa>
  4124ad:	outs   dx,BYTE PTR ds:[rsi]
  4124ae:	pop    rdi
  4124af:	jo     412523 <__IAT_end__+0x8fb>
  4124b1:	outs   dx,DWORD PTR ds:[rsi]
  4124b2:	movsxd esp,DWORD PTR [rbp+0x64]
  4124b5:	jne    412529 <__IAT_end__+0x901>
  4124b7:	add    BYTE PTR gs:[rax],al
  4124ba:	add    BYTE PTR [rax],al
  4124bc:	add    esp,DWORD PTR es:[rdi+0x69]
  4124c0:	ins    DWORD PTR es:[rdi],dx
  4124c1:	jo     412522 <__IAT_end__+0x8fa>
  4124c3:	jbe    41252a <__IAT_end__+0x902>
  4124c5:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  4124c9:	jae    41252a <__IAT_end__+0x902>
  4124cb:	outs   dx,BYTE PTR ds:[rsi]
  4124cc:	gs ja  4124cf <__IAT_end__+0x8a7>
  4124cf:	add    BYTE PTR [rax],bh
  4124d1:	add    esp,DWORD PTR [rdi+0x69]
  4124d4:	ins    DWORD PTR es:[rdi],dx
  4124d5:	jo     412536 <__IAT_end__+0x90e>
  4124d7:	jbe    41253e <__IAT_end__+0x916>
  4124d9:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  4124dd:	jae    41253e <__IAT_end__+0x916>
  4124df:	jae    412555 <__IAT_end__+0x92d>
  4124e1:	jb     412552 <__IAT_end__+0x92a>
  4124e3:	imul   esp,DWORD PTR [rbp+0x5f],0x6e
  4124e7:	gs ja  412549 <__IAT_end__+0x921>
  4124ea:	data16 jb 41255c <__IAT_end__+0x934>
  4124ed:	ins    DWORD PTR es:[rdi],dx
  4124ee:	pop    rdi
  4124ef:	jo     412560 <__IAT_end__+0x938>
  4124f1:	imul   ebp,DWORD PTR [rsi+0x74],0x73
  4124f8:	add    DWORD PTR [rax],eax
  4124fa:	imul   ebp,DWORD PTR [ebp+0x70],0x796e615f
  412502:	pop    rdi
  412503:	je     412574 <__IAT_end__+0x94c>
  412505:	pop    rdi
  412506:	jne    41257c <__IAT_end__+0x954>
  412508:	data16 cmp BYTE PTR [rax],al
  41250b:	add    BYTE PTR [rax+rax*1],bl
  41250e:	imul   ebp,DWORD PTR [ebp+0x70],0x6c69665f
  412516:	outs   dx,BYTE PTR gs:[rsi]
  412518:	(bad)  
  412519:	ins    DWORD PTR es:[rdi],dx
  41251a:	gs pop rdi
  41251c:	je     41258d <__IAT_end__+0x965>
  41251e:	pop    rdi
  41251f:	jne    412595 <__IAT_end__+0x96d>
  412521:	data16 cmp BYTE PTR [rax],al
  412524:	sub    al,0x0
  412526:	imul   ebp,DWORD PTR [ebp+0x70],0x636f6c5f
  41252e:	(bad)  
  41252f:	ins    BYTE PTR es:[rdi],dx
  412530:	gs pop rdi
  412532:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  41253a:	jns    41253c <__IAT_end__+0x914>
  41253c:	add    BYTE PTR [r15+0x69],spl
  412540:	ins    DWORD PTR es:[rdi],dx
  412541:	jo     4125a2 <__IAT_end__+0x97a>
  412543:	jo     4125a6 <__IAT_end__+0x97e>
  412545:	jb     4125a8 <__IAT_end__+0x980>
  412547:	jae    4125b2 <__IAT_end__+0x98a>
  412549:	je     4125b0 <__IAT_end__+0x988>
  41254b:	pop    rdi
  41254c:	data16 jb 4125b4 <__IAT_end__+0x98c>
  41254f:	add    BYTE PTR gs:[rax],al
  412552:	add    BYTE PTR [rax],al
  412554:	rex.W add BYTE PTR [rdi+0x69],spl
  412558:	ins    DWORD PTR es:[rdi],dx
  412559:	jo     4125ba <__IAT_end__+0x992>
  41255b:	jo     4125be <__IAT_end__+0x996>
  41255d:	jb     4125c0 <__IAT_end__+0x998>
  41255f:	jae    4125ca <__IAT_end__+0x9a2>
  412561:	je     4125c8 <__IAT_end__+0x9a0>
  412563:	pop    rdi
  412564:	outs   dx,BYTE PTR ds:[rsi]
  412565:	gs ja  412568 <__IAT_end__+0x940>
  412568:	or     eax,0x6d696700
  41256d:	jo     4125ce <__IAT_end__+0x9a6>
  41256f:	movsxd ebp,DWORD PTR [rbp+0x79]
  412572:	imul   ebx,DWORD PTR [rdi+0x73],0x65
  412576:	je     412578 <__IAT_end__+0x950>
  412578:	verr   WORD PTR [rdi+0x69]
  41257c:	ins    DWORD PTR es:[rdi],dx
  41257d:	jo     4125de <__IAT_end__+0x9b6>
  41257f:	movsxd ebp,DWORD PTR [rbp+0x79]
  412582:	imul   ebx,DWORD PTR [rdi+0x74],0x6f
  412586:	pop    rdi
  412587:	jb     4125f0 <__IAT_end__+0x9c8>
  412589:	(bad)  
  41258a:	add    BYTE PTR [rax],al
  41258c:	sbb    eax,0x6d696700
  412591:	jo     4125f2 <__IAT_end__+0x9ca>
  412593:	push   0x735f7673
  412598:	gs je  41259b <__IAT_end__+0x973>
  41259b:	add    BYTE PTR [rsi],bl
  41259d:	add    BYTE PTR [rdi+0x69],ah
  4125a0:	ins    DWORD PTR es:[rdi],dx
  4125a1:	jo     412602 <__IAT_end__+0x9da>
  4125a3:	push   0x745f7673
  4125a8:	outs   dx,DWORD PTR ds:[rsi]
  4125a9:	pop    rdi
  4125aa:	jb     412613 <__IAT_end__+0x9eb>
  4125ac:	(bad)  
  4125ad:	add    BYTE PTR [rax],al
  4125af:	add    BYTE PTR [rax],bh
  4125b1:	add    BYTE PTR [rdi+0x69],ah
  4125b4:	ins    DWORD PTR es:[rdi],dx
  4125b5:	jo     412616 <__IAT_end__+0x9ee>
  4125b7:	jb     412620 <__IAT_end__+0x9f8>
  4125b9:	(bad)  
  4125ba:	pop    rdi
  4125bb:	jae    412622 <__IAT_end__+0x9fa>
  4125bd:	je     4125bf <__IAT_end__+0x997>
  4125bf:	add    BYTE PTR [rcx],bh
  4125c1:	add    BYTE PTR [rdi+0x69],ah
  4125c4:	ins    DWORD PTR es:[rdi],dx
  4125c5:	jo     412626 <__IAT_end__+0x9fe>
  4125c7:	jb     412630 <__IAT_end__+0xa08>
  4125c9:	(bad)  
  4125ca:	pop    rdi
  4125cb:	jae    412632 <__IAT_end__+0xa0a>
  4125cd:	je     41262e <__IAT_end__+0xa06>
  4125cf:	(bad)  
  4125d0:	ins    BYTE PTR es:[rdi],dx
  4125d1:	jo     41263b <__IAT_end__+0xa13>
  4125d3:	(bad)  
  4125d4:	add    BYTE PTR [rax],al
  4125d6:	add    BYTE PTR [rax],al
  4125d8:	rex.WX add BYTE PTR [rdi+0x69],spl
  4125dc:	ins    DWORD PTR es:[rdi],dx
  4125dd:	jo     41263e <__IAT_end__+0xa16>
  4125df:	jb     412648 <__IAT_end__+0xa20>
  4125e1:	(bad)
  4125e6:	je     4125e8 <__IAT_end__+0x9c0>
  4125e8:	(bad)  
  4125e9:	add    BYTE PTR [rbp+0x78],ah
  4125ec:	imul   esp,DWORD PTR [rsi+0x5f],0x746e6f63
  4125f3:	outs   dx,BYTE PTR gs:[rsi]
  4125f5:	je     412656 <__IAT_end__+0xa2e>
  4125f7:	addr32 gs je 41265a <__IAT_end__+0xa32>
  4125fb:	outs   dx,BYTE PTR gs:[rsi]
  4125fd:	je     412671 <__IAT_end__+0xa49>
  4125ff:	jns    412601 <__IAT_end__+0x9d9>
  412601:	add    BYTE PTR [rax],al
  412603:	add    BYTE PTR [rip+0x69786500],cl        # 69b98b09 <libjpeg_8_dll_iname+0x69785e09>
  412609:	pop    di
  41260b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41260e:	je     412675 <__IAT_end__+0xa4d>
  412610:	outs   dx,BYTE PTR ds:[rsi]
  412611:	je     412672 <__IAT_end__+0xa4a>
  412613:	jb     41267a <__IAT_end__+0xa52>
  412615:	ins    DWORD PTR es:[rdi],dx
  412616:	outs   dx,DWORD PTR ds:[rsi]
  412617:	jbe    41267e <__IAT_end__+0xa56>
  412619:	pop    rdi
  41261a:	outs   dx,BYTE PTR gs:[rsi]
  41261c:	je     412690 <__IAT_end__+0xa68>
  41261e:	jns    412620 <__IAT_end__+0x9f8>
  412620:	sbb    al,BYTE PTR [rax]
  412622:	gs js  41268e <__IAT_end__+0xa66>
  412625:	pop    di
  412627:	fs (bad) 
  412629:	je     41268c <__IAT_end__+0xa64>
  41262b:	pop    rdi
  41262c:	outs   dx,BYTE PTR ds:[rsi]
  41262d:	gs ja  41268f <__IAT_end__+0xa67>
  412630:	data16 jb 4126a2 <__IAT_end__+0xa7a>
  412633:	ins    DWORD PTR es:[rdi],dx
  412634:	pop    rdi
  412635:	fs (bad) 
  412637:	je     41269a <__IAT_end__+0xa72>
  412639:	add    BYTE PTR [rax],al
  41263b:	add    BYTE PTR [rax],ah
  41263d:	add    BYTE PTR [rbp+0x78],ah
  412640:	imul   esp,DWORD PTR [rsi+0x5f],0x61746164
  412647:	pop    rdi
  412648:	jae    4126ab <__IAT_end__+0xa83>
  41264a:	jbe    4126b1 <__IAT_end__+0xa89>
  41264c:	pop    rdi
  41264d:	fs (bad) 
  41264f:	je     4126b2 <__IAT_end__+0xa8a>
  412651:	add    BYTE PTR [rax],al
  412653:	add    BYTE PTR [rax+rax*1],ah
  412656:	gs js  4126c2 <__IAT_end__+0xa9a>
  412659:	pop    di
  41265b:	fs (bad) 
  41265d:	je     4126c0 <__IAT_end__+0xa98>
  41265f:	pop    rdi
  412660:	jne    4126d0 <__IAT_end__+0xaa8>
  412662:	jb     4126c9 <__IAT_end__+0xaa1>
  412664:	data16 add BYTE PTR [rax],al
  412667:	add    BYTE PTR [rip+0x615f6700],al        # 61a08d6d <libjpeg_8_dll_iname+0x615f606d>
  41266d:	jb     4126e1 <__IAT_end__+0xab9>
  41266f:	(bad)  
  412670:	jns    4126d1 <__IAT_end__+0xaa9>
  412672:	(bad)  
  412673:	jo     4126e5 <__IAT_end__+0xabd>
  412675:	outs   dx,BYTE PTR gs:[rsi]
  412677:	fs pop rdi
  412679:	jbe    4126dc <__IAT_end__+0xab4>
  41267b:	ins    BYTE PTR es:[rdi],dx
  41267c:	jae    41267e <__IAT_end__+0xa56>
  41267e:	add    BYTE PTR [rax],al
  412680:	(bad)  
  412681:	add    BYTE PTR [rdi+0x5f],ah
  412684:	(bad)  
  412685:	jb     4126f9 <__IAT_end__+0xad1>
  412687:	(bad)  
  412688:	jns    4126e9 <__IAT_end__+0xac1>
  41268a:	data16 jb 4126f2 <__IAT_end__+0xaca>
  41268d:	add    BYTE PTR gs:[rax],al
  412690:	or     DWORD PTR [rax],eax
  412692:	addr32 pop rdi
  412694:	(bad)  
  412695:	jb     412709 <__IAT_end__+0xae1>
  412697:	(bad)  
  412698:	jns    4126f9 <__IAT_end__+0xad1>
  41269a:	outs   dx,BYTE PTR ds:[rsi]
  41269b:	gs ja  41269e <__IAT_end__+0xa76>
  41269e:	add    BYTE PTR [rax],al
  4126a0:	or     al,0x0
  4126a2:	addr32 pop rdi
  4126a4:	(bad)  
  4126a5:	jb     412719 <__IAT_end__+0xaf1>
  4126a7:	(bad)  
  4126a8:	jns    412709 <__IAT_end__+0xae1>
  4126aa:	jb     412711 <__IAT_end__+0xae9>
  4126ac:	ins    DWORD PTR es:[rdi],dx
  4126ad:	outs   dx,DWORD PTR ds:[rsi]
  4126ae:	jbe    412715 <__IAT_end__+0xaed>
  4126b0:	pop    rdi
  4126b1:	imul   ebp,DWORD PTR [rsi+0x64],0x7865
  4126b8:	sbb    al,BYTE PTR [rax]
  4126ba:	addr32 pop rdi
  4126bc:	(bad)  
  4126bd:	jae    412722 <__IAT_end__+0xafa>
  4126bf:	imul   ebp,DWORD PTR [rcx+0x5f],0x6e727473
  4126c6:	movsxd esp,DWORD PTR [rcx+0x73]
  4126c9:	movsxd ebp,DWORD PTR gs:[rbp+0x70]
  4126cd:	add    BYTE PTR [rax],al
  4126cf:	add    BYTE PTR [rdx+0x1],ah
  4126d2:	addr32 pop rdi
  4126d4:	gs jb  412749 <__IAT_end__+0xb21>
  4126d7:	outs   dx,DWORD PTR ds:[rsi]
  4126d8:	jb     412739 <__IAT_end__+0xb11>
  4126da:	data16 jb 412742 <__IAT_end__+0xb1a>
  4126dd:	add    BYTE PTR gs:[rax],al
  4126e0:	add    DWORD PTR [edi+0x5f],esp
  4126e4:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7265
  4126eb:	jb     41275c <__IAT_end__+0xb34>
  4126ed:	jb     41274e <__IAT_end__+0xb26>
  4126ef:	data16 jb 412761 <__IAT_end__+0xb39>
  4126f2:	ins    DWORD PTR es:[rdi],dx
  4126f3:	pop    rdi
  4126f4:	gs jb  412769 <__IAT_end__+0xb41>
  4126f7:	outs   dx,BYTE PTR ds:[rsi]
  4126f8:	outs   dx,DWORD PTR ds:[rsi]
  4126f9:	add    BYTE PTR [rax],al
  4126fb:	add    BYTE PTR [rax+0x1],ch
  4126fe:	addr32 pop rdi
  412700:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7265
  412707:	jb     412778 <__IAT_end__+0xb50>
  412709:	jb     41276a <__IAT_end__+0xb42>
  41270b:	jno    412782 <__IAT_end__+0xb5a>
  41270d:	(bad)  
  41270e:	jb     41277b <__IAT_end__+0xb53>
  412710:	add    BYTE PTR [rax],al
  412712:	add    BYTE PTR [rax],al
  412714:	jne    412717 <__IAT_end__+0xaef>
  412716:	addr32 pop rdi
  412718:	outs   dx,WORD PTR ds:[rsi]
  41271a:	jo     412781 <__IAT_end__+0xb59>
  41271c:	outs   dx,BYTE PTR ds:[rsi]
  41271d:	add    BYTE PTR [rax],al
  41271f:	add    BYTE PTR [rdx+0x1],bh
  412722:	addr32 pop rdi
  412724:	data16 jb 41278c <__IAT_end__+0xb64>
  412727:	add    BYTE PTR gs:[rax],al
  41272a:	add    BYTE PTR [rax],al
  41272c:	add    ah,BYTE PTR fs:[rdi+0x5f]
  412730:	ins    BYTE PTR es:[rdi],dx
  412731:	outs   dx,DWORD PTR ds:[rsi]
  412732:	movsxd esp,DWORD PTR [rcx+0x6c]
  412735:	gs pop rdi
  412737:	data16 jb 4127a9 <__IAT_end__+0xb81>
  41273a:	ins    DWORD PTR es:[rdi],dx
  41273b:	pop    rdi
  41273c:	jne    4127b2 <__IAT_end__+0xb8a>
  41273e:	data16 cmp BYTE PTR [rax],al
  412741:	add    BYTE PTR [rax],al
  412743:	add    BYTE PTR [rsi+0x2],ah
  412746:	addr32 pop rdi
  412748:	ins    BYTE PTR es:[rdi],dx
  412749:	outs   dx,DWORD PTR ds:[rsi]
  41274a:	add    BYTE PTR [ebp+0x6d5f6702],dl
  412751:	(bad)  
  412752:	ins    BYTE PTR es:[rdi],dx
  412753:	ins    BYTE PTR es:[rdi],dx
  412754:	outs   dx,DWORD PTR ds:[rsi]
  412755:	movsxd eax,DWORD PTR [rax]
  412757:	add    BYTE PTR [rax+0x6d5f6702],bl
  41275d:	(bad)  
  41275e:	ins    BYTE PTR es:[rdi],dx
  41275f:	ins    BYTE PTR es:[rdi],dx
  412760:	outs   dx,DWORD PTR ds:[rsi]
  412761:	movsxd ebx,DWORD PTR [rdi+0x6e]
  412764:	add    BYTE PTR [rax],al
  412766:	add    BYTE PTR [rax],al
  412768:	cmp    DWORD PTR [rbx],eax
  41276a:	addr32 pop rdi
  41276c:	jo     4127e2 <__IAT_end__+0xbba>
  41276e:	jb     4127cf <__IAT_end__+0xba7>
  412770:	(bad)  
  412771:	jb     4127e5 <__IAT_end__+0xbbd>
  412773:	(bad)  
  412774:	jns    4127d5 <__IAT_end__+0xbad>
  412776:	(bad)  
  412777:	fs add BYTE PTR fs:[rax],al
  41277b:	add    BYTE PTR [rbx],bh
  41277d:	add    esp,DWORD PTR [rdi+0x5f]
  412780:	jo     4127f6 <__IAT_end__+0xbce>
  412782:	jb     4127e3 <__IAT_end__+0xbbb>
  412784:	(bad)  
  412785:	jb     4127f9 <__IAT_end__+0xbd1>
  412787:	(bad)  
  412788:	jns    4127e9 <__IAT_end__+0xbc1>
  41278a:	data16 jb 4127f2 <__IAT_end__+0xbca>
  41278d:	add    BYTE PTR gs:[rax],al
  412790:	cmp    eax,0x705f6703
  412795:	je     412809 <__IAT_end__+0xbe1>
  412797:	pop    rdi
  412798:	(bad)  
  412799:	jb     41280d <__IAT_end__+0xbe5>
  41279b:	(bad)  
  41279c:	jns    4127fd <__IAT_end__+0xbd5>
  41279e:	outs   dx,BYTE PTR ds:[rsi]
  41279f:	gs ja  4127a2 <__IAT_end__+0xb7a>
  4127a2:	add    BYTE PTR [rax],al
  4127a4:	mov    DWORD PTR [rbx],eax
  4127a6:	addr32 pop rdi
  4127a8:	jb     41280f <__IAT_end__+0xbe7>
  4127aa:	(bad)  
  4127ab:	ins    BYTE PTR es:[rdi],dx
  4127ac:	ins    BYTE PTR es:[rdi],dx
  4127ad:	outs   dx,DWORD PTR ds:[rsi]
  4127ae:	movsxd eax,DWORD PTR [rax]
  4127b0:	cld    
  4127b1:	add    esp,DWORD PTR [rdi+0x5f]
  4127b4:	jae    41281b <__IAT_end__+0xbf3>
  4127b6:	je     412817 <__IAT_end__+0xbef>
  4127b8:	gs jb  41282d <__IAT_end__+0xc05>
  4127bb:	outs   dx,DWORD PTR ds:[rsi]
  4127bc:	jb     4127be <__IAT_end__+0xb96>
  4127be:	add    BYTE PTR [rax],al
  4127c0:	push   rsi
  4127c1:	add    al,0x67
  4127c3:	pop    rdi
  4127c4:	jae    41283a <__IAT_end__+0xc12>
  4127c6:	(bad)  
  4127c7:	je     4127c9 <__IAT_end__+0xba1>
  4127c9:	add    BYTE PTR [rax],al
  4127cb:	add    BYTE PTR [rdi+0x4],bh
  4127ce:	addr32 pop rdi
  4127d0:	jae    412846 <__IAT_end__+0xc1e>
  4127d2:	jb     412838 <__IAT_end__+0xc10>
  4127d4:	jne    412846 <__IAT_end__+0xc1e>
  4127d6:	add    BYTE PTR [rax],al
  4127d8:	add    BYTE PTR [rdi+riz*2],0x5f
  4127dc:	jae    412852 <__IAT_end__+0xc2a>
  4127de:	jb     412844 <__IAT_end__+0xc1c>
  4127e0:	jne    412852 <__IAT_end__+0xc2a>
  4127e2:	pop    rdi
  4127e3:	jo     412857 <__IAT_end__+0xc2f>
  4127e5:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  4127ec:	add    DWORD PTR [rdi+riz*2],0x5f
  4127f0:	jae    412866 <__IAT_end__+0xc3e>
  4127f2:	jb     412859 <__IAT_end__+0xc31>
  4127f4:	jb     412868 <__IAT_end__+0xc40>
  4127f6:	outs   dx,DWORD PTR ds:[rsi]
  4127f7:	jb     4127f9 <__IAT_end__+0xbd1>
  4127f9:	add    BYTE PTR [rax],al
  4127fb:	add    BYTE PTR [rax+0x735f6704],cl
  412801:	je     412875 <__IAT_end__+0xc4d>
  412803:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  41280a:	outs   dx,BYTE PTR gs:[rsi]
  41280c:	fs pop rdi
  41280e:	ins    BYTE PTR es:[rdi],dx
  41280f:	outs   dx,BYTE PTR gs:[rsi]
  412811:	add    BYTE PTR [rax],al
  412813:	add    BYTE PTR [rcx+0x735f6704],bl
  412819:	je     41288d <__IAT_end__+0xc65>
  41281b:	imul   ebp,DWORD PTR [rsi+0x67],0x6572665f
  412822:	add    BYTE PTR gs:[rbp+0x735f6704],bl
  412829:	je     41289d <__IAT_end__+0xc75>
  41282b:	imul   ebp,DWORD PTR [rsi+0x67],0x736e695f
  412832:	gs jb  4128a9 <__IAT_end__+0xc81>
  412835:	pop    rdi
  412836:	movsxd eax,DWORD PTR [rax]
  412838:	stos   BYTE PTR es:[rdi],al
  412839:	add    al,0x67
  41283b:	pop    rdi
  41283c:	jae    4128b2 <__IAT_end__+0xc8a>
  41283e:	jb     4128a9 <__IAT_end__+0xc81>
  412840:	outs   dx,BYTE PTR ds:[rsi]
  412841:	addr32 pop rdi
  412843:	jae    4128ae <__IAT_end__+0xc86>
  412845:	jp     4128ac <__IAT_end__+0xc84>
  412847:	fs pop rdi
  412849:	outs   dx,BYTE PTR ds:[rsi]
  41284a:	gs ja  41284d <__IAT_end__+0xc25>
  41284d:	add    BYTE PTR [rax],al
  41284f:	add    BYTE PTR [rdx+0x735f6704],dh
  412855:	je     4128c9 <__IAT_end__+0xca1>
  412857:	ins    BYTE PTR es:[rdi],dx
  412858:	movsxd esi,DWORD PTR [rax+0x79]
  41285b:	add    BYTE PTR [rsp+rax*1+0x74735f67],dh
  412862:	jb     4128d2 <__IAT_end__+0xcaa>
  412864:	fs jne 4128d7 <__IAT_end__+0xcaf>
  412867:	add    BYTE PTR [rbp+rax*1+0x67],bh
  41286b:	pop    rdi
  41286c:	jne    4128e2 <__IAT_end__+0xcba>
  41286e:	xor    WORD PTR [rsi],si
  412871:	pop    rdi
  412872:	je     4128e3 <__IAT_end__+0xcbb>
  412874:	pop    rdi
  412875:	jne    4128eb <__IAT_end__+0xcc3>
  412877:	data16 cmp BYTE PTR [rax],al
  41287a:	add    BYTE PTR [rax],al
  41287c:	xchg   esp,eax
  41287d:	add    eax,0x74755f67
  412882:	data16 cmp BYTE PTR [rdi+0x74],bl
  412886:	outs   dx,DWORD PTR ds:[rsi]
  412887:	pop    rdi
  412888:	jne    4128fe <__IAT_end__+0xcd6>
  41288a:	xor    WORD PTR [rsi],si
  41288d:	add    BYTE PTR [rax],al
  41288f:	add    BYTE PTR [rax+rax*1],bl
  412892:	ins    BYTE PTR es:[rdi],dx
  412893:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  41289a:	(bad)  
  41289b:	imul   ebp,DWORD PTR [rsi+0x64],0x7865745f
  4128a2:	je     412908 <__IAT_end__+0xce0>
  4128a4:	outs   dx,DWORD PTR ds:[rsi]
  4128a5:	ins    DWORD PTR es:[rdi],dx
  4128a6:	(bad)  
  4128a7:	imul   ebp,DWORD PTR [rsi+0x5f],0x65646f63
  4128ae:	jae    412915 <__IAT_end__+0xced>
  4128b0:	je     4128b2 <__IAT_end__+0xc8a>
  4128b2:	add    BYTE PTR [rax],al
  4128b4:	sbb    eax,0x62696c00
  4128b9:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  4128c0:	outs   dx,BYTE PTR ds:[rsi]
  4128c1:	fs je  412929 <__IAT_end__+0xd01>
  4128c4:	js     41293a <__IAT_end__+0xd12>
  4128c6:	outs   dx,DWORD PTR fs:[rsi]
  4128c8:	ins    DWORD PTR es:[rdi],dx
  4128c9:	(bad)  
  4128ca:	imul   ebp,DWORD PTR [rsi+0x0],0x25000000
  4128d1:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4128d5:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  4128dc:	je     412952 <__IAT_end__+0xd2a>
  4128de:	gs js  412955 <__IAT_end__+0xd2d>
  4128e1:	add    BYTE PTR [rax],al
  4128e3:	add    BYTE PTR [rbp+0x0],al
  4128e6:	ins    BYTE PTR es:[rdi],dx
  4128e7:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  4128ee:	je     412955 <__IAT_end__+0xd2d>
  4128f0:	js     412966 <__IAT_end__+0xd3e>
  4128f2:	outs   dx,DWORD PTR fs:[rsi]
  4128f4:	ins    DWORD PTR es:[rdi],dx
  4128f5:	(bad)  
  4128f6:	imul   ebp,DWORD PTR [rsi+0x0],0x20000000
  4128fd:	add    BYTE PTR [rdx+0x70],ch
  412900:	gs addr32 pop rdi
  412903:	rex.XB jb 41296b <__IAT_end__+0xd43>
  412906:	(bad)  
  412907:	je     41296e <__IAT_end__+0xd46>
  412909:	rex.R
  41290a:	movsxd ebp,DWORD PTR gs:[rdi+0x6d]
  41290e:	jo     412982 <__IAT_end__+0xd5a>
  412910:	gs jae 412986 <__IAT_end__+0xd5e>
  412913:	add    BYTE PTR [rcx],dh
  412915:	add    BYTE PTR [rdx+0x70],ch
  412918:	gs addr32 pop rdi
  41291b:	fs gs jae 412993 <__IAT_end__+0xd6b>
  41291f:	jb     412990 <__IAT_end__+0xd68>
  412921:	jns    412982 <__IAT_end__+0xd5a>
  412923:	fs movsxd ebp,DWORD PTR gs:[rdi+0x6d]
  412928:	jo     41299c <__IAT_end__+0xd74>
  41292a:	gs jae 4129a0 <__IAT_end__+0xd78>
  41292d:	add    BYTE PTR [rax],al
  41292f:	add    BYTE PTR [rdi],dh
  412931:	add    BYTE PTR [rdx+0x70],ch
  412934:	gs addr32 pop rdi
  412937:	imul   bp,WORD PTR [rsi+0x69],0x6873
  41293d:	pop    rdi
  41293e:	fs movsxd ebp,DWORD PTR gs:[rdi+0x6d]
  412943:	jo     4129b7 <__IAT_end__+0xd8f>
  412945:	gs jae 4129bb <__IAT_end__+0xd93>
  412948:	add    BYTE PTR [rax],al
  41294a:	add    BYTE PTR [rax],al
  41294c:	pop    rdi
  41294d:	add    BYTE PTR [rdx+0x70],ch
  412950:	gs addr32 pop rdi
  412953:	jb     4129ba <__IAT_end__+0xd92>
  412955:	(bad)  
  412956:	fs pop rdi
  412958:	push   0x65646165
  41295d:	jb     41295f <__IAT_end__+0xd37>
  41295f:	add    BYTE PTR [rcx+0x0],ah
  412962:	push   0x70
  412964:	gs addr32 pop rdi
  412967:	jb     4129ce <__IAT_end__+0xda6>
  412969:	(bad)  
  41296a:	fs pop rdi
  41296c:	jae    4129d1 <__IAT_end__+0xda9>
  41296e:	(bad)  
  41296f:	outs   dx,BYTE PTR ds:[rsi]
  412970:	ins    BYTE PTR es:[rdi],dx
  412971:	imul   ebp,DWORD PTR [rsi+0x65],0x73
  412978:	ins    BYTE PTR es:[rdi],dx
  412979:	add    BYTE PTR [rdx+0x70],ch
  41297c:	gs addr32 pop rdi
  41297f:	jae    4129f5 <__IAT_end__+0xdcd>
  412981:	(bad)  
  412982:	jb     4129f8 <__IAT_end__+0xdd0>
  412984:	pop    rdi
  412985:	fs movsxd ebp,DWORD PTR gs:[rdi+0x6d]
  41298a:	jo     4129fe <__IAT_end__+0xdd6>
  41298c:	gs jae 412a02 <__IAT_end__+0xdda>
  41298f:	add    BYTE PTR [rsi+0x0],ch
  412992:	push   0x70
  412994:	gs addr32 pop rdi
  412997:	jae    412a0d <__IAT_end__+0xde5>
  412999:	fs pop rdi
  41299b:	gs jb  412a10 <__IAT_end__+0xde8>
  41299e:	outs   dx,DWORD PTR ds:[rsi]
  41299f:	jb     4129a1 <__IAT_end__+0xd79>
  4129a1:	add    BYTE PTR [rax],al
  4129a3:	add    BYTE PTR [rcx+0x0],dh
  4129a6:	push   0x70
  4129a8:	gs addr32 pop rdi
  4129ab:	jae    412a21 <__lib64_libkernel32_a_iname+0x5>
  4129ad:	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x637273
  4129b5:	add    BYTE PTR [rax],al
  4129b7:	add    BYTE PTR [rax],al
  4129b9:	adc    BYTE PTR [rcx],al
  4129bb:	add    BYTE PTR [rax],al
  4129bd:	adc    BYTE PTR [rcx],al
  4129bf:	add    BYTE PTR [rax],al
  4129c1:	adc    BYTE PTR [rcx],al
  4129c3:	add    BYTE PTR [rax],al
  4129c5:	adc    BYTE PTR [rcx],al
  4129c7:	add    BYTE PTR [rax],al
  4129c9:	adc    BYTE PTR [rcx],al
  4129cb:	add    BYTE PTR [rax],al
  4129cd:	adc    BYTE PTR [rcx],al
  4129cf:	add    BYTE PTR [rax],al
  4129d1:	adc    BYTE PTR [rcx],al
  4129d3:	add    BYTE PTR [rax],al
  4129d5:	adc    BYTE PTR [rcx],al
  4129d7:	add    BYTE PTR [rax],al
  4129d9:	adc    BYTE PTR [rcx],al
  4129db:	add    BYTE PTR [rax],al
  4129dd:	adc    BYTE PTR [rcx],al
  4129df:	add    BYTE PTR [rax],al
  4129e1:	adc    BYTE PTR [rcx],al
  4129e3:	add    BYTE PTR [rax],al
  4129e5:	adc    BYTE PTR [rcx],al
  4129e7:	add    BYTE PTR [rax],al
  4129e9:	adc    BYTE PTR [rcx],al
  4129eb:	add    BYTE PTR [rax],al
  4129ed:	adc    BYTE PTR [rcx],al
  4129ef:	add    BYTE PTR [rax],al
  4129f1:	adc    BYTE PTR [rcx],al
  4129f3:	add    BYTE PTR [rax],al
  4129f5:	adc    BYTE PTR [rcx],al
  4129f7:	add    BYTE PTR [rax],al
  4129f9:	adc    BYTE PTR [rcx],al
  4129fb:	add    BYTE PTR [rax],al
  4129fd:	adc    BYTE PTR [rcx],al
  4129ff:	add    BYTE PTR [rax],al
  412a01:	adc    BYTE PTR [rcx],al
  412a03:	add    BYTE PTR [rax],al
  412a05:	adc    BYTE PTR [rcx],al
  412a07:	add    BYTE PTR [rax],al
  412a09:	adc    BYTE PTR [rcx],al
  412a0b:	add    BYTE PTR [rax],al
  412a0d:	adc    BYTE PTR [rcx],al
  412a0f:	add    BYTE PTR [rax],al
  412a11:	adc    BYTE PTR [rcx],al
  412a13:	add    BYTE PTR [rax],al
  412a15:	adc    BYTE PTR [rcx],al
  412a17:	add    BYTE PTR [rax],al
  412a19:	adc    BYTE PTR [rcx],al
	...

0000000000412a1c <__lib64_libkernel32_a_iname>:
  412a1c:	rex.WXB
  412a1d:	rex.RB push r10
  412a1f:	rex.WRX
  412a20:	rex.RB
  412a21:	xor    r14,QWORD PTR [rdx]
  412a24:	cs fs ins BYTE PTR es:[rdi],dx
  412a27:	ins    BYTE PTR es:[rdi],dx
  412a28:	add    BYTE PTR [rax],al
  412a2a:	add    BYTE PTR [rax],al
  412a2c:	adc    al,0x10
  412a2e:	add    DWORD PTR [rax],eax
  412a30:	adc    al,0x10
  412a32:	add    DWORD PTR [rax],eax
  412a34:	adc    al,0x10
  412a36:	add    DWORD PTR [rax],eax
  412a38:	adc    al,0x10
  412a3a:	add    DWORD PTR [rax],eax
  412a3c:	adc    al,0x10
  412a3e:	add    DWORD PTR [rax],eax
  412a40:	adc    al,0x10
  412a42:	add    DWORD PTR [rax],eax
  412a44:	adc    al,0x10
  412a46:	add    DWORD PTR [rax],eax
  412a48:	adc    al,0x10
  412a4a:	add    DWORD PTR [rax],eax
  412a4c:	adc    al,0x10
  412a4e:	add    DWORD PTR [rax],eax
  412a50:	adc    al,0x10
  412a52:	add    DWORD PTR [rax],eax
  412a54:	adc    al,0x10
  412a56:	add    DWORD PTR [rax],eax
  412a58:	adc    al,0x10
  412a5a:	add    DWORD PTR [rax],eax
  412a5c:	adc    al,0x10
  412a5e:	add    DWORD PTR [rax],eax
  412a60:	adc    al,0x10
  412a62:	add    DWORD PTR [rax],eax
  412a64:	adc    al,0x10
  412a66:	add    DWORD PTR [rax],eax
  412a68:	adc    al,0x10
  412a6a:	add    DWORD PTR [rax],eax
  412a6c:	adc    al,0x10
  412a6e:	add    DWORD PTR [rax],eax
  412a70:	adc    al,0x10
  412a72:	add    DWORD PTR [rax],eax
  412a74:	adc    al,0x10
  412a76:	add    DWORD PTR [rax],eax
  412a78:	adc    al,0x10
  412a7a:	add    DWORD PTR [rax],eax
  412a7c:	adc    al,0x10
  412a7e:	add    DWORD PTR [rax],eax
  412a80:	adc    al,0x10
  412a82:	add    DWORD PTR [rax],eax
  412a84:	adc    al,0x10
  412a86:	add    DWORD PTR [rax],eax
  412a88:	adc    al,0x10
  412a8a:	add    DWORD PTR [rax],eax
  412a8c:	adc    al,0x10
  412a8e:	add    DWORD PTR [rax],eax
  412a90:	adc    al,0x10
  412a92:	add    DWORD PTR [rax],eax
  412a94:	adc    al,0x10
  412a96:	add    DWORD PTR [rax],eax
  412a98:	adc    al,0x10
  412a9a:	add    DWORD PTR [rax],eax
  412a9c:	adc    al,0x10
  412a9e:	add    DWORD PTR [rax],eax
  412aa0:	adc    al,0x10
  412aa2:	add    DWORD PTR [rax],eax
  412aa4:	adc    al,0x10
  412aa6:	add    DWORD PTR [rax],eax
  412aa8:	adc    al,0x10
  412aaa:	add    DWORD PTR [rax],eax
  412aac:	adc    al,0x10
  412aae:	add    DWORD PTR [rax],eax
  412ab0:	adc    al,0x10
  412ab2:	add    DWORD PTR [rax],eax
  412ab4:	adc    al,0x10
  412ab6:	add    DWORD PTR [rax],eax
  412ab8:	adc    al,0x10
  412aba:	add    DWORD PTR [rax],eax
  412abc:	adc    al,0x10
  412abe:	add    DWORD PTR [rax],eax

0000000000412ac0 <__lib64_libmsvcrt_a_iname>:
  412ac0:	ins    DWORD PTR es:[rdi],dx
  412ac1:	jae    412b39 <__lib64_libmsvcrt_a_iname+0x79>
  412ac3:	movsxd esi,DWORD PTR [rdx+0x74]
  412ac6:	cs fs ins BYTE PTR es:[rdi],dx
  412ac9:	ins    BYTE PTR es:[rdi],dx
  412aca:	add    BYTE PTR [rax],al
  412acc:	sub    BYTE PTR [rax],dl
  412ace:	add    DWORD PTR [rax],eax
  412ad0:	sub    BYTE PTR [rax],dl
  412ad2:	add    DWORD PTR [rax],eax
  412ad4:	sub    BYTE PTR [rax],dl
  412ad6:	add    DWORD PTR [rax],eax
  412ad8:	sub    BYTE PTR [rax],dl
  412ada:	add    DWORD PTR [rax],eax
  412adc:	sub    BYTE PTR [rax],dl
  412ade:	add    DWORD PTR [rax],eax
  412ae0:	sub    BYTE PTR [rax],dl
  412ae2:	add    DWORD PTR [rax],eax
  412ae4:	sub    BYTE PTR [rax],dl
  412ae6:	add    DWORD PTR [rax],eax
  412ae8:	sub    BYTE PTR [rax],dl
  412aea:	add    DWORD PTR [rax],eax
  412aec:	sub    BYTE PTR [rax],dl
  412aee:	add    DWORD PTR [rax],eax
  412af0:	sub    BYTE PTR [rax],dl
  412af2:	add    DWORD PTR [rax],eax
  412af4:	sub    BYTE PTR [rax],dl
  412af6:	add    DWORD PTR [rax],eax
  412af8:	sub    BYTE PTR [rax],dl
  412afa:	add    DWORD PTR [rax],eax
  412afc:	sub    BYTE PTR [rax],dl
  412afe:	add    DWORD PTR [rax],eax
  412b00:	sub    BYTE PTR [rax],dl
  412b02:	add    DWORD PTR [rax],eax
  412b04:	sub    BYTE PTR [rax],dl
  412b06:	add    DWORD PTR [rax],eax
  412b08:	sub    BYTE PTR [rax],dl
  412b0a:	add    DWORD PTR [rax],eax
  412b0c:	sub    BYTE PTR [rax],dl
  412b0e:	add    DWORD PTR [rax],eax
  412b10:	sub    BYTE PTR [rax],dl
  412b12:	add    DWORD PTR [rax],eax
  412b14:	sub    BYTE PTR [rax],dl
  412b16:	add    DWORD PTR [rax],eax
  412b18:	sub    BYTE PTR [rax],dl
  412b1a:	add    DWORD PTR [rax],eax
  412b1c:	sub    BYTE PTR [rax],dl
  412b1e:	add    DWORD PTR [rax],eax
  412b20:	sub    BYTE PTR [rax],dl
  412b22:	add    DWORD PTR [rax],eax
  412b24:	sub    BYTE PTR [rax],dl
  412b26:	add    DWORD PTR [rax],eax
  412b28:	sub    BYTE PTR [rax],dl
  412b2a:	add    DWORD PTR [rax],eax
  412b2c:	sub    BYTE PTR [rax],dl
  412b2e:	add    DWORD PTR [rax],eax
  412b30:	sub    BYTE PTR [rax],dl
  412b32:	add    DWORD PTR [rax],eax
  412b34:	sub    BYTE PTR [rax],dl
  412b36:	add    DWORD PTR [rax],eax
  412b38:	sub    BYTE PTR [rax],dl
  412b3a:	add    DWORD PTR [rax],eax
  412b3c:	sub    BYTE PTR [rax],dl
  412b3e:	add    DWORD PTR [rax],eax
  412b40:	sub    BYTE PTR [rax],dl
  412b42:	add    DWORD PTR [rax],eax
  412b44:	sub    BYTE PTR [rax],dl
  412b46:	add    DWORD PTR [rax],eax
  412b48:	sub    BYTE PTR [rax],dl
  412b4a:	add    DWORD PTR [rax],eax
  412b4c:	sub    BYTE PTR [rax],dl
  412b4e:	add    DWORD PTR [rax],eax
  412b50:	sub    BYTE PTR [rax],dl
  412b52:	add    DWORD PTR [rax],eax
  412b54:	sub    BYTE PTR [rax],dl
  412b56:	add    DWORD PTR [rax],eax
  412b58:	sub    BYTE PTR [rax],dl
  412b5a:	add    DWORD PTR [rax],eax
  412b5c:	sub    BYTE PTR [rax],dl
  412b5e:	add    DWORD PTR [rax],eax
  412b60:	sub    BYTE PTR [rax],dl
  412b62:	add    DWORD PTR [rax],eax
  412b64:	sub    BYTE PTR [rax],dl
  412b66:	add    DWORD PTR [rax],eax
  412b68:	sub    BYTE PTR [rax],dl
  412b6a:	add    DWORD PTR [rax],eax
  412b6c:	sub    BYTE PTR [rax],dl
  412b6e:	add    DWORD PTR [rax],eax
  412b70:	sub    BYTE PTR [rax],dl
  412b72:	add    DWORD PTR [rax],eax
  412b74:	sub    BYTE PTR [rax],dl
  412b76:	add    DWORD PTR [rax],eax
  412b78:	sub    BYTE PTR [rax],dl
  412b7a:	add    DWORD PTR [rax],eax
  412b7c:	sub    BYTE PTR [rax],dl
  412b7e:	add    DWORD PTR [rax],eax
  412b80:	sub    BYTE PTR [rax],dl
  412b82:	add    DWORD PTR [rax],eax
  412b84:	sub    BYTE PTR [rax],dl
  412b86:	add    DWORD PTR [rax],eax
  412b88:	sub    BYTE PTR [rax],dl
  412b8a:	add    DWORD PTR [rax],eax
  412b8c:	sub    BYTE PTR [rax],dl
  412b8e:	add    DWORD PTR [rax],eax
  412b90:	sub    BYTE PTR [rax],dl
  412b92:	add    DWORD PTR [rax],eax
  412b94:	sub    BYTE PTR [rax],dl
  412b96:	add    DWORD PTR [rax],eax

0000000000412b98 <libgimp_2_0_0_dll_iname>:
  412b98:	ins    BYTE PTR es:[rdi],dx
  412b99:	imul   esp,DWORD PTR [rdx+0x67],0x2d706d69
  412ba0:	xor    ch,BYTE PTR [rsi]
  412ba2:	xor    BYTE PTR [rip+0x6c642e30],ch        # 6ca559d8 <libjpeg_8_dll_iname+0x6c642cd8>
  412ba8:	ins    BYTE PTR es:[rdi],dx
  412ba9:	add    BYTE PTR [rax],al
  412bab:	add    BYTE PTR [rax+rdx*1],bh
  412bae:	add    DWORD PTR [rax],eax
  412bb0:	cmp    al,0x10
  412bb2:	add    DWORD PTR [rax],eax
  412bb4:	cmp    al,0x10
  412bb6:	add    DWORD PTR [rax],eax
  412bb8:	cmp    al,0x10
  412bba:	add    DWORD PTR [rax],eax
  412bbc:	cmp    al,0x10
  412bbe:	add    DWORD PTR [rax],eax

0000000000412bc0 <libgimpbase_2_0_0_dll_iname>:
  412bc0:	ins    BYTE PTR es:[rdi],dx
  412bc1:	imul   esp,DWORD PTR [rdx+0x67],0x62706d69
  412bc8:	(bad)  
  412bc9:	jae    412c30 <libexif_12_dll_iname+0x10>
  412bcb:	sub    eax,0x2d302e32
  412bd0:	xor    BYTE PTR [rsi],ch
  412bd2:	fs ins BYTE PTR es:[rdi],dx
  412bd4:	ins    BYTE PTR es:[rdi],dx
  412bd5:	add    BYTE PTR [rax],al
  412bd7:	add    BYTE PTR [rax+0x10],dl
  412bda:	add    DWORD PTR [rax],eax
  412bdc:	push   rax
  412bdd:	adc    BYTE PTR [rcx],al
  412bdf:	add    BYTE PTR [rax+0x10],dl
  412be2:	add    DWORD PTR [rax],eax
  412be4:	push   rax
  412be5:	adc    BYTE PTR [rcx],al
  412be7:	add    BYTE PTR [rax+0x10],dl
  412bea:	add    DWORD PTR [rax],eax
  412bec:	push   rax
  412bed:	adc    BYTE PTR [rcx],al
  412bef:	add    BYTE PTR [rax+0x10],dl
  412bf2:	add    DWORD PTR [rax],eax

0000000000412bf4 <libgimpcolor_2_0_0_dll_iname>:
  412bf4:	ins    BYTE PTR es:[rdi],dx
  412bf5:	imul   esp,DWORD PTR [rdx+0x67],0x63706d69
  412bfc:	outs   dx,DWORD PTR ds:[rsi]
  412bfd:	ins    BYTE PTR es:[rdi],dx
  412bfe:	outs   dx,DWORD PTR ds:[rsi]
  412bff:	jb     412c2e <libexif_12_dll_iname+0xe>
  412c01:	xor    ch,BYTE PTR [rsi]
  412c03:	xor    BYTE PTR [rip+0x6c642e30],ch        # 6ca55a39 <libjpeg_8_dll_iname+0x6c642d39>
  412c09:	ins    BYTE PTR es:[rdi],dx
  412c0a:	add    BYTE PTR [rax],al
  412c0c:	adc    BYTE PTR fs:[rcx],al
  412c0f:	add    BYTE PTR [rax+rdx*1+0x1],ah
  412c13:	add    BYTE PTR [rax+rdx*1+0x1],ah
  412c17:	add    BYTE PTR [rax+rdx*1+0x1],ah
  412c1b:	add    BYTE PTR [rax+rdx*1+0x1],ah
	...

0000000000412c20 <libexif_12_dll_iname>:
  412c20:	ins    BYTE PTR es:[rdi],dx
  412c21:	imul   esp,DWORD PTR [rdx+0x65],0x2d666978
  412c28:	xor    DWORD PTR [rdx],esi
  412c2a:	cs fs ins BYTE PTR es:[rdi],dx
  412c2d:	ins    BYTE PTR es:[rdi],dx
  412c2e:	add    BYTE PTR [rax],al
  412c30:	js     412c42 <libexif_12_dll_iname+0x22>
  412c32:	add    DWORD PTR [rax],eax
  412c34:	js     412c46 <libexif_12_dll_iname+0x26>
  412c36:	add    DWORD PTR [rax],eax
  412c38:	js     412c4a <libexif_12_dll_iname+0x2a>
  412c3a:	add    DWORD PTR [rax],eax
  412c3c:	js     412c4e <libexif_12_dll_iname+0x2e>
  412c3e:	add    DWORD PTR [rax],eax
  412c40:	js     412c52 <libexif_12_dll_iname+0x32>
  412c42:	add    DWORD PTR [rax],eax
  412c44:	js     412c56 <libexif_12_dll_iname+0x36>
  412c46:	add    DWORD PTR [rax],eax
  412c48:	js     412c5a <libexif_12_dll_iname+0x3a>
  412c4a:	add    DWORD PTR [rax],eax
  412c4c:	js     412c5e <libexif_12_dll_iname+0x3e>
  412c4e:	add    DWORD PTR [rax],eax
  412c50:	js     412c62 <libexif_12_dll_iname+0x42>
  412c52:	add    DWORD PTR [rax],eax
  412c54:	js     412c66 <libexif_12_dll_iname+0x46>
  412c56:	add    DWORD PTR [rax],eax
  412c58:	js     412c6a <libexif_12_dll_iname+0x4a>
  412c5a:	add    DWORD PTR [rax],eax
  412c5c:	js     412c6e <libexif_12_dll_iname+0x4e>
  412c5e:	add    DWORD PTR [rax],eax
  412c60:	js     412c72 <libexif_12_dll_iname+0x52>
  412c62:	add    DWORD PTR [rax],eax
  412c64:	js     412c76 <libexif_12_dll_iname+0x56>
  412c66:	add    DWORD PTR [rax],eax
  412c68:	js     412c7a <libexif_12_dll_iname+0x5a>
  412c6a:	add    DWORD PTR [rax],eax
  412c6c:	js     412c7e <libexif_12_dll_iname+0x5e>
  412c6e:	add    DWORD PTR [rax],eax
  412c70:	js     412c82 <libexif_12_dll_iname+0x62>
  412c72:	add    DWORD PTR [rax],eax
  412c74:	js     412c86 <libexif_12_dll_iname+0x66>
  412c76:	add    DWORD PTR [rax],eax
  412c78:	js     412c8a <libexif_12_dll_iname+0x6a>
  412c7a:	add    DWORD PTR [rax],eax
  412c7c:	js     412c8e <libexif_12_dll_iname+0x6e>
  412c7e:	add    DWORD PTR [rax],eax
  412c80:	js     412c92 <libexif_12_dll_iname+0x72>
  412c82:	add    DWORD PTR [rax],eax
  412c84:	js     412c96 <libexif_12_dll_iname+0x76>
  412c86:	add    DWORD PTR [rax],eax
  412c88:	js     412c9a <libexif_12_dll_iname+0x7a>
  412c8a:	add    DWORD PTR [rax],eax
  412c8c:	js     412c9e <libexif_12_dll_iname+0x7e>
  412c8e:	add    DWORD PTR [rax],eax
  412c90:	js     412ca2 <libexif_12_dll_iname+0x82>
  412c92:	add    DWORD PTR [rax],eax
  412c94:	js     412ca6 <libexif_12_dll_iname+0x86>
  412c96:	add    DWORD PTR [rax],eax
  412c98:	js     412caa <libexif_12_dll_iname+0x8a>
  412c9a:	add    DWORD PTR [rax],eax
  412c9c:	js     412cae <libglib_2_0_0_dll_iname+0x2>
  412c9e:	add    DWORD PTR [rax],eax
  412ca0:	js     412cb2 <libglib_2_0_0_dll_iname+0x6>
  412ca2:	add    DWORD PTR [rax],eax
  412ca4:	js     412cb6 <libglib_2_0_0_dll_iname+0xa>
  412ca6:	add    DWORD PTR [rax],eax
  412ca8:	js     412cba <libglib_2_0_0_dll_iname+0xe>
  412caa:	add    DWORD PTR [rax],eax

0000000000412cac <libglib_2_0_0_dll_iname>:
  412cac:	ins    BYTE PTR es:[rdi],dx
  412cad:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  412cb4:	xor    ch,BYTE PTR [rsi]
  412cb6:	xor    BYTE PTR [rip+0x6c642e30],ch        # 6ca55aec <libjpeg_8_dll_iname+0x6c642dec>
  412cbc:	ins    BYTE PTR es:[rdi],dx
  412cbd:	add    BYTE PTR [rax],al
  412cbf:	add    BYTE PTR [rax+rdx*1+0x108c0001],cl
  412cc6:	add    DWORD PTR [rax],eax
  412cc8:	mov    WORD PTR [rax],ss
  412cca:	add    DWORD PTR [rax],eax
  412ccc:	mov    WORD PTR [rax],ss
  412cce:	add    DWORD PTR [rax],eax

0000000000412cd0 <libintl_8_dll_iname>:
  412cd0:	ins    BYTE PTR es:[rdi],dx
  412cd1:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  412cd8:	cmp    BYTE PTR [rsi],ch
  412cda:	fs ins BYTE PTR es:[rdi],dx
  412cdc:	ins    BYTE PTR es:[rdi],dx
  412cdd:	add    BYTE PTR [rax],al
  412cdf:	add    BYTE PTR [rax-0x5ffffef0],ah
  412ce5:	adc    BYTE PTR [rcx],al
  412ce7:	add    BYTE PTR [rax-0x5ffffef0],ah
  412ced:	adc    BYTE PTR [rcx],al
  412cef:	add    BYTE PTR [rax-0x5ffffef0],ah
  412cf5:	adc    BYTE PTR [rcx],al
  412cf7:	add    BYTE PTR [rax-0x5ffffef0],ah
  412cfd:	adc    BYTE PTR [rcx],al
	...

0000000000412d00 <libjpeg_8_dll_iname>:
  412d00:	ins    BYTE PTR es:[rdi],dx
  412d01:	imul   esp,DWORD PTR [rdx+0x6a],0x2d676570
  412d08:	cmp    BYTE PTR [rsi],ch
  412d0a:	fs ins BYTE PTR es:[rdi],dx
  412d0c:	ins    BYTE PTR es:[rdi],dx
  412d0d:	add    BYTE PTR [rax],al
	...

Disassembly of section .CRT:

0000000000413000 <.CRT>:
	...
  413008:	(bad)  
  413009:	adc    DWORD PTR [rax+0x0],eax
	...
  413020:	adc    BYTE PTR [rax],dl
  413022:	add    BYTE PTR [rax],al
  413025:	add    BYTE PTR [rax],al
  413027:	add    BYTE PTR [rax-0x76],al
  41302a:	add    BYTE PTR [rax],al
	...
  41303d:	add    BYTE PTR [rax],al
  41303f:	add    BYTE PTR [rax-0x74],dh
  413042:	add    BYTE PTR [rax],al
  413045:	add    BYTE PTR [rax],al
  413047:	add    BYTE PTR [rax-0x74],al
  41304a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000414000 <.tls>:
	...
  414020:	add    BYTE PTR [rax+0x41],al
  414023:	add    BYTE PTR [rax],al
  414025:	add    BYTE PTR [rax],al
  414027:	add    BYTE PTR [rax+0x40],ah
  41402a:	add    BYTE PTR [r8],al
  41402d:	add    BYTE PTR [rax],al
  41402f:	add    BYTE PTR [rdi+rax*1],bl
  414032:	add    BYTE PTR [r8],al
  414035:	add    BYTE PTR [rax],al
  414037:	add    BYTE PTR [rax+0x30],al
  41403a:	add    BYTE PTR [r8],al
	...

Disassembly of section .rsrc:

0000000000415000 <.rsrc>:
	...
  41500c:	add    BYTE PTR [rax],al
  41500e:	add    al,0x0
  415010:	add    eax,DWORD PTR [rax]
  415012:	add    BYTE PTR [rax],al
  415014:	xor    BYTE PTR [rax],al
  415016:	add    BYTE PTR [rax+0xe],al
  41501c:	add    BYTE PTR [rax],0x0
  41501f:	adc    BYTE PTR [rax],0x0
  415022:	add    BYTE PTR [rax],al
  415024:	mov    al,0x0
  415026:	add    BYTE PTR [rax+0x18],al
  41502c:	loopne 41502e <libjpeg_8_dll_iname+0x232e>
  41502e:	add    BYTE PTR [rax+0x0],al
	...
  41503c:	add    BYTE PTR [rax],al
  41503e:	add    al,BYTE PTR [rax]
  415040:	add    DWORD PTR [rax],eax
  415042:	add    BYTE PTR [rax],al
  415044:	push   rax
  415045:	add    BYTE PTR [rax],al
  415047:	add    BYTE PTR [rdx],0x0
  41504a:	add    BYTE PTR [rax],al
  41504c:	push   0x800000
	...
  41505d:	add    BYTE PTR [rcx],al
  41505f:	add    BYTE PTR [rcx],cl
  415061:	add    al,0x0
  415063:	add    BYTE PTR [rax],dl
  415065:	add    DWORD PTR [rax],eax
	...
  415073:	add    BYTE PTR [rax],al
  415075:	add    BYTE PTR [rcx],al
  415077:	add    BYTE PTR [rcx],cl
  415079:	add    al,0x0
  41507b:	add    BYTE PTR [rax],ah
  41507d:	add    DWORD PTR [rax],eax
	...
  41508b:	add    BYTE PTR [rax],al
  41508d:	add    BYTE PTR [rcx],al
  41508f:	add    BYTE PTR [rcx],al
  415091:	add    BYTE PTR [rax],al
  415093:	add    BYTE PTR [rax+0x800000],bl
	...
  4150a5:	add    BYTE PTR [rcx],al
  4150a7:	add    BYTE PTR [rcx],cl
  4150a9:	add    al,0x0
  4150ab:	add    BYTE PTR [rax],dh
  4150ad:	add    DWORD PTR [rax],eax
	...
  4150bb:	add    BYTE PTR [rax],al
  4150bd:	add    BYTE PTR [rcx],al
  4150bf:	add    BYTE PTR [rcx],al
  4150c1:	add    BYTE PTR [rax],al
  4150c3:	add    al,cl
  4150c5:	add    BYTE PTR [rax],al
  4150c7:	add    BYTE PTR [rax],0x0
	...
  4150d6:	add    DWORD PTR [rax],eax
  4150d8:	or     DWORD PTR [rax+rax*1],eax
  4150db:	add    BYTE PTR [rax+0x1],al
	...
  4150ee:	add    DWORD PTR [rax],eax
  4150f0:	add    DWORD PTR [rax],eax
  4150f2:	add    BYTE PTR [rax],al
  4150f4:	clc    
  4150f5:	add    BYTE PTR [rax],al
  4150f7:	add    BYTE PTR [rax],0x0
	...
  415106:	add    DWORD PTR [rax],eax
  415108:	or     DWORD PTR [rax+rax*1],eax
  41510b:	add    BYTE PTR [rax+0x1],dl
  41510e:	add    BYTE PTR [rax],al
  415110:	(bad)  
  415111:	push   rcx
  415112:	add    DWORD PTR [rax],eax
  415114:	push   0x5
  415119:	add    BYTE PTR [rax],al
  41511b:	add    BYTE PTR [rax],al
  41511d:	add    BYTE PTR [rax],al
  41511f:	add    al,cl
  415121:	push   rsi
  415122:	add    DWORD PTR [rax],eax
  415124:	push   0x4
  415129:	add    BYTE PTR [rax],al
  41512b:	add    BYTE PTR [rax],al
  41512d:	add    BYTE PTR [rax],al
  41512f:	add    BYTE PTR [rax],dh
  415131:	pop    rbx
  415132:	add    DWORD PTR [rax],eax
  415134:	and    al,BYTE PTR [rax]
	...
  41513e:	add    BYTE PTR [rax],al
  415140:	pop    rax
  415141:	pop    rbx
  415142:	add    DWORD PTR [rax],eax
  415144:	mov    WORD PTR [rbx],es
	...
  41514e:	add    BYTE PTR [rax],al
  415150:	call   ffffffffa94152b3 <libjpeg_8_dll_iname+0xffffffffa90025b3>
  415155:	add    al,0x0
	...
  41515f:	add    BYTE PTR [rax],ch
  415161:	add    BYTE PTR [rax],al
  415163:	add    BYTE PTR [rax],dl
  415165:	add    BYTE PTR [rax],al
  415167:	add    BYTE PTR [rax],ah
  415169:	add    BYTE PTR [rax],al
  41516b:	add    BYTE PTR [rcx],al
  41516d:	add    BYTE PTR [rax],cl
  41516f:	add    BYTE PTR [rax],al
  415171:	add    BYTE PTR [rax],al
  415173:	add    BYTE PTR [rax+0x1],al
	...
  41518a:	add    BYTE PTR [rax],al
  41518c:	addr32 jbe 41520c <libjpeg_8_dll_iname+0x250c>
  41518f:	add    BYTE PTR [rcx-0x80],dh
  415192:	xchg   BYTE PTR [rax],al
  415194:	(bad)  
  415195:	(bad)  
  415196:	inc    DWORD PTR [rax]
  415198:	push   rdx
  415199:	movsxd ebp,DWORD PTR [rbx+0x0]
  41519c:	(bad)  
  41519d:	femms  
  41519f:	add    dh,dh
  4151a1:	div    dh
  4151a3:	add    bh,dh
  4151a5:	div    edi
  4151a7:	add    BYTE PTR [rbp+0x5d],cl
  4151aa:	add    BYTE PTR fs:[rip+0xffffffff95002526],ah        # ffffffff954176d7 <libjpeg_8_dll_iname+0xffffffff950049d7>
  4151b1:	pushf  
  4151b2:	pushf  
  4151b3:	add    BYTE PTR [rdx-0x58ff4344],dh
  4151b9:	mov    dl,0xb3
  4151bb:	add    BYTE PTR [rax+rbp*4-0x616eff56],bl
  4151c2:	movabs eax,ds:0x4b4b4600f4f4f400
  4151cb:	add    BYTE PTR [rax],bh
  4151cd:	cmp    DWORD PTR [rdi],esi
  4151cf:	add    BYTE PTR [rsp+rbp*2+0x74],bl
  4151d3:	add    BYTE PTR [rdi],ah
  4151d5:	sub    BYTE PTR [rax],ch
  4151d7:	add    BYTE PTR [rsi+0x68],ah
  4151da:	add    BYTE PTR [edx-0x5dff6b6c],dl
  4151e1:	movabs ds:0x959300a2a4a000a2,eax
  4151ea:	xchg   esp,eax
  4151eb:	add    BYTE PTR [rdx+rdx*4+0x65630091],cl
  4151f2:	add    BYTE PTR fs:[rbp+0x5a],dl
  4151f6:	pop    rbx
  4151f7:	add    BYTE PTR [rcx+rdx*2+0x52],cl
  4151fb:	add    bh,ah
  4151fd:	out    dx,eax
  4151fe:	out    dx,eax
  4151ff:	add    BYTE PTR [rsi+0x60],cl
  415202:	push   0x6b696300
  415207:	add    BYTE PTR [rax-0x32ff5c5d],ah
  41520d:	(bad)  
  41520e:	(bad)  
  41520f:	add    BYTE PTR [rax+rbp*4-0x3d40ff59],ah
  415216:	rol    DWORD PTR [rax],0xe3
  415219:	in     eax,0xe6
  41521b:	add    BYTE PTR [rbp+0x6a009695],cl
  415221:	je     41529b <libjpeg_8_dll_iname+0x259b>
  415223:	add    BYTE PTR [rdx],bh
  415225:	rex
  415226:	rex.X add bl,spl
  415229:	(bad)  
  41522a:	jmp    41522c <libjpeg_8_dll_iname+0x252c>
  41522c:	rex.WXB pop r13
  41522e:	add    BYTE PTR gs:[rbp+0x67],ah
  415232:	addr32 add bl,ch
  415235:	in     al,dx
  415236:	in     al,dx
  415237:	add    bl,bl
  415239:	fcmovnu st,st(3)
  41523b:	add    BYTE PTR [rax-0x10ff4345],bh
  415241:	out    dx,eax
  415242:	out    dx,eax
  415243:	add    dl,dl
  415245:	rcl    dl,cl
  415247:	add    BYTE PTR [rbp+0x6400c2c1],bh
  41524d:	jo     4152c3 <libjpeg_8_dll_iname+0x25c3>
  41524f:	add    BYTE PTR [rbx],bh
  415251:	rex
  415252:	rex.XB add r8b,spl
  415255:	out    0xe8,al
  415257:	add    BYTE PTR [rdi+0x5a],al
  41525a:	(bad)  
  41525b:	add    bl,al
  41525d:	ret    
  41525e:	rol    DWORD PTR [rax],0x70
  415261:	jo     4152d1 <libjpeg_8_dll_iname+0x25d1>
  415263:	add    al,bl
  415265:	fcomp  st(0)
  415267:	add    BYTE PTR [rbx+riz*2+0x62],ah
  41526b:	add    BYTE PTR [rax+rsi*4-0x5150ff4f],ch
  415272:	scas   al,BYTE PTR es:[rdi]
  415273:	add    BYTE PTR [rbx],bh
  415275:	cmp    bh,BYTE PTR [rdx]
  415277:	add    BYTE PTR [rsi+0x6200c3c2],bh
  41527d:	outs   dx,BYTE PTR ds:[rsi]
  41527e:	jae    415280 <libjpeg_8_dll_iname+0x2580>
  415280:	ds rex.R
  415282:	rex.RXB add r12b,r11b
  415285:	loop   41526b <libjpeg_8_dll_iname+0x256b>
  415287:	add    BYTE PTR [rdi+rdx*2+0x5f],al
  41528b:	add    BYTE PTR [rdx+0x5800a8aa],ch
  415291:	pop    rax
  415292:	push   rbp
  415293:	add    BYTE PTR [rbp+0x72],ch
  415296:	je     415298 <libjpeg_8_dll_iname+0x2598>
  415298:	mov    bl,0xb9
  41529a:	mov    edx,0xa3a29900
  41529f:	add    BYTE PTR [rbx-0x3dff4e4f],ch
  4152a5:	(bad)  
  4152a6:	(bad)  
  4152a7:	add    BYTE PTR [rcx+0x6500bcbb],bh
  4152ad:	outs   dx,BYTE PTR ds:[rsi]
  4152ae:	jb     4152b0 <libjpeg_8_dll_iname+0x25b0>
  4152b0:	push   rdi
  4152b1:	(bad)  
  4152b2:	data16 add BYTE PTR [rcx+0x45],al
  4152b6:	add    r9b,r11b
  4152b9:	fsubrp st(1),st
  4152bb:	add    dh,dl
  4152bd:	(bad)  
  4152bf:	add    BYTE PTR [rax],bl
  4152c1:	(bad)  
  4152c2:	(bad)  
  4152c4:	xor    DWORD PTR [rax+0x46],eax
  4152c7:	add    BYTE PTR [rcx+0x5a],al
  4152ca:	add    BYTE PTR fs:[rdx],bh
  4152cd:	rex.WR push rsp
  4152cf:	add    BYTE PTR [rbx+0x4f],al
  4152d2:	push   rsp
  4152d3:	add    BYTE PTR [rsi+0x53],al
  4152d6:	pop    rax
  4152d7:	add    BYTE PTR [rbx+0x51],al
  4152da:	push   rsi
  4152db:	add    BYTE PTR [rbx+0x50],al
  4152de:	push   rsi
  4152df:	add    BYTE PTR [rcx+0x57],dl
  4152e2:	pop    rcx
  4152e3:	add    BYTE PTR [rax+0x50],dl
  4152e6:	rex.WRX add sil,r10b
  4152e9:	fcmovu st,st(6)
  4152eb:	add    BYTE PTR [rcx],ch
  4152ed:	rex.X
  4152ee:	rex.WX add BYTE PTR [rip+0x2a001516],dl        # 2a41680b <libjpeg_8_dll_iname+0x2a003b0b>
  4152f5:	sub    al,0x2b
  4152f7:	add    BYTE PTR [rcx+0x5b],dl
  4152fa:	pop    rsi
  4152fb:	add    BYTE PTR [rsi+0x6c],bl
  4152fe:	jb     415300 <libjpeg_8_dll_iname+0x2600>
  415300:	rex.WRXB pop r14
  415302:	add    BYTE PTR fs:[rdi],bh
  415305:	rex.WRX push rbp
  415307:	add    BYTE PTR [rcx+rax*2],dh
  41530a:	rex.W add BYTE PTR [rdx+rax*2],sil
  41530e:	rex.WB add BYTE PTR [r13+0x60],dl
  415312:	add    BYTE PTR gs:[rdx+0x46],al
  415316:	rex.RXB add BYTE PTR [r8-0x2dff6367],r11b
  41531d:	(bad)  
  41531e:	fiadd  DWORD PTR [rax]
  415320:	cmp    DWORD PTR [rdi+0x57],ecx
  415323:	add    BYTE PTR [rdi],ch
  415325:	rex.RXB
  415326:	rex.WRX add BYTE PTR [r11*1+0x554f001c],r11b
  41532e:	push   rsp
  41532f:	add    BYTE PTR [rdi+0x5d],dl
  415332:	pop    rdi
  415333:	add    BYTE PTR [rbp+rbx*2+0x61],dl
  415337:	add    BYTE PTR [rcx+0x63],bl
  41533a:	push   0x67635a00
  41533f:	add    BYTE PTR [rsi+0x54],cl
  415342:	push   rsi
  415343:	add    BYTE PTR [rbx+0x4f],cl
  415346:	rex.WRXB add BYTE PTR [r11-0x30ff7172],r9b
  41534d:	rcl    bh,cl
  41534f:	add    BYTE PTR [rsi],dh
  415351:	rex.WR push rsp
  415353:	add    BYTE PTR [rdx-0x78],bh
  415356:	mov    BYTE PTR [rax],al
  415358:	mov    ch,0xc5
  41535b:	add    BYTE PTR [rsi-0x68ff5150],ch
  415361:	xchg   edi,eax
  415362:	xchg   esi,eax
  415363:	add    BYTE PTR [rbx+0x3d009494],dl
  415369:	rex.WX
  41536a:	rex.WXB add BYTE PTR [rip+0xffffffffc5004c47],sil        # ffffffffc5419fb8 <libjpeg_8_dll_iname+0xffffffffc50072b8>
  415371:	int    0xcd
  415373:	add    ah,cl
  415375:	(bad)  
  415376:	(bad)  
  415377:	add    BYTE PTR [rbx],dh
  415379:	rex.WX push rdx
  41537b:	add    BYTE PTR [rax-0x79],bh
  41537e:	xchg   DWORD PTR [rax],eax
  415380:	out    dx,al
  415381:	out    dx,al
  415382:	out    dx,al
  415383:	add    dl,ch
  415385:	out    dx,al
  415386:	out    dx,al
  415387:	add    dh,bl
  415389:	in     al,0xe4
  41538b:	add    BYTE PTR [rsp+rax*2],ch
  41538e:	rex.WR add al,r9b
  415391:	leave  
  415392:	rol    BYTE PTR [rax],1
  415394:	leave  
  415395:	retf   0xd1
  415398:	(bad)  
  415399:	rex.RXB
  41539a:	rex.WRXB add BYTE PTR [r9-0x7f],r14b
  41539e:	add    DWORD PTR [rax],0xdedede
  4153a4:	mov    dh,0xce
  4153a7:	add    BYTE PTR [rbx+0x7b],ch
  4153aa:	jnp    4153ac <libjpeg_8_dll_iname+0x26ac>
  4153ac:	fs jne 415425 <libjpeg_8_dll_iname+0x2725>
  4153af:	add    BYTE PTR [rbp+0x6f],bl
  4153b2:	jno    4153b4 <libjpeg_8_dll_iname+0x26b4>
  4153b4:	push   rdi
  4153b5:	imul   ebp,DWORD PTR [rax+rax*1+0x50],0x3c006763
  4153bd:	push   rdx
  4153be:	pop    rax
  4153bf:	add    BYTE PTR [rsi],dh
  4153c1:	rex.WRB push r11
	...
  415587:	add    BYTE PTR [rax],al
  415589:	add    BYTE PTR [rax-0x73747577],cl
  41558f:	add    BYTE PTR [rax],al
  415591:	lea    ecx,[rsi+0x5967]
  415597:	add    BYTE PTR [rax],al
  415599:	add    BYTE PTR [rbp+0x594d4d86],al
  41559f:	add    BYTE PTR [rax],al
  4155a1:	test   DWORD PTR [rdi+0x8187],eax
  4155a7:	add    BYTE PTR [rax],al
  4155a9:	add    BYTE PTR [rbp+0x7e],bh
  4155ac:	jg     41552e <libjpeg_8_dll_iname+0x282e>
  4155ae:	add    DWORD PTR [rax],0x83827d00
  4155b4:	test   BYTE PTR [rax],al
  4155b6:	add    BYTE PTR [rax],al
  4155b8:	add    BYTE PTR [rax],al
  4155ba:	jae    415630 <libjpeg_8_dll_iname+0x2930>
  4155bc:	jne    415634 <libjpeg_8_dll_iname+0x2934>
  4155be:	ja     415638 <libjpeg_8_dll_iname+0x2938>
  4155c0:	jns    41563c <libjpeg_8_dll_iname+0x293c>
  4155c2:	jnp    41563f <libjpeg_8_dll_iname+0x293f>
  4155c4:	jl     4155c6 <libjpeg_8_dll_iname+0x28c6>
  4155c6:	add    BYTE PTR [rax],al
  4155c8:	add    BYTE PTR [rax],al
  4155ca:	imul   ebp,DWORD PTR [rdx+0x6b],0x6f6e6d6c
  4155d1:	jo     415644 <libjpeg_8_dll_iname+0x2944>
  4155d3:	jno    415647 <libjpeg_8_dll_iname+0x2947>
  4155d5:	add    BYTE PTR [rax],al
  4155d7:	add    BYTE PTR [rax],al
  4155d9:	pop    rbx
  4155da:	pop    rsp
  4155db:	pop    rbp
  4155dc:	pop    rsi
  4155dd:	pop    rdi
  4155de:	(bad)  
  4155df:	(bad)  
  4155e0:	(bad)
  4155e5:	addr32 pop rcx
  4155e7:	add    BYTE PTR [rax],al
  4155e9:	rex.WRX
  4155ea:	rex.WRXB push r8
  4155ec:	push   rcx
  4155ed:	push   rdx
  4155ee:	push   rbx
  4155ef:	push   rsp
  4155f0:	push   rbp
  4155f1:	push   rsi
  4155f2:	push   rdi
  4155f3:	pop    rax
  4155f4:	rex.WRB
  4155f5:	rex.WRB
  4155f6:	rex.WRB pop r9
  4155f8:	rex.B
  4155f9:	rex.X
  4155fa:	rex.XB
  4155fb:	rex.R
  4155fc:	rex.RB
  4155fd:	rex.RX
  4155fe:	rex.RXB
  4155ff:	rex.W
  415600:	rex.WB
  415601:	rex.WX
  415602:	rex.WXB
  415603:	rex.WR
  415604:	rex.WRB
  415605:	rex.WRB
  415606:	rex.WRB add al,0x35
  415609:	ss (bad) 
  41560b:	cmp    BYTE PTR [rcx],bh
  41560d:	(bad)  
  41560e:	cmp    bh,BYTE PTR [rbx]
  415610:	cmp    al,0x3d
  415612:	ds (bad) 
  415614:	adc    al,BYTE PTR [rax+rax*1]
  415618:	add    BYTE PTR [rdx],ch
  41561a:	sub    ebp,DWORD PTR [rbp*1+0x302f2e06]
  415621:	xor    DWORD PTR [rdx],esi
  415623:	xor    esi,DWORD PTR [rax+rax*1]
  415626:	add    BYTE PTR [rax],al
  415628:	add    BYTE PTR [rdi],bl
  41562a:	and    BYTE PTR [rcx],ah
  41562c:	and    ah,BYTE PTR [rbx]
  41562e:	add    esp,DWORD PTR ds:0x29282726
  415635:	add    BYTE PTR [rax],al
  415637:	add    BYTE PTR [rax],al
  415639:	sbb    al,0x14
  41563b:	adc    eax,0x19181716
  415640:	sbb    bl,BYTE PTR [rbx]
  415642:	sbb    al,0x1d
  415644:	(bad)  
  415645:	add    BYTE PTR [rax],al
  415647:	add    BYTE PTR [rax],al
  415649:	adc    DWORD PTR [rdx],ecx
  41564b:	or     ecx,DWORD PTR [rcx*1+0x100f070e]
  415652:	adc    DWORD PTR [rdx],edx
  415654:	add    al,0x0
	...
  41565e:	add    al,BYTE PTR [rsi]
  415660:	(bad)  
  415661:	or     BYTE PTR [rcx],cl
	...
  41566b:	add    BYTE PTR [rax],al
  41566d:	add    BYTE PTR [rdx],al
  41566f:	add    eax,DWORD PTR [rbx]
  415671:	add    al,0x0
	...
  41567f:	add    DWORD PTR [rcx],eax
  415681:	add    BYTE PTR [rax],al
  415683:	add    BYTE PTR [rax],al
  415685:	add    BYTE PTR [rax],al
  415687:	add    cl,al
  415689:	xchg   DWORD PTR [rax],eax
  41568b:	add    cl,al
  41568d:	xchg   DWORD PTR [rax],eax
  41568f:	add    cl,al
  415691:	xchg   DWORD PTR [rax],eax
  415693:	add    al,al
  415695:	(bad)  
  415696:	add    BYTE PTR [rax],al
  415698:	rol    BYTE PTR [rdi],0x0
  41569b:	add    BYTE PTR [rax+0x1],al
	...
  4156a9:	add    DWORD PTR [rax],eax
  4156ab:	add    BYTE PTR [rax-0x7ffffff9],al
  4156b1:	(bad)  
  4156b2:	add    BYTE PTR [rax],al
  4156b4:	add    BYTE PTR [rdi],0x0
  4156b7:	add    BYTE PTR [rax-0x3fffff9],al
  4156bd:	(bad)  
  4156be:	add    BYTE PTR [rax],al
  4156c0:	cld    
  4156c1:	(bad)  
  4156c2:	add    BYTE PTR [rax],al
  4156c4:	(bad)  
  4156c5:	jg     4156c7 <libjpeg_8_dll_iname+0x29c7>
  4156c7:	add    BYTE PTR [rax],ch
  4156c9:	add    BYTE PTR [rax],al
  4156cb:	add    BYTE PTR [rax],dl
  4156cd:	add    BYTE PTR [rax],al
  4156cf:	add    BYTE PTR [rax],ah
  4156d1:	add    BYTE PTR [rax],al
  4156d3:	add    BYTE PTR [rcx],al
  4156d5:	add    BYTE PTR [rax],ah
  4156d7:	add    BYTE PTR [rax],al
  4156d9:	add    BYTE PTR [rax],al
  4156db:	add    BYTE PTR [rax+0x4],al
	...
  4156f6:	add    BYTE PTR [rax],al
  4156f8:	imul   edi,DWORD PTR [rbx+0x7b],0xffffffff
  4156fc:	fs jne 415775 <libjpeg_8_dll_iname+0x2a75>
  4156ff:	call   FWORD PTR [rbp+0x6f]
  415702:	jno    415703 <libjpeg_8_dll_iname+0x2a03>
  415704:	push   rdi
  415705:	imul   ebp,DWORD PTR [rdi+rdi*8+0x50],0xff6763
  41570d:	add    BYTE PTR [rax],al
  41570f:	add    BYTE PTR [rax],al
  415711:	add    BYTE PTR [rax],al
  415713:	add    BYTE PTR [rdx+rdx*2],bh
  415716:	pop    rax
  415717:	push   QWORD PTR [rsi]
  415719:	rex.WRB push r11
  41571b:	jmp    FWORD PTR [rdi]
  41571d:	rex.RXB
  41571e:	rex.WRX jmp FWORD PTR [rcx]
  415721:	rex.X
  415722:	rex.WX inc QWORD PTR [rax]
	...
  415735:	add    BYTE PTR [rax],al
  415737:	add    BYTE PTR [rcx-0x7f],dh
  41573a:	cmp    edi,0xffdedede
  415740:	(bad)  
  415741:	(bad)  
  415743:	call   rsi
  415745:	(bad)  
  415747:	jmp    FWORD PTR [rcx]
  415749:	rex.X
  41574a:	rex.WX inc QWORD PTR [rax]
  41574d:	add    BYTE PTR [rax],al
  41574f:	add    BYTE PTR [rax],al
  415751:	add    BYTE PTR [rax],al
  415753:	add    BYTE PTR [rcx-0x7f],dh
  415756:	cmp    edi,0xffcec6c6
  41575c:	mov    dh,0xce
  41575f:	jmp    FWORD PTR [rsp+rax*2]
  415762:	rex.WR inc QWORD PTR [rax]
	...
  415775:	add    BYTE PTR [rax],al
  415777:	add    BYTE PTR [rax-0x79],bh
  41577a:	xchg   edi,edi
  41577c:	out    dx,al
  41577d:	out    dx,al
  41577e:	out    dx,al
  41577f:	(bad)  
  415780:	(bad)  
  415781:	out    dx,al
  415782:	out    dx,al
  415783:	(bad)  
  415784:	fsubrp st(4),st
  415786:	in     al,0xff
  415788:	sub    al,0x44
  41578a:	rex.WR inc QWORD PTR [rax]
  41578d:	add    BYTE PTR [rax],al
  41578f:	add    BYTE PTR [rax],al
  415791:	add    BYTE PTR [rax],al
  415793:	add    BYTE PTR [rax-0x79],bh
  415796:	xchg   edi,edi
  415798:	enter  0xd0c9,0xff
  41579c:	leave  
  41579d:	retf   0xffd1
  4157a0:	(bad)  
  4157a1:	rex.RXB
  4157a2:	rex.WRXB inc QWORD PTR [r8]
	...
  4157b5:	add    BYTE PTR [rax],al
  4157b7:	add    BYTE PTR [rdx-0x78],bh
  4157ba:	mov    bh,bh
  4157bc:	mov    ch,0xc5
  4157bf:	jmp    FWORD PTR [rsi-0x68005150]
  4157c5:	xchg   edi,eax
  4157c6:	xchg   esi,eax
  4157c7:	call   QWORD PTR [rbx+0x3dff9494]
  4157cd:	rex.WX
  4157ce:	rex.WXB push QWORD PTR [rip+0xffffffffc5ff4c47]        # ffffffffc640a41c <libjpeg_8_dll_iname+0xffffffffc5ff771c>
  4157d5:	int    0xcd
  4157d7:	dec    esp
  4157d9:	(bad)  
  4157da:	(bad)  
  4157db:	dec    esp
  4157dd:	(bad)  
  4157de:	(bad)  
  4157df:	push   QWORD PTR [rbx]
  4157e1:	rex.WX push rdx
  4157e3:	inc    DWORD PTR [rax]
	...
  4157f1:	add    BYTE PTR [rax],al
  4157f3:	add    BYTE PTR [rbx*1+0x554f261c],bl
  4157fa:	push   rsp
  4157fb:	call   QWORD PTR [rdi+0x5d]
  4157fe:	pop    rdi
  4157ff:	call   QWORD PTR [rbp+rbx*2+0x61]
  415803:	call   FWORD PTR [rcx+0x63]
  415806:	push   0x67635aff
  41580b:	dec    DWORD PTR [rsi+0x54]
  41580e:	push   rsi
  41580f:	dec    DWORD PTR [rbx+0x4f]
  415812:	rex.WRXB dec QWORD PTR [r11-0x30007172]
  415819:	rcl    bh,cl
  41581b:	dec    edi
  41581d:	rcl    bh,cl
  41581f:	push   QWORD PTR [rsi]
  415821:	rex.WR push rsp
  415823:	inc    DWORD PTR [rax]
	...
  41582d:	add    BYTE PTR [rax],al
  41582f:	add    BYTE PTR [rip+0x2a461516],dl        # 2a876d4b <libjpeg_8_dll_iname+0x2a46404b>
  415835:	sub    al,0x2b
  415837:	loopne 41588a <libjpeg_8_dll_iname+0x2b8a>
  415839:	pop    rbx
  41583a:	pop    rsi
  41583b:	call   FWORD PTR [rsi+0x6c]
  41583e:	jb     41583f <libjpeg_8_dll_iname+0x2b3f>
  415840:	rex.WRXB pop r14
  415842:	fs (bad) 
  415844:	(bad)  
  415845:	rex.WRX push rbp
  415847:	push   QWORD PTR [rcx+rax*2]
  41584a:	rex.W push QWORD PTR [rdx+rax*2]
  41584e:	rex.WB call QWORD PTR [r13+0x60]
  415852:	inc    DWORD PTR gs:[rdx+0x46]
  415856:	rex.RXB call FWORD PTR [r8-0x2d006367]
  41585d:	(bad)  
  41585e:	(bad)  
  415860:	cmp    DWORD PTR [rdi+0x57],ecx
  415863:	jmp    FWORD PTR [rdi]
  415865:	rex.RXB
  415866:	rex.WRX jmp FWORD PTR [rcx]
  415869:	rex.X
  41586a:	rex.WX inc QWORD PTR [rax]
  41586d:	add    BYTE PTR [rax],al
  41586f:	add    BYTE PTR [rax],al
  415871:	add    BYTE PTR [rax],al
  415873:	jmp    41588d <libjpeg_8_dll_iname+0x2b8d>
  415875:	(bad)  
  415876:	ud0    esi,DWORD PTR [rcx]
  415879:	rex
  41587a:	rex.RX inc DWORD PTR [rcx+0x5a]
  41587e:	fs (bad) 
  415880:	cmp    cl,BYTE PTR [rsp+rdx*2-0x1]
  415884:	rex.XB
  415885:	rex.WRXB push r12
  415887:	inc    DWORD PTR [rsi+0x53]
  41588a:	pop    rax
  41588b:	inc    DWORD PTR [rbx+0x51]
  41588e:	push   rsi
  41588f:	inc    DWORD PTR [rbx+0x50]
  415892:	push   rsi
  415893:	call   QWORD PTR [rcx+0x57]
  415896:	pop    rcx
  415897:	call   QWORD PTR [rax+0x50]
  41589a:	rex.WRX call rsi
  41589d:	fcmovu st,st(6)
  41589f:	call   rsi
  4158a1:	(bad)  
  4158a3:	call   rsi
  4158a5:	(bad)  
  4158a7:	call   rsi
  4158a9:	(bad)  
  4158ab:	jmp    FWORD PTR [rcx]
  4158ad:	rex.X
  4158ae:	rex.WX jmp FWORD PTR [rdx+0x58ffa8aa]
  4158b5:	pop    rax
  4158b6:	push   rbp
  4158b7:	jmp    FWORD PTR [rbp+0x72]
  4158ba:	je     4158bb <libjpeg_8_dll_iname+0x2bbb>
  4158bc:	mov    bl,0xb9
  4158be:	mov    edx,0xa3a299ff
  4158c3:	jmp    FWORD PTR [rbx-0x3d004e4f]
  4158c9:	(bad)  
  4158ca:	(bad)  
  4158cb:	(bad)  
  4158cc:	mov    ecx,0x65ffbcbb
  4158d1:	outs   dx,BYTE PTR ds:[rsi]
  4158d2:	jb     4158d3 <libjpeg_8_dll_iname+0x2bd3>
  4158d4:	push   rdi
  4158d5:	(bad)  
  4158d6:	inc    WORD PTR [rcx+0x45]
  4158da:	rex.RB (bad) 
  4158dc:	(bad)  
  4158de:	loope  4158df <libjpeg_8_dll_iname+0x2bdf>
  4158e0:	(bad)  
  4158e1:	(bad)  
  4158e3:	call   rsi
  4158e5:	(bad)  
  4158e7:	call   rsi
  4158e9:	(bad)  
  4158eb:	call   QWORD PTR [rdx+0x63]
  4158ee:	imul   edi,edi,0xffffffc3
  4158f1:	ret    
  4158f2:	sar    edi,0x70
  4158f5:	jo     415965 <libjpeg_8_dll_iname+0x2c65>
  4158f7:	(bad)  
  4158f8:	fcomp  st(0)
  4158fa:	fdivr  st,st(7)
  4158fc:	movsxd esp,DWORD PTR fs:[rdx-0x1]
  415900:	lods   al,BYTE PTR ds:[rsi]
  415901:	mov    al,0xb1
  415903:	push   rsi
  415905:	div    dh
  415907:	jmp    FWORD PTR [rdi+0x3bffaeae]
  41590d:	cmp    bh,BYTE PTR [rdx]
  41590f:	(bad)  
  415910:	mov    esi,0x62ffc3c2
  415915:	outs   dx,BYTE PTR ds:[rsi]
  415916:	jae    415917 <libjpeg_8_dll_iname+0x2c17>
  415918:	ds rex.R
  41591a:	rex.RXB (bad) 
  41591c:	fsubr  st(2),st
  41591e:	in     al,0xff
  415920:	rex.R push rdi
  415922:	pop    rdi
  415923:	call   FWORD PTR [rsp+rbp*2+0x74]
  415927:	call   QWORD PTR [rdx+0x63]
  41592a:	imul   edi,edi,0x0
  41592d:	add    BYTE PTR [rax],al
  41592f:	add    BYTE PTR [rax],al
  415931:	add    BYTE PTR [rax],al
  415933:	data16 gs addr32 addr32 (bad) 
  415938:	jmp    415926 <libjpeg_8_dll_iname+0x2c26>
  41593a:	in     al,dx
  41593b:	(bad)  
  41593c:	fcmovnu st,st(3)
  41593e:	(bad)  
  415940:	mov    eax,0xf6ffbcbb
  415945:	div    dh
  415947:	(bad)  
  415948:	out    dx,eax
  415949:	out    dx,eax
  41594a:	out    dx,eax
  41594b:	call   rdx
  41594d:	rcl    dl,cl
  41594f:	(bad)  
  415950:	mov    ebp,0x64ffc2c1
  415955:	jo     4159cb <libjpeg_8_dll_iname+0x2ccb>
  415957:	(bad)  
  415958:	cmp    eax,DWORD PTR [rax+0x43]
  41595b:	jmp    rax
  41595d:	out    0xe8,al
  41595f:	inc    DWORD PTR [rdi+0x5a]
  415962:	(bad)  
  415963:	inc    DWORD PTR [rax]
	...
  415971:	add    BYTE PTR [rax],al
  415973:	add    BYTE PTR [rbx+0x69],ah
  415976:	imul   ebp,DWORD PTR [rax-0x5c5c60],0xffffffcd
  41597d:	(bad)  
  41597e:	(bad)  
  41597f:	jmp    QWORD PTR [rax+rbp*4-0x3d400059]
  415986:	sar    edi,0xff
  415989:	(bad)  
  41598a:	(bad)  
  41598b:	jmp    rbx
  41598d:	in     eax,0xe6
  41598f:	dec    DWORD PTR [rbp+0x6aff9695]
  415995:	je     415a0f <libjpeg_8_dll_iname+0x2d0f>
  415997:	(bad)  
  415998:	cmp    al,BYTE PTR [rax+0x42]
  41599b:	jmp    rbx
  41599d:	(bad)  
  41599e:	jmp    41599f <libjpeg_8_dll_iname+0x2c9f>
  4159a0:	rex.WXB pop r13
  4159a2:	inc    DWORD PTR gs:[rax]
	...
  4159b1:	add    BYTE PTR [rax],al
  4159b3:	add    BYTE PTR [rdi],ah
  4159b5:	sub    BYTE PTR [rax],ch
  4159b7:	test   eax,0xff676866
  4159bc:	xchg   edx,eax
  4159bd:	xchg   esp,eax
  4159be:	xchg   esp,eax
  4159bf:	jmp    QWORD PTR [rdx-0x5f005d5d]
  4159c5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4159c6:	movabs ds:0x91928cff949593ff,al
  4159cf:	jmp    QWORD PTR [rbx+0x65]
  4159d2:	call   QWORD PTR fs:[rbp+0x5a]
  4159d6:	pop    rbx
  4159d7:	dec    DWORD PTR [rcx+rdx*2+0x52]
  4159db:	jmp    rdi
  4159dd:	out    dx,eax
  4159de:	out    dx,eax
  4159df:	dec    DWORD PTR [rsi+0x60]
  4159e2:	push   0xff
	...
  4159f3:	add    BYTE PTR [rip+0xffffffff95832526],ah        # ffffffff95c47f1f <libjpeg_8_dll_iname+0xffffffff9583521f>
  4159f9:	pushf  
  4159fa:	pushf  
  4159fb:	push   QWORD PTR [rdx-0x58004344]
  415a01:	mov    dl,0xb3
  415a03:	call   FWORD PTR [rax+rbp*4-0x616e0056]
  415a0a:	movabs eax,ds:0xf4f4f4fff7f7f7ff
  415a13:	inc    DWORD PTR [rsi+0x4b]
  415a16:	rex.WXB (bad) 
  415a18:	cmp    BYTE PTR [rcx],bh
  415a1a:	(bad)  
  415a1b:	call   FWORD PTR [rsp+rbp*2+0x74]
  415a1f:	call   QWORD PTR [rdx+0x63]
  415a22:	imul   edi,edi,0x0
	...
  415a31:	add    BYTE PTR [rax],al
  415a33:	add    BYTE PTR [rsi],cl
  415a35:	femms  
  415a37:	(bad)  
	...
  415a48:	jno    4159ca <libjpeg_8_dll_iname+0x2cca>
  415a4a:	xchg   bh,bh
  415a4c:	div    dh
  415a4e:	idiv   bh
  415a50:	div    edi
  415a52:	idiv   edi
  415a54:	rex.WRB pop r13
  415a56:	jmp    QWORD PTR fs:[rip+0xb62526]        # f77f83 <libjpeg_8_dll_iname+0xb65283>
	...
  415a85:	add    BYTE PTR [rax],al
  415a87:	add    BYTE PTR [rcx-0x80],dh
  415a8a:	xchg   bh,bh
  415a8c:	(bad)  
  415a8d:	(bad)  
  415a8e:	(bad)  
  415a8f:	(bad)  
  415a90:	(bad)  
  415a91:	(bad)  
  415a92:	(bad)  
  415a93:	call   QWORD PTR [rdx+0x63]
  415a96:	imul   edi,edi,0x0
	...
  415ac9:	add    BYTE PTR [rax],al
  415acb:	add    BYTE PTR [rdi+0x76],ah
  415ace:	jge    415acf <libjpeg_8_dll_iname+0x2dcf>
  415ad0:	addr32 jbe 415b50 <libjpeg_8_dll_iname+0x2e50>
  415ad3:	inc    DWORD PTR [rax]
	...
  415aed:	add    BYTE PTR [rax],al
  415aef:	add    cl,al
  415af1:	xchg   edi,edi
  415af3:	inc    ecx
  415af5:	xchg   edi,edi
  415af7:	inc    ecx
  415af9:	xchg   edi,edi
  415afb:	inc    eax
  415afd:	(bad)  
  415afe:	(bad)  
  415aff:	inc    DWORD PTR [rax+0xffff07]
  415b05:	add    edi,edi
  415b07:	inc    DWORD PTR [rax]
  415b09:	add    bh,bh
  415b0b:	inc    DWORD PTR [rax]
  415b0d:	add    bh,bh
  415b0f:	inc    DWORD PTR [rax]
  415b11:	add    edi,edi
  415b13:	inc    DWORD PTR [rax]
  415b15:	(bad)  
  415b16:	(bad)  
  415b17:	inc    DWORD PTR [rax-0x7f0000f9]
  415b1d:	(bad)  
  415b1e:	(bad)  
  415b1f:	inc    DWORD PTR [rax-0x430000f9]
  415b25:	(bad)  
  415b26:	(bad)  
  415b27:	(bad)  
  415b28:	cld    
  415b29:	(bad)  
  415b2a:	(bad)  
  415b2b:	(bad)  
  415b2c:	(bad)  
  415b2d:	jg     415b2e <libjpeg_8_dll_iname+0x2e2e>
  415b2f:	inc    DWORD PTR [rax]
  415b31:	add    BYTE PTR [rcx],al
  415b33:	add    BYTE PTR [rdx],al
  415b35:	add    BYTE PTR [rax],dl
  415b37:	adc    BYTE PTR [rax],al
  415b39:	add    BYTE PTR [rcx],al
  415b3b:	add    BYTE PTR [rax],cl
  415b3d:	add    BYTE PTR [rax+0x5],ch
  415b40:	add    BYTE PTR [rax],al
  415b42:	add    DWORD PTR [rax],eax
  415b44:	adc    BYTE PTR [rax],dl
  415b46:	add    BYTE PTR [rax],al
  415b48:	add    DWORD PTR [rax],eax
  415b4a:	and    BYTE PTR [rax],al
  415b4c:	push   0x2000004
  415b51:	add    BYTE PTR [rax],al
  415b53:	add    BYTE PTR [rax],al
  415b55:	add    BYTE PTR [rax],al
  415b57:	add    BYTE PTR [rbx+rax*1+0x34],cl
  415b5e:	push   rsi
  415b5f:	add    BYTE PTR [rbx+0x0],dl
  415b62:	pop    rdi
  415b63:	add    BYTE PTR [rsi+0x0],dl
  415b66:	add    BYTE PTR [r10+0x0],r10b
  415b6a:	push   rbx
  415b6b:	add    BYTE PTR [rcx+0x0],cl
  415b6e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
  415b72:	pop    rdi
  415b73:	add    BYTE PTR [rcx+0x0],cl
  415b76:	rex.WRX add BYTE PTR [rsi+0x0],r8b
  415b7a:	rex.WRXB add BYTE PTR [r8],r8b
  415b7d:	add    BYTE PTR [rax],al
  415b7f:	add    BYTE PTR [rbp+0xfeef04],bh
  415b85:	add    BYTE PTR [rcx],al
  415b87:	add    BYTE PTR [rax],cl
  415b89:	add    BYTE PTR [rdx],al
  415b8b:	add    BYTE PTR [rax],al
  415b8d:	add    BYTE PTR [rsi],dl
  415b8f:	add    BYTE PTR [rax],cl
  415b91:	add    BYTE PTR [rdx],al
  415b93:	add    BYTE PTR [rax],al
  415b95:	add    BYTE PTR [rsi],dl
  415b97:	add    BYTE PTR [rdi],bh
  415b99:	add    BYTE PTR [rax],al
  415b9b:	add    BYTE PTR [rax],al
  415b9d:	add    BYTE PTR [rax],al
  415b9f:	add    BYTE PTR [rax+rax*1],al
  415ba2:	add    BYTE PTR [rax],al
  415ba4:	add    DWORD PTR [rax],eax
	...
  415bb2:	add    BYTE PTR [rax],al
  415bb4:	in     al,dx
  415bb5:	add    al,BYTE PTR [rax]
  415bb7:	add    BYTE PTR [rcx],al
  415bb9:	add    BYTE PTR [rbx+0x0],dl
  415bbc:	je     415bbe <libjpeg_8_dll_iname+0x2ebe>
  415bbe:	jb     415bc0 <libjpeg_8_dll_iname+0x2ec0>
  415bc0:	imul   eax,DWORD PTR [rax],0x67006e
  415bc6:	rex.RX add BYTE PTR [rcx+0x0],r13b
  415bca:	ins    BYTE PTR es:[rdi],dx
  415bcb:	add    BYTE PTR [rbp+0x0],ah
  415bce:	rex.WB add BYTE PTR [r14+0x0],bpl
  415bd2:	data16 add BYTE PTR [rdi+0x0],ch
  415bd6:	add    BYTE PTR [rax],al
  415bd8:	enter  0x2,0x0
  415bdc:	add    DWORD PTR [rax],eax
  415bde:	xor    BYTE PTR [rax],al
  415be0:	xor    al,0x0
  415be2:	xor    BYTE PTR [rax],al
  415be4:	cmp    DWORD PTR [rax],eax
  415be6:	xor    BYTE PTR [rax],al
  415be8:	xor    al,0x0
  415bea:	rex.X add BYTE PTR [rax],sil
  415bed:	add    BYTE PTR [rax],al
  415bef:	add    BYTE PTR [rax+0x1003c00],bl
  415bf5:	add    BYTE PTR [rbx+0x0],al
  415bf8:	outs   dx,DWORD PTR ds:[rsi]
  415bf9:	add    BYTE PTR [rbp+0x0],ch
  415bfc:	jo     415bfe <libjpeg_8_dll_iname+0x2efe>
  415bfe:	(bad)  
  415bff:	add    BYTE PTR [rsi+0x0],ch
  415c02:	jns    415c04 <libjpeg_8_dll_iname+0x2f04>
  415c04:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  415c08:	ins    DWORD PTR es:[rdi],dx
  415c09:	add    BYTE PTR [rbp+0x0],ah
  415c0c:	add    BYTE PTR [rax],al
  415c0e:	add    BYTE PTR [rax],al
  415c10:	push   rbx
  415c11:	add    BYTE PTR [rax+0x0],dh
  415c14:	add    BYTE PTR gs:[rsi+0x0],ch
  415c18:	movsxd eax,DWORD PTR [rax]
  415c1a:	add    BYTE PTR gs:[rdx+0x0],dh
  415c1e:	and    BYTE PTR [rax],al
  415c20:	rex.WXB add BYTE PTR [r9+0x0],bpl
  415c24:	ins    DWORD PTR es:[rdi],dx
  415c25:	add    BYTE PTR [rdx+0x0],ah
  415c28:	(bad)  
  415c29:	add    BYTE PTR [rax+rax*1+0x6c],ch
  415c2d:	add    BYTE PTR [rax+rax*1],ch
  415c30:	and    BYTE PTR [rax],al
  415c32:	push   rax
  415c33:	add    BYTE PTR [rbp+0x0],ah
  415c36:	je     415c38 <libjpeg_8_dll_iname+0x2f38>
  415c38:	add    BYTE PTR gs:[rdx+0x0],dh
  415c3c:	and    BYTE PTR [rax],al
  415c3e:	rex.WRB add BYTE PTR [r9+0x0],r12b
  415c42:	je     415c44 <libjpeg_8_dll_iname+0x2f44>
  415c44:	je     415c46 <libjpeg_8_dll_iname+0x2f46>
  415c46:	imul   eax,DWORD PTR [rax],0x200073
  415c4c:	(bad)  
  415c4d:	add    BYTE PTR [rsi+0x0],ch
  415c50:	add    BYTE PTR fs:[rax],ah
  415c53:	add    BYTE PTR [rax+rax*1+0x68],dh
  415c57:	add    BYTE PTR [rbp+0x0],ah
  415c5a:	and    BYTE PTR [rax],al
  415c5c:	rex.RXB add BYTE PTR [r9+0x0],r9b
  415c60:	rex.WRB add BYTE PTR [r8+0x0],r10b
  415c64:	and    BYTE PTR [rax],al
  415c66:	add    BYTE PTR [rbp+0x0],r12b
  415c6a:	jbe    415c6c <libjpeg_8_dll_iname+0x2f6c>
  415c6c:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
  415c71:	add    BYTE PTR [rax+0x0],dh
  415c74:	ins    DWORD PTR es:[rdi],dx
  415c75:	add    BYTE PTR [rbp+0x0],ah
  415c78:	outs   dx,BYTE PTR ds:[rsi]
  415c79:	add    BYTE PTR [rax+rax*1+0x20],dh
  415c7d:	add    BYTE PTR [rax+rax*1+0x65],dl
  415c81:	add    BYTE PTR [rcx+0x0],ah
  415c84:	ins    DWORD PTR es:[rdi],dx
  415c85:	add    BYTE PTR [rax],al
  415c87:	add    BYTE PTR [rsi+0x0],dh
  415c8a:	(bad)  
  415c8b:	add    BYTE PTR [rcx],al
  415c8d:	add    BYTE PTR [rsi+0x0],al
  415c90:	imul   eax,DWORD PTR [rax],0x65006c
  415c96:	add    BYTE PTR [rbp+0x0],r12b
  415c9a:	jae    415c9c <libjpeg_8_dll_iname+0x2f9c>
  415c9c:	movsxd eax,DWORD PTR [rax]
  415c9e:	jb     415ca0 <libjpeg_8_dll_iname+0x2fa0>
  415ca0:	imul   eax,DWORD PTR [rax],0x740070
  415ca6:	imul   eax,DWORD PTR [rax],0x6e006f
  415cac:	add    BYTE PTR [rax],al
  415cae:	add    BYTE PTR [rax],al
  415cb0:	rex.RXB add BYTE PTR [r14+0x0],r9b
  415cb4:	push   rbp
  415cb5:	add    BYTE PTR [rax],ah
  415cb7:	add    BYTE PTR [rcx+0x0],cl
  415cba:	ins    DWORD PTR es:[rdi],dx
  415cbb:	add    BYTE PTR [rcx+0x0],ah
  415cbe:	add    BYTE PTR [ebp+0x0],ah
  415cc2:	and    BYTE PTR [rax],al
  415cc4:	rex.WRB add BYTE PTR [r9+0x0],r12b
  415cc8:	outs   dx,BYTE PTR ds:[rsi]
  415cc9:	add    BYTE PTR [rcx+0x0],ch
  415ccc:	jo     415cce <libjpeg_8_dll_iname+0x2fce>
  415cce:	jne    415cd0 <libjpeg_8_dll_iname+0x2fd0>
  415cd0:	ins    BYTE PTR es:[rdi],dx
  415cd1:	add    BYTE PTR [rcx+0x0],ah
  415cd4:	je     415cd6 <libjpeg_8_dll_iname+0x2fd6>
  415cd6:	imul   eax,DWORD PTR [rax],0x6e006f
  415cdc:	and    BYTE PTR [rax],al
  415cde:	push   rax
  415cdf:	add    BYTE PTR [rdx+0x0],dh
  415ce2:	outs   dx,DWORD PTR ds:[rsi]
  415ce3:	add    BYTE PTR [rdi+0x0],ah
  415ce6:	jb     415ce8 <libjpeg_8_dll_iname+0x2fe8>
  415ce8:	(bad)  
  415ce9:	add    BYTE PTR [rbp+0x0],ch
  415cec:	and    BYTE PTR [rax],al
  415cee:	push   rax
  415cef:	add    BYTE PTR [rax+rax*1+0x75],ch
  415cf3:	add    BYTE PTR [rdi+0x0],ah
  415cf6:	sub    eax,0x6e004900
  415cfb:	add    BYTE PTR [rax],al
  415cfd:	add    BYTE PTR [rax],al
  415cff:	add    BYTE PTR [rdx],dh
  415d01:	add    BYTE PTR [rcx],cl
  415d03:	add    BYTE PTR [rcx],al
  415d05:	add    BYTE PTR [rsi+0x0],al
  415d08:	imul   eax,DWORD PTR [rax],0x65006c
  415d0e:	push   rsi
  415d0f:	add    BYTE PTR [rbp+0x0],ah
  415d12:	jb     415d14 <libjpeg_8_dll_iname+0x3014>
  415d14:	jae    415d16 <libjpeg_8_dll_iname+0x3016>
  415d16:	imul   eax,DWORD PTR [rax],0x6e006f
  415d1c:	add    BYTE PTR [rax],al
  415d1e:	add    BYTE PTR [rax],al
  415d20:	xor    al,BYTE PTR [rax]
  415d22:	add    BYTE PTR cs:[rax],bh
  415d25:	add    BYTE PTR [rsi],ch
  415d27:	add    BYTE PTR [rdx],dh
  415d29:	add    BYTE PTR [rdx],dh
  415d2b:	add    BYTE PTR [rsi],ch
  415d2d:	add    BYTE PTR [rax],dh
  415d2f:	add    BYTE PTR [rax],al
  415d31:	add    BYTE PTR [rax],al
  415d33:	add    BYTE PTR [rax+rax*1],bh
  415d36:	(bad)  
  415d37:	add    BYTE PTR [rcx],al
  415d39:	add    BYTE PTR [rcx+0x0],cl
  415d3c:	outs   dx,BYTE PTR ds:[rsi]
  415d3d:	add    BYTE PTR [rax+rax*1+0x65],dh
  415d41:	add    BYTE PTR [rdx+0x0],dh
  415d44:	outs   dx,BYTE PTR ds:[rsi]
  415d45:	add    BYTE PTR [rcx+0x0],ah
  415d48:	ins    BYTE PTR es:[rdi],dx
  415d49:	add    BYTE PTR [rsi+0x0],cl
  415d4c:	(bad)  
  415d4d:	add    BYTE PTR [rbp+0x0],ch
  415d50:	add    BYTE PTR gs:[rax],al
  415d53:	add    BYTE PTR [rsi+0x0],ah
  415d56:	imul   eax,DWORD PTR [rax],0x65006c
  415d5c:	sub    eax,0x73007000
  415d61:	add    BYTE PTR [rax+rax*1+0x2d],ah
  415d65:	add    BYTE PTR [rax+rax*1+0x6f],ch
  415d69:	add    BYTE PTR [rcx+0x0],ah
  415d6c:	add    BYTE PTR fs:[rax],al
  415d6f:	add    BYTE PTR [rax+rax*1+0x12],cl
  415d73:	add    BYTE PTR [rcx],al
  415d75:	add    BYTE PTR [rdi+0x0],cl
  415d78:	jb     415d7a <libjpeg_8_dll_iname+0x307a>
  415d7a:	imul   eax,DWORD PTR [rax],0x690067
  415d80:	outs   dx,BYTE PTR ds:[rsi]
  415d81:	add    BYTE PTR [rcx+0x0],ah
  415d84:	ins    BYTE PTR es:[rdi],dx
  415d85:	add    BYTE PTR [rsi+0x0],al
  415d88:	imul   eax,DWORD PTR [rax],0x65006c
  415d8e:	outs   dx,BYTE PTR ds:[rsi]
  415d8f:	add    BYTE PTR [rcx+0x0],ah
  415d92:	ins    DWORD PTR es:[rdi],dx
  415d93:	add    BYTE PTR [rbp+0x0],ah
  415d96:	add    BYTE PTR [rax],al
  415d98:	data16 add BYTE PTR [rcx+0x0],ch
  415d9c:	ins    BYTE PTR es:[rdi],dx
  415d9d:	add    BYTE PTR [rbp+0x0],ah
  415da0:	sub    eax,0x73007000
  415da5:	add    BYTE PTR [rax+rax*1+0x2d],ah
  415da9:	add    BYTE PTR [rax+rax*1+0x6f],ch
  415dad:	add    BYTE PTR [rcx+0x0],ah
  415db0:	add    BYTE PTR fs:[rsi],ch
  415db3:	add    BYTE PTR [rbp+0x0],ah
  415db6:	js     415db8 <libjpeg_8_dll_iname+0x30b8>
  415db8:	add    BYTE PTR gs:[rax],al
  415dbb:	add    BYTE PTR [rsi+0x0],bl
  415dbe:	(bad)  
  415dbf:	add    BYTE PTR [rcx],al
  415dc1:	add    BYTE PTR [rax+0x0],dl
  415dc4:	jb     415dc6 <libjpeg_8_dll_iname+0x30c6>
  415dc6:	outs   dx,DWORD PTR ds:[rsi]
  415dc7:	add    BYTE PTR [rax+rax*1+0x75],ah
  415dcb:	add    BYTE PTR [rbx+0x0],ah
  415dce:	je     415dd0 <libjpeg_8_dll_iname+0x30d0>
  415dd0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  415dd4:	ins    DWORD PTR es:[rdi],dx
  415dd5:	add    BYTE PTR [rbp+0x0],ah
  415dd8:	add    BYTE PTR [rax],al
  415dda:	add    BYTE PTR [rax],al
  415ddc:	rex.RXB add BYTE PTR [r14+0x0],r9b
  415de0:	push   rbp
  415de1:	add    BYTE PTR [rax],ah
  415de3:	add    BYTE PTR [rcx+0x0],cl
  415de6:	ins    DWORD PTR es:[rdi],dx
  415de7:	add    BYTE PTR [rcx+0x0],ah
  415dea:	add    BYTE PTR [ebp+0x0],ah
  415dee:	and    BYTE PTR [rax],al
  415df0:	rex.WRB add BYTE PTR [r9+0x0],r12b
  415df4:	outs   dx,BYTE PTR ds:[rsi]
  415df5:	add    BYTE PTR [rcx+0x0],ch
  415df8:	jo     415dfa <libjpeg_8_dll_iname+0x30fa>
  415dfa:	jne    415dfc <libjpeg_8_dll_iname+0x30fc>
  415dfc:	ins    BYTE PTR es:[rdi],dx
  415dfd:	add    BYTE PTR [rcx+0x0],ah
  415e00:	je     415e02 <libjpeg_8_dll_iname+0x3102>
  415e02:	imul   eax,DWORD PTR [rax],0x6e006f
  415e08:	and    BYTE PTR [rax],al
  415e0a:	push   rax
  415e0b:	add    BYTE PTR [rdx+0x0],dh
  415e0e:	outs   dx,DWORD PTR ds:[rsi]
  415e0f:	add    BYTE PTR [rdi+0x0],ah
  415e12:	jb     415e14 <libjpeg_8_dll_iname+0x3114>
  415e14:	(bad)  
  415e15:	add    BYTE PTR [rbp+0x0],ch
  415e18:	add    BYTE PTR [rax],al
  415e1a:	add    BYTE PTR [rax],al
  415e1c:	xor    al,BYTE PTR [rax]
  415e1e:	(bad)  
  415e1f:	add    BYTE PTR [rcx],al
  415e21:	add    BYTE PTR [rax+0x0],dl
  415e24:	jb     415e26 <libjpeg_8_dll_iname+0x3126>
  415e26:	outs   dx,DWORD PTR ds:[rsi]
  415e27:	add    BYTE PTR [rax+rax*1+0x75],ah
  415e2b:	add    BYTE PTR [rbx+0x0],ah
  415e2e:	je     415e30 <libjpeg_8_dll_iname+0x3130>
  415e30:	push   rsi
  415e31:	add    BYTE PTR [rbp+0x0],ah
  415e34:	jb     415e36 <libjpeg_8_dll_iname+0x3136>
  415e36:	jae    415e38 <libjpeg_8_dll_iname+0x3138>
  415e38:	imul   eax,DWORD PTR [rax],0x6e006f
  415e3e:	add    BYTE PTR [rax],al
  415e40:	xor    al,BYTE PTR [rax]
  415e42:	add    BYTE PTR cs:[rax],bh
  415e45:	add    BYTE PTR [rsi],ch
  415e47:	add    BYTE PTR [rdx],dh
  415e49:	add    BYTE PTR [rdx],dh
  415e4b:	add    BYTE PTR [rax],al
  415e4d:	add    BYTE PTR [rax],al
  415e4f:	add    BYTE PTR [rax+0x0],dl
  415e52:	(bad)  
  415e53:	add    BYTE PTR [rcx],al
  415e55:	add    BYTE PTR [rax+rax*1+0x65],cl
  415e59:	add    BYTE PTR [rdi+0x0],ah
  415e5c:	(bad)  
  415e5d:	add    BYTE PTR [rax+rax*1+0x43],ch
  415e61:	add    BYTE PTR [rdi+0x0],ch
  415e64:	jo     415e66 <libjpeg_8_dll_iname+0x3166>
  415e66:	jns    415e68 <libjpeg_8_dll_iname+0x3168>
  415e68:	jb     415e6a <libjpeg_8_dll_iname+0x316a>
  415e6a:	imul   eax,DWORD PTR [rax],0x680067
  415e70:	je     415e72 <libjpeg_8_dll_iname+0x3172>
  415e72:	add    BYTE PTR [rax],al
  415e74:	rex.XB add BYTE PTR [r15+0x0],bpl
  415e78:	jo     415e7a <libjpeg_8_dll_iname+0x317a>
  415e7a:	jns    415e7c <libjpeg_8_dll_iname+0x317c>
  415e7c:	jb     415e7e <libjpeg_8_dll_iname+0x317e>
  415e7e:	imul   eax,DWORD PTR [rax],0x680067
  415e84:	je     415e86 <libjpeg_8_dll_iname+0x3186>
  415e86:	and    BYTE PTR [rax],al
  415e88:	test   eax,0x31002000
  415e8d:	add    BYTE PTR [rcx],bh
  415e8f:	add    BYTE PTR [rcx],bh
  415e91:	add    BYTE PTR [rip+0x32002d00],dh        # 32418b97 <libjpeg_8_dll_iname+0x32005e97>
  415e97:	add    BYTE PTR [rax],dh
  415e99:	add    BYTE PTR [rcx],dh
  415e9b:	add    BYTE PTR [rdi],dh
  415e9d:	add    BYTE PTR [rax],al
  415e9f:	add    BYTE PTR [rax+rax*1+0x0],al
  415ea3:	add    BYTE PTR [rcx],al
  415ea5:	add    BYTE PTR [rsi+0x0],dl
  415ea8:	(bad)  
  415ea9:	add    BYTE PTR [rdx+0x0],dh
  415eac:	rex.RX add BYTE PTR [rcx+0x0],r13b
  415eb0:	ins    BYTE PTR es:[rdi],dx
  415eb1:	add    BYTE PTR [rbp+0x0],ah
  415eb4:	rex.WB add BYTE PTR [r14+0x0],bpl
  415eb8:	data16 add BYTE PTR [rdi+0x0],ch
  415ebc:	add    BYTE PTR [rax],al
  415ebe:	add    BYTE PTR [rax],al
  415ec0:	and    al,0x0
  415ec2:	add    al,0x0
  415ec4:	add    BYTE PTR [rax],al
  415ec6:	push   rsp
  415ec7:	add    BYTE PTR [rdx+0x0],dh
  415eca:	(bad)  
  415ecb:	add    BYTE PTR [rsi+0x0],ch
  415ece:	jae    415ed0 <libjpeg_8_dll_iname+0x31d0>
  415ed0:	ins    BYTE PTR es:[rdi],dx
  415ed1:	add    BYTE PTR [rcx+0x0],ah
  415ed4:	je     415ed6 <libjpeg_8_dll_iname+0x31d6>
  415ed6:	imul   eax,DWORD PTR [rax],0x6e006f
  415edc:	add    BYTE PTR [rax],al
  415ede:	add    BYTE PTR [rax],al
  415ee0:	or     DWORD PTR [rax+rsi*4],eax
  415ee3:	add    al,0x0
  415ee5:	add    BYTE PTR [rax],al
  415ee7:	add    BYTE PTR [rdi+rdi*1],bh
  415eea:	js     415f59 <libjpeg_8_dll_iname+0x3259>
  415eec:	ins    BYTE PTR es:[rdi],dx
  415eed:	and    BYTE PTR [rsi+0x65],dh
  415ef0:	jb     415f65 <libjpeg_8_dll_iname+0x3265>
  415ef2:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  415ef9:	xor    BYTE PTR [rdx],ah
  415efb:	and    BYTE PTR [rbp+0x6e],ah
  415efe:	movsxd ebp,DWORD PTR [rdi+0x64]
  415f01:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
  415f08:	rex.RX sub eax,0x73202238
  415f0e:	je     415f71 <libjpeg_8_dll_iname+0x3271>
  415f10:	outs   dx,BYTE PTR ds:[rsi]
  415f11:	fs (bad) 
  415f13:	ins    BYTE PTR es:[rdi],dx
  415f14:	outs   dx,DWORD PTR ds:[rsi]
  415f15:	outs   dx,BYTE PTR ds:[rsi]
  415f16:	gs cmp eax,0x73657922
  415f1c:	and    bh,BYTE PTR [rdi]
  415f1e:	or     bh,BYTE PTR ds:[rcx+riz*2]
  415f22:	jae    415f97 <libjpeg_8_dll_iname+0x3297>
  415f24:	gs ins DWORD PTR es:[rdi],dx
  415f26:	(bad)  
  415f27:	ins    BYTE PTR es:[rdi],dx
  415f28:	jns    415f4a <libjpeg_8_dll_iname+0x324a>
  415f2a:	js     415f99 <libjpeg_8_dll_iname+0x3299>
  415f2c:	ins    BYTE PTR es:[rdi],dx
  415f2d:	outs   dx,BYTE PTR ds:[rsi]
  415f2e:	jae    415f6d <libjpeg_8_dll_iname+0x326d>
  415f30:	and    dh,BYTE PTR [rbp+0x72]
  415f33:	outs   dx,BYTE PTR ds:[rsi]
  415f34:	cmp    dh,BYTE PTR [rbx+0x63]
  415f37:	push   0x73616d65
  415f3c:	sub    eax,0x7263696d
  415f41:	outs   dx,DWORD PTR ds:[rsi]
  415f42:	jae    415fb3 <libjpeg_8_dll_iname+0x32b3>
  415f44:	data16 je 415f74 <libjpeg_8_dll_iname+0x3274>
  415f47:	movsxd ebp,DWORD PTR [rdi+0x6d]
  415f4a:	cmp    ah,BYTE PTR [rcx+0x73]
  415f4d:	ins    DWORD PTR es:[rdi],dx
  415f4e:	cs jbe 415f82 <libjpeg_8_dll_iname+0x3282>
  415f51:	and    ah,BYTE PTR [rax]
  415f53:	ins    DWORD PTR es:[rdi],dx
  415f54:	(bad)  
  415f55:	outs   dx,BYTE PTR ds:[rsi]
  415f56:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
  415f5d:	jb     415fd2 <libjpeg_8_dll_iname+0x32d2>
  415f5f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  415f66:	xor    BYTE PTR [rdx],ah
  415f68:	and    BYTE PTR [rax+0x6d],bh
  415f6b:	ins    BYTE PTR es:[rdi],dx
  415f6c:	outs   dx,BYTE PTR ds:[rsi]
  415f6d:	jae    415fa9 <libjpeg_8_dll_iname+0x32a9>
  415f6f:	(bad)  
  415f70:	jae    415fdf <libjpeg_8_dll_iname+0x32df>
  415f72:	jbe    415fa7 <libjpeg_8_dll_iname+0x32a7>
  415f74:	cmp    eax,0x6e727522
  415f79:	cmp    dh,BYTE PTR [rbx+0x63]
  415f7c:	push   0x73616d65
  415f81:	sub    eax,0x7263696d
  415f86:	outs   dx,DWORD PTR ds:[rsi]
  415f87:	jae    415ff8 <libjpeg_8_dll_iname+0x32f8>
  415f89:	data16 je 415fb9 <libjpeg_8_dll_iname+0x32b9>
  415f8c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  415f8f:	cmp    ah,BYTE PTR [rcx+0x73]
  415f92:	ins    DWORD PTR es:[rdi],dx
  415f93:	cs jbe 415fc9 <libjpeg_8_dll_iname+0x32c9>
  415f96:	and    bh,BYTE PTR [rsi]
  415f98:	or     cl,BYTE PTR [rcx]
  415f9a:	cmp    al,0x61
  415f9c:	jae    416011 <libjpeg_8_dll_iname+0x3311>
  415f9e:	gs ins DWORD PTR es:[rdi],dx
  415fa0:	(bad)  
  415fa1:	ins    BYTE PTR es:[rdi],dx
  415fa2:	jns    415fed <libjpeg_8_dll_iname+0x32ed>
  415fa4:	fs outs dx,BYTE PTR gs:[rsi]
  415fa7:	je     416012 <libjpeg_8_dll_iname+0x3312>
  415fa9:	je     416024 <libjpeg_8_dll_iname+0x3324>
  415fab:	and    BYTE PTR [rsi+0x65],dh
  415fae:	jb     416023 <libjpeg_8_dll_iname+0x3323>
  415fb0:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e32223d
  415fb7:	xor    BYTE PTR [rsi],ch
  415fb9:	xor    BYTE PTR [rsi],ch
  415fbb:	xor    BYTE PTR [rdx],ah
  415fbd:	and    BYTE PTR [rsi+0x61],ch
  415fc0:	ins    DWORD PTR es:[rdi],dx
  415fc1:	gs cmp eax,0x756e6722
  415fc7:	outs   dx,BYTE PTR cs:[esi]
  415fca:	outs   dx,DWORD PTR ds:[rsi]
  415fcb:	ins    DWORD PTR es:[rdi],dx
  415fcc:	gs imul ebp,DWORD PTR cs:[ebp+0x70],0x79742022
  415fd6:	jo     41603d <libjpeg_8_dll_iname+0x333d>
  415fd8:	cmp    eax,0x6e697722
  415fdd:	xor    esi,DWORD PTR [rdx]
  415fdf:	and    ch,BYTE PTR [rdi]
  415fe1:	or     cl,BYTE PTR ds:[rcx]
  415fe4:	cmp    al,0x64
  415fe6:	gs jae 41604c <libjpeg_8_dll_iname+0x334c>
  415fe9:	jb     416054 <libjpeg_8_dll_iname+0x3354>
  415feb:	jo     416061 <libjpeg_8_dll_iname+0x3361>
  415fed:	imul   ebp,DWORD PTR [rdi+0x6e],0x4d49473e
  415ff4:	push   rax
  415ff5:	cmp    al,0x2f
  415ff7:	fs gs jae 41605e <libjpeg_8_dll_iname+0x335e>
  415ffb:	jb     416066 <libjpeg_8_dll_iname+0x3366>
  415ffd:	jo     416073 <libjpeg_8_dll_iname+0x3373>
  415fff:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c090a3e
  416006:	je     41607a <libjpeg_8_dll_iname+0x337a>
  416008:	jne    41607d <libjpeg_8_dll_iname+0x337d>
  41600a:	je     416055 <libjpeg_8_dll_iname+0x3355>
  41600c:	outs   dx,BYTE PTR ds:[rsi]
  41600d:	outs   dx,WORD PTR ds:[rsi]
  41600f:	and    BYTE PTR [rax+0x6d],bh
  416012:	ins    BYTE PTR es:[rdi],dx
  416013:	outs   dx,BYTE PTR ds:[rsi]
  416014:	jae    416053 <libjpeg_8_dll_iname+0x3353>
  416016:	and    dh,BYTE PTR [rbp+0x72]
  416019:	outs   dx,BYTE PTR ds:[rsi]
  41601a:	cmp    dh,BYTE PTR [rbx+0x63]
  41601d:	push   0x73616d65
  416022:	sub    eax,0x7263696d
  416027:	outs   dx,DWORD PTR ds:[rsi]
  416028:	jae    416099 <libjpeg_8_dll_iname+0x3399>
  41602a:	data16 je 41605a <libjpeg_8_dll_iname+0x335a>
  41602d:	movsxd ebp,DWORD PTR [rdi+0x6d]
  416030:	cmp    ah,BYTE PTR [rcx+0x73]
  416033:	ins    DWORD PTR es:[rdi],dx
  416034:	cs jbe 41606a <libjpeg_8_dll_iname+0x336a>
  416037:	and    bh,BYTE PTR [rsi]
  416039:	or     cl,BYTE PTR [rcx]
  41603b:	or     DWORD PTR [rbx+rsi*2],edi
  41603e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  416042:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x909090a
  41604a:	cmp    al,0x72
  41604c:	gs jno 4160c4 <libjpeg_8_dll_iname+0x33c4>
  41604f:	gs jae 4160c6 <libjpeg_8_dll_iname+0x33c6>
  416052:	gs fs push rax
  416055:	jb     4160c0 <libjpeg_8_dll_iname+0x33c0>
  416057:	jbe    4160c2 <libjpeg_8_dll_iname+0x33c2>
  416059:	ins    BYTE PTR es:[rdi],dx
  41605a:	gs addr32 gs jae 41609d <libjpeg_8_dll_iname+0x339d>
  41605f:	or     cl,BYTE PTR [rcx]
  416061:	or     DWORD PTR [rcx],ecx
  416063:	or     DWORD PTR [rdx+rsi*2],edi
  416066:	gs jno 4160de <libjpeg_8_dll_iname+0x33de>
  416069:	gs jae 4160e0 <libjpeg_8_dll_iname+0x33e0>
  41606c:	gs fs rex.RB js 4160d6 <libjpeg_8_dll_iname+0x33d6>
  416071:	movsxd esi,DWORD PTR [rbp+0x74]
  416074:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
  41607b:	ins    BYTE PTR es:[rdi],dx
  41607c:	and    BYTE PTR [rbp+riz*2+0x76],ch
  416080:	gs ins BYTE PTR es:[rdi],dx
  416082:	cmp    eax,0x49736122
  416087:	outs   dx,BYTE PTR ds:[rsi]
  416088:	jbe    4160f9 <libjpeg_8_dll_iname+0x33f9>
  41608a:	imul   esp,DWORD PTR [rbp+0x72],0x22
  41608e:	and    BYTE PTR [rbp+0x69],dh
  416091:	movsxd esp,DWORD PTR [r11+0x65]
  416095:	jae    41610a <libjpeg_8_dll_iname+0x340a>
  416097:	cmp    eax,0x6c616622
  41609c:	jae    416103 <libjpeg_8_dll_iname+0x3403>
  41609e:	and    ch,BYTE PTR [rdi]
  4160a0:	or     cl,BYTE PTR ds:[rcx]
  4160a3:	or     DWORD PTR [rcx],ecx
  4160a5:	cmp    al,0x2f
  4160a7:	jb     41610e <libjpeg_8_dll_iname+0x340e>
  4160a9:	jno    416120 <libjpeg_8_dll_iname+0x3420>
  4160ab:	gs jae 416122 <libjpeg_8_dll_iname+0x3422>
  4160ae:	gs fs push rax
  4160b1:	jb     41611c <libjpeg_8_dll_iname+0x341c>
  4160b3:	jbe    41611e <libjpeg_8_dll_iname+0x341e>
  4160b5:	ins    BYTE PTR es:[rdi],dx
  4160b6:	gs addr32 gs jae 4160f9 <libjpeg_8_dll_iname+0x33f9>
  4160bb:	or     cl,BYTE PTR [rcx]
  4160bd:	or     DWORD PTR [rdi+rbp*1],edi
  4160c0:	jae    416127 <libjpeg_8_dll_iname+0x3427>
  4160c2:	movsxd esi,DWORD PTR [rbp+0x72]
  4160c5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c090a
  4160cd:	je     416141 <libjpeg_8_dll_iname+0x3441>
  4160cf:	jne    416144 <libjpeg_8_dll_iname+0x3444>
  4160d1:	je     41611c <libjpeg_8_dll_iname+0x341c>
  4160d3:	outs   dx,BYTE PTR ds:[rsi]
  4160d4:	outs   dx,WORD PTR ds:[rsi]
  4160d6:	or     cl,BYTE PTR ds:[rcx]
  4160d9:	cmp    al,0x63
  4160db:	outs   dx,DWORD PTR ds:[rsi]
  4160dc:	ins    DWORD PTR es:[rdi],dx
  4160dd:	jo     416140 <libjpeg_8_dll_iname+0x3440>
  4160df:	je     41614a <libjpeg_8_dll_iname+0x344a>
  4160e1:	(bad)  
  4160e2:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
  4160ea:	ins    BYTE PTR es:[rdi],dx
  4160eb:	outs   dx,BYTE PTR ds:[rsi]
  4160ec:	jae    41612b <libjpeg_8_dll_iname+0x342b>
  4160ee:	and    dh,BYTE PTR [rbp+0x72]
  4160f1:	outs   dx,BYTE PTR ds:[rsi]
  4160f2:	cmp    dh,BYTE PTR [rbx+0x63]
  4160f5:	push   0x73616d65
  4160fa:	sub    eax,0x7263696d
  4160ff:	outs   dx,DWORD PTR ds:[rsi]
  416100:	jae    416171 <libjpeg_8_dll_iname+0x3471>
  416102:	data16 je 416132 <libjpeg_8_dll_iname+0x3432>
  416105:	movsxd ebp,DWORD PTR [rdi+0x6d]
  416108:	cmp    ah,BYTE PTR [rbx+0x6f]
  41610b:	ins    DWORD PTR es:[rdi],dx
  41610c:	jo     41616f <libjpeg_8_dll_iname+0x346f>
  41610e:	je     416179 <libjpeg_8_dll_iname+0x3479>
  416110:	(bad)  
  416111:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
  416119:	and    bh,BYTE PTR [rsi]
  41611b:	or     cl,BYTE PTR [rcx]
  41611d:	or     DWORD PTR [rcx+riz*2],edi
  416120:	jo     416192 <libjpeg_8_dll_iname+0x3492>
  416122:	ins    BYTE PTR es:[rdi],dx
  416123:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  41612a:	or     cl,BYTE PTR ds:[rcx]
  41612d:	or     DWORD PTR [rcx],ecx
  41612f:	cmp    al,0x73
  416131:	jne    4161a3 <libjpeg_8_dll_iname+0x34a3>
  416133:	jo     4161a4 <libjpeg_8_dll_iname+0x34a4>
  416135:	jb     4161ab <libjpeg_8_dll_iname+0x34ab>
  416137:	gs fs rex.WRXB push r11
  41613b:	and    BYTE PTR [rcx+0x64],cl
  41613e:	cmp    eax,0x32657b22
  416143:	xor    BYTE PTR [rcx],dh
  416145:	xor    DWORD PTR [rsi*1+0x35312d37],esi
  41614c:	xor    al,0x36
  41614e:	sub    eax,0x35633334
  416153:	sub    eax,0x65663561
  416158:	sub    eax,0x64383030
  41615d:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
  416164:	xor    BYTE PTR [rbp+0x22],bh
  416167:	(bad)  
  416168:	ds cmp al,0x21
  41616b:	sub    eax,0x6956202d
  416170:	jae    4161e6 <libjpeg_8_dll_iname+0x34e6>
  416172:	(bad)  
  416173:	and    BYTE PTR [rip+0x90a3e2d],ch        # 94b9fa6 <libjpeg_8_dll_iname+0x90a72a6>
  416179:	or     DWORD PTR [rcx],ecx
  41617b:	cmp    al,0x73
  41617d:	jne    4161ef <libjpeg_8_dll_iname+0x34ef>
  41617f:	jo     4161f0 <libjpeg_8_dll_iname+0x34f0>
  416181:	jb     4161f7 <libjpeg_8_dll_iname+0x34f7>
  416183:	gs fs rex.WRXB push r11
  416187:	and    BYTE PTR [rcx+0x64],cl
  41618a:	cmp    eax,0x35337b22
  41618f:	xor    DWORD PTR [rbx],esi
  416191:	cmp    BYTE PTR [rdx+0x39],ah
  416194:	(bad)  
  416195:	sub    eax,0x36396435
  41619a:	sub    eax,0x64626634
  41619f:	sub    eax,0x64326538
  4161a4:	sub    eax,0x34343261
  4161a9:	xor    BYTE PTR [rdx],dh
  4161ab:	xor    dh,BYTE PTR [rip+0x61333966]        # 61749b17 <libjpeg_8_dll_iname+0x61336e17>
  4161b1:	jge    4161d5 <libjpeg_8_dll_iname+0x34d5>
  4161b3:	(bad)  
  4161b4:	ds cmp al,0x21
  4161b7:	sub    eax,0x6957202d
  4161bc:	outs   dx,BYTE PTR ds:[rsi]
  4161bd:	(bad)  
  4161be:	and    BYTE PTR [rip+0x90a3e2d],ch        # 94b9ff1 <libjpeg_8_dll_iname+0x90a72f1>
  4161c4:	or     DWORD PTR [rcx],ecx
  4161c6:	cmp    al,0x73
  4161c8:	jne    41623a <libjpeg_8_dll_iname+0x353a>
  4161ca:	jo     41623b <libjpeg_8_dll_iname+0x353b>
  4161cc:	jb     416242 <libjpeg_8_dll_iname+0x3542>
  4161ce:	gs fs rex.WRXB push r11
  4161d2:	and    BYTE PTR [rcx+0x64],cl
  4161d5:	cmp    eax,0x61347b22
  4161da:	xor    ah,BYTE PTR [rsi+0x32]
  4161dd:	cmp    BYTE PTR [rbp+0x33],ah
  4161e0:	sub    eax,0x39623335
  4161e5:	sub    eax,0x31343434
  4161ea:	sub    eax,0x63396162
  4161ef:	sub    eax,0x64393664
  4161f4:	xor    al,0x61
  4161f6:	xor    al,0x61
  4161f8:	ss xor edi,DWORD PTR gs:[rax]
  4161fc:	jge    416220 <libjpeg_8_dll_iname+0x3520>
  4161fe:	(bad)  
  4161ff:	ds cmp al,0x21
  416202:	sub    eax,0x6957202d
  416207:	outs   dx,BYTE PTR ds:[rsi]
  416208:	cmp    BYTE PTR [rax],ah
  41620a:	sub    eax,0x90a3e2d
  41620f:	or     DWORD PTR [rcx],ecx
  416211:	cmp    al,0x73
  416213:	jne    416285 <libjpeg_8_dll_iname+0x3585>
  416215:	jo     416286 <libjpeg_8_dll_iname+0x3586>
  416217:	jb     41628d <libjpeg_8_dll_iname+0x358d>
  416219:	gs fs rex.WRXB push r11
  41621d:	and    BYTE PTR [rcx+0x64],cl
  416220:	cmp    eax,0x66317b22
  416225:	ss (bad) 
  416227:	movsxd esi,DWORD PTR ss:[rdi]
  41622a:	ss sub eax,0x31653038
  416230:	sub    eax,0x39333234
  416235:	sub    eax,0x62623539
  41623a:	sub    eax,0x30643338
  41623f:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
  416246:	cmp    BYTE PTR [rbp+0x22],bh
  416249:	(bad)  
  41624a:	ds cmp al,0x21
  41624d:	sub    eax,0x6957202d
  416252:	outs   dx,BYTE PTR ds:[rsi]
  416253:	cmp    BYTE PTR [rsi],ch
  416255:	xor    DWORD PTR [rax],esp
  416257:	sub    eax,0x90a3e2d
  41625c:	or     DWORD PTR [rcx],ecx
  41625e:	cmp    al,0x73
  416260:	jne    4162d2 <libjpeg_8_dll_iname+0x35d2>
  416262:	jo     4162d3 <libjpeg_8_dll_iname+0x35d3>
  416264:	jb     4162da <libjpeg_8_dll_iname+0x35da>
  416266:	gs fs rex.WRXB push r11
  41626a:	and    BYTE PTR [rcx+0x64],cl
  41626d:	cmp    eax,0x65387b22
  416272:	xor    BYTE PTR [rsi+0x37],ah
  416275:	(bad)  
  416276:	xor    DWORD PTR [rdx],esi
  416278:	sub    eax,0x33626662
  41627d:	sub    eax,0x38656634
  416282:	sub    eax,0x35613962
  416287:	sub    eax,0x64663834
  41628c:	xor    eax,0x35316130
  416291:	(bad)  
  416292:	cmp    DWORD PTR [rcx+0x7d],esp
  416295:	and    ch,BYTE PTR [rdi]
  416297:	ds cmp al,0x21
  41629a:	sub    eax,0x6957202d
  41629f:	outs   dx,BYTE PTR ds:[rsi]
  4162a0:	xor    DWORD PTR [rax],esi
  4162a2:	and    BYTE PTR [rip+0x90a3e2d],ch        # 94ba0d5 <libjpeg_8_dll_iname+0x90a73d5>
  4162a8:	or     DWORD PTR [rdi+rbp*1],edi
  4162ab:	(bad)  
  4162ac:	jo     41631e <libjpeg_8_dll_iname+0x361e>
  4162ae:	ins    BYTE PTR es:[rdi],dx
  4162af:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  4162b6:	or     cl,BYTE PTR ds:[rcx]
  4162b9:	cmp    al,0x2f
  4162bb:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4162be:	jo     416321 <libjpeg_8_dll_iname+0x3621>
  4162c0:	je     41632b <libjpeg_8_dll_iname+0x362b>
  4162c2:	(bad)  
  4162c3:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x90a3e79
  4162cb:	cmp    al,0x61
  4162cd:	jae    41633c <libjpeg_8_dll_iname+0x363c>
  4162cf:	jbe    416304 <libjpeg_8_dll_iname+0x3604>
  4162d1:	cmp    ah,BYTE PTR [rcx+0x70]
  4162d4:	jo     416342 <libjpeg_8_dll_iname+0x3642>
  4162d6:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  4162dd:	or     cl,BYTE PTR ds:[rcx]
  4162e0:	or     DWORD PTR [rcx+riz*2],edi
  4162e3:	jae    416352 <libjpeg_8_dll_iname+0x3652>
  4162e5:	jbe    41631a <libjpeg_8_dll_iname+0x361a>
  4162e7:	cmp    dh,BYTE PTR [rdi+0x69]
  4162ea:	outs   dx,BYTE PTR ds:[rsi]
  4162eb:	outs   dx,DWORD PTR fs:[rsi]
  4162ed:	ja     416362 <libjpeg_8_dll_iname+0x3662>
  4162ef:	push   rbx
  4162f0:	gs je  416367 <libjpeg_8_dll_iname+0x3667>
  4162f3:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
  4162fa:	ins    BYTE PTR es:[rdi],dx
  4162fb:	outs   dx,BYTE PTR ds:[rsi]
  4162fc:	jae    41633b <libjpeg_8_dll_iname+0x363b>
  4162fe:	and    ch,BYTE PTR [rax+0x74]
  416301:	je     416373 <libjpeg_8_dll_iname+0x3673>
  416303:	cmp    ch,BYTE PTR [rdi]
  416305:	(bad)  
  416306:	jae    41636b <libjpeg_8_dll_iname+0x366b>
  416308:	push   0x73616d65
  41630d:	cs ins DWORD PTR es:[rdi],dx
  41630f:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  416316:	je     416346 <libjpeg_8_dll_iname+0x3646>
  416318:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41631b:	(bad)  
  41631c:	push   rbx
  41631d:	rex.WRB
  41631e:	rex.WB (bad) 
  416320:	xor    dh,BYTE PTR [rax]
  416322:	xor    BYTE PTR [rip+0x6e69572f],dh        # 6eaaba57 <libjpeg_8_dll_iname+0x6e698d57>
  416328:	outs   dx,DWORD PTR fs:[rsi]
  41632a:	ja     41639f <libjpeg_8_dll_iname+0x369f>
  41632c:	push   rbx
  41632d:	gs je  4163a4 <libjpeg_8_dll_iname+0x36a4>
  416330:	imul   ebp,DWORD PTR [rsi+0x67],0xa3e2273
  416337:	or     DWORD PTR [rcx],ecx
  416339:	or     DWORD PTR [rsp+riz*2],edi
  41633c:	jo     4163a7 <libjpeg_8_dll_iname+0x36a7>
  41633e:	rex.B ja 4163a2 <libjpeg_8_dll_iname+0x36a2>
  416341:	jb     4163a8 <libjpeg_8_dll_iname+0x36a8>
  416343:	ds je  4163b8 <libjpeg_8_dll_iname+0x36b8>
  416346:	jne    4163ad <libjpeg_8_dll_iname+0x36ad>
  416348:	cmp    al,0x2f
  41634a:	fs jo  4163b6 <libjpeg_8_dll_iname+0x36b6>
  41634d:	rex.B ja 4163b1 <libjpeg_8_dll_iname+0x36b1>
  416350:	jb     4163b7 <libjpeg_8_dll_iname+0x36b7>
  416352:	or     cl,BYTE PTR ds:[rcx]
  416355:	or     DWORD PTR [rdi+rbp*1],edi
  416358:	(bad)  
  416359:	jae    4163c8 <libjpeg_8_dll_iname+0x36c8>
  41635b:	jbe    416390 <libjpeg_8_dll_iname+0x3690>
  41635d:	cmp    dh,BYTE PTR [rdi+0x69]
  416360:	outs   dx,BYTE PTR ds:[rsi]
  416361:	outs   dx,DWORD PTR fs:[rsi]
  416363:	ja     4163d8 <libjpeg_8_dll_iname+0x36d8>
  416365:	push   rbx
  416366:	gs je  4163dd <libjpeg_8_dll_iname+0x36dd>
  416369:	imul   ebp,DWORD PTR [rsi+0x67],0x90a3e73
  416370:	cmp    al,0x2f
  416372:	(bad)  
  416373:	jae    4163e2 <libjpeg_8_dll_iname+0x36e2>
  416375:	jbe    4163aa <libjpeg_8_dll_iname+0x36aa>
  416377:	cmp    ah,BYTE PTR [rcx+0x70]
  41637a:	jo     4163e8 <libjpeg_8_dll_iname+0x36e8>
  41637c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  416383:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  416387:	(bad)  
  416388:	jae    4163fd <libjpeg_8_dll_iname+0x36fd>
  41638a:	gs ins DWORD PTR es:[rdi],dx
  41638c:	(bad)  
  41638d:	ins    BYTE PTR es:[rdi],dx
  41638e:	jns    4163ce <libjpeg_8_dll_iname+0x36ce>
  416390:	or     al,BYTE PTR [rax]
  416392:	add    BYTE PTR [rax],al
  416394:	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu_debuglink:

0000000000417000 <.gnu_debuglink>:
  417000:	imul   bp,WORD PTR [rbp+riz*2+0x2d],0x7370
  417007:	fs sub eax,0x64616f6c
  41700d:	cs gs js 417076 <libjpeg_8_dll_iname+0x4376>
  417011:	cs fs gs (bad) 
  417015:	jne    41707e <libjpeg_8_dll_iname+0x437e>
  417017:	add    BYTE PTR [rsi-0x5f],bl
  41701a:	.byte 0xc5
  41701b:	.byte 0xda
