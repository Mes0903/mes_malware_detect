
6ee4dca852ae3b8f2fa3dba67bf58ea089d1ad5af0946dad3350339877cb7f29.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x8635]        # 0x409650
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x8636]        # 0x409660
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x8639]        # 0x409670
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x85fc]        # 0x409640
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x844f]        # 0x4094a0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x85d1]        # 0x409630
  40105f:	mov    DWORD PTR [rip+0xafa3],edx        # 0x40c008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x404988
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x403940
  401081:	mov    rdx,QWORD PTR [rip+0x84a8]        # 0x409530
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x848e]        # 0x409520
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x84f4]        # 0x409590
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x842b]        # 0x4094d0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x403520
  4010af:	mov    rax,QWORD PTR [rip+0x839a]        # 0x409450
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x404988
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x26f9]        # 0x403820
  401127:	call   0x403810
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x8455]        # 0x4095c0
  40116b:	lea    r8,[rip+0xaea6]        # 0x40c018
  401172:	lea    rdx,[rip+0xaea7]        # 0x40c020
  401179:	lea    rcx,[rip+0xaea8]        # 0x40c028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xae78],eax        # 0x40c000
  401188:	lea    rax,[rip+0xae71]        # 0x40c000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x83e5]        # 0x409580
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4049a0
  4011a3:	mov    DWORD PTR [rip+0xae67],eax        # 0x40c010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x846a]        # 0x409630
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x830b]        # 0x409500
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xc6fa]        # 0x40d8fc
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x82e7]        # 0x409510
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xadba],0x1        # 0x40c004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x822c]        # 0x409490
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x403b30
  40127d:	lea    rcx,[rip+0x2e4c]        # 0x4040d0
  401284:	call   QWORD PTR [rip+0xc66a]        # 0x40d8f4
  40128a:	mov    rdx,QWORD PTR [rip+0x825f]        # 0x4094f0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x403fe0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4049d0
  4012a5:	call   0x403920
  4012aa:	mov    rax,QWORD PTR [rip+0x81ef]        # 0x4094a0
  4012b1:	mov    QWORD PTR [rip+0xb7d0],rax        # 0x40ca88
  4012b8:	mov    rax,QWORD PTR [rip+0x8201]        # 0x4094c0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xb769],rax        # 0x40ca80
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x5cca],eax        # 0x407000
  401336:	mov    r12d,DWORD PTR [rip+0xaceb]        # 0x40c028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x404918
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xacc2]        # 0x40c020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x404900
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x404918
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x404910
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xac6a],rbp        # 0x40c020
  4013b6:	call   0x4034f0
  4013bb:	mov    rax,QWORD PTR [rip+0x80ee]        # 0x4094b0
  4013c2:	mov    rdx,QWORD PTR [rip+0xac4f]        # 0x40c018
  4013c9:	mov    ecx,DWORD PTR [rip+0xac59]        # 0x40c028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xac3c]        # 0x40c018
  4013dc:	mov    rdx,QWORD PTR [rip+0xac3d]        # 0x40c020
  4013e3:	call   0x404aa0
  4013e8:	mov    ecx,DWORD PTR [rip+0xac1a]        # 0x40c008
  4013ee:	mov    DWORD PTR [rip+0xac18],eax        # 0x40c00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xac02]        # 0x40c004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x404970
  40140b:	mov    eax,DWORD PTR [rip+0xabfb]        # 0x40c00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x80d9]        # 0x409510
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x404978
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x80ed]        # 0x409550
  401463:	mov    rcx,QWORD PTR [rip+0x80d6]        # 0x409540
  40146a:	call   0x404968
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xc40b]        # 0x40d8a4
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x80c9]        # 0x409570
  4014a7:	mov    rcx,QWORD PTR [rip+0x80b2]        # 0x409560
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x404968
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x404938
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x8155]        # 0x409630
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x403530
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x8125]        # 0x409630
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x403530
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	push   rbx
  401533:	sub    rsp,0x30
  401537:	mov    rax,QWORD PTR [rcx+0x10]
  40153b:	test   r8d,r8d
  40153e:	mov    rsi,rcx
  401541:	mov    edi,edx
  401543:	lea    r8,[rip+0x6ab6]        # 0x408000
  40154a:	mov    edx,0x0
  40154f:	mov    QWORD PTR [rsp+0x20],rax
  401554:	mov    r9,QWORD PTR [rcx+0x8]
  401558:	lea    rcx,[rip+0x6aa2]        # 0x408001
  40155f:	cmove  edx,edi
  401562:	call   0x403270
  401567:	mov    rax,QWORD PTR [rsi+0x18]
  40156b:	test   rax,rax
  40156e:	je     0x4015a2
  401570:	mov    rcx,QWORD PTR [rax]
  401573:	test   rcx,rcx
  401576:	je     0x4015a2
  401578:	add    edi,0x2
  40157b:	xor    ebx,ebx
  40157d:	jmp    0x40158c
  40157f:	nop
  401580:	mov    r8d,ebx
  401583:	mov    rcx,QWORD PTR [rax+r8*8]
  401587:	test   rcx,rcx
  40158a:	je     0x4015a2
  40158c:	xor    r8d,r8d
  40158f:	mov    edx,edi
  401591:	add    ebx,0x1
  401594:	call   0x401530
  401599:	mov    rax,QWORD PTR [rsi+0x18]
  40159d:	test   rax,rax
  4015a0:	jne    0x401580
  4015a2:	add    rsp,0x30
  4015a6:	pop    rbx
  4015a7:	pop    rsi
  4015a8:	pop    rdi
  4015a9:	ret    
  4015aa:	nop    WORD PTR [rax+rax*1+0x0]
  4015b0:	push   r12
  4015b2:	push   rbp
  4015b3:	push   rdi
  4015b4:	push   rsi
  4015b5:	push   rbx
  4015b6:	sub    rsp,0x40
  4015ba:	mov    rax,QWORD PTR [rcx+0x18]
  4015be:	mov    ebp,DWORD PTR [rsp+0x90]
  4015c5:	mov    r12,r8
  4015c8:	mov    rsi,rcx
  4015cb:	mov    edi,edx
  4015cd:	mov    r8d,r9d
  4015d0:	test   rax,rax
  4015d3:	je     0x401654
  4015d5:	mov    rcx,QWORD PTR [rax]
  4015d8:	test   rcx,rcx
  4015db:	je     0x401654
  4015dd:	xor    ebx,ebx
  4015df:	jmp    0x4015ef
  4015e1:	mov    edx,ebx
  4015e3:	xor    r8d,r8d
  4015e6:	mov    rcx,QWORD PTR [rax+rdx*8]
  4015ea:	test   rcx,rcx
  4015ed:	je     0x401602
  4015ef:	mov    edx,edi
  4015f1:	add    ebx,0x1
  4015f4:	call   0x401530
  4015f9:	mov    rax,QWORD PTR [rsi+0x18]
  4015fd:	test   rax,rax
  401600:	jne    0x4015e1
  401602:	xor    r8d,r8d
  401605:	test   ebp,ebp
  401607:	jne    0x401661
  401609:	lea    rax,[rip+0x69f0]        # 0x408000
  401610:	mov    r9,QWORD PTR [rsi+0x8]
  401614:	mov    rcx,QWORD PTR [rsi+0x10]
  401618:	test   r8d,r8d
  40161b:	mov    edx,0x0
  401620:	cmove  edx,edi
  401623:	mov    QWORD PTR [rsp+0x20],rcx
  401628:	lea    r8,[rip+0x69d1]        # 0x408000
  40162f:	lea    rcx,[rip+0x69dc]        # 0x408012
  401636:	mov    QWORD PTR [rsp+0x28],r9
  40163b:	mov    QWORD PTR [rsp+0x30],rax
  401640:	mov    r9,r12
  401643:	call   0x403270
  401648:	nop
  401649:	add    rsp,0x40
  40164d:	pop    rbx
  40164e:	pop    rsi
  40164f:	pop    rdi
  401650:	pop    rbp
  401651:	pop    r12
  401653:	ret    
  401654:	test   ebp,ebp
  401656:	lea    rax,[rip+0x69b2]        # 0x40800f
  40165d:	jne    0x401610
  40165f:	jmp    0x401609
  401661:	mov    r9,QWORD PTR [rsi+0x8]
  401665:	mov    rcx,QWORD PTR [rsi+0x10]
  401669:	mov    edx,edi
  40166b:	lea    rax,[rip+0x699d]        # 0x40800f
  401672:	jmp    0x401623
  401674:	xchg   ax,ax
  401676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401680:	sub    rsp,0x38
  401684:	lea    r8,[rip+0x6995]        # 0x408020
  40168b:	lea    rdx,[rip+0x69b9]        # 0x40804b
  401692:	lea    rcx,[rip+0x69cf]        # 0x408068
  401699:	xor    r9d,r9d
  40169c:	mov    QWORD PTR [rsp+0x20],0x0
  4016a5:	call   0x403288
  4016aa:	lea    rdx,[rip+0x69c2]        # 0x408073
  4016b1:	mov    rcx,rax
  4016b4:	mov    QWORD PTR [rip+0xa975],rax        # 0x40c030
  4016bb:	call   0x403280
  4016c0:	mov    rcx,QWORD PTR [rip+0xa969]        # 0x40c030
  4016c7:	lea    rdx,[rip+0x7a32]        # 0x409100
  4016ce:	call   0x403290
  4016d3:	mov    rax,QWORD PTR [rip+0xa956]        # 0x40c030
  4016da:	add    rsp,0x38
  4016de:	ret    
  4016df:	nop
  4016e0:	push   rbp
  4016e1:	push   rdi
  4016e2:	push   rsi
  4016e3:	push   rbx
  4016e4:	sub    rsp,0x38
  4016e8:	mov    rcx,QWORD PTR [rsp+0x88]
  4016f0:	mov    rbp,QWORD PTR [rsp+0x80]
  4016f8:	mov    edx,0x1
  4016fd:	mov    rsi,r8
  401700:	mov    rdi,r9
  401703:	call   0x403170
  401708:	lea    rcx,[rip+0x696b]        # 0x40807a
  40170f:	mov    rbx,rax
  401712:	mov    QWORD PTR [rsp+0x20],rax
  401717:	mov    r9,rbp
  40171a:	mov    r8,rdi
  40171d:	mov    rdx,rsi
  401720:	call   0x403270
  401725:	mov    rcx,rbx
  401728:	add    rsp,0x38
  40172c:	pop    rbx
  40172d:	pop    rsi
  40172e:	pop    rdi
  40172f:	pop    rbp
  401730:	jmp    0x403338
  401735:	nop
  401736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401740:	push   r14
  401742:	push   r13
  401744:	push   r12
  401746:	push   rbp
  401747:	push   rdi
  401748:	push   rsi
  401749:	push   rbx
  40174a:	add    rsp,0xffffffffffffff80
  40174e:	lea    r8,[rip+0x1be3]        # 0x403338
  401755:	xor    r9d,r9d
  401758:	mov    r12,rcx
  40175b:	mov    ebp,edx
  40175d:	lea    rcx,[rip+0x1ac4]        # 0x403228
  401764:	lea    rdx,[rip+0x1acd]        # 0x403238
  40176b:	lea    r13,[rsp+0x68]
  401770:	call   0x403318
  401775:	lea    rcx,[rip+0x690c]        # 0x408088
  40177c:	mov    rsi,rax
  40177f:	mov    QWORD PTR [rsp+0x68],0x0
  401788:	call   0x403158
  40178d:	lea    r9,[rip+0x68f9]        # 0x40808d
  401794:	mov    QWORD PTR [rsp+0x30],rax
  401799:	lea    rax,[rip+0x6918]        # 0x4080b8
  4017a0:	lea    r8,[rip+0x68fb]        # 0x4080a2
  4017a7:	mov    QWORD PTR [rsp+0x50],r13
  4017ac:	mov    QWORD PTR [rsp+0x48],0x0
  4017b5:	mov    DWORD PTR [rsp+0x40],0xbb8
  4017bd:	mov    DWORD PTR [rsp+0x38],0x0
  4017c5:	mov    rdx,r9
  4017c8:	mov    QWORD PTR [rsp+0x28],0x0
  4017d1:	mov    QWORD PTR [rsp+0x20],rax
  4017d6:	mov    rcx,r12
  4017d9:	call   0x403108
  4017de:	test   rax,rax
  4017e1:	mov    rdi,rax
  4017e4:	je     0x401996
  4017ea:	lea    r14,[rsp+0x70]
  4017ef:	lea    rdx,[rip+0x6892]        # 0x408088
  4017f6:	mov    rcx,rax
  4017f9:	lea    rbx,[rsp+0x78]
  4017fe:	mov    r8,r14
  401801:	call   0x4031b8
  401806:	jmp    0x401828
  401808:	nop    DWORD PTR [rax+rax*1+0x0]
  401810:	mov    rcx,QWORD PTR [rsp+0x78]
  401815:	call   0x403218
  40181a:	xor    r8d,r8d
  40181d:	mov    rdx,rax
  401820:	mov    rcx,rsi
  401823:	call   0x403328
  401828:	mov    rcx,QWORD PTR [rsp+0x70]
  40182d:	lea    rdx,[rip+0x6899]        # 0x4080cd
  401834:	mov    r8,rbx
  401837:	call   0x403198
  40183c:	test   eax,eax
  40183e:	jne    0x401810
  401840:	mov    rcx,QWORD PTR [rsp+0x70]
  401845:	call   0x4031a0
  40184a:	mov    rcx,rdi
  40184d:	call   0x403128
  401852:	lea    rcx,[rip+0x682f]        # 0x408088
  401859:	mov    QWORD PTR [rsp+0x68],0x0
  401862:	call   0x403158
  401867:	lea    r9,[rip+0x681f]        # 0x40808d
  40186e:	mov    QWORD PTR [rsp+0x30],rax
  401873:	lea    rax,[rip+0x6855]        # 0x4080cf
  40187a:	lea    r8,[rip+0x6821]        # 0x4080a2
  401881:	mov    QWORD PTR [rsp+0x50],r13
  401886:	mov    QWORD PTR [rsp+0x48],0x0
  40188f:	mov    DWORD PTR [rsp+0x40],0xbb8
  401897:	mov    DWORD PTR [rsp+0x38],0x0
  40189f:	mov    rdx,r9
  4018a2:	mov    QWORD PTR [rsp+0x28],0x0
  4018ab:	mov    QWORD PTR [rsp+0x20],rax
  4018b0:	mov    rcx,r12
  4018b3:	call   0x403108
  4018b8:	test   rax,rax
  4018bb:	mov    rdi,rax
  4018be:	je     0x401996
  4018c4:	lea    rdx,[rip+0x67bd]        # 0x408088
  4018cb:	mov    r8,r14
  4018ce:	mov    rcx,rax
  4018d1:	call   0x4031b8
  4018d6:	jmp    0x4018f8
  4018d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4018e0:	mov    rcx,QWORD PTR [rsp+0x78]
  4018e5:	call   0x403218
  4018ea:	xor    r8d,r8d
  4018ed:	mov    rdx,rax
  4018f0:	mov    rcx,rsi
  4018f3:	call   0x403328
  4018f8:	mov    rcx,QWORD PTR [rsp+0x70]
  4018fd:	lea    rdx,[rip+0x67c9]        # 0x4080cd
  401904:	mov    r8,rbx
  401907:	call   0x403198
  40190c:	test   eax,eax
  40190e:	jne    0x4018e0
  401910:	mov    rcx,QWORD PTR [rsp+0x70]
  401915:	call   0x4031a0
  40191a:	mov    rcx,rdi
  40191d:	call   0x403128
  401922:	mov    rcx,rsi
  401925:	call   0x403330
  40192a:	lea    rdx,[rip+0x18ef]        # 0x403220
  401931:	mov    rcx,rax
  401934:	call   0x403300
  401939:	test   rax,rax
  40193c:	mov    r12,rax
  40193f:	mov    rbx,rax
  401942:	je     0x401976
  401944:	test   ebp,ebp
  401946:	mov    rdi,QWORD PTR [rbx]
  401949:	jne    0x40195e
  40194b:	lea    rdx,[rip+0x6797]        # 0x4080e9
  401952:	mov    rcx,rdi
  401955:	call   0x403230
  40195a:	test   eax,eax
  40195c:	jne    0x40196d
  40195e:	lea    rcx,[rip+0x677f]        # 0x4080e4
  401965:	mov    rdx,rdi
  401968:	call   0x403270
  40196d:	mov    rbx,QWORD PTR [rbx+0x8]
  401971:	test   rbx,rbx
  401974:	jne    0x401944
  401976:	mov    rcx,r12
  401979:	call   0x403308
  40197e:	mov    rcx,rsi
  401981:	call   0x403310
  401986:	nop
  401987:	sub    rsp,0xffffffffffffff80
  40198b:	pop    rbx
  40198c:	pop    rsi
  40198d:	pop    rdi
  40198e:	pop    rbp
  40198f:	pop    r12
  401991:	pop    r13
  401993:	pop    r14
  401995:	ret    
  401996:	mov    rax,QWORD PTR [rsp+0x68]
  40199b:	lea    rcx,[rip+0x6720]        # 0x4080c2
  4019a2:	mov    rbx,QWORD PTR [rax+0x8]
  4019a6:	call   0x403368
  4019ab:	mov    rcx,rax
  4019ae:	mov    rdx,rbx
  4019b1:	call   0x403268
  4019b6:	mov    rcx,QWORD PTR [rsp+0x68]
  4019bb:	call   0x403340
  4019c0:	jmp    0x40197e
  4019c2:	nop    DWORD PTR [rax+0x0]
  4019c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019d0:	push   rbp
  4019d1:	push   rdi
  4019d2:	push   rsi
  4019d3:	push   rbx
  4019d4:	sub    rsp,0x88
  4019db:	mov    rbx,rcx
  4019de:	lea    rcx,[rip+0x6706]        # 0x4080eb
  4019e5:	mov    rdi,rdx
  4019e8:	mov    QWORD PTR [rsp+0x68],r8
  4019ed:	mov    QWORD PTR [rsp+0x70],0x0
  4019f6:	lea    rsi,[rsp+0x70]
  4019fb:	call   0x403158
  401a00:	mov    r8,QWORD PTR [rsp+0x68]
  401a05:	mov    QWORD PTR [rsp+0x30],rax
  401a0a:	lea    rax,[rip+0x6703]        # 0x408114
  401a11:	lea    r9,[rip+0x66d8]        # 0x4080f0
  401a18:	mov    rcx,rbx
  401a1b:	mov    QWORD PTR [rsp+0x50],rsi
  401a20:	mov    QWORD PTR [rsp+0x48],0x0
  401a29:	mov    DWORD PTR [rsp+0x40],0xbb8
  401a31:	mov    rdx,rdi
  401a34:	mov    DWORD PTR [rsp+0x38],0x0
  401a3c:	mov    QWORD PTR [rsp+0x28],0x0
  401a45:	mov    QWORD PTR [rsp+0x20],rax
  401a4a:	call   0x403108
  401a4f:	test   rax,rax
  401a52:	mov    rbx,rax
  401a55:	je     0x401b1d
  401a5b:	lea    r8,[rsp+0x78]
  401a60:	lea    rdx,[rip+0x66b8]        # 0x40811f
  401a67:	mov    rcx,rax
  401a6a:	call   0x4031b8
  401a6f:	mov    rcx,QWORD PTR [rsp+0x78]
  401a74:	mov    rdx,rsi
  401a77:	mov    QWORD PTR [rsp+0x70],0x0
  401a80:	call   0x4030a0
  401a85:	mov    rcx,rbx
  401a88:	mov    rbp,rax
  401a8b:	call   0x403128
  401a90:	test   rbp,rbp
  401a93:	je     0x401b49
  401a99:	mov    rdx,QWORD PTR [rbp+0x10]
  401a9d:	test   rdx,rdx
  401aa0:	je     0x401b08
  401aa2:	mov    rsi,QWORD PTR [rdx]
  401aa5:	xor    edi,edi
  401aa7:	test   rsi,rsi
  401aaa:	je     0x401b08
  401aac:	nop    DWORD PTR [rax+0x0]
  401ab0:	mov    rax,QWORD PTR [rsi+0x10]
  401ab4:	test   rax,rax
  401ab7:	je     0x401af5
  401ab9:	mov    r8,QWORD PTR [rax]
  401abc:	xor    ebx,ebx
  401abe:	test   r8,r8
  401ac1:	jne    0x401ad1
  401ac3:	jmp    0x401af5
  401ac5:	mov    r8d,ebx
  401ac8:	mov    r8,QWORD PTR [rdx+r8*8]
  401acc:	test   r8,r8
  401acf:	je     0x401af1
  401ad1:	mov    rdx,QWORD PTR [rsi+0x8]
  401ad5:	mov    r8,QWORD PTR [r8+0x8]
  401ad9:	lea    rcx,[rip+0x666d]        # 0x40814d
  401ae0:	add    ebx,0x1
  401ae3:	call   0x403270
  401ae8:	mov    rdx,QWORD PTR [rsi+0x10]
  401aec:	test   rdx,rdx
  401aef:	jne    0x401ac5
  401af1:	mov    rdx,QWORD PTR [rbp+0x10]
  401af5:	add    edi,0x1
  401af8:	test   rdx,rdx
  401afb:	je     0x401b08
  401afd:	mov    eax,edi
  401aff:	mov    rsi,QWORD PTR [rdx+rax*8]
  401b03:	test   rsi,rsi
  401b06:	jne    0x401ab0
  401b08:	mov    rcx,rbp
  401b0b:	call   0x403098
  401b10:	nop
  401b11:	add    rsp,0x88
  401b18:	pop    rbx
  401b19:	pop    rsi
  401b1a:	pop    rdi
  401b1b:	pop    rbp
  401b1c:	ret    
  401b1d:	mov    rax,QWORD PTR [rsp+0x70]
  401b22:	lea    rcx,[rip+0x6599]        # 0x4080c2
  401b29:	mov    rbx,QWORD PTR [rax+0x8]
  401b2d:	call   0x403368
  401b32:	mov    rdx,rbx
  401b35:	mov    rcx,rax
  401b38:	call   0x403268
  401b3d:	mov    rcx,QWORD PTR [rsp+0x70]
  401b42:	call   0x403340
  401b47:	jmp    0x401b11
  401b49:	mov    rax,QWORD PTR [rsp+0x70]
  401b4e:	lea    rcx,[rip+0x65d3]        # 0x408128
  401b55:	mov    rbx,QWORD PTR [rax+0x8]
  401b59:	jmp    0x401b2d
  401b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b60:	push   r15
  401b62:	push   r14
  401b64:	push   r13
  401b66:	push   r12
  401b68:	push   rbp
  401b69:	push   rdi
  401b6a:	push   rsi
  401b6b:	push   rbx
  401b6c:	sub    rsp,0xa8
  401b73:	mov    rsi,QWORD PTR [rsp+0x110]
  401b7b:	mov    rbx,rdx
  401b7e:	mov    DWORD PTR [rsp+0x108],r9d
  401b86:	lea    rdx,[rip+0x16ab]        # 0x403238
  401b8d:	mov    rbp,rcx
  401b90:	mov    rdi,r8
  401b93:	lea    r9,[rip+0x158e]        # 0x403128
  401b9a:	lea    r8,[rip+0x1797]        # 0x403338
  401ba1:	lea    rcx,[rip+0x1680]        # 0x403228
  401ba8:	call   0x403318
  401bad:	test   rbx,rbx
  401bb0:	mov    QWORD PTR [rsp+0x78],rax
  401bb5:	setne  dl
  401bb8:	test   rsi,rsi
  401bbb:	setne  al
  401bbe:	test   dl,al
  401bc0:	je     0x401c6e
  401bc6:	test   rbp,rbp
  401bc9:	je     0x401c6e
  401bcf:	cmp    QWORD PTR [rdi+0x20],0x0
  401bd4:	je     0x401c6e
  401bda:	mov    rdx,QWORD PTR [rdi+0x8]
  401bde:	lea    rcx,[rip+0x6506]        # 0x4080eb
  401be5:	call   0x403188
  401bea:	mov    QWORD PTR [rsp+0x28],rax
  401bef:	lea    rax,[rip+0x65a2]        # 0x408198
  401bf6:	lea    r9,[rip+0x657b]        # 0x408178
  401bfd:	mov    QWORD PTR [rsp+0x50],0x0
  401c06:	mov    QWORD PTR [rsp+0x48],0x0
  401c0f:	mov    r8,rsi
  401c12:	mov    DWORD PTR [rsp+0x40],0xbb8
  401c1a:	mov    DWORD PTR [rsp+0x38],0x0
  401c22:	mov    rdx,rbx
  401c25:	mov    QWORD PTR [rsp+0x30],0x0
  401c2e:	mov    QWORD PTR [rsp+0x20],rax
  401c33:	mov    rcx,rbp
  401c36:	call   0x403108
  401c3b:	test   rax,rax
  401c3e:	mov    r12,rax
  401c41:	je     0x40229d
  401c47:	lea    rcx,[rip+0x6551]        # 0x40819f
  401c4e:	call   0x403158
  401c53:	mov    rcx,r12
  401c56:	mov    rdx,rax
  401c59:	call   0x4031a8
  401c5e:	test   eax,eax
  401c60:	jne    0x402223
  401c66:	mov    rcx,r12
  401c69:	call   0x403128
  401c6e:	mov    rax,QWORD PTR [rdi+0x28]
  401c72:	test   rax,rax
  401c75:	je     0x401cb1
  401c77:	mov    rcx,QWORD PTR [rax]
  401c7a:	xor    ebx,ebx
  401c7c:	mov    esi,DWORD PTR [rsp+0x108]
  401c83:	test   rcx,rcx
  401c86:	jne    0x401c9b
  401c88:	jmp    0x401cb1
  401c8a:	nop    WORD PTR [rax+rax*1+0x0]
  401c90:	mov    ecx,ebx
  401c92:	mov    rcx,QWORD PTR [rax+rcx*8]
  401c96:	test   rcx,rcx
  401c99:	je     0x401cb1
  401c9b:	xor    r8d,r8d
  401c9e:	mov    edx,esi
  401ca0:	add    ebx,0x1
  401ca3:	call   0x401530
  401ca8:	mov    rax,QWORD PTR [rdi+0x28]
  401cac:	test   rax,rax
  401caf:	jne    0x401c90
  401cb1:	mov    r9,QWORD PTR [rdi+0x8]
  401cb5:	mov    edx,DWORD PTR [rsp+0x108]
  401cbc:	lea    r8,[rip+0x633d]        # 0x408000
  401cc3:	lea    rcx,[rip+0x64e2]        # 0x4081ac
  401cca:	call   0x403270
  401ccf:	cmp    QWORD PTR [rdi+0x10],0x0
  401cd4:	je     0x401eda
  401cda:	mov    edx,DWORD PTR [rip+0xa370]        # 0x40c050
  401ce0:	test   edx,edx
  401ce2:	je     0x402033
  401ce8:	cmp    QWORD PTR [rdi+0x20],0x0
  401ced:	je     0x401e11
  401cf3:	mov    edx,DWORD PTR [rsp+0x108]
  401cfa:	lea    r8,[rip+0x62ff]        # 0x408000
  401d01:	lea    rcx,[rip+0x64fe]        # 0x408206
  401d08:	call   0x403270
  401d0d:	mov    rax,QWORD PTR [rdi+0x20]
  401d11:	mov    rax,QWORD PTR [rax]
  401d14:	test   rax,rax
  401d17:	je     0x401e11
  401d1d:	mov    esi,DWORD PTR [rsp+0x108]
  401d24:	mov    r14,QWORD PTR [rsp+0x78]
  401d29:	xor    ebx,ebx
  401d2b:	xor    ebp,ebp
  401d2d:	add    esi,0x4
  401d30:	mov    rdx,QWORD PTR [rax+0x8]
  401d34:	mov    rcx,r14
  401d37:	call   0x403320
  401d3c:	mov    r12,rax
  401d3f:	mov    rax,QWORD PTR [rdi+0x20]
  401d43:	mov    rbx,QWORD PTR [rax+rbx*1]
  401d47:	mov    eax,DWORD PTR [rbx+0x18]
  401d4a:	cmp    eax,0x1
  401d4d:	je     0x401e50
  401d53:	cmp    eax,0x2
  401d56:	je     0x401e90
  401d5c:	cmp    eax,0x3
  401d5f:	jne    0x4023c6
  401d65:	lea    r13,[rip+0x63fc]        # 0x408168
  401d6c:	mov    rax,QWORD PTR [rbx+0x20]
  401d70:	test   rax,rax
  401d73:	je     0x401da5
  401d75:	mov    rcx,QWORD PTR [rax]
  401d78:	test   rcx,rcx
  401d7b:	je     0x401da5
  401d7d:	xor    r15d,r15d
  401d80:	jmp    0x401d8e
  401d82:	mov    edx,r15d
  401d85:	mov    rcx,QWORD PTR [rax+rdx*8]
  401d89:	test   rcx,rcx
  401d8c:	je     0x401da5
  401d8e:	xor    r8d,r8d
  401d91:	mov    edx,esi
  401d93:	add    r15d,0x1
  401d97:	call   0x401530
  401d9c:	mov    rax,QWORD PTR [rbx+0x20]
  401da0:	test   rax,rax
  401da3:	jne    0x401d82
  401da5:	test   r12,r12
  401da8:	je     0x401e60
  401dae:	mov    rcx,r12
  401db1:	xor    edx,edx
  401db3:	call   0x403170
  401db8:	mov    QWORD PTR [rsp+0x30],rax
  401dbd:	mov    r12,rax
  401dc0:	mov    rax,QWORD PTR [rbx+0x8]
  401dc4:	lea    rcx,[rip+0x6463]        # 0x40822e
  401dcb:	lea    r8,[rip+0x622e]        # 0x408000
  401dd2:	mov    r9,r13
  401dd5:	mov    edx,esi
  401dd7:	mov    QWORD PTR [rsp+0x28],rax
  401ddc:	mov    rax,QWORD PTR [rbx+0x10]
  401de0:	mov    QWORD PTR [rsp+0x20],rax
  401de5:	call   0x403270
  401dea:	mov    rcx,r12
  401ded:	call   0x403338
  401df2:	mov    rdx,QWORD PTR [rdi+0x20]
  401df6:	lea    eax,[rbp+0x1]
  401df9:	mov    rbp,rax
  401dfc:	lea    rbx,[rax*8+0x0]
  401e04:	mov    rax,QWORD PTR [rdx+rax*8]
  401e08:	test   rax,rax
  401e0b:	jne    0x401d30
  401e11:	mov    edx,DWORD PTR [rsp+0x108]
  401e18:	lea    r8,[rip+0x61e1]        # 0x408000
  401e1f:	lea    rcx,[rip+0x63d9]        # 0x4081ff
  401e26:	call   0x403270
  401e2b:	mov    rcx,QWORD PTR [rsp+0x78]
  401e30:	call   0x403310
  401e35:	nop
  401e36:	add    rsp,0xa8
  401e3d:	pop    rbx
  401e3e:	pop    rsi
  401e3f:	pop    rdi
  401e40:	pop    rbp
  401e41:	pop    r12
  401e43:	pop    r13
  401e45:	pop    r14
  401e47:	pop    r15
  401e49:	ret    
  401e4a:	nop    WORD PTR [rax+rax*1+0x0]
  401e50:	lea    r13,[rip+0x62fe]        # 0x408155
  401e57:	jmp    0x401d6c
  401e5c:	nop    DWORD PTR [rax+0x0]
  401e60:	mov    rax,QWORD PTR [rbx+0x8]
  401e64:	lea    r8,[rip+0x6195]        # 0x408000
  401e6b:	lea    rcx,[rip+0x63cf]        # 0x408241
  401e72:	mov    r9,r13
  401e75:	mov    edx,esi
  401e77:	mov    QWORD PTR [rsp+0x28],rax
  401e7c:	mov    rax,QWORD PTR [rbx+0x10]
  401e80:	mov    QWORD PTR [rsp+0x20],rax
  401e85:	call   0x403270
  401e8a:	jmp    0x401df2
  401e8f:	nop
  401e90:	lea    r13,[rip+0x62c7]        # 0x40815e
  401e97:	jmp    0x401d6c
  401e9c:	mov    rdx,QWORD PTR [rbx+0x18]
  401ea0:	test   rdx,rdx
  401ea3:	je     0x401eb4
  401ea5:	mov    rcx,QWORD PTR [rdx]
  401ea8:	xor    r14d,r14d
  401eab:	test   rcx,rcx
  401eae:	jne    0x40211f
  401eb4:	lea    rcx,[rip+0x632c]        # 0x4081e7
  401ebb:	call   0x403270
  401ec0:	add    DWORD PTR [rsp+0x68],0x1
  401ec5:	mov    rax,QWORD PTR [rdi+0x10]
  401ec9:	mov    edx,DWORD PTR [rsp+0x68]
  401ecd:	mov    rbx,QWORD PTR [rax+rdx*8]
  401ed1:	test   rbx,rbx
  401ed4:	jne    0x402080
  401eda:	cmp    QWORD PTR [rdi+0x18],0x0
  401edf:	je     0x401ce8
  401ee5:	mov    eax,DWORD PTR [rip+0xa165]        # 0x40c050
  401eeb:	test   eax,eax
  401eed:	jne    0x401ce8
  401ef3:	mov    edx,DWORD PTR [rsp+0x108]
  401efa:	lea    r8,[rip+0x60ff]        # 0x408000
  401f01:	lea    rcx,[rip+0x62e8]        # 0x4081f0
  401f08:	call   0x403270
  401f0d:	mov    rax,QWORD PTR [rdi+0x18]
  401f11:	mov    rsi,QWORD PTR [rax]
  401f14:	test   rsi,rsi
  401f17:	je     0x401ce8
  401f1d:	mov    eax,DWORD PTR [rsp+0x108]
  401f24:	xor    r15d,r15d
  401f27:	lea    r12d,[rax+0x4]
  401f2b:	add    eax,0x5
  401f2e:	mov    r13d,eax
  401f31:	mov    rax,QWORD PTR [rsi+0x18]
  401f35:	test   rax,rax
  401f38:	je     0x401f72
  401f3a:	mov    rcx,QWORD PTR [rax]
  401f3d:	test   rcx,rcx
  401f40:	je     0x401f72
  401f42:	xor    ebx,ebx
  401f44:	jmp    0x401f5b
  401f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f50:	mov    edx,ebx
  401f52:	mov    rcx,QWORD PTR [rax+rdx*8]
  401f56:	test   rcx,rcx
  401f59:	je     0x401f72
  401f5b:	xor    r8d,r8d
  401f5e:	mov    edx,r12d
  401f61:	add    ebx,0x1
  401f64:	call   0x401530
  401f69:	mov    rax,QWORD PTR [rsi+0x18]
  401f6d:	test   rax,rax
  401f70:	jne    0x401f50
  401f72:	mov    r9,QWORD PTR [rsi+0x8]
  401f76:	lea    r8,[rip+0x6083]        # 0x408000
  401f7d:	lea    rcx,[rip+0x6257]        # 0x4081db
  401f84:	mov    edx,r12d
  401f87:	call   0x403270
  401f8c:	mov    rcx,QWORD PTR [rsi+0x8]
  401f90:	call   0x404900
  401f95:	mov    r8,QWORD PTR [rsi+0x10]
  401f99:	test   r8,r8
  401f9c:	je     0x40200a
  401f9e:	mov    rcx,QWORD PTR [r8]
  401fa1:	test   rcx,rcx
  401fa4:	je     0x40200a
  401fa6:	xor    ebp,ebp
  401fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  401fb0:	lea    edx,[rbp+0x1]
  401fb3:	cmp    QWORD PTR [r8+rdx*8],0x0
  401fb8:	mov    rbp,rdx
  401fbb:	jne    0x401fb0
  401fbd:	sub    ebp,0x1
  401fc0:	lea    r14d,[r13+rax*1+0x0]
  401fc5:	xor    ebx,ebx
  401fc7:	jmp    0x401fdb
  401fc9:	nop    DWORD PTR [rax+0x0]
  401fd0:	mov    edx,ebx
  401fd2:	mov    rcx,QWORD PTR [rax+rdx*8]
  401fd6:	test   rcx,rcx
  401fd9:	je     0x40200a
  401fdb:	xor    r9d,r9d
  401fde:	test   ebx,ebx
  401fe0:	lea    r8,[rip+0x6019]        # 0x408000
  401fe7:	sete   r9b
  401feb:	xor    eax,eax
  401fed:	cmp    ebx,ebp
  401fef:	setne  al
  401ff2:	mov    edx,r14d
  401ff5:	add    ebx,0x1
  401ff8:	mov    DWORD PTR [rsp+0x20],eax
  401ffc:	call   0x4015b0
  402001:	mov    rax,QWORD PTR [rsi+0x10]
  402005:	test   rax,rax
  402008:	jne    0x401fd0
  40200a:	lea    rcx,[rip+0x61d6]        # 0x4081e7
  402011:	call   0x403270
  402016:	mov    rax,QWORD PTR [rdi+0x18]
  40201a:	lea    edx,[r15+0x1]
  40201e:	mov    r15,rdx
  402021:	mov    rsi,QWORD PTR [rax+rdx*8]
  402025:	test   rsi,rsi
  402028:	jne    0x401f31
  40202e:	jmp    0x401ce8
  402033:	mov    edx,DWORD PTR [rsp+0x108]
  40203a:	lea    r8,[rip+0x5fbf]        # 0x408000
  402041:	lea    rcx,[rip+0x6184]        # 0x4081cc
  402048:	call   0x403270
  40204d:	mov    rax,QWORD PTR [rdi+0x10]
  402051:	mov    rbx,QWORD PTR [rax]
  402054:	test   rbx,rbx
  402057:	je     0x401eda
  40205d:	mov    eax,DWORD PTR [rsp+0x108]
  402064:	mov    DWORD PTR [rsp+0x68],0x0
  40206c:	lea    ebp,[rax+0x4]
  40206f:	add    eax,0x5
  402072:	mov    DWORD PTR [rsp+0x74],eax
  402076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402080:	mov    rax,QWORD PTR [rbx+0x20]
  402084:	test   rax,rax
  402087:	je     0x4020b6
  402089:	mov    rcx,QWORD PTR [rax]
  40208c:	test   rcx,rcx
  40208f:	je     0x4020b6
  402091:	xor    esi,esi
  402093:	jmp    0x4020a0
  402095:	mov    ecx,esi
  402097:	mov    rcx,QWORD PTR [rax+rcx*8]
  40209b:	test   rcx,rcx
  40209e:	je     0x4020b6
  4020a0:	xor    r8d,r8d
  4020a3:	mov    edx,ebp
  4020a5:	add    esi,0x1
  4020a8:	call   0x401530
  4020ad:	mov    rax,QWORD PTR [rbx+0x20]
  4020b1:	test   rax,rax
  4020b4:	jne    0x402095
  4020b6:	mov    r9,QWORD PTR [rbx+0x8]
  4020ba:	lea    r8,[rip+0x5f3f]        # 0x408000
  4020c1:	lea    rcx,[rip+0x6113]        # 0x4081db
  4020c8:	mov    edx,ebp
  4020ca:	call   0x403270
  4020cf:	mov    rcx,QWORD PTR [rbx+0x8]
  4020d3:	call   0x404900
  4020d8:	mov    r9,QWORD PTR [rbx+0x10]
  4020dc:	mov    rsi,rax
  4020df:	test   r9,r9
  4020e2:	je     0x401e9c
  4020e8:	mov    r8,QWORD PTR [r9]
  4020eb:	test   r8,r8
  4020ee:	mov    rcx,r8
  4020f1:	je     0x40220e
  4020f7:	xor    r14d,r14d
  4020fa:	nop    WORD PTR [rax+rax*1+0x0]
  402100:	lea    eax,[r14+0x1]
  402104:	cmp    QWORD PTR [r9+rax*8],0x0
  402109:	mov    r14,rax
  40210c:	jne    0x402100
  40210e:	mov    rdx,QWORD PTR [rbx+0x18]
  402112:	test   rdx,rdx
  402115:	je     0x402149
  402117:	mov    rcx,QWORD PTR [rdx]
  40211a:	test   rcx,rcx
  40211d:	je     0x40213e
  40211f:	xor    eax,eax
  402121:	lea    r8d,[rax+0x1]
  402125:	cmp    QWORD PTR [rdx+r8*8],0x0
  40212a:	mov    rax,r8
  40212d:	jne    0x402121
  40212f:	add    r14d,r8d
  402132:	test   r9,r9
  402135:	je     0x4023be
  40213b:	mov    r8,QWORD PTR [r9]
  40213e:	xor    r15d,r15d
  402141:	test   r8,r8
  402144:	mov    rcx,r8
  402147:	je     0x4021a2
  402149:	mov    eax,DWORD PTR [rsp+0x74]
  40214d:	lea    r13d,[r14-0x1]
  402151:	xor    r15d,r15d
  402154:	lea    r12d,[rax+rsi*1]
  402158:	jmp    0x40216c
  40215a:	nop    WORD PTR [rax+rax*1+0x0]
  402160:	mov    edx,r15d
  402163:	mov    rcx,QWORD PTR [rax+rdx*8]
  402167:	test   rcx,rcx
  40216a:	je     0x40219e
  40216c:	xor    r9d,r9d
  40216f:	test   r15d,r15d
  402172:	lea    r8,[rip+0x6069]        # 0x4081e2
  402179:	sete   r9b
  40217d:	xor    eax,eax
  40217f:	cmp    r13d,r15d
  402182:	setne  al
  402185:	mov    edx,r12d
  402188:	add    r15d,0x1
  40218c:	mov    DWORD PTR [rsp+0x20],eax
  402190:	call   0x4015b0
  402195:	mov    rax,QWORD PTR [rbx+0x10]
  402199:	test   rax,rax
  40219c:	jne    0x402160
  40219e:	mov    rdx,QWORD PTR [rbx+0x18]
  4021a2:	test   rdx,rdx
  4021a5:	je     0x401eb4
  4021ab:	mov    rcx,QWORD PTR [rdx]
  4021ae:	test   rcx,rcx
  4021b1:	je     0x401eb4
  4021b7:	add    esi,DWORD PTR [rsp+0x74]
  4021bb:	lea    r12d,[r14-0x1]
  4021bf:	xor    r13d,r13d
  4021c2:	jmp    0x4021d4
  4021c4:	mov    edx,r13d
  4021c7:	mov    rcx,QWORD PTR [rax+rdx*8]
  4021cb:	test   rcx,rcx
  4021ce:	je     0x401eb4
  4021d4:	xor    r9d,r9d
  4021d7:	test   r15d,r15d
  4021da:	lea    r8,[rip+0x600a]        # 0x4081eb
  4021e1:	sete   r9b
  4021e5:	xor    eax,eax
  4021e7:	cmp    r12d,r15d
  4021ea:	setne  al
  4021ed:	mov    edx,esi
  4021ef:	add    r13d,0x1
  4021f3:	mov    DWORD PTR [rsp+0x20],eax
  4021f7:	add    r15d,0x1
  4021fb:	call   0x4015b0
  402200:	mov    rax,QWORD PTR [rbx+0x18]
  402204:	test   rax,rax
  402207:	jne    0x4021c4
  402209:	jmp    0x401eb4
  40220e:	mov    rdx,QWORD PTR [rbx+0x18]
  402212:	test   rdx,rdx
  402215:	je     0x401eb4
  40221b:	xor    r14d,r14d
  40221e:	jmp    0x402117
  402223:	lea    r8,[rsp+0x88]
  40222b:	lea    rdx,[rip+0x5f6d]        # 0x40819f
  402232:	mov    rcx,r12
  402235:	lea    rsi,[rsp+0x98]
  40223d:	lea    rbx,[rsp+0x90]
  402245:	call   0x4031b8
  40224a:	mov    rbp,QWORD PTR [rsp+0x78]
  40224f:	jmp    0x402286
  402251:	lea    rdx,[rip+0x5f4f]        # 0x4081a7
  402258:	mov    r8,rbx
  40225b:	mov    rcx,rax
  40225e:	mov    r9,rsi
  402261:	call   0x4031b8
  402266:	mov    rcx,QWORD PTR [rsp+0x98]
  40226e:	call   0x403168
  402273:	mov    rdx,QWORD PTR [rsp+0x90]
  40227b:	mov    r8,rax
  40227e:	mov    rcx,rbp
  402281:	call   0x403328
  402286:	mov    rcx,QWORD PTR [rsp+0x88]
  40228e:	call   0x403190
  402293:	test   rax,rax
  402296:	jne    0x402251
  402298:	jmp    0x401c66
  40229d:	mov    rax,QWORD PTR [rdi+0x20]
  4022a1:	test   rax,rax
  4022a4:	je     0x401c6e
  4022aa:	xor    r15d,r15d
  4022ad:	cmp    QWORD PTR [rax],0x0
  4022b1:	lea    rdx,[rsp+0x98]
  4022b9:	mov    QWORD PTR [rsp+0x68],rdx
  4022be:	jne    0x4022db
  4022c0:	jmp    0x401c6e
  4022c5:	mov    edx,r12d
  4022c8:	cmp    QWORD PTR [rax+rdx*8],0x0
  4022cd:	lea    r15,[rdx*8+0x0]
  4022d5:	je     0x401c6e
  4022db:	lea    rcx,[rip+0x5edd]        # 0x4081bf
  4022e2:	call   0x403158
  4022e7:	mov    r13,rax
  4022ea:	mov    rax,QWORD PTR [rdi+0x20]
  4022ee:	mov    rdx,QWORD PTR [rdi+0x8]
  4022f2:	lea    rcx,[rip+0x5eca]        # 0x4081c3
  4022f9:	mov    rax,QWORD PTR [rax+r15*1]
  4022fd:	mov    r8,QWORD PTR [rax+0x8]
  402301:	call   0x403188
  402306:	mov    QWORD PTR [rsp+0x28],rax
  40230b:	lea    rax,[rip+0x5eb6]        # 0x4081c8
  402312:	lea    r9,[rip+0x5e5f]        # 0x408178
  402319:	mov    QWORD PTR [rsp+0x30],r13
  40231e:	mov    QWORD PTR [rsp+0x50],0x0
  402327:	mov    r8,rsi
  40232a:	mov    QWORD PTR [rsp+0x48],0x0
  402333:	mov    DWORD PTR [rsp+0x40],0xbb8
  40233b:	mov    rdx,rbx
  40233e:	mov    DWORD PTR [rsp+0x38],0x0
  402346:	mov    QWORD PTR [rsp+0x20],rax
  40234b:	mov    rcx,rbp
  40234e:	call   0x403108
  402353:	test   rax,rax
  402356:	mov    r13,rax
  402359:	je     0x4023a8
  40235b:	mov    r8,QWORD PTR [rsp+0x68]
  402360:	lea    rdx,[rip+0x5e58]        # 0x4081bf
  402367:	mov    rcx,rax
  40236a:	call   0x4031b8
  40236f:	mov    rcx,QWORD PTR [rsp+0x98]
  402377:	call   0x403168
  40237c:	mov    r14,rax
  40237f:	mov    rax,QWORD PTR [rdi+0x20]
  402383:	mov    rax,QWORD PTR [rax+r15*1]
  402387:	mov    rcx,QWORD PTR [rax+0x8]
  40238b:	call   0x403218
  402390:	mov    rcx,QWORD PTR [rsp+0x78]
  402395:	mov    rdx,rax
  402398:	mov    r8,r14
  40239b:	call   0x403328
  4023a0:	mov    rcx,r13
  4023a3:	call   0x403128
  4023a8:	mov    rax,QWORD PTR [rdi+0x20]
  4023ac:	add    r12d,0x1
  4023b0:	test   rax,rax
  4023b3:	jne    0x4022c5
  4023b9:	jmp    0x401c6e
  4023be:	xor    r15d,r15d
  4023c1:	jmp    0x4021b7
  4023c6:	lea    r9,[rip+0x66cc]        # 0x408a99
  4023cd:	lea    rdx,[rip+0x5e44]        # 0x408218
  4023d4:	lea    rcx,[rip+0x5e4a]        # 0x408225
  4023db:	mov    QWORD PTR [rsp+0x20],0x0
  4023e4:	mov    r8d,0x4c7
  4023ea:	call   0x403348
  4023ef:	nop
  4023f0:	push   r15
  4023f2:	push   r14
  4023f4:	push   r13
  4023f6:	push   r12
  4023f8:	push   rbp
  4023f9:	push   rdi
  4023fa:	push   rsi
  4023fb:	push   rbx
  4023fc:	sub    rsp,0x38
  402400:	mov    r14,QWORD PTR [r8+0x8]
  402404:	mov    rsi,QWORD PTR [rsp+0xa0]
  40240c:	mov    rbp,rcx
  40240f:	mov    r13,rdx
  402412:	mov    rbx,r8
  402415:	mov    edi,r9d
  402418:	mov    r12d,DWORD PTR [rsp+0xa8]
  402420:	mov    rax,QWORD PTR [r8+0x20]
  402424:	test   r14,r14
  402427:	je     0x402680
  40242d:	test   rax,rax
  402430:	je     0x4026c7
  402436:	mov    rcx,QWORD PTR [rax]
  402439:	test   rcx,rcx
  40243c:	je     0x4026c7
  402442:	xor    r15d,r15d
  402445:	jmp    0x40245c
  402447:	nop    WORD PTR [rax+rax*1+0x0]
  402450:	mov    edx,r15d
  402453:	mov    rcx,QWORD PTR [rax+rdx*8]
  402457:	test   rcx,rcx
  40245a:	je     0x402473
  40245c:	xor    r8d,r8d
  40245f:	mov    edx,edi
  402461:	add    r15d,0x1
  402465:	call   0x401530
  40246a:	mov    rax,QWORD PTR [rbx+0x20]
  40246e:	test   rax,rax
  402471:	jne    0x402450
  402473:	lea    r9,[rip+0x5dd5]        # 0x40824f
  40247a:	test   r14,r14
  40247d:	cmovne r9,r14
  402481:	lea    r8,[rip+0x5b78]        # 0x408000
  402488:	lea    rcx,[rip+0x5dca]        # 0x408259
  40248f:	mov    edx,edi
  402491:	call   0x403270
  402496:	cmp    QWORD PTR [rbx+0x10],0x0
  40249b:	je     0x4026a0
  4024a1:	lea    rcx,[rip+0x5dbc]        # 0x408264
  4024a8:	call   0x403270
  4024ad:	mov    rax,QWORD PTR [rbx+0x10]
  4024b1:	test   rax,rax
  4024b4:	je     0x402515
  4024b6:	mov    r8,QWORD PTR [rax]
  4024b9:	test   r8,r8
  4024bc:	je     0x402515
  4024be:	xor    r15d,r15d
  4024c1:	lea    r14d,[rdi+0x2]
  4024c5:	jmp    0x4024dc
  4024c7:	nop    WORD PTR [rax+rax*1+0x0]
  4024d0:	mov    edx,r15d
  4024d3:	mov    r8,QWORD PTR [rax+rdx*8]
  4024d7:	test   r8,r8
  4024da:	je     0x402515
  4024dc:	mov    edx,DWORD PTR [rip+0x9b6e]        # 0x40c050
  4024e2:	test   edx,edx
  4024e4:	je     0x4024f5
  4024e6:	mov    rdx,QWORD PTR [r8+0x20]
  4024ea:	test   rdx,rdx
  4024ed:	je     0x40250c
  4024ef:	cmp    QWORD PTR [rdx],0x0
  4024f3:	je     0x40250c
  4024f5:	mov    QWORD PTR [rsp+0x20],rsi
  4024fa:	mov    r9d,r14d
  4024fd:	mov    rdx,r13
  402500:	mov    rcx,rbp
  402503:	call   0x401b60
  402508:	mov    rax,QWORD PTR [rbx+0x10]
  40250c:	add    r15d,0x1
  402510:	test   rax,rax
  402513:	jne    0x4024d0
  402515:	mov    rax,QWORD PTR [rbx+0x18]
  402519:	test   rax,rax
  40251c:	je     0x4025e2
  402522:	mov    r8,QWORD PTR [rax]
  402525:	test   r8,r8
  402528:	je     0x4025e2
  40252e:	xor    r15d,r15d
  402531:	xor    r13d,r13d
  402534:	lea    r14d,[rdi+0x2]
  402538:	jmp    0x4025b3
  40253a:	nop    WORD PTR [rax+rax*1+0x0]
  402540:	mov    rcx,QWORD PTR [r8+0x8]
  402544:	call   0x4031b0
  402549:	test   eax,eax
  40254b:	je     0x402610
  402551:	mov    rax,QWORD PTR [rbx+0x18]
  402555:	mov    rax,QWORD PTR [rax+r15*1]
  402559:	mov    rcx,QWORD PTR [rax+0x8]
  40255d:	call   0x403218
  402562:	mov    rdx,rsi
  402565:	mov    rcx,rax
  402568:	mov    r15,rax
  40256b:	call   0x403230
  402570:	test   eax,eax
  402572:	jne    0x40263e
  402578:	lea    rcx,[rip+0x5ce9]        # 0x408268
  40257f:	mov    r8,rsi
  402582:	mov    rdx,r15
  402585:	call   0x403270
  40258a:	mov    rcx,r15
  40258d:	add    r13d,0x1
  402591:	call   0x403338
  402596:	mov    rax,QWORD PTR [rbx+0x18]
  40259a:	test   rax,rax
  40259d:	je     0x4025e2
  40259f:	mov    edx,r13d
  4025a2:	mov    r8,QWORD PTR [rax+rdx*8]
  4025a6:	lea    r15,[rdx*8+0x0]
  4025ae:	test   r8,r8
  4025b1:	je     0x4025e2
  4025b3:	test   r12d,r12d
  4025b6:	jne    0x402540
  4025b8:	xor    edx,edx
  4025ba:	xor    ecx,ecx
  4025bc:	mov    DWORD PTR [rsp+0x28],0x0
  4025c4:	mov    QWORD PTR [rsp+0x20],0x0
  4025cd:	mov    r9d,r14d
  4025d0:	add    r13d,0x1
  4025d4:	call   0x4023f0
  4025d9:	mov    rax,QWORD PTR [rbx+0x18]
  4025dd:	test   rax,rax
  4025e0:	jne    0x40259f
  4025e2:	lea    r8,[rip+0x5a17]        # 0x408000
  4025e9:	lea    rcx,[rip+0x5c0f]        # 0x4081ff
  4025f0:	mov    edx,edi
  4025f2:	add    rsp,0x38
  4025f6:	pop    rbx
  4025f7:	pop    rsi
  4025f8:	pop    rdi
  4025f9:	pop    rbp
  4025fa:	pop    r12
  4025fc:	pop    r13
  4025fe:	pop    r14
  402600:	pop    r15
  402602:	jmp    0x403270
  402607:	nop    WORD PTR [rax+rax*1+0x0]
  402610:	lea    rdx,[rip+0x5c85]        # 0x40829c
  402617:	mov    rcx,rsi
  40261a:	call   0x403220
  40261f:	test   eax,eax
  402621:	mov    rax,QWORD PTR [rbx+0x18]
  402625:	mov    rax,QWORD PTR [rax+r15*1]
  402629:	jne    0x402651
  40262b:	mov    rdx,QWORD PTR [rax+0x8]
  40262f:	lea    rcx,[rip+0x5c68]        # 0x40829e
  402636:	call   0x403210
  40263b:	mov    r15,rax
  40263e:	mov    r8d,r14d
  402641:	mov    rdx,r15
  402644:	mov    rcx,rbp
  402647:	call   0x4026e0
  40264c:	jmp    0x40258a
  402651:	mov    r8,QWORD PTR [rax+0x8]
  402655:	lea    rcx,[rip+0x5c46]        # 0x4082a2
  40265c:	mov    rdx,rsi
  40265f:	call   0x403210
  402664:	mov    r15,rax
  402667:	mov    r8d,r14d
  40266a:	mov    rcx,rbp
  40266d:	mov    rdx,r15
  402670:	call   0x4026e0
  402675:	jmp    0x40258a
  40267a:	nop    WORD PTR [rax+rax*1+0x0]
  402680:	test   rax,rax
  402683:	je     0x4026cf
  402685:	mov    rcx,QWORD PTR [rax]
  402688:	mov    r14,rsi
  40268b:	test   rcx,rcx
  40268e:	jne    0x402442
  402694:	jmp    0x402473
  402699:	nop    DWORD PTR [rax+0x0]
  4026a0:	cmp    QWORD PTR [rbx+0x18],0x0
  4026a5:	jne    0x4024a1
  4026ab:	lea    rcx,[rip+0x5bf6]        # 0x4082a8
  4026b2:	add    rsp,0x38
  4026b6:	pop    rbx
  4026b7:	pop    rsi
  4026b8:	pop    rdi
  4026b9:	pop    rbp
  4026ba:	pop    r12
  4026bc:	pop    r13
  4026be:	pop    r14
  4026c0:	pop    r15
  4026c2:	jmp    0x403270
  4026c7:	mov    r9,r14
  4026ca:	jmp    0x402481
  4026cf:	mov    r14,rsi
  4026d2:	jmp    0x402473
  4026d7:	nop    WORD PTR [rax+rax*1+0x0]
  4026e0:	push   r12
  4026e2:	push   rbp
  4026e3:	push   rdi
  4026e4:	push   rsi
  4026e5:	push   rbx
  4026e6:	sub    rsp,0x70
  4026ea:	mov    rdi,rcx
  4026ed:	lea    rcx,[rip+0x59f7]        # 0x4080eb
  4026f4:	mov    rbp,rdx
  4026f7:	mov    r12d,r8d
  4026fa:	mov    QWORD PTR [rsp+0x60],0x0
  402703:	lea    rsi,[rsp+0x60]
  402708:	call   0x403158
  40270d:	mov    rdx,QWORD PTR [rip+0x9954]        # 0x40c068
  402714:	mov    QWORD PTR [rsp+0x30],rax
  402719:	lea    rax,[rip+0x59f4]        # 0x408114
  402720:	lea    r9,[rip+0x59c9]        # 0x4080f0
  402727:	mov    QWORD PTR [rsp+0x50],rsi
  40272c:	mov    QWORD PTR [rsp+0x48],0x0
  402735:	mov    DWORD PTR [rsp+0x40],0xbb8
  40273d:	mov    DWORD PTR [rsp+0x38],0x0
  402745:	mov    r8,rbp
  402748:	mov    QWORD PTR [rsp+0x28],0x0
  402751:	mov    QWORD PTR [rsp+0x20],rax
  402756:	mov    rcx,rdi
  402759:	call   0x403108
  40275e:	test   rax,rax
  402761:	mov    rbx,rax
  402764:	je     0x402810
  40276a:	lea    r8,[rsp+0x68]
  40276f:	lea    rdx,[rip+0x59a9]        # 0x40811f
  402776:	mov    rcx,rax
  402779:	call   0x4031b8
  40277e:	mov    eax,DWORD PTR [rip+0x98d4]        # 0x40c058
  402784:	test   eax,eax
  402786:	jne    0x4027f0
  402788:	mov    rcx,QWORD PTR [rsp+0x68]
  40278d:	mov    rdx,rsi
  402790:	mov    QWORD PTR [rsp+0x60],0x0
  402799:	call   0x4030a0
  40279e:	test   rax,rax
  4027a1:	mov    rsi,rax
  4027a4:	je     0x402850
  4027aa:	mov    eax,DWORD PTR [rip+0x98a4]        # 0x40c054
  4027b0:	mov    rdx,QWORD PTR [rip+0x98b1]        # 0x40c068
  4027b7:	mov    r8,rsi
  4027ba:	mov    r9d,r12d
  4027bd:	mov    rcx,rdi
  4027c0:	mov    QWORD PTR [rsp+0x20],rbp
  4027c5:	mov    DWORD PTR [rsp+0x28],eax
  4027c9:	call   0x4023f0
  4027ce:	mov    rcx,rsi
  4027d1:	mov    esi,0x1
  4027d6:	call   0x403098
  4027db:	mov    rcx,rbx
  4027de:	call   0x403128
  4027e3:	mov    eax,esi
  4027e5:	add    rsp,0x70
  4027e9:	pop    rbx
  4027ea:	pop    rsi
  4027eb:	pop    rdi
  4027ec:	pop    rbp
  4027ed:	pop    r12
  4027ef:	ret    
  4027f0:	mov    rdx,QWORD PTR [rsp+0x68]
  4027f5:	lea    rcx,[rip+0x5aae]        # 0x4082aa
  4027fc:	mov    esi,0x1
  402801:	call   0x403270
  402806:	jmp    0x4027db
  402808:	nop    DWORD PTR [rax+rax*1+0x0]
  402810:	mov    rax,QWORD PTR [rsp+0x60]
  402815:	lea    rcx,[rip+0x58a6]        # 0x4080c2
  40281c:	xor    esi,esi
  40281e:	mov    rbx,QWORD PTR [rax+0x8]
  402822:	call   0x403368
  402827:	mov    rcx,rax
  40282a:	mov    rdx,rbx
  40282d:	call   0x403268
  402832:	mov    rcx,QWORD PTR [rsp+0x60]
  402837:	call   0x403340
  40283c:	mov    eax,esi
  40283e:	add    rsp,0x70
  402842:	pop    rbx
  402843:	pop    rsi
  402844:	pop    rdi
  402845:	pop    rbp
  402846:	pop    r12
  402848:	ret    
  402849:	nop    DWORD PTR [rax+0x0]
  402850:	mov    rax,QWORD PTR [rsp+0x60]
  402855:	lea    rcx,[rip+0x58cc]        # 0x408128
  40285c:	mov    rsi,QWORD PTR [rax+0x8]
  402860:	call   0x403368
  402865:	mov    rcx,rax
  402868:	mov    rdx,rsi
  40286b:	xor    esi,esi
  40286d:	call   0x403268
  402872:	mov    rcx,QWORD PTR [rsp+0x60]
  402877:	call   0x403340
  40287c:	jmp    0x4027db
  402881:	nop    DWORD PTR [rax+rax*1+0x0]
  402886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402890:	push   rbx
  402891:	sub    rsp,0x20
  402895:	mov    rbx,rcx
  402898:	lea    rcx,[rip+0x5a11]        # 0x4082b0
  40289f:	call   0x403270
  4028a4:	mov    edx,DWORD PTR [rip+0x978e]        # 0x40c038
  4028aa:	test   edx,edx
  4028ac:	je     0x4028c0
  4028ae:	mov    rcx,rbx
  4028b1:	call   0x4030d8
  4028b6:	mov    DWORD PTR [rip+0x9778],0x0        # 0x40c038
  4028c0:	add    rsp,0x20
  4028c4:	pop    rbx
  4028c5:	ret    
  4028c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028d0:	push   rbp
  4028d1:	push   rdi
  4028d2:	push   rsi
  4028d3:	push   rbx
  4028d4:	sub    rsp,0x28
  4028d8:	mov    rdi,rcx
  4028db:	lea    rcx,[rip+0x59f2]        # 0x4082d4
  4028e2:	mov    rsi,rdx
  4028e5:	mov    ebp,r8d
  4028e8:	call   0x403368
  4028ed:	mov    rcx,rax
  4028f0:	call   0x4032c0
  4028f5:	xor    edx,edx
  4028f7:	mov    rbx,rax
  4028fa:	mov    rcx,rax
  4028fd:	call   0x4032a8
  402902:	xor    r9d,r9d
  402905:	mov    r8,rsi
  402908:	mov    rdx,rdi
  40290b:	mov    rcx,rbx
  40290e:	call   0x4032b8
  402913:	mov    rax,QWORD PTR [rsi]
  402916:	mov    rcx,QWORD PTR [rax]
  402919:	call   0x403278
  40291e:	lea    rcx,[rip+0x59bb]        # 0x4082e0
  402925:	mov    rdi,rax
  402928:	call   0x403368
  40292d:	mov    rdx,rdi
  402930:	mov    rcx,rax
  402933:	call   0x403210
  402938:	mov    rcx,rdi
  40293b:	mov    rsi,rax
  40293e:	call   0x403338
  402943:	mov    rdx,rsi
  402946:	mov    rcx,rbx
  402949:	call   0x4032b0
  40294e:	mov    rcx,rsi
  402951:	call   0x403338
  402956:	xor    edx,edx
  402958:	xor    r8d,r8d
  40295b:	mov    rcx,rbx
  40295e:	call   0x4032c8
  402963:	test   ebp,ebp
  402965:	mov    rsi,rax
  402968:	mov    rdx,rax
  40296b:	lea    rcx,[rip+0x5938]        # 0x4082aa
  402972:	jne    0x402991
  402974:	call   0x403268
  402979:	mov    rcx,rsi
  40297c:	call   0x403338
  402981:	mov    rcx,rbx
  402984:	add    rsp,0x28
  402988:	pop    rbx
  402989:	pop    rsi
  40298a:	pop    rdi
  40298b:	pop    rbp
  40298c:	jmp    0x4032d0
  402991:	call   0x403270
  402996:	jmp    0x402979
  402998:	nop    DWORD PTR [rax+rax*1+0x0]
  4029a0:	push   rsi
  4029a1:	push   rbx
  4029a2:	mov    eax,edx
  4029a4:	mov    rdx,QWORD PTR [rip+0xac51]        # 0x40d5fc
  4029ab:	mov    rbx,rcx
  4029ae:	mov    r11,QWORD PTR [rdx]
  4029b1:	movsxd rdx,eax
  4029b4:	lea    rcx,[rcx+rdx*1]
  4029b8:	movzx  r9d,BYTE PTR [rcx]
  4029bc:	mov    r10,r9
  4029bf:	movzx  r9d,WORD PTR [r11+r9*2]
  4029c4:	and    r9w,0x100
  4029ca:	je     0x402a90
  4029d0:	cmp    eax,0x0
  4029d3:	jle    0x402a70
  4029d9:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x1]
  4029de:	test   BYTE PTR [r11+rcx*2+0x1],0x1
  4029e4:	jne    0x402a72
  4029ea:	sub    rdx,0x1
  4029ee:	jmp    0x4029f7
  4029f0:	test   eax,eax
  4029f2:	jle    0x402a0c
  4029f4:	mov    rdx,r10
  4029f7:	movzx  r9d,BYTE PTR [rbx+rdx*1-0x1]
  4029fd:	sub    eax,0x1
  402a00:	lea    r10,[rdx-0x1]
  402a04:	test   BYTE PTR [r11+r9*2+0x1],0x1
  402a0a:	je     0x4029f0
  402a0c:	lea    rcx,[rbx+rdx*1]
  402a10:	movzx  edx,BYTE PTR [rcx]
  402a13:	movzx  r9d,WORD PTR [r11+rdx*2]
  402a18:	mov    r10,rdx
  402a1b:	and    r9w,0x100
  402a21:	test   r9w,r9w
  402a25:	jne    0x402aaa
  402a2b:	test   r10b,r10b
  402a2e:	je     0x402aaa
  402a30:	movsxd rdx,eax
  402a33:	lea    r9,[rbx+rdx*1+0x1]
  402a38:	mov    edx,eax
  402a3a:	jmp    0x402a44
  402a3c:	nop    DWORD PTR [rax+0x0]
  402a40:	test   bl,bl
  402a42:	je     0x402a57
  402a44:	movzx  ebx,BYTE PTR [r9]
  402a48:	add    edx,0x1
  402a4b:	add    r9,0x1
  402a4f:	test   BYTE PTR [r11+rbx*2+0x1],0x1
  402a55:	je     0x402a40
  402a57:	sub    edx,eax
  402a59:	movsxd rdx,edx
  402a5c:	test   r8,r8
  402a5f:	je     0x402a64
  402a61:	mov    DWORD PTR [r8],eax
  402a64:	pop    rbx
  402a65:	pop    rsi
  402a66:	jmp    0x4031e0
  402a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a70:	jne    0x402aaa
  402a72:	test   r8,r8
  402a75:	je     0x402a7a
  402a77:	mov    DWORD PTR [r8],eax
  402a7a:	lea    rcx,[rip+0x557f]        # 0x408000
  402a81:	pop    rbx
  402a82:	pop    rsi
  402a83:	jmp    0x403218
  402a88:	nop    DWORD PTR [rax+rax*1+0x0]
  402a90:	movzx  esi,BYTE PTR [rbx+rdx*1-0x1]
  402a95:	test   BYTE PTR [r11+rsi*2+0x1],0x1
  402a9b:	jne    0x402a21
  402a9d:	test   eax,eax
  402a9f:	jg     0x4029ea
  402aa5:	jmp    0x402a21
  402aaa:	xor    edx,edx
  402aac:	jmp    0x402a5c
  402aae:	xchg   ax,ax
  402ab0:	sub    rsp,0x38
  402ab4:	mov    r10d,DWORD PTR [rdx]
  402ab7:	cmp    r10d,ecx
  402aba:	jge    0x402af0
  402abc:	lea    rax,[rip+0x5924]        # 0x4083e7
  402ac3:	lea    r9,[rip+0x5fdd]        # 0x408aa7
  402aca:	lea    rdx,[rip+0x5747]        # 0x408218
  402ad1:	lea    rcx,[rip+0x574d]        # 0x408225
  402ad8:	mov    r8d,0x4b
  402ade:	mov    QWORD PTR [rsp+0x20],rax
  402ae3:	call   0x403348
  402ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	mov    r9,QWORD PTR [r8]
  402af3:	movsxd rax,ecx
  402af6:	shl    rax,0x3
  402afa:	lea    rcx,[r9+rax*1]
  402afe:	cmp    QWORD PTR [rcx],0x0
  402b02:	je     0x402b28
  402b04:	add    rax,0x8
  402b08:	nop    DWORD PTR [rax+rax*1+0x0]
  402b10:	mov    r9,QWORD PTR [r9+rax*1]
  402b14:	mov    QWORD PTR [rcx],r9
  402b17:	mov    r9,QWORD PTR [r8]
  402b1a:	lea    rcx,[r9+rax*1]
  402b1e:	add    rax,0x8
  402b22:	cmp    QWORD PTR [rcx],0x0
  402b26:	jne    0x402b10
  402b28:	sub    r10d,0x1
  402b2c:	mov    QWORD PTR [rcx],0x0
  402b33:	mov    DWORD PTR [rdx],r10d
  402b36:	add    rsp,0x38
  402b3a:	ret    
  402b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b40:	push   rdi
  402b41:	push   rsi
  402b42:	push   rbx
  402b43:	sub    rsp,0x30
  402b47:	mov    rax,QWORD PTR [rdx]
  402b4a:	mov    rdi,rcx
  402b4d:	mov    rbx,rdx
  402b50:	mov    rdx,r8
  402b53:	mov    rsi,r8
  402b56:	mov    rcx,QWORD PTR [rax+0x8]
  402b5a:	call   0x403220
  402b5f:	test   eax,eax
  402b61:	je     0x402b8f
  402b63:	lea    rax,[rip+0x588e]        # 0x4083f8
  402b6a:	lea    r9,[rip+0x5f4f]        # 0x408ac0
  402b71:	lea    rdx,[rip+0x56a0]        # 0x408218
  402b78:	lea    rcx,[rip+0x56a6]        # 0x408225
  402b7f:	mov    r8d,0x7f
  402b85:	mov    QWORD PTR [rsp+0x20],rax
  402b8a:	call   0x403348
  402b8f:	mov    r8,rbx
  402b92:	mov    rdx,rdi
  402b95:	mov    ecx,0x1
  402b9a:	call   0x402ab0
  402b9f:	mov    rax,QWORD PTR [rbx]
  402ba2:	mov    rcx,QWORD PTR [rax]
  402ba5:	call   0x403278
  402baa:	mov    rdi,rax
  402bad:	mov    rax,QWORD PTR [rbx]
  402bb0:	lea    rcx,[rip+0x5866]        # 0x40841d
  402bb7:	mov    r8,rsi
  402bba:	mov    rdx,QWORD PTR [rax]
  402bbd:	call   0x403210
  402bc2:	mov    rdx,QWORD PTR [rbx]
  402bc5:	mov    rcx,rdi
  402bc8:	mov    QWORD PTR [rdx],rax
  402bcb:	add    rsp,0x30
  402bcf:	pop    rbx
  402bd0:	pop    rsi
  402bd1:	pop    rdi
  402bd2:	jmp    0x403338
  402bd7:	nop    WORD PTR [rax+rax*1+0x0]
  402be0:	push   r13
  402be2:	push   r12
  402be4:	push   rbp
  402be5:	push   rdi
  402be6:	push   rsi
  402be7:	push   rbx
  402be8:	sub    rsp,0x78
  402bec:	mov    r13,rcx
  402bef:	mov    rcx,rdx
  402bf2:	mov    r12,rdx
  402bf5:	mov    rbp,r8
  402bf8:	call   0x4030b8
  402bfd:	test   eax,eax
  402bff:	je     0x402d90
  402c05:	lea    rcx,[rip+0x54df]        # 0x4080eb
  402c0c:	mov    QWORD PTR [rsp+0x60],0x0
  402c15:	lea    rsi,[rsp+0x60]
  402c1a:	call   0x403158
  402c1f:	mov    QWORD PTR [rsp+0x30],rax
  402c24:	lea    rax,[rip+0x54e9]        # 0x408114
  402c2b:	lea    r9,[rip+0x54be]        # 0x4080f0
  402c32:	mov    QWORD PTR [rsp+0x50],rsi
  402c37:	mov    QWORD PTR [rsp+0x48],0x0
  402c40:	mov    r8,rbp
  402c43:	mov    DWORD PTR [rsp+0x40],0xbb8
  402c4b:	mov    DWORD PTR [rsp+0x38],0x0
  402c53:	mov    rdx,r12
  402c56:	mov    QWORD PTR [rsp+0x28],0x0
  402c5f:	mov    QWORD PTR [rsp+0x20],rax
  402c64:	mov    rcx,r13
  402c67:	call   0x403108
  402c6c:	test   rax,rax
  402c6f:	mov    rbx,rax
  402c72:	je     0x402db5
  402c78:	lea    r8,[rsp+0x68]
  402c7d:	lea    rdx,[rip+0x549b]        # 0x40811f
  402c84:	mov    rcx,rax
  402c87:	call   0x4031b8
  402c8c:	mov    rcx,QWORD PTR [rsp+0x68]
  402c91:	mov    rdx,rsi
  402c94:	mov    QWORD PTR [rsp+0x60],0x0
  402c9d:	call   0x4030a0
  402ca2:	mov    rcx,rbx
  402ca5:	mov    rdi,rax
  402ca8:	call   0x403128
  402cad:	test   rdi,rdi
  402cb0:	je     0x402de1
  402cb6:	cmp    QWORD PTR [rdi+0x10],0x0
  402cbb:	je     0x402ccc
  402cbd:	lea    rcx,[rip+0x5420]        # 0x4080e4
  402cc4:	mov    rdx,rbp
  402cc7:	call   0x403270
  402ccc:	mov    rax,QWORD PTR [rdi+0x18]
  402cd0:	test   rax,rax
  402cd3:	je     0x402d70
  402cd9:	cmp    QWORD PTR [rax],0x0
  402cdd:	je     0x402d70
  402ce3:	xor    ebx,ebx
  402ce5:	xor    esi,esi
  402ce7:	jmp    0x402d37
  402ce9:	nop    DWORD PTR [rax+0x0]
  402cf0:	mov    rdx,QWORD PTR [rax+0x8]
  402cf4:	lea    rcx,[rip+0x55a3]        # 0x40829e
  402cfb:	call   0x403210
  402d00:	mov    rsi,rax
  402d03:	mov    r8,rsi
  402d06:	mov    rdx,r12
  402d09:	mov    rcx,r13
  402d0c:	call   0x402be0
  402d11:	mov    rcx,rsi
  402d14:	add    ebx,0x1
  402d17:	call   0x403338
  402d1c:	mov    r9,QWORD PTR [rdi+0x18]
  402d20:	test   r9,r9
  402d23:	je     0x402d70
  402d25:	mov    r10d,ebx
  402d28:	cmp    QWORD PTR [r9+r10*8],0x0
  402d2d:	lea    rsi,[r10*8+0x0]
  402d35:	je     0x402d70
  402d37:	lea    rdx,[rip+0x555e]        # 0x40829c
  402d3e:	mov    rcx,rbp
  402d41:	call   0x403220
  402d46:	test   eax,eax
  402d48:	mov    rax,QWORD PTR [rdi+0x18]
  402d4c:	mov    rax,QWORD PTR [rax+rsi*1]
  402d50:	je     0x402cf0
  402d52:	mov    r8,QWORD PTR [rax+0x8]
  402d56:	lea    rcx,[rip+0x5545]        # 0x4082a2
  402d5d:	mov    rdx,rbp
  402d60:	call   0x403210
  402d65:	mov    rsi,rax
  402d68:	jmp    0x402d03
  402d6a:	nop    WORD PTR [rax+rax*1+0x0]
  402d70:	mov    rcx,rdi
  402d73:	call   0x403098
  402d78:	nop
  402d79:	add    rsp,0x78
  402d7d:	pop    rbx
  402d7e:	pop    rsi
  402d7f:	pop    rdi
  402d80:	pop    rbp
  402d81:	pop    r12
  402d83:	pop    r13
  402d85:	ret    
  402d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d90:	lea    rcx,[rip+0x5691]        # 0x408428
  402d97:	call   0x403368
  402d9c:	mov    rdx,r12
  402d9f:	mov    rcx,rax
  402da2:	call   0x403268
  402da7:	nop
  402da8:	add    rsp,0x78
  402dac:	pop    rbx
  402dad:	pop    rsi
  402dae:	pop    rdi
  402daf:	pop    rbp
  402db0:	pop    r12
  402db2:	pop    r13
  402db4:	ret    
  402db5:	mov    rax,QWORD PTR [rsp+0x60]
  402dba:	lea    rcx,[rip+0x5301]        # 0x4080c2
  402dc1:	mov    rbx,QWORD PTR [rax+0x8]
  402dc5:	call   0x403368
  402dca:	mov    rdx,rbx
  402dcd:	mov    rcx,rax
  402dd0:	call   0x403268
  402dd5:	mov    rcx,QWORD PTR [rsp+0x60]
  402dda:	call   0x403340
  402ddf:	jmp    0x402d79
  402de1:	mov    rax,QWORD PTR [rsp+0x60]
  402de6:	lea    rcx,[rip+0x533b]        # 0x408128
  402ded:	mov    rbx,QWORD PTR [rax+0x8]
  402df1:	jmp    0x402dc5
  402df3:	nop    DWORD PTR [rax]
  402df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e00:	push   rsi
  402e01:	push   rbx
  402e02:	sub    rsp,0x58
  402e06:	mov    rsi,rcx
  402e09:	lea    rcx,[rip+0x5637]        # 0x408447
  402e10:	mov    rbx,r8
  402e13:	call   0x403270
  402e18:	mov    eax,DWORD PTR [rip+0x921a]        # 0x40c038
  402e1e:	test   eax,eax
  402e20:	je     0x402e50
  402e22:	lea    rax,[rip+0x563a]        # 0x408463
  402e29:	lea    r9,[rip+0x5c50]        # 0x408a80
  402e30:	lea    rdx,[rip+0x53e1]        # 0x408218
  402e37:	lea    rcx,[rip+0x53e7]        # 0x408225
  402e3e:	mov    r8d,0x6af
  402e44:	mov    QWORD PTR [rsp+0x20],rax
  402e49:	call   0x403348
  402e4e:	xchg   ax,ax
  402e50:	lea    rax,[rip+0xffffffffffffe889]        # 0x4016e0
  402e57:	mov    QWORD PTR [rsp+0x48],0x0
  402e60:	mov    QWORD PTR [rsp+0x40],0x0
  402e69:	mov    DWORD PTR [rsp+0x30],0x0
  402e71:	mov    QWORD PTR [rsp+0x28],0x0
  402e7a:	xor    r9d,r9d
  402e7d:	mov    QWORD PTR [rsp+0x38],rax
  402e82:	mov    rax,QWORD PTR [rip+0x91b7]        # 0x40c040
  402e89:	xor    r8d,r8d
  402e8c:	mov    rdx,rbx
  402e8f:	mov    rcx,rsi
  402e92:	mov    QWORD PTR [rsp+0x20],rax
  402e97:	call   0x4030e0
  402e9c:	mov    DWORD PTR [rip+0x9196],eax        # 0x40c038
  402ea2:	add    rsp,0x58
  402ea6:	pop    rbx
  402ea7:	pop    rsi
  402ea8:	ret    
  402ea9:	nop    DWORD PTR [rax+0x0]
  402eb0:	push   rsi
  402eb1:	push   rbx
  402eb2:	sub    rsp,0x38
  402eb6:	mov    eax,DWORD PTR [rip+0x91f0]        # 0x40c0ac
  402ebc:	mov    rbx,rcx
  402ebf:	test   eax,eax
  402ec1:	jne    0x402f3e
  402ec3:	cmp    DWORD PTR [rip+0x91de],0x0        # 0x40c0a8
  402eca:	jne    0x402f00
  402ecc:	cmp    QWORD PTR [rip+0x91cc],0x0        # 0x40c0a0
  402ed4:	lea    rcx,[rip+0x55a5]        # 0x408480
  402edb:	je     0x402f1d
  402edd:	mov    rcx,QWORD PTR [rip+0x91bc]        # 0x40c0a0
  402ee4:	mov    QWORD PTR [rsp+0x20],rbx
  402ee9:	xor    r9d,r9d
  402eec:	xor    r8d,r8d
  402eef:	mov    edx,0x1
  402ef4:	call   0x4030e8
  402ef9:	add    rsp,0x38
  402efd:	pop    rbx
  402efe:	pop    rsi
  402eff:	ret    
  402f00:	cmp    QWORD PTR [rip+0x9198],0x0        # 0x40c0a0
  402f08:	jne    0x402f16
  402f0a:	mov    r8,rbx
  402f0d:	xor    edx,edx
  402f0f:	mov    ecx,0x2
  402f14:	jmp    0x402f5b
  402f16:	lea    rcx,[rip+0x558b]        # 0x4084a8
  402f1d:	call   0x403368
  402f22:	mov    rsi,rax
  402f25:	call   0x403090
  402f2a:	mov    r9,rsi
  402f2d:	mov    edx,eax
  402f2f:	xor    r8d,r8d
  402f32:	mov    rcx,rbx
  402f35:	call   0x403248
  402f3a:	xor    eax,eax
  402f3c:	jmp    0x402ef9
  402f3e:	cmp    DWORD PTR [rip+0x9163],0x0        # 0x40c0a8
  402f45:	jne    0x402f16
  402f47:	cmp    QWORD PTR [rip+0x9151],0x0        # 0x40c0a0
  402f4f:	jne    0x402f16
  402f51:	mov    r8,rcx
  402f54:	xor    edx,edx
  402f56:	mov    ecx,0x1
  402f5b:	add    rsp,0x38
  402f5f:	pop    rbx
  402f60:	pop    rsi
  402f61:	jmp    0x403118
  402f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f70:	push   r12
  402f72:	push   rbp
  402f73:	push   rdi
  402f74:	push   rsi
  402f75:	push   rbx
  402f76:	sub    rsp,0x30
  402f7a:	xor    esi,esi
  402f7c:	mov    rbp,rcx
  402f7f:	lea    rcx,[rip+0x554a]        # 0x4084d0
  402f86:	mov    rdi,rdx
  402f89:	mov    r12,r8
  402f8c:	call   0x4031e8
  402f91:	movsx  r8d,BYTE PTR [rdi]
  402f95:	mov    rbx,rax
  402f98:	test   r8b,r8b
  402f9b:	jne    0x402fc6
  402f9d:	jmp    0x402ffd
  402f9f:	nop
  402fa0:	mov    rcx,QWORD PTR [rbx]
  402fa3:	mov    QWORD PTR [rbx+0x8],r9
  402fa7:	mov    BYTE PTR [rcx+rdx*1],r8b
  402fab:	mov    rdx,QWORD PTR [rbx]
  402fae:	mov    rax,QWORD PTR [rbx+0x8]
  402fb2:	mov    BYTE PTR [rdx+rax*1],0x0
  402fb6:	lea    eax,[rsi+0x1]
  402fb9:	movsx  r8d,BYTE PTR [rdi+rax*1]
  402fbe:	mov    rsi,rax
  402fc1:	test   r8b,r8b
  402fc4:	je     0x402ffd
  402fc6:	cmp    r8b,0x22
  402fca:	je     0x403060
  402fd0:	mov    rdx,QWORD PTR [rbx+0x8]
  402fd4:	lea    r9,[rdx+0x1]
  402fd8:	cmp    r9,QWORD PTR [rbx+0x10]
  402fdc:	jb     0x402fa0
  402fde:	mov    rdx,0xffffffffffffffff
  402fe5:	mov    rcx,rbx
  402fe8:	call   0x4031f0
  402fed:	lea    eax,[rsi+0x1]
  402ff0:	movsx  r8d,BYTE PTR [rdi+rax*1]
  402ff5:	mov    rsi,rax
  402ff8:	test   r8b,r8b
  402ffb:	jne    0x402fc6
  402ffd:	mov    rax,QWORD PTR [rbx+0x8]
  403001:	lea    rdx,[rax+0x1]
  403005:	cmp    rdx,QWORD PTR [rbx+0x10]
  403009:	jae    0x403074
  40300b:	mov    rcx,QWORD PTR [rbx]
  40300e:	mov    QWORD PTR [rbx+0x8],rdx
  403012:	mov    BYTE PTR [rcx+rax*1],0x22
  403016:	mov    rdx,QWORD PTR [rbx]
  403019:	mov    rax,QWORD PTR [rbx+0x8]
  40301d:	mov    BYTE PTR [rdx+rax*1],0x0
  403021:	xor    edx,edx
  403023:	mov    rcx,rbx
  403026:	call   0x4031f8
  40302b:	xor    r9d,r9d
  40302e:	mov    rbx,rax
  403031:	xor    r8d,r8d
  403034:	mov    rdx,rax
  403037:	mov    rcx,rbp
  40303a:	mov    QWORD PTR [rsp+0x20],r12
  40303f:	call   0x403180
  403044:	mov    rcx,rbx
  403047:	mov    rsi,rax
  40304a:	call   0x403338
  40304f:	mov    rax,rsi
  403052:	add    rsp,0x30
  403056:	pop    rbx
  403057:	pop    rsi
  403058:	pop    rdi
  403059:	pop    rbp
  40305a:	pop    r12
  40305c:	ret    
  40305d:	nop    DWORD PTR [rax]
  403060:	lea    rdx,[rip+0x546b]        # 0x4084d2
  403067:	mov    rcx,rbx
  40306a:	call   0x403208
  40306f:	jmp    0x402fb6
  403074:	mov    r8d,0x22
  40307a:	mov    rdx,0xffffffffffffffff
  403081:	mov    rcx,rbx
  403084:	call   0x4031f0
  403089:	jmp    0x403021
  40308b:	nop
  40308c:	nop
  40308d:	nop
  40308e:	nop
  40308f:	nop
  403090:	jmp    QWORD PTR [rip+0xa54e]        # 0x40d5e4
  403096:	nop
  403097:	nop
  403098:	jmp    QWORD PTR [rip+0xa53e]        # 0x40d5dc
  40309e:	nop
  40309f:	nop
  4030a0:	jmp    QWORD PTR [rip+0xa52e]        # 0x40d5d4
  4030a6:	nop
  4030a7:	nop
  4030a8:	jmp    QWORD PTR [rip+0xa51e]        # 0x40d5cc
  4030ae:	nop
  4030af:	nop
  4030b0:	jmp    QWORD PTR [rip+0xa50e]        # 0x40d5c4
  4030b6:	nop
  4030b7:	nop
  4030b8:	jmp    QWORD PTR [rip+0xa4fe]        # 0x40d5bc
  4030be:	nop
  4030bf:	nop
  4030c0:	jmp    QWORD PTR [rip+0xa4ee]        # 0x40d5b4
  4030c6:	nop
  4030c7:	nop
  4030c8:	jmp    QWORD PTR [rip+0xa4de]        # 0x40d5ac
  4030ce:	nop
  4030cf:	nop
  4030d0:	jmp    QWORD PTR [rip+0xa4ce]        # 0x40d5a4
  4030d6:	nop
  4030d7:	nop
  4030d8:	jmp    QWORD PTR [rip+0xa4be]        # 0x40d59c
  4030de:	nop
  4030df:	nop
  4030e0:	jmp    QWORD PTR [rip+0xa4ae]        # 0x40d594
  4030e6:	nop
  4030e7:	nop
  4030e8:	jmp    QWORD PTR [rip+0xa49e]        # 0x40d58c
  4030ee:	nop
  4030ef:	nop
  4030f0:	jmp    QWORD PTR [rip+0xa48e]        # 0x40d584
  4030f6:	nop
  4030f7:	nop
  4030f8:	jmp    QWORD PTR [rip+0xa47e]        # 0x40d57c
  4030fe:	nop
  4030ff:	nop
  403100:	jmp    QWORD PTR [rip+0xa46e]        # 0x40d574
  403106:	nop
  403107:	nop
  403108:	jmp    QWORD PTR [rip+0xa45e]        # 0x40d56c
  40310e:	nop
  40310f:	nop
  403110:	jmp    QWORD PTR [rip+0xa44e]        # 0x40d564
  403116:	nop
  403117:	nop
  403118:	jmp    QWORD PTR [rip+0xa43e]        # 0x40d55c
  40311e:	nop
  40311f:	nop
  403120:	jmp    QWORD PTR [rip+0xa70e]        # 0x40d834
  403126:	nop
  403127:	nop
  403128:	jmp    QWORD PTR [rip+0xa6f6]        # 0x40d824
  40312e:	nop
  40312f:	nop
  403130:	jmp    QWORD PTR [rip+0xa6e6]        # 0x40d81c
  403136:	nop
  403137:	nop
  403138:	jmp    QWORD PTR [rip+0xa6d6]        # 0x40d814
  40313e:	nop
  40313f:	nop
  403140:	jmp    QWORD PTR [rip+0xa6c6]        # 0x40d80c
  403146:	nop
  403147:	nop
  403148:	jmp    QWORD PTR [rip+0xa6b6]        # 0x40d804
  40314e:	nop
  40314f:	nop
  403150:	jmp    QWORD PTR [rip+0xa6a6]        # 0x40d7fc
  403156:	nop
  403157:	nop
  403158:	jmp    QWORD PTR [rip+0xa696]        # 0x40d7f4
  40315e:	nop
  40315f:	nop
  403160:	jmp    QWORD PTR [rip+0xa686]        # 0x40d7ec
  403166:	nop
  403167:	nop
  403168:	jmp    QWORD PTR [rip+0xa676]        # 0x40d7e4
  40316e:	nop
  40316f:	nop
  403170:	jmp    QWORD PTR [rip+0xa666]        # 0x40d7dc
  403176:	nop
  403177:	nop
  403178:	jmp    QWORD PTR [rip+0xa656]        # 0x40d7d4
  40317e:	nop
  40317f:	nop
  403180:	jmp    QWORD PTR [rip+0xa646]        # 0x40d7cc
  403186:	nop
  403187:	nop
  403188:	jmp    QWORD PTR [rip+0xa636]        # 0x40d7c4
  40318e:	nop
  40318f:	nop
  403190:	jmp    QWORD PTR [rip+0xa626]        # 0x40d7bc
  403196:	nop
  403197:	nop
  403198:	jmp    QWORD PTR [rip+0xa616]        # 0x40d7b4
  40319e:	nop
  40319f:	nop
  4031a0:	jmp    QWORD PTR [rip+0xa606]        # 0x40d7ac
  4031a6:	nop
  4031a7:	nop
  4031a8:	jmp    QWORD PTR [rip+0xa5f6]        # 0x40d7a4
  4031ae:	nop
  4031af:	nop
  4031b0:	jmp    QWORD PTR [rip+0xa5e6]        # 0x40d79c
  4031b6:	nop
  4031b7:	nop
  4031b8:	jmp    QWORD PTR [rip+0xa5d6]        # 0x40d794
  4031be:	nop
  4031bf:	nop
  4031c0:	jmp    QWORD PTR [rip+0xa5c6]        # 0x40d78c
  4031c6:	nop
  4031c7:	nop
  4031c8:	jmp    QWORD PTR [rip+0xa5b6]        # 0x40d784
  4031ce:	nop
  4031cf:	nop
  4031d0:	jmp    QWORD PTR [rip+0xa5a6]        # 0x40d77c
  4031d6:	nop
  4031d7:	nop
  4031d8:	jmp    QWORD PTR [rip+0xa596]        # 0x40d774
  4031de:	nop
  4031df:	nop
  4031e0:	jmp    QWORD PTR [rip+0xa586]        # 0x40d76c
  4031e6:	nop
  4031e7:	nop
  4031e8:	jmp    QWORD PTR [rip+0xa576]        # 0x40d764
  4031ee:	nop
  4031ef:	nop
  4031f0:	jmp    QWORD PTR [rip+0xa566]        # 0x40d75c
  4031f6:	nop
  4031f7:	nop
  4031f8:	jmp    QWORD PTR [rip+0xa556]        # 0x40d754
  4031fe:	nop
  4031ff:	nop
  403200:	jmp    QWORD PTR [rip+0xa546]        # 0x40d74c
  403206:	nop
  403207:	nop
  403208:	jmp    QWORD PTR [rip+0xa536]        # 0x40d744
  40320e:	nop
  40320f:	nop
  403210:	jmp    QWORD PTR [rip+0xa526]        # 0x40d73c
  403216:	nop
  403217:	nop
  403218:	jmp    QWORD PTR [rip+0xa516]        # 0x40d734
  40321e:	nop
  40321f:	nop
  403220:	jmp    QWORD PTR [rip+0xa506]        # 0x40d72c
  403226:	nop
  403227:	nop
  403228:	jmp    QWORD PTR [rip+0xa4f6]        # 0x40d724
  40322e:	nop
  40322f:	nop
  403230:	jmp    QWORD PTR [rip+0xa4e6]        # 0x40d71c
  403236:	nop
  403237:	nop
  403238:	jmp    QWORD PTR [rip+0xa4d6]        # 0x40d714
  40323e:	nop
  40323f:	nop
  403240:	jmp    QWORD PTR [rip+0xa4c6]        # 0x40d70c
  403246:	nop
  403247:	nop
  403248:	jmp    QWORD PTR [rip+0xa4b6]        # 0x40d704
  40324e:	nop
  40324f:	nop
  403250:	jmp    QWORD PTR [rip+0xa4a6]        # 0x40d6fc
  403256:	nop
  403257:	nop
  403258:	jmp    QWORD PTR [rip+0xa496]        # 0x40d6f4
  40325e:	nop
  40325f:	nop
  403260:	jmp    QWORD PTR [rip+0xa486]        # 0x40d6ec
  403266:	nop
  403267:	nop
  403268:	jmp    QWORD PTR [rip+0xa476]        # 0x40d6e4
  40326e:	nop
  40326f:	nop
  403270:	jmp    QWORD PTR [rip+0xa466]        # 0x40d6dc
  403276:	nop
  403277:	nop
  403278:	jmp    QWORD PTR [rip+0xa456]        # 0x40d6d4
  40327e:	nop
  40327f:	nop
  403280:	jmp    QWORD PTR [rip+0xa446]        # 0x40d6cc
  403286:	nop
  403287:	nop
  403288:	jmp    QWORD PTR [rip+0xa436]        # 0x40d6c4
  40328e:	nop
  40328f:	nop
  403290:	jmp    QWORD PTR [rip+0xa426]        # 0x40d6bc
  403296:	nop
  403297:	nop
  403298:	jmp    QWORD PTR [rip+0xa416]        # 0x40d6b4
  40329e:	nop
  40329f:	nop
  4032a0:	jmp    QWORD PTR [rip+0xa406]        # 0x40d6ac
  4032a6:	nop
  4032a7:	nop
  4032a8:	jmp    QWORD PTR [rip+0xa3f6]        # 0x40d6a4
  4032ae:	nop
  4032af:	nop
  4032b0:	jmp    QWORD PTR [rip+0xa3e6]        # 0x40d69c
  4032b6:	nop
  4032b7:	nop
  4032b8:	jmp    QWORD PTR [rip+0xa3d6]        # 0x40d694
  4032be:	nop
  4032bf:	nop
  4032c0:	jmp    QWORD PTR [rip+0xa3c6]        # 0x40d68c
  4032c6:	nop
  4032c7:	nop
  4032c8:	jmp    QWORD PTR [rip+0xa3b6]        # 0x40d684
  4032ce:	nop
  4032cf:	nop
  4032d0:	jmp    QWORD PTR [rip+0xa3a6]        # 0x40d67c
  4032d6:	nop
  4032d7:	nop
  4032d8:	jmp    QWORD PTR [rip+0xa396]        # 0x40d674
  4032de:	nop
  4032df:	nop
  4032e0:	jmp    QWORD PTR [rip+0xa386]        # 0x40d66c
  4032e6:	nop
  4032e7:	nop
  4032e8:	jmp    QWORD PTR [rip+0xa376]        # 0x40d664
  4032ee:	nop
  4032ef:	nop
  4032f0:	jmp    QWORD PTR [rip+0xa366]        # 0x40d65c
  4032f6:	nop
  4032f7:	nop
  4032f8:	jmp    QWORD PTR [rip+0xa356]        # 0x40d654
  4032fe:	nop
  4032ff:	nop
  403300:	jmp    QWORD PTR [rip+0xa346]        # 0x40d64c
  403306:	nop
  403307:	nop
  403308:	jmp    QWORD PTR [rip+0xa336]        # 0x40d644
  40330e:	nop
  40330f:	nop
  403310:	jmp    QWORD PTR [rip+0xa326]        # 0x40d63c
  403316:	nop
  403317:	nop
  403318:	jmp    QWORD PTR [rip+0xa316]        # 0x40d634
  40331e:	nop
  40331f:	nop
  403320:	jmp    QWORD PTR [rip+0xa306]        # 0x40d62c
  403326:	nop
  403327:	nop
  403328:	jmp    QWORD PTR [rip+0xa2f6]        # 0x40d624
  40332e:	nop
  40332f:	nop
  403330:	jmp    QWORD PTR [rip+0xa2e6]        # 0x40d61c
  403336:	nop
  403337:	nop
  403338:	jmp    QWORD PTR [rip+0xa2d6]        # 0x40d614
  40333e:	nop
  40333f:	nop
  403340:	jmp    QWORD PTR [rip+0xa2c6]        # 0x40d60c
  403346:	nop
  403347:	nop
  403348:	jmp    QWORD PTR [rip+0xa2b6]        # 0x40d604
  40334e:	nop
  40334f:	nop
  403350:	jmp    QWORD PTR [rip+0xa29e]        # 0x40d5f4
  403356:	nop
  403357:	nop
  403358:	jmp    QWORD PTR [rip+0xa506]        # 0x40d864
  40335e:	nop
  40335f:	nop
  403360:	jmp    QWORD PTR [rip+0xa4f6]        # 0x40d85c
  403366:	nop
  403367:	nop
  403368:	jmp    QWORD PTR [rip+0xa4e6]        # 0x40d854
  40336e:	nop
  40336f:	nop
  403370:	jmp    QWORD PTR [rip+0xa4d6]        # 0x40d84c
  403376:	nop
  403377:	nop
  403378:	jmp    QWORD PTR [rip+0xa4c6]        # 0x40d844
  40337e:	nop
  40337f:	nop
  403380:	push   rbx
  403381:	sub    rsp,0x30
  403385:	mov    rbx,rcx
  403388:	mov    rcx,QWORD PTR [rip+0x9701]        # 0x40ca90
  40338f:	call   0x403930
  403394:	cmp    rax,0xffffffffffffffff
  403398:	mov    QWORD PTR [rsp+0x20],rax
  40339d:	je     0x403415
  40339f:	mov    ecx,0x8
  4033a4:	call   0x404960
  4033a9:	mov    rcx,QWORD PTR [rip+0x96e0]        # 0x40ca90
  4033b0:	call   0x403930
  4033b5:	mov    rcx,QWORD PTR [rip+0x96dc]        # 0x40ca98
  4033bc:	mov    QWORD PTR [rsp+0x20],rax
  4033c1:	call   0x403930
  4033c6:	lea    rdx,[rsp+0x20]
  4033cb:	lea    r8,[rsp+0x28]
  4033d0:	mov    rcx,rbx
  4033d3:	mov    QWORD PTR [rsp+0x28],rax
  4033d8:	call   0x4049a8
  4033dd:	mov    rcx,QWORD PTR [rsp+0x20]
  4033e2:	mov    rbx,rax
  4033e5:	call   0x403940
  4033ea:	mov    rcx,QWORD PTR [rsp+0x28]
  4033ef:	mov    QWORD PTR [rip+0x969a],rax        # 0x40ca90
  4033f6:	call   0x403940
  4033fb:	mov    ecx,0x8
  403400:	mov    QWORD PTR [rip+0x9691],rax        # 0x40ca98
  403407:	call   0x404950
  40340c:	mov    rax,rbx
  40340f:	add    rsp,0x30
  403413:	pop    rbx
  403414:	ret    
  403415:	mov    rax,QWORD PTR [rip+0x60c4]        # 0x4094e0
  40341c:	mov    rcx,rbx
  40341f:	call   QWORD PTR [rax]
  403421:	add    rsp,0x30
  403425:	pop    rbx
  403426:	ret    
  403427:	nop    WORD PTR [rax+rax*1+0x0]
  403430:	sub    rsp,0x28
  403434:	call   0x403380
  403439:	test   rax,rax
  40343c:	sete   al
  40343f:	movzx  eax,al
  403442:	neg    eax
  403444:	add    rsp,0x28
  403448:	ret    
  403449:	nop
  40344a:	nop
  40344b:	nop
  40344c:	nop
  40344d:	nop
  40344e:	nop
  40344f:	nop
  403450:	sub    rsp,0x28
  403454:	mov    rax,QWORD PTR [rip+0x3bc5]        # 0x407020
  40345b:	mov    rax,QWORD PTR [rax]
  40345e:	test   rax,rax
  403461:	je     0x403480
  403463:	call   rax
  403465:	mov    rax,QWORD PTR [rip+0x3bb4]        # 0x407020
  40346c:	lea    rdx,[rax+0x8]
  403470:	mov    rax,QWORD PTR [rax+0x8]
  403474:	mov    QWORD PTR [rip+0x3ba5],rdx        # 0x407020
  40347b:	test   rax,rax
  40347e:	jne    0x403463
  403480:	add    rsp,0x28
  403484:	ret    
  403485:	nop
  403486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403490:	push   rsi
  403491:	push   rbx
  403492:	sub    rsp,0x28
  403496:	mov    rsi,QWORD PTR [rip+0x5fc3]        # 0x409460
  40349d:	mov    rax,QWORD PTR [rsi]
  4034a0:	cmp    eax,0xffffffff
  4034a3:	mov    ebx,eax
  4034a5:	je     0x4034d0
  4034a7:	test   ebx,ebx
  4034a9:	je     0x4034ba
  4034ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4034b0:	mov    eax,ebx
  4034b2:	call   QWORD PTR [rsi+rax*8]
  4034b5:	sub    ebx,0x1
  4034b8:	jne    0x4034b0
  4034ba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x403450
  4034c1:	add    rsp,0x28
  4034c5:	pop    rbx
  4034c6:	pop    rsi
  4034c7:	jmp    0x403430
  4034cc:	nop    DWORD PTR [rax+0x0]
  4034d0:	xor    ebx,ebx
  4034d2:	jmp    0x4034d6
  4034d4:	mov    ebx,eax
  4034d6:	lea    edx,[rbx+0x1]
  4034d9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4034de:	mov    rax,rdx
  4034e1:	jne    0x4034d4
  4034e3:	jmp    0x4034a7
  4034e5:	nop
  4034e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034f0:	mov    eax,DWORD PTR [rip+0x8bba]        # 0x40c0b0
  4034f6:	test   eax,eax
  4034f8:	je     0x403500
  4034fa:	repz ret 
  4034fc:	nop    DWORD PTR [rax+0x0]
  403500:	mov    DWORD PTR [rip+0x8ba6],0x1        # 0x40c0b0
  40350a:	jmp    0x403490
  40350c:	nop
  40350d:	nop
  40350e:	nop
  40350f:	nop
  403510:	mov    rax,QWORD PTR [rip+0xa445]        # 0x40d95c
  403517:	rex.W jmp rax
  40351a:	nop
  40351b:	nop
  40351c:	nop
  40351d:	nop
  40351e:	nop
  40351f:	nop
  403520:	xor    eax,eax
  403522:	ret    
  403523:	nop
  403524:	nop
  403525:	nop
  403526:	nop
  403527:	nop
  403528:	nop
  403529:	nop
  40352a:	nop
  40352b:	nop
  40352c:	nop
  40352d:	nop
  40352e:	nop
  40352f:	nop
  403530:	push   r12
  403532:	push   rbp
  403533:	push   rdi
  403534:	push   rsi
  403535:	push   rbx
  403536:	sub    rsp,0x40
  40353a:	mov    rbx,QWORD PTR [rip+0x3b3f]        # 0x407080
  403541:	movabs rax,0x2b992ddfa232
  40354b:	mov    QWORD PTR [rsp+0x20],0x0
  403554:	cmp    rbx,rax
  403557:	je     0x403570
  403559:	not    rbx
  40355c:	mov    QWORD PTR [rip+0x3b2d],rbx        # 0x407090
  403563:	add    rsp,0x40
  403567:	pop    rbx
  403568:	pop    rsi
  403569:	pop    rdi
  40356a:	pop    rbp
  40356b:	pop    r12
  40356d:	ret    
  40356e:	xchg   ax,ax
  403570:	lea    rcx,[rsp+0x20]
  403575:	call   QWORD PTR [rip+0xa331]        # 0x40d8ac
  40357b:	mov    r12,QWORD PTR [rsp+0x20]
  403580:	call   QWORD PTR [rip+0xa306]        # 0x40d88c
  403586:	mov    ebp,eax
  403588:	call   QWORD PTR [rip+0xa306]        # 0x40d894
  40358e:	mov    edi,eax
  403590:	call   QWORD PTR [rip+0xa31e]        # 0x40d8b4
  403596:	lea    rcx,[rsp+0x30]
  40359b:	mov    esi,eax
  40359d:	call   QWORD PTR [rip+0xa329]        # 0x40d8cc
  4035a3:	xor    r12,QWORD PTR [rsp+0x30]
  4035a8:	mov    edx,edi
  4035aa:	movabs rax,0xffffffffffff
  4035b4:	xor    rbp,r12
  4035b7:	mov    rdi,rbp
  4035ba:	xor    rdi,rdx
  4035bd:	mov    edx,esi
  4035bf:	xor    rdi,rdx
  4035c2:	mov    rsi,rdi
  4035c5:	and    rsi,rax
  4035c8:	cmp    rsi,rbx
  4035cb:	je     0x4035f0
  4035cd:	mov    rax,rsi
  4035d0:	not    rax
  4035d3:	mov    QWORD PTR [rip+0x3aa6],rsi        # 0x407080
  4035da:	mov    QWORD PTR [rip+0x3aaf],rax        # 0x407090
  4035e1:	add    rsp,0x40
  4035e5:	pop    rbx
  4035e6:	pop    rsi
  4035e7:	pop    rdi
  4035e8:	pop    rbp
  4035e9:	pop    r12
  4035eb:	ret    
  4035ec:	nop    DWORD PTR [rax+0x0]
  4035f0:	movabs rax,0xffffd466d2205dcc
  4035fa:	movabs rsi,0x2b992ddfa233
  403604:	jmp    0x4035d3
  403606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403610:	push   rbp
  403611:	push   rsi
  403612:	push   rbx
  403613:	mov    rbp,rsp
  403616:	sub    rsp,0x70
  40361a:	mov    rsi,rcx
  40361d:	lea    rcx,[rip+0x8adc]        # 0x40c100
  403624:	call   QWORD PTR [rip+0xa2b2]        # 0x40d8dc
  40362a:	mov    rbx,QWORD PTR [rip+0x8bc7]        # 0x40c1f8
  403631:	xor    r8d,r8d
  403634:	lea    rdx,[rbp-0x28]
  403638:	mov    rcx,rbx
  40363b:	call   QWORD PTR [rip+0xa2a3]        # 0x40d8e4
  403641:	test   rax,rax
  403644:	mov    r9,rax
  403647:	je     0x4036f0
  40364d:	lea    rax,[rbp-0x20]
  403651:	mov    QWORD PTR [rsp+0x38],0x0
  40365a:	mov    r8,rbx
  40365d:	mov    rdx,QWORD PTR [rbp-0x28]
  403661:	xor    ecx,ecx
  403663:	mov    QWORD PTR [rsp+0x30],rax
  403668:	lea    rax,[rbp-0x18]
  40366c:	mov    QWORD PTR [rsp+0x28],rax
  403671:	lea    rax,[rip+0x8a88]        # 0x40c100
  403678:	mov    QWORD PTR [rsp+0x20],rax
  40367d:	call   QWORD PTR [rip+0xa269]        # 0x40d8ec
  403683:	mov    rax,QWORD PTR [rip+0x8b6e]        # 0x40c1f8
  40368a:	xor    ecx,ecx
  40368c:	mov    QWORD PTR [rip+0x8aed],rsi        # 0x40c180
  403693:	mov    DWORD PTR [rip+0x8f63],0xc0000409        # 0x40c600
  40369d:	mov    DWORD PTR [rip+0x8f5d],0x1        # 0x40c604
  4036a7:	mov    QWORD PTR [rip+0x8f62],rax        # 0x40c610
  4036ae:	mov    rax,QWORD PTR [rip+0x39cb]        # 0x407080
  4036b5:	mov    QWORD PTR [rbp-0x10],rax
  4036b9:	mov    rax,QWORD PTR [rip+0x39d0]        # 0x407090
  4036c0:	mov    QWORD PTR [rbp-0x8],rax
  4036c4:	call   QWORD PTR [rip+0xa22a]        # 0x40d8f4
  4036ca:	lea    rcx,[rip+0x5aef]        # 0x4091c0
  4036d1:	call   QWORD PTR [rip+0xa23d]        # 0x40d914
  4036d7:	call   QWORD PTR [rip+0xa1a7]        # 0x40d884
  4036dd:	mov    edx,0xc0000409
  4036e2:	mov    rcx,rax
  4036e5:	call   QWORD PTR [rip+0xa219]        # 0x40d904
  4036eb:	call   0x404948
  4036f0:	mov    rax,QWORD PTR [rbp+0x18]
  4036f4:	mov    QWORD PTR [rip+0x8afd],rax        # 0x40c1f8
  4036fb:	lea    rax,[rbp+0x8]
  4036ff:	mov    QWORD PTR [rip+0x8a92],rax        # 0x40c198
  403706:	jmp    0x403683
  40370b:	nop
  40370c:	nop
  40370d:	nop
  40370e:	nop
  40370f:	nop
  403710:	sub    rsp,0x28
  403714:	test   edx,edx
  403716:	je     0x403730
  403718:	cmp    edx,0x3
  40371b:	je     0x403730
  40371d:	mov    eax,0x1
  403722:	add    rsp,0x28
  403726:	ret    
  403727:	nop    WORD PTR [rax+rax*1+0x0]
  403730:	call   0x404420
  403735:	mov    eax,0x1
  40373a:	add    rsp,0x28
  40373e:	ret    
  40373f:	nop
  403740:	push   rsi
  403741:	push   rbx
  403742:	sub    rsp,0x28
  403746:	mov    rax,QWORD PTR [rip+0x5cf3]        # 0x409440
  40374d:	cmp    DWORD PTR [rax],0x2
  403750:	je     0x403758
  403752:	mov    DWORD PTR [rax],0x2
  403758:	cmp    edx,0x2
  40375b:	je     0x403770
  40375d:	cmp    edx,0x1
  403760:	je     0x4037a2
  403762:	mov    eax,0x1
  403767:	add    rsp,0x28
  40376b:	pop    rbx
  40376c:	pop    rsi
  40376d:	ret    
  40376e:	xchg   ax,ax
  403770:	lea    rbx,[rip+0xb8e9]        # 0x40f060
  403777:	lea    rsi,[rip+0xb8e2]        # 0x40f060
  40377e:	cmp    rbx,rsi
  403781:	je     0x403762
  403783:	mov    rax,QWORD PTR [rbx]
  403786:	test   rax,rax
  403789:	je     0x40378d
  40378b:	call   rax
  40378d:	add    rbx,0x8
  403791:	cmp    rbx,rsi
  403794:	jne    0x403783
  403796:	mov    eax,0x1
  40379b:	add    rsp,0x28
  40379f:	pop    rbx
  4037a0:	pop    rsi
  4037a1:	ret    
  4037a2:	call   0x404420
  4037a7:	jmp    0x403762
  4037a9:	nop    DWORD PTR [rax+0x0]
  4037b0:	xor    eax,eax
  4037b2:	ret    
  4037b3:	nop
  4037b4:	nop
  4037b5:	nop
  4037b6:	nop
  4037b7:	nop
  4037b8:	nop
  4037b9:	nop
  4037ba:	nop
  4037bb:	nop
  4037bc:	nop
  4037bd:	nop
  4037be:	nop
  4037bf:	nop
  4037c0:	sub    rsp,0x58
  4037c4:	mov    rax,QWORD PTR [rip+0x8f15]        # 0x40c6e0
  4037cb:	test   rax,rax
  4037ce:	je     0x4037fc
  4037d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4037d9:	mov    DWORD PTR [rsp+0x20],ecx
  4037dd:	lea    rcx,[rsp+0x20]
  4037e2:	mov    QWORD PTR [rsp+0x28],rdx
  4037e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4037ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4037f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4037f9:	call   rax
  4037fb:	nop
  4037fc:	add    rsp,0x58
  403800:	ret    
  403801:	nop    DWORD PTR [rax+rax*1+0x0]
  403806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403810:	mov    QWORD PTR [rip+0x8ec9],rcx        # 0x40c6e0
  403817:	jmp    0x404980
  40381c:	nop    DWORD PTR [rax+0x0]
  403820:	push   rsi
  403821:	push   rbx
  403822:	sub    rsp,0x78
  403826:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40382b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  403830:	movaps XMMWORD PTR [rsp+0x60],xmm8
  403836:	cmp    DWORD PTR [rcx],0x6
  403839:	ja     0x403910
  40383f:	mov    edx,DWORD PTR [rcx]
  403841:	lea    rax,[rip+0x5abc]        # 0x409304
  403848:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40384c:	add    rax,rdx
  40384f:	jmp    rax
  403851:	lea    rbx,[rip+0x5988]        # 0x4091e0
  403858:	nop    DWORD PTR [rax+rax*1+0x0]
  403860:	movsd  xmm8,QWORD PTR [rcx+0x20]
  403866:	mov    rsi,QWORD PTR [rcx+0x8]
  40386a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40386f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  403874:	call   0x404998
  403879:	movsd  QWORD PTR [rsp+0x30],xmm8
  403880:	lea    rcx,[rax+0x60]
  403884:	lea    rdx,[rip+0x5a4d]        # 0x4092d8
  40388b:	movsd  QWORD PTR [rsp+0x28],xmm7
  403891:	mov    r9,rsi
  403894:	mov    r8,rbx
  403897:	movsd  QWORD PTR [rsp+0x20],xmm6
  40389d:	call   0x404930
  4038a2:	nop
  4038a3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4038a8:	xor    eax,eax
  4038aa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4038af:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4038b5:	add    rsp,0x78
  4038b9:	pop    rbx
  4038ba:	pop    rsi
  4038bb:	ret    
  4038bc:	nop    DWORD PTR [rax+0x0]
  4038c0:	lea    rbx,[rip+0x5938]        # 0x4091ff
  4038c7:	jmp    0x403860
  4038c9:	nop    DWORD PTR [rax+0x0]
  4038d0:	lea    rbx,[rip+0x5949]        # 0x409220
  4038d7:	jmp    0x403860
  4038d9:	nop    DWORD PTR [rax+0x0]
  4038e0:	lea    rbx,[rip+0x59a9]        # 0x409290
  4038e7:	jmp    0x403860
  4038ec:	nop    DWORD PTR [rax+0x0]
  4038f0:	lea    rbx,[rip+0x5971]        # 0x409268
  4038f7:	jmp    0x403860
  4038fc:	nop    DWORD PTR [rax+0x0]
  403900:	lea    rbx,[rip+0x5939]        # 0x409240
  403907:	jmp    0x403860
  40390c:	nop    DWORD PTR [rax+0x0]
  403910:	lea    rbx,[rip+0x59af]        # 0x4092c6
  403917:	jmp    0x403860
  40391c:	nop
  40391d:	nop
  40391e:	nop
  40391f:	nop
  403920:	fninit 
  403922:	ret    
  403923:	nop
  403924:	nop
  403925:	nop
  403926:	nop
  403927:	nop
  403928:	nop
  403929:	nop
  40392a:	nop
  40392b:	nop
  40392c:	nop
  40392d:	nop
  40392e:	nop
  40392f:	nop
  403930:	mov    rax,rcx
  403933:	ret    
  403934:	xchg   ax,ax
  403936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403940:	mov    rax,rcx
  403943:	ret    
  403944:	nop
  403945:	nop
  403946:	nop
  403947:	nop
  403948:	nop
  403949:	nop
  40394a:	nop
  40394b:	nop
  40394c:	nop
  40394d:	nop
  40394e:	nop
  40394f:	nop
  403950:	push   rsi
  403951:	push   rbx
  403952:	sub    rsp,0x38
  403956:	lea    rax,[rsp+0x58]
  40395b:	mov    rbx,rcx
  40395e:	mov    QWORD PTR [rsp+0x58],rdx
  403963:	mov    QWORD PTR [rsp+0x60],r8
  403968:	mov    QWORD PTR [rsp+0x68],r9
  40396d:	mov    QWORD PTR [rsp+0x28],rax
  403972:	call   0x404998
  403977:	lea    rcx,[rip+0x59a2]        # 0x409320
  40397e:	lea    r9,[rax+0x60]
  403982:	mov    r8d,0x1b
  403988:	mov    edx,0x1
  40398d:	call   0x404920
  403992:	mov    rsi,QWORD PTR [rsp+0x28]
  403997:	call   0x404998
  40399c:	lea    rcx,[rax+0x60]
  4039a0:	mov    rdx,rbx
  4039a3:	mov    r8,rsi
  4039a6:	call   0x4048e0
  4039ab:	call   0x404948
  4039b0:	nop
  4039b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4039b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039c0:	push   r13
  4039c2:	push   r12
  4039c4:	push   rbp
  4039c5:	push   rdi
  4039c6:	push   rsi
  4039c7:	push   rbx
  4039c8:	sub    rsp,0x58
  4039cc:	movsxd rbp,DWORD PTR [rip+0x8d31]        # 0x40c704
  4039d3:	mov    rbx,rcx
  4039d6:	mov    rsi,rdx
  4039d9:	mov    rdi,r8
  4039dc:	test   ebp,ebp
  4039de:	jle    0x403ada
  4039e4:	mov    rax,QWORD PTR [rip+0x8d1d]        # 0x40c708
  4039eb:	xor    r9d,r9d
  4039ee:	add    rax,0x8
  4039f2:	mov    r10,QWORD PTR [rax]
  4039f5:	cmp    rbx,r10
  4039f8:	jb     0x403a0e
  4039fa:	mov    rdx,QWORD PTR [rax+0x8]
  4039fe:	mov    r11d,DWORD PTR [rdx+0x8]
  403a02:	add    r10,r11
  403a05:	cmp    rbx,r10
  403a08:	jb     0x403ac0
  403a0e:	add    r9d,0x1
  403a12:	add    rax,0x18
  403a16:	cmp    r9d,ebp
  403a19:	jne    0x4039f2
  403a1b:	mov    rcx,rbx
  403a1e:	call   0x404630
  403a23:	test   rax,rax
  403a26:	mov    r12,rax
  403a29:	je     0x403b12
  403a2f:	lea    rbp,[rbp+rbp*2+0x0]
  403a34:	shl    rbp,0x3
  403a38:	mov    r13,rbp
  403a3b:	add    r13,QWORD PTR [rip+0x8cc6]        # 0x40c708
  403a42:	mov    QWORD PTR [r13+0x10],rax
  403a46:	mov    DWORD PTR [r13+0x0],0x0
  403a4e:	call   0x404750
  403a53:	mov    edx,DWORD PTR [r12+0xc]
  403a58:	mov    r8d,0x30
  403a5e:	add    rax,rdx
  403a61:	lea    rdx,[rsp+0x20]
  403a66:	mov    QWORD PTR [r13+0x8],rax
  403a6a:	mov    rax,QWORD PTR [rip+0x8c97]        # 0x40c708
  403a71:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  403a76:	call   QWORD PTR [rip+0x9ea8]        # 0x40d924
  403a7c:	test   rax,rax
  403a7f:	je     0x403af5
  403a81:	mov    eax,DWORD PTR [rsp+0x44]
  403a85:	lea    edx,[rax-0x4]
  403a88:	and    edx,0xfffffffb
  403a8b:	je     0x403ab9
  403a8d:	sub    eax,0x40
  403a90:	and    eax,0xffffffbf
  403a93:	je     0x403ab9
  403a95:	mov    r9,rbp
  403a98:	add    r9,QWORD PTR [rip+0x8c69]        # 0x40c708
  403a9f:	mov    r8d,0x40
  403aa5:	mov    rdx,QWORD PTR [rsp+0x38]
  403aaa:	mov    rcx,QWORD PTR [rsp+0x20]
  403aaf:	call   QWORD PTR [rip+0x9e67]        # 0x40d91c
  403ab5:	test   eax,eax
  403ab7:	je     0x403ae1
  403ab9:	add    DWORD PTR [rip+0x8c44],0x1        # 0x40c704
  403ac0:	mov    r8,rdi
  403ac3:	mov    rdx,rsi
  403ac6:	mov    rcx,rbx
  403ac9:	add    rsp,0x58
  403acd:	pop    rbx
  403ace:	pop    rsi
  403acf:	pop    rdi
  403ad0:	pop    rbp
  403ad1:	pop    r12
  403ad3:	pop    r13
  403ad5:	jmp    0x404910
  403ada:	xor    ebp,ebp
  403adc:	jmp    0x403a1b
  403ae1:	call   QWORD PTR [rip+0x9db5]        # 0x40d89c
  403ae7:	lea    rcx,[rip+0x58aa]        # 0x409398
  403aee:	mov    edx,eax
  403af0:	call   0x403950
  403af5:	mov    rax,QWORD PTR [rip+0x8c0c]        # 0x40c708
  403afc:	mov    edx,DWORD PTR [r12+0x8]
  403b01:	lea    rcx,[rip+0x5858]        # 0x409360
  403b08:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  403b0d:	call   0x403950
  403b12:	lea    rcx,[rip+0x5827]        # 0x409340
  403b19:	mov    rdx,rbx
  403b1c:	call   0x403950
  403b21:	nop
  403b22:	nop    DWORD PTR [rax+0x0]
  403b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b30:	push   rbp
  403b31:	push   r14
  403b33:	push   r13
  403b35:	push   r12
  403b37:	push   rdi
  403b38:	push   rsi
  403b39:	push   rbx
  403b3a:	mov    rbp,rsp
  403b3d:	sub    rsp,0x60
  403b41:	mov    ebx,DWORD PTR [rip+0x8bb9]        # 0x40c700
  403b47:	test   ebx,ebx
  403b49:	je     0x403b60
  403b4b:	mov    rsp,rbp
  403b4e:	pop    rbx
  403b4f:	pop    rsi
  403b50:	pop    rdi
  403b51:	pop    r12
  403b53:	pop    r13
  403b55:	pop    r14
  403b57:	pop    rbp
  403b58:	ret    
  403b59:	nop    DWORD PTR [rax+0x0]
  403b60:	mov    DWORD PTR [rip+0x8b96],0x1        # 0x40c700
  403b6a:	call   0x404680
  403b6f:	cdqe   
  403b71:	lea    rax,[rax+rax*2]
  403b75:	lea    rax,[rax*8+0x1e]
  403b7d:	and    rax,0xfffffffffffffff0
  403b81:	call   0x4048a0
  403b86:	mov    rsi,QWORD PTR [rip+0x58e3]        # 0x409470
  403b8d:	mov    rbx,QWORD PTR [rip+0x58ec]        # 0x409480
  403b94:	sub    rsp,rax
  403b97:	mov    DWORD PTR [rip+0x8b63],0x0        # 0x40c704
  403ba1:	lea    rax,[rsp+0x20]
  403ba6:	mov    QWORD PTR [rip+0x8b5b],rax        # 0x40c708
  403bad:	mov    rax,rsi
  403bb0:	sub    rax,rbx
  403bb3:	cmp    rax,0x7
  403bb7:	jle    0x403b4b
  403bb9:	cmp    rax,0xb
  403bbd:	jle    0x403be5
  403bbf:	mov    r11d,DWORD PTR [rbx]
  403bc2:	test   r11d,r11d
  403bc5:	jne    0x403d10
  403bcb:	mov    r10d,DWORD PTR [rbx+0x4]
  403bcf:	test   r10d,r10d
  403bd2:	jne    0x403d10
  403bd8:	mov    r9d,DWORD PTR [rbx+0x8]
  403bdc:	test   r9d,r9d
  403bdf:	jne    0x403bfc
  403be1:	add    rbx,0xc
  403be5:	mov    r8d,DWORD PTR [rbx]
  403be8:	test   r8d,r8d
  403beb:	jne    0x403d10
  403bf1:	mov    ecx,DWORD PTR [rbx+0x4]
  403bf4:	test   ecx,ecx
  403bf6:	jne    0x403d10
  403bfc:	mov    edx,DWORD PTR [rbx+0x8]
  403bff:	cmp    edx,0x1
  403c02:	jne    0x403e1c
  403c08:	add    rbx,0xc
  403c0c:	cmp    rbx,rsi
  403c0f:	jae    0x403b4b
  403c15:	mov    r12,QWORD PTR [rip+0x5884]        # 0x4094a0
  403c1c:	lea    r13,[rbp-0x30]
  403c20:	movabs r14,0xffffffff00000000
  403c2a:	mov    ecx,DWORD PTR [rbx+0x4]
  403c2d:	mov    eax,DWORD PTR [rbx]
  403c2f:	movzx  edx,BYTE PTR [rbx+0x8]
  403c33:	add    rax,r12
  403c36:	add    rcx,r12
  403c39:	cmp    edx,0x10
  403c3c:	mov    r8,QWORD PTR [rax]
  403c3f:	je     0x403d86
  403c45:	jbe    0x403d4d
  403c4b:	cmp    edx,0x20
  403c4e:	je     0x403dcf
  403c54:	cmp    edx,0x40
  403c57:	jne    0x403dbb
  403c5d:	sub    r8,rax
  403c60:	mov    rdx,r13
  403c63:	mov    rdi,r13
  403c66:	mov    rax,r8
  403c69:	add    rax,QWORD PTR [rcx]
  403c6c:	mov    r8d,0x8
  403c72:	mov    QWORD PTR [rbp-0x30],rax
  403c76:	call   0x4039c0
  403c7b:	add    rbx,0xc
  403c7f:	cmp    rbx,rsi
  403c82:	jb     0x403c2a
  403c84:	mov    eax,DWORD PTR [rip+0x8a7a]        # 0x40c704
  403c8a:	xor    ebx,ebx
  403c8c:	xor    esi,esi
  403c8e:	test   eax,eax
  403c90:	jle    0x403b4b
  403c96:	mov    r14,QWORD PTR [rip+0x9c87]        # 0x40d924
  403c9d:	lea    r13,[rbp-0x34]
  403ca1:	mov    r12,QWORD PTR [rip+0x9c74]        # 0x40d91c
  403ca8:	jmp    0x403cc3
  403caa:	nop    WORD PTR [rax+rax*1+0x0]
  403cb0:	add    esi,0x1
  403cb3:	add    rbx,0x18
  403cb7:	cmp    esi,DWORD PTR [rip+0x8a47]        # 0x40c704
  403cbd:	jge    0x403b4b
  403cc3:	mov    rax,rbx
  403cc6:	add    rax,QWORD PTR [rip+0x8a3b]        # 0x40c708
  403ccd:	mov    edx,DWORD PTR [rax]
  403ccf:	test   edx,edx
  403cd1:	je     0x403cb0
  403cd3:	mov    rcx,QWORD PTR [rax+0x8]
  403cd7:	mov    r8d,0x30
  403cdd:	mov    rdx,rdi
  403ce0:	call   r14
  403ce3:	test   rax,rax
  403ce6:	je     0x403dfe
  403cec:	mov    rax,QWORD PTR [rip+0x8a15]        # 0x40c708
  403cf3:	mov    r9,r13
  403cf6:	mov    rdx,QWORD PTR [rbp-0x18]
  403cfa:	mov    rcx,QWORD PTR [rbp-0x30]
  403cfe:	mov    r8d,DWORD PTR [rax+rbx*1]
  403d02:	call   r12
  403d05:	jmp    0x403cb0
  403d07:	nop    WORD PTR [rax+rax*1+0x0]
  403d10:	cmp    rbx,rsi
  403d13:	jae    0x403b4b
  403d19:	mov    r12,QWORD PTR [rip+0x5780]        # 0x4094a0
  403d20:	lea    rdi,[rbp-0x30]
  403d24:	mov    ecx,DWORD PTR [rbx+0x4]
  403d27:	mov    eax,DWORD PTR [rbx]
  403d29:	mov    r8d,0x4
  403d2f:	mov    rdx,rdi
  403d32:	add    rbx,0x8
  403d36:	add    rcx,r12
  403d39:	add    eax,DWORD PTR [rcx]
  403d3b:	mov    DWORD PTR [rbp-0x30],eax
  403d3e:	call   0x4039c0
  403d43:	cmp    rbx,rsi
  403d46:	jb     0x403d24
  403d48:	jmp    0x403c84
  403d4d:	cmp    edx,0x8
  403d50:	jne    0x403dbb
  403d52:	movzx  edx,BYTE PTR [rcx]
  403d55:	mov    rdi,r13
  403d58:	mov    r10,rdx
  403d5b:	or     r10,0xffffffffffffff00
  403d62:	test   dl,dl
  403d64:	cmovs  rdx,r10
  403d68:	sub    rdx,rax
  403d6b:	lea    rax,[r8+rdx*1]
  403d6f:	mov    r8d,0x1
  403d75:	mov    rdx,r13
  403d78:	mov    QWORD PTR [rbp-0x30],rax
  403d7c:	call   0x4039c0
  403d81:	jmp    0x403c7b
  403d86:	movzx  edx,WORD PTR [rcx]
  403d89:	mov    rdi,r13
  403d8c:	mov    r10,rdx
  403d8f:	or     r10,0xffffffffffff0000
  403d96:	test   dx,dx
  403d99:	cmovs  rdx,r10
  403d9d:	sub    rdx,rax
  403da0:	lea    rax,[r8+rdx*1]
  403da4:	mov    r8d,0x2
  403daa:	mov    rdx,r13
  403dad:	mov    QWORD PTR [rbp-0x30],rax
  403db1:	call   0x4039c0
  403db6:	jmp    0x403c7b
  403dbb:	lea    rcx,[rip+0x5636]        # 0x4093f8
  403dc2:	mov    QWORD PTR [rbp-0x30],0x0
  403dca:	call   0x403950
  403dcf:	mov    edx,DWORD PTR [rcx]
  403dd1:	mov    rdi,r13
  403dd4:	mov    r10,rdx
  403dd7:	or     r10,r14
  403dda:	test   edx,edx
  403ddc:	cmovs  rdx,r10
  403de0:	sub    rdx,rax
  403de3:	lea    rax,[r8+rdx*1]
  403de7:	mov    r8d,0x4
  403ded:	mov    rdx,r13
  403df0:	mov    QWORD PTR [rbp-0x30],rax
  403df4:	call   0x4039c0
  403df9:	jmp    0x403c7b
  403dfe:	add    rbx,QWORD PTR [rip+0x8903]        # 0x40c708
  403e05:	lea    rcx,[rip+0x5554]        # 0x409360
  403e0c:	mov    rax,QWORD PTR [rbx+0x10]
  403e10:	mov    r8,QWORD PTR [rbx+0x8]
  403e14:	mov    edx,DWORD PTR [rax+0x8]
  403e17:	call   0x403950
  403e1c:	lea    rcx,[rip+0x559d]        # 0x4093c0
  403e23:	call   0x403950
  403e28:	nop
  403e29:	nop
  403e2a:	nop
  403e2b:	nop
  403e2c:	nop
  403e2d:	nop
  403e2e:	nop
  403e2f:	nop
  403e30:	sub    rsp,0x28
  403e34:	mov    eax,DWORD PTR [rcx]
  403e36:	cmp    eax,0xc0000091
  403e3b:	ja     0x403ea0
  403e3d:	cmp    eax,0xc000008d
  403e42:	jae    0x403ebf
  403e44:	cmp    eax,0xc0000008
  403e49:	je     0x403f60
  403e4f:	ja     0x403f30
  403e55:	cmp    eax,0x80000002
  403e5a:	je     0x403f60
  403e60:	cmp    eax,0xc0000005
  403e65:	jne    0x403f3e
  403e6b:	xor    edx,edx
  403e6d:	mov    ecx,0xb
  403e72:	call   0x404908
  403e77:	cmp    rax,0x1
  403e7b:	je     0x403fc0
  403e81:	test   rax,rax
  403e84:	je     0x403fa0
  403e8a:	mov    ecx,0xb
  403e8f:	call   rax
  403e91:	xor    eax,eax
  403e93:	add    rsp,0x28
  403e97:	ret    
  403e98:	nop    DWORD PTR [rax+rax*1+0x0]
  403ea0:	cmp    eax,0xc0000094
  403ea5:	je     0x403f70
  403eab:	ja     0x403ef0
  403ead:	cmp    eax,0xc0000092
  403eb2:	je     0x403f60
  403eb8:	cmp    eax,0xc0000093
  403ebd:	jne    0x403f3e
  403ebf:	xor    edx,edx
  403ec1:	mov    ecx,0x8
  403ec6:	call   0x404908
  403ecb:	cmp    rax,0x1
  403ecf:	mov    rdx,rax
  403ed2:	je     0x403f48
  403ed4:	test   rdx,rdx
  403ed7:	mov    eax,0x1
  403edc:	je     0x403e93
  403ede:	mov    ecx,0x8
  403ee3:	call   rdx
  403ee5:	xor    eax,eax
  403ee7:	add    rsp,0x28
  403eeb:	ret    
  403eec:	nop    DWORD PTR [rax+0x0]
  403ef0:	cmp    eax,0xc0000095
  403ef5:	je     0x403f60
  403ef7:	cmp    eax,0xc0000096
  403efc:	jne    0x403f3e
  403efe:	xor    edx,edx
  403f00:	mov    ecx,0x4
  403f05:	call   0x404908
  403f0a:	cmp    rax,0x1
  403f0e:	je     0x403faa
  403f14:	test   rax,rax
  403f17:	je     0x403fa0
  403f1d:	mov    ecx,0x4
  403f22:	call   rax
  403f24:	xor    eax,eax
  403f26:	jmp    0x403e93
  403f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  403f30:	cmp    eax,0xc000001d
  403f35:	je     0x403efe
  403f37:	cmp    eax,0xc000008c
  403f3c:	je     0x403f60
  403f3e:	mov    eax,0x1
  403f43:	add    rsp,0x28
  403f47:	ret    
  403f48:	mov    edx,0x1
  403f4d:	mov    ecx,0x8
  403f52:	call   0x404908
  403f57:	call   0x403920
  403f5c:	nop    DWORD PTR [rax+0x0]
  403f60:	xor    eax,eax
  403f62:	add    rsp,0x28
  403f66:	ret    
  403f67:	nop    WORD PTR [rax+rax*1+0x0]
  403f70:	xor    edx,edx
  403f72:	mov    ecx,0x8
  403f77:	call   0x404908
  403f7c:	cmp    rax,0x1
  403f80:	mov    rdx,rax
  403f83:	jne    0x403ed4
  403f89:	mov    edx,0x1
  403f8e:	mov    ecx,0x8
  403f93:	call   0x404908
  403f98:	xor    eax,eax
  403f9a:	jmp    0x403e93
  403f9f:	nop
  403fa0:	mov    eax,0x4
  403fa5:	add    rsp,0x28
  403fa9:	ret    
  403faa:	mov    edx,0x1
  403faf:	mov    ecx,0x4
  403fb4:	call   0x404908
  403fb9:	xor    eax,eax
  403fbb:	jmp    0x403e93
  403fc0:	mov    edx,0x1
  403fc5:	mov    ecx,0xb
  403fca:	call   0x404908
  403fcf:	xor    eax,eax
  403fd1:	jmp    0x403e93
  403fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fe0:	push   r12
  403fe2:	push   rbp
  403fe3:	push   rdi
  403fe4:	push   rsi
  403fe5:	push   rbx
  403fe6:	sub    rsp,0x20
  403fea:	call   0x404750
  403fef:	mov    rbp,rax
  403ff2:	mov    eax,DWORD PTR [rip+0x8750]        # 0x40c748
  403ff8:	test   eax,eax
  403ffa:	jne    0x404021
  403ffc:	test   rbp,rbp
  403fff:	je     0x404021
  404001:	lea    rcx,[rip+0x5428]        # 0x409430
  404008:	mov    DWORD PTR [rip+0x8736],0x1        # 0x40c748
  404012:	call   0x404590
  404017:	test   rax,rax
  40401a:	je     0x404030
  40401c:	mov    eax,0x1
  404021:	add    rsp,0x20
  404025:	pop    rbx
  404026:	pop    rsi
  404027:	pop    rdi
  404028:	pop    rbp
  404029:	pop    r12
  40402b:	ret    
  40402c:	nop    DWORD PTR [rax+0x0]
  404030:	lea    rbx,[rip+0x8849]        # 0x40c880
  404037:	mov    ecx,0x30
  40403c:	lea    rdx,[rip+0x873d]        # 0x40c780
  404043:	lea    r12,[rip+0xfffffffffffffde6]        # 0x403e30
  40404a:	xor    esi,esi
  40404c:	mov    rdi,rbx
  40404f:	rep stos QWORD PTR es:[rdi],rax
  404052:	mov    rdi,rdx
  404055:	sub    r12,rbp
  404058:	mov    cl,0x20
  40405a:	rep stos QWORD PTR es:[rdi],rax
  40405d:	mov    rdi,rdx
  404060:	jmp    0x404090
  404062:	mov    BYTE PTR [rdi],0x9
  404065:	mov    DWORD PTR [rdi+0x4],r12d
  404069:	add    rsi,0x1
  40406d:	mov    edx,DWORD PTR [rax+0xc]
  404070:	add    rbx,0xc
  404074:	mov    DWORD PTR [rbx-0xc],edx
  404077:	add    edx,DWORD PTR [rax+0x8]
  40407a:	mov    rax,rdi
  40407d:	sub    rax,rbp
  404080:	add    rdi,0x8
  404084:	mov    DWORD PTR [rbx-0x4],eax
  404087:	mov    DWORD PTR [rbx-0x8],edx
  40408a:	cmp    rsi,0x20
  40408e:	je     0x4040c5
  404090:	mov    rcx,rsi
  404093:	call   0x4046c0
  404098:	test   rax,rax
  40409b:	jne    0x404062
  40409d:	test   rsi,rsi
  4040a0:	je     0x40401c
  4040a6:	mov    edx,esi
  4040a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4040b0:	mov    r8,rbp
  4040b3:	lea    rcx,[rip+0x87c6]        # 0x40c880
  4040ba:	call   QWORD PTR [rip+0x9814]        # 0x40d8d4
  4040c0:	jmp    0x40401c
  4040c5:	mov    edx,0x20
  4040ca:	jmp    0x4040b0
  4040cc:	nop    DWORD PTR [rax+0x0]
  4040d0:	push   rbx
  4040d1:	sub    rsp,0x20
  4040d5:	mov    rdx,QWORD PTR [rcx]
  4040d8:	mov    eax,DWORD PTR [rdx]
  4040da:	mov    r8d,eax
  4040dd:	and    r8d,0x20ffffff
  4040e4:	cmp    r8d,0x20474343
  4040eb:	je     0x4041f0
  4040f1:	cmp    eax,0xc0000091
  4040f6:	mov    rbx,rcx
  4040f9:	ja     0x404180
  4040ff:	cmp    eax,0xc000008d
  404104:	jae    0x404197
  40410a:	cmp    eax,0xc0000008
  40410f:	je     0x404143
  404111:	ja     0x404150
  404113:	cmp    eax,0x80000002
  404118:	je     0x404143
  40411a:	cmp    eax,0xc0000005
  40411f:	jne    0x404162
  404121:	xor    edx,edx
  404123:	mov    ecx,0xb
  404128:	call   0x404908
  40412d:	cmp    rax,0x1
  404131:	je     0x404260
  404137:	test   rax,rax
  40413a:	je     0x404162
  40413c:	mov    ecx,0xb
  404141:	call   rax
  404143:	mov    eax,0xffffffff
  404148:	add    rsp,0x20
  40414c:	pop    rbx
  40414d:	ret    
  40414e:	xchg   ax,ax
  404150:	cmp    eax,0xc000001d
  404155:	je     0x404216
  40415b:	cmp    eax,0xc000008c
  404160:	je     0x404143
  404162:	mov    rax,QWORD PTR [rip+0x85d7]        # 0x40c740
  404169:	test   rax,rax
  40416c:	je     0x404148
  40416e:	mov    rcx,rbx
  404171:	add    rsp,0x20
  404175:	pop    rbx
  404176:	rex.W jmp rax
  404179:	nop    DWORD PTR [rax+0x0]
  404180:	cmp    eax,0xc0000094
  404185:	je     0x4041c2
  404187:	ja     0x404200
  404189:	cmp    eax,0xc0000092
  40418e:	je     0x404143
  404190:	cmp    eax,0xc0000093
  404195:	jne    0x404162
  404197:	xor    edx,edx
  404199:	mov    ecx,0x8
  40419e:	call   0x404908
  4041a3:	cmp    rax,0x1
  4041a7:	jne    0x4041d4
  4041a9:	mov    edx,0x1
  4041ae:	mov    ecx,0x8
  4041b3:	call   0x404908
  4041b8:	call   0x403920
  4041bd:	jmp    0x404143
  4041c2:	xor    edx,edx
  4041c4:	mov    ecx,0x8
  4041c9:	call   0x404908
  4041ce:	cmp    rax,0x1
  4041d2:	je     0x404242
  4041d4:	test   rax,rax
  4041d7:	je     0x404162
  4041d9:	mov    ecx,0x8
  4041de:	call   rax
  4041e0:	mov    eax,0xffffffff
  4041e5:	jmp    0x404148
  4041ea:	nop    WORD PTR [rax+rax*1+0x0]
  4041f0:	test   BYTE PTR [rdx+0x4],0x1
  4041f4:	jne    0x4040f1
  4041fa:	jmp    0x404143
  4041ff:	nop
  404200:	cmp    eax,0xc0000095
  404205:	je     0x404143
  40420b:	cmp    eax,0xc0000096
  404210:	jne    0x404162
  404216:	xor    edx,edx
  404218:	mov    ecx,0x4
  40421d:	call   0x404908
  404222:	cmp    rax,0x1
  404226:	je     0x404274
  404228:	test   rax,rax
  40422b:	je     0x404162
  404231:	mov    ecx,0x4
  404236:	call   rax
  404238:	mov    eax,0xffffffff
  40423d:	jmp    0x404148
  404242:	mov    edx,0x1
  404247:	mov    ecx,0x8
  40424c:	call   0x404908
  404251:	jmp    0x404143
  404256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404260:	mov    edx,0x1
  404265:	mov    ecx,0xb
  40426a:	call   0x404908
  40426f:	jmp    0x404143
  404274:	mov    edx,0x1
  404279:	mov    ecx,0x4
  40427e:	call   0x404908
  404283:	jmp    0x404143
  404288:	nop
  404289:	nop
  40428a:	nop
  40428b:	nop
  40428c:	nop
  40428d:	nop
  40428e:	nop
  40428f:	nop
  404290:	push   rbp
  404291:	push   rdi
  404292:	push   rsi
  404293:	push   rbx
  404294:	sub    rsp,0x28
  404298:	lea    rcx,[rip+0x8781]        # 0x40ca20
  40429f:	call   QWORD PTR [rip+0x95d7]        # 0x40d87c
  4042a5:	mov    rbx,QWORD PTR [rip+0x8754]        # 0x40ca00
  4042ac:	test   rbx,rbx
  4042af:	je     0x4042e4
  4042b1:	mov    rbp,QWORD PTR [rip+0x9654]        # 0x40d90c
  4042b8:	mov    rdi,QWORD PTR [rip+0x95dd]        # 0x40d89c
  4042bf:	nop
  4042c0:	mov    ecx,DWORD PTR [rbx]
  4042c2:	call   rbp
  4042c4:	mov    rsi,rax
  4042c7:	call   rdi
  4042c9:	test   eax,eax
  4042cb:	jne    0x4042db
  4042cd:	test   rsi,rsi
  4042d0:	je     0x4042db
  4042d2:	mov    rax,QWORD PTR [rbx+0x8]
  4042d6:	mov    rcx,rsi
  4042d9:	call   rax
  4042db:	mov    rbx,QWORD PTR [rbx+0x10]
  4042df:	test   rbx,rbx
  4042e2:	jne    0x4042c0
  4042e4:	mov    rax,QWORD PTR [rip+0x95d9]        # 0x40d8c4
  4042eb:	lea    rcx,[rip+0x872e]        # 0x40ca20
  4042f2:	add    rsp,0x28
  4042f6:	pop    rbx
  4042f7:	pop    rsi
  4042f8:	pop    rdi
  4042f9:	pop    rbp
  4042fa:	rex.W jmp rax
  4042fd:	nop    DWORD PTR [rax]
  404300:	push   rdi
  404301:	push   rsi
  404302:	push   rbx
  404303:	sub    rsp,0x20
  404307:	mov    eax,DWORD PTR [rip+0x86fb]        # 0x40ca08
  40430d:	test   eax,eax
  40430f:	jne    0x404320
  404311:	add    rsp,0x20
  404315:	pop    rbx
  404316:	pop    rsi
  404317:	pop    rdi
  404318:	ret    
  404319:	nop    DWORD PTR [rax+0x0]
  404320:	mov    rsi,rdx
  404323:	mov    edi,ecx
  404325:	mov    edx,0x18
  40432a:	mov    ecx,0x1
  40432f:	call   0x404940
  404334:	test   rax,rax
  404337:	mov    rbx,rax
  40433a:	je     0x404378
  40433c:	mov    DWORD PTR [rax],edi
  40433e:	mov    QWORD PTR [rax+0x8],rsi
  404342:	lea    rcx,[rip+0x86d7]        # 0x40ca20
  404349:	call   QWORD PTR [rip+0x952d]        # 0x40d87c
  40434f:	mov    rax,QWORD PTR [rip+0x86aa]        # 0x40ca00
  404356:	lea    rcx,[rip+0x86c3]        # 0x40ca20
  40435d:	mov    QWORD PTR [rip+0x869c],rbx        # 0x40ca00
  404364:	mov    QWORD PTR [rbx+0x10],rax
  404368:	call   QWORD PTR [rip+0x9556]        # 0x40d8c4
  40436e:	xor    eax,eax
  404370:	add    rsp,0x20
  404374:	pop    rbx
  404375:	pop    rsi
  404376:	pop    rdi
  404377:	ret    
  404378:	mov    eax,0xffffffff
  40437d:	jmp    0x404311
  40437f:	nop
  404380:	push   rbx
  404381:	sub    rsp,0x20
  404385:	mov    eax,DWORD PTR [rip+0x867d]        # 0x40ca08
  40438b:	test   eax,eax
  40438d:	jne    0x4043a0
  40438f:	xor    eax,eax
  404391:	add    rsp,0x20
  404395:	pop    rbx
  404396:	ret    
  404397:	nop    WORD PTR [rax+rax*1+0x0]
  4043a0:	mov    ebx,ecx
  4043a2:	lea    rcx,[rip+0x8677]        # 0x40ca20
  4043a9:	call   QWORD PTR [rip+0x94cd]        # 0x40d87c
  4043af:	mov    rdx,QWORD PTR [rip+0x864a]        # 0x40ca00
  4043b6:	test   rdx,rdx
  4043b9:	je     0x4043d7
  4043bb:	mov    eax,DWORD PTR [rdx]
  4043bd:	cmp    eax,ebx
  4043bf:	jne    0x4043ce
  4043c1:	jmp    0x40440f
  4043c3:	mov    r8d,DWORD PTR [rax]
  4043c6:	cmp    r8d,ebx
  4043c9:	je     0x4043f0
  4043cb:	mov    rdx,rax
  4043ce:	mov    rax,QWORD PTR [rdx+0x10]
  4043d2:	test   rax,rax
  4043d5:	jne    0x4043c3
  4043d7:	lea    rcx,[rip+0x8642]        # 0x40ca20
  4043de:	call   QWORD PTR [rip+0x94e0]        # 0x40d8c4
  4043e4:	xor    eax,eax
  4043e6:	add    rsp,0x20
  4043ea:	pop    rbx
  4043eb:	ret    
  4043ec:	nop    DWORD PTR [rax+0x0]
  4043f0:	mov    rcx,rax
  4043f3:	mov    rax,QWORD PTR [rax+0x10]
  4043f7:	mov    QWORD PTR [rdx+0x10],rax
  4043fb:	call   0x404928
  404400:	lea    rcx,[rip+0x8619]        # 0x40ca20
  404407:	call   QWORD PTR [rip+0x94b7]        # 0x40d8c4
  40440d:	jmp    0x4043e4
  40440f:	mov    rax,QWORD PTR [rdx+0x10]
  404413:	mov    rcx,rdx
  404416:	mov    QWORD PTR [rip+0x85e3],rax        # 0x40ca00
  40441d:	jmp    0x4043fb
  40441f:	nop
  404420:	push   rbx
  404421:	sub    rsp,0x20
  404425:	cmp    edx,0x1
  404428:	je     0x4044c0
  40442e:	jb     0x404460
  404430:	cmp    edx,0x2
  404433:	je     0x404450
  404435:	cmp    edx,0x3
  404438:	jne    0x404455
  40443a:	mov    eax,DWORD PTR [rip+0x85c8]        # 0x40ca08
  404440:	test   eax,eax
  404442:	je     0x404455
  404444:	call   0x404290
  404449:	jmp    0x404455
  40444b:	nop    DWORD PTR [rax+rax*1+0x0]
  404450:	call   0x403920
  404455:	mov    eax,0x1
  40445a:	add    rsp,0x20
  40445e:	pop    rbx
  40445f:	ret    
  404460:	mov    eax,DWORD PTR [rip+0x85a2]        # 0x40ca08
  404466:	test   eax,eax
  404468:	jne    0x4044f0
  40446e:	mov    eax,DWORD PTR [rip+0x8594]        # 0x40ca08
  404474:	cmp    eax,0x1
  404477:	jne    0x404455
  404479:	mov    rcx,QWORD PTR [rip+0x8580]        # 0x40ca00
  404480:	test   rcx,rcx
  404483:	je     0x404496
  404485:	mov    rbx,QWORD PTR [rcx+0x10]
  404489:	call   0x404928
  40448e:	test   rbx,rbx
  404491:	mov    rcx,rbx
  404494:	jne    0x404485
  404496:	lea    rcx,[rip+0x8583]        # 0x40ca20
  40449d:	mov    QWORD PTR [rip+0x8558],0x0        # 0x40ca00
  4044a8:	mov    DWORD PTR [rip+0x8556],0x0        # 0x40ca08
  4044b2:	call   QWORD PTR [rip+0x93bc]        # 0x40d874
  4044b8:	jmp    0x404455
  4044ba:	nop    WORD PTR [rax+rax*1+0x0]
  4044c0:	mov    eax,DWORD PTR [rip+0x8542]        # 0x40ca08
  4044c6:	test   eax,eax
  4044c8:	je     0x4044e0
  4044ca:	mov    eax,0x1
  4044cf:	mov    DWORD PTR [rip+0x852f],0x1        # 0x40ca08
  4044d9:	add    rsp,0x20
  4044dd:	pop    rbx
  4044de:	ret    
  4044df:	nop
  4044e0:	lea    rcx,[rip+0x8539]        # 0x40ca20
  4044e7:	call   QWORD PTR [rip+0x93cf]        # 0x40d8bc
  4044ed:	jmp    0x4044ca
  4044ef:	nop
  4044f0:	call   0x404290
  4044f5:	jmp    0x40446e
  4044fa:	nop
  4044fb:	nop
  4044fc:	nop
  4044fd:	nop
  4044fe:	nop
  4044ff:	nop
  404500:	movsxd rax,DWORD PTR [rcx+0x3c]
  404504:	add    rcx,rax
  404507:	xor    eax,eax
  404509:	cmp    DWORD PTR [rcx],0x4550
  40450f:	je     0x404513
  404511:	repz ret 
  404513:	xor    eax,eax
  404515:	cmp    WORD PTR [rcx+0x18],0x20b
  40451b:	sete   al
  40451e:	ret    
  40451f:	nop
  404520:	cmp    WORD PTR [rcx],0x5a4d
  404525:	je     0x404530
  404527:	xor    eax,eax
  404529:	ret    
  40452a:	nop    WORD PTR [rax+rax*1+0x0]
  404530:	jmp    0x404500
  404532:	nop    DWORD PTR [rax+0x0]
  404536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404540:	movsxd rax,DWORD PTR [rcx+0x3c]
  404544:	add    rcx,rax
  404547:	movzx  eax,WORD PTR [rcx+0x14]
  40454b:	lea    rax,[rcx+rax*1+0x18]
  404550:	movzx  ecx,WORD PTR [rcx+0x6]
  404554:	test   ecx,ecx
  404556:	je     0x404581
  404558:	sub    ecx,0x1
  40455b:	lea    rcx,[rcx+rcx*4]
  40455f:	lea    r9,[rax+rcx*8+0x28]
  404564:	mov    r8d,DWORD PTR [rax+0xc]
  404568:	cmp    r8,rdx
  40456b:	mov    rcx,r8
  40456e:	ja     0x404578
  404570:	add    ecx,DWORD PTR [rax+0x8]
  404573:	cmp    rdx,rcx
  404576:	jb     0x404583
  404578:	add    rax,0x28
  40457c:	cmp    rax,r9
  40457f:	jne    0x404564
  404581:	xor    eax,eax
  404583:	repz ret 
  404585:	nop
  404586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404590:	push   rdi
  404591:	push   rsi
  404592:	push   rbx
  404593:	sub    rsp,0x20
  404597:	mov    rsi,rcx
  40459a:	call   0x404900
  40459f:	cmp    rax,0x8
  4045a3:	ja     0x4045c0
  4045a5:	mov    rbx,QWORD PTR [rip+0x4ef4]        # 0x4094a0
  4045ac:	xor    edi,edi
  4045ae:	cmp    WORD PTR [rbx],0x5a4d
  4045b3:	je     0x4045d0
  4045b5:	mov    rax,rdi
  4045b8:	add    rsp,0x20
  4045bc:	pop    rbx
  4045bd:	pop    rsi
  4045be:	pop    rdi
  4045bf:	ret    
  4045c0:	xor    edi,edi
  4045c2:	mov    rax,rdi
  4045c5:	add    rsp,0x20
  4045c9:	pop    rbx
  4045ca:	pop    rsi
  4045cb:	pop    rdi
  4045cc:	ret    
  4045cd:	nop    DWORD PTR [rax]
  4045d0:	mov    rcx,rbx
  4045d3:	call   0x404500
  4045d8:	test   eax,eax
  4045da:	je     0x4045b5
  4045dc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4045e0:	add    rdx,rbx
  4045e3:	movzx  eax,WORD PTR [rdx+0x14]
  4045e7:	lea    rbx,[rdx+rax*1+0x18]
  4045ec:	movzx  eax,WORD PTR [rdx+0x6]
  4045f0:	test   eax,eax
  4045f2:	je     0x4045b5
  4045f4:	sub    eax,0x1
  4045f7:	lea    rax,[rax+rax*4]
  4045fb:	lea    rdi,[rbx+rax*8+0x28]
  404600:	jmp    0x40460b
  404602:	add    rbx,0x28
  404606:	cmp    rbx,rdi
  404609:	je     0x4045c0
  40460b:	mov    r8d,0x8
  404611:	mov    rdx,rsi
  404614:	mov    rcx,rbx
  404617:	call   0x4048f8
  40461c:	test   eax,eax
  40461e:	jne    0x404602
  404620:	mov    rdi,rbx
  404623:	mov    rax,rdi
  404626:	add    rsp,0x20
  40462a:	pop    rbx
  40462b:	pop    rsi
  40462c:	pop    rdi
  40462d:	ret    
  40462e:	xchg   ax,ax
  404630:	push   rsi
  404631:	push   rbx
  404632:	sub    rsp,0x28
  404636:	mov    rbx,QWORD PTR [rip+0x4e63]        # 0x4094a0
  40463d:	cmp    WORD PTR [rbx],0x5a4d
  404642:	je     0x404650
  404644:	xor    eax,eax
  404646:	add    rsp,0x28
  40464a:	pop    rbx
  40464b:	pop    rsi
  40464c:	ret    
  40464d:	nop    DWORD PTR [rax]
  404650:	mov    rsi,rcx
  404653:	mov    rcx,rbx
  404656:	call   0x404500
  40465b:	test   eax,eax
  40465d:	je     0x404644
  40465f:	sub    rsi,rbx
  404662:	mov    rcx,rbx
  404665:	mov    rdx,rsi
  404668:	add    rsp,0x28
  40466c:	pop    rbx
  40466d:	pop    rsi
  40466e:	jmp    0x404540
  404673:	nop    DWORD PTR [rax]
  404676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404680:	push   rbx
  404681:	sub    rsp,0x20
  404685:	mov    rbx,QWORD PTR [rip+0x4e14]        # 0x4094a0
  40468c:	xor    eax,eax
  40468e:	cmp    WORD PTR [rbx],0x5a4d
  404693:	je     0x4046a0
  404695:	add    rsp,0x20
  404699:	pop    rbx
  40469a:	ret    
  40469b:	nop    DWORD PTR [rax+rax*1+0x0]
  4046a0:	mov    rcx,rbx
  4046a3:	call   0x404500
  4046a8:	test   eax,eax
  4046aa:	je     0x404695
  4046ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4046b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4046b5:	add    rsp,0x20
  4046b9:	pop    rbx
  4046ba:	ret    
  4046bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4046c0:	push   rdi
  4046c1:	push   rsi
  4046c2:	push   rbx
  4046c3:	sub    rsp,0x20
  4046c7:	mov    rsi,QWORD PTR [rip+0x4dd2]        # 0x4094a0
  4046ce:	xor    edi,edi
  4046d0:	mov    rbx,rcx
  4046d3:	cmp    WORD PTR [rsi],0x5a4d
  4046d8:	je     0x4046e5
  4046da:	mov    rax,rdi
  4046dd:	add    rsp,0x20
  4046e1:	pop    rbx
  4046e2:	pop    rsi
  4046e3:	pop    rdi
  4046e4:	ret    
  4046e5:	mov    rcx,rsi
  4046e8:	call   0x404500
  4046ed:	test   eax,eax
  4046ef:	je     0x4046da
  4046f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4046f5:	add    rsi,rax
  4046f8:	movzx  eax,WORD PTR [rsi+0x14]
  4046fc:	lea    rdx,[rsi+rax*1+0x18]
  404701:	movzx  eax,WORD PTR [rsi+0x6]
  404705:	test   eax,eax
  404707:	je     0x4046da
  404709:	sub    eax,0x1
  40470c:	lea    rax,[rax+rax*4]
  404710:	lea    rax,[rdx+rax*8+0x28]
  404715:	test   BYTE PTR [rdx+0x27],0x20
  404719:	je     0x404724
  40471b:	test   rbx,rbx
  40471e:	je     0x404740
  404720:	sub    rbx,0x1
  404724:	add    rdx,0x28
  404728:	cmp    rdx,rax
  40472b:	jne    0x404715
  40472d:	xor    edi,edi
  40472f:	mov    rax,rdi
  404732:	add    rsp,0x20
  404736:	pop    rbx
  404737:	pop    rsi
  404738:	pop    rdi
  404739:	ret    
  40473a:	nop    WORD PTR [rax+rax*1+0x0]
  404740:	mov    rdi,rdx
  404743:	mov    rax,rdi
  404746:	add    rsp,0x20
  40474a:	pop    rbx
  40474b:	pop    rsi
  40474c:	pop    rdi
  40474d:	ret    
  40474e:	xchg   ax,ax
  404750:	push   rsi
  404751:	push   rbx
  404752:	sub    rsp,0x28
  404756:	mov    rsi,QWORD PTR [rip+0x4d43]        # 0x4094a0
  40475d:	xor    ebx,ebx
  40475f:	cmp    WORD PTR [rsi],0x5a4d
  404764:	je     0x404770
  404766:	mov    rax,rbx
  404769:	add    rsp,0x28
  40476d:	pop    rbx
  40476e:	pop    rsi
  40476f:	ret    
  404770:	mov    rcx,rsi
  404773:	call   0x404500
  404778:	test   eax,eax
  40477a:	cmovne rbx,rsi
  40477e:	mov    rax,rbx
  404781:	add    rsp,0x28
  404785:	pop    rbx
  404786:	pop    rsi
  404787:	ret    
  404788:	nop    DWORD PTR [rax+rax*1+0x0]
  404790:	push   rsi
  404791:	push   rbx
  404792:	sub    rsp,0x28
  404796:	mov    rbx,QWORD PTR [rip+0x4d03]        # 0x4094a0
  40479d:	xor    eax,eax
  40479f:	cmp    WORD PTR [rbx],0x5a4d
  4047a4:	je     0x4047b0
  4047a6:	add    rsp,0x28
  4047aa:	pop    rbx
  4047ab:	pop    rsi
  4047ac:	ret    
  4047ad:	nop    DWORD PTR [rax]
  4047b0:	mov    rsi,rcx
  4047b3:	mov    rcx,rbx
  4047b6:	call   0x404500
  4047bb:	test   eax,eax
  4047bd:	je     0x4047a6
  4047bf:	sub    rsi,rbx
  4047c2:	mov    rcx,rbx
  4047c5:	mov    rdx,rsi
  4047c8:	call   0x404540
  4047cd:	test   rax,rax
  4047d0:	je     0x4047e1
  4047d2:	mov    eax,DWORD PTR [rax+0x24]
  4047d5:	not    eax
  4047d7:	shr    eax,0x1f
  4047da:	add    rsp,0x28
  4047de:	pop    rbx
  4047df:	pop    rsi
  4047e0:	ret    
  4047e1:	xor    eax,eax
  4047e3:	jmp    0x4047a6
  4047e5:	nop
  4047e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047f0:	push   rbp
  4047f1:	push   rdi
  4047f2:	push   rsi
  4047f3:	push   rbx
  4047f4:	sub    rsp,0x28
  4047f8:	mov    rdi,QWORD PTR [rip+0x4ca1]        # 0x4094a0
  4047ff:	xor    ebp,ebp
  404801:	mov    esi,ecx
  404803:	cmp    WORD PTR [rdi],0x5a4d
  404808:	je     0x404820
  40480a:	mov    rax,rbp
  40480d:	add    rsp,0x28
  404811:	pop    rbx
  404812:	pop    rsi
  404813:	pop    rdi
  404814:	pop    rbp
  404815:	ret    
  404816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404820:	mov    rcx,rdi
  404823:	call   0x404500
  404828:	test   eax,eax
  40482a:	je     0x40480a
  40482c:	movsxd rax,DWORD PTR [rdi+0x3c]
  404830:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  404837:	test   edx,edx
  404839:	je     0x40480a
  40483b:	mov    ebx,edx
  40483d:	mov    rcx,rdi
  404840:	mov    rdx,rbx
  404843:	call   0x404540
  404848:	test   rax,rax
  40484b:	je     0x40480a
  40484d:	add    rbx,rdi
  404850:	mov    rdx,rbx
  404853:	jne    0x404867
  404855:	jmp    0x40480a
  404857:	nop    WORD PTR [rax+rax*1+0x0]
  404860:	sub    esi,0x1
  404863:	add    rdx,0x14
  404867:	mov    ecx,DWORD PTR [rdx+0x4]
  40486a:	test   ecx,ecx
  40486c:	jne    0x404875
  40486e:	mov    eax,DWORD PTR [rdx+0xc]
  404871:	test   eax,eax
  404873:	je     0x404890
  404875:	test   esi,esi
  404877:	jg     0x404860
  404879:	mov    ebp,DWORD PTR [rdx+0xc]
  40487c:	add    rbp,rdi
  40487f:	mov    rax,rbp
  404882:	add    rsp,0x28
  404886:	pop    rbx
  404887:	pop    rsi
  404888:	pop    rdi
  404889:	pop    rbp
  40488a:	ret    
  40488b:	nop    DWORD PTR [rax+rax*1+0x0]
  404890:	xor    ebp,ebp
  404892:	mov    rax,rbp
  404895:	add    rsp,0x28
  404899:	pop    rbx
  40489a:	pop    rsi
  40489b:	pop    rdi
  40489c:	pop    rbp
  40489d:	ret    
  40489e:	nop
  40489f:	nop
  4048a0:	push   rcx
  4048a1:	push   rax
  4048a2:	cmp    rax,0x1000
  4048a8:	lea    rcx,[rsp+0x18]
  4048ad:	jb     0x4048c8
  4048af:	sub    rcx,0x1000
  4048b6:	or     QWORD PTR [rcx],0x0
  4048ba:	sub    rax,0x1000
  4048c0:	cmp    rax,0x1000
  4048c6:	ja     0x4048af
  4048c8:	sub    rcx,rax
  4048cb:	or     QWORD PTR [rcx],0x0
  4048cf:	pop    rax
  4048d0:	pop    rcx
  4048d1:	ret    
  4048d2:	nop
  4048d3:	nop
  4048d4:	nop
  4048d5:	nop
  4048d6:	nop
  4048d7:	nop
  4048d8:	nop
  4048d9:	nop
  4048da:	nop
  4048db:	nop
  4048dc:	nop
  4048dd:	nop
  4048de:	nop
  4048df:	nop
  4048e0:	jmp    QWORD PTR [rip+0x9136]        # 0x40da1c
  4048e6:	nop
  4048e7:	nop
  4048e8:	jmp    QWORD PTR [rip+0x9126]        # 0x40da14
  4048ee:	nop
  4048ef:	nop
  4048f0:	jmp    QWORD PTR [rip+0x9116]        # 0x40da0c
  4048f6:	nop
  4048f7:	nop
  4048f8:	jmp    QWORD PTR [rip+0x9106]        # 0x40da04
  4048fe:	nop
  4048ff:	nop
  404900:	jmp    QWORD PTR [rip+0x90f6]        # 0x40d9fc
  404906:	nop
  404907:	nop
  404908:	jmp    QWORD PTR [rip+0x90e6]        # 0x40d9f4
  40490e:	nop
  40490f:	nop
  404910:	jmp    QWORD PTR [rip+0x90d6]        # 0x40d9ec
  404916:	nop
  404917:	nop
  404918:	jmp    QWORD PTR [rip+0x90c6]        # 0x40d9e4
  40491e:	nop
  40491f:	nop
  404920:	jmp    QWORD PTR [rip+0x90b6]        # 0x40d9dc
  404926:	nop
  404927:	nop
  404928:	jmp    QWORD PTR [rip+0x90a6]        # 0x40d9d4
  40492e:	nop
  40492f:	nop
  404930:	jmp    QWORD PTR [rip+0x9096]        # 0x40d9cc
  404936:	nop
  404937:	nop
  404938:	jmp    QWORD PTR [rip+0x9086]        # 0x40d9c4
  40493e:	nop
  40493f:	nop
  404940:	jmp    QWORD PTR [rip+0x9076]        # 0x40d9bc
  404946:	nop
  404947:	nop
  404948:	jmp    QWORD PTR [rip+0x9066]        # 0x40d9b4
  40494e:	nop
  40494f:	nop
  404950:	jmp    QWORD PTR [rip+0x9056]        # 0x40d9ac
  404956:	nop
  404957:	nop
  404958:	jmp    QWORD PTR [rip+0x9046]        # 0x40d9a4
  40495e:	nop
  40495f:	nop
  404960:	jmp    QWORD PTR [rip+0x9036]        # 0x40d99c
  404966:	nop
  404967:	nop
  404968:	jmp    QWORD PTR [rip+0x9026]        # 0x40d994
  40496e:	nop
  40496f:	nop
  404970:	jmp    QWORD PTR [rip+0x900e]        # 0x40d984
  404976:	nop
  404977:	nop
  404978:	jmp    QWORD PTR [rip+0x8ffe]        # 0x40d97c
  40497e:	nop
  40497f:	nop
  404980:	jmp    QWORD PTR [rip+0x8fe6]        # 0x40d96c
  404986:	nop
  404987:	nop
  404988:	jmp    QWORD PTR [rip+0x8fd6]        # 0x40d964
  40498e:	nop
  40498f:	nop
  404990:	jmp    QWORD PTR [rip+0x8fc6]        # 0x40d95c
  404996:	nop
  404997:	nop
  404998:	jmp    QWORD PTR [rip+0x8fb6]        # 0x40d954
  40499e:	nop
  40499f:	nop
  4049a0:	jmp    QWORD PTR [rip+0x8f9e]        # 0x40d944
  4049a6:	nop
  4049a7:	nop
  4049a8:	jmp    QWORD PTR [rip+0x8f8e]        # 0x40d93c
  4049ae:	nop
  4049af:	nop
  4049b0:	jmp    QWORD PTR [rip+0x8f7e]        # 0x40d934
  4049b6:	nop
  4049b7:	nop
  4049b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4049c0:	mov    rax,QWORD PTR [rip+0x80a9]        # 0x40ca70
  4049c7:	ret    
  4049c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4049d0:	mov    rax,rcx
  4049d3:	xchg   QWORD PTR [rip+0x8096],rax        # 0x40ca70
  4049da:	ret    
  4049db:	nop
  4049dc:	nop
  4049dd:	nop
  4049de:	nop
  4049df:	nop
  4049e0:	jmp    QWORD PTR [rip+0x8f3e]        # 0x40d924
  4049e6:	nop
  4049e7:	nop
  4049e8:	jmp    QWORD PTR [rip+0x8f2e]        # 0x40d91c
  4049ee:	nop
  4049ef:	nop
  4049f0:	jmp    QWORD PTR [rip+0x8f1e]        # 0x40d914
  4049f6:	nop
  4049f7:	nop
  4049f8:	jmp    QWORD PTR [rip+0x8f0e]        # 0x40d90c
  4049fe:	nop
  4049ff:	nop
  404a00:	jmp    QWORD PTR [rip+0x8efe]        # 0x40d904
  404a06:	nop
  404a07:	nop
  404a08:	jmp    QWORD PTR [rip+0x8eee]        # 0x40d8fc
  404a0e:	nop
  404a0f:	nop
  404a10:	jmp    QWORD PTR [rip+0x8ede]        # 0x40d8f4
  404a16:	nop
  404a17:	nop
  404a18:	jmp    QWORD PTR [rip+0x8ece]        # 0x40d8ec
  404a1e:	nop
  404a1f:	nop
  404a20:	jmp    QWORD PTR [rip+0x8ebe]        # 0x40d8e4
  404a26:	nop
  404a27:	nop
  404a28:	jmp    QWORD PTR [rip+0x8eae]        # 0x40d8dc
  404a2e:	nop
  404a2f:	nop
  404a30:	jmp    QWORD PTR [rip+0x8e9e]        # 0x40d8d4
  404a36:	nop
  404a37:	nop
  404a38:	jmp    QWORD PTR [rip+0x8e8e]        # 0x40d8cc
  404a3e:	nop
  404a3f:	nop
  404a40:	jmp    QWORD PTR [rip+0x8e7e]        # 0x40d8c4
  404a46:	nop
  404a47:	nop
  404a48:	jmp    QWORD PTR [rip+0x8e6e]        # 0x40d8bc
  404a4e:	nop
  404a4f:	nop
  404a50:	jmp    QWORD PTR [rip+0x8e5e]        # 0x40d8b4
  404a56:	nop
  404a57:	nop
  404a58:	jmp    QWORD PTR [rip+0x8e4e]        # 0x40d8ac
  404a5e:	nop
  404a5f:	nop
  404a60:	jmp    QWORD PTR [rip+0x8e3e]        # 0x40d8a4
  404a66:	nop
  404a67:	nop
  404a68:	jmp    QWORD PTR [rip+0x8e2e]        # 0x40d89c
  404a6e:	nop
  404a6f:	nop
  404a70:	jmp    QWORD PTR [rip+0x8e1e]        # 0x40d894
  404a76:	nop
  404a77:	nop
  404a78:	jmp    QWORD PTR [rip+0x8e0e]        # 0x40d88c
  404a7e:	nop
  404a7f:	nop
  404a80:	jmp    QWORD PTR [rip+0x8dfe]        # 0x40d884
  404a86:	nop
  404a87:	nop
  404a88:	jmp    QWORD PTR [rip+0x8dee]        # 0x40d87c
  404a8e:	nop
  404a8f:	nop
  404a90:	jmp    QWORD PTR [rip+0x8dde]        # 0x40d874
  404a96:	nop
  404a97:	nop
  404a98:	nop    DWORD PTR [rax+rax*1+0x0]
  404aa0:	push   r15
  404aa2:	push   r14
  404aa4:	push   r13
  404aa6:	push   r12
  404aa8:	push   rbp
  404aa9:	push   rdi
  404aaa:	push   rsi
  404aab:	push   rbx
  404aac:	sub    rsp,0x138
  404ab3:	mov    DWORD PTR [rsp+0x180],ecx
  404aba:	mov    QWORD PTR [rsp+0x188],rdx
  404ac2:	call   0x4034f0
  404ac7:	lea    rdx,[rip+0x3532]        # 0x408000
  404ace:	xor    ecx,ecx
  404ad0:	call   0x403360
  404ad5:	lea    rcx,[rip+0x3597]        # 0x408073
  404adc:	call   0x403358
  404ae1:	call   0x403350
  404ae6:	lea    rcx,[rip+0x3586]        # 0x408073
  404aed:	mov    rdx,rax
  404af0:	mov    rbx,rax
  404af3:	call   0x403370
  404af8:	mov    rcx,rbx
  404afb:	call   0x403338
  404b00:	lea    rdx,[rip+0x39ce]        # 0x4084d5
  404b07:	lea    rcx,[rip+0x3565]        # 0x408073
  404b0e:	call   0x403378
  404b13:	cmp    DWORD PTR [rsp+0x180],0x1
  404b1b:	jle    0x40529b
  404b21:	lea    rbx,[rsp+0xa4]
  404b29:	mov    rax,QWORD PTR [rsp+0x188]
  404b31:	xor    esi,esi
  404b33:	xor    r13d,r13d
  404b36:	xor    r15d,r15d
  404b39:	mov    r14d,0x1
  404b3f:	lea    rdi,[rsp+0xb0]
  404b47:	lea    r12,[rsp+0xa8]
  404b4f:	lea    rbp,[rsp+0xa0]
  404b57:	mov    QWORD PTR [rsp+0x68],rbx
  404b5c:	jmp    0x404b87
  404b5e:	xchg   ax,ax
  404b60:	mov    eax,DWORD PTR [rsp+0xa0]
  404b67:	xor    r14d,r14d
  404b6a:	mov    r15d,0x1
  404b70:	mov    DWORD PTR [rsp+0x180],eax
  404b77:	mov    rax,QWORD PTR [rsp+0xa8]
  404b7f:	mov    QWORD PTR [rsp+0x188],rax
  404b87:	mov    rbx,QWORD PTR [rax+0x8]
  404b8b:	lea    rdx,[rip+0x3949]        # 0x4084db
  404b92:	mov    rcx,rbx
  404b95:	call   0x403220
  404b9a:	test   eax,eax
  404b9c:	je     0x4050f7
  404ba2:	lea    rdx,[rip+0x3937]        # 0x4084e0
  404ba9:	mov    rcx,rbx
  404bac:	call   0x403220
  404bb1:	test   eax,eax
  404bb3:	je     0x404f7a
  404bb9:	lea    rdx,[rip+0x3aff]        # 0x4086bf
  404bc0:	mov    rcx,rbx
  404bc3:	call   0x403220
  404bc8:	test   eax,eax
  404bca:	je     0x404d11
  404bd0:	lea    rdx,[rip+0x3d87]        # 0x40895e
  404bd7:	mov    rcx,rbx
  404bda:	call   0x403220
  404bdf:	test   eax,eax
  404be1:	je     0x405123
  404be7:	lea    rdx,[rip+0x3db7]        # 0x4089a5
  404bee:	mov    rcx,rbx
  404bf1:	call   0x403220
  404bf6:	test   eax,eax
  404bf8:	je     0x4052c3
  404bfe:	lea    rdx,[rip+0x3e24]        # 0x408a29
  404c05:	mov    rcx,rbx
  404c08:	call   0x403220
  404c0d:	test   eax,eax
  404c0f:	jne    0x404f3b
  404c15:	cmp    DWORD PTR [rsp+0x180],0x4
  404c1d:	jne    0x404f3b
  404c23:	test   r15d,r15d
  404c26:	jne    0x404f69
  404c2c:	mov    rax,QWORD PTR [rsp+0x188]
  404c34:	mov    rdx,rdi
  404c37:	mov    r8d,0xa
  404c3d:	mov    rcx,QWORD PTR [rax+0x18]
  404c41:	mov    rbx,QWORD PTR [rax+0x10]
  404c45:	call   0x4048e8
  404c4a:	mov    rdx,QWORD PTR [rsp+0x188]
  404c52:	mov    r15d,eax
  404c55:	mov    rax,QWORD PTR [rsp+0xb0]
  404c5d:	cmp    QWORD PTR [rdx+0x18],rax
  404c61:	je     0x404f14
  404c67:	cmp    BYTE PTR [rax],0x0
  404c6a:	jne    0x404f14
  404c70:	xor    r9d,r9d
  404c73:	mov    r8,r12
  404c76:	mov    rdx,rbp
  404c79:	mov    rcx,rbx
  404c7c:	call   0x403240
  404c81:	test   eax,eax
  404c83:	je     0x404f14
  404c89:	xor    r13d,r13d
  404c8c:	xor    esi,esi
  404c8e:	cmp    BYTE PTR [rbx],0x0
  404c91:	je     0x404b60
  404c97:	mov    r8,QWORD PTR [rsp+0x68]
  404c9c:	mov    edx,r15d
  404c9f:	mov    rcx,rbx
  404ca2:	call   0x4029a0
  404ca7:	mov    r9d,DWORD PTR [rsp+0xa4]
  404caf:	mov    r13,rax
  404cb2:	test   r9d,r9d
  404cb5:	jle    0x404b60
  404cbb:	mov    rax,QWORD PTR [rip+0x893a]        # 0x40d5fc
  404cc2:	sub    r9d,0x1
  404cc6:	movsxd r10,r9d
  404cc9:	add    r10,rbx
  404ccc:	mov    rdx,QWORD PTR [rax]
  404ccf:	nop
  404cd0:	movzx  eax,BYTE PTR [r10]
  404cd4:	test   BYTE PTR [rdx+rax*2+0x1],0x1
  404cd9:	je     0x404cf0
  404cdb:	sub    r9d,0x1
  404cdf:	sub    r10,0x1
  404ce3:	cmp    r9d,0xffffffff
  404ce7:	jne    0x404cd0
  404ce9:	xor    esi,esi
  404ceb:	jmp    0x404b60
  404cf0:	xor    esi,esi
  404cf2:	cmp    BYTE PTR [rbx],0x0
  404cf5:	je     0x404b60
  404cfb:	xor    r8d,r8d
  404cfe:	mov    edx,r9d
  404d01:	mov    rcx,rbx
  404d04:	call   0x4029a0
  404d09:	mov    rsi,rax
  404d0c:	jmp    0x404b60
  404d11:	lea    rdi,[rsp+0x188]
  404d19:	lea    r8,[rip+0x399f]        # 0x4086bf
  404d20:	lea    rcx,[rsp+0x180]
  404d28:	mov    rdx,rdi
  404d2b:	call   0x402b40
  404d30:	xor    ecx,ecx
  404d32:	call   0x4032c0
  404d37:	xor    edx,edx
  404d39:	mov    rcx,rax
  404d3c:	mov    rbx,rax
  404d3f:	mov    QWORD PTR [rsp+0x78],rax
  404d44:	call   0x4032a8
  404d49:	lea    rcx,[rip+0x3978]        # 0x4086c8
  404d50:	call   0x403368
  404d55:	mov    rcx,rbx
  404d58:	mov    rdx,rax
  404d5b:	call   0x403298
  404d60:	lea    r8,[rip+0x330c]        # 0x408073
  404d67:	lea    rdx,[rip+0x40d2]        # 0x408e40
  404d6e:	mov    rcx,rbx
  404d71:	call   0x4032d8
  404d76:	call   0x401680
  404d7b:	mov    rcx,rbx
  404d7e:	mov    rdx,rax
  404d81:	call   0x4032e0
  404d86:	test   r15d,r15d
  404d89:	jne    0x40549d
  404d8f:	xor    ebp,ebp
  404d91:	xor    r12d,r12d
  404d94:	xor    ebx,ebx
  404d96:	mov    rcx,QWORD PTR [rsp+0x78]
  404d9b:	mov    r8,rdi
  404d9e:	lea    rdx,[rsp+0x180]
  404da6:	mov    edi,r15d
  404da9:	xor    r9d,r9d
  404dac:	xor    edi,0x1
  404daf:	call   0x4032b8
  404db4:	and    edi,0x1
  404db7:	test   eax,eax
  404db9:	jne    0x404dc4
  404dbb:	test   dil,dil
  404dbe:	jne    0x40560c
  404dc4:	lea    rax,[rsp+0xa8]
  404dcc:	mov    QWORD PTR [rsp+0xa8],0x0
  404dd8:	mov    rcx,rax
  404ddb:	mov    QWORD PTR [rsp+0x70],rax
  404de0:	call   0x402eb0
  404de5:	test   rax,rax
  404de8:	mov    QWORD PTR [rsp+0x68],rax
  404ded:	je     0x40589c
  404df3:	mov    rcx,QWORD PTR [rsp+0x68]
  404df8:	call   0x4030f0
  404dfd:	test   rax,rax
  404e00:	je     0x405669
  404e06:	xor    edx,edx
  404e08:	test   r12d,r12d
  404e0b:	jne    0x40594c
  404e11:	cmp    QWORD PTR [rip+0x7267],0x0        # 0x40c080
  404e19:	je     0x405c9a
  404e1f:	test   r15d,r15d
  404e22:	jne    0x405920
  404e28:	mov    rcx,QWORD PTR [rip+0x7251]        # 0x40c080
  404e2f:	call   0x4030b8
  404e34:	test   eax,eax
  404e36:	je     0x406043
  404e3c:	test   ebp,ebp
  404e3e:	jne    0x405a4e
  404e44:	mov    rcx,QWORD PTR [rip+0x722d]        # 0x40c078
  404e4b:	test   rcx,rcx
  404e4e:	je     0x406056
  404e54:	test   r15d,r15d
  404e57:	jne    0x406077
  404e5d:	call   0x4031b0
  404e62:	test   eax,eax
  404e64:	je     0x4066bc
  404e6a:	test   ebx,ebx
  404e6c:	jne    0x405eb2
  404e72:	cmp    QWORD PTR [rip+0x71f6],0x0        # 0x40c070
  404e7a:	je     0x406719
  404e80:	test   r15d,r15d
  404e83:	jne    0x405e9b
  404e89:	mov    rbx,QWORD PTR [rip+0x71e0]        # 0x40c070
  404e90:	mov    edx,0x2e
  404e95:	mov    rcx,rbx
  404e98:	call   0x4048f0
  404e9d:	test   rax,rax
  404ea0:	mov    rbp,rax
  404ea3:	jne    0x405cbb
  404ea9:	test   r15d,r15d
  404eac:	jne    0x405cbb
  404eb2:	lea    rcx,[rip+0x3917]        # 0x4087d0
  404eb9:	call   0x403368
  404ebe:	xor    edi,edi
  404ec0:	mov    rdx,rbx
  404ec3:	mov    rcx,rax
  404ec6:	xor    ebx,ebx
  404ec8:	xor    r12d,r12d
  404ecb:	call   0x403268
  404ed0:	cmp    QWORD PTR [rsp+0x68],0x0
  404ed6:	jne    0x4066fa
  404edc:	xor    ebp,ebp
  404ede:	test   r12,r12
  404ee1:	je     0x4066db
  404ee7:	mov    rcx,r12
  404eea:	call   0x403128
  404eef:	mov    rcx,rbx
  404ef2:	call   0x403338
  404ef7:	mov    rcx,rdi
  404efa:	call   0x403338
  404eff:	mov    rcx,QWORD PTR [rsp+0x78]
  404f04:	call   0x4032d0
  404f09:	test   ebp,ebp
  404f0b:	mov    eax,0x0
  404f10:	cmovne r14d,eax
  404f14:	mov    rcx,r13
  404f17:	call   0x403338
  404f1c:	mov    rcx,rsi
  404f1f:	call   0x403338
  404f24:	mov    eax,r14d
  404f27:	add    rsp,0x138
  404f2e:	pop    rbx
  404f2f:	pop    rsi
  404f30:	pop    rdi
  404f31:	pop    rbp
  404f32:	pop    r12
  404f34:	pop    r13
  404f36:	pop    r14
  404f38:	pop    r15
  404f3a:	ret    
  404f3b:	test   r15d,r15d
  404f3e:	jne    0x404f69
  404f40:	lea    rcx,[rip+0x3b19]        # 0x408a60
  404f47:	mov    rdx,rbx
  404f4a:	call   0x403268
  404f4f:	lea    rdx,[rsp+0x188]
  404f57:	lea    rcx,[rsp+0x180]
  404f5f:	xor    r8d,r8d
  404f62:	call   0x4028d0
  404f67:	jmp    0x404f14
  404f69:	lea    rcx,[rip+0x3ac8]        # 0x408a38
  404f70:	xor    r14d,r14d
  404f73:	call   0x403270
  404f78:	jmp    0x404f14
  404f7a:	lea    rdi,[rsp+0x188]
  404f82:	lea    r8,[rip+0x3557]        # 0x4084e0
  404f89:	lea    rcx,[rsp+0x180]
  404f91:	mov    rdx,rdi
  404f94:	call   0x402b40
  404f99:	xor    ecx,ecx
  404f9b:	call   0x4032c0
  404fa0:	xor    edx,edx
  404fa2:	mov    rcx,rax
  404fa5:	mov    rbx,rax
  404fa8:	call   0x4032a8
  404fad:	lea    rcx,[rip+0x3531]        # 0x4084e5
  404fb4:	call   0x403368
  404fb9:	mov    rcx,rbx
  404fbc:	mov    rdx,rax
  404fbf:	call   0x403298
  404fc4:	lea    r8,[rip+0x30a8]        # 0x408073
  404fcb:	lea    rdx,[rip+0x3fee]        # 0x408fc0
  404fd2:	mov    rcx,rbx
  404fd5:	call   0x4032d8
  404fda:	call   0x401680
  404fdf:	mov    rcx,rbx
  404fe2:	mov    rdx,rax
  404fe5:	call   0x4032e0
  404fea:	lea    rdx,[rsp+0x180]
  404ff2:	xor    r9d,r9d
  404ff5:	mov    r8,rdi
  404ff8:	mov    rcx,rbx
  404ffb:	call   0x4032b8
  405000:	test   eax,eax
  405002:	jne    0x40500d
  405004:	test   r15d,r15d
  405007:	je     0x4055ca
  40500d:	lea    rax,[rsp+0xa8]
  405015:	mov    QWORD PTR [rsp+0xa8],0x0
  405021:	mov    rcx,rax
  405024:	mov    QWORD PTR [rsp+0x70],rax
  405029:	call   0x402eb0
  40502e:	test   rax,rax
  405031:	mov    QWORD PTR [rsp+0x68],rax
  405036:	je     0x405962
  40503c:	test   r15d,r15d
  40503f:	jne    0x40558d
  405045:	mov    rcx,QWORD PTR [rip+0x7044]        # 0x40c090
  40504c:	test   rcx,rcx
  40504f:	je     0x405c65
  405055:	call   0x4031b0
  40505a:	test   eax,eax
  40505c:	je     0x405ba8
  405062:	mov    rcx,QWORD PTR [rip+0x701f]        # 0x40c088
  405069:	test   rcx,rcx
  40506c:	je     0x40670d
  405072:	mov    edx,0x2e
  405077:	call   0x4048f0
  40507c:	test   rax,rax
  40507f:	mov    rbp,rax
  405082:	je     0x406028
  405088:	lea    rcx,[rax+0x1]
  40508c:	call   0x403218
  405091:	mov    rcx,QWORD PTR [rip+0x6ff0]        # 0x40c088
  405098:	mov    rdx,rbp
  40509b:	mov    rdi,rax
  40509e:	sub    rdx,rcx
  4050a1:	call   0x4031e0
  4050a6:	mov    rcx,rax
  4050a9:	mov    rbp,rax
  4050ac:	call   0x4030c8
  4050b1:	test   eax,eax
  4050b3:	jne    0x405a72
  4050b9:	lea    rcx,[rip+0x3538]        # 0x4085f8
  4050c0:	call   0x403368
  4050c5:	mov    rdx,rbp
  4050c8:	mov    rcx,rax
  4050cb:	call   0x403268
  4050d0:	mov    rcx,QWORD PTR [rsp+0x68]
  4050d5:	call   0x403120
  4050da:	mov    rcx,rbp
  4050dd:	call   0x403338
  4050e2:	mov    rcx,rdi
  4050e5:	call   0x403338
  4050ea:	mov    rcx,rbx
  4050ed:	call   0x4032d0
  4050f2:	jmp    0x404f14
  4050f7:	test   r15d,r15d
  4050fa:	jne    0x404f14
  405100:	lea    rdx,[rsp+0x188]
  405108:	lea    rcx,[rsp+0x180]
  405110:	mov    r8d,0x1
  405116:	xor    r14d,r14d
  405119:	call   0x4028d0
  40511e:	jmp    0x404f14
  405123:	lea    rdi,[rsp+0x188]
  40512b:	lea    r8,[rip+0x382c]        # 0x40895e
  405132:	lea    rcx,[rsp+0x180]
  40513a:	mov    rdx,rdi
  40513d:	call   0x402b40
  405142:	xor    ecx,ecx
  405144:	call   0x4032c0
  405149:	test   r15d,r15d
  40514c:	mov    rbx,rax
  40514f:	jne    0x4056a8
  405155:	xor    edx,edx
  405157:	mov    rcx,rax
  40515a:	xor    r12d,r12d
  40515d:	call   0x4032a8
  405162:	lea    rcx,[rip+0x3800]        # 0x408969
  405169:	xor    ebp,ebp
  40516b:	call   0x403368
  405170:	mov    rcx,rbx
  405173:	mov    rdx,rax
  405176:	call   0x403298
  40517b:	lea    r8,[rip+0x2ef1]        # 0x408073
  405182:	lea    rdx,[rip+0x3af7]        # 0x408c80
  405189:	mov    rcx,rbx
  40518c:	call   0x4032d8
  405191:	call   0x401680
  405196:	mov    rcx,rbx
  405199:	mov    rdx,rax
  40519c:	call   0x4032e0
  4051a1:	lea    rdx,[rsp+0x180]
  4051a9:	xor    r9d,r9d
  4051ac:	mov    r8,rdi
  4051af:	mov    rcx,rbx
  4051b2:	call   0x4032b8
  4051b7:	mov    edx,r15d
  4051ba:	xor    edx,0x1
  4051bd:	mov    edi,edx
  4051bf:	and    edi,0x1
  4051c2:	test   eax,eax
  4051c4:	mov    BYTE PTR [rsp+0x68],dil
  4051c9:	jne    0x4051d4
  4051cb:	test   dil,dil
  4051ce:	jne    0x405596
  4051d4:	lea    rcx,[rsp+0xb0]
  4051dc:	mov    QWORD PTR [rsp+0xb0],0x0
  4051e8:	call   0x402eb0
  4051ed:	test   rax,rax
  4051f0:	mov    rdi,rax
  4051f3:	je     0x405677
  4051f9:	mov    rcx,rax
  4051fc:	call   0x4030f0
  405201:	test   rax,rax
  405204:	je     0x405651
  40520a:	test   r12d,r12d
  40520d:	jne    0x4058d4
  405213:	cmp    QWORD PTR [rip+0x6e4d],0x0        # 0x40c068
  40521b:	je     0x405a23
  405221:	test   r15d,r15d
  405224:	jne    0x4059ea
  40522a:	test   ebp,ebp
  40522c:	jne    0x405993
  405232:	mov    rcx,QWORD PTR [rip+0x6e2f]        # 0x40c068
  405239:	call   0x4030b8
  40523e:	test   eax,eax
  405240:	je     0x40616d
  405246:	mov    rcx,QWORD PTR [rip+0x6e13]        # 0x40c060
  40524d:	test   rcx,rcx
  405250:	je     0x40612b
  405256:	test   r15d,r15d
  405259:	jne    0x405e4b
  40525f:	call   0x4031b0
  405264:	test   eax,eax
  405266:	je     0x4065a7
  40526c:	mov    rdx,QWORD PTR [rip+0x6ded]        # 0x40c060
  405273:	xor    r8d,r8d
  405276:	mov    rcx,rdi
  405279:	call   0x4026e0
  40527e:	mov    rcx,rdi
  405281:	mov    ebp,eax
  405283:	call   0x403120
  405288:	mov    rcx,rbx
  40528b:	call   0x4032d0
  405290:	test   ebp,ebp
  405292:	cmovne r14d,r15d
  405296:	jmp    0x404f14
  40529b:	lea    rdx,[rsp+0x188]
  4052a3:	lea    rcx,[rsp+0x180]
  4052ab:	xor    r8d,r8d
  4052ae:	xor    esi,esi
  4052b0:	xor    r13d,r13d
  4052b3:	mov    r14d,0x1
  4052b9:	call   0x4028d0
  4052be:	jmp    0x404f14
  4052c3:	lea    rdi,[rsp+0x188]
  4052cb:	lea    r8,[rip+0x36d3]        # 0x4089a5
  4052d2:	lea    rcx,[rsp+0x180]
  4052da:	mov    rdx,rdi
  4052dd:	call   0x402b40
  4052e2:	xor    ecx,ecx
  4052e4:	call   0x4032c0
  4052e9:	test   r15d,r15d
  4052ec:	mov    rbx,rax
  4052ef:	jne    0x4057a2
  4052f5:	xor    edx,edx
  4052f7:	mov    rcx,rax
  4052fa:	xor    r12d,r12d
  4052fd:	call   0x4032a8
  405302:	lea    rcx,[rip+0x36a4]        # 0x4089ad
  405309:	xor    ebp,ebp
  40530b:	call   0x403368
  405310:	mov    rcx,rbx
  405313:	mov    rdx,rax
  405316:	call   0x403298
  40531b:	lea    r8,[rip+0x2d51]        # 0x408073
  405322:	lea    rdx,[rip+0x3817]        # 0x408b40
  405329:	mov    rcx,rbx
  40532c:	call   0x4032d8
  405331:	call   0x401680
  405336:	mov    rcx,rbx
  405339:	mov    rdx,rax
  40533c:	call   0x4032e0
  405341:	lea    rdx,[rsp+0x180]
  405349:	xor    r9d,r9d
  40534c:	mov    r8,rdi
  40534f:	mov    rcx,rbx
  405352:	call   0x4032b8
  405357:	mov    edx,r15d
  40535a:	xor    edx,0x1
  40535d:	mov    edi,edx
  40535f:	and    edi,0x1
  405362:	test   eax,eax
  405364:	mov    BYTE PTR [rsp+0x68],dil
  405369:	jne    0x405374
  40536b:	test   dil,dil
  40536e:	jne    0x405596
  405374:	lea    rcx,[rsp+0xb0]
  40537c:	mov    QWORD PTR [rsp+0xb0],0x0
  405388:	call   0x402eb0
  40538d:	test   rax,rax
  405390:	mov    rdi,rax
  405393:	je     0x405677
  405399:	mov    rcx,rax
  40539c:	call   0x4030f0
  4053a1:	test   rax,rax
  4053a4:	je     0x405641
  4053aa:	test   r12d,r12d
  4053ad:	jne    0x4058d4
  4053b3:	cmp    QWORD PTR [rip+0x6c8d],0x0        # 0x40c048
  4053bb:	je     0x405a23
  4053c1:	test   r15d,r15d
  4053c4:	jne    0x405be8
  4053ca:	mov    rcx,QWORD PTR [rip+0x6c77]        # 0x40c048
  4053d1:	call   0x4030b8
  4053d6:	test   eax,eax
  4053d8:	je     0x405c21
  4053de:	test   ebp,ebp
  4053e0:	jne    0x405b8d
  4053e6:	mov    rcx,QWORD PTR [rip+0x6c53]        # 0x40c040
  4053ed:	test   rcx,rcx
  4053f0:	je     0x405c44
  4053f6:	test   r15d,r15d
  4053f9:	jne    0x405fc3
  4053ff:	call   0x4031b0
  405404:	test   eax,eax
  405406:	je     0x406701
  40540c:	mov    rdx,QWORD PTR [rip+0x6c2d]        # 0x40c040
  405413:	test   rdx,rdx
  405416:	je     0x405c4d
  40541c:	mov    r8,QWORD PTR [rip+0x6c25]        # 0x40c048
  405423:	lea    rcx,[rip+0x359e]        # 0x4089c8
  40542a:	call   0x403270
  40542f:	xor    edx,edx
  405431:	xor    ecx,ecx
  405433:	xor    r14d,r14d
  405436:	call   0x4032f8
  40543b:	mov    rdx,QWORD PTR [rip+0x6c06]        # 0x40c048
  405442:	mov    rbp,rax
  405445:	lea    rax,[rip+0xffffffffffffd444]        # 0x402890
  40544c:	lea    r9,[rip+0xffffffffffffd9ad]        # 0x402e00
  405453:	mov    r8d,0x1
  405459:	mov    rcx,rdi
  40545c:	mov    QWORD PTR [rsp+0x30],0x0
  405465:	mov    QWORD PTR [rsp+0x28],0x0
  40546e:	mov    QWORD PTR [rsp+0x20],rax
  405473:	call   0x403110
  405478:	mov    rcx,rbp
  40547b:	call   0x4032f0
  405480:	mov    rcx,rbp
  405483:	call   0x4032e8
  405488:	mov    rcx,rdi
  40548b:	call   0x403120
  405490:	mov    rcx,rbx
  405493:	call   0x4032d0
  405498:	jmp    0x404f14
  40549d:	movsxd rax,DWORD PTR [rsp+0x180]
  4054a5:	cmp    eax,0x1
  4054a8:	jle    0x404d8f
  4054ae:	mov    rdx,QWORD PTR [rsp+0x188]
  4054b6:	xor    r12d,r12d
  4054b9:	mov    rcx,QWORD PTR [rdx+rax*8-0x8]
  4054be:	lea    rdx,[rip+0x3227]        # 0x4086ec
  4054c5:	call   0x403220
  4054ca:	test   eax,eax
  4054cc:	jne    0x4054eb
  4054ce:	mov    eax,DWORD PTR [rsp+0x180]
  4054d5:	lea    rdx,[rsp+0x180]
  4054dd:	mov    r8,rdi
  4054e0:	mov    r12b,0x1
  4054e3:	lea    ecx,[rax-0x1]
  4054e6:	call   0x402ab0
  4054eb:	movsxd rax,DWORD PTR [rsp+0x180]
  4054f3:	cmp    eax,0x1
  4054f6:	jle    0x406648
  4054fc:	mov    rdx,QWORD PTR [rsp+0x188]
  405504:	xor    ebp,ebp
  405506:	mov    rcx,QWORD PTR [rdx+rax*8-0x8]
  40550b:	lea    rdx,[rip+0x31e1]        # 0x4086f3
  405512:	call   0x403220
  405517:	test   eax,eax
  405519:	jne    0x405538
  40551b:	mov    eax,DWORD PTR [rsp+0x180]
  405522:	lea    rdx,[rsp+0x180]
  40552a:	mov    r8,rdi
  40552d:	mov    bpl,0x1
  405530:	lea    ecx,[rax-0x1]
  405533:	call   0x402ab0
  405538:	movsxd rax,DWORD PTR [rsp+0x180]
  405540:	cmp    eax,0x1
  405543:	jle    0x404d94
  405549:	mov    rdx,QWORD PTR [rsp+0x188]
  405551:	xor    ebx,ebx
  405553:	mov    rcx,QWORD PTR [rdx+rax*8-0x8]
  405558:	lea    rdx,[rip+0x31a2]        # 0x408701
  40555f:	call   0x403220
  405564:	test   eax,eax
  405566:	jne    0x404d96
  40556c:	mov    eax,DWORD PTR [rsp+0x180]
  405573:	lea    rdx,[rsp+0x180]
  40557b:	mov    r8,rdi
  40557e:	mov    bl,0x1
  405580:	lea    ecx,[rax-0x1]
  405583:	call   0x402ab0
  405588:	jmp    0x404d96
  40558d:	xor    edi,edi
  40558f:	xor    ebp,ebp
  405591:	jmp    0x4050d0
  405596:	xor    r8d,r8d
  405599:	xor    edx,edx
  40559b:	mov    rcx,rbx
  40559e:	call   0x4032c8
  4055a3:	lea    rcx,[rip+0x2d00]        # 0x4082aa
  4055aa:	mov    rdi,rax
  4055ad:	mov    rdx,rax
  4055b0:	call   0x403268
  4055b5:	mov    rcx,rdi
  4055b8:	call   0x403338
  4055bd:	mov    rcx,rbx
  4055c0:	call   0x4032d0
  4055c5:	jmp    0x404f14
  4055ca:	xor    r8d,r8d
  4055cd:	xor    edx,edx
  4055cf:	mov    rcx,rbx
  4055d2:	call   0x4032c8
  4055d7:	lea    rcx,[rip+0x2ccc]        # 0x4082aa
  4055de:	mov    rdi,rax
  4055e1:	mov    rdx,rax
  4055e4:	call   0x403268
  4055e9:	mov    rcx,rdi
  4055ec:	call   0x403338
  4055f1:	xor    ecx,ecx
  4055f3:	call   0x403338
  4055f8:	xor    ecx,ecx
  4055fa:	call   0x403338
  4055ff:	mov    rcx,rbx
  405602:	call   0x4032d0
  405607:	jmp    0x404f14
  40560c:	mov    rcx,QWORD PTR [rsp+0x78]
  405611:	xor    r8d,r8d
  405614:	xor    edx,edx
  405616:	xor    edi,edi
  405618:	xor    r12d,r12d
  40561b:	call   0x4032c8
  405620:	lea    rcx,[rip+0x2c83]        # 0x4082aa
  405627:	mov    rbx,rax
  40562a:	mov    rdx,rax
  40562d:	call   0x403268
  405632:	mov    rcx,rbx
  405635:	xor    ebx,ebx
  405637:	call   0x403338
  40563c:	jmp    0x404edc
  405641:	cmp    BYTE PTR [rsp+0x68],0x0
  405646:	je     0x4053de
  40564c:	jmp    0x4053ca
  405651:	test   ebp,ebp
  405653:	jne    0x405993
  405659:	cmp    BYTE PTR [rsp+0x68],0x0
  40565e:	je     0x405246
  405664:	jmp    0x405232
  405669:	test   dil,dil
  40566c:	je     0x404e3c
  405672:	jmp    0x404e28
  405677:	test   r15d,r15d
  40567a:	je     0x4058eb
  405680:	lea    rdx,[rip+0x2e6d]        # 0x4084f4
  405687:	mov    rcx,rsi
  40568a:	call   0x403220
  40568f:	test   eax,eax
  405691:	jne    0x405a3d
  405697:	lea    rcx,[rip+0x2e60]        # 0x4084fe
  40569e:	call   0x403270
  4056a3:	jmp    0x4055bd
  4056a8:	mov    rcx,rax
  4056ab:	mov    edx,0x1
  4056b0:	call   0x4032a0
  4056b5:	xor    edx,edx
  4056b7:	mov    rcx,rbx
  4056ba:	call   0x4032a8
  4056bf:	lea    rcx,[rip+0x32a3]        # 0x408969
  4056c6:	call   0x403368
  4056cb:	mov    rcx,rbx
  4056ce:	mov    rdx,rax
  4056d1:	call   0x403298
  4056d6:	lea    r8,[rip+0x2996]        # 0x408073
  4056dd:	lea    rdx,[rip+0x359c]        # 0x408c80
  4056e4:	mov    rcx,rbx
  4056e7:	call   0x4032d8
  4056ec:	call   0x401680
  4056f1:	mov    rcx,rbx
  4056f4:	mov    rdx,rax
  4056f7:	call   0x4032e0
  4056fc:	movsxd rax,DWORD PTR [rsp+0x180]
  405704:	cmp    eax,0x1
  405707:	jg     0x405713
  405709:	xor    r12d,r12d
  40570c:	xor    ebp,ebp
  40570e:	jmp    0x4051a1
  405713:	mov    rdx,QWORD PTR [rsp+0x188]
  40571b:	xor    r12d,r12d
  40571e:	mov    rcx,QWORD PTR [rdx+rax*8-0x8]
  405723:	lea    rdx,[rip+0x2fc2]        # 0x4086ec
  40572a:	call   0x403220
  40572f:	test   eax,eax
  405731:	jne    0x405750
  405733:	mov    eax,DWORD PTR [rsp+0x180]
  40573a:	lea    rdx,[rsp+0x180]
  405742:	mov    r8,rdi
  405745:	mov    r12b,0x1
  405748:	lea    ecx,[rax-0x1]
  40574b:	call   0x402ab0
  405750:	movsxd rax,DWORD PTR [rsp+0x180]
  405758:	cmp    eax,0x1
  40575b:	jle    0x40570c
  40575d:	mov    rdx,QWORD PTR [rsp+0x188]
  405765:	xor    ebp,ebp
  405767:	mov    rcx,QWORD PTR [rdx+rax*8-0x8]
  40576c:	lea    rdx,[rip+0x2f80]        # 0x4086f3
  405773:	call   0x403220
  405778:	test   eax,eax
  40577a:	jne    0x4051a1
  405780:	mov    eax,DWORD PTR [rsp+0x180]
  405787:	lea    rdx,[rsp+0x180]
  40578f:	mov    r8,rdi
  405792:	mov    bpl,0x1
  405795:	lea    ecx,[rax-0x1]
  405798:	call   0x402ab0
  40579d:	jmp    0x4051a1
  4057a2:	mov    rcx,rax
  4057a5:	mov    edx,0x1
  4057aa:	call   0x4032a0
  4057af:	xor    edx,edx
  4057b1:	mov    rcx,rbx
  4057b4:	call   0x4032a8
  4057b9:	lea    rcx,[rip+0x31ed]        # 0x4089ad
  4057c0:	call   0x403368
  4057c5:	mov    rcx,rbx
  4057c8:	mov    rdx,rax
  4057cb:	call   0x403298
  4057d0:	lea    r8,[rip+0x289c]        # 0x408073
  4057d7:	lea    rdx,[rip+0x3362]        # 0x408b40
  4057de:	mov    rcx,rbx
  4057e1:	call   0x4032d8
  4057e6:	call   0x401680
  4057eb:	mov    rcx,rbx
  4057ee:	mov    rdx,rax
  4057f1:	call   0x4032e0
  4057f6:	movsxd rax,DWORD PTR [rsp+0x180]
  4057fe:	cmp    eax,0x1
  405801:	jg     0x40580d
  405803:	xor    r12d,r12d
  405806:	xor    ebp,ebp
  405808:	jmp    0x405341
  40580d:	mov    rdx,QWORD PTR [rsp+0x188]
  405815:	xor    r12d,r12d
  405818:	mov    rcx,QWORD PTR [rdx+rax*8-0x8]
  40581d:	lea    rdx,[rip+0x2ec8]        # 0x4086ec
  405824:	call   0x403220
  405829:	test   eax,eax
  40582b:	jne    0x40584a
  40582d:	mov    eax,DWORD PTR [rsp+0x180]
  405834:	lea    rdx,[rsp+0x180]
  40583c:	mov    r8,rdi
  40583f:	mov    r12b,0x1
  405842:	lea    ecx,[rax-0x1]
  405845:	call   0x402ab0
  40584a:	movsxd rax,DWORD PTR [rsp+0x180]
  405852:	cmp    eax,0x1
  405855:	jle    0x405806
  405857:	mov    rdx,QWORD PTR [rsp+0x188]
  40585f:	xor    ebp,ebp
  405861:	mov    rcx,QWORD PTR [rdx+rax*8-0x8]
  405866:	lea    rdx,[rip+0x2e86]        # 0x4086f3
  40586d:	call   0x403220
  405872:	test   eax,eax
  405874:	jne    0x405341
  40587a:	mov    eax,DWORD PTR [rsp+0x180]
  405881:	lea    rdx,[rsp+0x180]
  405889:	mov    r8,rdi
  40588c:	mov    bpl,0x1
  40588f:	lea    ecx,[rax-0x1]
  405892:	call   0x402ab0
  405897:	jmp    0x405341
  40589c:	test   r15d,r15d
  40589f:	je     0x4059ae
  4058a5:	lea    rdx,[rip+0x2c48]        # 0x4084f4
  4058ac:	mov    rcx,rsi
  4058af:	call   0x403220
  4058b4:	test   eax,eax
  4058b6:	jne    0x405c82
  4058bc:	lea    rcx,[rip+0x2c3b]        # 0x4084fe
  4058c3:	xor    edi,edi
  4058c5:	xor    ebx,ebx
  4058c7:	xor    r12d,r12d
  4058ca:	call   0x403270
  4058cf:	jmp    0x404edc
  4058d4:	xor    edx,edx
  4058d6:	mov    rcx,rdi
  4058d9:	call   0x401740
  4058de:	mov    rcx,rdi
  4058e1:	call   0x403120
  4058e6:	jmp    0x4055bd
  4058eb:	mov    rax,QWORD PTR [rsp+0xb0]
  4058f3:	lea    rcx,[rip+0x2c3f]        # 0x408539
  4058fa:	mov    rdi,QWORD PTR [rax+0x8]
  4058fe:	call   0x403368
  405903:	mov    rcx,rax
  405906:	mov    rdx,rdi
  405909:	call   0x403268
  40590e:	mov    rcx,QWORD PTR [rsp+0xb0]
  405916:	call   0x403340
  40591b:	jmp    0x4055bd
  405920:	lea    rcx,[rip+0x2dc5]        # 0x4086ec
  405927:	mov    rdx,rsi
  40592a:	call   0x403220
  40592f:	test   eax,eax
  405931:	jne    0x404e3c
  405937:	mov    rcx,QWORD PTR [rip+0x6742]        # 0x40c080
  40593e:	lea    rdx,[rip+0x27a4]        # 0x4080e9
  405945:	call   0x403230
  40594a:	mov    edx,eax
  40594c:	mov    rcx,QWORD PTR [rsp+0x68]
  405951:	xor    edi,edi
  405953:	xor    ebx,ebx
  405955:	xor    r12d,r12d
  405958:	call   0x401740
  40595d:	jmp    0x404ed0
  405962:	test   r15d,r15d
  405965:	je     0x4060f6
  40596b:	lea    rdx,[rip+0x2b82]        # 0x4084f4
  405972:	mov    rcx,rsi
  405975:	call   0x403220
  40597a:	test   eax,eax
  40597c:	jne    0x4060e5
  405982:	lea    rcx,[rip+0x2b75]        # 0x4084fe
  405989:	call   0x403270
  40598e:	jmp    0x4055f1
  405993:	mov    rdx,QWORD PTR [rip+0x66ce]        # 0x40c068
  40599a:	lea    r8,[rip+0x28fb]        # 0x40829c
  4059a1:	mov    rcx,rdi
  4059a4:	call   0x402be0
  4059a9:	jmp    0x4058de
  4059ae:	mov    rax,QWORD PTR [rsp+0xa8]
  4059b6:	lea    rcx,[rip+0x2b7c]        # 0x408539
  4059bd:	xor    edi,edi
  4059bf:	xor    r12d,r12d
  4059c2:	mov    rbx,QWORD PTR [rax+0x8]
  4059c6:	call   0x403368
  4059cb:	mov    rcx,rax
  4059ce:	mov    rdx,rbx
  4059d1:	xor    ebx,ebx
  4059d3:	call   0x403268
  4059d8:	mov    rcx,QWORD PTR [rsp+0xa8]
  4059e0:	call   0x403340
  4059e5:	jmp    0x404edc
  4059ea:	lea    rcx,[rip+0x2cfb]        # 0x4086ec
  4059f1:	mov    rdx,rsi
  4059f4:	call   0x403220
  4059f9:	test   eax,eax
  4059fb:	jne    0x405651
  405a01:	mov    rcx,QWORD PTR [rip+0x6660]        # 0x40c068
  405a08:	lea    rdx,[rip+0x26da]        # 0x4080e9
  405a0f:	call   0x403230
  405a14:	mov    rcx,rdi
  405a17:	mov    edx,eax
  405a19:	call   0x401740
  405a1e:	jmp    0x4058de
  405a23:	test   r15d,r15d
  405a26:	je     0x405bcf
  405a2c:	lea    rcx,[rip+0x2cd7]        # 0x40870a
  405a33:	call   0x403270
  405a38:	jmp    0x4058de
  405a3d:	lea    rcx,[rip+0x2ad4]        # 0x408518
  405a44:	call   0x403270
  405a49:	jmp    0x4055bd
  405a4e:	mov    rdx,QWORD PTR [rip+0x662b]        # 0x40c080
  405a55:	mov    rcx,QWORD PTR [rsp+0x68]
  405a5a:	lea    r8,[rip+0x283b]        # 0x40829c
  405a61:	xor    edi,edi
  405a63:	xor    ebx,ebx
  405a65:	xor    r12d,r12d
  405a68:	call   0x402be0
  405a6d:	jmp    0x404ed0
  405a72:	mov    rcx,rdi
  405a75:	call   0x4030c0
  405a7a:	test   eax,eax
  405a7c:	je     0x405fa7
  405a82:	mov    rcx,QWORD PTR [rip+0x660f]        # 0x40c098
  405a89:	test   rcx,rcx
  405a8c:	je     0x405a9b
  405a8e:	call   0x4030b0
  405a93:	test   eax,eax
  405a95:	je     0x406699
  405a9b:	lea    r15,[rsp+0xb0]
  405aa3:	lea    rdx,[rip+0x2bd1]        # 0x40867b
  405aaa:	mov    r12d,0x1
  405ab0:	mov    rcx,r15
  405ab3:	call   0x4031c0
  405ab8:	mov    QWORD PTR [rsp+0x80],rbx
  405ac0:	jmp    0x405ad1
  405ac2:	mov    rdx,rax
  405ac5:	mov    rcx,r15
  405ac8:	add    r12d,0x1
  405acc:	call   0x4031d8
  405ad1:	cmp    r12d,DWORD PTR [rsp+0x180]
  405ad9:	jae    0x405ed6
  405adf:	mov    rax,QWORD PTR [rsp+0x188]
  405ae7:	mov    ebx,r12d
  405aea:	mov    QWORD PTR [rsp+0xa8],0x0
  405af6:	xor    r9d,r9d
  405af9:	xor    r8d,r8d
  405afc:	xor    ecx,ecx
  405afe:	mov    rdx,QWORD PTR [rax+rbx*8]
  405b02:	mov    rax,QWORD PTR [rsp+0x70]
  405b07:	mov    QWORD PTR [rsp+0x20],rax
  405b0c:	call   0x403180
  405b11:	test   rax,rax
  405b14:	jne    0x405ac2
  405b16:	mov    rax,QWORD PTR [rsp+0x188]
  405b1e:	mov    rcx,QWORD PTR [rsp+0xa8]
  405b26:	mov    rdx,QWORD PTR [rax+rbx*8]
  405b2a:	call   0x403178
  405b2f:	mov    rcx,QWORD PTR [rsp+0xa8]
  405b37:	mov    QWORD PTR [rsp+0x78],rax
  405b3c:	call   0x403340
  405b41:	mov    rax,QWORD PTR [rsp+0x188]
  405b49:	mov    QWORD PTR [rsp+0xa8],0x0
  405b55:	xor    ecx,ecx
  405b57:	mov    r8,QWORD PTR [rsp+0x70]
  405b5c:	mov    rdx,QWORD PTR [rax+rbx*8]
  405b60:	call   0x402f70
  405b65:	test   rax,rax
  405b68:	je     0x406651
  405b6e:	mov    rcx,QWORD PTR [rsp+0x78]
  405b73:	mov    QWORD PTR [rsp+0x88],rax
  405b7b:	call   0x403338
  405b80:	mov    rax,QWORD PTR [rsp+0x88]
  405b88:	jmp    0x405ac2
  405b8d:	mov    rdx,QWORD PTR [rip+0x64b4]        # 0x40c048
  405b94:	lea    r8,[rip+0x2701]        # 0x40829c
  405b9b:	mov    rcx,rdi
  405b9e:	call   0x402be0
  405ba3:	jmp    0x4058de
  405ba8:	mov    rdi,QWORD PTR [rip+0x64e1]        # 0x40c090
  405baf:	lea    rcx,[rip+0x29c2]        # 0x408578
  405bb6:	xor    ebp,ebp
  405bb8:	call   0x403368
  405bbd:	mov    rdx,rdi
  405bc0:	mov    rcx,rax
  405bc3:	xor    edi,edi
  405bc5:	call   0x403268
  405bca:	jmp    0x4050d0
  405bcf:	lea    rcx,[rip+0x2b42]        # 0x408718
  405bd6:	call   0x403368
  405bdb:	mov    rcx,rax
  405bde:	call   0x403268
  405be3:	jmp    0x4058de
  405be8:	lea    rcx,[rip+0x2afd]        # 0x4086ec
  405bef:	mov    rdx,rsi
  405bf2:	call   0x403220
  405bf7:	test   eax,eax
  405bf9:	jne    0x4053de
  405bff:	mov    rcx,QWORD PTR [rip+0x6442]        # 0x40c048
  405c06:	lea    rdx,[rip+0x24dc]        # 0x4080e9
  405c0d:	call   0x403230
  405c12:	mov    rcx,rdi
  405c15:	mov    edx,eax
  405c17:	call   0x401740
  405c1c:	jmp    0x4058de
  405c21:	mov    rbp,QWORD PTR [rip+0x6420]        # 0x40c048
  405c28:	lea    rcx,[rip+0x2b11]        # 0x408740
  405c2f:	call   0x403368
  405c34:	mov    rdx,rbp
  405c37:	mov    rcx,rax
  405c3a:	call   0x403268
  405c3f:	jmp    0x4058de
  405c44:	test   r15d,r15d
  405c47:	jne    0x406637
  405c4d:	mov    rdx,QWORD PTR [rip+0x63f4]        # 0x40c048
  405c54:	lea    rcx,[rip+0x2d9d]        # 0x4089f8
  405c5b:	call   0x403270
  405c60:	jmp    0x40542f
  405c65:	lea    rcx,[rip+0x28e4]        # 0x408550
  405c6c:	call   0x403368
  405c71:	mov    rcx,rax
  405c74:	xor    edi,edi
  405c76:	xor    ebp,ebp
  405c78:	call   0x403268
  405c7d:	jmp    0x4050d0
  405c82:	lea    rcx,[rip+0x288f]        # 0x408518
  405c89:	xor    edi,edi
  405c8b:	xor    ebx,ebx
  405c8d:	xor    r12d,r12d
  405c90:	call   0x403270
  405c95:	jmp    0x404edc
  405c9a:	test   r15d,r15d
  405c9d:	je     0x40614d
  405ca3:	lea    rcx,[rip+0x2a60]        # 0x40870a
  405caa:	xor    edi,edi
  405cac:	xor    ebx,ebx
  405cae:	xor    r12d,r12d
  405cb1:	call   0x403270
  405cb6:	jmp    0x404ed0
  405cbb:	lea    rcx,[rbp+0x1]
  405cbf:	xor    r12d,r12d
  405cc2:	call   0x403218
  405cc7:	mov    rcx,QWORD PTR [rip+0x63a2]        # 0x40c070
  405cce:	mov    rdx,rbp
  405cd1:	mov    rdi,rax
  405cd4:	sub    rdx,rcx
  405cd7:	call   0x4031e0
  405cdc:	test   r15d,r15d
  405cdf:	mov    rbx,rax
  405ce2:	jne    0x404ed0
  405ce8:	lea    rcx,[rip+0x23fc]        # 0x4080eb
  405cef:	mov    r12,QWORD PTR [rip+0x6382]        # 0x40c078
  405cf6:	mov    rbp,QWORD PTR [rip+0x6383]        # 0x40c080
  405cfd:	lea    r15,[rsp+0xb0]
  405d05:	call   0x403158
  405d0a:	mov    rcx,QWORD PTR [rsp+0x70]
  405d0f:	mov    QWORD PTR [rsp+0x30],rax
  405d14:	lea    rax,[rip+0x23f9]        # 0x408114
  405d1b:	lea    r9,[rip+0x23ce]        # 0x4080f0
  405d22:	mov    r8,r12
  405d25:	mov    QWORD PTR [rsp+0x48],0x0
  405d2e:	mov    DWORD PTR [rsp+0x40],0xbb8
  405d36:	mov    DWORD PTR [rsp+0x38],0x0
  405d3e:	mov    rdx,rbp
  405d41:	mov    QWORD PTR [rsp+0x50],rcx
  405d46:	mov    rcx,QWORD PTR [rsp+0x68]
  405d4b:	mov    QWORD PTR [rsp+0x28],0x0
  405d54:	mov    QWORD PTR [rsp+0x20],rax
  405d59:	call   0x403108
  405d5e:	test   rax,rax
  405d61:	mov    r12,rax
  405d64:	je     0x4061be
  405d6a:	lea    rdx,[rip+0x23ae]        # 0x40811f
  405d71:	mov    rcx,rax
  405d74:	mov    r8,r15
  405d77:	call   0x4031b8
  405d7c:	mov    rdx,QWORD PTR [rsp+0x70]
  405d81:	mov    rcx,QWORD PTR [rsp+0xb0]
  405d89:	call   0x4030a0
  405d8e:	test   rax,rax
  405d91:	mov    QWORD PTR [rsp+0x80],rax
  405d99:	je     0x4061b6
  405d9f:	mov    rdx,rbx
  405da2:	mov    rcx,rax
  405da5:	call   0x4030a8
  405daa:	test   rax,rax
  405dad:	je     0x406577
  405db3:	mov    rdx,rdi
  405db6:	mov    rcx,rax
  405db9:	call   0x4030d0
  405dbe:	test   rax,rax
  405dc1:	mov    QWORD PTR [rsp+0x88],rax
  405dc9:	je     0x406179
  405dcf:	lea    rcx,[rip+0xffffffffffffd372]        # 0x403148
  405dd6:	call   0x403258
  405ddb:	xor    r8d,r8d
  405dde:	mov    rbp,rax
  405de1:	jmp    0x405e17
  405de3:	mov    edx,r8d
  405de6:	mov    rax,QWORD PTR [rax+rdx*8]
  405dea:	test   rax,rax
  405ded:	je     0x405e28
  405def:	mov    rcx,QWORD PTR [rax+0x10]
  405df3:	mov    DWORD PTR [rsp+0x90],r8d
  405dfb:	call   0x403138
  405e00:	mov    rcx,rbp
  405e03:	mov    rdx,rax
  405e06:	call   0x403260
  405e0b:	mov    r8d,DWORD PTR [rsp+0x90]
  405e13:	add    r8d,0x1
  405e17:	mov    rax,QWORD PTR [rsp+0x88]
  405e1f:	mov    rax,QWORD PTR [rax+0x10]
  405e23:	test   rax,rax
  405e26:	jne    0x405de3
  405e28:	mov    rcx,QWORD PTR [rsp+0x80]
  405e30:	call   0x403098
  405e35:	mov    rcx,r12
  405e38:	call   0x403128
  405e3d:	test   rbp,rbp
  405e40:	jne    0x4061d9
  405e46:	jmp    0x4061be
  405e4b:	lea    rcx,[rip+0x28a1]        # 0x4086f3
  405e52:	mov    rdx,rsi
  405e55:	call   0x403220
  405e5a:	test   eax,eax
  405e5c:	je     0x4065e9
  405e62:	cmp    QWORD PTR [rip+0x61f6],0x0        # 0x40c060
  405e6a:	je     0x4058de
  405e70:	cmp    DWORD PTR [rip+0x61dd],0x0        # 0x40c054
  405e77:	je     0x4065ca
  405e7d:	cmp    DWORD PTR [rip+0x61cc],0x0        # 0x40c050
  405e84:	jne    0x4058de
  405e8a:	lea    rcx,[rip+0x2b00]        # 0x408991
  405e91:	call   0x403270
  405e96:	jmp    0x4058de
  405e9b:	lea    rcx,[rip+0x285f]        # 0x408701
  405ea2:	mov    rdx,rsi
  405ea5:	call   0x403220
  405eaa:	test   eax,eax
  405eac:	jne    0x404e89
  405eb2:	mov    r8,QWORD PTR [rip+0x61bf]        # 0x40c078
  405eb9:	mov    rdx,QWORD PTR [rip+0x61c0]        # 0x40c080
  405ec0:	xor    edi,edi
  405ec2:	mov    rcx,QWORD PTR [rsp+0x68]
  405ec7:	xor    ebx,ebx
  405ec9:	xor    r12d,r12d
  405ecc:	call   0x4019d0
  405ed1:	jmp    0x404ed0
  405ed6:	mov    rcx,r15
  405ed9:	mov    rbx,QWORD PTR [rsp+0x80]
  405ee1:	call   0x4031c8
  405ee6:	test   rax,rax
  405ee9:	mov    r15,rax
  405eec:	je     0x405ef9
  405eee:	mov    rcx,rax
  405ef1:	call   0x403160
  405ef6:	mov    r15,rax
  405ef9:	mov    rax,QWORD PTR [rsp+0x70]
  405efe:	mov    r8,QWORD PTR [rip+0x618b]        # 0x40c090
  405f05:	mov    r9,rbp
  405f08:	mov    rdx,QWORD PTR [rip+0x6189]        # 0x40c098
  405f0f:	mov    rcx,QWORD PTR [rsp+0x68]
  405f14:	mov    QWORD PTR [rsp+0x28],r15
  405f19:	mov    QWORD PTR [rsp+0x20],rdi
  405f1e:	mov    QWORD PTR [rsp+0x30],rax
  405f23:	call   0x403100
  405f28:	test   eax,eax
  405f2a:	jne    0x406736
  405f30:	mov    rax,QWORD PTR [rsp+0xa8]
  405f38:	lea    rcx,[rip+0x2183]        # 0x4080c2
  405f3f:	mov    r12,QWORD PTR [rax+0x8]
  405f43:	call   0x403368
  405f48:	mov    rdx,r12
  405f4b:	mov    rcx,rax
  405f4e:	xor    r12d,r12d
  405f51:	call   0x403268
  405f56:	mov    rcx,QWORD PTR [rsp+0xa8]
  405f5e:	call   0x403340
  405f63:	mov    rcx,QWORD PTR [rsp+0x68]
  405f68:	call   0x403120
  405f6d:	test   r15,r15
  405f70:	je     0x4050da
  405f76:	mov    rcx,r15
  405f79:	call   0x403128
  405f7e:	mov    rcx,rbp
  405f81:	call   0x403338
  405f86:	mov    rcx,rdi
  405f89:	call   0x403338
  405f8e:	mov    rcx,rbx
  405f91:	call   0x4032d0
  405f96:	test   r12d,r12d
  405f99:	mov    eax,0x0
  405f9e:	cmovne r14d,eax
  405fa2:	jmp    0x404f14
  405fa7:	lea    rcx,[rip+0x267a]        # 0x408628
  405fae:	call   0x403368
  405fb3:	mov    rdx,rdi
  405fb6:	mov    rcx,rax
  405fb9:	call   0x403268
  405fbe:	jmp    0x4050d0
  405fc3:	lea    rcx,[rip+0x2729]        # 0x4086f3
  405fca:	mov    rdx,rsi
  405fcd:	call   0x403220
  405fd2:	test   eax,eax
  405fd4:	jne    0x4058de
  405fda:	mov    rcx,QWORD PTR [rip+0x605f]        # 0x40c040
  405fe1:	call   0x403218
  405fe6:	mov    edx,0x2f
  405feb:	mov    rcx,rax
  405fee:	mov    rbp,rax
  405ff1:	call   0x4048f0
  405ff6:	test   rax,rax
  405ff9:	je     0x406009
  405ffb:	lea    rdx,[rbp+0x1]
  405fff:	cmp    rbp,rax
  406002:	cmove  rax,rdx
  406006:	mov    BYTE PTR [rax],0x0
  406009:	mov    rdx,QWORD PTR [rip+0x6038]        # 0x40c048
  406010:	mov    rcx,rdi
  406013:	mov    r8,rbp
  406016:	call   0x402be0
  40601b:	mov    rcx,rbp
  40601e:	call   0x403338
  406023:	jmp    0x4058de
  406028:	lea    rcx,[rip+0x2591]        # 0x4085c0
  40602f:	xor    edi,edi
  406031:	call   0x403368
  406036:	mov    rcx,rax
  406039:	call   0x403268
  40603e:	jmp    0x4050d0
  406043:	mov    rbx,QWORD PTR [rip+0x6036]        # 0x40c080
  40604a:	lea    rcx,[rip+0x26ef]        # 0x408740
  406051:	jmp    0x404eb9
  406056:	test   r15d,r15d
  406059:	je     0x4066cf
  40605f:	lea    rcx,[rip+0x26fd]        # 0x408763
  406066:	xor    edi,edi
  406068:	xor    ebx,ebx
  40606a:	xor    r12d,r12d
  40606d:	call   0x403270
  406072:	jmp    0x404ed0
  406077:	lea    rcx,[rip+0x2675]        # 0x4086f3
  40607e:	mov    rdx,rsi
  406081:	call   0x403220
  406086:	test   eax,eax
  406088:	jne    0x404e6a
  40608e:	mov    rcx,QWORD PTR [rip+0x5fe3]        # 0x40c078
  406095:	call   0x403218
  40609a:	mov    edx,0x2f
  40609f:	mov    rcx,rax
  4060a2:	mov    rbx,rax
  4060a5:	call   0x4048f0
  4060aa:	test   rax,rax
  4060ad:	je     0x4060bd
  4060af:	lea    rdx,[rbx+0x1]
  4060b3:	cmp    rbx,rax
  4060b6:	cmove  rax,rdx
  4060ba:	mov    BYTE PTR [rax],0x0
  4060bd:	mov    rdx,QWORD PTR [rip+0x5fbc]        # 0x40c080
  4060c4:	mov    rcx,QWORD PTR [rsp+0x68]
  4060c9:	mov    r8,rbx
  4060cc:	xor    edi,edi
  4060ce:	xor    r12d,r12d
  4060d1:	call   0x402be0
  4060d6:	mov    rcx,rbx
  4060d9:	xor    ebx,ebx
  4060db:	call   0x403338
  4060e0:	jmp    0x404ed0
  4060e5:	lea    rcx,[rip+0x242c]        # 0x408518
  4060ec:	call   0x403270
  4060f1:	jmp    0x4055f1
  4060f6:	mov    rax,QWORD PTR [rsp+0xa8]
  4060fe:	lea    rcx,[rip+0x2434]        # 0x408539
  406105:	mov    rdi,QWORD PTR [rax+0x8]
  406109:	call   0x403368
  40610e:	mov    rcx,rax
  406111:	mov    rdx,rdi
  406114:	call   0x403268
  406119:	mov    rcx,QWORD PTR [rsp+0xa8]
  406121:	call   0x403340
  406126:	jmp    0x4055f1
  40612b:	test   r15d,r15d
  40612e:	jne    0x406637
  406134:	lea    rcx,[rip+0x263d]        # 0x408778
  40613b:	call   0x403368
  406140:	mov    rcx,rax
  406143:	call   0x403268
  406148:	jmp    0x4058de
  40614d:	lea    rcx,[rip+0x25c4]        # 0x408718
  406154:	call   0x403368
  406159:	mov    rcx,rax
  40615c:	xor    edi,edi
  40615e:	xor    ebx,ebx
  406160:	call   0x403268
  406165:	xor    r12d,r12d
  406168:	jmp    0x404ed0
  40616d:	mov    rbp,QWORD PTR [rip+0x5ef4]        # 0x40c068
  406174:	jmp    0x405c28
  406179:	lea    rcx,[rip+0x26c8]        # 0x408848
  406180:	call   0x403368
  406185:	mov    rbp,rax
  406188:	call   0x403090
  40618d:	mov    rcx,QWORD PTR [rsp+0x70]
  406192:	mov    QWORD PTR [rsp+0x28],rbx
  406197:	mov    r9,rbp
  40619a:	mov    QWORD PTR [rsp+0x20],rdi
  40619f:	xor    r8d,r8d
  4061a2:	mov    edx,eax
  4061a4:	call   0x403248
  4061a9:	mov    rcx,QWORD PTR [rsp+0x80]
  4061b1:	call   0x403098
  4061b6:	mov    rcx,r12
  4061b9:	call   0x403128
  4061be:	mov    rcx,QWORD PTR [rsp+0xa8]
  4061c6:	xor    ebp,ebp
  4061c8:	call   0x403340
  4061cd:	mov    QWORD PTR [rsp+0xa8],0x0
  4061d9:	lea    rdx,[rip+0x249b]        # 0x40867b
  4061e0:	mov    rcx,r15
  4061e3:	mov    r12d,0x1
  4061e9:	call   0x4031c0
  4061ee:	mov    QWORD PTR [rsp+0x88],rsi
  4061f6:	mov    QWORD PTR [rsp+0x90],rbx
  4061fe:	jmp    0x406252
  406200:	mov    ebx,0x0
  406205:	je     0x4062f7
  40620b:	mov    rax,QWORD PTR [rsp+0x188]
  406213:	mov    esi,r12d
  406216:	mov    QWORD PTR [rsp+0xa8],0x0
  406222:	xor    r9d,r9d
  406225:	xor    r8d,r8d
  406228:	mov    rcx,rbx
  40622b:	mov    rdx,QWORD PTR [rax+rsi*8]
  40622f:	mov    rax,QWORD PTR [rsp+0x70]
  406234:	mov    QWORD PTR [rsp+0x20],rax
  406239:	call   0x403180
  40623e:	test   rax,rax
  406241:	je     0x40627d
  406243:	mov    rdx,rax
  406246:	mov    rcx,r15
  406249:	add    r12d,0x1
  40624d:	call   0x4031d8
  406252:	cmp    r12d,DWORD PTR [rsp+0x180]
  40625a:	jae    0x4063cc
  406260:	test   rbp,rbp
  406263:	je     0x406279
  406265:	lea    edx,[r12-0x1]
  40626a:	cmp    edx,DWORD PTR [rbp+0x8]
  40626d:	jae    0x406200
  40626f:	mov    rax,QWORD PTR [rbp+0x0]
  406273:	mov    rbx,QWORD PTR [rax+rdx*8]
  406277:	jmp    0x40620b
  406279:	xor    ebx,ebx
  40627b:	jmp    0x40620b
  40627d:	mov    rax,QWORD PTR [rsp+0x188]
  406285:	mov    rcx,QWORD PTR [rsp+0xa8]
  40628d:	mov    rdx,QWORD PTR [rax+rsi*8]
  406291:	call   0x403178
  406296:	mov    rcx,QWORD PTR [rsp+0xa8]
  40629e:	mov    QWORD PTR [rsp+0x80],rax
  4062a6:	call   0x403340
  4062ab:	mov    rax,QWORD PTR [rsp+0x188]
  4062b3:	mov    QWORD PTR [rsp+0xa8],0x0
  4062bf:	mov    rcx,rbx
  4062c2:	mov    r8,QWORD PTR [rsp+0x70]
  4062c7:	mov    rdx,QWORD PTR [rax+rsi*8]
  4062cb:	call   0x402f70
  4062d0:	test   rax,rax
  4062d3:	je     0x406308
  4062d5:	mov    rcx,QWORD PTR [rsp+0x80]
  4062dd:	mov    QWORD PTR [rsp+0x98],rax
  4062e5:	call   0x403338
  4062ea:	mov    rax,QWORD PTR [rsp+0x98]
  4062f2:	jmp    0x406243
  4062f7:	lea    rcx,[rip+0x25a2]        # 0x4088a0
  4062fe:	call   0x403268
  406303:	jmp    0x40620b
  406308:	mov    rax,rbx
  40630b:	mov    rsi,QWORD PTR [rsp+0x88]
  406313:	mov    rbx,QWORD PTR [rsp+0x90]
  40631b:	test   rax,rax
  40631e:	je     0x4063ab
  406324:	mov    rcx,rax
  406327:	call   0x403150
  40632c:	lea    rcx,[rip+0x25bd]        # 0x4088f0
  406333:	mov    QWORD PTR [rsp+0x70],rax
  406338:	call   0x403368
  40633d:	mov    r9,QWORD PTR [rsp+0x80]
  406345:	mov    r8,QWORD PTR [rsp+0x70]
  40634a:	mov    rcx,rax
  40634d:	mov    edx,r12d
  406350:	call   0x403268
  406355:	mov    rcx,QWORD PTR [rsp+0x70]
  40635a:	call   0x403338
  40635f:	mov    rcx,QWORD PTR [rsp+0xa8]
  406367:	xor    r12d,r12d
  40636a:	call   0x403340
  40636f:	mov    rcx,r15
  406372:	call   0x4031d0
  406377:	mov    rcx,QWORD PTR [rsp+0x80]
  40637f:	call   0x403338
  406384:	test   rbp,rbp
  406387:	je     0x406393
  406389:	mov    rcx,rbp
  40638c:	xor    ebp,ebp
  40638e:	call   0x403250
  406393:	mov    rcx,QWORD PTR [rsp+0x68]
  406398:	call   0x403120
  40639d:	test   r12,r12
  4063a0:	jne    0x404ee7
  4063a6:	jmp    0x404eef
  4063ab:	lea    rcx,[rip+0x22ce]        # 0x408680
  4063b2:	call   0x403368
  4063b7:	mov    r8,QWORD PTR [rsp+0x80]
  4063bf:	mov    edx,r12d
  4063c2:	mov    rcx,rax
  4063c5:	call   0x403268
  4063ca:	jmp    0x40635f
  4063cc:	mov    rcx,r15
  4063cf:	mov    rsi,QWORD PTR [rsp+0x88]
  4063d7:	mov    rbx,QWORD PTR [rsp+0x90]
  4063df:	call   0x4031c8
  4063e4:	test   rax,rax
  4063e7:	mov    r12,rax
  4063ea:	je     0x4063f7
  4063ec:	mov    rcx,rax
  4063ef:	call   0x403160
  4063f4:	mov    r12,rax
  4063f7:	mov    eax,DWORD PTR [rip+0xc13]        # 0x407010
  4063fd:	mov    rcx,QWORD PTR [rsp+0x70]
  406402:	mov    r9,rbx
  406405:	mov    r8,QWORD PTR [rip+0x5c6c]        # 0x40c078
  40640c:	mov    QWORD PTR [rsp+0x48],0x0
  406415:	mov    DWORD PTR [rsp+0x38],0x0
  40641d:	mov    QWORD PTR [rsp+0x30],0x0
  406426:	imul   edx,eax,0x3e8
  40642c:	test   eax,eax
  40642e:	mov    QWORD PTR [rsp+0x50],rcx
  406433:	mov    rcx,QWORD PTR [rsp+0x68]
  406438:	mov    QWORD PTR [rsp+0x28],r12
  40643d:	mov    QWORD PTR [rsp+0x20],rdi
  406442:	cmovg  eax,edx
  406445:	mov    rdx,QWORD PTR [rip+0x5c34]        # 0x40c080
  40644c:	mov    DWORD PTR [rsp+0x40],eax
  406450:	call   0x403108
  406455:	test   rax,rax
  406458:	mov    r15,rax
  40645b:	je     0x4064aa
  40645d:	mov    edx,0x1
  406462:	mov    rcx,rax
  406465:	call   0x403170
  40646a:	lea    rcx,[rip+0x24e9]        # 0x40895a
  406471:	mov    rdx,rax
  406474:	mov    QWORD PTR [rsp+0x70],rax
  406479:	call   0x403270
  40647e:	mov    rax,QWORD PTR [rsp+0x70]
  406483:	mov    rcx,rax
  406486:	call   0x403338
  40648b:	test   rbp,rbp
  40648e:	je     0x406498
  406490:	mov    rcx,rbp
  406493:	call   0x403250
  406498:	mov    rcx,r15
  40649b:	mov    ebp,0x1
  4064a0:	call   0x403128
  4064a5:	jmp    0x406393
  4064aa:	mov    rax,QWORD PTR [rsp+0xa8]
  4064b2:	test   rax,rax
  4064b5:	je     0x4064df
  4064b7:	mov    r15,QWORD PTR [rax+0x8]
  4064bb:	lea    rcx,[rip+0x1c00]        # 0x4080c2
  4064c2:	call   0x403368
  4064c7:	mov    rdx,r15
  4064ca:	mov    rcx,rax
  4064cd:	call   0x403268
  4064d2:	mov    rcx,QWORD PTR [rsp+0xa8]
  4064da:	call   0x403340
  4064df:	test   rbp,rbp
  4064e2:	je     0x404ed0
  4064e8:	xor    ecx,ecx
  4064ea:	xor    r15d,r15d
  4064ed:	call   0x4031e8
  4064f2:	mov    QWORD PTR [rsp+0x80],r12
  4064fa:	mov    QWORD PTR [rsp+0x70],rax
  4064ff:	mov    r12,rbx
  406502:	jmp    0x406540
  406504:	mov    rax,QWORD PTR [rbp+0x0]
  406508:	mov    edx,r15d
  40650b:	add    r15d,0x1
  40650f:	mov    rbx,QWORD PTR [rax+rdx*8]
  406513:	mov    rcx,rbx
  406516:	call   0x403140
  40651b:	mov    rcx,rbx
  40651e:	mov    QWORD PTR [rsp+0x88],rax
  406526:	call   0x403130
  40652b:	mov    r8,QWORD PTR [rsp+0x88]
  406533:	mov    rcx,QWORD PTR [rsp+0x70]
  406538:	mov    rdx,rax
  40653b:	call   0x403200
  406540:	cmp    r15d,DWORD PTR [rbp+0x8]
  406544:	jb     0x406504
  406546:	mov    r15,QWORD PTR [rsp+0x70]
  40654b:	lea    rcx,[rip+0x23ce]        # 0x408920
  406552:	mov    rbx,r12
  406555:	mov    r12,QWORD PTR [rsp+0x80]
  40655d:	mov    rdx,QWORD PTR [r15]
  406560:	call   0x403268
  406565:	mov    edx,0x1
  40656a:	mov    rcx,r15
  40656d:	call   0x4031f8
  406572:	jmp    0x406389
  406577:	lea    rcx,[rip+0x227a]        # 0x4087f8
  40657e:	call   0x403368
  406583:	mov    rbp,rax
  406586:	call   0x403090
  40658b:	mov    rcx,QWORD PTR [rsp+0x70]
  406590:	mov    QWORD PTR [rsp+0x20],rbx
  406595:	mov    r9,rbp
  406598:	xor    r8d,r8d
  40659b:	mov    edx,eax
  40659d:	call   0x403248
  4065a2:	jmp    0x4061a9
  4065a7:	mov    rbp,QWORD PTR [rip+0x5ab2]        # 0x40c060
  4065ae:	lea    rcx,[rip+0x1fc3]        # 0x408578
  4065b5:	call   0x403368
  4065ba:	mov    rdx,rbp
  4065bd:	mov    rcx,rax
  4065c0:	call   0x403268
  4065c5:	jmp    0x4058de
  4065ca:	lea    rcx,[rip+0x23b4]        # 0x408985
  4065d1:	call   0x403270
  4065d6:	cmp    QWORD PTR [rip+0x5a82],0x0        # 0x40c060
  4065de:	je     0x4058de
  4065e4:	jmp    0x405e7d
  4065e9:	mov    rcx,QWORD PTR [rip+0x5a70]        # 0x40c060
  4065f0:	call   0x403218
  4065f5:	mov    edx,0x2f
  4065fa:	mov    rcx,rax
  4065fd:	mov    rbp,rax
  406600:	call   0x4048f0
  406605:	test   rax,rax
  406608:	je     0x406618
  40660a:	lea    rdx,[rbp+0x1]
  40660e:	cmp    rbp,rax
  406611:	cmove  rax,rdx
  406615:	mov    BYTE PTR [rax],0x0
  406618:	mov    rdx,QWORD PTR [rip+0x5a49]        # 0x40c068
  40661f:	mov    rcx,rdi
  406622:	mov    r8,rbp
  406625:	call   0x402be0
  40662a:	mov    rcx,rbp
  40662d:	call   0x403338
  406632:	jmp    0x4058de
  406637:	lea    rcx,[rip+0x2125]        # 0x408763
  40663e:	call   0x403270
  406643:	jmp    0x4058de
  406648:	xor    ebp,ebp
  40664a:	xor    ebx,ebx
  40664c:	jmp    0x404d96
  406651:	lea    rcx,[rip+0x2028]        # 0x408680
  406658:	mov    rbx,QWORD PTR [rsp+0x80]
  406660:	call   0x403368
  406665:	mov    r8,QWORD PTR [rsp+0x78]
  40666a:	mov    rcx,rax
  40666d:	mov    edx,r12d
  406670:	call   0x403268
  406675:	mov    rcx,QWORD PTR [rsp+0xa8]
  40667d:	call   0x403340
  406682:	mov    rcx,QWORD PTR [rsp+0x78]
  406687:	call   0x403338
  40668c:	mov    rcx,r15
  40668f:	call   0x4031d0
  406694:	jmp    0x4050d0
  406699:	mov    r12,QWORD PTR [rip+0x59f8]        # 0x40c098
  4066a0:	lea    rcx,[rip+0x1fa9]        # 0x408650
  4066a7:	call   0x403368
  4066ac:	mov    rdx,r12
  4066af:	mov    rcx,rax
  4066b2:	call   0x403268
  4066b7:	jmp    0x4050d0
  4066bc:	mov    rbx,QWORD PTR [rip+0x59b5]        # 0x40c078
  4066c3:	lea    rcx,[rip+0x1eae]        # 0x408578
  4066ca:	jmp    0x404eb9
  4066cf:	lea    rcx,[rip+0x20a2]        # 0x408778
  4066d6:	jmp    0x406154
  4066db:	mov    rcx,rbx
  4066de:	call   0x403338
  4066e3:	mov    rcx,rdi
  4066e6:	call   0x403338
  4066eb:	mov    rcx,QWORD PTR [rsp+0x78]
  4066f0:	call   0x4032d0
  4066f5:	jmp    0x404f14
  4066fa:	xor    ebp,ebp
  4066fc:	jmp    0x406393
  406701:	mov    rbp,QWORD PTR [rip+0x5938]        # 0x40c040
  406708:	jmp    0x4065ae
  40670d:	lea    rcx,[rip+0x1e8a]        # 0x40859e
  406714:	jmp    0x405c6c
  406719:	test   r15d,r15d
  40671c:	je     0x406784
  40671e:	lea    rcx,[rip+0x2078]        # 0x40879d
  406725:	xor    edi,edi
  406727:	xor    ebx,ebx
  406729:	xor    r12d,r12d
  40672c:	call   0x403270
  406731:	jmp    0x404ed0
  406736:	mov    r8,QWORD PTR [rsp+0x70]
  40673b:	mov    rcx,QWORD PTR [rsp+0x68]
  406740:	xor    edx,edx
  406742:	call   0x4030f8
  406747:	test   eax,eax
  406749:	je     0x406790
  40674b:	mov    rcx,QWORD PTR [rsp+0x68]
  406750:	mov    r12d,0x1
  406756:	call   0x403120
  40675b:	test   r15,r15
  40675e:	jne    0x405f76
  406764:	mov    rcx,rbp
  406767:	xor    r14d,r14d
  40676a:	call   0x403338
  40676f:	mov    rcx,rdi
  406772:	call   0x403338
  406777:	mov    rcx,rbx
  40677a:	call   0x4032d0
  40677f:	jmp    0x404f14
  406784:	lea    rcx,[rip+0x201d]        # 0x4087a8
  40678b:	jmp    0x406154
  406790:	mov    rax,QWORD PTR [rsp+0xa8]
  406798:	lea    rcx,[rip+0x1f01]        # 0x4086a0
  40679f:	mov    r12,QWORD PTR [rax+0x8]
  4067a3:	jmp    0x405f43
  4067a8:	nop
  4067a9:	nop
  4067aa:	nop
  4067ab:	nop
  4067ac:	nop
  4067ad:	nop
  4067ae:	nop
  4067af:	nop
  4067b0:	(bad)  
  4067b1:	(bad)  
  4067b2:	(bad)  
  4067b3:	(bad)  
  4067b4:	(bad)  
  4067b5:	(bad)  
  4067b6:	(bad)  
  4067b7:	inc    DWORD PTR [rax]
  4067b9:	add    BYTE PTR [rax],al
  4067bb:	add    BYTE PTR [rax],al
  4067bd:	add    BYTE PTR [rax],al
  4067bf:	add    bh,bh
  4067c1:	(bad)  
  4067c2:	(bad)  
  4067c3:	(bad)  
  4067c4:	(bad)  
  4067c5:	(bad)  
  4067c6:	(bad)  
  4067c7:	inc    DWORD PTR [rax]
  4067c9:	add    BYTE PTR [rax],al
  4067cb:	add    BYTE PTR [rax],al
  4067cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000407000 <.data>:
  407000:	or     al,BYTE PTR [rax]
	...
  40700e:	add    BYTE PTR [rax],al
  407010:	(bad)  
  407011:	(bad)  
  407012:	(bad)  
  407013:	inc    DWORD PTR [rax]
	...
  40701d:	add    BYTE PTR [rax],al
  40701f:	add    al,cl
  407021:	add    BYTE PTR [eax],al
	...
  40702d:	add    BYTE PTR [rax],al
  40702f:	add    bh,bh
  407031:	(bad)  
  407032:	(bad)  
  407033:	(bad)  
  407034:	(bad)  
  407035:	(bad)  
  407036:	(bad)  
  407037:	inc    DWORD PTR [rax]
  407039:	add    BYTE PTR [rax],al
  40703b:	add    BYTE PTR [rax],al
  40703d:	add    BYTE PTR [rax],al
  40703f:	add    bh,bh
	...
  40704d:	add    BYTE PTR [rax],al
  40704f:	add    BYTE PTR [rdx],al
	...
  40705d:	add    BYTE PTR [rax],al
  40705f:	add    bh,bh
  407061:	(bad)  
  407062:	(bad)  
  407063:	inc    DWORD PTR [rax]
	...
  40706d:	add    BYTE PTR [rax],al
  40706f:	add    al,al
  407071:	rex.WB
  407072:	add    BYTE PTR [rax],al
  407075:	add    BYTE PTR [rax],al
  407077:	add    al,dl
  407079:	rex.WB
  40707a:	add    BYTE PTR [rax],al
  40707d:	add    BYTE PTR [rax],al
  40707f:	add    BYTE PTR [rdx],dh
  407081:	movabs ds:0x2b992ddf,al
  40708a:	add    BYTE PTR [rax],al
  40708c:	add    BYTE PTR [rax],al
  40708e:	add    BYTE PTR [rax],al
  407090:	int    0x5d
  407092:	and    dl,dl
  407094:	data16 (bad) 
  407096:	(bad)  
  407097:	inc    DWORD PTR [rax]
  407099:	add    BYTE PTR [rax],al
  40709b:	add    BYTE PTR [rax],al
  40709d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000408000 <.rdata>:
  408000:	add    BYTE PTR [rip+0x2540732a],ah        # 0x2580f330
  408006:	jae    0x408030
  408008:	and    ah,BYTE PTR [rip+0xa292273]        # 0xa69a281
  40800e:	add    BYTE PTR [rdx+rcx*1],ch
  408011:	add    BYTE PTR [rip+0x7325732a],ah        # 0x7365f341
  408017:	and    eax,0x73252073
  40801c:	and    eax,0x4f000073
  408021:	jo     0x408097
  408023:	imul   ebp,DWORD PTR [rdi+0x6e],0x70732073
  40802a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40802e:	jns    0x408099
  408030:	outs   dx,BYTE PTR ds:[rsi]
  408031:	and    BYTE PTR [eax+ebp*2+0x65],dh
  408036:	and    BYTE PTR [rbx+0x6f],ah
  408039:	outs   dx,BYTE PTR ds:[rsi]
  40803a:	outs   dx,BYTE PTR ds:[rsi]
  40803b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  408040:	outs   dx,BYTE PTR ds:[rsi]
  408041:	and    BYTE PTR [rbp+0x6e],ah
  408044:	fs jo  0x4080b6
  408047:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f4300
  40804e:	outs   dx,BYTE PTR ds:[rsi]
  40804f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  408054:	outs   dx,BYTE PTR ds:[rsi]
  408055:	and    BYTE PTR [rbp+0x6e],al
  408058:	fs jo  0x4080ca
  40805b:	imul   ebp,DWORD PTR [rsi+0x74],0x74704f20
  408062:	imul   ebp,DWORD PTR [rdi+0x6e],0x63003a73
  408069:	outs   dx,DWORD PTR ds:[rsi]
  40806a:	outs   dx,BYTE PTR ds:[rsi]
  40806b:	outs   dx,BYTE PTR ds:[rsi]
  40806c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  408071:	outs   dx,BYTE PTR ds:[rsi]
  408072:	add    BYTE PTR [rdi+0x6c],ah
  408075:	imul   esp,DWORD PTR [rdx+0x32],0x73250030
  40807c:	cmp    ah,BYTE PTR [rax]
  40807e:	and    eax,0x73252e73
  408083:	and    BYTE PTR [rip+0x28000a73],ah        # 0x28408afc
  408089:	(bad)  
  40808a:	jae    0x4080b5
  40808c:	add    BYTE PTR [rdi+0x72],ch
  40808f:	addr32 cs data16 jb 0x4080f9
  408094:	gs fs gs jae 0x408104
  408099:	je     0x40810a
  40809b:	jo     0x4080cb
  40809d:	rex.R
  40809e:	rex.X jne 0x408114
  4080a1:	add    BYTE PTR [rdi],ch
  4080a3:	outs   dx,DWORD PTR ds:[rsi]
  4080a4:	jb     0x40810d
  4080a6:	(bad)  
  4080a7:	data16 jb 0x40810f
  4080aa:	gs fs gs jae 0x40811a
  4080af:	je     0x408120
  4080b1:	jo     0x4080e2
  4080b3:	rex.R
  4080b4:	rex.X jne 0x40812a
  4080b7:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  4080bb:	je     0x40810b
  4080bd:	(bad)  
  4080be:	ins    DWORD PTR es:[rdi],dx
  4080bf:	gs jae 0x4080c2
  4080c2:	rex.RB jb 0x408137
  4080c5:	outs   dx,DWORD PTR ds:[rsi]
  4080c6:	jb     0x408102
  4080c8:	and    BYTE PTR [rip+0x73000a73],ah        # 0x73408b41
  4080ce:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  4080d2:	je     0x408115
  4080d4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
  4080d8:	(bad)  
  4080d9:	je     0x40813c
  4080db:	(bad)  
  4080dc:	ins    BYTE PTR es:[rdi],dx
  4080dd:	gs rex.WRX (bad) 
  4080e0:	ins    DWORD PTR es:[rdi],dx
  4080e1:	gs jae 0x4080e4
  4080e4:	and    eax,0xa2073
  4080e9:	cmp    al,BYTE PTR [rax]
  4080eb:	sub    BYTE PTR [rbx+0x29],dh
  4080ee:	add    BYTE PTR [rax],al
  4080f0:	outs   dx,DWORD PTR ds:[rsi]
  4080f1:	jb     0x40815a
  4080f3:	cs data16 jb 0x40815c
  4080f7:	gs fs gs jae 0x408167
  4080fc:	je     0x40816d
  4080fe:	jo     0x40812e
  408100:	rex.R
  408101:	rex.X jne 0x408177
  408104:	rex.WB outs dx,BYTE PTR cs:[rsi]
  408107:	je     0x40817b
  408109:	outs   dx,DWORD PTR ds:[rsi]
  40810a:	jae    0x40817c
  40810c:	movsxd esi,DWORD PTR gs:[rcx+riz*2+0x62]
  408111:	ins    BYTE PTR es:[rdi],dx
  408112:	add    BYTE PTR gs:[rcx+0x6e],cl
  408116:	je     0x40818a
  408118:	outs   dx,DWORD PTR ds:[rsi]
  408119:	jae    0x40818b
  40811b:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x28]
  408120:	es jae 0x40814c
  408123:	add    BYTE PTR [rax],al
  408125:	add    BYTE PTR [rax],al
  408127:	add    BYTE PTR [rbp+0x72],al
  40812a:	jb     0x40819b
  40812c:	jb     0x40814e
  40812e:	jo     0x408191
  408130:	jb     0x4081a5
  408132:	imul   ebp,DWORD PTR [rsi+0x67],0x746e6920
  408139:	jb     0x4081aa
  40813b:	jae    0x4081ad
  40813d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  408142:	outs   dx,BYTE PTR ds:[rsi]
  408143:	and    BYTE PTR [rax+0x4d],bl
  408146:	rex.WR cmp r12b,BYTE PTR [rax]
  408149:	and    eax,0x25000a73
  40814e:	jae    0x40817e
  408150:	and    eax,0xa2073
  408155:	jb     0x4081bc
  408157:	(bad)  
  408158:	outs   dx,DWORD PTR fs:[rsi]
  40815a:	outs   dx,BYTE PTR ds:[rsi]
  40815b:	ins    BYTE PTR es:[rdi],dx
  40815c:	jns    0x40815e
  40815e:	ja     0x4081d2
  408160:	imul   esi,DWORD PTR [rbp+riz*2+0x6f],0x796c6e
  408168:	jb     0x4081cf
  40816a:	(bad)  
  40816b:	fs ja  0x4081e0
  40816e:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x0
  408176:	add    BYTE PTR [rax],al
  408178:	outs   dx,DWORD PTR ds:[rsi]
  408179:	jb     0x4081e2
  40817b:	cs data16 jb 0x4081e4
  40817f:	gs fs gs jae 0x4081ef
  408184:	je     0x4081f5
  408186:	jo     0x4081b6
  408188:	rex.R
  408189:	rex.X jne 0x4081ff
  40818c:	cs push rax
  40818e:	jb     0x4081ff
  408190:	jo     0x4081f7
  408192:	jb     0x408208
  408194:	imul   esp,DWORD PTR [rbp+0x73],0x74654700
  40819b:	rex.B ins BYTE PTR es:[rdi],dx
  40819d:	ins    BYTE PTR es:[rdi],dx
  40819e:	add    BYTE PTR [rax],ch
  4081a0:	(bad)  
  4081a1:	jnp    0x408216
  4081a3:	jbe    0x408222
  4081a5:	sub    DWORD PTR [rax],eax
  4081a7:	jnp    0x40821c
  4081a9:	jbe    0x408228
  4081ab:	add    BYTE PTR [rip+0x6e69732a],ah        # 0x6ea9f4db
  4081b1:	je     0x408218
  4081b3:	jb     0x40821b
  4081b5:	(bad)  
  4081b6:	movsxd esp,DWORD PTR [rbp+0x20]
  4081b9:	and    eax,0xa7b2073
  4081be:	add    BYTE PTR [rax],ch
  4081c0:	jbe    0x4081eb
  4081c2:	add    BYTE PTR [rax],ch
  4081c4:	jae    0x408239
  4081c6:	sub    DWORD PTR [rax],eax
  4081c8:	rex.RXB
  4081c9:	gs je  0x4081cc
  4081cc:	and    eax,0x2020732a
  4081d1:	ins    DWORD PTR es:[rdi],dx
  4081d2:	gs je  0x40823d
  4081d5:	outs   dx,DWORD PTR ds:[rsi]
  4081d6:	fs jae 0x408213
  4081d9:	or     al,BYTE PTR [rax]
  4081db:	and    eax,0x7325732a
  4081e0:	sub    BYTE PTR [rax],al
  4081e2:	imul   ebp,DWORD PTR [rsi+0x20],0x3b290020
  4081e9:	or     al,BYTE PTR [rax]
  4081eb:	outs   dx,DWORD PTR ds:[rsi]
  4081ec:	jne    0x408262
  4081ee:	and    BYTE PTR [rax],al
  4081f0:	and    eax,0x2020732a
  4081f5:	jae    0x408260
  4081f7:	outs   dx,BYTE PTR ds:[esi]
  4081f9:	(bad)  
  4081fa:	ins    BYTE PTR es:[rdi],dx
  4081fb:	jae    0x408237
  4081fd:	or     al,BYTE PTR [rax]
  4081ff:	and    eax,0x3b7d732a
  408204:	or     al,BYTE PTR [rax]
  408206:	and    eax,0x2020732a
  40820b:	jo     0x40827f
  40820d:	outs   dx,DWORD PTR ds:[rsi]
  40820e:	jo     0x408275
  408210:	jb     0x408286
  408212:	imul   esp,DWORD PTR [rbp+0x73],0x67000a3a
  408219:	fs (bad) 
  40821b:	jne    0x408290
  40821d:	sub    eax,0x6c6f6f74
  408222:	movsxd eax,DWORD PTR cs:[rax]
  408225:	rex.RXB
  408226:	imul   r12,QWORD PTR [rdx+0x2d],0x4f4947
  40822e:	and    eax,0x7325732a
  408233:	and    BYTE PTR [rip+0x73252073],ah        # 0x7365a2ac
  408239:	and    BYTE PTR [rip+0x3b732520],bh        # 0x3bb3a75f
  40823f:	or     al,BYTE PTR [rax]
  408241:	and    eax,0x7325732a
  408246:	and    BYTE PTR [rip+0x73252073],ah        # 0x7365a2bf
  40824c:	cmp    ecx,DWORD PTR [rdx]
  40824e:	add    BYTE PTR [rax],ch
  408250:	outs   dx,BYTE PTR ds:[rsi]
  408251:	outs   dx,DWORD PTR ds:[rsi]
  408252:	je     0x408274
  408254:	jae    0x4082bb
  408256:	je     0x408281
  408258:	add    BYTE PTR [rip+0x6f6e732a],ah        # 0x6faef588
  40825e:	fs and BYTE PTR gs:[rip+0x7b200073],ah        # 0x7b6082d9
  408266:	or     al,BYTE PTR [rax]
  408268:	push   rbx
  408269:	imul   ebp,DWORD PTR [rcx+0x70],0x70
  40826d:	imul   ebp,DWORD PTR [rsi+0x67],0x74617020
  408274:	push   0x20732520
  408279:	je     0x4082e3
  40827b:	(bad)  
  40827c:	je     0x40829e
  40827e:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  408285:	outs   dx,BYTE PTR gs:[rsi]
  408287:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  40828b:	gs and BYTE PTR fs:[rdx+0x79],ah
  408290:	and    BYTE PTR [rax+0x61],dh
  408293:	jb     0x4082fa
  408295:	outs   dx,BYTE PTR ds:[rsi]
  408296:	je     0x4082b8
  408298:	and    eax,0x2f000a73
  40829d:	add    BYTE PTR [rdi],ch
  40829f:	and    eax,0x73250073
  4082a4:	(bad)  
  4082a5:	and    eax,0xa0073
  4082aa:	and    eax,0x73
  4082af:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4082b3:	and    BYTE PTR [rsi+0x61],ch
  4082b6:	ins    DWORD PTR es:[rdi],dx
  4082b7:	and    BYTE PTR gs:[rip+0x6f642073],ah        # 0x6fa4a331
  4082be:	gs jae 0x4082e1
  4082c1:	outs   dx,BYTE PTR ds:[rsi]
  4082c2:	outs   dx,DWORD PTR ds:[rsi]
  4082c3:	je     0x4082e5
  4082c5:	push   0x20657661
  4082ca:	(bad)  
  4082cb:	outs   dx,BYTE PTR ds:[rsi]
  4082cc:	and    BYTE PTR [rdi+0x77],ch
  4082cf:	outs   dx,BYTE PTR ds:[rsi]
  4082d0:	gs jb  0x4082dd
  4082d3:	add    BYTE PTR [rbx+0x4f],al
  4082d6:	rex.WRB
  4082d7:	rex.WRB
  4082d8:	rex.B
  4082d9:	rex.WRX
  4082da:	add    BYTE PTR [rax],r8b
  4082dd:	add    BYTE PTR [rax],al
  4082df:	add    BYTE PTR [rbx+0x6f],al
  4082e2:	ins    DWORD PTR es:[rdi],dx
  4082e3:	ins    DWORD PTR es:[rdi],dx
  4082e4:	(bad)  
  4082e5:	outs   dx,BYTE PTR ds:[rsi]
  4082e6:	fs jae 0x408323
  4082e9:	or     ah,BYTE PTR [rax]
  4082eb:	and    BYTE PTR [rax+0x65],ch
  4082ee:	ins    BYTE PTR es:[rdi],dx
  4082ef:	jo     0x408311
  4082f1:	and    BYTE PTR [rax],ah
  4082f3:	and    BYTE PTR [rax],ah
  4082f5:	and    BYTE PTR [rax],ah
  4082f7:	and    BYTE PTR [rax],ah
  4082f9:	push   rbx
  4082fa:	push   0x2073776f
  4082ff:	je     0x408369
  408301:	imul   esi,DWORD PTR [rbx+0x20],0x6f666e69
  408308:	jb     0x408377
  40830a:	(bad)  
  40830b:	je     0x408376
  40830d:	outs   dx,DWORD PTR ds:[rsi]
  40830e:	outs   dx,BYTE PTR ds:[rsi]
  40830f:	or     ah,BYTE PTR [rax]
  408311:	and    BYTE PTR [rcx+0x6e],ch
  408314:	je     0x408388
  408316:	outs   dx,DWORD PTR ds:[rsi]
  408317:	jae    0x408389
  408319:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x20]
  40831e:	and    BYTE PTR [rcx+0x6e],cl
  408321:	je     0x408395
  408323:	outs   dx,DWORD PTR ds:[rsi]
  408324:	jae    0x408396
  408326:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x61]
  40832b:	and    BYTE PTR [rdx+0x65],dh
  40832e:	ins    DWORD PTR es:[rdi],dx
  40832f:	outs   dx,DWORD PTR ds:[rsi]
  408330:	je     0x408397
  408332:	and    BYTE PTR [rdi+0x62],ch
  408335:	push   0x65
  408337:	movsxd esi,DWORD PTR [rdx+rcx*1+0x20]
  40833b:	and    BYTE PTR [rbp+0x6f],ch
  40833e:	outs   dx,BYTE PTR ds:[rsi]
  40833f:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x20202020
  408347:	and    BYTE PTR [rax],ah
  408349:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  40834b:	outs   dx,BYTE PTR ds:[rsi]
  40834c:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x72206120
  408354:	gs ins DWORD PTR es:[rdi],dx
  408356:	outs   dx,DWORD PTR ds:[rsi]
  408357:	je     0x4083be
  408359:	and    BYTE PTR [rdi+0x62],ch
  40835c:	push   0x65
  40835e:	movsxd esi,DWORD PTR [rdx+rcx*1+0x20]
  408362:	and    BYTE PTR [rbx+0x61],ah
  408365:	ins    BYTE PTR es:[rdi],dx
  408366:	ins    BYTE PTR es:[rdi],dx
  408367:	and    BYTE PTR [rax],ah
  408369:	and    BYTE PTR [rax],ah
  40836b:	and    BYTE PTR [rax],ah
  40836d:	and    BYTE PTR [rax],ah
  40836f:	and    BYTE PTR [rcx+0x6e],cl
  408372:	jbe    0x4083e3
  408374:	imul   esp,DWORD PTR [rbp+0x20],0x61
  408378:	and    BYTE PTR [rbp+0x65],ch
  40837b:	je     0x4083e5
  40837d:	outs   dx,DWORD PTR ds:[rsi]
  40837e:	and    BYTE PTR fs:[rdi+0x6e],ch
  408382:	and    BYTE PTR [rcx+0x20],ah
  408385:	jb     0x4083ec
  408387:	ins    DWORD PTR es:[rdi],dx
  408388:	outs   dx,DWORD PTR ds:[rsi]
  408389:	je     0x4083f0
  40838b:	and    BYTE PTR [rdi+0x62],ch
  40838e:	push   0x65
  408390:	movsxd esi,DWORD PTR [rdx+rcx*1+0x20]
  408394:	and    BYTE PTR [rbp+0x6d],ah
  408397:	imul   esi,DWORD PTR [rax+riz*1+0x20],0x20202020
  40839f:	and    BYTE PTR [rax],ah
  4083a1:	and    BYTE PTR [rbp+0x6d],al
  4083a4:	imul   esi,DWORD PTR [rax+riz*1+0x61],0x67697320
  4083ac:	outs   dx,BYTE PTR ds:[rsi]
  4083ad:	(bad)  
  4083ae:	ins    BYTE PTR es:[rdi],dx
  4083af:	or     cl,BYTE PTR [rdx]
  4083b1:	push   rbp
  4083b2:	jae    0x408419
  4083b4:	and    BYTE PTR [rdx],ah
  4083b6:	and    eax,0x4f432073
  4083bb:	rex.WRB
  4083bc:	rex.WRB
  4083bd:	rex.B
  4083be:	rex.WRX
  4083bf:	and    BYTE PTR [rip+0x6c65682d],r13b        # 0x6ca5ebf3
  4083c6:	jo     0x4083ea
  4083c8:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4083cc:	addr32 gs je 0x4083f0
  4083d0:	push   0x20706c65
  4083d5:	outs   dx,DWORD PTR ds:[rsi]
  4083d6:	outs   dx,BYTE PTR ds:[rsi]
  4083d7:	and    BYTE PTR [rbp+0x61],ah
  4083da:	movsxd ebp,DWORD PTR [rax+0x20]
  4083dd:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4083e0:	ins    DWORD PTR es:[rdi],dx
  4083e1:	(bad)  
  4083e2:	outs   dx,BYTE PTR ds:[rsi]
  4083e3:	fs or  al,BYTE PTR cs:[rax]
  4083e7:	outs   dx,BYTE PTR ds:[rsi]
  4083e8:	jne    0x408457
  4083ea:	and    BYTE PTR [rdi*1+0x612a2820],bh
  4083f1:	jb     0x40845a
  4083f3:	movsxd ebp,DWORD PTR [rcx]
  4083f5:	add    BYTE PTR [rax],al
  4083f7:	add    BYTE PTR [rdi+0x5f],ah
  4083fa:	jae    0x408470
  4083fc:	jb     0x408461
  4083fe:	ins    DWORD PTR es:[rdi],dx
  4083ff:	jo     0x408431
  408401:	and    BYTE PTR [rax],ch
  408403:	sub    BYTE PTR [rdx],ch
  408405:	(bad)  
  408406:	jb     0x40846f
  408408:	jbe    0x408433
  40840a:	pop    rbx
  40840b:	xor    DWORD PTR [rbp+0x2c],ebx
  40840e:	and    BYTE PTR [rbx+0x6f],ah
  408411:	ins    DWORD PTR es:[rdi],dx
  408412:	ins    DWORD PTR es:[rdi],dx
  408413:	(bad)  
  408414:	outs   dx,BYTE PTR ds:[rsi]
  408415:	sub    DWORD PTR fs:[rax],esp
  408418:	cmp    eax,0x30203d
  40841d:	and    eax,0x73252073
  408422:	add    BYTE PTR [rax],al
  408424:	add    BYTE PTR [rax],al
  408426:	add    BYTE PTR [rax],al
  408428:	rex.RB jb 0x40849d
  40842b:	outs   dx,DWORD PTR ds:[rsi]
  40842c:	jb     0x408468
  40842e:	and    BYTE PTR [rip+0x73692073],ah        # 0x73a9a4a7
  408434:	and    BYTE PTR [rsi+0x6f],ch
  408437:	je     0x408459
  408439:	(bad)  
  40843a:	and    BYTE PTR [rsi+0x61],dh
  40843d:	ins    BYTE PTR es:[rdi],dx
  40843e:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0xa656d61
  408446:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40844a:	and    BYTE PTR [rsi+0x61],ch
  40844d:	ins    DWORD PTR es:[rdi],dx
  40844e:	and    BYTE PTR gs:[rip+0x73692073],ah        # 0x73a9a4c8
  408455:	and    BYTE PTR [rdi+0x77],ch
  408458:	outs   dx,BYTE PTR ds:[rsi]
  408459:	gs and BYTE PTR fs:[rdx+0x79],ah
  40845e:	and    BYTE PTR [rip+0x6d000a73],ah        # 0x6d408ed7
  408464:	outs   dx,DWORD PTR ds:[rsi]
  408465:	outs   dx,BYTE PTR ds:[rsi]
  408466:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6c69665f
  40846e:	je     0x4084d5
  408470:	jb     0x4084d1
  408472:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x30203d
  40847a:	add    BYTE PTR [rax],al
  40847c:	add    BYTE PTR [rax],al
  40847e:	add    BYTE PTR [rax],al
  408480:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  408482:	and    BYTE PTR [rbx+0x6f],ah
  408485:	outs   dx,BYTE PTR ds:[rsi]
  408486:	outs   dx,BYTE PTR ds:[rsi]
  408487:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40848c:	outs   dx,BYTE PTR ds:[rsi]
  40848d:	and    BYTE PTR [rbp+0x6e],ah
  408490:	fs jo  0x408502
  408493:	imul   ebp,DWORD PTR [rsi+0x74],0x65707320
  40849a:	movsxd ebp,DWORD PTR [rcx+0x66]
  40849d:	imul   esp,DWORD PTR [rbp+0x64],0x0
  4084a4:	add    BYTE PTR [rax],al
  4084a6:	add    BYTE PTR [rax],al
  4084a8:	rex.WRB jne 0x408517
  4084ab:	je     0x408516
  4084ad:	jo     0x40851b
  4084af:	and    BYTE PTR gs:[rbx+0x6f],ah
  4084b3:	outs   dx,BYTE PTR ds:[rsi]
  4084b4:	outs   dx,BYTE PTR ds:[rsi]
  4084b5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4084ba:	outs   dx,BYTE PTR ds:[rsi]
  4084bb:	and    BYTE PTR [rbp+0x6e],ah
  4084be:	fs jo  0x408530
  4084c1:	imul   ebp,DWORD PTR [rsi+0x74],0x70732073
  4084c8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4084cc:	imul   esp,DWORD PTR [rbp+0x64],0x5c002200
  4084d3:	and    al,BYTE PTR [rax]
  4084d5:	push   rbp
  4084d6:	push   rsp
  4084d7:	rex.RX sub eax,0x65680038
  4084dd:	ins    BYTE PTR es:[rdi],dx
  4084de:	jo     0x4084e0
  4084e0:	gs ins DWORD PTR es:[rdi],dx
  4084e2:	imul   esi,DWORD PTR [rax+rax*1+0x45],0x2074696d
  4084ea:	(bad)  
  4084eb:	and    BYTE PTR [rbx+0x69],dh
  4084ee:	outs   dx,BYTE PTR ds:[esi]
  4084f0:	(bad)  
  4084f1:	ins    BYTE PTR es:[rdi],dx
  4084f2:	add    BYTE PTR cs:[rip+0x6464612d],ch        # 0x64a4e626
  4084f9:	jb     0x408560
  4084fb:	jae    0x408570
  4084fd:	add    BYTE PTR [rbp+0x6e],dh
  408500:	imul   edi,DWORD PTR [rax+0x3a],0x7063740a
  408507:	cmp    cl,BYTE PTR [rdx]
  408509:	outs   dx,BYTE PTR ds:[rsi]
  40850a:	outs   dx,DWORD PTR ds:[rsi]
  40850b:	outs   dx,BYTE PTR ds:[rsi]
  40850c:	movsxd esp,DWORD PTR [rbp+0x2d]
  40850f:	je     0x408574
  408511:	jo     0x40854d
  408513:	or     al,BYTE PTR [rax]
  408515:	add    BYTE PTR [rax],al
  408517:	add    BYTE PTR [rip+0x7379732d],ch        # 0x73b9f84a
  40851d:	je     0x408584
  40851f:	ins    DWORD PTR es:[rdi],dx
  408520:	and    BYTE PTR [rdx],cl
  408522:	sub    eax,0x7365732d
  408527:	jae    0x408592
  408529:	outs   dx,DWORD PTR ds:[rsi]
  40852a:	outs   dx,BYTE PTR ds:[rsi]
  40852b:	and    BYTE PTR [rdx],cl
  40852d:	sub    eax,0x6464612d
  408532:	jb     0x408599
  408534:	jae    0x4085a9
  408536:	and    BYTE PTR [rdx],cl
  408538:	add    BYTE PTR [rbp+0x72],al
  40853b:	jb     0x4085ac
  40853d:	jb     0x40855f
  40853f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408542:	outs   dx,BYTE PTR ds:[rsi]
  408543:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  408548:	cmp    ah,BYTE PTR [eax]
  40854b:	and    eax,0xa73
  408550:	rex.RB jb 0x4085c5
  408553:	outs   dx,DWORD PTR ds:[rsi]
  408554:	jb     0x408590
  408556:	and    BYTE PTR [rdi+0x62],ch
  408559:	push   0x65
  40855b:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  40855f:	(bad)  
  408560:	je     0x4085ca
  408562:	and    BYTE PTR [rsi+0x6f],ch
  408565:	je     0x408587
  408567:	jae    0x4085d9
  408569:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40856d:	imul   esp,DWORD PTR [rbp+0x64],0xa2e
  408574:	add    BYTE PTR [rax],al
  408576:	add    BYTE PTR [rax],al
  408578:	rex.RB jb 0x4085ed
  40857b:	outs   dx,DWORD PTR ds:[rsi]
  40857c:	jb     0x4085b8
  40857e:	and    BYTE PTR [rip+0x73692073],ah        # 0x73a9a5f7
  408584:	and    BYTE PTR [rsi+0x6f],ch
  408587:	je     0x4085a9
  408589:	(bad)  
  40858a:	and    BYTE PTR [rsi+0x61],dh
  40858d:	ins    BYTE PTR es:[rdi],dx
  40858e:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x63656a62
  408596:	je     0x4085b8
  408598:	jo     0x4085fb
  40859a:	je     0x408604
  40859c:	or     al,BYTE PTR [rax]
  40859e:	rex.RB jb 0x408613
  4085a1:	outs   dx,DWORD PTR ds:[rsi]
  4085a2:	jb     0x4085de
  4085a4:	and    BYTE PTR [rbx+0x69],dh
  4085a7:	outs   dx,BYTE PTR ds:[esi]
  4085a9:	(bad)  
  4085aa:	ins    BYTE PTR es:[rdi],dx
  4085ab:	and    BYTE PTR [rsi+0x6f],ch
  4085ae:	je     0x4085d0
  4085b0:	jae    0x408622
  4085b2:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4085b6:	imul   esp,DWORD PTR [rbp+0x64],0xa2e
  4085bd:	add    BYTE PTR [rax],al
  4085bf:	add    BYTE PTR [rbp+0x72],al
  4085c2:	jb     0x408633
  4085c4:	jb     0x408600
  4085c6:	and    BYTE PTR [rbx+0x69],dh
  4085c9:	outs   dx,BYTE PTR ds:[esi]
  4085cb:	(bad)  
  4085cc:	ins    BYTE PTR es:[rdi],dx
  4085cd:	and    BYTE PTR [rbp+0x75],ch
  4085d0:	jae    0x408646
  4085d2:	and    BYTE PTR [rdx+0x65],ah
  4085d5:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4085d9:	and    BYTE PTR [rsi+0x75],ah
  4085dc:	ins    BYTE PTR es:[rdi],dx
  4085dd:	ins    BYTE PTR es:[rdi],dx
  4085de:	jns    0x40860d
  4085e0:	jno    0x408657
  4085e2:	(bad)  
  4085e3:	ins    BYTE PTR es:[rdi],dx
  4085e4:	imul   esp,DWORD PTR [rsi+0x69],0x6e206465
  4085eb:	(bad)  
  4085ec:	ins    DWORD PTR es:[rdi],dx
  4085ed:	gs or  al,BYTE PTR cs:[rax]
  4085f1:	add    BYTE PTR [rax],al
  4085f3:	add    BYTE PTR [rax],al
  4085f5:	add    BYTE PTR [rax],al
  4085f7:	add    BYTE PTR [rbp+0x72],al
  4085fa:	jb     0x40866b
  4085fc:	jb     0x408638
  4085fe:	and    BYTE PTR [rip+0x73692073],ah        # 0x73a9a677
  408604:	and    BYTE PTR [rsi+0x6f],ch
  408607:	je     0x408629
  408609:	(bad)  
  40860a:	and    BYTE PTR [rsi+0x61],dh
  40860d:	ins    BYTE PTR es:[rdi],dx
  40860e:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x7265746e
  408616:	data16 (bad) 
  408618:	movsxd esp,DWORD PTR [rbp+0x20]
  40861b:	outs   dx,BYTE PTR ds:[rsi]
  40861c:	(bad)  
  40861d:	ins    DWORD PTR es:[rdi],dx
  40861e:	or     al,BYTE PTR gs:[rax]
  408621:	add    BYTE PTR [rax],al
  408623:	add    BYTE PTR [rax],al
  408625:	add    BYTE PTR [rax],al
  408627:	add    BYTE PTR [rbp+0x72],al
  40862a:	jb     0x40869b
  40862c:	jb     0x408668
  40862e:	and    BYTE PTR [rip+0x73692073],ah        # 0x73a9a6a7
  408634:	and    BYTE PTR [rsi+0x6f],ch
  408637:	je     0x408659
  408639:	(bad)  
  40863a:	and    BYTE PTR [rsi+0x61],dh
  40863d:	ins    BYTE PTR es:[rdi],dx
  40863e:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x65626d65
  408646:	jb     0x408668
  408648:	outs   dx,BYTE PTR ds:[rsi]
  408649:	(bad)  
  40864a:	ins    DWORD PTR es:[rdi],dx
  40864b:	or     al,BYTE PTR gs:[rax]
  40864e:	add    BYTE PTR [rax],al
  408650:	rex.RB jb 0x4086c5
  408653:	outs   dx,DWORD PTR ds:[rsi]
  408654:	jb     0x408690
  408656:	and    BYTE PTR [rip+0x73692073],ah        # 0x73a9a6cf
  40865c:	and    BYTE PTR [rsi+0x6f],ch
  40865f:	je     0x408681
  408661:	(bad)  
  408662:	and    BYTE PTR [rsi+0x61],dh
  408665:	ins    BYTE PTR es:[rdi],dx
  408666:	imul   esp,DWORD PTR [rax+riz*1+0x75],0x7571696e
  40866e:	and    BYTE PTR gs:[rdx+0x75],ah
  408672:	jae    0x408694
  408674:	outs   dx,BYTE PTR ds:[rsi]
  408675:	(bad)  
  408676:	ins    DWORD PTR es:[rdi],dx
  408677:	gs or  al,BYTE PTR cs:[rax]
  40867b:	jb     0x40867d
  40867d:	add    BYTE PTR [rax],al
  40867f:	add    BYTE PTR [rbp+0x72],al
  408682:	jb     0x4086f3
  408684:	jb     0x4086a6
  408686:	jo     0x4086e9
  408688:	jb     0x4086fd
  40868a:	imul   ebp,DWORD PTR [rsi+0x67],0x72617020
  408691:	(bad)  
  408692:	ins    DWORD PTR es:[rdi],dx
  408693:	gs je  0x4086fb
  408696:	jb     0x4086b8
  408698:	and    eax,0x25203a64
  40869d:	jae    0x4086a9
  40869f:	add    BYTE PTR [rbp+0x72],al
  4086a2:	jb     0x408713
  4086a4:	jb     0x4086c6
  4086a6:	data16 ins BYTE PTR es:[rdi],dx
  4086a8:	jne    0x40871d
  4086aa:	push   0x20676e69
  4086af:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4086b2:	outs   dx,BYTE PTR ds:[rsi]
  4086b3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4086b8:	outs   dx,BYTE PTR ds:[rsi]
  4086b9:	cmp    ah,BYTE PTR [rax]
  4086bb:	and    eax,0x63000a73
  4086c0:	(bad)  
  4086c1:	ins    BYTE PTR es:[rdi],dx
  4086c2:	ins    BYTE PTR es:[rdi],dx
  4086c3:	add    BYTE PTR [rax],al
  4086c5:	add    BYTE PTR [rax],al
  4086c7:	add    BYTE PTR [rcx+0x6e],cl
  4086ca:	jbe    0x40873b
  4086cc:	imul   esp,DWORD PTR [rbp+0x20],0x61
  4086d0:	and    BYTE PTR [rbp+0x65],ch
  4086d3:	je     0x40873d
  4086d5:	outs   dx,DWORD PTR ds:[rsi]
  4086d6:	and    BYTE PTR fs:[rdi+0x6e],ch
  4086da:	and    BYTE PTR [rcx+0x20],ah
  4086dd:	jb     0x408744
  4086df:	ins    DWORD PTR es:[rdi],dx
  4086e0:	outs   dx,DWORD PTR ds:[rsi]
  4086e1:	je     0x408748
  4086e3:	and    BYTE PTR [rdi+0x62],ch
  4086e6:	push   0x65
  4086e8:	movsxd esi,DWORD PTR [rsi+rbp*1+0x0]
  4086ec:	sub    eax,0x7365642d
  4086f1:	je     0x4086f3
  4086f3:	sub    eax,0x6a626f2d
  4086f8:	movsxd esi,DWORD PTR gs:[rbp+rbp*1+0x70]
  4086fd:	(bad)  
  4086fe:	je     0x408768
  408700:	add    BYTE PTR [rip+0x74656d2d],ch        # 0x74a5f433
  408706:	push   0x2d00646f
  40870b:	sub    eax,0x74736564
  408710:	and    BYTE PTR [rdx],cl
  408712:	add    BYTE PTR [rax],al
  408714:	add    BYTE PTR [rax],al
  408716:	add    BYTE PTR [rax],al
  408718:	rex.RB jb 0x40878d
  40871b:	outs   dx,DWORD PTR ds:[rsi]
  40871c:	jb     0x408758
  40871e:	and    BYTE PTR [rbp+riz*2+0x73],al
  408722:	je     0x40878d
  408724:	outs   dx,BYTE PTR ds:[rsi]
  408725:	(bad)  
  408726:	je     0x408791
  408728:	outs   dx,DWORD PTR ds:[rsi]
  408729:	outs   dx,BYTE PTR ds:[rsi]
  40872a:	and    BYTE PTR [rcx+0x73],ch
  40872d:	and    BYTE PTR [rsi+0x6f],ch
  408730:	je     0x408752
  408732:	jae    0x4087a4
  408734:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  408738:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40873f:	add    BYTE PTR [rbp+0x72],al
  408742:	jb     0x4087b3
  408744:	jb     0x408780
  408746:	and    BYTE PTR [rip+0x73692073],ah        # 0x73a9a7bf
  40874c:	and    BYTE PTR [rsi+0x6f],ch
  40874f:	je     0x408771
  408751:	(bad)  
  408752:	and    BYTE PTR [rsi+0x61],dh
  408755:	ins    BYTE PTR es:[rdi],dx
  408756:	imul   esp,DWORD PTR [rax+riz*1+0x62],0x6e207375
  40875e:	(bad)  
  40875f:	ins    DWORD PTR es:[rdi],dx
  408760:	or     al,BYTE PTR gs:[rax]
  408763:	sub    eax,0x6a626f2d
  408768:	movsxd esi,DWORD PTR gs:[rbp+rbp*1+0x70]
  40876d:	(bad)  
  40876e:	je     0x4087d8
  408770:	and    BYTE PTR [rdx],cl
  408772:	add    BYTE PTR [rax],al
  408774:	add    BYTE PTR [rax],al
  408776:	add    BYTE PTR [rax],al
  408778:	rex.RB jb 0x4087ed
  40877b:	outs   dx,DWORD PTR ds:[rsi]
  40877c:	jb     0x4087b8
  40877e:	and    BYTE PTR [rdi+0x62],cl
  408781:	push   0x65
  408783:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  408787:	(bad)  
  408788:	je     0x4087f2
  40878a:	and    BYTE PTR [rcx+0x73],ch
  40878d:	and    BYTE PTR [rsi+0x6f],ch
  408790:	je     0x4087b2
  408792:	jae    0x408804
  408794:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  408798:	imul   esp,DWORD PTR [rbp+0x64],0x2d2d000a
  40879f:	ins    DWORD PTR es:[rdi],dx
  4087a0:	gs je  0x40880b
  4087a3:	outs   dx,DWORD PTR ds:[rsi]
  4087a4:	and    BYTE PTR fs:[rdx],cl
  4087a7:	add    BYTE PTR [rbp+0x72],al
  4087aa:	jb     0x40881b
  4087ac:	jb     0x4087e8
  4087ae:	and    BYTE PTR [rbp+0x65],cl
  4087b1:	je     0x40881b
  4087b3:	outs   dx,DWORD PTR ds:[rsi]
  4087b4:	and    BYTE PTR fs:[rsi+0x61],ch
  4087b8:	ins    DWORD PTR es:[rdi],dx
  4087b9:	and    BYTE PTR gs:[rcx+0x73],ch
  4087bd:	and    BYTE PTR [rsi+0x6f],ch
  4087c0:	je     0x4087e2
  4087c2:	jae    0x408834
  4087c4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4087c8:	imul   esp,DWORD PTR [rbp+0x64],0xa
  4087cf:	add    BYTE PTR [rbp+0x72],al
  4087d2:	jb     0x408843
  4087d4:	jb     0x408810
  4087d6:	and    BYTE PTR [rbp+0x65],cl
  4087d9:	je     0x408843
  4087db:	outs   dx,DWORD PTR ds:[rsi]
  4087dc:	and    BYTE PTR fs:[rsi+0x61],ch
  4087e0:	ins    DWORD PTR es:[rdi],dx
  4087e1:	and    BYTE PTR gs:[rdi],ah
  4087e4:	and    eax,0x69202773
  4087e9:	jae    0x40880b
  4087eb:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  4087f2:	or     al,BYTE PTR [rax]
  4087f4:	add    BYTE PTR [rax],al
  4087f6:	add    BYTE PTR [rax],al
  4087f8:	push   rdi
  4087f9:	(bad)  
  4087fa:	jb     0x40886a
  4087fc:	imul   ebp,DWORD PTR [rsi+0x67],0x6341203a
  408803:	movsxd ebp,DWORD PTR [rdi+0x72]
  408806:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x206f7420
  40880e:	imul   ebp,DWORD PTR [rsi+0x74],0x70736f72
  408815:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40881a:	outs   dx,BYTE PTR ds:[rsi]
  40881b:	and    BYTE PTR [rcx+riz*2+0x74],ah
  40881f:	(bad)  
  408820:	sub    al,0x20
  408822:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  408829:	movsxd esp,DWORD PTR [rbp+0x20]
  40882c:	(bad)  
  40882d:	and    eax,0x64202773
  408832:	outs   dx,DWORD PTR ds:[rsi]
  408833:	gs jae 0x408856
  408836:	outs   dx,BYTE PTR ds:[rsi]
  408837:	outs   dx,DWORD PTR ds:[rsi]
  408838:	je     0x40885a
  40883a:	gs js  0x4088a6
  40883d:	jae    0x4088b3
  40883f:	or     al,BYTE PTR [rax]
  408841:	add    BYTE PTR [rax],al
  408843:	add    BYTE PTR [rax],al
  408845:	add    BYTE PTR [rax],al
  408847:	add    BYTE PTR [rdi+0x61],dl
  40884a:	jb     0x4088ba
  40884c:	imul   ebp,DWORD PTR [rsi+0x67],0x6341203a
  408853:	movsxd ebp,DWORD PTR [rdi+0x72]
  408856:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x206f7420
  40885e:	imul   ebp,DWORD PTR [rsi+0x74],0x70736f72
  408865:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40886a:	outs   dx,BYTE PTR ds:[rsi]
  40886b:	and    BYTE PTR [rcx+riz*2+0x74],ah
  40886f:	(bad)  
  408870:	sub    al,0x20
  408872:	ins    DWORD PTR es:[rdi],dx
  408873:	gs je  0x4088de
  408876:	outs   dx,DWORD PTR ds:[rsi]
  408877:	and    BYTE PTR fs:[rdi],ah
  40887a:	and    eax,0x64202773
  40887f:	outs   dx,DWORD PTR ds:[rsi]
  408880:	gs jae 0x4088a3
  408883:	outs   dx,BYTE PTR ds:[rsi]
  408884:	outs   dx,DWORD PTR ds:[rsi]
  408885:	je     0x4088a7
  408887:	gs js  0x4088f3
  40888a:	jae    0x408900
  40888c:	and    BYTE PTR [rdi+0x6e],ch
  40888f:	and    BYTE PTR [rcx+0x6e],ch
  408892:	je     0x4088f9
  408894:	jb     0x4088fc
  408896:	(bad)  
  408897:	movsxd esp,DWORD PTR [rbp+0x20]
  40889a:	(bad)  
  40889b:	and    eax,0xa2773
  4088a0:	push   rdi
  4088a1:	(bad)  
  4088a2:	jb     0x408912
  4088a4:	imul   ebp,DWORD PTR [rsi+0x67],0x6e49203a
  4088ab:	je     0x40891f
  4088ad:	outs   dx,DWORD PTR ds:[rsi]
  4088ae:	jae    0x408920
  4088b0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4088b5:	outs   dx,BYTE PTR ds:[rsi]
  4088b6:	and    BYTE PTR [rcx+riz*2+0x74],ah
  4088ba:	(bad)  
  4088bb:	and    BYTE PTR [rcx+0x6e],ch
  4088be:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
  4088c6:	and    eax,0x61702064
  4088cb:	jb     0x40892e
  4088cd:	ins    DWORD PTR es:[rdi],dx
  4088ce:	gs je  0x408936
  4088d1:	jb     0x408946
  4088d3:	and    BYTE PTR [rdx+0x75],ah
  4088d6:	je     0x4088f8
  4088d8:	ins    DWORD PTR es:[rdi],dx
  4088d9:	outs   dx,DWORD PTR ds:[rsi]
  4088da:	jb     0x408941
  4088dc:	and    BYTE PTR [rdi+0x61],dh
  4088df:	jae    0x408901
  4088e1:	jo     0x408944
  4088e3:	jae    0x408958
  4088e5:	gs or  al,BYTE PTR fs:[rax]
  4088e9:	add    BYTE PTR [rax],al
  4088eb:	add    BYTE PTR [rax],al
  4088ed:	add    BYTE PTR [rax],al
  4088ef:	add    BYTE PTR [rbp+0x72],al
  4088f2:	jb     0x408963
  4088f4:	jb     0x408916
  4088f6:	jo     0x408959
  4088f8:	jb     0x40896d
  4088fa:	imul   ebp,DWORD PTR [rsi+0x67],0x72617020
  408901:	(bad)  
  408902:	ins    DWORD PTR es:[rdi],dx
  408903:	gs je  0x40896b
  408906:	jb     0x408928
  408908:	and    eax,0x666f2064
  40890d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  408911:	and    BYTE PTR gs:[rdi],ah
  408914:	and    eax,0x203a2773
  408919:	and    eax,0xa73
  40891e:	add    BYTE PTR [rax],al
  408920:	sub    BYTE PTR [rcx+0x63],al
  408923:	movsxd ebp,DWORD PTR [rdi+0x72]
  408926:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x206f7420
  40892e:	imul   ebp,DWORD PTR [rsi+0x74],0x70736f72
  408935:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40893a:	outs   dx,BYTE PTR ds:[rsi]
  40893b:	and    BYTE PTR [rcx+riz*2+0x74],ah
  40893f:	(bad)  
  408940:	sub    al,0x20
  408942:	jns    0x4089b3
  408944:	jne    0x408966
  408946:	outs   dx,BYTE PTR ds:[rsi]
  408947:	gs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40894e:	jo     0x4089b1
  408950:	jae    0x4089c5
  408952:	and    BYTE PTR [rdi],ah
  408954:	and    eax,0xa292773
  408959:	add    BYTE PTR [rip+0x69000a73],ah        # 0x694093d2
  40895f:	outs   dx,BYTE PTR ds:[rsi]
  408960:	je     0x4089d4
  408962:	outs   dx,DWORD PTR ds:[rsi]
  408963:	jae    0x4089d5
  408965:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x49]
  40896a:	outs   dx,BYTE PTR ds:[rsi]
  40896b:	je     0x4089df
  40896d:	outs   dx,DWORD PTR ds:[rsi]
  40896e:	jae    0x4089e0
  408970:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x61]
  408975:	and    BYTE PTR [rdx+0x65],dh
  408978:	ins    DWORD PTR es:[rdi],dx
  408979:	outs   dx,DWORD PTR ds:[rsi]
  40897a:	je     0x4089e1
  40897c:	and    BYTE PTR [rdi+0x62],ch
  40897f:	push   0x65
  408981:	movsxd esi,DWORD PTR [rsi+rbp*1+0x0]
  408985:	sub    eax,0x6365722d
  40898a:	jne    0x4089fe
  40898c:	jae    0x4089f3
  40898e:	and    BYTE PTR [rdx],cl
  408990:	add    BYTE PTR [rip+0x6c6e6f2d],ch        # 0x6caef8c3
  408996:	jns    0x4089c5
  408998:	jo     0x408a0c
  40899a:	outs   dx,DWORD PTR ds:[rsi]
  40899b:	jo     0x408a02
  40899d:	jb     0x408a13
  40899f:	imul   esp,DWORD PTR [rbp+0x73],0x6d000a20
  4089a6:	outs   dx,DWORD PTR ds:[rsi]
  4089a7:	outs   dx,BYTE PTR ds:[rsi]
  4089a8:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6e6f4d00
  4089b0:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x72206120
  4089b8:	gs ins DWORD PTR es:[rdi],dx
  4089ba:	outs   dx,DWORD PTR ds:[rsi]
  4089bb:	je     0x408a22
  4089bd:	and    BYTE PTR [rdi+0x62],ch
  4089c0:	push   0x65
  4089c2:	movsxd esi,DWORD PTR [rsi+rbp*1+0x0]
  4089c6:	add    BYTE PTR [rax],al
  4089c8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  4089ca:	outs   dx,BYTE PTR ds:[rsi]
  4089cb:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x20676e69
  4089d3:	jae    0x408a3e
  4089d5:	outs   dx,BYTE PTR ds:[esi]
  4089d7:	(bad)  
  4089d8:	ins    BYTE PTR es:[rdi],dx
  4089d9:	jae    0x4089fb
  4089db:	outs   dx,DWORD PTR ds:[rsi]
  4089dc:	outs   dx,BYTE PTR ds:[rsi]
  4089dd:	and    BYTE PTR [rdi+0x62],ch
  4089e0:	push   0x65
  4089e2:	movsxd esi,DWORD PTR [rax+riz*1+0x25]
  4089e6:	jae    0x408a08
  4089e8:	outs   dx,DWORD PTR ds:[rsi]
  4089e9:	ja     0x408a59
  4089eb:	gs and BYTE PTR fs:[rdx+0x79],ah
  4089f0:	and    BYTE PTR [rip+0xa73],ah        # 0x409469
  4089f6:	add    BYTE PTR [rax],al
  4089f8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  4089fa:	outs   dx,BYTE PTR ds:[rsi]
  4089fb:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x20676e69
  408a03:	jae    0x408a6e
  408a05:	outs   dx,BYTE PTR ds:[esi]
  408a07:	(bad)  
  408a08:	ins    BYTE PTR es:[rdi],dx
  408a09:	jae    0x408a2b
  408a0b:	data16 jb 0x408a7d
  408a0e:	ins    DWORD PTR es:[rdi],dx
  408a0f:	and    BYTE PTR [rcx+0x6c],ah
  408a12:	ins    BYTE PTR es:[rdi],dx
  408a13:	and    BYTE PTR [rdi+0x62],ch
  408a16:	push   0x65
  408a18:	movsxd esi,DWORD PTR [rbx+rsi*2+0x20]
  408a1c:	outs   dx,DWORD PTR ds:[rsi]
  408a1d:	ja     0x408a8d
  408a1f:	gs and BYTE PTR fs:[rdx+0x79],ah
  408a24:	and    BYTE PTR [rip+0x63000a73],ah        # 0x6340949d
  408a2a:	outs   dx,DWORD PTR ds:[rsi]
  408a2b:	ins    DWORD PTR es:[rdi],dx
  408a2c:	jo     0x408a9a
  408a2e:	gs je  0x408a96
  408a31:	add    BYTE PTR [rax],al
  408a33:	add    BYTE PTR [rax],al
  408a35:	add    BYTE PTR [rax],al
  408a37:	add    BYTE PTR [rax+0x65],ch
  408a3a:	ins    BYTE PTR es:[rdi],dx
  408a3b:	jo     0x408a5d
  408a3d:	or     ah,BYTE PTR [rbp+0x6d]
  408a40:	imul   esi,DWORD PTR [rax+riz*1+0xa],0x6c6c6163
  408a48:	and    BYTE PTR [rdx],cl
  408a4a:	imul   ebp,DWORD PTR [rsi+0x74],0x70736f72
  408a51:	movsxd esi,DWORD PTR gs:[rax+riz*1+0xa]
  408a56:	ins    DWORD PTR es:[rdi],dx
  408a57:	outs   dx,DWORD PTR ds:[rsi]
  408a58:	outs   dx,BYTE PTR ds:[rsi]
  408a59:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x55000a20
  408a61:	outs   dx,BYTE PTR ds:[rsi]
  408a62:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  408a66:	outs   dx,BYTE PTR ds:[rsi]
  408a67:	and    BYTE PTR [rbx+0x6f],ah
  408a6a:	ins    DWORD PTR es:[rdi],dx
  408a6b:	ins    DWORD PTR es:[rdi],dx
  408a6c:	(bad)  
  408a6d:	outs   dx,BYTE PTR ds:[rsi]
  408a6e:	and    BYTE PTR fs:[rdi],ah
  408a71:	and    eax,0xa2773
	...
  408a7e:	add    BYTE PTR [rax],al
  408a80:	ins    DWORD PTR es:[rdi],dx
  408a81:	outs   dx,DWORD PTR ds:[rsi]
  408a82:	outs   dx,BYTE PTR ds:[rsi]
  408a83:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x5f6e6f5f
  408a8b:	outs   dx,BYTE PTR ds:[rsi]
  408a8c:	(bad)  
  408a8d:	ins    DWORD PTR es:[rdi],dx
  408a8e:	gs pop rdi
  408a90:	(bad)  
  408a91:	jo     0x408b03
  408a93:	gs (bad) 
  408a95:	jb     0x408afc
  408a97:	add    BYTE PTR fs:[rbp+rsi*2+0x6d],ah
  408a9c:	jo     0x408afd
  408a9e:	jo     0x408b12
  408aa0:	outs   dx,DWORD PTR ds:[rsi]
  408aa1:	jo     0x408b08
  408aa3:	jb     0x408b19
  408aa5:	jns    0x408aa7
  408aa7:	jb     0x408b0e
  408aa9:	ins    DWORD PTR es:[rdi],dx
  408aaa:	outs   dx,DWORD PTR ds:[rsi]
  408aab:	jbe    0x408b12
  408aad:	pop    rdi
  408aae:	(bad)  
  408aaf:	jb     0x408b18
	...
  408abd:	add    BYTE PTR [rax],al
  408abf:	add    BYTE PTR [rbp+0x6f],ch
  408ac2:	imul   esp,DWORD PTR fs:[rsi+0x79],0x6772615f
  408aca:	jbe    0x408afc
  408acc:	pop    rdi
  408acd:	outs   dx,WORD PTR ds:[rsi]
  408acf:	jb     0x408b30
  408ad1:	movsxd ebp,DWORD PTR [rdi+0x6d]
  408ad4:	ins    DWORD PTR es:[rdi],dx
  408ad5:	(bad)  
  408ad6:	outs   dx,BYTE PTR ds:[rsi]
  408ad7:	add    BYTE PTR fs:[rbp+riz*2+0x73],ah
  408adc:	je     0x408ade
  408ade:	rex.R
  408adf:	gs jae 0x408b56
  408ae2:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  408ae9:	and    BYTE PTR [rsi+0x61],ch
  408aec:	ins    DWORD PTR es:[rdi],dx
  408aed:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  408af2:	ins    DWORD PTR es:[rdi],dx
  408af3:	outs   dx,DWORD PTR ds:[rsi]
  408af4:	outs   dx,BYTE PTR ds:[rsi]
  408af5:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6a626f00
  408afd:	movsxd esi,DWORD PTR gs:[rbp+rbp*1+0x70]
  408b02:	(bad)  
  408b03:	je     0x408b6d
  408b05:	add    BYTE PTR [rdi+0x62],cl
  408b08:	push   0x65
  408b0a:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  408b0e:	(bad)  
  408b0f:	je     0x408b79
  408b11:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  408b15:	ins    DWORD PTR es:[rdi],dx
  408b16:	outs   dx,DWORD PTR ds:[rsi]
  408b17:	outs   dx,BYTE PTR ds:[rsi]
  408b18:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x0
	...
  408b40:	(bad)  [rdx+0x40]
  408b46:	add    BYTE PTR [rax],al
  408b48:	add    BYTE PTR fs:[rax],al
  408b4b:	add    BYTE PTR [rax],al
  408b4d:	add    BYTE PTR [rax],al
  408b4f:	add    BYTE PTR [rcx],al
  408b51:	add    BYTE PTR [rax],al
  408b53:	add    BYTE PTR [rax],al
  408b55:	add    BYTE PTR [rax],al
  408b57:	add    BYTE PTR [rax-0x40],cl
  408b5a:	add    BYTE PTR [rax],al
  408b5d:	add    BYTE PTR [rax],al
  408b5f:	add    dh,bl
  408b61:	mov    al,BYTE PTR [rax+0x0]
	...
  408b70:	cli    
  408b71:	mov    al,BYTE PTR [rax+0x0]
  408b74:	add    BYTE PTR [rax],al
  408b76:	add    BYTE PTR [rax],al
  408b78:	outs   dx,DWORD PTR ds:[rsi]
  408b79:	add    BYTE PTR [rax],al
  408b7b:	add    BYTE PTR [rax],al
  408b7d:	add    BYTE PTR [rax],al
  408b7f:	add    BYTE PTR [rcx],al
  408b81:	add    BYTE PTR [rax],al
  408b83:	add    BYTE PTR [rax],al
  408b85:	add    BYTE PTR [rax],al
  408b87:	add    BYTE PTR [rax-0x40],al
  408b8a:	add    BYTE PTR [rax],al
  408b8d:	add    BYTE PTR [rax],al
  408b8f:	add    BYTE PTR [rsi],al
  408b91:	mov    eax,DWORD PTR [rax+0x0]
	...
  408bd0:	rex.R
  408bd1:	gs jae 0x408c48
  408bd4:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  408bdb:	and    BYTE PTR [rsi+0x61],ch
  408bde:	ins    DWORD PTR es:[rdi],dx
  408bdf:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  408be4:	imul   ebp,DWORD PTR [rsi+0x74],0x70736f72
  408beb:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x4f]
  408bf0:	(bad)  
  408bf1:	push   0x65
  408bf3:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  408bf7:	(bad)  
  408bf8:	je     0x408c62
  408bfa:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  408bfe:	imul   ebp,DWORD PTR [rsi+0x74],0x70736f72
  408c05:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x78]
  408c0a:	ins    DWORD PTR es:[rdi],dx
  408c0b:	ins    BYTE PTR es:[rdi],dx
  408c0c:	add    BYTE PTR [rax+0x72],dl
  408c0f:	imul   ebp,DWORD PTR [rsi+0x74],0x4c4d5820
  408c16:	add    BYTE PTR [rdx+0x65],dh
  408c19:	movsxd esi,DWORD PTR [rbp+0x72]
  408c1c:	jae    0x408c83
  408c1e:	add    BYTE PTR [rcx+0x6e],cl
  408c21:	je     0x408c95
  408c23:	outs   dx,DWORD PTR ds:[rsi]
  408c24:	jae    0x408c96
  408c26:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x63]
  408c2b:	push   0x72646c69
  408c30:	outs   dx,BYTE PTR gs:[rsi]
  408c32:	add    BYTE PTR [rdi+0x6e],ch
  408c35:	ins    BYTE PTR es:[rdi],dx
  408c36:	jns    0x408c65
  408c38:	jo     0x408cac
  408c3a:	outs   dx,DWORD PTR ds:[rsi]
  408c3b:	jo     0x408ca2
  408c3d:	jb     0x408cb3
  408c3f:	imul   esp,DWORD PTR [rbp+0x73],0x6c6e4f00
  408c46:	jns    0x408c68
  408c48:	jo     0x408cbc
  408c4a:	imul   ebp,DWORD PTR [rsi+0x74],0x6f727020
  408c51:	jo     0x408cb8
  408c53:	jb     0x408cc9
  408c55:	imul   esp,DWORD PTR [rbp+0x73],0x0
	...
  408c80:	(bad)  [rdx+0x40]
  408c86:	add    BYTE PTR [rax],al
  408c88:	add    BYTE PTR fs:[rax],al
  408c8b:	add    BYTE PTR [rax],al
  408c8d:	add    BYTE PTR [rax],al
  408c8f:	add    BYTE PTR [rcx],al
  408c91:	add    BYTE PTR [rax],al
  408c93:	add    BYTE PTR [rax],al
  408c95:	add    BYTE PTR [rax],al
  408c97:	add    BYTE PTR [rax-0x40],ch
  408c9a:	add    BYTE PTR [rax],al
  408c9d:	add    BYTE PTR [rax],al
  408c9f:	add    al,dl
  408ca1:	mov    eax,DWORD PTR [rax+0x0]
	...
  408cb0:	cli    
  408cb1:	mov    al,BYTE PTR [rax+0x0]
  408cb4:	add    BYTE PTR [rax],al
  408cb6:	add    BYTE PTR [rax],al
  408cb8:	outs   dx,DWORD PTR ds:[rsi]
  408cb9:	add    BYTE PTR [rax],al
  408cbb:	add    BYTE PTR [rax],al
  408cbd:	add    BYTE PTR [rax],al
  408cbf:	add    BYTE PTR [rcx],al
  408cc1:	add    BYTE PTR [rax],al
  408cc3:	add    BYTE PTR [rax],al
  408cc5:	add    BYTE PTR [rax],al
  408cc7:	add    BYTE PTR [rax-0x40],ah
  408cca:	add    BYTE PTR [rax],al
  408ccd:	add    BYTE PTR [rax],al
  408ccf:	add    bh,ch
  408cd1:	mov    eax,DWORD PTR [rax+0x0]
	...
  408ce0:	or     DWORD PTR [rax+rax*2+0x0],ecx
  408ce7:	add    BYTE PTR [rax+0x0],bh
	...
  408cf6:	add    BYTE PTR [rax],al
  408cf8:	pop    rax
  408cf9:	rol    BYTE PTR [rax+0x0],0x0
  408cfd:	add    BYTE PTR [rax],al
  408cff:	add    BYTE PTR [rip+0x408c],cl        # 0x40cd91
	...
  408d0d:	add    BYTE PTR [rax],al
  408d0f:	add    BYTE PTR [rdi],dl
  408d11:	mov    WORD PTR [rax+0x0],es
  408d14:	add    BYTE PTR [rax],al
  408d16:	add    BYTE PTR [rax],al
  408d18:	jb     0x408d1a
	...
  408d26:	add    BYTE PTR [rax],al
  408d28:	push   rsp
  408d29:	rol    BYTE PTR [rax+0x0],0x0
  408d2d:	add    BYTE PTR [rax],al
  408d2f:	add    BYTE PTR [rdi],bl
  408d31:	mov    WORD PTR [rax+0x0],es
	...
  408d40:	xor    ecx,DWORD PTR [rax+rax*2+0x0]
  408d47:	add    BYTE PTR [rax+0x0],dh
	...
  408d56:	add    BYTE PTR [rax],al
  408d58:	push   rax
  408d59:	rol    BYTE PTR [rax+0x0],0x0
  408d5d:	add    BYTE PTR [rax],al
  408d5f:	add    BYTE PTR [rbx-0x74],al
  408d62:	add    BYTE PTR [rax],al
	...
  408d9d:	add    BYTE PTR [rax],al
  408d9f:	add    BYTE PTR [rbp+riz*2+0x73],al
  408da3:	je     0x408e0e
  408da5:	outs   dx,BYTE PTR ds:[rsi]
  408da6:	(bad)  
  408da7:	je     0x408e12
  408da9:	outs   dx,DWORD PTR ds:[rsi]
  408daa:	outs   dx,BYTE PTR ds:[rsi]
  408dab:	and    BYTE PTR [rsi+0x61],ch
  408dae:	ins    DWORD PTR es:[rdi],dx
  408daf:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  408db4:	imul   ebp,DWORD PTR [rsi+0x76],0x20656b6f
  408dbb:	ins    DWORD PTR es:[rdi],dx
  408dbc:	gs je  0x408e27
  408dbf:	outs   dx,DWORD PTR ds:[rsi]
  408dc0:	and    BYTE PTR fs:[rdi+0x6e],ch
  408dc4:	add    BYTE PTR [rax],al
  408dc6:	add    BYTE PTR [rax],al
  408dc8:	rex.WRXB (bad) 
  408dca:	push   0x65
  408dcc:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  408dd0:	(bad)  
  408dd1:	je     0x408e3b
  408dd3:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  408dd7:	imul   ebp,DWORD PTR [rsi+0x76],0x20656b6f
  408dde:	ins    DWORD PTR es:[rdi],dx
  408ddf:	gs je  0x408e4a
  408de2:	outs   dx,DWORD PTR ds:[rsi]
  408de3:	and    BYTE PTR fs:[rdi+0x6e],ch
  408de7:	add    BYTE PTR [rbp+0x65],ch
  408dea:	je     0x408e54
  408dec:	outs   dx,DWORD PTR ds:[rsi]
  408ded:	add    BYTE PTR fs:[rbp+0x65],cl
  408df1:	je     0x408e5b
  408df3:	outs   dx,DWORD PTR ds:[rsi]
  408df4:	and    BYTE PTR fs:[rcx+0x6e],ah
  408df8:	and    BYTE PTR fs:[rcx+0x6e],ch
  408dfc:	je     0x408e63
  408dfe:	jb     0x408e66
  408e00:	(bad)  
  408e01:	movsxd esp,DWORD PTR [rbp+0x20]
  408e04:	outs   dx,BYTE PTR ds:[rsi]
  408e05:	(bad)  
  408e06:	ins    DWORD PTR es:[rdi],dx
  408e07:	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  408e0c:	outs   dx,DWORD PTR gs:[rsi]
  408e0e:	jne    0x408e84
  408e10:	add    BYTE PTR [rcx+rbp*2+0x6d],dl
  408e14:	outs   dx,DWORD PTR gs:[rsi]
  408e16:	jne    0x408e8c
  408e18:	and    BYTE PTR [rcx+0x6e],ch
  408e1b:	and    BYTE PTR [rbx+0x65],dh
  408e1e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408e21:	fs jae 0x408e24
	...
  408e40:	(bad)  [rdx+0x40]
  408e46:	add    BYTE PTR [rax],al
  408e48:	add    BYTE PTR fs:[rax],al
  408e4b:	add    BYTE PTR [rax],al
  408e4d:	add    BYTE PTR [rax],al
  408e4f:	add    BYTE PTR [rcx],al
  408e51:	add    BYTE PTR [rax],al
  408e53:	add    BYTE PTR [rax],al
  408e55:	add    BYTE PTR [rax],al
  408e57:	add    BYTE PTR [rax+0x40c0],al
  408e5d:	add    BYTE PTR [rax],al
  408e5f:	add    BYTE PTR [rax+0x408d],ah
	...
  408e6d:	add    BYTE PTR [rax],al
  408e6f:	add    dl,bh
  408e71:	mov    al,BYTE PTR [rax+0x0]
  408e74:	add    BYTE PTR [rax],al
  408e76:	add    BYTE PTR [rax],al
  408e78:	outs   dx,DWORD PTR ds:[rsi]
  408e79:	add    BYTE PTR [rax],al
  408e7b:	add    BYTE PTR [rax],al
  408e7d:	add    BYTE PTR [rax],al
  408e7f:	add    BYTE PTR [rcx],al
  408e81:	add    BYTE PTR [rax],al
  408e83:	add    BYTE PTR [rax],al
  408e85:	add    BYTE PTR [rax],al
  408e87:	add    BYTE PTR [rax-0x40],bh
  408e8a:	add    BYTE PTR [rax],al
  408e8d:	add    BYTE PTR [rax],al
  408e8f:	add    al,cl
  408e91:	lea    eax,[rax+0x0]
	...
  408ea0:	call   0x40cf32
  408ea5:	add    BYTE PTR [rax],al
  408ea7:	add    BYTE PTR [rbp+0x0],ch
  408eaa:	add    BYTE PTR [rax],al
  408eac:	add    BYTE PTR [rax],al
  408eae:	add    BYTE PTR [rax],al
  408eb0:	add    DWORD PTR [rax],eax
  408eb2:	add    BYTE PTR [rax],al
  408eb4:	add    BYTE PTR [rax],al
  408eb6:	add    BYTE PTR [rax],al
  408eb8:	jo     0x408e7a
  408eba:	add    BYTE PTR [rax],al
  408ebd:	add    BYTE PTR [rax],al
  408ebf:	add    bh,ch
  408ec1:	lea    eax,[rax+0x0]
	...
  408ed0:	or     DWORD PTR [rsi+0x40],ecx
  408ed6:	add    BYTE PTR [rax],al
  408ed8:	je     0x408eda
  408eda:	add    BYTE PTR [rax],al
  408edc:	add    BYTE PTR [rax],al
  408ede:	add    BYTE PTR [rax],al
  408ee0:	add    al,BYTE PTR [rax]
  408ee2:	add    BYTE PTR [rax],al
  408ee4:	add    BYTE PTR [rax],al
  408ee6:	add    BYTE PTR [rax],al
  408ee8:	adc    BYTE PTR [rax+0x40],dh
  408eeb:	add    BYTE PTR [rax],al
  408eed:	add    BYTE PTR [rax],al
  408eef:	add    BYTE PTR [rcx],dl
  408ef1:	mov    es,WORD PTR [rax+0x0]
	...
  408f30:	rex.WRXB jo 0x408fa7
  408f33:	imul   ebp,DWORD PTR [rdi+0x6e],0x64206c61
  408f3a:	gs jae 0x408fb1
  408f3d:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  408f44:	and    BYTE PTR [rsi+0x6f],ah
  408f47:	jb     0x408f69
  408f49:	jae    0x408fb4
  408f4b:	outs   dx,BYTE PTR ds:[esi]
  408f4d:	(bad)  
  408f4e:	ins    BYTE PTR es:[rdi],dx
  408f4f:	and    BYTE PTR [rax],ch
  408f51:	jne    0x408fc1
  408f53:	imul   esi,DWORD PTR [rcx+0x75],0x616e2065
  408f5a:	ins    DWORD PTR es:[rdi],dx
  408f5b:	sub    DWORD PTR gs:[rax],eax
  408f5e:	rex.WRXB (bad) 
  408f60:	push   0x65
  408f62:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  408f66:	(bad)  
  408f67:	je     0x408fd1
  408f69:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  408f6d:	gs ins DWORD PTR es:[rdi],dx
  408f6f:	imul   esi,DWORD PTR [rax+riz*1+0x73],0x616e6769
  408f77:	ins    BYTE PTR es:[rdi],dx
  408f78:	and    BYTE PTR [rdi+0x6e],ch
  408f7b:	add    BYTE PTR [rbx+0x69],dh
  408f7e:	outs   dx,BYTE PTR ds:[esi]
  408f80:	(bad)  
  408f81:	ins    BYTE PTR es:[rdi],dx
  408f82:	add    BYTE PTR [rbx+0x69],dl
  408f85:	outs   dx,BYTE PTR ds:[esi]
  408f87:	(bad)  
  408f88:	ins    BYTE PTR es:[rdi],dx
  408f89:	and    BYTE PTR [rcx+0x6e],ah
  408f8c:	and    BYTE PTR fs:[rcx+0x6e],ch
  408f90:	je     0x408ff7
  408f92:	jb     0x408ffa
  408f94:	(bad)  
  408f95:	movsxd esp,DWORD PTR [rbp+0x20]
  408f98:	outs   dx,BYTE PTR ds:[rsi]
  408f99:	(bad)  
  408f9a:	ins    DWORD PTR es:[rdi],dx
  408f9b:	add    BYTE PTR gs:[rax],al
	...
  408fbe:	add    BYTE PTR [rax],al
  408fc0:	(bad)  [rdx+0x40]
  408fc6:	add    BYTE PTR [rax],al
  408fc8:	add    BYTE PTR fs:[rax],al
  408fcb:	add    BYTE PTR [rax],al
  408fcd:	add    BYTE PTR [rax],al
  408fcf:	add    BYTE PTR [rcx],al
  408fd1:	add    BYTE PTR [rax],al
  408fd3:	add    BYTE PTR [rax],al
  408fd5:	add    BYTE PTR [rax],al
  408fd7:	add    BYTE PTR [rax+0x40c0],bl
  408fdd:	add    BYTE PTR [rax],al
  408fdf:	add    BYTE PTR [rax],dh
  408fe1:	pop    QWORD PTR [rax+0x0]
	...
  408ff0:	cli    
  408ff1:	mov    al,BYTE PTR [rax+0x0]
  408ff4:	add    BYTE PTR [rax],al
  408ff6:	add    BYTE PTR [rax],al
  408ff8:	outs   dx,DWORD PTR ds:[rsi]
  408ff9:	add    BYTE PTR [rax],al
  408ffb:	add    BYTE PTR [rax],al
  408ffd:	add    BYTE PTR [rax],al
  408fff:	add    BYTE PTR [rcx],al
  409001:	add    BYTE PTR [rax],al
  409003:	add    BYTE PTR [rax],al
  409005:	add    BYTE PTR [rax],al
  409007:	add    BYTE PTR [rax+0x40c0],dl
  40900d:	add    BYTE PTR [rax],al
  40900f:	add    BYTE PTR [rsi-0x71],bl
  409012:	add    BYTE PTR [rax],al
	...
  40901d:	add    BYTE PTR [rax],al
  40901f:	add    BYTE PTR [rdi+rcx*4+0x40],bh
  409023:	add    BYTE PTR [rax],al
  409025:	add    BYTE PTR [rax],al
  409027:	add    BYTE PTR [rbx+0x0],dh
  40902a:	add    BYTE PTR [rax],al
  40902c:	add    BYTE PTR [rax],al
  40902e:	add    BYTE PTR [rax],al
  409030:	add    DWORD PTR [rax],eax
  409032:	add    BYTE PTR [rax],al
  409034:	add    BYTE PTR [rax],al
  409036:	add    BYTE PTR [rax],al
  409038:	mov    al,al
  40903a:	add    BYTE PTR [rax],al
  40903d:	add    BYTE PTR [rax],al
  40903f:	add    BYTE PTR [rbx+0x408f],al
	...
  40907d:	add    BYTE PTR [rax],al
  40907f:	add    BYTE PTR [rbx+0x79],dh
  409082:	jae    0x4090f8
  409084:	gs ins DWORD PTR es:[rdi],dx
  409086:	add    BYTE PTR [rbx+0x6f],al
  409089:	outs   dx,BYTE PTR ds:[rsi]
  40908a:	outs   dx,BYTE PTR ds:[rsi]
  40908b:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  409090:	outs   dx,DWORD PTR ds:[rsi]
  409091:	and    BYTE PTR [rax+rbp*2+0x65],dh
  409095:	and    BYTE PTR [rbx+0x79],dh
  409098:	jae    0x40910e
  40909a:	gs ins DWORD PTR es:[rdi],dx
  40909c:	and    BYTE PTR [rdx+0x75],ah
  40909f:	jae    0x4090a1
  4090a1:	jae    0x409108
  4090a3:	jae    0x409118
  4090a5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f4300
  4090ac:	outs   dx,BYTE PTR ds:[rsi]
  4090ad:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  4090b2:	outs   dx,DWORD PTR ds:[rsi]
  4090b3:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4090b7:	and    BYTE PTR [rbx+0x65],dh
  4090ba:	jae    0x40912f
  4090bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x73756220
  4090c3:	add    BYTE PTR [rcx+0x64],ah
  4090c6:	fs jb  0x40912e
  4090c9:	jae    0x40913e
  4090cb:	add    BYTE PTR [rax],al
  4090cd:	add    BYTE PTR [rax],al
  4090cf:	add    BYTE PTR [rbx+0x6f],al
  4090d2:	outs   dx,BYTE PTR ds:[rsi]
  4090d3:	outs   dx,BYTE PTR ds:[rsi]
  4090d4:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  4090d9:	outs   dx,DWORD PTR ds:[rsi]
  4090da:	and    BYTE PTR [rdi+0x69],ah
  4090dd:	jbe    0x409144
  4090df:	outs   dx,BYTE PTR ds:[rsi]
  4090e0:	and    BYTE PTR [rbp+rbp*1+0x42],al
  4090e4:	jne    0x409159
  4090e6:	and    BYTE PTR [rcx+0x64],ah
  4090e9:	fs jb  0x409151
  4090ec:	jae    0x409161
	...
  4090fe:	add    BYTE PTR [rax],al
  409100:	adc    BYTE PTR [rax+0x40],0x0
  409107:	add    BYTE PTR [rcx+0x0],bh
	...
  409116:	add    BYTE PTR [rax],al
  409118:	lods   al,BYTE PTR ds:[rsi]
  409119:	rol    BYTE PTR [rax+0x0],0x0
  40911d:	add    BYTE PTR [rax],al
  40911f:	add    BYTE PTR [rdi+0x4090],al
	...
  40912d:	add    BYTE PTR [rax],al
  40912f:	add    BYTE PTR [rcx+0x4090],ah
  409135:	add    BYTE PTR [rax],al
  409137:	add    BYTE PTR [rbp+0x0],ah
	...
  409146:	add    BYTE PTR [rax],al
  409148:	test   al,0xc0
  40914a:	add    BYTE PTR [rax],al
  40914d:	add    BYTE PTR [rax],al
  40914f:	add    BYTE PTR [rcx+0x4090],ch
	...
  40915d:	add    BYTE PTR [rax],al
  40915f:	add    ah,al
  409161:	nop
  409162:	add    BYTE PTR [rax],al
  409165:	add    BYTE PTR [rax],al
  409167:	add    BYTE PTR [rcx+0x0],ah
  40916a:	add    BYTE PTR [rax],al
  40916c:	add    BYTE PTR [rax],al
  40916e:	add    BYTE PTR [rax],al
  409170:	add    DWORD PTR [rax],eax
  409172:	add    BYTE PTR [rax],al
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	movabs al,ds:0xd0000000000040c0
  409181:	nop
  409182:	add    BYTE PTR [rax],al
	...
  4091c1:	mov    BYTE PTR [rax+0x0],0x0
  4091c5:	add    BYTE PTR [rax],al
  4091c7:	add    BYTE PTR [rax],al
  4091c9:	rol    DWORD PTR [rax+0x0],0x0
  4091cd:	add    BYTE PTR [rax],al
  4091cf:	add    BYTE PTR [rax+0x37],al
  4091d2:	add    BYTE PTR [rax],al
	...
  4091dd:	add    BYTE PTR [rax],al
  4091df:	add    BYTE PTR [rcx+0x72],al
  4091e2:	addr32 jne 0x409252
  4091e5:	outs   dx,BYTE PTR gs:[rsi]
  4091e7:	je     0x409209
  4091e9:	outs   dx,DWORD PTR fs:[rsi]
  4091eb:	ins    DWORD PTR es:[rdi],dx
  4091ec:	(bad)  
  4091ed:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4091f4:	jb     0x409216
  4091f6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4091fa:	rex.B
  4091fb:	rex.WB
  4091fc:	rex.WRX sub QWORD PTR [rax],r8
  4091ff:	rex.B jb 0x409269
  409202:	jne    0x409271
  409204:	outs   dx,BYTE PTR gs:[rsi]
  409206:	je     0x409228
  409208:	jae    0x409273
  40920a:	outs   dx,BYTE PTR ds:[rsi]
  40920b:	addr32 jne 0x40927a
  40920e:	(bad)  
  40920f:	jb     0x40927a
  409211:	je     0x40928c
  409213:	and    BYTE PTR [rax],ch
  409215:	push   rbx
  409216:	rex.WB
  409217:	rex.RXB
  409218:	rex.WRX sub QWORD PTR [rax],r8
  40921b:	add    BYTE PTR [rax],al
  40921d:	add    BYTE PTR [rax],al
  40921f:	add    BYTE PTR [rdi+0x76],cl
  409222:	gs jb  0x40928b
  409225:	ins    BYTE PTR es:[rdi],dx
  409226:	outs   dx,DWORD PTR ds:[rsi]
  409227:	ja     0x409249
  409229:	jb     0x40928c
  40922b:	outs   dx,BYTE PTR ds:[rsi]
  40922c:	and    BYTE PTR gs:[ebp+0x72],ah
  409231:	jb     0x4092a2
  409233:	jb     0x409255
  409235:	sub    BYTE PTR [rdi+0x56],cl
  409238:	rex.RB push r10
  40923a:	rex.RX
  40923b:	rex.WR
  40923c:	rex.WRXB push r15
  40923e:	sub    DWORD PTR [rax],eax
  409240:	push   rax
  409241:	(bad)  
  409242:	jb     0x4092b8
  409244:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40924b:	jae    0x40926d
  40924d:	outs   dx,DWORD PTR ds:[rsi]
  40924e:	data16 and BYTE PTR [rbx+0x69],dh
  409252:	outs   dx,BYTE PTR ds:[esi]
  409254:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40925b:	and    BYTE PTR gs:[rax],ch
  40925e:	push   rax
  40925f:	rex.WR
  409260:	rex.WRXB push r11
  409262:	push   rbx
  409263:	sub    DWORD PTR [rax],eax
  409265:	add    BYTE PTR [rax],al
  409267:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40926b:	(bad)  
  40926c:	ins    BYTE PTR es:[rdi],dx
  40926d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  409271:	jae    0x409293
  409273:	outs   dx,DWORD PTR ds:[rsi]
  409274:	data16 and BYTE PTR [rbx+0x69],dh
  409278:	outs   dx,BYTE PTR ds:[esi]
  40927a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  409281:	and    BYTE PTR gs:[rax],ch
  409284:	push   rsp
  409285:	rex.WR
  409286:	rex.WRXB push r11
  409288:	push   rbx
  409289:	sub    DWORD PTR [rax],eax
  40928b:	add    BYTE PTR [rax],al
  40928d:	add    BYTE PTR [rax],al
  40928f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  409293:	and    BYTE PTR [rdx+0x65],dh
  409296:	jae    0x40930d
  409298:	ins    BYTE PTR es:[rdi],dx
  409299:	je     0x4092bb
  40929b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4092a2:	jae    0x409311
  4092a4:	(bad)  
  4092a5:	ins    BYTE PTR es:[rdi],dx
  4092a6:	ins    BYTE PTR es:[rdi],dx
  4092a7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4092ab:	(bad)  
  4092ac:	and    BYTE PTR gs:[rdx+0x65],dh
  4092b0:	jo     0x409324
  4092b2:	gs jae 0x40931a
  4092b5:	outs   dx,BYTE PTR ds:[rsi]
  4092b6:	je     0x40931d
  4092b8:	and    BYTE PTR fs:[rax],ch
  4092bb:	push   rbp
  4092bc:	rex.WRX
  4092bd:	rex.R
  4092be:	rex.RB push r10
  4092c0:	rex.RX
  4092c1:	rex.WR
  4092c2:	rex.WRXB push r15
  4092c4:	sub    DWORD PTR [rax],eax
  4092c6:	push   rbp
  4092c7:	outs   dx,BYTE PTR ds:[rsi]
  4092c8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4092cc:	outs   dx,BYTE PTR ds:[rsi]
  4092cd:	and    BYTE PTR [rbp+0x72],ah
  4092d0:	jb     0x409341
  4092d2:	jb     0x4092d4
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	pop    rdi
  4092d9:	ins    DWORD PTR es:[rdi],dx
  4092da:	(bad)  
  4092db:	je     0x409345
  4092dd:	gs jb  0x409352
  4092e0:	sub    BYTE PTR [rcx],ch
  4092e2:	cmp    ah,BYTE PTR [rax]
  4092e4:	and    eax,0x6e692073
  4092e9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765bb62
  4092ef:	sub    al,0x20
  4092f1:	and    eax,0x20202967
  4092f6:	sub    BYTE PTR [rdx+0x65],dh
  4092f9:	je     0x409371
  4092fb:	(bad)  
  4092fc:	ins    BYTE PTR es:[rdi],dx
  4092fd:	cmp    eax,0xa296725
  409302:	add    BYTE PTR [rax],al
  409304:	or     al,0xa6
  409306:	(bad)  
  409307:	dec    DWORD PTR [rbp-0x5b]
  40930a:	(bad)  
  40930b:	(bad)  
  40930c:	mov    esp,0xccffffa5
  409311:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  409312:	(bad)  
  409313:	(bad)  
  409314:	fsub   QWORD PTR [rbp-0x5a130001]
  40931a:	(bad)  
  40931b:	(bad)  
  40931c:	cld    
  40931d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40931e:	(bad)  
  40931f:	dec    DWORD PTR [rbp+0x69]
  409322:	outs   dx,BYTE PTR ds:[rsi]
  409323:	addr32 ja 0x409353
  409326:	ja     0x40935e
  409328:	xor    al,0x20
  40932a:	jb     0x4093a1
  40932c:	outs   dx,BYTE PTR ds:[rsi]
  40932d:	je     0x409398
  40932f:	ins    DWORD PTR es:[rdi],dx
  409330:	and    BYTE PTR gs:[rsi+0x61],ah
  409334:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],al
  409340:	rex.B
  409341:	fs fs jb 0x4093aa
  409345:	jae    0x4093ba
  409347:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8b3bd
  40934d:	jae    0x40936f
  40934f:	outs   dx,BYTE PTR ds:[rsi]
  409350:	outs   dx,DWORD PTR ds:[rsi]
  409351:	and    BYTE PTR [rcx+0x6d],ch
  409354:	(bad)  
  409355:	addr32 gs sub eax,0x74636573
  40935c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  409363:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40936a:	jne    0x4093d1
  40936c:	jb     0x4093e7
  40936e:	and    BYTE PTR [rsi+0x61],ah
  409371:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  409379:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2b3e3
  40937f:	je     0x4093e6
  409381:	jae    0x4093a3
  409383:	(bad)  
  409384:	je     0x4093a6
  409386:	(bad)  
  409387:	fs fs jb 0x4093f0
  40938b:	jae    0x409400
  40938d:	and    BYTE PTR [rip+0x70],ah        # 0x409403
  409393:	add    BYTE PTR [rax],al
  409395:	add    BYTE PTR [rax],al
  409397:	add    BYTE PTR [rax],ah
  409399:	and    BYTE PTR [rsi+0x69],dl
  40939c:	jb     0x409412
  40939e:	jne    0x409401
  4093a0:	ins    BYTE PTR es:[rdi],dx
  4093a1:	push   rax
  4093a2:	jb     0x409413
  4093a4:	je     0x40940b
  4093a6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4093aa:	(bad)  
  4093ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4093b3:	push   0x646f6320
  4093b8:	and    BYTE PTR gs:[rax],dh
  4093bb:	js     0x4093e2
  4093bd:	js     0x4093bf
  4093bf:	add    BYTE PTR [rax],ah
  4093c1:	and    BYTE PTR [rbp+0x6e],dl
  4093c4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4093c8:	outs   dx,BYTE PTR ds:[rsi]
  4093c9:	and    BYTE PTR [rax+0x73],dh
  4093cc:	gs jne 0x409433
  4093cf:	outs   dx,DWORD PTR ds:[rsi]
  4093d0:	and    BYTE PTR [rdx+0x65],dh
  4093d3:	ins    BYTE PTR es:[rdi],dx
  4093d4:	outs   dx,DWORD PTR ds:[rsi]
  4093d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4093d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4093df:	je     0x409450
  4093e1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4093e4:	and    BYTE PTR [rsi+0x65],dh
  4093e7:	jb     0x40945c
  4093e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4093f0:	or     al,BYTE PTR [rax]
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	and    BYTE PTR [rax],ah
  4093fa:	push   rbp
  4093fb:	outs   dx,BYTE PTR ds:[rsi]
  4093fc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409400:	outs   dx,BYTE PTR ds:[rsi]
  409401:	and    BYTE PTR [rax+0x73],dh
  409404:	gs jne 0x40946b
  409407:	outs   dx,DWORD PTR ds:[rsi]
  409408:	and    BYTE PTR [rdx+0x65],dh
  40940b:	ins    BYTE PTR es:[rdi],dx
  40940c:	outs   dx,DWORD PTR ds:[rsi]
  40940d:	movsxd esp,DWORD PTR [rcx+0x74]
  409410:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  409417:	and    BYTE PTR [rbx+0x69],dh
  40941a:	jp     0x409481
  40941c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4ac286
	...
  40942e:	add    BYTE PTR [rax],al
  409430:	cs jo  0x409497
  409433:	(bad)  
  409434:	je     0x409497
	...
  40943e:	add    BYTE PTR [rax],al
  409440:	push   rax
  409441:	jo     0x409483
	...
  40944f:	add    BYTE PTR [rax+0x70],ah
  409452:	add    BYTE PTR [rax],al
	...
  40945d:	add    BYTE PTR [rax],al
  40945f:	add    BYTE PTR [rax+0x4067],dh
	...
  40946d:	add    BYTE PTR [rax],al
  40946f:	add    al,ah
  409471:	cdq    
  409472:	add    BYTE PTR [rax],al
	...
  40947d:	add    BYTE PTR [rax],al
  40947f:	add    al,ah
  409481:	cdq    
  409482:	add    BYTE PTR [rax],al
	...
  40948d:	add    BYTE PTR [rax],al
  40948f:	add    al,dl
  409491:	xchg   ecx,eax
  409492:	add    BYTE PTR [rax],al
	...
  4094a1:	add    BYTE PTR [rax+0x0],al
	...
  4094b0:	rex.WR fld DWORD PTR [rax+0x0]
	...
  4094c0:	je     0x40949b
  4094c2:	add    BYTE PTR [rax],al
	...
  4094cd:	add    BYTE PTR [rax],al
  4094cf:	add    BYTE PTR [rcx+rbx*8+0x40],cl
	...
  4094de:	add    BYTE PTR [rax],al
  4094e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4094e1:	fld    DWORD PTR [rax+0x0]
	...
  4094f0:	rex mov DWORD PTR [rax+0x0],0x0
	...
  409500:	test   al,0xca
  409502:	add    BYTE PTR [rax],al
	...
  40950d:	add    BYTE PTR [rax],al
  40950f:	add    BYTE PTR [rax+0x40ca],ah
	...
  40951d:	add    BYTE PTR [rax],al
  40951f:	add    BYTE PTR [rax+0x40ca],dl
	...
  40952d:	add    BYTE PTR [rax],al
  40952f:	add    BYTE PTR [rax+0x40ca],bl
	...
  409541:	lock add BYTE PTR [rax],al
	...
  40954d:	add    BYTE PTR [rax],al
  40954f:	add    BYTE PTR [rax],dl
  409551:	lock add BYTE PTR [rax],al
	...
  40955d:	add    BYTE PTR [rax],al
  40955f:	add    BYTE PTR [rax],bl
  409561:	lock add BYTE PTR [rax],al
	...
  40956d:	add    BYTE PTR [rax],al
  40956f:	add    BYTE PTR [rax],dh
  409571:	lock add BYTE PTR [rax],al
	...
  40957d:	add    BYTE PTR [rax],al
  40957f:	add    al,al
  409581:	rol    BYTE PTR [rax+0x0],0x0
	...
  40958d:	add    BYTE PTR [rax],al
  40958f:	add    BYTE PTR [rax],dl
  409591:	mov    DWORD PTR [rax+0x0],0x0
	...
  4095a0:	rol    BYTE PTR [rax+0x40],1
	...
  4095af:	add    BYTE PTR [rax],ah
  4095b1:	cmp    BYTE PTR [rax+0x0],al
	...
  4095c0:	rol    dh,0x40
	...
  4095cf:	add    BYTE PTR [rax],bh
  4095d1:	xor    eax,DWORD PTR [rax+0x0]
	...
  4095e0:	cmp    BYTE PTR [rdx],dh
  4095e2:	add    BYTE PTR [rax],al
	...
  4095ed:	add    BYTE PTR [rax],al
  4095ef:	add    BYTE PTR [rax],ch
  4095f1:	xor    al,BYTE PTR [rax+0x0]
	...
  409600:	and    BYTE PTR [rdx],dh
  409602:	add    BYTE PTR [rax],al
	...
  40960d:	add    BYTE PTR [rax],al
  40960f:	add    BYTE PTR [rax+0x31],cl
  409612:	add    BYTE PTR [rax],al
	...
  40961d:	add    BYTE PTR [rax],al
  40961f:	add    BYTE PTR [rax],ch
  409621:	xor    DWORD PTR [rax+0x0],eax
	...
  409630:	lock mov BYTE PTR [rax+0x0],0x0
	...
  40963d:	add    BYTE PTR [rax],al
  40963f:	add    al,dl
  409641:	rol    BYTE PTR [rax+0x0],0x0
	...
  40964d:	add    BYTE PTR [rax],al
  40964f:	add    al,bl
  409651:	mov    BYTE PTR [rax+0x0],0x0
	...
  40965d:	add    BYTE PTR [rax],al
  40965f:	add    ah,dl
  409661:	mov    BYTE PTR [rax+0x0],0x0
	...
  40966d:	add    BYTE PTR [rax],al
  40966f:	add    al,dl
  409671:	mov    BYTE PTR [rax+0x0],0x0
	...
  40967d:	add    BYTE PTR [rax],al
  40967f:	add    BYTE PTR [rdi+0x43],al
  409682:	rex.XB cmp spl,BYTE PTR [r8]
  409685:	sub    BYTE PTR [rdi+0x4e],al
  409688:	push   rbp
  409689:	sub    DWORD PTR [rax],esp
  40968b:	xor    al,0x2e
  40968d:	cmp    DWORD PTR [rsi],ebp
  40968f:	xor    al,0x0
	...
  40969d:	add    BYTE PTR [rax],al
  40969f:	add    BYTE PTR [rdi+0x43],al
  4096a2:	rex.XB cmp spl,BYTE PTR [r8]
  4096a5:	sub    BYTE PTR [rdi+0x4e],al
  4096a8:	push   rbp
  4096a9:	sub    DWORD PTR [rax],esp
  4096ab:	xor    al,0x2e
  4096ad:	cmp    DWORD PTR [rsi],ebp
  4096af:	xor    al,0x0
	...
  4096bd:	add    BYTE PTR [rax],al
  4096bf:	add    BYTE PTR [rdi+0x43],al
  4096c2:	rex.XB cmp spl,BYTE PTR [r8]
  4096c5:	sub    BYTE PTR [rdi+0x4e],al
  4096c8:	push   rbp
  4096c9:	sub    DWORD PTR [rax],esp
  4096cb:	xor    al,0x2e
  4096cd:	cmp    DWORD PTR [rsi],ebp
  4096cf:	xor    al,0x0
	...
  4096dd:	add    BYTE PTR [rax],al
  4096df:	add    BYTE PTR [rdi+0x43],al
  4096e2:	rex.XB cmp spl,BYTE PTR [r8]
  4096e5:	sub    BYTE PTR [rdi+0x4e],al
  4096e8:	push   rbp
  4096e9:	sub    DWORD PTR [rax],esp
  4096eb:	xor    al,0x2e
  4096ed:	cmp    DWORD PTR [rsi],ebp
  4096ef:	xor    al,0x0
	...
  4096fd:	add    BYTE PTR [rax],al
  4096ff:	add    BYTE PTR [rdi+0x43],al
  409702:	rex.XB cmp spl,BYTE PTR [r8]
  409705:	sub    BYTE PTR [rdi+0x4e],al
  409708:	push   rbp
  409709:	sub    DWORD PTR [rax],esp
  40970b:	xor    al,0x2e
  40970d:	cmp    DWORD PTR [rsi],ebp
  40970f:	xor    al,0x0
	...
  40971d:	add    BYTE PTR [rax],al
  40971f:	add    BYTE PTR [rdi+0x43],al
  409722:	rex.XB cmp spl,BYTE PTR [r8]
  409725:	sub    BYTE PTR [rdi+0x4e],al
  409728:	push   rbp
  409729:	sub    DWORD PTR [rax],esp
  40972b:	xor    al,0x2e
  40972d:	cmp    DWORD PTR [rsi],ebp
  40972f:	xor    al,0x0
	...
  40973d:	add    BYTE PTR [rax],al
  40973f:	add    BYTE PTR [rdi+0x43],al
  409742:	rex.XB cmp spl,BYTE PTR [r8]
  409745:	sub    BYTE PTR [rdi+0x4e],al
  409748:	push   rbp
  409749:	sub    DWORD PTR [rax],esp
  40974b:	xor    al,0x2e
  40974d:	cmp    DWORD PTR [rsi],ebp
  40974f:	xor    al,0x0
	...
  40975d:	add    BYTE PTR [rax],al
  40975f:	add    BYTE PTR [rdi+0x43],al
  409762:	rex.XB cmp spl,BYTE PTR [r8]
  409765:	sub    BYTE PTR [rdi+0x4e],al
  409768:	push   rbp
  409769:	sub    DWORD PTR [rax],esp
  40976b:	xor    al,0x2e
  40976d:	cmp    DWORD PTR [rsi],ebp
  40976f:	xor    al,0x0
	...
  40977d:	add    BYTE PTR [rax],al
  40977f:	add    BYTE PTR [rdi+0x43],al
  409782:	rex.XB cmp spl,BYTE PTR [r8]
  409785:	sub    BYTE PTR [rdi+0x4e],al
  409788:	push   rbp
  409789:	sub    DWORD PTR [rax],esp
  40978b:	xor    al,0x2e
  40978d:	cmp    DWORD PTR [rsi],ebp
  40978f:	xor    al,0x0
	...
  40979d:	add    BYTE PTR [rax],al
  40979f:	add    BYTE PTR [rdi+0x43],al
  4097a2:	rex.XB cmp spl,BYTE PTR [r8]
  4097a5:	sub    BYTE PTR [rdi+0x4e],al
  4097a8:	push   rbp
  4097a9:	sub    DWORD PTR [rax],esp
  4097ab:	xor    al,0x2e
  4097ad:	cmp    DWORD PTR [rsi],ebp
  4097af:	xor    al,0x0
	...
  4097bd:	add    BYTE PTR [rax],al
  4097bf:	add    BYTE PTR [rdi+0x43],al
  4097c2:	rex.XB cmp spl,BYTE PTR [r8]
  4097c5:	sub    BYTE PTR [rdi+0x4e],al
  4097c8:	push   rbp
  4097c9:	sub    DWORD PTR [rax],esp
  4097cb:	xor    al,0x2e
  4097cd:	cmp    DWORD PTR [rsi],ebp
  4097cf:	xor    al,0x0
	...
  4097dd:	add    BYTE PTR [rax],al
  4097df:	add    BYTE PTR [rdi+0x43],al
  4097e2:	rex.XB cmp spl,BYTE PTR [r8]
  4097e5:	sub    BYTE PTR [rdi+0x4e],al
  4097e8:	push   rbp
  4097e9:	sub    DWORD PTR [rax],esp
  4097eb:	xor    al,0x2e
  4097ed:	cmp    DWORD PTR [rsi],ebp
  4097ef:	xor    al,0x0
	...
  4097fd:	add    BYTE PTR [rax],al
  4097ff:	add    BYTE PTR [rdi+0x43],al
  409802:	rex.XB cmp spl,BYTE PTR [r8]
  409805:	sub    BYTE PTR [rdi+0x4e],al
  409808:	push   rbp
  409809:	sub    DWORD PTR [rax],esp
  40980b:	xor    al,0x2e
  40980d:	cmp    DWORD PTR [rsi],ebp
  40980f:	xor    al,0x0
	...
  40981d:	add    BYTE PTR [rax],al
  40981f:	add    BYTE PTR [rdi+0x43],al
  409822:	rex.XB cmp spl,BYTE PTR [r8]
  409825:	sub    BYTE PTR [rdi+0x4e],al
  409828:	push   rbp
  409829:	sub    DWORD PTR [rax],esp
  40982b:	xor    al,0x2e
  40982d:	cmp    DWORD PTR [rsi],ebp
  40982f:	xor    al,0x0
	...
  40983d:	add    BYTE PTR [rax],al
  40983f:	add    BYTE PTR [rdi+0x43],al
  409842:	rex.XB cmp spl,BYTE PTR [r8]
  409845:	sub    BYTE PTR [rdi+0x4e],al
  409848:	push   rbp
  409849:	sub    DWORD PTR [rax],esp
  40984b:	xor    al,0x2e
  40984d:	cmp    DWORD PTR [rsi],ebp
  40984f:	xor    al,0x0
	...
  40985d:	add    BYTE PTR [rax],al
  40985f:	add    BYTE PTR [rdi+0x43],al
  409862:	rex.XB cmp spl,BYTE PTR [r8]
  409865:	sub    BYTE PTR [rdi+0x4e],al
  409868:	push   rbp
  409869:	sub    DWORD PTR [rax],esp
  40986b:	xor    al,0x2e
  40986d:	cmp    DWORD PTR [rsi],ebp
  40986f:	xor    al,0x0
	...
  40987d:	add    BYTE PTR [rax],al
  40987f:	add    BYTE PTR [rdi+0x43],al
  409882:	rex.XB cmp spl,BYTE PTR [r8]
  409885:	sub    BYTE PTR [rdi+0x4e],al
  409888:	push   rbp
  409889:	sub    DWORD PTR [rax],esp
  40988b:	xor    al,0x2e
  40988d:	cmp    DWORD PTR [rsi],ebp
  40988f:	xor    al,0x0
	...
  40989d:	add    BYTE PTR [rax],al
  40989f:	add    BYTE PTR [rdi+0x43],al
  4098a2:	rex.XB cmp spl,BYTE PTR [r8]
  4098a5:	sub    BYTE PTR [rdi+0x4e],al
  4098a8:	push   rbp
  4098a9:	sub    DWORD PTR [rax],esp
  4098ab:	xor    al,0x2e
  4098ad:	cmp    DWORD PTR [rsi],ebp
  4098af:	xor    al,0x0
	...
  4098bd:	add    BYTE PTR [rax],al
  4098bf:	add    BYTE PTR [rdi+0x43],al
  4098c2:	rex.XB cmp spl,BYTE PTR [r8]
  4098c5:	sub    BYTE PTR [rdi+0x4e],al
  4098c8:	push   rbp
  4098c9:	sub    DWORD PTR [rax],esp
  4098cb:	xor    al,0x2e
  4098cd:	cmp    DWORD PTR [rsi],ebp
  4098cf:	xor    al,0x0
	...
  4098dd:	add    BYTE PTR [rax],al
  4098df:	add    BYTE PTR [rdi+0x43],al
  4098e2:	rex.XB cmp spl,BYTE PTR [r8]
  4098e5:	sub    BYTE PTR [rdi+0x4e],al
  4098e8:	push   rbp
  4098e9:	sub    DWORD PTR [rax],esp
  4098eb:	xor    al,0x2e
  4098ed:	cmp    DWORD PTR [rsi],ebp
  4098ef:	xor    al,0x0
	...
  4098fd:	add    BYTE PTR [rax],al
  4098ff:	add    BYTE PTR [rdi+0x43],al
  409902:	rex.XB cmp spl,BYTE PTR [r8]
  409905:	sub    BYTE PTR [rdi+0x4e],al
  409908:	push   rbp
  409909:	sub    DWORD PTR [rax],esp
  40990b:	xor    al,0x2e
  40990d:	cmp    DWORD PTR [rsi],ebp
  40990f:	xor    al,0x0
	...
  40991d:	add    BYTE PTR [rax],al
  40991f:	add    BYTE PTR [rdi+0x43],al
  409922:	rex.XB cmp spl,BYTE PTR [r8]
  409925:	sub    BYTE PTR [rdi+0x4e],al
  409928:	push   rbp
  409929:	sub    DWORD PTR [rax],esp
  40992b:	xor    al,0x2e
  40992d:	cmp    DWORD PTR [rsi],ebp
  40992f:	xor    al,0x0
	...
  40993d:	add    BYTE PTR [rax],al
  40993f:	add    BYTE PTR [rdi+0x43],al
  409942:	rex.XB cmp spl,BYTE PTR [r8]
  409945:	sub    BYTE PTR [rdi+0x4e],al
  409948:	push   rbp
  409949:	sub    DWORD PTR [rax],esp
  40994b:	xor    al,0x2e
  40994d:	cmp    DWORD PTR [rsi],ebp
  40994f:	xor    al,0x0
	...
  40995d:	add    BYTE PTR [rax],al
  40995f:	add    BYTE PTR [rdi+0x43],al
  409962:	rex.XB cmp spl,BYTE PTR [r8]
  409965:	sub    BYTE PTR [rdi+0x4e],al
  409968:	push   rbp
  409969:	sub    DWORD PTR [rax],esp
  40996b:	xor    al,0x2e
  40996d:	cmp    DWORD PTR [rsi],ebp
  40996f:	xor    al,0x0
	...
  40997d:	add    BYTE PTR [rax],al
  40997f:	add    BYTE PTR [rdi+0x43],al
  409982:	rex.XB cmp spl,BYTE PTR [r8]
  409985:	sub    BYTE PTR [rdi+0x4e],al
  409988:	push   rbp
  409989:	sub    DWORD PTR [rax],esp
  40998b:	xor    al,0x2e
  40998d:	cmp    DWORD PTR [rsi],ebp
  40998f:	xor    al,0x0
	...
  40999d:	add    BYTE PTR [rax],al
  40999f:	add    BYTE PTR [rdi+0x43],al
  4099a2:	rex.XB cmp spl,BYTE PTR [r8]
  4099a5:	sub    BYTE PTR [rdi+0x4e],al
  4099a8:	push   rbp
  4099a9:	sub    DWORD PTR [rax],esp
  4099ab:	xor    al,0x2e
  4099ad:	cmp    DWORD PTR [rsi],ebp
  4099af:	xor    al,0x0
	...
  4099bd:	add    BYTE PTR [rax],al
  4099bf:	add    BYTE PTR [rdi+0x43],al
  4099c2:	rex.XB cmp spl,BYTE PTR [r8]
  4099c5:	sub    BYTE PTR [rdi+0x4e],al
  4099c8:	push   rbp
  4099c9:	sub    DWORD PTR [rax],esp
  4099cb:	xor    al,0x2e
  4099cd:	cmp    DWORD PTR [rsi],ebp
  4099cf:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040a000 <.pdata>:
  40a000:	add    BYTE PTR [rax],dl
  40a002:	add    BYTE PTR [rax],al
  40a004:	add    DWORD PTR [rax],edx
  40a006:	add    BYTE PTR [rax],al
  40a008:	add    BYTE PTR [rax+0x10100000],dh
  40a00e:	add    BYTE PTR [rax],al
  40a010:	push   rcx
  40a011:	adc    DWORD PTR [rax],eax
  40a013:	add    BYTE PTR [rax+rsi*4],al
  40a016:	add    BYTE PTR [rax],al
  40a018:	(bad)  
  40a019:	adc    DWORD PTR [rax],eax
  40a01b:	add    BYTE PTR [rsi+0xc000011],ch
  40a021:	mov    al,0x0
  40a023:	add    BYTE PTR [rax-0x31ffffef],dh
  40a029:	adc    al,0x0
  40a02b:	add    BYTE PTR [rax+rsi*4],dl
  40a02e:	add    BYTE PTR [rax],al
  40a030:	rcl    BYTE PTR [rax+rax*1],1
  40a033:	add    dl,dh
  40a035:	adc    al,0x0
  40a037:	add    BYTE PTR [rax],ch
  40a039:	mov    al,0x0
  40a03b:	add    BYTE PTR [rax],al
  40a03d:	adc    eax,0x15220000
  40a042:	add    BYTE PTR [rax],al
  40a044:	rex.W mov al,0x0
  40a047:	add    BYTE PTR [rax],dh
  40a049:	adc    eax,0x15aa0000
  40a04e:	add    BYTE PTR [rax],al
  40a050:	push   0xffffffffb00000b0
  40a055:	adc    eax,0x16740000
  40a05a:	add    BYTE PTR [rax],al
  40a05c:	je     0x40a00e
  40a05e:	add    BYTE PTR [rax],al
  40a060:	adc    BYTE PTR [rsi],0x0
  40a063:	add    bh,bl
  40a065:	(bad)  
  40a066:	add    BYTE PTR [rax],al
  40a068:	test   BYTE PTR [rax+0x16e00000],dh
  40a06e:	add    BYTE PTR [rax],al
  40a070:	xor    eax,0x8c000017
  40a075:	mov    al,0x0
  40a077:	add    BYTE PTR [rax+0x17],al
  40a07a:	add    BYTE PTR [rax],al
  40a07c:	ret    0x19
  40a07f:	add    BYTE PTR [rax+rsi*4+0x19d00000],bl
  40a086:	add    BYTE PTR [rax],al
  40a088:	pop    rbx
  40a089:	sbb    eax,DWORD PTR [rax]
  40a08b:	add    BYTE PTR [rax+0x600000b0],dh
  40a091:	sbb    eax,DWORD PTR [rax]
  40a093:	add    al,dh
  40a095:	and    eax,DWORD PTR [rax]
  40a097:	add    al,al
  40a099:	mov    al,0x0
  40a09b:	add    al,dh
  40a09d:	and    eax,DWORD PTR [rax]
  40a09f:	add    bh,dl
  40a0a1:	add    BYTE PTR es:[rax],al
  40a0a4:	fdiv   DWORD PTR [rax+0x26e00000]
  40a0aa:	add    BYTE PTR [rax],al
  40a0ac:	sub    DWORD PTR [rax],0xb0f00000
  40a0b2:	add    BYTE PTR [rax],al
  40a0b4:	nop
  40a0b5:	sub    BYTE PTR [rax],al
  40a0b7:	add    dh,al
  40a0b9:	sub    BYTE PTR [rax],al
  40a0bb:	add    BYTE PTR [rax],al
  40a0bd:	mov    cl,0x0
  40a0bf:	add    al,dl
  40a0c1:	sub    BYTE PTR [rax],al
  40a0c3:	add    BYTE PTR [rax+0x8000029],bl
  40a0c9:	mov    cl,0x0
  40a0cb:	add    BYTE PTR [rax-0x51ffffd7],ah
  40a0d1:	sub    al,BYTE PTR [rax]
  40a0d3:	add    BYTE PTR [rax],bl
  40a0d5:	mov    cl,0x0
  40a0d7:	add    BYTE PTR [rax+0x3b00002a],dh
  40a0dd:	sub    eax,DWORD PTR [rax]
  40a0df:	add    BYTE PTR [rax],ah
  40a0e1:	mov    cl,0x0
  40a0e3:	add    BYTE PTR [rax+0x2b],al
  40a0e6:	add    BYTE PTR [rax],al
  40a0e8:	xlat   BYTE PTR ds:[rbx]
  40a0e9:	sub    eax,DWORD PTR [rax]
  40a0eb:	add    BYTE PTR [rax],ch
  40a0ed:	mov    cl,0x0
  40a0ef:	add    al,ah
  40a0f1:	sub    eax,DWORD PTR [rax]
  40a0f3:	add    bl,dh
  40a0f5:	sub    eax,0xb1340000
  40a0fa:	add    BYTE PTR [rax],al
  40a0fc:	add    BYTE PTR [rsi],ch
  40a0fe:	add    BYTE PTR [rax],al
  40a100:	test   eax,0x4800002e
  40a105:	mov    cl,0x0
  40a107:	add    BYTE PTR [rax+0x6600002e],dh
  40a10d:	(bad)  
  40a10e:	add    BYTE PTR [rax],al
  40a110:	push   rsp
  40a111:	mov    cl,0x0
  40a113:	add    BYTE PTR [rax+0x2f],dh
  40a116:	add    BYTE PTR [rax],al
  40a118:	mov    esi,DWORD PTR [rax]
  40a11a:	add    BYTE PTR [rax],al
  40a11c:	(bad)  
  40a11d:	mov    cl,0x0
  40a11f:	add    BYTE PTR [rax+0x27000033],al
  40a125:	xor    al,0x0
  40a127:	add    BYTE PTR [rax+0x300000b1],cl
  40a12d:	xor    al,0x0
  40a12f:	add    BYTE PTR [rcx+0x34],cl
  40a132:	add    BYTE PTR [rax],al
  40a134:	nop
  40a135:	mov    cl,0x0
  40a137:	add    BYTE PTR [rax+0x34],dl
  40a13a:	add    BYTE PTR [rax],al
  40a13c:	test   DWORD PTR [rax+rax*1],esi
  40a13f:	add    BYTE PTR [rax-0x6fffff4f],bl
  40a145:	xor    al,0x0
  40a147:	add    ch,ah
  40a149:	xor    al,0x0
  40a14b:	add    BYTE PTR [rax-0xfffff4f],ah
  40a151:	xor    al,0x0
  40a153:	add    BYTE PTR [rsi*1-0x4e540000],cl
  40a15a:	add    BYTE PTR [rax],al
  40a15c:	adc    BYTE PTR [rip+0x351a0000],dh        # 0x355aa162
  40a162:	add    BYTE PTR [rax],al
  40a164:	mov    al,0xb1
  40a166:	add    BYTE PTR [rax],al
  40a168:	and    BYTE PTR [rip+0x35230000],dh        # 0x3563a16e
  40a16e:	add    BYTE PTR [rax],al
  40a170:	mov    ah,0xb1
  40a172:	add    BYTE PTR [rax],al
  40a174:	xor    BYTE PTR [rip+0x36060000],dh        # 0x3646a17a
  40a17a:	add    BYTE PTR [rax],al
  40a17c:	mov    eax,0x100000b1
  40a181:	add    BYTE PTR ss:[rax],al
  40a184:	or     esi,DWORD PTR [rdi]
  40a186:	add    BYTE PTR [rax],al
  40a188:	enter  0xb1,0x0
  40a18c:	adc    BYTE PTR [rdi],dh
  40a18e:	add    BYTE PTR [rax],al
  40a190:	(bad)  
  40a191:	(bad)  
  40a192:	add    BYTE PTR [rax],al
  40a194:	fdiv   DWORD PTR [rcx+0x37400000]
  40a19a:	add    BYTE PTR [rax],al
  40a19c:	test   eax,0xe0000037
  40a1a1:	mov    cl,0x0
  40a1a3:	add    BYTE PTR [rax-0x4cffffc9],dh
  40a1a9:	(bad)  
  40a1aa:	add    BYTE PTR [rax],al
  40a1ac:	in     al,dx
  40a1ad:	mov    cl,0x0
  40a1af:	add    al,al
  40a1b1:	(bad)  
  40a1b2:	add    BYTE PTR [rax],al
  40a1b4:	add    DWORD PTR [rax],edi
  40a1b6:	add    BYTE PTR [rax],al
  40a1b8:	lock mov cl,0x0
  40a1bb:	add    BYTE PTR [rax],dl
  40a1bd:	cmp    BYTE PTR [rax],al
  40a1bf:	add    BYTE PTR [rax+rdi*1],bl
  40a1c2:	add    BYTE PTR [rax],al
  40a1c4:	clc    
  40a1c5:	mov    cl,0x0
  40a1c7:	add    BYTE PTR [rax],ah
  40a1c9:	cmp    BYTE PTR [rax],al
  40a1cb:	add    BYTE PTR [rcx+rdi*1],bl
  40a1ce:	add    BYTE PTR [rax],al
  40a1d0:	cld    
  40a1d1:	mov    cl,0x0
  40a1d3:	add    BYTE PTR [rax],ah
  40a1d5:	cmp    DWORD PTR [rax],eax
  40a1d7:	add    BYTE PTR [rbx],ah
  40a1d9:	cmp    DWORD PTR [rax],eax
  40a1db:	add    BYTE PTR [rdx+rsi*4],dl
  40a1de:	add    BYTE PTR [rax],al
  40a1e0:	xor    BYTE PTR [rcx],bh
  40a1e2:	add    BYTE PTR [rax],al
  40a1e4:	xor    al,0x39
  40a1e6:	add    BYTE PTR [rax],al
  40a1e8:	sbb    BYTE PTR [rdx+0x39400000],dh
  40a1ee:	add    BYTE PTR [rax],al
  40a1f0:	cmp    DWORD PTR [rax],r8d
  40a1f3:	add    BYTE PTR [rdx+rsi*4],bl
  40a1f6:	add    BYTE PTR [rax],al
  40a1f8:	push   rax
  40a1f9:	cmp    DWORD PTR [rax],eax
  40a1fb:	add    BYTE PTR [rcx+0x20000039],dh
  40a201:	mov    dl,0x0
  40a203:	add    al,al
  40a205:	cmp    DWORD PTR [rax],eax
  40a207:	add    BYTE PTR [rdx],ah
  40a209:	cmp    eax,DWORD PTR [rax]
  40a20b:	add    BYTE PTR [rdx+rsi*4],ch
  40a20e:	add    BYTE PTR [rax],al
  40a210:	xor    BYTE PTR [rbx],bh
  40a212:	add    BYTE PTR [rax],al
  40a214:	sub    DWORD PTR [rsi],edi
  40a216:	add    BYTE PTR [rax],al
  40a218:	mov    dl,0x0
  40a21b:	add    BYTE PTR [rax],dh
  40a21d:	add    BYTE PTR ds:[rax],al
  40a220:	(bad)  
  40a221:	(bad)  
  40a222:	add    BYTE PTR [rax],al
  40a224:	pop    rax
  40a225:	mov    dl,0x0
  40a227:	add    al,ah
  40a229:	(bad)  
  40a22a:	add    BYTE PTR [rax],al
  40a22c:	int3   
  40a22d:	add    BYTE PTR [rax],al
  40a230:	(bad)  
  40a231:	mov    dl,0x0
  40a233:	add    al,dl
  40a235:	add    BYTE PTR [rax],al
  40a238:	mov    BYTE PTR [rdx+0x0],al
  40a23b:	add    BYTE PTR [rax-0x4e],dh
  40a23e:	add    BYTE PTR [rax],al
  40a240:	nop
  40a241:	rex.X add BYTE PTR [rax],al
  40a244:	std    
  40a245:	rex.X add BYTE PTR [rax],al
  40a248:	js     0x40a1fc
  40a24a:	add    BYTE PTR [rax],al
  40a24c:	add    BYTE PTR [rbx+0x0],al
  40a24f:	add    BYTE PTR [rdi+0x43],bh
  40a252:	add    BYTE PTR [rax],al
  40a254:	mov    BYTE PTR [rdx+0x43800000],dh
  40a25a:	add    BYTE PTR [rax],al
  40a25c:	(bad)  
  40a25d:	add    BYTE PTR [rax],r8b
  40a260:	xchg   esp,eax
  40a261:	mov    dl,0x0
  40a263:	add    BYTE PTR [rax],ah
  40a265:	add    BYTE PTR [rax],r8b
  40a268:	cli    
  40a269:	add    BYTE PTR [rax],r8b
  40a26c:	pushf  
  40a26d:	mov    dl,0x0
  40a26f:	add    BYTE PTR [rax],al
  40a271:	add    BYTE PTR [r8],r8b
  40a274:	(bad)  
  40a275:	add    BYTE PTR [r8],r8b
  40a278:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a279:	mov    dl,0x0
  40a27b:	add    BYTE PTR [rax],ah
  40a27d:	add    BYTE PTR [r8],r8b
  40a280:	xor    al,BYTE PTR [rbp+0x0]
  40a283:	add    BYTE PTR [rax+0x400000b2],ch
  40a289:	add    BYTE PTR [r8],r8b
  40a28c:	test   DWORD PTR [rbp+0x0],eax
  40a28f:	add    BYTE PTR [rdx+rsi*4+0x45900000],ch
  40a296:	add    BYTE PTR [rax],al
  40a298:	rex.RX add BYTE PTR cs:[rax],r8b
  40a29c:	mov    al,0xb2
  40a29e:	add    BYTE PTR [rax],al
  40a2a0:	xor    BYTE PTR [rsi+0x0],al
  40a2a3:	add    BYTE PTR [rbx+0x46],dh
  40a2a6:	add    BYTE PTR [rax],al
  40a2a8:	mov    esp,0x800000b2
  40a2ad:	rex.RX add BYTE PTR [rax],r8b
  40a2b0:	mov    ebx,0xc8000046
  40a2b5:	mov    dl,0x0
  40a2b7:	add    al,al
  40a2b9:	rex.RX add BYTE PTR [rax],r8b
  40a2bc:	rex.WRX
  40a2bd:	rex.RXB add BYTE PTR [r8],r8b
  40a2c0:	shl    BYTE PTR [rdx+0x47500000],1
  40a2c6:	add    BYTE PTR [rax],al
  40a2c8:	mov    BYTE PTR [rdi+0x0],al
  40a2cb:	add    ah,bl
  40a2cd:	mov    dl,0x0
  40a2cf:	add    BYTE PTR [rax-0x1affffb9],dl
  40a2d5:	rex.RXB add BYTE PTR [r8],r8b
  40a2d8:	call   0xfffffffff040a38f
  40a2dd:	rex.RXB add BYTE PTR [r8],r8b
  40a2e0:	sahf   
  40a2e1:	rex.W add BYTE PTR [rax],al
  40a2e4:	hlt    
  40a2e5:	mov    dl,0x0
  40a2e7:	add    al,al
  40a2e9:	rex.WB add BYTE PTR [r8],al
  40a2ec:	enter  0x49,0x0
  40a2f0:	add    al,0xb3
  40a2f2:	add    BYTE PTR [rax],al
  40a2f4:	ror    BYTE PTR [rcx+0x0],1
  40a2f7:	add    bl,bl
  40a2f9:	rex.WB add BYTE PTR [r8],al
  40a2fc:	or     BYTE PTR [rbx+0x4aa00000],dh
  40a302:	add    BYTE PTR [rax],al
  40a304:	test   al,0x67
  40a306:	add    BYTE PTR [rax],al
  40a308:	jo     0x40a2bb
	...

Disassembly of section .xdata:

000000000040b000 <.xdata>:
  40b000:	add    DWORD PTR [rax],eax
  40b002:	add    BYTE PTR [rax],al
  40b004:	add    DWORD PTR [rcx+rax*1],eax
  40b007:	add    BYTE PTR [rdx+rax*2],al
  40b00a:	add    BYTE PTR [rax],al
  40b00c:	add    DWORD PTR [rcx+rax*1],eax
  40b00f:	add    BYTE PTR [rdx+riz*2],al
  40b012:	add    BYTE PTR [rax],al
  40b014:	add    DWORD PTR [rdi],ecx
  40b016:	or     BYTE PTR [rax],al
  40b018:	lgdt   [rbx]
  40b01b:	add    BYTE PTR [rax],cl
  40b01d:	xor    BYTE PTR [rdi],al
  40b01f:	(bad)  
  40b020:	(bad)  
  40b021:	jo     0x40b028
  40b023:	push   rax
  40b024:	add    al,0xc0
  40b026:	add    dl,al
  40b028:	or     DWORD PTR [rcx+rax*1],eax
  40b02b:	add    BYTE PTR [rdx+rax*2],al
  40b02e:	add    BYTE PTR [rax],al
  40b030:	mov    al,0x49
  40b032:	add    BYTE PTR [rax],al
  40b034:	add    DWORD PTR [rax],eax
  40b036:	add    BYTE PTR [rax],al
  40b038:	(bad)  
  40b039:	adc    al,0x0
  40b03b:	add    ah,ch
  40b03d:	adc    al,0x0
  40b03f:	add    al,dl
  40b041:	add    BYTE PTR [rax],al
  40b044:	in     al,dx
  40b045:	adc    al,0x0
  40b047:	add    BYTE PTR [rcx],cl
  40b049:	add    al,0x1
  40b04b:	add    BYTE PTR [rdx+rax*2],al
  40b04e:	add    BYTE PTR [rax],al
  40b050:	mov    al,0x49
  40b052:	add    BYTE PTR [rax],al
  40b054:	add    DWORD PTR [rax],eax
  40b056:	add    BYTE PTR [rax],al
  40b058:	add    al,0x15
  40b05a:	add    BYTE PTR [rax],al
  40b05c:	sbb    al,0x15
  40b05e:	add    BYTE PTR [rax],al
  40b060:	rol    BYTE PTR [rax+0x0],1
  40b063:	add    BYTE PTR [rdx*1+0x7010000],bl
  40b06a:	add    al,0x0
  40b06c:	(bad)  
  40b06d:	push   rdx
  40b06e:	add    esi,DWORD PTR [rax]
  40b070:	add    ah,BYTE PTR [rax+0x1]
  40b073:	jo     0x40b076
  40b075:	or     al,BYTE PTR [rsi]
  40b077:	add    BYTE PTR [rdx],cl
  40b079:	jb     0x40b081
  40b07b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b4e1
  40b081:	push   rax
  40b082:	add    al,al
  40b084:	add    DWORD PTR [rcx+rax*1],eax
  40b087:	add    BYTE PTR [rdx+riz*2],al
  40b08a:	add    BYTE PTR [rax],al
  40b08c:	add    DWORD PTR [rax],ecx
  40b08e:	add    eax,0x4620800
  40b093:	xor    BYTE PTR [rbx],al
  40b095:	(bad)  
  40b096:	add    dh,BYTE PTR [rax+0x1]
  40b099:	push   rax
  40b09a:	add    BYTE PTR [rax],al
  40b09c:	add    DWORD PTR [rsi],ecx
  40b09e:	or     BYTE PTR [rax],al
  40b0a0:	(bad)  
  40b0a1:	repnz or dh,BYTE PTR [rax]
  40b0a4:	or     DWORD PTR [rax+0x8],esp
  40b0a7:	jo     0x40b0b0
  40b0a9:	push   rax
  40b0aa:	(bad)  
  40b0ab:	rol    BYTE PTR [rax+rdx*8],0x2
  40b0af:	loopne 0x40b0b2
  40b0b1:	or     eax,DWORD PTR [rsi]
  40b0b3:	add    BYTE PTR [rbx],cl
  40b0b5:	add    DWORD PTR [rcx],edx
  40b0b7:	add    BYTE PTR [rax+rsi*1],al
  40b0ba:	add    esp,DWORD PTR [rax+0x2]
  40b0bd:	jo     0x40b0c0
  40b0bf:	push   rax
  40b0c0:	add    DWORD PTR [rbx],edx
  40b0c2:	or     al,BYTE PTR [rax]
  40b0c4:	adc    eax,DWORD PTR [rcx]
  40b0c6:	adc    eax,0xb300c00
  40b0cb:	(bad)  
  40b0cc:	or     dh,BYTE PTR [rax+0x9]
  40b0cf:	push   rax
  40b0d0:	or     al,al
  40b0d2:	(bad)  
  40b0d3:	rol    BYTE PTR [rax+riz*8],1
  40b0d6:	add    dh,al
  40b0d8:	add    DWORD PTR [rax],edx
  40b0da:	or     DWORD PTR [rax],eax
  40b0dc:	adc    BYTE PTR [rdx+0xc],ah
  40b0df:	xor    BYTE PTR [rbx],cl
  40b0e1:	(bad)  
  40b0e2:	or     dh,BYTE PTR [rax+0x9]
  40b0e5:	push   rax
  40b0e6:	or     al,al
  40b0e8:	(bad)  
  40b0e9:	rol    BYTE PTR [rax+riz*8],1
  40b0ec:	add    dh,al
  40b0ee:	add    BYTE PTR [rax],al
  40b0f0:	add    DWORD PTR [rdx],ecx
  40b0f2:	(bad)  
  40b0f3:	add    BYTE PTR [rdx],cl
  40b0f5:	rol    BYTE PTR [rsi],cl
  40b0f7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b55d
  40b0fd:	push   rax
  40b0fe:	add    al,al
  40b100:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b108
  40b106:	add    DWORD PTR [rax],esi
  40b108:	add    DWORD PTR [rax],ecx
  40b10a:	add    eax,0x4420800
  40b10f:	xor    BYTE PTR [rbx],al
  40b111:	(bad)  
  40b112:	add    dh,BYTE PTR [rax+0x1]
  40b115:	push   rax
  40b116:	add    BYTE PTR [rax],al
  40b118:	add    DWORD PTR [rdx],eax
  40b11a:	add    al,BYTE PTR [rax]
  40b11c:	add    dh,BYTE PTR [rax]
  40b11e:	add    DWORD PTR [rax+0x1],esp
  40b121:	add    al,0x1
  40b123:	add    BYTE PTR [rdx+riz*2],al
  40b126:	add    BYTE PTR [rax],al
  40b128:	add    DWORD PTR [rdi],eax
  40b12a:	add    al,0x0
  40b12c:	(bad)  
  40b12d:	push   rdx
  40b12e:	add    esi,DWORD PTR [rax]
  40b130:	add    ah,BYTE PTR [rax+0x1]
  40b133:	jo     0x40b136
  40b135:	or     al,0x7
  40b137:	add    BYTE PTR [rdx+riz*8],cl
  40b13a:	or     BYTE PTR [rax],dh
  40b13c:	(bad)  
  40b13d:	(bad)  
  40b13e:	(bad)  
  40b13f:	jo     0x40b146
  40b141:	push   rax
  40b142:	add    al,0xc0
  40b144:	add    dl,al
  40b146:	add    BYTE PTR [rax],al
  40b148:	add    DWORD PTR [rsi],eax
  40b14a:	add    eax,DWORD PTR [rax]
  40b14c:	(bad)  
  40b14d:	movabs ds:0x601000060013002,al
  40b156:	add    eax,DWORD PTR [rax]
  40b158:	(bad)  
  40b159:	(bad)  
  40b15b:	xor    BYTE PTR [rcx],al
  40b15d:	(bad)  
  40b15e:	add    BYTE PTR [rax],al
  40b160:	add    DWORD PTR [rdx],ecx
  40b162:	(bad)  
  40b163:	add    BYTE PTR [rdx],cl
  40b165:	push   rdx
  40b166:	(bad)  
  40b167:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b5cd
  40b16d:	push   rax
  40b16e:	add    al,al
  40b170:	add    DWORD PTR [rbx],edx
  40b172:	or     al,BYTE PTR [rax]
  40b174:	adc    eax,DWORD PTR [rcx]
  40b176:	(bad)  
  40b177:	add    BYTE PTR [rax+rsi*1],cl
  40b17a:	or     esp,DWORD PTR [rax+0xa]
  40b17d:	jo     0x40b188
  40b17f:	push   rax
  40b180:	or     al,al
  40b182:	(bad)  
  40b183:	rol    BYTE PTR [rax+riz*8],1
  40b186:	add    dh,al
  40b188:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245b190
  40b18e:	add    DWORD PTR [rax],esi
  40b190:	add    DWORD PTR [rcx+rax*1],eax
  40b193:	add    BYTE PTR [rdx+rax*2],al
  40b196:	add    BYTE PTR [rax],al
  40b198:	add    DWORD PTR [rcx+rax*1],eax
  40b19b:	add    BYTE PTR [rdx+rax*2],al
  40b19e:	add    BYTE PTR [rax],al
  40b1a0:	add    DWORD PTR [rsi],eax
  40b1a2:	add    eax,DWORD PTR [rax]
  40b1a4:	(bad)  
  40b1a5:	rex.X add sil,BYTE PTR [rax]
  40b1a8:	add    DWORD PTR [rax+0x0],esp
  40b1ab:	add    BYTE PTR [rcx],al
  40b1ad:	add    BYTE PTR [rax],al
  40b1af:	add    BYTE PTR [rcx],al
  40b1b1:	add    BYTE PTR [rax],al
  40b1b3:	add    BYTE PTR [rcx],al
  40b1b5:	add    BYTE PTR [rax],al
  40b1b7:	add    BYTE PTR [rcx],al
  40b1b9:	or     al,BYTE PTR [rsi]
  40b1bb:	add    BYTE PTR [rdx],cl
  40b1bd:	jb     0x40b1c5
  40b1bf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b625
  40b1c5:	push   rax
  40b1c6:	add    al,al
  40b1c8:	add    DWORD PTR [rdx],ecx
  40b1ca:	add    eax,0x6d20a05
  40b1cf:	add    eax,DWORD PTR [rbx]
  40b1d1:	xor    BYTE PTR [rdx],al
  40b1d3:	(bad)  
  40b1d4:	add    DWORD PTR [rax+0x0],edx
  40b1d7:	add    BYTE PTR [rcx],al
  40b1d9:	add    al,0x1
  40b1db:	add    BYTE PTR [rdx+rax*2],al
  40b1de:	add    BYTE PTR [rax],al
  40b1e0:	add    DWORD PTR [rsi],eax
  40b1e2:	add    eax,DWORD PTR [rax]
  40b1e4:	(bad)  
  40b1e5:	rex.X add sil,BYTE PTR [rax]
  40b1e8:	add    DWORD PTR [rax+0x0],esp
  40b1eb:	add    BYTE PTR [rcx],al
  40b1ed:	add    BYTE PTR [rax],al
  40b1ef:	add    BYTE PTR [rcx],al
  40b1f1:	add    al,0x1
  40b1f3:	add    BYTE PTR [rdx+riz*4],al
  40b1f6:	add    BYTE PTR [rax],al
  40b1f8:	add    DWORD PTR [rax],eax
  40b1fa:	add    BYTE PTR [rax],al
  40b1fc:	add    DWORD PTR [rsi],edx
  40b1fe:	or     DWORD PTR [rax],eax
  40b200:	(bad)  
  40b201:	mov    BYTE PTR [rsi],al
  40b203:	add    BYTE PTR [rax],dl
  40b205:	js     0x40b20c
  40b207:	add    BYTE PTR [rbx],cl
  40b209:	push   0xffffffffe2060004
  40b20e:	add    dh,BYTE PTR [rax]
  40b210:	add    DWORD PTR [rax+0x0],esp
  40b213:	add    BYTE PTR [rcx],al
  40b215:	add    BYTE PTR [rax],al
  40b217:	add    BYTE PTR [rcx],al
  40b219:	add    BYTE PTR [rax],al
  40b21b:	add    BYTE PTR [rcx],al
  40b21d:	add    BYTE PTR [rax],al
  40b21f:	add    BYTE PTR [rcx],al
  40b221:	(bad)  
  40b222:	add    eax,DWORD PTR [rax]
  40b224:	(bad)  
  40b225:	(bad)  
  40b227:	xor    BYTE PTR [rcx],al
  40b229:	(bad)  
  40b22a:	add    BYTE PTR [rax],al
  40b22c:	add    DWORD PTR [rdi+rax*1],ecx
  40b22f:	add    BYTE PTR [rdx+riz*4],cl
  40b232:	or     BYTE PTR [rax],dh
  40b234:	(bad)  
  40b235:	(bad)  
  40b236:	(bad)  
  40b237:	jo     0x40b23e
  40b239:	push   rax
  40b23a:	add    al,0xc0
  40b23c:	add    dl,al
  40b23e:	add    BYTE PTR [rax],al
  40b240:	add    DWORD PTR [rcx],edx
  40b242:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e6459
  40b248:	or     dh,BYTE PTR [rax]
  40b24a:	or     DWORD PTR [rax+0x8],esp
  40b24d:	jo     0x40b256
  40b24f:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220b626
  40b256:	add    BYTE PTR [rax],al
  40b258:	add    DWORD PTR [rcx+rax*1],eax
  40b25b:	add    BYTE PTR [rdx+rax*2],al
  40b25e:	add    BYTE PTR [rax],al
  40b260:	add    DWORD PTR [rdx],ecx
  40b262:	(bad)  
  40b263:	add    BYTE PTR [rdx],cl
  40b265:	xor    al,BYTE PTR [rsi]
  40b267:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b6cd
  40b26d:	push   rax
  40b26e:	add    al,al
  40b270:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b278
  40b276:	add    DWORD PTR [rax],esi
  40b278:	add    DWORD PTR [rax],ecx
  40b27a:	add    eax,0x4420800
  40b27f:	xor    BYTE PTR [rbx],al
  40b281:	(bad)  
  40b282:	add    dh,BYTE PTR [rax+0x1]
  40b285:	push   rax
  40b286:	add    BYTE PTR [rax],al
  40b288:	add    DWORD PTR [rdi],eax
  40b28a:	add    al,0x0
  40b28c:	(bad)  
  40b28d:	xor    al,BYTE PTR [rbx]
  40b28f:	xor    BYTE PTR [rdx],al
  40b291:	(bad)  
  40b292:	add    DWORD PTR [rax+0x1],esi
  40b295:	add    eax,0x32050002
  40b29a:	add    DWORD PTR [rax],esi
  40b29c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b2a4
  40b2a2:	add    DWORD PTR [rax],esi
  40b2a4:	add    DWORD PTR [rax],eax
  40b2a6:	add    BYTE PTR [rax],al
  40b2a8:	add    DWORD PTR [rax],eax
  40b2aa:	add    BYTE PTR [rax],al
  40b2ac:	add    DWORD PTR [rax],eax
  40b2ae:	add    BYTE PTR [rax],al
  40b2b0:	add    DWORD PTR [rdi],eax
  40b2b2:	add    al,0x0
  40b2b4:	(bad)  
  40b2b5:	xor    al,BYTE PTR [rbx]
  40b2b7:	xor    BYTE PTR [rdx],al
  40b2b9:	(bad)  
  40b2ba:	add    DWORD PTR [rax+0x1],esi
  40b2bd:	(bad)  
  40b2be:	add    eax,DWORD PTR [rax]
  40b2c0:	(bad)  
  40b2c1:	rex.X add sil,BYTE PTR [rax]
  40b2c4:	add    DWORD PTR [rax+0x0],esp
  40b2c7:	add    BYTE PTR [rcx],al
  40b2c9:	add    eax,0x32050002
  40b2ce:	add    DWORD PTR [rax],esi
  40b2d0:	add    DWORD PTR [rdi],eax
  40b2d2:	add    al,0x0
  40b2d4:	(bad)  
  40b2d5:	xor    al,BYTE PTR [rbx]
  40b2d7:	xor    BYTE PTR [rdx],al
  40b2d9:	(bad)  
  40b2da:	add    DWORD PTR [rax+0x1],esi
  40b2dd:	(bad)  
  40b2de:	add    eax,DWORD PTR [rax]
  40b2e0:	(bad)  
  40b2e1:	rex.X add sil,BYTE PTR [rax]
  40b2e4:	add    DWORD PTR [rax+0x0],esp
  40b2e7:	add    BYTE PTR [rcx],al
  40b2e9:	(bad)  
  40b2ea:	add    eax,DWORD PTR [rax]
  40b2ec:	(bad)  
  40b2ed:	rex.X add sil,BYTE PTR [rax]
  40b2f0:	add    DWORD PTR [rax+0x0],esp
  40b2f3:	add    BYTE PTR [rcx],al
  40b2f5:	or     BYTE PTR [rip+0x4420800],al        # 0x482bafb
  40b2fb:	xor    BYTE PTR [rbx],al
  40b2fd:	(bad)  
  40b2fe:	add    dh,BYTE PTR [rax+0x1]
  40b301:	push   rax
  40b302:	add    BYTE PTR [rax],al
  40b304:	add    DWORD PTR [rax],eax
  40b306:	add    BYTE PTR [rax],al
  40b308:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040c000 <.bss>:
	...

Disassembly of section .idata:

000000000040d000 <.idata>:
  40d000:	mov    eax,ss
	...
  40d00a:	add    BYTE PTR [rax],al
  40d00c:	sbb    al,0xe7
  40d00e:	add    BYTE PTR [rax],al
  40d010:	pop    rsp
  40d011:	(bad)  
  40d012:	add    BYTE PTR [rax],al
  40d014:	and    al,0xd1
	...
  40d01e:	add    BYTE PTR [rax],al
  40d020:	rex.WR call 0xffffffffd634d026
  40d026:	add    BYTE PTR [rax],al
  40d028:	rol    DWORD PTR fs:[rax],cl
	...
  40d033:	add    BYTE PTR [rax+rbp*8+0x0],ah
  40d037:	add    BYTE PTR [rax+rbx*8],dh
  40d03a:	add    BYTE PTR [rax],al
  40d03c:	je     0x40d011
	...
  40d046:	add    BYTE PTR [rax],al
  40d048:	nop
  40d049:	call   0xffffffffd884d04e
  40d04e:	add    BYTE PTR [rax],al
  40d050:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d051:	rol    DWORD PTR [rax],cl
	...
  40d05b:	add    ah,bh
  40d05d:	call   0xffffffffd8b4d062
  40d062:	add    BYTE PTR [rax],al
  40d064:	fs (bad) 
	...
  40d06e:	add    BYTE PTR [rax],al
  40d070:	test   cl,ch
  40d072:	add    BYTE PTR [rax],al
  40d074:	xor    al,0xd9
	...
  40d08a:	add    BYTE PTR [rax],al
  40d08c:	sub    al,0xda
  40d08e:	add    BYTE PTR [rax],al
  40d090:	add    BYTE PTR [rax],al
  40d092:	add    BYTE PTR [rax],al
  40d094:	rex fiadd DWORD PTR [rax]
  40d097:	add    BYTE PTR [rax],al
  40d099:	add    BYTE PTR [rax],al
  40d09b:	add    BYTE PTR [rdx+rbx*8+0x0],ah
  40d09f:	add    BYTE PTR [rax],al
  40d0a1:	add    BYTE PTR [rax],al
  40d0a3:	add    BYTE PTR [rdx+rbx*8+0x0],al
  40d0aa:	add    BYTE PTR [rax],al
  40d0ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d0ad:	fiadd  DWORD PTR [rax]
  40d0af:	add    BYTE PTR [rax],al
  40d0b1:	add    BYTE PTR [rax],al
  40d0b3:	add    ah,al
  40d0b5:	fiadd  DWORD PTR [rax]
  40d0b7:	add    BYTE PTR [rax],al
  40d0b9:	add    BYTE PTR [rax],al
  40d0bb:	add    al,ch
  40d0bd:	fiadd  DWORD PTR [rax]
  40d0bf:	add    BYTE PTR [rax],al
  40d0c1:	add    BYTE PTR [rax],al
  40d0c3:	add    BYTE PTR [rbx+rbx*8],dl
  40d0c6:	add    BYTE PTR [rax],al
  40d0c8:	add    BYTE PTR [rax],al
  40d0ca:	add    BYTE PTR [rax],al
  40d0cc:	cmp    al,0xdb
  40d0ce:	add    BYTE PTR [rax],al
  40d0d0:	add    BYTE PTR [rax],al
  40d0d2:	add    BYTE PTR [rax],al
  40d0d4:	fild   DWORD PTR fs:[rax]
  40d0d7:	add    BYTE PTR [rax],al
  40d0d9:	add    BYTE PTR [rax],al
  40d0db:	add    BYTE PTR [rbx+rbx*8+0x0],cl
  40d0e2:	add    BYTE PTR [rax],al
  40d0e4:	test   al,0xdb
  40d0e6:	add    BYTE PTR [rax],al
  40d0e8:	add    BYTE PTR [rax],al
  40d0ea:	add    BYTE PTR [rax],al
  40d0ec:	rcr    bl,0x0
  40d0ef:	add    BYTE PTR [rax],al
  40d0f1:	add    BYTE PTR [rax],al
  40d0f3:	add    ah,dl
  40d0f5:	fild   DWORD PTR [rax]
  40d0f7:	add    BYTE PTR [rax],al
  40d0f9:	add    BYTE PTR [rax],al
  40d0fb:	add    ah,ch
  40d0fd:	fild   DWORD PTR [rax]
  40d0ff:	add    BYTE PTR [rax],al
  40d101:	add    BYTE PTR [rax],al
  40d103:	add    BYTE PTR [rax],dl
  40d105:	fadd   QWORD PTR [rax]
  40d107:	add    BYTE PTR [rax],al
  40d109:	add    BYTE PTR [rax],al
  40d10b:	add    BYTE PTR [rax],dh
  40d10d:	fadd   QWORD PTR [rax]
  40d10f:	add    BYTE PTR [rax],al
  40d111:	add    BYTE PTR [rax],al
  40d113:	add    BYTE PTR [rsp+rbx*8+0x0],cl
	...
  40d123:	add    BYTE PTR [rax-0x24],ah
  40d126:	add    BYTE PTR [rax],al
  40d128:	add    BYTE PTR [rax],al
  40d12a:	add    BYTE PTR [rax],al
  40d12c:	js     0x40d10a
  40d12e:	add    BYTE PTR [rax],al
  40d130:	add    BYTE PTR [rax],al
  40d132:	add    BYTE PTR [rax],al
  40d134:	mov    ah,bl
  40d136:	add    BYTE PTR [rax],al
  40d138:	add    BYTE PTR [rax],al
  40d13a:	add    BYTE PTR [rax],al
  40d13c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d13d:	fadd   QWORD PTR [rax]
  40d13f:	add    BYTE PTR [rax],al
  40d141:	add    BYTE PTR [rax],al
  40d143:	add    BYTE PTR [rsp+rbx*8+0x0],dh
  40d14a:	add    BYTE PTR [rax],al
  40d14c:	rcr    ah,0x0
  40d14f:	add    BYTE PTR [rax],al
  40d151:	add    BYTE PTR [rax],al
  40d153:	add    al,bl
  40d155:	fadd   QWORD PTR [rax]
  40d157:	add    BYTE PTR [rax],al
  40d159:	add    BYTE PTR [rax],al
  40d15b:	add    al,dh
  40d15d:	fadd   QWORD PTR [rax]
  40d15f:	add    BYTE PTR [rax],al
  40d161:	add    BYTE PTR [rax],al
  40d163:	add    BYTE PTR [rax],cl
  40d165:	fld    QWORD PTR [rax]
  40d167:	add    BYTE PTR [rax],al
  40d169:	add    BYTE PTR [rax],al
  40d16b:	add    BYTE PTR [rax],ah
  40d16d:	fld    QWORD PTR [rax]
  40d16f:	add    BYTE PTR [rax],al
  40d171:	add    BYTE PTR [rax],al
  40d173:	add    BYTE PTR [rax],bh
  40d175:	fld    QWORD PTR [rax]
  40d177:	add    BYTE PTR [rax],al
  40d179:	add    BYTE PTR [rax],al
  40d17b:	add    BYTE PTR [rax-0x23],cl
  40d17e:	add    BYTE PTR [rax],al
  40d180:	add    BYTE PTR [rax],al
  40d182:	add    BYTE PTR [rax],al
  40d184:	pop    rax
  40d185:	fld    QWORD PTR [rax]
  40d187:	add    BYTE PTR [rax],al
  40d189:	add    BYTE PTR [rax],al
  40d18b:	add    BYTE PTR [rbp+rbx*8+0x0],ch
  40d18f:	add    BYTE PTR [rax],al
  40d191:	add    BYTE PTR [rax],al
  40d193:	add    BYTE PTR [rax+0xdd],al
  40d199:	add    BYTE PTR [rax],al
  40d19b:	add    BYTE PTR [rbp+rbx*8+0x0],dl
  40d1a2:	add    BYTE PTR [rax],al
  40d1a4:	mov    ah,0xdd
  40d1a6:	add    BYTE PTR [rax],al
  40d1a8:	add    BYTE PTR [rax],al
  40d1aa:	add    BYTE PTR [rax],al
  40d1ac:	fcomp  st(5)
  40d1ae:	add    BYTE PTR [rax],al
  40d1b0:	add    BYTE PTR [rax],al
  40d1b2:	add    BYTE PTR [rax],al
  40d1b4:	lock fld QWORD PTR [rax]
  40d1b7:	add    BYTE PTR [rax],al
  40d1b9:	add    BYTE PTR [rax],al
  40d1bb:	add    BYTE PTR [rsi+rbx*8],cl
  40d1be:	add    BYTE PTR [rax],al
  40d1c0:	add    BYTE PTR [rax],al
  40d1c2:	add    BYTE PTR [rax],al
  40d1c4:	and    al,0xde
  40d1c6:	add    BYTE PTR [rax],al
  40d1c8:	add    BYTE PTR [rax],al
  40d1ca:	add    BYTE PTR [rax],al
  40d1cc:	rex fiadd WORD PTR [rax]
  40d1cf:	add    BYTE PTR [rax],al
  40d1d1:	add    BYTE PTR [rax],al
  40d1d3:	add    BYTE PTR [rsi+rbx*8+0x0],ah
  40d1d7:	add    BYTE PTR [rax],al
  40d1d9:	add    BYTE PTR [rax],al
  40d1db:	add    BYTE PTR [rax+0xde],cl
  40d1e1:	add    BYTE PTR [rax],al
  40d1e3:	add    BYTE PTR [rax+0xde],bh
  40d1e9:	add    BYTE PTR [rax],al
  40d1eb:	add    al,bl
  40d1ed:	fiadd  WORD PTR [rax]
  40d1ef:	add    BYTE PTR [rax],al
  40d1f1:	add    BYTE PTR [rax],al
  40d1f3:	add    al,bh
  40d1f5:	fiadd  WORD PTR [rax]
  40d1f7:	add    BYTE PTR [rax],al
  40d1f9:	add    BYTE PTR [rax],al
  40d1fb:	add    BYTE PTR [rax],dl
  40d1fd:	fild   WORD PTR [rax]
  40d1ff:	add    BYTE PTR [rax],al
  40d201:	add    BYTE PTR [rax],al
  40d203:	add    BYTE PTR [rax],bh
  40d205:	fild   WORD PTR [rax]
  40d207:	add    BYTE PTR [rax],al
  40d209:	add    BYTE PTR [rax],al
  40d20b:	add    BYTE PTR [rax-0x21],dl
  40d20e:	add    BYTE PTR [rax],al
  40d210:	add    BYTE PTR [rax],al
  40d212:	add    BYTE PTR [rax],al
  40d214:	pop    rsp
  40d215:	fild   WORD PTR [rax]
  40d217:	add    BYTE PTR [rax],al
  40d219:	add    BYTE PTR [rax],al
  40d21b:	add    BYTE PTR [rdi+rbx*8+0x0],ch
  40d21f:	add    BYTE PTR [rax],al
  40d221:	add    BYTE PTR [rax],al
  40d223:	add    BYTE PTR [rax+0xdf],al
  40d229:	add    BYTE PTR [rax],al
  40d22b:	add    BYTE PTR [rdi+rbx*8+0x0],ah
  40d232:	add    BYTE PTR [rax],al
  40d234:	mov    eax,0xdf
  40d239:	add    BYTE PTR [rax],al
  40d23b:	add    al,cl
  40d23d:	fild   WORD PTR [rax]
  40d23f:	add    BYTE PTR [rax],al
  40d241:	add    BYTE PTR [rax],al
  40d243:	add    al,ah
  40d245:	fild   WORD PTR [rax]
  40d247:	add    BYTE PTR [rax],al
  40d249:	add    BYTE PTR [rax],al
  40d24b:	add    al,dh
  40d24d:	fild   WORD PTR [rax]
  40d24f:	add    BYTE PTR [rax],al
  40d251:	add    BYTE PTR [rax],al
  40d253:	add    BYTE PTR [rax+riz*8],al
  40d256:	add    BYTE PTR [rax],al
  40d258:	add    BYTE PTR [rax],al
  40d25a:	add    BYTE PTR [rax],al
  40d25c:	adc    al,0xe0
  40d25e:	add    BYTE PTR [rax],al
  40d260:	add    BYTE PTR [rax],al
  40d262:	add    BYTE PTR [rax],al
  40d264:	and    al,ah
  40d266:	add    BYTE PTR [rax],al
  40d268:	add    BYTE PTR [rax],al
  40d26a:	add    BYTE PTR [rax],al
  40d26c:	sub    al,0xe0
  40d26e:	add    BYTE PTR [rax],al
  40d270:	add    BYTE PTR [rax],al
  40d272:	add    BYTE PTR [rax],al
  40d274:	rex loopne 0x40d277
  40d277:	add    BYTE PTR [rax],al
  40d279:	add    BYTE PTR [rax],al
  40d27b:	add    BYTE PTR [rax+riz*8+0x0],dl
  40d27f:	add    BYTE PTR [rax],al
  40d281:	add    BYTE PTR [rax],al
  40d283:	add    BYTE PTR [rax+riz*8+0x0],ch
  40d287:	add    BYTE PTR [rax],al
  40d289:	add    BYTE PTR [rax],al
  40d28b:	add    BYTE PTR [rax+riz*8+0x0],bh
  40d28f:	add    BYTE PTR [rax],al
  40d291:	add    BYTE PTR [rax],al
  40d293:	add    BYTE PTR [rax+0xe0],dl
  40d299:	add    BYTE PTR [rax],al
  40d29b:	add    BYTE PTR [rax+0xe0],ah
  40d2a1:	add    BYTE PTR [rax],al
  40d2a3:	add    BYTE PTR [rax+riz*8+0x0],ch
  40d2aa:	add    BYTE PTR [rax],al
  40d2ac:	int3   
  40d2ad:	loopne 0x40d2af
  40d2af:	add    BYTE PTR [rax],al
  40d2b1:	add    BYTE PTR [rax],al
  40d2b3:	add    al,ch
  40d2b5:	loopne 0x40d2b7
  40d2b7:	add    BYTE PTR [rax],al
  40d2b9:	add    BYTE PTR [rax],al
  40d2bb:	add    BYTE PTR [rax],al
  40d2bd:	loope  0x40d2bf
  40d2bf:	add    BYTE PTR [rax],al
  40d2c1:	add    BYTE PTR [rax],al
  40d2c3:	add    BYTE PTR [rcx+riz*8],bl
  40d2c6:	add    BYTE PTR [rax],al
  40d2c8:	add    BYTE PTR [rax],al
  40d2ca:	add    BYTE PTR [rax],al
  40d2cc:	sub    al,0xe1
  40d2ce:	add    BYTE PTR [rax],al
  40d2d0:	add    BYTE PTR [rax],al
  40d2d2:	add    BYTE PTR [rax],al
  40d2d4:	rex.W loope 0x40d2d7
  40d2d7:	add    BYTE PTR [rax],al
  40d2d9:	add    BYTE PTR [rax],al
  40d2db:	add    BYTE PTR [rax-0x1f],ah
  40d2de:	add    BYTE PTR [rax],al
  40d2e0:	add    BYTE PTR [rax],al
  40d2e2:	add    BYTE PTR [rax],al
  40d2e4:	js     0x40d2c7
  40d2e6:	add    BYTE PTR [rax],al
  40d2e8:	add    BYTE PTR [rax],al
  40d2ea:	add    BYTE PTR [rax],al
  40d2ec:	nop
  40d2ed:	loope  0x40d2ef
  40d2ef:	add    BYTE PTR [rax],al
  40d2f1:	add    BYTE PTR [rax],al
  40d2f3:	add    BYTE PTR [rcx+riz*8+0x0],ch
  40d2fa:	add    BYTE PTR [rax],al
  40d2fc:	mov    esp,0xe1
  40d301:	add    BYTE PTR [rax],al
  40d303:	add    al,dl
  40d305:	loope  0x40d307
  40d307:	add    BYTE PTR [rax],al
  40d309:	add    BYTE PTR [rax],al
  40d30b:	add    al,bh
  40d30d:	loope  0x40d30f
  40d30f:	add    BYTE PTR [rax],al
  40d311:	add    BYTE PTR [rax],al
  40d313:	add    BYTE PTR [rdx+riz*8],cl
  40d316:	add    BYTE PTR [rax],al
  40d318:	add    BYTE PTR [rax],al
  40d31a:	add    BYTE PTR [rax],al
  40d31c:	sbb    al,0xe2
  40d31e:	add    BYTE PTR [rax],al
  40d320:	add    BYTE PTR [rax],al
  40d322:	add    BYTE PTR [rax],al
  40d324:	xor    al,0xe2
  40d326:	add    BYTE PTR [rax],al
  40d328:	add    BYTE PTR [rax],al
  40d32a:	add    BYTE PTR [rax],al
  40d32c:	push   rax
  40d32d:	loop   0x40d32f
  40d32f:	add    BYTE PTR [rax],al
  40d331:	add    BYTE PTR [rax],al
  40d333:	add    BYTE PTR [rdx+riz*8+0x0],ch
  40d337:	add    BYTE PTR [rax],al
  40d339:	add    BYTE PTR [rax],al
  40d33b:	add    BYTE PTR [rdx+riz*8+0x0],al
  40d342:	add    BYTE PTR [rax],al
  40d344:	test   al,0xe2
  40d346:	add    BYTE PTR [rax],al
  40d348:	add    BYTE PTR [rax],al
  40d34a:	add    BYTE PTR [rax],al
  40d34c:	shl    dl,0x0
  40d34f:	add    BYTE PTR [rax],al
  40d351:	add    BYTE PTR [rax],al
  40d353:	add    al,ah
  40d355:	loop   0x40d357
	...
  40d363:	add    ah,dh
  40d365:	loop   0x40d367
	...
  40d373:	add    BYTE PTR [rax],cl
  40d375:	jrcxz  0x40d377
  40d377:	add    BYTE PTR [rax],al
  40d379:	add    BYTE PTR [rax],al
  40d37b:	add    BYTE PTR [rbx+riz*8],ch
  40d37e:	add    BYTE PTR [rax],al
  40d380:	add    BYTE PTR [rax],al
  40d382:	add    BYTE PTR [rax],al
  40d384:	rex.W jrcxz 0x40d387
  40d387:	add    BYTE PTR [rax],al
  40d389:	add    BYTE PTR [rax],al
  40d38b:	add    BYTE PTR [rbx+riz*8+0x0],bl
  40d38f:	add    BYTE PTR [rax],al
  40d391:	add    BYTE PTR [rax],al
  40d393:	add    BYTE PTR [rax-0x1d],dh
	...
  40d3a2:	add    BYTE PTR [rax],al
  40d3a4:	mov    bl,ah
  40d3a6:	add    BYTE PTR [rax],al
  40d3a8:	add    BYTE PTR [rax],al
  40d3aa:	add    BYTE PTR [rax],al
  40d3ac:	movabs al,ds:0xb8000000000000e3
  40d3b5:	jrcxz  0x40d3b7
  40d3b7:	add    BYTE PTR [rax],al
  40d3b9:	add    BYTE PTR [rax],al
  40d3bb:	add    ah,cl
  40d3bd:	jrcxz  0x40d3bf
  40d3bf:	add    BYTE PTR [rax],al
  40d3c1:	add    BYTE PTR [rax],al
  40d3c3:	add    dl,ah
  40d3c5:	jrcxz  0x40d3c7
  40d3c7:	add    BYTE PTR [rax],al
  40d3c9:	add    BYTE PTR [rax],al
  40d3cb:	add    al,bh
  40d3cd:	jrcxz  0x40d3cf
  40d3cf:	add    BYTE PTR [rax],al
  40d3d1:	add    BYTE PTR [rax],al
  40d3d3:	add    BYTE PTR [rax],cl
  40d3d5:	in     al,0x0
  40d3d7:	add    BYTE PTR [rax],al
  40d3d9:	add    BYTE PTR [rax],al
  40d3db:	add    BYTE PTR [rdx],bl
  40d3dd:	in     al,0x0
  40d3df:	add    BYTE PTR [rax],al
  40d3e1:	add    BYTE PTR [rax],al
  40d3e3:	add    BYTE PTR [rsp+riz*8],dh
  40d3e6:	add    BYTE PTR [rax],al
  40d3e8:	add    BYTE PTR [rax],al
  40d3ea:	add    BYTE PTR [rax],al
  40d3ec:	rex.R in al,0x0
  40d3ef:	add    BYTE PTR [rax],al
  40d3f1:	add    BYTE PTR [rax],al
  40d3f3:	add    BYTE PTR [rax-0x1c],ah
  40d3f6:	add    BYTE PTR [rax],al
  40d3f8:	add    BYTE PTR [rax],al
  40d3fa:	add    BYTE PTR [rax],al
  40d3fc:	js     0x40d3e2
  40d3fe:	add    BYTE PTR [rax],al
  40d400:	add    BYTE PTR [rax],al
  40d402:	add    BYTE PTR [rax],al
  40d404:	xchg   edx,eax
  40d405:	in     al,0x0
  40d407:	add    BYTE PTR [rax],al
  40d409:	add    BYTE PTR [rax],al
  40d40b:	add    BYTE PTR [rax+0xe4],ch
  40d411:	add    BYTE PTR [rax],al
  40d413:	add    BYTE PTR [rsp+riz*8+0x0],bh
  40d41a:	add    BYTE PTR [rax],al
  40d41c:	(bad)  
  40d41d:	in     al,0x0
  40d41f:	add    BYTE PTR [rax],al
  40d421:	add    BYTE PTR [rax],al
  40d423:	add    dl,ch
  40d425:	in     al,0x0
  40d427:	add    BYTE PTR [rax],al
  40d429:	add    BYTE PTR [rax],al
  40d42b:	add    BYTE PTR [rax],cl
  40d42d:	in     eax,0x0
  40d42f:	add    BYTE PTR [rax],al
  40d431:	add    BYTE PTR [rax],al
  40d433:	add    BYTE PTR [rax],dl
  40d435:	in     eax,0x0
  40d437:	add    BYTE PTR [rax],al
  40d439:	add    BYTE PTR [rax],al
  40d43b:	add    BYTE PTR [riz*8+0x0],ah
  40d442:	add    BYTE PTR [rax],al
  40d444:	xor    ah,ch
  40d446:	add    BYTE PTR [rax],al
  40d448:	add    BYTE PTR [rax],al
  40d44a:	add    BYTE PTR [rax],al
  40d44c:	rex.WRX in eax,0x0
  40d44f:	add    BYTE PTR [rax],al
  40d451:	add    BYTE PTR [rax],al
  40d453:	add    BYTE PTR [rax-0x1b],ah
	...
  40d462:	add    BYTE PTR [rax],al
  40d464:	jo     0x40d44b
  40d466:	add    BYTE PTR [rax],al
  40d468:	add    BYTE PTR [rax],al
  40d46a:	add    BYTE PTR [rax],al
  40d46c:	mov    ch,ah
  40d46e:	add    BYTE PTR [rax],al
  40d470:	add    BYTE PTR [rax],al
  40d472:	add    BYTE PTR [rax],al
  40d474:	xchg   esi,eax
  40d475:	in     eax,0x0
  40d477:	add    BYTE PTR [rax],al
  40d479:	add    BYTE PTR [rax],al
  40d47b:	add    BYTE PTR [rsi+0xe5],ah
  40d481:	add    BYTE PTR [rax],al
  40d483:	add    BYTE PTR [rdx+0xe5],dh
  40d489:	add    BYTE PTR [rax],al
  40d48b:	add    al,al
  40d48d:	in     eax,0x0
  40d48f:	add    BYTE PTR [rax],al
  40d491:	add    BYTE PTR [rax],al
  40d493:	add    al,dl
  40d495:	in     eax,0x0
  40d497:	add    BYTE PTR [rax],al
  40d499:	add    BYTE PTR [rax],al
  40d49b:	add    dl,ah
  40d49d:	in     eax,0x0
  40d49f:	add    BYTE PTR [rax],al
  40d4a1:	add    BYTE PTR [rax],al
  40d4a3:	add    dh,dh
  40d4a5:	in     eax,0x0
  40d4a7:	add    BYTE PTR [rax],al
  40d4a9:	add    BYTE PTR [rax],al
  40d4ab:	add    BYTE PTR [rax],al
  40d4ad:	out    0x0,al
  40d4af:	add    BYTE PTR [rax],al
  40d4b1:	add    BYTE PTR [rax],al
  40d4b3:	add    BYTE PTR [rsi],cl
  40d4b5:	out    0x0,al
  40d4b7:	add    BYTE PTR [rax],al
  40d4b9:	add    BYTE PTR [rax],al
  40d4bb:	add    BYTE PTR [rax],bl
  40d4bd:	out    0x0,al
  40d4bf:	add    BYTE PTR [rax],al
  40d4c1:	add    BYTE PTR [rax],al
  40d4c3:	add    BYTE PTR [rdx],ah
  40d4c5:	out    0x0,al
  40d4c7:	add    BYTE PTR [rax],al
  40d4c9:	add    BYTE PTR [rax],al
  40d4cb:	add    BYTE PTR [rsi],ch
  40d4cd:	out    0x0,al
  40d4cf:	add    BYTE PTR [rax],al
  40d4d1:	add    BYTE PTR [rax],al
  40d4d3:	add    BYTE PTR [rsi],dh
  40d4d5:	out    0x0,al
  40d4d7:	add    BYTE PTR [rax],al
  40d4d9:	add    BYTE PTR [rax],al
  40d4db:	add    BYTE PTR [rax-0x1a],al
  40d4de:	add    BYTE PTR [rax],al
  40d4e0:	add    BYTE PTR [rax],al
  40d4e2:	add    BYTE PTR [rax],al
  40d4e4:	rex.WX out 0x0,al
  40d4e7:	add    BYTE PTR [rax],al
  40d4e9:	add    BYTE PTR [rax],al
  40d4eb:	add    BYTE PTR [rdx-0x1a],dl
  40d4ee:	add    BYTE PTR [rax],al
  40d4f0:	add    BYTE PTR [rax],al
  40d4f2:	add    BYTE PTR [rax],al
  40d4f4:	pop    rsp
  40d4f5:	out    0x0,al
  40d4f7:	add    BYTE PTR [rax],al
  40d4f9:	add    BYTE PTR [rax],al
  40d4fb:	add    BYTE PTR [rsi+riz*8+0x0],ah
  40d4ff:	add    BYTE PTR [rax],al
  40d501:	add    BYTE PTR [rax],al
  40d503:	add    BYTE PTR [rsi-0x1a],ch
  40d506:	add    BYTE PTR [rax],al
  40d508:	add    BYTE PTR [rax],al
  40d50a:	add    BYTE PTR [rax],al
  40d50c:	jbe    0x40d4f4
  40d50e:	add    BYTE PTR [rax],al
  40d510:	add    BYTE PTR [rax],al
  40d512:	add    BYTE PTR [rax],al
  40d514:	and    dh,0x0
  40d517:	add    BYTE PTR [rax],al
  40d519:	add    BYTE PTR [rax],al
  40d51b:	add    BYTE PTR [rdx+0xe6],cl
  40d521:	add    BYTE PTR [rax],al
  40d523:	add    BYTE PTR [rsi+riz*8+0x0],dl
  40d52a:	add    BYTE PTR [rax],al
  40d52c:	sahf   
  40d52d:	out    0x0,al
  40d52f:	add    BYTE PTR [rax],al
  40d531:	add    BYTE PTR [rax],al
  40d533:	add    BYTE PTR [rax+0xe6],ch
  40d539:	add    BYTE PTR [rax],al
  40d53b:	add    BYTE PTR [rdx+0xe6],dh
  40d541:	add    BYTE PTR [rax],al
  40d543:	add    BYTE PTR [rsi+riz*8+0x0],bh
  40d54a:	add    BYTE PTR [rax],al
  40d54c:	(bad)  
  40d54d:	out    0x0,al
	...
  40d55b:	add    BYTE PTR [rdx+rbx*8],ch
  40d55e:	add    BYTE PTR [rax],al
  40d560:	add    BYTE PTR [rax],al
  40d562:	add    BYTE PTR [rax],al
  40d564:	rex fiadd DWORD PTR [rax]
  40d567:	add    BYTE PTR [rax],al
  40d569:	add    BYTE PTR [rax],al
  40d56b:	add    BYTE PTR [rdx+rbx*8+0x0],ah
  40d56f:	add    BYTE PTR [rax],al
  40d571:	add    BYTE PTR [rax],al
  40d573:	add    BYTE PTR [rdx+rbx*8+0x0],al
  40d57a:	add    BYTE PTR [rax],al
  40d57c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d57d:	fiadd  DWORD PTR [rax]
  40d57f:	add    BYTE PTR [rax],al
  40d581:	add    BYTE PTR [rax],al
  40d583:	add    ah,al
  40d585:	fiadd  DWORD PTR [rax]
  40d587:	add    BYTE PTR [rax],al
  40d589:	add    BYTE PTR [rax],al
  40d58b:	add    al,ch
  40d58d:	fiadd  DWORD PTR [rax]
  40d58f:	add    BYTE PTR [rax],al
  40d591:	add    BYTE PTR [rax],al
  40d593:	add    BYTE PTR [rbx+rbx*8],dl
  40d596:	add    BYTE PTR [rax],al
  40d598:	add    BYTE PTR [rax],al
  40d59a:	add    BYTE PTR [rax],al
  40d59c:	cmp    al,0xdb
  40d59e:	add    BYTE PTR [rax],al
  40d5a0:	add    BYTE PTR [rax],al
  40d5a2:	add    BYTE PTR [rax],al
  40d5a4:	fild   DWORD PTR fs:[rax]
  40d5a7:	add    BYTE PTR [rax],al
  40d5a9:	add    BYTE PTR [rax],al
  40d5ab:	add    BYTE PTR [rbx+rbx*8+0x0],cl
  40d5b2:	add    BYTE PTR [rax],al
  40d5b4:	test   al,0xdb
  40d5b6:	add    BYTE PTR [rax],al
  40d5b8:	add    BYTE PTR [rax],al
  40d5ba:	add    BYTE PTR [rax],al
  40d5bc:	rcr    bl,0x0
  40d5bf:	add    BYTE PTR [rax],al
  40d5c1:	add    BYTE PTR [rax],al
  40d5c3:	add    ah,dl
  40d5c5:	fild   DWORD PTR [rax]
  40d5c7:	add    BYTE PTR [rax],al
  40d5c9:	add    BYTE PTR [rax],al
  40d5cb:	add    ah,ch
  40d5cd:	fild   DWORD PTR [rax]
  40d5cf:	add    BYTE PTR [rax],al
  40d5d1:	add    BYTE PTR [rax],al
  40d5d3:	add    BYTE PTR [rax],dl
  40d5d5:	fadd   QWORD PTR [rax]
  40d5d7:	add    BYTE PTR [rax],al
  40d5d9:	add    BYTE PTR [rax],al
  40d5db:	add    BYTE PTR [rax],dh
  40d5dd:	fadd   QWORD PTR [rax]
  40d5df:	add    BYTE PTR [rax],al
  40d5e1:	add    BYTE PTR [rax],al
  40d5e3:	add    BYTE PTR [rsp+rbx*8+0x0],cl
	...
  40d5f3:	add    BYTE PTR [rax-0x24],ah
  40d5f6:	add    BYTE PTR [rax],al
  40d5f8:	add    BYTE PTR [rax],al
  40d5fa:	add    BYTE PTR [rax],al
  40d5fc:	js     0x40d5da
  40d5fe:	add    BYTE PTR [rax],al
  40d600:	add    BYTE PTR [rax],al
  40d602:	add    BYTE PTR [rax],al
  40d604:	mov    ah,bl
  40d606:	add    BYTE PTR [rax],al
  40d608:	add    BYTE PTR [rax],al
  40d60a:	add    BYTE PTR [rax],al
  40d60c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d60d:	fadd   QWORD PTR [rax]
  40d60f:	add    BYTE PTR [rax],al
  40d611:	add    BYTE PTR [rax],al
  40d613:	add    BYTE PTR [rsp+rbx*8+0x0],dh
  40d61a:	add    BYTE PTR [rax],al
  40d61c:	rcr    ah,0x0
  40d61f:	add    BYTE PTR [rax],al
  40d621:	add    BYTE PTR [rax],al
  40d623:	add    al,bl
  40d625:	fadd   QWORD PTR [rax]
  40d627:	add    BYTE PTR [rax],al
  40d629:	add    BYTE PTR [rax],al
  40d62b:	add    al,dh
  40d62d:	fadd   QWORD PTR [rax]
  40d62f:	add    BYTE PTR [rax],al
  40d631:	add    BYTE PTR [rax],al
  40d633:	add    BYTE PTR [rax],cl
  40d635:	fld    QWORD PTR [rax]
  40d637:	add    BYTE PTR [rax],al
  40d639:	add    BYTE PTR [rax],al
  40d63b:	add    BYTE PTR [rax],ah
  40d63d:	fld    QWORD PTR [rax]
  40d63f:	add    BYTE PTR [rax],al
  40d641:	add    BYTE PTR [rax],al
  40d643:	add    BYTE PTR [rax],bh
  40d645:	fld    QWORD PTR [rax]
  40d647:	add    BYTE PTR [rax],al
  40d649:	add    BYTE PTR [rax],al
  40d64b:	add    BYTE PTR [rax-0x23],cl
  40d64e:	add    BYTE PTR [rax],al
  40d650:	add    BYTE PTR [rax],al
  40d652:	add    BYTE PTR [rax],al
  40d654:	pop    rax
  40d655:	fld    QWORD PTR [rax]
  40d657:	add    BYTE PTR [rax],al
  40d659:	add    BYTE PTR [rax],al
  40d65b:	add    BYTE PTR [rbp+rbx*8+0x0],ch
  40d65f:	add    BYTE PTR [rax],al
  40d661:	add    BYTE PTR [rax],al
  40d663:	add    BYTE PTR [rax+0xdd],al
  40d669:	add    BYTE PTR [rax],al
  40d66b:	add    BYTE PTR [rbp+rbx*8+0x0],dl
  40d672:	add    BYTE PTR [rax],al
  40d674:	mov    ah,0xdd
  40d676:	add    BYTE PTR [rax],al
  40d678:	add    BYTE PTR [rax],al
  40d67a:	add    BYTE PTR [rax],al
  40d67c:	fcomp  st(5)
  40d67e:	add    BYTE PTR [rax],al
  40d680:	add    BYTE PTR [rax],al
  40d682:	add    BYTE PTR [rax],al
  40d684:	lock fld QWORD PTR [rax]
  40d687:	add    BYTE PTR [rax],al
  40d689:	add    BYTE PTR [rax],al
  40d68b:	add    BYTE PTR [rsi+rbx*8],cl
  40d68e:	add    BYTE PTR [rax],al
  40d690:	add    BYTE PTR [rax],al
  40d692:	add    BYTE PTR [rax],al
  40d694:	and    al,0xde
  40d696:	add    BYTE PTR [rax],al
  40d698:	add    BYTE PTR [rax],al
  40d69a:	add    BYTE PTR [rax],al
  40d69c:	rex fiadd WORD PTR [rax]
  40d69f:	add    BYTE PTR [rax],al
  40d6a1:	add    BYTE PTR [rax],al
  40d6a3:	add    BYTE PTR [rsi+rbx*8+0x0],ah
  40d6a7:	add    BYTE PTR [rax],al
  40d6a9:	add    BYTE PTR [rax],al
  40d6ab:	add    BYTE PTR [rax+0xde],cl
  40d6b1:	add    BYTE PTR [rax],al
  40d6b3:	add    BYTE PTR [rax+0xde],bh
  40d6b9:	add    BYTE PTR [rax],al
  40d6bb:	add    al,bl
  40d6bd:	fiadd  WORD PTR [rax]
  40d6bf:	add    BYTE PTR [rax],al
  40d6c1:	add    BYTE PTR [rax],al
  40d6c3:	add    al,bh
  40d6c5:	fiadd  WORD PTR [rax]
  40d6c7:	add    BYTE PTR [rax],al
  40d6c9:	add    BYTE PTR [rax],al
  40d6cb:	add    BYTE PTR [rax],dl
  40d6cd:	fild   WORD PTR [rax]
  40d6cf:	add    BYTE PTR [rax],al
  40d6d1:	add    BYTE PTR [rax],al
  40d6d3:	add    BYTE PTR [rax],bh
  40d6d5:	fild   WORD PTR [rax]
  40d6d7:	add    BYTE PTR [rax],al
  40d6d9:	add    BYTE PTR [rax],al
  40d6db:	add    BYTE PTR [rax-0x21],dl
  40d6de:	add    BYTE PTR [rax],al
  40d6e0:	add    BYTE PTR [rax],al
  40d6e2:	add    BYTE PTR [rax],al
  40d6e4:	pop    rsp
  40d6e5:	fild   WORD PTR [rax]
  40d6e7:	add    BYTE PTR [rax],al
  40d6e9:	add    BYTE PTR [rax],al
  40d6eb:	add    BYTE PTR [rdi+rbx*8+0x0],ch
  40d6ef:	add    BYTE PTR [rax],al
  40d6f1:	add    BYTE PTR [rax],al
  40d6f3:	add    BYTE PTR [rax+0xdf],al
  40d6f9:	add    BYTE PTR [rax],al
  40d6fb:	add    BYTE PTR [rdi+rbx*8+0x0],ah
  40d702:	add    BYTE PTR [rax],al
  40d704:	mov    eax,0xdf
  40d709:	add    BYTE PTR [rax],al
  40d70b:	add    al,cl
  40d70d:	fild   WORD PTR [rax]
  40d70f:	add    BYTE PTR [rax],al
  40d711:	add    BYTE PTR [rax],al
  40d713:	add    al,ah
  40d715:	fild   WORD PTR [rax]
  40d717:	add    BYTE PTR [rax],al
  40d719:	add    BYTE PTR [rax],al
  40d71b:	add    al,dh
  40d71d:	fild   WORD PTR [rax]
  40d71f:	add    BYTE PTR [rax],al
  40d721:	add    BYTE PTR [rax],al
  40d723:	add    BYTE PTR [rax+riz*8],al
  40d726:	add    BYTE PTR [rax],al
  40d728:	add    BYTE PTR [rax],al
  40d72a:	add    BYTE PTR [rax],al
  40d72c:	adc    al,0xe0
  40d72e:	add    BYTE PTR [rax],al
  40d730:	add    BYTE PTR [rax],al
  40d732:	add    BYTE PTR [rax],al
  40d734:	and    al,ah
  40d736:	add    BYTE PTR [rax],al
  40d738:	add    BYTE PTR [rax],al
  40d73a:	add    BYTE PTR [rax],al
  40d73c:	sub    al,0xe0
  40d73e:	add    BYTE PTR [rax],al
  40d740:	add    BYTE PTR [rax],al
  40d742:	add    BYTE PTR [rax],al
  40d744:	rex loopne 0x40d747
  40d747:	add    BYTE PTR [rax],al
  40d749:	add    BYTE PTR [rax],al
  40d74b:	add    BYTE PTR [rax+riz*8+0x0],dl
  40d74f:	add    BYTE PTR [rax],al
  40d751:	add    BYTE PTR [rax],al
  40d753:	add    BYTE PTR [rax+riz*8+0x0],ch
  40d757:	add    BYTE PTR [rax],al
  40d759:	add    BYTE PTR [rax],al
  40d75b:	add    BYTE PTR [rax+riz*8+0x0],bh
  40d75f:	add    BYTE PTR [rax],al
  40d761:	add    BYTE PTR [rax],al
  40d763:	add    BYTE PTR [rax+0xe0],dl
  40d769:	add    BYTE PTR [rax],al
  40d76b:	add    BYTE PTR [rax+0xe0],ah
  40d771:	add    BYTE PTR [rax],al
  40d773:	add    BYTE PTR [rax+riz*8+0x0],ch
  40d77a:	add    BYTE PTR [rax],al
  40d77c:	int3   
  40d77d:	loopne 0x40d77f
  40d77f:	add    BYTE PTR [rax],al
  40d781:	add    BYTE PTR [rax],al
  40d783:	add    al,ch
  40d785:	loopne 0x40d787
  40d787:	add    BYTE PTR [rax],al
  40d789:	add    BYTE PTR [rax],al
  40d78b:	add    BYTE PTR [rax],al
  40d78d:	loope  0x40d78f
  40d78f:	add    BYTE PTR [rax],al
  40d791:	add    BYTE PTR [rax],al
  40d793:	add    BYTE PTR [rcx+riz*8],bl
  40d796:	add    BYTE PTR [rax],al
  40d798:	add    BYTE PTR [rax],al
  40d79a:	add    BYTE PTR [rax],al
  40d79c:	sub    al,0xe1
  40d79e:	add    BYTE PTR [rax],al
  40d7a0:	add    BYTE PTR [rax],al
  40d7a2:	add    BYTE PTR [rax],al
  40d7a4:	rex.W loope 0x40d7a7
  40d7a7:	add    BYTE PTR [rax],al
  40d7a9:	add    BYTE PTR [rax],al
  40d7ab:	add    BYTE PTR [rax-0x1f],ah
  40d7ae:	add    BYTE PTR [rax],al
  40d7b0:	add    BYTE PTR [rax],al
  40d7b2:	add    BYTE PTR [rax],al
  40d7b4:	js     0x40d797
  40d7b6:	add    BYTE PTR [rax],al
  40d7b8:	add    BYTE PTR [rax],al
  40d7ba:	add    BYTE PTR [rax],al
  40d7bc:	nop
  40d7bd:	loope  0x40d7bf
  40d7bf:	add    BYTE PTR [rax],al
  40d7c1:	add    BYTE PTR [rax],al
  40d7c3:	add    BYTE PTR [rcx+riz*8+0x0],ch
  40d7ca:	add    BYTE PTR [rax],al
  40d7cc:	mov    esp,0xe1
  40d7d1:	add    BYTE PTR [rax],al
  40d7d3:	add    al,dl
  40d7d5:	loope  0x40d7d7
  40d7d7:	add    BYTE PTR [rax],al
  40d7d9:	add    BYTE PTR [rax],al
  40d7db:	add    al,bh
  40d7dd:	loope  0x40d7df
  40d7df:	add    BYTE PTR [rax],al
  40d7e1:	add    BYTE PTR [rax],al
  40d7e3:	add    BYTE PTR [rdx+riz*8],cl
  40d7e6:	add    BYTE PTR [rax],al
  40d7e8:	add    BYTE PTR [rax],al
  40d7ea:	add    BYTE PTR [rax],al
  40d7ec:	sbb    al,0xe2
  40d7ee:	add    BYTE PTR [rax],al
  40d7f0:	add    BYTE PTR [rax],al
  40d7f2:	add    BYTE PTR [rax],al
  40d7f4:	xor    al,0xe2
  40d7f6:	add    BYTE PTR [rax],al
  40d7f8:	add    BYTE PTR [rax],al
  40d7fa:	add    BYTE PTR [rax],al
  40d7fc:	push   rax
  40d7fd:	loop   0x40d7ff
  40d7ff:	add    BYTE PTR [rax],al
  40d801:	add    BYTE PTR [rax],al
  40d803:	add    BYTE PTR [rdx+riz*8+0x0],ch
  40d807:	add    BYTE PTR [rax],al
  40d809:	add    BYTE PTR [rax],al
  40d80b:	add    BYTE PTR [rdx+riz*8+0x0],al
  40d812:	add    BYTE PTR [rax],al
  40d814:	test   al,0xe2
  40d816:	add    BYTE PTR [rax],al
  40d818:	add    BYTE PTR [rax],al
  40d81a:	add    BYTE PTR [rax],al
  40d81c:	shl    dl,0x0
  40d81f:	add    BYTE PTR [rax],al
  40d821:	add    BYTE PTR [rax],al
  40d823:	add    al,ah
  40d825:	loop   0x40d827
	...
  40d833:	add    ah,dh
  40d835:	loop   0x40d837
	...
  40d843:	add    BYTE PTR [rax],cl
  40d845:	jrcxz  0x40d847
  40d847:	add    BYTE PTR [rax],al
  40d849:	add    BYTE PTR [rax],al
  40d84b:	add    BYTE PTR [rbx+riz*8],ch
  40d84e:	add    BYTE PTR [rax],al
  40d850:	add    BYTE PTR [rax],al
  40d852:	add    BYTE PTR [rax],al
  40d854:	rex.W jrcxz 0x40d857
  40d857:	add    BYTE PTR [rax],al
  40d859:	add    BYTE PTR [rax],al
  40d85b:	add    BYTE PTR [rbx+riz*8+0x0],bl
  40d85f:	add    BYTE PTR [rax],al
  40d861:	add    BYTE PTR [rax],al
  40d863:	add    BYTE PTR [rax-0x1d],dh
	...
  40d872:	add    BYTE PTR [rax],al
  40d874:	mov    bl,ah
  40d876:	add    BYTE PTR [rax],al
  40d878:	add    BYTE PTR [rax],al
  40d87a:	add    BYTE PTR [rax],al
  40d87c:	movabs al,ds:0xb8000000000000e3
  40d885:	jrcxz  0x40d887
  40d887:	add    BYTE PTR [rax],al
  40d889:	add    BYTE PTR [rax],al
  40d88b:	add    ah,cl
  40d88d:	jrcxz  0x40d88f
  40d88f:	add    BYTE PTR [rax],al
  40d891:	add    BYTE PTR [rax],al
  40d893:	add    dl,ah
  40d895:	jrcxz  0x40d897
  40d897:	add    BYTE PTR [rax],al
  40d899:	add    BYTE PTR [rax],al
  40d89b:	add    al,bh
  40d89d:	jrcxz  0x40d89f
  40d89f:	add    BYTE PTR [rax],al
  40d8a1:	add    BYTE PTR [rax],al
  40d8a3:	add    BYTE PTR [rax],cl
  40d8a5:	in     al,0x0
  40d8a7:	add    BYTE PTR [rax],al
  40d8a9:	add    BYTE PTR [rax],al
  40d8ab:	add    BYTE PTR [rdx],bl
  40d8ad:	in     al,0x0
  40d8af:	add    BYTE PTR [rax],al
  40d8b1:	add    BYTE PTR [rax],al
  40d8b3:	add    BYTE PTR [rsp+riz*8],dh
  40d8b6:	add    BYTE PTR [rax],al
  40d8b8:	add    BYTE PTR [rax],al
  40d8ba:	add    BYTE PTR [rax],al
  40d8bc:	rex.R in al,0x0
  40d8bf:	add    BYTE PTR [rax],al
  40d8c1:	add    BYTE PTR [rax],al
  40d8c3:	add    BYTE PTR [rax-0x1c],ah
  40d8c6:	add    BYTE PTR [rax],al
  40d8c8:	add    BYTE PTR [rax],al
  40d8ca:	add    BYTE PTR [rax],al
  40d8cc:	js     0x40d8b2
  40d8ce:	add    BYTE PTR [rax],al
  40d8d0:	add    BYTE PTR [rax],al
  40d8d2:	add    BYTE PTR [rax],al
  40d8d4:	xchg   edx,eax
  40d8d5:	in     al,0x0
  40d8d7:	add    BYTE PTR [rax],al
  40d8d9:	add    BYTE PTR [rax],al
  40d8db:	add    BYTE PTR [rax+0xe4],ch
  40d8e1:	add    BYTE PTR [rax],al
  40d8e3:	add    BYTE PTR [rsp+riz*8+0x0],bh
  40d8ea:	add    BYTE PTR [rax],al
  40d8ec:	(bad)  
  40d8ed:	in     al,0x0
  40d8ef:	add    BYTE PTR [rax],al
  40d8f1:	add    BYTE PTR [rax],al
  40d8f3:	add    dl,ch
  40d8f5:	in     al,0x0
  40d8f7:	add    BYTE PTR [rax],al
  40d8f9:	add    BYTE PTR [rax],al
  40d8fb:	add    BYTE PTR [rax],cl
  40d8fd:	in     eax,0x0
  40d8ff:	add    BYTE PTR [rax],al
  40d901:	add    BYTE PTR [rax],al
  40d903:	add    BYTE PTR [rax],dl
  40d905:	in     eax,0x0
  40d907:	add    BYTE PTR [rax],al
  40d909:	add    BYTE PTR [rax],al
  40d90b:	add    BYTE PTR [riz*8+0x0],ah
  40d912:	add    BYTE PTR [rax],al
  40d914:	xor    ah,ch
  40d916:	add    BYTE PTR [rax],al
  40d918:	add    BYTE PTR [rax],al
  40d91a:	add    BYTE PTR [rax],al
  40d91c:	rex.WRX in eax,0x0
  40d91f:	add    BYTE PTR [rax],al
  40d921:	add    BYTE PTR [rax],al
  40d923:	add    BYTE PTR [rax-0x1b],ah
	...
  40d932:	add    BYTE PTR [rax],al
  40d934:	jo     0x40d91b
  40d936:	add    BYTE PTR [rax],al
  40d938:	add    BYTE PTR [rax],al
  40d93a:	add    BYTE PTR [rax],al
  40d93c:	mov    ch,ah
  40d93e:	add    BYTE PTR [rax],al
  40d940:	add    BYTE PTR [rax],al
  40d942:	add    BYTE PTR [rax],al
  40d944:	xchg   esi,eax
  40d945:	in     eax,0x0
  40d947:	add    BYTE PTR [rax],al
  40d949:	add    BYTE PTR [rax],al
  40d94b:	add    BYTE PTR [rsi+0xe5],ah
  40d951:	add    BYTE PTR [rax],al
  40d953:	add    BYTE PTR [rdx+0xe5],dh
  40d959:	add    BYTE PTR [rax],al
  40d95b:	add    al,al
  40d95d:	in     eax,0x0
  40d95f:	add    BYTE PTR [rax],al
  40d961:	add    BYTE PTR [rax],al
  40d963:	add    al,dl
  40d965:	in     eax,0x0
  40d967:	add    BYTE PTR [rax],al
  40d969:	add    BYTE PTR [rax],al
  40d96b:	add    dl,ah
  40d96d:	in     eax,0x0
  40d96f:	add    BYTE PTR [rax],al
  40d971:	add    BYTE PTR [rax],al
  40d973:	add    dh,dh
  40d975:	in     eax,0x0
  40d977:	add    BYTE PTR [rax],al
  40d979:	add    BYTE PTR [rax],al
  40d97b:	add    BYTE PTR [rax],al
  40d97d:	out    0x0,al
  40d97f:	add    BYTE PTR [rax],al
  40d981:	add    BYTE PTR [rax],al
  40d983:	add    BYTE PTR [rsi],cl
  40d985:	out    0x0,al
  40d987:	add    BYTE PTR [rax],al
  40d989:	add    BYTE PTR [rax],al
  40d98b:	add    BYTE PTR [rax],bl
  40d98d:	out    0x0,al
  40d98f:	add    BYTE PTR [rax],al
  40d991:	add    BYTE PTR [rax],al
  40d993:	add    BYTE PTR [rdx],ah
  40d995:	out    0x0,al
  40d997:	add    BYTE PTR [rax],al
  40d999:	add    BYTE PTR [rax],al
  40d99b:	add    BYTE PTR [rsi],ch
  40d99d:	out    0x0,al
  40d99f:	add    BYTE PTR [rax],al
  40d9a1:	add    BYTE PTR [rax],al
  40d9a3:	add    BYTE PTR [rsi],dh
  40d9a5:	out    0x0,al
  40d9a7:	add    BYTE PTR [rax],al
  40d9a9:	add    BYTE PTR [rax],al
  40d9ab:	add    BYTE PTR [rax-0x1a],al
  40d9ae:	add    BYTE PTR [rax],al
  40d9b0:	add    BYTE PTR [rax],al
  40d9b2:	add    BYTE PTR [rax],al
  40d9b4:	rex.WX out 0x0,al
  40d9b7:	add    BYTE PTR [rax],al
  40d9b9:	add    BYTE PTR [rax],al
  40d9bb:	add    BYTE PTR [rdx-0x1a],dl
  40d9be:	add    BYTE PTR [rax],al
  40d9c0:	add    BYTE PTR [rax],al
  40d9c2:	add    BYTE PTR [rax],al
  40d9c4:	pop    rsp
  40d9c5:	out    0x0,al
  40d9c7:	add    BYTE PTR [rax],al
  40d9c9:	add    BYTE PTR [rax],al
  40d9cb:	add    BYTE PTR [rsi+riz*8+0x0],ah
  40d9cf:	add    BYTE PTR [rax],al
  40d9d1:	add    BYTE PTR [rax],al
  40d9d3:	add    BYTE PTR [rsi-0x1a],ch
  40d9d6:	add    BYTE PTR [rax],al
  40d9d8:	add    BYTE PTR [rax],al
  40d9da:	add    BYTE PTR [rax],al
  40d9dc:	jbe    0x40d9c4
  40d9de:	add    BYTE PTR [rax],al
  40d9e0:	add    BYTE PTR [rax],al
  40d9e2:	add    BYTE PTR [rax],al
  40d9e4:	and    dh,0x0
  40d9e7:	add    BYTE PTR [rax],al
  40d9e9:	add    BYTE PTR [rax],al
  40d9eb:	add    BYTE PTR [rdx+0xe6],cl
  40d9f1:	add    BYTE PTR [rax],al
  40d9f3:	add    BYTE PTR [rsi+riz*8+0x0],dl
  40d9fa:	add    BYTE PTR [rax],al
  40d9fc:	sahf   
  40d9fd:	out    0x0,al
  40d9ff:	add    BYTE PTR [rax],al
  40da01:	add    BYTE PTR [rax],al
  40da03:	add    BYTE PTR [rax+0xe6],ch
  40da09:	add    BYTE PTR [rax],al
  40da0b:	add    BYTE PTR [rdx+0xe6],dh
  40da11:	add    BYTE PTR [rax],al
  40da13:	add    BYTE PTR [rsi+riz*8+0x0],bh
  40da1a:	add    BYTE PTR [rax],al
  40da1c:	(bad)  
  40da1d:	out    0x0,al
	...
  40da2b:	add    BYTE PTR [rax+0x625f6700],ah
  40da31:	jne    0x40daa6
  40da33:	pop    rdi
  40da34:	addr32 gs je 0x40da97
  40da38:	jae    0x40dab3
  40da3a:	outs   dx,BYTE PTR ds:[rsi]
  40da3b:	movsxd eax,DWORD PTR [rax]
  40da3d:	add    BYTE PTR [rax],al
  40da3f:	add    BYTE PTR [rbx+0x625f6700],ch
  40da45:	jne    0x40daba
  40da47:	pop    rdi
  40da48:	ja     0x40daab
  40da4a:	je     0x40daaf
  40da4c:	push   0x6d616e5f
  40da51:	gs pop rdi
  40da53:	outs   dx,DWORD PTR ds:[rsi]
  40da54:	outs   dx,BYTE PTR ds:[rsi]
  40da55:	pop    rdi
  40da56:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40da59:	outs   dx,BYTE PTR ds:[rsi]
  40da5a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40da5f:	outs   dx,BYTE PTR ds:[rsi]
  40da60:	add    BYTE PTR [rax],al
  40da62:	add    BYTE PTR [rax],al
  40da64:	(bad)  
  40da65:	add    DWORD PTR [rdi+0x5f],esp
  40da68:	fs (bad) 
  40da6a:	jne    0x40dadf
  40da6c:	pop    rdi
  40da6d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40da70:	outs   dx,BYTE PTR ds:[rsi]
  40da71:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40da76:	outs   dx,BYTE PTR ds:[rsi]
  40da77:	pop    rdi
  40da78:	movsxd esp,DWORD PTR [rcx+0x6c]
  40da7b:	ins    BYTE PTR es:[rdi],dx
  40da7c:	pop    rdi
  40da7d:	jae    0x40daf8
  40da7f:	outs   dx,BYTE PTR ds:[rsi]
  40da80:	movsxd eax,DWORD PTR [rax]
  40da82:	add    BYTE PTR [rax],al
  40da84:	sub    eax,DWORD PTR [rcx]
  40da86:	addr32 pop rdi
  40da88:	fs (bad) 
  40da8a:	jne    0x40daff
  40da8c:	pop    rdi
  40da8d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40da90:	outs   dx,BYTE PTR ds:[rsi]
  40da91:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40da96:	outs   dx,BYTE PTR ds:[rsi]
  40da97:	pop    rdi
  40da98:	gs ins DWORD PTR es:[rdi],dx
  40da9a:	imul   esi,DWORD PTR [rdi+rbx*2+0x73],0x616e6769
  40daa2:	ins    BYTE PTR es:[rdi],dx
  40daa3:	add    BYTE PTR [rcx],dh
  40daa5:	add    DWORD PTR [rdi+0x5f],esp
  40daa8:	fs (bad) 
  40daaa:	jne    0x40db1f
  40daac:	pop    rdi
  40daad:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dab0:	outs   dx,BYTE PTR ds:[rsi]
  40dab1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40dab6:	outs   dx,BYTE PTR ds:[rsi]
  40dab7:	pop    rdi
  40dab8:	data16 ins BYTE PTR es:[rdi],dx
  40daba:	jne    0x40db2f
  40dabc:	push   0x6e79735f
  40dac1:	movsxd eax,DWORD PTR [rax]
  40dac3:	add    BYTE PTR [rcx],bh
  40dac5:	add    DWORD PTR [rdi+0x5f],esp
  40dac8:	fs (bad) 
  40daca:	jne    0x40db3f
  40dacc:	pop    rdi
  40dacd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dad0:	outs   dx,BYTE PTR ds:[rsi]
  40dad1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40dad6:	outs   dx,BYTE PTR ds:[rsi]
  40dad7:	pop    rdi
  40dad8:	addr32 gs je 0x40db3b
  40dadc:	jne    0x40db4c
  40dade:	imul   esi,DWORD PTR [rcx+0x75],0x616e5f65
  40dae5:	ins    DWORD PTR es:[rdi],dx
  40dae6:	add    BYTE PTR gs:[rdi],bh
  40dae9:	add    DWORD PTR [rdi+0x5f],esp
  40daec:	fs (bad) 
  40daee:	jne    0x40db63
  40daf0:	pop    rdi
  40daf1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40daf4:	outs   dx,BYTE PTR ds:[rsi]
  40daf5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40dafa:	outs   dx,BYTE PTR ds:[rsi]
  40dafb:	pop    rdi
  40dafc:	outs   dx,BYTE PTR ds:[rsi]
  40dafd:	gs ja  0x40db5f
  40db00:	outs   dx,WORD PTR ds:[rsi]
  40db02:	jb     0x40db63
  40db04:	(bad)  
  40db05:	fs fs jb 0x40db6e
  40db09:	jae    0x40db7e
  40db0b:	pop    rdi
  40db0c:	jae    0x40db87
  40db0e:	outs   dx,BYTE PTR ds:[rsi]
  40db0f:	movsxd eax,DWORD PTR [rax]
  40db11:	add    BYTE PTR [rax],al
  40db13:	add    BYTE PTR [rdx+0x1],cl
  40db16:	addr32 pop rdi
  40db18:	fs (bad) 
  40db1a:	jne    0x40db8f
  40db1c:	pop    rdi
  40db1d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40db20:	outs   dx,BYTE PTR ds:[rsi]
  40db21:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40db26:	outs   dx,BYTE PTR ds:[rsi]
  40db27:	pop    rdi
  40db28:	jae    0x40db93
  40db2a:	outs   dx,BYTE PTR ds:[esi]
  40db2c:	(bad)  
  40db2d:	ins    BYTE PTR es:[rdi],dx
  40db2e:	pop    rdi
  40db2f:	jae    0x40dba6
  40db31:	(bad)  
  40db33:	movsxd esi,DWORD PTR [rdx+0x69]
  40db36:	(bad)  
  40db37:	add    BYTE PTR gs:[rax],al
  40db3a:	add    BYTE PTR [rax],al
  40db3c:	rex.WXB add QWORD PTR [r15+0x5f],rsp
  40db40:	fs (bad) 
  40db42:	jne    0x40dbb7
  40db44:	pop    rdi
  40db45:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40db48:	outs   dx,BYTE PTR ds:[rsi]
  40db49:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40db4e:	outs   dx,BYTE PTR ds:[rsi]
  40db4f:	pop    rdi
  40db50:	jae    0x40dbbb
  40db52:	outs   dx,BYTE PTR ds:[esi]
  40db54:	(bad)  
  40db55:	ins    BYTE PTR es:[rdi],dx
  40db56:	pop    rdi
  40db57:	jne    0x40dbc7
  40db59:	jae    0x40dbd0
  40db5b:	(bad)  
  40db5d:	movsxd esi,DWORD PTR [rdx+0x69]
  40db60:	(bad)  
  40db61:	add    BYTE PTR gs:[rax],al
  40db64:	push   0x645f6701
  40db69:	(bad)  
  40db6a:	jne    0x40dbdf
  40db6c:	pop    rdi
  40db6d:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  40db74:	movsxd esp,DWORD PTR [rbp+0x5f]
  40db77:	imul   ebp,DWORD PTR [rsi+0x66],0x6f6c5f6f
  40db7e:	outs   dx,DWORD PTR ds:[rsi]
  40db7f:	imul   esi,DWORD PTR [rbp+0x70],0x5f
  40db83:	ins    DWORD PTR es:[rdi],dx
  40db84:	gs je  0x40dbef
  40db87:	outs   dx,DWORD PTR ds:[rsi]
  40db88:	add    BYTE PTR fs:[rax],al
  40db8b:	add    BYTE PTR [rdi+0x1],bh
  40db8e:	addr32 pop rdi
  40db90:	fs (bad) 
  40db92:	jne    0x40dc07
  40db94:	pop    rdi
  40db95:	imul   esi,DWORD PTR [rbx+0x5f],0x65746e69
  40db9c:	jb     0x40dc04
  40db9e:	(bad)  
  40db9f:	movsxd esp,DWORD PTR [rbp+0x5f]
  40dba2:	outs   dx,BYTE PTR ds:[rsi]
  40dba3:	(bad)  
  40dba4:	ins    DWORD PTR es:[rdi],dx
  40dba5:	add    BYTE PTR gs:[rax],al
  40dba8:	add    BYTE PTR [rcx],0x67
  40dbab:	pop    rdi
  40dbac:	fs (bad) 
  40dbae:	jne    0x40dc23
  40dbb0:	pop    rdi
  40dbb1:	imul   esi,DWORD PTR [rbx+0x5f],0x626d656d
  40dbb8:	gs jb  0x40dc1a
  40dbbb:	outs   dx,BYTE PTR ds:[rsi]
  40dbbc:	(bad)  
  40dbbd:	ins    DWORD PTR es:[rdi],dx
  40dbbe:	add    BYTE PTR gs:[rcx+0x645f6701],al
  40dbc5:	(bad)  
  40dbc6:	jne    0x40dc3b
  40dbc8:	pop    rdi
  40dbc9:	imul   esi,DWORD PTR [rbx+0x5f],0x656d616e
  40dbd0:	add    BYTE PTR [rax],al
  40dbd2:	add    BYTE PTR [rax],al
  40dbd4:	add    DWORD PTR [rcx],0x67
  40dbd7:	pop    rdi
  40dbd8:	fs (bad) 
  40dbda:	jne    0x40dc4f
  40dbdc:	pop    rdi
  40dbdd:	imul   esi,DWORD PTR [rbx+0x5f],0x71696e75
  40dbe4:	jne    0x40dc4b
  40dbe6:	pop    rdi
  40dbe7:	outs   dx,BYTE PTR ds:[rsi]
  40dbe8:	(bad)  
  40dbe9:	ins    DWORD PTR es:[rdi],dx
  40dbea:	gs add cl,dl
  40dbed:	add    DWORD PTR [rdi+0x5f],esp
  40dbf0:	fs (bad) 
  40dbf2:	jne    0x40dc67
  40dbf4:	pop    rdi
  40dbf5:	outs   dx,BYTE PTR ds:[rsi]
  40dbf6:	outs   dx,DWORD PTR ds:[rsi]
  40dbf7:	fs gs pop rdi
  40dbfa:	imul   ebp,DWORD PTR [rsi+0x66],0x6f6c5f6f
  40dc01:	outs   dx,DWORD PTR ds:[rsi]
  40dc02:	imul   esi,DWORD PTR [rbp+0x70],0x5f
  40dc06:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  40dc0d:	movsxd esp,DWORD PTR [rbp+0x0]
  40dc10:	rol    BYTE PTR [rcx],cl
  40dc12:	addr32 pop rdi
  40dc14:	fs (bad) 
  40dc16:	jne    0x40dc8b
  40dc18:	pop    rdi
  40dc19:	outs   dx,BYTE PTR ds:[rsi]
  40dc1a:	outs   dx,DWORD PTR ds:[rsi]
  40dc1b:	fs gs pop rdi
  40dc1e:	imul   ebp,DWORD PTR [rsi+0x66],0x656e5f6f
  40dc25:	ja     0x40dc86
  40dc27:	outs   dx,WORD PTR ds:[rsi]
  40dc29:	jb     0x40dc8a
  40dc2b:	js     0x40dc9a
  40dc2d:	ins    BYTE PTR es:[rdi],dx
  40dc2e:	add    BYTE PTR [rax],al
  40dc30:	(bad)  
  40dc31:	add    DWORD PTR [rdi+0x5f],esp
  40dc34:	fs (bad) 
  40dc36:	jne    0x40dcab
  40dc38:	pop    rdi
  40dc39:	outs   dx,BYTE PTR ds:[rsi]
  40dc3a:	outs   dx,DWORD PTR ds:[rsi]
  40dc3b:	fs gs pop rdi
  40dc3e:	imul   ebp,DWORD PTR [rsi+0x66],0x6e755f6f
  40dc45:	jb     0x40dcac
  40dc47:	data16 add BYTE PTR [rax],al
  40dc4a:	add    BYTE PTR [rax],al
  40dc4c:	ret    0x6703
  40dc4f:	pop    rdi
  40dc50:	imul   ebp,DWORD PTR [rdi+0x5f],0x6f727265
  40dc57:	jb     0x40dcb8
  40dc59:	jno    0x40dcd0
  40dc5b:	(bad)  
  40dc5c:	jb     0x40dcc9
  40dc5e:	add    BYTE PTR [rax],al
  40dc60:	add    DWORD PTR [rax],eax
  40dc62:	pop    rdi
  40dc63:	ins    BYTE PTR es:[edi],dx
  40dc65:	imul   esp,DWORD PTR [rdx+0x5f],0x5f746567
  40dc6c:	ins    BYTE PTR es:[rdi],dx
  40dc6d:	outs   dx,DWORD PTR ds:[rsi]
  40dc6e:	movsxd esp,DWORD PTR [rcx+0x6c]
  40dc71:	gs pop rdi
  40dc73:	imul   esi,DWORD PTR fs:[rdx+0x0],0x67001f00
  40dc7b:	pop    rdi
  40dc7c:	(bad)  
  40dc7d:	jae    0x40dce2
  40dc7f:	imul   ebp,DWORD PTR [rcx+0x5f],0x6c626174
  40dc86:	add    BYTE PTR gs:[rax],ch
  40dc89:	add    BYTE PTR [rdi+0x5f],ah
  40dc8c:	(bad)  
  40dc8d:	jae    0x40dd02
  40dc8f:	gs jb  0x40dd06
  40dc92:	imul   ebp,DWORD PTR [rdi+0x6e],0x73656d5f
  40dc99:	jae    0x40dcfc
  40dc9b:	addr32 gs pop rdi
  40dc9e:	gs js  0x40dd11
  40dca1:	jb     0x40dca3
  40dca3:	add    BYTE PTR [rdx+0x1],ah
  40dca6:	addr32 pop rdi
  40dca8:	gs jb  0x40dd1d
  40dcab:	outs   dx,DWORD PTR ds:[rsi]
  40dcac:	jb     0x40dd0d
  40dcae:	data16 jb 0x40dd16
  40dcb1:	add    BYTE PTR gs:[rax],al
  40dcb4:	jp     0x40dcb7
  40dcb6:	addr32 pop rdi
  40dcb8:	data16 jb 0x40dd20
  40dcbb:	add    BYTE PTR gs:[rax],al
  40dcbe:	add    BYTE PTR [rax],al
  40dcc0:	popf   
  40dcc1:	add    DWORD PTR [rdi+0x5f],esp
  40dcc4:	push   0x5f687361
  40dcc9:	je     0x40dd2c
  40dccb:	(bad)  
  40dccc:	ins    BYTE PTR es:[rdi],dx
  40dccd:	gs pop rdi
  40dccf:	addr32 gs je 0x40dd32
  40dcd3:	imul   esp,DWORD PTR [rbp+0x79],0x73
  40dcd7:	add    BYTE PTR [rax+0x685f6701],ah
  40dcdd:	(bad)  
  40dcde:	jae    0x40dd48
  40dce0:	pop    rdi
  40dce1:	je     0x40dd44
  40dce3:	(bad)  
  40dce4:	ins    BYTE PTR es:[rdi],dx
  40dce5:	gs pop rdi
  40dce7:	imul   ebp,DWORD PTR [rsi+0x73],0x747265
  40dcee:	add    BYTE PTR [rax],al
  40dcf0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40dcf1:	add    DWORD PTR [rdi+0x5f],esp
  40dcf4:	push   0x5f687361
  40dcf9:	je     0x40dd5c
  40dcfb:	(bad)  
  40dcfc:	ins    BYTE PTR es:[rdi],dx
  40dcfd:	gs pop rdi
  40dcff:	ins    BYTE PTR es:[rdi],dx
  40dd00:	outs   dx,DWORD PTR ds:[rsi]
  40dd01:	outs   dx,DWORD PTR ds:[rsi]
  40dd02:	imul   esi,DWORD PTR [rbp+0x70],0x0
  40dd06:	add    BYTE PTR [rax],al
  40dd08:	stos   BYTE PTR es:[rdi],al
  40dd09:	add    DWORD PTR [rdi+0x5f],esp
  40dd0c:	push   0x5f687361
  40dd11:	je     0x40dd74
  40dd13:	(bad)  
  40dd14:	ins    BYTE PTR es:[rdi],dx
  40dd15:	gs pop rdi
  40dd17:	outs   dx,BYTE PTR ds:[rsi]
  40dd18:	gs ja  0x40dd7a
  40dd1b:	data16 jne 0x40dd8a
  40dd1e:	ins    BYTE PTR es:[rdi],dx
  40dd1f:	add    BYTE PTR [rdx+0x685f6701],dh
  40dd25:	(bad)  
  40dd26:	jae    0x40dd90
  40dd28:	pop    rdi
  40dd29:	je     0x40dd8c
  40dd2b:	(bad)  
  40dd2c:	ins    BYTE PTR es:[rdi],dx
  40dd2d:	gs pop rdi
  40dd2f:	jne    0x40dd9f
  40dd31:	jb     0x40dd98
  40dd33:	data16 add BYTE PTR [rax],al
  40dd36:	add    BYTE PTR [rax],al
  40dd38:	rex.WR add r12b,BYTE PTR [rdi+0x5f]
  40dd3c:	ins    BYTE PTR es:[rdi],dx
  40dd3d:	imul   esi,DWORD PTR [rbx+0x74],0x6572665f
  40dd44:	add    BYTE PTR gs:[rax],al
  40dd47:	add    BYTE PTR [rcx+0x2],ah
  40dd4a:	addr32 pop rdi
  40dd4c:	ins    BYTE PTR es:[rdi],dx
  40dd4d:	imul   esi,DWORD PTR [rbx+0x74],0x726f735f
  40dd54:	je     0x40dd56
  40dd56:	add    BYTE PTR [rax],al
  40dd58:	nop
  40dd59:	add    ah,BYTE PTR [rdi+0x5f]
  40dd5c:	ins    DWORD PTR es:[rdi],dx
  40dd5d:	(bad)  
  40dd5e:	imul   ebp,DWORD PTR [rsi+0x5f],0x706f6f6c
  40dd65:	pop    rdi
  40dd66:	outs   dx,BYTE PTR ds:[rsi]
  40dd67:	gs ja  0x40dd6a
  40dd6a:	add    BYTE PTR [rax],al
  40dd6c:	xchg   ebx,eax
  40dd6d:	add    ah,BYTE PTR [rdi+0x5f]
  40dd70:	ins    DWORD PTR es:[rdi],dx
  40dd71:	(bad)  
  40dd72:	imul   ebp,DWORD PTR [rsi+0x5f],0x706f6f6c
  40dd79:	pop    rdi
  40dd7a:	jb     0x40ddf1
  40dd7c:	outs   dx,BYTE PTR ds:[rsi]
  40dd7d:	add    BYTE PTR [rax],al
  40dd7f:	add    BYTE PTR [rdx+rax*1+0x616d5f67],dl
  40dd86:	imul   ebp,DWORD PTR [rsi+0x5f],0x706f6f6c
  40dd8d:	pop    rdi
  40dd8e:	jne    0x40ddfe
  40dd90:	jb     0x40ddf7
  40dd92:	data16 add BYTE PTR [rax],al
  40dd95:	add    esp,DWORD PTR [rdi+0x5f]
  40dd98:	outs   dx,DWORD PTR ds:[rsi]
  40dd99:	jo     0x40de0f
  40dd9b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40dda2:	je     0x40de09
  40dda4:	js     0x40de1a
  40dda6:	pop    rdi
  40dda7:	(bad)  
  40dda8:	fs fs pop rdi
  40ddab:	addr32 jb 0x40de1d
  40ddae:	jne    0x40de20
  40ddb0:	add    BYTE PTR [rax],al
  40ddb2:	add    BYTE PTR [rax],al
  40ddb4:	add    DWORD PTR [rbx],eax
  40ddb6:	addr32 pop rdi
  40ddb8:	outs   dx,DWORD PTR ds:[rsi]
  40ddb9:	jo     0x40de2f
  40ddbb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40ddc2:	je     0x40de29
  40ddc4:	js     0x40de3a
  40ddc6:	pop    rdi
  40ddc7:	(bad)  
  40ddc8:	fs fs pop rdi
  40ddcb:	ins    DWORD PTR es:[rdi],dx
  40ddcc:	(bad)  
  40ddcd:	imul   ebp,DWORD PTR [rsi+0x5f],0x72746e65
  40ddd4:	imul   esp,DWORD PTR [rbp+0x73],0x67030200
  40dddb:	pop    rdi
  40dddc:	outs   dx,DWORD PTR ds:[rsi]
  40dddd:	jo     0x40de53
  40dddf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40dde6:	je     0x40de4d
  40dde8:	js     0x40de5e
  40ddea:	pop    rdi
  40ddeb:	data16 jb 0x40de53
  40ddee:	add    BYTE PTR gs:[rbx+rax*1],al
  40ddf2:	addr32 pop rdi
  40ddf4:	outs   dx,DWORD PTR ds:[rsi]
  40ddf5:	jo     0x40de6b
  40ddf7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40ddfe:	je     0x40de65
  40de00:	js     0x40de76
  40de02:	pop    rdi
  40de03:	addr32 gs je 0x40de66
  40de07:	push   0x706c65
  40de0c:	or     al,BYTE PTR [rbx]
  40de0e:	addr32 pop rdi
  40de10:	outs   dx,DWORD PTR ds:[rsi]
  40de11:	jo     0x40de87
  40de13:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40de1a:	je     0x40de81
  40de1c:	js     0x40de92
  40de1e:	pop    rdi
  40de1f:	outs   dx,BYTE PTR ds:[rsi]
  40de20:	gs ja  0x40de23
  40de23:	add    BYTE PTR [rbx],cl
  40de25:	add    esp,DWORD PTR [rdi+0x5f]
  40de28:	outs   dx,DWORD PTR ds:[rsi]
  40de29:	jo     0x40de9f
  40de2b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40de32:	je     0x40de99
  40de34:	js     0x40deaa
  40de36:	pop    rdi
  40de37:	jo     0x40de9a
  40de39:	jb     0x40deae
  40de3b:	add    BYTE PTR gs:[rax],al
  40de3e:	add    BYTE PTR [rax],al
  40de40:	or     eax,0x6f5f6703
  40de45:	jo     0x40debb
  40de47:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40de4e:	je     0x40deb5
  40de50:	js     0x40dec6
  40de52:	pop    rdi
  40de53:	jae    0x40deba
  40de55:	je     0x40deb6
  40de57:	fs gs jae 0x40debe
  40de5b:	jb     0x40dec6
  40de5d:	jo     0x40ded3
  40de5f:	imul   ebp,DWORD PTR [rdi+0x6e],0x30e0000
  40de66:	addr32 pop rdi
  40de68:	outs   dx,DWORD PTR ds:[rsi]
  40de69:	jo     0x40dedf
  40de6b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40de72:	je     0x40ded9
  40de74:	js     0x40deea
  40de76:	pop    rdi
  40de77:	jae    0x40dede
  40de79:	je     0x40deda
  40de7b:	push   0x5f706c65
  40de80:	outs   dx,BYTE PTR gs:[rsi]
  40de82:	(bad)  
  40de83:	(bad)  
  40de84:	ins    BYTE PTR es:[rdi],dx
  40de85:	gs add BYTE PTR fs:[rdi],cl
  40de89:	add    esp,DWORD PTR [rdi+0x5f]
  40de8c:	outs   dx,DWORD PTR ds:[rsi]
  40de8d:	jo     0x40df03
  40de8f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40de96:	je     0x40defd
  40de98:	js     0x40df0e
  40de9a:	pop    rdi
  40de9b:	jae    0x40df02
  40de9d:	je     0x40defe
  40de9f:	imul   esp,DWORD PTR [rdi+0x6e],0x5f65726f
  40dea6:	jne    0x40df16
  40dea8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40deac:	outs   dx,BYTE PTR ds:[rsi]
  40dead:	pop    rdi
  40deae:	outs   dx,DWORD PTR ds:[rsi]
  40deaf:	jo     0x40df25
  40deb1:	imul   ebp,DWORD PTR [rdi+0x6e],0x73
  40deb8:	adc    al,BYTE PTR [rbx]
  40deba:	addr32 pop rdi
  40debc:	outs   dx,DWORD PTR ds:[rsi]
  40debd:	jo     0x40df33
  40debf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40dec6:	je     0x40df2d
  40dec8:	js     0x40df3e
  40deca:	pop    rdi
  40decb:	jae    0x40df32
  40decd:	je     0x40df2e
  40decf:	jae    0x40df46
  40ded1:	ins    DWORD PTR es:[rdi],dx
  40ded2:	ins    DWORD PTR es:[rdi],dx
  40ded3:	(bad)  
  40ded4:	jb     0x40df4f
  40ded6:	add    BYTE PTR [rax],al
  40ded8:	(bad)  
  40ded9:	add    esp,DWORD PTR [rdi+0x5f]
  40dedc:	outs   dx,DWORD PTR ds:[rsi]
  40dedd:	jo     0x40df53
  40dedf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f72675f
  40dee6:	jne    0x40df58
  40dee8:	pop    rdi
  40dee9:	(bad)  
  40deea:	fs fs pop rdi
  40deed:	outs   dx,BYTE PTR gs:[rsi]
  40deef:	je     0x40df63
  40def1:	imul   esp,DWORD PTR [rbp+0x73],0x0
  40def8:	sbb    BYTE PTR [rbx],al
  40defa:	addr32 pop rdi
  40defc:	outs   dx,DWORD PTR ds:[rsi]
  40defd:	jo     0x40df73
  40deff:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f72675f
  40df06:	jne    0x40df78
  40df08:	pop    rdi
  40df09:	outs   dx,BYTE PTR ds:[rsi]
  40df0a:	gs ja  0x40df0d
  40df0d:	add    BYTE PTR [rax],al
  40df0f:	add    BYTE PTR [rip+0x6f5f6703],bl        # 0x6fa04618
  40df15:	jo     0x40df8b
  40df17:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f72675f
  40df1e:	jne    0x40df90
  40df20:	pop    rdi
  40df21:	jae    0x40df88
  40df23:	je     0x40df84
  40df25:	je     0x40df99
  40df27:	(bad)  
  40df28:	outs   dx,BYTE PTR ds:[rsi]
  40df29:	jae    0x40df97
  40df2b:	(bad)  
  40df2c:	je     0x40df97
  40df2e:	outs   dx,DWORD PTR ds:[rsi]
  40df2f:	outs   dx,BYTE PTR ds:[rsi]
  40df30:	pop    rdi
  40df31:	outs   dx,DWORD PTR fs:[rsi]
  40df33:	ins    DWORD PTR es:[rdi],dx
  40df34:	(bad)  
  40df35:	imul   ebp,DWORD PTR [rsi+0x0],0x5f670320
  40df3c:	jo     0x40df9f
  40df3e:	je     0x40dfa8
  40df40:	pop    rdi
  40df41:	addr32 gs je 0x40dfa4
  40df45:	(bad)  
  40df47:	jae    0x40dfae
  40df49:	outs   dx,BYTE PTR ds:[rsi]
  40df4a:	(bad)  
  40df4b:	ins    DWORD PTR es:[rdi],dx
  40df4c:	add    BYTE PTR gs:[rax],al
  40df4f:	add    BYTE PTR [rdi],ch
  40df51:	add    esp,DWORD PTR [rdi+0x5f]
  40df54:	jo     0x40dfc8
  40df56:	imul   ebp,DWORD PTR [rsi+0x74],0x30000000
  40df5d:	add    esp,DWORD PTR [rdi+0x5f]
  40df60:	jo     0x40dfd4
  40df62:	imul   ebp,DWORD PTR [rsi+0x74],0x727265
  40df69:	add    BYTE PTR [rax],al
  40df6b:	add    BYTE PTR [rcx],bh
  40df6d:	add    esp,DWORD PTR [rdi+0x5f]
  40df70:	jo     0x40dfe6
  40df72:	jb     0x40dfd3
  40df74:	(bad)  
  40df75:	jb     0x40dfe9
  40df77:	(bad)  
  40df78:	jns    0x40dfd9
  40df7a:	(bad)  
  40df7b:	fs add BYTE PTR fs:[rax],al
  40df7f:	add    BYTE PTR [rdi],bh
  40df81:	add    esp,DWORD PTR [rdi+0x5f]
  40df84:	jo     0x40dffa
  40df86:	jb     0x40dfe7
  40df88:	(bad)  
  40df89:	jb     0x40dffd
  40df8b:	(bad)  
  40df8c:	jns    0x40dfed
  40df8e:	outs   dx,BYTE PTR ds:[rsi]
  40df8f:	gs ja  0x40dff1
  40df92:	ja     0x40dffd
  40df94:	je     0x40dffe
  40df96:	pop    rdi
  40df97:	data16 jb 0x40dfff
  40df9a:	gs pop rdi
  40df9c:	data16 jne 0x40e00d
  40df9f:	movsxd eax,DWORD PTR [rax]
  40dfa1:	add    BYTE PTR [rax],al
  40dfa3:	add    BYTE PTR [rbx+0x3],cl
  40dfa6:	addr32 pop rdi
  40dfa8:	jo     0x40e01e
  40dfaa:	jb     0x40e00b
  40dfac:	(bad)  
  40dfad:	jb     0x40e021
  40dfaf:	(bad)  
  40dfb0:	jns    0x40e011
  40dfb2:	jne    0x40e022
  40dfb4:	jb     0x40e01b
  40dfb6:	data16 add ah,bh
  40dfb9:	add    esp,DWORD PTR [rdi+0x5f]
  40dfbc:	jae    0x40e023
  40dfbe:	je     0x40e01f
  40dfc0:	gs jb  0x40e035
  40dfc3:	outs   dx,DWORD PTR ds:[rsi]
  40dfc4:	jb     0x40dfc6
  40dfc6:	add    BYTE PTR [rax],al
  40dfc8:	add    eax,DWORD PTR [rdi+riz*2]
  40dfcb:	pop    rdi
  40dfcc:	jae    0x40e036
  40dfce:	gs ins BYTE PTR es:[rdi],dx
  40dfd0:	ins    BYTE PTR es:[rdi],dx
  40dfd1:	pop    rdi
  40dfd2:	jo     0x40e035
  40dfd4:	jb     0x40e049
  40dfd6:	gs pop rdi
  40dfd8:	(bad)  
  40dfd9:	jb     0x40e042
  40dfdb:	jbe    0x40dfdd
  40dfdd:	add    BYTE PTR [rax],al
  40dfdf:	add    BYTE PTR [rsi+0x4],ch
  40dfe2:	addr32 pop rdi
  40dfe4:	jae    0x40e05a
  40dfe6:	jb     0x40e047
  40dfe8:	gs jno 0x40e060
  40dfeb:	(bad)  
  40dfec:	ins    BYTE PTR es:[rdi],dx
  40dfed:	add    BYTE PTR [rax],al
  40dfef:	add    BYTE PTR [rdi+0x4],ch
  40dff2:	addr32 pop rdi
  40dff4:	jae    0x40e06a
  40dff6:	jb     0x40e057
  40dff8:	push   0x705f7361
  40dffd:	jb     0x40e064
  40dfff:	imul   di,WORD PTR [rax+0x0],0x7100
  40e005:	add    al,0x67
  40e007:	pop    rdi
  40e008:	jae    0x40e07e
  40e00a:	jb     0x40e06b
  40e00c:	push   0x687361
  40e011:	add    BYTE PTR [rax],al
  40e013:	add    BYTE PTR [rdx+0x4],bh
  40e016:	addr32 pop rdi
  40e018:	jae    0x40e08e
  40e01a:	jb     0x40e07f
  40e01c:	ins    DWORD PTR es:[rdi],dx
  40e01d:	jo     0x40e04f
  40e01f:	add    BYTE PTR [rdi+0x4],bh
  40e022:	addr32 pop rdi
  40e024:	jae    0x40e09a
  40e026:	jb     0x40e08c
  40e028:	jne    0x40e09a
  40e02a:	add    BYTE PTR [rax],al
  40e02c:	add    BYTE PTR [rdi+riz*2],0x5f
  40e030:	jae    0x40e0a6
  40e032:	jb     0x40e098
  40e034:	jne    0x40e0a6
  40e036:	pop    rdi
  40e037:	jo     0x40e0ab
  40e039:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40e040:	xchg   BYTE PTR [rdi+riz*2],al
  40e043:	pop    rdi
  40e044:	jae    0x40e0ba
  40e046:	jb     0x40e0b1
  40e048:	outs   dx,BYTE PTR ds:[rsi]
  40e049:	addr32 pop rdi
  40e04b:	(bad)  
  40e04c:	jo     0x40e0be
  40e04e:	outs   dx,BYTE PTR gs:[rsi]
  40e050:	add    BYTE PTR fs:[rax],al
  40e053:	add    BYTE PTR [rax+0x735f6704],cl
  40e059:	je     0x40e0cd
  40e05b:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  40e062:	outs   dx,BYTE PTR gs:[rsi]
  40e064:	fs pop rdi
  40e066:	ins    BYTE PTR es:[rdi],dx
  40e067:	outs   dx,BYTE PTR gs:[rsi]
  40e069:	add    BYTE PTR [rax],al
  40e06b:	add    BYTE PTR [rcx+0x735f6704],bl
  40e071:	je     0x40e0e5
  40e073:	imul   ebp,DWORD PTR [rsi+0x67],0x6572665f
  40e07a:	add    BYTE PTR gs:[rbp+0x735f6704],bl
  40e081:	je     0x40e0f5
  40e083:	imul   ebp,DWORD PTR [rsi+0x67],0x736e695f
  40e08a:	gs jb  0x40e101
  40e08d:	pop    rdi
  40e08e:	movsxd eax,DWORD PTR [rax]
  40e090:	movabs al,ds:0x6e697274735f6704
  40e099:	addr32 pop rdi
  40e09b:	outs   dx,BYTE PTR ds:[rsi]
  40e09c:	gs ja  0x40e09f
  40e09f:	add    BYTE PTR [rsp+rax*1+0x74735f67],dh
  40e0a6:	jb     0x40e116
  40e0a8:	fs jne 0x40e11b
  40e0ab:	add    BYTE PTR [rcx+0x765f6705],bl
  40e0b1:	(bad)  
  40e0b2:	jb     0x40e11d
  40e0b4:	(bad)  
  40e0b5:	outs   dx,BYTE PTR ds:[rsi]
  40e0b6:	je     0x40e117
  40e0b8:	(bad)  
  40e0b9:	jne    0x40e124
  40e0bb:	ins    BYTE PTR es:[rdi],dx
  40e0bc:	fs gs jb 0x40e11f
  40e0c0:	(bad)  
  40e0c1:	fs fs pop rdi
  40e0c4:	jbe    0x40e127
  40e0c6:	ins    BYTE PTR es:[rdi],dx
  40e0c7:	jne    0x40e12e
  40e0c9:	add    BYTE PTR [rax],al
  40e0cb:	add    BYTE PTR [rdx+0x765f6705],bl
  40e0d1:	(bad)  
  40e0d2:	jb     0x40e13d
  40e0d4:	(bad)  
  40e0d5:	outs   dx,BYTE PTR ds:[rsi]
  40e0d6:	je     0x40e137
  40e0d8:	(bad)  
  40e0d9:	jne    0x40e144
  40e0db:	ins    BYTE PTR es:[rdi],dx
  40e0dc:	fs gs jb 0x40e13f
  40e0e0:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  40e0e4:	jb     0x40e0e6
  40e0e6:	add    BYTE PTR [rax],al
  40e0e8:	pushf  
  40e0e9:	add    eax,0x61765f67
  40e0ee:	jb     0x40e159
  40e0f0:	(bad)  
  40e0f1:	outs   dx,BYTE PTR ds:[rsi]
  40e0f2:	je     0x40e153
  40e0f4:	(bad)  
  40e0f5:	jne    0x40e160
  40e0f7:	ins    BYTE PTR es:[rdi],dx
  40e0f8:	fs gs jb 0x40e15b
  40e0fc:	outs   dx,BYTE PTR gs:[rsi]
  40e0fe:	add    BYTE PTR fs:[rbp+0x765f6705],bl
  40e105:	(bad)  
  40e106:	jb     0x40e171
  40e108:	(bad)  
  40e109:	outs   dx,BYTE PTR ds:[rsi]
  40e10a:	je     0x40e16b
  40e10c:	(bad)  
  40e10d:	jne    0x40e178
  40e10f:	ins    BYTE PTR es:[rdi],dx
  40e110:	fs gs jb 0x40e173
  40e114:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  40e11b:	add    BYTE PTR [rdx+0x765f6705],bh
  40e121:	(bad)  
  40e122:	jb     0x40e18d
  40e124:	(bad)  
  40e125:	outs   dx,BYTE PTR ds:[rsi]
  40e126:	je     0x40e187
  40e128:	addr32 gs je 0x40e12c
  40e12c:	fiadd  DWORD PTR [rip+0x61765f67]        # 0x61b74099
  40e132:	jb     0x40e19d
  40e134:	(bad)  
  40e135:	outs   dx,BYTE PTR ds:[rsi]
  40e136:	je     0x40e197
  40e138:	imul   esi,DWORD PTR [rbx+0x5f],0x656a626f
  40e13f:	movsxd esi,DWORD PTR [rdi+rbx*2+0x70]
  40e143:	(bad)  
  40e144:	je     0x40e1ae
  40e146:	add    BYTE PTR [rax],al
  40e148:	fild   DWORD PTR [rip+0x61765f67]        # 0x61b740b5
  40e14e:	jb     0x40e1b9
  40e150:	(bad)  
  40e151:	outs   dx,BYTE PTR ds:[rsi]
  40e152:	je     0x40e1b3
  40e154:	imul   esi,DWORD PTR [rbx+0x5f],0x745f666f
  40e15b:	jns    0x40e1cd
  40e15d:	add    BYTE PTR gs:[rax],al
  40e160:	fiadd  WORD PTR [rip+0x61765f67]        # 0x61b740cd
  40e166:	jb     0x40e1d1
  40e168:	(bad)  
  40e169:	outs   dx,BYTE PTR ds:[rsi]
  40e16a:	je     0x40e1cb
  40e16c:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6572665f
  40e174:	add    BYTE PTR gs:[rax],al
  40e177:	add    al,ah
  40e179:	add    eax,0x61765f67
  40e17e:	jb     0x40e1e9
  40e180:	(bad)  
  40e181:	outs   dx,BYTE PTR ds:[rsi]
  40e182:	je     0x40e1e3
  40e184:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f6f6c5f
  40e18c:	jo     0x40e18e
  40e18e:	add    BYTE PTR [rax],al
  40e190:	in     al,0x5
  40e192:	addr32 pop rdi
  40e194:	jbe    0x40e1f7
  40e196:	jb     0x40e201
  40e198:	(bad)  
  40e199:	outs   dx,BYTE PTR ds:[rsi]
  40e19a:	je     0x40e1fb
  40e19c:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x78656e5f
  40e1a4:	je     0x40e205
  40e1a6:	jbe    0x40e209
  40e1a8:	ins    BYTE PTR es:[rdi],dx
  40e1a9:	jne    0x40e210
  40e1ab:	add    al,ch
  40e1ad:	add    eax,0x61765f67
  40e1b2:	jb     0x40e21d
  40e1b4:	(bad)  
  40e1b5:	outs   dx,BYTE PTR ds:[rsi]
  40e1b6:	je     0x40e217
  40e1b8:	outs   dx,BYTE PTR ds:[rsi]
  40e1b9:	gs ja  0x40e1bc
  40e1bc:	(bad)  
  40e1bd:	(bad)  
  40e1be:	addr32 pop rdi
  40e1c0:	jbe    0x40e223
  40e1c2:	jb     0x40e22d
  40e1c4:	(bad)  
  40e1c5:	outs   dx,BYTE PTR ds:[rsi]
  40e1c6:	je     0x40e227
  40e1c8:	jo     0x40e22b
  40e1ca:	jb     0x40e23f
  40e1cc:	add    BYTE PTR gs:[rax],al
  40e1cf:	add    BYTE PTR [rax],cl
  40e1d1:	(bad)  
  40e1d2:	addr32 pop rdi
  40e1d4:	jbe    0x40e237
  40e1d6:	jb     0x40e241
  40e1d8:	(bad)  
  40e1d9:	outs   dx,BYTE PTR ds:[rsi]
  40e1da:	je     0x40e23b
  40e1dc:	jo     0x40e23f
  40e1de:	jb     0x40e253
  40e1e0:	gs pop rdi
  40e1e2:	gs jb  0x40e257
  40e1e5:	outs   dx,DWORD PTR ds:[rsi]
  40e1e6:	jb     0x40e247
  40e1e8:	jo     0x40e25c
  40e1ea:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f635f
  40e1f1:	je     0x40e258
  40e1f3:	js     0x40e269
  40e1f5:	add    BYTE PTR [rax],al
  40e1f7:	add    BYTE PTR [rbx],cl
  40e1f9:	(bad)  
  40e1fa:	addr32 pop rdi
  40e1fc:	jbe    0x40e25f
  40e1fe:	jb     0x40e269
  40e200:	(bad)  
  40e201:	outs   dx,BYTE PTR ds:[rsi]
  40e202:	je     0x40e263
  40e204:	jo     0x40e278
  40e206:	imul   ebp,DWORD PTR [rsi+0x74],0xd000000
  40e20d:	(bad)  
  40e20e:	addr32 pop rdi
  40e210:	jbe    0x40e273
  40e212:	jb     0x40e27d
  40e214:	(bad)  
  40e215:	outs   dx,BYTE PTR ds:[rsi]
  40e216:	je     0x40e277
  40e218:	jb     0x40e27f
  40e21a:	data16 add BYTE PTR [rsi],cl
  40e21d:	(bad)  
  40e21e:	addr32 pop rdi
  40e220:	jbe    0x40e283
  40e222:	jb     0x40e28d
  40e224:	(bad)  
  40e225:	outs   dx,BYTE PTR ds:[rsi]
  40e226:	je     0x40e287
  40e228:	jb     0x40e28f
  40e22a:	pop    di
  40e22c:	jae    0x40e297
  40e22e:	outs   dx,BYTE PTR ds:[rsi]
  40e22f:	imul   eax,DWORD PTR [rax],0x0
  40e232:	add    BYTE PTR [rax],al
  40e234:	sbb    al,BYTE PTR [rsi]
  40e236:	addr32 pop rdi
  40e238:	jbe    0x40e29b
  40e23a:	jb     0x40e2a5
  40e23c:	(bad)  
  40e23d:	outs   dx,BYTE PTR ds:[rsi]
  40e23e:	je     0x40e29f
  40e240:	je     0x40e2bb
  40e242:	jo     0x40e2a9
  40e244:	pop    rdi
  40e245:	movsxd ebp,DWORD PTR [rax+0x65]
  40e248:	movsxd ebp,DWORD PTR [rbx+0x65]
  40e24b:	fs pop rdi
  40e24d:	add    BYTE PTR [rax],al
  40e24f:	add    BYTE PTR [rsi+rax*1],bl
  40e252:	addr32 pop rdi
  40e254:	jbe    0x40e2b7
  40e256:	jb     0x40e2c1
  40e258:	(bad)  
  40e259:	outs   dx,BYTE PTR ds:[rsi]
  40e25a:	je     0x40e2bb
  40e25c:	je     0x40e2d7
  40e25e:	jo     0x40e2c5
  40e260:	pop    rdi
  40e261:	fs jne 0x40e2d4
  40e264:	pop    rdi
  40e265:	jae    0x40e2db
  40e267:	jb     0x40e2d2
  40e269:	outs   dx,BYTE PTR ds:[rsi]
  40e26a:	add    BYTE PTR [eax],ah
  40e26d:	(bad)  
  40e26e:	addr32 pop rdi
  40e270:	jbe    0x40e2d3
  40e272:	jb     0x40e2dd
  40e274:	(bad)  
  40e275:	outs   dx,BYTE PTR ds:[rsi]
  40e276:	je     0x40e2d7
  40e278:	je     0x40e2f3
  40e27a:	jo     0x40e2e1
  40e27c:	pop    rdi
  40e27d:	data16 jb 0x40e2e5
  40e280:	add    BYTE PTR gs:[rax],al
  40e283:	add    BYTE PTR [rcx],ah
  40e285:	(bad)  
  40e286:	addr32 pop rdi
  40e288:	jbe    0x40e2eb
  40e28a:	jb     0x40e2f5
  40e28c:	(bad)  
  40e28d:	outs   dx,BYTE PTR ds:[rsi]
  40e28e:	je     0x40e2ef
  40e290:	je     0x40e30b
  40e292:	jo     0x40e2f9
  40e294:	pop    rdi
  40e295:	addr32 gs je 0x40e2f8
  40e299:	jae    0x40e30f
  40e29b:	jb     0x40e306
  40e29d:	outs   dx,BYTE PTR ds:[rsi]
  40e29e:	addr32 pop rdi
  40e2a0:	ins    BYTE PTR es:[rdi],dx
  40e2a1:	outs   dx,BYTE PTR gs:[rsi]
  40e2a3:	addr32 je 0x40e30e
  40e2a6:	add    BYTE PTR [rax],al
  40e2a8:	cmp    BYTE PTR [rsi],al
  40e2aa:	addr32 pop rdi
  40e2ac:	jbe    0x40e30f
  40e2ae:	jb     0x40e319
  40e2b0:	(bad)  
  40e2b1:	outs   dx,BYTE PTR ds:[rsi]
  40e2b2:	je     0x40e313
  40e2b4:	je     0x40e32f
  40e2b6:	jo     0x40e31d
  40e2b8:	pop    rdi
  40e2b9:	outs   dx,BYTE PTR ds:[rsi]
  40e2ba:	gs ja  0x40e2bd
  40e2bd:	add    BYTE PTR [rax],al
  40e2bf:	add    BYTE PTR [rsi],bh
  40e2c1:	(bad)  
  40e2c2:	addr32 pop rdi
  40e2c4:	jbe    0x40e327
  40e2c6:	jb     0x40e331
  40e2c8:	(bad)  
  40e2c9:	outs   dx,BYTE PTR ds:[rsi]
  40e2ca:	je     0x40e32b
  40e2cc:	je     0x40e347
  40e2ce:	jo     0x40e335
  40e2d0:	pop    rdi
  40e2d1:	jo     0x40e338
  40e2d3:	imul   ebx,DWORD PTR gs:[rdi+0x73],0x74
  40e2d8:	jb     0x40e343
  40e2da:	outs   dx,BYTE PTR ds:[rsi]
  40e2db:	add    BYTE PTR [eax],al
  40e2de:	add    BYTE PTR [rax],al
  40e2e0:	rex.X (bad) 
  40e2e2:	addr32 pop rdi
  40e2e4:	jbe    0x40e347
  40e2e6:	jb     0x40e351
  40e2e8:	(bad)  
  40e2e9:	outs   dx,BYTE PTR ds:[rsi]
  40e2ea:	je     0x40e34b
  40e2ec:	jne    0x40e35c
  40e2ee:	jb     0x40e355
  40e2f0:	data16 add BYTE PTR [rax],al
  40e2f3:	add    BYTE PTR [rbx+0x6f5f6700],bl
  40e2f9:	(bad)  
  40e2fa:	push   0x65
  40e2fc:	movsxd esi,DWORD PTR [rdi+rbx*2+0x75]
  40e300:	outs   dx,BYTE PTR ds:[rsi]
  40e301:	jb     0x40e368
  40e303:	data16 add BYTE PTR [rax],al
  40e306:	add    BYTE PTR [rax],al
  40e308:	sbb    eax,0x62696c00
  40e30d:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  40e314:	outs   dx,BYTE PTR ds:[rsi]
  40e315:	fs pop rdi
  40e317:	je     0x40e37e
  40e319:	js     0x40e38f
  40e31b:	outs   dx,DWORD PTR fs:[rsi]
  40e31d:	ins    DWORD PTR es:[rdi],dx
  40e31e:	(bad)  
  40e31f:	imul   ebp,DWORD PTR [rsi+0x5f],0x65646f63
  40e326:	jae    0x40e38d
  40e328:	je     0x40e32a
  40e32a:	add    BYTE PTR [rax],al
  40e32c:	(bad)  
  40e32d:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e331:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  40e338:	outs   dx,BYTE PTR ds:[rsi]
  40e339:	fs je  0x40e3a1
  40e33c:	js     0x40e3b2
  40e33e:	outs   dx,DWORD PTR fs:[rsi]
  40e340:	ins    DWORD PTR es:[rdi],dx
  40e341:	(bad)  
  40e342:	imul   ebp,DWORD PTR [rsi+0x0],0x26000000
  40e349:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e34d:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  40e354:	je     0x40e3ca
  40e356:	gs js  0x40e3cd
  40e359:	add    BYTE PTR [rax],al
  40e35b:	add    BYTE PTR [rcx+0x0],al
  40e35e:	ins    BYTE PTR es:[rdi],dx
  40e35f:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  40e366:	jae    0x40e3cd
  40e368:	je     0x40e3d6
  40e36a:	outs   dx,DWORD PTR ds:[rsi]
  40e36b:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e36e:	add    BYTE PTR gs:[rbp+0x0],al
  40e372:	ins    BYTE PTR es:[rdi],dx
  40e373:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  40e37a:	je     0x40e3e1
  40e37c:	js     0x40e3f2
  40e37e:	outs   dx,DWORD PTR fs:[rsi]
  40e380:	ins    DWORD PTR es:[rdi],dx
  40e381:	(bad)  
  40e382:	imul   ebp,DWORD PTR [rsi+0x0],0xd8000000
  40e389:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40e38d:	gs je  0x40e3f5
  40e390:	rex.XB jb 0x40e3fc
  40e393:	je     0x40e3fe
  40e395:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e398:	push   rbx
  40e399:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e39e:	outs   dx,BYTE PTR ds:[rsi]
  40e39f:	add    al,bh
  40e3a1:	add    BYTE PTR [rbp+0x6e],al
  40e3a4:	je     0x40e40b
  40e3a6:	jb     0x40e3eb
  40e3a8:	jb     0x40e413
  40e3aa:	je     0x40e415
  40e3ac:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e3af:	push   rbx
  40e3b0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e3b5:	outs   dx,BYTE PTR ds:[rsi]
  40e3b6:	add    BYTE PTR [rax],al
  40e3b8:	int    0x1
  40e3ba:	rex.RXB
  40e3bb:	gs je  0x40e401
  40e3be:	jne    0x40e432
  40e3c0:	jb     0x40e427
  40e3c2:	outs   dx,BYTE PTR ds:[rsi]
  40e3c3:	je     0x40e415
  40e3c5:	jb     0x40e436
  40e3c7:	movsxd esp,DWORD PTR [rbp+0x73]
  40e3ca:	jae    0x40e3cc
  40e3cc:	(bad)  
  40e3cd:	add    DWORD PTR [rdi+0x65],eax
  40e3d0:	je     0x40e415
  40e3d2:	jne    0x40e446
  40e3d4:	jb     0x40e43b
  40e3d6:	outs   dx,BYTE PTR ds:[rsi]
  40e3d7:	je     0x40e429
  40e3d9:	jb     0x40e44a
  40e3db:	movsxd esp,DWORD PTR [rbp+0x73]
  40e3de:	jae    0x40e429
  40e3e0:	fs add dl,dl
  40e3e3:	add    DWORD PTR [rdi+0x65],eax
  40e3e6:	je     0x40e42b
  40e3e8:	jne    0x40e45c
  40e3ea:	jb     0x40e451
  40e3ec:	outs   dx,BYTE PTR ds:[rsi]
  40e3ed:	je     0x40e443
  40e3ef:	push   0x64616572
  40e3f4:	rex.WB
  40e3f5:	add    BYTE PTR fs:[rax],al
  40e3f8:	adc    BYTE PTR [rdx],al
  40e3fa:	rex.RXB
  40e3fb:	gs je  0x40e44a
  40e3fe:	(bad)  
  40e3ff:	jae    0x40e475
  40e401:	rex.RB jb 0x40e476
  40e404:	outs   dx,DWORD PTR ds:[rsi]
  40e405:	jb     0x40e407
  40e407:	add    BYTE PTR [rbx+0x2],dh
  40e40a:	rex.RXB
  40e40b:	gs je  0x40e461
  40e40e:	je     0x40e471
  40e410:	jb     0x40e486
  40e412:	jne    0x40e484
  40e414:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40e416:	outs   dx,WORD PTR ds:[rsi]
  40e418:	add    BYTE PTR [r10+0x74654702],cl
  40e41f:	push   rbx
  40e420:	jns    0x40e495
  40e422:	je     0x40e489
  40e424:	ins    DWORD PTR es:[rdi],dx
  40e425:	push   rsp
  40e426:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40e42d:	ins    BYTE PTR es:[rdi],dx
  40e42e:	gs push rsp
  40e430:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40e437:	gs je  0x40e48e
  40e43a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40e441:	je     0x40e443
  40e443:	add    cl,bh
  40e445:	add    cl,BYTE PTR [rcx+0x6e]
  40e448:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40e450:	rex.XB jb 0x40e4bc
  40e453:	je     0x40e4be
  40e455:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e458:	push   rbx
  40e459:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e45e:	outs   dx,BYTE PTR ds:[rsi]
  40e45f:	add    BYTE PTR [rbx+0x3],cl
  40e462:	rex.WR
  40e463:	gs (bad) 
  40e465:	jbe    0x40e4cc
  40e467:	rex.XB jb 0x40e4d3
  40e46a:	je     0x40e4d5
  40e46c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e46f:	push   rbx
  40e470:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e475:	outs   dx,BYTE PTR ds:[rsi]
  40e476:	add    BYTE PTR [rax],al
  40e478:	mov    ebx,0x65755103
  40e47d:	jb     0x40e4f8
  40e47f:	push   rax
  40e480:	gs jb  0x40e4e9
  40e483:	outs   dx,DWORD PTR ds:[rsi]
  40e484:	jb     0x40e4f3
  40e486:	(bad)  
  40e487:	outs   dx,BYTE PTR ds:[rsi]
  40e488:	movsxd esp,DWORD PTR [rbp+0x43]
  40e48b:	outs   dx,DWORD PTR ds:[rsi]
  40e48c:	jne    0x40e4fc
  40e48e:	je     0x40e4f5
  40e490:	jb     0x40e492
  40e492:	add    DWORD PTR [rdx+rdx*2],eax
  40e495:	je     0x40e503
  40e497:	rex.B
  40e498:	fs fs rex.RX jne 0x40e50b
  40e49d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40e4a1:	outs   dx,BYTE PTR ds:[rsi]
  40e4a2:	push   rsp
  40e4a3:	(bad)  
  40e4a4:	(bad)  
  40e4a5:	ins    BYTE PTR es:[rdi],dx
  40e4a6:	add    BYTE PTR gs:[rdx],al
  40e4a9:	add    al,0x52
  40e4ab:	je     0x40e519
  40e4ad:	rex.XB (bad) 
  40e4af:	jo     0x40e525
  40e4b1:	jne    0x40e525
  40e4b3:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40e4b6:	outs   dx,BYTE PTR ds:[rsi]
  40e4b7:	je     0x40e51e
  40e4b9:	js     0x40e52f
  40e4bb:	add    BYTE PTR [rcx],cl
  40e4bd:	add    al,0x52
  40e4bf:	je     0x40e52d
  40e4c1:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40e4c3:	outs   dx,DWORD PTR ds:[rsi]
  40e4c4:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40e4c8:	jne    0x40e538
  40e4ca:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40e4ce:	outs   dx,BYTE PTR ds:[rsi]
  40e4cf:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40e4d1:	je     0x40e545
  40e4d3:	jns    0x40e4d5
  40e4d5:	add    BYTE PTR [rax],dl
  40e4d7:	add    al,0x52
  40e4d9:	je     0x40e547
  40e4db:	push   rsi
  40e4dc:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40e4e3:	outs   dx,BYTE PTR ds:[rsi]
  40e4e4:	ja     0x40e54f
  40e4e6:	outs   dx,BYTE PTR ds:[rsi]
  40e4e7:	add    BYTE PTR fs:[rax],al
  40e4ea:	lahf   
  40e4eb:	add    al,0x53
  40e4ed:	gs je  0x40e545
  40e4f0:	outs   dx,BYTE PTR ds:[rsi]
  40e4f1:	push   0x6c646e61
  40e4f6:	gs fs rex.RB js 0x40e55e
  40e4fb:	gs jo  0x40e572
  40e4fe:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40e505:	gs jb  0x40e508
  40e508:	lods   al,BYTE PTR ds:[rsi]
  40e509:	add    al,0x53
  40e50b:	ins    BYTE PTR es:[rdi],dx
  40e50c:	gs gs jo 0x40e510
  40e510:	mov    edx,0x72655404
  40e515:	ins    DWORD PTR es:[rdi],dx
  40e516:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40e51d:	outs   dx,DWORD PTR ds:[rsi]
  40e51e:	movsxd esp,DWORD PTR [rbp+0x73]
  40e521:	jae    0x40e523
  40e523:	add    cl,al
  40e525:	add    al,0x54
  40e527:	ins    BYTE PTR es:[rdi],dx
  40e528:	jae    0x40e571
  40e52a:	gs je  0x40e583
  40e52d:	(bad)  
  40e52e:	ins    BYTE PTR es:[rdi],dx
  40e52f:	jne    0x40e596
  40e531:	add    dh,cl
  40e533:	add    al,0x55
  40e535:	outs   dx,BYTE PTR ds:[rsi]
  40e536:	push   0x6c646e61
  40e53b:	gs fs rex.RB js 0x40e5a3
  40e540:	gs jo  0x40e5b7
  40e543:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40e54a:	gs jb  0x40e54d
  40e54d:	add    ah,ch
  40e54f:	add    al,0x56
  40e551:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40e558:	jb     0x40e5c9
  40e55a:	je     0x40e5c1
  40e55c:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40e560:	out    dx,al
  40e561:	add    al,0x56
  40e563:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40e56a:	jne    0x40e5d1
  40e56c:	jb     0x40e5e7
  40e56e:	add    BYTE PTR [rax],al
  40e570:	(bad)  
  40e571:	add    BYTE PTR [rdi+0x5f],bl
  40e574:	rex.XB pop r15
  40e576:	jae    0x40e5e8
  40e578:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40e57c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40e583:	ins    BYTE PTR es:[rdi],dx
  40e584:	gs jb  0x40e587
  40e587:	add    BYTE PTR [rsi+0x0],cl
  40e58a:	pop    rdi
  40e58b:	pop    rdi
  40e58c:	fs ins BYTE PTR es:[rdi],dx
  40e58e:	ins    BYTE PTR es:[rdi],dx
  40e58f:	outs   dx,DWORD PTR ds:[rsi]
  40e590:	outs   dx,BYTE PTR ds:[rsi]
  40e591:	gs js  0x40e5fd
  40e594:	je     0x40e596
  40e596:	push   rcx
  40e597:	add    BYTE PTR [rdi+0x5f],bl
  40e59a:	addr32 gs je 0x40e60b
  40e59e:	(bad)  
  40e59f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40e5a6:	push   rdx
  40e5a7:	add    BYTE PTR [rdi+0x5f],bl
  40e5aa:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40e5b1:	add    BYTE PTR [rbx+0x0],dl
  40e5b4:	pop    rdi
  40e5b5:	pop    rdi
  40e5b6:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40e5bd:	movsxd eax,DWORD PTR [rax]
  40e5bf:	add    BYTE PTR [rdx+0x0],bl
  40e5c2:	pop    rdi
  40e5c3:	pop    rdi
  40e5c4:	ins    BYTE PTR es:[rdi],dx
  40e5c5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40e5c8:	jbe    0x40e629
  40e5ca:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40e5d1:	add    BYTE PTR [rdi+0x5f],bl
  40e5d4:	jae    0x40e63b
  40e5d6:	je     0x40e637
  40e5d8:	(bad)  
  40e5d9:	jo     0x40e64b
  40e5db:	pop    rdi
  40e5dc:	je     0x40e657
  40e5de:	jo     0x40e645
  40e5e0:	add    BYTE PTR [rax],al
  40e5e2:	(bad)  
  40e5e3:	add    BYTE PTR [rdi+0x5f],bl
  40e5e6:	jae    0x40e64d
  40e5e8:	je     0x40e65f
  40e5ea:	jae    0x40e651
  40e5ec:	jb     0x40e65b
  40e5ee:	(bad)  
  40e5ef:	je     0x40e659
  40e5f1:	gs jb  0x40e666
  40e5f4:	add    BYTE PTR [rax],al
  40e5f6:	jno    0x40e5f8
  40e5f8:	pop    rdi
  40e5f9:	(bad)  
  40e5fa:	movsxd ebp,DWORD PTR [rbp+0x64]
  40e5fd:	ins    BYTE PTR es:[rdi],dx
  40e5fe:	outs   dx,BYTE PTR ds:[rsi]
  40e5ff:	add    BYTE PTR [rax+0x0],bh
  40e602:	pop    rdi
  40e603:	(bad)  
  40e604:	ins    DWORD PTR es:[rdi],dx
  40e605:	jae    0x40e66e
  40e607:	pop    rdi
  40e608:	gs js  0x40e674
  40e60b:	je     0x40e60d
  40e60d:	add    BYTE PTR [rdx+0x65635f00],cl
  40e613:	js     0x40e67e
  40e615:	je     0x40e617
  40e617:	add    dl,bl
  40e619:	add    BYTE PTR [rdi+0x66],bl
  40e61c:	ins    DWORD PTR es:[rdi],dx
  40e61d:	outs   dx,DWORD PTR ds:[rsi]
  40e61e:	fs add BYTE PTR gs:[rax],al
  40e622:	sbb    al,BYTE PTR [rcx]
  40e624:	pop    rdi
  40e625:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40e62c:	ins    DWORD PTR es:[rdi],dx
  40e62d:	add    BYTE PTR [rax+0x6f6c5f01],al
  40e633:	movsxd ebp,DWORD PTR [rbx+0x0]
  40e636:	and    eax,0x6e6f5f02
  40e63b:	gs js  0x40e6a7
  40e63e:	je     0x40e640
  40e640:	(bad)
  40e644:	outs   dx,BYTE PTR ds:[rsi]
  40e645:	ins    BYTE PTR es:[rdi],dx
  40e646:	outs   dx,DWORD PTR ds:[rsi]
  40e647:	movsxd ebp,DWORD PTR [rbx+0x0]
  40e64a:	jg     0x40e64f
  40e64c:	(bad)  
  40e64d:	(bad)  
  40e64e:	outs   dx,DWORD PTR ds:[rsi]
  40e64f:	jb     0x40e6c5
  40e651:	add    BYTE PTR [rax+0x6c616303],dl
  40e657:	ins    BYTE PTR es:[rdi],dx
  40e658:	outs   dx,DWORD PTR ds:[rsi]
  40e659:	movsxd eax,DWORD PTR [rax]
  40e65b:	add    BYTE PTR [rbp+0x69786503],bl
  40e661:	je     0x40e663
  40e663:	add    BYTE PTR [rax+0x72706603],dh
  40e669:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40e670:	data16 jb 0x40e6d8
  40e673:	add    BYTE PTR gs:[rax],al
  40e676:	ret    0x6603
  40e679:	ja     0x40e6ed
  40e67b:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40e683:	(bad)  
  40e684:	ins    BYTE PTR es:[rdi],dx
  40e685:	ins    BYTE PTR es:[rdi],dx
  40e686:	outs   dx,DWORD PTR ds:[rsi]
  40e687:	movsxd eax,DWORD PTR [rax]
  40e689:	add    al,bh
  40e68b:	add    ebp,DWORD PTR [rbp+0x65]
  40e68e:	ins    DWORD PTR es:[rdi],dx
  40e68f:	movsxd esi,DWORD PTR [rax+0x79]
  40e692:	add    BYTE PTR [rax],al
  40e694:	(bad)  
  40e695:	add    al,0x73
  40e697:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40e69e:	sub    eax,DWORD PTR [rbx+rsi*2]
  40e6a1:	je     0x40e715
  40e6a3:	ins    BYTE PTR es:[rdi],dx
  40e6a4:	outs   dx,BYTE PTR gs:[rsi]
  40e6a6:	add    BYTE PTR [rax],al
  40e6a8:	cs add al,0x73
  40e6ab:	je     0x40e71f
  40e6ad:	outs   dx,BYTE PTR ds:[rsi]
  40e6ae:	movsxd ebp,DWORD PTR [rbp+0x70]
  40e6b1:	add    BYTE PTR [rdx],dh
  40e6b3:	add    al,0x73
  40e6b5:	je     0x40e729
  40e6b7:	jb     0x40e71c
  40e6b9:	push   0x4380072
  40e6be:	jae    0x40e734
  40e6c0:	jb     0x40e736
  40e6c2:	outs   dx,DWORD PTR ds:[rsi]
  40e6c3:	ins    BYTE PTR es:[rdi],dx
  40e6c4:	add    BYTE PTR [rax],al
  40e6c6:	rex.WRX add al,0x76
  40e6c9:	data16 jo 0x40e73e
  40e6cc:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40e6d3:	add    BYTE PTR [rax],al
  40e6d5:	rol    BYTE PTR [rax],1
  40e6d7:	add    BYTE PTR [rax],al
  40e6d9:	rol    BYTE PTR [rax],1
  40e6db:	add    BYTE PTR [rax],al
  40e6dd:	rol    BYTE PTR [rax],1
  40e6df:	add    BYTE PTR [rax],al
  40e6e1:	rol    BYTE PTR [rax],1
  40e6e3:	add    BYTE PTR [rax],al
  40e6e5:	rol    BYTE PTR [rax],1
  40e6e7:	add    BYTE PTR [rax],al
  40e6e9:	rol    BYTE PTR [rax],1
  40e6eb:	add    BYTE PTR [rax],al
  40e6ed:	rol    BYTE PTR [rax],1
  40e6ef:	add    BYTE PTR [rax],al
  40e6f1:	rol    BYTE PTR [rax],1
  40e6f3:	add    BYTE PTR [rax],al
  40e6f5:	rol    BYTE PTR [rax],1
  40e6f7:	add    BYTE PTR [rax],al
  40e6f9:	rol    BYTE PTR [rax],1
  40e6fb:	add    BYTE PTR [rax],al
  40e6fd:	rol    BYTE PTR [rax],1
  40e6ff:	add    BYTE PTR [rax],al
  40e701:	rol    BYTE PTR [rax],1
  40e703:	add    BYTE PTR [rax],al
  40e705:	rol    BYTE PTR [rax],1
  40e707:	add    BYTE PTR [rax],al
  40e709:	rol    BYTE PTR [rax],1
  40e70b:	add    BYTE PTR [rax],al
  40e70d:	rol    BYTE PTR [rax],1
  40e70f:	add    BYTE PTR [rax],al
  40e711:	rol    BYTE PTR [rax],1
  40e713:	add    BYTE PTR [rax],al
  40e715:	rol    BYTE PTR [rax],1
  40e717:	add    BYTE PTR [rax],al
  40e719:	rol    BYTE PTR [rax],1
  40e71b:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e71f:	imul   ebp,DWORD PTR [edi+0x2d],0x2d302e32
  40e727:	xor    BYTE PTR [rsi],ch
  40e729:	fs ins BYTE PTR es:[rdi],dx
  40e72b:	ins    BYTE PTR es:[rdi],dx
  40e72c:	add    BYTE PTR [rax],al
  40e72e:	add    BYTE PTR [rax],al
  40e730:	adc    al,0xd0
  40e732:	add    BYTE PTR [rax],al
  40e734:	adc    al,0xd0
  40e736:	add    BYTE PTR [rax],al
  40e738:	adc    al,0xd0
  40e73a:	add    BYTE PTR [rax],al
  40e73c:	adc    al,0xd0
  40e73e:	add    BYTE PTR [rax],al
  40e740:	adc    al,0xd0
  40e742:	add    BYTE PTR [rax],al
  40e744:	adc    al,0xd0
  40e746:	add    BYTE PTR [rax],al
  40e748:	adc    al,0xd0
  40e74a:	add    BYTE PTR [rax],al
  40e74c:	adc    al,0xd0
  40e74e:	add    BYTE PTR [rax],al
  40e750:	adc    al,0xd0
  40e752:	add    BYTE PTR [rax],al
  40e754:	adc    al,0xd0
  40e756:	add    BYTE PTR [rax],al
  40e758:	adc    al,0xd0
  40e75a:	add    BYTE PTR [rax],al
  40e75c:	adc    al,0xd0
  40e75e:	add    BYTE PTR [rax],al
  40e760:	adc    al,0xd0
  40e762:	add    BYTE PTR [rax],al
  40e764:	adc    al,0xd0
  40e766:	add    BYTE PTR [rax],al
  40e768:	adc    al,0xd0
  40e76a:	add    BYTE PTR [rax],al
  40e76c:	adc    al,0xd0
  40e76e:	add    BYTE PTR [rax],al
  40e770:	adc    al,0xd0
  40e772:	add    BYTE PTR [rax],al
  40e774:	adc    al,0xd0
  40e776:	add    BYTE PTR [rax],al
  40e778:	adc    al,0xd0
  40e77a:	add    BYTE PTR [rax],al
  40e77c:	adc    al,0xd0
  40e77e:	add    BYTE PTR [rax],al
  40e780:	adc    al,0xd0
  40e782:	add    BYTE PTR [rax],al
  40e784:	adc    al,0xd0
  40e786:	add    BYTE PTR [rax],al
  40e788:	adc    al,0xd0
  40e78a:	add    BYTE PTR [rax],al
  40e78c:	adc    al,0xd0
  40e78e:	add    BYTE PTR [rax],al
  40e790:	adc    al,0xd0
  40e792:	add    BYTE PTR [rax],al
  40e794:	adc    al,0xd0
  40e796:	add    BYTE PTR [rax],al
  40e798:	adc    al,0xd0
  40e79a:	add    BYTE PTR [rax],al
  40e79c:	adc    al,0xd0
  40e79e:	add    BYTE PTR [rax],al
  40e7a0:	adc    al,0xd0
  40e7a2:	add    BYTE PTR [rax],al
  40e7a4:	adc    al,0xd0
  40e7a6:	add    BYTE PTR [rax],al
  40e7a8:	adc    al,0xd0
  40e7aa:	add    BYTE PTR [rax],al
  40e7ac:	adc    al,0xd0
  40e7ae:	add    BYTE PTR [rax],al
  40e7b0:	adc    al,0xd0
  40e7b2:	add    BYTE PTR [rax],al
  40e7b4:	adc    al,0xd0
  40e7b6:	add    BYTE PTR [rax],al
  40e7b8:	adc    al,0xd0
  40e7ba:	add    BYTE PTR [rax],al
  40e7bc:	adc    al,0xd0
  40e7be:	add    BYTE PTR [rax],al
  40e7c0:	adc    al,0xd0
  40e7c2:	add    BYTE PTR [rax],al
  40e7c4:	adc    al,0xd0
  40e7c6:	add    BYTE PTR [rax],al
  40e7c8:	adc    al,0xd0
  40e7ca:	add    BYTE PTR [rax],al
  40e7cc:	adc    al,0xd0
  40e7ce:	add    BYTE PTR [rax],al
  40e7d0:	adc    al,0xd0
  40e7d2:	add    BYTE PTR [rax],al
  40e7d4:	adc    al,0xd0
  40e7d6:	add    BYTE PTR [rax],al
  40e7d8:	adc    al,0xd0
  40e7da:	add    BYTE PTR [rax],al
  40e7dc:	adc    al,0xd0
  40e7de:	add    BYTE PTR [rax],al
  40e7e0:	adc    al,0xd0
  40e7e2:	add    BYTE PTR [rax],al
  40e7e4:	adc    al,0xd0
  40e7e6:	add    BYTE PTR [rax],al
  40e7e8:	adc    al,0xd0
  40e7ea:	add    BYTE PTR [rax],al
  40e7ec:	adc    al,0xd0
  40e7ee:	add    BYTE PTR [rax],al
  40e7f0:	adc    al,0xd0
  40e7f2:	add    BYTE PTR [rax],al
  40e7f4:	adc    al,0xd0
  40e7f6:	add    BYTE PTR [rax],al
  40e7f8:	adc    al,0xd0
  40e7fa:	add    BYTE PTR [rax],al
  40e7fc:	adc    al,0xd0
  40e7fe:	add    BYTE PTR [rax],al
  40e800:	adc    al,0xd0
  40e802:	add    BYTE PTR [rax],al
  40e804:	adc    al,0xd0
  40e806:	add    BYTE PTR [rax],al
  40e808:	adc    al,0xd0
  40e80a:	add    BYTE PTR [rax],al
  40e80c:	adc    al,0xd0
  40e80e:	add    BYTE PTR [rax],al
  40e810:	adc    al,0xd0
  40e812:	add    BYTE PTR [rax],al
  40e814:	adc    al,0xd0
  40e816:	add    BYTE PTR [rax],al
  40e818:	adc    al,0xd0
  40e81a:	add    BYTE PTR [rax],al
  40e81c:	adc    al,0xd0
  40e81e:	add    BYTE PTR [rax],al
  40e820:	adc    al,0xd0
  40e822:	add    BYTE PTR [rax],al
  40e824:	adc    al,0xd0
  40e826:	add    BYTE PTR [rax],al
  40e828:	adc    al,0xd0
  40e82a:	add    BYTE PTR [rax],al
  40e82c:	adc    al,0xd0
  40e82e:	add    BYTE PTR [rax],al
  40e830:	adc    al,0xd0
  40e832:	add    BYTE PTR [rax],al
  40e834:	adc    al,0xd0
  40e836:	add    BYTE PTR [rax],al
  40e838:	adc    al,0xd0
  40e83a:	add    BYTE PTR [rax],al
  40e83c:	adc    al,0xd0
  40e83e:	add    BYTE PTR [rax],al
  40e840:	adc    al,0xd0
  40e842:	add    BYTE PTR [rax],al
  40e844:	adc    al,0xd0
  40e846:	add    BYTE PTR [rax],al
  40e848:	adc    al,0xd0
  40e84a:	add    BYTE PTR [rax],al
  40e84c:	ins    BYTE PTR es:[rdi],dx
  40e84d:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  40e854:	xor    ch,BYTE PTR [rsi]
  40e856:	xor    BYTE PTR [rip+0x6c642e30],ch        # 0x6ca5168c
  40e85c:	ins    BYTE PTR es:[rdi],dx
  40e85d:	add    BYTE PTR [rax],al
  40e85f:	add    BYTE PTR [rax],ch
  40e861:	rol    BYTE PTR [rax],1
  40e863:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e867:	outs   dx,DWORD PTR ds:[esi]
  40e869:	(bad)  
  40e86a:	push   0x65
  40e86c:	movsxd esi,DWORD PTR [rbp+rbp*1+0x32]
  40e870:	xor    BYTE PTR cs:[rip+0x6c642e30],ch        # 0x6ca516a7
  40e877:	ins    BYTE PTR es:[rdi],dx
  40e878:	add    BYTE PTR [rax],al
  40e87a:	add    BYTE PTR [rax],al
  40e87c:	cmp    al,0xd0
  40e87e:	add    BYTE PTR [rax],al
  40e880:	cmp    al,0xd0
  40e882:	add    BYTE PTR [rax],al
  40e884:	cmp    al,0xd0
  40e886:	add    BYTE PTR [rax],al
  40e888:	cmp    al,0xd0
  40e88a:	add    BYTE PTR [rax],al
  40e88c:	cmp    al,0xd0
  40e88e:	add    BYTE PTR [rax],al
  40e890:	ins    BYTE PTR es:[rdi],dx
  40e891:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  40e898:	cmp    BYTE PTR [rsi],ch
  40e89a:	fs ins BYTE PTR es:[rdi],dx
  40e89c:	ins    BYTE PTR es:[rdi],dx
  40e89d:	add    BYTE PTR [rax],al
  40e89f:	add    BYTE PTR [rax-0x30],dl
  40e8a2:	add    BYTE PTR [rax],al
  40e8a4:	push   rax
  40e8a5:	rol    BYTE PTR [rax],1
  40e8a7:	add    BYTE PTR [rax-0x30],dl
  40e8aa:	add    BYTE PTR [rax],al
  40e8ac:	push   rax
  40e8ad:	rol    BYTE PTR [rax],1
  40e8af:	add    BYTE PTR [rax-0x30],dl
  40e8b2:	add    BYTE PTR [rax],al
  40e8b4:	push   rax
  40e8b5:	rol    BYTE PTR [rax],1
  40e8b7:	add    BYTE PTR [rax-0x30],dl
  40e8ba:	add    BYTE PTR [rax],al
  40e8bc:	push   rax
  40e8bd:	rol    BYTE PTR [rax],1
  40e8bf:	add    BYTE PTR [rax-0x30],dl
  40e8c2:	add    BYTE PTR [rax],al
  40e8c4:	push   rax
  40e8c5:	rol    BYTE PTR [rax],1
  40e8c7:	add    BYTE PTR [rax-0x30],dl
  40e8ca:	add    BYTE PTR [rax],al
  40e8cc:	push   rax
  40e8cd:	rol    BYTE PTR [rax],1
  40e8cf:	add    BYTE PTR [rax-0x30],dl
  40e8d2:	add    BYTE PTR [rax],al
  40e8d4:	push   rax
  40e8d5:	rol    BYTE PTR [rax],1
  40e8d7:	add    BYTE PTR [rax-0x30],dl
  40e8da:	add    BYTE PTR [rax],al
  40e8dc:	push   rax
  40e8dd:	rol    BYTE PTR [rax],1
  40e8df:	add    BYTE PTR [rax-0x30],dl
  40e8e2:	add    BYTE PTR [rax],al
  40e8e4:	push   rax
  40e8e5:	rol    BYTE PTR [rax],1
  40e8e7:	add    BYTE PTR [rax-0x30],dl
  40e8ea:	add    BYTE PTR [rax],al
  40e8ec:	push   rax
  40e8ed:	rol    BYTE PTR [rax],1
  40e8ef:	add    BYTE PTR [rax-0x30],dl
  40e8f2:	add    BYTE PTR [rax],al
  40e8f4:	push   rax
  40e8f5:	rol    BYTE PTR [rax],1
  40e8f7:	add    BYTE PTR [rax-0x30],dl
  40e8fa:	add    BYTE PTR [rax],al
  40e8fc:	rex.WXB
  40e8fd:	rex.RB push r10
  40e8ff:	rex.WRX
  40e900:	rex.RB
  40e901:	xor    r14,QWORD PTR [rdx]
  40e904:	cs fs ins BYTE PTR es:[rdi],dx
  40e907:	ins    BYTE PTR es:[rdi],dx
  40e908:	add    BYTE PTR [rax],al
  40e90a:	add    BYTE PTR [rax],al
  40e90c:	rol    BYTE PTR fs:[rax],1
  40e90f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e913:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e917:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e91b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e91f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e923:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e927:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e92b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e92f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e933:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e937:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e93b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e93f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e943:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e947:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e94b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e94f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e953:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e957:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e95b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e95f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e963:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e967:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e96b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e96f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e973:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e977:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e97b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e97f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40e983:	add    BYTE PTR [rbp+0x73],ch
  40e986:	jbe    0x40e9eb
  40e988:	jb     0x40e9fe
  40e98a:	cs fs ins BYTE PTR es:[rdi],dx
  40e98d:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040f000 <.CRT>:
	...
  40f008:	(bad)  
  40f009:	adc    DWORD PTR [rax+0x0],eax
	...
  40f020:	adc    BYTE PTR [rax],dl
  40f022:	add    BYTE PTR [rax],al
  40f025:	add    BYTE PTR [rax],al
  40f027:	add    BYTE PTR [rax],dl
  40f029:	xor    eax,0x40
	...
  40f03e:	add    BYTE PTR [rax],al
  40f040:	rex (bad) 
  40f042:	add    BYTE PTR [rax],al
  40f045:	add    BYTE PTR [rax],al
  40f047:	add    BYTE PTR [rax],dl
  40f049:	(bad)  
  40f04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000410000 <.tls>:
	...
  410020:	add    BYTE PTR [rax],al
  410022:	add    BYTE PTR [r8],al
  410025:	add    BYTE PTR [rax],al
  410027:	add    BYTE PTR [rax+0x0],ah
  41002a:	add    BYTE PTR [r8],al
  41002d:	add    BYTE PTR [rax],al
  41002f:	add    ah,bl
  410031:	mov    BYTE PTR [rax+0x0],0x0
  410035:	add    BYTE PTR [rax],al
  410037:	add    BYTE PTR [rax-0x10],al
  41003a:	add    BYTE PTR [rax],al
	...
