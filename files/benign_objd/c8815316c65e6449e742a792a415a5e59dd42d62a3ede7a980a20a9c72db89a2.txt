
c8815316c65e6449e742a792a415a5e59dd42d62a3ede7a980a20a9c72db89a2.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x18],r8
   14000100d:	mov    QWORD PTR [rsp+0x20],r9
   140001012:	push   rbx
   140001013:	push   rsi
   140001014:	push   rdi
   140001015:	sub    rsp,0x20
   140001019:	xor    edi,edi
   14000101b:	lea    rax,[rdx-0x1]
   14000101f:	cmp    rax,0x7ffffffe
   140001025:	mov    rsi,rcx
   140001028:	mov    ecx,0x80070057
   14000102d:	cmova  edi,ecx
   140001030:	test   edi,edi
   140001032:	js     0x140001069
   140001034:	lea    rbx,[rdx-0x1]
   140001038:	mov    rcx,rsi
   14000103b:	mov    rdx,rbx
   14000103e:	lea    r9,[rsp+0x58]
   140001043:	xor    edi,edi
   140001045:	call   QWORD PTR [rip+0x749d]        # 0x1400084e8
   14000104b:	test   eax,eax
   14000104d:	js     0x14000105e
   14000104f:	cdqe   
   140001051:	cmp    rax,rbx
   140001054:	ja     0x14000105e
   140001056:	jne    0x140001071
   140001058:	mov    BYTE PTR [rbx+rsi*1],dil
   14000105c:	jmp    0x140001071
   14000105e:	mov    BYTE PTR [rbx+rsi*1],dil
   140001062:	mov    edi,0x8007007a
   140001067:	jmp    0x140001071
   140001069:	test   rdx,rdx
   14000106c:	je     0x140001071
   14000106e:	mov    BYTE PTR [rsi],0x0
   140001071:	mov    eax,edi
   140001073:	add    rsp,0x20
   140001077:	pop    rdi
   140001078:	pop    rsi
   140001079:	pop    rbx
   14000107a:	ret    
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	int3   
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	rex push rbx
   140001092:	sub    rsp,0x20
   140001096:	lea    rax,[rip+0x7aeb]        # 0x140008b88
   14000109d:	mov    rbx,rcx
   1400010a0:	mov    QWORD PTR [rcx],rax
   1400010a3:	test   dl,0x1
   1400010a6:	je     0x1400010ae
   1400010a8:	call   QWORD PTR [rip+0x7362]        # 0x140008410
   1400010ae:	mov    rax,rbx
   1400010b1:	add    rsp,0x20
   1400010b5:	pop    rbx
   1400010b6:	ret    
   1400010b7:	int3   
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	xor    eax,eax
   1400010c2:	ret    
   1400010c3:	int3   
   1400010c4:	int3   
   1400010c5:	int3   
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	or     rax,0xffffffffffffffff
   1400010d4:	ret    
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	int3   
   1400010dd:	int3   
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400010e5:	push   rdi
   1400010e6:	sub    rsp,0x20
   1400010ea:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   1400010ef:	lea    rax,[rip+0x7a62]        # 0x140008b58
   1400010f6:	mov    QWORD PTR [rcx],rax
   1400010f9:	mov    edi,edx
   1400010fb:	mov    rbx,rcx
   1400010fe:	je     0x14000111a
   140001100:	mov    ecx,DWORD PTR [rip+0xbf9a]        # 0x14000d0a0
   140001106:	lea    rdx,[rip+0x7513]        # 0x140008620
   14000110d:	call   0x140007278
   140001112:	mov    rcx,rbx
   140001115:	call   0x1400012e0
   14000111a:	lea    rax,[rip+0x7a67]        # 0x140008b88
   140001121:	mov    QWORD PTR [rbx],rax
   140001124:	test   dil,0x1
   140001128:	je     0x140001133
   14000112a:	mov    rcx,rbx
   14000112d:	call   QWORD PTR [rip+0x72dd]        # 0x140008410
   140001133:	mov    rax,rbx
   140001136:	mov    rbx,QWORD PTR [rsp+0x30]
   14000113b:	add    rsp,0x20
   14000113f:	pop    rdi
   140001140:	ret    
   140001141:	int3   
   140001142:	int3   
   140001143:	int3   
   140001144:	int3   
   140001145:	int3   
   140001146:	int3   
   140001147:	int3   
   140001148:	mov    r11,rsp
   14000114b:	mov    QWORD PTR [r11+0x8],rbx
   14000114f:	mov    QWORD PTR [r11+0x10],rsi
   140001153:	push   rdi
   140001154:	sub    rsp,0x40
   140001158:	and    QWORD PTR [r11-0x18],0x0
   14000115d:	mov    edi,r8d
   140001160:	mov    eax,DWORD PTR [rsp+0x70]
   140001164:	mov    rsi,rdx
   140001167:	mov    DWORD PTR [rsp+0x28],eax
   14000116b:	mov    rbx,rcx
   14000116e:	mov    DWORD PTR [r11-0x28],r9d
   140001172:	mov    edx,edi
   140001174:	xor    r9d,r9d
   140001177:	mov    rcx,rsi
   14000117a:	lea    r8d,[r9+0x1]
   14000117e:	call   QWORD PTR [rip+0x6fac]        # 0x140008130
   140001184:	mov    QWORD PTR [rbx+0x8],rax
   140001188:	cmp    rax,0xffffffffffffffff
   14000118c:	jne    0x1400011cd
   14000118e:	mov    ecx,DWORD PTR [rip+0xbf0c]        # 0x14000d0a0
   140001194:	lea    rdx,[rip+0x7505]        # 0x1400086a0
   14000119b:	mov    r9d,edi
   14000119e:	mov    DWORD PTR [rsp+0x20],0x1
   1400011a6:	mov    r8,rsi
   1400011a9:	call   0x140007278
   1400011ae:	call   QWORD PTR [rip+0x6ea4]        # 0x140008058
   1400011b4:	mov    ecx,DWORD PTR [rip+0xbee6]        # 0x14000d0a0
   1400011ba:	lea    rdx,[rip+0x7537]        # 0x1400086f8
   1400011c1:	mov    r8d,eax
   1400011c4:	call   0x140007278
   1400011c9:	xor    eax,eax
   1400011cb:	jmp    0x1400011d2
   1400011cd:	mov    eax,0x1
   1400011d2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400011d7:	mov    rsi,QWORD PTR [rsp+0x58]
   1400011dc:	add    rsp,0x40
   1400011e0:	pop    rdi
   1400011e1:	ret    
   1400011e2:	int3   
   1400011e3:	int3   
   1400011e4:	int3   
   1400011e5:	int3   
   1400011e6:	int3   
   1400011e7:	int3   
   1400011e8:	int3   
   1400011e9:	int3   
   1400011ea:	int3   
   1400011eb:	int3   
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	sub    rsp,0x38
   1400011f4:	mov    rcx,QWORD PTR [rcx+0x8]
   1400011f8:	lea    r9,[rsp+0x40]
   1400011fd:	and    QWORD PTR [rsp+0x20],0x0
   140001203:	call   QWORD PTR [rip+0x6f37]        # 0x140008140
   140001209:	test   eax,eax
   14000120b:	jne    0x14000122d
   14000120d:	call   QWORD PTR [rip+0x6e45]        # 0x140008058
   140001213:	mov    ecx,DWORD PTR [rip+0xbe87]        # 0x14000d0a0
   140001219:	lea    rdx,[rip+0x7510]        # 0x140008730
   140001220:	mov    r8d,eax
   140001223:	call   0x140007278
   140001228:	or     eax,0xffffffff
   14000122b:	jmp    0x140001231
   14000122d:	mov    eax,DWORD PTR [rsp+0x40]
   140001231:	add    rsp,0x38
   140001235:	ret    
   140001236:	int3   
   140001237:	int3   
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	sub    rsp,0x38
   140001244:	mov    rcx,QWORD PTR [rcx+0x8]
   140001248:	lea    r9,[rsp+0x40]
   14000124d:	and    QWORD PTR [rsp+0x20],0x0
   140001253:	call   QWORD PTR [rip+0x6fb7]        # 0x140008210
   140001259:	test   eax,eax
   14000125b:	jne    0x14000127d
   14000125d:	call   QWORD PTR [rip+0x6df5]        # 0x140008058
   140001263:	mov    ecx,DWORD PTR [rip+0xbe37]        # 0x14000d0a0
   140001269:	lea    rdx,[rip+0x74f0]        # 0x140008760
   140001270:	mov    r8d,eax
   140001273:	call   0x140007278
   140001278:	or     eax,0xffffffff
   14000127b:	jmp    0x140001281
   14000127d:	mov    eax,DWORD PTR [rsp+0x40]
   140001281:	add    rsp,0x38
   140001285:	ret    
   140001286:	int3   
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	sub    rsp,0x28
   140001294:	mov    rcx,QWORD PTR [rcx+0x8]
   140001298:	mov    r9d,r8d
   14000129b:	xor    r8d,r8d
   14000129e:	call   QWORD PTR [rip+0x6f8c]        # 0x140008230
   1400012a4:	cmp    eax,0xffffffff
   1400012a7:	jne    0x1400012c7
   1400012a9:	call   QWORD PTR [rip+0x6da9]        # 0x140008058
   1400012af:	mov    ecx,DWORD PTR [rip+0xbdeb]        # 0x14000d0a0
   1400012b5:	lea    rdx,[rip+0x74dc]        # 0x140008798
   1400012bc:	mov    r8d,eax
   1400012bf:	call   0x140007278
   1400012c4:	or     eax,0xffffffff
   1400012c7:	add    rsp,0x28
   1400012cb:	ret    
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	int3   
   1400012d1:	int3   
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	rex push rbx
   1400012e2:	sub    rsp,0x20
   1400012e6:	mov    rbx,rcx
   1400012e9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400012ed:	call   QWORD PTR [rip+0x6d8d]        # 0x140008080
   1400012f3:	test   eax,eax
   1400012f5:	jne    0x140001317
   1400012f7:	call   QWORD PTR [rip+0x6d5b]        # 0x140008058
   1400012fd:	mov    ecx,DWORD PTR [rip+0xbd9d]        # 0x14000d0a0
   140001303:	lea    rdx,[rip+0x74c6]        # 0x1400087d0
   14000130a:	mov    r8d,eax
   14000130d:	call   0x140007278
   140001312:	or     eax,0xffffffff
   140001315:	jmp    0x14000131e
   140001317:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000131c:	xor    eax,eax
   14000131e:	add    rsp,0x20
   140001322:	pop    rbx
   140001323:	ret    
   140001324:	int3   
   140001325:	int3   
   140001326:	int3   
   140001327:	int3   
   140001328:	int3   
   140001329:	int3   
   14000132a:	int3   
   14000132b:	int3   
   14000132c:	int3   
   14000132d:	int3   
   14000132e:	int3   
   14000132f:	int3   
   140001330:	mov    rax,QWORD PTR [rcx+0x8]
   140001334:	ret    
   140001335:	int3   
   140001336:	int3   
   140001337:	int3   
   140001338:	int3   
   140001339:	int3   
   14000133a:	int3   
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	mov    ecx,ecx
   140001342:	rex.W jmp QWORD PTR [rip+0x70df]        # 0x140008428
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	rex.W jmp QWORD PTR [rip+0x70b9]        # 0x140008410
   140001357:	int3   
   140001358:	int3   
   140001359:	int3   
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	mov    QWORD PTR [rsp+0x18],rbx
   140001365:	mov    QWORD PTR [rsp+0x20],rbp
   14000136a:	push   rsi
   14000136b:	push   rdi
   14000136c:	push   r12
   14000136e:	push   r14
   140001370:	push   r15
   140001372:	sub    rsp,0x260
   140001379:	mov    rax,QWORD PTR [rip+0xbc88]        # 0x14000d008
   140001380:	xor    rax,rsp
   140001383:	mov    QWORD PTR [rsp+0x250],rax
   14000138b:	mov    ebp,r8d
   14000138e:	mov    ebx,edx
   140001390:	mov    r15,rcx
   140001393:	mov    r14d,0x80
   140001399:	call   QWORD PTR [rip+0x6e81]        # 0x140008220
   14000139f:	movsxd rcx,eax
   1400013a2:	cmp    rcx,0x8
   1400013a6:	jae    0x1400013c3
   1400013a8:	mov    ecx,DWORD PTR [rip+0xbcf2]        # 0x14000d0a0
   1400013ae:	lea    rdx,[rip+0x7453]        # 0x140008808
   1400013b5:	call   0x140007278
   1400013ba:	or     rax,0xffffffffffffffff
   1400013be:	jmp    0x1400015ad
   1400013c3:	mov    ecx,0x10
   1400013c8:	call   QWORD PTR [rip+0x705a]        # 0x140008428
   1400013ce:	or     rsi,0xffffffffffffffff
   1400013d2:	mov    rdi,rax
   1400013d5:	test   rax,rax
   1400013d8:	je     0x1400013ea
   1400013da:	lea    rax,[rip+0x7777]        # 0x140008b58
   1400013e1:	mov    QWORD PTR [rdi+0x8],rsi
   1400013e5:	mov    QWORD PTR [rdi],rax
   1400013e8:	jmp    0x1400013ec
   1400013ea:	xor    edi,edi
   1400013ec:	test   rdi,rdi
   1400013ef:	jne    0x14000140b
   1400013f1:	mov    ecx,DWORD PTR [rip+0xbca9]        # 0x14000d0a0
   1400013f7:	lea    rdx,[rip+0x743a]        # 0x140008838
   1400013fe:	call   0x140007278
   140001403:	mov    rax,rsi
   140001406:	jmp    0x1400015ad
   14000140b:	mov    ecx,ebx
   14000140d:	and    ecx,0x3
   140001410:	je     0x14000145c
   140001412:	sub    ecx,0x1
   140001415:	je     0x140001454
   140001417:	cmp    ecx,0x1
   14000141a:	je     0x14000144c
   14000141c:	mov    ecx,DWORD PTR [rip+0xbc7e]        # 0x14000d0a0
   140001422:	lea    rdx,[rip+0x7437]        # 0x140008860
   140001429:	mov    r8d,ebx
   14000142c:	call   0x140007278
   140001431:	mov    rax,QWORD PTR [rdi]
   140001434:	mov    rbx,QWORD PTR [rax]
   140001437:	mov    rcx,rbx
   14000143a:	call   QWORD PTR [rip+0x70c8]        # 0x140008508
   140001440:	mov    edx,0x1
   140001445:	mov    rcx,rdi
   140001448:	call   rbx
   14000144a:	jmp    0x140001403
   14000144c:	mov    r12d,0xc0000000
   140001452:	jmp    0x140001462
   140001454:	mov    r12d,0x40000000
   14000145a:	jmp    0x140001462
   14000145c:	mov    r12d,0x80000000
   140001462:	mov    eax,ebx
   140001464:	and    eax,0x100
   140001469:	je     0x140001478
   14000146b:	and    bpl,0x80
   14000146f:	mov    ecx,0x81
   140001474:	cmove  r14d,ecx
   140001478:	mov    ebp,0x1
   14000147d:	test   ebx,0x500
   140001483:	je     0x140001489
   140001485:	mov    ebx,ebp
   140001487:	jmp    0x1400014b7
   140001489:	test   ebx,0x300
   14000148f:	je     0x140001498
   140001491:	mov    ebx,0x2
   140001496:	jmp    0x1400014b7
   140001498:	test   eax,eax
   14000149a:	je     0x1400014a3
   14000149c:	mov    ebx,0x4
   1400014a1:	jmp    0x1400014b7
   1400014a3:	and    ebx,0x200
   1400014a9:	neg    ebx
   1400014ab:	mov    ebx,0x2
   1400014b0:	sbb    eax,eax
   1400014b2:	and    ebx,eax
   1400014b4:	add    ebx,0x3
   1400014b7:	cmp    BYTE PTR [r15],0x2a
   1400014bb:	jne    0x14000153a
   1400014bd:	mov    r15d,0x105
   1400014c3:	lea    rcx,[rsp+0x30]
   1400014c8:	mov    r8d,r15d
   1400014cb:	xor    edx,edx
   1400014cd:	call   0x140007c76
   1400014d2:	mov    r8d,r15d
   1400014d5:	lea    rcx,[rsp+0x140]
   1400014dd:	xor    edx,edx
   1400014df:	call   0x140007c76
   1400014e4:	lea    rdx,[rsp+0x30]
   1400014e9:	mov    ecx,r15d
   1400014ec:	call   QWORD PTR [rip+0x6b96]        # 0x140008088
   1400014f2:	dec    eax
   1400014f4:	cmp    eax,0x104
   1400014f9:	ja     0x14000155f
   1400014fb:	lea    r9,[rsp+0x140]
   140001503:	xor    r8d,r8d
   140001506:	lea    rdx,[rip+0x73af]        # 0x1400088bc
   14000150d:	lea    rcx,[rsp+0x30]
   140001512:	call   QWORD PTR [rip+0x6b60]        # 0x140008078
   140001518:	test   eax,eax
   14000151a:	jne    0x14000152b
   14000151c:	call   QWORD PTR [rip+0x6b36]        # 0x140008058
   140001522:	lea    rdx,[rip+0x7397]        # 0x1400088c0
   140001529:	jmp    0x14000156c
   14000152b:	lea    r15,[rsp+0x140]
   140001533:	or     r14d,0x4002100
   14000153a:	cmp    QWORD PTR [rdi+0x8],rsi
   14000153e:	je     0x140001590
   140001540:	mov    ecx,DWORD PTR [rip+0xbb5a]        # 0x14000d0a0
   140001546:	lea    rdx,[rip+0x711b]        # 0x140008668
   14000154d:	call   0x140007278
   140001552:	mov    ecx,0x54
   140001557:	call   QWORD PTR [rip+0x6b03]        # 0x140008060
   14000155d:	jmp    0x14000157a
   14000155f:	call   QWORD PTR [rip+0x6af3]        # 0x140008058
   140001565:	lea    rdx,[rip+0x7324]        # 0x140008890
   14000156c:	mov    ecx,DWORD PTR [rip+0xbb2e]        # 0x14000d0a0
   140001572:	mov    r8d,eax
   140001575:	call   0x140007278
   14000157a:	mov    rax,QWORD PTR [rdi]
   14000157d:	mov    rbx,QWORD PTR [rax]
   140001580:	mov    rcx,rbx
   140001583:	call   QWORD PTR [rip+0x6f7f]        # 0x140008508
   140001589:	mov    edx,ebp
   14000158b:	jmp    0x140001445
   140001590:	mov    r9d,ebx
   140001593:	mov    DWORD PTR [rsp+0x20],r14d
   140001598:	mov    r8d,r12d
   14000159b:	mov    rdx,r15
   14000159e:	mov    rcx,rdi
   1400015a1:	call   0x140001148
   1400015a6:	test   eax,eax
   1400015a8:	je     0x14000157a
   1400015aa:	mov    rax,rdi
   1400015ad:	mov    rcx,QWORD PTR [rsp+0x250]
   1400015b5:	xor    rcx,rsp
   1400015b8:	call   0x1400076f0
   1400015bd:	lea    r11,[rsp+0x260]
   1400015c5:	mov    rbx,QWORD PTR [r11+0x40]
   1400015c9:	mov    rbp,QWORD PTR [r11+0x48]
   1400015cd:	mov    rsp,r11
   1400015d0:	pop    r15
   1400015d2:	pop    r14
   1400015d4:	pop    r12
   1400015d6:	pop    rdi
   1400015d7:	pop    rsi
   1400015d8:	ret    
   1400015d9:	int3   
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400015ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400015ef:	push   r14
   1400015f1:	sub    rsp,0x20
   1400015f5:	mov    rax,QWORD PTR [rcx]
   1400015f8:	mov    r14,rcx
   1400015fb:	mov    edi,r8d
   1400015fe:	mov    rsi,rdx
   140001601:	mov    rbx,QWORD PTR [rax+0x8]
   140001605:	mov    rcx,rbx
   140001608:	call   QWORD PTR [rip+0x6efa]        # 0x140008508
   14000160e:	mov    r8d,edi
   140001611:	mov    rdx,rsi
   140001614:	mov    rcx,r14
   140001617:	mov    rax,rbx
   14000161a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000161f:	mov    rsi,QWORD PTR [rsp+0x38]
   140001624:	mov    rdi,QWORD PTR [rsp+0x40]
   140001629:	add    rsp,0x20
   14000162d:	pop    r14
   14000162f:	rex.W jmp rax
   140001632:	int3   
   140001633:	int3   
   140001634:	int3   
   140001635:	int3   
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	int3   
   14000163d:	int3   
   14000163e:	int3   
   14000163f:	int3   
   140001640:	mov    QWORD PTR [rsp+0x8],rbx
   140001645:	mov    QWORD PTR [rsp+0x10],rsi
   14000164a:	mov    QWORD PTR [rsp+0x18],rdi
   14000164f:	push   r14
   140001651:	sub    rsp,0x20
   140001655:	mov    rax,QWORD PTR [rcx]
   140001658:	mov    r14,rcx
   14000165b:	mov    edi,r8d
   14000165e:	mov    rsi,rdx
   140001661:	mov    rbx,QWORD PTR [rax+0x10]
   140001665:	mov    rcx,rbx
   140001668:	call   QWORD PTR [rip+0x6e9a]        # 0x140008508
   14000166e:	mov    r8d,edi
   140001671:	mov    rdx,rsi
   140001674:	mov    rcx,r14
   140001677:	mov    rax,rbx
   14000167a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000167f:	mov    rsi,QWORD PTR [rsp+0x38]
   140001684:	mov    rdi,QWORD PTR [rsp+0x40]
   140001689:	add    rsp,0x20
   14000168d:	pop    r14
   14000168f:	rex.W jmp rax
   140001692:	int3   
   140001693:	int3   
   140001694:	int3   
   140001695:	int3   
   140001696:	int3   
   140001697:	int3   
   140001698:	int3   
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400016aa:	mov    QWORD PTR [rsp+0x18],rdi
   1400016af:	push   r14
   1400016b1:	sub    rsp,0x20
   1400016b5:	mov    rax,QWORD PTR [rcx]
   1400016b8:	mov    r14,rcx
   1400016bb:	mov    edi,r8d
   1400016be:	mov    esi,edx
   1400016c0:	mov    rbx,QWORD PTR [rax+0x18]
   1400016c4:	mov    rcx,rbx
   1400016c7:	call   QWORD PTR [rip+0x6e3b]        # 0x140008508
   1400016cd:	mov    r8d,edi
   1400016d0:	mov    edx,esi
   1400016d2:	mov    rcx,r14
   1400016d5:	mov    rax,rbx
   1400016d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400016dd:	mov    rsi,QWORD PTR [rsp+0x38]
   1400016e2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400016e7:	add    rsp,0x20
   1400016eb:	pop    r14
   1400016ed:	rex.W jmp rax
   1400016f0:	int3   
   1400016f1:	int3   
   1400016f2:	int3   
   1400016f3:	int3   
   1400016f4:	int3   
   1400016f5:	int3   
   1400016f6:	int3   
   1400016f7:	int3   
   1400016f8:	int3   
   1400016f9:	int3   
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	mov    QWORD PTR [rsp+0x8],rbx
   140001705:	mov    QWORD PTR [rsp+0x10],rsi
   14000170a:	push   rdi
   14000170b:	sub    rsp,0x20
   14000170f:	mov    rsi,rcx
   140001712:	test   rcx,rcx
   140001715:	jne    0x14000171c
   140001717:	or     eax,0xffffffff
   14000171a:	jmp    0x14000174e
   14000171c:	mov    rax,QWORD PTR [rcx]
   14000171f:	mov    rbx,QWORD PTR [rax+0x20]
   140001723:	mov    rcx,rbx
   140001726:	call   QWORD PTR [rip+0x6ddc]        # 0x140008508
   14000172c:	mov    rcx,rsi
   14000172f:	call   rbx
   140001731:	mov    rcx,QWORD PTR [rsi]
   140001734:	mov    edi,eax
   140001736:	mov    rbx,QWORD PTR [rcx]
   140001739:	mov    rcx,rbx
   14000173c:	call   QWORD PTR [rip+0x6dc6]        # 0x140008508
   140001742:	mov    edx,0x1
   140001747:	mov    rcx,rsi
   14000174a:	call   rbx
   14000174c:	mov    eax,edi
   14000174e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001753:	mov    rsi,QWORD PTR [rsp+0x38]
   140001758:	add    rsp,0x20
   14000175c:	pop    rdi
   14000175d:	ret    
   14000175e:	int3   
   14000175f:	int3   
   140001760:	int3   
   140001761:	int3   
   140001762:	int3   
   140001763:	int3   
   140001764:	int3   
   140001765:	int3   
   140001766:	int3   
   140001767:	int3   
   140001768:	int3   
   140001769:	int3   
   14000176a:	int3   
   14000176b:	int3   
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	mov    QWORD PTR [rsp+0x18],rbx
   140001775:	mov    QWORD PTR [rsp+0x20],rsi
   14000177a:	push   rbp
   14000177b:	push   rdi
   14000177c:	push   r12
   14000177e:	push   r14
   140001780:	push   r15
   140001782:	lea    rbp,[rsp-0x60]
   140001787:	sub    rsp,0x160
   14000178e:	mov    rax,QWORD PTR [rip+0xb873]        # 0x14000d008
   140001795:	xor    rax,rsp
   140001798:	mov    QWORD PTR [rbp+0x50],rax
   14000179c:	mov    r15,QWORD PTR [rdx+0x20]
   1400017a0:	xor    esi,esi
   1400017a2:	mov    r14,rdx
   1400017a5:	mov    r8d,ecx
   1400017a8:	test   r15,r15
   1400017ab:	jne    0x1400017b6
   1400017ad:	or     rax,0xffffffffffffffff
   1400017b1:	jmp    0x140001cd0
   1400017b6:	sub    ecx,0x2
   1400017b9:	je     0x140001991
   1400017bf:	sub    ecx,0x1
   1400017c2:	je     0x1400017ee
   1400017c4:	cmp    ecx,0x1
   1400017c7:	mov    ecx,DWORD PTR [rip+0xb8d3]        # 0x14000d0a0
   1400017cd:	je     0x1400017e2
   1400017cf:	lea    rdx,[rip+0x7362]        # 0x140008b38
   1400017d6:	call   0x140007278
   1400017db:	xor    eax,eax
   1400017dd:	jmp    0x140001cd0
   1400017e2:	lea    rdx,[rip+0x7317]        # 0x140008b00
   1400017e9:	jmp    0x140001bdf
   1400017ee:	xor    edx,edx
   1400017f0:	mov    BYTE PTR [rsp+0x40],sil
   1400017f5:	mov    r8d,0x104
   1400017fb:	lea    rcx,[rsp+0x41]
   140001800:	call   0x140007c76
   140001805:	mov    rax,QWORD PTR [r14+0x8]
   140001809:	test   rax,rax
   14000180c:	je     0x140001845
   14000180e:	mov    r9,QWORD PTR [r15+0x8]
   140001812:	lea    r8,[rip+0x7147]        # 0x140008960
   140001819:	mov    edi,0x188
   14000181e:	mov    QWORD PTR [rsp+0x20],rax
   140001823:	add    r9,rdi
   140001826:	lea    rcx,[rsp+0x40]
   14000182b:	mov    edx,0x105
   140001830:	call   0x140001008
   140001835:	test   eax,eax
   140001837:	jns    0x140001845
   140001839:	lea    rdx,[rip+0x71b0]        # 0x1400089f0
   140001840:	jmp    0x140001a44
   140001845:	movzx  edx,WORD PTR [r14+0x32]
   14000184a:	lea    r8,[rsp+0x38]
   14000184f:	movzx  ecx,WORD PTR [r14+0x30]
   140001854:	call   QWORD PTR [rip+0x69de]        # 0x140008238
   14000185a:	test   eax,eax
   14000185c:	jne    0x140001884
   14000185e:	call   QWORD PTR [rip+0x67f4]        # 0x140008058
   140001864:	movzx  r9d,WORD PTR [r14+0x32]
   140001869:	lea    rdx,[rip+0x71b0]        # 0x140008a20
   140001870:	movzx  r8d,WORD PTR [r14+0x30]
   140001875:	mov    ecx,DWORD PTR [rip+0xb825]        # 0x14000d0a0
   14000187b:	mov    DWORD PTR [rsp+0x20],eax
   14000187f:	call   0x140007278
   140001884:	lea    rdx,[rsp+0x30]
   140001889:	lea    rcx,[rsp+0x38]
   14000188e:	call   QWORD PTR [rip+0x67fc]        # 0x140008090
   140001894:	test   eax,eax
   140001896:	jne    0x1400018b3
   140001898:	call   QWORD PTR [rip+0x67ba]        # 0x140008058
   14000189e:	mov    ecx,DWORD PTR [rip+0xb7fc]        # 0x14000d0a0
   1400018a4:	lea    rdx,[rip+0x71b5]        # 0x140008a60
   1400018ab:	mov    r8d,eax
   1400018ae:	call   0x140007278
   1400018b3:	mov    rdi,QWORD PTR [r14+0x28]
   1400018b7:	mov    rax,QWORD PTR [rdi]
   1400018ba:	mov    rbx,QWORD PTR [rax+0x28]
   1400018be:	mov    rcx,rbx
   1400018c1:	call   QWORD PTR [rip+0x6c41]        # 0x140008508
   1400018c7:	mov    rcx,rdi
   1400018ca:	call   rbx
   1400018cc:	mov    rcx,rax
   1400018cf:	lea    r9,[rsp+0x30]
   1400018d4:	lea    r8,[rsp+0x30]
   1400018d9:	lea    rdx,[rsp+0x30]
   1400018de:	call   QWORD PTR [rip+0x6934]        # 0x140008218
   1400018e4:	test   eax,eax
   1400018e6:	jne    0x140001903
   1400018e8:	call   QWORD PTR [rip+0x676a]        # 0x140008058
   1400018ee:	mov    ecx,DWORD PTR [rip+0xb7ac]        # 0x14000d0a0
   1400018f4:	lea    rdx,[rip+0x719d]        # 0x140008a98
   1400018fb:	mov    r8d,eax
   1400018fe:	call   0x140007278
   140001903:	mov    rcx,QWORD PTR [r14+0x28]
   140001907:	call   0x140001700
   14000190c:	mov    rcx,QWORD PTR [r14+0x8]
   140001910:	mov    ebx,eax
   140001912:	test   rcx,rcx
   140001915:	je     0x140001949
   140001917:	lea    rdx,[rip+0x6cea]        # 0x140008608
   14000191e:	call   QWORD PTR [rip+0x6744]        # 0x140008068
   140001924:	test   eax,eax
   140001926:	jne    0x140001949
   140001928:	lea    rax,[rsp+0x40]
   14000192d:	test   rax,rax
   140001930:	jne    0x140001937
   140001932:	mov    rax,rsi
   140001935:	jmp    0x140001941
   140001937:	lea    rcx,[rsp+0x40]
   14000193c:	call   0x140006d94
   140001941:	mov    rcx,QWORD PTR [r15+0x8]
   140001945:	mov    QWORD PTR [rcx+0x28],rax
   140001949:	movzx  edx,WORD PTR [r14+0x34]
   14000194e:	lea    rcx,[rsp+0x40]
   140001953:	call   QWORD PTR [rip+0x6717]        # 0x140008070
   140001959:	test   eax,eax
   14000195b:	jne    0x140001983
   14000195d:	call   QWORD PTR [rip+0x66f5]        # 0x140008058
   140001963:	movzx  r9d,WORD PTR [r14+0x34]
   140001968:	lea    r8,[rsp+0x40]
   14000196d:	mov    ecx,DWORD PTR [rip+0xb72d]        # 0x14000d0a0
   140001973:	lea    rdx,[rip+0x714e]        # 0x140008ac8
   14000197a:	mov    DWORD PTR [rsp+0x20],eax
   14000197e:	call   0x140007278
   140001983:	test   ebx,ebx
   140001985:	sete   sil
   140001989:	mov    rax,rsi
   14000198c:	jmp    0x140001cd0
   140001991:	xor    edx,edx
   140001993:	mov    BYTE PTR [rsp+0x40],sil
   140001998:	mov    r8d,0x104
   14000199e:	lea    rcx,[rsp+0x41]
   1400019a3:	call   0x140007c76
   1400019a8:	mov    r9d,DWORD PTR [r14]
   1400019ab:	lea    rdx,[rip+0x6f3e]        # 0x1400088f0
   1400019b2:	mov    r8,QWORD PTR [r14+0x8]
   1400019b6:	mov    ecx,DWORD PTR [rip+0xb6e4]        # 0x14000d0a0
   1400019bc:	call   0x140007278
   1400019c1:	mov    rcx,QWORD PTR [r15+0x8]
   1400019c5:	mov    edi,0x188
   1400019ca:	add    rcx,rdi
   1400019cd:	call   QWORD PTR [rip+0x684d]        # 0x140008220
   1400019d3:	mov    rcx,QWORD PTR [r14+0x8]
   1400019d7:	mov    ebx,eax
   1400019d9:	call   QWORD PTR [rip+0x6841]        # 0x140008220
   1400019df:	lea    ecx,[rax+0x1]
   1400019e2:	add    ecx,ebx
   1400019e4:	cmp    ecx,0x104
   1400019ea:	jbe    0x140001a0e
   1400019ec:	mov    r8,QWORD PTR [r15+0x8]
   1400019f0:	lea    rdx,[rip+0x6f31]        # 0x140008928
   1400019f7:	mov    r9,QWORD PTR [r14+0x8]
   1400019fb:	add    r8,rdi
   1400019fe:	mov    ecx,DWORD PTR [rip+0xb69c]        # 0x14000d0a0
   140001a04:	call   0x140007278
   140001a09:	jmp    0x1400017ad
   140001a0e:	mov    rax,QWORD PTR [r14+0x8]
   140001a12:	test   rax,rax
   140001a15:	je     0x140001a57
   140001a17:	mov    r9,QWORD PTR [r15+0x8]
   140001a1b:	lea    r8,[rip+0x6f3e]        # 0x140008960
   140001a22:	add    r9,rdi
   140001a25:	mov    QWORD PTR [rsp+0x20],rax
   140001a2a:	mov    edx,0x105
   140001a2f:	lea    rcx,[rsp+0x40]
   140001a34:	call   0x140001008
   140001a39:	test   eax,eax
   140001a3b:	jns    0x140001a57
   140001a3d:	lea    rdx,[rip+0x6f24]        # 0x140008968
   140001a44:	mov    ecx,DWORD PTR [rip+0xb656]        # 0x14000d0a0
   140001a4a:	mov    r8d,eax
   140001a4d:	call   0x140007278
   140001a52:	jmp    0x1400017ad
   140001a57:	mov    rcx,QWORD PTR [r14+0x8]
   140001a5b:	mov    r12d,0x1
   140001a61:	test   rcx,rcx
   140001a64:	je     0x140001a87
   140001a66:	lea    rdx,[rip+0x6b7b]        # 0x1400085e8
   140001a6d:	call   QWORD PTR [rip+0x65f5]        # 0x140008068
   140001a73:	test   eax,eax
   140001a75:	jne    0x140001a87
   140001a77:	mov    rax,QWORD PTR [r15+0x8]
   140001a7b:	mov    DWORD PTR [rax+0x290],r12d
   140001a82:	jmp    0x140001c31
   140001a87:	mov    rcx,QWORD PTR [r14+0x8]
   140001a8b:	test   rcx,rcx
   140001a8e:	je     0x140001aa1
   140001a90:	lea    rdx,[rip+0x6b61]        # 0x1400085f8
   140001a97:	call   QWORD PTR [rip+0x65cb]        # 0x140008068
   140001a9d:	test   eax,eax
   140001a9f:	je     0x140001a77
   140001aa1:	mov    rcx,QWORD PTR [r14+0x8]
   140001aa5:	test   rcx,rcx
   140001aa8:	je     0x140001ac3
   140001aaa:	lea    rdx,[rip+0x6b27]        # 0x1400085d8
   140001ab1:	call   QWORD PTR [rip+0x65b1]        # 0x140008068
   140001ab7:	test   eax,eax
   140001ab9:	jne    0x140001ac3
   140001abb:	mov    ebx,r12d
   140001abe:	jmp    0x140001b80
   140001ac3:	mov    rcx,QWORD PTR [r14+0x8]
   140001ac7:	mov    dl,0x2e
   140001ac9:	call   QWORD PTR [rip+0x6951]        # 0x140008420
   140001acf:	mov    rdi,rax
   140001ad2:	test   rax,rax
   140001ad5:	je     0x140001b0c
   140001ad7:	lea    rcx,[rax+0x1]
   140001adb:	lea    rdx,[rip+0x6aee]        # 0x1400085d0
   140001ae2:	call   QWORD PTR [rip+0x6580]        # 0x140008068
   140001ae8:	test   eax,eax
   140001aea:	jne    0x140001b0c
   140001aec:	mov    BYTE PTR [rdi],sil
   140001aef:	mov    rdx,QWORD PTR [r15+0x8]
   140001af3:	mov    rcx,QWORD PTR [r14+0x8]
   140001af7:	mov    rdx,QWORD PTR [rdx+0x30]
   140001afb:	call   QWORD PTR [rip+0x6567]        # 0x140008068
   140001b01:	neg    eax
   140001b03:	sbb    ebx,ebx
   140001b05:	not    ebx
   140001b07:	and    ebx,0x2
   140001b0a:	jmp    0x140001b53
   140001b0c:	mov    rcx,QWORD PTR [r14+0x8]
   140001b10:	mov    dl,0x2e
   140001b12:	call   QWORD PTR [rip+0x6908]        # 0x140008420
   140001b18:	mov    rdi,rax
   140001b1b:	test   rax,rax
   140001b1e:	je     0x140001b58
   140001b20:	lea    rcx,[rax+0x1]
   140001b24:	lea    rdx,[rip+0x6aed]        # 0x140008618
   140001b2b:	call   QWORD PTR [rip+0x6537]        # 0x140008068
   140001b31:	test   eax,eax
   140001b33:	jne    0x140001b58
   140001b35:	mov    BYTE PTR [rdi],sil
   140001b38:	mov    rdx,QWORD PTR [r15+0x8]
   140001b3c:	mov    rcx,QWORD PTR [r14+0x8]
   140001b40:	mov    rdx,QWORD PTR [rdx+0x30]
   140001b44:	call   QWORD PTR [rip+0x651e]        # 0x140008068
   140001b4a:	neg    eax
   140001b4c:	sbb    ebx,ebx
   140001b4e:	not    ebx
   140001b50:	and    ebx,0x3
   140001b53:	mov    BYTE PTR [rdi],0x2e
   140001b56:	jmp    0x140001b78
   140001b58:	mov    rcx,QWORD PTR [r14+0x8]
   140001b5c:	test   rcx,rcx
   140001b5f:	je     0x140001b76
   140001b61:	lea    rdx,[rip+0x6aa0]        # 0x140008608
   140001b68:	call   QWORD PTR [rip+0x64fa]        # 0x140008068
   140001b6e:	test   eax,eax
   140001b70:	je     0x140001c31
   140001b76:	mov    ebx,esi
   140001b78:	test   ebx,ebx
   140001b7a:	je     0x140001c31
   140001b80:	mov    rax,QWORD PTR [r15+0x8]
   140001b84:	mov    rcx,QWORD PTR [rax+0x3a8]
   140001b8b:	test   rcx,rcx
   140001b8e:	jne    0x140001b9d
   140001b90:	mov    ecx,0x10
   140001b95:	call   QWORD PTR [rip+0x688d]        # 0x140008428
   140001b9b:	jmp    0x140001bca
   140001b9d:	mov    eax,DWORD PTR [rax+0x3a0]
   140001ba3:	lea    edx,[rax+0x1]
   140001ba6:	cmp    edx,eax
   140001ba8:	jb     0x1400017ad
   140001bae:	mov    eax,edx
   140001bb0:	mov    edx,0xffffffff
   140001bb5:	shl    rax,0x4
   140001bb9:	cmp    rax,rdx
   140001bbc:	ja     0x1400017ad
   140001bc2:	mov    edx,eax
   140001bc4:	call   QWORD PTR [rip+0x684e]        # 0x140008418
   140001bca:	mov    rdi,rax
   140001bcd:	test   rax,rax
   140001bd0:	jne    0x140001be9
   140001bd2:	lea    rdx,[rip+0x6dbf]        # 0x140008998
   140001bd9:	mov    ecx,DWORD PTR [rip+0xb4c1]        # 0x14000d0a0
   140001bdf:	call   0x140007278
   140001be4:	jmp    0x1400017ad
   140001be9:	mov    rax,QWORD PTR [r15+0x8]
   140001bed:	mov    QWORD PTR [rax+0x3a8],rdi
   140001bf4:	mov    rax,QWORD PTR [r15+0x8]
   140001bf8:	add    DWORD PTR [rax+0x3a0],r12d
   140001bff:	mov    rax,QWORD PTR [r15+0x8]
   140001c03:	mov    eax,DWORD PTR [rax+0x3a0]
   140001c09:	sub    eax,r12d
   140001c0c:	add    rax,rax
   140001c0f:	mov    DWORD PTR [rdi+rax*8+0x8],ebx
   140001c13:	mov    rcx,QWORD PTR [r14+0x8]
   140001c17:	call   QWORD PTR [rip+0x67eb]        # 0x140008408
   140001c1d:	mov    rcx,QWORD PTR [r15+0x8]
   140001c21:	mov    ecx,DWORD PTR [rcx+0x3a0]
   140001c27:	sub    ecx,r12d
   140001c2a:	add    rcx,rcx
   140001c2d:	mov    QWORD PTR [rdi+rcx*8],rax
   140001c31:	mov    ecx,0x10
   140001c36:	call   QWORD PTR [rip+0x67ec]        # 0x140008428
   140001c3c:	mov    rdi,rax
   140001c3f:	test   rax,rax
   140001c42:	je     0x140001c55
   140001c44:	or     QWORD PTR [rdi+0x8],0xffffffffffffffff
   140001c49:	lea    rax,[rip+0x6f08]        # 0x140008b58
   140001c50:	mov    QWORD PTR [rdi],rax
   140001c53:	jmp    0x140001c58
   140001c55:	mov    rdi,rsi
   140001c58:	test   rdi,rdi
   140001c5b:	jne    0x140001c69
   140001c5d:	lea    rdx,[rip+0x6d64]        # 0x1400089c8
   140001c64:	jmp    0x140001bd9
   140001c69:	cmp    QWORD PTR [rdi+0x8],0xffffffffffffffff
   140001c6e:	je     0x140001c8f
   140001c70:	mov    ecx,DWORD PTR [rip+0xb42a]        # 0x14000d0a0
   140001c76:	lea    rdx,[rip+0x69eb]        # 0x140008668
   140001c7d:	call   0x140007278
   140001c82:	mov    ecx,0x54
   140001c87:	call   QWORD PTR [rip+0x63d3]        # 0x140008060
   140001c8d:	jmp    0x140001cb1
   140001c8f:	mov    r9d,r12d
   140001c92:	mov    DWORD PTR [rsp+0x20],0x80
   140001c9a:	mov    r8d,0x40000000
   140001ca0:	lea    rdx,[rsp+0x40]
   140001ca5:	mov    rcx,rdi
   140001ca8:	call   0x140001148
   140001cad:	test   eax,eax
   140001caf:	jne    0x140001ccd
   140001cb1:	mov    rax,QWORD PTR [rdi]
   140001cb4:	mov    rbx,QWORD PTR [rax]
   140001cb7:	mov    rcx,rbx
   140001cba:	call   QWORD PTR [rip+0x6848]        # 0x140008508
   140001cc0:	mov    edx,r12d
   140001cc3:	mov    rcx,rdi
   140001cc6:	call   rbx
   140001cc8:	jmp    0x1400017ad
   140001ccd:	mov    rax,rdi
   140001cd0:	mov    rcx,QWORD PTR [rbp+0x50]
   140001cd4:	xor    rcx,rsp
   140001cd7:	call   0x1400076f0
   140001cdc:	lea    r11,[rsp+0x160]
   140001ce4:	mov    rbx,QWORD PTR [r11+0x40]
   140001ce8:	mov    rsi,QWORD PTR [r11+0x48]
   140001cec:	mov    rsp,r11
   140001cef:	pop    r15
   140001cf1:	pop    r14
   140001cf3:	pop    r12
   140001cf5:	pop    rdi
   140001cf6:	pop    rbp
   140001cf7:	ret    
   140001cf8:	int3   
   140001cf9:	int3   
   140001cfa:	int3   
   140001cfb:	int3   
   140001cfc:	int3   
   140001cfd:	int3   
   140001cfe:	int3   
   140001cff:	int3   
   140001d00:	mov    QWORD PTR [rsp+0x8],rbx
   140001d05:	mov    QWORD PTR [rsp+0x10],rsi
   140001d0a:	push   rdi
   140001d0b:	sub    rsp,0x30
   140001d0f:	mov    r11d,DWORD PTR [rsp+0x68]
   140001d14:	mov    r10,rcx
   140001d17:	mov    ecx,r11d
   140001d1a:	xor    ebx,ebx
   140001d1c:	mov    rdi,r8
   140001d1f:	mov    esi,0x7ffffffe
   140001d24:	mov    r8d,0x80070057
   140001d2a:	and    ecx,0x100
   140001d30:	je     0x140001d4a
   140001d32:	test   r10,r10
   140001d35:	jne    0x140001d3c
   140001d37:	test   rdx,rdx
   140001d3a:	jne    0x140001d45
   140001d3c:	cmp    rdx,0x7fffffff
   140001d43:	jbe    0x140001d55
   140001d45:	mov    ebx,r8d
   140001d48:	jmp    0x140001d55
   140001d4a:	lea    rax,[rdx-0x1]
   140001d4e:	cmp    rax,rsi
   140001d51:	cmova  ebx,r8d
   140001d55:	test   ebx,ebx
   140001d57:	js     0x140001e4d
   140001d5d:	test   ecx,ecx
   140001d5f:	je     0x140001d72
   140001d61:	test   rdi,rdi
   140001d64:	lea    rax,[rip+0x6f18]        # 0x140008c83
   140001d6b:	cmovne rax,rdi
   140001d6f:	mov    rdi,rax
   140001d72:	xor    ebx,ebx
   140001d74:	test   r11d,0xffffe000
   140001d7b:	je     0x140001dc3
   140001d7d:	mov    ebx,r8d
   140001d80:	test   rdx,rdx
   140001d83:	je     0x140001d89
   140001d85:	mov    BYTE PTR [r10],0x0
   140001d89:	test   r11d,0x1c00
   140001d90:	je     0x140001e56
   140001d96:	test   rdx,rdx
   140001d99:	je     0x140001e56
   140001d9f:	lea    rax,[rsp+0x58]
   140001da4:	mov    DWORD PTR [rsp+0x28],r11d
   140001da9:	lea    r9,[rsp+0x60]
   140001dae:	mov    QWORD PTR [rsp+0x20],rax
   140001db3:	xor    r8d,r8d
   140001db6:	mov    rcx,r10
   140001db9:	call   0x1400023d8
   140001dbe:	jmp    0x140001e56
   140001dc3:	test   rdx,rdx
   140001dc6:	jne    0x140001de0
   140001dc8:	cmp    BYTE PTR [rdi],bl
   140001dca:	je     0x140001e56
   140001dd0:	mov    rax,r10
   140001dd3:	neg    rax
   140001dd6:	sbb    ebx,ebx
   140001dd8:	and    ebx,0x23
   140001ddb:	add    ebx,r8d
   140001dde:	jmp    0x140001d89
   140001de0:	xor    ecx,ecx
   140001de2:	mov    r9,rdx
   140001de5:	sub    rsi,rdx
   140001de8:	mov    r8,r10
   140001deb:	lea    rax,[rsi+r9*1]
   140001def:	test   rax,rax
   140001df2:	je     0x140001e0a
   140001df4:	mov    al,BYTE PTR [rcx+rdi*1]
   140001df7:	test   al,al
   140001df9:	je     0x140001e0a
   140001dfb:	mov    BYTE PTR [r8],al
   140001dfe:	inc    rcx
   140001e01:	inc    r8
   140001e04:	sub    r9,0x1
   140001e08:	jne    0x140001deb
   140001e0a:	test   r9,r9
   140001e0d:	jne    0x140001e1a
   140001e0f:	dec    r8
   140001e12:	mov    ebx,0x8007007a
   140001e17:	dec    rcx
   140001e1a:	mov    BYTE PTR [r8],0x0
   140001e1e:	mov    r8,rdx
   140001e21:	sub    r8,rcx
   140001e24:	test   ebx,ebx
   140001e26:	js     0x140001d89
   140001e2c:	bt     r11d,0x9
   140001e31:	jae    0x140001e56
   140001e33:	cmp    r8,0x1
   140001e37:	jbe    0x140001e56
   140001e39:	inc    rcx
   140001e3c:	movzx  edx,r11b
   140001e40:	add    rcx,r10
   140001e43:	dec    r8
   140001e46:	call   0x140007c76
   140001e4b:	jmp    0x140001e56
   140001e4d:	test   rdx,rdx
   140001e50:	je     0x140001e56
   140001e52:	mov    BYTE PTR [r10],0x0
   140001e56:	mov    rsi,QWORD PTR [rsp+0x48]
   140001e5b:	mov    eax,ebx
   140001e5d:	mov    rbx,QWORD PTR [rsp+0x40]
   140001e62:	add    rsp,0x30
   140001e66:	pop    rdi
   140001e67:	ret    
   140001e68:	int3   
   140001e69:	int3   
   140001e6a:	int3   
   140001e6b:	int3   
   140001e6c:	int3   
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	mov    QWORD PTR [rsp+0x8],rbx
   140001e75:	mov    QWORD PTR [rsp+0x10],rdi
   140001e7a:	xor    edi,edi
   140001e7c:	mov    eax,0x80070057
   140001e81:	mov    r9d,edi
   140001e84:	test   rcx,rcx
   140001e87:	jne    0x140001e8e
   140001e89:	test   rdx,rdx
   140001e8c:	jne    0x140001e97
   140001e8e:	cmp    rdx,0x7fffffff
   140001e95:	jbe    0x140001e9a
   140001e97:	mov    r9d,eax
   140001e9a:	test   r9d,r9d
   140001e9d:	js     0x140001f1d
   140001e9f:	test   r8,r8
   140001ea2:	lea    r10,[rip+0x6ddb]        # 0x140008c84
   140001ea9:	mov    r9d,edi
   140001eac:	cmovne r10,r8
   140001eb0:	test   rdx,rdx
   140001eb3:	jne    0x140001eca
   140001eb5:	cmp    WORD PTR [r10],di
   140001eb9:	je     0x140001f25
   140001ebb:	neg    rcx
   140001ebe:	sbb    r9d,r9d
   140001ec1:	and    r9d,0x23
   140001ec5:	add    r9d,eax
   140001ec8:	jmp    0x140001f25
   140001eca:	mov    ebx,0x7ffffffe
   140001ecf:	mov    r11,rdx
   140001ed2:	sub    rbx,rdx
   140001ed5:	mov    r8,rcx
   140001ed8:	sub    r10,rcx
   140001edb:	lea    rax,[rbx+r11*1]
   140001edf:	test   rax,rax
   140001ee2:	je     0x140001efc
   140001ee4:	movzx  eax,WORD PTR [r10+r8*1]
   140001ee9:	test   ax,ax
   140001eec:	je     0x140001efc
   140001eee:	mov    WORD PTR [r8],ax
   140001ef2:	add    r8,0x2
   140001ef6:	sub    r11,0x1
   140001efa:	jne    0x140001edb
   140001efc:	test   r11,r11
   140001eff:	jne    0x140001f0b
   140001f01:	sub    r8,0x2
   140001f05:	mov    r9d,0x8007007a
   140001f0b:	mov    WORD PTR [r8],di
   140001f0f:	test   r9d,r9d
   140001f12:	jns    0x140001f25
   140001f14:	lea    rax,[rdx+rdx*1]
   140001f18:	shr    rax,1
   140001f1b:	jmp    0x140001f20
   140001f1d:	test   rdx,rdx
   140001f20:	je     0x140001f25
   140001f22:	mov    WORD PTR [rcx],di
   140001f25:	mov    rbx,QWORD PTR [rsp+0x8]
   140001f2a:	mov    eax,r9d
   140001f2d:	mov    rdi,QWORD PTR [rsp+0x10]
   140001f32:	ret    
   140001f33:	int3   
   140001f34:	int3   
   140001f35:	int3   
   140001f36:	int3   
   140001f37:	int3   
   140001f38:	int3   
   140001f39:	int3   
   140001f3a:	int3   
   140001f3b:	int3   
   140001f3c:	mov    QWORD PTR [rsp+0x8],rbx
   140001f41:	xor    r9d,r9d
   140001f44:	lea    rax,[rdx-0x1]
   140001f48:	cmp    rax,0x7ffffffe
   140001f4e:	mov    r10,rdx
   140001f51:	mov    edx,0x80070057
   140001f56:	mov    rbx,r8
   140001f59:	cmova  r9d,edx
   140001f5d:	mov    r11,rcx
   140001f60:	test   r9d,r9d
   140001f63:	js     0x140001f8e
   140001f65:	xor    r9d,r9d
   140001f68:	mov    rax,r10
   140001f6b:	test   r10,r10
   140001f6e:	je     0x140001f8b
   140001f70:	cmp    BYTE PTR [rcx],r9b
   140001f73:	je     0x140001f7e
   140001f75:	inc    rcx
   140001f78:	sub    rax,0x1
   140001f7c:	jne    0x140001f70
   140001f7e:	test   rax,rax
   140001f81:	je     0x140001f8b
   140001f83:	mov    r8,r10
   140001f86:	sub    r8,rax
   140001f89:	jmp    0x140001f91
   140001f8b:	mov    r9d,edx
   140001f8e:	xor    r8d,r8d
   140001f91:	test   r9d,r9d
   140001f94:	js     0x140001fe6
   140001f96:	mov    rdx,r10
   140001f99:	lea    rcx,[r8+r11*1]
   140001f9d:	mov    r9d,0x0
   140001fa3:	sub    rdx,r8
   140001fa6:	je     0x140001fda
   140001fa8:	mov    rax,rdx
   140001fab:	sub    rax,r10
   140001fae:	lea    r10,[r8+0x7ffffffe]
   140001fb5:	add    r10,rax
   140001fb8:	sub    rbx,rcx
   140001fbb:	test   r10,r10
   140001fbe:	je     0x140001fd5
   140001fc0:	mov    al,BYTE PTR [rbx+rcx*1]
   140001fc3:	test   al,al
   140001fc5:	je     0x140001fd5
   140001fc7:	mov    BYTE PTR [rcx],al
   140001fc9:	dec    r10
   140001fcc:	inc    rcx
   140001fcf:	sub    rdx,0x1
   140001fd3:	jne    0x140001fbb
   140001fd5:	test   rdx,rdx
   140001fd8:	jne    0x140001fe3
   140001fda:	dec    rcx
   140001fdd:	mov    r9d,0x8007007a
   140001fe3:	mov    BYTE PTR [rcx],0x0
   140001fe6:	mov    rbx,QWORD PTR [rsp+0x8]
   140001feb:	mov    eax,r9d
   140001fee:	ret    
   140001fef:	int3   
   140001ff0:	int3   
   140001ff1:	int3   
   140001ff2:	int3   
   140001ff3:	int3   
   140001ff4:	int3   
   140001ff5:	int3   
   140001ff6:	int3   
   140001ff7:	int3   
   140001ff8:	mov    QWORD PTR [rsp+0x8],rbx
   140001ffd:	mov    QWORD PTR [rsp+0x10],rsi
   140002002:	mov    QWORD PTR [rsp+0x18],rdi
   140002007:	xor    edx,edx
   140002009:	mov    rsi,r9
   14000200c:	test   rcx,rcx
   14000200f:	mov    r9d,0x80070057
   140002015:	mov    rdi,rcx
   140002018:	mov    r10d,0x825
   14000201e:	cmove  edx,r9d
   140002022:	test   edx,edx
   140002024:	js     0x140002043
   140002026:	mov    ecx,r10d
   140002029:	mov    rax,rdi
   14000202c:	xor    edx,edx
   14000202e:	cmp    BYTE PTR [rax],dl
   140002030:	je     0x14000203b
   140002032:	inc    rax
   140002035:	sub    rcx,0x1
   140002039:	jne    0x14000202e
   14000203b:	test   rcx,rcx
   14000203e:	jne    0x14000207b
   140002040:	mov    edx,r9d
   140002043:	xor    eax,eax
   140002045:	test   edx,edx
   140002047:	js     0x140002101
   14000204d:	sub    r10,rax
   140002050:	lea    rbx,[rip+0x6c2c]        # 0x140008c83
   140002057:	test   r8,r8
   14000205a:	lea    r11,[rax+rdi*1]
   14000205e:	cmovne rbx,r8
   140002062:	xor    edx,edx
   140002064:	cmp    r10,0x1
   140002068:	ja     0x14000208a
   14000206a:	cmp    BYTE PTR [rbx],dl
   14000206c:	je     0x1400020ec
   14000206e:	test   rdi,rdi
   140002071:	jne    0x140002083
   140002073:	mov    edx,r9d
   140002076:	jmp    0x140002101
   14000207b:	mov    rax,r10
   14000207e:	sub    rax,rcx
   140002081:	jmp    0x140002045
   140002083:	mov    edx,0x8007007a
   140002088:	jmp    0x1400020ec
   14000208a:	xor    ecx,ecx
   14000208c:	mov    r9,r10
   14000208f:	mov    r8,r11
   140002092:	test   r10,r10
   140002095:	je     0x1400020c3
   140002097:	mov    edi,0x7ffffffe
   14000209c:	sub    rdi,r10
   14000209f:	lea    rax,[rdi+r9*1]
   1400020a3:	test   rax,rax
   1400020a6:	je     0x1400020be
   1400020a8:	mov    al,BYTE PTR [rcx+rbx*1]
   1400020ab:	test   al,al
   1400020ad:	je     0x1400020be
   1400020af:	mov    BYTE PTR [r8],al
   1400020b2:	inc    rcx
   1400020b5:	inc    r8
   1400020b8:	sub    r9,0x1
   1400020bc:	jne    0x14000209f
   1400020be:	test   r9,r9
   1400020c1:	jne    0x1400020ce
   1400020c3:	dec    r8
   1400020c6:	mov    edx,0x8007007a
   1400020cb:	dec    rcx
   1400020ce:	add    r11,rcx
   1400020d1:	mov    BYTE PTR [r8],0x0
   1400020d5:	sub    r10,rcx
   1400020d8:	mov    ecx,0x80000000
   1400020dd:	lea    eax,[rdx+rcx*1]
   1400020e0:	test   ecx,eax
   1400020e2:	jne    0x1400020ec
   1400020e4:	cmp    edx,0x8007007a
   1400020ea:	jne    0x140002101
   1400020ec:	test   rsi,rsi
   1400020ef:	je     0x1400020f4
   1400020f1:	mov    QWORD PTR [rsi],r11
   1400020f4:	mov    rax,QWORD PTR [rsp+0x28]
   1400020f9:	test   rax,rax
   1400020fc:	je     0x140002101
   1400020fe:	mov    QWORD PTR [rax],r10
   140002101:	mov    rbx,QWORD PTR [rsp+0x8]
   140002106:	mov    eax,edx
   140002108:	mov    rsi,QWORD PTR [rsp+0x10]
   14000210d:	mov    rdi,QWORD PTR [rsp+0x18]
   140002112:	ret    
   140002113:	int3   
   140002114:	int3   
   140002115:	int3   
   140002116:	int3   
   140002117:	int3   
   140002118:	int3   
   140002119:	int3   
   14000211a:	int3   
   14000211b:	int3   
   14000211c:	mov    QWORD PTR [rsp+0x8],rbx
   140002121:	mov    QWORD PTR [rsp+0x10],rdi
   140002126:	xor    ebx,ebx
   140002128:	mov    edi,0x80070057
   14000212d:	test   rcx,rcx
   140002130:	mov    edx,ebx
   140002132:	mov    r11,r8
   140002135:	mov    r10,rcx
   140002138:	cmove  edx,edi
   14000213b:	mov    r9d,0x801
   140002141:	test   edx,edx
   140002143:	js     0x140002163
   140002145:	mov    ecx,r9d
   140002148:	mov    rax,r10
   14000214b:	mov    edx,ebx
   14000214d:	cmp    WORD PTR [rax],bx
   140002150:	je     0x14000215c
   140002152:	add    rax,0x2
   140002156:	sub    rcx,0x1
   14000215a:	jne    0x14000214d
   14000215c:	test   rcx,rcx
   14000215f:	jne    0x1400021a0
   140002161:	mov    edx,edi
   140002163:	mov    rax,rbx
   140002166:	test   edx,edx
   140002168:	js     0x1400021f2
   14000216e:	sub    r9,rax
   140002171:	lea    r8,[rip+0x6b0c]        # 0x140008c84
   140002178:	test   r11,r11
   14000217b:	lea    rcx,[r10+rax*2]
   14000217f:	mov    edx,ebx
   140002181:	cmovne r8,r11
   140002185:	cmp    r9,0x1
   140002189:	ja     0x1400021a8
   14000218b:	cmp    WORD PTR [r8],bx
   14000218f:	je     0x1400021f2
   140002191:	mov    rax,r10
   140002194:	neg    rax
   140002197:	sbb    edx,edx
   140002199:	and    edx,0x23
   14000219c:	add    edx,edi
   14000219e:	jmp    0x1400021ee
   1400021a0:	mov    rax,r9
   1400021a3:	sub    rax,rcx
   1400021a6:	jmp    0x140002166
   1400021a8:	test   r9,r9
   1400021ab:	je     0x1400021de
   1400021ad:	mov    r11d,0x7ffffffe
   1400021b3:	sub    r11,r9
   1400021b6:	sub    r8,rcx
   1400021b9:	lea    rax,[r11+r9*1]
   1400021bd:	test   rax,rax
   1400021c0:	je     0x1400021d9
   1400021c2:	movzx  eax,WORD PTR [r8+rcx*1]
   1400021c7:	test   ax,ax
   1400021ca:	je     0x1400021d9
   1400021cc:	mov    WORD PTR [rcx],ax
   1400021cf:	add    rcx,0x2
   1400021d3:	sub    r9,0x1
   1400021d7:	jne    0x1400021b9
   1400021d9:	test   r9,r9
   1400021dc:	jne    0x1400021e7
   1400021de:	sub    rcx,0x2
   1400021e2:	mov    edx,0x8007007a
   1400021e7:	mov    WORD PTR [rcx],bx
   1400021ea:	test   edx,edx
   1400021ec:	jns    0x1400021f2
   1400021ee:	mov    WORD PTR [r10],bx
   1400021f2:	mov    rbx,QWORD PTR [rsp+0x8]
   1400021f7:	mov    eax,edx
   1400021f9:	mov    rdi,QWORD PTR [rsp+0x10]
   1400021fe:	ret    
   1400021ff:	int3   
   140002200:	int3   
   140002201:	int3   
   140002202:	int3   
   140002203:	int3   
   140002204:	int3   
   140002205:	int3   
   140002206:	int3   
   140002207:	int3   
   140002208:	mov    QWORD PTR [rsp+0x20],r9
   14000220d:	mov    QWORD PTR [rsp+0x18],r8
   140002212:	push   rbp
   140002213:	push   rbx
   140002214:	push   rsi
   140002215:	push   rdi
   140002216:	push   r12
   140002218:	push   r13
   14000221a:	push   r14
   14000221c:	push   r15
   14000221e:	mov    rbp,rsp
   140002221:	sub    rsp,0x48
   140002225:	mov    r12d,DWORD PTR [rbp+0x68]
   140002229:	mov    r14,rcx
   14000222c:	mov    ecx,r12d
   14000222f:	xor    ebx,ebx
   140002231:	mov    rsi,rdx
   140002234:	mov    edx,0x80070057
   140002239:	and    ecx,0x100
   14000223f:	je     0x140002258
   140002241:	test   r14,r14
   140002244:	jne    0x14000224b
   140002246:	test   rsi,rsi
   140002249:	jne    0x140002254
   14000224b:	cmp    rsi,0x7fffffff
   140002252:	jbe    0x140002265
   140002254:	mov    ebx,edx
   140002256:	jmp    0x140002265
   140002258:	lea    rax,[rsi-0x1]
   14000225c:	cmp    rax,0x7ffffffe
   140002262:	cmova  ebx,edx
   140002265:	test   ebx,ebx
   140002267:	js     0x1400023b3
   14000226d:	mov    QWORD PTR [rbp-0x18],r14
   140002271:	mov    r13,r14
   140002274:	mov    QWORD PTR [rbp-0x10],rsi
   140002278:	mov    r15,rsi
   14000227b:	test   ecx,ecx
   14000227d:	je     0x140002297
   14000227f:	mov    rax,QWORD PTR [rbp+0x70]
   140002283:	lea    r8,[rip+0x69f9]        # 0x140008c83
   14000228a:	test   rax,rax
   14000228d:	cmovne r8,rax
   140002291:	mov    QWORD PTR [rbp+0x70],r8
   140002295:	jmp    0x14000229b
   140002297:	mov    r8,QWORD PTR [rbp+0x70]
   14000229b:	xor    ebx,ebx
   14000229d:	test   r12d,0xffffe000
   1400022a4:	je     0x140002320
   1400022a6:	mov    ebx,edx
   1400022a8:	test   rsi,rsi
   1400022ab:	je     0x1400022b1
   1400022ad:	mov    BYTE PTR [r14],0x0
   1400022b1:	test   r12d,0x1c00
   1400022b8:	je     0x1400022e7
   1400022ba:	test   rsi,rsi
   1400022bd:	je     0x1400022e7
   1400022bf:	lea    rax,[rbp-0x10]
   1400022c3:	mov    DWORD PTR [rsp+0x28],r12d
   1400022c8:	lea    r9,[rbp-0x18]
   1400022cc:	mov    QWORD PTR [rsp+0x20],rax
   1400022d1:	xor    r8d,r8d
   1400022d4:	mov    rdx,rsi
   1400022d7:	mov    rcx,r14
   1400022da:	call   0x1400023d8
   1400022df:	mov    r13,QWORD PTR [rbp-0x18]
   1400022e3:	mov    r15,QWORD PTR [rbp-0x10]
   1400022e7:	mov    ecx,0x80000000
   1400022ec:	lea    eax,[rbx+rcx*1]
   1400022ef:	test   ecx,eax
   1400022f1:	jne    0x1400022ff
   1400022f3:	cmp    ebx,0x8007007a
   1400022f9:	jne    0x1400023bc
   1400022ff:	mov    r9,QWORD PTR [rbp+0x60]
   140002303:	mov    rax,QWORD PTR [rbp+0x58]
   140002307:	test   rax,rax
   14000230a:	je     0x14000230f
   14000230c:	mov    QWORD PTR [rax],r13
   14000230f:	test   r9,r9
   140002312:	je     0x1400023bc
   140002318:	mov    QWORD PTR [r9],r15
   14000231b:	jmp    0x1400023bc
   140002320:	test   rsi,rsi
   140002323:	jne    0x14000233c
   140002325:	cmp    BYTE PTR [r8],bl
   140002328:	je     0x140002303
   14000232a:	mov    rax,r14
   14000232d:	neg    rax
   140002330:	sbb    ebx,ebx
   140002332:	and    ebx,0x23
   140002335:	add    ebx,edx
   140002337:	jmp    0x1400022b1
   14000233c:	lea    rdi,[rsi-0x1]
   140002340:	mov    rcx,r14
   140002343:	mov    rdx,rdi
   140002346:	lea    r9,[rbp+0x78]
   14000234a:	call   QWORD PTR [rip+0x6198]        # 0x1400084e8
   140002350:	test   eax,eax
   140002352:	js     0x140002368
   140002354:	cdqe   
   140002356:	cmp    rax,rdi
   140002359:	ja     0x140002368
   14000235b:	jne    0x140002363
   14000235d:	mov    BYTE PTR [rdi+r14*1],bl
   140002361:	jmp    0x140002371
   140002363:	mov    rdi,rax
   140002366:	jmp    0x140002371
   140002368:	mov    BYTE PTR [rdi+r14*1],bl
   14000236c:	mov    ebx,0x8007007a
   140002371:	sub    r15,rdi
   140002374:	lea    r13,[rdi+r14*1]
   140002378:	mov    QWORD PTR [rbp-0x18],r13
   14000237c:	mov    QWORD PTR [rbp-0x10],r15
   140002380:	test   ebx,ebx
   140002382:	js     0x1400022b1
   140002388:	bt     r12d,0x9
   14000238d:	jae    0x1400022ff
   140002393:	cmp    r15,0x1
   140002397:	jbe    0x1400022ff
   14000239d:	lea    r8,[r15-0x1]
   1400023a1:	movzx  edx,r12b
   1400023a5:	lea    rcx,[r13+0x1]
   1400023a9:	call   0x140007c76
   1400023ae:	jmp    0x1400022ff
   1400023b3:	test   rsi,rsi
   1400023b6:	je     0x1400023bc
   1400023b8:	mov    BYTE PTR [r14],0x0
   1400023bc:	mov    eax,ebx
   1400023be:	add    rsp,0x48
   1400023c2:	pop    r15
   1400023c4:	pop    r14
   1400023c6:	pop    r13
   1400023c8:	pop    r12
   1400023ca:	pop    rdi
   1400023cb:	pop    rsi
   1400023cc:	pop    rbx
   1400023cd:	pop    rbp
   1400023ce:	ret    
   1400023cf:	int3   
   1400023d0:	int3   
   1400023d1:	int3   
   1400023d2:	int3   
   1400023d3:	int3   
   1400023d4:	int3   
   1400023d5:	int3   
   1400023d6:	int3   
   1400023d7:	int3   
   1400023d8:	mov    rax,rsp
   1400023db:	mov    QWORD PTR [rax+0x8],rbx
   1400023df:	mov    QWORD PTR [rax+0x10],rsi
   1400023e3:	mov    QWORD PTR [rax+0x18],rdi
   1400023e7:	mov    QWORD PTR [rax+0x20],r14
   1400023eb:	push   r15
   1400023ed:	sub    rsp,0x20
   1400023f1:	mov    r15,QWORD PTR [rsp+0x50]
   1400023f6:	mov    r14,r9
   1400023f9:	mov    rdi,rdx
   1400023fc:	mov    rsi,rcx
   1400023ff:	test   rdx,rdx
   140002402:	je     0x140002422
   140002404:	test   DWORD PTR [rsp+0x58],0x1000
   14000240c:	je     0x140002422
   14000240e:	lea    r9,[rcx+r8*1]
   140002412:	mov    rax,rdx
   140002415:	sub    rax,r8
   140002418:	mov    QWORD PTR [r14],r9
   14000241b:	mov    QWORD PTR [r15],rax
   14000241e:	mov    BYTE PTR [r9],0x0
   140002422:	test   DWORD PTR [rsp+0x58],0x400
   14000242a:	je     0x140002460
   14000242c:	movzx  ebx,BYTE PTR [rsp+0x58]
   140002431:	mov    r8,rdx
   140002434:	mov    edx,ebx
   140002436:	call   0x140007c76
   14000243b:	test   ebx,ebx
   14000243d:	jne    0x140002447
   14000243f:	mov    QWORD PTR [r14],rsi
   140002442:	mov    QWORD PTR [r15],rdi
   140002445:	jmp    0x140002460
   140002447:	test   rdi,rdi
   14000244a:	je     0x140002478
   14000244c:	lea    rax,[rdi-0x1]
   140002450:	mov    QWORD PTR [r15],0x1
   140002457:	add    rax,rsi
   14000245a:	mov    QWORD PTR [r14],rax
   14000245d:	mov    BYTE PTR [rax],0x0
   140002460:	test   rdi,rdi
   140002463:	je     0x140002478
   140002465:	test   DWORD PTR [rsp+0x58],0x800
   14000246d:	je     0x140002478
   14000246f:	mov    QWORD PTR [r14],rsi
   140002472:	mov    QWORD PTR [r15],rdi
   140002475:	mov    BYTE PTR [rsi],0x0
   140002478:	mov    rbx,QWORD PTR [rsp+0x30]
   14000247d:	xor    eax,eax
   14000247f:	mov    rsi,QWORD PTR [rsp+0x38]
   140002484:	mov    rdi,QWORD PTR [rsp+0x40]
   140002489:	mov    r14,QWORD PTR [rsp+0x48]
   14000248e:	add    rsp,0x20
   140002492:	pop    r15
   140002494:	ret    
   140002495:	int3   
   140002496:	int3   
   140002497:	int3   
   140002498:	int3   
   140002499:	int3   
   14000249a:	int3   
   14000249b:	int3   
   14000249c:	rex push rbx
   14000249e:	sub    rsp,0x20
   1400024a2:	mov    rbx,rcx
   1400024a5:	mov    rcx,QWORD PTR [rcx]
   1400024a8:	call   QWORD PTR [rip+0x5f62]        # 0x140008410
   1400024ae:	and    QWORD PTR [rbx],0x0
   1400024b2:	mov    eax,0x1
   1400024b7:	add    rsp,0x20
   1400024bb:	pop    rbx
   1400024bc:	ret    
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	int3   
   1400024c1:	int3   
   1400024c2:	int3   
   1400024c3:	int3   
   1400024c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400024c9:	push   rbp
   1400024ca:	push   rbx
   1400024cb:	push   rsi
   1400024cc:	push   rdi
   1400024cd:	push   r12
   1400024cf:	push   r13
   1400024d1:	push   r14
   1400024d3:	push   r15
   1400024d5:	mov    rbp,rsp
   1400024d8:	sub    rsp,0x68
   1400024dc:	mov    r15,QWORD PTR [rcx+0x18]
   1400024e0:	xor    esi,esi
   1400024e2:	mov    DWORD PTR [rcx+0x39c],esi
   1400024e8:	mov    rbx,rcx
   1400024eb:	mov    rcx,r15
   1400024ee:	mov    DWORD PTR [rbp-0x20],esi
   1400024f1:	mov    edi,esi
   1400024f3:	mov    QWORD PTR [rbp-0x10],rsi
   1400024f7:	mov    r13d,esi
   1400024fa:	mov    QWORD PTR [rbp-0x18],rsi
   1400024fe:	mov    r12d,esi
   140002501:	call   QWORD PTR [rip+0x5eb1]        # 0x1400083b8
   140002507:	mov    r14,rax
   14000250a:	lea    r9,[rbp-0x10]
   14000250e:	test   rax,rax
   140002511:	lea    r8,[rbp-0x20]
   140002515:	lea    rax,[rbp-0x18]
   140002519:	mov    rdx,r14
   14000251c:	lea    rcx,[rip+0x6785]        # 0x140008ca8
   140002523:	mov    QWORD PTR [rsp+0x20],rax
   140002528:	setne  sil
   14000252c:	call   0x1400060b0
   140002531:	sub    esi,0x1
   140002534:	je     0x140002540
   140002536:	cmp    esi,0x1
   140002539:	jne    0x140002549
   14000253b:	mov    rcx,r15
   14000253e:	jmp    0x140002543
   140002540:	mov    rcx,r14
   140002543:	call   QWORD PTR [rip+0x5ec7]        # 0x140008410
   140002549:	mov    rsi,QWORD PTR [rbp-0x18]
   14000254d:	lea    rcx,[rip+0x6754]        # 0x140008ca8
   140002554:	mov    r14,QWORD PTR [rbp-0x10]
   140002558:	mov    r9,rsi
   14000255b:	mov    edx,DWORD PTR [rbp-0x20]
   14000255e:	mov    r8,r14
   140002561:	and    DWORD PTR [rsp+0x20],edi
   140002565:	call   QWORD PTR [rip+0x5ddd]        # 0x140008348
   14000256b:	mov    QWORD PTR [rbx+0x40],rax
   14000256f:	test   r14,r14
   140002572:	je     0x14000257d
   140002574:	mov    rcx,r14
   140002577:	call   QWORD PTR [rip+0x5e93]        # 0x140008410
   14000257d:	xor    r14d,r14d
   140002580:	test   rsi,rsi
   140002583:	je     0x14000258e
   140002585:	mov    rcx,rsi
   140002588:	call   QWORD PTR [rip+0x5e82]        # 0x140008410
   14000258e:	mov    rax,QWORD PTR [rbx+0x180]
   140002595:	cmp    DWORD PTR [rax],r14d
   140002598:	je     0x1400025ac
   14000259a:	mov    r8d,0x62
   1400025a0:	lea    rdx,[rip+0x6771]        # 0x140008d18
   1400025a7:	jmp    0x140002997
   1400025ac:	mov    rcx,QWORD PTR [rbx+0x40]
   1400025b0:	test   rcx,rcx
   1400025b3:	jne    0x1400025c7
   1400025b5:	call   QWORD PTR [rip+0x5a9d]        # 0x140008058
   1400025bb:	lea    rdx,[rip+0x678e]        # 0x140008d50
   1400025c2:	jmp    0x14000298e
   1400025c7:	mov    rdx,QWORD PTR [rbx+0x38]
   1400025cb:	xor    r9d,r9d
   1400025ce:	movzx  r8d,WORD PTR [rdx+0x24]
   1400025d3:	mov    rdx,QWORD PTR [rdx+0x18]
   1400025d7:	call   QWORD PTR [rip+0x5d3b]        # 0x140008318
   1400025dd:	mov    QWORD PTR [rbx+0x48],rax
   1400025e1:	mov    rax,QWORD PTR [rbx+0x180]
   1400025e8:	cmp    DWORD PTR [rax],r14d
   1400025eb:	je     0x1400025f5
   1400025ed:	mov    r8d,0x6e
   1400025f3:	jmp    0x1400025a0
   1400025f5:	cmp    QWORD PTR [rbx+0x48],r14
   1400025f9:	jne    0x140002629
   1400025fb:	call   QWORD PTR [rip+0x5a57]        # 0x140008058
   140002601:	mov    r8,QWORD PTR [rbx+0x38]
   140002605:	lea    rdx,[rip+0x6784]        # 0x140008d90
   14000260c:	mov    DWORD PTR [rbx+0x39c],eax
   140002612:	mov    r9d,eax
   140002615:	mov    ecx,DWORD PTR [rip+0xaa85]        # 0x14000d0a0
   14000261b:	mov    r8,QWORD PTR [r8+0x18]
   14000261f:	call   0x140007278
   140002624:	jmp    0x1400029a2
   140002629:	mov    ecx,0x1002
   14000262e:	call   QWORD PTR [rip+0x5df4]        # 0x140008428
   140002634:	mov    r12,rax
   140002637:	test   rax,rax
   14000263a:	jne    0x140002653
   14000263c:	mov    ecx,DWORD PTR [rip+0xaa5e]        # 0x14000d0a0
   140002642:	lea    rdx,[rip+0x678f]        # 0x140008dd8
   140002649:	call   0x140007278
   14000264e:	jmp    0x1400029a2
   140002653:	mov    r8,QWORD PTR [rbx+0x38]
   140002657:	mov    edx,0x801
   14000265c:	mov    rcx,rax
   14000265f:	mov    r8,QWORD PTR [r8+0x48]
   140002663:	call   0x140001e70
   140002668:	mov    r8d,eax
   14000266b:	test   eax,eax
   14000266d:	jns    0x14000267e
   14000266f:	movzx  eax,ax
   140002672:	lea    rdx,[rip+0x6797]        # 0x140008e10
   140002679:	jmp    0x140002991
   14000267e:	mov    r8,QWORD PTR [rbx+0x38]
   140002682:	mov    rcx,r12
   140002685:	mov    r8,QWORD PTR [r8+0x58]
   140002689:	call   0x14000211c
   14000268e:	mov    r8d,eax
   140002691:	test   eax,eax
   140002693:	jns    0x1400026a4
   140002695:	movzx  eax,ax
   140002698:	lea    rdx,[rip+0x67a9]        # 0x140008e48
   14000269f:	jmp    0x140002991
   1400026a4:	mov    rcx,r12
   1400026a7:	call   QWORD PTR [rip+0x5d4b]        # 0x1400083f8
   1400026ad:	mov    ecx,DWORD PTR [rip+0xa9ed]        # 0x14000d0a0
   1400026b3:	lea    rdx,[rip+0x67be]        # 0x140008e78
   1400026ba:	mov    r14,rax
   1400026bd:	neg    rax
   1400026c0:	mov    r8,r14
   1400026c3:	sbb    esi,esi
   1400026c5:	and    esi,0x2
   1400026c8:	call   0x140007278
   1400026cd:	sub    esi,0x1
   1400026d0:	je     0x1400026dc
   1400026d2:	cmp    esi,0x1
   1400026d5:	jne    0x1400026e5
   1400026d7:	mov    rcx,r14
   1400026da:	jmp    0x1400026df
   1400026dc:	mov    rcx,r12
   1400026df:	call   QWORD PTR [rip+0x5d2b]        # 0x140008410
   1400026e5:	mov    rax,QWORD PTR [rbx+0x38]
   1400026e9:	xor    r14d,r14d
   1400026ec:	mov    ecx,r14d
   1400026ef:	mov    edx,0x800000
   1400026f4:	mov    r8,r12
   1400026f7:	cmp    DWORD PTR [rax+0x14],0x2
   1400026fb:	cmove  ecx,edx
   1400026fe:	xor    r9d,r9d
   140002701:	bts    ecx,0x8
   140002705:	xor    edx,edx
   140002707:	mov    DWORD PTR [rsp+0x30],ecx
   14000270b:	mov    rcx,QWORD PTR [rbx+0x48]
   14000270f:	mov    QWORD PTR [rsp+0x28],r14
   140002714:	mov    QWORD PTR [rsp+0x20],r14
   140002719:	call   QWORD PTR [rip+0x5c31]        # 0x140008350
   14000271f:	mov    QWORD PTR [rbx+0x50],rax
   140002723:	mov    rax,QWORD PTR [rbx+0x180]
   14000272a:	cmp    DWORD PTR [rax],r14d
   14000272d:	je     0x14000273a
   14000272f:	mov    r8d,0x94
   140002735:	jmp    0x1400025a0
   14000273a:	mov    rcx,QWORD PTR [rbx+0x50]
   14000273e:	test   rcx,rcx
   140002741:	jne    0x140002755
   140002743:	call   QWORD PTR [rip+0x590f]        # 0x140008058
   140002749:	lea    rdx,[rip+0x6758]        # 0x140008ea8
   140002750:	jmp    0x14000298e
   140002755:	mov    QWORD PTR [rsp+0x30],r14
   14000275a:	xor    r9d,r9d
   14000275d:	mov    DWORD PTR [rsp+0x28],r14d
   140002762:	xor    r8d,r8d
   140002765:	xor    edx,edx
   140002767:	mov    DWORD PTR [rsp+0x20],r14d
   14000276c:	call   QWORD PTR [rip+0x5bae]        # 0x140008320
   140002772:	mov    rcx,QWORD PTR [rbx+0x180]
   140002779:	mov    edi,eax
   14000277b:	cmp    DWORD PTR [rcx],r14d
   14000277e:	je     0x14000278b
   140002780:	mov    r8d,0xa5
   140002786:	jmp    0x1400025a0
   14000278b:	test   eax,eax
   14000278d:	jne    0x1400027a1
   14000278f:	call   QWORD PTR [rip+0x58c3]        # 0x140008058
   140002795:	lea    rdx,[rip+0x6744]        # 0x140008ee0
   14000279c:	jmp    0x14000298e
   1400027a1:	mov    rcx,QWORD PTR [rbx+0x50]
   1400027a5:	xor    edx,edx
   1400027a7:	call   QWORD PTR [rip+0x5b7b]        # 0x140008328
   1400027ad:	mov    edi,eax
   1400027af:	test   eax,eax
   1400027b1:	jne    0x1400027c5
   1400027b3:	call   QWORD PTR [rip+0x589f]        # 0x140008058
   1400027b9:	lea    rdx,[rip+0x6758]        # 0x140008f18
   1400027c0:	jmp    0x14000298e
   1400027c5:	mov    rcx,QWORD PTR [rbx+0x50]
   1400027c9:	lea    rdx,[rbp+0x48]
   1400027cd:	mov    DWORD PTR [rbp+0x58],r14d
   1400027d1:	mov    DWORD PTR [rbp+0x60],r14d
   1400027d5:	mov    DWORD PTR [rbp+0x48],r14d
   1400027d9:	call   QWORD PTR [rip+0x5b61]        # 0x140008340
   1400027df:	test   eax,eax
   1400027e1:	je     0x140002981
   1400027e7:	mov    r15,QWORD PTR [rbp+0x50]
   1400027eb:	mov    eax,DWORD PTR [rbp+0x48]
   1400027ee:	test   eax,eax
   1400027f0:	je     0x140002adf
   1400027f6:	test   r13,r13
   1400027f9:	je     0x140002807
   1400027fb:	mov    rcx,r13
   1400027fe:	call   QWORD PTR [rip+0x5c0c]        # 0x140008410
   140002804:	mov    eax,DWORD PTR [rbp+0x48]
   140002807:	mov    ecx,eax
   140002809:	call   QWORD PTR [rip+0x5c19]        # 0x140008428
   14000280f:	mov    r13,rax
   140002812:	test   rax,rax
   140002815:	je     0x140002ab5
   14000281b:	mov    r8d,DWORD PTR [rbp+0x48]
   14000281f:	lea    r9,[rbp+0x58]
   140002823:	mov    rcx,QWORD PTR [rbx+0x50]
   140002827:	mov    rdx,rax
   14000282a:	call   QWORD PTR [rip+0x5b40]        # 0x140008370
   140002830:	mov    edi,eax
   140002832:	mov    rax,QWORD PTR [rbx+0x180]
   140002839:	cmp    DWORD PTR [rax],r14d
   14000283c:	jne    0x140002aaa
   140002842:	test   edi,edi
   140002844:	je     0x140002a98
   14000284a:	mov    r8d,DWORD PTR [rbp+0x58]
   14000284e:	test   r8d,r8d
   140002851:	je     0x140002adf
   140002857:	lea    r9,[rbp+0x60]
   14000285b:	mov    QWORD PTR [rsp+0x20],r14
   140002860:	mov    rdx,r13
   140002863:	mov    rcx,r15
   140002866:	call   QWORD PTR [rip+0x59a4]        # 0x140008210
   14000286c:	mov    edi,eax
   14000286e:	mov    rax,QWORD PTR [rbx+0x180]
   140002875:	cmp    DWORD PTR [rax],r14d
   140002878:	jne    0x140002a8d
   14000287e:	test   edi,edi
   140002880:	je     0x140002a7b
   140002886:	mov    r8d,DWORD PTR [rbp+0x58]
   14000288a:	mov    r9d,DWORD PTR [rbp+0x60]
   14000288e:	cmp    r8d,r9d
   140002891:	jne    0x140002a59
   140002897:	cmp    DWORD PTR [rbx+0x170],r14d
   14000289e:	jne    0x140002917
   1400028a0:	mov    rcx,QWORD PTR [rbx+0x50]
   1400028a4:	lea    rax,[rbp-0x28]
   1400028a8:	mov    QWORD PTR [rsp+0x28],rax
   1400028ad:	lea    r9,[rbx+0x174]
   1400028b4:	lea    rax,[rbp-0x24]
   1400028b8:	mov    DWORD PTR [rbp-0x24],0x4
   1400028bf:	xor    r8d,r8d
   1400028c2:	mov    QWORD PTR [rsp+0x20],rax
   1400028c7:	mov    edx,0x20000005
   1400028cc:	mov    DWORD PTR [rbp-0x28],r14d
   1400028d0:	call   QWORD PTR [rip+0x5a62]        # 0x140008338
   1400028d6:	mov    edi,eax
   1400028d8:	mov    rax,QWORD PTR [rbx+0x180]
   1400028df:	cmp    DWORD PTR [rax],r14d
   1400028e2:	jne    0x140002a43
   1400028e8:	test   edi,edi
   1400028ea:	jne    0x140002913
   1400028ec:	call   QWORD PTR [rip+0x5766]        # 0x140008058
   1400028f2:	mov    DWORD PTR [rbx+0x39c],eax
   1400028f8:	call   QWORD PTR [rip+0x575a]        # 0x140008058
   1400028fe:	mov    ecx,DWORD PTR [rip+0xa79c]        # 0x14000d0a0
   140002904:	lea    rdx,[rip+0x677d]        # 0x140009088
   14000290b:	mov    r8d,eax
   14000290e:	call   0x140007278
   140002913:	mov    r8d,DWORD PTR [rbp+0x58]
   140002917:	add    DWORD PTR [rbx+0x170],r8d
   14000291e:	mov    rsi,QWORD PTR [rbx+0x160]
   140002925:	mov    r14d,DWORD PTR [rbx+0x170]
   14000292c:	test   rsi,rsi
   14000292f:	je     0x14000294c
   140002931:	mov    rcx,rsi
   140002934:	call   QWORD PTR [rip+0x5bce]        # 0x140008508
   14000293a:	mov    r8,QWORD PTR [rbx+0x168]
   140002941:	mov    ecx,r14d
   140002944:	mov    edx,DWORD PTR [rbx+0x174]
   14000294a:	call   rsi
   14000294c:	mov    rax,QWORD PTR [rbx+0x180]
   140002953:	xor    r14d,r14d
   140002956:	cmp    DWORD PTR [rax],r14d
   140002959:	jne    0x140002a4e
   14000295f:	mov    rcx,QWORD PTR [rbx+0x50]
   140002963:	lea    rdx,[rbp+0x48]
   140002967:	mov    DWORD PTR [rbp+0x58],r14d
   14000296b:	mov    DWORD PTR [rbp+0x60],r14d
   14000296f:	mov    DWORD PTR [rbp+0x48],r14d
   140002973:	call   QWORD PTR [rip+0x59c7]        # 0x140008340
   140002979:	test   eax,eax
   14000297b:	jne    0x1400027eb
   140002981:	call   QWORD PTR [rip+0x56d1]        # 0x140008058
   140002987:	lea    rdx,[rip+0x65ca]        # 0x140008f58
   14000298e:	mov    r8d,eax
   140002991:	mov    DWORD PTR [rbx+0x39c],eax
   140002997:	mov    ecx,DWORD PTR [rip+0xa703]        # 0x14000d0a0
   14000299d:	call   0x140007278
   1400029a2:	cmp    DWORD PTR [rbx+0x39c],r14d
   1400029a9:	jne    0x1400029c3
   1400029ab:	mov    rax,QWORD PTR [rbx+0x180]
   1400029b2:	cmp    DWORD PTR [rax],r14d
   1400029b5:	jne    0x1400029c3
   1400029b7:	call   QWORD PTR [rip+0x569b]        # 0x140008058
   1400029bd:	mov    DWORD PTR [rbx+0x39c],eax
   1400029c3:	test   r13,r13
   1400029c6:	je     0x1400029d1
   1400029c8:	mov    rcx,r13
   1400029cb:	call   QWORD PTR [rip+0x5a3f]        # 0x140008410
   1400029d1:	mov    rcx,QWORD PTR [rbx+0x50]
   1400029d5:	test   rcx,rcx
   1400029d8:	je     0x1400029e4
   1400029da:	call   QWORD PTR [rip+0x5950]        # 0x140008330
   1400029e0:	mov    QWORD PTR [rbx+0x50],r14
   1400029e4:	mov    rcx,QWORD PTR [rbx+0x48]
   1400029e8:	test   rcx,rcx
   1400029eb:	je     0x1400029f7
   1400029ed:	call   QWORD PTR [rip+0x593d]        # 0x140008330
   1400029f3:	mov    QWORD PTR [rbx+0x48],r14
   1400029f7:	mov    rcx,QWORD PTR [rbx+0x40]
   1400029fb:	test   rcx,rcx
   1400029fe:	je     0x140002a0a
   140002a00:	call   QWORD PTR [rip+0x592a]        # 0x140008330
   140002a06:	mov    QWORD PTR [rbx+0x40],r14
   140002a0a:	test   edi,edi
   140002a0c:	je     0x140002a22
   140002a0e:	mov    eax,DWORD PTR [rbx+0x170]
   140002a14:	cmp    eax,DWORD PTR [rbx+0x174]
   140002a1a:	jbe    0x140002a22
   140002a1c:	mov    DWORD PTR [rbx+0x174],eax
   140002a22:	test   r12,r12
   140002a25:	je     0x140002a30
   140002a27:	mov    rcx,r12
   140002a2a:	call   QWORD PTR [rip+0x59e0]        # 0x140008410
   140002a30:	mov    eax,edi
   140002a32:	add    rsp,0x68
   140002a36:	pop    r15
   140002a38:	pop    r14
   140002a3a:	pop    r13
   140002a3c:	pop    r12
   140002a3e:	pop    rdi
   140002a3f:	pop    rsi
   140002a40:	pop    rbx
   140002a41:	pop    rbp
   140002a42:	ret    
   140002a43:	mov    r8d,0xfe
   140002a49:	jmp    0x1400025a0
   140002a4e:	mov    r8d,0x10d
   140002a54:	jmp    0x1400025a0
   140002a59:	mov    ecx,DWORD PTR [rip+0xa641]        # 0x14000d0a0
   140002a5f:	lea    rdx,[rip+0x65ea]        # 0x140009050
   140002a66:	call   0x140007278
   140002a6b:	mov    ecx,0x70
   140002a70:	call   QWORD PTR [rip+0x55ea]        # 0x140008060
   140002a76:	jmp    0x1400029a2
   140002a7b:	call   QWORD PTR [rip+0x55d7]        # 0x140008058
   140002a81:	lea    rdx,[rip+0x6598]        # 0x140009020
   140002a88:	jmp    0x14000298e
   140002a8d:	mov    r8d,0xe3
   140002a93:	jmp    0x1400025a0
   140002a98:	call   QWORD PTR [rip+0x55ba]        # 0x140008058
   140002a9e:	lea    rdx,[rip+0x6543]        # 0x140008fe8
   140002aa5:	jmp    0x14000298e
   140002aaa:	mov    r8d,0xd5
   140002ab0:	jmp    0x1400025a0
   140002ab5:	call   QWORD PTR [rip+0x559d]        # 0x140008058
   140002abb:	mov    r8d,DWORD PTR [rbp+0x48]
   140002abf:	lea    rdx,[rip+0x64da]        # 0x140008fa0
   140002ac6:	mov    DWORD PTR [rbx+0x39c],eax
   140002acc:	mov    r9d,eax
   140002acf:	mov    ecx,DWORD PTR [rip+0xa5cb]        # 0x14000d0a0
   140002ad5:	call   0x140007278
   140002ada:	jmp    0x1400029a2
   140002adf:	mov    rcx,QWORD PTR [rbx+0x50]
   140002ae3:	lea    rax,[rbp-0x28]
   140002ae7:	mov    QWORD PTR [rsp+0x28],rax
   140002aec:	lea    r9,[rbp-0x1c]
   140002af0:	lea    rax,[rbp-0x24]
   140002af4:	mov    DWORD PTR [rbp-0x24],0x4
   140002afb:	xor    r8d,r8d
   140002afe:	mov    QWORD PTR [rsp+0x20],rax
   140002b03:	mov    edx,0x20000013
   140002b08:	mov    DWORD PTR [rbp-0x28],r14d
   140002b0c:	call   QWORD PTR [rip+0x5826]        # 0x140008338
   140002b12:	mov    edi,eax
   140002b14:	test   eax,eax
   140002b16:	jne    0x140002b2a
   140002b18:	call   QWORD PTR [rip+0x553a]        # 0x140008058
   140002b1e:	lea    rdx,[rip+0x6563]        # 0x140009088
   140002b25:	jmp    0x14000298e
   140002b2a:	mov    r8d,DWORD PTR [rbp-0x1c]
   140002b2e:	cmp    r8d,0xc8
   140002b35:	je     0x1400029a2
   140002b3b:	mov    DWORD PTR [rbx+0x39c],r8d
   140002b42:	lea    rdx,[rip+0x6577]        # 0x1400090c0
   140002b49:	mov    ecx,DWORD PTR [rip+0xa551]        # 0x14000d0a0
   140002b4f:	call   0x140007278
   140002b54:	mov    ecx,0x2
   140002b59:	mov    edi,r14d
   140002b5c:	jmp    0x140002a70
   140002b61:	int3   
   140002b62:	int3   
   140002b63:	int3   
   140002b64:	int3   
   140002b65:	int3   
   140002b66:	int3   
   140002b67:	int3   
   140002b68:	mov    QWORD PTR [rsp+0x18],rbx
   140002b6d:	push   rbp
   140002b6e:	push   rsi
   140002b6f:	push   rdi
   140002b70:	push   r12
   140002b72:	push   r13
   140002b74:	push   r14
   140002b76:	push   r15
   140002b78:	mov    eax,0x1060
   140002b7d:	call   0x140007cb0
   140002b82:	sub    rsp,rax
   140002b85:	mov    rax,QWORD PTR [rip+0xa47c]        # 0x14000d008
   140002b8c:	xor    rax,rsp
   140002b8f:	mov    QWORD PTR [rsp+0x1050],rax
   140002b97:	mov    rbp,rcx
   140002b9a:	mov    QWORD PTR [rsp+0x30],rdx
   140002b9f:	mov    esi,0x2548
   140002ba4:	mov    ecx,esi
   140002ba6:	call   QWORD PTR [rip+0x587c]        # 0x140008428
   140002bac:	xor    ebx,ebx
   140002bae:	mov    rdi,rax
   140002bb1:	test   rax,rax
   140002bb4:	jne    0x140002bbd
   140002bb6:	xor    eax,eax
   140002bb8:	jmp    0x140002e4a
   140002bbd:	mov    r8,rsi
   140002bc0:	xor    edx,edx
   140002bc2:	mov    rcx,rax
   140002bc5:	call   0x140007c76
   140002bca:	lea    rax,[rdi+0x68]
   140002bce:	mov    DWORD PTR [rdi],0x68
   140002bd4:	mov    QWORD PTR [rdi+0x8],rax
   140002bd8:	lea    r14,[rdi+0x14f8]
   140002bdf:	mov    ecx,0x81
   140002be4:	mov    DWORD PTR [rdi+0x20],0x101
   140002beb:	mov    DWORD PTR [rdi+0x30],ecx
   140002bee:	mov    eax,0x20
   140002bf3:	mov    DWORD PTR [rdi+0x10],eax
   140002bf6:	lea    rax,[rdi+0xa8]
   140002bfd:	mov    QWORD PTR [rdi+0x18],rax
   140002c01:	lea    rax,[rdi+0x2aa]
   140002c08:	mov    QWORD PTR [rdi+0x28],rax
   140002c0c:	lea    rax,[rdi+0x3ac]
   140002c13:	mov    QWORD PTR [rdi+0x38],rax
   140002c17:	lea    rax,[rdi+0x4ae]
   140002c1e:	mov    DWORD PTR [rdi+0x40],ecx
   140002c21:	mov    QWORD PTR [rdi+0x48],rax
   140002c25:	mov    DWORD PTR [rdi+0x50],0x825
   140002c2c:	mov    QWORD PTR [rdi+0x58],r14
   140002c30:	mov    DWORD PTR [rdi+0x60],0x825
   140002c37:	mov    r13,QWORD PTR [rbp+0x18]
   140002c3b:	mov    rcx,r13
   140002c3e:	call   QWORD PTR [rip+0x5774]        # 0x1400083b8
   140002c44:	mov    esi,ebx
   140002c46:	mov    r9,rdi
   140002c49:	test   rax,rax
   140002c4c:	mov    r8d,0x10000000
   140002c52:	mov    rcx,rax
   140002c55:	mov    r15,rax
   140002c58:	setne  sil
   140002c5c:	xor    edx,edx
   140002c5e:	call   QWORD PTR [rip+0x56fc]        # 0x140008360
   140002c64:	mov    r12d,eax
   140002c67:	sub    esi,0x1
   140002c6a:	je     0x140002c76
   140002c6c:	cmp    esi,0x1
   140002c6f:	jne    0x140002c7f
   140002c71:	mov    rcx,r13
   140002c74:	jmp    0x140002c79
   140002c76:	mov    rcx,r15
   140002c79:	call   QWORD PTR [rip+0x5791]        # 0x140008410
   140002c7f:	test   r12d,r12d
   140002c82:	jne    0x140002c92
   140002c84:	mov    rcx,rdi
   140002c87:	call   QWORD PTR [rip+0x5783]        # 0x140008410
   140002c8d:	jmp    0x140002bb6
   140002c92:	movzx  eax,WORD PTR [r14]
   140002c96:	mov    esi,ebx
   140002c98:	mov    ecx,ebx
   140002c9a:	mov    r15d,0x1
   140002ca0:	test   ax,ax
   140002ca3:	je     0x140002d8c
   140002ca9:	lea    r13d,[r15+0x1f]
   140002cad:	cmp    ax,r13w
   140002cb1:	jne    0x140002cb6
   140002cb3:	add    esi,r15d
   140002cb6:	add    ecx,r15d
   140002cb9:	mov    eax,ecx
   140002cbb:	movzx  eax,WORD PTR [rdi+rcx*2+0x14f8]
   140002cc3:	test   ax,ax
   140002cc6:	jne    0x140002cad
   140002cc8:	test   esi,esi
   140002cca:	je     0x140002d8c
   140002cd0:	mov    rcx,r14
   140002cd3:	call   QWORD PTR [rip+0x5407]        # 0x1400080e0
   140002cd9:	lea    ecx,[rax+rsi*2]
   140002cdc:	cmp    ecx,0x824
   140002ce2:	jbe    0x140002cf8
   140002ce4:	mov    ecx,DWORD PTR [rip+0xa3b6]        # 0x14000d0a0
   140002cea:	lea    rdx,[rip+0x63ff]        # 0x1400090f0
   140002cf1:	call   0x140007278
   140002cf6:	jmp    0x140002c84
   140002cf8:	xor    edx,edx
   140002cfa:	lea    rcx,[rsp+0x40]
   140002cff:	mov    r8d,0x1002
   140002d05:	call   0x140007c76
   140002d0a:	movzx  edx,WORD PTR [r14]
   140002d0e:	mov    r8d,ebx
   140002d11:	mov    ecx,ebx
   140002d13:	jmp    0x140002d57
   140002d15:	mov    eax,ecx
   140002d17:	cmp    dx,r13w
   140002d1b:	jne    0x140002d43
   140002d1d:	add    ecx,r15d
   140002d20:	mov    edx,0x25
   140002d25:	mov    WORD PTR [rsp+rax*2+0x40],dx
   140002d2a:	mov    edx,0x32
   140002d2f:	mov    WORD PTR [rsp+rcx*2+0x40],dx
   140002d34:	add    ecx,r15d
   140002d37:	mov    edx,0x30
   140002d3c:	mov    WORD PTR [rsp+rcx*2+0x40],dx
   140002d41:	jmp    0x140002d48
   140002d43:	mov    WORD PTR [rsp+rax*2+0x40],dx
   140002d48:	add    r8d,r15d
   140002d4b:	add    ecx,r15d
   140002d4e:	movzx  edx,WORD PTR [rdi+r8*2+0x14f8]
   140002d57:	test   dx,dx
   140002d5a:	jne    0x140002d15
   140002d5c:	lea    r8,[rsp+0x40]
   140002d61:	mov    edx,0x825
   140002d66:	mov    rcx,r14
   140002d69:	call   0x140001e70
   140002d6e:	test   eax,eax
   140002d70:	jns    0x140002d8c
   140002d72:	mov    ecx,DWORD PTR [rip+0xa328]        # 0x14000d0a0
   140002d78:	lea    rdx,[rip+0x63a9]        # 0x140009128
   140002d7f:	mov    r8d,eax
   140002d82:	call   0x140007278
   140002d87:	jmp    0x140002e3f
   140002d8c:	mov    QWORD PTR [rbp+0x38],rdi
   140002d90:	mov    r8d,DWORD PTR [rdi+0x14]
   140002d94:	lea    eax,[r8-0x1]
   140002d98:	cmp    eax,r15d
   140002d9b:	ja     0x140002daf
   140002d9d:	mov    rdx,QWORD PTR [rsp+0x30]
   140002da2:	mov    rcx,rbp
   140002da5:	call   0x1400024c4
   140002daa:	mov    r12d,eax
   140002dad:	jmp    0x140002dcc
   140002daf:	mov    ecx,DWORD PTR [rip+0xa2eb]        # 0x14000d0a0
   140002db5:	lea    rdx,[rip+0x639c]        # 0x140009158
   140002dbc:	call   0x140007278
   140002dc1:	mov    ecx,0x2ee6
   140002dc6:	call   QWORD PTR [rip+0x5294]        # 0x140008060
   140002dcc:	mov    rax,QWORD PTR [rbp+0x38]
   140002dd0:	mov    r15,QWORD PTR [rax+0x18]
   140002dd4:	mov    rcx,r15
   140002dd7:	call   QWORD PTR [rip+0x561b]        # 0x1400083f8
   140002ddd:	mov    edx,0x105
   140002de2:	mov    DWORD PTR [rsp+0x28],0x900
   140002dea:	mov    rcx,rax
   140002ded:	mov    r8,rax
   140002df0:	neg    rcx
   140002df3:	mov    r14,rax
   140002df6:	lea    rcx,[rbp+0x294]
   140002dfd:	sbb    esi,esi
   140002dff:	and    esi,0x2
   140002e02:	call   0x140001d00
   140002e07:	test   eax,eax
   140002e09:	jns    0x140002e20
   140002e0b:	mov    ecx,DWORD PTR [rip+0xa28f]        # 0x14000d0a0
   140002e11:	lea    rdx,[rip+0x7d28]        # 0x14000ab40
   140002e18:	mov    r8d,eax
   140002e1b:	call   0x140007278
   140002e20:	sub    esi,0x1
   140002e23:	je     0x140002e2f
   140002e25:	cmp    esi,0x1
   140002e28:	jne    0x140002e38
   140002e2a:	mov    rcx,r14
   140002e2d:	jmp    0x140002e32
   140002e2f:	mov    rcx,r15
   140002e32:	call   QWORD PTR [rip+0x55d8]        # 0x140008410
   140002e38:	mov    QWORD PTR [rbp+0x38],rbx
   140002e3c:	mov    ebx,r12d
   140002e3f:	mov    rcx,rdi
   140002e42:	call   QWORD PTR [rip+0x55c8]        # 0x140008410
   140002e48:	mov    eax,ebx
   140002e4a:	mov    rcx,QWORD PTR [rsp+0x1050]
   140002e52:	xor    rcx,rsp
   140002e55:	call   0x1400076f0
   140002e5a:	mov    rbx,QWORD PTR [rsp+0x10b0]
   140002e62:	add    rsp,0x1060
   140002e69:	pop    r15
   140002e6b:	pop    r14
   140002e6d:	pop    r13
   140002e6f:	pop    r12
   140002e71:	pop    rdi
   140002e72:	pop    rsi
   140002e73:	pop    rbp
   140002e74:	ret    
   140002e75:	int3   
   140002e76:	int3   
   140002e77:	int3   
   140002e78:	int3   
   140002e79:	int3   
   140002e7a:	int3   
   140002e7b:	int3   
   140002e7c:	int3   
   140002e7d:	int3   
   140002e7e:	int3   
   140002e7f:	int3   
   140002e80:	mov    QWORD PTR [rsp+0x8],rbx
   140002e85:	mov    QWORD PTR [rsp+0x10],rsi
   140002e8a:	push   rdi
   140002e8b:	sub    rsp,0x20
   140002e8f:	mov    rsi,r8
   140002e92:	mov    edi,edx
   140002e94:	mov    r8d,ecx
   140002e97:	mov    ebx,ecx
   140002e99:	mov    ecx,DWORD PTR [rip+0xa201]        # 0x14000d0a0
   140002e9f:	mov    r9d,edx
   140002ea2:	lea    rdx,[rip+0x62d7]        # 0x140009180
   140002ea9:	call   0x140007278
   140002eae:	mov    rax,QWORD PTR [rsi]
   140002eb1:	xor    r9d,r9d
   140002eb4:	mov    DWORD PTR [rax+0x54],ebx
   140002eb7:	lea    r8d,[r9+0x1]
   140002ebb:	mov    rax,QWORD PTR [rsi]
   140002ebe:	mov    DWORD PTR [rax+0x58],edi
   140002ec1:	mov    rcx,QWORD PTR [rsi]
   140002ec4:	mov    edx,DWORD PTR [rcx+0x1c]
   140002ec7:	mov    rcx,QWORD PTR [rcx+0x20]
   140002ecb:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ed0:	mov    rsi,QWORD PTR [rsp+0x38]
   140002ed5:	add    rsp,0x20
   140002ed9:	pop    rdi
   140002eda:	rex.W jmp QWORD PTR [rip+0x53af]        # 0x140008290
   140002ee1:	int3   
   140002ee2:	int3   
   140002ee3:	int3   
   140002ee4:	int3   
   140002ee5:	int3   
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	mov    QWORD PTR [rsp+0x18],rbx
   140002eed:	mov    QWORD PTR [rsp+0x20],rsi
   140002ef2:	push   rbp
   140002ef3:	push   rdi
   140002ef4:	push   r14
   140002ef6:	lea    rbp,[rsp-0x47]
   140002efb:	sub    rsp,0xa0
   140002f02:	mov    rax,QWORD PTR [rip+0xa0ff]        # 0x14000d008
   140002f09:	xor    rax,rsp
   140002f0c:	mov    QWORD PTR [rbp+0x3f],rax
   140002f10:	cmp    DWORD PTR [rcx+0x178],0x0
   140002f17:	mov    rbx,rcx
   140002f1a:	je     0x140003109
   140002f20:	mov    QWORD PTR [rbp+0xf],rcx
   140002f24:	add    rcx,0x188
   140002f2b:	mov    DWORD PTR [rbp+0x7],edx
   140002f2e:	call   0x140006eb4
   140002f33:	test   eax,eax
   140002f35:	je     0x140003109
   140002f3b:	lea    rax,[rbp+0x17]
   140002f3f:	mov    QWORD PTR [rsp+0x40],rax
   140002f44:	lea    r9,[rip+0xffffffffffffe695]        # 0x1400015e0
   140002f4b:	mov    DWORD PTR [rsp+0x38],0x1
   140002f53:	lea    rax,[rip+0xffffffffffffe746]        # 0x1400016a0
   140002f5a:	mov    QWORD PTR [rsp+0x30],rax
   140002f5f:	lea    r8,[rip+0xffffffffffffe3fa]        # 0x140001360
   140002f66:	lea    rax,[rip+0xffffffffffffe793]        # 0x140001700
   140002f6d:	mov    QWORD PTR [rsp+0x28],rax
   140002f72:	lea    rdx,[rip+0xffffffffffffe3d7]        # 0x140001350
   140002f79:	lea    rax,[rip+0xffffffffffffe6c0]        # 0x140001640
   140002f80:	lea    rcx,[rip+0xffffffffffffe3b9]        # 0x140001340
   140002f87:	mov    QWORD PTR [rsp+0x20],rax
   140002f8c:	call   QWORD PTR [rip+0x50ae]        # 0x140008040
   140002f92:	mov    rdi,rax
   140002f95:	test   rax,rax
   140002f98:	jne    0x140002fcf
   140002f9a:	mov    r8d,DWORD PTR [rbp+0x1f]
   140002f9e:	lea    rdx,[rip+0x620b]        # 0x1400091b0
   140002fa5:	mov    eax,r8d
   140002fa8:	neg    eax
   140002faa:	mov    eax,r8d
   140002fad:	sbb    ecx,ecx
   140002faf:	and    ecx,DWORD PTR [rbp+0x1b]
   140002fb2:	neg    eax
   140002fb4:	mov    DWORD PTR [rsp+0x20],ecx
   140002fb8:	mov    ecx,DWORD PTR [rip+0xa0e2]        # 0x14000d0a0
   140002fbe:	sbb    r9d,r9d
   140002fc1:	and    r9d,DWORD PTR [rbp+0x17]
   140002fc5:	call   0x140007278
   140002fca:	jmp    0x140003109
   140002fcf:	or     QWORD PTR [rbp-0x1],0xffffffffffffffff
   140002fd4:	lea    rsi,[rbx+0x58]
   140002fd8:	lea    r14,[rip+0x5b79]        # 0x140008b58
   140002fdf:	mov    DWORD PTR [rsp+0x20],0x80
   140002fe7:	mov    rdx,rsi
   140002fea:	mov    QWORD PTR [rbp-0x9],r14
   140002fee:	mov    r9d,0x3
   140002ff4:	lea    rcx,[rbp-0x9]
   140002ff8:	mov    r8d,0x80000000
   140002ffe:	call   0x140001148
   140003003:	test   eax,eax
   140003005:	je     0x1400030c4
   14000300b:	lea    r8,[rbp+0x27]
   14000300f:	mov    rcx,rdi
   140003012:	lea    rdx,[rbp-0x9]
   140003016:	call   QWORD PTR [rip+0x5014]        # 0x140008030
   14000301c:	mov    ebx,eax
   14000301e:	test   eax,eax
   140003020:	jne    0x140003052
   140003022:	mov    r8d,DWORD PTR [rbp+0x1f]
   140003026:	mov    ecx,r8d
   140003029:	neg    ecx
   14000302b:	mov    ecx,r8d
   14000302e:	sbb    edx,edx
   140003030:	and    edx,DWORD PTR [rbp+0x1b]
   140003033:	neg    ecx
   140003035:	mov    DWORD PTR [rsp+0x20],edx
   140003039:	mov    ecx,DWORD PTR [rip+0xa061]        # 0x14000d0a0
   14000303f:	lea    rdx,[rip+0x61ba]        # 0x140009200
   140003046:	sbb    r9d,r9d
   140003049:	and    r9d,DWORD PTR [rbp+0x17]
   14000304d:	call   0x140007278
   140003052:	lea    rcx,[rbp-0x9]
   140003056:	call   0x1400012e0
   14000305b:	test   ebx,ebx
   14000305d:	je     0x1400030c4
   14000305f:	lea    rax,[rbp+0x7]
   140003063:	xor    r9d,r9d
   140003066:	mov    QWORD PTR [rsp+0x30],rax
   14000306b:	lea    r8,[rip+0x5c11]        # 0x140008c83
   140003072:	and    QWORD PTR [rsp+0x28],0x0
   140003078:	lea    rax,[rip+0xffffffffffffe6f1]        # 0x140001770
   14000307f:	mov    rdx,rsi
   140003082:	mov    QWORD PTR [rsp+0x20],rax
   140003087:	mov    rcx,rdi
   14000308a:	call   QWORD PTR [rip+0x4fa8]        # 0x140008038
   140003090:	test   eax,eax
   140003092:	jne    0x1400030c4
   140003094:	mov    r8d,DWORD PTR [rbp+0x1f]
   140003098:	lea    rdx,[rip+0x61b1]        # 0x140009250
   14000309f:	mov    eax,r8d
   1400030a2:	neg    eax
   1400030a4:	mov    eax,r8d
   1400030a7:	sbb    ecx,ecx
   1400030a9:	and    ecx,DWORD PTR [rbp+0x1b]
   1400030ac:	neg    eax
   1400030ae:	mov    DWORD PTR [rsp+0x20],ecx
   1400030b2:	mov    ecx,DWORD PTR [rip+0x9fe8]        # 0x14000d0a0
   1400030b8:	sbb    r9d,r9d
   1400030bb:	and    r9d,DWORD PTR [rbp+0x17]
   1400030bf:	call   0x140007278
   1400030c4:	mov    rcx,rdi
   1400030c7:	call   QWORD PTR [rip+0x4f7b]        # 0x140008048
   1400030cd:	test   eax,eax
   1400030cf:	jne    0x1400030e3
   1400030d1:	mov    ecx,DWORD PTR [rip+0x9fc9]        # 0x14000d0a0
   1400030d7:	lea    rdx,[rip+0x61ba]        # 0x140009298
   1400030de:	call   0x140007278
   1400030e3:	cmp    QWORD PTR [rbp-0x1],0xffffffffffffffff
   1400030e8:	mov    QWORD PTR [rbp-0x9],r14
   1400030ec:	je     0x140003109
   1400030ee:	mov    ecx,DWORD PTR [rip+0x9fac]        # 0x14000d0a0
   1400030f4:	lea    rdx,[rip+0x5525]        # 0x140008620
   1400030fb:	call   0x140007278
   140003100:	lea    rcx,[rbp-0x9]
   140003104:	call   0x1400012e0
   140003109:	mov    eax,0x1
   14000310e:	mov    rcx,QWORD PTR [rbp+0x3f]
   140003112:	xor    rcx,rsp
   140003115:	call   0x1400076f0
   14000311a:	lea    r11,[rsp+0xa0]
   140003122:	mov    rbx,QWORD PTR [r11+0x30]
   140003126:	mov    rsi,QWORD PTR [r11+0x38]
   14000312a:	mov    rsp,r11
   14000312d:	pop    r14
   14000312f:	pop    rdi
   140003130:	pop    rbp
   140003131:	ret    
   140003132:	int3   
   140003133:	int3   
   140003134:	int3   
   140003135:	int3   
   140003136:	int3   
   140003137:	int3   
   140003138:	mov    rax,rsp
   14000313b:	mov    QWORD PTR [rax+0x10],rbx
   14000313f:	mov    QWORD PTR [rax+0x18],rsi
   140003143:	mov    QWORD PTR [rax+0x20],rdi
   140003147:	push   rbp
   140003148:	lea    rbp,[rax-0x198]
   14000314f:	sub    rsp,0x290
   140003156:	mov    rax,QWORD PTR [rip+0x9eab]        # 0x14000d008
   14000315d:	xor    rax,rsp
   140003160:	mov    QWORD PTR [rbp+0x180],rax
   140003167:	mov    rdi,rcx
   14000316a:	test   rcx,rcx
   14000316d:	je     0x1400033f8
   140003173:	cmp    BYTE PTR [rcx],0x0
   140003176:	je     0x1400033f8
   14000317c:	call   QWORD PTR [rip+0x509e]        # 0x140008220
   140003182:	add    eax,0x2
   140003185:	cmp    eax,0x104
   14000318a:	ja     0x1400033f8
   140003190:	lea    rax,[rip+0x6129]        # 0x1400092c0
   140003197:	mov    r9,rdi
   14000319a:	lea    r8,[rip+0x57bf]        # 0x140008960
   1400031a1:	mov    QWORD PTR [rsp+0x20],rax
   1400031a6:	mov    edx,0x105
   1400031ab:	lea    rcx,[rbp+0x70]
   1400031af:	call   0x140001008
   1400031b4:	test   eax,eax
   1400031b6:	js     0x140003403
   1400031bc:	lea    rdx,[rsp+0x30]
   1400031c1:	lea    rcx,[rbp+0x70]
   1400031c5:	call   QWORD PTR [rip+0x4f2d]        # 0x1400080f8
   1400031cb:	mov    rsi,rax
   1400031ce:	cmp    rax,0xffffffffffffffff
   1400031d2:	jne    0x140003213
   1400031d4:	call   QWORD PTR [rip+0x4e7e]        # 0x140008058
   1400031da:	cmp    eax,0x2
   1400031dd:	je     0x1400033bc
   1400031e3:	call   QWORD PTR [rip+0x4e6f]        # 0x140008058
   1400031e9:	cmp    eax,0x12
   1400031ec:	je     0x1400033bc
   1400031f2:	call   QWORD PTR [rip+0x4e60]        # 0x140008058
   1400031f8:	cmp    eax,0x3
   1400031fb:	je     0x1400033bc
   140003201:	call   QWORD PTR [rip+0x4e51]        # 0x140008058
   140003207:	lea    rdx,[rip+0x60ba]        # 0x1400092c8
   14000320e:	jmp    0x1400033ae
   140003213:	mov    rcx,rdi
   140003216:	call   QWORD PTR [rip+0x5004]        # 0x140008220
   14000321c:	lea    rcx,[rsp+0x5c]
   140003221:	mov    ebx,eax
   140003223:	call   QWORD PTR [rip+0x4ff7]        # 0x140008220
   140003229:	lea    ecx,[rax+0x1]
   14000322c:	mov    eax,0x104
   140003231:	add    ecx,ebx
   140003233:	cmp    ecx,eax
   140003235:	jbe    0x140003256
   140003237:	mov    ecx,DWORD PTR [rip+0x9e63]        # 0x14000d0a0
   14000323d:	lea    r9,[rsp+0x5c]
   140003242:	mov    r8,rdi
   140003245:	mov    QWORD PTR [rsp+0x20],rax
   14000324a:	lea    rdx,[rip+0x60a7]        # 0x1400092f8
   140003251:	call   0x140007278
   140003256:	mov    rcx,rdi
   140003259:	call   QWORD PTR [rip+0x4fc1]        # 0x140008220
   14000325f:	lea    rcx,[rsp+0x5c]
   140003264:	mov    ebx,eax
   140003266:	call   QWORD PTR [rip+0x4fb4]        # 0x140008220
   14000326c:	lea    ecx,[rax+0x1]
   14000326f:	add    ecx,ebx
   140003271:	cmp    ecx,0x104
   140003277:	ja     0x14000334d
   14000327d:	lea    rdx,[rip+0x60a0]        # 0x140009324
   140003284:	lea    rcx,[rsp+0x5c]
   140003289:	call   QWORD PTR [rip+0x4e09]        # 0x140008098
   14000328f:	test   eax,eax
   140003291:	je     0x14000334d
   140003297:	lea    rdx,[rip+0x608a]        # 0x140009328
   14000329e:	lea    rcx,[rsp+0x5c]
   1400032a3:	call   QWORD PTR [rip+0x4def]        # 0x140008098
   1400032a9:	test   eax,eax
   1400032ab:	je     0x14000334d
   1400032b1:	lea    rax,[rsp+0x5c]
   1400032b6:	mov    r9,rdi
   1400032b9:	lea    r8,[rip+0x56a0]        # 0x140008960
   1400032c0:	mov    QWORD PTR [rsp+0x20],rax
   1400032c5:	mov    edx,0x105
   1400032ca:	lea    rcx,[rbp+0x70]
   1400032ce:	call   0x140001008
   1400032d3:	test   eax,eax
   1400032d5:	js     0x14000334d
   1400032d7:	mov    eax,DWORD PTR [rsp+0x30]
   1400032db:	test   al,0x1
   1400032dd:	je     0x140003315
   1400032df:	and    eax,0xfffffffe
   1400032e2:	lea    rcx,[rbp+0x70]
   1400032e6:	mov    edx,eax
   1400032e8:	call   QWORD PTR [rip+0x4d82]        # 0x140008070
   1400032ee:	test   eax,eax
   1400032f0:	jne    0x140003311
   1400032f2:	call   QWORD PTR [rip+0x4d60]        # 0x140008058
   1400032f8:	mov    ecx,DWORD PTR [rip+0x9da2]        # 0x14000d0a0
   1400032fe:	lea    r8,[rbp+0x70]
   140003302:	mov    r9d,eax
   140003305:	lea    rdx,[rip+0x6024]        # 0x140009330
   14000330c:	call   0x140007278
   140003311:	mov    eax,DWORD PTR [rsp+0x30]
   140003315:	lea    rcx,[rbp+0x70]
   140003319:	test   al,0x10
   14000331b:	je     0x140003324
   14000331d:	call   0x140003138
   140003322:	jmp    0x14000334d
   140003324:	call   QWORD PTR [rip+0x4e3e]        # 0x140008168
   14000332a:	test   eax,eax
   14000332c:	jne    0x14000334d
   14000332e:	call   QWORD PTR [rip+0x4d24]        # 0x140008058
   140003334:	mov    ecx,DWORD PTR [rip+0x9d66]        # 0x14000d0a0
   14000333a:	lea    r8,[rbp+0x70]
   14000333e:	mov    r9d,eax
   140003341:	lea    rdx,[rip+0x6020]        # 0x140009368
   140003348:	call   0x140007278
   14000334d:	lea    rdx,[rsp+0x30]
   140003352:	mov    rcx,rsi
   140003355:	call   QWORD PTR [rip+0x4ecd]        # 0x140008228
   14000335b:	test   eax,eax
   14000335d:	jne    0x140003213
   140003363:	call   QWORD PTR [rip+0x4cef]        # 0x140008058
   140003369:	cmp    eax,0x2
   14000336c:	je     0x140003394
   14000336e:	call   QWORD PTR [rip+0x4ce4]        # 0x140008058
   140003374:	cmp    eax,0x12
   140003377:	je     0x140003394
   140003379:	call   QWORD PTR [rip+0x4cd9]        # 0x140008058
   14000337f:	mov    ecx,DWORD PTR [rip+0x9d1b]        # 0x14000d0a0
   140003385:	lea    rdx,[rip+0x600c]        # 0x140009398
   14000338c:	mov    r8d,eax
   14000338f:	call   0x140007278
   140003394:	mov    rcx,rsi
   140003397:	call   QWORD PTR [rip+0x4d7b]        # 0x140008118
   14000339d:	test   eax,eax
   14000339f:	jne    0x1400033bc
   1400033a1:	call   QWORD PTR [rip+0x4cb1]        # 0x140008058
   1400033a7:	lea    rdx,[rip+0x6012]        # 0x1400093c0
   1400033ae:	mov    ecx,DWORD PTR [rip+0x9cec]        # 0x14000d0a0
   1400033b4:	mov    r8d,eax
   1400033b7:	call   0x140007278
   1400033bc:	mov    rcx,rdi
   1400033bf:	call   QWORD PTR [rip+0x4d43]        # 0x140008108
   1400033c5:	mov    ebx,eax
   1400033c7:	test   eax,eax
   1400033c9:	jne    0x1400033f4
   1400033cb:	call   QWORD PTR [rip+0x4c87]        # 0x140008058
   1400033d1:	cmp    eax,0x3
   1400033d4:	je     0x1400033f4
   1400033d6:	call   QWORD PTR [rip+0x4c7c]        # 0x140008058
   1400033dc:	mov    ecx,DWORD PTR [rip+0x9cbe]        # 0x14000d0a0
   1400033e2:	lea    rdx,[rip+0x5fff]        # 0x1400093e8
   1400033e9:	mov    r9d,eax
   1400033ec:	mov    r8,rdi
   1400033ef:	call   0x140007278
   1400033f4:	mov    eax,ebx
   1400033f6:	jmp    0x140003405
   1400033f8:	mov    ecx,0xa1
   1400033fd:	call   QWORD PTR [rip+0x4c5d]        # 0x140008060
   140003403:	xor    eax,eax
   140003405:	mov    rcx,QWORD PTR [rbp+0x180]
   14000340c:	xor    rcx,rsp
   14000340f:	call   0x1400076f0
   140003414:	lea    r11,[rsp+0x290]
   14000341c:	mov    rbx,QWORD PTR [r11+0x18]
   140003420:	mov    rsi,QWORD PTR [r11+0x20]
   140003424:	mov    rdi,QWORD PTR [r11+0x28]
   140003428:	mov    rsp,r11
   14000342b:	pop    rbp
   14000342c:	ret    
   14000342d:	int3   
   14000342e:	int3   
   14000342f:	int3   
   140003430:	int3   
   140003431:	int3   
   140003432:	int3   
   140003433:	int3   
   140003434:	mov    QWORD PTR [rsp+0x10],rbx
   140003439:	mov    QWORD PTR [rsp+0x18],rsi
   14000343e:	push   rbp
   14000343f:	push   r12
   140003441:	push   r13
   140003443:	push   r14
   140003445:	push   r15
   140003447:	lea    rbp,[rsp-0x70]
   14000344c:	sub    rsp,0x170
   140003453:	mov    rax,QWORD PTR [rip+0x9bae]        # 0x14000d008
   14000345a:	xor    rax,rsp
   14000345d:	mov    QWORD PTR [rbp+0x60],rax
   140003461:	mov    DWORD PTR [rsp+0x30],r8d
   140003466:	mov    r14,rcx
   140003469:	mov    QWORD PTR [rsp+0x40],rcx
   14000346e:	test   r8b,0x2
   140003472:	jne    0x14000378d
   140003478:	test   rcx,rcx
   14000347b:	jne    0x140003484
   14000347d:	xor    eax,eax
   14000347f:	jmp    0x140003792
   140003484:	xor    r12d,r12d
   140003487:	cmp    DWORD PTR [rcx+0x40],r12d
   14000348b:	jbe    0x14000378d
   140003491:	mov    eax,r12d
   140003494:	xor    r13d,r13d
   140003497:	imul   rbx,rax,0x3b0
   14000349e:	add    rbx,QWORD PTR [r14+0x48]
   1400034a2:	and    DWORD PTR [rbx+0x39c],0x0
   1400034a9:	cmp    DWORD PTR [rbx+0x3a0],r13d
   1400034b0:	jbe    0x140003780
   1400034b6:	mov    r14d,DWORD PTR [rsp+0x30]
   1400034bb:	mov    r8,QWORD PTR [rbx+0x3a8]
   1400034c2:	xor    r15d,r15d
   1400034c5:	mov    edx,r13d
   1400034c8:	add    rdx,rdx
   1400034cb:	mov    ecx,DWORD PTR [r8+rdx*8+0x8]
   1400034d0:	sub    ecx,0x1
   1400034d3:	je     0x140003618
   1400034d9:	sub    ecx,0x1
   1400034dc:	je     0x140003584
   1400034e2:	cmp    ecx,0x1
   1400034e5:	jne    0x140003736
   1400034eb:	cmp    DWORD PTR [rbx+0x290],r15d
   1400034f2:	jne    0x140003736
   1400034f8:	mov    rax,QWORD PTR [r8+rdx*8]
   1400034fc:	test   rax,rax
   1400034ff:	je     0x14000359a
   140003505:	lea    r9,[rbx+0x188]
   14000350c:	mov    QWORD PTR [rsp+0x20],rax
   140003511:	lea    r8,[rip+0x5448]        # 0x140008960
   140003518:	mov    edx,0x105
   14000351d:	lea    rcx,[rsp+0x50]
   140003522:	call   0x140001008
   140003527:	test   eax,eax
   140003529:	jns    0x140003537
   14000352b:	lea    rdx,[rip+0x5f2e]        # 0x140009460
   140003532:	jmp    0x1400035d6
   140003537:	mov    rdx,QWORD PTR [rbx+0x10]
   14000353b:	lea    rcx,[rsp+0x50]
   140003540:	xor    r8d,r8d
   140003543:	call   QWORD PTR [rip+0x4bc7]        # 0x140008110
   140003549:	test   eax,eax
   14000354b:	jne    0x140003579
   14000354d:	call   QWORD PTR [rip+0x4b05]        # 0x140008058
   140003553:	mov    DWORD PTR [rbx+0x39c],eax
   140003559:	call   QWORD PTR [rip+0x4af9]        # 0x140008058
   14000355f:	lea    rdx,[rip+0x6002]        # 0x140009568
   140003566:	mov    ecx,DWORD PTR [rip+0x9b34]        # 0x14000d0a0
   14000356c:	mov    r8d,eax
   14000356f:	call   0x140007278
   140003574:	jmp    0x140003736
   140003579:	mov    r15d,0x1
   14000357f:	jmp    0x140003736
   140003584:	cmp    DWORD PTR [rbx+0x290],r15d
   14000358b:	jne    0x140003736
   140003591:	mov    rax,QWORD PTR [r8+rdx*8]
   140003595:	test   rax,rax
   140003598:	jne    0x1400035a9
   14000359a:	mov    DWORD PTR [rbx+0x39c],0xb
   1400035a4:	jmp    0x140003736
   1400035a9:	lea    r9,[rbx+0x188]
   1400035b0:	mov    QWORD PTR [rsp+0x20],rax
   1400035b5:	lea    r8,[rip+0x53a4]        # 0x140008960
   1400035bc:	mov    edx,0x105
   1400035c1:	lea    rcx,[rsp+0x50]
   1400035c6:	call   0x140001008
   1400035cb:	test   eax,eax
   1400035cd:	jns    0x1400035e6
   1400035cf:	lea    rdx,[rip+0x5f2a]        # 0x140009500
   1400035d6:	mov    ecx,DWORD PTR [rip+0x9ac4]        # 0x14000d0a0
   1400035dc:	mov    r8d,eax
   1400035df:	call   0x140007278
   1400035e4:	jmp    0x14000359a
   1400035e6:	mov    rdx,QWORD PTR [rbx+0x8]
   1400035ea:	lea    rcx,[rsp+0x50]
   1400035ef:	xor    r8d,r8d
   1400035f2:	call   QWORD PTR [rip+0x4b18]        # 0x140008110
   1400035f8:	test   eax,eax
   1400035fa:	jne    0x140003579
   140003600:	call   QWORD PTR [rip+0x4a52]        # 0x140008058
   140003606:	mov    DWORD PTR [rbx+0x39c],eax
   14000360c:	lea    rdx,[rip+0x5f1d]        # 0x140009530
   140003613:	jmp    0x140003566
   140003618:	cmp    DWORD PTR [rbx+0x290],r15d
   14000361f:	jne    0x140003736
   140003625:	mov    rcx,QWORD PTR [rbx]
   140003628:	test   rcx,rcx
   14000362b:	je     0x140003736
   140003631:	lea    rdx,[rsp+0x38]
   140003636:	call   QWORD PTR [rip+0x4d64]        # 0x1400083a0
   14000363c:	mov    esi,eax
   14000363e:	test   eax,eax
   140003640:	je     0x14000365a
   140003642:	mov    r8,QWORD PTR [rbx]
   140003645:	lea    rdx,[rip+0x5dd4]        # 0x140009420
   14000364c:	mov    ecx,DWORD PTR [rip+0x9a4e]        # 0x14000d0a0
   140003652:	mov    r9d,eax
   140003655:	call   0x140007278
   14000365a:	test   esi,esi
   14000365c:	jne    0x140003712
   140003662:	lea    rax,[rip+0x4f6f]        # 0x1400085d8
   140003669:	mov    edx,0x105
   14000366e:	lea    r9,[rbx+0x188]
   140003675:	mov    QWORD PTR [rsp+0x20],rax
   14000367a:	lea    r8,[rip+0x52df]        # 0x140008960
   140003681:	lea    rcx,[rsp+0x50]
   140003686:	call   0x140001008
   14000368b:	test   eax,eax
   14000368d:	jns    0x1400036b0
   14000368f:	mov    ecx,DWORD PTR [rip+0x9a0b]        # 0x14000d0a0
   140003695:	lea    rdx,[rip+0x5dc4]        # 0x140009460
   14000369c:	mov    r8d,eax
   14000369f:	call   0x140007278
   1400036a4:	mov    DWORD PTR [rbx+0x39c],0xb
   1400036ae:	jmp    0x140003712
   1400036b0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400036b5:	lea    rdx,[rsp+0x50]
   1400036ba:	call   QWORD PTR [rip+0x4cd8]        # 0x140008398
   1400036c0:	mov    esi,eax
   1400036c2:	test   eax,eax
   1400036c4:	je     0x1400036e3
   1400036c6:	mov    ecx,DWORD PTR [rip+0x99d4]        # 0x14000d0a0
   1400036cc:	lea    rdx,[rip+0x5dbd]        # 0x140009490
   1400036d3:	mov    r8d,eax
   1400036d6:	call   0x140007278
   1400036db:	mov    DWORD PTR [rbx+0x39c],esi
   1400036e1:	jmp    0x1400036e9
   1400036e3:	mov    r15d,0x1
   1400036e9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400036ee:	call   QWORD PTR [rip+0x4c9c]        # 0x140008390
   1400036f4:	test   eax,eax
   1400036f6:	je     0x14000370d
   1400036f8:	mov    ecx,DWORD PTR [rip+0x99a2]        # 0x14000d0a0
   1400036fe:	lea    rdx,[rip+0x5dc3]        # 0x1400094c8
   140003705:	mov    r8d,eax
   140003708:	call   0x140007278
   14000370d:	test   r15d,r15d
   140003710:	jne    0x140003736
   140003712:	test   r14b,0x10
   140003716:	jne    0x140003736
   140003718:	mov    r9,QWORD PTR [rbx]
   14000371b:	lea    r8,[rip+0x5dd6]        # 0x1400094f8
   140003722:	lea    rdx,[rip+0x54a7]        # 0x140008bd0
   140003729:	lea    rcx,[rip+0x5488]        # 0x140008bb8
   140003730:	call   QWORD PTR [rip+0x49f2]        # 0x140008128
   140003736:	inc    r13d
   140003739:	cmp    r13d,DWORD PTR [rbx+0x3a0]
   140003740:	jb     0x1400034bb
   140003746:	mov    r14,QWORD PTR [rsp+0x40]
   14000374b:	test   r15d,r15d
   14000374e:	je     0x140003780
   140003750:	mov    r8d,DWORD PTR [rsp+0x30]
   140003755:	test   r8b,0x10
   140003759:	jne    0x140003780
   14000375b:	mov    r8,QWORD PTR [rbx+0x28]
   14000375f:	test   r8,r8
   140003762:	je     0x140003780
   140003764:	mov    r9,QWORD PTR [rbx]
   140003767:	test   r9,r9
   14000376a:	je     0x140003780
   14000376c:	lea    rdx,[rip+0x545d]        # 0x140008bd0
   140003773:	lea    rcx,[rip+0x543e]        # 0x140008bb8
   14000377a:	call   QWORD PTR [rip+0x49a8]        # 0x140008128
   140003780:	inc    r12d
   140003783:	cmp    r12d,DWORD PTR [r14+0x40]
   140003787:	jb     0x140003491
   14000378d:	mov    eax,0x1
   140003792:	mov    rcx,QWORD PTR [rbp+0x60]
   140003796:	xor    rcx,rsp
   140003799:	call   0x1400076f0
   14000379e:	lea    r11,[rsp+0x170]
   1400037a6:	mov    rbx,QWORD PTR [r11+0x38]
   1400037aa:	mov    rsi,QWORD PTR [r11+0x40]
   1400037ae:	mov    rsp,r11
   1400037b1:	pop    r15
   1400037b3:	pop    r14
   1400037b5:	pop    r13
   1400037b7:	pop    r12
   1400037b9:	pop    rbp
   1400037ba:	ret    
   1400037bb:	int3   
   1400037bc:	int3   
   1400037bd:	int3   
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	int3   
   1400037c1:	int3   
   1400037c2:	int3   
   1400037c3:	int3   
   1400037c4:	mov    QWORD PTR [rsp+0x18],rbx
   1400037c9:	push   rdi
   1400037ca:	sub    rsp,0x30
   1400037ce:	or     ebx,0xffffffff
   1400037d1:	lea    rax,[rcx-0x1]
   1400037d5:	mov    rdi,rcx
   1400037d8:	cmp    rax,0xfffffffffffffffd
   1400037dc:	ja     0x140003885
   1400037e2:	xor    eax,eax
   1400037e4:	mov    BYTE PTR [rsp+0x40],0x0
   1400037e9:	xor    r9d,r9d
   1400037ec:	mov    WORD PTR [rsp+0x41],ax
   1400037f1:	xor    r8d,r8d
   1400037f4:	mov    BYTE PTR [rsp+0x43],al
   1400037f8:	xor    edx,edx
   1400037fa:	call   QWORD PTR [rip+0x4a30]        # 0x140008230
   140003800:	and    QWORD PTR [rsp+0x20],0x0
   140003806:	lea    r9,[rsp+0x48]
   14000380b:	lea    r8d,[rbx+0x4]
   14000380f:	mov    rcx,rdi
   140003812:	lea    rdx,[rsp+0x40]
   140003817:	call   QWORD PTR [rip+0x4923]        # 0x140008140
   14000381d:	test   eax,eax
   14000381f:	je     0x140003885
   140003821:	cmp    DWORD PTR [rsp+0x48],0x3
   140003826:	jb     0x140003885
   140003828:	lea    rdx,[rip+0x5d6d]        # 0x14000959c
   14000382f:	lea    rcx,[rsp+0x40]
   140003834:	call   QWORD PTR [rip+0x482e]        # 0x140008068
   14000383a:	test   eax,eax
   14000383c:	jne    0x140003842
   14000383e:	xor    ebx,ebx
   140003840:	jmp    0x140003885
   140003842:	lea    rdx,[rip+0x5d57]        # 0x1400095a0
   140003849:	lea    rcx,[rsp+0x40]
   14000384e:	call   QWORD PTR [rip+0x4c0c]        # 0x140008460
   140003854:	test   eax,eax
   140003856:	je     0x140003885
   140003858:	xor    ecx,ecx
   14000385a:	xor    r8d,r8d
   14000385d:	mov    al,BYTE PTR [rsp+r8*1+0x40]
   140003862:	sub    al,0x30
   140003864:	cmp    al,0x9
   140003866:	ja     0x140003880
   140003868:	lea    edx,[rcx+rcx*4]
   14000386b:	movsx  ecx,BYTE PTR [rsp+r8*1+0x40]
   140003871:	inc    r8
   140003874:	lea    ecx,[rcx+rdx*2]
   140003877:	add    ecx,0xffffffd0
   14000387a:	cmp    r8,0x3
   14000387e:	jl     0x14000385d
   140003880:	test   ecx,ecx
   140003882:	cmovne ebx,ecx
   140003885:	mov    eax,ebx
   140003887:	mov    rbx,QWORD PTR [rsp+0x50]
   14000388c:	add    rsp,0x30
   140003890:	pop    rdi
   140003891:	ret    
   140003892:	int3   
   140003893:	int3   
   140003894:	int3   
   140003895:	int3   
   140003896:	int3   
   140003897:	int3   
   140003898:	mov    QWORD PTR [rsp+0x10],rbx
   14000389d:	mov    QWORD PTR [rsp+0x18],rbp
   1400038a2:	mov    QWORD PTR [rsp+0x20],rsi
   1400038a7:	push   rdi
   1400038a8:	push   r12
   1400038aa:	push   r13
   1400038ac:	push   r14
   1400038ae:	push   r15
   1400038b0:	sub    rsp,0x320
   1400038b7:	mov    rax,QWORD PTR [rip+0x974a]        # 0x14000d008
   1400038be:	xor    rax,rsp
   1400038c1:	mov    QWORD PTR [rsp+0x310],rax
   1400038c9:	xor    ebp,ebp
   1400038cb:	xor    ebx,ebx
   1400038cd:	mov    rsi,rcx
   1400038d0:	test   rcx,rcx
   1400038d3:	je     0x140003a44
   1400038d9:	cmp    BYTE PTR [rcx],bl
   1400038db:	je     0x140003a44
   1400038e1:	mov    edi,0x2d4
   1400038e6:	lea    r8,[rsp+0x20]
   1400038eb:	lea    rdx,[rsp+0x24]
   1400038f0:	mov    DWORD PTR [rsp+0x24],edi
   1400038f4:	lea    rcx,[rsp+0x30]
   1400038f9:	mov    DWORD PTR [rsp+0x30],edi
   1400038fd:	lea    r13,[rsp+0x30]
   140003902:	call   QWORD PTR [rip+0x4950]        # 0x140008258
   140003908:	cmp    eax,0x25b
   14000390d:	jne    0x140003950
   14000390f:	mov    ecx,DWORD PTR [rsp+0x24]
   140003913:	call   QWORD PTR [rip+0x4b0f]        # 0x140008428
   140003919:	mov    rbx,rax
   14000391c:	test   rax,rax
   14000391f:	jne    0x140003938
   140003921:	mov    ecx,DWORD PTR [rip+0x9779]        # 0x14000d0a0
   140003927:	lea    rdx,[rip+0x5c7a]        # 0x1400095a8
   14000392e:	call   0x140007278
   140003933:	jmp    0x140003a40
   140003938:	lea    r8,[rsp+0x20]
   14000393d:	mov    DWORD PTR [rax],edi
   14000393f:	lea    rdx,[rsp+0x24]
   140003944:	mov    rcx,rax
   140003947:	mov    r13,rax
   14000394a:	call   QWORD PTR [rip+0x4908]        # 0x140008258
   140003950:	test   eax,eax
   140003952:	jne    0x140003a32
   140003958:	mov    rcx,rsi
   14000395b:	call   QWORD PTR [rip+0x48bf]        # 0x140008220
   140003961:	mov    DWORD PTR [rsp+0x28],eax
   140003965:	inc    eax
   140003967:	mov    ecx,eax
   140003969:	mov    r15d,eax
   14000396c:	call   QWORD PTR [rip+0x4ab6]        # 0x140008428
   140003972:	xor    r12d,r12d
   140003975:	mov    rdi,rax
   140003978:	cmp    DWORD PTR [rsp+0x20],ebp
   14000397c:	jbe    0x140003a29
   140003982:	mov    eax,r12d
   140003985:	imul   r14,rax,0x2d4
   14000398c:	add    r14,0xc
   140003990:	add    r14,r13
   140003993:	mov    rcx,r14
   140003996:	call   QWORD PTR [rip+0x4884]        # 0x140008220
   14000399c:	cmp    DWORD PTR [rsp+0x28],eax
   1400039a0:	jae    0x140003a05
   1400039a2:	test   rdi,rdi
   1400039a5:	je     0x140003a05
   1400039a7:	mov    r8,r15
   1400039aa:	xor    edx,edx
   1400039ac:	mov    rcx,rdi
   1400039af:	call   0x140007c76
   1400039b4:	lea    rax,[r15-0x1]
   1400039b8:	mov    r8d,0x7ffffffe
   1400039be:	cmp    rax,r8
   1400039c1:	ja     0x1400039f8
   1400039c3:	sub    r8,r15
   1400039c6:	mov    rdx,r15
   1400039c9:	sub    r14,rdi
   1400039cc:	mov    rcx,rdi
   1400039cf:	lea    rax,[r8+rdx*1]
   1400039d3:	test   rax,rax
   1400039d6:	je     0x1400039eb
   1400039d8:	mov    al,BYTE PTR [r14+rcx*1]
   1400039dc:	test   al,al
   1400039de:	je     0x1400039eb
   1400039e0:	mov    BYTE PTR [rcx],al
   1400039e2:	inc    rcx
   1400039e5:	sub    rdx,0x1
   1400039e9:	jne    0x1400039cf
   1400039eb:	test   rdx,rdx
   1400039ee:	jne    0x1400039f3
   1400039f0:	dec    rcx
   1400039f3:	mov    BYTE PTR [rcx],bpl
   1400039f6:	jmp    0x140003a00
   1400039f8:	test   r15,r15
   1400039fb:	je     0x140003a00
   1400039fd:	mov    BYTE PTR [rdi],bpl
   140003a00:	mov    rdx,rdi
   140003a03:	jmp    0x140003a08
   140003a05:	mov    rdx,r14
   140003a08:	mov    rcx,rsi
   140003a0b:	call   QWORD PTR [rip+0x4a4f]        # 0x140008460
   140003a11:	test   eax,eax
   140003a13:	je     0x140003a24
   140003a15:	inc    r12d
   140003a18:	cmp    r12d,DWORD PTR [rsp+0x20]
   140003a1d:	jae    0x140003a29
   140003a1f:	jmp    0x140003982
   140003a24:	mov    ebp,0x1
   140003a29:	mov    rcx,rdi
   140003a2c:	call   QWORD PTR [rip+0x49de]        # 0x140008410
   140003a32:	test   rbx,rbx
   140003a35:	je     0x140003a40
   140003a37:	mov    rcx,rbx
   140003a3a:	call   QWORD PTR [rip+0x49d0]        # 0x140008410
   140003a40:	mov    eax,ebp
   140003a42:	jmp    0x140003a46
   140003a44:	xor    eax,eax
   140003a46:	mov    rcx,QWORD PTR [rsp+0x310]
   140003a4e:	xor    rcx,rsp
   140003a51:	call   0x1400076f0
   140003a56:	lea    r11,[rsp+0x320]
   140003a5e:	mov    rbx,QWORD PTR [r11+0x38]
   140003a62:	mov    rbp,QWORD PTR [r11+0x40]
   140003a66:	mov    rsi,QWORD PTR [r11+0x48]
   140003a6a:	mov    rsp,r11
   140003a6d:	pop    r15
   140003a6f:	pop    r14
   140003a71:	pop    r13
   140003a73:	pop    r12
   140003a75:	pop    rdi
   140003a76:	ret    
   140003a77:	int3   
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	mov    QWORD PTR [rsp+0x10],rbx
   140003a85:	mov    QWORD PTR [rsp+0x18],rsi
   140003a8a:	mov    QWORD PTR [rsp+0x20],rdi
   140003a8f:	push   rbp
   140003a90:	push   r12
   140003a92:	push   r13
   140003a94:	push   r14
   140003a96:	push   r15
   140003a98:	lea    rbp,[rsp-0x70]
   140003a9d:	sub    rsp,0x170
   140003aa4:	mov    rax,QWORD PTR [rip+0x955d]        # 0x14000d008
   140003aab:	xor    rax,rsp
   140003aae:	mov    QWORD PTR [rbp+0x60],rax
   140003ab2:	xor    r13d,r13d
   140003ab5:	mov    QWORD PTR [rsp+0x40],rcx
   140003aba:	or     r15,0xffffffffffffffff
   140003abe:	mov    DWORD PTR [rsp+0x48],r13d
   140003ac3:	mov    r12d,r13d
   140003ac6:	test   rcx,rcx
   140003ac9:	jne    0x140003ad3
   140003acb:	lea    eax,[rcx+0x57]
   140003ace:	jmp    0x14000413c
   140003ad3:	mov    edx,DWORD PTR [rcx+0x8]
   140003ad6:	mov    rcx,QWORD PTR [rcx+0x38]
   140003ada:	call   QWORD PTR [rip+0x45c8]        # 0x1400080a8
   140003ae0:	cmp    eax,0xffffffff
   140003ae3:	jne    0x140003b00
   140003ae5:	call   QWORD PTR [rip+0x456d]        # 0x140008058
   140003aeb:	mov    ecx,DWORD PTR [rip+0x95af]        # 0x14000d0a0
   140003af1:	lea    rdx,[rip+0x5ae0]        # 0x1400095d8
   140003af8:	mov    r8d,eax
   140003afb:	call   0x140007278
   140003b00:	mov    rax,QWORD PTR [rsp+0x40]
   140003b05:	test   BYTE PTR [rax+0x18],0x20
   140003b09:	jne    0x140003b41
   140003b0b:	mov    rcx,QWORD PTR [rax+0x60]
   140003b0f:	call   0x140003898
   140003b14:	test   eax,eax
   140003b16:	jne    0x140003b3c
   140003b18:	mov    ecx,DWORD PTR [rip+0x9582]        # 0x14000d0a0
   140003b1e:	lea    rdx,[rip+0x5af3]        # 0x140009618
   140003b25:	call   0x140007278
   140003b2a:	mov    rax,QWORD PTR [rsp+0x40]
   140003b2f:	mov    ebx,0x1
   140003b34:	mov    DWORD PTR [rax+0x50],ebx
   140003b37:	jmp    0x1400040ec
   140003b3c:	mov    rax,QWORD PTR [rsp+0x40]
   140003b41:	cmp    DWORD PTR [rax+0x50],r13d
   140003b45:	je     0x140003b53
   140003b47:	lea    rdx,[rip+0x5af2]        # 0x140009640
   140003b4e:	jmp    0x1400040e1
   140003b53:	mov    edi,0x105
   140003b58:	lea    rdx,[rsp+0x50]
   140003b5d:	mov    ecx,edi
   140003b5f:	call   QWORD PTR [rip+0x4523]        # 0x140008088
   140003b65:	mov    ebx,0x1
   140003b6a:	test   eax,eax
   140003b6c:	jne    0x140003bc5
   140003b6e:	call   QWORD PTR [rip+0x44e4]        # 0x140008058
   140003b74:	mov    ecx,DWORD PTR [rip+0x9526]        # 0x14000d0a0
   140003b7a:	lea    rdx,[rip+0x5adf]        # 0x140009660
   140003b81:	mov    r8d,eax
   140003b84:	call   0x140007278
   140003b89:	lea    rdx,[rip+0x5794]        # 0x140009324
   140003b90:	lea    rax,[rsp+0x50]
   140003b95:	sub    rdx,rax
   140003b98:	lea    rcx,[rsp+0x50]
   140003b9d:	lea    rax,[rdi+0x7ffffef9]
   140003ba4:	test   rax,rax
   140003ba7:	je     0x140003bba
   140003ba9:	mov    al,BYTE PTR [rdx+rcx*1]
   140003bac:	test   al,al
   140003bae:	je     0x140003bba
   140003bb0:	mov    BYTE PTR [rcx],al
   140003bb2:	add    rcx,rbx
   140003bb5:	sub    rdi,rbx
   140003bb8:	jne    0x140003b9d
   140003bba:	test   rdi,rdi
   140003bbd:	jne    0x140003bc2
   140003bbf:	sub    rcx,rbx
   140003bc2:	mov    BYTE PTR [rcx],r13b
   140003bc5:	mov    r10,QWORD PTR [rsp+0x40]
   140003bca:	mov    ecx,r13d
   140003bcd:	mov    DWORD PTR [rsp+0x48],ecx
   140003bd1:	cmp    DWORD PTR [r10+0x40],r13d
   140003bd5:	jbe    0x1400040da
   140003bdb:	mov    eax,ecx
   140003bdd:	mov    esi,r13d
   140003be0:	imul   rdi,rax,0x3b0
   140003be7:	add    rdi,QWORD PTR [r10+0x48]
   140003beb:	mov    r9,QWORD PTR [r10+0x48]
   140003bef:	lea    rdx,[rip+0x5a9a]        # 0x140009690
   140003bf6:	mov    eax,ecx
   140003bf8:	xor    r8d,r8d
   140003bfb:	imul   rcx,rax,0x3b0
   140003c02:	add    esi,ebx
   140003c04:	add    rcx,0x58
   140003c08:	add    r9,rcx
   140003c0b:	lea    rcx,[rsp+0x50]
   140003c10:	call   QWORD PTR [rip+0x4462]        # 0x140008078
   140003c16:	test   eax,eax
   140003c18:	jne    0x140003c39
   140003c1a:	mov    ecx,0x3e8
   140003c1f:	call   QWORD PTR [rip+0x44ab]        # 0x1400080d0
   140003c25:	cmp    esi,0x3
   140003c28:	jge    0x140004057
   140003c2e:	mov    ecx,DWORD PTR [rsp+0x48]
   140003c32:	mov    r10,QWORD PTR [rsp+0x40]
   140003c37:	jmp    0x140003beb
   140003c39:	mov    eax,DWORD PTR [rsp+0x48]
   140003c3d:	xor    r9d,r9d
   140003c40:	imul   rdx,rax,0x3b0
   140003c47:	mov    rax,QWORD PTR [rsp+0x40]
   140003c4c:	mov    r8d,ebx
   140003c4f:	mov    QWORD PTR [rsp+0x30],r13
   140003c54:	mov    DWORD PTR [rsp+0x28],0x80
   140003c5c:	mov    DWORD PTR [rsp+0x20],0x2
   140003c64:	mov    rcx,QWORD PTR [rax+0x48]
   140003c68:	add    rcx,0x58
   140003c6c:	add    rcx,rdx
   140003c6f:	mov    edx,0xc0000000
   140003c74:	call   QWORD PTR [rip+0x44b6]        # 0x140008130
   140003c7a:	mov    r15,rax
   140003c7d:	cmp    rax,0xffffffffffffffff
   140003c81:	je     0x140004076
   140003c87:	mov    r8,QWORD PTR [rsp+0x40]
   140003c8c:	cmp    DWORD PTR [r8+0x50],r13d
   140003c90:	jne    0x140003b47
   140003c96:	mov    ecx,DWORD PTR [rsp+0x48]
   140003c9a:	lea    rax,[rip+0xfffffffffffff1df]        # 0x140002e80
   140003ca1:	imul   rdx,rcx,0x3b0
   140003ca8:	mov    rcx,QWORD PTR [r8+0x48]
   140003cac:	xor    r9d,r9d
   140003caf:	mov    QWORD PTR [rdx+rcx*1+0x160],rax
   140003cb7:	mov    ecx,DWORD PTR [rsp+0x48]
   140003cbb:	mov    rax,QWORD PTR [rsp+0x40]
   140003cc0:	imul   rdx,rcx,0x3b0
   140003cc7:	mov    rcx,QWORD PTR [rax+0x48]
   140003ccb:	lea    rax,[rsp+0x40]
   140003cd0:	mov    QWORD PTR [rdx+rcx*1+0x168],rax
   140003cd8:	mov    rdx,QWORD PTR [rsp+0x40]
   140003cdd:	mov    eax,DWORD PTR [rsp+0x48]
   140003ce1:	imul   rcx,rax,0x3b0
   140003ce8:	mov    rax,QWORD PTR [rdx+0x48]
   140003cec:	lea    r8,[rdx+0x50]
   140003cf0:	mov    QWORD PTR [rcx+rax*1+0x180],r8
   140003cf8:	xor    r8d,r8d
   140003cfb:	mov    rcx,QWORD PTR [rsp+0x40]
   140003d00:	mov    edx,DWORD PTR [rcx+0x1c]
   140003d03:	mov    rcx,QWORD PTR [rcx+0x20]
   140003d07:	call   QWORD PTR [rip+0x4583]        # 0x140008290
   140003d0d:	mov    eax,DWORD PTR [rsp+0x48]
   140003d11:	mov    rdx,r15
   140003d14:	imul   rcx,rax,0x3b0
   140003d1b:	mov    rax,QWORD PTR [rsp+0x40]
   140003d20:	add    rcx,QWORD PTR [rax+0x48]
   140003d24:	call   0x140002b68
   140003d29:	mov    rcx,r15
   140003d2c:	mov    r14d,eax
   140003d2f:	call   QWORD PTR [rip+0x43b3]        # 0x1400080e8
   140003d35:	mov    rcx,r15
   140003d38:	call   0x1400037c4
   140003d3d:	mov    rcx,r15
   140003d40:	mov    esi,eax
   140003d42:	call   QWORD PTR [rip+0x4338]        # 0x140008080
   140003d48:	mov    rcx,QWORD PTR [rsp+0x40]
   140003d4d:	or     r15,0xffffffffffffffff
   140003d51:	cmp    DWORD PTR [rcx+0x50],r13d
   140003d55:	jne    0x140003b47
   140003d5b:	mov    edx,DWORD PTR [rcx+0x1c]
   140003d5e:	lea    r8d,[r15+0x3]
   140003d62:	mov    rcx,QWORD PTR [rcx+0x20]
   140003d66:	xor    r9d,r9d
   140003d69:	call   QWORD PTR [rip+0x4521]        # 0x140008290
   140003d6f:	mov    rcx,QWORD PTR [rsp+0x40]
   140003d74:	test   r14d,r14d
   140003d77:	jne    0x140003e55
   140003d7d:	add    rcx,0x88
   140003d84:	test   esi,esi
   140003d86:	jns    0x140003dae
   140003d88:	mov    r9,QWORD PTR [rdi+0x30]
   140003d8c:	lea    rax,[rdi+0x294]
   140003d93:	mov    r8d,DWORD PTR [rdi+0x39c]
   140003d9a:	lea    edx,[r15+0x1d]
   140003d9e:	mov    QWORD PTR [rsp+0x20],rax
   140003da3:	call   QWORD PTR [rip+0x4637]        # 0x1400083e0
   140003da9:	jmp    0x140003f15
   140003dae:	mov    r9,QWORD PTR [rdi+0x20]
   140003db2:	lea    r14,[rdi+0x294]
   140003db9:	mov    r8,QWORD PTR [rdi+0x30]
   140003dbd:	mov    edx,0x1b
   140003dc2:	mov    QWORD PTR [rsp+0x20],r14
   140003dc7:	call   QWORD PTR [rip+0x4613]        # 0x1400083e0
   140003dcd:	mov    rcx,QWORD PTR [rsp+0x40]
   140003dd2:	test   esi,esi
   140003dd4:	jle    0x140003df4
   140003dd6:	mov    r9,QWORD PTR [rdi+0x30]
   140003dda:	add    rcx,0x88
   140003de1:	mov    r8d,esi
   140003de4:	mov    edx,0x1e
   140003de9:	call   QWORD PTR [rip+0x45f1]        # 0x1400083e0
   140003def:	jmp    0x140003f15
   140003df4:	mov    rcx,QWORD PTR [rcx]
   140003df7:	mov    edx,0x3f7
   140003dfc:	call   QWORD PTR [rip+0x45ee]        # 0x1400083f0
   140003e02:	mov    rsi,rax
   140003e05:	test   rax,rax
   140003e08:	je     0x140003e12
   140003e0a:	mov    r8,rax
   140003e0d:	cmp    BYTE PTR [rax],r13b
   140003e10:	jne    0x140003e19
   140003e12:	lea    r8,[rip+0x58ef]        # 0x140009708
   140003e19:	mov    rax,QWORD PTR [rdi+0x20]
   140003e1d:	mov    edx,0x1d
   140003e22:	mov    rcx,QWORD PTR [rsp+0x40]
   140003e27:	mov    r9,QWORD PTR [rdi+0x30]
   140003e2b:	add    rcx,0x88
   140003e32:	mov    QWORD PTR [rsp+0x30],r14
   140003e37:	mov    QWORD PTR [rsp+0x28],rax
   140003e3c:	mov    QWORD PTR [rsp+0x20],rax
   140003e41:	call   QWORD PTR [rip+0x4599]        # 0x1400083e0
   140003e47:	mov    rcx,rsi
   140003e4a:	call   QWORD PTR [rip+0x45c0]        # 0x140008410
   140003e50:	jmp    0x140003f15
   140003e55:	mov    eax,DWORD PTR [rsp+0x48]
   140003e59:	imul   rdx,rax,0x3b0
   140003e60:	mov    rax,QWORD PTR [rcx+0x48]
   140003e64:	cmp    DWORD PTR [rdx+rax*1+0x174],r13d
   140003e6c:	je     0x140003e7a
   140003e6e:	mov    DWORD PTR [rdx+rax*1+0x178],ebx
   140003e75:	mov    rcx,QWORD PTR [rsp+0x40]
   140003e7a:	cmp    DWORD PTR [rcx+0x50],r13d
   140003e7e:	jne    0x140003b47
   140003e84:	mov    r9,QWORD PTR [rdi+0x20]
   140003e88:	lea    r12,[rdi+0x294]
   140003e8f:	mov    r8,QWORD PTR [rdi+0x30]
   140003e93:	add    rcx,0x88
   140003e9a:	mov    edx,0x1b
   140003e9f:	mov    QWORD PTR [rsp+0x20],r12
   140003ea4:	call   QWORD PTR [rip+0x4536]        # 0x1400083e0
   140003eaa:	mov    eax,DWORD PTR [rsp+0x48]
   140003eae:	imul   rcx,rax,0x3b0
   140003eb5:	mov    rax,QWORD PTR [rsp+0x40]
   140003eba:	add    rcx,QWORD PTR [rax+0x48]
   140003ebe:	mov    edx,DWORD PTR [rax+0x18]
   140003ec1:	call   0x140002ee8
   140003ec6:	mov    r14d,eax
   140003ec9:	test   eax,eax
   140003ecb:	je     0x140003ee7
   140003ecd:	mov    rdx,QWORD PTR [rdi+0x3a8]
   140003ed4:	test   rdx,rdx
   140003ed7:	jne    0x140003f84
   140003edd:	mov    DWORD PTR [rdi+0x39c],0xd
   140003ee7:	mov    r8d,DWORD PTR [rdi+0x39c]
   140003eee:	mov    rcx,QWORD PTR [rsp+0x40]
   140003ef3:	mov    edx,0x1f
   140003ef8:	mov    r9,QWORD PTR [rdi+0x30]
   140003efc:	add    rcx,0x88
   140003f03:	call   QWORD PTR [rip+0x44d7]        # 0x1400083e0
   140003f09:	test   r14d,r14d
   140003f0c:	je     0x1400040ec
   140003f12:	mov    r12d,ebx
   140003f15:	mov    ecx,DWORD PTR [rsp+0x48]
   140003f19:	mov    r10,QWORD PTR [rsp+0x40]
   140003f1e:	add    ecx,ebx
   140003f20:	mov    DWORD PTR [rsp+0x48],ecx
   140003f24:	cmp    ecx,DWORD PTR [r10+0x40]
   140003f28:	jb     0x140003bdb
   140003f2e:	test   r12d,r12d
   140003f31:	je     0x1400040da
   140003f37:	cmp    DWORD PTR [r10+0x50],r13d
   140003f3b:	jne    0x140003b47
   140003f41:	mov    edx,DWORD PTR [r10+0x1c]
   140003f45:	xor    r9d,r9d
   140003f48:	mov    rcx,QWORD PTR [r10+0x20]
   140003f4c:	lea    r8d,[r9+0x3]
   140003f50:	call   QWORD PTR [rip+0x433a]        # 0x140008290
   140003f56:	mov    rcx,QWORD PTR [rsp+0x40]
   140003f5b:	or     edx,0xffffffff
   140003f5e:	mov    rcx,QWORD PTR [rcx+0x38]
   140003f62:	call   QWORD PTR [rip+0x4140]        # 0x1400080a8
   140003f68:	mov    rax,QWORD PTR [rsp+0x40]
   140003f6d:	cmp    DWORD PTR [rax+0x50],r13d
   140003f71:	jne    0x140003b47
   140003f77:	xor    ecx,ecx
   140003f79:	call   QWORD PTR [rip+0x40e1]        # 0x140008060
   140003f7f:	jmp    0x1400040ec
   140003f84:	mov    eax,DWORD PTR [rdi+0x3a0]
   140003f8a:	mov    r8d,r13d
   140003f8d:	mov    r9d,r13d
   140003f90:	test   eax,eax
   140003f92:	je     0x140003fb6
   140003f94:	add    rdx,0x8
   140003f98:	mov    r10d,eax
   140003f9b:	mov    ecx,DWORD PTR [rdx]
   140003f9d:	sub    ecx,ebx
   140003f9f:	je     0x140003faa
   140003fa1:	cmp    ecx,ebx
   140003fa3:	jne    0x140003fad
   140003fa5:	mov    r8d,ebx
   140003fa8:	jmp    0x140003fad
   140003faa:	mov    r9d,ebx
   140003fad:	add    rdx,0x10
   140003fb1:	sub    r10,rbx
   140003fb4:	jne    0x140003f9b
   140003fb6:	mov    eax,r9d
   140003fb9:	xor    eax,r8d
   140003fbc:	je     0x140004044
   140003fc2:	test   r8d,r8d
   140003fc5:	je     0x140003fce
   140003fc7:	mov    edx,0x3f8
   140003fcc:	jmp    0x140003fdc
   140003fce:	test   r9d,r9d
   140003fd1:	je     0x140003f09
   140003fd7:	mov    edx,0x3f9
   140003fdc:	mov    rcx,QWORD PTR [rsp+0x40]
   140003fe1:	mov    rcx,QWORD PTR [rcx]
   140003fe4:	call   QWORD PTR [rip+0x4406]        # 0x1400083f0
   140003fea:	mov    rsi,rax
   140003fed:	test   rax,rax
   140003ff0:	je     0x140003f09
   140003ff6:	cmp    BYTE PTR [rax],r13b
   140003ff9:	lea    r8,[rip+0x5708]        # 0x140009708
   140004000:	mov    rcx,QWORD PTR [rsp+0x40]
   140004005:	mov    edx,0x1d
   14000400a:	mov    r9,QWORD PTR [rdi+0x30]
   14000400e:	cmovne r8,rax
   140004012:	mov    rax,QWORD PTR [rdi+0x28]
   140004016:	add    rcx,0x88
   14000401d:	mov    QWORD PTR [rsp+0x30],r12
   140004022:	mov    QWORD PTR [rsp+0x28],rax
   140004027:	mov    rax,QWORD PTR [rdi+0x20]
   14000402b:	mov    QWORD PTR [rsp+0x20],rax
   140004030:	call   QWORD PTR [rip+0x43aa]        # 0x1400083e0
   140004036:	mov    rcx,rsi
   140004039:	call   QWORD PTR [rip+0x43d1]        # 0x140008410
   14000403f:	jmp    0x140003f09
   140004044:	mov    eax,0xb
   140004049:	mov    DWORD PTR [rdi+0x39c],eax
   14000404f:	mov    r8d,eax
   140004052:	jmp    0x140003eee
   140004057:	call   QWORD PTR [rip+0x3ffb]        # 0x140008058
   14000405d:	mov    ecx,DWORD PTR [rip+0x903d]        # 0x14000d0a0
   140004063:	lea    rdx,[rip+0x562e]        # 0x140009698
   14000406a:	mov    r8d,eax
   14000406d:	mov    ebx,eax
   14000406f:	call   0x140007278
   140004074:	jmp    0x1400040ae
   140004076:	call   QWORD PTR [rip+0x3fdc]        # 0x140008058
   14000407c:	mov    ecx,DWORD PTR [rsp+0x48]
   140004080:	mov    r9d,eax
   140004083:	imul   r8,rcx,0x3b0
   14000408a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000408f:	mov    ebx,eax
   140004091:	mov    rdx,QWORD PTR [rcx+0x48]
   140004095:	mov    ecx,DWORD PTR [rip+0x9005]        # 0x14000d0a0
   14000409b:	add    rdx,0x58
   14000409f:	add    r8,rdx
   1400040a2:	lea    rdx,[rip+0x5627]        # 0x1400096d0
   1400040a9:	call   0x140007278
   1400040ae:	mov    rcx,QWORD PTR [rsp+0x40]
   1400040b3:	lea    rdx,[rdi+0x294]
   1400040ba:	mov    r9,QWORD PTR [rdi+0x30]
   1400040be:	add    rcx,0x88
   1400040c5:	mov    QWORD PTR [rsp+0x20],rdx
   1400040ca:	mov    r8d,ebx
   1400040cd:	mov    edx,0x1c
   1400040d2:	call   QWORD PTR [rip+0x4308]        # 0x1400083e0
   1400040d8:	jmp    0x1400040ec
   1400040da:	lea    rdx,[rip+0x562f]        # 0x140009710
   1400040e1:	mov    ecx,DWORD PTR [rip+0x8fb9]        # 0x14000d0a0
   1400040e7:	call   0x140007278
   1400040ec:	mov    rcx,QWORD PTR [rsp+0x40]
   1400040f1:	cmp    DWORD PTR [rcx+0x50],r13d
   1400040f5:	je     0x14000410e
   1400040f7:	add    rcx,0x88
   1400040fe:	mov    edx,0x20
   140004103:	call   QWORD PTR [rip+0x42d7]        # 0x1400083e0
   140004109:	mov    rcx,QWORD PTR [rsp+0x40]
   14000410e:	cmp    r15,0xffffffffffffffff
   140004112:	je     0x140004122
   140004114:	mov    rcx,r15
   140004117:	call   QWORD PTR [rip+0x3f63]        # 0x140008080
   14000411d:	mov    rcx,QWORD PTR [rsp+0x40]
   140004122:	mov    edx,DWORD PTR [rcx+0x1c]
   140004125:	xor    r9d,r9d
   140004128:	mov    rcx,QWORD PTR [rcx+0x20]
   14000412c:	lea    r8d,[r9+0x4]
   140004130:	call   QWORD PTR [rip+0x415a]        # 0x140008290
   140004136:	call   QWORD PTR [rip+0x3f1c]        # 0x140008058
   14000413c:	mov    rcx,QWORD PTR [rbp+0x60]
   140004140:	xor    rcx,rsp
   140004143:	call   0x1400076f0
   140004148:	lea    r11,[rsp+0x170]
   140004150:	mov    rbx,QWORD PTR [r11+0x38]
   140004154:	mov    rsi,QWORD PTR [r11+0x40]
   140004158:	mov    rdi,QWORD PTR [r11+0x48]
   14000415c:	mov    rsp,r11
   14000415f:	pop    r15
   140004161:	pop    r14
   140004163:	pop    r13
   140004165:	pop    r12
   140004167:	pop    rbp
   140004168:	ret    
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	mov    QWORD PTR [rsp+0x10],rbx
   140004175:	push   rbp
   140004176:	push   rsi
   140004177:	push   rdi
   140004178:	push   r12
   14000417a:	push   r13
   14000417c:	push   r14
   14000417e:	push   r15
   140004180:	lea    rbp,[rsp-0x190]
   140004188:	sub    rsp,0x290
   14000418f:	mov    rax,QWORD PTR [rip+0x8e72]        # 0x14000d008
   140004196:	xor    rax,rsp
   140004199:	mov    QWORD PTR [rbp+0x180],rax
   1400041a0:	mov    edi,edx
   1400041a2:	mov    r13,r9
   1400041a5:	mov    edx,0x10
   1400041aa:	mov    r15,r8
   1400041ad:	mov    r12,rcx
   1400041b0:	call   QWORD PTR [rip+0x4132]        # 0x1400082e8
   1400041b6:	xor    r14d,r14d
   1400041b9:	mov    rbx,rax
   1400041bc:	mov    eax,edi
   1400041be:	lea    esi,[r14+0x1]
   1400041c2:	sub    eax,0x2
   1400041c5:	je     0x14000442e
   1400041cb:	sub    eax,0xf
   1400041ce:	je     0x14000441a
   1400041d4:	sub    eax,0x5
   1400041d7:	je     0x1400043e6
   1400041dd:	sub    eax,0x30
   1400041e0:	je     0x1400043cb
   1400041e6:	sub    eax,0xca
   1400041eb:	je     0x14000421a
   1400041ed:	cmp    eax,0x7
   1400041f0:	jne    0x14000444f
   1400041f6:	shr    r13,0x10
   1400041fa:	test   r13w,r13w
   1400041fe:	je     0x14000444f
   140004204:	mov    r8d,esi
   140004207:	mov    edx,0xf030
   14000420c:	mov    rcx,r15
   14000420f:	call   QWORD PTR [rip+0x40eb]        # 0x140008300
   140004215:	jmp    0x14000444f
   14000421a:	mov    r8,r13
   14000421d:	mov    DWORD PTR [rsp+0x30],r14d
   140004222:	mov    edx,0x10
   140004227:	mov    rcx,r12
   14000422a:	call   QWORD PTR [rip+0x4068]        # 0x140008298
   140004230:	mov    QWORD PTR [r13+0x20],r12
   140004234:	lea    rdx,[rip+0x54fd]        # 0x140009738
   14000423b:	mov    ecx,DWORD PTR [rip+0x8e5f]        # 0x14000d0a0
   140004241:	call   0x140007278
   140004246:	lea    rdx,[rsp+0x38]
   14000424b:	mov    rcx,r12
   14000424e:	call   QWORD PTR [rip+0x408c]        # 0x1400082e0
   140004254:	xor    edx,edx
   140004256:	lea    r8,[rsp+0x48]
   14000425b:	xor    r9d,r9d
   14000425e:	lea    ecx,[rdx+0x30]
   140004261:	call   QWORD PTR [rip+0x4021]        # 0x140008288
   140004267:	test   eax,eax
   140004269:	je     0x1400042c5
   14000426b:	mov    esi,DWORD PTR [rsp+0x44]
   14000426f:	mov    ecx,0x6
   140004274:	mov    edi,DWORD PTR [rsp+0x40]
   140004278:	sub    esi,DWORD PTR [rsp+0x3c]
   14000427c:	sub    edi,DWORD PTR [rsp+0x38]
   140004280:	call   QWORD PTR [rip+0x3ffa]        # 0x140008280
   140004286:	mov    ebx,DWORD PTR [rsp+0x54]
   14000428a:	mov    ecx,0x5
   14000428f:	sub    ebx,DWORD PTR [rsp+0x44]
   140004293:	add    ebx,DWORD PTR [rsp+0x3c]
   140004297:	sub    ebx,eax
   140004299:	call   QWORD PTR [rip+0x3fe1]        # 0x140008280
   14000429f:	mov    edx,DWORD PTR [rsp+0x50]
   1400042a3:	mov    r9d,edi
   1400042a6:	sub    edx,DWORD PTR [rsp+0x40]
   1400042aa:	mov    r8d,ebx
   1400042ad:	add    edx,DWORD PTR [rsp+0x38]
   1400042b1:	mov    rcx,r12
   1400042b4:	sub    edx,eax
   1400042b6:	mov    DWORD PTR [rsp+0x28],r14d
   1400042bb:	mov    DWORD PTR [rsp+0x20],esi
   1400042bf:	call   QWORD PTR [rip+0x4043]        # 0x140008308
   1400042c5:	cmp    QWORD PTR [r13+0x10],r14
   1400042c9:	je     0x140004324
   1400042cb:	mov    ebx,0x104
   1400042d0:	lea    r8,[rsp+0x60]
   1400042d5:	mov    edi,0x3eb
   1400042da:	mov    r9d,ebx
   1400042dd:	mov    edx,edi
   1400042df:	mov    rcx,r12
   1400042e2:	call   QWORD PTR [rip+0x3f88]        # 0x140008270
   1400042e8:	mov    rax,QWORD PTR [r13+0x48]
   1400042ec:	lea    r9,[rbp+0x70]
   1400042f0:	lea    r8,[rsp+0x60]
   1400042f5:	lea    rdx,[rip+0x4a0c]        # 0x140008d08
   1400042fc:	mov    rcx,QWORD PTR [rax]
   1400042ff:	mov    QWORD PTR [rsp+0x28],rcx
   140004304:	lea    rcx,[rip+0x48ad]        # 0x140008bb8
   14000430b:	mov    DWORD PTR [rsp+0x20],ebx
   14000430f:	call   QWORD PTR [rip+0x3e0b]        # 0x140008120
   140004315:	lea    r8,[rbp+0x70]
   140004319:	mov    edx,edi
   14000431b:	mov    rcx,r12
   14000431e:	call   QWORD PTR [rip+0x3f8c]        # 0x1400082b0
   140004324:	xor    r9d,r9d
   140004327:	mov    DWORD PTR [r13+0x28],0x2
   14000432f:	xor    r8d,r8d
   140004332:	xor    edx,edx
   140004334:	xor    ecx,ecx
   140004336:	call   QWORD PTR [rip+0x3d9c]        # 0x1400080d8
   14000433c:	mov    QWORD PTR [r13+0x38],rax
   140004340:	test   rax,rax
   140004343:	jne    0x14000436b
   140004345:	call   QWORD PTR [rip+0x3d0d]        # 0x140008058
   14000434b:	mov    ecx,DWORD PTR [rip+0x8d4f]        # 0x14000d0a0
   140004351:	lea    rdx,[rip+0x5400]        # 0x140009758
   140004358:	mov    r8d,eax
   14000435b:	call   0x140007278
   140004360:	xor    edx,edx
   140004362:	mov    rcx,r12
   140004365:	call   QWORD PTR [rip+0x3f3d]        # 0x1400082a8
   14000436b:	lea    rax,[rsp+0x30]
   140004370:	mov    r9,r13
   140004373:	mov    QWORD PTR [rsp+0x28],rax
   140004378:	lea    r8,[rip+0xfffffffffffff701]        # 0x140003a80
   14000437f:	xor    edx,edx
   140004381:	mov    DWORD PTR [rsp+0x20],r14d
   140004386:	xor    ecx,ecx
   140004388:	call   QWORD PTR [rip+0x3de2]        # 0x140008170
   14000438e:	mov    QWORD PTR [r13+0x30],rax
   140004392:	test   rax,rax
   140004395:	jne    0x1400043bd
   140004397:	call   QWORD PTR [rip+0x3cbb]        # 0x140008058
   14000439d:	mov    ecx,DWORD PTR [rip+0x8cfd]        # 0x14000d0a0
   1400043a3:	lea    rdx,[rip+0x53de]        # 0x140009788
   1400043aa:	mov    r8d,eax
   1400043ad:	call   0x140007278
   1400043b2:	xor    edx,edx
   1400043b4:	mov    rcx,r12
   1400043b7:	call   QWORD PTR [rip+0x3eeb]        # 0x1400082a8
   1400043bd:	mov    rcx,r15
   1400043c0:	call   QWORD PTR [rip+0x3efa]        # 0x1400082c0
   1400043c6:	jmp    0x1400046c9
   1400043cb:	cmp    DWORD PTR [rbx+0x78],r14d
   1400043cf:	jne    0x14000444f
   1400043d1:	mov    eax,DWORD PTR [r13+0x20]
   1400043d5:	test   al,0x40
   1400043d7:	je     0x14000444f
   1400043d9:	and    eax,0xffffffbf
   1400043dc:	bts    eax,0x7
   1400043e0:	mov    DWORD PTR [r13+0x20],eax
   1400043e4:	jmp    0x14000444f
   1400043e6:	mov    ecx,DWORD PTR [rip+0x8cb4]        # 0x14000d0a0
   1400043ec:	lea    rdx,[rip+0x53f5]        # 0x1400097e8
   1400043f3:	call   0x140007278
   1400043f8:	test   r15d,r15d
   1400043fb:	je     0x14000440d
   1400043fd:	test   rbx,rbx
   140004400:	je     0x14000440d
   140004402:	mov    rcx,rbx
   140004405:	mov    DWORD PTR [rbx+0x50],esi
   140004408:	call   0x140005d0c
   14000440d:	xor    edx,edx
   14000440f:	mov    rcx,r12
   140004412:	call   QWORD PTR [rip+0x3e90]        # 0x1400082a8
   140004418:	jmp    0x14000444f
   14000441a:	mov    ecx,DWORD PTR [rip+0x8c80]        # 0x14000d0a0
   140004420:	lea    rdx,[rip+0x5391]        # 0x1400097b8
   140004427:	call   0x140007278
   14000442c:	jmp    0x140004443
   14000442e:	mov    eax,DWORD PTR [rip+0x922c]        # 0x14000d660
   140004434:	test   eax,eax
   140004436:	je     0x140004443
   140004438:	mov    edx,eax
   14000443a:	mov    rcx,r12
   14000443d:	call   QWORD PTR [rip+0x3e85]        # 0x1400082c8
   140004443:	test   rbx,rbx
   140004446:	je     0x1400046c9
   14000444c:	mov    DWORD PTR [rbx+0x50],esi
   14000444f:	test   rbx,rbx
   140004452:	je     0x1400046c9
   140004458:	cmp    edi,DWORD PTR [rbx+0x1c]
   14000445b:	jne    0x1400046c9
   140004461:	mov    ecx,DWORD PTR [rip+0x8c39]        # 0x14000d0a0
   140004467:	lea    rdx,[rip+0x53aa]        # 0x140009818
   14000446e:	mov    r8d,r15d
   140004471:	call   0x140007278
   140004476:	cmp    DWORD PTR [rbx+0x7c],r14d
   14000447a:	jne    0x14000449a
   14000447c:	call   QWORD PTR [rip+0x3c36]        # 0x1400080b8
   140004482:	mov    DWORD PTR [rbx+0x7c],eax
   140004485:	lea    rdx,[rip+0x53ac]        # 0x140009838
   14000448c:	mov    ecx,DWORD PTR [rip+0x8c0e]        # 0x14000d0a0
   140004492:	mov    r8d,eax
   140004495:	call   0x140007278
   14000449a:	cmp    DWORD PTR [rbx+0x78],r14d
   14000449e:	jne    0x1400044d9
   1400044a0:	mov    edi,DWORD PTR [rbx+0x80]
   1400044a6:	call   QWORD PTR [rip+0x3c0c]        # 0x1400080b8
   1400044ac:	sub    eax,DWORD PTR [rbx+0x7c]
   1400044af:	cmp    eax,edi
   1400044b1:	jbe    0x1400044d9
   1400044b3:	mov    ecx,DWORD PTR [rip+0x8be7]        # 0x14000d0a0
   1400044b9:	lea    rdx,[rip+0x5398]        # 0x140009858
   1400044c0:	mov    r8d,edi
   1400044c3:	call   0x140007278
   1400044c8:	mov    edx,0x8
   1400044cd:	mov    DWORD PTR [rbx+0x78],esi
   1400044d0:	mov    rcx,r12
   1400044d3:	call   QWORD PTR [rip+0x3dc7]        # 0x1400082a0
   1400044d9:	test   r15,r15
   1400044dc:	je     0x140004667
   1400044e2:	sub    r15,rsi
   1400044e5:	je     0x1400045e0
   1400044eb:	sub    r15,rsi
   1400044ee:	je     0x1400045c7
   1400044f4:	sub    r15,rsi
   1400044f7:	je     0x140004527
   1400044f9:	sub    r15,rsi
   1400044fc:	je     0x140004516
   1400044fe:	cmp    r15,rsi
   140004501:	jne    0x1400046c9
   140004507:	mov    rcx,QWORD PTR [rbx+0x38]
   14000450b:	call   QWORD PTR [rip+0x3b9f]        # 0x1400080b0
   140004511:	jmp    0x1400046c9
   140004516:	mov    rdx,rsi
   140004519:	mov    rcx,r12
   14000451c:	call   QWORD PTR [rip+0x3d86]        # 0x1400082a8
   140004522:	jmp    0x1400046c9
   140004527:	xor    edx,edx
   140004529:	mov    QWORD PTR [rsp+0x38],r14
   14000452e:	mov    rcx,r12
   140004531:	mov    DWORD PTR [rsp+0x40],r14d
   140004536:	mov    DWORD PTR [rbx+0x78],esi
   140004539:	call   QWORD PTR [rip+0x3d61]        # 0x1400082a0
   14000453f:	lea    rcx,[rsp+0x38]
   140004544:	call   0x140006ce8
   140004549:	test   eax,eax
   14000454b:	je     0x140004585
   14000454d:	mov    r8d,DWORD PTR [rbx+0x18]
   140004551:	mov    rcx,rbx
   140004554:	call   0x140003434
   140004559:	mov    rdi,QWORD PTR [rsp+0x38]
   14000455e:	mov    esi,DWORD PTR [rsp+0x40]
   140004562:	test   rdi,rdi
   140004565:	je     0x14000458e
   140004567:	test   esi,esi
   140004569:	je     0x140004577
   14000456b:	mov    rcx,rdi
   14000456e:	call   QWORD PTR [rip+0x3c1c]        # 0x140008190
   140004574:	mov    esi,r14d
   140004577:	mov    rcx,rdi
   14000457a:	call   QWORD PTR [rip+0x3b00]        # 0x140008080
   140004580:	mov    rdi,r14
   140004583:	jmp    0x14000458e
   140004585:	mov    esi,DWORD PTR [rsp+0x40]
   140004589:	mov    rdi,QWORD PTR [rsp+0x38]
   14000458e:	mov    rcx,QWORD PTR [rbx+0x38]
   140004592:	call   QWORD PTR [rip+0x3b18]        # 0x1400080b0
   140004598:	xor    edx,edx
   14000459a:	mov    rcx,r12
   14000459d:	call   QWORD PTR [rip+0x3cfd]        # 0x1400082a0
   1400045a3:	test   rdi,rdi
   1400045a6:	je     0x1400046c9
   1400045ac:	test   esi,esi
   1400045ae:	je     0x1400045b9
   1400045b0:	mov    rcx,rdi
   1400045b3:	call   QWORD PTR [rip+0x3bd7]        # 0x140008190
   1400045b9:	mov    rcx,rdi
   1400045bc:	call   QWORD PTR [rip+0x3abe]        # 0x140008080
   1400045c2:	jmp    0x1400046c9
   1400045c7:	mov    r8d,0x64
   1400045cd:	mov    rcx,QWORD PTR [rbx]
   1400045d0:	mov    edx,0x3f2
   1400045d5:	call   QWORD PTR [rip+0x3e15]        # 0x1400083f0
   1400045db:	jmp    0x1400046b1
   1400045e0:	cmp    DWORD PTR [rbx+0x58],r14d
   1400045e4:	je     0x1400046c9
   1400045ea:	mov    edi,0x3ea
   1400045ef:	cmp    DWORD PTR [rbx+0x5c],r14d
   1400045f3:	jne    0x140004634
   1400045f5:	mov    eax,0x80008001
   1400045fa:	lea    r8d,[rdi+0x17]
   1400045fe:	mul    DWORD PTR [rbx+0x58]
   140004601:	mov    eax,DWORD PTR [rbx+0x58]
   140004604:	xor    r9d,r9d
   140004607:	shr    edx,0xf
   14000460a:	lea    ecx,[rdx+0x1]
   14000460d:	xor    edx,edx
   14000460f:	div    ecx
   140004611:	mov    DWORD PTR [rbx+0x5c],ecx
   140004614:	mov    edx,edi
   140004616:	movzx  eax,ax
   140004619:	mov    rcx,r12
   14000461c:	shl    eax,0x10
   14000461f:	mov    QWORD PTR [rsp+0x20],rax
   140004624:	call   QWORD PTR [rip+0x3cce]        # 0x1400082f8
   14000462a:	cmp    DWORD PTR [rbx+0x5c],r14d
   14000462e:	je     0x1400046c9
   140004634:	mov    eax,DWORD PTR [rbx+0x54]
   140004637:	xor    edx,edx
   140004639:	div    DWORD PTR [rbx+0x5c]
   14000463c:	mov    r8d,0x402
   140004642:	mov    QWORD PTR [rsp+0x20],r14
   140004647:	movzx  r9d,ax
   14000464b:	mov    edx,edi
   14000464d:	mov    rcx,r12
   140004650:	call   QWORD PTR [rip+0x3ca2]        # 0x1400082f8
   140004656:	imul   eax,DWORD PTR [rbx+0x54],0x64
   14000465a:	xor    edx,edx
   14000465c:	div    DWORD PTR [rbx+0x58]
   14000465f:	mov    r8d,eax
   140004662:	jmp    0x1400045cd
   140004667:	mov    edi,0x3ea
   14000466c:	mov    DWORD PTR [rbx+0x5c],r14d
   140004670:	xor    r9d,r9d
   140004673:	mov    QWORD PTR [rsp+0x20],0x640000
   14000467c:	mov    edx,edi
   14000467e:	mov    rcx,r12
   140004681:	lea    r8d,[rdi+0x17]
   140004685:	call   QWORD PTR [rip+0x3c6d]        # 0x1400082f8
   14000468b:	xor    r9d,r9d
   14000468e:	mov    QWORD PTR [rsp+0x20],r14
   140004693:	lea    r8d,[rdi+0x18]
   140004697:	mov    edx,edi
   140004699:	mov    rcx,r12
   14000469c:	call   QWORD PTR [rip+0x3c56]        # 0x1400082f8
   1400046a2:	mov    rcx,QWORD PTR [rbx]
   1400046a5:	lea    edx,[rdi+0x8]
   1400046a8:	xor    r8d,r8d
   1400046ab:	call   QWORD PTR [rip+0x3d3f]        # 0x1400083f0
   1400046b1:	mov    rdx,rax
   1400046b4:	mov    rcx,r12
   1400046b7:	mov    rbx,rax
   1400046ba:	call   QWORD PTR [rip+0x3bb8]        # 0x140008278
   1400046c0:	mov    rcx,rbx
   1400046c3:	call   QWORD PTR [rip+0x3d47]        # 0x140008410
   1400046c9:	xor    eax,eax
   1400046cb:	mov    rcx,QWORD PTR [rbp+0x180]
   1400046d2:	xor    rcx,rsp
   1400046d5:	call   0x1400076f0
   1400046da:	mov    rbx,QWORD PTR [rsp+0x2d8]
   1400046e2:	add    rsp,0x290
   1400046e9:	pop    r15
   1400046eb:	pop    r14
   1400046ed:	pop    r13
   1400046ef:	pop    r12
   1400046f1:	pop    rdi
   1400046f2:	pop    rsi
   1400046f3:	pop    rbp
   1400046f4:	ret    
   1400046f5:	int3   
   1400046f6:	int3   
   1400046f7:	int3   
   1400046f8:	int3   
   1400046f9:	int3   
   1400046fa:	int3   
   1400046fb:	int3   
   1400046fc:	test   rcx,rcx
   1400046ff:	je     0x14000499a
   140004705:	mov    QWORD PTR [rsp+0x10],rbx
   14000470a:	push   rbp
   14000470b:	push   rsi
   14000470c:	push   rdi
   14000470d:	lea    rbp,[rsp-0x180]
   140004715:	sub    rsp,0x280
   14000471c:	mov    rax,QWORD PTR [rip+0x88e5]        # 0x14000d008
   140004723:	xor    rax,rsp
   140004726:	mov    QWORD PTR [rbp+0x170],rax
   14000472d:	mov    dl,0x3f
   14000472f:	mov    QWORD PTR [rsp+0x70],rcx
   140004734:	mov    rdi,r9
   140004737:	mov    QWORD PTR [rsp+0x78],0x825
   140004740:	mov    rsi,r8
   140004743:	mov    rbx,rcx
   140004746:	call   QWORD PTR [rip+0x3cd4]        # 0x140008420
   14000474c:	mov    rcx,rbx
   14000474f:	test   rax,rax
   140004752:	jne    0x14000475d
   140004754:	lea    r8,[rip+0x512d]        # 0x140009888
   14000475b:	jmp    0x140004777
   14000475d:	call   QWORD PTR [rip+0x3abd]        # 0x140008220
   140004763:	movsxd rcx,eax
   140004766:	cmp    BYTE PTR [rcx+rbx*1-0x1],0x26
   14000476b:	je     0x1400047a4
   14000476d:	lea    r8,[rip+0x5148]        # 0x1400098bc
   140004774:	mov    rcx,rbx
   140004777:	lea    rax,[rsp+0x78]
   14000477c:	lea    r9,[rsp+0x70]
   140004781:	mov    QWORD PTR [rsp+0x20],rax
   140004786:	call   0x140001ff8
   14000478b:	test   eax,eax
   14000478d:	jns    0x1400047a4
   14000478f:	mov    ecx,DWORD PTR [rip+0x890b]        # 0x14000d0a0
   140004795:	lea    rdx,[rip+0x50f4]        # 0x140009890
   14000479c:	mov    r8d,eax
   14000479f:	call   0x140007278
   1400047a4:	lea    rcx,[rbp-0x80]
   1400047a8:	call   QWORD PTR [rip+0x3a92]        # 0x140008240
   1400047ae:	mov    ebx,0x94
   1400047b3:	lea    rcx,[rbp-0x50]
   1400047b7:	mov    r8d,ebx
   1400047ba:	xor    edx,edx
   1400047bc:	call   0x140007c76
   1400047c1:	lea    rcx,[rbp-0x50]
   1400047c5:	mov    DWORD PTR [rbp-0x50],ebx
   1400047c8:	call   QWORD PTR [rip+0x398a]        # 0x140008158
   1400047ce:	cmp    DWORD PTR [rbp-0x40],0x1
   1400047d2:	mov    ecx,0x800
   1400047d7:	movzx  eax,WORD PTR [rbp-0x44]
   1400047db:	mov    ebx,DWORD PTR [rbp-0x44]
   1400047de:	cmove  ebx,eax
   1400047e1:	call   QWORD PTR [rip+0x3951]        # 0x140008138
   1400047e7:	movzx  edx,WORD PTR [rbp-0x80]
   1400047eb:	lea    rcx,[rip+0x50ce]        # 0x1400098c0
   1400047f2:	mov    QWORD PTR [rsp+0x60],rcx
   1400047f7:	lea    r9,[rsp+0x78]
   1400047fc:	mov    ecx,DWORD PTR [rbp-0x48]
   1400047ff:	lea    r8,[rsp+0x70]
   140004804:	mov    DWORD PTR [rsp+0x58],ebx
   140004808:	mov    DWORD PTR [rsp+0x50],ecx
   14000480c:	mov    ecx,DWORD PTR [rbp-0x4c]
   14000480f:	mov    DWORD PTR [rsp+0x48],ecx
   140004813:	mov    rcx,QWORD PTR [rsp+0x70]
   140004818:	mov    DWORD PTR [rsp+0x40],eax
   14000481c:	mov    eax,DWORD PTR [rbp-0x40]
   14000481f:	mov    DWORD PTR [rsp+0x38],eax
   140004823:	lea    rax,[rip+0x50ae]        # 0x1400098d8
   14000482a:	mov    DWORD PTR [rsp+0x30],edx
   14000482e:	mov    rdx,QWORD PTR [rsp+0x78]
   140004833:	mov    QWORD PTR [rsp+0x28],rax
   140004838:	mov    DWORD PTR [rsp+0x20],0x100
   140004840:	call   0x140002208
   140004845:	test   eax,eax
   140004847:	jns    0x14000485e
   140004849:	mov    ecx,DWORD PTR [rip+0x8851]        # 0x14000d0a0
   14000484f:	lea    rdx,[rip+0x50ba]        # 0x140009910
   140004856:	mov    r8d,eax
   140004859:	call   0x140007278
   14000485e:	test   rsi,rsi
   140004861:	je     0x1400048b3
   140004863:	cmp    BYTE PTR [rsi],0x0
   140004866:	je     0x1400048b3
   140004868:	mov    rdx,QWORD PTR [rsp+0x78]
   14000486d:	lea    rax,[rip+0x50cc]        # 0x140009940
   140004874:	mov    rcx,QWORD PTR [rsp+0x70]
   140004879:	lea    r9,[rsp+0x78]
   14000487e:	mov    QWORD PTR [rsp+0x30],rsi
   140004883:	lea    r8,[rsp+0x70]
   140004888:	mov    QWORD PTR [rsp+0x28],rax
   14000488d:	mov    DWORD PTR [rsp+0x20],0x100
   140004895:	call   0x140002208
   14000489a:	test   eax,eax
   14000489c:	jns    0x1400048b3
   14000489e:	mov    ecx,DWORD PTR [rip+0x87fc]        # 0x14000d0a0
   1400048a4:	lea    rdx,[rip+0x5065]        # 0x140009910
   1400048ab:	mov    r8d,eax
   1400048ae:	call   0x140007278
   1400048b3:	test   rdi,rdi
   1400048b6:	je     0x140004979
   1400048bc:	cmp    BYTE PTR [rdi],0x0
   1400048bf:	je     0x140004979
   1400048c5:	mov    BYTE PTR [rbp+0x60],0x0
   1400048c9:	or     rax,0xffffffffffffffff
   1400048cd:	mov    BYTE PTR [rbp+0x51],0x0
   1400048d1:	inc    rax
   1400048d4:	cmp    BYTE PTR [rdi+rax*1],0x0
   1400048d8:	jne    0x1400048d1
   1400048da:	movsxd rbx,eax
   1400048dd:	test   eax,eax
   1400048df:	jle    0x14000492a
   1400048e1:	mov    esi,0x104
   1400048e6:	mov    al,BYTE PTR [rdi]
   1400048e8:	lea    rcx,[rbp+0x60]
   1400048ec:	mov    rdx,rsi
   1400048ef:	cmp    al,0x20
   1400048f1:	jne    0x1400048fc
   1400048f3:	lea    r8,[rip+0x5052]        # 0x14000994c
   1400048fa:	jmp    0x140004903
   1400048fc:	mov    BYTE PTR [rbp+0x50],al
   1400048ff:	lea    r8,[rbp+0x50]
   140004903:	call   0x140001f3c
   140004908:	test   eax,eax
   14000490a:	jns    0x140004921
   14000490c:	mov    ecx,DWORD PTR [rip+0x878e]        # 0x14000d0a0
   140004912:	lea    rdx,[rip+0x5037]        # 0x140009950
   140004919:	mov    r8d,eax
   14000491c:	call   0x140007278
   140004921:	inc    rdi
   140004924:	sub    rbx,0x1
   140004928:	jne    0x1400048e6
   14000492a:	mov    rdx,QWORD PTR [rsp+0x78]
   14000492f:	lea    rax,[rbp+0x60]
   140004933:	mov    rcx,QWORD PTR [rsp+0x70]
   140004938:	lea    r9,[rsp+0x78]
   14000493d:	mov    QWORD PTR [rsp+0x30],rax
   140004942:	lea    r8,[rsp+0x70]
   140004947:	lea    rax,[rip+0x502a]        # 0x140009978
   14000494e:	mov    QWORD PTR [rsp+0x28],rax
   140004953:	mov    DWORD PTR [rsp+0x20],0x100
   14000495b:	call   0x140002208
   140004960:	test   eax,eax
   140004962:	jns    0x140004979
   140004964:	mov    ecx,DWORD PTR [rip+0x8736]        # 0x14000d0a0
   14000496a:	lea    rdx,[rip+0x4f9f]        # 0x140009910
   140004971:	mov    r8d,eax
   140004974:	call   0x140007278
   140004979:	mov    rcx,QWORD PTR [rbp+0x170]
   140004980:	xor    rcx,rsp
   140004983:	call   0x1400076f0
   140004988:	mov    rbx,QWORD PTR [rsp+0x2a8]
   140004990:	add    rsp,0x280
   140004997:	pop    rdi
   140004998:	pop    rsi
   140004999:	pop    rbp
   14000499a:	ret    
   14000499b:	int3   
   14000499c:	int3   
   14000499d:	int3   
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	int3   
   1400049a1:	int3   
   1400049a2:	int3   
   1400049a3:	int3   
   1400049a4:	int3   
   1400049a5:	int3   
   1400049a6:	int3   
   1400049a7:	int3   
   1400049a8:	int3   
   1400049a9:	int3   
   1400049aa:	int3   
   1400049ab:	int3   
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400049b5:	mov    QWORD PTR [rsp+0x20],rbp
   1400049ba:	push   rsi
   1400049bb:	push   rdi
   1400049bc:	push   r14
   1400049be:	sub    rsp,0x150
   1400049c5:	mov    rax,QWORD PTR [rip+0x863c]        # 0x14000d008
   1400049cc:	xor    rax,rsp
   1400049cf:	mov    QWORD PTR [rsp+0x140],rax
   1400049d7:	mov    rdi,QWORD PTR [rsp+0x190]
   1400049df:	mov    rsi,rcx
   1400049e2:	mov    r14,rdx
   1400049e5:	mov    eax,DWORD PTR [rdi+0x40]
   1400049e8:	lea    ecx,[rax+0x1]
   1400049eb:	cmp    ecx,eax
   1400049ed:	jb     0x140004bfd
   1400049f3:	mov    eax,ecx
   1400049f5:	imul   rcx,rax,0x3b0
   1400049fc:	mov    eax,0xffffffff
   140004a01:	cmp    rcx,rax
   140004a04:	ja     0x140004bfd
   140004a0a:	mov    edx,ecx
   140004a0c:	mov    rcx,QWORD PTR [rdi+0x48]
   140004a10:	call   QWORD PTR [rip+0x3a02]        # 0x140008418
   140004a16:	mov    rbx,rax
   140004a19:	test   rax,rax
   140004a1c:	je     0x140004bf6
   140004a22:	mov    edx,DWORD PTR [rdi+0x40]
   140004a25:	mov    rcx,rsi
   140004a28:	imul   r8,rdx,0x3b0
   140004a2f:	mov    QWORD PTR [rdi+0x48],rax
   140004a33:	add    rbx,r8
   140004a36:	call   QWORD PTR [rip+0x39cc]        # 0x140008408
   140004a3c:	mov    QWORD PTR [rbx],rax
   140004a3f:	test   rax,rax
   140004a42:	je     0x140004bdc
   140004a48:	mov    QWORD PTR [rsp+0x28],rax
   140004a4d:	lea    r9,[rsp+0x30]
   140004a52:	mov    esi,0x104
   140004a57:	lea    r8,[rip+0x4225]        # 0x140008c83
   140004a5e:	lea    rdx,[rip+0x416b]        # 0x140008bd0
   140004a65:	mov    DWORD PTR [rsp+0x20],esi
   140004a69:	lea    rcx,[rip+0x4148]        # 0x140008bb8
   140004a70:	call   QWORD PTR [rip+0x36aa]        # 0x140008120
   140004a76:	lea    rcx,[rsp+0x30]
   140004a7b:	call   QWORD PTR [rip+0x3987]        # 0x140008408
   140004a81:	mov    QWORD PTR [rbx+0x20],rax
   140004a85:	lea    r9,[rsp+0x30]
   140004a8a:	mov    rax,QWORD PTR [rbx]
   140004a8d:	lea    r8,[rip+0x41ef]        # 0x140008c83
   140004a94:	mov    QWORD PTR [rsp+0x28],rax
   140004a99:	lea    rdx,[rip+0x4168]        # 0x140008c08
   140004aa0:	lea    rcx,[rip+0x415d]        # 0x140008c04
   140004aa7:	mov    DWORD PTR [rsp+0x20],esi
   140004aab:	call   QWORD PTR [rip+0x366f]        # 0x140008120
   140004ab1:	lea    rcx,[rsp+0x30]
   140004ab6:	call   QWORD PTR [rip+0x394c]        # 0x140008408
   140004abc:	mov    QWORD PTR [rbx+0x8],rax
   140004ac0:	lea    r9,[rsp+0x30]
   140004ac5:	mov    rax,QWORD PTR [rbx]
   140004ac8:	lea    r8,[rip+0x41b4]        # 0x140008c83
   140004acf:	mov    QWORD PTR [rsp+0x28],rax
   140004ad4:	lea    rdx,[rip+0x4135]        # 0x140008c10
   140004adb:	lea    rcx,[rip+0x4122]        # 0x140008c04
   140004ae2:	mov    DWORD PTR [rsp+0x20],esi
   140004ae6:	call   QWORD PTR [rip+0x3634]        # 0x140008120
   140004aec:	lea    rcx,[rsp+0x30]
   140004af1:	call   QWORD PTR [rip+0x3911]        # 0x140008408
   140004af7:	mov    rcx,QWORD PTR [rbx+0x8]
   140004afb:	mov    dl,0x5c
   140004afd:	mov    QWORD PTR [rbx+0x10],rax
   140004b01:	call   QWORD PTR [rip+0x3949]        # 0x140008450
   140004b07:	mov    rbp,rax
   140004b0a:	test   rax,rax
   140004b0d:	jne    0x140004b18
   140004b0f:	lea    rdx,[rip+0x4e6a]        # 0x140009980
   140004b16:	jmp    0x140004b32
   140004b18:	mov    dl,0x2e
   140004b1a:	mov    rcx,rax
   140004b1d:	call   QWORD PTR [rip+0x38fd]        # 0x140008420
   140004b23:	mov    rsi,rax
   140004b26:	test   rax,rax
   140004b29:	jne    0x140004b50
   140004b2b:	lea    rdx,[rip+0x4e76]        # 0x1400099a8
   140004b32:	mov    ecx,DWORD PTR [rip+0x8568]        # 0x14000d0a0
   140004b38:	call   0x140007278
   140004b3d:	lea    rcx,[rip+0x413f]        # 0x140008c83
   140004b44:	call   QWORD PTR [rip+0x38be]        # 0x140008408
   140004b4a:	mov    QWORD PTR [rbx+0x30],rax
   140004b4e:	jmp    0x140004b7b
   140004b50:	lea    rcx,[rbp+0x1]
   140004b54:	mov    BYTE PTR [rax],0x0
   140004b57:	call   QWORD PTR [rip+0x38ab]        # 0x140008408
   140004b5d:	mov    QWORD PTR [rbx+0x30],rax
   140004b61:	test   rax,rax
   140004b64:	jne    0x140004b78
   140004b66:	mov    ecx,DWORD PTR [rip+0x8534]        # 0x14000d0a0
   140004b6c:	lea    rdx,[rip+0x4e5d]        # 0x1400099d0
   140004b73:	call   0x140007278
   140004b78:	mov    BYTE PTR [rsi],0x2e
   140004b7b:	cmp    QWORD PTR [rbx+0x20],0x0
   140004b80:	je     0x140004bdc
   140004b82:	mov    esi,0x825
   140004b87:	mov    ecx,esi
   140004b89:	call   QWORD PTR [rip+0x3899]        # 0x140008428
   140004b8f:	mov    QWORD PTR [rbx+0x18],rax
   140004b93:	test   rax,rax
   140004b96:	je     0x140004bdc
   140004b98:	mov    r8,r14
   140004b9b:	mov    DWORD PTR [rsp+0x28],0x900
   140004ba3:	mov    edx,esi
   140004ba5:	mov    rcx,rax
   140004ba8:	call   0x140001d00
   140004bad:	test   eax,eax
   140004baf:	js     0x140004bc7
   140004bb1:	mov    r9,QWORD PTR [rbx+0x30]
   140004bb5:	mov    r8,QWORD PTR [rbx+0x20]
   140004bb9:	mov    rcx,QWORD PTR [rbx+0x18]
   140004bbd:	call   0x1400046fc
   140004bc2:	inc    DWORD PTR [rdi+0x40]
   140004bc5:	jmp    0x140004bf6
   140004bc7:	mov    ecx,DWORD PTR [rip+0x84d3]        # 0x14000d0a0
   140004bcd:	lea    rdx,[rip+0x4e1c]        # 0x1400099f0
   140004bd4:	mov    r8d,eax
   140004bd7:	call   0x140007278
   140004bdc:	mov    rcx,rbx
   140004bdf:	call   0x14000249c
   140004be4:	lea    rcx,[rbx+0x20]
   140004be8:	call   0x14000249c
   140004bed:	lea    rcx,[rbx+0x18]
   140004bf1:	call   0x14000249c
   140004bf6:	mov    eax,0x1
   140004bfb:	jmp    0x140004bff
   140004bfd:	xor    eax,eax
   140004bff:	mov    rcx,QWORD PTR [rsp+0x140]
   140004c07:	xor    rcx,rsp
   140004c0a:	call   0x1400076f0
   140004c0f:	lea    r11,[rsp+0x150]
   140004c17:	mov    rbx,QWORD PTR [r11+0x30]
   140004c1b:	mov    rbp,QWORD PTR [r11+0x38]
   140004c1f:	mov    rsp,r11
   140004c22:	pop    r14
   140004c24:	pop    rdi
   140004c25:	pop    rsi
   140004c26:	ret    
   140004c27:	int3   
   140004c28:	int3   
   140004c29:	int3   
   140004c2a:	int3   
   140004c2b:	int3   
   140004c2c:	int3   
   140004c2d:	int3   
   140004c2e:	int3   
   140004c2f:	int3   
   140004c30:	mov    rax,rsp
   140004c33:	mov    QWORD PTR [rax+0x10],rbx
   140004c37:	mov    QWORD PTR [rax+0x18],rsi
   140004c3b:	mov    QWORD PTR [rax+0x20],rdi
   140004c3f:	push   rbp
   140004c40:	push   r12
   140004c42:	push   r13
   140004c44:	push   r14
   140004c46:	push   r15
   140004c48:	lea    rbp,[rax-0x2f8]
   140004c4f:	sub    rsp,0x3d0
   140004c56:	mov    rax,QWORD PTR [rip+0x83ab]        # 0x14000d008
   140004c5d:	xor    rax,rsp
   140004c60:	mov    QWORD PTR [rbp+0x2c0],rax
   140004c67:	xor    r12d,r12d
   140004c6a:	mov    rdi,rcx
   140004c6d:	mov    r13d,r12d
   140004c70:	mov    DWORD PTR [rsp+0x30],r12d
   140004c75:	call   QWORD PTR [rip+0x3445]        # 0x1400080c0
   140004c7b:	mov    rcx,rax
   140004c7e:	call   QWORD PTR [rip+0x3784]        # 0x140008408
   140004c84:	mov    QWORD PTR [rsp+0x38],rax
   140004c89:	mov    r14,rax
   140004c8c:	test   rax,rax
   140004c8f:	je     0x140004df9
   140004c95:	cmp    BYTE PTR [rax],r12b
   140004c98:	je     0x140004df9
   140004c9e:	lea    ecx,[r12+0x78]
   140004ca3:	call   QWORD PTR [rip+0x377f]        # 0x140008428
   140004ca9:	mov    rsi,rax
   140004cac:	test   rax,rax
   140004caf:	jne    0x140004d28
   140004cb1:	mov    esi,r12d
   140004cb4:	lea    rdx,[rip+0x4db5]        # 0x140009a70
   140004cbb:	mov    ecx,DWORD PTR [rip+0x83df]        # 0x14000d0a0
   140004cc1:	call   0x140007278
   140004cc6:	test   r13,r13
   140004cc9:	je     0x140004cd4
   140004ccb:	mov    rcx,r13
   140004cce:	call   QWORD PTR [rip+0x373c]        # 0x140008410
   140004cd4:	mov    ebx,DWORD PTR [rsp+0x30]
   140004cd8:	mov    rcx,QWORD PTR [rsp+0x38]
   140004cdd:	test   rcx,rcx
   140004ce0:	je     0x140004ce8
   140004ce2:	call   QWORD PTR [rip+0x3728]        # 0x140008410
   140004ce8:	test   rsi,rsi
   140004ceb:	je     0x140004cf6
   140004ced:	mov    rcx,rsi
   140004cf0:	call   QWORD PTR [rip+0x371a]        # 0x140008410
   140004cf6:	mov    eax,ebx
   140004cf8:	mov    rcx,QWORD PTR [rbp+0x2c0]
   140004cff:	xor    rcx,rsp
   140004d02:	call   0x1400076f0
   140004d07:	lea    r11,[rsp+0x3d0]
   140004d0f:	mov    rbx,QWORD PTR [r11+0x38]
   140004d13:	mov    rsi,QWORD PTR [r11+0x40]
   140004d17:	mov    rdi,QWORD PTR [r11+0x48]
   140004d1b:	mov    rsp,r11
   140004d1e:	pop    r15
   140004d20:	pop    r14
   140004d22:	pop    r13
   140004d24:	pop    r12
   140004d26:	pop    rbp
   140004d27:	ret    
   140004d28:	mov    ebx,0x3
   140004d2d:	mov    r12,r14
   140004d30:	xor    r15d,r15d
   140004d33:	cmp    BYTE PTR [r14],r13b
   140004d36:	je     0x140004dcb
   140004d3c:	cmp    BYTE PTR [r14],0x20
   140004d40:	je     0x140004d93
   140004d42:	cmp    BYTE PTR [r14],0x22
   140004d46:	je     0x140004d5b
   140004d48:	test   ebx,0xfffffffd
   140004d4e:	jne    0x140004dd9
   140004d54:	mov    ebx,0x3
   140004d59:	jmp    0x140004dd9
   140004d5b:	cmp    ebx,0x1
   140004d5e:	jne    0x140004d8c
   140004d60:	mov    rcx,r14
   140004d63:	call   QWORD PTR [rip+0x356f]        # 0x1400082d8
   140004d69:	mov    rcx,r12
   140004d6c:	mov    BYTE PTR [r14],r13b
   140004d6f:	mov    rbx,rax
   140004d72:	call   QWORD PTR [rip+0x3560]        # 0x1400082d8
   140004d78:	mov    QWORD PTR [rsi+r15*8],rax
   140004d7c:	mov    r12,rbx
   140004d7f:	mov    r14,rbx
   140004d82:	inc    r15
   140004d85:	mov    ebx,0x2
   140004d8a:	jmp    0x140004dea
   140004d8c:	mov    ebx,0x1
   140004d91:	jmp    0x140004dd9
   140004d93:	cmp    ebx,0x3
   140004d96:	jne    0x140004db5
   140004d98:	mov    rcx,r14
   140004d9b:	call   QWORD PTR [rip+0x3537]        # 0x1400082d8
   140004da1:	mov    BYTE PTR [r14],r13b
   140004da4:	mov    r14,rax
   140004da7:	mov    QWORD PTR [rsi+r15*8],r12
   140004dab:	inc    r15
   140004dae:	xor    ebx,ebx
   140004db0:	mov    r12,rax
   140004db3:	jmp    0x140004dea
   140004db5:	test   ebx,0xfffffffd
   140004dbb:	jne    0x140004dd9
   140004dbd:	mov    rcx,r12
   140004dc0:	call   QWORD PTR [rip+0x3512]        # 0x1400082d8
   140004dc6:	mov    r12,rax
   140004dc9:	jmp    0x140004dd9
   140004dcb:	cmp    ebx,0x2
   140004dce:	je     0x140004dd4
   140004dd0:	mov    QWORD PTR [rsi+r15*8],r12
   140004dd4:	mov    ebx,0x4
   140004dd9:	mov    rcx,r14
   140004ddc:	call   QWORD PTR [rip+0x34f6]        # 0x1400082d8
   140004de2:	mov    r14,rax
   140004de5:	cmp    ebx,0x4
   140004de8:	je     0x140004df4
   140004dea:	cmp    r15,0xf
   140004dee:	jl     0x140004d33
   140004df4:	xor    r12d,r12d
   140004df7:	jmp    0x140004dfc
   140004df9:	mov    rsi,r12
   140004dfc:	test   rsi,rsi
   140004dff:	je     0x140004cb4
   140004e05:	cmp    QWORD PTR [rsi],r12
   140004e08:	je     0x140004cb4
   140004e0e:	cmp    QWORD PTR [rsi+0x8],r12
   140004e12:	mov    r15d,r12d
   140004e15:	mov    ebx,0x1
   140004e1a:	je     0x14000501c
   140004e20:	cmp    QWORD PTR [rip+0x81f9],r12        # 0x14000d020
   140004e27:	lea    rax,[rip+0x81f2]        # 0x14000d020
   140004e2e:	mov    r14d,r12d
   140004e31:	je     0x140004ea1
   140004e33:	mov    r12d,ebx
   140004e36:	mov    rdx,QWORD PTR [rsi+r12*8]
   140004e3a:	mov    rcx,QWORD PTR [rax]
   140004e3d:	call   QWORD PTR [rip+0x3225]        # 0x140008068
   140004e43:	test   eax,eax
   140004e45:	je     0x140004e66
   140004e47:	inc    r14d
   140004e4a:	lea    rcx,[rip+0x81cf]        # 0x14000d020
   140004e51:	mov    eax,r14d
   140004e54:	shl    rax,0x4
   140004e58:	add    rax,rcx
   140004e5b:	cmp    QWORD PTR [rax],0x0
   140004e5f:	jne    0x140004e36
   140004e61:	xor    r12d,r12d
   140004e64:	jmp    0x140004ea1
   140004e66:	xor    r12d,r12d
   140004e69:	test   r15d,r15d
   140004e6c:	jne    0x140004fd5
   140004e72:	mov    eax,r14d
   140004e75:	lea    rcx,[rip+0x81a4]        # 0x14000d020
   140004e7c:	add    rax,rax
   140004e7f:	mov    ecx,DWORD PTR [rcx+rax*8+0x8]
   140004e83:	cmp    ecx,0x4
   140004e86:	je     0x140004e94
   140004e88:	cmp    ecx,0x8
   140004e8b:	jne    0x140004e9e
   140004e8d:	lea    r15d,[r12+0x1]
   140004e92:	jmp    0x140004ea1
   140004e94:	cmp    QWORD PTR [rdi+0x10],r12
   140004e98:	jne    0x140004ffb
   140004e9e:	or     DWORD PTR [rdi+0x18],ecx
   140004ea1:	mov    eax,r14d
   140004ea4:	lea    r14,[rip+0x8175]        # 0x14000d020
   140004eab:	add    rax,rax
   140004eae:	cmp    QWORD PTR [r14+rax*8],r12
   140004eb2:	jne    0x140004fca
   140004eb8:	test   r15d,r15d
   140004ebb:	je     0x140004f54
   140004ec1:	test   r13,r13
   140004ec4:	jne    0x140004ffb
   140004eca:	mov    ecx,0x825
   140004ecf:	mov    r15d,r12d
   140004ed2:	call   QWORD PTR [rip+0x3550]        # 0x140008428
   140004ed8:	mov    r13,rax
   140004edb:	test   rax,rax
   140004ede:	je     0x140004cd4
   140004ee4:	mov    r14d,ebx
   140004ee7:	mov    edx,0x825
   140004eec:	mov    rcx,rax
   140004eef:	mov    DWORD PTR [rsp+0x28],0x900
   140004ef7:	mov    r8,QWORD PTR [rsi+r14*8]
   140004efb:	call   0x140001d00
   140004f00:	test   eax,eax
   140004f02:	js     0x140004cc6
   140004f08:	mov    r9,QWORD PTR [rsi+r14*8]
   140004f0c:	mov    edx,0x825
   140004f11:	mov    rcx,r13
   140004f14:	mov    r8d,r12d
   140004f17:	lea    rax,[rdx+0x7ffff7d9]
   140004f1e:	test   rax,rax
   140004f21:	je     0x140004f38
   140004f23:	mov    al,BYTE PTR [r9]
   140004f26:	test   al,al
   140004f28:	je     0x140004f38
   140004f2a:	mov    BYTE PTR [rcx],al
   140004f2c:	inc    r9
   140004f2f:	inc    rcx
   140004f32:	sub    rdx,0x1
   140004f36:	jne    0x140004f17
   140004f38:	test   rdx,rdx
   140004f3b:	jne    0x140004f46
   140004f3d:	dec    rcx
   140004f40:	mov    r8d,0x8007007a
   140004f46:	mov    BYTE PTR [rcx],r12b
   140004f49:	test   r8d,r8d
   140004f4c:	js     0x140004fe4
   140004f52:	jmp    0x140004fca
   140004f54:	cmp    QWORD PTR [rdi+0x10],r12
   140004f58:	jne    0x140004ffb
   140004f5e:	test   BYTE PTR [rdi+0x18],0x4
   140004f62:	jne    0x140004ffb
   140004f68:	mov    r8d,ebx
   140004f6b:	lea    rcx,[rbp+0xa0]
   140004f72:	mov    edx,0x105
   140004f77:	mov    DWORD PTR [rsp+0x28],0x100
   140004f7f:	mov    r8,QWORD PTR [rsi+r8*8]
   140004f83:	call   0x140001d00
   140004f88:	test   eax,eax
   140004f8a:	js     0x140004fe1
   140004f8c:	lea    rcx,[rbp+0xa0]
   140004f93:	call   QWORD PTR [rip+0x346f]        # 0x140008408
   140004f99:	mov    QWORD PTR [rdi+0x10],rax
   140004f9d:	test   rax,rax
   140004fa0:	je     0x140004cc6
   140004fa6:	mov    dl,0x5c
   140004fa8:	lea    rcx,[rbp+0xa0]
   140004faf:	call   QWORD PTR [rip+0x349b]        # 0x140008450
   140004fb5:	test   rax,rax
   140004fb8:	je     0x140004fca
   140004fba:	lea    rcx,[rbp+0xa0]
   140004fc1:	mov    BYTE PTR [rax],r12b
   140004fc4:	call   QWORD PTR [rip+0x3126]        # 0x1400080f0
   140004fca:	inc    ebx
   140004fcc:	cmp    QWORD PTR [rsi+rbx*8],r12
   140004fd0:	jmp    0x140004e1a
   140004fd5:	lea    rdx,[rip+0x4ab4]        # 0x140009a90
   140004fdc:	jmp    0x140004cbb
   140004fe1:	mov    r8d,eax
   140004fe4:	mov    ecx,DWORD PTR [rip+0x80b6]        # 0x14000d0a0
   140004fea:	lea    rdx,[rip+0x4aff]        # 0x140009af0
   140004ff1:	call   0x140007278
   140004ff6:	jmp    0x140004cc6
   140004ffb:	mov    ecx,DWORD PTR [rip+0x809f]        # 0x14000d0a0
   140005001:	lea    rdx,[rip+0x4ab8]        # 0x140009ac0
   140005008:	mov    r9d,ebx
   14000500b:	mov    r8d,ebx
   14000500e:	mov    r9,QWORD PTR [rsi+r9*8]
   140005012:	call   0x140007278
   140005017:	jmp    0x140004cc6
   14000501c:	mov    eax,DWORD PTR [rdi+0x18]
   14000501f:	test   al,0x40
   140005021:	je     0x140005043
   140005023:	or     eax,0x61
   140005026:	cmp    eax,0x61
   140005029:	jne    0x140004cc6
   14000502f:	mov    DWORD PTR [rsp+0x30],0x1
   140005037:	lea    rdx,[rip+0x4ae2]        # 0x140009b20
   14000503e:	jmp    0x140004cbb
   140005043:	test   r15d,r15d
   140005046:	jne    0x140004fd5
   140005048:	mov    rcx,QWORD PTR [rdi+0x10]
   14000504c:	test   rcx,rcx
   14000504f:	jne    0x140005066
   140005051:	test   al,0x4
   140005053:	jne    0x140005061
   140005055:	lea    rdx,[rip+0x4b14]        # 0x140009b70
   14000505c:	jmp    0x140004cbb
   140005061:	test   rcx,rcx
   140005064:	je     0x140005077
   140005066:	test   r13,r13
   140005069:	je     0x140005077
   14000506b:	lea    rdx,[rip+0x4b4e]        # 0x140009bc0
   140005072:	jmp    0x140004cbb
   140005077:	mov    ecx,0x3b0
   14000507c:	call   QWORD PTR [rip+0x33a6]        # 0x140008428
   140005082:	mov    QWORD PTR [rdi+0x48],rax
   140005086:	test   rax,rax
   140005089:	je     0x140004cc6
   14000508f:	inc    DWORD PTR [rdi+0x40]
   140005092:	lea    r14,[rip+0x3bea]        # 0x140008c83
   140005099:	mov    r15d,0x104
   14000509f:	test   r13,r13
   1400050a2:	jne    0x14000543c
   1400050a8:	mov    rax,QWORD PTR [rdi+0x10]
   1400050ac:	test   rax,rax
   1400050af:	jne    0x1400050c8
   1400050b1:	lea    rdx,[rip+0x4b58]        # 0x140009c10
   1400050b8:	mov    ecx,DWORD PTR [rip+0x7fe2]        # 0x14000d0a0
   1400050be:	call   0x140007278
   1400050c3:	jmp    0x140004cd4
   1400050c8:	mov    QWORD PTR [rsp+0x28],rax
   1400050cd:	lea    r13,[rip+0x3ae4]        # 0x140008bb8
   1400050d4:	mov    rcx,r13
   1400050d7:	mov    DWORD PTR [rsp+0x20],r15d
   1400050dc:	lea    r9,[rbp-0x70]
   1400050e0:	mov    r8,r14
   1400050e3:	lea    rdx,[rip+0x3b06]        # 0x140008bf0
   1400050ea:	call   QWORD PTR [rip+0x3030]        # 0x140008120
   1400050f0:	cmp    BYTE PTR [rbp-0x70],r12b
   1400050f4:	jne    0x140005111
   1400050f6:	mov    r8,QWORD PTR [rdi+0x10]
   1400050fa:	lea    rdx,[rip+0x4b5f]        # 0x140009c60
   140005101:	mov    ecx,DWORD PTR [rip+0x7f99]        # 0x14000d0a0
   140005107:	call   0x140007278
   14000510c:	jmp    0x140004cd4
   140005111:	mov    ebx,0x105
   140005116:	lea    r8,[rip+0x4b83]        # 0x140009ca0
   14000511d:	mov    edx,ebx
   14000511f:	lea    rcx,[rbp+0xa0]
   140005126:	call   0x140001f3c
   14000512b:	test   eax,eax
   14000512d:	jns    0x140005149
   14000512f:	lea    rdx,[rip+0x4b72]        # 0x140009ca8
   140005136:	mov    r8d,eax
   140005139:	mov    ecx,DWORD PTR [rip+0x7f61]        # 0x14000d0a0
   14000513f:	call   0x140007278
   140005144:	jmp    0x140004cd4
   140005149:	lea    r8,[rbp-0x70]
   14000514d:	mov    rdx,rbx
   140005150:	lea    rcx,[rbp+0xa0]
   140005157:	call   0x140001f3c
   14000515c:	test   eax,eax
   14000515e:	js     0x14000512f
   140005160:	lea    rcx,[rbp+0xa0]
   140005167:	call   QWORD PTR [rip+0x329b]        # 0x140008408
   14000516d:	mov    rcx,QWORD PTR [rdi+0x48]
   140005171:	mov    QWORD PTR [rcx],rax
   140005174:	mov    rax,QWORD PTR [rdi+0x48]
   140005178:	mov    rcx,QWORD PTR [rax]
   14000517b:	test   rcx,rcx
   14000517e:	je     0x140004cd4
   140005184:	mov    QWORD PTR [rsp+0x28],rcx
   140005189:	lea    r9,[rbp-0x70]
   14000518d:	lea    rcx,[rip+0x3a70]        # 0x140008c04
   140005194:	mov    DWORD PTR [rsp+0x20],r15d
   140005199:	mov    r8,r14
   14000519c:	lea    rdx,[rip+0x3a65]        # 0x140008c08
   1400051a3:	call   QWORD PTR [rip+0x2f77]        # 0x140008120
   1400051a9:	cmp    BYTE PTR [rbp-0x70],r12b
   1400051ad:	jne    0x1400051de
   1400051af:	mov    r8,QWORD PTR [rdi+0x48]
   1400051b3:	lea    rdx,[rip+0x4b16]        # 0x140009cd0
   1400051ba:	mov    ecx,DWORD PTR [rip+0x7ee0]        # 0x14000d0a0
   1400051c0:	mov    r8,QWORD PTR [r8]
   1400051c3:	call   0x140007278
   1400051c8:	mov    rcx,r14
   1400051cb:	call   QWORD PTR [rip+0x3237]        # 0x140008408
   1400051d1:	mov    rcx,QWORD PTR [rdi+0x48]
   1400051d5:	mov    QWORD PTR [rcx+0x30],rax
   1400051d9:	jmp    0x140005264
   1400051de:	lea    rcx,[rbp-0x70]
   1400051e2:	call   QWORD PTR [rip+0x3220]        # 0x140008408
   1400051e8:	mov    rcx,QWORD PTR [rdi+0x48]
   1400051ec:	mov    QWORD PTR [rcx+0x8],rax
   1400051f0:	test   rax,rax
   1400051f3:	je     0x140004cd4
   1400051f9:	mov    rcx,QWORD PTR [rdi+0x48]
   1400051fd:	mov    dl,0x5c
   1400051ff:	mov    rcx,QWORD PTR [rcx+0x8]
   140005203:	call   QWORD PTR [rip+0x3247]        # 0x140008450
   140005209:	mov    r14,rax
   14000520c:	test   rax,rax
   14000520f:	jne    0x14000521d
   140005211:	lea    rdx,[rip+0x4af8]        # 0x140009d10
   140005218:	jmp    0x1400050b8
   14000521d:	mov    dl,0x2e
   14000521f:	mov    rcx,rax
   140005222:	call   QWORD PTR [rip+0x31f8]        # 0x140008420
   140005228:	mov    rbx,rax
   14000522b:	test   rax,rax
   14000522e:	jne    0x14000523c
   140005230:	lea    rdx,[rip+0x4b01]        # 0x140009d38
   140005237:	jmp    0x1400050b8
   14000523c:	lea    rcx,[r14+0x1]
   140005240:	mov    BYTE PTR [rax],r12b
   140005243:	call   QWORD PTR [rip+0x31bf]        # 0x140008408
   140005249:	mov    rcx,QWORD PTR [rdi+0x48]
   14000524d:	mov    QWORD PTR [rcx+0x30],rax
   140005251:	test   rax,rax
   140005254:	je     0x140004cd4
   14000525a:	mov    BYTE PTR [rbx],0x2e
   14000525d:	lea    r14,[rip+0x3a1f]        # 0x140008c83
   140005264:	mov    rax,QWORD PTR [rdi+0x48]
   140005268:	lea    r9,[rbp-0x70]
   14000526c:	mov    r8,r14
   14000526f:	lea    rdx,[rip+0x399a]        # 0x140008c10
   140005276:	mov    rcx,QWORD PTR [rax]
   140005279:	mov    QWORD PTR [rsp+0x28],rcx
   14000527e:	lea    rcx,[rip+0x397f]        # 0x140008c04
   140005285:	mov    DWORD PTR [rsp+0x20],r15d
   14000528a:	call   QWORD PTR [rip+0x2e90]        # 0x140008120
   140005290:	cmp    BYTE PTR [rbp-0x70],r12b
   140005294:	jne    0x1400052af
   140005296:	mov    r8,QWORD PTR [rdi+0x48]
   14000529a:	lea    rdx,[rip+0x4a2f]        # 0x140009cd0
   1400052a1:	mov    ecx,DWORD PTR [rip+0x7df9]        # 0x14000d0a0
   1400052a7:	mov    r8,QWORD PTR [r8]
   1400052aa:	call   0x140007278
   1400052af:	lea    rcx,[rbp-0x70]
   1400052b3:	call   QWORD PTR [rip+0x314f]        # 0x140008408
   1400052b9:	mov    rcx,QWORD PTR [rdi+0x48]
   1400052bd:	mov    QWORD PTR [rcx+0x10],rax
   1400052c1:	test   rax,rax
   1400052c4:	je     0x140004cd4
   1400052ca:	mov    rax,QWORD PTR [rdi+0x48]
   1400052ce:	lea    r9,[rbp-0x70]
   1400052d2:	mov    r8,r14
   1400052d5:	lea    rdx,[rip+0x38f4]        # 0x140008bd0
   1400052dc:	mov    rcx,QWORD PTR [rax]
   1400052df:	mov    QWORD PTR [rsp+0x28],rcx
   1400052e4:	mov    rcx,r13
   1400052e7:	mov    DWORD PTR [rsp+0x20],r15d
   1400052ec:	call   QWORD PTR [rip+0x2e2e]        # 0x140008120
   1400052f2:	lea    rcx,[rbp-0x70]
   1400052f6:	call   QWORD PTR [rip+0x310c]        # 0x140008408
   1400052fc:	mov    rcx,QWORD PTR [rdi+0x48]
   140005300:	mov    QWORD PTR [rcx+0x20],rax
   140005304:	mov    rax,QWORD PTR [rdi+0x48]
   140005308:	cmp    QWORD PTR [rax+0x20],r12
   14000530c:	je     0x140004cd4
   140005312:	mov    ecx,0x825
   140005317:	call   QWORD PTR [rip+0x310b]        # 0x140008428
   14000531d:	mov    rcx,QWORD PTR [rdi+0x48]
   140005321:	mov    QWORD PTR [rcx+0x18],rax
   140005325:	mov    rbx,QWORD PTR [rdi+0x48]
   140005329:	cmp    QWORD PTR [rbx+0x18],r12
   14000532d:	je     0x140004cd4
   140005333:	mov    r14d,0x48
   140005339:	lea    rcx,[rsp+0x40]
   14000533e:	mov    r8d,r14d
   140005341:	xor    edx,edx
   140005343:	call   0x140007c76
   140005348:	mov    DWORD PTR [rsp+0x40],r14d
   14000534d:	lea    rdx,[rsp+0x40]
   140005352:	mov    rax,QWORD PTR [rbx+0x18]
   140005356:	mov    QWORD PTR [rsp+0x48],rax
   14000535b:	lea    rax,[rip+0xfffffffffffff64e]        # 0x1400049b0
   140005362:	mov    QWORD PTR [rsp+0x78],rax
   140005367:	mov    DWORD PTR [rsp+0x50],0x824
   14000536f:	mov    QWORD PTR [rbp-0x80],rdi
   140005373:	mov    rcx,QWORD PTR [rbx]
   140005376:	call   QWORD PTR [rip+0x302c]        # 0x1400083a8
   14000537c:	mov    DWORD PTR [rsp+0x30],eax
   140005380:	test   eax,eax
   140005382:	jne    0x140005396
   140005384:	call   QWORD PTR [rip+0x2cce]        # 0x140008058
   14000538a:	lea    rdx,[rip+0x49cf]        # 0x140009d60
   140005391:	jmp    0x140005136
   140005396:	mov    rcx,QWORD PTR [rsp+0x58]
   14000539b:	call   QWORD PTR [rip+0x2fe7]        # 0x140008388
   1400053a1:	mov    rcx,QWORD PTR [rsp+0x60]
   1400053a6:	call   QWORD PTR [rip+0x2fdc]        # 0x140008388
   1400053ac:	mov    r9,QWORD PTR [rdi+0x48]
   1400053b0:	lea    rdx,[rip+0x3941]        # 0x140008cf8
   1400053b7:	mov    r8d,0x78
   1400053bd:	mov    rcx,r13
   1400053c0:	mov    r9,QWORD PTR [r9]
   1400053c3:	call   QWORD PTR [rip+0x2cff]        # 0x1400080c8
   1400053c9:	imul   r8d,eax,0x3e8
   1400053d0:	lea    rdx,[rip+0x49b9]        # 0x140009d90
   1400053d7:	mov    DWORD PTR [rdi+0x8],r8d
   1400053db:	mov    ecx,DWORD PTR [rip+0x7cbf]        # 0x14000d0a0
   1400053e1:	call   0x140007278
   1400053e6:	mov    r9,QWORD PTR [rdi+0x48]
   1400053ea:	lea    rdx,[rip+0x38f7]        # 0x140008ce8
   1400053f1:	or     r8d,0xffffffff
   1400053f5:	mov    rcx,r13
   1400053f8:	mov    r9,QWORD PTR [r9]
   1400053fb:	call   QWORD PTR [rip+0x2cc7]        # 0x1400080c8
   140005401:	test   eax,eax
   140005403:	jns    0x14000540e
   140005405:	or     DWORD PTR [rdi+0x80],0xffffffff
   14000540c:	jmp    0x14000541a
   14000540e:	imul   eax,eax,0x3e8
   140005414:	mov    DWORD PTR [rdi+0x80],eax
   14000541a:	mov    r8d,DWORD PTR [rdi+0x80]
   140005421:	lea    rdx,[rip+0x4990]        # 0x140009db8
   140005428:	mov    ecx,DWORD PTR [rip+0x7c72]        # 0x14000d0a0
   14000542e:	call   0x140007278
   140005433:	lea    r14,[rip+0x3849]        # 0x140008c83
   14000543a:	jmp    0x140005447
   14000543c:	mov    QWORD PTR [rax+0x18],r13
   140005440:	lea    r13,[rip+0x3771]        # 0x140008bb8
   140005447:	cmp    QWORD PTR [rdi+0x10],r12
   14000544b:	je     0x1400055ba
   140005451:	mov    ebx,0x105
   140005456:	mov    ecx,ebx
   140005458:	call   QWORD PTR [rip+0x2fca]        # 0x140008428
   14000545e:	mov    QWORD PTR [rdi+0x60],rax
   140005462:	test   rax,rax
   140005465:	je     0x140004cd4
   14000546b:	mov    r8,QWORD PTR [rdi+0x48]
   14000546f:	lea    rcx,[rbp-0x70]
   140005473:	mov    edx,ebx
   140005475:	mov    DWORD PTR [rsp+0x28],0x100
   14000547d:	mov    r8,QWORD PTR [r8]
   140005480:	call   0x140001d00
   140005485:	mov    ebx,eax
   140005487:	test   eax,eax
   140005489:	jns    0x1400054a4
   14000548b:	mov    rcx,QWORD PTR [rdi+0x60]
   14000548f:	call   QWORD PTR [rip+0x2f7b]        # 0x140008410
   140005495:	mov    r8d,ebx
   140005498:	lea    rdx,[rip+0x4939]        # 0x140009dd8
   14000549f:	jmp    0x140005139
   1400054a4:	mov    dl,0x2e
   1400054a6:	lea    rcx,[rbp-0x70]
   1400054aa:	call   QWORD PTR [rip+0x2fa0]        # 0x140008450
   1400054b0:	test   rax,rax
   1400054b3:	je     0x1400054c4
   1400054b5:	mov    dl,0x2e
   1400054b7:	lea    rcx,[rbp-0x70]
   1400054bb:	call   QWORD PTR [rip+0x2f8f]        # 0x140008450
   1400054c1:	mov    BYTE PTR [rax],r12b
   1400054c4:	mov    dl,0x5c
   1400054c6:	lea    rcx,[rbp-0x70]
   1400054ca:	call   QWORD PTR [rip+0x2f80]        # 0x140008450
   1400054d0:	test   rax,rax
   1400054d3:	je     0x140005501
   1400054d5:	mov    dl,0x5c
   1400054d7:	lea    rcx,[rbp-0x70]
   1400054db:	call   QWORD PTR [rip+0x2f6f]        # 0x140008450
   1400054e1:	mov    edx,0x105
   1400054e6:	mov    DWORD PTR [rsp+0x28],0x100
   1400054ee:	lea    rcx,[rbp-0x70]
   1400054f2:	lea    r8,[rax+0x1]
   1400054f6:	call   0x140001d00
   1400054fb:	mov    ebx,eax
   1400054fd:	test   eax,eax
   1400054ff:	js     0x14000548b
   140005501:	mov    rax,QWORD PTR [rdi+0x48]
   140005505:	lea    r8,[rbp-0x70]
   140005509:	mov    r9,QWORD PTR [rdi+0x60]
   14000550d:	lea    rdx,[rip+0x36e4]        # 0x140008bf8
   140005514:	mov    rcx,QWORD PTR [rax]
   140005517:	mov    QWORD PTR [rsp+0x28],rcx
   14000551c:	mov    rcx,r13
   14000551f:	mov    DWORD PTR [rsp+0x20],r15d
   140005524:	call   QWORD PTR [rip+0x2bf6]        # 0x140008120
   14000552a:	mov    rax,QWORD PTR [rdi+0x48]
   14000552e:	lea    r9,[rbp+0x1b0]
   140005535:	mov    r8,r14
   140005538:	lea    rdx,[rip+0x3699]        # 0x140008bd8
   14000553f:	mov    rcx,QWORD PTR [rax]
   140005542:	mov    QWORD PTR [rsp+0x28],rcx
   140005547:	mov    rcx,r13
   14000554a:	mov    DWORD PTR [rsp+0x20],r15d
   14000554f:	call   QWORD PTR [rip+0x2bcb]        # 0x140008120
   140005555:	cmp    BYTE PTR [rbp+0x1b0],r12b
   14000555c:	je     0x140005572
   14000555e:	mov    rcx,QWORD PTR [rdi]
   140005561:	lea    rdx,[rbp+0x1b0]
   140005568:	call   QWORD PTR [rip+0x2e7a]        # 0x1400083e8
   14000556e:	mov    QWORD PTR [rdi+0x68],rax
   140005572:	mov    rax,QWORD PTR [rdi+0x48]
   140005576:	lea    r9,[rbp+0x1b0]
   14000557d:	mov    r8,r14
   140005580:	lea    rdx,[rip+0x3659]        # 0x140008be0
   140005587:	mov    rcx,QWORD PTR [rax]
   14000558a:	mov    QWORD PTR [rsp+0x28],rcx
   14000558f:	mov    rcx,r13
   140005592:	mov    DWORD PTR [rsp+0x20],r15d
   140005597:	call   QWORD PTR [rip+0x2b83]        # 0x140008120
   14000559d:	cmp    BYTE PTR [rbp+0x1b0],r12b
   1400055a4:	je     0x1400055ba
   1400055a6:	mov    rcx,QWORD PTR [rdi]
   1400055a9:	lea    rdx,[rbp+0x1b0]
   1400055b0:	call   QWORD PTR [rip+0x2e4a]        # 0x140008400
   1400055b6:	mov    QWORD PTR [rdi+0x70],rax
   1400055ba:	mov    ebx,0x66
   1400055bf:	cmp    QWORD PTR [rdi+0x68],r12
   1400055c3:	jne    0x1400055d4
   1400055c5:	mov    rcx,QWORD PTR [rdi]
   1400055c8:	mov    edx,ebx
   1400055ca:	call   QWORD PTR [rip+0x2e18]        # 0x1400083e8
   1400055d0:	mov    QWORD PTR [rdi+0x68],rax
   1400055d4:	cmp    QWORD PTR [rdi+0x70],r12
   1400055d8:	jne    0x1400055ea
   1400055da:	mov    rcx,QWORD PTR [rdi]
   1400055dd:	mov    rdx,rbx
   1400055e0:	call   QWORD PTR [rip+0x2e1a]        # 0x140008400
   1400055e6:	mov    QWORD PTR [rdi+0x70],rax
   1400055ea:	mov    rcx,QWORD PTR [rdi+0x48]
   1400055ee:	mov    r9,QWORD PTR [rcx+0x30]
   1400055f2:	mov    r8,QWORD PTR [rcx+0x20]
   1400055f6:	mov    rcx,QWORD PTR [rcx+0x18]
   1400055fa:	call   0x1400046fc
   1400055ff:	mov    ebx,0x1
   140005604:	jmp    0x140004cd8
   140005609:	int3   
   14000560a:	int3   
   14000560b:	int3   
   14000560c:	int3   
   14000560d:	int3   
   14000560e:	int3   
   14000560f:	int3   
   140005610:	mov    QWORD PTR [rsp+0x18],rbx
   140005615:	push   rbp
   140005616:	push   rsi
   140005617:	push   rdi
   140005618:	push   r12
   14000561a:	push   r13
   14000561c:	push   r14
   14000561e:	push   r15
   140005620:	lea    rbp,[rsp-0x5b0]
   140005628:	sub    rsp,0x6b0
   14000562f:	mov    rax,QWORD PTR [rip+0x79d2]        # 0x14000d008
   140005636:	xor    rax,rsp
   140005639:	mov    QWORD PTR [rbp+0x5a0],rax
   140005640:	mov    r15,rdx
   140005643:	mov    r14,rcx
   140005646:	mov    r12d,0x1
   14000564c:	lea    rcx,[rsp+0x51]
   140005651:	xor    r13d,r13d
   140005654:	xor    edx,edx
   140005656:	mov    r8d,0x104
   14000565c:	mov    BYTE PTR [rsp+0x50],r13b
   140005661:	mov    esi,r12d
   140005664:	call   0x140007c76
   140005669:	xor    r8d,r8d
   14000566c:	lea    rcx,[rip+0x4845]        # 0x140009eb8
   140005673:	xor    edx,edx
   140005675:	call   QWORD PTR [rip+0x2ad5]        # 0x140008150
   14000567b:	mov    rdi,rax
   14000567e:	test   rax,rax
   140005681:	je     0x1400056fc
   140005683:	lea    rdx,[rip+0x483e]        # 0x140009ec8
   14000568a:	mov    rcx,rax
   14000568d:	call   QWORD PTR [rip+0x2a6d]        # 0x140008100
   140005693:	mov    rbx,rax
   140005696:	test   rax,rax
   140005699:	je     0x1400056f3
   14000569b:	mov    rcx,rax
   14000569e:	call   QWORD PTR [rip+0x2e64]        # 0x140008508
   1400056a4:	xor    r9d,r9d
   1400056a7:	lea    r8d,[r12+0x19]
   1400056ac:	lea    rdx,[rbp+0x170]
   1400056b3:	xor    ecx,ecx
   1400056b5:	call   rbx
   1400056b7:	cmp    eax,r12d
   1400056ba:	jne    0x1400056f3
   1400056bc:	mov    r8,QWORD PTR [r14+0x10]
   1400056c0:	lea    rcx,[rbp+0x280]
   1400056c7:	mov    edx,0x105
   1400056cc:	mov    DWORD PTR [rsp+0x28],0x900
   1400056d4:	call   0x140001d00
   1400056d9:	lea    rdx,[rbp+0x170]
   1400056e0:	lea    rcx,[rbp+0x280]
   1400056e7:	call   QWORD PTR [rip+0x297b]        # 0x140008068
   1400056ed:	test   eax,eax
   1400056ef:	cmove  esi,r13d
   1400056f3:	mov    rcx,rdi
   1400056f6:	call   QWORD PTR [rip+0x29a4]        # 0x1400080a0
   1400056fc:	lea    rax,[rip+0x47dd]        # 0x140009ee0
   140005703:	test   esi,esi
   140005705:	lea    r9,[rip+0x4804]        # 0x140009f10
   14000570c:	mov    edx,0x208
   140005711:	cmovne r9,rax
   140005715:	lea    r8,[rip+0x3244]        # 0x140008960
   14000571c:	mov    rax,QWORD PTR [r14+0x60]
   140005720:	lea    rcx,[rbp+0x390]
   140005727:	mov    QWORD PTR [rsp+0x20],rax
   14000572c:	mov    edi,r12d
   14000572f:	mov    ebx,r13d
   140005732:	call   0x140001008
   140005737:	test   eax,eax
   140005739:	jns    0x140005742
   14000573b:	xor    eax,eax
   14000573d:	jmp    0x1400058c2
   140005742:	lea    rax,[rsp+0x38]
   140005747:	mov    r9d,r12d
   14000574a:	xor    r8d,r8d
   14000574d:	mov    QWORD PTR [rsp+0x20],rax
   140005752:	lea    rdx,[rbp+0x390]
   140005759:	mov    rcx,0xffffffff80000001
   140005760:	call   QWORD PTR [rip+0x289a]        # 0x140008000
   140005766:	test   eax,eax
   140005768:	jne    0x1400057c2
   14000576a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000576f:	lea    rax,[rsp+0x34]
   140005774:	mov    QWORD PTR [rsp+0x28],rax
   140005779:	lea    r9,[rsp+0x40]
   14000577e:	lea    rax,[rsp+0x30]
   140005783:	mov    DWORD PTR [rsp+0x34],0x4
   14000578b:	xor    r8d,r8d
   14000578e:	mov    QWORD PTR [rsp+0x20],rax
   140005793:	lea    rdx,[rip+0x3486]        # 0x140008c20
   14000579a:	call   QWORD PTR [rip+0x2870]        # 0x140008010
   1400057a0:	test   eax,eax
   1400057a2:	jne    0x1400057b3
   1400057a4:	cmp    DWORD PTR [rsp+0x30],r13d
   1400057a9:	mov    edi,r13d
   1400057ac:	mov    ebx,r12d
   1400057af:	setne  dil
   1400057b3:	mov    rcx,QWORD PTR [rsp+0x38]
   1400057b8:	call   QWORD PTR [rip+0x284a]        # 0x140008008
   1400057be:	test   ebx,ebx
   1400057c0:	jne    0x1400057de
   1400057c2:	mov    r9,r15
   1400057c5:	lea    rdx,[rip+0x3454]        # 0x140008c20
   1400057cc:	mov    r8d,r12d
   1400057cf:	lea    rcx,[rip+0x33e2]        # 0x140008bb8
   1400057d6:	call   QWORD PTR [rip+0x28ec]        # 0x1400080c8
   1400057dc:	mov    edi,eax
   1400057de:	mov    r9,r15
   1400057e1:	lea    rdx,[rip+0x3450]        # 0x140008c38
   1400057e8:	mov    r8d,0x64
   1400057ee:	lea    rcx,[rip+0x343b]        # 0x140008c30
   1400057f5:	call   QWORD PTR [rip+0x28cd]        # 0x1400080c8
   1400057fb:	lea    r9,[rsp+0x50]
   140005800:	mov    QWORD PTR [rsp+0x28],r15
   140005805:	lea    r8,[rip+0x3470]        # 0x140008c7c
   14000580c:	mov    DWORD PTR [rsp+0x20],0x104
   140005814:	lea    rdx,[rip+0x342d]        # 0x140008c48
   14000581b:	mov    r12d,eax
   14000581e:	lea    rcx,[rip+0x340b]        # 0x140008c30
   140005825:	call   QWORD PTR [rip+0x28f5]        # 0x140008120
   14000582b:	lea    r9,[rbp+0x60]
   14000582f:	mov    QWORD PTR [rsp+0x28],r15
   140005834:	lea    r8,[rip+0x3448]        # 0x140008c83
   14000583b:	mov    DWORD PTR [rsp+0x20],0x104
   140005843:	lea    rdx,[rip+0x33ae]        # 0x140008bf8
   14000584a:	lea    rcx,[rip+0x3367]        # 0x140008bb8
   140005851:	call   QWORD PTR [rip+0x28c9]        # 0x140008120
   140005857:	cmp    BYTE PTR [rbp+0x60],r13b
   14000585b:	jne    0x140005874
   14000585d:	mov    ecx,DWORD PTR [rip+0x783d]        # 0x14000d0a0
   140005863:	lea    rdx,[rip+0x46e6]        # 0x140009f50
   14000586a:	call   0x140007278
   14000586f:	jmp    0x14000573b
   140005874:	mov    rdx,QWORD PTR [r14]
   140005877:	lea    rbx,[r14+0x88]
   14000587e:	mov    rcx,rbx
   140005881:	lea    r9,[rbp+0x60]
   140005885:	mov    r8d,esi
   140005888:	call   QWORD PTR [rip+0x2bb2]        # 0x140008440
   14000588e:	lea    r9,[rsp+0x50]
   140005893:	mov    r8d,r12d
   140005896:	mov    edx,edi
   140005898:	mov    rcx,rbx
   14000589b:	call   QWORD PTR [rip+0x2ba7]        # 0x140008448
   1400058a1:	mov    rcx,rbx
   1400058a4:	cmp    DWORD PTR [r14+0xdc],r13d
   1400058ab:	je     0x1400058b7
   1400058ad:	xor    edx,edx
   1400058af:	call   QWORD PTR [rip+0x2ba3]        # 0x140008458
   1400058b5:	jmp    0x1400058bd
   1400058b7:	call   QWORD PTR [rip+0x2b03]        # 0x1400083c0
   1400058bd:	mov    eax,0x1
   1400058c2:	mov    rcx,QWORD PTR [rbp+0x5a0]
   1400058c9:	xor    rcx,rsp
   1400058cc:	call   0x1400076f0
   1400058d1:	mov    rbx,QWORD PTR [rsp+0x700]
   1400058d9:	add    rsp,0x6b0
   1400058e0:	pop    r15
   1400058e2:	pop    r14
   1400058e4:	pop    r13
   1400058e6:	pop    r12
   1400058e8:	pop    rdi
   1400058e9:	pop    rsi
   1400058ea:	pop    rbp
   1400058eb:	ret    
   1400058ec:	int3   
   1400058ed:	int3   
   1400058ee:	int3   
   1400058ef:	int3   
   1400058f0:	int3   
   1400058f1:	int3   
   1400058f2:	int3   
   1400058f3:	int3   
   1400058f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400058f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400058fe:	mov    QWORD PTR [rsp+0x18],rdi
   140005903:	push   rbp
   140005904:	push   r12
   140005906:	push   r13
   140005908:	push   r14
   14000590a:	push   r15
   14000590c:	lea    rbp,[rsp-0x70]
   140005911:	sub    rsp,0x170
   140005918:	mov    rax,QWORD PTR [rip+0x76e9]        # 0x14000d008
   14000591f:	xor    rax,rsp
   140005922:	mov    QWORD PTR [rbp+0x60],rax
   140005926:	mov    ecx,DWORD PTR [rip+0x7774]        # 0x14000d0a0
   14000592c:	or     r14d,0xffffffff
   140005930:	cmp    ecx,r14d
   140005933:	jne    0x140005940
   140005935:	call   0x140007048
   14000593a:	mov    ecx,DWORD PTR [rip+0x7760]        # 0x14000d0a0
   140005940:	lea    rdx,[rip+0x4649]        # 0x140009f90
   140005947:	call   0x140007278
   14000594c:	call   QWORD PTR [rip+0x280e]        # 0x140008160
   140005952:	mov    ecx,DWORD PTR [rip+0x7748]        # 0x14000d0a0
   140005958:	lea    rdx,[rip+0x4669]        # 0x140009fc8
   14000595f:	mov    r8d,eax
   140005962:	call   0x140007278
   140005967:	mov    ecx,DWORD PTR [rip+0x7733]        # 0x14000d0a0
   14000596d:	lea    rdx,[rip+0x461c]        # 0x140009f90
   140005974:	call   0x140007278
   140005979:	lea    rcx,[rbp+0x8]
   14000597d:	mov    edi,0x1
   140005982:	call   QWORD PTR [rip+0x2aa8]        # 0x140008430
   140005988:	xor    r13d,r13d
   14000598b:	lea    rcx,[rip+0x5186]        # 0x14000ab18
   140005992:	mov    r12d,r13d
   140005995:	mov    esi,r13d
   140005998:	call   QWORD PTR [rip+0x280a]        # 0x1400081a8
   14000599e:	mov    r15,rax
   1400059a1:	test   rax,rax
   1400059a4:	je     0x1400059f7
   1400059a6:	lea    rdx,[rip+0x517b]        # 0x14000ab28
   1400059ad:	mov    rcx,rax
   1400059b0:	call   QWORD PTR [rip+0x274a]        # 0x140008100
   1400059b6:	mov    r14,rax
   1400059b9:	test   rax,rax
   1400059bc:	je     0x1400059e8
   1400059be:	call   QWORD PTR [rip+0x2884]        # 0x140008248
   1400059c4:	mov    rcx,r14
   1400059c7:	mov    rbx,rax
   1400059ca:	call   QWORD PTR [rip+0x2b38]        # 0x140008508
   1400059d0:	xor    r9d,r9d
   1400059d3:	xor    r8d,r8d
   1400059d6:	mov    edx,edi
   1400059d8:	mov    rcx,rbx
   1400059db:	call   r14
   1400059de:	test   eax,eax
   1400059e0:	jne    0x1400059e8
   1400059e2:	call   QWORD PTR [rip+0x2670]        # 0x140008058
   1400059e8:	mov    rcx,r15
   1400059eb:	call   QWORD PTR [rip+0x26af]        # 0x1400080a0
   1400059f1:	or     r14d,0xffffffff
   1400059f5:	jmp    0x1400059fd
   1400059f7:	call   QWORD PTR [rip+0x265b]        # 0x140008058
   1400059fd:	xor    edx,edx
   1400059ff:	lea    rcx,[rbp-0x80]
   140005a03:	mov    r8d,0xe0
   140005a09:	call   0x140007c76
   140005a0e:	xor    ecx,ecx
   140005a10:	call   QWORD PTR [rip+0x2732]        # 0x140008148
   140005a16:	mov    QWORD PTR [rbp-0x80],rax
   140005a1a:	test   rax,rax
   140005a1d:	jne    0x140005a3e
   140005a1f:	call   QWORD PTR [rip+0x2633]        # 0x140008058
   140005a25:	mov    r8,QWORD PTR [rbp-0x80]
   140005a29:	lea    rdx,[rip+0x45c8]        # 0x140009ff8
   140005a30:	mov    ecx,DWORD PTR [rip+0x766a]        # 0x14000d0a0
   140005a36:	mov    r9d,eax
   140005a39:	call   0x140007278
   140005a3e:	lea    rcx,[rbp-0x80]
   140005a42:	call   0x140004c30
   140005a47:	test   eax,eax
   140005a49:	je     0x140005bea
   140005a4f:	mov    r9,QWORD PTR [rbp-0x70]
   140005a53:	lea    rdx,[rip+0x3196]        # 0x140008bf0
   140005a5a:	lea    rcx,[rip+0x3157]        # 0x140008bb8
   140005a61:	call   0x140005fd0
   140005a66:	mov    r12,rax
   140005a69:	test   rax,rax
   140005a6c:	je     0x140005bea
   140005a72:	mov    rcx,QWORD PTR [rbp-0x70]
   140005a76:	mov    rdx,rax
   140005a79:	call   QWORD PTR [rip+0x29e9]        # 0x140008468
   140005a7f:	mov    rsi,rax
   140005a82:	test   rax,rax
   140005a85:	je     0x140005bea
   140005a8b:	mov    rdx,rax
   140005a8e:	lea    rcx,[rbp-0x80]
   140005a92:	call   0x140005610
   140005a97:	test   eax,eax
   140005a99:	je     0x140005bea
   140005a9f:	mov    r9d,DWORD PTR [rbp-0x68]
   140005aa3:	test   r9b,0x40
   140005aa7:	je     0x140005ad5
   140005aa9:	mov    rcx,QWORD PTR [rbp-0x70]
   140005aad:	shr    r9d,0x5
   140005ab1:	not    r9d
   140005ab4:	and    r9d,edi
   140005ab7:	test   rcx,rcx
   140005aba:	je     0x140005aca
   140005abc:	lea    r8,[rbp+0x8]
   140005ac0:	mov    rdx,rsi
   140005ac3:	call   0x140006a78
   140005ac8:	jmp    0x140005acd
   140005aca:	mov    eax,r13d
   140005acd:	movsxd rdi,eax
   140005ad0:	jmp    0x140005bea
   140005ad5:	lea    r8,[rsp+0x30]
   140005ada:	mov    DWORD PTR [rsp+0x30],0x50
   140005ae2:	mov    edx,0x8002
   140005ae7:	xor    ecx,ecx
   140005ae9:	call   QWORD PTR [rip+0x27e1]        # 0x1400082d0
   140005aef:	test   eax,eax
   140005af1:	jne    0x140005b13
   140005af3:	call   QWORD PTR [rip+0x255f]        # 0x140008058
   140005af9:	lea    rdx,[rip+0x4308]        # 0x140009e08
   140005b00:	mov    ecx,DWORD PTR [rip+0x759a]        # 0x14000d0a0
   140005b06:	mov    r8d,eax
   140005b09:	call   0x140007278
   140005b0e:	jmp    0x140005bea
   140005b13:	lea    rax,[rip+0x4326]        # 0x140009e40
   140005b1a:	mov    QWORD PTR [rsp+0x70],rax
   140005b1f:	lea    rcx,[rsp+0x30]
   140005b24:	mov    rax,QWORD PTR [rbp-0x18]
   140005b28:	mov    QWORD PTR [rsp+0x50],rax
   140005b2d:	mov    rax,QWORD PTR [rbp-0x10]
   140005b31:	mov    QWORD PTR [rsp+0x78],rax
   140005b36:	mov    rax,QWORD PTR [rbp-0x80]
   140005b3a:	mov    QWORD PTR [rsp+0x48],rax
   140005b3f:	mov    QWORD PTR [rbp-0x18],r13
   140005b43:	mov    QWORD PTR [rbp-0x10],r13
   140005b47:	call   QWORD PTR [rip+0x27a3]        # 0x1400082f0
   140005b4d:	test   ax,ax
   140005b50:	jne    0x140005b6e
   140005b52:	call   QWORD PTR [rip+0x2500]        # 0x140008058
   140005b58:	cmp    eax,0xb7
   140005b5d:	je     0x140005b6e
   140005b5f:	call   QWORD PTR [rip+0x24f3]        # 0x140008058
   140005b65:	lea    rdx,[rip+0x42e4]        # 0x140009e50
   140005b6c:	jmp    0x140005b00
   140005b6e:	lea    rcx,[rip+0x311b]        # 0x140008c90
   140005b75:	call   QWORD PTR [rip+0x273d]        # 0x1400082b8
   140005b7b:	mov    DWORD PTR [rbp-0x64],eax
   140005b7e:	test   eax,eax
   140005b80:	jne    0x140005b96
   140005b82:	mov    ecx,DWORD PTR [rip+0x7518]        # 0x14000d0a0
   140005b88:	lea    rdx,[rip+0x42f9]        # 0x140009e88
   140005b8f:	call   0x140007278
   140005b94:	jmp    0x140005bea
   140005b96:	call   QWORD PTR [rip+0x2484]        # 0x140008020
   140005b9c:	mov    rcx,QWORD PTR [rbp-0x80]
   140005ba0:	lea    rax,[rbp-0x80]
   140005ba4:	xor    r8d,r8d
   140005ba7:	mov    QWORD PTR [rsp+0x20],rax
   140005bac:	lea    r9,[rip+0xffffffffffffe5bd]        # 0x140004170
   140005bb3:	lea    ebx,[r8+0x65]
   140005bb7:	mov    edx,ebx
   140005bb9:	call   QWORD PTR [rip+0x26a9]        # 0x140008268
   140005bbf:	mov    rdi,rax
   140005bc2:	cmp    rax,0xffffffffffffffff
   140005bc6:	jne    0x140005bea
   140005bc8:	mov    r8,QWORD PTR [rbp-0x80]
   140005bcc:	lea    rax,[rbp-0x80]
   140005bd0:	mov    ecx,DWORD PTR [rip+0x74ca]        # 0x14000d0a0
   140005bd6:	lea    rdx,[rip+0x4453]        # 0x14000a030
   140005bdd:	mov    r9d,ebx
   140005be0:	mov    QWORD PTR [rsp+0x20],rax
   140005be5:	call   0x140007278
   140005bea:	mov    rcx,r12
   140005bed:	call   QWORD PTR [rip+0x281d]        # 0x140008410
   140005bf3:	mov    rcx,rsi
   140005bf6:	call   QWORD PTR [rip+0x2814]        # 0x140008410
   140005bfc:	lea    rax,[rbp-0x80]
   140005c00:	test   rax,rax
   140005c03:	je     0x140005c0e
   140005c05:	lea    rcx,[rbp-0x80]
   140005c09:	call   0x140005d0c
   140005c0e:	lea    rcx,[rbp+0x8]
   140005c12:	call   QWORD PTR [rip+0x27c0]        # 0x1400083d8
   140005c18:	mov    ecx,DWORD PTR [rip+0x7482]        # 0x14000d0a0
   140005c1e:	lea    rdx,[rip+0x436b]        # 0x140009f90
   140005c25:	call   0x140007278
   140005c2a:	call   QWORD PTR [rip+0x2530]        # 0x140008160
   140005c30:	mov    ecx,DWORD PTR [rip+0x746a]        # 0x14000d0a0
   140005c36:	lea    rdx,[rip+0x4443]        # 0x14000a080
   140005c3d:	mov    r8d,eax
   140005c40:	call   0x140007278
   140005c45:	mov    ecx,DWORD PTR [rip+0x7455]        # 0x14000d0a0
   140005c4b:	lea    rdx,[rip+0x433e]        # 0x140009f90
   140005c52:	call   0x140007278
   140005c57:	mov    esi,DWORD PTR [rip+0x7443]        # 0x14000d0a0
   140005c5d:	cmp    esi,r14d
   140005c60:	je     0x140005ccc
   140005c62:	mov    rbx,QWORD PTR [rip+0x7a2f]        # 0x14000d698
   140005c69:	lea    rcx,[rip+0x7430]        # 0x14000d0a0
   140005c70:	test   rcx,rcx
   140005c73:	mov    eax,r13d
   140005c76:	mov    edx,0x57
   140005c7b:	cmove  eax,edx
   140005c7e:	test   rbx,rbx
   140005c81:	je     0x140005c9b
   140005c83:	mov    rcx,rbx
   140005c86:	call   QWORD PTR [rip+0x287c]        # 0x140008508
   140005c8c:	mov    edx,0x4
   140005c91:	mov    ecx,esi
   140005c93:	call   rbx
   140005c95:	call   QWORD PTR [rip+0x23bd]        # 0x140008058
   140005c9b:	test   eax,eax
   140005c9d:	jne    0x140005ccc
   140005c9f:	mov    rcx,QWORD PTR [rip+0x79ea]        # 0x14000d690
   140005ca6:	mov    DWORD PTR [rip+0x73f3],r14d        # 0x14000d0a0
   140005cad:	test   rcx,rcx
   140005cb0:	je     0x140005cb8
   140005cb2:	call   QWORD PTR [rip+0x23e8]        # 0x1400080a0
   140005cb8:	mov    QWORD PTR [rip+0x79d1],r13        # 0x14000d690
   140005cbf:	call   QWORD PTR [rip+0x2393]        # 0x140008058
   140005cc5:	mov    DWORD PTR [rip+0x79d4],r13d        # 0x14000d6a0
   140005ccc:	lea    rcx,[rbp+0x8]
   140005cd0:	call   QWORD PTR [rip+0x2762]        # 0x140008438
   140005cd6:	mov    eax,edi
   140005cd8:	mov    rcx,QWORD PTR [rbp+0x60]
   140005cdc:	xor    rcx,rsp
   140005cdf:	call   0x1400076f0
   140005ce4:	lea    r11,[rsp+0x170]
   140005cec:	mov    rbx,QWORD PTR [r11+0x30]
   140005cf0:	mov    rsi,QWORD PTR [r11+0x38]
   140005cf4:	mov    rdi,QWORD PTR [r11+0x40]
   140005cf8:	mov    rsp,r11
   140005cfb:	pop    r15
   140005cfd:	pop    r14
   140005cff:	pop    r13
   140005d01:	pop    r12
   140005d03:	pop    rbp
   140005d04:	ret    
   140005d05:	int3   
   140005d06:	int3   
   140005d07:	int3   
   140005d08:	int3   
   140005d09:	int3   
   140005d0a:	int3   
   140005d0b:	int3   
   140005d0c:	mov    QWORD PTR [rsp+0x8],rbx
   140005d11:	mov    QWORD PTR [rsp+0x10],rbp
   140005d16:	mov    QWORD PTR [rsp+0x18],rsi
   140005d1b:	push   rdi
   140005d1c:	push   r14
   140005d1e:	push   r15
   140005d20:	sub    rsp,0x30
   140005d24:	mov    rbx,rcx
   140005d27:	lea    rdx,[rip+0x4382]        # 0x14000a0b0
   140005d2e:	mov    ecx,DWORD PTR [rip+0x736c]        # 0x14000d0a0
   140005d34:	call   0x140007278
   140005d39:	xor    r15d,r15d
   140005d3c:	mov    esi,r15d
   140005d3f:	cmp    DWORD PTR [rbx+0x40],r15d
   140005d43:	jbe    0x140005e00
   140005d49:	mov    eax,esi
   140005d4b:	imul   rdi,rax,0x3b0
   140005d52:	add    rdi,QWORD PTR [rbx+0x48]
   140005d56:	mov    rcx,QWORD PTR [rdi+0x50]
   140005d5a:	test   rcx,rcx
   140005d5d:	je     0x140005d8b
   140005d5f:	call   QWORD PTR [rip+0x25cb]        # 0x140008330
   140005d65:	test   eax,eax
   140005d67:	jne    0x140005d87
   140005d69:	call   QWORD PTR [rip+0x22e9]        # 0x140008058
   140005d6f:	mov    ecx,DWORD PTR [rip+0x732b]        # 0x14000d0a0
   140005d75:	lea    rdx,[rip+0x4354]        # 0x14000a0d0
   140005d7c:	mov    r9d,eax
   140005d7f:	mov    r8d,esi
   140005d82:	call   0x140007278
   140005d87:	mov    QWORD PTR [rdi+0x50],r15
   140005d8b:	mov    rcx,QWORD PTR [rdi+0x48]
   140005d8f:	test   rcx,rcx
   140005d92:	je     0x140005dc0
   140005d94:	call   QWORD PTR [rip+0x2596]        # 0x140008330
   140005d9a:	test   eax,eax
   140005d9c:	jne    0x140005dbc
   140005d9e:	call   QWORD PTR [rip+0x22b4]        # 0x140008058
   140005da4:	mov    ecx,DWORD PTR [rip+0x72f6]        # 0x14000d0a0
   140005daa:	lea    rdx,[rip+0x436f]        # 0x14000a120
   140005db1:	mov    r9d,eax
   140005db4:	mov    r8d,esi
   140005db7:	call   0x140007278
   140005dbc:	mov    QWORD PTR [rdi+0x48],r15
   140005dc0:	mov    rcx,QWORD PTR [rdi+0x40]
   140005dc4:	test   rcx,rcx
   140005dc7:	je     0x140005df5
   140005dc9:	call   QWORD PTR [rip+0x2561]        # 0x140008330
   140005dcf:	test   eax,eax
   140005dd1:	jne    0x140005df1
   140005dd3:	call   QWORD PTR [rip+0x227f]        # 0x140008058
   140005dd9:	mov    ecx,DWORD PTR [rip+0x72c1]        # 0x14000d0a0
   140005ddf:	lea    rdx,[rip+0x438a]        # 0x14000a170
   140005de6:	mov    r9d,eax
   140005de9:	mov    r8d,esi
   140005dec:	call   0x140007278
   140005df1:	mov    QWORD PTR [rdi+0x40],r15
   140005df5:	inc    esi
   140005df7:	cmp    esi,DWORD PTR [rbx+0x40]
   140005dfa:	jb     0x140005d49
   140005e00:	lea    rsi,[rbx+0x30]
   140005e04:	mov    rcx,QWORD PTR [rsi]
   140005e07:	test   rcx,rcx
   140005e0a:	je     0x140005e30
   140005e0c:	mov    edx,0xafc8
   140005e11:	call   QWORD PTR [rip+0x2291]        # 0x1400080a8
   140005e17:	test   eax,eax
   140005e19:	je     0x140005e30
   140005e1b:	mov    ecx,DWORD PTR [rip+0x727f]        # 0x14000d0a0
   140005e21:	lea    rdx,[rip+0x4398]        # 0x14000a1c0
   140005e28:	mov    r8d,eax
   140005e2b:	call   0x140007278
   140005e30:	mov    rcx,QWORD PTR [rbx+0x10]
   140005e34:	test   rcx,rcx
   140005e37:	je     0x140005e43
   140005e39:	call   QWORD PTR [rip+0x25d1]        # 0x140008410
   140005e3f:	mov    QWORD PTR [rbx+0x10],r15
   140005e43:	mov    rcx,QWORD PTR [rbx+0x60]
   140005e47:	test   rcx,rcx
   140005e4a:	je     0x140005e56
   140005e4c:	call   QWORD PTR [rip+0x25be]        # 0x140008410
   140005e52:	mov    QWORD PTR [rbx+0x60],r15
   140005e56:	mov    ebp,r15d
   140005e59:	cmp    DWORD PTR [rbx+0x40],r15d
   140005e5d:	jbe    0x140005f44
   140005e63:	mov    eax,ebp
   140005e65:	imul   rdi,rax,0x3b0
   140005e6c:	add    rdi,QWORD PTR [rbx+0x48]
   140005e70:	mov    rcx,rdi
   140005e73:	call   0x14000249c
   140005e78:	lea    rcx,[rdi+0x8]
   140005e7c:	call   0x14000249c
   140005e81:	lea    rcx,[rdi+0x10]
   140005e85:	call   0x14000249c
   140005e8a:	lea    rcx,[rdi+0x18]
   140005e8e:	call   0x14000249c
   140005e93:	lea    rcx,[rdi+0x20]
   140005e97:	call   0x14000249c
   140005e9c:	lea    rcx,[rdi+0x28]
   140005ea0:	call   0x14000249c
   140005ea5:	lea    rcx,[rdi+0x30]
   140005ea9:	call   0x14000249c
   140005eae:	mov    r14d,r15d
   140005eb1:	cmp    DWORD PTR [rdi+0x3a0],r15d
   140005eb8:	jbe    0x140005edd
   140005eba:	mov    rcx,QWORD PTR [rdi+0x3a8]
   140005ec1:	mov    eax,r14d
   140005ec4:	add    rax,rax
   140005ec7:	mov    rcx,QWORD PTR [rcx+rax*8]
   140005ecb:	call   QWORD PTR [rip+0x253f]        # 0x140008410
   140005ed1:	inc    r14d
   140005ed4:	cmp    r14d,DWORD PTR [rdi+0x3a0]
   140005edb:	jb     0x140005eba
   140005edd:	mov    rcx,QWORD PTR [rdi+0x3a8]
   140005ee4:	call   QWORD PTR [rip+0x2526]        # 0x140008410
   140005eea:	test   BYTE PTR [rbx+0x18],0x1
   140005eee:	jne    0x140005f39
   140005ef0:	lea    r14,[rdi+0x58]
   140005ef4:	cmp    BYTE PTR [r14],r15b
   140005ef7:	je     0x140005f28
   140005ef9:	mov    rcx,r14
   140005efc:	call   QWORD PTR [rip+0x2266]        # 0x140008168
   140005f02:	test   eax,eax
   140005f04:	jne    0x140005f28
   140005f06:	call   QWORD PTR [rip+0x214c]        # 0x140008058
   140005f0c:	mov    ecx,DWORD PTR [rip+0x718e]        # 0x14000d0a0
   140005f12:	lea    rdx,[rip+0x42e7]        # 0x14000a200
   140005f19:	mov    r9,r14
   140005f1c:	mov    DWORD PTR [rsp+0x20],eax
   140005f20:	mov    r8d,ebp
   140005f23:	call   0x140007278
   140005f28:	lea    rcx,[rdi+0x188]
   140005f2f:	cmp    BYTE PTR [rcx],r15b
   140005f32:	je     0x140005f39
   140005f34:	call   0x140003138
   140005f39:	inc    ebp
   140005f3b:	cmp    ebp,DWORD PTR [rbx+0x40]
   140005f3e:	jb     0x140005e63
   140005f44:	mov    rcx,QWORD PTR [rbx+0x48]
   140005f48:	test   rcx,rcx
   140005f4b:	je     0x140005f57
   140005f4d:	call   QWORD PTR [rip+0x24bd]        # 0x140008410
   140005f53:	mov    QWORD PTR [rbx+0x48],r15
   140005f57:	mov    ebx,r15d
   140005f5a:	mov    rcx,QWORD PTR [rsi]
   140005f5d:	test   rcx,rcx
   140005f60:	je     0x140005f8d
   140005f62:	call   QWORD PTR [rip+0x2118]        # 0x140008080
   140005f68:	test   eax,eax
   140005f6a:	jne    0x140005f8a
   140005f6c:	call   QWORD PTR [rip+0x20e6]        # 0x140008058
   140005f72:	mov    ecx,DWORD PTR [rip+0x7128]        # 0x14000d0a0
   140005f78:	lea    rdx,[rip+0x42d1]        # 0x14000a250
   140005f7f:	mov    r9d,eax
   140005f82:	mov    r8d,ebx
   140005f85:	call   0x140007278
   140005f8a:	mov    QWORD PTR [rsi],r15
   140005f8d:	inc    ebx
   140005f8f:	add    rsi,0x8
   140005f93:	cmp    ebx,0x2
   140005f96:	jb     0x140005f5a
   140005f98:	mov    ecx,DWORD PTR [rip+0x7102]        # 0x14000d0a0
   140005f9e:	lea    rdx,[rip+0x42eb]        # 0x14000a290
   140005fa5:	call   0x140007278
   140005faa:	mov    rbx,QWORD PTR [rsp+0x50]
   140005faf:	mov    eax,0x1
   140005fb4:	mov    rbp,QWORD PTR [rsp+0x58]
   140005fb9:	mov    rsi,QWORD PTR [rsp+0x60]
   140005fbe:	add    rsp,0x30
   140005fc2:	pop    r15
   140005fc4:	pop    r14
   140005fc6:	pop    rdi
   140005fc7:	ret    
   140005fc8:	int3   
   140005fc9:	int3   
   140005fca:	int3   
   140005fcb:	int3   
   140005fcc:	int3   
   140005fcd:	int3   
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140005fd5:	mov    QWORD PTR [rsp+0x10],rbp
   140005fda:	mov    QWORD PTR [rsp+0x18],rsi
   140005fdf:	push   rdi
   140005fe0:	push   r14
   140005fe2:	push   r15
   140005fe4:	sub    rsp,0x30
   140005fe8:	lea    r15,[rip+0x2c94]        # 0x140008c83
   140005fef:	mov    r14,r9
   140005ff2:	mov    rsi,rdx
   140005ff5:	mov    rbp,rcx
   140005ff8:	test   r15,r15
   140005ffb:	je     0x14000608e
   140006001:	test   r9,r9
   140006004:	je     0x14000608e
   14000600a:	mov    edi,0x104
   14000600f:	mov    ecx,edi
   140006011:	call   QWORD PTR [rip+0x2411]        # 0x140008428
   140006017:	mov    rbx,rax
   14000601a:	test   rax,rax
   14000601d:	je     0x140006089
   14000601f:	mov    QWORD PTR [rsp+0x28],r14
   140006024:	mov    r9,rax
   140006027:	mov    r8,r15
   14000602a:	mov    DWORD PTR [rsp+0x20],edi
   14000602e:	mov    rdx,rsi
   140006031:	mov    rcx,rbp
   140006034:	call   QWORD PTR [rip+0x20e6]        # 0x140008120
   14000603a:	lea    ecx,[rdi-0x2]
   14000603d:	cmp    eax,ecx
   14000603f:	jne    0x14000604b
   140006041:	test   rbp,rbp
   140006044:	je     0x14000605c
   140006046:	test   rsi,rsi
   140006049:	je     0x14000605c
   14000604b:	lea    ecx,[rdi-0x1]
   14000604e:	cmp    eax,ecx
   140006050:	jne    0x14000607a
   140006052:	test   rbp,rbp
   140006055:	je     0x14000607a
   140006057:	test   rsi,rsi
   14000605a:	je     0x14000607a
   14000605c:	lea    eax,[rdi+rdi*1]
   14000605f:	mov    edi,eax
   140006061:	cmp    eax,0x100000
   140006066:	ja     0x140006089
   140006068:	mov    edx,edi
   14000606a:	mov    rcx,rbx
   14000606d:	call   QWORD PTR [rip+0x23a5]        # 0x140008418
   140006073:	test   rax,rax
   140006076:	jne    0x140006017
   140006078:	jmp    0x14000607e
   14000607a:	test   eax,eax
   14000607c:	jne    0x140006089
   14000607e:	mov    rcx,rbx
   140006081:	call   QWORD PTR [rip+0x2389]        # 0x140008410
   140006087:	xor    ebx,ebx
   140006089:	mov    rax,rbx
   14000608c:	jmp    0x140006090
   14000608e:	xor    eax,eax
   140006090:	mov    rbx,QWORD PTR [rsp+0x50]
   140006095:	mov    rbp,QWORD PTR [rsp+0x58]
   14000609a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000609f:	add    rsp,0x30
   1400060a3:	pop    r15
   1400060a5:	pop    r14
   1400060a7:	pop    rdi
   1400060a8:	ret    
   1400060a9:	int3   
   1400060aa:	int3   
   1400060ab:	int3   
   1400060ac:	int3   
   1400060ad:	int3   
   1400060ae:	int3   
   1400060af:	int3   
   1400060b0:	mov    rax,rsp
   1400060b3:	mov    QWORD PTR [rax+0x8],rbx
   1400060b7:	mov    QWORD PTR [rax+0x10],rsi
   1400060bb:	mov    QWORD PTR [rax+0x20],rdi
   1400060bf:	mov    QWORD PTR [rax+0x18],r8
   1400060c3:	push   rbp
   1400060c4:	push   r12
   1400060c6:	push   r13
   1400060c8:	push   r14
   1400060ca:	push   r15
   1400060cc:	lea    rbp,[rax-0x57]
   1400060d0:	sub    rsp,0x90
   1400060d7:	xor    eax,eax
   1400060d9:	xorps  xmm0,xmm0
   1400060dc:	mov    rsi,rcx
   1400060df:	mov    QWORD PTR [rbp+0xb],rax
   1400060e3:	xor    ecx,ecx
   1400060e5:	mov    QWORD PTR [rbp+0x13],rax
   1400060e9:	mov    r14d,ecx
   1400060ec:	mov    DWORD PTR [rbp-0x19],ecx
   1400060ef:	mov    r15d,ecx
   1400060f2:	mov    QWORD PTR [rbp-0x1],rcx
   1400060f6:	mov    edi,ecx
   1400060f8:	mov    DWORD PTR [rbp+0x7],ecx
   1400060fb:	mov    ebx,ecx
   1400060fd:	mov    DWORD PTR [rbp-0x31],ecx
   140006100:	mov    r12,r9
   140006103:	mov    QWORD PTR [rbp+0x1b],rax
   140006107:	mov    r13,rdx
   14000610a:	mov    DWORD PTR [rbp+0x23],eax
   14000610d:	movdqu XMMWORD PTR [rbp-0x11],xmm0
   140006112:	movdqu XMMWORD PTR [rbp-0x29],xmm0
   140006117:	call   QWORD PTR [rip+0x22ab]        # 0x1400083c8
   14000611d:	test   eax,eax
   14000611f:	je     0x140006142
   140006121:	lea    rcx,[rbp-0x31]
   140006125:	call   QWORD PTR [rip+0x223d]        # 0x140008368
   14000612b:	test   eax,eax
   14000612d:	je     0x140006142
   14000612f:	cmp    DWORD PTR [rbp-0x31],0x3
   140006133:	jne    0x140006142
   140006135:	mov    rdi,QWORD PTR [rbp-0x29]
   140006139:	mov    rbx,QWORD PTR [rbp-0x21]
   14000613d:	jmp    0x140006216
   140006142:	lea    rcx,[rbp-0x19]
   140006146:	call   QWORD PTR [rip+0x222c]        # 0x140008378
   14000614c:	xor    edx,edx
   14000614e:	test   eax,eax
   140006150:	jne    0x14000616b
   140006152:	call   QWORD PTR [rip+0x1f00]        # 0x140008058
   140006158:	xor    edx,edx
   14000615a:	mov    r14d,eax
   14000615d:	cmp    eax,0x2
   140006160:	jne    0x140006188
   140006162:	mov    DWORD PTR [rbp-0x19],0x1
   140006169:	jmp    0x140006188
   14000616b:	mov    rcx,QWORD PTR [rbp-0x9]
   14000616f:	test   rcx,rcx
   140006172:	je     0x140006188
   140006174:	mov    rdi,rcx
   140006177:	mov    r15d,0x3
   14000617d:	mov    rcx,QWORD PTR [rbp-0x1]
   140006181:	test   rcx,rcx
   140006184:	cmovne rbx,rcx
   140006188:	cmp    DWORD PTR [rbp-0x19],edx
   14000618b:	je     0x14000619e
   14000618d:	mov    eax,0x1
   140006192:	mov    DWORD PTR [rbp+0xb],0x3
   140006199:	mov    DWORD PTR [rbp+0x7],eax
   14000619c:	jmp    0x1400061a1
   14000619e:	mov    eax,DWORD PTR [rbp+0x7]
   1400061a1:	mov    rcx,QWORD PTR [rbp-0x11]
   1400061a5:	test   rcx,rcx
   1400061a8:	je     0x1400061c0
   1400061aa:	cmp    WORD PTR [rcx],dx
   1400061ad:	je     0x1400061c0
   1400061af:	or     eax,0x2
   1400061b2:	mov    DWORD PTR [rbp-0x19],0x1
   1400061b9:	mov    DWORD PTR [rbp+0x7],eax
   1400061bc:	mov    QWORD PTR [rbp+0xf],rcx
   1400061c0:	cmp    DWORD PTR [rbp-0x19],edx
   1400061c3:	je     0x140006216
   1400061c5:	xor    r9d,r9d
   1400061c8:	mov    DWORD PTR [rsp+0x20],edx
   1400061cc:	xor    r8d,r8d
   1400061cf:	mov    rcx,rsi
   1400061d2:	lea    edx,[r9+0x1]
   1400061d6:	call   QWORD PTR [rip+0x216c]        # 0x140008348
   1400061dc:	mov    rsi,rax
   1400061df:	test   rax,rax
   1400061e2:	je     0x140006216
   1400061e4:	lea    r9,[rbp-0x31]
   1400061e8:	mov    rdx,r13
   1400061eb:	lea    r8,[rbp+0x7]
   1400061ef:	mov    rcx,rax
   1400061f2:	call   QWORD PTR [rip+0x2160]        # 0x140008358
   1400061f8:	xor    ecx,ecx
   1400061fa:	test   eax,eax
   1400061fc:	je     0x14000620d
   1400061fe:	mov    r15d,DWORD PTR [rbp-0x31]
   140006202:	mov    r14d,ecx
   140006205:	mov    rdi,QWORD PTR [rbp-0x29]
   140006209:	mov    rbx,QWORD PTR [rbp-0x21]
   14000620d:	mov    rcx,rsi
   140006210:	call   QWORD PTR [rip+0x211a]        # 0x140008330
   140006216:	xor    esi,esi
   140006218:	test   rdi,rdi
   14000621b:	je     0x140006228
   14000621d:	mov    rcx,rdi
   140006220:	call   QWORD PTR [rip+0x21aa]        # 0x1400083d0
   140006226:	jmp    0x14000622b
   140006228:	mov    rax,rsi
   14000622b:	mov    QWORD PTR [r12],rax
   14000622f:	test   rbx,rbx
   140006232:	je     0x140006242
   140006234:	mov    rcx,rbx
   140006237:	call   QWORD PTR [rip+0x2193]        # 0x1400083d0
   14000623d:	mov    rcx,rax
   140006240:	jmp    0x140006245
   140006242:	mov    rcx,rsi
   140006245:	mov    rax,QWORD PTR [rbp+0x7f]
   140006249:	mov    QWORD PTR [rax],rcx
   14000624c:	mov    rax,QWORD PTR [rbp+0x6f]
   140006250:	mov    rcx,QWORD PTR [rbp-0x9]
   140006254:	mov    DWORD PTR [rax],r15d
   140006257:	test   rcx,rcx
   14000625a:	je     0x140006262
   14000625c:	call   QWORD PTR [rip+0x1f16]        # 0x140008178
   140006262:	mov    rcx,QWORD PTR [rbp-0x11]
   140006266:	test   rcx,rcx
   140006269:	je     0x140006271
   14000626b:	call   QWORD PTR [rip+0x1f07]        # 0x140008178
   140006271:	mov    rcx,QWORD PTR [rbp-0x1]
   140006275:	test   rcx,rcx
   140006278:	je     0x140006280
   14000627a:	call   QWORD PTR [rip+0x1ef8]        # 0x140008178
   140006280:	mov    rcx,QWORD PTR [rbp-0x29]
   140006284:	test   rcx,rcx
   140006287:	je     0x14000628f
   140006289:	call   QWORD PTR [rip+0x1ee9]        # 0x140008178
   14000628f:	mov    rcx,QWORD PTR [rbp-0x21]
   140006293:	test   rcx,rcx
   140006296:	je     0x14000629e
   140006298:	call   QWORD PTR [rip+0x1eda]        # 0x140008178
   14000629e:	lea    r11,[rsp+0x90]
   1400062a6:	mov    eax,r14d
   1400062a9:	mov    rbx,QWORD PTR [r11+0x30]
   1400062ad:	mov    rsi,QWORD PTR [r11+0x38]
   1400062b1:	mov    rdi,QWORD PTR [r11+0x48]
   1400062b5:	mov    rsp,r11
   1400062b8:	pop    r15
   1400062ba:	pop    r14
   1400062bc:	pop    r13
   1400062be:	pop    r12
   1400062c0:	pop    rbp
   1400062c1:	ret    
   1400062c2:	int3   
   1400062c3:	int3   
   1400062c4:	int3   
   1400062c5:	int3   
   1400062c6:	int3   
   1400062c7:	int3   
   1400062c8:	mov    QWORD PTR [rsp+0x10],rbx
   1400062cd:	push   rbp
   1400062ce:	push   rsi
   1400062cf:	push   rdi
   1400062d0:	push   r12
   1400062d2:	push   r13
   1400062d4:	push   r14
   1400062d6:	push   r15
   1400062d8:	mov    rbp,rsp
   1400062db:	sub    rsp,0x70
   1400062df:	xor    r15d,r15d
   1400062e2:	mov    DWORD PTR [rbp+0x40],0x104
   1400062e9:	mov    rsi,rcx
   1400062ec:	mov    DWORD PTR [rbp+0x58],r15d
   1400062f0:	mov    QWORD PTR [rbp-0x30],r15
   1400062f4:	mov    r12,rdx
   1400062f7:	mov    QWORD PTR [rbp+0x50],r15
   1400062fb:	mov    ebx,0x8
   140006300:	mov    QWORD PTR [rbp-0x20],r15
   140006304:	mov    r13d,r15d
   140006307:	mov    QWORD PTR [rbp-0x28],r15
   14000630b:	mov    edi,r15d
   14000630e:	mov    ecx,r15d
   140006311:	mov    r14d,r15d
   140006314:	test   rsi,rsi
   140006317:	je     0x140006884
   14000631d:	cmp    BYTE PTR [rsi],r15b
   140006320:	je     0x140006884
   140006326:	test   rdx,rdx
   140006329:	je     0x140006884
   14000632f:	mov    rcx,rsi
   140006332:	mov    QWORD PTR [rdx],r15
   140006335:	mov    QWORD PTR [rbp-0x10],rsi
   140006339:	call   QWORD PTR [rip+0x2079]        # 0x1400083b8
   14000633f:	test   rax,rax
   140006342:	mov    QWORD PTR [rbp-0x28],rax
   140006346:	lea    ecx,[rbx-0x7]
   140006349:	cmovne r14d,ecx
   14000634d:	mov    ecx,0x2548
   140006352:	call   QWORD PTR [rip+0x20d0]        # 0x140008428
   140006358:	mov    r15,rax
   14000635b:	test   rax,rax
   14000635e:	jne    0x140006368
   140006360:	mov    rcx,rsi
   140006363:	jmp    0x140006889
   140006368:	xor    edx,edx
   14000636a:	mov    r8d,0x2548
   140006370:	mov    rcx,rax
   140006373:	call   0x140007c76
   140006378:	mov    ecx,0x81
   14000637d:	mov    DWORD PTR [r15],0x68
   140006384:	mov    DWORD PTR [r15+0x30],ecx
   140006388:	lea    rax,[r15+0x68]
   14000638c:	mov    QWORD PTR [r15+0x8],rax
   140006390:	mov    r9,r15
   140006393:	mov    DWORD PTR [r15+0x40],ecx
   140006397:	lea    rax,[r15+0xa8]
   14000639e:	mov    QWORD PTR [r15+0x18],rax
   1400063a2:	mov    ecx,0x825
   1400063a7:	lea    rax,[r15+0x2aa]
   1400063ae:	mov    DWORD PTR [r15+0x50],ecx
   1400063b2:	mov    QWORD PTR [r15+0x28],rax
   1400063b6:	xor    edx,edx
   1400063b8:	lea    rax,[r15+0x3ac]
   1400063bf:	mov    DWORD PTR [r15+0x60],ecx
   1400063c3:	mov    rcx,QWORD PTR [rbp-0x28]
   1400063c7:	mov    r8d,0x10000000
   1400063cd:	mov    QWORD PTR [r15+0x38],rax
   1400063d1:	lea    rax,[r15+0x4ae]
   1400063d8:	mov    QWORD PTR [r15+0x48],rax
   1400063dc:	lea    rax,[r15+0x14f8]
   1400063e3:	mov    QWORD PTR [r15+0x58],rax
   1400063e7:	mov    DWORD PTR [r15+0x10],0x20
   1400063ef:	mov    DWORD PTR [r15+0x20],0x101
   1400063f7:	call   QWORD PTR [rip+0x1f63]        # 0x140008360
   1400063fd:	test   eax,eax
   1400063ff:	jne    0x14000640e
   140006401:	call   QWORD PTR [rip+0x1c51]        # 0x140008058
   140006407:	mov    ebx,eax
   140006409:	jmp    0x140006829
   14000640e:	mov    ecx,DWORD PTR [rip+0x6c8c]        # 0x14000d0a0
   140006414:	lea    rdx,[rip+0x3ecd]        # 0x14000a2e8
   14000641b:	mov    r8,rsi
   14000641e:	call   0x140007278
   140006423:	mov    rcx,rdi
   140006426:	call   QWORD PTR [rip+0x1fe4]        # 0x140008410
   14000642c:	mov    ecx,DWORD PTR [rbp+0x40]
   14000642f:	inc    ecx
   140006431:	call   QWORD PTR [rip+0x1ff1]        # 0x140008428
   140006437:	mov    rdi,rax
   14000643a:	test   rax,rax
   14000643d:	je     0x140006829
   140006443:	mov    ecx,DWORD PTR [rbp+0x40]
   140006446:	mov    rdx,rax
   140006449:	call   QWORD PTR [rip+0x1c39]        # 0x140008088
   14000644f:	test   eax,eax
   140006451:	je     0x14000680c
   140006457:	mov    ecx,DWORD PTR [rbp+0x40]
   14000645a:	cmp    eax,ecx
   14000645c:	jbe    0x14000646e
   14000645e:	mov    DWORD PTR [rbp+0x40],eax
   140006461:	cmp    eax,0x800
   140006466:	ja     0x140006829
   14000646c:	jmp    0x140006423
   14000646e:	add    ecx,0x18
   140006471:	call   QWORD PTR [rip+0x1fb1]        # 0x140008428
   140006477:	mov    QWORD PTR [r12],rax
   14000647b:	test   rax,rax
   14000647e:	je     0x140006829
   140006484:	mov    r9,rax
   140006487:	lea    rdx,[rip+0x3eba]        # 0x14000a348
   14000648e:	xor    r8d,r8d
   140006491:	mov    rcx,rdi
   140006494:	call   QWORD PTR [rip+0x1bde]        # 0x140008078
   14000649a:	mov    DWORD PTR [rbp+0x40],eax
   14000649d:	test   eax,eax
   14000649f:	je     0x1400067be
   1400064a5:	mov    rax,QWORD PTR [r12]
   1400064a9:	cmp    BYTE PTR [rax],r13b
   1400064ac:	je     0x1400067be
   1400064b2:	mov    rcx,rdi
   1400064b5:	call   QWORD PTR [rip+0x1f55]        # 0x140008410
   1400064bb:	mov    rcx,QWORD PTR [r12]
   1400064bf:	xor    edi,edi
   1400064c1:	and    QWORD PTR [rsp+0x30],rdi
   1400064c6:	xor    r9d,r9d
   1400064c9:	mov    DWORD PTR [rsp+0x28],0x80
   1400064d1:	mov    edx,0xc0000000
   1400064d6:	mov    DWORD PTR [rsp+0x20],0x3
   1400064de:	lea    esi,[rdi+0x1]
   1400064e1:	mov    r8d,esi
   1400064e4:	call   QWORD PTR [rip+0x1c46]        # 0x140008130
   1400064ea:	mov    QWORD PTR [rbp-0x30],rax
   1400064ee:	cmp    rax,0xffffffffffffffff
   1400064f2:	je     0x1400067fc
   1400064f8:	mov    rdx,QWORD PTR [rbp-0x28]
   1400064fc:	lea    rax,[rbp-0x20]
   140006500:	and    DWORD PTR [rbp+0x50],edi
   140006503:	lea    r9,[rbp-0x18]
   140006507:	and    QWORD PTR [rbp-0x18],rdi
   14000650b:	lea    r8,[rbp+0x50]
   14000650f:	and    QWORD PTR [rbp-0x20],rdi
   140006513:	lea    rcx,[rip+0x3e36]        # 0x14000a350
   14000651a:	mov    QWORD PTR [rsp+0x20],rax
   14000651f:	mov    DWORD PTR [rbp+0x58],esi
   140006522:	call   0x1400060b0
   140006527:	mov    rsi,QWORD PTR [rbp-0x20]
   14000652b:	lea    rcx,[rip+0x3e1e]        # 0x14000a350
   140006532:	mov    r13,QWORD PTR [rbp-0x18]
   140006536:	mov    r9,rsi
   140006539:	mov    edx,DWORD PTR [rbp+0x50]
   14000653c:	mov    r8,r13
   14000653f:	and    DWORD PTR [rsp+0x20],edi
   140006543:	call   QWORD PTR [rip+0x1dff]        # 0x140008348
   140006549:	mov    QWORD PTR [rbp+0x50],rax
   14000654d:	test   r13,r13
   140006550:	je     0x14000655b
   140006552:	mov    rcx,r13
   140006555:	call   QWORD PTR [rip+0x1eb5]        # 0x140008410
   14000655b:	test   rsi,rsi
   14000655e:	je     0x140006569
   140006560:	mov    rcx,rsi
   140006563:	call   QWORD PTR [rip+0x1ea7]        # 0x140008410
   140006569:	mov    r13,QWORD PTR [rbp+0x50]
   14000656d:	test   r13,r13
   140006570:	je     0x14000679f
   140006576:	movzx  r8d,WORD PTR [r15+0x24]
   14000657b:	xor    r9d,r9d
   14000657e:	mov    rdx,QWORD PTR [r15+0x18]
   140006582:	mov    rcx,r13
   140006585:	call   QWORD PTR [rip+0x1d8d]        # 0x140008318
   14000658b:	mov    QWORD PTR [rbp-0x20],rax
   14000658f:	test   rax,rax
   140006592:	je     0x140006780
   140006598:	mov    ecx,0x1002
   14000659d:	call   QWORD PTR [rip+0x1e85]        # 0x140008428
   1400065a3:	mov    rsi,rax
   1400065a6:	test   rax,rax
   1400065a9:	jne    0x1400065c2
   1400065ab:	mov    ecx,DWORD PTR [rip+0x6aef]        # 0x14000d0a0
   1400065b1:	lea    rdx,[rip+0x3df8]        # 0x14000a3b0
   1400065b8:	call   0x140007278
   1400065bd:	jmp    0x1400067d8
   1400065c2:	mov    r8,QWORD PTR [r15+0x48]
   1400065c6:	mov    edx,0x801
   1400065cb:	mov    rcx,rax
   1400065ce:	call   0x140001e70
   1400065d3:	mov    r13d,eax
   1400065d6:	mov    rcx,rsi
   1400065d9:	test   eax,eax
   1400065db:	jns    0x140006601
   1400065dd:	call   QWORD PTR [rip+0x1e2d]        # 0x140008410
   1400065e3:	lea    rdx,[rip+0x3e06]        # 0x14000a3f0
   1400065ea:	mov    ecx,DWORD PTR [rip+0x6ab0]        # 0x14000d0a0
   1400065f0:	mov    r8d,r13d
   1400065f3:	movzx  ebx,r13w
   1400065f7:	call   0x140007278
   1400065fc:	jmp    0x1400067d4
   140006601:	mov    r8,QWORD PTR [r15+0x58]
   140006605:	call   0x14000211c
   14000660a:	mov    r13d,eax
   14000660d:	test   eax,eax
   14000660f:	jns    0x140006623
   140006611:	mov    rcx,rsi
   140006614:	call   QWORD PTR [rip+0x1df6]        # 0x140008410
   14000661a:	lea    rdx,[rip+0x3e07]        # 0x14000a428
   140006621:	jmp    0x1400065ea
   140006623:	mov    rcx,QWORD PTR [rbp-0x20]
   140006627:	xor    eax,eax
   140006629:	cmp    DWORD PTR [r15+0x14],0x2
   14000662e:	mov    r8,rsi
   140006631:	sete   al
   140006634:	neg    eax
   140006636:	sbb    eax,eax
   140006638:	xor    r9d,r9d
   14000663b:	and    eax,0x800000
   140006640:	xor    edx,edx
   140006642:	bts    eax,0x8
   140006646:	mov    DWORD PTR [rsp+0x30],eax
   14000664a:	and    QWORD PTR [rsp+0x28],rdi
   14000664f:	and    QWORD PTR [rsp+0x20],rdi
   140006654:	call   QWORD PTR [rip+0x1cf6]        # 0x140008350
   14000665a:	mov    rcx,rsi
   14000665d:	mov    r13,rax
   140006660:	call   QWORD PTR [rip+0x1daa]        # 0x140008410
   140006666:	test   r13,r13
   140006669:	je     0x14000676e
   14000666f:	and    QWORD PTR [rsp+0x30],rdi
   140006674:	xor    r9d,r9d
   140006677:	and    DWORD PTR [rsp+0x28],edi
   14000667b:	xor    r8d,r8d
   14000667e:	and    DWORD PTR [rsp+0x20],edi
   140006682:	xor    edx,edx
   140006684:	mov    rcx,r13
   140006687:	call   QWORD PTR [rip+0x1c93]        # 0x140008320
   14000668d:	test   eax,eax
   14000668f:	jne    0x1400066b3
   140006691:	call   QWORD PTR [rip+0x19c1]        # 0x140008058
   140006697:	lea    rdx,[rip+0x3e02]        # 0x14000a4a0
   14000669e:	mov    ecx,DWORD PTR [rip+0x69fc]        # 0x14000d0a0
   1400066a4:	mov    r8d,eax
   1400066a7:	mov    ebx,eax
   1400066a9:	call   0x140007278
   1400066ae:	jmp    0x1400067c6
   1400066b3:	xor    edx,edx
   1400066b5:	mov    rcx,r13
   1400066b8:	call   QWORD PTR [rip+0x1c6a]        # 0x140008328
   1400066be:	test   eax,eax
   1400066c0:	jne    0x1400066d1
   1400066c2:	call   QWORD PTR [rip+0x1990]        # 0x140008058
   1400066c8:	lea    rdx,[rip+0x3e21]        # 0x14000a4f0
   1400066cf:	jmp    0x14000669e
   1400066d1:	mov    ecx,0x400
   1400066d6:	call   QWORD PTR [rip+0x1d4c]        # 0x140008428
   1400066dc:	mov    rdi,rax
   1400066df:	test   rax,rax
   1400066e2:	je     0x1400067c6
   1400066e8:	xor    esi,esi
   1400066ea:	lea    r9,[rbp+0x40]
   1400066ee:	mov    r8d,0x400
   1400066f4:	mov    rdx,rdi
   1400066f7:	mov    rcx,r13
   1400066fa:	call   QWORD PTR [rip+0x1c70]        # 0x140008370
   140006700:	test   eax,eax
   140006702:	je     0x1400067be
   140006708:	mov    r8d,DWORD PTR [rbp+0x40]
   14000670c:	test   r8d,r8d
   14000670f:	jne    0x140006716
   140006711:	xor    ebx,ebx
   140006713:	lea    esi,[rbx+0x1]
   140006716:	mov    rcx,QWORD PTR [rbp-0x30]
   14000671a:	lea    r9,[rbp+0x40]
   14000671e:	and    QWORD PTR [rsp+0x20],0x0
   140006724:	mov    rdx,rdi
   140006727:	call   QWORD PTR [rip+0x1ae3]        # 0x140008210
   14000672d:	test   eax,eax
   14000672f:	je     0x1400067be
   140006735:	test   esi,esi
   140006737:	je     0x1400066ea
   140006739:	mov    r9,QWORD PTR [r12]
   14000673d:	lea    rcx,[rip+0x3b74]        # 0x14000a2b8
   140006744:	mov    r8d,0x400
   14000674a:	mov    rdx,rdi
   14000674d:	call   QWORD PTR [rip+0x1a2d]        # 0x140008180
   140006753:	test   eax,eax
   140006755:	jne    0x1400067c6
   140006757:	mov    ecx,DWORD PTR [rip+0x6943]        # 0x14000d0a0
   14000675d:	lea    rdx,[rip+0x3ddc]        # 0x14000a540
   140006764:	lea    ebx,[rax+0xd]
   140006767:	call   0x140007278
   14000676c:	jmp    0x1400067c6
   14000676e:	call   QWORD PTR [rip+0x18e4]        # 0x140008058
   140006774:	lea    rdx,[rip+0x3e15]        # 0x14000a590
   14000677b:	jmp    0x14000669e
   140006780:	call   QWORD PTR [rip+0x18d2]        # 0x140008058
   140006786:	mov    ecx,DWORD PTR [rip+0x6914]        # 0x14000d0a0
   14000678c:	lea    rdx,[rip+0x3ccd]        # 0x14000a460
   140006793:	mov    r8d,eax
   140006796:	mov    ebx,eax
   140006798:	call   0x140007278
   14000679d:	jmp    0x1400067ea
   14000679f:	call   QWORD PTR [rip+0x18b3]        # 0x140008058
   1400067a5:	mov    ecx,DWORD PTR [rip+0x68f5]        # 0x14000d0a0
   1400067ab:	lea    rdx,[rip+0x3e1e]        # 0x14000a5d0
   1400067b2:	mov    r8d,eax
   1400067b5:	mov    ebx,eax
   1400067b7:	call   0x140007278
   1400067bc:	jmp    0x1400067f8
   1400067be:	call   QWORD PTR [rip+0x1894]        # 0x140008058
   1400067c4:	mov    ebx,eax
   1400067c6:	test   r13,r13
   1400067c9:	je     0x1400067d4
   1400067cb:	mov    rcx,r13
   1400067ce:	call   QWORD PTR [rip+0x1b5c]        # 0x140008330
   1400067d4:	mov    r13,QWORD PTR [rbp+0x50]
   1400067d8:	mov    rax,QWORD PTR [rbp-0x20]
   1400067dc:	test   rax,rax
   1400067df:	je     0x1400067ea
   1400067e1:	mov    rcx,rax
   1400067e4:	call   QWORD PTR [rip+0x1b46]        # 0x140008330
   1400067ea:	test   r13,r13
   1400067ed:	je     0x1400067f8
   1400067ef:	mov    rcx,r13
   1400067f2:	call   QWORD PTR [rip+0x1b38]        # 0x140008330
   1400067f8:	mov    rax,QWORD PTR [rbp-0x30]
   1400067fc:	test   rax,rax
   1400067ff:	je     0x140006829
   140006801:	mov    rcx,rax
   140006804:	call   QWORD PTR [rip+0x1876]        # 0x140008080
   14000680a:	jmp    0x140006829
   14000680c:	call   QWORD PTR [rip+0x1846]        # 0x140008058
   140006812:	mov    ecx,DWORD PTR [rip+0x6888]        # 0x14000d0a0
   140006818:	lea    rdx,[rip+0x3af1]        # 0x14000a310
   14000681f:	mov    r8d,eax
   140006822:	mov    ebx,eax
   140006824:	call   0x140007278
   140006829:	mov    rcx,rdi
   14000682c:	call   QWORD PTR [rip+0x1bde]        # 0x140008410
   140006832:	mov    rcx,r15
   140006835:	call   QWORD PTR [rip+0x1bd5]        # 0x140008410
   14000683b:	test   ebx,ebx
   14000683d:	je     0x14000686c
   14000683f:	cmp    DWORD PTR [rbp+0x58],0x0
   140006843:	je     0x140006854
   140006845:	mov    rcx,QWORD PTR [r12]
   140006849:	test   rcx,rcx
   14000684c:	je     0x140006854
   14000684e:	call   QWORD PTR [rip+0x1914]        # 0x140008168
   140006854:	mov    rcx,QWORD PTR [r12]
   140006858:	call   QWORD PTR [rip+0x1bb2]        # 0x140008410
   14000685e:	and    QWORD PTR [r12],0x0
   140006863:	lea    rdx,[rip+0x3d9e]        # 0x14000a608
   14000686a:	jmp    0x140006873
   14000686c:	lea    rdx,[rip+0x3dcd]        # 0x14000a640
   140006873:	mov    ecx,DWORD PTR [rip+0x6827]        # 0x14000d0a0
   140006879:	call   0x140007278
   14000687e:	mov    rcx,QWORD PTR [rbp-0x10]
   140006882:	jmp    0x140006889
   140006884:	mov    ebx,0x57
   140006889:	sub    r14d,0x1
   14000688d:	je     0x140006897
   14000688f:	cmp    r14d,0x1
   140006893:	jne    0x1400068a1
   140006895:	jmp    0x14000689b
   140006897:	mov    rcx,QWORD PTR [rbp-0x28]
   14000689b:	call   QWORD PTR [rip+0x1b6f]        # 0x140008410
   1400068a1:	mov    eax,ebx
   1400068a3:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400068ab:	add    rsp,0x70
   1400068af:	pop    r15
   1400068b1:	pop    r14
   1400068b3:	pop    r13
   1400068b5:	pop    r12
   1400068b7:	pop    rdi
   1400068b8:	pop    rsi
   1400068b9:	pop    rbp
   1400068ba:	ret    
   1400068bb:	int3   
   1400068bc:	int3   
   1400068bd:	int3   
   1400068be:	int3   
   1400068bf:	int3   
   1400068c0:	int3   
   1400068c1:	int3   
   1400068c2:	int3   
   1400068c3:	int3   
   1400068c4:	mov    rax,rsp
   1400068c7:	mov    QWORD PTR [rax+0x8],rbx
   1400068cb:	mov    QWORD PTR [rax+0x10],rbp
   1400068cf:	mov    QWORD PTR [rax+0x18],rsi
   1400068d3:	mov    QWORD PTR [rax+0x20],rdi
   1400068d7:	push   r12
   1400068d9:	push   r14
   1400068db:	push   r15
   1400068dd:	sub    rsp,0x40
   1400068e1:	mov    rbp,rdx
   1400068e4:	mov    rsi,rcx
   1400068e7:	test   rcx,rcx
   1400068ea:	je     0x140006a51
   1400068f0:	test   rdx,rdx
   1400068f3:	je     0x140006a51
   1400068f9:	cmp    BYTE PTR [rcx],0x0
   1400068fc:	je     0x140006a51
   140006902:	cmp    BYTE PTR [rdx],0x0
   140006905:	je     0x140006a51
   14000690b:	mov    edi,0x8
   140006910:	call   QWORD PTR [rip+0x190a]        # 0x140008220
   140006916:	lea    r12,[rip+0x3d5b]        # 0x14000a678
   14000691d:	mov    ebx,eax
   14000691f:	mov    rcx,r12
   140006922:	call   QWORD PTR [rip+0x18f8]        # 0x140008220
   140006928:	lea    ecx,[rax+0x1]
   14000692b:	add    ecx,ebx
   14000692d:	mov    r15d,ecx
   140006930:	call   QWORD PTR [rip+0x1af2]        # 0x140008428
   140006936:	mov    rbx,rax
   140006939:	test   rax,rax
   14000693c:	je     0x140006a27
   140006942:	mov    QWORD PTR [rsp+0x38],r12
   140006947:	lea    rax,[rip+0x3d32]        # 0x14000a680
   14000694e:	mov    QWORD PTR [rsp+0x30],rsi
   140006953:	lea    r14d,[rdi-0x7]
   140006957:	mov    QWORD PTR [rsp+0x28],rax
   14000695c:	xor    r9d,r9d
   14000695f:	xor    r8d,r8d
   140006962:	mov    DWORD PTR [rsp+0x20],0x800
   14000696a:	mov    edx,r15d
   14000696d:	mov    rcx,rbx
   140006970:	call   0x140002208
   140006975:	test   eax,eax
   140006977:	jns    0x140006981
   140006979:	movzx  edi,ax
   14000697c:	jmp    0x140006a27
   140006981:	xor    r8d,r8d
   140006984:	mov    rdx,rbx
   140006987:	mov    rcx,rsi
   14000698a:	call   QWORD PTR [rip+0x1780]        # 0x140008110
   140006990:	test   eax,eax
   140006992:	jne    0x1400069b2
   140006994:	call   QWORD PTR [rip+0x16be]        # 0x140008058
   14000699a:	mov    ecx,DWORD PTR [rip+0x6700]        # 0x14000d0a0
   1400069a0:	lea    rdx,[rip+0x3ce9]        # 0x14000a690
   1400069a7:	mov    r8d,eax
   1400069aa:	call   0x140007278
   1400069af:	xor    r14d,r14d
   1400069b2:	xor    r8d,r8d
   1400069b5:	mov    rdx,rsi
   1400069b8:	mov    rcx,rbp
   1400069bb:	call   QWORD PTR [rip+0x174f]        # 0x140008110
   1400069c1:	test   eax,eax
   1400069c3:	je     0x1400069c9
   1400069c5:	xor    edi,edi
   1400069c7:	jmp    0x140006a19
   1400069c9:	call   QWORD PTR [rip+0x1689]        # 0x140008058
   1400069cf:	mov    ecx,DWORD PTR [rip+0x66cb]        # 0x14000d0a0
   1400069d5:	lea    rdx,[rip+0x3d34]        # 0x14000a710
   1400069dc:	mov    r8d,eax
   1400069df:	mov    edi,eax
   1400069e1:	call   0x140007278
   1400069e6:	test   r14d,r14d
   1400069e9:	je     0x140006a27
   1400069eb:	xor    r8d,r8d
   1400069ee:	mov    rdx,rsi
   1400069f1:	mov    rcx,rbx
   1400069f4:	call   QWORD PTR [rip+0x1716]        # 0x140008110
   1400069fa:	test   eax,eax
   1400069fc:	jne    0x140006a19
   1400069fe:	call   QWORD PTR [rip+0x1654]        # 0x140008058
   140006a04:	mov    ecx,DWORD PTR [rip+0x6696]        # 0x14000d0a0
   140006a0a:	lea    rdx,[rip+0x3d5f]        # 0x14000a770
   140006a11:	mov    r8d,eax
   140006a14:	call   0x140007278
   140006a19:	test   r14d,r14d
   140006a1c:	je     0x140006a27
   140006a1e:	mov    rcx,rbx
   140006a21:	call   QWORD PTR [rip+0x1741]        # 0x140008168
   140006a27:	mov    rcx,rbx
   140006a2a:	call   QWORD PTR [rip+0x19e0]        # 0x140008410
   140006a30:	mov    ecx,DWORD PTR [rip+0x666a]        # 0x14000d0a0
   140006a36:	lea    rdx,[rip+0x3d8b]        # 0x14000a7c8
   140006a3d:	test   edi,edi
   140006a3f:	je     0x140006a48
   140006a41:	lea    rdx,[rip+0x3dc0]        # 0x14000a808
   140006a48:	call   0x140007278
   140006a4d:	mov    eax,edi
   140006a4f:	jmp    0x140006a53
   140006a51:	xor    eax,eax
   140006a53:	mov    rbx,QWORD PTR [rsp+0x60]
   140006a58:	mov    rbp,QWORD PTR [rsp+0x68]
   140006a5d:	mov    rsi,QWORD PTR [rsp+0x70]
   140006a62:	mov    rdi,QWORD PTR [rsp+0x78]
   140006a67:	add    rsp,0x40
   140006a6b:	pop    r15
   140006a6d:	pop    r14
   140006a6f:	pop    r12
   140006a71:	ret    
   140006a72:	int3   
   140006a73:	int3   
   140006a74:	int3   
   140006a75:	int3   
   140006a76:	int3   
   140006a77:	int3   
   140006a78:	mov    QWORD PTR [rsp+0x10],rbx
   140006a7d:	mov    QWORD PTR [rsp+0x18],rbp
   140006a82:	mov    QWORD PTR [rsp+0x20],rsi
   140006a87:	push   rdi
   140006a88:	push   r12
   140006a8a:	push   r13
   140006a8c:	push   r14
   140006a8e:	push   r15
   140006a90:	sub    rsp,0x30
   140006a94:	xor    ebp,ebp
   140006a96:	mov    r15,r8
   140006a99:	mov    rdi,rdx
   140006a9c:	mov    rsi,rcx
   140006a9f:	cmp    BYTE PTR [rcx],bpl
   140006aa2:	je     0x140006b33
   140006aa8:	test   rdx,rdx
   140006aab:	je     0x140006b33
   140006ab1:	cmp    BYTE PTR [rdx],bpl
   140006ab4:	je     0x140006b33
   140006ab6:	test   r8,r8
   140006ab9:	je     0x140006b33
   140006abb:	lea    r13d,[rbp+0x1]
   140006abf:	mov    r14d,ebp
   140006ac2:	test   r9d,r9d
   140006ac5:	je     0x140006b5b
   140006acb:	mov    r9,rdx
   140006ace:	lea    rcx,[rip+0x20e3]        # 0x140008bb8
   140006ad5:	lea    rdx,[rip+0x211c]        # 0x140008bf8
   140006adc:	call   0x140005fd0
   140006ae1:	mov    rbx,rax
   140006ae4:	test   rax,rax
   140006ae7:	je     0x140006b52
   140006ae9:	cmp    BYTE PTR [rax],bpl
   140006aec:	je     0x140006b52
   140006aee:	mov    rcx,rax
   140006af1:	call   0x140003898
   140006af6:	test   eax,eax
   140006af8:	jne    0x140006b52
   140006afa:	mov    ecx,DWORD PTR [rip+0x65a0]        # 0x14000d0a0
   140006b00:	lea    rdx,[rip+0x3d39]        # 0x14000a840
   140006b07:	call   0x140007278
   140006b0c:	lea    r9,[rip+0x2170]        # 0x140008c83
   140006b13:	mov    r8d,0x8ca
   140006b19:	lea    edx,[rbp+0x22]
   140006b1c:	mov    QWORD PTR [rsp+0x20],r9
   140006b21:	mov    rcx,r15
   140006b24:	call   QWORD PTR [rip+0x18b6]        # 0x1400083e0
   140006b2a:	mov    rcx,rbx
   140006b2d:	call   QWORD PTR [rip+0x18dd]        # 0x140008410
   140006b33:	xor    eax,eax
   140006b35:	mov    rbx,QWORD PTR [rsp+0x68]
   140006b3a:	mov    rbp,QWORD PTR [rsp+0x70]
   140006b3f:	mov    rsi,QWORD PTR [rsp+0x78]
   140006b44:	add    rsp,0x30
   140006b48:	pop    r15
   140006b4a:	pop    r14
   140006b4c:	pop    r13
   140006b4e:	pop    r12
   140006b50:	pop    rdi
   140006b51:	ret    
   140006b52:	mov    rcx,rbx
   140006b55:	call   QWORD PTR [rip+0x18b5]        # 0x140008410
   140006b5b:	mov    r9,rdi
   140006b5e:	lea    rdx,[rip+0x3743]        # 0x14000a2a8
   140006b65:	lea    rcx,[rip+0x204c]        # 0x140008bb8
   140006b6c:	call   0x140005fd0
   140006b71:	mov    r12,rax
   140006b74:	test   rax,rax
   140006b77:	je     0x140006ca7
   140006b7d:	cmp    BYTE PTR [rax],bpl
   140006b80:	je     0x140006ca7
   140006b86:	mov    rdx,rax
   140006b89:	mov    rcx,rsi
   140006b8c:	call   QWORD PTR [rip+0x18d6]        # 0x140008468
   140006b92:	mov    rbx,rax
   140006b95:	test   rax,rax
   140006b98:	je     0x140006c94
   140006b9e:	cmp    BYTE PTR [rax],bpl
   140006ba1:	je     0x140006c94
   140006ba7:	mov    r9,rax
   140006baa:	lea    rdx,[rip+0x3727]        # 0x14000a2d8
   140006bb1:	lea    rcx,[rip+0x3710]        # 0x14000a2c8
   140006bb8:	call   0x140005fd0
   140006bbd:	mov    rsi,rax
   140006bc0:	test   rax,rax
   140006bc3:	je     0x140006c81
   140006bc9:	cmp    BYTE PTR [rax],bpl
   140006bcc:	je     0x140006c81
   140006bd2:	lea    rdx,[rsp+0x60]
   140006bd7:	mov    QWORD PTR [rsp+0x60],rbp
   140006bdc:	mov    rcx,rax
   140006bdf:	call   0x1400062c8
   140006be4:	test   eax,eax
   140006be6:	mov    edi,eax
   140006be8:	mov    r13d,ebp
   140006beb:	mov    rcx,r15
   140006bee:	sete   r14b
   140006bf2:	test   r14d,r14d
   140006bf5:	je     0x140006c0a
   140006bf7:	mov    r9,rsi
   140006bfa:	mov    r8,rbx
   140006bfd:	mov    edx,0x21
   140006c02:	call   QWORD PTR [rip+0x17d8]        # 0x1400083e0
   140006c08:	jmp    0x140006c20
   140006c0a:	mov    r9,rbx
   140006c0d:	mov    QWORD PTR [rsp+0x20],rsi
   140006c12:	mov    r8d,eax
   140006c15:	mov    edx,0x22
   140006c1a:	call   QWORD PTR [rip+0x17c0]        # 0x1400083e0
   140006c20:	mov    rbp,QWORD PTR [rsp+0x60]
   140006c25:	test   r14d,r14d
   140006c28:	je     0x140006c74
   140006c2a:	test   rbp,rbp
   140006c2d:	je     0x140006c74
   140006c2f:	cmp    BYTE PTR [rbp+0x0],r13b
   140006c33:	je     0x140006c74
   140006c35:	mov    rdx,rbp
   140006c38:	mov    rcx,rbx
   140006c3b:	call   0x1400068c4
   140006c40:	xor    r14d,r14d
   140006c43:	mov    edi,eax
   140006c45:	test   eax,eax
   140006c47:	mov    rcx,r15
   140006c4a:	sete   r14b
   140006c4e:	test   r14d,r14d
   140006c51:	je     0x140006c63
   140006c53:	mov    r8,rbx
   140006c56:	mov    edx,0x23
   140006c5b:	call   QWORD PTR [rip+0x177f]        # 0x1400083e0
   140006c61:	jmp    0x140006c74
   140006c63:	mov    r9,rbx
   140006c66:	mov    r8d,eax
   140006c69:	mov    edx,0x24
   140006c6e:	call   QWORD PTR [rip+0x176c]        # 0x1400083e0
   140006c74:	mov    rcx,rbp
   140006c77:	call   QWORD PTR [rip+0x1793]        # 0x140008410
   140006c7d:	xor    ebp,ebp
   140006c7f:	jmp    0x140006c89
   140006c81:	call   QWORD PTR [rip+0x13d1]        # 0x140008058
   140006c87:	mov    edi,eax
   140006c89:	mov    rcx,rsi
   140006c8c:	call   QWORD PTR [rip+0x177e]        # 0x140008410
   140006c92:	jmp    0x140006c9c
   140006c94:	call   QWORD PTR [rip+0x13be]        # 0x140008058
   140006c9a:	mov    edi,eax
   140006c9c:	mov    rcx,rbx
   140006c9f:	call   QWORD PTR [rip+0x176b]        # 0x140008410
   140006ca5:	jmp    0x140006caf
   140006ca7:	call   QWORD PTR [rip+0x13ab]        # 0x140008058
   140006cad:	mov    edi,eax
   140006caf:	mov    rcx,r12
   140006cb2:	call   QWORD PTR [rip+0x1758]        # 0x140008410
   140006cb8:	test   r13d,r13d
   140006cbb:	je     0x140006cda
   140006cbd:	lea    r9,[rip+0x2bc4]        # 0x140009888
   140006cc4:	mov    r8d,edi
   140006cc7:	mov    edx,0x22
   140006ccc:	mov    QWORD PTR [rsp+0x20],r9
   140006cd1:	mov    rcx,r15
   140006cd4:	call   QWORD PTR [rip+0x1706]        # 0x1400083e0
   140006cda:	mov    eax,r14d
   140006cdd:	jmp    0x140006b35
   140006ce2:	int3   
   140006ce3:	int3   
   140006ce4:	int3   
   140006ce5:	int3   
   140006ce6:	int3   
   140006ce7:	int3   
   140006ce8:	rex push rbx
   140006cea:	sub    rsp,0x20
   140006cee:	and    DWORD PTR [rcx+0x8],0x0
   140006cf2:	lea    r8,[rip+0x1f5f]        # 0x140008c58
   140006cf9:	mov    rbx,rcx
   140006cfc:	lea    rdx,[rip+0x3b75]        # 0x14000a878
   140006d03:	mov    ecx,DWORD PTR [rip+0x6397]        # 0x14000d0a0
   140006d09:	call   0x140007278
   140006d0e:	lea    r8,[rip+0x1f43]        # 0x140008c58
   140006d15:	mov    edx,0x1
   140006d1a:	xor    ecx,ecx
   140006d1c:	call   QWORD PTR [rip+0x1466]        # 0x140008188
   140006d22:	mov    QWORD PTR [rbx],rax
   140006d25:	test   rax,rax
   140006d28:	je     0x140006d84
   140006d2a:	call   QWORD PTR [rip+0x1328]        # 0x140008058
   140006d30:	cmp    eax,0xb7
   140006d35:	je     0x140006d45
   140006d37:	mov    DWORD PTR [rbx+0x8],0x1
   140006d3e:	mov    eax,0x1
   140006d43:	jmp    0x140006d86
   140006d45:	mov    ecx,DWORD PTR [rip+0x6355]        # 0x14000d0a0
   140006d4b:	lea    r8,[rip+0x1f06]        # 0x140008c58
   140006d52:	lea    rdx,[rip+0x3b57]        # 0x14000a8b0
   140006d59:	call   0x140007278
   140006d5e:	mov    ecx,DWORD PTR [rip+0x633c]        # 0x14000d0a0
   140006d64:	lea    r8,[rip+0x1eed]        # 0x140008c58
   140006d6b:	lea    rdx,[rip+0x3b6e]        # 0x14000a8e0
   140006d72:	call   0x140007278
   140006d77:	mov    rcx,QWORD PTR [rbx]
   140006d7a:	call   QWORD PTR [rip+0x1300]        # 0x140008080
   140006d80:	and    QWORD PTR [rbx],0x0
   140006d84:	xor    eax,eax
   140006d86:	add    rsp,0x20
   140006d8a:	pop    rbx
   140006d8b:	ret    
   140006d8c:	int3   
   140006d8d:	int3   
   140006d8e:	int3   
   140006d8f:	int3   
   140006d90:	int3   
   140006d91:	int3   
   140006d92:	int3   
   140006d93:	int3   
   140006d94:	mov    rax,rsp
   140006d97:	mov    QWORD PTR [rax+0x8],rbx
   140006d9b:	mov    QWORD PTR [rax+0x18],rbp
   140006d9f:	mov    QWORD PTR [rax+0x20],rsi
   140006da3:	push   rdi
   140006da4:	sub    rsp,0x40
   140006da8:	xor    ebx,ebx
   140006daa:	xor    r9d,r9d
   140006dad:	and    QWORD PTR [rax-0x18],rbx
   140006db1:	mov    edx,0x80000000
   140006db6:	mov    DWORD PTR [rax-0x20],0x80
   140006dbd:	mov    rdi,rcx
   140006dc0:	mov    DWORD PTR [rax-0x28],0x3
   140006dc7:	lea    r8d,[rbx+0x1]
   140006dcb:	call   QWORD PTR [rip+0x135f]        # 0x140008130
   140006dd1:	mov    rbp,rax
   140006dd4:	cmp    rax,0xffffffffffffffff
   140006dd8:	jne    0x140006df4
   140006dda:	mov    ecx,DWORD PTR [rip+0x62c0]        # 0x14000d0a0
   140006de0:	lea    rdx,[rip+0x3b31]        # 0x14000a918
   140006de7:	mov    r8,rdi
   140006dea:	call   0x140007278
   140006def:	jmp    0x140006e94
   140006df4:	xor    edx,edx
   140006df6:	mov    rcx,rax
   140006df9:	call   QWORD PTR [rip+0x1399]        # 0x140008198
   140006dff:	mov    esi,eax
   140006e01:	cmp    eax,0x7fff
   140006e06:	jb     0x140006e1f
   140006e08:	lea    rdx,[rip+0x3b39]        # 0x14000a948
   140006e0f:	mov    ecx,DWORD PTR [rip+0x628b]        # 0x14000d0a0
   140006e15:	mov    r8,rdi
   140006e18:	call   0x140007278
   140006e1d:	jmp    0x140006e8b
   140006e1f:	mov    rcx,rsi
   140006e22:	call   QWORD PTR [rip+0x1600]        # 0x140008428
   140006e28:	mov    rbx,rax
   140006e2b:	mov    r8d,esi
   140006e2e:	test   rax,rax
   140006e31:	je     0x140006e79
   140006e33:	and    QWORD PTR [rsp+0x20],0x0
   140006e39:	lea    r9,[rsp+0x58]
   140006e3e:	mov    rdx,rax
   140006e41:	mov    rcx,rbp
   140006e44:	call   QWORD PTR [rip+0x12f6]        # 0x140008140
   140006e4a:	test   eax,eax
   140006e4c:	jne    0x140006e57
   140006e4e:	lea    rdx,[rip+0x3b2b]        # 0x14000a980
   140006e55:	jmp    0x140006e0f
   140006e57:	cmp    BYTE PTR [rbx],0x0
   140006e5a:	mov    rcx,rbx
   140006e5d:	je     0x140006e8b
   140006e5f:	mov    al,BYTE PTR [rcx]
   140006e61:	sub    al,0x9
   140006e63:	test   al,0xfa
   140006e65:	jne    0x140006e6c
   140006e67:	cmp    BYTE PTR [rcx],0xe
   140006e6a:	jne    0x140006e74
   140006e6c:	inc    rcx
   140006e6f:	cmp    BYTE PTR [rcx],0x0
   140006e72:	jmp    0x140006e5d
   140006e74:	mov    BYTE PTR [rcx],0x0
   140006e77:	jmp    0x140006e8b
   140006e79:	mov    ecx,DWORD PTR [rip+0x6221]        # 0x14000d0a0
   140006e7f:	lea    rdx,[rip+0x3b2a]        # 0x14000a9b0
   140006e86:	call   0x140007278
   140006e8b:	mov    rcx,rbp
   140006e8e:	call   QWORD PTR [rip+0x11ec]        # 0x140008080
   140006e94:	mov    rbp,QWORD PTR [rsp+0x60]
   140006e99:	mov    rax,rbx
   140006e9c:	mov    rbx,QWORD PTR [rsp+0x50]
   140006ea1:	mov    rsi,QWORD PTR [rsp+0x68]
   140006ea6:	add    rsp,0x40
   140006eaa:	pop    rdi
   140006eab:	ret    
   140006eac:	int3   
   140006ead:	int3   
   140006eae:	int3   
   140006eaf:	int3   
   140006eb0:	int3   
   140006eb1:	int3   
   140006eb2:	int3   
   140006eb3:	int3   
   140006eb4:	mov    QWORD PTR [rsp+0x10],rbx
   140006eb9:	push   rdi
   140006eba:	sub    rsp,0x260
   140006ec1:	mov    rax,QWORD PTR [rip+0x6140]        # 0x14000d008
   140006ec8:	xor    rax,rsp
   140006ecb:	mov    QWORD PTR [rsp+0x250],rax
   140006ed3:	xor    ebx,ebx
   140006ed5:	mov    rdi,rcx
   140006ed8:	test   rcx,rcx
   140006edb:	je     0x14000701f
   140006ee1:	xor    edx,edx
   140006ee3:	mov    BYTE PTR [rsp+0x30],bl
   140006ee7:	mov    r8d,0x104
   140006eed:	lea    rcx,[rsp+0x31]
   140006ef2:	call   0x140007c76
   140006ef7:	lea    rdx,[rsp+0x30]
   140006efc:	mov    ecx,0x105
   140006f01:	call   QWORD PTR [rip+0x1181]        # 0x140008088
   140006f07:	test   eax,eax
   140006f09:	jne    0x140006f68
   140006f0b:	call   QWORD PTR [rip+0x1147]        # 0x140008058
   140006f11:	mov    ecx,DWORD PTR [rip+0x6189]        # 0x14000d0a0
   140006f17:	lea    rdx,[rip+0x3ac2]        # 0x14000a9e0
   140006f1e:	mov    r8d,eax
   140006f21:	call   0x140007278
   140006f26:	lea    r8,[rip+0x23f7]        # 0x140009324
   140006f2d:	mov    edx,0x105
   140006f32:	lea    rax,[rsp+0x30]
   140006f37:	sub    r8,rax
   140006f3a:	lea    rcx,[rsp+0x30]
   140006f3f:	lea    rax,[rdx+0x7ffffef9]
   140006f46:	test   rax,rax
   140006f49:	je     0x140006f5e
   140006f4b:	mov    al,BYTE PTR [r8+rcx*1]
   140006f4f:	test   al,al
   140006f51:	je     0x140006f5e
   140006f53:	mov    BYTE PTR [rcx],al
   140006f55:	inc    rcx
   140006f58:	sub    rdx,0x1
   140006f5c:	jne    0x140006f3f
   140006f5e:	test   rdx,rdx
   140006f61:	jne    0x140006f66
   140006f63:	dec    rcx
   140006f66:	mov    BYTE PTR [rcx],bl
   140006f68:	lea    r9,[rsp+0x140]
   140006f70:	xor    r8d,r8d
   140006f73:	lea    rdx,[rip+0x2716]        # 0x140009690
   140006f7a:	lea    rcx,[rsp+0x30]
   140006f7f:	call   QWORD PTR [rip+0x10f3]        # 0x140008078
   140006f85:	test   eax,eax
   140006f87:	jne    0x140006f98
   140006f89:	call   QWORD PTR [rip+0x10c9]        # 0x140008058
   140006f8f:	lea    rdx,[rip+0x3a7a]        # 0x14000aa10
   140006f96:	jmp    0x140006fc9
   140006f98:	lea    rcx,[rsp+0x140]
   140006fa0:	call   QWORD PTR [rip+0x11c2]        # 0x140008168
   140006fa6:	xor    edx,edx
   140006fa8:	lea    rcx,[rsp+0x140]
   140006fb0:	call   QWORD PTR [rip+0x11ea]        # 0x1400081a0
   140006fb6:	mov    ebx,eax
   140006fb8:	test   eax,eax
   140006fba:	jne    0x140006fd9
   140006fbc:	call   QWORD PTR [rip+0x1096]        # 0x140008058
   140006fc2:	lea    rdx,[rip+0x3a77]        # 0x14000aa40
   140006fc9:	mov    ecx,DWORD PTR [rip+0x60d1]        # 0x14000d0a0
   140006fcf:	mov    r8d,eax
   140006fd2:	call   0x140007278
   140006fd7:	jmp    0x14000701f
   140006fd9:	lea    r8,[rsp+0x140]
   140006fe1:	mov    DWORD PTR [rsp+0x28],0x100
   140006fe9:	mov    edx,0x105
   140006fee:	mov    rcx,rdi
   140006ff1:	call   0x140001d00
   140006ff6:	test   eax,eax
   140006ff8:	jns    0x14000701f
   140006ffa:	mov    ecx,DWORD PTR [rip+0x60a0]        # 0x14000d0a0
   140007000:	lea    rdx,[rip+0x3a71]        # 0x14000aa78
   140007007:	mov    r8d,eax
   14000700a:	call   0x140007278
   14000700f:	lea    rcx,[rsp+0x140]
   140007017:	call   QWORD PTR [rip+0x10eb]        # 0x140008108
   14000701d:	xor    ebx,ebx
   14000701f:	mov    eax,ebx
   140007021:	mov    rcx,QWORD PTR [rsp+0x250]
   140007029:	xor    rcx,rsp
   14000702c:	call   0x1400076f0
   140007031:	mov    rbx,QWORD PTR [rsp+0x278]
   140007039:	add    rsp,0x260
   140007040:	pop    rdi
   140007041:	ret    
   140007042:	int3   
   140007043:	int3   
   140007044:	int3   
   140007045:	int3   
   140007046:	int3   
   140007047:	int3   
   140007048:	mov    QWORD PTR [rsp+0x8],rbx
   14000704d:	push   rdi
   14000704e:	sub    rsp,0x20
   140007052:	lea    rax,[rip+0x6047]        # 0x14000d0a0
   140007059:	test   rax,rax
   14000705c:	jne    0x140007066
   14000705e:	lea    ebx,[rax+0x57]
   140007061:	jmp    0x140007191
   140007066:	cmp    DWORD PTR [rip+0x6033],0xffffffff        # 0x14000d0a0
   14000706d:	je     0x140007079
   14000706f:	mov    ebx,0xb7
   140007074:	jmp    0x140007191
   140007079:	xor    ebx,ebx
   14000707b:	lock inc DWORD PTR [rip+0x65fe]        # 0x14000d680
   140007082:	lea    rcx,[rip+0x3a1f]        # 0x14000aaa8
   140007089:	call   QWORD PTR [rip+0x1119]        # 0x1400081a8
   14000708f:	mov    QWORD PTR [rip+0x65fa],rax        # 0x14000d690
   140007096:	test   rax,rax
   140007099:	je     0x14000713f
   14000709f:	lea    rdx,[rip+0x3a12]        # 0x14000aab8
   1400070a6:	mov    rcx,rax
   1400070a9:	call   QWORD PTR [rip+0x1051]        # 0x140008100
   1400070af:	mov    QWORD PTR [rip+0x65c2],rax        # 0x14000d678
   1400070b6:	test   rax,rax
   1400070b9:	je     0x14000713f
   1400070bf:	mov    rcx,QWORD PTR [rip+0x65ca]        # 0x14000d690
   1400070c6:	lea    rdx,[rip+0x3a03]        # 0x14000aad0
   1400070cd:	call   QWORD PTR [rip+0x102d]        # 0x140008100
   1400070d3:	mov    QWORD PTR [rip+0x65be],rax        # 0x14000d698
   1400070da:	test   rax,rax
   1400070dd:	je     0x14000713f
   1400070df:	mov    rcx,QWORD PTR [rip+0x65aa]        # 0x14000d690
   1400070e6:	lea    rdx,[rip+0x39fb]        # 0x14000aae8
   1400070ed:	call   QWORD PTR [rip+0x100d]        # 0x140008100
   1400070f3:	mov    QWORD PTR [rip+0x656e],rax        # 0x14000d668
   1400070fa:	test   rax,rax
   1400070fd:	je     0x14000713f
   1400070ff:	mov    rcx,QWORD PTR [rip+0x658a]        # 0x14000d690
   140007106:	lea    rdx,[rip+0x39eb]        # 0x14000aaf8
   14000710d:	call   QWORD PTR [rip+0xfed]        # 0x140008100
   140007113:	mov    QWORD PTR [rip+0x656e],rax        # 0x14000d688
   14000711a:	test   rax,rax
   14000711d:	je     0x14000713f
   14000711f:	mov    rcx,QWORD PTR [rip+0x656a]        # 0x14000d690
   140007126:	lea    rdx,[rip+0x39db]        # 0x14000ab08
   14000712d:	call   QWORD PTR [rip+0xfcd]        # 0x140008100
   140007133:	mov    QWORD PTR [rip+0x6536],rax        # 0x14000d670
   14000713a:	test   rax,rax
   14000713d:	jne    0x140007147
   14000713f:	call   QWORD PTR [rip+0xf13]        # 0x140008058
   140007145:	mov    ebx,eax
   140007147:	lock dec DWORD PTR [rip+0x6532]        # 0x14000d680
   14000714e:	test   ebx,ebx
   140007150:	jne    0x140007191
   140007152:	mov    rdi,QWORD PTR [rip+0x651f]        # 0x14000d678
   140007159:	test   rdi,rdi
   14000715c:	je     0x140007187
   14000715e:	mov    rcx,rdi
   140007161:	call   QWORD PTR [rip+0x13a1]        # 0x140008508
   140007167:	xor    edx,edx
   140007169:	lea    rcx,[rip+0x1b18]        # 0x140008c88
   140007170:	call   rdi
   140007172:	mov    DWORD PTR [rip+0x5f28],eax        # 0x14000d0a0
   140007178:	cmp    eax,0xffffffff
   14000717b:	jne    0x140007187
   14000717d:	call   QWORD PTR [rip+0xed5]        # 0x140008058
   140007183:	mov    ebx,eax
   140007185:	jmp    0x140007191
   140007187:	mov    DWORD PTR [rip+0x650f],0x1        # 0x14000d6a0
   140007191:	mov    eax,ebx
   140007193:	mov    rbx,QWORD PTR [rsp+0x30]
   140007198:	add    rsp,0x20
   14000719c:	pop    rdi
   14000719d:	ret    
   14000719e:	int3   
   14000719f:	int3   
   1400071a0:	int3   
   1400071a1:	int3   
   1400071a2:	int3   
   1400071a3:	int3   
   1400071a4:	test   rcx,rcx
   1400071a7:	je     0x140007270
   1400071ad:	sub    rsp,0x618
   1400071b4:	mov    rax,QWORD PTR [rip+0x5e4d]        # 0x14000d008
   1400071bb:	xor    rax,rsp
   1400071be:	mov    QWORD PTR [rsp+0x600],rax
   1400071c6:	xor    r11d,r11d
   1400071c9:	lea    rdx,[rsp]
   1400071cd:	mov    BYTE PTR [rcx+0x1ff],r11b
   1400071d4:	mov    r9d,0x600
   1400071da:	mov    r8,rcx
   1400071dd:	mov    r10d,r11d
   1400071e0:	cmp    BYTE PTR [rcx],r11b
   1400071e3:	je     0x14000721b
   1400071e5:	cmp    r9d,0x1
   1400071e9:	jbe    0x14000721b
   1400071eb:	mov    al,BYTE PTR [r8]
   1400071ee:	dec    r9d
   1400071f1:	mov    BYTE PTR [rdx],al
   1400071f3:	inc    rdx
   1400071f6:	cmp    al,0x25
   1400071f8:	jne    0x140007213
   1400071fa:	mov    BYTE PTR [rdx],al
   1400071fc:	dec    r9d
   1400071ff:	inc    rdx
   140007202:	cmp    BYTE PTR [r8+0x1],al
   140007206:	jne    0x14000720d
   140007208:	inc    r8
   14000720b:	jmp    0x140007213
   14000720d:	mov    r10d,0x1
   140007213:	inc    r8
   140007216:	cmp    BYTE PTR [r8],r11b
   140007219:	jne    0x1400071e5
   14000721b:	mov    BYTE PTR [rdx],r11b
   14000721e:	test   r10d,r10d
   140007221:	je     0x140007259
   140007223:	lea    r8,[rsp]
   140007227:	mov    edx,0x200
   14000722c:	sub    r8,rcx
   14000722f:	lea    rax,[rdx+0x7ffffdfe]
   140007236:	test   rax,rax
   140007239:	je     0x14000724e
   14000723b:	mov    al,BYTE PTR [r8+rcx*1]
   14000723f:	test   al,al
   140007241:	je     0x14000724e
   140007243:	mov    BYTE PTR [rcx],al
   140007245:	inc    rcx
   140007248:	sub    rdx,0x1
   14000724c:	jne    0x14000722f
   14000724e:	test   rdx,rdx
   140007251:	jne    0x140007256
   140007253:	dec    rcx
   140007256:	mov    BYTE PTR [rcx],r11b
   140007259:	mov    rcx,QWORD PTR [rsp+0x600]
   140007261:	xor    rcx,rsp
   140007264:	call   0x1400076f0
   140007269:	add    rsp,0x618
   140007270:	ret    
   140007271:	int3   
   140007272:	int3   
   140007273:	int3   
   140007274:	int3   
   140007275:	int3   
   140007276:	int3   
   140007277:	int3   
   140007278:	mov    r11,rsp
   14000727b:	mov    QWORD PTR [r11+0x10],rdx
   14000727f:	mov    QWORD PTR [r11+0x18],r8
   140007283:	mov    QWORD PTR [r11+0x20],r9
   140007287:	push   rbx
   140007288:	push   rdi
   140007289:	sub    rsp,0x238
   140007290:	mov    rax,QWORD PTR [rip+0x5d71]        # 0x14000d008
   140007297:	xor    rax,rsp
   14000729a:	mov    QWORD PTR [rsp+0x220],rax
   1400072a2:	test   rdx,rdx
   1400072a5:	lea    r8,[rip+0x19d7]        # 0x140008c83
   1400072ac:	mov    edi,ecx
   1400072ae:	lea    r9,[r11+0x18]
   1400072b2:	cmovne r8,rdx
   1400072b6:	lea    rcx,[rsp+0x20]
   1400072bb:	mov    ebx,0x1ff
   1400072c0:	mov    edx,ebx
   1400072c2:	call   QWORD PTR [rip+0x1220]        # 0x1400084e8
   1400072c8:	test   eax,eax
   1400072ca:	js     0x1400072d7
   1400072cc:	cdqe   
   1400072ce:	cmp    rax,rbx
   1400072d1:	ja     0x1400072d7
   1400072d3:	jne    0x1400072e4
   1400072d5:	jmp    0x1400072dc
   1400072d7:	mov    BYTE PTR [rsp+0x20],0x0
   1400072dc:	mov    BYTE PTR [rsp+0x21f],0x0
   1400072e4:	cmp    edi,0xffffffff
   1400072e7:	je     0x140007316
   1400072e9:	mov    rbx,QWORD PTR [rip+0x6398]        # 0x14000d688
   1400072f0:	test   rbx,rbx
   1400072f3:	je     0x140007316
   1400072f5:	lea    rcx,[rsp+0x20]
   1400072fa:	call   0x1400071a4
   1400072ff:	mov    rcx,rbx
   140007302:	call   QWORD PTR [rip+0x1200]        # 0x140008508
   140007308:	lea    r8,[rsp+0x20]
   14000730d:	mov    edx,0xc
   140007312:	mov    ecx,edi
   140007314:	call   rbx
   140007316:	mov    rcx,QWORD PTR [rsp+0x220]
   14000731e:	xor    rcx,rsp
   140007321:	call   0x1400076f0
   140007326:	add    rsp,0x238
   14000732d:	pop    rdi
   14000732e:	pop    rbx
   14000732f:	ret    
   140007330:	int3   
   140007331:	int3   
   140007332:	int3   
   140007333:	int3   
   140007334:	int3   
   140007335:	int3   
   140007336:	int3   
   140007337:	int3   
   140007338:	int3   
   140007339:	int3   
   14000733a:	int3   
   14000733b:	int3   
   14000733c:	int3   
   14000733d:	int3   
   14000733e:	int3   
   14000733f:	int3   
   140007340:	sub    rsp,0x28
   140007344:	mov    eax,0x5a4d
   140007349:	cmp    WORD PTR [rip+0xffffffffffff8cb0],ax        # 0x140000000
   140007350:	je     0x140007356
   140007352:	xor    eax,eax
   140007354:	jmp    0x1400073a5
   140007356:	movsxd rcx,DWORD PTR [rip+0xffffffffffff8cdf]        # 0x14000003c
   14000735d:	lea    rax,[rip+0xffffffffffff8c9c]        # 0x140000000
   140007364:	add    rcx,rax
   140007367:	cmp    DWORD PTR [rcx],0x4550
   14000736d:	jne    0x140007352
   14000736f:	movzx  eax,WORD PTR [rcx+0x18]
   140007373:	cmp    eax,0x10b
   140007378:	je     0x140007394
   14000737a:	cmp    eax,0x20b
   14000737f:	jne    0x140007352
   140007381:	xor    eax,eax
   140007383:	cmp    DWORD PTR [rcx+0x84],0xe
   14000738a:	jbe    0x1400073a5
   14000738c:	cmp    DWORD PTR [rcx+0xf8],eax
   140007392:	jmp    0x1400073a2
   140007394:	xor    eax,eax
   140007396:	cmp    DWORD PTR [rcx+0x74],0xe
   14000739a:	jbe    0x1400073a5
   14000739c:	cmp    DWORD PTR [rcx+0xe8],eax
   1400073a2:	setne  al
   1400073a5:	mov    ecx,0x2
   1400073aa:	mov    DWORD PTR [rip+0x5d20],eax        # 0x14000d0d0
   1400073b0:	call   0x140007998
   1400073b5:	mov    ecx,eax
   1400073b7:	call   QWORD PTR [rip+0x111b]        # 0x1400084d8
   1400073bd:	mov    rcx,QWORD PTR [rip+0x10cc]        # 0x140008490
   1400073c4:	or     rax,0xffffffffffffffff
   1400073c8:	mov    QWORD PTR [rip+0x62d9],rax        # 0x14000d6a8
   1400073cf:	mov    QWORD PTR [rip+0x62da],rax        # 0x14000d6b0
   1400073d6:	mov    eax,DWORD PTR [rip+0x6280]        # 0x14000d65c
   1400073dc:	mov    DWORD PTR [rcx],eax
   1400073de:	mov    rcx,QWORD PTR [rip+0x10a3]        # 0x140008488
   1400073e5:	mov    eax,DWORD PTR [rip+0x6265]        # 0x14000d650
   1400073eb:	mov    DWORD PTR [rcx],eax
   1400073ed:	call   0x1400010c0
   1400073f2:	cmp    DWORD PTR [rip+0x5c07],0x0        # 0x14000d000
   1400073f9:	jne    0x140007408
   1400073fb:	lea    rcx,[rip+0xffffffffffff9cbe]        # 0x1400010c0
   140007402:	call   QWORD PTR [rip+0x10a8]        # 0x1400084b0
   140007408:	xor    eax,eax
   14000740a:	add    rsp,0x28
   14000740e:	ret    
   14000740f:	int3   
   140007410:	int3   
   140007411:	int3   
   140007412:	int3   
   140007413:	int3   
   140007414:	int3   
   140007415:	int3   
   140007416:	int3   
   140007417:	int3   
   140007418:	int3   
   140007419:	int3   
   14000741a:	int3   
   14000741b:	int3   
   14000741c:	int3   
   14000741d:	int3   
   14000741e:	int3   
   14000741f:	int3   
   140007420:	sub    rsp,0x38
   140007424:	mov    eax,DWORD PTR [rip+0x622e]        # 0x14000d658
   14000742a:	lea    r8,[rip+0x5c97]        # 0x14000d0c8
   140007431:	mov    r9d,DWORD PTR [rip+0x621c]        # 0x14000d654
   140007438:	lea    rdx,[rip+0x5c81]        # 0x14000d0c0
   14000743f:	mov    DWORD PTR [rip+0x5c8f],eax        # 0x14000d0d4
   140007445:	lea    rcx,[rip+0x5c6c]        # 0x14000d0b8
   14000744c:	lea    rax,[rip+0x5c81]        # 0x14000d0d4
   140007453:	mov    QWORD PTR [rsp+0x20],rax
   140007458:	call   QWORD PTR [rip+0x1082]        # 0x1400084e0
   14000745e:	mov    DWORD PTR [rip+0x5c58],eax        # 0x14000d0bc
   140007464:	add    rsp,0x38
   140007468:	ret    
   140007469:	int3   
   14000746a:	int3   
   14000746b:	int3   
   14000746c:	int3   
   14000746d:	int3   
   14000746e:	int3   
   14000746f:	int3   
   140007470:	sub    rsp,0x28
   140007474:	call   0x140007ad4
   140007479:	add    rsp,0x28
   14000747d:	jmp    0x140007488
   140007482:	int3   
   140007483:	int3   
   140007484:	int3   
   140007485:	int3   
   140007486:	int3   
   140007487:	int3   
   140007488:	mov    rax,rsp
   14000748b:	mov    QWORD PTR [rax+0x8],rbx
   14000748f:	mov    QWORD PTR [rax+0x10],rsi
   140007493:	mov    QWORD PTR [rax+0x18],rdi
   140007497:	push   r15
   140007499:	sub    rsp,0xb0
   1400074a0:	and    DWORD PTR [rsp+0x20],0x0
   1400074a5:	lea    rcx,[rax-0x78]
   1400074a9:	call   QWORD PTR [rip+0xd59]        # 0x140008208
   1400074af:	nop
   1400074b0:	mov    rax,QWORD PTR gs:0x30
   1400074b9:	mov    rbx,QWORD PTR [rax+0x8]
   1400074bd:	xor    esi,esi
   1400074bf:	xor    eax,eax
   1400074c1:	lock cmpxchg QWORD PTR [rip+0x61ee],rbx        # 0x14000d6b8
   1400074ca:	je     0x1400074e5
   1400074cc:	cmp    rax,rbx
   1400074cf:	jne    0x1400074d8
   1400074d1:	mov    esi,0x1
   1400074d6:	jmp    0x1400074e5
   1400074d8:	mov    ecx,0x3e8
   1400074dd:	call   QWORD PTR [rip+0xbed]        # 0x1400080d0
   1400074e3:	jmp    0x1400074bf
   1400074e5:	mov    eax,DWORD PTR [rip+0x61d5]        # 0x14000d6c0
   1400074eb:	cmp    eax,0x1
   1400074ee:	jne    0x1400074fa
   1400074f0:	lea    ecx,[rax+0x1e]
   1400074f3:	call   0x1400079e4
   1400074f8:	jmp    0x14000756b
   1400074fa:	mov    eax,DWORD PTR [rip+0x61c0]        # 0x14000d6c0
   140007500:	test   eax,eax
   140007502:	jne    0x140007561
   140007504:	mov    DWORD PTR [rip+0x61b2],0x1        # 0x14000d6c0
   14000750e:	lea    r15,[rip+0x1033]        # 0x140008548
   140007515:	lea    rbx,[rip+0x1014]        # 0x140008530
   14000751c:	mov    QWORD PTR [rsp+0x38],rbx
   140007521:	mov    DWORD PTR [rsp+0x30],eax
   140007525:	cmp    rbx,r15
   140007528:	jae    0x140007553
   14000752a:	test   eax,eax
   14000752c:	jne    0x140007557
   14000752e:	mov    rdi,QWORD PTR [rbx]
   140007531:	test   rdi,rdi
   140007534:	je     0x140007548
   140007536:	mov    rcx,rdi
   140007539:	mov    rax,QWORD PTR [rip+0xfc8]        # 0x140008508
   140007540:	call   rax
   140007542:	call   rdi
   140007544:	mov    DWORD PTR [rsp+0x30],eax
   140007548:	add    rbx,0x8
   14000754c:	mov    QWORD PTR [rsp+0x38],rbx
   140007551:	jmp    0x140007525
   140007553:	test   eax,eax
   140007555:	je     0x14000756b
   140007557:	mov    eax,0xff
   14000755c:	jmp    0x1400076c4
   140007561:	mov    DWORD PTR [rip+0x5b49],0x1        # 0x14000d0b4
   14000756b:	mov    eax,DWORD PTR [rip+0x614f]        # 0x14000d6c0
   140007571:	cmp    eax,0x1
   140007574:	jne    0x140007593
   140007576:	lea    rdx,[rip+0xfab]        # 0x140008528
   14000757d:	lea    rcx,[rip+0xf94]        # 0x140008518
   140007584:	call   0x140007baa
   140007589:	mov    DWORD PTR [rip+0x612d],0x2        # 0x14000d6c0
   140007593:	test   esi,esi
   140007595:	jne    0x1400075a0
   140007597:	xor    eax,eax
   140007599:	xchg   QWORD PTR [rip+0x6118],rax        # 0x14000d6b8
   1400075a0:	cmp    QWORD PTR [rip+0x6120],0x0        # 0x14000d6c8
   1400075a8:	je     0x1400075d8
   1400075aa:	lea    rcx,[rip+0x6117]        # 0x14000d6c8
   1400075b1:	call   0x140007a40
   1400075b6:	test   eax,eax
   1400075b8:	je     0x1400075d8
   1400075ba:	mov    rbx,QWORD PTR [rip+0x6107]        # 0x14000d6c8
   1400075c1:	mov    rcx,rbx
   1400075c4:	mov    rax,QWORD PTR [rip+0xf3d]        # 0x140008508
   1400075cb:	call   rax
   1400075cd:	xor    r8d,r8d
   1400075d0:	lea    edx,[r8+0x2]
   1400075d4:	xor    ecx,ecx
   1400075d6:	call   rbx
   1400075d8:	mov    rax,QWORD PTR [rip+0xeb9]        # 0x140008498
   1400075df:	mov    rbx,QWORD PTR [rax]
   1400075e2:	mov    QWORD PTR [rsp+0x28],rbx
   1400075e7:	mov    edi,DWORD PTR [rsp+0x20]
   1400075eb:	cmp    BYTE PTR [rbx],0x20
   1400075ee:	ja     0x140007663
   1400075f0:	cmp    BYTE PTR [rbx],0x0
   1400075f3:	je     0x1400075f9
   1400075f5:	test   edi,edi
   1400075f7:	jne    0x140007663
   1400075f9:	mov    al,BYTE PTR [rbx]
   1400075fb:	dec    al
   1400075fd:	cmp    al,0x1f
   1400075ff:	ja     0x14000760b
   140007601:	inc    rbx
   140007604:	mov    QWORD PTR [rsp+0x28],rbx
   140007609:	jmp    0x1400075f9
   14000760b:	mov    ecx,DWORD PTR [rsp+0x7c]
   14000760f:	movzx  eax,WORD PTR [rsp+0x80]
   140007617:	mov    r9d,0xa
   14000761d:	and    cl,0x1
   140007620:	cmovne r9d,eax
   140007624:	mov    r8,rbx
   140007627:	xor    edx,edx
   140007629:	lea    rcx,[rip+0xffffffffffff89d0]        # 0x140000000
   140007630:	call   0x1400058f4
   140007635:	mov    DWORD PTR [rip+0x5a75],eax        # 0x14000d0b0
   14000763b:	cmp    DWORD PTR [rip+0x5a8e],0x0        # 0x14000d0d0
   140007642:	jne    0x14000764c
   140007644:	mov    ecx,eax
   140007646:	call   QWORD PTR [rip+0xe84]        # 0x1400084d0
   14000764c:	cmp    DWORD PTR [rip+0x5a61],0x0        # 0x14000d0b4
   140007653:	jne    0x140007661
   140007655:	call   QWORD PTR [rip+0xe65]        # 0x1400084c0
   14000765b:	mov    eax,DWORD PTR [rip+0x5a4f]        # 0x14000d0b0
   140007661:	jmp    0x1400076c4
   140007663:	cmp    BYTE PTR [rbx],0x22
   140007666:	jne    0x140007675
   140007668:	xor    eax,eax
   14000766a:	test   edi,edi
   14000766c:	sete   al
   14000766f:	mov    edi,eax
   140007671:	mov    DWORD PTR [rsp+0x20],eax
   140007675:	movzx  ecx,BYTE PTR [rbx]
   140007678:	call   QWORD PTR [rip+0xe72]        # 0x1400084f0
   14000767e:	test   eax,eax
   140007680:	je     0x14000768a
   140007682:	inc    rbx
   140007685:	mov    QWORD PTR [rsp+0x28],rbx
   14000768a:	inc    rbx
   14000768d:	mov    QWORD PTR [rsp+0x28],rbx
   140007692:	jmp    0x1400075eb
   140007697:	mov    DWORD PTR [rip+0x5a13],eax        # 0x14000d0b0
   14000769d:	cmp    DWORD PTR [rip+0x5a2c],0x0        # 0x14000d0d0
   1400076a4:	jne    0x1400076af
   1400076a6:	mov    ecx,eax
   1400076a8:	call   QWORD PTR [rip+0xe1a]        # 0x1400084c8
   1400076ae:	int3   
   1400076af:	cmp    DWORD PTR [rip+0x59fe],0x0        # 0x14000d0b4
   1400076b6:	jne    0x1400076c4
   1400076b8:	call   QWORD PTR [rip+0xe02]        # 0x1400084c0
   1400076be:	mov    eax,DWORD PTR [rip+0x59ec]        # 0x14000d0b0
   1400076c4:	lea    r11,[rsp+0xb0]
   1400076cc:	mov    rbx,QWORD PTR [r11+0x10]
   1400076d0:	mov    rsi,QWORD PTR [r11+0x18]
   1400076d4:	mov    rdi,QWORD PTR [r11+0x20]
   1400076d8:	mov    rsp,r11
   1400076db:	pop    r15
   1400076dd:	ret    
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	int3   
   1400076e1:	int3   
   1400076e2:	int3   
   1400076e3:	int3   
   1400076e4:	int3   
   1400076e5:	int3   
   1400076e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400076f0:	cmp    rcx,QWORD PTR [rip+0x5911]        # 0x14000d008
   1400076f7:	jne    0x140007709
   1400076f9:	rol    rcx,0x10
   1400076fd:	test   cx,0xffff
   140007702:	jne    0x140007705
   140007704:	ret    
   140007705:	ror    rcx,0x10
   140007709:	jmp    0x140007750
   14000770e:	int3   
   14000770f:	int3   
   140007710:	int3   
   140007711:	int3   
   140007712:	int3   
   140007713:	int3   
   140007714:	rex push rbx
   140007716:	sub    rsp,0x20
   14000771a:	mov    rbx,rcx
   14000771d:	xor    ecx,ecx
   14000771f:	call   QWORD PTR [rip+0xabb]        # 0x1400081e0
   140007725:	mov    rcx,rbx
   140007728:	call   QWORD PTR [rip+0xaba]        # 0x1400081e8
   14000772e:	call   QWORD PTR [rip+0xaa4]        # 0x1400081d8
   140007734:	mov    rcx,rax
   140007737:	mov    edx,0xc0000409
   14000773c:	add    rsp,0x20
   140007740:	pop    rbx
   140007741:	rex.W jmp QWORD PTR [rip+0xa88]        # 0x1400081d0
   140007748:	int3   
   140007749:	int3   
   14000774a:	int3   
   14000774b:	int3   
   14000774c:	int3   
   14000774d:	int3   
   14000774e:	int3   
   14000774f:	int3   
   140007750:	mov    QWORD PTR [rsp+0x8],rcx
   140007755:	sub    rsp,0x88
   14000775c:	lea    rcx,[rip+0x5a1d]        # 0x14000d180
   140007763:	call   QWORD PTR [rip+0xa97]        # 0x140008200
   140007769:	mov    rax,QWORD PTR [rip+0x5b08]        # 0x14000d278
   140007770:	mov    QWORD PTR [rsp+0x48],rax
   140007775:	xor    r8d,r8d
   140007778:	lea    rdx,[rsp+0x50]
   14000777d:	mov    rcx,QWORD PTR [rsp+0x48]
   140007782:	call   QWORD PTR [rip+0xa70]        # 0x1400081f8
   140007788:	mov    QWORD PTR [rsp+0x40],rax
   14000778d:	cmp    QWORD PTR [rsp+0x40],0x0
   140007793:	je     0x1400077d7
   140007795:	mov    QWORD PTR [rsp+0x38],0x0
   14000779e:	lea    rax,[rsp+0x58]
   1400077a3:	mov    QWORD PTR [rsp+0x30],rax
   1400077a8:	lea    rax,[rsp+0x60]
   1400077ad:	mov    QWORD PTR [rsp+0x28],rax
   1400077b2:	lea    rax,[rip+0x59c7]        # 0x14000d180
   1400077b9:	mov    QWORD PTR [rsp+0x20],rax
   1400077be:	mov    r9,QWORD PTR [rsp+0x40]
   1400077c3:	mov    r8,QWORD PTR [rsp+0x48]
   1400077c8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400077cd:	xor    ecx,ecx
   1400077cf:	call   QWORD PTR [rip+0xa1b]        # 0x1400081f0
   1400077d5:	jmp    0x1400077fa
   1400077d7:	mov    rax,QWORD PTR [rip+0x5a3a]        # 0x14000d218
   1400077de:	mov    rax,QWORD PTR [rax]
   1400077e1:	mov    QWORD PTR [rip+0x5a90],rax        # 0x14000d278
   1400077e8:	mov    rax,QWORD PTR [rip+0x5a29]        # 0x14000d218
   1400077ef:	add    rax,0x8
   1400077f3:	mov    QWORD PTR [rip+0x5a1e],rax        # 0x14000d218
   1400077fa:	mov    rax,QWORD PTR [rip+0x5a77]        # 0x14000d278
   140007801:	mov    QWORD PTR [rip+0x58e8],rax        # 0x14000d0f0
   140007808:	mov    rax,QWORD PTR [rsp+0x90]
   140007810:	mov    QWORD PTR [rip+0x59e9],rax        # 0x14000d200
   140007817:	mov    DWORD PTR [rip+0x58bf],0xc0000409        # 0x14000d0e0
   140007821:	mov    DWORD PTR [rip+0x58b9],0x1        # 0x14000d0e4
   14000782b:	mov    DWORD PTR [rip+0x58c3],0x3        # 0x14000d0f8
   140007835:	mov    eax,0x8
   14000783a:	imul   rax,rax,0x0
   14000783e:	lea    rcx,[rip+0x58bb]        # 0x14000d100
   140007845:	mov    QWORD PTR [rcx+rax*1],0x2
   14000784d:	mov    eax,0x8
   140007852:	imul   rax,rax,0x1
   140007856:	lea    rcx,[rip+0x58a3]        # 0x14000d100
   14000785d:	mov    rdx,QWORD PTR [rip+0x57a4]        # 0x14000d008
   140007864:	mov    QWORD PTR [rcx+rax*1],rdx
   140007868:	mov    eax,0x8
   14000786d:	imul   rax,rax,0x2
   140007871:	lea    rcx,[rip+0x5888]        # 0x14000d100
   140007878:	mov    rdx,QWORD PTR [rip+0x5791]        # 0x14000d010
   14000787f:	mov    QWORD PTR [rcx+rax*1],rdx
   140007883:	mov    eax,0x8
   140007888:	imul   rax,rax,0x0
   14000788c:	mov    rcx,QWORD PTR [rip+0x5775]        # 0x14000d008
   140007893:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007898:	mov    eax,0x8
   14000789d:	imul   rax,rax,0x1
   1400078a1:	mov    rcx,QWORD PTR [rip+0x5768]        # 0x14000d010
   1400078a8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400078ad:	lea    rcx,[rip+0xd0c]        # 0x1400085c0
   1400078b4:	call   0x140007714
   1400078b9:	add    rsp,0x88
   1400078c0:	ret    
   1400078c1:	int3   
   1400078c2:	int3   
   1400078c3:	int3   
   1400078c4:	int3   
   1400078c5:	int3   
   1400078c6:	int3   
   1400078c7:	int3   
   1400078c8:	int3   
   1400078c9:	int3   
   1400078ca:	int3   
   1400078cb:	int3   
   1400078cc:	int3   
   1400078cd:	int3   
   1400078ce:	int3   
   1400078cf:	int3   
   1400078d0:	sub    rsp,0x28
   1400078d4:	mov    rax,QWORD PTR [rcx]
   1400078d7:	cmp    DWORD PTR [rax],0xe06d7363
   1400078dd:	jne    0x140007902
   1400078df:	cmp    DWORD PTR [rax+0x18],0x4
   1400078e3:	jne    0x140007902
   1400078e5:	mov    ecx,DWORD PTR [rax+0x20]
   1400078e8:	lea    eax,[rcx-0x19930520]
   1400078ee:	cmp    eax,0x2
   1400078f1:	jbe    0x1400078fb
   1400078f3:	cmp    ecx,0x1994000
   1400078f9:	jne    0x140007902
   1400078fb:	call   QWORD PTR [rip+0xb7f]        # 0x140008480
   140007901:	int3   
   140007902:	xor    eax,eax
   140007904:	add    rsp,0x28
   140007908:	ret    
   140007909:	int3   
   14000790a:	int3   
   14000790b:	int3   
   14000790c:	int3   
   14000790d:	int3   
   14000790e:	int3   
   14000790f:	int3   
   140007910:	sub    rsp,0x28
   140007914:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400078d0
   14000791b:	call   QWORD PTR [rip+0x8bf]        # 0x1400081e0
   140007921:	xor    eax,eax
   140007923:	add    rsp,0x28
   140007927:	ret    
   140007928:	int3   
   140007929:	int3   
   14000792a:	int3   
   14000792b:	int3   
   14000792c:	int3   
   14000792d:	int3   
   14000792e:	jmp    QWORD PTR [rip+0xb84]        # 0x1400084b8
   140007934:	int3   
   140007935:	int3   
   140007936:	int3   
   140007937:	int3   
   140007938:	int3   
   140007939:	int3   
   14000793a:	int3   
   14000793b:	int3   
   14000793c:	sub    rsp,0x18
   140007940:	xor    edx,edx
   140007942:	lea    rax,[rcx-0x1]
   140007946:	cmp    rax,0xfffffffffffffffd
   14000794a:	ja     0x140007988
   14000794c:	mov    eax,0x5a4d
   140007951:	cmp    WORD PTR [rcx],ax
   140007954:	jne    0x140007980
   140007956:	cmp    DWORD PTR [rcx+0x3c],edx
   140007959:	jl     0x140007980
   14000795b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140007962:	jae    0x140007980
   140007964:	movsxd rax,DWORD PTR [rcx+0x3c]
   140007968:	add    rax,rcx
   14000796b:	mov    QWORD PTR [rsp],rax
   14000796f:	cmp    DWORD PTR [rax],0x4550
   140007975:	cmovne rax,rdx
   140007979:	mov    rdx,rax
   14000797c:	mov    QWORD PTR [rsp],rax
   140007980:	jmp    0x140007988
   140007982:	xor    edx,edx
   140007984:	mov    QWORD PTR [rsp],rdx
   140007988:	mov    rax,rdx
   14000798b:	add    rsp,0x18
   14000798f:	ret    
   140007990:	int3   
   140007991:	int3   
   140007992:	int3   
   140007993:	int3   
   140007994:	int3   
   140007995:	int3   
   140007996:	int3   
   140007997:	int3   
   140007998:	rex push rbx
   14000799a:	sub    rsp,0x20
   14000799e:	mov    ebx,ecx
   1400079a0:	xor    ecx,ecx
   1400079a2:	call   QWORD PTR [rip+0x820]        # 0x1400081c8
   1400079a8:	test   rax,rax
   1400079ab:	je     0x1400079d5
   1400079ad:	mov    rcx,rax
   1400079b0:	call   0x14000793c
   1400079b5:	test   rax,rax
   1400079b8:	je     0x1400079d5
   1400079ba:	mov    ecx,0x2
   1400079bf:	cmp    WORD PTR [rax+0x5c],cx
   1400079c3:	jne    0x1400079c9
   1400079c5:	mov    eax,ecx
   1400079c7:	jmp    0x1400079d7
   1400079c9:	cmp    WORD PTR [rax+0x5c],0x3
   1400079ce:	mov    eax,0x1
   1400079d3:	je     0x1400079d7
   1400079d5:	mov    eax,ebx
   1400079d7:	add    rsp,0x20
   1400079db:	pop    rbx
   1400079dc:	ret    
   1400079dd:	int3   
   1400079de:	int3   
   1400079df:	int3   
   1400079e0:	int3   
   1400079e1:	int3   
   1400079e2:	int3   
   1400079e3:	int3   
   1400079e4:	jmp    QWORD PTR [rip+0xa8e]        # 0x140008478
   1400079ea:	int3   
   1400079eb:	int3   
   1400079ec:	int3   
   1400079ed:	int3   
   1400079ee:	int3   
   1400079ef:	int3   
   1400079f0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400079f4:	xor    r9d,r9d
   1400079f7:	add    r8,rcx
   1400079fa:	mov    r10,rdx
   1400079fd:	movzx  eax,WORD PTR [r8+0x14]
   140007a02:	movzx  r11d,WORD PTR [r8+0x6]
   140007a07:	add    rax,0x18
   140007a0b:	add    rax,r8
   140007a0e:	test   r11d,r11d
   140007a11:	je     0x140007a31
   140007a13:	mov    edx,DWORD PTR [rax+0xc]
   140007a16:	cmp    r10,rdx
   140007a19:	jb     0x140007a25
   140007a1b:	mov    ecx,DWORD PTR [rax+0x8]
   140007a1e:	add    ecx,edx
   140007a20:	cmp    r10,rcx
   140007a23:	jb     0x140007a33
   140007a25:	inc    r9d
   140007a28:	add    rax,0x28
   140007a2c:	cmp    r9d,r11d
   140007a2f:	jb     0x140007a13
   140007a31:	xor    eax,eax
   140007a33:	ret    
   140007a34:	int3   
   140007a35:	int3   
   140007a36:	int3   
   140007a37:	int3   
   140007a38:	int3   
   140007a39:	int3   
   140007a3a:	int3   
   140007a3b:	int3   
   140007a3c:	int3   
   140007a3d:	int3   
   140007a3e:	int3   
   140007a3f:	int3   
   140007a40:	mov    QWORD PTR [rsp+0x8],rbx
   140007a45:	push   rdi
   140007a46:	sub    rsp,0x20
   140007a4a:	mov    rbx,rcx
   140007a4d:	lea    rdi,[rip+0xffffffffffff85ac]        # 0x140000000
   140007a54:	mov    rcx,rdi
   140007a57:	call   0x140007aa0
   140007a5c:	test   eax,eax
   140007a5e:	je     0x140007a82
   140007a60:	sub    rbx,rdi
   140007a63:	mov    rdx,rbx
   140007a66:	mov    rcx,rdi
   140007a69:	call   0x1400079f0
   140007a6e:	test   rax,rax
   140007a71:	je     0x140007a82
   140007a73:	mov    eax,DWORD PTR [rax+0x24]
   140007a76:	shr    eax,0x1f
   140007a79:	not    eax
   140007a7b:	and    eax,0x1
   140007a7e:	jmp    0x140007a82
   140007a80:	xor    eax,eax
   140007a82:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a87:	add    rsp,0x20
   140007a8b:	pop    rdi
   140007a8c:	ret    
   140007a8d:	int3   
   140007a8e:	int3   
   140007a8f:	int3   
   140007a90:	int3   
   140007a91:	int3   
   140007a92:	int3   
   140007a93:	int3   
   140007a94:	int3   
   140007a95:	int3   
   140007a96:	int3   
   140007a97:	int3   
   140007a98:	int3   
   140007a99:	int3   
   140007a9a:	int3   
   140007a9b:	int3   
   140007a9c:	int3   
   140007a9d:	int3   
   140007a9e:	int3   
   140007a9f:	int3   
   140007aa0:	mov    rax,rcx
   140007aa3:	mov    ecx,0x5a4d
   140007aa8:	cmp    WORD PTR [rax],cx
   140007aab:	je     0x140007ab0
   140007aad:	xor    eax,eax
   140007aaf:	ret    
   140007ab0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140007ab4:	add    rcx,rax
   140007ab7:	xor    eax,eax
   140007ab9:	cmp    DWORD PTR [rcx],0x4550
   140007abf:	jne    0x140007acd
   140007ac1:	mov    edx,0x20b
   140007ac6:	cmp    WORD PTR [rcx+0x18],dx
   140007aca:	sete   al
   140007acd:	ret    
   140007ace:	int3   
   140007acf:	int3   
   140007ad0:	int3   
   140007ad1:	int3   
   140007ad2:	int3   
   140007ad3:	int3   
   140007ad4:	mov    QWORD PTR [rsp+0x20],rbx
   140007ad9:	push   rbp
   140007ada:	mov    rbp,rsp
   140007add:	sub    rsp,0x20
   140007ae1:	and    QWORD PTR [rbp+0x18],0x0
   140007ae6:	movabs rbx,0x2b992ddfa232
   140007af0:	mov    rax,QWORD PTR [rip+0x5511]        # 0x14000d008
   140007af7:	cmp    rax,rbx
   140007afa:	jne    0x140007b8f
   140007b00:	lea    rcx,[rbp+0x18]
   140007b04:	call   QWORD PTR [rip+0x6a6]        # 0x1400081b0
   140007b0a:	mov    rax,QWORD PTR [rbp+0x18]
   140007b0e:	mov    QWORD PTR [rbp+0x10],rax
   140007b12:	call   QWORD PTR [rip+0x648]        # 0x140008160
   140007b18:	mov    eax,eax
   140007b1a:	xor    QWORD PTR [rbp+0x10],rax
   140007b1e:	call   QWORD PTR [rip+0x694]        # 0x1400081b8
   140007b24:	mov    eax,eax
   140007b26:	xor    QWORD PTR [rbp+0x10],rax
   140007b2a:	call   QWORD PTR [rip+0x588]        # 0x1400080b8
   140007b30:	mov    eax,eax
   140007b32:	shl    rax,0x18
   140007b36:	xor    QWORD PTR [rbp+0x10],rax
   140007b3a:	call   QWORD PTR [rip+0x578]        # 0x1400080b8
   140007b40:	mov    eax,eax
   140007b42:	lea    rcx,[rbp+0x10]
   140007b46:	xor    rax,QWORD PTR [rbp+0x10]
   140007b4a:	xor    rax,rcx
   140007b4d:	lea    rcx,[rbp+0x20]
   140007b51:	mov    QWORD PTR [rbp+0x10],rax
   140007b55:	call   QWORD PTR [rip+0x665]        # 0x1400081c0
   140007b5b:	mov    eax,DWORD PTR [rbp+0x20]
   140007b5e:	movabs rcx,0xffffffffffff
   140007b68:	shl    rax,0x20
   140007b6c:	xor    rax,QWORD PTR [rbp+0x20]
   140007b70:	xor    rax,QWORD PTR [rbp+0x10]
   140007b74:	and    rax,rcx
   140007b77:	movabs rcx,0x2b992ddfa233
   140007b81:	cmp    rax,rbx
   140007b84:	cmove  rax,rcx
   140007b88:	mov    QWORD PTR [rip+0x5479],rax        # 0x14000d008
   140007b8f:	mov    rbx,QWORD PTR [rsp+0x48]
   140007b94:	not    rax
   140007b97:	mov    QWORD PTR [rip+0x5472],rax        # 0x14000d010
   140007b9e:	add    rsp,0x20
   140007ba2:	pop    rbp
   140007ba3:	ret    
   140007ba4:	int3   
   140007ba5:	int3   
   140007ba6:	int3   
   140007ba7:	int3   
   140007ba8:	int3   
   140007ba9:	int3   
   140007baa:	jmp    QWORD PTR [rip+0x8f8]        # 0x1400084a8
   140007bb0:	int3   
   140007bb1:	int3   
   140007bb2:	int3   
   140007bb3:	int3   
   140007bb4:	int3   
   140007bb5:	int3   
   140007bb6:	jmp    QWORD PTR [rip+0x8e4]        # 0x1400084a0
   140007bbc:	int3   
   140007bbd:	int3   
   140007bbe:	int3   
   140007bbf:	int3   
   140007bc0:	int3   
   140007bc1:	int3   
   140007bc2:	int3   
   140007bc3:	int3   
   140007bc4:	int3   
   140007bc5:	int3   
   140007bc6:	int3   
   140007bc7:	int3   
   140007bc8:	int3   
   140007bc9:	int3   
   140007bca:	int3   
   140007bcb:	int3   
   140007bcc:	int3   
   140007bcd:	int3   
   140007bce:	int3   
   140007bcf:	int3   
   140007bd0:	ret    0x0
   140007bd3:	int3   
   140007bd4:	int3   
   140007bd5:	int3   
   140007bd6:	int3   
   140007bd7:	int3   
   140007bd8:	int3   
   140007bd9:	int3   
   140007bda:	int3   
   140007bdb:	int3   
   140007bdc:	int3   
   140007bdd:	int3   
   140007bde:	int3   
   140007bdf:	int3   
   140007be0:	int3   
   140007be1:	int3   
   140007be2:	int3   
   140007be3:	int3   
   140007be4:	int3   
   140007be5:	int3   
   140007be6:	int3   
   140007be7:	int3   
   140007be8:	sub    rsp,0x28
   140007bec:	mov    r8,QWORD PTR [r9+0x38]
   140007bf0:	mov    rcx,rdx
   140007bf3:	mov    rdx,r9
   140007bf6:	call   0x140007c0c
   140007bfb:	mov    eax,0x1
   140007c00:	add    rsp,0x28
   140007c04:	ret    
   140007c05:	int3   
   140007c06:	int3   
   140007c07:	int3   
   140007c08:	int3   
   140007c09:	int3   
   140007c0a:	int3   
   140007c0b:	int3   
   140007c0c:	rex push rbx
   140007c0e:	sub    rsp,0x20
   140007c12:	mov    r11d,DWORD PTR [r8]
   140007c15:	mov    rbx,rdx
   140007c18:	and    r11d,0xfffffff8
   140007c1c:	mov    r9,rcx
   140007c1f:	test   BYTE PTR [r8],0x4
   140007c23:	mov    r10,rcx
   140007c26:	je     0x140007c3b
   140007c28:	mov    eax,DWORD PTR [r8+0x8]
   140007c2c:	movsxd r10,DWORD PTR [r8+0x4]
   140007c30:	neg    eax
   140007c32:	add    r10,rcx
   140007c35:	movsxd rcx,eax
   140007c38:	and    r10,rcx
   140007c3b:	movsxd rax,r11d
   140007c3e:	mov    rdx,QWORD PTR [rax+r10*1]
   140007c42:	mov    rax,QWORD PTR [rbx+0x10]
   140007c46:	mov    ecx,DWORD PTR [rax+0x8]
   140007c49:	add    rcx,QWORD PTR [rbx+0x8]
   140007c4d:	test   BYTE PTR [rcx+0x3],0xf
   140007c51:	je     0x140007c5f
   140007c53:	movzx  eax,BYTE PTR [rcx+0x3]
   140007c57:	and    eax,0xfffffff0
   140007c5a:	cdqe   
   140007c5c:	add    r9,rax
   140007c5f:	xor    r9,rdx
   140007c62:	mov    rcx,r9
   140007c65:	add    rsp,0x20
   140007c69:	pop    rbx
   140007c6a:	jmp    0x1400076f0
   140007c6f:	int3   
   140007c70:	int3   
   140007c71:	int3   
   140007c72:	int3   
   140007c73:	int3   
   140007c74:	int3   
   140007c75:	int3   
   140007c76:	jmp    QWORD PTR [rip+0x87c]        # 0x1400084f8
   140007c7c:	int3   
   140007c7d:	int3   
   140007c7e:	int3   
   140007c7f:	int3   
   140007c80:	int3   
   140007c81:	int3   
   140007c82:	int3   
   140007c83:	int3   
   140007c84:	int3   
   140007c85:	int3   
   140007c86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007c90:	jmp    rax
   140007c92:	int3   
   140007c93:	int3   
   140007c94:	int3   
   140007c95:	int3   
   140007c96:	int3   
   140007c97:	int3   
   140007c98:	int3   
   140007c99:	int3   
   140007c9a:	int3   
   140007c9b:	int3   
   140007c9c:	int3   
   140007c9d:	int3   
   140007c9e:	int3   
   140007c9f:	int3   
   140007ca0:	int3   
   140007ca1:	int3   
   140007ca2:	int3   
   140007ca3:	int3   
   140007ca4:	int3   
   140007ca5:	int3   
   140007ca6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007cb0:	sub    rsp,0x10
   140007cb4:	mov    QWORD PTR [rsp],r10
   140007cb8:	mov    QWORD PTR [rsp+0x8],r11
   140007cbd:	xor    r11,r11
   140007cc0:	lea    r10,[rsp+0x18]
   140007cc5:	sub    r10,rax
   140007cc8:	cmovb  r10,r11
   140007ccc:	mov    r11,QWORD PTR gs:0x10
   140007cd5:	cmp    r10,r11
   140007cd8:	jae    0x140007cef
   140007cda:	and    r10w,0xf000
   140007ce0:	lea    r11,[r11-0x1000]
   140007ce7:	test   BYTE PTR [r11],r11b
   140007cea:	cmp    r10,r11
   140007ced:	jne    0x140007ce0
   140007cef:	mov    r10,QWORD PTR [rsp]
   140007cf3:	mov    r11,QWORD PTR [rsp+0x8]
   140007cf8:	add    rsp,0x10
   140007cfc:	ret    
   140007cfd:	int3   
   140007cfe:	int3   
   140007cff:	int3   
   140007d00:	int3   
   140007d01:	int3   
   140007d02:	int3   
   140007d03:	int3   
   140007d04:	int3   
   140007d05:	int3   
   140007d06:	rex push rbp
   140007d08:	sub    rsp,0x20
   140007d0c:	mov    rbp,rdx
   140007d0f:	mov    rax,QWORD PTR [rcx]
   140007d12:	mov    rdx,rcx
   140007d15:	mov    ecx,DWORD PTR [rax]
   140007d17:	call   0x14000792e
   140007d1c:	nop
   140007d1d:	add    rsp,0x20
   140007d21:	pop    rbp
   140007d22:	ret    
   140007d23:	int3   
   140007d24:	int3   
   140007d25:	int3   
   140007d26:	int3   
   140007d27:	int3   
   140007d28:	int3   
   140007d29:	int3   
   140007d2a:	int3   
   140007d2b:	int3   
   140007d2c:	int3   
   140007d2d:	int3   
   140007d2e:	int3   
   140007d2f:	int3   
   140007d30:	rex push rbp
   140007d32:	sub    rsp,0x20
   140007d36:	mov    rbp,rdx
   140007d39:	mov    rax,QWORD PTR [rcx]
   140007d3c:	xor    ecx,ecx
   140007d3e:	cmp    DWORD PTR [rax],0xc0000005
   140007d44:	sete   cl
   140007d47:	mov    eax,ecx
   140007d49:	add    rsp,0x20
   140007d4d:	pop    rbp
   140007d4e:	ret    
   140007d4f:	int3   

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	in     al,0xb8
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	hlt    
   140008009:	mov    eax,0x0
   14000800e:	add    BYTE PTR [rax],al
   140008010:	sar    BYTE PTR [rax+0x0],1
	...
   14000801e:	add    BYTE PTR [rax],al
   140008020:	adc    DWORD PTR [rax],eax
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax+0x0],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	adc    eax,0x0
   140008035:	add    BYTE PTR [rax],al
   140008037:	adc    BYTE PTR [rsi],0x0
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax+0x14],al
   140008044:	add    BYTE PTR [rax],al
   140008046:	add    BYTE PTR [rax+0x17],al
   14000804c:	add    BYTE PTR [rax],al
   14000804e:	add    BYTE PTR [rax+0x0],al
   140008054:	add    BYTE PTR [rax],al
   140008056:	add    BYTE PTR [rax],al
   140008058:	jp     0x140008013
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	add    BYTE PTR [rax],al
   14000805e:	add    BYTE PTR [rax],al
   140008060:	mov    bh,BYTE PTR [rcx+0x0]
   140008066:	add    BYTE PTR [rax],al
   140008068:	(bad)  
   140008069:	mov    ecx,0x0
   14000806e:	add    BYTE PTR [rax],al
   140008070:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008071:	mov    ecx,0x0
   140008076:	add    BYTE PTR [rax],al
   140008078:	mov    esp,0xb9
   14000807d:	add    BYTE PTR [rax],al
   14000807f:	add    al,dl
   140008081:	mov    ecx,0x0
   140008086:	add    BYTE PTR [rax],al
   140008088:	fidivr WORD PTR [rcx+0x0]
   14000808e:	add    BYTE PTR [rax],al
   140008090:	out    dx,al
   140008091:	mov    ecx,0x0
   140008096:	add    BYTE PTR [rax],al
   140008098:	or     BYTE PTR [rdx+0x0],bh
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	adc    al,0xba
   1400080a2:	add    BYTE PTR [rax],al
   1400080a4:	add    BYTE PTR [rax],al
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	and    bh,BYTE PTR [rdx+0x0]
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	cmp    BYTE PTR [rdx+0x0],bh
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	rex.R mov edx,0x0
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	push   rsp
   1400080c1:	mov    edx,0x0
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	mov    dx,0x0
   1400080cc:	add    BYTE PTR [rax],al
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	jle    0x14000808c
   1400080d2:	add    BYTE PTR [rax],al
   1400080d4:	add    BYTE PTR [rax],al
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	xchg   BYTE PTR [rdx+0x0],bh
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	xchg   esi,eax
   1400080e1:	mov    edx,0x0
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	movabs ds:0xb6000000000000ba,al
   1400080f1:	mov    edx,0x0
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	(bad)  
   1400080f9:	mov    edx,0x0
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	loopne 0x1400080bc
   140008102:	add    BYTE PTR [rax],al
   140008104:	add    BYTE PTR [rax],al
   140008106:	add    BYTE PTR [rax],al
   140008108:	repnz mov edx,0x0
   14000810e:	add    BYTE PTR [rax],al
   140008110:	(bad)  
   140008111:	mov    ebx,0x0
   140008116:	add    BYTE PTR [rax],al
   140008118:	adc    bh,BYTE PTR [rbx+0x0]
   14000811e:	add    BYTE PTR [rax],al
   140008120:	(bad)  
   140008121:	mov    ebx,0x0
   140008126:	add    BYTE PTR [rax],al
   140008128:	cmp    bh,BYTE PTR [rbx+0x0]
   14000812e:	add    BYTE PTR [rax],al
   140008130:	sub    BYTE PTR [rcx+0x0],bh
   140008136:	add    BYTE PTR [rax],al
   140008138:	push   0xbb
   14000813d:	add    BYTE PTR [rax],al
   14000813f:	add    BYTE PTR [rsi-0x47],ch
   140008142:	add    BYTE PTR [rax],al
   140008144:	add    BYTE PTR [rax],al
   140008146:	add    BYTE PTR [rax],al
   140008148:	nop
   140008149:	mov    ebx,0x0
   14000814e:	add    BYTE PTR [rax],al
   140008150:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008151:	mov    ebx,0x0
   140008156:	add    BYTE PTR [rax],al
   140008158:	mov    dh,0xbb
   14000815a:	add    BYTE PTR [rax],al
   14000815c:	add    BYTE PTR [rax],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	(bad)  
   140008161:	mov    ebx,0x0
   140008166:	add    BYTE PTR [rax],al
   140008168:	fdivr  QWORD PTR [rbx+0x0]
   14000816e:	add    BYTE PTR [rax],al
   140008170:	(bad)  
   140008171:	mov    ebx,0x0
   140008176:	add    BYTE PTR [rax],al
   140008178:	cli    
   140008179:	mov    ebx,0x0
   14000817e:	add    BYTE PTR [rax],al
   140008180:	or     BYTE PTR [rax+rax*1+0x0],bh
   140008187:	add    BYTE PTR [rsp+rdi*4],ah
   14000818a:	add    BYTE PTR [rax],al
   14000818c:	add    BYTE PTR [rax],al
   14000818e:	add    BYTE PTR [rax],al
   140008190:	xor    al,0xbc
   140008192:	add    BYTE PTR [rax],al
   140008194:	add    BYTE PTR [rax],al
   140008196:	add    BYTE PTR [rax],al
   140008198:	rex.R mov esp,0x0
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	push   rdx
   1400081a1:	mov    esp,0x0
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	bnd ret 
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	add    BYTE PTR [rax],al
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	fadd   st,st(3)
   1400081b2:	add    BYTE PTR [rax],al
   1400081b4:	add    BYTE PTR [rax],al
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	ret    0xc3
   1400081bb:	add    BYTE PTR [rax],al
   1400081bd:	add    BYTE PTR [rax],al
   1400081bf:	add    BYTE PTR [rax+0xc3],ch
   1400081c5:	add    BYTE PTR [rax],al
   1400081c7:	add    BYTE PTR [rbx+rax*8+0x0],dl
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	add    bl,0x0
   1400081d3:	add    BYTE PTR [rax],al
   1400081d5:	add    BYTE PTR [rax],al
   1400081d7:	add    BYTE PTR [rbx+rax*8+0x0],ch
   1400081db:	add    BYTE PTR [rax],al
   1400081dd:	add    BYTE PTR [rax],al
   1400081df:	add    BYTE PTR [rsi-0x3d],cl
   1400081e2:	add    BYTE PTR [rax],al
   1400081e4:	add    BYTE PTR [rax],al
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	xor    al,bl
   1400081ea:	add    BYTE PTR [rax],al
   1400081ec:	add    BYTE PTR [rax],al
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	(bad)  
   1400081f1:	ret    
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	add    BYTE PTR [rax],al
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	add    al,0xc3
   1400081fa:	add    BYTE PTR [rax],al
   1400081fc:	add    BYTE PTR [rax],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	lock ret 0x0
   140008204:	add    BYTE PTR [rax],al
   140008206:	add    BYTE PTR [rax],al
   140008208:	faddp  st(2),st
   14000820a:	add    BYTE PTR [rax],al
   14000820c:	add    BYTE PTR [rax],al
   14000820e:	add    BYTE PTR [rax],al
   140008210:	(bad)  
   140008211:	mov    ecx,0x0
   140008216:	add    BYTE PTR [rax],al
   140008218:	push   rsp
   140008219:	mov    ecx,0x0
   14000821e:	add    BYTE PTR [rax],al
   140008220:	movabs rcx,0xbb80000000000000
   14000822a:	add    BYTE PTR [rax],al
   14000822c:	add    BYTE PTR [rax],al
   14000822e:	add    BYTE PTR [rax],al
   140008230:	ss mov ecx,0x0
   140008236:	add    BYTE PTR [rax],al
   140008238:	adc    BYTE PTR [rcx+0x0],bh
   14000823e:	add    BYTE PTR [rax],al
   140008240:	pop    rax
   140008241:	mov    ebx,0x0
   140008246:	add    BYTE PTR [rax],al
   140008248:	add    al,ah
	...
   140008256:	add    BYTE PTR [rax],al
   140008258:	jbe    0x14000821b
	...
   140008266:	add    BYTE PTR [rax],al
   140008268:	xchg   esp,eax
   140008269:	mov    esp,0x0
   14000826e:	add    BYTE PTR [rax],al
   140008270:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008271:	mov    esp,0x0
   140008276:	add    BYTE PTR [rax],al
   140008278:	mov    eax,0xbc
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    dl,cl
   140008281:	mov    esp,0x0
   140008286:	add    BYTE PTR [rax],al
   140008288:	fidivr WORD PTR [rax+rax*1+0x0]
   14000828f:	add    dh,dh
   140008291:	mov    esp,0x0
   140008296:	add    BYTE PTR [rax],al
   140008298:	(bad)  
   140008299:	mov    ebp,0x0
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	sbb    bh,BYTE PTR [rbp+0x0]
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	sub    BYTE PTR [rbp+0x0],bh
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	(bad)  
   1400082b1:	mov    esp,0x0
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	rex.RX mov ebp,0x0
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	(bad)  
   1400082c1:	mov    ebp,0x0
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	ins    BYTE PTR es:[rdi],dx
   1400082c9:	mov    ebp,0x0
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	js     0x14000828f
   1400082d2:	add    BYTE PTR [rax],al
   1400082d4:	add    BYTE PTR [rax],al
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	fdivr  DWORD PTR [rbp+0x0]
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	enter  0xbd,0x0
   1400082e4:	add    BYTE PTR [rax],al
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	mov    ah,0xbd
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	movabs al,ds:0x8a000000000000bd
   1400082f9:	mov    ebp,0x0
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	xor    al,0xbd
   140008302:	add    BYTE PTR [rax],al
   140008304:	add    BYTE PTR [rax],al
   140008306:	add    BYTE PTR [rax],al
   140008308:	je     0x1400082c6
	...
   140008316:	add    BYTE PTR [rax],al
   140008318:	retf   0xc1
   14000831b:	add    BYTE PTR [rax],al
   14000831d:	add    BYTE PTR [rax],al
   14000831f:	add    BYTE PTR [rcx+rax*8+0x0],dh
   140008326:	add    BYTE PTR [rax],al
   140008328:	(bad)  
   140008329:	rol    DWORD PTR [rax],0x0
   14000832c:	add    BYTE PTR [rax],al
   14000832e:	add    BYTE PTR [rax],al
   140008330:	fadd   st(1),st
   140008332:	add    BYTE PTR [rax],al
   140008334:	add    BYTE PTR [rax],al
   140008336:	add    BYTE PTR [rax],al
   140008338:	repnz rol DWORD PTR [rax],0x0
   14000833c:	add    BYTE PTR [rax],al
   14000833e:	add    BYTE PTR [rax],al
   140008340:	or     dl,al
   140008342:	add    BYTE PTR [rax],al
   140008344:	add    BYTE PTR [rax],al
   140008346:	add    BYTE PTR [rax],al
   140008348:	and    al,0xc2
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	add    BYTE PTR [rax],al
   14000834e:	add    BYTE PTR [rax],al
   140008350:	xor    al,dl
   140008352:	add    BYTE PTR [rax],al
   140008354:	add    BYTE PTR [rax],al
   140008356:	add    BYTE PTR [rax],al
   140008358:	mov    edx,0xc2
   14000835d:	add    BYTE PTR [rax],al
   14000835f:	add    BYTE PTR [rax-0x3e],cl
   140008362:	add    BYTE PTR [rax],al
   140008364:	add    BYTE PTR [rax],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	xchg   esp,eax
   140008369:	ret    0x0
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	pop    rdx
   140008371:	ret    0x0
   140008374:	add    BYTE PTR [rax],al
   140008376:	add    BYTE PTR [rax],al
   140008378:	ins    BYTE PTR es:[rdi],dx
   140008379:	ret    0x0
	...
   140008388:	fdivr  QWORD PTR [rsi+0x0]
   14000838e:	add    BYTE PTR [rax],al
   140008390:	or     BYTE PTR [rdi+0x0],bh
   140008396:	add    BYTE PTR [rax],al
   140008398:	sbb    bh,BYTE PTR [rdi+0x0]
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	xor    bh,BYTE PTR [rdi+0x0]
   1400083a6:	add    BYTE PTR [rax],al
   1400083a8:	repnz mov esi,0x0
	...
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	cli    
   1400083b9:	rol    BYTE PTR [rax],0x0
   1400083bc:	add    BYTE PTR [rax],al
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	sub    al,al
   1400083c2:	add    BYTE PTR [rax],al
   1400083c4:	add    BYTE PTR [rax],al
   1400083c6:	add    BYTE PTR [rax],al
   1400083c8:	sub    al,0xc1
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	rol    DWORD PTR ds:[rax],0x0
   1400083d4:	add    BYTE PTR [rax],al
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	or     al,0xc0
   1400083da:	add    BYTE PTR [rax],al
   1400083dc:	add    BYTE PTR [rax],al
   1400083de:	add    BYTE PTR [rax],al
   1400083e0:	loop   0x1400083a1
   1400083e2:	add    BYTE PTR [rax],al
   1400083e4:	add    BYTE PTR [rax],al
   1400083e6:	add    BYTE PTR [rax],al
   1400083e8:	in     al,dx
   1400083e9:	rol    BYTE PTR [rax],0x0
   1400083ec:	add    BYTE PTR [rax],al
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	mov    ah,0xbf
   1400083f2:	add    BYTE PTR [rax],al
   1400083f4:	add    BYTE PTR [rax],al
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	movabs ds:0x8e000000000000bf,al
   140008401:	mov    edi,0x0
   140008406:	add    BYTE PTR [rax],al
   140008408:	jl     0x1400083c9
   14000840a:	add    BYTE PTR [rax],al
   14000840c:	add    BYTE PTR [rax],al
   14000840e:	add    BYTE PTR [rax],al
   140008410:	jb     0x1400083d1
   140008412:	add    BYTE PTR [rax],al
   140008414:	add    BYTE PTR [rax],al
   140008416:	add    BYTE PTR [rax],al
   140008418:	mov    di,0x0
   14000841c:	add    BYTE PTR [rax],al
   14000841e:	add    BYTE PTR [rax],al
   140008420:	pop    rdx
   140008421:	mov    edi,0x0
   140008426:	add    BYTE PTR [rax],al
   140008428:	rex.WRX movabs rdi,0xc0d4000000000000
   140008432:	add    BYTE PTR [rax],al
   140008434:	add    BYTE PTR [rax],al
   140008436:	add    BYTE PTR [rax],al
   140008438:	mov    esp,0xc0
   14000843d:	add    BYTE PTR [rax],al
   14000843f:	add    BYTE PTR [rdx+0xc0],cl
   140008445:	add    BYTE PTR [rax],al
   140008447:	add    BYTE PTR [rax+rax*8+0x0],ah
   14000844b:	add    BYTE PTR [rax],al
   14000844d:	add    BYTE PTR [rax],al
   14000844f:	add    al,al
   140008451:	mov    edi,0x0
   140008456:	add    BYTE PTR [rax],al
   140008458:	rex.RX rol BYTE PTR [rax],0x0
   14000845c:	add    BYTE PTR [rax],al
   14000845e:	add    BYTE PTR [rax],al
   140008460:	(bad)  
   140008461:	mov    edi,0x0
   140008466:	add    BYTE PTR [rax],al
   140008468:	or     al,0xc1
	...
   140008476:	add    BYTE PTR [rax],al
   140008478:	or     al,0xbe
   14000847a:	add    BYTE PTR [rax],al
   14000847c:	add    BYTE PTR [rax],al
   14000847e:	add    BYTE PTR [rax],al
   140008480:	enter  0xbe,0x0
   140008484:	add    BYTE PTR [rax],al
   140008486:	add    BYTE PTR [rax],al
   140008488:	mov    al,0xbe
   14000848a:	add    BYTE PTR [rax],al
   14000848c:	add    BYTE PTR [rax],al
   14000848e:	add    BYTE PTR [rax],al
   140008490:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008491:	mov    esi,0x0
   140008496:	add    BYTE PTR [rax],al
   140008498:	pushf  
   140008499:	mov    esi,0x0
   14000849e:	add    BYTE PTR [rax],al
   1400084a0:	test   BYTE PTR [rsi+0x0],bh
   1400084a6:	add    BYTE PTR [rax],al
   1400084a8:	js     0x140008468
   1400084aa:	add    BYTE PTR [rax],al
   1400084ac:	add    BYTE PTR [rax],al
   1400084ae:	add    BYTE PTR [rax],al
   1400084b0:	fs mov esi,0x0
   1400084b6:	add    BYTE PTR [rax],al
   1400084b8:	(bad)  
   1400084b9:	mov    ebp,0x0
   1400084be:	add    BYTE PTR [rax],al
   1400084c0:	rex.WR movabs rsi,0xbe44000000000000
   1400084ca:	add    BYTE PTR [rax],al
   1400084cc:	add    BYTE PTR [rax],al
   1400084ce:	add    BYTE PTR [rax],al
   1400084d0:	cmp    al,0xbe
   1400084d2:	add    BYTE PTR [rax],al
   1400084d4:	add    BYTE PTR [rax],al
   1400084d6:	add    BYTE PTR [rax],al
   1400084d8:	sub    bh,BYTE PTR [rsi+0x0]
   1400084de:	add    BYTE PTR [rax],al
   1400084e0:	sbb    bh,BYTE PTR [rsi+0x0]
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	lock mov ebp,0x0
   1400084ee:	add    BYTE PTR [rax],al
   1400084f0:	push   rsi
   1400084f1:	mov    esi,0x0
   1400084f6:	add    BYTE PTR [rax],al
   1400084f8:	adc    al,0xc4
	...
   140008506:	add    BYTE PTR [rax],al
   140008508:	sar    BYTE PTR [rbx+0x0],1
   14000850b:	rex add DWORD PTR [rax],eax
   14000850e:	add    BYTE PTR [rax],al
   140008510:	nop
   140008511:	jl     0x140008513
   140008513:	rex add DWORD PTR [rax],eax
	...
   14000851e:	add    BYTE PTR [rax],al
   140008520:	and    BYTE PTR [rax+rax*1+0x40],dh
   140008524:	add    DWORD PTR [rax],eax
	...
   140008536:	add    BYTE PTR [rax],al
   140008538:	rex jae 0x14000853b
   14000853b:	rex add DWORD PTR [rax],eax
   14000853e:	add    BYTE PTR [rax],al
   140008540:	adc    BYTE PTR [rcx+0x0],bh
   140008543:	rex add DWORD PTR [rax],eax
	...
   14000854e:	add    BYTE PTR [rax],al
   140008550:	nop
   140008551:	adc    BYTE PTR [rax],al
   140008553:	add    al,al
   140008555:	adc    BYTE PTR [rax],al
   140008557:	add    al,dl
   140008559:	adc    BYTE PTR [rax],al
   14000855b:	add    al,ah
   14000855d:	adc    BYTE PTR [rax],al
   14000855f:	add    al,dh
   140008561:	adc    DWORD PTR [rax],eax
   140008563:	add    BYTE PTR [rax+0x12],al
   140008566:	add    BYTE PTR [rax],al
   140008568:	nop
   140008569:	adc    al,BYTE PTR [rax]
   14000856b:	add    al,ah
   14000856d:	adc    al,BYTE PTR [rax]
   14000856f:	add    BYTE PTR [rax],dh
   140008571:	adc    eax,DWORD PTR [rax]
   140008573:	add    BYTE PTR [rax+0x13],al
   140008576:	add    BYTE PTR [rax],al
   140008578:	push   rax
   140008579:	adc    eax,DWORD PTR [rax]
   14000857b:	add    BYTE PTR [rax+0x13],ah
   14000857e:	add    BYTE PTR [rax],al
   140008580:	loopne 0x140008597
   140008582:	add    BYTE PTR [rax],al
   140008584:	rex (bad) 
   140008586:	add    BYTE PTR [rax],al
   140008588:	movabs al,ds:0x7000001700000016
   140008591:	(bad)  
   140008592:	add    BYTE PTR [rax],al
   140008594:	sub    BYTE PTR [rsi],0x0
   140008597:	add    BYTE PTR [rax+0x7000003a],al
   14000859d:	add    BYTE PTR [r8],al
   1400085a0:	mov    al,0x49
   1400085a2:	add    BYTE PTR [rax],al
   1400085a4:	rex jae 0x1400085a7
   1400085a7:	add    BYTE PTR [rax],ah
   1400085a9:	je     0x1400085ab
   1400085ab:	add    BYTE PTR [rax+0x74],dh
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	push   rax
   1400085b1:	ja     0x1400085b3
   1400085b3:	add    al,dl
   1400085b5:	js     0x1400085b7
   1400085b7:	add    BYTE PTR [rax],dl
   1400085b9:	jns    0x1400085bb
   1400085bb:	add    al,dl
   1400085bd:	jnp    0x1400085bf
   1400085bf:	add    al,ah
   1400085c1:	rol    BYTE PTR [rax],1
   1400085c3:	rex add DWORD PTR [rax],eax
   1400085c6:	add    BYTE PTR [rax],al
   1400085c8:	adc    cl,0x0
   1400085cb:	rex add DWORD PTR [rax],eax
   1400085ce:	add    BYTE PTR [rax],al
   1400085d0:	push   rax
   1400085d1:	rex.X
   1400085d2:	rex.WXB add BYTE PTR [r8],al
   1400085d5:	add    BYTE PTR [rax],al
   1400085d7:	add    BYTE PTR [rax+0x42],dl
   1400085da:	push   rbp
   1400085db:	push   rax
   1400085dc:	rex.R
   1400085dd:	push   r12
   1400085df:	rex.RB
   1400085e0:	cs push rax
   1400085e2:	rex.X
   1400085e3:	add    BYTE PTR [rax],r8b
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	push   rax
   1400085e9:	rex.X push rbp
   1400085eb:	push   rax
   1400085ec:	rex.R
   1400085ed:	push   r12
   1400085ef:	rex.RB
   1400085f0:	cs rex.RB pop r8
   1400085f3:	add    BYTE PTR [r8],r8b
   1400085f6:	add    BYTE PTR [rax],al
   1400085f8:	push   rax
   1400085f9:	rex.X push rbp
   1400085fb:	push   rax
   1400085fc:	rex.R
   1400085fd:	push   r12
   1400085ff:	rex.RB
   140008600:	cs rex.WB
   140008602:	rex.WRX
   140008603:	rex.RX add BYTE PTR [rax],r8b
   140008606:	add    BYTE PTR [rax],al
   140008608:	push   rax
   140008609:	rex.X push rbp
   14000860b:	push   rax
   14000860c:	rex.R
   14000860d:	push   r12
   14000860f:	rex.RB
   140008610:	cs push rsi
   140008612:	rex.RB push r10
   140008614:	add    BYTE PTR [rax],al
   140008616:	add    BYTE PTR [rax],al
   140008618:	push   rax
   140008619:	rex.X push rdx
   14000861b:	add    BYTE PTR [rax],al
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rbx+0x46],al
   140008622:	rex.R
   140008623:	rex.WB
   140008624:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x3a656c69
   14000862d:	cmp    bh,BYTE PTR [rsi+0x43]
   140008630:	rex.RX
   140008631:	rex.R
   140008632:	rex.WB
   140008633:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x28656c69
   14000863c:	sub    DWORD PTR [rax],esp
   14000863e:	fs gs jae 0x1400086b6
   140008642:	jb     0x1400086b9
   140008644:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140008648:	and    BYTE PTR [rbx+0x61],ah
   14000864b:	ins    BYTE PTR es:[rdi],dx
   14000864c:	ins    BYTE PTR es:[rdi],dx
   14000864d:	gs and BYTE PTR fs:[rdi+0x68],dh
   140008652:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x656c6966
   14000865a:	and    BYTE PTR [rbx+0x74],dh
   14000865d:	imul   ebp,DWORD PTR [rsp+rbp*2+0x20],0x6e65706f
   140008665:	add    BYTE PTR cs:[rax],al
   140008668:	rex.XB
   140008669:	rex.RX
   14000866a:	rex.R
   14000866b:	rex.WB
   14000866c:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x3a656c69
   140008675:	cmp    al,BYTE PTR [rbx+0x72]
   140008678:	gs (bad) 
   14000867a:	je     0x1400086e1
   14000867c:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x69662029
   140008685:	ins    BYTE PTR es:[rdi],dx
   140008686:	and    BYTE PTR gs:[rcx+0x73],ch
   14000868a:	and    BYTE PTR [rcx+0x6c],ah
   14000868d:	jb     0x1400086f4
   14000868f:	(bad)  
   140008690:	fs jns 0x1400086b3
   140008693:	outs   dx,DWORD PTR ds:[rsi]
   140008694:	jo     0x1400086fb
   140008696:	outs   dx,BYTE PTR ds:[rsi]
   140008697:	add    BYTE PTR cs:[rax],al
   14000869a:	add    BYTE PTR [rax],al
   14000869c:	add    BYTE PTR [rax],al
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	rex.XB
   1400086a1:	rex.RX
   1400086a2:	rex.R
   1400086a3:	rex.WB
   1400086a4:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x3a656c69
   1400086ad:	cmp    al,BYTE PTR [rbx+0x72]
   1400086b0:	gs (bad) 
   1400086b2:	je     0x140008719
   1400086b4:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x72432029
   1400086bd:	gs (bad) 
   1400086bf:	je     0x140008726
   1400086c1:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x467a7370
   1400086ca:	imul   ebp,DWORD PTR [rbp+riz*2+0x3d],0x642c7325
   1400086d2:	ja     0x140008718
   1400086d4:	gs jae 0x140008740
   1400086d7:	jb     0x14000873e
   1400086d9:	movsxd esp,DWORD PTR fs:[r11+0x65]
   1400086de:	jae    0x140008753
   1400086e0:	cmp    eax,0x642c7525
   1400086e5:	ja     0x14000873a
   1400086e7:	push   0x4d657261
   1400086ec:	outs   dx,DWORD PTR ds:[rsi]
   1400086ed:	fs gs cmp eax,0xa297525
   1400086f4:	add    BYTE PTR [rax],al
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	rex.XB
   1400086f9:	rex.RX
   1400086fa:	rex.R
   1400086fb:	rex.WB
   1400086fc:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x3a656c69
   140008705:	cmp    al,BYTE PTR [rbx+0x72]
   140008708:	gs (bad) 
   14000870a:	je     0x140008771
   14000870c:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x72432029
   140008715:	gs (bad) 
   140008717:	je     0x14000877e
   140008719:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x61662029
   140008722:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000872a:	rex.RB cmp eax,0x2e7525
   140008730:	rex.XB
   140008731:	rex.RX
   140008732:	rex.R
   140008733:	rex.WB
   140008734:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x3a656c69
   14000873d:	cmp    dl,BYTE PTR [rdx+0x65]
   140008740:	(bad)  
   140008741:	sub    BYTE PTR fs:[rcx],ch
   140008744:	and    BYTE PTR [rdx+0x65],dl
   140008747:	(bad)  
   140008748:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x28],0x61662029
   140008752:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000875a:	rex.RB cmp eax,0x2e7525
   140008760:	rex.XB
   140008761:	rex.RX
   140008762:	rex.R
   140008763:	rex.WB
   140008764:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x3a656c69
   14000876d:	cmp    dl,BYTE PTR [rdi+0x72]
   140008770:	imul   esi,DWORD PTR [rbp+riz*2+0x28],0x72572029
   140008778:	imul   esi,DWORD PTR [rbp+riz*2+0x46],0x28656c69
   140008780:	sub    DWORD PTR [rax],esp
   140008782:	data16 (bad) 
   140008784:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000878c:	rex.RB cmp eax,0x2e7525
   140008792:	add    BYTE PTR [rax],al
   140008794:	add    BYTE PTR [rax],al
   140008796:	add    BYTE PTR [rax],al
   140008798:	rex.XB
   140008799:	rex.RX
   14000879a:	rex.R
   14000879b:	rex.WB
   14000879c:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x3a656c69
   1400087a5:	cmp    dl,BYTE PTR [rbx+0x65]
   1400087a8:	imul   ebp,DWORD PTR gs:[rax],0x29
   1400087ac:	and    BYTE PTR [rbx+0x65],dl
   1400087af:	je     0x1400087f7
   1400087b1:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   1400087b9:	gs jb  0x1400087e4
   1400087bc:	sub    DWORD PTR [rax],esp
   1400087be:	data16 (bad) 
   1400087c0:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400087c8:	rex.RB cmp eax,0x2e7525
   1400087ce:	add    BYTE PTR [rax],al
   1400087d0:	rex.XB
   1400087d1:	rex.RX
   1400087d2:	rex.R
   1400087d3:	rex.WB
   1400087d4:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x3a656c69
   1400087dd:	cmp    al,BYTE PTR [rbx+0x6c]
   1400087e0:	outs   dx,DWORD PTR ds:[rsi]
   1400087e1:	jae    0x140008848
   1400087e3:	sub    BYTE PTR [rcx],ch
   1400087e5:	and    BYTE PTR [rbx+0x6c],al
   1400087e8:	outs   dx,DWORD PTR ds:[rsi]
   1400087e9:	jae    0x140008850
   1400087eb:	rex.W (bad) 
   1400087ed:	outs   dx,BYTE PTR ds:[rsi]
   1400087ee:	fs ins BYTE PTR es:[rdi],dx
   1400087f0:	sub    BYTE PTR gs:[rcx],ch
   1400087f3:	and    BYTE PTR [rsi+0x61],ah
   1400087f6:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400087fe:	rex.RB cmp eax,0x2e7525
   140008804:	add    BYTE PTR [rax],al
   140008806:	add    BYTE PTR [rax],al
   140008808:	imul   bx,WORD PTR fs:[rdi+0x6f],0x6570
   14000880f:	outs   dx,BYTE PTR ds:[rsi]
   140008810:	sub    BYTE PTR [rcx],ch
   140008812:	and    BYTE PTR [rip+0x73615020],ch        # 0x1b361d838
   140008818:	jae    0x14000887f
   14000881a:	and    BYTE PTR fs:[rsi+0x69],ah
   14000881e:	ins    BYTE PTR es:[rdi],dx
   14000881f:	and    BYTE PTR gs:[rsi+0x61],ch
   140008823:	ins    DWORD PTR es:[rdi],dx
   140008824:	and    BYTE PTR gs:[rcx+0x73],ch
   140008828:	and    BYTE PTR [rcx+0x6e],ch
   14000882b:	jbe    0x14000888e
   14000882d:	ins    BYTE PTR es:[rdi],dx
   14000882e:	imul   esp,DWORD PTR [rsi+rbp*1+0x0],0x0
   140008836:	add    BYTE PTR [rax],al
   140008838:	imul   bx,WORD PTR fs:[rdi+0x6f],0x6570
   14000883f:	outs   dx,BYTE PTR ds:[rsi]
   140008840:	sub    BYTE PTR [rcx],ch
   140008842:	and    BYTE PTR [rsi+0x65],ch
   140008845:	ja     0x140008867
   140008847:	rex.XB
   140008848:	rex.RX
   140008849:	rex.R
   14000884a:	rex.WB
   14000884b:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x20656c69
   140008854:	data16 (bad) 
   140008856:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e
   14000885e:	add    BYTE PTR [rax],al
   140008860:	imul   bx,WORD PTR fs:[rdi+0x6f],0x6570
   140008867:	outs   dx,BYTE PTR ds:[rsi]
   140008868:	sub    BYTE PTR [rcx],ch
   14000886a:	and    BYTE PTR [rcx+0x6e],ch
   14000886d:	jbe    0x1400088d0
   14000886f:	ins    BYTE PTR es:[rdi],dx
   140008870:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x2f646165
   140008878:	ja     0x1400088ec
   14000887a:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x67616c66
   140008882:	jae    0x1400088b0
   140008884:	and    BYTE PTR [rdi+0x66],ch
   140008887:	ins    BYTE PTR es:[rdi],dx
   140008888:	(bad)  
   140008889:	addr32 cmp eax,0x2e7525
   14000888f:	add    BYTE PTR [rsi+0x64],ah
   140008892:	imul   ebx,DWORD PTR [rdi+0x6f],0x286e6570
   140008899:	sub    DWORD PTR [rax],esp
   14000889b:	rex.RXB
   14000889c:	gs je  0x1400088f3
   14000889f:	gs ins DWORD PTR es:[rdi],dx
   1400088a1:	jo     0x1400088f3
   1400088a3:	(bad)  
   1400088a4:	je     0x14000890e
   1400088a6:	sub    BYTE PTR [rcx],ch
   1400088a8:	and    BYTE PTR [rsi+0x61],ah
   1400088ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400088b3:	rex.RB cmp eax,0x2e7525
   1400088b9:	add    BYTE PTR [rax],al
   1400088bb:	add    BYTE PTR [rbx+0x74],ah
   1400088be:	data16 add BYTE PTR [rsi+0x64],ah
   1400088c2:	imul   ebx,DWORD PTR [rdi+0x6f],0x286e6570
   1400088c9:	sub    DWORD PTR [rax],esp
   1400088cb:	rex.RXB
   1400088cc:	gs je  0x140008923
   1400088cf:	gs ins DWORD PTR es:[rdi],dx
   1400088d1:	jo     0x140008919
   1400088d3:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x28656d61
   1400088db:	sub    DWORD PTR [rax],esp
   1400088dd:	data16 (bad) 
   1400088df:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400088e7:	rex.RB cmp eax,0x2e7525
   1400088ed:	add    BYTE PTR [rax],al
   1400088ef:	add    BYTE PTR [rsi+0x64],ah
   1400088f2:	imul   ebx,DWORD PTR [rdi+0x6e],0x6669746f
   1400088f9:	jns    0x140008923
   1400088fb:	sub    DWORD PTR [rax],esp
   1400088fd:	imul   bp,WORD PTR fs:[rsi+0x74],0x663d
   140008904:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x59504f43
   14000890c:	pop    rdi
   14000890d:	rex.RX
   14000890e:	rex.WB
   14000890f:	rex.WR
   140008910:	rex.RB sub al,0x20
   140008913:	jo     0x140008988
   140008915:	jp     0x140008948
   140008917:	cmp    eax,0x202c7325
   14000891c:	movsxd esp,DWORD PTR [rdx+0x3d]
   14000891f:	and    eax,0x2e75
   140008924:	add    BYTE PTR [rax],al
   140008926:	add    BYTE PTR [rax],al
   140008928:	imul   bx,WORD PTR fs:[rdi+0x6e],0x746f
   14000892f:	imul   esp,DWORD PTR [rsi+0x79],0x73202928
   140008936:	jp     0x14000897b
   140008938:	(bad)  
   140008939:	(bad)  
   14000893a:	imul   r14d,DWORD PTR [rdx+0x3d],0x702b7325
   140008942:	jae    0x1400089be
   140008944:	imul   r13d,DWORD PTR [rbp+r12*2+0x3d],0x65207325
   14000894d:	js     0x1400089b2
   14000894f:	gs gs fs jae 0x140008974
   140008954:	rex.WRB
   140008955:	pop    r8
   140008957:	pop    rdi
   140008958:	push   rax
   140008959:	push   r12
   14000895b:	rex.W
   14000895c:	add    BYTE PTR cs:[rax],al
   14000895f:	add    BYTE PTR [rip+0x73255c73],ah        # 0x1b325e5d8
   140008965:	add    BYTE PTR [rax],al
   140008967:	add    BYTE PTR [rsi+0x64],ah
   14000896a:	imul   ebx,DWORD PTR [rdi+0x6e],0x6669746f
   140008971:	jns    0x14000899b
   140008973:	sub    DWORD PTR [rax],esp
   140008975:	sub    eax,0x72745320
   14000897a:	imul   ebp,DWORD PTR [rsi+0x67],0x50686343
   140008981:	jb     0x1400089ec
   140008983:	outs   dx,BYTE PTR ds:[rsi]
   140008984:	je     0x1400089ec
   140008986:	and    BYTE PTR [rsi+0x61],ah
   140008989:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008991:	and    eax,0x78
   140008996:	add    BYTE PTR [rax],al
   140008998:	imul   bx,WORD PTR fs:[rdi+0x6e],0x746f
   14000899f:	imul   esp,DWORD PTR [rsi+0x79],0x203a2928
   1400089a6:	rex.WRB (bad) 
   1400089a8:	ins    BYTE PTR es:[rdi],dx
   1400089a9:	ins    BYTE PTR es:[rdi],dx
   1400089aa:	outs   dx,DWORD PTR ds:[rsi]
   1400089ab:	movsxd ebp,DWORD PTR [rax]
   1400089ad:	rex.RX
   1400089ae:	rex.WB
   1400089af:	rex.WR
   1400089b0:	rex.RB push r8
   1400089b2:	push   rdx
   1400089b3:	rex.WRXB
   1400089b4:	rex.XB
   1400089b5:	rex.RB push r11
   1400089b7:	push   rbx
   1400089b8:	rex.WB
   1400089b9:	rex.WRX
   1400089ba:	rex.RX
   1400089bb:	rex.WRXB sub QWORD PTR [r8],r12
   1400089be:	data16 (bad) 
   1400089c0:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e
   1400089c8:	imul   bx,WORD PTR fs:[rdi+0x6e],0x746f
   1400089cf:	imul   esp,DWORD PTR [rsi+0x79],0x6e202928
   1400089d6:	gs ja  0x1400089f9
   1400089d9:	rex.XB
   1400089da:	rex.RX
   1400089db:	rex.R
   1400089dc:	rex.WB
   1400089dd:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x20656c69
   1400089e6:	data16 (bad) 
   1400089e8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e
   1400089f0:	imul   bx,WORD PTR fs:[rdi+0x6e],0x746f
   1400089f7:	imul   esp,DWORD PTR [rsi+0x79],0x2d202928
   1400089fe:	and    BYTE PTR [rbx+0x74],dl
   140008a01:	jb     0x140008a6c
   140008a03:	outs   dx,BYTE PTR ds:[rsi]
   140008a04:	rex.XB movsxd ebp,DWORD PTR [r8d+0x50]
   140008a09:	jb     0x140008a74
   140008a0b:	outs   dx,BYTE PTR ds:[rsi]
   140008a0c:	je     0x140008a74
   140008a0e:	and    BYTE PTR [rsi+0x61],ah
   140008a11:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008a19:	and    eax,0xa78
   140008a1e:	add    BYTE PTR [rax],al
   140008a20:	imul   bx,WORD PTR fs:[rdi+0x6e],0x746f
   140008a27:	imul   esp,DWORD PTR [rsi+0x79],0x44202928
   140008a2e:	outs   dx,DWORD PTR ds:[rsi]
   140008a2f:	jae    0x140008a75
   140008a31:	(bad)  
   140008a32:	je     0x140008a99
   140008a34:	push   rsp
   140008a35:	imul   ebp,DWORD PTR [rbp+0x65],0x69466f54
   140008a3c:	ins    BYTE PTR es:[rdi],dx
   140008a3d:	gs push rsp
   140008a3f:	imul   ebp,DWORD PTR [rbp+0x65],0x2c752528
   140008a46:	and    eax,0x66202975
   140008a4b:	(bad)  
   140008a4c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140008a54:	rex.RB cmp eax,0x2e7525
   140008a5a:	add    BYTE PTR [rax],al
   140008a5c:	add    BYTE PTR [rax],al
   140008a5e:	add    BYTE PTR [rax],al
   140008a60:	imul   bx,WORD PTR fs:[rdi+0x6e],0x746f
   140008a67:	imul   esp,DWORD PTR [rsi+0x79],0x4c202928
   140008a6e:	outs   dx,DWORD PTR ds:[rsi]
   140008a6f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008a72:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   140008a7b:	outs   dx,DWORD PTR ds:[rsi]
   140008a7c:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x28656d69
   140008a85:	sub    DWORD PTR [rax],esp
   140008a87:	data16 (bad) 
   140008a89:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140008a91:	rex.RB cmp eax,0x2e7525
   140008a97:	add    BYTE PTR [rsi+0x64],ah
   140008a9a:	imul   ebx,DWORD PTR [rdi+0x6e],0x6669746f
   140008aa1:	jns    0x140008acb
   140008aa3:	sub    DWORD PTR [rax],esp
   140008aa5:	push   rbx
   140008aa6:	gs je  0x140008aef
   140008aa9:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x28656d69
   140008ab1:	sub    DWORD PTR [rax],esp
   140008ab3:	data16 (bad) 
   140008ab5:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140008abd:	rex.RB cmp eax,0x2e7525
   140008ac3:	add    BYTE PTR [rax],al
   140008ac5:	add    BYTE PTR [rax],al
   140008ac7:	add    BYTE PTR [rsi+0x64],ah
   140008aca:	imul   ebx,DWORD PTR [rdi+0x6e],0x6669746f
   140008ad1:	jns    0x140008afb
   140008ad3:	sub    DWORD PTR [rax],esp
   140008ad5:	push   rbx
   140008ad6:	gs je  0x140008b1f
   140008ad9:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140008ae1:	(bad)  
   140008ae2:	jne    0x140008b58
   140008ae4:	gs jae 0x140008b0f
   140008ae7:	and    eax,0x75252c73
   140008aec:	sub    DWORD PTR [rax],esp
   140008aee:	data16 (bad) 
   140008af0:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140008af8:	rex.RB cmp eax,0x2e7525
   140008afe:	add    BYTE PTR [rax],al
   140008b00:	imul   bx,WORD PTR fs:[rdi+0x6e],0x746f
   140008b07:	imul   esp,DWORD PTR [rsi+0x79],0x6163735f
   140008b0e:	outs   dx,BYTE PTR ds:[rsi]
   140008b0f:	sub    BYTE PTR [rcx],ch
   140008b11:	and    BYTE PTR [rbx+0x70],dh
   140008b14:	(bad)  
   140008b15:	outs   dx,BYTE PTR ds:[rsi]
   140008b16:	outs   dx,BYTE PTR ds:[rsi]
   140008b17:	imul   ebp,DWORD PTR [rsi+0x67],0x62616320
   140008b1e:	imul   ebp,DWORD PTR [rsi+0x65],0x69207374
   140008b25:	jae    0x140008b47
   140008b27:	outs   dx,BYTE PTR ds:[rsi]
   140008b28:	outs   dx,DWORD PTR ds:[rsi]
   140008b29:	je     0x140008b4b
   140008b2b:	jae    0x140008ba2
   140008b2d:	jo     0x140008b9f
   140008b2f:	outs   dx,DWORD PTR ds:[rsi]
   140008b30:	jb     0x140008ba6
   140008b32:	gs fs add BYTE PTR cs:[rax],al
   140008b37:	add    BYTE PTR [rsi+0x64],ah
   140008b3a:	imul   ebx,DWORD PTR [rdi+0x6e],0x6669746f
   140008b41:	jns    0x140008ba2
   140008b43:	jae    0x140008ba8
   140008b45:	(bad)  
   140008b46:	outs   dx,BYTE PTR ds:[rsi]
   140008b47:	sub    BYTE PTR [rcx],ch
   140008b49:	and    BYTE PTR [rsi+0x64],ah
   140008b4c:	imul   ebp,DWORD PTR [rsi+0x74],0x2e75253d
   140008b53:	add    BYTE PTR [rax],al
   140008b55:	add    BYTE PTR [rax],al
   140008b57:	add    al,ah
   140008b59:	adc    BYTE PTR [rax],al
   140008b5b:	rex add DWORD PTR [rax],eax
   140008b5e:	add    BYTE PTR [rax],al
   140008b60:	lock adc DWORD PTR [rax],eax
   140008b63:	rex add DWORD PTR [rax],eax
   140008b66:	add    BYTE PTR [rax],al
   140008b68:	adc    al,BYTE PTR [rax]
   140008b6b:	rex add DWORD PTR [rax],eax
   140008b6e:	add    BYTE PTR [rax],al
   140008b70:	nop
   140008b71:	adc    al,BYTE PTR [rax]
   140008b73:	rex add DWORD PTR [rax],eax
   140008b76:	add    BYTE PTR [rax],al
   140008b78:	loopne 0x140008b8c
   140008b7a:	add    BYTE PTR [rax+0x1],al
   140008b7d:	add    BYTE PTR [rax],al
   140008b7f:	add    BYTE PTR [rax],dh
   140008b81:	adc    eax,DWORD PTR [rax]
   140008b83:	rex add DWORD PTR [rax],eax
   140008b86:	add    BYTE PTR [rax],al
   140008b88:	nop
   140008b89:	adc    BYTE PTR [rax],al
   140008b8b:	rex add DWORD PTR [rax],eax
   140008b8e:	add    BYTE PTR [rax],al
   140008b90:	rcl    BYTE PTR [rax],0x0
   140008b93:	rex add DWORD PTR [rax],eax
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	rcl    BYTE PTR [rax],0x0
   140008b9b:	rex add DWORD PTR [rax],eax
   140008b9e:	add    BYTE PTR [rax],al
   140008ba0:	rcl    BYTE PTR [rax],0x0
   140008ba3:	rex add DWORD PTR [rax],eax
   140008ba6:	add    BYTE PTR [rax],al
   140008ba8:	rcl    BYTE PTR [rax],0x0
   140008bab:	rex add DWORD PTR [rax],eax
   140008bae:	add    BYTE PTR [rax],al
   140008bb0:	rcl    BYTE PTR [rax],1
   140008bb2:	add    BYTE PTR [rax+0x1],al
   140008bb5:	add    BYTE PTR [rax],al
   140008bb7:	add    BYTE PTR [rbx+0x6f],al
   140008bba:	outs   dx,BYTE PTR ds:[rsi]
   140008bbb:	outs   dx,BYTE PTR ds:[rsi]
   140008bbc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008bc1:	outs   dx,BYTE PTR ds:[rsi]
   140008bc2:	and    BYTE PTR [rbp+0x61],cl
   140008bc5:	outs   dx,BYTE PTR ds:[rsi]
   140008bc6:	(bad)  
   140008bc7:	addr32 gs jb 0x140008bcb
   140008bcb:	add    BYTE PTR [rax],al
   140008bcd:	add    BYTE PTR [rax],al
   140008bcf:	add    BYTE PTR [rsi+0x65],dl
   140008bd2:	jb     0x140008c47
   140008bd4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f634900
   140008bdb:	outs   dx,BYTE PTR ds:[rsi]
   140008bdc:	add    BYTE PTR [rax],al
   140008bde:	add    BYTE PTR [rax],al
   140008be0:	push   rbx
   140008be1:	ins    DWORD PTR es:[rdi],dx
   140008be2:	(bad)  
   140008be3:	ins    BYTE PTR es:[rdi],dx
   140008be4:	ins    BYTE PTR es:[rdi],dx
   140008be5:	movsxd rbp,DWORD PTR [r15+0x6e]
   140008be9:	add    BYTE PTR [rax],al
   140008beb:	add    BYTE PTR [rax],al
   140008bed:	add    BYTE PTR [rax],al
   140008bef:	add    BYTE PTR [rbx+0x4d],al
   140008bf2:	push   rbx
   140008bf3:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x76726553
   140008bfc:	imul   esp,DWORD PTR [rbx+0x65],0x656d614e
   140008c03:	add    BYTE PTR [rcx+0x53],cl
   140008c06:	push   rax
   140008c07:	add    BYTE PTR [rax+0x42],dl
   140008c0a:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x67655200
   140008c13:	imul   ebp,DWORD PTR [rdi+0x6e],0x656c6946
   140008c1a:	add    BYTE PTR [rax],al
   140008c1c:	add    BYTE PTR [rax],al
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008c22:	(bad)  
   140008c23:	(bad)  
   140008c24:	ins    BYTE PTR es:[rdi],dx
   140008c25:	rex.WR outs dx,DWORD PTR gs:[rsi]
   140008c28:	addr32 imul ebp,DWORD PTR [esi+0x67],0x4c000000
   140008c31:	outs   dx,DWORD PTR ds:[rsi]
   140008c32:	addr32 imul ebp,DWORD PTR [esi+0x67],0x78614d00
   140008c3b:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x657a69
   140008c44:	add    BYTE PTR [rax],al
   140008c46:	add    BYTE PTR [rax],al
   140008c48:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x63657269
   140008c51:	je     0x140008cc2
   140008c53:	jb     0x140008cce
   140008c55:	add    BYTE PTR [rax],al
   140008c57:	add    BYTE PTR [rbx+0x6f],al
   140008c5a:	outs   dx,BYTE PTR ds:[rsi]
   140008c5b:	outs   dx,BYTE PTR ds:[rsi]
   140008c5c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008c61:	outs   dx,BYTE PTR ds:[rsi]
   140008c62:	and    BYTE PTR [rbp+0x61],cl
   140008c65:	outs   dx,BYTE PTR ds:[rsi]
   140008c66:	(bad)  
   140008c67:	addr32 gs jb 0x140008c8b
   140008c6b:	push   rax
   140008c6c:	push   0x62656e6f
   140008c71:	outs   dx,DWORD PTR ds:[rsi]
   140008c72:	outs   dx,DWORD PTR ds:[rsi]
   140008c73:	imul   esp,DWORD PTR [rax],0x41
   140008c76:	movsxd esp,DWORD PTR [rbx+0x65]
   140008c79:	jae    0x140008cee
   140008c7b:	add    BYTE PTR [rip+0x706d6554],ah        # 0x1b06df1d5
   140008c81:	and    eax,0x0
   140008c86:	add    BYTE PTR [rax],al
   140008c88:	rex.XB
   140008c89:	rex.WRB
   140008c8a:	rex.R
   140008c8b:	xor    r14,QWORD PTR [rdx]
   140008c8e:	add    BYTE PTR [rax],al
   140008c90:	rex.WB
   140008c91:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008c93:	outs   dx,BYTE PTR ds:[rsi]
   140008c94:	outs   dx,BYTE PTR ds:[rsi]
   140008c95:	rex.R ja 0x140008d06
   140008c98:	and    BYTE PTR [rbp+0x65],cl
   140008c9b:	jae    0x140008d10
   140008c9d:	(bad)  
   140008c9e:	add    BYTE PTR gs:[eax],al
   140008ca2:	add    BYTE PTR [rax],al
   140008ca4:	add    BYTE PTR [rax],al
   140008ca6:	add    BYTE PTR [rax],al
   140008ca8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140008cac:	movsxd eax,DWORD PTR [rax]
   140008cae:	jb     0x140008cb0
   140008cb0:	outs   dx,DWORD PTR ds:[rsi]
   140008cb1:	add    BYTE PTR [rbx+0x0],dh
   140008cb4:	outs   dx,DWORD PTR ds:[rsi]
   140008cb5:	add    BYTE PTR [rsi+0x0],ah
   140008cb8:	je     0x140008cba
   140008cba:	and    BYTE PTR [rax],al
   140008cbc:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008cc0:	outs   dx,BYTE PTR ds:[rsi]
   140008cc1:	add    BYTE PTR [rsi+0x0],ch
   140008cc4:	add    BYTE PTR gs:[rbx+0x0],ah
   140008cc8:	je     0x140008cca
   140008cca:	imul   eax,DWORD PTR [rax],0x6e006f
   140008cd0:	and    BYTE PTR [rax],al
   140008cd2:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140008cd6:	outs   dx,BYTE PTR ds:[rsi]
   140008cd7:	add    BYTE PTR [rcx+0x0],ah
   140008cda:	add    BYTE PTR [ebp+0x0],ah
   140008cde:	jb     0x140008ce0
	...
   140008ce8:	imul   rsp,QWORD PTR [rbp+riz*2+0x44],0x79616c65
   140008cf1:	add    BYTE PTR [rax],al
   140008cf3:	add    BYTE PTR [rax],al
   140008cf5:	add    BYTE PTR [rax],al
   140008cf7:	add    BYTE PTR [rdi+rbp*2+0x77],al
   140008cfb:	outs   dx,BYTE PTR ds:[rsi]
   140008cfc:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008cfe:	(bad)  
   140008cff:	fs rex.R
   140008d01:	gs ins BYTE PTR es:[rdi],dx
   140008d03:	(bad)  
   140008d04:	jns    0x140008d06
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	push   rax
   140008d09:	rex.X push rbp
   140008d0b:	jo     0x140008d71
   140008d0d:	(bad)  
   140008d0e:	je     0x140008d75
   140008d10:	rex.WRB
   140008d11:	gs jae 0x140008d87
   140008d14:	(bad)  
   140008d15:	add    BYTE PTR gs:[edi+ebp*2+0x77],al
   140008d1b:	outs   dx,BYTE PTR ds:[rsi]
   140008d1c:	ins    BYTE PTR es:[rdi],dx
   140008d1d:	outs   dx,DWORD PTR ds:[rsi]
   140008d1e:	(bad)  
   140008d1f:	fs rex.W je 0x140008d97
   140008d23:	jo     0x140008d6b
   140008d25:	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x62612029
   140008d2d:	outs   dx,DWORD PTR ds:[rsi]
   140008d2e:	jb     0x140008da4
   140008d30:	gs fs and BYTE PTR cs:[rcx+0x75],dl
   140008d36:	imul   esi,DWORD PTR [rsp+rsi*2+0x69],0x6f20676e
   140008d3e:	outs   dx,BYTE PTR ds:[rsi]
   140008d3f:	and    BYTE PTR [rcx+rbp*2+0x6e],cl
   140008d43:	and    BYTE PTR gs:[rip+0x2e642520],ch        # 0x16e64b26a
   140008d4a:	add    BYTE PTR [rax],al
   140008d4c:	add    BYTE PTR [rax],al
   140008d4e:	add    BYTE PTR [rax],al
   140008d50:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008d52:	ja     0x140008dc2
   140008d54:	ins    BYTE PTR es:[rdi],dx
   140008d55:	outs   dx,DWORD PTR ds:[rsi]
   140008d56:	(bad)  
   140008d57:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008d61:	sub    DWORD PTR [rax],esp
   140008d63:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008d65:	je     0x140008dcc
   140008d67:	jb     0x140008dd7
   140008d69:	gs je  0x140008dbb
   140008d6c:	jo     0x140008dd3
   140008d6e:	outs   dx,BYTE PTR ds:[rsi]
   140008d6f:	sub    BYTE PTR [rcx],ch
   140008d71:	and    BYTE PTR [rsi+0x61],ah
   140008d74:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140008d7c:	rex.RB cmp eax,0x2e7525
	...
   140008d8e:	add    BYTE PTR [rax],al
   140008d90:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008d92:	ja     0x140008e02
   140008d94:	ins    BYTE PTR es:[rdi],dx
   140008d95:	outs   dx,DWORD PTR ds:[rsi]
   140008d96:	(bad)  
   140008d97:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008da1:	sub    DWORD PTR [rax],esp
   140008da3:	push   rdi
   140008da4:	imul   ebp,DWORD PTR [rsi+0x48],0x43707474
   140008dab:	outs   dx,DWORD PTR ds:[rsi]
   140008dac:	outs   dx,BYTE PTR ds:[rsi]
   140008dad:	outs   dx,BYTE PTR ds:[rsi]
   140008dae:	movsxd esi,DWORD PTR gs:[rax+rbp*1+0x70]
   140008db3:	jae    0x140008e2f
   140008db5:	rex.W outs dx,DWORD PTR ds:[rsi]
   140008db7:	jae    0x140008e2d
   140008db9:	rex.WRX (bad) 
   140008dbb:	ins    DWORD PTR es:[rdi],dx
   140008dbc:	gs cmp eax,0x20297325
   140008dc2:	data16 (bad) 
   140008dc4:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140008dcc:	rex.RB cmp eax,0x2e7525
   140008dd2:	add    BYTE PTR [rax],al
   140008dd4:	add    BYTE PTR [rax],al
   140008dd6:	add    BYTE PTR [rax],al
   140008dd8:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008dda:	ja     0x140008e4a
   140008ddc:	ins    BYTE PTR es:[rdi],dx
   140008ddd:	outs   dx,DWORD PTR ds:[rsi]
   140008dde:	(bad)  
   140008ddf:	fs rex.W je 0x140008e57
   140008de3:	jo     0x140008e2b
   140008de5:	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x62612029
   140008ded:	outs   dx,DWORD PTR ds:[rsi]
   140008dee:	jb     0x140008e64
   140008df0:	gs fs and BYTE PTR cs:[rbx+0x6f],al
   140008df6:	jne    0x140008e64
   140008df8:	and    BYTE PTR fs:[rsi+0x6f],ch
   140008dfc:	je     0x140008e1e
   140008dfe:	(bad)  
   140008dff:	ins    BYTE PTR es:[rdi],dx
   140008e00:	ins    BYTE PTR es:[rdi],dx
   140008e01:	outs   dx,DWORD PTR ds:[rsi]
   140008e02:	movsxd esp,DWORD PTR [rcx+0x74]
   140008e05:	and    BYTE PTR gs:[rbp+0x65],ch
   140008e09:	ins    DWORD PTR es:[rdi],dx
   140008e0a:	outs   dx,DWORD PTR ds:[rsi]
   140008e0b:	jb     0x140008e86
   140008e0d:	add    BYTE PTR [rax],al
   140008e0f:	add    BYTE PTR [rdi+rbp*2+0x77],al
   140008e13:	outs   dx,BYTE PTR ds:[rsi]
   140008e14:	ins    BYTE PTR es:[rdi],dx
   140008e15:	outs   dx,DWORD PTR ds:[rsi]
   140008e16:	(bad)  
   140008e17:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008e21:	sub    DWORD PTR [rax],esp
   140008e23:	push   rbx
   140008e24:	je     0x140008e98
   140008e26:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   140008e2d:	outs   dx,DWORD PTR ds:[rsi]
   140008e2e:	jo     0x140008ea9
   140008e30:	rex.RB js 0x140008e53
   140008e33:	data16 (bad) 
   140008e35:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008e3d:	and    eax,0xa78
   140008e42:	add    BYTE PTR [rax],al
   140008e44:	add    BYTE PTR [rax],al
   140008e46:	add    BYTE PTR [rax],al
   140008e48:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008e4a:	ja     0x140008eba
   140008e4c:	ins    BYTE PTR es:[rdi],dx
   140008e4d:	outs   dx,DWORD PTR ds:[rsi]
   140008e4e:	(bad)  
   140008e4f:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008e59:	sub    DWORD PTR [rax],esp
   140008e5b:	push   rbx
   140008e5c:	je     0x140008ed0
   140008e5e:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   140008e65:	(bad)  
   140008e66:	je     0x140008ead
   140008e68:	js     0x140008e8a
   140008e6a:	data16 (bad) 
   140008e6c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008e74:	and    eax,0x44000a78
   140008e79:	outs   dx,DWORD PTR ds:[rsi]
   140008e7a:	ja     0x140008eea
   140008e7c:	ins    BYTE PTR es:[rdi],dx
   140008e7d:	outs   dx,DWORD PTR ds:[rsi]
   140008e7e:	(bad)  
   140008e7f:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008e89:	sub    DWORD PTR [rax],esp
   140008e8b:	sub    eax,0x74744820
   140008e90:	jo     0x140008ee1
   140008e92:	jo     0x140008ef9
   140008e94:	outs   dx,BYTE PTR ds:[rsi]
   140008e95:	push   rdx
   140008e96:	gs jno 0x140008f0e
   140008e99:	gs jae 0x140008f10
   140008e9c:	and    BYTE PTR [rip+0x732520],ch        # 0x14073b3c2
   140008ea2:	add    BYTE PTR [rax],al
   140008ea4:	add    BYTE PTR [rax],al
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008eaa:	ja     0x140008f1a
   140008eac:	ins    BYTE PTR es:[rdi],dx
   140008ead:	outs   dx,DWORD PTR ds:[rsi]
   140008eae:	(bad)  
   140008eaf:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008eb9:	sub    DWORD PTR [rax],esp
   140008ebb:	rex.W je 0x140008f32
   140008ebe:	jo     0x140008f0f
   140008ec0:	jo     0x140008f27
   140008ec2:	outs   dx,BYTE PTR ds:[rsi]
   140008ec3:	push   rdx
   140008ec4:	gs jno 0x140008f3c
   140008ec7:	gs jae 0x140008f3e
   140008eca:	sub    BYTE PTR [rcx],ch
   140008ecc:	and    BYTE PTR [rsi+0x61],ah
   140008ecf:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140008ed7:	rex.RB cmp eax,0x2e7525
   140008edd:	add    BYTE PTR [rax],al
   140008edf:	add    BYTE PTR [rdi+rbp*2+0x77],al
   140008ee3:	outs   dx,BYTE PTR ds:[rsi]
   140008ee4:	ins    BYTE PTR es:[rdi],dx
   140008ee5:	outs   dx,DWORD PTR ds:[rsi]
   140008ee6:	(bad)  
   140008ee7:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008ef1:	sub    DWORD PTR [rax],esp
   140008ef3:	rex.W je 0x140008f6a
   140008ef6:	jo     0x140008f4b
   140008ef8:	outs   dx,BYTE PTR gs:[rsi]
   140008efa:	fs push rdx
   140008efc:	gs jno 0x140008f74
   140008eff:	gs jae 0x140008f76
   140008f02:	sub    BYTE PTR [rcx],ch
   140008f04:	and    BYTE PTR [rsi+0x61],ah
   140008f07:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140008f0f:	rex.RB cmp eax,0x2e7525
   140008f15:	add    BYTE PTR [rax],al
   140008f17:	add    BYTE PTR [rdi+rbp*2+0x77],al
   140008f1b:	outs   dx,BYTE PTR ds:[rsi]
   140008f1c:	ins    BYTE PTR es:[rdi],dx
   140008f1d:	outs   dx,DWORD PTR ds:[rsi]
   140008f1e:	(bad)  
   140008f1f:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008f29:	sub    DWORD PTR [rax],esp
   140008f2b:	push   rdi
   140008f2c:	imul   ebp,DWORD PTR [rsi+0x48],0x52707474
   140008f33:	movsxd esp,DWORD PTR gs:[rbp+0x69]
   140008f37:	jbe    0x140008f9e
   140008f39:	push   rdx
   140008f3a:	gs jae 0x140008fad
   140008f3d:	outs   dx,DWORD PTR ds:[rsi]
   140008f3e:	outs   dx,BYTE PTR ds:[rsi]
   140008f3f:	jae    0x140008fa6
   140008f41:	sub    BYTE PTR [rcx],ch
   140008f43:	and    BYTE PTR [rsi+0x61],ah
   140008f46:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140008f4e:	rex.RB cmp eax,0x2e7525
   140008f54:	add    BYTE PTR [rax],al
   140008f56:	add    BYTE PTR [rax],al
   140008f58:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008f5a:	ja     0x140008fca
   140008f5c:	ins    BYTE PTR es:[rdi],dx
   140008f5d:	outs   dx,DWORD PTR ds:[rsi]
   140008f5e:	(bad)  
   140008f5f:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008f69:	sub    DWORD PTR [rax],esp
   140008f6b:	push   rdi
   140008f6c:	imul   ebp,DWORD PTR [rsi+0x48],0x51707474
   140008f73:	jne    0x140008fda
   140008f75:	jb     0x140008ff0
   140008f77:	rex.R (bad) 
   140008f79:	je     0x140008fdc
   140008f7b:	rex.B jbe 0x140008fdf
   140008f7e:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6620656c
   140008f86:	(bad)  
   140008f87:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140008f8f:	rex.RB cmp eax,0x2e7525
	...
   140008f9d:	add    BYTE PTR [rax],al
   140008f9f:	add    BYTE PTR [rdi+rbp*2+0x77],al
   140008fa3:	outs   dx,BYTE PTR ds:[rsi]
   140008fa4:	ins    BYTE PTR es:[rdi],dx
   140008fa5:	outs   dx,DWORD PTR ds:[rsi]
   140008fa6:	(bad)  
   140008fa7:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008fb1:	sub    DWORD PTR [rax],esp
   140008fb3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008fb5:	jne    0x140009023
   140008fb7:	and    BYTE PTR fs:[rsi+0x6f],ch
   140008fbb:	je     0x140008fdd
   140008fbd:	(bad)  
   140008fbe:	ins    BYTE PTR es:[rdi],dx
   140008fbf:	ins    BYTE PTR es:[rdi],dx
   140008fc0:	outs   dx,DWORD PTR ds:[rsi]
   140008fc1:	movsxd esp,DWORD PTR [rcx+0x74]
   140008fc4:	and    BYTE PTR gs:[rbp+0x65],ch
   140008fc8:	ins    DWORD PTR es:[rdi],dx
   140008fc9:	outs   dx,DWORD PTR ds:[rsi]
   140008fca:	jb     0x140009045
   140008fcc:	and    BYTE PTR [rdi+0x66],ch
   140008fcf:	and    BYTE PTR [rbx+0x69],dh
   140008fd2:	jp     0x140009039
   140008fd4:	and    BYTE PTR [rip+0x47202c64],ah        # 0x18720bc3e
   140008fda:	rex.WR
   140008fdb:	rex.RB cmp eax,0x2e7525
   140008fe1:	add    BYTE PTR [rax],al
   140008fe3:	add    BYTE PTR [rax],al
   140008fe5:	add    BYTE PTR [rax],al
   140008fe7:	add    BYTE PTR [rdi+rbp*2+0x77],al
   140008feb:	outs   dx,BYTE PTR ds:[rsi]
   140008fec:	ins    BYTE PTR es:[rdi],dx
   140008fed:	outs   dx,DWORD PTR ds:[rsi]
   140008fee:	(bad)  
   140008fef:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140008ff9:	sub    DWORD PTR [rax],esp
   140008ffb:	push   rdi
   140008ffc:	imul   ebp,DWORD PTR [rsi+0x48],0x52707474
   140009003:	gs (bad) 
   140009005:	fs rex.R (bad) 
   140009008:	je     0x14000906b
   14000900a:	sub    BYTE PTR [rcx],ch
   14000900c:	and    BYTE PTR [rsi+0x61],ah
   14000900f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009017:	rex.RB cmp eax,0x2e7525
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rdi+rbp*2+0x77],al
   140009023:	outs   dx,BYTE PTR ds:[rsi]
   140009024:	ins    BYTE PTR es:[rdi],dx
   140009025:	outs   dx,DWORD PTR ds:[rsi]
   140009026:	(bad)  
   140009027:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140009031:	sub    DWORD PTR [rax],esp
   140009033:	push   rdi
   140009034:	jb     0x14000909f
   140009036:	je     0x14000909d
   140009038:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x61662029
   140009041:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009049:	rex.RB cmp eax,0x2e7525
   14000904f:	add    BYTE PTR [rdi+rbp*2+0x77],al
   140009053:	outs   dx,BYTE PTR ds:[rsi]
   140009054:	ins    BYTE PTR es:[rdi],dx
   140009055:	outs   dx,DWORD PTR ds:[rsi]
   140009056:	(bad)  
   140009057:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140009061:	sub    DWORD PTR [rax],esp
   140009063:	fs ja  0x1400090a8
   140009066:	jns    0x1400090dc
   140009068:	gs jae 0x1400090bd
   14000906b:	gs (bad) 
   14000906d:	fs cmp eax,0x202c7525
   140009073:	fs ja  0x1400090b8
   140009076:	jns    0x1400090ec
   140009078:	gs jae 0x1400090d2
   14000907b:	jb     0x1400090e6
   14000907d:	je     0x1400090f3
   14000907f:	outs   dx,BYTE PTR gs:[rsi]
   140009081:	cmp    eax,0x2e7525
   140009086:	add    BYTE PTR [rax],al
   140009088:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000908a:	ja     0x1400090fa
   14000908c:	ins    BYTE PTR es:[rdi],dx
   14000908d:	outs   dx,DWORD PTR ds:[rsi]
   14000908e:	(bad)  
   14000908f:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   140009099:	sub    DWORD PTR [rax],esp
   14000909b:	rex.W je 0x140009112
   14000909e:	jo     0x1400090f1
   1400090a0:	jne    0x140009107
   1400090a2:	jb     0x14000911d
   1400090a4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400090a6:	outs   dx,WORD PTR ds:[rsi]
   1400090a8:	sub    BYTE PTR [rcx],ch
   1400090aa:	and    BYTE PTR [rsi+0x61],ah
   1400090ad:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400090b5:	rex.RB cmp eax,0x2e7525
   1400090bb:	add    BYTE PTR [rax],al
   1400090bd:	add    BYTE PTR [rax],al
   1400090bf:	add    BYTE PTR [rdi+rbp*2+0x77],al
   1400090c3:	outs   dx,BYTE PTR ds:[rsi]
   1400090c4:	ins    BYTE PTR es:[rdi],dx
   1400090c5:	outs   dx,DWORD PTR ds:[rsi]
   1400090c6:	(bad)  
   1400090c7:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x48],0x28707474
   1400090d1:	sub    DWORD PTR [rax],esp
   1400090d3:	rex.W push rsp
   1400090d5:	push   rsp
   1400090d6:	push   rax
   1400090d7:	and    BYTE PTR [rbx+0x74],dh
   1400090da:	(bad)  
   1400090db:	je     0x140009152
   1400090dd:	jae    0x1400090ff
   1400090df:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400090e2:	and    BYTE PTR gs:[rip+0x2e752520],bh        # 0x16e75b609
   1400090e9:	add    BYTE PTR [rax],al
   1400090eb:	add    BYTE PTR [rax],al
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    BYTE PTR [rdi+rbp*2+0x77],al
   1400090f3:	outs   dx,BYTE PTR ds:[rsi]
   1400090f4:	ins    BYTE PTR es:[rdi],dx
   1400090f5:	outs   dx,DWORD PTR ds:[rsi]
   1400090f6:	(bad)  
   1400090f7:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x28],0x75712029
   140009101:	outs   dx,DWORD PTR ds:[rsi]
   140009102:	je     0x14000916d
   140009104:	outs   dx,BYTE PTR ds:[rsi]
   140009105:	and    BYTE PTR [ebx+0x70],dh
   140009109:	(bad)  
   14000910a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000910d:	and    BYTE PTR [rdi+0x69],dh
   140009110:	ins    BYTE PTR es:[rdi],dx
   140009111:	ins    BYTE PTR es:[rdi],dx
   140009112:	and    BYTE PTR [rbp+0x78],ah
   140009115:	movsxd esp,DWORD PTR [rbp+0x65]
   140009118:	and    BYTE PTR fs:[rdx+0x75],ah
   14000911c:	data16 data16 gs jb 0x140009141
   140009121:	jae    0x14000918c
   140009123:	jp     0x14000918a
   140009125:	add    BYTE PTR cs:[rax],al
   140009128:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000912a:	ja     0x14000919a
   14000912c:	ins    BYTE PTR es:[rdi],dx
   14000912d:	outs   dx,DWORD PTR ds:[rsi]
   14000912e:	(bad)  
   14000912f:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x28],0x202d2029
   140009139:	push   rbx
   14000913a:	je     0x1400091ae
   14000913c:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   140009143:	outs   dx,DWORD PTR ds:[rsi]
   140009144:	jo     0x1400091bf
   140009146:	rex.RB js 0x140009169
   140009149:	data16 (bad) 
   14000914b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009153:	and    eax,0xa78
   140009158:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000915a:	ja     0x1400091ca
   14000915c:	ins    BYTE PTR es:[rdi],dx
   14000915d:	outs   dx,DWORD PTR ds:[rsi]
   14000915e:	(bad)  
   14000915f:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x28],0x6e752029
   140009169:	push   0x6c646e61
   14000916e:	gs and BYTE PTR fs:[rbx+0x63],dh
   140009173:	push   0x20656d65
   140009178:	sub    BYTE PTR [rip+0x2e2975],ah        # 0x1402ebaf3
   14000917e:	add    BYTE PTR [rax],al
   140009180:	rex.RB jbe 0x1400091e8
   140009183:	outs   dx,BYTE PTR ds:[rsi]
   140009184:	je     0x1400091cc
   140009186:	jne    0x1400091f6
   140009188:	movsxd ebp,DWORD PTR [rax]
   14000918a:	sub    DWORD PTR [rax],esp
   14000918c:	fs ja  0x1400091d2
   14000918f:	outs   dx,DWORD PTR ds:[rsi]
   140009190:	ins    DWORD PTR es:[rdi],dx
   140009191:	jo     0x1400091ff
   140009193:	gs je  0x1400091fb
   140009196:	fs cmp eax,0x202c7525
   14000919c:	fs ja  0x1400091f3
   14000919f:	outs   dx,DWORD PTR ds:[rsi]
   1400091a0:	je     0x140009203
   1400091a2:	ins    BYTE PTR es:[rdi],dx
   1400091a3:	cmp    eax,0x2e7525
	...
   1400091b0:	push   rax
   1400091b1:	jb     0x140009222
   1400091b3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400091b6:	jae    0x1400091fb
   1400091b8:	(bad)  
   1400091b9:	(bad)  
   1400091ba:	imul   ebp,DWORD PTR [rsi+0x65],0x20292874
   1400091c1:	rex.RX
   1400091c2:	rex.R
   1400091c3:	rex.WB
   1400091c4:	rex.XB jb 0x14000922c
   1400091c7:	(bad)  
   1400091c8:	je     0x14000922f
   1400091ca:	sub    BYTE PTR [rcx],ch
   1400091cc:	and    BYTE PTR [rsi+0x61],ah
   1400091cf:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4566202c
   1400091d7:	jb     0x14000924b
   1400091d9:	outs   dx,DWORD PTR ds:[rsi]
   1400091da:	jb     0x140009219
   1400091dc:	and    eax,0x65202c75
   1400091e1:	jb     0x140009249
   1400091e3:	rex.WRXB jo 0x14000924b
   1400091e6:	jb     0x140009225
   1400091e8:	and    eax,0x65202c75
   1400091ed:	jb     0x140009255
   1400091ef:	push   rsp
   1400091f0:	jns    0x140009262
   1400091f2:	gs cmp eax,0x2e7525
	...
   140009200:	push   rax
   140009201:	jb     0x140009272
   140009203:	movsxd esp,DWORD PTR [rbp+0x73]
   140009206:	jae    0x14000924b
   140009208:	(bad)  
   140009209:	(bad)  
   14000920a:	imul   ebp,DWORD PTR [rsi+0x65],0x20292874
   140009211:	rex.RX
   140009212:	rex.R
   140009213:	rex.WB
   140009214:	rex.WB jae 0x14000925a
   140009217:	(bad)  
   140009218:	(bad)  
   140009219:	imul   ebp,DWORD PTR [rsi+0x65],0x20292874
   140009220:	data16 (bad) 
   140009222:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4566202c
   14000922a:	jb     0x14000929e
   14000922c:	outs   dx,DWORD PTR ds:[rsi]
   14000922d:	jb     0x14000926c
   14000922f:	and    eax,0x65202c75
   140009234:	jb     0x14000929c
   140009236:	rex.WRXB jo 0x14000929e
   140009239:	jb     0x140009278
   14000923b:	and    eax,0x65202c75
   140009240:	jb     0x1400092a8
   140009242:	push   rsp
   140009243:	jns    0x1400092b5
   140009245:	gs cmp eax,0x2e7525
   14000924b:	add    BYTE PTR [rax],al
   14000924d:	add    BYTE PTR [rax],al
   14000924f:	add    BYTE PTR [rax+0x72],dl
   140009252:	outs   dx,DWORD PTR ds:[rsi]
   140009253:	movsxd esp,DWORD PTR [rbp+0x73]
   140009256:	jae    0x14000929b
   140009258:	(bad)  
   140009259:	(bad)  
   14000925a:	imul   ebp,DWORD PTR [rsi+0x65],0x20292874
   140009261:	rex.RX
   140009262:	rex.R
   140009263:	rex.WB
   140009264:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009266:	jo     0x1400092e1
   140009268:	sub    BYTE PTR [rcx],ch
   14000926a:	and    BYTE PTR [rsi+0x61],ah
   14000926d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4566202c
   140009275:	jb     0x1400092e9
   140009277:	outs   dx,DWORD PTR ds:[rsi]
   140009278:	jb     0x1400092b7
   14000927a:	and    eax,0x65202c75
   14000927f:	jb     0x1400092e7
   140009281:	rex.WRXB jo 0x1400092e9
   140009284:	jb     0x1400092c3
   140009286:	and    eax,0x65202c75
   14000928b:	jb     0x1400092f3
   14000928d:	push   rsp
   14000928e:	jns    0x140009300
   140009290:	gs cmp eax,0x2e7525
   140009296:	add    BYTE PTR [rax],al
   140009298:	push   rax
   140009299:	jb     0x14000930a
   14000929b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000929e:	jae    0x1400092e3
   1400092a0:	(bad)  
   1400092a1:	(bad)  
   1400092a2:	imul   ebp,DWORD PTR [rsi+0x65],0x20292874
   1400092a9:	rex.RX
   1400092aa:	rex.R
   1400092ab:	rex.WB
   1400092ac:	rex.R
   1400092ad:	gs jae 0x140009324
   1400092b0:	jb     0x140009321
   1400092b2:	jns    0x1400092dc
   1400092b4:	sub    DWORD PTR [rax],esp
   1400092b6:	data16 (bad) 
   1400092b8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e
   1400092c0:	sub    al,BYTE PTR [rax]
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	add    BYTE PTR [rax],al
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	pop    rdx
   1400092c9:	(bad)  
   1400092ca:	jo     0x140009310
   1400092cc:	imul   esi,DWORD PTR [rdx+0x28],0x69462029
   1400092d3:	outs   dx,BYTE PTR ds:[rsi]
   1400092d4:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   1400092dd:	sub    BYTE PTR gs:[rcx],ch
   1400092e0:	and    BYTE PTR [rsi+0x61],ah
   1400092e3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400092eb:	rex.RB cmp eax,0x2e7525
   1400092f1:	add    BYTE PTR [rax],al
   1400092f3:	add    BYTE PTR [rax],al
   1400092f5:	add    BYTE PTR [rax],al
   1400092f7:	add    BYTE PTR [rdx+0x61],bl
   1400092fa:	jo     0x140009340
   1400092fc:	imul   esi,DWORD PTR [rdx+0x28],0x73702029
   140009303:	jp     0x140009349
   140009305:	imul   esi,DWORD PTR [rdx+0x3d],0x632b7325
   14000930c:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3d656d61
   140009315:	and    eax,0x78652073
   14000931a:	movsxd esp,DWORD PTR [rbp+0x65]
   14000931d:	fs jae 0x140009340
   140009320:	and    eax,0x2e002e75
   140009325:	add    BYTE PTR [rax],al
   140009327:	add    BYTE PTR [rsi],ch
   140009329:	add    BYTE PTR cs:[rax],al
   14000932c:	add    BYTE PTR [rax],al
   14000932e:	add    BYTE PTR [rax],al
   140009330:	pop    rdx
   140009331:	(bad)  
   140009332:	jo     0x140009378
   140009334:	imul   esi,DWORD PTR [rdx+0x28],0x65532029
   14000933b:	je     0x140009383
   14000933d:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140009345:	(bad)  
   140009346:	jne    0x1400093bc
   140009348:	gs jae 0x140009373
   14000934b:	jae    0x1400093c7
   14000934d:	push   rsp
   14000934e:	ins    DWORD PTR es:[rdi],dx
   14000934f:	jo     0x14000938e
   140009351:	and    eax,0x66202973
   140009356:	(bad)  
   140009357:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000935f:	rex.RB cmp eax,0x2e7525
   140009365:	add    BYTE PTR [rax],al
   140009367:	add    BYTE PTR [rdx+0x61],bl
   14000936a:	jo     0x1400093b0
   14000936c:	imul   esi,DWORD PTR [rdx+0x28],0x65442029
   140009373:	ins    BYTE PTR es:[rdi],dx
   140009374:	gs je  0x1400093dc
   140009377:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x6d547a73
   140009380:	jo     0x1400093bf
   140009382:	and    eax,0x66202973
   140009387:	(bad)  
   140009388:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009390:	rex.RB cmp eax,0x2e7525
   140009396:	add    BYTE PTR [rax],al
   140009398:	pop    rdx
   140009399:	(bad)  
   14000939a:	jo     0x1400093e0
   14000939c:	imul   esi,DWORD PTR [rdx+0x28],0x69462029
   1400093a3:	outs   dx,BYTE PTR ds:[rsi]
   1400093a4:	fs rex.WRX
   1400093a6:	gs js  0x14000941d
   1400093a9:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x61662029
   1400093b2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400093ba:	rex.RB cmp eax,0x2e7525
   1400093c0:	pop    rdx
   1400093c1:	(bad)  
   1400093c2:	jo     0x140009408
   1400093c4:	imul   esi,DWORD PTR [rdx+0x28],0x69462029
   1400093cb:	outs   dx,BYTE PTR ds:[rsi]
   1400093cc:	fs rex.XB ins BYTE PTR es:[rdi],dx
   1400093cf:	outs   dx,DWORD PTR ds:[rsi]
   1400093d0:	jae    0x140009437
   1400093d2:	sub    BYTE PTR [rcx],ch
   1400093d4:	and    BYTE PTR [rsi+0x61],ah
   1400093d7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400093df:	rex.RB cmp eax,0x2e7525
   1400093e5:	add    BYTE PTR [rax],al
   1400093e7:	add    BYTE PTR [rdx+0x61],bl
   1400093ea:	jo     0x140009430
   1400093ec:	imul   esi,DWORD PTR [rdx+0x28],0x65522029
   1400093f3:	ins    DWORD PTR es:[rdi],dx
   1400093f4:	outs   dx,DWORD PTR ds:[rsi]
   1400093f5:	jbe    0x14000945c
   1400093f7:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   1400093ff:	jns    0x140009429
   140009401:	jo     0x140009476
   140009403:	jp     0x140009449
   140009405:	imul   esi,DWORD PTR [rdx+0x3d],0x20297325
   14000940c:	data16 (bad) 
   14000940e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009416:	rex.RB cmp eax,0x2e7525
   14000941c:	add    BYTE PTR [rax],al
   14000941e:	add    BYTE PTR [rax],al
   140009420:	rex.R outs dx,DWORD PTR ds:[rsi]
   140009422:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009424:	jae    0x14000949a
   140009426:	(bad)  
   140009427:	ins    BYTE PTR es:[rdi],dx
   140009428:	ins    BYTE PTR es:[rdi],dx
   140009429:	sub    BYTE PTR [rcx],ch
   14000942b:	and    BYTE PTR [rax+0x68],dl
   14000942e:	outs   dx,DWORD PTR ds:[rsi]
   14000942f:	outs   dx,BYTE PTR ds:[rsi]
   140009430:	rex.X outs dx,DWORD PTR gs:[rsi]
   140009433:	outs   dx,DWORD PTR ds:[rsi]
   140009434:	imul   ecx,DWORD PTR [rdi+rbp*2+0x61],0x64
   140009439:	sub    BYTE PTR [rax+0x73],dh
   14000943c:	jp     0x140009481
   14000943e:	rex.WRB push r11
   140009440:	imul   r13d,DWORD PTR [rbp+r12*2+0x3d],0x20297325
   140009449:	data16 (bad) 
   14000944b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009453:	rex.RB cmp eax,0x2e7525
   140009459:	add    BYTE PTR [rax],al
   14000945b:	add    BYTE PTR [rax],al
   14000945d:	add    BYTE PTR [rax],al
   14000945f:	add    BYTE PTR [rdi+rbp*2+0x49],al
   140009463:	outs   dx,BYTE PTR ds:[rsi]
   140009464:	jae    0x1400094da
   140009466:	(bad)  
   140009467:	ins    BYTE PTR es:[rdi],dx
   140009468:	ins    BYTE PTR es:[rdi],dx
   140009469:	sub    BYTE PTR [rcx],ch
   14000946b:	and    BYTE PTR [rip+0x72745320],ch        # 0x1b274e791
   140009471:	imul   ebp,DWORD PTR [rsi+0x67],0x50686343
   140009478:	jb     0x1400094e3
   14000947a:	outs   dx,BYTE PTR ds:[rsi]
   14000947b:	je     0x1400094e3
   14000947d:	and    BYTE PTR [rsi+0x61],ah
   140009480:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009488:	and    eax,0xa78
   14000948d:	add    BYTE PTR [rax],al
   14000948f:	add    BYTE PTR [rdi+rbp*2+0x49],al
   140009493:	outs   dx,BYTE PTR ds:[rsi]
   140009494:	jae    0x14000950a
   140009496:	(bad)  
   140009497:	ins    BYTE PTR es:[rdi],dx
   140009498:	ins    BYTE PTR es:[rdi],dx
   140009499:	sub    BYTE PTR [rcx],ch
   14000949b:	and    BYTE PTR [rax+0x68],dl
   14000949e:	outs   dx,DWORD PTR ds:[rsi]
   14000949f:	outs   dx,BYTE PTR ds:[rsi]
   1400094a0:	rex.X outs dx,DWORD PTR gs:[rsi]
   1400094a3:	outs   dx,DWORD PTR ds:[rsi]
   1400094a4:	imul   ecx,DWORD PTR [rbp+0x65],0x72
   1400094a8:	addr32 gs rex.XB push 0x65676e61
   1400094b0:	jae    0x1400094da
   1400094b2:	sub    DWORD PTR [rax],esp
   1400094b4:	data16 (bad) 
   1400094b6:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400094be:	rex.RB cmp eax,0x2e7525
   1400094c4:	add    BYTE PTR [rax],al
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400094ca:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400094cc:	jae    0x140009542
   1400094ce:	(bad)  
   1400094cf:	ins    BYTE PTR es:[rdi],dx
   1400094d0:	ins    BYTE PTR es:[rdi],dx
   1400094d1:	sub    BYTE PTR [rcx],ch
   1400094d3:	and    BYTE PTR [rax+0x68],dl
   1400094d6:	outs   dx,DWORD PTR ds:[rsi]
   1400094d7:	outs   dx,BYTE PTR ds:[rsi]
   1400094d8:	rex.X outs dx,DWORD PTR gs:[rsi]
   1400094db:	outs   dx,DWORD PTR ds:[rsi]
   1400094dc:	imul   edx,DWORD PTR [rbp+0x6e],0x6c
   1400094e0:	outs   dx,DWORD PTR ds:[rsi]
   1400094e1:	(bad)  
   1400094e2:	sub    BYTE PTR fs:[rcx],ch
   1400094e5:	and    BYTE PTR [rsi+0x61],ah
   1400094e8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400094f0:	rex.RB cmp eax,0x2e7525
   1400094f6:	add    BYTE PTR [rax],al
   1400094f8:	xor    BYTE PTR [rax],al
   1400094fa:	add    BYTE PTR [rax],al
   1400094fc:	add    BYTE PTR [rax],al
   1400094fe:	add    BYTE PTR [rax],al
   140009500:	rex.R outs dx,DWORD PTR ds:[rsi]
   140009502:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009504:	jae    0x14000957a
   140009506:	(bad)  
   140009507:	ins    BYTE PTR es:[rdi],dx
   140009508:	ins    BYTE PTR es:[rdi],dx
   140009509:	sub    BYTE PTR [rcx],ch
   14000950b:	and    BYTE PTR [rip+0x72745320],ch        # 0x1b274e831
   140009511:	imul   ebp,DWORD PTR [rsi+0x67],0x50686343
   140009518:	jb     0x140009583
   14000951a:	outs   dx,BYTE PTR ds:[rsi]
   14000951b:	je     0x140009583
   14000951d:	and    BYTE PTR [rsi+0x61],ah
   140009520:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009528:	and    eax,0x78
   14000952d:	add    BYTE PTR [rax],al
   14000952f:	add    BYTE PTR [rdi+rbp*2+0x49],al
   140009533:	outs   dx,BYTE PTR ds:[rsi]
   140009534:	jae    0x1400095aa
   140009536:	(bad)  
   140009537:	ins    BYTE PTR es:[rdi],dx
   140009538:	ins    BYTE PTR es:[rdi],dx
   140009539:	sub    BYTE PTR [rcx],ch
   14000953b:	and    BYTE PTR [rcx+0x74],ch
   14000953e:	push   rax
   14000953f:	(bad)  
   140009540:	imul   ecx,DWORD PTR [rcx+0x6e],0x43
   140009544:	(bad)  
   140009545:	(bad)  
   140009546:	sub    al,0x20
   140009548:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000954a:	jo     0x1400095c5
   14000954c:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x61662029
   140009555:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000955d:	rex.RB cmp eax,0x2e7525
   140009563:	add    BYTE PTR [rax],al
   140009565:	add    BYTE PTR [rax],al
   140009567:	add    BYTE PTR [rdi+rbp*2+0x49],al
   14000956b:	outs   dx,BYTE PTR ds:[rsi]
   14000956c:	jae    0x1400095e2
   14000956e:	(bad)  
   14000956f:	ins    BYTE PTR es:[rdi],dx
   140009570:	ins    BYTE PTR es:[rdi],dx
   140009571:	sub    BYTE PTR [rcx],ch
   140009573:	and    BYTE PTR [rcx+0x74],ch
   140009576:	push   rax
   140009577:	(bad)  
   140009579:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000957b:	rex.XB (bad) 
   14000957d:	(bad)  
   14000957e:	sub    al,0x20
   140009580:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009582:	jo     0x1400095fd
   140009584:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x61662029
   14000958d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009595:	rex.RB cmp eax,0x2e7525
   14000959b:	add    BYTE PTR [rdx],dh
   14000959d:	xor    BYTE PTR [rax+rax*1],dh
   1400095a0:	rex.WRB push r11
   1400095a2:	rex.XB add BYTE PTR [r8],al
   1400095a5:	add    BYTE PTR [rax],al
   1400095a7:	add    BYTE PTR [rcx+0x73],cl
   1400095aa:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400095ac:	outs   dx,BYTE PTR ds:[rsi]
   1400095ad:	outs   dx,BYTE PTR ds:[rsi]
   1400095ae:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400095b3:	outs   dx,BYTE PTR ds:[rsi]
   1400095b4:	rex.B ins BYTE PTR es:[rdi],dx
   1400095b6:	imul   esi,DWORD PTR [rsi+0x65],0x66202928
   1400095bd:	(bad)  
   1400095be:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x754f202e
   1400095c6:	je     0x1400095e8
   1400095c8:	outs   dx,DWORD PTR ds:[rsi]
   1400095c9:	data16 and BYTE PTR [rbp+0x65],ch
   1400095cd:	ins    DWORD PTR es:[rdi],dx
   1400095ce:	outs   dx,DWORD PTR ds:[rsi]
   1400095cf:	jb     0x14000964a
   1400095d1:	add    BYTE PTR [rax],al
   1400095d3:	add    BYTE PTR [rax],al
   1400095d5:	add    BYTE PTR [rax],al
   1400095d7:	add    BYTE PTR [rcx+0x6e],cl
   1400095da:	gs je  0x140009631
   1400095dd:	push   0x64616572
   1400095e2:	rex.RX jne 0x140009653
   1400095e5:	movsxd ebp,DWORD PTR [rax]
   1400095e7:	sub    DWORD PTR [rax],esp
   1400095e9:	push   rdi
   1400095ea:	(bad)  
   1400095eb:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6c754d72
   1400095f3:	je     0x14000965e
   1400095f5:	jo     0x140009663
   1400095f7:	gs rex.WRXB (bad) 
   1400095fa:	push   0x65
   1400095fc:	movsxd esi,DWORD PTR [rbx+rsi*2+0x28]
   140009600:	sub    DWORD PTR [rax],esp
   140009602:	data16 (bad) 
   140009604:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000960c:	rex.RB cmp eax,0x2e7525
   140009612:	add    BYTE PTR [rax],al
   140009614:	add    BYTE PTR [rax],al
   140009616:	add    BYTE PTR [rax],al
   140009618:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000961a:	gs je  0x140009671
   14000961d:	push   0x64616572
   140009622:	rex.RX jne 0x140009693
   140009625:	movsxd ebp,DWORD PTR [rax]
   140009627:	sub    DWORD PTR [rax],esp
   140009629:	(bad)  
   14000962a:	(bad)  
   14000962b:	outs   dx,DWORD PTR ds:[rsi]
   14000962c:	jb     0x1400096a2
   14000962e:	gs fs and BYTE PTR cs:[rsi+0x6f],cl
   140009634:	and    BYTE PTR [rbx+0x6f],ah
   140009637:	outs   dx,BYTE PTR ds:[rsi]
   140009638:	outs   dx,BYTE PTR ds:[rsi]
   140009639:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000963e:	outs   dx,BYTE PTR ds:[rsi]
   14000963f:	add    BYTE PTR [rcx+0x6e],cl
   140009642:	gs je  0x140009699
   140009645:	push   0x64616572
   14000964a:	rex.RX jne 0x1400096bb
   14000964d:	movsxd ebp,DWORD PTR [rax]
   14000964f:	sub    DWORD PTR [rax],esp
   140009651:	(bad)  
   140009652:	(bad)  
   140009653:	outs   dx,DWORD PTR ds:[rsi]
   140009654:	jb     0x1400096ca
   140009656:	gs fs add BYTE PTR cs:[rax],al
   14000965b:	add    BYTE PTR [rax],al
   14000965d:	add    BYTE PTR [rax],al
   14000965f:	add    BYTE PTR [rcx+0x6e],cl
   140009662:	gs je  0x1400096b9
   140009665:	push   0x64616572
   14000966a:	rex.RX jne 0x1400096db
   14000966d:	movsxd ebp,DWORD PTR [rax]
   14000966f:	sub    DWORD PTR [rax],esp
   140009671:	rex.RXB
   140009672:	gs je  0x1400096c9
   140009675:	gs ins DWORD PTR es:[rdi],dx
   140009677:	jo     0x1400096c9
   140009679:	(bad)  
   14000967a:	je     0x1400096e4
   14000967c:	and    BYTE PTR [rsi+0x61],ah
   14000967f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009687:	rex.RB cmp eax,0x2e7525
   14000968d:	add    BYTE PTR [rax],al
   14000968f:	add    BYTE PTR [rax],dh
   140009691:	xor    BYTE PTR [rax],dh
   140009693:	add    BYTE PTR [rax],al
   140009695:	add    BYTE PTR [rax],al
   140009697:	add    BYTE PTR [rcx+0x6e],cl
   14000969a:	gs je  0x1400096f1
   14000969d:	push   0x64616572
   1400096a2:	rex.RX jne 0x140009713
   1400096a5:	movsxd ebp,DWORD PTR [rax]
   1400096a7:	sub    DWORD PTR [rax],esp
   1400096a9:	rex.RXB
   1400096aa:	gs je  0x140009701
   1400096ad:	gs ins DWORD PTR es:[rdi],dx
   1400096af:	jo     0x1400096f7
   1400096b1:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x20656d61
   1400096b9:	data16 (bad) 
   1400096bb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400096c3:	rex.RB cmp eax,0x2e7525
   1400096c9:	add    BYTE PTR [rax],al
   1400096cb:	add    BYTE PTR [rax],al
   1400096cd:	add    BYTE PTR [rax],al
   1400096cf:	add    BYTE PTR [rcx+0x6e],cl
   1400096d2:	gs je  0x140009729
   1400096d5:	push   0x64616572
   1400096da:	rex.RX jne 0x14000974b
   1400096dd:	movsxd ebp,DWORD PTR [rax]
   1400096df:	sub    DWORD PTR [rax],esp
   1400096e1:	rex.XB jb 0x140009749
   1400096e4:	(bad)  
   1400096e5:	je     0x14000974c
   1400096e7:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x69467a73
   1400096f0:	ins    BYTE PTR es:[rdi],dx
   1400096f1:	gs cmp eax,0x20297325
   1400096f7:	data16 (bad) 
   1400096f9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009701:	rex.RB cmp eax,0x2e7525
   140009707:	add    BYTE PTR [rax],ch
   140009709:	outs   dx,BYTE PTR ds:[rsi]
   14000970a:	outs   dx,DWORD PTR ds:[rsi]
   14000970b:	outs   dx,BYTE PTR ds:[rsi]
   14000970c:	sub    DWORD PTR gs:[rax],eax
   14000970f:	add    BYTE PTR [rcx+0x6e],cl
   140009712:	gs je  0x140009769
   140009715:	push   0x64616572
   14000971a:	rex.RX jne 0x14000978b
   14000971d:	movsxd ebp,DWORD PTR [rax]
   14000971f:	sub    DWORD PTR [rax],esp
   140009721:	outs   dx,BYTE PTR ds:[rsi]
   140009722:	outs   dx,DWORD PTR ds:[rsi]
   140009723:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   140009727:	outs   dx,BYTE PTR ds:[rsi]
   140009728:	ins    BYTE PTR es:[rdi],dx
   140009729:	outs   dx,DWORD PTR ds:[rsi]
   14000972a:	(bad)  
   14000972b:	and    BYTE PTR fs:[rbx+0x75],dh
   14000972f:	movsxd esp,DWORD PTR [rbx+0x65]
   140009732:	jae    0x1400097a7
   140009734:	add    BYTE PTR cs:[rax],al
   140009737:	add    BYTE PTR [rbp+0x61],cl
   14000973a:	imul   ebp,DWORD PTR [rsi+0x44],0x7250676c
   140009741:	outs   dx,DWORD PTR ds:[rsi]
   140009742:	movsxd ebp,DWORD PTR [rax]
   140009744:	sub    DWORD PTR [rax],esp
   140009746:	sub    eax,0x5f4d5720
   14000974b:	rex.WB
   14000974c:	rex.WRX
   14000974d:	rex.WB push r12
   14000974f:	rex.R
   140009750:	rex.WB
   140009751:	rex.B
   140009752:	rex.WR
   140009753:	rex.WRXB
   140009754:	rex.RXB
   140009755:	add    BYTE PTR cs:[rax],al
   140009758:	rex.WRB (bad) 
   14000975a:	imul   ebp,DWORD PTR [rsi+0x44],0x7250676c
   140009761:	outs   dx,DWORD PTR ds:[rsi]
   140009762:	movsxd ebp,DWORD PTR [rax]
   140009764:	sub    DWORD PTR [rax],esp
   140009766:	rex.XB jb 0x1400097ce
   140009769:	(bad)  
   14000976a:	je     0x1400097d1
   14000976c:	rex.RB jbe 0x1400097d4
   14000976f:	outs   dx,BYTE PTR ds:[rsi]
   140009770:	je     0x14000979a
   140009772:	sub    DWORD PTR [rax],esp
   140009774:	data16 (bad) 
   140009776:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000977e:	rex.RB cmp eax,0x2e7525
   140009784:	add    BYTE PTR [rax],al
   140009786:	add    BYTE PTR [rax],al
   140009788:	rex.WRB (bad) 
   14000978a:	imul   ebp,DWORD PTR [rsi+0x44],0x7250676c
   140009791:	outs   dx,DWORD PTR ds:[rsi]
   140009792:	movsxd ebp,DWORD PTR [rax]
   140009794:	sub    DWORD PTR [rax],esp
   140009796:	rex.XB jb 0x1400097fe
   140009799:	(bad)  
   14000979a:	je     0x140009801
   14000979c:	push   rsp
   14000979d:	push   0x64616572
   1400097a2:	sub    BYTE PTR [rcx],ch
   1400097a4:	and    BYTE PTR [rsi+0x61],ah
   1400097a7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   1400097af:	rex.RB cmp eax,0x2e7525
   1400097b5:	add    BYTE PTR [rax],al
   1400097b7:	add    BYTE PTR [rbp+0x61],cl
   1400097ba:	imul   ebp,DWORD PTR [rsi+0x44],0x7250676c
   1400097c1:	outs   dx,DWORD PTR ds:[rsi]
   1400097c2:	movsxd esp,DWORD PTR [rax]
   1400097c4:	sub    eax,0x6f47202d
   1400097c9:	je     0x1400097eb
   1400097cb:	push   rdi
   1400097cc:	rex.WRB pop r15
   1400097ce:	push   rcx
   1400097cf:	push   rbp
   1400097d0:	rex.RB push r10
   1400097d2:	pop    rcx
   1400097d3:	rex.RB
   1400097d4:	rex.WRX
   1400097d5:	rex.R push rbx
   1400097d7:	rex.RB push r11
   1400097d9:	push   rbx
   1400097da:	rex.WB
   1400097db:	rex.WRXB
   1400097dc:	rex.WRX and BYTE PTR [rbp+0x65],r13b
   1400097e0:	jae    0x140009855
   1400097e2:	(bad)  
   1400097e3:	add    BYTE PTR gs:[eax],al
   1400097e7:	add    BYTE PTR [rbp+0x61],cl
   1400097ea:	imul   ebp,DWORD PTR [rsi+0x44],0x7250676c
   1400097f1:	outs   dx,DWORD PTR ds:[rsi]
   1400097f2:	movsxd esp,DWORD PTR [rax]
   1400097f4:	sub    eax,0x6f47202d
   1400097f9:	je     0x14000981b
   1400097fb:	push   rdi
   1400097fc:	rex.WRB pop r15
   1400097fe:	rex.RB
   1400097ff:	rex.WRX
   140009800:	rex.R push rbx
   140009802:	rex.RB push r11
   140009804:	push   rbx
   140009805:	rex.WB
   140009806:	rex.WRXB
   140009807:	rex.WRX and BYTE PTR [rbp+0x65],r13b
   14000980b:	jae    0x140009880
   14000980d:	(bad)  
   14000980e:	add    BYTE PTR gs:[eax],al
   140009812:	add    BYTE PTR [rax],al
   140009814:	add    BYTE PTR [rax],al
   140009816:	add    BYTE PTR [rax],al
   140009818:	rex.XB jne 0x14000988e
   14000981b:	je     0x14000988c
   14000981d:	ins    DWORD PTR es:[rdi],dx
   14000981e:	and    BYTE PTR [rcx+0x72],ah
   140009821:	and    BYTE PTR [eip+0x20752520],ch        # 0x16075bd48
   140009828:	jb     0x14000988f
   14000982a:	movsxd esp,DWORD PTR [rbp+0x69]
   14000982d:	jbe    0x140009894
   14000982f:	fs add BYTE PTR cs:[rax],al
   140009833:	add    BYTE PTR [rax],al
   140009835:	add    BYTE PTR [rax],al
   140009837:	add    BYTE PTR [rbx+0x65],dl
   14000983a:	je     0x1400098b0
   14000983c:	imul   ebp,DWORD PTR [rsi+0x67],0x72694620
   140009843:	jae    0x1400098b9
   140009845:	rex.RB jbe 0x1400098ad
   140009848:	outs   dx,BYTE PTR ds:[rsi]
   140009849:	je     0x14000989f
   14000984b:	imul   ebp,DWORD PTR [rbp+0x65],0x206f7420
   140009852:	and    eax,0x2e75
   140009857:	add    BYTE PTR [rax+0x69],cl
   14000985a:	fs gs rex.R
   14000985d:	gs ins BYTE PTR es:[rdi],dx
   14000985f:	(bad)  
   140009860:	jns    0x140009882
   140009862:	outs   dx,DWORD PTR ds:[rsi]
   140009863:	data16 and BYTE PTR [rip+0x78652075],ah        # 0x1b865b8df
   14000986a:	jo     0x1400098d5
   14000986c:	jb     0x1400098d3
   14000986e:	fs sub al,0x20
   140009871:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6979616c
   140009879:	outs   dx,BYTE PTR ds:[rsi]
   14000987a:	and    BYTE PTR [esp+ebp*2+0x67],ah
   14000987f:	and    BYTE PTR [rsi+0x6f],ch
   140009882:	ja     0x1400098b2
   140009884:	add    BYTE PTR [rax],al
   140009886:	add    BYTE PTR [rax],al
   140009888:	(bad)  
   140009889:	add    BYTE PTR [rax],al
   14000988b:	add    BYTE PTR [rax],al
   14000988d:	add    BYTE PTR [rax],al
   14000988f:	add    BYTE PTR [rcx+0x64],al
   140009892:	fs push rsp
   140009894:	outs   dx,DWORD PTR ds:[rsi]
   140009895:	push   rbp
   140009896:	jb     0x140009904
   140009898:	sub    BYTE PTR [rcx],ch
   14000989a:	and    BYTE PTR [rip+0x72745320],ch        # 0x1b274ebc0
   1400098a0:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   1400098a7:	(bad)  
   1400098a8:	je     0x1400098ef
   1400098aa:	js     0x1400098cc
   1400098ac:	data16 (bad) 
   1400098ae:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   1400098b6:	and    eax,0x78
   1400098bb:	add    BYTE PTR [rsi],ah
   1400098bd:	add    BYTE PTR [rax],al
   1400098bf:	add    BYTE PTR [rdi],dh
   1400098c1:	xor    BYTE PTR cs:[rdx],dh
   1400098c4:	xor    DWORD PTR cs:[rax],esi
   1400098c7:	xor    BYTE PTR [rcx],dh
   1400098c9:	xor    DWORD PTR [rsi],ebp
   1400098cb:	xor    DWORD PTR [rsi],esi
   1400098cd:	xor    eax,0x3630
   1400098d2:	add    BYTE PTR [rax],al
   1400098d4:	add    BYTE PTR [rax],al
   1400098d6:	add    BYTE PTR [rax],al
   1400098d8:	rex.WRXB push r11
   1400098da:	rex.B jb 0x140009940
   1400098dd:	push   0x2675253d
   1400098e2:	rex.WRXB push r11
   1400098e4:	push   rsp
   1400098e5:	jns    0x140009957
   1400098e7:	gs cmp eax,0x4c267525
   1400098ed:	rex.XB
   1400098ee:	rex.WB
   1400098ef:	rex.R cmp eax,0x4f267525
   1400098f5:	push   rbx
   1400098f6:	push   rsi
   1400098f7:	gs jb  0x140009937
   1400098fa:	and    eax,0x75252e75
   1400098ff:	cs and eax,0x4d432675
   140009905:	push   rsi
   140009906:	gs jb  0x140009946
   140009909:	and    eax,0x73
   14000990e:	add    BYTE PTR [rax],al
   140009910:	rex.B
   140009911:	fs fs push rsp
   140009914:	outs   dx,DWORD PTR ds:[rsi]
   140009915:	push   rbp
   140009916:	jb     0x140009984
   140009918:	sub    BYTE PTR [rcx],ch
   14000991a:	and    BYTE PTR [rip+0x72745320],ch        # 0x1b274ec40
   140009920:	imul   ebp,DWORD PTR [rsi+0x67],0x50686343
   140009927:	jb     0x140009992
   140009929:	outs   dx,BYTE PTR ds:[rsi]
   14000992a:	je     0x140009992
   14000992c:	rex.RB js 0x14000994f
   14000992f:	data16 (bad) 
   140009931:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009939:	and    eax,0xa78
   14000993e:	add    BYTE PTR [rax],al
   140009940:	es push rax
   140009942:	rex.X push rsi
   140009944:	gs jb  0x140009984
   140009947:	and    eax,0x73
   14000994c:	and    eax,0x41003032
   140009951:	fs fs push rsp
   140009954:	outs   dx,DWORD PTR ds:[rsi]
   140009955:	push   rbp
   140009956:	jb     0x1400099c4
   140009958:	sub    BYTE PTR [rcx],ch
   14000995a:	and    BYTE PTR [rip+0x72745320],ch        # 0x1b274ec80
   140009960:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   140009967:	(bad)  
   140009968:	je     0x14000998a
   14000996a:	data16 (bad) 
   14000996c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009974:	and    eax,0x26000a78
   140009979:	push   rax
   14000997a:	rex.X cmp eax,0x7325
   140009980:	push   rdx
   140009981:	gs data16 rex.RX jne 0x1400099f4
   140009986:	movsxd ebp,DWORD PTR [rax]
   140009988:	sub    DWORD PTR [rax],esp
   14000998a:	(bad)
   14000998f:	rex.X
   140009990:	rex.WXB and BYTE PTR [r14+0x49],al
   140009994:	rex.WR
   140009995:	and    BYTE PTR [rip+0x206f6e20],r13b        # 0x1607007bc
   14000999c:	(bad)  
   14000999e:	movsxd ebp,DWORD PTR [rbx+0x73]
   1400099a1:	ins    BYTE PTR es:[rdi],dx
   1400099a2:	(bad)  
   1400099a3:	jae    0x140009a0d
   1400099a5:	add    BYTE PTR cs:[rax],al
   1400099a8:	push   rdx
   1400099a9:	gs data16 data16 jne 0x140009a1c
   1400099ae:	movsxd ebp,DWORD PTR [rax]
   1400099b0:	sub    DWORD PTR [rax],esp
   1400099b2:	(bad)
   1400099b7:	rex.X
   1400099b8:	rex.WXB and BYTE PTR [r14+0x49],al
   1400099bc:	rex.WR
   1400099bd:	and    BYTE PTR [rip+0x206f6e20],r13b        # 0x1607007e4
   1400099c4:	outs   dx,DWORD PTR fs:[rsi]
   1400099c6:	je     0x1400099f6
	...
   1400099d0:	push   rdx
   1400099d1:	gs data16 data16 jne 0x140009a44
   1400099d6:	movsxd ebp,DWORD PTR [rax]
   1400099d8:	sub    DWORD PTR [rax],esp
   1400099da:	outs   dx,DWORD PTR ds:[rsi]
   1400099db:	jne    0x140009a51
   1400099dd:	and    BYTE PTR [rdi+0x66],ch
   1400099e0:	and    BYTE PTR [rbp+0x65],ch
   1400099e3:	ins    DWORD PTR es:[rdi],dx
   1400099e4:	outs   dx,DWORD PTR ds:[rsi]
   1400099e5:	jb     0x140009a60
   1400099e7:	add    BYTE PTR cs:[rax],al
   1400099ea:	add    BYTE PTR [rax],al
   1400099ec:	add    BYTE PTR [rax],al
   1400099ee:	add    BYTE PTR [rax],al
   1400099f0:	push   rdx
   1400099f1:	gs data16 rex.RX jne 0x140009a59
   1400099f6:	sub    BYTE PTR [rcx],ch
   1400099f8:	and    BYTE PTR [rip+0x72745320],ch        # 0x1b274ed1e
   1400099fe:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   140009a05:	outs   dx,DWORD PTR ds:[rsi]
   140009a06:	jo     0x140009a81
   140009a08:	rex.RB js 0x140009a2b
   140009a0b:	data16 (bad) 
   140009a0d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009a15:	and    eax,0xa78
   140009a1a:	add    BYTE PTR [rax],al
   140009a1c:	add    BYTE PTR [rax],al
   140009a1e:	add    BYTE PTR [rax],al
   140009a20:	(bad)  
   140009a21:	outs   dx,BYTE PTR ds:[rsi]
   140009a22:	outs   dx,DWORD PTR ds:[rsi]
   140009a23:	pop    rdi
   140009a24:	fs gs ins BYTE PTR es:[rdi],dx
   140009a27:	gs je  0x140009a8f
   140009a2a:	add    BYTE PTR [rax],al
   140009a2c:	add    BYTE PTR [rax],al
   140009a2e:	add    BYTE PTR [rax],al
   140009a30:	(bad)  
   140009a31:	outs   dx,BYTE PTR ds:[rsi]
   140009a32:	outs   dx,DWORD PTR ds:[rsi]
   140009a33:	pop    rdi
   140009a34:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   140009a3b:	add    BYTE PTR [rdi],ch
   140009a3d:	jne    0x140009ab1
   140009a3f:	ins    BYTE PTR es:[rdi],dx
	...
   140009a48:	(bad)  
   140009a49:	outs   dx,BYTE PTR ds:[rsi]
   140009a4a:	outs   dx,DWORD PTR ds:[rsi]
   140009a4b:	pop    rdi
   140009a4c:	jo     0x140009ac0
   140009a4e:	outs   dx,DWORD PTR ds:[rsi]
   140009a4f:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
   140009a56:	add    BYTE PTR [rax],al
   140009a58:	(bad)  
   140009a59:	outs   dx,BYTE PTR ds:[rsi]
   140009a5a:	outs   dx,DWORD PTR ds:[rsi]
   140009a5b:	pop    rdi
   140009a5c:	jbe    0x140009ac3
   140009a5e:	jb     0x140009a60
   140009a60:	(bad)  
   140009a61:	rex.WR
   140009a62:	rex.B
   140009a63:	rex.WRX add BYTE PTR [rax],r8b
   140009a66:	add    BYTE PTR [rax],al
   140009a68:	(bad)  
   140009a69:	push   rsi
   140009a6a:	push   rax
   140009a6b:	rex.WRX add BYTE PTR [rax],r8b
   140009a6e:	add    BYTE PTR [rax],al
   140009a70:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009a72:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009a7a:	and    BYTE PTR [rcx+0x6e],ch
   140009a7d:	jbe    0x140009ae0
   140009a7f:	ins    BYTE PTR es:[rdi],dx
   140009a80:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x6d617261
   140009a88:	gs je  0x140009af0
   140009a8b:	jb     0x140009abb
   140009a8d:	add    BYTE PTR [rax],al
   140009a8f:	add    BYTE PTR [rcx+0x6e],cl
   140009a92:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009a9a:	and    BYTE PTR [rbp+0x52],dl
   140009a9d:	rex.WR and BYTE PTR [rbp+0x78],r12b
   140009aa1:	jo     0x140009b08
   140009aa3:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140009aa7:	and    BYTE PTR [rcx+0x66],ah
   140009aaa:	je     0x140009b11
   140009aac:	jb     0x140009ace
   140009aae:	rex.B
   140009aaf:	rex.RX pop rdi
   140009ab1:	push   rbp
   140009ab2:	push   rdx
   140009ab3:	rex.WR and BYTE PTR [rsi+0x6c],r12b
   140009ab7:	(bad)  
   140009ab8:	add    BYTE PTR cs:[eax],al
   140009abc:	add    BYTE PTR [rax],al
   140009abe:	add    BYTE PTR [rax],al
   140009ac0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009ac2:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009aca:	and    BYTE PTR [rcx+0x72],ah
   140009acd:	addr32 jne 0x140009b3d
   140009ad0:	outs   dx,BYTE PTR gs:[rsi]
   140009ad2:	je     0x140009af4
   140009ad4:	outs   dx,BYTE PTR ds:[rsi]
   140009ad5:	jne    0x140009b44
   140009ad7:	(bad)  
   140009ad8:	gs jb  0x140009afb
   140009adb:	and    eax,0x25282075
   140009ae0:	jae    0x140009b0b
   140009ae2:	and    BYTE PTR [rcx+0x73],ch
   140009ae5:	and    BYTE PTR [rcx+0x6e],ch
   140009ae8:	jbe    0x140009b4b
   140009aea:	ins    BYTE PTR es:[rdi],dx
   140009aeb:	imul   esp,DWORD PTR [rsi+rbp*1+0x0],0x696e4900
   140009af3:	je     0x140009b36
   140009af5:	jb     0x140009b5e
   140009af7:	jae    0x140009b21
   140009af9:	sub    DWORD PTR [rax],esp
   140009afb:	sub    eax,0x72745320
   140009b00:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   140009b07:	outs   dx,DWORD PTR ds:[rsi]
   140009b08:	jo     0x140009b83
   140009b0a:	and    BYTE PTR [rsi+0x61],ah
   140009b0d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009b15:	and    eax,0xa78
   140009b1a:	add    BYTE PTR [rax],al
   140009b1c:	add    BYTE PTR [rax],al
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009b22:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x2d207367
   140009b2a:	and    BYTE PTR [rdi],ch
   140009b2c:	push   rsi
   140009b2d:	push   rax
   140009b2e:	rex.WRX and BYTE PTR [rsi+0x6c],r12b
   140009b32:	(bad)  
   140009b33:	and    BYTE PTR [ebp+eiz*2+0x74],ah
   140009b38:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140009b3d:	and    BYTE PTR [rdi+0x6f],ah
   140009b40:	imul   ebp,DWORD PTR [rsi+0x67],0x746e6920
   140009b47:	outs   dx,DWORD PTR ds:[rsi]
   140009b48:	and    BYTE PTR [rsi+0x50],dl
   140009b4b:	rex.WRX and BYTE PTR [rsi+0x69],r12b
   140009b4f:	ins    BYTE PTR es:[rdi],dx
   140009b50:	and    BYTE PTR gs:[rdi+rbp*2+0x77],ah
   140009b55:	outs   dx,BYTE PTR ds:[rsi]
   140009b56:	ins    BYTE PTR es:[rdi],dx
   140009b57:	outs   dx,DWORD PTR ds:[rsi]
   140009b58:	(bad)  
   140009b59:	and    BYTE PTR fs:[rbp+0x6f],ch
   140009b5d:	fs gs add BYTE PTR cs:[rax],al
	...
   140009b6e:	add    BYTE PTR [rax],al
   140009b70:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009b72:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009b7a:	and    BYTE PTR [rbp+0x75],ch
   140009b7d:	jae    0x140009bf3
   140009b7f:	and    BYTE PTR [rbp+0x73],dh
   140009b82:	and    BYTE PTR gs:[rcx+0x46],al
   140009b86:	pop    rdi
   140009b87:	rex.WRX
   140009b88:	rex.WRXB pop r15
   140009b8a:	push   rax
   140009b8b:	push   rdx
   140009b8c:	rex.WRXB
   140009b8d:	rex.RX
   140009b8e:	rex.WB
   140009b8f:	rex.WR
   140009b90:	and    BYTE PTR [r9+0x66],r13b
   140009b94:	and    BYTE PTR [rsi+0x6f],ch
   140009b97:	and    BYTE PTR [rax+0x72],dh
   140009b9a:	outs   dx,DWORD PTR ds:[rsi]
   140009b9b:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6967
   140009ba2:	jbe    0x140009c09
   140009ba4:	outs   dx,BYTE PTR ds:[rsi]
   140009ba5:	and    BYTE PTR [rdi+0x6e],ch
   140009ba8:	and    BYTE PTR [rbx+0x6f],ah
   140009bab:	ins    DWORD PTR es:[rdi],dx
   140009bac:	ins    DWORD PTR es:[rdi],dx
   140009bad:	(bad)  
   140009bae:	outs   dx,BYTE PTR ds:[rsi]
   140009baf:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   140009bb4:	gs add BYTE PTR cs:[rax],al
	...
   140009bc0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009bc2:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009bca:	and    BYTE PTR [rbx+0x61],ah
   140009bcd:	outs   dx,BYTE PTR ds:[rsi]
   140009bce:	(bad)  
   140009bcf:	je     0x140009bf1
   140009bd1:	imul   esi,DWORD PTR [esi+0x65],0x746f6220
   140009bd9:	push   0x70206120
   140009bde:	jb     0x140009c4f
   140009be0:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6e61
   140009be7:	and    BYTE PTR fs:[rcx+0x20],ah
   140009beb:	push   rbp
   140009bec:	push   rdx
   140009bed:	rex.WR and BYTE PTR [rdi+0x6e],r13b
   140009bf1:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140009bf5:	and    BYTE PTR [rbx+0x6f],ah
   140009bf8:	ins    DWORD PTR es:[rdi],dx
   140009bf9:	ins    DWORD PTR es:[rdi],dx
   140009bfa:	(bad)  
   140009bfb:	outs   dx,BYTE PTR ds:[rsi]
   140009bfc:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   140009c01:	gs add BYTE PTR cs:[rax],al
	...
   140009c0d:	add    BYTE PTR [rax],al
   140009c0f:	add    BYTE PTR [rcx+0x6e],cl
   140009c12:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009c1a:	and    BYTE PTR [rbp+0x75],ch
   140009c1d:	jae    0x140009c93
   140009c1f:	and    BYTE PTR [rdi+0x69],ah
   140009c22:	jbe    0x140009c89
   140009c24:	and    BYTE PTR [rcx+0x46],al
   140009c27:	pop    rdi
   140009c28:	push   rbp
   140009c29:	push   rdx
   140009c2a:	rex.WR and BYTE PTR [rdi+0x6e],r13b
   140009c2e:	and    BYTE PTR [rbx+0x6f],ah
   140009c31:	ins    DWORD PTR es:[rdi],dx
   140009c32:	ins    DWORD PTR es:[rdi],dx
   140009c33:	(bad)  
   140009c34:	outs   dx,BYTE PTR ds:[rsi]
   140009c35:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   140009c3a:	and    BYTE PTR gs:[rdi+0x68],dh
   140009c3e:	outs   dx,BYTE PTR gs:[rsi]
   140009c40:	and    BYTE PTR [rcx+0x46],al
   140009c43:	pop    rdi
   140009c44:	rex.WRX
   140009c45:	rex.WRXB pop r15
   140009c47:	push   rax
   140009c48:	push   rdx
   140009c49:	rex.WRXB
   140009c4a:	rex.RX
   140009c4b:	rex.WB
   140009c4c:	rex.WR
   140009c4d:	and    BYTE PTR [r9+0x73],r13b
   140009c51:	and    BYTE PTR [rdi+0x69],ah
   140009c54:	jbe    0x140009cbb
   140009c56:	outs   dx,BYTE PTR ds:[rsi]
   140009c57:	add    BYTE PTR cs:[rax],al
   140009c5a:	add    BYTE PTR [rax],al
   140009c5c:	add    BYTE PTR [rax],al
   140009c5e:	add    BYTE PTR [rax],al
   140009c60:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009c62:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009c6a:	and    BYTE PTR [rbx+0x43],bl
   140009c6d:	outs   dx,DWORD PTR ds:[rsi]
   140009c6e:	outs   dx,BYTE PTR ds:[rsi]
   140009c6f:	outs   dx,BYTE PTR ds:[rsi]
   140009c70:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009c75:	outs   dx,BYTE PTR ds:[rsi]
   140009c76:	and    BYTE PTR [rbp+0x61],cl
   140009c79:	outs   dx,BYTE PTR ds:[rsi]
   140009c7a:	(bad)  
   140009c7b:	addr32 gs jb 0x140009cdc
   140009c7f:	and    BYTE PTR [rbx+0x4d],al
   140009c82:	push   rbx
   140009c83:	imul   r13d,DWORD PTR [rbp+r12*2+0x3d],0x746e6520
   140009c8c:	jb     0x140009d07
   140009c8e:	and    BYTE PTR [rsi+0x6f],ch
   140009c91:	je     0x140009cb3
   140009c93:	outs   dx,WORD PTR ds:[rsi]
   140009c95:	jne    0x140009d05
   140009c97:	and    BYTE PTR fs:[rcx+0x6e],ch
   140009c9b:	and    BYTE PTR [rip+0x5c002e73],ah        # 0x19c00cb14
   140009ca1:	add    BYTE PTR [rax],al
   140009ca3:	add    BYTE PTR [rax],al
   140009ca5:	add    BYTE PTR [rax],al
   140009ca7:	add    BYTE PTR [rcx+0x6e],cl
   140009caa:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009cb2:	and    BYTE PTR [rip+0x72745320],ch        # 0x1b274efd8
   140009cb8:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   140009cbf:	(bad)  
   140009cc0:	je     0x140009ce2
   140009cc2:	data16 (bad) 
   140009cc4:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009ccc:	and    eax,0x49000a78
   140009cd1:	outs   dx,BYTE PTR ds:[rsi]
   140009cd2:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009cda:	and    BYTE PTR [rbx+0x49],bl
   140009cdd:	push   rbx
   140009cde:	push   rax
   140009cdf:	and    BYTE PTR [rcx+0x6e],cl
   140009ce2:	outs   dx,WORD PTR ds:[rsi]
   140009ce4:	pop    rbp
   140009ce5:	and    BYTE PTR [rdx+0x65],dl
   140009ce8:	imul   ebp,DWORD PTR [edi+0x6e],0x656c6946
   140009cf0:	cmp    eax,0x746e6520
   140009cf5:	jb     0x140009d70
   140009cf7:	and    BYTE PTR [rsi+0x6f],ch
   140009cfa:	je     0x140009d1c
   140009cfc:	outs   dx,WORD PTR ds:[rsi]
   140009cfe:	jne    0x140009d6e
   140009d00:	and    BYTE PTR fs:[rcx+0x6e],ch
   140009d04:	and    BYTE PTR [rip+0x2e73],ah        # 0x14000cb7d
   140009d0a:	add    BYTE PTR [rax],al
   140009d0c:	add    BYTE PTR [rax],al
   140009d0e:	add    BYTE PTR [rax],al
   140009d10:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009d12:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009d1a:	and    BYTE PTR [rdx+0x61],ah
   140009d1d:	and    BYTE PTR fs:[rax+0x42],dl
   140009d21:	rex.WXB
   140009d22:	rex.RX
   140009d23:	rex.WB
   140009d24:	rex.WR
   140009d25:	and    BYTE PTR [rip+0x206f6e20],r13b        # 0x160700b4c
   140009d2c:	(bad)  
   140009d2e:	movsxd ebp,DWORD PTR [rbx+0x73]
   140009d31:	ins    BYTE PTR es:[rdi],dx
   140009d32:	(bad)  
   140009d33:	jae    0x140009d9d
   140009d35:	add    BYTE PTR cs:[rax],al
   140009d38:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009d3a:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009d42:	and    BYTE PTR [rdx+0x61],ah
   140009d45:	and    BYTE PTR fs:[rax+0x42],dl
   140009d49:	rex.WXB
   140009d4a:	rex.RX
   140009d4b:	rex.WB
   140009d4c:	rex.WR
   140009d4d:	and    BYTE PTR [rip+0x206f6e20],r13b        # 0x160700b74
   140009d54:	outs   dx,DWORD PTR fs:[rsi]
   140009d56:	je     0x140009d86
	...
   140009d60:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009d62:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009d6a:	and    BYTE PTR [rax+0x68],dl
   140009d6d:	outs   dx,DWORD PTR ds:[rsi]
   140009d6e:	outs   dx,BYTE PTR ds:[rsi]
   140009d6f:	rex.X outs dx,DWORD PTR gs:[rsi]
   140009d72:	outs   dx,DWORD PTR ds:[rsi]
   140009d73:	imul   edx,DWORD PTR [rax+0x61],0x72
   140009d77:	jae    0x140009dde
   140009d79:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009d7b:	outs   dx,WORD PTR ds:[rsi]
   140009d7d:	sub    BYTE PTR [rcx],ch
   140009d7f:	and    BYTE PTR [rsi+0x61],ah
   140009d82:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009d8a:	rex.RB cmp eax,0x2e7525
   140009d90:	rex.R outs dx,DWORD PTR ds:[rsi]
   140009d92:	ja     0x140009e02
   140009d94:	ins    BYTE PTR es:[rdi],dx
   140009d95:	outs   dx,DWORD PTR ds:[rsi]
   140009d96:	(bad)  
   140009d97:	and    BYTE PTR fs:[rbp+riz*2+0x6c],ah
   140009d9c:	(bad)  
   140009d9d:	jns    0x140009dbf
   140009d9f:	imul   esi,DWORD PTR [rbx+0x20],0x6d207525
   140009da6:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x63657373
   140009dae:	outs   dx,DWORD PTR ds:[rsi]
   140009daf:	outs   dx,BYTE PTR ds:[rsi]
   140009db0:	fs jae 0x140009de1
   140009db3:	add    BYTE PTR [rax],al
   140009db5:	add    BYTE PTR [rax],al
   140009db7:	add    BYTE PTR [rax+0x69],cl
   140009dba:	fs and BYTE PTR gs:[rbp+riz*2+0x6c],ah
   140009dc0:	(bad)  
   140009dc1:	jns    0x140009de3
   140009dc3:	imul   esi,DWORD PTR [rbx+0x20],0x6d207525
   140009dca:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x6f636573
   140009dd2:	outs   dx,BYTE PTR ds:[rsi]
   140009dd3:	fs jae 0x140009e04
   140009dd6:	add    BYTE PTR [rax],al
   140009dd8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009dda:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x29287367
   140009de2:	and    BYTE PTR [rip+0x72745320],ch        # 0x1b274f108
   140009de8:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   140009def:	outs   dx,DWORD PTR ds:[rsi]
   140009df0:	jo     0x140009e6b
   140009df2:	rex.RB js 0x140009e15
   140009df5:	data16 (bad) 
   140009df7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009dff:	and    eax,0xa78
   140009e04:	add    BYTE PTR [rax],al
   140009e06:	add    BYTE PTR [rax],al
   140009e08:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009e0a:	imul   esi,DWORD PTR [rcx+rax*2+0x70],0x63696c70
   140009e12:	(bad)  
   140009e13:	je     0x140009e7e
   140009e15:	outs   dx,DWORD PTR ds:[rsi]
   140009e16:	outs   dx,BYTE PTR ds:[rsi]
   140009e17:	sub    BYTE PTR [rcx],ch
   140009e19:	and    BYTE PTR [rdi+0x65],al
   140009e1c:	je     0x140009e61
   140009e1e:	ins    BYTE PTR es:[rdi],dx
   140009e1f:	(bad)  
   140009e20:	jae    0x140009e95
   140009e22:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009e24:	outs   dx,WORD PTR ds:[rsi]
   140009e26:	rex.RB js 0x140009e51
   140009e29:	sub    DWORD PTR [rax],esp
   140009e2b:	data16 (bad) 
   140009e2d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009e35:	rex.RB cmp eax,0x2e7525
   140009e3b:	add    BYTE PTR [rax],al
   140009e3d:	add    BYTE PTR [rax],al
   140009e3f:	add    BYTE PTR [rcx+0x43],cl
   140009e42:	outs   dx,DWORD PTR ds:[rsi]
   140009e43:	outs   dx,BYTE PTR ds:[rsi]
   140009e44:	outs   dx,BYTE PTR ds:[rsi]
   140009e45:	rex.R ja 0x140009eb6
   140009e48:	and    BYTE PTR [rbx+0x6c],al
   140009e4b:	(bad)  
   140009e4c:	jae    0x140009ec1
   140009e4e:	add    BYTE PTR [rax],al
   140009e50:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009e52:	imul   esi,DWORD PTR [rcx+rax*2+0x70],0x63696c70
   140009e5a:	(bad)  
   140009e5b:	je     0x140009ec6
   140009e5d:	outs   dx,DWORD PTR ds:[rsi]
   140009e5e:	outs   dx,BYTE PTR ds:[rsi]
   140009e5f:	sub    BYTE PTR [rcx],ch
   140009e61:	and    BYTE PTR [rdx+0x65],dl
   140009e64:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   140009e6c:	(bad)  
   140009e6d:	jae    0x140009ee2
   140009e6f:	rex.RB js 0x140009e9a
   140009e72:	sub    DWORD PTR [rax],esp
   140009e74:	data16 (bad) 
   140009e76:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   140009e7e:	rex.RB cmp eax,0x2e7525
   140009e84:	add    BYTE PTR [rax],al
   140009e86:	add    BYTE PTR [rax],al
   140009e88:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009e8a:	imul   esi,DWORD PTR [rcx+rcx*2+0x6e],0x6e617473
   140009e92:	movsxd esp,DWORD PTR [rbp+0x28]
   140009e95:	sub    DWORD PTR [rax],esp
   140009e97:	push   rdx
   140009e98:	imul   esi,DWORD PTR gs:[ebx+0x74],0x69577265
   140009ea1:	outs   dx,BYTE PTR ds:[rsi]
   140009ea2:	outs   dx,DWORD PTR fs:[rsi]
   140009ea4:	ja     0x140009ef3
   140009ea6:	gs jae 0x140009f1c
   140009ea9:	(bad)  
   140009eaa:	sub    BYTE PTR gs:[ecx],ch
   140009eae:	and    BYTE PTR [rsi+0x61],ah
   140009eb1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x5300002e
   140009eb9:	push   0x336c6c65
   140009ebe:	xor    ch,BYTE PTR [rsi]
   140009ec0:	fs ins BYTE PTR es:[rdi],dx
   140009ec2:	ins    BYTE PTR es:[rdi],dx
   140009ec3:	add    BYTE PTR [rax],al
   140009ec5:	add    BYTE PTR [rax],al
   140009ec7:	add    BYTE PTR [rbx+0x48],dl
   140009eca:	rex.RXB
   140009ecb:	gs je  0x140009f21
   140009ece:	jo     0x140009f35
   140009ed0:	movsxd ebp,DWORD PTR [rcx+0x61]
   140009ed3:	ins    BYTE PTR es:[rdi],dx
   140009ed4:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140009ed6:	ins    BYTE PTR es:[rdi],dx
   140009ed7:	fs gs jb 0x140009f2b
   140009edb:	(bad)  
   140009edc:	je     0x140009f46
   140009ede:	add    BYTE PTR [r11+0x4f],dl
   140009ee2:	rex.RX push rsp
   140009ee4:	push   rdi
   140009ee5:	push   r10
   140009ee7:	rex.RB pop r12
   140009ee9:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140009ef1:	je     0x140009f4f
   140009ef3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009ef5:	outs   dx,BYTE PTR ds:[rsi]
   140009ef6:	outs   dx,BYTE PTR ds:[rsi]
   140009ef7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009efc:	outs   dx,BYTE PTR ds:[rsi]
   140009efd:	and    BYTE PTR [rbp+0x61],cl
   140009f00:	outs   dx,BYTE PTR ds:[rsi]
   140009f01:	(bad)  
   140009f02:	addr32 gs jb 0x140009f62
   140009f06:	push   rbp
   140009f07:	jae    0x140009f6e
   140009f09:	jb     0x140009f54
   140009f0b:	outs   dx,BYTE PTR ds:[rsi]
   140009f0c:	outs   dx,WORD PTR ds:[rsi]
   140009f0e:	pop    rsp
   140009f0f:	add    BYTE PTR [rbx+0x4f],dl
   140009f12:	rex.RX push rsp
   140009f14:	push   rdi
   140009f15:	push   r10
   140009f17:	rex.RB pop r12
   140009f19:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140009f21:	je     0x140009f7f
   140009f23:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009f25:	outs   dx,BYTE PTR ds:[rsi]
   140009f26:	outs   dx,BYTE PTR ds:[rsi]
   140009f27:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009f2c:	outs   dx,BYTE PTR ds:[rsi]
   140009f2d:	and    BYTE PTR [rbp+0x61],cl
   140009f30:	outs   dx,BYTE PTR ds:[rsi]
   140009f31:	(bad)  
   140009f32:	addr32 gs jb 0x140009f92
   140009f36:	push   rbx
   140009f37:	imul   ebp,DWORD PTR [rsi+0x67],0x7355656c
   140009f3e:	gs jb  0x140009f8a
   140009f41:	outs   dx,BYTE PTR ds:[rsi]
   140009f42:	outs   dx,WORD PTR ds:[rsi]
   140009f44:	pop    rsp
	...
   140009f4d:	add    BYTE PTR [rax],al
   140009f4f:	add    BYTE PTR [rcx+0x6e],cl
   140009f52:	imul   esi,DWORD PTR [rsp+rcx*2+0x6f],0x6e696767
   140009f5a:	and    BYTE PTR [eip+0x756f6320],ch        # 0x1b5700281
   140009f61:	ins    BYTE PTR es:[rdi],dx
   140009f62:	and    BYTE PTR fs:[rsi+0x6f],ch
   140009f66:	je     0x140009f88
   140009f68:	imul   bp,WORD PTR [rsi+0x64],0x7320
   140009f6e:	gs jb  0x140009fe7
   140009f71:	imul   esp,DWORD PTR [rbx+0x65],0x656d616e
   140009f78:	and    BYTE PTR [rcx+0x6e],ch
   140009f7b:	and    BYTE PTR [rsi],ch
   140009f7d:	rex.XB
   140009f7e:	rex.WRB push r11
   140009f80:	and    BYTE PTR [rsi+0x69],ah
   140009f83:	ins    BYTE PTR es:[rdi],dx
   140009f84:	gs sub al,0x20
   140009f87:	gs js  0x140009ff3
   140009f8a:	je     0x140009ff5
   140009f8c:	outs   dx,BYTE PTR ds:[rsi]
   140009f8d:	add    BYTE PTR cs:[eip+0x3d3d3d3d],bh        # 0x17d3ddcd2
   140009f95:	cmp    eax,0x3d3d3d3d
   140009f9a:	cmp    eax,0x3d3d3d3d
   140009f9f:	cmp    eax,0x3d3d3d3d
   140009fa4:	cmp    eax,0x3d3d3d3d
   140009fa9:	cmp    eax,0x3d3d3d3d
   140009fae:	cmp    eax,0x3d3d3d3d
   140009fb3:	cmp    eax,0x3d3d3d3d
   140009fb8:	cmp    eax,0x3d3d3d3d
   140009fbd:	cmp    eax,0x3d3d3d3d
   140009fc2:	cmp    eax,0x3d3d
   140009fc7:	add    BYTE PTR [rax],ah
   140009fc9:	rex.XB
   140009fca:	rex.WRB
   140009fcb:	rex.R
   140009fcc:	xor    r14,QWORD PTR [rdx]
   140009fcf:	cs rex.RB pop r8
   140009fd2:	and    BYTE PTR [rip+0x414f4c20],r13b        # 0x1814febf9
   140009fd9:	rex.R
   140009fda:	rex.WB
   140009fdb:	rex.WRX
   140009fdc:	rex.RXB and BYTE PTR [rip+0x6f725020],r13b        # 0x1af72f003
   140009fe3:	movsxd esp,DWORD PTR [rbp+0x73]
   140009fe6:	jae    0x14000a008
   140009fe8:	rex.WB
   140009fe9:	and    BYTE PTR [rcx+0x73],r13b
   140009fed:	and    BYTE PTR [rax],dh
   140009fef:	js     0x14000a016
   140009ff1:	js     0x14000a013
   140009ff3:	add    BYTE PTR [rax],al
   140009ff5:	add    BYTE PTR [rax],al
   140009ff7:	add    BYTE PTR [rdi+0x69],dl
   140009ffa:	outs   dx,BYTE PTR ds:[rsi]
   140009ffb:	rex.WRB (bad) 
   140009ffd:	imul   ebp,DWORD PTR [rsi+0x20],0x6547202d
   14000a004:	je     0x14000a053
   14000a006:	outs   dx,DWORD PTR ds:[rsi]
   14000a007:	fs jne 0x14000a076
   14000a00a:	gs rex.W (bad) 
   14000a00d:	outs   dx,BYTE PTR ds:[rsi]
   14000a00e:	fs ins BYTE PTR es:[rdi],dx
   14000a010:	sub    BYTE PTR gs:[rsi+0x55],cl
   14000a014:	rex.WR
   14000a015:	sub    QWORD PTR [rax],r12
   14000a018:	jb     0x14000a07f
   14000a01a:	je     0x14000a091
   14000a01c:	jb     0x14000a08c
   14000a01e:	gs and BYTE PTR fs:[rax],dh
   14000a022:	js     0x14000a049
   14000a024:	js     0x14000a052
   14000a026:	and    BYTE PTR [rdi+0x4c],al
   14000a029:	rex.RB cmp eax,0x2e7525
   14000a02f:	add    BYTE PTR [rdi+0x69],dl
   14000a032:	outs   dx,BYTE PTR ds:[rsi]
   14000a033:	rex.WRB (bad) 
   14000a035:	imul   ebp,DWORD PTR [rsi+0x28],0x202d2029
   14000a03c:	imul   r12d,DWORD PTR [rcx+0x6c],0x6f42676f
   14000a044:	js     0x14000a096
   14000a046:	(bad)  
   14000a047:	jb     0x14000a0aa
   14000a049:	ins    DWORD PTR es:[rdi],dx
   14000a04a:	sub    BYTE PTR [rax],dh
   14000a04c:	js     0x14000a073
   14000a04e:	js     0x14000a07c
   14000a050:	and    BYTE PTR [rax],dh
   14000a052:	js     0x14000a079
   14000a054:	js     0x14000a082
   14000a056:	and    BYTE PTR [rsi+0x55],cl
   14000a059:	rex.WR
   14000a05a:	rex.WR sub al,0x20
   14000a05d:	rex.WRB (bad) 
   14000a05f:	imul   ebp,DWORD PTR [rsi+0x44],0x7250676c
   14000a066:	outs   dx,DWORD PTR ds:[rsi]
   14000a067:	movsxd ebp,DWORD PTR [rax+riz*1]
   14000a06a:	xor    BYTE PTR [rax+0x25],bh
   14000a06d:	js     0x14000a098
   14000a06f:	and    BYTE PTR [rip+0x69616620],ch        # 0x1a9620695
   14000a075:	ins    BYTE PTR es:[rdi],dx
   14000a076:	gs add BYTE PTR fs:[rax],al
   14000a07a:	add    BYTE PTR [rax],al
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	and    BYTE PTR [rbx+0x4d],al
   14000a083:	rex.R
   14000a084:	xor    r14,QWORD PTR [rdx]
   14000a087:	cs rex.RB pop r8
   14000a08a:	and    BYTE PTR [rip+0x4c4e5520],r13b        # 0x18c4ef5b1
   14000a091:	rex.WRXB
   14000a092:	rex.B
   14000a093:	rex.R
   14000a094:	rex.WB
   14000a095:	rex.WRX
   14000a096:	rex.RXB and BYTE PTR [rip+0x6f725020],r13b        # 0x1af72f0bd
   14000a09d:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a0a0:	jae    0x14000a0c2
   14000a0a2:	rex.WB
   14000a0a3:	and    BYTE PTR [rcx+0x73],r13b
   14000a0a7:	and    BYTE PTR [rax],dh
   14000a0a9:	js     0x14000a0d0
   14000a0ab:	js     0x14000a0cd
   14000a0ad:	add    BYTE PTR [rax],al
   14000a0af:	add    BYTE PTR [rbx+0x6c],al
   14000a0b2:	gs (bad) 
   14000a0b4:	outs   dx,BYTE PTR ds:[rsi]
   14000a0b5:	push   rbp
   14000a0b6:	jo     0x14000a0fb
   14000a0b8:	rex.WRB
   14000a0b9:	rex.R
   14000a0ba:	rex.WR
   14000a0bb:	rex.B jb 0x14000a125
   14000a0be:	jae    0x14000a0e0
   14000a0c0:	sub    eax,0x4542202d
   14000a0c5:	rex.RXB
   14000a0c6:	rex.WB
   14000a0c7:	rex.WRX add BYTE PTR [rax],r8b
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	add    BYTE PTR [rax],al
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a0d2:	gs (bad) 
   14000a0d4:	outs   dx,BYTE PTR ds:[rsi]
   14000a0d5:	push   rbp
   14000a0d6:	jo     0x14000a11b
   14000a0d8:	rex.WRB
   14000a0d9:	rex.R
   14000a0da:	rex.WR
   14000a0db:	rex.B jb 0x14000a145
   14000a0de:	jae    0x14000a108
   14000a0e0:	sub    DWORD PTR [rax],esp
   14000a0e2:	push   rdi
   14000a0e3:	imul   ebp,DWORD PTR [rsi+0x48],0x43707474
   14000a0ea:	ins    BYTE PTR es:[rdi],dx
   14000a0eb:	outs   dx,DWORD PTR ds:[rsi]
   14000a0ec:	jae    0x14000a153
   14000a0ee:	rex.W (bad) 
   14000a0f0:	outs   dx,BYTE PTR ds:[rsi]
   14000a0f1:	fs ins BYTE PTR es:[rdi],dx
   14000a0f3:	sub    BYTE PTR gs:[rcx+0x73],ah
   14000a0f7:	rex.B jb 0x14000a161
   14000a0fa:	jae    0x14000a12a
   14000a0fc:	jo     0x14000a162
   14000a0fe:	(bad)  
   14000a0ff:	rex.B jb 0x14000a169
   14000a102:	jae    0x14000a15f
   14000a104:	and    eax,0x682e5d75
   14000a109:	push   rdx
   14000a10a:	gs jno 0x14000a136
   14000a10d:	and    BYTE PTR [rsi+0x61],ah
   14000a110:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a118:	rex.RB cmp eax,0x2e7525
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a122:	gs (bad) 
   14000a124:	outs   dx,BYTE PTR ds:[rsi]
   14000a125:	push   rbp
   14000a126:	jo     0x14000a16b
   14000a128:	rex.WRB
   14000a129:	rex.R
   14000a12a:	rex.WR
   14000a12b:	rex.B jb 0x14000a195
   14000a12e:	jae    0x14000a158
   14000a130:	sub    DWORD PTR [rax],esp
   14000a132:	push   rdi
   14000a133:	imul   ebp,DWORD PTR [rsi+0x48],0x43707474
   14000a13a:	ins    BYTE PTR es:[rdi],dx
   14000a13b:	outs   dx,DWORD PTR ds:[rsi]
   14000a13c:	jae    0x14000a1a3
   14000a13e:	rex.W (bad) 
   14000a140:	outs   dx,BYTE PTR ds:[rsi]
   14000a141:	fs ins BYTE PTR es:[rdi],dx
   14000a143:	sub    BYTE PTR gs:[rcx+0x73],ah
   14000a147:	rex.B jb 0x14000a1b1
   14000a14a:	jae    0x14000a17a
   14000a14c:	jo     0x14000a1b2
   14000a14e:	(bad)  
   14000a14f:	rex.B jb 0x14000a1b9
   14000a152:	jae    0x14000a1af
   14000a154:	and    eax,0x682e5d75
   14000a159:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a15b:	outs   dx,BYTE PTR ds:[rsi]
   14000a15c:	outs   dx,BYTE PTR ds:[rsi]
   14000a15d:	sub    DWORD PTR [rax],esp
   14000a15f:	data16 (bad) 
   14000a161:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a169:	rex.RB cmp eax,0x2e7525
   14000a16f:	add    BYTE PTR [rbx+0x6c],al
   14000a172:	gs (bad) 
   14000a174:	outs   dx,BYTE PTR ds:[rsi]
   14000a175:	push   rbp
   14000a176:	jo     0x14000a1bb
   14000a178:	rex.WRB
   14000a179:	rex.R
   14000a17a:	rex.WR
   14000a17b:	rex.B jb 0x14000a1e5
   14000a17e:	jae    0x14000a1a8
   14000a180:	sub    DWORD PTR [rax],esp
   14000a182:	push   rdi
   14000a183:	imul   ebp,DWORD PTR [rsi+0x48],0x43707474
   14000a18a:	ins    BYTE PTR es:[rdi],dx
   14000a18b:	outs   dx,DWORD PTR ds:[rsi]
   14000a18c:	jae    0x14000a1f3
   14000a18e:	rex.W (bad) 
   14000a190:	outs   dx,BYTE PTR ds:[rsi]
   14000a191:	fs ins BYTE PTR es:[rdi],dx
   14000a193:	sub    BYTE PTR gs:[rcx+0x73],ah
   14000a197:	rex.B jb 0x14000a201
   14000a19a:	jae    0x14000a1ca
   14000a19c:	jo     0x14000a202
   14000a19e:	(bad)  
   14000a19f:	rex.B jb 0x14000a209
   14000a1a2:	jae    0x14000a1ff
   14000a1a4:	and    eax,0x682e5d75
   14000a1a9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a1ab:	gs je  0x14000a1d7
   14000a1ae:	and    BYTE PTR [rsi+0x61],ah
   14000a1b1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a1b9:	rex.RB cmp eax,0x2e7525
   14000a1bf:	add    BYTE PTR [rbx+0x6c],al
   14000a1c2:	gs (bad) 
   14000a1c4:	outs   dx,BYTE PTR ds:[rsi]
   14000a1c5:	push   rbp
   14000a1c6:	jo     0x14000a20b
   14000a1c8:	rex.WRB
   14000a1c9:	rex.R
   14000a1ca:	rex.WR
   14000a1cb:	rex.B jb 0x14000a235
   14000a1ce:	jae    0x14000a1f8
   14000a1d0:	sub    DWORD PTR [rax],esp
   14000a1d2:	push   rdi
   14000a1d3:	(bad)  
   14000a1d4:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000a1dc:	ins    BYTE PTR es:[edi],dx
   14000a1de:	gs rex.WRXB (bad) 
   14000a1e1:	push   0x65
   14000a1e3:	movsxd esi,DWORD PTR [rax+rbp*1+0x29]
   14000a1e7:	and    BYTE PTR [rsi+0x61],ah
   14000a1ea:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a1f2:	rex.RB cmp eax,0x2e7525
	...
   14000a200:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a202:	gs (bad) 
   14000a204:	outs   dx,BYTE PTR ds:[rsi]
   14000a205:	push   rbp
   14000a206:	jo     0x14000a24b
   14000a208:	rex.WRB
   14000a209:	rex.R
   14000a20a:	rex.WR
   14000a20b:	rex.B jb 0x14000a275
   14000a20e:	jae    0x14000a238
   14000a210:	sub    DWORD PTR [rax],esp
   14000a212:	rex.R
   14000a213:	gs ins BYTE PTR es:[rdi],dx
   14000a215:	gs je  0x14000a27d
   14000a218:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x72417361
   14000a221:	addr32 jae 0x14000a27f
   14000a224:	jo     0x14000a28a
   14000a226:	(bad)  
   14000a227:	rex.B jb 0x14000a291
   14000a22a:	jae    0x14000a287
   14000a22c:	and    eax,0x2e5d756c
   14000a231:	jae    0x14000a2ad
   14000a233:	imul   r13d,DWORD PTR [rbp+r12*2+0x3d],0x20297325
   14000a23c:	data16 (bad) 
   14000a23e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a246:	rex.RB cmp eax,0x2e7525
   14000a24c:	add    BYTE PTR [rax],al
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	push   rdi
   14000a251:	imul   ebp,DWORD PTR [rsi+0x4d],0x286e6961
   14000a258:	sub    DWORD PTR [rax],esp
   14000a25a:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a25c:	outs   dx,DWORD PTR ds:[rsi]
   14000a25d:	jae    0x14000a2c4
   14000a25f:	rex.W (bad) 
   14000a261:	outs   dx,BYTE PTR ds:[rsi]
   14000a262:	fs ins BYTE PTR es:[rdi],dx
   14000a264:	sub    BYTE PTR gs:[rcx+0x73],ah
   14000a268:	rex.B jb 0x14000a2d2
   14000a26b:	jae    0x14000a29b
   14000a26d:	(bad)  
   14000a26e:	push   0x646e6148
   14000a273:	ins    BYTE PTR es:[rdi],dx
   14000a274:	gs jae 0x14000a2d2
   14000a277:	and    eax,0x20295d75
   14000a27c:	data16 (bad) 
   14000a27e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a286:	rex.RB cmp eax,0x2e7525
   14000a28c:	add    BYTE PTR [rax],al
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a292:	gs (bad) 
   14000a294:	outs   dx,BYTE PTR ds:[rsi]
   14000a295:	push   rbp
   14000a296:	jo     0x14000a2db
   14000a298:	rex.WRB
   14000a299:	rex.R
   14000a29a:	rex.WR
   14000a29b:	rex.B jb 0x14000a305
   14000a29e:	jae    0x14000a2c0
   14000a2a0:	sub    eax,0x4e45202d
   14000a2a5:	add    BYTE PTR [rax],r8b
   14000a2a8:	push   rsp
   14000a2a9:	jne    0x14000a319
   14000a2ab:	outs   dx,BYTE PTR ds:[rsi]
   14000a2ac:	gs ins BYTE PTR es:[rdi],dx
   14000a2ae:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x0
   14000a2b7:	add    BYTE PTR [rsi+0x50],dl
   14000a2ba:	rex.WRX and BYTE PTR [rbx+0x65],r10b
   14000a2be:	jb     0x14000a336
   14000a2c0:	gs jb  0x14000a336
   14000a2c3:	add    BYTE PTR [rax],al
   14000a2c5:	add    BYTE PTR [rax],al
   14000a2c7:	add    BYTE PTR [rbx+0x65],dl
   14000a2ca:	je     0x14000a340
   14000a2cc:	imul   ebp,DWORD PTR [rsi+0x67],0x73
   14000a2d3:	add    BYTE PTR [rax],al
   14000a2d5:	add    BYTE PTR [rax],al
   14000a2d7:	add    BYTE PTR [rbp+0x70],dl
   14000a2da:	fs (bad) 
   14000a2dc:	je     0x14000a343
   14000a2de:	push   rbp
   14000a2df:	jb     0x14000a34d
   14000a2e1:	add    BYTE PTR [rax],al
   14000a2e3:	add    BYTE PTR [rax],al
   14000a2e5:	add    BYTE PTR [rax],al
   14000a2e7:	add    BYTE PTR [rdi+rbp*2+0x77],al
   14000a2eb:	outs   dx,BYTE PTR ds:[rsi]
   14000a2ec:	ins    BYTE PTR es:[rdi],dx
   14000a2ed:	outs   dx,DWORD PTR ds:[rsi]
   14000a2ee:	(bad)  
   14000a2ef:	fs push rsi
   14000a2f1:	jo     0x14000a361
   14000a2f3:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a2fc:	jb     0x14000a36a
   14000a2fe:	cmp    ah,BYTE PTR [rax]
   14000a300:	push   rbp
   14000a301:	push   rdx
   14000a302:	rex.WR and BYTE PTR [rcx+0x73],r13b
   14000a306:	and    BYTE PTR [rip+0x73],ah        # 0x14000a37f
   14000a30c:	add    BYTE PTR [rax],al
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000a312:	ja     0x14000a382
   14000a314:	ins    BYTE PTR es:[rdi],dx
   14000a315:	outs   dx,DWORD PTR ds:[rsi]
   14000a316:	(bad)  
   14000a317:	fs push rsi
   14000a319:	jo     0x14000a389
   14000a31b:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a324:	jb     0x14000a392
   14000a326:	and    BYTE PTR [rip+0x6547202d],ch        # 0x1a547c359
   14000a32c:	je     0x14000a382
   14000a32e:	gs ins DWORD PTR es:[rdi],dx
   14000a330:	jo     0x14000a382
   14000a332:	(bad)  
   14000a333:	je     0x14000a39d
   14000a335:	and    BYTE PTR [rsi+0x61],ah
   14000a338:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a340:	and    BYTE PTR [rip+0x642520],r15b        # 0x14064c867
   14000a347:	add    BYTE PTR [rsi+0x50],dl
   14000a34a:	rex.WRX add BYTE PTR [rax],r8b
   14000a34d:	add    BYTE PTR [rax],al
   14000a34f:	add    BYTE PTR [rbp+0x0],cl
   14000a352:	imul   eax,DWORD PTR [rax],0x720063
   14000a358:	outs   dx,DWORD PTR ds:[rsi]
   14000a359:	add    BYTE PTR [rbx+0x0],dh
   14000a35c:	outs   dx,DWORD PTR ds:[rsi]
   14000a35d:	add    BYTE PTR [rsi+0x0],ah
   14000a360:	je     0x14000a362
   14000a362:	sub    BYTE PTR [rax],al
   14000a364:	push   rdx
   14000a365:	add    BYTE PTR [rcx],ch
   14000a367:	add    BYTE PTR [rax],ah
   14000a369:	add    BYTE PTR [rbx+0x0],al
   14000a36c:	outs   dx,DWORD PTR ds:[rsi]
   14000a36d:	add    BYTE PTR [rsi+0x0],ch
   14000a370:	outs   dx,BYTE PTR ds:[rsi]
   14000a371:	add    BYTE PTR [rbp+0x0],ah
   14000a374:	movsxd eax,DWORD PTR [rax]
   14000a376:	je     0x14000a378
   14000a378:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a37e:	and    BYTE PTR [rax],al
   14000a380:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000a384:	outs   dx,BYTE PTR ds:[rsi]
   14000a385:	add    BYTE PTR [rcx+0x0],ah
   14000a388:	add    BYTE PTR [ebp+0x0],ah
   14000a38c:	jb     0x14000a38e
   14000a38e:	and    BYTE PTR [rax],al
   14000a390:	push   rsi
   14000a391:	add    BYTE PTR [rax+0x0],dh
   14000a394:	outs   dx,BYTE PTR ds:[rsi]
   14000a395:	add    BYTE PTR [rax],ah
   14000a397:	add    BYTE PTR [rsi+0x0],al
   14000a39a:	imul   eax,DWORD PTR [rax],0x65006c
   14000a3a0:	and    BYTE PTR [rax],al
   14000a3a2:	push   rbp
   14000a3a3:	add    BYTE PTR [rax+0x0],dh
   14000a3a6:	add    BYTE PTR fs:[rcx+0x0],ah
   14000a3aa:	je     0x14000a3ac
   14000a3ac:	add    BYTE PTR gs:[rax],al
   14000a3af:	add    BYTE PTR [rdi+rbp*2+0x77],al
   14000a3b3:	outs   dx,BYTE PTR ds:[rsi]
   14000a3b4:	ins    BYTE PTR es:[rdi],dx
   14000a3b5:	outs   dx,DWORD PTR ds:[rsi]
   14000a3b6:	(bad)  
   14000a3b7:	fs push rsi
   14000a3b9:	jo     0x14000a429
   14000a3bb:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a3c4:	jb     0x14000a432
   14000a3c6:	sub    BYTE PTR [rcx],ch
   14000a3c8:	and    BYTE PTR [rcx+0x62],ah
   14000a3cb:	outs   dx,DWORD PTR ds:[rsi]
   14000a3cc:	jb     0x14000a442
   14000a3ce:	gs fs and BYTE PTR cs:[rbx+0x6f],al
   14000a3d4:	jne    0x14000a442
   14000a3d6:	and    BYTE PTR fs:[rsi+0x6f],ch
   14000a3da:	je     0x14000a3fc
   14000a3dc:	(bad)  
   14000a3dd:	ins    BYTE PTR es:[rdi],dx
   14000a3de:	ins    BYTE PTR es:[rdi],dx
   14000a3df:	outs   dx,DWORD PTR ds:[rsi]
   14000a3e0:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a3e3:	and    BYTE PTR gs:[rbp+0x65],ch
   14000a3e7:	ins    DWORD PTR es:[rdi],dx
   14000a3e8:	outs   dx,DWORD PTR ds:[rsi]
   14000a3e9:	jb     0x14000a464
   14000a3eb:	add    BYTE PTR [rax],al
   14000a3ed:	add    BYTE PTR [rax],al
   14000a3ef:	add    BYTE PTR [rdi+rbp*2+0x77],al
   14000a3f3:	outs   dx,BYTE PTR ds:[rsi]
   14000a3f4:	ins    BYTE PTR es:[rdi],dx
   14000a3f5:	outs   dx,DWORD PTR ds:[rsi]
   14000a3f6:	(bad)  
   14000a3f7:	fs push rsi
   14000a3f9:	jo     0x14000a469
   14000a3fb:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a404:	jb     0x14000a472
   14000a406:	sub    BYTE PTR [rcx],ch
   14000a408:	and    BYTE PTR [rbx+0x74],dl
   14000a40b:	jb     0x14000a476
   14000a40d:	outs   dx,BYTE PTR ds:[rsi]
   14000a40e:	rex.XB movsxd ebp,DWORD PTR [r8d+0x43]
   14000a413:	outs   dx,DWORD PTR ds:[rsi]
   14000a414:	jo     0x14000a48f
   14000a416:	rex.RB js 0x14000a439
   14000a419:	data16 (bad) 
   14000a41b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000a423:	and    eax,0xa78
   14000a428:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000a42a:	ja     0x14000a49a
   14000a42c:	ins    BYTE PTR es:[rdi],dx
   14000a42d:	outs   dx,DWORD PTR ds:[rsi]
   14000a42e:	(bad)  
   14000a42f:	fs push rsi
   14000a431:	jo     0x14000a4a1
   14000a433:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a43c:	jb     0x14000a4aa
   14000a43e:	sub    BYTE PTR [rcx],ch
   14000a440:	and    BYTE PTR [rbx+0x74],dl
   14000a443:	jb     0x14000a4ae
   14000a445:	outs   dx,BYTE PTR ds:[rsi]
   14000a446:	rex.XB movsxd ebp,DWORD PTR [r8d+0x43]
   14000a44b:	(bad)  
   14000a44c:	je     0x14000a493
   14000a44e:	js     0x14000a470
   14000a450:	data16 (bad) 
   14000a452:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000a45a:	and    eax,0xa78
   14000a45f:	add    BYTE PTR [rdi+rbp*2+0x77],al
   14000a463:	outs   dx,BYTE PTR ds:[rsi]
   14000a464:	ins    BYTE PTR es:[rdi],dx
   14000a465:	outs   dx,DWORD PTR ds:[rsi]
   14000a466:	(bad)  
   14000a467:	fs push rsi
   14000a469:	jo     0x14000a4d9
   14000a46b:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a474:	jb     0x14000a4e2
   14000a476:	and    BYTE PTR [rip+0x6957202d],ch        # 0x1a957c4a9
   14000a47c:	outs   dx,BYTE PTR ds:[rsi]
   14000a47d:	rex.W je 0x14000a4f4
   14000a480:	jo     0x14000a4c5
   14000a482:	outs   dx,DWORD PTR ds:[rsi]
   14000a483:	outs   dx,BYTE PTR ds:[rsi]
   14000a484:	outs   dx,BYTE PTR ds:[rsi]
   14000a485:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x46]
   14000a48a:	(bad)  
   14000a48b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000a493:	push   0x72724520
   14000a498:	outs   dx,DWORD PTR ds:[rsi]
   14000a499:	jb     0x14000a4bb
   14000a49b:	and    eax,0x64
   14000a4a0:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000a4a2:	ja     0x14000a512
   14000a4a4:	ins    BYTE PTR es:[rdi],dx
   14000a4a5:	outs   dx,DWORD PTR ds:[rsi]
   14000a4a6:	(bad)  
   14000a4a7:	fs push rsi
   14000a4a9:	jo     0x14000a519
   14000a4ab:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a4b4:	jb     0x14000a522
   14000a4b6:	and    BYTE PTR [rip+0x6957202d],ch        # 0x1a957c4e9
   14000a4bc:	outs   dx,BYTE PTR ds:[rsi]
   14000a4bd:	rex.W je 0x14000a534
   14000a4c0:	jo     0x14000a515
   14000a4c2:	outs   dx,BYTE PTR gs:[rsi]
   14000a4c4:	fs push rdx
   14000a4c6:	gs jno 0x14000a53e
   14000a4c9:	gs jae 0x14000a540
   14000a4cc:	and    BYTE PTR [rsi+0x61],al
   14000a4cf:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000a4d7:	push   0x72724520
   14000a4dc:	outs   dx,DWORD PTR ds:[rsi]
   14000a4dd:	jb     0x14000a4ff
   14000a4df:	and    eax,0x64
	...
   14000a4f0:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000a4f2:	ja     0x14000a562
   14000a4f4:	ins    BYTE PTR es:[rdi],dx
   14000a4f5:	outs   dx,DWORD PTR ds:[rsi]
   14000a4f6:	(bad)  
   14000a4f7:	fs push rsi
   14000a4f9:	jo     0x14000a569
   14000a4fb:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a504:	jb     0x14000a572
   14000a506:	and    BYTE PTR [rip+0x6957202d],ch        # 0x1a957c539
   14000a50c:	outs   dx,BYTE PTR ds:[rsi]
   14000a50d:	rex.W je 0x14000a584
   14000a510:	jo     0x14000a564
   14000a512:	movsxd esp,DWORD PTR gs:[rbp+0x69]
   14000a516:	jbe    0x14000a57d
   14000a518:	push   rdx
   14000a519:	gs jae 0x14000a58c
   14000a51c:	outs   dx,DWORD PTR ds:[rsi]
   14000a51d:	outs   dx,BYTE PTR ds:[rsi]
   14000a51e:	jae    0x14000a585
   14000a520:	and    BYTE PTR [rsi+0x61],al
   14000a523:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000a52b:	push   0x72724520
   14000a530:	outs   dx,DWORD PTR ds:[rsi]
   14000a531:	jb     0x14000a553
   14000a533:	and    eax,0x64
	...
   14000a540:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000a542:	ja     0x14000a5b2
   14000a544:	ins    BYTE PTR es:[rdi],dx
   14000a545:	outs   dx,DWORD PTR ds:[rsi]
   14000a546:	(bad)  
   14000a547:	fs push rsi
   14000a549:	jo     0x14000a5b9
   14000a54b:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a554:	jb     0x14000a5c2
   14000a556:	and    BYTE PTR [rip+0x6f64202d],ch        # 0x1af64c589
   14000a55c:	ja     0x14000a5cc
   14000a55e:	ins    BYTE PTR es:[rdi],dx
   14000a55f:	outs   dx,DWORD PTR ds:[rsi]
   14000a560:	(bad)  
   14000a561:	fs gs and BYTE PTR fs:[rsi+0x69],ah
   14000a567:	ins    BYTE PTR es:[rdi],dx
   14000a568:	and    BYTE PTR gs:[rdi+rbp*2+0x65],ah
   14000a56d:	jae    0x14000a58f
   14000a56f:	outs   dx,BYTE PTR ds:[rsi]
   14000a570:	outs   dx,DWORD PTR ds:[rsi]
   14000a571:	je     0x14000a593
   14000a573:	jae    0x14000a5da
   14000a575:	gs ins DWORD PTR es:[rdi],dx
   14000a577:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000a57b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000a57e:	je     0x14000a5e1
   14000a580:	imul   ebp,DWORD PTR [rsi+0x20],0x50562061
   14000a587:	rex.WRX and BYTE PTR [rcx+r13*2+0x73],r13b
   14000a58c:	je     0x14000a5bc
   14000a58e:	add    BYTE PTR [rax],al
   14000a590:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000a592:	ja     0x14000a602
   14000a594:	ins    BYTE PTR es:[rdi],dx
   14000a595:	outs   dx,DWORD PTR ds:[rsi]
   14000a596:	(bad)  
   14000a597:	fs push rsi
   14000a599:	jo     0x14000a609
   14000a59b:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a5a4:	jb     0x14000a612
   14000a5a6:	and    BYTE PTR [rip+0x6957202d],ch        # 0x1a957c5d9
   14000a5ac:	outs   dx,BYTE PTR ds:[rsi]
   14000a5ad:	rex.W je 0x14000a624
   14000a5b0:	jo     0x14000a601
   14000a5b2:	jo     0x14000a619
   14000a5b4:	outs   dx,BYTE PTR ds:[rsi]
   14000a5b5:	push   rdx
   14000a5b6:	gs jno 0x14000a62e
   14000a5b9:	gs jae 0x14000a630
   14000a5bc:	and    BYTE PTR [rsi+0x61],ah
   14000a5bf:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a5c7:	and    BYTE PTR [rip+0x64],r12b        # 0x14000a632
   14000a5ce:	add    BYTE PTR [rax],al
   14000a5d0:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000a5d2:	ja     0x14000a642
   14000a5d4:	ins    BYTE PTR es:[rdi],dx
   14000a5d5:	outs   dx,DWORD PTR ds:[rsi]
   14000a5d6:	(bad)  
   14000a5d7:	fs push rsi
   14000a5d9:	jo     0x14000a649
   14000a5db:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a5e4:	jb     0x14000a652
   14000a5e6:	and    BYTE PTR [rip+0x6957202d],ch        # 0x1a957c619
   14000a5ec:	outs   dx,BYTE PTR ds:[rsi]
   14000a5ed:	rex.W je 0x14000a664
   14000a5f0:	jo     0x14000a641
   14000a5f2:	jo     0x14000a659
   14000a5f4:	outs   dx,BYTE PTR ds:[rsi]
   14000a5f5:	and    BYTE PTR [rsi+0x61],ah
   14000a5f8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a600:	and    BYTE PTR [rip+0x64],r12b        # 0x14000a66b
   14000a607:	add    BYTE PTR [rdi+rbp*2+0x77],al
   14000a60b:	outs   dx,BYTE PTR ds:[rsi]
   14000a60c:	ins    BYTE PTR es:[rdi],dx
   14000a60d:	outs   dx,DWORD PTR ds:[rsi]
   14000a60e:	(bad)  
   14000a60f:	fs push rsi
   14000a611:	jo     0x14000a681
   14000a613:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a61c:	jb     0x14000a68a
   14000a61e:	and    BYTE PTR [rip+0x5056202d],ch        # 0x19056c651
   14000a624:	rex.WRX and BYTE PTR [rsi+0x69],r12b
   14000a628:	ins    BYTE PTR es:[rdi],dx
   14000a629:	and    BYTE PTR gs:[rdi+rbp*2+0x77],ah
   14000a62e:	outs   dx,BYTE PTR ds:[rsi]
   14000a62f:	ins    BYTE PTR es:[rdi],dx
   14000a630:	outs   dx,DWORD PTR ds:[rsi]
   14000a631:	(bad)  
   14000a632:	and    BYTE PTR fs:[rsi+0x61],ah
   14000a636:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   14000a63e:	add    BYTE PTR [rax],al
   14000a640:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000a642:	ja     0x14000a6b2
   14000a644:	ins    BYTE PTR es:[rdi],dx
   14000a645:	outs   dx,DWORD PTR ds:[rsi]
   14000a646:	(bad)  
   14000a647:	fs push rsi
   14000a649:	jo     0x14000a6b9
   14000a64b:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x556d6f72
   14000a654:	jb     0x14000a6c2
   14000a656:	and    BYTE PTR [rip+0x5056202d],ch        # 0x19056c689
   14000a65c:	rex.WRX and BYTE PTR [rsi+0x69],r12b
   14000a660:	ins    BYTE PTR es:[rdi],dx
   14000a661:	and    BYTE PTR gs:[rdi+rbp*2+0x77],ah
   14000a666:	outs   dx,BYTE PTR ds:[rsi]
   14000a667:	ins    BYTE PTR es:[rdi],dx
   14000a668:	outs   dx,DWORD PTR ds:[rsi]
   14000a669:	(bad)  
   14000a66a:	and    BYTE PTR fs:[rbx+0x75],dh
   14000a66e:	movsxd esp,DWORD PTR [rbx+0x65]
   14000a671:	gs fs gs and DWORD PTR fs:[rax],eax
   14000a677:	add    BYTE PTR [rsi],ch
   14000a679:	(bad)  
   14000a67b:	imul   eax,DWORD PTR [rax],0x0
   14000a67e:	add    BYTE PTR [rax],al
   14000a680:	and    eax,0x732573
	...
   14000a68d:	add    BYTE PTR [rax],al
   14000a68f:	add    BYTE PTR [rdi+0x76],cl
   14000a692:	gs jb  0x14000a70c
   14000a695:	jb     0x14000a700
   14000a697:	je     0x14000a6fe
   14000a699:	push   rsi
   14000a69a:	jo     0x14000a70a
   14000a69c:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x55687469
   14000a6a5:	jo     0x14000a70b
   14000a6a7:	(bad)  
   14000a6a8:	je     0x14000a70f
   14000a6aa:	and    BYTE PTR [rip+0x6f43202d],ch        # 0x1af43c6dd
   14000a6b0:	jo     0x14000a72b
   14000a6b2:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x7420666f
   14000a6bb:	push   0x726f2065
   14000a6c0:	imul   esp,DWORD PTR [rdi+0x69],0x206c616e
   14000a6c7:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   14000a6ce:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14000a6d2:	and    BYTE PTR [rdx+0x61],ah
   14000a6d5:	movsxd ebp,DWORD PTR [rbx+0x75]
   14000a6d8:	jo     0x14000a6fa
   14000a6da:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6166
   14000a6e1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a6e9:	and    BYTE PTR [rip+0x4d202e64],r12b        # 0x18d20d554
   14000a6f0:	(bad)  
   14000a6f1:	jb     0x14000a75e
   14000a6f3:	imul   ebp,DWORD PTR [rsi+0x67],0x20736120
   14000a6fa:	outs   dx,BYTE PTR ds:[rsi]
   14000a6fb:	outs   dx,DWORD PTR ds:[rsi]
   14000a6fc:	outs   dx,BYTE PTR ds:[rsi]
   14000a6fd:	sub    eax,0x61746166
   14000a702:	ins    BYTE PTR es:[rdi],dx
   14000a703:	add    BYTE PTR cs:[rax],al
	...
   14000a70e:	add    BYTE PTR [rax],al
   14000a710:	rex.WRXB jbe 0x14000a778
   14000a713:	jb     0x14000a78c
   14000a715:	jb     0x14000a780
   14000a717:	je     0x14000a77e
   14000a719:	push   rsi
   14000a71a:	jo     0x14000a78a
   14000a71c:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x55687469
   14000a725:	jo     0x14000a78b
   14000a727:	(bad)  
   14000a728:	je     0x14000a78f
   14000a72a:	and    BYTE PTR [rip+0x6f43202d],ch        # 0x1af43c75d
   14000a730:	jo     0x14000a7ab
   14000a732:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x7420666f
   14000a73b:	push   0x656e2065
   14000a740:	ja     0x14000a762
   14000a742:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x766f
   14000a749:	gs jb  0x14000a76c
   14000a74c:	je     0x14000a7b6
   14000a74e:	and    BYTE PTR gs:[rdi+0x72],ch
   14000a752:	imul   esp,DWORD PTR [rdi+0x69],0x206c616e
   14000a759:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6166
   14000a760:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a768:	and    BYTE PTR [rip+0x64],r12b        # 0x14000a7d3
   14000a76f:	add    BYTE PTR [rdi+0x76],cl
   14000a772:	gs jb  0x14000a7ec
   14000a775:	jb     0x14000a7e0
   14000a777:	je     0x14000a7de
   14000a779:	push   rsi
   14000a77a:	jo     0x14000a7ea
   14000a77c:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x55687469
   14000a785:	jo     0x14000a7eb
   14000a787:	(bad)  
   14000a788:	je     0x14000a7ef
   14000a78a:	and    BYTE PTR [rip+0x6f43202d],ch        # 0x1af43c7bd
   14000a790:	jo     0x14000a80b
   14000a792:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x72206f74
   14000a79b:	gs jae 0x14000a812
   14000a79e:	outs   dx,DWORD PTR ds:[rsi]
   14000a79f:	jb     0x14000a806
   14000a7a1:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14000a7a5:	and    BYTE PTR [rbx+0x61],dh
   14000a7a8:	jbe    0x14000a80f
   14000a7aa:	and    BYTE PTR fs:[rdx+0x61],ah
   14000a7ae:	movsxd ebp,DWORD PTR [rbx+0x75]
   14000a7b1:	jo     0x14000a7d3
   14000a7b3:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6166
   14000a7ba:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000a7c2:	and    BYTE PTR [rip+0x4f000064],r12b        # 0x18f00a82d
   14000a7c9:	jbe    0x14000a830
   14000a7cb:	jb     0x14000a844
   14000a7cd:	jb     0x14000a838
   14000a7cf:	je     0x14000a836
   14000a7d1:	push   rsi
   14000a7d2:	jo     0x14000a842
   14000a7d4:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x55687469
   14000a7dd:	jo     0x14000a843
   14000a7df:	(bad)  
   14000a7e0:	je     0x14000a847
   14000a7e2:	and    BYTE PTR [rip+0x5056202d],ch        # 0x19056c815
   14000a7e8:	rex.WRX and BYTE PTR [rsi+0x69],r12b
   14000a7ec:	ins    BYTE PTR es:[rdi],dx
   14000a7ed:	and    BYTE PTR gs:[rbp+0x70],dh
   14000a7f1:	fs (bad) 
   14000a7f3:	je     0x14000a85a
   14000a7f5:	and    BYTE PTR [rbx+0x75],dh
   14000a7f8:	movsxd esp,DWORD PTR [rbx+0x65]
   14000a7fb:	gs fs gs and DWORD PTR fs:[rax],eax
   14000a801:	add    BYTE PTR [rax],al
   14000a803:	add    BYTE PTR [rax],al
   14000a805:	add    BYTE PTR [rax],al
   14000a807:	add    BYTE PTR [rdi+0x76],cl
   14000a80a:	gs jb  0x14000a884
   14000a80d:	jb     0x14000a878
   14000a80f:	je     0x14000a876
   14000a811:	push   rsi
   14000a812:	jo     0x14000a882
   14000a814:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x55687469
   14000a81d:	jo     0x14000a883
   14000a81f:	(bad)  
   14000a820:	je     0x14000a887
   14000a822:	and    BYTE PTR [rip+0x5056202d],ch        # 0x19056c855
   14000a828:	rex.WRX and BYTE PTR [rsi+0x69],r12b
   14000a82c:	ins    BYTE PTR es:[rdi],dx
   14000a82d:	and    BYTE PTR gs:[rbp+0x70],dh
   14000a831:	fs (bad) 
   14000a833:	je     0x14000a89a
   14000a835:	and    BYTE PTR [rsi+0x61],ah
   14000a838:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e
   14000a840:	push   rbp
   14000a841:	jo     0x14000a8a7
   14000a843:	(bad)  
   14000a844:	je     0x14000a8ab
   14000a846:	push   rsi
   14000a847:	jo     0x14000a8b7
   14000a849:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x7250726f
   14000a852:	outs   dx,DWORD PTR ds:[rsi]
   14000a853:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2d2d
   14000a85a:	and    BYTE PTR [rsi+0x6f],ch
   14000a85d:	je     0x14000a87f
   14000a85f:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000a862:	outs   dx,BYTE PTR ds:[rsi]
   14000a863:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000a868:	and    BYTE PTR [rsi],ch
   14000a86a:	cs and BYTE PTR cs:[rcx+0x62],ah
   14000a86f:	outs   dx,DWORD PTR ds:[rsi]
   14000a870:	jb     0x14000a8e6
   14000a872:	imul   ebp,DWORD PTR [rsi+0x67],0x4300002e
   14000a879:	rex.WRX (bad) 
   14000a87b:	ins    DWORD PTR es:[rdi],dx
   14000a87c:	gs fs rex.WRB jne 0x14000a8f5
   14000a881:	gs js  0x14000a8be
   14000a884:	cmp    cl,BYTE PTR [rdi+rbp*2+0x63]
   14000a888:	imul   ebp,DWORD PTR [rax],0x29
   14000a88b:	and    BYTE PTR [rip+0x74744120],ch        # 0x1b474e9b1
   14000a891:	gs ins DWORD PTR es:[rdi],dx
   14000a893:	jo     0x14000a909
   14000a895:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   14000a89c:	(bad)  
   14000a89d:	movsxd esi,DWORD PTR [rcx+0x75]
   14000a8a0:	imul   esi,DWORD PTR [rdx+0x65],0x74756d20
   14000a8a7:	gs js  0x14000a8ca
   14000a8aa:	sub    eax,0x732520
   14000a8af:	add    BYTE PTR [rbx+0x4e],al
   14000a8b2:	(bad)  
   14000a8b3:	ins    DWORD PTR es:[rdi],dx
   14000a8b4:	gs fs rex.WRB jne 0x14000a92d
   14000a8b9:	gs js  0x14000a8f6
   14000a8bc:	cmp    cl,BYTE PTR [rdi+rbp*2+0x63]
   14000a8c0:	imul   ebp,DWORD PTR [rax],0x29
   14000a8c3:	and    BYTE PTR [rip+0x74754d20],ch        # 0x1b475f5e9
   14000a8c9:	gs js  0x14000a8ec
   14000a8cc:	(bad)  
   14000a8cd:	ins    BYTE PTR es:[rdi],dx
   14000a8ce:	jb     0x14000a935
   14000a8d0:	(bad)  
   14000a8d1:	fs jns 0x14000a8f4
   14000a8d4:	gs js  0x14000a940
   14000a8d7:	jae    0x14000a94d
   14000a8d9:	jae    0x14000a8fb
   14000a8db:	sub    eax,0x732520
   14000a8e0:	rex.XB
   14000a8e1:	rex.WRX (bad) 
   14000a8e3:	ins    DWORD PTR es:[rdi],dx
   14000a8e4:	gs fs rex.WRB jne 0x14000a95d
   14000a8e9:	gs js  0x14000a926
   14000a8ec:	cmp    cl,BYTE PTR [rdi+rbp*2+0x63]
   14000a8f0:	imul   ebp,DWORD PTR [rax],0x29
   14000a8f3:	and    BYTE PTR [rip+0x746f4e20],ch        # 0x1b46ff719
   14000a8f9:	and    BYTE PTR [rdi+0x61],dh
   14000a8fc:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x6f662067
   14000a904:	jb     0x14000a926
   14000a906:	ins    DWORD PTR es:[rdi],dx
   14000a907:	jne    0x14000a97d
   14000a909:	gs js  0x14000a92c
   14000a90c:	sub    eax,0x732520
   14000a911:	add    BYTE PTR [rax],al
   14000a913:	add    BYTE PTR [rax],al
   14000a915:	add    BYTE PTR [rax],al
   14000a917:	add    BYTE PTR [rdi+0x65],al
   14000a91a:	je     0x14000a972
   14000a91c:	gs jb  0x14000a992
   14000a91f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d6f7246
   14000a926:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x72432029
   14000a92f:	gs (bad) 
   14000a931:	je     0x14000a998
   14000a933:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x61662029
   14000a93c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x25202d20
   14000a944:	jae    0x14000a974
   14000a946:	add    BYTE PTR [rax],al
   14000a948:	rex.RXB
   14000a949:	gs je  0x14000a9a2
   14000a94c:	gs jb  0x14000a9c2
   14000a94f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d6f7246
   14000a956:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x65562029
   14000a95f:	jb     0x14000a9d4
   14000a961:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696620
   14000a968:	and    BYTE PTR gs:[rcx+0x73],ch
   14000a96c:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000a970:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14000a974:	and    BYTE PTR gs:[eip+0x2e732520],ch        # 0x16e73ce9c
   14000a97c:	add    BYTE PTR [rax],al
   14000a97e:	add    BYTE PTR [rax],al
   14000a980:	rex.RXB
   14000a981:	gs je  0x14000a9da
   14000a984:	gs jb  0x14000a9fa
   14000a987:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d6f7246
   14000a98e:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x65522029
   14000a997:	(bad)  
   14000a998:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x28],0x61662029
   14000a9a2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x25202d20
   14000a9aa:	jae    0x14000a9da
   14000a9ac:	add    BYTE PTR [rax],al
   14000a9ae:	add    BYTE PTR [rax],al
   14000a9b0:	rex.RXB
   14000a9b1:	gs je  0x14000aa0a
   14000a9b4:	gs jb  0x14000aa2a
   14000a9b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d6f7246
   14000a9be:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x6d432029
   14000a9c7:	rex.WRB (bad) 
   14000a9c9:	ins    BYTE PTR es:[rdi],dx
   14000a9ca:	ins    BYTE PTR es:[rdi],dx
   14000a9cb:	outs   dx,DWORD PTR ds:[rsi]
   14000a9cc:	movsxd ebp,DWORD PTR [rax]
   14000a9ce:	and    eax,0x66202975
   14000a9d3:	(bad)  
   14000a9d4:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e
   14000a9dc:	add    BYTE PTR [rax],al
   14000a9de:	add    BYTE PTR [rax],al
   14000a9e0:	rex.XB jb 0x14000aa48
   14000a9e3:	(bad)  
   14000a9e4:	je     0x14000aa4b
   14000a9e6:	push   rsp
   14000a9e7:	gs ins DWORD PTR es:[rdi],dx
   14000a9e9:	jo     0x14000aa2f
   14000a9eb:	imul   esi,DWORD PTR [rdx+0x28],0x65472029
   14000a9f2:	je     0x14000aa48
   14000a9f4:	gs ins DWORD PTR es:[rdi],dx
   14000a9f6:	jo     0x14000aa48
   14000a9f8:	(bad)  
   14000a9f9:	je     0x14000aa63
   14000a9fb:	and    BYTE PTR [rsi+0x61],ah
   14000a9fe:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000aa06:	rex.RB cmp eax,0x2e7525
   14000aa0c:	add    BYTE PTR [rax],al
   14000aa0e:	add    BYTE PTR [rax],al
   14000aa10:	rex.XB jb 0x14000aa78
   14000aa13:	(bad)  
   14000aa14:	je     0x14000aa7b
   14000aa16:	push   rsp
   14000aa17:	gs ins DWORD PTR es:[rdi],dx
   14000aa19:	jo     0x14000aa5f
   14000aa1b:	imul   esi,DWORD PTR [rdx+0x28],0x65472029
   14000aa22:	je     0x14000aa78
   14000aa24:	gs ins DWORD PTR es:[rdi],dx
   14000aa26:	jo     0x14000aa6e
   14000aa28:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x20656d61
   14000aa30:	data16 (bad) 
   14000aa32:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000aa3a:	rex.RB cmp eax,0x2e7525
   14000aa40:	rex.XB jb 0x14000aaa8
   14000aa43:	(bad)  
   14000aa44:	je     0x14000aaab
   14000aa46:	push   rsp
   14000aa47:	gs ins DWORD PTR es:[rdi],dx
   14000aa49:	jo     0x14000aa8f
   14000aa4b:	imul   esi,DWORD PTR [rdx+0x28],0x72432029
   14000aa52:	gs (bad) 
   14000aa54:	je     0x14000aabb
   14000aa56:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000aa5e:	jns    0x14000aa88
   14000aa60:	sub    DWORD PTR [rax],esp
   14000aa62:	data16 (bad) 
   14000aa64:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c47202c
   14000aa6c:	rex.RB cmp eax,0x2e7525
   14000aa72:	add    BYTE PTR [rax],al
   14000aa74:	add    BYTE PTR [rax],al
   14000aa76:	add    BYTE PTR [rax],al
   14000aa78:	rex.XB jb 0x14000aae0
   14000aa7b:	(bad)  
   14000aa7c:	je     0x14000aae3
   14000aa7e:	push   rsp
   14000aa7f:	gs ins DWORD PTR es:[rdi],dx
   14000aa81:	jo     0x14000aac7
   14000aa83:	imul   esi,DWORD PTR [rdx+0x28],0x202d2029
   14000aa8a:	push   rbx
   14000aa8b:	je     0x14000aaff
   14000aa8d:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   14000aa94:	outs   dx,DWORD PTR ds:[rsi]
   14000aa95:	jo     0x14000ab10
   14000aa97:	rex.RB js 0x14000aaba
   14000aa9a:	data16 (bad) 
   14000aa9c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000aaa4:	and    eax,0x52000a78
   14000aaa9:	push   rsp
   14000aaaa:	push   rbp
   14000aaab:	push   rsp
   14000aaac:	rex.WB
   14000aaad:	rex.WR push rbx
   14000aaaf:	cs rex.R
   14000aab1:	rex.WR
   14000aab2:	rex.WR add BYTE PTR [rax],r8b
   14000aab5:	add    BYTE PTR [rax],al
   14000aab7:	add    BYTE PTR [rdx+rsi*2+0x61],dl
   14000aabb:	movsxd esp,DWORD PTR [rbp+0x52]
   14000aabe:	imul   esi,DWORD PTR gs:[ebx+0x74],0x78457265
   14000aac7:	add    BYTE PTR [r8],al
   14000aaca:	add    BYTE PTR [rax],al
   14000aacc:	add    BYTE PTR [rax],al
   14000aace:	add    BYTE PTR [rax],al
   14000aad0:	push   rsp
   14000aad1:	jb     0x14000ab34
   14000aad3:	movsxd esp,DWORD PTR [rbp+0x44]
   14000aad6:	gs jb  0x14000ab3e
   14000aad9:	imul   esi,DWORD PTR [ebx+0x74],0x78457265
   14000aae1:	add    BYTE PTR [r8],al
   14000aae4:	add    BYTE PTR [rax],al
   14000aae6:	add    BYTE PTR [rax],al
   14000aae8:	push   rsp
   14000aae9:	jb     0x14000ab4c
   14000aaeb:	movsxd esp,DWORD PTR [rbp+0x50]
   14000aaee:	jb     0x14000ab59
   14000aaf0:	outs   dx,BYTE PTR ds:[rsi]
   14000aaf1:	je     0x14000ab59
   14000aaf3:	add    BYTE PTR [r8],al
   14000aaf6:	add    BYTE PTR [rax],al
   14000aaf8:	push   rsp
   14000aaf9:	jb     0x14000ab5c
   14000aafb:	movsxd esp,DWORD PTR [rbp+0x50]
   14000aafe:	jb     0x14000ab69
   14000ab00:	outs   dx,BYTE PTR ds:[rsi]
   14000ab01:	je     0x14000ab69
   14000ab03:	rex.RB js 0x14000ab47
   14000ab06:	add    BYTE PTR [rax],al
   14000ab08:	push   rsp
   14000ab09:	jb     0x14000ab6c
   14000ab0b:	movsxd esp,DWORD PTR [rbp+0x44]
   14000ab0e:	jne    0x14000ab7d
   14000ab10:	jo     0x14000ab57
   14000ab12:	js     0x14000ab55
   14000ab14:	add    BYTE PTR [rax],al
   14000ab16:	add    BYTE PTR [rax],al
   14000ab18:	imul   esp,DWORD PTR [rbp+0x72],0x6e
   14000ab1c:	gs ins BYTE PTR es:[rdi],dx
   14000ab1e:	xor    esi,DWORD PTR [rdx]
   14000ab20:	cs fs ins BYTE PTR es:[rdi],dx
   14000ab23:	ins    BYTE PTR es:[rdi],dx
   14000ab24:	add    BYTE PTR [rax],al
   14000ab26:	add    BYTE PTR [rax],al
   14000ab28:	rex.W
   14000ab29:	gs (bad) 
   14000ab2b:	jo     0x14000ab80
   14000ab2d:	gs je  0x14000ab79
   14000ab30:	outs   dx,BYTE PTR ds:[rsi]
   14000ab31:	outs   dx,WORD PTR ds:[rsi]
   14000ab33:	jb     0x14000aba2
   14000ab35:	(bad)  
   14000ab36:	je     0x14000aba1
   14000ab38:	outs   dx,DWORD PTR ds:[rsi]
   14000ab39:	outs   dx,BYTE PTR ds:[rsi]
   14000ab3a:	add    BYTE PTR [rax],al
   14000ab3c:	add    BYTE PTR [rax],al
   14000ab3e:	add    BYTE PTR [rax],al
   14000ab40:	push   rbx
   14000ab41:	je     0x14000abb5
   14000ab43:	imul   ebp,DWORD PTR [rsi+0x67],0x43686343
   14000ab4a:	outs   dx,DWORD PTR ds:[rsi]
   14000ab4b:	jo     0x14000abc6
   14000ab4d:	rex.RB js 0x14000ab70
   14000ab50:	data16 (bad) 
   14000ab52:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000ab5a:	push   0x72726520
   14000ab5f:	outs   dx,DWORD PTR ds:[rsi]
   14000ab60:	jb     0x14000ab9c
   14000ab62:	and    BYTE PTR [rax],dh
   14000ab64:	js     0x14000ab8b
   14000ab66:	js     0x14000ab72
	...
   14000ab74:	fsub   st,st(4)
   14000ab76:	in     eax,dx
   14000ab77:	push   rdi
   14000ab78:	add    BYTE PTR [rax],al
   14000ab7a:	add    BYTE PTR [rax],al
   14000ab7c:	add    al,BYTE PTR [rax]
   14000ab7e:	add    BYTE PTR [rax],al
   14000ab80:	and    eax,DWORD PTR [rax]
   14000ab82:	add    BYTE PTR [rax],al
   14000ab84:	jo     0x14000ab32
   14000ab86:	add    BYTE PTR [rax],al
   14000ab88:	jo     0x14000ab28
   14000ab8a:	add    BYTE PTR [rax],al
   14000ab8c:	add    BYTE PTR [rax],al
   14000ab8e:	add    BYTE PTR [rax],al
   14000ab90:	fsub   st,st(4)
   14000ab92:	in     eax,dx
   14000ab93:	push   rdi
   14000ab94:	add    BYTE PTR [rax],al
   14000ab96:	add    BYTE PTR [rax],al
   14000ab98:	or     eax,0xe0000000
   14000ab9d:	add    DWORD PTR [rax],eax
   14000ab9f:	add    BYTE PTR [rax-0x57ffff54],ch
   14000aba5:	sahf   
	...
   14000abce:	add    BYTE PTR [rax],al
   14000abd0:	movabs al,ds:0x0
	...
   14000ac25:	add    BYTE PTR [rax],al
   14000ac27:	add    BYTE PTR [rax],cl
   14000ac29:	rol    BYTE PTR [rax],1
   14000ac2b:	rex add DWORD PTR [rax],eax
	...
   14000ac3e:	add    BYTE PTR [rax],al
   14000ac40:	or     BYTE PTR [rbp+0x14000],al
   14000ac46:	add    BYTE PTR [rax],al
   14000ac48:	adc    BYTE PTR [rbp+0x14000],al
   14000ac4e:	add    BYTE PTR [rax],al
   14000ac50:	push   rax
   14000ac51:	test   DWORD PTR [rax],eax
   14000ac53:	rex add DWORD PTR [rax],eax
   14000ac56:	add    BYTE PTR [rax],al
   14000ac58:	sbb    al,0x0
   14000ac5a:	add    BYTE PTR [rax],al
   14000ac5c:	add    BYTE PTR [rax],al
   14000ac5e:	add    BYTE PTR [rax],al
   14000ac60:	add    BYTE PTR [rip+0x0],dh        # 0x14000ac66
	...
   14000ac6e:	add    BYTE PTR [rax],al
   14000ac70:	push   rdx
   14000ac71:	push   rbx
   14000ac72:	rex.R push rbx
   14000ac74:	ja     0x14000ac70
   14000ac76:	or     eax,0x924fb86a
   14000ac7b:	rex.RX scas al,BYTE PTR es:[rdi]
   14000ac7d:	cmp    bh,BYTE PTR [rbx]
   14000ac7f:	sti    
   14000ac80:	add    ebp,DWORD PTR [rax+0x1647a]
   14000ac86:	add    BYTE PTR [rax],al
   14000ac88:	movsxd ebp,DWORD PTR [rbp+0x64]
   14000ac8b:	ins    BYTE PTR es:[rdi],dx
   14000ac8c:	xor    esi,DWORD PTR [rdx]
   14000ac8e:	cs jo  0x14000acf5
   14000ac91:	(bad)  
	...
   14000aca6:	add    BYTE PTR [rax],al
   14000aca8:	rex.RXB
   14000aca9:	rex.XB push r12
   14000acab:	rex.WR add BYTE PTR [rax],r10b
   14000acae:	add    BYTE PTR [rax],al
   14000acb0:	jl     0x14000ad1e
   14000acb2:	add    BYTE PTR [rax],al
   14000acb4:	cs je  0x14000ad1c
   14000acb7:	js     0x14000ad2d
   14000acb9:	and    al,0x6d
   14000acbb:	outs   dx,BYTE PTR ds:[rsi]
   14000acbc:	add    BYTE PTR [rax],al
   14000acbe:	add    BYTE PTR [rax],al
   14000acc0:	cmp    BYTE PTR [rax+rax*1+0x0],0x7d
   14000acc5:	add    BYTE PTR [rax],al
   14000acc7:	add    BYTE PTR [rsi],ch
   14000acc9:	je     0x14000ad30
   14000accb:	js     0x14000ad41
   14000accd:	and    al,0x6d
   14000accf:	outs   dx,BYTE PTR ds:[rsi]
   14000acd0:	and    al,0x30
   14000acd2:	xor    BYTE PTR [rax],al
   14000acd4:	add    BYTE PTR [rbp+0x0],bh
   14000acd7:	add    BYTE PTR [rax+0x0],dl
   14000acda:	add    BYTE PTR [rax],al
   14000acdc:	cs je  0x14000ad44
   14000acdf:	js     0x14000ad55
   14000ace1:	and    al,0x78
   14000ace3:	add    BYTE PTR [rax],al
   14000ace5:	add    BYTE PTR [rax],0x0
   14000ace8:	or     BYTE PTR [rip+0x692e0000],al        # 0x1a92eacee
   14000acee:	fs (bad) 
   14000acf0:	je     0x14000ad53
   14000acf2:	and    al,0x35
   14000acf4:	add    BYTE PTR [rax],al
   14000acf6:	add    BYTE PTR [rax],al
   14000acf8:	or     BYTE PTR [rbp+0x100000],al
   14000acfe:	add    BYTE PTR [rax],al
   14000ad00:	xor    BYTE PTR cs:[rax],dh
   14000ad03:	movsxd esp,DWORD PTR [rsi+0x67]
   14000ad06:	add    BYTE PTR [rax],al
   14000ad08:	sbb    BYTE PTR [rbp+0x80000],al
   14000ad0e:	add    BYTE PTR [rax],al
   14000ad10:	cs rex.XB push r10
   14000ad13:	push   rsp
   14000ad14:	and    al,0x58
   14000ad16:	rex.XB
   14000ad17:	add    BYTE PTR [r8],al
   14000ad1a:	add    BYTE PTR [rax],al
   14000ad1c:	and    BYTE PTR [rbp+0x80000],al
   14000ad22:	add    BYTE PTR [rax],al
   14000ad24:	cs rex.XB push r10
   14000ad27:	push   rsp
   14000ad28:	and    al,0x58
   14000ad2a:	rex.XB
   14000ad2b:	rex.B
   14000ad2c:	add    BYTE PTR [r8],al
   14000ad2f:	add    BYTE PTR [rax],ch
   14000ad31:	test   DWORD PTR [rax],eax
   14000ad33:	add    BYTE PTR [rax],cl
   14000ad35:	add    BYTE PTR [rax],al
   14000ad37:	add    BYTE PTR [rsi],ch
   14000ad39:	rex.XB push r10
   14000ad3b:	push   rsp
   14000ad3c:	and    al,0x58
   14000ad3e:	rex.XB pop r10
   14000ad40:	add    BYTE PTR [rax],al
   14000ad42:	add    BYTE PTR [rax],al
   14000ad44:	xor    BYTE PTR [rbp+0x80000],al
   14000ad4a:	add    BYTE PTR [rax],al
   14000ad4c:	cs rex.XB push r10
   14000ad4f:	push   rsp
   14000ad50:	and    al,0x58
   14000ad52:	rex.WB
   14000ad53:	add    BYTE PTR [r8],al
   14000ad56:	add    BYTE PTR [rax],al
   14000ad58:	cmp    BYTE PTR [rbp+0x80000],al
   14000ad5e:	add    BYTE PTR [rax],al
   14000ad60:	cs rex.XB push r10
   14000ad63:	push   rsp
   14000ad64:	and    al,0x58
   14000ad66:	rex.WB
   14000ad67:	rex.B
   14000ad68:	add    BYTE PTR [r8],al
   14000ad6b:	add    BYTE PTR [rax-0x7b],al
   14000ad6e:	add    BYTE PTR [rax],al
   14000ad70:	or     BYTE PTR [rax],al
   14000ad72:	add    BYTE PTR [rax],al
   14000ad74:	cs rex.XB push r10
   14000ad77:	push   rsp
   14000ad78:	and    al,0x58
   14000ad7a:	rex.WB pop r9
   14000ad7c:	add    BYTE PTR [rax],al
   14000ad7e:	add    BYTE PTR [rax],al
   14000ad80:	test   QWORD PTR [rax],rax
   14000ad83:	add    BYTE PTR [rax],cl
   14000ad85:	add    BYTE PTR [rax],al
   14000ad87:	add    BYTE PTR [rsi],ch
   14000ad89:	rex.XB push r10
   14000ad8b:	push   rsp
   14000ad8c:	and    al,0x58
   14000ad8e:	rex.WB pop r10
   14000ad90:	add    BYTE PTR [rax],al
   14000ad92:	add    BYTE PTR [rax],al
   14000ad94:	push   rax
   14000ad95:	test   DWORD PTR [rax],eax
   14000ad97:	add    BYTE PTR [rax+0x0],dh
   14000ad9a:	add    BYTE PTR [rax],al
   14000ad9c:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000ada5:	add    BYTE PTR [rax],al
   14000ada7:	add    al,al
   14000ada9:	test   DWORD PTR [rax],eax
   14000adab:	add    BYTE PTR [rax+0x2e000026],dh
   14000adb1:	jb     0x14000ae17
   14000adb3:	(bad)  
   14000adb4:	je     0x14000ae17
   14000adb6:	add    BYTE PTR [rax],al
   14000adb8:	jo     0x14000ad66
   14000adba:	add    BYTE PTR [rax],al
   14000adbc:	sbb    BYTE PTR [rdx],al
   14000adbe:	add    BYTE PTR [rax],al
   14000adc0:	cs jb  0x14000ae27
   14000adc3:	(bad)  
   14000adc4:	je     0x14000ae27
   14000adc6:	and    al,0x7a
   14000adc8:	jp     0x14000ae44
   14000adca:	fs (bad) 
   14000adcc:	add    BYTE PTR [eax],al
   14000adcf:	add    BYTE PTR [rax+0x600000ae],cl
   14000add5:	add    al,0x0
   14000add7:	add    BYTE PTR [rsi],ch
   14000add9:	js     0x14000ae3f
   14000addb:	(bad)  
   14000addc:	je     0x14000ae3f
   14000adde:	add    BYTE PTR [rax],al
   14000ade0:	call   0x10800ae97
   14000ade5:	add    BYTE PTR [rax],al
   14000ade7:	add    BYTE PTR [rsi],ch
   14000ade9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000adf1:	add    BYTE PTR [rax],al
   14000adf3:	add    BYTE PTR [rax+0x140000b3],dh
   14000adf9:	add    BYTE PTR [rax],al
   14000adfb:	add    BYTE PTR [rsi],ch
   14000adfd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   14000ae05:	add    BYTE PTR [rax],al
   14000ae07:	add    al,cl
   14000ae09:	mov    bl,0x0
   14000ae0b:	add    BYTE PTR [rax],cl
   14000ae0d:	add    eax,0x692e0000
   14000ae12:	fs (bad) 
   14000ae14:	je     0x14000ae77
   14000ae16:	and    al,0x34
   14000ae18:	add    BYTE PTR [rax],al
   14000ae1a:	add    BYTE PTR [rax],al
   14000ae1c:	sar    BYTE PTR [rax+0xb4e0000],1
   14000ae22:	add    BYTE PTR [rax],al
   14000ae24:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000ae2d:	add    BYTE PTR [rax],al
   14000ae2f:	add    BYTE PTR [rax],al
   14000ae31:	rol    BYTE PTR [rax],1
   14000ae33:	add    BYTE PTR [rax+0x2e000000],dh
   14000ae39:	fs (bad) 
   14000ae3b:	je     0x14000ae9e
   14000ae3d:	add    BYTE PTR [rax],al
   14000ae3f:	add    BYTE PTR [rax+0x200000d0],dh
   14000ae45:	(bad)  
   14000ae46:	add    BYTE PTR [rax],al
   14000ae48:	cs (bad) 
   14000ae4b:	jae    0x14000ae4d
   14000ae4d:	add    BYTE PTR [rax],al
   14000ae4f:	add    BYTE PTR [rax],al
   14000ae51:	loopne 0x14000ae53
   14000ae53:	add    BYTE PTR [rax],dh
   14000ae55:	add    eax,DWORD PTR [rax]
   14000ae57:	add    BYTE PTR [rsi],ch
   14000ae59:	jo     0x14000aebf
   14000ae5b:	(bad)  
   14000ae5c:	je     0x14000aebf
   14000ae5e:	add    BYTE PTR [rax],al
   14000ae60:	add    al,dh
   14000ae62:	add    BYTE PTR [rax],al
   14000ae64:	add    BYTE PTR [rcx],0x0
   14000ae67:	add    BYTE PTR [rsi],ch
   14000ae69:	jb     0x14000aede
   14000ae6b:	jb     0x14000aed0
   14000ae6d:	and    al,0x30
   14000ae6f:	xor    DWORD PTR [rax],eax
   14000ae71:	add    BYTE PTR [rax],al
   14000ae73:	add    BYTE PTR [rax+0x600000f1],al
   14000ae79:	or     al,BYTE PTR [rax]
   14000ae7b:	add    BYTE PTR [rsi],ch
   14000ae7d:	jb     0x14000aef2
   14000ae7f:	jb     0x14000aee4
   14000ae81:	and    al,0x30
   14000ae83:	xor    al,BYTE PTR [rax]
   14000ae85:	add    BYTE PTR [rax],al
   14000ae87:	add    BYTE PTR [rcx],al
   14000ae89:	adc    DWORD PTR [rax+rax*1],eax
   14000ae8c:	adc    DWORD PTR [rdx],esi
   14000ae8e:	or     eax,0xb600c70
   14000ae93:	xor    BYTE PTR [rcx],al
   14000ae95:	(bad)  
   14000ae96:	add    al,BYTE PTR [rax]
   14000ae98:	(bad)  
   14000ae99:	xor    al,BYTE PTR [rdx]
   14000ae9b:	xor    BYTE PTR [rcx],al
   14000ae9d:	or     al,BYTE PTR [rax+rax*1]
   14000aea0:	or     dh,BYTE PTR [rsi+rax*1]
   14000aea3:	add    BYTE PTR [rdx],cl
   14000aea5:	xor    al,BYTE PTR [rsi]
   14000aea7:	jo     0x14000aeaa
   14000aea9:	adc    BYTE PTR [rsi],al
   14000aeab:	add    BYTE PTR [rax],dl
   14000aead:	or     eax,DWORD PTR fs:[rax]
   14000aeb0:	adc    BYTE PTR [rdx+rcx*1],dh
   14000aeb3:	add    BYTE PTR [rax],dl
   14000aeb5:	jb     0x14000aec3
   14000aeb7:	jo     0x14000aeba
   14000aeb9:	add    al,0x1
   14000aebb:	add    BYTE PTR [rdx+riz*2],al
   14000aebe:	add    BYTE PTR [rax],al
   14000aec0:	add    DWORD PTR [rcx+rax*1],eax
   14000aec3:	add    BYTE PTR [rdx+rax*2],al
   14000aec6:	add    BYTE PTR [rax],al
   14000aec8:	sbb    DWORD PTR [rbx],ebp
   14000aeca:	or     eax,DWORD PTR [rax]
   14000aecc:	sbb    DWORD PTR [rbp+rdx*2+0x0],edx
   14000aed0:	sbb    DWORD PTR [rsp+rdx*2],esi
   14000aed3:	add    BYTE PTR [rcx],bl
   14000aed5:	add    DWORD PTR [rax+rax*1+0x12],ecx
   14000aed9:	lock adc al,ah
   14000aedc:	(bad)  
   14000aedd:	ror    BYTE PTR [rax+rsi*2],0xb
   14000aee1:	(bad)  
   14000aee2:	add    BYTE PTR [rax],al
   14000aee4:	call   0x19000af64
   14000aee9:	add    al,BYTE PTR [rax]
   14000aeeb:	add    BYTE PTR [rcx],al
   14000aeed:	adc    eax,0x74150008
   14000aef2:	or     BYTE PTR [rax],al
   14000aef4:	adc    eax,0x15000764
   14000aef9:	xor    al,0x6
   14000aefb:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0c033
   14000af01:	clts   
   14000af03:	add    BYTE PTR [rdi],cl
   14000af05:	fs (bad) 
   14000af07:	add    BYTE PTR [rdi],cl
   14000af09:	xor    al,0x6
   14000af0b:	add    BYTE PTR [rdi],cl
   14000af0d:	xor    cl,BYTE PTR [rbx]
   14000af0f:	jo     0x14000af2a
   14000af11:	sub    al,0xb
   14000af13:	add    BYTE PTR [rsi],bl
   14000af15:	fs xor eax,0x34341e00
   14000af1b:	add    BYTE PTR [rsi],bl
   14000af1d:	add    DWORD PTR [rax+rax*1],ebp
   14000af20:	adc    dh,al
   14000af22:	adc    al,ah
   14000af24:	(bad)  
   14000af25:	ror    BYTE PTR [rax+rsi*2],0xb
   14000af29:	push   rax
   14000af2a:	add    BYTE PTR [rax],al
   14000af2c:	call   0x19000afac
   14000af31:	add    DWORD PTR [rax],eax
   14000af33:	add    BYTE PTR [rcx],al
   14000af35:	clts   
   14000af37:	add    BYTE PTR [rdi],cl
   14000af39:	or     DWORD PTR fs:[rax],eax
   14000af3c:	sysenter 
   14000af3e:	or     BYTE PTR [rax],al
   14000af40:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000af43:	jo     0x14000af46
   14000af45:	or     al,BYTE PTR [rax+rax*1]
   14000af48:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   14000af4c:	add    eax,0x1000134
   14000af51:	add    eax,0x34050002
   14000af56:	add    DWORD PTR [rax],eax
   14000af58:	add    DWORD PTR [rdi],ecx
   14000af5a:	(bad)  
   14000af5b:	add    BYTE PTR [rdi],cl
   14000af5d:	je     0x14000af62
   14000af5f:	add    BYTE PTR [rdx],cl
   14000af61:	add    al,BYTE PTR fs:[rax]
   14000af64:	add    eax,0x1000134
   14000af69:	sbb    eax,0x821d0009
   14000af6e:	(bad)  
   14000af6f:	lock adc al,0xe0
   14000af72:	adc    dl,al
   14000af74:	adc    al,al
   14000af76:	(bad)  
   14000af77:	jo     0x14000af86
   14000af79:	(bad)  
   14000af7a:	or     al,0x30
   14000af7c:	or     edx,DWORD PTR [rax+0x0]
   14000af7f:	add    BYTE PTR [rcx],al
   14000af81:	sbb    DWORD PTR [rdx],ecx
   14000af83:	add    BYTE PTR [rcx],bl
   14000af85:	in     al,0x9
   14000af87:	add    BYTE PTR [rcx],bl
   14000af89:	je     0x14000af93
   14000af8b:	add    BYTE PTR [rcx],bl
   14000af8d:	fs (bad) 
   14000af8f:	add    BYTE PTR [rcx],bl
   14000af91:	xor    al,0x6
   14000af93:	add    BYTE PTR [rcx],bl
   14000af95:	xor    dl,BYTE PTR [rip+0x91801f0]        # 0x14918b18b
   14000af9b:	add    BYTE PTR [rax],bl
   14000af9d:	ret    0xf011
   14000afa0:	pavgb  mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c0bb77
   14000afa7:	jo     0x14000afb1
   14000afa9:	(bad)  
   14000afaa:	(bad)  
   14000afab:	xor    BYTE PTR [rsi],al
   14000afad:	push   rax
   14000afae:	add    BYTE PTR [rax],al
   14000afb0:	sbb    DWORD PTR [rdi],ebp
   14000afb2:	or     eax,DWORD PTR [rax]
   14000afb4:	sbb    eax,0x1d021634
   14000afb9:	add    DWORD PTR [rdx+rax*1],ecx
   14000afbc:	adc    al,dh
   14000afbe:	(bad)  
   14000afbf:	loopne 0x14000afcd
   14000afc1:	ror    BYTE PTR [rdx],1
   14000afc3:	ror    BYTE PTR [rax],0x70
   14000afc6:	(bad)  
   14000afc7:	(bad)  
   14000afc8:	(bad)  
   14000afc9:	push   rax
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	call   0x19000b04c
   14000afd1:	adc    BYTE PTR [rax],al
   14000afd3:	add    BYTE PTR [rcx],bl
   14000afd5:	sub    BYTE PTR [rcx],cl
   14000afd7:	add    BYTE PTR [rdx],bl
   14000afd9:	sbb    eax,DWORD PTR fs:[rax]
   14000afdc:	sbb    dh,BYTE PTR [rdx+rbx*1]
   14000afdf:	add    BYTE PTR [rdx],bl
   14000afe1:	add    DWORD PTR [rax+rax*1],edx
   14000afe4:	(bad)  
   14000afe5:	loopne 0x14000aff3
   14000afe7:	jo     0x14000aff4
   14000afe9:	push   rax
   14000afea:	add    BYTE PTR [rax],al
   14000afec:	call   0xd800b06c
   14000aff1:	add    BYTE PTR [rax],al
   14000aff3:	add    BYTE PTR [rcx],bl
   14000aff5:	(bad)  
   14000aff6:	or     DWORD PTR [rax],eax
   14000aff8:	(bad)  
   14000aff9:	je     0x14000b052
   14000affb:	add    BYTE PTR [rsi],bl
   14000affd:	fs push rsi
   14000afff:	add    BYTE PTR [rsi],bl
   14000b001:	xor    al,0x55
   14000b003:	add    BYTE PTR [rsi],bl
   14000b005:	add    DWORD PTR [rdx+0x0],edx
   14000b008:	adc    BYTE PTR [rax+0x0],dl
   14000b00b:	add    al,ch
   14000b00d:	jnp    0x14000b00f
   14000b00f:	add    BYTE PTR [rax+0x19000002],al
   14000b015:	sub    eax,0x641f000b
   14000b01a:	add    BYTE PTR ss:[rdi],bl
   14000b01d:	xor    al,0x35
   14000b01f:	add    BYTE PTR [rdi],bl
   14000b021:	add    DWORD PTR [rsi],ebp
   14000b023:	add    BYTE PTR [rbx],dl
   14000b025:	lock adc eax,esp
   14000b028:	(bad)  
   14000b02a:	or     eax,0x500bc0
   14000b02f:	add    al,ch
   14000b031:	jnp    0x14000b033
   14000b033:	add    BYTE PTR [rax+0x1],ah
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	add    DWORD PTR [rdx],ecx
   14000b03a:	add    al,0x0
   14000b03c:	or     dh,BYTE PTR [rdx+rcx*1]
   14000b03f:	add    BYTE PTR [rdx],cl
   14000b041:	push   rdx
   14000b042:	(bad)  
   14000b043:	jo     0x14000b05e
   14000b045:	xor    DWORD PTR [rip+0x6d641f00],ecx        # 0x1ad64cf4b
   14000b04b:	add    BYTE PTR [rdi],bl
   14000b04d:	push   rsp
   14000b04e:	ins    BYTE PTR es:[rdi],dx
   14000b04f:	add    BYTE PTR [rdi],bl
   14000b051:	xor    al,0x6b
   14000b053:	add    BYTE PTR [rdi],bl
   14000b055:	add    DWORD PTR [rax+rax*1+0x18],esp
   14000b059:	lock (bad) 
   14000b05b:	loopne 0x14000b071
   14000b05d:	rcl    BYTE PTR [rdx],1
   14000b05f:	rcl    BYTE PTR [rax],0x70
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	call   0x15000b0e4
   14000b069:	add    eax,DWORD PTR [rax]
   14000b06b:	add    BYTE PTR [rcx],bl
   14000b06d:	xor    cl,BYTE PTR [rip+0x37742400]        # 0x17774d473
   14000b073:	add    BYTE PTR [rsp+riz*2],ah
   14000b076:	add    BYTE PTR ss:[rsp+rsi*1],ah
   14000b07a:	xor    eax,0x2e012400
   14000b07f:	add    BYTE PTR [rax],bl
   14000b081:	lock (bad) 
   14000b083:	loopne 0x14000b099
   14000b085:	rcl    BYTE PTR [rdx],1
   14000b087:	rcl    BYTE PTR [rax],0x50
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	call   0x1a000b10c
   14000b091:	add    DWORD PTR [rax],eax
   14000b093:	add    BYTE PTR [rcx],bl
   14000b095:	xor    BYTE PTR [rbx],cl
   14000b097:	add    BYTE PTR [rdi],bl
   14000b099:	xor    al,0x5b
   14000b09b:	add    BYTE PTR [rdi],bl
   14000b09d:	add    DWORD PTR [rdx+0x0],edx
   14000b0a0:	adc    al,dh
   14000b0a2:	(bad)  
   14000b0a3:	loopne 0x14000b0b1
   14000b0a5:	ror    BYTE PTR [rdx],1
   14000b0a7:	ror    BYTE PTR [rax],0x70
   14000b0aa:	(bad)  
   14000b0ab:	(bad)  
   14000b0ac:	(bad)  
   14000b0ad:	push   rax
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	call   0xc000b130
   14000b0b5:	add    al,BYTE PTR [rax]
   14000b0b7:	add    BYTE PTR [rcx],bl
   14000b0b9:	xor    DWORD PTR [rdi],eax
   14000b0bb:	add    BYTE PTR [rax],ah
   14000b0bd:	xor    al,0x55
   14000b0bf:	add    BYTE PTR [rax],ah
   14000b0c1:	add    DWORD PTR [rax+0x0],edx
   14000b0c4:	adc    DWORD PTR [rax+0x10],esi
   14000b0c7:	(bad)  
   14000b0c8:	(bad)  
   14000b0ca:	add    BYTE PTR [rax],al
   14000b0cc:	call   0x1b000b14c
   14000b0d1:	add    al,BYTE PTR [rax]
   14000b0d3:	add    BYTE PTR [rcx],bl
   14000b0d5:	(bad)  
   14000b0d6:	or     DWORD PTR [rax],eax
   14000b0d8:	adc    eax,0x15003154
   14000b0dd:	xor    al,0x30
   14000b0df:	add    BYTE PTR [rip+0xe002a01],dl        # 0x14e00dae6
   14000b0e5:	loopne 0x14000b0f3
   14000b0e7:	jo     0x14000b0f4
   14000b0e9:	(bad)  
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	call   0x18000b16c
   14000b0f1:	add    DWORD PTR [rax],eax
   14000b0f3:	add    BYTE PTR [rcx],bl
   14000b0f5:	(bad)  
   14000b0f6:	or     eax,0x83742600
   14000b0fb:	add    BYTE PTR [rsi],ah
   14000b0fd:	fs (bad) 
   14000b0ff:	add    BYTE PTR [rsi],ah
   14000b101:	xor    al,0x81
   14000b103:	add    BYTE PTR [rsi],ah
   14000b105:	add    DWORD PTR [rdx+0x0],edi
   14000b108:	sbb    al,dh
   14000b10a:	(bad)  
   14000b10b:	loopne 0x14000b121
   14000b10d:	rcl    BYTE PTR [rdx],1
   14000b10f:	rcl    BYTE PTR [rax],0x50
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	call   0x10000b194
   14000b119:	add    eax,DWORD PTR [rax]
   14000b11b:	add    BYTE PTR [rcx],bl
   14000b11d:	xor    BYTE PTR [rbx],cl
   14000b11f:	add    BYTE PTR [rdi],bl
   14000b121:	xor    al,0xe0
   14000b123:	add    BYTE PTR [rdi],bl
   14000b125:	add    esi,edx
   14000b127:	add    BYTE PTR [rax],dl
   14000b129:	lock (bad) 
   14000b12b:	loopne 0x14000b139
   14000b12d:	ror    BYTE PTR [rdx],1
   14000b12f:	ror    BYTE PTR [rax],0x70
   14000b132:	(bad)  
   14000b133:	(bad)  
   14000b134:	(bad)  
   14000b135:	push   rax
   14000b136:	add    BYTE PTR [rax],al
   14000b138:	call   0xe000b1b8
   14000b13d:	(bad)  
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	sbb    DWORD PTR [rdx],esi
   14000b142:	or     eax,0x36742400
   14000b147:	add    BYTE PTR [rsp+riz*2],ah
   14000b14a:	xor    eax,0x34342400
   14000b14f:	add    BYTE PTR [rcx+rax*1],ah
   14000b152:	add    BYTE PTR cs:[rax],bl
   14000b155:	lock (bad) 
   14000b157:	loopne 0x14000b16d
   14000b159:	rcl    BYTE PTR [rdx],1
   14000b15b:	rcl    BYTE PTR [rax],0x50
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	call   0x1a000b1e0
   14000b165:	add    DWORD PTR [rax],eax
   14000b167:	add    BYTE PTR [rcx],al
   14000b169:	sbb    BYTE PTR [rdx],cl
   14000b16b:	add    BYTE PTR [rax],bl
   14000b16d:	fs or  al,0x0
   14000b170:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   14000b174:	sbb    BYTE PTR [rdx+rcx*1],dh
   14000b177:	add    BYTE PTR [rax],bl
   14000b179:	push   rdx
   14000b17a:	adc    al,0xf0
   14000b17c:	adc    ah,al
   14000b17e:	adc    BYTE PTR [rax+0x1],dh
   14000b181:	(bad)  
   14000b182:	or     eax,0x1b742700
   14000b187:	add    BYTE PTR [rdi],ah
   14000b189:	sbb    DWORD PTR fs:[rax],eax
   14000b18c:	(bad)  
   14000b18d:	xor    al,0x18
   14000b18f:	add    BYTE PTR [rdi],ah
   14000b191:	add    DWORD PTR [rdx],edx
   14000b193:	add    BYTE PTR [rax+rsi*8],bl
   14000b196:	sbb    ah,al
   14000b198:	sbb    al,dl
   14000b19a:	(bad)  
   14000b19b:	rcl    BYTE PTR [rax+rdx*2],0x0
   14000b19f:	add    BYTE PTR [rcx],al
   14000b1a1:	(bad)  
   14000b1a2:	or     al,BYTE PTR [rax]
   14000b1a4:	(bad)  
   14000b1a5:	xor    al,0x17
   14000b1a7:	add    BYTE PTR [rdi],dl
   14000b1a9:	rcl    BYTE PTR [rax],cl
   14000b1ab:	lock (bad) 
   14000b1ad:	loopne 0x14000b1bb
   14000b1af:	ror    BYTE PTR [rdx],1
   14000b1b1:	ror    BYTE PTR [rax],0x70
   14000b1b4:	(bad)  
   14000b1b5:	(bad)  
   14000b1b6:	(bad)  
   14000b1b7:	push   rax
   14000b1b8:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41db1ca
   14000b1be:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d00c029
   14000b1c5:	push   rsp
   14000b1c6:	or     eax,0xc341d00
   14000b1cb:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f0cb43
   14000b1d1:	loopne 0x14000b1e8
   14000b1d3:	rol    BYTE PTR [rcx],0x1c
   14000b1d6:	or     al,0x0
   14000b1d8:	sbb    al,0x64
   14000b1da:	ltr    WORD PTR [rsp+rdx*2]
   14000b1de:	(bad)  
   14000b1df:	add    BYTE PTR [rsp+rsi*1],bl
   14000b1e2:	or     eax,0x18521c00
   14000b1e7:	lock (bad) 
   14000b1e9:	loopne 0x14000b1ff
   14000b1eb:	rcl    BYTE PTR [rdx],1
   14000b1ed:	rcl    BYTE PTR [rax],0x70
   14000b1f0:	add    DWORD PTR [rax+rcx*1],edx
   14000b1f3:	add    BYTE PTR [rsp+riz*2],dl
   14000b1f6:	or     eax,0xc541400
   14000b1fb:	add    BYTE PTR [rsp+rsi*1],dl
   14000b1fe:	or     al,BYTE PTR [rax]
   14000b200:	adc    al,0x72
   14000b202:	adc    BYTE PTR [rax+0x19],dh
   14000b205:	(bad)  
   14000b206:	add    eax,0x4f340d00
   14000b20b:	add    BYTE PTR [rip+0x6004c01],cl        # 0x14600fe12
   14000b211:	jo     0x14000b213
   14000b213:	add    al,ch
   14000b215:	jnp    0x14000b217
   14000b217:	add    BYTE PTR [rax+0x2],dl
   14000b21a:	add    BYTE PTR [rax],al
   14000b21c:	sbb    DWORD PTR [rdx],esp
   14000b21e:	add    al,BYTE PTR [rax]
   14000b220:	adc    BYTE PTR [rcx],al
   14000b222:	ret    
   14000b223:	add    al,ch
   14000b225:	jnp    0x14000b227
   14000b227:	add    BYTE PTR [rax],al
   14000b229:	(bad)  
   14000b22a:	add    BYTE PTR [rax],al
   14000b22c:	sbb    DWORD PTR [rdx],ebp
   14000b22e:	add    al,0x0
   14000b230:	sbb    BYTE PTR [rcx],al
   14000b232:	rex.RXB add BYTE PTR [r9],r10b
   14000b235:	jo     0x14000b247
   14000b237:	xor    al,ch
   14000b239:	jnp    0x14000b23b
   14000b23b:	add    BYTE PTR [rax],ah
   14000b23d:	add    al,BYTE PTR [rax]
   14000b23f:	add    BYTE PTR [rcx],cl
   14000b241:	sbb    BYTE PTR [rcx],cl
   14000b243:	add    BYTE PTR [rax],bl
   14000b245:	je     0x14000b261
   14000b247:	add    BYTE PTR [rax],bl
   14000b249:	sbb    DWORD PTR fs:[rax],eax
   14000b24c:	sbb    BYTE PTR [rax+rbx*1],dh
   14000b24f:	add    BYTE PTR [rax],bl
   14000b251:	add    DWORD PTR [rsi],edx
   14000b253:	add    BYTE PTR [rcx],dl
   14000b255:	lock add BYTE PTR [rax],al
   14000b258:	mov    dh,0x7b
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	add    DWORD PTR [rax],eax
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	mov    al,0x74
   14000b262:	add    BYTE PTR [rax],al
   14000b264:	xchg   edi,eax
   14000b265:	jbe    0x14000b267
   14000b267:	add    BYTE PTR [rsi],al
   14000b269:	jge    0x14000b26b
   14000b26b:	add    BYTE PTR [rdi+0x1000076],dl
   14000b271:	add    BYTE PTR [rax],al
   14000b273:	add    BYTE PTR [rcx],al
   14000b275:	or     al,0x2
   14000b277:	add    BYTE PTR [rcx+rax*1],cl
   14000b27a:	adc    DWORD PTR [rax],eax
   14000b27c:	or     DWORD PTR [rcx+rax*1],eax
   14000b27f:	add    BYTE PTR [rdx+riz*1],al
   14000b282:	add    BYTE PTR [rax],al
   14000b284:	mov    dh,0x7b
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	add    DWORD PTR [rax],eax
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	rex.WR jns 0x14000b28f
   14000b28f:	add    BYTE PTR [rdx+0x1000079],al
   14000b295:	add    BYTE PTR [rax],al
   14000b297:	add    BYTE PTR [rdx+0x9000079],al
   14000b29d:	or     al,BYTE PTR [rax+rax*1]
   14000b2a0:	or     dh,BYTE PTR [rsi+rax*1]
   14000b2a3:	add    BYTE PTR [rdx],cl
   14000b2a5:	xor    al,BYTE PTR [rsi]
   14000b2a7:	jo     0x14000b25f
   14000b2a9:	jnp    0x14000b2ab
   14000b2ab:	add    BYTE PTR [rcx],al
   14000b2ad:	add    BYTE PTR [rax],al
   14000b2af:	add    BYTE PTR [rbp+0x7a],cl
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	cmp    BYTE PTR [rdx+0x0],0x0
   14000b2b8:	xor    BYTE PTR [rbp+0x0],bh
   14000b2bb:	add    BYTE PTR [rax+0x100007a],al
   14000b2c1:	(bad)  
   14000b2c2:	add    al,BYTE PTR [rax]
   14000b2c4:	(bad)  
   14000b2c5:	xor    al,BYTE PTR [rdx]
   14000b2c7:	push   rax
   14000b2c8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740db2d2
   14000b2ce:	or     DWORD PTR [rax],eax
   14000b2d0:	or     eax,0x500632
   14000b2d5:	add    BYTE PTR [rax],al
   14000b2d7:	add    BYTE PTR [rcx],al
   14000b2d9:	add    BYTE PTR [rax],al
   14000b2db:	add    BYTE PTR [rax],al
   14000b2dd:	add    BYTE PTR [rax],al
   14000b2df:	add    BYTE PTR [rcx],al
   14000b2e1:	add    al,0x1
   14000b2e3:	add    BYTE PTR [rdx+rdx*1],al
   14000b2e6:	add    BYTE PTR [rax],al
   14000b2e8:	enter  0xb3,0x0
	...
   14000b2f4:	add    bh,BYTE PTR [rcx-0x80000000]
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	and    BYTE PTR [rax+rax*1+0x0],dh
   14000b303:	add    BYTE PTR [rax],al
   14000b305:	add    BYTE PTR [rax],al
   14000b307:	add    BYTE PTR [rsi-0x44],ah
   14000b30a:	add    BYTE PTR [rax],al
   14000b30c:	pop    rax
   14000b30d:	add    BYTE PTR [rax],0x0
   14000b310:	xor    BYTE PTR [rsi+0x0],dh
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	add    BYTE PTR [rax],al
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	in     al,0xbd
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	push   0x40000082
   14000b325:	mov    eax,0x0
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	add    BYTE PTR [rax],al
   14000b32e:	add    BYTE PTR [rax],al
   14000b330:	mov    esp,0x780000be
   14000b335:	test   BYTE PTR [rax],al
   14000b337:	add    BYTE PTR [rax-0x49],dl
	...
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	rex.X mov edi,0x83880000
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	xor    BYTE PTR [rdi+0x0],0x0
   14000b353:	add    BYTE PTR [rax],al
   14000b355:	add    BYTE PTR [rax],al
   14000b357:	add    BYTE PTR [rax-0x3f],dl
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	mov    eax,0xe8000083
   14000b361:	mov    bl,0x0
	...
   14000b36b:	add    BYTE PTR [rcx+rax*8+0x0],bl
   14000b36f:	add    BYTE PTR [rax],ah
   14000b371:	add    BYTE PTR [rax],0x0
   14000b374:	clc    
   14000b375:	mov    bl,0x0
	...
   14000b37f:	add    BYTE PTR [rdx-0x3f],ch
   14000b382:	add    BYTE PTR [rax],al
   14000b384:	xor    BYTE PTR [rax-0x49e00000],al
	...
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	mov    ecx,es
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	pop    rax
   14000b399:	(bad)  
   14000b39a:	add    BYTE PTR [rax],al
   14000b39c:	loopne 0x14000b354
	...
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	rol    dl,cl
   14000b3aa:	add    BYTE PTR [rax],al
   14000b3ac:	sbb    BYTE PTR [rbx+0x0],al
	...
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	in     al,0xb8
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	add    BYTE PTR [rax],al
   14000b3ce:	add    BYTE PTR [rax],al
   14000b3d0:	hlt    
   14000b3d1:	mov    eax,0x0
   14000b3d6:	add    BYTE PTR [rax],al
   14000b3d8:	sar    BYTE PTR [rax+0x0],1
	...
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	adc    DWORD PTR [rax],eax
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	add    BYTE PTR [rax],al
   14000b3ee:	add    BYTE PTR [rax+0x0],al
   14000b3f4:	add    BYTE PTR [rax],al
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	adc    eax,0x0
   14000b3fd:	add    BYTE PTR [rax],al
   14000b3ff:	adc    BYTE PTR [rsi],0x0
   14000b402:	add    BYTE PTR [rax],al
   14000b404:	add    BYTE PTR [rax],al
   14000b406:	add    BYTE PTR [rax+0x14],al
   14000b40c:	add    BYTE PTR [rax],al
   14000b40e:	add    BYTE PTR [rax+0x17],al
   14000b414:	add    BYTE PTR [rax],al
   14000b416:	add    BYTE PTR [rax+0x0],al
   14000b41c:	add    BYTE PTR [rax],al
   14000b41e:	add    BYTE PTR [rax],al
   14000b420:	jp     0x14000b3db
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	add    BYTE PTR [rax],al
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	mov    bh,BYTE PTR [rcx+0x0]
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	(bad)  
   14000b431:	mov    ecx,0x0
   14000b436:	add    BYTE PTR [rax],al
   14000b438:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b439:	mov    ecx,0x0
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	mov    esp,0xb9
   14000b445:	add    BYTE PTR [rax],al
   14000b447:	add    al,dl
   14000b449:	mov    ecx,0x0
   14000b44e:	add    BYTE PTR [rax],al
   14000b450:	fidivr WORD PTR [rcx+0x0]
   14000b456:	add    BYTE PTR [rax],al
   14000b458:	out    dx,al
   14000b459:	mov    ecx,0x0
   14000b45e:	add    BYTE PTR [rax],al
   14000b460:	or     BYTE PTR [rdx+0x0],bh
   14000b466:	add    BYTE PTR [rax],al
   14000b468:	adc    al,0xba
   14000b46a:	add    BYTE PTR [rax],al
   14000b46c:	add    BYTE PTR [rax],al
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	and    bh,BYTE PTR [rdx+0x0]
   14000b476:	add    BYTE PTR [rax],al
   14000b478:	cmp    BYTE PTR [rdx+0x0],bh
   14000b47e:	add    BYTE PTR [rax],al
   14000b480:	rex.R mov edx,0x0
   14000b486:	add    BYTE PTR [rax],al
   14000b488:	push   rsp
   14000b489:	mov    edx,0x0
   14000b48e:	add    BYTE PTR [rax],al
   14000b490:	mov    dx,0x0
   14000b494:	add    BYTE PTR [rax],al
   14000b496:	add    BYTE PTR [rax],al
   14000b498:	jle    0x14000b454
   14000b49a:	add    BYTE PTR [rax],al
   14000b49c:	add    BYTE PTR [rax],al
   14000b49e:	add    BYTE PTR [rax],al
   14000b4a0:	xchg   BYTE PTR [rdx+0x0],bh
   14000b4a6:	add    BYTE PTR [rax],al
   14000b4a8:	xchg   esi,eax
   14000b4a9:	mov    edx,0x0
   14000b4ae:	add    BYTE PTR [rax],al
   14000b4b0:	movabs ds:0xb6000000000000ba,al
   14000b4b9:	mov    edx,0x0
   14000b4be:	add    BYTE PTR [rax],al
   14000b4c0:	(bad)  
   14000b4c1:	mov    edx,0x0
   14000b4c6:	add    BYTE PTR [rax],al
   14000b4c8:	loopne 0x14000b484
   14000b4ca:	add    BYTE PTR [rax],al
   14000b4cc:	add    BYTE PTR [rax],al
   14000b4ce:	add    BYTE PTR [rax],al
   14000b4d0:	repnz mov edx,0x0
   14000b4d6:	add    BYTE PTR [rax],al
   14000b4d8:	(bad)  
   14000b4d9:	mov    ebx,0x0
   14000b4de:	add    BYTE PTR [rax],al
   14000b4e0:	adc    bh,BYTE PTR [rbx+0x0]
   14000b4e6:	add    BYTE PTR [rax],al
   14000b4e8:	(bad)  
   14000b4e9:	mov    ebx,0x0
   14000b4ee:	add    BYTE PTR [rax],al
   14000b4f0:	cmp    bh,BYTE PTR [rbx+0x0]
   14000b4f6:	add    BYTE PTR [rax],al
   14000b4f8:	sub    BYTE PTR [rcx+0x0],bh
   14000b4fe:	add    BYTE PTR [rax],al
   14000b500:	push   0xbb
   14000b505:	add    BYTE PTR [rax],al
   14000b507:	add    BYTE PTR [rsi-0x47],ch
   14000b50a:	add    BYTE PTR [rax],al
   14000b50c:	add    BYTE PTR [rax],al
   14000b50e:	add    BYTE PTR [rax],al
   14000b510:	nop
   14000b511:	mov    ebx,0x0
   14000b516:	add    BYTE PTR [rax],al
   14000b518:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b519:	mov    ebx,0x0
   14000b51e:	add    BYTE PTR [rax],al
   14000b520:	mov    dh,0xbb
   14000b522:	add    BYTE PTR [rax],al
   14000b524:	add    BYTE PTR [rax],al
   14000b526:	add    BYTE PTR [rax],al
   14000b528:	(bad)  
   14000b529:	mov    ebx,0x0
   14000b52e:	add    BYTE PTR [rax],al
   14000b530:	fdivr  QWORD PTR [rbx+0x0]
   14000b536:	add    BYTE PTR [rax],al
   14000b538:	(bad)  
   14000b539:	mov    ebx,0x0
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	cli    
   14000b541:	mov    ebx,0x0
   14000b546:	add    BYTE PTR [rax],al
   14000b548:	or     BYTE PTR [rax+rax*1+0x0],bh
   14000b54f:	add    BYTE PTR [rsp+rdi*4],ah
   14000b552:	add    BYTE PTR [rax],al
   14000b554:	add    BYTE PTR [rax],al
   14000b556:	add    BYTE PTR [rax],al
   14000b558:	xor    al,0xbc
   14000b55a:	add    BYTE PTR [rax],al
   14000b55c:	add    BYTE PTR [rax],al
   14000b55e:	add    BYTE PTR [rax],al
   14000b560:	rex.R mov esp,0x0
   14000b566:	add    BYTE PTR [rax],al
   14000b568:	push   rdx
   14000b569:	mov    esp,0x0
   14000b56e:	add    BYTE PTR [rax],al
   14000b570:	bnd ret 
   14000b572:	add    BYTE PTR [rax],al
   14000b574:	add    BYTE PTR [rax],al
   14000b576:	add    BYTE PTR [rax],al
   14000b578:	fadd   st,st(3)
   14000b57a:	add    BYTE PTR [rax],al
   14000b57c:	add    BYTE PTR [rax],al
   14000b57e:	add    BYTE PTR [rax],al
   14000b580:	ret    0xc3
   14000b583:	add    BYTE PTR [rax],al
   14000b585:	add    BYTE PTR [rax],al
   14000b587:	add    BYTE PTR [rax+0xc3],ch
   14000b58d:	add    BYTE PTR [rax],al
   14000b58f:	add    BYTE PTR [rbx+rax*8+0x0],dl
   14000b596:	add    BYTE PTR [rax],al
   14000b598:	add    bl,0x0
   14000b59b:	add    BYTE PTR [rax],al
   14000b59d:	add    BYTE PTR [rax],al
   14000b59f:	add    BYTE PTR [rbx+rax*8+0x0],ch
   14000b5a3:	add    BYTE PTR [rax],al
   14000b5a5:	add    BYTE PTR [rax],al
   14000b5a7:	add    BYTE PTR [rsi-0x3d],cl
   14000b5aa:	add    BYTE PTR [rax],al
   14000b5ac:	add    BYTE PTR [rax],al
   14000b5ae:	add    BYTE PTR [rax],al
   14000b5b0:	xor    al,bl
   14000b5b2:	add    BYTE PTR [rax],al
   14000b5b4:	add    BYTE PTR [rax],al
   14000b5b6:	add    BYTE PTR [rax],al
   14000b5b8:	(bad)  
   14000b5b9:	ret    
   14000b5ba:	add    BYTE PTR [rax],al
   14000b5bc:	add    BYTE PTR [rax],al
   14000b5be:	add    BYTE PTR [rax],al
   14000b5c0:	add    al,0xc3
   14000b5c2:	add    BYTE PTR [rax],al
   14000b5c4:	add    BYTE PTR [rax],al
   14000b5c6:	add    BYTE PTR [rax],al
   14000b5c8:	lock ret 0x0
   14000b5cc:	add    BYTE PTR [rax],al
   14000b5ce:	add    BYTE PTR [rax],al
   14000b5d0:	faddp  st(2),st
   14000b5d2:	add    BYTE PTR [rax],al
   14000b5d4:	add    BYTE PTR [rax],al
   14000b5d6:	add    BYTE PTR [rax],al
   14000b5d8:	(bad)  
   14000b5d9:	mov    ecx,0x0
   14000b5de:	add    BYTE PTR [rax],al
   14000b5e0:	push   rsp
   14000b5e1:	mov    ecx,0x0
   14000b5e6:	add    BYTE PTR [rax],al
   14000b5e8:	movabs rcx,0xbb80000000000000
   14000b5f2:	add    BYTE PTR [rax],al
   14000b5f4:	add    BYTE PTR [rax],al
   14000b5f6:	add    BYTE PTR [rax],al
   14000b5f8:	ss mov ecx,0x0
   14000b5fe:	add    BYTE PTR [rax],al
   14000b600:	adc    BYTE PTR [rcx+0x0],bh
   14000b606:	add    BYTE PTR [rax],al
   14000b608:	pop    rax
   14000b609:	mov    ebx,0x0
   14000b60e:	add    BYTE PTR [rax],al
   14000b610:	add    al,ah
	...
   14000b61e:	add    BYTE PTR [rax],al
   14000b620:	jbe    0x14000b5e3
	...
   14000b62e:	add    BYTE PTR [rax],al
   14000b630:	xchg   esp,eax
   14000b631:	mov    esp,0x0
   14000b636:	add    BYTE PTR [rax],al
   14000b638:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b639:	mov    esp,0x0
   14000b63e:	add    BYTE PTR [rax],al
   14000b640:	mov    eax,0xbc
   14000b645:	add    BYTE PTR [rax],al
   14000b647:	add    dl,cl
   14000b649:	mov    esp,0x0
   14000b64e:	add    BYTE PTR [rax],al
   14000b650:	fidivr WORD PTR [rax+rax*1+0x0]
   14000b657:	add    dh,dh
   14000b659:	mov    esp,0x0
   14000b65e:	add    BYTE PTR [rax],al
   14000b660:	(bad)  
   14000b661:	mov    ebp,0x0
   14000b666:	add    BYTE PTR [rax],al
   14000b668:	sbb    bh,BYTE PTR [rbp+0x0]
   14000b66e:	add    BYTE PTR [rax],al
   14000b670:	sub    BYTE PTR [rbp+0x0],bh
   14000b676:	add    BYTE PTR [rax],al
   14000b678:	(bad)  
   14000b679:	mov    esp,0x0
   14000b67e:	add    BYTE PTR [rax],al
   14000b680:	rex.RX mov ebp,0x0
   14000b686:	add    BYTE PTR [rax],al
   14000b688:	(bad)  
   14000b689:	mov    ebp,0x0
   14000b68e:	add    BYTE PTR [rax],al
   14000b690:	ins    BYTE PTR es:[rdi],dx
   14000b691:	mov    ebp,0x0
   14000b696:	add    BYTE PTR [rax],al
   14000b698:	js     0x14000b657
   14000b69a:	add    BYTE PTR [rax],al
   14000b69c:	add    BYTE PTR [rax],al
   14000b69e:	add    BYTE PTR [rax],al
   14000b6a0:	fdivr  DWORD PTR [rbp+0x0]
   14000b6a6:	add    BYTE PTR [rax],al
   14000b6a8:	enter  0xbd,0x0
   14000b6ac:	add    BYTE PTR [rax],al
   14000b6ae:	add    BYTE PTR [rax],al
   14000b6b0:	mov    ah,0xbd
   14000b6b2:	add    BYTE PTR [rax],al
   14000b6b4:	add    BYTE PTR [rax],al
   14000b6b6:	add    BYTE PTR [rax],al
   14000b6b8:	movabs al,ds:0x8a000000000000bd
   14000b6c1:	mov    ebp,0x0
   14000b6c6:	add    BYTE PTR [rax],al
   14000b6c8:	xor    al,0xbd
   14000b6ca:	add    BYTE PTR [rax],al
   14000b6cc:	add    BYTE PTR [rax],al
   14000b6ce:	add    BYTE PTR [rax],al
   14000b6d0:	je     0x14000b68e
	...
   14000b6de:	add    BYTE PTR [rax],al
   14000b6e0:	retf   0xc1
   14000b6e3:	add    BYTE PTR [rax],al
   14000b6e5:	add    BYTE PTR [rax],al
   14000b6e7:	add    BYTE PTR [rcx+rax*8+0x0],dh
   14000b6ee:	add    BYTE PTR [rax],al
   14000b6f0:	(bad)  
   14000b6f1:	rol    DWORD PTR [rax],0x0
   14000b6f4:	add    BYTE PTR [rax],al
   14000b6f6:	add    BYTE PTR [rax],al
   14000b6f8:	fadd   st(1),st
   14000b6fa:	add    BYTE PTR [rax],al
   14000b6fc:	add    BYTE PTR [rax],al
   14000b6fe:	add    BYTE PTR [rax],al
   14000b700:	repnz rol DWORD PTR [rax],0x0
   14000b704:	add    BYTE PTR [rax],al
   14000b706:	add    BYTE PTR [rax],al
   14000b708:	or     dl,al
   14000b70a:	add    BYTE PTR [rax],al
   14000b70c:	add    BYTE PTR [rax],al
   14000b70e:	add    BYTE PTR [rax],al
   14000b710:	and    al,0xc2
   14000b712:	add    BYTE PTR [rax],al
   14000b714:	add    BYTE PTR [rax],al
   14000b716:	add    BYTE PTR [rax],al
   14000b718:	xor    al,dl
   14000b71a:	add    BYTE PTR [rax],al
   14000b71c:	add    BYTE PTR [rax],al
   14000b71e:	add    BYTE PTR [rax],al
   14000b720:	mov    edx,0xc2
   14000b725:	add    BYTE PTR [rax],al
   14000b727:	add    BYTE PTR [rax-0x3e],cl
   14000b72a:	add    BYTE PTR [rax],al
   14000b72c:	add    BYTE PTR [rax],al
   14000b72e:	add    BYTE PTR [rax],al
   14000b730:	xchg   esp,eax
   14000b731:	ret    0x0
   14000b734:	add    BYTE PTR [rax],al
   14000b736:	add    BYTE PTR [rax],al
   14000b738:	pop    rdx
   14000b739:	ret    0x0
   14000b73c:	add    BYTE PTR [rax],al
   14000b73e:	add    BYTE PTR [rax],al
   14000b740:	ins    BYTE PTR es:[rdi],dx
   14000b741:	ret    0x0
	...
   14000b750:	fdivr  QWORD PTR [rsi+0x0]
   14000b756:	add    BYTE PTR [rax],al
   14000b758:	or     BYTE PTR [rdi+0x0],bh
   14000b75e:	add    BYTE PTR [rax],al
   14000b760:	sbb    bh,BYTE PTR [rdi+0x0]
   14000b766:	add    BYTE PTR [rax],al
   14000b768:	xor    bh,BYTE PTR [rdi+0x0]
   14000b76e:	add    BYTE PTR [rax],al
   14000b770:	repnz mov esi,0x0
	...
   14000b77e:	add    BYTE PTR [rax],al
   14000b780:	cli    
   14000b781:	rol    BYTE PTR [rax],0x0
   14000b784:	add    BYTE PTR [rax],al
   14000b786:	add    BYTE PTR [rax],al
   14000b788:	sub    al,al
   14000b78a:	add    BYTE PTR [rax],al
   14000b78c:	add    BYTE PTR [rax],al
   14000b78e:	add    BYTE PTR [rax],al
   14000b790:	sub    al,0xc1
   14000b792:	add    BYTE PTR [rax],al
   14000b794:	add    BYTE PTR [rax],al
   14000b796:	add    BYTE PTR [rax],al
   14000b798:	rol    DWORD PTR ds:[rax],0x0
   14000b79c:	add    BYTE PTR [rax],al
   14000b79e:	add    BYTE PTR [rax],al
   14000b7a0:	or     al,0xc0
   14000b7a2:	add    BYTE PTR [rax],al
   14000b7a4:	add    BYTE PTR [rax],al
   14000b7a6:	add    BYTE PTR [rax],al
   14000b7a8:	loop   0x14000b769
   14000b7aa:	add    BYTE PTR [rax],al
   14000b7ac:	add    BYTE PTR [rax],al
   14000b7ae:	add    BYTE PTR [rax],al
   14000b7b0:	in     al,dx
   14000b7b1:	rol    BYTE PTR [rax],0x0
   14000b7b4:	add    BYTE PTR [rax],al
   14000b7b6:	add    BYTE PTR [rax],al
   14000b7b8:	mov    ah,0xbf
   14000b7ba:	add    BYTE PTR [rax],al
   14000b7bc:	add    BYTE PTR [rax],al
   14000b7be:	add    BYTE PTR [rax],al
   14000b7c0:	movabs ds:0x8e000000000000bf,al
   14000b7c9:	mov    edi,0x0
   14000b7ce:	add    BYTE PTR [rax],al
   14000b7d0:	jl     0x14000b791
   14000b7d2:	add    BYTE PTR [rax],al
   14000b7d4:	add    BYTE PTR [rax],al
   14000b7d6:	add    BYTE PTR [rax],al
   14000b7d8:	jb     0x14000b799
   14000b7da:	add    BYTE PTR [rax],al
   14000b7dc:	add    BYTE PTR [rax],al
   14000b7de:	add    BYTE PTR [rax],al
   14000b7e0:	mov    di,0x0
   14000b7e4:	add    BYTE PTR [rax],al
   14000b7e6:	add    BYTE PTR [rax],al
   14000b7e8:	pop    rdx
   14000b7e9:	mov    edi,0x0
   14000b7ee:	add    BYTE PTR [rax],al
   14000b7f0:	rex.WRX movabs rdi,0xc0d4000000000000
   14000b7fa:	add    BYTE PTR [rax],al
   14000b7fc:	add    BYTE PTR [rax],al
   14000b7fe:	add    BYTE PTR [rax],al
   14000b800:	mov    esp,0xc0
   14000b805:	add    BYTE PTR [rax],al
   14000b807:	add    BYTE PTR [rdx+0xc0],cl
   14000b80d:	add    BYTE PTR [rax],al
   14000b80f:	add    BYTE PTR [rax+rax*8+0x0],ah
   14000b813:	add    BYTE PTR [rax],al
   14000b815:	add    BYTE PTR [rax],al
   14000b817:	add    al,al
   14000b819:	mov    edi,0x0
   14000b81e:	add    BYTE PTR [rax],al
   14000b820:	rex.RX rol BYTE PTR [rax],0x0
   14000b824:	add    BYTE PTR [rax],al
   14000b826:	add    BYTE PTR [rax],al
   14000b828:	(bad)  
   14000b829:	mov    edi,0x0
   14000b82e:	add    BYTE PTR [rax],al
   14000b830:	or     al,0xc1
	...
   14000b83e:	add    BYTE PTR [rax],al
   14000b840:	or     al,0xbe
   14000b842:	add    BYTE PTR [rax],al
   14000b844:	add    BYTE PTR [rax],al
   14000b846:	add    BYTE PTR [rax],al
   14000b848:	enter  0xbe,0x0
   14000b84c:	add    BYTE PTR [rax],al
   14000b84e:	add    BYTE PTR [rax],al
   14000b850:	mov    al,0xbe
   14000b852:	add    BYTE PTR [rax],al
   14000b854:	add    BYTE PTR [rax],al
   14000b856:	add    BYTE PTR [rax],al
   14000b858:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b859:	mov    esi,0x0
   14000b85e:	add    BYTE PTR [rax],al
   14000b860:	pushf  
   14000b861:	mov    esi,0x0
   14000b866:	add    BYTE PTR [rax],al
   14000b868:	test   BYTE PTR [rsi+0x0],bh
   14000b86e:	add    BYTE PTR [rax],al
   14000b870:	js     0x14000b830
   14000b872:	add    BYTE PTR [rax],al
   14000b874:	add    BYTE PTR [rax],al
   14000b876:	add    BYTE PTR [rax],al
   14000b878:	fs mov esi,0x0
   14000b87e:	add    BYTE PTR [rax],al
   14000b880:	(bad)  
   14000b881:	mov    ebp,0x0
   14000b886:	add    BYTE PTR [rax],al
   14000b888:	rex.WR movabs rsi,0xbe44000000000000
   14000b892:	add    BYTE PTR [rax],al
   14000b894:	add    BYTE PTR [rax],al
   14000b896:	add    BYTE PTR [rax],al
   14000b898:	cmp    al,0xbe
   14000b89a:	add    BYTE PTR [rax],al
   14000b89c:	add    BYTE PTR [rax],al
   14000b89e:	add    BYTE PTR [rax],al
   14000b8a0:	sub    bh,BYTE PTR [rsi+0x0]
   14000b8a6:	add    BYTE PTR [rax],al
   14000b8a8:	sbb    bh,BYTE PTR [rsi+0x0]
   14000b8ae:	add    BYTE PTR [rax],al
   14000b8b0:	lock mov ebp,0x0
   14000b8b6:	add    BYTE PTR [rax],al
   14000b8b8:	push   rsi
   14000b8b9:	mov    esi,0x0
   14000b8be:	add    BYTE PTR [rax],al
   14000b8c0:	adc    al,0xc4
	...
   14000b8ce:	add    BYTE PTR [rax],al
   14000b8d0:	xchg   edx,eax
   14000b8d1:	add    dl,BYTE PTR [rdx+0x65]
   14000b8d4:	addr32 push rcx
   14000b8d6:	jne    0x14000b93d
   14000b8d8:	jb     0x14000b953
   14000b8da:	push   rsi
   14000b8db:	(bad)  
   14000b8dc:	ins    BYTE PTR es:[rdi],dx
   14000b8dd:	jne    0x14000b944
   14000b8df:	rex.RB js 0x14000b923
   14000b8e2:	add    BYTE PTR [rax],al
   14000b8e4:	test   DWORD PTR [rdx],eax
   14000b8e6:	push   rdx
   14000b8e7:	gs addr32 rex.WRXB jo 0x14000b951
   14000b8ec:	outs   dx,BYTE PTR ds:[rsi]
   14000b8ed:	rex.WXB
   14000b8ee:	gs jns 0x14000b936
   14000b8f1:	js     0x14000b934
   14000b8f3:	add    BYTE PTR [rbp+0x2],dl
   14000b8f6:	push   rdx
   14000b8f7:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000b8fb:	outs   dx,DWORD PTR ds:[rsi]
   14000b8fc:	jae    0x14000b963
   14000b8fe:	rex.WXB
   14000b8ff:	gs jns 0x14000b902
   14000b902:	rex.B
   14000b903:	rex.R push rsi
   14000b905:	push   r8
   14000b907:	xor    rsi,QWORD PTR [r10]
   14000b90a:	cs fs ins BYTE PTR es:[rdi],dx
   14000b90d:	ins    BYTE PTR es:[rdi],dx
   14000b90e:	add    BYTE PTR [rax],al
   14000b910:	(bad)  
   14000b911:	add    DWORD PTR [rdi+rbp*2+0x73],eax
   14000b915:	rex.R (bad) 
   14000b917:	je     0x14000b97e
   14000b919:	push   rsp
   14000b91a:	imul   ebp,DWORD PTR [rbp+0x65],0x69466f54
   14000b921:	ins    BYTE PTR es:[rdi],dx
   14000b922:	gs push rsp
   14000b924:	imul   ebp,DWORD PTR [rbp+0x65],0x4300b800
   14000b92b:	jb     0x14000b992
   14000b92d:	(bad)  
   14000b92e:	je     0x14000b995
   14000b930:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x53051400
   14000b939:	gs je  0x14000b982
   14000b93c:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   14000b944:	gs jb  0x14000b947
   14000b947:	add    BYTE PTR [rip+0x74736c06],ch        # 0x1b4742553
   14000b94d:	jb     0x14000b9bb
   14000b94f:	outs   dx,BYTE PTR gs:[rsi]
   14000b951:	add    BYTE PTR [r8],al
   14000b954:	sbb    BYTE PTR [rip+0x46746553],al        # 0x186751ead
   14000b95a:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x656d69
   14000b962:	add    BYTE PTR [rsi],al
   14000b964:	push   rdi
   14000b965:	jb     0x14000b9d0
   14000b967:	je     0x14000b9ce
   14000b969:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x6552045c
   14000b972:	(bad)  
   14000b973:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x47025700
   14000b97d:	gs je  0x14000b9cc
   14000b980:	(bad)  
   14000b981:	jae    0x14000b9f7
   14000b983:	rex.RB jb 0x14000b9f8
   14000b986:	outs   dx,DWORD PTR ds:[rsi]
   14000b987:	jb     0x14000b989
   14000b989:	add    BYTE PTR [rbx],ah
   14000b98b:	add    eax,0x4c746553
   14000b990:	(bad)  
   14000b991:	jae    0x14000ba07
   14000b993:	rex.RB jb 0x14000ba08
   14000b996:	outs   dx,DWORD PTR ds:[rsi]
   14000b997:	jb     0x14000b999
   14000b999:	add    BYTE PTR [rsi+rax*1],ah
   14000b99c:	ins    BYTE PTR es:[rdi],dx
   14000b99d:	jae    0x14000ba13
   14000b99f:	jb     0x14000ba04
   14000b9a1:	ins    DWORD PTR es:[rdi],dx
   14000b9a2:	jo     0x14000ba0d
   14000b9a4:	add    BYTE PTR [rax*1+0x46746553],cl
   14000b9ac:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000b9b4:	(bad)  
   14000b9b5:	jne    0x14000ba2b
   14000b9b7:	gs jae 0x14000b9fb
   14000b9ba:	add    BYTE PTR [rax],al
   14000b9bc:	(bad)  
   14000b9bd:	add    al,BYTE PTR [rdi+0x65]
   14000b9c0:	je     0x14000ba16
   14000b9c2:	gs ins DWORD PTR es:[rdi],dx
   14000b9c4:	jo     0x14000ba0c
   14000b9c6:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x41656d61
   14000b9ce:	add    BYTE PTR [rax],al
   14000b9d0:	jge    0x14000b9d2
   14000b9d2:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b9d4:	outs   dx,DWORD PTR ds:[rsi]
   14000b9d5:	jae    0x14000ba3c
   14000b9d7:	rex.W (bad) 
   14000b9d9:	outs   dx,BYTE PTR ds:[rsi]
   14000b9da:	fs ins BYTE PTR es:[rdi],dx
   14000b9dc:	gs add ah,ch
   14000b9df:	add    al,BYTE PTR [rdi+0x65]
   14000b9e2:	je     0x14000ba38
   14000b9e4:	gs ins DWORD PTR es:[rdi],dx
   14000b9e6:	jo     0x14000ba38
   14000b9e8:	(bad)  
   14000b9e9:	je     0x14000ba53
   14000b9eb:	add    BYTE PTR [r8],al
   14000b9ee:	mov    bh,0x3
   14000b9f0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b9f2:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b9f5:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   14000b9fe:	outs   dx,DWORD PTR ds:[rsi]
   14000b9ff:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   14000ba08:	and    DWORD PTR [rsi],eax
   14000ba0a:	ins    BYTE PTR es:[rdi],dx
   14000ba0b:	jae    0x14000ba81
   14000ba0d:	jb     0x14000ba72
   14000ba0f:	ins    DWORD PTR es:[rdi],dx
   14000ba10:	jo     0x14000ba53
   14000ba12:	add    BYTE PTR [rax],al
   14000ba14:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ba15:	add    DWORD PTR [rsi+0x72],eax
   14000ba18:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000ba22:	enter  0x5705,0x61
   14000ba26:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000ba2e:	ins    BYTE PTR es:[edi],dx
   14000ba30:	gs rex.WRXB (bad) 
   14000ba33:	push   0x65
   14000ba35:	movsxd esi,DWORD PTR [rax+rax*1+0x8]
   14000ba39:	add    eax,0x45746553
   14000ba3e:	jbe    0x14000baa5
   14000ba40:	outs   dx,BYTE PTR ds:[rsi]
   14000ba41:	je     0x14000ba43
   14000ba43:	add    ch,bh
   14000ba45:	add    al,BYTE PTR [rdi+0x65]
   14000ba48:	je     0x14000ba9e
   14000ba4a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000ba51:	je     0x14000ba53
   14000ba53:	add    bh,cl
   14000ba55:	add    DWORD PTR [rdi+0x65],eax
   14000ba58:	je     0x14000ba9d
   14000ba5a:	outs   dx,DWORD PTR ds:[rsi]
   14000ba5b:	ins    DWORD PTR es:[rdi],dx
   14000ba5c:	ins    DWORD PTR es:[rdi],dx
   14000ba5d:	(bad)  
   14000ba5e:	outs   dx,BYTE PTR ds:[rsi]
   14000ba5f:	imul   r13,QWORD PTR fs:[rsi+0x65],0x29b0041
   14000ba68:	rex.RXB
   14000ba69:	gs je  0x14000babc
   14000ba6c:	jb     0x14000bad7
   14000ba6e:	jbe    0x14000bad1
   14000ba70:	je     0x14000bad7
   14000ba72:	push   rax
   14000ba73:	jb     0x14000bae4
   14000ba75:	imul   bp,WORD PTR [rbp+riz*2+0x49],0x746e
   14000ba7c:	add    BYTE PTR [r13+0x5],bpl
   14000ba80:	push   rbx
   14000ba81:	ins    BYTE PTR es:[rdi],dx
   14000ba82:	gs gs jo 0x14000ba86
   14000ba86:	mov    cl,0x0
   14000ba88:	rex.XB jb 0x14000baf0
   14000ba8b:	(bad)  
   14000ba8c:	je     0x14000baf3
   14000ba8e:	rex.RB jbe 0x14000baf6
   14000ba91:	outs   dx,BYTE PTR ds:[rsi]
   14000ba92:	je     0x14000bad5
   14000ba94:	add    BYTE PTR [rax],al
   14000ba96:	cs (bad) 
   14000ba98:	ins    BYTE PTR es:[rdi],dx
   14000ba99:	jae    0x14000bb0f
   14000ba9b:	jb     0x14000bb09
   14000ba9d:	outs   dx,BYTE PTR gs:[rsi]
   14000ba9f:	push   rdi
   14000baa0:	add    BYTE PTR [rax],al
   14000baa2:	cwde   
   14000baa3:	add    DWORD PTR [rsi+0x6c],eax
   14000baa6:	jne    0x14000bb1b
   14000baa8:	push   0x656c6946
   14000baad:	rex.X jne 0x14000bb16
   14000bab0:	data16 gs jb 0x14000bb27
   14000bab4:	add    BYTE PTR [rax],al
   14000bab6:	cli    
   14000bab7:	add    al,0x53
   14000bab9:	gs je  0x14000baff
   14000babc:	jne    0x14000bb30
   14000babe:	jb     0x14000bb25
   14000bac0:	outs   dx,BYTE PTR ds:[rsi]
   14000bac1:	je     0x14000bb07
   14000bac3:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   14000baca:	jns    0x14000bb0d
   14000bacc:	add    BYTE PTR [rax],al
   14000bace:	jb     0x14000bad1
   14000bad0:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   14000bad8:	je     0x14000bb20
   14000bada:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x2a50000
   14000bae2:	rex.RXB
   14000bae3:	gs je  0x14000bb36
   14000bae6:	jb     0x14000bb57
   14000bae8:	movsxd eax,DWORD PTR [rcx+0x64]
   14000baeb:	fs jb  0x14000bb53
   14000baee:	jae    0x14000bb63
   14000baf0:	add    BYTE PTR [rax],al
   14000baf2:	lahf   
   14000baf3:	add    al,0x52
   14000baf5:	gs ins DWORD PTR es:[rdi],dx
   14000baf7:	outs   dx,DWORD PTR ds:[rsi]
   14000baf8:	jbe    0x14000bb5f
   14000bafa:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000bb02:	jns    0x14000bb45
   14000bb04:	add    BYTE PTR [rax],al
   14000bb06:	sahf   
   14000bb07:	add    BYTE PTR [rbx+0x6f],al
   14000bb0a:	jo     0x14000bb85
   14000bb0c:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x46016e00
   14000bb15:	imul   ebp,DWORD PTR [rsi+0x64],0x736f6c43
   14000bb1c:	add    BYTE PTR gs:[rcx+0x74654702],ah
   14000bb23:	push   rax
   14000bb24:	jb     0x14000bb8f
   14000bb26:	jbe    0x14000bb89
   14000bb28:	je     0x14000bb8f
   14000bb2a:	push   rax
   14000bb2b:	jb     0x14000bb9c
   14000bb2d:	imul   bp,WORD PTR [rbp+riz*2+0x53],0x7274
   14000bb34:	imul   ebp,DWORD PTR [rsi+0x67],0x5000041
   14000bb3b:	(bad)  
   14000bb3c:	push   rdi
   14000bb3d:	jb     0x14000bba8
   14000bb3f:	je     0x14000bba6
   14000bb41:	push   rax
   14000bb42:	jb     0x14000bbad
   14000bb44:	jbe    0x14000bba7
   14000bb46:	je     0x14000bbad
   14000bb48:	push   rax
   14000bb49:	jb     0x14000bbba
   14000bb4b:	imul   bp,WORD PTR [rbp+riz*2+0x53],0x7274
   14000bb52:	imul   ebp,DWORD PTR [rsi+0x67],0xda000041
   14000bb59:	add    al,BYTE PTR [rdi+0x65]
   14000bb5c:	je     0x14000bbb1
   14000bb5e:	jns    0x14000bbd3
   14000bb60:	je     0x14000bbc7
   14000bb62:	ins    DWORD PTR es:[rdi],dx
   14000bb63:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bb65:	outs   dx,WORD PTR ds:[rsi]
   14000bb67:	add    BYTE PTR [rsi+0x6e6f4300],dl
   14000bb6d:	jbe    0x14000bbd4
   14000bb6f:	jb     0x14000bbe5
   14000bb71:	rex.R
   14000bb72:	gs data16 (bad) 
   14000bb75:	jne    0x14000bbe3
   14000bb77:	je     0x14000bbc5
   14000bb79:	outs   dx,DWORD PTR ds:[rsi]
   14000bb7a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000bb7d:	add    BYTE PTR gs:[rax],al
   14000bb80:	add    DWORD PTR [rcx],0x46
   14000bb83:	imul   ebp,DWORD PTR [rsi+0x64],0x7478654e
   14000bb8a:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x47026b00
   14000bb93:	gs je  0x14000bbe3
   14000bb96:	outs   dx,DWORD PTR ds:[rsi]
   14000bb97:	fs jne 0x14000bc06
   14000bb9a:	gs rex.W (bad) 
   14000bb9d:	outs   dx,BYTE PTR ds:[rsi]
   14000bb9e:	fs ins BYTE PTR es:[rdi],dx
   14000bba0:	add    BYTE PTR gs:[r8],al
   14000bba4:	lods   eax,DWORD PTR ds:[rsi]
   14000bba5:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000bba9:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000bbb2:	js     0x14000bbf5
   14000bbb4:	add    BYTE PTR [rax],al
   14000bbb6:	adc    DWORD PTR [rbx],eax
   14000bbb8:	rex.RXB
   14000bbb9:	gs je  0x14000bc12
   14000bbbc:	gs jb  0x14000bc32
   14000bbbf:	imul   ebp,DWORD PTR [rdi+0x6e],0x417845
   14000bbc6:	adc    DWORD PTR [rdx],eax
   14000bbc8:	rex.RXB
   14000bbc9:	gs je  0x14000bc0f
   14000bbcc:	jne    0x14000bc40
   14000bbce:	jb     0x14000bc35
   14000bbd0:	outs   dx,BYTE PTR ds:[rsi]
   14000bbd1:	je     0x14000bc23
   14000bbd3:	jb     0x14000bc44
   14000bbd5:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bbd8:	jae    0x14000bc23
   14000bbda:	add    BYTE PTR fs:[rdi],al
   14000bbdd:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14000bbe1:	gs je  0x14000bc49
   14000bbe4:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x4300e600
   14000bbed:	jb     0x14000bc54
   14000bbef:	(bad)  
   14000bbf0:	je     0x14000bc57
   14000bbf2:	push   rsp
   14000bbf3:	push   0x64616572
   14000bbf8:	add    BYTE PTR [rax],al
   14000bbfa:	sub    eax,DWORD PTR [rbx]
   14000bbfc:	rex.RXB ins BYTE PTR es:[rdi],dx
   14000bbfe:	outs   dx,DWORD PTR ds:[rsi]
   14000bbff:	(bad)
   14000bc04:	gs add BYTE PTR gs:[rax],al
   14000bc08:	popf   
   14000bc09:	add    al,BYTE PTR [rdi+0x65]
   14000bc0c:	je     0x14000bc5e
   14000bc0e:	jb     0x14000bc79
   14000bc10:	jbe    0x14000bc73
   14000bc12:	je     0x14000bc79
   14000bc14:	push   rax
   14000bc15:	jb     0x14000bc86
   14000bc17:	imul   bp,WORD PTR [rbp+riz*2+0x53],0x6365
   14000bc1e:	je     0x14000bc89
   14000bc20:	outs   dx,DWORD PTR ds:[rsi]
   14000bc21:	outs   dx,BYTE PTR ds:[rsi]
   14000bc22:	add    r12b,cl
   14000bc25:	add    BYTE PTR [rbx+0x72],al
   14000bc28:	gs (bad) 
   14000bc2a:	je     0x14000bc91
   14000bc2c:	rex.WRB jne 0x14000bca3
   14000bc2f:	gs js  0x14000bc73
   14000bc32:	add    BYTE PTR [rax],al
   14000bc34:	cdq    
   14000bc35:	add    al,0x52
   14000bc37:	gs ins BYTE PTR es:[rdi],dx
   14000bc39:	gs (bad) 
   14000bc3b:	jae    0x14000bca2
   14000bc3d:	rex.WRB jne 0x14000bcb4
   14000bc40:	gs js  0x14000bc43
   14000bc43:	add    BYTE PTR [rbx+0x2],al
   14000bc46:	rex.RXB
   14000bc47:	gs je  0x14000bc90
   14000bc4a:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   14000bc52:	stos   DWORD PTR es:[rdi],eax
   14000bc53:	add    BYTE PTR [rbx+0x72],al
   14000bc56:	gs (bad) 
   14000bc58:	je     0x14000bcbf
   14000bc5a:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000bc62:	jns    0x14000bca5
   14000bc64:	add    BYTE PTR [rax],al
   14000bc66:	rex.WXB
   14000bc67:	rex.RB push r10
   14000bc69:	rex.WRX
   14000bc6a:	rex.RB
   14000bc6b:	xor    r14,QWORD PTR [rdx]
   14000bc6e:	cs fs ins BYTE PTR es:[rdi],dx
   14000bc71:	ins    BYTE PTR es:[rdi],dx
   14000bc72:	add    BYTE PTR [rax],al
   14000bc74:	data16 add cl,BYTE PTR [rbp+0x6f]
   14000bc78:	jbe    0x14000bcdf
   14000bc7a:	push   rdi
   14000bc7b:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000bc82:	stc    
   14000bc83:	add    dl,BYTE PTR [rbx+0x65]
   14000bc86:	je     0x14000bccc
   14000bc88:	ins    BYTE PTR es:[rdi],dx
   14000bc89:	addr32 rex.WB je 0x14000bcf2
   14000bc8d:	ins    DWORD PTR es:[rdi],dx
   14000bc8e:	push   rsp
   14000bc8f:	gs js  0x14000bd06
   14000bc92:	add    BYTE PTR [r10+0x61694400],sil
   14000bc99:	ins    BYTE PTR es:[rdi],dx
   14000bc9a:	outs   dx,DWORD PTR ds:[rsi]
   14000bc9b:	rex.X outs dx,DWORD PTR ds:[esi]
   14000bc9e:	js     0x14000bcf0
   14000bca0:	(bad)  
   14000bca1:	jb     0x14000bd04
   14000bca3:	ins    DWORD PTR es:[rdi],dx
   14000bca4:	add    BYTE PTR [r10+0x1],al
   14000bca8:	rex.RXB
   14000bca9:	gs je  0x14000bcf0
   14000bcac:	ins    BYTE PTR es:[rdi],dx
   14000bcad:	addr32 rex.WB je 0x14000bd16
   14000bcb1:	ins    DWORD PTR es:[rdi],dx
   14000bcb2:	push   rsp
   14000bcb3:	gs js  0x14000bd2a
   14000bcb6:	add    BYTE PTR [r15],dil
   14000bcb9:	add    edx,DWORD PTR [rbx+0x65]
   14000bcbc:	je     0x14000bd15
   14000bcbe:	imul   ebp,DWORD PTR [rsi+0x64],0x6554776f
   14000bcc5:	js     0x14000bd3b
   14000bcc7:	add    BYTE PTR [r8],al
   14000bcca:	mov    al,0x1
   14000bccc:	rex.RXB
   14000bccd:	gs je  0x14000bd23
   14000bcd0:	jns    0x14000bd45
   14000bcd2:	je     0x14000bd39
   14000bcd4:	ins    DWORD PTR es:[rdi],dx
   14000bcd5:	rex.WRB
   14000bcd6:	gs je  0x14000bd4b
   14000bcd9:	imul   esp,DWORD PTR [rbx+0x73],0x35a0000
   14000bce0:	push   rbx
   14000bce1:	jns    0x14000bd56
   14000bce3:	je     0x14000bd4a
   14000bce5:	ins    DWORD PTR es:[rdi],dx
   14000bce6:	push   rax
   14000bce7:	(bad)  
   14000bce8:	jb     0x14000bd4b
   14000bcea:	ins    DWORD PTR es:[rdi],dx
   14000bceb:	gs je  0x14000bd53
   14000bcee:	jb     0x14000bd63
   14000bcf0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bcf2:	outs   dx,WORD PTR ds:[rsi]
   14000bcf4:	add    BYTE PTR [r10+0x736f5002],al
   14000bcfb:	je     0x14000bd4a
   14000bcfd:	gs jae 0x14000bd73
   14000bd00:	(bad)  
   14000bd01:	add    BYTE PTR gs:[r8d],al
   14000bd06:	(bad)  
   14000bd07:	add    edx,DWORD PTR [rbx+0x65]
   14000bd0a:	je     0x14000bd63
   14000bd0c:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14000bd13:	outs   dx,BYTE PTR ds:[rsi]
   14000bd14:	addr32 push rax
   14000bd16:	je     0x14000bd8a
   14000bd18:	add    BYTE PTR [r11+rax*1+0x53],cl
   14000bd1d:	push   0x6957776f
   14000bd22:	outs   dx,BYTE PTR ds:[rsi]
   14000bd23:	outs   dx,DWORD PTR fs:[rsi]
   14000bd25:	ja     0x14000bd27
   14000bd27:	add    cl,ch
   14000bd29:	add    BYTE PTR [rbp+0x6e],al
   14000bd2c:	imul   r12d,DWORD PTR fs:[rcx+0x6c],0xe200676f
   14000bd35:	add    BYTE PTR [rbp+0x6e],al
   14000bd38:	(bad)  
   14000bd39:	(bad)  
   14000bd3a:	ins    BYTE PTR es:[rdi],dx
   14000bd3b:	gs rex.WRB
   14000bd3d:	outs   dx,BYTE PTR gs:[rsi]
   14000bd3f:	jne    0x14000bd8a
   14000bd41:	je     0x14000bda8
   14000bd43:	ins    DWORD PTR es:[rdi],dx
   14000bd44:	add    BYTE PTR [rax],al
   14000bd46:	mov    DWORD PTR [rdx],0x69676552
   14000bd4c:	jae    0x14000bdc2
   14000bd4e:	gs jb  0x14000bda8
   14000bd51:	imul   ebp,DWORD PTR [rsi+0x64],0x654d776f
   14000bd58:	jae    0x14000bdcd
   14000bd5a:	(bad)  
   14000bd5b:	add    BYTE PTR gs:[r8d],al
   14000bd60:	std    
   14000bd61:	add    dl,BYTE PTR [rbx+0x65]
   14000bd64:	je     0x14000bdac
   14000bd66:	outs   dx,DWORD PTR ds:[rsi]
   14000bd67:	movsxd esi,DWORD PTR [rbp+0x73]
   14000bd6a:	add    BYTE PTR [rax],al
   14000bd6c:	sub    al,0x2
   14000bd6e:	imul   rbp,QWORD PTR [r12+r13*2+0x54],0x72656d69
   14000bd77:	add    BYTE PTR [rdi],bl
   14000bd79:	add    DWORD PTR [rdi+0x65],eax
   14000bd7c:	je     0x14000bdc1
   14000bd7e:	ins    BYTE PTR es:[rdi],dx
   14000bd7f:	(bad)  
   14000bd80:	jae    0x14000bdf5
   14000bd82:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bd84:	outs   dx,WORD PTR ds:[rsi]
   14000bd86:	rex.RB js 0x14000bdca
   14000bd89:	add    al,bl
   14000bd8b:	add    dl,BYTE PTR [rbx+0x65]
   14000bd8e:	outs   dx,BYTE PTR ds:[rsi]
   14000bd8f:	fs rex.R ins BYTE PTR es:[rdi],dx
   14000bd92:	addr32 rex.WB je 0x14000bdfb
   14000bd96:	ins    DWORD PTR es:[rdi],dx
   14000bd97:	rex.WRB
   14000bd98:	gs jae 0x14000be0e
   14000bd9b:	(bad)  
   14000bd9c:	add    BYTE PTR gs:[r11d+0x67655202],bpl
   14000bda5:	imul   esi,DWORD PTR [rbx+0x74],0x6c437265
   14000bdac:	(bad)  
   14000bdad:	jae    0x14000be22
   14000bdaf:	rex.RB js 0x14000bdf3
   14000bdb2:	add    BYTE PTR [rax],al
   14000bdb4:	int3   
   14000bdb5:	add    DWORD PTR [rdi+0x65],eax
   14000bdb8:	je     0x14000be11
   14000bdba:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14000bdc1:	outs   dx,BYTE PTR ds:[rsi]
   14000bdc2:	addr32 push rax
   14000bdc4:	je     0x14000be38
   14000bdc6:	add    r12b,dl
   14000bdc9:	add    DWORD PTR [rdi+0x65],eax
   14000bdcc:	je     0x14000be25
   14000bdce:	imul   ebp,DWORD PTR [rsi+0x64],0x6552776f
   14000bdd5:	movsxd esi,DWORD PTR [rax+rax*1+0x2f]
   14000bdd9:	add    BYTE PTR [rbx+0x68],al
   14000bddc:	(bad)  
   14000bddd:	jb     0x14000be2d
   14000bddf:	gs js  0x14000be56
   14000bde2:	add    BYTE PTR [r13+0x53],dl
   14000bde6:	rex.RB push r10
   14000bde8:	xor    esi,DWORD PTR [rdx]
   14000bdea:	cs fs ins BYTE PTR es:[rdi],dx
   14000bded:	ins    BYTE PTR es:[rdi],dx
   14000bdee:	add    BYTE PTR [rax],al
   14000bdf0:	movsxd eax,DWORD PTR [rbx]
   14000bdf2:	pop    rdi
   14000bdf3:	jbe    0x14000be68
   14000bdf5:	outs   dx,BYTE PTR ds:[rsi]
   14000bdf6:	jo     0x14000be6a
   14000bdf8:	imul   ebp,DWORD PTR [rsi+0x74],0x55000066
   14000bdff:	add    BYTE PTR [rdi+0x58],bl
   14000be02:	movsxd esi,DWORD PTR [rax+0x74]
   14000be05:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000be0e:	pop    rdi
   14000be0f:	(bad)  
   14000be10:	ins    DWORD PTR es:[rdi],dx
   14000be11:	jae    0x14000be7a
   14000be13:	pop    rdi
   14000be14:	gs js  0x14000be80
   14000be17:	je     0x14000be19
   14000be19:	add    BYTE PTR [rdi+0x0],bh
   14000be1c:	pop    rdi
   14000be1d:	pop    rdi
   14000be1e:	addr32 gs je 0x14000be8f
   14000be22:	(bad)  
   14000be23:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000be2a:	mov    es,WORD PTR [rax]
   14000be2c:	pop    rdi
   14000be2d:	pop    rdi
   14000be2e:	jae    0x14000be95
   14000be30:	je     0x14000be91
   14000be32:	(bad)  
   14000be33:	jo     0x14000bea5
   14000be35:	pop    rdi
   14000be36:	je     0x14000beb1
   14000be38:	jo     0x14000be9f
   14000be3a:	add    BYTE PTR [rax],al
   14000be3c:	xor    al,BYTE PTR [riz*2+0x746978]
   14000be43:	add    BYTE PTR [rsi],cl
   14000be45:	add    DWORD PTR [rdi+0x65],ebx
   14000be48:	js     0x14000beb3
   14000be4a:	je     0x14000be4c
   14000be4c:	rol    DWORD PTR [rax],0x5f
   14000be4f:	movsxd esp,DWORD PTR [rbp+0x78]
   14000be52:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   14000be5a:	jae    0x14000bec9
   14000be5c:	(bad)
   14000be61:	add    BYTE PTR fs:[rax],al
   14000be64:	nop
   14000be65:	add    BYTE PTR [rdi+0x5f],bl
   14000be68:	jae    0x14000becf
   14000be6a:	je     0x14000bee1
   14000be6c:	jae    0x14000bed3
   14000be6e:	jb     0x14000bedd
   14000be70:	(bad)  
   14000be71:	je     0x14000bedb
   14000be73:	gs jb  0x14000bee8
   14000be76:	add    BYTE PTR [rax],al
   14000be78:	jge    0x14000be7b
   14000be7a:	pop    rdi
   14000be7b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000be82:	ins    DWORD PTR es:[rdi],dx
   14000be83:	add    BYTE PTR [rdi+0x0],dl
   14000be86:	pop    rdi
   14000be87:	pop    rdi
   14000be88:	rex.XB pop r15
   14000be8a:	jae    0x14000befc
   14000be8c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000be90:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000be97:	ins    BYTE PTR es:[rdi],dx
   14000be98:	gs jb  0x14000be9b
   14000be9b:	add    BYTE PTR [rdx+0x63615f00],ah
   14000bea1:	ins    DWORD PTR es:[rdi],dx
   14000bea2:	fs ins BYTE PTR es:[rdi],dx
   14000bea4:	outs   dx,BYTE PTR ds:[rsi]
   14000bea5:	add    BYTE PTR [rdi],ah
   14000bea7:	add    DWORD PTR [rdi+0x66],ebx
   14000beaa:	ins    DWORD PTR es:[rdi],dx
   14000beab:	outs   dx,DWORD PTR ds:[rsi]
   14000beac:	fs add BYTE PTR gs:[rax],al
   14000beb0:	rol    BYTE PTR [rax],cl
   14000beb2:	pop    rdi
   14000beb3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000beb6:	ins    DWORD PTR es:[rdi],dx
   14000beb7:	outs   dx,DWORD PTR ds:[rsi]
   14000beb8:	fs add BYTE PTR gs:[rax],al
   14000bebc:	ins    DWORD PTR es:[rdi],dx
   14000bebd:	jae    0x14000bf35
   14000bebf:	movsxd esi,DWORD PTR [rdx+0x74]
   14000bec2:	cs fs ins BYTE PTR es:[rdi],dx
   14000bec5:	ins    BYTE PTR es:[rdi],dx
   14000bec6:	add    BYTE PTR [rax],al
   14000bec8:	(bad)  
   14000bec9:	add    BYTE PTR [rdi],bh
   14000becb:	je     0x14000bf32
   14000becd:	jb     0x14000bf3c
   14000becf:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000bed6:	pop    rcx
   14000bed7:	pop    r8
   14000bed9:	pop    rax
   14000beda:	pop    rdx
   14000bedb:	add    BYTE PTR [rip+0x6f685000],al        # 0x1af690ee1
   14000bee1:	outs   dx,BYTE PTR ds:[rsi]
   14000bee2:	rex.X outs dx,DWORD PTR gs:[rsi]
   14000bee5:	outs   dx,DWORD PTR ds:[rsi]
   14000bee6:	imul   eax,DWORD PTR [rsi+0x72],0x65
   14000beea:	imul   r13d,DWORD PTR gs:[rsp+r14*2+0x65],0x150072
   14000bef4:	push   rax
   14000bef5:	push   0x42656e6f
   14000befa:	outs   dx,DWORD PTR ds:[rsi]
   14000befb:	outs   dx,DWORD PTR ds:[rsi]
   14000befc:	imul   edx,DWORD PTR [rax+0x61],0x72
   14000bf00:	jae    0x14000bf67
   14000bf02:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bf04:	outs   dx,WORD PTR ds:[rsi]
   14000bf06:	add    BYTE PTR [r14],dl
   14000bf09:	add    BYTE PTR [rax+0x68],dl
   14000bf0c:	outs   dx,DWORD PTR ds:[rsi]
   14000bf0d:	outs   dx,BYTE PTR ds:[rsi]
   14000bf0e:	rex.X outs dx,DWORD PTR gs:[rsi]
   14000bf11:	outs   dx,DWORD PTR ds:[rsi]
   14000bf12:	imul   edx,DWORD PTR [rbp+0x6e],0x6c
   14000bf16:	outs   dx,DWORD PTR ds:[rsi]
   14000bf17:	(bad)  
   14000bf18:	add    BYTE PTR fs:[rax+rax*1],dl
   14000bf1c:	push   rax
   14000bf1d:	push   0x42656e6f
   14000bf22:	outs   dx,DWORD PTR ds:[rsi]
   14000bf23:	outs   dx,DWORD PTR ds:[rsi]
   14000bf24:	imul   ecx,DWORD PTR [rbp+0x65],0x72
   14000bf28:	addr32 gs rex.XB push 0x65676e61
   14000bf30:	jae    0x14000bf32
   14000bf32:	adc    al,BYTE PTR [rax]
   14000bf34:	push   rax
   14000bf35:	push   0x42656e6f
   14000bf3a:	outs   dx,DWORD PTR ds:[rsi]
   14000bf3b:	outs   dx,DWORD PTR ds:[rsi]
   14000bf3c:	imul   ecx,DWORD PTR [rdi+rbp*2+0x61],0x64
   14000bf41:	add    BYTE PTR [rbx+0x6d],ah
   14000bf44:	jo     0x14000bfa8
   14000bf46:	imul   esi,DWORD PTR [rbx],0x32
   14000bf49:	cs fs ins BYTE PTR es:[rdi],dx
   14000bf4c:	ins    BYTE PTR es:[rdi],dx
   14000bf4d:	add    BYTE PTR [rax+rax*1+0x43],dh
   14000bf51:	ins    DWORD PTR es:[rdi],dx
   14000bf52:	rex.WRB (bad) 
   14000bf54:	ins    BYTE PTR es:[rdi],dx
   14000bf55:	ins    BYTE PTR es:[rdi],dx
   14000bf56:	outs   dx,DWORD PTR ds:[rsi]
   14000bf57:	movsxd eax,DWORD PTR [rax]
   14000bf59:	add    BYTE PTR [rdx+0x536d4300],al
   14000bf5f:	je     0x14000bfd3
   14000bf61:	movsxd ebp,DWORD PTR [rax+0x72]
   14000bf64:	add    BYTE PTR [r14+0x0],sil
   14000bf68:	rex.XB ins DWORD PTR es:[rdi],dx
   14000bf6a:	push   rdx
   14000bf6b:	gs (bad) 
   14000bf6d:	ins    BYTE PTR es:[rdi],dx
   14000bf6e:	ins    BYTE PTR es:[rdi],dx
   14000bf6f:	outs   dx,DWORD PTR ds:[rsi]
   14000bf70:	movsxd eax,DWORD PTR [rax]
   14000bf72:	imul   eax,DWORD PTR [rax],0x72466d43
   14000bf78:	gs add BYTE PTR gs:[rax],al
   14000bf7c:	jge    0x14000bf7e
   14000bf7e:	rex.XB ins DWORD PTR es:[rdi],dx
   14000bf80:	push   rbx
   14000bf81:	je     0x14000bff5
   14000bf83:	rex.XB jo 0x14000bfff
   14000bf86:	rex.B ins BYTE PTR es:[rdi],dx
   14000bf88:	ins    BYTE PTR es:[rdi],dx
   14000bf89:	outs   dx,DWORD PTR ds:[rsi]
   14000bf8a:	movsxd eax,DWORD PTR [rcx+0x0]
   14000bf8d:	add    BYTE PTR [rcx+0x0],dh
   14000bf90:	rex.XB ins DWORD PTR es:[rdi],dx
   14000bf92:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000bf94:	(bad)  
   14000bf95:	fs push rbx
   14000bf97:	ins    DWORD PTR es:[rdi],dx
   14000bf98:	(bad)  
   14000bf99:	ins    BYTE PTR es:[rdi],dx
   14000bf9a:	ins    BYTE PTR es:[rdi],dx
   14000bf9b:	movsxd rbp,DWORD PTR [r15+0x6e]
   14000bf9f:	add    BYTE PTR [r8],al
   14000bfa2:	xchg   ebp,eax
   14000bfa3:	add    BYTE PTR [rdi+0x7a],dl
   14000bfa6:	push   rsp
   14000bfa7:	outs   dx,DWORD PTR ds:[rsi]
   14000bfa8:	push   rbx
   14000bfa9:	jp     0x14000c002
   14000bfab:	imul   esi,DWORD PTR [rax+rbp*2+0x41],0x636f6c6c
   14000bfb3:	add    BYTE PTR [rdi+0x0],ah
   14000bfb6:	rex.XB ins DWORD PTR es:[rdi],dx
   14000bfb8:	rex.RX ins DWORD PTR es:[rdi],dx
   14000bfba:	je     0x14000c009
   14000bfbc:	jae    0x14000c025
   14000bfbe:	add    BYTE PTR [r14+0x536d4300],al
   14000bfc5:	je     0x14000c039
   14000bfc7:	jb     0x14000c02c
   14000bfc9:	push   0x4172
   14000bfce:	(bad)  
   14000bfcf:	add    BYTE PTR [rbx+0x6d],al
   14000bfd2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bfd4:	ins    DWORD PTR es:[rdi],dx
   14000bfd5:	jo     0x14000c038
   14000bfd7:	jb     0x14000c03e
   14000bfd9:	push   rbx
   14000bfda:	je     0x14000c04e
   14000bfdc:	imul   ebp,DWORD PTR [rsi+0x67],0x39000041
   14000bfe3:	add    BYTE PTR [rdi],bh
   14000bfe5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000bfe7:	addr32 rex
   14000bfe9:	rex.XB ins DWORD PTR es:[rdi],dx
   14000bfeb:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000bfed:	imul   r13d,DWORD PTR [ebp+r12d*2+0x40],0x41455140
   14000bff7:	pop    r8
   14000bff9:	push   rdi
   14000bffa:	xor    al,0x5f
   14000bffc:	rex.XB
   14000bffd:	rex.WRB
   14000bffe:	rex.WR
   14000bfff:	rex.WRXB
   14000c000:	rex.RXB pop r15
   14000c002:	rex.WB push r12
   14000c004:	rex.RB
   14000c005:	rex.WRB
   14000c006:	rex
   14000c007:	rex pop rdx
   14000c009:	pop    rdx
   14000c00a:	add    BYTE PTR [rax],al
   14000c00c:	sbb    eax,DWORD PTR [rax]
   14000c00e:	(bad)  
   14000c00f:	rex.R
   14000c010:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14000c013:	imul   esi,DWORD PTR [rax+rax*2+0x43],0x676f4c6d
   14000c01b:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   14000c024:	rex.B
   14000c025:	rex.WX pop rax
   14000c027:	pop    rdx
   14000c028:	add    BYTE PTR [rax],al
   14000c02a:	push   rsp
   14000c02b:	add    BYTE PTR [rdi],bh
   14000c02d:	push   rbx
   14000c02e:	je     0x14000c09f
   14000c030:	jo     0x14000c072
   14000c032:	rex.XB ins DWORD PTR es:[rdi],dx
   14000c034:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c036:	imul   r13d,DWORD PTR [ebp+r12d*2+0x40],0x41455140
   14000c040:	rex.B
   14000c041:	rex.WX pop rax
   14000c043:	pop    rdx
   14000c044:	add    BYTE PTR [rax],al
   14000c046:	push   rbx
   14000c047:	add    BYTE PTR [rdi],bh
   14000c049:	push   rbx
   14000c04a:	je     0x14000c0ad
   14000c04c:	jb     0x14000c0c2
   14000c04e:	rex
   14000c04f:	rex.XB ins DWORD PTR es:[rdi],dx
   14000c051:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c053:	imul   r13d,DWORD PTR [ebp+r12d*2+0x40],0x41455140
   14000c05d:	rex.B
   14000c05e:	rex.WX
   14000c05f:	rex.W
   14000c060:	rex pop rdx
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	add    BYTE PTR [r15],r15b
   14000c067:	push   rbx
   14000c068:	gs je  0x14000c0bb
   14000c06b:	(bad)  
   14000c06c:	jb     0x14000c0cf
   14000c06e:	ins    DWORD PTR es:[rdi],dx
   14000c06f:	jae    0x14000c0b1
   14000c071:	rex.XB ins DWORD PTR es:[rdi],dx
   14000c073:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c075:	imul   r13d,DWORD PTR [ebp+r12d*2+0x40],0x41455140
   14000c07f:	rex.B
   14000c080:	rex.WX
   14000c081:	rex.W
   14000c082:	rex.WXB push r8
   14000c084:	rex.RB
   14000c085:	rex.X
   14000c086:	rex.R
   14000c087:	rex pop rdx
   14000c089:	add    BYTE PTR [rdx],dh
   14000c08b:	add    BYTE PTR [rdi],bh
   14000c08d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c08f:	imul   esi,DWORD PTR [rax+rax*2+0x43],0x676f4c6d
   14000c097:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   14000c0a0:	rex.B
   14000c0a1:	rex.WX push rax
   14000c0a3:	rex.RB
   14000c0a4:	push   r13
   14000c0a6:	rex.W
   14000c0a7:	rex.WB
   14000c0a8:	rex.WRX push rbx
   14000c0aa:	push   rsp
   14000c0ab:	rex.B
   14000c0ac:	rex.WRX
   14000c0ad:	rex.XB
   14000c0ae:	rex.RB pop r15
   14000c0b0:	pop    rdi
   14000c0b1:	rex
   14000c0b2:	rex
   14000c0b3:	rex.W push rax
   14000c0b5:	rex.RB
   14000c0b6:	rex.X
   14000c0b7:	rex.R
   14000c0b8:	rex pop rdx
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	(bad)  
   14000c0bd:	add    BYTE PTR [rdi],bh
   14000c0bf:	(bad)  
   14000c0c0:	xor    DWORD PTR [rbx+0x6d],eax
   14000c0c3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c0c5:	imul   r13d,DWORD PTR [ebp+r12d*2+0x40],0x41455140
   14000c0cf:	rex.B
   14000c0d0:	rex pop rax
   14000c0d2:	pop    rdx
   14000c0d3:	add    BYTE PTR [rax+rax*1],al
   14000c0d6:	(bad)  
   14000c0d7:	(bad)  
   14000c0d8:	xor    BYTE PTR [rbx+0x6d],al
   14000c0db:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c0dd:	imul   r13d,DWORD PTR [ebp+r12d*2+0x40],0x41455140
   14000c0e7:	rex.B
   14000c0e8:	rex pop rax
   14000c0ea:	pop    rdx
   14000c0eb:	add    BYTE PTR [rsi+0x0],ch
   14000c0ee:	rex.XB ins DWORD PTR es:[rdi],dx
   14000c0f0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c0f2:	(bad)  
   14000c0f3:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   14000c0f8:	add    BYTE PTR [r11+0x547a5300],dl
   14000c0ff:	outs   dx,DWORD PTR ds:[rsi]
   14000c100:	push   rdi
   14000c101:	jp     0x14000c15a
   14000c103:	imul   esi,DWORD PTR [rax+rbp*2+0x41],0x636f6c6c
   14000c10b:	add    BYTE PTR [rdi+0x0],bl
   14000c10e:	rex.XB ins DWORD PTR es:[rdi],dx
   14000c110:	rex.X jne 0x14000c17c
   14000c113:	ins    BYTE PTR es:[rdi],dx
   14000c114:	fs rex.RX jne 0x14000c184
   14000c118:	ins    BYTE PTR es:[rdi],dx
   14000c119:	push   rax
   14000c11a:	(bad)  
   14000c11b:	je     0x14000c185
   14000c11d:	rex.RX jb 0x14000c18f
   14000c120:	ins    DWORD PTR es:[rdi],dx
   14000c121:	push   rdx
   14000c122:	gs ins BYTE PTR es:[rdi],dx
   14000c124:	(bad)  
   14000c125:	je     0x14000c190
   14000c127:	jbe    0x14000c18e
   14000c129:	add    BYTE PTR [r8],al
   14000c12c:	pop    QWORD PTR [rax]
   14000c12e:	rex.WB jae 0x14000c17d
   14000c131:	outs   dx,DWORD PTR ds:[rsi]
   14000c132:	outs   dx,DWORD PTR ds:[esi]
   14000c134:	outs   dx,BYTE PTR ds:[rsi]
   14000c135:	rex.B jae 0x14000c18b
   14000c138:	jns    0x14000c1ad
   14000c13a:	je     0x14000c1a1
   14000c13c:	ins    DWORD PTR es:[rdi],dx
   14000c13d:	add    BYTE PTR [rsi+0x0],bh
   14000c140:	rex.XB ins DWORD PTR es:[rdi],dx
   14000c142:	push   rbx
   14000c143:	je     0x14000c1b7
   14000c145:	rex.XB jo 0x14000c1c1
   14000c148:	rex.B ins BYTE PTR es:[rdi],dx
   14000c14a:	ins    BYTE PTR es:[rdi],dx
   14000c14b:	outs   dx,DWORD PTR ds:[rsi]
   14000c14c:	movsxd edx,DWORD PTR [rdi+0x0]
   14000c14f:	add    BYTE PTR [rbx+0x6d],ah
   14000c152:	jne    0x14000c1c8
   14000c154:	imul   ebp,DWORD PTR [rsi+rbp*1+0x64],0x6c6c
   14000c15c:	rex.XB
   14000c15d:	rex.WRXB
   14000c15e:	rex.WRB
   14000c15f:	rex.XB push r12
   14000c161:	xor    r14,QWORD PTR [rdx]
   14000c164:	cs fs ins BYTE PTR es:[rdi],dx
   14000c167:	ins    BYTE PTR es:[rdi],dx
   14000c168:	add    BYTE PTR [rax],al
   14000c16a:	rex.XB (bad) 
   14000c16c:	(bad)  
   14000c16d:	imul   ebp,DWORD PTR [rsi+0x65],0x6c642e74
   14000c174:	ins    BYTE PTR es:[rdi],dx
   14000c175:	add    BYTE PTR [rcx],ch
   14000c177:	add    BYTE PTR [rdx+0x61],dl
   14000c17a:	jae    0x14000c1c1
   14000c17c:	outs   dx,BYTE PTR ds:[rsi]
   14000c17d:	jne    0x14000c1ec
   14000c17f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c181:	outs   dx,BYTE PTR ds:[rsi]
   14000c182:	outs   dx,BYTE PTR ds:[rsi]
   14000c183:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000c188:	outs   dx,BYTE PTR ds:[rsi]
   14000c189:	jae    0x14000c1cc
   14000c18b:	add    BYTE PTR [rdx+0x41],dl
   14000c18e:	push   rbx
   14000c18f:	push   r8
   14000c191:	xor    rsi,QWORD PTR [r10]
   14000c194:	cs fs ins BYTE PTR es:[rdi],dx
   14000c197:	ins    BYTE PTR es:[rdi],dx
   14000c198:	add    BYTE PTR [rax],al
   14000c19a:	and    al,0x0
   14000c19c:	push   rdi
   14000c19d:	imul   ebp,DWORD PTR [rsi+0x48],0x52707474
   14000c1a4:	movsxd esp,DWORD PTR gs:[rbp+0x69]
   14000c1a8:	jbe    0x14000c20f
   14000c1aa:	push   rdx
   14000c1ab:	gs jae 0x14000c21e
   14000c1ae:	outs   dx,DWORD PTR ds:[rsi]
   14000c1af:	outs   dx,BYTE PTR ds:[rsi]
   14000c1b0:	jae    0x14000c217
   14000c1b2:	add    BYTE PTR [rax],al
   14000c1b4:	(bad)  
   14000c1b5:	add    BYTE PTR [rdi+0x69],dl
   14000c1b8:	outs   dx,BYTE PTR ds:[rsi]
   14000c1b9:	rex.W je 0x14000c230
   14000c1bc:	jo     0x14000c211
   14000c1be:	outs   dx,BYTE PTR gs:[rsi]
   14000c1c0:	fs push rdx
   14000c1c2:	gs jno 0x14000c23a
   14000c1c5:	gs jae 0x14000c23c
   14000c1c8:	add    BYTE PTR [rax],al
   14000c1ca:	or     BYTE PTR [rax],al
   14000c1cc:	push   rdi
   14000c1cd:	imul   ebp,DWORD PTR [rsi+0x48],0x43707474
   14000c1d4:	outs   dx,DWORD PTR ds:[rsi]
   14000c1d5:	outs   dx,BYTE PTR ds:[rsi]
   14000c1d6:	outs   dx,BYTE PTR ds:[rsi]
   14000c1d7:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
   14000c1dc:	(bad)  
   14000c1dd:	add    BYTE PTR [rdi+0x69],dl
   14000c1e0:	outs   dx,BYTE PTR ds:[rsi]
   14000c1e1:	rex.W je 0x14000c258
   14000c1e4:	jo     0x14000c229
   14000c1e6:	ins    BYTE PTR es:[rdi],dx
   14000c1e7:	outs   dx,DWORD PTR ds:[rsi]
   14000c1e8:	jae    0x14000c24f
   14000c1ea:	rex.W (bad) 
   14000c1ec:	outs   dx,BYTE PTR ds:[rsi]
   14000c1ed:	fs ins BYTE PTR es:[rdi],dx
   14000c1ef:	add    BYTE PTR gs:[rax],al
   14000c1f2:	and    DWORD PTR [rax],eax
   14000c1f4:	push   rdi
   14000c1f5:	imul   ebp,DWORD PTR [rsi+0x48],0x51707474
   14000c1fc:	jne    0x14000c263
   14000c1fe:	jb     0x14000c279
   14000c200:	rex.W
   14000c201:	gs (bad) 
   14000c203:	fs gs jb 0x14000c27a
   14000c207:	add    BYTE PTR [rax],ah
   14000c209:	add    BYTE PTR [rdi+0x69],dl
   14000c20c:	outs   dx,BYTE PTR ds:[rsi]
   14000c20d:	rex.W je 0x14000c284
   14000c210:	jo     0x14000c263
   14000c212:	jne    0x14000c279
   14000c214:	jb     0x14000c28f
   14000c216:	rex.R (bad) 
   14000c218:	je     0x14000c27b
   14000c21a:	rex.B jbe 0x14000c27e
   14000c21d:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x1c00656c
   14000c225:	add    BYTE PTR [rdi+0x69],dl
   14000c228:	outs   dx,BYTE PTR ds:[rsi]
   14000c229:	rex.W je 0x14000c2a0
   14000c22c:	jo     0x14000c27d
   14000c22e:	jo     0x14000c295
   14000c230:	outs   dx,BYTE PTR ds:[rsi]
   14000c231:	add    BYTE PTR [rip+0x6e695700],bl        # 0x1ae6a1937
   14000c237:	rex.W je 0x14000c2ae
   14000c23a:	jo     0x14000c28b
   14000c23c:	jo     0x14000c2a3
   14000c23e:	outs   dx,BYTE PTR ds:[rsi]
   14000c23f:	push   rdx
   14000c240:	gs jno 0x14000c2b8
   14000c243:	gs jae 0x14000c2ba
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	adc    DWORD PTR [rax],eax
   14000c24a:	push   rdi
   14000c24b:	imul   ebp,DWORD PTR [rsi+0x48],0x43707474
   14000c252:	jb     0x14000c2b5
   14000c254:	movsxd ebp,DWORD PTR [rbx+0x55]
   14000c257:	jb     0x14000c2c5
   14000c259:	add    BYTE PTR [rbx],ah
   14000c25b:	add    BYTE PTR [rdi+0x69],dl
   14000c25e:	outs   dx,BYTE PTR ds:[rsi]
   14000c25f:	rex.W je 0x14000c2d6
   14000c262:	jo     0x14000c2b6
   14000c264:	gs (bad) 
   14000c266:	fs rex.R (bad) 
   14000c269:	je     0x14000c2cc
   14000c26b:	add    BYTE PTR [rdi],dl
   14000c26d:	add    BYTE PTR [rdi+0x69],dl
   14000c270:	outs   dx,BYTE PTR ds:[rsi]
   14000c271:	rex.W je 0x14000c2e8
   14000c274:	jo     0x14000c2bd
   14000c276:	gs je  0x14000c2c2
   14000c279:	rex.RB push r8
   14000c27b:	jb     0x14000c2ec
   14000c27d:	js     0x14000c2f8
   14000c27f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c281:	outs   dx,BYTE PTR ds:[rsi]
   14000c282:	imul   sp,WORD PTR [rdi+0x46],0x726f
   14000c288:	rex.XB jne 0x14000c2fd
   14000c28b:	jb     0x14000c2f2
   14000c28d:	outs   dx,BYTE PTR ds:[rsi]
   14000c28e:	je     0x14000c2e5
   14000c290:	jae    0x14000c2f7
   14000c292:	jb     0x14000c294
   14000c294:	(bad)  
   14000c295:	add    BYTE PTR [rdi+0x69],dl
   14000c298:	outs   dx,BYTE PTR ds:[rsi]
   14000c299:	rex.W je 0x14000c310
   14000c29c:	jo     0x14000c2e5
   14000c29e:	gs je  0x14000c2e5
   14000c2a1:	gs data16 (bad) 
   14000c2a4:	jne    0x14000c312
   14000c2a6:	je     0x14000c2f8
   14000c2a8:	jb     0x14000c319
   14000c2aa:	js     0x14000c325
   14000c2ac:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c2ae:	outs   dx,BYTE PTR ds:[rsi]
   14000c2af:	imul   sp,WORD PTR [rdi+0x75],0x6172
   14000c2b5:	je     0x14000c320
   14000c2b7:	outs   dx,DWORD PTR ds:[rsi]
   14000c2b8:	outs   dx,BYTE PTR ds:[rsi]
   14000c2b9:	add    BYTE PTR [rax],bl
   14000c2bb:	add    BYTE PTR [rdi+0x69],dl
   14000c2be:	outs   dx,BYTE PTR ds:[rsi]
   14000c2bf:	rex.W je 0x14000c336
   14000c2c2:	jo     0x14000c30b
   14000c2c4:	gs je  0x14000c317
   14000c2c7:	jb     0x14000c338
   14000c2c9:	js     0x14000c344
   14000c2cb:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000c2cd:	jb     0x14000c324
   14000c2cf:	jb     0x14000c33d
   14000c2d1:	add    BYTE PTR [rdi+0x49],dl
   14000c2d4:	rex.WRX
   14000c2d5:	rex.W push rsp
   14000c2d7:	push   rsp
   14000c2d8:	push   rax
   14000c2d9:	cs fs ins BYTE PTR es:[rdi],dx
   14000c2dc:	ins    BYTE PTR es:[rdi],dx
   14000c2dd:	add    bh,al
   14000c2df:	add    al,BYTE PTR [rdi+0x65]
   14000c2e2:	je     0x14000c337
   14000c2e4:	je     0x14000c347
   14000c2e6:	jb     0x14000c35c
   14000c2e8:	jne    0x14000c35a
   14000c2ea:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c2ec:	outs   dx,WORD PTR ds:[rsi]
   14000c2ee:	push   rdi
   14000c2ef:	add    BYTE PTR [rdi+0x6c745204],dh
   14000c2f5:	rex.XB (bad) 
   14000c2f7:	jo     0x14000c36d
   14000c2f9:	jne    0x14000c36d
   14000c2fb:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000c2fe:	outs   dx,BYTE PTR ds:[rsi]
   14000c2ff:	je     0x14000c366
   14000c301:	js     0x14000c377
   14000c303:	add    BYTE PTR [rsi+0x6c745204],bh
   14000c309:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c30b:	outs   dx,DWORD PTR ds:[rsi]
   14000c30c:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000c310:	jne    0x14000c380
   14000c312:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000c316:	outs   dx,BYTE PTR ds:[rsi]
   14000c317:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c319:	je     0x14000c38d
   14000c31b:	jns    0x14000c31d
   14000c31d:	add    ch,al
   14000c31f:	add    al,0x52
   14000c321:	je     0x14000c38f
   14000c323:	push   rsi
   14000c324:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000c32b:	outs   dx,BYTE PTR ds:[rsi]
   14000c32c:	ja     0x14000c397
   14000c32e:	outs   dx,BYTE PTR ds:[rsi]
   14000c32f:	add    BYTE PTR fs:[rax],al
   14000c332:	sahf   
   14000c333:	add    eax,0x61686e55
   14000c338:	outs   dx,BYTE PTR ds:[rsi]
   14000c339:	fs ins BYTE PTR es:[rdi],dx
   14000c33b:	gs fs rex.RB js 0x14000c3a3
   14000c340:	gs jo  0x14000c3b7
   14000c343:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000c34a:	gs jb  0x14000c34d
   14000c34d:	add    BYTE PTR [rsi+0x5],bl
   14000c350:	push   rbx
   14000c351:	gs je  0x14000c3a9
   14000c354:	outs   dx,BYTE PTR ds:[rsi]
   14000c355:	push   0x6c646e61
   14000c35a:	gs fs rex.RB js 0x14000c3c2
   14000c35f:	gs jo  0x14000c3d6
   14000c362:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000c369:	gs jb  0x14000c36c
   14000c36c:	adc    BYTE PTR [rdx],al
   14000c36e:	rex.RXB
   14000c36f:	gs je  0x14000c3b5
   14000c372:	jne    0x14000c3e6
   14000c374:	jb     0x14000c3db
   14000c376:	outs   dx,BYTE PTR ds:[rsi]
   14000c377:	je     0x14000c3c9
   14000c379:	jb     0x14000c3ea
   14000c37b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c37e:	jae    0x14000c380
   14000c380:	jl     0x14000c387
   14000c382:	push   rsp
   14000c383:	gs jb  0x14000c3f3
   14000c386:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000c38d:	outs   dx,DWORD PTR ds:[rsi]
   14000c38e:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c391:	jae    0x14000c393
   14000c393:	add    BYTE PTR [rsi+0x2],ch
   14000c396:	rex.RXB
   14000c397:	gs je  0x14000c3e7
   14000c39a:	outs   dx,DWORD PTR ds:[rsi]
   14000c39b:	fs jne 0x14000c40a
   14000c39e:	gs rex.W (bad) 
   14000c3a1:	outs   dx,BYTE PTR ds:[rsi]
   14000c3a2:	fs ins BYTE PTR es:[rdi],dx
   14000c3a4:	gs push rdi
   14000c3a6:	add    BYTE PTR [rax],al
   14000c3a8:	ss add al,0x51
   14000c3ab:	jne    0x14000c412
   14000c3ad:	jb     0x14000c428
   14000c3af:	push   rax
   14000c3b0:	gs jb  0x14000c419
   14000c3b3:	outs   dx,DWORD PTR ds:[rsi]
   14000c3b4:	jb     0x14000c423
   14000c3b6:	(bad)  
   14000c3b7:	outs   dx,BYTE PTR ds:[rsi]
   14000c3b8:	movsxd esp,DWORD PTR [rbp+0x43]
   14000c3bb:	outs   dx,DWORD PTR ds:[rsi]
   14000c3bc:	jne    0x14000c42c
   14000c3be:	je     0x14000c425
   14000c3c0:	jb     0x14000c3c2
   14000c3c2:	adc    eax,0x74654702
   14000c3c7:	rex.XB jne 0x14000c43c
   14000c3ca:	jb     0x14000c431
   14000c3cc:	outs   dx,BYTE PTR ds:[rsi]
   14000c3cd:	je     0x14000c423
   14000c3cf:	push   0x64616572
   14000c3d4:	rex.WB
   14000c3d5:	add    BYTE PTR fs:[rax],al
   14000c3d8:	loopne 0x14000c3dc
   14000c3da:	rex.RXB
   14000c3db:	gs je  0x14000c431
   14000c3de:	jns    0x14000c453
   14000c3e0:	je     0x14000c447
   14000c3e2:	ins    DWORD PTR es:[rdi],dx
   14000c3e3:	push   rsp
   14000c3e4:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000c3eb:	ins    BYTE PTR es:[rdi],dx
   14000c3ec:	gs push rsp
   14000c3ee:	imul   ebp,DWORD PTR [rbp+0x65],0x4c03ac00
   14000c3f5:	outs   dx,DWORD PTR ds:[rsi]
   14000c3f6:	(bad)  
   14000c3f7:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   14000c400:	add    BYTE PTR [rax],al
   14000c402:	stos   DWORD PTR es:[rdi],eax
   14000c403:	add    al,BYTE PTR [rdi+0x65]
   14000c406:	je     0x14000c458
   14000c408:	jb     0x14000c479
   14000c40a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c40d:	jae    0x14000c457
   14000c40f:	gs (bad) 
   14000c411:	jo     0x14000c413
   14000c413:	add    BYTE PTR [rsi+0x6d656d04],dl
   14000c419:	jae    0x14000c480
   14000c41b:	je     0x14000c41d
	...

Disassembly of section .data:

000000014000d000 <.data>:
   14000d000:	add    DWORD PTR [rax],eax
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	add    BYTE PTR [rax],al
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000d00e:	add    BYTE PTR [rax],al
   14000d010:	int    0x5d
   14000d012:	and    dl,dl
   14000d014:	data16 (bad) 
   14000d016:	(bad)  
   14000d017:	inc    DWORD PTR [rax]
   14000d019:	add    BYTE PTR [rax],al
   14000d01b:	add    BYTE PTR [rax],al
   14000d01d:	add    BYTE PTR [rax],al
   14000d01f:	add    BYTE PTR [rax],ah
   14000d021:	(bad)  
   14000d022:	add    BYTE PTR [rax+0x1],al
   14000d025:	add    BYTE PTR [rax],al
   14000d027:	add    BYTE PTR [rcx],al
   14000d029:	add    BYTE PTR [rax],al
   14000d02b:	add    BYTE PTR [rax],al
   14000d02d:	add    BYTE PTR [rax],al
   14000d02f:	add    BYTE PTR [rax],dh
   14000d031:	(bad)  
   14000d032:	add    BYTE PTR [rax+0x1],al
   14000d035:	add    BYTE PTR [rax],al
   14000d037:	add    BYTE PTR [rdx],al
   14000d039:	add    BYTE PTR [rax],al
   14000d03b:	add    BYTE PTR [rax],al
   14000d03d:	add    BYTE PTR [rax],al
   14000d03f:	add    BYTE PTR [rdx+rbx*4],bh
   14000d042:	add    BYTE PTR [rax+0x1],al
   14000d045:	add    BYTE PTR [rax],al
   14000d047:	add    BYTE PTR [rax],cl
   14000d049:	add    BYTE PTR [rax],al
   14000d04b:	add    BYTE PTR [rax],al
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rax-0x66],cl
   14000d052:	add    BYTE PTR [rax+0x1],al
   14000d055:	add    BYTE PTR [rax],al
   14000d057:	add    BYTE PTR [rax+rax*1],al
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	add    BYTE PTR [rax],al
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	pop    rax
   14000d061:	(bad)  
   14000d062:	add    BYTE PTR [rax+0x1],al
   14000d065:	add    BYTE PTR [rax],al
   14000d067:	add    BYTE PTR [rax],dl
   14000d069:	add    BYTE PTR [rax],al
   14000d06b:	add    BYTE PTR [rax],al
   14000d06d:	add    BYTE PTR [rax],al
   14000d06f:	add    BYTE PTR [rax-0x66],ah
   14000d072:	add    BYTE PTR [rax+0x1],al
   14000d075:	add    BYTE PTR [rax],al
   14000d077:	add    BYTE PTR [rax],ah
   14000d079:	add    BYTE PTR [rax],al
   14000d07b:	add    BYTE PTR [rax],al
   14000d07d:	add    BYTE PTR [rax],al
   14000d07f:	add    BYTE PTR [rax-0x66],ch
   14000d082:	add    BYTE PTR [rax+0x1],al
   14000d085:	add    BYTE PTR [rax],al
   14000d087:	add    BYTE PTR [rax+0x0],al
	...
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	(bad)  
   14000d0a1:	(bad)  
   14000d0a2:	(bad)  
   14000d0a3:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000e000 <.pdata>:
   14000e000:	or     BYTE PTR [rax],dl
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	jnp    0x14000e016
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	mov    BYTE PTR [rsi+0x10900000],ch
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	mov    bh,0x10
   14000e012:	add    BYTE PTR [rax],al
   14000e014:	xchg   esp,eax
   14000e015:	scas   al,BYTE PTR es:[rdi]
   14000e016:	add    BYTE PTR [rax],al
   14000e018:	loopne 0x14000e02a
   14000e01a:	add    BYTE PTR [rax],al
   14000e01c:	adc    DWORD PTR [r8],eax
   14000e01f:	add    BYTE PTR [rsi+rbp*4+0x11480000],bl
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	loop   0x14000e03b
   14000e02a:	add    BYTE PTR [rax],al
   14000e02c:	test   al,0xae
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	lock adc DWORD PTR [rax],eax
   14000e033:	add    BYTE PTR [rsi],dh
   14000e035:	adc    al,BYTE PTR [rax]
   14000e037:	add    BYTE PTR [rax+0x400000ae],bh
   14000e03d:	adc    al,BYTE PTR [rax]
   14000e03f:	add    BYTE PTR [rsi-0x47ffffee],al
   14000e045:	scas   al,BYTE PTR es:[rdi]
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	nop
   14000e049:	adc    al,BYTE PTR [rax]
   14000e04b:	add    ah,cl
   14000e04d:	adc    al,BYTE PTR [rax]
   14000e04f:	add    al,al
   14000e051:	scas   al,BYTE PTR es:[rdi]
   14000e052:	add    BYTE PTR [rax],al
   14000e054:	loopne 0x14000e068
   14000e056:	add    BYTE PTR [rax],al
   14000e058:	and    al,0x13
   14000e05a:	add    BYTE PTR [rax],al
   14000e05c:	xchg   esp,eax
   14000e05d:	scas   al,BYTE PTR es:[rdi]
   14000e05e:	add    BYTE PTR [rax],al
   14000e060:	(bad)  
   14000e061:	adc    eax,DWORD PTR [rax]
   14000e063:	add    cl,bl
   14000e065:	adc    eax,0xaec80000
   14000e06a:	add    BYTE PTR [rax],al
   14000e06c:	loopne 0x14000e083
   14000e06e:	add    BYTE PTR [rax],al
   14000e070:	xor    dl,BYTE PTR [rsi]
   14000e072:	add    BYTE PTR [rax],al
   14000e074:	in     al,dx
   14000e075:	scas   al,BYTE PTR es:[rdi]
   14000e076:	add    BYTE PTR [rax],al
   14000e078:	rex (bad) 
   14000e07a:	add    BYTE PTR [rax],al
   14000e07c:	xchg   edx,eax
   14000e07d:	(bad)  
   14000e07e:	add    BYTE PTR [rax],al
   14000e080:	in     al,dx
   14000e081:	scas   al,BYTE PTR es:[rdi]
   14000e082:	add    BYTE PTR [rax],al
   14000e084:	movabs al,ds:0xec000016f0000016
   14000e08d:	scas   al,BYTE PTR es:[rdi]
   14000e08e:	add    BYTE PTR [rax],al
   14000e090:	add    BYTE PTR [rdi],dl
   14000e092:	add    BYTE PTR [rax],al
   14000e094:	pop    rsi
   14000e095:	(bad)  
   14000e096:	add    BYTE PTR [rax],al
   14000e098:	add    BYTE PTR [rdi+0x17700000],ch
   14000e09e:	add    BYTE PTR [rax],al
   14000e0a0:	clc    
   14000e0a1:	sbb    al,0x0
   14000e0a3:	add    BYTE PTR [rax],dl
   14000e0a5:	scas   eax,DWORD PTR es:[rdi]
   14000e0a6:	add    BYTE PTR [rax],al
   14000e0a8:	add    BYTE PTR [rip+0x1e680000],bl        # 0x15e68e0ae
   14000e0ae:	add    BYTE PTR [rax],al
   14000e0b0:	xor    al,0xaf
   14000e0b2:	add    BYTE PTR [rax],al
   14000e0b4:	jo     0x14000e0d4
   14000e0b6:	add    BYTE PTR [rax],al
   14000e0b8:	xor    ebx,DWORD PTR [rdi]
   14000e0ba:	add    BYTE PTR [rax],al
   14000e0bc:	rex.R scas eax,DWORD PTR es:[rdi]
   14000e0be:	add    BYTE PTR [rax],al
   14000e0c0:	cmp    al,0x1f
   14000e0c2:	add    BYTE PTR [rax],al
   14000e0c4:	out    dx,eax
   14000e0c5:	(bad)  
   14000e0c6:	add    BYTE PTR [rax],al
   14000e0c8:	push   rax
   14000e0c9:	scas   eax,DWORD PTR es:[rdi]
   14000e0ca:	add    BYTE PTR [rax],al
   14000e0cc:	clc    
   14000e0cd:	(bad)  
   14000e0ce:	add    BYTE PTR [rax],al
   14000e0d0:	adc    esp,DWORD PTR [rcx]
   14000e0d2:	add    BYTE PTR [rax],al
   14000e0d4:	pop    rax
   14000e0d5:	scas   eax,DWORD PTR es:[rdi]
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	sbb    al,0x21
   14000e0da:	add    BYTE PTR [rax],al
   14000e0dc:	jmp    QWORD PTR [rcx]
   14000e0de:	add    BYTE PTR [rax],al
   14000e0e0:	rex.R scas eax,DWORD PTR es:[rdi]
   14000e0e2:	add    BYTE PTR [rax],al
   14000e0e4:	or     BYTE PTR [rdx],ah
   14000e0e6:	add    BYTE PTR [rax],al
   14000e0e8:	iret   
   14000e0e9:	and    eax,DWORD PTR [rax]
   14000e0eb:	add    BYTE PTR [rax-0x51],ch
   14000e0ee:	add    BYTE PTR [rax],al
   14000e0f0:	fsub   DWORD PTR [rbx]
   14000e0f2:	add    BYTE PTR [rax],al
   14000e0f4:	xchg   ebp,eax
   14000e0f5:	and    al,0x0
   14000e0f7:	add    BYTE PTR [rax-0x63ffff51],al
   14000e0fd:	and    al,0x0
   14000e0ff:	add    BYTE PTR [rbp-0x6bffffdc],bh
   14000e105:	scas   al,BYTE PTR es:[rdi]
   14000e106:	add    BYTE PTR [rax],al
   14000e108:	(bad)  
   14000e109:	and    al,0x0
   14000e10b:	add    BYTE PTR [rcx+0x2b],ah
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	cwde   
   14000e111:	scas   eax,DWORD PTR es:[rdi]
   14000e112:	add    BYTE PTR [rax],al
   14000e114:	push   0x7500002b
   14000e119:	add    BYTE PTR cs:[rax],al
   14000e11c:	mov    al,0xaf
   14000e11e:	add    BYTE PTR [rax],al
   14000e120:	sub    BYTE PTR [rsi],0x0
   14000e123:	add    cl,ah
   14000e125:	add    BYTE PTR cs:[rax],al
   14000e128:	add    BYTE PTR [rdi+0x2ee80000],ch
   14000e12e:	add    BYTE PTR [rax],al
   14000e130:	xor    dh,BYTE PTR [rcx]
   14000e132:	add    BYTE PTR [rax],al
   14000e134:	(bad)  
   14000e135:	scas   eax,DWORD PTR es:[rdi]
   14000e136:	add    BYTE PTR [rax],al
   14000e138:	cmp    BYTE PTR [rcx],dh
   14000e13a:	add    BYTE PTR [rax],al
   14000e13c:	sub    eax,0xf4000034
   14000e141:	scas   eax,DWORD PTR es:[rdi]
   14000e142:	add    BYTE PTR [rax],al
   14000e144:	xor    al,0x34
   14000e146:	add    BYTE PTR [rax],al
   14000e148:	mov    ebx,0x14000037
   14000e14d:	mov    al,0x0
   14000e14f:	add    ah,al
   14000e151:	(bad)  
   14000e152:	add    BYTE PTR [rax],al
   14000e154:	xchg   edx,eax
   14000e155:	cmp    BYTE PTR [rax],al
   14000e157:	add    BYTE PTR [rax],bh
   14000e159:	mov    al,0x0
   14000e15b:	add    BYTE PTR [rax+0x77000038],bl
   14000e161:	cmp    al,BYTE PTR [rax]
   14000e163:	add    BYTE PTR [rax+rsi*4+0x0],al
   14000e167:	add    BYTE PTR [rax+0x6900003a],al
   14000e16d:	add    BYTE PTR [r8],al
   14000e170:	ins    BYTE PTR es:[rdi],dx
   14000e171:	mov    al,0x0
   14000e173:	add    BYTE PTR [rax+0x41],dh
   14000e176:	add    BYTE PTR [rax],al
   14000e178:	cmc    
   14000e179:	rex.RX add BYTE PTR [rax],r8b
   14000e17c:	xchg   esp,eax
   14000e17d:	mov    al,0x0
   14000e17f:	add    ah,bh
   14000e181:	rex.RX add BYTE PTR [rax],r8b
   14000e184:	fwait
   14000e185:	rex.WB add BYTE PTR [r8],al
   14000e188:	mov    eax,0xb00000b0
   14000e18d:	rex.WB add BYTE PTR [r8],al
   14000e190:	(bad)  
   14000e191:	rex.WR add BYTE PTR [rax],r8b
   14000e194:	(bad)  
   14000e195:	mov    al,0x0
   14000e197:	add    BYTE PTR [rax],dh
   14000e199:	rex.WR add BYTE PTR [rax],r8b
   14000e19c:	or     DWORD PTR [rsi+0x0],edx
   14000e19f:	add    ah,dh
   14000e1a1:	mov    al,0x0
   14000e1a3:	add    BYTE PTR [rax],dl
   14000e1a5:	push   rsi
   14000e1a6:	add    BYTE PTR [rax],al
   14000e1a8:	in     al,dx
   14000e1a9:	pop    rax
   14000e1aa:	add    BYTE PTR [rax],al
   14000e1ac:	sbb    al,0xb1
   14000e1ae:	add    BYTE PTR [rax],al
   14000e1b0:	hlt    
   14000e1b1:	pop    rax
   14000e1b2:	add    BYTE PTR [rax],al
   14000e1b4:	add    eax,0x4000005d
   14000e1b9:	mov    cl,0x0
   14000e1bb:	add    BYTE PTR [rbx*2+0x5fc80000],cl
   14000e1c2:	add    BYTE PTR [rax],al
   14000e1c4:	push   0xffffffffd00000b1
   14000e1c9:	pop    rdi
   14000e1ca:	add    BYTE PTR [rax],al
   14000e1cc:	test   eax,0x68000060
   14000e1d1:	mov    cl,0x0
   14000e1d3:	add    BYTE PTR [rax-0x3dffffa0],dh
   14000e1d9:	(bad)  
   14000e1da:	add    BYTE PTR [rax],al
   14000e1dc:	xor    BYTE PTR [rcx+0x62c80000],0x0
   14000e1e3:	add    BYTE PTR [rbx-0x5fffff98],bh
   14000e1e9:	mov    cl,0x0
   14000e1eb:	add    ah,al
   14000e1ed:	push   0x6a720000
   14000e1f2:	add    BYTE PTR [rax],al
   14000e1f4:	mov    eax,0x780000b1
   14000e1f9:	push   0x0
   14000e1fb:	add    dl,ah
   14000e1fd:	ins    BYTE PTR es:[rdi],dx
   14000e1fe:	add    BYTE PTR [rax],al
   14000e200:	(bad)  
   14000e201:	mov    cl,0x0
   14000e203:	add    al,ch
   14000e205:	ins    BYTE PTR es:[rdi],dx
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	mov    WORD PTR [rbp+0x0],gs
   14000e20b:	add    BYTE PTR [rsi+rbp*4+0x6d940000],dl
   14000e212:	add    BYTE PTR [rax],al
   14000e214:	lods   al,BYTE PTR ds:[rsi]
   14000e215:	outs   dx,BYTE PTR ds:[rsi]
   14000e216:	add    BYTE PTR [rax],al
   14000e218:	lock mov cl,0x0
   14000e21b:	add    BYTE PTR [rsi+rbp*2+0x70420000],dh
   14000e222:	add    BYTE PTR [rax],al
   14000e224:	add    al,0xb2
   14000e226:	add    BYTE PTR [rax],al
   14000e228:	rex.W jo 0x14000e22b
   14000e22b:	add    BYTE PTR [rsi-0x63ffff8f],bl
   14000e231:	scas   al,BYTE PTR es:[rdi]
   14000e232:	add    BYTE PTR [rax],al
   14000e234:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e235:	jno    0x14000e237
   14000e237:	add    BYTE PTR [rcx+0x72],dh
   14000e23a:	add    BYTE PTR [rax],al
   14000e23c:	sbb    al,0xb2
   14000e23e:	add    BYTE PTR [rax],al
   14000e240:	js     0x14000e2b4
   14000e242:	add    BYTE PTR [rax],al
   14000e244:	xor    BYTE PTR [rbx+0x0],dh
   14000e247:	add    BYTE PTR [rdx+rsi*4],ch
   14000e24a:	add    BYTE PTR [rax],al
   14000e24c:	rex jae 0x14000e24f
   14000e24f:	add    BYTE PTR [rdi],cl
   14000e251:	je     0x14000e253
   14000e253:	add    al,al
   14000e255:	scas   al,BYTE PTR es:[rdi]
   14000e256:	add    BYTE PTR [rax],al
   14000e258:	and    BYTE PTR [rax+rax*1+0x0],dh
   14000e25c:	imul   esi,DWORD PTR [rax+rax*1+0x0],0xaeb8
   14000e264:	jo     0x14000e2da
   14000e266:	add    BYTE PTR [rax],al
   14000e268:	(bad)  
   14000e269:	je     0x14000e26b
   14000e26b:	add    al,al
   14000e26d:	scas   al,BYTE PTR es:[rdi]
   14000e26e:	add    BYTE PTR [rax],al
   14000e270:	mov    BYTE PTR [rax+rax*1+0x0],dh
   14000e274:	fidiv  WORD PTR [rsi+0x0]
   14000e277:	add    BYTE PTR [rax-0x4e],al
   14000e27a:	add    BYTE PTR [rax],al
   14000e27c:	lock jbe 0x14000e27f
   14000e27f:	add    BYTE PTR [rsi],cl
   14000e281:	ja     0x14000e283
   14000e283:	add    BYTE PTR [rax-0x4e],dh
   14000e286:	add    BYTE PTR [rax],al
   14000e288:	adc    al,0x77
   14000e28a:	add    BYTE PTR [rax],al
   14000e28c:	rex.W ja 0x14000e28f
   14000e28f:	add    BYTE PTR [rsi+rbp*4+0x77500000],dl
   14000e296:	add    BYTE PTR [rax],al
   14000e298:	sar    DWORD PTR [rax+0x0],0x0
   14000e29c:	je     0x14000e250
   14000e29e:	add    BYTE PTR [rax],al
   14000e2a0:	sar    BYTE PTR [rax+0x0],1
   14000e2a3:	add    BYTE PTR [rcx],cl
   14000e2a5:	jns    0x14000e2a7
   14000e2a7:	add    al,al
   14000e2a9:	scas   al,BYTE PTR es:[rdi]
   14000e2aa:	add    BYTE PTR [rax],al
   14000e2ac:	adc    BYTE PTR [rcx+0x0],bh
   14000e2af:	add    BYTE PTR [rax],ch
   14000e2b1:	jns    0x14000e2b3
   14000e2b3:	add    al,al
   14000e2b5:	scas   al,BYTE PTR es:[rdi]
   14000e2b6:	add    BYTE PTR [rax],al
   14000e2b8:	cmp    al,0x79
   14000e2ba:	add    BYTE PTR [rax],al
   14000e2bc:	nop
   14000e2bd:	jns    0x14000e2bf
   14000e2bf:	add    BYTE PTR [rdx+rsi*4+0x0],bh
   14000e2c3:	add    BYTE PTR [rax-0x22ffff87],bl
   14000e2c9:	jns    0x14000e2cb
   14000e2cb:	add    BYTE PTR [rsi+rbp*4+0x7a400000],dl
   14000e2d2:	add    BYTE PTR [rax],al
   14000e2d4:	lea    edi,[rdx+0x0]
   14000e2d7:	add    BYTE PTR [rdx+rsi*4+0x7ad40000],bl
   14000e2de:	add    BYTE PTR [rax],al
   14000e2e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e2e1:	jnp    0x14000e2e3
   14000e2e3:	add    al,cl
   14000e2e5:	mov    dl,0x0
   14000e2e7:	add    al,ch
   14000e2e9:	jnp    0x14000e2eb
   14000e2eb:	add    BYTE PTR [rip+0xffffffffc000007c],al        # 0x10000e36d
   14000e2f1:	scas   al,BYTE PTR es:[rdi]
   14000e2f2:	add    BYTE PTR [rax],al
   14000e2f4:	or     al,0x7c
   14000e2f6:	add    BYTE PTR [rax],al
   14000e2f8:	outs   dx,DWORD PTR ds:[rsi]
   14000e2f9:	jl     0x14000e2fb
   14000e2fb:	add    BYTE PTR [rsi+rbp*4+0x7c900000],dl
   14000e302:	add    BYTE PTR [rax],al
   14000e304:	xchg   edx,eax
   14000e305:	jl     0x14000e307
   14000e307:	add    al,bl
   14000e309:	mov    dl,0x0
   14000e30b:	add    BYTE PTR [rax-0x2ffff84],dh
   14000e311:	jl     0x14000e313
   14000e313:	add    al,ah
   14000e315:	mov    dl,0x0
   14000e317:	add    BYTE PTR [rsi],al
   14000e319:	jge    0x14000e31b
   14000e31b:	add    BYTE PTR [rdi*2-0x4d400000],ah
   14000e322:	add    BYTE PTR [rax],al
   14000e324:	xor    BYTE PTR [rbp+0x0],bh
   14000e327:	add    BYTE PTR [rax+0x7d],dl
   14000e32a:	add    BYTE PTR [rax],al
   14000e32c:	.byte 0xc0
   14000e32d:	mov    dl,0x0
	...

Disassembly of section .rsrc:

000000014000f000 <.rsrc>:
	...
   14000f00c:	add    DWORD PTR [rax],eax
   14000f00e:	add    al,0x0
   14000f010:	js     0x14000f013
   14000f012:	add    BYTE PTR [rax-0x7fffffc8],al
   14000f018:	add    eax,DWORD PTR [rax]
   14000f01a:	add    BYTE PTR [rax],al
   14000f01c:	push   rax
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	or     BYTE PTR [rsi],0x0
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	push   0x10800000
   14000f029:	add    BYTE PTR [rax],al
   14000f02b:	add    BYTE PTR [rax+0x18800000],al
   14000f031:	add    BYTE PTR [rax],al
   14000f033:	add    BYTE PTR [rax+0x800000],bl
	...
   14000f045:	add    BYTE PTR [rcx],al
   14000f047:	add    BYTE PTR [rcx],al
   14000f049:	add    BYTE PTR [rax],al
   14000f04b:	add    BYTE PTR [rax+0x800000],dh
	...
   14000f05d:	add    BYTE PTR [rcx],al
   14000f05f:	add    BYTE PTR [rcx],al
   14000f061:	add    BYTE PTR [rax],al
   14000f063:	add    al,cl
   14000f065:	add    BYTE PTR [rax],al
   14000f067:	add    BYTE PTR [rax],0x0
	...
   14000f076:	add    DWORD PTR [rax],eax
   14000f078:	data16 add BYTE PTR [rax],al
   14000f07b:	add    al,ah
   14000f07d:	add    BYTE PTR [rax],al
   14000f07f:	add    BYTE PTR [rax],0x0
	...
   14000f08e:	add    DWORD PTR [rax],eax
   14000f090:	add    DWORD PTR [rax],eax
   14000f092:	add    BYTE PTR [rax],al
   14000f094:	clc    
   14000f095:	add    BYTE PTR [rax],al
   14000f097:	add    BYTE PTR [rax],0x0
	...
   14000f0a6:	add    DWORD PTR [rax],eax
   14000f0a8:	add    DWORD PTR [rax],eax
   14000f0aa:	add    BYTE PTR [rax],al
   14000f0ac:	adc    BYTE PTR [rcx],al
   14000f0ae:	add    BYTE PTR [rax+0x0],al
	...
   14000f0bc:	add    BYTE PTR [rax],al
   14000f0be:	add    DWORD PTR [rax],eax
   14000f0c0:	or     DWORD PTR [rax+rax*1],eax
   14000f0c3:	add    BYTE PTR [rax],ch
   14000f0c5:	add    DWORD PTR [rax],eax
	...
   14000f0d3:	add    BYTE PTR [rax],al
   14000f0d5:	add    BYTE PTR [rcx],al
   14000f0d7:	add    BYTE PTR [rcx],cl
   14000f0d9:	add    al,0x0
   14000f0db:	add    BYTE PTR [rax],bh
   14000f0dd:	add    DWORD PTR [rax],eax
	...
   14000f0eb:	add    BYTE PTR [rax],al
   14000f0ed:	add    BYTE PTR [rcx],al
   14000f0ef:	add    BYTE PTR [rcx],cl
   14000f0f1:	add    al,0x0
   14000f0f3:	add    BYTE PTR [rax+0x1],cl
	...
   14000f106:	add    DWORD PTR [rax],eax
   14000f108:	or     DWORD PTR [rax+rax*1],eax
   14000f10b:	add    BYTE PTR [rax+0x1],bl
	...
   14000f11e:	add    DWORD PTR [rax],eax
   14000f120:	or     DWORD PTR [rax+rax*1],eax
   14000f123:	add    BYTE PTR [rax+0x1],ch
   14000f126:	add    BYTE PTR [rax],al
   14000f128:	or     bl,bh
   14000f12a:	add    BYTE PTR [rax],al
   14000f12c:	fadd   DWORD PTR [rax]
	...
   14000f136:	add    BYTE PTR [rax],al
   14000f138:	or     al,bh
   14000f13a:	add    BYTE PTR [rax],al
   14000f13c:	call   0x14000f143
   14000f141:	add    BYTE PTR [rax],al
   14000f143:	add    BYTE PTR [rax],al
   14000f145:	add    BYTE PTR [rax],al
   14000f147:	add    al,dh
   14000f149:	cli    
   14000f14a:	add    BYTE PTR [rax],al
   14000f14c:	adc    al,0x0
	...
   14000f156:	add    BYTE PTR [rax],al
   14000f158:	pop    rax
   14000f159:	hlt    
   14000f15a:	add    BYTE PTR [rax],al
   14000f15c:	mov    al,0x3
	...
   14000f166:	add    BYTE PTR [rax],al
   14000f168:	xor    cl,0x0
   14000f16b:	add    cl,dl
   14000f16d:	add    al,BYTE PTR [rax]
	...
   14000f177:	add    BYTE PTR [rbx],al
   14000f179:	add    BYTE PTR [rbp+0x0],cl
   14000f17c:	push   rbp
   14000f17d:	add    BYTE PTR [rcx+0x0],cl
   14000f180:	cmp    al,0x3f
   14000f182:	js     0x14000f1f1
   14000f184:	ins    BYTE PTR es:[rdi],dx
   14000f185:	and    BYTE PTR [rsi+0x65],dh
   14000f188:	jb     0x14000f1fd
   14000f18a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f191:	xor    BYTE PTR [rdx],ah
   14000f193:	and    BYTE PTR [rbp+0x6e],ah
   14000f196:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000f199:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000f1a0:	rex.RX sub eax,0x73202238
   14000f1a6:	je     0x14000f209
   14000f1a8:	outs   dx,BYTE PTR ds:[rsi]
   14000f1a9:	fs (bad) 
   14000f1ab:	ins    BYTE PTR es:[rdi],dx
   14000f1ac:	outs   dx,DWORD PTR ds:[rsi]
   14000f1ad:	outs   dx,BYTE PTR ds:[rsi]
   14000f1ae:	gs cmp eax,0x73657922
   14000f1b4:	and    bh,BYTE PTR [rdi]
   14000f1b6:	ds or  eax,0x2d213c0a
   14000f1bc:	sub    eax,0x706f4320
   14000f1c1:	jns    0x14000f235
   14000f1c3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000f1ca:	sub    DWORD PTR [rax],esp
   14000f1cc:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000f1d4:	je     0x14000f1f6
   14000f1d6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f1d8:	jb     0x14000f24a
   14000f1da:	outs   dx,DWORD PTR ds:[rsi]
   14000f1db:	jb     0x14000f23e
   14000f1dd:	je     0x14000f248
   14000f1df:	outs   dx,DWORD PTR ds:[rsi]
   14000f1e0:	outs   dx,BYTE PTR ds:[rsi]
   14000f1e1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e3014
   14000f1e7:	cmp    al,0x61
   14000f1e9:	jae    0x14000f25e
   14000f1eb:	gs ins DWORD PTR es:[rdi],dx
   14000f1ed:	(bad)  
   14000f1ee:	ins    BYTE PTR es:[rdi],dx
   14000f1ef:	jns    0x14000f211
   14000f1f1:	js     0x14000f260
   14000f1f3:	ins    BYTE PTR es:[rdi],dx
   14000f1f4:	outs   dx,BYTE PTR ds:[rsi]
   14000f1f5:	jae    0x14000f234
   14000f1f7:	and    dh,BYTE PTR [rbp+0x72]
   14000f1fa:	outs   dx,BYTE PTR ds:[rsi]
   14000f1fb:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f1fe:	push   0x73616d65
   14000f203:	sub    eax,0x7263696d
   14000f208:	outs   dx,DWORD PTR ds:[rsi]
   14000f209:	jae    0x14000f27a
   14000f20b:	data16 je 0x14000f23b
   14000f20e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f211:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f214:	ins    DWORD PTR es:[rdi],dx
   14000f215:	cs jbe 0x14000f249
   14000f218:	and    ah,BYTE PTR [rax]
   14000f21a:	ins    DWORD PTR es:[rdi],dx
   14000f21b:	(bad)  
   14000f21c:	outs   dx,BYTE PTR ds:[rsi]
   14000f21d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000f224:	jb     0x14000f299
   14000f226:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f22d:	xor    BYTE PTR [rdx],ah
   14000f22f:	ds or  eax,0x73613c0a
   14000f235:	jae    0x14000f29c
   14000f237:	ins    DWORD PTR es:[rdi],dx
   14000f238:	(bad)  
   14000f239:	ins    BYTE PTR es:[rdi],dx
   14000f23a:	jns    0x14000f285
   14000f23c:	fs outs dx,BYTE PTR gs:[rsi]
   14000f23f:	je     0x14000f2aa
   14000f241:	je     0x14000f2bc
   14000f243:	or     eax,0x2020200a
   14000f248:	and    BYTE PTR [rsi+0x65],dh
   14000f24b:	jb     0x14000f2c0
   14000f24d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000f254:	xor    DWORD PTR [rsi],ebp
   14000f256:	xor    BYTE PTR [rsi],ch
   14000f258:	xor    BYTE PTR [rdx],ah
   14000f25a:	or     eax,0x2020200a
   14000f25f:	and    BYTE PTR [rax+0x72],dh
   14000f262:	outs   dx,DWORD PTR ds:[rsi]
   14000f263:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f266:	jae    0x14000f2d7
   14000f268:	jb     0x14000f2ab
   14000f26a:	jb     0x14000f2cf
   14000f26c:	push   0x63657469
   14000f271:	je     0x14000f2e8
   14000f273:	jb     0x14000f2da
   14000f275:	cmp    eax,0x646d6122
   14000f27a:	ss xor al,0x22
   14000f27d:	or     eax,0x2020200a
   14000f282:	and    BYTE PTR [rsi+0x61],ch
   14000f285:	ins    DWORD PTR es:[rdi],dx
   14000f286:	gs cmp eax,0x63694d22
   14000f28c:	jb     0x14000f2fd
   14000f28e:	jae    0x14000f2ff
   14000f290:	data16 je 0x14000f2c1
   14000f293:	push   rdi
   14000f294:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000f29b:	rex.WRX
   14000f29c:	gs je  0x14000f2cd
   14000f29f:	movsxd ebp,DWORD PTR [rbp+0x64]
   14000f2a2:	ins    BYTE PTR es:[rdi],dx
   14000f2a3:	xor    esi,DWORD PTR [rdx]
   14000f2a5:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602112b5
   14000f2ab:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000f2af:	gs cmp eax,0x6e697722
   14000f2b5:	xor    esi,DWORD PTR [rdx]
   14000f2b7:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f21c7
   14000f2bd:	or     bh,BYTE PTR [rsp+riz*2]
   14000f2c0:	gs jae 0x14000f326
   14000f2c3:	jb     0x14000f32e
   14000f2c5:	jo     0x14000f33b
   14000f2c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f43223e
   14000f2ce:	outs   dx,BYTE PTR ds:[rsi]
   14000f2cf:	outs   dx,BYTE PTR ds:[rsi]
   14000f2d0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000f2d5:	outs   dx,BYTE PTR ds:[rsi]
   14000f2d6:	and    BYTE PTR [rbp+0x61],cl
   14000f2d9:	outs   dx,BYTE PTR ds:[rsi]
   14000f2da:	(bad)  
   14000f2db:	addr32 gs jb 0x14000f2ff
   14000f2df:	push   rax
   14000f2e0:	push   0x62656e6f
   14000f2e5:	outs   dx,DWORD PTR ds:[rsi]
   14000f2e6:	outs   dx,DWORD PTR ds:[rsi]
   14000f2e7:	imul   esp,DWORD PTR [rax],0x44
   14000f2ea:	outs   dx,DWORD PTR ds:[rsi]
   14000f2eb:	ja     0x14000f35b
   14000f2ed:	ins    BYTE PTR es:[rdi],dx
   14000f2ee:	outs   dx,DWORD PTR ds:[rsi]
   14000f2ef:	(bad)  
   14000f2f0:	fs gs jb 0x14000f316
   14000f2f4:	cmp    al,0x2f
   14000f2f6:	fs gs jae 0x14000f35d
   14000f2fa:	jb     0x14000f365
   14000f2fc:	jo     0x14000f372
   14000f2fe:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000f305:	or     bh,BYTE PTR [rsp+rsi*2]
   14000f308:	jb     0x14000f37f
   14000f30a:	jae    0x14000f380
   14000f30c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000f30e:	outs   dx,WORD PTR ds:[rsi]
   14000f310:	and    BYTE PTR [rax+0x6d],bh
   14000f313:	ins    BYTE PTR es:[rdi],dx
   14000f314:	outs   dx,BYTE PTR ds:[rsi]
   14000f315:	jae    0x14000f354
   14000f317:	and    dh,BYTE PTR [rbp+0x72]
   14000f31a:	outs   dx,BYTE PTR ds:[rsi]
   14000f31b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f31e:	push   0x73616d65
   14000f323:	sub    eax,0x7263696d
   14000f328:	outs   dx,DWORD PTR ds:[rsi]
   14000f329:	jae    0x14000f39a
   14000f32b:	data16 je 0x14000f35b
   14000f32e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f331:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f334:	ins    DWORD PTR es:[rdi],dx
   14000f335:	cs jbe 0x14000f36b
   14000f338:	and    bh,BYTE PTR [rsi]
   14000f33a:	or     eax,0x2020200a
   14000f33f:	and    BYTE PTR [rbx+rsi*2],bh
   14000f342:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000f346:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000f34e:	and    BYTE PTR [rax],ah
   14000f350:	and    BYTE PTR [rax],ah
   14000f352:	and    BYTE PTR [rax],ah
   14000f354:	cmp    al,0x72
   14000f356:	gs jno 0x14000f3ce
   14000f359:	gs jae 0x14000f3d0
   14000f35c:	gs fs push rax
   14000f35f:	jb     0x14000f3ca
   14000f361:	jbe    0x14000f3cc
   14000f363:	ins    BYTE PTR es:[rdi],dx
   14000f364:	gs addr32 gs jae 0x14000f3a7
   14000f369:	or     eax,0x2020200a
   14000f36e:	and    BYTE PTR [rax],ah
   14000f370:	and    BYTE PTR [rax],ah
   14000f372:	and    BYTE PTR [rax],ah
   14000f374:	and    BYTE PTR [rax],ah
   14000f376:	and    BYTE PTR [rdx+rsi*2],bh
   14000f379:	gs jno 0x14000f3f1
   14000f37c:	gs jae 0x14000f3f3
   14000f37f:	gs fs rex.RB js 0x14000f3e9
   14000f384:	movsxd esi,DWORD PTR [rbp+0x74]
   14000f387:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000f38e:	ins    BYTE PTR es:[rdi],dx
   14000f38f:	or     eax,0x2020200a
   14000f394:	and    BYTE PTR [rax],ah
   14000f396:	and    BYTE PTR [rax],ah
   14000f398:	and    BYTE PTR [rax],ah
   14000f39a:	and    BYTE PTR [rax],ah
   14000f39c:	and    BYTE PTR [rax],ah
   14000f39e:	and    BYTE PTR [rax],ah
   14000f3a0:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000f3a4:	gs ins BYTE PTR es:[rdi],dx
   14000f3a6:	cmp    eax,0x49736122
   14000f3ab:	outs   dx,BYTE PTR ds:[rsi]
   14000f3ac:	jbe    0x14000f41d
   14000f3ae:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000f3b2:	or     eax,0x2020200a
   14000f3b7:	and    BYTE PTR [rax],ah
   14000f3b9:	and    BYTE PTR [rax],ah
   14000f3bb:	and    BYTE PTR [rax],ah
   14000f3bd:	and    BYTE PTR [rax],ah
   14000f3bf:	and    BYTE PTR [rax],ah
   14000f3c1:	and    BYTE PTR [rax],ah
   14000f3c3:	and    BYTE PTR [rbp+0x69],dh
   14000f3c6:	movsxd esp,DWORD PTR [r11+0x65]
   14000f3ca:	jae    0x14000f43f
   14000f3cc:	cmp    eax,0x6c616622
   14000f3d1:	jae    0x14000f438
   14000f3d3:	and    bh,BYTE PTR [rsi]
   14000f3d5:	or     eax,0x2020200a
   14000f3da:	and    BYTE PTR [rax],ah
   14000f3dc:	and    BYTE PTR [rax],ah
   14000f3de:	and    BYTE PTR [rax],ah
   14000f3e0:	and    BYTE PTR [rax],ah
   14000f3e2:	and    BYTE PTR [rdi+rbp*1],bh
   14000f3e5:	jb     0x14000f44c
   14000f3e7:	jno    0x14000f45e
   14000f3e9:	gs jae 0x14000f460
   14000f3ec:	gs fs rex.RB js 0x14000f456
   14000f3f1:	movsxd esi,DWORD PTR [rbp+0x74]
   14000f3f4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000f3fb:	ins    BYTE PTR es:[rdi],dx
   14000f3fc:	ds or  eax,0x2020200a
   14000f402:	and    BYTE PTR [rax],ah
   14000f404:	and    BYTE PTR [rax],ah
   14000f406:	and    BYTE PTR [rdi+rbp*1],bh
   14000f409:	jb     0x14000f470
   14000f40b:	jno    0x14000f482
   14000f40d:	gs jae 0x14000f484
   14000f410:	gs fs push rax
   14000f413:	jb     0x14000f47e
   14000f415:	jbe    0x14000f480
   14000f417:	ins    BYTE PTR es:[rdi],dx
   14000f418:	gs addr32 gs jae 0x14000f45b
   14000f41d:	or     eax,0x2020200a
   14000f422:	and    BYTE PTR [rdi+rbp*1],bh
   14000f425:	jae    0x14000f48c
   14000f427:	movsxd esi,DWORD PTR [rbp+0x72]
   14000f42a:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000f432:	je     0x14000f4a6
   14000f434:	jne    0x14000f4a9
   14000f436:	je     0x14000f481
   14000f438:	outs   dx,BYTE PTR ds:[rsi]
   14000f439:	outs   dx,WORD PTR ds:[rsi]
   14000f43b:	ds or  eax,0x3c0a0d0a
   14000f441:	(bad)  
   14000f442:	(bad)  
   14000f443:	jae    0x14000f4b8
   14000f445:	gs ins DWORD PTR es:[rdi],dx
   14000f447:	(bad)  
   14000f448:	ins    BYTE PTR es:[rdi],dx
   14000f449:	jns    0x14000f489
   14000f44b:	or     eax,0xd0a0d0a
   14000f450:	or     al,BYTE PTR [rax]
   14000f452:	add    BYTE PTR [rax],al
   14000f454:	add    BYTE PTR [rax],al
   14000f456:	add    BYTE PTR [rax],al
   14000f458:	test   al,0x3
   14000f45a:	xor    al,0x0
   14000f45c:	add    BYTE PTR [rax],al
   14000f45e:	push   rsi
   14000f45f:	add    BYTE PTR [rbx+0x0],dl
   14000f462:	pop    rdi
   14000f463:	add    BYTE PTR [rsi+0x0],dl
   14000f466:	add    BYTE PTR [r10+0x0],r10b
   14000f46a:	push   rbx
   14000f46b:	add    BYTE PTR [rcx+0x0],cl
   14000f46e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000f472:	pop    rdi
   14000f473:	add    BYTE PTR [rcx+0x0],cl
   14000f476:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000f47a:	rex.WRXB add BYTE PTR [r8],r8b
   14000f47d:	add    BYTE PTR [rax],al
   14000f47f:	add    BYTE PTR [rbp+0xfeef04],bh
   14000f485:	add    BYTE PTR [rcx],al
   14000f487:	add    BYTE PTR [rdx],al
   14000f489:	add    BYTE PTR [rdi],al
   14000f48b:	add    dl,bh
   14000f48d:	rex.X add BYTE PTR [rax],bpl
   14000f490:	add    al,BYTE PTR [rax]
   14000f492:	(bad)  
   14000f493:	add    dl,bh
   14000f495:	rex.X add BYTE PTR [rax],bpl
   14000f498:	(bad)  
   14000f499:	add    BYTE PTR [rax],al
   14000f49b:	add    BYTE PTR [rax],al
   14000f49d:	add    BYTE PTR [rax],al
   14000f49f:	add    BYTE PTR [rax+rax*1],al
   14000f4a2:	add    al,0x0
   14000f4a4:	add    DWORD PTR [rax],eax
	...
   14000f4b2:	add    BYTE PTR [rax],al
   14000f4b4:	or     BYTE PTR [rbx],al
   14000f4b6:	add    BYTE PTR [rax],al
   14000f4b8:	add    DWORD PTR [rax],eax
   14000f4ba:	push   rbx
   14000f4bb:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000f4bf:	add    BYTE PTR [rcx+0x0],ch
   14000f4c2:	outs   dx,BYTE PTR ds:[rsi]
   14000f4c3:	add    BYTE PTR [rdi+0x0],ah
   14000f4c6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f4ca:	ins    BYTE PTR es:[rdi],dx
   14000f4cb:	add    BYTE PTR [rbp+0x0],ah
   14000f4ce:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f4d2:	data16 add BYTE PTR [rdi+0x0],ch
   14000f4d6:	add    BYTE PTR [rax],al
   14000f4d8:	in     al,0x2
   14000f4da:	add    BYTE PTR [rax],al
   14000f4dc:	add    DWORD PTR [rax],eax
   14000f4de:	xor    BYTE PTR [rax],al
   14000f4e0:	xor    al,0x0
   14000f4e2:	xor    BYTE PTR [rax],al
   14000f4e4:	cmp    DWORD PTR [rax],eax
   14000f4e6:	xor    BYTE PTR [rax],al
   14000f4e8:	xor    al,0x0
   14000f4ea:	rex.X add BYTE PTR [rax],sil
   14000f4ed:	add    BYTE PTR [rax],al
   14000f4ef:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000f4f3:	add    BYTE PTR [rcx],al
   14000f4f5:	add    BYTE PTR [rbx+0x0],al
   14000f4f8:	outs   dx,DWORD PTR ds:[rsi]
   14000f4f9:	add    BYTE PTR [rbp+0x0],ch
   14000f4fc:	jo     0x14000f4fe
   14000f4fe:	(bad)  
   14000f4ff:	add    BYTE PTR [rsi+0x0],ch
   14000f502:	jns    0x14000f504
   14000f504:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f508:	ins    DWORD PTR es:[rdi],dx
   14000f509:	add    BYTE PTR [rbp+0x0],ah
   14000f50c:	add    BYTE PTR [rax],al
   14000f50e:	add    BYTE PTR [rax],al
   14000f510:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f514:	movsxd eax,DWORD PTR [rax]
   14000f516:	jb     0x14000f518
   14000f518:	outs   dx,DWORD PTR ds:[rsi]
   14000f519:	add    BYTE PTR [rbx+0x0],dh
   14000f51c:	outs   dx,DWORD PTR ds:[rsi]
   14000f51d:	add    BYTE PTR [rsi+0x0],ah
   14000f520:	je     0x14000f522
   14000f522:	and    BYTE PTR [rax],al
   14000f524:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f528:	jb     0x14000f52a
   14000f52a:	jo     0x14000f52c
   14000f52c:	outs   dx,DWORD PTR ds:[rsi]
   14000f52d:	add    BYTE PTR [rdx+0x0],dh
   14000f530:	(bad)  
   14000f531:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f535:	add    BYTE PTR [rdi+0x0],ch
   14000f538:	outs   dx,BYTE PTR ds:[rsi]
   14000f539:	add    BYTE PTR [rax],al
   14000f53b:	add    BYTE PTR [rsi+0x0],bh
   14000f53e:	sub    eax,DWORD PTR [rax]
   14000f540:	add    DWORD PTR [rax],eax
   14000f542:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f546:	ins    BYTE PTR es:[rdi],dx
   14000f547:	add    BYTE PTR [rbp+0x0],ah
   14000f54a:	add    BYTE PTR [rbp+0x0],r12b
   14000f54e:	jae    0x14000f550
   14000f550:	movsxd eax,DWORD PTR [rax]
   14000f552:	jb     0x14000f554
   14000f554:	imul   eax,DWORD PTR [rax],0x740070
   14000f55a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f560:	add    BYTE PTR [rax],al
   14000f562:	add    BYTE PTR [rax],al
   14000f564:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f568:	movsxd eax,DWORD PTR [rax]
   14000f56a:	jb     0x14000f56c
   14000f56c:	outs   dx,DWORD PTR ds:[rsi]
   14000f56d:	add    BYTE PTR [rbx+0x0],dh
   14000f570:	outs   dx,DWORD PTR ds:[rsi]
   14000f571:	add    BYTE PTR [rsi+0x0],ah
   14000f574:	je     0x14000f576
   14000f576:	and    BYTE PTR [rax],al
   14000f578:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f57c:	outs   dx,BYTE PTR ds:[rsi]
   14000f57d:	add    BYTE PTR [rsi+0x0],ch
   14000f580:	add    BYTE PTR gs:[rbx+0x0],ah
   14000f584:	je     0x14000f586
   14000f586:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f58c:	and    BYTE PTR [rax],al
   14000f58e:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000f592:	outs   dx,BYTE PTR ds:[rsi]
   14000f593:	add    BYTE PTR [rcx+0x0],ah
   14000f596:	add    BYTE PTR [ebp+0x0],ah
   14000f59a:	jb     0x14000f59c
   14000f59c:	and    BYTE PTR [rax],al
   14000f59e:	add    BYTE PTR [r13+0x0],sil
   14000f5a2:	je     0x14000f5a4
   14000f5a4:	outs   dx,DWORD PTR ds:[rsi]
   14000f5a5:	add    BYTE PTR [rip+0x6f004400],ch        # 0x1af0139ab
   14000f5ab:	add    BYTE PTR [rdi+0x0],dh
   14000f5ae:	outs   dx,BYTE PTR ds:[rsi]
   14000f5af:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000f5b3:	add    BYTE PTR [rcx+0x0],ah
   14000f5b6:	add    BYTE PTR fs:[rax],al
   14000f5b9:	add    BYTE PTR [rax],al
   14000f5bb:	add    BYTE PTR [rax+rax*1+0x26],ch
   14000f5bf:	add    BYTE PTR [rcx],al
   14000f5c1:	add    BYTE PTR [rsi+0x0],al
   14000f5c4:	imul   eax,DWORD PTR [rax],0x65006c
   14000f5ca:	push   rsi
   14000f5cb:	add    BYTE PTR [rbp+0x0],ah
   14000f5ce:	jb     0x14000f5d0
   14000f5d0:	jae    0x14000f5d2
   14000f5d2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f5d8:	add    BYTE PTR [rax],al
   14000f5da:	add    BYTE PTR [rax],al
   14000f5dc:	(bad)  
   14000f5dd:	add    BYTE PTR [rsi],ch
   14000f5df:	add    BYTE PTR [rdx],dh
   14000f5e1:	add    BYTE PTR [rsi],ch
   14000f5e3:	add    BYTE PTR [rcx],dh
   14000f5e5:	add    BYTE PTR [rax],dh
   14000f5e7:	add    BYTE PTR [rdx],dh
   14000f5e9:	add    BYTE PTR [rax+rax*1],dh
   14000f5ec:	xor    BYTE PTR [rax],al
   14000f5ee:	add    BYTE PTR cs:[rcx],dh
   14000f5f1:	add    BYTE PTR [rdi],dh
   14000f5f3:	add    BYTE PTR [rcx],dh
   14000f5f5:	add    BYTE PTR [rax+rax*1],dh
   14000f5f8:	add    BYTE PTR ss:[rax],ah
   14000f5fb:	add    BYTE PTR [rax],ch
   14000f5fd:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000f601:	add    BYTE PTR [rcx],dh
   14000f603:	add    BYTE PTR [rdi+0x0],bl
   14000f606:	jae    0x14000f608
   14000f608:	je     0x14000f60a
   14000f60a:	xor    DWORD PTR [rax],eax
   14000f60c:	add    BYTE PTR cs:[rcx],dh
   14000f60f:	add    BYTE PTR [rsi],dh
   14000f611:	add    BYTE PTR [rax],dh
   14000f613:	add    BYTE PTR [rcx],bh
   14000f615:	add    BYTE PTR [rdx],dh
   14000f617:	add    BYTE PTR [rcx],bh
   14000f619:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701271f
   14000f61f:	add    BYTE PTR [rax+rax*1],dh
   14000f622:	cmp    BYTE PTR [rax],al
   14000f624:	sub    DWORD PTR [rax],eax
   14000f626:	add    BYTE PTR [rax],al
   14000f628:	add    BYTE PTR cs:[rdi],al
   14000f62b:	add    BYTE PTR [rcx],al
   14000f62d:	add    BYTE PTR [rcx+0x0],cl
   14000f630:	outs   dx,BYTE PTR ds:[rsi]
   14000f631:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000f635:	add    BYTE PTR [rdx+0x0],dh
   14000f638:	outs   dx,BYTE PTR ds:[rsi]
   14000f639:	add    BYTE PTR [rcx+0x0],ah
   14000f63c:	ins    BYTE PTR es:[rdi],dx
   14000f63d:	add    BYTE PTR [rsi+0x0],cl
   14000f640:	(bad)  
   14000f641:	add    BYTE PTR [rbp+0x0],ch
   14000f644:	add    BYTE PTR gs:[rax],al
   14000f647:	add    BYTE PTR [rbx+0x0],al
   14000f64a:	rex.WRB add BYTE PTR [r8+rax*1+0x4c],r8b
   14000f64f:	add    BYTE PTR [rbx],dh
   14000f651:	add    BYTE PTR [rdx],dh
   14000f653:	add    BYTE PTR [rax],al
   14000f655:	add    BYTE PTR [rax],al
   14000f657:	add    BYTE PTR [rax+0x1002e00],al
   14000f65d:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000f661:	add    BYTE PTR [rdi+0x0],ah
   14000f664:	(bad)  
   14000f665:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000f669:	add    BYTE PTR [rdi+0x0],ch
   14000f66c:	jo     0x14000f66e
   14000f66e:	jns    0x14000f670
   14000f670:	jb     0x14000f672
   14000f672:	imul   eax,DWORD PTR [rax],0x680067
   14000f678:	je     0x14000f67a
   14000f67a:	add    BYTE PTR [rax],al
   14000f67c:	test   eax,0x4d002000
   14000f681:	add    BYTE PTR [rcx+0x0],ch
   14000f684:	movsxd eax,DWORD PTR [rax]
   14000f686:	jb     0x14000f688
   14000f688:	outs   dx,DWORD PTR ds:[rsi]
   14000f689:	add    BYTE PTR [rbx+0x0],dh
   14000f68c:	outs   dx,DWORD PTR ds:[rsi]
   14000f68d:	add    BYTE PTR [rsi+0x0],ah
   14000f690:	je     0x14000f692
   14000f692:	and    BYTE PTR [rax],al
   14000f694:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f698:	jb     0x14000f69a
   14000f69a:	jo     0x14000f69c
   14000f69c:	outs   dx,DWORD PTR ds:[rsi]
   14000f69d:	add    BYTE PTR [rdx+0x0],dh
   14000f6a0:	(bad)  
   14000f6a1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f6a5:	add    BYTE PTR [rdi+0x0],ch
   14000f6a8:	outs   dx,BYTE PTR ds:[rsi]
   14000f6a9:	add    BYTE PTR [rsi],ch
   14000f6ab:	add    BYTE PTR [rax],ah
   14000f6ad:	add    BYTE PTR [rcx+0x0],al
   14000f6b0:	ins    BYTE PTR es:[rdi],dx
   14000f6b1:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000f6b5:	add    BYTE PTR [rdx+0x0],dh
   14000f6b8:	imul   eax,DWORD PTR [rax],0x680067
   14000f6be:	je     0x14000f6c0
   14000f6c0:	jae    0x14000f6c2
   14000f6c2:	and    BYTE PTR [rax],al
   14000f6c4:	jb     0x14000f6c6
   14000f6c6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000f6ca:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f6ce:	jbe    0x14000f6d0
   14000f6d0:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000f6d5:	add    BYTE PTR [rax],al
   14000f6d7:	add    BYTE PTR [rsi],bh
   14000f6d9:	add    BYTE PTR [rbx],cl
   14000f6db:	add    BYTE PTR [rcx],al
   14000f6dd:	add    BYTE PTR [rdi+0x0],cl
   14000f6e0:	jb     0x14000f6e2
   14000f6e2:	imul   eax,DWORD PTR [rax],0x690067
   14000f6e8:	outs   dx,BYTE PTR ds:[rsi]
   14000f6e9:	add    BYTE PTR [rcx+0x0],ah
   14000f6ec:	ins    BYTE PTR es:[rdi],dx
   14000f6ed:	add    BYTE PTR [rsi+0x0],al
   14000f6f0:	imul   eax,DWORD PTR [rax],0x65006c
   14000f6f6:	outs   dx,BYTE PTR ds:[rsi]
   14000f6f7:	add    BYTE PTR [rcx+0x0],ah
   14000f6fa:	ins    DWORD PTR es:[rdi],dx
   14000f6fb:	add    BYTE PTR [rbp+0x0],ah
   14000f6fe:	add    BYTE PTR [rax],al
   14000f700:	rex.XB add BYTE PTR [r13+0x0],cl
   14000f704:	add    BYTE PTR [rax+rax*1+0x33],r9b
   14000f709:	add    BYTE PTR [rdx],dh
   14000f70b:	add    BYTE PTR [rsi],ch
   14000f70d:	add    BYTE PTR [rbp+0x0],al
   14000f710:	pop    rax
   14000f711:	add    BYTE PTR [rbp+0x0],al
   14000f714:	add    BYTE PTR [rax],al
   14000f716:	add    BYTE PTR [rax],al
   14000f718:	(bad)  
   14000f719:	add    BYTE PTR [rax],ah
   14000f71b:	add    BYTE PTR [rcx],al
   14000f71d:	add    BYTE PTR [rax+0x0],dl
   14000f720:	jb     0x14000f722
   14000f722:	outs   dx,DWORD PTR ds:[rsi]
   14000f723:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000f727:	add    BYTE PTR [rbx+0x0],ah
   14000f72a:	je     0x14000f72c
   14000f72c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f730:	ins    DWORD PTR es:[rdi],dx
   14000f731:	add    BYTE PTR [rbp+0x0],ah
   14000f734:	add    BYTE PTR [rax],al
   14000f736:	add    BYTE PTR [rax],al
   14000f738:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f73c:	movsxd eax,DWORD PTR [rax]
   14000f73e:	jb     0x14000f740
   14000f740:	outs   dx,DWORD PTR ds:[rsi]
   14000f741:	add    BYTE PTR [rbx+0x0],dh
   14000f744:	outs   dx,DWORD PTR ds:[rsi]
   14000f745:	add    BYTE PTR [rsi+0x0],ah
   14000f748:	je     0x14000f74a
   14000f74a:	sub    BYTE PTR [rax],al
   14000f74c:	push   rdx
   14000f74d:	add    BYTE PTR [rcx],ch
   14000f74f:	add    BYTE PTR [rax],ah
   14000f751:	add    BYTE PTR [rbx+0x0],al
   14000f754:	outs   dx,DWORD PTR ds:[rsi]
   14000f755:	add    BYTE PTR [rsi+0x0],ch
   14000f758:	outs   dx,BYTE PTR ds:[rsi]
   14000f759:	add    BYTE PTR [rbp+0x0],ah
   14000f75c:	movsxd eax,DWORD PTR [rax]
   14000f75e:	je     0x14000f760
   14000f760:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f766:	and    BYTE PTR [rax],al
   14000f768:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000f76c:	outs   dx,BYTE PTR ds:[rsi]
   14000f76d:	add    BYTE PTR [rcx+0x0],ah
   14000f770:	add    BYTE PTR [ebp+0x0],ah
   14000f774:	jb     0x14000f776
   14000f776:	add    BYTE PTR [rax],al
   14000f778:	add    BYTE PTR [rax],r10b
   14000f77b:	add    BYTE PTR [rcx],al
   14000f77d:	add    BYTE PTR [rax+0x0],dl
   14000f780:	jb     0x14000f782
   14000f782:	outs   dx,DWORD PTR ds:[rsi]
   14000f783:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000f787:	add    BYTE PTR [rbx+0x0],ah
   14000f78a:	je     0x14000f78c
   14000f78c:	push   rsi
   14000f78d:	add    BYTE PTR [rbp+0x0],ah
   14000f790:	jb     0x14000f792
   14000f792:	jae    0x14000f794
   14000f794:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f79a:	add    BYTE PTR [rax],al
   14000f79c:	(bad)  
   14000f79d:	add    BYTE PTR [rsi],ch
   14000f79f:	add    BYTE PTR [rdx],dh
   14000f7a1:	add    BYTE PTR [rsi],ch
   14000f7a3:	add    BYTE PTR [rcx],dh
   14000f7a5:	add    BYTE PTR [rax],dh
   14000f7a7:	add    BYTE PTR [rdx],dh
   14000f7a9:	add    BYTE PTR [rax+rax*1],dh
   14000f7ac:	xor    BYTE PTR [rax],al
   14000f7ae:	add    BYTE PTR cs:[rcx],dh
   14000f7b1:	add    BYTE PTR [rdi],dh
   14000f7b3:	add    BYTE PTR [rcx],dh
   14000f7b5:	add    BYTE PTR [rax+rax*1],dh
   14000f7b8:	add    BYTE PTR ss:[rax],al
   14000f7bb:	add    BYTE PTR [rax+rax*1+0x0],al
   14000f7bf:	add    BYTE PTR [rcx],al
   14000f7c1:	add    BYTE PTR [rsi+0x0],dl
   14000f7c4:	(bad)  
   14000f7c5:	add    BYTE PTR [rdx+0x0],dh
   14000f7c8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f7cc:	ins    BYTE PTR es:[rdi],dx
   14000f7cd:	add    BYTE PTR [rbp+0x0],ah
   14000f7d0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f7d4:	data16 add BYTE PTR [rdi+0x0],ch
   14000f7d8:	add    BYTE PTR [rax],al
   14000f7da:	add    BYTE PTR [rax],al
   14000f7dc:	and    al,0x0
   14000f7de:	add    al,0x0
   14000f7e0:	add    BYTE PTR [rax],al
   14000f7e2:	push   rsp
   14000f7e3:	add    BYTE PTR [rdx+0x0],dh
   14000f7e6:	(bad)  
   14000f7e7:	add    BYTE PTR [rsi+0x0],ch
   14000f7ea:	jae    0x14000f7ec
   14000f7ec:	ins    BYTE PTR es:[rdi],dx
   14000f7ed:	add    BYTE PTR [rcx+0x0],ah
   14000f7f0:	je     0x14000f7f2
   14000f7f2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f7f8:	add    BYTE PTR [rax],al
   14000f7fa:	add    BYTE PTR [rax],al
   14000f7fc:	or     DWORD PTR [rax+rsi*4],eax
   14000f7ff:	add    al,0x0
   14000f801:	add    BYTE PTR [rax],al
   14000f803:	add    BYTE PTR [rax],al
   14000f805:	add    BYTE PTR [rax],al
   14000f807:	add    BYTE PTR [rax],ch
   14000f809:	add    BYTE PTR [rax],al
   14000f80b:	add    BYTE PTR [rax],ah
   14000f80d:	add    BYTE PTR [rax],al
   14000f80f:	add    BYTE PTR [rax+0x0],al
   14000f812:	add    BYTE PTR [rax],al
   14000f814:	add    DWORD PTR [rax],eax
   14000f816:	add    al,0x0
   14000f818:	add    BYTE PTR [rax],al
   14000f81a:	add    BYTE PTR [rax],al
   14000f81c:	add    BYTE PTR [rdx],0x0
	...
   14000f833:	add    BYTE PTR [rax],al
   14000f835:	add    BYTE PTR [rax+0x800000],al
   14000f83b:	add    BYTE PTR [rax],al
   14000f83d:	add    BYTE PTR [rax+0x8000],0x0
   14000f844:	add    BYTE PTR [rax],0x80
   14000f847:	add    BYTE PTR [rax-0x3fffff80],al
   14000f84d:	rol    al,0x0
   14000f850:	add    BYTE PTR [rax+0x80],0xff
   14000f857:	add    BYTE PTR [rax],al
   14000f859:	inc    DWORD PTR [rax]
   14000f85b:	add    BYTE PTR [rax],al
   14000f85d:	(bad)  
   14000f85e:	inc    DWORD PTR [rax]
   14000f860:	inc    DWORD PTR [rax]
   14000f862:	add    BYTE PTR [rax],al
   14000f864:	inc    DWORD PTR [rax]
   14000f866:	inc    DWORD PTR [rax]
   14000f868:	(bad)  
   14000f869:	inc    DWORD PTR [rax]
   14000f86b:	add    bh,bh
   14000f86d:	(bad)  
   14000f86e:	inc    DWORD PTR [rax]
	...
   14000f884:	getsec 
	...
   14000f892:	add    BYTE PTR [rdi],al
   14000f894:	jg     0x14000f909
   14000f896:	jae    0x14000f898
	...
   14000f8a0:	add    BYTE PTR [rax],al
   14000f8a2:	(bad)  
   14000f8a3:	jg     0x14000f8a4
   14000f8a5:	(bad)  
   14000f8a6:	(bad)  
   14000f8a7:	(bad)  
	...
   14000f8b0:	add    BYTE PTR [rdi],al
   14000f8b2:	jg     0x14000f8b3
   14000f8b4:	inc    DWORD PTR [rbx+0x737373]
   14000f8ba:	add    BYTE PTR [rax],al
   14000f8bc:	add    BYTE PTR [rax],al
   14000f8be:	add    BYTE PTR [rax],al
   14000f8c0:	(bad)  
   14000f8c1:	jg     0x14000f8c2
   14000f8c3:	(bad)  
   14000f8c4:	push   rdi
   14000f8c6:	(bad)  
   14000f8c7:	(bad)  
   14000f8c8:	(bad)  
   14000f8c9:	xor    BYTE PTR [rax],al
   14000f8cb:	add    BYTE PTR [rax],al
   14000f8cd:	add    BYTE PTR [rax],al
   14000f8cf:	add    BYTE PTR [rdi+0x30ffffff],cl
   14000f8d5:	push   QWORD PTR [rbx+0x73]
   14000f8d8:	jae    0x14000f8dd
   14000f8da:	clc    
   14000f8db:	xor    BYTE PTR [rax],al
   14000f8dd:	add    BYTE PTR [rax],al
   14000f8df:	add    BYTE PTR [rdi-0xccf0001],cl
   14000f8e5:	push   rdi
   14000f8e7:	(bad)  
   14000f8e8:	(bad)  
   14000f8e9:	maskmovq mm0,(bad)
   14000f8ea:	test   DWORD PTR [rbx+0x0],0xf330ff8f
   14000f8f4:	push   QWORD PTR [rax]
   14000f8f6:	push   QWORD PTR [rbx+0x70]
   14000f8f9:	(bad)  
   14000f8fa:	add    BYTE PTR [rax],cl
   14000f8fc:	add    BYTE PTR [rax],al
   14000f8fe:	add    BYTE PTR [rax],al
   14000f900:	or     bh,bh
   14000f902:	repz push QWORD PTR [rax]
   14000f905:	repz push rdi
   14000f908:	xor    BYTE PTR [rax],al
   14000f90a:	test   DWORD PTR [rax+0x0],0x30ff8f00
   14000f914:	repz push QWORD PTR [rax]
   14000f917:	inc    DWORD PTR [rax+0x38f787]
   14000f91d:	add    BYTE PTR [rax],al
   14000f91f:	add    BYTE PTR [rax],al
   14000f921:	or     bh,bh
   14000f923:	repz push QWORD PTR [rax]
   14000f926:	repz push rax
   14000f929:	(bad)  
   14000f92a:	div    DWORD PTR [rbx+0x8]
   14000f92d:	add    DWORD PTR [rax],0x8f000000
   14000f933:	push   QWORD PTR [rax]
   14000f935:	repz (bad) 
   14000f937:	inc    DWORD PTR [rax+0xff7ff3f]
   14000f93d:	icebp  
   14000f93e:	adc    BYTE PTR [rax],al
   14000f940:	add    BYTE PTR [rax],al
   14000f942:	or     bh,bh
   14000f944:	repz (bad) 
   14000f946:	dec    DWORD PTR [rdi+0x70f78f80]
   14000f94c:	push   rcx
   14000f94e:	adc    BYTE PTR [rax],al
   14000f950:	add    BYTE PTR [rax],cl
   14000f952:	jae    0x14000f8e3
   14000f954:	(bad)  
   14000f955:	inc    DWORD PTR [rax]
   14000f957:	pop    QWORD PTR [rax-0xf08801]
   14000f95d:	icebp  
   14000f95e:	adc    BYTE PTR [rax],al
   14000f960:	add    BYTE PTR [rax],cl
   14000f962:	jo     0x14000f964
   14000f964:	pshufw mm6,QWORD PTR [rdi],0x88
   14000f968:	maskmovq mm0,(bad)
   14000f969:	test   DWORD PTR [rax],0xf1ffff
   14000f96f:	add    BYTE PTR [rax],al
   14000f971:	or     BYTE PTR [rdi],al
   14000f973:	xor    ecx,DWORD PTR [rdi-0x8008890]
   14000f979:	jo     0x14000f903
   14000f97b:	mov    BYTE PTR [rax+0xf1],cl
   14000f981:	or     BYTE PTR [rdi-0xd],bh
   14000f984:	mov    BYTE PTR [rdi],cl
   14000f986:	push   rdi
   14000f988:	jo     0x14000f999
   14000f98a:	(bad)  
   14000f98b:	(bad)  
   14000f98c:	push   rcx
   14000f98e:	adc    BYTE PTR [rax],al
   14000f990:	add    BYTE PTR [rax],al
   14000f992:	xchg   edi,edi
   14000f994:	push   rdi
   14000f996:	ja     0x14000fa08
   14000f998:	ud0    edi,edi
   14000f99b:	(bad)  
   14000f99c:	push   rcx
   14000f99e:	adc    BYTE PTR [rax],al
   14000f9a0:	add    BYTE PTR [rax],al
   14000f9a2:	sbb    BYTE PTR [rdi+0x707777],al
   14000f9a8:	add    bh,bh
   14000f9aa:	(bad)  
   14000f9ab:	(bad)  
   14000f9ac:	push   rcx
   14000f9ae:	adc    BYTE PTR [rax],al
   14000f9b0:	add    BYTE PTR [rax],al
   14000f9b2:	(bad)  
   14000f9b3:	clc    
   14000f9b4:	mov    BYTE PTR [rax-0x77000f1],cl
   14000f9ba:	mov    BYTE PTR [rax+0xf188],cl
   14000f9c0:	add    BYTE PTR [rax],al
   14000f9c2:	(bad)  
   14000f9c3:	(bad)  
   14000f9c4:	(bad)  
   14000f9c5:	(bad)  
   14000f9c6:	push   rax
   14000f9c8:	add    bh,bh
   14000f9ca:	(bad)  
   14000f9cb:	(bad)  
   14000f9cc:	push   rcx
   14000f9ce:	add    BYTE PTR [rax],al
   14000f9d0:	add    BYTE PTR [rax],al
   14000f9d2:	(bad)  
   14000f9d3:	mov    BYTE PTR [rax-0x70007778],cl
   14000f9d9:	clc    
   14000f9da:	mov    BYTE PTR [rax+0x10f1ff],cl
   14000f9e0:	add    BYTE PTR [rax],al
   14000f9e2:	(bad)  
   14000f9e3:	(bad)  
   14000f9e4:	(bad)  
   14000f9e5:	(bad)  
   14000f9e6:	push   rax
   14000f9e8:	add    bh,bh
   14000f9ea:	(bad)  
   14000f9eb:	(bad)  
   14000f9ec:	push   rcx
   14000f9ee:	adc    BYTE PTR [rax],al
   14000f9f0:	add    BYTE PTR [rax],al
   14000f9f2:	(bad)  
   14000f9f3:	(bad)  
   14000f9f4:	(bad)  
   14000f9f5:	(bad)  
   14000f9f6:	(bad)  
   14000f9f7:	dec    DWORD PTR [rdi-0x1]
   14000f9fd:	icebp  
   14000f9fe:	adc    BYTE PTR [rax],al
   14000fa00:	add    BYTE PTR [rax],al
   14000fa02:	(bad)  
   14000fa03:	mov    BYTE PTR [rax+0xf08888],cl
   14000fa09:	clc    
   14000fa0a:	mov    BYTE PTR [rax+0xf188],cl
   14000fa10:	add    BYTE PTR [rax],al
   14000fa12:	(bad)  
   14000fa13:	(bad)  
   14000fa14:	(bad)  
   14000fa15:	(bad)  
   14000fa16:	(bad)  
   14000fa17:	dec    DWORD PTR [rdi-0x1]
   14000fa1d:	icebp  
   14000fa1e:	add    BYTE PTR [rax],al
   14000fa20:	add    BYTE PTR [rcx],al
   14000fa22:	(bad)  
   14000fa23:	mov    BYTE PTR [rax+0xf0ff88],cl
   14000fa29:	clc    
   14000fa2a:	mov    BYTE PTR [rax+0xf1ff],cl
   14000fa30:	add    BYTE PTR [rcx],al
   14000fa32:	(bad)  
   14000fa33:	(bad)  
   14000fa34:	(bad)  
   14000fa35:	(bad)  
   14000fa36:	(bad)  
   14000fa37:	dec    DWORD PTR [rdi-0x1]
   14000fa3d:	icebp  
   14000fa3e:	add    BYTE PTR [rax],al
   14000fa40:	add    BYTE PTR [rcx],al
   14000fa42:	(bad)  
   14000fa43:	ja     0x14000fabc
   14000fa45:	ja     0x14000fabe
   14000fa47:	ja     0x14000fa51
   14000fa49:	mov    BYTE PTR [rax+0x818888],cl
	...
   14000fa57:	add    BYTE PTR [rax+0x0],al
	...
   14000fa6d:	add    BYTE PTR [rax],al
   14000fa6f:	add    bh,bh
   14000fa71:	(bad)  
   14000fa72:	(bad)  
   14000fa73:	(bad)  
   14000fa74:	inc    BYTE PTR [rbx]
   14000fa76:	(bad)  
   14000fa77:	(bad)  
   14000fa78:	clc    
   14000fa79:	add    bh,bh
   14000fa7b:	jmp    rax
   14000fa7d:	add    BYTE PTR [rdi],bh
   14000fa7f:	inc    DWORD PTR [rax+0xff0f00]
   14000fa85:	add    BYTE PTR [rcx],al
   14000fa87:	inc    DWORD PTR [rax]
   14000fa89:	add    BYTE PTR [rax],al
   14000fa8b:	inc    DWORD PTR [rax]
   14000fa8d:	add    BYTE PTR [rax],al
   14000fa8f:	jg     0x14000fa91
   14000fa91:	add    BYTE PTR [rax],al
   14000fa93:	jg     0x14000fa15
   14000fa95:	add    BYTE PTR [rax],al
   14000fa97:	jg     0x14000fa59
   14000fa99:	add    BYTE PTR [rax],al
   14000fa9b:	add    eax,eax
   14000fa9d:	add    BYTE PTR [rax],al
   14000fa9f:	add    eax,eax
   14000faa1:	add    BYTE PTR [rax],al
   14000faa3:	add    eax,eax
   14000faa5:	add    BYTE PTR [rax],al
   14000faa7:	add    eax,eax
   14000faa9:	add    BYTE PTR [rax],al
   14000faab:	add    eax,eax
   14000faad:	add    BYTE PTR [rax],al
   14000faaf:	add    eax,eax
   14000fab1:	add    BYTE PTR [rax],al
   14000fab3:	add    eax,eax
   14000fab5:	add    BYTE PTR [rax],al
   14000fab7:	add    eax,eax
   14000fab9:	add    BYTE PTR [rax],al
   14000fabb:	add    eax,eax
   14000fabd:	add    BYTE PTR [rax],al
   14000fabf:	add    eax,eax
   14000fac1:	add    BYTE PTR [rax],al
   14000fac3:	add    eax,eax
   14000fac5:	add    BYTE PTR [rax],al
   14000fac7:	add    eax,eax
   14000fac9:	add    BYTE PTR [rax],al
   14000facb:	add    eax,eax
   14000facd:	add    BYTE PTR [rax],al
   14000facf:	add    eax,eax
   14000fad1:	add    BYTE PTR [rax],al
   14000fad3:	add    eax,eax
   14000fad5:	add    BYTE PTR [rax],al
   14000fad7:	add    eax,eax
   14000fad9:	add    BYTE PTR [rax],al
   14000fadb:	add    eax,eax
   14000fadd:	add    BYTE PTR [rax],al
   14000fadf:	add    eax,eax
   14000fae1:	add    BYTE PTR [rax],al
   14000fae3:	add    eax,eax
   14000fae5:	add    BYTE PTR [rax],al
   14000fae7:	add    eax,eax
   14000fae9:	add    BYTE PTR [rax],al
   14000faeb:	add    edi,edi
   14000faed:	(bad)  
   14000faee:	(bad)  
   14000faef:	inc    DWORD PTR [rax]
   14000faf1:	add    BYTE PTR [rcx],al
   14000faf3:	add    BYTE PTR [rcx],al
   14000faf5:	add    BYTE PTR [rax],ah
   14000faf7:	and    BYTE PTR [rax],dl
   14000faf9:	add    BYTE PTR [rcx],al
   14000fafb:	add    BYTE PTR [rax+rax*1],al
   14000fafe:	call   0x14100fb05
   14000fb03:	add    BYTE PTR [rax],al
   14000fb05:	add    BYTE PTR [rax],al
   14000fb07:	add    ch,cl
   14000fb09:	dec    ch
   14000fb0b:	(bad)  
   14000fb0c:	fadd   DWORD PTR [rax]
   14000fb0e:	add    BYTE PTR [rax],al
   14000fb10:	add    BYTE PTR [rax],al
   14000fb12:	add    DWORD PTR [rax],eax
   14000fb14:	add    BYTE PTR [rax],al
   14000fb16:	add    BYTE PTR [rax],al
   14000fb18:	adc    DWORD PTR [rax],eax
   14000fb1a:	add    BYTE PTR [rax],al
   14000fb1c:	add    BYTE PTR [rax],al
   14000fb1e:	add    BYTE PTR [rax],al
   14000fb20:	add    al,BYTE PTR [rax]
   14000fb22:	add    BYTE PTR [rax],al
   14000fb24:	popf   
   14000fb25:	stos   BYTE PTR es:[rdi],al
   14000fb26:	(bad)  
   14000fb27:	or     BYTE PTR [rbx],al
   14000fb29:	sub    eax,0x1b13b04a
   14000fb2e:	cmp    al,0x86
   14000fb30:	std    
   14000fb31:	outs   dx,BYTE PTR ds:[rsi]
   14000fb32:	fxch   st(6)
   14000fb34:	jmp    0x19f1c4d80
   14000fb39:	ja     0x14000fb46
   14000fb3b:	mov    edx,0x5f18722
   14000fb40:	adc    BYTE PTR [rax-0x2],0xa4
	...
   14000fb5c:	mov    BYTE PTR [rax],al
   14000fb5e:	add    BYTE PTR [rax],al
   14000fb60:	(bad)  
   14000fb61:	add    BYTE PTR [rax],al
   14000fb63:	add    BYTE PTR [rax+0x10000000],bl
   14000fb69:	add    BYTE PTR [rax],al
   14000fb6b:	add    BYTE PTR [rax+0xe000000],ch
   14000fb71:	add    BYTE PTR [rax],al
   14000fb73:	add    BYTE PTR [rax+0xc000000],bh
	...
   14000fb81:	add    BYTE PTR [rax],al
   14000fb83:	add    al,cl
   14000fb85:	add    BYTE PTR [rax],al
   14000fb87:	add    BYTE PTR [rax+rax*1],cl
   14000fb8a:	add    BYTE PTR [rax],al
   14000fb8c:	add    BYTE PTR [rax],al
   14000fb8e:	add    BYTE PTR [rax],al
   14000fb90:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000fb94:	rex.WB add BYTE PTR [r8],al
	...
   14000fb9f:	add    BYTE PTR [rbx],al
   14000fba1:	add    BYTE PTR [rax],al
   14000fba3:	add    BYTE PTR [rsi],cl
   14000fba5:	add    BYTE PTR [rax],al
   14000fba7:	add    BYTE PTR [rax],dl
   14000fba9:	add    BYTE PTR [rax],al
   14000fbab:	add    BYTE PTR [rax],bl
   14000fbad:	add    BYTE PTR [rax],al
   14000fbaf:	add    BYTE PTR [rbp+0x0],cl
   14000fbb2:	push   rbp
   14000fbb3:	add    BYTE PTR [rcx+0x0],cl
	...
   14000fbbe:	add    BYTE PTR [rax],al
   14000fbc0:	add    eax,0x6000000
   14000fbc5:	add    BYTE PTR [rax],al
   14000fbc7:	add    BYTE PTR [rax],dl
   14000fbc9:	add    BYTE PTR [rax],al
   14000fbcb:	add    BYTE PTR [rax],al
   14000fbcd:	add    BYTE PTR [rax],al
   14000fbcf:	add    BYTE PTR [rbp+0x0],ah
   14000fbd2:	outs   dx,BYTE PTR ds:[rsi]
   14000fbd3:	add    BYTE PTR [rip+0x53005500],ch        # 0x1930150d9
   14000fbd9:	add    BYTE PTR [rax],al
   14000fbdb:	add    BYTE PTR [rax],al
   14000fbdd:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140010000 <.reloc>:
   140010000:	add    BYTE PTR [rax+0x300000],al
   140010006:	add    BYTE PTR [rax],al
   140010008:	or     BYTE PTR [rbp-0x5adf5af0],ah
   14001000e:	cmp    BYTE PTR [rbp-0x5a3f5ac0],ah
   140010014:	enter  0x58a5,0xab
   140010018:	(bad)  
   140010019:	stos   DWORD PTR es:[rdi],eax
   14001001a:	push   0x78ab70ab
   14001001f:	stos   DWORD PTR es:[rdi],eax
   140010020:	sub    BYTE PTR [rbx-0x546f5478],0x98
   140010027:	stos   DWORD PTR es:[rdi],eax
   140010028:	movabs al,ds:0xabb0aba8ab
   140010031:	movabs al,ds:0xac28000000100000
   14001003a:	lods   al,BYTE PTR ds:[rsi]
   14001003c:	rex.W lods al,BYTE PTR ds:[rsi]
   14001003e:	push   rax
   14001003f:	lods   al,BYTE PTR ds:[rsi]
   140010040:	add    al,dl
   140010042:	add    BYTE PTR [rax],al
   140010044:	sbb    BYTE PTR [rax],al
   140010046:	add    BYTE PTR [rax],al
   140010048:	and    BYTE PTR [rax-0x5fbf5fd0],ah
   14001004e:	push   rax
   14001004f:	movabs al,ds:0xa080a070a060
