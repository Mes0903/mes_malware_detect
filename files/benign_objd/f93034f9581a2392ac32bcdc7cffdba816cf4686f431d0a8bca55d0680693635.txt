
f93034f9581a2392ac32bcdc7cffdba816cf4686f431d0a8bca55d0680693635.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x34b5]        # 0x4044d0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x34b6]        # 0x4044e0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x34b9]        # 0x4044f0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x347c]        # 0x4044c0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x332f]        # 0x404380
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x3451]        # 0x4044b0
  40105f:	mov    DWORD PTR [rip+0x5fa3],edx        # 0x407008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402ba0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401ba0
  401081:	mov    rdx,QWORD PTR [rip+0x3388]        # 0x404410
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x336e]        # 0x404400
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x33d4]        # 0x404470
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x330b]        # 0x4043b0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401780
  4010af:	mov    rax,QWORD PTR [rip+0x325a]        # 0x404310
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402ba0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x959]        # 0x401a80
  401127:	call   0x401a70
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x3335]        # 0x4044a0
  40116b:	lea    r8,[rip+0x5ea6]        # 0x407018
  401172:	lea    rdx,[rip+0x5ea7]        # 0x407020
  401179:	lea    rcx,[rip+0x5ea8]        # 0x407028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x5e78],eax        # 0x407000
  401188:	lea    rax,[rip+0x5e71]        # 0x407000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x32c5]        # 0x404460
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402bb8
  4011a3:	mov    DWORD PTR [rip+0x5e67],eax        # 0x407010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x32ea]        # 0x4044b0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x31eb]        # 0x4043e0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x81e2]        # 0x4093e4
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x31c7]        # 0x4043f0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x5dba],0x1        # 0x407004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x310c]        # 0x404370
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401d90
  40127d:	lea    rcx,[rip+0x10ac]        # 0x402330
  401284:	call   QWORD PTR [rip+0x8152]        # 0x4093dc
  40128a:	mov    rdx,QWORD PTR [rip+0x313f]        # 0x4043d0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402240
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402be0
  4012a5:	call   0x401b80
  4012aa:	mov    rax,QWORD PTR [rip+0x30cf]        # 0x404380
  4012b1:	mov    QWORD PTR [rip+0x6750],rax        # 0x407a08
  4012b8:	mov    rax,QWORD PTR [rip+0x30e1]        # 0x4043a0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x66e9],rax        # 0x407a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1cca],eax        # 0x403000
  401336:	mov    r12d,DWORD PTR [rip+0x5ceb]        # 0x407028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402b30
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x5cc2]        # 0x407020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402b10
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402b30
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402b20
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x5c6a],rbp        # 0x407020
  4013b6:	call   0x401750
  4013bb:	mov    rax,QWORD PTR [rip+0x2fce]        # 0x404390
  4013c2:	mov    rdx,QWORD PTR [rip+0x5c4f]        # 0x407018
  4013c9:	mov    ecx,DWORD PTR [rip+0x5c59]        # 0x407028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x5c3c]        # 0x407018
  4013dc:	mov    rdx,QWORD PTR [rip+0x5c3d]        # 0x407020
  4013e3:	call   0x402d30
  4013e8:	mov    ecx,DWORD PTR [rip+0x5c1a]        # 0x407008
  4013ee:	mov    DWORD PTR [rip+0x5c18],eax        # 0x40700c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x5c02]        # 0x407004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402b88
  40140b:	mov    eax,DWORD PTR [rip+0x5bfb]        # 0x40700c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x2fb9]        # 0x4043f0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402b90
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2fcd]        # 0x404430
  401463:	mov    rcx,QWORD PTR [rip+0x2fb6]        # 0x404420
  40146a:	call   0x402b80
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7ef3]        # 0x40938c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x2fa9]        # 0x404450
  4014a7:	mov    rcx,QWORD PTR [rip+0x2f92]        # 0x404440
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402b80
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402b50
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x2fd5]        # 0x4044b0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401790
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x2fa5]        # 0x4044b0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401790
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	lea    rcx,[rip+0x5af9]        # 0x407030
  401537:	jmp    0x4015c0
  40153c:	nop
  40153d:	nop
  40153e:	nop
  40153f:	nop
  401540:	push   rbx
  401541:	sub    rsp,0x30
  401545:	lea    rdx,[rip+0x2b14]        # 0x404060
  40154c:	lea    r8,[rsp+0x2f]
  401551:	mov    rbx,rcx
  401554:	call   0x4015d0
  401559:	mov    rax,rbx
  40155c:	add    rsp,0x30
  401560:	pop    rbx
  401561:	ret    
  401562:	nop
  401563:	nop
  401564:	nop
  401565:	nop
  401566:	nop
  401567:	nop
  401568:	nop
  401569:	nop
  40156a:	nop
  40156b:	nop
  40156c:	nop
  40156d:	nop
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x7fae]        # 0x409524
  401576:	nop
  401577:	nop
  401578:	jmp    QWORD PTR [rip+0x7f9e]        # 0x40951c
  40157e:	nop
  40157f:	nop
  401580:	jmp    QWORD PTR [rip+0x7f8e]        # 0x409514
  401586:	nop
  401587:	nop
  401588:	jmp    QWORD PTR [rip+0x7f7e]        # 0x40950c
  40158e:	nop
  40158f:	nop
  401590:	jmp    QWORD PTR [rip+0x7d56]        # 0x4092ec
  401596:	nop
  401597:	nop
  401598:	jmp    QWORD PTR [rip+0x7d46]        # 0x4092e4
  40159e:	nop
  40159f:	nop
  4015a0:	jmp    QWORD PTR [rip+0x7da6]        # 0x40934c
  4015a6:	nop
  4015a7:	nop
  4015a8:	jmp    QWORD PTR [rip+0x7d96]        # 0x409344
  4015ae:	nop
  4015af:	nop
  4015b0:	jmp    QWORD PTR [rip+0x7d86]        # 0x40933c
  4015b6:	nop
  4015b7:	nop
  4015b8:	jmp    QWORD PTR [rip+0x7d6e]        # 0x40932c
  4015be:	nop
  4015bf:	nop
  4015c0:	jmp    QWORD PTR [rip+0x7d5e]        # 0x409324
  4015c6:	nop
  4015c7:	nop
  4015c8:	jmp    QWORD PTR [rip+0x7d4e]        # 0x40931c
  4015ce:	nop
  4015cf:	nop
  4015d0:	jmp    QWORD PTR [rip+0x7d3e]        # 0x409314
  4015d6:	nop
  4015d7:	nop
  4015d8:	jmp    QWORD PTR [rip+0x7d2e]        # 0x40930c
  4015de:	nop
  4015df:	nop
  4015e0:	push   rbx
  4015e1:	sub    rsp,0x30
  4015e5:	mov    rbx,rcx
  4015e8:	mov    rcx,QWORD PTR [rip+0x6421]        # 0x407a10
  4015ef:	call   0x401b90
  4015f4:	cmp    rax,0xffffffffffffffff
  4015f8:	mov    QWORD PTR [rsp+0x20],rax
  4015fd:	je     0x401675
  4015ff:	mov    ecx,0x8
  401604:	call   0x402b78
  401609:	mov    rcx,QWORD PTR [rip+0x6400]        # 0x407a10
  401610:	call   0x401b90
  401615:	mov    rcx,QWORD PTR [rip+0x63fc]        # 0x407a18
  40161c:	mov    QWORD PTR [rsp+0x20],rax
  401621:	call   0x401b90
  401626:	lea    rdx,[rsp+0x20]
  40162b:	lea    r8,[rsp+0x28]
  401630:	mov    rcx,rbx
  401633:	mov    QWORD PTR [rsp+0x28],rax
  401638:	call   0x402bc0
  40163d:	mov    rcx,QWORD PTR [rsp+0x20]
  401642:	mov    rbx,rax
  401645:	call   0x401ba0
  40164a:	mov    rcx,QWORD PTR [rsp+0x28]
  40164f:	mov    QWORD PTR [rip+0x63ba],rax        # 0x407a10
  401656:	call   0x401ba0
  40165b:	mov    ecx,0x8
  401660:	mov    QWORD PTR [rip+0x63b1],rax        # 0x407a18
  401667:	call   0x402b68
  40166c:	mov    rax,rbx
  40166f:	add    rsp,0x30
  401673:	pop    rbx
  401674:	ret    
  401675:	mov    rax,QWORD PTR [rip+0x2d44]        # 0x4043c0
  40167c:	mov    rcx,rbx
  40167f:	call   QWORD PTR [rax]
  401681:	add    rsp,0x30
  401685:	pop    rbx
  401686:	ret    
  401687:	nop    WORD PTR [rax+rax*1+0x0]
  401690:	sub    rsp,0x28
  401694:	call   0x4015e0
  401699:	test   rax,rax
  40169c:	sete   al
  40169f:	movzx  eax,al
  4016a2:	neg    eax
  4016a4:	add    rsp,0x28
  4016a8:	ret    
  4016a9:	nop
  4016aa:	nop
  4016ab:	nop
  4016ac:	nop
  4016ad:	nop
  4016ae:	nop
  4016af:	nop
  4016b0:	sub    rsp,0x28
  4016b4:	mov    rax,QWORD PTR [rip+0x1965]        # 0x403020
  4016bb:	mov    rax,QWORD PTR [rax]
  4016be:	test   rax,rax
  4016c1:	je     0x4016e0
  4016c3:	call   rax
  4016c5:	mov    rax,QWORD PTR [rip+0x1954]        # 0x403020
  4016cc:	lea    rdx,[rax+0x8]
  4016d0:	mov    rax,QWORD PTR [rax+0x8]
  4016d4:	mov    QWORD PTR [rip+0x1945],rdx        # 0x403020
  4016db:	test   rax,rax
  4016de:	jne    0x4016c3
  4016e0:	add    rsp,0x28
  4016e4:	ret    
  4016e5:	nop
  4016e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016f0:	push   rsi
  4016f1:	push   rbx
  4016f2:	sub    rsp,0x28
  4016f6:	mov    rsi,QWORD PTR [rip+0x2c43]        # 0x404340
  4016fd:	mov    rax,QWORD PTR [rsi]
  401700:	cmp    eax,0xffffffff
  401703:	mov    ebx,eax
  401705:	je     0x401730
  401707:	test   ebx,ebx
  401709:	je     0x40171a
  40170b:	nop    DWORD PTR [rax+rax*1+0x0]
  401710:	mov    eax,ebx
  401712:	call   QWORD PTR [rsi+rax*8]
  401715:	sub    ebx,0x1
  401718:	jne    0x401710
  40171a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4016b0
  401721:	add    rsp,0x28
  401725:	pop    rbx
  401726:	pop    rsi
  401727:	jmp    0x401690
  40172c:	nop    DWORD PTR [rax+0x0]
  401730:	xor    ebx,ebx
  401732:	jmp    0x401736
  401734:	mov    ebx,eax
  401736:	lea    edx,[rbx+0x1]
  401739:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40173e:	mov    rax,rdx
  401741:	jne    0x401734
  401743:	jmp    0x401707
  401745:	nop
  401746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401750:	mov    eax,DWORD PTR [rip+0x58ea]        # 0x407040
  401756:	test   eax,eax
  401758:	je     0x401760
  40175a:	repz ret 
  40175c:	nop    DWORD PTR [rax+0x0]
  401760:	mov    DWORD PTR [rip+0x58d6],0x1        # 0x407040
  40176a:	jmp    0x4016f0
  40176c:	nop
  40176d:	nop
  40176e:	nop
  40176f:	nop
  401770:	mov    rax,QWORD PTR [rip+0x7ccd]        # 0x409444
  401777:	rex.W jmp rax
  40177a:	nop
  40177b:	nop
  40177c:	nop
  40177d:	nop
  40177e:	nop
  40177f:	nop
  401780:	xor    eax,eax
  401782:	ret    
  401783:	nop
  401784:	nop
  401785:	nop
  401786:	nop
  401787:	nop
  401788:	nop
  401789:	nop
  40178a:	nop
  40178b:	nop
  40178c:	nop
  40178d:	nop
  40178e:	nop
  40178f:	nop
  401790:	push   r12
  401792:	push   rbp
  401793:	push   rdi
  401794:	push   rsi
  401795:	push   rbx
  401796:	sub    rsp,0x40
  40179a:	mov    rbx,QWORD PTR [rip+0x18df]        # 0x403080
  4017a1:	movabs rax,0x2b992ddfa232
  4017ab:	mov    QWORD PTR [rsp+0x20],0x0
  4017b4:	cmp    rbx,rax
  4017b7:	je     0x4017d0
  4017b9:	not    rbx
  4017bc:	mov    QWORD PTR [rip+0x18cd],rbx        # 0x403090
  4017c3:	add    rsp,0x40
  4017c7:	pop    rbx
  4017c8:	pop    rsi
  4017c9:	pop    rdi
  4017ca:	pop    rbp
  4017cb:	pop    r12
  4017cd:	ret    
  4017ce:	xchg   ax,ax
  4017d0:	lea    rcx,[rsp+0x20]
  4017d5:	call   QWORD PTR [rip+0x7bb9]        # 0x409394
  4017db:	mov    r12,QWORD PTR [rsp+0x20]
  4017e0:	call   QWORD PTR [rip+0x7b8e]        # 0x409374
  4017e6:	mov    ebp,eax
  4017e8:	call   QWORD PTR [rip+0x7b8e]        # 0x40937c
  4017ee:	mov    edi,eax
  4017f0:	call   QWORD PTR [rip+0x7ba6]        # 0x40939c
  4017f6:	lea    rcx,[rsp+0x30]
  4017fb:	mov    esi,eax
  4017fd:	call   QWORD PTR [rip+0x7bb1]        # 0x4093b4
  401803:	xor    r12,QWORD PTR [rsp+0x30]
  401808:	mov    edx,edi
  40180a:	movabs rax,0xffffffffffff
  401814:	xor    rbp,r12
  401817:	mov    rdi,rbp
  40181a:	xor    rdi,rdx
  40181d:	mov    edx,esi
  40181f:	xor    rdi,rdx
  401822:	mov    rsi,rdi
  401825:	and    rsi,rax
  401828:	cmp    rsi,rbx
  40182b:	je     0x401850
  40182d:	mov    rax,rsi
  401830:	not    rax
  401833:	mov    QWORD PTR [rip+0x1846],rsi        # 0x403080
  40183a:	mov    QWORD PTR [rip+0x184f],rax        # 0x403090
  401841:	add    rsp,0x40
  401845:	pop    rbx
  401846:	pop    rsi
  401847:	pop    rdi
  401848:	pop    rbp
  401849:	pop    r12
  40184b:	ret    
  40184c:	nop    DWORD PTR [rax+0x0]
  401850:	movabs rax,0xffffd466d2205dcc
  40185a:	movabs rsi,0x2b992ddfa233
  401864:	jmp    0x401833
  401866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401870:	push   rbp
  401871:	push   rsi
  401872:	push   rbx
  401873:	mov    rbp,rsp
  401876:	sub    rsp,0x70
  40187a:	mov    rsi,rcx
  40187d:	lea    rcx,[rip+0x57fc]        # 0x407080
  401884:	call   QWORD PTR [rip+0x7b3a]        # 0x4093c4
  40188a:	mov    rbx,QWORD PTR [rip+0x58e7]        # 0x407178
  401891:	xor    r8d,r8d
  401894:	lea    rdx,[rbp-0x28]
  401898:	mov    rcx,rbx
  40189b:	call   QWORD PTR [rip+0x7b2b]        # 0x4093cc
  4018a1:	test   rax,rax
  4018a4:	mov    r9,rax
  4018a7:	je     0x401950
  4018ad:	lea    rax,[rbp-0x20]
  4018b1:	mov    QWORD PTR [rsp+0x38],0x0
  4018ba:	mov    r8,rbx
  4018bd:	mov    rdx,QWORD PTR [rbp-0x28]
  4018c1:	xor    ecx,ecx
  4018c3:	mov    QWORD PTR [rsp+0x30],rax
  4018c8:	lea    rax,[rbp-0x18]
  4018cc:	mov    QWORD PTR [rsp+0x28],rax
  4018d1:	lea    rax,[rip+0x57a8]        # 0x407080
  4018d8:	mov    QWORD PTR [rsp+0x20],rax
  4018dd:	call   QWORD PTR [rip+0x7af1]        # 0x4093d4
  4018e3:	mov    rax,QWORD PTR [rip+0x588e]        # 0x407178
  4018ea:	xor    ecx,ecx
  4018ec:	mov    QWORD PTR [rip+0x580d],rsi        # 0x407100
  4018f3:	mov    DWORD PTR [rip+0x5c83],0xc0000409        # 0x407580
  4018fd:	mov    DWORD PTR [rip+0x5c7d],0x1        # 0x407584
  401907:	mov    QWORD PTR [rip+0x5c82],rax        # 0x407590
  40190e:	mov    rax,QWORD PTR [rip+0x176b]        # 0x403080
  401915:	mov    QWORD PTR [rbp-0x10],rax
  401919:	mov    rax,QWORD PTR [rip+0x1770]        # 0x403090
  401920:	mov    QWORD PTR [rbp-0x8],rax
  401924:	call   QWORD PTR [rip+0x7ab2]        # 0x4093dc
  40192a:	lea    rcx,[rip+0x273f]        # 0x404070
  401931:	call   QWORD PTR [rip+0x7ac5]        # 0x4093fc
  401937:	call   QWORD PTR [rip+0x7a2f]        # 0x40936c
  40193d:	mov    edx,0xc0000409
  401942:	mov    rcx,rax
  401945:	call   QWORD PTR [rip+0x7aa1]        # 0x4093ec
  40194b:	call   0x402b60
  401950:	mov    rax,QWORD PTR [rbp+0x18]
  401954:	mov    QWORD PTR [rip+0x581d],rax        # 0x407178
  40195b:	lea    rax,[rbp+0x8]
  40195f:	mov    QWORD PTR [rip+0x57b2],rax        # 0x407118
  401966:	jmp    0x4018e3
  40196b:	nop
  40196c:	nop
  40196d:	nop
  40196e:	nop
  40196f:	nop
  401970:	sub    rsp,0x28
  401974:	test   edx,edx
  401976:	je     0x401990
  401978:	cmp    edx,0x3
  40197b:	je     0x401990
  40197d:	mov    eax,0x1
  401982:	add    rsp,0x28
  401986:	ret    
  401987:	nop    WORD PTR [rax+rax*1+0x0]
  401990:	call   0x402680
  401995:	mov    eax,0x1
  40199a:	add    rsp,0x28
  40199e:	ret    
  40199f:	nop
  4019a0:	push   rsi
  4019a1:	push   rbx
  4019a2:	sub    rsp,0x28
  4019a6:	mov    rax,QWORD PTR [rip+0x2953]        # 0x404300
  4019ad:	cmp    DWORD PTR [rax],0x2
  4019b0:	je     0x4019b8
  4019b2:	mov    DWORD PTR [rax],0x2
  4019b8:	cmp    edx,0x2
  4019bb:	je     0x4019d0
  4019bd:	cmp    edx,0x1
  4019c0:	je     0x401a02
  4019c2:	mov    eax,0x1
  4019c7:	add    rsp,0x28
  4019cb:	pop    rbx
  4019cc:	pop    rsi
  4019cd:	ret    
  4019ce:	xchg   ax,ax
  4019d0:	lea    rbx,[rip+0x8689]        # 0x40a060
  4019d7:	lea    rsi,[rip+0x8682]        # 0x40a060
  4019de:	cmp    rbx,rsi
  4019e1:	je     0x4019c2
  4019e3:	mov    rax,QWORD PTR [rbx]
  4019e6:	test   rax,rax
  4019e9:	je     0x4019ed
  4019eb:	call   rax
  4019ed:	add    rbx,0x8
  4019f1:	cmp    rbx,rsi
  4019f4:	jne    0x4019e3
  4019f6:	mov    eax,0x1
  4019fb:	add    rsp,0x28
  4019ff:	pop    rbx
  401a00:	pop    rsi
  401a01:	ret    
  401a02:	call   0x402680
  401a07:	jmp    0x4019c2
  401a09:	nop    DWORD PTR [rax+0x0]
  401a10:	xor    eax,eax
  401a12:	ret    
  401a13:	nop
  401a14:	nop
  401a15:	nop
  401a16:	nop
  401a17:	nop
  401a18:	nop
  401a19:	nop
  401a1a:	nop
  401a1b:	nop
  401a1c:	nop
  401a1d:	nop
  401a1e:	nop
  401a1f:	nop
  401a20:	sub    rsp,0x58
  401a24:	mov    rax,QWORD PTR [rip+0x5c35]        # 0x407660
  401a2b:	test   rax,rax
  401a2e:	je     0x401a5c
  401a30:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401a39:	mov    DWORD PTR [rsp+0x20],ecx
  401a3d:	lea    rcx,[rsp+0x20]
  401a42:	mov    QWORD PTR [rsp+0x28],rdx
  401a47:	movsd  QWORD PTR [rsp+0x30],xmm2
  401a4d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401a53:	movsd  QWORD PTR [rsp+0x40],xmm0
  401a59:	call   rax
  401a5b:	nop
  401a5c:	add    rsp,0x58
  401a60:	ret    
  401a61:	nop    DWORD PTR [rax+rax*1+0x0]
  401a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a70:	mov    QWORD PTR [rip+0x5be9],rcx        # 0x407660
  401a77:	jmp    0x402b98
  401a7c:	nop    DWORD PTR [rax+0x0]
  401a80:	push   rsi
  401a81:	push   rbx
  401a82:	sub    rsp,0x78
  401a86:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a8b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401a90:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401a96:	cmp    DWORD PTR [rcx],0x6
  401a99:	ja     0x401b70
  401a9f:	mov    edx,DWORD PTR [rcx]
  401aa1:	lea    rax,[rip+0x270c]        # 0x4041b4
  401aa8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401aac:	add    rax,rdx
  401aaf:	jmp    rax
  401ab1:	lea    rbx,[rip+0x25d8]        # 0x404090
  401ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ac0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401ac6:	mov    rsi,QWORD PTR [rcx+0x8]
  401aca:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401acf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401ad4:	call   0x402bb0
  401ad9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401ae0:	lea    rcx,[rax+0x60]
  401ae4:	lea    rdx,[rip+0x269d]        # 0x404188
  401aeb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401af1:	mov    r9,rsi
  401af4:	mov    r8,rbx
  401af7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401afd:	call   0x402b48
  401b02:	nop
  401b03:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401b08:	xor    eax,eax
  401b0a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401b0f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401b15:	add    rsp,0x78
  401b19:	pop    rbx
  401b1a:	pop    rsi
  401b1b:	ret    
  401b1c:	nop    DWORD PTR [rax+0x0]
  401b20:	lea    rbx,[rip+0x2588]        # 0x4040af
  401b27:	jmp    0x401ac0
  401b29:	nop    DWORD PTR [rax+0x0]
  401b30:	lea    rbx,[rip+0x2599]        # 0x4040d0
  401b37:	jmp    0x401ac0
  401b39:	nop    DWORD PTR [rax+0x0]
  401b40:	lea    rbx,[rip+0x25f9]        # 0x404140
  401b47:	jmp    0x401ac0
  401b4c:	nop    DWORD PTR [rax+0x0]
  401b50:	lea    rbx,[rip+0x25c1]        # 0x404118
  401b57:	jmp    0x401ac0
  401b5c:	nop    DWORD PTR [rax+0x0]
  401b60:	lea    rbx,[rip+0x2589]        # 0x4040f0
  401b67:	jmp    0x401ac0
  401b6c:	nop    DWORD PTR [rax+0x0]
  401b70:	lea    rbx,[rip+0x25ff]        # 0x404176
  401b77:	jmp    0x401ac0
  401b7c:	nop
  401b7d:	nop
  401b7e:	nop
  401b7f:	nop
  401b80:	fninit 
  401b82:	ret    
  401b83:	nop
  401b84:	nop
  401b85:	nop
  401b86:	nop
  401b87:	nop
  401b88:	nop
  401b89:	nop
  401b8a:	nop
  401b8b:	nop
  401b8c:	nop
  401b8d:	nop
  401b8e:	nop
  401b8f:	nop
  401b90:	mov    rax,rcx
  401b93:	ret    
  401b94:	xchg   ax,ax
  401b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ba0:	mov    rax,rcx
  401ba3:	ret    
  401ba4:	nop
  401ba5:	nop
  401ba6:	nop
  401ba7:	nop
  401ba8:	nop
  401ba9:	nop
  401baa:	nop
  401bab:	nop
  401bac:	nop
  401bad:	nop
  401bae:	nop
  401baf:	nop
  401bb0:	push   rsi
  401bb1:	push   rbx
  401bb2:	sub    rsp,0x38
  401bb6:	lea    rax,[rsp+0x58]
  401bbb:	mov    rbx,rcx
  401bbe:	mov    QWORD PTR [rsp+0x58],rdx
  401bc3:	mov    QWORD PTR [rsp+0x60],r8
  401bc8:	mov    QWORD PTR [rsp+0x68],r9
  401bcd:	mov    QWORD PTR [rsp+0x28],rax
  401bd2:	call   0x402bb0
  401bd7:	lea    rcx,[rip+0x25f2]        # 0x4041d0
  401bde:	lea    r9,[rax+0x60]
  401be2:	mov    r8d,0x1b
  401be8:	mov    edx,0x1
  401bed:	call   0x402b38
  401bf2:	mov    rsi,QWORD PTR [rsp+0x28]
  401bf7:	call   0x402bb0
  401bfc:	lea    rcx,[rax+0x60]
  401c00:	mov    rdx,rbx
  401c03:	mov    r8,rsi
  401c06:	call   0x402b00
  401c0b:	call   0x402b60
  401c10:	nop
  401c11:	nop    DWORD PTR [rax+rax*1+0x0]
  401c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c20:	push   r13
  401c22:	push   r12
  401c24:	push   rbp
  401c25:	push   rdi
  401c26:	push   rsi
  401c27:	push   rbx
  401c28:	sub    rsp,0x58
  401c2c:	movsxd rbp,DWORD PTR [rip+0x5a51]        # 0x407684
  401c33:	mov    rbx,rcx
  401c36:	mov    rsi,rdx
  401c39:	mov    rdi,r8
  401c3c:	test   ebp,ebp
  401c3e:	jle    0x401d3a
  401c44:	mov    rax,QWORD PTR [rip+0x5a3d]        # 0x407688
  401c4b:	xor    r9d,r9d
  401c4e:	add    rax,0x8
  401c52:	mov    r10,QWORD PTR [rax]
  401c55:	cmp    rbx,r10
  401c58:	jb     0x401c6e
  401c5a:	mov    rdx,QWORD PTR [rax+0x8]
  401c5e:	mov    r11d,DWORD PTR [rdx+0x8]
  401c62:	add    r10,r11
  401c65:	cmp    rbx,r10
  401c68:	jb     0x401d20
  401c6e:	add    r9d,0x1
  401c72:	add    rax,0x18
  401c76:	cmp    r9d,ebp
  401c79:	jne    0x401c52
  401c7b:	mov    rcx,rbx
  401c7e:	call   0x402890
  401c83:	test   rax,rax
  401c86:	mov    r12,rax
  401c89:	je     0x401d72
  401c8f:	lea    rbp,[rbp+rbp*2+0x0]
  401c94:	shl    rbp,0x3
  401c98:	mov    r13,rbp
  401c9b:	add    r13,QWORD PTR [rip+0x59e6]        # 0x407688
  401ca2:	mov    QWORD PTR [r13+0x10],rax
  401ca6:	mov    DWORD PTR [r13+0x0],0x0
  401cae:	call   0x4029b0
  401cb3:	mov    edx,DWORD PTR [r12+0xc]
  401cb8:	mov    r8d,0x30
  401cbe:	add    rax,rdx
  401cc1:	lea    rdx,[rsp+0x20]
  401cc6:	mov    QWORD PTR [r13+0x8],rax
  401cca:	mov    rax,QWORD PTR [rip+0x59b7]        # 0x407688
  401cd1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401cd6:	call   QWORD PTR [rip+0x7730]        # 0x40940c
  401cdc:	test   rax,rax
  401cdf:	je     0x401d55
  401ce1:	mov    eax,DWORD PTR [rsp+0x44]
  401ce5:	lea    edx,[rax-0x4]
  401ce8:	and    edx,0xfffffffb
  401ceb:	je     0x401d19
  401ced:	sub    eax,0x40
  401cf0:	and    eax,0xffffffbf
  401cf3:	je     0x401d19
  401cf5:	mov    r9,rbp
  401cf8:	add    r9,QWORD PTR [rip+0x5989]        # 0x407688
  401cff:	mov    r8d,0x40
  401d05:	mov    rdx,QWORD PTR [rsp+0x38]
  401d0a:	mov    rcx,QWORD PTR [rsp+0x20]
  401d0f:	call   QWORD PTR [rip+0x76ef]        # 0x409404
  401d15:	test   eax,eax
  401d17:	je     0x401d41
  401d19:	add    DWORD PTR [rip+0x5964],0x1        # 0x407684
  401d20:	mov    r8,rdi
  401d23:	mov    rdx,rsi
  401d26:	mov    rcx,rbx
  401d29:	add    rsp,0x58
  401d2d:	pop    rbx
  401d2e:	pop    rsi
  401d2f:	pop    rdi
  401d30:	pop    rbp
  401d31:	pop    r12
  401d33:	pop    r13
  401d35:	jmp    0x402b20
  401d3a:	xor    ebp,ebp
  401d3c:	jmp    0x401c7b
  401d41:	call   QWORD PTR [rip+0x763d]        # 0x409384
  401d47:	lea    rcx,[rip+0x24fa]        # 0x404248
  401d4e:	mov    edx,eax
  401d50:	call   0x401bb0
  401d55:	mov    rax,QWORD PTR [rip+0x592c]        # 0x407688
  401d5c:	mov    edx,DWORD PTR [r12+0x8]
  401d61:	lea    rcx,[rip+0x24a8]        # 0x404210
  401d68:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d6d:	call   0x401bb0
  401d72:	lea    rcx,[rip+0x2477]        # 0x4041f0
  401d79:	mov    rdx,rbx
  401d7c:	call   0x401bb0
  401d81:	nop
  401d82:	nop    DWORD PTR [rax+0x0]
  401d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d90:	push   rbp
  401d91:	push   r14
  401d93:	push   r13
  401d95:	push   r12
  401d97:	push   rdi
  401d98:	push   rsi
  401d99:	push   rbx
  401d9a:	mov    rbp,rsp
  401d9d:	sub    rsp,0x60
  401da1:	mov    ebx,DWORD PTR [rip+0x58d9]        # 0x407680
  401da7:	test   ebx,ebx
  401da9:	je     0x401dc0
  401dab:	mov    rsp,rbp
  401dae:	pop    rbx
  401daf:	pop    rsi
  401db0:	pop    rdi
  401db1:	pop    r12
  401db3:	pop    r13
  401db5:	pop    r14
  401db7:	pop    rbp
  401db8:	ret    
  401db9:	nop    DWORD PTR [rax+0x0]
  401dc0:	mov    DWORD PTR [rip+0x58b6],0x1        # 0x407680
  401dca:	call   0x4028e0
  401dcf:	cdqe   
  401dd1:	lea    rax,[rax+rax*2]
  401dd5:	lea    rax,[rax*8+0x1e]
  401ddd:	and    rax,0xfffffffffffffff0
  401de1:	call   0x402cc0
  401de6:	mov    rsi,QWORD PTR [rip+0x2563]        # 0x404350
  401ded:	mov    rbx,QWORD PTR [rip+0x256c]        # 0x404360
  401df4:	sub    rsp,rax
  401df7:	mov    DWORD PTR [rip+0x5883],0x0        # 0x407684
  401e01:	lea    rax,[rsp+0x20]
  401e06:	mov    QWORD PTR [rip+0x587b],rax        # 0x407688
  401e0d:	mov    rax,rsi
  401e10:	sub    rax,rbx
  401e13:	cmp    rax,0x7
  401e17:	jle    0x401dab
  401e19:	cmp    rax,0xb
  401e1d:	jle    0x401e45
  401e1f:	mov    r11d,DWORD PTR [rbx]
  401e22:	test   r11d,r11d
  401e25:	jne    0x401f70
  401e2b:	mov    r10d,DWORD PTR [rbx+0x4]
  401e2f:	test   r10d,r10d
  401e32:	jne    0x401f70
  401e38:	mov    r9d,DWORD PTR [rbx+0x8]
  401e3c:	test   r9d,r9d
  401e3f:	jne    0x401e5c
  401e41:	add    rbx,0xc
  401e45:	mov    r8d,DWORD PTR [rbx]
  401e48:	test   r8d,r8d
  401e4b:	jne    0x401f70
  401e51:	mov    ecx,DWORD PTR [rbx+0x4]
  401e54:	test   ecx,ecx
  401e56:	jne    0x401f70
  401e5c:	mov    edx,DWORD PTR [rbx+0x8]
  401e5f:	cmp    edx,0x1
  401e62:	jne    0x40207c
  401e68:	add    rbx,0xc
  401e6c:	cmp    rbx,rsi
  401e6f:	jae    0x401dab
  401e75:	mov    r12,QWORD PTR [rip+0x2504]        # 0x404380
  401e7c:	lea    r13,[rbp-0x30]
  401e80:	movabs r14,0xffffffff00000000
  401e8a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e8d:	mov    eax,DWORD PTR [rbx]
  401e8f:	movzx  edx,BYTE PTR [rbx+0x8]
  401e93:	add    rax,r12
  401e96:	add    rcx,r12
  401e99:	cmp    edx,0x10
  401e9c:	mov    r8,QWORD PTR [rax]
  401e9f:	je     0x401fe6
  401ea5:	jbe    0x401fad
  401eab:	cmp    edx,0x20
  401eae:	je     0x40202f
  401eb4:	cmp    edx,0x40
  401eb7:	jne    0x40201b
  401ebd:	sub    r8,rax
  401ec0:	mov    rdx,r13
  401ec3:	mov    rdi,r13
  401ec6:	mov    rax,r8
  401ec9:	add    rax,QWORD PTR [rcx]
  401ecc:	mov    r8d,0x8
  401ed2:	mov    QWORD PTR [rbp-0x30],rax
  401ed6:	call   0x401c20
  401edb:	add    rbx,0xc
  401edf:	cmp    rbx,rsi
  401ee2:	jb     0x401e8a
  401ee4:	mov    eax,DWORD PTR [rip+0x579a]        # 0x407684
  401eea:	xor    ebx,ebx
  401eec:	xor    esi,esi
  401eee:	test   eax,eax
  401ef0:	jle    0x401dab
  401ef6:	mov    r14,QWORD PTR [rip+0x750f]        # 0x40940c
  401efd:	lea    r13,[rbp-0x34]
  401f01:	mov    r12,QWORD PTR [rip+0x74fc]        # 0x409404
  401f08:	jmp    0x401f23
  401f0a:	nop    WORD PTR [rax+rax*1+0x0]
  401f10:	add    esi,0x1
  401f13:	add    rbx,0x18
  401f17:	cmp    esi,DWORD PTR [rip+0x5767]        # 0x407684
  401f1d:	jge    0x401dab
  401f23:	mov    rax,rbx
  401f26:	add    rax,QWORD PTR [rip+0x575b]        # 0x407688
  401f2d:	mov    edx,DWORD PTR [rax]
  401f2f:	test   edx,edx
  401f31:	je     0x401f10
  401f33:	mov    rcx,QWORD PTR [rax+0x8]
  401f37:	mov    r8d,0x30
  401f3d:	mov    rdx,rdi
  401f40:	call   r14
  401f43:	test   rax,rax
  401f46:	je     0x40205e
  401f4c:	mov    rax,QWORD PTR [rip+0x5735]        # 0x407688
  401f53:	mov    r9,r13
  401f56:	mov    rdx,QWORD PTR [rbp-0x18]
  401f5a:	mov    rcx,QWORD PTR [rbp-0x30]
  401f5e:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f62:	call   r12
  401f65:	jmp    0x401f10
  401f67:	nop    WORD PTR [rax+rax*1+0x0]
  401f70:	cmp    rbx,rsi
  401f73:	jae    0x401dab
  401f79:	mov    r12,QWORD PTR [rip+0x2400]        # 0x404380
  401f80:	lea    rdi,[rbp-0x30]
  401f84:	mov    ecx,DWORD PTR [rbx+0x4]
  401f87:	mov    eax,DWORD PTR [rbx]
  401f89:	mov    r8d,0x4
  401f8f:	mov    rdx,rdi
  401f92:	add    rbx,0x8
  401f96:	add    rcx,r12
  401f99:	add    eax,DWORD PTR [rcx]
  401f9b:	mov    DWORD PTR [rbp-0x30],eax
  401f9e:	call   0x401c20
  401fa3:	cmp    rbx,rsi
  401fa6:	jb     0x401f84
  401fa8:	jmp    0x401ee4
  401fad:	cmp    edx,0x8
  401fb0:	jne    0x40201b
  401fb2:	movzx  edx,BYTE PTR [rcx]
  401fb5:	mov    rdi,r13
  401fb8:	mov    r10,rdx
  401fbb:	or     r10,0xffffffffffffff00
  401fc2:	test   dl,dl
  401fc4:	cmovs  rdx,r10
  401fc8:	sub    rdx,rax
  401fcb:	lea    rax,[r8+rdx*1]
  401fcf:	mov    r8d,0x1
  401fd5:	mov    rdx,r13
  401fd8:	mov    QWORD PTR [rbp-0x30],rax
  401fdc:	call   0x401c20
  401fe1:	jmp    0x401edb
  401fe6:	movzx  edx,WORD PTR [rcx]
  401fe9:	mov    rdi,r13
  401fec:	mov    r10,rdx
  401fef:	or     r10,0xffffffffffff0000
  401ff6:	test   dx,dx
  401ff9:	cmovs  rdx,r10
  401ffd:	sub    rdx,rax
  402000:	lea    rax,[r8+rdx*1]
  402004:	mov    r8d,0x2
  40200a:	mov    rdx,r13
  40200d:	mov    QWORD PTR [rbp-0x30],rax
  402011:	call   0x401c20
  402016:	jmp    0x401edb
  40201b:	lea    rcx,[rip+0x2286]        # 0x4042a8
  402022:	mov    QWORD PTR [rbp-0x30],0x0
  40202a:	call   0x401bb0
  40202f:	mov    edx,DWORD PTR [rcx]
  402031:	mov    rdi,r13
  402034:	mov    r10,rdx
  402037:	or     r10,r14
  40203a:	test   edx,edx
  40203c:	cmovs  rdx,r10
  402040:	sub    rdx,rax
  402043:	lea    rax,[r8+rdx*1]
  402047:	mov    r8d,0x4
  40204d:	mov    rdx,r13
  402050:	mov    QWORD PTR [rbp-0x30],rax
  402054:	call   0x401c20
  402059:	jmp    0x401edb
  40205e:	add    rbx,QWORD PTR [rip+0x5623]        # 0x407688
  402065:	lea    rcx,[rip+0x21a4]        # 0x404210
  40206c:	mov    rax,QWORD PTR [rbx+0x10]
  402070:	mov    r8,QWORD PTR [rbx+0x8]
  402074:	mov    edx,DWORD PTR [rax+0x8]
  402077:	call   0x401bb0
  40207c:	lea    rcx,[rip+0x21ed]        # 0x404270
  402083:	call   0x401bb0
  402088:	nop
  402089:	nop
  40208a:	nop
  40208b:	nop
  40208c:	nop
  40208d:	nop
  40208e:	nop
  40208f:	nop
  402090:	sub    rsp,0x28
  402094:	mov    eax,DWORD PTR [rcx]
  402096:	cmp    eax,0xc0000091
  40209b:	ja     0x402100
  40209d:	cmp    eax,0xc000008d
  4020a2:	jae    0x40211f
  4020a4:	cmp    eax,0xc0000008
  4020a9:	je     0x4021c0
  4020af:	ja     0x402190
  4020b5:	cmp    eax,0x80000002
  4020ba:	je     0x4021c0
  4020c0:	cmp    eax,0xc0000005
  4020c5:	jne    0x40219e
  4020cb:	xor    edx,edx
  4020cd:	mov    ecx,0xb
  4020d2:	call   0x402b18
  4020d7:	cmp    rax,0x1
  4020db:	je     0x402220
  4020e1:	test   rax,rax
  4020e4:	je     0x402200
  4020ea:	mov    ecx,0xb
  4020ef:	call   rax
  4020f1:	xor    eax,eax
  4020f3:	add    rsp,0x28
  4020f7:	ret    
  4020f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402100:	cmp    eax,0xc0000094
  402105:	je     0x4021d0
  40210b:	ja     0x402150
  40210d:	cmp    eax,0xc0000092
  402112:	je     0x4021c0
  402118:	cmp    eax,0xc0000093
  40211d:	jne    0x40219e
  40211f:	xor    edx,edx
  402121:	mov    ecx,0x8
  402126:	call   0x402b18
  40212b:	cmp    rax,0x1
  40212f:	mov    rdx,rax
  402132:	je     0x4021a8
  402134:	test   rdx,rdx
  402137:	mov    eax,0x1
  40213c:	je     0x4020f3
  40213e:	mov    ecx,0x8
  402143:	call   rdx
  402145:	xor    eax,eax
  402147:	add    rsp,0x28
  40214b:	ret    
  40214c:	nop    DWORD PTR [rax+0x0]
  402150:	cmp    eax,0xc0000095
  402155:	je     0x4021c0
  402157:	cmp    eax,0xc0000096
  40215c:	jne    0x40219e
  40215e:	xor    edx,edx
  402160:	mov    ecx,0x4
  402165:	call   0x402b18
  40216a:	cmp    rax,0x1
  40216e:	je     0x40220a
  402174:	test   rax,rax
  402177:	je     0x402200
  40217d:	mov    ecx,0x4
  402182:	call   rax
  402184:	xor    eax,eax
  402186:	jmp    0x4020f3
  40218b:	nop    DWORD PTR [rax+rax*1+0x0]
  402190:	cmp    eax,0xc000001d
  402195:	je     0x40215e
  402197:	cmp    eax,0xc000008c
  40219c:	je     0x4021c0
  40219e:	mov    eax,0x1
  4021a3:	add    rsp,0x28
  4021a7:	ret    
  4021a8:	mov    edx,0x1
  4021ad:	mov    ecx,0x8
  4021b2:	call   0x402b18
  4021b7:	call   0x401b80
  4021bc:	nop    DWORD PTR [rax+0x0]
  4021c0:	xor    eax,eax
  4021c2:	add    rsp,0x28
  4021c6:	ret    
  4021c7:	nop    WORD PTR [rax+rax*1+0x0]
  4021d0:	xor    edx,edx
  4021d2:	mov    ecx,0x8
  4021d7:	call   0x402b18
  4021dc:	cmp    rax,0x1
  4021e0:	mov    rdx,rax
  4021e3:	jne    0x402134
  4021e9:	mov    edx,0x1
  4021ee:	mov    ecx,0x8
  4021f3:	call   0x402b18
  4021f8:	xor    eax,eax
  4021fa:	jmp    0x4020f3
  4021ff:	nop
  402200:	mov    eax,0x4
  402205:	add    rsp,0x28
  402209:	ret    
  40220a:	mov    edx,0x1
  40220f:	mov    ecx,0x4
  402214:	call   0x402b18
  402219:	xor    eax,eax
  40221b:	jmp    0x4020f3
  402220:	mov    edx,0x1
  402225:	mov    ecx,0xb
  40222a:	call   0x402b18
  40222f:	xor    eax,eax
  402231:	jmp    0x4020f3
  402236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402240:	push   r12
  402242:	push   rbp
  402243:	push   rdi
  402244:	push   rsi
  402245:	push   rbx
  402246:	sub    rsp,0x20
  40224a:	call   0x4029b0
  40224f:	mov    rbp,rax
  402252:	mov    eax,DWORD PTR [rip+0x5470]        # 0x4076c8
  402258:	test   eax,eax
  40225a:	jne    0x402281
  40225c:	test   rbp,rbp
  40225f:	je     0x402281
  402261:	lea    rcx,[rip+0x2078]        # 0x4042e0
  402268:	mov    DWORD PTR [rip+0x5456],0x1        # 0x4076c8
  402272:	call   0x4027f0
  402277:	test   rax,rax
  40227a:	je     0x402290
  40227c:	mov    eax,0x1
  402281:	add    rsp,0x20
  402285:	pop    rbx
  402286:	pop    rsi
  402287:	pop    rdi
  402288:	pop    rbp
  402289:	pop    r12
  40228b:	ret    
  40228c:	nop    DWORD PTR [rax+0x0]
  402290:	lea    rbx,[rip+0x5569]        # 0x407800
  402297:	mov    ecx,0x30
  40229c:	lea    rdx,[rip+0x545d]        # 0x407700
  4022a3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402090
  4022aa:	xor    esi,esi
  4022ac:	mov    rdi,rbx
  4022af:	rep stos QWORD PTR es:[rdi],rax
  4022b2:	mov    rdi,rdx
  4022b5:	sub    r12,rbp
  4022b8:	mov    cl,0x20
  4022ba:	rep stos QWORD PTR es:[rdi],rax
  4022bd:	mov    rdi,rdx
  4022c0:	jmp    0x4022f0
  4022c2:	mov    BYTE PTR [rdi],0x9
  4022c5:	mov    DWORD PTR [rdi+0x4],r12d
  4022c9:	add    rsi,0x1
  4022cd:	mov    edx,DWORD PTR [rax+0xc]
  4022d0:	add    rbx,0xc
  4022d4:	mov    DWORD PTR [rbx-0xc],edx
  4022d7:	add    edx,DWORD PTR [rax+0x8]
  4022da:	mov    rax,rdi
  4022dd:	sub    rax,rbp
  4022e0:	add    rdi,0x8
  4022e4:	mov    DWORD PTR [rbx-0x4],eax
  4022e7:	mov    DWORD PTR [rbx-0x8],edx
  4022ea:	cmp    rsi,0x20
  4022ee:	je     0x402325
  4022f0:	mov    rcx,rsi
  4022f3:	call   0x402920
  4022f8:	test   rax,rax
  4022fb:	jne    0x4022c2
  4022fd:	test   rsi,rsi
  402300:	je     0x40227c
  402306:	mov    edx,esi
  402308:	nop    DWORD PTR [rax+rax*1+0x0]
  402310:	mov    r8,rbp
  402313:	lea    rcx,[rip+0x54e6]        # 0x407800
  40231a:	call   QWORD PTR [rip+0x709c]        # 0x4093bc
  402320:	jmp    0x40227c
  402325:	mov    edx,0x20
  40232a:	jmp    0x402310
  40232c:	nop    DWORD PTR [rax+0x0]
  402330:	push   rbx
  402331:	sub    rsp,0x20
  402335:	mov    rdx,QWORD PTR [rcx]
  402338:	mov    eax,DWORD PTR [rdx]
  40233a:	mov    r8d,eax
  40233d:	and    r8d,0x20ffffff
  402344:	cmp    r8d,0x20474343
  40234b:	je     0x402450
  402351:	cmp    eax,0xc0000091
  402356:	mov    rbx,rcx
  402359:	ja     0x4023e0
  40235f:	cmp    eax,0xc000008d
  402364:	jae    0x4023f7
  40236a:	cmp    eax,0xc0000008
  40236f:	je     0x4023a3
  402371:	ja     0x4023b0
  402373:	cmp    eax,0x80000002
  402378:	je     0x4023a3
  40237a:	cmp    eax,0xc0000005
  40237f:	jne    0x4023c2
  402381:	xor    edx,edx
  402383:	mov    ecx,0xb
  402388:	call   0x402b18
  40238d:	cmp    rax,0x1
  402391:	je     0x4024c0
  402397:	test   rax,rax
  40239a:	je     0x4023c2
  40239c:	mov    ecx,0xb
  4023a1:	call   rax
  4023a3:	mov    eax,0xffffffff
  4023a8:	add    rsp,0x20
  4023ac:	pop    rbx
  4023ad:	ret    
  4023ae:	xchg   ax,ax
  4023b0:	cmp    eax,0xc000001d
  4023b5:	je     0x402476
  4023bb:	cmp    eax,0xc000008c
  4023c0:	je     0x4023a3
  4023c2:	mov    rax,QWORD PTR [rip+0x52f7]        # 0x4076c0
  4023c9:	test   rax,rax
  4023cc:	je     0x4023a8
  4023ce:	mov    rcx,rbx
  4023d1:	add    rsp,0x20
  4023d5:	pop    rbx
  4023d6:	rex.W jmp rax
  4023d9:	nop    DWORD PTR [rax+0x0]
  4023e0:	cmp    eax,0xc0000094
  4023e5:	je     0x402422
  4023e7:	ja     0x402460
  4023e9:	cmp    eax,0xc0000092
  4023ee:	je     0x4023a3
  4023f0:	cmp    eax,0xc0000093
  4023f5:	jne    0x4023c2
  4023f7:	xor    edx,edx
  4023f9:	mov    ecx,0x8
  4023fe:	call   0x402b18
  402403:	cmp    rax,0x1
  402407:	jne    0x402434
  402409:	mov    edx,0x1
  40240e:	mov    ecx,0x8
  402413:	call   0x402b18
  402418:	call   0x401b80
  40241d:	jmp    0x4023a3
  402422:	xor    edx,edx
  402424:	mov    ecx,0x8
  402429:	call   0x402b18
  40242e:	cmp    rax,0x1
  402432:	je     0x4024a2
  402434:	test   rax,rax
  402437:	je     0x4023c2
  402439:	mov    ecx,0x8
  40243e:	call   rax
  402440:	mov    eax,0xffffffff
  402445:	jmp    0x4023a8
  40244a:	nop    WORD PTR [rax+rax*1+0x0]
  402450:	test   BYTE PTR [rdx+0x4],0x1
  402454:	jne    0x402351
  40245a:	jmp    0x4023a3
  40245f:	nop
  402460:	cmp    eax,0xc0000095
  402465:	je     0x4023a3
  40246b:	cmp    eax,0xc0000096
  402470:	jne    0x4023c2
  402476:	xor    edx,edx
  402478:	mov    ecx,0x4
  40247d:	call   0x402b18
  402482:	cmp    rax,0x1
  402486:	je     0x4024d4
  402488:	test   rax,rax
  40248b:	je     0x4023c2
  402491:	mov    ecx,0x4
  402496:	call   rax
  402498:	mov    eax,0xffffffff
  40249d:	jmp    0x4023a8
  4024a2:	mov    edx,0x1
  4024a7:	mov    ecx,0x8
  4024ac:	call   0x402b18
  4024b1:	jmp    0x4023a3
  4024b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024c0:	mov    edx,0x1
  4024c5:	mov    ecx,0xb
  4024ca:	call   0x402b18
  4024cf:	jmp    0x4023a3
  4024d4:	mov    edx,0x1
  4024d9:	mov    ecx,0x4
  4024de:	call   0x402b18
  4024e3:	jmp    0x4023a3
  4024e8:	nop
  4024e9:	nop
  4024ea:	nop
  4024eb:	nop
  4024ec:	nop
  4024ed:	nop
  4024ee:	nop
  4024ef:	nop
  4024f0:	push   rbp
  4024f1:	push   rdi
  4024f2:	push   rsi
  4024f3:	push   rbx
  4024f4:	sub    rsp,0x28
  4024f8:	lea    rcx,[rip+0x54a1]        # 0x4079a0
  4024ff:	call   QWORD PTR [rip+0x6e5f]        # 0x409364
  402505:	mov    rbx,QWORD PTR [rip+0x5474]        # 0x407980
  40250c:	test   rbx,rbx
  40250f:	je     0x402544
  402511:	mov    rbp,QWORD PTR [rip+0x6edc]        # 0x4093f4
  402518:	mov    rdi,QWORD PTR [rip+0x6e65]        # 0x409384
  40251f:	nop
  402520:	mov    ecx,DWORD PTR [rbx]
  402522:	call   rbp
  402524:	mov    rsi,rax
  402527:	call   rdi
  402529:	test   eax,eax
  40252b:	jne    0x40253b
  40252d:	test   rsi,rsi
  402530:	je     0x40253b
  402532:	mov    rax,QWORD PTR [rbx+0x8]
  402536:	mov    rcx,rsi
  402539:	call   rax
  40253b:	mov    rbx,QWORD PTR [rbx+0x10]
  40253f:	test   rbx,rbx
  402542:	jne    0x402520
  402544:	mov    rax,QWORD PTR [rip+0x6e61]        # 0x4093ac
  40254b:	lea    rcx,[rip+0x544e]        # 0x4079a0
  402552:	add    rsp,0x28
  402556:	pop    rbx
  402557:	pop    rsi
  402558:	pop    rdi
  402559:	pop    rbp
  40255a:	rex.W jmp rax
  40255d:	nop    DWORD PTR [rax]
  402560:	push   rdi
  402561:	push   rsi
  402562:	push   rbx
  402563:	sub    rsp,0x20
  402567:	mov    eax,DWORD PTR [rip+0x541b]        # 0x407988
  40256d:	test   eax,eax
  40256f:	jne    0x402580
  402571:	add    rsp,0x20
  402575:	pop    rbx
  402576:	pop    rsi
  402577:	pop    rdi
  402578:	ret    
  402579:	nop    DWORD PTR [rax+0x0]
  402580:	mov    rsi,rdx
  402583:	mov    edi,ecx
  402585:	mov    edx,0x18
  40258a:	mov    ecx,0x1
  40258f:	call   0x402b58
  402594:	test   rax,rax
  402597:	mov    rbx,rax
  40259a:	je     0x4025d8
  40259c:	mov    DWORD PTR [rax],edi
  40259e:	mov    QWORD PTR [rax+0x8],rsi
  4025a2:	lea    rcx,[rip+0x53f7]        # 0x4079a0
  4025a9:	call   QWORD PTR [rip+0x6db5]        # 0x409364
  4025af:	mov    rax,QWORD PTR [rip+0x53ca]        # 0x407980
  4025b6:	lea    rcx,[rip+0x53e3]        # 0x4079a0
  4025bd:	mov    QWORD PTR [rip+0x53bc],rbx        # 0x407980
  4025c4:	mov    QWORD PTR [rbx+0x10],rax
  4025c8:	call   QWORD PTR [rip+0x6dde]        # 0x4093ac
  4025ce:	xor    eax,eax
  4025d0:	add    rsp,0x20
  4025d4:	pop    rbx
  4025d5:	pop    rsi
  4025d6:	pop    rdi
  4025d7:	ret    
  4025d8:	mov    eax,0xffffffff
  4025dd:	jmp    0x402571
  4025df:	nop
  4025e0:	push   rbx
  4025e1:	sub    rsp,0x20
  4025e5:	mov    eax,DWORD PTR [rip+0x539d]        # 0x407988
  4025eb:	test   eax,eax
  4025ed:	jne    0x402600
  4025ef:	xor    eax,eax
  4025f1:	add    rsp,0x20
  4025f5:	pop    rbx
  4025f6:	ret    
  4025f7:	nop    WORD PTR [rax+rax*1+0x0]
  402600:	mov    ebx,ecx
  402602:	lea    rcx,[rip+0x5397]        # 0x4079a0
  402609:	call   QWORD PTR [rip+0x6d55]        # 0x409364
  40260f:	mov    rdx,QWORD PTR [rip+0x536a]        # 0x407980
  402616:	test   rdx,rdx
  402619:	je     0x402637
  40261b:	mov    eax,DWORD PTR [rdx]
  40261d:	cmp    eax,ebx
  40261f:	jne    0x40262e
  402621:	jmp    0x40266f
  402623:	mov    r8d,DWORD PTR [rax]
  402626:	cmp    r8d,ebx
  402629:	je     0x402650
  40262b:	mov    rdx,rax
  40262e:	mov    rax,QWORD PTR [rdx+0x10]
  402632:	test   rax,rax
  402635:	jne    0x402623
  402637:	lea    rcx,[rip+0x5362]        # 0x4079a0
  40263e:	call   QWORD PTR [rip+0x6d68]        # 0x4093ac
  402644:	xor    eax,eax
  402646:	add    rsp,0x20
  40264a:	pop    rbx
  40264b:	ret    
  40264c:	nop    DWORD PTR [rax+0x0]
  402650:	mov    rcx,rax
  402653:	mov    rax,QWORD PTR [rax+0x10]
  402657:	mov    QWORD PTR [rdx+0x10],rax
  40265b:	call   0x402b40
  402660:	lea    rcx,[rip+0x5339]        # 0x4079a0
  402667:	call   QWORD PTR [rip+0x6d3f]        # 0x4093ac
  40266d:	jmp    0x402644
  40266f:	mov    rax,QWORD PTR [rdx+0x10]
  402673:	mov    rcx,rdx
  402676:	mov    QWORD PTR [rip+0x5303],rax        # 0x407980
  40267d:	jmp    0x40265b
  40267f:	nop
  402680:	push   rbx
  402681:	sub    rsp,0x20
  402685:	cmp    edx,0x1
  402688:	je     0x402720
  40268e:	jb     0x4026c0
  402690:	cmp    edx,0x2
  402693:	je     0x4026b0
  402695:	cmp    edx,0x3
  402698:	jne    0x4026b5
  40269a:	mov    eax,DWORD PTR [rip+0x52e8]        # 0x407988
  4026a0:	test   eax,eax
  4026a2:	je     0x4026b5
  4026a4:	call   0x4024f0
  4026a9:	jmp    0x4026b5
  4026ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4026b0:	call   0x401b80
  4026b5:	mov    eax,0x1
  4026ba:	add    rsp,0x20
  4026be:	pop    rbx
  4026bf:	ret    
  4026c0:	mov    eax,DWORD PTR [rip+0x52c2]        # 0x407988
  4026c6:	test   eax,eax
  4026c8:	jne    0x402750
  4026ce:	mov    eax,DWORD PTR [rip+0x52b4]        # 0x407988
  4026d4:	cmp    eax,0x1
  4026d7:	jne    0x4026b5
  4026d9:	mov    rcx,QWORD PTR [rip+0x52a0]        # 0x407980
  4026e0:	test   rcx,rcx
  4026e3:	je     0x4026f6
  4026e5:	mov    rbx,QWORD PTR [rcx+0x10]
  4026e9:	call   0x402b40
  4026ee:	test   rbx,rbx
  4026f1:	mov    rcx,rbx
  4026f4:	jne    0x4026e5
  4026f6:	lea    rcx,[rip+0x52a3]        # 0x4079a0
  4026fd:	mov    QWORD PTR [rip+0x5278],0x0        # 0x407980
  402708:	mov    DWORD PTR [rip+0x5276],0x0        # 0x407988
  402712:	call   QWORD PTR [rip+0x6c44]        # 0x40935c
  402718:	jmp    0x4026b5
  40271a:	nop    WORD PTR [rax+rax*1+0x0]
  402720:	mov    eax,DWORD PTR [rip+0x5262]        # 0x407988
  402726:	test   eax,eax
  402728:	je     0x402740
  40272a:	mov    eax,0x1
  40272f:	mov    DWORD PTR [rip+0x524f],0x1        # 0x407988
  402739:	add    rsp,0x20
  40273d:	pop    rbx
  40273e:	ret    
  40273f:	nop
  402740:	lea    rcx,[rip+0x5259]        # 0x4079a0
  402747:	call   QWORD PTR [rip+0x6c57]        # 0x4093a4
  40274d:	jmp    0x40272a
  40274f:	nop
  402750:	call   0x4024f0
  402755:	jmp    0x4026ce
  40275a:	nop
  40275b:	nop
  40275c:	nop
  40275d:	nop
  40275e:	nop
  40275f:	nop
  402760:	movsxd rax,DWORD PTR [rcx+0x3c]
  402764:	add    rcx,rax
  402767:	xor    eax,eax
  402769:	cmp    DWORD PTR [rcx],0x4550
  40276f:	je     0x402773
  402771:	repz ret 
  402773:	xor    eax,eax
  402775:	cmp    WORD PTR [rcx+0x18],0x20b
  40277b:	sete   al
  40277e:	ret    
  40277f:	nop
  402780:	cmp    WORD PTR [rcx],0x5a4d
  402785:	je     0x402790
  402787:	xor    eax,eax
  402789:	ret    
  40278a:	nop    WORD PTR [rax+rax*1+0x0]
  402790:	jmp    0x402760
  402792:	nop    DWORD PTR [rax+0x0]
  402796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027a0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4027a4:	add    rcx,rax
  4027a7:	movzx  eax,WORD PTR [rcx+0x14]
  4027ab:	lea    rax,[rcx+rax*1+0x18]
  4027b0:	movzx  ecx,WORD PTR [rcx+0x6]
  4027b4:	test   ecx,ecx
  4027b6:	je     0x4027e1
  4027b8:	sub    ecx,0x1
  4027bb:	lea    rcx,[rcx+rcx*4]
  4027bf:	lea    r9,[rax+rcx*8+0x28]
  4027c4:	mov    r8d,DWORD PTR [rax+0xc]
  4027c8:	cmp    r8,rdx
  4027cb:	mov    rcx,r8
  4027ce:	ja     0x4027d8
  4027d0:	add    ecx,DWORD PTR [rax+0x8]
  4027d3:	cmp    rdx,rcx
  4027d6:	jb     0x4027e3
  4027d8:	add    rax,0x28
  4027dc:	cmp    rax,r9
  4027df:	jne    0x4027c4
  4027e1:	xor    eax,eax
  4027e3:	repz ret 
  4027e5:	nop
  4027e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027f0:	push   rdi
  4027f1:	push   rsi
  4027f2:	push   rbx
  4027f3:	sub    rsp,0x20
  4027f7:	mov    rsi,rcx
  4027fa:	call   0x402b10
  4027ff:	cmp    rax,0x8
  402803:	ja     0x402820
  402805:	mov    rbx,QWORD PTR [rip+0x1b74]        # 0x404380
  40280c:	xor    edi,edi
  40280e:	cmp    WORD PTR [rbx],0x5a4d
  402813:	je     0x402830
  402815:	mov    rax,rdi
  402818:	add    rsp,0x20
  40281c:	pop    rbx
  40281d:	pop    rsi
  40281e:	pop    rdi
  40281f:	ret    
  402820:	xor    edi,edi
  402822:	mov    rax,rdi
  402825:	add    rsp,0x20
  402829:	pop    rbx
  40282a:	pop    rsi
  40282b:	pop    rdi
  40282c:	ret    
  40282d:	nop    DWORD PTR [rax]
  402830:	mov    rcx,rbx
  402833:	call   0x402760
  402838:	test   eax,eax
  40283a:	je     0x402815
  40283c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402840:	add    rdx,rbx
  402843:	movzx  eax,WORD PTR [rdx+0x14]
  402847:	lea    rbx,[rdx+rax*1+0x18]
  40284c:	movzx  eax,WORD PTR [rdx+0x6]
  402850:	test   eax,eax
  402852:	je     0x402815
  402854:	sub    eax,0x1
  402857:	lea    rax,[rax+rax*4]
  40285b:	lea    rdi,[rbx+rax*8+0x28]
  402860:	jmp    0x40286b
  402862:	add    rbx,0x28
  402866:	cmp    rbx,rdi
  402869:	je     0x402820
  40286b:	mov    r8d,0x8
  402871:	mov    rdx,rsi
  402874:	mov    rcx,rbx
  402877:	call   0x402b08
  40287c:	test   eax,eax
  40287e:	jne    0x402862
  402880:	mov    rdi,rbx
  402883:	mov    rax,rdi
  402886:	add    rsp,0x20
  40288a:	pop    rbx
  40288b:	pop    rsi
  40288c:	pop    rdi
  40288d:	ret    
  40288e:	xchg   ax,ax
  402890:	push   rsi
  402891:	push   rbx
  402892:	sub    rsp,0x28
  402896:	mov    rbx,QWORD PTR [rip+0x1ae3]        # 0x404380
  40289d:	cmp    WORD PTR [rbx],0x5a4d
  4028a2:	je     0x4028b0
  4028a4:	xor    eax,eax
  4028a6:	add    rsp,0x28
  4028aa:	pop    rbx
  4028ab:	pop    rsi
  4028ac:	ret    
  4028ad:	nop    DWORD PTR [rax]
  4028b0:	mov    rsi,rcx
  4028b3:	mov    rcx,rbx
  4028b6:	call   0x402760
  4028bb:	test   eax,eax
  4028bd:	je     0x4028a4
  4028bf:	sub    rsi,rbx
  4028c2:	mov    rcx,rbx
  4028c5:	mov    rdx,rsi
  4028c8:	add    rsp,0x28
  4028cc:	pop    rbx
  4028cd:	pop    rsi
  4028ce:	jmp    0x4027a0
  4028d3:	nop    DWORD PTR [rax]
  4028d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028e0:	push   rbx
  4028e1:	sub    rsp,0x20
  4028e5:	mov    rbx,QWORD PTR [rip+0x1a94]        # 0x404380
  4028ec:	xor    eax,eax
  4028ee:	cmp    WORD PTR [rbx],0x5a4d
  4028f3:	je     0x402900
  4028f5:	add    rsp,0x20
  4028f9:	pop    rbx
  4028fa:	ret    
  4028fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402900:	mov    rcx,rbx
  402903:	call   0x402760
  402908:	test   eax,eax
  40290a:	je     0x4028f5
  40290c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402910:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402915:	add    rsp,0x20
  402919:	pop    rbx
  40291a:	ret    
  40291b:	nop    DWORD PTR [rax+rax*1+0x0]
  402920:	push   rdi
  402921:	push   rsi
  402922:	push   rbx
  402923:	sub    rsp,0x20
  402927:	mov    rsi,QWORD PTR [rip+0x1a52]        # 0x404380
  40292e:	xor    edi,edi
  402930:	mov    rbx,rcx
  402933:	cmp    WORD PTR [rsi],0x5a4d
  402938:	je     0x402945
  40293a:	mov    rax,rdi
  40293d:	add    rsp,0x20
  402941:	pop    rbx
  402942:	pop    rsi
  402943:	pop    rdi
  402944:	ret    
  402945:	mov    rcx,rsi
  402948:	call   0x402760
  40294d:	test   eax,eax
  40294f:	je     0x40293a
  402951:	movsxd rax,DWORD PTR [rsi+0x3c]
  402955:	add    rsi,rax
  402958:	movzx  eax,WORD PTR [rsi+0x14]
  40295c:	lea    rdx,[rsi+rax*1+0x18]
  402961:	movzx  eax,WORD PTR [rsi+0x6]
  402965:	test   eax,eax
  402967:	je     0x40293a
  402969:	sub    eax,0x1
  40296c:	lea    rax,[rax+rax*4]
  402970:	lea    rax,[rdx+rax*8+0x28]
  402975:	test   BYTE PTR [rdx+0x27],0x20
  402979:	je     0x402984
  40297b:	test   rbx,rbx
  40297e:	je     0x4029a0
  402980:	sub    rbx,0x1
  402984:	add    rdx,0x28
  402988:	cmp    rdx,rax
  40298b:	jne    0x402975
  40298d:	xor    edi,edi
  40298f:	mov    rax,rdi
  402992:	add    rsp,0x20
  402996:	pop    rbx
  402997:	pop    rsi
  402998:	pop    rdi
  402999:	ret    
  40299a:	nop    WORD PTR [rax+rax*1+0x0]
  4029a0:	mov    rdi,rdx
  4029a3:	mov    rax,rdi
  4029a6:	add    rsp,0x20
  4029aa:	pop    rbx
  4029ab:	pop    rsi
  4029ac:	pop    rdi
  4029ad:	ret    
  4029ae:	xchg   ax,ax
  4029b0:	push   rsi
  4029b1:	push   rbx
  4029b2:	sub    rsp,0x28
  4029b6:	mov    rsi,QWORD PTR [rip+0x19c3]        # 0x404380
  4029bd:	xor    ebx,ebx
  4029bf:	cmp    WORD PTR [rsi],0x5a4d
  4029c4:	je     0x4029d0
  4029c6:	mov    rax,rbx
  4029c9:	add    rsp,0x28
  4029cd:	pop    rbx
  4029ce:	pop    rsi
  4029cf:	ret    
  4029d0:	mov    rcx,rsi
  4029d3:	call   0x402760
  4029d8:	test   eax,eax
  4029da:	cmovne rbx,rsi
  4029de:	mov    rax,rbx
  4029e1:	add    rsp,0x28
  4029e5:	pop    rbx
  4029e6:	pop    rsi
  4029e7:	ret    
  4029e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029f0:	push   rsi
  4029f1:	push   rbx
  4029f2:	sub    rsp,0x28
  4029f6:	mov    rbx,QWORD PTR [rip+0x1983]        # 0x404380
  4029fd:	xor    eax,eax
  4029ff:	cmp    WORD PTR [rbx],0x5a4d
  402a04:	je     0x402a10
  402a06:	add    rsp,0x28
  402a0a:	pop    rbx
  402a0b:	pop    rsi
  402a0c:	ret    
  402a0d:	nop    DWORD PTR [rax]
  402a10:	mov    rsi,rcx
  402a13:	mov    rcx,rbx
  402a16:	call   0x402760
  402a1b:	test   eax,eax
  402a1d:	je     0x402a06
  402a1f:	sub    rsi,rbx
  402a22:	mov    rcx,rbx
  402a25:	mov    rdx,rsi
  402a28:	call   0x4027a0
  402a2d:	test   rax,rax
  402a30:	je     0x402a41
  402a32:	mov    eax,DWORD PTR [rax+0x24]
  402a35:	not    eax
  402a37:	shr    eax,0x1f
  402a3a:	add    rsp,0x28
  402a3e:	pop    rbx
  402a3f:	pop    rsi
  402a40:	ret    
  402a41:	xor    eax,eax
  402a43:	jmp    0x402a06
  402a45:	nop
  402a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a50:	push   rbp
  402a51:	push   rdi
  402a52:	push   rsi
  402a53:	push   rbx
  402a54:	sub    rsp,0x28
  402a58:	mov    rdi,QWORD PTR [rip+0x1921]        # 0x404380
  402a5f:	xor    ebp,ebp
  402a61:	mov    esi,ecx
  402a63:	cmp    WORD PTR [rdi],0x5a4d
  402a68:	je     0x402a80
  402a6a:	mov    rax,rbp
  402a6d:	add    rsp,0x28
  402a71:	pop    rbx
  402a72:	pop    rsi
  402a73:	pop    rdi
  402a74:	pop    rbp
  402a75:	ret    
  402a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a80:	mov    rcx,rdi
  402a83:	call   0x402760
  402a88:	test   eax,eax
  402a8a:	je     0x402a6a
  402a8c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402a90:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402a97:	test   edx,edx
  402a99:	je     0x402a6a
  402a9b:	mov    ebx,edx
  402a9d:	mov    rcx,rdi
  402aa0:	mov    rdx,rbx
  402aa3:	call   0x4027a0
  402aa8:	test   rax,rax
  402aab:	je     0x402a6a
  402aad:	add    rbx,rdi
  402ab0:	mov    rdx,rbx
  402ab3:	jne    0x402ac7
  402ab5:	jmp    0x402a6a
  402ab7:	nop    WORD PTR [rax+rax*1+0x0]
  402ac0:	sub    esi,0x1
  402ac3:	add    rdx,0x14
  402ac7:	mov    ecx,DWORD PTR [rdx+0x4]
  402aca:	test   ecx,ecx
  402acc:	jne    0x402ad5
  402ace:	mov    eax,DWORD PTR [rdx+0xc]
  402ad1:	test   eax,eax
  402ad3:	je     0x402af0
  402ad5:	test   esi,esi
  402ad7:	jg     0x402ac0
  402ad9:	mov    ebp,DWORD PTR [rdx+0xc]
  402adc:	add    rbp,rdi
  402adf:	mov    rax,rbp
  402ae2:	add    rsp,0x28
  402ae6:	pop    rbx
  402ae7:	pop    rsi
  402ae8:	pop    rdi
  402ae9:	pop    rbp
  402aea:	ret    
  402aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	xor    ebp,ebp
  402af2:	mov    rax,rbp
  402af5:	add    rsp,0x28
  402af9:	pop    rbx
  402afa:	pop    rsi
  402afb:	pop    rdi
  402afc:	pop    rbp
  402afd:	ret    
  402afe:	nop
  402aff:	nop
  402b00:	jmp    QWORD PTR [rip+0x69f6]        # 0x4094fc
  402b06:	nop
  402b07:	nop
  402b08:	jmp    QWORD PTR [rip+0x69e6]        # 0x4094f4
  402b0e:	nop
  402b0f:	nop
  402b10:	jmp    QWORD PTR [rip+0x69d6]        # 0x4094ec
  402b16:	nop
  402b17:	nop
  402b18:	jmp    QWORD PTR [rip+0x69c6]        # 0x4094e4
  402b1e:	nop
  402b1f:	nop
  402b20:	jmp    QWORD PTR [rip+0x69b6]        # 0x4094dc
  402b26:	nop
  402b27:	nop
  402b28:	jmp    QWORD PTR [rip+0x69a6]        # 0x4094d4
  402b2e:	nop
  402b2f:	nop
  402b30:	jmp    QWORD PTR [rip+0x6996]        # 0x4094cc
  402b36:	nop
  402b37:	nop
  402b38:	jmp    QWORD PTR [rip+0x6986]        # 0x4094c4
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x6976]        # 0x4094bc
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x6966]        # 0x4094b4
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x6956]        # 0x4094ac
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x6946]        # 0x4094a4
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x6936]        # 0x40949c
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x6926]        # 0x409494
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x6916]        # 0x40948c
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x6906]        # 0x409484
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x68f6]        # 0x40947c
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x68de]        # 0x40946c
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x68ce]        # 0x409464
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x68b6]        # 0x409454
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x68a6]        # 0x40944c
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x6896]        # 0x409444
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x6886]        # 0x40943c
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0x686e]        # 0x40942c
  402bbe:	nop
  402bbf:	nop
  402bc0:	jmp    QWORD PTR [rip+0x685e]        # 0x409424
  402bc6:	nop
  402bc7:	nop
  402bc8:	jmp    QWORD PTR [rip+0x684e]        # 0x40941c
  402bce:	nop
  402bcf:	nop
  402bd0:	mov    rax,QWORD PTR [rip+0x4e19]        # 0x4079f0
  402bd7:	ret    
  402bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  402be0:	mov    rax,rcx
  402be3:	xchg   QWORD PTR [rip+0x4e06],rax        # 0x4079f0
  402bea:	ret    
  402beb:	nop
  402bec:	nop
  402bed:	nop
  402bee:	nop
  402bef:	nop
  402bf0:	jmp    QWORD PTR [rip+0x6816]        # 0x40940c
  402bf6:	nop
  402bf7:	nop
  402bf8:	jmp    QWORD PTR [rip+0x6806]        # 0x409404
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x67f6]        # 0x4093fc
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x67e6]        # 0x4093f4
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x67d6]        # 0x4093ec
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x67c6]        # 0x4093e4
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x67b6]        # 0x4093dc
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x67a6]        # 0x4093d4
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x6796]        # 0x4093cc
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x6786]        # 0x4093c4
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x6776]        # 0x4093bc
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x6766]        # 0x4093b4
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x6756]        # 0x4093ac
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x6746]        # 0x4093a4
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x6736]        # 0x40939c
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x6726]        # 0x409394
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x6716]        # 0x40938c
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x6706]        # 0x409384
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x66f6]        # 0x40937c
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x66e6]        # 0x409374
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x66d6]        # 0x40936c
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0x66c6]        # 0x409364
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0x66b6]        # 0x40935c
  402ca6:	nop
  402ca7:	nop
  402ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cb0:	jmp    QWORD PTR [rip+0x6646]        # 0x4092fc
  402cb6:	nop
  402cb7:	nop
  402cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cc0:	push   rcx
  402cc1:	push   rax
  402cc2:	cmp    rax,0x1000
  402cc8:	lea    rcx,[rsp+0x18]
  402ccd:	jb     0x402ce8
  402ccf:	sub    rcx,0x1000
  402cd6:	or     QWORD PTR [rcx],0x0
  402cda:	sub    rax,0x1000
  402ce0:	cmp    rax,0x1000
  402ce6:	ja     0x402ccf
  402ce8:	sub    rcx,rax
  402ceb:	or     QWORD PTR [rcx],0x0
  402cef:	pop    rax
  402cf0:	pop    rcx
  402cf1:	ret    
  402cf2:	nop
  402cf3:	nop
  402cf4:	nop
  402cf5:	nop
  402cf6:	nop
  402cf7:	nop
  402cf8:	nop
  402cf9:	nop
  402cfa:	nop
  402cfb:	nop
  402cfc:	nop
  402cfd:	nop
  402cfe:	nop
  402cff:	nop
  402d00:	sub    rsp,0x28
  402d04:	mov    rcx,QWORD PTR [rcx]
  402d07:	mov    rdx,QWORD PTR [rdx]
  402d0a:	xor    eax,eax
  402d0c:	mov    r8,QWORD PTR [rcx-0x18]
  402d10:	cmp    r8,QWORD PTR [rdx-0x18]
  402d14:	je     0x402d20
  402d16:	add    rsp,0x28
  402d1a:	ret    
  402d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d20:	call   0x402b28
  402d25:	test   eax,eax
  402d27:	sete   al
  402d2a:	add    rsp,0x28
  402d2e:	ret    
  402d2f:	nop
  402d30:	push   r13
  402d32:	push   r12
  402d34:	push   rbp
  402d35:	push   rdi
  402d36:	push   rsi
  402d37:	push   rbx
  402d38:	sub    rsp,0x138
  402d3f:	lea    rsi,[rsp+0x30]
  402d44:	lea    rdi,[rsp+0x40]
  402d49:	mov    r12d,ecx
  402d4c:	mov    rbp,rdx
  402d4f:	call   0x401750
  402d54:	mov    rcx,rsi
  402d57:	call   0x401540
  402d5c:	mov    rcx,rdi
  402d5f:	call   0x401598
  402d64:	lea    rbx,[rsp+0x50]
  402d69:	mov    rcx,rbx
  402d6c:	call   0x401588
  402d71:	mov    rdx,rdi
  402d74:	mov    rcx,rsi
  402d77:	call   0x402d00
  402d7c:	test   al,al
  402d7e:	je     0x402e42
  402d84:	mov    rdx,rbx
  402d87:	mov    rcx,rsi
  402d8a:	call   0x402d00
  402d8f:	test   al,al
  402d91:	je     0x402eb6
  402d97:	mov    rax,QWORD PTR [rsp+0x50]
  402d9c:	lea    r13,[rsp+0x2f]
  402da1:	mov    rdx,r13
  402da4:	lea    rcx,[rax-0x18]
  402da8:	call   0x4015d8
  402dad:	mov    rax,QWORD PTR [rsp+0x40]
  402db2:	mov    rdx,r13
  402db5:	lea    rcx,[rax-0x18]
  402db9:	call   0x4015d8
  402dbe:	mov    rax,QWORD PTR [rsp+0x30]
  402dc3:	mov    rdx,r13
  402dc6:	lea    rcx,[rax-0x18]
  402dca:	call   0x4015d8
  402dcf:	mov    rdx,QWORD PTR [rbp+0x0]
  402dd3:	mov    rcx,rbx
  402dd6:	mov    r8,rsi
  402dd9:	call   0x4015d0
  402dde:	mov    rcx,rbx
  402de1:	call   0x401590
  402de6:	mov    rax,QWORD PTR [rsp+0x50]
  402deb:	mov    rdx,rdi
  402dee:	lea    rcx,[rax-0x18]
  402df2:	call   0x4015d8
  402df7:	mov    rcx,rbx
  402dfa:	mov    r8,rbp
  402dfd:	mov    edx,r12d
  402e00:	call   0x401580
  402e05:	mov    rsi,QWORD PTR [rip+0x1524]        # 0x404330
  402e0c:	mov    rcx,rbx
  402e0f:	lea    rax,[rsi+0x10]
  402e13:	mov    QWORD PTR [rsp+0x50],rax
  402e18:	call   0x401570
  402e1d:	mov    edi,eax
  402e1f:	add    rsi,0x10
  402e23:	mov    rcx,rbx
  402e26:	mov    QWORD PTR [rsp+0x50],rsi
  402e2b:	call   0x401578
  402e30:	mov    eax,edi
  402e32:	add    rsp,0x138
  402e39:	pop    rbx
  402e3a:	pop    rsi
  402e3b:	pop    rdi
  402e3c:	pop    rbp
  402e3d:	pop    r12
  402e3f:	pop    r13
  402e41:	ret    
  402e42:	mov    rcx,QWORD PTR [rip+0x14d7]        # 0x404320
  402e49:	lea    rdx,[rip+0x11b0]        # 0x404000
  402e50:	call   0x4015a8
  402e55:	mov    rdx,QWORD PTR [rsp+0x30]
  402e5a:	mov    rcx,rax
  402e5d:	mov    r8,QWORD PTR [rdx-0x18]
  402e61:	call   0x4015b8
  402e66:	lea    rdx,[rip+0x11a3]        # 0x404010
  402e6d:	mov    rcx,rax
  402e70:	call   0x4015a8
  402e75:	mov    rdx,QWORD PTR [rsp+0x40]
  402e7a:	mov    rcx,rax
  402e7d:	mov    r8,QWORD PTR [rdx-0x18]
  402e81:	call   0x4015b8
  402e86:	lea    rdx,[rip+0x11a6]        # 0x404033
  402e8d:	mov    rcx,rax
  402e90:	call   0x4015a8
  402e95:	mov    rcx,rax
  402e98:	call   0x4015b0
  402e9d:	mov    rdx,rbx
  402ea0:	mov    rcx,rsi
  402ea3:	call   0x402d00
  402ea8:	test   al,al
  402eaa:	je     0x402eb6
  402eac:	mov    ecx,0x1
  402eb1:	call   0x402b50
  402eb6:	mov    rcx,QWORD PTR [rip+0x1463]        # 0x404320
  402ebd:	lea    rdx,[rip+0x113c]        # 0x404000
  402ec4:	call   0x4015a8
  402ec9:	mov    rdx,QWORD PTR [rsp+0x30]
  402ece:	mov    rcx,rax
  402ed1:	mov    r8,QWORD PTR [rdx-0x18]
  402ed5:	call   0x4015b8
  402eda:	lea    rdx,[rip+0x1157]        # 0x404038
  402ee1:	mov    rcx,rax
  402ee4:	call   0x4015a8
  402ee9:	mov    rdx,QWORD PTR [rsp+0x50]
  402eee:	mov    rcx,rax
  402ef1:	mov    r8,QWORD PTR [rdx-0x18]
  402ef5:	call   0x4015b8
  402efa:	lea    rdx,[rip+0x1132]        # 0x404033
  402f01:	mov    rcx,rax
  402f04:	call   0x4015a8
  402f09:	mov    rcx,rax
  402f0c:	call   0x4015b0
  402f11:	jmp    0x402eac
  402f13:	mov    rbx,rax
  402f16:	mov    rax,QWORD PTR [rsp+0x50]
  402f1b:	lea    rsi,[rsp+0x2f]
  402f20:	mov    rdx,rsi
  402f23:	lea    rcx,[rax-0x18]
  402f27:	call   0x4015d8
  402f2c:	mov    rax,QWORD PTR [rsp+0x40]
  402f31:	mov    rdx,rsi
  402f34:	lea    rcx,[rax-0x18]
  402f38:	call   0x4015d8
  402f3d:	mov    rax,QWORD PTR [rsp+0x30]
  402f42:	mov    rdx,rsi
  402f45:	lea    rcx,[rax-0x18]
  402f49:	call   0x4015d8
  402f4e:	mov    rcx,rbx
  402f51:	call   0x402cb0
  402f56:	mov    rbx,rax
  402f59:	lea    rsi,[rsp+0x2f]
  402f5e:	jmp    0x402f2c
  402f60:	mov    rbx,rax
  402f63:	mov    rax,QWORD PTR [rsp+0x50]
  402f68:	mov    rdx,rdi
  402f6b:	lea    rcx,[rax-0x18]
  402f6f:	call   0x4015d8
  402f74:	mov    rcx,rbx
  402f77:	call   0x402cb0
  402f7c:	mov    rbx,rax
  402f7f:	lea    rsi,[rsp+0x2f]
  402f84:	jmp    0x402f3d
  402f86:	mov    rdi,rax
  402f89:	mov    rcx,rbx
  402f8c:	add    rsi,0x10
  402f90:	mov    QWORD PTR [rsp+0x50],rsi
  402f95:	call   0x401578
  402f9a:	mov    rcx,rdi
  402f9d:	call   0x402cb0
  402fa2:	nop
  402fa3:	nop    DWORD PTR [rax]
  402fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fb0:	sub    rsp,0x28
  402fb4:	lea    rcx,[rip+0x4075]        # 0x407030
  402fbb:	call   0x4015c8
  402fc0:	lea    rcx,[rip+0xffffffffffffe569]        # 0x401530
  402fc7:	add    rsp,0x28
  402fcb:	jmp    0x401690
  402fd0:	(bad)  
  402fd1:	(bad)  
  402fd2:	(bad)  
  402fd3:	(bad)  
  402fd4:	(bad)  
  402fd5:	(bad)  
  402fd6:	(bad)  
  402fd7:	push   QWORD PTR [rax+0x402f]
	...
  402fe5:	add    BYTE PTR [rax],al
  402fe7:	add    bh,bh
  402fe9:	(bad)  
  402fea:	(bad)  
  402feb:	(bad)  
  402fec:	(bad)  
  402fed:	(bad)  
  402fee:	(bad)  
  402fef:	inc    DWORD PTR [rax]
  402ff1:	add    BYTE PTR [rax],al
  402ff3:	add    BYTE PTR [rax],al
  402ff5:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000403000 <.data>:
  403000:	or     al,BYTE PTR [rax]
	...
  40300e:	add    BYTE PTR [rax],al
  403010:	movabs al,ds:0x4015
  403019:	add    BYTE PTR [rax],al
  40301b:	add    BYTE PTR [rax],al
  40301d:	add    BYTE PTR [rax],al
  40301f:	add    al,dh
  403021:	(bad)  
  403022:	add    BYTE PTR [rax],al
	...
  40302d:	add    BYTE PTR [rax],al
  40302f:	add    bh,bh
  403031:	(bad)  
  403032:	(bad)  
  403033:	(bad)  
  403034:	(bad)  
  403035:	(bad)  
  403036:	(bad)  
  403037:	inc    DWORD PTR [rax]
  403039:	add    BYTE PTR [rax],al
  40303b:	add    BYTE PTR [rax],al
  40303d:	add    BYTE PTR [rax],al
  40303f:	add    bh,bh
	...
  40304d:	add    BYTE PTR [rax],al
  40304f:	add    BYTE PTR [rdx],al
	...
  40305d:	add    BYTE PTR [rax],al
  40305f:	add    bh,bh
  403061:	(bad)  
  403062:	(bad)  
  403063:	inc    DWORD PTR [rax]
	...
  40306d:	add    BYTE PTR [rax],al
  40306f:	add    al,dl
  403071:	sub    eax,DWORD PTR [rax+0x0]
  403074:	add    BYTE PTR [rax],al
  403076:	add    BYTE PTR [rax],al
  403078:	loopne 0x4030a5
  40307a:	add    BYTE PTR [rax],al
  40307d:	add    BYTE PTR [rax],al
  40307f:	add    BYTE PTR [rdx],dh
  403081:	movabs ds:0x2b992ddf,al
  40308a:	add    BYTE PTR [rax],al
  40308c:	add    BYTE PTR [rax],al
  40308e:	add    BYTE PTR [rax],al
  403090:	int    0x5d
  403092:	and    dl,dl
  403094:	data16 (bad) 
  403096:	(bad)  
  403097:	inc    DWORD PTR [rax]
  403099:	add    BYTE PTR [rax],al
  40309b:	add    BYTE PTR [rax],al
  40309d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000404000 <.rdata>:
  404000:	outs   dx,DWORD PTR ds:[rsi]
  404001:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  404005:	and    BYTE PTR gs:[rax+0x67],ch
  404009:	and    BYTE PTR [rcx+0x64],ch
  40400c:	and    BYTE PTR [rax],ch
  40400e:	add    BYTE PTR [rax],al
  404010:	sub    DWORD PTR [rax],esp
  404012:	outs   dx,DWORD PTR fs:[rsi]
  404014:	gs jae 0x404037
  404017:	outs   dx,BYTE PTR ds:[rsi]
  404018:	outs   dx,DWORD PTR ds:[rsi]
  404019:	je     0x40403b
  40401b:	ins    DWORD PTR es:[rdi],dx
  40401c:	(bad)  
  40401d:	je     0x404082
  40401f:	push   0x62696c20
  404024:	outs   dx,DWORD PTR ds:[rsi]
  404025:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  404029:	and    BYTE PTR gs:[rax+0x67],ch
  40402d:	and    BYTE PTR [rcx+0x64],ch
  404030:	and    BYTE PTR [rax],ch
  404032:	add    BYTE PTR [rcx],ch
  404034:	add    BYTE PTR [rax],al
  404036:	add    BYTE PTR [rax],al
  404038:	sub    DWORD PTR [rax],esp
  40403a:	outs   dx,DWORD PTR fs:[rsi]
  40403c:	gs jae 0x40405f
  40403f:	outs   dx,BYTE PTR ds:[rsi]
  404040:	outs   dx,DWORD PTR ds:[rsi]
  404041:	je     0x404063
  404043:	ins    DWORD PTR es:[rdi],dx
  404044:	(bad)  
  404045:	je     0x4040aa
  404047:	push   0x62696c20
  40404c:	outs   dx,DWORD PTR ds:[rsi]
  40404d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  404051:	je     0x4040b8
  404053:	jb     0x4040c5
  404055:	and    BYTE PTR [rax+0x67],ch
  404058:	and    BYTE PTR [rcx+0x64],ch
  40405b:	and    BYTE PTR [rax],ch
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rcx],dh
  404061:	xor    esi,DWORD PTR [rdx]
  404063:	(bad)  
  404064:	gs (bad) 
  404066:	xor    al,0x66
  404068:	xor    eax,0x333961
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rax+0x4075],al
  404075:	add    BYTE PTR [rax],al
  404077:	add    BYTE PTR [rax+0x4070],al
  40407d:	add    BYTE PTR [rax],al
  40407f:	add    BYTE PTR [rax+0x4019],ah
	...
  40408d:	add    BYTE PTR [rax],al
  40408f:	add    BYTE PTR [rcx+0x72],al
  404092:	addr32 jne 0x404102
  404095:	outs   dx,BYTE PTR gs:[rsi]
  404097:	je     0x4040b9
  404099:	outs   dx,DWORD PTR fs:[rsi]
  40409b:	ins    DWORD PTR es:[rdi],dx
  40409c:	(bad)  
  40409d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4040a4:	jb     0x4040c6
  4040a6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4040aa:	rex.B
  4040ab:	rex.WB
  4040ac:	rex.WRX sub QWORD PTR [rax],r8
  4040af:	rex.B jb 0x404119
  4040b2:	jne    0x404121
  4040b4:	outs   dx,BYTE PTR gs:[rsi]
  4040b6:	je     0x4040d8
  4040b8:	jae    0x404123
  4040ba:	outs   dx,BYTE PTR ds:[rsi]
  4040bb:	addr32 jne 0x40412a
  4040be:	(bad)  
  4040bf:	jb     0x40412a
  4040c1:	je     0x40413c
  4040c3:	and    BYTE PTR [rax],ch
  4040c5:	push   rbx
  4040c6:	rex.WB
  4040c7:	rex.RXB
  4040c8:	rex.WRX sub QWORD PTR [rax],r8
  4040cb:	add    BYTE PTR [rax],al
  4040cd:	add    BYTE PTR [rax],al
  4040cf:	add    BYTE PTR [rdi+0x76],cl
  4040d2:	gs jb  0x40413b
  4040d5:	ins    BYTE PTR es:[rdi],dx
  4040d6:	outs   dx,DWORD PTR ds:[rsi]
  4040d7:	ja     0x4040f9
  4040d9:	jb     0x40413c
  4040db:	outs   dx,BYTE PTR ds:[rsi]
  4040dc:	and    BYTE PTR gs:[ebp+0x72],ah
  4040e1:	jb     0x404152
  4040e3:	jb     0x404105
  4040e5:	sub    BYTE PTR [rdi+0x56],cl
  4040e8:	rex.RB push r10
  4040ea:	rex.RX
  4040eb:	rex.WR
  4040ec:	rex.WRXB push r15
  4040ee:	sub    DWORD PTR [rax],eax
  4040f0:	push   rax
  4040f1:	(bad)  
  4040f2:	jb     0x404168
  4040f4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4040fb:	jae    0x40411d
  4040fd:	outs   dx,DWORD PTR ds:[rsi]
  4040fe:	data16 and BYTE PTR [rbx+0x69],dh
  404102:	outs   dx,BYTE PTR ds:[esi]
  404104:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40410b:	and    BYTE PTR gs:[rax],ch
  40410e:	push   rax
  40410f:	rex.WR
  404110:	rex.WRXB push r11
  404112:	push   rbx
  404113:	sub    DWORD PTR [rax],eax
  404115:	add    BYTE PTR [rax],al
  404117:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40411b:	(bad)  
  40411c:	ins    BYTE PTR es:[rdi],dx
  40411d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  404121:	jae    0x404143
  404123:	outs   dx,DWORD PTR ds:[rsi]
  404124:	data16 and BYTE PTR [rbx+0x69],dh
  404128:	outs   dx,BYTE PTR ds:[esi]
  40412a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  404131:	and    BYTE PTR gs:[rax],ch
  404134:	push   rsp
  404135:	rex.WR
  404136:	rex.WRXB push r11
  404138:	push   rbx
  404139:	sub    DWORD PTR [rax],eax
  40413b:	add    BYTE PTR [rax],al
  40413d:	add    BYTE PTR [rax],al
  40413f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  404143:	and    BYTE PTR [rdx+0x65],dh
  404146:	jae    0x4041bd
  404148:	ins    BYTE PTR es:[rdi],dx
  404149:	je     0x40416b
  40414b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  404152:	jae    0x4041c1
  404154:	(bad)  
  404155:	ins    BYTE PTR es:[rdi],dx
  404156:	ins    BYTE PTR es:[rdi],dx
  404157:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40415b:	(bad)  
  40415c:	and    BYTE PTR gs:[rdx+0x65],dh
  404160:	jo     0x4041d4
  404162:	gs jae 0x4041ca
  404165:	outs   dx,BYTE PTR ds:[rsi]
  404166:	je     0x4041cd
  404168:	and    BYTE PTR fs:[rax],ch
  40416b:	push   rbp
  40416c:	rex.WRX
  40416d:	rex.R
  40416e:	rex.RB push r10
  404170:	rex.RX
  404171:	rex.WR
  404172:	rex.WRXB push r15
  404174:	sub    DWORD PTR [rax],eax
  404176:	push   rbp
  404177:	outs   dx,BYTE PTR ds:[rsi]
  404178:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40417c:	outs   dx,BYTE PTR ds:[rsi]
  40417d:	and    BYTE PTR [rbp+0x72],ah
  404180:	jb     0x4041f1
  404182:	jb     0x404184
  404184:	add    BYTE PTR [rax],al
  404186:	add    BYTE PTR [rax],al
  404188:	pop    rdi
  404189:	ins    DWORD PTR es:[rdi],dx
  40418a:	(bad)  
  40418b:	je     0x4041f5
  40418d:	gs jb  0x404202
  404190:	sub    BYTE PTR [rcx],ch
  404192:	cmp    ah,BYTE PTR [rax]
  404194:	and    eax,0x6e692073
  404199:	and    BYTE PTR [rip+0x67252873],ah        # 0x67656a12
  40419f:	sub    al,0x20
  4041a1:	and    eax,0x20202967
  4041a6:	sub    BYTE PTR [rdx+0x65],dh
  4041a9:	je     0x404221
  4041ab:	(bad)  
  4041ac:	ins    BYTE PTR es:[rdi],dx
  4041ad:	cmp    eax,0xa296725
  4041b2:	add    BYTE PTR [rax],al
  4041b4:	mov    esp,0xfdffffd9
  4041b9:	fdivr  st,st(7)
  4041bb:	jmp    FWORD PTR [rcx+rbx*8-0x1]
  4041bf:	(bad)  
  4041c0:	jl     0x40419b
  4041c2:	(bad)  
  4041c3:	dec    DWORD PTR [rcx+rbx*8-0x26630001]
  4041ca:	(bad)  
  4041cb:	jmp    FWORD PTR [rcx+rbx*8+0x694dffff]
  4041d2:	outs   dx,BYTE PTR ds:[rsi]
  4041d3:	addr32 ja 0x404203
  4041d6:	ja     0x40420e
  4041d8:	xor    al,0x20
  4041da:	jb     0x404251
  4041dc:	outs   dx,BYTE PTR ds:[rsi]
  4041dd:	je     0x404248
  4041df:	ins    DWORD PTR es:[rdi],dx
  4041e0:	and    BYTE PTR gs:[rsi+0x61],ah
  4041e4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4041ec:	add    BYTE PTR [rax],al
  4041ee:	add    BYTE PTR [rax],al
  4041f0:	rex.B
  4041f1:	fs fs jb 0x40425a
  4041f5:	jae    0x40426a
  4041f7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8626d
  4041fd:	jae    0x40421f
  4041ff:	outs   dx,BYTE PTR ds:[rsi]
  404200:	outs   dx,DWORD PTR ds:[rsi]
  404201:	and    BYTE PTR [rcx+0x6d],ch
  404204:	(bad)  
  404205:	addr32 gs sub eax,0x74636573
  40420c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  404213:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40421a:	jne    0x404281
  40421c:	jb     0x404297
  40421e:	and    BYTE PTR [rsi+0x61],ah
  404221:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  404229:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a26293
  40422f:	je     0x404296
  404231:	jae    0x404253
  404233:	(bad)  
  404234:	je     0x404256
  404236:	(bad)  
  404237:	fs fs jb 0x4042a0
  40423b:	jae    0x4042b0
  40423d:	and    BYTE PTR [rip+0x70],ah        # 0x4042b3
  404243:	add    BYTE PTR [rax],al
  404245:	add    BYTE PTR [rax],al
  404247:	add    BYTE PTR [rax],ah
  404249:	and    BYTE PTR [rsi+0x69],dl
  40424c:	jb     0x4042c2
  40424e:	jne    0x4042b1
  404250:	ins    BYTE PTR es:[rdi],dx
  404251:	push   rax
  404252:	jb     0x4042c3
  404254:	je     0x4042bb
  404256:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40425a:	(bad)  
  40425b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  404263:	push   0x646f6320
  404268:	and    BYTE PTR gs:[rax],dh
  40426b:	js     0x404292
  40426d:	js     0x40426f
  40426f:	add    BYTE PTR [rax],ah
  404271:	and    BYTE PTR [rbp+0x6e],dl
  404274:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  404278:	outs   dx,BYTE PTR ds:[rsi]
  404279:	and    BYTE PTR [rax+0x73],dh
  40427c:	gs jne 0x4042e3
  40427f:	outs   dx,DWORD PTR ds:[rsi]
  404280:	and    BYTE PTR [rdx+0x65],dh
  404283:	ins    BYTE PTR es:[rdi],dx
  404284:	outs   dx,DWORD PTR ds:[rsi]
  404285:	movsxd esp,DWORD PTR [rcx+0x74]
  404288:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40428f:	je     0x404300
  404291:	movsxd ebp,DWORD PTR [rdi+0x6c]
  404294:	and    BYTE PTR [rsi+0x65],dh
  404297:	jb     0x40430c
  404299:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4042a0:	or     al,BYTE PTR [rax]
  4042a2:	add    BYTE PTR [rax],al
  4042a4:	add    BYTE PTR [rax],al
  4042a6:	add    BYTE PTR [rax],al
  4042a8:	and    BYTE PTR [rax],ah
  4042aa:	push   rbp
  4042ab:	outs   dx,BYTE PTR ds:[rsi]
  4042ac:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4042b0:	outs   dx,BYTE PTR ds:[rsi]
  4042b1:	and    BYTE PTR [rax+0x73],dh
  4042b4:	gs jne 0x40431b
  4042b7:	outs   dx,DWORD PTR ds:[rsi]
  4042b8:	and    BYTE PTR [rdx+0x65],dh
  4042bb:	ins    BYTE PTR es:[rdi],dx
  4042bc:	outs   dx,DWORD PTR ds:[rsi]
  4042bd:	movsxd esp,DWORD PTR [rcx+0x74]
  4042c0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4042c7:	and    BYTE PTR [rbx+0x69],dh
  4042ca:	jp     0x404331
  4042cc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a7136
	...
  4042de:	add    BYTE PTR [rax],al
  4042e0:	cs jo  0x404347
  4042e3:	(bad)  
  4042e4:	je     0x404347
	...
  4042ee:	add    BYTE PTR [rax],al
  4042f0:	nop
  4042f1:	sbb    eax,0x0
	...
  4042fe:	add    BYTE PTR [rax],al
  404300:	push   rax
  404301:	xor    BYTE PTR [rax+0x0],al
	...
  404310:	(bad)  
  404311:	xor    BYTE PTR [rax+0x0],al
	...
  404320:	xor    al,0x93
  404322:	add    BYTE PTR [rax],al
	...
  40432d:	add    BYTE PTR [rax],al
  40432f:	add    BYTE PTR [rdx*4+0x40],ch
	...
  40433e:	add    BYTE PTR [rax],al
  404340:	shr    BYTE PTR [rdi],1
  404342:	add    BYTE PTR [rax],al
	...
  40434d:	add    BYTE PTR [rax],al
  40434f:	add    BYTE PTR [rax+rcx*2+0x40],ah
	...
  40435e:	add    BYTE PTR [rax],al
  404360:	or     BYTE PTR [rax+0x40],0x0
	...
  404370:	add    BYTE PTR [rax+0x40],0x0
	...
  404380:	add    BYTE PTR [rax],al
  404382:	add    BYTE PTR [rax],al
	...
  40438d:	add    BYTE PTR [rax],al
  40438f:	add    BYTE PTR [rsp+rdx*4],dh
  404392:	add    BYTE PTR [rax],al
	...
  40439d:	add    BYTE PTR [rax],al
  40439f:	add    BYTE PTR [rsp+rdx*4+0x40],bl
	...
  4043af:	add    BYTE PTR [rsp+rdx*4+0x40],dh
	...
  4043bf:	add    BYTE PTR [rsp+rdx*4+0x40],cl
	...
  4043ce:	add    BYTE PTR [rax],al
  4043d0:	shl    BYTE PTR [rsi+0x40],0x0
	...
  4043e0:	sub    BYTE PTR [rdx+0x40],bh
	...
  4043ef:	add    BYTE PTR [rax],ah
  4043f1:	jp     0x404433
	...
  4043ff:	add    BYTE PTR [rax],dl
  404401:	jp     0x404443
	...
  40440f:	add    BYTE PTR [rax],bl
  404411:	jp     0x404453
	...
  40441f:	add    BYTE PTR [rax],al
  404421:	movabs al,ds:0x40
  40442a:	add    BYTE PTR [rax],al
  40442c:	add    BYTE PTR [rax],al
  40442e:	add    BYTE PTR [rax],al
  404430:	adc    BYTE PTR [rax+0x40],ah
	...
  40443e:	add    BYTE PTR [rax],al
  404440:	sbb    BYTE PTR [rax+0x40],ah
	...
  40444e:	add    BYTE PTR [rax],al
  404450:	xor    BYTE PTR [rax+0x40],ah
	...
  40445e:	add    BYTE PTR [rax],al
  404460:	push   rax
  404461:	jo     0x4044a3
	...
  40446f:	add    BYTE PTR [rax+0x4076],dl
	...
  40447d:	add    BYTE PTR [rax],al
  40447f:	add    BYTE PTR [rax],dh
  404481:	and    eax,DWORD PTR [rax+0x0]
	...
  404490:	sbb    BYTE PTR [rdx],0x40
	...
  40449f:	add    BYTE PTR [rax+0x76],al
  4044a2:	add    BYTE PTR [rax],al
	...
  4044ad:	add    BYTE PTR [rax],al
  4044af:	add    BYTE PTR [rax+0x76],dh
  4044b2:	add    BYTE PTR [rax],al
	...
  4044bd:	add    BYTE PTR [rax],al
  4044bf:	add    BYTE PTR [rax+0x70],ah
  4044c2:	add    BYTE PTR [rax],al
	...
  4044cd:	add    BYTE PTR [rax],al
  4044cf:	add    BYTE PTR [rax+0x76],bl
  4044d2:	add    BYTE PTR [rax],al
	...
  4044dd:	add    BYTE PTR [rax],al
  4044df:	add    BYTE PTR [rsi+rsi*2+0x40],dl
	...
  4044ef:	add    BYTE PTR [rax+0x76],dl
  4044f2:	add    BYTE PTR [rax],al
	...
  4044fd:	add    BYTE PTR [rax],al
  4044ff:	add    BYTE PTR [rdi+0x43],al
  404502:	rex.XB cmp spl,BYTE PTR [r8]
  404505:	sub    BYTE PTR [rdi+0x4e],al
  404508:	push   rbp
  404509:	sub    DWORD PTR [rax],esp
  40450b:	xor    al,0x2e
  40450d:	cmp    DWORD PTR [rsi],ebp
  40450f:	xor    al,0x0
	...
  40451d:	add    BYTE PTR [rax],al
  40451f:	add    BYTE PTR [rdi+0x43],al
  404522:	rex.XB cmp spl,BYTE PTR [r8]
  404525:	sub    BYTE PTR [rdi+0x4e],al
  404528:	push   rbp
  404529:	sub    DWORD PTR [rax],esp
  40452b:	xor    al,0x2e
  40452d:	cmp    DWORD PTR [rsi],ebp
  40452f:	xor    al,0x0
	...
  40453d:	add    BYTE PTR [rax],al
  40453f:	add    BYTE PTR [rdi+0x43],al
  404542:	rex.XB cmp spl,BYTE PTR [r8]
  404545:	sub    BYTE PTR [rdi+0x4e],al
  404548:	push   rbp
  404549:	sub    DWORD PTR [rax],esp
  40454b:	xor    al,0x2e
  40454d:	cmp    DWORD PTR [rsi],ebp
  40454f:	xor    al,0x0
	...
  40455d:	add    BYTE PTR [rax],al
  40455f:	add    BYTE PTR [rdi+0x43],al
  404562:	rex.XB cmp spl,BYTE PTR [r8]
  404565:	sub    BYTE PTR [rdi+0x4e],al
  404568:	push   rbp
  404569:	sub    DWORD PTR [rax],esp
  40456b:	xor    al,0x2e
  40456d:	cmp    DWORD PTR [rsi],ebp
  40456f:	xor    al,0x0
	...
  40457d:	add    BYTE PTR [rax],al
  40457f:	add    BYTE PTR [rdi+0x43],al
  404582:	rex.XB cmp spl,BYTE PTR [r8]
  404585:	sub    BYTE PTR [rdi+0x4e],al
  404588:	push   rbp
  404589:	sub    DWORD PTR [rax],esp
  40458b:	xor    al,0x2e
  40458d:	cmp    DWORD PTR [rsi],ebp
  40458f:	xor    al,0x0
	...
  40459d:	add    BYTE PTR [rax],al
  40459f:	add    BYTE PTR [rdi+0x43],al
  4045a2:	rex.XB cmp spl,BYTE PTR [r8]
  4045a5:	sub    BYTE PTR [rdi+0x4e],al
  4045a8:	push   rbp
  4045a9:	sub    DWORD PTR [rax],esp
  4045ab:	xor    al,0x2e
  4045ad:	cmp    DWORD PTR [rsi],ebp
  4045af:	xor    al,0x0
	...
  4045bd:	add    BYTE PTR [rax],al
  4045bf:	add    BYTE PTR [rdi+0x43],al
  4045c2:	rex.XB cmp spl,BYTE PTR [r8]
  4045c5:	sub    BYTE PTR [rdi+0x4e],al
  4045c8:	push   rbp
  4045c9:	sub    DWORD PTR [rax],esp
  4045cb:	xor    al,0x2e
  4045cd:	cmp    DWORD PTR [rsi],ebp
  4045cf:	xor    al,0x0
	...
  4045dd:	add    BYTE PTR [rax],al
  4045df:	add    BYTE PTR [rdi+0x43],al
  4045e2:	rex.XB cmp spl,BYTE PTR [r8]
  4045e5:	sub    BYTE PTR [rdi+0x4e],al
  4045e8:	push   rbp
  4045e9:	sub    DWORD PTR [rax],esp
  4045eb:	xor    al,0x2e
  4045ed:	cmp    DWORD PTR [rsi],ebp
  4045ef:	xor    al,0x0
	...
  4045fd:	add    BYTE PTR [rax],al
  4045ff:	add    BYTE PTR [rdi+0x43],al
  404602:	rex.XB cmp spl,BYTE PTR [r8]
  404605:	sub    BYTE PTR [rdi+0x4e],al
  404608:	push   rbp
  404609:	sub    DWORD PTR [rax],esp
  40460b:	xor    al,0x2e
  40460d:	cmp    DWORD PTR [rsi],ebp
  40460f:	xor    al,0x0
	...
  40461d:	add    BYTE PTR [rax],al
  40461f:	add    BYTE PTR [rdi+0x43],al
  404622:	rex.XB cmp spl,BYTE PTR [r8]
  404625:	sub    BYTE PTR [rdi+0x4e],al
  404628:	push   rbp
  404629:	sub    DWORD PTR [rax],esp
  40462b:	xor    al,0x2e
  40462d:	cmp    DWORD PTR [rsi],ebp
  40462f:	xor    al,0x0
	...
  40463d:	add    BYTE PTR [rax],al
  40463f:	add    BYTE PTR [rdi+0x43],al
  404642:	rex.XB cmp spl,BYTE PTR [r8]
  404645:	sub    BYTE PTR [rdi+0x4e],al
  404648:	push   rbp
  404649:	sub    DWORD PTR [rax],esp
  40464b:	xor    al,0x2e
  40464d:	cmp    DWORD PTR [rsi],ebp
  40464f:	xor    al,0x0
	...
  40465d:	add    BYTE PTR [rax],al
  40465f:	add    BYTE PTR [rdi+0x43],al
  404662:	rex.XB cmp spl,BYTE PTR [r8]
  404665:	sub    BYTE PTR [rdi+0x4e],al
  404668:	push   rbp
  404669:	sub    DWORD PTR [rax],esp
  40466b:	xor    al,0x2e
  40466d:	cmp    DWORD PTR [rsi],ebp
  40466f:	xor    al,0x0
	...
  40467d:	add    BYTE PTR [rax],al
  40467f:	add    BYTE PTR [rdi+0x43],al
  404682:	rex.XB cmp spl,BYTE PTR [r8]
  404685:	sub    BYTE PTR [rdi+0x4e],al
  404688:	push   rbp
  404689:	sub    DWORD PTR [rax],esp
  40468b:	xor    al,0x2e
  40468d:	cmp    DWORD PTR [rsi],ebp
  40468f:	xor    al,0x0
	...
  40469d:	add    BYTE PTR [rax],al
  40469f:	add    BYTE PTR [rdi+0x43],al
  4046a2:	rex.XB cmp spl,BYTE PTR [r8]
  4046a5:	sub    BYTE PTR [rdi+0x4e],al
  4046a8:	push   rbp
  4046a9:	sub    DWORD PTR [rax],esp
  4046ab:	xor    al,0x2e
  4046ad:	cmp    DWORD PTR [rsi],ebp
  4046af:	xor    al,0x0
	...
  4046bd:	add    BYTE PTR [rax],al
  4046bf:	add    BYTE PTR [rdi+0x43],al
  4046c2:	rex.XB cmp spl,BYTE PTR [r8]
  4046c5:	sub    BYTE PTR [rdi+0x4e],al
  4046c8:	push   rbp
  4046c9:	sub    DWORD PTR [rax],esp
  4046cb:	xor    al,0x2e
  4046cd:	cmp    DWORD PTR [rsi],ebp
  4046cf:	xor    al,0x0
	...
  4046dd:	add    BYTE PTR [rax],al
  4046df:	add    BYTE PTR [rdi+0x43],al
  4046e2:	rex.XB cmp spl,BYTE PTR [r8]
  4046e5:	sub    BYTE PTR [rdi+0x4e],al
  4046e8:	push   rbp
  4046e9:	sub    DWORD PTR [rax],esp
  4046eb:	xor    al,0x2e
  4046ed:	cmp    DWORD PTR [rsi],ebp
  4046ef:	xor    al,0x0
	...
  4046fd:	add    BYTE PTR [rax],al
  4046ff:	add    BYTE PTR [rdi+0x43],al
  404702:	rex.XB cmp spl,BYTE PTR [r8]
  404705:	sub    BYTE PTR [rdi+0x4e],al
  404708:	push   rbp
  404709:	sub    DWORD PTR [rax],esp
  40470b:	xor    al,0x2e
  40470d:	cmp    DWORD PTR [rsi],ebp
  40470f:	xor    al,0x0
	...
  40471d:	add    BYTE PTR [rax],al
  40471f:	add    BYTE PTR [rdi+0x43],al
  404722:	rex.XB cmp spl,BYTE PTR [r8]
  404725:	sub    BYTE PTR [rdi+0x4e],al
  404728:	push   rbp
  404729:	sub    DWORD PTR [rax],esp
  40472b:	xor    al,0x2e
  40472d:	cmp    DWORD PTR [rsi],ebp
  40472f:	xor    al,0x0
	...
  40473d:	add    BYTE PTR [rax],al
  40473f:	add    BYTE PTR [rdi+0x43],al
  404742:	rex.XB cmp spl,BYTE PTR [r8]
  404745:	sub    BYTE PTR [rdi+0x4e],al
  404748:	push   rbp
  404749:	sub    DWORD PTR [rax],esp
  40474b:	xor    al,0x2e
  40474d:	cmp    DWORD PTR [rsi],ebp
  40474f:	xor    al,0x0
	...
  40475d:	add    BYTE PTR [rax],al
  40475f:	add    BYTE PTR [rdi+0x43],al
  404762:	rex.XB cmp spl,BYTE PTR [r8]
  404765:	sub    BYTE PTR [rdi+0x4e],al
  404768:	push   rbp
  404769:	sub    DWORD PTR [rax],esp
  40476b:	xor    al,0x2e
  40476d:	cmp    DWORD PTR [rsi],ebp
  40476f:	xor    al,0x0
	...
  40477d:	add    BYTE PTR [rax],al
  40477f:	add    BYTE PTR [rdi+0x43],al
  404782:	rex.XB cmp spl,BYTE PTR [r8]
  404785:	sub    BYTE PTR [rdi+0x4e],al
  404788:	push   rbp
  404789:	sub    DWORD PTR [rax],esp
  40478b:	xor    al,0x2e
  40478d:	cmp    DWORD PTR [rsi],ebp
  40478f:	xor    al,0x0
	...
  40479d:	add    BYTE PTR [rax],al
  40479f:	add    BYTE PTR [rdi+0x43],al
  4047a2:	rex.XB cmp spl,BYTE PTR [r8]
  4047a5:	sub    BYTE PTR [rdi+0x4e],al
  4047a8:	push   rbp
  4047a9:	sub    DWORD PTR [rax],esp
  4047ab:	xor    al,0x2e
  4047ad:	cmp    DWORD PTR [rsi],ebp
  4047af:	xor    al,0x0
	...
  4047bd:	add    BYTE PTR [rax],al
  4047bf:	add    BYTE PTR [rdi+0x43],al
  4047c2:	rex.XB cmp spl,BYTE PTR [r8]
  4047c5:	sub    BYTE PTR [rdi+0x4e],al
  4047c8:	push   rbp
  4047c9:	sub    DWORD PTR [rax],esp
  4047cb:	xor    al,0x2e
  4047cd:	cmp    DWORD PTR [rsi],ebp
  4047cf:	xor    al,0x0
	...
  4047dd:	add    BYTE PTR [rax],al
  4047df:	add    BYTE PTR [rdi+0x43],al
  4047e2:	rex.XB cmp spl,BYTE PTR [r8]
  4047e5:	sub    BYTE PTR [rdi+0x4e],al
  4047e8:	push   rbp
  4047e9:	sub    DWORD PTR [rax],esp
  4047eb:	xor    al,0x2e
  4047ed:	cmp    DWORD PTR [rsi],ebp
  4047ef:	xor    al,0x0
	...
  4047fd:	add    BYTE PTR [rax],al
  4047ff:	add    BYTE PTR [rdi+0x43],al
  404802:	rex.XB cmp spl,BYTE PTR [r8]
  404805:	sub    BYTE PTR [rdi+0x4e],al
  404808:	push   rbp
  404809:	sub    DWORD PTR [rax],esp
  40480b:	xor    al,0x2e
  40480d:	cmp    DWORD PTR [rsi],ebp
  40480f:	xor    al,0x0
	...
  40481d:	add    BYTE PTR [rax],al
  40481f:	add    BYTE PTR [rdi+0x43],al
  404822:	rex.XB cmp spl,BYTE PTR [r8]
  404825:	sub    BYTE PTR [rdi+0x4e],al
  404828:	push   rbp
  404829:	sub    DWORD PTR [rax],esp
  40482b:	xor    al,0x2e
  40482d:	cmp    DWORD PTR [rsi],ebp
  40482f:	xor    al,0x0
	...
  40483d:	add    BYTE PTR [rax],al
  40483f:	add    BYTE PTR [rdi+0x43],al
  404842:	rex.XB cmp spl,BYTE PTR [r8]
  404845:	sub    BYTE PTR [rdi+0x4e],al
  404848:	push   rbp
  404849:	sub    DWORD PTR [rax],esp
  40484b:	xor    al,0x2e
  40484d:	cmp    DWORD PTR [rsi],ebp
  40484f:	xor    al,0x0
	...
  40485d:	add    BYTE PTR [rax],al
  40485f:	add    BYTE PTR [rdi+0x43],al
  404862:	rex.XB cmp spl,BYTE PTR [r8]
  404865:	sub    BYTE PTR [rdi+0x4e],al
  404868:	push   rbp
  404869:	sub    DWORD PTR [rax],esp
  40486b:	xor    al,0x2e
  40486d:	cmp    DWORD PTR [rsi],ebp
  40486f:	xor    al,0x0
	...
  404885:	add    BYTE PTR [rax],al
  404887:	add    BYTE PTR [rcx],al
  404889:	add    BYTE PTR [rax],al
  40488b:	add    BYTE PTR [rdx*4+0x43300000],ch
  404892:	add    BYTE PTR [rax],al
  404894:	add    BYTE PTR [rax],al
  404897:	add    BYTE PTR [rbx+rdx*4],dh
  40489a:	add    BYTE PTR [rax],al
  40489c:	and    BYTE PTR [rbx+0x0],al
  40489f:	add    BYTE PTR [rax+0x0],al
	...

Disassembly of section .pdata:

0000000000405000 <.pdata>:
  405000:	add    BYTE PTR [rax],dl
  405002:	add    BYTE PTR [rax],al
  405004:	add    DWORD PTR [rax],edx
  405006:	add    BYTE PTR [rax],al
  405008:	add    BYTE PTR [rax+0x0],ah
  40500b:	add    BYTE PTR [rax],dl
  40500d:	adc    BYTE PTR [rax],al
  40500f:	add    BYTE PTR [rcx+0x11],dl
  405012:	add    BYTE PTR [rax],al
  405014:	add    al,0x60
  405016:	add    BYTE PTR [rax],al
  405018:	(bad)  
  405019:	adc    DWORD PTR [rax],eax
  40501b:	add    BYTE PTR [rsi+0xc000011],ch
  405021:	(bad)  
  405022:	add    BYTE PTR [rax],al
  405024:	mov    al,0x11
  405026:	add    BYTE PTR [rax],al
  405028:	(bad)  
  405029:	adc    al,0x0
  40502b:	add    BYTE PTR [rax+riz*2],dl
  40502e:	add    BYTE PTR [rax],al
  405030:	rcl    BYTE PTR [rax+rax*1],1
  405033:	add    dl,dh
  405035:	adc    al,0x0
  405037:	add    BYTE PTR [rax],ch
  405039:	(bad)  
  40503a:	add    BYTE PTR [rax],al
  40503c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15625042
  405042:	add    BYTE PTR [rax],al
  405044:	rex.W (bad) 
  405046:	add    BYTE PTR [rax],al
  405048:	xor    BYTE PTR [rip+0x153c0000],dl        # 0x157c504e
  40504e:	add    BYTE PTR [rax],al
  405050:	push   0x40000060
  405055:	adc    eax,0x15620000
  40505a:	add    BYTE PTR [rax],al
  40505c:	enter  0x60,0x0
  405060:	loopne 0x405077
  405062:	add    BYTE PTR [rax],al
  405064:	xchg   DWORD PTR [rsi],edx
  405066:	add    BYTE PTR [rax],al
  405068:	shl    BYTE PTR [rax+0x0],1
  40506b:	add    BYTE PTR [rax-0x56ffffea],dl
  405071:	(bad)  
  405072:	add    BYTE PTR [rax],al
  405074:	fsub   DWORD PTR [rax+0x0]
  405077:	add    BYTE PTR [rax-0x1affffea],dh
  40507d:	(bad)  
  40507e:	add    BYTE PTR [rax],al
  405080:	loopne 0x4050e2
  405082:	add    BYTE PTR [rax],al
  405084:	lock (bad) 
  405086:	add    BYTE PTR [rax],al
  405088:	rex.RB (bad) 
  40508a:	add    BYTE PTR [rax],al
  40508c:	call   0x504050f1
  405091:	(bad)  
  405092:	add    BYTE PTR [rax],al
  405094:	ins    BYTE PTR es:[rdi],dx
  405095:	(bad)  
  405096:	add    BYTE PTR [rax],al
  405098:	hlt    
  405099:	(bad)  
  40509a:	add    BYTE PTR [rax],al
  40509c:	jo     0x4050b5
  40509e:	add    BYTE PTR [rax],al
  4050a0:	jp     0x4050b9
  4050a2:	add    BYTE PTR [rax],al
  4050a4:	clc    
  4050a5:	(bad)  
  4050a6:	add    BYTE PTR [rax],al
  4050a8:	adc    BYTE PTR [rdi],0x0
  4050ab:	add    BYTE PTR [rbx-0x3ffffe9],al
  4050b1:	(bad)  
  4050b2:	add    BYTE PTR [rax],al
  4050b4:	nop
  4050b5:	(bad)  
  4050b6:	add    BYTE PTR [rax],al
  4050b8:	data16 sbb BYTE PTR [rax],al
  4050bb:	add    BYTE PTR [rax],al
  4050bd:	(bad)  
  4050be:	add    BYTE PTR [rax],al
  4050c0:	jo     0x4050da
  4050c2:	add    BYTE PTR [rax],al
  4050c4:	imul   ebx,DWORD PTR [rcx],0x0
  4050c7:	add    BYTE PTR [rax],dl
  4050c9:	(bad)  
  4050ca:	add    BYTE PTR [rax],al
  4050cc:	jo     0x4050e7
  4050ce:	add    BYTE PTR [rax],al
  4050d0:	lahf   
  4050d1:	sbb    DWORD PTR [rax],eax
  4050d3:	add    BYTE PTR [rax],ah
  4050d5:	(bad)  
  4050d6:	add    BYTE PTR [rax],al
  4050d8:	movabs al,ds:0x2800001a09000019
  4050e1:	(bad)  
  4050e2:	add    BYTE PTR [rax],al
  4050e4:	adc    BYTE PTR [rdx],bl
  4050e6:	add    BYTE PTR [rax],al
  4050e8:	adc    ebx,DWORD PTR [rdx]
  4050ea:	add    BYTE PTR [rax],al
  4050ec:	xor    al,0x61
  4050ee:	add    BYTE PTR [rax],al
  4050f0:	and    BYTE PTR [rdx],bl
  4050f2:	add    BYTE PTR [rax],al
  4050f4:	(bad)  
  4050f5:	sbb    al,BYTE PTR [rax]
  4050f7:	add    BYTE PTR [rax],bh
  4050f9:	(bad)  
  4050fa:	add    BYTE PTR [rax],al
  4050fc:	jo     0x405118
  4050fe:	add    BYTE PTR [rax],al
  405100:	jl     0x40511c
  405102:	add    BYTE PTR [rax],al
  405104:	rex (bad) 
  405106:	add    BYTE PTR [rax],al
  405108:	sbb    BYTE PTR [rdx],0x0
  40510b:	add    BYTE PTR [rbx+rbx*1+0x0],bh
  40510f:	add    BYTE PTR [rcx+riz*2+0x0],al
  405113:	add    BYTE PTR [rax-0x7cffffe5],al
  405119:	sbb    eax,DWORD PTR [rax]
  40511b:	add    BYTE PTR [rcx+riz*2+0x0],bl
  40511f:	add    BYTE PTR [rax-0x6bffffe5],dl
  405125:	sbb    eax,DWORD PTR [rax]
  405127:	add    BYTE PTR [rax+0x61],ah
  40512a:	add    BYTE PTR [rax],al
  40512c:	movabs al,ds:0x6400001ba400001b
  405135:	(bad)  
  405136:	add    BYTE PTR [rax],al
  405138:	mov    al,0x1b
  40513a:	add    BYTE PTR [rax],al
  40513c:	adc    DWORD PTR [rax+rax*1],ebx
  40513f:	add    BYTE PTR [rax+0x61],ch
  405142:	add    BYTE PTR [rax],al
  405144:	and    BYTE PTR [rax+rax*1],bl
  405147:	add    BYTE PTR [rdx+0x7400001d],al
  40514d:	(bad)  
  40514e:	add    BYTE PTR [rax],al
  405150:	nop
  405151:	sbb    eax,0x20890000
  405156:	add    BYTE PTR [rax],al
  405158:	mov    BYTE PTR [rcx+0x0],ah
  40515b:	add    BYTE PTR [rax+0x36000020],dl
  405161:	and    al,BYTE PTR [rax]
  405163:	add    BYTE PTR [rax+0x40000061],ah
  405169:	and    al,BYTE PTR [rax]
  40516b:	add    BYTE PTR [rbx+riz*1],ch
  40516e:	add    BYTE PTR [rax],al
  405170:	test   al,0x61
  405172:	add    BYTE PTR [rax],al
  405174:	xor    BYTE PTR [rbx],ah
  405176:	add    BYTE PTR [rax],al
  405178:	call   0xffffffffb84051a1
  40517d:	(bad)  
  40517e:	add    BYTE PTR [rax],al
  405180:	lock and al,0x0
  405183:	add    BYTE PTR [rbp+0x25],bl
  405186:	add    BYTE PTR [rax],al
  405188:	shl    BYTE PTR [rcx+0x0],0x0
  40518c:	(bad)  
  40518d:	and    eax,0x25df0000
  405192:	add    BYTE PTR [rax],al
  405194:	shl    BYTE PTR [rcx+0x0],1
  405197:	add    al,ah
  405199:	and    eax,0x267f0000
  40519e:	add    BYTE PTR [rax],al
  4051a0:	fsub   QWORD PTR [rcx+0x0]
  4051a3:	add    BYTE PTR [rax+0x5a000026],al
  4051a9:	(bad)  
  4051aa:	add    BYTE PTR [rax],al
  4051ac:	in     al,0x61
  4051ae:	add    BYTE PTR [rax],al
  4051b0:	(bad)  
  4051b1:	(bad)  
  4051b2:	add    BYTE PTR [rax],al
  4051b4:	jg     0x4051dd
  4051b6:	add    BYTE PTR [rax],al
  4051b8:	in     al,dx
  4051b9:	(bad)  
  4051ba:	add    BYTE PTR [rax],al
  4051bc:	and    BYTE PTR [rdi],0x0
  4051bf:	add    BYTE PTR [rdx-0xfffffd9],dl
  4051c5:	(bad)  
  4051c6:	add    BYTE PTR [rax],al
  4051c8:	movabs al,ds:0xf4000027e5000027
  4051d1:	(bad)  
  4051d2:	add    BYTE PTR [rax],al
  4051d4:	lock (bad) 
  4051d6:	add    BYTE PTR [rax],al
  4051d8:	mov    gs,WORD PTR [rax]
  4051da:	add    BYTE PTR [rax],al
  4051dc:	clc    
  4051dd:	(bad)  
  4051de:	add    BYTE PTR [rax],al
  4051e0:	nop
  4051e1:	sub    BYTE PTR [rax],al
  4051e3:	add    bl,dl
  4051e5:	sub    BYTE PTR [rax],al
  4051e7:	add    BYTE PTR [rdx+riz*2],al
  4051ea:	add    BYTE PTR [rax],al
  4051ec:	loopne 0x405216
  4051ee:	add    BYTE PTR [rax],al
  4051f0:	sbb    ebp,DWORD PTR [rcx]
  4051f2:	add    BYTE PTR [rax],al
  4051f4:	adc    BYTE PTR [rdx+0x0],ah
  4051f7:	add    BYTE PTR [rax],ah
  4051f9:	sub    DWORD PTR [rax],eax
  4051fb:	add    BYTE PTR [rsi+0x18000029],ch
  405201:	(bad)  
  405202:	add    BYTE PTR [rax],al
  405204:	mov    al,0x29
  405206:	add    BYTE PTR [rax],al
  405208:	call   0x24405236
  40520d:	(bad)  
  40520e:	add    BYTE PTR [rax],al
  405210:	lock sub DWORD PTR [rax],eax
  405213:	add    BYTE PTR [rbp+0x2a],al
  405216:	add    BYTE PTR [rax],al
  405218:	xor    BYTE PTR [rdx+0x0],ah
  40521b:	add    BYTE PTR [rax+0x2a],dl
  40521e:	add    BYTE PTR [rax],al
  405220:	(bad)  
  405221:	sub    al,BYTE PTR [rax]
  405223:	add    BYTE PTR [rdx+riz*2],bh
  405226:	add    BYTE PTR [rax],al
  405228:	shr    BYTE PTR [rbx],1
  40522a:	add    BYTE PTR [rax],al
  40522c:	fsubr  DWORD PTR [rbx]
  40522e:	add    BYTE PTR [rax],al
  405230:	rex.WR (bad) 
  405232:	add    BYTE PTR [rax],al
  405234:	loopne 0x405261
  405236:	add    BYTE PTR [rax],al
  405238:	jmp    0x405265
  40523a:	add    BYTE PTR [rax],al
  40523c:	push   rax
  40523d:	(bad)  
  40523e:	add    BYTE PTR [rax],al
  405240:	add    BYTE PTR [rip+0x2d2f0000],ch        # 0x2d6f5246
  405246:	add    BYTE PTR [rax],al
  405248:	ins    BYTE PTR es:[rdi],dx
  405249:	(bad)  
  40524a:	add    BYTE PTR [rax],al
  40524c:	xor    BYTE PTR [rip+0x2fa30000],ch        # 0x2fe35252
  405252:	add    BYTE PTR [rax],al
  405254:	je     0x4052b6
  405256:	add    BYTE PTR [rax],al
  405258:	mov    al,0x2f
  40525a:	add    BYTE PTR [rax],al
  40525c:	shr    BYTE PTR [rdi],1
  40525e:	add    BYTE PTR [rax],al
  405260:	shl    BYTE PTR [rax+0x0],0x0

Disassembly of section .xdata:

0000000000406000 <.xdata>:
  406000:	add    DWORD PTR [rax],eax
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rcx+rax*1],eax
  406007:	add    BYTE PTR [rdx+rax*2],al
  40600a:	add    BYTE PTR [rax],al
  40600c:	add    DWORD PTR [rcx+rax*1],eax
  40600f:	add    BYTE PTR [rdx+riz*2],al
  406012:	add    BYTE PTR [rax],al
  406014:	add    DWORD PTR [rdi],ecx
  406016:	or     BYTE PTR [rax],al
  406018:	lgdt   [rbx]
  40601b:	add    BYTE PTR [rax],cl
  40601d:	xor    BYTE PTR [rdi],al
  40601f:	(bad)  
  406020:	(bad)  
  406021:	jo     0x406028
  406023:	push   rax
  406024:	add    al,0xc0
  406026:	add    dl,al
  406028:	or     DWORD PTR [rcx+rax*1],eax
  40602b:	add    BYTE PTR [rdx+rax*2],al
  40602e:	add    BYTE PTR [rax],al
  406030:	enter  0x2b,0x0
  406034:	add    DWORD PTR [rax],eax
  406036:	add    BYTE PTR [rax],al
  406038:	(bad)  
  406039:	adc    al,0x0
  40603b:	add    ah,ch
  40603d:	adc    al,0x0
  40603f:	add    BYTE PTR [rax],dh
  406041:	and    eax,DWORD PTR [rax]
  406043:	add    ah,ch
  406045:	adc    al,0x0
  406047:	add    BYTE PTR [rcx],cl
  406049:	add    al,0x1
  40604b:	add    BYTE PTR [rdx+rax*2],al
  40604e:	add    BYTE PTR [rax],al
  406050:	enter  0x2b,0x0
  406054:	add    DWORD PTR [rax],eax
  406056:	add    BYTE PTR [rax],al
  406058:	add    al,0x15
  40605a:	add    BYTE PTR [rax],al
  40605c:	sbb    al,0x15
  40605e:	add    BYTE PTR [rax],al
  406060:	xor    BYTE PTR [rbx],ah
  406062:	add    BYTE PTR [rax],al
  406064:	sbb    al,0x15
  406066:	add    BYTE PTR [rax],al
  406068:	add    DWORD PTR [rax],eax
  40606a:	add    BYTE PTR [rax],al
  40606c:	add    DWORD PTR [rcx+rax*1],eax
  40606f:	add    BYTE PTR [rdx+rax*2],al
  406072:	add    BYTE PTR [rax],al
  406074:	sbb    DWORD PTR [rdi],ecx
  406076:	or     BYTE PTR [rax],al
  406078:	smsw   WORD PTR [rdi]
  40607b:	add    BYTE PTR [rax],cl
  40607d:	xor    BYTE PTR [rdi],al
  40607f:	(bad)  
  406080:	(bad)  
  406081:	jo     0x406088
  406083:	push   rax
  406084:	add    al,0xc0
  406086:	add    dl,al
  406088:	movabs al,ds:0x273001ffff000015
  406091:	add    eax,0x52f0000
  406096:	int3   
  406097:	add    al,0x0
  406099:	cmp    al,0x5
  40609b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40609c:	add    al,0x0
  40609e:	test   eax,0x501
  4060a3:	mov    cl,0x1
  4060a5:	add    eax,0xd00004b0
  4060aa:	add    DWORD PTR [rip+0x1e80000],eax        # 0x22860b0
  4060b0:	add    eax,0xa00004d6
  4060b5:	add    al,cl
  4060b7:	add    ebx,esp
  4060b9:	add    eax,DWORD PTR [rax]
  4060bb:	movabs eax,ds:0x1040100005204
  4060c4:	add    al,0x42
  4060c6:	add    BYTE PTR [rax],al
  4060c8:	add    DWORD PTR [rip+0x52050002],eax        # 0x524560d0
  4060ce:	add    DWORD PTR [rax],esi
  4060d0:	add    DWORD PTR [rip+0x52050002],eax        # 0x524560d8
  4060d6:	add    DWORD PTR [rax],esi
  4060d8:	add    DWORD PTR [rcx+rax*1],eax
  4060db:	add    BYTE PTR [rdx+rax*2],al
  4060de:	add    BYTE PTR [rax],al
  4060e0:	add    DWORD PTR [rcx+rax*1],eax
  4060e3:	add    BYTE PTR [rdx+rax*2],al
  4060e6:	add    BYTE PTR [rax],al
  4060e8:	add    DWORD PTR [rsi],eax
  4060ea:	add    eax,DWORD PTR [rax]
  4060ec:	(bad)  
  4060ed:	rex.X add sil,BYTE PTR [rax]
  4060f0:	add    DWORD PTR [rax+0x0],esp
  4060f3:	add    BYTE PTR [rcx],al
  4060f5:	add    BYTE PTR [rax],al
  4060f7:	add    BYTE PTR [rcx],al
  4060f9:	add    BYTE PTR [rax],al
  4060fb:	add    BYTE PTR [rcx],al
  4060fd:	add    BYTE PTR [rax],al
  4060ff:	add    BYTE PTR [rcx],al
  406101:	or     al,BYTE PTR [rsi]
  406103:	add    BYTE PTR [rdx],cl
  406105:	jb     0x40610d
  406107:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0656d
  40610d:	push   rax
  40610e:	add    al,al
  406110:	add    DWORD PTR [rdx],ecx
  406112:	add    eax,0x6d20a05
  406117:	add    eax,DWORD PTR [rbx]
  406119:	xor    BYTE PTR [rdx],al
  40611b:	(bad)  
  40611c:	add    DWORD PTR [rax+0x0],edx
  40611f:	add    BYTE PTR [rcx],al
  406121:	add    al,0x1
  406123:	add    BYTE PTR [rdx+rax*2],al
  406126:	add    BYTE PTR [rax],al
  406128:	add    DWORD PTR [rsi],eax
  40612a:	add    eax,DWORD PTR [rax]
  40612c:	(bad)  
  40612d:	rex.X add sil,BYTE PTR [rax]
  406130:	add    DWORD PTR [rax+0x0],esp
  406133:	add    BYTE PTR [rcx],al
  406135:	add    BYTE PTR [rax],al
  406137:	add    BYTE PTR [rcx],al
  406139:	add    al,0x1
  40613b:	add    BYTE PTR [rdx+riz*4],al
  40613e:	add    BYTE PTR [rax],al
  406140:	add    DWORD PTR [rax],eax
  406142:	add    BYTE PTR [rax],al
  406144:	add    DWORD PTR [rsi],edx
  406146:	or     DWORD PTR [rax],eax
  406148:	(bad)  
  406149:	mov    BYTE PTR [rsi],al
  40614b:	add    BYTE PTR [rax],dl
  40614d:	js     0x406154
  40614f:	add    BYTE PTR [rbx],cl
  406151:	push   0xffffffffe2060004
  406156:	add    dh,BYTE PTR [rax]
  406158:	add    DWORD PTR [rax+0x0],esp
  40615b:	add    BYTE PTR [rcx],al
  40615d:	add    BYTE PTR [rax],al
  40615f:	add    BYTE PTR [rcx],al
  406161:	add    BYTE PTR [rax],al
  406163:	add    BYTE PTR [rcx],al
  406165:	add    BYTE PTR [rax],al
  406167:	add    BYTE PTR [rcx],al
  406169:	(bad)  
  40616a:	add    eax,DWORD PTR [rax]
  40616c:	(bad)  
  40616d:	(bad)  
  40616f:	xor    BYTE PTR [rcx],al
  406171:	(bad)  
  406172:	add    BYTE PTR [rax],al
  406174:	add    DWORD PTR [rdi+rax*1],ecx
  406177:	add    BYTE PTR [rdx+riz*4],cl
  40617a:	or     BYTE PTR [rax],dh
  40617c:	(bad)  
  40617d:	(bad)  
  40617e:	(bad)  
  40617f:	jo     0x406186
  406181:	push   rax
  406182:	add    al,0xc0
  406184:	add    dl,al
  406186:	add    BYTE PTR [rax],al
  406188:	add    DWORD PTR [rcx],edx
  40618a:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e13a1
  406190:	or     dh,BYTE PTR [rax]
  406192:	or     DWORD PTR [rax+0x8],esp
  406195:	jo     0x40619e
  406197:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220656e
  40619e:	add    BYTE PTR [rax],al
  4061a0:	add    DWORD PTR [rcx+rax*1],eax
  4061a3:	add    BYTE PTR [rdx+rax*2],al
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	add    DWORD PTR [rdx],ecx
  4061aa:	(bad)  
  4061ab:	add    BYTE PTR [rdx],cl
  4061ad:	xor    al,BYTE PTR [rsi]
  4061af:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b06615
  4061b5:	push   rax
  4061b6:	add    al,al
  4061b8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324561c0
  4061be:	add    DWORD PTR [rax],esi
  4061c0:	add    DWORD PTR [rax],ecx
  4061c2:	add    eax,0x4420800
  4061c7:	xor    BYTE PTR [rbx],al
  4061c9:	(bad)  
  4061ca:	add    dh,BYTE PTR [rax+0x1]
  4061cd:	push   rax
  4061ce:	add    BYTE PTR [rax],al
  4061d0:	add    DWORD PTR [rdi],eax
  4061d2:	add    al,0x0
  4061d4:	(bad)  
  4061d5:	xor    al,BYTE PTR [rbx]
  4061d7:	xor    BYTE PTR [rdx],al
  4061d9:	(bad)  
  4061da:	add    DWORD PTR [rax+0x1],esi
  4061dd:	add    eax,0x32050002
  4061e2:	add    DWORD PTR [rax],esi
  4061e4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324561ec
  4061ea:	add    DWORD PTR [rax],esi
  4061ec:	add    DWORD PTR [rax],eax
  4061ee:	add    BYTE PTR [rax],al
  4061f0:	add    DWORD PTR [rax],eax
  4061f2:	add    BYTE PTR [rax],al
  4061f4:	add    DWORD PTR [rax],eax
  4061f6:	add    BYTE PTR [rax],al
  4061f8:	add    DWORD PTR [rdi],eax
  4061fa:	add    al,0x0
  4061fc:	(bad)  
  4061fd:	xor    al,BYTE PTR [rbx]
  4061ff:	xor    BYTE PTR [rdx],al
  406201:	(bad)  
  406202:	add    DWORD PTR [rax+0x1],esi
  406205:	(bad)  
  406206:	add    eax,DWORD PTR [rax]
  406208:	(bad)  
  406209:	rex.X add sil,BYTE PTR [rax]
  40620c:	add    DWORD PTR [rax+0x0],esp
  40620f:	add    BYTE PTR [rcx],al
  406211:	add    eax,0x32050002
  406216:	add    DWORD PTR [rax],esi
  406218:	add    DWORD PTR [rdi],eax
  40621a:	add    al,0x0
  40621c:	(bad)  
  40621d:	xor    al,BYTE PTR [rbx]
  40621f:	xor    BYTE PTR [rdx],al
  406221:	(bad)  
  406222:	add    DWORD PTR [rax+0x1],esi
  406225:	(bad)  
  406226:	add    eax,DWORD PTR [rax]
  406228:	(bad)  
  406229:	rex.X add sil,BYTE PTR [rax]
  40622c:	add    DWORD PTR [rax+0x0],esp
  40622f:	add    BYTE PTR [rcx],al
  406231:	(bad)  
  406232:	add    eax,DWORD PTR [rax]
  406234:	(bad)  
  406235:	rex.X add sil,BYTE PTR [rax]
  406238:	add    DWORD PTR [rax+0x0],esp
  40623b:	add    BYTE PTR [rcx],al
  40623d:	or     BYTE PTR [rip+0x4420800],al        # 0x4826a43
  406243:	xor    BYTE PTR [rbx],al
  406245:	(bad)  
  406246:	add    dh,BYTE PTR [rax+0x1]
  406249:	push   rax
  40624a:	add    BYTE PTR [rax],al
  40624c:	add    DWORD PTR [rax],eax
  40624e:	add    BYTE PTR [rax],al
  406250:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000407000 <.bss>:
	...

Disassembly of section .edata:

0000000000408000 <.edata>:
  408000:	add    BYTE PTR [rax],al
  408002:	add    BYTE PTR [rax],al
  408004:	(bad)  
  408005:	gs scas eax,DWORD PTR es:[rdi]
  408007:	pop    rax
  408008:	add    BYTE PTR [rax],al
  40800a:	add    BYTE PTR [rax],al
  40800c:	rex.RX add BYTE PTR [rax],0x0
  408010:	add    DWORD PTR [rax],eax
  408012:	add    BYTE PTR [rax],al
  408014:	add    eax,DWORD PTR [rax]
  408016:	add    BYTE PTR [rax],al
  408018:	add    eax,DWORD PTR [rax]
  40801a:	add    BYTE PTR [rax],al
  40801c:	sub    BYTE PTR [rax-0x7fcc0000],al
  408022:	add    BYTE PTR [rax],al
  408024:	rex add BYTE PTR [rax],0x0
  408028:	rex adc eax,0x2d000000
  40802e:	add    BYTE PTR [rax],al
  408030:	xor    BYTE PTR [rip+0xffffffff80550000],ch        # 0xffffffff80958036
  408036:	add    BYTE PTR [rax],al
  408038:	add    BYTE PTR [eax],0x0
  40803c:	xlat   BYTE PTR ds:[rbx]
  40803d:	add    BYTE PTR [rax],0x0
  408040:	add    BYTE PTR [rax],al
  408042:	add    DWORD PTR [rax],eax
  408044:	add    al,BYTE PTR [rax]
  408046:	outs   dx,DWORD PTR ds:[rsi]
  408047:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40804b:	gs sub eax,0x2e696c63
  408051:	gs js  0x4080b9
  408054:	add    BYTE PTR [rdi+0x5a],bl
  408057:	xor    DWORD PTR [rdx],esi
  408059:	outs   dx,DWORD PTR ds:[rsi]
  40805a:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40805e:	gs pop rdi
  408060:	push   0x64695f67
  408065:	jbe    0x408067
  408067:	pop    rdi
  408068:	pop    rdx
  408069:	push   rbx
  40806a:	je     0x4080d1
  40806c:	jno    0x4080b7
  40806e:	movsxd eax,DWORD PTR [rbp+0x4e]
  408071:	cmp    DWORD PTR [rdi+0x5f],ebx
  408074:	outs   dx,BYTE PTR ds:[esi]
  408076:	jne    0x4080d7
  408078:	movsxd edi,DWORD PTR [rax+0x78]
  40807b:	xor    DWORD PTR [rcx],esi
  40807d:	pop    rdi
  40807e:	pop    rdi
  40807f:	outs   dx,BYTE PTR gs:[rsi]
  408081:	(bad)  
  408082:	(bad)  
  408083:	ins    BYTE PTR es:[rdi],dx
  408084:	gs pop rdi
  408086:	imul   esp,DWORD PTR [rsi+0x49],0x53727358
  40808d:	je     0x4080c8
  40808f:	pop    rdi
  408090:	pop    rdi
  408091:	imul   esi,DWORD PTR [rbx+0x5f],0x72616863
  408098:	rex.WB push r12
  40809a:	pop    rdi
  40809b:	rex.RB (bad) 
  40809d:	pop    rdi
  40809e:	pop    rdi
  40809f:	jbe    0x408102
  4080a1:	ins    BYTE PTR es:[rdi],dx
  4080a2:	jne    0x408109
  4080a4:	rex.RB (bad) 
  4080a6:	rex.RB
  4080a7:	ss pop rdi
  4080a9:	pop    rdi
  4080aa:	je     0x408125
  4080ac:	jo     0x408113
  4080ae:	rex.RB push r10
  4080b0:	rex.WXB push r11
  4080b2:	(bad)  
  4080b3:	rex.WB push r11
  4080b5:	xor    ebx,DWORD PTR [rdi+0x53]
  4080b8:	je     0x4080eb
  4080ba:	xor    DWORD PTR [rbx+0x68],esp
  4080bd:	(bad)  
  4080be:	jb     0x40811f
  4080c0:	je     0x408134
  4080c2:	(bad)  
  4080c3:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x455f3353
  4080cb:	push   rbx
  4080cc:	(bad)  
  4080cd:	rex.WB push r11
  4080cf:	xor    ebx,DWORD PTR [rdi+0x45]
  4080d2:	rex.RB push r11
  4080d4:	rex.XB pop r15
  4080d6:	add    BYTE PTR [rbp+0x61],ch
  4080d9:	.byte 0x69
  4080da:	outs   dx,BYTE PTR ds:[rsi]
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	mov    WORD PTR [rax+0x0],ss
  409006:	add    BYTE PTR [rax],al
  409008:	add    BYTE PTR [rax],al
  40900a:	add    BYTE PTR [rax],al
  40900c:	lock (bad) 
  40900e:	add    BYTE PTR [rax],al
  409010:	in     al,0x92
  409012:	add    BYTE PTR [rax],al
  409014:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409015:	nop
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	add    al,0x9b
  409022:	add    BYTE PTR [rax],al
  409024:	cld    
  409025:	xchg   edx,eax
  409026:	add    BYTE PTR [rax],al
  409028:	mov    ah,0x90
	...
  409032:	add    BYTE PTR [rax],al
  409034:	cmp    al,0x9b
  409036:	add    BYTE PTR [rax],al
  409038:	or     al,0x93
  40903a:	add    BYTE PTR [rax],al
  40903c:	add    al,0x91
	...
  409046:	add    BYTE PTR [rax],al
  409048:	test   al,0x9b
  40904a:	add    BYTE PTR [rax],al
  40904c:	pop    rsp
  40904d:	xchg   ebx,eax
  40904e:	add    BYTE PTR [rax],al
  409050:	(bad)  
  409051:	xchg   ecx,eax
	...
  40905a:	add    BYTE PTR [rax],al
  40905c:	sub    al,0x9c
  40905e:	add    BYTE PTR [rax],al
  409060:	sbb    al,0x94
  409062:	add    BYTE PTR [rax],al
  409064:	mov    ah,0x92
	...
  40906e:	add    BYTE PTR [rax],al
  409070:	rex.WR pushf 
  409072:	add    BYTE PTR [rax],al
  409074:	or     al,0x95
	...
  40908a:	add    BYTE PTR [rax],al
  40908c:	cmp    al,0x95
  40908e:	add    BYTE PTR [rax],al
  409090:	add    BYTE PTR [rax],al
  409092:	add    BYTE PTR [rax],al
  409094:	push   rsp
  409095:	xchg   ebp,eax
	...
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	adc    BYTE PTR [rbp+0x0],0x0
	...
  4090b3:	add    BYTE PTR [rbp+rdx*4+0x0],dl
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	mov    eax,0x95
  4090c1:	add    BYTE PTR [rax],al
  4090c3:	add    al,dl
  4090c5:	xchg   ebp,eax
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	add    BYTE PTR [rax],al
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	in     al,dx
  4090cd:	xchg   ebp,eax
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	add    BYTE PTR [rax],al
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	or     BYTE PTR [rsi+0x0],dl
  4090da:	add    BYTE PTR [rax],al
  4090dc:	pop    rax
  4090dd:	xchg   esi,eax
  4090de:	add    BYTE PTR [rax],al
  4090e0:	add    BYTE PTR [rax],al
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	fs xchg esi,eax
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	add    BYTE PTR [rax],al
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4090ed:	xchg   esi,eax
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	add    BYTE PTR [rax],al
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	loopne 0x40908c
	...
  409102:	add    BYTE PTR [rax],al
  409104:	cld    
  409105:	xchg   esi,eax
  409106:	add    BYTE PTR [rax],al
  409108:	add    BYTE PTR [rax],al
  40910a:	add    BYTE PTR [rax],al
  40910c:	adc    al,0x97
  40910e:	add    BYTE PTR [rax],al
  409110:	add    BYTE PTR [rax],al
  409112:	add    BYTE PTR [rax],al
  409114:	sub    al,0x97
  409116:	add    BYTE PTR [rax],al
  409118:	add    BYTE PTR [rax],al
  40911a:	add    BYTE PTR [rax],al
  40911c:	rex xchg edi,eax
  40911e:	add    BYTE PTR [rax],al
  409120:	add    BYTE PTR [rax],al
  409122:	add    BYTE PTR [rax],al
  409124:	push   rsi
  409125:	xchg   edi,eax
  409126:	add    BYTE PTR [rax],al
  409128:	add    BYTE PTR [rax],al
  40912a:	add    BYTE PTR [rax],al
  40912c:	ins    BYTE PTR es:[rdi],dx
  40912d:	xchg   edi,eax
  40912e:	add    BYTE PTR [rax],al
  409130:	add    BYTE PTR [rax],al
  409132:	add    BYTE PTR [rax],al
  409134:	jl     0x4090cd
  409136:	add    BYTE PTR [rax],al
  409138:	add    BYTE PTR [rax],al
  40913a:	add    BYTE PTR [rax],al
  40913c:	mov    ss,WORD PTR [rdi+0x0]
  409142:	add    BYTE PTR [rax],al
  409144:	test   al,0x97
  409146:	add    BYTE PTR [rax],al
  409148:	add    BYTE PTR [rax],al
  40914a:	add    BYTE PTR [rax],al
  40914c:	mov    eax,0x97
  409151:	add    BYTE PTR [rax],al
  409153:	add    ah,dl
  409155:	xchg   edi,eax
  409156:	add    BYTE PTR [rax],al
  409158:	add    BYTE PTR [rax],al
  40915a:	add    BYTE PTR [rax],al
  40915c:	in     al,dx
  40915d:	xchg   edi,eax
  40915e:	add    BYTE PTR [rax],al
  409160:	add    BYTE PTR [rax],al
  409162:	add    BYTE PTR [rax],al
  409164:	(bad)  
  409165:	cwde   
  409166:	add    BYTE PTR [rax],al
  409168:	add    BYTE PTR [rax],al
  40916a:	add    BYTE PTR [rax],al
  40916c:	sbb    al,0x98
  40916e:	add    BYTE PTR [rax],al
  409170:	add    BYTE PTR [rax],al
  409172:	add    BYTE PTR [rax],al
  409174:	xor    BYTE PTR [rax+0x0],bl
  40917a:	add    BYTE PTR [rax],al
  40917c:	rex.WX cdqe 
  40917e:	add    BYTE PTR [rax],al
  409180:	add    BYTE PTR [rax],al
  409182:	add    BYTE PTR [rax],al
  409184:	pop    rsi
  409185:	cwde   
  409186:	add    BYTE PTR [rax],al
  409188:	add    BYTE PTR [rax],al
  40918a:	add    BYTE PTR [rax],al
  40918c:	jl     0x409126
  40918e:	add    BYTE PTR [rax],al
  409190:	add    BYTE PTR [rax],al
  409192:	add    BYTE PTR [rax],al
  409194:	test   BYTE PTR [rax+0x0],bl
  40919a:	add    BYTE PTR [rax],al
  40919c:	cwde   
  40919d:	cwde   
  40919e:	add    BYTE PTR [rax],al
  4091a0:	add    BYTE PTR [rax],al
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091a5:	cwde   
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	add    BYTE PTR [rax],al
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	ret    0x98
  4091af:	add    BYTE PTR [rax],al
  4091b1:	add    BYTE PTR [rax],al
  4091b3:	add    ah,dl
  4091b5:	cwde   
	...
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	in     al,0x98
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	add    BYTE PTR [rax],al
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	cld    
  4091cd:	cwde   
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    BYTE PTR [rax],al
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	or     bl,BYTE PTR [rcx+0x0]
  4091da:	add    BYTE PTR [rax],al
  4091dc:	sbb    bl,BYTE PTR [rcx+0x0]
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	es cdq 
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	add    BYTE PTR [rax],al
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	xor    al,0x99
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	add    BYTE PTR [rax],al
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	rex.R cdq 
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	add    BYTE PTR [rax],al
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	push   rsi
  4091fd:	cdq    
  4091fe:	add    BYTE PTR [rax],al
  409200:	add    BYTE PTR [rax],al
  409202:	add    BYTE PTR [rax],al
  409204:	push   0xffffffffffffff99
  409206:	add    BYTE PTR [rax],al
  409208:	add    BYTE PTR [rax],al
  40920a:	add    BYTE PTR [rax],al
  40920c:	je     0x4091a7
  40920e:	add    BYTE PTR [rax],al
  409210:	add    BYTE PTR [rax],al
  409212:	add    BYTE PTR [rax],al
  409214:	(bad)  
  409215:	cdq    
  409216:	add    BYTE PTR [rax],al
  409218:	add    BYTE PTR [rax],al
  40921a:	add    BYTE PTR [rax],al
  40921c:	mov    WORD PTR [rcx+0x0],ds
  409222:	add    BYTE PTR [rax],al
  409224:	xchg   esi,eax
  409225:	cdq    
  409226:	add    BYTE PTR [rax],al
  409228:	add    BYTE PTR [rax],al
  40922a:	add    BYTE PTR [rax],al
  40922c:	movabs ds:0xaa00000000000099,al
  409235:	cdq    
  409236:	add    BYTE PTR [rax],al
  409238:	add    BYTE PTR [rax],al
  40923a:	add    BYTE PTR [rax],al
  40923c:	mov    ah,0x99
  40923e:	add    BYTE PTR [rax],al
  409240:	add    BYTE PTR [rax],al
  409242:	add    BYTE PTR [rax],al
  409244:	mov    esi,0x99
  409249:	add    BYTE PTR [rax],al
  40924b:	add    dh,al
  40924d:	cdq    
  40924e:	add    BYTE PTR [rax],al
  409250:	add    BYTE PTR [rax],al
  409252:	add    BYTE PTR [rax],al
  409254:	rcr    BYTE PTR [rcx+0x0],1
  40925a:	add    BYTE PTR [rax],al
  40925c:	fcomp  DWORD PTR [rcx+0x0]
  409262:	add    BYTE PTR [rax],al
  409264:	loop   0x4091ff
  409266:	add    BYTE PTR [rax],al
  409268:	add    BYTE PTR [rax],al
  40926a:	add    BYTE PTR [rax],al
  40926c:	(bad)  
  40926d:	cdq    
  40926e:	add    BYTE PTR [rax],al
  409270:	add    BYTE PTR [rax],al
  409272:	add    BYTE PTR [rax],al
  409274:	hlt    
  409275:	cdq    
  409276:	add    BYTE PTR [rax],al
  409278:	add    BYTE PTR [rax],al
  40927a:	add    BYTE PTR [rax],al
  40927c:	(bad)  
  40927d:	cdq    
  40927e:	add    BYTE PTR [rax],al
  409280:	add    BYTE PTR [rax],al
  409282:	add    BYTE PTR [rax],al
  409284:	or     BYTE PTR [rdx+0x0],bl
  40928a:	add    BYTE PTR [rax],al
  40928c:	adc    bl,BYTE PTR [rdx+0x0]
  409292:	add    BYTE PTR [rax],al
  409294:	sbb    al,0x9a
  409296:	add    BYTE PTR [rax],al
  409298:	add    BYTE PTR [rax],al
  40929a:	add    BYTE PTR [rax],al
  40929c:	es (bad) 
  40929e:	add    BYTE PTR [rax],al
  4092a0:	add    BYTE PTR [rax],al
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	xor    BYTE PTR [rdx+0x0],bl
	...
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	cmp    al,0x9a
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	add    BYTE PTR [rax],al
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	pop    rax
  4092bd:	(bad)  
  4092be:	add    BYTE PTR [rax],al
  4092c0:	add    BYTE PTR [rax],al
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	jl     0x409260
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	add    BYTE PTR [rax],al
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	pushf  
  4092cd:	(bad)  
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	add    BYTE PTR [rax],al
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	(bad)  
  4092d5:	(bad)  
	...
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	cmp    al,0x95
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	add    BYTE PTR [rax],al
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	push   rsp
  4092ed:	xchg   ebp,eax
	...
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	adc    BYTE PTR [rbp+0x0],0x0
	...
  40930b:	add    BYTE PTR [rbp+rdx*4+0x0],dl
  409312:	add    BYTE PTR [rax],al
  409314:	mov    eax,0x95
  409319:	add    BYTE PTR [rax],al
  40931b:	add    al,dl
  40931d:	xchg   ebp,eax
  40931e:	add    BYTE PTR [rax],al
  409320:	add    BYTE PTR [rax],al
  409322:	add    BYTE PTR [rax],al
  409324:	in     al,dx
  409325:	xchg   ebp,eax
  409326:	add    BYTE PTR [rax],al
  409328:	add    BYTE PTR [rax],al
  40932a:	add    BYTE PTR [rax],al
  40932c:	or     BYTE PTR [rsi+0x0],dl
  409332:	add    BYTE PTR [rax],al
  409334:	pop    rax
  409335:	xchg   esi,eax
  409336:	add    BYTE PTR [rax],al
  409338:	add    BYTE PTR [rax],al
  40933a:	add    BYTE PTR [rax],al
  40933c:	fs xchg esi,eax
  40933e:	add    BYTE PTR [rax],al
  409340:	add    BYTE PTR [rax],al
  409342:	add    BYTE PTR [rax],al
  409344:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409345:	xchg   esi,eax
  409346:	add    BYTE PTR [rax],al
  409348:	add    BYTE PTR [rax],al
  40934a:	add    BYTE PTR [rax],al
  40934c:	loopne 0x4092e4
	...
  40935a:	add    BYTE PTR [rax],al
  40935c:	cld    
  40935d:	xchg   esi,eax
  40935e:	add    BYTE PTR [rax],al
  409360:	add    BYTE PTR [rax],al
  409362:	add    BYTE PTR [rax],al
  409364:	adc    al,0x97
  409366:	add    BYTE PTR [rax],al
  409368:	add    BYTE PTR [rax],al
  40936a:	add    BYTE PTR [rax],al
  40936c:	sub    al,0x97
  40936e:	add    BYTE PTR [rax],al
  409370:	add    BYTE PTR [rax],al
  409372:	add    BYTE PTR [rax],al
  409374:	rex xchg edi,eax
  409376:	add    BYTE PTR [rax],al
  409378:	add    BYTE PTR [rax],al
  40937a:	add    BYTE PTR [rax],al
  40937c:	push   rsi
  40937d:	xchg   edi,eax
  40937e:	add    BYTE PTR [rax],al
  409380:	add    BYTE PTR [rax],al
  409382:	add    BYTE PTR [rax],al
  409384:	ins    BYTE PTR es:[rdi],dx
  409385:	xchg   edi,eax
  409386:	add    BYTE PTR [rax],al
  409388:	add    BYTE PTR [rax],al
  40938a:	add    BYTE PTR [rax],al
  40938c:	jl     0x409325
  40938e:	add    BYTE PTR [rax],al
  409390:	add    BYTE PTR [rax],al
  409392:	add    BYTE PTR [rax],al
  409394:	mov    ss,WORD PTR [rdi+0x0]
  40939a:	add    BYTE PTR [rax],al
  40939c:	test   al,0x97
  40939e:	add    BYTE PTR [rax],al
  4093a0:	add    BYTE PTR [rax],al
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	mov    eax,0x97
  4093a9:	add    BYTE PTR [rax],al
  4093ab:	add    ah,dl
  4093ad:	xchg   edi,eax
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	add    BYTE PTR [rax],al
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	in     al,dx
  4093b5:	xchg   edi,eax
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	add    BYTE PTR [rax],al
  4093ba:	add    BYTE PTR [rax],al
  4093bc:	(bad)  
  4093bd:	cwde   
  4093be:	add    BYTE PTR [rax],al
  4093c0:	add    BYTE PTR [rax],al
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	sbb    al,0x98
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	add    BYTE PTR [rax],al
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	xor    BYTE PTR [rax+0x0],bl
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	rex.WX cdqe 
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	add    BYTE PTR [rax],al
  4093da:	add    BYTE PTR [rax],al
  4093dc:	pop    rsi
  4093dd:	cwde   
  4093de:	add    BYTE PTR [rax],al
  4093e0:	add    BYTE PTR [rax],al
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	jl     0x40937e
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	add    BYTE PTR [rax],al
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	test   BYTE PTR [rax+0x0],bl
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	cwde   
  4093f5:	cwde   
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	add    BYTE PTR [rax],al
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4093fd:	cwde   
  4093fe:	add    BYTE PTR [rax],al
  409400:	add    BYTE PTR [rax],al
  409402:	add    BYTE PTR [rax],al
  409404:	ret    0x98
  409407:	add    BYTE PTR [rax],al
  409409:	add    BYTE PTR [rax],al
  40940b:	add    ah,dl
  40940d:	cwde   
	...
  40941a:	add    BYTE PTR [rax],al
  40941c:	in     al,0x98
  40941e:	add    BYTE PTR [rax],al
  409420:	add    BYTE PTR [rax],al
  409422:	add    BYTE PTR [rax],al
  409424:	cld    
  409425:	cwde   
  409426:	add    BYTE PTR [rax],al
  409428:	add    BYTE PTR [rax],al
  40942a:	add    BYTE PTR [rax],al
  40942c:	or     bl,BYTE PTR [rcx+0x0]
  409432:	add    BYTE PTR [rax],al
  409434:	sbb    bl,BYTE PTR [rcx+0x0]
  40943a:	add    BYTE PTR [rax],al
  40943c:	es cdq 
  40943e:	add    BYTE PTR [rax],al
  409440:	add    BYTE PTR [rax],al
  409442:	add    BYTE PTR [rax],al
  409444:	xor    al,0x99
  409446:	add    BYTE PTR [rax],al
  409448:	add    BYTE PTR [rax],al
  40944a:	add    BYTE PTR [rax],al
  40944c:	rex.R cdq 
  40944e:	add    BYTE PTR [rax],al
  409450:	add    BYTE PTR [rax],al
  409452:	add    BYTE PTR [rax],al
  409454:	push   rsi
  409455:	cdq    
  409456:	add    BYTE PTR [rax],al
  409458:	add    BYTE PTR [rax],al
  40945a:	add    BYTE PTR [rax],al
  40945c:	push   0xffffffffffffff99
  40945e:	add    BYTE PTR [rax],al
  409460:	add    BYTE PTR [rax],al
  409462:	add    BYTE PTR [rax],al
  409464:	je     0x4093ff
  409466:	add    BYTE PTR [rax],al
  409468:	add    BYTE PTR [rax],al
  40946a:	add    BYTE PTR [rax],al
  40946c:	(bad)  
  40946d:	cdq    
  40946e:	add    BYTE PTR [rax],al
  409470:	add    BYTE PTR [rax],al
  409472:	add    BYTE PTR [rax],al
  409474:	mov    WORD PTR [rcx+0x0],ds
  40947a:	add    BYTE PTR [rax],al
  40947c:	xchg   esi,eax
  40947d:	cdq    
  40947e:	add    BYTE PTR [rax],al
  409480:	add    BYTE PTR [rax],al
  409482:	add    BYTE PTR [rax],al
  409484:	movabs ds:0xaa00000000000099,al
  40948d:	cdq    
  40948e:	add    BYTE PTR [rax],al
  409490:	add    BYTE PTR [rax],al
  409492:	add    BYTE PTR [rax],al
  409494:	mov    ah,0x99
  409496:	add    BYTE PTR [rax],al
  409498:	add    BYTE PTR [rax],al
  40949a:	add    BYTE PTR [rax],al
  40949c:	mov    esi,0x99
  4094a1:	add    BYTE PTR [rax],al
  4094a3:	add    dh,al
  4094a5:	cdq    
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	add    BYTE PTR [rax],al
  4094aa:	add    BYTE PTR [rax],al
  4094ac:	rcr    BYTE PTR [rcx+0x0],1
  4094b2:	add    BYTE PTR [rax],al
  4094b4:	fcomp  DWORD PTR [rcx+0x0]
  4094ba:	add    BYTE PTR [rax],al
  4094bc:	loop   0x409457
  4094be:	add    BYTE PTR [rax],al
  4094c0:	add    BYTE PTR [rax],al
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	(bad)  
  4094c5:	cdq    
  4094c6:	add    BYTE PTR [rax],al
  4094c8:	add    BYTE PTR [rax],al
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	hlt    
  4094cd:	cdq    
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	add    BYTE PTR [rax],al
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	(bad)  
  4094d5:	cdq    
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	add    BYTE PTR [rax],al
  4094da:	add    BYTE PTR [rax],al
  4094dc:	or     BYTE PTR [rdx+0x0],bl
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	adc    bl,BYTE PTR [rdx+0x0]
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	sbb    al,0x9a
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	add    BYTE PTR [rax],al
  4094f2:	add    BYTE PTR [rax],al
  4094f4:	es (bad) 
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	add    BYTE PTR [rax],al
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	xor    BYTE PTR [rdx+0x0],bl
	...
  40950a:	add    BYTE PTR [rax],al
  40950c:	cmp    al,0x9a
  40950e:	add    BYTE PTR [rax],al
  409510:	add    BYTE PTR [rax],al
  409512:	add    BYTE PTR [rax],al
  409514:	pop    rax
  409515:	(bad)  
  409516:	add    BYTE PTR [rax],al
  409518:	add    BYTE PTR [rax],al
  40951a:	add    BYTE PTR [rax],al
  40951c:	jl     0x4094b8
  40951e:	add    BYTE PTR [rax],al
  409520:	add    BYTE PTR [rax],al
  409522:	add    BYTE PTR [rax],al
  409524:	pushf  
  409525:	(bad)  
  409526:	add    BYTE PTR [rax],al
  409528:	add    BYTE PTR [rax],al
  40952a:	add    BYTE PTR [rax],al
  40952c:	(bad)  
  40952d:	(bad)  
	...
  40953a:	add    BYTE PTR [rax],al
  40953c:	mov    bh,0x14
  40953e:	pop    rdi
  40953f:	pop    rdx
  409540:	xor    DWORD PTR [rip+0x6f62696c],esi        # 0x6fa2feb2
  409546:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40954a:	gs pop rdi
  40954c:	push   0x64695f67
  409551:	jbe    0x409553
  409553:	add    BYTE PTR [rdx+0x4e5a5f3e],cl
  409559:	outs   dx,DWORD PTR ss:[rsi]
  40955b:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40955f:	xor    esi,DWORD PTR gs:[rbx+0x79]
  409563:	jae    0x409598
  409565:	outs   dx,BYTE PTR gs:[rsi]
  409567:	jbe    0x40959a
  409569:	ss jae 0x4095d1
  40956c:	je     0x4095cd
  40956e:	jo     0x4095e2
  409570:	outs   dx,DWORD PTR ds:[rsi]
  409571:	addr32 jb 0x4095d5
  409574:	ins    DWORD PTR es:[rdi],dx
  409575:	pop    rdi
  409576:	outs   dx,BYTE PTR ds:[rsi]
  409577:	(bad)  
  409578:	ins    DWORD PTR es:[rdi],dx
  409579:	gs rex.RB push r10
  40957c:	rex.WXB push r11
  40957e:	jae    0x409580
  409580:	(bad)  
  409581:	add    BYTE PTR [rdi+0x55],bl
  409584:	outs   dx,BYTE PTR ds:[rsi]
  409585:	ja     0x4095f0
  409587:	outs   dx,BYTE PTR ds:[rsi]
  409588:	fs pop rdi
  40958a:	push   rdx
  40958b:	gs jae 0x409603
  40958e:	ins    DWORD PTR es:[rdi],dx
  40958f:	add    BYTE PTR gs:[rax],al
  409592:	add    BYTE PTR [rax],al
  409594:	repz add ebx,DWORD PTR [rdi+0x5a]
  409598:	rex.WRX push rbx
  40959a:	jae    0x4095d0
  40959c:	pop    rdi
  40959d:	push   rdx
  40959e:	gs jo  0x4095d2
  4095a1:	xor    BYTE PTR [rdi+0x4d],bl
  4095a4:	pop    rdi
  4095a5:	imul   esi,DWORD PTR fs:[rbx+0x70],0x4565736f
  4095ad:	push   rdx
  4095ae:	rex.WXB push r11
  4095b0:	(bad)  
  4095b1:	movsxd rax,DWORD PTR [r13+0x0]
  4095b5:	add    BYTE PTR [rax],al
  4095b7:	add    BYTE PTR [rdx],bh
  4095b9:	add    al,0x5f
  4095bb:	pop    rdx
  4095bc:	rex.WRX push rbx
  4095be:	jae    0x409603
  4095c0:	xor    DWORD PTR [rbp+0x50],eax
  4095c3:	rex.WXB movsxd rdx,DWORD PTR [r10+0x4b]
  4095c7:	push   rbx
  4095c8:	(bad)  
  4095c9:	movsxd rax,DWORD PTR [r13+0x0]
  4095cd:	add    BYTE PTR [rax],al
  4095cf:	add    BYTE PTR [rax],dh
  4095d1:	or     bl,BYTE PTR [rdi+0x5a]
  4095d4:	rex.WRX push rbx
  4095d6:	je     0x409610
  4095d8:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  4095df:	gs xor al,0x49
  4095e2:	outs   dx,BYTE PTR ds:[rsi]
  4095e3:	imul   esi,DWORD PTR [rbx+rax*2+0x31],0x7645
  4095eb:	add    BYTE PTR [rdx],dh
  4095ed:	or     bl,BYTE PTR [rdi+0x5a]
  4095f0:	rex.WRX push rbx
  4095f2:	je     0x40962c
  4095f4:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  4095fb:	gs xor al,0x49
  4095fe:	outs   dx,BYTE PTR ds:[rsi]
  4095ff:	imul   esi,DWORD PTR [rsp+rax*2+0x31],0x7645
  409607:	add    bh,bh
  409609:	or     bl,BYTE PTR [rdi+0x5a]
  40960c:	push   rbx
  40960d:	je     0x409640
  40960f:	ss pop rdi
  409611:	pop    rdi
  409612:	outs   dx,DWORD PTR ds:[rsi]
  409613:	jae    0x409689
  409615:	jb     0x40967c
  409617:	(bad)  
  409618:	ins    DWORD PTR es:[rdi],dx
  409619:	pop    rdi
  40961a:	imul   ebp,DWORD PTR [rsi+0x73],0x49747265
  409621:	movsxd edx,DWORD PTR [rbx+0x74]
  409624:	xor    DWORD PTR [rcx],esi
  409626:	movsxd ebp,DWORD PTR [rax+0x61]
  409629:	jb     0x40968a
  40962b:	je     0x40969f
  40962d:	(bad)  
  40962e:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  409636:	push   rbx
  409637:	je     0x40966a
  409639:	xor    esp,DWORD PTR [rdx+0x61]
  40963c:	jae    0x4096a7
  40963e:	movsxd ebx,DWORD PTR [rdi+0x6f]
  409641:	jae    0x4096b7
  409643:	jb     0x4096aa
  409645:	(bad)  
  409646:	ins    DWORD PTR es:[rdi],dx
  409647:	rex.WB push r12
  409649:	pop    rdi
  40964a:	push   rsp
  40964b:	xor    BYTE PTR [rdi+0x45],bl
  40964e:	push   rbx
  40964f:	ss pop rdi
  409651:	push   rax
  409652:	rex.WXB push r11
  409654:	xor    ebx,DWORD PTR [rdi+0x78]
  409657:	add    BYTE PTR [rcx],ch
  409659:	or     ebx,DWORD PTR [rdi+0x5a]
  40965c:	push   rbx
  40965d:	je     0x409693
  40965f:	movsxd esp,DWORD PTR [rbp+0x72]
  409662:	jb     0x409664
  409664:	sub    al,0xb
  409666:	pop    rdi
  409667:	pop    rdx
  409668:	push   rbx
  409669:	je     0x40969f
  40966b:	outs   dx,BYTE PTR gs:[rsi]
  40966d:	fs ins BYTE PTR es:[rdi],dx
  40966f:	movsxd rdx,DWORD PTR [r11+0x74]
  409673:	xor    DWORD PTR [rcx],esi
  409675:	movsxd ebp,DWORD PTR [rax+0x61]
  409678:	jb     0x4096d9
  40967a:	je     0x4096ee
  40967c:	(bad)  
  40967d:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  409685:	push   rbx
  409686:	je     0x4096b9
  409688:	xor    esp,DWORD PTR [rdx+0x61]
  40968b:	jae    0x4096f6
  40968d:	movsxd ebx,DWORD PTR [rdi+0x6f]
  409690:	jae    0x409706
  409692:	jb     0x4096f9
  409694:	(bad)  
  409695:	ins    DWORD PTR es:[rdi],dx
  409696:	rex.WB push r12
  409698:	pop    rdi
  409699:	push   rsp
  40969a:	xor    BYTE PTR [rdi+0x45],bl
  40969d:	push   rbx
  40969e:	ss pop rdi
  4096a0:	add    BYTE PTR [rax],al
  4096a2:	add    BYTE PTR [rax],al
  4096a4:	jae    0x4096b1
  4096a6:	pop    rdi
  4096a7:	pop    rdx
  4096a8:	push   rbx
  4096a9:	je     0x409717
  4096ab:	jae    0x4096f6
  4096ad:	push   rbx
  4096ae:	je     0x4096e1
  4096b0:	xor    DWORD PTR [rbx+0x68],esp
  4096b3:	(bad)  
  4096b4:	jb     0x409715
  4096b6:	je     0x40972a
  4096b8:	(bad)  
  4096b9:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  4096c1:	push   rbx
  4096c2:	je     0x4096f5
  4096c4:	xor    esp,DWORD PTR [rdx+0x61]
  4096c7:	jae    0x409732
  4096c9:	movsxd ebx,DWORD PTR [rdi+0x6f]
  4096cc:	jae    0x409742
  4096ce:	jb     0x409735
  4096d0:	(bad)  
  4096d1:	ins    DWORD PTR es:[rdi],dx
  4096d2:	movsxd rdx,DWORD PTR [r15+rbx*2+0x45]
  4096d7:	push   rbx
  4096d8:	xor    eax,0x634b505f
  4096dd:	add    BYTE PTR [rax],al
  4096df:	add    BYTE PTR [rsi],dl
  4096e1:	(bad)  
  4096e2:	pop    rdi
  4096e3:	pop    rdi
  4096e4:	addr32 js 0x40975f
  4096e7:	pop    rdi
  4096e8:	jo     0x40974f
  4096ea:	jb     0x40975f
  4096ec:	outs   dx,DWORD PTR ds:[rsi]
  4096ed:	outs   dx,BYTE PTR ds:[rsi]
  4096ee:	(bad)  
  4096ef:	ins    BYTE PTR es:[rdi],dx
  4096f0:	imul   esi,DWORD PTR [rcx+rdi*2+0x5f],0x30686573
  4096f8:	add    BYTE PTR [rax],al
  4096fa:	add    BYTE PTR [rax],al
  4096fc:	fadd   DWORD PTR [rax]
  4096fe:	rex.R
  4096ff:	gs ins BYTE PTR es:[rdi],dx
  409701:	gs je  0x409769
  409704:	rex.XB jb 0x409770
  409707:	je     0x409772
  409709:	movsxd esp,DWORD PTR [rcx+0x6c]
  40970c:	push   rbx
  40970d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409712:	outs   dx,BYTE PTR ds:[rsi]
  409713:	add    al,bh
  409715:	add    BYTE PTR [rbp+0x6e],al
  409718:	je     0x40977f
  40971a:	jb     0x40975f
  40971c:	jb     0x409787
  40971e:	je     0x409789
  409720:	movsxd esp,DWORD PTR [rcx+0x6c]
  409723:	push   rbx
  409724:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409729:	outs   dx,BYTE PTR ds:[rsi]
  40972a:	add    BYTE PTR [rax],al
  40972c:	int    0x1
  40972e:	rex.RXB
  40972f:	gs je  0x409775
  409732:	jne    0x4097a6
  409734:	jb     0x40979b
  409736:	outs   dx,BYTE PTR ds:[rsi]
  409737:	je     0x409789
  409739:	jb     0x4097aa
  40973b:	movsxd esp,DWORD PTR [rbp+0x73]
  40973e:	jae    0x409740
  409740:	(bad)  
  409741:	add    DWORD PTR [rdi+0x65],eax
  409744:	je     0x409789
  409746:	jne    0x4097ba
  409748:	jb     0x4097af
  40974a:	outs   dx,BYTE PTR ds:[rsi]
  40974b:	je     0x40979d
  40974d:	jb     0x4097be
  40974f:	movsxd esp,DWORD PTR [rbp+0x73]
  409752:	jae    0x40979d
  409754:	fs add dl,dl
  409757:	add    DWORD PTR [rdi+0x65],eax
  40975a:	je     0x40979f
  40975c:	jne    0x4097d0
  40975e:	jb     0x4097c5
  409760:	outs   dx,BYTE PTR ds:[rsi]
  409761:	je     0x4097b7
  409763:	push   0x64616572
  409768:	rex.WB
  409769:	add    BYTE PTR fs:[rax],al
  40976c:	adc    BYTE PTR [rdx],al
  40976e:	rex.RXB
  40976f:	gs je  0x4097be
  409772:	(bad)  
  409773:	jae    0x4097e9
  409775:	rex.RB jb 0x4097ea
  409778:	outs   dx,DWORD PTR ds:[rsi]
  409779:	jb     0x40977b
  40977b:	add    BYTE PTR [rbx+0x2],dh
  40977e:	rex.RXB
  40977f:	gs je  0x4097d5
  409782:	je     0x4097e5
  409784:	jb     0x4097fa
  409786:	jne    0x4097f8
  409788:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40978a:	outs   dx,WORD PTR ds:[rsi]
  40978c:	add    BYTE PTR [r10+0x74654702],cl
  409793:	push   rbx
  409794:	jns    0x409809
  409796:	je     0x4097fd
  409798:	ins    DWORD PTR es:[rdi],dx
  409799:	push   rsp
  40979a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4097a1:	ins    BYTE PTR es:[rdi],dx
  4097a2:	gs push rsp
  4097a4:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4097ab:	gs je  0x409802
  4097ae:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4097b5:	je     0x4097b7
  4097b7:	add    cl,bh
  4097b9:	add    cl,BYTE PTR [rcx+0x6e]
  4097bc:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4097c4:	rex.XB jb 0x409830
  4097c7:	je     0x409832
  4097c9:	movsxd esp,DWORD PTR [rcx+0x6c]
  4097cc:	push   rbx
  4097cd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097d2:	outs   dx,BYTE PTR ds:[rsi]
  4097d3:	add    BYTE PTR [rbx+0x3],cl
  4097d6:	rex.WR
  4097d7:	gs (bad) 
  4097d9:	jbe    0x409840
  4097db:	rex.XB jb 0x409847
  4097de:	je     0x409849
  4097e0:	movsxd esp,DWORD PTR [rcx+0x6c]
  4097e3:	push   rbx
  4097e4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097e9:	outs   dx,BYTE PTR ds:[rsi]
  4097ea:	add    BYTE PTR [rax],al
  4097ec:	mov    ebx,0x65755103
  4097f1:	jb     0x40986c
  4097f3:	push   rax
  4097f4:	gs jb  0x40985d
  4097f7:	outs   dx,DWORD PTR ds:[rsi]
  4097f8:	jb     0x409867
  4097fa:	(bad)  
  4097fb:	outs   dx,BYTE PTR ds:[rsi]
  4097fc:	movsxd esp,DWORD PTR [rbp+0x43]
  4097ff:	outs   dx,DWORD PTR ds:[rsi]
  409800:	jne    0x409870
  409802:	je     0x409869
  409804:	jb     0x409806
  409806:	add    DWORD PTR [rdx+rdx*2],eax
  409809:	je     0x409877
  40980b:	rex.B
  40980c:	fs fs rex.RX jne 0x40987f
  409811:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409815:	outs   dx,BYTE PTR ds:[rsi]
  409816:	push   rsp
  409817:	(bad)  
  409818:	(bad)  
  409819:	ins    BYTE PTR es:[rdi],dx
  40981a:	add    BYTE PTR gs:[rdx],al
  40981d:	add    al,0x52
  40981f:	je     0x40988d
  409821:	rex.XB (bad) 
  409823:	jo     0x409899
  409825:	jne    0x409899
  409827:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40982a:	outs   dx,BYTE PTR ds:[rsi]
  40982b:	je     0x409892
  40982d:	js     0x4098a3
  40982f:	add    BYTE PTR [rcx],cl
  409831:	add    al,0x52
  409833:	je     0x4098a1
  409835:	rex.WR outs dx,DWORD PTR ds:[rsi]
  409837:	outs   dx,DWORD PTR ds:[rsi]
  409838:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40983c:	jne    0x4098ac
  40983e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409842:	outs   dx,BYTE PTR ds:[rsi]
  409843:	rex.RB outs dx,BYTE PTR ds:[rsi]
  409845:	je     0x4098b9
  409847:	jns    0x409849
  409849:	add    BYTE PTR [rax],dl
  40984b:	add    al,0x52
  40984d:	je     0x4098bb
  40984f:	push   rsi
  409850:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  409857:	outs   dx,BYTE PTR ds:[rsi]
  409858:	ja     0x4098c3
  40985a:	outs   dx,BYTE PTR ds:[rsi]
  40985b:	add    BYTE PTR fs:[rax],al
  40985e:	lahf   
  40985f:	add    al,0x53
  409861:	gs je  0x4098b9
  409864:	outs   dx,BYTE PTR ds:[rsi]
  409865:	push   0x6c646e61
  40986a:	gs fs rex.RB js 0x4098d2
  40986f:	gs jo  0x4098e6
  409872:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409879:	gs jb  0x40987c
  40987c:	lods   al,BYTE PTR ds:[rsi]
  40987d:	add    al,0x53
  40987f:	ins    BYTE PTR es:[rdi],dx
  409880:	gs gs jo 0x409884
  409884:	mov    edx,0x72655404
  409889:	ins    DWORD PTR es:[rdi],dx
  40988a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  409891:	outs   dx,DWORD PTR ds:[rsi]
  409892:	movsxd esp,DWORD PTR [rbp+0x73]
  409895:	jae    0x409897
  409897:	add    cl,al
  409899:	add    al,0x54
  40989b:	ins    BYTE PTR es:[rdi],dx
  40989c:	jae    0x4098e5
  40989e:	gs je  0x4098f7
  4098a1:	(bad)  
  4098a2:	ins    BYTE PTR es:[rdi],dx
  4098a3:	jne    0x40990a
  4098a5:	add    dh,cl
  4098a7:	add    al,0x55
  4098a9:	outs   dx,BYTE PTR ds:[rsi]
  4098aa:	push   0x6c646e61
  4098af:	gs fs rex.RB js 0x409917
  4098b4:	gs jo  0x40992b
  4098b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4098be:	gs jb  0x4098c1
  4098c1:	add    ah,ch
  4098c3:	add    al,0x56
  4098c5:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4098cc:	jb     0x40993d
  4098ce:	je     0x409935
  4098d0:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4098d4:	out    dx,al
  4098d5:	add    al,0x56
  4098d7:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4098de:	jne    0x409945
  4098e0:	jb     0x40995b
  4098e2:	add    BYTE PTR [rax],al
  4098e4:	(bad)  
  4098e5:	add    BYTE PTR [rdi+0x5f],bl
  4098e8:	rex.XB pop r15
  4098ea:	jae    0x40995c
  4098ec:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4098f0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  4098f7:	ins    BYTE PTR es:[rdi],dx
  4098f8:	gs jb  0x4098fb
  4098fb:	add    BYTE PTR [rsi+0x0],cl
  4098fe:	pop    rdi
  4098ff:	pop    rdi
  409900:	fs ins BYTE PTR es:[rdi],dx
  409902:	ins    BYTE PTR es:[rdi],dx
  409903:	outs   dx,DWORD PTR ds:[rsi]
  409904:	outs   dx,BYTE PTR ds:[rsi]
  409905:	gs js  0x409971
  409908:	je     0x40990a
  40990a:	push   rcx
  40990b:	add    BYTE PTR [rdi+0x5f],bl
  40990e:	addr32 gs je 0x40997f
  409912:	(bad)  
  409913:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40991a:	push   rdx
  40991b:	add    BYTE PTR [rdi+0x5f],bl
  40991e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409925:	add    BYTE PTR [rbx+0x0],dl
  409928:	pop    rdi
  409929:	pop    rdi
  40992a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409931:	movsxd eax,DWORD PTR [rax]
  409933:	add    BYTE PTR [rdx+0x0],bl
  409936:	pop    rdi
  409937:	pop    rdi
  409938:	ins    BYTE PTR es:[rdi],dx
  409939:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40993c:	jbe    0x40999d
  40993e:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409945:	add    BYTE PTR [rdi+0x5f],bl
  409948:	jae    0x4099af
  40994a:	je     0x4099ab
  40994c:	(bad)  
  40994d:	jo     0x4099bf
  40994f:	pop    rdi
  409950:	je     0x4099cb
  409952:	jo     0x4099b9
  409954:	add    BYTE PTR [rax],al
  409956:	(bad)  
  409957:	add    BYTE PTR [rdi+0x5f],bl
  40995a:	jae    0x4099c1
  40995c:	je     0x4099d3
  40995e:	jae    0x4099c5
  409960:	jb     0x4099cf
  409962:	(bad)  
  409963:	je     0x4099cd
  409965:	gs jb  0x4099da
  409968:	add    BYTE PTR [rax],al
  40996a:	jno    0x40996c
  40996c:	pop    rdi
  40996d:	(bad)  
  40996e:	movsxd ebp,DWORD PTR [rbp+0x64]
  409971:	ins    BYTE PTR es:[rdi],dx
  409972:	outs   dx,BYTE PTR ds:[rsi]
  409973:	add    BYTE PTR [rax+0x0],bh
  409976:	pop    rdi
  409977:	(bad)  
  409978:	ins    DWORD PTR es:[rdi],dx
  409979:	jae    0x4099e2
  40997b:	pop    rdi
  40997c:	gs js  0x4099e8
  40997f:	je     0x409981
  409981:	add    BYTE PTR [rdx+0x65635f00],cl
  409987:	js     0x4099f2
  409989:	je     0x40998b
  40998b:	add    dl,bl
  40998d:	add    BYTE PTR [rdi+0x66],bl
  409990:	ins    DWORD PTR es:[rdi],dx
  409991:	outs   dx,DWORD PTR ds:[rsi]
  409992:	fs add BYTE PTR gs:[rax],al
  409996:	sbb    al,BYTE PTR [rcx]
  409998:	pop    rdi
  409999:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4099a0:	ins    DWORD PTR es:[rdi],dx
  4099a1:	add    BYTE PTR [rax+0x6f6c5f01],al
  4099a7:	movsxd ebp,DWORD PTR [rbx+0x0]
  4099aa:	and    eax,0x6e6f5f02
  4099af:	gs js  0x409a1b
  4099b2:	je     0x4099b4
  4099b4:	(bad)
  4099b8:	outs   dx,BYTE PTR ds:[rsi]
  4099b9:	ins    BYTE PTR es:[rdi],dx
  4099ba:	outs   dx,DWORD PTR ds:[rsi]
  4099bb:	movsxd ebp,DWORD PTR [rbx+0x0]
  4099be:	jg     0x4099c3
  4099c0:	(bad)  
  4099c1:	(bad)  
  4099c2:	outs   dx,DWORD PTR ds:[rsi]
  4099c3:	jb     0x409a39
  4099c5:	add    BYTE PTR [rax+0x6c616303],dl
  4099cb:	ins    BYTE PTR es:[rdi],dx
  4099cc:	outs   dx,DWORD PTR ds:[rsi]
  4099cd:	movsxd eax,DWORD PTR [rax]
  4099cf:	add    BYTE PTR [rbp+0x69786503],bl
  4099d5:	je     0x4099d7
  4099d7:	add    BYTE PTR [rax+0x72706603],dh
  4099dd:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  4099e4:	data16 jb 0x409a4c
  4099e7:	add    BYTE PTR gs:[rax],al
  4099ea:	ret    0x6603
  4099ed:	ja     0x409a61
  4099ef:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  4099f7:	(bad)  
  4099f8:	ins    BYTE PTR es:[rdi],dx
  4099f9:	ins    BYTE PTR es:[rdi],dx
  4099fa:	outs   dx,DWORD PTR ds:[rsi]
  4099fb:	movsxd eax,DWORD PTR [rax]
  4099fd:	add    bh,dh
  4099ff:	add    ebp,DWORD PTR [rbp+0x65]
  409a02:	ins    DWORD PTR es:[rdi],dx
  409a03:	movsxd ebp,DWORD PTR [rbp+0x70]
  409a06:	add    BYTE PTR [rax],al
  409a08:	clc    
  409a09:	add    ebp,DWORD PTR [rbp+0x65]
  409a0c:	ins    DWORD PTR es:[rdi],dx
  409a0d:	movsxd esi,DWORD PTR [rax+0x79]
  409a10:	add    BYTE PTR [rax],al
  409a12:	(bad)  
  409a13:	add    al,0x73
  409a15:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409a1c:	sub    eax,DWORD PTR [rbx+rsi*2]
  409a1f:	je     0x409a93
  409a21:	ins    BYTE PTR es:[rdi],dx
  409a22:	outs   dx,BYTE PTR gs:[rsi]
  409a24:	add    BYTE PTR [rax],al
  409a26:	cs add al,0x73
  409a29:	je     0x409a9d
  409a2b:	outs   dx,BYTE PTR ds:[rsi]
  409a2c:	movsxd ebp,DWORD PTR [rbp+0x70]
  409a2f:	add    BYTE PTR [rsi+0x4],cl
  409a32:	jbe    0x409a9a
  409a34:	jo     0x409aa8
  409a36:	imul   ebp,DWORD PTR [rsi+0x74],0xa5000066
  409a3d:	add    bl,BYTE PTR [rdi+0x5a]
  409a40:	xor    DWORD PTR [rax],edi
  409a42:	ins    BYTE PTR es:[rdi],dx
  409a43:	imul   esp,DWORD PTR [rdx+0x6f],0x6e697463
  409a4a:	je     0x409ab1
  409a4c:	jb     0x409abe
  409a4e:	pop    rdi
  409a4f:	push   0x64695f67
  409a54:	jbe    0x409a56
  409a56:	add    BYTE PTR [rax],al
  409a58:	xchg   edx,eax
  409a59:	sbb    ebx,DWORD PTR [rdi+0x5a]
  409a5c:	rex.WRX
  409a5d:	outs   dx,DWORD PTR ss:[rsi]
  409a5f:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  409a63:	xor    DWORD PTR gs:[rcx],esi
  409a66:	(bad)  
  409a67:	jo     0x409ad9
  409a69:	ins    BYTE PTR es:[rdi],dx
  409a6a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  409a71:	rex.XB xor al,BYTE PTR [r13+0x69]
  409a75:	push   rax
  409a76:	push   rax
  409a77:	movsxd eax,DWORD PTR [rax]
  409a79:	add    BYTE PTR [rax],al
  409a7b:	add    BYTE PTR [rbp+0x4e5a5f1b],dl
  409a81:	outs   dx,DWORD PTR ss:[rsi]
  409a83:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  409a87:	xor    DWORD PTR gs:[rcx],esi
  409a8a:	(bad)  
  409a8b:	jo     0x409afd
  409a8d:	ins    BYTE PTR es:[rdi],dx
  409a8e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  409a95:	xor    r8b,BYTE PTR [rbp+0x76]
  409a99:	add    BYTE PTR [rax],al
  409a9b:	add    BYTE PTR [rdx+0x1c],al
  409a9e:	pop    rdi
  409a9f:	pop    rdx
  409aa0:	rex.WRX
  409aa1:	outs   dx,DWORD PTR ss:[rsi]
  409aa3:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  409aa7:	xor    DWORD PTR gs:[rip+0x5f696c63],esi        # 0x5faa0711
  409aae:	(bad)  
  409aaf:	jo     0x409b21
  409ab1:	ins    BYTE PTR es:[rdi],dx
  409ab2:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  409ab9:	(bad)  
  409aba:	gs js  0x409b22
  409abd:	movsxd esi,DWORD PTR [rbp+0x74]
  409ac0:	gs rex.RB jbe 0x409ac4
  409ac4:	sbb    eax,0x545a5f3b
  409ac9:	push   rsi
  409aca:	rex.WRX
  409acb:	outs   dx,DWORD PTR ss:[rsi]
  409acd:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  409ad1:	xor    DWORD PTR gs:[rip+0x5f696c63],esi        # 0x5faa073b
  409ad8:	(bad)  
  409ad9:	jo     0x409b4b
  409adb:	ins    BYTE PTR es:[rdi],dx
  409adc:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  409ae3:	add    BYTE PTR [r8],r8b
  409ae6:	add    BYTE PTR [rax],al
  409ae8:	add    BYTE PTR [rax-0x70000000],dl
  409aee:	add    BYTE PTR [rax],al
  409af0:	ins    BYTE PTR es:[rdi],dx
  409af1:	imul   esp,DWORD PTR [rdx+0x6f],0x76617463
  409af8:	gs sub eax,0x6c642e34
  409afe:	ins    BYTE PTR es:[rdi],dx
  409aff:	add    BYTE PTR [rax+rdx*4],dl
  409b02:	add    BYTE PTR [rax],al
  409b04:	ins    BYTE PTR es:[rdi],dx
  409b05:	imul   esp,DWORD PTR [rdx+0x67],0x735f6363
  409b0c:	pop    rdi
  409b0d:	jae    0x409b74
  409b0f:	push   0x642e312d
  409b14:	ins    BYTE PTR es:[rdi],dx
  409b15:	ins    BYTE PTR es:[rdi],dx
  409b16:	add    BYTE PTR [rax],al
  409b18:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b1e:	add    BYTE PTR [rax],al
  409b20:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b26:	add    BYTE PTR [rax],al
  409b28:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b2e:	add    BYTE PTR [rax],al
  409b30:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b36:	add    BYTE PTR [rax],al
  409b38:	sub    BYTE PTR [rax+0x696c0000],dl
  409b3e:	(bad)
  409b43:	sub    ebp,DWORD PTR [rbx]
  409b45:	sub    eax,0x6c642e36
  409b4a:	ins    BYTE PTR es:[rdi],dx
  409b4b:	add    BYTE PTR [rax+rdx*4],bh
  409b4e:	add    BYTE PTR [rax],al
  409b50:	cmp    al,0x90
  409b52:	add    BYTE PTR [rax],al
  409b54:	cmp    al,0x90
  409b56:	add    BYTE PTR [rax],al
  409b58:	cmp    al,0x90
  409b5a:	add    BYTE PTR [rax],al
  409b5c:	cmp    al,0x90
  409b5e:	add    BYTE PTR [rax],al
  409b60:	cmp    al,0x90
  409b62:	add    BYTE PTR [rax],al
  409b64:	cmp    al,0x90
  409b66:	add    BYTE PTR [rax],al
  409b68:	cmp    al,0x90
  409b6a:	add    BYTE PTR [rax],al
  409b6c:	cmp    al,0x90
  409b6e:	add    BYTE PTR [rax],al
  409b70:	cmp    al,0x90
  409b72:	add    BYTE PTR [rax],al
  409b74:	cmp    al,0x90
  409b76:	add    BYTE PTR [rax],al
  409b78:	cmp    al,0x90
  409b7a:	add    BYTE PTR [rax],al
  409b7c:	cmp    al,0x90
  409b7e:	add    BYTE PTR [rax],al
  409b80:	cmp    al,0x90
  409b82:	add    BYTE PTR [rax],al
  409b84:	cmp    al,0x90
  409b86:	add    BYTE PTR [rax],al
  409b88:	cmp    al,0x90
  409b8a:	add    BYTE PTR [rax],al
  409b8c:	cmp    al,0x90
  409b8e:	add    BYTE PTR [rax],al
  409b90:	cmp    al,0x90
  409b92:	add    BYTE PTR [rax],al
  409b94:	cmp    al,0x90
  409b96:	add    BYTE PTR [rax],al
  409b98:	cmp    al,0x90
  409b9a:	add    BYTE PTR [rax],al
  409b9c:	cmp    al,0x90
  409b9e:	add    BYTE PTR [rax],al
  409ba0:	cmp    al,0x90
  409ba2:	add    BYTE PTR [rax],al
  409ba4:	cmp    al,0x90
  409ba6:	add    BYTE PTR [rax],al
  409ba8:	rex.WXB
  409ba9:	rex.RB push r10
  409bab:	rex.WRX
  409bac:	rex.RB
  409bad:	xor    r14,QWORD PTR [rdx]
  409bb0:	cs fs ins BYTE PTR es:[rdi],dx
  409bb3:	ins    BYTE PTR es:[rdi],dx
  409bb4:	add    BYTE PTR [rax],al
  409bb6:	add    BYTE PTR [rax],al
  409bb8:	push   rax
  409bb9:	nop
  409bba:	add    BYTE PTR [rax],al
  409bbc:	push   rax
  409bbd:	nop
  409bbe:	add    BYTE PTR [rax],al
  409bc0:	push   rax
  409bc1:	nop
  409bc2:	add    BYTE PTR [rax],al
  409bc4:	push   rax
  409bc5:	nop
  409bc6:	add    BYTE PTR [rax],al
  409bc8:	push   rax
  409bc9:	nop
  409bca:	add    BYTE PTR [rax],al
  409bcc:	push   rax
  409bcd:	nop
  409bce:	add    BYTE PTR [rax],al
  409bd0:	push   rax
  409bd1:	nop
  409bd2:	add    BYTE PTR [rax],al
  409bd4:	push   rax
  409bd5:	nop
  409bd6:	add    BYTE PTR [rax],al
  409bd8:	push   rax
  409bd9:	nop
  409bda:	add    BYTE PTR [rax],al
  409bdc:	push   rax
  409bdd:	nop
  409bde:	add    BYTE PTR [rax],al
  409be0:	push   rax
  409be1:	nop
  409be2:	add    BYTE PTR [rax],al
  409be4:	push   rax
  409be5:	nop
  409be6:	add    BYTE PTR [rax],al
  409be8:	push   rax
  409be9:	nop
  409bea:	add    BYTE PTR [rax],al
  409bec:	push   rax
  409bed:	nop
  409bee:	add    BYTE PTR [rax],al
  409bf0:	push   rax
  409bf1:	nop
  409bf2:	add    BYTE PTR [rax],al
  409bf4:	push   rax
  409bf5:	nop
  409bf6:	add    BYTE PTR [rax],al
  409bf8:	push   rax
  409bf9:	nop
  409bfa:	add    BYTE PTR [rax],al
  409bfc:	push   rax
  409bfd:	nop
  409bfe:	add    BYTE PTR [rax],al
  409c00:	push   rax
  409c01:	nop
  409c02:	add    BYTE PTR [rax],al
  409c04:	push   rax
  409c05:	nop
  409c06:	add    BYTE PTR [rax],al
  409c08:	push   rax
  409c09:	nop
  409c0a:	add    BYTE PTR [rax],al
  409c0c:	push   rax
  409c0d:	nop
  409c0e:	add    BYTE PTR [rax],al
  409c10:	push   rax
  409c11:	nop
  409c12:	add    BYTE PTR [rax],al
  409c14:	push   rax
  409c15:	nop
  409c16:	add    BYTE PTR [rax],al
  409c18:	push   rax
  409c19:	nop
  409c1a:	add    BYTE PTR [rax],al
  409c1c:	push   rax
  409c1d:	nop
  409c1e:	add    BYTE PTR [rax],al
  409c20:	push   rax
  409c21:	nop
  409c22:	add    BYTE PTR [rax],al
  409c24:	push   rax
  409c25:	nop
  409c26:	add    BYTE PTR [rax],al
  409c28:	push   rax
  409c29:	nop
  409c2a:	add    BYTE PTR [rax],al
  409c2c:	ins    DWORD PTR es:[rdi],dx
  409c2d:	jae    0x409ca5
  409c2f:	movsxd esi,DWORD PTR [rdx+0x74]
  409c32:	cs fs ins BYTE PTR es:[rdi],dx
  409c35:	ins    BYTE PTR es:[rdi],dx
  409c36:	add    BYTE PTR [rax],al
  409c38:	fs nop
  409c3a:	add    BYTE PTR [rax],al
  409c3c:	fs nop
  409c3e:	add    BYTE PTR [rax],al
  409c40:	fs nop
  409c42:	add    BYTE PTR [rax],al
  409c44:	fs nop
  409c46:	add    BYTE PTR [rax],al
  409c48:	fs nop
  409c4a:	add    BYTE PTR [rax],al
  409c4c:	ins    BYTE PTR es:[rdi],dx
  409c4d:	imul   esp,DWORD PTR [rdx+0x6f],0x6e697463
  409c54:	je     0x409cbb
  409c56:	jb     0x409cc8
  409c58:	sub    eax,0x6c642e34
  409c5d:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x17],dh
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x4019],ah
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x19],dh
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rsi*2+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000000040c000 <.reloc>:
  40c000:	add    BYTE PTR [rax],ah
  40c002:	add    BYTE PTR [rax],al
  40c004:	or     al,0x0
  40c006:	add    BYTE PTR [rax],al
  40c008:	fsubr  DWORD PTR [rdi+0x30000000]
  40c00e:	add    BYTE PTR [rax],al
  40c010:	adc    BYTE PTR [rax],al
  40c012:	add    BYTE PTR [rax],al
  40c014:	adc    BYTE PTR [rax-0x5f8f5fe0],ah
  40c01a:	js     0x40bfbc
  40c01c:	add    BYTE PTR [rax+0x0],al
  40c01f:	add    BYTE PTR [rax+0x0],dl
  40c022:	add    BYTE PTR [rax],al
  40c024:	jo     0x40bfc6
  40c026:	js     0x40bfc8
  40c028:	and    BYTE PTR [rax-0x5cef5d00],0x20
  40c02f:	movabs ds:0xa360a350a340a330,eax
  40c038:	jo     0x40bfdd
  40c03a:	and    BYTE PTR [rbx-0x5c5f5c70],0xb0
  40c041:	movabs ds:0xa3f0a3e0a3d0a3c0,eax
  40c04a:	add    BYTE PTR [rax+rdx*1+0x30a420a4],ah
  40c051:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c052:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c054:	push   rax
  40c055:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c056:	(bad)  
  40c057:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c058:	jo     0x40bffe
  40c05a:	and    BYTE PTR [rax+rdx*4-0x4f5b5f5c],0xa4
  40c062:	shl    BYTE PTR [rax+rdx*8-0xf5b1f5c],0xa4
  40c06a:	add    BYTE PTR [rax],al
  40c06c:	add    BYTE PTR [rax+0x140000],ah
  40c072:	add    BYTE PTR [rax],al
  40c074:	or     BYTE PTR [rax-0x5fd75fe0],ah
  40c07a:	movabs al,ds:0xb0000000a048
  40c084:	adc    BYTE PTR [rax],al
  40c086:	add    BYTE PTR [rax],al
  40c088:	and    BYTE PTR [rax-0x5fcf5fd8],ah
  40c08e:	.byte 0x38
  40c08f:	.byte 0xa0
