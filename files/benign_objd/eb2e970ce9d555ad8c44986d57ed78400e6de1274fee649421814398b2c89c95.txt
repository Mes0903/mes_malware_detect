
eb2e970ce9d555ad8c44986d57ed78400e6de1274fee649421814398b2c89c95.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x177f5]        # 0x418810
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x177f6]        # 0x418820
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x177f9]        # 0x418830
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x177bc]        # 0x418800
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x175af]        # 0x418600
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x17791]        # 0x4187f0
  40105f:	mov    DWORD PTR [rip+0x19fa3],edx        # 0x41b008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x410a90
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x40ab60
  401081:	mov    rdx,QWORD PTR [rip+0x17618]        # 0x4186a0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x175fe]        # 0x418690
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x17684]        # 0x418720
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x1759b]        # 0x418640
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x40a740
  4010af:	mov    rax,QWORD PTR [rip+0x174da]        # 0x418590
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x410a90
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x9919]        # 0x40aa40
  401127:	call   0x40aa30
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x175e5]        # 0x418750
  40116b:	lea    r8,[rip+0x19ea6]        # 0x41b018
  401172:	lea    rdx,[rip+0x19ea7]        # 0x41b020
  401179:	lea    rcx,[rip+0x19ea8]        # 0x41b028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x19e78],eax        # 0x41b000
  401188:	lea    rax,[rip+0x19e71]        # 0x41b000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x17575]        # 0x418710
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x410aa8
  4011a3:	mov    DWORD PTR [rip+0x19e67],eax        # 0x41b010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x1762a]        # 0x4187f0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x1747b]        # 0x418670
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1e312]        # 0x41f514
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x17457]        # 0x418680
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x19dba],0x1        # 0x41b004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x1737c]        # 0x4185e0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x40ad50
  40127d:	lea    rcx,[rip+0xa06c]        # 0x40b2f0
  401284:	call   QWORD PTR [rip+0x1e282]        # 0x41f50c
  40128a:	mov    rdx,QWORD PTR [rip+0x173cf]        # 0x418660
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x40b200
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x410ad0
  4012a5:	call   0x40ab40
  4012aa:	mov    rax,QWORD PTR [rip+0x1734f]        # 0x418600
  4012b1:	mov    QWORD PTR [rip+0x1d320],rax        # 0x41e5d8
  4012b8:	mov    rax,QWORD PTR [rip+0x17371]        # 0x418630
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x1d2b9],rax        # 0x41e5d0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x10cca],eax        # 0x412000
  401336:	mov    r12d,DWORD PTR [rip+0x19ceb]        # 0x41b028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x410998
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x19cc2]        # 0x41b020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x410938
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x410998
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x410990
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x19c6a],rbp        # 0x41b020
  4013b6:	call   0x40a710
  4013bb:	mov    rax,QWORD PTR [rip+0x1725e]        # 0x418620
  4013c2:	mov    rdx,QWORD PTR [rip+0x19c4f]        # 0x41b018
  4013c9:	mov    ecx,DWORD PTR [rip+0x19c59]        # 0x41b028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x19c3c]        # 0x41b018
  4013dc:	mov    rdx,QWORD PTR [rip+0x19c3d]        # 0x41b020
  4013e3:	call   0x410bb0
  4013e8:	mov    ecx,DWORD PTR [rip+0x19c1a]        # 0x41b008
  4013ee:	mov    DWORD PTR [rip+0x19c18],eax        # 0x41b00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x19c02]        # 0x41b004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x410a78
  40140b:	mov    eax,DWORD PTR [rip+0x19bfb]        # 0x41b00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x17249]        # 0x418680
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x410a80
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x1727d]        # 0x4186e0
  401463:	mov    rcx,QWORD PTR [rip+0x17266]        # 0x4186d0
  40146a:	call   0x410a60
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x1e023]        # 0x41f4bc
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x17259]        # 0x418700
  4014a7:	mov    rcx,QWORD PTR [rip+0x17242]        # 0x4186f0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x410a60
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x410a18
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x17315]        # 0x4187f0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x40a750
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x172e5]        # 0x4187f0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x40a750
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	movzx  eax,BYTE PTR [rcx]
  401533:	cmp    al,0x2d
  401535:	jne    0x401547
  401537:	jmp    0x4015a0
  401539:	nop    DWORD PTR [rax+0x0]
  401540:	add    rcx,0x1
  401544:	movzx  eax,BYTE PTR [rcx]
  401547:	lea    edx,[rax-0x30]
  40154a:	cmp    dl,0x9
  40154d:	jbe    0x401540
  40154f:	cmp    al,0x2e
  401551:	je     0x401540
  401553:	movzx  edx,BYTE PTR [rcx-0x1]
  401557:	lea    rax,[rcx-0x1]
  40155b:	cmp    dl,0x2e
  40155e:	je     0x401595
  401560:	cmp    dl,0x30
  401563:	jne    0x40156e
  401565:	sub    rax,0x1
  401569:	cmp    BYTE PTR [rax],0x30
  40156c:	je     0x401565
  40156e:	add    rax,0x1
  401572:	cmp    rax,rcx
  401575:	jne    0x40158b
  401577:	jmp    0x401595
  401579:	nop    DWORD PTR [rax+0x0]
  401580:	add    rax,0x1
  401584:	add    rcx,0x1
  401588:	mov    BYTE PTR [rax-0x1],dl
  40158b:	movzx  edx,BYTE PTR [rcx]
  40158e:	test   dl,dl
  401590:	jne    0x401580
  401592:	mov    BYTE PTR [rax],0x0
  401595:	repz ret 
  401597:	nop    WORD PTR [rax+rax*1+0x0]
  4015a0:	movzx  eax,BYTE PTR [rcx+0x1]
  4015a4:	add    rcx,0x1
  4015a8:	jmp    0x401547
  4015aa:	nop    WORD PTR [rax+rax*1+0x0]
  4015b0:	push   r15
  4015b2:	push   r14
  4015b4:	push   r13
  4015b6:	push   r12
  4015b8:	push   rbp
  4015b9:	push   rdi
  4015ba:	push   rsi
  4015bb:	push   rbx
  4015bc:	sub    rsp,0xad8
  4015c3:	mov    r12,QWORD PTR [rip+0x17396]        # 0x418960
  4015ca:	xor    eax,eax
  4015cc:	mov    rbp,QWORD PTR [rip+0x1739d]        # 0x418970
  4015d3:	lea    rbx,[rsp+0x5a0]
  4015db:	mov    QWORD PTR [rsp+0xb20],rcx
  4015e3:	mov    ecx,0xa5
  4015e8:	mov    rdi,rbx
  4015eb:	rep stos QWORD PTR es:[rdi],rax
  4015ee:	movsxd rax,DWORD PTR [r12]
  4015f2:	shl    rax,0x6
  4015f6:	add    rax,QWORD PTR [rbp+0x0]
  4015fa:	mov    esi,DWORD PTR [rax+0x20]
  4015fd:	test   esi,esi
  4015ff:	jne    0x401615
  401601:	add    rsp,0xad8
  401608:	pop    rbx
  401609:	pop    rsi
  40160a:	pop    rdi
  40160b:	pop    rbp
  40160c:	pop    r12
  40160e:	pop    r13
  401610:	pop    r14
  401612:	pop    r15
  401614:	ret    
  401615:	lea    rcx,[rip+0x11cd4]        # 0x4132f0
  40161c:	lea    rsi,[rsp+0x70]
  401621:	call   0x403070
  401626:	movsxd rax,DWORD PTR [r12]
  40162a:	lea    rdx,[rip+0x11cc0]        # 0x4132f1
  401631:	mov    rcx,rsi
  401634:	shl    rax,0x6
  401638:	add    rax,QWORD PTR [rbp+0x0]
  40163c:	mov    r8,QWORD PTR [rax]
  40163f:	call   0x410968
  401644:	mov    rcx,rsi
  401647:	call   0x403070
  40164c:	movsxd rax,DWORD PTR [r12]
  401650:	shl    rax,0x6
  401654:	add    rax,QWORD PTR [rbp+0x0]
  401658:	mov    r11d,DWORD PTR [rax+0xc]
  40165c:	test   r11d,r11d
  40165f:	jle    0x401e01
  401665:	mov    rdx,QWORD PTR [rax+0x10]
  401669:	mov    rdi,QWORD PTR [rip+0x172a0]        # 0x418910
  401670:	mov    edi,DWORD PTR [rdi]
  401672:	cmp    DWORD PTR [rdx],edi
  401674:	je     0x4020e0
  40167a:	mov    ecx,DWORD PTR [rax+0x8]
  40167d:	mov    rdi,QWORD PTR [rax+0x38]
  401681:	mov    r15,rsi
  401684:	call   0x403430
  401689:	lea    rdx,[rip+0x11cc5]        # 0x413355
  401690:	mov    r8,rax
  401693:	mov    r9,rdi
  401696:	mov    rcx,rsi
  401699:	call   0x410968
  40169e:	mov    edx,DWORD PTR [r15]
  4016a1:	add    r15,0x4
  4016a5:	lea    eax,[rdx-0x1010101]
  4016ab:	not    edx
  4016ad:	and    eax,edx
  4016af:	and    eax,0x80808080
  4016b4:	je     0x40169e
  4016b6:	mov    edx,eax
  4016b8:	shr    edx,0x10
  4016bb:	test   eax,0x8080
  4016c0:	cmove  eax,edx
  4016c3:	lea    rdx,[r15+0x2]
  4016c7:	cmove  r15,rdx
  4016cb:	add    al,al
  4016cd:	movsxd rax,DWORD PTR [r12]
  4016d1:	sbb    r15,0x3
  4016d5:	sub    r15,rsi
  4016d8:	shl    rax,0x6
  4016dc:	add    rax,QWORD PTR [rbp+0x0]
  4016e0:	mov    eax,DWORD PTR [rax+0x8]
  4016e3:	cmp    eax,0x2
  4016e6:	je     0x401703
  4016e8:	cmp    eax,0x6
  4016eb:	ja     0x401b60
  4016f1:	lea    rdx,[rip+0x11e44]        # 0x41353c
  4016f8:	mov    ecx,eax
  4016fa:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4016fe:	add    rdx,rcx
  401701:	jmp    rdx
  401703:	mov    rax,QWORD PTR [rip+0x17236]        # 0x418940
  40170a:	mov    rcx,QWORD PTR [rsp+0xb20]
  401712:	mov    rdx,QWORD PTR [rax]
  401715:	call   0x404710
  40171a:	mov    rcx,rbx
  40171d:	mov    rdx,rax
  401720:	mov    rdi,rax
  401723:	call   0x410940
  401728:	mov    rcx,rsi
  40172b:	mov    r8d,0x528
  401731:	mov    rdx,rbx
  401734:	call   0x406a30
  401739:	mov    rcx,rdi
  40173c:	call   0x4109d8
  401741:	mov    rdx,rsi
  401744:	mov    ecx,DWORD PTR [rdx]
  401746:	add    rdx,0x4
  40174a:	lea    eax,[rcx-0x1010101]
  401750:	not    ecx
  401752:	and    eax,ecx
  401754:	and    eax,0x80808080
  401759:	je     0x401744
  40175b:	mov    ecx,eax
  40175d:	mov    r9d,0x3b7d
  401763:	shr    ecx,0x10
  401766:	test   eax,0x8080
  40176b:	cmove  eax,ecx
  40176e:	lea    rcx,[rdx+0x2]
  401772:	cmove  rdx,rcx
  401776:	add    al,al
  401778:	mov    rcx,rsi
  40177b:	sbb    rdx,0x3
  40177f:	mov    WORD PTR [rdx],r9w
  401783:	mov    BYTE PTR [rdx+0x2],0x0
  401787:	call   0x403070
  40178c:	movsxd rax,DWORD PTR [r12]
  401790:	mov    rbx,QWORD PTR [rip+0x17179]        # 0x418910
  401797:	shl    rax,0x6
  40179b:	add    rax,QWORD PTR [rbp+0x0]
  40179f:	mov    rdx,QWORD PTR [rax+0x10]
  4017a3:	movsxd rdx,DWORD PTR [rdx]
  4017a6:	cmp    edx,DWORD PTR [rbx]
  4017a8:	je     0x401fab
  4017ae:	mov    ecx,DWORD PTR [rax+0x8]
  4017b1:	mov    rbx,QWORD PTR [rax+0x38]
  4017b5:	call   0x4034d0
  4017ba:	lea    rdx,[rip+0x11cd7]        # 0x413498
  4017c1:	mov    r8,rax
  4017c4:	mov    QWORD PTR [rsp+0x20],rbx
  4017c9:	mov    r9,rbx
  4017cc:	mov    rcx,rsi
  4017cf:	call   0x410968
  4017d4:	mov    rcx,rsi
  4017d7:	call   0x403070
  4017dc:	lea    rcx,[rip+0x11d2d]        # 0x413510
  4017e3:	call   0x403070
  4017e8:	lea    rcx,[rip+0x11d48]        # 0x413537
  4017ef:	call   0x403070
  4017f4:	jmp    0x401601
  4017f9:	nop    DWORD PTR [rax+0x0]
  401800:	mov    QWORD PTR [rsp+0x48],0x0
  401809:	mov    QWORD PTR [rsp+0x60],0x0
  401812:	mov    QWORD PTR [rsp+0x58],0x0
  40181b:	mov    QWORD PTR [rsp+0x50],0x0
  401824:	mov    r13,QWORD PTR [rip+0x17115]        # 0x418940
  40182b:	cmp    QWORD PTR [r13+0x0],0x1
  401830:	je     0x40227e
  401836:	mov    edi,0x1
  40183b:	mov    rcx,rbx
  40183e:	lea    r14,[rip+0x11d13]        # 0x413558
  401845:	mov    rbx,rdi
  401848:	mov    rdi,rcx
  40184b:	nop    DWORD PTR [rax+rax*1+0x0]
  401850:	cmp    eax,0x6
  401853:	ja     0x4018e3
  401859:	movsxd rax,DWORD PTR [r14+rax*4]
  40185d:	add    rax,r14
  401860:	jmp    rax
  401862:	cmp    QWORD PTR [rsp+0x48],0x0
  401868:	je     0x402260
  40186e:	mov    rax,QWORD PTR [rsp+0x48]
  401873:	lea    rdx,[rip+0x11b63]        # 0x4133dd
  40187a:	movsd  xmm0,QWORD PTR [rax]
  40187e:	lea    rcx,[rax+0x8]
  401882:	movapd xmm2,xmm0
  401886:	movq   r8,xmm0
  40188b:	mov    QWORD PTR [rsp+0x48],rcx
  401890:	mov    rcx,rdi
  401893:	call   0x410968
  401898:	mov    rcx,rdi
  40189b:	call   0x401530
  4018a0:	mov    rdx,rdi
  4018a3:	mov    ecx,DWORD PTR [rdx]
  4018a5:	add    rdx,0x4
  4018a9:	lea    eax,[rcx-0x1010101]
  4018af:	not    ecx
  4018b1:	and    eax,ecx
  4018b3:	and    eax,0x80808080
  4018b8:	je     0x4018a3
  4018ba:	mov    ecx,eax
  4018bc:	mov    r10d,0x202c
  4018c2:	shr    ecx,0x10
  4018c5:	test   eax,0x8080
  4018ca:	cmove  eax,ecx
  4018cd:	lea    rcx,[rdx+0x2]
  4018d1:	cmove  rdx,rcx
  4018d5:	add    al,al
  4018d7:	sbb    rdx,0x3
  4018db:	mov    WORD PTR [rdx],r10w
  4018df:	mov    BYTE PTR [rdx+0x2],0x0
  4018e3:	mov    rdx,rdi
  4018e6:	mov    ecx,DWORD PTR [rdx]
  4018e8:	add    rdx,0x4
  4018ec:	lea    eax,[rcx-0x1010101]
  4018f2:	not    ecx
  4018f4:	and    eax,ecx
  4018f6:	and    eax,0x80808080
  4018fb:	je     0x4018e6
  4018fd:	mov    ecx,eax
  4018ff:	shr    ecx,0x10
  401902:	test   eax,0x8080
  401907:	cmove  eax,ecx
  40190a:	lea    rcx,[rdx+0x2]
  40190e:	cmove  rdx,rcx
  401912:	add    al,al
  401914:	sbb    rdx,0x3
  401918:	sub    rdx,rdi
  40191b:	add    r15,rdx
  40191e:	cmp    r15,0x527
  401925:	ja     0x401b95
  40192b:	mov    rdx,rdi
  40192e:	mov    rcx,rsi
  401931:	call   0x410958
  401936:	mov    rax,QWORD PTR [r13+0x0]
  40193a:	mov    r8d,ebx
  40193d:	lea    rdx,[rbx+0x1]
  401941:	lea    rcx,[rax-0x1]
  401945:	cmp    rcx,rbx
  401948:	jbe    0x401bf0
  40194e:	movsxd rax,DWORD PTR [r12]
  401952:	mov    rbx,rdx
  401955:	shl    rax,0x6
  401959:	add    rax,QWORD PTR [rbp+0x0]
  40195d:	mov    eax,DWORD PTR [rax+0x8]
  401960:	jmp    0x401850
  401965:	cmp    QWORD PTR [rsp+0x50],0x0
  40196b:	je     0x402220
  401971:	mov    rax,QWORD PTR [rsp+0x50]
  401976:	lea    rdx,[rip+0x11a07]        # 0x413384
  40197d:	movsx  r8d,WORD PTR [rax]
  401981:	lea    rcx,[rax+0x2]
  401985:	mov    QWORD PTR [rsp+0x50],rcx
  40198a:	mov    rcx,rdi
  40198d:	call   0x410968
  401992:	jmp    0x4018e3
  401997:	nop    WORD PTR [rax+rax*1+0x0]
  4019a0:	cmp    QWORD PTR [rsp+0xb20],0x0
  4019a9:	je     0x402160
  4019af:	mov    rcx,QWORD PTR [rsp+0xb20]
  4019b7:	mov    rax,QWORD PTR [rsp+0xb20]
  4019bf:	lea    rdx,[rip+0x119be]        # 0x413384
  4019c6:	movsx  r8d,BYTE PTR [rcx]
  4019ca:	add    rax,0x1
  4019ce:	mov    rcx,rdi
  4019d1:	mov    QWORD PTR [rsp+0x68],rax
  4019d6:	call   0x410968
  4019db:	mov    rax,QWORD PTR [rsp+0x68]
  4019e0:	mov    QWORD PTR [rsp+0xb20],rax
  4019e8:	jmp    0x4018e3
  4019ed:	nop    DWORD PTR [rax]
  4019f0:	cmp    QWORD PTR [rsp+0x60],0x0
  4019f6:	je     0x402180
  4019fc:	mov    rax,QWORD PTR [rsp+0x60]
  401a01:	pxor   xmm0,xmm0
  401a05:	lea    rdx,[rip+0x119b7]        # 0x4133c3
  401a0c:	cvtss2sd xmm0,DWORD PTR [rax]
  401a10:	lea    rcx,[rax+0x4]
  401a14:	movapd xmm2,xmm0
  401a18:	movq   r8,xmm0
  401a1d:	mov    QWORD PTR [rsp+0x60],rcx
  401a22:	mov    rcx,rdi
  401a25:	call   0x410968
  401a2a:	jmp    0x4018e3
  401a2f:	nop
  401a30:	cmp    QWORD PTR [rsp+0x58],0x0
  401a36:	je     0x402240
  401a3c:	mov    rax,QWORD PTR [rsp+0x58]
  401a41:	lea    rdx,[rip+0x11963]        # 0x4133ab
  401a48:	lea    rcx,[rax+0x4]
  401a4c:	mov    r8d,DWORD PTR [rax]
  401a4f:	mov    QWORD PTR [rsp+0x58],rcx
  401a54:	mov    rcx,rdi
  401a57:	call   0x410968
  401a5c:	jmp    0x4018e3
  401a61:	mov    rdi,QWORD PTR [rsp+0xb20]
  401a69:	mov    QWORD PTR [rsp+0x60],0x0
  401a72:	mov    QWORD PTR [rsp+0x58],0x0
  401a7b:	mov    QWORD PTR [rsp+0x50],0x0
  401a84:	mov    QWORD PTR [rsp+0xb20],0x0
  401a90:	mov    QWORD PTR [rsp+0x48],rdi
  401a95:	jmp    0x401824
  401a9a:	nop    WORD PTR [rax+rax*1+0x0]
  401aa0:	mov    rdi,QWORD PTR [rsp+0xb20]
  401aa8:	mov    QWORD PTR [rsp+0x48],0x0
  401ab1:	mov    QWORD PTR [rsp+0x60],0x0
  401aba:	mov    QWORD PTR [rsp+0x50],0x0
  401ac3:	mov    QWORD PTR [rsp+0xb20],0x0
  401acf:	mov    QWORD PTR [rsp+0x58],rdi
  401ad4:	jmp    0x401824
  401ad9:	nop    DWORD PTR [rax+0x0]
  401ae0:	mov    rdi,QWORD PTR [rsp+0xb20]
  401ae8:	mov    QWORD PTR [rsp+0x48],0x0
  401af1:	mov    QWORD PTR [rsp+0x60],0x0
  401afa:	mov    QWORD PTR [rsp+0x58],0x0
  401b03:	mov    QWORD PTR [rsp+0xb20],0x0
  401b0f:	mov    QWORD PTR [rsp+0x50],rdi
  401b14:	jmp    0x401824
  401b19:	nop    DWORD PTR [rax+0x0]
  401b20:	mov    rdi,QWORD PTR [rsp+0xb20]
  401b28:	mov    QWORD PTR [rsp+0x48],0x0
  401b31:	mov    QWORD PTR [rsp+0x58],0x0
  401b3a:	mov    QWORD PTR [rsp+0x50],0x0
  401b43:	mov    QWORD PTR [rsp+0xb20],0x0
  401b4f:	mov    QWORD PTR [rsp+0x60],rdi
  401b54:	jmp    0x401824
  401b59:	nop    DWORD PTR [rax+0x0]
  401b60:	mov    QWORD PTR [rsp+0x48],0x0
  401b69:	mov    QWORD PTR [rsp+0x60],0x0
  401b72:	mov    QWORD PTR [rsp+0x58],0x0
  401b7b:	mov    QWORD PTR [rsp+0x50],0x0
  401b84:	mov    QWORD PTR [rsp+0xb20],0x0
  401b90:	jmp    0x401824
  401b95:	mov    rcx,rsi
  401b98:	mov    r15,rsi
  401b9b:	call   0x403070
  401ba0:	mov    rdx,rdi
  401ba3:	mov    rcx,rsi
  401ba6:	call   0x410940
  401bab:	mov    edx,DWORD PTR [r15]
  401bae:	add    r15,0x4
  401bb2:	lea    eax,[rdx-0x1010101]
  401bb8:	not    edx
  401bba:	and    eax,edx
  401bbc:	and    eax,0x80808080
  401bc1:	je     0x401bab
  401bc3:	mov    edx,eax
  401bc5:	shr    edx,0x10
  401bc8:	test   eax,0x8080
  401bcd:	cmove  eax,edx
  401bd0:	lea    rdx,[r15+0x2]
  401bd4:	cmove  r15,rdx
  401bd8:	add    al,al
  401bda:	sbb    r15,0x3
  401bde:	sub    r15,rsi
  401be1:	jmp    0x401936
  401be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bf0:	mov    rcx,rdi
  401bf3:	mov    rdi,rbx
  401bf6:	cmp    rax,rdi
  401bf9:	mov    rbx,rcx
  401bfc:	jbe    0x401741
  401c02:	movsxd rdi,r8d
  401c05:	lea    r14,[rip+0x11968]        # 0x413574
  401c0c:	add    rdi,0x1
  401c10:	movsxd rax,DWORD PTR [r12]
  401c14:	shl    rax,0x6
  401c18:	add    rax,QWORD PTR [rbp+0x0]
  401c1c:	cmp    DWORD PTR [rax+0x8],0x6
  401c20:	ja     0x401c70
  401c22:	mov    eax,DWORD PTR [rax+0x8]
  401c25:	movsxd rax,DWORD PTR [r14+rax*4]
  401c29:	add    rax,r14
  401c2c:	jmp    rax
  401c2e:	xchg   ax,ax
  401c30:	cmp    QWORD PTR [rsp+0x48],0x0
  401c36:	je     0x402140
  401c3c:	mov    rax,QWORD PTR [rsp+0x48]
  401c41:	lea    rdx,[rip+0x11795]        # 0x4133dd
  401c48:	movsd  xmm0,QWORD PTR [rax]
  401c4c:	lea    rcx,[rax+0x8]
  401c50:	movapd xmm2,xmm0
  401c54:	movq   r8,xmm0
  401c59:	mov    QWORD PTR [rsp+0x48],rcx
  401c5e:	mov    rcx,rbx
  401c61:	call   0x410968
  401c66:	mov    rcx,rbx
  401c69:	call   0x401530
  401c6e:	xchg   ax,ax
  401c70:	mov    rdx,rbx
  401c73:	mov    ecx,DWORD PTR [rdx]
  401c75:	add    rdx,0x4
  401c79:	lea    eax,[rcx-0x1010101]
  401c7f:	not    ecx
  401c81:	and    eax,ecx
  401c83:	and    eax,0x80808080
  401c88:	je     0x401c73
  401c8a:	mov    ecx,eax
  401c8c:	shr    ecx,0x10
  401c8f:	test   eax,0x8080
  401c94:	cmove  eax,ecx
  401c97:	lea    rcx,[rdx+0x2]
  401c9b:	cmove  rdx,rcx
  401c9f:	add    al,al
  401ca1:	sbb    rdx,0x3
  401ca5:	sub    rdx,rbx
  401ca8:	add    r15,rdx
  401cab:	cmp    r15,0x527
  401cb2:	ja     0x401db0
  401cb8:	mov    rdx,rbx
  401cbb:	mov    rcx,rsi
  401cbe:	call   0x410958
  401cc3:	cmp    QWORD PTR [r13+0x0],rdi
  401cc7:	lea    rax,[rdi+0x1]
  401ccb:	jbe    0x401741
  401cd1:	mov    rdi,rax
  401cd4:	jmp    0x401c10
  401cd9:	nop    DWORD PTR [rax+0x0]
  401ce0:	cmp    QWORD PTR [rsp+0x50],0x0
  401ce6:	je     0x4021a0
  401cec:	mov    rax,QWORD PTR [rsp+0x50]
  401cf1:	lea    rdx,[rip+0x116ec]        # 0x4133e4
  401cf8:	mov    rcx,rbx
  401cfb:	movsx  r8d,WORD PTR [rax]
  401cff:	call   0x410968
  401d04:	jmp    0x401c70
  401d09:	nop    DWORD PTR [rax+0x0]
  401d10:	cmp    QWORD PTR [rsp+0x60],0x0
  401d16:	je     0x4021e0
  401d1c:	mov    rax,QWORD PTR [rsp+0x60]
  401d21:	pxor   xmm0,xmm0
  401d25:	lea    rdx,[rip+0x116bf]        # 0x4133eb
  401d2c:	mov    rcx,rbx
  401d2f:	cvtss2sd xmm0,DWORD PTR [rax]
  401d33:	movapd xmm2,xmm0
  401d37:	movq   r8,xmm0
  401d3c:	call   0x410968
  401d41:	jmp    0x401c70
  401d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d50:	cmp    QWORD PTR [rsp+0xb20],0x0
  401d59:	je     0x4021c0
  401d5f:	mov    rax,QWORD PTR [rsp+0xb20]
  401d67:	lea    rdx,[rip+0x11676]        # 0x4133e4
  401d6e:	mov    rcx,rbx
  401d71:	movsx  r8d,BYTE PTR [rax]
  401d75:	call   0x410968
  401d7a:	jmp    0x401c70
  401d7f:	nop
  401d80:	cmp    QWORD PTR [rsp+0x58],0x0
  401d86:	je     0x402200
  401d8c:	mov    rax,QWORD PTR [rsp+0x58]
  401d91:	lea    rdx,[rip+0x1164f]        # 0x4133e7
  401d98:	mov    rcx,rbx
  401d9b:	mov    r8d,DWORD PTR [rax]
  401d9e:	call   0x410968
  401da3:	jmp    0x401c70
  401da8:	nop    DWORD PTR [rax+rax*1+0x0]
  401db0:	mov    rcx,rsi
  401db3:	mov    r15,rsi
  401db6:	call   0x403070
  401dbb:	mov    rdx,rbx
  401dbe:	mov    rcx,rsi
  401dc1:	call   0x410940
  401dc6:	mov    edx,DWORD PTR [r15]
  401dc9:	add    r15,0x4
  401dcd:	lea    eax,[rdx-0x1010101]
  401dd3:	not    edx
  401dd5:	and    eax,edx
  401dd7:	and    eax,0x80808080
  401ddc:	je     0x401dc6
  401dde:	mov    edx,eax
  401de0:	shr    edx,0x10
  401de3:	test   eax,0x8080
  401de8:	cmove  eax,edx
  401deb:	lea    rdx,[r15+0x2]
  401def:	cmove  r15,rdx
  401df3:	add    al,al
  401df5:	sbb    r15,0x3
  401df9:	sub    r15,rsi
  401dfc:	jmp    0x401cc3
  401e01:	mov    ecx,DWORD PTR [rax+0x8]
  401e04:	mov    rdi,QWORD PTR [rax+0x38]
  401e08:	call   0x403430
  401e0d:	lea    rdx,[rip+0x116af]        # 0x4134c3
  401e14:	mov    r8,rax
  401e17:	mov    r9,rdi
  401e1a:	mov    rcx,rsi
  401e1d:	call   0x410968
  401e22:	movsxd rax,DWORD PTR [r12]
  401e26:	shl    rax,0x6
  401e2a:	add    rax,QWORD PTR [rbp+0x0]
  401e2e:	cmp    DWORD PTR [rax+0x8],0x6
  401e32:	ja     0x401e73
  401e34:	mov    edx,DWORD PTR [rax+0x8]
  401e37:	lea    rax,[rip+0x11752]        # 0x413590
  401e3e:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401e42:	add    rax,rdx
  401e45:	jmp    rax
  401e47:	mov    rax,QWORD PTR [rsp+0xb20]
  401e4f:	lea    rdx,[rip+0x11587]        # 0x4133dd
  401e56:	mov    rcx,rbx
  401e59:	movsd  xmm0,QWORD PTR [rax]
  401e5d:	movapd xmm2,xmm0
  401e61:	movq   r8,xmm0
  401e66:	call   0x410968
  401e6b:	mov    rcx,rbx
  401e6e:	call   0x401530
  401e73:	mov    rdx,rbx
  401e76:	mov    rcx,rsi
  401e79:	mov    r8d,0x528
  401e7f:	call   0x406a30
  401e84:	lea    rdx,[rip+0x11651]        # 0x4134dc
  401e8b:	mov    r8d,0x528
  401e91:	mov    rcx,rsi
  401e94:	call   0x406a30
  401e99:	mov    rcx,rsi
  401e9c:	call   0x403070
  401ea1:	movsxd rax,DWORD PTR [r12]
  401ea5:	shl    rax,0x6
  401ea9:	add    rax,QWORD PTR [rbp+0x0]
  401ead:	mov    ecx,DWORD PTR [rax+0x8]
  401eb0:	mov    rbx,QWORD PTR [rax+0x38]
  401eb4:	call   0x4034d0
  401eb9:	lea    rdx,[rip+0x11620]        # 0x4134e0
  401ec0:	mov    r8,rax
  401ec3:	mov    QWORD PTR [rsp+0x20],rbx
  401ec8:	mov    r9,rbx
  401ecb:	mov    rcx,rsi
  401ece:	call   0x410968
  401ed3:	jmp    0x4017d4
  401ed8:	mov    rax,QWORD PTR [rsp+0xb20]
  401ee0:	lea    rdx,[rip+0x11500]        # 0x4133e7
  401ee7:	mov    rcx,rbx
  401eea:	mov    r8d,DWORD PTR [rax]
  401eed:	call   0x410968
  401ef2:	jmp    0x401e73
  401ef7:	mov    rax,QWORD PTR [rsp+0xb20]
  401eff:	lea    rdx,[rip+0x114de]        # 0x4133e4
  401f06:	mov    rcx,rbx
  401f09:	movsx  r8d,WORD PTR [rax]
  401f0d:	call   0x410968
  401f12:	jmp    0x401e73
  401f17:	mov    rax,QWORD PTR [rsp+0xb20]
  401f1f:	pxor   xmm0,xmm0
  401f23:	lea    rdx,[rip+0x114c1]        # 0x4133eb
  401f2a:	mov    rcx,rbx
  401f2d:	cvtss2sd xmm0,DWORD PTR [rax]
  401f31:	movapd xmm2,xmm0
  401f35:	movq   r8,xmm0
  401f3a:	call   0x410968
  401f3f:	jmp    0x401e73
  401f44:	mov    rax,QWORD PTR [rip+0x169f5]        # 0x418940
  401f4b:	mov    rcx,QWORD PTR [rsp+0xb20]
  401f53:	mov    rdx,QWORD PTR [rax]
  401f56:	call   0x404710
  401f5b:	mov    rdi,rax
  401f5e:	mov    rcx,rax
  401f61:	call   0x410938
  401f66:	lea    r8,[rdi+0x1]
  401f6a:	lea    rdx,[rip+0x11566]        # 0x4134d7
  401f71:	mov    rcx,rbx
  401f74:	mov    BYTE PTR [rdi+rax*1-0x1],0x0
  401f79:	call   0x410968
  401f7e:	mov    rcx,rdi
  401f81:	call   0x4109d8
  401f86:	jmp    0x401e73
  401f8b:	mov    rax,QWORD PTR [rsp+0xb20]
  401f93:	lea    rdx,[rip+0x1144a]        # 0x4133e4
  401f9a:	mov    rcx,rbx
  401f9d:	movsx  r8d,BYTE PTR [rax]
  401fa1:	call   0x410968
  401fa6:	jmp    0x401e73
  401fab:	mov    rbx,QWORD PTR [rip+0x1680e]        # 0x4187c0
  401fb2:	lea    rdx,[rdx+rdx*2]
  401fb6:	mov    r9,QWORD PTR [rax+0x28]
  401fba:	mov    rax,QWORD PTR [rax]
  401fbd:	mov    rcx,QWORD PTR [rbx]
  401fc0:	lea    rdx,[rcx+rdx*8]
  401fc4:	mov    rcx,rsi
  401fc7:	mov    r8,QWORD PTR [rdx+0x10]
  401fcb:	lea    rdx,[rip+0x1141e]        # 0x4133f0
  401fd2:	mov    QWORD PTR [rsp+0x20],rax
  401fd7:	call   0x410968
  401fdc:	mov    rcx,rsi
  401fdf:	call   0x403070
  401fe4:	movsxd rax,DWORD PTR [r12]
  401fe8:	shl    rax,0x6
  401fec:	add    rax,QWORD PTR [rbp+0x0]
  401ff0:	mov    r8d,DWORD PTR [rax+0xc]
  401ff4:	test   r8d,r8d
  401ff7:	jle    0x402092
  401ffd:	xor    edi,edi
  401fff:	nop
  402000:	mov    r8,QWORD PTR [rax+0x38]
  402004:	lea    rdx,[rip+0x1141c]        # 0x413427
  40200b:	mov    r9d,edi
  40200e:	mov    rcx,rsi
  402011:	add    edi,0x1
  402014:	call   0x410968
  402019:	mov    rcx,rsi
  40201c:	call   0x403070
  402021:	movsxd rax,DWORD PTR [r12]
  402025:	shl    rax,0x6
  402029:	add    rax,QWORD PTR [rbp+0x0]
  40202d:	mov    edx,DWORD PTR [rax+0xc]
  402030:	cmp    edx,edi
  402032:	jg     0x402000
  402034:	test   edx,edx
  402036:	jle    0x402092
  402038:	xor    r13d,r13d
  40203b:	xor    edi,edi
  40203d:	nop    DWORD PTR [rax]
  402040:	mov    r8,QWORD PTR [rax+0x38]
  402044:	mov    rax,QWORD PTR [rax+0x10]
  402048:	mov    r9d,edi
  40204b:	mov    rdx,QWORD PTR [rbx]
  40204e:	mov    rcx,rsi
  402051:	add    edi,0x1
  402054:	movsxd rax,DWORD PTR [rax+r13*1]
  402058:	add    r13,0x4
  40205c:	lea    rax,[rax+rax*2]
  402060:	lea    rax,[rdx+rax*8]
  402064:	lea    rdx,[rip+0x113d2]        # 0x41343d
  40206b:	mov    rax,QWORD PTR [rax+0x10]
  40206f:	mov    QWORD PTR [rsp+0x20],rax
  402074:	call   0x410968
  402079:	mov    rcx,rsi
  40207c:	call   0x403070
  402081:	movsxd rax,DWORD PTR [r12]
  402085:	shl    rax,0x6
  402089:	add    rax,QWORD PTR [rbp+0x0]
  40208d:	cmp    DWORD PTR [rax+0xc],edi
  402090:	jg     0x402040
  402092:	mov    rdx,QWORD PTR [rax+0x10]
  402096:	mov    rbx,QWORD PTR [rip+0x16873]        # 0x418910
  40209d:	mov    ebx,DWORD PTR [rbx]
  40209f:	cmp    DWORD PTR [rdx],ebx
  4020a1:	jne    0x4017ae
  4020a7:	mov    ecx,DWORD PTR [rax+0x8]
  4020aa:	mov    rbx,QWORD PTR [rax+0x38]
  4020ae:	call   0x4034d0
  4020b3:	lea    rdx,[rip+0x1139e]        # 0x413458
  4020ba:	mov    r8,rax
  4020bd:	mov    QWORD PTR [rsp+0x30],rbx
  4020c2:	mov    QWORD PTR [rsp+0x28],rbx
  4020c7:	mov    QWORD PTR [rsp+0x20],rbx
  4020cc:	mov    r9,rbx
  4020cf:	mov    rcx,rsi
  4020d2:	call   0x410968
  4020d7:	jmp    0x4017d4
  4020dc:	nop    DWORD PTR [rax+0x0]
  4020e0:	mov    r8,QWORD PTR [rax+0x38]
  4020e4:	lea    rdx,[rip+0x1121d]        # 0x413308
  4020eb:	mov    rcx,rsi
  4020ee:	mov    r9,r8
  4020f1:	call   0x410968
  4020f6:	mov    rcx,rsi
  4020f9:	call   0x403070
  4020fe:	movsxd rax,DWORD PTR [r12]
  402102:	lea    rdx,[rip+0x11227]        # 0x413330
  402109:	mov    rcx,rsi
  40210c:	shl    rax,0x6
  402110:	add    rax,QWORD PTR [rbp+0x0]
  402114:	mov    r8,QWORD PTR [rax+0x38]
  402118:	mov    r9,r8
  40211b:	call   0x410968
  402120:	mov    rcx,rsi
  402123:	call   0x403070
  402128:	movsxd rax,DWORD PTR [r12]
  40212c:	shl    rax,0x6
  402130:	add    rax,QWORD PTR [rbp+0x0]
  402134:	jmp    0x40167a
  402139:	nop    DWORD PTR [rax+0x0]
  402140:	lea    rdx,[rip+0x11225]        # 0x41336c
  402147:	lea    rcx,[rip+0x1127c]        # 0x4133ca
  40214e:	mov    r8d,0xb4
  402154:	call   0x40c970
  402159:	jmp    0x401c3c
  40215e:	xchg   ax,ax
  402160:	lea    rdx,[rip+0x11205]        # 0x41336c
  402167:	lea    rcx,[rip+0x11205]        # 0x413373
  40216e:	mov    r8d,0x81
  402174:	call   0x40c970
  402179:	jmp    0x4019af
  40217e:	xchg   ax,ax
  402180:	lea    rdx,[rip+0x111e5]        # 0x41336c
  402187:	lea    rcx,[rip+0x11223]        # 0x4133b1
  40218e:	mov    r8d,0x8d
  402194:	call   0x40c970
  402199:	jmp    0x4019fc
  40219e:	xchg   ax,ax
  4021a0:	lea    rdx,[rip+0x111c5]        # 0x41336c
  4021a7:	lea    rcx,[rip+0x111db]        # 0x413389
  4021ae:	mov    r8d,0xa8
  4021b4:	call   0x40c970
  4021b9:	jmp    0x401cec
  4021be:	xchg   ax,ax
  4021c0:	lea    rdx,[rip+0x111a5]        # 0x41336c
  4021c7:	lea    rcx,[rip+0x111a5]        # 0x413373
  4021ce:	mov    r8d,0xa4
  4021d4:	call   0x40c970
  4021d9:	jmp    0x401d5f
  4021de:	xchg   ax,ax
  4021e0:	lea    rdx,[rip+0x11185]        # 0x41336c
  4021e7:	lea    rcx,[rip+0x111c3]        # 0x4133b1
  4021ee:	mov    r8d,0xb0
  4021f4:	call   0x40c970
  4021f9:	jmp    0x401d1c
  4021fe:	xchg   ax,ax
  402200:	lea    rdx,[rip+0x11165]        # 0x41336c
  402207:	lea    rcx,[rip+0x1118d]        # 0x41339b
  40220e:	mov    r8d,0xac
  402214:	call   0x40c970
  402219:	jmp    0x401d8c
  40221e:	xchg   ax,ax
  402220:	lea    rdx,[rip+0x11145]        # 0x41336c
  402227:	lea    rcx,[rip+0x1115b]        # 0x413389
  40222e:	mov    r8d,0x85
  402234:	call   0x40c970
  402239:	jmp    0x401971
  40223e:	xchg   ax,ax
  402240:	lea    rdx,[rip+0x11125]        # 0x41336c
  402247:	lea    rcx,[rip+0x1114d]        # 0x41339b
  40224e:	mov    r8d,0x89
  402254:	call   0x40c970
  402259:	jmp    0x401a3c
  40225e:	xchg   ax,ax
  402260:	lea    rdx,[rip+0x11105]        # 0x41336c
  402267:	lea    rcx,[rip+0x1115c]        # 0x4133ca
  40226e:	mov    r8d,0x91
  402274:	call   0x40c970
  402279:	jmp    0x40186e
  40227e:	xor    r8d,r8d
  402281:	jmp    0x401c02
  402286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402290:	push   rdi
  402291:	push   rsi
  402292:	push   rbx
  402293:	sub    rsp,0x20
  402297:	mov    rsi,r8
  40229a:	mov    rdi,rcx
  40229d:	mov    rcx,rdx
  4022a0:	mov    rbx,rdx
  4022a3:	call   0x410938
  4022a8:	add    rax,QWORD PTR [rsi]
  4022ab:	cmp    rax,0x527
  4022b1:	mov    QWORD PTR [rsi],rax
  4022b4:	ja     0x4022e0
  4022b6:	mov    rcx,rbx
  4022b9:	call   0x410938
  4022be:	mov    r8d,0x528
  4022c4:	mov    rdx,rbx
  4022c7:	mov    rcx,rdi
  4022ca:	sub    r8,rax
  4022cd:	cmp    r8,rax
  4022d0:	cmova  r8,rax
  4022d4:	add    rsp,0x20
  4022d8:	pop    rbx
  4022d9:	pop    rsi
  4022da:	pop    rdi
  4022db:	jmp    0x410930
  4022e0:	lea    rcx,[rip+0x112c9]        # 0x4135b0
  4022e7:	mov    rdx,rdi
  4022ea:	call   0x4030d0
  4022ef:	mov    rcx,rdi
  4022f2:	call   0x4032d0
  4022f7:	mov    r8d,0x528
  4022fd:	mov    rdx,rbx
  402300:	mov    rcx,rdi
  402303:	call   0x410920
  402308:	mov    rcx,rdi
  40230b:	call   0x410938
  402310:	mov    QWORD PTR [rsi],rax
  402313:	add    rsp,0x20
  402317:	pop    rbx
  402318:	pop    rsi
  402319:	pop    rdi
  40231a:	ret    
  40231b:	nop    DWORD PTR [rax+rax*1+0x0]
  402320:	push   r15
  402322:	push   r14
  402324:	mov    eax,0xfe8
  402329:	push   r13
  40232b:	push   r12
  40232d:	push   rbp
  40232e:	push   rdi
  40232f:	push   rsi
  402330:	push   rbx
  402331:	call   0x40bac0
  402336:	sub    rsp,rax
  402339:	mov    rsi,QWORD PTR [rip+0x16620]        # 0x418960
  402340:	mov    rax,QWORD PTR [rip+0x16629]        # 0x418970
  402347:	movsxd rbx,DWORD PTR [rsi]
  40234a:	shl    rbx,0x6
  40234e:	add    rbx,QWORD PTR [rax]
  402351:	mov    r8d,DWORD PTR [rbx+0x20]
  402355:	test   r8d,r8d
  402358:	je     0x4025d4
  40235e:	mov    r13,rcx
  402361:	mov    ecx,DWORD PTR [rbx+0xc]
  402364:	test   ecx,ecx
  402366:	je     0x402379
  402368:	mov    rdx,QWORD PTR [rbx+0x10]
  40236c:	mov    rax,QWORD PTR [rip+0x1659d]        # 0x418910
  402373:	mov    eax,DWORD PTR [rax]
  402375:	cmp    DWORD PTR [rdx],eax
  402377:	je     0x402398
  402379:	lea    rdi,[rsp+0x50]
  40237e:	mov    r8,QWORD PTR [rbx]
  402381:	lea    rdx,[rip+0x11247]        # 0x4135cf
  402388:	mov    rcx,rdi
  40238b:	call   0x410968
  402390:	mov    rcx,rdi
  402393:	call   0x4032d0
  402398:	cmp    DWORD PTR [rbx+0x8],0x2
  40239c:	je     0x4028b0
  4023a2:	mov    rax,QWORD PTR [rip+0x165c7]        # 0x418970
  4023a9:	movsxd r14,DWORD PTR [rsi]
  4023ac:	lea    rbp,[rsp+0x580]
  4023b4:	lea    rdx,[rip+0x1121f]        # 0x4135da
  4023bb:	mov    rcx,rbp
  4023be:	mov    rax,QWORD PTR [rax]
  4023c1:	shl    r14,0x6
  4023c5:	mov    r8,QWORD PTR [rax+r14*1+0x38]
  4023ca:	call   0x410968
  4023cf:	mov    rdx,rbp
  4023d2:	mov    ecx,DWORD PTR [rdx]
  4023d4:	add    rdx,0x4
  4023d8:	lea    eax,[rcx-0x1010101]
  4023de:	not    ecx
  4023e0:	and    eax,ecx
  4023e2:	and    eax,0x80808080
  4023e7:	je     0x4023d2
  4023e9:	mov    ecx,eax
  4023eb:	shr    ecx,0x10
  4023ee:	test   eax,0x8080
  4023f3:	cmove  eax,ecx
  4023f6:	lea    rcx,[rdx+0x2]
  4023fa:	cmove  rdx,rcx
  4023fe:	add    al,al
  402400:	mov    rax,QWORD PTR [rip+0x16569]        # 0x418970
  402407:	sbb    rdx,0x3
  40240b:	sub    rdx,rbp
  40240e:	mov    rax,QWORD PTR [rax]
  402411:	mov    QWORD PTR [rsp+0x48],rdx
  402416:	cmp    DWORD PTR [rax+r14*1+0x8],0x6
  40241c:	ja     0x402890
  402422:	mov    edx,DWORD PTR [rax+r14*1+0x8]
  402427:	lea    rax,[rip+0x11242]        # 0x413670
  40242e:	movsxd rdx,DWORD PTR [rax+rdx*4]
  402432:	add    rax,rdx
  402435:	jmp    rax
  402437:	nop    WORD PTR [rax+rax*1+0x0]
  402440:	mov    r12,QWORD PTR [rip+0x164f9]        # 0x418940
  402447:	mov    r15,r13
  40244a:	lea    rsi,[rsp+0xab0]
  402452:	lea    rdi,[rsp+0x48]
  402457:	cmp    QWORD PTR [r12],0x1
  40245c:	je     0x4024f0
  402462:	mov    r10d,0x1
  402468:	lea    rsi,[rsp+0xab0]
  402470:	lea    rdi,[rsp+0x48]
  402475:	jmp    0x402483
  402477:	nop    WORD PTR [rax+rax*1+0x0]
  402480:	mov    r10,rdx
  402483:	add    r15,0x8
  402487:	movsd  xmm0,QWORD PTR [r15-0x8]
  40248d:	lea    rdx,[rip+0x10f49]        # 0x4133dd
  402494:	mov    rcx,rsi
  402497:	mov    QWORD PTR [rsp+0x38],r10
  40249c:	movq   r8,xmm0
  4024a1:	movapd xmm2,xmm0
  4024a5:	call   0x410968
  4024aa:	mov    rcx,rsi
  4024ad:	call   0x401530
  4024b2:	mov    rcx,rsi
  4024b5:	call   0x406850
  4024ba:	lea    rdx,[rip+0x11128]        # 0x4135e9
  4024c1:	mov    r8,rdi
  4024c4:	mov    rcx,rsi
  4024c7:	call   0x402290
  4024cc:	mov    rdx,rsi
  4024cf:	mov    r8,rdi
  4024d2:	mov    rcx,rbp
  4024d5:	call   0x402290
  4024da:	mov    rax,QWORD PTR [r12]
  4024de:	mov    r10,QWORD PTR [rsp+0x38]
  4024e3:	sub    rax,0x1
  4024e7:	lea    rdx,[r10+0x1]
  4024eb:	cmp    rax,r10
  4024ee:	ja     0x402480
  4024f0:	movsd  xmm0,QWORD PTR [r15]
  4024f5:	lea    rdx,[rip+0x10ee1]        # 0x4133dd
  4024fc:	mov    rcx,rsi
  4024ff:	movq   r8,xmm0
  402504:	movapd xmm2,xmm0
  402508:	call   0x410968
  40250d:	mov    rcx,rsi
  402510:	call   0x401530
  402515:	mov    rcx,rsi
  402518:	call   0x406850
  40251d:	mov    r8,rdi
  402520:	mov    rdx,rsi
  402523:	mov    rcx,rbp
  402526:	call   0x402290
  40252b:	nop    DWORD PTR [rax+rax*1+0x0]
  402530:	lea    rdx,[rip+0x110c7]        # 0x4135fe
  402537:	mov    r8,rdi
  40253a:	mov    rcx,rbp
  40253d:	call   0x402290
  402542:	mov    rdi,QWORD PTR [rip+0x16427]        # 0x418970
  402549:	mov    rax,r14
  40254c:	add    rax,QWORD PTR [rdi]
  40254f:	mov    edx,DWORD PTR [rax+0xc]
  402552:	test   edx,edx
  402554:	jle    0x40256b
  402556:	mov    rdx,QWORD PTR [rax+0x10]
  40255a:	mov    rax,QWORD PTR [rip+0x163af]        # 0x418910
  402561:	mov    eax,DWORD PTR [rax]
  402563:	cmp    DWORD PTR [rdx],eax
  402565:	je     0x402960
  40256b:	mov    rcx,rbp
  40256e:	call   0x4032d0
  402573:	mov    eax,DWORD PTR [rbx+0xc]
  402576:	test   eax,eax
  402578:	jle    0x40258b
  40257a:	mov    rdx,QWORD PTR [rbx+0x10]
  40257e:	mov    rax,QWORD PTR [rip+0x1638b]        # 0x418910
  402585:	mov    eax,DWORD PTR [rax]
  402587:	cmp    DWORD PTR [rdx],eax
  402589:	je     0x4025d4
  40258b:	mov    ecx,DWORD PTR [rbx+0x8]
  40258e:	cmp    ecx,0x2
  402591:	je     0x4028d0
  402597:	mov    rsi,QWORD PTR [rbx+0x38]
  40259b:	lea    rbx,[rsp+0x50]
  4025a0:	call   0x403250
  4025a5:	lea    rdx,[rip+0x11054]        # 0x413600
  4025ac:	mov    r8,rax
  4025af:	mov    rcx,rbx
  4025b2:	mov    QWORD PTR [rsp+0x20],rsi
  4025b7:	mov    r9,rsi
  4025ba:	call   0x410968
  4025bf:	mov    rcx,rbx
  4025c2:	call   0x4032d0
  4025c7:	lea    rcx,[rip+0x1108d]        # 0x41365b
  4025ce:	call   0x4032d0
  4025d3:	nop
  4025d4:	add    rsp,0xfe8
  4025db:	pop    rbx
  4025dc:	pop    rsi
  4025dd:	pop    rdi
  4025de:	pop    rbp
  4025df:	pop    r12
  4025e1:	pop    r13
  4025e3:	pop    r14
  4025e5:	pop    r15
  4025e7:	ret    
  4025e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4025f0:	mov    r12,QWORD PTR [rip+0x16349]        # 0x418940
  4025f7:	mov    r15,r13
  4025fa:	lea    rsi,[rsp+0xab0]
  402602:	lea    rdi,[rsp+0x48]
  402607:	cmp    QWORD PTR [r12],0x1
  40260c:	je     0x402675
  40260e:	mov    r10d,0x1
  402614:	lea    rsi,[rsp+0xab0]
  40261c:	lea    rdi,[rsp+0x48]
  402621:	jmp    0x402626
  402623:	mov    r10,rdx
  402626:	pxor   xmm0,xmm0
  40262a:	add    r15,0x4
  40262e:	lea    rdx,[rip+0x10d8e]        # 0x4133c3
  402635:	mov    rcx,rsi
  402638:	mov    QWORD PTR [rsp+0x38],r10
  40263d:	cvtss2sd xmm0,DWORD PTR [r15-0x4]
  402643:	movq   r8,xmm0
  402648:	movapd xmm2,xmm0
  40264c:	call   0x410968
  402651:	mov    rdx,rsi
  402654:	mov    r8,rdi
  402657:	mov    rcx,rbp
  40265a:	call   0x402290
  40265f:	mov    rax,QWORD PTR [r12]
  402663:	mov    r10,QWORD PTR [rsp+0x38]
  402668:	sub    rax,0x1
  40266c:	lea    rdx,[r10+0x1]
  402670:	cmp    rax,r10
  402673:	ja     0x402623
  402675:	pxor   xmm0,xmm0
  402679:	lea    rdx,[rip+0x10d6b]        # 0x4133eb
  402680:	mov    rcx,rsi
  402683:	cvtss2sd xmm0,DWORD PTR [r15]
  402688:	movq   r8,xmm0
  40268d:	movapd xmm2,xmm0
  402691:	call   0x410968
  402696:	mov    r8,rdi
  402699:	mov    rdx,rsi
  40269c:	mov    rcx,rbp
  40269f:	call   0x402290
  4026a4:	jmp    0x402530
  4026a9:	nop    DWORD PTR [rax+0x0]
  4026b0:	mov    r12,QWORD PTR [rip+0x16289]        # 0x418940
  4026b7:	mov    r15,r13
  4026ba:	lea    rsi,[rsp+0xab0]
  4026c2:	lea    rdi,[rsp+0x48]
  4026c7:	cmp    QWORD PTR [r12],0x1
  4026cc:	je     0x402726
  4026ce:	mov    r10d,0x1
  4026d4:	lea    rsi,[rsp+0xab0]
  4026dc:	lea    rdi,[rsp+0x48]
  4026e1:	jmp    0x4026e6
  4026e3:	mov    r10,rdx
  4026e6:	add    r15,0x4
  4026ea:	mov    r8d,DWORD PTR [r15-0x4]
  4026ee:	lea    rdx,[rip+0x10cb6]        # 0x4133ab
  4026f5:	mov    rcx,rsi
  4026f8:	mov    QWORD PTR [rsp+0x38],r10
  4026fd:	call   0x410968
  402702:	mov    rdx,rsi
  402705:	mov    r8,rdi
  402708:	mov    rcx,rbp
  40270b:	call   0x402290
  402710:	mov    rax,QWORD PTR [r12]
  402714:	mov    r10,QWORD PTR [rsp+0x38]
  402719:	sub    rax,0x1
  40271d:	lea    rdx,[r10+0x1]
  402721:	cmp    rax,r10
  402724:	ja     0x4026e3
  402726:	mov    r8d,DWORD PTR [r15]
  402729:	lea    rdx,[rip+0x10cb7]        # 0x4133e7
  402730:	mov    rcx,rsi
  402733:	call   0x410968
  402738:	mov    r8,rdi
  40273b:	mov    rdx,rsi
  40273e:	mov    rcx,rbp
  402741:	call   0x402290
  402746:	jmp    0x402530
  40274b:	nop    DWORD PTR [rax+rax*1+0x0]
  402750:	mov    r12,QWORD PTR [rip+0x161e9]        # 0x418940
  402757:	mov    r15,r13
  40275a:	lea    rsi,[rsp+0xab0]
  402762:	lea    rdi,[rsp+0x48]
  402767:	cmp    QWORD PTR [r12],0x1
  40276c:	je     0x4027c7
  40276e:	mov    r10d,0x1
  402774:	lea    rsi,[rsp+0xab0]
  40277c:	lea    rdi,[rsp+0x48]
  402781:	jmp    0x402786
  402783:	mov    r10,rdx
  402786:	add    r15,0x2
  40278a:	movsx  r8d,WORD PTR [r15-0x2]
  40278f:	lea    rdx,[rip+0x10bee]        # 0x413384
  402796:	mov    rcx,rsi
  402799:	mov    QWORD PTR [rsp+0x38],r10
  40279e:	call   0x410968
  4027a3:	mov    rdx,rsi
  4027a6:	mov    r8,rdi
  4027a9:	mov    rcx,rbp
  4027ac:	call   0x402290
  4027b1:	mov    rax,QWORD PTR [r12]
  4027b5:	mov    r10,QWORD PTR [rsp+0x38]
  4027ba:	sub    rax,0x1
  4027be:	lea    rdx,[r10+0x1]
  4027c2:	cmp    rax,r10
  4027c5:	ja     0x402783
  4027c7:	movsx  r8d,WORD PTR [r15]
  4027cb:	lea    rdx,[rip+0x10c12]        # 0x4133e4
  4027d2:	jmp    0x402730
  4027d7:	nop    WORD PTR [rax+rax*1+0x0]
  4027e0:	mov    r12,QWORD PTR [rip+0x16159]        # 0x418940
  4027e7:	cmp    QWORD PTR [r12],0x1
  4027ec:	je     0x4029c3
  4027f2:	lea    rsi,[rsp+0xab0]
  4027fa:	lea    rdi,[rsp+0x48]
  4027ff:	mov    rdx,r13
  402802:	lea    rax,[rdx+0x1]
  402806:	xor    r8d,r8d
  402809:	mov    ecx,0x1
  40280e:	mov    QWORD PTR [rsp+0x38],rax
  402813:	call   0x4056f0
  402818:	lea    rdx,[rip+0x10dc5]        # 0x4135e4
  40281f:	mov    r8,rax
  402822:	mov    rcx,rsi
  402825:	mov    r15,rax
  402828:	call   0x410968
  40282d:	mov    rdx,rsi
  402830:	mov    r8,rdi
  402833:	mov    rcx,rbp
  402836:	call   0x402290
  40283b:	mov    rcx,r15
  40283e:	call   0x4109d8
  402843:	mov    rdx,QWORD PTR [rsp+0x38]
  402848:	mov    rax,QWORD PTR [r12]
  40284c:	mov    rcx,rdx
  40284f:	sub    rax,0x1
  402853:	sub    rcx,r13
  402856:	cmp    rax,rcx
  402859:	ja     0x402802
  40285b:	mov    rdx,QWORD PTR [rsp+0x38]
  402860:	xor    r8d,r8d
  402863:	mov    ecx,0x1
  402868:	call   0x4056f0
  40286d:	mov    rcx,rbp
  402870:	mov    rsi,rax
  402873:	mov    r8,rdi
  402876:	mov    rdx,rax
  402879:	call   0x402290
  40287e:	mov    rcx,rsi
  402881:	call   0x4109d8
  402886:	jmp    0x402530
  40288b:	nop    DWORD PTR [rax+rax*1+0x0]
  402890:	lea    rcx,[rip+0x10d55]        # 0x4135ec
  402897:	lea    rdi,[rsp+0x48]
  40289c:	call   0x4030d0
  4028a1:	jmp    0x402530
  4028a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028b0:	mov    rax,QWORD PTR [rip+0x16079]        # 0x418930
  4028b7:	mov    rcx,r13
  4028ba:	movsxd rdx,DWORD PTR [rax]
  4028bd:	call   0x404410
  4028c2:	mov    QWORD PTR [rbx+0x30],rax
  4028c6:	jmp    0x402573
  4028cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4028d0:	mov    rax,QWORD PTR [rip+0x16059]        # 0x418930
  4028d7:	mov    rcx,r13
  4028da:	movsxd rdx,DWORD PTR [rax]
  4028dd:	call   0x404410
  4028e2:	mov    ecx,DWORD PTR [rbx+0x8]
  4028e5:	mov    rsi,rax
  4028e8:	call   0x403250
  4028ed:	mov    rcx,rax
  4028f0:	call   0x410938
  4028f5:	mov    rdi,QWORD PTR [rbx+0x38]
  4028f9:	mov    r12,rax
  4028fc:	mov    rcx,rdi
  4028ff:	call   0x410938
  402904:	mov    rcx,rsi
  402907:	mov    rbp,rax
  40290a:	call   0x410938
  40290f:	mov    r8,rax
  402912:	lea    rax,[r12+rbp*1+0x1f]
  402917:	add    rax,r8
  40291a:	cmp    rax,0x528
  402920:	ja     0x4029d2
  402926:	mov    ecx,DWORD PTR [rbx+0x8]
  402929:	lea    rbx,[rsp+0x50]
  40292e:	call   0x403250
  402933:	lea    rdx,[rip+0x10cc6]        # 0x413600
  40293a:	mov    rcx,rbx
  40293d:	mov    r8,rax
  402940:	mov    QWORD PTR [rsp+0x20],rsi
  402945:	mov    r9,rdi
  402948:	call   0x410968
  40294d:	mov    rcx,rsi
  402950:	call   0x4109d8
  402955:	jmp    0x4025bf
  40295a:	nop    WORD PTR [rax+rax*1+0x0]
  402960:	mov    rdx,rbp
  402963:	mov    ecx,DWORD PTR [rdx]
  402965:	add    rdx,0x4
  402969:	lea    eax,[rcx-0x1010101]
  40296f:	not    ecx
  402971:	and    eax,ecx
  402973:	and    eax,0x80808080
  402978:	je     0x402963
  40297a:	mov    ecx,eax
  40297c:	shr    ecx,0x10
  40297f:	test   eax,0x8080
  402984:	cmove  eax,ecx
  402987:	lea    rcx,[rdx+0x2]
  40298b:	cmove  rdx,rcx
  40298f:	add    al,al
  402991:	sbb    rdx,0x3
  402995:	sub    rdx,rbp
  402998:	lea    rcx,[rdx+0x1]
  40299c:	call   0x4067c0
  4029a1:	mov    rdx,rbp
  4029a4:	mov    rcx,rax
  4029a7:	call   0x410940
  4029ac:	mov    r8,rax
  4029af:	mov    rax,QWORD PTR [rip+0x15fba]        # 0x418970
  4029b6:	mov    rax,QWORD PTR [rax]
  4029b9:	mov    QWORD PTR [rax+r14*1+0x30],r8
  4029be:	jmp    0x402573
  4029c3:	mov    QWORD PTR [rsp+0x38],r13
  4029c8:	lea    rdi,[rsp+0x48]
  4029cd:	jmp    0x40285b
  4029d2:	lea    rcx,[rip+0x10c4f]        # 0x413628
  4029d9:	mov    rdx,rdi
  4029dc:	call   0x4030d0
  4029e1:	mov    ecx,0x9
  4029e6:	call   0x410a18
  4029eb:	nop
  4029ec:	nop    DWORD PTR [rax+0x0]
  4029f0:	push   r14
  4029f2:	push   r13
  4029f4:	mov    eax,0x4030
  4029f9:	push   r12
  4029fb:	push   rbp
  4029fc:	push   rdi
  4029fd:	push   rsi
  4029fe:	push   rbx
  4029ff:	call   0x40bac0
  402a04:	sub    rsp,rax
  402a07:	mov    rax,QWORD PTR [rip+0x15f52]        # 0x418960
  402a0e:	mov    r8,QWORD PTR [rip+0x15f5b]        # 0x418970
  402a15:	movsxd rax,DWORD PTR [rax]
  402a18:	mov    rdx,rax
  402a1b:	shl    rax,0x6
  402a1f:	add    rax,QWORD PTR [r8]
  402a22:	mov    r14d,DWORD PTR [rax+0x8]
  402a26:	cmp    r14d,0x6
  402a2a:	ja     0x402a43
  402a2c:	lea    r8,[rip+0x10c59]        # 0x41368c
  402a33:	mov    r9d,r14d
  402a36:	movsxd r9,DWORD PTR [r8+r9*4]
  402a3a:	add    r8,r9
  402a3d:	jmp    r8
  402a40:	mov    rsi,rcx
  402a43:	mov    ecx,DWORD PTR [rax+0xc]
  402a46:	test   ecx,ecx
  402a48:	jle    0x402ad8
  402a4e:	mov    r8,QWORD PTR [rax+0x10]
  402a52:	mov    r10,QWORD PTR [rip+0x15eb7]        # 0x418910
  402a59:	mov    QWORD PTR [rsp+0x30],0x0
  402a62:	movsxd r9,DWORD PTR [r8]
  402a65:	cmp    r9d,DWORD PTR [r10]
  402a68:	je     0x402af2
  402a6e:	lea    rax,[r9+r9*2]
  402a72:	mov    r9,QWORD PTR [rip+0x15d47]        # 0x4187c0
  402a79:	shl    rax,0x3
  402a7d:	add    rax,QWORD PTR [r9]
  402a80:	mov    rax,QWORD PTR [rax]
  402a83:	mov    QWORD PTR [rsp+0x2030],rax
  402a8b:	cmp    ecx,0x1
  402a8e:	jle    0x402ad8
  402a90:	mov    rax,QWORD PTR [rip+0x15d29]        # 0x4187c0
  402a97:	lea    r10,[rsp+0x30]
  402a9c:	lea    r9,[rsp+0x2030]
  402aa4:	mov    rbx,QWORD PTR [rax]
  402aa7:	lea    eax,[rcx-0x2]
  402aaa:	lea    r11,[rax*4+0x4]
  402ab2:	xor    eax,eax
  402ab4:	movsxd rcx,DWORD PTR [r8+rax*1+0x4]
  402ab9:	mov    QWORD PTR [r10+rax*2+0x8],0x0
  402ac2:	lea    rcx,[rcx+rcx*2]
  402ac6:	mov    rcx,QWORD PTR [rbx+rcx*8]
  402aca:	mov    QWORD PTR [r9+rax*2+0x8],rcx
  402acf:	add    rax,0x4
  402ad3:	cmp    rax,r11
  402ad6:	jne    0x402ab4
  402ad8:	cmp    r14d,0x6
  402adc:	ja     0x402c17
  402ae2:	lea    rax,[rip+0x10bbf]        # 0x4136a8
  402ae9:	movsxd rcx,DWORD PTR [rax+r14*4]
  402aed:	add    rax,rcx
  402af0:	jmp    rax
  402af2:	mov    rax,QWORD PTR [rax+0x28]
  402af6:	mov    QWORD PTR [rsp+0x2030],rax
  402afe:	jmp    0x402a8b
  402b00:	mov    r13,rcx
  402b03:	jmp    0x402a43
  402b08:	mov    r12,rcx
  402b0b:	jmp    0x402a43
  402b10:	mov    rbp,rcx
  402b13:	jmp    0x402a43
  402b18:	mov    rdi,rcx
  402b1b:	jmp    0x402a43
  402b20:	mov    rax,QWORD PTR [rip+0x15d39]        # 0x418860
  402b27:	mov    QWORD PTR [rsp+0x20],rsi
  402b2c:	lea    r9,[rsp+0x2030]
  402b34:	lea    r8,[rsp+0x30]
  402b39:	mov    ecx,DWORD PTR [rax]
  402b3b:	call   0x40a520
  402b40:	mov    ecx,eax
  402b42:	call   0x4030b0
  402b47:	nop
  402b48:	add    rsp,0x4030
  402b4f:	pop    rbx
  402b50:	pop    rsi
  402b51:	pop    rdi
  402b52:	pop    rbp
  402b53:	pop    r12
  402b55:	pop    r13
  402b57:	pop    r14
  402b59:	ret    
  402b5a:	mov    rax,QWORD PTR [rip+0x15cff]        # 0x418860
  402b61:	mov    QWORD PTR [rsp+0x20],rsi
  402b66:	lea    r9,[rsp+0x2030]
  402b6e:	lea    r8,[rsp+0x30]
  402b73:	mov    ecx,DWORD PTR [rax]
  402b75:	call   0x40a510
  402b7a:	mov    ecx,eax
  402b7c:	jmp    0x402b42
  402b7e:	mov    rax,QWORD PTR [rip+0x15cdb]        # 0x418860
  402b85:	mov    QWORD PTR [rsp+0x20],r13
  402b8a:	lea    r9,[rsp+0x2030]
  402b92:	lea    r8,[rsp+0x30]
  402b97:	mov    ecx,DWORD PTR [rax]
  402b99:	call   0x40a518
  402b9e:	mov    ecx,eax
  402ba0:	jmp    0x402b42
  402ba2:	mov    rax,QWORD PTR [rip+0x15cb7]        # 0x418860
  402ba9:	mov    QWORD PTR [rsp+0x20],r12
  402bae:	lea    r9,[rsp+0x2030]
  402bb6:	lea    r8,[rsp+0x30]
  402bbb:	mov    ecx,DWORD PTR [rax]
  402bbd:	call   0x40a528
  402bc2:	mov    ecx,eax
  402bc4:	jmp    0x402b42
  402bc9:	mov    rax,QWORD PTR [rip+0x15c90]        # 0x418860
  402bd0:	mov    QWORD PTR [rsp+0x20],rbp
  402bd5:	lea    r9,[rsp+0x2030]
  402bdd:	lea    r8,[rsp+0x30]
  402be2:	mov    ecx,DWORD PTR [rax]
  402be4:	call   0x40a530
  402be9:	mov    ecx,eax
  402beb:	jmp    0x402b42
  402bf0:	mov    rax,QWORD PTR [rip+0x15c69]        # 0x418860
  402bf7:	mov    QWORD PTR [rsp+0x20],rdi
  402bfc:	lea    r9,[rsp+0x2030]
  402c04:	lea    r8,[rsp+0x30]
  402c09:	mov    ecx,DWORD PTR [rax]
  402c0b:	call   0x40a538
  402c10:	mov    ecx,eax
  402c12:	jmp    0x402b42
  402c17:	xor    ecx,ecx
  402c19:	jmp    0x402b42
  402c1e:	xchg   ax,ax
  402c20:	push   rbx
  402c21:	sub    rsp,0x20
  402c25:	mov    rax,QWORD PTR [rip+0x15c54]        # 0x418880
  402c2c:	mov    rbx,rcx
  402c2f:	mov    ecx,DWORD PTR [rax]
  402c31:	test   ecx,ecx
  402c33:	jne    0x402c70
  402c35:	mov    rax,QWORD PTR [rip+0x15b34]        # 0x418770
  402c3c:	mov    edx,DWORD PTR [rax]
  402c3e:	test   edx,edx
  402c40:	jne    0x402c60
  402c42:	mov    rax,QWORD PTR [rip+0x15b87]        # 0x4187d0
  402c49:	mov    eax,DWORD PTR [rax]
  402c4b:	test   eax,eax
  402c4d:	je     0x402c57
  402c4f:	mov    rcx,rbx
  402c52:	call   0x402320
  402c57:	xor    eax,eax
  402c59:	add    rsp,0x20
  402c5d:	pop    rbx
  402c5e:	ret    
  402c5f:	nop
  402c60:	mov    rcx,rbx
  402c63:	call   0x4015b0
  402c68:	jmp    0x402c42
  402c6a:	nop    WORD PTR [rax+rax*1+0x0]
  402c70:	mov    rcx,rbx
  402c73:	call   0x4029f0
  402c78:	jmp    0x402c35
  402c7a:	nop
  402c7b:	nop
  402c7c:	nop
  402c7d:	nop
  402c7e:	nop
  402c7f:	nop
  402c80:	push   rbp
  402c81:	push   rdi
  402c82:	push   rsi
  402c83:	push   rbx
  402c84:	sub    rsp,0x38
  402c88:	lea    rsi,[rip+0x10a41]        # 0x4136d0
  402c8f:	movsxd r8,r8d
  402c92:	lea    rdi,[rsp+0x28]
  402c97:	mov    rbx,rcx
  402c9a:	mov    BYTE PTR [rdx+r8*1-0x1],0x0
  402ca0:	lea    r8,[rdx+0x1]
  402ca4:	movzx  eax,BYTE PTR [r8]
  402ca8:	test   al,al
  402caa:	je     0x402cc2
  402cac:	cmp    al,0x5c
  402cae:	je     0x402cd0
  402cb0:	add    r8,0x1
  402cb4:	mov    BYTE PTR [rbx],al
  402cb6:	add    rbx,0x1
  402cba:	movzx  eax,BYTE PTR [r8]
  402cbe:	test   al,al
  402cc0:	jne    0x402cac
  402cc2:	mov    BYTE PTR [rbx],0x0
  402cc5:	add    rsp,0x38
  402cc9:	pop    rbx
  402cca:	pop    rsi
  402ccb:	pop    rdi
  402ccc:	pop    rbp
  402ccd:	ret    
  402cce:	xchg   ax,ax
  402cd0:	movzx  edx,BYTE PTR [r8+0x1]
  402cd5:	lea    eax,[rdx-0x22]
  402cd8:	cmp    al,0x56
  402cda:	ja     0x402dd3
  402ce0:	movzx  eax,al
  402ce3:	movsxd rax,DWORD PTR [rsi+rax*4]
  402ce7:	add    rax,rsi
  402cea:	jmp    rax
  402cec:	nop    DWORD PTR [rax+0x0]
  402cf0:	lea    rbp,[rbx+0x1]
  402cf4:	lea    rcx,[r8+0x2]
  402cf8:	mov    r8d,0x10
  402cfe:	mov    rdx,rdi
  402d01:	call   0x410910
  402d06:	mov    r8,QWORD PTR [rsp+0x28]
  402d0b:	mov    BYTE PTR [rbx],al
  402d0d:	mov    rbx,rbp
  402d10:	jmp    0x402ca4
  402d12:	mov    BYTE PTR [rbx],0xb
  402d15:	add    r8,0x2
  402d19:	add    rbx,0x1
  402d1d:	jmp    0x402ca4
  402d1f:	nop
  402d20:	mov    BYTE PTR [rbx],0x9
  402d23:	add    r8,0x2
  402d27:	add    rbx,0x1
  402d2b:	jmp    0x402ca4
  402d30:	mov    BYTE PTR [rbx],0xd
  402d33:	add    r8,0x2
  402d37:	add    rbx,0x1
  402d3b:	jmp    0x402ca4
  402d40:	mov    BYTE PTR [rbx],0xa
  402d43:	add    r8,0x2
  402d47:	add    rbx,0x1
  402d4b:	jmp    0x402ca4
  402d50:	mov    BYTE PTR [rbx],0xc
  402d53:	add    r8,0x2
  402d57:	add    rbx,0x1
  402d5b:	jmp    0x402ca4
  402d60:	mov    BYTE PTR [rbx],0x8
  402d63:	add    r8,0x2
  402d67:	add    rbx,0x1
  402d6b:	jmp    0x402ca4
  402d70:	mov    BYTE PTR [rbx],0x7
  402d73:	add    r8,0x2
  402d77:	add    rbx,0x1
  402d7b:	jmp    0x402ca4
  402d80:	mov    BYTE PTR [rbx],0x5c
  402d83:	add    r8,0x2
  402d87:	add    rbx,0x1
  402d8b:	jmp    0x402ca4
  402d90:	mov    BYTE PTR [rbx],0x7f
  402d93:	add    r8,0x2
  402d97:	add    rbx,0x1
  402d9b:	jmp    0x402ca4
  402da0:	lea    rcx,[r8+0x1]
  402da4:	lea    rbp,[rbx+0x1]
  402da8:	mov    r8d,0x8
  402dae:	jmp    0x402cfe
  402db3:	mov    BYTE PTR [rbx],0x27
  402db6:	add    r8,0x2
  402dba:	add    rbx,0x1
  402dbe:	jmp    0x402ca4
  402dc3:	mov    BYTE PTR [rbx],0x22
  402dc6:	add    r8,0x2
  402dca:	add    rbx,0x1
  402dce:	jmp    0x402ca4
  402dd3:	mov    BYTE PTR [rbx],dl
  402dd5:	add    r8,0x2
  402dd9:	add    rbx,0x1
  402ddd:	jmp    0x402ca4
  402de2:	nop
  402de3:	nop
  402de4:	nop
  402de5:	nop
  402de6:	nop
  402de7:	nop
  402de8:	nop
  402de9:	nop
  402dea:	nop
  402deb:	nop
  402dec:	nop
  402ded:	nop
  402dee:	nop
  402def:	nop
  402df0:	cmp    ecx,0x6
  402df3:	ja     0x402e60
  402df5:	lea    rax,[rip+0x10a54]        # 0x413850
  402dfc:	mov    ecx,ecx
  402dfe:	movsxd rcx,DWORD PTR [rax+rcx*4]
  402e02:	add    rax,rcx
  402e05:	jmp    rax
  402e07:	nop    WORD PTR [rax+rax*1+0x0]
  402e10:	movsd  xmm0,QWORD PTR [rip+0x10ac8]        # 0x4138e0
  402e18:	movsd  QWORD PTR [rdx],xmm0
  402e1c:	ret    
  402e1d:	nop    DWORD PTR [rax]
  402e20:	mov    BYTE PTR [rdx],0x81
  402e23:	ret    
  402e24:	mov    BYTE PTR [rdx],0x0
  402e27:	ret    
  402e28:	nop    DWORD PTR [rax+rax*1+0x0]
  402e30:	mov    eax,0xffff8001
  402e35:	mov    WORD PTR [rdx],ax
  402e38:	ret    
  402e39:	nop    DWORD PTR [rax+0x0]
  402e40:	mov    DWORD PTR [rdx],0x80000001
  402e46:	ret    
  402e47:	nop    WORD PTR [rax+rax*1+0x0]
  402e50:	mov    DWORD PTR [rdx],0x7cf00000
  402e56:	ret    
  402e57:	nop    WORD PTR [rax+rax*1+0x0]
  402e60:	lea    rcx,[rip+0x109c9]        # 0x413830
  402e67:	jmp    0x4030d0
  402e6c:	nop    DWORD PTR [rax+0x0]
  402e70:	push   r12
  402e72:	push   rbp
  402e73:	push   rdi
  402e74:	push   rsi
  402e75:	push   rbx
  402e76:	sub    rsp,0x10
  402e7a:	cmp    ecx,0x6
  402e7d:	ja     0x402e94
  402e7f:	lea    rax,[rip+0x109e6]        # 0x41386c
  402e86:	mov    ebp,ecx
  402e88:	movsxd rbp,DWORD PTR [rax+rbp*4]
  402e8c:	add    rax,rbp
  402e8f:	jmp    rax
  402e91:	mov    r10,r8
  402e94:	mov    QWORD PTR [rsp+0x8],r9
  402e99:	mov    eax,r9d
  402e9c:	lea    r8,[rip+0x109e5]        # 0x413888
  402ea3:	movsd  xmm1,QWORD PTR [rsp+0x8]
  402ea9:	mov    DWORD PTR [rsp+0x8],eax
  402ead:	mov    r12d,r9d
  402eb0:	mov    ebp,r9d
  402eb3:	movss  xmm0,DWORD PTR [rsp+0x8]
  402eb9:	nop    DWORD PTR [rax+0x0]
  402ec0:	sub    rdx,0x1
  402ec4:	cmp    rdx,0xffffffffffffffff
  402ec8:	je     0x402ef3
  402eca:	cmp    ecx,0x6
  402ecd:	ja     0x402ec0
  402ecf:	mov    eax,ecx
  402ed1:	movsxd rax,DWORD PTR [r8+rax*4]
  402ed5:	add    rax,r8
  402ed8:	jmp    rax
  402eda:	nop    WORD PTR [rax+rax*1+0x0]
  402ee0:	sub    rdx,0x1
  402ee4:	movsd  QWORD PTR [r11],xmm1
  402ee9:	add    r11,0x8
  402eed:	cmp    rdx,0xffffffffffffffff
  402ef1:	jne    0x402eca
  402ef3:	add    rsp,0x10
  402ef7:	pop    rbx
  402ef8:	pop    rsi
  402ef9:	pop    rdi
  402efa:	pop    rbp
  402efb:	pop    r12
  402efd:	ret    
  402efe:	xchg   ax,ax
  402f00:	movss  DWORD PTR [rdi],xmm0
  402f04:	add    rdi,0x4
  402f08:	jmp    0x402ec0
  402f0a:	nop    WORD PTR [rax+rax*1+0x0]
  402f10:	mov    DWORD PTR [rsi],r9d
  402f13:	add    rsi,0x4
  402f17:	jmp    0x402ec0
  402f19:	nop    DWORD PTR [rax+0x0]
  402f20:	mov    WORD PTR [rbx],r12w
  402f24:	add    rbx,0x2
  402f28:	jmp    0x402ec0
  402f2a:	nop    WORD PTR [rax+rax*1+0x0]
  402f30:	mov    BYTE PTR [r10],bpl
  402f33:	add    r10,0x1
  402f37:	jmp    0x402ec0
  402f39:	nop    DWORD PTR [rax+0x0]
  402f40:	mov    rbx,r8
  402f43:	jmp    0x402e94
  402f48:	nop    DWORD PTR [rax+rax*1+0x0]
  402f50:	mov    rsi,r8
  402f53:	jmp    0x402e94
  402f58:	nop    DWORD PTR [rax+rax*1+0x0]
  402f60:	mov    rdi,r8
  402f63:	jmp    0x402e94
  402f68:	nop    DWORD PTR [rax+rax*1+0x0]
  402f70:	mov    r11,r8
  402f73:	jmp    0x402e94
  402f78:	nop    DWORD PTR [rax+rax*1+0x0]
  402f80:	cmp    ecx,0x6
  402f83:	ja     0x402ff0
  402f85:	lea    rax,[rip+0x10938]        # 0x4138c4
  402f8c:	mov    ecx,ecx
  402f8e:	movsxd rcx,DWORD PTR [rax+rcx*4]
  402f92:	add    rax,rcx
  402f95:	jmp    rax
  402f97:	nop    WORD PTR [rax+rax*1+0x0]
  402fa0:	movsd  xmm0,QWORD PTR [rdx]
  402fa4:	movsd  QWORD PTR [r8],xmm0
  402fa9:	ret    
  402faa:	nop    WORD PTR [rax+rax*1+0x0]
  402fb0:	movzx  eax,BYTE PTR [rdx]
  402fb3:	mov    BYTE PTR [r8],al
  402fb6:	ret    
  402fb7:	nop    WORD PTR [rax+rax*1+0x0]
  402fc0:	movzx  eax,WORD PTR [rdx]
  402fc3:	mov    WORD PTR [r8],ax
  402fc7:	ret    
  402fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fd0:	mov    eax,DWORD PTR [rdx]
  402fd2:	mov    DWORD PTR [r8],eax
  402fd5:	ret    
  402fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fe0:	movss  xmm0,DWORD PTR [rdx]
  402fe4:	movss  DWORD PTR [r8],xmm0
  402fe9:	ret    
  402fea:	nop    WORD PTR [rax+rax*1+0x0]
  402ff0:	lea    rcx,[rip+0x108ad]        # 0x4138a4
  402ff7:	jmp    0x4030d0
  402ffc:	nop
  402ffd:	nop
  402ffe:	nop
  402fff:	nop
  403000:	sub    rsp,0x28
  403004:	call   0x4073b0
  403009:	mov    DWORD PTR [rip+0x1b625],0x0        # 0x41e638
  403013:	mov    DWORD PTR [rip+0x1b61f],0x0        # 0x41e63c
  40301d:	mov    DWORD PTR [rip+0x1b635],0xffffffff        # 0x41e65c
  403027:	add    rsp,0x28
  40302b:	ret    
  40302c:	nop
  40302d:	nop
  40302e:	nop
  40302f:	nop
  403030:	push   rbx
  403031:	sub    rsp,0x20
  403035:	call   0x40a500
  40303a:	mov    rbx,rax
  40303d:	call   QWORD PTR [rip+0x1c531]        # 0x41f574
  403043:	lea    rdx,[rip+0x108b6]        # 0x413900
  40304a:	lea    rcx,[rax+0x60]
  40304e:	mov    r8,rbx
  403051:	call   0x4109f8
  403056:	add    DWORD PTR [rip+0x17fe3],0x1        # 0x41b040
  40305d:	add    rsp,0x20
  403061:	pop    rbx
  403062:	ret    
  403063:	nop    DWORD PTR [rax]
  403066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403070:	push   rsi
  403071:	push   rbx
  403072:	sub    rsp,0x28
  403076:	mov    rsi,rcx
  403079:	call   QWORD PTR [rip+0x1c4f5]        # 0x41f574
  40307f:	lea    rbx,[rax+0x30]
  403083:	mov    rcx,rsi
  403086:	mov    rdx,rbx
  403089:	call   0x4109e8
  40308e:	mov    rdx,rbx
  403091:	mov    ecx,0xa
  403096:	add    rsp,0x28
  40309a:	pop    rbx
  40309b:	pop    rsi
  40309c:	jmp    0x4109f0
  4030a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4030a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030b0:	test   ecx,ecx
  4030b2:	jne    0x4030c0
  4030b4:	repz ret 
  4030b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030c0:	jmp    0x403030
  4030c5:	nop
  4030c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030d0:	push   r12
  4030d2:	push   rbp
  4030d3:	push   rdi
  4030d4:	push   rsi
  4030d5:	push   rbx
  4030d6:	sub    rsp,0x40
  4030da:	mov    esi,DWORD PTR [rip+0xef30]        # 0x412010
  4030e0:	mov    rax,QWORD PTR [rip+0x15699]        # 0x418780
  4030e7:	mov    QWORD PTR [rsp+0x78],rdx
  4030ec:	mov    QWORD PTR [rsp+0x80],r8
  4030f4:	mov    rdi,rcx
  4030f7:	mov    QWORD PTR [rsp+0x88],r9
  4030ff:	cmp    esi,0x1
  403102:	je     0x403180
  403104:	mov    r12,QWORD PTR [rax]
  403107:	mov    rax,QWORD PTR [rip+0x157f2]        # 0x418900
  40310e:	mov    rbx,QWORD PTR [rip+0x1c45f]        # 0x41f574
  403115:	mov    rbp,QWORD PTR [rax]
  403118:	call   rbx
  40311a:	lea    rdx,[rip+0x107f3]        # 0x413914
  403121:	lea    rcx,[rax+0x60]
  403125:	mov    DWORD PTR [rsp+0x20],esi
  403129:	mov    r9,r12
  40312c:	mov    r8,rbp
  40312f:	call   0x4109f8
  403134:	lea    rsi,[rsp+0x78]
  403139:	mov    QWORD PTR [rsp+0x38],rsi
  40313e:	call   rbx
  403140:	lea    rcx,[rax+0x60]
  403144:	mov    r8,rsi
  403147:	mov    rdx,rdi
  40314a:	call   0x410908
  40314f:	call   rbx
  403151:	lea    rdx,[rax+0x60]
  403155:	mov    ecx,0xa
  40315a:	call   0x4109f0
  40315f:	call   rbx
  403161:	lea    rcx,[rax+0x60]
  403165:	call   0x410a08
  40316a:	add    DWORD PTR [rip+0x17ecf],0x1        # 0x41b040
  403171:	add    rsp,0x40
  403175:	pop    rbx
  403176:	pop    rsi
  403177:	pop    rdi
  403178:	pop    rbp
  403179:	pop    r12
  40317b:	ret    
  40317c:	nop    DWORD PTR [rax+0x0]
  403180:	mov    rbp,QWORD PTR [rax]
  403183:	mov    rax,QWORD PTR [rip+0x15776]        # 0x418900
  40318a:	mov    rbx,QWORD PTR [rip+0x1c3e3]        # 0x41f574
  403191:	mov    rsi,QWORD PTR [rax]
  403194:	call   rbx
  403196:	lea    rdx,[rip+0x1076e]        # 0x41390b
  40319d:	lea    rcx,[rax+0x60]
  4031a1:	mov    r9,rbp
  4031a4:	mov    r8,rsi
  4031a7:	call   0x4109f8
  4031ac:	jmp    0x403134
  4031ae:	xchg   ax,ax
  4031b0:	sub    rsp,0x28
  4031b4:	cmp    ecx,0x6
  4031b7:	ja     0x403230
  4031b9:	lea    rax,[rip+0x1079c]        # 0x41395c
  4031c0:	mov    ecx,ecx
  4031c2:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4031c6:	add    rax,rdx
  4031c9:	jmp    rax
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031d0:	lea    rax,[rip+0x1074e]        # 0x413925
  4031d7:	add    rsp,0x28
  4031db:	ret    
  4031dc:	nop    DWORD PTR [rax+0x0]
  4031e0:	lea    rax,[rip+0x10743]        # 0x41392a
  4031e7:	add    rsp,0x28
  4031eb:	ret    
  4031ec:	nop    DWORD PTR [rax+0x0]
  4031f0:	lea    rax,[rip+0x10738]        # 0x41392f
  4031f7:	add    rsp,0x28
  4031fb:	ret    
  4031fc:	nop    DWORD PTR [rax+0x0]
  403200:	lea    rax,[rip+0x1072d]        # 0x413934
  403207:	add    rsp,0x28
  40320b:	ret    
  40320c:	nop    DWORD PTR [rax+0x0]
  403210:	lea    rax,[rip+0x10721]        # 0x413938
  403217:	add    rsp,0x28
  40321b:	ret    
  40321c:	nop    DWORD PTR [rax+0x0]
  403220:	lea    rax,[rip+0x10716]        # 0x41393d
  403227:	add    rsp,0x28
  40322b:	ret    
  40322c:	nop    DWORD PTR [rax+0x0]
  403230:	lea    rcx,[rip+0x1070d]        # 0x413944
  403237:	call   0x4030d0
  40323c:	xor    eax,eax
  40323e:	add    rsp,0x28
  403242:	ret    
  403243:	nop    DWORD PTR [rax]
  403246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403250:	sub    rsp,0x28
  403254:	cmp    ecx,0x6
  403257:	ja     0x4032b0
  403259:	lea    rax,[rip+0x10718]        # 0x413978
  403260:	mov    ecx,ecx
  403262:	movsxd rdx,DWORD PTR [rax+rcx*4]
  403266:	add    rax,rdx
  403269:	jmp    rax
  40326b:	nop    DWORD PTR [rax+rax*1+0x0]
  403270:	lea    rax,[rip+0x106bd]        # 0x413934
  403277:	add    rsp,0x28
  40327b:	ret    
  40327c:	nop    DWORD PTR [rax+0x0]
  403280:	lea    rax,[rip+0x106b1]        # 0x413938
  403287:	add    rsp,0x28
  40328b:	ret    
  40328c:	nop    DWORD PTR [rax+0x0]
  403290:	lea    rax,[rip+0x106a6]        # 0x41393d
  403297:	add    rsp,0x28
  40329b:	ret    
  40329c:	nop    DWORD PTR [rax+0x0]
  4032a0:	lea    rax,[rip+0x10683]        # 0x41392a
  4032a7:	add    rsp,0x28
  4032ab:	ret    
  4032ac:	nop    DWORD PTR [rax+0x0]
  4032b0:	lea    rcx,[rip+0x1068d]        # 0x413944
  4032b7:	call   0x4030d0
  4032bc:	xor    eax,eax
  4032be:	add    rsp,0x28
  4032c2:	ret    
  4032c3:	nop    DWORD PTR [rax]
  4032c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032d0:	push   r12
  4032d2:	push   rbp
  4032d3:	push   rdi
  4032d4:	push   rsi
  4032d5:	push   rbx
  4032d6:	sub    rsp,0x20
  4032da:	mov    rdi,rcx
  4032dd:	call   QWORD PTR [rip+0x1c291]        # 0x41f574
  4032e3:	mov    rcx,rdi
  4032e6:	lea    rbp,[rax+0x30]
  4032ea:	call   0x410938
  4032ef:	cmp    BYTE PTR [rdi],0x2a
  4032f2:	mov    esi,eax
  4032f4:	je     0x40336b
  4032f6:	test   eax,eax
  4032f8:	jle    0x403360
  4032fa:	xor    ebx,ebx
  4032fc:	lea    r12,[rip+0x11c5d]        # 0x414f60
  403303:	cmp    rbx,0x13
  403307:	ja     0x40334b
  403309:	nop    DWORD PTR [rax+0x0]
  403310:	movsx  r8d,BYTE PTR [r12+rbx*1]
  403315:	lea    rdx,[rip+0x1069b]        # 0x4139b7
  40331c:	mov    rcx,rbp
  40331f:	sub    esi,0x42
  403322:	add    rbx,0x1
  403326:	call   0x4109f8
  40332b:	lea    rdx,[rip+0x1068d]        # 0x4139bf
  403332:	mov    r8,rdi
  403335:	mov    rcx,rbp
  403338:	call   0x4109f8
  40333d:	test   esi,esi
  40333f:	jle    0x403360
  403341:	add    rdi,0x42
  403345:	cmp    rbx,0x13
  403349:	jbe    0x403310
  40334b:	lea    rcx,[rip+0x10646]        # 0x413998
  403352:	mov    rdx,rdi
  403355:	call   0x4030d0
  40335a:	jmp    0x403310
  40335c:	nop    DWORD PTR [rax+0x0]
  403360:	add    rsp,0x20
  403364:	pop    rbx
  403365:	pop    rsi
  403366:	pop    rdi
  403367:	pop    rbp
  403368:	pop    r12
  40336a:	ret    
  40336b:	mov    rdx,rbp
  40336e:	mov    rcx,rdi
  403371:	call   0x4109e8
  403376:	mov    rdx,rbp
  403379:	mov    ecx,0xa
  40337e:	add    rsp,0x20
  403382:	pop    rbx
  403383:	pop    rsi
  403384:	pop    rdi
  403385:	pop    rbp
  403386:	pop    r12
  403388:	jmp    0x4109f0
  40338d:	nop    DWORD PTR [rax]
  403390:	sub    rsp,0x28
  403394:	cmp    ecx,0x6
  403397:	ja     0x403410
  403399:	lea    rax,[rip+0x10670]        # 0x413a10
  4033a0:	mov    ecx,ecx
  4033a2:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4033a6:	add    rax,rdx
  4033a9:	jmp    rax
  4033ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4033b0:	lea    rax,[rip+0x1060f]        # 0x4139c6
  4033b7:	add    rsp,0x28
  4033bb:	ret    
  4033bc:	nop    DWORD PTR [rax+0x0]
  4033c0:	lea    rax,[rip+0x10607]        # 0x4139ce
  4033c7:	add    rsp,0x28
  4033cb:	ret    
  4033cc:	nop    DWORD PTR [rax+0x0]
  4033d0:	lea    rax,[rip+0x105ff]        # 0x4139d6
  4033d7:	add    rsp,0x28
  4033db:	ret    
  4033dc:	nop    DWORD PTR [rax+0x0]
  4033e0:	lea    rax,[rip+0x105f8]        # 0x4139df
  4033e7:	add    rsp,0x28
  4033eb:	ret    
  4033ec:	nop    DWORD PTR [rax+0x0]
  4033f0:	lea    rax,[rip+0x105ef]        # 0x4139e6
  4033f7:	add    rsp,0x28
  4033fb:	ret    
  4033fc:	nop    DWORD PTR [rax+0x0]
  403400:	lea    rax,[rip+0x105e8]        # 0x4139ef
  403407:	add    rsp,0x28
  40340b:	ret    
  40340c:	nop    DWORD PTR [rax+0x0]
  403410:	lea    rcx,[rip+0x105e2]        # 0x4139f9
  403417:	call   0x4030d0
  40341c:	xor    eax,eax
  40341e:	add    rsp,0x28
  403422:	ret    
  403423:	nop    DWORD PTR [rax]
  403426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403430:	sub    rsp,0x28
  403434:	cmp    ecx,0x6
  403437:	ja     0x4034b0
  403439:	lea    rax,[rip+0x10620]        # 0x413a60
  403440:	mov    ecx,ecx
  403442:	movsxd rdx,DWORD PTR [rax+rcx*4]
  403446:	add    rax,rdx
  403449:	jmp    rax
  40344b:	nop    DWORD PTR [rax+rax*1+0x0]
  403450:	lea    rax,[rip+0x105d5]        # 0x413a2c
  403457:	add    rsp,0x28
  40345b:	ret    
  40345c:	nop    DWORD PTR [rax+0x0]
  403460:	lea    rax,[rip+0x105d1]        # 0x413a38
  403467:	add    rsp,0x28
  40346b:	ret    
  40346c:	nop    DWORD PTR [rax+0x0]
  403470:	lea    rax,[rip+0x105c6]        # 0x413a3d
  403477:	add    rsp,0x28
  40347b:	ret    
  40347c:	nop    DWORD PTR [rax+0x0]
  403480:	lea    rax,[rip+0x104ad]        # 0x413934
  403487:	add    rsp,0x28
  40348b:	ret    
  40348c:	nop    DWORD PTR [rax+0x0]
  403490:	lea    rax,[rip+0x105ac]        # 0x413a43
  403497:	add    rsp,0x28
  40349b:	ret    
  40349c:	nop    DWORD PTR [rax+0x0]
  4034a0:	lea    rax,[rip+0x10496]        # 0x41393d
  4034a7:	add    rsp,0x28
  4034ab:	ret    
  4034ac:	nop    DWORD PTR [rax+0x0]
  4034b0:	lea    rcx,[rip+0x10592]        # 0x413a49
  4034b7:	call   0x4030d0
  4034bc:	xor    eax,eax
  4034be:	add    rsp,0x28
  4034c2:	ret    
  4034c3:	nop    DWORD PTR [rax]
  4034c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034d0:	sub    rsp,0x28
  4034d4:	cmp    ecx,0x6
  4034d7:	ja     0x403550
  4034d9:	lea    rax,[rip+0x105bc]        # 0x413a9c
  4034e0:	mov    ecx,ecx
  4034e2:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4034e6:	add    rax,rdx
  4034e9:	jmp    rax
  4034eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4034f0:	lea    rax,[rip+0x10585]        # 0x413a7c
  4034f7:	add    rsp,0x28
  4034fb:	ret    
  4034fc:	nop    DWORD PTR [rax+0x0]
  403500:	lea    rax,[rip+0x10423]        # 0x41392a
  403507:	add    rsp,0x28
  40350b:	ret    
  40350c:	nop    DWORD PTR [rax+0x0]
  403510:	lea    rax,[rip+0x10526]        # 0x413a3d
  403517:	add    rsp,0x28
  40351b:	ret    
  40351c:	nop    DWORD PTR [rax+0x0]
  403520:	lea    rax,[rip+0x1040d]        # 0x413934
  403527:	add    rsp,0x28
  40352b:	ret    
  40352c:	nop    DWORD PTR [rax+0x0]
  403530:	lea    rax,[rip+0x1050c]        # 0x413a43
  403537:	add    rsp,0x28
  40353b:	ret    
  40353c:	nop    DWORD PTR [rax+0x0]
  403540:	lea    rax,[rip+0x103f6]        # 0x41393d
  403547:	add    rsp,0x28
  40354b:	ret    
  40354c:	nop    DWORD PTR [rax+0x0]
  403550:	lea    rcx,[rip+0x1052b]        # 0x413a82
  403557:	call   0x4030d0
  40355c:	xor    eax,eax
  40355e:	add    rsp,0x28
  403562:	ret    
  403563:	nop    DWORD PTR [rax]
  403566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403570:	sub    rsp,0x28
  403574:	cmp    ecx,0x6
  403577:	ja     0x4035e0
  403579:	lea    rax,[rip+0x10550]        # 0x413ad0
  403580:	mov    ecx,ecx
  403582:	movsxd rdx,DWORD PTR [rax+rcx*4]
  403586:	add    rax,rdx
  403589:	jmp    rax
  40358b:	nop    DWORD PTR [rax+rax*1+0x0]
  403590:	lea    rax,[rip+0x1039d]        # 0x413934
  403597:	add    rsp,0x28
  40359b:	ret    
  40359c:	nop    DWORD PTR [rax+0x0]
  4035a0:	lea    rax,[rip+0x10383]        # 0x41392a
  4035a7:	add    rsp,0x28
  4035ab:	ret    
  4035ac:	nop    DWORD PTR [rax+0x0]
  4035b0:	lea    rax,[rip+0x10486]        # 0x413a3d
  4035b7:	add    rsp,0x28
  4035bb:	ret    
  4035bc:	nop    DWORD PTR [rax+0x0]
  4035c0:	lea    rax,[rip+0x10376]        # 0x41393d
  4035c7:	add    rsp,0x28
  4035cb:	ret    
  4035cc:	nop    DWORD PTR [rax+0x0]
  4035d0:	lea    rax,[rip+0x1046c]        # 0x413a43
  4035d7:	add    rsp,0x28
  4035db:	ret    
  4035dc:	nop    DWORD PTR [rax+0x0]
  4035e0:	lea    rcx,[rip+0x104d1]        # 0x413ab8
  4035e7:	call   0x4030d0
  4035ec:	xor    eax,eax
  4035ee:	add    rsp,0x28
  4035f2:	ret    
  4035f3:	nop    DWORD PTR [rax]
  4035f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403600:	sub    rsp,0x28
  403604:	cmp    ecx,0x6
  403607:	ja     0x403660
  403609:	lea    rax,[rip+0x104f8]        # 0x413b08
  403610:	mov    ecx,ecx
  403612:	movsxd rdx,DWORD PTR [rax+rcx*4]
  403616:	add    rax,rdx
  403619:	jmp    rax
  40361b:	nop    DWORD PTR [rax+rax*1+0x0]
  403620:	mov    eax,0x4
  403625:	add    rsp,0x28
  403629:	ret    
  40362a:	nop    WORD PTR [rax+rax*1+0x0]
  403630:	mov    eax,0x1
  403635:	add    rsp,0x28
  403639:	ret    
  40363a:	nop    WORD PTR [rax+rax*1+0x0]
  403640:	mov    eax,0x8
  403645:	add    rsp,0x28
  403649:	ret    
  40364a:	nop    WORD PTR [rax+rax*1+0x0]
  403650:	mov    eax,0x2
  403655:	add    rsp,0x28
  403659:	ret    
  40365a:	nop    WORD PTR [rax+rax*1+0x0]
  403660:	lea    rcx,[rip+0x10485]        # 0x413aec
  403667:	call   0x4030d0
  40366c:	xor    eax,eax
  40366e:	add    rsp,0x28
  403672:	ret    
  403673:	nop    DWORD PTR [rax]
  403676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403680:	sub    rsp,0x28
  403684:	cmp    ecx,0x6
  403687:	ja     0x4036e0
  403689:	lea    rax,[rip+0x104d0]        # 0x413b60
  403690:	mov    ecx,ecx
  403692:	movsxd rdx,DWORD PTR [rax+rcx*4]
  403696:	add    rax,rdx
  403699:	jmp    rax
  40369b:	nop    DWORD PTR [rax+rax*1+0x0]
  4036a0:	lea    rax,[rip+0x1047d]        # 0x413b24
  4036a7:	add    rsp,0x28
  4036ab:	ret    
  4036ac:	nop    DWORD PTR [rax+0x0]
  4036b0:	lea    rax,[rip+0x10281]        # 0x413938
  4036b7:	add    rsp,0x28
  4036bb:	ret    
  4036bc:	nop    DWORD PTR [rax+0x0]
  4036c0:	lea    rax,[rip+0x1046f]        # 0x413b36
  4036c7:	add    rsp,0x28
  4036cb:	ret    
  4036cc:	nop    DWORD PTR [rax+0x0]
  4036d0:	lea    rax,[rip+0x10455]        # 0x413b2c
  4036d7:	add    rsp,0x28
  4036db:	ret    
  4036dc:	nop    DWORD PTR [rax+0x0]
  4036e0:	lea    rcx,[rip+0x10460]        # 0x413b47
  4036e7:	call   0x4030d0
  4036ec:	xor    eax,eax
  4036ee:	add    rsp,0x28
  4036f2:	ret    
  4036f3:	nop    DWORD PTR [rax]
  4036f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403700:	sub    rsp,0x28
  403704:	cmp    ecx,0x6
  403707:	ja     0x403780
  403709:	lea    rax,[rip+0x104b8]        # 0x413bc8
  403710:	mov    ecx,ecx
  403712:	movsxd rdx,DWORD PTR [rax+rcx*4]
  403716:	add    rax,rdx
  403719:	jmp    rax
  40371b:	nop    DWORD PTR [rax+rax*1+0x0]
  403720:	lea    rax,[rip+0x10455]        # 0x413b7c
  403727:	add    rsp,0x28
  40372b:	ret    
  40372c:	nop    DWORD PTR [rax+0x0]
  403730:	lea    rax,[rip+0x1044d]        # 0x413b84
  403737:	add    rsp,0x28
  40373b:	ret    
  40373c:	nop    DWORD PTR [rax+0x0]
  403740:	lea    rax,[rip+0x10445]        # 0x413b8c
  403747:	add    rsp,0x28
  40374b:	ret    
  40374c:	nop    DWORD PTR [rax+0x0]
  403750:	lea    rax,[rip+0x1043d]        # 0x413b94
  403757:	add    rsp,0x28
  40375b:	ret    
  40375c:	nop    DWORD PTR [rax+0x0]
  403760:	lea    rax,[rip+0x10434]        # 0x413b9b
  403767:	add    rsp,0x28
  40376b:	ret    
  40376c:	nop    DWORD PTR [rax+0x0]
  403770:	lea    rax,[rip+0x1042c]        # 0x413ba3
  403777:	add    rsp,0x28
  40377b:	ret    
  40377c:	nop    DWORD PTR [rax+0x0]
  403780:	lea    rcx,[rip+0x10426]        # 0x413bad
  403787:	call   0x4030d0
  40378c:	xor    eax,eax
  40378e:	add    rsp,0x28
  403792:	ret    
  403793:	nop    DWORD PTR [rax]
  403796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037a0:	push   r15
  4037a2:	push   r14
  4037a4:	push   r13
  4037a6:	push   r12
  4037a8:	push   rbp
  4037a9:	push   rdi
  4037aa:	push   rsi
  4037ab:	push   rbx
  4037ac:	sub    rsp,0xab8
  4037b3:	mov    rbx,QWORD PTR [rip+0x150f6]        # 0x4188b0
  4037ba:	mov    edx,DWORD PTR [rbx]
  4037bc:	test   edx,edx
  4037be:	jle    0x403802
  4037c0:	mov    rdi,QWORD PTR [rip+0x151a9]        # 0x418970
  4037c7:	mov    rsi,QWORD PTR [rip+0x15142]        # 0x418910
  4037ce:	sub    edx,0x1
  4037d1:	shl    rdx,0x6
  4037d5:	mov    rcx,QWORD PTR [rdi]
  4037d8:	mov    r8d,DWORD PTR [rsi]
  4037db:	lea    rax,[rcx+0xc]
  4037df:	lea    rcx,[rcx+rdx*1+0x4c]
  4037e4:	mov    r11d,DWORD PTR [rax]
  4037e7:	test   r11d,r11d
  4037ea:	jle    0x4037f9
  4037ec:	mov    rdx,QWORD PTR [rax+0x4]
  4037f0:	cmp    DWORD PTR [rdx],r8d
  4037f3:	je     0x4038b3
  4037f9:	add    rax,0x40
  4037fd:	cmp    rax,rcx
  403800:	jne    0x4037e4
  403802:	lea    rcx,[rip+0x10426]        # 0x413c2f
  403809:	call   0x4032d0
  40380e:	lea    rcx,[rip+0x1041c]        # 0x413c31
  403815:	call   0x4032d0
  40381a:	lea    rcx,[rip+0x10426]        # 0x413c47
  403821:	call   0x4032d0
  403826:	lea    rcx,[rip+0x1042f]        # 0x413c5c
  40382d:	call   0x4032d0
  403832:	lea    rcx,[rip+0x103f6]        # 0x413c2f
  403839:	call   0x4032d0
  40383e:	lea    rcx,[rip+0x106e6]        # 0x413f2b
  403845:	call   0x4032d0
  40384a:	lea    rcx,[rip+0x106f5]        # 0x413f46
  403851:	call   0x4032d0
  403856:	lea    rcx,[rip+0x1042c]        # 0x413c89
  40385d:	call   0x4032d0
  403862:	lea    rcx,[rip+0x106ea]        # 0x413f53
  403869:	call   0x4032d0
  40386e:	lea    rcx,[rip+0x106fb]        # 0x413f70
  403875:	call   0x4032d0
  40387a:	lea    rcx,[rip+0x1070a]        # 0x413f8b
  403881:	call   0x4032d0
  403886:	lea    rcx,[rip+0x10703]        # 0x413f90
  40388d:	call   0x4032d0
  403892:	lea    rcx,[rip+0x103c3]        # 0x413c5c
  403899:	call   0x4032d0
  40389e:	nop
  40389f:	add    rsp,0xab8
  4038a6:	pop    rbx
  4038a7:	pop    rsi
  4038a8:	pop    rdi
  4038a9:	pop    rbp
  4038aa:	pop    r12
  4038ac:	pop    r13
  4038ae:	pop    r14
  4038b0:	pop    r15
  4038b2:	ret    
  4038b3:	lea    rcx,[rip+0x10375]        # 0x413c2f
  4038ba:	call   0x4032d0
  4038bf:	lea    rcx,[rip+0x106d0]        # 0x413f96
  4038c6:	call   0x4032d0
  4038cb:	movabs rax,0x697277206c6c6163
  4038d5:	mov    DWORD PTR [rsp+0x60],0x2c646963
  4038dd:	mov    BYTE PTR [rsp+0x64],0x0
  4038e2:	mov    QWORD PTR [rsp+0x50],rax
  4038e7:	movabs rax,0x6e28736365726574
  4038f1:	mov    QWORD PTR [rsp+0x58],rax
  4038f6:	mov    eax,DWORD PTR [rbx]
  4038f8:	test   eax,eax
  4038fa:	jle    0x404348
  403900:	lea    rax,[rsp+0x50]
  403905:	xor    r12d,r12d
  403908:	xor    ebp,ebp
  40390a:	lea    r13,[rsp+0x580]
  403912:	mov    QWORD PTR [rsp+0x40],rax
  403917:	jmp    0x40392b
  403919:	nop    DWORD PTR [rax+0x0]
  403920:	add    ebp,0x1
  403923:	add    r12,0x40
  403927:	cmp    DWORD PTR [rbx],ebp
  403929:	jle    0x40396f
  40392b:	mov    rax,r12
  40392e:	add    rax,QWORD PTR [rdi]
  403931:	mov    r10d,DWORD PTR [rax+0xc]
  403935:	test   r10d,r10d
  403938:	jle    0x403920
  40393a:	mov    rdx,QWORD PTR [rax+0x10]
  40393e:	mov    ecx,DWORD PTR [rsi]
  403940:	cmp    DWORD PTR [rdx],ecx
  403942:	jne    0x403920
  403944:	mov    r8,QWORD PTR [rax+0x38]
  403948:	lea    rdx,[rip+0x102d9]        # 0x413c28
  40394f:	mov    rcx,r13
  403952:	add    ebp,0x1
  403955:	add    r12,0x40
  403959:	call   0x410968
  40395e:	mov    rcx,QWORD PTR [rsp+0x40]
  403963:	mov    rdx,r13
  403966:	call   0x410958
  40396b:	cmp    DWORD PTR [rbx],ebp
  40396d:	jg     0x40392b
  40396f:	mov    rcx,QWORD PTR [rsp+0x40]
  403974:	mov    edx,0x2c
  403979:	call   0x410918
  40397e:	test   rax,rax
  403981:	je     0x403986
  403983:	mov    BYTE PTR [rax],0x0
  403986:	mov    rdx,QWORD PTR [rsp+0x40]
  40398b:	mov    ecx,DWORD PTR [rdx]
  40398d:	add    rdx,0x4
  403991:	lea    eax,[rcx-0x1010101]
  403997:	not    ecx
  403999:	and    eax,ecx
  40399b:	and    eax,0x80808080
  4039a0:	je     0x40398b
  4039a2:	mov    ecx,eax
  4039a4:	lea    r13,[rsp+0x580]
  4039ac:	shr    ecx,0x10
  4039af:	test   eax,0x8080
  4039b4:	cmove  eax,ecx
  4039b7:	lea    rcx,[rdx+0x2]
  4039bb:	cmove  rdx,rcx
  4039bf:	add    al,al
  4039c1:	mov    ecx,0x29
  4039c6:	sbb    rdx,0x3
  4039ca:	xor    r12d,r12d
  4039cd:	xor    ebp,ebp
  4039cf:	mov    WORD PTR [rdx],cx
  4039d2:	mov    rcx,QWORD PTR [rsp+0x40]
  4039d7:	call   0x4032d0
  4039dc:	lea    rcx,[rip+0x1024c]        # 0x413c2f
  4039e3:	call   0x4032d0
  4039e8:	lea    rcx,[rip+0x10242]        # 0x413c31
  4039ef:	call   0x4032d0
  4039f4:	lea    rcx,[rip+0x1024c]        # 0x413c47
  4039fb:	call   0x4032d0
  403a00:	lea    rcx,[rip+0x10255]        # 0x413c5c
  403a07:	call   0x4032d0
  403a0c:	lea    rcx,[rip+0x1021c]        # 0x413c2f
  403a13:	call   0x4032d0
  403a18:	mov    r9d,DWORD PTR [rbx]
  403a1b:	movabs rax,0x6974756f72627573
  403a25:	mov    r8d,0x2c64
  403a2b:	mov    QWORD PTR [rsp+0x50],rax
  403a30:	movabs rax,0x657469727720656e
  403a3a:	mov    WORD PTR [rsp+0x68],r8w
  403a40:	mov    QWORD PTR [rsp+0x58],rax
  403a45:	movabs rax,0x69636e2873636572
  403a4f:	mov    BYTE PTR [rsp+0x6a],0x0
  403a54:	test   r9d,r9d
  403a57:	mov    QWORD PTR [rsp+0x60],rax
  403a5c:	jg     0x403a6b
  403a5e:	jmp    0x403aad
  403a60:	add    ebp,0x1
  403a63:	add    r12,0x40
  403a67:	cmp    DWORD PTR [rbx],ebp
  403a69:	jle    0x403aad
  403a6b:	mov    rax,r12
  403a6e:	add    rax,QWORD PTR [rdi]
  403a71:	mov    edx,DWORD PTR [rax+0xc]
  403a74:	test   edx,edx
  403a76:	jle    0x403a60
  403a78:	mov    rdx,QWORD PTR [rax+0x10]
  403a7c:	mov    ecx,DWORD PTR [rsi]
  403a7e:	cmp    DWORD PTR [rdx],ecx
  403a80:	jne    0x403a60
  403a82:	mov    r8,QWORD PTR [rax+0x38]
  403a86:	lea    rdx,[rip+0x1019b]        # 0x413c28
  403a8d:	mov    rcx,r13
  403a90:	add    ebp,0x1
  403a93:	add    r12,0x40
  403a97:	call   0x410968
  403a9c:	mov    rcx,QWORD PTR [rsp+0x40]
  403aa1:	mov    rdx,r13
  403aa4:	call   0x410958
  403aa9:	cmp    DWORD PTR [rbx],ebp
  403aab:	jg     0x403a6b
  403aad:	mov    rcx,QWORD PTR [rsp+0x40]
  403ab2:	mov    edx,0x2c
  403ab7:	call   0x410918
  403abc:	test   rax,rax
  403abf:	je     0x403ac4
  403ac1:	mov    BYTE PTR [rax],0x0
  403ac4:	mov    rdx,QWORD PTR [rsp+0x40]
  403ac9:	mov    ecx,DWORD PTR [rdx]
  403acb:	add    rdx,0x4
  403acf:	lea    eax,[rcx-0x1010101]
  403ad5:	not    ecx
  403ad7:	and    eax,ecx
  403ad9:	and    eax,0x80808080
  403ade:	je     0x403ac9
  403ae0:	mov    ecx,eax
  403ae2:	shr    ecx,0x10
  403ae5:	test   eax,0x8080
  403aea:	cmove  eax,ecx
  403aed:	lea    rcx,[rdx+0x2]
  403af1:	cmove  rdx,rcx
  403af5:	add    al,al
  403af7:	mov    rcx,QWORD PTR [rsp+0x40]
  403afc:	sbb    rdx,0x3
  403b00:	mov    eax,0x29
  403b05:	xor    r12d,r12d
  403b08:	mov    WORD PTR [rdx],ax
  403b0b:	xor    ebp,ebp
  403b0d:	call   0x4032d0
  403b12:	lea    rcx,[rip+0x10116]        # 0x413c2f
  403b19:	call   0x4032d0
  403b1e:	lea    rcx,[rip+0x1013b]        # 0x413c60
  403b25:	call   0x4032d0
  403b2a:	lea    rcx,[rip+0x1013b]        # 0x413c6c
  403b31:	call   0x4032d0
  403b36:	lea    rcx,[rip+0x1013d]        # 0x413c7a
  403b3d:	call   0x4032d0
  403b42:	mov    eax,DWORD PTR [rbx]
  403b44:	test   eax,eax
  403b46:	jg     0x403b5b
  403b48:	jmp    0x403b9f
  403b4a:	nop    WORD PTR [rax+rax*1+0x0]
  403b50:	add    ebp,0x1
  403b53:	add    r12,0x40
  403b57:	cmp    DWORD PTR [rbx],ebp
  403b59:	jle    0x403b9f
  403b5b:	mov    rax,r12
  403b5e:	add    rax,QWORD PTR [rdi]
  403b61:	mov    r11d,DWORD PTR [rax+0xc]
  403b65:	test   r11d,r11d
  403b68:	jle    0x403b50
  403b6a:	mov    rdx,QWORD PTR [rax+0x10]
  403b6e:	mov    ecx,DWORD PTR [rsi]
  403b70:	cmp    DWORD PTR [rdx],ecx
  403b72:	jne    0x403b50
  403b74:	mov    r14,QWORD PTR [rsp+0x40]
  403b79:	mov    r8,QWORD PTR [rax+0x38]
  403b7d:	lea    rdx,[rip+0x10187]        # 0x413d0b
  403b84:	add    ebp,0x1
  403b87:	add    r12,0x40
  403b8b:	mov    rcx,r14
  403b8e:	call   0x410968
  403b93:	mov    rcx,r14
  403b96:	call   0x4032d0
  403b9b:	cmp    DWORD PTR [rbx],ebp
  403b9d:	jg     0x403b5b
  403b9f:	lea    rcx,[rip+0x10089]        # 0x413c2f
  403ba6:	xor    r12d,r12d
  403ba9:	xor    ebp,ebp
  403bab:	call   0x4032d0
  403bb0:	lea    rcx,[rip+0x100d2]        # 0x413c89
  403bb7:	call   0x4032d0
  403bbc:	lea    rcx,[rip+0x100db]        # 0x413c9e
  403bc3:	call   0x4032d0
  403bc8:	lea    rcx,[rip+0x100e5]        # 0x413cb4
  403bcf:	call   0x4032d0
  403bd4:	lea    rcx,[rip+0x10054]        # 0x413c2f
  403bdb:	call   0x4032d0
  403be0:	lea    rcx,[rip+0x100e1]        # 0x413cc8
  403be7:	call   0x4032d0
  403bec:	mov    r13,QWORD PTR [rip+0x14c7d]        # 0x418870
  403bf3:	mov    r14,QWORD PTR [rip+0x14bc6]        # 0x4187c0
  403bfa:	mov    r15d,DWORD PTR [r13+0x0]
  403bfe:	test   r15d,r15d
  403c01:	jle    0x403c6d
  403c03:	mov    eax,DWORD PTR [rbx]
  403c05:	test   eax,eax
  403c07:	jle    0x403c60
  403c09:	mov    rcx,QWORD PTR [rdi]
  403c0c:	sub    eax,0x1
  403c0f:	mov    r9d,DWORD PTR [rsi]
  403c12:	shl    rax,0x6
  403c16:	lea    rdx,[rcx+0xc]
  403c1a:	lea    r8,[rcx+rax*1+0x4c]
  403c1f:	jmp    0x403c2a
  403c21:	add    rdx,0x40
  403c25:	cmp    rdx,r8
  403c28:	je     0x403c60
  403c2a:	mov    ecx,DWORD PTR [rdx]
  403c2c:	test   ecx,ecx
  403c2e:	jle    0x403c21
  403c30:	mov    rax,QWORD PTR [rdx+0x4]
  403c34:	cmp    DWORD PTR [rax],r9d
  403c37:	jne    0x403c21
  403c39:	sub    ecx,0x1
  403c3c:	lea    rcx,[rax+rcx*4+0x4]
  403c41:	jmp    0x403c4c
  403c43:	add    rax,0x4
  403c47:	cmp    rax,rcx
  403c4a:	je     0x403c21
  403c4c:	cmp    ebp,DWORD PTR [rax]
  403c4e:	jne    0x403c43
  403c50:	mov    rax,r12
  403c53:	add    rax,QWORD PTR [r14]
  403c56:	cmp    QWORD PTR [rax],0x0
  403c5a:	jne    0x403f42
  403c60:	add    ebp,0x1
  403c63:	add    r12,0x18
  403c67:	cmp    DWORD PTR [r13+0x0],ebp
  403c6b:	jg     0x403c03
  403c6d:	lea    rcx,[rip+0xffbb]        # 0x413c2f
  403c74:	xor    r12d,r12d
  403c77:	xor    ebp,ebp
  403c79:	call   0x4032d0
  403c7e:	lea    rcx,[rip+0x100c3]        # 0x413d48
  403c85:	call   0x4032d0
  403c8a:	mov    r10d,DWORD PTR [rbx]
  403c8d:	test   r10d,r10d
  403c90:	jg     0x403cad
  403c92:	jmp    0x403d4f
  403c97:	nop    WORD PTR [rax+rax*1+0x0]
  403ca0:	mov    eax,DWORD PTR [rbx]
  403ca2:	add    ebp,0x1
  403ca5:	add    r12,0x40
  403ca9:	cmp    eax,ebp
  403cab:	jle    0x403cf3
  403cad:	mov    rax,r12
  403cb0:	add    rax,QWORD PTR [rdi]
  403cb3:	mov    r8d,DWORD PTR [rax+0xc]
  403cb7:	test   r8d,r8d
  403cba:	jle    0x403ca0
  403cbc:	mov    rdx,QWORD PTR [rax+0x10]
  403cc0:	mov    ecx,DWORD PTR [rsi]
  403cc2:	cmp    DWORD PTR [rdx],ecx
  403cc4:	jne    0x403ca0
  403cc6:	mov    r14,QWORD PTR [rsp+0x40]
  403ccb:	mov    r8,QWORD PTR [rax+0x38]
  403ccf:	lea    rdx,[rip+0x100dd]        # 0x413db3
  403cd6:	add    ebp,0x1
  403cd9:	add    r12,0x40
  403cdd:	mov    rcx,r14
  403ce0:	call   0x410968
  403ce5:	mov    rcx,r14
  403ce8:	call   0x4032d0
  403ced:	mov    eax,DWORD PTR [rbx]
  403cef:	cmp    eax,ebp
  403cf1:	jg     0x403cad
  403cf3:	test   eax,eax
  403cf5:	jle    0x403d4f
  403cf7:	xor    r12d,r12d
  403cfa:	xor    ebp,ebp
  403cfc:	jmp    0x403d0b
  403cfe:	xchg   ax,ax
  403d00:	add    ebp,0x1
  403d03:	add    r12,0x40
  403d07:	cmp    DWORD PTR [rbx],ebp
  403d09:	jle    0x403d4f
  403d0b:	mov    rax,r12
  403d0e:	add    rax,QWORD PTR [rdi]
  403d11:	mov    r9d,DWORD PTR [rax+0xc]
  403d15:	test   r9d,r9d
  403d18:	jle    0x403d00
  403d1a:	mov    rdx,QWORD PTR [rax+0x10]
  403d1e:	mov    ecx,DWORD PTR [rsi]
  403d20:	cmp    DWORD PTR [rdx],ecx
  403d22:	jne    0x403d00
  403d24:	mov    r14,QWORD PTR [rsp+0x40]
  403d29:	mov    r8,QWORD PTR [rax+0x38]
  403d2d:	lea    rdx,[rip+0x10090]        # 0x413dc4
  403d34:	add    ebp,0x1
  403d37:	add    r12,0x40
  403d3b:	mov    rcx,r14
  403d3e:	call   0x410968
  403d43:	mov    rcx,r14
  403d46:	call   0x4032d0
  403d4b:	cmp    DWORD PTR [rbx],ebp
  403d4d:	jg     0x403d0b
  403d4f:	lea    rcx,[rip+0x10022]        # 0x413d78
  403d56:	xor    r12d,r12d
  403d59:	xor    ebp,ebp
  403d5b:	call   0x4032d0
  403d60:	mov    r9d,DWORD PTR [rbx]
  403d63:	test   r9d,r9d
  403d66:	jg     0x403d7b
  403d68:	jmp    0x403dca
  403d6a:	nop    WORD PTR [rax+rax*1+0x0]
  403d70:	add    ebp,0x1
  403d73:	add    r12,0x40
  403d77:	cmp    DWORD PTR [rbx],ebp
  403d79:	jle    0x403dca
  403d7b:	mov    rax,r12
  403d7e:	add    rax,QWORD PTR [rdi]
  403d81:	mov    edx,DWORD PTR [rax+0xc]
  403d84:	test   edx,edx
  403d86:	jle    0x403d70
  403d88:	mov    rdx,QWORD PTR [rax+0x10]
  403d8c:	mov    ecx,DWORD PTR [rsi]
  403d8e:	cmp    DWORD PTR [rdx],ecx
  403d90:	jne    0x403d70
  403d92:	mov    r8,QWORD PTR [rax+0x38]
  403d96:	mov    r14,QWORD PTR [rsp+0x40]
  403d9b:	lea    rdx,[rip+0x1004e]        # 0x413df0
  403da2:	add    ebp,0x1
  403da5:	add    r12,0x40
  403da9:	mov    QWORD PTR [rsp+0x28],r8
  403dae:	mov    QWORD PTR [rsp+0x20],r8
  403db3:	mov    r9,r8
  403db6:	mov    rcx,r14
  403db9:	call   0x410968
  403dbe:	mov    rcx,r14
  403dc1:	call   0x4032d0
  403dc6:	cmp    DWORD PTR [rbx],ebp
  403dc8:	jg     0x403d7b
  403dca:	lea    rcx,[rip+0xfe5e]        # 0x413c2f
  403dd1:	xor    ebp,ebp
  403dd3:	xor    r12d,r12d
  403dd6:	lea    r14,[rsp+0x580]
  403dde:	call   0x4032d0
  403de3:	lea    rcx,[rip+0xfff3]        # 0x413ddd
  403dea:	call   0x4032d0
  403def:	mov    ecx,DWORD PTR [rbx]
  403df1:	test   ecx,ecx
  403df3:	jg     0x403e11
  403df5:	jmp    0x403f8b
  403dfa:	nop    WORD PTR [rax+rax*1+0x0]
  403e00:	add    r12d,0x1
  403e04:	add    rbp,0x40
  403e08:	cmp    DWORD PTR [rbx],r12d
  403e0b:	jle    0x403f8b
  403e11:	mov    r15,rbp
  403e14:	add    r15,QWORD PTR [rdi]
  403e17:	mov    eax,DWORD PTR [r15+0xc]
  403e1b:	test   eax,eax
  403e1d:	jle    0x403e00
  403e1f:	mov    rax,QWORD PTR [r15+0x10]
  403e23:	mov    edx,DWORD PTR [rsi]
  403e25:	cmp    DWORD PTR [rax],edx
  403e27:	jne    0x403e00
  403e29:	lea    rcx,[rip+0xfdff]        # 0x413c2f
  403e30:	call   0x4032d0
  403e35:	mov    r13,QWORD PTR [rsp+0x40]
  403e3a:	mov    r8,QWORD PTR [r15+0x38]
  403e3e:	lea    rdx,[rip+0xffd9]        # 0x413e1e
  403e45:	mov    rcx,r13
  403e48:	call   0x410968
  403e4d:	mov    rcx,r13
  403e50:	call   0x4032d0
  403e55:	mov    r9,QWORD PTR [r15+0x28]
  403e59:	mov    r8,QWORD PTR [r15+0x38]
  403e5d:	test   r9,r9
  403e60:	je     0x4042dc
  403e66:	mov    rcx,QWORD PTR [rsp+0x40]
  403e6b:	lea    rdx,[rip+0xffbb]        # 0x413e2d
  403e72:	call   0x410968
  403e77:	mov    rcx,QWORD PTR [rsp+0x40]
  403e7c:	call   0x4032d0
  403e81:	mov    ecx,DWORD PTR [r15+0x8]
  403e85:	cmp    ecx,0x2
  403e88:	je     0x403e00
  403e8e:	mov    r13,QWORD PTR [r15+0x38]
  403e92:	call   0x403680
  403e97:	mov    rcx,QWORD PTR [rsp+0x40]
  403e9c:	lea    rdx,[rip+0xffb8]        # 0x413e5b
  403ea3:	mov    r8,rax
  403ea6:	mov    r9,r13
  403ea9:	call   0x410968
  403eae:	mov    eax,DWORD PTR [r15+0xc]
  403eb2:	sub    eax,0x1
  403eb5:	js     0x404275
  403ebb:	movsxd rdx,eax
  403ebe:	mov    eax,eax
  403ec0:	lea    r13,[rdx*4+0x0]
  403ec8:	sub    rdx,rax
  403ecb:	lea    rax,[rdx*4-0x4]
  403ed3:	mov    QWORD PTR [rsp+0x48],rax
  403ed8:	jmp    0x403f21
  403eda:	nop    WORD PTR [rax+rax*1+0x0]
  403ee0:	mov    rdx,QWORD PTR [rip+0x148d9]        # 0x4187c0
  403ee7:	lea    rax,[rax+rax*2]
  403eeb:	mov    rcx,r14
  403eee:	shl    rax,0x3
  403ef2:	add    rax,QWORD PTR [rdx]
  403ef5:	lea    rdx,[rip+0xff6f]        # 0x413e6b
  403efc:	mov    r8,QWORD PTR [rax+0x10]
  403f00:	call   0x410968
  403f05:	mov    rcx,QWORD PTR [rsp+0x40]
  403f0a:	mov    rdx,r14
  403f0d:	sub    r13,0x4
  403f11:	call   0x410958
  403f16:	cmp    r13,QWORD PTR [rsp+0x48]
  403f1b:	je     0x404275
  403f21:	mov    rax,QWORD PTR [r15+0x10]
  403f25:	movsxd rax,DWORD PTR [rax+r13*1]
  403f29:	cmp    eax,DWORD PTR [rsi]
  403f2b:	jne    0x403ee0
  403f2d:	mov    r8,QWORD PTR [r15+0x38]
  403f31:	lea    rdx,[rip+0xff2b]        # 0x413e63
  403f38:	mov    rcx,r14
  403f3b:	call   0x410968
  403f40:	jmp    0x403f05
  403f42:	mov    r15,QWORD PTR [rsp+0x40]
  403f47:	mov    r8,QWORD PTR [rax+0x10]
  403f4b:	lea    rdx,[rip+0xfdc8]        # 0x413d1a
  403f52:	mov    rcx,r15
  403f55:	call   0x410968
  403f5a:	mov    rcx,r15
  403f5d:	call   0x4032d0
  403f62:	mov    rax,r12
  403f65:	add    rax,QWORD PTR [r14]
  403f68:	lea    rdx,[rip+0xfdbb]        # 0x413d2a
  403f6f:	mov    rcx,r15
  403f72:	mov    r9d,DWORD PTR [rax]
  403f75:	mov    r8,QWORD PTR [rax+0x10]
  403f79:	call   0x410968
  403f7e:	mov    rcx,r15
  403f81:	call   0x4032d0
  403f86:	jmp    0x403c60
  403f8b:	lea    rcx,[rip+0xfc9d]        # 0x413c2f
  403f92:	xor    r15d,r15d
  403f95:	xor    r14d,r14d
  403f98:	lea    r12,[rip+0x10011]        # 0x413fb0
  403f9f:	call   0x4032d0
  403fa4:	mov    eax,DWORD PTR [rbx]
  403fa6:	mov    r13,QWORD PTR [rip+0x14813]        # 0x4187c0
  403fad:	test   eax,eax
  403faf:	jg     0x403fd1
  403fb1:	jmp    0x404085
  403fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fc0:	add    r14d,0x1
  403fc4:	add    r15,0x40
  403fc8:	cmp    DWORD PTR [rbx],r14d
  403fcb:	jle    0x404085
  403fd1:	mov    rbp,r15
  403fd4:	add    rbp,QWORD PTR [rdi]
  403fd7:	mov    edx,DWORD PTR [rbp+0xc]
  403fda:	test   edx,edx
  403fdc:	jle    0x403fc0
  403fde:	mov    r9,QWORD PTR [rbp+0x10]
  403fe2:	mov    eax,DWORD PTR [rsi]
  403fe4:	cmp    DWORD PTR [r9],eax
  403fe7:	jne    0x403fc0
  403fe9:	mov    r8d,DWORD PTR [rbp+0x8]
  403fed:	cmp    r8d,0x2
  403ff1:	je     0x403fc0
  403ff3:	mov    r10d,DWORD PTR [rbp+0x20]
  403ff7:	test   r10d,r10d
  403ffa:	jne    0x4042f2
  404000:	cmp    edx,0x1
  404003:	je     0x40433d
  404009:	mov    rcx,QWORD PTR [r13+0x0]
  40400d:	sub    edx,0x2
  404010:	lea    rax,[r9+0x4]
  404014:	lea    r11,[r9+rdx*4+0x8]
  404019:	mov    r9d,0x1
  40401f:	nop
  404020:	movsxd rdx,DWORD PTR [rax]
  404023:	add    rax,0x4
  404027:	lea    rdx,[rdx+rdx*2]
  40402b:	imul   r9,QWORD PTR [rcx+rdx*8]
  404030:	cmp    rax,r11
  404033:	jne    0x404020
  404035:	cmp    r8d,0x6
  404039:	ja     0x404258
  40403f:	movsxd rax,DWORD PTR [r12+r8*4]
  404043:	add    rax,r12
  404046:	jmp    rax
  404048:	lea    rax,[rip+0xfb95]        # 0x413be4
  40404f:	mov    r8,QWORD PTR [rbp+0x38]
  404053:	mov    rbp,QWORD PTR [rsp+0x40]
  404058:	lea    rdx,[rip+0xfe30]        # 0x413e8f
  40405f:	mov    QWORD PTR [rsp+0x20],rax
  404064:	add    r14d,0x1
  404068:	add    r15,0x40
  40406c:	mov    rcx,rbp
  40406f:	call   0x410968
  404074:	mov    rcx,rbp
  404077:	call   0x4032d0
  40407c:	cmp    DWORD PTR [rbx],r14d
  40407f:	jg     0x403fd1
  404085:	lea    rcx,[rip+0xfba3]        # 0x413c2f
  40408c:	xor    r13d,r13d
  40408f:	xor    r12d,r12d
  404092:	call   0x4032d0
  404097:	mov    r11d,DWORD PTR [rbx]
  40409a:	test   r11d,r11d
  40409d:	jg     0x4040b5
  40409f:	jmp    0x40421c
  4040a4:	add    r12d,0x1
  4040a8:	add    r13,0x40
  4040ac:	cmp    DWORD PTR [rbx],r12d
  4040af:	jle    0x40421c
  4040b5:	mov    rbp,r13
  4040b8:	add    rbp,QWORD PTR [rdi]
  4040bb:	mov    ecx,DWORD PTR [rbp+0xc]
  4040be:	test   ecx,ecx
  4040c0:	jle    0x4040a4
  4040c2:	mov    rax,QWORD PTR [rbp+0x10]
  4040c6:	mov    edx,DWORD PTR [rsi]
  4040c8:	cmp    DWORD PTR [rax],edx
  4040ca:	jne    0x4040a4
  4040cc:	mov    edx,DWORD PTR [rbp+0x20]
  4040cf:	test   edx,edx
  4040d1:	je     0x4040a4
  4040d3:	mov    r14,QWORD PTR [rsp+0x40]
  4040d8:	mov    r8,QWORD PTR [rbp+0x0]
  4040dc:	lea    rdx,[rip+0xfdbf]        # 0x413ea2
  4040e3:	mov    rcx,r14
  4040e6:	call   0x410968
  4040eb:	mov    rcx,r14
  4040ee:	call   0x4032d0
  4040f3:	mov    r9d,DWORD PTR [rbp+0xc]
  4040f7:	test   r9d,r9d
  4040fa:	jle    0x404130
  4040fc:	xor    r15d,r15d
  4040ff:	nop
  404100:	mov    r14,QWORD PTR [rsp+0x40]
  404105:	mov    r8,QWORD PTR [rbp+0x38]
  404109:	add    r15d,0x1
  40410d:	lea    rdx,[rip+0xfd99]        # 0x413ead
  404114:	mov    r9d,r15d
  404117:	mov    rcx,r14
  40411a:	call   0x410968
  40411f:	mov    rcx,r14
  404122:	call   0x4032d0
  404127:	mov    r9d,DWORD PTR [rbp+0xc]
  40412b:	cmp    r9d,r15d
  40412e:	jg     0x404100
  404130:	lea    r15d,[r9-0x1]
  404134:	test   r15d,r15d
  404137:	jle    0x404197
  404139:	movsxd r11,r15d
  40413c:	lea    r14,[r11*4+0x0]
  404144:	mov    rax,QWORD PTR [rbp+0x10]
  404148:	mov    rdx,QWORD PTR [rip+0x14671]        # 0x4187c0
  40414f:	sub    r9d,r15d
  404152:	mov    r8,QWORD PTR [rbp+0x38]
  404156:	mov    rcx,QWORD PTR [rsp+0x40]
  40415b:	movsxd rax,DWORD PTR [rax+r14*1]
  40415f:	sub    r14,0x4
  404163:	lea    rax,[rax+rax*2]
  404167:	shl    rax,0x3
  40416b:	add    rax,QWORD PTR [rdx]
  40416e:	lea    rdx,[rip+0xfd49]        # 0x413ebe
  404175:	mov    rax,QWORD PTR [rax+0x10]
  404179:	mov    QWORD PTR [rsp+0x20],rax
  40417e:	call   0x410968
  404183:	mov    rcx,QWORD PTR [rsp+0x40]
  404188:	call   0x4032d0
  40418d:	sub    r15d,0x1
  404191:	mov    r9d,DWORD PTR [rbp+0xc]
  404195:	jne    0x404144
  404197:	mov    r8,QWORD PTR [rbp+0x38]
  40419b:	mov    r14,QWORD PTR [rsp+0x40]
  4041a0:	lea    rdx,[rip+0xfd2d]        # 0x413ed4
  4041a7:	mov    QWORD PTR [rsp+0x20],r8
  4041ac:	mov    rcx,r14
  4041af:	call   0x410968
  4041b4:	mov    rcx,r14
  4041b7:	call   0x4032d0
  4041bc:	mov    ecx,DWORD PTR [rbp+0x8]
  4041bf:	cmp    ecx,0x2
  4041c2:	je     0x404300
  4041c8:	mov    rbp,QWORD PTR [rbp+0x38]
  4041cc:	call   0x403250
  4041d1:	lea    rdx,[rip+0xfd18]        # 0x413ef0
  4041d8:	mov    r8,rax
  4041db:	mov    rcx,r14
  4041de:	mov    QWORD PTR [rsp+0x30],rbp
  4041e3:	mov    QWORD PTR [rsp+0x28],rbp
  4041e8:	mov    r9,rbp
  4041eb:	mov    QWORD PTR [rsp+0x20],rbp
  4041f0:	call   0x410968
  4041f5:	mov    rcx,QWORD PTR [rsp+0x40]
  4041fa:	add    r12d,0x1
  4041fe:	add    r13,0x40
  404202:	call   0x4032d0
  404207:	lea    rcx,[rip+0xfa39]        # 0x413c47
  40420e:	call   0x4032d0
  404213:	cmp    DWORD PTR [rbx],r12d
  404216:	jg     0x4040b5
  40421c:	lea    rcx,[rip+0xfa0c]        # 0x413c2f
  404223:	jmp    0x403821
  404228:	lea    rax,[rip+0xf9dc]        # 0x413c0b
  40422f:	jmp    0x40404f
  404234:	lea    rax,[rip+0xf9c4]        # 0x413bff
  40423b:	jmp    0x40404f
  404240:	lea    rax,[rip+0xf9aa]        # 0x413bf1
  404247:	jmp    0x40404f
  40424c:	lea    rax,[rip+0xf9c6]        # 0x413c19
  404253:	jmp    0x40404f
  404258:	lea    rcx,[rip+0xfc15]        # 0x413e74
  40425f:	mov    DWORD PTR [rsp+0x48],r9d
  404264:	call   0x4030d0
  404269:	xor    eax,eax
  40426b:	mov    r9d,DWORD PTR [rsp+0x48]
  404270:	jmp    0x40404f
  404275:	mov    rcx,QWORD PTR [rsp+0x40]
  40427a:	mov    edx,0x2c
  40427f:	call   0x410918
  404284:	test   rax,rax
  404287:	je     0x40428c
  404289:	mov    BYTE PTR [rax],0x0
  40428c:	mov    rdx,QWORD PTR [rsp+0x40]
  404291:	mov    ecx,DWORD PTR [rdx]
  404293:	add    rdx,0x4
  404297:	lea    eax,[rcx-0x1010101]
  40429d:	not    ecx
  40429f:	and    eax,ecx
  4042a1:	and    eax,0x80808080
  4042a6:	je     0x404291
  4042a8:	mov    ecx,eax
  4042aa:	mov    r13d,0x29
  4042b0:	shr    ecx,0x10
  4042b3:	test   eax,0x8080
  4042b8:	cmove  eax,ecx
  4042bb:	lea    rcx,[rdx+0x2]
  4042bf:	cmove  rdx,rcx
  4042c3:	add    al,al
  4042c5:	mov    rcx,QWORD PTR [rsp+0x40]
  4042ca:	sbb    rdx,0x3
  4042ce:	mov    WORD PTR [rdx],r13w
  4042d2:	call   0x4032d0
  4042d7:	jmp    0x403e00
  4042dc:	mov    rcx,QWORD PTR [rsp+0x40]
  4042e1:	lea    rdx,[rip+0xfb5d]        # 0x413e45
  4042e8:	call   0x410968
  4042ed:	jmp    0x403e77
  4042f2:	mov    rcx,QWORD PTR [rbp+0x30]
  4042f6:	call   0x4032d0
  4042fb:	jmp    0x403fc0
  404300:	mov    r15,QWORD PTR [rbp+0x30]
  404304:	mov    ecx,0x2
  404309:	mov    rbp,QWORD PTR [rbp+0x38]
  40430d:	call   0x403250
  404312:	mov    rcx,QWORD PTR [rsp+0x40]
  404317:	lea    rdx,[rip+0xfbd2]        # 0x413ef0
  40431e:	mov    r8,rax
  404321:	mov    QWORD PTR [rsp+0x30],r15
  404326:	mov    QWORD PTR [rsp+0x28],rbp
  40432b:	mov    r9,rbp
  40432e:	mov    QWORD PTR [rsp+0x20],rbp
  404333:	call   0x410968
  404338:	jmp    0x4041f5
  40433d:	mov    r9d,0x1
  404343:	jmp    0x404035
  404348:	lea    rax,[rsp+0x50]
  40434d:	mov    QWORD PTR [rsp+0x40],rax
  404352:	jmp    0x40396f
  404357:	nop    WORD PTR [rax+rax*1+0x0]
  404360:	sub    rsp,0x28
  404364:	mov    rax,QWORD PTR [rip+0x14515]        # 0x418880
  40436b:	mov    ecx,DWORD PTR [rax]
  40436d:	test   ecx,ecx
  40436f:	jne    0x4043d2
  404371:	mov    rax,QWORD PTR [rip+0x143f8]        # 0x418770
  404378:	mov    edx,DWORD PTR [rax]
  40437a:	test   edx,edx
  40437c:	jne    0x4043a0
  40437e:	mov    rax,QWORD PTR [rip+0x1444b]        # 0x4187d0
  404385:	mov    eax,DWORD PTR [rax]
  404387:	test   eax,eax
  404389:	jne    0x404390
  40438b:	add    rsp,0x28
  40438f:	ret    
  404390:	add    rsp,0x28
  404394:	jmp    0x4037a0
  404399:	nop    DWORD PTR [rax+0x0]
  4043a0:	lea    rcx,[rip+0xfc25]        # 0x413fcc
  4043a7:	call   0x403070
  4043ac:	lea    rcx,[rip+0xfc35]        # 0x413fe8
  4043b3:	call   0x403070
  4043b8:	lea    rcx,[rip+0xfc4f]        # 0x41400e
  4043bf:	call   0x403070
  4043c4:	lea    rcx,[rip+0xfc50]        # 0x41401b
  4043cb:	call   0x403070
  4043d0:	jmp    0x40437e
  4043d2:	mov    rax,QWORD PTR [rip+0x14487]        # 0x418860
  4043d9:	mov    ecx,DWORD PTR [rax]
  4043db:	call   0x40a598
  4043e0:	test   eax,eax
  4043e2:	je     0x404371
  4043e4:	mov    ecx,eax
  4043e6:	call   0x403030
  4043eb:	jmp    0x404371
  4043ed:	nop    DWORD PTR [rax]
  4043f0:	sub    rsp,0x28
  4043f4:	lea    rcx,[rip+0xfc22]        # 0x41401d
  4043fb:	call   0x4030d0
  404400:	mov    ecx,0x3
  404405:	call   0x410a18
  40440a:	nop
  40440b:	nop    DWORD PTR [rax+rax*1+0x0]
  404410:	push   r15
  404412:	push   r14
  404414:	push   r13
  404416:	push   r12
  404418:	push   rbp
  404419:	push   rdi
  40441a:	push   rsi
  40441b:	push   rbx
  40441c:	sub    rsp,0x48
  404420:	mov    rbx,rcx
  404423:	lea    rcx,[rdx+0x1]
  404427:	mov    rdi,rdx
  40442a:	call   0x410998
  40442f:	test   rax,rax
  404432:	mov    rbp,rax
  404435:	je     0x404701
  40443b:	xor    r8d,r8d
  40443e:	test   rdi,rdi
  404441:	je     0x404456
  404443:	movzx  edx,BYTE PTR [rbx+r8*1]
  404448:	mov    BYTE PTR [rbp+r8*1+0x0],dl
  40444d:	add    r8,0x1
  404451:	cmp    r8,rdi
  404454:	jne    0x404443
  404456:	mov    BYTE PTR [rbp+rdi*1+0x0],0x0
  40445b:	movzx  r12d,BYTE PTR [rbp+0x0]
  404460:	test   r12b,r12b
  404463:	jne    0x4044b0
  404465:	mov    ecx,0x8
  40446a:	call   0x410998
  40446f:	test   rax,rax
  404472:	mov    rbx,rax
  404475:	je     0x404701
  40447b:	mov    QWORD PTR [rip+0x1781e],rax        # 0x41bca0
  404482:	movabs rax,0x29302872616863
  40448c:	mov    rcx,rbp
  40448f:	mov    QWORD PTR [rbx],rax
  404492:	call   0x4109d8
  404497:	mov    rax,rbx
  40449a:	add    rsp,0x48
  40449e:	pop    rbx
  40449f:	pop    rsi
  4044a0:	pop    rdi
  4044a1:	pop    rbp
  4044a2:	pop    r12
  4044a4:	pop    r13
  4044a6:	pop    r14
  4044a8:	pop    r15
  4044aa:	ret    
  4044ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4044b0:	lea    rcx,[rdi+rdi*2]
  4044b4:	shl    rcx,0x2
  4044b8:	call   0x410998
  4044bd:	test   rax,rax
  4044c0:	mov    rsi,rax
  4044c3:	je     0x404701
  4044c9:	mov    QWORD PTR [rip+0x177d0],rax        # 0x41bca0
  4044d0:	mov    BYTE PTR [rax],0x0
  4044d3:	movzx  ebx,r12b
  4044d7:	mov    rax,QWORD PTR [rip+0x1b196]        # 0x41f674
  4044de:	mov    ecx,ebx
  4044e0:	mov    QWORD PTR [rsp+0x20],rax
  4044e5:	call   rax
  4044e7:	test   eax,eax
  4044e9:	je     0x404540
  4044eb:	cmp    r12b,0x27
  4044ef:	mov    BYTE PTR [rsi],0x27
  4044f2:	je     0x4046f0
  4044f8:	cmp    r12b,0x5c
  4044fc:	je     0x404694
  404502:	lea    rbx,[rsi+0x2]
  404506:	mov    BYTE PTR [rsi+0x1],r12b
  40450a:	cmp    rdi,0x1
  40450e:	mov    BYTE PTR [rbx],0x0
  404511:	lea    rsi,[rbp+0x1]
  404515:	mov    r15d,0x1
  40451b:	ja     0x4045aa
  404521:	mov    BYTE PTR [rbx],0x27
  404524:	add    rbx,0x1
  404528:	mov    BYTE PTR [rbx],0x0
  40452b:	mov    rcx,rbp
  40452e:	call   0x4109d8
  404533:	mov    rax,QWORD PTR [rip+0x17766]        # 0x41bca0
  40453a:	jmp    0x40449a
  40453f:	nop
  404540:	lea    r12,[rsp+0x30]
  404545:	lea    rdx,[rip+0xfae0]        # 0x41402c
  40454c:	mov    r8d,ebx
  40454f:	mov    rcx,r12
  404552:	mov    rbx,r12
  404555:	call   0x410968
  40455a:	mov    rdx,r12
  40455d:	mov    rcx,rsi
  404560:	call   0x410958
  404565:	mov    edx,DWORD PTR [rbx]
  404567:	add    rbx,0x4
  40456b:	lea    eax,[rdx-0x1010101]
  404571:	not    edx
  404573:	and    eax,edx
  404575:	and    eax,0x80808080
  40457a:	je     0x404565
  40457c:	mov    edx,eax
  40457e:	shr    edx,0x10
  404581:	test   eax,0x8080
  404586:	cmove  eax,edx
  404589:	lea    rdx,[rbx+0x2]
  40458d:	cmove  rbx,rdx
  404591:	add    al,al
  404593:	sbb    rbx,0x3
  404597:	sub    rbx,r12
  40459a:	add    rbx,rsi
  40459d:	cmp    rdi,0x1
  4045a1:	lea    rsi,[rbp+0x1]
  4045a5:	jbe    0x404528
  4045a7:	xor    r15d,r15d
  4045aa:	mov    r13d,0x1
  4045b0:	lea    r12,[rsp+0x30]
  4045b5:	sub    r13,rsi
  4045b8:	mov    QWORD PTR [rsp+0x28],r13
  4045bd:	jmp    0x404606
  4045bf:	nop
  4045c0:	test   r15d,r15d
  4045c3:	je     0x4046c1
  4045c9:	cmp    r14b,0x27
  4045cd:	je     0x4046b1
  4045d3:	cmp    r14b,0x5c
  4045d7:	jne    0x4046a5
  4045dd:	mov    BYTE PTR [rbx],0x5c
  4045e0:	mov    BYTE PTR [rbx+0x1],0x5c
  4045e4:	add    rbx,0x2
  4045e8:	mov    BYTE PTR [rbx],0x0
  4045eb:	mov    r15d,0x1
  4045f1:	mov    rax,QWORD PTR [rsp+0x28]
  4045f6:	add    rsi,0x1
  4045fa:	add    rax,rsi
  4045fd:	cmp    rdi,rax
  404600:	jbe    0x4046e0
  404606:	movzx  r13d,BYTE PTR [rsi]
  40460a:	mov    rax,QWORD PTR [rsp+0x20]
  40460f:	mov    ecx,r13d
  404612:	mov    r14d,r13d
  404615:	call   rax
  404617:	test   eax,eax
  404619:	jne    0x4045c0
  40461b:	test   r15d,r15d
  40461e:	je     0x40462b
  404620:	mov    BYTE PTR [rbx],0x27
  404623:	mov    BYTE PTR [rbx+0x1],0x0
  404627:	add    rbx,0x1
  40462b:	lea    rdx,[rip+0xfa03]        # 0x414035
  404632:	mov    r8d,r13d
  404635:	mov    rcx,r12
  404638:	call   0x410968
  40463d:	mov    rdx,r12
  404640:	mov    rcx,rbx
  404643:	call   0x410958
  404648:	mov    rax,r12
  40464b:	mov    edx,DWORD PTR [rax]
  40464d:	add    rax,0x4
  404651:	lea    r8d,[rdx-0x1010101]
  404658:	not    edx
  40465a:	and    r8d,edx
  40465d:	and    r8d,0x80808080
  404664:	je     0x40464b
  404666:	mov    edx,r8d
  404669:	shr    edx,0x10
  40466c:	test   r8d,0x8080
  404673:	cmove  r8d,edx
  404677:	lea    rdx,[rax+0x2]
  40467b:	cmove  rax,rdx
  40467f:	add    r8b,r8b
  404682:	sbb    rax,0x3
  404686:	xor    r15d,r15d
  404689:	sub    rax,r12
  40468c:	add    rbx,rax
  40468f:	jmp    0x4045f1
  404694:	mov    BYTE PTR [rsi+0x1],0x5c
  404698:	lea    rbx,[rsi+0x3]
  40469c:	mov    BYTE PTR [rsi+0x2],0x5c
  4046a0:	jmp    0x40450a
  4046a5:	mov    BYTE PTR [rbx],r14b
  4046a8:	add    rbx,0x1
  4046ac:	jmp    0x4045e8
  4046b1:	mov    BYTE PTR [rbx],0x27
  4046b4:	mov    BYTE PTR [rbx+0x1],0x27
  4046b8:	add    rbx,0x2
  4046bc:	jmp    0x4045e8
  4046c1:	mov    rcx,rbx
  4046c4:	add    rbx,0x3
  4046c8:	call   0x410938
  4046cd:	mov    DWORD PTR [rbx+rax*1-0x3],0x272f2f
  4046d5:	jmp    0x4045c9
  4046da:	nop    WORD PTR [rax+rax*1+0x0]
  4046e0:	test   r15d,r15d
  4046e3:	je     0x404528
  4046e9:	jmp    0x404521
  4046ee:	xchg   ax,ax
  4046f0:	mov    BYTE PTR [rsi+0x1],0x27
  4046f4:	lea    rbx,[rsi+0x3]
  4046f8:	mov    BYTE PTR [rsi+0x2],0x27
  4046fc:	jmp    0x40450a
  404701:	call   0x4043f0
  404706:	nop
  404707:	nop    WORD PTR [rax+rax*1+0x0]
  404710:	push   r13
  404712:	push   r12
  404714:	push   rbp
  404715:	push   rdi
  404716:	push   rsi
  404717:	push   rbx
  404718:	sub    rsp,0x28
  40471c:	mov    rbx,rcx
  40471f:	lea    eax,[rdx*4+0x3]
  404726:	lea    rcx,[rdx*4+0x3]
  40472e:	mov    rsi,rdx
  404731:	cmp    rcx,rax
  404734:	jne    0x404998
  40473a:	call   0x410998
  40473f:	test   rax,rax
  404742:	mov    rdi,rax
  404745:	je     0x40496b
  40474b:	cmp    rsi,0x1
  40474f:	mov    QWORD PTR [rip+0x17552],rax        # 0x41bca8
  404756:	je     0x404950
  40475c:	lea    rcx,[rsi+0x1]
  404760:	call   0x410998
  404765:	test   rax,rax
  404768:	mov    rbp,rax
  40476b:	je     0x40496b
  404771:	test   rsi,rsi
  404774:	je     0x40498c
  40477a:	xor    r8d,r8d
  40477d:	nop    DWORD PTR [rax]
  404780:	movzx  r9d,BYTE PTR [rbx+r8*1]
  404785:	mov    BYTE PTR [rbp+r8*1+0x0],r9b
  40478a:	add    r8,0x1
  40478e:	cmp    rsi,r8
  404791:	ja     0x404780
  404793:	lea    r12,[rbp+rsi*1+0x0]
  404798:	test   rsi,rsi
  40479b:	lea    rbx,[rdi+0x1]
  40479f:	mov    BYTE PTR [rdi],0x22
  4047a2:	mov    BYTE PTR [r12],0x0
  4047a7:	je     0x404847
  4047ad:	mov    rdi,rbp
  4047b0:	mov    r13,QWORD PTR [rip+0x1aebd]        # 0x41f674
  4047b7:	jmp    0x4047f9
  4047b9:	nop    DWORD PTR [rax+0x0]
  4047c0:	cmp    sil,0x8
  4047c4:	je     0x404900
  4047ca:	jle    0x404870
  4047d0:	cmp    sil,0x9
  4047d4:	je     0x4048f0
  4047da:	cmp    sil,0xa
  4047de:	jne    0x4048a0
  4047e4:	mov    BYTE PTR [rbx],0x5c
  4047e7:	mov    BYTE PTR [rbx+0x1],0x6e
  4047eb:	add    rbx,0x2
  4047ef:	nop
  4047f0:	add    rdi,0x1
  4047f4:	cmp    r12,rdi
  4047f7:	je     0x404840
  4047f9:	movzx  esi,BYTE PTR [rdi]
  4047fc:	cmp    sil,0xb
  404800:	je     0x404890
  404806:	jle    0x4047c0
  404808:	cmp    sil,0xd
  40480c:	je     0x404930
  404812:	jl     0x404920
  404818:	cmp    sil,0x22
  40481c:	je     0x404910
  404822:	cmp    sil,0x5c
  404826:	jne    0x4048a0
  404828:	add    rdi,0x1
  40482c:	mov    BYTE PTR [rbx],0x5c
  40482f:	mov    BYTE PTR [rbx+0x1],0x5c
  404833:	add    rbx,0x2
  404837:	cmp    r12,rdi
  40483a:	jne    0x4047f9
  40483c:	nop    DWORD PTR [rax+0x0]
  404840:	mov    rdi,QWORD PTR [rip+0x17461]        # 0x41bca8
  404847:	mov    BYTE PTR [rbx],0x22
  40484a:	mov    BYTE PTR [rbx+0x1],0x0
  40484e:	mov    rcx,rbp
  404851:	call   0x4109d8
  404856:	mov    rax,rdi
  404859:	add    rsp,0x28
  40485d:	pop    rbx
  40485e:	pop    rsi
  40485f:	pop    rdi
  404860:	pop    rbp
  404861:	pop    r12
  404863:	pop    r13
  404865:	ret    
  404866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404870:	test   sil,sil
  404873:	jne    0x4048a0
  404875:	mov    BYTE PTR [rbx],0x5c
  404878:	mov    BYTE PTR [rbx+0x1],0x30
  40487c:	add    rbx,0x4
  404880:	mov    BYTE PTR [rbx-0x2],0x30
  404884:	mov    BYTE PTR [rbx-0x1],0x30
  404888:	jmp    0x4047f0
  40488d:	nop    DWORD PTR [rax]
  404890:	mov    BYTE PTR [rbx],0x5c
  404893:	mov    BYTE PTR [rbx+0x1],0x76
  404897:	add    rbx,0x2
  40489b:	jmp    0x4047f0
  4048a0:	movzx  ecx,sil
  4048a4:	call   r13
  4048a7:	test   eax,eax
  4048a9:	jne    0x404940
  4048af:	mov    edx,esi
  4048b1:	lea    rax,[rip+0x10691]        # 0x414f49
  4048b8:	mov    BYTE PTR [rbx],0x5c
  4048bb:	shr    dl,0x6
  4048be:	add    rbx,0x4
  4048c2:	and    edx,0x3
  4048c5:	movzx  edx,BYTE PTR [rax+rdx*1]
  4048c9:	mov    BYTE PTR [rbx-0x3],dl
  4048cc:	mov    rdx,rsi
  4048cf:	and    esi,0x7
  4048d2:	shr    rdx,0x3
  4048d6:	and    edx,0x7
  4048d9:	movzx  edx,BYTE PTR [rax+rdx*1]
  4048dd:	movzx  eax,BYTE PTR [rax+rsi*1]
  4048e1:	mov    BYTE PTR [rbx-0x2],dl
  4048e4:	mov    BYTE PTR [rbx-0x1],al
  4048e7:	jmp    0x4047f0
  4048ec:	nop    DWORD PTR [rax+0x0]
  4048f0:	mov    BYTE PTR [rbx],0x5c
  4048f3:	mov    BYTE PTR [rbx+0x1],0x74
  4048f7:	add    rbx,0x2
  4048fb:	jmp    0x4047f0
  404900:	mov    BYTE PTR [rbx],0x5c
  404903:	mov    BYTE PTR [rbx+0x1],0x62
  404907:	add    rbx,0x2
  40490b:	jmp    0x4047f0
  404910:	mov    BYTE PTR [rbx],0x5c
  404913:	mov    BYTE PTR [rbx+0x1],0x22
  404917:	add    rbx,0x2
  40491b:	jmp    0x4047f0
  404920:	mov    BYTE PTR [rbx],0x5c
  404923:	mov    BYTE PTR [rbx+0x1],0x66
  404927:	add    rbx,0x2
  40492b:	jmp    0x4047f0
  404930:	mov    BYTE PTR [rbx],0x5c
  404933:	mov    BYTE PTR [rbx+0x1],0x72
  404937:	add    rbx,0x2
  40493b:	jmp    0x4047f0
  404940:	mov    BYTE PTR [rbx],sil
  404943:	add    rbx,0x1
  404947:	jmp    0x4047f0
  40494c:	nop    DWORD PTR [rax+0x0]
  404950:	cmp    BYTE PTR [rbx],0x0
  404953:	je     0x404970
  404955:	mov    ecx,0x2
  40495a:	call   0x410998
  40495f:	test   rax,rax
  404962:	mov    rbp,rax
  404965:	jne    0x40477a
  40496b:	call   0x4043f0
  404970:	mov    eax,0x2222
  404975:	mov    BYTE PTR [rdi+0x2],0x0
  404979:	mov    WORD PTR [rdi],ax
  40497c:	mov    rax,rdi
  40497f:	add    rsp,0x28
  404983:	pop    rbx
  404984:	pop    rsi
  404985:	pop    rdi
  404986:	pop    rbp
  404987:	pop    r12
  404989:	pop    r13
  40498b:	ret    
  40498c:	lea    rbx,[rdi+0x1]
  404990:	mov    BYTE PTR [rdi],0x22
  404993:	jmp    0x404847
  404998:	lea    rcx,[rip+0xf6a1]        # 0x414040
  40499f:	call   0x4030d0
  4049a4:	mov    ecx,0x9
  4049a9:	call   0x410a18
  4049ae:	nop
  4049af:	nop
  4049b0:	push   r15
  4049b2:	push   r14
  4049b4:	push   r13
  4049b6:	push   r12
  4049b8:	push   rbp
  4049b9:	push   rdi
  4049ba:	push   rsi
  4049bb:	push   rbx
  4049bc:	sub    rsp,0x5c8
  4049c3:	mov    QWORD PTR [rsp+0x610],rcx
  4049cb:	lea    rcx,[rip+0xf69a]        # 0x41406c
  4049d2:	lea    rbx,[rsp+0x90]
  4049da:	call   0x403070
  4049df:	lea    rcx,[rip+0xf699]        # 0x41407f
  4049e6:	call   0x403070
  4049eb:	lea    rcx,[rip+0xf6a1]        # 0x414093
  4049f2:	call   0x403070
  4049f7:	lea    rcx,[rip+0xf663]        # 0x414061
  4049fe:	call   0x403070
  404a03:	lea    rcx,[rip+0xf69d]        # 0x4140a7
  404a0a:	call   0x403070
  404a0f:	lea    rcx,[rip+0xf69a]        # 0x4140b0
  404a16:	call   0x403070
  404a1b:	lea    rcx,[rip+0xf6cc]        # 0x4140ee
  404a22:	call   0x403070
  404a27:	lea    rcx,[rip+0xf6e2]        # 0x414110
  404a2e:	call   0x403070
  404a33:	lea    rcx,[rip+0xf728]        # 0x414162
  404a3a:	call   0x403070
  404a3f:	lea    rcx,[rip+0xf72d]        # 0x414173
  404a46:	call   0x403070
  404a4b:	lea    rcx,[rip+0xf5c9]        # 0x41401b
  404a52:	call   0x403070
  404a57:	lea    rcx,[rip+0xf603]        # 0x414061
  404a5e:	call   0x403070
  404a63:	lea    rcx,[rip+0xeeca]        # 0x413934
  404a6a:	call   0x403070
  404a6f:	mov    r8,QWORD PTR [rsp+0x610]
  404a77:	lea    rdx,[rip+0xf6fb]        # 0x414179
  404a7e:	mov    rcx,rbx
  404a81:	call   0x410968
  404a86:	mov    rcx,rbx
  404a89:	call   0x403070
  404a8e:	lea    rcx,[rip+0xf5cc]        # 0x414061
  404a95:	call   0x403070
  404a9a:	lea    rcx,[rip+0xf6f7]        # 0x414198
  404aa1:	call   0x403070
  404aa6:	lea    rcx,[rip+0xf713]        # 0x4141c0
  404aad:	call   0x403070
  404ab2:	mov    rbp,QWORD PTR [rip+0x13db7]        # 0x418870
  404ab9:	mov    eax,DWORD PTR [rbp+0x0]
  404abc:	test   eax,eax
  404abe:	jle    0x404ba0
  404ac4:	lea    rcx,[rip+0xf596]        # 0x414061
  404acb:	call   0x403070
  404ad0:	lea    rcx,[rip+0xf709]        # 0x4141e0
  404ad7:	call   0x403070
  404adc:	mov    eax,DWORD PTR [rbp+0x0]
  404adf:	test   eax,eax
  404ae1:	jle    0x404b1b
  404ae3:	mov    r14,QWORD PTR [rip+0x13cd6]        # 0x4187c0
  404aea:	xor    edi,edi
  404aec:	xor    esi,esi
  404aee:	xchg   ax,ax
  404af0:	mov    rax,QWORD PTR [r14]
  404af3:	lea    rdx,[rip+0xf718]        # 0x414212
  404afa:	mov    rcx,rbx
  404afd:	add    esi,0x1
  404b00:	mov    r8,QWORD PTR [rax+rdi*1+0x10]
  404b05:	add    rdi,0x18
  404b09:	call   0x410968
  404b0e:	mov    rcx,rbx
  404b11:	call   0x403070
  404b16:	cmp    DWORD PTR [rbp+0x0],esi
  404b19:	jg     0x404af0
  404b1b:	lea    rcx,[rip+0xf53f]        # 0x414061
  404b22:	call   0x403070
  404b27:	lea    rcx,[rip+0xf6c9]        # 0x4141f7
  404b2e:	call   0x403070
  404b33:	mov    eax,DWORD PTR [rbp+0x0]
  404b36:	test   eax,eax
  404b38:	jle    0x404ba0
  404b3a:	xor    edi,edi
  404b3c:	xor    esi,esi
  404b3e:	mov    r14,QWORD PTR [rip+0x13c7b]        # 0x4187c0
  404b45:	jmp    0x404b73
  404b47:	nop    WORD PTR [rax+rax*1+0x0]
  404b50:	lea    rdx,[rip+0xf6d1]        # 0x414228
  404b57:	mov    rcx,rbx
  404b5a:	call   0x410968
  404b5f:	mov    rcx,rbx
  404b62:	add    esi,0x1
  404b65:	add    rdi,0x18
  404b69:	call   0x403070
  404b6e:	cmp    DWORD PTR [rbp+0x0],esi
  404b71:	jle    0x404ba0
  404b73:	mov    rax,rdi
  404b76:	add    rax,QWORD PTR [r14]
  404b79:	mov    r9,QWORD PTR [rax]
  404b7c:	mov    r8,QWORD PTR [rax+0x10]
  404b80:	test   r9,r9
  404b83:	je     0x404b50
  404b85:	lea    rdx,[rip+0xf6bd]        # 0x414249
  404b8c:	mov    rcx,rbx
  404b8f:	call   0x410968
  404b94:	jmp    0x404b5f
  404b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ba0:	mov    r12,QWORD PTR [rip+0x13d09]        # 0x4188b0
  404ba7:	mov    edx,DWORD PTR [r12]
  404bab:	test   edx,edx
  404bad:	jle    0x404cfa
  404bb3:	mov    rsi,QWORD PTR [rip+0x13db6]        # 0x418970
  404bba:	sub    edx,0x1
  404bbd:	xor    edi,edi
  404bbf:	shl    rdx,0x6
  404bc3:	mov    rcx,QWORD PTR [rsi]
  404bc6:	lea    rax,[rcx+0xc]
  404bca:	lea    rcx,[rcx+rdx*1+0x4c]
  404bcf:	nop
  404bd0:	mov    edx,DWORD PTR [rax]
  404bd2:	cmp    edi,edx
  404bd4:	cmovl  edi,edx
  404bd7:	add    rax,0x40
  404bdb:	cmp    rax,rcx
  404bde:	jne    0x404bd0
  404be0:	lea    rcx,[rip+0xf47a]        # 0x414061
  404be7:	xor    r15d,r15d
  404bea:	xor    r14d,r14d
  404bed:	call   0x403070
  404bf2:	lea    rcx,[rip+0xfabc]        # 0x4146b5
  404bf9:	call   0x403070
  404bfe:	mov    eax,DWORD PTR [r12]
  404c02:	test   eax,eax
  404c04:	jle    0x404c3d
  404c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c10:	mov    rax,QWORD PTR [rsi]
  404c13:	lea    rdx,[rip+0xf647]        # 0x414261
  404c1a:	mov    rcx,rbx
  404c1d:	add    r14d,0x1
  404c21:	mov    r8,QWORD PTR [rax+r15*1+0x38]
  404c26:	add    r15,0x40
  404c2a:	call   0x410968
  404c2f:	mov    rcx,rbx
  404c32:	call   0x403070
  404c37:	cmp    DWORD PTR [r12],r14d
  404c3b:	jg     0x404c10
  404c3d:	lea    rcx,[rip+0xf41d]        # 0x414061
  404c44:	xor    r15d,r15d
  404c47:	xor    r14d,r14d
  404c4a:	call   0x403070
  404c4f:	lea    rcx,[rip+0xf61a]        # 0x414270
  404c56:	call   0x403070
  404c5b:	mov    eax,DWORD PTR [r12]
  404c5f:	test   eax,eax
  404c61:	jle    0x404c96
  404c63:	mov    rax,r15
  404c66:	add    rax,QWORD PTR [rsi]
  404c69:	lea    rdx,[rip+0xf637]        # 0x4142a7
  404c70:	mov    rcx,rbx
  404c73:	add    r14d,0x1
  404c77:	add    r15,0x40
  404c7b:	mov    r9d,DWORD PTR [rax+0xc]
  404c7f:	mov    r8,QWORD PTR [rax+0x38]
  404c83:	call   0x410968
  404c88:	mov    rcx,rbx
  404c8b:	call   0x403070
  404c90:	cmp    DWORD PTR [r12],r14d
  404c94:	jg     0x404c63
  404c96:	test   edi,edi
  404c98:	je     0x404cfa
  404c9a:	lea    rcx,[rip+0xf3c0]        # 0x414061
  404ca1:	call   0x403070
  404ca6:	lea    rcx,[rip+0xf60f]        # 0x4142bc
  404cad:	call   0x403070
  404cb2:	mov    eax,DWORD PTR [r12]
  404cb6:	test   eax,eax
  404cb8:	jle    0x404cfa
  404cba:	xor    r14d,r14d
  404cbd:	xor    edi,edi
  404cbf:	nop
  404cc0:	mov    rax,r14
  404cc3:	add    rax,QWORD PTR [rsi]
  404cc6:	mov    r15d,DWORD PTR [rax+0xc]
  404cca:	test   r15d,r15d
  404ccd:	jle    0x404ced
  404ccf:	mov    r8,QWORD PTR [rax+0x38]
  404cd3:	lea    rdx,[rip+0xf5fb]        # 0x4142d5
  404cda:	mov    rcx,rbx
  404cdd:	mov    r9,r8
  404ce0:	call   0x410968
  404ce5:	mov    rcx,rbx
  404ce8:	call   0x403070
  404ced:	add    edi,0x1
  404cf0:	add    r14,0x40
  404cf4:	cmp    DWORD PTR [r12],edi
  404cf8:	jg     0x404cc0
  404cfa:	mov    rax,QWORD PTR [rip+0x13b3f]        # 0x418840
  404d01:	mov    ecx,DWORD PTR [rax]
  404d03:	test   ecx,ecx
  404d05:	jle    0x404d40
  404d07:	mov    rdi,QWORD PTR [rip+0x13a52]        # 0x418760
  404d0e:	mov    rdx,QWORD PTR [rdi]
  404d11:	cmp    DWORD PTR [rdx+0x10],0x2
  404d15:	jne    0x404da0
  404d1b:	sub    ecx,0x1
  404d1e:	lea    rax,[rdx+0x40]
  404d22:	lea    rcx,[rcx+rcx*2]
  404d26:	shl    rcx,0x4
  404d2a:	lea    rdx,[rdx+rcx*1+0x40]
  404d2f:	jmp    0x404d3b
  404d31:	add    rax,0x30
  404d35:	cmp    DWORD PTR [rax-0x30],0x2
  404d39:	jne    0x404da0
  404d3b:	cmp    rax,rdx
  404d3e:	jne    0x404d31
  404d40:	lea    rcx,[rip+0xf31a]        # 0x414061
  404d47:	call   0x403070
  404d4c:	lea    rcx,[rip+0xf59b]        # 0x4142ee
  404d53:	call   0x403070
  404d58:	mov    rax,QWORD PTR [rip+0x13a31]        # 0x418790
  404d5f:	mov    eax,DWORD PTR [rax]
  404d61:	test   eax,eax
  404d63:	je     0x404e53
  404d69:	test   ah,0x2
  404d6c:	jne    0x405683
  404d72:	test   ah,0x1
  404d75:	jne    0x4056c0
  404d7b:	test   ah,0x10
  404d7e:	je     0x4056af
  404d84:	mov    r8,QWORD PTR [rsp+0x610]
  404d8c:	lea    rdx,[rip+0xf64d]        # 0x4143e0
  404d93:	mov    rcx,rbx
  404d96:	call   0x410968
  404d9b:	jmp    0x404e6a
  404da0:	lea    rcx,[rip+0xf2ba]        # 0x414061
  404da7:	xor    r15d,r15d
  404daa:	xor    r14d,r14d
  404dad:	call   0x403070
  404db2:	lea    rcx,[rip+0xf8e1]        # 0x41469a
  404db9:	call   0x403070
  404dbe:	mov    rax,QWORD PTR [rip+0x13a7b]        # 0x418840
  404dc5:	mov    edx,DWORD PTR [rax]
  404dc7:	test   edx,edx
  404dc9:	jle    0x404d40
  404dcf:	nop
  404dd0:	mov    rax,r15
  404dd3:	add    rax,QWORD PTR [rdi]
  404dd6:	mov    ecx,DWORD PTR [rax+0x10]
  404dd9:	cmp    ecx,0x2
  404ddc:	je     0x404e3a
  404dde:	mov    r13,QWORD PTR [rax+0x18]
  404de2:	mov    rsi,QWORD PTR [rax+0x28]
  404de6:	lea    r9,[rip+0xf26c]        # 0x414059
  404ded:	movsxd rax,DWORD PTR [rax]
  404df0:	cmp    eax,0xffffffff
  404df3:	je     0x404e07
  404df5:	mov    rdx,QWORD PTR [rip+0x13b74]        # 0x418970
  404dfc:	shl    rax,0x6
  404e00:	add    rax,QWORD PTR [rdx]
  404e03:	mov    r9,QWORD PTR [rax+0x38]
  404e07:	mov    QWORD PTR [rsp+0x58],r9
  404e0c:	call   0x403570
  404e11:	mov    r9,QWORD PTR [rsp+0x58]
  404e16:	lea    rdx,[rip+0xf4ec]        # 0x414309
  404e1d:	mov    rcx,rbx
  404e20:	mov    r8,rax
  404e23:	mov    DWORD PTR [rsp+0x28],r13d
  404e28:	mov    QWORD PTR [rsp+0x20],rsi
  404e2d:	call   0x410968
  404e32:	mov    rcx,rbx
  404e35:	call   0x403070
  404e3a:	mov    rax,QWORD PTR [rip+0x139ff]        # 0x418840
  404e41:	add    r14d,0x1
  404e45:	add    r15,0x30
  404e49:	cmp    DWORD PTR [rax],r14d
  404e4c:	jg     0x404dd0
  404e4e:	jmp    0x404d40
  404e53:	mov    r8,QWORD PTR [rsp+0x610]
  404e5b:	lea    rdx,[rip+0xf4be]        # 0x414320
  404e62:	mov    rcx,rbx
  404e65:	call   0x410968
  404e6a:	mov    rcx,rbx
  404e6d:	call   0x403070
  404e72:	lea    rcx,[rip+0xf16f]        # 0x413fe8
  404e79:	call   0x403070
  404e7e:	mov    r13d,DWORD PTR [rbp+0x0]
  404e82:	test   r13d,r13d
  404e85:	jle    0x404ef3
  404e87:	lea    rcx,[rip+0xf1d3]        # 0x414061
  404e8e:	call   0x403070
  404e93:	lea    rcx,[rip+0xf596]        # 0x414430
  404e9a:	call   0x403070
  404e9f:	mov    edi,DWORD PTR [rbp+0x0]
  404ea2:	test   edi,edi
  404ea4:	jle    0x404ef3
  404ea6:	mov    r14,QWORD PTR [rip+0x13913]        # 0x4187c0
  404ead:	xor    edi,edi
  404eaf:	xor    esi,esi
  404eb1:	mov    rax,rdi
  404eb4:	add    rax,QWORD PTR [r14]
  404eb7:	lea    rdx,[rip+0xf592]        # 0x414450
  404ebe:	mov    rcx,rbx
  404ec1:	add    esi,0x1
  404ec4:	add    rdi,0x18
  404ec8:	mov    r9,QWORD PTR [rax+0x10]
  404ecc:	mov    r8,QWORD PTR [rax+0x8]
  404ed0:	mov    QWORD PTR [rsp+0x20],r9
  404ed5:	call   0x410968
  404eda:	mov    rcx,rbx
  404edd:	call   0x403070
  404ee2:	lea    rcx,[rip+0xf0ff]        # 0x413fe8
  404ee9:	call   0x403070
  404eee:	cmp    DWORD PTR [rbp+0x0],esi
  404ef1:	jg     0x404eb1
  404ef3:	mov    ebp,DWORD PTR [r12]
  404ef7:	test   ebp,ebp
  404ef9:	jle    0x405018
  404eff:	lea    rcx,[rip+0xf15b]        # 0x414061
  404f06:	call   0x403070
  404f0b:	lea    rcx,[rip+0xf571]        # 0x414483
  404f12:	call   0x403070
  404f17:	mov    r11d,DWORD PTR [r12]
  404f1b:	test   r11d,r11d
  404f1e:	jle    0x405018
  404f24:	mov    rsi,QWORD PTR [rip+0x13a45]        # 0x418970
  404f2b:	mov    rbp,QWORD PTR [rip+0x1388e]        # 0x4187c0
  404f32:	xor    edi,edi
  404f34:	xor    r13d,r13d
  404f37:	nop    WORD PTR [rax+rax*1+0x0]
  404f40:	lea    rcx,[rip+0xf11a]        # 0x414061
  404f47:	call   0x403070
  404f4c:	mov    rax,rdi
  404f4f:	add    rax,QWORD PTR [rsi]
  404f52:	mov    r10d,DWORD PTR [rax+0xc]
  404f56:	test   r10d,r10d
  404f59:	jle    0x4054e0
  404f5f:	xor    r15d,r15d
  404f62:	xor    r14d,r14d
  404f65:	mov    r8,QWORD PTR [rax+0x38]
  404f69:	mov    rax,QWORD PTR [rax+0x10]
  404f6d:	lea    rdx,[rip+0xf529]        # 0x41449d
  404f74:	mov    r9,QWORD PTR [rbp+0x0]
  404f78:	mov    rcx,rbx
  404f7b:	movsxd rax,DWORD PTR [rax+r15*1]
  404f7f:	add    r15,0x4
  404f83:	lea    rax,[rax+rax*2]
  404f87:	lea    rax,[r9+rax*8]
  404f8b:	mov    r9d,r14d
  404f8e:	add    r14d,0x1
  404f92:	mov    rax,QWORD PTR [rax+0x10]
  404f96:	mov    QWORD PTR [rsp+0x20],rax
  404f9b:	call   0x410968
  404fa0:	mov    rcx,rbx
  404fa3:	call   0x403070
  404fa8:	mov    rax,rdi
  404fab:	add    rax,QWORD PTR [rsi]
  404fae:	mov    edx,DWORD PTR [rax+0xc]
  404fb1:	cmp    edx,r14d
  404fb4:	jg     0x404f65
  404fb6:	test   edx,edx
  404fb8:	jle    0x4054e0
  404fbe:	mov    ecx,DWORD PTR [rax+0x8]
  404fc1:	mov    r14,QWORD PTR [rax+0x38]
  404fc5:	call   0x403390
  404fca:	mov    r9,rax
  404fcd:	mov    rax,QWORD PTR [rsi]
  404fd0:	lea    rdx,[rip+0xf4e1]        # 0x4144b8
  404fd7:	mov    rcx,rbx
  404fda:	mov    r8,QWORD PTR [rax+rdi*1]
  404fde:	mov    QWORD PTR [rsp+0x30],r14
  404fe3:	mov    QWORD PTR [rsp+0x28],r14
  404fe8:	mov    QWORD PTR [rsp+0x20],r14
  404fed:	call   0x410968
  404ff2:	mov    rcx,rbx
  404ff5:	add    r13d,0x1
  404ff9:	add    rdi,0x40
  404ffd:	call   0x403070
  405002:	lea    rcx,[rip+0xefdf]        # 0x413fe8
  405009:	call   0x403070
  40500e:	cmp    DWORD PTR [r12],r13d
  405012:	jg     0x404f40
  405018:	mov    rax,QWORD PTR [rip+0x13821]        # 0x418840
  40501f:	mov    esi,DWORD PTR [rax]
  405021:	test   esi,esi
  405023:	jle    0x405434
  405029:	lea    rcx,[rip+0xf031]        # 0x414061
  405030:	call   0x403070
  405035:	lea    rcx,[rip+0xf4f6]        # 0x414532
  40503c:	call   0x403070
  405041:	mov    rax,QWORD PTR [rip+0x137f8]        # 0x418840
  405048:	mov    ecx,DWORD PTR [rax]
  40504a:	test   ecx,ecx
  40504c:	jle    0x405434
  405052:	mov    rax,QWORD PTR [rip+0x13917]        # 0x418970
  405059:	mov    rdi,QWORD PTR [rip+0x13700]        # 0x418760
  405060:	lea    r12,[rip+0xf665]        # 0x4146cc
  405067:	xor    esi,esi
  405069:	mov    DWORD PTR [rsp+0x58],0x0
  405071:	mov    QWORD PTR [rsp+0x80],rax
  405079:	mov    QWORD PTR [rsp+0x88],rax
  405081:	mov    rbp,rax
  405084:	mov    rax,rsi
  405087:	add    rax,QWORD PTR [rdi]
  40508a:	mov    ecx,DWORD PTR [rax+0x10]
  40508d:	cmp    ecx,0x2
  405090:	je     0x4055f5
  405096:	cmp    QWORD PTR [rax+0x18],0x0
  40509b:	je     0x40566e
  4050a1:	xor    r13d,r13d
  4050a4:	cmp    ecx,0x6
  4050a7:	mov    r15,QWORD PTR [rax+0x20]
  4050ab:	mov    r14d,r13d
  4050ae:	ja     0x405178
  4050b4:	movsxd rax,DWORD PTR [r12+rcx*4]
  4050b8:	add    rax,r12
  4050bb:	jmp    rax
  4050bd:	nop    DWORD PTR [rax]
  4050c0:	mov    ecx,0x14
  4050c5:	call   0x410998
  4050ca:	test   rax,rax
  4050cd:	je     0x4056dc
  4050d3:	movsd  xmm0,QWORD PTR [r15+r13*8]
  4050d9:	lea    rdx,[rip+0xf4ae]        # 0x41458e
  4050e0:	mov    rcx,rax
  4050e3:	mov    QWORD PTR [rip+0x16bae],rax        # 0x41bc98
  4050ea:	movapd xmm2,xmm0
  4050ee:	movq   r8,xmm0
  4050f3:	call   0x410968
  4050f8:	mov    r15,QWORD PTR [rip+0x16b99]        # 0x41bc98
  4050ff:	nop
  405100:	mov    rax,rsi
  405103:	add    rax,QWORD PTR [rdi]
  405106:	lea    r8,[rip+0xef4c]        # 0x414059
  40510d:	movsxd rdx,DWORD PTR [rax]
  405110:	mov    r9,QWORD PTR [rax+0x28]
  405114:	cmp    edx,0xffffffff
  405117:	je     0x405125
  405119:	shl    rdx,0x6
  40511d:	add    rdx,QWORD PTR [rbp+0x0]
  405121:	mov    r8,QWORD PTR [rdx+0x38]
  405125:	lea    rdx,[rip+0xf47f]        # 0x4145ab
  40512c:	mov    rcx,rbx
  40512f:	mov    QWORD PTR [rsp+0x28],r15
  405134:	mov    DWORD PTR [rsp+0x20],r14d
  405139:	add    r13,0x1
  40513d:	call   0x410968
  405142:	mov    rcx,rbx
  405145:	call   0x403070
  40514a:	mov    rcx,r15
  40514d:	call   0x4109d8
  405152:	mov    rax,rsi
  405155:	add    rax,QWORD PTR [rdi]
  405158:	mov    rdx,QWORD PTR [rax+0x18]
  40515c:	cmp    rdx,r13
  40515f:	jbe    0x405340
  405165:	mov    ecx,DWORD PTR [rax+0x10]
  405168:	mov    r14d,r13d
  40516b:	mov    r15,QWORD PTR [rax+0x20]
  40516f:	cmp    ecx,0x6
  405172:	jbe    0x4050b4
  405178:	lea    rcx,[rip+0xf415]        # 0x414594
  40517f:	xor    r15d,r15d
  405182:	call   0x4030d0
  405187:	jmp    0x405100
  40518c:	nop    DWORD PTR [rax+0x0]
  405190:	mov    ecx,0x14
  405195:	call   0x410998
  40519a:	test   rax,rax
  40519d:	je     0x4056dc
  4051a3:	pxor   xmm0,xmm0
  4051a7:	lea    rdx,[rip+0xf3db]        # 0x414589
  4051ae:	mov    rcx,rax
  4051b1:	mov    QWORD PTR [rip+0x16ae0],rax        # 0x41bc98
  4051b8:	cvtss2sd xmm0,DWORD PTR [r15+r13*4]
  4051be:	movapd xmm2,xmm0
  4051c2:	movq   r8,xmm0
  4051c7:	call   0x410968
  4051cc:	mov    r15,QWORD PTR [rip+0x16ac5]        # 0x41bc98
  4051d3:	jmp    0x405100
  4051d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4051e0:	mov    ecx,0x14
  4051e5:	call   0x410998
  4051ea:	test   rax,rax
  4051ed:	je     0x4056dc
  4051f3:	mov    r8d,DWORD PTR [r15+r13*4]
  4051f7:	lea    rdx,[rip+0xf388]        # 0x414586
  4051fe:	mov    rcx,rax
  405201:	mov    QWORD PTR [rip+0x16a90],rax        # 0x41bc98
  405208:	call   0x410968
  40520d:	mov    r15,QWORD PTR [rip+0x16a84]        # 0x41bc98
  405214:	jmp    0x405100
  405219:	nop    DWORD PTR [rax+0x0]
  405220:	mov    ecx,0xa
  405225:	call   0x410998
  40522a:	test   rax,rax
  40522d:	je     0x4056dc
  405233:	movsx  r8d,WORD PTR [r15+r13*2]
  405238:	lea    rdx,[rip+0xf347]        # 0x414586
  40523f:	mov    rcx,rax
  405242:	mov    QWORD PTR [rip+0x16a4f],rax        # 0x41bc98
  405249:	call   0x410968
  40524e:	mov    r15,QWORD PTR [rip+0x16a43]        # 0x41bc98
  405255:	jmp    0x405100
  40525a:	nop    WORD PTR [rax+rax*1+0x0]
  405260:	mov    ecx,0x7
  405265:	call   0x410998
  40526a:	test   rax,rax
  40526d:	mov    rdx,rax
  405270:	je     0x4056dc
  405276:	mov    BYTE PTR [rdx],0x27
  405279:	movzx  r15d,BYTE PTR [r15+r13*1]
  40527e:	mov    QWORD PTR [rip+0x16a0b],rax        # 0x41bc90
  405285:	lea    rax,[rax+0x1]
  405289:	mov    QWORD PTR [rip+0x16a08],rax        # 0x41bc98
  405290:	cmp    r15b,0xb
  405294:	mov    BYTE PTR [rip+0x169f1],r15b        # 0x41bc8c
  40529b:	je     0x405530
  4052a1:	jle    0x4054b0
  4052a7:	cmp    r15b,0xd
  4052ab:	je     0x4055c2
  4052b1:	jl     0x4055b1
  4052b7:	cmp    r15b,0x27
  4052bb:	je     0x4055a0
  4052c1:	cmp    r15b,0x5c
  4052c5:	jne    0x405541
  4052cb:	lea    rax,[rdx+0x3]
  4052cf:	mov    BYTE PTR [rdx+0x1],0x5c
  4052d3:	mov    BYTE PTR [rdx+0x2],0x5c
  4052d7:	nop    WORD PTR [rax+rax*1+0x0]
  4052e0:	lea    rcx,[rax+0x1]
  4052e4:	mov    BYTE PTR [rax],0x27
  4052e7:	mov    BYTE PTR [rax+0x1],0x0
  4052eb:	mov    r15,rdx
  4052ee:	mov    QWORD PTR [rip+0x169a3],rcx        # 0x41bc98
  4052f5:	jmp    0x405100
  4052fa:	nop    WORD PTR [rax+rax*1+0x0]
  405300:	mov    ecx,0x7
  405305:	call   0x410998
  40530a:	test   rax,rax
  40530d:	je     0x4056dc
  405313:	movsx  r8d,BYTE PTR [r15+r13*1]
  405318:	lea    rdx,[rip+0xf267]        # 0x414586
  40531f:	mov    rcx,rax
  405322:	mov    QWORD PTR [rip+0x1696f],rax        # 0x41bc98
  405329:	call   0x410968
  40532e:	mov    r15,QWORD PTR [rip+0x16963]        # 0x41bc98
  405335:	jmp    0x405100
  40533a:	nop    WORD PTR [rax+rax*1+0x0]
  405340:	mov    ecx,DWORD PTR [rax+0x10]
  405343:	mov    r15d,edx
  405346:	mov    r14,QWORD PTR [rax+0x28]
  40534a:	movsxd rax,DWORD PTR [rax]
  40534d:	lea    r13,[rip+0xed05]        # 0x414059
  405354:	cmp    eax,0xffffffff
  405357:	je     0x40536c
  405359:	mov    rdx,QWORD PTR [rsp+0x88]
  405361:	shl    rax,0x6
  405365:	add    rax,QWORD PTR [rdx]
  405368:	mov    r13,QWORD PTR [rax+0x38]
  40536c:	call   0x403390
  405371:	mov    r10,rax
  405374:	mov    rax,rsi
  405377:	add    rax,QWORD PTR [rdi]
  40537a:	movsxd rdx,DWORD PTR [rax]
  40537d:	mov    r11,QWORD PTR [rax+0x8]
  405381:	cmp    edx,0xffffffff
  405384:	je     0x405514
  40538a:	mov    rcx,QWORD PTR [rsp+0x80]
  405392:	shl    rdx,0x6
  405396:	add    rdx,QWORD PTR [rcx]
  405399:	lea    rcx,[rip+0xecbd]        # 0x41405d
  4053a0:	mov    QWORD PTR [rsp+0x78],rcx
  4053a5:	mov    r9,QWORD PTR [rdx+0x38]
  4053a9:	mov    ecx,DWORD PTR [rax+0x10]
  4053ac:	mov    QWORD PTR [rsp+0x70],r11
  4053b1:	mov    QWORD PTR [rsp+0x68],r10
  4053b6:	mov    QWORD PTR [rsp+0x60],r9
  4053bb:	call   0x403570
  4053c0:	mov    r10,QWORD PTR [rsp+0x68]
  4053c5:	mov    r8,rax
  4053c8:	mov    r11,QWORD PTR [rsp+0x70]
  4053cd:	mov    rax,QWORD PTR [rsp+0x78]
  4053d2:	mov    r9,QWORD PTR [rsp+0x60]
  4053d7:	lea    rdx,[rip+0xf1e2]        # 0x4145c0
  4053de:	mov    rcx,rbx
  4053e1:	mov    QWORD PTR [rsp+0x48],r14
  4053e6:	mov    QWORD PTR [rsp+0x40],r13
  4053eb:	mov    DWORD PTR [rsp+0x38],r15d
  4053f0:	mov    QWORD PTR [rsp+0x30],r10
  4053f5:	mov    QWORD PTR [rsp+0x28],r11
  4053fa:	mov    QWORD PTR [rsp+0x20],rax
  4053ff:	call   0x410968
  405404:	mov    rcx,rbx
  405407:	call   0x403070
  40540c:	lea    rcx,[rip+0xebd5]        # 0x413fe8
  405413:	add    rsi,0x30
  405417:	call   0x403070
  40541c:	mov    rcx,QWORD PTR [rip+0x1341d]        # 0x418840
  405423:	add    DWORD PTR [rsp+0x58],0x1
  405428:	mov    eax,DWORD PTR [rsp+0x58]
  40542c:	cmp    DWORD PTR [rcx],eax
  40542e:	jg     0x405084
  405434:	mov    rax,QWORD PTR [rip+0x13465]        # 0x4188a0
  40543b:	mov    r8d,DWORD PTR [rax]
  40543e:	test   r8d,r8d
  405441:	je     0x405467
  405443:	lea    rcx,[rip+0xf1b6]        # 0x414600
  40544a:	call   0x403070
  40544f:	lea    rcx,[rip+0xf1e2]        # 0x414638
  405456:	call   0x403070
  40545b:	lea    rcx,[rip+0xeb86]        # 0x413fe8
  405462:	call   0x403070
  405467:	lea    rcx,[rip+0xebf3]        # 0x414061
  40546e:	call   0x403070
  405473:	lea    rcx,[rip+0xf1e9]        # 0x414663
  40547a:	call   0x403070
  40547f:	lea    rcx,[rip+0xf1f8]        # 0x41467e
  405486:	call   0x403070
  40548b:	lea    rcx,[rip+0xeb56]        # 0x413fe8
  405492:	call   0x403070
  405497:	nop
  405498:	add    rsp,0x5c8
  40549f:	pop    rbx
  4054a0:	pop    rsi
  4054a1:	pop    rdi
  4054a2:	pop    rbp
  4054a3:	pop    r12
  4054a5:	pop    r13
  4054a7:	pop    r14
  4054a9:	pop    r15
  4054ab:	ret    
  4054ac:	nop    DWORD PTR [rax+0x0]
  4054b0:	cmp    r15b,0x9
  4054b4:	je     0x4055e4
  4054ba:	jg     0x4055d3
  4054c0:	cmp    r15b,0x8
  4054c4:	jne    0x405541
  4054c6:	mov    BYTE PTR [rdx+0x1],0x5c
  4054ca:	lea    rax,[rdx+0x3]
  4054ce:	mov    BYTE PTR [rdx+0x2],0x62
  4054d2:	jmp    0x4052e0
  4054d7:	nop    WORD PTR [rax+rax*1+0x0]
  4054e0:	mov    ecx,DWORD PTR [rax+0x8]
  4054e3:	mov    r14,QWORD PTR [rax+0x38]
  4054e7:	call   0x403390
  4054ec:	mov    r9,rax
  4054ef:	mov    rax,QWORD PTR [rsi]
  4054f2:	lea    rdx,[rip+0xefff]        # 0x4144f8
  4054f9:	mov    rcx,rbx
  4054fc:	mov    r8,QWORD PTR [rax+rdi*1]
  405500:	mov    QWORD PTR [rsp+0x28],r14
  405505:	mov    QWORD PTR [rsp+0x20],r14
  40550a:	call   0x410968
  40550f:	jmp    0x404ff2
  405514:	lea    rcx,[rip+0xeb46]        # 0x414061
  40551b:	lea    r9,[rip+0xeb40]        # 0x414062
  405522:	mov    QWORD PTR [rsp+0x78],rcx
  405527:	jmp    0x4053a9
  40552c:	nop    DWORD PTR [rax+0x0]
  405530:	mov    BYTE PTR [rdx+0x1],0x5c
  405534:	lea    rax,[rdx+0x3]
  405538:	mov    BYTE PTR [rdx+0x2],0x76
  40553c:	jmp    0x4052e0
  405541:	mov    QWORD PTR [rsp+0x60],rdx
  405546:	movzx  ecx,r15b
  40554a:	call   QWORD PTR [rip+0x1a124]        # 0x41f674
  405550:	test   eax,eax
  405552:	mov    rdx,QWORD PTR [rsp+0x60]
  405557:	jne    0x405676
  40555d:	mov    eax,r15d
  405560:	lea    rcx,[rip+0xf9d9]        # 0x414f40
  405567:	mov    BYTE PTR [rdx+0x1],0x5c
  40556b:	shr    al,0x6
  40556e:	and    eax,0x3
  405571:	movzx  eax,BYTE PTR [rcx+rax*1]
  405575:	mov    BYTE PTR [rdx+0x2],al
  405578:	mov    rax,r15
  40557b:	and    r15d,0x7
  40557f:	shr    rax,0x3
  405583:	and    eax,0x7
  405586:	movzx  eax,BYTE PTR [rcx+rax*1]
  40558a:	movzx  ecx,BYTE PTR [rcx+r15*1]
  40558f:	mov    BYTE PTR [rdx+0x3],al
  405592:	mov    BYTE PTR [rdx+0x4],cl
  405595:	lea    rax,[rdx+0x5]
  405599:	jmp    0x4052e0
  40559e:	xchg   ax,ax
  4055a0:	mov    BYTE PTR [rdx+0x1],0x5c
  4055a4:	lea    rax,[rdx+0x3]
  4055a8:	mov    BYTE PTR [rdx+0x2],0x27
  4055ac:	jmp    0x4052e0
  4055b1:	mov    BYTE PTR [rdx+0x1],0x5c
  4055b5:	lea    rax,[rdx+0x3]
  4055b9:	mov    BYTE PTR [rdx+0x2],0x66
  4055bd:	jmp    0x4052e0
  4055c2:	mov    BYTE PTR [rdx+0x1],0x5c
  4055c6:	lea    rax,[rdx+0x3]
  4055ca:	mov    BYTE PTR [rdx+0x2],0x72
  4055ce:	jmp    0x4052e0
  4055d3:	mov    BYTE PTR [rdx+0x1],0x5c
  4055d7:	lea    rax,[rdx+0x3]
  4055db:	mov    BYTE PTR [rdx+0x2],0x6e
  4055df:	jmp    0x4052e0
  4055e4:	mov    BYTE PTR [rdx+0x1],0x5c
  4055e8:	lea    rax,[rdx+0x3]
  4055ec:	mov    BYTE PTR [rdx+0x2],0x74
  4055f0:	jmp    0x4052e0
  4055f5:	mov    rdx,QWORD PTR [rax+0x18]
  4055f9:	mov    rcx,QWORD PTR [rax+0x20]
  4055fd:	call   0x404710
  405602:	mov    r13,rax
  405605:	mov    rax,rsi
  405608:	add    rax,QWORD PTR [rdi]
  40560b:	movsxd rdx,DWORD PTR [rax]
  40560e:	mov    r10,QWORD PTR [rax+0x18]
  405612:	mov    rcx,QWORD PTR [rax+0x8]
  405616:	cmp    edx,0xffffffff
  405619:	je     0x40569f
  40561f:	mov    r11,QWORD PTR [rip+0x1334a]        # 0x418970
  405626:	shl    rdx,0x6
  40562a:	lea    r9,[rip+0xea2c]        # 0x41405d
  405631:	mov    rax,rdx
  405634:	add    rax,QWORD PTR [r11]
  405637:	mov    r8,QWORD PTR [rax+0x38]
  40563b:	lea    rdx,[rip+0xef0e]        # 0x414550
  405642:	mov    DWORD PTR [rsp+0x28],r10d
  405647:	mov    QWORD PTR [rsp+0x20],rcx
  40564c:	mov    QWORD PTR [rsp+0x30],r13
  405651:	mov    rcx,rbx
  405654:	call   0x410968
  405659:	mov    rcx,rbx
  40565c:	call   0x403070
  405661:	mov    rcx,r13
  405664:	call   0x4109d8
  405669:	jmp    0x40540c
  40566e:	xor    r15d,r15d
  405671:	jmp    0x405346
  405676:	lea    rax,[rdx+0x2]
  40567a:	mov    BYTE PTR [rdx+0x1],r15b
  40567e:	jmp    0x4052e0
  405683:	mov    r8,QWORD PTR [rsp+0x610]
  40568b:	lea    rdx,[rip+0xecbe]        # 0x414350
  405692:	mov    rcx,rbx
  405695:	call   0x410968
  40569a:	jmp    0x404e6a
  40569f:	lea    r9,[rip+0xe9bb]        # 0x414061
  4056a6:	lea    r8,[rip+0xe9b5]        # 0x414062
  4056ad:	jmp    0x40563b
  4056af:	lea    rcx,[rip+0xed63]        # 0x414419
  4056b6:	call   0x4030d0
  4056bb:	jmp    0x404e6a
  4056c0:	mov    r8,QWORD PTR [rsp+0x610]
  4056c8:	lea    rdx,[rip+0xecc1]        # 0x414390
  4056cf:	mov    rcx,rbx
  4056d2:	call   0x410968
  4056d7:	jmp    0x404e6a
  4056dc:	call   0x4043f0
  4056e1:	nop
  4056e2:	nop    DWORD PTR [rax+0x0]
  4056e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056f0:	push   rsi
  4056f1:	push   rbx
  4056f2:	sub    rsp,0x28
  4056f6:	cmp    ecx,0x6
  4056f9:	mov    rsi,rdx
  4056fc:	movsxd rbx,r8d
  4056ff:	ja     0x405890
  405705:	lea    rax,[rip+0xeff4]        # 0x414700
  40570c:	mov    ecx,ecx
  40570e:	movsxd rcx,DWORD PTR [rax+rcx*4]
  405712:	add    rax,rcx
  405715:	jmp    rax
  405717:	nop    WORD PTR [rax+rax*1+0x0]
  405720:	mov    ecx,0x19
  405725:	call   0x410998
  40572a:	test   rax,rax
  40572d:	je     0x4058a8
  405733:	movsd  xmm0,QWORD PTR [rsi+rbx*8]
  405738:	lea    rdx,[rip+0xee4f]        # 0x41458e
  40573f:	mov    rcx,rax
  405742:	mov    QWORD PTR [rip+0x16567],rax        # 0x41bcb0
  405749:	movapd xmm2,xmm0
  40574d:	movq   r8,xmm0
  405752:	call   0x410968
  405757:	mov    rbx,QWORD PTR [rip+0x16552]        # 0x41bcb0
  40575e:	mov    edx,0x65
  405763:	mov    rcx,rbx
  405766:	call   0x410918
  40576b:	test   rax,rax
  40576e:	je     0x405773
  405770:	mov    BYTE PTR [rax],0x64
  405773:	mov    rax,rbx
  405776:	add    rsp,0x28
  40577a:	pop    rbx
  40577b:	pop    rsi
  40577c:	ret    
  40577d:	nop    DWORD PTR [rax]
  405780:	mov    ecx,0xa
  405785:	call   0x410998
  40578a:	test   rax,rax
  40578d:	je     0x4058a8
  405793:	movsx  r8d,BYTE PTR [rsi+rbx*1]
  405798:	lea    rdx,[rip+0xede7]        # 0x414586
  40579f:	mov    rcx,rax
  4057a2:	mov    QWORD PTR [rip+0x16507],rax        # 0x41bcb0
  4057a9:	call   0x410968
  4057ae:	mov    rbx,QWORD PTR [rip+0x164fb]        # 0x41bcb0
  4057b5:	mov    rax,rbx
  4057b8:	add    rsp,0x28
  4057bc:	pop    rbx
  4057bd:	pop    rsi
  4057be:	ret    
  4057bf:	nop
  4057c0:	mov    ecx,0xa
  4057c5:	call   0x410998
  4057ca:	test   rax,rax
  4057cd:	je     0x4058a8
  4057d3:	movsx  r8d,WORD PTR [rsi+rbx*2]
  4057d8:	lea    rdx,[rip+0xeda7]        # 0x414586
  4057df:	mov    rcx,rax
  4057e2:	mov    QWORD PTR [rip+0x164c7],rax        # 0x41bcb0
  4057e9:	call   0x410968
  4057ee:	mov    rbx,QWORD PTR [rip+0x164bb]        # 0x41bcb0
  4057f5:	mov    rax,rbx
  4057f8:	add    rsp,0x28
  4057fc:	pop    rbx
  4057fd:	pop    rsi
  4057fe:	ret    
  4057ff:	nop
  405800:	mov    ecx,0x14
  405805:	call   0x410998
  40580a:	test   rax,rax
  40580d:	je     0x4058a8
  405813:	mov    r8d,DWORD PTR [rsi+rbx*4]
  405817:	lea    rdx,[rip+0xed68]        # 0x414586
  40581e:	mov    rcx,rax
  405821:	mov    QWORD PTR [rip+0x16488],rax        # 0x41bcb0
  405828:	call   0x410968
  40582d:	mov    rbx,QWORD PTR [rip+0x1647c]        # 0x41bcb0
  405834:	mov    rax,rbx
  405837:	add    rsp,0x28
  40583b:	pop    rbx
  40583c:	pop    rsi
  40583d:	ret    
  40583e:	xchg   ax,ax
  405840:	mov    ecx,0x14
  405845:	call   0x410998
  40584a:	test   rax,rax
  40584d:	je     0x4058a8
  40584f:	pxor   xmm0,xmm0
  405853:	lea    rdx,[rip+0xed2f]        # 0x414589
  40585a:	mov    rcx,rax
  40585d:	mov    QWORD PTR [rip+0x1644c],rax        # 0x41bcb0
  405864:	cvtss2sd xmm0,DWORD PTR [rsi+rbx*4]
  405869:	movapd xmm2,xmm0
  40586d:	movq   r8,xmm0
  405872:	call   0x410968
  405877:	mov    rbx,QWORD PTR [rip+0x16432]        # 0x41bcb0
  40587e:	mov    rax,rbx
  405881:	add    rsp,0x28
  405885:	pop    rbx
  405886:	pop    rsi
  405887:	ret    
  405888:	nop    DWORD PTR [rax+rax*1+0x0]
  405890:	lea    rcx,[rip+0xee51]        # 0x4146e8
  405897:	xor    ebx,ebx
  405899:	call   0x4030d0
  40589e:	mov    rax,rbx
  4058a1:	add    rsp,0x28
  4058a5:	pop    rbx
  4058a6:	pop    rsi
  4058a7:	ret    
  4058a8:	call   0x4043f0
  4058ad:	nop
  4058ae:	xchg   ax,ax
  4058b0:	push   r15
  4058b2:	push   r14
  4058b4:	push   r13
  4058b6:	push   r12
  4058b8:	push   rbp
  4058b9:	push   rdi
  4058ba:	push   rsi
  4058bb:	push   rbx
  4058bc:	sub    rsp,0x718
  4058c3:	mov    QWORD PTR [rsp+0x760],rcx
  4058cb:	lea    rcx,[rip+0xee5d]        # 0x41472f
  4058d2:	mov    DWORD PTR [rsp+0x70],0x1
  4058da:	mov    DWORD PTR [rsp+0x74],0x2
  4058e2:	mov    DWORD PTR [rsp+0x78],0x3
  4058ea:	mov    DWORD PTR [rsp+0x7c],0x4
  4058f2:	mov    DWORD PTR [rsp+0x80],0x5
  4058fd:	mov    DWORD PTR [rsp+0x84],0x6
  405908:	call   0x4032d0
  40590d:	lea    rcx,[rip+0xe375]        # 0x413c89
  405914:	call   0x4032d0
  405919:	lea    rcx,[rip+0xe37e]        # 0x413c9e
  405920:	call   0x4032d0
  405925:	lea    rcx,[rip+0xe388]        # 0x413cb4
  40592c:	call   0x4032d0
  405931:	lea    rcx,[rip+0xe328]        # 0x413c60
  405938:	call   0x4032d0
  40593d:	lea    rcx,[rip+0xe328]        # 0x413c6c
  405944:	call   0x4032d0
  405949:	mov    rax,QWORD PTR [rip+0x12f50]        # 0x4188a0
  405950:	mov    ebp,DWORD PTR [rax]
  405952:	test   ebp,ebp
  405954:	jne    0x405e5b
  40595a:	mov    r12,QWORD PTR [rip+0x12f0f]        # 0x418870
  405961:	mov    edi,DWORD PTR [r12]
  405965:	test   edi,edi
  405967:	jle    0x405a77
  40596d:	lea    rcx,[rip+0xee14]        # 0x414788
  405974:	call   0x4032d0
  405979:	mov    ebx,DWORD PTR [r12]
  40597d:	test   ebx,ebx
  40597f:	jle    0x4063cb
  405985:	mov    rdi,QWORD PTR [rip+0x12e34]        # 0x4187c0
  40598c:	lea    rbx,[rsp+0x1e0]
  405994:	xor    ebp,ebp
  405996:	xor    esi,esi
  405998:	nop    DWORD PTR [rax+rax*1+0x0]
  4059a0:	mov    rax,QWORD PTR [rdi]
  4059a3:	lea    rdx,[rip+0xee02]        # 0x4147ac
  4059aa:	mov    rcx,rbx
  4059ad:	add    esi,0x1
  4059b0:	mov    r8,QWORD PTR [rax+rbp*1+0x10]
  4059b5:	add    rbp,0x18
  4059b9:	call   0x410968
  4059be:	mov    rcx,rbx
  4059c1:	call   0x4032d0
  4059c6:	cmp    DWORD PTR [r12],esi
  4059ca:	jg     0x4059a0
  4059cc:	lea    rcx,[rip+0xedc5]        # 0x414798
  4059d3:	call   0x4032d0
  4059d8:	mov    r11d,DWORD PTR [r12]
  4059dc:	test   r11d,r11d
  4059df:	jle    0x405a7f
  4059e5:	mov    rdi,QWORD PTR [rip+0x12dd4]        # 0x4187c0
  4059ec:	xor    ebp,ebp
  4059ee:	xor    esi,esi
  4059f0:	mov    rax,QWORD PTR [rdi]
  4059f3:	lea    rdx,[rip+0xe320]        # 0x413d1a
  4059fa:	mov    rcx,rbx
  4059fd:	add    esi,0x1
  405a00:	mov    r8,QWORD PTR [rax+rbp*1+0x10]
  405a05:	add    rbp,0x18
  405a09:	call   0x410968
  405a0e:	mov    rcx,rbx
  405a11:	call   0x4032d0
  405a16:	mov    eax,DWORD PTR [r12]
  405a1a:	cmp    eax,esi
  405a1c:	jg     0x4059f0
  405a1e:	test   eax,eax
  405a20:	jle    0x405a7f
  405a22:	xor    ebp,ebp
  405a24:	xor    esi,esi
  405a26:	jmp    0x405a54
  405a28:	nop    DWORD PTR [rax+rax*1+0x0]
  405a30:	lea    rdx,[rip+0xed89]        # 0x4147c0
  405a37:	mov    rcx,rbx
  405a3a:	call   0x410968
  405a3f:	mov    rcx,rbx
  405a42:	add    esi,0x1
  405a45:	add    rbp,0x18
  405a49:	call   0x4032d0
  405a4e:	cmp    DWORD PTR [r12],esi
  405a52:	jle    0x405a7f
  405a54:	mov    rax,rbp
  405a57:	add    rax,QWORD PTR [rdi]
  405a5a:	mov    r9,QWORD PTR [rax]
  405a5d:	mov    r8,QWORD PTR [rax+0x10]
  405a61:	test   r9,r9
  405a64:	je     0x405a30
  405a66:	lea    rdx,[rip+0xe2bd]        # 0x413d2a
  405a6d:	mov    rcx,rbx
  405a70:	call   0x410968
  405a75:	jmp    0x405a3f
  405a77:	lea    rbx,[rsp+0x1e0]
  405a7f:	mov    rbp,QWORD PTR [rip+0x12e2a]        # 0x4188b0
  405a86:	mov    esi,DWORD PTR [rbp+0x0]
  405a89:	test   esi,esi
  405a8b:	jle    0x405d63
  405a91:	lea    rcx,[rip+0xe1e2]        # 0x413c7a
  405a98:	call   0x4032d0
  405a9d:	mov    eax,DWORD PTR [rbp+0x0]
  405aa0:	test   eax,eax
  405aa2:	jle    0x405adb
  405aa4:	mov    rsi,QWORD PTR [rip+0x12ec5]        # 0x418970
  405aab:	xor    r13d,r13d
  405aae:	xor    edi,edi
  405ab0:	mov    rax,QWORD PTR [rsi]
  405ab3:	lea    rdx,[rip+0xe251]        # 0x413d0b
  405aba:	mov    rcx,rbx
  405abd:	add    edi,0x1
  405ac0:	mov    r8,QWORD PTR [rax+r13*1+0x38]
  405ac5:	add    r13,0x40
  405ac9:	call   0x410968
  405ace:	mov    rcx,rbx
  405ad1:	call   0x4032d0
  405ad6:	cmp    DWORD PTR [rbp+0x0],edi
  405ad9:	jg     0x405ab0
  405adb:	lea    rcx,[rip+0xe266]        # 0x413d48
  405ae2:	call   0x4032d0
  405ae7:	mov    r10d,DWORD PTR [rbp+0x0]
  405aeb:	test   r10d,r10d
  405aee:	jle    0x405b71
  405af4:	mov    rsi,QWORD PTR [rip+0x12e75]        # 0x418970
  405afb:	xor    r13d,r13d
  405afe:	xor    edi,edi
  405b00:	mov    rax,QWORD PTR [rsi]
  405b03:	lea    rdx,[rip+0xe2a9]        # 0x413db3
  405b0a:	mov    rcx,rbx
  405b0d:	add    edi,0x1
  405b10:	mov    r8,QWORD PTR [rax+r13*1+0x38]
  405b15:	add    r13,0x40
  405b19:	call   0x410968
  405b1e:	mov    rcx,rbx
  405b21:	call   0x4032d0
  405b26:	mov    eax,DWORD PTR [rbp+0x0]
  405b29:	cmp    eax,edi
  405b2b:	jg     0x405b00
  405b2d:	test   eax,eax
  405b2f:	jle    0x405b71
  405b31:	xor    r13d,r13d
  405b34:	xor    edi,edi
  405b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b40:	mov    rax,r13
  405b43:	add    rax,QWORD PTR [rsi]
  405b46:	lea    rdx,[rip+0xe277]        # 0x413dc4
  405b4d:	mov    rcx,rbx
  405b50:	add    edi,0x1
  405b53:	add    r13,0x40
  405b57:	mov    r9d,DWORD PTR [rax+0xc]
  405b5b:	mov    r8,QWORD PTR [rax+0x38]
  405b5f:	call   0x410968
  405b64:	mov    rcx,rbx
  405b67:	call   0x4032d0
  405b6c:	cmp    DWORD PTR [rbp+0x0],edi
  405b6f:	jg     0x405b40
  405b71:	lea    rcx,[rip+0xec6a]        # 0x4147e2
  405b78:	call   0x4032d0
  405b7d:	mov    r9d,DWORD PTR [rbp+0x0]
  405b81:	test   r9d,r9d
  405b84:	jle    0x405d63
  405b8a:	mov    rsi,QWORD PTR [rip+0x12ddf]        # 0x418970
  405b91:	xor    r13d,r13d
  405b94:	xor    edi,edi
  405b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ba0:	mov    rax,r13
  405ba3:	add    rax,QWORD PTR [rsi]
  405ba6:	mov    r8d,DWORD PTR [rax+0xc]
  405baa:	test   r8d,r8d
  405bad:	jle    0x405bcd
  405baf:	mov    r8,QWORD PTR [rax+0x38]
  405bb3:	lea    rdx,[rip+0xec3a]        # 0x4147f4
  405bba:	mov    rcx,rbx
  405bbd:	mov    r9,r8
  405bc0:	call   0x410968
  405bc5:	mov    rcx,rbx
  405bc8:	call   0x4032d0
  405bcd:	mov    eax,DWORD PTR [rbp+0x0]
  405bd0:	add    edi,0x1
  405bd3:	add    r13,0x40
  405bd7:	cmp    eax,edi
  405bd9:	jg     0x405ba0
  405bdb:	test   eax,eax
  405bdd:	jle    0x405d63
  405be3:	lea    rcx,[rip+0xe1f3]        # 0x413ddd
  405bea:	call   0x4032d0
  405bef:	mov    ecx,DWORD PTR [rbp+0x0]
  405bf2:	test   ecx,ecx
  405bf4:	jle    0x405d63
  405bfa:	mov    QWORD PTR [rsp+0x60],0x0
  405c03:	mov    DWORD PTR [rsp+0x58],0x0
  405c0b:	lea    rdi,[rsp+0xd0]
  405c13:	mov    r15,QWORD PTR [rip+0x12ba6]        # 0x4187c0
  405c1a:	mov    QWORD PTR [rsp+0x68],rsi
  405c1f:	jmp    0x405c5b
  405c21:	call   0x403680
  405c26:	lea    rdx,[rip+0xebe1]        # 0x41480e
  405c2d:	mov    r8,rax
  405c30:	mov    r9,rsi
  405c33:	mov    rcx,rbx
  405c36:	call   0x410968
  405c3b:	mov    rcx,rbx
  405c3e:	call   0x4032d0
  405c43:	add    DWORD PTR [rsp+0x58],0x1
  405c48:	add    QWORD PTR [rsp+0x60],0x40
  405c4e:	mov    eax,DWORD PTR [rsp+0x58]
  405c52:	cmp    DWORD PTR [rbp+0x0],eax
  405c55:	jle    0x405e51
  405c5b:	mov    rax,QWORD PTR [rsp+0x68]
  405c60:	mov    r14,QWORD PTR [rsp+0x60]
  405c65:	add    r14,QWORD PTR [rax]
  405c68:	mov    eax,DWORD PTR [r14+0xc]
  405c6c:	test   eax,eax
  405c6e:	jle    0x405c81
  405c70:	mov    rdx,QWORD PTR [r14+0x10]
  405c74:	mov    rsi,QWORD PTR [rip+0x12c95]        # 0x418910
  405c7b:	mov    esi,DWORD PTR [rsi]
  405c7d:	cmp    DWORD PTR [rdx],esi
  405c7f:	je     0x405c43
  405c81:	mov    ecx,DWORD PTR [r14+0x8]
  405c85:	cmp    ecx,0x2
  405c88:	je     0x405c43
  405c8a:	test   eax,eax
  405c8c:	mov    rsi,QWORD PTR [r14+0x38]
  405c90:	je     0x405c21
  405c92:	call   0x403680
  405c97:	lea    rdx,[rip+0xe1bd]        # 0x413e5b
  405c9e:	mov    r8,rax
  405ca1:	mov    r9,rsi
  405ca4:	mov    rcx,rbx
  405ca7:	call   0x410968
  405cac:	mov    eax,DWORD PTR [r14+0xc]
  405cb0:	sub    eax,0x1
  405cb3:	js     0x405d0a
  405cb5:	movsxd rdx,eax
  405cb8:	mov    eax,eax
  405cba:	lea    r13,[rdx*4+0x0]
  405cc2:	sub    rdx,rax
  405cc5:	lea    rsi,[rdx*4-0x4]
  405ccd:	nop    DWORD PTR [rax]
  405cd0:	mov    rax,QWORD PTR [r14+0x10]
  405cd4:	mov    rdx,QWORD PTR [r15]
  405cd7:	mov    rcx,rdi
  405cda:	movsxd rax,DWORD PTR [rax+r13*1]
  405cde:	sub    r13,0x4
  405ce2:	lea    rax,[rax+rax*2]
  405ce6:	lea    rax,[rdx+rax*8]
  405cea:	lea    rdx,[rip+0xe17a]        # 0x413e6b
  405cf1:	mov    r8,QWORD PTR [rax+0x10]
  405cf5:	call   0x410968
  405cfa:	mov    rdx,rdi
  405cfd:	mov    rcx,rbx
  405d00:	call   0x410958
  405d05:	cmp    r13,rsi
  405d08:	jne    0x405cd0
  405d0a:	mov    edx,0x2c
  405d0f:	mov    rcx,rbx
  405d12:	call   0x410918
  405d17:	test   rax,rax
  405d1a:	je     0x405d1f
  405d1c:	mov    BYTE PTR [rax],0x0
  405d1f:	mov    rdx,rbx
  405d22:	mov    ecx,DWORD PTR [rdx]
  405d24:	add    rdx,0x4
  405d28:	lea    eax,[rcx-0x1010101]
  405d2e:	not    ecx
  405d30:	and    eax,ecx
  405d32:	and    eax,0x80808080
  405d37:	je     0x405d22
  405d39:	mov    ecx,eax
  405d3b:	mov    r14d,0x29
  405d41:	shr    ecx,0x10
  405d44:	test   eax,0x8080
  405d49:	cmove  eax,ecx
  405d4c:	lea    rcx,[rdx+0x2]
  405d50:	cmove  rdx,rcx
  405d54:	add    al,al
  405d56:	sbb    rdx,0x3
  405d5a:	mov    WORD PTR [rdx],r14w
  405d5e:	jmp    0x405c3b
  405d63:	mov    r14d,0x1
  405d69:	lea    rsi,[rsp+0x70]
  405d6e:	movsxd rax,r14d
  405d71:	lea    r13,[rsi+0x18]
  405d75:	mov    rdx,rsi
  405d78:	jmp    0x405d83
  405d7a:	nop    WORD PTR [rax+rax*1+0x0]
  405d80:	movsxd rax,DWORD PTR [rdx]
  405d83:	add    rdx,0x4
  405d87:	mov    QWORD PTR [rsp+rax*8+0x90],0x0
  405d93:	cmp    rdx,r13
  405d96:	jne    0x405d80
  405d98:	mov    rax,QWORD PTR [rip+0x12aa1]        # 0x418840
  405d9f:	mov    edx,DWORD PTR [rax]
  405da1:	test   edx,edx
  405da3:	jle    0x405dfd
  405da5:	mov    rdi,QWORD PTR [rip+0x129b4]        # 0x418760
  405dac:	sub    edx,0x1
  405daf:	xor    r9d,r9d
  405db2:	lea    rdx,[rdx+rdx*2]
  405db6:	mov    rcx,QWORD PTR [rdi]
  405db9:	shl    rdx,0x4
  405dbd:	lea    rax,[rcx+0x18]
  405dc1:	lea    r8,[rcx+rdx*1+0x48]
  405dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dd0:	movsxd rdx,DWORD PTR [rax-0x8]
  405dd4:	mov    rcx,QWORD PTR [rax]
  405dd7:	cmp    rcx,QWORD PTR [rsp+rdx*8+0x90]
  405ddf:	jbe    0x405def
  405de1:	mov    QWORD PTR [rsp+rdx*8+0x90],rcx
  405de9:	mov    r9d,0x1
  405def:	add    rax,0x30
  405df3:	cmp    rax,r8
  405df6:	jne    0x405dd0
  405df8:	test   r9d,r9d
  405dfb:	jne    0x405e78
  405dfd:	lea    rcx,[rip+0xea11]        # 0x414815
  405e04:	call   0x4032d0
  405e09:	mov    rax,QWORD PTR [rip+0x12980]        # 0x418790
  405e10:	mov    eax,DWORD PTR [rax]
  405e12:	test   eax,eax
  405e14:	je     0x405eec
  405e1a:	test   ah,0x2
  405e1d:	jne    0x40638e
  405e23:	test   ah,0x1
  405e26:	jne    0x4063d8
  405e2c:	test   ah,0x10
  405e2f:	je     0x4063ba
  405e35:	mov    r8,QWORD PTR [rsp+0x760]
  405e3d:	lea    rdx,[rip+0xeacc]        # 0x414910
  405e44:	mov    rcx,rbx
  405e47:	call   0x410968
  405e4c:	jmp    0x405f03
  405e51:	mov    r14d,DWORD PTR [rsp+0x70]
  405e56:	jmp    0x405d69
  405e5b:	lea    rcx,[rip+0xe8de]        # 0x414740
  405e62:	call   0x4032d0
  405e67:	lea    rcx,[rip+0xe909]        # 0x414777
  405e6e:	call   0x4032d0
  405e73:	jmp    0x40595a
  405e78:	lea    rcx,[rip+0xe9aa]        # 0x414829
  405e7f:	call   0x4032d0
  405e84:	jmp    0x405ea0
  405e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e90:	add    rsi,0x4
  405e94:	cmp    rsi,r13
  405e97:	je     0x405dfd
  405e9d:	mov    r14d,DWORD PTR [rsi]
  405ea0:	cmp    r14d,0x2
  405ea4:	je     0x405e90
  405ea6:	movsxd rax,r14d
  405ea9:	mov    rdi,QWORD PTR [rsp+rax*8+0x90]
  405eb1:	test   rdi,rdi
  405eb4:	je     0x405e90
  405eb6:	mov    ecx,r14d
  405eb9:	call   0x4031b0
  405ebe:	mov    ecx,r14d
  405ec1:	mov    r15,rax
  405ec4:	call   0x403680
  405ec9:	lea    rdx,[rip+0xe96d]        # 0x41483d
  405ed0:	mov    rcx,rbx
  405ed3:	mov    r8,rax
  405ed6:	mov    DWORD PTR [rsp+0x20],edi
  405eda:	mov    r9,r15
  405edd:	call   0x410968
  405ee2:	mov    rcx,rbx
  405ee5:	call   0x4032d0
  405eea:	jmp    0x405e90
  405eec:	mov    r8,QWORD PTR [rsp+0x760]
  405ef4:	lea    rdx,[rip+0xe955]        # 0x414850
  405efb:	mov    rcx,rbx
  405efe:	call   0x410968
  405f03:	mov    rcx,rbx
  405f06:	call   0x4032d0
  405f0b:	lea    rcx,[rip+0xdd35]        # 0x413c47
  405f12:	call   0x4032d0
  405f17:	mov    r13d,DWORD PTR [r12]
  405f1b:	test   r13d,r13d
  405f1e:	jle    0x405fb4
  405f24:	lea    rcx,[rip+0xea1d]        # 0x414948
  405f2b:	call   0x4032d0
  405f30:	mov    esi,DWORD PTR [r12]
  405f34:	test   esi,esi
  405f36:	jle    0x405fb4
  405f38:	xor    r13d,r13d
  405f3b:	xor    esi,esi
  405f3d:	mov    rdi,QWORD PTR [rip+0x1287c]        # 0x4187c0
  405f44:	jmp    0x405f88
  405f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f50:	mov    r9,QWORD PTR [rax+0x10]
  405f54:	mov    r8,QWORD PTR [rax+0x8]
  405f58:	lea    rdx,[rip+0xea01]        # 0x414960
  405f5f:	mov    rcx,rbx
  405f62:	call   0x410968
  405f67:	mov    rcx,rbx
  405f6a:	add    esi,0x1
  405f6d:	add    r13,0x18
  405f71:	call   0x4032d0
  405f76:	lea    rcx,[rip+0xdcca]        # 0x413c47
  405f7d:	call   0x4032d0
  405f82:	cmp    DWORD PTR [r12],esi
  405f86:	jle    0x405fb4
  405f88:	mov    rax,r13
  405f8b:	add    rax,QWORD PTR [rdi]
  405f8e:	mov    r9,QWORD PTR [rax]
  405f91:	test   r9,r9
  405f94:	je     0x405f50
  405f96:	mov    r8,QWORD PTR [rax+0x8]
  405f9a:	mov    rax,QWORD PTR [rax+0x10]
  405f9e:	lea    rdx,[rip+0xe9f3]        # 0x414998
  405fa5:	mov    rcx,rbx
  405fa8:	mov    QWORD PTR [rsp+0x20],rax
  405fad:	call   0x410968
  405fb2:	jmp    0x405f67
  405fb4:	mov    edi,DWORD PTR [rbp+0x0]
  405fb7:	test   edi,edi
  405fb9:	jle    0x4060c5
  405fbf:	lea    rcx,[rip+0xe9fd]        # 0x4149c3
  405fc6:	call   0x4032d0
  405fcb:	mov    r11d,DWORD PTR [rbp+0x0]
  405fcf:	test   r11d,r11d
  405fd2:	jle    0x4060c5
  405fd8:	mov    rsi,QWORD PTR [rip+0x12991]        # 0x418970
  405fdf:	mov    r12,QWORD PTR [rip+0x127da]        # 0x4187c0
  405fe6:	xor    edi,edi
  405fe8:	xor    r13d,r13d
  405feb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ff0:	mov    rax,rdi
  405ff3:	add    rax,QWORD PTR [rsi]
  405ff6:	xor    r15d,r15d
  405ff9:	xor    r14d,r14d
  405ffc:	mov    r9d,DWORD PTR [rax+0xc]
  406000:	test   r9d,r9d
  406003:	jle    0x4062b4
  406009:	nop    DWORD PTR [rax+0x0]
  406010:	mov    r8,QWORD PTR [rax+0x38]
  406014:	mov    rax,QWORD PTR [rax+0x10]
  406018:	lea    rdx,[rip+0xe9b7]        # 0x4149d6
  40601f:	mov    r10,QWORD PTR [r12]
  406023:	sub    r9d,r14d
  406026:	mov    rcx,rbx
  406029:	add    r14d,0x1
  40602d:	movsxd rax,DWORD PTR [rax+r15*1]
  406031:	add    r15,0x4
  406035:	lea    rax,[rax+rax*2]
  406039:	lea    rax,[r10+rax*8]
  40603d:	mov    rax,QWORD PTR [rax+0x10]
  406041:	mov    QWORD PTR [rsp+0x20],rax
  406046:	call   0x410968
  40604b:	mov    rcx,rbx
  40604e:	call   0x4032d0
  406053:	mov    rax,rdi
  406056:	add    rax,QWORD PTR [rsi]
  406059:	mov    r9d,DWORD PTR [rax+0xc]
  40605d:	cmp    r9d,r14d
  406060:	jg     0x406010
  406062:	test   r9d,r9d
  406065:	jle    0x4062b4
  40606b:	mov    ecx,DWORD PTR [rax+0x8]
  40606e:	mov    r14,QWORD PTR [rax+0x38]
  406072:	call   0x403700
  406077:	mov    r9,rax
  40607a:	mov    rax,QWORD PTR [rsi]
  40607d:	lea    rdx,[rip+0xe96c]        # 0x4149f0
  406084:	mov    rcx,rbx
  406087:	mov    r8,QWORD PTR [rax+rdi*1]
  40608b:	mov    QWORD PTR [rsp+0x30],r14
  406090:	mov    QWORD PTR [rsp+0x28],r14
  406095:	mov    QWORD PTR [rsp+0x20],r14
  40609a:	call   0x410968
  40609f:	mov    rcx,rbx
  4060a2:	add    r13d,0x1
  4060a6:	add    rdi,0x40
  4060aa:	call   0x4032d0
  4060af:	lea    rcx,[rip+0xdb91]        # 0x413c47
  4060b6:	call   0x4032d0
  4060bb:	cmp    DWORD PTR [rbp+0x0],r13d
  4060bf:	jg     0x405ff0
  4060c5:	mov    rax,QWORD PTR [rip+0x12774]        # 0x418840
  4060cc:	mov    r8d,DWORD PTR [rax]
  4060cf:	test   r8d,r8d
  4060d2:	jle    0x40624a
  4060d8:	lea    rcx,[rip+0xe986]        # 0x414a65
  4060df:	call   0x4032d0
  4060e4:	mov    rax,QWORD PTR [rip+0x12755]        # 0x418840
  4060eb:	mov    edx,DWORD PTR [rax]
  4060ed:	test   edx,edx
  4060ef:	jle    0x40624a
  4060f5:	mov    rax,QWORD PTR [rip+0x12874]        # 0x418970
  4060fc:	mov    rdi,QWORD PTR [rip+0x1265d]        # 0x418760
  406103:	xor    esi,esi
  406105:	xor    ebp,ebp
  406107:	mov    QWORD PTR [rsp+0x68],rax
  40610c:	nop    DWORD PTR [rax+0x0]
  406110:	mov    rax,rsi
  406113:	add    rax,QWORD PTR [rdi]
  406116:	mov    ecx,DWORD PTR [rax+0x10]
  406119:	cmp    ecx,0x2
  40611c:	je     0x406310
  406122:	cmp    QWORD PTR [rax+0x18],0x0
  406127:	je     0x40618f
  406129:	mov    r12d,0x1
  40612f:	jmp    0x406134
  406131:	mov    r12,rdx
  406134:	mov    rdx,QWORD PTR [rax+0x20]
  406138:	lea    r8d,[r12-0x1]
  40613d:	call   0x4056f0
  406142:	mov    r13,rax
  406145:	mov    rax,QWORD PTR [rdi]
  406148:	mov    ecx,DWORD PTR [rax+rsi*1+0x10]
  40614c:	call   0x4031b0
  406151:	lea    rdx,[rip+0xe95a]        # 0x414ab2
  406158:	mov    r8,rax
  40615b:	mov    r9d,r12d
  40615e:	mov    rcx,rbx
  406161:	mov    QWORD PTR [rsp+0x20],r13
  406166:	call   0x410968
  40616b:	mov    rcx,rbx
  40616e:	call   0x4032d0
  406173:	mov    rcx,r13
  406176:	call   0x4109d8
  40617b:	mov    rax,rsi
  40617e:	add    rax,QWORD PTR [rdi]
  406181:	lea    rdx,[r12+0x1]
  406186:	cmp    QWORD PTR [rax+0x18],r12
  40618a:	mov    ecx,DWORD PTR [rax+0x10]
  40618d:	ja     0x406131
  40618f:	call   0x4031b0
  406194:	mov    r12,rax
  406197:	mov    rax,rsi
  40619a:	add    rax,QWORD PTR [rdi]
  40619d:	mov    ecx,DWORD PTR [rax+0x10]
  4061a0:	mov    r13,QWORD PTR [rax+0x18]
  4061a4:	call   0x403700
  4061a9:	mov    r14,rax
  4061ac:	mov    rax,rsi
  4061af:	add    rax,QWORD PTR [rdi]
  4061b2:	movsxd rdx,DWORD PTR [rax]
  4061b5:	mov    r15,QWORD PTR [rax+0x8]
  4061b9:	cmp    edx,0xffffffff
  4061bc:	je     0x4062f0
  4061c2:	mov    rcx,QWORD PTR [rsp+0x68]
  4061c7:	shl    rdx,0x6
  4061cb:	add    rdx,QWORD PTR [rcx]
  4061ce:	mov    r9,QWORD PTR [rdx+0x38]
  4061d2:	lea    rdx,[rip+0xde84]        # 0x41405d
  4061d9:	mov    QWORD PTR [rsp+0x60],rdx
  4061de:	mov    ecx,DWORD PTR [rax+0x10]
  4061e1:	mov    QWORD PTR [rsp+0x58],r9
  4061e6:	call   0x403250
  4061eb:	mov    r8,rax
  4061ee:	mov    rax,QWORD PTR [rsp+0x60]
  4061f3:	mov    r9,QWORD PTR [rsp+0x58]
  4061f8:	lea    rdx,[rip+0xe8c9]        # 0x414ac8
  4061ff:	mov    rcx,rbx
  406202:	mov    QWORD PTR [rsp+0x40],r12
  406207:	mov    DWORD PTR [rsp+0x38],r13d
  40620c:	mov    QWORD PTR [rsp+0x30],r14
  406211:	mov    QWORD PTR [rsp+0x28],r15
  406216:	mov    QWORD PTR [rsp+0x20],rax
  40621b:	call   0x410968
  406220:	mov    rcx,rbx
  406223:	call   0x4032d0
  406228:	lea    rcx,[rip+0xda18]        # 0x413c47
  40622f:	call   0x4032d0
  406234:	mov    rax,QWORD PTR [rip+0x12605]        # 0x418840
  40623b:	add    ebp,0x1
  40623e:	add    rsi,0x30
  406242:	cmp    DWORD PTR [rax],ebp
  406244:	jg     0x406110
  40624a:	mov    rax,QWORD PTR [rip+0x1264f]        # 0x4188a0
  406251:	mov    ecx,DWORD PTR [rax]
  406253:	test   ecx,ecx
  406255:	je     0x40627b
  406257:	lea    rcx,[rip+0xe8a2]        # 0x414b00
  40625e:	call   0x4032d0
  406263:	lea    rcx,[rip+0xe8c6]        # 0x414b30
  40626a:	call   0x4032d0
  40626f:	lea    rcx,[rip+0xd9d1]        # 0x413c47
  406276:	call   0x4032d0
  40627b:	lea    rcx,[rip+0xe8db]        # 0x414b5d
  406282:	call   0x4032d0
  406287:	lea    rcx,[rip+0xe8e3]        # 0x414b71
  40628e:	call   0x4032d0
  406293:	lea    rcx,[rip+0xd9ad]        # 0x413c47
  40629a:	call   0x4032d0
  40629f:	nop
  4062a0:	add    rsp,0x718
  4062a7:	pop    rbx
  4062a8:	pop    rsi
  4062a9:	pop    rdi
  4062aa:	pop    rbp
  4062ab:	pop    r12
  4062ad:	pop    r13
  4062af:	pop    r14
  4062b1:	pop    r15
  4062b3:	ret    
  4062b4:	mov    ecx,DWORD PTR [rax+0x8]
  4062b7:	mov    r14,QWORD PTR [rax+0x38]
  4062bb:	call   0x403700
  4062c0:	mov    r9,rax
  4062c3:	mov    rax,QWORD PTR [rsi]
  4062c6:	lea    rdx,[rip+0xe763]        # 0x414a30
  4062cd:	mov    rcx,rbx
  4062d0:	mov    r8,QWORD PTR [rax+rdi*1]
  4062d4:	mov    QWORD PTR [rsp+0x28],r14
  4062d9:	mov    QWORD PTR [rsp+0x20],r14
  4062de:	call   0x410968
  4062e3:	jmp    0x40609f
  4062e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4062f0:	lea    rdx,[rip+0xdd6a]        # 0x414061
  4062f7:	lea    r9,[rip+0xe428]        # 0x414726
  4062fe:	mov    QWORD PTR [rsp+0x60],rdx
  406303:	jmp    0x4061de
  406308:	nop    DWORD PTR [rax+rax*1+0x0]
  406310:	mov    rdx,QWORD PTR [rax+0x18]
  406314:	mov    rcx,QWORD PTR [rax+0x20]
  406318:	call   0x404410
  40631d:	mov    r12,rax
  406320:	mov    rax,rsi
  406323:	add    rax,QWORD PTR [rdi]
  406326:	movsxd rdx,DWORD PTR [rax]
  406329:	mov    r10,QWORD PTR [rax+0x18]
  40632d:	mov    rcx,QWORD PTR [rax+0x8]
  406331:	cmp    edx,0xffffffff
  406334:	je     0x4063aa
  406336:	mov    rax,QWORD PTR [rip+0x12633]        # 0x418970
  40633d:	shl    rdx,0x6
  406341:	lea    r9,[rip+0xdd15]        # 0x41405d
  406348:	add    rdx,QWORD PTR [rax]
  40634b:	mov    r8,QWORD PTR [rdx+0x38]
  40634f:	lea    rdx,[rip+0xe72a]        # 0x414a80
  406356:	mov    DWORD PTR [rsp+0x28],r10d
  40635b:	mov    QWORD PTR [rsp+0x20],rcx
  406360:	mov    QWORD PTR [rsp+0x30],r12
  406365:	mov    rcx,rbx
  406368:	call   0x410968
  40636d:	mov    rcx,rbx
  406370:	call   0x4032d0
  406375:	lea    rcx,[rip+0xd8cb]        # 0x413c47
  40637c:	call   0x4032d0
  406381:	mov    rcx,r12
  406384:	call   0x4109d8
  406389:	jmp    0x406234
  40638e:	mov    r8,QWORD PTR [rsp+0x760]
  406396:	lea    rdx,[rip+0xe4e3]        # 0x414880
  40639d:	mov    rcx,rbx
  4063a0:	call   0x410968
  4063a5:	jmp    0x405f03
  4063aa:	lea    r9,[rip+0xdcb0]        # 0x414061
  4063b1:	lea    r8,[rip+0xe364]        # 0x41471c
  4063b8:	jmp    0x40634f
  4063ba:	lea    rcx,[rip+0xe058]        # 0x414419
  4063c1:	call   0x4030d0
  4063c6:	jmp    0x405f03
  4063cb:	lea    rbx,[rsp+0x1e0]
  4063d3:	jmp    0x4059cc
  4063d8:	mov    r8,QWORD PTR [rsp+0x760]
  4063e0:	lea    rdx,[rip+0xe4d9]        # 0x4148c0
  4063e7:	mov    rcx,rbx
  4063ea:	call   0x410968
  4063ef:	jmp    0x405f03
  4063f4:	xchg   ax,ax
  4063f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406400:	push   r14
  406402:	push   r13
  406404:	push   r12
  406406:	push   rbp
  406407:	push   rdi
  406408:	push   rsi
  406409:	push   rbx
  40640a:	sub    rsp,0x40
  40640e:	mov    rax,QWORD PTR [rip+0x1247b]        # 0x418890
  406415:	mov    rbx,rcx
  406418:	mov    rdi,QWORD PTR [rax]
  40641b:	test   rdi,rdi
  40641e:	je     0x406480
  406420:	mov    rax,QWORD PTR [rip+0x12459]        # 0x418880
  406427:	mov    edx,DWORD PTR [rax]
  406429:	test   edx,edx
  40642b:	jne    0x4064d0
  406431:	mov    rax,QWORD PTR [rip+0x12338]        # 0x418770
  406438:	mov    edx,DWORD PTR [rax]
  40643a:	test   edx,edx
  40643c:	jne    0x406470
  40643e:	mov    rax,QWORD PTR [rip+0x1238b]        # 0x4187d0
  406445:	mov    eax,DWORD PTR [rax]
  406447:	test   eax,eax
  406449:	je     0x406453
  40644b:	mov    rcx,rdi
  40644e:	call   0x4058b0
  406453:	mov    rcx,rdi
  406456:	call   0x4109d8
  40645b:	nop
  40645c:	add    rsp,0x40
  406460:	pop    rbx
  406461:	pop    rsi
  406462:	pop    rdi
  406463:	pop    rbp
  406464:	pop    r12
  406466:	pop    r13
  406468:	pop    r14
  40646a:	ret    
  40646b:	nop    DWORD PTR [rax+rax*1+0x0]
  406470:	mov    rcx,rdi
  406473:	call   0x4049b0
  406478:	jmp    0x40643e
  40647a:	nop    WORD PTR [rax+rax*1+0x0]
  406480:	call   0x410938
  406485:	lea    rcx,[rax+0x5]
  406489:	mov    rsi,rax
  40648c:	call   0x410998
  406491:	test   rax,rax
  406494:	mov    rdi,rax
  406497:	je     0x4067b8
  40649d:	lea    r8,[rsi+0x1]
  4064a1:	mov    rdx,rbx
  4064a4:	mov    rcx,rax
  4064a7:	call   0x410990
  4064ac:	mov    rax,QWORD PTR [rip+0x123cd]        # 0x418880
  4064b3:	mov    edx,DWORD PTR [rax]
  4064b5:	cmp    edx,0xffffffff
  4064b8:	jne    0x4067a0
  4064be:	add    rsi,rdi
  4064c1:	mov    DWORD PTR [rsi],0x6664632e
  4064c7:	mov    BYTE PTR [rsi+0x4],0x0
  4064cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4064d0:	mov    rax,QWORD PTR [rip+0x122b9]        # 0x418790
  4064d7:	mov    r8,QWORD PTR [rip+0x12382]        # 0x418860
  4064de:	mov    rcx,rdi
  4064e1:	mov    edx,DWORD PTR [rax]
  4064e3:	call   0x40a590
  4064e8:	test   eax,eax
  4064ea:	jne    0x406794
  4064f0:	mov    r12,QWORD PTR [rip+0x12379]        # 0x418870
  4064f7:	mov    r10d,DWORD PTR [r12]
  4064fb:	test   r10d,r10d
  4064fe:	jle    0x4067ac
  406504:	xor    ebp,ebp
  406506:	xor    esi,esi
  406508:	mov    r14,QWORD PTR [rip+0x122b1]        # 0x4187c0
  40650f:	lea    r13,[rsp+0x38]
  406514:	mov    rbx,QWORD PTR [rip+0x12345]        # 0x418860
  40651b:	jmp    0x40652d
  40651d:	nop    DWORD PTR [rax]
  406520:	add    esi,0x1
  406523:	add    rbp,0x18
  406527:	cmp    esi,DWORD PTR [r12]
  40652b:	jge    0x40655c
  40652d:	mov    rax,rbp
  406530:	add    rax,QWORD PTR [r14]
  406533:	mov    ecx,DWORD PTR [rbx]
  406535:	mov    r9,r13
  406538:	mov    rdx,QWORD PTR [rax+0x8]
  40653c:	mov    r8,QWORD PTR [rax]
  40653f:	call   0x40a588
  406544:	test   eax,eax
  406546:	je     0x406520
  406548:	mov    ecx,eax
  40654a:	add    esi,0x1
  40654d:	add    rbp,0x18
  406551:	call   0x403030
  406556:	cmp    esi,DWORD PTR [r12]
  40655a:	jl     0x40652d
  40655c:	mov    r12,QWORD PTR [rip+0x1234d]        # 0x4188b0
  406563:	mov    r9d,DWORD PTR [r12]
  406567:	test   r9d,r9d
  40656a:	jle    0x4065cb
  40656c:	xor    ebp,ebp
  40656e:	xor    esi,esi
  406570:	mov    r14,QWORD PTR [rip+0x123f9]        # 0x418970
  406577:	lea    r13,[rsp+0x3c]
  40657c:	jmp    0x40658d
  40657e:	xchg   ax,ax
  406580:	add    esi,0x1
  406583:	add    rbp,0x40
  406587:	cmp    esi,DWORD PTR [r12]
  40658b:	jge    0x4065cb
  40658d:	mov    rdx,rbp
  406590:	add    rdx,QWORD PTR [r14]
  406593:	mov    r9d,DWORD PTR [rdx+0xc]
  406597:	mov    r8d,DWORD PTR [rdx+0x8]
  40659b:	mov    QWORD PTR [rsp+0x28],r13
  4065a0:	mov    rax,QWORD PTR [rdx+0x10]
  4065a4:	mov    QWORD PTR [rsp+0x20],rax
  4065a9:	mov    rdx,QWORD PTR [rdx]
  4065ac:	mov    ecx,DWORD PTR [rbx]
  4065ae:	call   0x40a580
  4065b3:	test   eax,eax
  4065b5:	je     0x406580
  4065b7:	mov    ecx,eax
  4065b9:	add    esi,0x1
  4065bc:	add    rbp,0x40
  4065c0:	call   0x403030
  4065c5:	cmp    esi,DWORD PTR [r12]
  4065c9:	jl     0x40658d
  4065cb:	mov    rbp,QWORD PTR [rip+0x1226e]        # 0x418840
  4065d2:	mov    r8d,DWORD PTR [rbp+0x0]
  4065d6:	test   r8d,r8d
  4065d9:	jle    0x406659
  4065db:	mov    r12,QWORD PTR [rip+0x1217e]        # 0x418760
  4065e2:	lea    rsi,[rip+0xe59f]        # 0x414b88
  4065e9:	xor    r14d,r14d
  4065ec:	xor    r13d,r13d
  4065ef:	nop
  4065f0:	mov    r10,r14
  4065f3:	add    r10,QWORD PTR [r12]
  4065f7:	cmp    DWORD PTR [r10+0x10],0x6
  4065fc:	mov    edx,DWORD PTR [r10]
  4065ff:	mov    DWORD PTR [rsp+0x3c],edx
  406603:	ja     0x406760
  406609:	mov    eax,DWORD PTR [r10+0x10]
  40660d:	movsxd r8,DWORD PTR [rsi+rax*4]
  406611:	add    r8,rsi
  406614:	jmp    r8
  406617:	nop    WORD PTR [rax+rax*1+0x0]
  406620:	mov    rax,QWORD PTR [r10+0x20]
  406624:	mov    r8,QWORD PTR [r10+0x8]
  406628:	mov    r9d,0x6
  40662e:	mov    QWORD PTR [rsp+0x28],rax
  406633:	mov    rax,QWORD PTR [r10+0x18]
  406637:	mov    QWORD PTR [rsp+0x20],rax
  40663c:	mov    ecx,DWORD PTR [rbx]
  40663e:	call   0x40a568
  406643:	test   eax,eax
  406645:	jne    0x406765
  40664b:	add    r13d,0x1
  40664f:	add    r14,0x30
  406653:	cmp    r13d,DWORD PTR [rbp+0x0]
  406657:	jl     0x4065f0
  406659:	mov    rax,QWORD PTR [rip+0x12240]        # 0x4188a0
  406660:	mov    ecx,DWORD PTR [rax]
  406662:	test   ecx,ecx
  406664:	jne    0x406771
  40666a:	mov    ecx,DWORD PTR [rbx]
  40666c:	call   0x40a578
  406671:	test   eax,eax
  406673:	je     0x406431
  406679:	mov    ecx,eax
  40667b:	call   0x403030
  406680:	jmp    0x406431
  406685:	mov    rax,QWORD PTR [r10+0x20]
  406689:	mov    r8,QWORD PTR [r10+0x8]
  40668d:	mov    r9d,0x5
  406693:	mov    QWORD PTR [rsp+0x28],rax
  406698:	mov    rax,QWORD PTR [r10+0x18]
  40669c:	mov    QWORD PTR [rsp+0x20],rax
  4066a1:	mov    ecx,DWORD PTR [rbx]
  4066a3:	call   0x40a560
  4066a8:	jmp    0x406643
  4066aa:	nop    WORD PTR [rax+rax*1+0x0]
  4066b0:	mov    rax,QWORD PTR [r10+0x20]
  4066b4:	mov    r8,QWORD PTR [r10+0x8]
  4066b8:	mov    r9d,0x1
  4066be:	mov    QWORD PTR [rsp+0x28],rax
  4066c3:	mov    rax,QWORD PTR [r10+0x18]
  4066c7:	mov    QWORD PTR [rsp+0x20],rax
  4066cc:	mov    ecx,DWORD PTR [rbx]
  4066ce:	call   0x40a550
  4066d3:	jmp    0x406643
  4066d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4066e0:	mov    rax,QWORD PTR [r10+0x20]
  4066e4:	mov    r8,QWORD PTR [r10+0x8]
  4066e8:	mov    r9d,0x3
  4066ee:	mov    QWORD PTR [rsp+0x28],rax
  4066f3:	mov    rax,QWORD PTR [r10+0x18]
  4066f7:	mov    QWORD PTR [rsp+0x20],rax
  4066fc:	mov    ecx,DWORD PTR [rbx]
  4066fe:	call   0x40a548
  406703:	jmp    0x406643
  406708:	nop    DWORD PTR [rax+rax*1+0x0]
  406710:	mov    rax,QWORD PTR [r10+0x20]
  406714:	mov    r9,QWORD PTR [r10+0x18]
  406718:	mov    r8,QWORD PTR [r10+0x8]
  40671c:	mov    QWORD PTR [rsp+0x20],rax
  406721:	mov    ecx,DWORD PTR [rbx]
  406723:	call   0x40a540
  406728:	jmp    0x406643
  40672d:	nop    DWORD PTR [rax]
  406730:	mov    rax,QWORD PTR [r10+0x20]
  406734:	mov    r8,QWORD PTR [r10+0x8]
  406738:	mov    r9d,0x4
  40673e:	mov    QWORD PTR [rsp+0x28],rax
  406743:	mov    rax,QWORD PTR [r10+0x18]
  406747:	mov    QWORD PTR [rsp+0x20],rax
  40674c:	mov    ecx,DWORD PTR [rbx]
  40674e:	call   0x40a558
  406753:	jmp    0x406643
  406758:	nop    DWORD PTR [rax+rax*1+0x0]
  406760:	mov    eax,0xffffffd3
  406765:	mov    ecx,eax
  406767:	call   0x403030
  40676c:	jmp    0x40664b
  406771:	mov    ecx,DWORD PTR [rbx]
  406773:	xor    r8d,r8d
  406776:	mov    edx,0x100
  40677b:	call   0x40a508
  406780:	test   eax,eax
  406782:	je     0x40666a
  406788:	mov    ecx,eax
  40678a:	call   0x403030
  40678f:	jmp    0x40666a
  406794:	mov    ecx,eax
  406796:	call   0x403030
  40679b:	jmp    0x4064f0
  4067a0:	mov    DWORD PTR [rdi+rsi*1],0x636e2e
  4067a7:	jmp    0x406429
  4067ac:	mov    rbx,QWORD PTR [rip+0x120ad]        # 0x418860
  4067b3:	jmp    0x40655c
  4067b8:	call   0x4043f0
  4067bd:	nop
  4067be:	xchg   ax,ax
  4067c0:	sub    rsp,0x28
  4067c4:	call   0x410998
  4067c9:	test   rax,rax
  4067cc:	je     0x4067d3
  4067ce:	add    rsp,0x28
  4067d2:	ret    
  4067d3:	call   0x4043f0
  4067d8:	nop
  4067d9:	nop    DWORD PTR [rax+0x0]
  4067e0:	sub    rsp,0x28
  4067e4:	mov    edx,0x1
  4067e9:	call   0x410a28
  4067ee:	test   rax,rax
  4067f1:	je     0x4067f8
  4067f3:	add    rsp,0x28
  4067f7:	ret    
  4067f8:	lea    rcx,[rip+0xd81e]        # 0x41401d
  4067ff:	call   0x4030d0
  406804:	mov    ecx,0x3
  406809:	call   0x410a18
  40680e:	nop
  40680f:	nop
  406810:	push   rbx
  406811:	sub    rsp,0x20
  406815:	mov    rbx,rdx
  406818:	call   0x410978
  40681d:	test   rax,rax
  406820:	jne    0x406827
  406822:	test   rbx,rbx
  406825:	jne    0x40682d
  406827:	add    rsp,0x20
  40682b:	pop    rbx
  40682c:	ret    
  40682d:	lea    rcx,[rip+0xe370]        # 0x414ba4
  406834:	call   0x4030d0
  406839:	mov    ecx,0x3
  40683e:	call   0x410a18
  406843:	nop
  406844:	xchg   ax,ax
  406846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406850:	sub    rsp,0x28
  406854:	mov    edx,0x65
  406859:	call   0x410918
  40685e:	test   rax,rax
  406861:	je     0x406866
  406863:	mov    BYTE PTR [rax],0x64
  406866:	add    rsp,0x28
  40686a:	ret    
  40686b:	nop    DWORD PTR [rax+rax*1+0x0]
  406870:	push   rbx
  406871:	sub    rsp,0x20
  406875:	cmp    ecx,0x0
  406878:	mov    rbx,rdx
  40687b:	je     0x4068a4
  40687d:	mov    eax,ecx
  40687f:	mov    r8d,0x1
  406885:	jle    0x40689e
  406887:	nop    WORD PTR [rax+rax*1+0x0]
  406890:	add    r8d,r8d
  406893:	sar    eax,1
  406895:	jne    0x406890
  406897:	add    ecx,ecx
  406899:	cmp    r8d,ecx
  40689c:	je     0x4068c0
  40689e:	add    rsp,0x20
  4068a2:	pop    rbx
  4068a3:	ret    
  4068a4:	mov    ecx,0x4
  4068a9:	call   0x410998
  4068ae:	test   rax,rax
  4068b1:	je     0x4068d5
  4068b3:	mov    QWORD PTR [rbx],rax
  4068b6:	add    rsp,0x20
  4068ba:	pop    rbx
  4068bb:	ret    
  4068bc:	nop    DWORD PTR [rax+0x0]
  4068c0:	movsxd r8,r8d
  4068c3:	mov    rcx,QWORD PTR [rbx]
  4068c6:	lea    rdx,[r8*4+0x0]
  4068ce:	call   0x406810
  4068d3:	jmp    0x4068b3
  4068d5:	call   0x4043f0
  4068da:	nop
  4068db:	nop    DWORD PTR [rax+rax*1+0x0]
  4068e0:	push   rbx
  4068e1:	sub    rsp,0x20
  4068e5:	cmp    ecx,0x0
  4068e8:	mov    rbx,rdx
  4068eb:	je     0x406914
  4068ed:	mov    eax,ecx
  4068ef:	mov    r8d,0x1
  4068f5:	jle    0x40690e
  4068f7:	nop    WORD PTR [rax+rax*1+0x0]
  406900:	add    r8d,r8d
  406903:	sar    eax,1
  406905:	jne    0x406900
  406907:	add    ecx,ecx
  406909:	cmp    r8d,ecx
  40690c:	je     0x406930
  40690e:	add    rsp,0x20
  406912:	pop    rbx
  406913:	ret    
  406914:	mov    ecx,0x40
  406919:	call   0x410998
  40691e:	test   rax,rax
  406921:	je     0x406944
  406923:	mov    QWORD PTR [rbx],rax
  406926:	add    rsp,0x20
  40692a:	pop    rbx
  40692b:	ret    
  40692c:	nop    DWORD PTR [rax+0x0]
  406930:	movsxd r8,r8d
  406933:	mov    rcx,QWORD PTR [rbx]
  406936:	mov    rdx,r8
  406939:	shl    rdx,0x6
  40693d:	call   0x406810
  406942:	jmp    0x406923
  406944:	call   0x4043f0
  406949:	nop
  40694a:	nop    WORD PTR [rax+rax*1+0x0]
  406950:	push   rbx
  406951:	sub    rsp,0x20
  406955:	cmp    ecx,0x0
  406958:	mov    rbx,rdx
  40695b:	je     0x406984
  40695d:	mov    eax,ecx
  40695f:	mov    r8d,0x1
  406965:	jle    0x40697e
  406967:	nop    WORD PTR [rax+rax*1+0x0]
  406970:	add    r8d,r8d
  406973:	sar    eax,1
  406975:	jne    0x406970
  406977:	add    ecx,ecx
  406979:	cmp    r8d,ecx
  40697c:	je     0x4069a0
  40697e:	add    rsp,0x20
  406982:	pop    rbx
  406983:	ret    
  406984:	mov    ecx,0x18
  406989:	call   0x410998
  40698e:	test   rax,rax
  406991:	je     0x4069b5
  406993:	mov    QWORD PTR [rbx],rax
  406996:	add    rsp,0x20
  40699a:	pop    rbx
  40699b:	ret    
  40699c:	nop    DWORD PTR [rax+0x0]
  4069a0:	movsxd r8,r8d
  4069a3:	mov    rcx,QWORD PTR [rbx]
  4069a6:	lea    rdx,[r8+r8*2]
  4069aa:	shl    rdx,0x3
  4069ae:	call   0x406810
  4069b3:	jmp    0x406993
  4069b5:	call   0x4043f0
  4069ba:	nop
  4069bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4069c0:	push   rbx
  4069c1:	sub    rsp,0x20
  4069c5:	cmp    ecx,0x0
  4069c8:	mov    rbx,rdx
  4069cb:	je     0x4069f4
  4069cd:	mov    eax,ecx
  4069cf:	mov    r8d,0x1
  4069d5:	jle    0x4069ee
  4069d7:	nop    WORD PTR [rax+rax*1+0x0]
  4069e0:	add    r8d,r8d
  4069e3:	sar    eax,1
  4069e5:	jne    0x4069e0
  4069e7:	add    ecx,ecx
  4069e9:	cmp    r8d,ecx
  4069ec:	je     0x406a10
  4069ee:	add    rsp,0x20
  4069f2:	pop    rbx
  4069f3:	ret    
  4069f4:	mov    ecx,0x30
  4069f9:	call   0x410998
  4069fe:	test   rax,rax
  406a01:	je     0x406a25
  406a03:	mov    QWORD PTR [rbx],rax
  406a06:	add    rsp,0x20
  406a0a:	pop    rbx
  406a0b:	ret    
  406a0c:	nop    DWORD PTR [rax+0x0]
  406a10:	movsxd r8,r8d
  406a13:	mov    rcx,QWORD PTR [rbx]
  406a16:	lea    rdx,[r8+r8*2]
  406a1a:	shl    rdx,0x4
  406a1e:	call   0x406810
  406a23:	jmp    0x406a03
  406a25:	call   0x4043f0
  406a2a:	nop
  406a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a30:	push   rbx
  406a31:	sub    rsp,0x20
  406a35:	test   r8,r8
  406a38:	je     0x406ad1
  406a3e:	cmp    BYTE PTR [rcx],0x0
  406a41:	je     0x406ad5
  406a47:	lea    r10,[rcx+0x1]
  406a4b:	lea    rax,[rcx+r8*1]
  406a4f:	jmp    0x406a5c
  406a51:	lea    r10,[r10+0x1]
  406a55:	cmp    BYTE PTR [r10-0x1],0x0
  406a5a:	je     0x406ab0
  406a5c:	cmp    r10,rax
  406a5f:	mov    r9,r10
  406a62:	jne    0x406a51
  406a64:	sub    rax,rcx
  406a67:	mov    rbx,rax
  406a6a:	sub    r8,rbx
  406a6d:	je     0x406abb
  406a6f:	movzx  r11d,BYTE PTR [rdx]
  406a73:	mov    r10,rdx
  406a76:	test   r11b,r11b
  406a79:	je     0x406acc
  406a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a80:	cmp    r8,0x1
  406a84:	je     0x406a91
  406a86:	mov    BYTE PTR [r9],r11b
  406a89:	sub    r8,0x1
  406a8d:	add    r9,0x1
  406a91:	add    r10,0x1
  406a95:	movzx  r11d,BYTE PTR [r10]
  406a99:	test   r11b,r11b
  406a9c:	jne    0x406a80
  406a9e:	sub    r10,rdx
  406aa1:	lea    rax,[r10+rbx*1]
  406aa5:	mov    BYTE PTR [r9],0x0
  406aa9:	add    rsp,0x20
  406aad:	pop    rbx
  406aae:	ret    
  406aaf:	nop
  406ab0:	mov    rbx,r9
  406ab3:	sub    rbx,rcx
  406ab6:	sub    r8,rbx
  406ab9:	jne    0x406a6f
  406abb:	mov    rcx,rdx
  406abe:	call   0x410938
  406ac3:	add    rax,rbx
  406ac6:	add    rsp,0x20
  406aca:	pop    rbx
  406acb:	ret    
  406acc:	xor    r10d,r10d
  406acf:	jmp    0x406aa1
  406ad1:	xor    ebx,ebx
  406ad3:	jmp    0x406abb
  406ad5:	mov    r9,rcx
  406ad8:	xor    ebx,ebx
  406ada:	jmp    0x406a6f
  406adc:	nop    DWORD PTR [rax+0x0]
  406ae0:	push   r15
  406ae2:	push   r14
  406ae4:	push   r13
  406ae6:	push   r12
  406ae8:	push   rbp
  406ae9:	push   rdi
  406aea:	push   rsi
  406aeb:	push   rbx
  406aec:	sub    rsp,0x28
  406af0:	mov    eax,DWORD PTR [rip+0x1518a]        # 0x41bc80
  406af6:	mov    DWORD PTR [rip+0x15188],0x8        # 0x41bc88
  406b00:	mov    rbp,rcx
  406b03:	mov    DWORD PTR [rip+0x15177],0x5        # 0x41bc84
  406b0d:	test   eax,eax
  406b0f:	jne    0x406c14
  406b15:	xor    ebx,ebx
  406b17:	nop    WORD PTR [rax+rax*1+0x0]
  406b20:	mov    ecx,0x2
  406b25:	call   0x410998
  406b2a:	test   rax,rax
  406b2d:	je     0x406da2
  406b33:	lea    rdi,[rip+0x14946]        # 0x41b480
  406b3a:	mov    BYTE PTR [rax],bl
  406b3c:	mov    BYTE PTR [rax+0x1],0x0
  406b40:	mov    QWORD PTR [rdi+rbx*8],rax
  406b44:	add    rbx,0x1
  406b48:	cmp    rbx,0x80
  406b4f:	jne    0x406b20
  406b51:	lea    rbx,[rip+0xe1e8]        # 0x414d40
  406b58:	lea    r12,[rip+0xe3e1]        # 0x414f40
  406b5f:	nop
  406b60:	movsx  rsi,BYTE PTR [rbx]
  406b64:	add    rbx,0x10
  406b68:	mov    rcx,QWORD PTR [rdi+rsi*8]
  406b6c:	call   0x4109d8
  406b71:	mov    rax,QWORD PTR [rbx-0x8]
  406b75:	cmp    rbx,r12
  406b78:	mov    QWORD PTR [rdi+rsi*8],rax
  406b7c:	jne    0x406b60
  406b7e:	mov    r13,QWORD PTR [rip+0x18a57]        # 0x41f5dc
  406b85:	lea    r12,[rip+0x14cf4]        # 0x41b880
  406b8c:	mov    esi,0x80
  406b91:	mov    ecx,0x5
  406b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ba0:	call   0x410998
  406ba5:	test   rax,rax
  406ba8:	mov    rbx,rax
  406bab:	je     0x406da2
  406bb1:	movsxd rdx,DWORD PTR [rip+0x150cc]        # 0x41bc84
  406bb8:	mov    r9d,esi
  406bbb:	mov    rcx,rax
  406bbe:	lea    r8,[rip+0xdfed]        # 0x414bb2
  406bc5:	add    esi,0x1
  406bc8:	add    r12,0x8
  406bcc:	call   r13
  406bcf:	movsxd rcx,DWORD PTR [rip+0x150ae]        # 0x41bc84
  406bd6:	mov    QWORD PTR [r12-0x8],rbx
  406bdb:	cmp    esi,0x100
  406be1:	mov    BYTE PTR [rbx+rcx*1-0x1],0x0
  406be6:	jne    0x406ba0
  406be8:	lea    rsi,[rip+0x14491]        # 0x41b080
  406bef:	xor    ebx,ebx
  406bf1:	mov    rcx,QWORD PTR [rdi+rbx*2]
  406bf5:	call   0x410938
  406bfa:	mov    DWORD PTR [rsi+rbx*1],eax
  406bfd:	add    rbx,0x4
  406c01:	cmp    rbx,0x400
  406c08:	jne    0x406bf1
  406c0a:	mov    DWORD PTR [rip+0x1506c],0x1        # 0x41bc80
  406c14:	movzx  edi,BYTE PTR [rbp+0x0]
  406c18:	test   dil,dil
  406c1b:	je     0x406d70
  406c21:	movsx  eax,dil
  406c25:	mov    rdx,rbp
  406c28:	xor    ebx,ebx
  406c2a:	lea    rsi,[rip+0x1444f]        # 0x41b080
  406c31:	jmp    0x406c45
  406c33:	mov    eax,DWORD PTR [rsi+rcx*4]
  406c36:	add    rdx,0x1
  406c3a:	lea    ebx,[rbx+rax*1-0x1]
  406c3e:	movsx  eax,BYTE PTR [rdx]
  406c41:	test   al,al
  406c43:	je     0x406c60
  406c45:	test   al,al
  406c47:	movsx  rcx,al
  406c4b:	jns    0x406c33
  406c4d:	add    eax,0x100
  406c52:	movsxd rcx,eax
  406c55:	jmp    0x406c33
  406c57:	nop    WORD PTR [rax+rax*1+0x0]
  406c60:	lea    eax,[rdi-0x30]
  406c63:	mov    rcx,rbp
  406c66:	cmp    al,0x9
  406c68:	ja     0x406d36
  406c6e:	call   0x410938
  406c73:	add    ebx,DWORD PTR [rip+0x1500f]        # 0x41bc88
  406c79:	add    ebx,eax
  406c7b:	movsxd r12,ebx
  406c7e:	mov    rcx,r12
  406c81:	call   0x410998
  406c86:	test   rax,rax
  406c89:	mov    r14,rax
  406c8c:	je     0x406da2
  406c92:	movsx  r9d,dil
  406c96:	mov    rdx,r12
  406c99:	lea    r8,[rip+0xdf1a]        # 0x414bba
  406ca0:	mov    rcx,rax
  406ca3:	lea    r13,[rbp+0x1]
  406ca7:	call   QWORD PTR [rip+0x1892f]        # 0x41f5dc
  406cad:	movsxd r12,DWORD PTR [rip+0x14fd4]        # 0x41bc88
  406cb4:	movsx  r9d,BYTE PTR [rbp+0x1]
  406cb9:	mov    rax,r12
  406cbc:	add    r12,r14
  406cbf:	sub    ebx,eax
  406cc1:	test   r9b,r9b
  406cc4:	mov    BYTE PTR [r12],0x0
  406cc9:	je     0x406d8e
  406ccf:	movsxd r15,ebx
  406cd2:	lea    rdi,[rip+0x147a7]        # 0x41b480
  406cd9:	jmp    0x406cfe
  406cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  406ce0:	add    r13,0x1
  406ce4:	movsxd rdx,DWORD PTR [rsi+rbp*4]
  406ce8:	movsx  r9d,BYTE PTR [r13+0x0]
  406ced:	add    r12,rdx
  406cf0:	sub    ebx,edx
  406cf2:	test   r9b,r9b
  406cf5:	je     0x406d8e
  406cfb:	movsxd r15,ebx
  406cfe:	test   r9b,r9b
  406d01:	movsx  rbp,r9b
  406d05:	js     0x406d64
  406d07:	mov    rdx,QWORD PTR [rdi+rbp*8]
  406d0b:	mov    r8,r15
  406d0e:	mov    rcx,r12
  406d11:	call   0x406a30
  406d16:	cmp    r15,rax
  406d19:	ja     0x406ce0
  406d1b:	lea    rdx,[rip+0xdea2]        # 0x414bc4
  406d22:	lea    rcx,[rip+0xdea4]        # 0x414bcd
  406d29:	mov    r8d,0x7ea
  406d2f:	call   0x40c970
  406d34:	jmp    0x406ce0
  406d36:	call   0x410938
  406d3b:	lea    ebx,[rbx+rax*1+0x1]
  406d3f:	movsxd r15,ebx
  406d42:	mov    rcx,r15
  406d45:	call   0x410998
  406d4a:	test   rax,rax
  406d4d:	mov    r12,rax
  406d50:	je     0x406da2
  406d52:	mov    BYTE PTR [rax],0x0
  406d55:	movsx  r9d,dil
  406d59:	mov    r14,rax
  406d5c:	mov    r13,rbp
  406d5f:	jmp    0x406cd2
  406d64:	add    r9d,0x100
  406d6b:	movsxd rbp,r9d
  406d6e:	jmp    0x406d07
  406d70:	mov    rcx,rbp
  406d73:	call   0x410938
  406d78:	lea    ecx,[rax+0x1]
  406d7b:	movsxd rcx,ecx
  406d7e:	call   0x410998
  406d83:	test   rax,rax
  406d86:	mov    r14,rax
  406d89:	je     0x406da2
  406d8b:	mov    BYTE PTR [rax],0x0
  406d8e:	mov    rax,r14
  406d91:	add    rsp,0x28
  406d95:	pop    rbx
  406d96:	pop    rsi
  406d97:	pop    rdi
  406d98:	pop    rbp
  406d99:	pop    r12
  406d9b:	pop    r13
  406d9d:	pop    r14
  406d9f:	pop    r15
  406da1:	ret    
  406da2:	call   0x4043f0
  406da7:	nop
  406da8:	nop    DWORD PTR [rax+rax*1+0x0]
  406db0:	push   rdi
  406db1:	push   rsi
  406db2:	push   rbx
  406db3:	sub    rsp,0x20
  406db7:	mov    rbx,rcx
  406dba:	call   0x410938
  406dbf:	mov    edx,0x5c
  406dc4:	mov    rcx,rbx
  406dc7:	mov    rdi,rax
  406dca:	call   0x410950
  406dcf:	test   rax,rax
  406dd2:	je     0x406e63
  406dd8:	lea    rcx,[rdi+0x1]
  406ddc:	call   0x410998
  406de1:	test   rax,rax
  406de4:	mov    rsi,rax
  406de7:	je     0x406e6b
  406ded:	movzx  r9d,BYTE PTR [rbx]
  406df1:	mov    r11,rax
  406df4:	mov    r10,rbx
  406df7:	test   r9b,r9b
  406dfa:	jne    0x406e14
  406dfc:	jmp    0x406e2f
  406dfe:	xchg   ax,ax
  406e00:	movzx  r9d,BYTE PTR [r10+0x1]
  406e05:	cmp    r9b,0x5c
  406e09:	je     0x406e50
  406e0b:	add    r10,0x1
  406e0f:	test   r9b,r9b
  406e12:	je     0x406e2f
  406e14:	cmp    r9b,0x5c
  406e18:	je     0x406e00
  406e1a:	mov    BYTE PTR [r11],r9b
  406e1d:	movzx  r9d,BYTE PTR [r10+0x1]
  406e22:	add    r11,0x1
  406e26:	add    r10,0x1
  406e2a:	test   r9b,r9b
  406e2d:	jne    0x406e14
  406e2f:	mov    rcx,rbx
  406e32:	mov    BYTE PTR [r11],0x0
  406e36:	mov    r8,rdi
  406e39:	mov    rdx,rsi
  406e3c:	call   0x410920
  406e41:	mov    rcx,rsi
  406e44:	add    rsp,0x20
  406e48:	pop    rbx
  406e49:	pop    rsi
  406e4a:	pop    rdi
  406e4b:	jmp    0x4109d8
  406e50:	mov    BYTE PTR [r11],0x5c
  406e54:	movzx  r9d,BYTE PTR [r10+0x2]
  406e59:	add    r11,0x1
  406e5d:	add    r10,0x1
  406e61:	jmp    0x406e0b
  406e63:	add    rsp,0x20
  406e67:	pop    rbx
  406e68:	pop    rsi
  406e69:	pop    rdi
  406e6a:	ret    
  406e6b:	call   0x4043f0
  406e70:	nop
  406e71:	nop
  406e72:	nop
  406e73:	nop
  406e74:	nop
  406e75:	nop
  406e76:	nop
  406e77:	nop
  406e78:	nop
  406e79:	nop
  406e7a:	nop
  406e7b:	nop
  406e7c:	nop
  406e7d:	nop
  406e7e:	nop
  406e7f:	nop
  406e80:	push   r13
  406e82:	push   r12
  406e84:	push   rbp
  406e85:	push   rdi
  406e86:	push   rsi
  406e87:	push   rbx
  406e88:	mov    rbx,QWORD PTR [rip+0x178a9]        # 0x41e738
  406e8f:	mov    r12,QWORD PTR [rip+0x14ec2]        # 0x41bd58
  406e96:	mov    eax,DWORD PTR [rip+0x14eb4]        # 0x41bd50
  406e9c:	cmp    rbx,r12
  406e9f:	jae    0x406f55
  406ea5:	mov    edi,DWORD PTR [rip+0x14e9d]        # 0x41bd48
  406eab:	mov    rsi,QWORD PTR [rip+0x14e8e]        # 0x41bd40
  406eb2:	lea    rbp,[rip+0x10787]        # 0x417640
  406eb9:	lea    r11,[rip+0x10080]        # 0x416f40
  406ec0:	lea    r10,[rip+0xea79]        # 0x415940
  406ec7:	lea    r13,[rip+0xf472]        # 0x416340
  406ece:	xchg   ax,ax
  406ed0:	movzx  edx,BYTE PTR [rbx]
  406ed3:	mov    ecx,0x1
  406ed8:	test   dl,dl
  406eda:	je     0x406ee7
  406edc:	lea    rcx,[rip+0x1035d]        # 0x417240
  406ee3:	movzx  ecx,BYTE PTR [rcx+rdx*4]
  406ee7:	movsxd r8,eax
  406eea:	cmp    WORD PTR [rbp+r8*2+0x0],0x0
  406ef1:	cmovne rsi,rbx
  406ef5:	cmovne edi,eax
  406ef8:	jmp    0x406f23
  406efa:	nop    WORD PTR [rax+rax*1+0x0]
  406f00:	lea    rax,[rip+0xfe39]        # 0x416d40
  406f07:	movsx  eax,WORD PTR [rax+r8*2]
  406f0c:	cmp    eax,0xeb
  406f11:	jle    0x406f20
  406f13:	lea    rdx,[rip+0x10226]        # 0x417140
  406f1a:	mov    ecx,ecx
  406f1c:	movzx  ecx,BYTE PTR [rdx+rcx*4]
  406f20:	movsxd r8,eax
  406f23:	movsx  edx,WORD PTR [r11+r8*2]
  406f28:	add    edx,ecx
  406f2a:	movsxd r9,edx
  406f2d:	movsx  r9d,WORD PTR [r10+r9*2]
  406f32:	cmp    r9d,eax
  406f35:	jne    0x406f00
  406f37:	add    rbx,0x1
  406f3b:	mov    edx,edx
  406f3d:	cmp    rbx,r12
  406f40:	movsx  eax,WORD PTR [r13+rdx*2+0x0]
  406f46:	jne    0x406ed0
  406f48:	mov    DWORD PTR [rip+0x14dfa],edi        # 0x41bd48
  406f4e:	mov    QWORD PTR [rip+0x14deb],rsi        # 0x41bd40
  406f55:	pop    rbx
  406f56:	pop    rsi
  406f57:	pop    rdi
  406f58:	pop    rbp
  406f59:	pop    r12
  406f5b:	pop    r13
  406f5d:	ret    
  406f5e:	xchg   ax,ax
  406f60:	mov    rax,QWORD PTR [rip+0x14e01]        # 0x41bd68
  406f67:	mov    rdx,QWORD PTR [rip+0x14e0a]        # 0x41bd78
  406f6e:	lea    rdx,[rax+rdx*8]
  406f72:	mov    rax,QWORD PTR [rdx]
  406f75:	mov    ecx,DWORD PTR [rax+0x20]
  406f78:	mov    rax,QWORD PTR [rax+0x10]
  406f7c:	mov    QWORD PTR [rip+0x177b5],rax        # 0x41e738
  406f83:	mov    rdx,QWORD PTR [rdx]
  406f86:	mov    QWORD PTR [rip+0x14dcb],rax        # 0x41bd58
  406f8d:	mov    DWORD PTR [rip+0x14dcd],ecx        # 0x41bd60
  406f93:	mov    rdx,QWORD PTR [rdx]
  406f96:	mov    QWORD PTR [rip+0x14d33],rdx        # 0x41bcd0
  406f9d:	movzx  eax,BYTE PTR [rax]
  406fa0:	mov    BYTE PTR [rip+0x14dbe],al        # 0x41bd64
  406fa6:	ret    
  406fa7:	nop    WORD PTR [rax+rax*1+0x0]
  406fb0:	push   rbx
  406fb1:	sub    rsp,0x20
  406fb5:	mov    rbx,rcx
  406fb8:	call   QWORD PTR [rip+0x185b6]        # 0x41f574
  406fbe:	lea    rdx,[rip+0xdfbb]        # 0x414f80
  406fc5:	lea    rcx,[rax+0x60]
  406fc9:	mov    r8,rbx
  406fcc:	call   0x4109f8
  406fd1:	mov    ecx,0x2
  406fd6:	call   0x410a18
  406fdb:	nop
  406fdc:	nop    DWORD PTR [rax+0x0]
  406fe0:	push   rdi
  406fe1:	push   rsi
  406fe2:	push   rbx
  406fe3:	sub    rsp,0x20
  406fe7:	mov    rcx,QWORD PTR [rip+0x14d7a]        # 0x41bd68
  406fee:	test   rcx,rcx
  406ff1:	je     0x407050
  406ff3:	mov    rbx,QWORD PTR [rip+0x14d76]        # 0x41bd70
  406ffa:	lea    rax,[rbx-0x1]
  406ffe:	cmp    rax,QWORD PTR [rip+0x14d73]        # 0x41bd78
  407005:	jbe    0x407010
  407007:	add    rsp,0x20
  40700b:	pop    rbx
  40700c:	pop    rsi
  40700d:	pop    rdi
  40700e:	ret    
  40700f:	nop
  407010:	lea    esi,[rbx+0x8]
  407013:	movsxd rsi,esi
  407016:	lea    rdx,[rsi*8+0x0]
  40701e:	call   0x410978
  407023:	test   rax,rax
  407026:	mov    QWORD PTR [rip+0x14d3b],rax        # 0x41bd68
  40702d:	je     0x407082
  40702f:	lea    rdx,[rax+rbx*8]
  407033:	mov    ecx,0x8
  407038:	xor    eax,eax
  40703a:	mov    QWORD PTR [rip+0x14d2f],rsi        # 0x41bd70
  407041:	mov    rdi,rdx
  407044:	rep stos QWORD PTR es:[rdi],rax
  407047:	add    rsp,0x20
  40704b:	pop    rbx
  40704c:	pop    rsi
  40704d:	pop    rdi
  40704e:	ret    
  40704f:	nop
  407050:	mov    cl,0x8
  407052:	call   0x410998
  407057:	test   rax,rax
  40705a:	mov    QWORD PTR [rip+0x14d07],rax        # 0x41bd68
  407061:	je     0x407082
  407063:	mov    QWORD PTR [rax],0x0
  40706a:	mov    QWORD PTR [rip+0x14cfb],0x1        # 0x41bd70
  407075:	mov    QWORD PTR [rip+0x14cf8],0x0        # 0x41bd78
  407080:	jmp    0x407007
  407082:	lea    rcx,[rip+0xdeff]        # 0x414f88
  407089:	call   0x406fb0
  40708e:	nop
  40708f:	nop
  407090:	sub    rsp,0x28
  407094:	mov    rax,QWORD PTR [rip+0x11895]        # 0x418930
  40709b:	mov    ecx,0x4e20
  4070a0:	mov    DWORD PTR [rip+0x14d16],0x0        # 0x41bdc0
  4070aa:	mov    DWORD PTR [rax],0x0
  4070b0:	call   0x4067c0
  4070b5:	mov    QWORD PTR [rip+0x14d0c],rax        # 0x41bdc8
  4070bc:	mov    QWORD PTR [rip+0x14cf5],rax        # 0x41bdb8
  4070c3:	mov    QWORD PTR [rip+0x14ce6],rax        # 0x41bdb0
  4070ca:	mov    QWORD PTR [rip+0x14cd7],rax        # 0x41bda8
  4070d1:	mov    QWORD PTR [rip+0x14cc8],rax        # 0x41bda0
  4070d8:	mov    QWORD PTR [rip+0x14cb9],rax        # 0x41bd98
  4070df:	mov    QWORD PTR [rip+0x14caa],rax        # 0x41bd90
  4070e6:	add    rsp,0x28
  4070ea:	ret    
  4070eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4070f0:	push   r15
  4070f2:	push   r14
  4070f4:	push   r13
  4070f6:	push   r12
  4070f8:	push   rbp
  4070f9:	push   rdi
  4070fa:	push   rsi
  4070fb:	push   rbx
  4070fc:	sub    rsp,0x28
  407100:	mov    r12,QWORD PTR [rip+0x11739]        # 0x418840
  407107:	mov    rbp,QWORD PTR [rip+0x11652]        # 0x418760
  40710e:	movsxd rax,DWORD PTR [r12]
  407112:	mov    r13,QWORD PTR [rbp+0x0]
  407116:	test   eax,eax
  407118:	jle    0x4072a9
  40711e:	mov    rdi,QWORD PTR [rip+0x1183b]        # 0x418960
  407125:	xor    esi,esi
  407127:	xor    ebx,ebx
  407129:	movsxd r14,DWORD PTR [rdi]
  40712c:	jmp    0x40713f
  40712e:	xchg   ax,ax
  407130:	movsxd rax,DWORD PTR [r12]
  407134:	add    ebx,0x1
  407137:	add    rsi,0x30
  40713b:	cmp    eax,ebx
  40713d:	jle    0x4071b0
  40713f:	lea    rdx,[r13+rsi*1+0x0]
  407144:	cmp    DWORD PTR [rdx],r14d
  407147:	jne    0x407130
  407149:	lea    rax,[rax+rax*2]
  40714d:	mov    rcx,QWORD PTR [rdx+0x8]
  407151:	shl    rax,0x4
  407155:	mov    r15,QWORD PTR [r13+rax*1+0x8]
  40715a:	movzx  eax,BYTE PTR [r15]
  40715e:	cmp    BYTE PTR [rcx],al
  407160:	jne    0x407130
  407162:	mov    rdx,r15
  407165:	call   0x410948
  40716a:	test   eax,eax
  40716c:	jne    0x407130
  40716e:	mov    rcx,QWORD PTR [rip+0x117fb]        # 0x418970
  407175:	shl    r14,0x6
  407179:	mov    r8,r15
  40717c:	mov    rax,r14
  40717f:	add    ebx,0x1
  407182:	add    rsi,0x30
  407186:	add    rax,QWORD PTR [rcx]
  407189:	lea    rcx,[rip+0xde2a]        # 0x414fba
  407190:	mov    rdx,QWORD PTR [rax]
  407193:	call   0x4030d0
  407198:	movsxd rax,DWORD PTR [r12]
  40719c:	mov    r13,QWORD PTR [rbp+0x0]
  4071a0:	movsxd r14,DWORD PTR [rdi]
  4071a3:	cmp    eax,ebx
  4071a5:	jg     0x40713f
  4071a7:	nop    WORD PTR [rax+rax*1+0x0]
  4071b0:	lea    rax,[rax+rax*2]
  4071b4:	mov    ecx,DWORD PTR [rip+0x14c06]        # 0x41bdc0
  4071ba:	shl    rax,0x4
  4071be:	add    r13,rax
  4071c1:	mov    rax,QWORD PTR [rip+0x11768]        # 0x418930
  4071c8:	mov    DWORD PTR [r13+0x10],ecx
  4071cc:	mov    DWORD PTR [r13+0x0],r14d
  4071d0:	movsxd rbx,DWORD PTR [rax]
  4071d3:	mov    QWORD PTR [r13+0x18],rbx
  4071d7:	call   0x403600
  4071dc:	imul   rax,rbx
  4071e0:	mov    rcx,QWORD PTR [rip+0x14be1]        # 0x41bdc8
  4071e7:	mov    rdx,rax
  4071ea:	call   0x406810
  4071ef:	movsxd rdx,DWORD PTR [r12]
  4071f3:	mov    QWORD PTR [rip+0x14bce],rax        # 0x41bdc8
  4071fa:	lea    r9,[rdx+rdx*2]
  4071fe:	mov    r10,rdx
  407201:	shl    r9,0x4
  407205:	add    r9,QWORD PTR [rbp+0x0]
  407209:	mov    rsi,QWORD PTR [r9+0x8]
  40720d:	mov    QWORD PTR [r9+0x20],rax
  407211:	cmp    BYTE PTR [rsi],0x5f
  407214:	je     0x407230
  407216:	lea    eax,[r10+0x1]
  40721a:	mov    DWORD PTR [r12],eax
  40721e:	add    rsp,0x28
  407222:	pop    rbx
  407223:	pop    rsi
  407224:	pop    rdi
  407225:	pop    rbp
  407226:	pop    r12
  407228:	pop    r13
  40722a:	pop    r14
  40722c:	pop    r15
  40722e:	ret    
  40722f:	nop
  407230:	lea    rbx,[rip+0xdd9d]        # 0x414fd4
  407237:	mov    ecx,0xb
  40723c:	mov    rdi,rbx
  40723f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407241:	jne    0x407216
  407243:	movsxd rdx,DWORD PTR [r9]
  407246:	cmp    edx,0xffffffff
  407249:	je     0x407216
  40724b:	mov    rsi,QWORD PTR [rip+0x1171e]        # 0x418970
  407252:	shl    rdx,0x6
  407256:	mov    ecx,DWORD PTR [r9+0x10]
  40725a:	add    rdx,QWORD PTR [rsi]
  40725d:	lea    r8,[rdx+0x18]
  407261:	mov    rdx,rax
  407264:	call   0x402f80
  407269:	movsxd rax,DWORD PTR [r12]
  40726d:	mov    r10,rax
  407270:	lea    rax,[rax+rax*2]
  407274:	shl    rax,0x4
  407278:	add    rax,QWORD PTR [rbp+0x0]
  40727c:	movsxd rdx,DWORD PTR [rax]
  40727f:	shl    rdx,0x6
  407283:	add    rdx,QWORD PTR [rsi]
  407286:	mov    edi,DWORD PTR [rdx+0x8]
  407289:	cmp    DWORD PTR [rax+0x10],edi
  40728c:	je     0x407216
  40728e:	mov    rdx,QWORD PTR [rdx]
  407291:	lea    rcx,[rip+0xdd47]        # 0x414fdf
  407298:	mov    r8,rbx
  40729b:	call   0x4030d0
  4072a0:	mov    r10d,DWORD PTR [r12]
  4072a4:	jmp    0x407216
  4072a9:	mov    rdx,QWORD PTR [rip+0x116b0]        # 0x418960
  4072b0:	mov    r14d,DWORD PTR [rdx]
  4072b3:	jmp    0x4071b0
  4072b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4072c0:	sub    rsp,0x28
  4072c4:	call   0x4030d0
  4072c9:	mov    eax,0xffffffff
  4072ce:	add    rsp,0x28
  4072d2:	ret    
  4072d3:	nop    DWORD PTR [rax]
  4072d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072e0:	mov    eax,0x1
  4072e5:	ret    
  4072e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072f0:	push   rdi
  4072f1:	push   rsi
  4072f2:	push   rbx
  4072f3:	sub    rsp,0x20
  4072f7:	mov    rdi,rcx
  4072fa:	call   0x406db0
  4072ff:	mov    rbx,QWORD PTR [rip+0x17422]        # 0x41e728
  407306:	test   rbx,rbx
  407309:	je     0x407340
  40730b:	movzx  esi,BYTE PTR [rdi]
  40730e:	jmp    0x407319
  407310:	mov    rbx,QWORD PTR [rbx+0x8]
  407314:	test   rbx,rbx
  407317:	je     0x407340
  407319:	mov    rcx,QWORD PTR [rbx]
  40731c:	cmp    BYTE PTR [rcx],sil
  40731f:	jne    0x407310
  407321:	mov    rdx,rdi
  407324:	call   0x410948
  407329:	test   eax,eax
  40732b:	jne    0x407310
  40732d:	mov    rax,rbx
  407330:	add    rsp,0x20
  407334:	pop    rbx
  407335:	pop    rsi
  407336:	pop    rdi
  407337:	ret    
  407338:	nop    DWORD PTR [rax+rax*1+0x0]
  407340:	xor    eax,eax
  407342:	add    rsp,0x20
  407346:	pop    rbx
  407347:	pop    rsi
  407348:	pop    rdi
  407349:	ret    
  40734a:	nop    WORD PTR [rax+rax*1+0x0]
  407350:	push   rsi
  407351:	push   rbx
  407352:	sub    rsp,0x28
  407356:	mov    rsi,rcx
  407359:	mov    ecx,0x20
  40735e:	call   0x4067c0
  407363:	mov    rcx,rsi
  407366:	mov    rbx,rax
  407369:	call   0x410938
  40736e:	lea    rcx,[rax+0x1]
  407372:	call   0x4067c0
  407377:	mov    rdx,rsi
  40737a:	mov    QWORD PTR [rbx],rax
  40737d:	mov    rcx,rax
  407380:	call   0x410940
  407385:	mov    rax,QWORD PTR [rip+0x1739c]        # 0x41e728
  40738c:	and    BYTE PTR [rbx+0x10],0xf8
  407390:	mov    QWORD PTR [rip+0x17391],rbx        # 0x41e728
  407397:	mov    QWORD PTR [rbx+0x8],rax
  40739b:	mov    rax,rbx
  40739e:	add    rsp,0x28
  4073a2:	pop    rbx
  4073a3:	pop    rsi
  4073a4:	ret    
  4073a5:	nop
  4073a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073b0:	push   rsi
  4073b1:	push   rbx
  4073b2:	sub    rsp,0x28
  4073b6:	mov    rbx,QWORD PTR [rip+0x1736b]        # 0x41e728
  4073bd:	test   rbx,rbx
  4073c0:	je     0x4073de
  4073c2:	mov    rcx,QWORD PTR [rbx]
  4073c5:	mov    rsi,QWORD PTR [rbx+0x8]
  4073c9:	call   0x4109d8
  4073ce:	mov    rcx,rbx
  4073d1:	mov    rbx,rsi
  4073d4:	call   0x4109d8
  4073d9:	test   rsi,rsi
  4073dc:	jne    0x4073c2
  4073de:	mov    QWORD PTR [rip+0x1733f],0x0        # 0x41e728
  4073e9:	add    rsp,0x28
  4073ed:	pop    rbx
  4073ee:	pop    rsi
  4073ef:	ret    
  4073f0:	push   rbx
  4073f1:	sub    rsp,0x20
  4073f5:	mov    rbx,rcx
  4073f8:	call   0x406fe0
  4073fd:	mov    rax,QWORD PTR [rip+0x14964]        # 0x41bd68
  407404:	test   rax,rax
  407407:	je     0x407460
  407409:	mov    rdx,QWORD PTR [rip+0x14968]        # 0x41bd78
  407410:	lea    rax,[rax+rdx*8]
  407414:	mov    rdx,QWORD PTR [rax]
  407417:	cmp    rdx,rbx
  40741a:	je     0x407456
  40741c:	test   rdx,rdx
  40741f:	je     0x407444
  407421:	movzx  ecx,BYTE PTR [rip+0x1493c]        # 0x41bd64
  407428:	mov    rdx,QWORD PTR [rip+0x14929]        # 0x41bd58
  40742f:	mov    BYTE PTR [rdx],cl
  407431:	mov    rcx,QWORD PTR [rax]
  407434:	mov    QWORD PTR [rcx+0x10],rdx
  407438:	mov    ecx,DWORD PTR [rip+0x14922]        # 0x41bd60
  40743e:	mov    rdx,QWORD PTR [rax]
  407441:	mov    DWORD PTR [rdx+0x20],ecx
  407444:	mov    QWORD PTR [rax],rbx
  407447:	call   0x406f60
  40744c:	mov    DWORD PTR [rip+0x148f6],0x1        # 0x41bd4c
  407456:	add    rsp,0x20
  40745a:	pop    rbx
  40745b:	ret    
  40745c:	nop    DWORD PTR [rax+0x0]
  407460:	test   rbx,rbx
  407463:	je     0x407456
  407465:	mov    rax,QWORD PTR [rip+0x1490c]        # 0x41bd78
  40746c:	shl    rax,0x3
  407470:	jmp    0x407444
  407472:	nop    DWORD PTR [rax+0x0]
  407476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407480:	push   rbx
  407481:	sub    rsp,0x20
  407485:	test   rcx,rcx
  407488:	je     0x4074f0
  40748a:	mov    rax,QWORD PTR [rip+0x148d7]        # 0x41bd68
  407491:	test   rax,rax
  407494:	je     0x4074a6
  407496:	mov    rdx,QWORD PTR [rip+0x148db]        # 0x41bd78
  40749d:	lea    rax,[rax+rdx*8]
  4074a1:	cmp    rcx,QWORD PTR [rax]
  4074a4:	je     0x4074e0
  4074a6:	mov    eax,DWORD PTR [rcx+0x24]
  4074a9:	mov    rbx,rcx
  4074ac:	test   eax,eax
  4074ae:	jne    0x4074c0
  4074b0:	mov    rcx,rbx
  4074b3:	add    rsp,0x20
  4074b7:	pop    rbx
  4074b8:	jmp    0x4109d8
  4074bd:	nop    DWORD PTR [rax]
  4074c0:	mov    rcx,QWORD PTR [rcx+0x8]
  4074c4:	call   0x4109d8
  4074c9:	mov    rcx,rbx
  4074cc:	add    rsp,0x20
  4074d0:	pop    rbx
  4074d1:	jmp    0x4109d8
  4074d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074e0:	mov    QWORD PTR [rax],0x0
  4074e7:	jmp    0x4074a6
  4074e9:	nop    DWORD PTR [rax+0x0]
  4074f0:	add    rsp,0x20
  4074f4:	pop    rbx
  4074f5:	ret    
  4074f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407500:	test   rcx,rcx
  407503:	je     0x40754a
  407505:	mov    rax,QWORD PTR [rcx+0x8]
  407509:	mov    DWORD PTR [rcx+0x20],0x0
  407510:	mov    BYTE PTR [rax],0x0
  407513:	mov    rax,QWORD PTR [rcx+0x8]
  407517:	mov    BYTE PTR [rax+0x1],0x0
  40751b:	mov    rax,QWORD PTR [rcx+0x8]
  40751f:	mov    DWORD PTR [rcx+0x2c],0x1
  407526:	mov    DWORD PTR [rcx+0x3c],0x0
  40752d:	mov    QWORD PTR [rcx+0x10],rax
  407531:	mov    rax,QWORD PTR [rip+0x14830]        # 0x41bd68
  407538:	test   rax,rax
  40753b:	je     0x40754a
  40753d:	mov    rdx,QWORD PTR [rip+0x14834]        # 0x41bd78
  407544:	cmp    rcx,QWORD PTR [rax+rdx*8]
  407548:	je     0x407550
  40754a:	repz ret 
  40754c:	nop    DWORD PTR [rax+0x0]
  407550:	jmp    0x406f60
  407555:	nop
  407556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407560:	push   rbp
  407561:	push   rdi
  407562:	push   rsi
  407563:	push   rbx
  407564:	sub    rsp,0x28
  407568:	mov    rdi,QWORD PTR [rip+0x1803d]        # 0x41f5ac
  40756f:	mov    rbx,rcx
  407572:	mov    rsi,rdx
  407575:	call   rdi
  407577:	mov    rcx,rbx
  40757a:	mov    ebp,DWORD PTR [rax]
  40757c:	call   0x407500
  407581:	mov    rax,QWORD PTR [rip+0x147e0]        # 0x41bd68
  407588:	mov    QWORD PTR [rbx],rsi
  40758b:	mov    DWORD PTR [rbx+0x38],0x1
  407592:	test   rax,rax
  407595:	je     0x4075a4
  407597:	mov    rdx,QWORD PTR [rip+0x147da]        # 0x41bd78
  40759e:	cmp    rbx,QWORD PTR [rax+rdx*8]
  4075a2:	je     0x4075b2
  4075a4:	mov    DWORD PTR [rbx+0x30],0x1
  4075ab:	mov    DWORD PTR [rbx+0x34],0x0
  4075b2:	xor    eax,eax
  4075b4:	test   rsi,rsi
  4075b7:	je     0x4075d0
  4075b9:	mov    rcx,rsi
  4075bc:	call   0x4108f0
  4075c1:	mov    ecx,eax
  4075c3:	call   0x4108f8
  4075c8:	test   eax,eax
  4075ca:	setg   al
  4075cd:	movzx  eax,al
  4075d0:	mov    DWORD PTR [rbx+0x28],eax
  4075d3:	call   rdi
  4075d5:	mov    DWORD PTR [rax],ebp
  4075d7:	add    rsp,0x28
  4075db:	pop    rbx
  4075dc:	pop    rsi
  4075dd:	pop    rdi
  4075de:	pop    rbp
  4075df:	ret    
  4075e0:	push   rdi
  4075e1:	push   rsi
  4075e2:	push   rbx
  4075e3:	sub    rsp,0x20
  4075e7:	mov    rdi,rcx
  4075ea:	mov    ecx,0x40
  4075ef:	mov    esi,edx
  4075f1:	call   0x410998
  4075f6:	test   rax,rax
  4075f9:	mov    rbx,rax
  4075fc:	je     0x407634
  4075fe:	movsxd rax,esi
  407601:	lea    rcx,[rax+0x2]
  407605:	mov    QWORD PTR [rbx+0x18],rax
  407609:	call   0x410998
  40760e:	test   rax,rax
  407611:	mov    QWORD PTR [rbx+0x8],rax
  407615:	je     0x407634
  407617:	mov    rdx,rdi
  40761a:	mov    rcx,rbx
  40761d:	mov    DWORD PTR [rbx+0x24],0x1
  407624:	call   0x407560
  407629:	mov    rax,rbx
  40762c:	add    rsp,0x20
  407630:	pop    rbx
  407631:	pop    rsi
  407632:	pop    rdi
  407633:	ret    
  407634:	lea    rcx,[rip+0xd9c5]        # 0x415000
  40763b:	call   0x406fb0
  407640:	nop
  407641:	nop    DWORD PTR [rax+rax*1+0x0]
  407646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407650:	push   rsi
  407651:	push   rbx
  407652:	sub    rsp,0x28
  407656:	mov    rax,QWORD PTR [rip+0x1470b]        # 0x41bd68
  40765d:	mov    rbx,rcx
  407660:	test   rax,rax
  407663:	je     0x407690
  407665:	mov    rdx,QWORD PTR [rip+0x1470c]        # 0x41bd78
  40766c:	mov    rcx,QWORD PTR [rax+rdx*8]
  407670:	test   rcx,rcx
  407673:	je     0x407690
  407675:	mov    rdx,rbx
  407678:	call   0x407560
  40767d:	nop
  40767e:	add    rsp,0x28
  407682:	pop    rbx
  407683:	pop    rsi
  407684:	jmp    0x406f60
  407689:	nop    DWORD PTR [rax+0x0]
  407690:	call   0x406fe0
  407695:	mov    rdx,QWORD PTR [rip+0x146dc]        # 0x41bd78
  40769c:	mov    rax,QWORD PTR [rip+0x146c5]        # 0x41bd68
  4076a3:	mov    rcx,QWORD PTR [rip+0x14626]        # 0x41bcd0
  4076aa:	lea    rsi,[rax+rdx*8]
  4076ae:	mov    edx,0x4000
  4076b3:	call   0x4075e0
  4076b8:	mov    QWORD PTR [rsi],rax
  4076bb:	mov    rax,QWORD PTR [rip+0x146a6]        # 0x41bd68
  4076c2:	xor    ecx,ecx
  4076c4:	test   rax,rax
  4076c7:	je     0x407675
  4076c9:	mov    rdx,QWORD PTR [rip+0x146a8]        # 0x41bd78
  4076d0:	mov    rcx,QWORD PTR [rax+rdx*8]
  4076d4:	jmp    0x407675
  4076d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076e0:	push   r15
  4076e2:	push   r14
  4076e4:	push   r13
  4076e6:	push   r12
  4076e8:	push   rbp
  4076e9:	push   rdi
  4076ea:	push   rsi
  4076eb:	push   rbx
  4076ec:	sub    rsp,0x78
  4076f0:	mov    eax,DWORD PTR [rip+0x1465e]        # 0x41bd54
  4076f6:	test   eax,eax
  4076f8:	jne    0x40775b
  4076fa:	mov    eax,DWORD PTR [rip+0x14650]        # 0x41bd50
  407700:	mov    DWORD PTR [rip+0x1464a],0x1        # 0x41bd54
  40770a:	test   eax,eax
  40770c:	jne    0x407718
  40770e:	mov    DWORD PTR [rip+0x14638],0x1        # 0x41bd50
  407718:	cmp    QWORD PTR [rip+0x145b0],0x0        # 0x41bcd0
  407720:	je     0x407e78
  407726:	cmp    QWORD PTR [rip+0x1459a],0x0        # 0x41bcc8
  40772e:	je     0x407e62
  407734:	mov    rax,QWORD PTR [rip+0x1462d]        # 0x41bd68
  40773b:	test   rax,rax
  40773e:	je     0x407e32
  407744:	mov    rdx,QWORD PTR [rip+0x1462d]        # 0x41bd78
  40774b:	cmp    QWORD PTR [rax+rdx*8],0x0
  407750:	je     0x407e32
  407756:	call   0x406f60
  40775b:	lea    rax,[rip+0x16fd6]        # 0x41e738
  407762:	lea    rbx,[rip+0xf7d7]        # 0x416f40
  407769:	lea    r12,[rip+0xfad0]        # 0x417240
  407770:	lea    r13,[rip+0xfec9]        # 0x417640
  407777:	lea    rsi,[rip+0xe1c2]        # 0x415940
  40777e:	lea    r14,[rip+0xebbb]        # 0x416340
  407785:	mov    QWORD PTR [rsp+0x28],rax
  40778a:	lea    rax,[rip+0x16f93]        # 0x41e724
  407791:	mov    QWORD PTR [rsp+0x30],rax
  407796:	movzx  r8d,BYTE PTR [rip+0x145c6]        # 0x41bd64
  40779e:	mov    rdi,QWORD PTR [rip+0x145b3]        # 0x41bd58
  4077a5:	mov    eax,DWORD PTR [rip+0x145a5]        # 0x41bd50
  4077ab:	mov    rbp,rdi
  4077ae:	mov    BYTE PTR [rdi],r8b
  4077b1:	movsxd rcx,eax
  4077b4:	mov    r9d,DWORD PTR [rip+0x1458d]        # 0x41bd48
  4077bb:	mov    r10,QWORD PTR [rip+0x1457e]        # 0x41bd40
  4077c2:	movsx  edx,WORD PTR [rbx+rcx*2]
  4077c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077d0:	cmp    WORD PTR [r13+rcx*2+0x0],0x0
  4077d7:	movzx  r8d,BYTE PTR [r12+r8*4]
  4077dc:	cmovne r9d,eax
  4077e0:	cmovne r10,rbp
  4077e4:	jmp    0x407815
  4077e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077f0:	lea    rax,[rip+0xf549]        # 0x416d40
  4077f7:	movsx  eax,WORD PTR [rax+rcx*2]
  4077fb:	cmp    eax,0xeb
  407800:	jle    0x40780e
  407802:	lea    rdx,[rip+0xf937]        # 0x417140
  407809:	movzx  r8d,BYTE PTR [rdx+r8*4]
  40780e:	movsxd rcx,eax
  407811:	movsx  edx,WORD PTR [rbx+rcx*2]
  407815:	add    edx,r8d
  407818:	movsxd r11,edx
  40781b:	movsx  r11d,WORD PTR [rsi+r11*2]
  407820:	cmp    r11d,eax
  407823:	jne    0x4077f0
  407825:	mov    edx,edx
  407827:	add    rbp,0x1
  40782b:	movsx  rcx,WORD PTR [r14+rdx*2]
  407830:	movsx  edx,WORD PTR [rbx+rcx*2]
  407834:	mov    rax,rcx
  407837:	cmp    dx,0x4b6
  40783c:	je     0x407845
  40783e:	movzx  r8d,BYTE PTR [rbp+0x0]
  407843:	jmp    0x4077d0
  407845:	movsx  eax,WORD PTR [r13+rcx*2+0x0]
  40784b:	mov    QWORD PTR [rip+0x144ee],r10        # 0x41bd40
  407852:	mov    DWORD PTR [rip+0x144ef],r9d        # 0x41bd48
  407859:	test   eax,eax
  40785b:	jne    0x407871
  40785d:	movsxd rax,DWORD PTR [rip+0x144e4]        # 0x41bd48
  407864:	mov    rbp,QWORD PTR [rip+0x144d5]        # 0x41bd40
  40786b:	movsx  eax,WORD PTR [r13+rax*2+0x0]
  407871:	mov    rcx,QWORD PTR [rsp+0x28]
  407876:	mov    rdx,rbp
  407879:	mov    QWORD PTR [rip+0x144d8],rbp        # 0x41bd58
  407880:	sub    rdx,rdi
  407883:	mov    QWORD PTR [rcx],rdi
  407886:	mov    rcx,QWORD PTR [rsp+0x30]
  40788b:	mov    DWORD PTR [rcx],edx
  40788d:	movzx  edx,BYTE PTR [rbp+0x0]
  407891:	mov    BYTE PTR [rbp+0x0],0x0
  407895:	mov    BYTE PTR [rip+0x144c9],dl        # 0x41bd64
  40789b:	cmp    eax,0x20
  40789e:	ja     0x407e8a
  4078a4:	lea    rcx,[rip+0xd981]        # 0x41522c
  4078ab:	mov    eax,eax
  4078ad:	movsxd rax,DWORD PTR [rcx+rax*4]
  4078b1:	add    rax,rcx
  4078b4:	jmp    rax
  4078b6:	movsxd rdx,DWORD PTR [rip+0x16e67]        # 0x41e724
  4078bd:	mov    r9,QWORD PTR [rip+0x14404]        # 0x41bcc8
  4078c4:	mov    r8d,0x1
  4078ca:	mov    rcx,QWORD PTR [rip+0x16e67]        # 0x41e738
  4078d1:	call   0x4109c8
  4078d6:	xor    ebx,ebx
  4078d8:	mov    eax,ebx
  4078da:	add    rsp,0x78
  4078de:	pop    rbx
  4078df:	pop    rsi
  4078e0:	pop    rdi
  4078e1:	pop    rbp
  4078e2:	pop    r12
  4078e4:	pop    r13
  4078e6:	pop    r14
  4078e8:	pop    r15
  4078ea:	ret    
  4078eb:	sub    rbx,0x1
  4078ef:	movsx  ecx,BYTE PTR [rbx]
  4078f2:	call   rdi
  4078f4:	test   eax,eax
  4078f6:	jne    0x4078eb
  4078f8:	add    rbx,0x1
  4078fc:	sub    rbx,rsi
  4078ff:	jns    0x407e96
  407905:	lea    rcx,[rip+0xd73d]        # 0x415049
  40790c:	call   0x4030d0
  407911:	mov    ebx,0x114
  407916:	jmp    0x4078d8
  407918:	mov    ebx,0x112
  40791d:	jmp    0x4078d8
  40791f:	movsxd rdx,DWORD PTR [rip+0x16dfe]        # 0x41e724
  407926:	mov    rax,QWORD PTR [rip+0x16e0b]        # 0x41e738
  40792d:	mov    rdi,QWORD PTR [rip+0x17d48]        # 0x41f67c
  407934:	lea    rsi,[rax+0x6]
  407938:	lea    rbx,[rax+rdx*1-0x1]
  40793d:	jmp    0x407943
  40793f:	add    rsi,0x1
  407943:	movsx  ecx,BYTE PTR [rsi]
  407946:	call   rdi
  407948:	test   eax,eax
  40794a:	jne    0x40793f
  40794c:	jmp    0x4078ef
  40794e:	mov    rax,QWORD PTR [rip+0x16de3]        # 0x41e738
  407955:	cmp    BYTE PTR [rax],0x2d
  407958:	je     0x407f7e
  40795e:	movsd  xmm3,QWORD PTR [rip+0x1037a]        # 0x417ce0
  407966:	mov    ebx,0x110
  40796b:	movsd  QWORD PTR [rip+0x1447d],xmm3        # 0x41bdf0
  407973:	jmp    0x4078d8
  407978:	mov    ebx,0x106
  40797d:	jmp    0x4078d8
  407982:	mov    ebx,0x108
  407987:	jmp    0x4078d8
  40798c:	mov    DWORD PTR [rip+0x1444e],0xffffffff        # 0x41bde4
  407996:	mov    ebx,0x102
  40799b:	jmp    0x4078d8
  4079a0:	mov    ebx,0x111
  4079a5:	jmp    0x4078d8
  4079aa:	mov    rax,QWORD PTR [rip+0x16d87]        # 0x41e738
  4079b1:	movzx  ecx,BYTE PTR [rax+0x2]
  4079b5:	lea    eax,[rcx-0x27]
  4079b8:	cmp    al,0x4f
  4079ba:	ja     0x40852b
  4079c0:	movzx  edx,al
  4079c3:	lea    rax,[rip+0xd8e6]        # 0x4152b0
  4079ca:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4079ce:	add    rax,rdx
  4079d1:	jmp    rax
  4079d3:	mov    rcx,QWORD PTR [rsp+0x28]
  4079d8:	mov    rax,rbp
  4079db:	mov    r8,QWORD PTR [rip+0x14386]        # 0x41bd68
  4079e2:	mov    rdx,QWORD PTR [rip+0x1438f]        # 0x41bd78
  4079e9:	sub    rax,QWORD PTR [rcx]
  4079ec:	lea    r9,[r8+rdx*8]
  4079f0:	sub    eax,0x1
  4079f3:	mov    DWORD PTR [rsp+0x44],eax
  4079f7:	movzx  eax,BYTE PTR [rip+0x14366]        # 0x41bd64
  4079fe:	mov    BYTE PTR [rbp+0x0],al
  407a01:	mov    r11,QWORD PTR [r9]
  407a04:	mov    eax,DWORD PTR [r11+0x3c]
  407a08:	test   eax,eax
  407a0a:	je     0x407ecd
  407a10:	mov    eax,DWORD PTR [rip+0x1434a]        # 0x41bd60
  407a16:	mov    r10,QWORD PTR [r11+0x8]
  407a1a:	movsxd r15,eax
  407a1d:	mov    rcx,QWORD PTR [rip+0x14334]        # 0x41bd58
  407a24:	lea    rax,[r10+r15*1]
  407a28:	cmp    rax,rcx
  407a2b:	mov    QWORD PTR [rsp+0x38],rax
  407a30:	jae    0x408479
  407a36:	mov    rax,QWORD PTR [rsp+0x28]
  407a3b:	lea    r15,[r10+r15*1+0x1]
  407a40:	cmp    rcx,r15
  407a43:	mov    rax,QWORD PTR [rax]
  407a46:	ja     0x40846d
  407a4c:	mov    r15d,DWORD PTR [r11+0x38]
  407a50:	sub    rcx,rax
  407a53:	test   r15d,r15d
  407a56:	jne    0x407fc3
  407a5c:	cmp    rcx,0x1
  407a60:	je     0x407f98
  407a66:	mov    rbp,QWORD PTR [rsp+0x38]
  407a6b:	mov    QWORD PTR [rip+0x142e6],rbp        # 0x41bd58
  407a72:	call   0x406e80
  407a77:	mov    rdi,QWORD PTR [rsp+0x28]
  407a7c:	cdqe   
  407a7e:	movsx  eax,WORD PTR [r13+rax*2+0x0]
  407a84:	mov    rdi,QWORD PTR [rdi]
  407a87:	jmp    0x407859
  407a8c:	movzx  eax,BYTE PTR [rip+0x142d1]        # 0x41bd64
  407a93:	mov    BYTE PTR [rbp+0x0],al
  407a96:	movsxd rax,DWORD PTR [rip+0x142ab]        # 0x41bd48
  407a9d:	mov    rbp,QWORD PTR [rip+0x1429c]        # 0x41bd40
  407aa4:	movsx  eax,WORD PTR [r13+rax*2+0x0]
  407aaa:	jmp    0x407859
  407aaf:	mov    r8d,DWORD PTR [rip+0x16c6e]        # 0x41e724
  407ab6:	cmp    r8d,0x1388
  407abd:	jg     0x407f58
  407ac3:	mov    rdx,QWORD PTR [rip+0x16c6e]        # 0x41e738
  407aca:	lea    rcx,[rip+0x1432f]        # 0x41be00
  407ad1:	mov    ebx,0x10a
  407ad6:	call   0x402c80
  407adb:	jmp    0x4078d8
  407ae0:	mov    ebx,0x107
  407ae5:	jmp    0x4078d8
  407aea:	mov    ebx,0x104
  407aef:	jmp    0x4078d8
  407af4:	mov    ebx,0x103
  407af9:	jmp    0x4078d8
  407afe:	mov    ebx,0x105
  407b03:	jmp    0x4078d8
  407b08:	mov    rax,QWORD PTR [rip+0x16c29]        # 0x41e738
  407b0f:	cmp    BYTE PTR [rax],0x2d
  407b12:	je     0x407f44
  407b18:	mov    DWORD PTR [rip+0x142c6],0x7cf00000        # 0x41bde8
  407b22:	mov    ebx,0x10f
  407b27:	jmp    0x4078d8
  407b2c:	mov    rax,QWORD PTR [rip+0x16c05]        # 0x41e738
  407b33:	cmp    BYTE PTR [rax],0x5f
  407b36:	je     0x407f1b
  407b3c:	mov    rcx,rax
  407b3f:	mov    ebx,0x109
  407b44:	call   0x4072f0
  407b49:	test   rax,rax
  407b4c:	mov    QWORD PTR [rip+0x16b2d],rax        # 0x41e680
  407b53:	jne    0x4078d8
  407b59:	mov    rcx,QWORD PTR [rip+0x16bd8]        # 0x41e738
  407b60:	call   0x407350
  407b65:	mov    QWORD PTR [rip+0x16b14],rax        # 0x41e680
  407b6c:	jmp    0x4078d8
  407b71:	mov    rax,QWORD PTR [rip+0x10c68]        # 0x4187e0
  407b78:	add    DWORD PTR [rax],0x1
  407b7b:	jmp    0x407796
  407b80:	mov    rcx,QWORD PTR [rip+0x16bb1]        # 0x41e738
  407b87:	lea    r8,[rsp+0x68]
  407b8c:	lea    rdx,[rip+0xd4cd]        # 0x415060
  407b93:	call   0x410960
  407b98:	cmp    eax,0x1
  407b9b:	je     0x407bc2
  407b9d:	lea    rbx,[rip+0x16b1c]        # 0x41e6c0
  407ba4:	mov    r8,QWORD PTR [rip+0x16b8d]        # 0x41e738
  407bab:	lea    rdx,[rip+0xd4b1]        # 0x415063
  407bb2:	mov    rcx,rbx
  407bb5:	call   0x410968
  407bba:	mov    rcx,rbx
  407bbd:	call   0x4030d0
  407bc2:	mov    eax,DWORD PTR [rsp+0x68]
  407bc6:	movsx  edx,al
  407bc9:	mov    BYTE PTR [rip+0x14211],al        # 0x41bde0
  407bcf:	cmp    eax,edx
  407bd1:	je     0x407dc9
  407bd7:	lea    rbx,[rip+0x16ae2]        # 0x41e6c0
  407bde:	mov    r8,QWORD PTR [rip+0x16b53]        # 0x41e738
  407be5:	lea    rdx,[rip+0xd494]        # 0x415080
  407bec:	mov    rcx,rbx
  407bef:	call   0x410968
  407bf4:	mov    rcx,rbx
  407bf7:	call   0x4030d0
  407bfc:	jmp    0x407dc9
  407c01:	mov    rcx,QWORD PTR [rip+0x16b30]        # 0x41e738
  407c08:	lea    r8,[rip+0x141e1]        # 0x41bdf0
  407c0f:	lea    rdx,[rip+0xd494]        # 0x4150aa
  407c16:	mov    ebx,0x110
  407c1b:	call   0x410960
  407c20:	cmp    eax,0x1
  407c23:	je     0x4078d8
  407c29:	mov    r8,QWORD PTR [rip+0x16b08]        # 0x41e738
  407c30:	lea    rdx,[rip+0xd479]        # 0x4150b0
  407c37:	jmp    0x407ca7
  407c39:	mov    rcx,QWORD PTR [rip+0x16af8]        # 0x41e738
  407c40:	lea    r8,[rip+0x141a1]        # 0x41bde8
  407c47:	lea    rdx,[rip+0xd482]        # 0x4150d0
  407c4e:	mov    ebx,0x10f
  407c53:	call   0x410960
  407c58:	cmp    eax,0x1
  407c5b:	je     0x4078d8
  407c61:	mov    r8,QWORD PTR [rip+0x16ad0]        # 0x41e738
  407c68:	lea    rdx,[rip+0xd464]        # 0x4150d3
  407c6f:	jmp    0x407ca7
  407c71:	mov    rcx,QWORD PTR [rip+0x16ac0]        # 0x41e738
  407c78:	lea    r8,[rip+0x14163]        # 0x41bde2
  407c7f:	lea    rdx,[rip+0xd464]        # 0x4150ea
  407c86:	mov    ebx,0x10d
  407c8b:	call   0x410960
  407c90:	cmp    eax,0x1
  407c93:	je     0x4078d8
  407c99:	mov    r8,QWORD PTR [rip+0x16a98]        # 0x41e738
  407ca0:	lea    rdx,[rip+0xd447]        # 0x4150ee
  407ca7:	lea    rsi,[rip+0x16a12]        # 0x41e6c0
  407cae:	mov    rcx,rsi
  407cb1:	call   0x410968
  407cb6:	mov    rcx,rsi
  407cb9:	call   0x4030d0
  407cbe:	jmp    0x4078d8
  407cc3:	mov    rbx,QWORD PTR [rip+0x178e2]        # 0x41f5ac
  407cca:	call   rbx
  407ccc:	mov    rcx,QWORD PTR [rip+0x16a65]        # 0x41e738
  407cd3:	lea    rdx,[rsp+0x68]
  407cd8:	mov    DWORD PTR [rax],0x0
  407cde:	call   0x40bb00
  407ce3:	movsd  QWORD PTR [rip+0x14105],xmm0        # 0x41bdf0
  407ceb:	call   rbx
  407ced:	mov    eax,DWORD PTR [rax]
  407cef:	movsd  xmm0,QWORD PTR [rip+0x140f9]        # 0x41bdf0
  407cf7:	test   eax,eax
  407cf9:	je     0x407d34
  407cfb:	ucomisd xmm0,QWORD PTR [rip+0xffe5]        # 0x417ce8
  407d03:	jp     0x407d34
  407d05:	jne    0x407d34
  407d07:	mov    r8,QWORD PTR [rip+0x16a2a]        # 0x41e738
  407d0e:	lea    rbx,[rip+0x169ab]        # 0x41e6c0
  407d15:	lea    rdx,[rip+0xd3e9]        # 0x415105
  407d1c:	mov    rcx,rbx
  407d1f:	call   0x410968
  407d24:	mov    rcx,rbx
  407d27:	call   0x4030d0
  407d2c:	movsd  xmm0,QWORD PTR [rip+0x140bc]        # 0x41bdf0
  407d34:	movsd  xmm1,QWORD PTR [rip+0xffb4]        # 0x417cf0
  407d3c:	mov    ebx,0x110
  407d41:	ucomisd xmm1,xmm0
  407d45:	ja     0x4078d8
  407d4b:	ucomisd xmm0,QWORD PTR [rip+0xffa5]        # 0x417cf8
  407d53:	ja     0x4078d8
  407d59:	cvttsd2si eax,xmm0
  407d5d:	mov    bl,0xe
  407d5f:	mov    DWORD PTR [rip+0x1407f],eax        # 0x41bde4
  407d65:	jmp    0x4078d8
  407d6a:	mov    rbx,QWORD PTR [rip+0x1783b]        # 0x41f5ac
  407d71:	call   rbx
  407d73:	mov    rcx,QWORD PTR [rip+0x169be]        # 0x41e738
  407d7a:	lea    rdx,[rsp+0x68]
  407d7f:	xor    r8d,r8d
  407d82:	mov    DWORD PTR [rax],0x0
  407d88:	call   0x410910
  407d8d:	mov    esi,eax
  407d8f:	call   rbx
  407d91:	mov    eax,DWORD PTR [rax]
  407d93:	test   eax,eax
  407d95:	jne    0x407ef1
  407d9b:	mov    DWORD PTR [rip+0x14043],esi        # 0x41bde4
  407da1:	mov    ebx,0x10e
  407da6:	jmp    0x4078d8
  407dab:	mov    rax,QWORD PTR [rip+0x16986]        # 0x41e738
  407db2:	lea    r8,[rip+0x14027]        # 0x41bde0
  407db9:	lea    rdx,[rip+0xd376]        # 0x415136
  407dc0:	lea    rcx,[rax+0x1]
  407dc4:	call   0x410960
  407dc9:	mov    ebx,0x10b
  407dce:	jmp    0x4078d8
  407dd3:	mov    rax,QWORD PTR [rip+0x1695e]        # 0x41e738
  407dda:	mov    r8d,0x8
  407de0:	xor    edx,edx
  407de2:	mov    ebx,0x10b
  407de7:	lea    rcx,[rax+0x2]
  407deb:	call   0x410910
  407df0:	mov    BYTE PTR [rip+0x13fea],al        # 0x41bde0
  407df6:	jmp    0x4078d8
  407dfb:	mov    rax,QWORD PTR [rip+0x16936]        # 0x41e738
  407e02:	mov    r8d,0x10
  407e08:	xor    edx,edx
  407e0a:	mov    ebx,0x10b
  407e0f:	lea    rcx,[rax+0x3]
  407e13:	call   0x410910
  407e18:	mov    BYTE PTR [rip+0x13fc2],al        # 0x41bde0
  407e1e:	jmp    0x4078d8
  407e23:	mov    rax,QWORD PTR [rip+0x1690e]        # 0x41e738
  407e2a:	movsx  ebx,BYTE PTR [rax]
  407e2d:	jmp    0x4078d8
  407e32:	call   0x406fe0
  407e37:	mov    rdx,QWORD PTR [rip+0x13f3a]        # 0x41bd78
  407e3e:	mov    rax,QWORD PTR [rip+0x13f23]        # 0x41bd68
  407e45:	mov    rcx,QWORD PTR [rip+0x13e84]        # 0x41bcd0
  407e4c:	lea    rbx,[rax+rdx*8]
  407e50:	mov    edx,0x4000
  407e55:	call   0x4075e0
  407e5a:	mov    QWORD PTR [rbx],rax
  407e5d:	jmp    0x407756
  407e62:	call   QWORD PTR [rip+0x1770c]        # 0x41f574
  407e68:	add    rax,0x30
  407e6c:	mov    QWORD PTR [rip+0x13e55],rax        # 0x41bcc8
  407e73:	jmp    0x407734
  407e78:	call   QWORD PTR [rip+0x176f6]        # 0x41f574
  407e7e:	mov    QWORD PTR [rip+0x13e4b],rax        # 0x41bcd0
  407e85:	jmp    0x407726
  407e8a:	lea    rcx,[rip+0xd367]        # 0x4151f8
  407e91:	call   0x406fb0
  407e96:	lea    rcx,[rbx+0x1]
  407e9a:	call   0x4067c0
  407e9f:	mov    r8,rbx
  407ea2:	mov    rdi,rax
  407ea5:	mov    rdx,rsi
  407ea8:	mov    rcx,rax
  407eab:	mov    QWORD PTR [rip+0x13f1e],rax        # 0x41bdd0
  407eb2:	call   0x410920
  407eb7:	mov    BYTE PTR [rdi+rbx*1],0x0
  407ebb:	mov    rcx,rdi
  407ebe:	mov    ebx,0x113
  407ec3:	call   0x406db0
  407ec8:	jmp    0x4078d8
  407ecd:	mov    rcx,QWORD PTR [rip+0x13dfc]        # 0x41bcd0
  407ed4:	mov    eax,DWORD PTR [r11+0x20]
  407ed8:	mov    QWORD PTR [r11],rcx
  407edb:	mov    r11,QWORD PTR [r9]
  407ede:	mov    DWORD PTR [rip+0x13e7c],eax        # 0x41bd60
  407ee4:	mov    DWORD PTR [r11+0x3c],0x1
  407eec:	jmp    0x407a16
  407ef1:	lea    rbx,[rip+0x167c8]        # 0x41e6c0
  407ef8:	mov    r8,QWORD PTR [rip+0x16839]        # 0x41e738
  407eff:	lea    rdx,[rip+0xd21a]        # 0x415120
  407f06:	mov    rcx,rbx
  407f09:	call   0x410968
  407f0e:	mov    rcx,rbx
  407f11:	call   0x4030d0
  407f16:	jmp    0x407d9b
  407f1b:	lea    rdi,[rip+0xd13c]        # 0x41505e
  407f22:	mov    ecx,0x2
  407f27:	mov    rsi,rax
  407f2a:	mov    ebx,0x115
  407f2f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407f31:	seta   cl
  407f34:	setb   dl
  407f37:	cmp    cl,dl
  407f39:	je     0x4078d8
  407f3f:	jmp    0x407b3c
  407f44:	mov    DWORD PTR [rip+0x13e9a],0xfcf00000        # 0x41bde8
  407f4e:	mov    ebx,0x10f
  407f53:	jmp    0x4078d8
  407f58:	lea    rcx,[rip+0xd0ce]        # 0x41502d
  407f5f:	call   0x4030d0
  407f64:	mov    rdx,QWORD PTR [rip+0x167cd]        # 0x41e738
  407f6b:	mov    r8d,DWORD PTR [rip+0x167b2]        # 0x41e724
  407f72:	mov    BYTE PTR [rdx+0x1387],0x0
  407f79:	jmp    0x407aca
  407f7e:	movsd  xmm2,QWORD PTR [rip+0xfd52]        # 0x417cd8
  407f86:	mov    ebx,0x110
  407f8b:	movsd  QWORD PTR [rip+0x13e5d],xmm2        # 0x41bdf0
  407f93:	jmp    0x4078d8
  407f98:	mov    QWORD PTR [rip+0x13db9],rax        # 0x41bd58
  407f9f:	mov    eax,DWORD PTR [rip+0x13dab]        # 0x41bd50
  407fa5:	mov    DWORD PTR [rip+0x13d9d],0x0        # 0x41bd4c
  407faf:	sub    eax,0x1
  407fb2:	mov    edx,eax
  407fb4:	shr    edx,0x1f
  407fb7:	add    eax,edx
  407fb9:	sar    eax,1
  407fbb:	add    eax,0x20
  407fbe:	jmp    0x40789b
  407fc3:	sub    ecx,0x1
  407fc6:	test   ecx,ecx
  407fc8:	mov    DWORD PTR [rsp+0x38],ecx
  407fcc:	jle    0x407fe6
  407fce:	xor    ecx,ecx
  407fd0:	movzx  r11d,BYTE PTR [rax+rcx*1]
  407fd5:	mov    BYTE PTR [r10+rcx*1],r11b
  407fd9:	add    rcx,0x1
  407fdd:	cmp    DWORD PTR [rsp+0x38],ecx
  407fe1:	jg     0x407fd0
  407fe3:	mov    r11,QWORD PTR [r9]
  407fe6:	cmp    DWORD PTR [r11+0x3c],0x2
  407feb:	je     0x408180
  407ff1:	mov    eax,DWORD PTR [rsp+0x38]
  407ff5:	not    eax
  407ff7:	add    eax,DWORD PTR [r11+0x18]
  407ffb:	test   eax,eax
  407ffd:	jg     0x4080c5
  408003:	mov    QWORD PTR [rsp+0x48],rdi
  408008:	mov    r15,r11
  40800b:	jmp    0x408067
  40800d:	mov    rax,QWORD PTR [r15+0x18]
  408011:	lea    edx,[rax+rax*1]
  408014:	test   edx,edx
  408016:	jle    0x4080aa
  40801c:	add    rax,rax
  40801f:	mov    QWORD PTR [r15+0x18],rax
  408023:	lea    rdx,[rax+0x2]
  408027:	mov    QWORD PTR [rsp+0x58],r8
  40802c:	mov    QWORD PTR [rsp+0x50],r9
  408031:	call   0x410978
  408036:	test   rax,rax
  408039:	mov    QWORD PTR [r15+0x8],rax
  40803d:	mov    r9,QWORD PTR [rsp+0x50]
  408042:	mov    r8,QWORD PTR [rsp+0x58]
  408047:	je     0x40808b
  408049:	movsxd rdi,edi
  40804c:	mov    r15,QWORD PTR [r9]
  40804f:	add    rax,rdi
  408052:	mov    QWORD PTR [rip+0x13cff],rax        # 0x41bd58
  408059:	mov    eax,DWORD PTR [rsp+0x38]
  40805d:	not    eax
  40805f:	add    eax,DWORD PTR [r15+0x18]
  408063:	test   eax,eax
  408065:	jg     0x4080bd
  408067:	test   r8,r8
  40806a:	je     0x4080a0
  40806c:	mov    rcx,QWORD PTR [r15+0x8]
  408070:	mov    rdi,QWORD PTR [rip+0x13ce1]        # 0x41bd58
  408077:	mov    r10d,DWORD PTR [r15+0x24]
  40807b:	sub    rdi,rcx
  40807e:	test   r10d,r10d
  408081:	jne    0x40800d
  408083:	mov    QWORD PTR [r15+0x8],0x0
  40808b:	lea    rcx,[rip+0xd0e6]        # 0x415178
  408092:	call   0x406fb0
  408097:	nop    WORD PTR [rax+rax*1+0x0]
  4080a0:	mov    rax,QWORD PTR ds:0x8
  4080a8:	ud2    
  4080aa:	mov    rdx,rax
  4080ad:	shr    rdx,0x3
  4080b1:	add    rax,rdx
  4080b4:	mov    QWORD PTR [r15+0x18],rax
  4080b8:	jmp    0x408023
  4080bd:	mov    rdi,QWORD PTR [rsp+0x48]
  4080c2:	mov    r11,r15
  4080c5:	cmp    eax,0x2000
  4080ca:	mov    r15d,0x2000
  4080d0:	cmovle r15d,eax
  4080d4:	mov    eax,DWORD PTR [r11+0x28]
  4080d8:	test   eax,eax
  4080da:	je     0x40832c
  4080e0:	movsxd rax,r15d
  4080e3:	xor    r9d,r9d
  4080e6:	xor    r15d,r15d
  4080e9:	mov    QWORD PTR [rsp+0x48],rax
  4080ee:	movsxd r11,DWORD PTR [rsp+0x38]
  4080f3:	jmp    0x408137
  4080f5:	cmp    eax,0xa
  4080f8:	mov    r9,QWORD PTR [rsp+0x50]
  4080fd:	mov    r11,QWORD PTR [rsp+0x58]
  408102:	je     0x408300
  408108:	mov    rdx,QWORD PTR [rip+0x13c69]        # 0x41bd78
  40810f:	mov    r8,QWORD PTR [rip+0x13c52]        # 0x41bd68
  408116:	lea    rcx,[r8+rdx*8]
  40811a:	mov    r10,QWORD PTR [rcx]
  40811d:	add    r9,QWORD PTR [r10+0x8]
  408121:	mov    BYTE PTR [r9+r11*1],al
  408125:	lea    r9d,[r15+0x1]
  408129:	cmp    r9,QWORD PTR [rsp+0x48]
  40812e:	mov    r15,r9
  408131:	jae    0x4082da
  408137:	mov    rcx,QWORD PTR [rip+0x13b92]        # 0x41bcd0
  40813e:	mov    QWORD PTR [rsp+0x58],r11
  408143:	mov    QWORD PTR [rsp+0x50],r9
  408148:	call   0x4109c0
  40814d:	cmp    eax,0xffffffff
  408150:	jne    0x4080f5
  408152:	mov    rcx,QWORD PTR [rip+0x13b77]        # 0x41bcd0
  408159:	call   0x410a10
  40815e:	test   eax,eax
  408160:	jne    0x4083de
  408166:	mov    rdx,QWORD PTR [rip+0x13c0b]        # 0x41bd78
  40816d:	mov    r8,QWORD PTR [rip+0x13bf4]        # 0x41bd68
  408174:	mov    eax,r15d
  408177:	mov    rcx,QWORD PTR [r8+rdx*8]
  40817b:	jmp    0x4082e0
  408180:	mov    DWORD PTR [rip+0x13bd6],0x0        # 0x41bd60
  40818a:	mov    DWORD PTR [r11+0x20],0x0
  408192:	mov    ecx,DWORD PTR [rsp+0x38]
  408196:	test   ecx,ecx
  408198:	je     0x4082a8
  40819e:	lea    r15,[r8+rdx*8]
  4081a2:	xor    eax,eax
  4081a4:	mov    r8d,0x2
  4081aa:	mov    r9,QWORD PTR [r15]
  4081ad:	mov    DWORD PTR [r9+0x3c],0x2
  4081b5:	mov    r10d,DWORD PTR [rsp+0x38]
  4081ba:	add    r10d,eax
  4081bd:	movsxd r11,r10d
  4081c0:	cmp    r11,QWORD PTR [r9+0x18]
  4081c4:	ja     0x40824d
  4081ca:	mov    rax,QWORD PTR [r9+0x8]
  4081ce:	mov    BYTE PTR [rax+r11*1],0x0
  4081d3:	mov    rax,QWORD PTR [r15]
  4081d6:	cmp    r8d,0x1
  4081da:	mov    rcx,QWORD PTR [rsp+0x28]
  4081df:	mov    DWORD PTR [rip+0x13b7a],r10d        # 0x41bd60
  4081e6:	mov    rax,QWORD PTR [rax+0x8]
  4081ea:	mov    BYTE PTR [rax+r11*1+0x1],0x0
  4081f0:	mov    rax,QWORD PTR [r15]
  4081f3:	mov    rax,QWORD PTR [rax+0x8]
  4081f7:	mov    QWORD PTR [rcx],rax
  4081fa:	je     0x407f98
  408200:	cmp    r8d,0x2
  408204:	je     0x40823e
  408206:	movsxd rdx,DWORD PTR [rsp+0x44]
  40820b:	lea    rbp,[rax+rdx*1]
  40820f:	mov    QWORD PTR [rip+0x13b42],rbp        # 0x41bd58
  408216:	call   0x406e80
  40821b:	mov    rdi,QWORD PTR [rsp+0x28]
  408220:	mov    rdi,QWORD PTR [rdi]
  408223:	movzx  r8d,BYTE PTR [rbp+0x0]
  408228:	jmp    0x4077b1
  40822d:	mov    BYTE PTR [rip+0x13bac],0xb        # 0x41bde0
  408234:	mov    ebx,0x10b
  408239:	jmp    0x4078d8
  40823e:	mov    rax,QWORD PTR [r15]
  408241:	add    r11,QWORD PTR [rax+0x8]
  408245:	mov    rbp,r11
  408248:	jmp    0x407a6b
  40824d:	sar    eax,1
  40824f:	mov    rcx,QWORD PTR [r9+0x8]
  408253:	mov    DWORD PTR [rsp+0x58],r8d
  408258:	mov    edx,eax
  40825a:	mov    QWORD PTR [rsp+0x50],r11
  40825f:	mov    DWORD PTR [rsp+0x48],r10d
  408264:	add    edx,r10d
  408267:	mov    QWORD PTR [rsp+0x38],r9
  40826c:	movsxd rdx,edx
  40826f:	call   0x410978
  408274:	mov    r9,QWORD PTR [rsp+0x38]
  408279:	mov    r10d,DWORD PTR [rsp+0x48]
  40827e:	mov    r11,QWORD PTR [rsp+0x50]
  408283:	mov    r8d,DWORD PTR [rsp+0x58]
  408288:	mov    QWORD PTR [r9+0x8],rax
  40828c:	mov    rax,QWORD PTR [r15]
  40828f:	mov    rax,QWORD PTR [rax+0x8]
  408293:	test   rax,rax
  408296:	jne    0x4081ce
  40829c:	lea    rcx,[rip+0xcf25]        # 0x4151c8
  4082a3:	call   0x406fb0
  4082a8:	mov    rcx,QWORD PTR [rip+0x13a21]        # 0x41bcd0
  4082af:	call   0x407650
  4082b4:	mov    rdx,QWORD PTR [rip+0x13aad]        # 0x41bd68
  4082bb:	mov    rcx,QWORD PTR [rip+0x13ab6]        # 0x41bd78
  4082c2:	mov    r8d,0x1
  4082c8:	mov    eax,DWORD PTR [rip+0x13a92]        # 0x41bd60
  4082ce:	lea    r15,[rdx+rcx*8]
  4082d2:	mov    r9,QWORD PTR [r15]
  4082d5:	jmp    0x4081b5
  4082da:	mov    rcx,QWORD PTR [rcx]
  4082dd:	mov    eax,r9d
  4082e0:	mov    DWORD PTR [rip+0x13a7a],eax        # 0x41bd60
  4082e6:	test   eax,eax
  4082e8:	mov    DWORD PTR [rcx+0x20],eax
  4082eb:	je     0x408192
  4082f1:	lea    r15,[r8+rdx*8]
  4082f5:	xor    r8d,r8d
  4082f8:	mov    r9,QWORD PTR [r15]
  4082fb:	jmp    0x4081b5
  408300:	mov    rdx,QWORD PTR [rip+0x13a71]        # 0x41bd78
  408307:	mov    r8,QWORD PTR [rip+0x13a5a]        # 0x41bd68
  40830e:	movsxd rax,DWORD PTR [rsp+0x38]
  408313:	lea    rcx,[r8+rdx*8]
  408317:	mov    r10,QWORD PTR [rcx]
  40831a:	add    r9,QWORD PTR [r10+0x8]
  40831e:	mov    BYTE PTR [r9+rax*1],0xa
  408323:	lea    eax,[r15+0x1]
  408327:	mov    rcx,QWORD PTR [rcx]
  40832a:	jmp    0x4082e0
  40832c:	call   QWORD PTR [rip+0x1727a]        # 0x41f5ac
  408332:	mov    DWORD PTR [rax],0x0
  408338:	movsxd rax,r15d
  40833b:	movsxd r15,DWORD PTR [rsp+0x38]
  408340:	mov    QWORD PTR [rsp+0x48],rax
  408345:	jmp    0x408387
  408347:	nop    WORD PTR [rax+rax*1+0x0]
  408350:	mov    rcx,QWORD PTR [rip+0x13979]        # 0x41bcd0
  408357:	call   0x410a10
  40835c:	test   eax,eax
  40835e:	je     0x4083ea
  408364:	call   QWORD PTR [rip+0x17242]        # 0x41f5ac
  40836a:	cmp    DWORD PTR [rax],0x4
  40836d:	jne    0x4083de
  40836f:	call   QWORD PTR [rip+0x17237]        # 0x41f5ac
  408375:	mov    rcx,QWORD PTR [rip+0x13954]        # 0x41bcd0
  40837c:	mov    DWORD PTR [rax],0x0
  408382:	call   0x410a20
  408387:	mov    rdx,QWORD PTR [rip+0x139ea]        # 0x41bd78
  40838e:	mov    rax,QWORD PTR [rip+0x139d3]        # 0x41bd68
  408395:	mov    rcx,r15
  408398:	mov    r9,QWORD PTR [rip+0x13931]        # 0x41bcd0
  40839f:	mov    r8,QWORD PTR [rsp+0x48]
  4083a4:	mov    rax,QWORD PTR [rax+rdx*8]
  4083a8:	mov    edx,0x1
  4083ad:	add    rcx,QWORD PTR [rax+0x8]
  4083b1:	call   0x4109e0
  4083b6:	mov    rcx,rax
  4083b9:	test   ecx,ecx
  4083bb:	mov    DWORD PTR [rip+0x1399f],ecx        # 0x41bd60
  4083c1:	je     0x408350
  4083c3:	mov    rdx,QWORD PTR [rip+0x139ae]        # 0x41bd78
  4083ca:	mov    r8,QWORD PTR [rip+0x13997]        # 0x41bd68
  4083d1:	mov    r9,QWORD PTR [r8+rdx*8]
  4083d5:	mov    DWORD PTR [r9+0x20],ecx
  4083d9:	jmp    0x4082f1
  4083de:	lea    rcx,[rip+0xcdbf]        # 0x4151a4
  4083e5:	call   0x406fb0
  4083ea:	mov    rdx,QWORD PTR [rip+0x13987]        # 0x41bd78
  4083f1:	mov    r8,QWORD PTR [rip+0x13970]        # 0x41bd68
  4083f8:	mov    eax,DWORD PTR [rip+0x13962]        # 0x41bd60
  4083fe:	mov    rcx,QWORD PTR [r8+rdx*8]
  408402:	jmp    0x4082e6
  408407:	mov    BYTE PTR [rip+0x139d2],0xa        # 0x41bde0
  40840e:	mov    ebx,0x10b
  408413:	jmp    0x4078d8
  408418:	mov    BYTE PTR [rip+0x139c1],0xc        # 0x41bde0
  40841f:	mov    ebx,0x10b
  408424:	jmp    0x4078d8
  408429:	mov    BYTE PTR [rip+0x139b0],0x8        # 0x41bde0
  408430:	mov    ebx,0x10b
  408435:	jmp    0x4078d8
  40843a:	mov    BYTE PTR [rip+0x1399f],0x7        # 0x41bde0
  408441:	mov    ebx,0x10b
  408446:	jmp    0x4078d8
  40844b:	mov    BYTE PTR [rip+0x1398e],0x9        # 0x41bde0
  408452:	mov    ebx,0x10b
  408457:	jmp    0x4078d8
  40845c:	mov    BYTE PTR [rip+0x1397d],0xd        # 0x41bde0
  408463:	mov    ebx,0x10b
  408468:	jmp    0x4078d8
  40846d:	lea    rcx,[rip+0xcccc]        # 0x415140
  408474:	call   0x406fb0
  408479:	mov    rdi,QWORD PTR [rsp+0x28]
  40847e:	movsxd rax,DWORD PTR [rsp+0x44]
  408483:	add    rax,QWORD PTR [rdi]
  408486:	mov    rbp,rax
  408489:	mov    QWORD PTR [rip+0x138c8],rax        # 0x41bd58
  408490:	call   0x406e80
  408495:	movsxd rcx,eax
  408498:	movzx  edx,WORD PTR [r13+rcx*2+0x0]
  40849e:	test   dx,dx
  4084a1:	je     0x4084b0
  4084a3:	mov    DWORD PTR [rip+0x1389f],eax        # 0x41bd48
  4084a9:	mov    QWORD PTR [rip+0x13890],rbp        # 0x41bd40
  4084b0:	movsx  r8d,WORD PTR [rbx+rcx*2]
  4084b5:	lea    r9d,[r8+0x1]
  4084b9:	movsxd r9,r9d
  4084bc:	movsx  r9d,WORD PTR [rsi+r9*2]
  4084c1:	cmp    eax,r9d
  4084c4:	je     0x4084e5
  4084c6:	lea    r10,[rip+0xe873]        # 0x416d40
  4084cd:	movsx  rcx,WORD PTR [r10+rcx*2]
  4084d2:	movsx  r8d,WORD PTR [rbx+rcx*2]
  4084d7:	lea    eax,[r8+0x1]
  4084db:	cdqe   
  4084dd:	movsx  eax,WORD PTR [rsi+rax*2]
  4084e1:	cmp    ecx,eax
  4084e3:	jne    0x4084cd
  4084e5:	lea    eax,[r8+0x1]
  4084e9:	movsx  eax,WORD PTR [r14+rax*2]
  4084ee:	cmp    eax,0xeb
  4084f3:	je     0x40854c
  4084f5:	mov    rdi,QWORD PTR [rsp+0x28]
  4084fa:	test   eax,eax
  4084fc:	mov    rdi,QWORD PTR [rdi]
  4084ff:	jne    0x40855c
  408501:	movsx  eax,dx
  408504:	jmp    0x407859
  408509:	mov    BYTE PTR [rip+0x138d0],0x5c        # 0x41bde0
  408510:	mov    ebx,0x10b
  408515:	jmp    0x4078d8
  40851a:	mov    BYTE PTR [rip+0x138bf],0x27        # 0x41bde0
  408521:	mov    ebx,0x10b
  408526:	jmp    0x4078d8
  40852b:	mov    BYTE PTR [rip+0x138af],cl        # 0x41bde0
  408531:	mov    ebx,0x10b
  408536:	jmp    0x4078d8
  40853b:	mov    BYTE PTR [rip+0x1389e],0x7f        # 0x41bde0
  408542:	mov    ebx,0x10b
  408547:	jmp    0x4078d8
  40854c:	mov    rax,QWORD PTR [rsp+0x28]
  408551:	mov    rdi,QWORD PTR [rax]
  408554:	movsx  eax,dx
  408557:	jmp    0x407859
  40855c:	add    rbp,0x1
  408560:	mov    QWORD PTR [rip+0x137f1],rbp        # 0x41bd58
  408567:	jmp    0x408223
  40856c:	nop    DWORD PTR [rax+0x0]
  408570:	push   r15
  408572:	push   r14
  408574:	push   r13
  408576:	push   r12
  408578:	push   rbp
  408579:	push   rdi
  40857a:	push   rsi
  40857b:	push   rbx
  40857c:	sub    rsp,0x848
  408583:	movaps XMMWORD PTR [rsp+0x830],xmm6
  40858b:	mov    r15d,0xc8
  408591:	xor    ebp,ebp
  408593:	lea    rax,[rsp+0x60]
  408598:	lea    rsi,[rsp+0x1f0]
  4085a0:	mov    DWORD PTR [rip+0x16186],0x0        # 0x41e730
  4085aa:	mov    DWORD PTR [rip+0x1618c],0xfffffffe        # 0x41e740
  4085b4:	mov    rdi,rax
  4085b7:	mov    QWORD PTR [rsp+0x30],rax
  4085bc:	mov    rbx,rax
  4085bf:	mov    rax,QWORD PTR [rip+0x103aa]        # 0x418970
  4085c6:	mov    QWORD PTR [rsp+0x28],rsi
  4085cb:	mov    DWORD PTR [rsp+0x3c],0x0
  4085d3:	mov    QWORD PTR [rsp+0x40],rax
  4085d8:	lea    rax,[r15+r15*1]
  4085dc:	mov    WORD PTR [rbx],bp
  4085df:	lea    rdx,[rdi+rax*1-0x2]
  4085e4:	cmp    rbx,rdx
  4085e7:	jb     0x40868c
  4085ed:	sub    rbx,rdi
  4085f0:	sar    rbx,1
  4085f3:	cmp    r15,0x270f
  4085fa:	lea    rsi,[rbx+0x1]
  4085fe:	ja     0x409cc2
  408604:	cmp    rax,0x2710
  40860a:	mov    r15d,0x2710
  408610:	cmovbe r15,rax
  408614:	lea    rax,[r15+r15*4]
  408618:	lea    rcx,[rax+rax*1+0x7]
  40861d:	call   0x410998
  408622:	test   rax,rax
  408625:	mov    r13,rax
  408628:	je     0x409cc2
  40862e:	lea    rbx,[rsi+rsi*1]
  408632:	mov    rdx,rdi
  408635:	mov    rcx,rax
  408638:	lea    r14,[r13+r15*2+0x0]
  40863d:	shl    rsi,0x3
  408641:	lea    r12,[r15+r15*1]
  408645:	mov    r8,rbx
  408648:	call   0x410990
  40864d:	mov    rdx,QWORD PTR [rsp+0x28]
  408652:	mov    r8,rsi
  408655:	mov    rcx,r14
  408658:	call   0x410990
  40865d:	cmp    rdi,QWORD PTR [rsp+0x30]
  408662:	je     0x40866c
  408664:	mov    rcx,rdi
  408667:	call   0x4109d8
  40866c:	lea    rbx,[r13+rbx*1-0x2]
  408671:	lea    rax,[r13+r12*1-0x2]
  408676:	lea    rsi,[r14+rsi*1-0x8]
  40867b:	cmp    rbx,rax
  40867e:	jae    0x409cdf
  408684:	mov    QWORD PTR [rsp+0x28],r14
  408689:	mov    rdi,r13
  40868c:	cmp    ebp,0x4
  40868f:	je     0x409cd8
  408695:	lea    r14,[rip+0xf2e4]        # 0x417980
  40869c:	movsx  r12d,BYTE PTR [r14+rbp*1]
  4086a1:	cmp    r12d,0xffffffb7
  4086a5:	mov    r13d,r12d
  4086a8:	je     0x4086fa
  4086aa:	mov    eax,DWORD PTR [rip+0x16090]        # 0x41e740
  4086b0:	cmp    eax,0xfffffffe
  4086b3:	je     0x4089b0
  4086b9:	test   eax,eax
  4086bb:	jle    0x408940
  4086c1:	cmp    eax,0x115
  4086c6:	mov    edx,0x2
  4086cb:	jg     0x4086da
  4086cd:	lea    rdx,[rip+0xf4ec]        # 0x417bc0
  4086d4:	cdqe   
  4086d6:	movzx  edx,BYTE PTR [rdx+rax*1]
  4086da:	add    r12d,edx
  4086dd:	cmp    r12d,0x4e
  4086e1:	ja     0x4086fa
  4086e3:	lea    rax,[rip+0xf156]        # 0x417840
  4086ea:	movsxd r12,r12d
  4086ed:	movsx  eax,BYTE PTR [rax+r12*1]
  4086f2:	cmp    eax,edx
  4086f4:	je     0x408970
  4086fa:	lea    rax,[rip+0xf33f]        # 0x417a40
  408701:	movzx  r12d,BYTE PTR [rax+rbp*1]
  408706:	test   r12d,r12d
  408709:	mov    rax,r12
  40870c:	je     0x408870
  408712:	lea    rdx,[rip+0xf3a7]        # 0x417ac0
  408719:	movsxd r12,r12d
  40871c:	movzx  ecx,BYTE PTR [rdx+r12*1]
  408721:	mov    edx,0x1
  408726:	sub    edx,ecx
  408728:	cmp    al,0x4f
  40872a:	mov    rbp,rcx
  40872d:	movsxd rdx,edx
  408730:	mov    r14,QWORD PTR [rsi+rdx*8]
  408734:	ja     0x4087f0
  40873a:	lea    rdx,[rip+0xcf13]        # 0x415654
  408741:	movsxd rax,DWORD PTR [rdx+rax*4]
  408745:	add    rdx,rax
  408748:	jmp    rdx
  40874a:	pxor   xmm6,xmm6
  40874e:	movsd  xmm0,QWORD PTR [rip+0x1369a]        # 0x41bdf0
  408756:	ucomisd xmm6,xmm0
  40875a:	jae    0x409f6e
  408760:	ucomisd xmm0,QWORD PTR [rip+0xf598]        # 0x417d00
  408768:	ja     0x409e61
  40876e:	ucomisd xmm0,QWORD PTR [rip+0xf592]        # 0x417d08
  408776:	jae    0x409d27
  40877c:	cvttsd2si rax,xmm0
  408781:	test   rax,rax
  408784:	js     0x409e40
  40878a:	pxor   xmm1,xmm1
  40878e:	cvtsi2sd xmm1,rax
  408793:	subsd  xmm0,xmm1
  408797:	ucomisd xmm0,xmm6
  40879b:	jbe    0x4087c4
  40879d:	lea    rcx,[rip+0xcc84]        # 0x415428
  4087a4:	call   0x4030d0
  4087a9:	movsd  xmm0,QWORD PTR [rip+0x1363f]        # 0x41bdf0
  4087b1:	ucomisd xmm0,QWORD PTR [rip+0xf54f]        # 0x417d08
  4087b9:	jae    0x409f09
  4087bf:	cvttsd2si rax,xmm0
  4087c4:	mov    rcx,QWORD PTR [rip+0x100a5]        # 0x418870
  4087cb:	mov    r9,QWORD PTR [rip+0xffee]        # 0x4187c0
  4087d2:	movsxd rdx,DWORD PTR [rcx]
  4087d5:	mov    r8,rdx
  4087d8:	lea    rdx,[rdx+rdx*2]
  4087dc:	shl    rdx,0x3
  4087e0:	add    rdx,QWORD PTR [r9]
  4087e3:	mov    QWORD PTR [rdx],rax
  4087e6:	lea    eax,[r8+0x1]
  4087ea:	mov    DWORD PTR [rcx],eax
  4087ec:	nop    DWORD PTR [rax+0x0]
  4087f0:	lea    rdx,[rbp*8+0x0]
  4087f8:	add    rbp,rbp
  4087fb:	mov    rax,rbp
  4087fe:	neg    rdx
  408801:	neg    rax
  408804:	add    rbx,rax
  408807:	lea    rax,[rip+0xf332]        # 0x417b40
  40880e:	add    rdx,rsi
  408811:	lea    rsi,[rdx+0x8]
  408815:	mov    QWORD PTR [rdx+0x8],r14
  408819:	lea    rdx,[rip+0xf100]        # 0x417920
  408820:	movzx  eax,BYTE PTR [rax+r12*1]
  408825:	movzx  ecx,WORD PTR [rbx]
  408828:	sub    eax,0x1f
  40882b:	cdqe   
  40882d:	movsx  r8d,BYTE PTR [rdx+rax*1]
  408832:	movsx  edx,cx
  408835:	add    edx,r8d
  408838:	cmp    edx,0x4e
  40883b:	ja     0x408857
  40883d:	lea    r8,[rip+0xeffc]        # 0x417840
  408844:	movsxd rdx,edx
  408847:	movsx  r8w,BYTE PTR [r8+rdx*1]
  40884d:	cmp    cx,r8w
  408851:	je     0x4089c0
  408857:	lea    rdx,[rip+0xf1a2]        # 0x417a00
  40885e:	movsx  rbp,BYTE PTR [rdx+rax*1]
  408863:	add    rbx,0x2
  408867:	jmp    0x4085d8
  40886c:	nop    DWORD PTR [rax+0x0]
  408870:	mov    eax,DWORD PTR [rsp+0x3c]
  408874:	test   eax,eax
  408876:	je     0x408951
  40887c:	cmp    DWORD PTR [rsp+0x3c],0x3
  408881:	je     0x408925
  408887:	movsx  eax,r13b
  40888b:	jmp    0x4088a6
  40888d:	nop    DWORD PTR [rax]
  408890:	cmp    rbx,rdi
  408893:	je     0x4088f2
  408895:	sub    rbx,0x2
  408899:	movsx  rax,WORD PTR [rbx]
  40889d:	sub    rsi,0x8
  4088a1:	movsx  eax,BYTE PTR [r14+rax*1]
  4088a6:	cmp    eax,0xffffffb7
  4088a9:	je     0x408890
  4088ab:	add    eax,0x1
  4088ae:	cmp    eax,0x4e
  4088b1:	ja     0x408890
  4088b3:	lea    rdx,[rip+0xef86]        # 0x417840
  4088ba:	cdqe   
  4088bc:	cmp    BYTE PTR [rdx+rax*1],0x1
  4088c0:	jne    0x408890
  4088c2:	lea    rdx,[rip+0xeff7]        # 0x4178c0
  4088c9:	movzx  ebp,BYTE PTR [rdx+rax*1]
  4088cd:	test   ebp,ebp
  4088cf:	je     0x408890
  4088d1:	mov    rdx,QWORD PTR [rip+0x15da8]        # 0x41e680
  4088d8:	mov    rax,rsi
  4088db:	mov    DWORD PTR [rsp+0x3c],0x3
  4088e3:	add    rsi,0x8
  4088e7:	mov    QWORD PTR [rax+0x8],rdx
  4088eb:	jmp    0x408863
  4088f0:	jne    0x408887
  4088f2:	mov    ebx,0x1
  4088f7:	cmp    rdi,QWORD PTR [rsp+0x30]
  4088fc:	je     0x408907
  4088fe:	mov    rcx,rdi
  408901:	call   0x4109d8
  408906:	nop
  408907:	movaps xmm6,XMMWORD PTR [rsp+0x830]
  40890f:	mov    eax,ebx
  408911:	add    rsp,0x848
  408918:	pop    rbx
  408919:	pop    rsi
  40891a:	pop    rdi
  40891b:	pop    rbp
  40891c:	pop    r12
  40891e:	pop    r13
  408920:	pop    r14
  408922:	pop    r15
  408924:	ret    
  408925:	cmp    DWORD PTR [rip+0x15e14],0x0        # 0x41e740
  40892c:	jle    0x4088f0
  40892e:	mov    DWORD PTR [rip+0x15e08],0xfffffffe        # 0x41e740
  408938:	jmp    0x408887
  40893d:	nop    DWORD PTR [rax]
  408940:	mov    DWORD PTR [rip+0x15df6],0x0        # 0x41e740
  40894a:	xor    edx,edx
  40894c:	jmp    0x4086da
  408951:	lea    rcx,[rip+0xccdd]        # 0x415635
  408958:	add    DWORD PTR [rip+0x15dd1],0x1        # 0x41e730
  40895f:	call   0x4030d0
  408964:	jmp    0x408887
  408969:	nop    DWORD PTR [rax+0x0]
  408970:	lea    rax,[rip+0xef49]        # 0x4178c0
  408977:	movzx  ebp,BYTE PTR [rax+r12*1]
  40897c:	test   ebp,ebp
  40897e:	je     0x4089d0
  408980:	mov    eax,DWORD PTR [rsp+0x3c]
  408984:	mov    DWORD PTR [rip+0x15db2],0xfffffffe        # 0x41e740
  40898e:	cmp    eax,0x1
  408991:	adc    eax,0xffffffff
  408994:	add    rsi,0x8
  408998:	mov    DWORD PTR [rsp+0x3c],eax
  40899c:	mov    rax,QWORD PTR [rip+0x15cdd]        # 0x41e680
  4089a3:	mov    QWORD PTR [rsi],rax
  4089a6:	jmp    0x408863
  4089ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4089b0:	call   0x4076e0
  4089b5:	mov    DWORD PTR [rip+0x15d85],eax        # 0x41e740
  4089bb:	jmp    0x4086b9
  4089c0:	lea    rax,[rip+0xeef9]        # 0x4178c0
  4089c7:	movzx  ebp,BYTE PTR [rax+rdx*1]
  4089cb:	jmp    0x408863
  4089d0:	mov    r14,QWORD PTR [rsi+0x8]
  4089d4:	xor    eax,eax
  4089d6:	xor    edx,edx
  4089d8:	xor    r12d,r12d
  4089db:	jmp    0x408804
  4089e0:	call   0x407090
  4089e5:	jmp    0x4087f0
  4089ea:	call   0x4070f0
  4089ef:	jmp    0x4087f0
  4089f4:	mov    r13,QWORD PTR [rip+0xfeb5]        # 0x4188b0
  4089fb:	mov    r11,QWORD PTR [rip+0xff6e]        # 0x418970
  408a02:	mov    rcx,QWORD PTR [rip+0xfeb7]        # 0x4188c0
  408a09:	movsxd rax,DWORD PTR [r13+0x0]
  408a0d:	mov    ecx,DWORD PTR [rcx]
  408a0f:	mov    rdx,rax
  408a12:	shl    rax,0x6
  408a16:	add    rax,QWORD PTR [r11]
  408a19:	mov    DWORD PTR [rax+0xc],ecx
  408a1c:	lea    eax,[rdx+0x1]
  408a1f:	mov    DWORD PTR [r13+0x0],eax
  408a23:	jmp    0x4087f0
  408a28:	mov    r8,QWORD PTR [rsi]
  408a2b:	lea    rax,[rip+0xca6d]        # 0x41549f
  408a32:	mov    DWORD PTR [rip+0x132cc],0x6        # 0x41bd08
  408a3c:	movsd  xmm2,QWORD PTR [rip+0xf29c]        # 0x417ce0
  408a44:	mov    DWORD PTR [rip+0x132be],0x0        # 0x41bd0c
  408a4e:	mov    QWORD PTR [rip+0x132ab],rax        # 0x41bd00
  408a55:	mov    rax,QWORD PTR [rip+0xfe64]        # 0x4188c0
  408a5c:	test   BYTE PTR [r8+0x10],0x2
  408a61:	mov    QWORD PTR [rip+0x132a4],0x0        # 0x41bd10
  408a6c:	movsd  QWORD PTR [rip+0x132a4],xmm2        # 0x41bd18
  408a74:	mov    DWORD PTR [rip+0x132a2],0x0        # 0x41bd20
  408a7e:	mov    DWORD PTR [rax],0x0
  408a84:	jne    0x409e22
  408a8a:	mov    r13,QWORD PTR [rip+0xfe1f]        # 0x4188b0
  408a91:	or     BYTE PTR [r8+0x10],0x2
  408a96:	mov    rdx,QWORD PTR [rip+0xfed3]        # 0x418970
  408a9d:	mov    QWORD PTR [rsp+0x50],r8
  408aa2:	mov    ecx,DWORD PTR [r13+0x0]
  408aa6:	mov    DWORD PTR [r8+0x18],ecx
  408aaa:	call   0x4068e0
  408aaf:	movsxd rax,DWORD PTR [r13+0x0]
  408ab3:	mov    r11,QWORD PTR [rip+0xfeb6]        # 0x418970
  408aba:	mov    r8,QWORD PTR [rsp+0x50]
  408abf:	mov    QWORD PTR [rsp+0x58],r11
  408ac4:	shl    rax,0x6
  408ac8:	add    rax,QWORD PTR [r11]
  408acb:	mov    rdx,rax
  408ace:	mov    rax,QWORD PTR [rip+0x1322b]        # 0x41bd00
  408ad5:	mov    QWORD PTR [rsp+0x48],rdx
  408ada:	mov    QWORD PTR [rdx],rax
  408add:	mov    rax,QWORD PTR [rip+0x13224]        # 0x41bd08
  408ae4:	mov    QWORD PTR [rdx+0x8],rax
  408ae8:	mov    rax,QWORD PTR [rip+0x13221]        # 0x41bd10
  408aef:	mov    QWORD PTR [rdx+0x10],rax
  408af3:	mov    rax,QWORD PTR [rip+0x1321e]        # 0x41bd18
  408afa:	mov    QWORD PTR [rdx+0x18],rax
  408afe:	mov    rax,QWORD PTR [rip+0x1321b]        # 0x41bd20
  408b05:	mov    QWORD PTR [rdx+0x20],rax
  408b09:	mov    rax,QWORD PTR [rip+0x13218]        # 0x41bd28
  408b10:	mov    QWORD PTR [rdx+0x28],rax
  408b14:	mov    rax,QWORD PTR [rip+0x13215]        # 0x41bd30
  408b1b:	mov    QWORD PTR [rdx+0x30],rax
  408b1f:	mov    rax,QWORD PTR [rip+0x13212]        # 0x41bd38
  408b26:	mov    QWORD PTR [rdx+0x38],rax
  408b2a:	mov    rcx,QWORD PTR [r8]
  408b2d:	call   0x410938
  408b32:	lea    rcx,[rax+0x1]
  408b36:	call   0x4067c0
  408b3b:	mov    rdx,QWORD PTR [rsp+0x48]
  408b40:	mov    r11,QWORD PTR [rsp+0x58]
  408b45:	mov    r8,QWORD PTR [rsp+0x50]
  408b4a:	mov    QWORD PTR [rdx],rax
  408b4d:	movsxd rax,DWORD PTR [r13+0x0]
  408b51:	mov    rdx,QWORD PTR [r8]
  408b54:	mov    QWORD PTR [rsp+0x48],r11
  408b59:	mov    QWORD PTR [rsp+0x58],r8
  408b5e:	shl    rax,0x6
  408b62:	add    rax,QWORD PTR [r11]
  408b65:	mov    rcx,QWORD PTR [rax]
  408b68:	call   0x410940
  408b6d:	movsxd rax,DWORD PTR [r13+0x0]
  408b71:	mov    r11,QWORD PTR [rsp+0x48]
  408b76:	mov    r8,QWORD PTR [rsp+0x58]
  408b7b:	mov    QWORD PTR [rsp+0x50],r11
  408b80:	shl    rax,0x6
  408b84:	add    rax,QWORD PTR [r11]
  408b87:	mov    rcx,QWORD PTR [r8]
  408b8a:	mov    QWORD PTR [rsp+0x48],rax
  408b8f:	call   0x406ae0
  408b94:	mov    rdx,QWORD PTR [rsp+0x48]
  408b99:	mov    r11,QWORD PTR [rsp+0x50]
  408b9e:	mov    ecx,DWORD PTR [rip+0x13238]        # 0x41bddc
  408ba4:	mov    QWORD PTR [rdx+0x38],rax
  408ba8:	movsxd rax,DWORD PTR [r13+0x0]
  408bac:	mov    QWORD PTR [rsp+0x48],r11
  408bb1:	shl    rax,0x6
  408bb5:	add    rax,QWORD PTR [r11]
  408bb8:	lea    rdx,[rax+0x18]
  408bbc:	mov    DWORD PTR [rax+0x8],ecx
  408bbf:	call   0x402df0
  408bc4:	movsxd rax,DWORD PTR [r13+0x0]
  408bc8:	mov    r11,QWORD PTR [rsp+0x48]
  408bcd:	shl    rax,0x6
  408bd1:	add    rax,QWORD PTR [r11]
  408bd4:	mov    DWORD PTR [rax+0x20],0x0
  408bdb:	jmp    0x4087f0
  408be0:	mov    DWORD PTR [rip+0x131f2],0x6        # 0x41bddc
  408bea:	jmp    0x4087f0
  408bef:	mov    DWORD PTR [rip+0x131e3],0x4        # 0x41bddc
  408bf9:	jmp    0x4087f0
  408bfe:	mov    DWORD PTR [rip+0x131d4],0x3        # 0x41bddc
  408c08:	jmp    0x4087f0
  408c0d:	cmp    DWORD PTR [rip+0x131ac],0x6        # 0x41bdc0
  408c14:	mov    DWORD PTR [rip+0x131ba],0x5        # 0x41bdd8
  408c1e:	ja     0x409020
  408c24:	mov    edx,DWORD PTR [rip+0x13196]        # 0x41bdc0
  408c2a:	lea    rax,[rip+0xcb63]        # 0x415794
  408c31:	movsxd rdx,DWORD PTR [rax+rdx*4]
  408c35:	add    rax,rdx
  408c38:	jmp    rax
  408c3a:	cmp    DWORD PTR [rip+0x1317f],0x6        # 0x41bdc0
  408c41:	mov    DWORD PTR [rip+0x1318d],0x4        # 0x41bdd8
  408c4b:	ja     0x409020
  408c51:	mov    edx,DWORD PTR [rip+0x13169]        # 0x41bdc0
  408c57:	lea    rax,[rip+0xcb52]        # 0x4157b0
  408c5e:	movsxd rdx,DWORD PTR [rax+rdx*4]
  408c62:	add    rax,rdx
  408c65:	jmp    rax
  408c67:	mov    DWORD PTR [rip+0x1316b],0x5        # 0x41bddc
  408c71:	jmp    0x4087f0
  408c76:	mov    r13,QWORD PTR [rip+0xfb23]        # 0x4187a0
  408c7d:	mov    eax,DWORD PTR [r13+0x0]
  408c81:	test   eax,eax
  408c83:	je     0x409e0d
  408c89:	test   eax,eax
  408c8b:	jle    0x4087f0
  408c91:	mov    ecx,0x6
  408c96:	call   0x410a18
  408c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  408ca0:	movsxd rdx,DWORD PTR [rip+0x1313d]        # 0x41bde4
  408ca7:	test   edx,edx
  408ca9:	jle    0x409f87
  408caf:	mov    rcx,QWORD PTR [rip+0xfbba]        # 0x418870
  408cb6:	mov    r9,QWORD PTR [rip+0xfb03]        # 0x4187c0
  408cbd:	movsxd rax,DWORD PTR [rcx]
  408cc0:	mov    r8,rax
  408cc3:	lea    rax,[rax+rax*2]
  408cc7:	shl    rax,0x3
  408ccb:	add    rax,QWORD PTR [r9]
  408cce:	mov    QWORD PTR [rax],rdx
  408cd1:	lea    eax,[r8+0x1]
  408cd5:	mov    DWORD PTR [rcx],eax
  408cd7:	jmp    0x4087f0
  408cdc:	mov    rax,QWORD PTR [rip+0xfabd]        # 0x4187a0
  408ce3:	mov    r9d,DWORD PTR [rax]
  408ce6:	test   r9d,r9d
  408ce9:	jne    0x4087f0
  408cef:	call   0x404360
  408cf4:	jmp    0x4087f0
  408cf9:	mov    r13,QWORD PTR [rip+0xfb40]        # 0x418840
  408d00:	mov    rdx,QWORD PTR [rip+0xfa59]        # 0x418760
  408d07:	mov    ecx,DWORD PTR [r13+0x0]
  408d0b:	call   0x4069c0
  408d10:	movsxd rax,DWORD PTR [r13+0x0]
  408d14:	mov    r8,QWORD PTR [rsi]
  408d17:	mov    rcx,QWORD PTR [r8]
  408d1a:	mov    QWORD PTR [rsp+0x48],r8
  408d1f:	lea    rdx,[rax+rax*2]
  408d23:	mov    rax,QWORD PTR [rip+0xfa36]        # 0x418760
  408d2a:	shl    rdx,0x4
  408d2e:	add    rdx,QWORD PTR [rax]
  408d31:	mov    QWORD PTR [rsp+0x50],rdx
  408d36:	call   0x410938
  408d3b:	lea    rcx,[rax+0x1]
  408d3f:	call   0x4067c0
  408d44:	mov    rdx,QWORD PTR [rsp+0x50]
  408d49:	mov    rcx,QWORD PTR [rip+0xfa10]        # 0x418760
  408d50:	mov    r8,QWORD PTR [rsp+0x48]
  408d55:	mov    QWORD PTR [rdx+0x8],rax
  408d59:	movsxd rax,DWORD PTR [r13+0x0]
  408d5d:	mov    rdx,QWORD PTR [r8]
  408d60:	lea    rax,[rax+rax*2]
  408d64:	shl    rax,0x4
  408d68:	add    rax,QWORD PTR [rcx]
  408d6b:	mov    rcx,QWORD PTR [rax+0x8]
  408d6f:	call   0x410940
  408d74:	movsxd rax,DWORD PTR [r13+0x0]
  408d78:	mov    r8,QWORD PTR [rsp+0x48]
  408d7d:	mov    rcx,QWORD PTR [r8]
  408d80:	lea    r13,[rax+rax*2]
  408d84:	mov    rax,QWORD PTR [rip+0xf9d5]        # 0x418760
  408d8b:	shl    r13,0x4
  408d8f:	add    r13,QWORD PTR [rax]
  408d92:	call   0x406ae0
  408d97:	mov    QWORD PTR [r13+0x28],rax
  408d9b:	jmp    0x4087f0
  408da0:	mov    rax,QWORD PTR [rsi]
  408da3:	test   BYTE PTR [rax+0x10],0x2
  408da7:	je     0x40a021
  408dad:	mov    r13,QWORD PTR [rip+0xfbac]        # 0x418960
  408db4:	mov    eax,DWORD PTR [rax+0x18]
  408db7:	mov    DWORD PTR [r13+0x0],eax
  408dbb:	jmp    0x4087f0
  408dc0:	cmp    DWORD PTR [rip+0x12ff9],0x6        # 0x41bdc0
  408dc7:	ja     0x409020
  408dcd:	mov    edx,DWORD PTR [rip+0x12fed]        # 0x41bdc0
  408dd3:	lea    rax,[rip+0xc9f2]        # 0x4157cc
  408dda:	movsxd rdx,DWORD PTR [rax+rdx*4]
  408dde:	add    rax,rdx
  408de1:	jmp    rax
  408de3:	mov    rax,QWORD PTR [rip+0xfad6]        # 0x4188c0
  408dea:	mov    r13,QWORD PTR [rip+0xfabf]        # 0x4188b0
  408df1:	cmp    DWORD PTR [rax],0x3ff
  408df7:	jg     0x409ed9
  408dfd:	mov    r11,QWORD PTR [rip+0xfb6c]        # 0x418970
  408e04:	mov    rax,QWORD PTR [rsi]
  408e07:	test   BYTE PTR [rax+0x10],0x1
  408e0b:	je     0x409f28
  408e11:	mov    r8,QWORD PTR [rip+0xf998]        # 0x4187b0
  408e18:	mov    eax,DWORD PTR [rax+0x14]
  408e1b:	mov    DWORD PTR [r8],eax
  408e1e:	mov    rax,QWORD PTR [rip+0xfaeb]        # 0x418910
  408e25:	mov    eax,DWORD PTR [rax]
  408e27:	cmp    eax,0xffffffff
  408e2a:	je     0x408e35
  408e2c:	cmp    eax,DWORD PTR [r8]
  408e2f:	je     0x409f9f
  408e35:	mov    rax,QWORD PTR [rip+0xfa84]        # 0x4188c0
  408e3c:	mov    ecx,DWORD PTR [rax]
  408e3e:	movsxd rdx,DWORD PTR [r13+0x0]
  408e42:	mov    QWORD PTR [rsp+0x50],r8
  408e47:	mov    QWORD PTR [rsp+0x48],r11
  408e4c:	shl    rdx,0x6
  408e50:	add    rdx,QWORD PTR [r11]
  408e53:	add    rdx,0x10
  408e57:	call   0x406870
  408e5c:	movsxd rax,DWORD PTR [r13+0x0]
  408e60:	mov    r11,QWORD PTR [rsp+0x48]
  408e65:	mov    rcx,QWORD PTR [rip+0xfa54]        # 0x4188c0
  408e6c:	mov    r8,QWORD PTR [rsp+0x50]
  408e71:	shl    rax,0x6
  408e75:	add    rax,QWORD PTR [r11]
  408e78:	movsxd rcx,DWORD PTR [rcx]
  408e7b:	mov    edx,DWORD PTR [r8]
  408e7e:	mov    rax,QWORD PTR [rax+0x10]
  408e82:	mov    DWORD PTR [rax+rcx*4],edx
  408e85:	mov    rax,QWORD PTR [rip+0xfa34]        # 0x4188c0
  408e8c:	nop    DWORD PTR [rax+0x0]
  408e90:	add    DWORD PTR [rax],0x1
  408e93:	jmp    0x4087f0
  408e98:	mov    DWORD PTR [rip+0x12f3a],0x1        # 0x41bddc
  408ea2:	jmp    0x4087f0
  408ea7:	mov    r13,QWORD PTR [rsi]
  408eaa:	test   BYTE PTR [r13+0x10],0x1
  408eaf:	jne    0x409f59
  408eb5:	mov    rax,QWORD PTR [rip+0xf9b4]        # 0x418870
  408ebc:	or     BYTE PTR [r13+0x10],0x1
  408ec1:	mov    rdx,QWORD PTR [rip+0xf8f8]        # 0x4187c0
  408ec8:	mov    ecx,DWORD PTR [rax]
  408eca:	mov    DWORD PTR [r13+0x14],ecx
  408ece:	call   0x406950
  408ed3:	mov    rax,QWORD PTR [rip+0xf996]        # 0x418870
  408eda:	mov    rcx,QWORD PTR [r13+0x0]
  408ede:	movsxd rax,DWORD PTR [rax]
  408ee1:	lea    rdx,[rax+rax*2]
  408ee5:	mov    rax,QWORD PTR [rip+0xf8d4]        # 0x4187c0
  408eec:	mov    rax,QWORD PTR [rax]
  408eef:	lea    rdx,[rax+rdx*8]
  408ef3:	mov    QWORD PTR [rsp+0x48],rdx
  408ef8:	call   0x410938
  408efd:	lea    rcx,[rax+0x1]
  408f01:	call   0x4067c0
  408f06:	mov    rdx,QWORD PTR [rsp+0x48]
  408f0b:	mov    rcx,QWORD PTR [rip+0xf8ae]        # 0x4187c0
  408f12:	mov    QWORD PTR [rdx+0x8],rax
  408f16:	mov    rax,QWORD PTR [rip+0xf953]        # 0x418870
  408f1d:	mov    rdx,QWORD PTR [r13+0x0]
  408f21:	movsxd rax,DWORD PTR [rax]
  408f24:	lea    rax,[rax+rax*2]
  408f28:	shl    rax,0x3
  408f2c:	add    rax,QWORD PTR [rcx]
  408f2f:	mov    rcx,QWORD PTR [rax+0x8]
  408f33:	call   0x410940
  408f38:	mov    rax,QWORD PTR [rip+0xf931]        # 0x418870
  408f3f:	mov    rcx,QWORD PTR [r13+0x0]
  408f43:	movsxd rax,DWORD PTR [rax]
  408f46:	lea    rdx,[rax+rax*2]
  408f4a:	mov    rax,QWORD PTR [rip+0xf86f]        # 0x4187c0
  408f51:	mov    rax,QWORD PTR [rax]
  408f54:	lea    rdx,[rax+rdx*8]
  408f58:	mov    QWORD PTR [rsp+0x48],rdx
  408f5d:	call   0x406ae0
  408f62:	mov    rdx,QWORD PTR [rsp+0x48]
  408f67:	mov    QWORD PTR [rdx+0x10],rax
  408f6b:	jmp    0x4087f0
  408f70:	mov    r13,QWORD PTR [rip+0xf999]        # 0x418910
  408f77:	cmp    DWORD PTR [r13+0x0],0xffffffff
  408f7c:	je     0x408f8a
  408f7e:	lea    rcx,[rip+0xc4cb]        # 0x415450
  408f85:	call   0x4030d0
  408f8a:	mov    rcx,QWORD PTR [rip+0xf8df]        # 0x418870
  408f91:	mov    r8,QWORD PTR [rip+0xf828]        # 0x4187c0
  408f98:	movsxd rdx,DWORD PTR [rcx]
  408f9b:	mov    rax,rdx
  408f9e:	mov    DWORD PTR [r13+0x0],edx
  408fa2:	lea    rdx,[rdx+rdx*2]
  408fa6:	add    eax,0x1
  408fa9:	shl    rdx,0x3
  408fad:	add    rdx,QWORD PTR [r8]
  408fb0:	mov    QWORD PTR [rdx],0x0
  408fb7:	mov    DWORD PTR [rcx],eax
  408fb9:	jmp    0x4087f0
  408fbe:	mov    r13,QWORD PTR [rip+0xf99b]        # 0x418960
  408fc5:	mov    DWORD PTR [r13+0x0],0xffffffff
  408fcd:	jmp    0x4087f0
  408fd2:	cmp    DWORD PTR [rip+0x12de7],0x6        # 0x41bdc0
  408fd9:	mov    DWORD PTR [rip+0x12df5],0x6        # 0x41bdd8
  408fe3:	ja     0x409020
  408fe5:	mov    edx,DWORD PTR [rip+0x12dd5]        # 0x41bdc0
  408feb:	lea    rax,[rip+0xc7f6]        # 0x4157e8
  408ff2:	movsxd rdx,DWORD PTR [rax+rdx*4]
  408ff6:	add    rax,rdx
  408ff9:	jmp    rax
  408ffb:	mov    rax,QWORD PTR [rip+0x12db6]        # 0x41bdb8
  409002:	mov    DWORD PTR [rip+0x12dcc],0x2        # 0x41bdd8
  40900c:	lea    rdx,[rax+0x1]
  409010:	mov    QWORD PTR [rip+0x12da1],rdx        # 0x41bdb8
  409017:	mov    BYTE PTR [rax],0x0
  40901a:	nop    WORD PTR [rax+rax*1+0x0]
  409020:	mov    rax,QWORD PTR [rip+0xf909]        # 0x418930
  409027:	jmp    0x408e90
  40902c:	cmp    DWORD PTR [rip+0x12d8d],0x6        # 0x41bdc0
  409033:	mov    DWORD PTR [rip+0x12d9b],0x3        # 0x41bdd8
  40903d:	ja     0x409020
  40903f:	mov    edx,DWORD PTR [rip+0x12d7b]        # 0x41bdc0
  409045:	lea    rax,[rip+0xc7b8]        # 0x415804
  40904c:	movsxd rdx,DWORD PTR [rax+rdx*4]
  409050:	add    rax,rdx
  409053:	jmp    rax
  409055:	cmp    DWORD PTR [rip+0x12d64],0x6        # 0x41bdc0
  40905c:	mov    DWORD PTR [rip+0x12d72],0x1        # 0x41bdd8
  409066:	ja     0x409020
  409068:	mov    edx,DWORD PTR [rip+0x12d52]        # 0x41bdc0
  40906e:	lea    rax,[rip+0xc7ab]        # 0x415820
  409075:	movsxd rdx,DWORD PTR [rax+rdx*4]
  409079:	add    rax,rdx
  40907c:	jmp    rax
  40907e:	mov    ecx,DWORD PTR [rip+0x14104]        # 0x41d188
  409084:	test   ecx,ecx
  409086:	je     0x4087f0
  40908c:	cmp    DWORD PTR [rip+0x12d2d],0x6        # 0x41bdc0
  409093:	ja     0x4087f0
  409099:	mov    edx,DWORD PTR [rip+0x12d21]        # 0x41bdc0
  40909f:	lea    rax,[rip+0xc796]        # 0x41583c
  4090a6:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4090aa:	add    rax,rdx
  4090ad:	jmp    rax
  4090af:	mov    rax,QWORD PTR [rip+0xf87a]        # 0x418930
  4090b6:	mov    r9,QWORD PTR [rip+0xf883]        # 0x418940
  4090bd:	movsxd rax,DWORD PTR [rax]
  4090c0:	mov    r8,QWORD PTR [r9]
  4090c3:	cmp    rax,r8
  4090c6:	mov    r10,rax
  4090c9:	jb     0x409176
  4090cf:	mov    r13,QWORD PTR [rip+0xf88a]        # 0x418960
  4090d6:	mov    r11,QWORD PTR [rip+0xf893]        # 0x418970
  4090dd:	movsxd rdx,DWORD PTR [r13+0x0]
  4090e1:	shl    rdx,0x6
  4090e5:	add    rdx,QWORD PTR [r11]
  4090e8:	mov    rcx,QWORD PTR [rdx+0x10]
  4090ec:	mov    rdx,QWORD PTR [rip+0xf81d]        # 0x418910
  4090f3:	mov    edx,DWORD PTR [rdx]
  4090f5:	cmp    DWORD PTR [rcx],edx
  4090f7:	jne    0x40a008
  4090fd:	mov    rdx,QWORD PTR [rip+0xf81c]        # 0x418920
  409104:	mov    rcx,QWORD PTR [rip+0x12c75]        # 0x41bd80
  40910b:	mov    r13,QWORD PTR [rip+0x12c76]        # 0x41bd88
  409112:	mov    r8,QWORD PTR [rdx]
  409115:	xor    edx,edx
  409117:	sub    r13,rcx
  40911a:	div    r8
  40911d:	add    rax,0x1
  409121:	imul   r8,rax
  409125:	mov    rax,QWORD PTR [rip+0xf824]        # 0x418950
  40912c:	mov    rdx,r8
  40912f:	mov    QWORD PTR [r9],r8
  409132:	imul   rdx,QWORD PTR [rax]
  409136:	call   0x406810
  40913b:	add    r13,rax
  40913e:	mov    QWORD PTR [rip+0x12c3b],rax        # 0x41bd80
  409145:	mov    QWORD PTR [rip+0x12c3c],r13        # 0x41bd88
  40914c:	mov    QWORD PTR [rip+0x12c65],r13        # 0x41bdb8
  409153:	mov    QWORD PTR [rip+0x12c56],r13        # 0x41bdb0
  40915a:	mov    QWORD PTR [rip+0x12c47],r13        # 0x41bda8
  409161:	mov    QWORD PTR [rip+0x12c38],r13        # 0x41bda0
  409168:	mov    QWORD PTR [rip+0x12c29],r13        # 0x41bd98
  40916f:	mov    QWORD PTR [rip+0x12c1a],r13        # 0x41bd90
  409176:	mov    DWORD PTR [rip+0x14008],0x1        # 0x41d188
  409180:	jmp    0x4087f0
  409185:	mov    rax,QWORD PTR [rip+0xf7a4]        # 0x418930
  40918c:	movsxd rdx,DWORD PTR [rax]
  40918f:	mov    rax,QWORD PTR [rip+0xf7aa]        # 0x418940
  409196:	mov    rax,QWORD PTR [rax]
  409199:	cmp    rdx,rax
  40919c:	jb     0x409e8b
  4091a2:	mov    r11,QWORD PTR [rip+0xf7c7]        # 0x418970
  4091a9:	mov    r13,QWORD PTR [rip+0xf7b0]        # 0x418960
  4091b0:	mov    r10,QWORD PTR [rip+0xf769]        # 0x418920
  4091b7:	movsxd rcx,DWORD PTR [r13+0x0]
  4091bb:	xor    edx,edx
  4091bd:	div    QWORD PTR [r10]
  4091c0:	shl    rcx,0x6
  4091c4:	add    rcx,QWORD PTR [r11]
  4091c7:	mov    QWORD PTR [rcx+0x28],rax
  4091cb:	mov    rax,QWORD PTR [rip+0xf5ce]        # 0x4187a0
  4091d2:	mov    r8d,DWORD PTR [rax]
  4091d5:	test   r8d,r8d
  4091d8:	je     0x409e7a
  4091de:	mov    rcx,QWORD PTR [rip+0x12b9b]        # 0x41bd80
  4091e5:	call   0x4109d8
  4091ea:	jmp    0x4087f0
  4091ef:	mov    r13,QWORD PTR [rip+0xf76a]        # 0x418960
  4091f6:	mov    r11,QWORD PTR [rip+0xf773]        # 0x418970
  4091fd:	mov    rdx,QWORD PTR [rip+0xf72c]        # 0x418930
  409204:	movsxd rax,DWORD PTR [r13+0x0]
  409208:	mov    QWORD PTR [rsp+0x50],r11
  40920d:	mov    DWORD PTR [rdx],0x0
  409213:	shl    rax,0x6
  409217:	add    rax,QWORD PTR [r11]
  40921a:	mov    ecx,DWORD PTR [rax+0x8]
  40921d:	mov    DWORD PTR [rax+0x20],0x1
  409224:	mov    DWORD PTR [rip+0x12b96],ecx        # 0x41bdc0
  40922a:	call   0x403600
  40922f:	mov    rcx,rax
  409232:	mov    QWORD PTR [rsp+0x48],rax
  409237:	mov    rax,QWORD PTR [rip+0xf712]        # 0x418950
  40923e:	mov    r11,QWORD PTR [rsp+0x50]
  409243:	mov    QWORD PTR [rax],rcx
  409246:	movsxd rax,DWORD PTR [r13+0x0]
  40924a:	shl    rax,0x6
  40924e:	add    rax,QWORD PTR [r11]
  409251:	mov    r11d,DWORD PTR [rax+0xc]
  409255:	test   r11d,r11d
  409258:	je     0x409cec
  40925e:	mov    rdx,QWORD PTR [rax+0x10]
  409262:	mov    rcx,QWORD PTR [rip+0xf6a7]        # 0x418910
  409269:	movsxd rdx,DWORD PTR [rdx]
  40926c:	cmp    edx,DWORD PTR [rcx]
  40926e:	je     0x409cec
  409274:	mov    rcx,QWORD PTR [rip+0xf545]        # 0x4187c0
  40927b:	lea    rdx,[rdx+rdx*2]
  40927f:	mov    r10,QWORD PTR [rip+0xf6ba]        # 0x418940
  409286:	shl    rdx,0x3
  40928a:	add    rdx,QWORD PTR [rcx]
  40928d:	mov    r9,QWORD PTR [rdx]
  409290:	mov    QWORD PTR [r10],r9
  409293:	mov    r8,QWORD PTR [rip+0xf516]        # 0x4187b0
  40929a:	cmp    r11d,0x1
  40929e:	mov    DWORD PTR [r8],0x1
  4092a5:	jle    0x4092e1
  4092a7:	mov    rdx,QWORD PTR [rip+0xf512]        # 0x4187c0
  4092ae:	add    r11d,0x1
  4092b2:	mov    r13,QWORD PTR [rdx]
  4092b5:	mov    rdx,QWORD PTR [rax+0x10]
  4092b9:	mov    eax,0x2
  4092be:	add    rdx,0x4
  4092c2:	movsxd rcx,DWORD PTR [rdx]
  4092c5:	add    rdx,0x4
  4092c9:	lea    rcx,[rcx+rcx*2]
  4092cd:	imul   r9,QWORD PTR [r13+rcx*8+0x0]
  4092d3:	mov    DWORD PTR [r8],eax
  4092d6:	add    eax,0x1
  4092d9:	cmp    eax,r11d
  4092dc:	jne    0x4092c2
  4092de:	mov    QWORD PTR [r10],r9
  4092e1:	mov    rcx,QWORD PTR [rsp+0x48]
  4092e6:	mov    rax,QWORD PTR [rip+0xf633]        # 0x418920
  4092ed:	imul   rcx,r9
  4092f1:	mov    QWORD PTR [rax],r9
  4092f4:	call   0x410998
  4092f9:	test   rax,rax
  4092fc:	mov    QWORD PTR [rip+0x12a7d],rax        # 0x41bd80
  409303:	je     0x40a03a
  409309:	cmp    DWORD PTR [rip+0x12ab0],0x6        # 0x41bdc0
  409310:	mov    QWORD PTR [rip+0x12a71],rax        # 0x41bd88
  409317:	ja     0x4087f0
  40931d:	mov    ecx,DWORD PTR [rip+0x12a9d]        # 0x41bdc0
  409323:	lea    rdx,[rip+0xc52e]        # 0x415858
  40932a:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40932e:	add    rdx,rcx
  409331:	jmp    rdx
  409333:	mov    DWORD PTR [rip+0x12a9b],0x6        # 0x41bdd8
  40933d:	mov    rax,QWORD PTR [rip+0x12a4c]        # 0x41bd90
  409344:	movsd  xmm0,QWORD PTR [rip+0x12aa4]        # 0x41bdf0
  40934c:	lea    rdx,[rax+0x8]
  409350:	mov    QWORD PTR [rip+0x12a39],rdx        # 0x41bd90
  409357:	movsd  QWORD PTR [rax],xmm0
  40935b:	jmp    0x409020
  409360:	mov    DWORD PTR [rip+0x12a6e],0x4        # 0x41bdd8
  40936a:	mov    rax,QWORD PTR [rip+0x12a2f]        # 0x41bda0
  409371:	lea    rdx,[rax+0x4]
  409375:	mov    QWORD PTR [rip+0x12a24],rdx        # 0x41bda0
  40937c:	mov    edx,DWORD PTR [rip+0x12a62]        # 0x41bde4
  409382:	mov    DWORD PTR [rax],edx
  409384:	jmp    0x409020
  409389:	mov    eax,DWORD PTR [rip+0x12a31]        # 0x41bdc0
  40938f:	test   eax,eax
  409391:	je     0x409d16
  409397:	cmp    eax,DWORD PTR [rip+0x12a3b]        # 0x41bdd8
  40939d:	je     0x4087f0
  4093a3:	lea    rcx,[rip+0xc1c6]        # 0x415570
  4093aa:	call   0x4030d0
  4093af:	jmp    0x4087f0
  4093b4:	mov    DWORD PTR [rip+0x12a1a],0x3        # 0x41bdd8
  4093be:	mov    rax,QWORD PTR [rip+0x129e3]        # 0x41bda8
  4093c5:	lea    rdx,[rax+0x2]
  4093c9:	mov    QWORD PTR [rip+0x129d8],rdx        # 0x41bda8
  4093d0:	movzx  edx,WORD PTR [rip+0x12a0b]        # 0x41bde2
  4093d7:	mov    WORD PTR [rax],dx
  4093da:	jmp    0x409020
  4093df:	lea    rcx,[rip+0x12a1a]        # 0x41be00
  4093e6:	mov    DWORD PTR [rip+0x13d98],0x0        # 0x41d188
  4093f0:	mov    DWORD PTR [rip+0x129de],0x2        # 0x41bdd8
  4093fa:	mov    r10,rcx
  4093fd:	mov    edx,DWORD PTR [r10]
  409400:	add    r10,0x4
  409404:	lea    eax,[rdx-0x1010101]
  40940a:	not    edx
  40940c:	and    eax,edx
  40940e:	and    eax,0x80808080
  409413:	je     0x4093fd
  409415:	mov    edx,eax
  409417:	mov    r9,QWORD PTR [rip+0xf522]        # 0x418940
  40941e:	shr    edx,0x10
  409421:	test   eax,0x8080
  409426:	cmove  eax,edx
  409429:	lea    rdx,[r10+0x2]
  40942d:	mov    r8,QWORD PTR [r9]
  409430:	cmove  r10,rdx
  409434:	add    al,al
  409436:	mov    rax,QWORD PTR [rip+0xf4f3]        # 0x418930
  40943d:	sbb    r10,0x3
  409441:	sub    r10,rcx
  409444:	movsxd rax,DWORD PTR [rax]
  409447:	add    rax,r10
  40944a:	cmp    rax,r8
  40944d:	jbe    0x4094e3
  409453:	mov    r13,QWORD PTR [rip+0xf506]        # 0x418960
  40945a:	mov    r11,QWORD PTR [rip+0xf50f]        # 0x418970
  409461:	movsxd rdx,DWORD PTR [r13+0x0]
  409465:	shl    rdx,0x6
  409469:	add    rdx,QWORD PTR [r11]
  40946c:	mov    rcx,QWORD PTR [rdx+0x10]
  409470:	mov    rdx,QWORD PTR [rip+0xf499]        # 0x418910
  409477:	mov    edx,DWORD PTR [rdx]
  409479:	cmp    DWORD PTR [rcx],edx
  40947b:	jne    0x40a050
  409481:	mov    rdx,QWORD PTR [rip+0xf498]        # 0x418920
  409488:	sub    rax,r8
  40948b:	mov    rcx,QWORD PTR [rip+0x128ee]        # 0x41bd80
  409492:	mov    r13,QWORD PTR [rip+0x128ef]        # 0x41bd88
  409499:	mov    QWORD PTR [rsp+0x48],r10
  40949e:	mov    r11,QWORD PTR [rdx]
  4094a1:	xor    edx,edx
  4094a3:	sub    r13,rcx
  4094a6:	imul   rax,r11
  4094aa:	div    r11
  4094ad:	add    r8,rax
  4094b0:	mov    rax,QWORD PTR [rip+0xf499]        # 0x418950
  4094b7:	mov    rdx,r8
  4094ba:	mov    QWORD PTR [r9],r8
  4094bd:	imul   rdx,QWORD PTR [rax]
  4094c1:	call   0x406810
  4094c6:	mov    r10,QWORD PTR [rsp+0x48]
  4094cb:	add    r13,rax
  4094ce:	mov    QWORD PTR [rip+0x128ab],rax        # 0x41bd80
  4094d5:	mov    QWORD PTR [rip+0x128ac],r13        # 0x41bd88
  4094dc:	mov    QWORD PTR [rip+0x128d5],r13        # 0x41bdb8
  4094e3:	mov    ecx,DWORD PTR [rip+0x128d7]        # 0x41bdc0
  4094e9:	cmp    ecx,0x2
  4094ec:	je     0x409d58
  4094f2:	jg     0x409d4a
  4094f8:	cmp    ecx,0x1
  4094fb:	jne    0x4087f0
  409501:	call   0x403390
  409506:	lea    rcx,[rip+0xc103]        # 0x415610
  40950d:	mov    rdx,rax
  409510:	call   0x4030d0
  409515:	jmp    0x4087f0
  40951a:	cmp    DWORD PTR [rip+0x1289f],0x6        # 0x41bdc0
  409521:	mov    DWORD PTR [rip+0x128ad],0x2        # 0x41bdd8
  40952b:	ja     0x409020
  409531:	mov    edx,DWORD PTR [rip+0x12889]        # 0x41bdc0
  409537:	lea    rax,[rip+0xc336]        # 0x415874
  40953e:	movsxd rdx,DWORD PTR [rax+rdx*4]
  409542:	add    rax,rdx
  409545:	jmp    rax
  409547:	mov    DWORD PTR [rip+0x12887],0x1        # 0x41bdd8
  409551:	mov    rax,QWORD PTR [rip+0x12858]        # 0x41bdb0
  409558:	lea    rdx,[rax+0x1]
  40955c:	mov    QWORD PTR [rip+0x1284d],rdx        # 0x41bdb0
  409563:	movzx  edx,BYTE PTR [rip+0x12876]        # 0x41bde0
  40956a:	mov    BYTE PTR [rax],dl
  40956c:	jmp    0x409020
  409571:	mov    DWORD PTR [rip+0x1285d],0x5        # 0x41bdd8
  40957b:	mov    rax,QWORD PTR [rip+0x12816]        # 0x41bd98
  409582:	movss  xmm0,DWORD PTR [rip+0x1285e]        # 0x41bde8
  40958a:	lea    rdx,[rax+0x4]
  40958e:	mov    QWORD PTR [rip+0x12803],rdx        # 0x41bd98
  409595:	movss  DWORD PTR [rax],xmm0
  409599:	jmp    0x409020
  40959e:	call   0x403000
  4095a3:	jmp    0x4087f0
  4095a8:	mov    DWORD PTR [rip+0x1282a],0x2        # 0x41bddc
  4095b2:	jmp    0x4087f0
  4095b7:	lea    rcx,[rip+0x12842]        # 0x41be00
  4095be:	mov    DWORD PTR [rip+0x12810],0x2        # 0x41bdd8
  4095c8:	mov    r13,rcx
  4095cb:	mov    edx,DWORD PTR [r13+0x0]
  4095cf:	add    r13,0x4
  4095d3:	lea    eax,[rdx-0x1010101]
  4095d9:	not    edx
  4095db:	and    eax,edx
  4095dd:	and    eax,0x80808080
  4095e2:	je     0x4095cb
  4095e4:	mov    edx,eax
  4095e6:	shr    edx,0x10
  4095e9:	test   eax,0x8080
  4095ee:	cmove  eax,edx
  4095f1:	lea    rdx,[r13+0x2]
  4095f5:	cmove  r13,rdx
  4095f9:	add    al,al
  4095fb:	sbb    r13,0x3
  4095ff:	sub    r13,rcx
  409602:	je     0x409d05
  409608:	mov    r9d,r13d
  40960b:	mov    r10,QWORD PTR [rip+0x127a6]        # 0x41bdb8
  409612:	lea    rdx,[rip+0x127e7]        # 0x41be00
  409619:	mov    r8,r13
  40961c:	mov    DWORD PTR [rsp+0x50],r9d
  409621:	mov    rcx,r10
  409624:	mov    QWORD PTR [rsp+0x48],r10
  409629:	call   0x410920
  40962e:	mov    r10,QWORD PTR [rsp+0x48]
  409633:	mov    rax,QWORD PTR [rip+0xf2f6]        # 0x418930
  40963a:	mov    r9d,DWORD PTR [rsp+0x50]
  40963f:	add    r13,r10
  409642:	add    DWORD PTR [rax],r9d
  409645:	mov    QWORD PTR [rip+0x1276c],r13        # 0x41bdb8
  40964c:	jmp    0x4087f0
  409651:	mov    QWORD PTR [rip+0x12738],rax        # 0x41bd90
  409658:	jmp    0x4087f0
  40965d:	mov    QWORD PTR [rip+0x12734],rax        # 0x41bd98
  409664:	jmp    0x4087f0
  409669:	mov    QWORD PTR [rip+0x12730],rax        # 0x41bda0
  409670:	jmp    0x4087f0
  409675:	mov    QWORD PTR [rip+0x1272c],rax        # 0x41bda8
  40967c:	jmp    0x4087f0
  409681:	mov    QWORD PTR [rip+0x12730],rax        # 0x41bdb8
  409688:	jmp    0x4087f0
  40968d:	mov    QWORD PTR [rip+0x1271c],rax        # 0x41bdb0
  409694:	jmp    0x4087f0
  409699:	mov    rax,QWORD PTR [rip+0x12718]        # 0x41bdb8
  4096a0:	lea    rdx,[rax+0x1]
  4096a4:	mov    QWORD PTR [rip+0x1270d],rdx        # 0x41bdb8
  4096ab:	movzx  edx,BYTE PTR [rip+0x1272e]        # 0x41bde0
  4096b2:	mov    BYTE PTR [rax],dl
  4096b4:	jmp    0x409020
  4096b9:	mov    rax,QWORD PTR [rip+0x126e0]        # 0x41bda0
  4096c0:	lea    rdx,[rax+0x4]
  4096c4:	mov    DWORD PTR [rax],0x0
  4096ca:	mov    QWORD PTR [rip+0x126cf],rdx        # 0x41bda0
  4096d1:	jmp    0x409020
  4096d6:	mov    rax,QWORD PTR [rip+0x126cb]        # 0x41bda8
  4096dd:	lea    rdx,[rax+0x2]
  4096e1:	mov    QWORD PTR [rip+0x126c0],rdx        # 0x41bda8
  4096e8:	xor    edx,edx
  4096ea:	mov    WORD PTR [rax],dx
  4096ed:	jmp    0x409020
  4096f2:	mov    rax,QWORD PTR [rip+0x126bf]        # 0x41bdb8
  4096f9:	lea    rdx,[rax+0x1]
  4096fd:	mov    QWORD PTR [rip+0x126b4],rdx        # 0x41bdb8
  409704:	mov    BYTE PTR [rax],0x0
  409707:	jmp    0x409020
  40970c:	mov    rax,QWORD PTR [rip+0x1269d]        # 0x41bdb0
  409713:	lea    rdx,[rax+0x1]
  409717:	mov    QWORD PTR [rip+0x12692],rdx        # 0x41bdb0
  40971e:	mov    BYTE PTR [rax],0x0
  409721:	jmp    0x409020
  409726:	mov    rax,QWORD PTR [rip+0x12683]        # 0x41bdb0
  40972d:	lea    rdx,[rax+0x1]
  409731:	mov    QWORD PTR [rip+0x12678],rdx        # 0x41bdb0
  409738:	cvttss2si edx,DWORD PTR [rip+0x126a8]        # 0x41bde8
  409740:	mov    BYTE PTR [rax],dl
  409742:	jmp    0x409020
  409747:	mov    rax,QWORD PTR [rip+0xf212]        # 0x418960
  40974e:	mov    rcx,QWORD PTR [rip+0xf21b]        # 0x418970
  409755:	mov    r8,QWORD PTR [rip+0x12634]        # 0x41bd90
  40975c:	movsxd rax,DWORD PTR [rax]
  40975f:	lea    rdx,[r8+0x8]
  409763:	mov    QWORD PTR [rip+0x12626],rdx        # 0x41bd90
  40976a:	mov    edx,0x1
  40976f:	shl    rax,0x6
  409773:	add    rax,QWORD PTR [rcx]
  409776:	mov    ecx,0x6
  40977b:	mov    r9,QWORD PTR [rax+0x18]
  40977f:	call   0x402e70
  409784:	jmp    0x409020
  409789:	mov    r13,QWORD PTR [rip+0xf1d0]        # 0x418960
  409790:	mov    rcx,QWORD PTR [rsp+0x40]
  409795:	mov    r8,QWORD PTR [rip+0x125fc]        # 0x41bd98
  40979c:	movsxd rax,DWORD PTR [r13+0x0]
  4097a0:	lea    rdx,[r8+0x4]
  4097a4:	mov    QWORD PTR [rip+0x125ed],rdx        # 0x41bd98
  4097ab:	mov    edx,0x1
  4097b0:	shl    rax,0x6
  4097b4:	add    rax,QWORD PTR [rcx]
  4097b7:	mov    ecx,0x5
  4097bc:	mov    r9,QWORD PTR [rax+0x18]
  4097c0:	call   0x402e70
  4097c5:	jmp    0x409020
  4097ca:	mov    r13,QWORD PTR [rip+0xf18f]        # 0x418960
  4097d1:	mov    r11,QWORD PTR [rip+0xf198]        # 0x418970
  4097d8:	mov    ecx,0x4
  4097dd:	mov    r8,QWORD PTR [rip+0x125bc]        # 0x41bda0
  4097e4:	movsxd rax,DWORD PTR [r13+0x0]
  4097e8:	lea    rdx,[r8+0x4]
  4097ec:	mov    QWORD PTR [rip+0x125ad],rdx        # 0x41bda0
  4097f3:	mov    edx,0x1
  4097f8:	shl    rax,0x6
  4097fc:	add    rax,QWORD PTR [r11]
  4097ff:	mov    r9,QWORD PTR [rax+0x18]
  409803:	call   0x402e70
  409808:	jmp    0x409020
  40980d:	mov    r13,QWORD PTR [rip+0xf14c]        # 0x418960
  409814:	mov    r11,QWORD PTR [rip+0xf155]        # 0x418970
  40981b:	mov    ecx,0x3
  409820:	mov    r8,QWORD PTR [rip+0x12581]        # 0x41bda8
  409827:	movsxd rax,DWORD PTR [r13+0x0]
  40982b:	lea    rdx,[r8+0x2]
  40982f:	mov    QWORD PTR [rip+0x12572],rdx        # 0x41bda8
  409836:	mov    edx,0x1
  40983b:	shl    rax,0x6
  40983f:	add    rax,QWORD PTR [r11]
  409842:	mov    r9,QWORD PTR [rax+0x18]
  409846:	call   0x402e70
  40984b:	jmp    0x409020
  409850:	mov    r13,QWORD PTR [rip+0xf109]        # 0x418960
  409857:	mov    r11,QWORD PTR [rip+0xf112]        # 0x418970
  40985e:	mov    ecx,0x2
  409863:	mov    r8,QWORD PTR [rip+0x1254e]        # 0x41bdb8
  40986a:	movsxd rax,DWORD PTR [r13+0x0]
  40986e:	lea    rdx,[r8+0x1]
  409872:	mov    QWORD PTR [rip+0x1253f],rdx        # 0x41bdb8
  409879:	mov    edx,0x1
  40987e:	shl    rax,0x6
  409882:	add    rax,QWORD PTR [r11]
  409885:	mov    r9,QWORD PTR [rax+0x18]
  409889:	call   0x402e70
  40988e:	jmp    0x409020
  409893:	mov    r13,QWORD PTR [rip+0xf0c6]        # 0x418960
  40989a:	mov    r11,QWORD PTR [rip+0xf0cf]        # 0x418970
  4098a1:	mov    ecx,0x1
  4098a6:	mov    r8,QWORD PTR [rip+0x12503]        # 0x41bdb0
  4098ad:	movsxd rax,DWORD PTR [r13+0x0]
  4098b1:	lea    rdx,[r8+0x1]
  4098b5:	mov    QWORD PTR [rip+0x124f4],rdx        # 0x41bdb0
  4098bc:	mov    edx,0x1
  4098c1:	shl    rax,0x6
  4098c5:	add    rax,QWORD PTR [r11]
  4098c8:	mov    r9,QWORD PTR [rax+0x18]
  4098cc:	call   0x402e70
  4098d1:	jmp    0x409020
  4098d6:	mov    rax,QWORD PTR [rip+0x124c3]        # 0x41bda0
  4098dd:	lea    rdx,[rax+0x4]
  4098e1:	mov    QWORD PTR [rip+0x124b8],rdx        # 0x41bda0
  4098e8:	cvttsd2si edx,QWORD PTR [rip+0x12500]        # 0x41bdf0
  4098f0:	mov    DWORD PTR [rax],edx
  4098f2:	jmp    0x409020
  4098f7:	mov    rax,QWORD PTR [rip+0x124aa]        # 0x41bda8
  4098fe:	lea    rdx,[rax+0x2]
  409902:	mov    QWORD PTR [rip+0x1249f],rdx        # 0x41bda8
  409909:	cvttsd2si edx,QWORD PTR [rip+0x124df]        # 0x41bdf0
  409911:	mov    WORD PTR [rax],dx
  409914:	jmp    0x409020
  409919:	mov    rax,QWORD PTR [rip+0x12498]        # 0x41bdb8
  409920:	lea    rdx,[rax+0x1]
  409924:	mov    QWORD PTR [rip+0x1248d],rdx        # 0x41bdb8
  40992b:	cvttsd2si edx,QWORD PTR [rip+0x124bd]        # 0x41bdf0
  409933:	mov    BYTE PTR [rax],dl
  409935:	jmp    0x409020
  40993a:	mov    rax,QWORD PTR [rip+0x1246f]        # 0x41bdb0
  409941:	lea    rdx,[rax+0x1]
  409945:	mov    QWORD PTR [rip+0x12464],rdx        # 0x41bdb0
  40994c:	cvttsd2si edx,QWORD PTR [rip+0x1249c]        # 0x41bdf0
  409954:	mov    BYTE PTR [rax],dl
  409956:	jmp    0x409020
  40995b:	movsd  xmm0,QWORD PTR [rip+0x1248d]        # 0x41bdf0
  409963:	mov    rax,QWORD PTR [rip+0x1242e]        # 0x41bd98
  40996a:	ucomisd xmm0,QWORD PTR [rip+0xe36e]        # 0x417ce0
  409972:	lea    rdx,[rax+0x4]
  409976:	mov    QWORD PTR [rip+0x1241b],rdx        # 0x41bd98
  40997d:	jp     0x409ff7
  409983:	jne    0x409ff7
  409989:	mov    DWORD PTR [rax],0x7cf00000
  40998f:	jmp    0x409020
  409994:	mov    rax,QWORD PTR [rip+0x123f5]        # 0x41bd90
  40999b:	pxor   xmm0,xmm0
  40999f:	lea    rdx,[rax+0x8]
  4099a3:	cvtsi2sd xmm0,DWORD PTR [rip+0x12439]        # 0x41bde4
  4099ab:	mov    QWORD PTR [rip+0x123de],rdx        # 0x41bd90
  4099b2:	movsd  QWORD PTR [rax],xmm0
  4099b6:	jmp    0x409020
  4099bb:	mov    rax,QWORD PTR [rip+0x123de]        # 0x41bda0
  4099c2:	lea    rdx,[rax+0x4]
  4099c6:	mov    QWORD PTR [rip+0x123d3],rdx        # 0x41bda0
  4099cd:	movsx  edx,WORD PTR [rip+0x1240e]        # 0x41bde2
  4099d4:	mov    DWORD PTR [rax],edx
  4099d6:	jmp    0x409020
  4099db:	mov    rax,QWORD PTR [rip+0x123ae]        # 0x41bd90
  4099e2:	pxor   xmm0,xmm0
  4099e6:	lea    rdx,[rax+0x8]
  4099ea:	mov    QWORD PTR [rip+0x1239f],rdx        # 0x41bd90
  4099f1:	movsx  edx,WORD PTR [rip+0x123ea]        # 0x41bde2
  4099f8:	cvtsi2sd xmm0,edx
  4099fc:	movsd  QWORD PTR [rax],xmm0
  409a00:	jmp    0x409020
  409a05:	mov    rax,QWORD PTR [rip+0x1238c]        # 0x41bd98
  409a0c:	pxor   xmm0,xmm0
  409a10:	lea    rdx,[rax+0x4]
  409a14:	mov    QWORD PTR [rip+0x1237d],rdx        # 0x41bd98
  409a1b:	movsx  edx,WORD PTR [rip+0x123c0]        # 0x41bde2
  409a22:	cvtsi2ss xmm0,edx
  409a26:	movss  DWORD PTR [rax],xmm0
  409a2a:	jmp    0x409020
  409a2f:	mov    rax,QWORD PTR [rip+0x12372]        # 0x41bda8
  409a36:	lea    rdx,[rax+0x2]
  409a3a:	mov    QWORD PTR [rip+0x12367],rdx        # 0x41bda8
  409a41:	mov    edx,DWORD PTR [rip+0x1239d]        # 0x41bde4
  409a47:	mov    WORD PTR [rax],dx
  409a4a:	jmp    0x409020
  409a4f:	mov    rax,QWORD PTR [rip+0x12352]        # 0x41bda8
  409a56:	lea    rdx,[rax+0x2]
  409a5a:	mov    QWORD PTR [rip+0x12347],rdx        # 0x41bda8
  409a61:	cvttss2si edx,DWORD PTR [rip+0x1237f]        # 0x41bde8
  409a69:	mov    WORD PTR [rax],dx
  409a6c:	jmp    0x409020
  409a71:	mov    rax,QWORD PTR [rip+0x12340]        # 0x41bdb8
  409a78:	lea    rdx,[rax+0x1]
  409a7c:	mov    QWORD PTR [rip+0x12335],rdx        # 0x41bdb8
  409a83:	cvttss2si edx,DWORD PTR [rip+0x1235d]        # 0x41bde8
  409a8b:	mov    BYTE PTR [rax],dl
  409a8d:	jmp    0x409020
  409a92:	mov    rax,QWORD PTR [rip+0x122f7]        # 0x41bd90
  409a99:	pxor   xmm3,xmm3
  409a9d:	lea    rdx,[rax+0x8]
  409aa1:	cvtss2sd xmm3,DWORD PTR [rip+0x1233f]        # 0x41bde8
  409aa9:	mov    QWORD PTR [rip+0x122e0],rdx        # 0x41bd90
  409ab0:	movsd  QWORD PTR [rax],xmm3
  409ab4:	jmp    0x409020
  409ab9:	mov    rax,QWORD PTR [rip+0x122e0]        # 0x41bda0
  409ac0:	lea    rdx,[rax+0x4]
  409ac4:	mov    QWORD PTR [rip+0x122d5],rdx        # 0x41bda0
  409acb:	cvttss2si edx,DWORD PTR [rip+0x12315]        # 0x41bde8
  409ad3:	mov    DWORD PTR [rax],edx
  409ad5:	jmp    0x409020
  409ada:	mov    rax,QWORD PTR [rip+0x122af]        # 0x41bd90
  409ae1:	lea    rdx,[rax+0x8]
  409ae5:	mov    QWORD PTR [rax],0x0
  409aec:	mov    QWORD PTR [rip+0x1229d],rdx        # 0x41bd90
  409af3:	jmp    0x409020
  409af8:	mov    rax,QWORD PTR [rip+0x12299]        # 0x41bd98
  409aff:	lea    rdx,[rax+0x4]
  409b03:	mov    DWORD PTR [rax],0x0
  409b09:	mov    QWORD PTR [rip+0x12288],rdx        # 0x41bd98
  409b10:	jmp    0x409020
  409b15:	mov    rax,QWORD PTR [rip+0x12284]        # 0x41bda0
  409b1c:	lea    rdx,[rax+0x4]
  409b20:	mov    QWORD PTR [rip+0x12279],rdx        # 0x41bda0
  409b27:	movsx  edx,BYTE PTR [rip+0x122b2]        # 0x41bde0
  409b2e:	mov    DWORD PTR [rax],edx
  409b30:	jmp    0x409020
  409b35:	mov    rax,QWORD PTR [rip+0x1226c]        # 0x41bda8
  409b3c:	lea    rdx,[rax+0x2]
  409b40:	mov    QWORD PTR [rip+0x12261],rdx        # 0x41bda8
  409b47:	movsx  dx,BYTE PTR [rip+0x12291]        # 0x41bde0
  409b4f:	mov    WORD PTR [rax],dx
  409b52:	jmp    0x409020
  409b57:	mov    rax,QWORD PTR [rip+0x12232]        # 0x41bd90
  409b5e:	pxor   xmm0,xmm0
  409b62:	lea    rdx,[rax+0x8]
  409b66:	mov    QWORD PTR [rip+0x12223],rdx        # 0x41bd90
  409b6d:	movsx  edx,BYTE PTR [rip+0x1226c]        # 0x41bde0
  409b74:	cvtsi2sd xmm0,edx
  409b78:	movsd  QWORD PTR [rax],xmm0
  409b7c:	jmp    0x409020
  409b81:	mov    rax,QWORD PTR [rip+0x12210]        # 0x41bd98
  409b88:	pxor   xmm0,xmm0
  409b8c:	lea    rdx,[rax+0x4]
  409b90:	mov    QWORD PTR [rip+0x12201],rdx        # 0x41bd98
  409b97:	movsx  edx,BYTE PTR [rip+0x12242]        # 0x41bde0
  409b9e:	cvtsi2ss xmm0,edx
  409ba2:	movss  DWORD PTR [rax],xmm0
  409ba6:	jmp    0x409020
  409bab:	mov    rax,QWORD PTR [rip+0x12206]        # 0x41bdb8
  409bb2:	lea    rdx,[rax+0x1]
  409bb6:	mov    QWORD PTR [rip+0x121fb],rdx        # 0x41bdb8
  409bbd:	mov    edx,DWORD PTR [rip+0x12221]        # 0x41bde4
  409bc3:	mov    BYTE PTR [rax],dl
  409bc5:	jmp    0x409020
  409bca:	mov    rax,QWORD PTR [rip+0x121df]        # 0x41bdb0
  409bd1:	lea    rdx,[rax+0x1]
  409bd5:	mov    QWORD PTR [rip+0x121d4],rdx        # 0x41bdb0
  409bdc:	mov    edx,DWORD PTR [rip+0x12202]        # 0x41bde4
  409be2:	mov    BYTE PTR [rax],dl
  409be4:	jmp    0x409020
  409be9:	mov    rax,QWORD PTR [rip+0x121c8]        # 0x41bdb8
  409bf0:	lea    rdx,[rax+0x1]
  409bf4:	mov    QWORD PTR [rip+0x121bd],rdx        # 0x41bdb8
  409bfb:	movzx  edx,WORD PTR [rip+0x121e0]        # 0x41bde2
  409c02:	mov    BYTE PTR [rax],dl
  409c04:	jmp    0x409020
  409c09:	mov    rax,QWORD PTR [rip+0x121a0]        # 0x41bdb0
  409c10:	lea    rdx,[rax+0x1]
  409c14:	mov    QWORD PTR [rip+0x12195],rdx        # 0x41bdb0
  409c1b:	movzx  edx,WORD PTR [rip+0x121c0]        # 0x41bde2
  409c22:	mov    BYTE PTR [rax],dl
  409c24:	jmp    0x409020
  409c29:	pxor   xmm0,xmm0
  409c2d:	mov    rax,QWORD PTR [rip+0x12164]        # 0x41bd98
  409c34:	cvtsi2ss xmm0,DWORD PTR [rip+0x121a8]        # 0x41bde4
  409c3c:	lea    rdx,[rax+0x4]
  409c40:	mov    QWORD PTR [rip+0x12151],rdx        # 0x41bd98
  409c47:	movss  DWORD PTR [rax],xmm0
  409c4b:	jmp    0x409020
  409c50:	mov    rax,QWORD PTR [rip+0x12139]        # 0x41bd90
  409c57:	mov    QWORD PTR [rip+0x1212a],rax        # 0x41bd88
  409c5e:	jmp    0x4087f0
  409c63:	mov    rax,QWORD PTR [rip+0x1212e]        # 0x41bd98
  409c6a:	mov    QWORD PTR [rip+0x12117],rax        # 0x41bd88
  409c71:	jmp    0x4087f0
  409c76:	mov    rax,QWORD PTR [rip+0x12123]        # 0x41bda0
  409c7d:	mov    QWORD PTR [rip+0x12104],rax        # 0x41bd88
  409c84:	jmp    0x4087f0
  409c89:	mov    rax,QWORD PTR [rip+0x12118]        # 0x41bda8
  409c90:	mov    QWORD PTR [rip+0x120f1],rax        # 0x41bd88
  409c97:	jmp    0x4087f0
  409c9c:	mov    rax,QWORD PTR [rip+0x12115]        # 0x41bdb8
  409ca3:	mov    QWORD PTR [rip+0x120de],rax        # 0x41bd88
  409caa:	jmp    0x4087f0
  409caf:	mov    rax,QWORD PTR [rip+0x120fa]        # 0x41bdb0
  409cb6:	mov    QWORD PTR [rip+0x120cb],rax        # 0x41bd88
  409cbd:	jmp    0x4087f0
  409cc2:	lea    rcx,[rip+0xb979]        # 0x415642
  409cc9:	mov    ebx,0x2
  409cce:	call   0x4030d0
  409cd3:	jmp    0x4088f7
  409cd8:	xor    ebx,ebx
  409cda:	jmp    0x4088f7
  409cdf:	mov    rdi,r13
  409ce2:	mov    ebx,0x1
  409ce7:	jmp    0x4088f7
  409cec:	mov    r10,QWORD PTR [rip+0xec4d]        # 0x418940
  409cf3:	mov    r9d,0x1
  409cf9:	mov    QWORD PTR [r10],0x1
  409d00:	jmp    0x409293
  409d05:	mov    r9d,0x1
  409d0b:	mov    r13d,0x1
  409d11:	jmp    0x40960b
  409d16:	mov    eax,DWORD PTR [rip+0x120bc]        # 0x41bdd8
  409d1c:	mov    DWORD PTR [rip+0x1209e],eax        # 0x41bdc0
  409d22:	jmp    0x4087f0
  409d27:	movapd xmm1,xmm0
  409d2b:	movabs rdx,0x8000000000000000
  409d35:	subsd  xmm1,QWORD PTR [rip+0xdfcb]        # 0x417d08
  409d3d:	cvttsd2si rax,xmm1
  409d42:	xor    rax,rdx
  409d45:	jmp    0x408781
  409d4a:	cmp    ecx,0x6
  409d4d:	jle    0x409501
  409d53:	jmp    0x4087f0
  409d58:	mov    r9,QWORD PTR [rip+0x12059]        # 0x41bdb8
  409d5f:	lea    rdx,[rip+0x1209a]        # 0x41be00
  409d66:	mov    r8,r10
  409d69:	mov    QWORD PTR [rsp+0x50],r10
  409d6e:	mov    rcx,r9
  409d71:	mov    QWORD PTR [rsp+0x48],r9
  409d76:	call   0x410920
  409d7b:	mov    r13,QWORD PTR [rip+0xebde]        # 0x418960
  409d82:	mov    r11,QWORD PTR [rip+0xebe7]        # 0x418970
  409d89:	mov    r9,QWORD PTR [rsp+0x48]
  409d8e:	mov    r10,QWORD PTR [rsp+0x50]
  409d93:	movsxd rdx,DWORD PTR [r13+0x0]
  409d97:	shl    rdx,0x6
  409d9b:	add    rdx,QWORD PTR [r11]
  409d9e:	mov    eax,DWORD PTR [rdx+0xc]
  409da1:	sub    eax,0x1
  409da4:	test   eax,eax
  409da6:	jle    0x409fde
  409dac:	mov    rdx,QWORD PTR [rdx+0x10]
  409db0:	cdqe   
  409db2:	movsxd rax,DWORD PTR [rdx+rax*4]
  409db6:	mov    rdx,QWORD PTR [rip+0xea03]        # 0x4187c0
  409dbd:	lea    rax,[rax+rax*2]
  409dc1:	shl    rax,0x3
  409dc5:	add    rax,QWORD PTR [rdx]
  409dc8:	mov    rdx,QWORD PTR [rax]
  409dcb:	lea    rax,[r9+r10*1]
  409dcf:	cmp    r10,rdx
  409dd2:	lea    rcx,[r9+rdx*1]
  409dd6:	jae    0x409de4
  409dd8:	mov    BYTE PTR [rax],0x0
  409ddb:	add    rax,0x1
  409ddf:	cmp    rax,rcx
  409de2:	jne    0x409dd8
  409de4:	mov    rcx,QWORD PTR [rip+0xeb45]        # 0x418930
  409deb:	cmp    r10,rdx
  409dee:	mov    rax,rdx
  409df1:	cmovae rax,r10
  409df5:	add    r9,rax
  409df8:	add    DWORD PTR [rcx],eax
  409dfa:	mov    QWORD PTR [rip+0x11fb7],r9        # 0x41bdb8
  409e01:	mov    QWORD PTR [rip+0x11f80],r9        # 0x41bd88
  409e08:	jmp    0x4087f0
  409e0d:	mov    rcx,QWORD PTR [rip+0x11fbc]        # 0x41bdd0
  409e14:	call   0x406400
  409e19:	mov    eax,DWORD PTR [r13+0x0]
  409e1d:	jmp    0x408c89
  409e22:	mov    rdx,QWORD PTR [r8]
  409e25:	lea    rcx,[rip+0xb67c]        # 0x4154a8
  409e2c:	mov    QWORD PTR [rsp+0x48],r8
  409e31:	call   0x4030d0
  409e36:	mov    r8,QWORD PTR [rsp+0x48]
  409e3b:	jmp    0x408a8a
  409e40:	mov    rdx,rax
  409e43:	mov    rcx,rax
  409e46:	pxor   xmm1,xmm1
  409e4a:	shr    rdx,1
  409e4d:	and    ecx,0x1
  409e50:	or     rdx,rcx
  409e53:	cvtsi2sd xmm1,rdx
  409e58:	addsd  xmm1,xmm1
  409e5c:	jmp    0x408793
  409e61:	lea    rcx,[rip+0xb5aa]        # 0x415412
  409e68:	call   0x4030d0
  409e6d:	movsd  xmm0,QWORD PTR [rip+0x11f7b]        # 0x41bdf0
  409e75:	jmp    0x40876e
  409e7a:	mov    rcx,QWORD PTR [rip+0x11eff]        # 0x41bd80
  409e81:	call   0x402c20
  409e86:	jmp    0x4091de
  409e8b:	mov    r13,QWORD PTR [rip+0xeace]        # 0x418960
  409e92:	mov    r11,QWORD PTR [rip+0xead7]        # 0x418970
  409e99:	sub    rax,rdx
  409e9c:	mov    r8,QWORD PTR [rip+0x11ee5]        # 0x41bd88
  409ea3:	mov    rdx,rax
  409ea6:	movsxd rcx,DWORD PTR [r13+0x0]
  409eaa:	mov    QWORD PTR [rsp+0x48],r11
  409eaf:	shl    rcx,0x6
  409eb3:	add    rcx,QWORD PTR [r11]
  409eb6:	mov    r9,QWORD PTR [rcx+0x18]
  409eba:	mov    ecx,DWORD PTR [rip+0x11f00]        # 0x41bdc0
  409ec0:	call   0x402e70
  409ec5:	mov    rax,QWORD PTR [rip+0xea74]        # 0x418940
  409ecc:	mov    r11,QWORD PTR [rsp+0x48]
  409ed1:	mov    rax,QWORD PTR [rax]
  409ed4:	jmp    0x4091b0
  409ed9:	movsxd rax,DWORD PTR [r13+0x0]
  409edd:	mov    r11,QWORD PTR [rip+0xea8c]        # 0x418970
  409ee4:	lea    rcx,[rip+0xb5e3]        # 0x4154ce
  409eeb:	mov    QWORD PTR [rsp+0x48],r11
  409ef0:	shl    rax,0x6
  409ef4:	add    rax,QWORD PTR [r11]
  409ef7:	mov    rdx,QWORD PTR [rax]
  409efa:	call   0x4030d0
  409eff:	mov    r11,QWORD PTR [rsp+0x48]
  409f04:	jmp    0x408e04
  409f09:	subsd  xmm0,QWORD PTR [rip+0xddf7]        # 0x417d08
  409f11:	movabs rdx,0x8000000000000000
  409f1b:	cvttsd2si rax,xmm0
  409f20:	xor    rax,rdx
  409f23:	jmp    0x4087c4
  409f28:	mov    rdx,QWORD PTR [rax]
  409f2b:	lea    rcx,[rip+0xb5be]        # 0x4154f0
  409f32:	mov    QWORD PTR [rsp+0x48],r11
  409f37:	call   0x4030d0
  409f3c:	mov    rax,QWORD PTR [rip+0xe92d]        # 0x418870
  409f43:	mov    r8,QWORD PTR [rip+0xe866]        # 0x4187b0
  409f4a:	mov    r11,QWORD PTR [rsp+0x48]
  409f4f:	mov    eax,DWORD PTR [rax]
  409f51:	mov    DWORD PTR [r8],eax
  409f54:	jmp    0x408e1e
  409f59:	mov    rdx,QWORD PTR [r13+0x0]
  409f5d:	lea    rcx,[rip+0xb514]        # 0x415478
  409f64:	call   0x4030d0
  409f69:	jmp    0x408eb5
  409f6e:	lea    rcx,[rip+0xb47b]        # 0x4153f0
  409f75:	call   0x4030d0
  409f7a:	movsd  xmm0,QWORD PTR [rip+0x11e6e]        # 0x41bdf0
  409f82:	jmp    0x408760
  409f87:	lea    rcx,[rip+0xb462]        # 0x4153f0
  409f8e:	call   0x4030d0
  409f93:	movsxd rdx,DWORD PTR [rip+0x11e4a]        # 0x41bde4
  409f9a:	jmp    0x408caf
  409f9f:	mov    rax,QWORD PTR [rip+0xe91a]        # 0x4188c0
  409fa6:	mov    ecx,DWORD PTR [rax]
  409fa8:	test   ecx,ecx
  409faa:	je     0x408e3e
  409fb0:	lea    rcx,[rip+0xb561]        # 0x415518
  409fb7:	mov    QWORD PTR [rsp+0x50],r11
  409fbc:	mov    QWORD PTR [rsp+0x48],r8
  409fc1:	call   0x4030d0
  409fc6:	mov    rax,QWORD PTR [rip+0xe8f3]        # 0x4188c0
  409fcd:	mov    r11,QWORD PTR [rsp+0x50]
  409fd2:	mov    r8,QWORD PTR [rsp+0x48]
  409fd7:	mov    ecx,DWORD PTR [rax]
  409fd9:	jmp    0x408e3e
  409fde:	mov    rax,QWORD PTR [rip+0xe94b]        # 0x418930
  409fe5:	add    r9,r10
  409fe8:	mov    QWORD PTR [rip+0x11dc9],r9        # 0x41bdb8
  409fef:	add    DWORD PTR [rax],r10d
  409ff2:	jmp    0x409e01
  409ff7:	pxor   xmm4,xmm4
  409ffb:	cvtsd2ss xmm4,xmm0
  409fff:	movss  DWORD PTR [rax],xmm4
  40a003:	jmp    0x409020
  40a008:	lea    rcx,[rip+0xb5a1]        # 0x4155b0
  40a00f:	mov    edx,r10d
  40a012:	call   0x4030d0
  40a017:	mov    ecx,0x4
  40a01c:	call   0x410a18
  40a021:	mov    rdx,QWORD PTR [rax]
  40a024:	lea    rcx,[rip+0xb515]        # 0x415540
  40a02b:	mov    ebx,0x1
  40a030:	call   0x4030d0
  40a035:	jmp    0x4088f7
  40a03a:	lea    rcx,[rip+0xb55d]        # 0x41559e
  40a041:	call   0x4030d0
  40a046:	mov    ecx,0x3
  40a04b:	call   0x410a18
  40a050:	lea    rcx,[rip+0xb589]        # 0x4155e0
  40a057:	mov    rdx,rax
  40a05a:	call   0x4030d0
  40a05f:	mov    ecx,0x5
  40a064:	call   0x410a18
  40a069:	nop
  40a06a:	nop    WORD PTR [rax+rax*1+0x0]
  40a070:	push   rbx
  40a071:	sub    rsp,0x20
  40a075:	test   rcx,rcx
  40a078:	je     0x40a0ff
  40a07e:	mov    rbx,rcx
  40a081:	call   0x406fe0
  40a086:	mov    rcx,QWORD PTR [rip+0x11cdb]        # 0x41bd68
  40a08d:	mov    rax,QWORD PTR [rip+0x11ce4]        # 0x41bd78
  40a094:	shl    rax,0x3
  40a098:	test   rcx,rcx
  40a09b:	je     0x40a0ed
  40a09d:	mov    rdx,QWORD PTR [rip+0x11cd4]        # 0x41bd78
  40a0a4:	lea    r8,[rdx*8+0x0]
  40a0ac:	lea    rax,[rcx+r8*1]
  40a0b0:	cmp    QWORD PTR [rax],0x0
  40a0b4:	je     0x40a0ed
  40a0b6:	movzx  r10d,BYTE PTR [rip+0x11ca6]        # 0x41bd64
  40a0be:	mov    r9,QWORD PTR [rip+0x11c93]        # 0x41bd58
  40a0c5:	add    rdx,0x1
  40a0c9:	mov    QWORD PTR [rip+0x11ca8],rdx        # 0x41bd78
  40a0d0:	mov    BYTE PTR [r9],r10b
  40a0d3:	mov    r10,QWORD PTR [rax]
  40a0d6:	mov    QWORD PTR [r10+0x10],r9
  40a0da:	mov    r9d,DWORD PTR [rip+0x11c7f]        # 0x41bd60
  40a0e1:	mov    rax,QWORD PTR [rax]
  40a0e4:	mov    DWORD PTR [rax+0x20],r9d
  40a0e8:	lea    rax,[rcx+r8*1+0x8]
  40a0ed:	mov    QWORD PTR [rax],rbx
  40a0f0:	call   0x406f60
  40a0f5:	mov    DWORD PTR [rip+0x11c4d],0x1        # 0x41bd4c
  40a0ff:	add    rsp,0x20
  40a103:	pop    rbx
  40a104:	ret    
  40a105:	nop
  40a106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a110:	push   rdi
  40a111:	push   rsi
  40a112:	push   rbx
  40a113:	sub    rsp,0x20
  40a117:	mov    rsi,QWORD PTR [rip+0x11c4a]        # 0x41bd68
  40a11e:	test   rsi,rsi
  40a121:	je     0x40a168
  40a123:	mov    rbx,QWORD PTR [rip+0x11c4e]        # 0x41bd78
  40a12a:	lea    rdi,[rsi+rbx*8]
  40a12e:	mov    rcx,QWORD PTR [rdi]
  40a131:	test   rcx,rcx
  40a134:	je     0x40a168
  40a136:	call   0x407480
  40a13b:	test   rbx,rbx
  40a13e:	mov    QWORD PTR [rdi],0x0
  40a145:	je     0x40a168
  40a147:	sub    rbx,0x1
  40a14b:	cmp    QWORD PTR [rsi+rbx*8],0x0
  40a150:	mov    QWORD PTR [rip+0x11c21],rbx        # 0x41bd78
  40a157:	je     0x40a168
  40a159:	call   0x406f60
  40a15e:	mov    DWORD PTR [rip+0x11be4],0x1        # 0x41bd4c
  40a168:	add    rsp,0x20
  40a16c:	pop    rbx
  40a16d:	pop    rsi
  40a16e:	pop    rdi
  40a16f:	ret    
  40a170:	push   rdi
  40a171:	push   rsi
  40a172:	push   rbx
  40a173:	sub    rsp,0x20
  40a177:	cmp    rdx,0x1
  40a17b:	jbe    0x40a1f0
  40a17d:	cmp    BYTE PTR [rcx+rdx*1-0x2],0x0
  40a182:	lea    rdi,[rdx-0x2]
  40a186:	jne    0x40a1f0
  40a188:	cmp    BYTE PTR [rcx+rdx*1-0x1],0x0
  40a18d:	jne    0x40a1f0
  40a18f:	mov    rsi,rcx
  40a192:	mov    ecx,0x40
  40a197:	call   0x410998
  40a19c:	test   rax,rax
  40a19f:	mov    rbx,rax
  40a1a2:	je     0x40a1fa
  40a1a4:	mov    QWORD PTR [rax+0x18],rdi
  40a1a8:	mov    QWORD PTR [rax+0x8],rsi
  40a1ac:	mov    rcx,rax
  40a1af:	mov    QWORD PTR [rax+0x10],rsi
  40a1b3:	mov    DWORD PTR [rax+0x20],edi
  40a1b6:	mov    DWORD PTR [rax+0x24],0x0
  40a1bd:	mov    QWORD PTR [rax],0x0
  40a1c4:	mov    DWORD PTR [rax+0x28],0x0
  40a1cb:	mov    DWORD PTR [rax+0x2c],0x1
  40a1d2:	mov    DWORD PTR [rax+0x38],0x0
  40a1d9:	mov    DWORD PTR [rax+0x3c],0x0
  40a1e0:	call   0x4073f0
  40a1e5:	mov    rax,rbx
  40a1e8:	add    rsp,0x20
  40a1ec:	pop    rbx
  40a1ed:	pop    rsi
  40a1ee:	pop    rdi
  40a1ef:	ret    
  40a1f0:	xor    eax,eax
  40a1f2:	add    rsp,0x20
  40a1f6:	pop    rbx
  40a1f7:	pop    rsi
  40a1f8:	pop    rdi
  40a1f9:	ret    
  40a1fa:	lea    rcx,[rip+0xb68f]        # 0x415890
  40a201:	call   0x406fb0
  40a206:	nop
  40a207:	nop    WORD PTR [rax+rax*1+0x0]
  40a210:	push   rdi
  40a211:	push   rsi
  40a212:	push   rbx
  40a213:	sub    rsp,0x20
  40a217:	movsxd rbx,edx
  40a21a:	mov    rsi,rcx
  40a21d:	lea    edi,[rbx+0x2]
  40a220:	movsxd rdi,edi
  40a223:	mov    rcx,rdi
  40a226:	call   0x410998
  40a22b:	test   rax,rax
  40a22e:	je     0x40a27a
  40a230:	xor    r8d,r8d
  40a233:	test   ebx,ebx
  40a235:	jle    0x40a252
  40a237:	nop    WORD PTR [rax+rax*1+0x0]
  40a240:	movzx  r9d,BYTE PTR [rsi+r8*1]
  40a245:	mov    BYTE PTR [rax+r8*1],r9b
  40a249:	add    r8,0x1
  40a24d:	cmp    ebx,r8d
  40a250:	jg     0x40a240
  40a252:	mov    BYTE PTR [rax+rbx*1+0x1],0x0
  40a257:	mov    BYTE PTR [rax+rbx*1],0x0
  40a25b:	mov    rdx,rdi
  40a25e:	mov    rcx,rax
  40a261:	call   0x40a170
  40a266:	test   rax,rax
  40a269:	je     0x40a286
  40a26b:	mov    DWORD PTR [rax+0x24],0x1
  40a272:	add    rsp,0x20
  40a276:	pop    rbx
  40a277:	pop    rsi
  40a278:	pop    rdi
  40a279:	ret    
  40a27a:	lea    rcx,[rip+0xb63f]        # 0x4158c0
  40a281:	call   0x406fb0
  40a286:	lea    rcx,[rip+0xb663]        # 0x4158f0
  40a28d:	call   0x406fb0
  40a292:	nop
  40a293:	nop    DWORD PTR [rax]
  40a296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2a0:	push   rbx
  40a2a1:	sub    rsp,0x20
  40a2a5:	mov    rbx,rcx
  40a2a8:	call   0x410938
  40a2ad:	mov    rcx,rbx
  40a2b0:	mov    edx,eax
  40a2b2:	add    rsp,0x20
  40a2b6:	pop    rbx
  40a2b7:	jmp    0x40a210
  40a2bc:	nop    DWORD PTR [rax+0x0]
  40a2c0:	mov    eax,DWORD PTR [rip+0x7d5a]        # 0x412020
  40a2c6:	ret    
  40a2c7:	nop    WORD PTR [rax+rax*1+0x0]
  40a2d0:	mov    rax,QWORD PTR [rip+0x119f9]        # 0x41bcd0
  40a2d7:	ret    
  40a2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2e0:	mov    rax,QWORD PTR [rip+0x119e1]        # 0x41bcc8
  40a2e7:	ret    
  40a2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2f0:	mov    eax,DWORD PTR [rip+0x1442e]        # 0x41e724
  40a2f6:	ret    
  40a2f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a300:	mov    rax,QWORD PTR [rip+0x14431]        # 0x41e738
  40a307:	ret    
  40a308:	nop    DWORD PTR [rax+rax*1+0x0]
  40a310:	mov    DWORD PTR [rip+0x7d0a],ecx        # 0x412020
  40a316:	ret    
  40a317:	nop    WORD PTR [rax+rax*1+0x0]
  40a320:	mov    QWORD PTR [rip+0x119a9],rcx        # 0x41bcd0
  40a327:	ret    
  40a328:	nop    DWORD PTR [rax+rax*1+0x0]
  40a330:	mov    QWORD PTR [rip+0x11991],rcx        # 0x41bcc8
  40a337:	ret    
  40a338:	nop    DWORD PTR [rax+rax*1+0x0]
  40a340:	mov    eax,DWORD PTR [rip+0x1197a]        # 0x41bcc0
  40a346:	ret    
  40a347:	nop    WORD PTR [rax+rax*1+0x0]
  40a350:	mov    DWORD PTR [rip+0x1196a],ecx        # 0x41bcc0
  40a356:	ret    
  40a357:	nop    WORD PTR [rax+rax*1+0x0]
  40a360:	push   rsi
  40a361:	push   rbx
  40a362:	sub    rsp,0x28
  40a366:	mov    rsi,QWORD PTR [rip+0x119fb]        # 0x41bd68
  40a36d:	test   rsi,rsi
  40a370:	jne    0x40a385
  40a372:	jmp    0x40a398
  40a374:	call   0x407480
  40a379:	mov    QWORD PTR [rbx],0x0
  40a380:	call   0x40a110
  40a385:	mov    rax,QWORD PTR [rip+0x119ec]        # 0x41bd78
  40a38c:	lea    rbx,[rsi+rax*8]
  40a390:	mov    rcx,QWORD PTR [rbx]
  40a393:	test   rcx,rcx
  40a396:	jne    0x40a374
  40a398:	mov    rcx,rsi
  40a39b:	call   0x4109d8
  40a3a0:	xor    eax,eax
  40a3a2:	mov    QWORD PTR [rip+0x119bb],0x0        # 0x41bd68
  40a3ad:	mov    QWORD PTR [rip+0x119c0],0x0        # 0x41bd78
  40a3b8:	mov    QWORD PTR [rip+0x119ad],0x0        # 0x41bd70
  40a3c3:	mov    QWORD PTR [rip+0x1198a],0x0        # 0x41bd58
  40a3ce:	mov    DWORD PTR [rip+0x1197c],0x0        # 0x41bd54
  40a3d8:	mov    DWORD PTR [rip+0x1196e],0x0        # 0x41bd50
  40a3e2:	mov    QWORD PTR [rip+0x118e3],0x0        # 0x41bcd0
  40a3ed:	mov    QWORD PTR [rip+0x118d0],0x0        # 0x41bcc8
  40a3f8:	add    rsp,0x28
  40a3fc:	pop    rbx
  40a3fd:	pop    rsi
  40a3fe:	ret    
  40a3ff:	nop
  40a400:	jmp    0x410998
  40a405:	nop
  40a406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a410:	jmp    0x410978
  40a415:	nop
  40a416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a420:	jmp    0x4109d8
  40a425:	nop
  40a426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a430:	push   rbx
  40a431:	sub    rsp,0x20
  40a435:	movzx  eax,BYTE PTR [rip+0x11928]        # 0x41bd64
  40a43c:	mov    r9,QWORD PTR [rip+0x11915]        # 0x41bd58
  40a443:	mov    rdx,QWORD PTR [rip+0x1192e]        # 0x41bd78
  40a44a:	mov    BYTE PTR [r9],al
  40a44d:	mov    rax,QWORD PTR [rip+0x11914]        # 0x41bd68
  40a454:	lea    r10,[rax+rdx*8]
  40a458:	mov    rcx,QWORD PTR [r10]
  40a45b:	mov    r11,QWORD PTR [rcx+0x8]
  40a45f:	lea    r8,[r11+0x2]
  40a463:	cmp    r9,r8
  40a466:	jae    0x40a4e3
  40a468:	mov    eax,DWORD PTR [rip+0x118f2]        # 0x41bd60
  40a46e:	mov    rbx,QWORD PTR [rcx+0x18]
  40a472:	add    eax,0x2
  40a475:	lea    rdx,[r11+rbx*1+0x2]
  40a47a:	cdqe   
  40a47c:	add    rax,r11
  40a47f:	cmp    r11,rax
  40a482:	jae    0x40a4a5
  40a484:	sub    rax,0x1
  40a488:	movzx  ecx,BYTE PTR [rax]
  40a48b:	sub    rdx,0x1
  40a48f:	mov    BYTE PTR [rdx],cl
  40a491:	mov    rcx,QWORD PTR [r10]
  40a494:	mov    r8,QWORD PTR [rcx+0x8]
  40a498:	cmp    rax,r8
  40a49b:	ja     0x40a484
  40a49d:	mov    rbx,QWORD PTR [rcx+0x18]
  40a4a1:	add    r8,0x2
  40a4a5:	sub    rdx,rax
  40a4a8:	mov    DWORD PTR [rip+0x118b2],ebx        # 0x41bd60
  40a4ae:	mov    DWORD PTR [rcx+0x20],ebx
  40a4b1:	movsxd rdx,edx
  40a4b4:	add    r9,rdx
  40a4b7:	cmp    r9,r8
  40a4ba:	jb     0x40a4e7
  40a4bc:	mov    BYTE PTR [r9-0x1],0x0
  40a4c1:	mov    QWORD PTR [rip+0x14270],rdx        # 0x41e738
  40a4c8:	sub    r9,0x1
  40a4cc:	movzx  eax,BYTE PTR [r9]
  40a4d0:	mov    QWORD PTR [rip+0x11881],r9        # 0x41bd58
  40a4d7:	mov    BYTE PTR [rip+0x11887],al        # 0x41bd64
  40a4dd:	add    rsp,0x20
  40a4e1:	pop    rbx
  40a4e2:	ret    
  40a4e3:	xor    edx,edx
  40a4e5:	jmp    0x40a4bc
  40a4e7:	lea    rcx,[rip+0xb422]        # 0x415910
  40a4ee:	call   0x406fb0
  40a4f3:	nop
  40a4f4:	nop
  40a4f5:	nop
  40a4f6:	nop
  40a4f7:	nop
  40a4f8:	nop
  40a4f9:	nop
  40a4fa:	nop
  40a4fb:	nop
  40a4fc:	nop
  40a4fd:	nop
  40a4fe:	nop
  40a4ff:	nop
  40a500:	jmp    QWORD PTR [rip+0x14f6e]        # 0x41f474
  40a506:	nop
  40a507:	nop
  40a508:	jmp    QWORD PTR [rip+0x14f5e]        # 0x41f46c
  40a50e:	nop
  40a50f:	nop
  40a510:	jmp    QWORD PTR [rip+0x14f4e]        # 0x41f464
  40a516:	nop
  40a517:	nop
  40a518:	jmp    QWORD PTR [rip+0x14f3e]        # 0x41f45c
  40a51e:	nop
  40a51f:	nop
  40a520:	jmp    QWORD PTR [rip+0x14f2e]        # 0x41f454
  40a526:	nop
  40a527:	nop
  40a528:	jmp    QWORD PTR [rip+0x14f1e]        # 0x41f44c
  40a52e:	nop
  40a52f:	nop
  40a530:	jmp    QWORD PTR [rip+0x14f0e]        # 0x41f444
  40a536:	nop
  40a537:	nop
  40a538:	jmp    QWORD PTR [rip+0x14efe]        # 0x41f43c
  40a53e:	nop
  40a53f:	nop
  40a540:	jmp    QWORD PTR [rip+0x14eee]        # 0x41f434
  40a546:	nop
  40a547:	nop
  40a548:	jmp    QWORD PTR [rip+0x14ede]        # 0x41f42c
  40a54e:	nop
  40a54f:	nop
  40a550:	jmp    QWORD PTR [rip+0x14ece]        # 0x41f424
  40a556:	nop
  40a557:	nop
  40a558:	jmp    QWORD PTR [rip+0x14ebe]        # 0x41f41c
  40a55e:	nop
  40a55f:	nop
  40a560:	jmp    QWORD PTR [rip+0x14eae]        # 0x41f414
  40a566:	nop
  40a567:	nop
  40a568:	jmp    QWORD PTR [rip+0x14e9e]        # 0x41f40c
  40a56e:	nop
  40a56f:	nop
  40a570:	jmp    QWORD PTR [rip+0x14e8e]        # 0x41f404
  40a576:	nop
  40a577:	nop
  40a578:	jmp    QWORD PTR [rip+0x14e7e]        # 0x41f3fc
  40a57e:	nop
  40a57f:	nop
  40a580:	jmp    QWORD PTR [rip+0x14e6e]        # 0x41f3f4
  40a586:	nop
  40a587:	nop
  40a588:	jmp    QWORD PTR [rip+0x14e5e]        # 0x41f3ec
  40a58e:	nop
  40a58f:	nop
  40a590:	jmp    QWORD PTR [rip+0x14e4e]        # 0x41f3e4
  40a596:	nop
  40a597:	nop
  40a598:	jmp    QWORD PTR [rip+0x14e3e]        # 0x41f3dc
  40a59e:	nop
  40a59f:	nop
  40a5a0:	push   rbx
  40a5a1:	sub    rsp,0x30
  40a5a5:	mov    rbx,rcx
  40a5a8:	mov    rcx,QWORD PTR [rip+0x14199]        # 0x41e748
  40a5af:	call   0x40ab50
  40a5b4:	cmp    rax,0xffffffffffffffff
  40a5b8:	mov    QWORD PTR [rsp+0x20],rax
  40a5bd:	je     0x40a635
  40a5bf:	mov    ecx,0x8
  40a5c4:	call   0x410a58
  40a5c9:	mov    rcx,QWORD PTR [rip+0x14178]        # 0x41e748
  40a5d0:	call   0x40ab50
  40a5d5:	mov    rcx,QWORD PTR [rip+0x14174]        # 0x41e750
  40a5dc:	mov    QWORD PTR [rsp+0x20],rax
  40a5e1:	call   0x40ab50
  40a5e6:	lea    rdx,[rsp+0x20]
  40a5eb:	lea    r8,[rsp+0x28]
  40a5f0:	mov    rcx,rbx
  40a5f3:	mov    QWORD PTR [rsp+0x28],rax
  40a5f8:	call   0x410ab0
  40a5fd:	mov    rcx,QWORD PTR [rsp+0x20]
  40a602:	mov    rbx,rax
  40a605:	call   0x40ab60
  40a60a:	mov    rcx,QWORD PTR [rsp+0x28]
  40a60f:	mov    QWORD PTR [rip+0x14132],rax        # 0x41e748
  40a616:	call   0x40ab60
  40a61b:	mov    ecx,0x8
  40a620:	mov    QWORD PTR [rip+0x14129],rax        # 0x41e750
  40a627:	call   0x410a38
  40a62c:	mov    rax,rbx
  40a62f:	add    rsp,0x30
  40a633:	pop    rbx
  40a634:	ret    
  40a635:	mov    rax,QWORD PTR [rip+0xe014]        # 0x418650
  40a63c:	mov    rcx,rbx
  40a63f:	call   QWORD PTR [rax]
  40a641:	add    rsp,0x30
  40a645:	pop    rbx
  40a646:	ret    
  40a647:	nop    WORD PTR [rax+rax*1+0x0]
  40a650:	sub    rsp,0x28
  40a654:	call   0x40a5a0
  40a659:	test   rax,rax
  40a65c:	sete   al
  40a65f:	movzx  eax,al
  40a662:	neg    eax
  40a664:	add    rsp,0x28
  40a668:	ret    
  40a669:	nop
  40a66a:	nop
  40a66b:	nop
  40a66c:	nop
  40a66d:	nop
  40a66e:	nop
  40a66f:	nop
  40a670:	sub    rsp,0x28
  40a674:	mov    rax,QWORD PTR [rip+0x79b5]        # 0x412030
  40a67b:	mov    rax,QWORD PTR [rax]
  40a67e:	test   rax,rax
  40a681:	je     0x40a6a0
  40a683:	call   rax
  40a685:	mov    rax,QWORD PTR [rip+0x79a4]        # 0x412030
  40a68c:	lea    rdx,[rax+0x8]
  40a690:	mov    rax,QWORD PTR [rax+0x8]
  40a694:	mov    QWORD PTR [rip+0x7995],rdx        # 0x412030
  40a69b:	test   rax,rax
  40a69e:	jne    0x40a683
  40a6a0:	add    rsp,0x28
  40a6a4:	ret    
  40a6a5:	nop
  40a6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6b0:	push   rsi
  40a6b1:	push   rbx
  40a6b2:	sub    rsp,0x28
  40a6b6:	mov    rsi,QWORD PTR [rip+0xdee3]        # 0x4185a0
  40a6bd:	mov    rax,QWORD PTR [rsi]
  40a6c0:	cmp    eax,0xffffffff
  40a6c3:	mov    ebx,eax
  40a6c5:	je     0x40a6f0
  40a6c7:	test   ebx,ebx
  40a6c9:	je     0x40a6da
  40a6cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6d0:	mov    eax,ebx
  40a6d2:	call   QWORD PTR [rsi+rax*8]
  40a6d5:	sub    ebx,0x1
  40a6d8:	jne    0x40a6d0
  40a6da:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x40a670
  40a6e1:	add    rsp,0x28
  40a6e5:	pop    rbx
  40a6e6:	pop    rsi
  40a6e7:	jmp    0x40a650
  40a6ec:	nop    DWORD PTR [rax+0x0]
  40a6f0:	xor    ebx,ebx
  40a6f2:	jmp    0x40a6f6
  40a6f4:	mov    ebx,eax
  40a6f6:	lea    edx,[rbx+0x1]
  40a6f9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40a6fe:	mov    rax,rdx
  40a701:	jne    0x40a6f4
  40a703:	jmp    0x40a6c7
  40a705:	nop
  40a706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a710:	mov    eax,DWORD PTR [rip+0x12aaa]        # 0x41d1c0
  40a716:	test   eax,eax
  40a718:	je     0x40a720
  40a71a:	repz ret 
  40a71c:	nop    DWORD PTR [rax+0x0]
  40a720:	mov    DWORD PTR [rip+0x12a96],0x1        # 0x41d1c0
  40a72a:	jmp    0x40a6b0
  40a72c:	nop
  40a72d:	nop
  40a72e:	nop
  40a72f:	nop
  40a730:	mov    rax,QWORD PTR [rip+0x14e45]        # 0x41f57c
  40a737:	rex.W jmp rax
  40a73a:	nop
  40a73b:	nop
  40a73c:	nop
  40a73d:	nop
  40a73e:	nop
  40a73f:	nop
  40a740:	xor    eax,eax
  40a742:	ret    
  40a743:	nop
  40a744:	nop
  40a745:	nop
  40a746:	nop
  40a747:	nop
  40a748:	nop
  40a749:	nop
  40a74a:	nop
  40a74b:	nop
  40a74c:	nop
  40a74d:	nop
  40a74e:	nop
  40a74f:	nop
  40a750:	push   r12
  40a752:	push   rbp
  40a753:	push   rdi
  40a754:	push   rsi
  40a755:	push   rbx
  40a756:	sub    rsp,0x40
  40a75a:	mov    rbx,QWORD PTR [rip+0x798f]        # 0x4120f0
  40a761:	movabs rax,0x2b992ddfa232
  40a76b:	mov    QWORD PTR [rsp+0x20],0x0
  40a774:	cmp    rbx,rax
  40a777:	je     0x40a790
  40a779:	not    rbx
  40a77c:	mov    QWORD PTR [rip+0x797d],rbx        # 0x412100
  40a783:	add    rsp,0x40
  40a787:	pop    rbx
  40a788:	pop    rsi
  40a789:	pop    rdi
  40a78a:	pop    rbp
  40a78b:	pop    r12
  40a78d:	ret    
  40a78e:	xchg   ax,ax
  40a790:	lea    rcx,[rsp+0x20]
  40a795:	call   QWORD PTR [rip+0x14d29]        # 0x41f4c4
  40a79b:	mov    r12,QWORD PTR [rsp+0x20]
  40a7a0:	call   QWORD PTR [rip+0x14cf6]        # 0x41f49c
  40a7a6:	mov    ebp,eax
  40a7a8:	call   QWORD PTR [rip+0x14cf6]        # 0x41f4a4
  40a7ae:	mov    edi,eax
  40a7b0:	call   QWORD PTR [rip+0x14d16]        # 0x41f4cc
  40a7b6:	lea    rcx,[rsp+0x30]
  40a7bb:	mov    esi,eax
  40a7bd:	call   QWORD PTR [rip+0x14d21]        # 0x41f4e4
  40a7c3:	xor    r12,QWORD PTR [rsp+0x30]
  40a7c8:	mov    edx,edi
  40a7ca:	movabs rax,0xffffffffffff
  40a7d4:	xor    rbp,r12
  40a7d7:	mov    rdi,rbp
  40a7da:	xor    rdi,rdx
  40a7dd:	mov    edx,esi
  40a7df:	xor    rdi,rdx
  40a7e2:	mov    rsi,rdi
  40a7e5:	and    rsi,rax
  40a7e8:	cmp    rsi,rbx
  40a7eb:	je     0x40a810
  40a7ed:	mov    rax,rsi
  40a7f0:	not    rax
  40a7f3:	mov    QWORD PTR [rip+0x78f6],rsi        # 0x4120f0
  40a7fa:	mov    QWORD PTR [rip+0x78ff],rax        # 0x412100
  40a801:	add    rsp,0x40
  40a805:	pop    rbx
  40a806:	pop    rsi
  40a807:	pop    rdi
  40a808:	pop    rbp
  40a809:	pop    r12
  40a80b:	ret    
  40a80c:	nop    DWORD PTR [rax+0x0]
  40a810:	movabs rax,0xffffd466d2205dcc
  40a81a:	movabs rsi,0x2b992ddfa233
  40a824:	jmp    0x40a7f3
  40a826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a830:	push   rbp
  40a831:	push   rsi
  40a832:	push   rbx
  40a833:	mov    rbp,rsp
  40a836:	sub    rsp,0x70
  40a83a:	mov    rsi,rcx
  40a83d:	lea    rcx,[rip+0x129bc]        # 0x41d200
  40a844:	call   QWORD PTR [rip+0x14caa]        # 0x41f4f4
  40a84a:	mov    rbx,QWORD PTR [rip+0x12aa7]        # 0x41d2f8
  40a851:	xor    r8d,r8d
  40a854:	lea    rdx,[rbp-0x28]
  40a858:	mov    rcx,rbx
  40a85b:	call   QWORD PTR [rip+0x14c9b]        # 0x41f4fc
  40a861:	test   rax,rax
  40a864:	mov    r9,rax
  40a867:	je     0x40a910
  40a86d:	lea    rax,[rbp-0x20]
  40a871:	mov    QWORD PTR [rsp+0x38],0x0
  40a87a:	mov    r8,rbx
  40a87d:	mov    rdx,QWORD PTR [rbp-0x28]
  40a881:	xor    ecx,ecx
  40a883:	mov    QWORD PTR [rsp+0x30],rax
  40a888:	lea    rax,[rbp-0x18]
  40a88c:	mov    QWORD PTR [rsp+0x28],rax
  40a891:	lea    rax,[rip+0x12968]        # 0x41d200
  40a898:	mov    QWORD PTR [rsp+0x20],rax
  40a89d:	call   QWORD PTR [rip+0x14c61]        # 0x41f504
  40a8a3:	mov    rax,QWORD PTR [rip+0x12a4e]        # 0x41d2f8
  40a8aa:	xor    ecx,ecx
  40a8ac:	mov    QWORD PTR [rip+0x129cd],rsi        # 0x41d280
  40a8b3:	mov    DWORD PTR [rip+0x12e43],0xc0000409        # 0x41d700
  40a8bd:	mov    DWORD PTR [rip+0x12e3d],0x1        # 0x41d704
  40a8c7:	mov    QWORD PTR [rip+0x12e42],rax        # 0x41d710
  40a8ce:	mov    rax,QWORD PTR [rip+0x781b]        # 0x4120f0
  40a8d5:	mov    QWORD PTR [rbp-0x10],rax
  40a8d9:	mov    rax,QWORD PTR [rip+0x7820]        # 0x412100
  40a8e0:	mov    QWORD PTR [rbp-0x8],rax
  40a8e4:	call   QWORD PTR [rip+0x14c22]        # 0x41f50c
  40a8ea:	lea    rcx,[rip+0xd44f]        # 0x417d40
  40a8f1:	call   QWORD PTR [rip+0x14c35]        # 0x41f52c
  40a8f7:	call   QWORD PTR [rip+0x14b97]        # 0x41f494
  40a8fd:	mov    edx,0xc0000409
  40a902:	mov    rcx,rax
  40a905:	call   QWORD PTR [rip+0x14c11]        # 0x41f51c
  40a90b:	call   0x410a30
  40a910:	mov    rax,QWORD PTR [rbp+0x18]
  40a914:	mov    QWORD PTR [rip+0x129dd],rax        # 0x41d2f8
  40a91b:	lea    rax,[rbp+0x8]
  40a91f:	mov    QWORD PTR [rip+0x12972],rax        # 0x41d298
  40a926:	jmp    0x40a8a3
  40a92b:	nop
  40a92c:	nop
  40a92d:	nop
  40a92e:	nop
  40a92f:	nop
  40a930:	sub    rsp,0x28
  40a934:	test   edx,edx
  40a936:	je     0x40a950
  40a938:	cmp    edx,0x3
  40a93b:	je     0x40a950
  40a93d:	mov    eax,0x1
  40a942:	add    rsp,0x28
  40a946:	ret    
  40a947:	nop    WORD PTR [rax+rax*1+0x0]
  40a950:	call   0x40b640
  40a955:	mov    eax,0x1
  40a95a:	add    rsp,0x28
  40a95e:	ret    
  40a95f:	nop
  40a960:	push   rsi
  40a961:	push   rbx
  40a962:	sub    rsp,0x28
  40a966:	mov    rax,QWORD PTR [rip+0xdc13]        # 0x418580
  40a96d:	cmp    DWORD PTR [rax],0x2
  40a970:	je     0x40a978
  40a972:	mov    DWORD PTR [rax],0x2
  40a978:	cmp    edx,0x2
  40a97b:	je     0x40a990
  40a97d:	cmp    edx,0x1
  40a980:	je     0x40a9c2
  40a982:	mov    eax,0x1
  40a987:	add    rsp,0x28
  40a98b:	pop    rbx
  40a98c:	pop    rsi
  40a98d:	ret    
  40a98e:	xchg   ax,ax
  40a990:	lea    rbx,[rip+0x156c9]        # 0x420060
  40a997:	lea    rsi,[rip+0x156c2]        # 0x420060
  40a99e:	cmp    rbx,rsi
  40a9a1:	je     0x40a982
  40a9a3:	mov    rax,QWORD PTR [rbx]
  40a9a6:	test   rax,rax
  40a9a9:	je     0x40a9ad
  40a9ab:	call   rax
  40a9ad:	add    rbx,0x8
  40a9b1:	cmp    rbx,rsi
  40a9b4:	jne    0x40a9a3
  40a9b6:	mov    eax,0x1
  40a9bb:	add    rsp,0x28
  40a9bf:	pop    rbx
  40a9c0:	pop    rsi
  40a9c1:	ret    
  40a9c2:	call   0x40b640
  40a9c7:	jmp    0x40a982
  40a9c9:	nop    DWORD PTR [rax+0x0]
  40a9d0:	xor    eax,eax
  40a9d2:	ret    
  40a9d3:	nop
  40a9d4:	nop
  40a9d5:	nop
  40a9d6:	nop
  40a9d7:	nop
  40a9d8:	nop
  40a9d9:	nop
  40a9da:	nop
  40a9db:	nop
  40a9dc:	nop
  40a9dd:	nop
  40a9de:	nop
  40a9df:	nop
  40a9e0:	sub    rsp,0x58
  40a9e4:	mov    rax,QWORD PTR [rip+0x12df5]        # 0x41d7e0
  40a9eb:	test   rax,rax
  40a9ee:	je     0x40aa1c
  40a9f0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  40a9f9:	mov    DWORD PTR [rsp+0x20],ecx
  40a9fd:	lea    rcx,[rsp+0x20]
  40aa02:	mov    QWORD PTR [rsp+0x28],rdx
  40aa07:	movsd  QWORD PTR [rsp+0x30],xmm2
  40aa0d:	movsd  QWORD PTR [rsp+0x38],xmm3
  40aa13:	movsd  QWORD PTR [rsp+0x40],xmm0
  40aa19:	call   rax
  40aa1b:	nop
  40aa1c:	add    rsp,0x58
  40aa20:	ret    
  40aa21:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa30:	mov    QWORD PTR [rip+0x12da9],rcx        # 0x41d7e0
  40aa37:	jmp    0x410a88
  40aa3c:	nop    DWORD PTR [rax+0x0]
  40aa40:	push   rsi
  40aa41:	push   rbx
  40aa42:	sub    rsp,0x78
  40aa46:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40aa4b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  40aa50:	movaps XMMWORD PTR [rsp+0x60],xmm8
  40aa56:	cmp    DWORD PTR [rcx],0x6
  40aa59:	ja     0x40ab30
  40aa5f:	mov    edx,DWORD PTR [rcx]
  40aa61:	lea    rax,[rip+0xd41c]        # 0x417e84
  40aa68:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40aa6c:	add    rax,rdx
  40aa6f:	jmp    rax
  40aa71:	lea    rbx,[rip+0xd2e8]        # 0x417d60
  40aa78:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa80:	movsd  xmm8,QWORD PTR [rcx+0x20]
  40aa86:	mov    rsi,QWORD PTR [rcx+0x8]
  40aa8a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40aa8f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  40aa94:	call   0x410aa0
  40aa99:	movsd  QWORD PTR [rsp+0x30],xmm8
  40aaa0:	lea    rcx,[rax+0x60]
  40aaa4:	lea    rdx,[rip+0xd3ad]        # 0x417e58
  40aaab:	movsd  QWORD PTR [rsp+0x28],xmm7
  40aab1:	mov    r9,rsi
  40aab4:	mov    r8,rbx
  40aab7:	movsd  QWORD PTR [rsp+0x20],xmm6
  40aabd:	call   0x4109f8
  40aac2:	nop
  40aac3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  40aac8:	xor    eax,eax
  40aaca:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40aacf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  40aad5:	add    rsp,0x78
  40aad9:	pop    rbx
  40aada:	pop    rsi
  40aadb:	ret    
  40aadc:	nop    DWORD PTR [rax+0x0]
  40aae0:	lea    rbx,[rip+0xd298]        # 0x417d7f
  40aae7:	jmp    0x40aa80
  40aae9:	nop    DWORD PTR [rax+0x0]
  40aaf0:	lea    rbx,[rip+0xd2a9]        # 0x417da0
  40aaf7:	jmp    0x40aa80
  40aaf9:	nop    DWORD PTR [rax+0x0]
  40ab00:	lea    rbx,[rip+0xd309]        # 0x417e10
  40ab07:	jmp    0x40aa80
  40ab0c:	nop    DWORD PTR [rax+0x0]
  40ab10:	lea    rbx,[rip+0xd2d1]        # 0x417de8
  40ab17:	jmp    0x40aa80
  40ab1c:	nop    DWORD PTR [rax+0x0]
  40ab20:	lea    rbx,[rip+0xd299]        # 0x417dc0
  40ab27:	jmp    0x40aa80
  40ab2c:	nop    DWORD PTR [rax+0x0]
  40ab30:	lea    rbx,[rip+0xd30f]        # 0x417e46
  40ab37:	jmp    0x40aa80
  40ab3c:	nop
  40ab3d:	nop
  40ab3e:	nop
  40ab3f:	nop
  40ab40:	fninit 
  40ab42:	ret    
  40ab43:	nop
  40ab44:	nop
  40ab45:	nop
  40ab46:	nop
  40ab47:	nop
  40ab48:	nop
  40ab49:	nop
  40ab4a:	nop
  40ab4b:	nop
  40ab4c:	nop
  40ab4d:	nop
  40ab4e:	nop
  40ab4f:	nop
  40ab50:	mov    rax,rcx
  40ab53:	ret    
  40ab54:	xchg   ax,ax
  40ab56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab60:	mov    rax,rcx
  40ab63:	ret    
  40ab64:	nop
  40ab65:	nop
  40ab66:	nop
  40ab67:	nop
  40ab68:	nop
  40ab69:	nop
  40ab6a:	nop
  40ab6b:	nop
  40ab6c:	nop
  40ab6d:	nop
  40ab6e:	nop
  40ab6f:	nop
  40ab70:	push   rsi
  40ab71:	push   rbx
  40ab72:	sub    rsp,0x38
  40ab76:	lea    rax,[rsp+0x58]
  40ab7b:	mov    rbx,rcx
  40ab7e:	mov    QWORD PTR [rsp+0x58],rdx
  40ab83:	mov    QWORD PTR [rsp+0x60],r8
  40ab88:	mov    QWORD PTR [rsp+0x68],r9
  40ab8d:	mov    QWORD PTR [rsp+0x28],rax
  40ab92:	call   0x410aa0
  40ab97:	lea    rcx,[rip+0xd302]        # 0x417ea0
  40ab9e:	lea    r9,[rax+0x60]
  40aba2:	mov    r8d,0x1b
  40aba8:	mov    edx,0x1
  40abad:	call   0x4109c8
  40abb2:	mov    rsi,QWORD PTR [rsp+0x28]
  40abb7:	call   0x410aa0
  40abbc:	lea    rcx,[rax+0x60]
  40abc0:	mov    rdx,rbx
  40abc3:	mov    r8,rsi
  40abc6:	call   0x410908
  40abcb:	call   0x410a30
  40abd0:	nop
  40abd1:	nop    DWORD PTR [rax+rax*1+0x0]
  40abd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40abe0:	push   r13
  40abe2:	push   r12
  40abe4:	push   rbp
  40abe5:	push   rdi
  40abe6:	push   rsi
  40abe7:	push   rbx
  40abe8:	sub    rsp,0x58
  40abec:	movsxd rbp,DWORD PTR [rip+0x12c11]        # 0x41d804
  40abf3:	mov    rbx,rcx
  40abf6:	mov    rsi,rdx
  40abf9:	mov    rdi,r8
  40abfc:	test   ebp,ebp
  40abfe:	jle    0x40acfa
  40ac04:	mov    rax,QWORD PTR [rip+0x12bfd]        # 0x41d808
  40ac0b:	xor    r9d,r9d
  40ac0e:	add    rax,0x8
  40ac12:	mov    r10,QWORD PTR [rax]
  40ac15:	cmp    rbx,r10
  40ac18:	jb     0x40ac2e
  40ac1a:	mov    rdx,QWORD PTR [rax+0x8]
  40ac1e:	mov    r11d,DWORD PTR [rdx+0x8]
  40ac22:	add    r10,r11
  40ac25:	cmp    rbx,r10
  40ac28:	jb     0x40ace0
  40ac2e:	add    r9d,0x1
  40ac32:	add    rax,0x18
  40ac36:	cmp    r9d,ebp
  40ac39:	jne    0x40ac12
  40ac3b:	mov    rcx,rbx
  40ac3e:	call   0x40b850
  40ac43:	test   rax,rax
  40ac46:	mov    r12,rax
  40ac49:	je     0x40ad32
  40ac4f:	lea    rbp,[rbp+rbp*2+0x0]
  40ac54:	shl    rbp,0x3
  40ac58:	mov    r13,rbp
  40ac5b:	add    r13,QWORD PTR [rip+0x12ba6]        # 0x41d808
  40ac62:	mov    QWORD PTR [r13+0x10],rax
  40ac66:	mov    DWORD PTR [r13+0x0],0x0
  40ac6e:	call   0x40b970
  40ac73:	mov    edx,DWORD PTR [r12+0xc]
  40ac78:	mov    r8d,0x30
  40ac7e:	add    rax,rdx
  40ac81:	lea    rdx,[rsp+0x20]
  40ac86:	mov    QWORD PTR [r13+0x8],rax
  40ac8a:	mov    rax,QWORD PTR [rip+0x12b77]        # 0x41d808
  40ac91:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  40ac96:	call   QWORD PTR [rip+0x148a0]        # 0x41f53c
  40ac9c:	test   rax,rax
  40ac9f:	je     0x40ad15
  40aca1:	mov    eax,DWORD PTR [rsp+0x44]
  40aca5:	lea    edx,[rax-0x4]
  40aca8:	and    edx,0xfffffffb
  40acab:	je     0x40acd9
  40acad:	sub    eax,0x40
  40acb0:	and    eax,0xffffffbf
  40acb3:	je     0x40acd9
  40acb5:	mov    r9,rbp
  40acb8:	add    r9,QWORD PTR [rip+0x12b49]        # 0x41d808
  40acbf:	mov    r8d,0x40
  40acc5:	mov    rdx,QWORD PTR [rsp+0x38]
  40acca:	mov    rcx,QWORD PTR [rsp+0x20]
  40accf:	call   QWORD PTR [rip+0x1485f]        # 0x41f534
  40acd5:	test   eax,eax
  40acd7:	je     0x40ad01
  40acd9:	add    DWORD PTR [rip+0x12b24],0x1        # 0x41d804
  40ace0:	mov    r8,rdi
  40ace3:	mov    rdx,rsi
  40ace6:	mov    rcx,rbx
  40ace9:	add    rsp,0x58
  40aced:	pop    rbx
  40acee:	pop    rsi
  40acef:	pop    rdi
  40acf0:	pop    rbp
  40acf1:	pop    r12
  40acf3:	pop    r13
  40acf5:	jmp    0x410990
  40acfa:	xor    ebp,ebp
  40acfc:	jmp    0x40ac3b
  40ad01:	call   QWORD PTR [rip+0x147a5]        # 0x41f4ac
  40ad07:	lea    rcx,[rip+0xd20a]        # 0x417f18
  40ad0e:	mov    edx,eax
  40ad10:	call   0x40ab70
  40ad15:	mov    rax,QWORD PTR [rip+0x12aec]        # 0x41d808
  40ad1c:	mov    edx,DWORD PTR [r12+0x8]
  40ad21:	lea    rcx,[rip+0xd1b8]        # 0x417ee0
  40ad28:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40ad2d:	call   0x40ab70
  40ad32:	lea    rcx,[rip+0xd187]        # 0x417ec0
  40ad39:	mov    rdx,rbx
  40ad3c:	call   0x40ab70
  40ad41:	nop
  40ad42:	nop    DWORD PTR [rax+0x0]
  40ad46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad50:	push   rbp
  40ad51:	push   r14
  40ad53:	push   r13
  40ad55:	push   r12
  40ad57:	push   rdi
  40ad58:	push   rsi
  40ad59:	push   rbx
  40ad5a:	mov    rbp,rsp
  40ad5d:	sub    rsp,0x60
  40ad61:	mov    ebx,DWORD PTR [rip+0x12a99]        # 0x41d800
  40ad67:	test   ebx,ebx
  40ad69:	je     0x40ad80
  40ad6b:	mov    rsp,rbp
  40ad6e:	pop    rbx
  40ad6f:	pop    rsi
  40ad70:	pop    rdi
  40ad71:	pop    r12
  40ad73:	pop    r13
  40ad75:	pop    r14
  40ad77:	pop    rbp
  40ad78:	ret    
  40ad79:	nop    DWORD PTR [rax+0x0]
  40ad80:	mov    DWORD PTR [rip+0x12a76],0x1        # 0x41d800
  40ad8a:	call   0x40b8a0
  40ad8f:	cdqe   
  40ad91:	lea    rax,[rax+rax*2]
  40ad95:	lea    rax,[rax*8+0x1e]
  40ad9d:	and    rax,0xfffffffffffffff0
  40ada1:	call   0x40bac0
  40ada6:	mov    rsi,QWORD PTR [rip+0xd803]        # 0x4185b0
  40adad:	mov    rbx,QWORD PTR [rip+0xd80c]        # 0x4185c0
  40adb4:	sub    rsp,rax
  40adb7:	mov    DWORD PTR [rip+0x12a43],0x0        # 0x41d804
  40adc1:	lea    rax,[rsp+0x20]
  40adc6:	mov    QWORD PTR [rip+0x12a3b],rax        # 0x41d808
  40adcd:	mov    rax,rsi
  40add0:	sub    rax,rbx
  40add3:	cmp    rax,0x7
  40add7:	jle    0x40ad6b
  40add9:	cmp    rax,0xb
  40addd:	jle    0x40ae05
  40addf:	mov    r11d,DWORD PTR [rbx]
  40ade2:	test   r11d,r11d
  40ade5:	jne    0x40af30
  40adeb:	mov    r10d,DWORD PTR [rbx+0x4]
  40adef:	test   r10d,r10d
  40adf2:	jne    0x40af30
  40adf8:	mov    r9d,DWORD PTR [rbx+0x8]
  40adfc:	test   r9d,r9d
  40adff:	jne    0x40ae1c
  40ae01:	add    rbx,0xc
  40ae05:	mov    r8d,DWORD PTR [rbx]
  40ae08:	test   r8d,r8d
  40ae0b:	jne    0x40af30
  40ae11:	mov    ecx,DWORD PTR [rbx+0x4]
  40ae14:	test   ecx,ecx
  40ae16:	jne    0x40af30
  40ae1c:	mov    edx,DWORD PTR [rbx+0x8]
  40ae1f:	cmp    edx,0x1
  40ae22:	jne    0x40b03c
  40ae28:	add    rbx,0xc
  40ae2c:	cmp    rbx,rsi
  40ae2f:	jae    0x40ad6b
  40ae35:	mov    r12,QWORD PTR [rip+0xd7c4]        # 0x418600
  40ae3c:	lea    r13,[rbp-0x30]
  40ae40:	movabs r14,0xffffffff00000000
  40ae4a:	mov    ecx,DWORD PTR [rbx+0x4]
  40ae4d:	mov    eax,DWORD PTR [rbx]
  40ae4f:	movzx  edx,BYTE PTR [rbx+0x8]
  40ae53:	add    rax,r12
  40ae56:	add    rcx,r12
  40ae59:	cmp    edx,0x10
  40ae5c:	mov    r8,QWORD PTR [rax]
  40ae5f:	je     0x40afa6
  40ae65:	jbe    0x40af6d
  40ae6b:	cmp    edx,0x20
  40ae6e:	je     0x40afef
  40ae74:	cmp    edx,0x40
  40ae77:	jne    0x40afdb
  40ae7d:	sub    r8,rax
  40ae80:	mov    rdx,r13
  40ae83:	mov    rdi,r13
  40ae86:	mov    rax,r8
  40ae89:	add    rax,QWORD PTR [rcx]
  40ae8c:	mov    r8d,0x8
  40ae92:	mov    QWORD PTR [rbp-0x30],rax
  40ae96:	call   0x40abe0
  40ae9b:	add    rbx,0xc
  40ae9f:	cmp    rbx,rsi
  40aea2:	jb     0x40ae4a
  40aea4:	mov    eax,DWORD PTR [rip+0x1295a]        # 0x41d804
  40aeaa:	xor    ebx,ebx
  40aeac:	xor    esi,esi
  40aeae:	test   eax,eax
  40aeb0:	jle    0x40ad6b
  40aeb6:	mov    r14,QWORD PTR [rip+0x1467f]        # 0x41f53c
  40aebd:	lea    r13,[rbp-0x34]
  40aec1:	mov    r12,QWORD PTR [rip+0x1466c]        # 0x41f534
  40aec8:	jmp    0x40aee3
  40aeca:	nop    WORD PTR [rax+rax*1+0x0]
  40aed0:	add    esi,0x1
  40aed3:	add    rbx,0x18
  40aed7:	cmp    esi,DWORD PTR [rip+0x12927]        # 0x41d804
  40aedd:	jge    0x40ad6b
  40aee3:	mov    rax,rbx
  40aee6:	add    rax,QWORD PTR [rip+0x1291b]        # 0x41d808
  40aeed:	mov    edx,DWORD PTR [rax]
  40aeef:	test   edx,edx
  40aef1:	je     0x40aed0
  40aef3:	mov    rcx,QWORD PTR [rax+0x8]
  40aef7:	mov    r8d,0x30
  40aefd:	mov    rdx,rdi
  40af00:	call   r14
  40af03:	test   rax,rax
  40af06:	je     0x40b01e
  40af0c:	mov    rax,QWORD PTR [rip+0x128f5]        # 0x41d808
  40af13:	mov    r9,r13
  40af16:	mov    rdx,QWORD PTR [rbp-0x18]
  40af1a:	mov    rcx,QWORD PTR [rbp-0x30]
  40af1e:	mov    r8d,DWORD PTR [rax+rbx*1]
  40af22:	call   r12
  40af25:	jmp    0x40aed0
  40af27:	nop    WORD PTR [rax+rax*1+0x0]
  40af30:	cmp    rbx,rsi
  40af33:	jae    0x40ad6b
  40af39:	mov    r12,QWORD PTR [rip+0xd6c0]        # 0x418600
  40af40:	lea    rdi,[rbp-0x30]
  40af44:	mov    ecx,DWORD PTR [rbx+0x4]
  40af47:	mov    eax,DWORD PTR [rbx]
  40af49:	mov    r8d,0x4
  40af4f:	mov    rdx,rdi
  40af52:	add    rbx,0x8
  40af56:	add    rcx,r12
  40af59:	add    eax,DWORD PTR [rcx]
  40af5b:	mov    DWORD PTR [rbp-0x30],eax
  40af5e:	call   0x40abe0
  40af63:	cmp    rbx,rsi
  40af66:	jb     0x40af44
  40af68:	jmp    0x40aea4
  40af6d:	cmp    edx,0x8
  40af70:	jne    0x40afdb
  40af72:	movzx  edx,BYTE PTR [rcx]
  40af75:	mov    rdi,r13
  40af78:	mov    r10,rdx
  40af7b:	or     r10,0xffffffffffffff00
  40af82:	test   dl,dl
  40af84:	cmovs  rdx,r10
  40af88:	sub    rdx,rax
  40af8b:	lea    rax,[r8+rdx*1]
  40af8f:	mov    r8d,0x1
  40af95:	mov    rdx,r13
  40af98:	mov    QWORD PTR [rbp-0x30],rax
  40af9c:	call   0x40abe0
  40afa1:	jmp    0x40ae9b
  40afa6:	movzx  edx,WORD PTR [rcx]
  40afa9:	mov    rdi,r13
  40afac:	mov    r10,rdx
  40afaf:	or     r10,0xffffffffffff0000
  40afb6:	test   dx,dx
  40afb9:	cmovs  rdx,r10
  40afbd:	sub    rdx,rax
  40afc0:	lea    rax,[r8+rdx*1]
  40afc4:	mov    r8d,0x2
  40afca:	mov    rdx,r13
  40afcd:	mov    QWORD PTR [rbp-0x30],rax
  40afd1:	call   0x40abe0
  40afd6:	jmp    0x40ae9b
  40afdb:	lea    rcx,[rip+0xcf96]        # 0x417f78
  40afe2:	mov    QWORD PTR [rbp-0x30],0x0
  40afea:	call   0x40ab70
  40afef:	mov    edx,DWORD PTR [rcx]
  40aff1:	mov    rdi,r13
  40aff4:	mov    r10,rdx
  40aff7:	or     r10,r14
  40affa:	test   edx,edx
  40affc:	cmovs  rdx,r10
  40b000:	sub    rdx,rax
  40b003:	lea    rax,[r8+rdx*1]
  40b007:	mov    r8d,0x4
  40b00d:	mov    rdx,r13
  40b010:	mov    QWORD PTR [rbp-0x30],rax
  40b014:	call   0x40abe0
  40b019:	jmp    0x40ae9b
  40b01e:	add    rbx,QWORD PTR [rip+0x127e3]        # 0x41d808
  40b025:	lea    rcx,[rip+0xceb4]        # 0x417ee0
  40b02c:	mov    rax,QWORD PTR [rbx+0x10]
  40b030:	mov    r8,QWORD PTR [rbx+0x8]
  40b034:	mov    edx,DWORD PTR [rax+0x8]
  40b037:	call   0x40ab70
  40b03c:	lea    rcx,[rip+0xcefd]        # 0x417f40
  40b043:	call   0x40ab70
  40b048:	nop
  40b049:	nop
  40b04a:	nop
  40b04b:	nop
  40b04c:	nop
  40b04d:	nop
  40b04e:	nop
  40b04f:	nop
  40b050:	sub    rsp,0x28
  40b054:	mov    eax,DWORD PTR [rcx]
  40b056:	cmp    eax,0xc0000091
  40b05b:	ja     0x40b0c0
  40b05d:	cmp    eax,0xc000008d
  40b062:	jae    0x40b0df
  40b064:	cmp    eax,0xc0000008
  40b069:	je     0x40b180
  40b06f:	ja     0x40b150
  40b075:	cmp    eax,0x80000002
  40b07a:	je     0x40b180
  40b080:	cmp    eax,0xc0000005
  40b085:	jne    0x40b15e
  40b08b:	xor    edx,edx
  40b08d:	mov    ecx,0xb
  40b092:	call   0x410970
  40b097:	cmp    rax,0x1
  40b09b:	je     0x40b1e0
  40b0a1:	test   rax,rax
  40b0a4:	je     0x40b1c0
  40b0aa:	mov    ecx,0xb
  40b0af:	call   rax
  40b0b1:	xor    eax,eax
  40b0b3:	add    rsp,0x28
  40b0b7:	ret    
  40b0b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b0c0:	cmp    eax,0xc0000094
  40b0c5:	je     0x40b190
  40b0cb:	ja     0x40b110
  40b0cd:	cmp    eax,0xc0000092
  40b0d2:	je     0x40b180
  40b0d8:	cmp    eax,0xc0000093
  40b0dd:	jne    0x40b15e
  40b0df:	xor    edx,edx
  40b0e1:	mov    ecx,0x8
  40b0e6:	call   0x410970
  40b0eb:	cmp    rax,0x1
  40b0ef:	mov    rdx,rax
  40b0f2:	je     0x40b168
  40b0f4:	test   rdx,rdx
  40b0f7:	mov    eax,0x1
  40b0fc:	je     0x40b0b3
  40b0fe:	mov    ecx,0x8
  40b103:	call   rdx
  40b105:	xor    eax,eax
  40b107:	add    rsp,0x28
  40b10b:	ret    
  40b10c:	nop    DWORD PTR [rax+0x0]
  40b110:	cmp    eax,0xc0000095
  40b115:	je     0x40b180
  40b117:	cmp    eax,0xc0000096
  40b11c:	jne    0x40b15e
  40b11e:	xor    edx,edx
  40b120:	mov    ecx,0x4
  40b125:	call   0x410970
  40b12a:	cmp    rax,0x1
  40b12e:	je     0x40b1ca
  40b134:	test   rax,rax
  40b137:	je     0x40b1c0
  40b13d:	mov    ecx,0x4
  40b142:	call   rax
  40b144:	xor    eax,eax
  40b146:	jmp    0x40b0b3
  40b14b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b150:	cmp    eax,0xc000001d
  40b155:	je     0x40b11e
  40b157:	cmp    eax,0xc000008c
  40b15c:	je     0x40b180
  40b15e:	mov    eax,0x1
  40b163:	add    rsp,0x28
  40b167:	ret    
  40b168:	mov    edx,0x1
  40b16d:	mov    ecx,0x8
  40b172:	call   0x410970
  40b177:	call   0x40ab40
  40b17c:	nop    DWORD PTR [rax+0x0]
  40b180:	xor    eax,eax
  40b182:	add    rsp,0x28
  40b186:	ret    
  40b187:	nop    WORD PTR [rax+rax*1+0x0]
  40b190:	xor    edx,edx
  40b192:	mov    ecx,0x8
  40b197:	call   0x410970
  40b19c:	cmp    rax,0x1
  40b1a0:	mov    rdx,rax
  40b1a3:	jne    0x40b0f4
  40b1a9:	mov    edx,0x1
  40b1ae:	mov    ecx,0x8
  40b1b3:	call   0x410970
  40b1b8:	xor    eax,eax
  40b1ba:	jmp    0x40b0b3
  40b1bf:	nop
  40b1c0:	mov    eax,0x4
  40b1c5:	add    rsp,0x28
  40b1c9:	ret    
  40b1ca:	mov    edx,0x1
  40b1cf:	mov    ecx,0x4
  40b1d4:	call   0x410970
  40b1d9:	xor    eax,eax
  40b1db:	jmp    0x40b0b3
  40b1e0:	mov    edx,0x1
  40b1e5:	mov    ecx,0xb
  40b1ea:	call   0x410970
  40b1ef:	xor    eax,eax
  40b1f1:	jmp    0x40b0b3
  40b1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b200:	push   r12
  40b202:	push   rbp
  40b203:	push   rdi
  40b204:	push   rsi
  40b205:	push   rbx
  40b206:	sub    rsp,0x20
  40b20a:	call   0x40b970
  40b20f:	mov    rbp,rax
  40b212:	mov    eax,DWORD PTR [rip+0x12630]        # 0x41d848
  40b218:	test   eax,eax
  40b21a:	jne    0x40b241
  40b21c:	test   rbp,rbp
  40b21f:	je     0x40b241
  40b221:	lea    rcx,[rip+0xcd88]        # 0x417fb0
  40b228:	mov    DWORD PTR [rip+0x12616],0x1        # 0x41d848
  40b232:	call   0x40b7b0
  40b237:	test   rax,rax
  40b23a:	je     0x40b250
  40b23c:	mov    eax,0x1
  40b241:	add    rsp,0x20
  40b245:	pop    rbx
  40b246:	pop    rsi
  40b247:	pop    rdi
  40b248:	pop    rbp
  40b249:	pop    r12
  40b24b:	ret    
  40b24c:	nop    DWORD PTR [rax+0x0]
  40b250:	lea    rbx,[rip+0x12729]        # 0x41d980
  40b257:	mov    ecx,0x30
  40b25c:	lea    rdx,[rip+0x1261d]        # 0x41d880
  40b263:	lea    r12,[rip+0xfffffffffffffde6]        # 0x40b050
  40b26a:	xor    esi,esi
  40b26c:	mov    rdi,rbx
  40b26f:	rep stos QWORD PTR es:[rdi],rax
  40b272:	mov    rdi,rdx
  40b275:	sub    r12,rbp
  40b278:	mov    cl,0x20
  40b27a:	rep stos QWORD PTR es:[rdi],rax
  40b27d:	mov    rdi,rdx
  40b280:	jmp    0x40b2b0
  40b282:	mov    BYTE PTR [rdi],0x9
  40b285:	mov    DWORD PTR [rdi+0x4],r12d
  40b289:	add    rsi,0x1
  40b28d:	mov    edx,DWORD PTR [rax+0xc]
  40b290:	add    rbx,0xc
  40b294:	mov    DWORD PTR [rbx-0xc],edx
  40b297:	add    edx,DWORD PTR [rax+0x8]
  40b29a:	mov    rax,rdi
  40b29d:	sub    rax,rbp
  40b2a0:	add    rdi,0x8
  40b2a4:	mov    DWORD PTR [rbx-0x4],eax
  40b2a7:	mov    DWORD PTR [rbx-0x8],edx
  40b2aa:	cmp    rsi,0x20
  40b2ae:	je     0x40b2e5
  40b2b0:	mov    rcx,rsi
  40b2b3:	call   0x40b8e0
  40b2b8:	test   rax,rax
  40b2bb:	jne    0x40b282
  40b2bd:	test   rsi,rsi
  40b2c0:	je     0x40b23c
  40b2c6:	mov    edx,esi
  40b2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b2d0:	mov    r8,rbp
  40b2d3:	lea    rcx,[rip+0x126a6]        # 0x41d980
  40b2da:	call   QWORD PTR [rip+0x1420c]        # 0x41f4ec
  40b2e0:	jmp    0x40b23c
  40b2e5:	mov    edx,0x20
  40b2ea:	jmp    0x40b2d0
  40b2ec:	nop    DWORD PTR [rax+0x0]
  40b2f0:	push   rbx
  40b2f1:	sub    rsp,0x20
  40b2f5:	mov    rdx,QWORD PTR [rcx]
  40b2f8:	mov    eax,DWORD PTR [rdx]
  40b2fa:	mov    r8d,eax
  40b2fd:	and    r8d,0x20ffffff
  40b304:	cmp    r8d,0x20474343
  40b30b:	je     0x40b410
  40b311:	cmp    eax,0xc0000091
  40b316:	mov    rbx,rcx
  40b319:	ja     0x40b3a0
  40b31f:	cmp    eax,0xc000008d
  40b324:	jae    0x40b3b7
  40b32a:	cmp    eax,0xc0000008
  40b32f:	je     0x40b363
  40b331:	ja     0x40b370
  40b333:	cmp    eax,0x80000002
  40b338:	je     0x40b363
  40b33a:	cmp    eax,0xc0000005
  40b33f:	jne    0x40b382
  40b341:	xor    edx,edx
  40b343:	mov    ecx,0xb
  40b348:	call   0x410970
  40b34d:	cmp    rax,0x1
  40b351:	je     0x40b480
  40b357:	test   rax,rax
  40b35a:	je     0x40b382
  40b35c:	mov    ecx,0xb
  40b361:	call   rax
  40b363:	mov    eax,0xffffffff
  40b368:	add    rsp,0x20
  40b36c:	pop    rbx
  40b36d:	ret    
  40b36e:	xchg   ax,ax
  40b370:	cmp    eax,0xc000001d
  40b375:	je     0x40b436
  40b37b:	cmp    eax,0xc000008c
  40b380:	je     0x40b363
  40b382:	mov    rax,QWORD PTR [rip+0x124b7]        # 0x41d840
  40b389:	test   rax,rax
  40b38c:	je     0x40b368
  40b38e:	mov    rcx,rbx
  40b391:	add    rsp,0x20
  40b395:	pop    rbx
  40b396:	rex.W jmp rax
  40b399:	nop    DWORD PTR [rax+0x0]
  40b3a0:	cmp    eax,0xc0000094
  40b3a5:	je     0x40b3e2
  40b3a7:	ja     0x40b420
  40b3a9:	cmp    eax,0xc0000092
  40b3ae:	je     0x40b363
  40b3b0:	cmp    eax,0xc0000093
  40b3b5:	jne    0x40b382
  40b3b7:	xor    edx,edx
  40b3b9:	mov    ecx,0x8
  40b3be:	call   0x410970
  40b3c3:	cmp    rax,0x1
  40b3c7:	jne    0x40b3f4
  40b3c9:	mov    edx,0x1
  40b3ce:	mov    ecx,0x8
  40b3d3:	call   0x410970
  40b3d8:	call   0x40ab40
  40b3dd:	jmp    0x40b363
  40b3e2:	xor    edx,edx
  40b3e4:	mov    ecx,0x8
  40b3e9:	call   0x410970
  40b3ee:	cmp    rax,0x1
  40b3f2:	je     0x40b462
  40b3f4:	test   rax,rax
  40b3f7:	je     0x40b382
  40b3f9:	mov    ecx,0x8
  40b3fe:	call   rax
  40b400:	mov    eax,0xffffffff
  40b405:	jmp    0x40b368
  40b40a:	nop    WORD PTR [rax+rax*1+0x0]
  40b410:	test   BYTE PTR [rdx+0x4],0x1
  40b414:	jne    0x40b311
  40b41a:	jmp    0x40b363
  40b41f:	nop
  40b420:	cmp    eax,0xc0000095
  40b425:	je     0x40b363
  40b42b:	cmp    eax,0xc0000096
  40b430:	jne    0x40b382
  40b436:	xor    edx,edx
  40b438:	mov    ecx,0x4
  40b43d:	call   0x410970
  40b442:	cmp    rax,0x1
  40b446:	je     0x40b494
  40b448:	test   rax,rax
  40b44b:	je     0x40b382
  40b451:	mov    ecx,0x4
  40b456:	call   rax
  40b458:	mov    eax,0xffffffff
  40b45d:	jmp    0x40b368
  40b462:	mov    edx,0x1
  40b467:	mov    ecx,0x8
  40b46c:	call   0x410970
  40b471:	jmp    0x40b363
  40b476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b480:	mov    edx,0x1
  40b485:	mov    ecx,0xb
  40b48a:	call   0x410970
  40b48f:	jmp    0x40b363
  40b494:	mov    edx,0x1
  40b499:	mov    ecx,0x4
  40b49e:	call   0x410970
  40b4a3:	jmp    0x40b363
  40b4a8:	nop
  40b4a9:	nop
  40b4aa:	nop
  40b4ab:	nop
  40b4ac:	nop
  40b4ad:	nop
  40b4ae:	nop
  40b4af:	nop
  40b4b0:	push   rbp
  40b4b1:	push   rdi
  40b4b2:	push   rsi
  40b4b3:	push   rbx
  40b4b4:	sub    rsp,0x28
  40b4b8:	lea    rcx,[rip+0x12661]        # 0x41db20
  40b4bf:	call   QWORD PTR [rip+0x13fc7]        # 0x41f48c
  40b4c5:	mov    rbx,QWORD PTR [rip+0x12634]        # 0x41db00
  40b4cc:	test   rbx,rbx
  40b4cf:	je     0x40b504
  40b4d1:	mov    rbp,QWORD PTR [rip+0x1404c]        # 0x41f524
  40b4d8:	mov    rdi,QWORD PTR [rip+0x13fcd]        # 0x41f4ac
  40b4df:	nop
  40b4e0:	mov    ecx,DWORD PTR [rbx]
  40b4e2:	call   rbp
  40b4e4:	mov    rsi,rax
  40b4e7:	call   rdi
  40b4e9:	test   eax,eax
  40b4eb:	jne    0x40b4fb
  40b4ed:	test   rsi,rsi
  40b4f0:	je     0x40b4fb
  40b4f2:	mov    rax,QWORD PTR [rbx+0x8]
  40b4f6:	mov    rcx,rsi
  40b4f9:	call   rax
  40b4fb:	mov    rbx,QWORD PTR [rbx+0x10]
  40b4ff:	test   rbx,rbx
  40b502:	jne    0x40b4e0
  40b504:	mov    rax,QWORD PTR [rip+0x13fd1]        # 0x41f4dc
  40b50b:	lea    rcx,[rip+0x1260e]        # 0x41db20
  40b512:	add    rsp,0x28
  40b516:	pop    rbx
  40b517:	pop    rsi
  40b518:	pop    rdi
  40b519:	pop    rbp
  40b51a:	rex.W jmp rax
  40b51d:	nop    DWORD PTR [rax]
  40b520:	push   rdi
  40b521:	push   rsi
  40b522:	push   rbx
  40b523:	sub    rsp,0x20
  40b527:	mov    eax,DWORD PTR [rip+0x125db]        # 0x41db08
  40b52d:	test   eax,eax
  40b52f:	jne    0x40b540
  40b531:	add    rsp,0x20
  40b535:	pop    rbx
  40b536:	pop    rsi
  40b537:	pop    rdi
  40b538:	ret    
  40b539:	nop    DWORD PTR [rax+0x0]
  40b540:	mov    rsi,rdx
  40b543:	mov    edi,ecx
  40b545:	mov    edx,0x18
  40b54a:	mov    ecx,0x1
  40b54f:	call   0x410a28
  40b554:	test   rax,rax
  40b557:	mov    rbx,rax
  40b55a:	je     0x40b598
  40b55c:	mov    DWORD PTR [rax],edi
  40b55e:	mov    QWORD PTR [rax+0x8],rsi
  40b562:	lea    rcx,[rip+0x125b7]        # 0x41db20
  40b569:	call   QWORD PTR [rip+0x13f1d]        # 0x41f48c
  40b56f:	mov    rax,QWORD PTR [rip+0x1258a]        # 0x41db00
  40b576:	lea    rcx,[rip+0x125a3]        # 0x41db20
  40b57d:	mov    QWORD PTR [rip+0x1257c],rbx        # 0x41db00
  40b584:	mov    QWORD PTR [rbx+0x10],rax
  40b588:	call   QWORD PTR [rip+0x13f4e]        # 0x41f4dc
  40b58e:	xor    eax,eax
  40b590:	add    rsp,0x20
  40b594:	pop    rbx
  40b595:	pop    rsi
  40b596:	pop    rdi
  40b597:	ret    
  40b598:	mov    eax,0xffffffff
  40b59d:	jmp    0x40b531
  40b59f:	nop
  40b5a0:	push   rbx
  40b5a1:	sub    rsp,0x20
  40b5a5:	mov    eax,DWORD PTR [rip+0x1255d]        # 0x41db08
  40b5ab:	test   eax,eax
  40b5ad:	jne    0x40b5c0
  40b5af:	xor    eax,eax
  40b5b1:	add    rsp,0x20
  40b5b5:	pop    rbx
  40b5b6:	ret    
  40b5b7:	nop    WORD PTR [rax+rax*1+0x0]
  40b5c0:	mov    ebx,ecx
  40b5c2:	lea    rcx,[rip+0x12557]        # 0x41db20
  40b5c9:	call   QWORD PTR [rip+0x13ebd]        # 0x41f48c
  40b5cf:	mov    rdx,QWORD PTR [rip+0x1252a]        # 0x41db00
  40b5d6:	test   rdx,rdx
  40b5d9:	je     0x40b5f7
  40b5db:	mov    eax,DWORD PTR [rdx]
  40b5dd:	cmp    eax,ebx
  40b5df:	jne    0x40b5ee
  40b5e1:	jmp    0x40b62f
  40b5e3:	mov    r8d,DWORD PTR [rax]
  40b5e6:	cmp    r8d,ebx
  40b5e9:	je     0x40b610
  40b5eb:	mov    rdx,rax
  40b5ee:	mov    rax,QWORD PTR [rdx+0x10]
  40b5f2:	test   rax,rax
  40b5f5:	jne    0x40b5e3
  40b5f7:	lea    rcx,[rip+0x12522]        # 0x41db20
  40b5fe:	call   QWORD PTR [rip+0x13ed8]        # 0x41f4dc
  40b604:	xor    eax,eax
  40b606:	add    rsp,0x20
  40b60a:	pop    rbx
  40b60b:	ret    
  40b60c:	nop    DWORD PTR [rax+0x0]
  40b610:	mov    rcx,rax
  40b613:	mov    rax,QWORD PTR [rax+0x10]
  40b617:	mov    QWORD PTR [rdx+0x10],rax
  40b61b:	call   0x4109d8
  40b620:	lea    rcx,[rip+0x124f9]        # 0x41db20
  40b627:	call   QWORD PTR [rip+0x13eaf]        # 0x41f4dc
  40b62d:	jmp    0x40b604
  40b62f:	mov    rax,QWORD PTR [rdx+0x10]
  40b633:	mov    rcx,rdx
  40b636:	mov    QWORD PTR [rip+0x124c3],rax        # 0x41db00
  40b63d:	jmp    0x40b61b
  40b63f:	nop
  40b640:	push   rbx
  40b641:	sub    rsp,0x20
  40b645:	cmp    edx,0x1
  40b648:	je     0x40b6e0
  40b64e:	jb     0x40b680
  40b650:	cmp    edx,0x2
  40b653:	je     0x40b670
  40b655:	cmp    edx,0x3
  40b658:	jne    0x40b675
  40b65a:	mov    eax,DWORD PTR [rip+0x124a8]        # 0x41db08
  40b660:	test   eax,eax
  40b662:	je     0x40b675
  40b664:	call   0x40b4b0
  40b669:	jmp    0x40b675
  40b66b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b670:	call   0x40ab40
  40b675:	mov    eax,0x1
  40b67a:	add    rsp,0x20
  40b67e:	pop    rbx
  40b67f:	ret    
  40b680:	mov    eax,DWORD PTR [rip+0x12482]        # 0x41db08
  40b686:	test   eax,eax
  40b688:	jne    0x40b710
  40b68e:	mov    eax,DWORD PTR [rip+0x12474]        # 0x41db08
  40b694:	cmp    eax,0x1
  40b697:	jne    0x40b675
  40b699:	mov    rcx,QWORD PTR [rip+0x12460]        # 0x41db00
  40b6a0:	test   rcx,rcx
  40b6a3:	je     0x40b6b6
  40b6a5:	mov    rbx,QWORD PTR [rcx+0x10]
  40b6a9:	call   0x4109d8
  40b6ae:	test   rbx,rbx
  40b6b1:	mov    rcx,rbx
  40b6b4:	jne    0x40b6a5
  40b6b6:	lea    rcx,[rip+0x12463]        # 0x41db20
  40b6bd:	mov    QWORD PTR [rip+0x12438],0x0        # 0x41db00
  40b6c8:	mov    DWORD PTR [rip+0x12436],0x0        # 0x41db08
  40b6d2:	call   QWORD PTR [rip+0x13dac]        # 0x41f484
  40b6d8:	jmp    0x40b675
  40b6da:	nop    WORD PTR [rax+rax*1+0x0]
  40b6e0:	mov    eax,DWORD PTR [rip+0x12422]        # 0x41db08
  40b6e6:	test   eax,eax
  40b6e8:	je     0x40b700
  40b6ea:	mov    eax,0x1
  40b6ef:	mov    DWORD PTR [rip+0x1240f],0x1        # 0x41db08
  40b6f9:	add    rsp,0x20
  40b6fd:	pop    rbx
  40b6fe:	ret    
  40b6ff:	nop
  40b700:	lea    rcx,[rip+0x12419]        # 0x41db20
  40b707:	call   QWORD PTR [rip+0x13dc7]        # 0x41f4d4
  40b70d:	jmp    0x40b6ea
  40b70f:	nop
  40b710:	call   0x40b4b0
  40b715:	jmp    0x40b68e
  40b71a:	nop
  40b71b:	nop
  40b71c:	nop
  40b71d:	nop
  40b71e:	nop
  40b71f:	nop
  40b720:	movsxd rax,DWORD PTR [rcx+0x3c]
  40b724:	add    rcx,rax
  40b727:	xor    eax,eax
  40b729:	cmp    DWORD PTR [rcx],0x4550
  40b72f:	je     0x40b733
  40b731:	repz ret 
  40b733:	xor    eax,eax
  40b735:	cmp    WORD PTR [rcx+0x18],0x20b
  40b73b:	sete   al
  40b73e:	ret    
  40b73f:	nop
  40b740:	cmp    WORD PTR [rcx],0x5a4d
  40b745:	je     0x40b750
  40b747:	xor    eax,eax
  40b749:	ret    
  40b74a:	nop    WORD PTR [rax+rax*1+0x0]
  40b750:	jmp    0x40b720
  40b752:	nop    DWORD PTR [rax+0x0]
  40b756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b760:	movsxd rax,DWORD PTR [rcx+0x3c]
  40b764:	add    rcx,rax
  40b767:	movzx  eax,WORD PTR [rcx+0x14]
  40b76b:	lea    rax,[rcx+rax*1+0x18]
  40b770:	movzx  ecx,WORD PTR [rcx+0x6]
  40b774:	test   ecx,ecx
  40b776:	je     0x40b7a1
  40b778:	sub    ecx,0x1
  40b77b:	lea    rcx,[rcx+rcx*4]
  40b77f:	lea    r9,[rax+rcx*8+0x28]
  40b784:	mov    r8d,DWORD PTR [rax+0xc]
  40b788:	cmp    r8,rdx
  40b78b:	mov    rcx,r8
  40b78e:	ja     0x40b798
  40b790:	add    ecx,DWORD PTR [rax+0x8]
  40b793:	cmp    rdx,rcx
  40b796:	jb     0x40b7a3
  40b798:	add    rax,0x28
  40b79c:	cmp    rax,r9
  40b79f:	jne    0x40b784
  40b7a1:	xor    eax,eax
  40b7a3:	repz ret 
  40b7a5:	nop
  40b7a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7b0:	push   rdi
  40b7b1:	push   rsi
  40b7b2:	push   rbx
  40b7b3:	sub    rsp,0x20
  40b7b7:	mov    rsi,rcx
  40b7ba:	call   0x410938
  40b7bf:	cmp    rax,0x8
  40b7c3:	ja     0x40b7e0
  40b7c5:	mov    rbx,QWORD PTR [rip+0xce34]        # 0x418600
  40b7cc:	xor    edi,edi
  40b7ce:	cmp    WORD PTR [rbx],0x5a4d
  40b7d3:	je     0x40b7f0
  40b7d5:	mov    rax,rdi
  40b7d8:	add    rsp,0x20
  40b7dc:	pop    rbx
  40b7dd:	pop    rsi
  40b7de:	pop    rdi
  40b7df:	ret    
  40b7e0:	xor    edi,edi
  40b7e2:	mov    rax,rdi
  40b7e5:	add    rsp,0x20
  40b7e9:	pop    rbx
  40b7ea:	pop    rsi
  40b7eb:	pop    rdi
  40b7ec:	ret    
  40b7ed:	nop    DWORD PTR [rax]
  40b7f0:	mov    rcx,rbx
  40b7f3:	call   0x40b720
  40b7f8:	test   eax,eax
  40b7fa:	je     0x40b7d5
  40b7fc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  40b800:	add    rdx,rbx
  40b803:	movzx  eax,WORD PTR [rdx+0x14]
  40b807:	lea    rbx,[rdx+rax*1+0x18]
  40b80c:	movzx  eax,WORD PTR [rdx+0x6]
  40b810:	test   eax,eax
  40b812:	je     0x40b7d5
  40b814:	sub    eax,0x1
  40b817:	lea    rax,[rax+rax*4]
  40b81b:	lea    rdi,[rbx+rax*8+0x28]
  40b820:	jmp    0x40b82b
  40b822:	add    rbx,0x28
  40b826:	cmp    rbx,rdi
  40b829:	je     0x40b7e0
  40b82b:	mov    r8d,0x8
  40b831:	mov    rdx,rsi
  40b834:	mov    rcx,rbx
  40b837:	call   0x410928
  40b83c:	test   eax,eax
  40b83e:	jne    0x40b822
  40b840:	mov    rdi,rbx
  40b843:	mov    rax,rdi
  40b846:	add    rsp,0x20
  40b84a:	pop    rbx
  40b84b:	pop    rsi
  40b84c:	pop    rdi
  40b84d:	ret    
  40b84e:	xchg   ax,ax
  40b850:	push   rsi
  40b851:	push   rbx
  40b852:	sub    rsp,0x28
  40b856:	mov    rbx,QWORD PTR [rip+0xcda3]        # 0x418600
  40b85d:	cmp    WORD PTR [rbx],0x5a4d
  40b862:	je     0x40b870
  40b864:	xor    eax,eax
  40b866:	add    rsp,0x28
  40b86a:	pop    rbx
  40b86b:	pop    rsi
  40b86c:	ret    
  40b86d:	nop    DWORD PTR [rax]
  40b870:	mov    rsi,rcx
  40b873:	mov    rcx,rbx
  40b876:	call   0x40b720
  40b87b:	test   eax,eax
  40b87d:	je     0x40b864
  40b87f:	sub    rsi,rbx
  40b882:	mov    rcx,rbx
  40b885:	mov    rdx,rsi
  40b888:	add    rsp,0x28
  40b88c:	pop    rbx
  40b88d:	pop    rsi
  40b88e:	jmp    0x40b760
  40b893:	nop    DWORD PTR [rax]
  40b896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b8a0:	push   rbx
  40b8a1:	sub    rsp,0x20
  40b8a5:	mov    rbx,QWORD PTR [rip+0xcd54]        # 0x418600
  40b8ac:	xor    eax,eax
  40b8ae:	cmp    WORD PTR [rbx],0x5a4d
  40b8b3:	je     0x40b8c0
  40b8b5:	add    rsp,0x20
  40b8b9:	pop    rbx
  40b8ba:	ret    
  40b8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8c0:	mov    rcx,rbx
  40b8c3:	call   0x40b720
  40b8c8:	test   eax,eax
  40b8ca:	je     0x40b8b5
  40b8cc:	movsxd rax,DWORD PTR [rbx+0x3c]
  40b8d0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  40b8d5:	add    rsp,0x20
  40b8d9:	pop    rbx
  40b8da:	ret    
  40b8db:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8e0:	push   rdi
  40b8e1:	push   rsi
  40b8e2:	push   rbx
  40b8e3:	sub    rsp,0x20
  40b8e7:	mov    rsi,QWORD PTR [rip+0xcd12]        # 0x418600
  40b8ee:	xor    edi,edi
  40b8f0:	mov    rbx,rcx
  40b8f3:	cmp    WORD PTR [rsi],0x5a4d
  40b8f8:	je     0x40b905
  40b8fa:	mov    rax,rdi
  40b8fd:	add    rsp,0x20
  40b901:	pop    rbx
  40b902:	pop    rsi
  40b903:	pop    rdi
  40b904:	ret    
  40b905:	mov    rcx,rsi
  40b908:	call   0x40b720
  40b90d:	test   eax,eax
  40b90f:	je     0x40b8fa
  40b911:	movsxd rax,DWORD PTR [rsi+0x3c]
  40b915:	add    rsi,rax
  40b918:	movzx  eax,WORD PTR [rsi+0x14]
  40b91c:	lea    rdx,[rsi+rax*1+0x18]
  40b921:	movzx  eax,WORD PTR [rsi+0x6]
  40b925:	test   eax,eax
  40b927:	je     0x40b8fa
  40b929:	sub    eax,0x1
  40b92c:	lea    rax,[rax+rax*4]
  40b930:	lea    rax,[rdx+rax*8+0x28]
  40b935:	test   BYTE PTR [rdx+0x27],0x20
  40b939:	je     0x40b944
  40b93b:	test   rbx,rbx
  40b93e:	je     0x40b960
  40b940:	sub    rbx,0x1
  40b944:	add    rdx,0x28
  40b948:	cmp    rdx,rax
  40b94b:	jne    0x40b935
  40b94d:	xor    edi,edi
  40b94f:	mov    rax,rdi
  40b952:	add    rsp,0x20
  40b956:	pop    rbx
  40b957:	pop    rsi
  40b958:	pop    rdi
  40b959:	ret    
  40b95a:	nop    WORD PTR [rax+rax*1+0x0]
  40b960:	mov    rdi,rdx
  40b963:	mov    rax,rdi
  40b966:	add    rsp,0x20
  40b96a:	pop    rbx
  40b96b:	pop    rsi
  40b96c:	pop    rdi
  40b96d:	ret    
  40b96e:	xchg   ax,ax
  40b970:	push   rsi
  40b971:	push   rbx
  40b972:	sub    rsp,0x28
  40b976:	mov    rsi,QWORD PTR [rip+0xcc83]        # 0x418600
  40b97d:	xor    ebx,ebx
  40b97f:	cmp    WORD PTR [rsi],0x5a4d
  40b984:	je     0x40b990
  40b986:	mov    rax,rbx
  40b989:	add    rsp,0x28
  40b98d:	pop    rbx
  40b98e:	pop    rsi
  40b98f:	ret    
  40b990:	mov    rcx,rsi
  40b993:	call   0x40b720
  40b998:	test   eax,eax
  40b99a:	cmovne rbx,rsi
  40b99e:	mov    rax,rbx
  40b9a1:	add    rsp,0x28
  40b9a5:	pop    rbx
  40b9a6:	pop    rsi
  40b9a7:	ret    
  40b9a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b9b0:	push   rsi
  40b9b1:	push   rbx
  40b9b2:	sub    rsp,0x28
  40b9b6:	mov    rbx,QWORD PTR [rip+0xcc43]        # 0x418600
  40b9bd:	xor    eax,eax
  40b9bf:	cmp    WORD PTR [rbx],0x5a4d
  40b9c4:	je     0x40b9d0
  40b9c6:	add    rsp,0x28
  40b9ca:	pop    rbx
  40b9cb:	pop    rsi
  40b9cc:	ret    
  40b9cd:	nop    DWORD PTR [rax]
  40b9d0:	mov    rsi,rcx
  40b9d3:	mov    rcx,rbx
  40b9d6:	call   0x40b720
  40b9db:	test   eax,eax
  40b9dd:	je     0x40b9c6
  40b9df:	sub    rsi,rbx
  40b9e2:	mov    rcx,rbx
  40b9e5:	mov    rdx,rsi
  40b9e8:	call   0x40b760
  40b9ed:	test   rax,rax
  40b9f0:	je     0x40ba01
  40b9f2:	mov    eax,DWORD PTR [rax+0x24]
  40b9f5:	not    eax
  40b9f7:	shr    eax,0x1f
  40b9fa:	add    rsp,0x28
  40b9fe:	pop    rbx
  40b9ff:	pop    rsi
  40ba00:	ret    
  40ba01:	xor    eax,eax
  40ba03:	jmp    0x40b9c6
  40ba05:	nop
  40ba06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba10:	push   rbp
  40ba11:	push   rdi
  40ba12:	push   rsi
  40ba13:	push   rbx
  40ba14:	sub    rsp,0x28
  40ba18:	mov    rdi,QWORD PTR [rip+0xcbe1]        # 0x418600
  40ba1f:	xor    ebp,ebp
  40ba21:	mov    esi,ecx
  40ba23:	cmp    WORD PTR [rdi],0x5a4d
  40ba28:	je     0x40ba40
  40ba2a:	mov    rax,rbp
  40ba2d:	add    rsp,0x28
  40ba31:	pop    rbx
  40ba32:	pop    rsi
  40ba33:	pop    rdi
  40ba34:	pop    rbp
  40ba35:	ret    
  40ba36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba40:	mov    rcx,rdi
  40ba43:	call   0x40b720
  40ba48:	test   eax,eax
  40ba4a:	je     0x40ba2a
  40ba4c:	movsxd rax,DWORD PTR [rdi+0x3c]
  40ba50:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  40ba57:	test   edx,edx
  40ba59:	je     0x40ba2a
  40ba5b:	mov    ebx,edx
  40ba5d:	mov    rcx,rdi
  40ba60:	mov    rdx,rbx
  40ba63:	call   0x40b760
  40ba68:	test   rax,rax
  40ba6b:	je     0x40ba2a
  40ba6d:	add    rbx,rdi
  40ba70:	mov    rdx,rbx
  40ba73:	jne    0x40ba87
  40ba75:	jmp    0x40ba2a
  40ba77:	nop    WORD PTR [rax+rax*1+0x0]
  40ba80:	sub    esi,0x1
  40ba83:	add    rdx,0x14
  40ba87:	mov    ecx,DWORD PTR [rdx+0x4]
  40ba8a:	test   ecx,ecx
  40ba8c:	jne    0x40ba95
  40ba8e:	mov    eax,DWORD PTR [rdx+0xc]
  40ba91:	test   eax,eax
  40ba93:	je     0x40bab0
  40ba95:	test   esi,esi
  40ba97:	jg     0x40ba80
  40ba99:	mov    ebp,DWORD PTR [rdx+0xc]
  40ba9c:	add    rbp,rdi
  40ba9f:	mov    rax,rbp
  40baa2:	add    rsp,0x28
  40baa6:	pop    rbx
  40baa7:	pop    rsi
  40baa8:	pop    rdi
  40baa9:	pop    rbp
  40baaa:	ret    
  40baab:	nop    DWORD PTR [rax+rax*1+0x0]
  40bab0:	xor    ebp,ebp
  40bab2:	mov    rax,rbp
  40bab5:	add    rsp,0x28
  40bab9:	pop    rbx
  40baba:	pop    rsi
  40babb:	pop    rdi
  40babc:	pop    rbp
  40babd:	ret    
  40babe:	nop
  40babf:	nop
  40bac0:	push   rcx
  40bac1:	push   rax
  40bac2:	cmp    rax,0x1000
  40bac8:	lea    rcx,[rsp+0x18]
  40bacd:	jb     0x40bae8
  40bacf:	sub    rcx,0x1000
  40bad6:	or     QWORD PTR [rcx],0x0
  40bada:	sub    rax,0x1000
  40bae0:	cmp    rax,0x1000
  40bae6:	ja     0x40bacf
  40bae8:	sub    rcx,rax
  40baeb:	or     QWORD PTR [rcx],0x0
  40baef:	pop    rax
  40baf0:	pop    rcx
  40baf1:	ret    
  40baf2:	nop
  40baf3:	nop
  40baf4:	nop
  40baf5:	nop
  40baf6:	nop
  40baf7:	nop
  40baf8:	nop
  40baf9:	nop
  40bafa:	nop
  40bafb:	nop
  40bafc:	nop
  40bafd:	nop
  40bafe:	nop
  40baff:	nop
  40bb00:	push   rbx
  40bb01:	sub    rsp,0x60
  40bb05:	lea    r8,[rip+0x6564]        # 0x412070
  40bb0c:	lea    rax,[rsp+0x50]
  40bb11:	lea    r9,[rsp+0x4c]
  40bb16:	mov    QWORD PTR [rsp+0x20],rax
  40bb1b:	call   0x40cf90
  40bb20:	mov    edx,eax
  40bb22:	and    edx,0x7
  40bb25:	cmp    edx,0x6
  40bb28:	ja     0x40bb55
  40bb2a:	lea    rcx,[rip+0xc48f]        # 0x417fc0
  40bb31:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40bb35:	add    rcx,rdx
  40bb38:	jmp    rcx
  40bb3a:	nop    WORD PTR [rax+rax*1+0x0]
  40bb40:	mov    ebx,DWORD PTR [rsp+0x54]
  40bb44:	mov    edx,DWORD PTR [rsp+0x50]
  40bb48:	or     ebx,0x7ff00000
  40bb4e:	shl    rbx,0x20
  40bb52:	or     rbx,rdx
  40bb55:	test   al,0x8
  40bb57:	je     0x40bb6e
  40bb59:	mov    rax,rbx
  40bb5c:	mov    ebx,ebx
  40bb5e:	shr    rax,0x20
  40bb62:	or     eax,0x80000000
  40bb67:	shl    rax,0x20
  40bb6b:	or     rbx,rax
  40bb6e:	mov    QWORD PTR [rsp+0x38],rbx
  40bb73:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40bb79:	add    rsp,0x60
  40bb7d:	pop    rbx
  40bb7e:	ret    
  40bb7f:	nop
  40bb80:	movabs rbx,0x7ff8000000000000
  40bb8a:	jmp    0x40bb55
  40bb8c:	nop    DWORD PTR [rax+0x0]
  40bb90:	xor    ebx,ebx
  40bb92:	jmp    0x40bb55
  40bb94:	mov    ebx,DWORD PTR [rsp+0x4c]
  40bb98:	mov    edx,DWORD PTR [rsp+0x54]
  40bb9c:	add    ebx,0x433
  40bba2:	and    edx,0xffefffff
  40bba8:	shl    ebx,0x14
  40bbab:	or     ebx,edx
  40bbad:	mov    edx,DWORD PTR [rsp+0x50]
  40bbb1:	shl    rbx,0x20
  40bbb5:	or     rbx,rdx
  40bbb8:	jmp    0x40bb55
  40bbba:	nop    WORD PTR [rax+rax*1+0x0]
  40bbc0:	mov    ebx,DWORD PTR [rsp+0x54]
  40bbc4:	mov    edx,DWORD PTR [rsp+0x50]
  40bbc8:	shl    rbx,0x20
  40bbcc:	or     rbx,rdx
  40bbcf:	jmp    0x40bb55
  40bbd1:	movabs rbx,0x7ff0000000000000
  40bbdb:	jmp    0x40bb55
  40bbe0:	push   r13
  40bbe2:	push   r12
  40bbe4:	push   rbp
  40bbe5:	push   rdi
  40bbe6:	push   rsi
  40bbe7:	push   rbx
  40bbe8:	mov    r12d,edx
  40bbeb:	mov    ebp,r8d
  40bbee:	mov    edi,edx
  40bbf0:	sub    r12d,ecx
  40bbf3:	sub    ebp,edx
  40bbf5:	mov    eax,r12d
  40bbf8:	cdq    
  40bbf9:	idiv   ebp
  40bbfb:	test   edx,edx
  40bbfd:	mov    r13d,edx
  40bc00:	je     0x40bc85
  40bc06:	mov    eax,ebp
  40bc08:	jmp    0x40bc13
  40bc0a:	nop    WORD PTR [rax+rax*1+0x0]
  40bc10:	mov    r13d,edx
  40bc13:	cdq    
  40bc14:	idiv   r13d
  40bc17:	mov    eax,r13d
  40bc1a:	test   edx,edx
  40bc1c:	jne    0x40bc10
  40bc1e:	mov    eax,r8d
  40bc21:	sub    eax,ecx
  40bc23:	cdq    
  40bc24:	idiv   r13d
  40bc27:	test   r13d,r13d
  40bc2a:	jle    0x40bc7c
  40bc2c:	movsxd rdx,edi
  40bc2f:	xor    esi,esi
  40bc31:	lea    rdx,[r9+rdx*8]
  40bc35:	test   eax,eax
  40bc37:	lea    ecx,[rdi+rsi*1]
  40bc3a:	jle    0x40bc73
  40bc3c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  40bc40:	xor    r10d,r10d
  40bc43:	mov    r11d,ecx
  40bc46:	lea    r8d,[rcx+rbp*1]
  40bc4a:	sub    r11d,r12d
  40bc4d:	cmp    edi,ecx
  40bc4f:	mov    ecx,r11d
  40bc52:	cmovg  ecx,r8d
  40bc56:	add    r10d,0x1
  40bc5a:	movsxd r11,ecx
  40bc5d:	cmp    r10d,eax
  40bc60:	lea    r8,[r9+r11*8]
  40bc64:	mov    r11,QWORD PTR [r8]
  40bc67:	mov    QWORD PTR [r8],rbx
  40bc6a:	mov    QWORD PTR [rdx+rsi*8],r11
  40bc6e:	mov    rbx,r11
  40bc71:	jne    0x40bc43
  40bc73:	add    rsi,0x1
  40bc77:	cmp    r13d,esi
  40bc7a:	jg     0x40bc35
  40bc7c:	pop    rbx
  40bc7d:	pop    rsi
  40bc7e:	pop    rdi
  40bc7f:	pop    rbp
  40bc80:	pop    r12
  40bc82:	pop    r13
  40bc84:	ret    
  40bc85:	mov    r13d,ebp
  40bc88:	jmp    0x40bc1e
  40bc8a:	nop    WORD PTR [rax+rax*1+0x0]
  40bc90:	push   rdi
  40bc91:	push   rsi
  40bc92:	push   rbx
  40bc93:	sub    rsp,0x30
  40bc97:	mov    rax,QWORD PTR [rip+0xc972]        # 0x418610
  40bc9e:	mov    QWORD PTR [rsp+0x58],rdx
  40bca3:	mov    QWORD PTR [rsp+0x60],r8
  40bca8:	lea    rsi,[rsp+0x58]
  40bcad:	mov    QWORD PTR [rsp+0x68],r9
  40bcb2:	mov    rbx,rcx
  40bcb5:	mov    rax,QWORD PTR [rax]
  40bcb8:	mov    QWORD PTR [rsp+0x28],rsi
  40bcbd:	mov    rax,QWORD PTR [rax]
  40bcc0:	mov    rdi,QWORD PTR [rax]
  40bcc3:	call   0x410aa0
  40bcc8:	lea    rdx,[rip+0xc311]        # 0x417fe0
  40bccf:	lea    rcx,[rax+0x60]
  40bcd3:	mov    r8,rdi
  40bcd6:	call   0x4109f8
  40bcdb:	test   rbx,rbx
  40bcde:	je     0x40bcf4
  40bce0:	call   0x410aa0
  40bce5:	lea    rcx,[rax+0x60]
  40bce9:	mov    r8,rsi
  40bcec:	mov    rdx,rbx
  40bcef:	call   0x410908
  40bcf4:	call   0x410aa0
  40bcf9:	lea    rdx,[rax+0x60]
  40bcfd:	mov    ecx,0xa
  40bd02:	call   0x4109f0
  40bd07:	nop
  40bd08:	add    rsp,0x30
  40bd0c:	pop    rbx
  40bd0d:	pop    rsi
  40bd0e:	pop    rdi
  40bd0f:	ret    
  40bd10:	push   r15
  40bd12:	push   r14
  40bd14:	push   r13
  40bd16:	push   r12
  40bd18:	push   rbp
  40bd19:	push   rdi
  40bd1a:	push   rsi
  40bd1b:	push   rbx
  40bd1c:	sub    rsp,0x48
  40bd20:	mov    eax,DWORD PTR [rip+0x6386]        # 0x4120ac
  40bd26:	mov    rbp,QWORD PTR [rip+0x6373]        # 0x4120a0
  40bd2d:	mov    QWORD PTR [rsp+0x90],rcx
  40bd35:	mov    QWORD PTR [rsp+0x98],rdx
  40bd3d:	mov    edx,0x3d
  40bd42:	mov    r14,r8
  40bd45:	mov    QWORD PTR [rsp+0xa8],r9
  40bd4d:	mov    r13d,DWORD PTR [rsp+0xb0]
  40bd55:	mov    DWORD PTR [rsp+0x38],eax
  40bd59:	mov    rcx,rbp
  40bd5c:	add    eax,0x1
  40bd5f:	mov    DWORD PTR [rsp+0x3c],eax
  40bd63:	mov    DWORD PTR [rip+0x6343],eax        # 0x4120ac
  40bd69:	call   0x410950
  40bd6e:	test   rax,rax
  40bd71:	mov    QWORD PTR [rsp+0x30],rax
  40bd76:	je     0x40bf54
  40bd7c:	mov    rdi,rax
  40bd7f:	add    rax,0x1
  40bd83:	sub    rdi,rbp
  40bd86:	mov    QWORD PTR [rsp+0x30],rax
  40bd8b:	mov    r15,QWORD PTR [r14]
  40bd8e:	test   r15,r15
  40bd91:	je     0x40bf9b
  40bd97:	lea    rbx,[r14+0x20]
  40bd9b:	mov    r12d,0xffffffff
  40bda1:	mov    DWORD PTR [rsp+0x2c],0x0
  40bda9:	xor    esi,esi
  40bdab:	jmp    0x40bdc5
  40bdad:	nop    DWORD PTR [rax]
  40bdb0:	test   r13d,r13d
  40bdb3:	je     0x40bdee
  40bdb5:	add    rbx,0x20
  40bdb9:	mov    r15,QWORD PTR [rbx-0x20]
  40bdbd:	add    esi,0x1
  40bdc0:	test   r15,r15
  40bdc3:	je     0x40be30
  40bdc5:	mov    r8,rdi
  40bdc8:	mov    rdx,r15
  40bdcb:	mov    rcx,rbp
  40bdce:	call   0x410928
  40bdd3:	test   eax,eax
  40bdd5:	jne    0x40bdb5
  40bdd7:	mov    rcx,r15
  40bdda:	call   0x410938
  40bddf:	cmp    rax,rdi
  40bde2:	je     0x40bedd
  40bde8:	cmp    rdi,0x1
  40bdec:	je     0x40bdb0
  40bdee:	cmp    r12d,0xffffffff
  40bdf2:	je     0x40be90
  40bdf8:	movsxd rax,r12d
  40bdfb:	shl    rax,0x5
  40bdff:	add    rax,r14
  40be02:	mov    edx,DWORD PTR [rax+0x8]
  40be05:	cmp    DWORD PTR [rbx-0x18],edx
  40be08:	je     0x40bea0
  40be0e:	add    rbx,0x20
  40be12:	mov    r15,QWORD PTR [rbx-0x20]
  40be16:	add    esi,0x1
  40be19:	mov    DWORD PTR [rsp+0x2c],0x1
  40be21:	test   r15,r15
  40be24:	jne    0x40bdc5
  40be26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be30:	mov    r9d,DWORD PTR [rsp+0x2c]
  40be35:	test   r9d,r9d
  40be38:	je     0x40bed0
  40be3e:	mov    r8d,DWORD PTR [rip+0x626b]        # 0x4120b0
  40be45:	test   r8d,r8d
  40be48:	je     0x40be68
  40be4a:	mov    rax,QWORD PTR [rsp+0x98]
  40be52:	cmp    BYTE PTR [rax],0x3a
  40be55:	je     0x40be68
  40be57:	lea    rcx,[rip+0xc212]        # 0x418070
  40be5e:	mov    r8,rbp
  40be61:	mov    edx,edi
  40be63:	call   0x40bc90
  40be68:	mov    DWORD PTR [rip+0x6236],0x0        # 0x4120a8
  40be72:	mov    eax,0x3f
  40be77:	add    rsp,0x48
  40be7b:	pop    rbx
  40be7c:	pop    rsi
  40be7d:	pop    rdi
  40be7e:	pop    rbp
  40be7f:	pop    r12
  40be81:	pop    r13
  40be83:	pop    r14
  40be85:	pop    r15
  40be87:	ret    
  40be88:	nop    DWORD PTR [rax+rax*1+0x0]
  40be90:	mov    r12d,esi
  40be93:	jmp    0x40bdb5
  40be98:	nop    DWORD PTR [rax+rax*1+0x0]
  40bea0:	mov    rdx,QWORD PTR [rax+0x10]
  40bea4:	cmp    QWORD PTR [rbx-0x10],rdx
  40bea8:	jne    0x40be0e
  40beae:	mov    eax,DWORD PTR [rax+0x18]
  40beb1:	cmp    DWORD PTR [rbx-0x8],eax
  40beb4:	mov    eax,0x1
  40beb9:	cmove  eax,DWORD PTR [rsp+0x2c]
  40bebe:	mov    DWORD PTR [rsp+0x2c],eax
  40bec2:	jmp    0x40bdb5
  40bec7:	nop    WORD PTR [rax+rax*1+0x0]
  40bed0:	cmp    r12d,0xffffffff
  40bed4:	je     0x40bf9b
  40beda:	mov    esi,r12d
  40bedd:	movsxd rax,esi
  40bee0:	shl    rax,0x5
  40bee4:	add    r14,rax
  40bee7:	cmp    QWORD PTR [rsp+0x30],0x0
  40beed:	mov    eax,DWORD PTR [r14+0x8]
  40bef1:	setne  cl
  40bef4:	je     0x40bf64
  40bef6:	test   eax,eax
  40bef8:	jne    0x40bf64
  40befa:	mov    ecx,DWORD PTR [rip+0x61b0]        # 0x4120b0
  40bf00:	test   ecx,ecx
  40bf02:	jne    0x40bf34
  40bf04:	cmp    QWORD PTR [r14+0x10],0x0
  40bf09:	je     0x40c064
  40bf0f:	mov    DWORD PTR [rip+0x618f],0x0        # 0x4120a8
  40bf19:	mov    rax,QWORD PTR [rsp+0x98]
  40bf21:	cmp    BYTE PTR [rax],0x3a
  40bf24:	je     0x40c051
  40bf2a:	mov    eax,0x3f
  40bf2f:	jmp    0x40be77
  40bf34:	mov    rax,QWORD PTR [rsp+0x98]
  40bf3c:	cmp    BYTE PTR [rax],0x3a
  40bf3f:	je     0x40bf04
  40bf41:	lea    rcx,[rip+0xc0f8]        # 0x418040
  40bf48:	mov    r8,rbp
  40bf4b:	mov    edx,edi
  40bf4d:	call   0x40bc90
  40bf52:	jmp    0x40bf04
  40bf54:	mov    rcx,rbp
  40bf57:	call   0x410938
  40bf5c:	mov    rdi,rax
  40bf5f:	jmp    0x40bd8b
  40bf64:	lea    edx,[rax-0x1]
  40bf67:	cmp    edx,0x1
  40bf6a:	jbe    0x40bfd7
  40bf6c:	cmp    QWORD PTR [rsp+0xa8],0x0
  40bf75:	je     0x40bf81
  40bf77:	mov    rax,QWORD PTR [rsp+0xa8]
  40bf7f:	mov    DWORD PTR [rax],esi
  40bf81:	mov    rax,QWORD PTR [r14+0x10]
  40bf85:	test   rax,rax
  40bf88:	je     0x40c05b
  40bf8e:	mov    edx,DWORD PTR [r14+0x18]
  40bf92:	mov    DWORD PTR [rax],edx
  40bf94:	xor    eax,eax
  40bf96:	jmp    0x40be77
  40bf9b:	test   r13d,r13d
  40bf9e:	jne    0x40c0b2
  40bfa4:	mov    eax,DWORD PTR [rip+0x6106]        # 0x4120b0
  40bfaa:	test   eax,eax
  40bfac:	je     0x40be68
  40bfb2:	mov    rax,QWORD PTR [rsp+0x98]
  40bfba:	cmp    BYTE PTR [rax],0x3a
  40bfbd:	je     0x40be68
  40bfc3:	lea    rcx,[rip+0xc036]        # 0x418000
  40bfca:	mov    rdx,rbp
  40bfcd:	call   0x40bc90
  40bfd2:	jmp    0x40be68
  40bfd7:	test   cl,cl
  40bfd9:	je     0x40c073
  40bfdf:	mov    rdx,QWORD PTR [rsp+0x30]
  40bfe4:	cmp    eax,0x1
  40bfe7:	mov    QWORD PTR [rip+0x127a2],rdx        # 0x41e790
  40bfee:	jne    0x40bf6c
  40bff4:	mov    r15,QWORD PTR [rsp+0x30]
  40bff9:	test   r15,r15
  40bffc:	jne    0x40bf6c
  40c002:	mov    edx,DWORD PTR [rip+0x60a8]        # 0x4120b0
  40c008:	test   edx,edx
  40c00a:	je     0x40c028
  40c00c:	mov    rax,QWORD PTR [rsp+0x98]
  40c014:	cmp    BYTE PTR [rax],0x3a
  40c017:	je     0x40c028
  40c019:	lea    rcx,[rip+0xc080]        # 0x4180a0
  40c020:	mov    rdx,rbp
  40c023:	call   0x40bc90
  40c028:	cmp    QWORD PTR [r14+0x10],0x0
  40c02d:	je     0x40c0a6
  40c02f:	mov    DWORD PTR [rip+0x606f],0x0        # 0x4120a8
  40c039:	mov    rax,QWORD PTR [rsp+0x98]
  40c041:	sub    DWORD PTR [rip+0x6064],0x1        # 0x4120ac
  40c048:	cmp    BYTE PTR [rax],0x3a
  40c04b:	jne    0x40bf2a
  40c051:	mov    eax,0x3a
  40c056:	jmp    0x40be77
  40c05b:	mov    eax,DWORD PTR [r14+0x18]
  40c05f:	jmp    0x40be77
  40c064:	mov    eax,DWORD PTR [r14+0x18]
  40c068:	mov    DWORD PTR [rip+0x603a],eax        # 0x4120a8
  40c06e:	jmp    0x40bf19
  40c073:	cmp    eax,0x1
  40c076:	jne    0x40bf6c
  40c07c:	mov    eax,DWORD PTR [rsp+0x38]
  40c080:	mov    rdx,QWORD PTR [rsp+0x90]
  40c088:	add    eax,0x2
  40c08b:	mov    DWORD PTR [rip+0x601b],eax        # 0x4120ac
  40c091:	movsxd rax,DWORD PTR [rsp+0x3c]
  40c096:	mov    r15,QWORD PTR [rdx+rax*8]
  40c09a:	mov    QWORD PTR [rip+0x126ef],r15        # 0x41e790
  40c0a1:	jmp    0x40bff9
  40c0a6:	mov    eax,DWORD PTR [r14+0x18]
  40c0aa:	mov    DWORD PTR [rip+0x5ff8],eax        # 0x4120a8
  40c0b0:	jmp    0x40c039
  40c0b2:	mov    eax,DWORD PTR [rsp+0x38]
  40c0b6:	mov    DWORD PTR [rip+0x5ff0],eax        # 0x4120ac
  40c0bc:	mov    eax,0xffffffff
  40c0c1:	jmp    0x40be77
  40c0c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c0d0:	push   r15
  40c0d2:	push   r14
  40c0d4:	push   r13
  40c0d6:	push   r12
  40c0d8:	push   rbp
  40c0d9:	push   rdi
  40c0da:	push   rsi
  40c0db:	push   rbx
  40c0dc:	sub    rsp,0x38
  40c0e0:	test   r8,r8
  40c0e3:	mov    edi,ecx
  40c0e5:	mov    r15,rdx
  40c0e8:	mov    QWORD PTR [rsp+0x90],r8
  40c0f0:	mov    QWORD PTR [rsp+0x98],r9
  40c0f8:	je     0x40c3ce
  40c0fe:	mov    r9d,DWORD PTR [rip+0x5fa7]        # 0x4120ac
  40c105:	test   r9d,r9d
  40c108:	je     0x40c360
  40c10e:	cmp    DWORD PTR [rip+0x5f7b],0xffffffff        # 0x412090
  40c115:	je     0x40c2d4
  40c11b:	mov    edx,DWORD PTR [rip+0x12677]        # 0x41e798
  40c121:	test   edx,edx
  40c123:	jne    0x40c2d4
  40c129:	mov    rax,QWORD PTR [rsp+0x90]
  40c131:	movzx  eax,BYTE PTR [rax]
  40c134:	cmp    al,0x2d
  40c136:	je     0x40c308
  40c13c:	cmp    al,0x2b
  40c13e:	je     0x40c3e4
  40c144:	mov    r8d,DWORD PTR [rip+0x5f45]        # 0x412090
  40c14b:	test   r8d,r8d
  40c14e:	jne    0x40c3e4
  40c154:	sub    eax,0x2b
  40c157:	test   al,0xfd
  40c159:	je     0x40c310
  40c15f:	test   edx,edx
  40c161:	mov    QWORD PTR [rip+0x12624],0x0        # 0x41e790
  40c16c:	jne    0x40c340
  40c172:	mov    r14d,DWORD PTR [rsp+0xa8]
  40c17a:	mov    ebp,DWORD PTR [rsp+0xa8]
  40c181:	and    r14d,0x2
  40c185:	and    ebp,0x1
  40c188:	jmp    0x40c20e
  40c18d:	nop    DWORD PTR [rax]
  40c190:	lea    rax,[rip+0xbe5e]        # 0x417ff5
  40c197:	test   r14d,r14d
  40c19a:	mov    edx,r14d
  40c19d:	mov    QWORD PTR [rip+0x5efc],rax        # 0x4120a0
  40c1a4:	jne    0x40c4b0
  40c1aa:	test   ebp,ebp
  40c1ac:	je     0x40c3ce
  40c1b2:	mov    r12d,DWORD PTR [rip+0x5edf]        # 0x412098
  40c1b9:	cmp    r12d,0xffffffff
  40c1bd:	je     0x40c330
  40c1c3:	mov    r13d,DWORD PTR [rip+0x5eca]        # 0x412094
  40c1ca:	cmp    r13d,0xffffffff
  40c1ce:	je     0x40c205
  40c1d0:	mov    edx,r13d
  40c1d3:	mov    r9,r15
  40c1d6:	mov    r8d,ebx
  40c1d9:	mov    ecx,r12d
  40c1dc:	call   0x40bbe0
  40c1e1:	mov    esi,DWORD PTR [rip+0x5ec5]        # 0x4120ac
  40c1e7:	mov    eax,r12d
  40c1ea:	mov    edx,DWORD PTR [rip+0x125a8]        # 0x41e798
  40c1f0:	sub    eax,r13d
  40c1f3:	mov    DWORD PTR [rip+0x5e97],0xffffffff        # 0x412094
  40c1fd:	add    eax,esi
  40c1ff:	mov    DWORD PTR [rip+0x5e93],eax        # 0x412098
  40c205:	add    esi,0x1
  40c208:	mov    DWORD PTR [rip+0x5e9e],esi        # 0x4120ac
  40c20e:	test   edx,edx
  40c210:	jne    0x40c224
  40c212:	mov    rsi,QWORD PTR [rip+0x5e87]        # 0x4120a0
  40c219:	movzx  eax,BYTE PTR [rsi]
  40c21c:	test   al,al
  40c21e:	jne    0x40c41e
  40c224:	movsxd rbx,DWORD PTR [rip+0x5e81]        # 0x4120ac
  40c22b:	mov    DWORD PTR [rip+0x12563],0x0        # 0x41e798
  40c235:	cmp    ebx,edi
  40c237:	mov    esi,ebx
  40c239:	jge    0x40c380
  40c23f:	movsxd rax,ebx
  40c242:	mov    r13,QWORD PTR [r15+rax*8]
  40c246:	cmp    BYTE PTR [r13+0x0],0x2d
  40c24b:	mov    QWORD PTR [rip+0x5e4e],r13        # 0x4120a0
  40c252:	jne    0x40c190
  40c258:	movzx  eax,BYTE PTR [r13+0x1]
  40c25d:	test   al,al
  40c25f:	jne    0x40c3f1
  40c265:	mov    rcx,QWORD PTR [rsp+0x90]
  40c26d:	mov    edx,0x2d
  40c272:	call   0x410950
  40c277:	test   rax,rax
  40c27a:	je     0x40c190
  40c280:	cmp    DWORD PTR [rip+0x5e11],0xffffffff        # 0x412098
  40c287:	mov    rsi,r13
  40c28a:	je     0x40c2a4
  40c28c:	cmp    DWORD PTR [rip+0x5e01],0xffffffff        # 0x412094
  40c293:	mov    eax,0x2d
  40c298:	jne    0x40c41e
  40c29e:	mov    DWORD PTR [rip+0x5df0],ebx        # 0x412094
  40c2a4:	cmp    QWORD PTR [rsp+0x98],0x0
  40c2ad:	je     0x40c69c
  40c2b3:	cmp    rsi,QWORD PTR [r15+rbx*8]
  40c2b7:	mov    eax,0x2d
  40c2bc:	je     0x40c4ee
  40c2c2:	add    rsi,0x1
  40c2c6:	xor    edx,edx
  40c2c8:	mov    QWORD PTR [rip+0x5dd1],rsi        # 0x4120a0
  40c2cf:	jmp    0x40c472
  40c2d4:	lea    rcx,[rip+0xbd0a]        # 0x417fe5
  40c2db:	call   0x4109b8
  40c2e0:	test   rax,rax
  40c2e3:	mov    edx,DWORD PTR [rip+0x124af]        # 0x41e798
  40c2e9:	setne  al
  40c2ec:	movzx  eax,al
  40c2ef:	mov    DWORD PTR [rip+0x5d9b],eax        # 0x412090
  40c2f5:	mov    rax,QWORD PTR [rsp+0x90]
  40c2fd:	movzx  eax,BYTE PTR [rax]
  40c300:	cmp    al,0x2d
  40c302:	jne    0x40c13c
  40c308:	or     DWORD PTR [rsp+0xa8],0x2
  40c310:	add    QWORD PTR [rsp+0x90],0x1
  40c319:	test   edx,edx
  40c31b:	mov    QWORD PTR [rip+0x1246a],0x0        # 0x41e790
  40c326:	je     0x40c172
  40c32c:	jmp    0x40c340
  40c32e:	xchg   ax,ax
  40c330:	mov    DWORD PTR [rip+0x5d62],ebx        # 0x412098
  40c336:	jmp    0x40c205
  40c33b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c340:	mov    DWORD PTR [rip+0x5d4a],0xffffffff        # 0x412094
  40c34a:	mov    DWORD PTR [rip+0x5d44],0xffffffff        # 0x412098
  40c354:	jmp    0x40c172
  40c359:	nop    DWORD PTR [rax+0x0]
  40c360:	mov    DWORD PTR [rip+0x1242e],0x1        # 0x41e798
  40c36a:	mov    DWORD PTR [rip+0x5d38],0x1        # 0x4120ac
  40c374:	jmp    0x40c10e
  40c379:	nop    DWORD PTR [rax+0x0]
  40c380:	mov    esi,DWORD PTR [rip+0x5d0e]        # 0x412094
  40c386:	lea    rax,[rip+0xbc68]        # 0x417ff5
  40c38d:	mov    QWORD PTR [rip+0x5d0c],rax        # 0x4120a0
  40c394:	cmp    esi,0xffffffff
  40c397:	je     0x40c4ca
  40c39d:	mov    edi,DWORD PTR [rip+0x5cf5]        # 0x412098
  40c3a3:	mov    r9,r15
  40c3a6:	mov    r8d,ebx
  40c3a9:	mov    edx,esi
  40c3ab:	mov    ecx,edi
  40c3ad:	sub    edi,esi
  40c3af:	call   0x40bbe0
  40c3b4:	add    DWORD PTR [rip+0x5cf2],edi        # 0x4120ac
  40c3ba:	mov    DWORD PTR [rip+0x5cd0],0xffffffff        # 0x412094
  40c3c4:	mov    DWORD PTR [rip+0x5cca],0xffffffff        # 0x412098
  40c3ce:	mov    eax,0xffffffff
  40c3d3:	add    rsp,0x38
  40c3d7:	pop    rbx
  40c3d8:	pop    rsi
  40c3d9:	pop    rdi
  40c3da:	pop    rbp
  40c3db:	pop    r12
  40c3dd:	pop    r13
  40c3df:	pop    r14
  40c3e1:	pop    r15
  40c3e3:	ret    
  40c3e4:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  40c3ec:	jmp    0x40c154
  40c3f1:	mov    ebp,DWORD PTR [rip+0x5ca1]        # 0x412098
  40c3f7:	cmp    ebp,0xffffffff
  40c3fa:	je     0x40c40b
  40c3fc:	cmp    DWORD PTR [rip+0x5c91],0xffffffff        # 0x412094
  40c403:	jne    0x40c40b
  40c405:	mov    DWORD PTR [rip+0x5c89],ebx        # 0x412094
  40c40b:	lea    rsi,[r13+0x1]
  40c40f:	cmp    al,0x2d
  40c411:	mov    QWORD PTR [rip+0x5c88],rsi        # 0x4120a0
  40c418:	je     0x40c5cf
  40c41e:	cmp    QWORD PTR [rsp+0x98],0x0
  40c427:	je     0x40c4ee
  40c42d:	movsxd rdx,DWORD PTR [rip+0x5c78]        # 0x4120ac
  40c434:	cmp    rsi,QWORD PTR [r15+rdx*8]
  40c438:	je     0x40c4ee
  40c43e:	cmp    al,0x2d
  40c440:	je     0x40c2c2
  40c446:	test   BYTE PTR [rsp+0xa8],0x4
  40c44e:	je     0x40c4ee
  40c454:	xor    edx,edx
  40c456:	cmp    al,0x3a
  40c458:	je     0x40c472
  40c45a:	mov    rcx,QWORD PTR [rsp+0x90]
  40c462:	movsx  edx,al
  40c465:	call   0x410950
  40c46a:	xor    edx,edx
  40c46c:	test   rax,rax
  40c46f:	setne  dl
  40c472:	mov    DWORD PTR [rsp+0x20],edx
  40c476:	mov    r9,QWORD PTR [rsp+0xa0]
  40c47e:	mov    rcx,r15
  40c481:	mov    r8,QWORD PTR [rsp+0x98]
  40c489:	mov    rdx,QWORD PTR [rsp+0x90]
  40c491:	call   0x40bd10
  40c496:	cmp    eax,0xffffffff
  40c499:	je     0x40c4e4
  40c49b:	lea    rcx,[rip+0xbb53]        # 0x417ff5
  40c4a2:	mov    QWORD PTR [rip+0x5bf7],rcx        # 0x4120a0
  40c4a9:	jmp    0x40c3d3
  40c4ae:	xchg   ax,ax
  40c4b0:	add    ebx,0x1
  40c4b3:	mov    QWORD PTR [rip+0x122d6],r13        # 0x41e790
  40c4ba:	mov    eax,0x1
  40c4bf:	mov    DWORD PTR [rip+0x5be7],ebx        # 0x4120ac
  40c4c5:	jmp    0x40c3d3
  40c4ca:	mov    eax,DWORD PTR [rip+0x5bc8]        # 0x412098
  40c4d0:	cmp    eax,0xffffffff
  40c4d3:	je     0x40c3ba
  40c4d9:	mov    DWORD PTR [rip+0x5bcd],eax        # 0x4120ac
  40c4df:	jmp    0x40c3ba
  40c4e4:	mov    rsi,QWORD PTR [rip+0x5bb5]        # 0x4120a0
  40c4eb:	movzx  eax,BYTE PTR [rsi]
  40c4ee:	lea    rbp,[rsi+0x1]
  40c4f2:	movsx  ebx,al
  40c4f5:	cmp    ebx,0x3a
  40c4f8:	mov    QWORD PTR [rip+0x5ba1],rbp        # 0x4120a0
  40c4ff:	je     0x40c564
  40c501:	cmp    ebx,0x2d
  40c504:	je     0x40c6a7
  40c50a:	mov    rcx,QWORD PTR [rsp+0x90]
  40c512:	mov    edx,ebx
  40c514:	call   0x410950
  40c519:	test   rax,rax
  40c51c:	je     0x40c564
  40c51e:	cmp    ebx,0x57
  40c521:	jne    0x40c5c6
  40c527:	cmp    QWORD PTR [rsp+0x98],0x0
  40c530:	je     0x40c5c6
  40c536:	movzx  edx,BYTE PTR [rax+0x1]
  40c53a:	cmp    dl,0x3b
  40c53d:	je     0x40c620
  40c543:	cmp    dl,0x3a
  40c546:	je     0x40c6bb
  40c54c:	cmp    BYTE PTR [rsi+0x1],0x0
  40c550:	mov    eax,ebx
  40c552:	jne    0x40c3d3
  40c558:	add    DWORD PTR [rip+0x5b4d],0x1        # 0x4120ac
  40c55f:	jmp    0x40c3d3
  40c564:	cmp    BYTE PTR [rsi+0x1],0x0
  40c568:	jne    0x40c571
  40c56a:	add    DWORD PTR [rip+0x5b3b],0x1        # 0x4120ac
  40c571:	mov    ecx,DWORD PTR [rip+0x5b39]        # 0x4120b0
  40c577:	test   ecx,ecx
  40c579:	je     0x40c596
  40c57b:	mov    rax,QWORD PTR [rsp+0x90]
  40c583:	cmp    BYTE PTR [rax],0x3a
  40c586:	je     0x40c596
  40c588:	lea    rcx,[rip+0xba91]        # 0x418020
  40c58f:	mov    edx,ebx
  40c591:	call   0x40bc90
  40c596:	mov    DWORD PTR [rip+0x5b0c],ebx        # 0x4120a8
  40c59c:	mov    eax,0x3f
  40c5a1:	jmp    0x40c3d3
  40c5a6:	mov    rcx,QWORD PTR [rsp+0x90]
  40c5ae:	mov    edx,0x2d
  40c5b3:	call   0x410950
  40c5b8:	test   rax,rax
  40c5bb:	je     0x40c3ce
  40c5c1:	mov    ebx,0x2d
  40c5c6:	movzx  edx,BYTE PTR [rax+0x1]
  40c5ca:	jmp    0x40c543
  40c5cf:	cmp    BYTE PTR [r13+0x2],0x0
  40c5d4:	jne    0x40c2a4
  40c5da:	mov    esi,DWORD PTR [rip+0x5ab4]        # 0x412094
  40c5e0:	lea    r8d,[rbx+0x1]
  40c5e4:	lea    rax,[rip+0xba0a]        # 0x417ff5
  40c5eb:	mov    DWORD PTR [rip+0x5aba],r8d        # 0x4120ac
  40c5f2:	mov    QWORD PTR [rip+0x5aa7],rax        # 0x4120a0
  40c5f9:	cmp    esi,0xffffffff
  40c5fc:	je     0x40c3ba
  40c602:	mov    ecx,ebp
  40c604:	mov    r9,r15
  40c607:	mov    edx,esi
  40c609:	call   0x40bbe0
  40c60e:	sub    ebp,esi
  40c610:	add    DWORD PTR [rip+0x5a96],ebp        # 0x4120ac
  40c616:	jmp    0x40c3ba
  40c61b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c620:	cmp    BYTE PTR [rsi+0x1],0x0
  40c624:	jne    0x40c775
  40c62a:	mov    eax,DWORD PTR [rip+0x5a7c]        # 0x4120ac
  40c630:	add    eax,0x1
  40c633:	cmp    edi,eax
  40c635:	mov    DWORD PTR [rip+0x5a71],eax        # 0x4120ac
  40c63b:	jg     0x40c768
  40c641:	mov    edx,DWORD PTR [rip+0x5a69]        # 0x4120b0
  40c647:	lea    rax,[rip+0xb9a7]        # 0x417ff5
  40c64e:	mov    QWORD PTR [rip+0x5a4b],rax        # 0x4120a0
  40c655:	test   edx,edx
  40c657:	je     0x40c677
  40c659:	mov    rax,QWORD PTR [rsp+0x90]
  40c661:	cmp    BYTE PTR [rax],0x3a
  40c664:	je     0x40c677
  40c666:	lea    rcx,[rip+0xba73]        # 0x4180e0
  40c66d:	mov    edx,0x57
  40c672:	call   0x40bc90
  40c677:	mov    rax,QWORD PTR [rsp+0x90]
  40c67f:	mov    DWORD PTR [rip+0x5a1f],0x57        # 0x4120a8
  40c689:	cmp    BYTE PTR [rax],0x3a
  40c68c:	je     0x40c75e
  40c692:	mov    eax,0x3f
  40c697:	jmp    0x40c3d3
  40c69c:	lea    rbp,[rsi+0x1]
  40c6a0:	mov    QWORD PTR [rip+0x59f9],rbp        # 0x4120a0
  40c6a7:	cmp    BYTE PTR [rsi+0x1],0x0
  40c6ab:	je     0x40c5a6
  40c6b1:	mov    ebx,0x2d
  40c6b6:	jmp    0x40c571
  40c6bb:	mov    QWORD PTR [rip+0x120ca],0x0        # 0x41e790
  40c6c6:	cmp    BYTE PTR [rsi+0x1],0x0
  40c6ca:	je     0x40c6f7
  40c6cc:	mov    eax,DWORD PTR [rip+0x59da]        # 0x4120ac
  40c6d2:	mov    QWORD PTR [rip+0x120b7],rbp        # 0x41e790
  40c6d9:	lea    rcx,[rip+0xb915]        # 0x417ff5
  40c6e0:	add    eax,0x1
  40c6e3:	mov    DWORD PTR [rip+0x59c3],eax        # 0x4120ac
  40c6e9:	mov    eax,ebx
  40c6eb:	mov    QWORD PTR [rip+0x59ae],rcx        # 0x4120a0
  40c6f2:	jmp    0x40c3d3
  40c6f7:	cmp    BYTE PTR [rax+0x2],0x3a
  40c6fb:	mov    eax,DWORD PTR [rip+0x59ab]        # 0x4120ac
  40c701:	je     0x40c6d9
  40c703:	add    eax,0x1
  40c706:	cmp    edi,eax
  40c708:	mov    DWORD PTR [rip+0x599e],eax        # 0x4120ac
  40c70e:	jg     0x40c7a2
  40c714:	lea    rax,[rip+0xb8da]        # 0x417ff5
  40c71b:	mov    QWORD PTR [rip+0x597e],rax        # 0x4120a0
  40c722:	mov    eax,DWORD PTR [rip+0x5988]        # 0x4120b0
  40c728:	test   eax,eax
  40c72a:	je     0x40c747
  40c72c:	mov    rax,QWORD PTR [rsp+0x90]
  40c734:	cmp    BYTE PTR [rax],0x3a
  40c737:	je     0x40c747
  40c739:	lea    rcx,[rip+0xb9a0]        # 0x4180e0
  40c740:	mov    edx,ebx
  40c742:	call   0x40bc90
  40c747:	mov    rax,QWORD PTR [rsp+0x90]
  40c74f:	mov    DWORD PTR [rip+0x5953],ebx        # 0x4120a8
  40c755:	cmp    BYTE PTR [rax],0x3a
  40c758:	jne    0x40c692
  40c75e:	mov    eax,0x3a
  40c763:	jmp    0x40c3d3
  40c768:	cdqe   
  40c76a:	mov    rax,QWORD PTR [r15+rax*8]
  40c76e:	mov    QWORD PTR [rip+0x592b],rax        # 0x4120a0
  40c775:	mov    r9,QWORD PTR [rsp+0xa0]
  40c77d:	mov    r8,QWORD PTR [rsp+0x98]
  40c785:	mov    rcx,r15
  40c788:	mov    rdx,QWORD PTR [rsp+0x90]
  40c790:	mov    DWORD PTR [rsp+0x20],0x0
  40c798:	call   0x40bd10
  40c79d:	jmp    0x40c49b
  40c7a2:	movsxd rdx,eax
  40c7a5:	mov    rdx,QWORD PTR [r15+rdx*8]
  40c7a9:	mov    QWORD PTR [rip+0x11fe0],rdx        # 0x41e790
  40c7b0:	jmp    0x40c6d9
  40c7b5:	nop
  40c7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7c0:	sub    rsp,0x38
  40c7c4:	xor    r9d,r9d
  40c7c7:	mov    DWORD PTR [rsp+0x28],0x0
  40c7cf:	mov    QWORD PTR [rsp+0x20],0x0
  40c7d8:	call   0x40c0d0
  40c7dd:	add    rsp,0x38
  40c7e1:	ret    
  40c7e2:	nop    DWORD PTR [rax+0x0]
  40c7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7f0:	sub    rsp,0x38
  40c7f4:	mov    rax,QWORD PTR [rsp+0x60]
  40c7f9:	mov    DWORD PTR [rsp+0x28],0x1
  40c801:	mov    QWORD PTR [rsp+0x20],rax
  40c806:	call   0x40c0d0
  40c80b:	add    rsp,0x38
  40c80f:	ret    
  40c810:	sub    rsp,0x38
  40c814:	mov    rax,QWORD PTR [rsp+0x60]
  40c819:	mov    DWORD PTR [rsp+0x28],0x5
  40c821:	mov    QWORD PTR [rsp+0x20],rax
  40c826:	call   0x40c0d0
  40c82b:	add    rsp,0x38
  40c82f:	ret    
  40c830:	push   r12
  40c832:	push   rbp
  40c833:	push   rdi
  40c834:	push   rsi
  40c835:	push   rbx
  40c836:	sub    rsp,0x250
  40c83d:	mov    rbx,rdx
  40c840:	mov    rsi,rcx
  40c843:	mov    ecx,0x4000
  40c848:	mov    r12d,r8d
  40c84b:	call   0x410998
  40c850:	test   rbx,rbx
  40c853:	mov    rbp,rax
  40c856:	je     0x40c920
  40c85c:	cmp    WORD PTR [rbx],0x0
  40c860:	lea    rax,[rip+0xb8b9]        # 0x418120
  40c867:	cmove  rbx,rax
  40c86b:	test   rsi,rsi
  40c86e:	je     0x40c911
  40c874:	cmp    WORD PTR [rsi],0x0
  40c878:	lea    rax,[rip+0xb8b5]        # 0x418134
  40c87f:	cmove  rsi,rax
  40c883:	lea    rdi,[rsp+0x40]
  40c888:	xor    ecx,ecx
  40c88a:	mov    r8d,0x104
  40c890:	mov    rdx,rdi
  40c893:	call   QWORD PTR [rip+0x12c1b]        # 0x41f4b4
  40c899:	test   eax,eax
  40c89b:	je     0x40c900
  40c89d:	lea    r8,[rip+0xb894]        # 0x418138
  40c8a4:	mov    QWORD PTR [rsp+0x30],rsi
  40c8a9:	mov    DWORD PTR [rsp+0x28],r12d
  40c8ae:	mov    QWORD PTR [rsp+0x20],rbx
  40c8b3:	mov    r9,rdi
  40c8b6:	mov    edx,0x1fff
  40c8bb:	mov    rcx,rbp
  40c8be:	call   0x410a40
  40c8c3:	mov    rax,QWORD PTR [rip+0xbf26]        # 0x4187f0
  40c8ca:	mov    eax,DWORD PTR [rax]
  40c8cc:	test   eax,eax
  40c8ce:	je     0x40c945
  40c8d0:	xor    ecx,ecx
  40c8d2:	mov    r9d,0x12012
  40c8d8:	lea    r8,[rip+0xb8f1]        # 0x4181d0
  40c8df:	mov    rdx,rbp
  40c8e2:	call   QWORD PTR [rip+0x12e5c]        # 0x41f744
  40c8e8:	cmp    eax,0x3
  40c8eb:	je     0x40c931
  40c8ed:	cmp    eax,0x5
  40c8f0:	jne    0x40c92c
  40c8f2:	add    rsp,0x250
  40c8f9:	pop    rbx
  40c8fa:	pop    rsi
  40c8fb:	pop    rdi
  40c8fc:	pop    rbp
  40c8fd:	pop    r12
  40c8ff:	ret    
  40c900:	lea    rdx,[rip+0xb819]        # 0x418120
  40c907:	mov    rcx,rdi
  40c90a:	call   0x410900
  40c90f:	jmp    0x40c89d
  40c911:	lea    rsi,[rip+0xb81c]        # 0x418134
  40c918:	jmp    0x40c883
  40c91d:	nop    DWORD PTR [rax]
  40c920:	lea    rbx,[rip+0xb7f9]        # 0x418120
  40c927:	jmp    0x40c86b
  40c92c:	call   0x410a30
  40c931:	mov    ecx,0x16
  40c936:	call   0x410980
  40c93b:	mov    ecx,0x3
  40c940:	call   0x410a68
  40c945:	call   0x410aa0
  40c94a:	lea    rdx,[rip+0xb86f]        # 0x4181c0
  40c951:	lea    rcx,[rax+0x60]
  40c955:	mov    r8,rbp
  40c958:	call   0x4109d0
  40c95d:	call   0x410a30
  40c962:	nop
  40c963:	nop    DWORD PTR [rax]
  40c966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c970:	push   rbp
  40c971:	push   rdi
  40c972:	push   rsi
  40c973:	push   rbx
  40c974:	sub    rsp,0x38
  40c978:	mov    rdi,rdx
  40c97b:	mov    DWORD PTR [rsp+0x2c],r8d
  40c980:	mov    rbp,rcx
  40c983:	call   0x410938
  40c988:	lea    rcx,[rax+rax*1+0x2]
  40c98d:	call   0x410998
  40c992:	mov    rcx,rdi
  40c995:	mov    rsi,rax
  40c998:	call   0x410938
  40c99d:	lea    rcx,[rax+rax*1+0x2]
  40c9a2:	call   0x410998
  40c9a7:	movzx  r9d,BYTE PTR [rbp+0x0]
  40c9ac:	xor    r10d,r10d
  40c9af:	mov    rbx,rax
  40c9b2:	mov    r8d,DWORD PTR [rsp+0x2c]
  40c9b7:	test   r9b,r9b
  40c9ba:	je     0x40c9d7
  40c9bc:	nop    DWORD PTR [rax+0x0]
  40c9c0:	mov    WORD PTR [rsi+r10*2],r9w
  40c9c5:	add    r10,0x1
  40c9c9:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  40c9cf:	test   r9b,r9b
  40c9d2:	jne    0x40c9c0
  40c9d4:	add    r10,r10
  40c9d7:	movzx  r9d,BYTE PTR [rdi]
  40c9db:	xor    edx,edx
  40c9dd:	mov    WORD PTR [rsi+r10*1],dx
  40c9e2:	xor    r10d,r10d
  40c9e5:	test   r9b,r9b
  40c9e8:	je     0x40ca06
  40c9ea:	nop    WORD PTR [rax+rax*1+0x0]
  40c9f0:	mov    WORD PTR [rbx+r10*2],r9w
  40c9f5:	add    r10,0x1
  40c9f9:	movzx  r9d,BYTE PTR [rdi+r10*1]
  40c9fe:	test   r9b,r9b
  40ca01:	jne    0x40c9f0
  40ca03:	add    r10,r10
  40ca06:	xor    eax,eax
  40ca08:	mov    rdx,rbx
  40ca0b:	mov    rcx,rsi
  40ca0e:	mov    WORD PTR [rbx+r10*1],ax
  40ca13:	call   0x40c830
  40ca18:	mov    rcx,rsi
  40ca1b:	call   0x4109d8
  40ca20:	mov    rcx,rbx
  40ca23:	add    rsp,0x38
  40ca27:	pop    rbx
  40ca28:	pop    rsi
  40ca29:	pop    rdi
  40ca2a:	pop    rbp
  40ca2b:	jmp    0x4109d8
  40ca30:	push   rsi
  40ca31:	push   rbx
  40ca32:	sub    rsp,0x28
  40ca36:	movsxd rax,DWORD PTR [rcx+0x14]
  40ca3a:	lea    rdx,[rcx+0x18]
  40ca3e:	mov    rbx,rcx
  40ca41:	lea    r9,[rdx+rax*4]
  40ca45:	mov    rcx,rax
  40ca48:	jmp    0x40ca60
  40ca4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca50:	add    rdx,0x4
  40ca54:	mov    DWORD PTR [rdx-0x4],0x0
  40ca5b:	cmp    r9,rdx
  40ca5e:	jbe    0x40ca80
  40ca60:	mov    r8d,DWORD PTR [rdx]
  40ca63:	cmp    r8d,0xffffffff
  40ca67:	je     0x40ca50
  40ca69:	add    r8d,0x1
  40ca6d:	mov    rax,rbx
  40ca70:	mov    DWORD PTR [rdx],r8d
  40ca73:	add    rsp,0x28
  40ca77:	pop    rbx
  40ca78:	pop    rsi
  40ca79:	ret    
  40ca7a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca80:	cmp    ecx,DWORD PTR [rbx+0xc]
  40ca83:	jge    0x40caa0
  40ca85:	add    ecx,0x1
  40ca88:	mov    DWORD PTR [rbx+0x14],ecx
  40ca8b:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  40ca93:	mov    rax,rbx
  40ca96:	add    rsp,0x28
  40ca9a:	pop    rbx
  40ca9b:	pop    rsi
  40ca9c:	ret    
  40ca9d:	nop    DWORD PTR [rax]
  40caa0:	mov    eax,DWORD PTR [rbx+0x8]
  40caa3:	lea    ecx,[rax+0x1]
  40caa6:	call   0x40fbc0
  40caab:	mov    rsi,rax
  40caae:	lea    rcx,[rax+0x10]
  40cab2:	movsxd rax,DWORD PTR [rbx+0x14]
  40cab6:	lea    rdx,[rbx+0x10]
  40caba:	lea    r8,[rax*4+0x8]
  40cac2:	call   0x410990
  40cac7:	mov    rcx,rbx
  40caca:	mov    rbx,rsi
  40cacd:	call   0x40fcd0
  40cad2:	movsxd rax,DWORD PTR [rsi+0x14]
  40cad6:	mov    rcx,rax
  40cad9:	jmp    0x40ca85
  40cadb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cae0:	push   r15
  40cae2:	push   r14
  40cae4:	push   r13
  40cae6:	push   r12
  40cae8:	push   rbp
  40cae9:	push   rdi
  40caea:	push   rsi
  40caeb:	push   rbx
  40caec:	sub    rsp,0x48
  40caf0:	mov    rdi,rdx
  40caf3:	mov    r12,r8
  40caf6:	lea    rdx,[rsp+0x3c]
  40cafb:	lea    r8,[rsp+0x38]
  40cb00:	movsd  xmm0,QWORD PTR [rcx]
  40cb04:	mov    r13,r9
  40cb07:	call   0x4104a0
  40cb0c:	mov    r10d,DWORD PTR [rsp+0x38]
  40cb11:	mov    esi,DWORD PTR [rdi]
  40cb13:	mov    rbx,rax
  40cb16:	mov    edx,DWORD PTR [rsp+0x3c]
  40cb1a:	sub    r10d,esi
  40cb1d:	add    edx,r10d
  40cb20:	test   r10d,r10d
  40cb23:	mov    DWORD PTR [rsp+0x38],r10d
  40cb28:	mov    DWORD PTR [rsp+0x3c],edx
  40cb2c:	jle    0x40ccf0
  40cb32:	cmp    esi,0x35
  40cb35:	je     0x40cd20
  40cb3b:	cmp    DWORD PTR [rsp+0xb8],0x1
  40cb43:	je     0x40cbf4
  40cb49:	cmp    DWORD PTR [rsp+0xb8],0x2
  40cb51:	je     0x40cb80
  40cb53:	mov    eax,r10d
  40cb56:	sub    eax,0x1
  40cb59:	jne    0x40cdf0
  40cb5f:	mov    ecx,DWORD PTR [rsp+0xb0]
  40cb66:	xor    r15d,r15d
  40cb69:	test   ecx,ecx
  40cb6b:	je     0x40cc77
  40cb71:	test   BYTE PTR [rbx+0x18],0x2
  40cb75:	je     0x40cd3e
  40cb7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb80:	mov    edx,r10d
  40cb83:	mov    rcx,rbx
  40cb86:	call   0x410860
  40cb8b:	mov    edx,DWORD PTR [rsp+0x38]
  40cb8f:	mov    rcx,rbx
  40cb92:	mov    r14d,eax
  40cb95:	call   0x40f510
  40cb9a:	mov    rcx,rbx
  40cb9d:	call   0x40ca30
  40cba2:	mov    edx,esi
  40cba4:	mov    rbx,rax
  40cba7:	and    edx,0x1f
  40cbaa:	jne    0x40cde0
  40cbb0:	mov    eax,DWORD PTR [rbx+0x14]
  40cbb3:	sub    eax,0x1
  40cbb6:	cdqe   
  40cbb8:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  40cbbd:	xor    eax,0x1f
  40cbc0:	cmp    edx,eax
  40cbc2:	je     0x40ce70
  40cbc8:	test   r14d,r14d
  40cbcb:	jne    0x40cbd5
  40cbcd:	mov    r14d,DWORD PTR [rbx+0x18]
  40cbd1:	and    r14d,0x1
  40cbd5:	mov    edx,0x1
  40cbda:	mov    rcx,rbx
  40cbdd:	mov    ebp,0x20
  40cbe2:	call   0x40f510
  40cbe7:	mov    eax,DWORD PTR [rsp+0x3c]
  40cbeb:	lea    edx,[rax+0x1]
  40cbee:	mov    DWORD PTR [rsp+0x3c],edx
  40cbf2:	jmp    0x40cc1f
  40cbf4:	mov    edx,r10d
  40cbf7:	mov    rcx,rax
  40cbfa:	call   0x410860
  40cbff:	test   eax,eax
  40cc01:	mov    r14d,eax
  40cc04:	jne    0x40cc93
  40cc0a:	mov    edx,DWORD PTR [rsp+0x38]
  40cc0e:	mov    rcx,rbx
  40cc11:	xor    r14d,r14d
  40cc14:	xor    ebp,ebp
  40cc16:	call   0x40f510
  40cc1b:	mov    edx,DWORD PTR [rsp+0x3c]
  40cc1f:	mov    eax,DWORD PTR [rdi+0x4]
  40cc22:	cmp    eax,edx
  40cc24:	jle    0x40ccb0
  40cc2a:	mov    r8d,eax
  40cc2d:	mov    DWORD PTR [rsp+0x3c],eax
  40cc31:	sub    r8d,edx
  40cc34:	cmp    esi,r8d
  40cc37:	jge    0x40cd70
  40cc3d:	mov    rdi,QWORD PTR [rsp+0xc0]
  40cc45:	mov    DWORD PTR [rbx+0x14],0x0
  40cc4c:	mov    edx,eax
  40cc4e:	xor    ebp,ebp
  40cc50:	mov    DWORD PTR [rdi],0x50
  40cc56:	mov    DWORD PTR [r12],edx
  40cc5a:	mov    r8,rbx
  40cc5d:	mov    edx,esi
  40cc5f:	mov    rcx,r13
  40cc62:	mov    r15d,0x1
  40cc68:	call   0x4107f0
  40cc6d:	mov    rax,QWORD PTR [rsp+0xc0]
  40cc75:	or     DWORD PTR [rax],ebp
  40cc77:	mov    rcx,rbx
  40cc7a:	call   0x40fcd0
  40cc7f:	mov    eax,r15d
  40cc82:	add    rsp,0x48
  40cc86:	pop    rbx
  40cc87:	pop    rsi
  40cc88:	pop    rdi
  40cc89:	pop    rbp
  40cc8a:	pop    r12
  40cc8c:	pop    r13
  40cc8e:	pop    r14
  40cc90:	pop    r15
  40cc92:	ret    
  40cc93:	mov    edx,DWORD PTR [rsp+0x38]
  40cc97:	mov    rcx,rbx
  40cc9a:	mov    ebp,0x10
  40cc9f:	call   0x40f510
  40cca4:	jmp    0x40cc1b
  40cca9:	nop    DWORD PTR [rax+0x0]
  40ccb0:	mov    eax,DWORD PTR [rdi+0x8]
  40ccb3:	cmp    eax,edx
  40ccb5:	jge    0x40cc56
  40ccb7:	add    eax,0x1
  40ccba:	xor    ebp,ebp
  40ccbc:	mov    DWORD PTR [rsp+0x3c],eax
  40ccc0:	mov    rax,QWORD PTR [rsp+0xc0]
  40ccc8:	mov    DWORD PTR [rax],0xa3
  40ccce:	call   0x410a70
  40ccd3:	mov    DWORD PTR [rax],0x22
  40ccd9:	mov    DWORD PTR [rbx+0x14],0x0
  40cce0:	mov    edx,DWORD PTR [rsp+0x3c]
  40cce4:	jmp    0x40cc56
  40cce9:	nop    DWORD PTR [rax+0x0]
  40ccf0:	mov    r9d,DWORD PTR [rsp+0xb0]
  40ccf8:	xor    r15d,r15d
  40ccfb:	test   r9d,r9d
  40ccfe:	je     0x40cc77
  40cd04:	test   r10d,r10d
  40cd07:	jne    0x40ce50
  40cd0d:	xor    r14d,r14d
  40cd10:	xor    ebp,ebp
  40cd12:	jmp    0x40cc1f
  40cd17:	nop    WORD PTR [rax+rax*1+0x0]
  40cd20:	mov    r8d,DWORD PTR [rsp+0xb0]
  40cd28:	xor    r15d,r15d
  40cd2b:	test   r8d,r8d
  40cd2e:	je     0x40cc77
  40cd34:	cmp    DWORD PTR [rdi+0xc],0x1
  40cd38:	jne    0x40cc77
  40cd3e:	mov    edx,r10d
  40cd41:	mov    rcx,rbx
  40cd44:	call   0x410860
  40cd49:	test   eax,eax
  40cd4b:	mov    r14d,eax
  40cd4e:	je     0x40cc0a
  40cd54:	mov    edx,DWORD PTR [rsp+0x38]
  40cd58:	mov    rcx,rbx
  40cd5b:	mov    ebp,0x10
  40cd60:	call   0x40f510
  40cd65:	mov    edx,DWORD PTR [rsp+0x3c]
  40cd69:	jmp    0x40cc1f
  40cd6e:	xchg   ax,ax
  40cd70:	mov    edx,DWORD PTR [rdi+0x10]
  40cd73:	test   edx,edx
  40cd75:	jne    0x40cc3d
  40cd7b:	lea    edi,[r8-0x1]
  40cd7f:	test   r14d,r14d
  40cd82:	sete   al
  40cd85:	test   edi,edi
  40cd87:	jle    0x40ce2c
  40cd8d:	test   al,al
  40cd8f:	jne    0x40ce10
  40cd91:	mov    ecx,edi
  40cd93:	sar    edi,0x5
  40cd96:	mov    eax,0x1
  40cd9b:	movsxd rdi,edi
  40cd9e:	shl    eax,cl
  40cda0:	mov    edx,r8d
  40cda3:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  40cda7:	mov    rcx,rbx
  40cdaa:	mov    edi,eax
  40cdac:	call   0x40f510
  40cdb1:	mov    rax,QWORD PTR [rsp+0xc0]
  40cdb9:	test   edi,edi
  40cdbb:	mov    DWORD PTR [rax],0x2
  40cdc1:	jne    0x40ce80
  40cdc7:	test   r14d,r14d
  40cdca:	mov    edx,DWORD PTR [rsp+0x3c]
  40cdce:	je     0x40cc56
  40cdd4:	mov    ebp,0x50
  40cdd9:	jmp    0x40cc56
  40cdde:	xchg   ax,ax
  40cde0:	mov    eax,0x20
  40cde5:	sub    eax,edx
  40cde7:	mov    edx,eax
  40cde9:	jmp    0x40cbb0
  40cdee:	xchg   ax,ax
  40cdf0:	mov    edx,eax
  40cdf2:	sar    edx,0x5
  40cdf5:	movsxd rdx,edx
  40cdf8:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  40cdfc:	bt     edx,eax
  40cdff:	jb     0x40cb80
  40ce05:	jmp    0x40cd3e
  40ce0a:	nop    WORD PTR [rax+rax*1+0x0]
  40ce10:	mov    edx,edi
  40ce12:	mov    rcx,rbx
  40ce15:	mov    DWORD PTR [rsp+0x2c],r8d
  40ce1a:	call   0x410860
  40ce1f:	mov    r8d,DWORD PTR [rsp+0x2c]
  40ce24:	test   eax,eax
  40ce26:	mov    r14d,eax
  40ce29:	sete   al
  40ce2c:	test   al,al
  40ce2e:	je     0x40cd91
  40ce34:	mov    eax,DWORD PTR [rsp+0xb0]
  40ce3b:	xor    r15d,r15d
  40ce3e:	test   eax,eax
  40ce40:	je     0x40cc77
  40ce46:	jmp    0x40cd91
  40ce4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce50:	mov    edx,r10d
  40ce53:	mov    rcx,rbx
  40ce56:	neg    edx
  40ce58:	call   0x4100d0
  40ce5d:	mov    edx,DWORD PTR [rsp+0x3c]
  40ce61:	mov    rbx,rax
  40ce64:	jmp    0x40cd0d
  40ce69:	nop    DWORD PTR [rax+0x0]
  40ce70:	mov    edx,DWORD PTR [rsp+0x3c]
  40ce74:	mov    ebp,0x20
  40ce79:	jmp    0x40cc1f
  40ce7e:	xchg   ax,ax
  40ce80:	mov    rcx,rbx
  40ce83:	mov    ebp,0x60
  40ce88:	call   0x40ca30
  40ce8d:	mov    edx,DWORD PTR [rsp+0x3c]
  40ce91:	mov    rbx,rax
  40ce94:	jmp    0x40cc56
  40ce99:	nop    DWORD PTR [rax+0x0]
  40cea0:	movsxd rdx,DWORD PTR [rcx+0x14]
  40cea4:	lea    rax,[rcx+0x18]
  40cea8:	lea    rcx,[rax+rdx*4]
  40ceac:	jmp    0x40cec0
  40ceae:	xchg   ax,ax
  40ceb0:	add    rax,0x4
  40ceb4:	mov    DWORD PTR [rax-0x4],0xffffffff
  40cebb:	cmp    rcx,rax
  40cebe:	jbe    0x40ced0
  40cec0:	mov    edx,DWORD PTR [rax]
  40cec2:	test   edx,edx
  40cec4:	je     0x40ceb0
  40cec6:	sub    edx,0x1
  40cec9:	mov    DWORD PTR [rax],edx
  40cecb:	ret    
  40cecc:	nop    DWORD PTR [rax+0x0]
  40ced0:	repz ret 
  40ced2:	nop    DWORD PTR [rax+0x0]
  40ced6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cee0:	push   rbx
  40cee1:	sub    rsp,0x30
  40cee5:	lea    ebx,[rdx+0x1f]
  40cee8:	mov    rax,rcx
  40ceeb:	sar    ebx,0x5
  40ceee:	cmp    ebx,DWORD PTR [rcx+0x8]
  40cef1:	jg     0x40cf70
  40cef3:	mov    r9d,edx
  40cef6:	sar    r9d,0x5
  40cefa:	and    edx,0x1f
  40cefd:	je     0x40cf50
  40ceff:	add    r9d,0x1
  40cf03:	lea    r8,[rax+0x18]
  40cf07:	mov    DWORD PTR [rax+0x14],r9d
  40cf0b:	movsxd r9,r9d
  40cf0e:	lea    r9,[r8+r9*4]
  40cf12:	cmp    r8,r9
  40cf15:	jae    0x40cf35
  40cf17:	nop    WORD PTR [rax+rax*1+0x0]
  40cf20:	add    r8,0x4
  40cf24:	mov    DWORD PTR [r8-0x4],0xffffffff
  40cf2c:	cmp    r8,r9
  40cf2f:	jb     0x40cf20
  40cf31:	test   edx,edx
  40cf33:	je     0x40cf40
  40cf35:	mov    ecx,0x20
  40cf3a:	sub    ecx,edx
  40cf3c:	shr    DWORD PTR [r8-0x4],cl
  40cf40:	add    rsp,0x30
  40cf44:	pop    rbx
  40cf45:	ret    
  40cf46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf50:	lea    r8,[rax+0x18]
  40cf54:	mov    DWORD PTR [rax+0x14],r9d
  40cf58:	movsxd r9,r9d
  40cf5b:	lea    r9,[r8+r9*4]
  40cf5f:	cmp    r8,r9
  40cf62:	jb     0x40cf20
  40cf64:	jmp    0x40cf40
  40cf66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf70:	mov    DWORD PTR [rsp+0x2c],edx
  40cf74:	call   0x40fcd0
  40cf79:	mov    ecx,ebx
  40cf7b:	call   0x40fbc0
  40cf80:	mov    edx,DWORD PTR [rsp+0x2c]
  40cf84:	jmp    0x40cef3
  40cf89:	nop    DWORD PTR [rax+0x0]
  40cf90:	push   r15
  40cf92:	push   r14
  40cf94:	push   r13
  40cf96:	push   r12
  40cf98:	push   rbp
  40cf99:	push   rdi
  40cf9a:	push   rsi
  40cf9b:	push   rbx
  40cf9c:	sub    rsp,0x138
  40cfa3:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  40cfab:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  40cfb3:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  40cfbc:	movaps XMMWORD PTR [rsp+0x100],xmm9
  40cfc5:	movaps XMMWORD PTR [rsp+0x110],xmm10
  40cfce:	movaps XMMWORD PTR [rsp+0x120],xmm11
  40cfd7:	mov    rdi,rcx
  40cfda:	mov    QWORD PTR [rsp+0x190],r8
  40cfe2:	mov    QWORD PTR [rsp+0x188],rdx
  40cfea:	mov    QWORD PTR [rsp+0x198],r9
  40cff2:	call   0x4109a0
  40cff7:	mov    rbp,QWORD PTR [rax]
  40cffa:	mov    rcx,rbp
  40cffd:	call   0x410938
  40d002:	mov    r14,rax
  40d005:	mov    rax,QWORD PTR [rsp+0x190]
  40d00d:	mov    DWORD PTR [rsp+0xa4],0x0
  40d018:	mov    QWORD PTR [rsp+0xb0],0x0
  40d024:	mov    QWORD PTR [rsp+0xc8],0x0
  40d030:	lea    rcx,[rip+0xb1d5]        # 0x41820c
  40d037:	mov    QWORD PTR [rsp+0xc0],rdi
  40d03f:	mov    eax,DWORD PTR [rax]
  40d041:	mov    DWORD PTR [rsp+0x40],eax
  40d045:	mov    rax,rdi
  40d048:	movzx  r8d,BYTE PTR [rax]
  40d04c:	cmp    r8b,0x2d
  40d050:	ja     0x40d200
  40d056:	movzx  edx,r8b
  40d05a:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40d05e:	add    rdx,rcx
  40d061:	jmp    rdx
  40d063:	mov    DWORD PTR [rsp+0xa4],0x6
  40d06e:	mov    QWORD PTR [rsp+0xc0],rdi
  40d076:	xor    r8d,r8d
  40d079:	mov    DWORD PTR [rsp+0x58],0x0
  40d081:	cmp    QWORD PTR [rsp+0x188],0x0
  40d08a:	je     0x40d09f
  40d08c:	mov    rax,QWORD PTR [rsp+0xc0]
  40d094:	mov    rsi,QWORD PTR [rsp+0x188]
  40d09c:	mov    QWORD PTR [rsi],rax
  40d09f:	mov    eax,DWORD PTR [rsp+0x58]
  40d0a3:	test   eax,eax
  40d0a5:	jne    0x40d120
  40d0a7:	test   r8,r8
  40d0aa:	je     0x40d0ca
  40d0ac:	mov    rcx,QWORD PTR [rsp+0x1a0]
  40d0b4:	mov    edx,DWORD PTR [rsp+0x40]
  40d0b8:	call   0x4107f0
  40d0bd:	mov    rcx,QWORD PTR [rsp+0xc8]
  40d0c5:	call   0x40fcd0
  40d0ca:	mov    eax,DWORD PTR [rsp+0xa4]
  40d0d1:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  40d0d9:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  40d0e1:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  40d0ea:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  40d0f3:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  40d0fc:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  40d105:	add    rsp,0x138
  40d10c:	pop    rbx
  40d10d:	pop    rsi
  40d10e:	pop    rdi
  40d10f:	pop    rbp
  40d110:	pop    r12
  40d112:	pop    r13
  40d114:	pop    r14
  40d116:	pop    r15
  40d118:	ret    
  40d119:	nop    DWORD PTR [rax+0x0]
  40d120:	or     DWORD PTR [rsp+0xa4],0x8
  40d128:	jmp    0x40d0a7
  40d12d:	nop    DWORD PTR [rax]
  40d130:	mov    rdx,rax
  40d133:	mov    DWORD PTR [rsp+0x58],0x0
  40d13b:	add    rax,0x1
  40d13f:	mov    QWORD PTR [rsp+0xc0],rax
  40d147:	movzx  r8d,BYTE PTR [rdx+0x1]
  40d14c:	test   r8b,r8b
  40d14f:	je     0x40d063
  40d155:	xor    r12d,r12d
  40d158:	cmp    r8b,0x30
  40d15c:	mov    r15,rax
  40d15f:	je     0x40d218
  40d165:	mov    rax,QWORD PTR [rsp+0x190]
  40d16d:	mov    eax,DWORD PTR [rax+0x10]
  40d170:	mov    DWORD PTR [rsp+0x84],eax
  40d177:	movsx  eax,r8b
  40d17b:	lea    edx,[rax-0x30]
  40d17e:	cmp    edx,0x9
  40d181:	ja     0x40d273
  40d187:	lea    rcx,[r15+0x1]
  40d18b:	xor    edx,edx
  40d18d:	xor    esi,esi
  40d18f:	xor    ebx,ebx
  40d191:	jmp    0x40d1c5
  40d193:	lea    eax,[rsi+rsi*4]
  40d196:	movsx  r8d,r8b
  40d19a:	lea    esi,[r8+rax*2-0x30]
  40d19f:	mov    QWORD PTR [rsp+0xc0],rcx
  40d1a7:	movsx  eax,BYTE PTR [rcx]
  40d1aa:	add    ebx,0x1
  40d1ad:	mov    r9,rcx
  40d1b0:	lea    rcx,[rcx+0x1]
  40d1b4:	lea    r10d,[rax-0x30]
  40d1b8:	mov    r8d,eax
  40d1bb:	cmp    r10d,0x9
  40d1bf:	ja     0x40d280
  40d1c5:	cmp    ebx,0x8
  40d1c8:	jle    0x40d193
  40d1ca:	cmp    ebx,0xf
  40d1cd:	jg     0x40d19f
  40d1cf:	lea    eax,[rdx+rdx*4]
  40d1d2:	movsx  r8d,r8b
  40d1d6:	lea    edx,[r8+rax*2-0x30]
  40d1db:	jmp    0x40d19f
  40d1dd:	nop    DWORD PTR [rax]
  40d1e0:	add    rax,0x1
  40d1e4:	mov    QWORD PTR [rsp+0xc0],rax
  40d1ec:	movzx  r8d,BYTE PTR [rax]
  40d1f0:	cmp    r8b,0x2d
  40d1f4:	jbe    0x40d056
  40d1fa:	nop    WORD PTR [rax+rax*1+0x0]
  40d200:	xor    r12d,r12d
  40d203:	cmp    r8b,0x30
  40d207:	mov    DWORD PTR [rsp+0x58],0x0
  40d20f:	mov    r15,rax
  40d212:	jne    0x40d165
  40d218:	movzx  edx,BYTE PTR [rax+0x1]
  40d21c:	cmp    dl,0x58
  40d21f:	je     0x40e3df
  40d225:	add    rax,0x1
  40d229:	cmp    dl,0x78
  40d22c:	je     0x40e3df
  40d232:	mov    r15,rax
  40d235:	mov    QWORD PTR [rsp+0xc0],rax
  40d23d:	add    rax,0x1
  40d241:	movzx  edx,BYTE PTR [rax-0x1]
  40d245:	cmp    dl,0x30
  40d248:	je     0x40d232
  40d24a:	xor    r8d,r8d
  40d24d:	test   dl,dl
  40d24f:	je     0x40d081
  40d255:	mov    r8d,edx
  40d258:	mov    r12d,0x1
  40d25e:	jmp    0x40d165
  40d263:	mov    rdx,rax
  40d266:	mov    DWORD PTR [rsp+0x58],0x1
  40d26e:	jmp    0x40d13b
  40d273:	mov    r9,r15
  40d276:	xor    edx,edx
  40d278:	xor    esi,esi
  40d27a:	xor    ebx,ebx
  40d27c:	nop    DWORD PTR [rax+0x0]
  40d280:	movsx  ecx,BYTE PTR [rbp+0x0]
  40d284:	cmp    ecx,eax
  40d286:	je     0x40d684
  40d28c:	mov    ebp,ebx
  40d28e:	xor    ecx,ecx
  40d290:	xor    r13d,r13d
  40d293:	xor    r11d,r11d
  40d296:	mov    r8d,eax
  40d299:	and    r8d,0xffffffdf
  40d29d:	cmp    r8d,0x45
  40d2a1:	je     0x40d3a0
  40d2a7:	xor    r8d,r8d
  40d2aa:	test   ebp,ebp
  40d2ac:	jne    0x40d515
  40d2b2:	or     ecx,r12d
  40d2b5:	jne    0x40d508
  40d2bb:	test   r11d,r11d
  40d2be:	jne    0x40d4d3
  40d2c4:	cmp    eax,0x4e
  40d2c7:	je     0x40d2e1
  40d2c9:	jle    0x40d4ca
  40d2cf:	cmp    eax,0x69
  40d2d2:	je     0x40e66a
  40d2d8:	cmp    eax,0x6e
  40d2db:	jne    0x40d4d3
  40d2e1:	lea    rbx,[rsp+0xc0]
  40d2e9:	lea    rdx,[rip+0xaf19]        # 0x418209
  40d2f0:	mov    rcx,rbx
  40d2f3:	call   0x4107a0
  40d2f8:	test   eax,eax
  40d2fa:	je     0x40d4d3
  40d300:	mov    rax,QWORD PTR [rsp+0x190]
  40d308:	mov    rsi,QWORD PTR [rsp+0x198]
  40d310:	xor    ebp,ebp
  40d312:	mov    rdx,QWORD PTR [rsp+0xc0]
  40d31a:	mov    DWORD PTR [rsp+0xa4],0x4
  40d325:	mov    eax,DWORD PTR [rax+0x8]
  40d328:	mov    DWORD PTR [rsp+0x44],eax
  40d32c:	add    eax,0x1
  40d32f:	mov    DWORD PTR [rsi],eax
  40d331:	cmp    BYTE PTR [rdx],0x28
  40d334:	je     0x40ea46
  40d33a:	nop    WORD PTR [rax+rax*1+0x0]
  40d340:	mov    rsi,QWORD PTR [rsp+0x198]
  40d348:	mov    DWORD PTR [rsi],eax
  40d34a:	mov    r8,QWORD PTR [rsp+0xc8]
  40d352:	test   ebp,ebp
  40d354:	je     0x40d081
  40d35a:	mov    r9d,DWORD PTR [rsp+0x84]
  40d362:	test   r9d,r9d
  40d365:	jne    0x40da94
  40d36b:	mov    eax,DWORD PTR [rsp+0xa4]
  40d372:	mov    ecx,DWORD PTR [r8+0x14]
  40d376:	xor    edx,edx
  40d378:	and    eax,0xfffffff8
  40d37b:	test   ecx,ecx
  40d37d:	setg   dl
  40d380:	add    edx,edx
  40d382:	or     eax,edx
  40d384:	test   al,0x30
  40d386:	jne    0x40d4f3
  40d38c:	mov    DWORD PTR [rsp+0xa4],eax
  40d393:	jmp    0x40d081
  40d398:	nop    DWORD PTR [rax+rax*1+0x0]
  40d3a0:	mov    eax,ebp
  40d3a2:	or     eax,ecx
  40d3a4:	or     eax,r12d
  40d3a7:	je     0x40d4d3
  40d3ad:	mov    rdi,QWORD PTR [rsp+0xc0]
  40d3b5:	lea    rax,[rdi+0x1]
  40d3b9:	mov    QWORD PTR [rsp+0xc0],rax
  40d3c1:	movsx  eax,BYTE PTR [rdi+0x1]
  40d3c5:	cmp    al,0x2b
  40d3c7:	je     0x40e588
  40d3cd:	cmp    al,0x2d
  40d3cf:	je     0x40d991
  40d3d5:	mov    DWORD PTR [rsp+0x44],0x0
  40d3dd:	lea    r8d,[rax-0x30]
  40d3e1:	cmp    r8d,0x9
  40d3e5:	ja     0x40dac0
  40d3eb:	cmp    eax,0x30
  40d3ee:	jne    0x40d415
  40d3f0:	mov    rax,QWORD PTR [rsp+0xc0]
  40d3f8:	lea    r8,[rax+0x1]
  40d3fc:	nop    DWORD PTR [rax+0x0]
  40d400:	mov    QWORD PTR [rsp+0xc0],r8
  40d408:	movsx  eax,BYTE PTR [r8]
  40d40c:	add    r8,0x1
  40d410:	cmp    eax,0x30
  40d413:	je     0x40d400
  40d415:	lea    r9d,[rax-0x31]
  40d419:	xor    r8d,r8d
  40d41c:	cmp    r9d,0x8
  40d420:	ja     0x40d2aa
  40d426:	lea    r9d,[rax-0x30]
  40d42a:	mov    rax,QWORD PTR [rsp+0xc0]
  40d432:	lea    r10,[rax+0x1]
  40d436:	mov    QWORD PTR [rsp+0x50],rax
  40d43b:	mov    QWORD PTR [rsp+0xc0],r10
  40d443:	mov    QWORD PTR [rsp+0x48],r10
  40d448:	mov    r10,rax
  40d44b:	movsx  eax,BYTE PTR [rax+0x1]
  40d44f:	lea    r8d,[rax-0x30]
  40d453:	cmp    r8d,0x9
  40d457:	ja     0x40d493
  40d459:	lea    r8,[r10+0x2]
  40d45d:	mov    DWORD PTR [rsp+0x5c],r11d
  40d462:	lea    r9d,[r9+r9*4]
  40d466:	mov    QWORD PTR [rsp+0xc0],r8
  40d46e:	mov    r11,r8
  40d471:	add    r8,0x1
  40d475:	lea    r9d,[rax+r9*2-0x30]
  40d47a:	movsx  eax,BYTE PTR [r8-0x1]
  40d47f:	lea    r10d,[rax-0x30]
  40d483:	cmp    r10d,0x9
  40d487:	jbe    0x40d462
  40d489:	mov    QWORD PTR [rsp+0x48],r11
  40d48e:	mov    r11d,DWORD PTR [rsp+0x5c]
  40d493:	mov    r8,QWORD PTR [rsp+0x48]
  40d498:	sub    r8,QWORD PTR [rsp+0x50]
  40d49d:	cmp    r8,0x8
  40d4a1:	jg     0x40e65f
  40d4a7:	cmp    r9d,0x4e1f
  40d4ae:	jg     0x40e65f
  40d4b4:	mov    r10d,DWORD PTR [rsp+0x44]
  40d4b9:	mov    r8d,r10d
  40d4bc:	neg    r8d
  40d4bf:	xor    r8d,r9d
  40d4c2:	add    r8d,r10d
  40d4c5:	jmp    0x40d2aa
  40d4ca:	cmp    eax,0x49
  40d4cd:	je     0x40e66a
  40d4d3:	mov    DWORD PTR [rsp+0xa4],0x6
  40d4de:	mov    QWORD PTR [rsp+0xc0],rdi
  40d4e6:	mov    r8,QWORD PTR [rsp+0xc8]
  40d4ee:	jmp    0x40d081
  40d4f3:	or     eax,0x40
  40d4f6:	mov    DWORD PTR [rsp+0xa4],eax
  40d4fd:	call   0x410a70
  40d502:	mov    DWORD PTR [rax],0x22
  40d508:	mov    r8,QWORD PTR [rsp+0xc8]
  40d510:	jmp    0x40d081
  40d515:	mov    rax,QWORD PTR [rsp+0x190]
  40d51d:	mov    ecx,DWORD PTR [rsp+0x58]
  40d521:	sub    r8d,r13d
  40d524:	mov    DWORD PTR [rsp+0xa4],0x1
  40d52f:	mov    DWORD PTR [rsp+0x68],r8d
  40d534:	mov    eax,DWORD PTR [rax+0xc]
  40d537:	mov    DWORD PTR [rsp+0x44],eax
  40d53b:	and    eax,0x3
  40d53e:	mov    edi,eax
  40d540:	sub    edi,ecx
  40d542:	cmp    eax,0x2
  40d545:	mov    DWORD PTR [rsp+0x6c],edi
  40d549:	je     0x40d563
  40d54b:	lea    edi,[rcx+0x1]
  40d54e:	cmp    eax,0x3
  40d551:	mov    DWORD PTR [rsp+0x6c],edi
  40d555:	je     0x40d563
  40d557:	test   eax,eax
  40d559:	sete   al
  40d55c:	movzx  eax,al
  40d55f:	mov    DWORD PTR [rsp+0x6c],eax
  40d563:	pxor   xmm0,xmm0
  40d567:	mov    eax,esi
  40d569:	test   ebx,ebx
  40d56b:	cmove  ebx,ebp
  40d56e:	mov    edi,0x10
  40d573:	cmp    ebp,0x10
  40d576:	cmovle edi,ebp
  40d579:	cvtsi2sd xmm0,rax
  40d57e:	cmp    edi,0x9
  40d581:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40d58a:	jle    0x40d5b3
  40d58c:	pxor   xmm1,xmm1
  40d590:	lea    eax,[rdi-0x9]
  40d593:	mov    rcx,QWORD PTR [rip+0xb116]        # 0x4186b0
  40d59a:	cdqe   
  40d59c:	cvtsi2sd xmm1,rdx
  40d5a1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  40d5a6:	addsd  xmm0,xmm1
  40d5aa:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40d5b3:	cmp    ebp,0xf
  40d5b6:	jg     0x40d725
  40d5bc:	cmp    DWORD PTR [rsp+0x40],0x35
  40d5c1:	jg     0x40d725
  40d5c7:	cmp    DWORD PTR [rsp+0x68],0x0
  40d5cc:	je     0x40e5b0
  40d5d2:	jle    0x40da39
  40d5d8:	cmp    DWORD PTR [rsp+0x68],0x16
  40d5dd:	jg     0x40e5da
  40d5e3:	movsxd rcx,DWORD PTR [rsp+0x68]
  40d5e8:	mov    edx,DWORD PTR [rsp+0xb0]
  40d5ef:	lea    rax,[rip+0xad0a]        # 0x418300
  40d5f6:	test   edx,edx
  40d5f8:	mov    r8d,DWORD PTR [rax+rcx*4]
  40d5fc:	je     0x40e6ce
  40d602:	tzcnt  edx,edx
  40d606:	mov    eax,0x35
  40d60b:	sub    eax,edx
  40d60d:	mov    rdx,QWORD PTR [rip+0xb09c]        # 0x4186b0
  40d614:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40d61d:	add    eax,r8d
  40d620:	cmp    eax,0x35
  40d623:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  40d628:	lea    rdx,[rsp+0xa4]
  40d630:	setle  al
  40d633:	movzx  eax,al
  40d636:	lea    rcx,[rsp+0xb0]
  40d63e:	mov    QWORD PTR [rsp+0x30],rdx
  40d643:	mov    edx,DWORD PTR [rsp+0x6c]
  40d647:	mov    DWORD PTR [rsp+0x20],eax
  40d64b:	mov    DWORD PTR [rsp+0x28],edx
  40d64f:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40d658:	mov    r9,QWORD PTR [rsp+0x1a0]
  40d660:	mov    r8,QWORD PTR [rsp+0x198]
  40d668:	mov    rdx,QWORD PTR [rsp+0x190]
  40d670:	call   0x40cae0
  40d675:	test   eax,eax
  40d677:	jne    0x40d508
  40d67d:	xor    eax,eax
  40d67f:	jmp    0x40d729
  40d684:	movzx  r8d,BYTE PTR [rbp+0x1]
  40d689:	test   r8b,r8b
  40d68c:	je     0x40e90d
  40d692:	cmp    r8b,BYTE PTR [r9+0x1]
  40d696:	jne    0x40d28c
  40d69c:	mov    eax,0x2
  40d6a1:	jmp    0x40d6b2
  40d6a3:	add    rax,0x1
  40d6a7:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  40d6ac:	jne    0x40d8b0
  40d6b2:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  40d6b8:	test   r8b,r8b
  40d6bb:	jne    0x40d6a3
  40d6bd:	lea    r8,[r9+rax*1]
  40d6c1:	test   ebx,ebx
  40d6c3:	mov    QWORD PTR [rsp+0xc0],r8
  40d6cb:	movsx  eax,BYTE PTR [r8]
  40d6cf:	je     0x40d9ae
  40d6d5:	lea    r8d,[rax-0x30]
  40d6d9:	xor    ecx,ecx
  40d6db:	xor    r13d,r13d
  40d6de:	mov    ebp,ebx
  40d6e0:	cmp    r8d,0x9
  40d6e4:	ja     0x40d71a
  40d6e6:	test   r8d,r8d
  40d6e9:	lea    eax,[rcx+0x1]
  40d6ec:	mov    r9d,r8d
  40d6ef:	jne    0x40e88d
  40d6f5:	mov    r8,QWORD PTR [rsp+0xc0]
  40d6fd:	mov    ecx,eax
  40d6ff:	lea    rax,[r8+0x1]
  40d703:	mov    QWORD PTR [rsp+0xc0],rax
  40d70b:	movsx  eax,BYTE PTR [r8+0x1]
  40d710:	lea    r8d,[rax-0x30]
  40d714:	cmp    r8d,0x9
  40d718:	jbe    0x40d6e6
  40d71a:	mov    r11d,0x1
  40d720:	jmp    0x40d296
  40d725:	mov    eax,DWORD PTR [rsp+0x68]
  40d729:	mov    edx,ebp
  40d72b:	sub    edx,edi
  40d72d:	add    edx,eax
  40d72f:	cmp    edx,0x0
  40d732:	jle    0x40e46a
  40d738:	mov    eax,edx
  40d73a:	and    eax,0xf
  40d73d:	je     0x40d75f
  40d73f:	mov    rcx,QWORD PTR [rip+0xaf6a]        # 0x4186b0
  40d746:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40d74f:	cdqe   
  40d751:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  40d756:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40d75f:	and    edx,0xfffffff0
  40d762:	jne    0x40d8c1
  40d768:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40d771:	xor    edi,edi
  40d773:	lea    rdx,[rsp+0xac]
  40d77b:	lea    r8,[rsp+0xa8]
  40d783:	call   0x4104a0
  40d788:	mov    edx,DWORD PTR [rsp+0xa8]
  40d78f:	mov    r13d,DWORD PTR [rsp+0x40]
  40d794:	add    edi,DWORD PTR [rsp+0xac]
  40d79b:	mov    QWORD PTR [rsp+0xc8],rax
  40d7a3:	mov    r12d,edx
  40d7a6:	sub    r12d,r13d
  40d7a9:	test   r12d,r12d
  40d7ac:	mov    DWORD PTR [rsp+0xac],edi
  40d7b3:	jle    0x40d7dc
  40d7b5:	mov    edx,r12d
  40d7b8:	mov    rcx,rax
  40d7bb:	call   0x40f510
  40d7c0:	mov    edi,DWORD PTR [rsp+0xac]
  40d7c7:	mov    DWORD PTR [rsp+0xa8],r13d
  40d7cf:	mov    edx,r13d
  40d7d2:	add    edi,r12d
  40d7d5:	mov    DWORD PTR [rsp+0xac],edi
  40d7dc:	lea    eax,[rdi+rdx*1]
  40d7df:	sub    eax,DWORD PTR [rsp+0x40]
  40d7e3:	mov    ecx,eax
  40d7e5:	mov    DWORD PTR [rsp+0x8c],eax
  40d7ec:	mov    rax,QWORD PTR [rsp+0x190]
  40d7f4:	mov    eax,DWORD PTR [rax+0x8]
  40d7f7:	mov    DWORD PTR [rsp+0x44],eax
  40d7fb:	add    eax,0x1
  40d7fe:	cmp    ecx,eax
  40d800:	jg     0x40e3a5
  40d806:	mov    rax,QWORD PTR [rsp+0x190]
  40d80e:	mov    eax,DWORD PTR [rax+0x4]
  40d811:	cmp    ecx,eax
  40d813:	mov    DWORD PTR [rsp+0x50],eax
  40d817:	jge    0x40e5a3
  40d81d:	sub    edi,eax
  40d81f:	cmp    edi,0x0
  40d822:	jle    0x40da0c
  40d828:	mov    rcx,QWORD PTR [rsp+0xc8]
  40d830:	mov    edx,edi
  40d832:	call   0x4100d0
  40d837:	add    DWORD PTR [rsp+0xa8],edi
  40d83e:	mov    QWORD PTR [rsp+0xc8],rax
  40d846:	mov    eax,DWORD PTR [rsp+0x50]
  40d84a:	mov    DWORD PTR [rsp+0xac],eax
  40d851:	mov    eax,DWORD PTR [rsp+0x84]
  40d858:	test   eax,eax
  40d85a:	je     0x40dad0
  40d860:	mov    eax,DWORD PTR [rsp+0x8c]
  40d867:	add    eax,0x1
  40d86a:	cmp    DWORD PTR [rsp+0x50],eax
  40d86e:	jle    0x40dad0
  40d874:	mov    r8,QWORD PTR [rsp+0xc8]
  40d87c:	mov    rax,QWORD PTR [rsp+0x198]
  40d884:	mov    esi,DWORD PTR [rsp+0x50]
  40d888:	mov    DWORD PTR [rsp+0xa4],0x50
  40d893:	mov    DWORD PTR [r8+0x14],0x0
  40d89b:	mov    DWORD PTR [r8+0x18],0x0
  40d8a3:	mov    DWORD PTR [rax],esi
  40d8a5:	jmp    0x40d35a
  40d8aa:	nop    WORD PTR [rax+rax*1+0x0]
  40d8b0:	mov    eax,ecx
  40d8b2:	mov    ebp,ebx
  40d8b4:	xor    ecx,ecx
  40d8b6:	xor    r13d,r13d
  40d8b9:	xor    r11d,r11d
  40d8bc:	jmp    0x40d296
  40d8c1:	sar    edx,0x4
  40d8c4:	cmp    edx,0xf
  40d8c7:	jle    0x40e993
  40d8cd:	mov    rax,QWORD PTR [rip+0xacfc]        # 0x4185d0
  40d8d4:	mov    ecx,edx
  40d8d6:	xor    r8d,r8d
  40d8d9:	movsd  xmm1,QWORD PTR [rax+0x20]
  40d8de:	xchg   ax,ax
  40d8e0:	mov    eax,DWORD PTR [rsp+0xb4]
  40d8e7:	sub    ecx,0x10
  40d8ea:	mov    r9d,eax
  40d8ed:	and    eax,0x800fffff
  40d8f2:	or     eax,0x3ff00000
  40d8f7:	and    r9d,0x7ff00000
  40d8fe:	mov    DWORD PTR [rsp+0xb4],eax
  40d905:	shr    r9d,0x14
  40d909:	cmp    ecx,0xf
  40d90c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40d915:	lea    r8d,[r8+r9*1-0x3ff]
  40d91d:	mulsd  xmm0,xmm1
  40d921:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40d92a:	jg     0x40d8e0
  40d92c:	and    edx,0xf
  40d92f:	mov    eax,DWORD PTR [rsp+0xb4]
  40d936:	mov    ecx,eax
  40d938:	and    eax,0x800fffff
  40d93d:	or     eax,0x3ff00000
  40d942:	and    ecx,0x7ff00000
  40d948:	shr    ecx,0x14
  40d94b:	mov    DWORD PTR [rsp+0xb4],eax
  40d952:	test   edx,edx
  40d954:	lea    edi,[r8+rcx*1-0x3ff]
  40d95c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40d965:	mov    rax,QWORD PTR [rip+0xac64]        # 0x4185d0
  40d96c:	je     0x40d773
  40d972:	test   dl,0x1
  40d975:	je     0x40d97b
  40d977:	mulsd  xmm0,QWORD PTR [rax]
  40d97b:	add    rax,0x8
  40d97f:	sar    edx,1
  40d981:	jne    0x40d972
  40d983:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40d98c:	jmp    0x40d773
  40d991:	mov    DWORD PTR [rsp+0x44],0x1
  40d999:	lea    rax,[rdi+0x2]
  40d99d:	mov    QWORD PTR [rsp+0xc0],rax
  40d9a5:	movsx  eax,BYTE PTR [rdi+0x2]
  40d9a9:	jmp    0x40d3dd
  40d9ae:	cmp    eax,0x30
  40d9b1:	jne    0x40e9f5
  40d9b7:	add    r8,0x1
  40d9bb:	xor    ecx,ecx
  40d9bd:	nop    DWORD PTR [rax]
  40d9c0:	mov    QWORD PTR [rsp+0xc0],r8
  40d9c8:	movsx  eax,BYTE PTR [r8]
  40d9cc:	add    ecx,0x1
  40d9cf:	add    r8,0x1
  40d9d3:	cmp    eax,0x30
  40d9d6:	je     0x40d9c0
  40d9d8:	lea    r8d,[rax-0x31]
  40d9dc:	cmp    r8d,0x8
  40d9e0:	ja     0x40e655
  40d9e6:	mov    r15,QWORD PTR [rsp+0xc0]
  40d9ee:	lea    r9d,[rax-0x30]
  40d9f2:	lea    r13d,[rcx+0x1]
  40d9f6:	mov    ebp,0x1
  40d9fb:	mov    r8,r15
  40d9fe:	lea    eax,[rsi+rsi*4]
  40da01:	xor    ecx,ecx
  40da03:	lea    esi,[r9+rax*2]
  40da07:	jmp    0x40d6ff
  40da0c:	je     0x40d846
  40da12:	add    edx,edi
  40da14:	test   edx,edx
  40da16:	mov    DWORD PTR [rsp+0xa8],edx
  40da1d:	jle    0x40e9b6
  40da23:	mov    rcx,QWORD PTR [rsp+0xc8]
  40da2b:	neg    edi
  40da2d:	mov    edx,edi
  40da2f:	call   0x40f510
  40da34:	jmp    0x40d846
  40da39:	mov    edx,DWORD PTR [rsp+0x68]
  40da3d:	cmp    edx,0xffffffea
  40da40:	mov    eax,edx
  40da42:	jl     0x40d729
  40da48:	mov    rdx,QWORD PTR [rip+0xac61]        # 0x4186b0
  40da4f:	neg    eax
  40da51:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40da5a:	cdqe   
  40da5c:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  40da61:	lea    rax,[rsp+0xa4]
  40da69:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40da72:	lea    rcx,[rsp+0xb0]
  40da7a:	mov    DWORD PTR [rsp+0x20],0x0
  40da82:	mov    QWORD PTR [rsp+0x30],rax
  40da87:	mov    eax,DWORD PTR [rsp+0x6c]
  40da8b:	mov    DWORD PTR [rsp+0x28],eax
  40da8f:	jmp    0x40d658
  40da94:	mov    DWORD PTR [r8+0x14],0x0
  40da9c:	mov    DWORD PTR [rsp+0xa4],0x50
  40daa7:	call   0x410a70
  40daac:	mov    r8,QWORD PTR [rsp+0xc8]
  40dab4:	mov    DWORD PTR [rax],0x22
  40daba:	jmp    0x40d081
  40dabf:	nop
  40dac0:	mov    QWORD PTR [rsp+0xc0],rdi
  40dac8:	xor    r8d,r8d
  40dacb:	jmp    0x40d2aa
  40dad0:	mov    eax,DWORD PTR [rsp+0x50]
  40dad4:	mov    DWORD PTR [rsp+0x44],0x1
  40dadc:	mov    DWORD PTR [rsp+0x8c],eax
  40dae3:	mov    r8d,ebp
  40dae6:	mov    edx,ebx
  40dae8:	mov    DWORD PTR [rsp+0x20],r14d
  40daed:	mov    r9d,esi
  40daf0:	mov    rcx,r15
  40daf3:	call   0x4105e0
  40daf8:	mov    QWORD PTR [rsp+0x70],rax
  40dafd:	add    rax,0x10
  40db01:	mov    QWORD PTR [rsp+0x78],rax
  40db06:	mov    eax,DWORD PTR [rsp+0x40]
  40db0a:	movsd  xmm8,QWORD PTR [rip+0xa84d]        # 0x418360
  40db13:	movsd  xmm9,QWORD PTR [rip+0xa854]        # 0x418370
  40db1c:	add    eax,0x1
  40db1f:	movapd xmm11,xmm8
  40db24:	mov    DWORD PTR [rsp+0x80],eax
  40db2b:	mov    eax,DWORD PTR [rsp+0x68]
  40db2f:	movsd  xmm10,QWORD PTR [rip+0xa858]        # 0x418390
  40db38:	mov    edx,eax
  40db3a:	neg    edx
  40db3c:	test   eax,eax
  40db3e:	mov    eax,0x0
  40db43:	cmovs  eax,edx
  40db46:	xor    ebp,ebp
  40db48:	mov    DWORD PTR [rsp+0x5c],eax
  40db4c:	jmp    0x40dd90
  40db51:	mov    rcx,rsi
  40db54:	call   0x4100d0
  40db59:	mov    rsi,rax
  40db5c:	test   r15d,r15d
  40db5f:	je     0x40db6f
  40db61:	mov    rcx,rdi
  40db64:	mov    edx,r15d
  40db67:	call   0x40ff60
  40db6c:	mov    rdi,rax
  40db6f:	test   r12d,r12d
  40db72:	jle    0x40db82
  40db74:	mov    rcx,rdi
  40db77:	mov    edx,r12d
  40db7a:	call   0x4100d0
  40db7f:	mov    rdi,rax
  40db82:	test   r14d,r14d
  40db85:	jle    0x40db95
  40db87:	mov    rcx,r13
  40db8a:	mov    edx,r14d
  40db8d:	call   0x4100d0
  40db92:	mov    r13,rax
  40db95:	mov    rdx,rdi
  40db98:	mov    rcx,rsi
  40db9b:	call   0x410240
  40dba0:	cmp    DWORD PTR [rax+0x14],0x1
  40dba4:	mov    rbx,rax
  40dba7:	jle    0x40df40
  40dbad:	mov    ebp,DWORD PTR [rbx+0x10]
  40dbb0:	mov    rdx,r13
  40dbb3:	mov    DWORD PTR [rbx+0x10],0x0
  40dbba:	mov    rcx,rbx
  40dbbd:	call   0x4101f0
  40dbc2:	test   eax,eax
  40dbc4:	jg     0x40ded0
  40dbca:	mov    ecx,DWORD PTR [rsp+0x6c]
  40dbce:	test   ecx,ecx
  40dbd0:	je     0x40ded0
  40dbd6:	mov    eax,ecx
  40dbd8:	and    eax,0x1
  40dbdb:	xor    eax,ebp
  40dbdd:	mov    DWORD PTR [rsp+0x60],eax
  40dbe1:	je     0x40e6eb
  40dbe7:	test   ebp,ebp
  40dbe9:	je     0x40e141
  40dbef:	movsd  xmm6,QWORD PTR [rip+0xa769]        # 0x418360
  40dbf7:	mov    DWORD PTR [rsp+0xa4],0x21
  40dc02:	xor    r12d,r12d
  40dc05:	mov    DWORD PTR [rsp+0x88],0x20
  40dc10:	xor    r14d,r14d
  40dc13:	movapd xmm7,xmm6
  40dc17:	mov    eax,DWORD PTR [rsp+0xa8]
  40dc1e:	mov    edx,DWORD PTR [rsp+0xac]
  40dc25:	mov    r8d,DWORD PTR [rsp+0x44]
  40dc2a:	add    edx,eax
  40dc2c:	test   r8d,r8d
  40dc2f:	mov    DWORD PTR [rsp+0x48],edx
  40dc33:	jne    0x40dc3f
  40dc35:	cmp    DWORD PTR [rsp+0x40],eax
  40dc39:	jg     0x40e2f5
  40dc3f:	lea    rdx,[rsp+0x9c]
  40dc47:	lea    r8,[rsp+0xa0]
  40dc4f:	movapd xmm0,xmm6
  40dc53:	call   0x4104a0
  40dc58:	mov    edx,DWORD PTR [rsp+0x9c]
  40dc5f:	mov    r15,rax
  40dc62:	test   edx,edx
  40dc64:	js     0x40e330
  40dc6a:	je     0x40dc77
  40dc6c:	mov    rcx,rax
  40dc6f:	call   0x4100d0
  40dc74:	mov    r15,rax
  40dc77:	mov    rbp,QWORD PTR [rsp+0xc8]
  40dc7f:	test   r14d,r14d
  40dc82:	mov    rdx,r15
  40dc85:	mov    rcx,rbp
  40dc88:	je     0x40e070
  40dc8e:	call   0x410240
  40dc93:	mov    ecx,DWORD PTR [rsp+0x44]
  40dc97:	mov    QWORD PTR [rsp+0xc8],rax
  40dc9f:	mov    edx,DWORD PTR [rbp+0x14]
  40dca2:	test   ecx,ecx
  40dca4:	jne    0x40e210
  40dcaa:	sub    edx,0x1
  40dcad:	cmp    edx,DWORD PTR [rax+0x14]
  40dcb0:	jge    0x40dccd
  40dcb2:	movsxd rdx,edx
  40dcb5:	add    rdx,0x4
  40dcb9:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  40dcbe:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  40dcc3:	xor    ecx,0x1f
  40dcc6:	xor    edx,0x1f
  40dcc9:	cmp    ecx,edx
  40dccb:	jle    0x40dcf0
  40dccd:	mov    ecx,DWORD PTR [rsp+0x50]
  40dcd1:	cmp    DWORD PTR [rsp+0x8c],ecx
  40dcd8:	jne    0x40e0f0
  40dcde:	sub    DWORD PTR [rsp+0xa8],0x1
  40dce6:	mov    DWORD PTR [rsp+0x44],0x1
  40dcee:	xchg   ax,ax
  40dcf0:	mov    rcx,r15
  40dcf3:	call   0x40fcd0
  40dcf8:	mov    rcx,rbp
  40dcfb:	call   0x40fcd0
  40dd00:	mov    r14d,DWORD PTR [rsp+0x60]
  40dd05:	test   r14d,r14d
  40dd08:	jne    0x40df50
  40dd0e:	test   r12d,r12d
  40dd11:	je     0x40dd58
  40dd13:	mov    eax,DWORD PTR [rsp+0xa8]
  40dd1a:	add    eax,DWORD PTR [rsp+0xac]
  40dd21:	cmp    DWORD PTR [rsp+0x48],eax
  40dd25:	jne    0x40dd58
  40dd27:	mulsd  xmm6,QWORD PTR [rip+0xa659]        # 0x418388
  40dd2f:	movapd xmm0,xmm7
  40dd33:	subsd  xmm0,QWORD PTR [rip+0xa63d]        # 0x418378
  40dd3b:	movapd xmm1,xmm6
  40dd3f:	xorpd  xmm1,xmm10
  40dd44:	ucomisd xmm1,xmm0
  40dd48:	jbe    0x40e2c2
  40dd4e:	ucomisd xmm7,xmm6
  40dd52:	ja     0x40e2e2
  40dd58:	mov    r12d,DWORD PTR [rsp+0x44]
  40dd5d:	test   r12d,r12d
  40dd60:	je     0x40e125
  40dd66:	mov    DWORD PTR [rsp+0x44],0x1
  40dd6e:	xor    ebp,ebp
  40dd70:	mov    rcx,rsi
  40dd73:	call   0x40fcd0
  40dd78:	mov    rcx,rdi
  40dd7b:	call   0x40fcd0
  40dd80:	mov    rcx,r13
  40dd83:	call   0x40fcd0
  40dd88:	mov    rcx,rbx
  40dd8b:	call   0x40fcd0
  40dd90:	mov    rsi,QWORD PTR [rsp+0x70]
  40dd95:	mov    r15d,0x0
  40dd9b:	mov    ecx,DWORD PTR [rsi+0x8]
  40dd9e:	call   0x40fbc0
  40dda3:	lea    rcx,[rax+0x10]
  40dda7:	mov    rdi,rax
  40ddaa:	movsxd rax,DWORD PTR [rsi+0x14]
  40ddae:	mov    rdx,QWORD PTR [rsp+0x78]
  40ddb3:	lea    r8,[rax*4+0x8]
  40ddbb:	call   0x410990
  40ddc0:	mov    rax,QWORD PTR [rsp+0xc8]
  40ddc8:	mov    ecx,DWORD PTR [rax+0x8]
  40ddcb:	call   0x40fbc0
  40ddd0:	mov    rdx,QWORD PTR [rsp+0xc8]
  40ddd8:	lea    rcx,[rax+0x10]
  40dddc:	mov    rsi,rax
  40dddf:	movsxd rax,DWORD PTR [rdx+0x14]
  40dde3:	add    rdx,0x10
  40dde7:	lea    r8,[rax*4+0x8]
  40ddef:	call   0x410990
  40ddf4:	mov    eax,DWORD PTR [rsp+0xa8]
  40ddfb:	mov    ecx,0x1
  40de00:	mov    ebx,DWORD PTR [rsp+0xac]
  40de07:	sub    eax,ebp
  40de09:	add    ebx,ebp
  40de0b:	mov    DWORD PTR [rsp+0x48],eax
  40de0f:	call   0x40fe00
  40de14:	mov    r13,rax
  40de17:	mov    eax,DWORD PTR [rsp+0x68]
  40de1b:	test   eax,eax
  40de1d:	cmovg  r15d,eax
  40de21:	test   ebx,ebx
  40de23:	js     0x40e0e0
  40de29:	mov    eax,DWORD PTR [rsp+0x5c]
  40de2d:	mov    edx,r15d
  40de30:	lea    r14d,[rax+rbx*1]
  40de34:	mov    ecx,DWORD PTR [rsp+0x48]
  40de38:	mov    eax,DWORD PTR [rsp+0x80]
  40de3f:	add    ebx,ecx
  40de41:	sub    ebx,DWORD PTR [rsp+0x40]
  40de45:	sub    eax,ecx
  40de47:	cmp    DWORD PTR [rsp+0x50],ebx
  40de4b:	jle    0x40de53
  40de4d:	sub    ebx,DWORD PTR [rsp+0x50]
  40de51:	add    eax,ebx
  40de53:	lea    ebx,[r14+rax*1]
  40de57:	lea    r12d,[rdx+rax*1]
  40de5b:	cmp    ebx,r12d
  40de5e:	mov    eax,r12d
  40de61:	cmovle eax,ebx
  40de64:	cmp    eax,r14d
  40de67:	cmovg  eax,r14d
  40de6b:	test   eax,eax
  40de6d:	jle    0x40de77
  40de6f:	sub    ebx,eax
  40de71:	sub    r12d,eax
  40de74:	sub    r14d,eax
  40de77:	mov    eax,DWORD PTR [rsp+0x5c]
  40de7b:	test   eax,eax
  40de7d:	je     0x40deac
  40de7f:	mov    rcx,r13
  40de82:	mov    edx,eax
  40de84:	call   0x40ff60
  40de89:	mov    rdx,rsi
  40de8c:	mov    rcx,rax
  40de8f:	mov    r13,rax
  40de92:	call   0x40fe30
  40de97:	mov    rcx,rsi
  40de9a:	mov    QWORD PTR [rsp+0x60],rax
  40de9f:	call   0x40fcd0
  40dea4:	mov    rax,QWORD PTR [rsp+0x60]
  40dea9:	mov    rsi,rax
  40deac:	sub    ebx,ebp
  40deae:	cmp    ebx,0x0
  40deb1:	mov    edx,ebx
  40deb3:	jg     0x40db51
  40deb9:	je     0x40db5c
  40debf:	neg    edx
  40dec1:	mov    rcx,rsi
  40dec4:	call   0x40f510
  40dec9:	jmp    0x40db5c
  40dece:	xchg   ax,ax
  40ded0:	test   eax,eax
  40ded2:	js     0x40e702
  40ded8:	je     0x40e7ce
  40dede:	mov    rdx,r13
  40dee1:	mov    rcx,rbx
  40dee4:	call   0x4106e0
  40dee9:	ucomisd xmm9,xmm0
  40deee:	jb     0x40e220
  40def4:	test   ebp,ebp
  40def6:	jne    0x40e350
  40defc:	mov    DWORD PTR [rsp+0x60],0x0
  40df04:	cmp    DWORD PTR [rsp+0x48],0x1
  40df09:	jg     0x40df19
  40df0b:	mov    r9d,DWORD PTR [rsp+0x44]
  40df10:	test   r9d,r9d
  40df13:	jne    0x40e8da
  40df19:	movapd xmm6,xmm8
  40df1e:	xor    r12d,r12d
  40df21:	mov    DWORD PTR [rsp+0x88],0x10
  40df2c:	movapd xmm7,xmm8
  40df31:	mov    r14d,0x1
  40df37:	jmp    0x40dc17
  40df3c:	nop    DWORD PTR [rax+0x0]
  40df40:	mov    r15d,DWORD PTR [rax+0x18]
  40df44:	test   r15d,r15d
  40df47:	jne    0x40dbad
  40df4d:	nop    DWORD PTR [rax]
  40df50:	mov    ebp,DWORD PTR [rsp+0x44]
  40df54:	test   ebp,ebp
  40df56:	je     0x40e448
  40df5c:	mov    eax,DWORD PTR [rsp+0xac]
  40df63:	mov    ebp,0x1
  40df68:	mov    rdx,QWORD PTR [rsp+0x198]
  40df70:	mov    rcx,rsi
  40df73:	mov    DWORD PTR [rdx],eax
  40df75:	call   0x40fcd0
  40df7a:	mov    rcx,rdi
  40df7d:	call   0x40fcd0
  40df82:	mov    rcx,r13
  40df85:	call   0x40fcd0
  40df8a:	mov    rcx,QWORD PTR [rsp+0x70]
  40df8f:	call   0x40fcd0
  40df94:	mov    rcx,rbx
  40df97:	call   0x40fcd0
  40df9c:	mov    rax,QWORD PTR [rsp+0x190]
  40dfa4:	mov    esi,DWORD PTR [rsp+0xac]
  40dfab:	cmp    DWORD PTR [rax+0x8],esi
  40dfae:	jge    0x40d34a
  40dfb4:	mov    rax,QWORD PTR [rsp+0x190]
  40dfbc:	mov    eax,DWORD PTR [rax+0xc]
  40dfbf:	mov    DWORD PTR [rsp+0x44],eax
  40dfc3:	and    eax,0x3
  40dfc6:	cmp    eax,0x2
  40dfc9:	je     0x40e7bb
  40dfcf:	cmp    eax,0x3
  40dfd2:	je     0x40e7a8
  40dfd8:	cmp    eax,0x1
  40dfdb:	je     0x40e3a7
  40dfe1:	mov    rcx,QWORD PTR [rsp+0xc8]
  40dfe9:	call   0x40fcd0
  40dfee:	mov    rax,QWORD PTR [rsp+0x190]
  40dff6:	mov    rsi,QWORD PTR [rsp+0x198]
  40dffe:	mov    QWORD PTR [rsp+0xc8],0x0
  40e00a:	mov    DWORD PTR [rsp+0xa4],0x11
  40e015:	mov    eax,DWORD PTR [rax+0x8]
  40e018:	mov    DWORD PTR [rsi],eax
  40e01a:	mov    rax,QWORD PTR [rsp+0x190]
  40e022:	mov    rsi,QWORD PTR [rsp+0x1a0]
  40e02a:	mov    ecx,DWORD PTR [rax]
  40e02c:	lea    eax,[rcx+0x1f]
  40e02f:	sar    eax,0x5
  40e032:	cdqe   
  40e034:	lea    rdx,[rsi+rax*4]
  40e038:	mov    rax,rsi
  40e03b:	cmp    rsi,rdx
  40e03e:	jae    0x40e050
  40e040:	add    rax,0x4
  40e044:	mov    DWORD PTR [rax-0x4],0xffffffff
  40e04b:	cmp    rdx,rax
  40e04e:	ja     0x40e040
  40e050:	and    ecx,0x1f
  40e053:	je     0x40e061
  40e055:	mov    eax,0x20
  40e05a:	sub    eax,ecx
  40e05c:	mov    ecx,eax
  40e05e:	shr    DWORD PTR [rdx-0x4],cl
  40e061:	xor    r8d,r8d
  40e064:	jmp    0x40d352
  40e069:	nop    DWORD PTR [rax+0x0]
  40e070:	call   0x40eae0
  40e075:	mov    edx,DWORD PTR [rax+0x14]
  40e078:	mov    QWORD PTR [rsp+0xc8],rax
  40e080:	sub    edx,0x1
  40e083:	cmp    edx,DWORD PTR [rbp+0x14]
  40e086:	jge    0x40e0a7
  40e088:	movsxd rdx,edx
  40e08b:	add    rdx,0x4
  40e08f:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  40e094:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  40e099:	xor    ecx,0x1f
  40e09c:	xor    edx,0x1f
  40e09f:	cmp    ecx,edx
  40e0a1:	jge    0x40dcf0
  40e0a7:	mov    edx,DWORD PTR [rsp+0x44]
  40e0ab:	test   edx,edx
  40e0ad:	je     0x40e380
  40e0b3:	mov    eax,DWORD PTR [rsp+0xa8]
  40e0ba:	add    eax,0x1
  40e0bd:	cmp    DWORD PTR [rsp+0x40],eax
  40e0c1:	mov    DWORD PTR [rsp+0xa8],eax
  40e0c8:	setne  al
  40e0cb:	movzx  eax,al
  40e0ce:	mov    DWORD PTR [rsp+0x44],eax
  40e0d2:	jmp    0x40dcf0
  40e0d7:	nop    WORD PTR [rax+rax*1+0x0]
  40e0e0:	mov    edx,r15d
  40e0e3:	mov    r14d,DWORD PTR [rsp+0x5c]
  40e0e8:	sub    edx,ebx
  40e0ea:	jmp    0x40de34
  40e0ef:	nop
  40e0f0:	mov    edx,0x1
  40e0f5:	mov    rcx,rax
  40e0f8:	call   0x4100d0
  40e0fd:	mov    rcx,r15
  40e100:	mov    QWORD PTR [rsp+0xc8],rax
  40e108:	sub    DWORD PTR [rsp+0xac],0x1
  40e110:	sub    DWORD PTR [rsp+0x8c],0x1
  40e118:	call   0x40fcd0
  40e11d:	mov    rcx,rbp
  40e120:	call   0x40fcd0
  40e125:	mov    rcx,QWORD PTR [rsp+0xc8]
  40e12d:	call   0x40f610
  40e132:	mov    DWORD PTR [rsp+0x44],0x0
  40e13a:	mov    ebp,eax
  40e13c:	jmp    0x40dd70
  40e141:	mov    edx,DWORD PTR [rsp+0x50]
  40e145:	cmp    DWORD PTR [rsp+0x8c],edx
  40e14c:	mov    DWORD PTR [rsp+0xa4],0x11
  40e157:	je     0x40df04
  40e15d:	xor    ecx,ecx
  40e15f:	cmp    DWORD PTR [rsp+0x40],0x1f
  40e164:	mov    r9,QWORD PTR [rsp+0xc8]
  40e16c:	mov    eax,DWORD PTR [rsp+0x40]
  40e170:	jle    0x40e1ac
  40e172:	mov    r14d,DWORD PTR [r9+0x18]
  40e176:	test   r14d,r14d
  40e179:	jne    0x40df04
  40e17f:	lea    rdx,[r9+0x1c]
  40e183:	mov    eax,DWORD PTR [rsp+0x40]
  40e187:	xor    ecx,ecx
  40e189:	jmp    0x40e1a1
  40e18b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e190:	add    rdx,0x4
  40e194:	mov    r12d,DWORD PTR [rdx-0x4]
  40e198:	test   r12d,r12d
  40e19b:	jne    0x40df04
  40e1a1:	sub    eax,0x20
  40e1a4:	add    ecx,0x1
  40e1a7:	cmp    eax,0x1f
  40e1aa:	jg     0x40e190
  40e1ac:	cmp    eax,0x1
  40e1af:	jle    0x40e1d3
  40e1b1:	movsxd rcx,ecx
  40e1b4:	sub    eax,0x1
  40e1b7:	lea    r8,[r9+rcx*4]
  40e1bb:	xor    ecx,ecx
  40e1bd:	mov    edx,DWORD PTR [r8+0x18]
  40e1c1:	tzcnt  ecx,edx
  40e1c5:	shr    edx,cl
  40e1c7:	cmp    eax,ecx
  40e1c9:	mov    DWORD PTR [r8+0x18],edx
  40e1cd:	jg     0x40df04
  40e1d3:	mov    eax,DWORD PTR [rsp+0x8c]
  40e1da:	mov    rcx,r9
  40e1dd:	sub    eax,0x1
  40e1e0:	mov    DWORD PTR [rsp+0xac],eax
  40e1e7:	mov    eax,DWORD PTR [rsp+0x40]
  40e1eb:	mov    edx,eax
  40e1ed:	mov    DWORD PTR [rsp+0xa8],eax
  40e1f4:	call   0x40cee0
  40e1f9:	mov    QWORD PTR [rsp+0xc8],rax
  40e201:	jmp    0x40df50
  40e206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e210:	mov    DWORD PTR [rsp+0x44],0x1
  40e218:	jmp    0x40dcf0
  40e21d:	nop    DWORD PTR [rax]
  40e220:	movapd xmm7,xmm0
  40e224:	cmp    ebp,0x1
  40e227:	movsd  xmm1,QWORD PTR [rip+0xa149]        # 0x418378
  40e22f:	sbb    eax,eax
  40e231:	and    eax,0x10
  40e234:	movsd  xmm0,QWORD PTR [rip+0xa144]        # 0x418380
  40e23c:	mulsd  xmm7,xmm1
  40e240:	add    eax,0x10
  40e243:	xor    r14d,r14d
  40e246:	cmp    ebp,0x1
  40e249:	mov    DWORD PTR [rsp+0x88],eax
  40e250:	setb   r14b
  40e254:	ucomisd xmm0,xmm7
  40e258:	jbe    0x40e340
  40e25e:	cvttsd2si r12d,xmm7
  40e263:	pxor   xmm6,xmm6
  40e267:	mov    eax,DWORD PTR [rsp+0x6c]
  40e26b:	cmp    eax,0x1
  40e26e:	cvtsi2sd xmm6,r12d
  40e273:	subsd  xmm7,xmm6
  40e277:	je     0x40e595
  40e27d:	cmp    eax,0x2
  40e280:	jne    0x40e439
  40e286:	test   r14d,r14d
  40e289:	jne    0x40e2b5
  40e28b:	ucomisd xmm7,QWORD PTR [rip+0xa0d5]        # 0x418368
  40e293:	jbe    0x40e2b5
  40e295:	pxor   xmm6,xmm6
  40e299:	add    r12d,0x1
  40e29d:	mov    eax,0x30
  40e2a2:	sub    eax,DWORD PTR [rsp+0x88]
  40e2a9:	cvtsi2sd xmm6,r12d
  40e2ae:	mov    DWORD PTR [rsp+0x88],eax
  40e2b5:	mov    DWORD PTR [rsp+0x60],0x0
  40e2bd:	jmp    0x40dc17
  40e2c2:	ucomisd xmm0,xmm6
  40e2c6:	jbe    0x40dd58
  40e2cc:	movsd  xmm0,QWORD PTR [rip+0xa08c]        # 0x418360
  40e2d4:	subsd  xmm0,xmm6
  40e2d8:	ucomisd xmm0,xmm7
  40e2dc:	jbe    0x40dd58
  40e2e2:	mov    eax,DWORD PTR [rsp+0x88]
  40e2e9:	or     DWORD PTR [rsp+0xa4],eax
  40e2f0:	jmp    0x40df50
  40e2f5:	mov    r15d,DWORD PTR [rsp+0x40]
  40e2fa:	mov    rcx,QWORD PTR [rsp+0xc8]
  40e302:	mov    ebp,r15d
  40e305:	sub    ebp,eax
  40e307:	mov    edx,ebp
  40e309:	call   0x4100d0
  40e30e:	sub    DWORD PTR [rsp+0xac],ebp
  40e315:	mov    QWORD PTR [rsp+0xc8],rax
  40e31d:	mov    DWORD PTR [rsp+0xa8],r15d
  40e325:	jmp    0x40dc3f
  40e32a:	nop    WORD PTR [rax+rax*1+0x0]
  40e330:	neg    edx
  40e332:	mov    rcx,rax
  40e335:	call   0x40f510
  40e33a:	jmp    0x40dc77
  40e33f:	nop
  40e340:	movapd xmm6,xmm7
  40e344:	xor    r12d,r12d
  40e347:	jmp    0x40e2b5
  40e34c:	nop    DWORD PTR [rax+0x0]
  40e350:	movapd xmm6,xmm11
  40e355:	xor    r12d,r12d
  40e358:	movapd xmm7,xmm11
  40e35d:	mov    DWORD PTR [rsp+0x88],0x20
  40e368:	mov    DWORD PTR [rsp+0x60],0x0
  40e370:	xor    r14d,r14d
  40e373:	jmp    0x40dc17
  40e378:	nop    DWORD PTR [rax+rax*1+0x0]
  40e380:	mov    edx,0x1
  40e385:	mov    rcx,rax
  40e388:	xor    r12d,r12d
  40e38b:	call   0x40f510
  40e390:	add    DWORD PTR [rsp+0xac],0x1
  40e398:	add    DWORD PTR [rsp+0x8c],0x1
  40e3a0:	jmp    0x40dcf0
  40e3a5:	xor    ebp,ebp
  40e3a7:	mov    rax,QWORD PTR [rsp+0xc8]
  40e3af:	mov    DWORD PTR [rsp+0xa4],0xa3
  40e3ba:	mov    DWORD PTR [rax+0x14],0x0
  40e3c1:	call   0x410a70
  40e3c6:	mov    DWORD PTR [rax],0x22
  40e3cc:	mov    rax,QWORD PTR [rsp+0x190]
  40e3d4:	mov    eax,DWORD PTR [rax+0x8]
  40e3d7:	add    eax,0x1
  40e3da:	jmp    0x40d340
  40e3df:	mov    eax,DWORD PTR [rsp+0x58]
  40e3e3:	mov    r8,QWORD PTR [rsp+0x198]
  40e3eb:	lea    rcx,[rsp+0xc0]
  40e3f3:	mov    rdx,QWORD PTR [rsp+0x190]
  40e3fb:	lea    r9,[rsp+0xc8]
  40e403:	mov    DWORD PTR [rsp+0x20],eax
  40e407:	call   0x40ec40
  40e40c:	cmp    eax,0x6
  40e40f:	mov    DWORD PTR [rsp+0xa4],eax
  40e416:	mov    r8,QWORD PTR [rsp+0xc8]
  40e41e:	jne    0x40d081
  40e424:	mov    QWORD PTR [rsp+0xc0],rdi
  40e42c:	mov    DWORD PTR [rsp+0x58],0x0
  40e434:	jmp    0x40d081
  40e439:	ucomisd xmm7,xmm1
  40e43d:	jae    0x40e295
  40e443:	jmp    0x40e2b5
  40e448:	mov    eax,DWORD PTR [rsp+0xa8]
  40e44f:	mov    ebp,DWORD PTR [rsp+0x40]
  40e453:	sub    ebp,eax
  40e455:	cmp    ebp,0x0
  40e458:	jne    0x40e621
  40e45e:	mov    eax,DWORD PTR [rsp+0xac]
  40e465:	jmp    0x40df68
  40e46a:	je     0x40d768
  40e470:	neg    edx
  40e472:	mov    eax,edx
  40e474:	and    eax,0xf
  40e477:	je     0x40e499
  40e479:	mov    rcx,QWORD PTR [rip+0xa230]        # 0x4186b0
  40e480:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40e489:	cdqe   
  40e48b:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  40e490:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40e499:	and    edx,0xfffffff0
  40e49c:	je     0x40d768
  40e4a2:	mov    eax,edx
  40e4a4:	sar    eax,0x4
  40e4a7:	cmp    eax,0xf
  40e4aa:	jle    0x40ea78
  40e4b0:	mov    rdx,QWORD PTR [rip+0xa209]        # 0x4186c0
  40e4b7:	mov    ecx,eax
  40e4b9:	xor    r8d,r8d
  40e4bc:	movsd  xmm1,QWORD PTR [rdx+0x20]
  40e4c1:	mov    edx,DWORD PTR [rsp+0xb4]
  40e4c8:	sub    ecx,0x10
  40e4cb:	mov    r9d,edx
  40e4ce:	and    edx,0x800fffff
  40e4d4:	or     edx,0x3ff00000
  40e4da:	and    r9d,0x7ff00000
  40e4e1:	mov    DWORD PTR [rsp+0xb4],edx
  40e4e8:	shr    r9d,0x14
  40e4ec:	cmp    ecx,0xf
  40e4ef:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40e4f8:	lea    r8d,[r8+r9*1-0x3ff]
  40e500:	mulsd  xmm0,xmm1
  40e504:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40e50d:	jg     0x40e4c1
  40e50f:	and    eax,0xf
  40e512:	mov    edx,DWORD PTR [rsp+0xb4]
  40e519:	mov    ecx,edx
  40e51b:	and    edx,0x800fffff
  40e521:	and    ecx,0x7ff00000
  40e527:	or     edx,0x3ff00000
  40e52d:	shr    ecx,0x14
  40e530:	mov    DWORD PTR [rsp+0xb4],edx
  40e537:	test   eax,eax
  40e539:	lea    edi,[r8+rcx*1-0x3ff]
  40e541:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40e54a:	jle    0x40d773
  40e550:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  40e559:	mov    rdx,QWORD PTR [rip+0xa160]        # 0x4186c0
  40e560:	movapd xmm0,xmm1
  40e564:	test   al,0x1
  40e566:	je     0x40e570
  40e568:	mulsd  xmm1,QWORD PTR [rdx]
  40e56c:	movapd xmm0,xmm1
  40e570:	sar    eax,1
  40e572:	add    rdx,0x8
  40e576:	test   eax,eax
  40e578:	jg     0x40e564
  40e57a:	movsd  QWORD PTR [rsp+0xb0],xmm1
  40e583:	jmp    0x40d773
  40e588:	mov    DWORD PTR [rsp+0x44],0x0
  40e590:	jmp    0x40d999
  40e595:	test   r14d,r14d
  40e598:	je     0x40e2b5
  40e59e:	jmp    0x40e28b
  40e5a3:	mov    DWORD PTR [rsp+0x44],0x0
  40e5ab:	jmp    0x40dae3
  40e5b0:	lea    rax,[rsp+0xa4]
  40e5b8:	lea    rcx,[rsp+0xb0]
  40e5c0:	mov    DWORD PTR [rsp+0x20],0x1
  40e5c8:	mov    QWORD PTR [rsp+0x30],rax
  40e5cd:	mov    eax,DWORD PTR [rsp+0x6c]
  40e5d1:	mov    DWORD PTR [rsp+0x28],eax
  40e5d5:	jmp    0x40d658
  40e5da:	mov    ecx,DWORD PTR [rsp+0x68]
  40e5de:	mov    edx,0x25
  40e5e3:	sub    edx,ebp
  40e5e5:	cmp    ecx,edx
  40e5e7:	mov    eax,ecx
  40e5e9:	jg     0x40d729
  40e5ef:	mov    rdx,QWORD PTR [rip+0xa0ba]        # 0x4186b0
  40e5f6:	mov    eax,0xf
  40e5fb:	sub    eax,ebp
  40e5fd:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40e606:	movsxd rcx,eax
  40e609:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  40e60e:	mov    ecx,DWORD PTR [rsp+0x68]
  40e612:	sub    ecx,eax
  40e614:	movsxd rax,ecx
  40e617:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  40e61c:	jmp    0x40da61
  40e621:	mov    edx,ebp
  40e623:	jle    0x40e97f
  40e629:	mov    rcx,QWORD PTR [rsp+0xc8]
  40e631:	call   0x4100d0
  40e636:	mov    QWORD PTR [rsp+0xc8],rax
  40e63e:	mov    eax,DWORD PTR [rsp+0xac]
  40e645:	sub    eax,ebp
  40e647:	xor    ebp,ebp
  40e649:	mov    DWORD PTR [rsp+0xac],eax
  40e650:	jmp    0x40df68
  40e655:	xor    ebp,ebp
  40e657:	xor    r13d,r13d
  40e65a:	jmp    0x40d71a
  40e65f:	mov    r9d,0x4e1f
  40e665:	jmp    0x40d4b4
  40e66a:	lea    rbx,[rsp+0xc0]
  40e672:	lea    rdx,[rip+0x9b87]        # 0x418200
  40e679:	mov    rcx,rbx
  40e67c:	call   0x4107a0
  40e681:	test   eax,eax
  40e683:	je     0x40d4d3
  40e689:	lea    rdx,[rip+0x9b73]        # 0x418203
  40e690:	mov    rcx,rbx
  40e693:	sub    QWORD PTR [rsp+0xc0],0x1
  40e69c:	call   0x4107a0
  40e6a1:	test   eax,eax
  40e6a3:	jne    0x40e6ae
  40e6a5:	add    QWORD PTR [rsp+0xc0],0x1
  40e6ae:	mov    rax,QWORD PTR [rsp+0x190]
  40e6b6:	mov    DWORD PTR [rsp+0xa4],0x3
  40e6c1:	xor    ebp,ebp
  40e6c3:	mov    eax,DWORD PTR [rax+0x8]
  40e6c6:	add    eax,0x1
  40e6c9:	jmp    0x40d340
  40e6ce:	mov    edx,DWORD PTR [rsp+0xb4]
  40e6d5:	mov    eax,0x15
  40e6da:	or     edx,0x100000
  40e6e0:	tzcnt  edx,edx
  40e6e4:	sub    eax,edx
  40e6e6:	jmp    0x40d60d
  40e6eb:	cmp    ebp,0x1
  40e6ee:	sbb    eax,eax
  40e6f0:	and    eax,0x10
  40e6f3:	add    eax,0x11
  40e6f6:	mov    DWORD PTR [rsp+0xa4],eax
  40e6fd:	jmp    0x40df50
  40e702:	cmp    ebp,0x1
  40e705:	sbb    eax,eax
  40e707:	and    eax,0x10
  40e70a:	add    eax,0x11
  40e70d:	test   ebp,ebp
  40e70f:	mov    DWORD PTR [rsp+0xa4],eax
  40e716:	jne    0x40df50
  40e71c:	cmp    DWORD PTR [rsp+0x48],0x1
  40e721:	jg     0x40df50
  40e727:	mov    ebp,DWORD PTR [rsp+0x44]
  40e72b:	test   ebp,ebp
  40e72d:	jne    0x40df50
  40e733:	mov    edx,DWORD PTR [rsp+0x8c]
  40e73a:	cmp    DWORD PTR [rsp+0x50],edx
  40e73e:	je     0x40df50
  40e744:	mov    rcx,rbx
  40e747:	mov    edx,0x1
  40e74c:	call   0x4100d0
  40e751:	mov    rdx,r13
  40e754:	mov    rcx,rax
  40e757:	mov    rbx,rax
  40e75a:	call   0x4101f0
  40e75f:	test   eax,eax
  40e761:	jle    0x40e448
  40e767:	mov    DWORD PTR [rsp+0xa4],0x11
  40e772:	mov    DWORD PTR [rsp+0x44],0x0
  40e77a:	mov    eax,DWORD PTR [rsp+0x40]
  40e77e:	mov    rcx,QWORD PTR [rsp+0xc8]
  40e786:	sub    DWORD PTR [rsp+0xac],eax
  40e78d:	mov    edx,eax
  40e78f:	mov    DWORD PTR [rsp+0xa8],eax
  40e796:	call   0x40cee0
  40e79b:	mov    QWORD PTR [rsp+0xc8],rax
  40e7a3:	jmp    0x40df50
  40e7a8:	mov    r10d,DWORD PTR [rsp+0x58]
  40e7ad:	test   r10d,r10d
  40e7b0:	jne    0x40e3a7
  40e7b6:	jmp    0x40dfe1
  40e7bb:	mov    r11d,DWORD PTR [rsp+0x58]
  40e7c0:	test   r11d,r11d
  40e7c3:	je     0x40e3a7
  40e7c9:	jmp    0x40dfe1
  40e7ce:	test   ebp,ebp
  40e7d0:	je     0x40e917
  40e7d6:	mov    r11d,DWORD PTR [rsp+0x44]
  40e7db:	test   r11d,r11d
  40e7de:	je     0x40e9e5
  40e7e4:	mov    ecx,DWORD PTR [rsp+0xa8]
  40e7eb:	mov    r8,QWORD PTR [rsp+0xc8]
  40e7f3:	mov    edx,ecx
  40e7f5:	lea    rax,[r8+0x18]
  40e7f9:	sar    edx,0x5
  40e7fc:	movsxd rdx,edx
  40e7ff:	lea    rdx,[rax+rdx*4]
  40e803:	cmp    rax,rdx
  40e806:	jae    0x40e833
  40e808:	cmp    DWORD PTR [r8+0x18],0xffffffff
  40e80d:	lea    rax,[r8+0x1c]
  40e811:	je     0x40e82e
  40e813:	jmp    0x40e9e5
  40e818:	nop    DWORD PTR [rax+rax*1+0x0]
  40e820:	add    rax,0x4
  40e824:	cmp    DWORD PTR [rax-0x4],0xffffffff
  40e828:	jne    0x40e9e5
  40e82e:	cmp    rdx,rax
  40e831:	ja     0x40e820
  40e833:	and    ecx,0x1f
  40e836:	je     0x40e84a
  40e838:	or     edx,0xffffffff
  40e83b:	shl    edx,cl
  40e83d:	or     edx,DWORD PTR [rax]
  40e83f:	mov    eax,edx
  40e841:	add    eax,0x1
  40e844:	jne    0x40e9e5
  40e84a:	mov    eax,DWORD PTR [rsp+0x40]
  40e84e:	mov    edx,DWORD PTR [rsp+0x50]
  40e852:	mov    DWORD PTR [r8+0x14],0x1
  40e85a:	mov    DWORD PTR [r8+0x18],0x1
  40e862:	mov    DWORD PTR [rsp+0xa8],0x1
  40e86d:	mov    DWORD PTR [rsp+0xa4],0x21
  40e878:	lea    eax,[rax+rdx*1-0x1]
  40e87c:	mov    DWORD PTR [rsp+0xac],eax
  40e883:	mov    eax,0x1
  40e888:	jmp    0x40e44f
  40e88d:	add    r13d,eax
  40e890:	cmp    eax,0x1
  40e893:	je     0x40e8bc
  40e895:	add    ecx,ebp
  40e897:	mov    r10d,ecx
  40e89a:	jmp    0x40e8a5
  40e89c:	lea    esi,[rsi+rsi*4]
  40e89f:	add    esi,esi
  40e8a1:	cmp    ebp,ecx
  40e8a3:	je     0x40e8bf
  40e8a5:	add    ebp,0x1
  40e8a8:	lea    eax,[rbp-0x1]
  40e8ab:	cmp    eax,0x8
  40e8ae:	jle    0x40e89c
  40e8b0:	cmp    ebp,0x10
  40e8b3:	jg     0x40e8a1
  40e8b5:	lea    edx,[rdx+rdx*4]
  40e8b8:	add    edx,edx
  40e8ba:	jmp    0x40e8a1
  40e8bc:	mov    r10d,ebp
  40e8bf:	cmp    r10d,0x8
  40e8c3:	lea    ebp,[r10+0x1]
  40e8c7:	jg     0x40e99b
  40e8cd:	mov    r8,QWORD PTR [rsp+0xc0]
  40e8d5:	jmp    0x40d9fe
  40e8da:	mov    r9,QWORD PTR [rsp+0xc8]
  40e8e2:	mov    DWORD PTR [rsp+0x44],0x1
  40e8ea:	mov    eax,DWORD PTR [rsp+0x50]
  40e8ee:	mov    DWORD PTR [r9+0x14],0x0
  40e8f6:	mov    DWORD PTR [rsp+0xa4],0x50
  40e901:	mov    DWORD PTR [rsp+0xac],eax
  40e908:	jmp    0x40df50
  40e90d:	mov    eax,0x1
  40e912:	jmp    0x40d6bd
  40e917:	cmp    DWORD PTR [rsp+0x48],0x1
  40e91c:	je     0x40e9fc
  40e922:	mov    DWORD PTR [rsp+0xa4],0x21
  40e92d:	mov    r10d,DWORD PTR [rsp+0x44]
  40e932:	test   r10d,r10d
  40e935:	jne    0x40e945
  40e937:	mov    edx,DWORD PTR [rsp+0x40]
  40e93b:	cmp    DWORD PTR [rsp+0x48],edx
  40e93f:	jl     0x40e448
  40e945:	mov    r9,QWORD PTR [rsp+0xc8]
  40e94d:	mov    eax,DWORD PTR [r9+0x18]
  40e951:	test   al,0x1
  40e953:	je     0x40df50
  40e959:	test   ebp,ebp
  40e95b:	jne    0x40ea80
  40e961:	cmp    DWORD PTR [rsp+0x48],0x1
  40e966:	je     0x40e8ea
  40e968:	sub    eax,0x1
  40e96b:	mov    DWORD PTR [rsp+0xa4],0x11
  40e976:	mov    DWORD PTR [r9+0x18],eax
  40e97a:	jmp    0x40df50
  40e97f:	mov    rcx,QWORD PTR [rsp+0xc8]
  40e987:	neg    edx
  40e989:	call   0x40f510
  40e98e:	jmp    0x40e63e
  40e993:	xor    r8d,r8d
  40e996:	jmp    0x40d92f
  40e99b:	cmp    ebp,0x10
  40e99e:	jg     0x40e9a7
  40e9a0:	lea    eax,[rdx+rdx*4]
  40e9a3:	lea    edx,[r8+rax*2]
  40e9a7:	mov    r8,QWORD PTR [rsp+0xc0]
  40e9af:	xor    ecx,ecx
  40e9b1:	jmp    0x40d6ff
  40e9b6:	cmp    edx,0xffffffff
  40e9b9:	jl     0x40d874
  40e9bf:	mov    rax,QWORD PTR [rsp+0xc8]
  40e9c7:	mov    DWORD PTR [rsp+0xa8],0x1
  40e9d2:	mov    DWORD PTR [rax+0x14],0x1
  40e9d9:	mov    DWORD PTR [rax+0x18],0x1
  40e9e0:	jmp    0x40d846
  40e9e5:	mov    DWORD PTR [rsp+0xa4],0x11
  40e9f0:	jmp    0x40e92d
  40e9f5:	xor    ecx,ecx
  40e9f7:	jmp    0x40d9d8
  40e9fc:	mov    edx,DWORD PTR [rsp+0x8c]
  40ea03:	cmp    DWORD PTR [rsp+0x50],edx
  40ea07:	jne    0x40eacd
  40ea0d:	mov    rax,QWORD PTR [rsp+0xc8]
  40ea15:	mov    DWORD PTR [rsp+0xa4],0x21
  40ea20:	cmp    DWORD PTR [rax+0x14],0x1
  40ea24:	jne    0x40df50
  40ea2a:	cmp    DWORD PTR [rax+0x18],0x1
  40ea2e:	mov    eax,DWORD PTR [rsp+0x48]
  40ea32:	cmovne eax,DWORD PTR [rsp+0x84]
  40ea3a:	mov    DWORD PTR [rsp+0x84],eax
  40ea41:	jmp    0x40df50
  40ea46:	mov    r8,QWORD PTR [rsp+0x1a0]
  40ea4e:	mov    rdx,QWORD PTR [rsp+0x190]
  40ea56:	mov    rcx,rbx
  40ea59:	call   0x40f6e0
  40ea5e:	mov    DWORD PTR [rsp+0xa4],eax
  40ea65:	mov    rax,QWORD PTR [rsp+0x190]
  40ea6d:	mov    eax,DWORD PTR [rax+0x8]
  40ea70:	add    eax,0x1
  40ea73:	jmp    0x40d340
  40ea78:	xor    r8d,r8d
  40ea7b:	jmp    0x40e512
  40ea80:	mov    rcx,r9
  40ea83:	call   0x40ca30
  40ea88:	mov    edx,DWORD PTR [rax+0x14]
  40ea8b:	mov    ecx,DWORD PTR [rsp+0xa8]
  40ea92:	mov    QWORD PTR [rsp+0xc8],rax
  40ea9a:	sub    edx,0x1
  40ea9d:	movsxd rdx,edx
  40eaa0:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  40eaa5:	mov    eax,ecx
  40eaa7:	neg    eax
  40eaa9:	and    eax,0x1f
  40eaac:	xor    edx,0x1f
  40eaaf:	cmp    edx,eax
  40eab1:	je     0x40eabd
  40eab3:	add    ecx,0x1
  40eab6:	mov    DWORD PTR [rsp+0xa8],ecx
  40eabd:	mov    DWORD PTR [rsp+0xa4],0x21
  40eac8:	jmp    0x40df50
  40eacd:	mov    DWORD PTR [rsp+0xa4],0x1
  40ead8:	jmp    0x40e77a
  40eadd:	nop
  40eade:	nop
  40eadf:	nop
  40eae0:	push   r13
  40eae2:	push   r12
  40eae4:	push   rbp
  40eae5:	push   rdi
  40eae6:	push   rsi
  40eae7:	push   rbx
  40eae8:	sub    rsp,0x28
  40eaec:	mov    eax,DWORD PTR [rdx+0x14]
  40eaef:	cmp    DWORD PTR [rcx+0x14],eax
  40eaf2:	mov    rsi,rcx
  40eaf5:	mov    rdi,rdx
  40eaf8:	jge    0x40eb00
  40eafa:	mov    rsi,rdx
  40eafd:	mov    rdi,rcx
  40eb00:	mov    ecx,DWORD PTR [rsi+0x8]
  40eb03:	xor    r12d,r12d
  40eb06:	call   0x40fbc0
  40eb0b:	movsxd rcx,DWORD PTR [rsi+0x14]
  40eb0f:	mov    rbx,rax
  40eb12:	lea    r11,[rdi+0x18]
  40eb16:	lea    r8,[rbx+0x18]
  40eb1a:	mov    DWORD PTR [rax+0x14],ecx
  40eb1d:	movsxd rdx,DWORD PTR [rdi+0x14]
  40eb21:	lea    rax,[rsi+0x18]
  40eb25:	lea    rdi,[r8+rdx*4]
  40eb29:	mov    rbp,rdx
  40eb2c:	nop    DWORD PTR [rax+0x0]
  40eb30:	mov    r10d,DWORD PTR [rax]
  40eb33:	mov    r9d,DWORD PTR [r11]
  40eb36:	add    r8,0x4
  40eb3a:	add    rax,0x4
  40eb3e:	add    r11,0x4
  40eb42:	movzx  r13d,r9w
  40eb46:	movzx  edx,r10w
  40eb4a:	shr    r9d,0x10
  40eb4e:	add    edx,r13d
  40eb51:	shr    r10d,0x10
  40eb55:	add    edx,r12d
  40eb58:	add    r10d,r9d
  40eb5b:	mov    r9d,edx
  40eb5e:	mov    WORD PTR [r8-0x4],dx
  40eb63:	and    r9d,0x10000
  40eb6a:	shr    r9d,0x10
  40eb6e:	add    r9d,r10d
  40eb71:	mov    r12d,r9d
  40eb74:	mov    WORD PTR [r8-0x2],r9w
  40eb79:	and    r12d,0x10000
  40eb80:	shr    r12d,0x10
  40eb84:	cmp    rdi,r8
  40eb87:	ja     0x40eb30
  40eb89:	mov    edx,DWORD PTR [rsi+0x14]
  40eb8c:	sub    edx,ebp
  40eb8e:	movsxd rdx,edx
  40eb91:	lea    r11,[rdi+rdx*4]
  40eb95:	cmp    r11,r8
  40eb98:	jbe    0x40ebdb
  40eb9a:	nop    WORD PTR [rax+rax*1+0x0]
  40eba0:	mov    r9d,DWORD PTR [rax]
  40eba3:	add    r8,0x4
  40eba7:	add    rax,0x4
  40ebab:	movzx  r10d,r9w
  40ebaf:	shr    r9d,0x10
  40ebb3:	add    r10d,r12d
  40ebb6:	mov    edx,r10d
  40ebb9:	mov    WORD PTR [r8-0x4],r10w
  40ebbe:	and    edx,0x10000
  40ebc4:	shr    edx,0x10
  40ebc7:	add    edx,r9d
  40ebca:	mov    WORD PTR [r8-0x2],dx
  40ebcf:	mov    r12d,edx
  40ebd2:	shr    r12d,0x10
  40ebd6:	cmp    r11,r8
  40ebd9:	ja     0x40eba0
  40ebdb:	test   r12d,r12d
  40ebde:	je     0x40ebf3
  40ebe0:	cmp    ecx,DWORD PTR [rbx+0xc]
  40ebe3:	je     0x40ec03
  40ebe5:	lea    eax,[rcx+0x1]
  40ebe8:	mov    DWORD PTR [rbx+0x14],eax
  40ebeb:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  40ebf3:	mov    rax,rbx
  40ebf6:	add    rsp,0x28
  40ebfa:	pop    rbx
  40ebfb:	pop    rsi
  40ebfc:	pop    rdi
  40ebfd:	pop    rbp
  40ebfe:	pop    r12
  40ec00:	pop    r13
  40ec02:	ret    
  40ec03:	mov    eax,DWORD PTR [rbx+0x8]
  40ec06:	lea    ecx,[rax+0x1]
  40ec09:	call   0x40fbc0
  40ec0e:	mov    rsi,rax
  40ec11:	lea    rcx,[rax+0x10]
  40ec15:	movsxd rax,DWORD PTR [rbx+0x14]
  40ec19:	lea    rdx,[rbx+0x10]
  40ec1d:	lea    r8,[rax*4+0x8]
  40ec25:	call   0x410990
  40ec2a:	mov    rcx,rbx
  40ec2d:	mov    rbx,rsi
  40ec30:	call   0x40fcd0
  40ec35:	movsxd rcx,DWORD PTR [rsi+0x14]
  40ec39:	jmp    0x40ebe5
  40ec3b:	nop
  40ec3c:	nop
  40ec3d:	nop
  40ec3e:	nop
  40ec3f:	nop
  40ec40:	push   r15
  40ec42:	push   r14
  40ec44:	push   r13
  40ec46:	push   r12
  40ec48:	push   rbp
  40ec49:	push   rdi
  40ec4a:	push   rsi
  40ec4b:	push   rbx
  40ec4c:	sub    rsp,0x28
  40ec50:	mov    r14,rcx
  40ec53:	mov    r13,rdx
  40ec56:	mov    QWORD PTR [rsp+0x80],r8
  40ec5e:	mov    QWORD PTR [rsp+0x88],r9
  40ec66:	call   0x4109a0
  40ec6b:	mov    rdi,QWORD PTR [rip+0x997e]        # 0x4185f0
  40ec72:	mov    rsi,QWORD PTR [rax]
  40ec75:	cmp    BYTE PTR [rdi+0x30],0x0
  40ec79:	je     0x40f0a0
  40ec7f:	mov    rax,QWORD PTR [rsp+0x88]
  40ec87:	xor    r8d,r8d
  40ec8a:	mov    QWORD PTR [rax],0x0
  40ec91:	mov    rbx,QWORD PTR [r14]
  40ec94:	movzx  edx,BYTE PTR [rbx+0x2]
  40ec98:	lea    rax,[rbx+0x3]
  40ec9c:	add    rbx,0x2
  40eca0:	cmp    dl,0x30
  40eca3:	jne    0x40ecb9
  40eca5:	mov    rbx,rax
  40eca8:	add    rax,0x1
  40ecac:	movzx  edx,BYTE PTR [rax-0x1]
  40ecb0:	add    r8d,0x1
  40ecb4:	cmp    dl,0x30
  40ecb7:	je     0x40eca5
  40ecb9:	cmp    BYTE PTR [rdi+rdx*1],0x0
  40ecbd:	jne    0x40ee10
  40ecc3:	movzx  r9d,BYTE PTR [rsi]
  40ecc7:	test   r9b,r9b
  40ecca:	je     0x40f30a
  40ecd0:	movzx  edx,BYTE PTR [rbx]
  40ecd3:	cmp    r9b,dl
  40ecd6:	jne    0x40f0b3
  40ecdc:	mov    eax,0x1
  40ece1:	jmp    0x40ecf1
  40ece3:	add    rax,0x1
  40ece7:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  40eceb:	jne    0x40f0b0
  40ecf1:	movzx  edx,BYTE PTR [rsi+rax*1]
  40ecf5:	test   dl,dl
  40ecf7:	jne    0x40ece3
  40ecf9:	add    rax,rbx
  40ecfc:	movzx  ecx,BYTE PTR [rax]
  40ecff:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  40ed04:	mov    rdx,rcx
  40ed07:	test   r10b,r10b
  40ed0a:	jne    0x40f190
  40ed10:	cmp    dl,0x50
  40ed13:	je     0x40efc0
  40ed19:	cmp    dl,0x70
  40ed1c:	je     0x40efc0
  40ed22:	mov    rbp,rax
  40ed25:	mov    r11d,0x1
  40ed2b:	xor    r12d,r12d
  40ed2e:	xor    r15d,r15d
  40ed31:	xor    r10d,r10d
  40ed34:	test   r8d,r8d
  40ed37:	jne    0x40ed3d
  40ed39:	lea    rax,[rbx-0x1]
  40ed3d:	test   r11d,r11d
  40ed40:	mov    QWORD PTR [r14],rax
  40ed43:	jne    0x40f070
  40ed49:	test   r10d,r10d
  40ed4c:	je     0x40ee80
  40ed52:	test   r15d,r15d
  40ed55:	mov    eax,DWORD PTR [r13+0xc]
  40ed59:	jne    0x40f100
  40ed5f:	cmp    eax,0x2
  40ed62:	je     0x40f3a8
  40ed68:	cmp    eax,0x3
  40ed6b:	je     0x40f392
  40ed71:	cmp    eax,0x1
  40ed74:	je     0x40f178
  40ed7a:	mov    esi,DWORD PTR [r13+0x0]
  40ed7e:	mov    ebx,esi
  40ed80:	and    esi,0x1f
  40ed83:	sar    ebx,0x5
  40ed86:	cmp    esi,0x1
  40ed89:	mov    edi,ebx
  40ed8b:	sbb    edi,0xffffffff
  40ed8e:	xor    ecx,ecx
  40ed90:	mov    eax,edi
  40ed92:	sar    eax,1
  40ed94:	je     0x40eda7
  40ed96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eda0:	add    ecx,0x1
  40eda3:	sar    eax,1
  40eda5:	jne    0x40eda0
  40eda7:	call   0x40fbc0
  40edac:	mov    rcx,QWORD PTR [rsp+0x88]
  40edb4:	test   ebx,ebx
  40edb6:	mov    QWORD PTR [rcx],rax
  40edb9:	mov    DWORD PTR [rax+0x14],edi
  40edbc:	jle    0x40f4c8
  40edc2:	lea    ecx,[rbx-0x1]
  40edc5:	lea    rdx,[rax+0x18]
  40edc9:	lea    rcx,[rax+rcx*4+0x1c]
  40edce:	xchg   ax,ax
  40edd0:	mov    DWORD PTR [rdx],0xffffffff
  40edd6:	add    rdx,0x4
  40edda:	cmp    rdx,rcx
  40eddd:	jne    0x40edd0
  40eddf:	mov    edx,ebx
  40ede1:	cmp    edi,ebx
  40ede3:	jle    0x40edf8
  40ede5:	movsxd r8,edx
  40ede8:	mov    edx,0x20
  40eded:	mov    ecx,edx
  40edef:	sub    ecx,esi
  40edf1:	sar    edx,cl
  40edf3:	mov    DWORD PTR [rax+r8*4+0x18],edx
  40edf8:	mov    eax,DWORD PTR [r13+0x4]
  40edfc:	mov    rdi,QWORD PTR [rsp+0x80]
  40ee04:	mov    DWORD PTR [rdi],eax
  40ee06:	mov    eax,0x11
  40ee0b:	jmp    0x40f072
  40ee10:	movzx  eax,BYTE PTR [rbx]
  40ee13:	movzx  r9d,BYTE PTR [rsi]
  40ee17:	add    r8d,0x1
  40ee1b:	xor    r11d,r11d
  40ee1e:	xor    r12d,r12d
  40ee21:	movzx  r10d,BYTE PTR [rdi+rax*1]
  40ee26:	mov    rdx,rax
  40ee29:	test   r10b,r10b
  40ee2c:	mov    rax,rbx
  40ee2f:	je     0x40ee41
  40ee31:	add    rax,0x1
  40ee35:	movzx  ecx,BYTE PTR [rax]
  40ee38:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40ee3c:	mov    rdx,rcx
  40ee3f:	jne    0x40ee31
  40ee41:	cmp    dl,r9b
  40ee44:	je     0x40f0c0
  40ee4a:	test   r12,r12
  40ee4d:	movzx  edx,BYTE PTR [rax]
  40ee50:	je     0x40ee59
  40ee52:	sub    r12d,eax
  40ee55:	shl    r12d,0x2
  40ee59:	cmp    dl,0x50
  40ee5c:	je     0x40efc9
  40ee62:	cmp    dl,0x70
  40ee65:	je     0x40efc9
  40ee6b:	test   r11d,r11d
  40ee6e:	mov    QWORD PTR [r14],rax
  40ee71:	mov    rbp,rax
  40ee74:	jne    0x40f070
  40ee7a:	nop    WORD PTR [rax+rax*1+0x0]
  40ee80:	mov    rax,rbp
  40ee83:	xor    ecx,ecx
  40ee85:	sub    rax,rbx
  40ee88:	sub    eax,0x1
  40ee8b:	cmp    eax,0x7
  40ee8e:	jle    0x40ee9a
  40ee90:	sar    eax,1
  40ee92:	add    ecx,0x1
  40ee95:	cmp    eax,0x7
  40ee98:	jg     0x40ee90
  40ee9a:	call   0x40fbc0
  40ee9f:	cmp    BYTE PTR [rsi+0x1],0x0
  40eea3:	mov    r14,rax
  40eea6:	lea    r15,[rax+0x18]
  40eeaa:	je     0x40f3be
  40eeb0:	mov    edx,0x1
  40eeb5:	jmp    0x40eec3
  40eeb7:	nop    WORD PTR [rax+rax*1+0x0]
  40eec0:	mov    rdx,rax
  40eec3:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  40eec8:	lea    rax,[rdx+0x1]
  40eecc:	jne    0x40eec0
  40eece:	cmp    rbx,rbp
  40eed1:	jae    0x40f3c5
  40eed7:	add    rsi,rdx
  40eeda:	mov    rax,r15
  40eedd:	xor    r9d,r9d
  40eee0:	xor    r8d,r8d
  40eee3:	jmp    0x40ef11
  40eee5:	cmp    r8d,0x20
  40eee9:	je     0x40f083
  40eeef:	movzx  r10d,cl
  40eef3:	mov    ecx,r8d
  40eef6:	add    r8d,0x4
  40eefa:	movzx  r10d,BYTE PTR [rdi+r10*1]
  40eeff:	mov    rbp,r11
  40ef02:	and    r10d,0xf
  40ef06:	shl    r10d,cl
  40ef09:	or     r9d,r10d
  40ef0c:	cmp    rbx,rbp
  40ef0f:	jae    0x40ef28
  40ef11:	movzx  ecx,BYTE PTR [rbp-0x1]
  40ef15:	lea    r11,[rbp-0x1]
  40ef19:	cmp    cl,BYTE PTR [rsi]
  40ef1b:	jne    0x40eee5
  40ef1d:	sub    r11,rdx
  40ef20:	mov    rbp,r11
  40ef23:	cmp    rbx,rbp
  40ef26:	jb     0x40ef11
  40ef28:	bsr    edx,r9d
  40ef2c:	xor    edx,0x1f
  40ef2f:	mov    DWORD PTR [rax],r9d
  40ef32:	add    rax,0x4
  40ef36:	mov    esi,DWORD PTR [r13+0x0]
  40ef3a:	sub    rax,r15
  40ef3d:	sar    rax,0x2
  40ef41:	mov    DWORD PTR [r14+0x14],eax
  40ef45:	shl    eax,0x5
  40ef48:	sub    eax,edx
  40ef4a:	cmp    eax,esi
  40ef4c:	jg     0x40f1f8
  40ef52:	mov    edi,0x0
  40ef57:	jl     0x40f1ce
  40ef5d:	cmp    r12d,DWORD PTR [r13+0x8]
  40ef61:	jg     0x40f170
  40ef67:	mov    eax,DWORD PTR [r13+0x4]
  40ef6b:	cmp    r12d,eax
  40ef6e:	jge    0x40f259
  40ef74:	mov    ebx,eax
  40ef76:	sub    ebx,r12d
  40ef79:	cmp    esi,ebx
  40ef7b:	jg     0x40f2b7
  40ef81:	mov    edx,DWORD PTR [r13+0xc]
  40ef85:	cmp    edx,0x2
  40ef88:	je     0x40f492
  40ef8e:	cmp    edx,0x3
  40ef91:	je     0x40f46f
  40ef97:	cmp    edx,0x1
  40ef9a:	je     0x40f4a2
  40efa0:	mov    rcx,r14
  40efa3:	call   0x40fcd0
  40efa8:	call   0x410a70
  40efad:	mov    DWORD PTR [rax],0x22
  40efb3:	mov    eax,0x50
  40efb8:	jmp    0x40f072
  40efbd:	nop    DWORD PTR [rax]
  40efc0:	xor    r12d,r12d
  40efc3:	mov    r11d,0x1
  40efc9:	movzx  edx,BYTE PTR [rax+0x1]
  40efcd:	cmp    dl,0x2b
  40efd0:	je     0x40f1f0
  40efd6:	cmp    dl,0x2d
  40efd9:	je     0x40f0d1
  40efdf:	movzx  edx,BYTE PTR [rdi+rdx*1]
  40efe3:	xor    r15d,r15d
  40efe6:	lea    r9,[rax+0x1]
  40efea:	lea    ecx,[rdx-0x1]
  40efed:	cmp    cl,0x18
  40eff0:	ja     0x40f0ef
  40eff6:	lea    rcx,[r9+0x1]
  40effa:	movzx  r9d,BYTE PTR [r9+0x1]
  40efff:	sub    edx,0x10
  40f002:	xor    r10d,r10d
  40f005:	movzx  ebp,BYTE PTR [rdi+r9*1]
  40f00a:	mov    r9d,ebp
  40f00d:	sub    r9d,0x1
  40f011:	cmp    r9b,0x18
  40f015:	ja     0x40f051
  40f017:	nop    WORD PTR [rax+rax*1+0x0]
  40f020:	test   edx,0xf8000000
  40f026:	mov    r9d,0x1
  40f02c:	lea    edx,[rdx+rdx*4]
  40f02f:	cmovne r10d,r9d
  40f033:	add    rcx,0x1
  40f037:	movzx  r9d,BYTE PTR [rcx]
  40f03b:	lea    edx,[rbp+rdx*2-0x10]
  40f03f:	movzx  ebp,BYTE PTR [rdi+r9*1]
  40f044:	mov    r9d,ebp
  40f047:	sub    r9d,0x1
  40f04b:	cmp    r9b,0x18
  40f04f:	jbe    0x40f020
  40f051:	mov    r9d,r15d
  40f054:	mov    rbp,rax
  40f057:	mov    rax,rcx
  40f05a:	neg    r9d
  40f05d:	xor    edx,r9d
  40f060:	add    edx,r15d
  40f063:	add    r12d,edx
  40f066:	jmp    0x40ed34
  40f06b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f070:	xor    eax,eax
  40f072:	add    rsp,0x28
  40f076:	pop    rbx
  40f077:	pop    rsi
  40f078:	pop    rdi
  40f079:	pop    rbp
  40f07a:	pop    r12
  40f07c:	pop    r13
  40f07e:	pop    r14
  40f080:	pop    r15
  40f082:	ret    
  40f083:	mov    DWORD PTR [rax],r9d
  40f086:	mov    r8d,0x4
  40f08c:	movzx  r10d,BYTE PTR [rbp-0x1]
  40f091:	add    rax,0x4
  40f095:	xor    r9d,r9d
  40f098:	xor    ecx,ecx
  40f09a:	jmp    0x40eefa
  40f09f:	nop
  40f0a0:	call   0x40f650
  40f0a5:	jmp    0x40ec7f
  40f0aa:	nop    WORD PTR [rax+rax*1+0x0]
  40f0b0:	mov    edx,r9d
  40f0b3:	mov    rax,rbx
  40f0b6:	jmp    0x40ed10
  40f0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f0c0:	test   r12,r12
  40f0c3:	je     0x40f3d5
  40f0c9:	movzx  edx,BYTE PTR [rax]
  40f0cc:	jmp    0x40ee52
  40f0d1:	mov    r15d,0x1
  40f0d7:	movzx  edx,BYTE PTR [rax+0x2]
  40f0db:	lea    r9,[rax+0x2]
  40f0df:	movzx  edx,BYTE PTR [rdi+rdx*1]
  40f0e3:	lea    ecx,[rdx-0x1]
  40f0e6:	cmp    cl,0x18
  40f0e9:	jbe    0x40eff6
  40f0ef:	mov    rbp,rax
  40f0f2:	xor    r10d,r10d
  40f0f5:	jmp    0x40ed34
  40f0fa:	nop    WORD PTR [rax+rax*1+0x0]
  40f100:	cmp    eax,0x2
  40f103:	je     0x40f2a1
  40f109:	cmp    eax,0x3
  40f10c:	jne    0x40efa8
  40f112:	mov    r10d,DWORD PTR [rsp+0x90]
  40f11a:	test   r10d,r10d
  40f11d:	je     0x40efa8
  40f123:	xor    ecx,ecx
  40f125:	call   0x40fbc0
  40f12a:	mov    r14,rax
  40f12d:	mov    DWORD PTR [rax+0x14],0x1
  40f134:	mov    DWORD PTR [rax+0x18],0x1
  40f13b:	mov    eax,DWORD PTR [r13+0x4]
  40f13f:	mov    rdi,QWORD PTR [rsp+0x88]
  40f147:	mov    QWORD PTR [rdi],r14
  40f14a:	mov    rdi,QWORD PTR [rsp+0x80]
  40f152:	mov    DWORD PTR [rdi],eax
  40f154:	call   0x410a70
  40f159:	mov    DWORD PTR [rax],0x22
  40f15f:	mov    eax,0x62
  40f164:	jmp    0x40f072
  40f169:	nop    DWORD PTR [rax+0x0]
  40f170:	mov    rcx,r14
  40f173:	call   0x40fcd0
  40f178:	call   0x410a70
  40f17d:	mov    DWORD PTR [rax],0x22
  40f183:	mov    eax,0xa3
  40f188:	jmp    0x40f072
  40f18d:	nop    DWORD PTR [rax]
  40f190:	cmp    cl,0x30
  40f193:	mov    rbx,rax
  40f196:	jne    0x40f1b6
  40f198:	nop    DWORD PTR [rax+rax*1+0x0]
  40f1a0:	add    rbx,0x1
  40f1a4:	movzx  ecx,BYTE PTR [rbx]
  40f1a7:	cmp    cl,0x30
  40f1aa:	je     0x40f1a0
  40f1ac:	movzx  edx,cl
  40f1af:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  40f1b4:	mov    edx,ecx
  40f1b6:	xor    r11d,r11d
  40f1b9:	test   r10b,r10b
  40f1bc:	mov    r12,rax
  40f1bf:	sete   r11b
  40f1c3:	mov    r8d,0x1
  40f1c9:	jmp    0x40ee29
  40f1ce:	mov    ebx,esi
  40f1d0:	mov    rcx,r14
  40f1d3:	sub    ebx,eax
  40f1d5:	mov    edx,ebx
  40f1d7:	sub    r12d,ebx
  40f1da:	call   0x4100d0
  40f1df:	mov    r14,rax
  40f1e2:	lea    r15,[rax+0x18]
  40f1e6:	jmp    0x40ef5d
  40f1eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f1f0:	xor    r15d,r15d
  40f1f3:	jmp    0x40f0d7
  40f1f8:	mov    ebx,eax
  40f1fa:	mov    rcx,r14
  40f1fd:	xor    edi,edi
  40f1ff:	sub    ebx,esi
  40f201:	mov    edx,ebx
  40f203:	call   0x410860
  40f208:	test   eax,eax
  40f20a:	je     0x40f247
  40f20c:	lea    ecx,[rbx-0x1]
  40f20f:	mov    r8d,0x1
  40f215:	mov    dil,0x1
  40f218:	mov    eax,ecx
  40f21a:	shl    r8d,cl
  40f21d:	sar    eax,0x5
  40f220:	cdqe   
  40f222:	test   DWORD PTR [r15+rax*4],r8d
  40f226:	je     0x40f247
  40f228:	test   ecx,ecx
  40f22a:	jle    0x40f43f
  40f230:	mov    edx,ecx
  40f232:	mov    rcx,r14
  40f235:	call   0x410860
  40f23a:	test   eax,eax
  40f23c:	je     0x40f43f
  40f242:	mov    edi,0x3
  40f247:	mov    edx,ebx
  40f249:	mov    rcx,r14
  40f24c:	add    r12d,ebx
  40f24f:	call   0x40f510
  40f254:	jmp    0x40ef5d
  40f259:	mov    ebx,0x1
  40f25e:	test   edi,edi
  40f260:	je     0x40f284
  40f262:	mov    eax,DWORD PTR [r13+0xc]
  40f266:	cmp    eax,0x2
  40f269:	je     0x40f311
  40f26f:	cmp    eax,0x3
  40f272:	je     0x40f324
  40f278:	cmp    eax,0x1
  40f27b:	je     0x40f449
  40f281:	or     ebx,0x10
  40f284:	mov    rax,QWORD PTR [rsp+0x88]
  40f28c:	mov    QWORD PTR [rax],r14
  40f28f:	mov    rax,QWORD PTR [rsp+0x80]
  40f297:	mov    DWORD PTR [rax],r12d
  40f29a:	mov    eax,ebx
  40f29c:	jmp    0x40f072
  40f2a1:	mov    r11d,DWORD PTR [rsp+0x90]
  40f2a9:	test   r11d,r11d
  40f2ac:	jne    0x40efa8
  40f2b2:	jmp    0x40f123
  40f2b7:	test   edi,edi
  40f2b9:	lea    ebp,[rbx-0x1]
  40f2bc:	jne    0x40f435
  40f2c2:	test   ebp,ebp
  40f2c4:	jle    0x40f2d2
  40f2c6:	mov    edx,ebp
  40f2c8:	mov    rcx,r14
  40f2cb:	call   0x410860
  40f2d0:	mov    edi,eax
  40f2d2:	mov    eax,ebp
  40f2d4:	mov    ecx,ebp
  40f2d6:	mov    edx,edi
  40f2d8:	sar    eax,0x5
  40f2db:	mov    r8d,0x1
  40f2e1:	or     edx,0x2
  40f2e4:	cdqe   
  40f2e6:	shl    r8d,cl
  40f2e9:	mov    rcx,r14
  40f2ec:	test   DWORD PTR [r15+rax*4],r8d
  40f2f0:	cmovne edi,edx
  40f2f3:	mov    edx,ebx
  40f2f5:	sub    esi,ebx
  40f2f7:	call   0x40f510
  40f2fc:	mov    ebx,0x2
  40f301:	mov    r12d,DWORD PTR [r13+0x4]
  40f305:	jmp    0x40f25e
  40f30a:	xor    eax,eax
  40f30c:	jmp    0x40ecf9
  40f311:	mov    eax,0x1
  40f316:	sub    eax,DWORD PTR [rsp+0x90]
  40f31d:	mov    DWORD PTR [rsp+0x90],eax
  40f324:	mov    eax,DWORD PTR [rsp+0x90]
  40f32b:	test   eax,eax
  40f32d:	je     0x40f281
  40f333:	mov    rcx,r14
  40f336:	movsxd rdi,DWORD PTR [r14+0x14]
  40f33a:	call   0x40ca30
  40f33f:	cmp    ebx,0x2
  40f342:	mov    r14,rax
  40f345:	lea    r8,[rax+0x18]
  40f349:	je     0x40f4cf
  40f34f:	cmp    edi,DWORD PTR [rax+0x14]
  40f352:	jl     0x40f36d
  40f354:	and    esi,0x1f
  40f357:	je     0x40f388
  40f359:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  40f35f:	mov    edx,0x20
  40f364:	sub    edx,esi
  40f366:	xor    eax,0x1f
  40f369:	cmp    edx,eax
  40f36b:	jle    0x40f388
  40f36d:	mov    edx,0x1
  40f372:	mov    rcx,r14
  40f375:	add    r12d,0x1
  40f379:	call   0x40f510
  40f37e:	cmp    r12d,DWORD PTR [r13+0x8]
  40f382:	jg     0x40f170
  40f388:	mov    ebx,0x21
  40f38d:	jmp    0x40f284
  40f392:	mov    r8d,DWORD PTR [rsp+0x90]
  40f39a:	test   r8d,r8d
  40f39d:	jne    0x40f178
  40f3a3:	jmp    0x40ed7a
  40f3a8:	mov    r9d,DWORD PTR [rsp+0x90]
  40f3b0:	test   r9d,r9d
  40f3b3:	je     0x40f178
  40f3b9:	jmp    0x40ed7a
  40f3be:	xor    edx,edx
  40f3c0:	jmp    0x40eece
  40f3c5:	mov    rax,r15
  40f3c8:	mov    edx,0x20
  40f3cd:	xor    r9d,r9d
  40f3d0:	jmp    0x40ef2f
  40f3d5:	movzx  edx,BYTE PTR [rsi+0x1]
  40f3d9:	test   dl,dl
  40f3db:	je     0x40f504
  40f3e1:	cmp    dl,BYTE PTR [rax+0x1]
  40f3e4:	jne    0x40f464
  40f3e6:	mov    r12d,0x2
  40f3ec:	jmp    0x40f3fb
  40f3ee:	xchg   ax,ax
  40f3f0:	add    r12,0x1
  40f3f4:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  40f3f9:	jne    0x40f464
  40f3fb:	movzx  edx,BYTE PTR [rsi+r12*1]
  40f400:	test   dl,dl
  40f402:	jne    0x40f3f0
  40f404:	add    r12,rax
  40f407:	movzx  eax,BYTE PTR [r12]
  40f40c:	cmp    BYTE PTR [rdi+rax*1],0x0
  40f410:	mov    rdx,rax
  40f413:	mov    rax,r12
  40f416:	je     0x40ee52
  40f41c:	nop    DWORD PTR [rax+0x0]
  40f420:	add    rax,0x1
  40f424:	movzx  ecx,BYTE PTR [rax]
  40f427:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40f42b:	mov    rdx,rcx
  40f42e:	jne    0x40f420
  40f430:	jmp    0x40ee52
  40f435:	mov    edi,0x1
  40f43a:	jmp    0x40f2d2
  40f43f:	mov    edi,0x2
  40f444:	jmp    0x40f247
  40f449:	test   dil,0x2
  40f44d:	je     0x40f281
  40f453:	or     edi,DWORD PTR [r15]
  40f456:	and    edi,0x1
  40f459:	jne    0x40f333
  40f45f:	jmp    0x40f281
  40f464:	movzx  edx,BYTE PTR [rax]
  40f467:	xor    r12d,r12d
  40f46a:	jmp    0x40ee59
  40f46f:	mov    edx,DWORD PTR [rsp+0x90]
  40f476:	test   edx,edx
  40f478:	je     0x40efa0
  40f47e:	mov    DWORD PTR [r14+0x14],0x1
  40f486:	mov    DWORD PTR [r15],0x1
  40f48d:	jmp    0x40f13f
  40f492:	mov    ecx,DWORD PTR [rsp+0x90]
  40f499:	test   ecx,ecx
  40f49b:	je     0x40f47e
  40f49d:	jmp    0x40efa0
  40f4a2:	cmp    ebx,esi
  40f4a4:	jne    0x40efa0
  40f4aa:	cmp    esi,0x1
  40f4ad:	jle    0x40f47e
  40f4af:	lea    edx,[rsi-0x1]
  40f4b2:	mov    rcx,r14
  40f4b5:	call   0x410860
  40f4ba:	test   eax,eax
  40f4bc:	je     0x40efa0
  40f4c2:	mov    eax,DWORD PTR [r13+0x4]
  40f4c6:	jmp    0x40f47e
  40f4c8:	xor    edx,edx
  40f4ca:	jmp    0x40ede1
  40f4cf:	mov    eax,DWORD PTR [r13+0x0]
  40f4d3:	mov    bl,0x22
  40f4d5:	sub    eax,0x1
  40f4d8:	cmp    eax,esi
  40f4da:	jne    0x40f284
  40f4e0:	mov    edx,esi
  40f4e2:	mov    eax,0x1
  40f4e7:	mov    ecx,esi
  40f4e9:	sar    edx,0x5
  40f4ec:	shl    eax,cl
  40f4ee:	movsxd rdx,edx
  40f4f1:	and    eax,DWORD PTR [r8+rdx*4]
  40f4f5:	cmp    eax,0x1
  40f4f8:	sbb    ebx,ebx
  40f4fa:	not    ebx
  40f4fc:	add    ebx,0x22
  40f4ff:	jmp    0x40f284
  40f504:	mov    r12d,0x1
  40f50a:	jmp    0x40f404
  40f50f:	nop
  40f510:	push   rbp
  40f511:	push   rdi
  40f512:	push   rsi
  40f513:	push   rbx
  40f514:	mov    rsi,rcx
  40f517:	lea    r10,[rcx+0x18]
  40f51b:	movsxd rcx,DWORD PTR [rcx+0x14]
  40f51f:	mov    eax,edx
  40f521:	sar    eax,0x5
  40f524:	cmp    eax,ecx
  40f526:	jge    0x40f5b0
  40f52c:	cdqe   
  40f52e:	and    edx,0x1f
  40f531:	lea    rbx,[r10+rcx*4]
  40f535:	lea    rdi,[r10+rax*4]
  40f539:	je     0x40f5c3
  40f53f:	mov    r9d,DWORD PTR [rdi]
  40f542:	lea    r8,[rdi+0x4]
  40f546:	mov    ebp,0x20
  40f54b:	mov    ecx,edx
  40f54d:	sub    ebp,edx
  40f54f:	shr    r9d,cl
  40f552:	cmp    rbx,r8
  40f555:	jbe    0x40f608
  40f55b:	mov    r11,r10
  40f55e:	xchg   ax,ax
  40f560:	mov    eax,DWORD PTR [r8]
  40f563:	mov    ecx,ebp
  40f565:	add    r11,0x4
  40f569:	add    r8,0x4
  40f56d:	shl    eax,cl
  40f56f:	mov    ecx,edx
  40f571:	or     eax,r9d
  40f574:	mov    DWORD PTR [r11-0x4],eax
  40f578:	mov    r9d,DWORD PTR [r8-0x4]
  40f57c:	shr    r9d,cl
  40f57f:	cmp    rbx,r8
  40f582:	ja     0x40f560
  40f584:	sub    rbx,rdi
  40f587:	lea    rax,[rbx-0x5]
  40f58b:	shr    rax,0x2
  40f58f:	lea    rax,[r10+rax*4+0x4]
  40f594:	test   r9d,r9d
  40f597:	mov    DWORD PTR [rax],r9d
  40f59a:	je     0x40f5a0
  40f59c:	add    rax,0x4
  40f5a0:	sub    rax,r10
  40f5a3:	shr    rax,0x2
  40f5a7:	jmp    0x40f5fc
  40f5a9:	nop    DWORD PTR [rax+0x0]
  40f5b0:	mov    DWORD PTR [rsi+0x14],0x0
  40f5b7:	mov    DWORD PTR [rsi+0x18],0x0
  40f5be:	pop    rbx
  40f5bf:	pop    rsi
  40f5c0:	pop    rdi
  40f5c1:	pop    rbp
  40f5c2:	ret    
  40f5c3:	cmp    rbx,rdi
  40f5c6:	mov    rdx,r10
  40f5c9:	mov    rax,rdi
  40f5cc:	jbe    0x40f5b0
  40f5ce:	xchg   ax,ax
  40f5d0:	add    rax,0x4
  40f5d4:	mov    r8d,DWORD PTR [rax-0x4]
  40f5d8:	add    rdx,0x4
  40f5dc:	cmp    rbx,rax
  40f5df:	mov    DWORD PTR [rdx-0x4],r8d
  40f5e3:	ja     0x40f5d0
  40f5e5:	not    rdi
  40f5e8:	lea    rax,[rdi+rbx*1]
  40f5ec:	shr    rax,0x2
  40f5f0:	lea    rax,[rax*4+0x4]
  40f5f8:	shr    rax,0x2
  40f5fc:	test   eax,eax
  40f5fe:	mov    DWORD PTR [rsi+0x14],eax
  40f601:	je     0x40f5b7
  40f603:	pop    rbx
  40f604:	pop    rsi
  40f605:	pop    rdi
  40f606:	pop    rbp
  40f607:	ret    
  40f608:	mov    rax,r10
  40f60b:	jmp    0x40f594
  40f60d:	nop    DWORD PTR [rax]
  40f610:	movsxd rax,DWORD PTR [rcx+0x14]
  40f614:	lea    rdx,[rcx+0x18]
  40f618:	lea    r8,[rdx+rax*4]
  40f61c:	cmp    rdx,r8
  40f61f:	jae    0x40f64b
  40f621:	mov    ecx,DWORD PTR [rcx+0x18]
  40f624:	xor    eax,eax
  40f626:	test   ecx,ecx
  40f628:	je     0x40f636
  40f62a:	jmp    0x40f644
  40f62c:	nop    DWORD PTR [rax+0x0]
  40f630:	mov    ecx,DWORD PTR [rdx]
  40f632:	test   ecx,ecx
  40f634:	jne    0x40f644
  40f636:	add    rdx,0x4
  40f63a:	add    eax,0x20
  40f63d:	cmp    r8,rdx
  40f640:	ja     0x40f630
  40f642:	repz ret 
  40f644:	tzcnt  ecx,ecx
  40f648:	add    eax,ecx
  40f64a:	ret    
  40f64b:	xor    eax,eax
  40f64d:	ret    
  40f64e:	nop
  40f64f:	nop
  40f650:	lea    r8,[rip+0x8d77]        # 0x4183ce
  40f657:	lea    rdx,[rip+0xf162]        # 0x41e7c0
  40f65e:	mov    ecx,0x10
  40f663:	mov    eax,0x30
  40f668:	nop    DWORD PTR [rax+rax*1+0x0]
  40f670:	mov    BYTE PTR [rdx+rax*1],cl
  40f673:	movzx  eax,BYTE PTR [r8+0x1]
  40f678:	add    ecx,0x1
  40f67b:	add    r8,0x1
  40f67f:	test   al,al
  40f681:	jne    0x40f670
  40f683:	lea    r8,[rip+0x8d3d]        # 0x4183c7
  40f68a:	mov    ecx,0x1a
  40f68f:	mov    eax,0x61
  40f694:	mov    BYTE PTR [rdx+rax*1],cl
  40f697:	movzx  eax,BYTE PTR [r8+0x1]
  40f69c:	add    ecx,0x1
  40f69f:	add    r8,0x1
  40f6a3:	test   al,al
  40f6a5:	jne    0x40f694
  40f6a7:	lea    r8,[rip+0x8d12]        # 0x4183c0
  40f6ae:	mov    ecx,0x1a
  40f6b3:	mov    eax,0x41
  40f6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f6c0:	mov    BYTE PTR [rdx+rax*1],cl
  40f6c3:	movzx  eax,BYTE PTR [r8+0x1]
  40f6c8:	add    ecx,0x1
  40f6cb:	add    r8,0x1
  40f6cf:	test   al,al
  40f6d1:	jne    0x40f6c0
  40f6d3:	ret    
  40f6d4:	nop
  40f6d5:	nop
  40f6d6:	nop
  40f6d7:	nop
  40f6d8:	nop
  40f6d9:	nop
  40f6da:	nop
  40f6db:	nop
  40f6dc:	nop
  40f6dd:	nop
  40f6de:	nop
  40f6df:	nop
  40f6e0:	push   r15
  40f6e2:	push   r14
  40f6e4:	push   r13
  40f6e6:	push   r12
  40f6e8:	push   rbp
  40f6e9:	push   rdi
  40f6ea:	push   rsi
  40f6eb:	push   rbx
  40f6ec:	sub    rsp,0x48
  40f6f0:	mov    r14,QWORD PTR [rip+0x8ef9]        # 0x4185f0
  40f6f7:	mov    QWORD PTR [rsp+0x90],rcx
  40f6ff:	cmp    BYTE PTR [r14+0x30],0x0
  40f704:	je     0x40f9d6
  40f70a:	mov    eax,DWORD PTR [rdx]
  40f70c:	mov    edx,eax
  40f70e:	sar    edx,0x5
  40f711:	and    eax,0x1f
  40f714:	movsxd rdx,edx
  40f717:	mov    DWORD PTR [rsp+0x3c],eax
  40f71b:	mov    rax,QWORD PTR [rsp+0x90]
  40f723:	lea    rdi,[r8+rdx*4]
  40f727:	lea    rdx,[rdi+0x4]
  40f72b:	mov    rax,QWORD PTR [rax]
  40f72e:	cmove  rdx,rdi
  40f732:	mov    QWORD PTR [rsp+0x30],rdx
  40f737:	lea    rsi,[rdx-0x4]
  40f73b:	mov    DWORD PTR [rdx-0x4],0x0
  40f742:	jmp    0x40f748
  40f744:	add    rax,0x1
  40f748:	movzx  edx,BYTE PTR [rax+0x1]
  40f74c:	mov    ecx,edx
  40f74e:	sub    edx,0x1
  40f751:	cmp    edx,0x1f
  40f754:	jbe    0x40f744
  40f756:	cmp    cl,0x30
  40f759:	je     0x40f9f4
  40f75f:	movzx  edx,BYTE PTR [rax+0x1]
  40f763:	xor    r9d,r9d
  40f766:	xor    r15d,r15d
  40f769:	xor    r12d,r12d
  40f76c:	test   edx,edx
  40f76e:	mov    rbp,rsi
  40f771:	mov    r11,rsi
  40f774:	lea    rbx,[rax+0x1]
  40f778:	je     0x40f820
  40f77e:	xchg   ax,ax
  40f780:	mov    ecx,edx
  40f782:	movzx  ecx,BYTE PTR [r14+rcx*1]
  40f787:	test   cl,cl
  40f789:	jne    0x40f8f4
  40f78f:	cmp    edx,0x20
  40f792:	ja     0x40f9a5
  40f798:	cmp    r12d,r15d
  40f79b:	jle    0x40f935
  40f7a1:	cmp    r9d,0x7
  40f7a5:	jg     0x40f7fa
  40f7a7:	cmp    r11,rbp
  40f7aa:	jae    0x40f7fa
  40f7ac:	mov    edi,0x8
  40f7b1:	mov    edx,DWORD PTR [r11]
  40f7b4:	mov    r13d,0x20
  40f7ba:	sub    edi,r9d
  40f7bd:	mov    QWORD PTR [rsp+0x28],rax
  40f7c2:	mov    r9,r11
  40f7c5:	shl    edi,0x2
  40f7c8:	sub    r13d,edi
  40f7cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f7d0:	mov    r10d,DWORD PTR [r9+0x4]
  40f7d4:	mov    ecx,r13d
  40f7d7:	add    r9,0x4
  40f7db:	mov    eax,r10d
  40f7de:	shl    eax,cl
  40f7e0:	mov    ecx,edi
  40f7e2:	or     edx,eax
  40f7e4:	mov    DWORD PTR [r9-0x4],edx
  40f7e8:	mov    edx,r10d
  40f7eb:	shr    edx,cl
  40f7ed:	mov    DWORD PTR [r9],edx
  40f7f0:	cmp    rbp,r9
  40f7f3:	ja     0x40f7d0
  40f7f5:	mov    rax,QWORD PTR [rsp+0x28]
  40f7fa:	cmp    r11,r8
  40f7fd:	ja     0x40f920
  40f803:	mov    rax,rbx
  40f806:	mov    r9d,0x8
  40f80c:	nop    DWORD PTR [rax+0x0]
  40f810:	movzx  edx,BYTE PTR [rax+0x1]
  40f814:	lea    rbx,[rax+0x1]
  40f818:	test   edx,edx
  40f81a:	jne    0x40f780
  40f820:	test   r12d,r12d
  40f823:	mov    eax,0x4
  40f828:	je     0x40f8e3
  40f82e:	mov    r10,r11
  40f831:	cmp    r9d,0x7
  40f835:	jg     0x40f883
  40f837:	cmp    rbp,r11
  40f83a:	jbe    0x40f883
  40f83c:	mov    edi,0x8
  40f841:	mov    eax,DWORD PTR [r11]
  40f844:	mov    r12d,0x20
  40f84a:	sub    edi,r9d
  40f84d:	mov    r9,r11
  40f850:	shl    edi,0x2
  40f853:	sub    r12d,edi
  40f856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f860:	mov    ebx,DWORD PTR [r9+0x4]
  40f864:	mov    ecx,r12d
  40f867:	add    r9,0x4
  40f86b:	mov    edx,ebx
  40f86d:	shl    edx,cl
  40f86f:	mov    ecx,edi
  40f871:	or     eax,edx
  40f873:	mov    DWORD PTR [r9-0x4],eax
  40f877:	mov    eax,ebx
  40f879:	shr    eax,cl
  40f87b:	mov    DWORD PTR [r9],eax
  40f87e:	cmp    rbp,r9
  40f881:	ja     0x40f860
  40f883:	cmp    r8,r11
  40f886:	jae    0x40fa24
  40f88c:	mov    rax,r8
  40f88f:	nop
  40f890:	add    r10,0x4
  40f894:	mov    edx,DWORD PTR [r10-0x4]
  40f898:	add    rax,0x4
  40f89c:	cmp    rsi,r10
  40f89f:	mov    DWORD PTR [rax-0x4],edx
  40f8a2:	jae    0x40f890
  40f8a4:	add    rax,0x4
  40f8a8:	mov    DWORD PTR [rax-0x4],0x0
  40f8af:	cmp    rsi,rax
  40f8b2:	jae    0x40f8a4
  40f8b4:	mov    rax,QWORD PTR [rsp+0x30]
  40f8b9:	mov    eax,DWORD PTR [rax-0x4]
  40f8bc:	test   eax,eax
  40f8be:	je     0x40f8d3
  40f8c0:	jmp    0x40fa1a
  40f8c5:	sub    rsi,0x4
  40f8c9:	mov    eax,DWORD PTR [rsi]
  40f8cb:	test   eax,eax
  40f8cd:	jne    0x40fa1a
  40f8d3:	cmp    r8,rsi
  40f8d6:	jne    0x40f8c5
  40f8d8:	mov    DWORD PTR [rsi],0x1
  40f8de:	mov    eax,0x5
  40f8e3:	add    rsp,0x48
  40f8e7:	pop    rbx
  40f8e8:	pop    rsi
  40f8e9:	pop    rdi
  40f8ea:	pop    rbp
  40f8eb:	pop    r12
  40f8ed:	pop    r13
  40f8ef:	pop    r14
  40f8f1:	pop    r15
  40f8f3:	ret    
  40f8f4:	add    r9d,0x1
  40f8f8:	add    r12d,0x1
  40f8fc:	cmp    r9d,0x8
  40f900:	jg     0x40f980
  40f902:	mov    eax,DWORD PTR [r11]
  40f905:	shl    eax,0x4
  40f908:	and    ecx,0xf
  40f90b:	or     ecx,eax
  40f90d:	mov    rax,rbx
  40f910:	mov    DWORD PTR [r11],ecx
  40f913:	jmp    0x40f810
  40f918:	nop    DWORD PTR [rax+rax*1+0x0]
  40f920:	lea    rbp,[r11-0x4]
  40f924:	mov    DWORD PTR [r11-0x4],0x0
  40f92c:	mov    r15d,r12d
  40f92f:	xor    r9d,r9d
  40f932:	mov    r11,rbp
  40f935:	movzx  edx,BYTE PTR [rax+0x2]
  40f939:	mov    rax,rbx
  40f93c:	cmp    dl,0x20
  40f93f:	ja     0x40f94e
  40f941:	add    rax,0x1
  40f945:	movzx  edx,BYTE PTR [rax+0x1]
  40f949:	cmp    dl,0x20
  40f94c:	jbe    0x40f941
  40f94e:	cmp    dl,0x30
  40f951:	jne    0x40f810
  40f957:	movzx  edx,BYTE PTR [rax+0x2]
  40f95b:	and    edx,0xffffffdf
  40f95e:	cmp    dl,0x58
  40f961:	jne    0x40f810
  40f967:	cmp    BYTE PTR [rax+0x3],0x21
  40f96b:	lea    rdx,[rax+0x2]
  40f96f:	cmovae rax,rdx
  40f973:	jmp    0x40f810
  40f978:	nop    DWORD PTR [rax+rax*1+0x0]
  40f980:	cmp    r11,r8
  40f983:	mov    rax,rbx
  40f986:	jbe    0x40f810
  40f98c:	mov    DWORD PTR [r11-0x4],0x0
  40f994:	xor    eax,eax
  40f996:	sub    r11,0x4
  40f99a:	mov    r9d,0x1
  40f9a0:	jmp    0x40f908
  40f9a5:	cmp    edx,0x29
  40f9a8:	mov    rcx,rbx
  40f9ab:	sete   dl
  40f9ae:	test   r12d,r12d
  40f9b1:	je     0x40fa50
  40f9b7:	test   dl,dl
  40f9b9:	je     0x40fa54
  40f9bf:	mov    rbx,QWORD PTR [rsp+0x90]
  40f9c7:	add    rax,0x2
  40f9cb:	mov    r10,r11
  40f9ce:	mov    QWORD PTR [rbx],rax
  40f9d1:	jmp    0x40f831
  40f9d6:	mov    QWORD PTR [rsp+0x30],r8
  40f9db:	mov    QWORD PTR [rsp+0x28],rdx
  40f9e0:	call   0x40f650
  40f9e5:	mov    r8,QWORD PTR [rsp+0x30]
  40f9ea:	mov    rdx,QWORD PTR [rsp+0x28]
  40f9ef:	jmp    0x40f70a
  40f9f4:	movzx  edx,BYTE PTR [rax+0x2]
  40f9f8:	and    edx,0xffffffdf
  40f9fb:	cmp    dl,0x58
  40f9fe:	jne    0x40f75f
  40fa04:	movzx  edx,BYTE PTR [rax+0x3]
  40fa08:	cmp    dl,0x20
  40fa0b:	jbe    0x40f75f
  40fa11:	add    rax,0x2
  40fa15:	jmp    0x40f763
  40fa1a:	mov    eax,0x5
  40fa1f:	jmp    0x40f8e3
  40fa24:	mov    edx,DWORD PTR [rsp+0x3c]
  40fa28:	test   edx,edx
  40fa2a:	je     0x40f8b4
  40fa30:	mov    ecx,0x20
  40fa35:	sub    ecx,DWORD PTR [rsp+0x3c]
  40fa39:	mov    rbx,QWORD PTR [rsp+0x30]
  40fa3e:	mov    eax,0xffffffff
  40fa43:	shr    eax,cl
  40fa45:	and    eax,DWORD PTR [rbx-0x4]
  40fa48:	mov    DWORD PTR [rbx-0x4],eax
  40fa4b:	jmp    0x40f8bc
  40fa50:	test   dl,dl
  40fa52:	jne    0x40fa72
  40fa54:	movsx  eax,BYTE PTR [rbx+0x1]
  40fa58:	lea    rcx,[rbx+0x1]
  40fa5c:	test   eax,eax
  40fa5e:	jne    0x40fa6d
  40fa60:	jmp    0x40fa8b
  40fa62:	add    rcx,0x1
  40fa66:	movsx  eax,BYTE PTR [rcx]
  40fa69:	test   eax,eax
  40fa6b:	je     0x40fa8b
  40fa6d:	cmp    eax,0x29
  40fa70:	jne    0x40fa62
  40fa72:	mov    rax,QWORD PTR [rsp+0x90]
  40fa7a:	add    rcx,0x1
  40fa7e:	mov    QWORD PTR [rax],rcx
  40fa81:	mov    eax,0x4
  40fa86:	jmp    0x40f8e3
  40fa8b:	mov    al,0x4
  40fa8d:	jmp    0x40f8e3
  40fa92:	nop
  40fa93:	nop
  40fa94:	nop
  40fa95:	nop
  40fa96:	nop
  40fa97:	nop
  40fa98:	nop
  40fa99:	nop
  40fa9a:	nop
  40fa9b:	nop
  40fa9c:	nop
  40fa9d:	nop
  40fa9e:	nop
  40fa9f:	nop
  40faa0:	push   rsi
  40faa1:	push   rbx
  40faa2:	sub    rsp,0x28
  40faa6:	mov    eax,DWORD PTR [rip+0xea64]        # 0x41e510
  40faac:	movsxd rsi,ecx
  40faaf:	cmp    eax,0x2
  40fab2:	je     0x40fb1d
  40fab4:	test   eax,eax
  40fab6:	je     0x40fae2
  40fab8:	cmp    eax,0x1
  40fabb:	jne    0x40fadb
  40fabd:	mov    rbx,QWORD PTR [rip+0xfa50]        # 0x41f514
  40fac4:	mov    ecx,0x1
  40fac9:	call   rbx
  40facb:	mov    eax,DWORD PTR [rip+0xea3f]        # 0x41e510
  40fad1:	cmp    eax,0x1
  40fad4:	je     0x40fac4
  40fad6:	cmp    eax,0x2
  40fad9:	je     0x40fb1d
  40fadb:	add    rsp,0x28
  40fadf:	pop    rbx
  40fae0:	pop    rsi
  40fae1:	ret    
  40fae2:	mov    al,0x1
  40fae4:	xchg   DWORD PTR [rip+0xea26],eax        # 0x41e510
  40faea:	test   eax,eax
  40faec:	jne    0x40fb40
  40faee:	lea    rcx,[rip+0xea4b]        # 0x41e540
  40faf5:	mov    rbx,QWORD PTR [rip+0xf9d8]        # 0x41f4d4
  40fafc:	call   rbx
  40fafe:	lea    rcx,[rip+0xea63]        # 0x41e568
  40fb05:	call   rbx
  40fb07:	lea    rcx,[rip+0x62]        # 0x40fb70
  40fb0e:	call   0x40a650
  40fb13:	mov    DWORD PTR [rip+0xe9f3],0x2        # 0x41e510
  40fb1d:	lea    rdx,[rsi+rsi*4]
  40fb21:	lea    rax,[rip+0xea18]        # 0x41e540
  40fb28:	lea    rcx,[rax+rdx*8]
  40fb2c:	mov    rax,QWORD PTR [rip+0xf959]        # 0x41f48c
  40fb33:	add    rsp,0x28
  40fb37:	pop    rbx
  40fb38:	pop    rsi
  40fb39:	rex.W jmp rax
  40fb3c:	nop    DWORD PTR [rax+0x0]
  40fb40:	cmp    eax,0x2
  40fb43:	je     0x40fb60
  40fb45:	mov    eax,DWORD PTR [rip+0xe9c5]        # 0x41e510
  40fb4b:	cmp    eax,0x1
  40fb4e:	je     0x40fabd
  40fb54:	jmp    0x40fad6
  40fb56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb60:	mov    DWORD PTR [rip+0xe9a6],0x2        # 0x41e510
  40fb6a:	jmp    0x40fb1d
  40fb6c:	nop    DWORD PTR [rax+0x0]
  40fb70:	push   rbx
  40fb71:	sub    rsp,0x20
  40fb75:	mov    eax,0x3
  40fb7a:	xchg   DWORD PTR [rip+0xe990],eax        # 0x41e510
  40fb80:	cmp    eax,0x2
  40fb83:	je     0x40fb90
  40fb85:	add    rsp,0x20
  40fb89:	pop    rbx
  40fb8a:	ret    
  40fb8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb90:	mov    rbx,QWORD PTR [rip+0xf8ed]        # 0x41f484
  40fb97:	lea    rcx,[rip+0xe9a2]        # 0x41e540
  40fb9e:	call   rbx
  40fba0:	lea    rcx,[rip+0xe9c1]        # 0x41e568
  40fba7:	mov    rax,rbx
  40fbaa:	add    rsp,0x20
  40fbae:	pop    rbx
  40fbaf:	rex.W jmp rax
  40fbb2:	nop    DWORD PTR [rax+0x0]
  40fbb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fbc0:	push   rdi
  40fbc1:	push   rsi
  40fbc2:	push   rbx
  40fbc3:	sub    rsp,0x20
  40fbc7:	mov    ebx,ecx
  40fbc9:	xor    ecx,ecx
  40fbcb:	call   0x40faa0
  40fbd0:	cmp    ebx,0x9
  40fbd3:	jg     0x40fc10
  40fbd5:	lea    rdx,[rip+0xe8e4]        # 0x41e4c0
  40fbdc:	movsxd rcx,ebx
  40fbdf:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40fbe3:	test   rdi,rdi
  40fbe6:	je     0x40fc70
  40fbec:	cmp    DWORD PTR [rip+0xe91d],0x2        # 0x41e510
  40fbf3:	mov    r8,QWORD PTR [rdi]
  40fbf6:	mov    QWORD PTR [rdx+rcx*8],r8
  40fbfa:	jne    0x40fc56
  40fbfc:	lea    rcx,[rip+0xe93d]        # 0x41e540
  40fc03:	call   QWORD PTR [rip+0xf8d3]        # 0x41f4dc
  40fc09:	jmp    0x40fc56
  40fc0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc10:	mov    eax,0x1
  40fc15:	mov    ecx,ebx
  40fc17:	shl    eax,cl
  40fc19:	mov    esi,eax
  40fc1b:	lea    eax,[rax-0x1]
  40fc1e:	cdqe   
  40fc20:	lea    rdx,[rax*4+0x27]
  40fc28:	shr    rdx,0x3
  40fc2c:	mov    edx,edx
  40fc2e:	lea    rcx,[rdx*8+0x0]
  40fc36:	call   0x410998
  40fc3b:	test   rax,rax
  40fc3e:	mov    rdi,rax
  40fc41:	je     0x40fcca
  40fc47:	cmp    DWORD PTR [rip+0xe8c2],0x2        # 0x41e510
  40fc4e:	mov    DWORD PTR [rdi+0x8],ebx
  40fc51:	mov    DWORD PTR [rdi+0xc],esi
  40fc54:	je     0x40fbfc
  40fc56:	mov    DWORD PTR [rdi+0x14],0x0
  40fc5d:	mov    DWORD PTR [rdi+0x10],0x0
  40fc64:	mov    rax,rdi
  40fc67:	add    rsp,0x20
  40fc6b:	pop    rbx
  40fc6c:	pop    rsi
  40fc6d:	pop    rdi
  40fc6e:	ret    
  40fc6f:	nop
  40fc70:	mov    ecx,ebx
  40fc72:	mov    eax,0x1
  40fc77:	mov    rdi,QWORD PTR [rip+0x2452]        # 0x4120d0
  40fc7e:	shl    eax,cl
  40fc80:	lea    rcx,[rip+0xdf39]        # 0x41dbc0
  40fc87:	lea    edx,[rax-0x1]
  40fc8a:	mov    esi,eax
  40fc8c:	mov    rax,rdi
  40fc8f:	movsxd rdx,edx
  40fc92:	sub    rax,rcx
  40fc95:	lea    rdx,[rdx*4+0x27]
  40fc9d:	mov    rcx,rax
  40fca0:	sar    rcx,0x3
  40fca4:	shr    rdx,0x3
  40fca8:	mov    edx,edx
  40fcaa:	add    rcx,rdx
  40fcad:	cmp    rcx,0x120
  40fcb4:	ja     0x40fc2e
  40fcba:	lea    rdx,[rdi+rdx*8]
  40fcbe:	mov    QWORD PTR [rip+0x240b],rdx        # 0x4120d0
  40fcc5:	jmp    0x40fc47
  40fcca:	xor    eax,eax
  40fccc:	jmp    0x40fc67
  40fcce:	xchg   ax,ax
  40fcd0:	push   rbx
  40fcd1:	sub    rsp,0x20
  40fcd5:	test   rcx,rcx
  40fcd8:	je     0x40fd09
  40fcda:	cmp    DWORD PTR [rcx+0x8],0x9
  40fcde:	jg     0x40fd10
  40fce0:	mov    rbx,rcx
  40fce3:	xor    ecx,ecx
  40fce5:	call   0x40faa0
  40fcea:	movsxd rdx,DWORD PTR [rbx+0x8]
  40fcee:	lea    rax,[rip+0xe7cb]        # 0x41e4c0
  40fcf5:	cmp    DWORD PTR [rip+0xe814],0x2        # 0x41e510
  40fcfc:	mov    rcx,QWORD PTR [rax+rdx*8]
  40fd00:	mov    QWORD PTR [rax+rdx*8],rbx
  40fd04:	mov    QWORD PTR [rbx],rcx
  40fd07:	je     0x40fd20
  40fd09:	add    rsp,0x20
  40fd0d:	pop    rbx
  40fd0e:	ret    
  40fd0f:	nop
  40fd10:	add    rsp,0x20
  40fd14:	pop    rbx
  40fd15:	jmp    0x4109d8
  40fd1a:	nop    WORD PTR [rax+rax*1+0x0]
  40fd20:	mov    rax,QWORD PTR [rip+0xf7b5]        # 0x41f4dc
  40fd27:	lea    rcx,[rip+0xe812]        # 0x41e540
  40fd2e:	add    rsp,0x20
  40fd32:	pop    rbx
  40fd33:	rex.W jmp rax
  40fd36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd40:	push   rbp
  40fd41:	push   rdi
  40fd42:	push   rsi
  40fd43:	push   rbx
  40fd44:	sub    rsp,0x28
  40fd48:	mov    esi,DWORD PTR [rcx+0x14]
  40fd4b:	xor    r9d,r9d
  40fd4e:	lea    r10,[rcx+0x18]
  40fd52:	mov    rdi,rcx
  40fd55:	movsxd rbx,r8d
  40fd58:	movsxd rdx,edx
  40fd5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd60:	mov    eax,DWORD PTR [r10+r9*4]
  40fd64:	imul   rax,rdx
  40fd68:	add    rax,rbx
  40fd6b:	mov    rbx,rax
  40fd6e:	mov    DWORD PTR [r10+r9*4],eax
  40fd72:	add    r9,0x1
  40fd76:	shr    rbx,0x20
  40fd7a:	cmp    esi,r9d
  40fd7d:	jg     0x40fd60
  40fd7f:	test   rbx,rbx
  40fd82:	mov    rax,rdi
  40fd85:	je     0x40fd9c
  40fd87:	cmp    esi,DWORD PTR [rdi+0xc]
  40fd8a:	jge    0x40fda5
  40fd8c:	movsxd rax,esi
  40fd8f:	add    esi,0x1
  40fd92:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  40fd96:	mov    DWORD PTR [rdi+0x14],esi
  40fd99:	mov    rax,rdi
  40fd9c:	add    rsp,0x28
  40fda0:	pop    rbx
  40fda1:	pop    rsi
  40fda2:	pop    rdi
  40fda3:	pop    rbp
  40fda4:	ret    
  40fda5:	mov    eax,DWORD PTR [rdi+0x8]
  40fda8:	lea    ecx,[rax+0x1]
  40fdab:	call   0x40fbc0
  40fdb0:	test   rax,rax
  40fdb3:	mov    rbp,rax
  40fdb6:	je     0x40fdee
  40fdb8:	lea    rcx,[rax+0x10]
  40fdbc:	movsxd rax,DWORD PTR [rdi+0x14]
  40fdc0:	lea    rdx,[rdi+0x10]
  40fdc4:	lea    r8,[rax*4+0x8]
  40fdcc:	call   0x410990
  40fdd1:	mov    rcx,rdi
  40fdd4:	mov    rdi,rbp
  40fdd7:	call   0x40fcd0
  40fddc:	movsxd rax,esi
  40fddf:	add    esi,0x1
  40fde2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  40fde6:	mov    DWORD PTR [rdi+0x14],esi
  40fde9:	mov    rax,rdi
  40fdec:	jmp    0x40fd9c
  40fdee:	xor    eax,eax
  40fdf0:	jmp    0x40fd9c
  40fdf2:	nop    DWORD PTR [rax+0x0]
  40fdf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe00:	push   rbx
  40fe01:	sub    rsp,0x20
  40fe05:	mov    ebx,ecx
  40fe07:	mov    ecx,0x1
  40fe0c:	call   0x40fbc0
  40fe11:	test   rax,rax
  40fe14:	je     0x40fe20
  40fe16:	mov    DWORD PTR [rax+0x18],ebx
  40fe19:	mov    DWORD PTR [rax+0x14],0x1
  40fe20:	add    rsp,0x20
  40fe24:	pop    rbx
  40fe25:	ret    
  40fe26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe30:	push   r14
  40fe32:	push   r13
  40fe34:	push   r12
  40fe36:	push   rbp
  40fe37:	push   rdi
  40fe38:	push   rsi
  40fe39:	push   rbx
  40fe3a:	sub    rsp,0x20
  40fe3e:	movsxd r13,DWORD PTR [rcx+0x14]
  40fe42:	movsxd rbx,DWORD PTR [rdx+0x14]
  40fe46:	mov    r12,rcx
  40fe49:	mov    r14,rdx
  40fe4c:	cmp    r13d,ebx
  40fe4f:	jl     0x40ff51
  40fe55:	mov    eax,ebx
  40fe57:	movsxd rbx,r13d
  40fe5a:	movsxd r13,eax
  40fe5d:	xor    eax,eax
  40fe5f:	lea    esi,[rbx+r13*1]
  40fe63:	cmp    esi,DWORD PTR [r12+0xc]
  40fe68:	setg   al
  40fe6b:	add    eax,DWORD PTR [r12+0x8]
  40fe70:	mov    ecx,eax
  40fe72:	call   0x40fbc0
  40fe77:	test   rax,rax
  40fe7a:	je     0x40ff5c
  40fe80:	lea    rdi,[rax+0x18]
  40fe84:	movsxd rdx,esi
  40fe87:	lea    rbp,[rdi+rdx*4]
  40fe8b:	mov    r8,rdi
  40fe8e:	cmp    rdi,rbp
  40fe91:	jae    0x40fea3
  40fe93:	mov    DWORD PTR [r8],0x0
  40fe9a:	add    r8,0x4
  40fe9e:	cmp    rbp,r8
  40fea1:	ja     0x40fe93
  40fea3:	lea    rdx,[r14+0x18]
  40fea7:	add    r12,0x18
  40feab:	lea    rbx,[r12+rbx*4]
  40feaf:	lea    r13,[rdx+r13*4]
  40feb3:	cmp    rdx,r13
  40feb6:	jae    0x40ff19
  40feb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fec0:	add    rdx,0x4
  40fec4:	mov    r11d,DWORD PTR [rdx-0x4]
  40fec8:	test   r11d,r11d
  40fecb:	je     0x40ff10
  40fecd:	mov    r9,rdi
  40fed0:	mov    r8,r12
  40fed3:	xor    r10d,r10d
  40fed6:	jmp    0x40fee3
  40fed8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fee0:	mov    r9,r14
  40fee3:	add    r8,0x4
  40fee7:	mov    ecx,DWORD PTR [r8-0x4]
  40feeb:	mov    r14d,DWORD PTR [r9]
  40feee:	imul   rcx,r11
  40fef2:	add    rcx,r14
  40fef5:	lea    r14,[r9+0x4]
  40fef9:	add    rcx,r10
  40fefc:	mov    r10,rcx
  40feff:	mov    DWORD PTR [r14-0x4],ecx
  40ff03:	shr    r10,0x20
  40ff07:	cmp    rbx,r8
  40ff0a:	ja     0x40fee0
  40ff0c:	mov    DWORD PTR [r9+0x4],r10d
  40ff10:	add    rdi,0x4
  40ff14:	cmp    r13,rdx
  40ff17:	ja     0x40fec0
  40ff19:	test   esi,esi
  40ff1b:	jle    0x40ff3f
  40ff1d:	mov    r8d,DWORD PTR [rbp-0x4]
  40ff21:	lea    rdx,[rbp-0x4]
  40ff25:	test   r8d,r8d
  40ff28:	je     0x40ff3a
  40ff2a:	jmp    0x40ff3f
  40ff2c:	nop    DWORD PTR [rax+0x0]
  40ff30:	sub    rdx,0x4
  40ff34:	mov    ecx,DWORD PTR [rdx]
  40ff36:	test   ecx,ecx
  40ff38:	jne    0x40ff3f
  40ff3a:	sub    esi,0x1
  40ff3d:	jne    0x40ff30
  40ff3f:	mov    DWORD PTR [rax+0x14],esi
  40ff42:	add    rsp,0x20
  40ff46:	pop    rbx
  40ff47:	pop    rsi
  40ff48:	pop    rdi
  40ff49:	pop    rbp
  40ff4a:	pop    r12
  40ff4c:	pop    r13
  40ff4e:	pop    r14
  40ff50:	ret    
  40ff51:	mov    r12,rdx
  40ff54:	mov    r14,rcx
  40ff57:	jmp    0x40fe5d
  40ff5c:	xor    eax,eax
  40ff5e:	jmp    0x40ff42
  40ff60:	push   rbp
  40ff61:	push   rdi
  40ff62:	push   rsi
  40ff63:	push   rbx
  40ff64:	sub    rsp,0x28
  40ff68:	mov    eax,edx
  40ff6a:	mov    rbp,rcx
  40ff6d:	mov    ebx,edx
  40ff6f:	and    eax,0x3
  40ff72:	jne    0x410000
  40ff78:	sar    ebx,0x2
  40ff7b:	mov    rax,rbp
  40ff7e:	test   ebx,ebx
  40ff80:	je     0x40ffcc
  40ff82:	mov    rdi,QWORD PTR [rip+0xdbf7]        # 0x41db80
  40ff89:	test   rdi,rdi
  40ff8c:	jne    0x40ffa2
  40ff8e:	jmp    0x41004d
  40ff93:	sar    ebx,1
  40ff95:	je     0x40ffc9
  40ff97:	mov    rsi,QWORD PTR [rdi]
  40ff9a:	test   rsi,rsi
  40ff9d:	je     0x40ffd5
  40ff9f:	mov    rdi,rsi
  40ffa2:	test   bl,0x1
  40ffa5:	je     0x40ff93
  40ffa7:	mov    rdx,rdi
  40ffaa:	mov    rcx,rbp
  40ffad:	call   0x40fe30
  40ffb2:	test   rax,rax
  40ffb5:	mov    rsi,rax
  40ffb8:	je     0x410023
  40ffba:	mov    rcx,rbp
  40ffbd:	mov    rbp,rsi
  40ffc0:	call   0x40fcd0
  40ffc5:	sar    ebx,1
  40ffc7:	jne    0x40ff97
  40ffc9:	mov    rax,rbp
  40ffcc:	add    rsp,0x28
  40ffd0:	pop    rbx
  40ffd1:	pop    rsi
  40ffd2:	pop    rdi
  40ffd3:	pop    rbp
  40ffd4:	ret    
  40ffd5:	mov    ecx,0x1
  40ffda:	call   0x40faa0
  40ffdf:	mov    rsi,QWORD PTR [rdi]
  40ffe2:	test   rsi,rsi
  40ffe5:	je     0x41002e
  40ffe7:	cmp    DWORD PTR [rip+0xe522],0x2        # 0x41e510
  40ffee:	jne    0x40ff9f
  40fff0:	lea    rcx,[rip+0xe571]        # 0x41e568
  40fff7:	call   QWORD PTR [rip+0xf4df]        # 0x41f4dc
  40fffd:	jmp    0x40ff9f
  40ffff:	nop
  410000:	sub    eax,0x1
  410003:	lea    rdx,[rip+0x83f6]        # 0x418400
  41000a:	xor    r8d,r8d
  41000d:	cdqe   
  41000f:	mov    edx,DWORD PTR [rdx+rax*4]
  410012:	call   0x40fd40
  410017:	test   rax,rax
  41001a:	mov    rbp,rax
  41001d:	jne    0x40ff78
  410023:	xor    eax,eax
  410025:	add    rsp,0x28
  410029:	pop    rbx
  41002a:	pop    rsi
  41002b:	pop    rdi
  41002c:	pop    rbp
  41002d:	ret    
  41002e:	mov    rdx,rdi
  410031:	mov    rcx,rdi
  410034:	call   0x40fe30
  410039:	test   rax,rax
  41003c:	mov    rsi,rax
  41003f:	mov    QWORD PTR [rdi],rax
  410042:	je     0x410023
  410044:	mov    QWORD PTR [rax],0x0
  41004b:	jmp    0x40ffe7
  41004d:	mov    ecx,0x1
  410052:	call   0x40faa0
  410057:	mov    rdi,QWORD PTR [rip+0xdb22]        # 0x41db80
  41005e:	test   rdi,rdi
  410061:	je     0x410082
  410063:	cmp    DWORD PTR [rip+0xe4a6],0x2        # 0x41e510
  41006a:	jne    0x40ffa2
  410070:	lea    rcx,[rip+0xe4f1]        # 0x41e568
  410077:	call   QWORD PTR [rip+0xf45f]        # 0x41f4dc
  41007d:	jmp    0x40ffa2
  410082:	mov    ecx,0x1
  410087:	call   0x40fbc0
  41008c:	test   rax,rax
  41008f:	mov    rdi,rax
  410092:	je     0x4100b2
  410094:	mov    DWORD PTR [rax+0x18],0x271
  41009b:	mov    DWORD PTR [rax+0x14],0x1
  4100a2:	mov    QWORD PTR [rip+0xdad7],rax        # 0x41db80
  4100a9:	mov    QWORD PTR [rax],0x0
  4100b0:	jmp    0x410063
  4100b2:	mov    QWORD PTR [rip+0xdac3],0x0        # 0x41db80
  4100bd:	xor    eax,eax
  4100bf:	jmp    0x410025
  4100c4:	xchg   ax,ax
  4100c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4100d0:	push   r13
  4100d2:	push   r12
  4100d4:	push   rbp
  4100d5:	push   rdi
  4100d6:	push   rsi
  4100d7:	push   rbx
  4100d8:	sub    rsp,0x28
  4100dc:	mov    rdi,rcx
  4100df:	mov    ebp,edx
  4100e1:	mov    esi,edx
  4100e3:	mov    r12d,DWORD PTR [rdi+0x14]
  4100e7:	sar    ebp,0x5
  4100ea:	mov    eax,DWORD PTR [rdi+0xc]
  4100ed:	mov    ecx,DWORD PTR [rcx+0x8]
  4100f0:	add    r12d,ebp
  4100f3:	lea    ebx,[r12+0x1]
  4100f8:	cmp    ebx,eax
  4100fa:	jle    0x410109
  4100fc:	nop    DWORD PTR [rax+0x0]
  410100:	add    eax,eax
  410102:	add    ecx,0x1
  410105:	cmp    ebx,eax
  410107:	jg     0x410100
  410109:	call   0x40fbc0
  41010e:	test   rax,rax
  410111:	mov    r13,rax
  410114:	je     0x4101df
  41011a:	test   ebp,ebp
  41011c:	lea    r8,[rax+0x18]
  410120:	jle    0x4101d7
  410126:	lea    eax,[rbp-0x1]
  410129:	lea    r9,[r8+rax*4+0x4]
  41012e:	xchg   ax,ax
  410130:	add    r8,0x4
  410134:	mov    DWORD PTR [r8-0x4],0x0
  41013c:	cmp    r8,r9
  41013f:	jne    0x410130
  410141:	movsxd rax,DWORD PTR [rdi+0x14]
  410145:	lea    r8,[rdi+0x18]
  410149:	mov    edx,esi
  41014b:	and    edx,0x1f
  41014e:	lea    rbp,[r8+rax*4]
  410152:	je     0x4101c0
  410154:	mov    eax,0x20
  410159:	xor    r11d,r11d
  41015c:	sub    eax,edx
  41015e:	jmp    0x410163
  410160:	mov    r9,rsi
  410163:	mov    r10d,DWORD PTR [r8]
  410166:	mov    ecx,edx
  410168:	lea    rsi,[r9+0x4]
  41016c:	add    r8,0x4
  410170:	shl    r10d,cl
  410173:	mov    ecx,eax
  410175:	or     r10d,r11d
  410178:	mov    DWORD PTR [rsi-0x4],r10d
  41017c:	mov    r11d,DWORD PTR [r8-0x4]
  410180:	shr    r11d,cl
  410183:	cmp    rbp,r8
  410186:	ja     0x410160
  410188:	add    r12d,0x2
  41018c:	test   r11d,r11d
  41018f:	mov    DWORD PTR [r9+0x4],r11d
  410193:	cmovne ebx,r12d
  410197:	sub    ebx,0x1
  41019a:	mov    rcx,rdi
  41019d:	mov    DWORD PTR [r13+0x14],ebx
  4101a1:	call   0x40fcd0
  4101a6:	mov    rax,r13
  4101a9:	add    rsp,0x28
  4101ad:	pop    rbx
  4101ae:	pop    rsi
  4101af:	pop    rdi
  4101b0:	pop    rbp
  4101b1:	pop    r12
  4101b3:	pop    r13
  4101b5:	ret    
  4101b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101c0:	add    r8,0x4
  4101c4:	mov    edx,DWORD PTR [r8-0x4]
  4101c8:	add    r9,0x4
  4101cc:	cmp    rbp,r8
  4101cf:	mov    DWORD PTR [r9-0x4],edx
  4101d3:	ja     0x4101c0
  4101d5:	jmp    0x410197
  4101d7:	mov    r9,r8
  4101da:	jmp    0x410141
  4101df:	xor    eax,eax
  4101e1:	jmp    0x4101a9
  4101e3:	nop    DWORD PTR [rax]
  4101e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101f0:	movsxd r8,DWORD PTR [rdx+0x14]
  4101f4:	mov    eax,DWORD PTR [rcx+0x14]
  4101f7:	sub    eax,r8d
  4101fa:	test   eax,eax
  4101fc:	jne    0x410232
  4101fe:	shl    r8,0x2
  410202:	add    rcx,0x18
  410206:	lea    rax,[rcx+r8*1]
  41020a:	lea    rdx,[rdx+r8*1+0x18]
  41020f:	jmp    0x410216
  410211:	cmp    rcx,rax
  410214:	jae    0x410230
  410216:	sub    rdx,0x4
  41021a:	sub    rax,0x4
  41021e:	mov    r9d,DWORD PTR [rdx]
  410221:	cmp    DWORD PTR [rax],r9d
  410224:	je     0x410211
  410226:	sbb    eax,eax
  410228:	or     eax,0x1
  41022b:	ret    
  41022c:	nop    DWORD PTR [rax+0x0]
  410230:	xor    eax,eax
  410232:	repz ret 
  410234:	xchg   ax,ax
  410236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410240:	push   rdi
  410241:	push   rsi
  410242:	push   rbx
  410243:	sub    rsp,0x20
  410247:	mov    rsi,rcx
  41024a:	mov    rdi,rdx
  41024d:	call   0x4101f0
  410252:	test   eax,eax
  410254:	je     0x410340
  41025a:	mov    ebx,0x0
  41025f:	js     0x410362
  410265:	mov    ecx,DWORD PTR [rsi+0x8]
  410268:	call   0x40fbc0
  41026d:	test   rax,rax
  410270:	je     0x410372
  410276:	movsxd rdx,DWORD PTR [rsi+0x14]
  41027a:	lea    rcx,[rsi+0x18]
  41027e:	mov    DWORD PTR [rax+0x10],ebx
  410281:	lea    r10,[rdi+0x18]
  410285:	xor    r9d,r9d
  410288:	mov    rbx,rdx
  41028b:	lea    rsi,[rcx+rdx*4]
  41028f:	movsxd rdx,DWORD PTR [rdi+0x14]
  410293:	lea    rdi,[r10+rdx*4]
  410297:	lea    rdx,[rax+0x18]
  41029b:	nop    DWORD PTR [rax+rax*1+0x0]
  4102a0:	add    rcx,0x4
  4102a4:	add    r10,0x4
  4102a8:	mov    r11d,DWORD PTR [r10-0x4]
  4102ac:	mov    r8d,DWORD PTR [rcx-0x4]
  4102b0:	add    rdx,0x4
  4102b4:	sub    r8,r11
  4102b7:	sub    r8,r9
  4102ba:	mov    r9,r8
  4102bd:	mov    r11d,r8d
  4102c0:	mov    DWORD PTR [rdx-0x4],r8d
  4102c4:	shr    r9,0x20
  4102c8:	and    r9d,0x1
  4102cc:	cmp    rdi,r10
  4102cf:	ja     0x4102a0
  4102d1:	cmp    rsi,rcx
  4102d4:	mov    rdi,rdx
  4102d7:	mov    r10,rcx
  4102da:	jbe    0x410316
  4102dc:	nop    DWORD PTR [rax+0x0]
  4102e0:	add    rcx,0x4
  4102e4:	mov    r8d,DWORD PTR [rcx-0x4]
  4102e8:	add    rdx,0x4
  4102ec:	sub    r8,r9
  4102ef:	mov    r9,r8
  4102f2:	mov    r11d,r8d
  4102f5:	mov    DWORD PTR [rdx-0x4],r8d
  4102f9:	shr    r9,0x20
  4102fd:	and    r9d,0x1
  410301:	cmp    rsi,rcx
  410304:	ja     0x4102e0
  410306:	not    r10
  410309:	lea    rdx,[r10+rsi*1]
  41030d:	shr    rdx,0x2
  410311:	lea    rdx,[rdi+rdx*4+0x4]
  410316:	sub    rdx,0x4
  41031a:	test   r11d,r11d
  41031d:	jne    0x41032d
  41031f:	nop
  410320:	sub    rdx,0x4
  410324:	mov    ecx,DWORD PTR [rdx]
  410326:	sub    ebx,0x1
  410329:	test   ecx,ecx
  41032b:	je     0x410320
  41032d:	mov    DWORD PTR [rax+0x14],ebx
  410330:	add    rsp,0x20
  410334:	pop    rbx
  410335:	pop    rsi
  410336:	pop    rdi
  410337:	ret    
  410338:	nop    DWORD PTR [rax+rax*1+0x0]
  410340:	xor    ecx,ecx
  410342:	call   0x40fbc0
  410347:	test   rax,rax
  41034a:	je     0x410372
  41034c:	mov    DWORD PTR [rax+0x14],0x1
  410353:	mov    DWORD PTR [rax+0x18],0x0
  41035a:	add    rsp,0x20
  41035e:	pop    rbx
  41035f:	pop    rsi
  410360:	pop    rdi
  410361:	ret    
  410362:	mov    rax,rsi
  410365:	mov    bl,0x1
  410367:	mov    rsi,rdi
  41036a:	mov    rdi,rax
  41036d:	jmp    0x410265
  410372:	xor    eax,eax
  410374:	jmp    0x410330
  410376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410380:	push   rsi
  410381:	push   rbx
  410382:	sub    rsp,0x18
  410386:	movsxd rax,DWORD PTR [rcx+0x14]
  41038a:	lea    r10,[rcx+0x18]
  41038e:	mov    ecx,0x20
  410393:	lea    r9,[r10+rax*4]
  410397:	mov    eax,DWORD PTR [r9-0x4]
  41039b:	lea    rbx,[r9-0x4]
  41039f:	bsr    r8d,eax
  4103a3:	xor    r8d,0x1f
  4103a7:	sub    ecx,r8d
  4103aa:	cmp    r8d,0xa
  4103ae:	mov    DWORD PTR [rdx],ecx
  4103b0:	jg     0x410400
  4103b2:	mov    ecx,0xb
  4103b7:	mov    r11d,eax
  4103ba:	xor    esi,esi
  4103bc:	sub    ecx,r8d
  4103bf:	shr    r11d,cl
  4103c2:	or     r11d,0x3ff00000
  4103c9:	shl    r11,0x20
  4103cd:	cmp    r10,rbx
  4103d0:	jae    0x4103d8
  4103d2:	mov    esi,DWORD PTR [r9-0x8]
  4103d6:	shr    esi,cl
  4103d8:	lea    ecx,[r8+0x15]
  4103dc:	shl    eax,cl
  4103de:	mov    edx,eax
  4103e0:	mov    eax,esi
  4103e2:	or     eax,edx
  4103e4:	or     rax,r11
  4103e7:	mov    QWORD PTR [rsp+0x8],rax
  4103ec:	movsd  xmm0,QWORD PTR [rsp+0x8]
  4103f2:	add    rsp,0x18
  4103f6:	pop    rbx
  4103f7:	pop    rsi
  4103f8:	ret    
  4103f9:	nop    DWORD PTR [rax+0x0]
  410400:	cmp    r10,rbx
  410403:	jae    0x410460
  410405:	mov    r11d,r8d
  410408:	lea    rsi,[r9-0x8]
  41040c:	mov    edx,DWORD PTR [r9-0x8]
  410410:	sub    r11d,0xb
  410414:	je     0x410482
  410416:	mov    ebx,0x2b
  41041b:	mov    ecx,r11d
  41041e:	sub    ebx,r8d
  410421:	shl    eax,cl
  410423:	mov    r8d,edx
  410426:	mov    ecx,ebx
  410428:	shr    r8d,cl
  41042b:	or     eax,r8d
  41042e:	xor    r8d,r8d
  410431:	or     eax,0x3ff00000
  410436:	shl    rax,0x20
  41043a:	cmp    r10,rsi
  41043d:	jae    0x410446
  41043f:	mov    r8d,DWORD PTR [r9-0xc]
  410443:	shr    r8d,cl
  410446:	mov    ecx,r11d
  410449:	shl    edx,cl
  41044b:	or     r8d,edx
  41044e:	movabs rdx,0xffffffff00000000
  410458:	and    rax,rdx
  41045b:	or     rax,r8
  41045e:	jmp    0x4103e7
  410460:	mov    r11d,r8d
  410463:	sub    r11d,0xb
  410467:	je     0x410480
  410469:	mov    ecx,r11d
  41046c:	xor    r8d,r8d
  41046f:	xor    edx,edx
  410471:	shl    eax,cl
  410473:	or     eax,0x3ff00000
  410478:	shl    rax,0x20
  41047c:	jmp    0x410446
  41047e:	xchg   ax,ax
  410480:	xor    edx,edx
  410482:	or     eax,0x3ff00000
  410487:	shl    rax,0x20
  41048b:	or     rax,rdx
  41048e:	jmp    0x4103e7
  410493:	nop    DWORD PTR [rax]
  410496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4104a0:	push   rdi
  4104a1:	push   rsi
  4104a2:	push   rbx
  4104a3:	sub    rsp,0x20
  4104a7:	mov    ecx,0x1
  4104ac:	movq   rbx,xmm0
  4104b1:	mov    rdi,rdx
  4104b4:	mov    rsi,r8
  4104b7:	call   0x40fbc0
  4104bc:	test   rax,rax
  4104bf:	je     0x4105a5
  4104c5:	mov    r9,rbx
  4104c8:	shr    r9,0x20
  4104cc:	mov    r10d,r9d
  4104cf:	and    r9d,0x7fffffff
  4104d6:	and    r10d,0xfffff
  4104dd:	shr    r9d,0x14
  4104e1:	mov    edx,r10d
  4104e4:	or     edx,0x100000
  4104ea:	test   r9d,r9d
  4104ed:	cmovne r10d,edx
  4104f1:	test   ebx,ebx
  4104f3:	jne    0x410534
  4104f5:	xor    ecx,ecx
  4104f7:	mov    DWORD PTR [rax+0x14],0x1
  4104fe:	mov    edx,0x1
  410503:	tzcnt  ecx,r10d
  410508:	shr    r10d,cl
  41050b:	test   r9d,r9d
  41050e:	lea    r11d,[rcx+0x20]
  410512:	mov    DWORD PTR [rax+0x18],r10d
  410516:	je     0x410573
  410518:	lea    edx,[r11+r9*1-0x433]
  410520:	mov    DWORD PTR [rdi],edx
  410522:	mov    edx,0x35
  410527:	sub    edx,r11d
  41052a:	mov    DWORD PTR [rsi],edx
  41052c:	add    rsp,0x20
  410530:	pop    rbx
  410531:	pop    rsi
  410532:	pop    rdi
  410533:	ret    
  410534:	xor    r11d,r11d
  410537:	tzcnt  r11d,ebx
  41053c:	mov    ecx,r11d
  41053f:	shr    ebx,cl
  410541:	test   r11d,r11d
  410544:	je     0x4105a0
  410546:	mov    ecx,0x20
  41054b:	mov    edx,r10d
  41054e:	sub    ecx,r11d
  410551:	shl    edx,cl
  410553:	mov    ecx,r11d
  410556:	or     ebx,edx
  410558:	shr    r10d,cl
  41055b:	mov    DWORD PTR [rax+0x18],ebx
  41055e:	cmp    r10d,0x1
  410562:	mov    DWORD PTR [rax+0x1c],r10d
  410566:	sbb    edx,edx
  410568:	add    edx,0x2
  41056b:	test   r9d,r9d
  41056e:	mov    DWORD PTR [rax+0x14],edx
  410571:	jne    0x410518
  410573:	movsxd rcx,edx
  410576:	shl    edx,0x5
  410579:	sub    r11d,0x432
  410580:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  410585:	mov    DWORD PTR [rdi],r11d
  410588:	xor    ecx,0x1f
  41058b:	sub    edx,ecx
  41058d:	mov    DWORD PTR [rsi],edx
  41058f:	add    rsp,0x20
  410593:	pop    rbx
  410594:	pop    rsi
  410595:	pop    rdi
  410596:	ret    
  410597:	nop    WORD PTR [rax+rax*1+0x0]
  4105a0:	mov    DWORD PTR [rax+0x18],ebx
  4105a3:	jmp    0x41055e
  4105a5:	xor    eax,eax
  4105a7:	jmp    0x41052c
  4105a9:	nop    DWORD PTR [rax+0x0]
  4105b0:	mov    rax,rcx
  4105b3:	lea    rcx,[rdx+0x1]
  4105b7:	movzx  edx,BYTE PTR [rdx]
  4105ba:	test   dl,dl
  4105bc:	mov    BYTE PTR [rax],dl
  4105be:	je     0x4105d2
  4105c0:	add    rcx,0x1
  4105c4:	movzx  edx,BYTE PTR [rcx-0x1]
  4105c8:	add    rax,0x1
  4105cc:	test   dl,dl
  4105ce:	mov    BYTE PTR [rax],dl
  4105d0:	jne    0x4105c0
  4105d2:	repz ret 
  4105d4:	nop
  4105d5:	nop
  4105d6:	nop
  4105d7:	nop
  4105d8:	nop
  4105d9:	nop
  4105da:	nop
  4105db:	nop
  4105dc:	nop
  4105dd:	nop
  4105de:	nop
  4105df:	nop
  4105e0:	push   r13
  4105e2:	push   r12
  4105e4:	push   rbp
  4105e5:	push   rdi
  4105e6:	push   rsi
  4105e7:	push   rbx
  4105e8:	sub    rsp,0x28
  4105ec:	mov    rsi,rcx
  4105ef:	lea    ecx,[r8+0x8]
  4105f3:	mov    ebp,edx
  4105f5:	mov    edx,0x38e38e39
  4105fa:	mov    edi,r8d
  4105fd:	mov    ebx,r9d
  410600:	mov    eax,ecx
  410602:	sar    ecx,0x1f
  410605:	imul   edx
  410607:	sar    edx,1
  410609:	sub    edx,ecx
  41060b:	cmp    edx,0x1
  41060e:	jle    0x4106d4
  410614:	mov    eax,0x1
  410619:	xor    ecx,ecx
  41061b:	nop    DWORD PTR [rax+rax*1+0x0]
  410620:	add    eax,eax
  410622:	add    ecx,0x1
  410625:	cmp    edx,eax
  410627:	jg     0x410620
  410629:	call   0x40fbc0
  41062e:	cmp    ebp,0x9
  410631:	mov    DWORD PTR [rax+0x18],ebx
  410634:	mov    DWORD PTR [rax+0x14],0x1
  41063b:	jle    0x4106c0
  410641:	lea    rbx,[rsi+0x9]
  410645:	lea    r12d,[rbp-0xa]
  410649:	lea    r13,[rsi+r12*1+0xa]
  41064e:	mov    rsi,rbx
  410651:	add    rsi,0x1
  410655:	movsx  r8d,BYTE PTR [rsi-0x1]
  41065a:	mov    edx,0xa
  41065f:	mov    rcx,rax
  410662:	sub    r8d,0x30
  410666:	call   0x40fd40
  41066b:	cmp    rsi,r13
  41066e:	jne    0x410651
  410670:	movsxd rdx,DWORD PTR [rsp+0x80]
  410678:	lea    r9,[r12+rdx*1+0x1]
  41067d:	add    rbx,r9
  410680:	cmp    edi,ebp
  410682:	jle    0x4106af
  410684:	sub    edi,0x1
  410687:	sub    edi,ebp
  410689:	lea    rsi,[rbx+rdi*1+0x1]
  41068e:	xchg   ax,ax
  410690:	add    rbx,0x1
  410694:	movsx  r8d,BYTE PTR [rbx-0x1]
  410699:	mov    edx,0xa
  41069e:	mov    rcx,rax
  4106a1:	sub    r8d,0x30
  4106a5:	call   0x40fd40
  4106aa:	cmp    rbx,rsi
  4106ad:	jne    0x410690
  4106af:	add    rsp,0x28
  4106b3:	pop    rbx
  4106b4:	pop    rsi
  4106b5:	pop    rdi
  4106b6:	pop    rbp
  4106b7:	pop    r12
  4106b9:	pop    r13
  4106bb:	ret    
  4106bc:	nop    DWORD PTR [rax+0x0]
  4106c0:	movsxd rdx,DWORD PTR [rsp+0x80]
  4106c8:	mov    ebp,0x9
  4106cd:	lea    rbx,[rsi+rdx*1+0x9]
  4106d2:	jmp    0x410680
  4106d4:	xor    ecx,ecx
  4106d6:	jmp    0x410629
  4106db:	nop    DWORD PTR [rax+rax*1+0x0]
  4106e0:	push   rdi
  4106e1:	push   rsi
  4106e2:	push   rbx
  4106e3:	sub    rsp,0x50
  4106e7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4106ec:	mov    rsi,rdx
  4106ef:	lea    rdx,[rsp+0x38]
  4106f4:	mov    rdi,rcx
  4106f7:	call   0x410380
  4106fc:	lea    rdx,[rsp+0x3c]
  410701:	mov    rcx,rsi
  410704:	movq   rbx,xmm0
  410709:	movapd xmm6,xmm0
  41070d:	call   0x410380
  410712:	mov    eax,DWORD PTR [rsp+0x38]
  410716:	sub    eax,DWORD PTR [rsp+0x3c]
  41071a:	movq   rcx,xmm0
  41071f:	mov    r8d,eax
  410722:	mov    eax,DWORD PTR [rdi+0x14]
  410725:	sub    eax,DWORD PTR [rsi+0x14]
  410728:	shl    eax,0x5
  41072b:	add    eax,r8d
  41072e:	test   eax,eax
  410730:	jle    0x410770
  410732:	movq   rdx,xmm6
  410737:	shl    eax,0x14
  41073a:	shr    rdx,0x20
  41073e:	add    eax,edx
  410740:	shl    rax,0x20
  410744:	mov    rdx,rax
  410747:	mov    eax,ebx
  410749:	or     rax,rdx
  41074c:	mov    QWORD PTR [rsp+0x28],rax
  410751:	movsd  xmm6,QWORD PTR [rsp+0x28]
  410757:	divsd  xmm6,xmm0
  41075b:	movapd xmm0,xmm6
  41075f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  410764:	add    rsp,0x50
  410768:	pop    rbx
  410769:	pop    rsi
  41076a:	pop    rdi
  41076b:	ret    
  41076c:	nop    DWORD PTR [rax+0x0]
  410770:	movq   rdx,xmm0
  410775:	shl    eax,0x14
  410778:	shr    rdx,0x20
  41077c:	mov    ebx,edx
  41077e:	sub    ebx,eax
  410780:	mov    rax,rbx
  410783:	shl    rax,0x20
  410787:	mov    rdx,rax
  41078a:	mov    eax,ecx
  41078c:	or     rax,rdx
  41078f:	mov    QWORD PTR [rsp+0x28],rax
  410794:	movsd  xmm0,QWORD PTR [rsp+0x28]
  41079a:	jmp    0x410757
  41079c:	nop    DWORD PTR [rax+0x0]
  4107a0:	mov    r8,QWORD PTR [rcx]
  4107a3:	jmp    0x4107be
  4107a5:	movsx  eax,BYTE PTR [r8]
  4107a9:	lea    r11d,[rax-0x41]
  4107ad:	lea    r10d,[rax+0x20]
  4107b1:	cmp    r11d,0x19
  4107b5:	cmovbe eax,r10d
  4107b9:	cmp    eax,r9d
  4107bc:	jne    0x4107e0
  4107be:	add    rdx,0x1
  4107c2:	movsx  r9d,BYTE PTR [rdx-0x1]
  4107c7:	add    r8,0x1
  4107cb:	test   r9d,r9d
  4107ce:	jne    0x4107a5
  4107d0:	mov    QWORD PTR [rcx],r8
  4107d3:	mov    eax,0x1
  4107d8:	ret    
  4107d9:	nop    DWORD PTR [rax+0x0]
  4107e0:	xor    eax,eax
  4107e2:	ret    
  4107e3:	nop    DWORD PTR [rax]
  4107e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4107f0:	sub    edx,0x1
  4107f3:	lea    rax,[r8+0x18]
  4107f7:	sar    edx,0x5
  4107fa:	movsxd rdx,edx
  4107fd:	lea    r11,[rcx+rdx*4+0x4]
  410802:	movsxd rdx,DWORD PTR [r8+0x14]
  410806:	lea    r10,[rax+rdx*4]
  41080a:	cmp    rax,r10
  41080d:	jae    0x41084b
  41080f:	mov    rdx,rcx
  410812:	add    rax,0x4
  410816:	mov    r9d,DWORD PTR [rax-0x4]
  41081a:	add    rdx,0x4
  41081e:	cmp    r10,rax
  410821:	mov    DWORD PTR [rdx-0x4],r9d
  410825:	ja     0x410812
  410827:	sub    r10,r8
  41082a:	lea    rax,[r10-0x19]
  41082e:	shr    rax,0x2
  410832:	lea    rcx,[rcx+rax*4+0x4]
  410837:	cmp    r11,rcx
  41083a:	jbe    0x410850
  41083c:	nop    DWORD PTR [rax+0x0]
  410840:	add    rcx,0x4
  410844:	mov    DWORD PTR [rcx-0x4],0x0
  41084b:	cmp    r11,rcx
  41084e:	ja     0x410840
  410850:	repz ret 
  410852:	nop    DWORD PTR [rax+0x0]
  410856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410860:	movsxd rax,DWORD PTR [rcx+0x14]
  410864:	mov    r9d,edx
  410867:	lea    r8,[rcx+0x18]
  41086b:	sar    r9d,0x5
  41086f:	cmp    eax,r9d
  410872:	jge    0x4108a1
  410874:	lea    r9,[r8+rax*4]
  410878:	cmp    r8,r9
  41087b:	jae    0x4108e6
  41087d:	mov    eax,DWORD PTR [r9-0x4]
  410881:	lea    rdx,[r9-0x4]
  410885:	test   eax,eax
  410887:	je     0x41089a
  410889:	jmp    0x4108e0
  41088b:	nop    DWORD PTR [rax+rax*1+0x0]
  410890:	sub    rdx,0x4
  410894:	mov    ecx,DWORD PTR [rdx]
  410896:	test   ecx,ecx
  410898:	jne    0x4108e0
  41089a:	cmp    r8,rdx
  41089d:	jb     0x410890
  41089f:	repz ret 
  4108a1:	jle    0x4108d0
  4108a3:	mov    ecx,edx
  4108a5:	movsxd r9,r9d
  4108a8:	and    ecx,0x1f
  4108ab:	lea    r9,[r8+r9*4]
  4108af:	je     0x410878
  4108b1:	mov    r10d,DWORD PTR [r9]
  4108b4:	mov    eax,r10d
  4108b7:	shr    eax,cl
  4108b9:	shl    eax,cl
  4108bb:	mov    edx,eax
  4108bd:	mov    eax,0x1
  4108c2:	cmp    edx,r10d
  4108c5:	je     0x410878
  4108c7:	repz ret 
  4108c9:	nop    DWORD PTR [rax+0x0]
  4108d0:	movsxd r9,r9d
  4108d3:	lea    r9,[r8+r9*4]
  4108d7:	jmp    0x410878
  4108d9:	nop    DWORD PTR [rax+0x0]
  4108e0:	mov    eax,0x1
  4108e5:	ret    
  4108e6:	xor    eax,eax
  4108e8:	ret    
  4108e9:	nop
  4108ea:	nop
  4108eb:	nop
  4108ec:	nop
  4108ed:	nop
  4108ee:	nop
  4108ef:	nop
  4108f0:	jmp    QWORD PTR [rip+0xee3e]        # 0x41f734
  4108f6:	nop
  4108f7:	nop
  4108f8:	jmp    QWORD PTR [rip+0xee2e]        # 0x41f72c
  4108fe:	nop
  4108ff:	nop
  410900:	jmp    QWORD PTR [rip+0xee1e]        # 0x41f724
  410906:	nop
  410907:	nop
  410908:	jmp    QWORD PTR [rip+0xee0e]        # 0x41f71c
  41090e:	nop
  41090f:	nop
  410910:	jmp    QWORD PTR [rip+0xedfe]        # 0x41f714
  410916:	nop
  410917:	nop
  410918:	jmp    QWORD PTR [rip+0xedee]        # 0x41f70c
  41091e:	nop
  41091f:	nop
  410920:	jmp    QWORD PTR [rip+0xedde]        # 0x41f704
  410926:	nop
  410927:	nop
  410928:	jmp    QWORD PTR [rip+0xedce]        # 0x41f6fc
  41092e:	nop
  41092f:	nop
  410930:	jmp    QWORD PTR [rip+0xedbe]        # 0x41f6f4
  410936:	nop
  410937:	nop
  410938:	jmp    QWORD PTR [rip+0xedae]        # 0x41f6ec
  41093e:	nop
  41093f:	nop
  410940:	jmp    QWORD PTR [rip+0xed9e]        # 0x41f6e4
  410946:	nop
  410947:	nop
  410948:	jmp    QWORD PTR [rip+0xed8e]        # 0x41f6dc
  41094e:	nop
  41094f:	nop
  410950:	jmp    QWORD PTR [rip+0xed7e]        # 0x41f6d4
  410956:	nop
  410957:	nop
  410958:	jmp    QWORD PTR [rip+0xed6e]        # 0x41f6cc
  41095e:	nop
  41095f:	nop
  410960:	jmp    QWORD PTR [rip+0xed5e]        # 0x41f6c4
  410966:	nop
  410967:	nop
  410968:	jmp    QWORD PTR [rip+0xed4e]        # 0x41f6bc
  41096e:	nop
  41096f:	nop
  410970:	jmp    QWORD PTR [rip+0xed3e]        # 0x41f6b4
  410976:	nop
  410977:	nop
  410978:	jmp    QWORD PTR [rip+0xed2e]        # 0x41f6ac
  41097e:	nop
  41097f:	nop
  410980:	jmp    QWORD PTR [rip+0xed1e]        # 0x41f6a4
  410986:	nop
  410987:	nop
  410988:	jmp    QWORD PTR [rip+0xed0e]        # 0x41f69c
  41098e:	nop
  41098f:	nop
  410990:	jmp    QWORD PTR [rip+0xecfe]        # 0x41f694
  410996:	nop
  410997:	nop
  410998:	jmp    QWORD PTR [rip+0xecee]        # 0x41f68c
  41099e:	nop
  41099f:	nop
  4109a0:	jmp    QWORD PTR [rip+0xecde]        # 0x41f684
  4109a6:	nop
  4109a7:	nop
  4109a8:	jmp    QWORD PTR [rip+0xecce]        # 0x41f67c
  4109ae:	nop
  4109af:	nop
  4109b0:	jmp    QWORD PTR [rip+0xecbe]        # 0x41f674
  4109b6:	nop
  4109b7:	nop
  4109b8:	jmp    QWORD PTR [rip+0xecae]        # 0x41f66c
  4109be:	nop
  4109bf:	nop
  4109c0:	jmp    QWORD PTR [rip+0xec9e]        # 0x41f664
  4109c6:	nop
  4109c7:	nop
  4109c8:	jmp    QWORD PTR [rip+0xec8e]        # 0x41f65c
  4109ce:	nop
  4109cf:	nop
  4109d0:	jmp    QWORD PTR [rip+0xec7e]        # 0x41f654
  4109d6:	nop
  4109d7:	nop
  4109d8:	jmp    QWORD PTR [rip+0xec6e]        # 0x41f64c
  4109de:	nop
  4109df:	nop
  4109e0:	jmp    QWORD PTR [rip+0xec5e]        # 0x41f644
  4109e6:	nop
  4109e7:	nop
  4109e8:	jmp    QWORD PTR [rip+0xec4e]        # 0x41f63c
  4109ee:	nop
  4109ef:	nop
  4109f0:	jmp    QWORD PTR [rip+0xec3e]        # 0x41f634
  4109f6:	nop
  4109f7:	nop
  4109f8:	jmp    QWORD PTR [rip+0xec2e]        # 0x41f62c
  4109fe:	nop
  4109ff:	nop
  410a00:	jmp    QWORD PTR [rip+0xec1e]        # 0x41f624
  410a06:	nop
  410a07:	nop
  410a08:	jmp    QWORD PTR [rip+0xec0e]        # 0x41f61c
  410a0e:	nop
  410a0f:	nop
  410a10:	jmp    QWORD PTR [rip+0xebfe]        # 0x41f614
  410a16:	nop
  410a17:	nop
  410a18:	jmp    QWORD PTR [rip+0xebee]        # 0x41f60c
  410a1e:	nop
  410a1f:	nop
  410a20:	jmp    QWORD PTR [rip+0xebde]        # 0x41f604
  410a26:	nop
  410a27:	nop
  410a28:	jmp    QWORD PTR [rip+0xebce]        # 0x41f5fc
  410a2e:	nop
  410a2f:	nop
  410a30:	jmp    QWORD PTR [rip+0xebbe]        # 0x41f5f4
  410a36:	nop
  410a37:	nop
  410a38:	jmp    QWORD PTR [rip+0xebae]        # 0x41f5ec
  410a3e:	nop
  410a3f:	nop
  410a40:	jmp    QWORD PTR [rip+0xeb9e]        # 0x41f5e4
  410a46:	nop
  410a47:	nop
  410a48:	jmp    QWORD PTR [rip+0xeb8e]        # 0x41f5dc
  410a4e:	nop
  410a4f:	nop
  410a50:	jmp    QWORD PTR [rip+0xeb7e]        # 0x41f5d4
  410a56:	nop
  410a57:	nop
  410a58:	jmp    QWORD PTR [rip+0xeb6e]        # 0x41f5cc
  410a5e:	nop
  410a5f:	nop
  410a60:	jmp    QWORD PTR [rip+0xeb5e]        # 0x41f5c4
  410a66:	nop
  410a67:	nop
  410a68:	jmp    QWORD PTR [rip+0xeb46]        # 0x41f5b4
  410a6e:	nop
  410a6f:	nop
  410a70:	jmp    QWORD PTR [rip+0xeb36]        # 0x41f5ac
  410a76:	nop
  410a77:	nop
  410a78:	jmp    QWORD PTR [rip+0xeb26]        # 0x41f5a4
  410a7e:	nop
  410a7f:	nop
  410a80:	jmp    QWORD PTR [rip+0xeb16]        # 0x41f59c
  410a86:	nop
  410a87:	nop
  410a88:	jmp    QWORD PTR [rip+0xeafe]        # 0x41f58c
  410a8e:	nop
  410a8f:	nop
  410a90:	jmp    QWORD PTR [rip+0xeaee]        # 0x41f584
  410a96:	nop
  410a97:	nop
  410a98:	jmp    QWORD PTR [rip+0xeade]        # 0x41f57c
  410a9e:	nop
  410a9f:	nop
  410aa0:	jmp    QWORD PTR [rip+0xeace]        # 0x41f574
  410aa6:	nop
  410aa7:	nop
  410aa8:	jmp    QWORD PTR [rip+0xeab6]        # 0x41f564
  410aae:	nop
  410aaf:	nop
  410ab0:	jmp    QWORD PTR [rip+0xeaa6]        # 0x41f55c
  410ab6:	nop
  410ab7:	nop
  410ab8:	jmp    QWORD PTR [rip+0xea8e]        # 0x41f54c
  410abe:	nop
  410abf:	nop
  410ac0:	mov    rax,QWORD PTR [rip+0xdaf9]        # 0x41e5c0
  410ac7:	ret    
  410ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  410ad0:	mov    rax,rcx
  410ad3:	xchg   QWORD PTR [rip+0xdae6],rax        # 0x41e5c0
  410ada:	ret    
  410adb:	nop
  410adc:	nop
  410add:	nop
  410ade:	nop
  410adf:	nop
  410ae0:	jmp    QWORD PTR [rip+0xec5e]        # 0x41f744
  410ae6:	nop
  410ae7:	nop
  410ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  410af0:	jmp    QWORD PTR [rip+0xea46]        # 0x41f53c
  410af6:	nop
  410af7:	nop
  410af8:	jmp    QWORD PTR [rip+0xea36]        # 0x41f534
  410afe:	nop
  410aff:	nop
  410b00:	jmp    QWORD PTR [rip+0xea26]        # 0x41f52c
  410b06:	nop
  410b07:	nop
  410b08:	jmp    QWORD PTR [rip+0xea16]        # 0x41f524
  410b0e:	nop
  410b0f:	nop
  410b10:	jmp    QWORD PTR [rip+0xea06]        # 0x41f51c
  410b16:	nop
  410b17:	nop
  410b18:	jmp    QWORD PTR [rip+0xe9f6]        # 0x41f514
  410b1e:	nop
  410b1f:	nop
  410b20:	jmp    QWORD PTR [rip+0xe9e6]        # 0x41f50c
  410b26:	nop
  410b27:	nop
  410b28:	jmp    QWORD PTR [rip+0xe9d6]        # 0x41f504
  410b2e:	nop
  410b2f:	nop
  410b30:	jmp    QWORD PTR [rip+0xe9c6]        # 0x41f4fc
  410b36:	nop
  410b37:	nop
  410b38:	jmp    QWORD PTR [rip+0xe9b6]        # 0x41f4f4
  410b3e:	nop
  410b3f:	nop
  410b40:	jmp    QWORD PTR [rip+0xe9a6]        # 0x41f4ec
  410b46:	nop
  410b47:	nop
  410b48:	jmp    QWORD PTR [rip+0xe996]        # 0x41f4e4
  410b4e:	nop
  410b4f:	nop
  410b50:	jmp    QWORD PTR [rip+0xe986]        # 0x41f4dc
  410b56:	nop
  410b57:	nop
  410b58:	jmp    QWORD PTR [rip+0xe976]        # 0x41f4d4
  410b5e:	nop
  410b5f:	nop
  410b60:	jmp    QWORD PTR [rip+0xe966]        # 0x41f4cc
  410b66:	nop
  410b67:	nop
  410b68:	jmp    QWORD PTR [rip+0xe956]        # 0x41f4c4
  410b6e:	nop
  410b6f:	nop
  410b70:	jmp    QWORD PTR [rip+0xe946]        # 0x41f4bc
  410b76:	nop
  410b77:	nop
  410b78:	jmp    QWORD PTR [rip+0xe936]        # 0x41f4b4
  410b7e:	nop
  410b7f:	nop
  410b80:	jmp    QWORD PTR [rip+0xe926]        # 0x41f4ac
  410b86:	nop
  410b87:	nop
  410b88:	jmp    QWORD PTR [rip+0xe916]        # 0x41f4a4
  410b8e:	nop
  410b8f:	nop
  410b90:	jmp    QWORD PTR [rip+0xe906]        # 0x41f49c
  410b96:	nop
  410b97:	nop
  410b98:	jmp    QWORD PTR [rip+0xe8f6]        # 0x41f494
  410b9e:	nop
  410b9f:	nop
  410ba0:	jmp    QWORD PTR [rip+0xe8e6]        # 0x41f48c
  410ba6:	nop
  410ba7:	nop
  410ba8:	jmp    QWORD PTR [rip+0xe8d6]        # 0x41f484
  410bae:	nop
  410baf:	nop
  410bb0:	push   r15
  410bb2:	push   r14
  410bb4:	push   r13
  410bb6:	push   r12
  410bb8:	push   rbp
  410bb9:	push   rdi
  410bba:	push   rsi
  410bbb:	push   rbx
  410bbc:	sub    rsp,0x28
  410bc0:	mov    rbx,rdx
  410bc3:	mov    ebp,ecx
  410bc5:	call   0x40a710
  410bca:	mov    rsi,QWORD PTR [rbx]
  410bcd:	mov    rax,QWORD PTR [rip+0x7d0c]        # 0x4188e0
  410bd4:	mov    edx,0x2f
  410bd9:	mov    rcx,rsi
  410bdc:	mov    DWORD PTR [rax],0x1
  410be2:	call   0x410918
  410be7:	mov    r12,QWORD PTR [rip+0x7ce2]        # 0x4188d0
  410bee:	lea    rdx,[rax+0x1]
  410bf2:	test   rax,rax
  410bf5:	lea    rax,[rip+0x2404]        # 0x413000
  410bfc:	mov    DWORD PTR [rip+0xd9e2],0x0        # 0x41e5e8
  410c06:	mov    DWORD PTR [rip+0xd9e0],0x0        # 0x41e5f0
  410c10:	cmovne rsi,rdx
  410c14:	mov    DWORD PTR [rip+0xd9ce],0x0        # 0x41e5ec
  410c1e:	mov    DWORD PTR [rip+0xd9d8],0x0        # 0x41e600
  410c28:	mov    QWORD PTR [rip+0xd9b1],rsi        # 0x41e5e0
  410c2f:	mov    QWORD PTR [rip+0xd9c2],rax        # 0x41e5f8
  410c36:	mov    r14,r12
  410c39:	mov    DWORD PTR [rip+0xd9c1],0x0        # 0x41e604
  410c43:	mov    r13,r12
  410c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c50:	lea    rsi,[rip+0x25a5]        # 0x4131fc
  410c57:	lea    r8,[rip+0x2512]        # 0x413170
  410c5e:	mov    rdx,rbx
  410c61:	mov    ecx,ebp
  410c63:	call   0x40c7c0
  410c68:	cmp    eax,0xffffffff
  410c6b:	je     0x410f17
  410c71:	sub    eax,0x3f
  410c74:	cmp    eax,0x39
  410c77:	ja     0x410c57
  410c79:	movsxd rax,DWORD PTR [rsi+rax*4]
  410c7d:	add    rax,rsi
  410c80:	jmp    rax
  410c82:	mov    rcx,QWORD PTR [r13+0x0]
  410c86:	call   0x410938
  410c8b:	lea    rcx,[rax+0x1]
  410c8f:	call   0x4067c0
  410c94:	test   rax,rax
  410c97:	mov    r15,rax
  410c9a:	je     0x410fa8
  410ca0:	mov    rdx,QWORD PTR [r13+0x0]
  410ca4:	mov    rcx,rax
  410ca7:	lea    rdi,[rip+0x2366]        # 0x413014
  410cae:	mov    rsi,r15
  410cb1:	call   0x410940
  410cb6:	mov    ecx,0x2
  410cbb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410cbd:	jne    0x410ccb
  410cbf:	mov    DWORD PTR [rip+0xd91f],0x1        # 0x41e5e8
  410cc9:	jmp    0x410c50
  410ccb:	lea    rdx,[rip+0x2344]        # 0x413016
  410cd2:	mov    rcx,r15
  410cd5:	call   0x410948
  410cda:	test   eax,eax
  410cdc:	je     0x410cbf
  410cde:	lea    rdx,[rip+0x2333]        # 0x413018
  410ce5:	mov    rcx,r15
  410ce8:	call   0x410948
  410ced:	test   eax,eax
  410cef:	je     0x410d10
  410cf1:	lea    rdx,[rip+0x2324]        # 0x41301c
  410cf8:	mov    rcx,r15
  410cfb:	call   0x410948
  410d00:	test   eax,eax
  410d02:	jne    0x410f5b
  410d08:	nop    DWORD PTR [rax+rax*1+0x0]
  410d10:	mov    DWORD PTR [rip+0xd8d6],0x1        # 0x41e5f0
  410d1a:	jmp    0x410c50
  410d1f:	nop
  410d20:	mov    rcx,QWORD PTR [r12]
  410d24:	call   0x410938
  410d29:	lea    rcx,[rax+0x1]
  410d2d:	call   0x4067c0
  410d32:	test   rax,rax
  410d35:	mov    r15,rax
  410d38:	je     0x410fa8
  410d3e:	mov    rdx,QWORD PTR [r12]
  410d42:	mov    rcx,rax
  410d45:	lea    rdi,[rip+0x230b]        # 0x413057
  410d4c:	mov    rsi,r15
  410d4f:	call   0x410940
  410d54:	mov    ecx,0x2
  410d59:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410d5b:	jne    0x410e1b
  410d61:	mov    DWORD PTR [rip+0xd895],0x0        # 0x41e600
  410d6b:	jmp    0x410c50
  410d70:	mov    DWORD PTR [rip+0xd872],0xffffffff        # 0x41e5ec
  410d7a:	jmp    0x410c50
  410d7f:	nop
  410d80:	mov    DWORD PTR [rip+0xd862],0x1        # 0x41e5ec
  410d8a:	jmp    0x410c50
  410d8f:	nop
  410d90:	mov    rdx,QWORD PTR [rip+0xd849]        # 0x41e5e0
  410d97:	lea    rcx,[rip+0x236a]        # 0x413108
  410d9e:	call   0x4030d0
  410da3:	call   0x40a570
  410da8:	lea    rcx,[rip+0x23a7]        # 0x413156
  410daf:	mov    rdx,rax
  410db2:	call   0x4030d0
  410db7:	mov    eax,0x8
  410dbc:	add    rsp,0x28
  410dc0:	pop    rbx
  410dc1:	pop    rsi
  410dc2:	pop    rdi
  410dc3:	pop    rbp
  410dc4:	pop    r12
  410dc6:	pop    r13
  410dc8:	pop    r14
  410dca:	pop    r15
  410dcc:	ret    
  410dcd:	nop    DWORD PTR [rax]
  410dd0:	mov    DWORD PTR [rip+0xd82a],0x1        # 0x41e604
  410dda:	jmp    0x410c50
  410ddf:	nop
  410de0:	mov    rcx,QWORD PTR [r14]
  410de3:	mov    DWORD PTR [rip+0xd7ff],0x1        # 0x41e5ec
  410ded:	call   0x410938
  410df2:	lea    rcx,[rax+0x1]
  410df6:	call   0x4067c0
  410dfb:	test   rax,rax
  410dfe:	mov    QWORD PTR [rip+0xa22b],rax        # 0x41b030
  410e05:	je     0x410fa8
  410e0b:	mov    rdx,QWORD PTR [r14]
  410e0e:	mov    rcx,rax
  410e11:	call   0x410940
  410e16:	jmp    0x410c50
  410e1b:	lea    rdx,[rip+0x2237]        # 0x413059
  410e22:	mov    rcx,r15
  410e25:	call   0x410948
  410e2a:	test   eax,eax
  410e2c:	je     0x410d61
  410e32:	lea    rdx,[rip+0x2228]        # 0x413061
  410e39:	mov    rcx,r15
  410e3c:	call   0x410948
  410e41:	test   eax,eax
  410e43:	je     0x410f08
  410e49:	lea    rdx,[rip+0x2213]        # 0x413063
  410e50:	mov    rcx,r15
  410e53:	call   0x410948
  410e58:	test   eax,eax
  410e5a:	je     0x410f08
  410e60:	lea    rdx,[rip+0x220a]        # 0x413071
  410e67:	mov    rcx,r15
  410e6a:	call   0x410948
  410e6f:	test   eax,eax
  410e71:	je     0x410f08
  410e77:	lea    rdx,[rip+0x2201]        # 0x41307f
  410e7e:	mov    rcx,r15
  410e81:	call   0x410948
  410e86:	test   eax,eax
  410e88:	je     0x410fc5
  410e8e:	lea    rdx,[rip+0x21ec]        # 0x413081
  410e95:	mov    rcx,r15
  410e98:	call   0x410948
  410e9d:	test   eax,eax
  410e9f:	je     0x410fc5
  410ea5:	lea    rdx,[rip+0x21da]        # 0x413086
  410eac:	mov    rcx,r15
  410eaf:	call   0x410948
  410eb4:	test   eax,eax
  410eb6:	je     0x410fc5
  410ebc:	lea    rdx,[rip+0x21cc]        # 0x41308f
  410ec3:	mov    rcx,r15
  410ec6:	call   0x410948
  410ecb:	test   eax,eax
  410ecd:	je     0x410ef9
  410ecf:	lea    rdx,[rip+0x21bb]        # 0x413091
  410ed6:	mov    rcx,r15
  410ed9:	call   0x410948
  410ede:	test   eax,eax
  410ee0:	je     0x410ef9
  410ee2:	lea    rdx,[rip+0x21b1]        # 0x41309a
  410ee9:	mov    rcx,r15
  410eec:	call   0x410948
  410ef1:	test   eax,eax
  410ef3:	jne    0x411077
  410ef9:	or     DWORD PTR [rip+0xd6fd],0x1100        # 0x41e600
  410f03:	jmp    0x410c50
  410f08:	or     DWORD PTR [rip+0xd6ee],0x200        # 0x41e600
  410f12:	jmp    0x410c50
  410f17:	cmp    DWORD PTR [rip+0xd6d2],0x0        # 0x41e5f0
  410f1e:	je     0x410f29
  410f20:	cmp    DWORD PTR [rip+0xd6c1],0x0        # 0x41e5e8
  410f27:	jne    0x410f92
  410f29:	mov    rax,QWORD PTR [rip+0x79c0]        # 0x4188f0
  410f30:	movsxd rsi,DWORD PTR [rax]
  410f33:	sub    ebp,esi
  410f35:	cmp    ebp,0x1
  410f38:	jle    0x410fd4
  410f3e:	mov    rdx,QWORD PTR [rip+0xd69b]        # 0x41e5e0
  410f45:	lea    rcx,[rip+0x225c]        # 0x4131a8
  410f4c:	call   0x4030d0
  410f51:	mov    eax,0x6
  410f56:	jmp    0x410dbc
  410f5b:	lea    rdx,[rip+0x20c4]        # 0x413026
  410f62:	mov    rcx,r15
  410f65:	call   0x410948
  410f6a:	test   eax,eax
  410f6c:	je     0x410d10
  410f72:	mov    rdx,QWORD PTR [rip+0xd667]        # 0x41e5e0
  410f79:	lea    rcx,[rip+0x20b0]        # 0x413030
  410f80:	mov    r8,r15
  410f83:	call   0x4030d0
  410f88:	mov    eax,0x1
  410f8d:	jmp    0x410dbc
  410f92:	lea    rcx,[rip+0x21e7]        # 0x413180
  410f99:	call   0x4030d0
  410f9e:	mov    eax,0x8
  410fa3:	jmp    0x410dbc
  410fa8:	mov    rdx,QWORD PTR [rip+0xd631]        # 0x41e5e0
  410faf:	lea    rcx,[rip+0x204c]        # 0x413002
  410fb6:	call   0x4030d0
  410fbb:	mov    eax,0x1
  410fc0:	jmp    0x410dbc
  410fc5:	or     DWORD PTR [rip+0xd631],0x1000        # 0x41e600
  410fcf:	jmp    0x410c50
  410fd4:	call   QWORD PTR [rip+0xe59a]        # 0x41f574
  410fda:	sub    ebp,0x1
  410fdd:	mov    rdi,rax
  410fe0:	jne    0x410ffc
  410fe2:	lea    rbx,[rbx+rsi*8]
  410fe6:	lea    rdx,[rip+0x2013]        # 0x413000
  410fed:	mov    rsi,QWORD PTR [rbx]
  410ff0:	mov    rcx,rsi
  410ff3:	call   0x410948
  410ff8:	test   eax,eax
  410ffa:	jne    0x41102f
  410ffc:	mov    rax,QWORD PTR [rip+0x784d]        # 0x418850
  411003:	mov    QWORD PTR [rax],rdi
  411006:	call   0x408570
  41100b:	mov    edx,eax
  41100d:	mov    eax,0x1
  411012:	test   edx,edx
  411014:	jne    0x410dbc
  41101a:	mov    rax,QWORD PTR [rip+0x777f]        # 0x4187a0
  411021:	cmp    DWORD PTR [rax],0x0
  411024:	setg   al
  411027:	movzx  eax,al
  41102a:	jmp    0x410dbc
  41102f:	lea    rdx,[rip+0x219d]        # 0x4131d3
  411036:	mov    rcx,rsi
  411039:	call   0x410a00
  41103e:	test   rax,rax
  411041:	mov    rdi,rax
  411044:	je     0x411052
  411046:	mov    rax,QWORD PTR [rbx]
  411049:	mov    QWORD PTR [rip+0xd5a8],rax        # 0x41e5f8
  411050:	jmp    0x410ffc
  411052:	mov    rdx,QWORD PTR [rbx]
  411055:	lea    rcx,[rip+0x217c]        # 0x4131d8
  41105c:	call   0x4030d0
  411061:	lea    rcx,[rip+0x2191]        # 0x4131f9
  411068:	call   0x410988
  41106d:	mov    eax,0x7
  411072:	jmp    0x410dbc
  411077:	lea    rcx,[rip+0x203a]        # 0x4130b8
  41107e:	call   0x4030d0
  411083:	mov    eax,0x2
  411088:	jmp    0x410dbc
  41108d:	nop
  41108e:	nop
  41108f:	nop
  411090:	(bad)  
  411091:	(bad)  
  411092:	(bad)  
  411093:	(bad)  
  411094:	(bad)  
  411095:	(bad)  
  411096:	(bad)  
  411097:	inc    DWORD PTR [rax]
  411099:	add    BYTE PTR [rax],al
  41109b:	add    BYTE PTR [rax],al
  41109d:	add    BYTE PTR [rax],al
  41109f:	add    bh,bh
  4110a1:	(bad)  
  4110a2:	(bad)  
  4110a3:	(bad)  
  4110a4:	(bad)  
  4110a5:	(bad)  
  4110a6:	(bad)  
  4110a7:	inc    DWORD PTR [rax]
  4110a9:	add    BYTE PTR [rax],al
  4110ab:	add    BYTE PTR [rax],al
  4110ad:	add    BYTE PTR [rax],al
	...
