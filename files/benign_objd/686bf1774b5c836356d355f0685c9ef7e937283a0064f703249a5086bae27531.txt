
686bf1774b5c836356d355f0685c9ef7e937283a0064f703249a5086bae27531.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x6309]        # 0x140007310
   140001007:	jmp    0x1400064b0
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x6309]        # 0x140007320
   140001017:	jmp    0x1400064b0
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x6309]        # 0x140007330
   140001027:	jmp    0x1400064b0
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	lea    rdx,[rip+0x7a7d]        # 0x140008ab8
   14000103b:	lea    rcx,[rip+0xaff6]        # 0x14000c038
   140001042:	mov    r8d,0x12
   140001048:	call   0x140003b80
   14000104d:	lea    rcx,[rip+0x62ec]        # 0x140007340
   140001054:	add    rsp,0x28
   140001058:	jmp    0x1400064b0
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	sub    rsp,0x28
   140001064:	lea    rdx,[rip+0x7a45]        # 0x140008ab0
   14000106b:	lea    rcx,[rip+0xafa6]        # 0x14000c018
   140001072:	mov    r8d,0x1
   140001078:	call   0x140003b80
   14000107d:	lea    rcx,[rip+0x632c]        # 0x1400073b0
   140001084:	add    rsp,0x28
   140001088:	jmp    0x1400064b0
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	lea    rcx,[rip+0x6389]        # 0x140007420
   140001097:	jmp    0x1400064b0
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400010a5:	push   rsi
   1400010a6:	push   rdi
   1400010a7:	push   r12
   1400010a9:	push   r14
   1400010ab:	push   r15
   1400010ad:	sub    rsp,0x40
   1400010b1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400010ba:	mov    QWORD PTR [rsp+0x80],rbx
   1400010c2:	mov    r15,rdx
   1400010c5:	mov    rsi,rcx
   1400010c8:	xor    ebx,ebx
   1400010ca:	mov    DWORD PTR [rsp+0x78],ebx
   1400010ce:	mov    r12,QWORD PTR [rdx+0x10]
   1400010d2:	mov    rax,QWORD PTR [rcx]
   1400010d5:	movsxd r8,DWORD PTR [rax+0x4]
   1400010d9:	mov    rdi,QWORD PTR [r8+rcx*1+0x28]
   1400010de:	test   rdi,rdi
   1400010e1:	jle    0x1400010ed
   1400010e3:	cmp    rdi,r12
   1400010e6:	jbe    0x1400010ed
   1400010e8:	sub    rdi,r12
   1400010eb:	jmp    0x1400010ef
   1400010ed:	xor    edi,edi
   1400010ef:	mov    r14,rcx
   1400010f2:	mov    QWORD PTR [rsp+0x28],rcx
   1400010f7:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   1400010fc:	test   rcx,rcx
   1400010ff:	je     0x140001108
   140001101:	mov    rax,QWORD PTR [rcx]
   140001104:	call   QWORD PTR [rax+0x8]
   140001107:	nop
   140001108:	mov    rax,QWORD PTR [rsi]
   14000110b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000110f:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140001114:	jne    0x14000112b
   140001116:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   14000111b:	test   rcx,rcx
   14000111e:	je     0x14000112b
   140001120:	cmp    rcx,rsi
   140001123:	je     0x14000112b
   140001125:	call   QWORD PTR [rip+0x7035]        # 0x140008160
   14000112b:	mov    rax,QWORD PTR [rsi]
   14000112e:	movsxd rcx,DWORD PTR [rax+0x4]
   140001132:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140001137:	sete   al
   14000113a:	mov    BYTE PTR [rsp+0x30],al
   14000113e:	test   al,al
   140001140:	jne    0x14000114c
   140001142:	mov    ebx,0x4
   140001147:	jmp    0x140001210
   14000114c:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140001150:	and    eax,0x1c0
   140001155:	cmp    eax,0x40
   140001158:	je     0x140001193
   14000115a:	nop    WORD PTR [rax+rax*1+0x0]
   140001160:	test   rdi,rdi
   140001163:	je     0x14000118f
   140001165:	mov    rax,QWORD PTR [rsi]
   140001168:	movsxd rcx,DWORD PTR [rax+0x4]
   14000116c:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001171:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001176:	call   QWORD PTR [rip+0x6f74]        # 0x1400080f0
   14000117c:	cmp    eax,0xffffffff
   14000117f:	jne    0x14000118a
   140001181:	or     ebx,0x4
   140001184:	mov    DWORD PTR [rsp+0x78],ebx
   140001188:	jmp    0x14000118f
   14000118a:	dec    rdi
   14000118d:	jmp    0x140001160
   14000118f:	test   ebx,ebx
   140001191:	jne    0x1400011c1
   140001193:	cmp    QWORD PTR [r15+0x18],0x10
   140001198:	jb     0x14000119d
   14000119a:	mov    r15,QWORD PTR [r15]
   14000119d:	mov    rax,QWORD PTR [rsi]
   1400011a0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400011a4:	mov    r8,r12
   1400011a7:	mov    rdx,r15
   1400011aa:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400011af:	call   QWORD PTR [rip+0x6f43]        # 0x1400080f8
   1400011b5:	cmp    rax,r12
   1400011b8:	je     0x1400011c1
   1400011ba:	mov    ebx,0x4
   1400011bf:	jmp    0x1400011ec
   1400011c1:	test   rdi,rdi
   1400011c4:	je     0x1400011f0
   1400011c6:	mov    rax,QWORD PTR [rsi]
   1400011c9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400011cd:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400011d2:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400011d7:	call   QWORD PTR [rip+0x6f13]        # 0x1400080f0
   1400011dd:	cmp    eax,0xffffffff
   1400011e0:	jne    0x1400011e7
   1400011e2:	or     ebx,0x4
   1400011e5:	jmp    0x1400011ec
   1400011e7:	dec    rdi
   1400011ea:	jmp    0x1400011c1
   1400011ec:	mov    DWORD PTR [rsp+0x78],ebx
   1400011f0:	mov    rax,QWORD PTR [rsi]
   1400011f3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400011f7:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001200:	jmp    0x140001210
   140001202:	mov    rsi,QWORD PTR [rsp+0x70]
   140001207:	mov    ebx,DWORD PTR [rsp+0x78]
   14000120b:	mov    r14,QWORD PTR [rsp+0x28]
   140001210:	mov    rax,QWORD PTR [rsi]
   140001213:	movsxd rcx,DWORD PTR [rax+0x4]
   140001217:	add    rcx,rsi
   14000121a:	xor    r8d,r8d
   14000121d:	mov    edx,ebx
   14000121f:	call   QWORD PTR [rip+0x6efb]        # 0x140008120
   140001225:	nop
   140001226:	call   QWORD PTR [rip+0x700c]        # 0x140008238
   14000122c:	test   al,al
   14000122e:	jne    0x140001239
   140001230:	mov    rcx,r14
   140001233:	call   QWORD PTR [rip+0x6f07]        # 0x140008140
   140001239:	mov    rax,QWORD PTR [r14]
   14000123c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001240:	mov    rcx,QWORD PTR [rcx+r14*1+0x48]
   140001245:	test   rcx,rcx
   140001248:	je     0x140001250
   14000124a:	mov    rax,QWORD PTR [rcx]
   14000124d:	call   QWORD PTR [rax+0x10]
   140001250:	mov    rax,rsi
   140001253:	mov    rbx,QWORD PTR [rsp+0x80]
   14000125b:	add    rsp,0x40
   14000125f:	pop    r15
   140001261:	pop    r14
   140001263:	pop    r12
   140001265:	pop    rdi
   140001266:	pop    rsi
   140001267:	ret    
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    QWORD PTR [rsp+0x8],rcx
   140001275:	push   rsi
   140001276:	push   rdi
   140001277:	push   r12
   140001279:	push   r14
   14000127b:	push   r15
   14000127d:	sub    rsp,0x40
   140001281:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000128a:	mov    QWORD PTR [rsp+0x78],rbx
   14000128f:	movzx  r12d,dl
   140001293:	mov    rsi,rcx
   140001296:	xor    ebx,ebx
   140001298:	mov    DWORD PTR [rsp+0x80],ebx
   14000129f:	mov    r15,rcx
   1400012a2:	mov    QWORD PTR [rsp+0x28],rcx
   1400012a7:	mov    rax,QWORD PTR [rcx]
   1400012aa:	movsxd r8,DWORD PTR [rax+0x4]
   1400012ae:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   1400012b3:	test   rcx,rcx
   1400012b6:	je     0x1400012bf
   1400012b8:	mov    rax,QWORD PTR [rcx]
   1400012bb:	call   QWORD PTR [rax+0x8]
   1400012be:	nop
   1400012bf:	mov    rax,QWORD PTR [rsi]
   1400012c2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400012c6:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400012cb:	jne    0x1400012e2
   1400012cd:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   1400012d2:	test   rcx,rcx
   1400012d5:	je     0x1400012e2
   1400012d7:	cmp    rcx,rsi
   1400012da:	je     0x1400012e2
   1400012dc:	call   QWORD PTR [rip+0x6e7e]        # 0x140008160
   1400012e2:	mov    rax,QWORD PTR [rsi]
   1400012e5:	movsxd rcx,DWORD PTR [rax+0x4]
   1400012e9:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400012ee:	sete   al
   1400012f1:	mov    BYTE PTR [rsp+0x30],al
   1400012f5:	test   al,al
   1400012f7:	je     0x1400013bd
   1400012fd:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140001302:	cmp    rdi,0x1
   140001306:	jg     0x14000130c
   140001308:	xor    edi,edi
   14000130a:	jmp    0x14000130f
   14000130c:	dec    rdi
   14000130f:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140001313:	and    eax,0x1c0
   140001318:	mov    r14d,0x4
   14000131e:	cmp    eax,0x40
   140001321:	je     0x14000135a
   140001323:	test   ebx,ebx
   140001325:	jne    0x1400013aa
   14000132b:	test   rdi,rdi
   14000132e:	jle    0x14000135a
   140001330:	mov    rax,QWORD PTR [rsi]
   140001333:	movsxd rcx,DWORD PTR [rax+0x4]
   140001337:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   14000133c:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001341:	call   QWORD PTR [rip+0x6da9]        # 0x1400080f0
   140001347:	cmp    eax,0xffffffff
   14000134a:	cmove  ebx,r14d
   14000134e:	mov    DWORD PTR [rsp+0x80],ebx
   140001355:	dec    rdi
   140001358:	jmp    0x140001323
   14000135a:	mov    rax,QWORD PTR [rsi]
   14000135d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001361:	movzx  edx,r12b
   140001365:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000136a:	call   QWORD PTR [rip+0x6d80]        # 0x1400080f0
   140001370:	cmp    eax,0xffffffff
   140001373:	cmove  ebx,r14d
   140001377:	mov    DWORD PTR [rsp+0x80],ebx
   14000137e:	test   ebx,ebx
   140001380:	jne    0x1400013aa
   140001382:	test   rdi,rdi
   140001385:	jle    0x1400013aa
   140001387:	mov    rax,QWORD PTR [rsi]
   14000138a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000138e:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001393:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001398:	call   QWORD PTR [rip+0x6d52]        # 0x1400080f0
   14000139e:	cmp    eax,0xffffffff
   1400013a1:	cmove  ebx,r14d
   1400013a5:	dec    rdi
   1400013a8:	jmp    0x140001377
   1400013aa:	jmp    0x1400013bd
   1400013ac:	mov    rsi,QWORD PTR [rsp+0x70]
   1400013b1:	mov    ebx,DWORD PTR [rsp+0x80]
   1400013b8:	mov    r15,QWORD PTR [rsp+0x28]
   1400013bd:	mov    rax,QWORD PTR [rsi]
   1400013c0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013c4:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   1400013cd:	mov    rax,QWORD PTR [rsi]
   1400013d0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013d4:	add    rcx,rsi
   1400013d7:	xor    r8d,r8d
   1400013da:	mov    edx,ebx
   1400013dc:	call   QWORD PTR [rip+0x6d3e]        # 0x140008120
   1400013e2:	nop
   1400013e3:	call   QWORD PTR [rip+0x6e4f]        # 0x140008238
   1400013e9:	test   al,al
   1400013eb:	jne    0x1400013f6
   1400013ed:	mov    rcx,r15
   1400013f0:	call   QWORD PTR [rip+0x6d4a]        # 0x140008140
   1400013f6:	mov    rax,QWORD PTR [r15]
   1400013f9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013fd:	mov    rcx,QWORD PTR [rcx+r15*1+0x48]
   140001402:	test   rcx,rcx
   140001405:	je     0x14000140d
   140001407:	mov    rax,QWORD PTR [rcx]
   14000140a:	call   QWORD PTR [rax+0x10]
   14000140d:	mov    rax,rsi
   140001410:	mov    rbx,QWORD PTR [rsp+0x78]
   140001415:	add    rsp,0x40
   140001419:	pop    r15
   14000141b:	pop    r14
   14000141d:	pop    r12
   14000141f:	pop    rdi
   140001420:	pop    rsi
   140001421:	ret    
   140001422:	int3   
   140001423:	int3   
   140001424:	int3   
   140001425:	int3   
   140001426:	int3   
   140001427:	int3   
   140001428:	int3   
   140001429:	int3   
   14000142a:	int3   
   14000142b:	int3   
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	mov    QWORD PTR [rsp+0x8],rcx
   140001435:	push   rsi
   140001436:	push   rdi
   140001437:	push   r12
   140001439:	push   r14
   14000143b:	push   r15
   14000143d:	sub    rsp,0x40
   140001441:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000144a:	mov    QWORD PTR [rsp+0x80],rbx
   140001452:	mov    r15,rdx
   140001455:	mov    rsi,rcx
   140001458:	xor    ebx,ebx
   14000145a:	mov    DWORD PTR [rsp+0x78],ebx
   14000145e:	cmp    BYTE PTR [rdx],bl
   140001460:	jne    0x140001467
   140001462:	xor    r14d,r14d
   140001465:	jmp    0x140001479
   140001467:	or     r14,0xffffffffffffffff
   14000146b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001470:	inc    r14
   140001473:	cmp    BYTE PTR [rdx+r14*1],bl
   140001477:	jne    0x140001470
   140001479:	mov    rax,QWORD PTR [rcx]
   14000147c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001480:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140001485:	test   rdi,rdi
   140001488:	jle    0x140001494
   14000148a:	cmp    rdi,r14
   14000148d:	jle    0x140001494
   14000148f:	sub    rdi,r14
   140001492:	jmp    0x140001496
   140001494:	xor    edi,edi
   140001496:	mov    r12,rsi
   140001499:	mov    QWORD PTR [rsp+0x28],rsi
   14000149e:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400014a3:	test   rcx,rcx
   1400014a6:	je     0x1400014af
   1400014a8:	mov    rax,QWORD PTR [rcx]
   1400014ab:	call   QWORD PTR [rax+0x8]
   1400014ae:	nop
   1400014af:	mov    rax,QWORD PTR [rsi]
   1400014b2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400014b6:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400014bb:	jne    0x1400014d2
   1400014bd:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   1400014c2:	test   rcx,rcx
   1400014c5:	je     0x1400014d2
   1400014c7:	cmp    rcx,rsi
   1400014ca:	je     0x1400014d2
   1400014cc:	call   QWORD PTR [rip+0x6c8e]        # 0x140008160
   1400014d2:	mov    rax,QWORD PTR [rsi]
   1400014d5:	movsxd rcx,DWORD PTR [rax+0x4]
   1400014d9:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400014de:	sete   al
   1400014e1:	mov    BYTE PTR [rsp+0x30],al
   1400014e5:	test   al,al
   1400014e7:	jne    0x1400014f3
   1400014e9:	mov    ebx,0x4
   1400014ee:	jmp    0x1400015a7
   1400014f3:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   1400014f7:	and    eax,0x1c0
   1400014fc:	cmp    eax,0x40
   1400014ff:	je     0x140001534
   140001501:	test   rdi,rdi
   140001504:	jle    0x140001530
   140001506:	mov    rax,QWORD PTR [rsi]
   140001509:	movsxd rcx,DWORD PTR [rax+0x4]
   14000150d:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001512:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001517:	call   QWORD PTR [rip+0x6bd3]        # 0x1400080f0
   14000151d:	cmp    eax,0xffffffff
   140001520:	jne    0x14000152b
   140001522:	or     ebx,0x4
   140001525:	mov    DWORD PTR [rsp+0x78],ebx
   140001529:	jmp    0x140001530
   14000152b:	dec    rdi
   14000152e:	jmp    0x140001501
   140001530:	test   ebx,ebx
   140001532:	jne    0x140001587
   140001534:	mov    rax,QWORD PTR [rsi]
   140001537:	movsxd rcx,DWORD PTR [rax+0x4]
   14000153b:	mov    r8,r14
   14000153e:	mov    rdx,r15
   140001541:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001546:	call   QWORD PTR [rip+0x6bac]        # 0x1400080f8
   14000154c:	cmp    rax,r14
   14000154f:	je     0x140001558
   140001551:	mov    ebx,0x4
   140001556:	jmp    0x140001583
   140001558:	test   rdi,rdi
   14000155b:	jle    0x140001587
   14000155d:	mov    rax,QWORD PTR [rsi]
   140001560:	movsxd rcx,DWORD PTR [rax+0x4]
   140001564:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001569:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000156e:	call   QWORD PTR [rip+0x6b7c]        # 0x1400080f0
   140001574:	cmp    eax,0xffffffff
   140001577:	jne    0x14000157e
   140001579:	or     ebx,0x4
   14000157c:	jmp    0x140001583
   14000157e:	dec    rdi
   140001581:	jmp    0x140001558
   140001583:	mov    DWORD PTR [rsp+0x78],ebx
   140001587:	mov    rax,QWORD PTR [rsi]
   14000158a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000158e:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001597:	jmp    0x1400015a7
   140001599:	mov    rsi,QWORD PTR [rsp+0x70]
   14000159e:	mov    ebx,DWORD PTR [rsp+0x78]
   1400015a2:	mov    r12,QWORD PTR [rsp+0x28]
   1400015a7:	mov    rax,QWORD PTR [rsi]
   1400015aa:	movsxd rcx,DWORD PTR [rax+0x4]
   1400015ae:	add    rcx,rsi
   1400015b1:	xor    r8d,r8d
   1400015b4:	mov    edx,ebx
   1400015b6:	call   QWORD PTR [rip+0x6b64]        # 0x140008120
   1400015bc:	nop
   1400015bd:	call   QWORD PTR [rip+0x6c75]        # 0x140008238
   1400015c3:	test   al,al
   1400015c5:	jne    0x1400015d0
   1400015c7:	mov    rcx,r12
   1400015ca:	call   QWORD PTR [rip+0x6b70]        # 0x140008140
   1400015d0:	mov    rax,QWORD PTR [r12]
   1400015d4:	movsxd rcx,DWORD PTR [rax+0x4]
   1400015d8:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   1400015dd:	test   rcx,rcx
   1400015e0:	je     0x1400015e8
   1400015e2:	mov    rax,QWORD PTR [rcx]
   1400015e5:	call   QWORD PTR [rax+0x10]
   1400015e8:	mov    rax,rsi
   1400015eb:	mov    rbx,QWORD PTR [rsp+0x80]
   1400015f3:	add    rsp,0x40
   1400015f7:	pop    r15
   1400015f9:	pop    r14
   1400015fb:	pop    r12
   1400015fd:	pop    rdi
   1400015fe:	pop    rsi
   1400015ff:	ret    
   140001600:	mov    al,0x1
   140001602:	ret    
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    al,0x1
   140001612:	ret    
   140001613:	int3   
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	int3   
   140001619:	int3   
   14000161a:	int3   
   14000161b:	int3   
   14000161c:	int3   
   14000161d:	int3   
   14000161e:	int3   
   14000161f:	int3   
   140001620:	xor    al,al
   140001622:	ret    
   140001623:	int3   
   140001624:	int3   
   140001625:	int3   
   140001626:	int3   
   140001627:	int3   
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	rex push rbx
   140001632:	sub    rsp,0x30
   140001636:	mov    rax,r8
   140001639:	mov    r10,rdx
   14000163c:	mov    rbx,rcx
   14000163f:	or     r9,0xffffffffffffffff
   140001643:	xor    r8d,r8d
   140001646:	mov    rdx,rax
   140001649:	mov    rcx,r10
   14000164c:	mov    DWORD PTR [rsp+0x20],0x0
   140001654:	call   0x140003680
   140001659:	mov    rcx,rbx
   14000165c:	mov    rdx,rax
   14000165f:	call   0x1400020a0
   140001664:	mov    rax,rbx
   140001667:	add    rsp,0x30
   14000166b:	pop    rbx
   14000166c:	ret    
   14000166d:	int3   
   14000166e:	int3   
   14000166f:	int3   
   140001670:	mov    QWORD PTR [rsp+0x8],rcx
   140001675:	push   rdi
   140001676:	sub    rsp,0x30
   14000167a:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001683:	mov    QWORD PTR [rsp+0x48],rbx
   140001688:	mov    QWORD PTR [rsp+0x50],rbp
   14000168d:	mov    QWORD PTR [rsp+0x58],rsi
   140001692:	mov    rsi,r8
   140001695:	mov    rbp,rdx
   140001698:	mov    rbx,rcx
   14000169b:	xor    eax,eax
   14000169d:	mov    DWORD PTR [rsp+0x20],eax
   1400016a1:	mov    QWORD PTR [rcx+0x18],0xf
   1400016a9:	mov    QWORD PTR [rcx+0x10],rax
   1400016ad:	mov    BYTE PTR [rcx],al
   1400016af:	mov    DWORD PTR [rsp+0x20],0x1
   1400016b7:	mov    rdx,QWORD PTR [rdx+0x10]
   1400016bb:	add    rdx,QWORD PTR [r8+0x10]
   1400016bf:	mov    edi,eax
   1400016c1:	cmp    rax,rdx
   1400016c4:	ja     0x1400016ef
   1400016c6:	cmp    QWORD PTR [rcx+0x18],rdx
   1400016ca:	je     0x1400016ef
   1400016cc:	mov    r8b,0x1
   1400016cf:	call   0x140003220
   1400016d4:	test   al,al
   1400016d6:	je     0x1400016ef
   1400016d8:	mov    QWORD PTR [rbx+0x10],rdi
   1400016dc:	cmp    QWORD PTR [rbx+0x18],0x10
   1400016e1:	jb     0x1400016e8
   1400016e3:	mov    rax,QWORD PTR [rbx]
   1400016e6:	jmp    0x1400016eb
   1400016e8:	mov    rax,rbx
   1400016eb:	mov    BYTE PTR [rax+rdi*1],dil
   1400016ef:	or     r9,0xffffffffffffffff
   1400016f3:	xor    r8d,r8d
   1400016f6:	mov    rdx,rbp
   1400016f9:	mov    rcx,rbx
   1400016fc:	call   0x140003680
   140001701:	or     r9,0xffffffffffffffff
   140001705:	xor    r8d,r8d
   140001708:	mov    rdx,rsi
   14000170b:	mov    rcx,rbx
   14000170e:	call   0x140003680
   140001713:	mov    rax,rbx
   140001716:	mov    rbx,QWORD PTR [rsp+0x48]
   14000171b:	mov    rbp,QWORD PTR [rsp+0x50]
   140001720:	mov    rsi,QWORD PTR [rsp+0x58]
   140001725:	add    rsp,0x30
   140001729:	pop    rdi
   14000172a:	ret    
   14000172b:	int3   
   14000172c:	int3   
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	mov    QWORD PTR [rsp+0x8],rcx
   140001735:	push   rsi
   140001736:	push   rdi
   140001737:	push   r14
   140001739:	sub    rsp,0x30
   14000173d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001746:	mov    QWORD PTR [rsp+0x58],rbx
   14000174b:	mov    QWORD PTR [rsp+0x60],rbp
   140001750:	mov    rsi,r8
   140001753:	mov    r14,rdx
   140001756:	mov    rdi,rcx
   140001759:	xor    ebx,ebx
   14000175b:	mov    DWORD PTR [rsp+0x20],ebx
   14000175f:	mov    QWORD PTR [rcx+0x18],0xf
   140001767:	mov    QWORD PTR [rcx+0x10],rbx
   14000176b:	mov    BYTE PTR [rcx],bl
   14000176d:	mov    DWORD PTR [rsp+0x20],0x1
   140001775:	mov    rcx,QWORD PTR [rdx+0x10]
   140001779:	cmp    BYTE PTR [r8],bl
   14000177c:	jne    0x140001782
   14000177e:	mov    eax,ebx
   140001780:	jmp    0x140001790
   140001782:	or     rax,0xffffffffffffffff
   140001786:	inc    rax
   140001789:	cmp    BYTE PTR [r8+rax*1],0x0
   14000178e:	jne    0x140001786
   140001790:	lea    rdx,[rax+rcx*1]
   140001794:	cmp    rbx,rdx
   140001797:	ja     0x1400017c5
   140001799:	cmp    QWORD PTR [rdi+0x18],rdx
   14000179d:	je     0x1400017c5
   14000179f:	mov    r8b,0x1
   1400017a2:	mov    rcx,rdi
   1400017a5:	call   0x140003220
   1400017aa:	test   al,al
   1400017ac:	je     0x1400017c5
   1400017ae:	mov    QWORD PTR [rdi+0x10],rbx
   1400017b2:	cmp    QWORD PTR [rdi+0x18],0x10
   1400017b7:	jb     0x1400017be
   1400017b9:	mov    rax,QWORD PTR [rdi]
   1400017bc:	jmp    0x1400017c1
   1400017be:	mov    rax,rdi
   1400017c1:	mov    BYTE PTR [rax+rbx*1],0x0
   1400017c5:	or     r9,0xffffffffffffffff
   1400017c9:	xor    r8d,r8d
   1400017cc:	mov    rdx,r14
   1400017cf:	mov    rcx,rdi
   1400017d2:	call   0x140003680
   1400017d7:	cmp    BYTE PTR [rsi],0x0
   1400017da:	je     0x1400017e9
   1400017dc:	or     rbx,0xffffffffffffffff
   1400017e0:	inc    rbx
   1400017e3:	cmp    BYTE PTR [rsi+rbx*1],0x0
   1400017e7:	jne    0x1400017e0
   1400017e9:	mov    r8,rbx
   1400017ec:	mov    rdx,rsi
   1400017ef:	mov    rcx,rdi
   1400017f2:	call   0x1400037c0
   1400017f7:	mov    rax,rdi
   1400017fa:	mov    rbx,QWORD PTR [rsp+0x58]
   1400017ff:	mov    rbp,QWORD PTR [rsp+0x60]
   140001804:	add    rsp,0x30
   140001808:	pop    r14
   14000180a:	pop    rdi
   14000180b:	pop    rsi
   14000180c:	ret    
   14000180d:	int3   
   14000180e:	int3   
   14000180f:	int3   
   140001810:	sub    rsp,0x28
   140001814:	xor    eax,eax
   140001816:	test   rcx,rcx
   140001819:	je     0x140001832
   14000181b:	cmp    rcx,0xffffffffffffffff
   14000181f:	ja     0x14000182b
   140001821:	call   0x1400063a4
   140001826:	test   rax,rax
   140001829:	jne    0x140001832
   14000182b:	call   QWORD PTR [rip+0x69cf]        # 0x140008200
   140001831:	int3   
   140001832:	add    rsp,0x28
   140001836:	ret    
   140001837:	int3   
   140001838:	int3   
   140001839:	int3   
   14000183a:	int3   
   14000183b:	int3   
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	ret    0x0
   140001843:	int3   
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	ret    0x0
   140001853:	int3   
   140001854:	int3   
   140001855:	int3   
   140001856:	int3   
   140001857:	int3   
   140001858:	int3   
   140001859:	int3   
   14000185a:	int3   
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	rex push rbx
   140001862:	sub    rsp,0x20
   140001866:	mov    rbx,rcx
   140001869:	mov    rcx,rdx
   14000186c:	call   QWORD PTR [rip+0x69e6]        # 0x140008258
   140001872:	cmp    eax,0xffffffff
   140001875:	jne    0x14000187f
   140001877:	xor    al,al
   140001879:	add    rsp,0x20
   14000187d:	pop    rbx
   14000187e:	ret    
   14000187f:	mov    BYTE PTR [rbx],al
   140001881:	mov    al,0x1
   140001883:	add    rsp,0x20
   140001887:	pop    rbx
   140001888:	ret    
   140001889:	int3   
   14000188a:	int3   
   14000188b:	int3   
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	sub    rsp,0x28
   140001894:	movsx  ecx,cl
   140001897:	call   QWORD PTR [rip+0x69cb]        # 0x140008268
   14000189d:	cmp    eax,0xffffffff
   1400018a0:	setne  al
   1400018a3:	add    rsp,0x28
   1400018a7:	ret    
   1400018a8:	int3   
   1400018a9:	int3   
   1400018aa:	int3   
   1400018ab:	int3   
   1400018ac:	int3   
   1400018ad:	int3   
   1400018ae:	int3   
   1400018af:	int3   
   1400018b0:	movzx  eax,BYTE PTR [rsp+0x18]
   1400018b5:	ret    
   1400018b6:	int3   
   1400018b7:	int3   
   1400018b8:	int3   
   1400018b9:	int3   
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	sub    rsp,0x28
   1400018c4:	movzx  ecx,BYTE PTR [rcx]
   1400018c7:	call   QWORD PTR [rip+0x69c3]        # 0x140008290
   1400018cd:	cmp    eax,0xffffffff
   1400018d0:	setne  al
   1400018d3:	add    rsp,0x28
   1400018d7:	ret    
   1400018d8:	int3   
   1400018d9:	int3   
   1400018da:	int3   
   1400018db:	int3   
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	mov    rax,rdx
   1400018e3:	movsx  edx,BYTE PTR [r8]
   1400018e7:	mov    r8,rax
   1400018ea:	jmp    0x140006552
   1400018ef:	int3   
   1400018f0:	mov    rax,rdx
   1400018f3:	movsx  edx,BYTE PTR [r8]
   1400018f7:	mov    r8,rax
   1400018fa:	jmp    0x140006552
   1400018ff:	int3   
   140001900:	xor    eax,eax
   140001902:	ret    
   140001903:	int3   
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	mov    rax,rcx
   140001913:	ret    
   140001914:	int3   
   140001915:	int3   
   140001916:	int3   
   140001917:	int3   
   140001918:	int3   
   140001919:	int3   
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	mov    rax,rcx
   140001923:	ret    
   140001924:	int3   
   140001925:	int3   
   140001926:	int3   
   140001927:	int3   
   140001928:	int3   
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	sub    rsp,0x38
   140001934:	mov    r10,QWORD PTR [rcx+0x18]
   140001938:	cmp    r10,0x10
   14000193c:	jb     0x140001943
   14000193e:	mov    r9,QWORD PTR [rcx]
   140001941:	jmp    0x140001946
   140001943:	mov    r9,rcx
   140001946:	mov    rax,QWORD PTR [rcx+0x10]
   14000194a:	add    rax,r9
   14000194d:	cmp    r10,0x10
   140001951:	jb     0x140001958
   140001953:	mov    r10,QWORD PTR [rcx]
   140001956:	jmp    0x14000195b
   140001958:	mov    r10,rcx
   14000195b:	mov    QWORD PTR [rsp+0x20],r8
   140001960:	mov    r9,rdx
   140001963:	mov    r8,rax
   140001966:	mov    rdx,r10
   140001969:	call   0x140004fa0
   14000196e:	add    rsp,0x38
   140001972:	ret    
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	int3   
   140001977:	int3   
   140001978:	int3   
   140001979:	int3   
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	test   rdx,rdx
   140001983:	je     0x14000198b
   140001985:	mov    rax,QWORD PTR [r8]
   140001988:	mov    QWORD PTR [rdx],rax
   14000198b:	ret    
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	test   rdx,rdx
   140001993:	je     0x14000199b
   140001995:	mov    rax,QWORD PTR [r8]
   140001998:	mov    QWORD PTR [rdx],rax
   14000199b:	ret    
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	test   rdx,rdx
   1400019a3:	je     0x1400019ab
   1400019a5:	mov    rax,QWORD PTR [r8]
   1400019a8:	mov    QWORD PTR [rdx],rax
   1400019ab:	ret    
   1400019ac:	int3   
   1400019ad:	int3   
   1400019ae:	int3   
   1400019af:	int3   
   1400019b0:	ret    0x0
   1400019b3:	int3   
   1400019b4:	int3   
   1400019b5:	int3   
   1400019b6:	int3   
   1400019b7:	int3   
   1400019b8:	int3   
   1400019b9:	int3   
   1400019ba:	int3   
   1400019bb:	int3   
   1400019bc:	int3   
   1400019bd:	int3   
   1400019be:	int3   
   1400019bf:	int3   
   1400019c0:	ret    0x0
   1400019c3:	int3   
   1400019c4:	int3   
   1400019c5:	int3   
   1400019c6:	int3   
   1400019c7:	int3   
   1400019c8:	int3   
   1400019c9:	int3   
   1400019ca:	int3   
   1400019cb:	int3   
   1400019cc:	int3   
   1400019cd:	int3   
   1400019ce:	int3   
   1400019cf:	int3   
   1400019d0:	ret    0x0
   1400019d3:	int3   
   1400019d4:	int3   
   1400019d5:	int3   
   1400019d6:	int3   
   1400019d7:	int3   
   1400019d8:	int3   
   1400019d9:	int3   
   1400019da:	int3   
   1400019db:	int3   
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	rex push rbx
   1400019e2:	sub    rsp,0x20
   1400019e6:	mov    rax,QWORD PTR [rcx]
   1400019e9:	mov    rbx,rcx
   1400019ec:	mov    dl,0xa
   1400019ee:	movsxd rcx,DWORD PTR [rax+0x4]
   1400019f2:	add    rcx,rbx
   1400019f5:	call   QWORD PTR [rip+0x672d]        # 0x140008128
   1400019fb:	mov    rcx,rbx
   1400019fe:	movzx  edx,al
   140001a01:	call   QWORD PTR [rip+0x6751]        # 0x140008158
   140001a07:	mov    rcx,rbx
   140001a0a:	call   QWORD PTR [rip+0x6750]        # 0x140008160
   140001a10:	mov    rax,rbx
   140001a13:	add    rsp,0x20
   140001a17:	pop    rbx
   140001a18:	ret    
   140001a19:	int3   
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	int3   
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	mov    rax,rcx
   140001a23:	ret    
   140001a24:	int3   
   140001a25:	int3   
   140001a26:	int3   
   140001a27:	int3   
   140001a28:	int3   
   140001a29:	int3   
   140001a2a:	int3   
   140001a2b:	int3   
   140001a2c:	int3   
   140001a2d:	int3   
   140001a2e:	int3   
   140001a2f:	int3   
   140001a30:	mov    rax,rcx
   140001a33:	ret    
   140001a34:	int3   
   140001a35:	int3   
   140001a36:	int3   
   140001a37:	int3   
   140001a38:	int3   
   140001a39:	int3   
   140001a3a:	int3   
   140001a3b:	int3   
   140001a3c:	int3   
   140001a3d:	int3   
   140001a3e:	int3   
   140001a3f:	int3   
   140001a40:	mov    QWORD PTR [rsp+0x8],rcx
   140001a45:	push   rsi
   140001a46:	push   rdi
   140001a47:	push   r12
   140001a49:	push   r14
   140001a4b:	push   r15
   140001a4d:	sub    rsp,0x40
   140001a51:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001a5a:	mov    QWORD PTR [rsp+0x78],rbx
   140001a5f:	movzx  r15d,r8b
   140001a63:	mov    r14,rdx
   140001a66:	mov    rdi,rcx
   140001a69:	xor    ebx,ebx
   140001a6b:	mov    DWORD PTR [rsp+0x20],ebx
   140001a6f:	xor    sil,sil
   140001a72:	mov    BYTE PTR [rsp+0x88],sil
   140001a7a:	mov    r12,rcx
   140001a7d:	mov    QWORD PTR [rsp+0x30],rcx
   140001a82:	mov    rax,QWORD PTR [rcx]
   140001a85:	movsxd r9,DWORD PTR [rax+0x4]
   140001a89:	mov    rcx,QWORD PTR [r9+rcx*1+0x48]
   140001a8e:	test   rcx,rcx
   140001a91:	je     0x140001a9a
   140001a93:	mov    rax,QWORD PTR [rcx]
   140001a96:	call   QWORD PTR [rax+0x8]
   140001a99:	nop
   140001a9a:	mov    dl,0x1
   140001a9c:	mov    rcx,rdi
   140001a9f:	call   QWORD PTR [rip+0x66db]        # 0x140008180
   140001aa5:	mov    BYTE PTR [rsp+0x38],al
   140001aa9:	test   al,al
   140001aab:	je     0x140001b69
   140001ab1:	mov    QWORD PTR [r14+0x10],rbx
   140001ab5:	cmp    QWORD PTR [r14+0x18],0x10
   140001aba:	jb     0x140001ac1
   140001abc:	mov    rax,QWORD PTR [r14]
   140001abf:	jmp    0x140001ac4
   140001ac1:	mov    rax,r14
   140001ac4:	mov    BYTE PTR [rax],0x0
   140001ac7:	movzx  r15d,r15b
   140001acb:	mov    rax,QWORD PTR [rdi]
   140001ace:	movsxd rcx,DWORD PTR [rax+0x4]
   140001ad2:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001ad7:	call   QWORD PTR [rip+0x6603]        # 0x1400080e0
   140001add:	nop    DWORD PTR [rax]
   140001ae0:	cmp    eax,0xffffffff
   140001ae3:	jne    0x140001aea
   140001ae5:	or     ebx,0x1
   140001ae8:	jmp    0x140001b18
   140001aea:	cmp    eax,r15d
   140001aed:	jne    0x140001b0e
   140001aef:	mov    sil,0x1
   140001af2:	mov    BYTE PTR [rsp+0x88],sil
   140001afa:	mov    rax,QWORD PTR [rdi]
   140001afd:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b01:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001b06:	call   QWORD PTR [rip+0x65cc]        # 0x1400080d8
   140001b0c:	jmp    0x140001b1c
   140001b0e:	cmp    QWORD PTR [r14+0x10],0xfffffffffffffffe
   140001b13:	jb     0x140001b1e
   140001b15:	or     ebx,0x2
   140001b18:	mov    DWORD PTR [rsp+0x20],ebx
   140001b1c:	jmp    0x140001b64
   140001b1e:	movzx  r8d,al
   140001b22:	mov    edx,0x1
   140001b27:	mov    rcx,r14
   140001b2a:	call   0x140003910
   140001b2f:	mov    sil,0x1
   140001b32:	mov    BYTE PTR [rsp+0x88],sil
   140001b3a:	mov    rax,QWORD PTR [rdi]
   140001b3d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b41:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001b46:	call   QWORD PTR [rip+0x659c]        # 0x1400080e8
   140001b4c:	jmp    0x140001ae0
   140001b4e:	mov    rdi,QWORD PTR [rsp+0x70]
   140001b53:	mov    ebx,DWORD PTR [rsp+0x20]
   140001b57:	movzx  esi,BYTE PTR [rsp+0x88]
   140001b5f:	mov    r12,QWORD PTR [rsp+0x30]
   140001b64:	test   sil,sil
   140001b67:	jne    0x140001b6c
   140001b69:	or     ebx,0x2
   140001b6c:	mov    rax,QWORD PTR [rdi]
   140001b6f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b73:	add    rcx,rdi
   140001b76:	xor    r8d,r8d
   140001b79:	mov    edx,ebx
   140001b7b:	call   QWORD PTR [rip+0x659f]        # 0x140008120
   140001b81:	nop
   140001b82:	mov    rax,QWORD PTR [r12]
   140001b86:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b8a:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   140001b8f:	test   rcx,rcx
   140001b92:	je     0x140001b9a
   140001b94:	mov    rax,QWORD PTR [rcx]
   140001b97:	call   QWORD PTR [rax+0x10]
   140001b9a:	mov    rax,rdi
   140001b9d:	mov    rbx,QWORD PTR [rsp+0x78]
   140001ba2:	add    rsp,0x40
   140001ba6:	pop    r15
   140001ba8:	pop    r14
   140001baa:	pop    r12
   140001bac:	pop    rdi
   140001bad:	pop    rsi
   140001bae:	ret    
   140001baf:	int3   
   140001bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140001bb5:	push   rdi
   140001bb6:	sub    rsp,0x20
   140001bba:	mov    rax,QWORD PTR [rcx]
   140001bbd:	mov    rdi,rcx
   140001bc0:	mov    rbx,rdx
   140001bc3:	movsxd rcx,DWORD PTR [rax+0x4]
   140001bc7:	mov    dl,0xa
   140001bc9:	add    rcx,rdi
   140001bcc:	call   QWORD PTR [rip+0x6556]        # 0x140008128
   140001bd2:	mov    rdx,rbx
   140001bd5:	mov    rcx,rdi
   140001bd8:	movzx  r8d,al
   140001bdc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001be1:	add    rsp,0x20
   140001be5:	pop    rdi
   140001be6:	jmp    0x140001a40
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    rax,rcx
   140001bf3:	ret    
   140001bf4:	int3   
   140001bf5:	int3   
   140001bf6:	int3   
   140001bf7:	int3   
   140001bf8:	int3   
   140001bf9:	int3   
   140001bfa:	int3   
   140001bfb:	int3   
   140001bfc:	int3   
   140001bfd:	int3   
   140001bfe:	int3   
   140001bff:	int3   
   140001c00:	mov    rax,rcx
   140001c03:	ret    
   140001c04:	int3   
   140001c05:	int3   
   140001c06:	int3   
   140001c07:	int3   
   140001c08:	int3   
   140001c09:	int3   
   140001c0a:	int3   
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	rex push rdi
   140001c12:	sub    rsp,0x40
   140001c16:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001c1f:	mov    QWORD PTR [rsp+0x60],rbx
   140001c24:	mov    QWORD PTR [rsp+0x68],rsi
   140001c29:	mov    rsi,rcx
   140001c2c:	xor    edx,edx
   140001c2e:	lea    rcx,[rsp+0x50]
   140001c33:	call   QWORD PTR [rip+0x65e7]        # 0x140008220
   140001c39:	nop
   140001c3a:	mov    rax,QWORD PTR [rip+0xa857]        # 0x14000c498
   140001c41:	mov    QWORD PTR [rsp+0x58],rax
   140001c46:	mov    rcx,QWORD PTR [rip+0x65db]        # 0x140008228
   140001c4d:	call   QWORD PTR [rip+0x641d]        # 0x140008070
   140001c53:	mov    rdi,rax
   140001c56:	mov    rax,QWORD PTR [rsi]
   140001c59:	cmp    rdi,QWORD PTR [rax+0x18]
   140001c5d:	jae    0x140001c72
   140001c5f:	mov    rcx,QWORD PTR [rax+0x10]
   140001c63:	mov    rbx,QWORD PTR [rcx+rdi*8]
   140001c67:	test   rbx,rbx
   140001c6a:	jne    0x140001cf3
   140001c70:	jmp    0x140001c74
   140001c72:	xor    ebx,ebx
   140001c74:	cmp    BYTE PTR [rax+0x24],0x0
   140001c78:	je     0x140001c8e
   140001c7a:	call   QWORD PTR [rip+0x63f8]        # 0x140008078
   140001c80:	cmp    rdi,QWORD PTR [rax+0x18]
   140001c84:	jae    0x140001c93
   140001c86:	mov    rax,QWORD PTR [rax+0x10]
   140001c8a:	mov    rbx,QWORD PTR [rax+rdi*8]
   140001c8e:	test   rbx,rbx
   140001c91:	jne    0x140001cf3
   140001c93:	mov    rbx,QWORD PTR [rsp+0x58]
   140001c98:	test   rbx,rbx
   140001c9b:	jne    0x140001cf3
   140001c9d:	mov    rdx,rsi
   140001ca0:	lea    rcx,[rsp+0x58]
   140001ca5:	call   QWORD PTR [rip+0x63f5]        # 0x1400080a0
   140001cab:	cmp    rax,0xffffffffffffffff
   140001caf:	jne    0x140001cd5
   140001cb1:	lea    rdx,[rip+0x6e58]        # 0x140008b10
   140001cb8:	lea    rcx,[rsp+0x28]
   140001cbd:	call   QWORD PTR [rip+0x65fd]        # 0x1400082c0
   140001cc3:	lea    rdx,[rip+0x880e]        # 0x14000a4d8
   140001cca:	lea    rcx,[rsp+0x28]
   140001ccf:	call   0x140006540
   140001cd4:	int3   
   140001cd5:	mov    rbx,QWORD PTR [rsp+0x58]
   140001cda:	mov    QWORD PTR [rip+0xa7b7],rbx        # 0x14000c498
   140001ce1:	mov    rax,QWORD PTR [rbx]
   140001ce4:	mov    rcx,rbx
   140001ce7:	call   QWORD PTR [rax+0x8]
   140001cea:	mov    rcx,rbx
   140001ced:	call   0x140006244
   140001cf2:	nop
   140001cf3:	lea    rcx,[rsp+0x50]
   140001cf8:	call   QWORD PTR [rip+0x6532]        # 0x140008230
   140001cfe:	mov    rax,rbx
   140001d01:	mov    rbx,QWORD PTR [rsp+0x60]
   140001d06:	mov    rsi,QWORD PTR [rsp+0x68]
   140001d0b:	add    rsp,0x40
   140001d0f:	pop    rdi
   140001d10:	ret    
   140001d11:	int3   
   140001d12:	int3   
   140001d13:	int3   
   140001d14:	int3   
   140001d15:	int3   
   140001d16:	int3   
   140001d17:	int3   
   140001d18:	int3   
   140001d19:	int3   
   140001d1a:	int3   
   140001d1b:	int3   
   140001d1c:	int3   
   140001d1d:	int3   
   140001d1e:	int3   
   140001d1f:	int3   
   140001d20:	xor    eax,eax
   140001d22:	mov    QWORD PTR [rcx+0x10],rax
   140001d26:	mov    QWORD PTR [rcx+0x18],rax
   140001d2a:	mov    rax,rcx
   140001d2d:	ret    
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	mov    QWORD PTR [rcx],rdx
   140001d33:	mov    rax,rcx
   140001d36:	ret    
   140001d37:	int3   
   140001d38:	int3   
   140001d39:	int3   
   140001d3a:	int3   
   140001d3b:	int3   
   140001d3c:	int3   
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	mov    QWORD PTR [rcx],rdx
   140001d43:	mov    rax,rcx
   140001d46:	ret    
   140001d47:	int3   
   140001d48:	int3   
   140001d49:	int3   
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	int3   
   140001d4d:	int3   
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	xor    eax,eax
   140001d52:	mov    QWORD PTR [rcx+0x10],rax
   140001d56:	mov    QWORD PTR [rcx+0x18],rax
   140001d5a:	mov    rax,rcx
   140001d5d:	ret    
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	xor    eax,eax
   140001d62:	mov    QWORD PTR [rcx],rax
   140001d65:	mov    QWORD PTR [rcx+0x8],rax
   140001d69:	mov    QWORD PTR [rcx+0x10],rax
   140001d6d:	mov    rax,rcx
   140001d70:	ret    
   140001d71:	int3   
   140001d72:	int3   
   140001d73:	int3   
   140001d74:	int3   
   140001d75:	int3   
   140001d76:	int3   
   140001d77:	int3   
   140001d78:	int3   
   140001d79:	int3   
   140001d7a:	int3   
   140001d7b:	int3   
   140001d7c:	int3   
   140001d7d:	int3   
   140001d7e:	int3   
   140001d7f:	int3   
   140001d80:	xor    eax,eax
   140001d82:	mov    QWORD PTR [rcx],rax
   140001d85:	mov    QWORD PTR [rcx+0x8],rax
   140001d89:	mov    QWORD PTR [rcx+0x10],rax
   140001d8d:	mov    rax,rcx
   140001d90:	ret    
   140001d91:	int3   
   140001d92:	int3   
   140001d93:	int3   
   140001d94:	int3   
   140001d95:	int3   
   140001d96:	int3   
   140001d97:	int3   
   140001d98:	int3   
   140001d99:	int3   
   140001d9a:	int3   
   140001d9b:	int3   
   140001d9c:	int3   
   140001d9d:	int3   
   140001d9e:	int3   
   140001d9f:	int3   
   140001da0:	mov    rax,rcx
   140001da3:	ret    
   140001da4:	int3   
   140001da5:	int3   
   140001da6:	int3   
   140001da7:	int3   
   140001da8:	int3   
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	mov    rax,rcx
   140001db3:	ret    
   140001db4:	int3   
   140001db5:	int3   
   140001db6:	int3   
   140001db7:	int3   
   140001db8:	int3   
   140001db9:	int3   
   140001dba:	int3   
   140001dbb:	int3   
   140001dbc:	int3   
   140001dbd:	int3   
   140001dbe:	int3   
   140001dbf:	int3   
   140001dc0:	mov    rax,rcx
   140001dc3:	ret    
   140001dc4:	int3   
   140001dc5:	int3   
   140001dc6:	int3   
   140001dc7:	int3   
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	mov    QWORD PTR [rsp+0x8],rcx
   140001dd5:	push   rdi
   140001dd6:	sub    rsp,0x30
   140001dda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001de3:	mov    QWORD PTR [rsp+0x48],rbx
   140001de8:	mov    rdi,rdx
   140001deb:	mov    rbx,rcx
   140001dee:	call   QWORD PTR [rip+0x62cc]        # 0x1400080c0
   140001df4:	nop
   140001df5:	lea    rax,[rip+0x6bdc]        # 0x1400089d8
   140001dfc:	mov    QWORD PTR [rbx],rax
   140001dff:	mov    BYTE PTR [rbx+0x88],0x0
   140001e06:	mov    BYTE PTR [rbx+0x81],0x0
   140001e0d:	mov    rcx,rbx
   140001e10:	call   QWORD PTR [rip+0x62f2]        # 0x140008108
   140001e16:	test   rdi,rdi
   140001e19:	je     0x140001e3b
   140001e1b:	lea    rax,[rdi+0x10]
   140001e1f:	lea    rcx,[rdi+0x8]
   140001e23:	mov    QWORD PTR [rbx+0x18],rax
   140001e27:	mov    QWORD PTR [rbx+0x20],rax
   140001e2b:	mov    QWORD PTR [rbx+0x38],rdi
   140001e2f:	mov    QWORD PTR [rbx+0x40],rdi
   140001e33:	mov    QWORD PTR [rbx+0x50],rcx
   140001e37:	mov    QWORD PTR [rbx+0x58],rcx
   140001e3b:	mov    QWORD PTR [rbx+0x90],rdi
   140001e42:	mov    eax,DWORD PTR [rip+0xa648]        # 0x14000c490
   140001e48:	mov    DWORD PTR [rbx+0x84],eax
   140001e4e:	mov    QWORD PTR [rbx+0x78],0x0
   140001e56:	mov    rax,rbx
   140001e59:	mov    rbx,QWORD PTR [rsp+0x48]
   140001e5e:	add    rsp,0x30
   140001e62:	pop    rdi
   140001e63:	ret    
   140001e64:	int3   
   140001e65:	int3   
   140001e66:	int3   
   140001e67:	int3   
   140001e68:	int3   
   140001e69:	int3   
   140001e6a:	int3   
   140001e6b:	int3   
   140001e6c:	int3   
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	mov    QWORD PTR [rsp+0x8],rcx
   140001e75:	push   rsi
   140001e76:	push   rdi
   140001e77:	push   r14
   140001e79:	sub    rsp,0x30
   140001e7d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001e86:	mov    QWORD PTR [rsp+0x58],rbx
   140001e8b:	mov    QWORD PTR [rsp+0x68],rbp
   140001e90:	mov    ebp,r9d
   140001e93:	mov    esi,r8d
   140001e96:	mov    r14,rdx
   140001e99:	mov    rdi,rcx
   140001e9c:	mov    DWORD PTR [rsp+0x60],0x0
   140001ea4:	cmp    DWORD PTR [rsp+0x70],0x0
   140001ea9:	je     0x140001ed9
   140001eab:	lea    rax,[rip+0x6bae]        # 0x140008a60
   140001eb2:	mov    QWORD PTR [rcx],rax
   140001eb5:	mov    rax,QWORD PTR [rip+0x634c]        # 0x140008208
   140001ebc:	mov    QWORD PTR [rcx+0xb0],rax
   140001ec3:	mov    rax,QWORD PTR [rip+0x6346]        # 0x140008210
   140001eca:	mov    QWORD PTR [rcx+0xb0],rax
   140001ed1:	mov    DWORD PTR [rsp+0x60],0x1
   140001ed9:	lea    rbx,[rcx+0x10]
   140001edd:	xor    r9d,r9d
   140001ee0:	xor    r8d,r8d
   140001ee3:	mov    rdx,rbx
   140001ee6:	call   QWORD PTR [rip+0x6284]        # 0x140008170
   140001eec:	nop
   140001eed:	mov    rax,QWORD PTR [rdi]
   140001ef0:	movsxd rcx,DWORD PTR [rax+0x4]
   140001ef4:	lea    rax,[rip+0x6b5d]        # 0x140008a58
   140001efb:	mov    QWORD PTR [rcx+rdi*1],rax
   140001eff:	mov    rax,QWORD PTR [rdi]
   140001f02:	movsxd rcx,DWORD PTR [rax+0x4]
   140001f06:	lea    edx,[rcx-0xb0]
   140001f0c:	mov    DWORD PTR [rcx+rdi*1-0x4],edx
   140001f10:	mov    QWORD PTR [rsp+0x28],rbx
   140001f15:	mov    rcx,rbx
   140001f18:	call   QWORD PTR [rip+0x61a2]        # 0x1400080c0
   140001f1e:	nop
   140001f1f:	lea    rax,[rip+0x6ab2]        # 0x1400089d8
   140001f26:	mov    QWORD PTR [rbx],rax
   140001f29:	mov    BYTE PTR [rbx+0x88],0x0
   140001f30:	mov    BYTE PTR [rbx+0x81],0x0
   140001f37:	mov    rcx,rbx
   140001f3a:	call   QWORD PTR [rip+0x61c8]        # 0x140008108
   140001f40:	mov    QWORD PTR [rbx+0x90],0x0
   140001f4b:	mov    eax,DWORD PTR [rip+0xa53f]        # 0x14000c490
   140001f51:	mov    DWORD PTR [rbx+0x84],eax
   140001f57:	mov    QWORD PTR [rbx+0x78],0x0
   140001f5f:	or     esi,0x1
   140001f62:	mov    r9d,ebp
   140001f65:	mov    r8d,esi
   140001f68:	mov    rdx,r14
   140001f6b:	mov    rcx,rbx
   140001f6e:	call   0x1400043f0
   140001f73:	test   rax,rax
   140001f76:	jne    0x140001f90
   140001f78:	mov    rax,QWORD PTR [rdi]
   140001f7b:	movsxd rcx,DWORD PTR [rax+0x4]
   140001f7f:	add    rcx,rdi
   140001f82:	xor    r8d,r8d
   140001f85:	lea    edx,[r8+0x2]
   140001f89:	call   QWORD PTR [rip+0x6191]        # 0x140008120
   140001f8f:	nop
   140001f90:	mov    rax,rdi
   140001f93:	mov    rbx,QWORD PTR [rsp+0x58]
   140001f98:	mov    rbp,QWORD PTR [rsp+0x68]
   140001f9d:	add    rsp,0x30
   140001fa1:	pop    r14
   140001fa3:	pop    rdi
   140001fa4:	pop    rsi
   140001fa5:	ret    
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	mov    QWORD PTR [rsp+0x8],rcx
   140001fb5:	push   rdi
   140001fb6:	sub    rsp,0x30
   140001fba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001fc3:	mov    QWORD PTR [rsp+0x58],rbx
   140001fc8:	mov    rdi,rcx
   140001fcb:	mov    DWORD PTR [rsp+0x48],0x0
   140001fd3:	test   edx,edx
   140001fd5:	je     0x140002005
   140001fd7:	lea    rax,[rip+0x6aaa]        # 0x140008a88
   140001fde:	mov    QWORD PTR [rcx],rax
   140001fe1:	mov    rax,QWORD PTR [rip+0x6220]        # 0x140008208
   140001fe8:	mov    QWORD PTR [rcx+0xa8],rax
   140001fef:	mov    rax,QWORD PTR [rip+0x621a]        # 0x140008210
   140001ff6:	mov    QWORD PTR [rcx+0xa8],rax
   140001ffd:	mov    DWORD PTR [rsp+0x48],0x1
   140002005:	lea    rbx,[rcx+0x8]
   140002009:	xor    r9d,r9d
   14000200c:	xor    r8d,r8d
   14000200f:	mov    rdx,rbx
   140002012:	call   QWORD PTR [rip+0x6118]        # 0x140008130
   140002018:	nop
   140002019:	mov    rax,QWORD PTR [rdi]
   14000201c:	movsxd rcx,DWORD PTR [rax+0x4]
   140002020:	lea    rax,[rip+0x6a59]        # 0x140008a80
   140002027:	mov    QWORD PTR [rcx+rdi*1],rax
   14000202b:	mov    rax,QWORD PTR [rdi]
   14000202e:	movsxd rcx,DWORD PTR [rax+0x4]
   140002032:	lea    edx,[rcx-0xa8]
   140002038:	mov    DWORD PTR [rcx+rdi*1-0x4],edx
   14000203c:	mov    QWORD PTR [rsp+0x50],rbx
   140002041:	mov    rcx,rbx
   140002044:	call   QWORD PTR [rip+0x6076]        # 0x1400080c0
   14000204a:	nop
   14000204b:	lea    rax,[rip+0x6986]        # 0x1400089d8
   140002052:	mov    QWORD PTR [rbx],rax
   140002055:	mov    BYTE PTR [rbx+0x88],0x0
   14000205c:	mov    BYTE PTR [rbx+0x81],0x0
   140002063:	mov    rcx,rbx
   140002066:	call   QWORD PTR [rip+0x609c]        # 0x140008108
   14000206c:	mov    QWORD PTR [rbx+0x90],0x0
   140002077:	mov    eax,DWORD PTR [rip+0xa413]        # 0x14000c490
   14000207d:	mov    DWORD PTR [rbx+0x84],eax
   140002083:	mov    QWORD PTR [rbx+0x78],0x0
   14000208b:	mov    rax,rdi
   14000208e:	mov    rbx,QWORD PTR [rsp+0x58]
   140002093:	add    rsp,0x30
   140002097:	pop    rdi
   140002098:	ret    
   140002099:	int3   
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020a5:	push   rdi
   1400020a6:	sub    rsp,0x20
   1400020aa:	mov    QWORD PTR [rcx+0x18],0xf
   1400020b2:	mov    QWORD PTR [rcx+0x10],0x0
   1400020ba:	mov    BYTE PTR [rcx],0x0
   1400020bd:	cmp    QWORD PTR [rdx+0x18],0x10
   1400020c2:	mov    rbx,rdx
   1400020c5:	mov    rdi,rcx
   1400020c8:	jae    0x1400020db
   1400020ca:	mov    r8,QWORD PTR [rdx+0x10]
   1400020ce:	inc    r8
   1400020d1:	je     0x1400020e8
   1400020d3:	call   QWORD PTR [rip+0x61df]        # 0x1400082b8
   1400020d9:	jmp    0x1400020e8
   1400020db:	mov    rax,QWORD PTR [rdx]
   1400020de:	mov    QWORD PTR [rcx],rax
   1400020e1:	mov    QWORD PTR [rdx],0x0
   1400020e8:	mov    rax,QWORD PTR [rbx+0x10]
   1400020ec:	mov    QWORD PTR [rdi+0x10],rax
   1400020f0:	mov    rax,QWORD PTR [rbx+0x18]
   1400020f4:	mov    QWORD PTR [rdi+0x18],rax
   1400020f8:	mov    QWORD PTR [rbx+0x18],0xf
   140002100:	mov    QWORD PTR [rbx+0x10],0x0
   140002108:	mov    BYTE PTR [rbx],0x0
   14000210b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002110:	mov    rax,rdi
   140002113:	add    rsp,0x20
   140002117:	pop    rdi
   140002118:	ret    
   140002119:	int3   
   14000211a:	int3   
   14000211b:	int3   
   14000211c:	int3   
   14000211d:	int3   
   14000211e:	int3   
   14000211f:	int3   
   140002120:	rex push rbx
   140002122:	sub    rsp,0x20
   140002126:	xor    r8d,r8d
   140002129:	mov    QWORD PTR [rcx+0x18],0xf
   140002131:	mov    rbx,rcx
   140002134:	mov    QWORD PTR [rcx+0x10],r8
   140002138:	mov    BYTE PTR [rcx],r8b
   14000213b:	cmp    BYTE PTR [rdx],r8b
   14000213e:	je     0x14000214e
   140002140:	or     r8,0xffffffffffffffff
   140002144:	inc    r8
   140002147:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000214c:	jne    0x140002144
   14000214e:	call   0x140003b80
   140002153:	mov    rax,rbx
   140002156:	add    rsp,0x20
   14000215a:	pop    rbx
   14000215b:	ret    
   14000215c:	int3   
   14000215d:	int3   
   14000215e:	int3   
   14000215f:	int3   
   140002160:	mov    QWORD PTR [rcx+0x18],0xf
   140002168:	mov    QWORD PTR [rcx+0x10],0x0
   140002170:	mov    rax,rcx
   140002173:	mov    BYTE PTR [rcx],0x0
   140002176:	ret    
   140002177:	int3   
   140002178:	int3   
   140002179:	int3   
   14000217a:	int3   
   14000217b:	int3   
   14000217c:	int3   
   14000217d:	int3   
   14000217e:	int3   
   14000217f:	int3   
   140002180:	rex push rbx
   140002182:	sub    rsp,0x20
   140002186:	mov    QWORD PTR [rcx+0x18],0xf
   14000218e:	mov    QWORD PTR [rcx+0x10],0x0
   140002196:	mov    rbx,rcx
   140002199:	mov    BYTE PTR [rcx],0x0
   14000219c:	call   0x140003cb0
   1400021a1:	mov    rax,rbx
   1400021a4:	add    rsp,0x20
   1400021a8:	pop    rbx
   1400021a9:	ret    
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	mov    QWORD PTR [rcx],0x0
   1400021b7:	mov    QWORD PTR [rcx+0x8],r8
   1400021bb:	mov    DWORD PTR [rcx+0x10],edx
   1400021be:	mov    rax,rcx
   1400021c1:	ret    
   1400021c2:	int3   
   1400021c3:	int3   
   1400021c4:	int3   
   1400021c5:	int3   
   1400021c6:	int3   
   1400021c7:	int3   
   1400021c8:	int3   
   1400021c9:	int3   
   1400021ca:	int3   
   1400021cb:	int3   
   1400021cc:	int3   
   1400021cd:	int3   
   1400021ce:	int3   
   1400021cf:	int3   
   1400021d0:	xor    eax,eax
   1400021d2:	mov    QWORD PTR [rcx],rdx
   1400021d5:	mov    QWORD PTR [rcx+0x8],rax
   1400021d9:	mov    DWORD PTR [rcx+0x10],eax
   1400021dc:	mov    rax,rcx
   1400021df:	ret    
   1400021e0:	rex push rbx
   1400021e2:	sub    rsp,0x20
   1400021e6:	xor    eax,eax
   1400021e8:	mov    rbx,rcx
   1400021eb:	mov    QWORD PTR [rcx],rax
   1400021ee:	mov    QWORD PTR [rcx+0x8],rax
   1400021f2:	mov    QWORD PTR [rcx+0x10],rax
   1400021f6:	call   0x140002d70
   1400021fb:	mov    rax,rbx
   1400021fe:	add    rsp,0x20
   140002202:	pop    rbx
   140002203:	ret    
   140002204:	int3   
   140002205:	int3   
   140002206:	int3   
   140002207:	int3   
   140002208:	int3   
   140002209:	int3   
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	int3   
   14000220d:	int3   
   14000220e:	int3   
   14000220f:	int3   
   140002210:	rex push rbx
   140002212:	sub    rsp,0x20
   140002216:	mov    rbx,rcx
   140002219:	call   QWORD PTR [rip+0x5ea1]        # 0x1400080c0
   14000221f:	lea    rax,[rip+0x6732]        # 0x140008958
   140002226:	mov    QWORD PTR [rbx],rax
   140002229:	mov    rax,rbx
   14000222c:	add    rsp,0x20
   140002230:	pop    rbx
   140002231:	ret    
   140002232:	int3   
   140002233:	int3   
   140002234:	int3   
   140002235:	int3   
   140002236:	int3   
   140002237:	int3   
   140002238:	int3   
   140002239:	int3   
   14000223a:	int3   
   14000223b:	int3   
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	lea    rax,[rip+0x6621]        # 0x140008868
   140002247:	mov    QWORD PTR [rcx],rax
   14000224a:	mov    rax,rcx
   14000224d:	ret    
   14000224e:	int3   
   14000224f:	int3   
   140002250:	lea    rax,[rip+0x6661]        # 0x1400088b8
   140002257:	mov    QWORD PTR [rcx],rax
   14000225a:	mov    rax,rcx
   14000225d:	ret    
   14000225e:	int3   
   14000225f:	int3   
   140002260:	rex push rbx
   140002262:	sub    rsp,0x20
   140002266:	mov    QWORD PTR [rcx],rdx
   140002269:	mov    rax,QWORD PTR [rdx]
   14000226c:	mov    rbx,rcx
   14000226f:	movsxd r8,DWORD PTR [rax+0x4]
   140002273:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140002278:	test   rcx,rcx
   14000227b:	je     0x140002283
   14000227d:	mov    rax,QWORD PTR [rcx]
   140002280:	call   QWORD PTR [rax+0x8]
   140002283:	mov    rax,rbx
   140002286:	add    rsp,0x20
   14000228a:	pop    rbx
   14000228b:	ret    
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	rex push rbx
   140002292:	sub    rsp,0x20
   140002296:	mov    QWORD PTR [rcx],rdx
   140002299:	mov    rax,QWORD PTR [rdx]
   14000229c:	mov    rbx,rcx
   14000229f:	movsxd r8,DWORD PTR [rax+0x4]
   1400022a3:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   1400022a8:	test   rcx,rcx
   1400022ab:	je     0x1400022b3
   1400022ad:	mov    rax,QWORD PTR [rcx]
   1400022b0:	call   QWORD PTR [rax+0x8]
   1400022b3:	mov    rax,rbx
   1400022b6:	add    rsp,0x20
   1400022ba:	pop    rbx
   1400022bb:	ret    
   1400022bc:	int3   
   1400022bd:	int3   
   1400022be:	int3   
   1400022bf:	int3   
   1400022c0:	lea    rax,[rip+0x6651]        # 0x140008918
   1400022c7:	mov    QWORD PTR [rcx],rax
   1400022ca:	mov    rax,rcx
   1400022cd:	ret    
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	lea    rax,[rip+0x6559]        # 0x140008830
   1400022d7:	mov    QWORD PTR [rcx],rax
   1400022da:	mov    rax,rcx
   1400022dd:	ret    
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	mov    DWORD PTR [rcx],edx
   1400022e2:	mov    QWORD PTR [rcx+0x8],r8
   1400022e6:	mov    rax,rcx
   1400022e9:	ret    
   1400022ea:	int3   
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400022f5:	push   rdi
   1400022f6:	sub    rsp,0x30
   1400022fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002303:	mov    QWORD PTR [rsp+0x48],rbx
   140002308:	movzx  edi,r8b
   14000230c:	mov    rbx,rcx
   14000230f:	mov    QWORD PTR [rcx],rdx
   140002312:	mov    rax,QWORD PTR [rdx]
   140002315:	movsxd r9,DWORD PTR [rax+0x4]
   140002319:	mov    rcx,QWORD PTR [r9+rdx*1+0x48]
   14000231e:	test   rcx,rcx
   140002321:	je     0x14000232a
   140002323:	mov    rax,QWORD PTR [rcx]
   140002326:	call   QWORD PTR [rax+0x8]
   140002329:	nop
   14000232a:	movzx  edx,dil
   14000232e:	mov    rcx,QWORD PTR [rbx]
   140002331:	call   QWORD PTR [rip+0x5e49]        # 0x140008180
   140002337:	mov    BYTE PTR [rbx+0x8],al
   14000233a:	mov    rax,rbx
   14000233d:	mov    rbx,QWORD PTR [rsp+0x48]
   140002342:	add    rsp,0x30
   140002346:	pop    rdi
   140002347:	ret    
   140002348:	int3   
   140002349:	int3   
   14000234a:	int3   
   14000234b:	int3   
   14000234c:	int3   
   14000234d:	int3   
   14000234e:	int3   
   14000234f:	int3   
   140002350:	mov    QWORD PTR [rsp+0x8],rcx
   140002355:	push   rdi
   140002356:	sub    rsp,0x30
   14000235a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002363:	mov    QWORD PTR [rsp+0x48],rbx
   140002368:	mov    rbx,rdx
   14000236b:	mov    rdi,rcx
   14000236e:	mov    QWORD PTR [rcx],rdx
   140002371:	mov    rax,QWORD PTR [rdx]
   140002374:	movsxd r8,DWORD PTR [rax+0x4]
   140002378:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   14000237d:	test   rcx,rcx
   140002380:	je     0x140002389
   140002382:	mov    rax,QWORD PTR [rcx]
   140002385:	call   QWORD PTR [rax+0x8]
   140002388:	nop
   140002389:	mov    rax,QWORD PTR [rbx]
   14000238c:	movsxd rcx,DWORD PTR [rax+0x4]
   140002390:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140002395:	jne    0x1400023ac
   140002397:	mov    rcx,QWORD PTR [rcx+rbx*1+0x50]
   14000239c:	test   rcx,rcx
   14000239f:	je     0x1400023ac
   1400023a1:	cmp    rcx,rbx
   1400023a4:	je     0x1400023ac
   1400023a6:	call   QWORD PTR [rip+0x5db4]        # 0x140008160
   1400023ac:	mov    rax,QWORD PTR [rbx]
   1400023af:	movsxd rcx,DWORD PTR [rax+0x4]
   1400023b3:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   1400023b8:	sete   al
   1400023bb:	mov    BYTE PTR [rdi+0x8],al
   1400023be:	mov    rax,rdi
   1400023c1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400023c6:	add    rsp,0x30
   1400023ca:	pop    rdi
   1400023cb:	ret    
   1400023cc:	int3   
   1400023cd:	int3   
   1400023ce:	int3   
   1400023cf:	int3   
   1400023d0:	rex push rbx
   1400023d2:	sub    rsp,0x20
   1400023d6:	cmp    QWORD PTR [rcx+0x90],0x0
   1400023de:	lea    rax,[rip+0x65f3]        # 0x1400089d8
   1400023e5:	mov    rbx,rcx
   1400023e8:	mov    QWORD PTR [rcx],rax
   1400023eb:	je     0x140002419
   1400023ed:	mov    rcx,QWORD PTR [rcx+0x18]
   1400023f1:	lea    rax,[rbx+0x80]
   1400023f8:	cmp    QWORD PTR [rcx],rax
   1400023fb:	jne    0x140002419
   1400023fd:	mov    rdx,QWORD PTR [rbx+0x68]
   140002401:	mov    r8,QWORD PTR [rbx+0x70]
   140002405:	mov    QWORD PTR [rcx],rdx
   140002408:	mov    rax,QWORD PTR [rbx+0x38]
   14000240c:	sub    r8d,edx
   14000240f:	mov    QWORD PTR [rax],rdx
   140002412:	mov    rax,QWORD PTR [rbx+0x50]
   140002416:	mov    DWORD PTR [rax],r8d
   140002419:	cmp    BYTE PTR [rbx+0x88],0x0
   140002420:	je     0x14000242a
   140002422:	mov    rcx,rbx
   140002425:	call   0x140003e40
   14000242a:	mov    rcx,rbx
   14000242d:	add    rsp,0x20
   140002431:	pop    rbx
   140002432:	rex.W jmp QWORD PTR [rip+0x5c8f]        # 0x1400080c8
   140002439:	int3   
   14000243a:	int3   
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	rex push rbx
   140002442:	sub    rsp,0x20
   140002446:	mov    rax,QWORD PTR [rcx-0xb0]
   14000244d:	mov    rbx,rcx
   140002450:	add    rcx,0xffffffffffffff60
   140002457:	movsxd rdx,DWORD PTR [rax+0x4]
   14000245b:	lea    rax,[rip+0x65f6]        # 0x140008a58
   140002462:	mov    QWORD PTR [rdx+rcx*1-0x10],rax
   140002467:	mov    rax,QWORD PTR [rcx-0x10]
   14000246b:	movsxd rdx,DWORD PTR [rax+0x4]
   14000246f:	lea    r8d,[rdx-0xb0]
   140002476:	mov    DWORD PTR [rdx+rcx*1-0x14],r8d
   14000247b:	call   0x1400023d0
   140002480:	lea    rcx,[rbx-0x98]
   140002487:	add    rsp,0x20
   14000248b:	pop    rbx
   14000248c:	rex.W jmp QWORD PTR [rip+0x5ce5]        # 0x140008178
   140002493:	int3   
   140002494:	int3   
   140002495:	int3   
   140002496:	int3   
   140002497:	int3   
   140002498:	int3   
   140002499:	int3   
   14000249a:	int3   
   14000249b:	int3   
   14000249c:	int3   
   14000249d:	int3   
   14000249e:	int3   
   14000249f:	int3   
   1400024a0:	rex push rbx
   1400024a2:	sub    rsp,0x20
   1400024a6:	mov    rax,QWORD PTR [rcx-0xa8]
   1400024ad:	mov    rbx,rcx
   1400024b0:	add    rcx,0xffffffffffffff60
   1400024b7:	movsxd rdx,DWORD PTR [rax+0x4]
   1400024bb:	lea    rax,[rip+0x65be]        # 0x140008a80
   1400024c2:	mov    QWORD PTR [rdx+rcx*1-0x8],rax
   1400024c7:	mov    rax,QWORD PTR [rcx-0x8]
   1400024cb:	movsxd rdx,DWORD PTR [rax+0x4]
   1400024cf:	lea    r8d,[rdx-0xa8]
   1400024d6:	mov    DWORD PTR [rdx+rcx*1-0xc],r8d
   1400024db:	call   0x1400023d0
   1400024e0:	lea    rcx,[rbx-0x98]
   1400024e7:	add    rsp,0x20
   1400024eb:	pop    rbx
   1400024ec:	rex.W jmp QWORD PTR [rip+0x5c45]        # 0x140008138
   1400024f3:	int3   
   1400024f4:	int3   
   1400024f5:	int3   
   1400024f6:	int3   
   1400024f7:	int3   
   1400024f8:	int3   
   1400024f9:	int3   
   1400024fa:	int3   
   1400024fb:	int3   
   1400024fc:	int3   
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	rex push rbx
   140002502:	sub    rsp,0x20
   140002506:	cmp    QWORD PTR [rcx+0x18],0x10
   14000250b:	mov    rbx,rcx
   14000250e:	jb     0x140002518
   140002510:	mov    rcx,QWORD PTR [rcx]
   140002513:	call   0x1400063aa
   140002518:	mov    QWORD PTR [rbx+0x18],0xf
   140002520:	mov    QWORD PTR [rbx+0x10],0x0
   140002528:	mov    BYTE PTR [rbx],0x0
   14000252b:	add    rsp,0x20
   14000252f:	pop    rbx
   140002530:	ret    
   140002531:	int3   
   140002532:	int3   
   140002533:	int3   
   140002534:	int3   
   140002535:	int3   
   140002536:	int3   
   140002537:	int3   
   140002538:	int3   
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	rex push rbx
   140002542:	sub    rsp,0x20
   140002546:	mov    rbx,rcx
   140002549:	mov    rcx,QWORD PTR [rcx]
   14000254c:	test   rcx,rcx
   14000254f:	je     0x140002563
   140002551:	call   0x1400063aa
   140002556:	xor    eax,eax
   140002558:	mov    QWORD PTR [rbx],rax
   14000255b:	mov    QWORD PTR [rbx+0x8],rax
   14000255f:	mov    QWORD PTR [rbx+0x10],rax
   140002563:	add    rsp,0x20
   140002567:	pop    rbx
   140002568:	ret    
   140002569:	int3   
   14000256a:	int3   
   14000256b:	int3   
   14000256c:	int3   
   14000256d:	int3   
   14000256e:	int3   
   14000256f:	int3   
   140002570:	rex.W jmp QWORD PTR [rip+0x5b51]        # 0x1400080c8
   140002577:	int3   
   140002578:	int3   
   140002579:	int3   
   14000257a:	int3   
   14000257b:	int3   
   14000257c:	int3   
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	lea    rax,[rip+0x62a9]        # 0x140008830
   140002587:	mov    QWORD PTR [rcx],rax
   14000258a:	ret    
   14000258b:	int3   
   14000258c:	int3   
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	lea    rax,[rip+0x6299]        # 0x140008830
   140002597:	mov    QWORD PTR [rcx],rax
   14000259a:	ret    
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    rdx,QWORD PTR [rcx]
   1400025a3:	mov    rax,QWORD PTR [rdx]
   1400025a6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400025aa:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   1400025af:	test   rcx,rcx
   1400025b2:	je     0x1400025bb
   1400025b4:	mov    rax,QWORD PTR [rcx]
   1400025b7:	rex.W jmp QWORD PTR [rax+0x10]
   1400025bb:	ret    
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	mov    rdx,QWORD PTR [rcx]
   1400025c3:	mov    rax,QWORD PTR [rdx]
   1400025c6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400025ca:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   1400025cf:	test   rcx,rcx
   1400025d2:	je     0x1400025db
   1400025d4:	mov    rax,QWORD PTR [rcx]
   1400025d7:	rex.W jmp QWORD PTR [rax+0x10]
   1400025db:	ret    
   1400025dc:	int3   
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	lea    rax,[rip+0x6249]        # 0x140008830
   1400025e7:	mov    QWORD PTR [rcx],rax
   1400025ea:	ret    
   1400025eb:	int3   
   1400025ec:	int3   
   1400025ed:	int3   
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	lea    rax,[rip+0x6239]        # 0x140008830
   1400025f7:	mov    QWORD PTR [rcx],rax
   1400025fa:	ret    
   1400025fb:	int3   
   1400025fc:	int3   
   1400025fd:	int3   
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	sub    rsp,0x28
   140002604:	mov    rcx,QWORD PTR [rcx]
   140002607:	test   rcx,rcx
   14000260a:	je     0x140002629
   14000260c:	mov    rax,QWORD PTR [rcx]
   14000260f:	call   QWORD PTR [rax+0x10]
   140002612:	test   rax,rax
   140002615:	je     0x140002629
   140002617:	mov    r8,QWORD PTR [rax]
   14000261a:	mov    edx,0x1
   14000261f:	mov    rcx,rax
   140002622:	add    rsp,0x28
   140002626:	rex.WB jmp QWORD PTR [r8]
   140002629:	add    rsp,0x28
   14000262d:	ret    
   14000262e:	int3   
   14000262f:	int3   
   140002630:	mov    rdx,QWORD PTR [rcx]
   140002633:	mov    rax,QWORD PTR [rdx]
   140002636:	movsxd rcx,DWORD PTR [rax+0x4]
   14000263a:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000263f:	test   rcx,rcx
   140002642:	je     0x14000264b
   140002644:	mov    rax,QWORD PTR [rcx]
   140002647:	rex.W jmp QWORD PTR [rax+0x10]
   14000264b:	ret    
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	rex push rbx
   140002652:	sub    rsp,0x20
   140002656:	mov    rbx,rcx
   140002659:	call   QWORD PTR [rip+0x5bd9]        # 0x140008238
   14000265f:	test   al,al
   140002661:	jne    0x14000266c
   140002663:	mov    rcx,QWORD PTR [rbx]
   140002666:	call   QWORD PTR [rip+0x5ad4]        # 0x140008140
   14000266c:	mov    rdx,QWORD PTR [rbx]
   14000266f:	mov    rax,QWORD PTR [rdx]
   140002672:	movsxd rcx,DWORD PTR [rax+0x4]
   140002676:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000267b:	test   rcx,rcx
   14000267e:	je     0x14000268c
   140002680:	mov    rax,QWORD PTR [rcx]
   140002683:	add    rsp,0x20
   140002687:	pop    rbx
   140002688:	rex.W jmp QWORD PTR [rax+0x10]
   14000268c:	add    rsp,0x20
   140002690:	pop    rbx
   140002691:	ret    
   140002692:	int3   
   140002693:	int3   
   140002694:	int3   
   140002695:	int3   
   140002696:	int3   
   140002697:	int3   
   140002698:	int3   
   140002699:	int3   
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	mov    rax,rdx
   1400026a3:	ret    
   1400026a4:	int3   
   1400026a5:	int3   
   1400026a6:	int3   
   1400026a7:	int3   
   1400026a8:	int3   
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	ret    0x0
   1400026b3:	int3   
   1400026b4:	int3   
   1400026b5:	int3   
   1400026b6:	int3   
   1400026b7:	int3   
   1400026b8:	int3   
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026c5:	push   rdi
   1400026c6:	sub    rsp,0x20
   1400026ca:	mov    rdi,rdx
   1400026cd:	mov    rbx,rcx
   1400026d0:	cmp    rcx,rdx
   1400026d3:	je     0x140002702
   1400026d5:	cmp    QWORD PTR [rcx+0x18],0x10
   1400026da:	jb     0x1400026e4
   1400026dc:	mov    rcx,QWORD PTR [rcx]
   1400026df:	call   0x1400063aa
   1400026e4:	mov    QWORD PTR [rbx+0x18],0xf
   1400026ec:	mov    QWORD PTR [rbx+0x10],0x0
   1400026f4:	mov    rdx,rdi
   1400026f7:	mov    rcx,rbx
   1400026fa:	mov    BYTE PTR [rbx],0x0
   1400026fd:	call   0x140002c40
   140002702:	mov    rax,rbx
   140002705:	mov    rbx,QWORD PTR [rsp+0x30]
   14000270a:	add    rsp,0x20
   14000270e:	pop    rdi
   14000270f:	ret    
   140002710:	rex push rbx
   140002712:	sub    rsp,0x20
   140002716:	mov    rbx,rcx
   140002719:	cmp    rcx,rdx
   14000271c:	je     0x14000272a
   14000271e:	or     r9,0xffffffffffffffff
   140002722:	xor    r8d,r8d
   140002725:	call   0x140003a30
   14000272a:	mov    rax,rbx
   14000272d:	add    rsp,0x20
   140002731:	pop    rbx
   140002732:	ret    
   140002733:	int3   
   140002734:	int3   
   140002735:	int3   
   140002736:	int3   
   140002737:	int3   
   140002738:	int3   
   140002739:	int3   
   14000273a:	int3   
   14000273b:	int3   
   14000273c:	int3   
   14000273d:	int3   
   14000273e:	int3   
   14000273f:	int3   
   140002740:	cmp    BYTE PTR [rdx],0x0
   140002743:	jne    0x14000274d
   140002745:	xor    r8d,r8d
   140002748:	jmp    0x140003b80
   14000274d:	or     r8,0xffffffffffffffff
   140002751:	inc    r8
   140002754:	cmp    BYTE PTR [rdx+r8*1],0x0
   140002759:	jne    0x140002751
   14000275b:	jmp    0x140003b80
   140002760:	mov    rdx,QWORD PTR [rdx]
   140002763:	cmp    QWORD PTR [rcx],rdx
   140002766:	sete   al
   140002769:	ret    
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	cmp    rcx,rdx
   140002773:	sete   al
   140002776:	ret    
   140002777:	int3   
   140002778:	int3   
   140002779:	int3   
   14000277a:	int3   
   14000277b:	int3   
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	mov    rax,QWORD PTR [rdx+0x8]
   140002784:	cmp    QWORD PTR [rcx+0x8],rax
   140002788:	jne    0x140002793
   14000278a:	mov    eax,DWORD PTR [rdx]
   14000278c:	cmp    DWORD PTR [rcx],eax
   14000278e:	jne    0x140002793
   140002790:	mov    al,0x1
   140002792:	ret    
   140002793:	xor    al,al
   140002795:	ret    
   140002796:	int3   
   140002797:	int3   
   140002798:	int3   
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	mov    rax,QWORD PTR [rcx]
   1400027a3:	add    rax,rdx
   1400027a6:	ret    
   1400027a7:	int3   
   1400027a8:	int3   
   1400027a9:	int3   
   1400027aa:	int3   
   1400027ab:	int3   
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	mov    rax,QWORD PTR [rcx+0x8]
   1400027b4:	add    rax,QWORD PTR [rcx]
   1400027b7:	ret    
   1400027b8:	int3   
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	movzx  eax,BYTE PTR [rcx+0x8]
   1400027c4:	ret    
   1400027c5:	int3   
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	movzx  eax,BYTE PTR [rcx+0x8]
   1400027d4:	ret    
   1400027d5:	int3   
   1400027d6:	int3   
   1400027d7:	int3   
   1400027d8:	int3   
   1400027d9:	int3   
   1400027da:	int3   
   1400027db:	int3   
   1400027dc:	int3   
   1400027dd:	int3   
   1400027de:	int3   
   1400027df:	int3   
   1400027e0:	mov    rax,QWORD PTR [rcx]
   1400027e3:	ret    
   1400027e4:	int3   
   1400027e5:	int3   
   1400027e6:	int3   
   1400027e7:	int3   
   1400027e8:	int3   
   1400027e9:	int3   
   1400027ea:	int3   
   1400027eb:	int3   
   1400027ec:	int3   
   1400027ed:	int3   
   1400027ee:	int3   
   1400027ef:	int3   
   1400027f0:	mov    rax,QWORD PTR [rcx]
   1400027f3:	ret    
   1400027f4:	int3   
   1400027f5:	int3   
   1400027f6:	int3   
   1400027f7:	int3   
   1400027f8:	int3   
   1400027f9:	int3   
   1400027fa:	int3   
   1400027fb:	int3   
   1400027fc:	int3   
   1400027fd:	int3   
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	mov    rax,QWORD PTR [rcx]
   140002803:	sub    rax,QWORD PTR [rdx]
   140002806:	ret    
   140002807:	int3   
   140002808:	int3   
   140002809:	int3   
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	mov    rax,QWORD PTR [rcx]
   140002813:	sub    rax,QWORD PTR [rdx]
   140002816:	ret    
   140002817:	int3   
   140002818:	int3   
   140002819:	int3   
   14000281a:	int3   
   14000281b:	int3   
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	or     r9,0xffffffffffffffff
   140002824:	xor    r8d,r8d
   140002827:	jmp    0x140003680
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	movzx  r8d,dl
   140002834:	mov    edx,0x1
   140002839:	jmp    0x140003910
   14000283e:	int3   
   14000283f:	int3   
   140002840:	cmp    BYTE PTR [rdx],0x0
   140002843:	jne    0x14000284d
   140002845:	xor    r8d,r8d
   140002848:	jmp    0x1400037c0
   14000284d:	or     r8,0xffffffffffffffff
   140002851:	inc    r8
   140002854:	cmp    BYTE PTR [rdx+r8*1],0x0
   140002859:	jne    0x140002851
   14000285b:	jmp    0x1400037c0
   140002860:	rex push rbx
   140002862:	sub    rsp,0x20
   140002866:	mov    rax,QWORD PTR [rcx]
   140002869:	lea    rbx,[rcx+0xb0]
   140002870:	movsxd rcx,DWORD PTR [rax+0x4]
   140002874:	lea    rax,[rip+0x61dd]        # 0x140008a58
   14000287b:	mov    QWORD PTR [rcx+rbx*1-0xb0],rax
   140002883:	mov    rax,QWORD PTR [rbx-0xb0]
   14000288a:	lea    rcx,[rbx-0xa0]
   140002891:	movsxd rdx,DWORD PTR [rax+0x4]
   140002895:	lea    r8d,[rdx-0xb0]
   14000289c:	mov    DWORD PTR [rdx+rbx*1-0xb4],r8d
   1400028a4:	call   0x1400023d0
   1400028a9:	lea    rcx,[rbx-0x98]
   1400028b0:	call   QWORD PTR [rip+0x58c2]        # 0x140008178
   1400028b6:	mov    rax,QWORD PTR [rip+0x5953]        # 0x140008210
   1400028bd:	mov    rcx,rbx
   1400028c0:	mov    QWORD PTR [rbx],rax
   1400028c3:	mov    rax,QWORD PTR [rip+0x593e]        # 0x140008208
   1400028ca:	mov    QWORD PTR [rbx],rax
   1400028cd:	add    rsp,0x20
   1400028d1:	pop    rbx
   1400028d2:	rex.W jmp QWORD PTR [rip+0x57df]        # 0x1400080b8
   1400028d9:	int3   
   1400028da:	int3   
   1400028db:	int3   
   1400028dc:	int3   
   1400028dd:	int3   
   1400028de:	int3   
   1400028df:	int3   
   1400028e0:	rex push rbx
   1400028e2:	sub    rsp,0x20
   1400028e6:	mov    rax,QWORD PTR [rcx]
   1400028e9:	lea    rbx,[rcx+0xa8]
   1400028f0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400028f4:	lea    rax,[rip+0x6185]        # 0x140008a80
   1400028fb:	mov    QWORD PTR [rcx+rbx*1-0xa8],rax
   140002903:	mov    rax,QWORD PTR [rbx-0xa8]
   14000290a:	lea    rcx,[rbx-0xa0]
   140002911:	movsxd rdx,DWORD PTR [rax+0x4]
   140002915:	lea    r8d,[rdx-0xa8]
   14000291c:	mov    DWORD PTR [rdx+rbx*1-0xac],r8d
   140002924:	call   0x1400023d0
   140002929:	lea    rcx,[rbx-0x98]
   140002930:	call   QWORD PTR [rip+0x5802]        # 0x140008138
   140002936:	mov    rax,QWORD PTR [rip+0x58d3]        # 0x140008210
   14000293d:	mov    rcx,rbx
   140002940:	mov    QWORD PTR [rbx],rax
   140002943:	mov    rax,QWORD PTR [rip+0x58be]        # 0x140008208
   14000294a:	mov    QWORD PTR [rbx],rax
   14000294d:	add    rsp,0x20
   140002951:	pop    rbx
   140002952:	rex.W jmp QWORD PTR [rip+0x575f]        # 0x1400080b8
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	movsxd rax,DWORD PTR [rcx-0x4]
   140002960:	sub    rcx,rax
   140002963:	jmp    0x1400029b0
   140002968:	movsxd rax,DWORD PTR [rcx-0x4]
   14000296c:	sub    rcx,rax
   14000296f:	jmp    0x1400029f0
   140002974:	int3   
   140002975:	int3   
   140002976:	int3   
   140002977:	int3   
   140002978:	int3   
   140002979:	int3   
   14000297a:	int3   
   14000297b:	int3   
   14000297c:	int3   
   14000297d:	int3   
   14000297e:	int3   
   14000297f:	int3   
   140002980:	mov    QWORD PTR [rsp+0x8],rbx
   140002985:	push   rdi
   140002986:	sub    rsp,0x20
   14000298a:	mov    ebx,edx
   14000298c:	mov    rdi,rcx
   14000298f:	call   0x1400023d0
   140002994:	test   bl,0x1
   140002997:	je     0x1400029a1
   140002999:	mov    rcx,rdi
   14000299c:	call   0x1400063aa
   1400029a1:	mov    rax,rdi
   1400029a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029a9:	add    rsp,0x20
   1400029ad:	pop    rdi
   1400029ae:	ret    
   1400029af:	int3   
   1400029b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029b5:	push   rdi
   1400029b6:	sub    rsp,0x20
   1400029ba:	lea    rdi,[rcx-0xb0]
   1400029c1:	mov    ebx,edx
   1400029c3:	mov    rcx,rdi
   1400029c6:	call   0x140002860
   1400029cb:	test   bl,0x1
   1400029ce:	je     0x1400029d8
   1400029d0:	mov    rcx,rdi
   1400029d3:	call   0x1400063aa
   1400029d8:	mov    rax,rdi
   1400029db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029e0:	add    rsp,0x20
   1400029e4:	pop    rdi
   1400029e5:	ret    
   1400029e6:	int3   
   1400029e7:	int3   
   1400029e8:	int3   
   1400029e9:	int3   
   1400029ea:	int3   
   1400029eb:	int3   
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029f5:	push   rdi
   1400029f6:	sub    rsp,0x20
   1400029fa:	lea    rdi,[rcx-0xa8]
   140002a01:	mov    ebx,edx
   140002a03:	mov    rcx,rdi
   140002a06:	call   0x1400028e0
   140002a0b:	test   bl,0x1
   140002a0e:	je     0x140002a18
   140002a10:	mov    rcx,rdi
   140002a13:	call   0x1400063aa
   140002a18:	mov    rax,rdi
   140002a1b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a20:	add    rsp,0x20
   140002a24:	pop    rdi
   140002a25:	ret    
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	mov    QWORD PTR [rsp+0x8],rbx
   140002a35:	push   rdi
   140002a36:	sub    rsp,0x20
   140002a3a:	mov    ebx,edx
   140002a3c:	mov    rdi,rcx
   140002a3f:	call   QWORD PTR [rip+0x5683]        # 0x1400080c8
   140002a45:	test   bl,0x1
   140002a48:	je     0x140002a52
   140002a4a:	mov    rcx,rdi
   140002a4d:	call   0x1400063aa
   140002a52:	mov    rax,rdi
   140002a55:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a5a:	add    rsp,0x20
   140002a5e:	pop    rdi
   140002a5f:	ret    
   140002a60:	rex push rbx
   140002a62:	sub    rsp,0x20
   140002a66:	lea    rax,[rip+0x5dc3]        # 0x140008830
   140002a6d:	mov    rbx,rcx
   140002a70:	mov    QWORD PTR [rcx],rax
   140002a73:	test   dl,0x1
   140002a76:	je     0x140002a7d
   140002a78:	call   0x1400063aa
   140002a7d:	mov    rax,rbx
   140002a80:	add    rsp,0x20
   140002a84:	pop    rbx
   140002a85:	ret    
   140002a86:	int3   
   140002a87:	int3   
   140002a88:	int3   
   140002a89:	int3   
   140002a8a:	int3   
   140002a8b:	int3   
   140002a8c:	int3   
   140002a8d:	int3   
   140002a8e:	int3   
   140002a8f:	int3   
   140002a90:	rex push rbx
   140002a92:	sub    rsp,0x20
   140002a96:	lea    rax,[rip+0x5d93]        # 0x140008830
   140002a9d:	mov    rbx,rcx
   140002aa0:	mov    QWORD PTR [rcx],rax
   140002aa3:	test   dl,0x1
   140002aa6:	je     0x140002aad
   140002aa8:	call   0x1400063aa
   140002aad:	mov    rax,rbx
   140002ab0:	add    rsp,0x20
   140002ab4:	pop    rbx
   140002ab5:	ret    
   140002ab6:	int3   
   140002ab7:	int3   
   140002ab8:	int3   
   140002ab9:	int3   
   140002aba:	int3   
   140002abb:	int3   
   140002abc:	int3   
   140002abd:	int3   
   140002abe:	int3   
   140002abf:	int3   
   140002ac0:	rex push rbx
   140002ac2:	sub    rsp,0x20
   140002ac6:	lea    rax,[rip+0x5d63]        # 0x140008830
   140002acd:	mov    rbx,rcx
   140002ad0:	mov    QWORD PTR [rcx],rax
   140002ad3:	test   dl,0x1
   140002ad6:	je     0x140002add
   140002ad8:	call   0x1400063aa
   140002add:	mov    rax,rbx
   140002ae0:	add    rsp,0x20
   140002ae4:	pop    rbx
   140002ae5:	ret    
   140002ae6:	int3   
   140002ae7:	int3   
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	rex push rbx
   140002af2:	sub    rsp,0x20
   140002af6:	lea    rax,[rip+0x5d33]        # 0x140008830
   140002afd:	mov    rbx,rcx
   140002b00:	mov    QWORD PTR [rcx],rax
   140002b03:	test   dl,0x1
   140002b06:	je     0x140002b0d
   140002b08:	call   0x1400063aa
   140002b0d:	mov    rax,rbx
   140002b10:	add    rsp,0x20
   140002b14:	pop    rbx
   140002b15:	ret    
   140002b16:	int3   
   140002b17:	int3   
   140002b18:	int3   
   140002b19:	int3   
   140002b1a:	int3   
   140002b1b:	int3   
   140002b1c:	int3   
   140002b1d:	int3   
   140002b1e:	int3   
   140002b1f:	int3   
   140002b20:	mov    rax,rsp
   140002b23:	push   rbp
   140002b24:	push   rsi
   140002b25:	push   rdi
   140002b26:	sub    rsp,0x60
   140002b2a:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140002b32:	mov    QWORD PTR [rax+0x8],rbx
   140002b36:	mov    rbp,rdx
   140002b39:	mov    rdi,rcx
   140002b3c:	xor    ebx,ebx
   140002b3e:	mov    DWORD PTR [rsp+0x30],ebx
   140002b42:	mov    QWORD PTR [rax+0x20],rbx
   140002b46:	mov    QWORD PTR [rax-0x58],rbx
   140002b4a:	mov    r9,rdx
   140002b4d:	xor    r8d,r8d
   140002b50:	xor    edx,edx
   140002b52:	lea    rcx,[rax+0x20]
   140002b56:	call   QWORD PTR [rip+0x574c]        # 0x1400082a8
   140002b5c:	mov    rdx,QWORD PTR [rsp+0x98]
   140002b64:	test   rdx,rdx
   140002b67:	jne    0x140002b7c
   140002b69:	mov    QWORD PTR [rdi+0x18],0xf
   140002b71:	mov    QWORD PTR [rdi+0x10],rbx
   140002b75:	mov    BYTE PTR [rdi],bl
   140002b77:	jmp    0x140002c10
   140002b7c:	mov    BYTE PTR [rsp+0x90],bl
   140002b83:	xorps  xmm0,xmm0
   140002b86:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   140002b8c:	mov    QWORD PTR [rsp+0x58],rbx
   140002b91:	lea    r8,[rsp+0x90]
   140002b99:	lea    rcx,[rsp+0x48]
   140002b9e:	call   0x140002d70
   140002ba3:	nop
   140002ba4:	mov    QWORD PTR [rsp+0x38],rbx
   140002ba9:	mov    r8,QWORD PTR [rsp+0x50]
   140002bae:	mov    rsi,QWORD PTR [rsp+0x48]
   140002bb3:	sub    r8,rsi
   140002bb6:	mov    rax,QWORD PTR [rsp+0x98]
   140002bbe:	mov    QWORD PTR [rsp+0x20],rax
   140002bc3:	mov    r9,rbp
   140002bc6:	mov    rdx,rsi
   140002bc9:	lea    rcx,[rsp+0x38]
   140002bce:	call   QWORD PTR [rip+0x56d4]        # 0x1400082a8
   140002bd4:	mov    QWORD PTR [rdi+0x18],0xf
   140002bdc:	mov    QWORD PTR [rdi+0x10],rbx
   140002be0:	mov    BYTE PTR [rdi],0x0
   140002be3:	cmp    BYTE PTR [rsi],0x0
   140002be6:	je     0x140002bf9
   140002be8:	or     rbx,0xffffffffffffffff
   140002bec:	nop    DWORD PTR [rax+0x0]
   140002bf0:	inc    rbx
   140002bf3:	cmp    BYTE PTR [rsi+rbx*1],0x0
   140002bf7:	jne    0x140002bf0
   140002bf9:	mov    r8,rbx
   140002bfc:	mov    rdx,rsi
   140002bff:	mov    rcx,rdi
   140002c02:	call   0x140003b80
   140002c07:	nop
   140002c08:	mov    rcx,rsi
   140002c0b:	call   0x1400063aa
   140002c10:	mov    rax,rdi
   140002c13:	mov    rbx,QWORD PTR [rsp+0x80]
   140002c1b:	add    rsp,0x60
   140002c1f:	pop    rdi
   140002c20:	pop    rsi
   140002c21:	pop    rbp
   140002c22:	ret    
   140002c23:	int3   
   140002c24:	int3   
   140002c25:	int3   
   140002c26:	int3   
   140002c27:	int3   
   140002c28:	int3   
   140002c29:	int3   
   140002c2a:	int3   
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	ret    0x0
   140002c33:	int3   
   140002c34:	int3   
   140002c35:	int3   
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	mov    QWORD PTR [rsp+0x8],rbx
   140002c45:	push   rdi
   140002c46:	sub    rsp,0x20
   140002c4a:	cmp    QWORD PTR [rdx+0x18],0x10
   140002c4f:	mov    rbx,rdx
   140002c52:	mov    rdi,rcx
   140002c55:	jae    0x140002c68
   140002c57:	mov    r8,QWORD PTR [rdx+0x10]
   140002c5b:	inc    r8
   140002c5e:	je     0x140002c7a
   140002c60:	call   QWORD PTR [rip+0x5652]        # 0x1400082b8
   140002c66:	jmp    0x140002c7a
   140002c68:	test   rcx,rcx
   140002c6b:	je     0x140002c73
   140002c6d:	mov    rax,QWORD PTR [rdx]
   140002c70:	mov    QWORD PTR [rcx],rax
   140002c73:	mov    QWORD PTR [rdx],0x0
   140002c7a:	mov    rax,QWORD PTR [rbx+0x10]
   140002c7e:	mov    QWORD PTR [rdi+0x10],rax
   140002c82:	mov    rax,QWORD PTR [rbx+0x18]
   140002c86:	mov    QWORD PTR [rdi+0x18],rax
   140002c8a:	mov    QWORD PTR [rbx+0x18],0xf
   140002c92:	mov    QWORD PTR [rbx+0x10],0x0
   140002c9a:	mov    BYTE PTR [rbx],0x0
   140002c9d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ca2:	add    rsp,0x20
   140002ca6:	pop    rdi
   140002ca7:	ret    
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140002cb5:	push   rdi
   140002cb6:	sub    rsp,0x20
   140002cba:	xor    eax,eax
   140002cbc:	mov    rdi,rdx
   140002cbf:	mov    rbx,rcx
   140002cc2:	mov    QWORD PTR [rcx],rax
   140002cc5:	mov    QWORD PTR [rcx+0x8],rax
   140002cc9:	mov    QWORD PTR [rcx+0x10],rax
   140002ccd:	test   rdx,rdx
   140002cd0:	je     0x140002d03
   140002cd2:	cmp    rdx,0xffffffffffffffff
   140002cd6:	jbe    0x140002ce6
   140002cd8:	lea    rcx,[rip+0x5e19]        # 0x140008af8
   140002cdf:	call   QWORD PTR [rip+0x537b]        # 0x140008060
   140002ce5:	int3   
   140002ce6:	mov    rcx,rdx
   140002ce9:	call   0x1400063a4
   140002cee:	test   rax,rax
   140002cf1:	je     0x140002d0e
   140002cf3:	mov    QWORD PTR [rbx],rax
   140002cf6:	mov    QWORD PTR [rbx+0x8],rax
   140002cfa:	add    rax,rdi
   140002cfd:	mov    QWORD PTR [rbx+0x10],rax
   140002d01:	mov    al,0x1
   140002d03:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d08:	add    rsp,0x20
   140002d0c:	pop    rdi
   140002d0d:	ret    
   140002d0e:	call   QWORD PTR [rip+0x54ec]        # 0x140008200
   140002d14:	int3   
   140002d15:	int3   
   140002d16:	int3   
   140002d17:	int3   
   140002d18:	int3   
   140002d19:	int3   
   140002d1a:	int3   
   140002d1b:	int3   
   140002d1c:	int3   
   140002d1d:	int3   
   140002d1e:	int3   
   140002d1f:	int3   
   140002d20:	ret    0x0
   140002d23:	int3   
   140002d24:	int3   
   140002d25:	int3   
   140002d26:	int3   
   140002d27:	int3   
   140002d28:	int3   
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	mov    rax,rdx
   140002d33:	cmp    r8,0x1
   140002d37:	jne    0x140002d48
   140002d39:	cmp    QWORD PTR [rcx+0x18],0x10
   140002d3e:	jb     0x140002d43
   140002d40:	mov    rcx,QWORD PTR [rcx]
   140002d43:	mov    BYTE PTR [rcx+rdx*1],r9b
   140002d47:	ret    
   140002d48:	cmp    QWORD PTR [rcx+0x18],0x10
   140002d4d:	jb     0x140002d52
   140002d4f:	mov    rcx,QWORD PTR [rcx]
   140002d52:	movsx  edx,r9b
   140002d56:	add    rcx,rax
   140002d59:	jmp    0x140006552
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	ret    0x0
   140002d63:	int3   
   140002d64:	int3   
   140002d65:	int3   
   140002d66:	int3   
   140002d67:	int3   
   140002d68:	int3   
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	mov    QWORD PTR [rsp+0x8],rcx
   140002d75:	push   r14
   140002d77:	sub    rsp,0x30
   140002d7b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002d84:	mov    QWORD PTR [rsp+0x48],rbx
   140002d89:	mov    QWORD PTR [rsp+0x50],rsi
   140002d8e:	mov    QWORD PTR [rsp+0x58],rdi
   140002d93:	mov    r14,r8
   140002d96:	mov    rdi,rdx
   140002d99:	mov    rbx,rcx
   140002d9c:	xor    eax,eax
   140002d9e:	mov    QWORD PTR [rcx],rax
   140002da1:	mov    QWORD PTR [rcx+0x8],rax
   140002da5:	mov    QWORD PTR [rcx+0x10],rax
   140002da9:	test   rdx,rdx
   140002dac:	je     0x140002dfa
   140002dae:	cmp    rdx,0xffffffffffffffff
   140002db2:	jbe    0x140002dc2
   140002db4:	lea    rcx,[rip+0x5d3d]        # 0x140008af8
   140002dbb:	call   QWORD PTR [rip+0x529f]        # 0x140008060
   140002dc1:	int3   
   140002dc2:	mov    rcx,rdx
   140002dc5:	call   0x1400063a4
   140002dca:	test   rax,rax
   140002dcd:	je     0x140002df3
   140002dcf:	mov    QWORD PTR [rbx],rax
   140002dd2:	mov    QWORD PTR [rbx+0x8],rax
   140002dd6:	lea    rsi,[rax+rdi*1]
   140002dda:	mov    QWORD PTR [rbx+0x10],rsi
   140002dde:	movsx  edx,BYTE PTR [r14]
   140002de2:	mov    r8,rdi
   140002de5:	mov    rcx,rax
   140002de8:	call   0x140006552
   140002ded:	mov    QWORD PTR [rbx+0x8],rsi
   140002df1:	jmp    0x140002dfa
   140002df3:	call   QWORD PTR [rip+0x5407]        # 0x140008200
   140002df9:	int3   
   140002dfa:	mov    rbx,QWORD PTR [rsp+0x48]
   140002dff:	mov    rsi,QWORD PTR [rsp+0x50]
   140002e04:	mov    rdi,QWORD PTR [rsp+0x58]
   140002e09:	add    rsp,0x30
   140002e0d:	pop    r14
   140002e0f:	ret    
   140002e10:	mov    QWORD PTR [rsp+0x18],r8
   140002e15:	mov    QWORD PTR [rsp+0x10],rdx
   140002e1a:	mov    QWORD PTR [rsp+0x8],rcx
   140002e1f:	push   rbx
   140002e20:	push   rsi
   140002e21:	push   rdi
   140002e22:	push   r14
   140002e24:	sub    rsp,0x38
   140002e28:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002e31:	mov    rsi,r8
   140002e34:	mov    rbx,rcx
   140002e37:	mov    rdi,rdx
   140002e3a:	or     rdi,0xf
   140002e3e:	cmp    rdi,0xfffffffffffffffe
   140002e42:	jbe    0x140002e49
   140002e44:	mov    rdi,rdx
   140002e47:	jmp    0x140002e7e
   140002e49:	mov    r8,QWORD PTR [rcx+0x18]
   140002e4d:	mov    rcx,r8
   140002e50:	shr    rcx,1
   140002e53:	movabs rax,0xaaaaaaaaaaaaaaab
   140002e5d:	mul    rdi
   140002e60:	shr    rdx,1
   140002e63:	cmp    rcx,rdx
   140002e66:	jbe    0x140002e7e
   140002e68:	mov    rdi,0xfffffffffffffffe
   140002e6f:	mov    rax,rdi
   140002e72:	sub    rax,rcx
   140002e75:	cmp    r8,rax
   140002e78:	ja     0x140002e7e
   140002e7a:	lea    rdi,[rcx+r8*1]
   140002e7e:	lea    rcx,[rdi+0x1]
   140002e82:	xor    r14d,r14d
   140002e85:	test   rcx,rcx
   140002e88:	je     0x140002ea4
   140002e8a:	cmp    rcx,0xffffffffffffffff
   140002e8e:	ja     0x140002e9d
   140002e90:	call   0x1400063a4
   140002e95:	mov    r14,rax
   140002e98:	test   rax,rax
   140002e9b:	jne    0x140002ea4
   140002e9d:	call   QWORD PTR [rip+0x535d]        # 0x140008200
   140002ea3:	nop
   140002ea4:	jmp    0x140002eba
   140002ea6:	mov    rbx,QWORD PTR [rsp+0x60]
   140002eab:	mov    rsi,QWORD PTR [rsp+0x70]
   140002eb0:	mov    rdi,QWORD PTR [rsp+0x68]
   140002eb5:	mov    r14,QWORD PTR [rsp+0x78]
   140002eba:	test   rsi,rsi
   140002ebd:	je     0x140002ede
   140002ebf:	cmp    QWORD PTR [rbx+0x18],0x10
   140002ec4:	jb     0x140002ecb
   140002ec6:	mov    rdx,QWORD PTR [rbx]
   140002ec9:	jmp    0x140002ece
   140002ecb:	mov    rdx,rbx
   140002ece:	test   rsi,rsi
   140002ed1:	je     0x140002ede
   140002ed3:	mov    r8,rsi
   140002ed6:	mov    rcx,r14
   140002ed9:	call   0x14000654c
   140002ede:	cmp    QWORD PTR [rbx+0x18],0x10
   140002ee3:	jb     0x140002eed
   140002ee5:	mov    rcx,QWORD PTR [rbx]
   140002ee8:	call   0x1400063aa
   140002eed:	mov    BYTE PTR [rbx],0x0
   140002ef0:	mov    QWORD PTR [rbx],r14
   140002ef3:	mov    QWORD PTR [rbx+0x18],rdi
   140002ef7:	mov    QWORD PTR [rbx+0x10],rsi
   140002efb:	cmp    rdi,0x10
   140002eff:	jb     0x140002f04
   140002f01:	mov    rbx,r14
   140002f04:	mov    BYTE PTR [rbx+rsi*1],0x0
   140002f08:	add    rsp,0x38
   140002f0c:	pop    r14
   140002f0e:	pop    rdi
   140002f0f:	pop    rsi
   140002f10:	pop    rbx
   140002f11:	ret    
   140002f12:	int3   
   140002f13:	int3   
   140002f14:	int3   
   140002f15:	int3   
   140002f16:	int3   
   140002f17:	int3   
   140002f18:	int3   
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	ret    0x0
   140002f23:	int3   
   140002f24:	int3   
   140002f25:	int3   
   140002f26:	int3   
   140002f27:	int3   
   140002f28:	int3   
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	mov    rax,rsp
   140002f33:	push   rbp
   140002f34:	push   rdi
   140002f35:	push   r14
   140002f37:	mov    rbp,rsp
   140002f3a:	sub    rsp,0x60
   140002f3e:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140002f46:	mov    QWORD PTR [rax+0x10],rbx
   140002f4a:	mov    QWORD PTR [rax+0x18],rsi
   140002f4e:	mov    rdi,rcx
   140002f51:	cmp    QWORD PTR [rcx+0x78],0x0
   140002f56:	je     0x14000312a
   140002f5c:	cmp    BYTE PTR [rcx+0x81],0x0
   140002f63:	je     0x14000312a
   140002f69:	mov    rax,QWORD PTR [rcx]
   140002f6c:	or     edx,0xffffffff
   140002f6f:	call   QWORD PTR [rax+0x18]
   140002f72:	cmp    eax,0xffffffff
   140002f75:	jne    0x140002f7e
   140002f77:	xor    al,al
   140002f79:	jmp    0x14000312c
   140002f7e:	mov    edx,0xf
   140002f83:	mov    QWORD PTR [rbp-0x10],rdx
   140002f87:	mov    BYTE PTR [rbp-0x28],0x0
   140002f8b:	xor    ecx,ecx
   140002f8d:	mov    QWORD PTR [rbp-0x28],rcx
   140002f91:	mov    QWORD PTR [rbp-0x18],0x8
   140002f99:	lea    rax,[rbp-0x28]
   140002f9d:	cmp    rdx,0x10
   140002fa1:	cmovae rax,rcx
   140002fa5:	mov    BYTE PTR [rax+0x8],cl
   140002fa8:	xor    r14d,r14d
   140002fab:	mov    rdx,QWORD PTR [rbp-0x10]
   140002faf:	nop
   140002fb0:	lea    rcx,[rbp-0x28]
   140002fb4:	cmp    rdx,0x10
   140002fb8:	cmovae rcx,QWORD PTR [rbp-0x28]
   140002fbd:	lea    r8,[rbp-0x28]
   140002fc1:	cmovae r8,QWORD PTR [rbp-0x28]
   140002fc6:	mov    r9,QWORD PTR [rbp-0x18]
   140002fca:	add    r9,rcx
   140002fcd:	lea    rax,[rbp+0x20]
   140002fd1:	mov    QWORD PTR [rsp+0x20],rax
   140002fd6:	lea    rdx,[rdi+0x84]
   140002fdd:	mov    rcx,QWORD PTR [rdi+0x78]
   140002fe1:	call   QWORD PTR [rip+0x50b1]        # 0x140008098
   140002fe7:	test   eax,eax
   140002fe9:	je     0x140002ff5
   140002feb:	dec    eax
   140002fed:	jne    0x1400030eb
   140002ff3:	jmp    0x140002ffc
   140002ff5:	mov    BYTE PTR [rdi+0x81],r14b
   140002ffc:	lea    rax,[rbp-0x28]
   140003000:	mov    r9,QWORD PTR [rbp-0x28]
   140003004:	mov    rdx,QWORD PTR [rbp-0x10]
   140003008:	cmp    rdx,0x10
   14000300c:	cmovae rax,r9
   140003010:	mov    rbx,QWORD PTR [rbp+0x20]
   140003014:	sub    rbx,rax
   140003017:	je     0x140003047
   140003019:	lea    rcx,[rbp-0x28]
   14000301d:	cmp    rdx,0x10
   140003021:	cmovae rcx,r9
   140003025:	mov    r9,QWORD PTR [rdi+0x90]
   14000302c:	mov    r8,rbx
   14000302f:	mov    edx,0x1
   140003034:	call   QWORD PTR [rip+0x5246]        # 0x140008280
   14000303a:	mov    rdx,QWORD PTR [rbp-0x10]
   14000303e:	cmp    rbx,rax
   140003041:	jne    0x1400030f4
   140003047:	cmp    BYTE PTR [rdi+0x81],r14b
   14000304e:	je     0x140003114
   140003054:	test   rbx,rbx
   140003057:	jne    0x140002fb0
   14000305d:	or     rax,0xffffffffffffffff
   140003061:	mov    r8,QWORD PTR [rbp-0x18]
   140003065:	sub    rax,r8
   140003068:	cmp    rax,0x8
   14000306c:	jbe    0x140003106
   140003072:	lea    rbx,[r8+0x8]
   140003076:	cmp    rbx,0xfffffffffffffffe
   14000307a:	ja     0x1400030f8
   14000307c:	cmp    rdx,rbx
   14000307f:	jae    0x140003093
   140003081:	mov    rdx,rbx
   140003084:	lea    rcx,[rbp-0x28]
   140003088:	call   0x140002e10
   14000308d:	mov    rdx,QWORD PTR [rbp-0x10]
   140003091:	jmp    0x1400030b1
   140003093:	test   rbx,rbx
   140003096:	jne    0x1400030ba
   140003098:	mov    QWORD PTR [rbp-0x18],r14
   14000309c:	lea    rax,[rbp-0x28]
   1400030a0:	cmp    rdx,0x10
   1400030a4:	cmovae rax,QWORD PTR [rbp-0x28]
   1400030a9:	mov    BYTE PTR [rax],r14b
   1400030ac:	jmp    0x140002fab
   1400030b1:	test   rbx,rbx
   1400030b4:	je     0x140002fb0
   1400030ba:	lea    rcx,[rbp-0x28]
   1400030be:	cmp    rdx,0x10
   1400030c2:	cmovae rcx,QWORD PTR [rbp-0x28]
   1400030c7:	mov    rax,QWORD PTR [rbp-0x18]
   1400030cb:	xor    edx,edx
   1400030cd:	mov    QWORD PTR [rax+rcx*1],rdx
   1400030d1:	mov    QWORD PTR [rbp-0x18],rbx
   1400030d5:	lea    rax,[rbp-0x28]
   1400030d9:	cmp    QWORD PTR [rbp-0x10],0x10
   1400030de:	cmovae rax,QWORD PTR [rbp-0x28]
   1400030e3:	mov    BYTE PTR [rbx+rax*1],dl
   1400030e6:	jmp    0x140002fab
   1400030eb:	mov    rdx,QWORD PTR [rbp-0x10]
   1400030ef:	sub    eax,0x2
   1400030f2:	je     0x140003114
   1400030f4:	xor    bl,bl
   1400030f6:	jmp    0x140003116
   1400030f8:	lea    rcx,[rip+0x59d1]        # 0x140008ad0
   1400030ff:	call   QWORD PTR [rip+0x4f5b]        # 0x140008060
   140003105:	int3   
   140003106:	lea    rcx,[rip+0x59c3]        # 0x140008ad0
   14000310d:	call   QWORD PTR [rip+0x4f4d]        # 0x140008060
   140003113:	int3   
   140003114:	mov    bl,0x1
   140003116:	cmp    rdx,0x10
   14000311a:	jb     0x140003125
   14000311c:	mov    rcx,QWORD PTR [rbp-0x28]
   140003120:	call   0x1400063aa
   140003125:	movzx  eax,bl
   140003128:	jmp    0x14000312c
   14000312a:	mov    al,0x1
   14000312c:	lea    r11,[rsp+0x60]
   140003131:	mov    rbx,QWORD PTR [r11+0x28]
   140003135:	mov    rsi,QWORD PTR [r11+0x30]
   140003139:	mov    rsp,r11
   14000313c:	pop    r14
   14000313e:	pop    rdi
   14000313f:	pop    rbp
   140003140:	ret    
   140003141:	int3   
   140003142:	int3   
   140003143:	int3   
   140003144:	int3   
   140003145:	int3   
   140003146:	int3   
   140003147:	int3   
   140003148:	int3   
   140003149:	int3   
   14000314a:	int3   
   14000314b:	int3   
   14000314c:	int3   
   14000314d:	int3   
   14000314e:	int3   
   14000314f:	int3   
   140003150:	cmp    QWORD PTR [rcx+0x18],0x10
   140003155:	mov    QWORD PTR [rcx+0x10],rdx
   140003159:	jb     0x140003163
   14000315b:	mov    rax,QWORD PTR [rcx]
   14000315e:	mov    BYTE PTR [rax+rdx*1],0x0
   140003162:	ret    
   140003163:	mov    BYTE PTR [rcx+rdx*1],0x0
   140003167:	ret    
   140003168:	int3   
   140003169:	int3   
   14000316a:	int3   
   14000316b:	int3   
   14000316c:	int3   
   14000316d:	int3   
   14000316e:	int3   
   14000316f:	int3   
   140003170:	mov    QWORD PTR [rsp+0x8],rbx
   140003175:	push   rdi
   140003176:	sub    rsp,0x20
   14000317a:	mov    rdi,rdx
   14000317d:	movsx  edx,r8b
   140003181:	mov    rbx,rcx
   140003184:	mov    r8,rdi
   140003187:	call   0x140006552
   14000318c:	lea    rax,[rbx+rdi*1]
   140003190:	mov    rbx,QWORD PTR [rsp+0x30]
   140003195:	add    rsp,0x20
   140003199:	pop    rdi
   14000319a:	ret    
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	mov    rax,rdx
   1400031a3:	ret    
   1400031a4:	int3   
   1400031a5:	int3   
   1400031a6:	int3   
   1400031a7:	int3   
   1400031a8:	int3   
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	int3   
   1400031ad:	int3   
   1400031ae:	int3   
   1400031af:	int3   
   1400031b0:	mov    rax,rdx
   1400031b3:	ret    
   1400031b4:	int3   
   1400031b5:	int3   
   1400031b6:	int3   
   1400031b7:	int3   
   1400031b8:	int3   
   1400031b9:	int3   
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400031c5:	push   rdi
   1400031c6:	sub    rsp,0x20
   1400031ca:	mov    rbx,rdx
   1400031cd:	mov    rdx,QWORD PTR [rcx]
   1400031d0:	xor    edi,edi
   1400031d2:	cmp    rbx,QWORD PTR [rdx+0x18]
   1400031d6:	jae    0x1400031e7
   1400031d8:	mov    rax,QWORD PTR [rdx+0x10]
   1400031dc:	mov    rax,QWORD PTR [rax+rbx*8]
   1400031e0:	test   rax,rax
   1400031e3:	jne    0x140003207
   1400031e5:	jmp    0x1400031ea
   1400031e7:	mov    rax,rdi
   1400031ea:	cmp    BYTE PTR [rdx+0x24],dil
   1400031ee:	je     0x140003207
   1400031f0:	call   QWORD PTR [rip+0x4e82]        # 0x140008078
   1400031f6:	cmp    rbx,QWORD PTR [rax+0x18]
   1400031fa:	jae    0x140003204
   1400031fc:	mov    rax,QWORD PTR [rax+0x10]
   140003200:	mov    rdi,QWORD PTR [rax+rbx*8]
   140003204:	mov    rax,rdi
   140003207:	mov    rbx,QWORD PTR [rsp+0x30]
   14000320c:	add    rsp,0x20
   140003210:	pop    rdi
   140003211:	ret    
   140003212:	int3   
   140003213:	int3   
   140003214:	int3   
   140003215:	int3   
   140003216:	int3   
   140003217:	int3   
   140003218:	int3   
   140003219:	int3   
   14000321a:	int3   
   14000321b:	int3   
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	mov    QWORD PTR [rsp+0x20],rbx
   140003225:	push   rdi
   140003226:	sub    rsp,0x20
   14000322a:	mov    rdi,rdx
   14000322d:	mov    rbx,rcx
   140003230:	cmp    rdx,0xfffffffffffffffe
   140003234:	jbe    0x140003244
   140003236:	lea    rcx,[rip+0x5893]        # 0x140008ad0
   14000323d:	call   QWORD PTR [rip+0x4e1d]        # 0x140008060
   140003243:	int3   
   140003244:	mov    rax,QWORD PTR [rcx+0x18]
   140003248:	mov    QWORD PTR [rsp+0x30],rbp
   14000324d:	xor    ebp,ebp
   14000324f:	cmp    rax,rdx
   140003252:	jae    0x14000325f
   140003254:	mov    r8,QWORD PTR [rcx+0x10]
   140003258:	call   0x140002e10
   14000325d:	jmp    0x1400032d1
   14000325f:	test   r8b,r8b
   140003262:	je     0x1400032bc
   140003264:	cmp    rdx,0x10
   140003268:	jae    0x1400032bc
   14000326a:	mov    QWORD PTR [rsp+0x38],rsi
   14000326f:	mov    rsi,QWORD PTR [rcx+0x10]
   140003273:	cmp    rdx,rsi
   140003276:	cmovb  rsi,rdx
   14000327a:	cmp    rax,0x10
   14000327e:	jb     0x1400032a5
   140003280:	mov    QWORD PTR [rsp+0x40],r14
   140003285:	mov    r14,QWORD PTR [rcx]
   140003288:	test   rsi,rsi
   14000328b:	je     0x140003298
   14000328d:	mov    r8,rsi
   140003290:	mov    rdx,r14
   140003293:	call   0x14000654c
   140003298:	mov    rcx,r14
   14000329b:	call   0x1400063aa
   1400032a0:	mov    r14,QWORD PTR [rsp+0x40]
   1400032a5:	mov    QWORD PTR [rbx+0x10],rsi
   1400032a9:	mov    QWORD PTR [rbx+0x18],0xf
   1400032b1:	mov    BYTE PTR [rsi+rbx*1],bpl
   1400032b5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400032ba:	jmp    0x1400032d1
   1400032bc:	test   rdx,rdx
   1400032bf:	jne    0x1400032d1
   1400032c1:	mov    QWORD PTR [rcx+0x10],rbp
   1400032c5:	cmp    rax,0x10
   1400032c9:	jb     0x1400032ce
   1400032cb:	mov    rbx,QWORD PTR [rcx]
   1400032ce:	mov    BYTE PTR [rbx],bpl
   1400032d1:	mov    rbp,QWORD PTR [rsp+0x30]
   1400032d6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400032db:	test   rdi,rdi
   1400032de:	setne  al
   1400032e1:	add    rsp,0x20
   1400032e5:	pop    rdi
   1400032e6:	ret    
   1400032e7:	int3   
   1400032e8:	int3   
   1400032e9:	int3   
   1400032ea:	int3   
   1400032eb:	int3   
   1400032ec:	int3   
   1400032ed:	int3   
   1400032ee:	int3   
   1400032ef:	int3   
   1400032f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400032f5:	push   rdi
   1400032f6:	sub    rsp,0x20
   1400032fa:	cmp    r8d,0x1
   1400032fe:	mov    rdi,rdx
   140003301:	mov    rbx,rcx
   140003304:	sete   al
   140003307:	mov    BYTE PTR [rcx+0x81],0x0
   14000330e:	mov    BYTE PTR [rcx+0x88],al
   140003314:	call   QWORD PTR [rip+0x4dee]        # 0x140008108
   14000331a:	test   rdi,rdi
   14000331d:	je     0x14000333f
   14000331f:	lea    rax,[rdi+0x10]
   140003323:	mov    QWORD PTR [rbx+0x38],rdi
   140003327:	mov    QWORD PTR [rbx+0x40],rdi
   14000332b:	mov    QWORD PTR [rbx+0x18],rax
   14000332f:	mov    QWORD PTR [rbx+0x20],rax
   140003333:	lea    rax,[rdi+0x8]
   140003337:	mov    QWORD PTR [rbx+0x50],rax
   14000333b:	mov    QWORD PTR [rbx+0x58],rax
   14000333f:	mov    QWORD PTR [rbx+0x90],rdi
   140003346:	mov    eax,DWORD PTR [rip+0x9144]        # 0x14000c490
   14000334c:	mov    QWORD PTR [rbx+0x78],0x0
   140003354:	mov    DWORD PTR [rbx+0x84],eax
   14000335a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000335f:	add    rsp,0x20
   140003363:	pop    rdi
   140003364:	ret    
   140003365:	int3   
   140003366:	int3   
   140003367:	int3   
   140003368:	int3   
   140003369:	int3   
   14000336a:	int3   
   14000336b:	int3   
   14000336c:	int3   
   14000336d:	int3   
   14000336e:	int3   
   14000336f:	int3   
   140003370:	mov    QWORD PTR [rsp+0x8],rbx
   140003375:	push   rdi
   140003376:	sub    rsp,0x20
   14000337a:	mov    rbx,rcx
   14000337d:	mov    rcx,rdx
   140003380:	mov    rdi,rdx
   140003383:	call   QWORD PTR [rip+0x4cf7]        # 0x140008080
   140003389:	test   al,al
   14000338b:	je     0x1400033a0
   14000338d:	mov    QWORD PTR [rbx+0x78],0x0
   140003395:	mov    rbx,QWORD PTR [rsp+0x30]
   14000339a:	add    rsp,0x20
   14000339e:	pop    rdi
   14000339f:	ret    
   1400033a0:	mov    rcx,rbx
   1400033a3:	mov    QWORD PTR [rbx+0x78],rdi
   1400033a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033ac:	add    rsp,0x20
   1400033b0:	pop    rdi
   1400033b1:	rex.W jmp QWORD PTR [rip+0x4d50]        # 0x140008108
   1400033b8:	int3   
   1400033b9:	int3   
   1400033ba:	int3   
   1400033bb:	int3   
   1400033bc:	int3   
   1400033bd:	int3   
   1400033be:	int3   
   1400033bf:	int3   
   1400033c0:	test   rdx,rdx
   1400033c3:	je     0x1400033fa
   1400033c5:	mov    rax,QWORD PTR [rcx+0x18]
   1400033c9:	cmp    rax,0x10
   1400033cd:	jb     0x1400033d4
   1400033cf:	mov    r8,QWORD PTR [rcx]
   1400033d2:	jmp    0x1400033d7
   1400033d4:	mov    r8,rcx
   1400033d7:	cmp    rdx,r8
   1400033da:	jb     0x1400033fa
   1400033dc:	cmp    rax,0x10
   1400033e0:	jb     0x1400033e7
   1400033e2:	mov    r8,QWORD PTR [rcx]
   1400033e5:	jmp    0x1400033ea
   1400033e7:	mov    r8,rcx
   1400033ea:	mov    rax,QWORD PTR [rcx+0x10]
   1400033ee:	lea    rcx,[r8+rax*1]
   1400033f2:	cmp    rcx,rdx
   1400033f5:	jbe    0x1400033fa
   1400033f7:	mov    al,0x1
   1400033f9:	ret    
   1400033fa:	xor    al,al
   1400033fc:	ret    
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	mov    rcx,QWORD PTR [rcx+0x90]
   140003407:	test   rcx,rcx
   14000340a:	je     0x140003413
   14000340c:	rex.W jmp QWORD PTR [rip+0x4e85]        # 0x140008298
   140003413:	ret    
   140003414:	int3   
   140003415:	int3   
   140003416:	int3   
   140003417:	int3   
   140003418:	int3   
   140003419:	int3   
   14000341a:	int3   
   14000341b:	int3   
   14000341c:	int3   
   14000341d:	int3   
   14000341e:	int3   
   14000341f:	int3   
   140003420:	cmp    QWORD PTR [rcx+0x18],0x10
   140003425:	jb     0x14000342b
   140003427:	mov    rax,QWORD PTR [rcx]
   14000342a:	ret    
   14000342b:	mov    rax,rcx
   14000342e:	ret    
   14000342f:	int3   
   140003430:	cmp    QWORD PTR [rcx+0x18],0x10
   140003435:	jb     0x14000343b
   140003437:	mov    rax,QWORD PTR [rcx]
   14000343a:	ret    
   14000343b:	mov    rax,rcx
   14000343e:	ret    
   14000343f:	int3   
   140003440:	test   rcx,rcx
   140003443:	jne    0x140003448
   140003445:	xor    eax,eax
   140003447:	ret    
   140003448:	sub    rcx,rdx
   14000344b:	mov    rax,rcx
   14000344e:	ret    
   14000344f:	int3   
   140003450:	mov    r9,QWORD PTR [rcx+0x18]
   140003454:	lea    rax,[rcx+0x80]
   14000345b:	cmp    QWORD PTR [r9],rax
   14000345e:	jne    0x14000347c
   140003460:	mov    rdx,QWORD PTR [rcx+0x68]
   140003464:	mov    r8,QWORD PTR [rcx+0x70]
   140003468:	mov    QWORD PTR [r9],rdx
   14000346b:	mov    rax,QWORD PTR [rcx+0x38]
   14000346f:	sub    r8d,edx
   140003472:	mov    QWORD PTR [rax],rdx
   140003475:	mov    rax,QWORD PTR [rcx+0x50]
   140003479:	mov    DWORD PTR [rax],r8d
   14000347c:	ret    
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	mov    r8,rcx
   140003483:	mov    rcx,QWORD PTR [rcx+0x18]
   140003487:	mov    rax,QWORD PTR [rcx]
   14000348a:	lea    r9,[r8+0x80]
   140003491:	cmp    rax,r9
   140003494:	je     0x1400034ac
   140003496:	mov    QWORD PTR [r8+0x68],rax
   14000349a:	mov    rax,QWORD PTR [r8+0x50]
   14000349e:	movsxd rdx,DWORD PTR [rax]
   1400034a1:	mov    rax,QWORD PTR [r8+0x38]
   1400034a5:	add    rdx,QWORD PTR [rax]
   1400034a8:	mov    QWORD PTR [r8+0x70],rdx
   1400034ac:	mov    QWORD PTR [rcx],r9
   1400034af:	mov    rax,QWORD PTR [r8+0x38]
   1400034b3:	mov    ecx,r8d
   1400034b6:	mov    QWORD PTR [rax],r9
   1400034b9:	mov    rax,QWORD PTR [r8+0x50]
   1400034bd:	sub    ecx,r9d
   1400034c0:	add    ecx,0x81
   1400034c6:	mov    DWORD PTR [rax],ecx
   1400034c8:	ret    
   1400034c9:	int3   
   1400034ca:	int3   
   1400034cb:	int3   
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400034d5:	push   rdi
   1400034d6:	sub    rsp,0x20
   1400034da:	mov    rdi,r8
   1400034dd:	mov    rbx,rcx
   1400034e0:	test   dl,dl
   1400034e2:	je     0x14000350d
   1400034e4:	cmp    QWORD PTR [rcx+0x18],0x10
   1400034e9:	jb     0x14000350d
   1400034eb:	mov    QWORD PTR [rsp+0x30],rsi
   1400034f0:	mov    rsi,QWORD PTR [rcx]
   1400034f3:	test   r8,r8
   1400034f6:	je     0x140003500
   1400034f8:	mov    rdx,rsi
   1400034fb:	call   0x14000654c
   140003500:	mov    rcx,rsi
   140003503:	call   0x1400063aa
   140003508:	mov    rsi,QWORD PTR [rsp+0x30]
   14000350d:	mov    QWORD PTR [rbx+0x18],0xf
   140003515:	mov    QWORD PTR [rbx+0x10],rdi
   140003519:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000351d:	mov    rbx,QWORD PTR [rsp+0x38]
   140003522:	add    rsp,0x20
   140003526:	pop    rdi
   140003527:	ret    
   140003528:	int3   
   140003529:	int3   
   14000352a:	int3   
   14000352b:	int3   
   14000352c:	int3   
   14000352d:	int3   
   14000352e:	int3   
   14000352f:	int3   
   140003530:	rex push rbx
   140003532:	sub    rsp,0x20
   140003536:	mov    rbx,rcx
   140003539:	mov    rcx,QWORD PTR [rcx]
   14000353c:	test   rcx,rcx
   14000353f:	je     0x140003553
   140003541:	call   0x1400063aa
   140003546:	xor    eax,eax
   140003548:	mov    QWORD PTR [rbx],rax
   14000354b:	mov    QWORD PTR [rbx+0x8],rax
   14000354f:	mov    QWORD PTR [rbx+0x10],rax
   140003553:	add    rsp,0x20
   140003557:	pop    rbx
   140003558:	ret    
   140003559:	int3   
   14000355a:	int3   
   14000355b:	int3   
   14000355c:	int3   
   14000355d:	int3   
   14000355e:	int3   
   14000355f:	int3   
   140003560:	mov    QWORD PTR [rsp+0x8],rbx
   140003565:	push   rdi
   140003566:	sub    rsp,0x20
   14000356a:	mov    rbx,rdx
   14000356d:	movsx  edx,BYTE PTR [r9]
   140003571:	mov    rdi,r8
   140003574:	mov    rcx,rbx
   140003577:	call   0x140006552
   14000357c:	lea    rax,[rbx+rdi*1]
   140003580:	mov    rbx,QWORD PTR [rsp+0x30]
   140003585:	add    rsp,0x20
   140003589:	pop    rdi
   14000358a:	ret    
   14000358b:	int3   
   14000358c:	int3   
   14000358d:	int3   
   14000358e:	int3   
   14000358f:	int3   
   140003590:	mov    rcx,QWORD PTR [rcx+0x90]
   140003597:	test   rcx,rcx
   14000359a:	je     0x1400035a3
   14000359c:	rex.W jmp QWORD PTR [rip+0x4cfd]        # 0x1400082a0
   1400035a3:	ret    
   1400035a4:	int3   
   1400035a5:	int3   
   1400035a6:	int3   
   1400035a7:	int3   
   1400035a8:	int3   
   1400035a9:	int3   
   1400035aa:	int3   
   1400035ab:	int3   
   1400035ac:	int3   
   1400035ad:	int3   
   1400035ae:	int3   
   1400035af:	int3   
   1400035b0:	sub    rsp,0x28
   1400035b4:	lea    rcx,[rip+0x5515]        # 0x140008ad0
   1400035bb:	call   QWORD PTR [rip+0x4a9f]        # 0x140008060
   1400035c1:	int3   
   1400035c2:	int3   
   1400035c3:	int3   
   1400035c4:	int3   
   1400035c5:	int3   
   1400035c6:	int3   
   1400035c7:	int3   
   1400035c8:	int3   
   1400035c9:	int3   
   1400035ca:	int3   
   1400035cb:	int3   
   1400035cc:	int3   
   1400035cd:	int3   
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	sub    rsp,0x28
   1400035d4:	lea    rcx,[rip+0x551d]        # 0x140008af8
   1400035db:	call   QWORD PTR [rip+0x4a7f]        # 0x140008060
   1400035e1:	int3   
   1400035e2:	int3   
   1400035e3:	int3   
   1400035e4:	int3   
   1400035e5:	int3   
   1400035e6:	int3   
   1400035e7:	int3   
   1400035e8:	int3   
   1400035e9:	int3   
   1400035ea:	int3   
   1400035eb:	int3   
   1400035ec:	int3   
   1400035ed:	int3   
   1400035ee:	int3   
   1400035ef:	int3   
   1400035f0:	sub    rsp,0x28
   1400035f4:	lea    rcx,[rip+0x54e5]        # 0x140008ae0
   1400035fb:	call   QWORD PTR [rip+0x4a67]        # 0x140008068
   140003601:	int3   
   140003602:	int3   
   140003603:	int3   
   140003604:	int3   
   140003605:	int3   
   140003606:	int3   
   140003607:	int3   
   140003608:	int3   
   140003609:	int3   
   14000360a:	int3   
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	sub    rsp,0x28
   140003614:	xor    eax,eax
   140003616:	test   rdx,rdx
   140003619:	je     0x140003635
   14000361b:	cmp    rdx,0xffffffffffffffff
   14000361f:	ja     0x14000362e
   140003621:	mov    rcx,rdx
   140003624:	call   0x1400063a4
   140003629:	test   rax,rax
   14000362c:	jne    0x140003635
   14000362e:	call   QWORD PTR [rip+0x4bcc]        # 0x140008200
   140003634:	int3   
   140003635:	add    rsp,0x28
   140003639:	ret    
   14000363a:	int3   
   14000363b:	int3   
   14000363c:	int3   
   14000363d:	int3   
   14000363e:	int3   
   14000363f:	int3   
   140003640:	sub    rsp,0x28
   140003644:	xor    eax,eax
   140003646:	test   rdx,rdx
   140003649:	je     0x140003665
   14000364b:	cmp    rdx,0xffffffffffffffff
   14000364f:	ja     0x14000365e
   140003651:	mov    rcx,rdx
   140003654:	call   0x1400063a4
   140003659:	test   rax,rax
   14000365c:	jne    0x140003665
   14000365e:	call   QWORD PTR [rip+0x4b9c]        # 0x140008200
   140003664:	int3   
   140003665:	add    rsp,0x28
   140003669:	ret    
   14000366a:	int3   
   14000366b:	int3   
   14000366c:	int3   
   14000366d:	int3   
   14000366e:	int3   
   14000366f:	int3   
   140003670:	or     r9,0xffffffffffffffff
   140003674:	xor    r8d,r8d
   140003677:	jmp    0x140003680
   14000367c:	int3   
   14000367d:	int3   
   14000367e:	int3   
   14000367f:	int3   
   140003680:	mov    QWORD PTR [rsp+0x10],rbx
   140003685:	mov    QWORD PTR [rsp+0x18],rbp
   14000368a:	mov    QWORD PTR [rsp+0x20],rsi
   14000368f:	push   r14
   140003691:	sub    rsp,0x20
   140003695:	mov    rax,QWORD PTR [rdx+0x10]
   140003699:	mov    rsi,r9
   14000369c:	mov    rbp,r8
   14000369f:	mov    r14,rdx
   1400036a2:	mov    rbx,rcx
   1400036a5:	cmp    rax,r8
   1400036a8:	jae    0x1400036b8
   1400036aa:	lea    rcx,[rip+0x542f]        # 0x140008ae0
   1400036b1:	call   QWORD PTR [rip+0x49b1]        # 0x140008068
   1400036b7:	int3   
   1400036b8:	sub    rax,r8
   1400036bb:	mov    r8,QWORD PTR [rcx+0x10]
   1400036bf:	cmp    rax,r9
   1400036c2:	cmovb  rsi,rax
   1400036c6:	or     rax,0xffffffffffffffff
   1400036ca:	sub    rax,r8
   1400036cd:	cmp    rax,rsi
   1400036d0:	ja     0x1400036e0
   1400036d2:	lea    rcx,[rip+0x53f7]        # 0x140008ad0
   1400036d9:	call   QWORD PTR [rip+0x4981]        # 0x140008060
   1400036df:	int3   
   1400036e0:	mov    QWORD PTR [rsp+0x30],rdi
   1400036e5:	test   rsi,rsi
   1400036e8:	je     0x140003780
   1400036ee:	lea    rdi,[r8+rsi*1]
   1400036f2:	cmp    rdi,0xfffffffffffffffe
   1400036f6:	jbe    0x140003706
   1400036f8:	lea    rcx,[rip+0x53d1]        # 0x140008ad0
   1400036ff:	call   QWORD PTR [rip+0x495b]        # 0x140008060
   140003705:	int3   
   140003706:	mov    rax,QWORD PTR [rcx+0x18]
   14000370a:	cmp    rax,rdi
   14000370d:	jae    0x140003732
   14000370f:	mov    rdx,rdi
   140003712:	call   0x140002e10
   140003717:	test   rdi,rdi
   14000371a:	je     0x140003780
   14000371c:	cmp    QWORD PTR [r14+0x18],0x10
   140003721:	jb     0x140003726
   140003723:	mov    r14,QWORD PTR [r14]
   140003726:	cmp    QWORD PTR [rbx+0x18],0x10
   14000372b:	jb     0x140003751
   14000372d:	mov    rcx,QWORD PTR [rbx]
   140003730:	jmp    0x140003754
   140003732:	test   rdi,rdi
   140003735:	jne    0x14000371c
   140003737:	mov    QWORD PTR [rcx+0x10],rdi
   14000373b:	cmp    rax,0x10
   14000373f:	jb     0x140003749
   140003741:	mov    rax,QWORD PTR [rcx]
   140003744:	mov    BYTE PTR [rax],dil
   140003747:	jmp    0x140003780
   140003749:	mov    rax,rcx
   14000374c:	mov    BYTE PTR [rcx],0x0
   14000374f:	jmp    0x140003780
   140003751:	mov    rcx,rbx
   140003754:	test   rsi,rsi
   140003757:	je     0x140003769
   140003759:	add    rcx,QWORD PTR [rbx+0x10]
   14000375d:	lea    rdx,[r14+rbp*1]
   140003761:	mov    r8,rsi
   140003764:	call   0x14000654c
   140003769:	cmp    QWORD PTR [rbx+0x18],0x10
   14000376e:	mov    QWORD PTR [rbx+0x10],rdi
   140003772:	jb     0x140003779
   140003774:	mov    rax,QWORD PTR [rbx]
   140003777:	jmp    0x14000377c
   140003779:	mov    rax,rbx
   14000377c:	mov    BYTE PTR [rax+rdi*1],0x0
   140003780:	mov    rdi,QWORD PTR [rsp+0x30]
   140003785:	mov    rbp,QWORD PTR [rsp+0x40]
   14000378a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000378f:	mov    rax,rbx
   140003792:	mov    rbx,QWORD PTR [rsp+0x38]
   140003797:	add    rsp,0x20
   14000379b:	pop    r14
   14000379d:	ret    
   14000379e:	int3   
   14000379f:	int3   
   1400037a0:	cmp    BYTE PTR [rdx],0x0
   1400037a3:	jne    0x1400037ad
   1400037a5:	xor    r8d,r8d
   1400037a8:	jmp    0x1400037c0
   1400037ad:	or     r8,0xffffffffffffffff
   1400037b1:	inc    r8
   1400037b4:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400037b9:	jne    0x1400037b1
   1400037bb:	jmp    0x1400037c0
   1400037c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400037c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400037ca:	push   rsi
   1400037cb:	sub    rsp,0x20
   1400037cf:	mov    rsi,r8
   1400037d2:	mov    rbp,rdx
   1400037d5:	mov    rbx,rcx
   1400037d8:	test   rdx,rdx
   1400037db:	je     0x140003837
   1400037dd:	mov    r8,QWORD PTR [rcx+0x18]
   1400037e1:	cmp    r8,0x10
   1400037e5:	jb     0x1400037ec
   1400037e7:	mov    rax,QWORD PTR [rcx]
   1400037ea:	jmp    0x1400037ef
   1400037ec:	mov    rax,rcx
   1400037ef:	cmp    rdx,rax
   1400037f2:	jb     0x140003837
   1400037f4:	cmp    r8,0x10
   1400037f8:	jb     0x1400037fd
   1400037fa:	mov    rcx,QWORD PTR [rcx]
   1400037fd:	add    rcx,QWORD PTR [rbx+0x10]
   140003801:	cmp    rcx,rdx
   140003804:	jbe    0x140003837
   140003806:	cmp    r8,0x10
   14000380a:	jb     0x140003811
   14000380c:	mov    rax,QWORD PTR [rbx]
   14000380f:	jmp    0x140003814
   140003811:	mov    rax,rbx
   140003814:	sub    rbp,rax
   140003817:	mov    r9,rsi
   14000381a:	mov    rdx,rbx
   14000381d:	mov    r8,rbp
   140003820:	mov    rcx,rbx
   140003823:	mov    rbx,QWORD PTR [rsp+0x38]
   140003828:	mov    rbp,QWORD PTR [rsp+0x40]
   14000382d:	add    rsp,0x20
   140003831:	pop    rsi
   140003832:	jmp    0x140003680
   140003837:	mov    r8,QWORD PTR [rbx+0x10]
   14000383b:	or     rax,0xffffffffffffffff
   14000383f:	sub    rax,r8
   140003842:	cmp    rax,rsi
   140003845:	ja     0x140003855
   140003847:	lea    rcx,[rip+0x5282]        # 0x140008ad0
   14000384e:	call   QWORD PTR [rip+0x480c]        # 0x140008060
   140003854:	int3   
   140003855:	mov    QWORD PTR [rsp+0x30],rdi
   14000385a:	test   rsi,rsi
   14000385d:	je     0x1400038ed
   140003863:	lea    rdi,[r8+rsi*1]
   140003867:	cmp    rdi,0xfffffffffffffffe
   14000386b:	jbe    0x14000387b
   14000386d:	lea    rcx,[rip+0x525c]        # 0x140008ad0
   140003874:	call   QWORD PTR [rip+0x47e6]        # 0x140008060
   14000387a:	int3   
   14000387b:	mov    rax,QWORD PTR [rbx+0x18]
   14000387f:	cmp    rax,rdi
   140003882:	jae    0x1400038a0
   140003884:	mov    rdx,rdi
   140003887:	mov    rcx,rbx
   14000388a:	call   0x140002e10
   14000388f:	test   rdi,rdi
   140003892:	je     0x1400038ed
   140003894:	cmp    QWORD PTR [rbx+0x18],0x10
   140003899:	jb     0x1400038bf
   14000389b:	mov    rcx,QWORD PTR [rbx]
   14000389e:	jmp    0x1400038c2
   1400038a0:	test   rdi,rdi
   1400038a3:	jne    0x140003894
   1400038a5:	mov    QWORD PTR [rbx+0x10],rdi
   1400038a9:	cmp    rax,0x10
   1400038ad:	jb     0x1400038b7
   1400038af:	mov    rax,QWORD PTR [rbx]
   1400038b2:	mov    BYTE PTR [rax],dil
   1400038b5:	jmp    0x1400038ed
   1400038b7:	mov    rax,rbx
   1400038ba:	mov    BYTE PTR [rbx],0x0
   1400038bd:	jmp    0x1400038ed
   1400038bf:	mov    rcx,rbx
   1400038c2:	test   rsi,rsi
   1400038c5:	je     0x1400038d6
   1400038c7:	add    rcx,QWORD PTR [rbx+0x10]
   1400038cb:	mov    r8,rsi
   1400038ce:	mov    rdx,rbp
   1400038d1:	call   0x14000654c
   1400038d6:	cmp    QWORD PTR [rbx+0x18],0x10
   1400038db:	mov    QWORD PTR [rbx+0x10],rdi
   1400038df:	jb     0x1400038e6
   1400038e1:	mov    rax,QWORD PTR [rbx]
   1400038e4:	jmp    0x1400038e9
   1400038e6:	mov    rax,rbx
   1400038e9:	mov    BYTE PTR [rax+rdi*1],0x0
   1400038ed:	mov    rdi,QWORD PTR [rsp+0x30]
   1400038f2:	mov    rbp,QWORD PTR [rsp+0x40]
   1400038f7:	mov    rax,rbx
   1400038fa:	mov    rbx,QWORD PTR [rsp+0x38]
   1400038ff:	add    rsp,0x20
   140003903:	pop    rsi
   140003904:	ret    
   140003905:	int3   
   140003906:	int3   
   140003907:	int3   
   140003908:	int3   
   140003909:	int3   
   14000390a:	int3   
   14000390b:	int3   
   14000390c:	int3   
   14000390d:	int3   
   14000390e:	int3   
   14000390f:	int3   
   140003910:	mov    QWORD PTR [rsp+0x10],rbx
   140003915:	mov    QWORD PTR [rsp+0x18],rbp
   14000391a:	push   rsi
   14000391b:	sub    rsp,0x20
   14000391f:	or     rax,0xffffffffffffffff
   140003923:	movzx  ebp,r8b
   140003927:	mov    r8,QWORD PTR [rcx+0x10]
   14000392b:	sub    rax,r8
   14000392e:	mov    rsi,rdx
   140003931:	mov    rbx,rcx
   140003934:	cmp    rax,rdx
   140003937:	ja     0x140003947
   140003939:	lea    rcx,[rip+0x5190]        # 0x140008ad0
   140003940:	call   QWORD PTR [rip+0x471a]        # 0x140008060
   140003946:	int3   
   140003947:	mov    QWORD PTR [rsp+0x30],rdi
   14000394c:	test   rdx,rdx
   14000394f:	je     0x1400039fa
   140003955:	lea    rdi,[r8+rdx*1]
   140003959:	cmp    rdi,0xfffffffffffffffe
   14000395d:	jbe    0x14000396d
   14000395f:	lea    rcx,[rip+0x516a]        # 0x140008ad0
   140003966:	call   QWORD PTR [rip+0x46f4]        # 0x140008060
   14000396c:	int3   
   14000396d:	mov    rax,QWORD PTR [rcx+0x18]
   140003971:	cmp    rax,rdi
   140003974:	jae    0x14000399d
   140003976:	mov    rdx,rdi
   140003979:	call   0x140002e10
   14000397e:	test   rdi,rdi
   140003981:	je     0x1400039fa
   140003983:	mov    rcx,QWORD PTR [rbx+0x10]
   140003987:	cmp    rsi,0x1
   14000398b:	jne    0x1400039c5
   14000398d:	cmp    QWORD PTR [rbx+0x18],0x10
   140003992:	jb     0x1400039bc
   140003994:	mov    rax,QWORD PTR [rbx]
   140003997:	mov    BYTE PTR [rax+rcx*1],bpl
   14000399b:	jmp    0x1400039e3
   14000399d:	test   rdi,rdi
   1400039a0:	jne    0x140003983
   1400039a2:	mov    QWORD PTR [rcx+0x10],rdi
   1400039a6:	cmp    rax,0x10
   1400039aa:	jb     0x1400039b4
   1400039ac:	mov    rax,QWORD PTR [rcx]
   1400039af:	mov    BYTE PTR [rax],dil
   1400039b2:	jmp    0x1400039fa
   1400039b4:	mov    rax,rcx
   1400039b7:	mov    BYTE PTR [rcx],0x0
   1400039ba:	jmp    0x1400039fa
   1400039bc:	mov    rax,rbx
   1400039bf:	mov    BYTE PTR [rbx+rcx*1],bpl
   1400039c3:	jmp    0x1400039e3
   1400039c5:	cmp    QWORD PTR [rbx+0x18],0x10
   1400039ca:	jb     0x1400039d1
   1400039cc:	mov    rax,QWORD PTR [rbx]
   1400039cf:	jmp    0x1400039d4
   1400039d1:	mov    rax,rbx
   1400039d4:	movsx  edx,bpl
   1400039d8:	add    rcx,rax
   1400039db:	mov    r8,rsi
   1400039de:	call   0x140006552
   1400039e3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400039e8:	mov    QWORD PTR [rbx+0x10],rdi
   1400039ec:	jb     0x1400039f3
   1400039ee:	mov    rax,QWORD PTR [rbx]
   1400039f1:	jmp    0x1400039f6
   1400039f3:	mov    rax,rbx
   1400039f6:	mov    BYTE PTR [rax+rdi*1],0x0
   1400039fa:	mov    rdi,QWORD PTR [rsp+0x30]
   1400039ff:	mov    rbp,QWORD PTR [rsp+0x40]
   140003a04:	mov    rax,rbx
   140003a07:	mov    rbx,QWORD PTR [rsp+0x38]
   140003a0c:	add    rsp,0x20
   140003a10:	pop    rsi
   140003a11:	ret    
   140003a12:	int3   
   140003a13:	int3   
   140003a14:	int3   
   140003a15:	int3   
   140003a16:	int3   
   140003a17:	int3   
   140003a18:	int3   
   140003a19:	int3   
   140003a1a:	int3   
   140003a1b:	int3   
   140003a1c:	int3   
   140003a1d:	int3   
   140003a1e:	int3   
   140003a1f:	int3   
   140003a20:	or     r9,0xffffffffffffffff
   140003a24:	xor    r8d,r8d
   140003a27:	jmp    0x140003a30
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	mov    QWORD PTR [rsp+0x8],rbx
   140003a35:	mov    QWORD PTR [rsp+0x10],rbp
   140003a3a:	mov    QWORD PTR [rsp+0x18],rsi
   140003a3f:	push   rdi
   140003a40:	sub    rsp,0x20
   140003a44:	mov    rdi,QWORD PTR [rdx+0x10]
   140003a48:	mov    rbp,r8
   140003a4b:	mov    rsi,rdx
   140003a4e:	mov    rbx,rcx
   140003a51:	cmp    rdi,r8
   140003a54:	jae    0x140003a64
   140003a56:	lea    rcx,[rip+0x5083]        # 0x140008ae0
   140003a5d:	call   QWORD PTR [rip+0x4605]        # 0x140008068
   140003a63:	int3   
   140003a64:	sub    rdi,r8
   140003a67:	cmp    r9,rdi
   140003a6a:	cmovb  rdi,r9
   140003a6e:	cmp    rcx,rdx
   140003a71:	jne    0x140003aac
   140003a73:	lea    rax,[rdi+r8*1]
   140003a77:	cmp    QWORD PTR [rcx+0x10],rax
   140003a7b:	jae    0x140003a8b
   140003a7d:	lea    rcx,[rip+0x505c]        # 0x140008ae0
   140003a84:	call   QWORD PTR [rip+0x45de]        # 0x140008068
   140003a8a:	int3   
   140003a8b:	cmp    QWORD PTR [rcx+0x18],0x10
   140003a90:	mov    QWORD PTR [rcx+0x10],rax
   140003a94:	jb     0x140003a99
   140003a96:	mov    rcx,QWORD PTR [rcx]
   140003a99:	mov    BYTE PTR [rcx+rax*1],0x0
   140003a9d:	xor    edx,edx
   140003a9f:	mov    rcx,rbx
   140003aa2:	call   0x140004020
   140003aa7:	jmp    0x140003b3a
   140003aac:	cmp    rdi,0xfffffffffffffffe
   140003ab0:	jbe    0x140003ac0
   140003ab2:	lea    rcx,[rip+0x5017]        # 0x140008ad0
   140003ab9:	call   QWORD PTR [rip+0x45a1]        # 0x140008060
   140003abf:	int3   
   140003ac0:	mov    rax,QWORD PTR [rcx+0x18]
   140003ac4:	cmp    rax,rdi
   140003ac7:	jae    0x140003af0
   140003ac9:	mov    r8,QWORD PTR [rcx+0x10]
   140003acd:	mov    rdx,rdi
   140003ad0:	call   0x140002e10
   140003ad5:	test   rdi,rdi
   140003ad8:	je     0x140003b3a
   140003ada:	cmp    QWORD PTR [rsi+0x18],0x10
   140003adf:	jb     0x140003ae4
   140003ae1:	mov    rsi,QWORD PTR [rsi]
   140003ae4:	cmp    QWORD PTR [rbx+0x18],0x10
   140003ae9:	jb     0x140003b0f
   140003aeb:	mov    rcx,QWORD PTR [rbx]
   140003aee:	jmp    0x140003b12
   140003af0:	test   rdi,rdi
   140003af3:	jne    0x140003ada
   140003af5:	mov    QWORD PTR [rcx+0x10],rdi
   140003af9:	cmp    rax,0x10
   140003afd:	jb     0x140003b07
   140003aff:	mov    rax,QWORD PTR [rcx]
   140003b02:	mov    BYTE PTR [rax],dil
   140003b05:	jmp    0x140003b3a
   140003b07:	mov    rax,rcx
   140003b0a:	mov    BYTE PTR [rcx],0x0
   140003b0d:	jmp    0x140003b3a
   140003b0f:	mov    rcx,rbx
   140003b12:	test   rdi,rdi
   140003b15:	je     0x140003b23
   140003b17:	lea    rdx,[rsi+rbp*1]
   140003b1b:	mov    r8,rdi
   140003b1e:	call   0x14000654c
   140003b23:	cmp    QWORD PTR [rbx+0x18],0x10
   140003b28:	mov    QWORD PTR [rbx+0x10],rdi
   140003b2c:	jb     0x140003b33
   140003b2e:	mov    rax,QWORD PTR [rbx]
   140003b31:	jmp    0x140003b36
   140003b33:	mov    rax,rbx
   140003b36:	mov    BYTE PTR [rax+rdi*1],0x0
   140003b3a:	mov    rbp,QWORD PTR [rsp+0x38]
   140003b3f:	mov    rsi,QWORD PTR [rsp+0x40]
   140003b44:	mov    rax,rbx
   140003b47:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b4c:	add    rsp,0x20
   140003b50:	pop    rdi
   140003b51:	ret    
   140003b52:	int3   
   140003b53:	int3   
   140003b54:	int3   
   140003b55:	int3   
   140003b56:	int3   
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	cmp    BYTE PTR [rdx],0x0
   140003b63:	jne    0x140003b6d
   140003b65:	xor    r8d,r8d
   140003b68:	jmp    0x140003b80
   140003b6d:	or     r8,0xffffffffffffffff
   140003b71:	inc    r8
   140003b74:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003b79:	jne    0x140003b71
   140003b7b:	jmp    0x140003b80
   140003b80:	mov    QWORD PTR [rsp+0x8],rbx
   140003b85:	mov    QWORD PTR [rsp+0x10],rsi
   140003b8a:	push   rdi
   140003b8b:	sub    rsp,0x20
   140003b8f:	mov    rdi,r8
   140003b92:	mov    rsi,rdx
   140003b95:	mov    rbx,rcx
   140003b98:	test   rdx,rdx
   140003b9b:	je     0x140003bf7
   140003b9d:	mov    rdx,QWORD PTR [rcx+0x18]
   140003ba1:	cmp    rdx,0x10
   140003ba5:	jb     0x140003bac
   140003ba7:	mov    rax,QWORD PTR [rcx]
   140003baa:	jmp    0x140003baf
   140003bac:	mov    rax,rcx
   140003baf:	cmp    rsi,rax
   140003bb2:	jb     0x140003bf7
   140003bb4:	cmp    rdx,0x10
   140003bb8:	jb     0x140003bbd
   140003bba:	mov    rcx,QWORD PTR [rcx]
   140003bbd:	add    rcx,QWORD PTR [rbx+0x10]
   140003bc1:	cmp    rcx,rsi
   140003bc4:	jbe    0x140003bf7
   140003bc6:	cmp    rdx,0x10
   140003bca:	jb     0x140003bd1
   140003bcc:	mov    rax,QWORD PTR [rbx]
   140003bcf:	jmp    0x140003bd4
   140003bd1:	mov    rax,rbx
   140003bd4:	sub    rsi,rax
   140003bd7:	mov    r9,r8
   140003bda:	mov    rdx,rbx
   140003bdd:	mov    r8,rsi
   140003be0:	mov    rcx,rbx
   140003be3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003be8:	mov    rsi,QWORD PTR [rsp+0x38]
   140003bed:	add    rsp,0x20
   140003bf1:	pop    rdi
   140003bf2:	jmp    0x140003a30
   140003bf7:	cmp    r8,0xfffffffffffffffe
   140003bfb:	jbe    0x140003c0b
   140003bfd:	lea    rcx,[rip+0x4ecc]        # 0x140008ad0
   140003c04:	call   QWORD PTR [rip+0x4456]        # 0x140008060
   140003c0a:	int3   
   140003c0b:	mov    rax,QWORD PTR [rbx+0x18]
   140003c0f:	cmp    rax,r8
   140003c12:	jae    0x140003c34
   140003c14:	mov    r8,QWORD PTR [rbx+0x10]
   140003c18:	mov    rdx,rdi
   140003c1b:	mov    rcx,rbx
   140003c1e:	call   0x140002e10
   140003c23:	test   rdi,rdi
   140003c26:	je     0x140003c9c
   140003c28:	cmp    QWORD PTR [rbx+0x18],0x10
   140003c2d:	jb     0x140003c72
   140003c2f:	mov    rcx,QWORD PTR [rbx]
   140003c32:	jmp    0x140003c75
   140003c34:	test   r8,r8
   140003c37:	jne    0x140003c23
   140003c39:	mov    QWORD PTR [rbx+0x10],r8
   140003c3d:	cmp    rax,0x10
   140003c41:	jb     0x140003c5c
   140003c43:	mov    rax,QWORD PTR [rbx]
   140003c46:	mov    BYTE PTR [rax],r8b
   140003c49:	mov    rax,rbx
   140003c4c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c51:	mov    rsi,QWORD PTR [rsp+0x38]
   140003c56:	add    rsp,0x20
   140003c5a:	pop    rdi
   140003c5b:	ret    
   140003c5c:	mov    rax,rbx
   140003c5f:	mov    BYTE PTR [rbx],0x0
   140003c62:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c67:	mov    rsi,QWORD PTR [rsp+0x38]
   140003c6c:	add    rsp,0x20
   140003c70:	pop    rdi
   140003c71:	ret    
   140003c72:	mov    rcx,rbx
   140003c75:	test   rdi,rdi
   140003c78:	je     0x140003c85
   140003c7a:	mov    r8,rdi
   140003c7d:	mov    rdx,rsi
   140003c80:	call   0x14000654c
   140003c85:	cmp    QWORD PTR [rbx+0x18],0x10
   140003c8a:	mov    QWORD PTR [rbx+0x10],rdi
   140003c8e:	jb     0x140003c95
   140003c90:	mov    rax,QWORD PTR [rbx]
   140003c93:	jmp    0x140003c98
   140003c95:	mov    rax,rbx
   140003c98:	mov    BYTE PTR [rax+rdi*1],0x0
   140003c9c:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ca1:	mov    rax,rbx
   140003ca4:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ca9:	add    rsp,0x20
   140003cad:	pop    rdi
   140003cae:	ret    
   140003caf:	int3   
   140003cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140003cb5:	mov    QWORD PTR [rsp+0x10],rsi
   140003cba:	push   rdi
   140003cbb:	sub    rsp,0x20
   140003cbf:	movzx  esi,r8b
   140003cc3:	mov    rdi,rdx
   140003cc6:	mov    rbx,rcx
   140003cc9:	cmp    rdx,0xffffffffffffffff
   140003ccd:	jne    0x140003cdd
   140003ccf:	lea    rcx,[rip+0x4dfa]        # 0x140008ad0
   140003cd6:	call   QWORD PTR [rip+0x4384]        # 0x140008060
   140003cdc:	int3   
   140003cdd:	cmp    rdx,0xfffffffffffffffe
   140003ce1:	jbe    0x140003cf1
   140003ce3:	lea    rcx,[rip+0x4de6]        # 0x140008ad0
   140003cea:	call   QWORD PTR [rip+0x4370]        # 0x140008060
   140003cf0:	int3   
   140003cf1:	mov    rax,QWORD PTR [rcx+0x18]
   140003cf5:	cmp    rax,rdx
   140003cf8:	jae    0x140003d21
   140003cfa:	mov    r8,QWORD PTR [rcx+0x10]
   140003cfe:	call   0x140002e10
   140003d03:	test   rdi,rdi
   140003d06:	je     0x140003d9b
   140003d0c:	cmp    rdi,0x1
   140003d10:	jne    0x140003d69
   140003d12:	cmp    QWORD PTR [rbx+0x18],0x10
   140003d17:	jb     0x140003d61
   140003d19:	mov    rax,QWORD PTR [rbx]
   140003d1c:	mov    BYTE PTR [rax],sil
   140003d1f:	jmp    0x140003d84
   140003d21:	test   rdx,rdx
   140003d24:	jne    0x140003d03
   140003d26:	mov    QWORD PTR [rcx+0x10],rdx
   140003d2a:	cmp    rax,0x10
   140003d2e:	jb     0x140003d48
   140003d30:	mov    rax,QWORD PTR [rcx]
   140003d33:	mov    BYTE PTR [rax],dl
   140003d35:	mov    rax,rbx
   140003d38:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d3d:	mov    rsi,QWORD PTR [rsp+0x38]
   140003d42:	add    rsp,0x20
   140003d46:	pop    rdi
   140003d47:	ret    
   140003d48:	mov    rax,rcx
   140003d4b:	mov    BYTE PTR [rcx],0x0
   140003d4e:	mov    rax,rbx
   140003d51:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d56:	mov    rsi,QWORD PTR [rsp+0x38]
   140003d5b:	add    rsp,0x20
   140003d5f:	pop    rdi
   140003d60:	ret    
   140003d61:	mov    rax,rbx
   140003d64:	mov    BYTE PTR [rbx],sil
   140003d67:	jmp    0x140003d84
   140003d69:	cmp    QWORD PTR [rbx+0x18],0x10
   140003d6e:	jb     0x140003d75
   140003d70:	mov    rcx,QWORD PTR [rbx]
   140003d73:	jmp    0x140003d78
   140003d75:	mov    rcx,rbx
   140003d78:	movsx  edx,sil
   140003d7c:	mov    r8,rdi
   140003d7f:	call   0x140006552
   140003d84:	cmp    QWORD PTR [rbx+0x18],0x10
   140003d89:	mov    QWORD PTR [rbx+0x10],rdi
   140003d8d:	jb     0x140003d94
   140003d8f:	mov    rax,QWORD PTR [rbx]
   140003d92:	jmp    0x140003d97
   140003d94:	mov    rax,rbx
   140003d97:	mov    BYTE PTR [rax+rdi*1],0x0
   140003d9b:	mov    rsi,QWORD PTR [rsp+0x38]
   140003da0:	mov    rax,rbx
   140003da3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003da8:	add    rsp,0x20
   140003dac:	pop    rdi
   140003dad:	ret    
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	rex push rbx
   140003db2:	sub    rsp,0x20
   140003db6:	mov    rax,rdx
   140003db9:	movsx  edx,r8b
   140003dbd:	mov    rbx,rcx
   140003dc0:	mov    r8,rax
   140003dc3:	call   0x140006552
   140003dc8:	mov    rax,rbx
   140003dcb:	add    rsp,0x20
   140003dcf:	pop    rbx
   140003dd0:	ret    
   140003dd1:	int3   
   140003dd2:	int3   
   140003dd3:	int3   
   140003dd4:	int3   
   140003dd5:	int3   
   140003dd6:	int3   
   140003dd7:	int3   
   140003dd8:	int3   
   140003dd9:	int3   
   140003dda:	int3   
   140003ddb:	int3   
   140003ddc:	int3   
   140003ddd:	int3   
   140003dde:	int3   
   140003ddf:	int3   
   140003de0:	movzx  eax,BYTE PTR [rdx]
   140003de3:	mov    BYTE PTR [rcx],al
   140003de5:	ret    
   140003de6:	int3   
   140003de7:	int3   
   140003de8:	int3   
   140003de9:	int3   
   140003dea:	int3   
   140003deb:	int3   
   140003dec:	int3   
   140003ded:	int3   
   140003dee:	int3   
   140003def:	int3   
   140003df0:	cmp    QWORD PTR [rcx+0x18],0x10
   140003df5:	jb     0x140003e01
   140003df7:	mov    rax,QWORD PTR [rcx]
   140003dfa:	mov    QWORD PTR [rdx],rax
   140003dfd:	mov    rax,rdx
   140003e00:	ret    
   140003e01:	mov    QWORD PTR [rdx],rcx
   140003e04:	mov    rax,rdx
   140003e07:	ret    
   140003e08:	int3   
   140003e09:	int3   
   140003e0a:	int3   
   140003e0b:	int3   
   140003e0c:	int3   
   140003e0d:	int3   
   140003e0e:	int3   
   140003e0f:	int3   
   140003e10:	cmp    QWORD PTR [rcx+0x18],0x10
   140003e15:	jb     0x140003e1b
   140003e17:	mov    rax,QWORD PTR [rcx]
   140003e1a:	ret    
   140003e1b:	mov    rax,rcx
   140003e1e:	ret    
   140003e1f:	int3   
   140003e20:	mov    rax,QWORD PTR [rcx+0x8]
   140003e24:	ret    
   140003e25:	int3   
   140003e26:	int3   
   140003e27:	int3   
   140003e28:	int3   
   140003e29:	int3   
   140003e2a:	int3   
   140003e2b:	int3   
   140003e2c:	int3   
   140003e2d:	int3   
   140003e2e:	int3   
   140003e2f:	int3   
   140003e30:	mov    rax,QWORD PTR [rcx+0x8]
   140003e34:	ret    
   140003e35:	int3   
   140003e36:	int3   
   140003e37:	int3   
   140003e38:	int3   
   140003e39:	int3   
   140003e3a:	int3   
   140003e3b:	int3   
   140003e3c:	int3   
   140003e3d:	int3   
   140003e3e:	int3   
   140003e3f:	int3   
   140003e40:	mov    QWORD PTR [rsp+0x8],rbx
   140003e45:	mov    QWORD PTR [rsp+0x10],rsi
   140003e4a:	push   rdi
   140003e4b:	sub    rsp,0x20
   140003e4f:	cmp    QWORD PTR [rcx+0x90],0x0
   140003e57:	mov    rbx,rcx
   140003e5a:	jne    0x140003e62
   140003e5c:	xor    edi,edi
   140003e5e:	mov    esi,edi
   140003e60:	jmp    0x140003e85
   140003e62:	call   0x140002f30
   140003e67:	mov    rcx,QWORD PTR [rbx+0x90]
   140003e6e:	xor    edi,edi
   140003e70:	test   al,al
   140003e72:	mov    rsi,rbx
   140003e75:	cmove  rsi,rdi
   140003e79:	call   QWORD PTR [rip+0x43c9]        # 0x140008248
   140003e7f:	test   eax,eax
   140003e81:	cmovne rsi,rdi
   140003e85:	mov    rcx,rbx
   140003e88:	mov    BYTE PTR [rbx+0x88],0x0
   140003e8f:	mov    BYTE PTR [rbx+0x81],0x0
   140003e96:	call   QWORD PTR [rip+0x426c]        # 0x140008108
   140003e9c:	mov    QWORD PTR [rbx+0x90],rdi
   140003ea3:	mov    ecx,DWORD PTR [rip+0x85e7]        # 0x14000c490
   140003ea9:	mov    DWORD PTR [rbx+0x84],ecx
   140003eaf:	mov    QWORD PTR [rbx+0x78],rdi
   140003eb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003eb8:	mov    rax,rsi
   140003ebb:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ec0:	add    rsp,0x20
   140003ec4:	pop    rdi
   140003ec5:	ret    
   140003ec6:	int3   
   140003ec7:	int3   
   140003ec8:	int3   
   140003ec9:	int3   
   140003eca:	int3   
   140003ecb:	int3   
   140003ecc:	int3   
   140003ecd:	int3   
   140003ece:	int3   
   140003ecf:	int3   
   140003ed0:	rex push rbx
   140003ed2:	sub    rsp,0x20
   140003ed6:	mov    rbx,rcx
   140003ed9:	test   r8,r8
   140003edc:	je     0x140003ee3
   140003ede:	call   0x14000654c
   140003ee3:	mov    rax,rbx
   140003ee6:	add    rsp,0x20
   140003eea:	pop    rbx
   140003eeb:	ret    
   140003eec:	int3   
   140003eed:	int3   
   140003eee:	int3   
   140003eef:	int3   
   140003ef0:	mov    rcx,rdx
   140003ef3:	jmp    0x1400063aa
   140003ef8:	int3   
   140003ef9:	int3   
   140003efa:	int3   
   140003efb:	int3   
   140003efc:	int3   
   140003efd:	int3   
   140003efe:	int3   
   140003eff:	int3   
   140003f00:	mov    rcx,rdx
   140003f03:	jmp    0x1400063aa
   140003f08:	int3   
   140003f09:	int3   
   140003f0a:	int3   
   140003f0b:	int3   
   140003f0c:	int3   
   140003f0d:	int3   
   140003f0e:	int3   
   140003f0f:	int3   
   140003f10:	mov    QWORD PTR [rsp+0x8],rbx
   140003f15:	push   rdi
   140003f16:	sub    rsp,0x20
   140003f1a:	mov    ecx,r8d
   140003f1d:	mov    edi,r8d
   140003f20:	mov    rbx,rdx
   140003f23:	call   QWORD PTR [rip+0x417f]        # 0x1400080a8
   140003f29:	mov    DWORD PTR [rbx],edi
   140003f2b:	test   rax,rax
   140003f2e:	lea    rax,[rip+0x80cb]        # 0x14000c000
   140003f35:	jne    0x140003f3e
   140003f37:	lea    rax,[rip+0x80d2]        # 0x14000c010
   140003f3e:	mov    QWORD PTR [rbx+0x8],rax
   140003f42:	mov    rax,rbx
   140003f45:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f4a:	add    rsp,0x20
   140003f4e:	pop    rdi
   140003f4f:	ret    
   140003f50:	mov    DWORD PTR [rdx],r8d
   140003f53:	mov    QWORD PTR [rdx+0x8],rcx
   140003f57:	mov    rax,rdx
   140003f5a:	ret    
   140003f5b:	int3   
   140003f5c:	int3   
   140003f5d:	int3   
   140003f5e:	int3   
   140003f5f:	int3   
   140003f60:	xor    eax,eax
   140003f62:	cmp    QWORD PTR [rcx+0x10],rax
   140003f66:	sete   al
   140003f69:	ret    
   140003f6a:	int3   
   140003f6b:	int3   
   140003f6c:	int3   
   140003f6d:	int3   
   140003f6e:	int3   
   140003f6f:	int3   
   140003f70:	cmp    QWORD PTR [rcx+0x18],0x10
   140003f75:	jb     0x140003f88
   140003f77:	mov    r8,QWORD PTR [rcx]
   140003f7a:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f7e:	mov    rax,rdx
   140003f81:	add    rcx,r8
   140003f84:	mov    QWORD PTR [rdx],rcx
   140003f87:	ret    
   140003f88:	mov    r8,rcx
   140003f8b:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f8f:	mov    rax,rdx
   140003f92:	add    rcx,r8
   140003f95:	mov    QWORD PTR [rdx],rcx
   140003f98:	ret    
   140003f99:	int3   
   140003f9a:	int3   
   140003f9b:	int3   
   140003f9c:	int3   
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	or     eax,0xffffffff
   140003fa3:	ret    
   140003fa4:	int3   
   140003fa5:	int3   
   140003fa6:	int3   
   140003fa7:	int3   
   140003fa8:	int3   
   140003fa9:	int3   
   140003faa:	int3   
   140003fab:	int3   
   140003fac:	int3   
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	mov    edx,DWORD PTR [rdx]
   140003fb2:	cmp    DWORD PTR [rcx],edx
   140003fb4:	sete   al
   140003fb7:	ret    
   140003fb8:	int3   
   140003fb9:	int3   
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	cmp    rcx,QWORD PTR [rdx+0x8]
   140003fc4:	jne    0x140003fce
   140003fc6:	cmp    DWORD PTR [rdx],r8d
   140003fc9:	jne    0x140003fce
   140003fcb:	mov    al,0x1
   140003fcd:	ret    
   140003fce:	xor    al,al
   140003fd0:	ret    
   140003fd1:	int3   
   140003fd2:	int3   
   140003fd3:	int3   
   140003fd4:	int3   
   140003fd5:	int3   
   140003fd6:	int3   
   140003fd7:	int3   
   140003fd8:	int3   
   140003fd9:	int3   
   140003fda:	int3   
   140003fdb:	int3   
   140003fdc:	int3   
   140003fdd:	int3   
   140003fde:	int3   
   140003fdf:	int3   
   140003fe0:	rex push rbx
   140003fe2:	sub    rsp,0x30
   140003fe6:	mov    rax,QWORD PTR [rcx]
   140003fe9:	mov    rbx,r8
   140003fec:	mov    r8d,edx
   140003fef:	lea    rdx,[rsp+0x20]
   140003ff4:	call   QWORD PTR [rax+0x18]
   140003ff7:	mov    rcx,QWORD PTR [rbx+0x8]
   140003ffb:	cmp    QWORD PTR [rax+0x8],rcx
   140003fff:	jne    0x14000400f
   140004001:	mov    ecx,DWORD PTR [rbx]
   140004003:	cmp    DWORD PTR [rax],ecx
   140004005:	jne    0x14000400f
   140004007:	mov    al,0x1
   140004009:	add    rsp,0x30
   14000400d:	pop    rbx
   14000400e:	ret    
   14000400f:	xor    al,al
   140004011:	add    rsp,0x30
   140004015:	pop    rbx
   140004016:	ret    
   140004017:	int3   
   140004018:	int3   
   140004019:	int3   
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	int3   
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	mov    QWORD PTR [rsp+0x8],rbx
   140004025:	push   rdi
   140004026:	sub    rsp,0x20
   14000402a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000402e:	mov    rbx,rcx
   140004031:	cmp    rdi,rdx
   140004034:	jae    0x140004044
   140004036:	lea    rcx,[rip+0x4aa3]        # 0x140008ae0
   14000403d:	call   QWORD PTR [rip+0x4025]        # 0x140008068
   140004043:	int3   
   140004044:	mov    rax,rdi
   140004047:	sub    rax,rdx
   14000404a:	cmp    rax,r8
   14000404d:	ja     0x140004084
   14000404f:	cmp    QWORD PTR [rcx+0x18],0x10
   140004054:	mov    QWORD PTR [rcx+0x10],rdx
   140004058:	jb     0x14000406f
   14000405a:	mov    rax,QWORD PTR [rcx]
   14000405d:	mov    BYTE PTR [rax+rdx*1],0x0
   140004061:	mov    rax,rbx
   140004064:	mov    rbx,QWORD PTR [rsp+0x30]
   140004069:	add    rsp,0x20
   14000406d:	pop    rdi
   14000406e:	ret    
   14000406f:	mov    rax,rcx
   140004072:	mov    BYTE PTR [rcx+rdx*1],0x0
   140004076:	mov    rax,rbx
   140004079:	mov    rbx,QWORD PTR [rsp+0x30]
   14000407e:	add    rsp,0x20
   140004082:	pop    rdi
   140004083:	ret    
   140004084:	test   r8,r8
   140004087:	je     0x1400040db
   140004089:	cmp    QWORD PTR [rcx+0x18],0x10
   14000408e:	jb     0x140004095
   140004090:	mov    rax,QWORD PTR [rcx]
   140004093:	jmp    0x140004098
   140004095:	mov    rax,rcx
   140004098:	sub    rdi,r8
   14000409b:	lea    rcx,[rax+rdx*1]
   14000409f:	mov    rax,rdi
   1400040a2:	sub    rax,rdx
   1400040a5:	je     0x1400040b4
   1400040a7:	lea    rdx,[rcx+r8*1]
   1400040ab:	mov    r8,rax
   1400040ae:	call   QWORD PTR [rip+0x4204]        # 0x1400082b8
   1400040b4:	cmp    QWORD PTR [rbx+0x18],0x10
   1400040b9:	mov    QWORD PTR [rbx+0x10],rdi
   1400040bd:	jb     0x1400040d4
   1400040bf:	mov    rax,QWORD PTR [rbx]
   1400040c2:	mov    BYTE PTR [rax+rdi*1],0x0
   1400040c6:	mov    rax,rbx
   1400040c9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040ce:	add    rsp,0x20
   1400040d2:	pop    rdi
   1400040d3:	ret    
   1400040d4:	mov    rax,rbx
   1400040d7:	mov    BYTE PTR [rbx+rdi*1],0x0
   1400040db:	mov    rax,rbx
   1400040de:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040e3:	add    rsp,0x20
   1400040e7:	pop    rdi
   1400040e8:	ret    
   1400040e9:	int3   
   1400040ea:	int3   
   1400040eb:	int3   
   1400040ec:	int3   
   1400040ed:	int3   
   1400040ee:	int3   
   1400040ef:	int3   
   1400040f0:	sub    rsp,0x28
   1400040f4:	cmp    QWORD PTR [rcx+0x10],rdx
   1400040f8:	jae    0x140004108
   1400040fa:	lea    rcx,[rip+0x49df]        # 0x140008ae0
   140004101:	call   QWORD PTR [rip+0x3f61]        # 0x140008068
   140004107:	int3   
   140004108:	cmp    QWORD PTR [rcx+0x18],0x10
   14000410d:	mov    QWORD PTR [rcx+0x10],rdx
   140004111:	jb     0x140004122
   140004113:	mov    rax,QWORD PTR [rcx]
   140004116:	mov    BYTE PTR [rax+rdx*1],0x0
   14000411a:	mov    rax,rcx
   14000411d:	add    rsp,0x28
   140004121:	ret    
   140004122:	mov    rax,rcx
   140004125:	mov    BYTE PTR [rcx+rdx*1],0x0
   140004129:	add    rsp,0x28
   14000412d:	ret    
   14000412e:	int3   
   14000412f:	int3   
   140004130:	lea    rax,[rip+0x7ec9]        # 0x14000c000
   140004137:	ret    
   140004138:	int3   
   140004139:	int3   
   14000413a:	int3   
   14000413b:	int3   
   14000413c:	int3   
   14000413d:	int3   
   14000413e:	int3   
   14000413f:	int3   
   140004140:	mov    QWORD PTR [rsp+0x8],rbx
   140004145:	push   rdi
   140004146:	sub    rsp,0x20
   14000414a:	mov    rbx,rcx
   14000414d:	mov    rcx,rdx
   140004150:	call   0x140001c10
   140004155:	mov    rcx,rax
   140004158:	mov    rdi,rax
   14000415b:	call   QWORD PTR [rip+0x3f1f]        # 0x140008080
   140004161:	test   al,al
   140004163:	je     0x140004178
   140004165:	mov    QWORD PTR [rbx+0x78],0x0
   14000416d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004172:	add    rsp,0x20
   140004176:	pop    rdi
   140004177:	ret    
   140004178:	mov    rcx,rbx
   14000417b:	mov    QWORD PTR [rbx+0x78],rdi
   14000417f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004184:	add    rsp,0x20
   140004188:	pop    rdi
   140004189:	rex.W jmp QWORD PTR [rip+0x3f78]        # 0x140008108
   140004190:	xor    eax,eax
   140004192:	cmp    QWORD PTR [rcx+0x90],rax
   140004199:	setne  al
   14000419c:	ret    
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	xor    eax,eax
   1400041a2:	cmp    QWORD PTR [rcx+0xa0],rax
   1400041a9:	setne  al
   1400041ac:	ret    
   1400041ad:	int3   
   1400041ae:	int3   
   1400041af:	int3   
   1400041b0:	cmp    BYTE PTR [rcx],0x0
   1400041b3:	jne    0x1400041b8
   1400041b5:	xor    eax,eax
   1400041b7:	ret    
   1400041b8:	or     rax,0xffffffffffffffff
   1400041bc:	nop    DWORD PTR [rax+0x0]
   1400041c0:	inc    rax
   1400041c3:	cmp    BYTE PTR [rcx+rax*1],0x0
   1400041c7:	jne    0x1400041c0
   1400041c9:	ret    
   1400041ca:	int3   
   1400041cb:	int3   
   1400041cc:	int3   
   1400041cd:	int3   
   1400041ce:	int3   
   1400041cf:	int3   
   1400041d0:	sub    rsp,0x28
   1400041d4:	call   QWORD PTR [rip+0x3e2e]        # 0x140008008
   1400041da:	mov    edx,0x40
   1400041df:	mov    rcx,rax
   1400041e2:	call   QWORD PTR [rip+0x3e38]        # 0x140008020
   1400041e8:	call   QWORD PTR [rip+0x3e22]        # 0x140008010
   1400041ee:	mov    edx,0xfffffff1
   1400041f3:	mov    rcx,rax
   1400041f6:	call   QWORD PTR [rip+0x3e1c]        # 0x140008018
   1400041fc:	call   QWORD PTR [rip+0x3e0e]        # 0x140008010
   140004202:	mov    edx,0x10000
   140004207:	mov    rcx,rax
   14000420a:	add    rsp,0x28
   14000420e:	rex.W jmp QWORD PTR [rip+0x3e03]        # 0x140008018
   140004215:	int3   
   140004216:	int3   
   140004217:	int3   
   140004218:	int3   
   140004219:	int3   
   14000421a:	int3   
   14000421b:	int3   
   14000421c:	int3   
   14000421d:	int3   
   14000421e:	int3   
   14000421f:	int3   
   140004220:	or     rax,0xffffffffffffffff
   140004224:	ret    
   140004225:	int3   
   140004226:	int3   
   140004227:	int3   
   140004228:	int3   
   140004229:	int3   
   14000422a:	int3   
   14000422b:	int3   
   14000422c:	int3   
   14000422d:	int3   
   14000422e:	int3   
   14000422f:	int3   
   140004230:	or     rax,0xffffffffffffffff
   140004234:	ret    
   140004235:	int3   
   140004236:	int3   
   140004237:	int3   
   140004238:	int3   
   140004239:	int3   
   14000423a:	int3   
   14000423b:	int3   
   14000423c:	int3   
   14000423d:	int3   
   14000423e:	int3   
   14000423f:	int3   
   140004240:	or     rax,0xffffffffffffffff
   140004244:	ret    
   140004245:	int3   
   140004246:	int3   
   140004247:	int3   
   140004248:	int3   
   140004249:	int3   
   14000424a:	int3   
   14000424b:	int3   
   14000424c:	int3   
   14000424d:	int3   
   14000424e:	int3   
   14000424f:	int3   
   140004250:	mov    rax,0xfffffffffffffffe
   140004257:	ret    
   140004258:	int3   
   140004259:	int3   
   14000425a:	int3   
   14000425b:	int3   
   14000425c:	int3   
   14000425d:	int3   
   14000425e:	int3   
   14000425f:	int3   
   140004260:	or     rax,0xffffffffffffffff
   140004264:	ret    
   140004265:	int3   
   140004266:	int3   
   140004267:	int3   
   140004268:	int3   
   140004269:	int3   
   14000426a:	int3   
   14000426b:	int3   
   14000426c:	int3   
   14000426d:	int3   
   14000426e:	int3   
   14000426f:	int3   
   140004270:	mov    QWORD PTR [rsp+0x8],rbx
   140004275:	push   rdi
   140004276:	sub    rsp,0x30
   14000427a:	xor    ebx,ebx
   14000427c:	mov    ecx,r8d
   14000427f:	mov    rdi,rdx
   140004282:	mov    DWORD PTR [rsp+0x20],ebx
   140004286:	call   QWORD PTR [rip+0x3e1c]        # 0x1400080a8
   14000428c:	mov    QWORD PTR [rdi+0x18],0xf
   140004294:	test   rax,rax
   140004297:	mov    QWORD PTR [rdi+0x10],rbx
   14000429b:	lea    rdx,[rip+0x45fe]        # 0x1400088a0
   1400042a2:	cmovne rdx,rax
   1400042a6:	mov    BYTE PTR [rdi],bl
   1400042a8:	cmp    BYTE PTR [rdx],bl
   1400042aa:	je     0x1400042b9
   1400042ac:	or     rbx,0xffffffffffffffff
   1400042b0:	inc    rbx
   1400042b3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   1400042b7:	jne    0x1400042b0
   1400042b9:	mov    r8,rbx
   1400042bc:	mov    rcx,rdi
   1400042bf:	call   0x140003b80
   1400042c4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400042c9:	mov    rax,rdi
   1400042cc:	add    rsp,0x30
   1400042d0:	pop    rdi
   1400042d1:	ret    
   1400042d2:	int3   
   1400042d3:	int3   
   1400042d4:	int3   
   1400042d5:	int3   
   1400042d6:	int3   
   1400042d7:	int3   
   1400042d8:	int3   
   1400042d9:	int3   
   1400042da:	int3   
   1400042db:	int3   
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	rex push rbx
   1400042e2:	sub    rsp,0x30
   1400042e6:	xor    eax,eax
   1400042e8:	mov    rbx,rdx
   1400042eb:	mov    DWORD PTR [rsp+0x20],eax
   1400042ef:	cmp    r8d,0x1
   1400042f3:	jne    0x14000431f
   1400042f5:	mov    QWORD PTR [rdx+0x18],0xf
   1400042fd:	mov    QWORD PTR [rdx+0x10],rax
   140004301:	mov    BYTE PTR [rdx],al
   140004303:	lea    rdx,[rip+0x45ee]        # 0x1400088f8
   14000430a:	lea    r8d,[rax+0x15]
   14000430e:	mov    rcx,rbx
   140004311:	call   0x140003b80
   140004316:	mov    rax,rbx
   140004319:	add    rsp,0x30
   14000431d:	pop    rbx
   14000431e:	ret    
   14000431f:	call   0x140004270
   140004324:	mov    rax,rbx
   140004327:	add    rsp,0x30
   14000432b:	pop    rbx
   14000432c:	ret    
   14000432d:	int3   
   14000432e:	int3   
   14000432f:	int3   
   140004330:	mov    QWORD PTR [rsp+0x8],rbx
   140004335:	push   rdi
   140004336:	sub    rsp,0x30
   14000433a:	xor    ebx,ebx
   14000433c:	mov    ecx,r8d
   14000433f:	mov    rdi,rdx
   140004342:	mov    DWORD PTR [rsp+0x20],ebx
   140004346:	call   QWORD PTR [rip+0x3d64]        # 0x1400080b0
   14000434c:	mov    QWORD PTR [rdi+0x18],0xf
   140004354:	test   rax,rax
   140004357:	mov    QWORD PTR [rdi+0x10],rbx
   14000435b:	lea    rdx,[rip+0x453e]        # 0x1400088a0
   140004362:	cmovne rdx,rax
   140004366:	mov    BYTE PTR [rdi],bl
   140004368:	cmp    BYTE PTR [rdx],bl
   14000436a:	je     0x140004379
   14000436c:	or     rbx,0xffffffffffffffff
   140004370:	inc    rbx
   140004373:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004377:	jne    0x140004370
   140004379:	mov    r8,rbx
   14000437c:	mov    rcx,rdi
   14000437f:	call   0x140003b80
   140004384:	mov    rbx,QWORD PTR [rsp+0x40]
   140004389:	mov    rax,rdi
   14000438c:	add    rsp,0x30
   140004390:	pop    rdi
   140004391:	ret    
   140004392:	int3   
   140004393:	int3   
   140004394:	int3   
   140004395:	int3   
   140004396:	int3   
   140004397:	int3   
   140004398:	int3   
   140004399:	int3   
   14000439a:	int3   
   14000439b:	int3   
   14000439c:	int3   
   14000439d:	int3   
   14000439e:	int3   
   14000439f:	int3   
   1400043a0:	test   r8,r8
   1400043a3:	jne    0x1400043a9
   1400043a5:	mov    rax,rcx
   1400043a8:	ret    
   1400043a9:	rex.W jmp QWORD PTR [rip+0x3f08]        # 0x1400082b8
   1400043b0:	lea    rax,[rip+0x44e1]        # 0x140008898
   1400043b7:	ret    
   1400043b8:	int3   
   1400043b9:	int3   
   1400043ba:	int3   
   1400043bb:	int3   
   1400043bc:	int3   
   1400043bd:	int3   
   1400043be:	int3   
   1400043bf:	int3   
   1400043c0:	lea    rax,[rip+0x4521]        # 0x1400088e8
   1400043c7:	ret    
   1400043c8:	int3   
   1400043c9:	int3   
   1400043ca:	int3   
   1400043cb:	int3   
   1400043cc:	int3   
   1400043cd:	int3   
   1400043ce:	int3   
   1400043cf:	int3   
   1400043d0:	lea    rax,[rip+0x4571]        # 0x140008948
   1400043d7:	ret    
   1400043d8:	int3   
   1400043d9:	int3   
   1400043da:	int3   
   1400043db:	int3   
   1400043dc:	int3   
   1400043dd:	int3   
   1400043de:	int3   
   1400043df:	int3   
   1400043e0:	xor    eax,eax
   1400043e2:	cmp    DWORD PTR [rcx],0xffffffff
   1400043e5:	cmovne eax,DWORD PTR [rcx]
   1400043e8:	ret    
   1400043e9:	int3   
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	int3   
   1400043ed:	int3   
   1400043ee:	int3   
   1400043ef:	int3   
   1400043f0:	rex push rdi
   1400043f2:	sub    rsp,0x30
   1400043f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400043ff:	mov    QWORD PTR [rsp+0x48],rbx
   140004404:	mov    eax,r8d
   140004407:	mov    r10,rdx
   14000440a:	mov    rbx,rcx
   14000440d:	cmp    QWORD PTR [rcx+0x90],0x0
   140004415:	jne    0x1400044ee
   14000441b:	mov    r8d,r9d
   14000441e:	mov    edx,eax
   140004420:	mov    rcx,r10
   140004423:	call   QWORD PTR [rip+0x3d5f]        # 0x140008188
   140004429:	mov    rdi,rax
   14000442c:	test   rax,rax
   14000442f:	je     0x1400044ee
   140004435:	mov    BYTE PTR [rbx+0x88],0x1
   14000443c:	mov    BYTE PTR [rbx+0x81],0x0
   140004443:	mov    rcx,rbx
   140004446:	call   QWORD PTR [rip+0x3cbc]        # 0x140008108
   14000444c:	lea    rcx,[rdi+0x10]
   140004450:	lea    rdx,[rdi+0x8]
   140004454:	mov    QWORD PTR [rbx+0x18],rcx
   140004458:	mov    QWORD PTR [rbx+0x20],rcx
   14000445c:	mov    QWORD PTR [rbx+0x38],rdi
   140004460:	mov    QWORD PTR [rbx+0x40],rdi
   140004464:	mov    QWORD PTR [rbx+0x50],rdx
   140004468:	mov    QWORD PTR [rbx+0x58],rdx
   14000446c:	mov    QWORD PTR [rbx+0x90],rdi
   140004473:	mov    eax,DWORD PTR [rip+0x8017]        # 0x14000c490
   140004479:	mov    DWORD PTR [rbx+0x84],eax
   14000447f:	mov    QWORD PTR [rbx+0x78],0x0
   140004487:	lea    rdx,[rsp+0x40]
   14000448c:	mov    rcx,rbx
   14000448f:	call   QWORD PTR [rip+0x3c3b]        # 0x1400080d0
   140004495:	nop
   140004496:	mov    rcx,rax
   140004499:	call   0x140001c10
   14000449e:	mov    rdi,rax
   1400044a1:	mov    rcx,rax
   1400044a4:	call   QWORD PTR [rip+0x3bd6]        # 0x140008080
   1400044aa:	test   al,al
   1400044ac:	je     0x1400044b8
   1400044ae:	mov    QWORD PTR [rbx+0x78],0x0
   1400044b6:	jmp    0x1400044c6
   1400044b8:	mov    QWORD PTR [rbx+0x78],rdi
   1400044bc:	mov    rcx,rbx
   1400044bf:	call   QWORD PTR [rip+0x3c43]        # 0x140008108
   1400044c5:	nop
   1400044c6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400044cb:	test   rcx,rcx
   1400044ce:	je     0x1400044e9
   1400044d0:	mov    rax,QWORD PTR [rcx]
   1400044d3:	call   QWORD PTR [rax+0x10]
   1400044d6:	test   rax,rax
   1400044d9:	je     0x1400044e9
   1400044db:	mov    r8,QWORD PTR [rax]
   1400044de:	mov    edx,0x1
   1400044e3:	mov    rcx,rax
   1400044e6:	call   QWORD PTR [r8]
   1400044e9:	mov    rax,rbx
   1400044ec:	jmp    0x1400044f0
   1400044ee:	xor    eax,eax
   1400044f0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400044f5:	add    rsp,0x30
   1400044f9:	pop    rdi
   1400044fa:	ret    
   1400044fb:	int3   
   1400044fc:	int3   
   1400044fd:	int3   
   1400044fe:	int3   
   1400044ff:	int3   
   140004500:	rex push rbx
   140004502:	sub    rsp,0x20
   140004506:	mov    rbx,rcx
   140004509:	or     r8d,0x1
   14000450d:	add    rcx,0x10
   140004511:	call   0x1400043f0
   140004516:	xor    r8d,r8d
   140004519:	test   rax,rax
   14000451c:	mov    rax,QWORD PTR [rbx]
   14000451f:	movsxd rcx,DWORD PTR [rax+0x4]
   140004523:	jne    0x140004538
   140004525:	lea    edx,[r8+0x2]
   140004529:	add    rcx,rbx
   14000452c:	add    rsp,0x20
   140004530:	pop    rbx
   140004531:	rex.W jmp QWORD PTR [rip+0x3be8]        # 0x140008120
   140004538:	add    rcx,rbx
   14000453b:	xor    edx,edx
   14000453d:	add    rsp,0x20
   140004541:	pop    rbx
   140004542:	rex.W jmp QWORD PTR [rip+0x3bcf]        # 0x140008118
   140004549:	int3   
   14000454a:	int3   
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	rex push rbx
   140004552:	sub    rsp,0x20
   140004556:	mov    rbx,rcx
   140004559:	or     r8d,0x2
   14000455d:	add    rcx,0x8
   140004561:	call   0x1400043f0
   140004566:	xor    r8d,r8d
   140004569:	test   rax,rax
   14000456c:	mov    rax,QWORD PTR [rbx]
   14000456f:	movsxd rcx,DWORD PTR [rax+0x4]
   140004573:	jne    0x140004588
   140004575:	lea    edx,[r8+0x2]
   140004579:	add    rcx,rbx
   14000457c:	add    rsp,0x20
   140004580:	pop    rbx
   140004581:	rex.W jmp QWORD PTR [rip+0x3b98]        # 0x140008120
   140004588:	add    rcx,rbx
   14000458b:	xor    edx,edx
   14000458d:	add    rsp,0x20
   140004591:	pop    rbx
   140004592:	rex.W jmp QWORD PTR [rip+0x3b7f]        # 0x140008118
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	mov    rax,rsp
   1400045a3:	push   rbp
   1400045a4:	push   rdi
   1400045a5:	push   r12
   1400045a7:	push   r14
   1400045a9:	push   r15
   1400045ab:	mov    rbp,rsp
   1400045ae:	sub    rsp,0x70
   1400045b2:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   1400045ba:	mov    QWORD PTR [rax+0x8],rbx
   1400045be:	mov    QWORD PTR [rax+0x10],rsi
   1400045c2:	mov    r14d,edx
   1400045c5:	mov    rdi,rcx
   1400045c8:	cmp    edx,0xffffffff
   1400045cb:	jne    0x1400045d4
   1400045cd:	xor    eax,eax
   1400045cf:	jmp    0x140004862
   1400045d4:	mov    rax,QWORD PTR [rcx+0x40]
   1400045d8:	mov    rcx,QWORD PTR [rax]
   1400045db:	test   rcx,rcx
   1400045de:	je     0x14000460f
   1400045e0:	mov    rdx,QWORD PTR [rdi+0x58]
   1400045e4:	movsxd r8,DWORD PTR [rdx]
   1400045e7:	lea    rax,[rcx+r8*1]
   1400045eb:	cmp    rcx,rax
   1400045ee:	jae    0x14000460f
   1400045f0:	lea    eax,[r8-0x1]
   1400045f4:	mov    DWORD PTR [rdx],eax
   1400045f6:	mov    rcx,QWORD PTR [rdi+0x40]
   1400045fa:	mov    rdx,QWORD PTR [rcx]
   1400045fd:	lea    rax,[rdx+0x1]
   140004601:	mov    QWORD PTR [rcx],rax
   140004604:	mov    BYTE PTR [rdx],r14b
   140004607:	mov    eax,r14d
   14000460a:	jmp    0x140004862
   14000460f:	cmp    QWORD PTR [rdi+0x90],0x0
   140004617:	jne    0x140004622
   140004619:	or     rax,0xffffffffffffffff
   14000461d:	jmp    0x140004862
   140004622:	mov    rax,QWORD PTR [rdi+0x18]
   140004626:	mov    rcx,QWORD PTR [rax]
   140004629:	lea    rax,[rdi+0x80]
   140004630:	cmp    rcx,rax
   140004633:	jne    0x140004649
   140004635:	mov    rdx,QWORD PTR [rdi+0x68]
   140004639:	mov    r9,QWORD PTR [rdi+0x70]
   14000463d:	mov    r8,rdx
   140004640:	mov    rcx,rdi
   140004643:	call   QWORD PTR [rip+0x3ab7]        # 0x140008100
   140004649:	cmp    QWORD PTR [rdi+0x78],0x0
   14000464e:	jne    0x140004670
   140004650:	movsx  ecx,r14b
   140004654:	mov    rdx,QWORD PTR [rdi+0x90]
   14000465b:	call   QWORD PTR [rip+0x3c07]        # 0x140008268
   140004661:	or     rsi,0xffffffffffffffff
   140004665:	cmp    eax,esi
   140004667:	cmovne esi,r14d
   14000466b:	jmp    0x140004860
   140004670:	mov    BYTE PTR [rbp-0x30],r14b
   140004674:	mov    edx,0xf
   140004679:	mov    QWORD PTR [rbp-0x8],rdx
   14000467d:	mov    BYTE PTR [rbp-0x20],0x0
   140004681:	xor    ecx,ecx
   140004683:	mov    QWORD PTR [rbp-0x20],rcx
   140004687:	mov    QWORD PTR [rbp-0x10],0x8
   14000468f:	lea    rax,[rbp-0x20]
   140004693:	cmp    rdx,0x10
   140004697:	cmovae rax,rcx
   14000469b:	mov    BYTE PTR [rax+0x8],cl
   14000469e:	or     rsi,0xffffffffffffffff
   1400046a2:	xor    r12d,r12d
   1400046a5:	mov    rdx,QWORD PTR [rbp-0x8]
   1400046a9:	mov    r8,QWORD PTR [rbp-0x10]
   1400046ad:	nop    DWORD PTR [rax]
   1400046b0:	lea    rax,[rbp-0x20]
   1400046b4:	cmp    rdx,0x10
   1400046b8:	cmovae rax,QWORD PTR [rbp-0x20]
   1400046bd:	lea    rcx,[rbp-0x20]
   1400046c1:	cmovae rcx,QWORD PTR [rbp-0x20]
   1400046c6:	add    rax,r8
   1400046c9:	lea    rdx,[rbp+0x40]
   1400046cd:	mov    QWORD PTR [rsp+0x38],rdx
   1400046d2:	mov    QWORD PTR [rsp+0x30],rax
   1400046d7:	mov    QWORD PTR [rsp+0x28],rcx
   1400046dc:	lea    rax,[rbp+0x48]
   1400046e0:	mov    QWORD PTR [rsp+0x20],rax
   1400046e5:	lea    r9,[rbp-0x2f]
   1400046e9:	lea    r8,[rbp-0x30]
   1400046ed:	lea    rdx,[rdi+0x84]
   1400046f4:	mov    rcx,QWORD PTR [rdi+0x78]
   1400046f8:	call   QWORD PTR [rip+0x3992]        # 0x140008090
   1400046fe:	test   eax,eax
   140004700:	js     0x14000484d
   140004706:	cmp    eax,0x1
   140004709:	jg     0x140004830
   14000470f:	lea    rax,[rbp-0x20]
   140004713:	mov    r9,QWORD PTR [rbp-0x20]
   140004717:	mov    rdx,QWORD PTR [rbp-0x8]
   14000471b:	cmp    rdx,0x10
   14000471f:	cmovae rax,r9
   140004723:	mov    rbx,QWORD PTR [rbp+0x40]
   140004727:	sub    rbx,rax
   14000472a:	je     0x14000475a
   14000472c:	lea    rcx,[rbp-0x20]
   140004730:	cmp    rdx,0x10
   140004734:	cmovae rcx,r9
   140004738:	mov    r9,QWORD PTR [rdi+0x90]
   14000473f:	mov    r8,rbx
   140004742:	mov    edx,0x1
   140004747:	call   QWORD PTR [rip+0x3b33]        # 0x140008280
   14000474d:	mov    rdx,QWORD PTR [rbp-0x8]
   140004751:	cmp    rbx,rax
   140004754:	jne    0x140004851
   14000475a:	mov    BYTE PTR [rdi+0x81],0x1
   140004761:	lea    rax,[rbp-0x30]
   140004765:	cmp    QWORD PTR [rbp+0x48],rax
   140004769:	jne    0x14000482b
   14000476f:	mov    r8,QWORD PTR [rbp-0x10]
   140004773:	test   rbx,rbx
   140004776:	jne    0x1400046b0
   14000477c:	cmp    r8,0x20
   140004780:	jae    0x140004851
   140004786:	mov    rax,rsi
   140004789:	sub    rax,r8
   14000478c:	cmp    rax,0x8
   140004790:	jbe    0x14000481d
   140004796:	lea    rbx,[r8+0x8]
   14000479a:	cmp    rbx,0xfffffffffffffffe
   14000479e:	ja     0x14000480f
   1400047a0:	cmp    rdx,rbx
   1400047a3:	jae    0x1400047bb
   1400047a5:	mov    rdx,rbx
   1400047a8:	lea    rcx,[rbp-0x20]
   1400047ac:	call   0x140002e10
   1400047b1:	mov    rdx,QWORD PTR [rbp-0x8]
   1400047b5:	mov    r8,QWORD PTR [rbp-0x10]
   1400047b9:	jmp    0x1400047d9
   1400047bb:	test   rbx,rbx
   1400047be:	jne    0x1400047e2
   1400047c0:	mov    QWORD PTR [rbp-0x10],r12
   1400047c4:	lea    rax,[rbp-0x20]
   1400047c8:	cmp    rdx,0x10
   1400047cc:	cmovae rax,QWORD PTR [rbp-0x20]
   1400047d1:	mov    BYTE PTR [rax],r12b
   1400047d4:	jmp    0x1400046a5
   1400047d9:	test   rbx,rbx
   1400047dc:	je     0x1400046b0
   1400047e2:	lea    rax,[rbp-0x20]
   1400047e6:	cmp    rdx,0x10
   1400047ea:	cmovae rax,QWORD PTR [rbp-0x20]
   1400047ef:	xor    ecx,ecx
   1400047f1:	mov    QWORD PTR [r8+rax*1],rcx
   1400047f5:	mov    QWORD PTR [rbp-0x10],rbx
   1400047f9:	lea    rax,[rbp-0x20]
   1400047fd:	cmp    QWORD PTR [rbp-0x8],0x10
   140004802:	cmovae rax,QWORD PTR [rbp-0x20]
   140004807:	mov    BYTE PTR [rbx+rax*1],cl
   14000480a:	jmp    0x1400046a5
   14000480f:	lea    rcx,[rip+0x42ba]        # 0x140008ad0
   140004816:	call   QWORD PTR [rip+0x3844]        # 0x140008060
   14000481c:	int3   
   14000481d:	lea    rcx,[rip+0x42ac]        # 0x140008ad0
   140004824:	call   QWORD PTR [rip+0x3836]        # 0x140008060
   14000482a:	int3   
   14000482b:	mov    esi,r14d
   14000482e:	jmp    0x140004851
   140004830:	cmp    eax,0x3
   140004833:	jne    0x14000484d
   140004835:	movsx  ecx,BYTE PTR [rbp-0x30]
   140004839:	mov    rdx,QWORD PTR [rdi+0x90]
   140004840:	call   QWORD PTR [rip+0x3a22]        # 0x140008268
   140004846:	cmp    eax,0xffffffff
   140004849:	cmovne esi,r14d
   14000484d:	mov    rdx,QWORD PTR [rbp-0x8]
   140004851:	cmp    rdx,0x10
   140004855:	jb     0x140004860
   140004857:	mov    rcx,QWORD PTR [rbp-0x20]
   14000485b:	call   0x1400063aa
   140004860:	mov    eax,esi
   140004862:	lea    r11,[rsp+0x70]
   140004867:	mov    rbx,QWORD PTR [r11+0x30]
   14000486b:	mov    rsi,QWORD PTR [r11+0x38]
   14000486f:	mov    rsp,r11
   140004872:	pop    r15
   140004874:	pop    r14
   140004876:	pop    r12
   140004878:	pop    rdi
   140004879:	pop    rbp
   14000487a:	ret    
   14000487b:	int3   
   14000487c:	int3   
   14000487d:	int3   
   14000487e:	int3   
   14000487f:	int3   
   140004880:	mov    eax,edx
   140004882:	ret    
   140004883:	int3   
   140004884:	int3   
   140004885:	int3   
   140004886:	int3   
   140004887:	int3   
   140004888:	int3   
   140004889:	int3   
   14000488a:	int3   
   14000488b:	int3   
   14000488c:	int3   
   14000488d:	int3   
   14000488e:	int3   
   14000488f:	int3   
   140004890:	mov    QWORD PTR [rsp+0x8],rbx
   140004895:	push   rdi
   140004896:	sub    rsp,0x20
   14000489a:	mov    rax,QWORD PTR [rcx+0x38]
   14000489e:	mov    rdi,rcx
   1400048a1:	mov    ebx,edx
   1400048a3:	mov    rcx,QWORD PTR [rax]
   1400048a6:	test   rcx,rcx
   1400048a9:	je     0x1400048e1
   1400048ab:	mov    rax,QWORD PTR [rdi+0x18]
   1400048af:	cmp    QWORD PTR [rax],rcx
   1400048b2:	jae    0x1400048e1
   1400048b4:	cmp    edx,0xffffffff
   1400048b7:	je     0x1400048c1
   1400048b9:	movzx  eax,BYTE PTR [rcx-0x1]
   1400048bd:	cmp    eax,edx
   1400048bf:	jne    0x1400048e1
   1400048c1:	mov    rax,QWORD PTR [rdi+0x50]
   1400048c5:	inc    DWORD PTR [rax]
   1400048c7:	mov    rax,QWORD PTR [rdi+0x38]
   1400048cb:	dec    QWORD PTR [rax]
   1400048ce:	xor    eax,eax
   1400048d0:	cmp    edx,0xffffffff
   1400048d3:	cmovne eax,edx
   1400048d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400048db:	add    rsp,0x20
   1400048df:	pop    rdi
   1400048e0:	ret    
   1400048e1:	mov    rdx,QWORD PTR [rdi+0x90]
   1400048e8:	test   rdx,rdx
   1400048eb:	je     0x14000492e
   1400048ed:	cmp    ebx,0xffffffff
   1400048f0:	je     0x14000492e
   1400048f2:	cmp    QWORD PTR [rdi+0x78],0x0
   1400048f7:	jne    0x140004907
   1400048f9:	movzx  ecx,bl
   1400048fc:	call   QWORD PTR [rip+0x398e]        # 0x140008290
   140004902:	cmp    eax,0xffffffff
   140004905:	jne    0x140004921
   140004907:	mov    rax,QWORD PTR [rdi+0x38]
   14000490b:	lea    rcx,[rdi+0x80]
   140004912:	cmp    QWORD PTR [rax],rcx
   140004915:	je     0x14000492e
   140004917:	mov    BYTE PTR [rcx],bl
   140004919:	mov    rcx,rdi
   14000491c:	call   0x140003480
   140004921:	mov    eax,ebx
   140004923:	mov    rbx,QWORD PTR [rsp+0x30]
   140004928:	add    rsp,0x20
   14000492c:	pop    rdi
   14000492d:	ret    
   14000492e:	or     eax,0xffffffff
   140004931:	mov    rbx,QWORD PTR [rsp+0x30]
   140004936:	add    rsp,0x20
   14000493a:	pop    rdi
   14000493b:	ret    
   14000493c:	int3   
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	lea    rax,[rcx+0x10]
   140004944:	ret    
   140004945:	int3   
   140004946:	int3   
   140004947:	int3   
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	mov    rax,rsp
   140004953:	mov    QWORD PTR [rax+0x8],rcx
   140004957:	push   rdi
   140004958:	push   r14
   14000495a:	push   r15
   14000495c:	sub    rsp,0x4b0
   140004963:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14000496c:	mov    QWORD PTR [rax+0x10],rbx
   140004970:	mov    QWORD PTR [rax+0x18],rsi
   140004974:	mov    rbx,r8
   140004977:	mov    rdi,rdx
   14000497a:	mov    rsi,rcx
   14000497d:	call   QWORD PTR [rip+0x3685]        # 0x140008008
   140004983:	mov    rcx,rax
   140004986:	mov    edx,0x40
   14000498b:	call   QWORD PTR [rip+0x368f]        # 0x140008020
   140004991:	call   QWORD PTR [rip+0x3679]        # 0x140008010
   140004997:	mov    rcx,rax
   14000499a:	mov    edx,0xfffffff1
   14000499f:	call   QWORD PTR [rip+0x3673]        # 0x140008018
   1400049a5:	call   QWORD PTR [rip+0x3665]        # 0x140008010
   1400049ab:	mov    rcx,rax
   1400049ae:	mov    edx,0x10000
   1400049b3:	call   QWORD PTR [rip+0x365f]        # 0x140008018
   1400049b9:	cmp    QWORD PTR [rdi+0x18],0x10
   1400049be:	jb     0x1400049c5
   1400049c0:	mov    rdx,QWORD PTR [rdi]
   1400049c3:	jmp    0x1400049c8
   1400049c5:	mov    rdx,rdi
   1400049c8:	mov    DWORD PTR [rsp+0x20],0x1
   1400049d0:	mov    r9d,0x40
   1400049d6:	lea    r8d,[r9-0x3f]
   1400049da:	lea    rcx,[rsp+0x1b0]
   1400049e2:	call   0x140001e70
   1400049e7:	nop
   1400049e8:	cmp    QWORD PTR [rsp+0x250],0x0
   1400049f1:	jne    0x140004a8d
   1400049f7:	lea    rdx,[rip+0x406a]        # 0x140008a68
   1400049fe:	mov    rcx,QWORD PTR [rip+0x3813]        # 0x140008218
   140004a05:	call   0x140001430
   140004a0a:	mov    rcx,rax
   140004a0d:	mov    rdx,rdi
   140004a10:	call   0x1400010a0
   140004a15:	mov    rcx,rax
   140004a18:	lea    rdx,[rip+0xffffffffffffcfc1]        # 0x1400019e0
   140004a1f:	call   QWORD PTR [rip+0x3723]        # 0x140008148
   140004a25:	nop
   140004a26:	mov    rax,QWORD PTR [rsp+0x1b0]
   140004a2e:	movsxd rcx,DWORD PTR [rax+0x4]
   140004a32:	lea    r14,[rip+0x401f]        # 0x140008a58
   140004a39:	mov    QWORD PTR [rsp+rcx*1+0x1b0],r14
   140004a41:	mov    rax,QWORD PTR [rsp+0x1b0]
   140004a49:	movsxd rcx,DWORD PTR [rax+0x4]
   140004a4d:	lea    edx,[rcx-0xb0]
   140004a53:	mov    rax,rcx
   140004a56:	mov    DWORD PTR [rsp+rcx*1+0x1ac],edx
   140004a5d:	lea    rcx,[rsp+0x1c0]
   140004a65:	call   0x1400023d0
   140004a6a:	lea    rcx,[rsp+0x1c8]
   140004a72:	call   QWORD PTR [rip+0x3700]        # 0x140008178
   140004a78:	lea    rcx,[rsp+0x260]
   140004a80:	call   QWORD PTR [rip+0x368a]        # 0x140008110
   140004a86:	xor    al,al
   140004a88:	jmp    0x140004f7c
   140004a8d:	lea    rcx,[rsp+0x3d0]
   140004a95:	call   QWORD PTR [rip+0x3625]        # 0x1400080c0
   140004a9b:	lea    rax,[rip+0x3eb6]        # 0x140008958
   140004aa2:	mov    QWORD PTR [rsp+0x3d0],rax
   140004aaa:	mov    r9d,0x1
   140004ab0:	xor    r8d,r8d
   140004ab3:	lea    rdx,[rsp+0x3d0]
   140004abb:	lea    rcx,[rsp+0x440]
   140004ac3:	call   QWORD PTR [rip+0x3667]        # 0x140008130
   140004ac9:	nop
   140004aca:	mov    edx,0x1
   140004acf:	lea    rcx,[rsp+0x2c0]
   140004ad7:	call   0x140001fb0
   140004adc:	nop
   140004add:	cmp    QWORD PTR [rbx+0x10],0x0
   140004ae2:	je     0x140004b38
   140004ae4:	cmp    QWORD PTR [rbx+0x18],0x10
   140004ae9:	jb     0x140004aee
   140004aeb:	mov    rbx,QWORD PTR [rbx]
   140004aee:	mov    r9d,0x40
   140004af4:	lea    r8d,[r9-0x3e]
   140004af8:	mov    rdx,rbx
   140004afb:	lea    rcx,[rsp+0x2c8]
   140004b03:	call   0x1400043f0
   140004b08:	xor    r8d,r8d
   140004b0b:	test   rax,rax
   140004b0e:	mov    rax,QWORD PTR [rsp+0x2c0]
   140004b16:	movsxd rcx,DWORD PTR [rax+0x4]
   140004b1a:	lea    rcx,[rsp+rcx*1+0x2c0]
   140004b22:	jne    0x140004b30
   140004b24:	lea    edx,[r8+0x2]
   140004b28:	call   QWORD PTR [rip+0x35f2]        # 0x140008120
   140004b2e:	jmp    0x140004b38
   140004b30:	xor    edx,edx
   140004b32:	call   QWORD PTR [rip+0x35e0]        # 0x140008118
   140004b38:	mov    QWORD PTR [rsp+0x48],0xf
   140004b41:	xor    edi,edi
   140004b43:	mov    QWORD PTR [rsp+0x40],rdi
   140004b48:	mov    BYTE PTR [rsp+0x30],dil
   140004b4d:	lea    r15,[rip+0x3e84]        # 0x1400089d8
   140004b54:	lea    r14,[rip+0x3efd]        # 0x140008a58
   140004b5b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004b60:	mov    rax,QWORD PTR [rsp+0x1b0]
   140004b68:	movsxd rcx,DWORD PTR [rax+0x4]
   140004b6c:	lea    rax,[rsp+0x1b0]
   140004b74:	add    rcx,rax
   140004b77:	mov    dl,0xa
   140004b79:	call   QWORD PTR [rip+0x35a9]        # 0x140008128
   140004b7f:	movzx  r8d,al
   140004b83:	lea    rdx,[rsp+0x30]
   140004b88:	lea    rcx,[rsp+0x1b0]
   140004b90:	call   0x140001a40
   140004b95:	mov    rcx,QWORD PTR [rax]
   140004b98:	movsxd rdx,DWORD PTR [rcx+0x4]
   140004b9c:	test   BYTE PTR [rdx+rax*1+0x10],0x6
   140004ba1:	jne    0x140004e72
   140004ba7:	cmp    QWORD PTR [rsp+0x40],0x0
   140004bad:	je     0x140004b60
   140004baf:	lea    rdx,[rsp+0x30]
   140004bb4:	cmp    QWORD PTR [rsp+0x48],0x10
   140004bba:	cmovae rdx,QWORD PTR [rsp+0x30]
   140004bc0:	mov    DWORD PTR [rsp+0x20],0x1
   140004bc8:	mov    r9d,0x40
   140004bce:	lea    r8d,[r9-0x1f]
   140004bd2:	lea    rcx,[rsp+0xa0]
   140004bda:	call   0x140001e70
   140004bdf:	nop
   140004be0:	cmp    QWORD PTR [rsp+0x140],0x0
   140004be9:	jne    0x140004d4a
   140004bef:	cmp    QWORD PTR [rsi+0x10],0x0
   140004bf4:	je     0x140004d03
   140004bfa:	lea    r8,[rip+0x38af]        # 0x1400084b0
   140004c01:	mov    rdx,rsi
   140004c04:	lea    rcx,[rsp+0x80]
   140004c0c:	call   0x140001730
   140004c11:	nop
   140004c12:	lea    r8,[rsp+0x30]
   140004c17:	mov    rdx,rax
   140004c1a:	lea    rcx,[rsp+0x50]
   140004c1f:	call   0x140001630
   140004c24:	mov    rbx,rax
   140004c27:	lea    rax,[rsp+0x30]
   140004c2c:	cmp    rax,rbx
   140004c2f:	je     0x140004c63
   140004c31:	cmp    QWORD PTR [rsp+0x48],0x10
   140004c37:	jb     0x140004c43
   140004c39:	mov    rcx,QWORD PTR [rsp+0x30]
   140004c3e:	call   0x1400063aa
   140004c43:	mov    QWORD PTR [rsp+0x48],0xf
   140004c4c:	mov    QWORD PTR [rsp+0x40],rdi
   140004c51:	mov    BYTE PTR [rsp+0x30],0x0
   140004c56:	mov    rdx,rbx
   140004c59:	lea    rcx,[rsp+0x30]
   140004c5e:	call   0x140002c40
   140004c63:	cmp    QWORD PTR [rsp+0x68],0x10
   140004c69:	jb     0x140004c75
   140004c6b:	mov    rcx,QWORD PTR [rsp+0x50]
   140004c70:	call   0x1400063aa
   140004c75:	mov    QWORD PTR [rsp+0x68],0xf
   140004c7e:	mov    QWORD PTR [rsp+0x60],rdi
   140004c83:	mov    BYTE PTR [rsp+0x50],0x0
   140004c88:	cmp    QWORD PTR [rsp+0x98],0x10
   140004c91:	jb     0x140004ca0
   140004c93:	mov    rcx,QWORD PTR [rsp+0x80]
   140004c9b:	call   0x1400063aa
   140004ca0:	lea    rdx,[rsp+0x30]
   140004ca5:	cmp    QWORD PTR [rsp+0x48],0x10
   140004cab:	cmovae rdx,QWORD PTR [rsp+0x30]
   140004cb1:	mov    r9d,0x40
   140004cb7:	lea    r8d,[r9-0x1f]
   140004cbb:	lea    rcx,[rsp+0xb0]
   140004cc3:	call   0x1400043f0
   140004cc8:	xor    r8d,r8d
   140004ccb:	test   rax,rax
   140004cce:	mov    rax,QWORD PTR [rsp+0xa0]
   140004cd6:	movsxd rcx,DWORD PTR [rax+0x4]
   140004cda:	lea    rcx,[rsp+rcx*1+0xa0]
   140004ce2:	jne    0x140004cf0
   140004ce4:	lea    edx,[r8+0x2]
   140004ce8:	call   QWORD PTR [rip+0x3432]        # 0x140008120
   140004cee:	jmp    0x140004cf8
   140004cf0:	xor    edx,edx
   140004cf2:	call   QWORD PTR [rip+0x3420]        # 0x140008118
   140004cf8:	cmp    QWORD PTR [rsp+0x140],0x0
   140004d01:	jne    0x140004d4a
   140004d03:	lea    rdx,[rip+0x3d5e]        # 0x140008a68
   140004d0a:	lea    rcx,[rsp+0x2c0]
   140004d12:	call   0x140001430
   140004d17:	mov    dl,0x22
   140004d19:	mov    rcx,rax
   140004d1c:	call   0x140001270
   140004d21:	lea    rdx,[rsp+0x30]
   140004d26:	mov    rcx,rax
   140004d29:	call   0x1400010a0
   140004d2e:	mov    dl,0x22
   140004d30:	mov    rcx,rax
   140004d33:	call   0x140001270
   140004d38:	lea    rdx,[rip+0xffffffffffffcca1]        # 0x1400019e0
   140004d3f:	mov    rcx,rax
   140004d42:	call   QWORD PTR [rip+0x3400]        # 0x140008148
   140004d48:	jmp    0x140004da6
   140004d4a:	lea    rdx,[rip+0x3d3f]        # 0x140008a90
   140004d51:	lea    rcx,[rsp+0x2c0]
   140004d59:	call   0x140001430
   140004d5e:	mov    dl,0x22
   140004d60:	mov    rcx,rax
   140004d63:	call   0x140001270
   140004d68:	lea    rdx,[rsp+0x30]
   140004d6d:	mov    rcx,rax
   140004d70:	call   0x1400010a0
   140004d75:	mov    dl,0x22
   140004d77:	mov    rcx,rax
   140004d7a:	call   0x140001270
   140004d7f:	lea    rdx,[rip+0xffffffffffffcc5a]        # 0x1400019e0
   140004d86:	mov    rcx,rax
   140004d89:	call   QWORD PTR [rip+0x33b9]        # 0x140008148
   140004d8f:	lea    rdx,[rsp+0xb0]
   140004d97:	lea    rcx,[rsp+0x440]
   140004d9f:	call   QWORD PTR [rip+0x33ab]        # 0x140008150
   140004da5:	nop
   140004da6:	mov    rax,QWORD PTR [rsp+0xa0]
   140004dae:	movsxd rcx,DWORD PTR [rax+0x4]
   140004db2:	mov    QWORD PTR [rsp+rcx*1+0xa0],r14
   140004dba:	mov    rax,QWORD PTR [rsp+0xa0]
   140004dc2:	movsxd rcx,DWORD PTR [rax+0x4]
   140004dc6:	lea    edx,[rcx-0xb0]
   140004dcc:	mov    DWORD PTR [rsp+rcx*1+0x9c],edx
   140004dd3:	mov    QWORD PTR [rsp+0xb0],r15
   140004ddb:	cmp    QWORD PTR [rsp+0x140],0x0
   140004de4:	je     0x140004e1c
   140004de6:	mov    rax,QWORD PTR [rsp+0xc8]
   140004dee:	lea    rcx,[rsp+0x130]
   140004df6:	cmp    QWORD PTR [rax],rcx
   140004df9:	jne    0x140004e1c
   140004dfb:	mov    r9,QWORD PTR [rsp+0x120]
   140004e03:	mov    rdx,QWORD PTR [rsp+0x118]
   140004e0b:	mov    r8,rdx
   140004e0e:	lea    rcx,[rsp+0xb0]
   140004e16:	call   QWORD PTR [rip+0x32e4]        # 0x140008100
   140004e1c:	cmp    BYTE PTR [rsp+0x138],0x0
   140004e24:	je     0x140004e33
   140004e26:	lea    rcx,[rsp+0xb0]
   140004e2e:	call   0x140003e40
   140004e33:	lea    rcx,[rsp+0xb0]
   140004e3b:	call   QWORD PTR [rip+0x3287]        # 0x1400080c8
   140004e41:	lea    rcx,[rsp+0xb8]
   140004e49:	call   QWORD PTR [rip+0x3329]        # 0x140008178
   140004e4f:	lea    rcx,[rsp+0x150]
   140004e57:	call   QWORD PTR [rip+0x32b3]        # 0x140008110
   140004e5d:	nop
   140004e5e:	jmp    0x140004b60
   140004e63:	xor    edi,edi
   140004e65:	mov    rsi,QWORD PTR [rsp+0x4d0]
   140004e6d:	jmp    0x140004b4d
   140004e72:	cmp    QWORD PTR [rsp+0x48],0x10
   140004e78:	jb     0x140004e84
   140004e7a:	mov    rcx,QWORD PTR [rsp+0x30]
   140004e7f:	call   0x1400063aa
   140004e84:	mov    QWORD PTR [rsp+0x48],0xf
   140004e8d:	mov    QWORD PTR [rsp+0x40],rdi
   140004e92:	mov    BYTE PTR [rsp+0x30],0x0
   140004e97:	mov    rax,QWORD PTR [rsp+0x2c0]
   140004e9f:	movsxd rcx,DWORD PTR [rax+0x4]
   140004ea3:	lea    rax,[rip+0x3bd6]        # 0x140008a80
   140004eaa:	mov    QWORD PTR [rsp+rcx*1+0x2c0],rax
   140004eb2:	mov    rax,QWORD PTR [rsp+0x2c0]
   140004eba:	movsxd rcx,DWORD PTR [rax+0x4]
   140004ebe:	lea    edx,[rcx-0xa8]
   140004ec4:	mov    DWORD PTR [rsp+rcx*1+0x2bc],edx
   140004ecb:	lea    rcx,[rsp+0x2c8]
   140004ed3:	call   0x1400023d0
   140004ed8:	lea    rcx,[rsp+0x2d0]
   140004ee0:	call   QWORD PTR [rip+0x3252]        # 0x140008138
   140004ee6:	lea    rcx,[rsp+0x368]
   140004eee:	call   QWORD PTR [rip+0x321c]        # 0x140008110
   140004ef4:	nop
   140004ef5:	lea    rcx,[rsp+0x450]
   140004efd:	call   QWORD PTR [rip+0x3235]        # 0x140008138
   140004f03:	lea    rcx,[rsp+0x450]
   140004f0b:	call   QWORD PTR [rip+0x31ff]        # 0x140008110
   140004f11:	nop
   140004f12:	lea    rcx,[rsp+0x3d0]
   140004f1a:	call   QWORD PTR [rip+0x31a8]        # 0x1400080c8
   140004f20:	nop
   140004f21:	mov    rax,QWORD PTR [rsp+0x1b0]
   140004f29:	movsxd rcx,DWORD PTR [rax+0x4]
   140004f2d:	mov    QWORD PTR [rsp+rcx*1+0x1b0],r14
   140004f35:	mov    rax,QWORD PTR [rsp+0x1b0]
   140004f3d:	movsxd rcx,DWORD PTR [rax+0x4]
   140004f41:	lea    edx,[rcx-0xb0]
   140004f47:	mov    rax,rcx
   140004f4a:	mov    DWORD PTR [rsp+rcx*1+0x1ac],edx
   140004f51:	lea    rcx,[rsp+0x1c0]
   140004f59:	call   0x1400023d0
   140004f5e:	lea    rcx,[rsp+0x1c8]
   140004f66:	call   QWORD PTR [rip+0x320c]        # 0x140008178
   140004f6c:	lea    rcx,[rsp+0x260]
   140004f74:	call   QWORD PTR [rip+0x3196]        # 0x140008110
   140004f7a:	mov    al,0x1
   140004f7c:	lea    r11,[rsp+0x4b0]
   140004f84:	mov    rbx,QWORD PTR [r11+0x28]
   140004f88:	mov    rsi,QWORD PTR [r11+0x30]
   140004f8c:	mov    rsp,r11
   140004f8f:	pop    r15
   140004f91:	pop    r14
   140004f93:	pop    rdi
   140004f94:	ret    
   140004f95:	int3   
   140004f96:	int3   
   140004f97:	int3   
   140004f98:	int3   
   140004f99:	int3   
   140004f9a:	int3   
   140004f9b:	int3   
   140004f9c:	int3   
   140004f9d:	int3   
   140004f9e:	int3   
   140004f9f:	int3   
   140004fa0:	rex push rbx
   140004fa2:	sub    rsp,0x30
   140004fa6:	mov    rax,QWORD PTR [rsp+0x60]
   140004fab:	mov    rbx,rcx
   140004fae:	cmp    r9,rax
   140004fb1:	jne    0x140004ff0
   140004fb3:	cmp    QWORD PTR [rcx+0x18],0x10
   140004fb8:	jb     0x140004fbf
   140004fba:	mov    rax,QWORD PTR [rcx]
   140004fbd:	jmp    0x140004fc2
   140004fbf:	mov    rax,rcx
   140004fc2:	xor    ecx,ecx
   140004fc4:	test   r8,r8
   140004fc7:	jne    0x140004fce
   140004fc9:	mov    r8d,ecx
   140004fcc:	jmp    0x140004fd1
   140004fce:	sub    r8,rdx
   140004fd1:	test   rdx,rdx
   140004fd4:	je     0x140004fdc
   140004fd6:	mov    rcx,rdx
   140004fd9:	sub    rcx,rax
   140004fdc:	mov    rdx,rcx
   140004fdf:	mov    rcx,rbx
   140004fe2:	call   0x140004020
   140004fe7:	mov    rax,rbx
   140004fea:	add    rsp,0x30
   140004fee:	pop    rbx
   140004fef:	ret    
   140004ff0:	cmp    QWORD PTR [rcx+0x18],0x10
   140004ff5:	jb     0x140004ffc
   140004ff7:	mov    r10,QWORD PTR [rcx]
   140004ffa:	jmp    0x140004fff
   140004ffc:	mov    r10,rcx
   140004fff:	xor    ecx,ecx
   140005001:	test   r8,r8
   140005004:	jne    0x14000500b
   140005006:	mov    r8d,ecx
   140005009:	jmp    0x14000500e
   14000500b:	sub    r8,rdx
   14000500e:	test   rdx,rdx
   140005011:	je     0x140005019
   140005013:	mov    rcx,rdx
   140005016:	sub    rcx,r10
   140005019:	sub    rax,r9
   14000501c:	mov    rdx,rcx
   14000501f:	mov    rcx,rbx
   140005022:	mov    QWORD PTR [rsp+0x20],rax
   140005027:	call   0x1400053c0
   14000502c:	mov    rax,rbx
   14000502f:	add    rsp,0x30
   140005033:	pop    rbx
   140005034:	ret    
   140005035:	int3   
   140005036:	int3   
   140005037:	int3   
   140005038:	int3   
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	int3   
   14000503d:	int3   
   14000503e:	int3   
   14000503f:	int3   
   140005040:	rex push rbx
   140005042:	push   rbp
   140005043:	push   rsi
   140005044:	push   r12
   140005046:	push   r15
   140005048:	sub    rsp,0x20
   14000504c:	mov    rbx,rcx
   14000504f:	mov    rcx,QWORD PTR [rcx+0x10]
   140005053:	mov    r15,r9
   140005056:	mov    rbp,r8
   140005059:	mov    rsi,rdx
   14000505c:	cmp    rcx,rdx
   14000505f:	jb     0x1400053ab
   140005065:	mov    rax,QWORD PTR [r9+0x10]
   140005069:	mov    r12,QWORD PTR [rsp+0x70]
   14000506e:	cmp    rax,r12
   140005071:	jb     0x1400053ab
   140005077:	mov    QWORD PTR [rsp+0x50],rdi
   14000507c:	mov    rdi,QWORD PTR [rsp+0x78]
   140005081:	mov    QWORD PTR [rsp+0x60],r14
   140005086:	mov    r14,rcx
   140005089:	sub    r14,rdx
   14000508c:	mov    rdx,rcx
   14000508f:	cmp    r14,r8
   140005092:	cmovb  rbp,r14
   140005096:	sub    rax,r12
   140005099:	cmp    rax,rdi
   14000509c:	cmovb  rdi,rax
   1400050a0:	or     rax,0xffffffffffffffff
   1400050a4:	sub    rdx,rbp
   1400050a7:	sub    rax,rdi
   1400050aa:	cmp    rax,rdx
   1400050ad:	ja     0x1400050bd
   1400050af:	lea    rcx,[rip+0x3a1a]        # 0x140008ad0
   1400050b6:	call   QWORD PTR [rip+0x2fa4]        # 0x140008060
   1400050bc:	int3   
   1400050bd:	mov    QWORD PTR [rsp+0x58],r13
   1400050c2:	lea    r13,[rdx+rdi*1]
   1400050c6:	sub    r14,rbp
   1400050c9:	cmp    rcx,r13
   1400050cc:	jae    0x1400050dc
   1400050ce:	xor    r8d,r8d
   1400050d1:	mov    rdx,r13
   1400050d4:	mov    rcx,rbx
   1400050d7:	call   0x140003220
   1400050dc:	cmp    rbx,r15
   1400050df:	je     0x140005154
   1400050e1:	mov    rax,QWORD PTR [rbx+0x18]
   1400050e5:	cmp    rax,0x10
   1400050e9:	jb     0x1400050f0
   1400050eb:	mov    rcx,QWORD PTR [rbx]
   1400050ee:	jmp    0x1400050f3
   1400050f0:	mov    rcx,rbx
   1400050f3:	cmp    rax,0x10
   1400050f7:	jb     0x1400050fe
   1400050f9:	mov    rax,QWORD PTR [rbx]
   1400050fc:	jmp    0x140005101
   1400050fe:	mov    rax,rbx
   140005101:	test   r14,r14
   140005104:	je     0x14000511d
   140005106:	lea    rdx,[rcx+rsi*1]
   14000510a:	lea    rcx,[rax+rsi*1]
   14000510e:	mov    r8,r14
   140005111:	add    rcx,rdi
   140005114:	add    rdx,rbp
   140005117:	call   QWORD PTR [rip+0x319b]        # 0x1400082b8
   14000511d:	cmp    QWORD PTR [r15+0x18],0x10
   140005122:	jb     0x140005127
   140005124:	mov    r15,QWORD PTR [r15]
   140005127:	cmp    QWORD PTR [rbx+0x18],0x10
   14000512c:	jb     0x140005133
   14000512e:	mov    rax,QWORD PTR [rbx]
   140005131:	jmp    0x140005136
   140005133:	mov    rax,rbx
   140005136:	test   rdi,rdi
   140005139:	je     0x140005375
   14000513f:	lea    rdx,[r15+r12*1]
   140005143:	lea    rcx,[rax+rsi*1]
   140005147:	mov    r8,rdi
   14000514a:	call   0x14000654c
   14000514f:	jmp    0x140005375
   140005154:	cmp    rdi,rbp
   140005157:	ja     0x1400051ce
   140005159:	mov    rax,QWORD PTR [rbx+0x18]
   14000515d:	cmp    rax,0x10
   140005161:	jb     0x140005168
   140005163:	mov    rcx,QWORD PTR [rbx]
   140005166:	jmp    0x14000516b
   140005168:	mov    rcx,rbx
   14000516b:	cmp    rax,0x10
   14000516f:	jb     0x140005176
   140005171:	mov    rax,QWORD PTR [rbx]
   140005174:	jmp    0x140005179
   140005176:	mov    rax,rbx
   140005179:	test   rdi,rdi
   14000517c:	je     0x14000518f
   14000517e:	lea    rdx,[rcx+r12*1]
   140005182:	lea    rcx,[rax+rsi*1]
   140005186:	mov    r8,rdi
   140005189:	call   QWORD PTR [rip+0x3129]        # 0x1400082b8
   14000518f:	mov    rax,QWORD PTR [rbx+0x18]
   140005193:	cmp    rax,0x10
   140005197:	jb     0x14000519e
   140005199:	mov    rcx,QWORD PTR [rbx]
   14000519c:	jmp    0x1400051a1
   14000519e:	mov    rcx,rbx
   1400051a1:	cmp    rax,0x10
   1400051a5:	jb     0x1400051ac
   1400051a7:	mov    rax,QWORD PTR [rbx]
   1400051aa:	jmp    0x1400051af
   1400051ac:	mov    rax,rbx
   1400051af:	test   r14,r14
   1400051b2:	je     0x140005375
   1400051b8:	lea    rdx,[rcx+rsi*1]
   1400051bc:	lea    rcx,[rax+rsi*1]
   1400051c0:	mov    r8,r14
   1400051c3:	add    rdx,rbp
   1400051c6:	add    rcx,rdi
   1400051c9:	jmp    0x14000536f
   1400051ce:	cmp    r12,rsi
   1400051d1:	ja     0x140005248
   1400051d3:	mov    rax,QWORD PTR [rbx+0x18]
   1400051d7:	cmp    rax,0x10
   1400051db:	jb     0x1400051e2
   1400051dd:	mov    rcx,QWORD PTR [rbx]
   1400051e0:	jmp    0x1400051e5
   1400051e2:	mov    rcx,rbx
   1400051e5:	cmp    rax,0x10
   1400051e9:	jb     0x1400051f0
   1400051eb:	mov    rax,QWORD PTR [rbx]
   1400051ee:	jmp    0x1400051f3
   1400051f0:	mov    rax,rbx
   1400051f3:	test   r14,r14
   1400051f6:	je     0x14000520f
   1400051f8:	lea    rdx,[rcx+rsi*1]
   1400051fc:	lea    rcx,[rax+rsi*1]
   140005200:	mov    r8,r14
   140005203:	add    rcx,rdi
   140005206:	add    rdx,rbp
   140005209:	call   QWORD PTR [rip+0x30a9]        # 0x1400082b8
   14000520f:	mov    rax,QWORD PTR [rbx+0x18]
   140005213:	cmp    rax,0x10
   140005217:	jb     0x14000521e
   140005219:	mov    rcx,QWORD PTR [rbx]
   14000521c:	jmp    0x140005221
   14000521e:	mov    rcx,rbx
   140005221:	cmp    rax,0x10
   140005225:	jb     0x14000522c
   140005227:	mov    rax,QWORD PTR [rbx]
   14000522a:	jmp    0x14000522f
   14000522c:	mov    rax,rbx
   14000522f:	test   rdi,rdi
   140005232:	je     0x140005375
   140005238:	lea    rdx,[rcx+r12*1]
   14000523c:	mov    r8,rdi
   14000523f:	lea    rcx,[rax+rsi*1]
   140005243:	jmp    0x14000536f
   140005248:	lea    rax,[rsi+rbp*1]
   14000524c:	cmp    rax,r12
   14000524f:	mov    rax,QWORD PTR [rbx+0x18]
   140005253:	ja     0x1400052cb
   140005255:	cmp    rax,0x10
   140005259:	jb     0x140005260
   14000525b:	mov    rcx,QWORD PTR [rbx]
   14000525e:	jmp    0x140005263
   140005260:	mov    rcx,rbx
   140005263:	cmp    rax,0x10
   140005267:	jb     0x14000526e
   140005269:	mov    rax,QWORD PTR [rbx]
   14000526c:	jmp    0x140005271
   14000526e:	mov    rax,rbx
   140005271:	test   r14,r14
   140005274:	je     0x14000528d
   140005276:	lea    rdx,[rcx+rsi*1]
   14000527a:	lea    rcx,[rax+rsi*1]
   14000527e:	mov    r8,r14
   140005281:	add    rcx,rdi
   140005284:	add    rdx,rbp
   140005287:	call   QWORD PTR [rip+0x302b]        # 0x1400082b8
   14000528d:	mov    rax,QWORD PTR [rbx+0x18]
   140005291:	cmp    rax,0x10
   140005295:	jb     0x14000529c
   140005297:	mov    rdx,QWORD PTR [rbx]
   14000529a:	jmp    0x14000529f
   14000529c:	mov    rdx,rbx
   14000529f:	cmp    rax,0x10
   1400052a3:	jb     0x1400052aa
   1400052a5:	mov    rax,QWORD PTR [rbx]
   1400052a8:	jmp    0x1400052ad
   1400052aa:	mov    rax,rbx
   1400052ad:	test   rdi,rdi
   1400052b0:	je     0x140005375
   1400052b6:	sub    rdx,rbp
   1400052b9:	lea    rcx,[rax+rsi*1]
   1400052bd:	mov    r8,rdi
   1400052c0:	add    rdx,r12
   1400052c3:	add    rdx,rdi
   1400052c6:	jmp    0x14000536f
   1400052cb:	cmp    rax,0x10
   1400052cf:	jb     0x1400052d6
   1400052d1:	mov    rcx,QWORD PTR [rbx]
   1400052d4:	jmp    0x1400052d9
   1400052d6:	mov    rcx,rbx
   1400052d9:	cmp    rax,0x10
   1400052dd:	jb     0x1400052e4
   1400052df:	mov    rax,QWORD PTR [rbx]
   1400052e2:	jmp    0x1400052e7
   1400052e4:	mov    rax,rbx
   1400052e7:	test   rbp,rbp
   1400052ea:	je     0x1400052fd
   1400052ec:	lea    rdx,[rcx+r12*1]
   1400052f0:	lea    rcx,[rax+rsi*1]
   1400052f4:	mov    r8,rbp
   1400052f7:	call   QWORD PTR [rip+0x2fbb]        # 0x1400082b8
   1400052fd:	mov    rax,QWORD PTR [rbx+0x18]
   140005301:	cmp    rax,0x10
   140005305:	jb     0x14000530c
   140005307:	mov    rcx,QWORD PTR [rbx]
   14000530a:	jmp    0x14000530f
   14000530c:	mov    rcx,rbx
   14000530f:	cmp    rax,0x10
   140005313:	jb     0x14000531a
   140005315:	mov    rax,QWORD PTR [rbx]
   140005318:	jmp    0x14000531d
   14000531a:	mov    rax,rbx
   14000531d:	test   r14,r14
   140005320:	je     0x140005339
   140005322:	lea    rdx,[rcx+rsi*1]
   140005326:	lea    rcx,[rax+rsi*1]
   14000532a:	mov    r8,r14
   14000532d:	add    rcx,rdi
   140005330:	add    rdx,rbp
   140005333:	call   QWORD PTR [rip+0x2f7f]        # 0x1400082b8
   140005339:	mov    rax,QWORD PTR [rbx+0x18]
   14000533d:	cmp    rax,0x10
   140005341:	jb     0x140005348
   140005343:	mov    rcx,QWORD PTR [rbx]
   140005346:	jmp    0x14000534b
   140005348:	mov    rcx,rbx
   14000534b:	cmp    rax,0x10
   14000534f:	jb     0x140005356
   140005351:	mov    rax,QWORD PTR [rbx]
   140005354:	jmp    0x140005359
   140005356:	mov    rax,rbx
   140005359:	mov    r8,rdi
   14000535c:	sub    r8,rbp
   14000535f:	je     0x140005375
   140005361:	lea    rdx,[rcx+r12*1]
   140005365:	lea    rcx,[rax+rsi*1]
   140005369:	add    rdx,rdi
   14000536c:	add    rcx,rbp
   14000536f:	call   QWORD PTR [rip+0x2f43]        # 0x1400082b8
   140005375:	cmp    QWORD PTR [rbx+0x18],0x10
   14000537a:	mov    QWORD PTR [rbx+0x10],r13
   14000537e:	jb     0x140005385
   140005380:	mov    rax,QWORD PTR [rbx]
   140005383:	jmp    0x140005388
   140005385:	mov    rax,rbx
   140005388:	mov    rdi,QWORD PTR [rsp+0x50]
   14000538d:	mov    r14,QWORD PTR [rsp+0x60]
   140005392:	mov    BYTE PTR [rax+r13*1],0x0
   140005397:	mov    r13,QWORD PTR [rsp+0x58]
   14000539c:	mov    rax,rbx
   14000539f:	add    rsp,0x20
   1400053a3:	pop    r15
   1400053a5:	pop    r12
   1400053a7:	pop    rsi
   1400053a8:	pop    rbp
   1400053a9:	pop    rbx
   1400053aa:	ret    
   1400053ab:	lea    rcx,[rip+0x372e]        # 0x140008ae0
   1400053b2:	call   QWORD PTR [rip+0x2cb0]        # 0x140008068
   1400053b8:	int3   
   1400053b9:	int3   
   1400053ba:	int3   
   1400053bb:	int3   
   1400053bc:	int3   
   1400053bd:	int3   
   1400053be:	int3   
   1400053bf:	int3   
   1400053c0:	mov    QWORD PTR [rsp+0x20],rbx
   1400053c5:	push   rsi
   1400053c6:	push   r12
   1400053c8:	push   r15
   1400053ca:	sub    rsp,0x30
   1400053ce:	mov    r15,r9
   1400053d1:	mov    rsi,r8
   1400053d4:	mov    r12,rdx
   1400053d7:	mov    rbx,rcx
   1400053da:	test   r9,r9
   1400053dd:	je     0x140005445
   1400053df:	mov    r8,QWORD PTR [rcx+0x18]
   1400053e3:	cmp    r8,0x10
   1400053e7:	jb     0x1400053ee
   1400053e9:	mov    rax,QWORD PTR [rcx]
   1400053ec:	jmp    0x1400053f1
   1400053ee:	mov    rax,rcx
   1400053f1:	cmp    r9,rax
   1400053f4:	jb     0x140005445
   1400053f6:	cmp    r8,0x10
   1400053fa:	jb     0x1400053ff
   1400053fc:	mov    rcx,QWORD PTR [rcx]
   1400053ff:	add    rcx,QWORD PTR [rbx+0x10]
   140005403:	cmp    rcx,r9
   140005406:	jbe    0x140005445
   140005408:	cmp    r8,0x10
   14000540c:	jb     0x140005413
   14000540e:	mov    rax,QWORD PTR [rbx]
   140005411:	jmp    0x140005416
   140005413:	mov    rax,rbx
   140005416:	sub    r15,rax
   140005419:	mov    rax,QWORD PTR [rsp+0x70]
   14000541e:	mov    r9,rbx
   140005421:	mov    QWORD PTR [rsp+0x28],rax
   140005426:	mov    r8,rsi
   140005429:	mov    rcx,rbx
   14000542c:	mov    QWORD PTR [rsp+0x20],r15
   140005431:	call   0x140005040
   140005436:	mov    rbx,QWORD PTR [rsp+0x68]
   14000543b:	add    rsp,0x30
   14000543f:	pop    r15
   140005441:	pop    r12
   140005443:	pop    rsi
   140005444:	ret    
   140005445:	mov    rcx,QWORD PTR [rbx+0x10]
   140005449:	cmp    rcx,rdx
   14000544c:	jae    0x14000545c
   14000544e:	lea    rcx,[rip+0x368b]        # 0x140008ae0
   140005455:	call   QWORD PTR [rip+0x2c0d]        # 0x140008068
   14000545b:	int3   
   14000545c:	mov    QWORD PTR [rsp+0x50],rbp
   140005461:	mov    rbp,QWORD PTR [rsp+0x70]
   140005466:	mov    QWORD PTR [rsp+0x60],r14
   14000546b:	mov    r14,rcx
   14000546e:	sub    r14,rdx
   140005471:	cmp    r14,rsi
   140005474:	cmovb  rsi,r14
   140005478:	or     rax,0xffffffffffffffff
   14000547c:	sub    rax,rbp
   14000547f:	sub    rcx,rsi
   140005482:	cmp    rax,rcx
   140005485:	ja     0x140005495
   140005487:	lea    rcx,[rip+0x3642]        # 0x140008ad0
   14000548e:	call   QWORD PTR [rip+0x2bcc]        # 0x140008060
   140005494:	int3   
   140005495:	sub    r14,rsi
   140005498:	cmp    rbp,rsi
   14000549b:	jae    0x1400054d8
   14000549d:	mov    rax,QWORD PTR [rbx+0x18]
   1400054a1:	cmp    rax,0x10
   1400054a5:	jb     0x1400054ac
   1400054a7:	mov    rcx,QWORD PTR [rbx]
   1400054aa:	jmp    0x1400054af
   1400054ac:	mov    rcx,rbx
   1400054af:	cmp    rax,0x10
   1400054b3:	jb     0x1400054ba
   1400054b5:	mov    rax,QWORD PTR [rbx]
   1400054b8:	jmp    0x1400054bd
   1400054ba:	mov    rax,rbx
   1400054bd:	test   r14,r14
   1400054c0:	je     0x1400054d8
   1400054c2:	add    rdx,rcx
   1400054c5:	lea    rcx,[rax+r12*1]
   1400054c9:	mov    r8,r14
   1400054cc:	add    rcx,rbp
   1400054cf:	add    rdx,rsi
   1400054d2:	call   QWORD PTR [rip+0x2de0]        # 0x1400082b8
   1400054d8:	mov    QWORD PTR [rsp+0x58],rdi
   1400054dd:	test   rbp,rbp
   1400054e0:	jne    0x1400054eb
   1400054e2:	test   rsi,rsi
   1400054e5:	je     0x1400055c3
   1400054eb:	mov    r8,QWORD PTR [rbx+0x10]
   1400054ef:	mov    rdi,r8
   1400054f2:	sub    rdi,rsi
   1400054f5:	add    rdi,rbp
   1400054f8:	cmp    rdi,0xfffffffffffffffe
   1400054fc:	jbe    0x14000550c
   1400054fe:	lea    rcx,[rip+0x35cb]        # 0x140008ad0
   140005505:	call   QWORD PTR [rip+0x2b55]        # 0x140008060
   14000550b:	int3   
   14000550c:	mov    rax,QWORD PTR [rbx+0x18]
   140005510:	cmp    rax,rdi
   140005513:	jae    0x14000553d
   140005515:	mov    rdx,rdi
   140005518:	mov    rcx,rbx
   14000551b:	call   0x140002e10
   140005520:	test   rdi,rdi
   140005523:	je     0x1400055c3
   140005529:	cmp    rsi,rbp
   14000552c:	jae    0x140005589
   14000552e:	mov    rax,QWORD PTR [rbx+0x18]
   140005532:	cmp    rax,0x10
   140005536:	jb     0x14000555c
   140005538:	mov    rcx,QWORD PTR [rbx]
   14000553b:	jmp    0x14000555f
   14000553d:	test   rdi,rdi
   140005540:	jne    0x140005529
   140005542:	mov    QWORD PTR [rbx+0x10],rdi
   140005546:	cmp    rax,0x10
   14000554a:	jb     0x140005554
   14000554c:	mov    rax,QWORD PTR [rbx]
   14000554f:	mov    BYTE PTR [rax],dil
   140005552:	jmp    0x1400055c3
   140005554:	mov    rax,rbx
   140005557:	mov    BYTE PTR [rbx],0x0
   14000555a:	jmp    0x1400055c3
   14000555c:	mov    rcx,rbx
   14000555f:	cmp    rax,0x10
   140005563:	jb     0x14000556a
   140005565:	mov    rax,QWORD PTR [rbx]
   140005568:	jmp    0x14000556d
   14000556a:	mov    rax,rbx
   14000556d:	test   r14,r14
   140005570:	je     0x140005589
   140005572:	lea    rdx,[rcx+r12*1]
   140005576:	lea    rcx,[rax+r12*1]
   14000557a:	mov    r8,r14
   14000557d:	add    rcx,rbp
   140005580:	add    rdx,rsi
   140005583:	call   QWORD PTR [rip+0x2d2f]        # 0x1400082b8
   140005589:	cmp    QWORD PTR [rbx+0x18],0x10
   14000558e:	jb     0x140005595
   140005590:	mov    rax,QWORD PTR [rbx]
   140005593:	jmp    0x140005598
   140005595:	mov    rax,rbx
   140005598:	test   rbp,rbp
   14000559b:	je     0x1400055ac
   14000559d:	lea    rcx,[rax+r12*1]
   1400055a1:	mov    r8,rbp
   1400055a4:	mov    rdx,r15
   1400055a7:	call   0x14000654c
   1400055ac:	cmp    QWORD PTR [rbx+0x18],0x10
   1400055b1:	mov    QWORD PTR [rbx+0x10],rdi
   1400055b5:	jb     0x1400055bc
   1400055b7:	mov    rax,QWORD PTR [rbx]
   1400055ba:	jmp    0x1400055bf
   1400055bc:	mov    rax,rbx
   1400055bf:	mov    BYTE PTR [rax+rdi*1],0x0
   1400055c3:	mov    rdi,QWORD PTR [rsp+0x58]
   1400055c8:	mov    rbp,QWORD PTR [rsp+0x50]
   1400055cd:	mov    r14,QWORD PTR [rsp+0x60]
   1400055d2:	mov    rax,rbx
   1400055d5:	mov    rbx,QWORD PTR [rsp+0x68]
   1400055da:	add    rsp,0x30
   1400055de:	pop    r15
   1400055e0:	pop    r12
   1400055e2:	pop    rsi
   1400055e3:	ret    
   1400055e4:	int3   
   1400055e5:	int3   
   1400055e6:	int3   
   1400055e7:	int3   
   1400055e8:	int3   
   1400055e9:	int3   
   1400055ea:	int3   
   1400055eb:	int3   
   1400055ec:	int3   
   1400055ed:	int3   
   1400055ee:	int3   
   1400055ef:	int3   
   1400055f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400055f5:	push   rdi
   1400055f6:	sub    rsp,0x20
   1400055fa:	mov    rdi,QWORD PTR [rcx+0x10]
   1400055fe:	mov    rbx,rcx
   140005601:	cmp    rdi,rdx
   140005604:	ja     0x14000562a
   140005606:	cmp    QWORD PTR [rcx+0x18],rdx
   14000560a:	je     0x14000562a
   14000560c:	mov    r8b,0x1
   14000560f:	call   0x140003220
   140005614:	test   al,al
   140005616:	je     0x14000562a
   140005618:	cmp    QWORD PTR [rbx+0x18],0x10
   14000561d:	mov    QWORD PTR [rbx+0x10],rdi
   140005621:	jb     0x140005626
   140005623:	mov    rbx,QWORD PTR [rbx]
   140005626:	mov    BYTE PTR [rbx+rdi*1],0x0
   14000562a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000562f:	add    rsp,0x20
   140005633:	pop    rdi
   140005634:	ret    
   140005635:	int3   
   140005636:	int3   
   140005637:	int3   
   140005638:	int3   
   140005639:	int3   
   14000563a:	int3   
   14000563b:	int3   
   14000563c:	int3   
   14000563d:	int3   
   14000563e:	int3   
   14000563f:	int3   
   140005640:	mov    QWORD PTR [rsp+0x10],rbx
   140005645:	mov    QWORD PTR [rsp+0x18],rbp
   14000564a:	push   rsi
   14000564b:	push   rdi
   14000564c:	push   r14
   14000564e:	sub    rsp,0x20
   140005652:	mov    rax,QWORD PTR [rcx+0x38]
   140005656:	lea    r14,[rcx+0x80]
   14000565d:	mov    ebp,r9d
   140005660:	mov    rsi,r8
   140005663:	mov    rdi,rdx
   140005666:	mov    rbx,rcx
   140005669:	cmp    QWORD PTR [rax],r14
   14000566c:	jne    0x14000567e
   14000566e:	cmp    r9d,0x1
   140005672:	jne    0x14000567e
   140005674:	cmp    QWORD PTR [rcx+0x78],0x0
   140005679:	jne    0x14000567e
   14000567b:	dec    rsi
   14000567e:	cmp    QWORD PTR [rcx+0x90],0x0
   140005686:	je     0x140005701
   140005688:	call   0x140002f30
   14000568d:	test   al,al
   14000568f:	je     0x140005701
   140005691:	test   rsi,rsi
   140005694:	jne    0x14000569b
   140005696:	cmp    ebp,0x1
   140005699:	je     0x1400056b2
   14000569b:	mov    rcx,QWORD PTR [rbx+0x90]
   1400056a2:	mov    r8d,ebp
   1400056a5:	mov    rdx,rsi
   1400056a8:	call   QWORD PTR [rip+0x2bca]        # 0x140008278
   1400056ae:	test   eax,eax
   1400056b0:	jne    0x140005701
   1400056b2:	mov    rcx,QWORD PTR [rbx+0x90]
   1400056b9:	lea    rdx,[rsp+0x40]
   1400056be:	call   QWORD PTR [rip+0x2b9c]        # 0x140008260
   1400056c4:	test   eax,eax
   1400056c6:	jne    0x140005701
   1400056c8:	mov    rax,QWORD PTR [rbx+0x18]
   1400056cc:	cmp    QWORD PTR [rax],r14
   1400056cf:	jne    0x1400056eb
   1400056d1:	mov    rcx,QWORD PTR [rbx+0x68]
   1400056d5:	mov    rdx,QWORD PTR [rbx+0x70]
   1400056d9:	mov    QWORD PTR [rax],rcx
   1400056dc:	mov    rax,QWORD PTR [rbx+0x38]
   1400056e0:	sub    edx,ecx
   1400056e2:	mov    QWORD PTR [rax],rcx
   1400056e5:	mov    rax,QWORD PTR [rbx+0x50]
   1400056e9:	mov    DWORD PTR [rax],edx
   1400056eb:	xor    eax,eax
   1400056ed:	mov    QWORD PTR [rdi],rax
   1400056f0:	mov    rax,QWORD PTR [rsp+0x40]
   1400056f5:	mov    QWORD PTR [rdi+0x8],rax
   1400056f9:	mov    eax,DWORD PTR [rbx+0x84]
   1400056ff:	jmp    0x140005714
   140005701:	mov    rax,QWORD PTR [rip+0x2af0]        # 0x1400081f8
   140005708:	mov    rcx,QWORD PTR [rax]
   14000570b:	xor    eax,eax
   14000570d:	mov    QWORD PTR [rdi],rcx
   140005710:	mov    QWORD PTR [rdi+0x8],rax
   140005714:	mov    rbx,QWORD PTR [rsp+0x48]
   140005719:	mov    rbp,QWORD PTR [rsp+0x50]
   14000571e:	mov    DWORD PTR [rdi+0x10],eax
   140005721:	mov    rax,rdi
   140005724:	add    rsp,0x20
   140005728:	pop    r14
   14000572a:	pop    rdi
   14000572b:	pop    rsi
   14000572c:	ret    
   14000572d:	int3   
   14000572e:	int3   
   14000572f:	int3   
   140005730:	mov    QWORD PTR [rsp+0x10],rbx
   140005735:	mov    QWORD PTR [rsp+0x18],rsi
   14000573a:	mov    QWORD PTR [rsp+0x20],rdi
   14000573f:	push   r14
   140005741:	sub    rsp,0x20
   140005745:	cmp    QWORD PTR [rcx+0x90],0x0
   14000574d:	mov    rax,QWORD PTR [r8+0x8]
   140005751:	mov    rsi,QWORD PTR [r8]
   140005754:	mov    QWORD PTR [rsp+0x30],rax
   140005759:	mov    r14,r8
   14000575c:	mov    rbx,rdx
   14000575f:	mov    rdi,rcx
   140005762:	je     0x1400057de
   140005764:	call   0x140002f30
   140005769:	test   al,al
   14000576b:	je     0x1400057de
   14000576d:	mov    rcx,QWORD PTR [rdi+0x90]
   140005774:	lea    rdx,[rsp+0x30]
   140005779:	call   QWORD PTR [rip+0x2af1]        # 0x140008270
   14000577f:	test   eax,eax
   140005781:	jne    0x1400057de
   140005783:	test   rsi,rsi
   140005786:	je     0x1400057a0
   140005788:	mov    rcx,QWORD PTR [rdi+0x90]
   14000578f:	lea    r8d,[rax+0x1]
   140005793:	mov    rdx,rsi
   140005796:	call   QWORD PTR [rip+0x2adc]        # 0x140008278
   14000579c:	test   eax,eax
   14000579e:	jne    0x1400057de
   1400057a0:	mov    rcx,QWORD PTR [rdi+0x90]
   1400057a7:	lea    rdx,[rsp+0x30]
   1400057ac:	call   QWORD PTR [rip+0x2aae]        # 0x140008260
   1400057b2:	test   eax,eax
   1400057b4:	jne    0x1400057de
   1400057b6:	mov    eax,DWORD PTR [r14+0x10]
   1400057ba:	mov    rcx,rdi
   1400057bd:	mov    DWORD PTR [rdi+0x84],eax
   1400057c3:	call   0x140003450
   1400057c8:	xor    eax,eax
   1400057ca:	mov    QWORD PTR [rbx],rax
   1400057cd:	mov    rax,QWORD PTR [rsp+0x30]
   1400057d2:	mov    QWORD PTR [rbx+0x8],rax
   1400057d6:	mov    eax,DWORD PTR [rdi+0x84]
   1400057dc:	jmp    0x1400057f1
   1400057de:	mov    rax,QWORD PTR [rip+0x2a13]        # 0x1400081f8
   1400057e5:	mov    rcx,QWORD PTR [rax]
   1400057e8:	xor    eax,eax
   1400057ea:	mov    QWORD PTR [rbx],rcx
   1400057ed:	mov    QWORD PTR [rbx+0x8],rax
   1400057f1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400057f6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400057fb:	mov    DWORD PTR [rbx+0x10],eax
   1400057fe:	mov    rax,rbx
   140005801:	mov    rbx,QWORD PTR [rsp+0x38]
   140005806:	add    rsp,0x20
   14000580a:	pop    r14
   14000580c:	ret    
   14000580d:	int3   
   14000580e:	int3   
   14000580f:	int3   
   140005810:	mov    rax,QWORD PTR [rcx+0x8]
   140005814:	ret    
   140005815:	int3   
   140005816:	int3   
   140005817:	int3   
   140005818:	int3   
   140005819:	int3   
   14000581a:	int3   
   14000581b:	int3   
   14000581c:	int3   
   14000581d:	int3   
   14000581e:	int3   
   14000581f:	int3   
   140005820:	rex push rbx
   140005822:	sub    rsp,0x20
   140005826:	mov    rbx,rcx
   140005829:	mov    rcx,QWORD PTR [rcx+0x90]
   140005830:	mov    r9,r8
   140005833:	test   rcx,rcx
   140005836:	je     0x1400058c9
   14000583c:	test   rdx,rdx
   14000583f:	jne    0x14000584c
   140005841:	test   r8,r8
   140005844:	jne    0x14000584c
   140005846:	lea    r8d,[r9+0x4]
   14000584a:	jmp    0x14000584f
   14000584c:	xor    r8d,r8d
   14000584f:	call   QWORD PTR [rip+0x2a33]        # 0x140008288
   140005855:	test   eax,eax
   140005857:	jne    0x1400058c9
   140005859:	mov    rcx,rbx
   14000585c:	mov    QWORD PTR [rsp+0x30],rdi
   140005861:	mov    rdi,QWORD PTR [rbx+0x90]
   140005868:	mov    BYTE PTR [rbx+0x88],0x1
   14000586f:	mov    BYTE PTR [rbx+0x81],al
   140005875:	call   QWORD PTR [rip+0x288d]        # 0x140008108
   14000587b:	test   rdi,rdi
   14000587e:	je     0x1400058a0
   140005880:	lea    rax,[rdi+0x10]
   140005884:	mov    QWORD PTR [rbx+0x38],rdi
   140005888:	mov    QWORD PTR [rbx+0x40],rdi
   14000588c:	mov    QWORD PTR [rbx+0x18],rax
   140005890:	mov    QWORD PTR [rbx+0x20],rax
   140005894:	lea    rax,[rdi+0x8]
   140005898:	mov    QWORD PTR [rbx+0x50],rax
   14000589c:	mov    QWORD PTR [rbx+0x58],rax
   1400058a0:	mov    QWORD PTR [rbx+0x90],rdi
   1400058a7:	mov    eax,DWORD PTR [rip+0x6be3]        # 0x14000c490
   1400058ad:	mov    rdi,QWORD PTR [rsp+0x30]
   1400058b2:	mov    DWORD PTR [rbx+0x84],eax
   1400058b8:	mov    QWORD PTR [rbx+0x78],0x0
   1400058c0:	mov    rax,rbx
   1400058c3:	add    rsp,0x20
   1400058c7:	pop    rbx
   1400058c8:	ret    
   1400058c9:	xor    eax,eax
   1400058cb:	add    rsp,0x20
   1400058cf:	pop    rbx
   1400058d0:	ret    
   1400058d1:	int3   
   1400058d2:	int3   
   1400058d3:	int3   
   1400058d4:	int3   
   1400058d5:	int3   
   1400058d6:	int3   
   1400058d7:	int3   
   1400058d8:	int3   
   1400058d9:	int3   
   1400058da:	int3   
   1400058db:	int3   
   1400058dc:	int3   
   1400058dd:	int3   
   1400058de:	int3   
   1400058df:	int3   
   1400058e0:	mov    rax,QWORD PTR [rcx+0x10]
   1400058e4:	ret    
   1400058e5:	int3   
   1400058e6:	int3   
   1400058e7:	int3   
   1400058e8:	int3   
   1400058e9:	int3   
   1400058ea:	int3   
   1400058eb:	int3   
   1400058ec:	int3   
   1400058ed:	int3   
   1400058ee:	int3   
   1400058ef:	int3   
   1400058f0:	mov    rax,QWORD PTR [rcx+0x8]
   1400058f4:	sub    rax,QWORD PTR [rcx]
   1400058f7:	ret    
   1400058f8:	int3   
   1400058f9:	int3   
   1400058fa:	int3   
   1400058fb:	int3   
   1400058fc:	int3   
   1400058fd:	int3   
   1400058fe:	int3   
   1400058ff:	int3   
   140005900:	mov    eax,DWORD PTR [rcx+0x10]
   140005903:	ret    
   140005904:	int3   
   140005905:	int3   
   140005906:	int3   
   140005907:	int3   
   140005908:	int3   
   140005909:	int3   
   14000590a:	int3   
   14000590b:	int3   
   14000590c:	int3   
   14000590d:	int3   
   14000590e:	int3   
   14000590f:	int3   
   140005910:	rex push rbx
   140005912:	sub    rsp,0x20
   140005916:	cmp    QWORD PTR [rcx+0x90],0x0
   14000591e:	mov    rbx,rcx
   140005921:	je     0x14000594b
   140005923:	mov    rax,QWORD PTR [rcx]
   140005926:	or     edx,0xffffffff
   140005929:	call   QWORD PTR [rax+0x18]
   14000592c:	cmp    eax,0xffffffff
   14000592f:	je     0x14000594b
   140005931:	mov    rcx,QWORD PTR [rbx+0x90]
   140005938:	call   QWORD PTR [rip+0x2912]        # 0x140008250
   14000593e:	test   eax,eax
   140005940:	jns    0x14000594b
   140005942:	or     eax,0xffffffff
   140005945:	add    rsp,0x20
   140005949:	pop    rbx
   14000594a:	ret    
   14000594b:	xor    eax,eax
   14000594d:	add    rsp,0x20
   140005951:	pop    rbx
   140005952:	ret    
   140005953:	int3   
   140005954:	int3   
   140005955:	int3   
   140005956:	int3   
   140005957:	int3   
   140005958:	int3   
   140005959:	int3   
   14000595a:	int3   
   14000595b:	int3   
   14000595c:	int3   
   14000595d:	int3   
   14000595e:	int3   
   14000595f:	int3   
   140005960:	lea    rax,[rip+0x66a9]        # 0x14000c010
   140005967:	ret    
   140005968:	int3   
   140005969:	int3   
   14000596a:	int3   
   14000596b:	int3   
   14000596c:	int3   
   14000596d:	int3   
   14000596e:	int3   
   14000596f:	int3   
   140005970:	movzx  eax,BYTE PTR [rcx]
   140005973:	ret    
   140005974:	int3   
   140005975:	int3   
   140005976:	int3   
   140005977:	int3   
   140005978:	int3   
   140005979:	int3   
   14000597a:	int3   
   14000597b:	int3   
   14000597c:	int3   
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	movzx  eax,BYTE PTR [rcx]
   140005983:	ret    
   140005984:	int3   
   140005985:	int3   
   140005986:	int3   
   140005987:	int3   
   140005988:	int3   
   140005989:	int3   
   14000598a:	int3   
   14000598b:	int3   
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	rex push rbp
   140005992:	push   rsi
   140005993:	push   rdi
   140005994:	push   r14
   140005996:	push   r15
   140005998:	mov    rbp,rsp
   14000599b:	sub    rsp,0x70
   14000599f:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   1400059a7:	mov    QWORD PTR [rsp+0xb0],rbx
   1400059af:	mov    rdi,rcx
   1400059b2:	mov    rax,QWORD PTR [rcx+0x38]
   1400059b6:	mov    rcx,QWORD PTR [rax]
   1400059b9:	test   rcx,rcx
   1400059bc:	je     0x1400059ea
   1400059be:	mov    rdx,QWORD PTR [rdi+0x50]
   1400059c2:	movsxd r8,DWORD PTR [rdx]
   1400059c5:	lea    rax,[rcx+r8*1]
   1400059c9:	cmp    rcx,rax
   1400059cc:	jae    0x1400059ea
   1400059ce:	lea    eax,[r8-0x1]
   1400059d2:	mov    DWORD PTR [rdx],eax
   1400059d4:	mov    rcx,QWORD PTR [rdi+0x38]
   1400059d8:	mov    rdx,QWORD PTR [rcx]
   1400059db:	lea    rax,[rdx+0x1]
   1400059df:	mov    QWORD PTR [rcx],rax
   1400059e2:	movzx  eax,BYTE PTR [rdx]
   1400059e5:	jmp    0x140005c4d
   1400059ea:	cmp    QWORD PTR [rdi+0x90],0x0
   1400059f2:	jne    0x1400059fd
   1400059f4:	or     rax,0xffffffffffffffff
   1400059f8:	jmp    0x140005c4d
   1400059fd:	mov    rax,QWORD PTR [rdi+0x18]
   140005a01:	mov    rcx,QWORD PTR [rax]
   140005a04:	lea    rax,[rdi+0x80]
   140005a0b:	cmp    rcx,rax
   140005a0e:	jne    0x140005a24
   140005a10:	mov    rdx,QWORD PTR [rdi+0x68]
   140005a14:	mov    r9,QWORD PTR [rdi+0x70]
   140005a18:	mov    r8,rdx
   140005a1b:	mov    rcx,rdi
   140005a1e:	call   QWORD PTR [rip+0x26dc]        # 0x140008100
   140005a24:	cmp    QWORD PTR [rdi+0x78],0x0
   140005a29:	jne    0x140005a4e
   140005a2b:	mov    rcx,QWORD PTR [rdi+0x90]
   140005a32:	call   QWORD PTR [rip+0x2820]        # 0x140008258
   140005a38:	cmp    eax,0xffffffff
   140005a3b:	je     0x140005a45
   140005a3d:	movzx  esi,al
   140005a40:	jmp    0x140005c4b
   140005a45:	or     rsi,0xffffffffffffffff
   140005a49:	jmp    0x140005c4b
   140005a4e:	mov    QWORD PTR [rbp-0x8],0xf
   140005a56:	xor    r15d,r15d
   140005a59:	mov    QWORD PTR [rbp-0x10],r15
   140005a5d:	mov    BYTE PTR [rbp-0x20],r15b
   140005a61:	mov    rcx,QWORD PTR [rdi+0x90]
   140005a68:	call   QWORD PTR [rip+0x27ea]        # 0x140008258
   140005a6e:	or     rsi,0xffffffffffffffff
   140005a72:	cmp    eax,0xffffffff
   140005a75:	mov    r14d,eax
   140005a78:	je     0x140005c3b
   140005a7e:	mov    rcx,rsi
   140005a81:	mov    rdx,QWORD PTR [rbp-0x10]
   140005a85:	sub    rcx,rdx
   140005a88:	cmp    rcx,0x1
   140005a8c:	jbe    0x140005c2d
   140005a92:	lea    rbx,[rdx+0x1]
   140005a96:	cmp    rbx,0xfffffffffffffffe
   140005a9a:	ja     0x140005c1f
   140005aa0:	mov    r9,QWORD PTR [rbp-0x8]
   140005aa4:	cmp    r9,rbx
   140005aa7:	jae    0x140005aba
   140005aa9:	mov    r8,rdx
   140005aac:	mov    rdx,rbx
   140005aaf:	lea    rcx,[rbp-0x20]
   140005ab3:	call   0x140002e10
   140005ab8:	jmp    0x140005ad2
   140005aba:	test   rbx,rbx
   140005abd:	jne    0x140005adf
   140005abf:	mov    QWORD PTR [rbp-0x10],r15
   140005ac3:	lea    rax,[rbp-0x20]
   140005ac7:	cmp    r9,0x10
   140005acb:	cmovae rax,QWORD PTR [rbp-0x20]
   140005ad0:	mov    BYTE PTR [rax],bl
   140005ad2:	mov    rdx,QWORD PTR [rbp-0x10]
   140005ad6:	mov    r9,QWORD PTR [rbp-0x8]
   140005ada:	test   rbx,rbx
   140005add:	je     0x140005b0e
   140005adf:	lea    rax,[rbp-0x20]
   140005ae3:	cmp    r9,0x10
   140005ae7:	cmovae rax,QWORD PTR [rbp-0x20]
   140005aec:	mov    BYTE PTR [rax+rdx*1],r14b
   140005af0:	mov    QWORD PTR [rbp-0x10],rbx
   140005af4:	lea    rax,[rbp-0x20]
   140005af8:	cmp    QWORD PTR [rbp-0x8],0x10
   140005afd:	cmovae rax,QWORD PTR [rbp-0x20]
   140005b02:	mov    BYTE PTR [rax+rbx*1],0x0
   140005b06:	mov    r9,QWORD PTR [rbp-0x8]
   140005b0a:	mov    rdx,QWORD PTR [rbp-0x10]
   140005b0e:	lea    rcx,[rbp-0x20]
   140005b12:	cmp    r9,0x10
   140005b16:	cmovae rcx,QWORD PTR [rbp-0x20]
   140005b1b:	lea    r8,[rbp-0x20]
   140005b1f:	cmovae r8,QWORD PTR [rbp-0x20]
   140005b24:	lea    r9,[rcx+rdx*1]
   140005b28:	lea    rdx,[rdi+0x84]
   140005b2f:	lea    rax,[rbp+0x38]
   140005b33:	mov    QWORD PTR [rsp+0x38],rax
   140005b38:	lea    rax,[rbp-0x2f]
   140005b3c:	mov    QWORD PTR [rsp+0x30],rax
   140005b41:	lea    rax,[rbp-0x30]
   140005b45:	mov    QWORD PTR [rsp+0x28],rax
   140005b4a:	lea    rax,[rbp+0x30]
   140005b4e:	mov    QWORD PTR [rsp+0x20],rax
   140005b53:	mov    rcx,QWORD PTR [rdi+0x78]
   140005b57:	call   QWORD PTR [rip+0x252b]        # 0x140008088
   140005b5d:	test   eax,eax
   140005b5f:	js     0x140005c3b
   140005b65:	cmp    eax,0x1
   140005b68:	jle    0x140005b7c
   140005b6a:	cmp    eax,0x3
   140005b6d:	jne    0x140005c3b
   140005b73:	cmp    QWORD PTR [rbp-0x10],0x1
   140005b78:	jae    0x140005bb8
   140005b7a:	jmp    0x140005ba6
   140005b7c:	lea    rax,[rbp-0x30]
   140005b80:	lea    rcx,[rbp-0x20]
   140005b84:	cmp    QWORD PTR [rbp+0x38],rax
   140005b88:	jne    0x140005bde
   140005b8a:	lea    rax,[rbp-0x20]
   140005b8e:	cmp    QWORD PTR [rbp-0x8],0x10
   140005b93:	cmovae rax,QWORD PTR [rbp-0x20]
   140005b98:	mov    r8,QWORD PTR [rbp+0x30]
   140005b9c:	sub    r8,rax
   140005b9f:	xor    edx,edx
   140005ba1:	call   0x140004020
   140005ba6:	mov    rcx,QWORD PTR [rdi+0x90]
   140005bad:	call   QWORD PTR [rip+0x26a5]        # 0x140008258
   140005bb3:	jmp    0x140005a72
   140005bb8:	lea    r8,[rbp-0x20]
   140005bbc:	cmp    QWORD PTR [rbp-0x8],0x10
   140005bc1:	cmovae r8,QWORD PTR [rbp-0x20]
   140005bc6:	mov    edx,0x1
   140005bcb:	mov    r9d,edx
   140005bce:	lea    rcx,[rbp-0x30]
   140005bd2:	call   QWORD PTR [rip+0x26d8]        # 0x1400082b0
   140005bd8:	movzx  esi,BYTE PTR [rbp-0x30]
   140005bdc:	jmp    0x140005c3b
   140005bde:	cmp    QWORD PTR [rbp-0x8],0x10
   140005be3:	cmovae rcx,QWORD PTR [rbp-0x20]
   140005be8:	mov    eax,DWORD PTR [rbp-0x10]
   140005beb:	mov    rdx,QWORD PTR [rbp+0x30]
   140005bef:	sub    eax,edx
   140005bf1:	add    eax,ecx
   140005bf3:	movsxd rbx,eax
   140005bf6:	test   eax,eax
   140005bf8:	jle    0x140005bd8
   140005bfa:	nop    WORD PTR [rax+rax*1+0x0]
   140005c00:	dec    rbx
   140005c03:	movsx  ecx,BYTE PTR [rbx+rdx*1]
   140005c07:	mov    rdx,QWORD PTR [rdi+0x90]
   140005c0e:	call   QWORD PTR [rip+0x267c]        # 0x140008290
   140005c14:	test   rbx,rbx
   140005c17:	jle    0x140005bd8
   140005c19:	mov    rdx,QWORD PTR [rbp+0x30]
   140005c1d:	jmp    0x140005c00
   140005c1f:	lea    rcx,[rip+0x2eaa]        # 0x140008ad0
   140005c26:	call   QWORD PTR [rip+0x2434]        # 0x140008060
   140005c2c:	int3   
   140005c2d:	lea    rcx,[rip+0x2e9c]        # 0x140008ad0
   140005c34:	call   QWORD PTR [rip+0x2426]        # 0x140008060
   140005c3a:	nop
   140005c3b:	cmp    QWORD PTR [rbp-0x8],0x10
   140005c40:	jb     0x140005c4b
   140005c42:	mov    rcx,QWORD PTR [rbp-0x20]
   140005c46:	call   0x1400063aa
   140005c4b:	mov    eax,esi
   140005c4d:	mov    rbx,QWORD PTR [rsp+0xb0]
   140005c55:	add    rsp,0x70
   140005c59:	pop    r15
   140005c5b:	pop    r14
   140005c5d:	pop    rdi
   140005c5e:	pop    rsi
   140005c5f:	pop    rbp
   140005c60:	ret    
   140005c61:	int3   
   140005c62:	int3   
   140005c63:	int3   
   140005c64:	int3   
   140005c65:	int3   
   140005c66:	int3   
   140005c67:	int3   
   140005c68:	int3   
   140005c69:	int3   
   140005c6a:	int3   
   140005c6b:	int3   
   140005c6c:	int3   
   140005c6d:	int3   
   140005c6e:	int3   
   140005c6f:	int3   
   140005c70:	rex push rbx
   140005c72:	sub    rsp,0x20
   140005c76:	mov    rax,QWORD PTR [rcx+0x38]
   140005c7a:	mov    rbx,rcx
   140005c7d:	mov    rcx,QWORD PTR [rax]
   140005c80:	test   rcx,rcx
   140005c83:	je     0x140005c9d
   140005c85:	mov    rax,QWORD PTR [rbx+0x50]
   140005c89:	movsxd rdx,DWORD PTR [rax]
   140005c8c:	add    rdx,rcx
   140005c8f:	cmp    rcx,rdx
   140005c92:	jae    0x140005c9d
   140005c94:	movzx  eax,BYTE PTR [rcx]
   140005c97:	add    rsp,0x20
   140005c9b:	pop    rbx
   140005c9c:	ret    
   140005c9d:	mov    rax,QWORD PTR [rbx]
   140005ca0:	mov    rcx,rbx
   140005ca3:	mov    QWORD PTR [rsp+0x30],rdi
   140005ca8:	call   QWORD PTR [rax+0x38]
   140005cab:	mov    edi,eax
   140005cad:	cmp    eax,0xffffffff
   140005cb0:	jne    0x140005cbf
   140005cb2:	or     eax,eax
   140005cb4:	mov    rdi,QWORD PTR [rsp+0x30]
   140005cb9:	add    rsp,0x20
   140005cbd:	pop    rbx
   140005cbe:	ret    
   140005cbf:	mov    rax,QWORD PTR [rbx]
   140005cc2:	mov    edx,edi
   140005cc4:	mov    rcx,rbx
   140005cc7:	call   QWORD PTR [rax+0x20]
   140005cca:	mov    eax,edi
   140005ccc:	mov    rdi,QWORD PTR [rsp+0x30]
   140005cd1:	add    rsp,0x20
   140005cd5:	pop    rbx
   140005cd6:	ret    
   140005cd7:	int3   
   140005cd8:	int3   
   140005cd9:	int3   
   140005cda:	int3   
   140005cdb:	int3   
   140005cdc:	int3   
   140005cdd:	int3   
   140005cde:	int3   
   140005cdf:	int3   
   140005ce0:	mov    eax,DWORD PTR [rcx]
   140005ce2:	ret    
   140005ce3:	int3   
   140005ce4:	int3   
   140005ce5:	int3   
   140005ce6:	int3   
   140005ce7:	int3   
   140005ce8:	int3   
   140005ce9:	int3   
   140005cea:	int3   
   140005ceb:	int3   
   140005cec:	int3   
   140005ced:	int3   
   140005cee:	int3   
   140005cef:	int3   
   140005cf0:	mov    eax,DWORD PTR [rcx]
   140005cf2:	ret    
   140005cf3:	int3   
   140005cf4:	int3   
   140005cf5:	int3   
   140005cf6:	int3   
   140005cf7:	int3   
   140005cf8:	int3   
   140005cf9:	int3   
   140005cfa:	int3   
   140005cfb:	int3   
   140005cfc:	int3   
   140005cfd:	int3   
   140005cfe:	int3   
   140005cff:	int3   
   140005d00:	mov    rax,r8
   140005d03:	ret    
   140005d04:	int3   
   140005d05:	int3   
   140005d06:	int3   
   140005d07:	int3   
   140005d08:	int3   
   140005d09:	int3   
   140005d0a:	int3   
   140005d0b:	int3   
   140005d0c:	int3   
   140005d0d:	int3   
   140005d0e:	int3   
   140005d0f:	int3   
   140005d10:	mov    rax,rsp
   140005d13:	push   rbp
   140005d14:	lea    rbp,[rax-0x5f]
   140005d18:	sub    rsp,0xb0
   140005d1f:	mov    QWORD PTR [rbp+0x4f],0xfffffffffffffffe
   140005d27:	mov    QWORD PTR [rax+0x8],rbx
   140005d2b:	mov    QWORD PTR [rax+0x10],rsi
   140005d2f:	mov    QWORD PTR [rax+0x18],rdi
   140005d33:	xor    esi,esi
   140005d35:	mov    DWORD PTR [rbp-0x39],esi
   140005d38:	call   QWORD PTR [rip+0x22c2]        # 0x140008000
   140005d3e:	lea    rdx,[rbp-0x39]
   140005d42:	mov    rcx,rax
   140005d45:	call   QWORD PTR [rip+0x26a5]        # 0x1400083f0
   140005d4b:	mov    rdi,rax
   140005d4e:	mov    QWORD PTR [rbp+0x27],0xf
   140005d56:	mov    QWORD PTR [rbp+0x1f],rsi
   140005d5a:	mov    BYTE PTR [rbp+0xf],sil
   140005d5e:	cmp    DWORD PTR [rbp-0x39],0x2
   140005d62:	jl     0x140005dbb
   140005d64:	mov    rdx,QWORD PTR [rax+0x8]
   140005d68:	lea    rcx,[rbp+0x2f]
   140005d6c:	call   0x140002b20
   140005d71:	mov    rbx,rax
   140005d74:	lea    rax,[rbp+0xf]
   140005d78:	cmp    rax,rbx
   140005d7b:	je     0x140005da9
   140005d7d:	cmp    QWORD PTR [rbp+0x27],0x10
   140005d82:	jb     0x140005d8d
   140005d84:	mov    rcx,QWORD PTR [rbp+0xf]
   140005d88:	call   0x1400063aa
   140005d8d:	mov    QWORD PTR [rbp+0x27],0xf
   140005d95:	mov    QWORD PTR [rbp+0x1f],rsi
   140005d99:	mov    BYTE PTR [rbp+0xf],0x0
   140005d9d:	mov    rdx,rbx
   140005da0:	lea    rcx,[rbp+0xf]
   140005da4:	call   0x140002c40
   140005da9:	cmp    QWORD PTR [rbp+0x47],0x10
   140005dae:	jb     0x140005dd2
   140005db0:	mov    rcx,QWORD PTR [rbp+0x2f]
   140005db4:	call   0x1400063aa
   140005db9:	jmp    0x140005dd2
   140005dbb:	or     r9,0xffffffffffffffff
   140005dbf:	xor    r8d,r8d
   140005dc2:	lea    rdx,[rip+0x624f]        # 0x14000c018
   140005dc9:	lea    rcx,[rbp+0xf]
   140005dcd:	call   0x140003a30
   140005dd2:	mov    QWORD PTR [rbp-0x19],0xf
   140005dda:	mov    QWORD PTR [rbp-0x21],rsi
   140005dde:	mov    BYTE PTR [rbp-0x31],0x0
   140005de2:	lea    rcx,[rbp+0x2f]
   140005de6:	cmp    DWORD PTR [rbp-0x39],0x3
   140005dea:	jl     0x140005df7
   140005dec:	mov    rdx,QWORD PTR [rdi+0x10]
   140005df0:	call   0x140002b20
   140005df5:	jmp    0x140005e07
   140005df7:	lea    r8,[rip+0x623a]        # 0x14000c038
   140005dfe:	lea    rdx,[rbp+0xf]
   140005e02:	call   0x140001670
   140005e07:	mov    rbx,rax
   140005e0a:	lea    rax,[rbp-0x31]
   140005e0e:	cmp    rax,rbx
   140005e11:	je     0x140005e3f
   140005e13:	cmp    QWORD PTR [rbp-0x19],0x10
   140005e18:	jb     0x140005e23
   140005e1a:	mov    rcx,QWORD PTR [rbp-0x31]
   140005e1e:	call   0x1400063aa
   140005e23:	mov    QWORD PTR [rbp-0x19],0xf
   140005e2b:	mov    QWORD PTR [rbp-0x21],rsi
   140005e2f:	mov    BYTE PTR [rbp-0x31],0x0
   140005e33:	mov    rdx,rbx
   140005e36:	lea    rcx,[rbp-0x31]
   140005e3a:	call   0x140002c40
   140005e3f:	cmp    QWORD PTR [rbp+0x47],0x10
   140005e44:	jb     0x140005e4f
   140005e46:	mov    rcx,QWORD PTR [rbp+0x2f]
   140005e4a:	call   0x1400063aa
   140005e4f:	mov    QWORD PTR [rbp+0x7],0xf
   140005e57:	mov    QWORD PTR [rbp-0x1],rsi
   140005e5b:	mov    BYTE PTR [rbp-0x11],0x0
   140005e5f:	cmp    DWORD PTR [rbp-0x39],0x4
   140005e63:	jl     0x140005eba
   140005e65:	mov    rdx,QWORD PTR [rdi+0x18]
   140005e69:	lea    rcx,[rbp+0x2f]
   140005e6d:	call   0x140002b20
   140005e72:	mov    rbx,rax
   140005e75:	lea    rax,[rbp-0x11]
   140005e79:	cmp    rax,rbx
   140005e7c:	je     0x140005eaa
   140005e7e:	cmp    QWORD PTR [rbp+0x7],0x10
   140005e83:	jb     0x140005e8e
   140005e85:	mov    rcx,QWORD PTR [rbp-0x11]
   140005e89:	call   0x1400063aa
   140005e8e:	mov    QWORD PTR [rbp+0x7],0xf
   140005e96:	mov    QWORD PTR [rbp-0x1],rsi
   140005e9a:	mov    BYTE PTR [rbp-0x11],0x0
   140005e9e:	mov    rdx,rbx
   140005ea1:	lea    rcx,[rbp-0x11]
   140005ea5:	call   0x140002c40
   140005eaa:	cmp    QWORD PTR [rbp+0x47],0x10
   140005eaf:	jb     0x140005eba
   140005eb1:	mov    rcx,QWORD PTR [rbp+0x2f]
   140005eb5:	call   0x1400063aa
   140005eba:	lea    r8,[rbp-0x11]
   140005ebe:	lea    rdx,[rbp-0x31]
   140005ec2:	lea    rcx,[rbp+0xf]
   140005ec6:	call   0x140004950
   140005ecb:	mov    ebx,esi
   140005ecd:	test   al,al
   140005ecf:	sete   bl
   140005ed2:	cmp    QWORD PTR [rbp+0x7],0x10
   140005ed7:	jb     0x140005ee2
   140005ed9:	mov    rcx,QWORD PTR [rbp-0x11]
   140005edd:	call   0x1400063aa
   140005ee2:	mov    QWORD PTR [rbp+0x7],0xf
   140005eea:	mov    QWORD PTR [rbp-0x1],rsi
   140005eee:	mov    BYTE PTR [rbp-0x11],0x0
   140005ef2:	cmp    QWORD PTR [rbp-0x19],0x10
   140005ef7:	jb     0x140005f02
   140005ef9:	mov    rcx,QWORD PTR [rbp-0x31]
   140005efd:	call   0x1400063aa
   140005f02:	mov    QWORD PTR [rbp-0x19],0xf
   140005f0a:	mov    QWORD PTR [rbp-0x21],rsi
   140005f0e:	mov    BYTE PTR [rbp-0x31],0x0
   140005f12:	cmp    QWORD PTR [rbp+0x27],0x10
   140005f17:	jb     0x140005f22
   140005f19:	mov    rcx,QWORD PTR [rbp+0xf]
   140005f1d:	call   0x1400063aa
   140005f22:	mov    eax,ebx
   140005f24:	lea    r11,[rsp+0xb0]
   140005f2c:	mov    rbx,QWORD PTR [r11+0x10]
   140005f30:	mov    rsi,QWORD PTR [r11+0x18]
   140005f34:	mov    rdi,QWORD PTR [r11+0x20]
   140005f38:	mov    rsp,r11
   140005f3b:	pop    rbp
   140005f3c:	ret    
   140005f3d:	int3   
   140005f3e:	int3   
   140005f3f:	int3   
   140005f40:	rex.W jmp QWORD PTR [rip+0x2481]        # 0x1400083c8
   140005f47:	int3   
   140005f48:	int3   
   140005f49:	int3   
   140005f4a:	int3   
   140005f4b:	int3   
   140005f4c:	int3   
   140005f4d:	int3   
   140005f4e:	int3   
   140005f4f:	int3   
   140005f50:	mov    rax,rsp
   140005f53:	push   rbp
   140005f54:	push   r14
   140005f56:	push   r15
   140005f58:	lea    rbp,[rax-0x5f]
   140005f5c:	sub    rsp,0xb0
   140005f63:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   140005f6b:	mov    QWORD PTR [rax+0x8],rbx
   140005f6f:	mov    QWORD PTR [rax+0x10],rsi
   140005f73:	mov    QWORD PTR [rax+0x18],rdi
   140005f77:	mov    r14,rdx
   140005f7a:	mov    esi,ecx
   140005f7c:	mov    QWORD PTR [rbp+0xf],0xf
   140005f84:	xor    r15d,r15d
   140005f87:	mov    QWORD PTR [rbp+0x7],r15
   140005f8b:	mov    BYTE PTR [rbp-0x9],r15b
   140005f8f:	or     rbx,0xffffffffffffffff
   140005f93:	cmp    ecx,0x2
   140005f96:	jl     0x140005fc5
   140005f98:	mov    rdx,QWORD PTR [rdx+0x8]
   140005f9c:	cmp    BYTE PTR [rdx],r15b
   140005f9f:	jne    0x140005fa6
   140005fa1:	mov    r8d,r15d
   140005fa4:	jmp    0x140005fba
   140005fa6:	mov    r8,rbx
   140005fa9:	nop    DWORD PTR [rax+0x0]
   140005fb0:	inc    r8
   140005fb3:	cmp    BYTE PTR [rdx+r8*1],0x0
   140005fb8:	jne    0x140005fb0
   140005fba:	lea    rcx,[rbp-0x9]
   140005fbe:	call   0x140003b80
   140005fc3:	jmp    0x140005fdb
   140005fc5:	mov    r9,rbx
   140005fc8:	xor    r8d,r8d
   140005fcb:	lea    rdx,[rip+0x6046]        # 0x14000c018
   140005fd2:	lea    rcx,[rbp-0x9]
   140005fd6:	call   0x140003a30
   140005fdb:	mov    QWORD PTR [rbp-0x31],0xf
   140005fe3:	mov    QWORD PTR [rbp-0x39],r15
   140005fe7:	mov    BYTE PTR [rbp-0x49],0x0
   140005feb:	cmp    esi,0x3
   140005fee:	jl     0x140006016
   140005ff0:	mov    rdx,QWORD PTR [r14+0x10]
   140005ff4:	cmp    BYTE PTR [rdx],0x0
   140005ff7:	jne    0x140005ffe
   140005ff9:	mov    r8,r15
   140005ffc:	jmp    0x14000600b
   140005ffe:	mov    r8,rbx
   140006001:	inc    r8
   140006004:	cmp    BYTE PTR [rdx+r8*1],0x0
   140006009:	jne    0x140006001
   14000600b:	lea    rcx,[rbp-0x49]
   14000600f:	call   0x140003b80
   140006014:	jmp    0x140006072
   140006016:	lea    r8,[rip+0x601b]        # 0x14000c038
   14000601d:	lea    rdx,[rbp-0x9]
   140006021:	lea    rcx,[rbp+0x1f]
   140006025:	call   0x140001670
   14000602a:	mov    rdi,rax
   14000602d:	lea    rax,[rbp-0x49]
   140006031:	cmp    rax,rdi
   140006034:	je     0x140006062
   140006036:	cmp    QWORD PTR [rbp-0x31],0x10
   14000603b:	jb     0x140006046
   14000603d:	mov    rcx,QWORD PTR [rbp-0x49]
   140006041:	call   0x1400063aa
   140006046:	mov    QWORD PTR [rbp-0x31],0xf
   14000604e:	mov    QWORD PTR [rbp-0x39],r15
   140006052:	mov    BYTE PTR [rbp-0x49],0x0
   140006056:	mov    rdx,rdi
   140006059:	lea    rcx,[rbp-0x49]
   14000605d:	call   0x140002c40
   140006062:	cmp    QWORD PTR [rbp+0x37],0x10
   140006067:	jb     0x140006072
   140006069:	mov    rcx,QWORD PTR [rbp+0x1f]
   14000606d:	call   0x1400063aa
   140006072:	mov    QWORD PTR [rbp-0x11],0xf
   14000607a:	mov    QWORD PTR [rbp-0x19],r15
   14000607e:	mov    BYTE PTR [rbp-0x29],0x0
   140006082:	cmp    esi,0x4
   140006085:	jl     0x1400060aa
   140006087:	mov    rdx,QWORD PTR [r14+0x18]
   14000608b:	cmp    BYTE PTR [rdx],0x0
   14000608e:	jne    0x140006095
   140006090:	mov    rbx,r15
   140006093:	jmp    0x14000609e
   140006095:	inc    rbx
   140006098:	cmp    BYTE PTR [rdx+rbx*1],0x0
   14000609c:	jne    0x140006095
   14000609e:	mov    r8,rbx
   1400060a1:	lea    rcx,[rbp-0x29]
   1400060a5:	call   0x140003b80
   1400060aa:	lea    r8,[rbp-0x29]
   1400060ae:	lea    rdx,[rbp-0x49]
   1400060b2:	lea    rcx,[rbp-0x9]
   1400060b6:	call   0x140004950
   1400060bb:	mov    ebx,r15d
   1400060be:	test   al,al
   1400060c0:	sete   bl
   1400060c3:	cmp    QWORD PTR [rbp-0x11],0x10
   1400060c8:	jb     0x1400060d3
   1400060ca:	mov    rcx,QWORD PTR [rbp-0x29]
   1400060ce:	call   0x1400063aa
   1400060d3:	mov    QWORD PTR [rbp-0x11],0xf
   1400060db:	mov    QWORD PTR [rbp-0x19],r15
   1400060df:	mov    BYTE PTR [rbp-0x29],0x0
   1400060e3:	cmp    QWORD PTR [rbp-0x31],0x10
   1400060e8:	jb     0x1400060f3
   1400060ea:	mov    rcx,QWORD PTR [rbp-0x49]
   1400060ee:	call   0x1400063aa
   1400060f3:	mov    QWORD PTR [rbp-0x31],0xf
   1400060fb:	mov    QWORD PTR [rbp-0x39],r15
   1400060ff:	mov    BYTE PTR [rbp-0x49],0x0
   140006103:	cmp    QWORD PTR [rbp+0xf],0x10
   140006108:	jb     0x140006113
   14000610a:	mov    rcx,QWORD PTR [rbp-0x9]
   14000610e:	call   0x1400063aa
   140006113:	mov    eax,ebx
   140006115:	lea    r11,[rsp+0xb0]
   14000611d:	mov    rbx,QWORD PTR [r11+0x20]
   140006121:	mov    rsi,QWORD PTR [r11+0x28]
   140006125:	mov    rdi,QWORD PTR [r11+0x30]
   140006129:	mov    rsp,r11
   14000612c:	pop    r15
   14000612e:	pop    r14
   140006130:	pop    rbp
   140006131:	ret    
   140006132:	jmp    QWORD PTR [rip+0x1ec8]        # 0x140008000
   140006138:	jmp    QWORD PTR [rip+0x1eca]        # 0x140008008
   14000613e:	jmp    QWORD PTR [rip+0x1ecc]        # 0x140008010
   140006144:	jmp    QWORD PTR [rip+0x1ece]        # 0x140008018
   14000614a:	jmp    QWORD PTR [rip+0x1ed0]        # 0x140008020
   140006150:	jmp    QWORD PTR [rip+0x229a]        # 0x1400083f0
   140006156:	jmp    QWORD PTR [rip+0x20c4]        # 0x140008220
   14000615c:	jmp    QWORD PTR [rip+0x20ce]        # 0x140008230
   140006162:	jmp    QWORD PTR [rip+0x20d0]        # 0x140008238
   140006168:	jmp    QWORD PTR [rip+0x2092]        # 0x140008200
   14000616e:	jmp    QWORD PTR [rip+0x1eec]        # 0x140008060
   140006174:	jmp    QWORD PTR [rip+0x1eee]        # 0x140008068
   14000617a:	int3   
   14000617b:	int3   
   14000617c:	mov    QWORD PTR [rcx],rdx
   14000617f:	mov    QWORD PTR [rcx+0x8],r8
   140006183:	mov    rax,rcx
   140006186:	ret    
   140006187:	int3   
   140006188:	sub    rsp,0x28
   14000618c:	mov    rcx,QWORD PTR [rcx+0x8]
   140006190:	mov    rax,QWORD PTR [rcx]
   140006193:	call   QWORD PTR [rax+0x10]
   140006196:	test   rax,rax
   140006199:	je     0x1400061a9
   14000619b:	mov    r8,QWORD PTR [rax]
   14000619e:	mov    edx,0x1
   1400061a3:	mov    rcx,rax
   1400061a6:	call   QWORD PTR [r8]
   1400061a9:	add    rsp,0x28
   1400061ad:	ret    
   1400061ae:	int3   
   1400061af:	int3   
   1400061b0:	rex push rbx
   1400061b2:	sub    rsp,0x20
   1400061b6:	jmp    0x1400061e7
   1400061b8:	mov    rax,QWORD PTR [rbx]
   1400061bb:	mov    rcx,QWORD PTR [rbx+0x8]
   1400061bf:	mov    QWORD PTR [rip+0x62da],rax        # 0x14000c4a0
   1400061c6:	mov    rax,QWORD PTR [rcx]
   1400061c9:	call   QWORD PTR [rax+0x10]
   1400061cc:	test   rax,rax
   1400061cf:	je     0x1400061df
   1400061d1:	mov    r8,QWORD PTR [rax]
   1400061d4:	mov    edx,0x1
   1400061d9:	mov    rcx,rax
   1400061dc:	call   QWORD PTR [r8]
   1400061df:	mov    rcx,rbx
   1400061e2:	call   0x1400063aa
   1400061e7:	mov    rbx,QWORD PTR [rip+0x62b2]        # 0x14000c4a0
   1400061ee:	test   rbx,rbx
   1400061f1:	jne    0x1400061b8
   1400061f3:	add    rsp,0x20
   1400061f7:	pop    rbx
   1400061f8:	ret    
   1400061f9:	int3   
   1400061fa:	int3   
   1400061fb:	int3   
   1400061fc:	mov    QWORD PTR [rsp+0x8],rbx
   140006201:	push   rdi
   140006202:	sub    rsp,0x20
   140006206:	mov    rbx,rcx
   140006209:	mov    rcx,QWORD PTR [rcx+0x8]
   14000620d:	mov    edi,edx
   14000620f:	mov    rax,QWORD PTR [rcx]
   140006212:	call   QWORD PTR [rax+0x10]
   140006215:	test   rax,rax
   140006218:	je     0x140006228
   14000621a:	mov    r8,QWORD PTR [rax]
   14000621d:	mov    edx,0x1
   140006222:	mov    rcx,rax
   140006225:	call   QWORD PTR [r8]
   140006228:	test   dil,0x1
   14000622c:	je     0x140006236
   14000622e:	mov    rcx,rbx
   140006231:	call   0x1400063aa
   140006236:	mov    rax,rbx
   140006239:	mov    rbx,QWORD PTR [rsp+0x30]
   14000623e:	add    rsp,0x20
   140006242:	pop    rdi
   140006243:	ret    
   140006244:	rex push rbx
   140006246:	sub    rsp,0x20
   14000624a:	mov    rbx,rcx
   14000624d:	mov    ecx,0x10
   140006252:	call   0x1400063a4
   140006257:	test   rax,rax
   14000625a:	je     0x14000626a
   14000625c:	mov    rdx,QWORD PTR [rip+0x623d]        # 0x14000c4a0
   140006263:	mov    QWORD PTR [rax+0x8],rbx
   140006267:	mov    QWORD PTR [rax],rdx
   14000626a:	mov    QWORD PTR [rip+0x622f],rax        # 0x14000c4a0
   140006271:	add    rsp,0x20
   140006275:	pop    rbx
   140006276:	ret    
   140006277:	int3   
   140006278:	jmp    QWORD PTR [rip+0x1df2]        # 0x140008070
   14000627e:	jmp    QWORD PTR [rip+0x1df4]        # 0x140008078
   140006284:	jmp    QWORD PTR [rip+0x1df6]        # 0x140008080
   14000628a:	jmp    QWORD PTR [rip+0x1df8]        # 0x140008088
   140006290:	jmp    QWORD PTR [rip+0x1dfa]        # 0x140008090
   140006296:	jmp    QWORD PTR [rip+0x1dfc]        # 0x140008098
   14000629c:	jmp    QWORD PTR [rip+0x1dfe]        # 0x1400080a0
   1400062a2:	jmp    QWORD PTR [rip+0x1e00]        # 0x1400080a8
   1400062a8:	jmp    QWORD PTR [rip+0x1e02]        # 0x1400080b0
   1400062ae:	jmp    QWORD PTR [rip+0x1e04]        # 0x1400080b8
   1400062b4:	jmp    QWORD PTR [rip+0x1e06]        # 0x1400080c0
   1400062ba:	jmp    QWORD PTR [rip+0x1e08]        # 0x1400080c8
   1400062c0:	jmp    QWORD PTR [rip+0x1e0a]        # 0x1400080d0
   1400062c6:	jmp    QWORD PTR [rip+0x1e0c]        # 0x1400080d8
   1400062cc:	jmp    QWORD PTR [rip+0x1e0e]        # 0x1400080e0
   1400062d2:	jmp    QWORD PTR [rip+0x1e10]        # 0x1400080e8
   1400062d8:	jmp    QWORD PTR [rip+0x1e12]        # 0x1400080f0
   1400062de:	jmp    QWORD PTR [rip+0x1e14]        # 0x1400080f8
   1400062e4:	jmp    QWORD PTR [rip+0x1e16]        # 0x140008100
   1400062ea:	jmp    QWORD PTR [rip+0x1e18]        # 0x140008108
   1400062f0:	jmp    QWORD PTR [rip+0x1e1a]        # 0x140008110
   1400062f6:	jmp    QWORD PTR [rip+0x1e1c]        # 0x140008118
   1400062fc:	jmp    QWORD PTR [rip+0x1e1e]        # 0x140008120
   140006302:	jmp    QWORD PTR [rip+0x1e20]        # 0x140008128
   140006308:	jmp    QWORD PTR [rip+0x1e22]        # 0x140008130
   14000630e:	jmp    QWORD PTR [rip+0x1e24]        # 0x140008138
   140006314:	jmp    QWORD PTR [rip+0x1e26]        # 0x140008140
   14000631a:	jmp    QWORD PTR [rip+0x1e28]        # 0x140008148
   140006320:	jmp    QWORD PTR [rip+0x1e2a]        # 0x140008150
   140006326:	jmp    QWORD PTR [rip+0x1e2c]        # 0x140008158
   14000632c:	jmp    QWORD PTR [rip+0x1e2e]        # 0x140008160
   140006332:	jmp    QWORD PTR [rip+0x1e30]        # 0x140008168
   140006338:	jmp    QWORD PTR [rip+0x1e32]        # 0x140008170
   14000633e:	jmp    QWORD PTR [rip+0x1e34]        # 0x140008178
   140006344:	jmp    QWORD PTR [rip+0x1e36]        # 0x140008180
   14000634a:	jmp    QWORD PTR [rip+0x1e38]        # 0x140008188
   140006350:	jmp    QWORD PTR [rip+0x1e3a]        # 0x140008190
   140006356:	jmp    QWORD PTR [rip+0x1e3c]        # 0x140008198
   14000635c:	jmp    QWORD PTR [rip+0x1e3e]        # 0x1400081a0
   140006362:	jmp    QWORD PTR [rip+0x1e40]        # 0x1400081a8
   140006368:	jmp    QWORD PTR [rip+0x1e42]        # 0x1400081b0
   14000636e:	jmp    QWORD PTR [rip+0x1e44]        # 0x1400081b8
   140006374:	jmp    QWORD PTR [rip+0x1e46]        # 0x1400081c0
   14000637a:	jmp    QWORD PTR [rip+0x1e48]        # 0x1400081c8
   140006380:	jmp    QWORD PTR [rip+0x1e4a]        # 0x1400081d0
   140006386:	jmp    QWORD PTR [rip+0x1e4c]        # 0x1400081d8
   14000638c:	jmp    QWORD PTR [rip+0x1e4e]        # 0x1400081e0
   140006392:	jmp    QWORD PTR [rip+0x1e50]        # 0x1400081e8
   140006398:	jmp    QWORD PTR [rip+0x1e52]        # 0x1400081f0
   14000639e:	jmp    QWORD PTR [rip+0x2034]        # 0x1400083d8
   1400063a4:	jmp    QWORD PTR [rip+0x2036]        # 0x1400083e0
   1400063aa:	jmp    QWORD PTR [rip+0x2020]        # 0x1400083d0
   1400063b0:	rex push rbx
   1400063b2:	sub    rsp,0x20
   1400063b6:	cmp    QWORD PTR [rip+0x614a],0x0        # 0x14000c508
   1400063be:	jne    0x1400063f6
   1400063c0:	mov    edx,0x8
   1400063c5:	lea    ecx,[rdx+0x18]
   1400063c8:	call   QWORD PTR [rip+0x1f42]        # 0x140008310
   1400063ce:	mov    rcx,rax
   1400063d1:	mov    rbx,rax
   1400063d4:	call   QWORD PTR [rip+0x1c6e]        # 0x140008048
   1400063da:	mov    QWORD PTR [rip+0x6127],rax        # 0x14000c508
   1400063e1:	mov    QWORD PTR [rip+0x6118],rax        # 0x14000c500
   1400063e8:	test   rbx,rbx
   1400063eb:	jne    0x1400063f2
   1400063ed:	lea    eax,[rbx+0x18]
   1400063f0:	jmp    0x1400063f8
   1400063f2:	and    QWORD PTR [rbx],0x0
   1400063f6:	xor    eax,eax
   1400063f8:	add    rsp,0x20
   1400063fc:	pop    rbx
   1400063fd:	ret    
   1400063fe:	int3   
   1400063ff:	int3   
   140006400:	rex push rbx
   140006402:	sub    rsp,0x20
   140006406:	mov    rbx,rcx
   140006409:	mov    rcx,QWORD PTR [rip+0x60f8]        # 0x14000c508
   140006410:	call   QWORD PTR [rip+0x1c2a]        # 0x140008040
   140006416:	mov    QWORD PTR [rsp+0x38],rax
   14000641b:	cmp    rax,0xffffffffffffffff
   14000641f:	jne    0x14000642c
   140006421:	mov    rcx,rbx
   140006424:	call   QWORD PTR [rip+0x1efe]        # 0x140008328
   14000642a:	jmp    0x1400064aa
   14000642c:	mov    ecx,0x8
   140006431:	call   0x14000695e
   140006436:	nop
   140006437:	mov    rcx,QWORD PTR [rip+0x60ca]        # 0x14000c508
   14000643e:	call   QWORD PTR [rip+0x1bfc]        # 0x140008040
   140006444:	mov    QWORD PTR [rsp+0x38],rax
   140006449:	mov    rcx,QWORD PTR [rip+0x60b0]        # 0x14000c500
   140006450:	call   QWORD PTR [rip+0x1bea]        # 0x140008040
   140006456:	mov    QWORD PTR [rsp+0x40],rax
   14000645b:	mov    rcx,rbx
   14000645e:	call   QWORD PTR [rip+0x1be4]        # 0x140008048
   140006464:	mov    rcx,rax
   140006467:	lea    r8,[rsp+0x40]
   14000646c:	lea    rdx,[rsp+0x38]
   140006471:	call   0x140006970
   140006476:	mov    rbx,rax
   140006479:	mov    rcx,QWORD PTR [rsp+0x38]
   14000647e:	call   QWORD PTR [rip+0x1bc4]        # 0x140008048
   140006484:	mov    QWORD PTR [rip+0x607d],rax        # 0x14000c508
   14000648b:	mov    rcx,QWORD PTR [rsp+0x40]
   140006490:	call   QWORD PTR [rip+0x1bb2]        # 0x140008048
   140006496:	mov    QWORD PTR [rip+0x6063],rax        # 0x14000c500
   14000649d:	mov    ecx,0x8
   1400064a2:	call   0x140006964
   1400064a7:	mov    rax,rbx
   1400064aa:	add    rsp,0x20
   1400064ae:	pop    rbx
   1400064af:	ret    
   1400064b0:	sub    rsp,0x28
   1400064b4:	call   0x140006400
   1400064b9:	neg    rax
   1400064bc:	sbb    eax,eax
   1400064be:	neg    eax
   1400064c0:	dec    eax
   1400064c2:	add    rsp,0x28
   1400064c6:	ret    
   1400064c7:	int3   
   1400064c8:	jmp    QWORD PTR [rip+0x1efa]        # 0x1400083c8
   1400064ce:	jmp    QWORD PTR [rip+0x1d74]        # 0x140008248
   1400064d4:	jmp    QWORD PTR [rip+0x1d76]        # 0x140008250
   1400064da:	jmp    QWORD PTR [rip+0x1d78]        # 0x140008258
   1400064e0:	jmp    QWORD PTR [rip+0x1d7a]        # 0x140008260
   1400064e6:	jmp    QWORD PTR [rip+0x1d7c]        # 0x140008268
   1400064ec:	jmp    QWORD PTR [rip+0x1d7e]        # 0x140008270
   1400064f2:	jmp    QWORD PTR [rip+0x1d80]        # 0x140008278
   1400064f8:	jmp    QWORD PTR [rip+0x1d82]        # 0x140008280
   1400064fe:	jmp    QWORD PTR [rip+0x1d84]        # 0x140008288
   140006504:	jmp    QWORD PTR [rip+0x1d86]        # 0x140008290
   14000650a:	jmp    QWORD PTR [rip+0x1d88]        # 0x140008298
   140006510:	jmp    QWORD PTR [rip+0x1d8a]        # 0x1400082a0
   140006516:	jmp    QWORD PTR [rip+0x1d8c]        # 0x1400082a8
   14000651c:	jmp    QWORD PTR [rip+0x1d8e]        # 0x1400082b0
   140006522:	jmp    QWORD PTR [rip+0x1d90]        # 0x1400082b8
   140006528:	jmp    QWORD PTR [rip+0x1d92]        # 0x1400082c0
   14000652e:	jmp    QWORD PTR [rip+0x1d94]        # 0x1400082c8
   140006534:	jmp    QWORD PTR [rip+0x1d96]        # 0x1400082d0
   14000653a:	jmp    QWORD PTR [rip+0x1d98]        # 0x1400082d8
   140006540:	jmp    QWORD PTR [rip+0x1d9a]        # 0x1400082e0
   140006546:	jmp    QWORD PTR [rip+0x1d9c]        # 0x1400082e8
   14000654c:	jmp    QWORD PTR [rip+0x1d9e]        # 0x1400082f0
   140006552:	jmp    QWORD PTR [rip+0x1da0]        # 0x1400082f8
   140006558:	lea    rax,[rip+0x2619]        # 0x140008b78
   14000655f:	mov    QWORD PTR [rcx],rax
   140006562:	mov    rax,rcx
   140006565:	ret    
   140006566:	int3   
   140006567:	int3   
   140006568:	mov    rax,rcx
   14000656b:	ret    
   14000656c:	mov    QWORD PTR [rsp+0x8],rbx
   140006571:	mov    QWORD PTR [rsp+0x10],rsi
   140006576:	push   rdi
   140006577:	sub    rsp,0x20
   14000657b:	mov    esi,edx
   14000657d:	mov    rbx,rcx
   140006580:	test   dl,0x2
   140006583:	je     0x1400065b0
   140006585:	lea    rdi,[rcx-0x8]
   140006589:	lea    r9,[rip+0x756]        # 0x140006ce6
   140006590:	mov    edx,0x18
   140006595:	mov    r8d,DWORD PTR [rdi]
   140006598:	call   0x14000697c
   14000659d:	test   sil,0x1
   1400065a1:	je     0x1400065ab
   1400065a3:	mov    rcx,rdi
   1400065a6:	call   0x1400063aa
   1400065ab:	mov    rax,rdi
   1400065ae:	jmp    0x1400065c6
   1400065b0:	call   0x140006ce6
   1400065b5:	test   sil,0x1
   1400065b9:	je     0x1400065c3
   1400065bb:	mov    rcx,rbx
   1400065be:	call   0x1400063aa
   1400065c3:	mov    rax,rbx
   1400065c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400065cb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400065d0:	add    rsp,0x20
   1400065d4:	pop    rdi
   1400065d5:	ret    
   1400065d6:	int3   
   1400065d7:	int3   
   1400065d8:	sub    rsp,0x28
   1400065dc:	mov    eax,0x5a4d
   1400065e1:	cmp    WORD PTR [rip+0xffffffffffff9a18],ax        # 0x140000000
   1400065e8:	je     0x1400065ee
   1400065ea:	xor    ecx,ecx
   1400065ec:	jmp    0x140006626
   1400065ee:	movsxd rax,DWORD PTR [rip+0xffffffffffff9a47]        # 0x14000003c
   1400065f5:	lea    rcx,[rip+0xffffffffffff9a04]        # 0x140000000
   1400065fc:	add    rax,rcx
   1400065ff:	cmp    DWORD PTR [rax],0x4550
   140006605:	jne    0x1400065ea
   140006607:	mov    ecx,0x20b
   14000660c:	cmp    WORD PTR [rax+0x18],cx
   140006610:	jne    0x1400065ea
   140006612:	xor    ecx,ecx
   140006614:	cmp    DWORD PTR [rax+0x84],0xe
   14000661b:	jbe    0x140006626
   14000661d:	cmp    DWORD PTR [rax+0xf8],ecx
   140006623:	setne  cl
   140006626:	mov    DWORD PTR [rip+0x5e8c],ecx        # 0x14000c4b8
   14000662c:	mov    ecx,0x2
   140006631:	call   QWORD PTR [rip+0x1d19]        # 0x140008350
   140006637:	or     rcx,0xffffffffffffffff
   14000663b:	call   QWORD PTR [rip+0x1a07]        # 0x140008048
   140006641:	mov    rcx,QWORD PTR [rip+0x1d58]        # 0x1400083a0
   140006648:	mov    QWORD PTR [rip+0x5eb1],rax        # 0x14000c500
   14000664f:	mov    QWORD PTR [rip+0x5eb2],rax        # 0x14000c508
   140006656:	mov    eax,DWORD PTR [rip+0x5e88]        # 0x14000c4e4
   14000665c:	mov    DWORD PTR [rcx],eax
   14000665e:	mov    rdx,QWORD PTR [rip+0x1d43]        # 0x1400083a8
   140006665:	mov    eax,DWORD PTR [rip+0x5e6d]        # 0x14000c4d8
   14000666b:	mov    DWORD PTR [rdx],eax
   14000666d:	call   0x140006c58
   140006672:	call   0x140006aa8
   140006677:	cmp    DWORD PTR [rip+0x59f6],0x0        # 0x14000c074
   14000667e:	jne    0x14000668d
   140006680:	lea    rcx,[rip+0x5c5]        # 0x140006c4c
   140006687:	call   QWORD PTR [rip+0x1cf3]        # 0x140008380
   14000668d:	cmp    DWORD PTR [rip+0x59e4],0xffffffff        # 0x14000c078
   140006694:	jne    0x14000669f
   140006696:	or     ecx,0xffffffff
   140006699:	call   QWORD PTR [rip+0x1cd9]        # 0x140008378
   14000669f:	xor    eax,eax
   1400066a1:	add    rsp,0x28
   1400066a5:	ret    
   1400066a6:	int3   
   1400066a7:	int3   
   1400066a8:	sub    rsp,0x38
   1400066ac:	lea    rcx,[rip+0x5dd]        # 0x140006c90
   1400066b3:	call   0x1400064b0
   1400066b8:	mov    eax,DWORD PTR [rip+0x5e22]        # 0x14000c4e0
   1400066be:	mov    r9d,DWORD PTR [rip+0x5e17]        # 0x14000c4dc
   1400066c5:	mov    DWORD PTR [rip+0x5e09],eax        # 0x14000c4d4
   1400066cb:	lea    rax,[rip+0x5e02]        # 0x14000c4d4
   1400066d2:	lea    r8,[rip+0x5def]        # 0x14000c4c8
   1400066d9:	lea    rdx,[rip+0x5de0]        # 0x14000c4c0
   1400066e0:	lea    rcx,[rip+0x5dd5]        # 0x14000c4bc
   1400066e7:	mov    QWORD PTR [rsp+0x20],rax
   1400066ec:	call   QWORD PTR [rip+0x1c56]        # 0x140008348
   1400066f2:	mov    DWORD PTR [rip+0x5dd8],eax        # 0x14000c4d0
   1400066f8:	test   eax,eax
   1400066fa:	jns    0x140006706
   1400066fc:	mov    ecx,0x8
   140006701:	call   0x140006aa0
   140006706:	add    rsp,0x38
   14000670a:	ret    
   14000670b:	int3   
   14000670c:	mov    rax,QWORD PTR gs:0x30
   140006715:	ret    
   140006716:	int3   
   140006717:	int3   
   140006718:	sub    rsp,0x28
   14000671c:	call   0x140006ba0
   140006721:	add    rsp,0x28
   140006725:	jmp    0x14000672c
   14000672a:	int3   
   14000672b:	int3   
   14000672c:	mov    rax,rsp
   14000672f:	mov    QWORD PTR [rax+0x8],rbx
   140006733:	mov    QWORD PTR [rax+0x10],rsi
   140006737:	push   rdi
   140006738:	sub    rsp,0x30
   14000673c:	and    QWORD PTR [rax-0x10],0x0
   140006741:	and    DWORD PTR [rax-0x18],0x0
   140006745:	call   QWORD PTR [rip+0x1bed]        # 0x140008338
   14000674b:	movzx  esi,ax
   14000674e:	mov    rcx,QWORD PTR gs:0x30
   140006757:	mov    rdx,QWORD PTR [rcx+0x8]
   14000675b:	xor    ebx,ebx
   14000675d:	xor    eax,eax
   14000675f:	lock cmpxchg QWORD PTR [rip+0x5d80],rdx        # 0x14000c4e8
   140006768:	je     0x140006778
   14000676a:	cmp    rax,rdx
   14000676d:	jne    0x140006776
   14000676f:	mov    ebx,0x1
   140006774:	jmp    0x140006778
   140006776:	jmp    0x14000675d
   140006778:	mov    eax,DWORD PTR [rip+0x5d72]        # 0x14000c4f0
   14000677e:	cmp    eax,0x1
   140006781:	jne    0x14000678d
   140006783:	lea    ecx,[rax+0x1e]
   140006786:	call   0x140006aa0
   14000678b:	jmp    0x1400067cc
   14000678d:	mov    eax,DWORD PTR [rip+0x5d5d]        # 0x14000c4f0
   140006793:	test   eax,eax
   140006795:	jne    0x1400067c2
   140006797:	mov    DWORD PTR [rip+0x5d4f],0x1        # 0x14000c4f0
   1400067a1:	lea    rdx,[rip+0x1cc0]        # 0x140008468
   1400067a8:	lea    rcx,[rip+0x1c99]        # 0x140008448
   1400067af:	call   0x140006cd4
   1400067b4:	test   eax,eax
   1400067b6:	je     0x1400067cc
   1400067b8:	mov    eax,0xff
   1400067bd:	jmp    0x140006904
   1400067c2:	mov    DWORD PTR [rip+0x5ce4],0x1        # 0x14000c4b0
   1400067cc:	mov    eax,DWORD PTR [rip+0x5d1e]        # 0x14000c4f0
   1400067d2:	cmp    eax,0x1
   1400067d5:	jne    0x1400067f4
   1400067d7:	lea    rdx,[rip+0x1c62]        # 0x140008440
   1400067de:	lea    rcx,[rip+0x1c1b]        # 0x140008400
   1400067e5:	call   0x140006cda
   1400067ea:	mov    DWORD PTR [rip+0x5cfc],0x2        # 0x14000c4f0
   1400067f4:	test   ebx,ebx
   1400067f6:	jne    0x140006801
   1400067f8:	xor    eax,eax
   1400067fa:	xchg   QWORD PTR [rip+0x5ce7],rax        # 0x14000c4e8
   140006801:	cmp    QWORD PTR [rip+0x5cef],0x0        # 0x14000c4f8
   140006809:	je     0x14000682d
   14000680b:	lea    rcx,[rip+0x5ce6]        # 0x14000c4f8
   140006812:	call   0x140006b10
   140006817:	test   eax,eax
   140006819:	je     0x14000682d
   14000681b:	xor    r8d,r8d
   14000681e:	lea    edx,[r8+0x2]
   140006822:	xor    ecx,ecx
   140006824:	mov    rax,QWORD PTR [rip+0x5ccd]        # 0x14000c4f8
   14000682b:	call   rax
   14000682d:	mov    rax,QWORD PTR [rip+0x1b64]        # 0x140008398
   140006834:	mov    rbx,QWORD PTR [rax]
   140006837:	mov    QWORD PTR [rsp+0x28],rbx
   14000683c:	mov    edi,DWORD PTR [rsp+0x20]
   140006840:	cmp    BYTE PTR [rbx],0x20
   140006843:	ja     0x1400068a3
   140006845:	cmp    BYTE PTR [rbx],0x0
   140006848:	je     0x14000684e
   14000684a:	test   edi,edi
   14000684c:	jne    0x1400068a3
   14000684e:	mov    al,BYTE PTR [rbx]
   140006850:	dec    al
   140006852:	cmp    al,0x1f
   140006854:	ja     0x140006860
   140006856:	inc    rbx
   140006859:	mov    QWORD PTR [rsp+0x28],rbx
   14000685e:	jmp    0x14000684e
   140006860:	movzx  r9d,si
   140006864:	mov    r8,rbx
   140006867:	xor    edx,edx
   140006869:	lea    rcx,[rip+0xffffffffffff9790]        # 0x140000000
   140006870:	call   0x140005d10
   140006875:	mov    DWORD PTR [rip+0x5c39],eax        # 0x14000c4b4
   14000687b:	cmp    DWORD PTR [rip+0x5c36],0x0        # 0x14000c4b8
   140006882:	jne    0x14000688c
   140006884:	mov    ecx,eax
   140006886:	call   QWORD PTR [rip+0x1acc]        # 0x140008358
   14000688c:	cmp    DWORD PTR [rip+0x5c1d],0x0        # 0x14000c4b0
   140006893:	jne    0x1400068a1
   140006895:	call   QWORD PTR [rip+0x1acd]        # 0x140008368
   14000689b:	mov    eax,DWORD PTR [rip+0x5c13]        # 0x14000c4b4
   1400068a1:	jmp    0x140006904
   1400068a3:	cmp    BYTE PTR [rbx],0x22
   1400068a6:	jne    0x1400068b5
   1400068a8:	xor    eax,eax
   1400068aa:	test   edi,edi
   1400068ac:	sete   al
   1400068af:	mov    edi,eax
   1400068b1:	mov    DWORD PTR [rsp+0x20],eax
   1400068b5:	movzx  ecx,BYTE PTR [rbx]
   1400068b8:	call   QWORD PTR [rip+0x1ab2]        # 0x140008370
   1400068be:	test   eax,eax
   1400068c0:	je     0x1400068ca
   1400068c2:	inc    rbx
   1400068c5:	mov    QWORD PTR [rsp+0x28],rbx
   1400068ca:	inc    rbx
   1400068cd:	mov    QWORD PTR [rsp+0x28],rbx
   1400068d2:	jmp    0x140006840
   1400068d7:	mov    DWORD PTR [rip+0x5bd7],eax        # 0x14000c4b4
   1400068dd:	cmp    DWORD PTR [rip+0x5bd4],0x0        # 0x14000c4b8
   1400068e4:	jne    0x1400068ef
   1400068e6:	mov    ecx,eax
   1400068e8:	call   QWORD PTR [rip+0x1a72]        # 0x140008360
   1400068ee:	int3   
   1400068ef:	cmp    DWORD PTR [rip+0x5bba],0x0        # 0x14000c4b0
   1400068f6:	jne    0x140006904
   1400068f8:	call   QWORD PTR [rip+0x1a6a]        # 0x140008368
   1400068fe:	mov    eax,DWORD PTR [rip+0x5bb0]        # 0x14000c4b4
   140006904:	mov    rbx,QWORD PTR [rsp+0x40]
   140006909:	mov    rsi,QWORD PTR [rsp+0x48]
   14000690e:	add    rsp,0x30
   140006912:	pop    rdi
   140006913:	ret    
   140006914:	mov    eax,0x5a4d
   140006919:	cmp    WORD PTR [rip+0xffffffffffff96e0],ax        # 0x140000000
   140006920:	je     0x140006925
   140006922:	xor    eax,eax
   140006924:	ret    
   140006925:	movsxd rcx,DWORD PTR [rip+0xffffffffffff9710]        # 0x14000003c
   14000692c:	lea    rax,[rip+0xffffffffffff96cd]        # 0x140000000
   140006933:	add    rcx,rax
   140006936:	cmp    DWORD PTR [rcx],0x4550
   14000693c:	jne    0x140006922
   14000693e:	mov    eax,0x20b
   140006943:	cmp    WORD PTR [rcx+0x18],ax
   140006947:	jne    0x140006922
   140006949:	xor    eax,eax
   14000694b:	cmp    DWORD PTR [rcx+0x84],0xe
   140006952:	jbe    0x14000695d
   140006954:	cmp    DWORD PTR [rcx+0xf8],eax
   14000695a:	setne  al
   14000695d:	ret    
   14000695e:	jmp    QWORD PTR [rip+0x199c]        # 0x140008300
   140006964:	jmp    QWORD PTR [rip+0x199e]        # 0x140008308
   14000696a:	jmp    QWORD PTR [rip+0x19a0]        # 0x140008310
   140006970:	jmp    QWORD PTR [rip+0x19a2]        # 0x140008318
   140006976:	jmp    QWORD PTR [rip+0x19a4]        # 0x140008320
   14000697c:	mov    rax,rsp
   14000697f:	mov    QWORD PTR [rax+0x20],r9
   140006983:	mov    DWORD PTR [rax+0x18],r8d
   140006987:	mov    QWORD PTR [rax+0x10],rdx
   14000698b:	push   rbx
   14000698c:	push   rsi
   14000698d:	push   rdi
   14000698e:	push   r14
   140006990:	sub    rsp,0x38
   140006994:	mov    r14,r9
   140006997:	movsxd rdi,r8d
   14000699a:	mov    rsi,rdx
   14000699d:	and    DWORD PTR [rax-0x38],0x0
   1400069a1:	mov    rbx,rdi
   1400069a4:	imul   rbx,rdx
   1400069a8:	add    rbx,rcx
   1400069ab:	mov    QWORD PTR [rax+0x8],rbx
   1400069af:	dec    edi
   1400069b1:	mov    DWORD PTR [rsp+0x70],edi
   1400069b5:	js     0x1400069c7
   1400069b7:	sub    rbx,rsi
   1400069ba:	mov    QWORD PTR [rsp+0x60],rbx
   1400069bf:	mov    rcx,rbx
   1400069c2:	call   r14
   1400069c5:	jmp    0x1400069af
   1400069c7:	mov    DWORD PTR [rsp+0x20],0x1
   1400069cf:	add    rsp,0x38
   1400069d3:	pop    r14
   1400069d5:	pop    rdi
   1400069d6:	pop    rsi
   1400069d7:	pop    rbx
   1400069d8:	ret    
   1400069d9:	int3   
   1400069da:	int3   
   1400069db:	int3   
   1400069dc:	sub    rsp,0x28
   1400069e0:	mov    rax,QWORD PTR [rcx]
   1400069e3:	cmp    DWORD PTR [rax],0xe06d7363
   1400069e9:	je     0x1400069f2
   1400069eb:	xor    eax,eax
   1400069ed:	add    rsp,0x28
   1400069f1:	ret    
   1400069f2:	call   0x140006ce0
   1400069f7:	int3   
   1400069f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400069fd:	mov    DWORD PTR [rsp+0x18],r8d
   140006a02:	mov    QWORD PTR [rsp+0x8],rcx
   140006a07:	push   rsi
   140006a08:	push   rdi
   140006a09:	push   r14
   140006a0b:	sub    rsp,0x40
   140006a0f:	mov    rsi,r9
   140006a12:	mov    edi,r8d
   140006a15:	mov    r14,rdx
   140006a18:	mov    rbx,rcx
   140006a1b:	dec    edi
   140006a1d:	mov    DWORD PTR [rsp+0x70],edi
   140006a21:	js     0x140006a32
   140006a23:	sub    rbx,r14
   140006a26:	mov    QWORD PTR [rsp+0x60],rbx
   140006a2b:	mov    rcx,rbx
   140006a2e:	call   rsi
   140006a30:	jmp    0x140006a1b
   140006a32:	jmp    0x140006a34
   140006a34:	mov    rbx,QWORD PTR [rsp+0x68]
   140006a39:	add    rsp,0x40
   140006a3d:	pop    r14
   140006a3f:	pop    rdi
   140006a40:	pop    rsi
   140006a41:	ret    
   140006a42:	int3   
   140006a43:	int3   
   140006a44:	sub    rsp,0x28
   140006a48:	mov    rax,QWORD PTR [rcx]
   140006a4b:	cmp    DWORD PTR [rax],0xe06d7363
   140006a51:	jne    0x140006a6f
   140006a53:	cmp    DWORD PTR [rax+0x18],0x4
   140006a57:	jne    0x140006a6f
   140006a59:	mov    ecx,DWORD PTR [rax+0x20]
   140006a5c:	lea    eax,[rcx-0x19930520]
   140006a62:	cmp    eax,0x2
   140006a65:	jbe    0x140006a76
   140006a67:	cmp    ecx,0x1994000
   140006a6d:	je     0x140006a76
   140006a6f:	xor    eax,eax
   140006a71:	add    rsp,0x28
   140006a75:	ret    
   140006a76:	call   0x140006ce0
   140006a7b:	int3   
   140006a7c:	sub    rsp,0x28
   140006a80:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140006a44
   140006a87:	call   0x140006cec
   140006a8c:	xor    eax,eax
   140006a8e:	add    rsp,0x28
   140006a92:	ret    
   140006a93:	int3   
   140006a94:	jmp    QWORD PTR [rip+0x1896]        # 0x140008330
   140006a9a:	jmp    QWORD PTR [rip+0x1898]        # 0x140008338
   140006aa0:	jmp    QWORD PTR [rip+0x189a]        # 0x140008340
   140006aa6:	int3   
   140006aa7:	int3   
   140006aa8:	xor    eax,eax
   140006aaa:	ret    
   140006aab:	int3   
   140006aac:	jmp    QWORD PTR [rip+0x1896]        # 0x140008348
   140006ab2:	jmp    QWORD PTR [rip+0x1898]        # 0x140008350
   140006ab8:	int3   
   140006ab9:	int3   
   140006aba:	int3   
   140006abb:	int3   
   140006abc:	int3   
   140006abd:	int3   
   140006abe:	int3   
   140006abf:	int3   
   140006ac0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140006ac4:	xor    r9d,r9d
   140006ac7:	mov    r10,rdx
   140006aca:	add    r8,rcx
   140006acd:	movzx  eax,WORD PTR [r8+0x14]
   140006ad2:	movzx  r11d,WORD PTR [r8+0x6]
   140006ad7:	add    rax,0x18
   140006adb:	add    rax,r8
   140006ade:	test   r11d,r11d
   140006ae1:	je     0x140006b01
   140006ae3:	mov    edx,DWORD PTR [rax+0xc]
   140006ae6:	cmp    r10,rdx
   140006ae9:	jb     0x140006af5
   140006aeb:	mov    ecx,DWORD PTR [rax+0x8]
   140006aee:	add    ecx,edx
   140006af0:	cmp    r10,rcx
   140006af3:	jb     0x140006b03
   140006af5:	inc    r9d
   140006af8:	add    rax,0x28
   140006afc:	cmp    r9d,r11d
   140006aff:	jb     0x140006ae3
   140006b01:	xor    eax,eax
   140006b03:	ret    
   140006b04:	int3   
   140006b05:	int3   
   140006b06:	int3   
   140006b07:	int3   
   140006b08:	int3   
   140006b09:	int3   
   140006b0a:	int3   
   140006b0b:	int3   
   140006b0c:	int3   
   140006b0d:	int3   
   140006b0e:	int3   
   140006b0f:	int3   
   140006b10:	mov    QWORD PTR [rsp+0x8],rbx
   140006b15:	push   rdi
   140006b16:	sub    rsp,0x20
   140006b1a:	mov    rbx,rcx
   140006b1d:	lea    rdi,[rip+0xffffffffffff94dc]        # 0x140000000
   140006b24:	mov    rcx,rdi
   140006b27:	call   0x140006b60
   140006b2c:	test   eax,eax
   140006b2e:	je     0x140006b52
   140006b30:	sub    rbx,rdi
   140006b33:	mov    rdx,rbx
   140006b36:	mov    rcx,rdi
   140006b39:	call   0x140006ac0
   140006b3e:	test   rax,rax
   140006b41:	je     0x140006b52
   140006b43:	mov    eax,DWORD PTR [rax+0x24]
   140006b46:	shr    eax,0x1f
   140006b49:	not    eax
   140006b4b:	and    eax,0x1
   140006b4e:	jmp    0x140006b52
   140006b50:	xor    eax,eax
   140006b52:	mov    rbx,QWORD PTR [rsp+0x30]
   140006b57:	add    rsp,0x20
   140006b5b:	pop    rdi
   140006b5c:	ret    
   140006b5d:	int3   
   140006b5e:	int3   
   140006b5f:	int3   
   140006b60:	mov    rax,rcx
   140006b63:	mov    ecx,0x5a4d
   140006b68:	cmp    WORD PTR [rax],cx
   140006b6b:	je     0x140006b70
   140006b6d:	xor    eax,eax
   140006b6f:	ret    
   140006b70:	movsxd rcx,DWORD PTR [rax+0x3c]
   140006b74:	add    rcx,rax
   140006b77:	xor    eax,eax
   140006b79:	cmp    DWORD PTR [rcx],0x4550
   140006b7f:	jne    0x140006b8d
   140006b81:	mov    edx,0x20b
   140006b86:	cmp    WORD PTR [rcx+0x18],dx
   140006b8a:	sete   al
   140006b8d:	ret    
   140006b8e:	jmp    QWORD PTR [rip+0x17c4]        # 0x140008358
   140006b94:	jmp    QWORD PTR [rip+0x17c6]        # 0x140008360
   140006b9a:	jmp    QWORD PTR [rip+0x17c8]        # 0x140008368
   140006ba0:	mov    QWORD PTR [rsp+0x20],rbx
   140006ba5:	push   rbp
   140006ba6:	mov    rbp,rsp
   140006ba9:	sub    rsp,0x20
   140006bad:	mov    rax,QWORD PTR [rip+0x54cc]        # 0x14000c080
   140006bb4:	and    QWORD PTR [rbp+0x18],0x0
   140006bb9:	movabs rbx,0x2b992ddfa232
   140006bc3:	cmp    rax,rbx
   140006bc6:	jne    0x140006c37
   140006bc8:	lea    rcx,[rbp+0x18]
   140006bcc:	call   QWORD PTR [rip+0x147e]        # 0x140008050
   140006bd2:	mov    rax,QWORD PTR [rbp+0x18]
   140006bd6:	mov    QWORD PTR [rbp+0x10],rax
   140006bda:	call   QWORD PTR [rip+0x1448]        # 0x140008028
   140006be0:	mov    eax,eax
   140006be2:	xor    QWORD PTR [rbp+0x10],rax
   140006be6:	call   QWORD PTR [rip+0x1444]        # 0x140008030
   140006bec:	lea    rcx,[rbp+0x20]
   140006bf0:	mov    eax,eax
   140006bf2:	xor    QWORD PTR [rbp+0x10],rax
   140006bf6:	call   QWORD PTR [rip+0x143c]        # 0x140008038
   140006bfc:	mov    eax,DWORD PTR [rbp+0x20]
   140006bff:	shl    rax,0x20
   140006c03:	lea    rcx,[rbp+0x10]
   140006c07:	xor    rax,QWORD PTR [rbp+0x20]
   140006c0b:	xor    rax,QWORD PTR [rbp+0x10]
   140006c0f:	xor    rax,rcx
   140006c12:	movabs rcx,0xffffffffffff
   140006c1c:	and    rax,rcx
   140006c1f:	movabs rcx,0x2b992ddfa233
   140006c29:	cmp    rax,rbx
   140006c2c:	cmove  rax,rcx
   140006c30:	mov    QWORD PTR [rip+0x5449],rax        # 0x14000c080
   140006c37:	mov    rbx,QWORD PTR [rsp+0x48]
   140006c3c:	not    rax
   140006c3f:	mov    QWORD PTR [rip+0x5442],rax        # 0x14000c088
   140006c46:	add    rsp,0x20
   140006c4a:	pop    rbp
   140006c4b:	ret    
   140006c4c:	xor    eax,eax
   140006c4e:	ret    
   140006c4f:	int3   
   140006c50:	jmp    QWORD PTR [rip+0x171a]        # 0x140008370
   140006c56:	int3   
   140006c57:	int3   
   140006c58:	mov    QWORD PTR [rsp+0x8],rbx
   140006c5d:	push   rdi
   140006c5e:	sub    rsp,0x20
   140006c62:	lea    rbx,[rip+0x2787]        # 0x1400093f0
   140006c69:	lea    rdi,[rip+0x2780]        # 0x1400093f0
   140006c70:	jmp    0x140006c80
   140006c72:	mov    rax,QWORD PTR [rbx]
   140006c75:	test   rax,rax
   140006c78:	je     0x140006c7c
   140006c7a:	call   rax
   140006c7c:	add    rbx,0x8
   140006c80:	cmp    rbx,rdi
   140006c83:	jb     0x140006c72
   140006c85:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c8a:	add    rsp,0x20
   140006c8e:	pop    rdi
   140006c8f:	ret    
   140006c90:	mov    QWORD PTR [rsp+0x8],rbx
   140006c95:	push   rdi
   140006c96:	sub    rsp,0x20
   140006c9a:	lea    rbx,[rip+0x275f]        # 0x140009400
   140006ca1:	lea    rdi,[rip+0x2758]        # 0x140009400
   140006ca8:	jmp    0x140006cb8
   140006caa:	mov    rax,QWORD PTR [rbx]
   140006cad:	test   rax,rax
   140006cb0:	je     0x140006cb4
   140006cb2:	call   rax
   140006cb4:	add    rbx,0x8
   140006cb8:	cmp    rbx,rdi
   140006cbb:	jb     0x140006caa
   140006cbd:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cc2:	add    rsp,0x20
   140006cc6:	pop    rdi
   140006cc7:	ret    
   140006cc8:	jmp    QWORD PTR [rip+0x16aa]        # 0x140008378
   140006cce:	jmp    QWORD PTR [rip+0x16ac]        # 0x140008380
   140006cd4:	jmp    QWORD PTR [rip+0x16ae]        # 0x140008388
   140006cda:	jmp    QWORD PTR [rip+0x16b0]        # 0x140008390
   140006ce0:	jmp    QWORD PTR [rip+0x16ca]        # 0x1400083b0
   140006ce6:	jmp    QWORD PTR [rip+0x16cc]        # 0x1400083b8
   140006cec:	jmp    QWORD PTR [rip+0x16ce]        # 0x1400083c0
   140006cf2:	jmp    QWORD PTR [rip+0x1350]        # 0x140008048
   140006cf8:	jmp    QWORD PTR [rip+0x1342]        # 0x140008040
   140006cfe:	jmp    QWORD PTR [rip+0x1334]        # 0x140008038
   140006d04:	jmp    QWORD PTR [rip+0x1326]        # 0x140008030
   140006d0a:	jmp    QWORD PTR [rip+0x1318]        # 0x140008028
   140006d10:	jmp    QWORD PTR [rip+0x133a]        # 0x140008050
   140006d16:	int3   
   140006d17:	int3   
   140006d18:	int3   
   140006d19:	int3   
   140006d1a:	int3   
   140006d1b:	int3   
   140006d1c:	int3   
   140006d1d:	int3   
   140006d1e:	int3   
   140006d1f:	int3   
   140006d20:	lea    rcx,[rdx+0x28]
   140006d27:	jmp    0x1400025c0
   140006d2c:	lea    rcx,[rdx+0x28]
   140006d33:	jmp    0x140002650
   140006d38:	mov    QWORD PTR [rsp+0x10],rdx
   140006d3d:	push   rbp
   140006d3e:	sub    rsp,0x20
   140006d42:	mov    rbp,rdx
   140006d45:	mov    rdx,QWORD PTR [rbp+0x70]
   140006d49:	mov    rax,QWORD PTR [rdx]
   140006d4c:	movsxd rcx,DWORD PTR [rax+0x4]
   140006d50:	add    rcx,rdx
   140006d53:	mov    r8b,0x1
   140006d56:	mov    edx,0x4
   140006d5b:	call   QWORD PTR [rip+0x13bf]        # 0x140008120
   140006d61:	nop
   140006d62:	lea    rax,[rip+0xffffffffffffa499]        # 0x140001202
   140006d69:	add    rsp,0x20
   140006d6d:	pop    rbp
   140006d6e:	ret    
   140006d6f:	int3   
   140006d70:	lea    rcx,[rdx+0x28]
   140006d77:	jmp    0x1400025c0
   140006d7c:	lea    rcx,[rdx+0x28]
   140006d83:	jmp    0x140002650
   140006d88:	mov    QWORD PTR [rsp+0x10],rdx
   140006d8d:	push   rbp
   140006d8e:	sub    rsp,0x20
   140006d92:	mov    rbp,rdx
   140006d95:	mov    rdx,QWORD PTR [rbp+0x70]
   140006d99:	mov    rax,QWORD PTR [rdx]
   140006d9c:	movsxd rcx,DWORD PTR [rax+0x4]
   140006da0:	add    rcx,rdx
   140006da3:	mov    r8b,0x1
   140006da6:	mov    edx,0x4
   140006dab:	call   QWORD PTR [rip+0x136f]        # 0x140008120
   140006db1:	nop
   140006db2:	lea    rax,[rip+0xffffffffffffa5f3]        # 0x1400013ac
   140006db9:	add    rsp,0x20
   140006dbd:	pop    rbp
   140006dbe:	ret    
   140006dbf:	int3   
   140006dc0:	lea    rcx,[rdx+0x28]
   140006dc7:	jmp    0x1400025c0
   140006dcc:	lea    rcx,[rdx+0x28]
   140006dd3:	jmp    0x140002650
   140006dd8:	mov    QWORD PTR [rsp+0x10],rdx
   140006ddd:	push   rbp
   140006dde:	sub    rsp,0x20
   140006de2:	mov    rbp,rdx
   140006de5:	mov    rdx,QWORD PTR [rbp+0x70]
   140006de9:	mov    rax,QWORD PTR [rdx]
   140006dec:	movsxd rcx,DWORD PTR [rax+0x4]
   140006df0:	add    rcx,rdx
   140006df3:	mov    r8b,0x1
   140006df6:	mov    edx,0x4
   140006dfb:	call   QWORD PTR [rip+0x131f]        # 0x140008120
   140006e01:	nop
   140006e02:	lea    rax,[rip+0xffffffffffffa790]        # 0x140001599
   140006e09:	add    rsp,0x20
   140006e0d:	pop    rbp
   140006e0e:	ret    
   140006e0f:	int3   
   140006e10:	rex push rbp
   140006e12:	sub    rsp,0x20
   140006e16:	mov    rbp,rdx
   140006e19:	mov    eax,DWORD PTR [rbp+0x20]
   140006e1c:	and    eax,0x1
   140006e1f:	test   eax,eax
   140006e21:	je     0x140006e30
   140006e23:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140006e27:	mov    rcx,QWORD PTR [rbp+0x40]
   140006e2b:	call   0x140002500
   140006e30:	add    rsp,0x20
   140006e34:	pop    rbp
   140006e35:	ret    
   140006e36:	int3   
   140006e37:	int3   
   140006e38:	int3   
   140006e39:	int3   
   140006e3a:	int3   
   140006e3b:	int3   
   140006e3c:	int3   
   140006e3d:	int3   
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	rex push rbp
   140006e42:	sub    rsp,0x20
   140006e46:	mov    rbp,rdx
   140006e49:	mov    eax,DWORD PTR [rbp+0x20]
   140006e4c:	and    eax,0x1
   140006e4f:	test   eax,eax
   140006e51:	je     0x140006e60
   140006e53:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140006e57:	mov    rcx,QWORD PTR [rbp+0x50]
   140006e5b:	call   0x140002500
   140006e60:	add    rsp,0x20
   140006e64:	pop    rbp
   140006e65:	ret    
   140006e66:	int3   
   140006e67:	int3   
   140006e68:	int3   
   140006e69:	int3   
   140006e6a:	int3   
   140006e6b:	int3   
   140006e6c:	int3   
   140006e6d:	int3   
   140006e6e:	int3   
   140006e6f:	int3   
   140006e70:	lea    rcx,[rdx+0x30]
   140006e77:	jmp    0x1400025a0
   140006e7c:	lea    rcx,[rdx+0x30]
   140006e83:	jmp    0x140002630
   140006e88:	mov    QWORD PTR [rsp+0x10],rdx
   140006e8d:	push   rbp
   140006e8e:	sub    rsp,0x20
   140006e92:	mov    rbp,rdx
   140006e95:	mov    rdx,QWORD PTR [rbp+0x70]
   140006e99:	mov    rax,QWORD PTR [rdx]
   140006e9c:	movsxd rcx,DWORD PTR [rax+0x4]
   140006ea0:	add    rcx,rdx
   140006ea3:	mov    r8b,0x1
   140006ea6:	mov    edx,0x4
   140006eab:	call   QWORD PTR [rip+0x126f]        # 0x140008120
   140006eb1:	nop
   140006eb2:	lea    rax,[rip+0xffffffffffffac95]        # 0x140001b4e
   140006eb9:	add    rsp,0x20
   140006ebd:	pop    rbp
   140006ebe:	ret    
   140006ebf:	int3   
   140006ec0:	lea    rcx,[rdx+0x50]
   140006ec7:	rex.W jmp QWORD PTR [rip+0x1362]        # 0x140008230
   140006ece:	int3   
   140006ecf:	int3   
   140006ed0:	mov    rcx,QWORD PTR [rdx+0x40]
   140006ed7:	rex.W jmp QWORD PTR [rip+0x11ea]        # 0x1400080c8
   140006ede:	int3   
   140006edf:	int3   
   140006ee0:	rex push rbp
   140006ee2:	sub    rsp,0x20
   140006ee6:	mov    rbp,rdx
   140006ee9:	mov    eax,DWORD PTR [rbp+0x60]
   140006eec:	and    eax,0x1
   140006eef:	test   eax,eax
   140006ef1:	je     0x140006f08
   140006ef3:	and    DWORD PTR [rbp+0x60],0xfffffffe
   140006ef7:	mov    rcx,QWORD PTR [rbp+0x50]
   140006efb:	add    rcx,0xb0
   140006f02:	call   QWORD PTR [rip+0x1208]        # 0x140008110
   140006f08:	add    rsp,0x20
   140006f0c:	pop    rbp
   140006f0d:	ret    
   140006f0e:	mov    rcx,QWORD PTR [rdx+0x50]
   140006f15:	add    rcx,0x18
   140006f19:	rex.W jmp QWORD PTR [rip+0x1258]        # 0x140008178
   140006f20:	mov    rcx,QWORD PTR [rdx+0x28]
   140006f27:	rex.W jmp QWORD PTR [rip+0x119a]        # 0x1400080c8
   140006f2e:	mov    rcx,QWORD PTR [rdx+0x50]
   140006f35:	add    rcx,0x10
   140006f39:	jmp    0x1400023d0
   140006f3e:	int3   
   140006f3f:	int3   
   140006f40:	rex push rbp
   140006f42:	sub    rsp,0x20
   140006f46:	mov    rbp,rdx
   140006f49:	mov    eax,DWORD PTR [rbp+0x48]
   140006f4c:	and    eax,0x1
   140006f4f:	test   eax,eax
   140006f51:	je     0x140006f68
   140006f53:	and    DWORD PTR [rbp+0x48],0xfffffffe
   140006f57:	mov    rcx,QWORD PTR [rbp+0x40]
   140006f5b:	add    rcx,0xa8
   140006f62:	call   QWORD PTR [rip+0x11a8]        # 0x140008110
   140006f68:	add    rsp,0x20
   140006f6c:	pop    rbp
   140006f6d:	ret    
   140006f6e:	mov    rcx,QWORD PTR [rdx+0x40]
   140006f75:	add    rcx,0x10
   140006f79:	rex.W jmp QWORD PTR [rip+0x11b8]        # 0x140008138
   140006f80:	mov    rcx,QWORD PTR [rdx+0x50]
   140006f87:	rex.W jmp QWORD PTR [rip+0x113a]        # 0x1400080c8
   140006f8e:	int3   
   140006f8f:	int3   
   140006f90:	mov    rcx,QWORD PTR [rdx+0x40]
   140006f97:	jmp    0x1400025a0
   140006f9c:	int3   
   140006f9d:	int3   
   140006f9e:	int3   
   140006f9f:	int3   
   140006fa0:	mov    rcx,QWORD PTR [rdx+0x40]
   140006fa7:	jmp    0x1400025c0
   140006fac:	int3   
   140006fad:	int3   
   140006fae:	int3   
   140006faf:	int3   
   140006fb0:	lea    rcx,[rdx+0x48]
   140006fb7:	jmp    0x140002540
   140006fbc:	int3   
   140006fbd:	int3   
   140006fbe:	int3   
   140006fbf:	int3   
   140006fc0:	mov    QWORD PTR [rsp+0x10],rdx
   140006fc5:	push   rbp
   140006fc6:	sub    rsp,0x20
   140006fca:	mov    rbp,rdx
   140006fcd:	mov    rcx,QWORD PTR [rbp+0x40]
   140006fd1:	call   0x140003530
   140006fd6:	xor    edx,edx
   140006fd8:	xor    ecx,ecx
   140006fda:	call   0x140006540
   140006fdf:	nop
   140006fe0:	mov    QWORD PTR [rsp+0x10],rdx
   140006fe5:	push   rbp
   140006fe6:	sub    rsp,0x20
   140006fea:	mov    rbp,rdx
   140006fed:	mov    rcx,QWORD PTR [rbp+0x68]
   140006ff1:	mov    QWORD PTR [rbp+0x68],rcx
   140006ff5:	xor    eax,eax
   140006ff7:	inc    rcx
   140006ffa:	je     0x140007012
   140006ffc:	cmp    rcx,0xffffffffffffffff
   140007000:	ja     0x14000700c
   140007002:	call   0x1400063a4
   140007007:	test   rax,rax
   14000700a:	jne    0x140007012
   14000700c:	call   QWORD PTR [rip+0x11ee]        # 0x140008200
   140007012:	mov    QWORD PTR [rbp+0x78],rax
   140007016:	lea    rax,[rip+0xffffffffffffbe89]        # 0x140002ea6
   14000701d:	add    rsp,0x20
   140007021:	pop    rbp
   140007022:	ret    
   140007023:	int3   
   140007024:	mov    QWORD PTR [rsp+0x10],rdx
   140007029:	push   rbx
   14000702a:	push   rbp
   14000702b:	sub    rsp,0x28
   14000702f:	mov    rbp,rdx
   140007032:	mov    rbx,QWORD PTR [rbp+0x60]
   140007036:	cmp    QWORD PTR [rbx+0x18],0x10
   14000703b:	jb     0x140007045
   14000703d:	mov    rcx,QWORD PTR [rbx]
   140007040:	call   0x1400063aa
   140007045:	mov    QWORD PTR [rbx+0x18],0xf
   14000704d:	mov    QWORD PTR [rbx+0x10],0x0
   140007055:	mov    BYTE PTR [rbx],0x0
   140007058:	xor    edx,edx
   14000705a:	xor    ecx,ecx
   14000705c:	call   0x140006540
   140007061:	nop
   140007062:	int3   
   140007063:	int3   
   140007064:	int3   
   140007065:	int3   
   140007066:	int3   
   140007067:	int3   
   140007068:	int3   
   140007069:	int3   
   14000706a:	int3   
   14000706b:	int3   
   14000706c:	int3   
   14000706d:	int3   
   14000706e:	int3   
   14000706f:	int3   
   140007070:	lea    rcx,[rdx+0x38]
   140007077:	jmp    0x140002500
   14000707c:	int3   
   14000707d:	int3   
   14000707e:	int3   
   14000707f:	int3   
   140007080:	lea    rcx,[rdx+0x40]
   140007087:	jmp    0x140002600
   14000708c:	int3   
   14000708d:	int3   
   14000708e:	int3   
   14000708f:	int3   
   140007090:	lea    rcx,[rdx+0x50]
   140007097:	jmp    0x140002500
   14000709c:	int3   
   14000709d:	int3   
   14000709e:	int3   
   14000709f:	int3   
   1400070a0:	lea    rcx,[rdx+0x1b0]
   1400070a7:	jmp    0x140002860
   1400070ac:	lea    rcx,[rdx+0x3d0]
   1400070b3:	jmp    0x140002570
   1400070b8:	lea    rcx,[rdx+0x440]
   1400070bf:	rex.W jmp QWORD PTR [rip+0x10a2]        # 0x140008168
   1400070c6:	lea    rcx,[rdx+0x2c0]
   1400070cd:	jmp    0x1400028e0
   1400070d2:	lea    rcx,[rdx+0x30]
   1400070d9:	jmp    0x140002500
   1400070de:	lea    rcx,[rdx+0xa0]
   1400070e5:	jmp    0x140002860
   1400070ea:	lea    rcx,[rdx+0x80]
   1400070f1:	jmp    0x140002500
   1400070f6:	mov    QWORD PTR [rsp+0x10],rdx
   1400070fb:	push   rbx
   1400070fc:	push   rbp
   1400070fd:	sub    rsp,0x38
   140007101:	mov    rbp,rdx
   140007104:	mov    rcx,QWORD PTR [rbp+0x70]
   140007108:	mov    rax,QWORD PTR [rcx]
   14000710b:	call   QWORD PTR [rax+0x8]
   14000710e:	mov    rbx,rax
   140007111:	lea    rdx,[rip+0x1988]        # 0x140008aa0
   140007118:	lea    rcx,[rbp+0x2c0]
   14000711f:	call   0x140001430
   140007124:	mov    rcx,rax
   140007127:	mov    dl,0x22
   140007129:	call   0x140001270
   14000712e:	mov    rcx,rax
   140007131:	lea    rdx,[rbp+0x30]
   140007135:	call   0x1400010a0
   14000713a:	mov    rcx,rax
   14000713d:	mov    dl,0x22
   14000713f:	call   0x140001270
   140007144:	mov    rcx,rax
   140007147:	lea    rdx,[rip+0xffffffffffffa892]        # 0x1400019e0
   14000714e:	call   QWORD PTR [rip+0xff4]        # 0x140008148
   140007154:	mov    rcx,rax
   140007157:	mov    rdx,rbx
   14000715a:	call   0x140001430
   14000715f:	mov    rcx,rax
   140007162:	lea    rdx,[rip+0xffffffffffffa877]        # 0x1400019e0
   140007169:	call   QWORD PTR [rip+0xfd9]        # 0x140008148
   14000716f:	nop
   140007170:	lea    rax,[rip+0xffffffffffffdcec]        # 0x140004e63
   140007177:	add    rsp,0x38
   14000717b:	pop    rbp
   14000717c:	pop    rbx
   14000717d:	ret    
   14000717e:	int3   
   14000717f:	mov    QWORD PTR [rsp+0x10],rdx
   140007184:	push   rbp
   140007185:	sub    rsp,0x30
   140007189:	mov    rbp,rdx
   14000718c:	lea    rdx,[rip+0x190d]        # 0x140008aa0
   140007193:	lea    rcx,[rbp+0x2c0]
   14000719a:	call   0x140001430
   14000719f:	mov    rcx,rax
   1400071a2:	mov    dl,0x22
   1400071a4:	call   0x140001270
   1400071a9:	mov    rcx,rax
   1400071ac:	lea    rdx,[rbp+0x30]
   1400071b0:	call   0x1400010a0
   1400071b5:	mov    rcx,rax
   1400071b8:	mov    dl,0x22
   1400071ba:	call   0x140001270
   1400071bf:	mov    rcx,rax
   1400071c2:	lea    rdx,[rip+0xffffffffffffa817]        # 0x1400019e0
   1400071c9:	call   QWORD PTR [rip+0xf79]        # 0x140008148
   1400071cf:	nop
   1400071d0:	lea    rax,[rip+0xffffffffffffdc8c]        # 0x140004e63
   1400071d7:	add    rsp,0x30
   1400071db:	pop    rbp
   1400071dc:	ret    
   1400071dd:	int3   
   1400071de:	int3   
   1400071df:	int3   
   1400071e0:	lea    rcx,[rdx+0x50]
   1400071e7:	jmp    0x140002500
   1400071ec:	int3   
   1400071ed:	int3   
   1400071ee:	int3   
   1400071ef:	int3   
   1400071f0:	lea    rcx,[rdx+0x68]
   1400071f7:	jmp    0x140002500
   1400071fc:	lea    rcx,[rdx+0x28]
   140007203:	jmp    0x140002500
   140007208:	lea    rcx,[rdx+0x48]
   14000720f:	jmp    0x140002500
   140007214:	int3   
   140007215:	int3   
   140007216:	int3   
   140007217:	int3   
   140007218:	int3   
   140007219:	int3   
   14000721a:	int3   
   14000721b:	int3   
   14000721c:	int3   
   14000721d:	int3   
   14000721e:	int3   
   14000721f:	int3   
   140007220:	lea    rcx,[rdx+0x60]
   140007227:	jmp    0x140002500
   14000722c:	lea    rcx,[rdx+0x20]
   140007233:	jmp    0x140002500
   140007238:	lea    rcx,[rdx+0x40]
   14000723f:	jmp    0x140002500
   140007244:	rex push rbp
   140007246:	sub    rsp,0x20
   14000724a:	mov    rbp,rdx
   14000724d:	mov    ecx,0x8
   140007252:	call   0x140006964
   140007257:	nop
   140007258:	add    rsp,0x20
   14000725c:	pop    rbp
   14000725d:	ret    
   14000725e:	int3   
   14000725f:	rex push rbp
   140007261:	sub    rsp,0x20
   140007265:	mov    rbp,rdx
   140007268:	mov    rax,QWORD PTR [rcx]
   14000726b:	mov    rdx,rcx
   14000726e:	mov    ecx,DWORD PTR [rax]
   140007270:	call   0x140006a94
   140007275:	nop
   140007276:	add    rsp,0x20
   14000727a:	pop    rbp
   14000727b:	ret    
   14000727c:	int3   
   14000727d:	rex push rbp
   14000727f:	sub    rsp,0x20
   140007283:	mov    rbp,rdx
   140007286:	cmp    DWORD PTR [rbp+0x20],0x0
   14000728a:	jne    0x1400072a2
   14000728c:	mov    r9,QWORD PTR [rbp+0x78]
   140007290:	mov    r8d,DWORD PTR [rbp+0x70]
   140007294:	mov    rdx,QWORD PTR [rbp+0x68]
   140007298:	mov    rcx,QWORD PTR [rbp+0x60]
   14000729c:	call   0x1400069f8
   1400072a1:	nop
   1400072a2:	add    rsp,0x20
   1400072a6:	pop    rbp
   1400072a7:	ret    
   1400072a8:	int3   
   1400072a9:	rex push rbp
   1400072ab:	sub    rsp,0x20
   1400072af:	mov    rbp,rdx
   1400072b2:	mov    QWORD PTR [rbp+0x38],rcx
   1400072b6:	mov    QWORD PTR [rbp+0x28],rcx
   1400072ba:	mov    rax,QWORD PTR [rbp+0x28]
   1400072be:	mov    rcx,QWORD PTR [rax]
   1400072c1:	mov    QWORD PTR [rbp+0x30],rcx
   1400072c5:	mov    rax,QWORD PTR [rbp+0x30]
   1400072c9:	cmp    DWORD PTR [rax],0xe06d7363
   1400072cf:	je     0x1400072dd
   1400072d1:	mov    DWORD PTR [rbp+0x20],0x0
   1400072d8:	mov    eax,DWORD PTR [rbp+0x20]
   1400072db:	jmp    0x1400072e3
   1400072dd:	call   0x140006ce0
   1400072e2:	nop
   1400072e3:	add    rsp,0x20
   1400072e7:	pop    rbp
   1400072e8:	ret    
   1400072e9:	int3   
   1400072ea:	int3   
   1400072eb:	int3   
   1400072ec:	int3   
   1400072ed:	int3   
   1400072ee:	int3   
   1400072ef:	int3   
   1400072f0:	rex push rbp
   1400072f2:	sub    rsp,0x20
   1400072f6:	mov    rbp,rdx
   1400072f9:	mov    rax,QWORD PTR [rcx]
   1400072fc:	xor    ecx,ecx
   1400072fe:	cmp    DWORD PTR [rax],0xc0000005
   140007304:	sete   cl
   140007307:	mov    eax,ecx
   140007309:	add    rsp,0x20
   14000730d:	pop    rbp
   14000730e:	ret    
   14000730f:	int3   
   140007310:	lea    rax,[rip+0x1519]        # 0x140008830
   140007317:	mov    QWORD PTR [rip+0x4ce2],rax        # 0x14000c000
   14000731e:	ret    
   14000731f:	int3   
   140007320:	lea    rax,[rip+0x1509]        # 0x140008830
   140007327:	mov    QWORD PTR [rip+0x4cda],rax        # 0x14000c008
   14000732e:	ret    
   14000732f:	int3   
   140007330:	lea    rax,[rip+0x14f9]        # 0x140008830
   140007337:	mov    QWORD PTR [rip+0x4cd2],rax        # 0x14000c010
   14000733e:	ret    
   14000733f:	int3   
   140007340:	sub    rsp,0x28
   140007344:	cmp    QWORD PTR [rip+0x4d04],0x10        # 0x14000c050
   14000734c:	jb     0x14000738c
   14000734e:	lea    rcx,[rsp+0x30]
   140007353:	mov    QWORD PTR [rsp+0x20],rbx
   140007358:	mov    rbx,QWORD PTR [rip+0x4cd9]        # 0x14000c038
   14000735f:	call   0x140001da0
   140007364:	lea    rdx,[rip+0x4ccd]        # 0x14000c038
   14000736b:	lea    rcx,[rsp+0x30]
   140007370:	call   0x1400019b0
   140007375:	lea    rcx,[rsp+0x30]
   14000737a:	call   0x140001da0
   14000737f:	mov    rcx,rbx
   140007382:	call   0x1400063aa
   140007387:	mov    rbx,QWORD PTR [rsp+0x20]
   14000738c:	mov    QWORD PTR [rip+0x4cb9],0xf        # 0x14000c050
   140007397:	mov    QWORD PTR [rip+0x4ca6],0x0        # 0x14000c048
   1400073a2:	mov    BYTE PTR [rip+0x4c8f],0x0        # 0x14000c038
   1400073a9:	add    rsp,0x28
   1400073ad:	ret    
   1400073ae:	int3   
   1400073af:	int3   
   1400073b0:	sub    rsp,0x28
   1400073b4:	cmp    QWORD PTR [rip+0x4c74],0x10        # 0x14000c030
   1400073bc:	jb     0x1400073fc
   1400073be:	lea    rcx,[rsp+0x30]
   1400073c3:	mov    QWORD PTR [rsp+0x20],rbx
   1400073c8:	mov    rbx,QWORD PTR [rip+0x4c49]        # 0x14000c018
   1400073cf:	call   0x140001da0
   1400073d4:	lea    rdx,[rip+0x4c3d]        # 0x14000c018
   1400073db:	lea    rcx,[rsp+0x30]
   1400073e0:	call   0x1400019b0
   1400073e5:	lea    rcx,[rsp+0x30]
   1400073ea:	call   0x140001da0
   1400073ef:	mov    rcx,rbx
   1400073f2:	call   0x1400063aa
   1400073f7:	mov    rbx,QWORD PTR [rsp+0x20]
   1400073fc:	mov    QWORD PTR [rip+0x4c29],0xf        # 0x14000c030
   140007407:	mov    QWORD PTR [rip+0x4c16],0x0        # 0x14000c028
   140007412:	mov    BYTE PTR [rip+0x4bff],0x0        # 0x14000c018
   140007419:	add    rsp,0x28
   14000741d:	ret    
   14000741e:	int3   
   14000741f:	int3   
   140007420:	rex push rbx
   140007422:	sub    rsp,0x20
   140007426:	jmp    0x140007457
   140007428:	mov    rax,QWORD PTR [rbx]
   14000742b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000742f:	mov    QWORD PTR [rip+0x506a],rax        # 0x14000c4a0
   140007436:	mov    rax,QWORD PTR [rcx]
   140007439:	call   QWORD PTR [rax+0x10]
   14000743c:	test   rax,rax
   14000743f:	je     0x14000744f
   140007441:	mov    r8,QWORD PTR [rax]
   140007444:	mov    edx,0x1
   140007449:	mov    rcx,rax
   14000744c:	call   QWORD PTR [r8]
   14000744f:	mov    rcx,rbx
   140007452:	call   0x1400063aa
   140007457:	mov    rbx,QWORD PTR [rip+0x5042]        # 0x14000c4a0
   14000745e:	test   rbx,rbx
   140007461:	jne    0x140007428
   140007463:	add    rsp,0x20
   140007467:	pop    rbx
   140007468:	ret    

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	js     0x140007fac
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	mov    ch,BYTE PTR [rdx+0x0]
   14000800e:	add    BYTE PTR [rax],al
   140008010:	sahf   
   140008011:	stos   BYTE PTR es:[rdi],al
   140008012:	add    BYTE PTR [rax],al
   140008014:	add    BYTE PTR [rax],al
   140008016:	add    BYTE PTR [rax],al
   140008018:	mov    dl,0xaa
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	add    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	(bad)  
   140008021:	stos   BYTE PTR es:[rdi],al
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	mov    esp,0xbc
   14000802d:	add    BYTE PTR [rax],al
   14000802f:	add    BYTE PTR [rsi+0xbc],ah
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rsp+rdi*4+0x0],cl
   14000803e:	add    BYTE PTR [rax],al
   140008040:	jl     0x140007ffe
   140008042:	add    BYTE PTR [rax],al
   140008044:	add    BYTE PTR [rax],al
   140008046:	add    BYTE PTR [rax],al
   140008048:	ins    BYTE PTR es:[rdi],dx
   140008049:	mov    esp,0x0
   14000804e:	add    BYTE PTR [rax],al
   140008050:	sar    BYTE PTR [rax+rax*1+0x0],cl
	...
   14000805f:	add    BYTE PTR [rbx+rbp*4+0x0],bh
   140008063:	add    BYTE PTR [rax],al
   140008065:	add    BYTE PTR [rax],al
   140008067:	add    BYTE PTR [rsi+0xab],bl
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    al,al
   140008071:	stos   DWORD PTR es:[rdi],eax
   140008072:	add    BYTE PTR [rax],al
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rax],al
   140008078:	fisubr WORD PTR [rbx+0x0]
   14000807e:	add    BYTE PTR [rax],al
   140008080:	adc    ch,BYTE PTR [rax+rax*1+0x0]
   140008087:	add    BYTE PTR [rsi],bh
   140008089:	lods   al,BYTE PTR ds:[rsi]
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    BYTE PTR [rax],al
   140008090:	jl     0x14000803e
   140008092:	add    BYTE PTR [rax],al
   140008094:	add    BYTE PTR [rax],al
   140008096:	add    BYTE PTR [rax],al
   140008098:	mov    edx,0xac
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    al,dh
   1400080a1:	lods   al,BYTE PTR ds:[rsi]
   1400080a2:	add    BYTE PTR [rax],al
   1400080a4:	add    BYTE PTR [rax],al
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	xor    ch,BYTE PTR [rbp+0x0]
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	push   rdx
   1400080b1:	lods   eax,DWORD PTR ds:[rsi]
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	add    BYTE PTR [rax],al
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	jb     0x140008067
   1400080ba:	add    BYTE PTR [rax],al
   1400080bc:	add    BYTE PTR [rax],al
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	movabs al,ds:0xdc000000000000ad
   1400080c9:	lods   eax,DWORD PTR ds:[rsi]
   1400080ca:	add    BYTE PTR [rax],al
   1400080cc:	add    BYTE PTR [rax],al
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	sbb    BYTE PTR [rsi+0x0],ch
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	fs scas al,BYTE PTR es:[rdi]
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400080e1:	scas   al,BYTE PTR es:[rdi]
   1400080e2:	add    BYTE PTR [rax],al
   1400080e4:	add    BYTE PTR [rax],al
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	out    0xae,al
   1400080ea:	add    BYTE PTR [rax],al
   1400080ec:	add    BYTE PTR [rax],al
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	sub    BYTE PTR [rdi+0x0],ch
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	push   0xffffffffffffffaf
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	add    BYTE PTR [rax],al
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	mov    dl,0xaf
   140008102:	add    BYTE PTR [rax],al
   140008104:	add    BYTE PTR [rax],al
   140008106:	add    BYTE PTR [rax],al
   140008108:	clc    
   140008109:	scas   eax,DWORD PTR es:[rdi]
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	add    BYTE PTR [rax],al
   14000810e:	add    BYTE PTR [rax],al
   140008110:	cmp    BYTE PTR [rax+0x0],dh
   140008116:	add    BYTE PTR [rax],al
   140008118:	outs   dx,BYTE PTR ds:[rsi]
   140008119:	mov    al,0x0
   14000811b:	add    BYTE PTR [rax],al
   14000811d:	add    BYTE PTR [rax],al
   14000811f:	add    BYTE PTR [rax+rsi*4+0x0],ch
   140008126:	add    BYTE PTR [rax],al
   140008128:	in     al,dx
   140008129:	mov    al,0x0
   14000812b:	add    BYTE PTR [rax],al
   14000812d:	add    BYTE PTR [rax],al
   14000812f:	add    BYTE PTR [rax],ch
   140008131:	mov    cl,0x0
   140008133:	add    BYTE PTR [rax],al
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    BYTE PTR [rcx+rsi*4+0x0],dl
   14000813e:	add    BYTE PTR [rax],al
   140008140:	(bad)  
   140008141:	mov    cl,0x0
   140008143:	add    BYTE PTR [rax],al
   140008145:	add    BYTE PTR [rax],al
   140008147:	add    BYTE PTR [rdx+rsi*4],cl
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	add    BYTE PTR [rax],al
   14000814e:	add    BYTE PTR [rax],al
   140008150:	(bad)  
   140008151:	mov    dl,0x0
   140008153:	add    BYTE PTR [rax],al
   140008155:	add    BYTE PTR [rax],al
   140008157:	add    al,dl
   140008159:	mov    dl,0x0
   14000815b:	add    BYTE PTR [rax],al
   14000815d:	add    BYTE PTR [rax],al
   14000815f:	add    BYTE PTR [rbx+rsi*4],dl
   140008162:	add    BYTE PTR [rax],al
   140008164:	add    BYTE PTR [rax],al
   140008166:	add    BYTE PTR [rax],al
   140008168:	pop    rax
   140008169:	mov    bl,0x0
   14000816b:	add    BYTE PTR [rax],al
   14000816d:	add    BYTE PTR [rax],al
   14000816f:	add    BYTE PTR [rbx+rsi*4+0x0],dl
   140008176:	add    BYTE PTR [rax],al
   140008178:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000817f:	add    BYTE PTR [rdx],bh
   140008181:	mov    ah,0x0
   140008183:	add    BYTE PTR [rax],al
   140008185:	add    BYTE PTR [rax],al
   140008187:	add    BYTE PTR [rsp+rsi*4+0x0],bh
   14000818b:	add    BYTE PTR [rax],al
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    BYTE PTR [rsp+rsi*4+0x0],ah
   140008196:	add    BYTE PTR [rax],al
   140008198:	in     al,0xb4
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	es mov ch,0x0
   1400081a3:	add    BYTE PTR [rax],al
   1400081a5:	add    BYTE PTR [rax],al
   1400081a7:	add    BYTE PTR [rbp+rsi*4+0x0],dh
   1400081ab:	add    BYTE PTR [rax],al
   1400081ad:	add    BYTE PTR [rax],al
   1400081af:	add    BYTE PTR [rdx+0xb5],bh
   1400081b5:	add    BYTE PTR [rax],al
   1400081b7:	add    BYTE PTR [rsi],cl
   1400081b9:	mov    dh,0x0
   1400081bb:	add    BYTE PTR [rax],al
   1400081bd:	add    BYTE PTR [rax],al
   1400081bf:	add    BYTE PTR [rdx-0x4a],ah
   1400081c2:	add    BYTE PTR [rax],al
   1400081c4:	add    BYTE PTR [rax],al
   1400081c6:	add    BYTE PTR [rax],al
   1400081c8:	mov    al,0xb6
   1400081ca:	add    BYTE PTR [rax],al
   1400081cc:	add    BYTE PTR [rax],al
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	div    BYTE PTR [rsi+0x0]
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	ss mov bh,0x0
   1400081db:	add    BYTE PTR [rax],al
   1400081dd:	add    BYTE PTR [rax],al
   1400081df:	add    BYTE PTR [rsi-0x49],dh
   1400081e2:	add    BYTE PTR [rax],al
   1400081e4:	add    BYTE PTR [rax],al
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	mov    edx,0xb7
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    BYTE PTR [rdx],al
   1400081f1:	mov    eax,0x0
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	rex.WX movabs rax,0xab62000000000000
   140008202:	add    BYTE PTR [rax],al
   140008204:	add    BYTE PTR [rax],al
   140008206:	add    BYTE PTR [rax],al
   140008208:	mov    BYTE PTR [rax+0x0],bh
   14000820e:	add    BYTE PTR [rax],al
   140008210:	movabs al,ds:0xd4000000000000b8
   140008219:	mov    eax,0x0
   14000821e:	add    BYTE PTR [rax],al
   140008220:	or     ch,BYTE PTR [rbx+0x0]
   140008226:	add    BYTE PTR [rax],al
   140008228:	(bad)  
   140008229:	mov    eax,0x0
   14000822e:	add    BYTE PTR [rax],al
   140008230:	es stos DWORD PTR es:[rdi],eax
   140008232:	add    BYTE PTR [rax],al
   140008234:	add    BYTE PTR [rax],al
   140008236:	add    BYTE PTR [rax],al
   140008238:	rex stos DWORD PTR es:[rdi],eax
	...
   140008246:	add    BYTE PTR [rax],al
   140008248:	push   rsi
   140008249:	mov    ecx,0x0
   14000824e:	add    BYTE PTR [rax],al
   140008250:	(bad)  
   140008251:	mov    ecx,0x0
   140008256:	add    BYTE PTR [rax],al
   140008258:	push   0xffffffffffffffb9
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	add    BYTE PTR [rax],al
   14000825e:	add    BYTE PTR [rax],al
   140008260:	jb     0x14000821b
   140008262:	add    BYTE PTR [rax],al
   140008264:	add    BYTE PTR [rax],al
   140008266:	add    BYTE PTR [rax],al
   140008268:	jl     0x140008223
   14000826a:	add    BYTE PTR [rax],al
   14000826c:	add    BYTE PTR [rax],al
   14000826e:	add    BYTE PTR [rax],al
   140008270:	test   BYTE PTR [rcx+0x0],bh
   140008276:	add    BYTE PTR [rax],al
   140008278:	mov    ?,WORD PTR [rcx+0x0]
   14000827e:	add    BYTE PTR [rax],al
   140008280:	(bad)  
   140008281:	mov    ecx,0x0
   140008286:	add    BYTE PTR [rax],al
   140008288:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008289:	mov    ecx,0x0
   14000828e:	add    BYTE PTR [rax],al
   140008290:	scas   al,BYTE PTR es:[rdi]
   140008291:	mov    ecx,0x0
   140008296:	add    BYTE PTR [rax],al
   140008298:	mov    eax,0xb9
   14000829d:	add    BYTE PTR [rax],al
   14000829f:	add    dh,al
   1400082a1:	mov    ecx,0x0
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	(bad)  
   1400082a9:	mov    ecx,0x0
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	in     al,0xb9
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	add    BYTE PTR [rax],al
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	lock mov ecx,0x0
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	cli    
   1400082c1:	mov    ecx,0x0
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	sbb    bh,BYTE PTR [rdx+0x0]
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	cmp    al,0xba
   1400082d2:	add    BYTE PTR [rax],al
   1400082d4:	add    BYTE PTR [rax],al
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	(bad)  
   1400082d9:	mov    edx,0x0
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	jl     0x14000829c
   1400082e2:	add    BYTE PTR [rax],al
   1400082e4:	add    BYTE PTR [rax],al
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	xchg   edx,eax
   1400082e9:	mov    edx,0x0
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	test   al,0xba
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	mov    dl,0xba
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	add    BYTE PTR [rax],al
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	retf   0xba
   140008303:	add    BYTE PTR [rax],al
   140008305:	add    BYTE PTR [rax],al
   140008307:	add    dl,dl
   140008309:	mov    edx,0x0
   14000830e:	add    BYTE PTR [rax],al
   140008310:	fdivr  QWORD PTR [rdx+0x0]
   140008316:	add    BYTE PTR [rax],al
   140008318:	(bad)  
   140008319:	mov    edx,0x0
   14000831e:	add    BYTE PTR [rax],al
   140008320:	clc    
   140008321:	mov    edx,0x0
   140008326:	add    BYTE PTR [rax],al
   140008328:	adc    BYTE PTR [rbx+0x0],bh
   14000832e:	add    BYTE PTR [rax],al
   140008330:	sbb    bh,BYTE PTR [rbx+0x0]
   140008336:	add    BYTE PTR [rax],al
   140008338:	sub    BYTE PTR [rbx+0x0],bh
   14000833e:	add    BYTE PTR [rax],al
   140008340:	rex.X mov ebx,0x0
   140008346:	add    BYTE PTR [rax],al
   140008348:	push   rax
   140008349:	mov    ebx,0x0
   14000834e:	add    BYTE PTR [rax],al
   140008350:	(bad)  
   140008351:	mov    ebx,0x0
   140008356:	add    BYTE PTR [rax],al
   140008358:	jb     0x140008315
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	add    BYTE PTR [rax],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	jp     0x14000831d
   140008362:	add    BYTE PTR [rax],al
   140008364:	add    BYTE PTR [rax],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	(bad)  
   140008369:	mov    ebx,0x0
   14000836e:	add    BYTE PTR [rax],al
   140008370:	mov    WORD PTR [rbx+0x0],?
   140008376:	add    BYTE PTR [rax],al
   140008378:	(bad)  
   140008379:	mov    ebx,0x0
   14000837e:	add    BYTE PTR [rax],al
   140008380:	mov    al,0xbb
   140008382:	add    BYTE PTR [rax],al
   140008384:	add    BYTE PTR [rax],al
   140008386:	add    BYTE PTR [rax],al
   140008388:	(bad)  
   140008389:	mov    ebx,0x0
   14000838e:	add    BYTE PTR [rax],al
   140008390:	sar    BYTE PTR [rbx+0x0],cl
   140008396:	add    BYTE PTR [rax],al
   140008398:	fidivr WORD PTR [rbx+0x0]
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	call   0x140008460
   1400083a5:	add    BYTE PTR [rax],al
   1400083a7:	add    dl,dh
   1400083a9:	mov    ebx,0x0
   1400083ae:	add    BYTE PTR [rax],al
   1400083b0:	(bad)  
   1400083b1:	mov    ebx,0x0
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	adc    bh,BYTE PTR [rax+rax*1+0x0]
   1400083bf:	add    BYTE PTR [rax-0x44],cl
   1400083c2:	add    BYTE PTR [rax],al
   1400083c4:	add    BYTE PTR [rax],al
   1400083c6:	add    BYTE PTR [rax],al
   1400083c8:	rex.WR movabs rcx,0xb93c000000000000
   1400083d2:	add    BYTE PTR [rax],al
   1400083d4:	add    BYTE PTR [rax],al
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	(bad)  
   1400083d9:	mov    ecx,0x0
   1400083de:	add    BYTE PTR [rax],al
   1400083e0:	sub    bh,BYTE PTR [rcx+0x0]
	...
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	call   0x14000849f
	...
   140008405:	add    BYTE PTR [rax],al
   140008407:	add    BYTE PTR [rax+0x1400066],ch
   14000840d:	add    BYTE PTR [rax],al
   14000840f:	add    BYTE PTR [rax+0x1400010],dl
   140008415:	add    BYTE PTR [rax],al
   140008417:	add    BYTE PTR [rax+0x10],ah
   14000841a:	add    BYTE PTR [rax+0x1],al
   14000841d:	add    BYTE PTR [rax],al
   14000841f:	add    BYTE PTR [rax],dh
   140008421:	adc    BYTE PTR [rax],al
   140008423:	rex add DWORD PTR [rax],eax
   140008426:	add    BYTE PTR [rax],al
   140008428:	add    BYTE PTR [rax],dl
   14000842a:	add    BYTE PTR [rax+0x1],al
   14000842d:	add    BYTE PTR [rax],al
   14000842f:	add    BYTE PTR [rax],dl
   140008431:	adc    BYTE PTR [rax],al
   140008433:	rex add DWORD PTR [rax],eax
   140008436:	add    BYTE PTR [rax],al
   140008438:	and    BYTE PTR [rax],dl
   14000843a:	add    BYTE PTR [rax+0x1],al
	...
   14000844d:	add    BYTE PTR [rax],al
   14000844f:	add    al,bl
   140008451:	add    BYTE PTR gs:[rax+0x1],al
   140008455:	add    BYTE PTR [rax],al
   140008457:	add    BYTE PTR [rax+0x1400063],dh
   14000845d:	add    BYTE PTR [rax],al
   14000845f:	add    BYTE PTR [rdx+rbp*2+0x0],bh
   140008463:	rex add DWORD PTR [rax],eax
	...
   140008472:	add    BYTE PTR [rax],al
   140008474:	or     eax,DWORD PTR [rdi]
   140008476:	sbb    DWORD PTR [rax+0x0],0x2000000
   14000847d:	add    BYTE PTR [rax],al
   14000847f:	add    BYTE PTR [rcx+0x0],cl
   140008482:	add    BYTE PTR [rax],al
   140008484:	adc    BYTE PTR [rax+rax*1+0x761000],cl
   14000848b:	add    BYTE PTR [rax],al
   14000848d:	add    BYTE PTR [rax],al
   14000848f:	add    BYTE PTR [rbx],cl
   140008491:	(bad)  
   140008492:	sbb    DWORD PTR [rax+0x0],0xc000000
   140008499:	add    BYTE PTR [rax],al
   14000849b:	add    BYTE PTR [rax+rax*1],dl
   14000849e:	add    BYTE PTR [rax],al
   1400084a0:	pop    rsp
   1400084a1:	mov    WORD PTR [rax],es
   1400084a3:	add    BYTE PTR [rsi+rsi*2+0x0],bl
   1400084a7:	add    BYTE PTR [rax+0x1400084],dh
   1400084ad:	add    BYTE PTR [rax],al
   1400084af:	add    BYTE PTR [rax+rax*1+0x0],bl
   1400084b3:	add    BYTE PTR [rax],al
   1400084b5:	add    BYTE PTR [rax],al
   1400084b7:	add    BYTE PTR [rdx],ah
   1400084b9:	add    eax,0x41993
   1400084be:	add    BYTE PTR [rax],al
   1400084c0:	pushf  
   1400084c1:	xchg   ebp,eax
   1400084c2:	add    BYTE PTR [rax],al
   1400084c4:	add    al,BYTE PTR [rax]
   1400084c6:	add    BYTE PTR [rax],al
   1400084c8:	mov    esp,0x8000095
   1400084cd:	add    BYTE PTR [rax],al
   1400084cf:	add    BYTE PTR [rax],dl
   1400084d1:	xchg   esi,eax
   1400084d2:	add    BYTE PTR [rax],al
   1400084d4:	and    BYTE PTR [rax],al
   1400084d6:	add    BYTE PTR [rax],al
   1400084d8:	add    BYTE PTR [rax],al
   1400084da:	add    BYTE PTR [rax],al
   1400084dc:	add    DWORD PTR [rax],eax
   1400084de:	add    BYTE PTR [rax],al
   1400084e0:	and    al,BYTE PTR [rip+0x11993]        # 0x140019e79
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	nop
   1400084e9:	xchg   edi,eax
	...
   1400084f2:	add    BYTE PTR [rax],al
   1400084f4:	add    eax,DWORD PTR [rax]
   1400084f6:	add    BYTE PTR [rax],al
   1400084f8:	cwde   
   1400084f9:	xchg   edi,eax
   1400084fa:	add    BYTE PTR [rax],al
   1400084fc:	and    BYTE PTR [rax],al
   1400084fe:	add    BYTE PTR [rax],al
   140008500:	add    BYTE PTR [rax],al
   140008502:	add    BYTE PTR [rax],al
   140008504:	add    DWORD PTR [rax],eax
   140008506:	add    BYTE PTR [rax],al
   140008508:	and    al,BYTE PTR [rip+0x31993]        # 0x140039ea1
   14000850e:	add    BYTE PTR [rax],al
   140008510:	call   0x1400085ac
   140008515:	add    BYTE PTR [rax],al
   140008517:	add    BYTE PTR [rax],al
   140008519:	add    BYTE PTR [rax],al
   14000851b:	add    BYTE PTR [rdi],al
   14000851d:	add    BYTE PTR [rax],al
   14000851f:	add    BYTE PTR [rax],al
   140008521:	cwde   
   140008522:	add    BYTE PTR [rax],al
   140008524:	test   al,0x0
   140008526:	add    BYTE PTR [rax],al
   140008528:	add    BYTE PTR [rax],al
   14000852a:	add    BYTE PTR [rax],al
   14000852c:	add    DWORD PTR [rax],eax
   14000852e:	add    BYTE PTR [rax],al
   140008530:	and    al,BYTE PTR [rip+0x91993]        # 0x140099ec9
   140008536:	add    BYTE PTR [rax],al
   140008538:	je     0x1400084d2
   14000853a:	add    BYTE PTR [rax],al
   14000853c:	add    DWORD PTR [rax],eax
   14000853e:	add    BYTE PTR [rax],al
   140008540:	mov    esp,0x18000098
   140008545:	add    BYTE PTR [rax],al
   140008547:	add    BYTE PTR [rax],al
   140008549:	cdq    
   14000854a:	add    BYTE PTR [rax],al
   14000854c:	js     0x14000854e
   14000854e:	add    BYTE PTR [rax],al
   140008550:	add    BYTE PTR [rax],al
   140008552:	add    BYTE PTR [rax],al
   140008554:	add    DWORD PTR [rax],eax
   140008556:	add    BYTE PTR [rax],al
   140008558:	and    al,BYTE PTR [rip+0x41993]        # 0x140049ef1
   14000855e:	add    BYTE PTR [rax],al
   140008560:	add    BYTE PTR [rdx+0x0],bl
   140008566:	add    BYTE PTR [rax],al
   140008568:	add    BYTE PTR [rax],al
   14000856a:	add    BYTE PTR [rax],al
   14000856c:	(bad)  
   14000856d:	add    BYTE PTR [rax],al
   14000856f:	add    BYTE PTR [rax],ah
   140008571:	(bad)  
   140008572:	add    BYTE PTR [rax],al
   140008574:	and    BYTE PTR [rax],al
   140008576:	add    BYTE PTR [rax],al
   140008578:	add    BYTE PTR [rax],al
   14000857a:	add    BYTE PTR [rax],al
   14000857c:	add    DWORD PTR [rax],eax
   14000857e:	add    BYTE PTR [rax],al
   140008580:	and    al,BYTE PTR [rip+0x11993]        # 0x140019f19
   140008586:	add    BYTE PTR [rax],al
   140008588:	jl     0x140008524
	...
   140008592:	add    BYTE PTR [rax],al
   140008594:	add    eax,DWORD PTR [rax]
   140008596:	add    BYTE PTR [rax],al
   140008598:	mov    BYTE PTR [rdx+0x200000],bl
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	add    BYTE PTR [rax],al
   1400085a2:	add    BYTE PTR [rax],al
   1400085a4:	add    DWORD PTR [rax],eax
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	and    al,BYTE PTR [rip+0x11993]        # 0x140019f41
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	mov    esp,0x9a
   1400085b5:	add    BYTE PTR [rax],al
   1400085b7:	add    BYTE PTR [rax],al
   1400085b9:	add    BYTE PTR [rax],al
   1400085bb:	add    BYTE PTR [rbx],al
   1400085bd:	add    BYTE PTR [rax],al
   1400085bf:	add    al,cl
   1400085c1:	(bad)  
   1400085c2:	add    BYTE PTR [rax],al
   1400085c4:	and    BYTE PTR [rax],al
   1400085c6:	add    BYTE PTR [rax],al
   1400085c8:	add    BYTE PTR [rax],al
   1400085ca:	add    BYTE PTR [rax],al
   1400085cc:	add    DWORD PTR [rax],eax
   1400085ce:	add    BYTE PTR [rax],al
   1400085d0:	and    al,BYTE PTR [rip+0x11993]        # 0x140019f69
   1400085d6:	add    BYTE PTR [rax],al
   1400085d8:	adc    BYTE PTR [rbx+0x0],bl
   1400085de:	add    BYTE PTR [rax],al
   1400085e0:	add    BYTE PTR [rax],al
   1400085e2:	add    BYTE PTR [rax],al
   1400085e4:	add    eax,DWORD PTR [rax]
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	sbb    BYTE PTR [rbx+0x480000],bl
   1400085ee:	add    BYTE PTR [rax],al
   1400085f0:	add    BYTE PTR [rax],al
   1400085f2:	add    BYTE PTR [rax],al
   1400085f4:	add    DWORD PTR [rax],eax
   1400085f6:	add    BYTE PTR [rax],al
   1400085f8:	and    al,BYTE PTR [rip+0x11993]        # 0x140019f91
   1400085fe:	add    BYTE PTR [rax],al
   140008600:	mov    BYTE PTR [rbx+0x0],bl
   140008606:	add    BYTE PTR [rax],al
   140008608:	add    BYTE PTR [rax],al
   14000860a:	add    BYTE PTR [rax],al
   14000860c:	add    eax,DWORD PTR [rax]
   14000860e:	add    BYTE PTR [rax],al
   140008610:	nop
   140008611:	fwait
   140008612:	add    BYTE PTR [rax],al
   140008614:	rex.W add BYTE PTR [rax],al
   140008617:	add    BYTE PTR [rax],al
   140008619:	add    BYTE PTR [rax],al
   14000861b:	add    BYTE PTR [rcx],al
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rdx],ah
   140008621:	add    eax,0x11993
   140008626:	add    BYTE PTR [rax],al
   140008628:	cmp    BYTE PTR [rax+rax*1+0x0],bl
   14000862f:	add    BYTE PTR [rax],al
   140008631:	add    BYTE PTR [rax],al
   140008633:	add    BYTE PTR [rbx],al
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    BYTE PTR [rax-0x64],al
   14000863a:	add    BYTE PTR [rax],al
   14000863c:	xor    BYTE PTR [rax],al
   14000863e:	add    BYTE PTR [rax],al
   140008640:	add    BYTE PTR [rax],al
   140008642:	add    BYTE PTR [rax],al
   140008644:	add    DWORD PTR [rax],eax
   140008646:	add    BYTE PTR [rax],al
   140008648:	and    al,BYTE PTR [rip+0x41993]        # 0x140049fe1
   14000864e:	add    BYTE PTR [rax],al
   140008650:	movabs al,ds:0xc00000000100009c
   140008659:	pushf  
   14000865a:	add    BYTE PTR [rax],al
   14000865c:	or     DWORD PTR [rax],eax
   14000865e:	add    BYTE PTR [rax],al
   140008660:	lock pushf 
   140008662:	add    BYTE PTR [rax],al
   140008664:	and    BYTE PTR [rax],al
   140008666:	add    BYTE PTR [rax],al
   140008668:	add    BYTE PTR [rax],al
   14000866a:	add    BYTE PTR [rax],al
   14000866c:	add    DWORD PTR [rax],eax
   14000866e:	add    BYTE PTR [rax],al
   140008670:	and    al,BYTE PTR [rip+0x41993]        # 0x14004a009
   140008676:	add    BYTE PTR [rax],al
   140008678:	fs popf 
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	add    DWORD PTR [rax],eax
   14000867e:	add    BYTE PTR [rax],al
   140008680:	test   BYTE PTR [rbp+0x90000],bl
   140008686:	add    BYTE PTR [rax],al
   140008688:	mov    al,0x9d
   14000868a:	add    BYTE PTR [rax],al
   14000868c:	and    BYTE PTR [rax],al
   14000868e:	add    BYTE PTR [rax],al
   140008690:	add    BYTE PTR [rax],al
   140008692:	add    BYTE PTR [rax],al
   140008694:	add    DWORD PTR [rax],eax
   140008696:	add    BYTE PTR [rax],al
   140008698:	and    al,BYTE PTR [rip+0x41993]        # 0x14004a031
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	and    al,0x9e
   1400086a2:	add    BYTE PTR [rax],al
   1400086a4:	add    DWORD PTR [rax],eax
   1400086a6:	add    BYTE PTR [rax],al
   1400086a8:	rex.R sahf 
   1400086aa:	add    BYTE PTR [rax],al
   1400086ac:	or     DWORD PTR [rax],eax
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	jo     0x140008650
   1400086b2:	add    BYTE PTR [rax],al
   1400086b4:	and    BYTE PTR [rax],al
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	add    BYTE PTR [rax],al
   1400086ba:	add    BYTE PTR [rax],al
   1400086bc:	add    DWORD PTR [rax],eax
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	and    al,BYTE PTR [rip+0x31993]        # 0x14003a059
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	in     al,0x9e
	...
   1400086d2:	add    BYTE PTR [rax],al
   1400086d4:	add    eax,0x0
   1400086d9:	lahf   
   1400086da:	add    BYTE PTR [rax],al
   1400086dc:	and    BYTE PTR [rax],al
   1400086de:	add    BYTE PTR [rax],al
   1400086e0:	add    BYTE PTR [rax],al
   1400086e2:	add    BYTE PTR [rax],al
   1400086e4:	add    DWORD PTR [rax],eax
   1400086e6:	add    BYTE PTR [rax],al
   1400086e8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a081
   1400086ee:	add    BYTE PTR [rax],al
   1400086f0:	jl     0x140008691
	...
   1400086fa:	add    BYTE PTR [rax],al
   1400086fc:	add    al,BYTE PTR [rax]
   1400086fe:	add    BYTE PTR [rax],al
   140008700:	mov    BYTE PTR [rdi+0x280000],bl
   140008706:	add    BYTE PTR [rax],al
   140008708:	add    BYTE PTR [rax],al
   14000870a:	add    BYTE PTR [rax],al
   14000870c:	add    DWORD PTR [rax],eax
   14000870e:	add    BYTE PTR [rax],al
   140008710:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a0a9
   140008716:	add    BYTE PTR [rax],al
   140008718:	mov    esp,0x9f
   14000871d:	add    BYTE PTR [rax],al
   14000871f:	add    BYTE PTR [rax],al
   140008721:	add    BYTE PTR [rax],al
   140008723:	add    BYTE PTR [rdx],al
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    al,cl
   140008729:	lahf   
   14000872a:	add    BYTE PTR [rax],al
   14000872c:	sub    BYTE PTR [rax],al
   14000872e:	add    BYTE PTR [rax],al
   140008730:	add    BYTE PTR [rax],al
   140008732:	add    BYTE PTR [rax],al
   140008734:	add    DWORD PTR [rax],eax
   140008736:	add    BYTE PTR [rax],al
   140008738:	and    al,BYTE PTR [rip+0x31993]        # 0x14003a0d1
   14000873e:	add    BYTE PTR [rax],al
   140008740:	je     0x1400086e2
	...
   14000874a:	add    BYTE PTR [rax],al
   14000874c:	(bad)  
   14000874d:	add    BYTE PTR [rax],al
   14000874f:	add    BYTE PTR [rax-0x7fffff60],dl
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    BYTE PTR [rax],al
   140008759:	add    BYTE PTR [rax],al
   14000875b:	add    BYTE PTR [rcx],al
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    BYTE PTR [rdx],ah
   140008761:	add    eax,0x11993
   140008766:	add    BYTE PTR [rax],al
   140008768:	loopne 0x14000870a
	...
   140008772:	add    BYTE PTR [rax],al
   140008774:	add    eax,DWORD PTR [rax]
   140008776:	add    BYTE PTR [rax],al
   140008778:	call   0x18000881d
   14000877d:	add    BYTE PTR [rax],al
   14000877f:	add    BYTE PTR [rax],al
   140008781:	add    BYTE PTR [rax],al
   140008783:	add    BYTE PTR [rcx],al
   140008785:	add    BYTE PTR [rax],al
   140008787:	add    BYTE PTR [rdx],ah
   140008789:	add    eax,0x21993
   14000878e:	add    BYTE PTR [rax],al
   140008790:	and    al,0xa1
   140008792:	add    BYTE PTR [rax],al
   140008794:	add    DWORD PTR [rax],eax
   140008796:	add    BYTE PTR [rax],al
   140008798:	xor    al,0xa1
   14000879a:	add    BYTE PTR [rax],al
   14000879c:	add    eax,0x60000000
   1400087a1:	movabs eax,ds:0x200000
   1400087aa:	add    BYTE PTR [rax],al
   1400087ac:	add    DWORD PTR [rax],eax
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a149
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	in     al,dx
   1400087b9:	movabs eax,ds:0x0
   1400087c2:	add    BYTE PTR [rax],al
   1400087c4:	add    eax,DWORD PTR [rax]
   1400087c6:	add    BYTE PTR [rax],al
   1400087c8:	clc    
   1400087c9:	movabs eax,ds:0x200000
   1400087d2:	add    BYTE PTR [rax],al
   1400087d4:	add    DWORD PTR [rax],eax
   1400087d6:	add    BYTE PTR [rax],al
   1400087d8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a171
   1400087de:	add    BYTE PTR [rax],al
   1400087e0:	xor    BYTE PTR [rdx+0x0],ah
   1400087e6:	add    BYTE PTR [rax],al
   1400087e8:	add    BYTE PTR [rax],al
   1400087ea:	add    BYTE PTR [rax],al
   1400087ec:	add    eax,DWORD PTR [rax]
   1400087ee:	add    BYTE PTR [rax],al
   1400087f0:	cmp    BYTE PTR [rdx+0x200000],ah
   1400087f6:	add    BYTE PTR [rax],al
   1400087f8:	add    BYTE PTR [rax],al
   1400087fa:	add    BYTE PTR [rax],al
   1400087fc:	add    DWORD PTR [rax],eax
   1400087fe:	add    BYTE PTR [rax],al
   140008800:	and    al,BYTE PTR [rip+0x41993]        # 0x14004a199
   140008806:	add    BYTE PTR [rax],al
   140008808:	je     0x1400087ac
   14000880a:	add    BYTE PTR [rax],al
   14000880c:	add    DWORD PTR [rax],eax
   14000880e:	add    BYTE PTR [rax],al
   140008810:	xchg   esp,eax
   140008811:	movabs ds:0xa2c00000000b0000,al
   14000881a:	add    BYTE PTR [rax],al
   14000881c:	sub    BYTE PTR [rax],al
   14000881e:	add    BYTE PTR [rax],al
   140008820:	add    BYTE PTR [rax],al
   140008822:	add    BYTE PTR [rax],al
   140008824:	add    DWORD PTR [rax],eax
   140008826:	add    BYTE PTR [rax],al
   140008828:	call   0x1414088bd
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    al,dh
   140008831:	sub    al,BYTE PTR [rax]
   140008833:	rex add DWORD PTR [rax],eax
   140008836:	add    BYTE PTR [rax],al
   140008838:	sahf   
   140008839:	movsxd eax,DWORD PTR [rax]
   14000883b:	rex add DWORD PTR [rax],eax
   14000883e:	add    BYTE PTR [rax],al
   140008840:	sahf   
   140008841:	movsxd eax,DWORD PTR [rax]
   140008843:	rex add DWORD PTR [rax],eax
   140008846:	add    BYTE PTR [rax],al
   140008848:	push   rax
   140008849:	(bad)  
   14000884a:	add    BYTE PTR [rax+0x1],al
   14000884d:	add    BYTE PTR [rax],al
   14000884f:	add    al,al
   140008851:	(bad)  
   140008852:	add    BYTE PTR [rax+0x1],al
   140008855:	add    BYTE PTR [rax],al
   140008857:	add    al,ah
   140008859:	(bad)  
   14000885a:	add    BYTE PTR [rax+0x1],al
   14000885d:	add    BYTE PTR [rax],al
   14000885f:	add    BYTE PTR [rax-0x6f],ah
   140008862:	add    BYTE PTR [rax+0x1],al
   140008865:	add    BYTE PTR [rax],al
   140008867:	add    BYTE PTR [rax+0x2a],ah
   14000886a:	add    BYTE PTR [rax+0x1],al
   14000886d:	add    BYTE PTR [rax],al
   14000886f:	add    BYTE PTR [rax+0x1400043],dh
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rax+0x42],dh
   14000887a:	add    BYTE PTR [rax+0x1],al
   14000887d:	add    BYTE PTR [rax],al
   14000887f:	add    BYTE PTR [rax+0x3f],dl
   140008882:	add    BYTE PTR [rax+0x1],al
   140008885:	add    BYTE PTR [rax],al
   140008887:	add    al,al
   140008889:	(bad)  
   14000888a:	add    BYTE PTR [rax+0x1],al
   14000888d:	add    BYTE PTR [rax],al
   14000888f:	add    al,ah
   140008891:	(bad)  
   140008892:	add    BYTE PTR [rax+0x1],al
   140008895:	add    BYTE PTR [rax],al
   140008897:	add    BYTE PTR [rdi+0x65],ah
   14000889a:	outs   dx,BYTE PTR ds:[rsi]
   14000889b:	gs jb  0x140008907
   14000889e:	movsxd eax,DWORD PTR [rax]
   1400088a0:	jne    0x140008910
   1400088a2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400088a6:	outs   dx,BYTE PTR ds:[rsi]
   1400088a7:	and    BYTE PTR [rbp+0x72],ah
   1400088aa:	jb     0x14000891b
   1400088ac:	jb     0x1400088ae
   1400088ae:	add    BYTE PTR [rax],al
   1400088b0:	loopne 0x140008843
   1400088b2:	add    BYTE PTR [rax+0x1],al
   1400088b5:	add    BYTE PTR [rax],al
   1400088b7:	add    BYTE PTR [rax+0x140002a],dl
   1400088bd:	add    BYTE PTR [rax],al
   1400088bf:	add    al,al
   1400088c1:	rex.XB add BYTE PTR [r8+0x1],al
   1400088c5:	add    BYTE PTR [rax],al
   1400088c7:	add    al,ah
   1400088c9:	rex.X add BYTE PTR [rax+0x1],al
   1400088cd:	add    BYTE PTR [rax],al
   1400088cf:	add    BYTE PTR [rax+0x3f],dl
   1400088d2:	add    BYTE PTR [rax+0x1],al
   1400088d5:	add    BYTE PTR [rax],al
   1400088d7:	add    al,al
   1400088d9:	(bad)  
   1400088da:	add    BYTE PTR [rax+0x1],al
   1400088dd:	add    BYTE PTR [rax],al
   1400088df:	add    al,ah
   1400088e1:	(bad)  
   1400088e2:	add    BYTE PTR [rax+0x1],al
   1400088e5:	add    BYTE PTR [rax],al
   1400088e7:	add    BYTE PTR [rcx+0x6f],ch
   1400088ea:	jae    0x140008960
   1400088ec:	jb     0x140008953
   1400088ee:	(bad)  
   1400088ef:	ins    DWORD PTR es:[rdi],dx
	...
   1400088f8:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400088ff:	ins    DWORD PTR es:[rdi],dx
   140008900:	and    BYTE PTR [rbx+0x74],dh
   140008903:	jb     0x14000896a
   140008905:	(bad)  
   140008906:	ins    DWORD PTR es:[rdi],dx
   140008907:	and    BYTE PTR [rbp+0x72],ah
   14000890a:	jb     0x14000897b
   14000890c:	jb     0x14000890e
   14000890e:	add    BYTE PTR [rax],al
   140008910:	push   0x1400092
   140008915:	add    BYTE PTR [rax],al
   140008917:	add    al,al
   140008919:	sub    al,BYTE PTR [rax]
   14000891b:	rex add DWORD PTR [rax],eax
   14000891e:	add    BYTE PTR [rax],al
   140008920:	rol    BYTE PTR [rbx+0x0],1
   140008923:	rex add DWORD PTR [rax],eax
   140008926:	add    BYTE PTR [rax],al
   140008928:	xor    BYTE PTR [rbx+0x0],al
   14000892b:	rex add DWORD PTR [rax],eax
   14000892e:	add    BYTE PTR [rax],al
   140008930:	adc    BYTE PTR [rdi],bh
   140008932:	add    BYTE PTR [rax+0x1],al
   140008935:	add    BYTE PTR [rax],al
   140008937:	add    al,al
   140008939:	(bad)  
   14000893a:	add    BYTE PTR [rax+0x1],al
   14000893d:	add    BYTE PTR [rax],al
   14000893f:	add    al,ah
   140008941:	(bad)  
   140008942:	add    BYTE PTR [rax+0x1],al
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    BYTE PTR [rbx+0x79],dh
   14000894a:	jae    0x1400089c0
   14000894c:	gs ins DWORD PTR es:[rdi],dx
   14000894e:	add    BYTE PTR [rax],al
   140008950:	lock xchg edx,eax
   140008952:	add    BYTE PTR [rax+0x1],al
   140008955:	add    BYTE PTR [rax],al
   140008957:	add    BYTE PTR [rax],dh
   140008959:	sub    al,BYTE PTR [rax]
   14000895b:	rex add DWORD PTR [rax],eax
   14000895e:	add    BYTE PTR [rax],al
   140008960:	push   rax
   140008961:	movsxd eax,DWORD PTR [rax]
   140008963:	rex add DWORD PTR [rax],eax
   140008966:	add    BYTE PTR [rax],al
   140008968:	push   rsi
   140008969:	movsxd eax,DWORD PTR [rax]
   14000896b:	rex add DWORD PTR [rax],eax
   14000896e:	add    BYTE PTR [rax],al
   140008970:	or     BYTE PTR [rax+0x0],0x40
   140008974:	add    DWORD PTR [rax],eax
   140008976:	add    BYTE PTR [rax],al
   140008978:	(bad)  
   14000897a:	add    BYTE PTR [rax+0x1],al
   14000897d:	add    BYTE PTR [rax],al
   14000897f:	add    BYTE PTR [rdx+0x63],bh
   140008982:	add    BYTE PTR [rax+0x1],al
   140008985:	add    BYTE PTR [rax],al
   140008987:	add    BYTE PTR [rbx+riz*2+0x14000],cl
   14000898e:	add    BYTE PTR [rax],al
   140008990:	xchg   BYTE PTR [rbx+0x0],ah
   140008993:	rex add DWORD PTR [rax],eax
   140008996:	add    BYTE PTR [rax],al
   140008998:	xchg   edx,eax
   140008999:	movsxd eax,DWORD PTR [rax]
   14000899b:	rex add DWORD PTR [rax],eax
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	add    BYTE PTR [rbp+0x0],bl
   1400089a3:	rex add DWORD PTR [rax],eax
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	push   0x1400063
   1400089ad:	add    BYTE PTR [rax],al
   1400089af:	add    BYTE PTR [rsi+0x63],ch
   1400089b2:	add    BYTE PTR [rax+0x1],al
   1400089b5:	add    BYTE PTR [rax],al
   1400089b7:	add    BYTE PTR [rbx+riz*2+0x0],dh
   1400089bb:	rex add DWORD PTR [rax],eax
   1400089be:	add    BYTE PTR [rax],al
   1400089c0:	and    BYTE PTR [rbx+0x0],0x40
   1400089c4:	add    DWORD PTR [rax],eax
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	pop    rsp
   1400089c9:	movsxd eax,DWORD PTR [rax]
   1400089cb:	rex add DWORD PTR [rax],eax
   1400089ce:	add    BYTE PTR [rax],al
   1400089d0:	jo     0x14000895e
   1400089d2:	add    BYTE PTR [rax+0x1],al
   1400089d5:	add    BYTE PTR [rax],al
   1400089d7:	add    BYTE PTR [rax+0x1400029],al
   1400089dd:	add    BYTE PTR [rax],al
   1400089df:	add    BYTE PTR [rax],al
   1400089e1:	xor    al,0x0
   1400089e3:	rex add DWORD PTR [rax],eax
   1400089e6:	add    BYTE PTR [rax],al
   1400089e8:	nop
   1400089e9:	xor    eax,0x14000
   1400089ee:	add    BYTE PTR [rax],al
   1400089f0:	movabs al,ds:0x9000000001400045
   1400089f9:	rex.W add BYTE PTR [rax+0x1],al
   1400089fd:	add    BYTE PTR [rax],al
   1400089ff:	add    BYTE PTR [rdx+0x63],bh
   140008a02:	add    BYTE PTR [rax+0x1],al
   140008a05:	add    BYTE PTR [rax],al
   140008a07:	add    BYTE PTR [rax+0x5c],dh
   140008a0a:	add    BYTE PTR [rax+0x1],al
   140008a0d:	add    BYTE PTR [rax],al
   140008a0f:	add    BYTE PTR [rax+0x1400059],dl
   140008a15:	add    BYTE PTR [rax],al
   140008a17:	add    BYTE PTR [rdx+0x1400063],dl
   140008a1d:	add    BYTE PTR [rax],al
   140008a1f:	add    BYTE PTR [rax+0x1400063],bl
   140008a25:	add    BYTE PTR [rax],al
   140008a27:	add    BYTE PTR [rax+0x56],al
   140008a2a:	add    BYTE PTR [rax+0x1],al
   140008a2d:	add    BYTE PTR [rax],al
   140008a2f:	add    BYTE PTR [rax],dh
   140008a31:	push   rdi
   140008a32:	add    BYTE PTR [rax+0x1],al
   140008a35:	add    BYTE PTR [rax],al
   140008a37:	add    BYTE PTR [rax],ah
   140008a39:	pop    rax
   140008a3a:	add    BYTE PTR [rax+0x1],al
   140008a3d:	add    BYTE PTR [rax],al
   140008a3f:	add    BYTE PTR [rax],dl
   140008a41:	pop    rcx
   140008a42:	add    BYTE PTR [rax+0x1],al
   140008a45:	add    BYTE PTR [rax],al
   140008a47:	add    BYTE PTR [rax+0x41],al
   140008a4a:	add    BYTE PTR [rax+0x1],al
   140008a4d:	add    BYTE PTR [rax],al
   140008a4f:	add    BYTE PTR [rax-0x73],al
   140008a52:	add    BYTE PTR [rax+0x1],al
   140008a55:	add    BYTE PTR [rax],al
   140008a57:	add    BYTE PTR [rcx+rbp*1+0x0],bl
   140008a5b:	rex add DWORD PTR [rax],eax
   140008a5e:	add    BYTE PTR [rax],al
   140008a60:	add    BYTE PTR [rax],al
   140008a62:	add    BYTE PTR [rax],al
   140008a64:	mov    al,0x0
   140008a66:	add    BYTE PTR [rax],al
   140008a68:	push   rbp
   140008a69:	outs   dx,BYTE PTR ds:[rsi]
   140008a6a:	(bad)  
   140008a6b:	(bad)  
   140008a6c:	ins    BYTE PTR es:[rdi],dx
   140008a6d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140008a72:	outs   dx,DWORD PTR ds:[rsi]
   140008a73:	jo     0x140008ada
   140008a75:	outs   dx,BYTE PTR ds:[rsi]
   140008a76:	and    BYTE PTR [rax],al
   140008a78:	call   0x141408b0c
   140008a7d:	add    BYTE PTR [rax],al
   140008a7f:	add    BYTE PTR [rax+0x29],ch
   140008a82:	add    BYTE PTR [rax+0x1],al
   140008a85:	add    BYTE PTR [rax],al
   140008a87:	add    BYTE PTR [rax],al
   140008a89:	add    BYTE PTR [rax],al
   140008a8b:	add    BYTE PTR [rax+0x52000000],ch
   140008a91:	gs (bad) 
   140008a93:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20
   140008a9b:	add    BYTE PTR [rax],al
   140008a9d:	add    BYTE PTR [rax],al
   140008a9f:	add    BYTE PTR [rbp+0x72],ah
   140008aa2:	jb     0x140008b13
   140008aa4:	jb     0x140008ac6
   140008aa6:	jb     0x140008b0d
   140008aa8:	(bad)  
   140008aa9:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x2e000020
   140008ab1:	add    BYTE PTR [rax],al
   140008ab3:	add    BYTE PTR [rax],al
   140008ab5:	add    BYTE PTR [rax],al
   140008ab7:	add    BYTE PTR [rdx+riz*2+0x69],bl
   140008abb:	outs   dx,BYTE PTR ds:[rsi]
   140008abc:	pop    rsp
   140008abd:	ja     0x140008b28
   140008abf:	outs   dx,BYTE PTR ds:[rsi]
   140008ac0:	ss xor al,0x5c
   140008ac3:	ins    DWORD PTR es:[rdi],dx
   140008ac4:	jae    0x140008b27
   140008ac6:	imul   ebp,DWORD PTR cs:[rsi+0x69],0x0
   140008ace:	add    BYTE PTR [rax],al
   140008ad0:	jae    0x140008b46
   140008ad2:	jb     0x140008b3d
   140008ad4:	outs   dx,BYTE PTR ds:[rsi]
   140008ad5:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   140008ada:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008ade:	add    BYTE PTR [ecx+0x6e],ch
   140008ae2:	jbe    0x140008b45
   140008ae4:	ins    BYTE PTR es:[rdi],dx
   140008ae5:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   140008aed:	and    BYTE PTR [eax+0x6f],dh
   140008af1:	jae    0x140008b5c
   140008af3:	je     0x140008b5e
   140008af5:	outs   dx,DWORD PTR ds:[rsi]
   140008af6:	outs   dx,BYTE PTR ds:[rsi]
   140008af7:	add    BYTE PTR [rsi+0x65],dh
   140008afa:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140008afe:	cmp    al,0x54
   140008b00:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   140008b05:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008b09:	add    BYTE PTR [eax],al
   140008b0c:	add    BYTE PTR [rax],al
   140008b0e:	add    BYTE PTR [rax],al
   140008b10:	(bad)
   140008b15:	(bad)  
   140008b16:	jae    0x140008b8c
	...
   140008b20:	cmp    DWORD PTR [rsi],ebp
   140008b22:	xor    ch,BYTE PTR [rsi]
   140008b24:	xor    BYTE PTR [rsi],ch
   140008b26:	xor    eax,0x34363831
   140008b2b:	xor    DWORD PTR [rax],eax
   140008b2d:	add    BYTE PTR [rax],al
   140008b2f:	add    BYTE PTR [rdx+0x61],cl
   140008b32:	outs   dx,BYTE PTR ds:[rsi]
   140008b33:	and    BYTE PTR [rcx],dh
   140008b35:	cmp    DWORD PTR [rax],esp
   140008b37:	xor    dh,BYTE PTR [rax]
   140008b39:	xor    DWORD PTR [rdi],esi
   140008b3b:	add    BYTE PTR [rax],al
   140008b3d:	add    BYTE PTR [rax],al
   140008b3f:	add    BYTE PTR [rdx+0x69],ah
   140008b42:	outs   dx,BYTE PTR ds:[rsi]
   140008b43:	pop    rsp
   140008b44:	ja     0x140008baf
   140008b46:	outs   dx,BYTE PTR ds:[rsi]
   140008b47:	ss xor al,0x5c
   140008b4a:	rex.WRB
   140008b4b:	push   r12
   140008b4d:	rex.WR
   140008b4e:	rex.B
   140008b4f:	rex.X push rbx
   140008b51:	je     0x140008bb4
   140008b53:	jb     0x140008bc9
   140008b55:	jne    0x140008bc7
   140008b57:	movsxd esp,DWORD PTR [r11+0x65]
   140008b5b:	ins    BYTE PTR es:[rdi],dx
   140008b5c:	gs jb  0x140008bc0
   140008b5f:	je     0x140008bd0
   140008b61:	jb     0x140008b91
   140008b63:	gs js  0x140008bcb
   140008b66:	add    BYTE PTR [rax],al
   140008b68:	add    DWORD PTR [rax],eax
   140008b6a:	add    BYTE PTR [rax],al
   140008b6c:	add    BYTE PTR [rax],al
   140008b6e:	add    BYTE PTR [rax],al
   140008b70:	jo     0x140008b05
   140008b72:	add    BYTE PTR [rax+0x1],al
   140008b75:	add    BYTE PTR [rax],al
   140008b77:	add    BYTE PTR [rbp+riz*2+0x0],ch
   140008b7b:	rex add DWORD PTR [rax],eax
   140008b7e:	add    BYTE PTR [rax],al
   140008b80:	add    BYTE PTR [rax],al
   140008b82:	add    BYTE PTR [rax],al
   140008b84:	add    DWORD PTR [rax],eax
   140008b86:	add    BYTE PTR [rax],al
   140008b88:	add    al,BYTE PTR [rax]
   140008b8a:	add    BYTE PTR [rax],al
   140008b8c:	add    eax,DWORD PTR [rax]
   140008b8e:	add    BYTE PTR [rax],al
   140008b90:	add    al,0x0
	...
   140008b9e:	add    BYTE PTR [rax],al
   140008ba0:	jo     0x140008ba2
	...
   140008bf6:	add    BYTE PTR [rax],al
   140008bf8:	add    al,0x0
   140008bfb:	rex add DWORD PTR [rax],eax
	...
   140008c0e:	add    BYTE PTR [rax],al
   140008c10:	push   rdx
   140008c11:	push   rbx
   140008c12:	rex.R push rbx
   140008c14:	stos   BYTE PTR es:[rdi],al
   140008c15:	ficom  WORD PTR [rsi+0x75]
   140008c18:	test   BYTE PTR [rax],al
   140008c1a:	mov    cl,BYTE PTR [rbx-0x6d]
   140008c1d:	rex.R cmp eax,0x6aac256d
   140008c23:	(bad)  
   140008c24:	add    DWORD PTR [rax],eax
   140008c26:	add    BYTE PTR [rax],al
   140008c28:	cmp    bl,BYTE PTR [rbp+r13*2+0x61]
   140008c2d:	je     0x140008c9b
   140008c2f:	(bad)  
   140008c30:	(bad)  
   140008c31:	pop    rsp
   140008c32:	(bad)  
   140008c33:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   140008c3a:	xor    al,0x5c
   140008c3c:	rex.WRB
   140008c3d:	push   r12
   140008c3f:	rex.WR
   140008c40:	rex.B
   140008c41:	rex.X push rbx
   140008c43:	je     0x140008ca6
   140008c45:	jb     0x140008cbb
   140008c47:	jne    0x140008cb9
   140008c49:	movsxd esp,DWORD PTR [r11+0x65]
   140008c4d:	ins    BYTE PTR es:[rdi],dx
   140008c4e:	gs jb  0x140008cb2
   140008c51:	je     0x140008cc2
   140008c53:	jb     0x140008c83
   140008c55:	jo     0x140008cbb
   140008c57:	(bad)  
	...
   140008c60:	(bad)  
   140008c61:	add    BYTE PTR [rax],al
   140008c63:	add    BYTE PTR [rip+0x0],dl        # 0x140008c69
   140008c69:	add    BYTE PTR [rax],al
   140008c6b:	add    BYTE PTR [rax],al
   140008c6d:	add    BYTE PTR [rax],al
   140008c6f:	add    BYTE PTR [rcx],al
	...
   140008c79:	add    BYTE PTR [rax],al
   140008c7b:	add    al,ah
   140008c7d:	rol    BYTE PTR [rax],0x0
   140008c80:	cwde   
   140008c81:	mov    WORD PTR [rax],es
   140008c83:	add    BYTE PTR [rax-0x74],dh
	...
   140008c9e:	add    BYTE PTR [rax],al
   140008ca0:	add    al,BYTE PTR [rax]
   140008ca2:	add    BYTE PTR [rax],al
   140008ca4:	mov    al,0x8c
	...
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	enter  0x8c,0x0
   140008cb4:	lock mov WORD PTR [rax],es
	...
   140008cc7:	add    al,ah
   140008cc9:	rol    BYTE PTR [rax],0x0
   140008ccc:	add    DWORD PTR [rax],eax
   140008cce:	add    BYTE PTR [rax],al
   140008cd0:	add    BYTE PTR [rax],al
   140008cd2:	add    BYTE PTR [rax],al
   140008cd4:	(bad)  
   140008cd5:	(bad)  
   140008cd6:	(bad)  
   140008cd7:	inc    DWORD PTR [rax]
   140008cd9:	add    BYTE PTR [rax],al
   140008cdb:	add    BYTE PTR [rax+0x0],al
   140008cde:	add    BYTE PTR [rax],al
   140008ce0:	cwde   
   140008ce1:	mov    WORD PTR [rax],es
	...
   140008cef:	add    BYTE PTR [rax],dh
   140008cf1:	rol    DWORD PTR [rax],0x0
	...
   140008cfc:	(bad)  
   140008cfd:	(bad)  
   140008cfe:	(bad)  
   140008cff:	inc    DWORD PTR [rax]
   140008d01:	add    BYTE PTR [rax],al
   140008d03:	add    BYTE PTR [rax+0x0],al
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	sbb    BYTE PTR [rbp+0x0],cl
	...
   140008d1e:	add    BYTE PTR [rax],al
   140008d20:	add    DWORD PTR [rax],eax
   140008d22:	add    BYTE PTR [rax],al
   140008d24:	xor    BYTE PTR [rbp+0x0],cl
   140008d2a:	add    BYTE PTR [rax],al
   140008d2c:	add    BYTE PTR [rax],al
   140008d2e:	add    BYTE PTR [rax],al
   140008d30:	lock mov WORD PTR [rax],es
	...
   140008d3f:	add    BYTE PTR [rcx],al
   140008d41:	add    BYTE PTR [rax],al
   140008d43:	add    BYTE PTR [rax+0x4000000],dh
   140008d49:	add    BYTE PTR [rax],al
   140008d4b:	add    BYTE PTR [rax+0x680000c1],al
   140008d51:	lea    eax,[rax]
   140008d53:	add    BYTE PTR [rax-0x73],al
	...
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	add    eax,0x80000000
   140008d75:	lea    eax,[rax]
	...
   140008d7f:	add    BYTE PTR [rax-0x27ffff73],dh
   140008d85:	lea    eax,[rax]
   140008d87:	add    BYTE PTR [rax-0x72],al
   140008d8a:	add    BYTE PTR [rax],al
   140008d8c:	cwde   
   140008d8d:	pop    QWORD PTR [rax]
   140008d8f:	add    al,al
   140008d91:	pop    QWORD PTR [rax]
	...
   140008daf:	add    BYTE PTR [rax+0x40000c1],al
   140008db5:	add    BYTE PTR [rax],al
   140008db7:	add    BYTE PTR [rax],al
   140008db9:	add    BYTE PTR [rax],al
   140008dbb:	add    bh,bh
   140008dbd:	(bad)  
   140008dbe:	(bad)  
   140008dbf:	inc    DWORD PTR [rax]
   140008dc1:	add    BYTE PTR [rax],al
   140008dc3:	add    BYTE PTR [rax+0x0],al
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	push   0x8d
	...
   140008dd5:	add    BYTE PTR [rax],al
   140008dd7:	add    al,dl
   140008dd9:	rol    DWORD PTR [rax],0x0
   140008ddc:	add    eax,DWORD PTR [rax]
   140008dde:	add    BYTE PTR [rax],al
   140008de0:	add    BYTE PTR [rax],al
   140008de2:	add    BYTE PTR [rax],al
   140008de4:	(bad)  
   140008de5:	(bad)  
   140008de6:	(bad)  
   140008de7:	inc    DWORD PTR [rax]
   140008de9:	add    BYTE PTR [rax],al
   140008deb:	add    BYTE PTR [rax+0x0],al
   140008dee:	add    BYTE PTR [rax],al
   140008df0:	add    BYTE PTR [rsi+0x0],cl
	...
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	add    al,0x0
   140008e0a:	add    BYTE PTR [rax],al
   140008e0c:	sbb    BYTE PTR [rsi+0x0],cl
   140008e12:	add    BYTE PTR [rax],al
   140008e14:	add    BYTE PTR [rax],al
   140008e16:	add    BYTE PTR [rax],al
   140008e18:	fmul   DWORD PTR [rbp-0x71c00000]
   140008e1e:	add    BYTE PTR [rax],al
   140008e20:	cwde   
   140008e21:	pop    QWORD PTR [rax]
   140008e23:	add    al,al
   140008e25:	pop    QWORD PTR [rax]
	...
   140008e3f:	add    BYTE PTR [rax],bl
   140008e41:	ret    0x0
   140008e44:	add    al,BYTE PTR [rax]
	...
   140008e4e:	add    BYTE PTR [rax],al
   140008e50:	add    al,0x0
   140008e52:	add    BYTE PTR [rax],al
   140008e54:	push   rax
   140008e55:	add    BYTE PTR [rax],al
   140008e57:	add    BYTE PTR [rax-0x72],ch
	...
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	add    eax,DWORD PTR [rax]
   140008e72:	add    BYTE PTR [rax],al
   140008e74:	or     BYTE PTR [rsi+0x0],0x0
   140008e7b:	add    BYTE PTR [rax],al
   140008e7d:	add    BYTE PTR [rax],al
   140008e7f:	add    BYTE PTR [rax-0x37ffff72],ah
   140008e85:	mov    es,WORD PTR [rax]
   140008e87:	add    BYTE PTR [rax],ah
   140008e89:	pop    QWORD PTR [rax]
	...
   140008e9f:	add    BYTE PTR [rax],bl
   140008ea1:	ret    0x0
   140008ea4:	add    al,BYTE PTR [rax]
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	add    BYTE PTR [rax],al
   140008eaa:	add    BYTE PTR [rax],al
   140008eac:	(bad)  
   140008ead:	(bad)  
   140008eae:	(bad)  
   140008eaf:	inc    DWORD PTR [rax]
   140008eb1:	add    BYTE PTR [rax],al
   140008eb3:	add    BYTE PTR [rax+0x0],al
   140008eb6:	add    BYTE PTR [rax],al
   140008eb8:	push   0x8e
	...
   140008ec5:	add    BYTE PTR [rax],al
   140008ec7:	add    BYTE PTR [rax-0x3e],bl
   140008eca:	add    BYTE PTR [rax],al
   140008ecc:	add    DWORD PTR [rax],eax
   140008ece:	add    BYTE PTR [rax],al
   140008ed0:	add    BYTE PTR [rax],al
   140008ed2:	add    BYTE PTR [rax],al
   140008ed4:	(bad)  
   140008ed5:	(bad)  
   140008ed6:	(bad)  
   140008ed7:	inc    DWORD PTR [rax]
   140008ed9:	add    BYTE PTR [rax],al
   140008edb:	add    BYTE PTR [rax+0x0],al
   140008ede:	add    BYTE PTR [rax],al
   140008ee0:	lock mov es,WORD PTR [rax]
	...
   140008ef7:	add    BYTE PTR [rdx],al
   140008ef9:	add    BYTE PTR [rax],al
   140008efb:	add    BYTE PTR [rax],cl
   140008efd:	pop    QWORD PTR [rax]
	...
   140008f07:	add    al,cl
   140008f09:	mov    es,WORD PTR [rax]
   140008f0b:	add    BYTE PTR [rax],ah
   140008f0d:	pop    QWORD PTR [rax]
	...
   140008f1f:	add    BYTE PTR [rax+0xc2],al
   140008f25:	add    BYTE PTR [rax],al
   140008f27:	add    BYTE PTR [rax],cl
   140008f29:	add    BYTE PTR [rax],al
   140008f2b:	add    bh,bh
   140008f2d:	(bad)  
   140008f2e:	(bad)  
   140008f2f:	inc    DWORD PTR [rax]
   140008f31:	add    BYTE PTR [rax],al
   140008f33:	add    BYTE PTR [rax+0x0],al
   140008f36:	add    BYTE PTR [rax],al
   140008f38:	rex.W pop QWORD PTR [rax]
	...
   140008f4f:	add    BYTE PTR [rcx],al
   140008f51:	add    BYTE PTR [rax],al
   140008f53:	add    BYTE PTR [rax-0x71],ah
	...
   140008f5e:	add    BYTE PTR [rax],al
   140008f60:	jo     0x140008ef1
	...
   140008f6e:	add    BYTE PTR [rax],al
   140008f70:	add    dl,0x0
	...
   140008f7b:	add    bh,bh
   140008f7d:	(bad)  
   140008f7e:	(bad)  
   140008f7f:	inc    DWORD PTR [rax]
   140008f81:	add    BYTE PTR [rax],al
   140008f83:	add    BYTE PTR [rax+0x0],al
   140008f86:	add    BYTE PTR [rax],al
   140008f88:	rex.W pop QWORD PTR [rax]
	...
   140008f97:	add    BYTE PTR [rax-0x3e],bl
   140008f9a:	add    BYTE PTR [rax],al
   140008f9c:	add    DWORD PTR [rax],eax
	...
   140008fa6:	add    BYTE PTR [rax],al
   140008fa8:	add    al,0x0
   140008faa:	add    BYTE PTR [rax],al
   140008fac:	add    BYTE PTR [rax],al
   140008faf:	add    al,dh
   140008fb1:	mov    es,WORD PTR [rax]
	...
   140008fbf:	add    BYTE PTR [rax+0xc2],al
   140008fc5:	add    BYTE PTR [rax],al
   140008fc7:	add    BYTE PTR [rax],cl
   140008fc9:	add    BYTE PTR [rax],al
   140008fcb:	add    BYTE PTR [rax],al
   140008fcd:	add    BYTE PTR [rax],al
   140008fcf:	add    BYTE PTR [rax+rax*1],al
   140008fd2:	add    BYTE PTR [rax],al
   140008fd4:	add    BYTE PTR [rax],al
   140008fd7:	add    BYTE PTR [rax-0x71],cl
	...
   140008fe6:	add    BYTE PTR [rax],al
   140008fe8:	add    DWORD PTR [rax],eax
   140008fea:	add    BYTE PTR [rax],al
   140008fec:	test   al,0x0
   140008fee:	add    BYTE PTR [rax],al
   140008ff0:	add    al,0x0
   140008ff2:	add    BYTE PTR [rax],al
   140008ff4:	mov    al,0xc2
   140008ff6:	add    BYTE PTR [rax],al
   140008ff8:	adc    BYTE PTR [rax-0x70180000],dl
	...
   140009016:	add    BYTE PTR [rax],al
   140009018:	add    eax,0x28000000
   14000901d:	nop
	...
   140009026:	add    BYTE PTR [rax],al
   140009028:	pop    rax
   140009029:	nop
   14000902a:	add    BYTE PTR [rax],al
   14000902c:	adc    BYTE PTR [rax-0x71c00000],0x0
   140009033:	add    BYTE PTR [rax-0x3fffff71],bl
   140009039:	pop    QWORD PTR [rax]
	...
   140009057:	add    BYTE PTR [rax+0x40000c2],dh
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    BYTE PTR [rax],al
   140009061:	add    BYTE PTR [rax],al
   140009063:	add    bh,bh
   140009065:	(bad)  
   140009066:	(bad)  
   140009067:	inc    DWORD PTR [rax]
   140009069:	add    BYTE PTR [rax],al
   14000906b:	add    BYTE PTR [rax+0x0],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	adc    BYTE PTR [rax+0x0],dl
	...
   14000907e:	add    BYTE PTR [rax],al
   140009080:	add    bl,al
   140009082:	add    BYTE PTR [rax],al
   140009084:	add    eax,DWORD PTR [rax]
   140009086:	add    BYTE PTR [rax],al
   140009088:	add    BYTE PTR [rax],al
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	(bad)  
   14000908d:	(bad)  
   14000908e:	(bad)  
   14000908f:	inc    DWORD PTR [rax]
   140009091:	add    BYTE PTR [rax],al
   140009093:	add    BYTE PTR [rax+0x0],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	test   al,0x90
	...
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	add    al,0x0
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	rcl    BYTE PTR [rax+0x0],0x0
   1400090bb:	add    BYTE PTR [rax],al
   1400090bd:	add    BYTE PTR [rax],al
   1400090bf:	add    BYTE PTR [rax+0x40000090],al
   1400090c5:	mov    es,WORD PTR [rax]
   1400090c7:	add    BYTE PTR [rax-0x3fffff71],bl
   1400090cd:	pop    QWORD PTR [rax]
	...
   1400090e7:	add    BYTE PTR [rcx],al
	...
   1400090f1:	add    BYTE PTR [rax],al
   1400090f3:	add    BYTE PTR [rax-0x3d],cl
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	adc    BYTE PTR [rcx-0x6f180000],dl
	...
   140009116:	add    BYTE PTR [rax],al
   140009118:	add    DWORD PTR [rax],eax
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	sub    BYTE PTR [rcx+0x0],dl
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	cmp    BYTE PTR [rcx+0x0],dl
	...
   140009136:	add    BYTE PTR [rax],al
   140009138:	rex.W ret 
	...
   140009142:	add    BYTE PTR [rax],al
   140009144:	(bad)  
   140009145:	(bad)  
   140009146:	(bad)  
   140009147:	inc    DWORD PTR [rax]
   140009149:	add    BYTE PTR [rax],al
   14000914b:	add    BYTE PTR [rax+0x0],al
   14000914e:	add    BYTE PTR [rax],al
   140009150:	adc    BYTE PTR [rcx+0x0],dl
	...
   14000915e:	add    BYTE PTR [rax],al
   140009160:	add    DWORD PTR [rax],eax
	...
   14000916a:	add    BYTE PTR [rax],al
   14000916c:	js     0x140009131
   14000916e:	add    BYTE PTR [rax],al
   140009170:	mov    BYTE PTR [rcx-0x6ea00000],dl
	...
   14000918e:	add    BYTE PTR [rax],al
   140009190:	add    al,BYTE PTR [rax]
   140009192:	add    BYTE PTR [rax],al
   140009194:	movabs al,ds:0x91
   14000919d:	add    BYTE PTR [rax],al
   14000919f:	add    BYTE PTR [rax+0x38000091],bh
   1400091a5:	xchg   ecx,eax
	...
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	js     0x14000917d
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	add    DWORD PTR [rax],eax
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	add    BYTE PTR [rax],al
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	(bad)  
   1400091c5:	(bad)  
   1400091c6:	(bad)  
   1400091c7:	inc    DWORD PTR [rax]
   1400091c9:	add    BYTE PTR [rax],al
   1400091cb:	add    BYTE PTR [rax+0x0],al
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	mov    BYTE PTR [rcx+0x0],dl
	...
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	add    DWORD PTR [rax],eax
	...
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	mov    al,0xc3
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	or     BYTE PTR [rdx-0x6e200000],dl
	...
   14000920e:	add    BYTE PTR [rax],al
   140009210:	add    eax,DWORD PTR [rax]
   140009212:	add    BYTE PTR [rax],al
   140009214:	and    BYTE PTR [rdx+0x0],dl
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	add    BYTE PTR [rax],al
   14000921e:	add    BYTE PTR [rax],al
   140009220:	rex xchg edx,eax
   140009222:	add    BYTE PTR [rax],al
   140009224:	mov    eax,0x38000091
   140009229:	xchg   ecx,eax
	...
   14000923e:	add    BYTE PTR [rax],al
   140009240:	mov    al,0xc3
   140009242:	add    BYTE PTR [rax],al
   140009244:	add    al,BYTE PTR [rax]
   140009246:	add    BYTE PTR [rax],al
   140009248:	add    BYTE PTR [rax],al
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	(bad)  
   14000924d:	(bad)  
   14000924e:	(bad)  
   14000924f:	inc    DWORD PTR [rax]
   140009251:	add    BYTE PTR [rax],al
   140009253:	add    BYTE PTR [rax+0x0],al
   140009256:	add    BYTE PTR [rax],al
   140009258:	or     BYTE PTR [rdx+0x0],dl
	...
   140009266:	add    BYTE PTR [rax],al
   140009268:	add    DWORD PTR [rax],eax
	...
   140009272:	add    BYTE PTR [rax],al
   140009274:	call   0xd000933c
   140009279:	xchg   edx,eax
   14000927a:	add    BYTE PTR [rax],al
   14000927c:	push   0x92
	...
   140009295:	add    BYTE PTR [rax],al
   140009297:	add    BYTE PTR [rbx],al
   140009299:	add    BYTE PTR [rax],al
   14000929b:	add    BYTE PTR [rax+0x92],ch
   1400092a1:	add    BYTE PTR [rax],al
   1400092a3:	add    BYTE PTR [rax],al
   1400092a5:	add    BYTE PTR [rax],al
   1400092a7:	add    al,cl
   1400092a9:	xchg   edx,eax
   1400092aa:	add    BYTE PTR [rax],al
   1400092ac:	mov    eax,0x38000091
   1400092b1:	xchg   ecx,eax
	...
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	call   0x142009390
   1400092cd:	add    BYTE PTR [rax],al
   1400092cf:	add    BYTE PTR [rax],al
   1400092d1:	add    BYTE PTR [rax],al
   1400092d3:	add    bh,bh
   1400092d5:	(bad)  
   1400092d6:	(bad)  
   1400092d7:	inc    DWORD PTR [rax]
   1400092d9:	add    BYTE PTR [rax],al
   1400092db:	add    BYTE PTR [rax+0x0],al
   1400092de:	add    BYTE PTR [rax],al
   1400092e0:	nop
   1400092e1:	xchg   edx,eax
	...
   1400092ee:	add    BYTE PTR [rax],al
   1400092f0:	add    DWORD PTR [rax],eax
	...
   1400092fa:	add    BYTE PTR [rax],al
   1400092fc:	and    ah,al
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	sbb    BYTE PTR [rbx-0x6d100000],dl
	...
   14000931e:	add    BYTE PTR [rax],al
   140009320:	add    al,BYTE PTR [rax]
   140009322:	add    BYTE PTR [rax],al
   140009324:	xor    BYTE PTR [rbx+0x0],dl
   14000932a:	add    BYTE PTR [rax],al
   14000932c:	add    BYTE PTR [rax],al
   14000932e:	add    BYTE PTR [rax],al
   140009330:	xchg   rbx,rax
   140009332:	add    BYTE PTR [rax],al
   140009334:	lock mov WORD PTR [rax],es
	...
   140009347:	add    BYTE PTR [rax],ah
   140009349:	(bad)  
   14000934a:	add    BYTE PTR [rax],al
   14000934c:	add    DWORD PTR [rax],eax
   14000934e:	add    BYTE PTR [rax],al
   140009350:	add    BYTE PTR [rax],al
   140009352:	add    BYTE PTR [rax],al
   140009354:	(bad)  
   140009355:	(bad)  
   140009356:	(bad)  
   140009357:	inc    DWORD PTR [rax]
   140009359:	add    BYTE PTR [rax],al
   14000935b:	add    BYTE PTR [rax+0x0],al
   14000935e:	add    BYTE PTR [rax],al
   140009360:	sbb    BYTE PTR [rbx+0x0],dl
	...
   14000936e:	add    BYTE PTR [rax],al
   140009370:	add    DWORD PTR [rax],eax
	...
   14000937a:	add    BYTE PTR [rax],al
   14000937c:	pop    rax
   14000937d:	(bad)  
   14000937e:	add    BYTE PTR [rax],al
   140009380:	cwde   
   140009381:	xchg   ebx,eax
   140009382:	add    BYTE PTR [rax],al
   140009384:	jo     0x140009319
	...
   14000939e:	add    BYTE PTR [rax],al
   1400093a0:	add    DWORD PTR [rax],eax
   1400093a2:	add    BYTE PTR [rax],al
   1400093a4:	mov    al,0x93
	...
   1400093ae:	add    BYTE PTR [rax],al
   1400093b0:	rcl    BYTE PTR [rbx+0x0],0x0
	...
   1400093bf:	add    BYTE PTR [rax-0x3c],bl
	...
   1400093ca:	add    BYTE PTR [rax],al
   1400093cc:	(bad)  
   1400093cd:	(bad)  
   1400093ce:	(bad)  
   1400093cf:	inc    DWORD PTR [rax]
   1400093d1:	add    BYTE PTR [rax],al
   1400093d3:	add    BYTE PTR [rax+0x0],al
   1400093d6:	add    BYTE PTR [rax],al
   1400093d8:	cwde   
   1400093d9:	xchg   ebx,eax
	...
   14000940e:	add    BYTE PTR [rax],al
   140009410:	add    DWORD PTR [rsi],eax
   140009412:	add    al,BYTE PTR [rax]
   140009414:	(bad)  
   140009415:	xor    al,BYTE PTR [rdx]
   140009417:	xor    BYTE PTR [rcx],al
   140009419:	(bad)  
   14000941a:	add    al,BYTE PTR [rax]
   14000941c:	(bad)  
   14000941d:	xor    al,BYTE PTR [rdx]
   14000941f:	xor    BYTE PTR [rcx],al
   140009421:	or     al,BYTE PTR [rax+rax*1]
   140009424:	or     dh,BYTE PTR [rsi+rax*1]
   140009427:	add    BYTE PTR [rdx],cl
   140009429:	xor    al,BYTE PTR [rsi]
   14000942b:	jo     0x14000942e
   14000942d:	add    al,0x1
   14000942f:	add    BYTE PTR [rdx+rax*2],al
   140009432:	add    BYTE PTR [rax],al
   140009434:	add    DWORD PTR [rcx+rax*1],eax
   140009437:	add    BYTE PTR [rdx+rax*2],al
   14000943a:	add    BYTE PTR [rax],al
   14000943c:	add    DWORD PTR [rsi],eax
   14000943e:	add    al,BYTE PTR [rax]
   140009440:	(bad)  
   140009441:	xor    al,BYTE PTR [rdx]
   140009443:	xor    BYTE PTR [rcx],al
   140009445:	(bad)  
   140009446:	add    al,BYTE PTR [rax]
   140009448:	(bad)  
   140009449:	xor    al,BYTE PTR [rdx]
   14000944b:	xor    BYTE PTR [rcx],al
   14000944d:	or     al,BYTE PTR [rax+rax*1]
   140009450:	or     dh,BYTE PTR [rsi+rax*1]
   140009453:	add    BYTE PTR [rdx],cl
   140009455:	xor    al,BYTE PTR [rsi]
   140009457:	jo     0x14000945a
   140009459:	or     al,BYTE PTR [rax+rax*1]
   14000945c:	or     dh,BYTE PTR [rsi+rax*1]
   14000945f:	add    BYTE PTR [rdx],cl
   140009461:	xor    al,BYTE PTR [rsi]
   140009463:	jo     0x140009466
   140009465:	or     al,BYTE PTR [rax+rax*1]
   140009468:	or     dh,BYTE PTR [rsi+rax*1]
   14000946b:	add    BYTE PTR [rdx],cl
   14000946d:	xor    al,BYTE PTR [rsi]
   14000946f:	jo     0x140009472
   140009471:	(bad)  
   140009472:	add    al,BYTE PTR [rax]
   140009474:	(bad)  
   140009475:	xor    al,BYTE PTR [rdx]
   140009477:	xor    BYTE PTR [rcx],al
   140009479:	(bad)  
   14000947a:	add    al,BYTE PTR [rax]
   14000947c:	(bad)  
   14000947d:	xor    al,BYTE PTR [rdx]
   14000947f:	xor    BYTE PTR [rcx],al
   140009481:	or     al,BYTE PTR gs:[rax]
   140009484:	gs je  0x14000948d
   140009487:	add    BYTE PTR [rip+0x15000964],dl        # 0x155009df1
   14000948d:	push   rsp
   14000948e:	or     BYTE PTR [rax],al
   140009490:	adc    eax,0x15000734
   140009495:	xor    dl,BYTE PTR [rcx]
   140009497:	loopne 0x14000949a
   140009499:	(bad)  
   14000949a:	or     BYTE PTR [rax],al
   14000949c:	(bad)  
   14000949d:	je     0x1400094a5
   14000949f:	add    BYTE PTR [rdi],cl
   1400094a1:	push   rsp
   1400094a2:	or     BYTE PTR [rax],al
   1400094a4:	sysenter 
   1400094a6:	(bad)  
   1400094a7:	add    BYTE PTR [rdi],cl
   1400094a9:	xor    cl,BYTE PTR [rbx]
   1400094ab:	(bad)  
   1400094ac:	add    DWORD PTR [rax+rcx*1],edi
   1400094af:	add    BYTE PTR [rsp+rsi*2],bh
   1400094b2:	(bad)  
   1400094b3:	add    BYTE PTR [rdi],cl
   1400094b5:	push   rsp
   1400094b6:	or     BYTE PTR [rax],al
   1400094b8:	sysenter 
   1400094ba:	(bad)  
   1400094bb:	add    BYTE PTR [rdi],cl
   1400094bd:	xor    cl,BYTE PTR [rbx]
   1400094bf:	(bad)  
   1400094c0:	add    DWORD PTR [rax+rcx*1],edx
   1400094c3:	add    BYTE PTR [rsp+riz*2],dl
   1400094c6:	or     BYTE PTR [rax],al
   1400094c8:	adc    al,0x54
   1400094ca:	(bad)  
   1400094cb:	add    BYTE PTR [rsp+rsi*1],dl
   1400094ce:	(bad)  
   1400094cf:	add    BYTE PTR [rdx+rsi*1],dl
   1400094d2:	adc    BYTE PTR [rax+0x1],dh
   1400094d5:	clts   
   1400094d7:	add    BYTE PTR [rdi],cl
   1400094d9:	fs (bad) 
   1400094db:	add    BYTE PTR [rdi],cl
   1400094dd:	xor    al,0x6
   1400094df:	add    BYTE PTR [rdi],cl
   1400094e1:	xor    cl,BYTE PTR [rbx]
   1400094e3:	jo     0x1400094e6
   1400094e5:	clts   
   1400094e7:	add    BYTE PTR [rdi],cl
   1400094e9:	fs (bad) 
   1400094eb:	add    BYTE PTR [rdi],cl
   1400094ed:	xor    al,0x6
   1400094ef:	add    BYTE PTR [rdi],cl
   1400094f1:	xor    cl,BYTE PTR [rbx]
   1400094f3:	jo     0x1400094f6
   1400094f5:	add    al,0x1
   1400094f7:	add    BYTE PTR [rdx+rax*2],al
   1400094fa:	add    BYTE PTR [rax],al
   1400094fc:	add    DWORD PTR [rdx],ecx
   1400094fe:	add    al,0x0
   140009500:	or     dh,BYTE PTR [rsi+rax*1]
   140009503:	add    BYTE PTR [rdx],cl
   140009505:	xor    al,BYTE PTR [rsi]
   140009507:	jo     0x14000950a
   140009509:	or     al,0x6
   14000950b:	add    BYTE PTR [rdx+rsi*1],cl
   14000950e:	or     al,dh
   140009510:	(bad)  
   140009511:	rol    BYTE PTR [rax+riz*2],0x3
   140009515:	push   rax
   140009516:	add    dh,BYTE PTR [rax]
   140009518:	and    DWORD PTR [rbx+0x6],ecx
   14000951b:	add    BYTE PTR [rbx-0x2c],cl
   14000951e:	or     eax,DWORD PTR [rax]
   140009520:	pmulhuw mm1,QWORD PTR [rax+rax*1]
   140009524:	add    eax,0x40000a74
   140009529:	push   rax
   14000952a:	add    BYTE PTR [rax],al
   14000952c:	ja     0x14000957e
   14000952e:	add    BYTE PTR [rax],al
   140009530:	or     BYTE PTR [rbp+0x210000],dl
   140009536:	add    BYTE PTR [rax],al
   140009538:	rex push rax
   14000953a:	add    BYTE PTR [rax],al
   14000953c:	ja     0x14000958e
   14000953e:	add    BYTE PTR [rax],al
   140009540:	or     BYTE PTR [rbp-0x54ff0000],dl
   140009546:	or     al,BYTE PTR [rax]
   140009548:	stos   DWORD PTR es:[rdi],eax
   140009549:	in     al,0xc
   14000954b:	add    BYTE PTR [rcx+0xe000a54],ah
   140009551:	xor    al,0xd
   140009553:	add    BYTE PTR [rsi],cl
   140009555:	push   rdx
   140009556:	or     dh,al
   140009558:	or     al,al
   14000955a:	(bad)  
   14000955b:	(bad)  
   14000955c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4059564
   140009562:	or     eax,DWORD PTR [rax]
   140009564:	rcl    BYTE PTR [rbx+0x0],0x0
   140009568:	fcom   DWORD PTR [rax+rax*1+0x0]
   14000956c:	rex.R xchg ebp,eax
   14000956e:	add    BYTE PTR [rax],al
   140009570:	add    DWORD PTR [rsi],eax
   140009572:	add    al,BYTE PTR [rax]
   140009574:	(bad)  
   140009575:	push   rdx
   140009576:	add    dh,BYTE PTR [rax]
   140009578:	add    DWORD PTR [rdx],ecx
   14000957a:	add    al,0x0
   14000957c:	or     dh,BYTE PTR [rsi+rax*1]
   14000957f:	add    BYTE PTR [rdx],cl
   140009581:	xor    al,BYTE PTR [rsi]
   140009583:	jo     0x14000959e
   140009585:	and    DWORD PTR [rip+0x14621800],eax        # 0x15462ad8b
   14000958b:	loopne 0x14000959f
   14000958d:	jo     0x1400095a0
   14000958f:	(bad)  
   140009590:	adc    BYTE PTR [rax],dh
   140009592:	add    BYTE PTR [rax],al
   140009594:	rex.RX
   140009595:	add    BYTE PTR gs:[rax],al
   140009598:	mov    eax,0xff000084
   14000959d:	(bad)  
   14000959e:	(bad)  
   14000959f:	inc    DWORD PTR [rax]
   1400095a1:	add    BYTE PTR [rax],al
   1400095a3:	add    bh,bh
   1400095a5:	(bad)  
   1400095a6:	(bad)  
   1400095a7:	inc    DWORD PTR [rax]
   1400095a9:	add    BYTE PTR [rax],al
   1400095ab:	add    BYTE PTR [rcx],al
   1400095ad:	add    BYTE PTR [rax],al
   1400095af:	add    BYTE PTR [rax],al
   1400095b1:	add    BYTE PTR [rax],al
   1400095b3:	add    BYTE PTR [rcx],al
	...
   1400095c1:	add    BYTE PTR [rax],al
   1400095c3:	add    BYTE PTR [rbx],al
   1400095c5:	add    BYTE PTR [rax],al
   1400095c7:	add    BYTE PTR [rcx],al
   1400095c9:	add    BYTE PTR [rax],al
   1400095cb:	add    ah,ah
   1400095cd:	xchg   ebp,eax
   1400095ce:	add    BYTE PTR [rax],al
   1400095d0:	add    al,BYTE PTR [rax]
   1400095d2:	add    BYTE PTR [rax],al
   1400095d4:	add    al,BYTE PTR [rax]
   1400095d6:	add    BYTE PTR [rax],al
   1400095d8:	add    eax,DWORD PTR [rax]
   1400095da:	add    BYTE PTR [rax],al
   1400095dc:	add    DWORD PTR [rax],eax
   1400095de:	add    BYTE PTR [rax],al
   1400095e0:	clc    
   1400095e1:	xchg   ebp,eax
   1400095e2:	add    BYTE PTR [rax],al
   1400095e4:	add    BYTE PTR [rax],al
	...
   1400095ef:	add    al,ah
   1400095f1:	outs   dx,DWORD PTR ds:[rsi]
   1400095f2:	add    BYTE PTR [rax],al
   1400095f4:	cmp    BYTE PTR [rax],al
   1400095f6:	add    BYTE PTR [rax],al
   1400095f8:	add    BYTE PTR [rax],al
	...
   140009603:	add    BYTE PTR [rax+rsi*2],ah
   140009606:	add    BYTE PTR [rax],al
   140009608:	rex.W add BYTE PTR [rax],al
   14000960b:	add    BYTE PTR [rax],al
   14000960d:	add    BYTE PTR [rax],al
   14000960f:	add    BYTE PTR [rax],dl
   140009611:	add    BYTE PTR cs:[rax],al
   140009614:	(bad)  
   140009615:	(bad)  
   140009616:	(bad)  
   140009617:	(bad)  
   140009618:	jle    0x140009648
   14000961a:	add    BYTE PTR [rax],al
   14000961c:	add    BYTE PTR [rax],al
   14000961e:	add    BYTE PTR [rax],al
   140009620:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009621:	add    BYTE PTR cs:[rax],al
   140009624:	(bad)  
   140009625:	(bad)  
   140009626:	(bad)  
   140009627:	jmp    rax
   140009629:	outs   dx,DWORD PTR ds:[rsi]
   14000962a:	add    BYTE PTR [rax],al
   14000962c:	add    BYTE PTR [rax],al
   14000962e:	add    BYTE PTR [rax],al
   140009630:	in     eax,dx
   140009631:	outs   dx,DWORD PTR ds:[rsi]
   140009632:	add    BYTE PTR [rax],al
   140009634:	add    DWORD PTR [rax],eax
   140009636:	add    BYTE PTR [rax],al
   140009638:	cmc    
   140009639:	outs   dx,DWORD PTR ds:[rsi]
   14000963a:	add    BYTE PTR [rax],al
   14000963c:	add    al,BYTE PTR [rax]
   14000963e:	add    BYTE PTR [rax],al
   140009640:	(bad)  
   140009641:	jo     0x140009643
   140009643:	add    BYTE PTR [rax],al
   140009645:	add    BYTE PTR [rax],al
   140009647:	add    BYTE PTR [rdx],dh
   140009649:	jo     0x14000964b
   14000964b:	add    BYTE PTR [rbx],al
   14000964d:	add    BYTE PTR [rax],al
   14000964f:	add    BYTE PTR [rcx],bl
   140009651:	or     al,BYTE PTR [rdx]
   140009653:	add    BYTE PTR [rdx],cl
   140009655:	xor    al,BYTE PTR [rsi]
   140009657:	push   rax
   140009658:	rex.RX
   140009659:	add    BYTE PTR gs:[rax],al
   14000965c:	mov    eax,0x19000084
   140009661:	or     eax,DWORD PTR [rbx]
   140009663:	add    BYTE PTR [rbx],cl
   140009665:	rex.X (bad) 
   140009667:	push   rax
   140009668:	(bad)  
   140009669:	xor    BYTE PTR [rax],al
   14000966b:	add    BYTE PTR [rsi+0x65],al
   14000966e:	add    BYTE PTR [rax],al
   140009670:	mov    eax,0x1000084
   140009675:	sub    eax,0x542d0006
   14000967a:	(bad)  
   14000967b:	add    BYTE PTR [rdx],cl
   14000967d:	xor    al,0x9
   14000967f:	add    BYTE PTR [rdx],cl
   140009681:	xor    al,BYTE PTR [rsi]
   140009683:	jo     0x1400096a6
   140009685:	add    eax,0x64050002
   14000968a:	(bad)  
   14000968b:	add    BYTE PTR [rax],ah
   14000968d:	xor    al,BYTE PTR [rax]
   14000968f:	add    BYTE PTR [rdx+0x32],ch
   140009692:	add    BYTE PTR [rax],al
   140009694:	je     0x14000962c
   140009696:	add    BYTE PTR [rax],al
   140009698:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x1240596a0
   14000969e:	or     BYTE PTR [rax],al
   1400096a0:	push   0x32
   1400096a2:	add    BYTE PTR [rax],al
   1400096a4:	xor    BYTE PTR [rdx],0x0
   1400096a7:	add    BYTE PTR [rsi+rdx*4+0x210000],al
   1400096ae:	add    BYTE PTR [rax],al
   1400096b0:	push   0x32
   1400096b2:	add    BYTE PTR [rax],al
   1400096b4:	xor    BYTE PTR [rdx],0x0
   1400096b7:	add    BYTE PTR [rsi+rdx*4+0x210000],al
   1400096be:	add    BYTE PTR [rax],al
   1400096c0:	and    BYTE PTR [rdx],dh
   1400096c2:	add    BYTE PTR [rax],al
   1400096c4:	push   0x32
   1400096c6:	add    BYTE PTR [rax],al
   1400096c8:	je     0x140009660
   1400096ca:	add    BYTE PTR [rax],al
   1400096cc:	add    DWORD PTR [rdx],ecx
   1400096ce:	add    al,0x0
   1400096d0:	or     dh,BYTE PTR [rdi+rax*1]
   1400096d3:	add    BYTE PTR [rdx],cl
   1400096d5:	xor    al,BYTE PTR [rsi]
   1400096d7:	jo     0x1400096fa
   1400096d9:	add    eax,0x64050002
   1400096de:	(bad)  
   1400096df:	add    al,dl
   1400096e1:	xor    al,0x0
   1400096e3:	add    bl,ch
   1400096e5:	xor    al,0x0
   1400096e7:	add    ah,cl
   1400096e9:	xchg   esi,eax
   1400096ea:	add    BYTE PTR [rax],al
   1400096ec:	and    DWORD PTR [rax],eax
   1400096ee:	add    BYTE PTR [rax],al
   1400096f0:	shl    BYTE PTR [rax+rax*1],1
   1400096f3:	add    bl,ch
   1400096f5:	xor    al,0x0
   1400096f7:	add    ah,cl
   1400096f9:	xchg   esi,eax
   1400096fa:	add    BYTE PTR [rax],al
   1400096fc:	add    DWORD PTR [rcx+rax*1],eax
   1400096ff:	add    BYTE PTR [rdx+rax*2],al
   140009702:	add    BYTE PTR [rax],al
   140009704:	add    DWORD PTR [rcx+rax*1],eax
   140009707:	add    BYTE PTR [rdx+rax*2],al
   14000970a:	add    BYTE PTR [rax],al
   14000970c:	add    DWORD PTR [rcx+rax*1],eax
   14000970f:	add    BYTE PTR [rdx+rax*2],al
   140009712:	add    BYTE PTR [rax],al
   140009714:	add    DWORD PTR [rdx],ecx
   140009716:	add    al,0x0
   140009718:	or     dh,BYTE PTR [rsi+rax*1]
   14000971b:	add    BYTE PTR [rdx],cl
   14000971d:	xor    al,BYTE PTR [rsi]
   14000971f:	jo     0x140009722
   140009721:	(bad)  
   140009722:	add    al,BYTE PTR [rax]
   140009724:	(bad)  
   140009725:	push   rdx
   140009726:	add    dh,BYTE PTR [rax]
   140009728:	add    DWORD PTR [rsi],eax
   14000972a:	add    al,BYTE PTR [rax]
   14000972c:	(bad)  
   14000972d:	xor    al,BYTE PTR [rdx]
   14000972f:	xor    BYTE PTR [rcx],al
   140009731:	or     al,BYTE PTR [rax+rax*1]
   140009734:	or     dh,BYTE PTR [rax+rcx*1]
   140009737:	add    BYTE PTR [rdx],cl
   140009739:	push   rdx
   14000973a:	(bad)  
   14000973b:	jo     0x14000973e
   14000973d:	(bad)  
   14000973e:	add    al,BYTE PTR [rax]
   140009740:	(bad)  
   140009741:	xor    al,BYTE PTR [rdx]
   140009743:	xor    BYTE PTR [rcx],al
   140009745:	(bad)  
   140009746:	add    al,BYTE PTR [rax]
   140009748:	(bad)  
   140009749:	push   rdx
   14000974a:	add    dh,BYTE PTR [rax]
   14000974c:	add    DWORD PTR [rsi],eax
   14000974e:	add    al,BYTE PTR [rax]
   140009750:	(bad)  
   140009751:	xor    al,BYTE PTR [rdx]
   140009753:	xor    BYTE PTR [rcx],al
   140009755:	or     al,BYTE PTR [rax+rax*1]
   140009758:	or     dh,BYTE PTR [rax+rcx*1]
   14000975b:	add    BYTE PTR [rdx],cl
   14000975d:	push   rdx
   14000975e:	(bad)  
   14000975f:	jo     0x140009762
   140009761:	or     al,BYTE PTR [rax+rax*1]
   140009764:	or     dh,BYTE PTR [rsi+rax*1]
   140009767:	add    BYTE PTR [rdx],cl
   140009769:	xor    al,BYTE PTR [rsi]
   14000976b:	jo     0x14000976e
   14000976d:	(bad)  
   14000976e:	add    al,BYTE PTR [rax]
   140009770:	(bad)  
   140009771:	xor    al,BYTE PTR [rdx]
   140009773:	xor    BYTE PTR [rcx],al
   140009775:	(bad)  
   140009776:	add    al,BYTE PTR [rax]
   140009778:	(bad)  
   140009779:	xor    al,BYTE PTR [rdx]
   14000977b:	xor    BYTE PTR [rcx],dl
   14000977d:	sbb    BYTE PTR [rax+rax*1],al
   140009780:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009783:	add    BYTE PTR [rdx],cl
   140009785:	push   rdx
   140009786:	(bad)  
   140009787:	jo     0x1400097cf
   140009789:	add    BYTE PTR gs:[rax],al
   14000978c:	loopne 0x140009712
   14000978e:	add    BYTE PTR [rax],al
   140009790:	(bad)  
   140009791:	(bad)  
   140009792:	(bad)  
   140009793:	call   QWORD PTR [rax-0xfffff91]
   140009799:	and    al,BYTE PTR [rax]
   14000979b:	add    bh,bh
   14000979d:	(bad)  
   14000979e:	(bad)  
   14000979f:	jmp    FWORD PTR [rdx]
   1400097a1:	and    eax,DWORD PTR [rax]
   1400097a3:	add    BYTE PTR [rax],al
   1400097a5:	add    BYTE PTR [rax],al
   1400097a7:	add    BYTE PTR [rdx],bh
   1400097a9:	and    eax,DWORD PTR [rax]
   1400097ab:	add    bh,bh
   1400097ad:	(bad)  
   1400097ae:	(bad)  
   1400097af:	inc    DWORD PTR [rcx]
   1400097b1:	(bad)  
   1400097b2:	add    al,BYTE PTR [rax]
   1400097b4:	(bad)  
   1400097b5:	xor    al,BYTE PTR [rdx]
   1400097b7:	xor    BYTE PTR [rcx],al
   1400097b9:	add    al,0x1
   1400097bb:	add    BYTE PTR [rdx+rax*2],al
   1400097be:	add    BYTE PTR [rax],al
   1400097c0:	add    DWORD PTR [rcx+rax*1],eax
   1400097c3:	add    BYTE PTR [rdx+rax*2],al
   1400097c6:	add    BYTE PTR [rax],al
   1400097c8:	adc    DWORD PTR [rbx],esp
   1400097ca:	or     DWORD PTR [rax],eax
   1400097cc:	and    esi,DWORD PTR [rdx+rbx*1+0x0]
   1400097d0:	(bad)  
   1400097d1:	sbb    DWORD PTR fs:[rax],eax
   1400097d4:	sbb    esi,DWORD PTR [rax+rbx*1]
   1400097d7:	add    BYTE PTR [rdi],cl
   1400097d9:	add    DWORD PTR [rsi],edx
   1400097db:	add    BYTE PTR [rax+rdx*2],al
   1400097de:	add    BYTE PTR [rax],al
   1400097e0:	rex.RX
   1400097e1:	add    BYTE PTR gs:[rax],al
   1400097e4:	or     BYTE PTR [rbp-0x10000],al
   1400097ea:	(bad)  
   1400097eb:	push   rax
   1400097ed:	jno    0x1400097ef
   1400097ef:	add    BYTE PTR [rax],al
   1400097f1:	add    BYTE PTR [rax],al
   1400097f3:	add    ah,bh
   1400097f5:	jno    0x1400097f7
   1400097f7:	add    BYTE PTR [rcx],al
   1400097f9:	add    BYTE PTR [rax],al
   1400097fb:	add    BYTE PTR [rax],cl
   1400097fd:	jb     0x1400097ff
   1400097ff:	add    BYTE PTR [rax],dl
   140009801:	pop    rbp
   140009802:	add    BYTE PTR [rax],al
   140009804:	(bad)  
   140009805:	(bad)  
   140009806:	(bad)  
   140009807:	call   FWORD PTR [rsi+0x5d]
   14000980a:	add    BYTE PTR [rax],al
   14000980c:	add    BYTE PTR [rax],al
   14000980e:	add    BYTE PTR [rax],al
   140009810:	loop   0x14000986f
   140009812:	add    BYTE PTR [rax],al
   140009814:	add    DWORD PTR [rax],eax
   140009816:	add    BYTE PTR [rax],al
   140009818:	pop    rdi
   140009819:	pop    rsi
   14000981a:	add    BYTE PTR [rax],al
   14000981c:	add    al,BYTE PTR [rax]
   14000981e:	add    BYTE PTR [rax],al
   140009820:	rcr    BYTE PTR [rsi+0x0],cl
   140009823:	add    BYTE PTR [rcx],al
   140009825:	add    BYTE PTR [rax],al
   140009827:	add    dl,dh
   140009829:	pop    rsi
   14000982a:	add    BYTE PTR [rax],al
   14000982c:	add    BYTE PTR [rax],al
   14000982e:	add    BYTE PTR [rax],al
   140009830:	adc    bl,BYTE PTR [rdi+0x0]
   140009833:	add    bh,bh
   140009835:	(bad)  
   140009836:	(bad)  
   140009837:	inc    DWORD PTR [rcx]
   140009839:	add    al,0x1
   14000983b:	add    BYTE PTR [rdx+rax*2],al
   14000983e:	add    BYTE PTR [rax],al
   140009840:	add    DWORD PTR [rsi],eax
   140009842:	add    al,BYTE PTR [rax]
   140009844:	(bad)  
   140009845:	xor    al,BYTE PTR [rdx]
   140009847:	xor    BYTE PTR [rcx],al
   140009849:	or     al,BYTE PTR [rax+rax*1]
   14000984c:	or     dh,BYTE PTR [rsi+rax*1]
   14000984f:	add    BYTE PTR [rdx],cl
   140009851:	xor    al,BYTE PTR [rsi]
   140009853:	jo     0x14000986e
   140009855:	and    al,0x9
   140009857:	add    BYTE PTR [rsp+riz*2],ah
   14000985a:	pushf  
   14000985b:	add    BYTE PTR [rax],ah
   14000985d:	xor    al,0x9b
   14000985f:	add    BYTE PTR [rbx],dl
   140009861:	add    DWORD PTR [rsi+0xaf00c00],edx
   140009867:	loopne 0x140009871
   140009869:	jo     0x14000986b
   14000986b:	add    BYTE PTR [rsi+0x65],al
   14000986e:	add    BYTE PTR [rax],al
   140009870:	xor    BYTE PTR [rbp-0x10000],al
   140009876:	(bad)  
   140009877:	jmp    QWORD PTR [rax+0x70]
   14000987d:	add    BYTE PTR [rax],al
   14000987f:	add    BYTE PTR [rax+rsi*2+0x10000],ch
   140009886:	add    BYTE PTR [rax],al
   140009888:	mov    eax,0x2000070
   14000988d:	add    BYTE PTR [rax],al
   14000988f:	add    dh,al
   140009891:	jo     0x140009893
   140009893:	add    BYTE PTR [rbx],al
   140009895:	add    BYTE PTR [rax],al
   140009897:	add    dl,dl
   140009899:	jo     0x14000989b
   14000989b:	add    BYTE PTR [rax+rax*1],al
   14000989e:	add    BYTE PTR [rax],al
   1400098a0:	add    BYTE PTR [rax],al
   1400098a2:	add    BYTE PTR [rax],al
   1400098a4:	add    eax,0xde000000
   1400098a9:	jo     0x1400098ab
   1400098ab:	add    BYTE PTR [rsi],al
   1400098ad:	add    BYTE PTR [rax],al
   1400098af:	add    dl,ch
   1400098b1:	jo     0x1400098b3
   1400098b3:	add    BYTE PTR [rax+rax*1],al
   1400098b6:	add    BYTE PTR [rax],al
   1400098b8:	add    BYTE PTR [rax],al
   1400098ba:	add    BYTE PTR [rax],al
   1400098bc:	add    eax,0x7000000
   1400098c1:	add    BYTE PTR [rax],al
   1400098c3:	add    BYTE PTR [rax],cl
   1400098c5:	add    BYTE PTR [rax],al
   1400098c7:	add    BYTE PTR [rdx],al
   1400098c9:	add    BYTE PTR [rax],al
   1400098cb:	add    al,dl
   1400098cd:	cwde   
   1400098ce:	add    BYTE PTR [rax],al
   1400098d0:	or     DWORD PTR [rax],eax
   1400098d2:	add    BYTE PTR [rax],al
   1400098d4:	nop
   1400098d5:	rol    BYTE PTR [rax],0x0
   1400098d8:	jo     0x1400098da
   1400098da:	add    BYTE PTR [rax],al
   1400098dc:	div    BYTE PTR [rax+0x0]
   1400098df:	add    BYTE PTR [rax+0x0],bl
   1400098e2:	add    BYTE PTR [rax],al
   1400098e4:	add    BYTE PTR [rax],al
	...
   1400098ef:	add    BYTE PTR [rdi+0x71],bh
   1400098f2:	add    BYTE PTR [rax],al
   1400098f4:	rex.W add BYTE PTR [rax],al
	...
   1400098ff:	add    BYTE PTR [rax+0x49],dl
   140009902:	add    BYTE PTR [rax],al
   140009904:	(bad)  
   140009905:	(bad)  
   140009906:	(bad)  
   140009907:	(bad)  
   140009908:	call   0x140009956
   14000990d:	add    BYTE PTR [rax],al
   14000990f:	add    BYTE PTR [rsi],ah
   140009911:	rex.WX add BYTE PTR [rax],al
   140009914:	(bad)  
   140009915:	(bad)  
   140009916:	(bad)  
   140009917:	dec    DWORD PTR [rbp+0x4a]
   14000991d:	add    BYTE PTR [rax],al
   14000991f:	add    BYTE PTR [rdx+0x100004a],ch
   140009925:	add    BYTE PTR [rax],al
   140009927:	add    dl,cl
   140009929:	rex.WX add BYTE PTR [rax],al
   14000992c:	add    al,BYTE PTR [rax]
   14000992e:	add    BYTE PTR [rax],al
   140009930:	fisttp QWORD PTR [rdx+0x0]
   140009933:	add    BYTE PTR [rbx],al
   140009935:	add    BYTE PTR [rax],al
   140009937:	add    BYTE PTR [rbp+0x4b],cl
   14000993a:	add    BYTE PTR [rax],al
   14000993c:	add    al,0x0
   14000993e:	add    BYTE PTR [rax],al
   140009940:	scas   eax,DWORD PTR es:[rdi]
   140009941:	rex.WXB add BYTE PTR [r8],al
   140009944:	add    eax,0xe0000000
   140009949:	rex.WXB add BYTE PTR [r8],al
   14000994c:	(bad)  
   14000994d:	add    BYTE PTR [rax],al
   14000994f:	add    BYTE PTR [rdx],dl
   140009951:	rex.WR add BYTE PTR [rax],r8b
   140009954:	(bad)  
   140009955:	add    BYTE PTR [rax],al
   140009957:	add    BYTE PTR [rax+0x600004c],cl
   14000995d:	add    BYTE PTR [rax],al
   14000995f:	add    BYTE PTR [rsi+0x500004d],ah
   140009965:	add    BYTE PTR [rax],al
   140009967:	add    BYTE PTR [rsi+0x4e],bl
   14000996a:	add    BYTE PTR [rax],al
   14000996c:	add    al,0x0
   14000996e:	add    BYTE PTR [rax],al
   140009970:	jb     0x1400099c0
   140009972:	add    BYTE PTR [rax],al
   140009974:	add    eax,DWORD PTR [rax]
   140009976:	add    BYTE PTR [rax],al
   140009978:	xchg   edi,eax
   140009979:	rex.WRX add BYTE PTR [rax],r8b
   14000997c:	add    al,BYTE PTR [rax]
   14000997e:	add    BYTE PTR [rax],al
   140009980:	cmc    
   140009981:	rex.WRX add BYTE PTR [rax],r8b
   140009984:	add    DWORD PTR [rax],eax
   140009986:	add    BYTE PTR [rax],al
   140009988:	adc    cl,BYTE PTR [rdi+0x0]
   14000998b:	add    BYTE PTR [rax],al
   14000998d:	add    BYTE PTR [rax],al
   14000998f:	add    BYTE PTR [rcx],ah
   140009991:	rex.WRXB add BYTE PTR [r8],r8b
   140009994:	(bad)  
   140009995:	(bad)  
   140009996:	(bad)  
   140009997:	push   rsi
   140009999:	jo     0x14000999b
   14000999b:	add    BYTE PTR [rax],al
   14000999d:	add    BYTE PTR [rax],al
   14000999f:	add    BYTE PTR [rcx+rsi*2],al
   1400099a2:	add    BYTE PTR [rax],al
   1400099a4:	or     BYTE PTR [rax],al
   1400099a6:	add    BYTE PTR [rax],al
   1400099a8:	jo     0x140009a1b
   1400099aa:	add    BYTE PTR [rax],al
   1400099ac:	add    BYTE PTR [rax],al
   1400099ae:	add    BYTE PTR [rax],al
   1400099b0:	mov    WORD PTR [rcx+0x0],?
   1400099b3:	add    BYTE PTR [rax],cl
   1400099b5:	add    BYTE PTR [rax],al
   1400099b7:	add    al,dl
   1400099b9:	jno    0x1400099bb
   1400099bb:	add    BYTE PTR [rax],al
   1400099bd:	add    BYTE PTR [rax],al
   1400099bf:	add    BYTE PTR [rcx],bl
   1400099c1:	or     eax,DWORD PTR [rbx]
   1400099c3:	add    BYTE PTR [rbx],cl
   1400099c5:	(bad)  
   1400099c6:	(bad)  
   1400099c7:	push   rax
   1400099c8:	(bad)  
   1400099c9:	xor    BYTE PTR [rax],al
   1400099cb:	add    BYTE PTR [rsi+0x65],al
   1400099ce:	add    BYTE PTR [rax],al
   1400099d0:	xor    BYTE PTR [rbp+0xa190000],al
   1400099d6:	add    al,BYTE PTR [rax]
   1400099d8:	or     dl,BYTE PTR [rdx+0x6]
   1400099db:	push   rax
   1400099dc:	rex.RX
   1400099dd:	add    BYTE PTR gs:[rax],al
   1400099e0:	xor    BYTE PTR [rbp+0x20110000],al
   1400099e6:	or     BYTE PTR [rax],al
   1400099e8:	and    BYTE PTR [rbp+rcx*1+0x0],dl
   1400099ec:	sbb    esi,DWORD PTR [rbx+rcx*1]
   1400099ef:	add    BYTE PTR [rip+0x7e00952],cl        # 0x147e0a347
   1400099f5:	jo     0x1400099fd
   1400099f7:	(bad)  
   1400099f8:	rex.RX
   1400099f9:	add    BYTE PTR gs:[rax],al
   1400099fc:	pop    rax
   1400099fd:	test   DWORD PTR [rax],eax
   1400099ff:	add    bh,bh
   140009a01:	(bad)  
   140009a02:	(bad)  
   140009a03:	jmp    rax
   140009a05:	outs   dx,BYTE PTR ds:[rsi]
   140009a06:	add    BYTE PTR [rax],al
   140009a08:	add    BYTE PTR [rax],al
   140009a0a:	add    BYTE PTR [rax],al
   140009a0c:	(bad)  
   140009a0d:	outs   dx,DWORD PTR ds:[rsi]
   140009a0e:	add    BYTE PTR [rax],al
   140009a10:	add    DWORD PTR [rax],eax
   140009a12:	add    BYTE PTR [rax],al
   140009a14:	and    BYTE PTR [rdi+0x0],ch
   140009a17:	add    BYTE PTR [rcx],al
   140009a19:	add    BYTE PTR [rax],al
   140009a1b:	add    BYTE PTR [rsi],ch
   140009a1d:	outs   dx,DWORD PTR ds:[rsi]
   140009a1e:	add    BYTE PTR [rax],al
   140009a20:	jo     0x140009a40
   140009a22:	add    BYTE PTR [rax],al
   140009a24:	(bad)  
   140009a25:	(bad)  
   140009a26:	(bad)  
   140009a27:	call   rcx
   140009a29:	(bad)  
   140009a2a:	add    BYTE PTR [rax],al
   140009a2c:	add    BYTE PTR [rax],al
   140009a2e:	add    BYTE PTR [rax],al
   140009a30:	in     eax,dx
   140009a31:	(bad)  
   140009a32:	add    BYTE PTR [rax],al
   140009a34:	add    DWORD PTR [rax],eax
   140009a36:	add    BYTE PTR [rax],al
   140009a38:	(bad)  
   140009a39:	(bad)  
   140009a3a:	add    BYTE PTR [rax],al
   140009a3c:	add    al,BYTE PTR [rax]
   140009a3e:	add    BYTE PTR [rax],al
   140009a40:	pop    rdi
   140009a41:	(bad)  
   140009a42:	add    BYTE PTR [rax],al
   140009a44:	add    eax,DWORD PTR [rax]
   140009a46:	add    BYTE PTR [rax],al
   140009a48:	nop
   140009a49:	(bad)  
   140009a4a:	add    BYTE PTR [rax],al
   140009a4c:	(bad)  
   140009a4d:	(bad)  
   140009a4e:	(bad)  
   140009a4f:	inc    DWORD PTR [rcx]
   140009a51:	(bad)  
   140009a52:	add    al,BYTE PTR [rax]
   140009a54:	(bad)  
   140009a55:	xor    al,BYTE PTR [rdx]
   140009a57:	push   rax
   140009a58:	add    DWORD PTR [rsi],eax
   140009a5a:	add    al,BYTE PTR [rax]
   140009a5c:	(bad)  
   140009a5d:	xor    al,BYTE PTR [rdx]
   140009a5f:	xor    BYTE PTR [rcx],al
   140009a61:	(bad)  
   140009a62:	add    al,BYTE PTR [rax]
   140009a64:	(bad)  
   140009a65:	xor    al,BYTE PTR [rdx]
   140009a67:	xor    BYTE PTR [rcx],dl
   140009a69:	sbb    BYTE PTR [rax+rax*1],al
   140009a6c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009a6f:	add    BYTE PTR [rdx],cl
   140009a71:	push   rdx
   140009a72:	(bad)  
   140009a73:	jo     0x140009abb
   140009a75:	add    BYTE PTR gs:[rax],al
   140009a78:	add    BYTE PTR [rbp-0x10000],0xff
   140009a7f:	call   rax
   140009a81:	outs   dx,BYTE PTR ds:[rsi]
   140009a82:	add    BYTE PTR [rax],al
   140009a84:	add    BYTE PTR [rax],al
   140009a86:	add    BYTE PTR [rax],al
   140009a88:	rcr    BYTE PTR [rip+0xffffffffffff0000],1        # 0x13fff9a8e
   140009a8e:	(bad)  
   140009a8f:	push   rbp
   140009a91:	sbb    eax,0x0
   140009a96:	add    BYTE PTR [rax],al
   140009a98:	push   rsi
   140009a99:	(bad)  
   140009a9a:	add    BYTE PTR [rax],al
   140009a9c:	(bad)  
   140009a9d:	(bad)  
   140009a9e:	(bad)  
   140009a9f:	inc    DWORD PTR [rcx]
   140009aa1:	(bad)  
   140009aa2:	add    al,BYTE PTR [rax]
   140009aa4:	(bad)  
   140009aa5:	xor    al,BYTE PTR [rdx]
   140009aa7:	xor    BYTE PTR [rcx],dl
   140009aa9:	adc    al,0x4
   140009aab:	add    BYTE PTR [rsp+rsi*1],dl
   140009aae:	or     DWORD PTR [rax],eax
   140009ab0:	(bad)  
   140009ab1:	push   rdx
   140009ab2:	add    dh,BYTE PTR [rax+0x46]
   140009ab5:	add    BYTE PTR gs:[rax],al
   140009ab8:	test   al,0x85
   140009aba:	add    BYTE PTR [rax],al
   140009abc:	(bad)  
   140009abd:	(bad)  
   140009abe:	(bad)  
   140009abf:	inc    DWORD PTR [rax+0x70]
   140009ac5:	add    BYTE PTR [rax],al
   140009ac7:	add    al,dh
   140009ac9:	rex.XB add BYTE PTR [r8],al
   140009acc:	(bad)  
   140009acd:	(bad)  
   140009ace:	(bad)  
   140009acf:	call   QWORD PTR [rsi+0x44]
   140009ad5:	add    BYTE PTR [rax],al
   140009ad7:	add    dh,al
   140009ad9:	add    BYTE PTR [rax],r8b
   140009adc:	(bad)  
   140009add:	(bad)  
   140009ade:	(bad)  
   140009adf:	inc    DWORD PTR [rcx]
   140009ae1:	clts   
   140009ae3:	add    BYTE PTR [rdi],cl
   140009ae5:	fs (bad) 
   140009ae7:	add    BYTE PTR [rdi],cl
   140009ae9:	xor    al,0x6
   140009aeb:	add    BYTE PTR [rdi],cl
   140009aed:	xor    cl,BYTE PTR [rbx]
   140009aef:	jo     0x140009b02
   140009af1:	and    cl,BYTE PTR [rdx]
   140009af3:	add    BYTE PTR [rdx],ah
   140009af5:	fs adc eax,0x14341e00
   140009afb:	add    BYTE PTR [rdx],dl
   140009afd:	ror    BYTE PTR [rbx],cl
   140009aff:	lock or eax,esp
   140009b02:	(bad)  
   140009b03:	rol    BYTE PTR [rip+0x46500470],0x65        # 0x186509f7a
   140009b0a:	add    BYTE PTR [rax],al
   140009b0c:	rol    BYTE PTR [rbp-0x10000],1
   140009b12:	(bad)  
   140009b13:	call   QWORD PTR [rax-0x5fffff90]
   140009b19:	add    BYTE PTR [r8],r8b
   140009b1c:	(bad)  
   140009b1d:	(bad)  
   140009b1e:	(bad)  
   140009b1f:	call   FWORD PTR [rsi+0x46]
   140009b25:	add    BYTE PTR [rax],al
   140009b27:	add    BYTE PTR [rcx+0x48],dl
   140009b2a:	add    BYTE PTR [rax],al
   140009b2c:	(bad)  
   140009b2d:	(bad)  
   140009b2e:	(bad)  
   140009b2f:	inc    DWORD PTR [rcx]
   140009b31:	or     al,BYTE PTR [rax+rax*1]
   140009b34:	or     dh,BYTE PTR [rsi+rax*1]
   140009b37:	add    BYTE PTR [rdx],cl
   140009b39:	xor    al,BYTE PTR [rsi]
   140009b3b:	jo     0x140009b3e
   140009b3d:	(bad)  
   140009b3e:	add    al,BYTE PTR [rax]
   140009b40:	(bad)  
   140009b41:	xor    al,BYTE PTR [rdx]
   140009b43:	xor    BYTE PTR [rcx],ah
   140009b45:	add    eax,0x74050002
   140009b4a:	(bad)  
   140009b4b:	add    BYTE PTR [rax+0x5c],dh
   140009b4e:	add    BYTE PTR [rax],al
   140009b50:	movabs ds:0x2100009b3c00005c,eax
   140009b59:	add    BYTE PTR [rdx],al
   140009b5b:	add    BYTE PTR [rax],al
   140009b5d:	je     0x140009b65
   140009b5f:	add    BYTE PTR [rax+0x5c],dh
   140009b62:	add    BYTE PTR [rax],al
   140009b64:	movabs ds:0x1100009b3c00005c,eax
   140009b6d:	(bad)  
   140009b6e:	or     BYTE PTR [rax],al
   140009b70:	(bad)  
   140009b71:	xor    al,0x16
   140009b73:	add    BYTE PTR [rdi],cl
   140009b75:	ror    BYTE PTR [rax],cl
   140009b77:	lock (bad) 
   140009b79:	loopne 0x140009b7f
   140009b7b:	jo     0x140009b80
   140009b7d:	(bad)  
   140009b7e:	add    dl,BYTE PTR [rax+0x46]
   140009b81:	add    BYTE PTR gs:[rax],al
   140009b84:	clc    
   140009b85:	test   DWORD PTR [rax],eax
   140009b87:	add    bh,bh
   140009b89:	(bad)  
   140009b8a:	(bad)  
   140009b8b:	jmp    rax
   140009b8d:	jno    0x140009b8f
   140009b8f:	add    BYTE PTR [rax-0xffffa7],dl
   140009b95:	(bad)  
   140009b96:	(bad)  
   140009b97:	jmp    QWORD PTR [rcx+0x5a]
   140009b9a:	add    BYTE PTR [rax],al
   140009b9c:	add    BYTE PTR [rax],al
   140009b9e:	add    BYTE PTR [rax],al
   140009ba0:	cmp    ebx,DWORD PTR [rax+rax*1+0x0]
   140009ba4:	(bad)  
   140009ba5:	(bad)  
   140009ba6:	(bad)  
   140009ba7:	inc    DWORD PTR [rcx]
   140009ba9:	adc    cl,BYTE PTR [rax]
   140009bab:	add    BYTE PTR [rdx],dl
   140009bad:	push   rsp
   140009bae:	or     al,BYTE PTR [rax]
   140009bb0:	adc    dh,BYTE PTR [rcx+rcx*1]
   140009bb3:	add    BYTE PTR [rdx],dl
   140009bb5:	xor    cl,BYTE PTR [rsi]
   140009bb7:	loopne 0x140009bc5
   140009bb9:	jo     0x140009bc6
   140009bbb:	(bad)  
   140009bbc:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4159bca
   140009bc2:	or     DWORD PTR [rax],eax
   140009bc4:	adc    eax,0x15000864
   140009bc9:	xor    al,0x7
   140009bcb:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0ad03
   140009bd1:	(bad)  
   140009bd2:	add    al,BYTE PTR [rax]
   140009bd4:	(bad)  
   140009bd5:	xor    al,BYTE PTR [rdx]
   140009bd7:	xor    BYTE PTR [rcx],ah
   140009bd9:	add    eax,0x74050002
   140009bde:	(bad)  
   140009bdf:	add    BYTE PTR [rax],ah
   140009be1:	pop    rax
   140009be2:	add    BYTE PTR [rax],al
   140009be4:	pop    rsp
   140009be5:	pop    rax
   140009be6:	add    BYTE PTR [rax],al
   140009be8:	rcr    BYTE PTR [rbx+0x210000],1
   140009bee:	add    BYTE PTR [rax],al
   140009bf0:	and    BYTE PTR [rax+0x0],bl
   140009bf3:	add    BYTE PTR [rax+rbx*2+0x0],bl
   140009bf7:	add    al,dl
   140009bf9:	fwait
   140009bfa:	add    BYTE PTR [rax],al
   140009bfc:	add    DWORD PTR [rsi],eax
   140009bfe:	add    al,BYTE PTR [rax]
   140009c00:	(bad)  
   140009c01:	xor    al,BYTE PTR [rdx]
   140009c03:	xor    BYTE PTR [rcx],al
   140009c05:	or     al,BYTE PTR [rax+rax*1]
   140009c08:	or     dh,BYTE PTR [rsi+rax*1]
   140009c0b:	add    BYTE PTR [rdx],cl
   140009c0d:	xor    al,BYTE PTR [rsi]
   140009c0f:	jo     0x140009c12
   140009c11:	or     al,BYTE PTR [rax+rax*1]
   140009c14:	or     dh,BYTE PTR [rsi+rax*1]
   140009c17:	add    BYTE PTR [rdx],cl
   140009c19:	xor    al,BYTE PTR [rsi]
   140009c1b:	jo     0x140009c2e
   140009c1d:	(bad)  
   140009c1e:	or     BYTE PTR [rax],al
   140009c20:	(bad)  
   140009c21:	adc    al,BYTE PTR fs:[rax]
   140009c24:	sbb    dh,BYTE PTR [rcx+rdx*1]
   140009c27:	add    BYTE PTR [rsi],cl
   140009c29:	mov    dl,0x7
   140009c2b:	loopne 0x140009c32
   140009c2d:	jo     0x140009c33
   140009c2f:	push   rax
   140009c30:	rex.RX
   140009c31:	add    BYTE PTR gs:[rax],al
   140009c34:	and    BYTE PTR [rsi-0x10000],al
   140009c3a:	(bad)  
   140009c3b:	push   QWORD PTR [rax+0x70]
   140009c3e:	add    BYTE PTR [rax],al
   140009c40:	xor    BYTE PTR [rdi],ch
   140009c42:	add    BYTE PTR [rax],al
   140009c44:	(bad)  
   140009c45:	(bad)  
   140009c46:	(bad)  
   140009c47:	jmp    FWORD PTR [rax+0x2f]
   140009c4d:	add    BYTE PTR [rax],al
   140009c4f:	add    BYTE PTR [rsi],dl
   140009c51:	xor    DWORD PTR [rax],eax
   140009c53:	add    bh,bh
   140009c55:	(bad)  
   140009c56:	(bad)  
   140009c57:	inc    DWORD PTR [rcx]
   140009c59:	or     al,BYTE PTR [rax+rax*1]
   140009c5c:	or     dh,BYTE PTR [rsi+rax*1]
   140009c5f:	add    BYTE PTR [rdx],cl
   140009c61:	xor    al,BYTE PTR [rsi]
   140009c63:	jo     0x140009c66
   140009c65:	or     al,BYTE PTR [rax+rax*1]
   140009c68:	or     dh,BYTE PTR [rsi+rax*1]
   140009c6b:	add    BYTE PTR [rdx],cl
   140009c6d:	xor    al,BYTE PTR [rsi]
   140009c6f:	jo     0x140009c72
   140009c71:	or     al,BYTE PTR [rax+rax*1]
   140009c74:	or     dh,BYTE PTR [rsi+rax*1]
   140009c77:	add    BYTE PTR [rdx],cl
   140009c79:	xor    al,BYTE PTR [rsi]
   140009c7b:	jo     0x140009c7e
   140009c7d:	(bad)  
   140009c7e:	add    al,BYTE PTR [rax]
   140009c80:	(bad)  
   140009c81:	xor    al,BYTE PTR [rdx]
   140009c83:	xor    BYTE PTR [rcx],bl
   140009c85:	and    cl,BYTE PTR [rax]
   140009c87:	add    BYTE PTR [rdx],ah
   140009c89:	xor    al,0x10
   140009c8b:	add    BYTE PTR [rcx],dl
   140009c8d:	jb     0x140009c9c
   140009c8f:	lock or esp,eax
   140009c92:	or     eax,eax
   140009c94:	(bad)  
   140009c95:	jo     0x140009c9d
   140009c97:	(bad)  
   140009c98:	rex.RX
   140009c99:	add    BYTE PTR gs:[rax],al
   140009c9c:	rex.W xchg BYTE PTR [rax],al
   140009c9f:	add    bh,bh
   140009ca1:	(bad)  
   140009ca2:	(bad)  
   140009ca3:	inc    eax
   140009ca5:	ins    DWORD PTR es:[rdi],dx
   140009ca6:	add    BYTE PTR [rax],al
   140009ca8:	(bad)  
   140009ca9:	(bad)  
   140009caa:	(bad)  
   140009cab:	dec    esp
   140009cad:	ins    DWORD PTR es:[rdi],dx
   140009cae:	add    BYTE PTR [rax],al
   140009cb0:	add    DWORD PTR [rax],eax
   140009cb2:	add    BYTE PTR [rax],al
   140009cb4:	add    BYTE PTR [rax],al
   140009cb6:	add    BYTE PTR [rax],al
   140009cb8:	add    DWORD PTR [rax],eax
   140009cba:	add    BYTE PTR [rax],al
   140009cbc:	add    BYTE PTR [rax],al
   140009cbe:	add    BYTE PTR [rax],al
   140009cc0:	add    al,BYTE PTR [rax]
   140009cc2:	add    BYTE PTR [rax],al
   140009cc4:	add    al,BYTE PTR [rax]
   140009cc6:	add    BYTE PTR [rax],al
   140009cc8:	add    eax,DWORD PTR [rax]
   140009cca:	add    BYTE PTR [rax],al
   140009ccc:	add    DWORD PTR [rax],eax
   140009cce:	add    BYTE PTR [rax],al
   140009cd0:	(bad)  
   140009cd1:	pushf  
   140009cd2:	add    BYTE PTR [rax],al
   140009cd4:	add    BYTE PTR [rax],al
	...
   140009cdf:	add    al,bl
   140009ce1:	ins    DWORD PTR es:[rdi],dx
   140009ce2:	add    BYTE PTR [rax],al
   140009ce4:	cmp    BYTE PTR [rax],al
	...
   140009cee:	add    BYTE PTR [rax],al
   140009cf0:	xor    BYTE PTR [rax+rax*1],dl
   140009cf3:	add    bh,bh
   140009cf5:	(bad)  
   140009cf6:	(bad)  
   140009cf7:	jmp    FWORD PTR [rdi+0x14]
   140009cfd:	add    BYTE PTR [rax],al
   140009cff:	add    ch,ah
   140009d01:	adc    al,0x0
   140009d03:	add    BYTE PTR [rcx],al
   140009d05:	add    BYTE PTR [rax],al
   140009d07:	add    bl,dh
   140009d09:	adc    al,0x0
   140009d0b:	add    BYTE PTR [rdx],al
   140009d0d:	add    BYTE PTR [rax],al
   140009d0f:	add    BYTE PTR [rdi+0x1000015],dl
   140009d15:	add    BYTE PTR [rax],al
   140009d17:	add    BYTE PTR [rbp-0xffffeb],bh
   140009d1d:	(bad)  
   140009d1e:	(bad)  
   140009d1f:	(bad)  
   140009d20:	fsubr  DWORD PTR [rbp+0x0]
   140009d23:	add    BYTE PTR [rax],al
   140009d25:	add    BYTE PTR [rax],al
   140009d27:	add    ch,ah
   140009d29:	ins    DWORD PTR es:[rdi],dx
   140009d2a:	add    BYTE PTR [rax],al
   140009d2c:	add    eax,DWORD PTR [rax]
   140009d2e:	add    BYTE PTR [rax],al
   140009d30:	add    ch,BYTE PTR [rsi+0x0]
   140009d33:	add    BYTE PTR [rax],al
   140009d35:	add    BYTE PTR [rax],al
   140009d37:	add    BYTE PTR [rcx],bl
   140009d39:	or     al,BYTE PTR [rdx]
   140009d3b:	add    BYTE PTR [rdx],cl
   140009d3d:	xor    al,BYTE PTR [rsi]
   140009d3f:	push   rax
   140009d40:	rex.RX
   140009d41:	add    BYTE PTR gs:[rax],al
   140009d44:	rex.W xchg BYTE PTR [rax],al
   140009d47:	add    BYTE PTR [rcx],bl
   140009d49:	(bad)  
   140009d4a:	or     BYTE PTR [rax],al
   140009d4c:	(bad)  
   140009d4d:	xor    al,0xf
   140009d4f:	add    BYTE PTR [rcx],dl
   140009d51:	jb     0x140009d60
   140009d53:	lock or esp,eax
   140009d56:	or     eax,eax
   140009d58:	(bad)  
   140009d59:	jo     0x140009d61
   140009d5b:	(bad)  
   140009d5c:	rex.RX
   140009d5d:	add    BYTE PTR gs:[rax],al
   140009d60:	jo     0x140009ce8
   140009d62:	add    BYTE PTR [rax],al
   140009d64:	(bad)  
   140009d65:	(bad)  
   140009d66:	(bad)  
   140009d67:	push   QWORD PTR [rax+0x6d]
   140009d6a:	add    BYTE PTR [rax],al
   140009d6c:	(bad)  
   140009d6d:	(bad)  
   140009d6e:	(bad)  
   140009d6f:	(bad)  
   140009d70:	jl     0x140009ddf
   140009d72:	add    BYTE PTR [rax],al
   140009d74:	add    DWORD PTR [rax],eax
   140009d76:	add    BYTE PTR [rax],al
   140009d78:	add    BYTE PTR [rax],al
   140009d7a:	add    BYTE PTR [rax],al
   140009d7c:	add    DWORD PTR [rax],eax
   140009d7e:	add    BYTE PTR [rax],al
   140009d80:	add    BYTE PTR [rax],al
   140009d82:	add    BYTE PTR [rax],al
   140009d84:	add    al,BYTE PTR [rax]
   140009d86:	add    BYTE PTR [rax],al
   140009d88:	add    al,BYTE PTR [rax]
   140009d8a:	add    BYTE PTR [rax],al
   140009d8c:	add    eax,DWORD PTR [rax]
   140009d8e:	add    BYTE PTR [rax],al
   140009d90:	add    DWORD PTR [rax],eax
   140009d92:	add    BYTE PTR [rax],al
   140009d94:	cwde   
   140009d95:	popf   
   140009d96:	add    BYTE PTR [rax],al
   140009d98:	add    BYTE PTR [rax],al
	...
   140009da3:	add    BYTE PTR [rax+0x3800006d],cl
   140009da9:	add    BYTE PTR [rax],al
   140009dab:	add    BYTE PTR [rax],al
   140009dad:	add    BYTE PTR [rax],al
   140009daf:	add    BYTE PTR [rax+0x12],dh
   140009db2:	add    BYTE PTR [rax],al
   140009db4:	(bad)  
   140009db5:	(bad)  
   140009db6:	(bad)  
   140009db7:	(bad)  
   140009db8:	mov    edi,0x12
   140009dbd:	add    BYTE PTR [rax],al
   140009dbf:	add    ch,dh
   140009dc1:	adc    al,BYTE PTR [rax]
   140009dc3:	add    BYTE PTR [rcx],al
   140009dc5:	add    BYTE PTR [rax],al
   140009dc7:	add    BYTE PTR [rdi],cl
   140009dc9:	adc    eax,DWORD PTR [rax]
   140009dcb:	add    BYTE PTR [rdx],al
   140009dcd:	add    BYTE PTR [rax],al
   140009dcf:	add    BYTE PTR [rdx+0x1000013],ch
   140009dd5:	add    BYTE PTR [rax],al
   140009dd7:	add    bl,ah
   140009dd9:	adc    eax,DWORD PTR [rax]
   140009ddb:	add    bh,bh
   140009ddd:	(bad)  
   140009dde:	(bad)  
   140009ddf:	dec    DWORD PTR [rax+0x6d]
   140009de5:	add    BYTE PTR [rax],al
   140009de7:	add    BYTE PTR [rbp+0x300006d],dl
   140009ded:	add    BYTE PTR [rax],al
   140009def:	add    BYTE PTR [rdx+0x6d],dh
   140009df5:	add    BYTE PTR [rax],al
   140009df7:	add    BYTE PTR [rcx],bl
   140009df9:	or     al,BYTE PTR [rdx]
   140009dfb:	add    BYTE PTR [rdx],cl
   140009dfd:	xor    al,BYTE PTR [rsi]
   140009dff:	push   rax
   140009e00:	rex.RX
   140009e01:	add    BYTE PTR gs:[rax],al
   140009e04:	jo     0x140009d8c
   140009e06:	add    BYTE PTR [rax],al
   140009e08:	sbb    DWORD PTR [rdx],esp
   140009e0a:	or     BYTE PTR [rax],al
   140009e0c:	and    dh,BYTE PTR [rax+rdx*1]
   140009e0f:	add    BYTE PTR [rcx],dl
   140009e11:	jb     0x140009e20
   140009e13:	lock or esp,eax
   140009e16:	or     eax,eax
   140009e18:	(bad)  
   140009e19:	jo     0x140009e21
   140009e1b:	(bad)  
   140009e1c:	rex.RX
   140009e1d:	add    BYTE PTR gs:[rax],al
   140009e20:	cwde   
   140009e21:	xchg   BYTE PTR [rax],al
   140009e23:	add    bh,bh
   140009e25:	(bad)  
   140009e26:	(bad)  
   140009e27:	jmp    QWORD PTR [rax]
   140009e29:	ins    DWORD PTR es:[rdi],dx
   140009e2a:	add    BYTE PTR [rax],al
   140009e2c:	(bad)  
   140009e2d:	(bad)  
   140009e2e:	(bad)  
   140009e2f:	jmp    FWORD PTR [rbp*2+0x10000]
   140009e36:	add    BYTE PTR [rax],al
   140009e38:	add    BYTE PTR [rax],al
   140009e3a:	add    BYTE PTR [rax],al
   140009e3c:	add    DWORD PTR [rax],eax
   140009e3e:	add    BYTE PTR [rax],al
   140009e40:	add    BYTE PTR [rax],al
   140009e42:	add    BYTE PTR [rax],al
   140009e44:	add    al,BYTE PTR [rax]
   140009e46:	add    BYTE PTR [rax],al
   140009e48:	add    al,BYTE PTR [rax]
   140009e4a:	add    BYTE PTR [rax],al
   140009e4c:	add    eax,DWORD PTR [rax]
   140009e4e:	add    BYTE PTR [rax],al
   140009e50:	add    DWORD PTR [rax],eax
   140009e52:	add    BYTE PTR [rax],al
   140009e54:	pop    rax
   140009e55:	sahf   
   140009e56:	add    BYTE PTR [rax],al
   140009e58:	add    BYTE PTR [rax],al
	...
   140009e63:	add    BYTE PTR [rax],bh
   140009e65:	ins    DWORD PTR es:[rdi],dx
   140009e66:	add    BYTE PTR [rax],al
   140009e68:	cmp    BYTE PTR [rax],al
   140009e6a:	add    BYTE PTR [rax],al
   140009e6c:	add    BYTE PTR [rax],al
   140009e6e:	add    BYTE PTR [rax],al
   140009e70:	movabs al,ds:0x8ffffffff000010
   140009e79:	adc    DWORD PTR [rax],eax
   140009e7b:	add    BYTE PTR [rax],al
   140009e7d:	add    BYTE PTR [rax],al
   140009e7f:	add    BYTE PTR [rsi],bh
   140009e81:	adc    DWORD PTR [rax],eax
   140009e83:	add    BYTE PTR [rcx],al
   140009e85:	add    BYTE PTR [rax],al
   140009e87:	add    BYTE PTR [rcx+rdx*1+0x0],cl
   140009e8b:	add    BYTE PTR [rdx],al
   140009e8d:	add    BYTE PTR [rax],al
   140009e8f:	add    BYTE PTR [rax],al
   140009e91:	adc    al,BYTE PTR [rax]
   140009e93:	add    BYTE PTR [rcx],al
   140009e95:	add    BYTE PTR [rax],al
   140009e97:	add    BYTE PTR [rsi],ah
   140009e99:	adc    al,BYTE PTR [rax]
   140009e9b:	add    bh,bh
   140009e9d:	(bad)  
   140009e9e:	(bad)  
   140009e9f:	(bad)  
   140009ea0:	cmp    BYTE PTR [rbp+0x0],ch
   140009ea3:	add    BYTE PTR [rax],al
   140009ea5:	add    BYTE PTR [rax],al
   140009ea7:	add    BYTE PTR [rbp+0x6d],al
   140009eaa:	add    BYTE PTR [rax],al
   140009eac:	add    eax,DWORD PTR [rax]
   140009eae:	add    BYTE PTR [rax],al
   140009eb0:	(bad)  
   140009eb1:	ins    DWORD PTR es:[rdi],dx
   140009eb2:	add    BYTE PTR [rax],al
   140009eb4:	add    BYTE PTR [rax],al
   140009eb6:	add    BYTE PTR [rax],al
   140009eb8:	sbb    DWORD PTR [rdx],ecx
   140009eba:	add    al,BYTE PTR [rax]
   140009ebc:	or     dh,BYTE PTR [rdx]
   140009ebe:	(bad)  
   140009ebf:	push   rax
   140009ec0:	rex.RX
   140009ec1:	add    BYTE PTR gs:[rax],al
   140009ec4:	cwde   
   140009ec5:	xchg   BYTE PTR [rax],al
   140009ec7:	add    BYTE PTR [rcx],al
   140009ec9:	(bad)  
   140009eca:	add    al,BYTE PTR [rax]
   140009ecc:	(bad)  
   140009ecd:	xor    al,BYTE PTR [rdx]
   140009ecf:	xor    BYTE PTR [rcx],dl
   140009ed1:	sbb    BYTE PTR [rax+rax*1],al
   140009ed4:	sbb    BYTE PTR [rbx+rcx*1],dh
   140009ed7:	add    BYTE PTR [rdx],cl
   140009ed9:	push   rdx
   140009eda:	(bad)  
   140009edb:	jo     0x140009f23
   140009edd:	add    BYTE PTR gs:[rax],al
   140009ee0:	rol    BYTE PTR [rsi-0x10000],0xff
   140009ee7:	inc    DWORD PTR [rax+0x6f]
   140009eea:	add    BYTE PTR [rax],al
   140009eec:	add    BYTE PTR [rax],al
   140009eee:	add    BYTE PTR [rax],al
   140009ef0:	outs   dx,BYTE PTR ds:[rsi]
   140009ef1:	outs   dx,DWORD PTR ds:[rsi]
   140009ef2:	add    BYTE PTR [rax],al
   140009ef4:	add    DWORD PTR [rax],eax
   140009ef6:	add    BYTE PTR [rax],al
   140009ef8:	sub    BYTE PTR [rdi+0x0],0x0
   140009efc:	add    BYTE PTR [rax],al
   140009efe:	add    BYTE PTR [rax],al
   140009f00:	mov    al,0x1f
   140009f02:	add    BYTE PTR [rax],al
   140009f04:	(bad)  
   140009f05:	(bad)  
   140009f06:	(bad)  
   140009f07:	(bad)  
   140009f08:	std    
   140009f09:	(bad)  
   140009f0a:	add    BYTE PTR [rax],al
   140009f0c:	add    BYTE PTR [rax],al
   140009f0e:	add    BYTE PTR [rax],al
   140009f10:	sbb    DWORD PTR [rax],esp
   140009f12:	add    BYTE PTR [rax],al
   140009f14:	add    DWORD PTR [rax],eax
   140009f16:	add    BYTE PTR [rax],al
   140009f18:	rex.WXB and BYTE PTR [r8],al
   140009f1b:	add    BYTE PTR [rdx],al
   140009f1d:	add    BYTE PTR [rax],al
   140009f1f:	add    BYTE PTR [rbx-0xffffe0],cl
   140009f25:	(bad)  
   140009f26:	(bad)  
   140009f27:	inc    DWORD PTR [rcx]
   140009f29:	(bad)  
   140009f2a:	add    al,BYTE PTR [rax]
   140009f2c:	(bad)  
   140009f2d:	xor    al,BYTE PTR [rdx]
   140009f2f:	push   rax
   140009f30:	add    DWORD PTR [rsi],eax
   140009f32:	add    al,BYTE PTR [rax]
   140009f34:	(bad)  
   140009f35:	xor    al,BYTE PTR [rdx]
   140009f37:	xor    BYTE PTR [rcx],al
   140009f39:	(bad)  
   140009f3a:	add    al,BYTE PTR [rax]
   140009f3c:	(bad)  
   140009f3d:	xor    al,BYTE PTR [rdx]
   140009f3f:	xor    BYTE PTR [rcx],al
   140009f41:	or     al,BYTE PTR [rax+rax*1]
   140009f44:	or     dh,BYTE PTR [rsi+rax*1]
   140009f47:	add    BYTE PTR [rdx],cl
   140009f49:	xor    al,BYTE PTR [rsi]
   140009f4b:	jo     0x140009f4e
   140009f4d:	(bad)  
   140009f4e:	add    al,BYTE PTR [rax]
   140009f50:	(bad)  
   140009f51:	xor    al,BYTE PTR [rdx]
   140009f53:	xor    BYTE PTR [rcx],al
   140009f55:	or     al,BYTE PTR [rax+rax*1]
   140009f58:	or     dh,BYTE PTR [rsi+rax*1]
   140009f5b:	add    BYTE PTR [rdx],cl
   140009f5d:	xor    al,BYTE PTR [rsi]
   140009f5f:	jo     0x140009f72
   140009f61:	and    BYTE PTR [rax],cl
   140009f63:	add    BYTE PTR [rax],ah
   140009f65:	push   rsp
   140009f66:	or     al,0x0
   140009f68:	sbb    esi,DWORD PTR [rbx+rcx*1]
   140009f6b:	add    BYTE PTR [rip+0x7e00952],cl        # 0x147e0a8c3
   140009f71:	jo     0x140009f79
   140009f73:	(bad)  
   140009f74:	rex.RX
   140009f75:	add    BYTE PTR gs:[rax],al
   140009f78:	call   0x13f00a003
   140009f7d:	(bad)  
   140009f7e:	(bad)  
   140009f7f:	inc    DWORD PTR [rax+0x6e]
   140009f82:	add    BYTE PTR [rax],al
   140009f84:	add    BYTE PTR [rax],al
   140009f86:	add    BYTE PTR [rax],al
   140009f88:	xor    BYTE PTR [rdi],dl
   140009f8a:	add    BYTE PTR [rax],al
   140009f8c:	(bad)  
   140009f8d:	(bad)  
   140009f8e:	(bad)  
   140009f8f:	call   FWORD PTR [rcx+0x17]
   140009f92:	add    BYTE PTR [rax],al
   140009f94:	add    BYTE PTR [rax],al
   140009f96:	add    BYTE PTR [rax],al
   140009f98:	add    DWORD PTR [rsi],eax
   140009f9a:	add    al,BYTE PTR [rax]
   140009f9c:	(bad)  
   140009f9d:	xor    al,BYTE PTR [rdx]
   140009f9f:	push   rax
   140009fa0:	adc    DWORD PTR [rdx],esp
   140009fa2:	or     BYTE PTR [rax],al
   140009fa4:	and    ah,BYTE PTR [rbx+rcx*1+0x0]
   140009fa8:	sbb    eax,0x18000a54
   140009fad:	xor    al,0x9
   140009faf:	add    BYTE PTR [rdx],cl
   140009fb1:	push   rdx
   140009fb2:	(bad)  
   140009fb3:	jo     0x140009ffb
   140009fb5:	add    BYTE PTR gs:[rax],al
   140009fb8:	adc    BYTE PTR [rdi-0x10000],al
   140009fbe:	(bad)  
   140009fbf:	call   QWORD PTR [rax]
   140009fc1:	outs   dx,BYTE PTR ds:[rsi]
   140009fc2:	add    BYTE PTR [rax],al
   140009fc4:	add    BYTE PTR [rax],al
   140009fc6:	add    BYTE PTR [rax],al
   140009fc8:	jo     0x140009fe0
   140009fca:	add    BYTE PTR [rax],al
   140009fcc:	(bad)  
   140009fcd:	(bad)  
   140009fce:	(bad)  
   140009fcf:	call   FWORD PTR [rbx+0x16]
   140009fd5:	add    BYTE PTR [rax],al
   140009fd7:	add    BYTE PTR [rcx],al
   140009fd9:	(bad)  
   140009fda:	add    al,BYTE PTR [rax]
   140009fdc:	(bad)  
   140009fdd:	xor    al,BYTE PTR [rdx]
   140009fdf:	push   rax
   140009fe0:	add    DWORD PTR [rsi],eax
   140009fe2:	add    al,BYTE PTR [rax]
   140009fe4:	(bad)  
   140009fe5:	push   rdx
   140009fe6:	add    dh,BYTE PTR [rax]
   140009fe8:	add    DWORD PTR [rcx+rax*1],eax
   140009feb:	add    BYTE PTR [rdx+rax*2],al
   140009fee:	add    BYTE PTR [rax],al
   140009ff0:	add    DWORD PTR [rcx+rax*1],eax
   140009ff3:	add    BYTE PTR [rdx+rax*2],al
   140009ff6:	add    BYTE PTR [rax],al
   140009ff8:	and    DWORD PTR [rip+0x34050002],eax        # 0x17405a000
   140009ffe:	add    al,0x0
   14000a000:	mov    al,0x73
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	ret    
   14000a005:	jae    0x14000a007
   14000a007:	add    al,dh
   14000a009:	lahf   
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	and    DWORD PTR [rax],eax
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	mov    al,0x73
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	ret    
   14000a015:	jae    0x14000a017
   14000a017:	add    al,dh
   14000a019:	lahf   
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	add    DWORD PTR [rcx+rax*1],eax
   14000a01f:	add    BYTE PTR [rdx+rax*2],al
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	add    DWORD PTR [rcx+rax*1],eax
   14000a027:	add    BYTE PTR [rdx+rax*2],al
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	and    DWORD PTR [rip+0x34050002],eax        # 0x17405a034
   14000a032:	add    al,0x0
   14000a034:	rex jae 0x14000a037
   14000a037:	add    BYTE PTR [rbx+0x73],dl
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	and    al,0xa0
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	and    DWORD PTR [rax],eax
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	rex jae 0x14000a047
   14000a047:	add    BYTE PTR [rbx+0x73],dl
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	and    al,0xa0
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	adc    DWORD PTR [rdi],esp
   14000a052:	or     eax,DWORD PTR [rax]
   14000a054:	(bad)  
   14000a055:	je     0x14000a073
   14000a057:	add    BYTE PTR [rbx],ah
   14000a059:	sbb    eax,DWORD PTR fs:[rax]
   14000a05c:	(bad)  
   14000a05d:	xor    al,0x1a
   14000a05f:	add    BYTE PTR [rbx],dl
   14000a061:	add    DWORD PTR [rsi],edx
   14000a063:	add    BYTE PTR [rax],cl
   14000a065:	lock (bad) 
   14000a067:	loopne 0x14000a06d
   14000a069:	push   rax
   14000a06a:	add    BYTE PTR [rax],al
   14000a06c:	rex.RX
   14000a06d:	add    BYTE PTR gs:[rax],al
   14000a070:	cmp    BYTE PTR [rdi-0x10000],al
   14000a076:	(bad)  
   14000a077:	jmp    QWORD PTR [rax]
   14000a079:	jb     0x14000a07b
   14000a07b:	add    BYTE PTR [rax],al
   14000a07d:	add    BYTE PTR [rax],al
   14000a07f:	add    BYTE PTR [rdx+rsi*2],ch
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	add    DWORD PTR [rax],eax
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	cmp    BYTE PTR [rdx+0x0],dh
   14000a08b:	add    BYTE PTR [rax],al
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rax+0x5f],dl
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	(bad)  
   14000a095:	(bad)  
   14000a096:	(bad)  
   14000a097:	dec    DWORD PTR [rdi+0x5f]
   14000a09d:	add    BYTE PTR [rax],al
   14000a09f:	add    bl,ch
   14000a0a1:	pop    rdi
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	add    DWORD PTR [rax],eax
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	(bad)  
   14000a0a9:	(bad)  
   14000a0aa:	add    BYTE PTR [rax],al
   14000a0ac:	add    al,BYTE PTR [rax]
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	ret    
   14000a0b1:	(bad)  
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b4:	add    DWORD PTR [rax],eax
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	jrcxz  0x14000a11a
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	add    BYTE PTR [rax],al
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	add    esp,DWORD PTR [rcx+0x0]
   14000a0c3:	add    bh,bh
   14000a0c5:	(bad)  
   14000a0c6:	(bad)  
   14000a0c7:	call   QWORD PTR [rcx]
   14000a0c9:	(bad)  
   14000a0ca:	(bad)  
   14000a0cb:	add    BYTE PTR [rsi],dl
   14000a0cd:	xor    al,0x10
   14000a0cf:	add    BYTE PTR [rdx],cl
   14000a0d1:	mov    dl,0x6
   14000a0d3:	jo     0x14000a0da
   14000a0d5:	(bad)  
   14000a0d6:	add    al,0x50
   14000a0d8:	rex.RX
   14000a0d9:	add    BYTE PTR gs:[rax],al
   14000a0dc:	(bad)  
   14000a0dd:	xchg   DWORD PTR [rax],eax
   14000a0df:	add    bh,bh
   14000a0e1:	(bad)  
   14000a0e2:	(bad)  
   14000a0e3:	push   QWORD PTR [rax+0x2000006f]
   14000a0e9:	sub    eax,DWORD PTR [rax]
   14000a0eb:	add    bh,bh
   14000a0ed:	(bad)  
   14000a0ee:	(bad)  
   14000a0ef:	jmp    QWORD PTR [rbx+rbp*1+0x0]
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	or     BYTE PTR [rax+rax*1],ch
   14000a0fb:	add    bh,bh
   14000a0fd:	(bad)  
   14000a0fe:	(bad)  
   14000a0ff:	inc    DWORD PTR [rcx]
   14000a101:	(bad)  
   14000a102:	add    al,BYTE PTR [rax]
   14000a104:	(bad)  
   14000a105:	xor    al,BYTE PTR [rdx]
   14000a107:	xor    BYTE PTR [rcx],bl
   14000a109:	and    ecx,DWORD PTR [rax]
   14000a10b:	add    BYTE PTR [rbx],ah
   14000a10d:	je     0x14000a11a
   14000a10f:	add    BYTE PTR [rsi],bl
   14000a111:	or     al,BYTE PTR fs:[rax]
   14000a114:	sbb    DWORD PTR [rcx+rcx*1],esi
   14000a117:	add    BYTE PTR [rbx],cl
   14000a119:	push   rdx
   14000a11a:	(bad)  
   14000a11b:	loopne 0x14000a163
   14000a11d:	add    BYTE PTR gs:[rax],al
   14000a120:	mov    BYTE PTR [rdi-0x10000],al
   14000a126:	(bad)  
   14000a127:	inc    DWORD PTR [rax]
   14000a129:	add    BYTE PTR [rax],al
   14000a12b:	add    bh,bh
   14000a12d:	(bad)  
   14000a12e:	(bad)  
   14000a12f:	inc    DWORD PTR [rax]
	...
   14000a139:	add    BYTE PTR [rax],al
   14000a13b:	add    BYTE PTR [rcx],al
   14000a13d:	add    BYTE PTR [rax],al
   14000a13f:	add    BYTE PTR [rcx],al
   14000a141:	add    BYTE PTR [rax],al
   14000a143:	add    BYTE PTR [rax-0x5f],cl
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	add    BYTE PTR [rax],al
	...
   14000a153:	add    al,al
   14000a155:	outs   dx,DWORD PTR ds:[rsi]
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	cmp    BYTE PTR [rax],al
   14000a15a:	add    BYTE PTR [rax],al
   14000a15c:	add    BYTE PTR [rax],al
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	jo     0x14000a18f
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	(bad)  
   14000a165:	(bad)  
   14000a166:	(bad)  
   14000a167:	(bad)  
   14000a168:	fisubr WORD PTR [rip+0x0]        # 0x14000a16e
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	icebp  
   14000a171:	sub    eax,0xffff0000
   14000a176:	(bad)  
   14000a177:	inc    eax
   14000a179:	outs   dx,DWORD PTR ds:[rsi]
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rax],al
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	int    0x6f
   14000a182:	add    BYTE PTR [rax],al
   14000a184:	add    DWORD PTR [rax],eax
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	sbb    DWORD PTR [rdx],ecx
   14000a18a:	add    al,BYTE PTR [rax]
   14000a18c:	or     dh,BYTE PTR [rdx]
   14000a18e:	(bad)  
   14000a18f:	push   rax
   14000a190:	rex.RX
   14000a191:	add    BYTE PTR gs:[rax],al
   14000a194:	mov    BYTE PTR [rdi+0x6010000],al
   14000a19a:	add    al,BYTE PTR [rax]
   14000a19c:	(bad)  
   14000a19d:	xor    al,BYTE PTR [rdx]
   14000a19f:	xor    BYTE PTR [rcx],al
   14000a1a1:	or     al,BYTE PTR [rax+rax*1]
   14000a1a4:	or     dh,BYTE PTR [rsi+rax*1]
   14000a1a7:	add    BYTE PTR [rdx],cl
   14000a1a9:	xor    al,BYTE PTR [rsi]
   14000a1ab:	jo     0x14000a1ae
   14000a1ad:	(bad)  
   14000a1ae:	add    al,BYTE PTR [rax]
   14000a1b0:	(bad)  
   14000a1b1:	xor    al,BYTE PTR [rdx]
   14000a1b3:	xor    BYTE PTR [rcx],al
   14000a1b5:	or     al,BYTE PTR [rax+rax*1]
   14000a1b8:	or     dh,BYTE PTR [rsi+rax*1]
   14000a1bb:	add    BYTE PTR [rdx],cl
   14000a1bd:	xor    al,BYTE PTR [rsi]
   14000a1bf:	jo     0x14000a1c2
   14000a1c1:	add    al,0x1
   14000a1c3:	add    BYTE PTR [rdx+rax*2],al
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	add    DWORD PTR [rcx+rax*1],eax
   14000a1cb:	add    BYTE PTR [rdx+riz*2],al
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	add    DWORD PTR [rsi],eax
   14000a1d2:	add    al,BYTE PTR [rax]
   14000a1d4:	(bad)  
   14000a1d5:	xor    al,BYTE PTR [rdx]
   14000a1d7:	xor    BYTE PTR [rcx],dl
   14000a1d9:	sbb    BYTE PTR [rax+rax*1],al
   14000a1dc:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000a1df:	add    BYTE PTR [rdx],cl
   14000a1e1:	push   rdx
   14000a1e2:	(bad)  
   14000a1e3:	jo     0x14000a22b
   14000a1e5:	add    BYTE PTR gs:[rax],al
   14000a1e8:	mov    al,0x87
   14000a1ea:	add    BYTE PTR [rax],al
   14000a1ec:	(bad)  
   14000a1ed:	(bad)  
   14000a1ee:	(bad)  
   14000a1ef:	jmp    QWORD PTR [rax+0x6f]
   14000a1f5:	add    BYTE PTR [rax],al
   14000a1f7:	add    BYTE PTR [rax+0x23],dl
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	(bad)  
   14000a1fd:	(bad)  
   14000a1fe:	(bad)  
   14000a1ff:	dec    DWORD PTR [rcx+0x23]
   14000a205:	add    BYTE PTR [rax],al
   14000a207:	add    BYTE PTR [rsi-0xffffdd],bh
   14000a20d:	(bad)  
   14000a20e:	(bad)  
   14000a20f:	inc    DWORD PTR [rcx]
   14000a211:	(bad)  
   14000a212:	add    al,BYTE PTR [rax]
   14000a214:	(bad)  
   14000a215:	xor    al,BYTE PTR [rdx]
   14000a217:	xor    BYTE PTR [rcx],dl
   14000a219:	sbb    DWORD PTR [rsi],eax
   14000a21b:	add    BYTE PTR [rcx],bl
   14000a21d:	fs or  eax,0xc341400
   14000a223:	add    BYTE PTR [rsi],al
   14000a225:	jb     0x14000a229
   14000a227:	jo     0x14000a26f
   14000a229:	add    BYTE PTR gs:[rax],al
   14000a22c:	fadd   DWORD PTR [rdi-0x10000]
   14000a232:	(bad)  
   14000a233:	inc    eax
   14000a235:	outs   dx,BYTE PTR ds:[rsi]
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	adc    BYTE PTR [rax+rax*1],bl
   14000a23b:	add    bh,bh
   14000a23d:	(bad)  
   14000a23e:	(bad)  
   14000a23f:	(bad)  
   14000a240:	cmp    bl,BYTE PTR [rax+rax*1]
   14000a243:	add    BYTE PTR [rax],al
   14000a245:	add    BYTE PTR [rax],al
   14000a247:	add    bl,dh
   14000a249:	sbb    al,0x0
   14000a24b:	add    bh,bh
   14000a24d:	(bad)  
   14000a24e:	(bad)  
   14000a24f:	inc    DWORD PTR [rcx]
   14000a251:	add    al,0x1
   14000a253:	add    BYTE PTR [rdx+rax*2],al
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	sbb    DWORD PTR [rdi],ebx
   14000a25a:	or     BYTE PTR [rax],al
   14000a25c:	(bad)  
   14000a25d:	xor    al,0xf
   14000a25f:	add    BYTE PTR [rcx],dl
   14000a261:	jb     0x14000a270
   14000a263:	lock or esp,eax
   14000a266:	or     eax,eax
   14000a268:	(bad)  
   14000a269:	jo     0x14000a271
   14000a26b:	(bad)  
   14000a26c:	rex.RX
   14000a26d:	add    BYTE PTR gs:[rax],al
   14000a270:	add    BYTE PTR [rax-0x10000],cl
   14000a276:	(bad)  
   14000a277:	push   QWORD PTR [rax+0x6e]
   14000a27a:	add    BYTE PTR [rax],al
   14000a27c:	(bad)  
   14000a27d:	(bad)  
   14000a27e:	(bad)  
   14000a27f:	(bad)  
   14000a280:	jl     0x14000a2f0
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	add    DWORD PTR [rax],eax
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	add    BYTE PTR [rax],al
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	add    DWORD PTR [rax],eax
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	add    BYTE PTR [rax],al
   14000a292:	add    BYTE PTR [rax],al
   14000a294:	add    al,BYTE PTR [rax]
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	add    al,BYTE PTR [rax]
   14000a29a:	add    BYTE PTR [rax],al
   14000a29c:	add    eax,DWORD PTR [rax]
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	add    DWORD PTR [rax],eax
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	test   al,0xa2
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	add    BYTE PTR [rax],al
	...
   14000a2b3:	add    BYTE PTR [rax+0x3800006e],cl
   14000a2b9:	add    BYTE PTR [rax],al
   14000a2bb:	add    BYTE PTR [rax],al
   14000a2bd:	add    BYTE PTR [rax],al
   14000a2bf:	add    BYTE PTR [rax+0x1a],al
   14000a2c2:	add    BYTE PTR [rax],al
   14000a2c4:	(bad)  
   14000a2c5:	(bad)  
   14000a2c6:	(bad)  
   14000a2c7:	call   FWORD PTR [rdx+0x1a]
   14000a2cd:	add    BYTE PTR [rax],al
   14000a2cf:	add    BYTE PTR [rcx+0x100001a],ch
   14000a2d5:	add    BYTE PTR [rax],al
   14000a2d7:	add    BYTE PTR [rcx+0x200001a],dh
   14000a2dd:	add    BYTE PTR [rax],al
   14000a2df:	add    BYTE PTR [rbx+rbx*1],bl
   14000a2e2:	add    BYTE PTR [rax],al
   14000a2e4:	add    DWORD PTR [rax],eax
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	(bad)  
   14000a2e9:	sbb    eax,DWORD PTR [rax]
   14000a2eb:	add    BYTE PTR [rdx],al
   14000a2ed:	add    BYTE PTR [rax],al
   14000a2ef:	add    BYTE PTR [rsi+0x1b],cl
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	add    DWORD PTR [rax],eax
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	(bad)  
   14000a2f9:	sbb    eax,DWORD PTR [rax]
   14000a2fb:	add    bh,bh
   14000a2fd:	(bad)  
   14000a2fe:	(bad)  
   14000a2ff:	dec    DWORD PTR [rax+0x6e]
   14000a305:	add    BYTE PTR [rax],al
   14000a307:	add    BYTE PTR [rbp+0x300006e],dl
   14000a30d:	add    BYTE PTR [rax],al
   14000a30f:	add    BYTE PTR [rdx+0x6e],dh
   14000a315:	add    BYTE PTR [rax],al
   14000a317:	add    BYTE PTR [rcx],bl
   14000a319:	or     al,BYTE PTR [rdx]
   14000a31b:	add    BYTE PTR [rdx],cl
   14000a31d:	xor    al,BYTE PTR [rsi]
   14000a31f:	push   rax
   14000a320:	rex.RX
   14000a321:	add    BYTE PTR gs:[rax],al
   14000a324:	add    BYTE PTR [rax+0x6010000],cl
   14000a32a:	add    al,BYTE PTR [rax]
   14000a32c:	(bad)  
   14000a32d:	xor    al,BYTE PTR [rdx]
   14000a32f:	xor    BYTE PTR [rcx],al
   14000a331:	add    al,0x1
   14000a333:	add    BYTE PTR [rdx+rax*2],al
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	add    DWORD PTR [rdx],ecx
   14000a33a:	add    al,0x0
   14000a33c:	or     dh,BYTE PTR [rsi+rax*1]
   14000a33f:	add    BYTE PTR [rdx],cl
   14000a341:	xor    al,BYTE PTR [rsi]
   14000a343:	jo     0x14000a346
   14000a345:	(bad)  
   14000a346:	add    al,BYTE PTR [rax]
   14000a348:	(bad)  
   14000a349:	xor    al,BYTE PTR [rdx]
   14000a34b:	xor    BYTE PTR [rcx],al
   14000a34d:	(bad)  
   14000a34e:	add    al,BYTE PTR [rax]
   14000a350:	(bad)  
   14000a351:	xor    al,BYTE PTR [rdx]
   14000a353:	xor    BYTE PTR [rcx],al
   14000a355:	add    al,0x1
   14000a357:	add    BYTE PTR [rdx+rax*2],al
   14000a35a:	add    BYTE PTR [rax],al
   14000a35c:	adc    DWORD PTR [rsi],eax
   14000a35e:	add    al,BYTE PTR [rax]
   14000a360:	(bad)  
   14000a361:	xor    al,BYTE PTR [rdx]
   14000a363:	xor    BYTE PTR [rsi+0x69],dh
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	add    DWORD PTR [rax],eax
   14000a36a:	add    BYTE PTR [rax],al
   14000a36c:	(bad)  
   14000a36d:	add    BYTE PTR fs:[rax],al
   14000a370:	popf   
   14000a371:	add    BYTE PTR fs:[rax],al
   14000a374:	rex.R jb 0x14000a377
   14000a377:	add    BYTE PTR [rax],al
   14000a379:	add    BYTE PTR [rax],al
   14000a37b:	add    BYTE PTR [rcx],al
   14000a37d:	(bad)  
   14000a37e:	add    al,BYTE PTR [rax]
   14000a380:	(bad)  
   14000a381:	xor    al,BYTE PTR [rdx]
   14000a383:	push   rax
   14000a384:	add    DWORD PTR [rsi],eax
   14000a386:	add    al,BYTE PTR [rax]
   14000a388:	(bad)  
   14000a389:	xor    al,BYTE PTR [rdx]
   14000a38b:	xor    BYTE PTR [rcx],al
   14000a38d:	clts   
   14000a38f:	add    BYTE PTR [rdi],cl
   14000a391:	fs (bad) 
   14000a393:	add    BYTE PTR [rdi],cl
   14000a395:	xor    al,0x6
   14000a397:	add    BYTE PTR [rdi],cl
   14000a399:	xor    cl,BYTE PTR [rbx]
   14000a39b:	jo     0x14000a39e
   14000a39d:	add    al,0x1
   14000a39f:	add    BYTE PTR [rdx+rax*2],al
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	add    DWORD PTR [rcx+rax*1],eax
   14000a3a7:	add    BYTE PTR [rdx+riz*2],al
   14000a3aa:	add    BYTE PTR [rax],al
   14000a3ac:	or     DWORD PTR [rax],edx
   14000a3ae:	(bad)  
   14000a3af:	add    BYTE PTR [rax],dl
   14000a3b1:	or     DWORD PTR fs:[rax],eax
   14000a3b4:	adc    BYTE PTR [rax+rcx*1],dh
   14000a3b7:	add    BYTE PTR [rax],dl
   14000a3b9:	push   rdx
   14000a3ba:	or     al,0x70
   14000a3bc:	jbe    0x14000a427
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	add    DWORD PTR [rax],eax
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	rex.WRX
   14000a3c5:	add    BYTE PTR [eax],al
   14000a3c8:	xlat   BYTE PTR ds:[rbx]
   14000a3c9:	push   0x725f0000
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	xlat   BYTE PTR ds:[rbx]
   14000a3d1:	push   0x6010000
   14000a3d6:	add    al,BYTE PTR [rax]
   14000a3d8:	(bad)  
   14000a3d9:	xor    al,BYTE PTR [rdx]
   14000a3db:	push   rax
   14000a3dc:	add    DWORD PTR [rcx+rax*1],eax
   14000a3df:	add    BYTE PTR [rdx+rax*2],al
   14000a3e2:	add    BYTE PTR [rax],al
   14000a3e4:	adc    DWORD PTR [rax],ebx
   14000a3e6:	add    eax,0x14621800
   14000a3eb:	loopne 0x14000a3ff
   14000a3ed:	jo     0x14000a400
   14000a3ef:	(bad)  
   14000a3f0:	adc    BYTE PTR [rax],dh
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	jbe    0x14000a45f
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	add    DWORD PTR [rax],eax
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	scas   eax,DWORD PTR es:[rdi]
   14000a3fd:	imul   eax,DWORD PTR [rax],0x69cf00
   14000a403:	add    BYTE PTR [rbp+0x72],bh
   14000a406:	add    BYTE PTR [rax],al
   14000a408:	add    BYTE PTR [rax],al
   14000a40a:	add    BYTE PTR [rax],al
   14000a40c:	add    DWORD PTR [rsi],eax
   14000a40e:	add    al,BYTE PTR [rax]
   14000a410:	(bad)  
   14000a411:	xor    al,BYTE PTR [rdx]
   14000a413:	push   rax
   14000a414:	or     DWORD PTR [rdi],edx
   14000a416:	(bad)  
   14000a417:	add    BYTE PTR [rdi],dl
   14000a419:	xor    al,0xd
   14000a41b:	add    BYTE PTR [rdi],dl
   14000a41d:	jb     0x14000a432
   14000a41f:	loopne 0x14000a432
   14000a421:	jo     0x14000a433
   14000a423:	(bad)  
   14000a424:	jbe    0x14000a48f
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	add    DWORD PTR [rax],eax
   14000a42a:	add    BYTE PTR [rax],al
   14000a42c:	sbb    ebp,DWORD PTR [rdx+0x0]
   14000a42f:	add    BYTE PTR [rdx+rbp*2],dh
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	test   eax,0x34000072
   14000a439:	push   0x0
   14000a43b:	add    BYTE PTR [rcx],al
   14000a43d:	(bad)  
   14000a43e:	add    al,BYTE PTR [rax]
   14000a440:	(bad)  
   14000a441:	xor    al,BYTE PTR [rdx]
   14000a443:	push   rax
   14000a444:	add    DWORD PTR [rcx+rax*1],eax
   14000a447:	add    BYTE PTR [rdx+rax*2],al
   14000a44a:	add    BYTE PTR [rax],al
   14000a44c:	add    DWORD PTR [rcx+rax*1],eax
   14000a44f:	add    BYTE PTR [rdx+rax*2],al
   14000a452:	add    BYTE PTR [rax],al
   14000a454:	add    DWORD PTR [rcx+rax*1],eax
   14000a457:	add    BYTE PTR [rdx+rax*2],al
   14000a45a:	add    BYTE PTR [rax],al
   14000a45c:	or     DWORD PTR [rdx],ecx
   14000a45e:	add    al,0x0
   14000a460:	or     dh,BYTE PTR [rsi+rax*1]
   14000a463:	add    BYTE PTR [rdx],cl
   14000a465:	xor    al,BYTE PTR [rsi]
   14000a467:	jo     0x14000a4df
   14000a469:	imul   eax,DWORD PTR [rax],0x100
   14000a46f:	add    BYTE PTR [rip+0x5000006b],bl        # 0x19000a4e0
   14000a475:	imul   eax,DWORD PTR [rax],0x0
   14000a478:	lock jb 0x14000a47b
   14000a47b:	add    BYTE PTR [rax+0x6b],dl
   14000a47e:	add    BYTE PTR [rax],al
   14000a480:	add    DWORD PTR [rsi],eax
   14000a482:	add    al,BYTE PTR [rax]
   14000a484:	(bad)  
   14000a485:	xor    al,BYTE PTR [rdx]
   14000a487:	push   rax
   14000a488:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740da492
   14000a48e:	or     DWORD PTR [rax],eax
   14000a490:	or     eax,0x1500632
   14000a495:	or     al,BYTE PTR [rax+rax*1]
   14000a498:	or     dh,BYTE PTR [rsi+rax*1]
   14000a49b:	add    BYTE PTR [rdx],cl
   14000a49d:	xor    al,BYTE PTR [rsi]
   14000a49f:	jo     0x14000a4a2
   14000a4a1:	or     al,BYTE PTR [rax+rax*1]
   14000a4a4:	or     dh,BYTE PTR [rsi+rax*1]
   14000a4a7:	add    BYTE PTR [rdx],cl
   14000a4a9:	xor    al,BYTE PTR [rsi]
   14000a4ab:	jo     0x14000a4ad
   14000a4ad:	add    BYTE PTR [rax],al
   14000a4af:	add    BYTE PTR [rax],al
   14000a4b1:	add    BYTE PTR [rax],al
   14000a4b3:	add    BYTE PTR [rax+0xc0],dl
   14000a4b9:	add    BYTE PTR [rax],al
   14000a4bb:	add    bh,bh
   14000a4bd:	(bad)  
   14000a4be:	(bad)  
   14000a4bf:	inc    DWORD PTR [rax]
   14000a4c1:	add    BYTE PTR [rax],al
   14000a4c3:	add    BYTE PTR [rax],bl
   14000a4c5:	add    BYTE PTR [rax],al
   14000a4c7:	add    BYTE PTR [riz*2+0x0],dh
	...
   14000a4da:	add    BYTE PTR [rax],al
   14000a4dc:	cmp    ah,BYTE PTR [rbp+0x0]
   14000a4df:	add    BYTE PTR [rax],al
   14000a4e1:	add    BYTE PTR [rax],al
   14000a4e3:	add    al,bh
   14000a4e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000a4f6:	add    BYTE PTR [rax],al
   14000a4f8:	add    al,BYTE PTR [rax]
   14000a4fa:	add    BYTE PTR [rax],al
   14000a4fc:	adc    BYTE PTR [rbp-0x5b500000],ah
	...
   14000a512:	add    BYTE PTR [rax],al
   14000a514:	mov    eax,0xc0
   14000a519:	add    BYTE PTR [rax],al
   14000a51b:	add    bh,bh
   14000a51d:	(bad)  
   14000a51e:	(bad)  
   14000a51f:	inc    DWORD PTR [rax]
   14000a521:	add    BYTE PTR [rax],al
   14000a523:	add    BYTE PTR [rax],bl
   14000a525:	add    BYTE PTR [rax],al
   14000a527:	add    BYTE PTR [rsi],ch
   14000a529:	add    BYTE PTR gs:[rax],al
	...
   14000a544:	or     eax,DWORD PTR [rdi]
   14000a546:	sbb    DWORD PTR [rax+0x0],0x86000000
   14000a54d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	add    DWORD PTR [rax],eax
   14000a552:	add    BYTE PTR [rax],al
   14000a554:	add    eax,DWORD PTR [rax]
   14000a556:	add    BYTE PTR [rax],al
   14000a558:	add    eax,DWORD PTR [rax]
   14000a55a:	add    BYTE PTR [rax],al
   14000a55c:	push   0x740000a5
   14000a561:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a562:	add    BYTE PTR [rax],al
   14000a564:	and    BYTE PTR [rbp-0x3fa00000],0x0
   14000a56b:	add    BYTE PTR [rax-0x40],ch
   14000a56e:	add    BYTE PTR [rax],al
   14000a570:	pop    rax
   14000a571:	rol    BYTE PTR [rax],0x0
   14000a574:	movabs ds:0xee0000a5c70000a5,eax
   14000a57d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	add    BYTE PTR [rax],al
   14000a582:	add    DWORD PTR [rax],eax
   14000a584:	add    al,BYTE PTR [rax]
   14000a586:	rex.WRB
   14000a587:	push   r12
   14000a589:	rex.WR
   14000a58a:	rex.B
   14000a58b:	rex.X push rbx
   14000a58d:	je     0x14000a5f0
   14000a58f:	jb     0x14000a605
   14000a591:	jne    0x14000a603
   14000a593:	movsxd esp,DWORD PTR [r11+0x65]
   14000a597:	ins    BYTE PTR es:[rdi],dx
   14000a598:	gs jb  0x14000a5fc
   14000a59b:	je     0x14000a60c
   14000a59d:	jb     0x14000a5cd
   14000a59f:	gs js  0x14000a607
   14000a5a2:	add    BYTE PTR [rbp+0x41],cl
   14000a5a5:	push   rsp
   14000a5a6:	rex.WR
   14000a5a7:	rex.B
   14000a5a8:	rex.X push rbx
   14000a5aa:	je     0x14000a60d
   14000a5ac:	jb     0x14000a622
   14000a5ae:	jne    0x14000a620
   14000a5b0:	movsxd esp,DWORD PTR [r11+0x65]
   14000a5b4:	ins    BYTE PTR es:[rdi],dx
   14000a5b5:	gs jb  0x14000a619
   14000a5b8:	je     0x14000a629
   14000a5ba:	jb     0x14000a61b
   14000a5bc:	(bad)  
   14000a5bd:	jne    0x14000a628
   14000a5bf:	ins    BYTE PTR es:[rdi],dx
   14000a5c0:	fs pop rdi
   14000a5c2:	fs (bad) 
   14000a5c4:	je     0x14000a62b
   14000a5c6:	add    BYTE PTR [rbp+0x41],cl
   14000a5c9:	push   rsp
   14000a5ca:	rex.WR
   14000a5cb:	rex.B
   14000a5cc:	rex.X push rbx
   14000a5ce:	je     0x14000a631
   14000a5d0:	jb     0x14000a646
   14000a5d2:	jne    0x14000a644
   14000a5d4:	movsxd esp,DWORD PTR [r11+0x65]
   14000a5d8:	ins    BYTE PTR es:[rdi],dx
   14000a5d9:	gs jb  0x14000a63d
   14000a5dc:	je     0x14000a64d
   14000a5de:	jb     0x14000a63f
   14000a5e0:	jb     0x14000a647
   14000a5e2:	ins    BYTE PTR es:[rdi],dx
   14000a5e3:	(bad)  
   14000a5e4:	je     0x14000a64f
   14000a5e6:	jbe    0x14000a64d
   14000a5e8:	pop    rdi
   14000a5e9:	jo     0x14000a64c
   14000a5eb:	je     0x14000a655
   14000a5ed:	add    BYTE PTR [rbp+0x41],cl
   14000a5f0:	push   rsp
   14000a5f1:	rex.WR
   14000a5f2:	rex.B
   14000a5f3:	rex.X push rbx
   14000a5f5:	je     0x14000a658
   14000a5f7:	jb     0x14000a66d
   14000a5f9:	jne    0x14000a66b
   14000a5fb:	movsxd esp,DWORD PTR [r11+0x65]
   14000a5ff:	ins    BYTE PTR es:[rdi],dx
   14000a600:	gs jb  0x14000a664
   14000a603:	je     0x14000a674
   14000a605:	jb     0x14000a666
   14000a607:	jbe    0x14000a66e
   14000a609:	jb     0x14000a67e
   14000a60b:	imul   ebp,DWORD PTR [rdi+0x6e],0xa6780000
	...
   14000a61a:	add    BYTE PTR [rax],al
   14000a61c:	fisubr DWORD PTR [rdx-0x80000000]
   14000a622:	add    BYTE PTR [rax],al
   14000a624:	push   0xaa
   14000a629:	add    BYTE PTR [rax],al
   14000a62b:	add    BYTE PTR [rax],al
   14000a62d:	add    BYTE PTR [rax],al
   14000a62f:	add    dh,bh
   14000a631:	stos   BYTE PTR es:[rdi],al
   14000a632:	add    BYTE PTR [rax],al
   14000a634:	lock add DWORD PTR [rax],0x0
   14000a638:	fsub   DWORD PTR [rsi+0x0]
   14000a63e:	add    BYTE PTR [rax],al
   14000a640:	add    BYTE PTR [rax],al
   14000a642:	add    BYTE PTR [rax],al
   14000a644:	adc    BYTE PTR [rcx-0x7fa00000],bh
   14000a64a:	add    BYTE PTR [rax],al
   14000a64c:	shr    BYTE PTR [rax+0x0],0x0
   14000a653:	add    BYTE PTR [rax],al
   14000a655:	add    BYTE PTR [rax],al
   14000a657:	add    BYTE PTR [rdx+rdi*4-0x7db80000],bh
	...
   14000a676:	add    BYTE PTR [rax],al
   14000a678:	js     0x14000a624
   14000a67a:	add    BYTE PTR [rax],al
   14000a67c:	add    BYTE PTR [rax],al
   14000a67e:	add    BYTE PTR [rax],al
   14000a680:	mov    ch,BYTE PTR [rdx+0x0]
   14000a686:	add    BYTE PTR [rax],al
   14000a688:	sahf   
   14000a689:	stos   BYTE PTR es:[rdi],al
   14000a68a:	add    BYTE PTR [rax],al
   14000a68c:	add    BYTE PTR [rax],al
   14000a68e:	add    BYTE PTR [rax],al
   14000a690:	mov    dl,0xaa
   14000a692:	add    BYTE PTR [rax],al
   14000a694:	add    BYTE PTR [rax],al
   14000a696:	add    BYTE PTR [rax],al
   14000a698:	(bad)  
   14000a699:	stos   BYTE PTR es:[rdi],al
   14000a69a:	add    BYTE PTR [rax],al
   14000a69c:	add    BYTE PTR [rax],al
   14000a69e:	add    BYTE PTR [rax],al
   14000a6a0:	mov    esp,0xbc
   14000a6a5:	add    BYTE PTR [rax],al
   14000a6a7:	add    BYTE PTR [rsi+0xbc],ah
   14000a6ad:	add    BYTE PTR [rax],al
   14000a6af:	add    BYTE PTR [rsp+rdi*4+0x0],cl
   14000a6b6:	add    BYTE PTR [rax],al
   14000a6b8:	jl     0x14000a676
   14000a6ba:	add    BYTE PTR [rax],al
   14000a6bc:	add    BYTE PTR [rax],al
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	ins    BYTE PTR es:[rdi],dx
   14000a6c1:	mov    esp,0x0
   14000a6c6:	add    BYTE PTR [rax],al
   14000a6c8:	sar    BYTE PTR [rax+rax*1+0x0],cl
	...
   14000a6d7:	add    BYTE PTR [rbx+rbp*4+0x0],bh
   14000a6db:	add    BYTE PTR [rax],al
   14000a6dd:	add    BYTE PTR [rax],al
   14000a6df:	add    BYTE PTR [rsi+0xab],bl
   14000a6e5:	add    BYTE PTR [rax],al
   14000a6e7:	add    al,al
   14000a6e9:	stos   DWORD PTR es:[rdi],eax
   14000a6ea:	add    BYTE PTR [rax],al
   14000a6ec:	add    BYTE PTR [rax],al
   14000a6ee:	add    BYTE PTR [rax],al
   14000a6f0:	fisubr WORD PTR [rbx+0x0]
   14000a6f6:	add    BYTE PTR [rax],al
   14000a6f8:	adc    ch,BYTE PTR [rax+rax*1+0x0]
   14000a6ff:	add    BYTE PTR [rsi],bh
   14000a701:	lods   al,BYTE PTR ds:[rsi]
   14000a702:	add    BYTE PTR [rax],al
   14000a704:	add    BYTE PTR [rax],al
   14000a706:	add    BYTE PTR [rax],al
   14000a708:	jl     0x14000a6b6
   14000a70a:	add    BYTE PTR [rax],al
   14000a70c:	add    BYTE PTR [rax],al
   14000a70e:	add    BYTE PTR [rax],al
   14000a710:	mov    edx,0xac
   14000a715:	add    BYTE PTR [rax],al
   14000a717:	add    al,dh
   14000a719:	lods   al,BYTE PTR ds:[rsi]
   14000a71a:	add    BYTE PTR [rax],al
   14000a71c:	add    BYTE PTR [rax],al
   14000a71e:	add    BYTE PTR [rax],al
   14000a720:	xor    ch,BYTE PTR [rbp+0x0]
   14000a726:	add    BYTE PTR [rax],al
   14000a728:	push   rdx
   14000a729:	lods   eax,DWORD PTR ds:[rsi]
   14000a72a:	add    BYTE PTR [rax],al
   14000a72c:	add    BYTE PTR [rax],al
   14000a72e:	add    BYTE PTR [rax],al
   14000a730:	jb     0x14000a6df
   14000a732:	add    BYTE PTR [rax],al
   14000a734:	add    BYTE PTR [rax],al
   14000a736:	add    BYTE PTR [rax],al
   14000a738:	movabs al,ds:0xdc000000000000ad
   14000a741:	lods   eax,DWORD PTR ds:[rsi]
   14000a742:	add    BYTE PTR [rax],al
   14000a744:	add    BYTE PTR [rax],al
   14000a746:	add    BYTE PTR [rax],al
   14000a748:	sbb    BYTE PTR [rsi+0x0],ch
   14000a74e:	add    BYTE PTR [rax],al
   14000a750:	fs scas al,BYTE PTR es:[rdi]
   14000a752:	add    BYTE PTR [rax],al
   14000a754:	add    BYTE PTR [rax],al
   14000a756:	add    BYTE PTR [rax],al
   14000a758:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a759:	scas   al,BYTE PTR es:[rdi]
   14000a75a:	add    BYTE PTR [rax],al
   14000a75c:	add    BYTE PTR [rax],al
   14000a75e:	add    BYTE PTR [rax],al
   14000a760:	out    0xae,al
   14000a762:	add    BYTE PTR [rax],al
   14000a764:	add    BYTE PTR [rax],al
   14000a766:	add    BYTE PTR [rax],al
   14000a768:	sub    BYTE PTR [rdi+0x0],ch
   14000a76e:	add    BYTE PTR [rax],al
   14000a770:	push   0xffffffffffffffaf
   14000a772:	add    BYTE PTR [rax],al
   14000a774:	add    BYTE PTR [rax],al
   14000a776:	add    BYTE PTR [rax],al
   14000a778:	mov    dl,0xaf
   14000a77a:	add    BYTE PTR [rax],al
   14000a77c:	add    BYTE PTR [rax],al
   14000a77e:	add    BYTE PTR [rax],al
   14000a780:	clc    
   14000a781:	scas   eax,DWORD PTR es:[rdi]
   14000a782:	add    BYTE PTR [rax],al
   14000a784:	add    BYTE PTR [rax],al
   14000a786:	add    BYTE PTR [rax],al
   14000a788:	cmp    BYTE PTR [rax+0x0],dh
   14000a78e:	add    BYTE PTR [rax],al
   14000a790:	outs   dx,BYTE PTR ds:[rsi]
   14000a791:	mov    al,0x0
   14000a793:	add    BYTE PTR [rax],al
   14000a795:	add    BYTE PTR [rax],al
   14000a797:	add    BYTE PTR [rax+rsi*4+0x0],ch
   14000a79e:	add    BYTE PTR [rax],al
   14000a7a0:	in     al,dx
   14000a7a1:	mov    al,0x0
   14000a7a3:	add    BYTE PTR [rax],al
   14000a7a5:	add    BYTE PTR [rax],al
   14000a7a7:	add    BYTE PTR [rax],ch
   14000a7a9:	mov    cl,0x0
   14000a7ab:	add    BYTE PTR [rax],al
   14000a7ad:	add    BYTE PTR [rax],al
   14000a7af:	add    BYTE PTR [rcx+rsi*4+0x0],dl
   14000a7b6:	add    BYTE PTR [rax],al
   14000a7b8:	(bad)  
   14000a7b9:	mov    cl,0x0
   14000a7bb:	add    BYTE PTR [rax],al
   14000a7bd:	add    BYTE PTR [rax],al
   14000a7bf:	add    BYTE PTR [rdx+rsi*4],cl
   14000a7c2:	add    BYTE PTR [rax],al
   14000a7c4:	add    BYTE PTR [rax],al
   14000a7c6:	add    BYTE PTR [rax],al
   14000a7c8:	(bad)  
   14000a7c9:	mov    dl,0x0
   14000a7cb:	add    BYTE PTR [rax],al
   14000a7cd:	add    BYTE PTR [rax],al
   14000a7cf:	add    al,dl
   14000a7d1:	mov    dl,0x0
   14000a7d3:	add    BYTE PTR [rax],al
   14000a7d5:	add    BYTE PTR [rax],al
   14000a7d7:	add    BYTE PTR [rbx+rsi*4],dl
   14000a7da:	add    BYTE PTR [rax],al
   14000a7dc:	add    BYTE PTR [rax],al
   14000a7de:	add    BYTE PTR [rax],al
   14000a7e0:	pop    rax
   14000a7e1:	mov    bl,0x0
   14000a7e3:	add    BYTE PTR [rax],al
   14000a7e5:	add    BYTE PTR [rax],al
   14000a7e7:	add    BYTE PTR [rbx+rsi*4+0x0],dl
   14000a7ee:	add    BYTE PTR [rax],al
   14000a7f0:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000a7f7:	add    BYTE PTR [rdx],bh
   14000a7f9:	mov    ah,0x0
   14000a7fb:	add    BYTE PTR [rax],al
   14000a7fd:	add    BYTE PTR [rax],al
   14000a7ff:	add    BYTE PTR [rsp+rsi*4+0x0],bh
   14000a803:	add    BYTE PTR [rax],al
   14000a805:	add    BYTE PTR [rax],al
   14000a807:	add    BYTE PTR [rsp+rsi*4+0x0],ah
   14000a80e:	add    BYTE PTR [rax],al
   14000a810:	in     al,0xb4
   14000a812:	add    BYTE PTR [rax],al
   14000a814:	add    BYTE PTR [rax],al
   14000a816:	add    BYTE PTR [rax],al
   14000a818:	es mov ch,0x0
   14000a81b:	add    BYTE PTR [rax],al
   14000a81d:	add    BYTE PTR [rax],al
   14000a81f:	add    BYTE PTR [rbp+rsi*4+0x0],dh
   14000a823:	add    BYTE PTR [rax],al
   14000a825:	add    BYTE PTR [rax],al
   14000a827:	add    BYTE PTR [rdx+0xb5],bh
   14000a82d:	add    BYTE PTR [rax],al
   14000a82f:	add    BYTE PTR [rsi],cl
   14000a831:	mov    dh,0x0
   14000a833:	add    BYTE PTR [rax],al
   14000a835:	add    BYTE PTR [rax],al
   14000a837:	add    BYTE PTR [rdx-0x4a],ah
   14000a83a:	add    BYTE PTR [rax],al
   14000a83c:	add    BYTE PTR [rax],al
   14000a83e:	add    BYTE PTR [rax],al
   14000a840:	mov    al,0xb6
   14000a842:	add    BYTE PTR [rax],al
   14000a844:	add    BYTE PTR [rax],al
   14000a846:	add    BYTE PTR [rax],al
   14000a848:	div    BYTE PTR [rsi+0x0]
   14000a84e:	add    BYTE PTR [rax],al
   14000a850:	ss mov bh,0x0
   14000a853:	add    BYTE PTR [rax],al
   14000a855:	add    BYTE PTR [rax],al
   14000a857:	add    BYTE PTR [rsi-0x49],dh
   14000a85a:	add    BYTE PTR [rax],al
   14000a85c:	add    BYTE PTR [rax],al
   14000a85e:	add    BYTE PTR [rax],al
   14000a860:	mov    edx,0xb7
   14000a865:	add    BYTE PTR [rax],al
   14000a867:	add    BYTE PTR [rdx],al
   14000a869:	mov    eax,0x0
   14000a86e:	add    BYTE PTR [rax],al
   14000a870:	rex.WX movabs rax,0xab62000000000000
   14000a87a:	add    BYTE PTR [rax],al
   14000a87c:	add    BYTE PTR [rax],al
   14000a87e:	add    BYTE PTR [rax],al
   14000a880:	mov    BYTE PTR [rax+0x0],bh
   14000a886:	add    BYTE PTR [rax],al
   14000a888:	movabs al,ds:0xd4000000000000b8
   14000a891:	mov    eax,0x0
   14000a896:	add    BYTE PTR [rax],al
   14000a898:	or     ch,BYTE PTR [rbx+0x0]
   14000a89e:	add    BYTE PTR [rax],al
   14000a8a0:	(bad)  
   14000a8a1:	mov    eax,0x0
   14000a8a6:	add    BYTE PTR [rax],al
   14000a8a8:	es stos DWORD PTR es:[rdi],eax
   14000a8aa:	add    BYTE PTR [rax],al
   14000a8ac:	add    BYTE PTR [rax],al
   14000a8ae:	add    BYTE PTR [rax],al
   14000a8b0:	rex stos DWORD PTR es:[rdi],eax
	...
   14000a8be:	add    BYTE PTR [rax],al
   14000a8c0:	push   rsi
   14000a8c1:	mov    ecx,0x0
   14000a8c6:	add    BYTE PTR [rax],al
   14000a8c8:	(bad)  
   14000a8c9:	mov    ecx,0x0
   14000a8ce:	add    BYTE PTR [rax],al
   14000a8d0:	push   0xffffffffffffffb9
   14000a8d2:	add    BYTE PTR [rax],al
   14000a8d4:	add    BYTE PTR [rax],al
   14000a8d6:	add    BYTE PTR [rax],al
   14000a8d8:	jb     0x14000a893
   14000a8da:	add    BYTE PTR [rax],al
   14000a8dc:	add    BYTE PTR [rax],al
   14000a8de:	add    BYTE PTR [rax],al
   14000a8e0:	jl     0x14000a89b
   14000a8e2:	add    BYTE PTR [rax],al
   14000a8e4:	add    BYTE PTR [rax],al
   14000a8e6:	add    BYTE PTR [rax],al
   14000a8e8:	test   BYTE PTR [rcx+0x0],bh
   14000a8ee:	add    BYTE PTR [rax],al
   14000a8f0:	mov    ?,WORD PTR [rcx+0x0]
   14000a8f6:	add    BYTE PTR [rax],al
   14000a8f8:	(bad)  
   14000a8f9:	mov    ecx,0x0
   14000a8fe:	add    BYTE PTR [rax],al
   14000a900:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a901:	mov    ecx,0x0
   14000a906:	add    BYTE PTR [rax],al
   14000a908:	scas   al,BYTE PTR es:[rdi]
   14000a909:	mov    ecx,0x0
   14000a90e:	add    BYTE PTR [rax],al
   14000a910:	mov    eax,0xb9
   14000a915:	add    BYTE PTR [rax],al
   14000a917:	add    dh,al
   14000a919:	mov    ecx,0x0
   14000a91e:	add    BYTE PTR [rax],al
   14000a920:	(bad)  
   14000a921:	mov    ecx,0x0
   14000a926:	add    BYTE PTR [rax],al
   14000a928:	in     al,0xb9
   14000a92a:	add    BYTE PTR [rax],al
   14000a92c:	add    BYTE PTR [rax],al
   14000a92e:	add    BYTE PTR [rax],al
   14000a930:	lock mov ecx,0x0
   14000a936:	add    BYTE PTR [rax],al
   14000a938:	cli    
   14000a939:	mov    ecx,0x0
   14000a93e:	add    BYTE PTR [rax],al
   14000a940:	sbb    bh,BYTE PTR [rdx+0x0]
   14000a946:	add    BYTE PTR [rax],al
   14000a948:	cmp    al,0xba
   14000a94a:	add    BYTE PTR [rax],al
   14000a94c:	add    BYTE PTR [rax],al
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	(bad)  
   14000a951:	mov    edx,0x0
   14000a956:	add    BYTE PTR [rax],al
   14000a958:	jl     0x14000a914
   14000a95a:	add    BYTE PTR [rax],al
   14000a95c:	add    BYTE PTR [rax],al
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	xchg   edx,eax
   14000a961:	mov    edx,0x0
   14000a966:	add    BYTE PTR [rax],al
   14000a968:	test   al,0xba
   14000a96a:	add    BYTE PTR [rax],al
   14000a96c:	add    BYTE PTR [rax],al
   14000a96e:	add    BYTE PTR [rax],al
   14000a970:	mov    dl,0xba
   14000a972:	add    BYTE PTR [rax],al
   14000a974:	add    BYTE PTR [rax],al
   14000a976:	add    BYTE PTR [rax],al
   14000a978:	retf   0xba
   14000a97b:	add    BYTE PTR [rax],al
   14000a97d:	add    BYTE PTR [rax],al
   14000a97f:	add    dl,dl
   14000a981:	mov    edx,0x0
   14000a986:	add    BYTE PTR [rax],al
   14000a988:	fdivr  QWORD PTR [rdx+0x0]
   14000a98e:	add    BYTE PTR [rax],al
   14000a990:	(bad)  
   14000a991:	mov    edx,0x0
   14000a996:	add    BYTE PTR [rax],al
   14000a998:	clc    
   14000a999:	mov    edx,0x0
   14000a99e:	add    BYTE PTR [rax],al
   14000a9a0:	adc    BYTE PTR [rbx+0x0],bh
   14000a9a6:	add    BYTE PTR [rax],al
   14000a9a8:	sbb    bh,BYTE PTR [rbx+0x0]
   14000a9ae:	add    BYTE PTR [rax],al
   14000a9b0:	sub    BYTE PTR [rbx+0x0],bh
   14000a9b6:	add    BYTE PTR [rax],al
   14000a9b8:	rex.X mov ebx,0x0
   14000a9be:	add    BYTE PTR [rax],al
   14000a9c0:	push   rax
   14000a9c1:	mov    ebx,0x0
   14000a9c6:	add    BYTE PTR [rax],al
   14000a9c8:	(bad)  
   14000a9c9:	mov    ebx,0x0
   14000a9ce:	add    BYTE PTR [rax],al
   14000a9d0:	jb     0x14000a98d
   14000a9d2:	add    BYTE PTR [rax],al
   14000a9d4:	add    BYTE PTR [rax],al
   14000a9d6:	add    BYTE PTR [rax],al
   14000a9d8:	jp     0x14000a995
   14000a9da:	add    BYTE PTR [rax],al
   14000a9dc:	add    BYTE PTR [rax],al
   14000a9de:	add    BYTE PTR [rax],al
   14000a9e0:	(bad)  
   14000a9e1:	mov    ebx,0x0
   14000a9e6:	add    BYTE PTR [rax],al
   14000a9e8:	mov    WORD PTR [rbx+0x0],?
   14000a9ee:	add    BYTE PTR [rax],al
   14000a9f0:	(bad)  
   14000a9f1:	mov    ebx,0x0
   14000a9f6:	add    BYTE PTR [rax],al
   14000a9f8:	mov    al,0xbb
   14000a9fa:	add    BYTE PTR [rax],al
   14000a9fc:	add    BYTE PTR [rax],al
   14000a9fe:	add    BYTE PTR [rax],al
   14000aa00:	(bad)  
   14000aa01:	mov    ebx,0x0
   14000aa06:	add    BYTE PTR [rax],al
   14000aa08:	sar    BYTE PTR [rbx+0x0],cl
   14000aa0e:	add    BYTE PTR [rax],al
   14000aa10:	fidivr WORD PTR [rbx+0x0]
   14000aa16:	add    BYTE PTR [rax],al
   14000aa18:	call   0x14000aad8
   14000aa1d:	add    BYTE PTR [rax],al
   14000aa1f:	add    dl,dh
   14000aa21:	mov    ebx,0x0
   14000aa26:	add    BYTE PTR [rax],al
   14000aa28:	(bad)  
   14000aa29:	mov    ebx,0x0
   14000aa2e:	add    BYTE PTR [rax],al
   14000aa30:	adc    bh,BYTE PTR [rax+rax*1+0x0]
   14000aa37:	add    BYTE PTR [rax-0x44],cl
   14000aa3a:	add    BYTE PTR [rax],al
   14000aa3c:	add    BYTE PTR [rax],al
   14000aa3e:	add    BYTE PTR [rax],al
   14000aa40:	rex.WR movabs rcx,0xb93c000000000000
   14000aa4a:	add    BYTE PTR [rax],al
   14000aa4c:	add    BYTE PTR [rax],al
   14000aa4e:	add    BYTE PTR [rax],al
   14000aa50:	(bad)  
   14000aa51:	mov    ecx,0x0
   14000aa56:	add    BYTE PTR [rax],al
   14000aa58:	sub    bh,BYTE PTR [rcx+0x0]
	...
   14000aa66:	add    BYTE PTR [rax],al
   14000aa68:	call   0x14000ab17
	...
   14000aa75:	add    BYTE PTR [rax],al
   14000aa77:	add    bh,cl
   14000aa79:	add    DWORD PTR [rdi+0x65],eax
   14000aa7c:	je     0x14000aac1
   14000aa7e:	outs   dx,DWORD PTR ds:[rsi]
   14000aa7f:	ins    DWORD PTR es:[rdi],dx
   14000aa80:	ins    DWORD PTR es:[rdi],dx
   14000aa81:	(bad)  
   14000aa82:	outs   dx,BYTE PTR ds:[rsi]
   14000aa83:	imul   r13,QWORD PTR fs:[rsi+0x65],0x20f0057
   14000aa8c:	rex.RXB
   14000aa8d:	gs je  0x14000aad3
   14000aa90:	jne    0x14000ab04
   14000aa92:	jb     0x14000aaf9
   14000aa94:	outs   dx,BYTE PTR ds:[rsi]
   14000aa95:	je     0x14000aae7
   14000aa97:	jb     0x14000ab08
   14000aa99:	movsxd esp,DWORD PTR [rbp+0x73]
   14000aa9c:	jae    0x14000aa9e
   14000aa9e:	adc    eax,DWORD PTR [rdx]
   14000aaa0:	rex.RXB
   14000aaa1:	gs je  0x14000aae7
   14000aaa4:	jne    0x14000ab18
   14000aaa6:	jb     0x14000ab0d
   14000aaa8:	outs   dx,BYTE PTR ds:[rsi]
   14000aaa9:	je     0x14000aaff
   14000aaab:	push   0x64616572
   14000aab0:	add    BYTE PTR [rax],al
   14000aab2:	rex.XB add eax,0x54746553
   14000aab8:	push   0x64616572
   14000aabd:	push   rax
   14000aabe:	jb     0x14000ab29
   14000aac0:	outs   dx,DWORD PTR ds:[rsi]
   14000aac1:	jb     0x14000ab2c
   14000aac3:	je     0x14000ab3e
   14000aac5:	add    BYTE PTR [rbx],ah
   14000aac7:	add    eax,0x50746553
   14000aacc:	jb     0x14000ab37
   14000aace:	outs   dx,DWORD PTR ds:[rsi]
   14000aacf:	jb     0x14000ab3a
   14000aad1:	je     0x14000ab4c
   14000aad3:	rex.XB ins BYTE PTR es:[rdi],dx
   14000aad5:	(bad)  
   14000aad6:	jae    0x14000ab4b
   14000aad8:	add    BYTE PTR [rax],al
   14000aada:	rex.WXB
   14000aadb:	rex.RB push r10
   14000aadd:	rex.WRX
   14000aade:	rex.RB
   14000aadf:	xor    r14,QWORD PTR [rdx]
   14000aae2:	cs fs ins BYTE PTR es:[rdi],dx
   14000aae5:	ins    BYTE PTR es:[rdi],dx
   14000aae6:	add    BYTE PTR [rax],al
   14000aae8:	(bad)  
   14000aae9:	add    BYTE PTR [rbx+0x6f],al
   14000aaec:	ins    DWORD PTR es:[rdi],dx
   14000aaed:	ins    DWORD PTR es:[rdi],dx
   14000aaee:	(bad)  
   14000aaef:	outs   dx,BYTE PTR ds:[rsi]
   14000aaf0:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   14000aaf9:	addr32 jbe 0x14000ab53
   14000aafc:	add    BYTE PTR [rax],al
   14000aafe:	push   rbx
   14000aaff:	rex.W
   14000ab00:	rex.RB
   14000ab01:	rex.WR
   14000ab02:	xor    r14,QWORD PTR [rdx]
   14000ab05:	cs fs ins BYTE PTR es:[rdi],dx
   14000ab08:	ins    BYTE PTR es:[rdi],dx
   14000ab09:	add    BYTE PTR [rsi+0x0],ah
   14000ab0c:	(bad)  
   14000ab0d:	(bad)  
   14000ab0e:	xor    BYTE PTR [rdi+0x4c],bl
   14000ab11:	outs   dx,DWORD PTR ds:[rsi]
   14000ab12:	movsxd ebp,DWORD PTR [rbx+0x69]
   14000ab15:	je     0x14000ab57
   14000ab17:	jae    0x14000ab8d
   14000ab19:	fs rex
   14000ab1b:	rex push rcx
   14000ab1d:	rex.RB
   14000ab1e:	rex.B
   14000ab1f:	rex.B
   14000ab20:	rex
   14000ab21:	rex.W
   14000ab22:	rex pop rdx
   14000ab24:	add    BYTE PTR [rax],al
   14000ab26:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ab27:	add    BYTE PTR [rdi],bh
   14000ab29:	(bad)  
   14000ab2a:	xor    DWORD PTR [rdi+0x4c],ebx
   14000ab2d:	outs   dx,DWORD PTR ds:[rsi]
   14000ab2e:	movsxd ebp,DWORD PTR [rbx+0x69]
   14000ab31:	je     0x14000ab73
   14000ab33:	jae    0x14000aba9
   14000ab35:	fs rex
   14000ab37:	rex push rcx
   14000ab39:	rex.RB
   14000ab3a:	rex.B
   14000ab3b:	rex.B
   14000ab3c:	rex pop rax
   14000ab3e:	pop    rdx
   14000ab3f:	add    BYTE PTR [rbx+0x5],al
   14000ab42:	(bad)  
   14000ab43:	jne    0x14000abb3
   14000ab45:	movsxd esp,DWORD PTR [rcx+0x75]
   14000ab48:	addr32 push 0x78655f74
   14000ab4e:	movsxd esp,DWORD PTR [rbp+0x70]
   14000ab51:	je     0x14000abbc
   14000ab53:	outs   dx,DWORD PTR ds:[rsi]
   14000ab54:	outs   dx,BYTE PTR ds:[rsi]
   14000ab55:	rex jae 0x14000abcc
   14000ab58:	fs rex
   14000ab5a:	rex pop rcx
   14000ab5c:	pop    r15
   14000ab5e:	rex.WRX pop rax
   14000ab60:	pop    rdx
   14000ab61:	add    cl,cl
   14000ab63:	add    bh,BYTE PTR [rdi]
   14000ab65:	pop    rdi
   14000ab66:	pop    rax
   14000ab67:	(bad)
   14000ab6c:	ins    BYTE PTR es:[rdi],dx
   14000ab6d:	ins    BYTE PTR es:[rdi],dx
   14000ab6e:	outs   dx,DWORD PTR ds:[rsi]
   14000ab6f:	movsxd eax,DWORD PTR [rax+0x73]
   14000ab72:	je     0x14000abd8
   14000ab74:	rex
   14000ab75:	rex pop rcx
   14000ab77:	pop    r8
   14000ab79:	pop    rax
   14000ab7a:	pop    rdx
   14000ab7b:	add    ah,cl
   14000ab7d:	add    bh,BYTE PTR [rdi]
   14000ab7f:	pop    rdi
   14000ab80:	pop    rax
   14000ab81:	ins    BYTE PTR es:[rdi],dx
   14000ab82:	outs   dx,BYTE PTR gs:[rsi]
   14000ab84:	addr32 je 0x14000abef
   14000ab87:	pop    rdi
   14000ab88:	gs jb  0x14000abfd
   14000ab8b:	outs   dx,DWORD PTR ds:[rsi]
   14000ab8c:	jb     0x14000abce
   14000ab8e:	jae    0x14000ac04
   14000ab90:	fs rex
   14000ab92:	rex pop rcx
   14000ab94:	pop    r8
   14000ab96:	push   rax
   14000ab97:	rex.RB
   14000ab98:	rex.X
   14000ab99:	rex.R
   14000ab9a:	rex pop rdx
   14000ab9c:	add    BYTE PTR [rax],al
   14000ab9e:	int    0x2
   14000aba0:	(bad)  
   14000aba1:	pop    rdi
   14000aba2:	pop    rax
   14000aba3:	outs   dx,DWORD PTR ds:[rsi]
   14000aba4:	jne    0x14000ac1a
   14000aba6:	pop    rdi
   14000aba7:	outs   dx,DWORD PTR ds:[rsi]
   14000aba8:	pop    di
   14000abaa:	jb     0x14000ac0d
   14000abac:	outs   dx,BYTE PTR ds:[rsi]
   14000abad:	addr32 gs rex jae 0x14000ac26
   14000abb2:	fs rex
   14000abb4:	rex pop rcx
   14000abb6:	pop    r8
   14000abb8:	push   rax
   14000abb9:	rex.RB
   14000abba:	rex.X
   14000abbb:	rex.R
   14000abbc:	rex pop rdx
   14000abbe:	add    BYTE PTR [rax],al
   14000abc0:	xor    BYTE PTR [rcx],al
   14000abc2:	(bad)  
   14000abc3:	(bad)  
   14000abc4:	imul   esp,DWORD PTR [rax+r8*2+0x6c],0x6c61636f
   14000abcd:	gs rex jae 0x14000ac45
   14000abd1:	fs rex
   14000abd3:	rex push rcx
   14000abd5:	rex.RB
   14000abd6:	rex.B
   14000abd7:	pop    r15
   14000abd9:	rex.WXB pop r8
   14000abdb:	pop    rdx
   14000abdc:	add    BYTE PTR [rax],al
   14000abde:	in     eax,dx
   14000abdf:	add    DWORD PTR [rdi],edi
   14000abe1:	pop    rdi
   14000abe2:	rex.RXB
   14000abe3:	gs je  0x14000ac4d
   14000abe6:	ins    BYTE PTR es:[rdi],dx
   14000abe7:	outs   dx,DWORD PTR ds:[rsi]
   14000abe8:	(bad)
   14000abed:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000abf0:	gs rex ins BYTE PTR es:[rdi],dx
   14000abf3:	outs   dx,DWORD PTR ds:[rsi]
   14000abf4:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000abf7:	gs rex jae 0x14000ac6f
   14000abfb:	fs rex
   14000abfd:	rex
   14000abfe:	rex.XB
   14000abff:	push   r8
   14000ac01:	rex.RB
   14000ac02:	push   r14
   14000ac04:	pop    rdi
   14000ac05:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000ac07:	movsxd ebp,DWORD PTR [rcx+0x6d]
   14000ac0a:	jo     0x14000ac4c
   14000ac0c:	xor    DWORD PTR [rdx],esi
   14000ac0e:	rex pop rax
   14000ac10:	pop    rdx
   14000ac11:	add    dl,dl
   14000ac13:	add    bh,BYTE PTR [rdi]
   14000ac15:	(bad)  
   14000ac16:	ins    BYTE PTR es:[rdi],dx
   14000ac17:	ja     0x14000ac7a
   14000ac19:	jns    0x14000ac8e
   14000ac1b:	pop    rdi
   14000ac1c:	outs   dx,BYTE PTR ds:[rsi]
   14000ac1d:	outs   dx,DWORD PTR ds:[rsi]
   14000ac1e:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000ac21:	jbe    0x14000ac63
   14000ac23:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000ac26:	movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000ac2a:	pop    rdi
   14000ac2b:	(bad)  
   14000ac2d:	jae    0x14000ac94
   14000ac2f:	rex jae 0x14000aca6
   14000ac32:	fs rex
   14000ac34:	rex push rcx
   14000ac36:	rex.RB
   14000ac37:	rex.X
   14000ac38:	pop    r15
   14000ac3a:	rex.WRX pop rax
   14000ac3c:	pop    rdx
   14000ac3d:	add    BYTE PTR [rax],ah
   14000ac3f:	add    al,0x3f
   14000ac41:	imul   ebp,DWORD PTR [rsi+0x40],0x6f63243f
   14000ac48:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000ac4d:	rex
   14000ac4e:	rex.R
   14000ac4f:	rex.R
   14000ac50:	rex.W
   14000ac51:	rex jae 0x14000acc8
   14000ac54:	fs rex
   14000ac56:	rex push rcx
   14000ac58:	rex.RB
   14000ac59:	rex.X
   14000ac5a:	rex.B
   14000ac5b:	rex.W
   14000ac5c:	rex.B
   14000ac5d:	rex.RB
   14000ac5e:	rex.B
   14000ac5f:	rex.W push rax
   14000ac61:	rex.RB
   14000ac62:	rex.X
   14000ac63:	xor    DWORD PTR [rcx+0x45],r8d
   14000ac67:	push   r8
   14000ac69:	rex.RB
   14000ac6a:	rex.X
   14000ac6b:	rex.R push rax
   14000ac6d:	rex.RB
   14000ac6e:	rex.B
   14000ac6f:	xor    r8d,DWORD PTR [rcx+0x45]
   14000ac73:	push   r8
   14000ac75:	rex.RB
   14000ac76:	rex.B
   14000ac77:	rex.R
   14000ac78:	rex pop rdx
   14000ac7a:	add    BYTE PTR [rax],al
   14000ac7c:	push   rsi
   14000ac7d:	add    al,0x3f
   14000ac7f:	outs   dx,DWORD PTR ds:[rsi]
   14000ac80:	jne    0x14000acf6
   14000ac82:	rex (bad) 
   14000ac84:	and    al,0x63
   14000ac86:	outs   dx,DWORD PTR ds:[rsi]
   14000ac87:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000ac8c:	rex
   14000ac8d:	rex.R
   14000ac8e:	rex.R
   14000ac8f:	rex.W
   14000ac90:	rex jae 0x14000ad07
   14000ac93:	fs rex
   14000ac95:	rex push rcx
   14000ac97:	rex.RB
   14000ac98:	rex.X
   14000ac99:	rex.B
   14000ac9a:	rex.W
   14000ac9b:	rex.B
   14000ac9c:	rex.RB
   14000ac9d:	rex.B
   14000ac9e:	rex.W push rax
   14000aca0:	rex.RB
   14000aca1:	rex.X
   14000aca2:	xor    DWORD PTR [rcx+0x45],r8d
   14000aca6:	push   r8
   14000aca8:	rex.RB
   14000aca9:	rex.X
   14000acaa:	rex.R push rax
   14000acac:	rex.RB
   14000acad:	rex.B
   14000acae:	xor    r8d,DWORD PTR [rcx+0x45]
   14000acb2:	push   r8
   14000acb4:	rex.RB
   14000acb5:	rex.B
   14000acb6:	rex.R
   14000acb7:	rex pop rdx
   14000acb9:	add    BYTE PTR [rbx+0x5],cl
   14000acbc:	(bad)  
   14000acbd:	jne    0x14000ad2d
   14000acbf:	jae    0x14000ad29
   14000acc1:	imul   esp,DWORD PTR [rsi+0x74],0x63243f40
   14000acc8:	outs   dx,DWORD PTR ds:[rsi]
   14000acc9:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000acce:	rex
   14000accf:	rex.R
   14000acd0:	rex.R
   14000acd1:	rex.W
   14000acd2:	rex jae 0x14000ad49
   14000acd5:	fs rex
   14000acd7:	rex push rcx
   14000acd9:	rex.RB
   14000acda:	rex.X
   14000acdb:	rex.B
   14000acdc:	rex.W
   14000acdd:	rex.B
   14000acde:	rex.RB
   14000acdf:	rex.B
   14000ace0:	rex.W push rax
   14000ace2:	rex.RB
   14000ace3:	rex.B
   14000ace4:	xor    DWORD PTR [rcx+0x45],r8d
   14000ace8:	push   r8
   14000acea:	rex.RB
   14000aceb:	rex.B
   14000acec:	rex.R
   14000aced:	rex pop rdx
   14000acef:	add    bl,cl
   14000acf1:	add    DWORD PTR [rdi],edi
   14000acf3:	pop    rdi
   14000acf4:	rex.RXB
   14000acf5:	gs je  0x14000ad5b
   14000acf8:	(bad)  
   14000acf9:	je     0x14000ad3b
   14000acfb:	(bad)  
   14000acfc:	and    al,0x63
   14000acfe:	outs   dx,DWORD PTR ds:[rsi]
   14000acff:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000ad04:	rex
   14000ad05:	rex.R
   14000ad06:	rex.R
   14000ad07:	rex.W
   14000ad08:	rex jae 0x14000ad7f
   14000ad0b:	fs rex
   14000ad0d:	rex push rbx
   14000ad0f:	pop    r15
   14000ad11:	rex.WXB push r8
   14000ad13:	rex.RB
   14000ad14:	push   r8
   14000ad16:	rex.RB
   14000ad17:	rex.X push rsi
   14000ad19:	data16 (bad) 
   14000ad1b:	movsxd esp,DWORD PTR [rbp+0x74]
   14000ad1e:	rex ins BYTE PTR es:[rdi],dx
   14000ad20:	outs   dx,DWORD PTR ds:[rsi]
   14000ad21:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ad24:	xor    al,BYTE PTR gs:[rax+0x50]
   14000ad29:	rex.RB
   14000ad2a:	rex.X push rsi
   14000ad2c:	xor    al,0x32
   14000ad2e:	rex
   14000ad2f:	rex pop rdx
   14000ad31:	add    BYTE PTR [rax+0x535f3f02],dh
   14000ad37:	jns    0x14000adac
   14000ad39:	gs jb  0x14000adae
   14000ad3c:	outs   dx,DWORD PTR ds:[rsi]
   14000ad3d:	jb     0x14000ad9e
   14000ad3f:	ins    DWORD PTR es:[rdi],dx
   14000ad40:	(bad)  
   14000ad41:	jo     0x14000ad83
   14000ad43:	jae    0x14000adb9
   14000ad45:	fs rex
   14000ad47:	rex pop rcx
   14000ad49:	push   r8
   14000ad4b:	rex.RB
   14000ad4c:	rex.X
   14000ad4d:	rex.R
   14000ad4e:	rex.W
   14000ad4f:	rex pop rdx
   14000ad51:	add    ch,al
   14000ad53:	add    bh,BYTE PTR [rdi]
   14000ad55:	pop    rdi
   14000ad56:	push   rdi
   14000ad57:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   14000ad5e:	pop    rdi
   14000ad5f:	ins    DWORD PTR es:[rdi],dx
   14000ad60:	(bad)  
   14000ad61:	jo     0x14000ada3
   14000ad63:	jae    0x14000add9
   14000ad65:	fs rex
   14000ad67:	rex pop rcx
   14000ad69:	push   r8
   14000ad6b:	rex.RB
   14000ad6c:	rex.X
   14000ad6d:	rex.R
   14000ad6e:	rex.W
   14000ad6f:	rex pop rdx
   14000ad71:	add    BYTE PTR [rbx+0x2],al
   14000ad74:	(bad)  
   14000ad75:	pop    rdi
   14000ad76:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000ad78:	jae    0x14000add9
   14000ad7a:	(bad)  
   14000ad7c:	jae    0x14000ade3
   14000ad7e:	pop    rdi
   14000ad7f:	fs je  0x14000adf1
   14000ad82:	jb     0x14000adc4
   14000ad84:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14000ad8b:	gs rex jae 0x14000ae03
   14000ad8f:	fs rex
   14000ad91:	rex
   14000ad92:	rex.XB
   14000ad93:	pop    r8
   14000ad95:	push   rax
   14000ad96:	rex.RB
   14000ad97:	push   r14
   14000ad99:	xor    DWORD PTR [rdx],esi
   14000ad9b:	rex
   14000ad9c:	rex pop rdx
   14000ad9e:	add    BYTE PTR [rax],al
   14000ada0:	sub    al,BYTE PTR [rax]
   14000ada2:	(bad)  
   14000ada3:	(bad)  
   14000ada4:	xor    BYTE PTR [rdi],bh
   14000ada6:	and    al,0x62
   14000ada8:	(bad)  
   14000ada9:	jae    0x14000ae14
   14000adab:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000adae:	je     0x14000ae22
   14000adb0:	gs (bad) 
   14000adb2:	ins    DWORD PTR es:[rdi],dx
   14000adb3:	(bad)  
   14000adb4:	jne    0x14000ae1c
   14000adb6:	rex
   14000adb7:	rex.R push rbp
   14000adb9:	(bad)  
   14000adba:	and    al,0x63
   14000adbc:	push   0x745f7261
   14000adc1:	jb     0x14000ae24
   14000adc3:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000adcb:	fs rex
   14000adcd:	rex
   14000adce:	rex jae 0x14000ae45
   14000add1:	fs rex
   14000add3:	rex
   14000add4:	rex.WB
   14000add5:	rex.RB
   14000add6:	rex.B
   14000add7:	rex.B
   14000add8:	rex pop rax
   14000adda:	pop    rdx
   14000addb:	add    BYTE PTR [rdi+0x313f3f00],al
   14000ade1:	(bad)  
   14000ade2:	and    al,0x62
   14000ade4:	(bad)  
   14000ade5:	jae    0x14000ae50
   14000ade7:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000adea:	je     0x14000ae5e
   14000adec:	gs (bad) 
   14000adee:	ins    DWORD PTR es:[rdi],dx
   14000adef:	(bad)  
   14000adf0:	jne    0x14000ae58
   14000adf2:	rex
   14000adf3:	rex.R push rbp
   14000adf5:	(bad)  
   14000adf6:	and    al,0x63
   14000adf8:	push   0x745f7261
   14000adfd:	jb     0x14000ae60
   14000adff:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000ae07:	fs rex
   14000ae09:	rex
   14000ae0a:	rex jae 0x14000ae81
   14000ae0d:	fs rex
   14000ae0f:	rex push rbp
   14000ae11:	rex.RB
   14000ae12:	rex.B
   14000ae13:	rex.B
   14000ae14:	rex pop rax
   14000ae16:	pop    rdx
   14000ae17:	add    dh,ah
   14000ae19:	add    edi,DWORD PTR [rdi]
   14000ae1b:	addr32 gs je 0x14000ae8b
   14000ae1f:	outs   dx,DWORD PTR ds:[rsi]
   14000ae20:	movsxd eax,DWORD PTR [rax+0x3f]
   14000ae23:	and    al,0x62
   14000ae25:	(bad)  
   14000ae26:	jae    0x14000ae91
   14000ae28:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000ae2b:	je     0x14000ae9f
   14000ae2d:	gs (bad) 
   14000ae2f:	ins    DWORD PTR es:[rdi],dx
   14000ae30:	(bad)  
   14000ae31:	jne    0x14000ae99
   14000ae33:	rex
   14000ae34:	rex.R push rbp
   14000ae36:	(bad)  
   14000ae37:	and    al,0x63
   14000ae39:	push   0x745f7261
   14000ae3e:	jb     0x14000aea1
   14000ae40:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000ae48:	fs rex
   14000ae4a:	rex
   14000ae4b:	rex jae 0x14000aec2
   14000ae4e:	fs rex
   14000ae50:	rex push rcx
   14000ae52:	rex.RB
   14000ae53:	rex.X
   14000ae54:	rex.B (bad) 
   14000ae56:	push   r14
   14000ae58:	ins    BYTE PTR es:[rdi],dx
   14000ae59:	outs   dx,DWORD PTR ds:[rsi]
   14000ae5a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ae5d:	xor    al,BYTE PTR gs:[rax+0x58]
   14000ae62:	pop    rdx
   14000ae63:	add    BYTE PTR [rsi+0x62733f04],dh
   14000ae69:	jne    0x14000aed8
   14000ae6b:	jo     0x14000aed0
   14000ae6d:	rex (bad) 
   14000ae6f:	and    al,0x62
   14000ae71:	(bad)  
   14000ae72:	jae    0x14000aedd
   14000ae74:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000ae77:	je     0x14000aeeb
   14000ae79:	gs (bad) 
   14000ae7b:	ins    DWORD PTR es:[rdi],dx
   14000ae7c:	(bad)  
   14000ae7d:	jne    0x14000aee5
   14000ae7f:	rex
   14000ae80:	rex.R push rbp
   14000ae82:	(bad)  
   14000ae83:	and    al,0x63
   14000ae85:	push   0x745f7261
   14000ae8a:	jb     0x14000aeed
   14000ae8c:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000ae94:	fs rex
   14000ae96:	rex
   14000ae97:	rex jae 0x14000af0e
   14000ae9a:	fs rex
   14000ae9c:	rex push rcx
   14000ae9e:	rex.RB
   14000ae9f:	rex.B
   14000aea0:	rex.B
   14000aea1:	rex.W pop rax
   14000aea3:	pop    rdx
   14000aea4:	add    BYTE PTR [rax],al
   14000aea6:	lock add al,0x3f
   14000aea9:	jae    0x14000af12
   14000aeab:	gs je  0x14000af11
   14000aeae:	rex (bad) 
   14000aeb0:	and    al,0x62
   14000aeb2:	(bad)  
   14000aeb3:	jae    0x14000af1e
   14000aeb5:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000aeb8:	je     0x14000af2c
   14000aeba:	gs (bad) 
   14000aebc:	ins    DWORD PTR es:[rdi],dx
   14000aebd:	(bad)  
   14000aebe:	jne    0x14000af26
   14000aec0:	rex
   14000aec1:	rex.R push rbp
   14000aec3:	(bad)  
   14000aec4:	and    al,0x63
   14000aec6:	push   0x745f7261
   14000aecb:	jb     0x14000af2e
   14000aecd:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000aed5:	fs rex
   14000aed7:	rex
   14000aed8:	rex jae 0x14000af4f
   14000aedb:	fs rex
   14000aedd:	rex push rcx
   14000aedf:	rex.RB
   14000aee0:	rex.B
   14000aee1:	rex.B
   14000aee2:	rex.W pop rax
   14000aee4:	pop    rdx
   14000aee5:	add    cl,bh
   14000aee7:	add    al,0x3f
   14000aee9:	jae    0x14000af59
   14000aeeb:	gs js  0x14000af62
   14000aeee:	movsxd eax,DWORD PTR [rax+0x3f]
   14000aef1:	and    al,0x62
   14000aef3:	(bad)  
   14000aef4:	jae    0x14000af5f
   14000aef6:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000aef9:	je     0x14000af6d
   14000aefb:	gs (bad) 
   14000aefd:	ins    DWORD PTR es:[rdi],dx
   14000aefe:	(bad)  
   14000aeff:	jne    0x14000af67
   14000af01:	rex
   14000af02:	rex.R push rbp
   14000af04:	(bad)  
   14000af05:	and    al,0x63
   14000af07:	push   0x745f7261
   14000af0c:	jb     0x14000af6f
   14000af0e:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000af16:	fs rex
   14000af18:	rex
   14000af19:	rex jae 0x14000af90
   14000af1c:	fs rex
   14000af1e:	rex push rcx
   14000af20:	rex.RB
   14000af21:	rex.B
   14000af22:	rex.B
   14000af23:	rex.W pop rax
   14000af25:	pop    rdx
   14000af26:	add    BYTE PTR [rax],al
   14000af28:	inc    DWORD PTR [rdi+rdi*1]
   14000af2b:	jae    0x14000af9d
   14000af2d:	jne    0x14000afa3
   14000af2f:	movsxd eax,DWORD PTR [rax+0x3f]
   14000af32:	and    al,0x62
   14000af34:	(bad)  
   14000af35:	jae    0x14000afa0
   14000af37:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000af3a:	je     0x14000afae
   14000af3c:	gs (bad) 
   14000af3e:	ins    DWORD PTR es:[rdi],dx
   14000af3f:	(bad)  
   14000af40:	jne    0x14000afa8
   14000af42:	rex
   14000af43:	rex.R push rbp
   14000af45:	(bad)  
   14000af46:	and    al,0x63
   14000af48:	push   0x745f7261
   14000af4d:	jb     0x14000afb0
   14000af4f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000af57:	fs rex
   14000af59:	rex
   14000af5a:	rex jae 0x14000afd1
   14000af5d:	fs rex
   14000af5f:	rex push rcx
   14000af61:	rex.RB
   14000af62:	rex.B
   14000af63:	rex.B
   14000af64:	rex.W
   14000af65:	rex.R
   14000af66:	rex pop rdx
   14000af68:	add    BYTE PTR [rax],al
   14000af6a:	add    al,BYTE PTR [rip+0x7570733f]        # 0x1b57122af
   14000af70:	je     0x14000afe0
   14000af72:	rex (bad) 
   14000af74:	and    al,0x62
   14000af76:	(bad)  
   14000af77:	jae    0x14000afe2
   14000af79:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000af7c:	je     0x14000aff0
   14000af7e:	gs (bad) 
   14000af80:	ins    DWORD PTR es:[rdi],dx
   14000af81:	(bad)  
   14000af82:	jne    0x14000afea
   14000af84:	rex
   14000af85:	rex.R push rbp
   14000af87:	(bad)  
   14000af88:	and    al,0x63
   14000af8a:	push   0x745f7261
   14000af8f:	jb     0x14000aff2
   14000af91:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000af99:	fs rex
   14000af9b:	rex
   14000af9c:	rex jae 0x14000b013
   14000af9f:	fs rex
   14000afa1:	rex push rcx
   14000afa3:	rex.RB
   14000afa4:	rex.B
   14000afa5:	pop    r15
   14000afa7:	rex.WX push rax
   14000afa9:	rex.RB
   14000afaa:	rex.X
   14000afab:	rex.R pop rdi
   14000afad:	rex.WX
   14000afae:	rex pop rdx
   14000afb0:	add    BYTE PTR [rax],al
   14000afb2:	fild   DWORD PTR [rdi+rdi*1]
   14000afb5:	jae    0x14000b01c
   14000afb7:	je     0x14000b020
   14000afb9:	rex (bad) 
   14000afbb:	and    al,0x62
   14000afbd:	(bad)  
   14000afbe:	jae    0x14000b029
   14000afc0:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000afc3:	je     0x14000b037
   14000afc5:	gs (bad) 
   14000afc7:	ins    DWORD PTR es:[rdi],dx
   14000afc8:	(bad)  
   14000afc9:	jne    0x14000b031
   14000afcb:	rex
   14000afcc:	rex.R push rbp
   14000afce:	(bad)  
   14000afcf:	and    al,0x63
   14000afd1:	push   0x745f7261
   14000afd6:	jb     0x14000b039
   14000afd8:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000afe0:	fs rex
   14000afe2:	rex
   14000afe3:	rex jae 0x14000b05a
   14000afe6:	fs rex
   14000afe8:	rex
   14000afe9:	rex.WB
   14000afea:	rex.RB
   14000afeb:	rex.B
   14000afec:	pop    r8
   14000afee:	push   rax
   14000afef:	rex.RB
   14000aff0:	rex.B
   14000aff1:	xor    BYTE PTR [rax],r14b
   14000aff4:	rex pop rdx
   14000aff6:	add    BYTE PTR [rax],al
   14000aff8:	(bad)  
   14000aff9:	add    bh,BYTE PTR [rdi]
   14000affb:	pop    rdi
   14000affc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000affe:	imul   esi,DWORD PTR [rax+rax*2+0x3f],0x73616224
   14000b006:	imul   esp,DWORD PTR [rbx+0x5f],0x65727473
   14000b00d:	(bad)  
   14000b00e:	ins    DWORD PTR es:[rdi],dx
   14000b00f:	(bad)  
   14000b010:	jne    0x14000b078
   14000b012:	rex
   14000b013:	rex.R push rbp
   14000b015:	(bad)  
   14000b016:	and    al,0x63
   14000b018:	push   0x745f7261
   14000b01d:	jb     0x14000b080
   14000b01f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b027:	fs rex
   14000b029:	rex
   14000b02a:	rex jae 0x14000b0a1
   14000b02d:	fs rex
   14000b02f:	rex
   14000b030:	rex.WB
   14000b031:	rex.RB
   14000b032:	rex.B
   14000b033:	pop    r8
   14000b035:	pop    rax
   14000b036:	pop    rdx
   14000b037:	add    BYTE PTR [rbx+0x0],bh
   14000b03a:	(bad)  
   14000b03b:	(bad)  
   14000b03c:	xor    DWORD PTR [rdi],edi
   14000b03e:	and    al,0x62
   14000b040:	(bad)  
   14000b041:	jae    0x14000b0ac
   14000b043:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000b046:	outs   dx,DWORD PTR ds:[rsi]
   14000b047:	jae    0x14000b089
   14000b049:	rex.R push rbp
   14000b04b:	(bad)  
   14000b04c:	and    al,0x63
   14000b04e:	push   0x745f7261
   14000b053:	jb     0x14000b0b6
   14000b055:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b05d:	fs rex
   14000b05f:	rex
   14000b060:	rex jae 0x14000b0d7
   14000b063:	fs rex
   14000b065:	rex push rbp
   14000b067:	rex.RB
   14000b068:	rex.B
   14000b069:	rex.B
   14000b06a:	rex pop rax
   14000b06c:	pop    rdx
   14000b06d:	add    dl,bl
   14000b06f:	add    bh,BYTE PTR [rdi]
   14000b071:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   14000b075:	jb     0x14000b0b7
   14000b077:	(bad)  
   14000b078:	and    al,0x62
   14000b07a:	(bad)  
   14000b07b:	jae    0x14000b0e6
   14000b07d:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000b080:	outs   dx,DWORD PTR ds:[rsi]
   14000b081:	jae    0x14000b0c3
   14000b083:	rex.R push rbp
   14000b085:	(bad)  
   14000b086:	and    al,0x63
   14000b088:	push   0x745f7261
   14000b08d:	jb     0x14000b0f0
   14000b08f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b097:	fs rex
   14000b099:	rex
   14000b09a:	rex jae 0x14000b111
   14000b09d:	fs rex
   14000b09f:	rex push rcx
   14000b0a1:	rex.RB
   14000b0a2:	rex.B
   14000b0a3:	pop    r8
   14000b0a5:	rex.W pop rdi
   14000b0a7:	rex.WRX
   14000b0a8:	rex pop rdx
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	out    0x4,al
   14000b0ae:	(bad)  
   14000b0af:	jae    0x14000b116
   14000b0b1:	je     0x14000b126
   14000b0b3:	je     0x14000b116
   14000b0b5:	je     0x14000b11c
   14000b0b7:	rex (bad) 
   14000b0b9:	and    al,0x62
   14000b0bb:	(bad)  
   14000b0bc:	jae    0x14000b127
   14000b0be:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000b0c1:	outs   dx,DWORD PTR ds:[rsi]
   14000b0c2:	jae    0x14000b104
   14000b0c4:	rex.R push rbp
   14000b0c6:	(bad)  
   14000b0c7:	and    al,0x63
   14000b0c9:	push   0x745f7261
   14000b0ce:	jb     0x14000b131
   14000b0d0:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b0d8:	fs rex
   14000b0da:	rex
   14000b0db:	rex jae 0x14000b152
   14000b0de:	fs rex
   14000b0e0:	rex push rcx
   14000b0e2:	rex.RB
   14000b0e3:	rex.B
   14000b0e4:	pop    r8
   14000b0e6:	rex.W pop rdi
   14000b0e8:	rex.WRX
   14000b0e9:	rex pop rdx
   14000b0eb:	add    BYTE PTR [rcx+0x5],bl
   14000b0ee:	(bad)  
   14000b0ef:	ja     0x14000b15a
   14000b0f1:	fs outs dx,BYTE PTR gs:[rsi]
   14000b0f4:	rex (bad) 
   14000b0f6:	and    al,0x62
   14000b0f8:	(bad)  
   14000b0f9:	jae    0x14000b164
   14000b0fb:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000b0fe:	outs   dx,DWORD PTR ds:[rsi]
   14000b0ff:	jae    0x14000b141
   14000b101:	rex.R push rbp
   14000b103:	(bad)  
   14000b104:	and    al,0x63
   14000b106:	push   0x745f7261
   14000b10b:	jb     0x14000b16e
   14000b10d:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b115:	fs rex
   14000b117:	rex
   14000b118:	rex jae 0x14000b18f
   14000b11b:	fs rex
   14000b11d:	rex push rcx
   14000b11f:	rex.RB
   14000b120:	rex.X
   14000b121:	rex.B
   14000b122:	rex.R
   14000b123:	rex.R
   14000b124:	rex pop rdx
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	and    BYTE PTR [rax],al
   14000b12a:	(bad)  
   14000b12b:	(bad)  
   14000b12c:	xor    BYTE PTR [rdi],bh
   14000b12e:	and    al,0x62
   14000b130:	(bad)  
   14000b131:	jae    0x14000b19c
   14000b133:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b136:	jae    0x14000b1ac
   14000b138:	jb     0x14000b19f
   14000b13a:	(bad)  
   14000b13b:	ins    DWORD PTR es:[rdi],dx
   14000b13c:	rex
   14000b13d:	rex.R push rbp
   14000b13f:	(bad)  
   14000b140:	and    al,0x63
   14000b142:	push   0x745f7261
   14000b147:	jb     0x14000b1aa
   14000b149:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b151:	fs rex
   14000b153:	rex
   14000b154:	rex jae 0x14000b1cb
   14000b157:	fs rex
   14000b159:	rex push rcx
   14000b15b:	rex.RB
   14000b15c:	rex.B
   14000b15d:	rex.B
   14000b15e:	rex push rax
   14000b160:	rex.RB
   14000b161:	push   r14
   14000b163:	(bad)  
   14000b164:	and    al,0x62
   14000b166:	(bad)  
   14000b167:	jae    0x14000b1d2
   14000b169:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b16c:	je     0x14000b1e0
   14000b16e:	gs (bad) 
   14000b170:	ins    DWORD PTR es:[rdi],dx
   14000b171:	(bad)  
   14000b172:	jne    0x14000b1da
   14000b174:	rex
   14000b175:	rex.R push rbp
   14000b177:	(bad)  
   14000b178:	and    al,0x63
   14000b17a:	push   0x745f7261
   14000b17f:	jb     0x14000b1e2
   14000b181:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b189:	fs rex
   14000b18b:	rex
   14000b18c:	rex xor DWORD PTR [rax+0x5f],eax
   14000b190:	rex.WRX
   14000b191:	rex pop rdx
   14000b193:	add    BYTE PTR [rax+rax*1+0x3f313f3f],al
   14000b19a:	and    al,0x62
   14000b19c:	(bad)  
   14000b19d:	jae    0x14000b208
   14000b19f:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b1a2:	jae    0x14000b218
   14000b1a4:	jb     0x14000b20b
   14000b1a6:	(bad)  
   14000b1a7:	ins    DWORD PTR es:[rdi],dx
   14000b1a8:	rex
   14000b1a9:	rex.R push rbp
   14000b1ab:	(bad)  
   14000b1ac:	and    al,0x63
   14000b1ae:	push   0x745f7261
   14000b1b3:	jb     0x14000b216
   14000b1b5:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b1bd:	fs rex
   14000b1bf:	rex
   14000b1c0:	rex jae 0x14000b237
   14000b1c3:	fs rex
   14000b1c5:	rex push rbp
   14000b1c7:	rex.RB
   14000b1c8:	rex.B
   14000b1c9:	rex.B
   14000b1ca:	rex pop rax
   14000b1cc:	pop    rdx
   14000b1cd:	add    BYTE PTR [rsi+0x2],dh
   14000b1d0:	(bad)  
   14000b1d1:	pop    rdi
   14000b1d2:	rex.WRXB jae 0x14000b23b
   14000b1d5:	js     0x14000b217
   14000b1d7:	(bad)  
   14000b1d8:	and    al,0x62
   14000b1da:	(bad)  
   14000b1db:	jae    0x14000b246
   14000b1dd:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b1e0:	jae    0x14000b256
   14000b1e2:	jb     0x14000b249
   14000b1e4:	(bad)  
   14000b1e5:	ins    DWORD PTR es:[rdi],dx
   14000b1e6:	rex
   14000b1e7:	rex.R push rbp
   14000b1e9:	(bad)  
   14000b1ea:	and    al,0x63
   14000b1ec:	push   0x745f7261
   14000b1f1:	jb     0x14000b254
   14000b1f3:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b1fb:	fs rex
   14000b1fd:	rex
   14000b1fe:	rex jae 0x14000b275
   14000b201:	fs rex
   14000b203:	rex push rcx
   14000b205:	rex.RB
   14000b206:	rex.B
   14000b207:	pop    r8
   14000b209:	pop    rax
   14000b20a:	pop    rdx
   14000b20b:	add    BYTE PTR [rip+0x363f3f01],al        # 0x1763ff112
   14000b211:	(bad)  
   14000b212:	and    al,0x62
   14000b214:	(bad)  
   14000b215:	jae    0x14000b280
   14000b217:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b21a:	jae    0x14000b290
   14000b21c:	jb     0x14000b283
   14000b21e:	(bad)  
   14000b21f:	ins    DWORD PTR es:[rdi],dx
   14000b220:	rex
   14000b221:	rex.R push rbp
   14000b223:	(bad)  
   14000b224:	and    al,0x63
   14000b226:	push   0x745f7261
   14000b22b:	jb     0x14000b28e
   14000b22d:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b235:	fs rex
   14000b237:	rex
   14000b238:	rex jae 0x14000b2af
   14000b23b:	fs rex
   14000b23d:	rex push rcx
   14000b23f:	rex.RB
   14000b240:	rex.B
   14000b241:	rex.B
   14000b242:	rex.B
   14000b243:	rex.RB
   14000b244:	push   r14
   14000b246:	xor    BYTE PTR [rcx],dh
   14000b248:	rex push rax
   14000b24a:	ss rex.B
   14000b24c:	rex.B
   14000b24d:	rex.RB
   14000b24e:	push   r14
   14000b250:	xor    BYTE PTR [rcx],dh
   14000b252:	rex
   14000b253:	rex.B
   14000b254:	rex.RB
   14000b255:	push   r14
   14000b257:	xor    BYTE PTR [rcx],dh
   14000b259:	rex
   14000b25a:	rex pop rdx
   14000b25c:	rex pop rdx
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	or     BYTE PTR [rcx],al
   14000b262:	(bad)  
   14000b263:	(bad)  
   14000b264:	ss (bad) 
   14000b266:	and    al,0x62
   14000b268:	(bad)  
   14000b269:	jae    0x14000b2d4
   14000b26b:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b26e:	jae    0x14000b2e4
   14000b270:	jb     0x14000b2d7
   14000b272:	(bad)  
   14000b273:	ins    DWORD PTR es:[rdi],dx
   14000b274:	rex
   14000b275:	rex.R push rbp
   14000b277:	(bad)  
   14000b278:	and    al,0x63
   14000b27a:	push   0x745f7261
   14000b27f:	jb     0x14000b2e2
   14000b281:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b289:	fs rex
   14000b28b:	rex
   14000b28c:	rex jae 0x14000b303
   14000b28f:	fs rex
   14000b291:	rex push rcx
   14000b293:	rex.RB
   14000b294:	rex.B
   14000b295:	rex.B
   14000b296:	rex.B
   14000b297:	rex.RB
   14000b298:	push   r14
   14000b29a:	xor    BYTE PTR [rcx],dh
   14000b29c:	rex push rax
   14000b29e:	rex.RB
   14000b29f:	push   r14
   14000b2a1:	(bad)  
   14000b2a2:	and    al,0x62
   14000b2a4:	(bad)  
   14000b2a5:	jae    0x14000b310
   14000b2a7:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b2aa:	je     0x14000b31e
   14000b2ac:	gs (bad) 
   14000b2ae:	ins    DWORD PTR es:[rdi],dx
   14000b2af:	(bad)  
   14000b2b0:	jne    0x14000b318
   14000b2b2:	rex
   14000b2b3:	rex.R push rbp
   14000b2b5:	(bad)  
   14000b2b6:	and    al,0x63
   14000b2b8:	push   0x745f7261
   14000b2bd:	jb     0x14000b320
   14000b2bf:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b2c7:	fs rex
   14000b2c9:	rex
   14000b2ca:	rex xor DWORD PTR [rax+0x40],eax
   14000b2ce:	pop    rdx
   14000b2cf:	add    BYTE PTR [rdx+0x75703f04],al
   14000b2d5:	je     0x14000b317
   14000b2d7:	(bad)  
   14000b2d8:	and    al,0x62
   14000b2da:	(bad)  
   14000b2db:	jae    0x14000b346
   14000b2dd:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b2e0:	jae    0x14000b356
   14000b2e2:	jb     0x14000b349
   14000b2e4:	(bad)  
   14000b2e5:	ins    DWORD PTR es:[rdi],dx
   14000b2e6:	rex
   14000b2e7:	rex.R push rbp
   14000b2e9:	(bad)  
   14000b2ea:	and    al,0x63
   14000b2ec:	push   0x745f7261
   14000b2f1:	jb     0x14000b354
   14000b2f3:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b2fb:	fs rex
   14000b2fd:	rex
   14000b2fe:	rex jae 0x14000b375
   14000b301:	fs rex
   14000b303:	rex push rcx
   14000b305:	rex.RB
   14000b306:	rex.B
   14000b307:	rex.B
   14000b308:	rex.B
   14000b309:	rex.RB
   14000b30a:	push   r14
   14000b30c:	xor    DWORD PTR [rdx],esi
   14000b30e:	rex
   14000b30f:	rex.R
   14000b310:	rex pop rdx
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	mov    es,WORD PTR [rbx]
   14000b316:	(bad)  
   14000b317:	data16 ins BYTE PTR es:[rdi],dx
   14000b319:	jne    0x14000b38e
   14000b31b:	push   0x62243f40
   14000b320:	(bad)  
   14000b321:	jae    0x14000b38c
   14000b323:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b326:	jae    0x14000b39c
   14000b328:	jb     0x14000b38f
   14000b32a:	(bad)  
   14000b32b:	ins    DWORD PTR es:[rdi],dx
   14000b32c:	rex
   14000b32d:	rex.R push rbp
   14000b32f:	(bad)  
   14000b330:	and    al,0x63
   14000b332:	push   0x745f7261
   14000b337:	jb     0x14000b39a
   14000b339:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b341:	fs rex
   14000b343:	rex
   14000b344:	rex jae 0x14000b3bb
   14000b347:	fs rex
   14000b349:	rex push rcx
   14000b34b:	rex.RB
   14000b34c:	rex.B
   14000b34d:	rex.B
   14000b34e:	rex.B
   14000b34f:	rex.RB
   14000b350:	push   r14
   14000b352:	xor    DWORD PTR [rdx],esi
   14000b354:	rex pop rax
   14000b356:	pop    rdx
   14000b357:	add    BYTE PTR [rbp+0x1],ch
   14000b35a:	(bad)  
   14000b35b:	(bad)  
   14000b35c:	pop    rdi
   14000b35d:	rex.R (bad) 
   14000b35f:	and    al,0x62
   14000b361:	(bad)  
   14000b362:	jae    0x14000b3cd
   14000b364:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b367:	jae    0x14000b3dd
   14000b369:	jb     0x14000b3d0
   14000b36b:	(bad)  
   14000b36c:	ins    DWORD PTR es:[rdi],dx
   14000b36d:	rex
   14000b36e:	rex.R push rbp
   14000b370:	(bad)  
   14000b371:	and    al,0x63
   14000b373:	push   0x745f7261
   14000b378:	jb     0x14000b3db
   14000b37a:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b382:	fs rex
   14000b384:	rex
   14000b385:	rex jae 0x14000b3fc
   14000b388:	fs rex
   14000b38a:	rex push rcx
   14000b38c:	rex.RB
   14000b38d:	rex.B
   14000b38e:	pop    r8
   14000b390:	pop    rax
   14000b391:	pop    rdx
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	adc    eax,0x303f3f00
   14000b399:	(bad)  
   14000b39a:	and    al,0x62
   14000b39c:	(bad)  
   14000b39d:	jae    0x14000b408
   14000b39f:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000b3a2:	jae    0x14000b418
   14000b3a4:	jb     0x14000b40b
   14000b3a6:	(bad)  
   14000b3a7:	ins    DWORD PTR es:[rdi],dx
   14000b3a8:	rex
   14000b3a9:	rex.R push rbp
   14000b3ab:	(bad)  
   14000b3ac:	and    al,0x63
   14000b3ae:	push   0x745f7261
   14000b3b3:	jb     0x14000b416
   14000b3b5:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b3bd:	fs rex
   14000b3bf:	rex
   14000b3c0:	rex jae 0x14000b437
   14000b3c3:	fs rex
   14000b3c5:	rex push rcx
   14000b3c7:	rex.RB
   14000b3c8:	rex.B
   14000b3c9:	rex.B
   14000b3ca:	rex push rax
   14000b3cc:	rex.RB
   14000b3cd:	push   r14
   14000b3cf:	(bad)  
   14000b3d0:	and    al,0x62
   14000b3d2:	(bad)  
   14000b3d3:	jae    0x14000b43e
   14000b3d5:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b3d8:	je     0x14000b44c
   14000b3da:	gs (bad) 
   14000b3dc:	ins    DWORD PTR es:[rdi],dx
   14000b3dd:	(bad)  
   14000b3de:	jne    0x14000b446
   14000b3e0:	rex
   14000b3e1:	rex.R push rbp
   14000b3e3:	(bad)  
   14000b3e4:	and    al,0x63
   14000b3e6:	push   0x745f7261
   14000b3eb:	jb     0x14000b44e
   14000b3ed:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b3f5:	fs rex
   14000b3f7:	rex
   14000b3f8:	rex xor DWORD PTR [rax+0x5f],eax
   14000b3fc:	rex.WRX
   14000b3fd:	rex pop rdx
   14000b3ff:	add    BYTE PTR [rcx+0x313f3f00],al
   14000b405:	(bad)  
   14000b406:	and    al,0x62
   14000b408:	(bad)  
   14000b409:	jae    0x14000b474
   14000b40b:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000b40e:	jae    0x14000b484
   14000b410:	jb     0x14000b477
   14000b412:	(bad)  
   14000b413:	ins    DWORD PTR es:[rdi],dx
   14000b414:	rex
   14000b415:	rex.R push rbp
   14000b417:	(bad)  
   14000b418:	and    al,0x63
   14000b41a:	push   0x745f7261
   14000b41f:	jb     0x14000b482
   14000b421:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b429:	fs rex
   14000b42b:	rex
   14000b42c:	rex jae 0x14000b4a3
   14000b42f:	fs rex
   14000b431:	rex push rbp
   14000b433:	rex.RB
   14000b434:	rex.B
   14000b435:	rex.B
   14000b436:	rex pop rax
   14000b438:	pop    rdx
   14000b439:	add    BYTE PTR [rdx+rax*1+0x3f],al
   14000b43d:	pop    rdi
   14000b43e:	rex.WB jo 0x14000b4a7
   14000b441:	js     0x14000b483
   14000b443:	(bad)  
   14000b444:	and    al,0x62
   14000b446:	(bad)  
   14000b447:	jae    0x14000b4b2
   14000b449:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000b44c:	jae    0x14000b4c2
   14000b44e:	jb     0x14000b4b5
   14000b450:	(bad)  
   14000b451:	ins    DWORD PTR es:[rdi],dx
   14000b452:	rex
   14000b453:	rex.R push rbp
   14000b455:	(bad)  
   14000b456:	and    al,0x63
   14000b458:	push   0x745f7261
   14000b45d:	jb     0x14000b4c0
   14000b45f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b467:	fs rex
   14000b469:	rex
   14000b46a:	rex jae 0x14000b4e1
   14000b46d:	fs rex
   14000b46f:	rex push rcx
   14000b471:	rex.RB
   14000b472:	rex.B
   14000b473:	pop    r15
   14000b475:	rex.WRX pop rdi
   14000b477:	rex.WRX
   14000b478:	rex pop rdx
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	ret    
   14000b47d:	add    DWORD PTR [rdi],edi
   14000b47f:	pop    rdi
   14000b480:	rex.RX imul r13d,DWORD PTR [rdi+0x70],0x73406e65
   14000b488:	je     0x14000b4ee
   14000b48a:	rex
   14000b48b:	rex pop rcx
   14000b48d:	push   r8
   14000b48f:	rex.RB
   14000b490:	push   r13
   14000b492:	pop    rdi
   14000b493:	imul   ebp,DWORD PTR [rdi+0x62],0x40406675
   14000b49a:	push   rax
   14000b49b:	rex.RB
   14000b49c:	rex.X
   14000b49d:	rex.R
   14000b49e:	rex.W
   14000b49f:	rex.W
   14000b4a0:	rex pop rdx
   14000b4a2:	add    BYTE PTR [rax],al
   14000b4a4:	pop    rax
   14000b4a5:	add    bh,BYTE PTR [rdi]
   14000b4a7:	pop    rdi
   14000b4a8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b4aa:	movsxd ebp,DWORD PTR [rbx+0x40]
   14000b4ad:	(bad)  
   14000b4ae:	and    al,0x62
   14000b4b0:	(bad)  
   14000b4b1:	jae    0x14000b51c
   14000b4b3:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b4b6:	je     0x14000b52a
   14000b4b8:	gs (bad) 
   14000b4ba:	ins    DWORD PTR es:[rdi],dx
   14000b4bb:	(bad)  
   14000b4bc:	jne    0x14000b524
   14000b4be:	rex
   14000b4bf:	rex.R push rbp
   14000b4c1:	(bad)  
   14000b4c2:	and    al,0x63
   14000b4c4:	push   0x745f7261
   14000b4c9:	jb     0x14000b52c
   14000b4cb:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b4d3:	fs rex
   14000b4d5:	rex
   14000b4d6:	rex jae 0x14000b54d
   14000b4d9:	fs rex
   14000b4db:	rex push rbp
   14000b4dd:	rex.RB
   14000b4de:	rex.B
   14000b4df:	pop    r8
   14000b4e1:	pop    rax
   14000b4e2:	pop    rdx
   14000b4e3:	add    BYTE PTR [rdi+0x555f3f02],bh
   14000b4e9:	outs   dx,BYTE PTR ds:[rsi]
   14000b4ea:	ins    BYTE PTR es:[rdi],dx
   14000b4eb:	outs   dx,DWORD PTR ds:[rsi]
   14000b4ec:	movsxd ebp,DWORD PTR [rbx+0x40]
   14000b4ef:	(bad)  
   14000b4f0:	and    al,0x62
   14000b4f2:	(bad)  
   14000b4f3:	jae    0x14000b55e
   14000b4f5:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b4f8:	je     0x14000b56c
   14000b4fa:	gs (bad) 
   14000b4fc:	ins    DWORD PTR es:[rdi],dx
   14000b4fd:	(bad)  
   14000b4fe:	jne    0x14000b566
   14000b500:	rex
   14000b501:	rex.R push rbp
   14000b503:	(bad)  
   14000b504:	and    al,0x63
   14000b506:	push   0x745f7261
   14000b50b:	jb     0x14000b56e
   14000b50d:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b515:	fs rex
   14000b517:	rex
   14000b518:	rex jae 0x14000b58f
   14000b51b:	fs rex
   14000b51d:	rex push rbp
   14000b51f:	rex.RB
   14000b520:	rex.B
   14000b521:	pop    r8
   14000b523:	pop    rax
   14000b524:	pop    rdx
   14000b525:	add    BYTE PTR [rsp+rax*1],bl
   14000b528:	(bad)  
   14000b529:	imul   ebp,DWORD PTR [rbp+0x62],0x3f406575
   14000b530:	and    al,0x62
   14000b532:	(bad)  
   14000b533:	jae    0x14000b59e
   14000b535:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b538:	je     0x14000b5ac
   14000b53a:	gs (bad) 
   14000b53c:	ins    DWORD PTR es:[rdi],dx
   14000b53d:	(bad)  
   14000b53e:	jne    0x14000b5a6
   14000b540:	rex
   14000b541:	rex.R push rbp
   14000b543:	(bad)  
   14000b544:	and    al,0x63
   14000b546:	push   0x745f7261
   14000b54b:	jb     0x14000b5ae
   14000b54d:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b555:	fs rex
   14000b557:	rex
   14000b558:	rex jae 0x14000b5cf
   14000b55b:	fs rex
   14000b55d:	rex
   14000b55e:	rex.WRB
   14000b55f:	rex.RB
   14000b560:	rex.B
   14000b561:	pop    r8
   14000b563:	rex.B
   14000b564:	rex.RB
   14000b565:	rex.X push rsi
   14000b567:	ins    BYTE PTR es:[rdi],dx
   14000b568:	outs   dx,DWORD PTR ds:[rsi]
   14000b569:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b56c:	xor    al,BYTE PTR gs:[rax+0x40]
   14000b571:	pop    rdx
   14000b572:	add    BYTE PTR [rax],al
   14000b574:	pop    rsp
   14000b575:	add    al,0x3f
   14000b577:	jo     0x14000b5db
   14000b579:	(bad)  
   14000b57a:	movsxd ebp,DWORD PTR [rbx+0x66]
   14000b57d:	(bad)  
   14000b57e:	imul   ebp,DWORD PTR [rax+rax*2+0x3f],0x73616224
   14000b586:	imul   esp,DWORD PTR [rbx+0x5f],0x65727473
   14000b58d:	(bad)  
   14000b58e:	ins    DWORD PTR es:[rdi],dx
   14000b58f:	(bad)  
   14000b590:	jne    0x14000b5f8
   14000b592:	rex
   14000b593:	rex.R push rbp
   14000b595:	(bad)  
   14000b596:	and    al,0x63
   14000b598:	push   0x745f7261
   14000b59d:	jb     0x14000b600
   14000b59f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b5a7:	fs rex
   14000b5a9:	rex
   14000b5aa:	rex jae 0x14000b621
   14000b5ad:	fs rex
   14000b5af:	rex
   14000b5b0:	rex.WRB
   14000b5b1:	rex.RB
   14000b5b2:	rex.B
   14000b5b3:	rex.B
   14000b5b4:	rex.W
   14000b5b5:	rex.W
   14000b5b6:	rex pop rdx
   14000b5b8:	add    BYTE PTR [rax],al
   14000b5ba:	(bad)
   14000b5bd:	jae    0x14000b624
   14000b5bf:	imul   ebp,DWORD PTR gs:[rdi+0x66],0x66
   14000b5c4:	rex (bad) 
   14000b5c6:	and    al,0x62
   14000b5c8:	(bad)  
   14000b5c9:	jae    0x14000b634
   14000b5cb:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b5ce:	je     0x14000b642
   14000b5d0:	gs (bad) 
   14000b5d2:	ins    DWORD PTR es:[rdi],dx
   14000b5d3:	(bad)  
   14000b5d4:	jne    0x14000b63c
   14000b5d6:	rex
   14000b5d7:	rex.R push rbp
   14000b5d9:	(bad)  
   14000b5da:	and    al,0x63
   14000b5dc:	push   0x745f7261
   14000b5e1:	jb     0x14000b644
   14000b5e3:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b5eb:	fs rex
   14000b5ed:	rex
   14000b5ee:	rex jae 0x14000b665
   14000b5f1:	fs rex
   14000b5f3:	rex
   14000b5f4:	rex.WRB
   14000b5f5:	rex.RB
   14000b5f6:	rex.B
   14000b5f7:	rex.B (bad) 
   14000b5f9:	push   r14
   14000b5fb:	(bad)  
   14000b5fc:	and    al,0x66
   14000b5fe:	jo     0x14000b66f
   14000b600:	jae    0x14000b642
   14000b602:	rex.W
   14000b603:	xor    al,BYTE PTR [rax+0x5f]
   14000b607:	rex.WX
   14000b608:	rex.W
   14000b609:	rex.W
   14000b60a:	rex pop rdx
   14000b60c:	add    BYTE PTR [rax],al
   14000b60e:	(bad)  
   14000b60f:	add    al,0x3f
   14000b611:	jae    0x14000b678
   14000b613:	imul   esi,DWORD PTR gs:[rax+0x6f],0x73
   14000b618:	rex (bad) 
   14000b61a:	and    al,0x62
   14000b61c:	(bad)  
   14000b61d:	jae    0x14000b688
   14000b61f:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b622:	je     0x14000b696
   14000b624:	gs (bad) 
   14000b626:	ins    DWORD PTR es:[rdi],dx
   14000b627:	(bad)  
   14000b628:	jne    0x14000b690
   14000b62a:	rex
   14000b62b:	rex.R push rbp
   14000b62d:	(bad)  
   14000b62e:	and    al,0x63
   14000b630:	push   0x745f7261
   14000b635:	jb     0x14000b698
   14000b637:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b63f:	fs rex
   14000b641:	rex
   14000b642:	rex jae 0x14000b6b9
   14000b645:	fs rex
   14000b647:	rex
   14000b648:	rex.WRB
   14000b649:	rex.RB
   14000b64a:	rex.B
   14000b64b:	rex.B (bad) 
   14000b64d:	push   r14
   14000b64f:	(bad)  
   14000b650:	and    al,0x66
   14000b652:	jo     0x14000b6c3
   14000b654:	jae    0x14000b696
   14000b656:	rex.W
   14000b657:	xor    al,BYTE PTR [rax+0x56]
   14000b65b:	xor    esi,DWORD PTR [rdx]
   14000b65d:	rex
   14000b65e:	rex.W
   14000b65f:	rex pop rdx
   14000b661:	add    dh,dl
   14000b663:	add    al,0x3f
   14000b665:	jae    0x14000b6cc
   14000b667:	je     0x14000b6cb
   14000b669:	jne    0x14000b6d1
   14000b66b:	rex (bad) 
   14000b66d:	and    al,0x62
   14000b66f:	(bad)  
   14000b670:	jae    0x14000b6db
   14000b672:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b675:	je     0x14000b6e9
   14000b677:	gs (bad) 
   14000b679:	ins    DWORD PTR es:[rdi],dx
   14000b67a:	(bad)  
   14000b67b:	jne    0x14000b6e3
   14000b67d:	rex
   14000b67e:	rex.R push rbp
   14000b680:	(bad)  
   14000b681:	and    al,0x63
   14000b683:	push   0x745f7261
   14000b688:	jb     0x14000b6eb
   14000b68a:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b692:	fs rex
   14000b694:	rex
   14000b695:	rex jae 0x14000b70c
   14000b698:	fs rex
   14000b69a:	rex
   14000b69b:	rex.WRB
   14000b69c:	rex.RB
   14000b69d:	rex.B
   14000b69e:	push   r8
   14000b6a0:	rex.RB
   14000b6a1:	push   r14
   14000b6a3:	xor    DWORD PTR [rdx],esi
   14000b6a5:	rex push rax
   14000b6a7:	rex.RB
   14000b6a8:	rex.B
   14000b6a9:	rex.R pop rdi
   14000b6ab:	rex.WX
   14000b6ac:	rex pop rdx
   14000b6ae:	add    BYTE PTR [rax],al
   14000b6b0:	test   BYTE PTR [rdi+rdi*1],0x73
   14000b6b4:	push   0x616d776f
   14000b6b9:	outs   dx,BYTE PTR ds:[rsi]
   14000b6ba:	jns    0x14000b71f
   14000b6bc:	rex (bad) 
   14000b6be:	and    al,0x62
   14000b6c0:	(bad)  
   14000b6c1:	jae    0x14000b72c
   14000b6c3:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b6c6:	je     0x14000b73a
   14000b6c8:	gs (bad) 
   14000b6ca:	ins    DWORD PTR es:[rdi],dx
   14000b6cb:	(bad)  
   14000b6cc:	jne    0x14000b734
   14000b6ce:	rex
   14000b6cf:	rex.R push rbp
   14000b6d1:	(bad)  
   14000b6d2:	and    al,0x63
   14000b6d4:	push   0x745f7261
   14000b6d9:	jb     0x14000b73c
   14000b6db:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b6e3:	fs rex
   14000b6e5:	rex
   14000b6e6:	rex jae 0x14000b75d
   14000b6e9:	fs rex
   14000b6eb:	rex
   14000b6ec:	rex.WRB
   14000b6ed:	rex.RB
   14000b6ee:	rex.B
   14000b6ef:	pop    r15
   14000b6f1:	rex.WX pop rax
   14000b6f3:	pop    rdx
   14000b6f4:	add    BYTE PTR [rax],al
   14000b6f6:	and    DWORD PTR [rip+0x6e79733f],eax        # 0x1ae7a2a3b
   14000b6fc:	movsxd eax,DWORD PTR [rax+0x3f]
   14000b6ff:	and    al,0x62
   14000b701:	(bad)  
   14000b702:	jae    0x14000b76d
   14000b704:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b707:	je     0x14000b77b
   14000b709:	gs (bad) 
   14000b70b:	ins    DWORD PTR es:[rdi],dx
   14000b70c:	(bad)  
   14000b70d:	jne    0x14000b775
   14000b70f:	rex
   14000b710:	rex.R push rbp
   14000b712:	(bad)  
   14000b713:	and    al,0x63
   14000b715:	push   0x745f7261
   14000b71a:	jb     0x14000b77d
   14000b71c:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b724:	fs rex
   14000b726:	rex
   14000b727:	rex jae 0x14000b79e
   14000b72a:	fs rex
   14000b72c:	rex
   14000b72d:	rex.WRB
   14000b72e:	rex.RB
   14000b72f:	rex.B
   14000b730:	rex.B
   14000b731:	rex.W pop rax
   14000b733:	pop    rdx
   14000b734:	add    BYTE PTR [rax],al
   14000b736:	rex add eax,0x6c66753f
   14000b73c:	outs   dx,DWORD PTR ds:[rsi]
   14000b73d:	ja     0x14000b77f
   14000b73f:	(bad)  
   14000b740:	and    al,0x62
   14000b742:	(bad)  
   14000b743:	jae    0x14000b7ae
   14000b745:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b748:	je     0x14000b7bc
   14000b74a:	gs (bad) 
   14000b74c:	ins    DWORD PTR es:[rdi],dx
   14000b74d:	(bad)  
   14000b74e:	jne    0x14000b7b6
   14000b750:	rex
   14000b751:	rex.R push rbp
   14000b753:	(bad)  
   14000b754:	and    al,0x63
   14000b756:	push   0x745f7261
   14000b75b:	jb     0x14000b7be
   14000b75d:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b765:	fs rex
   14000b767:	rex
   14000b768:	rex jae 0x14000b7df
   14000b76b:	fs rex
   14000b76d:	rex
   14000b76e:	rex.WRB
   14000b76f:	rex.RB
   14000b770:	rex.B
   14000b771:	rex.B
   14000b772:	rex.W pop rax
   14000b774:	pop    rdx
   14000b775:	add    BYTE PTR [rbp+rax*1+0x3f],al
   14000b779:	jne    0x14000b7e9
   14000b77b:	fs gs jb 0x14000b7e5
   14000b77f:	ins    BYTE PTR es:[rdi],dx
   14000b780:	outs   dx,DWORD PTR ds:[rsi]
   14000b781:	ja     0x14000b7c3
   14000b783:	(bad)  
   14000b784:	and    al,0x62
   14000b786:	(bad)  
   14000b787:	jae    0x14000b7f2
   14000b789:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b78c:	je     0x14000b800
   14000b78e:	gs (bad) 
   14000b790:	ins    DWORD PTR es:[rdi],dx
   14000b791:	(bad)  
   14000b792:	jne    0x14000b7fa
   14000b794:	rex
   14000b795:	rex.R push rbp
   14000b797:	(bad)  
   14000b798:	and    al,0x63
   14000b79a:	push   0x745f7261
   14000b79f:	jb     0x14000b802
   14000b7a1:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b7a9:	fs rex
   14000b7ab:	rex
   14000b7ac:	rex jae 0x14000b823
   14000b7af:	fs rex
   14000b7b1:	rex
   14000b7b2:	rex.WRB
   14000b7b3:	rex.RB
   14000b7b4:	rex.B
   14000b7b5:	rex.B
   14000b7b6:	rex.W pop rax
   14000b7b8:	pop    rdx
   14000b7b9:	add    BYTE PTR [rbx+0x5],ch
   14000b7bc:	(bad)  
   14000b7bd:	js     0x14000b832
   14000b7bf:	addr32 gs je 0x14000b831
   14000b7c3:	rex (bad) 
   14000b7c5:	and    al,0x62
   14000b7c7:	(bad)  
   14000b7c8:	jae    0x14000b833
   14000b7ca:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b7cd:	je     0x14000b841
   14000b7cf:	gs (bad) 
   14000b7d1:	ins    DWORD PTR es:[rdi],dx
   14000b7d2:	(bad)  
   14000b7d3:	jne    0x14000b83b
   14000b7d5:	rex
   14000b7d6:	rex.R push rbp
   14000b7d8:	(bad)  
   14000b7d9:	and    al,0x63
   14000b7db:	push   0x745f7261
   14000b7e0:	jb     0x14000b843
   14000b7e2:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b7ea:	fs rex
   14000b7ec:	rex
   14000b7ed:	rex jae 0x14000b864
   14000b7f0:	fs rex
   14000b7f2:	rex
   14000b7f3:	rex.WRB
   14000b7f4:	rex.RB
   14000b7f5:	rex.B
   14000b7f6:	pop    r15
   14000b7f8:	rex.WX push rax
   14000b7fa:	rex.RB
   14000b7fb:	rex.B
   14000b7fc:	rex.R pop rdi
   14000b7fe:	rex.WX
   14000b7ff:	rex pop rdx
   14000b801:	add    BYTE PTR [rsi+0x5],ch
   14000b804:	(bad)  
   14000b805:	js     0x14000b87a
   14000b807:	jo     0x14000b87e
   14000b809:	je     0x14000b879
   14000b80b:	rex (bad) 
   14000b80d:	and    al,0x62
   14000b80f:	(bad)  
   14000b810:	jae    0x14000b87b
   14000b812:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b815:	je     0x14000b889
   14000b817:	gs (bad) 
   14000b819:	ins    DWORD PTR es:[rdi],dx
   14000b81a:	(bad)  
   14000b81b:	jne    0x14000b883
   14000b81d:	rex
   14000b81e:	rex.R push rbp
   14000b820:	(bad)  
   14000b821:	and    al,0x63
   14000b823:	push   0x745f7261
   14000b828:	jb     0x14000b88b
   14000b82a:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b832:	fs rex
   14000b834:	rex
   14000b835:	rex jae 0x14000b8ac
   14000b838:	fs rex
   14000b83a:	rex
   14000b83b:	rex.WRB
   14000b83c:	rex.RB
   14000b83d:	rex.B
   14000b83e:	pop    r15
   14000b840:	rex.WX push rax
   14000b842:	rex.RB
   14000b843:	rex.X
   14000b844:	rex.R pop rdi
   14000b846:	rex.WX
   14000b847:	rex pop rdx
   14000b849:	add    BYTE PTR [rdi+0x425f3f01],ah
   14000b84f:	rex.B
   14000b850:	rex.R
   14000b851:	rex.WRXB
   14000b852:	rex.RX
   14000b853:	rex.RX
   14000b854:	rex jae 0x14000b8cb
   14000b857:	fs rex
   14000b859:	rex xor ebx,DWORD PTR [rdi+0x4a]
   14000b85d:	rex.X add BYTE PTR [rax],al
   14000b860:	out    dx,eax
   14000b861:	add    edi,DWORD PTR [rdi]
   14000b863:	imul   esp,DWORD PTR [rax+rax*2+0x3f],0x646f6324
   14000b86b:	movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000b86f:	rex
   14000b870:	rex.R
   14000b871:	rex.R
   14000b872:	rex.W
   14000b873:	rex jae 0x14000b8ea
   14000b876:	fs rex
   14000b878:	xor    dl,BYTE PTR [rsi+0x30]
   14000b87c:	ins    BYTE PTR es:[rdi],dx
   14000b87d:	outs   dx,DWORD PTR ds:[rsi]
   14000b87e:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b881:	xor    al,BYTE PTR gs:[rax+0x41]
   14000b886:	add    BYTE PTR [rax],al
   14000b888:	pop    rcx
   14000b889:	add    DWORD PTR [rdi],edi
   14000b88b:	(bad)  
   14000b88c:	pop    rdi
   14000b88d:	(bad)  
   14000b88e:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14000b895:	gs rex jae 0x14000b90d
   14000b899:	fs rex
   14000b89b:	rex
   14000b89c:	ss rex.X
   14000b89e:	add    BYTE PTR [rdx],sil
   14000b8a1:	add    DWORD PTR [rdi],edi
   14000b8a3:	(bad)  
   14000b8a4:	pop    rdi
   14000b8a5:	(bad)  
   14000b8a6:	(bad)  
   14000b8a7:	and    al,0x62
   14000b8a9:	(bad)  
   14000b8aa:	jae    0x14000b915
   14000b8ac:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000b8af:	outs   dx,DWORD PTR ds:[rsi]
   14000b8b0:	jae    0x14000b8f2
   14000b8b2:	rex.R push rbp
   14000b8b4:	(bad)  
   14000b8b5:	and    al,0x63
   14000b8b7:	push   0x745f7261
   14000b8bc:	jb     0x14000b91f
   14000b8be:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b8c6:	fs rex
   14000b8c8:	rex
   14000b8c9:	rex jae 0x14000b940
   14000b8cc:	fs rex
   14000b8ce:	rex
   14000b8cf:	ss rex.X
   14000b8d1:	add    BYTE PTR [rax],al
   14000b8d4:	jrcxz  0x14000b8d8
   14000b8d6:	(bad)  
   14000b8d7:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x67]
   14000b8db:	rex jae 0x14000b952
   14000b8de:	fs rex
   14000b8e0:	rex xor edx,DWORD PTR [rsi+0x3f]
   14000b8e4:	and    al,0x62
   14000b8e6:	(bad)  
   14000b8e7:	jae    0x14000b952
   14000b8e9:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b8ec:	jae    0x14000b962
   14000b8ee:	jb     0x14000b955
   14000b8f0:	(bad)  
   14000b8f1:	ins    DWORD PTR es:[rdi],dx
   14000b8f2:	rex
   14000b8f3:	rex.R push rbp
   14000b8f5:	(bad)  
   14000b8f6:	and    al,0x63
   14000b8f8:	push   0x745f7261
   14000b8fd:	jb     0x14000b960
   14000b8ff:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b907:	fs rex
   14000b909:	rex
   14000b90a:	rex xor DWORD PTR [rax+0x41],eax
   14000b90e:	add    BYTE PTR [rax],al
   14000b910:	rex.WRB push r11
   14000b912:	push   rsi
   14000b913:	rex.XB push r8
   14000b915:	xor    DWORD PTR [rdx],esi
   14000b917:	xor    BYTE PTR [rsi],ch
   14000b919:	fs ins BYTE PTR es:[rdi],dx
   14000b91b:	ins    BYTE PTR es:[rdi],dx
   14000b91c:	add    BYTE PTR [rax],al
   14000b91e:	(bad)  
   14000b91f:	add    al,0x5f
   14000b921:	jo     0x14000b998
   14000b923:	jb     0x14000b98a
   14000b925:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b928:	ins    BYTE PTR es:[rdi],dx
   14000b929:	add    BYTE PTR [rax+0x0],dh
   14000b92c:	(bad)  
   14000b92d:	(bad)  
   14000b92e:	xor    al,BYTE PTR [rax+0x59]
   14000b931:	push   r8
   14000b933:	rex.RB
   14000b934:	pop    r8
   14000b936:	pop    rdi
   14000b937:	rex.WXB
   14000b938:	rex pop rdx
   14000b93a:	add    BYTE PTR [rax],al
   14000b93c:	jb     0x14000b93e
   14000b93e:	(bad)  
   14000b93f:	(bad)  
   14000b940:	xor    eax,DWORD PTR [rax+0x59]
   14000b943:	pop    r8
   14000b945:	push   rax
   14000b946:	rex.RB
   14000b947:	pop    r8
   14000b949:	rex pop rdx
   14000b94b:	add    dl,bl
   14000b94d:	add    bl,BYTE PTR [rdi+0x68]
   14000b950:	jns    0x14000b9c2
   14000b952:	outs   dx,DWORD PTR ds:[rsi]
   14000b953:	je     0x14000b955
   14000b955:	add    BYTE PTR [rdx],ah
   14000b957:	(bad)  
   14000b958:	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
   14000b95d:	add    BYTE PTR gs:[rax],al
   14000b960:	xor    eax,DWORD PTR [rsi]
   14000b962:	data16 data16 ins BYTE PTR es:[rdi],dx
   14000b965:	jne    0x14000b9da
   14000b967:	push   0x6340000
   14000b96c:	data16 addr32 gs je 0x14000b9d4
   14000b971:	add    BYTE PTR [rip+0x65676606],dh        # 0x1a5681f7d
   14000b977:	je     0x14000b9e9
   14000b979:	outs   dx,DWORD PTR ds:[rsi]
   14000b97a:	jae    0x14000b97c
   14000b97c:	rex.WX (bad) 
   14000b97e:	data16 jo 0x14000b9f6
   14000b981:	je     0x14000b9e6
   14000b983:	add    BYTE PTR [rdi+0x6],dl
   14000b986:	data16 jae 0x14000b9ee
   14000b989:	je     0x14000b9fb
   14000b98b:	outs   dx,DWORD PTR ds:[rsi]
   14000b98c:	jae    0x14000b98e
   14000b98e:	lea    eax,[rdx]
   14000b990:	pop    rdi
   14000b991:	data16 jae 0x14000b9f9
   14000b994:	imul   ebp,DWORD PTR gs:[rcx+0x36],0x34
   14000b999:	add    BYTE PTR [rbx+0x6],bl
   14000b99c:	data16 ja 0x14000ba11
   14000b99f:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x7306f500
   14000b9a7:	gs je  0x14000ba20
   14000b9aa:	(bad)  
   14000b9ab:	jne    0x14000ba13
   14000b9ad:	add    BYTE PTR [rbx],bh
   14000b9af:	(bad)  
   14000b9b0:	jne    0x14000ba20
   14000b9b2:	addr32 gs je 0x14000ba19
   14000b9b6:	add    BYTE PTR [rax],al
   14000b9b8:	pop    rsp
   14000b9b9:	add    ebx,DWORD PTR [rdi+0x6c]
   14000b9bc:	outs   dx,DWORD PTR ds:[rsi]
   14000b9bd:	movsxd ebp,DWORD PTR [rbx+0x5f]
   14000b9c0:	imul   bp,WORD PTR [rbp+riz*2+0x0],0xc800
   14000b9c7:	add    al,0x5f
   14000b9c9:	jne    0x14000ba39
   14000b9cb:	ins    BYTE PTR es:[rdi],dx
   14000b9cc:	outs   dx,DWORD PTR ds:[rsi]
   14000b9cd:	movsxd ebp,DWORD PTR [rbx+0x5f]
   14000b9d0:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x7500
   14000b9d7:	(bad)  
   14000b9d8:	ja     0x14000ba3d
   14000b9da:	jae    0x14000ba50
   14000b9dc:	outs   dx,DWORD PTR ds:[rsi]
   14000b9dd:	ins    DWORD PTR es:[rdi],dx
   14000b9de:	(bad)
   14000b9e3:	add    BYTE PTR [rsi+0x6d656d06],dh
   14000b9e9:	movsxd esi,DWORD PTR [rax+0x79]
   14000b9ec:	pop    rdi
   14000b9ed:	jae    0x14000b9ef
   14000b9ef:	add    BYTE PTR [rdi+0x6d656d06],dh
   14000b9f5:	ins    DWORD PTR es:[rdi],dx
   14000b9f6:	outs   dx,DWORD PTR ds:[rsi]
   14000b9f7:	jbe    0x14000ba5e
   14000b9f9:	add    BYTE PTR [rip+0x303f3f00],bl        # 0x1703ff8ff
   14000b9ff:	(bad)
   14000ba04:	(bad)  
   14000ba05:	jae    0x14000ba7b
   14000ba07:	rex jae 0x14000ba7e
   14000ba0a:	fs rex
   14000ba0c:	rex push rcx
   14000ba0e:	rex.RB
   14000ba0f:	rex.B
   14000ba10:	rex.B
   14000ba11:	rex push rax
   14000ba13:	rex.RB
   14000ba14:	rex.X
   14000ba15:	rex.R
   14000ba16:	rex pop rdx
   14000ba18:	add    BYTE PTR [rax],al
   14000ba1a:	sbb    al,0x0
   14000ba1c:	(bad)  
   14000ba1d:	(bad)  
   14000ba1e:	xor    BYTE PTR [rdx+0x61],ah
   14000ba21:	fs pop rdi
   14000ba23:	movsxd esp,DWORD PTR [rcx+0x73]
   14000ba26:	je     0x14000ba68
   14000ba28:	jae    0x14000ba9e
   14000ba2a:	fs rex
   14000ba2c:	rex push rcx
   14000ba2e:	rex.RB
   14000ba2f:	rex.B
   14000ba30:	rex.B
   14000ba31:	rex
   14000ba32:	rex.B
   14000ba33:	rex.RB
   14000ba34:	rex.X push rsi
   14000ba36:	xor    BYTE PTR [rcx],dh
   14000ba38:	rex
   14000ba39:	rex pop rdx
   14000ba3b:	add    BYTE PTR [rax+rax*1],ch
   14000ba3e:	(bad)  
   14000ba3f:	(bad)  
   14000ba40:	xor    BYTE PTR [rbp+0x78],ah
   14000ba43:	movsxd esp,DWORD PTR [rbp+0x70]
   14000ba46:	je     0x14000bab1
   14000ba48:	outs   dx,DWORD PTR ds:[rsi]
   14000ba49:	outs   dx,BYTE PTR ds:[rsi]
   14000ba4a:	rex jae 0x14000bac1
   14000ba4d:	fs rex
   14000ba4f:	rex push rcx
   14000ba51:	rex.RB
   14000ba52:	rex.B
   14000ba53:	rex.B
   14000ba54:	rex
   14000ba55:	rex.B
   14000ba56:	rex.RB
   14000ba57:	rex.X push rsi
   14000ba59:	xor    BYTE PTR [rcx],dh
   14000ba5b:	rex
   14000ba5c:	rex pop rdx
   14000ba5e:	add    BYTE PTR [rax],al
   14000ba60:	data16 add BYTE PTR [rdi],bh
   14000ba63:	(bad)  
   14000ba64:	xor    DWORD PTR [rdx+0x61],esp
   14000ba67:	fs pop rdi
   14000ba69:	movsxd esp,DWORD PTR [rcx+0x73]
   14000ba6c:	je     0x14000baae
   14000ba6e:	jae    0x14000bae4
   14000ba70:	fs rex
   14000ba72:	rex push rbp
   14000ba74:	rex.RB
   14000ba75:	rex.B
   14000ba76:	rex.B
   14000ba77:	rex pop rax
   14000ba79:	pop    rdx
   14000ba7a:	add    BYTE PTR [rax],al
   14000ba7c:	add    DWORD PTR [r15+0x43],r11d
   14000ba80:	js     0x14000bafa
   14000ba82:	push   rsp
   14000ba83:	push   0x45776f72
   14000ba88:	js     0x14000baed
   14000ba8a:	gs jo  0x14000bb01
   14000ba8d:	imul   ebp,DWORD PTR [rdi+0x6e],0x1620000
   14000ba94:	pop    rdi
   14000ba95:	pop    rdi
   14000ba96:	rex.XB js 0x14000bb11
   14000ba99:	rex.RX jb 0x14000bafd
   14000ba9c:	ins    DWORD PTR es:[rdi],dx
   14000ba9d:	gs rex.W (bad) 
   14000baa0:	outs   dx,BYTE PTR ds:[rsi]
   14000baa1:	fs ins BYTE PTR es:[rdi],dx
   14000baa3:	gs jb  0x14000bad9
   14000baa6:	add    BYTE PTR [rax],al
   14000baa8:	mov    ch,0x6
   14000baaa:	ins    DWORD PTR es:[rdi],dx
   14000baab:	gs ins DWORD PTR es:[rdi],dx
   14000baad:	movsxd esi,DWORD PTR [rax+0x79]
   14000bab0:	add    BYTE PTR [rax],al
   14000bab2:	mov    ecx,0x6d656d06
   14000bab7:	jae    0x14000bb1e
   14000bab9:	je     0x14000babb
   14000babb:	add    BYTE PTR [rbp+0x53],cl
   14000babe:	push   rsi
   14000babf:	rex.XB push r10
   14000bac1:	xor    DWORD PTR [rdx],esi
   14000bac3:	xor    BYTE PTR [rsi],ch
   14000bac5:	fs ins BYTE PTR es:[rdi],dx
   14000bac7:	ins    BYTE PTR es:[rdi],dx
   14000bac8:	add    BYTE PTR [rax],al
   14000baca:	pop    rbx
   14000bacb:	add    ebx,DWORD PTR [rdi+0x6c]
   14000bace:	outs   dx,DWORD PTR ds:[rsi]
   14000bacf:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000bad2:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   14000bad9:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000badc:	or     DWORD PTR [rdx],eax
   14000bade:	pop    rdi
   14000badf:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000bae2:	ins    BYTE PTR es:[rdi],dx
   14000bae3:	outs   dx,DWORD PTR ds:[rsi]
   14000bae4:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000bae7:	jb     0x14000bb5d
   14000bae9:	add    BYTE PTR [rdi+0x645f5f01],bl
   14000baef:	ins    BYTE PTR es:[rdi],dx
   14000baf0:	ins    BYTE PTR es:[rdi],dx
   14000baf1:	outs   dx,DWORD PTR ds:[rsi]
   14000baf2:	outs   dx,BYTE PTR ds:[rsi]
   14000baf3:	gs js  0x14000bb5f
   14000baf6:	je     0x14000baf8
   14000baf8:	pop    rsp
   14000baf9:	add    DWORD PTR [rdi+0x5f],ebx
   14000bafc:	rex.XB pop r15
   14000bafe:	jae    0x14000bb70
   14000bb00:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000bb04:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000bb0b:	ins    BYTE PTR es:[rdi],dx
   14000bb0c:	gs jb  0x14000bb0f
   14000bb0f:	add    BYTE PTR [rdx],al
   14000bb11:	add    al,0x5f
   14000bb13:	outs   dx,DWORD PTR ds:[rsi]
   14000bb14:	outs   dx,BYTE PTR ds:[rsi]
   14000bb15:	gs js  0x14000bb81
   14000bb18:	je     0x14000bb1a
   14000bb1a:	pop    rax
   14000bb1b:	add    DWORD PTR [rdi+0x58],ebx
   14000bb1e:	movsxd esi,DWORD PTR [rax+0x74]
   14000bb21:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x18d0072
   14000bb2a:	pop    rdi
   14000bb2b:	pop    rdi
   14000bb2c:	movsxd esi,DWORD PTR [rdx+0x74]
   14000bb2f:	rex.RXB
   14000bb30:	gs je  0x14000bb86
   14000bb33:	push   0x6957776f
   14000bb38:	outs   dx,BYTE PTR ds:[rsi]
   14000bb39:	outs   dx,DWORD PTR fs:[rsi]
   14000bb3b:	ja     0x14000bb8a
   14000bb3d:	outs   dx,DWORD PTR ds:[rsi]
   14000bb3e:	fs add BYTE PTR gs:[rax],al
   14000bb42:	repnz add DWORD PTR [rdi+0x61],ebx
   14000bb46:	ins    DWORD PTR es:[rdi],dx
   14000bb47:	jae    0x14000bbb0
   14000bb49:	pop    rdi
   14000bb4a:	gs js  0x14000bbb6
   14000bb4d:	je     0x14000bb4f
   14000bb4f:	add    BYTE PTR [rdi+0x675f5f01],ah
   14000bb55:	gs je  0x14000bbc5
   14000bb58:	(bad)  
   14000bb59:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000bb60:	(bad)  
   14000bb61:	add    DWORD PTR [rdi+0x5f],ebx
   14000bb64:	jae    0x14000bbcb
   14000bb66:	je     0x14000bbc7
   14000bb68:	(bad)  
   14000bb69:	jo     0x14000bbdb
   14000bb6b:	pop    rdi
   14000bb6c:	je     0x14000bbe7
   14000bb6e:	jo     0x14000bbd5
   14000bb70:	add    BYTE PTR [rax],al
   14000bb72:	sbb    BYTE PTR [rsi],al
   14000bb74:	gs js  0x14000bbe0
   14000bb77:	je     0x14000bb79
   14000bb79:	add    BYTE PTR [rax+0x2],bl
   14000bb7c:	pop    rdi
   14000bb7d:	gs js  0x14000bbe9
   14000bb80:	je     0x14000bb82
   14000bb82:	or     al,BYTE PTR [rdx]
   14000bb84:	pop    rdi
   14000bb85:	movsxd esp,DWORD PTR [rbp+0x78]
   14000bb88:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0303
   14000bb90:	jae    0x14000bbff
   14000bb92:	(bad)
   14000bb97:	add    BYTE PTR fs:[rax],al
   14000bb9a:	sbb    al,BYTE PTR [rdx]
   14000bb9c:	pop    rdi
   14000bb9d:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000bba0:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14000bba6:	gs (bad) 
   14000bba8:	fs ins BYTE PTR es:[rdi],dx
   14000bbaa:	outs   dx,DWORD PTR ds:[rsi]
   14000bbab:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000bbae:	gs add al,dl
   14000bbb1:	add    DWORD PTR [rdi+0x5f],ebx
   14000bbb4:	jae    0x14000bc1b
   14000bbb6:	je     0x14000bc2d
   14000bbb8:	jae    0x14000bc1f
   14000bbba:	jb     0x14000bc29
   14000bbbc:	(bad)  
   14000bbbd:	je     0x14000bc27
   14000bbbf:	gs jb  0x14000bc34
   14000bbc2:	add    BYTE PTR [rax],al
   14000bbc4:	loop   0x14000bbc8
   14000bbc6:	pop    rdi
   14000bbc7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000bbce:	ins    DWORD PTR es:[rdi],dx
   14000bbcf:	pop    rdi
   14000bbd0:	gs add cl,ah
   14000bbd3:	add    bl,BYTE PTR [rdi+0x69]
   14000bbd6:	outs   dx,BYTE PTR ds:[rsi]
   14000bbd7:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xe9006d72
   14000bbdf:	add    DWORD PTR [rdi+0x61],ebx
   14000bbe2:	movsxd ebp,DWORD PTR [rbp+0x64]
   14000bbe5:	ins    BYTE PTR es:[rdi],dx
   14000bbe6:	outs   dx,BYTE PTR ds:[rsi]
   14000bbe7:	add    BYTE PTR [rax+0x2],bh
   14000bbea:	pop    rdi
   14000bbeb:	ins    WORD PTR es:[rdi],dx
   14000bbed:	outs   dx,DWORD PTR ds:[rsi]
   14000bbee:	fs add BYTE PTR gs:[rax],al
   14000bbf2:	sbb    DWORD PTR [rdx],eax
   14000bbf4:	pop    rdi
   14000bbf5:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000bbf8:	ins    DWORD PTR es:[rdi],dx
   14000bbf9:	outs   dx,DWORD PTR ds:[rsi]
   14000bbfa:	fs add BYTE PTR gs:[rax],al
   14000bbfe:	xor    eax,DWORD PTR [rcx]
   14000bc00:	(bad)  
   14000bc01:	je     0x14000bc68
   14000bc03:	jb     0x14000bc72
   14000bc05:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000bc0c:	pop    rcx
   14000bc0d:	pop    r8
   14000bc0f:	pop    rax
   14000bc10:	pop    rdx
   14000bc11:	add    BYTE PTR [rbx],bl
   14000bc13:	add    DWORD PTR [rdi],edi
   14000bc15:	pop    rdi
   14000bc16:	je     0x14000bc91
   14000bc18:	jo     0x14000bc7f
   14000bc1a:	pop    rdi
   14000bc1b:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14000bc22:	outs   dx,DWORD PTR ds:[rsi]
   14000bc23:	jb     0x14000bc84
   14000bc25:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000bc2c:	ins    BYTE PTR es:[rdi],dx
   14000bc2d:	pop    rdi
   14000bc2e:	ins    DWORD PTR es:[rdi],dx
   14000bc2f:	gs je  0x14000bc9a
   14000bc32:	outs   dx,DWORD PTR ds:[rsi]
   14000bc33:	fs rex je 0x14000bcb0
   14000bc37:	jo     0x14000bc9e
   14000bc39:	pop    rdi
   14000bc3a:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   14000bc41:	rex.RB
   14000bc42:	rex.B
   14000bc43:	pop    r8
   14000bc45:	pop    rax
   14000bc46:	pop    rdx
   14000bc47:	add    BYTE PTR [rcx+0x635f5f01],bl
   14000bc4d:	jb     0x14000bcc3
   14000bc4f:	push   rbx
   14000bc50:	gs je  0x14000bca8
   14000bc53:	outs   dx,BYTE PTR ds:[rsi]
   14000bc54:	push   0x6c646e61
   14000bc59:	gs fs rex.RB js 0x14000bcc1
   14000bc5e:	gs jo  0x14000bcd5
   14000bc61:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000bc68:	gs jb  0x14000bc6b
   14000bc6b:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a36f0172
   14000bc71:	outs   dx,DWORD PTR ds:[rsi]
   14000bc72:	fs gs push rax
   14000bc75:	outs   dx,DWORD PTR ds:[rsi]
   14000bc76:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   14000bc7d:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000bc81:	outs   dx,DWORD PTR ds:[rsi]
   14000bc82:	fs gs push rax
   14000bc85:	outs   dx,DWORD PTR ds:[rsi]
   14000bc86:	imul   ebp,DWORD PTR [rsi+0x74],0x30007265
   14000bc8d:	add    al,0x51
   14000bc8f:	jne    0x14000bcf6
   14000bc91:	jb     0x14000bd0c
   14000bc93:	push   rax
   14000bc94:	gs jb  0x14000bcfd
   14000bc97:	outs   dx,DWORD PTR ds:[rsi]
   14000bc98:	jb     0x14000bd07
   14000bc9a:	(bad)  
   14000bc9b:	outs   dx,BYTE PTR ds:[rsi]
   14000bc9c:	movsxd esp,DWORD PTR [rbp+0x43]
   14000bc9f:	outs   dx,DWORD PTR ds:[rsi]
   14000bca0:	jne    0x14000bd10
   14000bca2:	je     0x14000bd09
   14000bca4:	jb     0x14000bca6
   14000bca6:	adc    BYTE PTR [rdx],al
   14000bca8:	rex.RXB
   14000bca9:	gs je  0x14000bcef
   14000bcac:	jne    0x14000bd20
   14000bcae:	jb     0x14000bd15
   14000bcb0:	outs   dx,BYTE PTR ds:[rsi]
   14000bcb1:	je     0x14000bd03
   14000bcb3:	jb     0x14000bd24
   14000bcb5:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bcb8:	jae    0x14000bd03
   14000bcba:	add    BYTE PTR fs:[rdx+rax*1],dl
   14000bcbe:	rex.RXB
   14000bcbf:	gs je  0x14000bd05
   14000bcc2:	jne    0x14000bd36
   14000bcc4:	jb     0x14000bd2b
   14000bcc6:	outs   dx,BYTE PTR ds:[rsi]
   14000bcc7:	je     0x14000bd1d
   14000bcc9:	push   0x64616572
   14000bcce:	rex.WB
   14000bccf:	add    BYTE PTR fs:[rax],al
   14000bcd2:	fld    QWORD PTR [rdx]
   14000bcd4:	rex.RXB
   14000bcd5:	gs je  0x14000bd2b
   14000bcd8:	jns    0x14000bd4d
   14000bcda:	je     0x14000bd41
   14000bcdc:	ins    DWORD PTR es:[rdi],dx
   14000bcdd:	push   rsp
   14000bcde:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000bce5:	ins    BYTE PTR es:[rdi],dx
   14000bce6:	gs push rsp
   14000bce8:	.byte 0x69
   14000bce9:	ins    DWORD PTR es:[rdi],dx
   14000bcea:	gs
	...

Disassembly of section .data:

000000014000c000 <.data>:
   14000c000:	push   0x1400088
   14000c005:	add    BYTE PTR [rax],al
   14000c007:	add    BYTE PTR [rax+0x1400088],bh
   14000c00d:	add    BYTE PTR [rax],al
   14000c00f:	add    BYTE PTR [rax],bl
   14000c011:	mov    DWORD PTR [rax],eax
   14000c013:	rex add DWORD PTR [rax],eax
	...
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	sldt   WORD PTR [rax]
	...
   14000c04f:	add    BYTE PTR [rdi],cl
   14000c051:	add    BYTE PTR [rax],al
   14000c053:	add    BYTE PTR [rax],al
   14000c055:	add    BYTE PTR [rax],al
   14000c057:	add    BYTE PTR [rax],ah
   14000c059:	mov    eax,DWORD PTR [rax]
   14000c05b:	rex add DWORD PTR [rax],eax
   14000c05e:	add    BYTE PTR [rax],al
   14000c060:	xor    BYTE PTR [rbx+0x14000],cl
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	rex mov eax,DWORD PTR [rax]
   14000c06b:	rex add DWORD PTR [rax],eax
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	jne    0x14000c00a
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	add    DWORD PTR [rax],eax
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	(bad)  
   14000c079:	(bad)  
   14000c07a:	(bad)  
   14000c07b:	(bad)  
   14000c07c:	(bad)  
   14000c07d:	(bad)  
   14000c07e:	(bad)  
   14000c07f:	push   QWORD PTR [rdx]
   14000c081:	movabs ds:0x5dcd00002b992ddf,al
   14000c08a:	and    dl,dl
   14000c08c:	data16 (bad) 
   14000c08e:	(bad)  
   14000c08f:	(bad)  
   14000c090:	js     0x14000c01d
   14000c092:	add    BYTE PTR [rax+0x1],al
	...
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rsi],ch
   14000c0a1:	(bad)  
   14000c0a2:	push   r14
   14000c0a4:	gs js  0x14000c10a
   14000c0a7:	gs jo  0x14000c11e
   14000c0aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000c0b1:	rex
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b5:	add    BYTE PTR [rax],al
   14000c0b7:	add    BYTE PTR [rax-0x75],bh
   14000c0ba:	add    BYTE PTR [rax+0x1],al
	...
   14000c0c5:	add    BYTE PTR [rax],al
   14000c0c7:	add    BYTE PTR [rsi],ch
   14000c0c9:	(bad)  
   14000c0ca:	push   r14
   14000c0cc:	(bad)
   14000c0d1:	(bad)  
   14000c0d2:	jae    0x14000c148
   14000c0d4:	rex jae 0x14000c14b
   14000c0d7:	fs rex
   14000c0d9:	add    BYTE PTR [rax],al
   14000c0dc:	add    BYTE PTR [rax],al
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	js     0x14000c06d
   14000c0e2:	add    BYTE PTR [rax+0x1],al
	...
   14000c0ed:	add    BYTE PTR [rax],al
   14000c0ef:	add    BYTE PTR [rsi],ch
   14000c0f1:	(bad)  
   14000c0f2:	push   r14
   14000c0f4:	(bad)  
   14000c0f5:	and    al,0x62
   14000c0f7:	(bad)  
   14000c0f8:	jae    0x14000c163
   14000c0fa:	movsxd ebx,DWORD PTR [rdi+0x66]
   14000c0fd:	imul   ebp,DWORD PTR [rbp+riz*2+0x62],0x44406675
   14000c105:	push   rbp
   14000c106:	(bad)  
   14000c107:	and    al,0x63
   14000c109:	push   0x745f7261
   14000c10e:	jb     0x14000c171
   14000c110:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000c118:	fs rex
   14000c11a:	rex
   14000c11b:	rex jae 0x14000c192
   14000c11e:	fs rex
   14000c120:	add    BYTE PTR [rax],al
	...
   14000c12f:	add    BYTE PTR [rax-0x75],bh
   14000c132:	add    BYTE PTR [rax+0x1],al
	...
   14000c13d:	add    BYTE PTR [rax],al
   14000c13f:	add    BYTE PTR [rsi],ch
   14000c141:	(bad)  
   14000c142:	push   r14
   14000c144:	(bad)  
   14000c145:	and    al,0x62
   14000c147:	(bad)  
   14000c148:	jae    0x14000c1b3
   14000c14a:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000c14d:	je     0x14000c1c1
   14000c14f:	gs (bad) 
   14000c151:	ins    DWORD PTR es:[rdi],dx
   14000c152:	(bad)  
   14000c153:	jne    0x14000c1bb
   14000c155:	rex
   14000c156:	rex.R push rbp
   14000c158:	(bad)  
   14000c159:	and    al,0x63
   14000c15b:	push   0x745f7261
   14000c160:	jb     0x14000c1c3
   14000c162:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000c16a:	fs rex
   14000c16c:	rex
   14000c16d:	rex jae 0x14000c1e4
   14000c170:	fs rex
   14000c172:	add    BYTE PTR [rax],al
	...
   14000c17d:	add    BYTE PTR [rax],al
   14000c17f:	add    BYTE PTR [rax-0x75],bh
   14000c182:	add    BYTE PTR [rax+0x1],al
	...
   14000c18d:	add    BYTE PTR [rax],al
   14000c18f:	add    BYTE PTR [rsi],ch
   14000c191:	(bad)  
   14000c192:	push   r14
   14000c194:	(bad)  
   14000c195:	and    al,0x62
   14000c197:	(bad)  
   14000c198:	jae    0x14000c203
   14000c19a:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000c19d:	data16 jae 0x14000c214
   14000c1a0:	jb     0x14000c207
   14000c1a2:	(bad)  
   14000c1a3:	ins    DWORD PTR es:[rdi],dx
   14000c1a4:	rex
   14000c1a5:	rex.R push rbp
   14000c1a7:	(bad)  
   14000c1a8:	and    al,0x63
   14000c1aa:	push   0x745f7261
   14000c1af:	jb     0x14000c212
   14000c1b1:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000c1b9:	fs rex
   14000c1bb:	rex
   14000c1bc:	rex jae 0x14000c233
   14000c1bf:	fs rex
   14000c1c1:	add    BYTE PTR [rax],al
	...
   14000c1d0:	js     0x14000c15d
   14000c1d2:	add    BYTE PTR [rax+0x1],al
	...
   14000c1dd:	add    BYTE PTR [rax],al
   14000c1df:	add    BYTE PTR [rsi],ch
   14000c1e1:	(bad)  
   14000c1e2:	push   r14
   14000c1e4:	(bad)  
   14000c1e5:	and    al,0x62
   14000c1e7:	(bad)  
   14000c1e8:	jae    0x14000c253
   14000c1ea:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000c1ed:	jae    0x14000c263
   14000c1ef:	jb     0x14000c256
   14000c1f1:	(bad)  
   14000c1f2:	ins    DWORD PTR es:[rdi],dx
   14000c1f3:	rex
   14000c1f4:	rex.R push rbp
   14000c1f6:	(bad)  
   14000c1f7:	and    al,0x63
   14000c1f9:	push   0x745f7261
   14000c1fe:	jb     0x14000c261
   14000c200:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000c208:	fs rex
   14000c20a:	rex
   14000c20b:	rex jae 0x14000c282
   14000c20e:	fs rex
   14000c210:	add    BYTE PTR [rax],al
   14000c213:	add    BYTE PTR [rax],al
   14000c215:	add    BYTE PTR [rax],al
   14000c217:	add    BYTE PTR [rax-0x75],bh
   14000c21a:	add    BYTE PTR [rax+0x1],al
	...
   14000c225:	add    BYTE PTR [rax],al
   14000c227:	add    BYTE PTR [rsi],ch
   14000c229:	(bad)  
   14000c22a:	push   r14
   14000c22c:	(bad)  
   14000c22d:	and    al,0x62
   14000c22f:	(bad)  
   14000c230:	jae    0x14000c29b
   14000c232:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000c235:	outs   dx,DWORD PTR ds:[rsi]
   14000c236:	jae    0x14000c278
   14000c238:	rex.R push rbp
   14000c23a:	(bad)  
   14000c23b:	and    al,0x63
   14000c23d:	push   0x745f7261
   14000c242:	jb     0x14000c2a5
   14000c244:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000c24c:	fs rex
   14000c24e:	rex
   14000c24f:	rex jae 0x14000c2c6
   14000c252:	fs rex
   14000c254:	add    BYTE PTR [rax],al
   14000c257:	add    BYTE PTR [rax-0x75],bh
   14000c25a:	add    BYTE PTR [rax+0x1],al
	...
   14000c265:	add    BYTE PTR [rax],al
   14000c267:	add    BYTE PTR [rsi],ch
   14000c269:	(bad)  
   14000c26a:	push   r14
   14000c26c:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14000c273:	gs rex jae 0x14000c2eb
   14000c277:	fs rex
   14000c279:	add    BYTE PTR [rax],al
   14000c27c:	add    BYTE PTR [rax],al
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	js     0x14000c20d
   14000c282:	add    BYTE PTR [rax+0x1],al
	...
   14000c28d:	add    BYTE PTR [rax],al
   14000c28f:	add    BYTE PTR [rsi],ch
   14000c291:	(bad)  
   14000c292:	push   r14
   14000c294:	(bad)  
   14000c295:	and    al,0x5f
   14000c297:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000c299:	jae    0x14000c2fd
   14000c29b:	rex
   14000c29c:	rex.W
   14000c29d:	rex jae 0x14000c314
   14000c2a0:	fs rex
   14000c2a2:	add    BYTE PTR [rax],al
	...
   14000c2ad:	add    BYTE PTR [rax],al
   14000c2af:	add    BYTE PTR [rax-0x75],bh
   14000c2b2:	add    BYTE PTR [rax+0x1],al
	...
   14000c2bd:	add    BYTE PTR [rax],al
   14000c2bf:	add    BYTE PTR [rsi],ch
   14000c2c1:	(bad)  
   14000c2c2:	push   r14
   14000c2c4:	(bad)  
   14000c2c5:	and    al,0x62
   14000c2c7:	(bad)  
   14000c2c8:	jae    0x14000c333
   14000c2ca:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000c2cd:	data16 jae 0x14000c344
   14000c2d0:	jb     0x14000c337
   14000c2d2:	(bad)  
   14000c2d3:	ins    DWORD PTR es:[rdi],dx
   14000c2d4:	rex
   14000c2d5:	rex.R push rbp
   14000c2d7:	(bad)  
   14000c2d8:	and    al,0x63
   14000c2da:	push   0x745f7261
   14000c2df:	jb     0x14000c342
   14000c2e1:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000c2e9:	fs rex
   14000c2eb:	rex
   14000c2ec:	rex jae 0x14000c363
   14000c2ef:	fs rex
   14000c2f1:	add    BYTE PTR [rax],al
	...
   14000c300:	js     0x14000c28d
   14000c302:	add    BYTE PTR [rax+0x1],al
	...
   14000c30d:	add    BYTE PTR [rax],al
   14000c30f:	add    BYTE PTR [rsi],ch
   14000c311:	(bad)  
   14000c312:	push   r14
   14000c314:	(bad)  
   14000c315:	and    al,0x62
   14000c317:	(bad)  
   14000c318:	jae    0x14000c383
   14000c31a:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000c31d:	jae    0x14000c393
   14000c31f:	jb     0x14000c386
   14000c321:	(bad)  
   14000c322:	ins    DWORD PTR es:[rdi],dx
   14000c323:	rex
   14000c324:	rex.R push rbp
   14000c326:	(bad)  
   14000c327:	and    al,0x63
   14000c329:	push   0x745f7261
   14000c32e:	jb     0x14000c391
   14000c330:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000c338:	fs rex
   14000c33a:	rex
   14000c33b:	rex jae 0x14000c3b2
   14000c33e:	fs rex
   14000c340:	add    BYTE PTR [rax],al
   14000c343:	add    BYTE PTR [rax],al
   14000c345:	add    BYTE PTR [rax],al
   14000c347:	add    BYTE PTR [rax-0x75],bh
   14000c34a:	add    BYTE PTR [rax+0x1],al
	...
   14000c355:	add    BYTE PTR [rax],al
   14000c357:	add    BYTE PTR [rsi],ch
   14000c359:	(bad)  
   14000c35a:	push   r14
   14000c35c:	gs jb  0x14000c3d1
   14000c35f:	outs   dx,DWORD PTR ds:[rsi]
   14000c360:	jb     0x14000c3c1
   14000c362:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c365:	outs   dx,DWORD PTR gs:[esi]
   14000c368:	jb     0x14000c3e3
   14000c36a:	rex jae 0x14000c3e1
   14000c36d:	fs rex
   14000c36f:	add    BYTE PTR [rax],al
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	add    BYTE PTR [rax],al
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	js     0x14000c305
   14000c37a:	add    BYTE PTR [rax+0x1],al
	...
   14000c385:	add    BYTE PTR [rax],al
   14000c387:	add    BYTE PTR [rsi],ch
   14000c389:	(bad)  
   14000c38a:	push   r14
   14000c38c:	pop    rdi
   14000c38d:	rex.RXB
   14000c38e:	outs   dx,BYTE PTR gs:[rsi]
   14000c390:	gs jb  0x14000c3fc
   14000c393:	movsxd ebx,DWORD PTR [rdi+0x65]
   14000c396:	jb     0x14000c40a
   14000c398:	outs   dx,DWORD PTR ds:[rsi]
   14000c399:	jb     0x14000c3fa
   14000c39b:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c39e:	outs   dx,DWORD PTR gs:[esi]
   14000c3a1:	jb     0x14000c41c
   14000c3a3:	rex jae 0x14000c41a
   14000c3a6:	fs rex
   14000c3a8:	add    BYTE PTR [rax],al
   14000c3ab:	add    BYTE PTR [rax],al
   14000c3ad:	add    BYTE PTR [rax],al
   14000c3af:	add    BYTE PTR [rax-0x75],bh
   14000c3b2:	add    BYTE PTR [rax+0x1],al
	...
   14000c3bd:	add    BYTE PTR [rax],al
   14000c3bf:	add    BYTE PTR [rsi],ch
   14000c3c1:	(bad)  
   14000c3c2:	push   r14
   14000c3c4:	pop    rdi
   14000c3c5:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000c3c7:	jae    0x14000c43d
   14000c3c9:	jb     0x14000c430
   14000c3cb:	(bad)  
   14000c3cc:	ins    DWORD PTR es:[rdi],dx
   14000c3cd:	pop    rdi
   14000c3ce:	gs jb  0x14000c443
   14000c3d1:	outs   dx,DWORD PTR ds:[rsi]
   14000c3d2:	jb     0x14000c433
   14000c3d4:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c3d7:	outs   dx,DWORD PTR gs:[esi]
   14000c3da:	jb     0x14000c455
   14000c3dc:	rex jae 0x14000c453
   14000c3df:	fs rex
   14000c3e1:	add    BYTE PTR [rax],al
   14000c3e4:	add    BYTE PTR [rax],al
   14000c3e6:	add    BYTE PTR [rax],al
   14000c3e8:	js     0x14000c375
   14000c3ea:	add    BYTE PTR [rax+0x1],al
	...
   14000c3f5:	add    BYTE PTR [rax],al
   14000c3f7:	add    BYTE PTR [rsi],ch
   14000c3f9:	(bad)  
   14000c3fa:	push   r14
   14000c3fc:	pop    rdi
   14000c3fd:	push   rbx
   14000c3fe:	jns    0x14000c473
   14000c400:	je     0x14000c467
   14000c402:	ins    DWORD PTR es:[rdi],dx
   14000c403:	pop    rdi
   14000c404:	gs jb  0x14000c479
   14000c407:	outs   dx,DWORD PTR ds:[rsi]
   14000c408:	jb     0x14000c469
   14000c40a:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c40d:	outs   dx,DWORD PTR gs:[esi]
   14000c410:	jb     0x14000c48b
   14000c412:	rex jae 0x14000c489
   14000c415:	fs rex
   14000c417:	add    BYTE PTR [rax],al
   14000c41a:	add    BYTE PTR [rax],al
   14000c41c:	add    BYTE PTR [rax],al
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	js     0x14000c3ad
   14000c422:	add    BYTE PTR [rax+0x1],al
	...
   14000c42d:	add    BYTE PTR [rax],al
   14000c42f:	add    BYTE PTR [rsi],ch
   14000c431:	(bad)  
   14000c432:	push   r13
   14000c434:	rex.WRX jne 0x14000c4a3
   14000c437:	ins    BYTE PTR es:[rdi],dx
   14000c438:	push   rbx
   14000c439:	je     0x14000c4ad
   14000c43b:	gs (bad) 
   14000c43d:	ins    DWORD PTR es:[rdi],dx
   14000c43e:	rex.X jne 0x14000c4a7
   14000c441:	rex (bad) 
   14000c443:	xor    BYTE PTR [r8+0x34],dil
   14000c447:	xor    al,0x34
   14000c449:	xor    DWORD PTR [rax],esi
   14000c44b:	gs xor eax,0x404035
   14000c451:	add    BYTE PTR [rax],al
   14000c453:	add    BYTE PTR [rax],al
   14000c455:	add    BYTE PTR [rax],al
   14000c457:	add    BYTE PTR [rax-0x75],bh
   14000c45a:	add    BYTE PTR [rax+0x1],al
	...
   14000c465:	add    BYTE PTR [rax],al
   14000c467:	add    BYTE PTR [rsi],ch
   14000c469:	(bad)  
   14000c46a:	push   r14
   14000c46c:	je     0x14000c4e7
   14000c46e:	jo     0x14000c4d5
   14000c470:	pop    rdi
   14000c471:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

000000014000d000 <.pdata>:
   14000d000:	xor    BYTE PTR [rax],dl
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	pop    rbp
   14000d005:	adc    BYTE PTR [rax],al
   14000d007:	add    BYTE PTR [rax+riz*4],bl
   14000d00a:	add    BYTE PTR [rax],al
   14000d00c:	(bad)  
   14000d00d:	adc    BYTE PTR [rax],al
   14000d00f:	add    BYTE PTR [rbp-0x17fffff0],cl
   14000d015:	lahf   
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	movabs al,ds:0x800001268000010
   14000d021:	sahf   
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	jo     0x14000d038
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	and    dl,BYTE PTR [rax+rax*1]
   14000d02b:	add    BYTE PTR [rax-0x63],cl
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	xor    BYTE PTR [rax+rax*1],dl
   14000d033:	add    BYTE PTR [rax],al
   14000d035:	(bad)  
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	test   BYTE PTR [rax+rax*1+0x163000],bl
   14000d03f:	add    BYTE PTR [rbp+0x16],ch
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	loopne 0x14000cfe5
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	jo     0x14000d060
   14000d04a:	add    BYTE PTR [rax],al
   14000d04c:	sub    al,0x17
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	movabs al,ds:0xe0000173000009f
   14000d059:	sbb    BYTE PTR [rax],al
   14000d05b:	add    BYTE PTR [rax-0x61],ah
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	adc    BYTE PTR [rax],bl
   14000d062:	add    BYTE PTR [rax],al
   14000d064:	(bad)  
   14000d065:	sbb    BYTE PTR [rax],al
   14000d067:	add    BYTE PTR [rax-0x5e],dl
   14000d06a:	add    BYTE PTR [rax],al
   14000d06c:	(bad)  
   14000d06d:	sbb    BYTE PTR [rax],al
   14000d06f:	add    BYTE PTR [rcx-0x4fffffe8],cl
   14000d075:	xchg   edi,eax
   14000d076:	add    BYTE PTR [rax],al
   14000d078:	nop
   14000d079:	sbb    BYTE PTR [rax],al
   14000d07b:	add    BYTE PTR [rax-0x47ffffe8],ch
   14000d081:	xchg   edi,eax
   14000d082:	add    BYTE PTR [rax],al
   14000d084:	rcr    BYTE PTR [rax],0x0
   14000d087:	add    al,bl
   14000d089:	sbb    BYTE PTR [rax],al
   14000d08b:	add    al,al
   14000d08d:	xchg   edi,eax
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	xor    BYTE PTR [rcx],bl
   14000d092:	add    BYTE PTR [rax],al
   14000d094:	jae    0x14000d0af
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	enter  0xa1,0x0
   14000d09c:	loopne 0x14000d0b7
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	sbb    DWORD PTR [rdx],ebx
   14000d0a2:	add    BYTE PTR [rax],al
   14000d0a4:	enter  0x9e,0x0
   14000d0a8:	sbb    al,BYTE PTR [rax]
   14000d0ab:	add    BYTE PTR [rdi+0x5800001b],ch
   14000d0b1:	movabs ds:0x1beb00001bb00000,al
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	push   rsp
   14000d0bd:	lahf   
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	adc    BYTE PTR [rax+rax*1],bl
   14000d0c3:	add    BYTE PTR [rcx],dl
   14000d0c5:	sbb    eax,0xa2180000
   14000d0ca:	add    BYTE PTR [rax],al
   14000d0cc:	rcr    BYTE PTR [rip+0x1e640000],1        # 0x15e64d0d2
   14000d0d2:	add    BYTE PTR [rax],al
   14000d0d4:	push   0x7000009a
   14000d0d9:	(bad)  
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0dd:	(bad)  
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	in     al,0x99
   14000d0e2:	add    BYTE PTR [rax],al
   14000d0e4:	mov    al,0x1f
   14000d0e6:	add    BYTE PTR [rax],al
   14000d0e8:	cdq    
   14000d0e9:	and    BYTE PTR [rax],al
   14000d0eb:	add    al,dl
   14000d0ed:	sahf   
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	movabs al,ds:0x4c00002119000020
   14000d0f9:	xchg   esp,eax
   14000d0fa:	add    BYTE PTR [rax],al
   14000d0fc:	and    BYTE PTR [rcx],ah
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	pop    rsp
   14000d101:	and    DWORD PTR [rax],eax
   14000d103:	add    BYTE PTR [rsp+rdx*4],bh
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	and    BYTE PTR [rcx],0x0
   14000d10b:	add    BYTE PTR [rdx+0x44000021],ch
   14000d111:	xchg   esp,eax
   14000d112:	add    BYTE PTR [rax],al
   14000d114:	loopne 0x14000d137
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	add    al,0x22
   14000d11a:	add    BYTE PTR [rax],al
   14000d11c:	add    BYTE PTR [rcx+0x22100000],ah
   14000d122:	add    BYTE PTR [rax],al
   14000d124:	xor    ah,BYTE PTR [rdx]
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	rex cwde 
   14000d12a:	add    BYTE PTR [rax],al
   14000d12c:	(bad)  
   14000d12d:	and    al,BYTE PTR [rax]
   14000d12f:	add    BYTE PTR [rdx+riz*1-0x688c0000],cl
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	nop
   14000d139:	and    al,BYTE PTR [rax]
   14000d13b:	add    BYTE PTR [rdx+riz*1-0x5e300000],bh
   14000d142:	add    BYTE PTR [rax],al
   14000d144:	lock and al,BYTE PTR [rax]
   14000d147:	add    BYTE PTR [rax+0x23],cl
   14000d14a:	add    BYTE PTR [rax],al
   14000d14c:	jl     0x14000d0e5
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	push   rax
   14000d151:	and    eax,DWORD PTR [rax]
   14000d153:	add    ah,cl
   14000d155:	and    eax,DWORD PTR [rax]
   14000d157:	add    al,bl
   14000d159:	movabs eax,ds:0x2439000023d00000
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	movabs al,ds:0x930000244000009a
   14000d16d:	and    al,0x0
   14000d16f:	add    BYTE PTR [rax-0x66],bl
   14000d172:	add    BYTE PTR [rax],al
   14000d174:	movabs al,ds:0x30000024f3000024
   14000d17d:	lahf   
   14000d17e:	add    BYTE PTR [rax],al
   14000d180:	add    BYTE PTR [rip+0x25310000],ah        # 0x16531d186
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	jo     0x14000d11e
   14000d18a:	add    BYTE PTR [rax],al
   14000d18c:	rex and eax,0x25690000
   14000d192:	add    BYTE PTR [rax],al
   14000d194:	cwde   
   14000d195:	movabs eax,ds:0x262e000026000000
   14000d19e:	add    BYTE PTR [rax],al
   14000d1a0:	or     al,0x97
   14000d1a2:	add    BYTE PTR [rax],al
   14000d1a4:	push   rax
   14000d1a5:	add    BYTE PTR es:[rax],al
   14000d1a8:	xchg   edx,eax
   14000d1a9:	add    BYTE PTR es:[rax],al
   14000d1ac:	adc    BYTE PTR [rdx+0x26c00000],ah
   14000d1b2:	add    BYTE PTR [rax],al
   14000d1b4:	adc    BYTE PTR [rdi],ah
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	pop    rax
   14000d1b9:	xchg   esp,eax
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	adc    BYTE PTR [rdi],ah
   14000d1be:	add    BYTE PTR [rax],al
   14000d1c0:	xor    esp,DWORD PTR [rdi]
   14000d1c2:	add    BYTE PTR [rax],al
   14000d1c4:	js     0x14000d15a
   14000d1c6:	add    BYTE PTR [rax],al
   14000d1c8:	(bad)  
   14000d1c9:	sub    BYTE PTR [rax],al
   14000d1cb:	add    cl,bl
   14000d1cd:	sub    BYTE PTR [rax],al
   14000d1cf:	add    BYTE PTR [rsp+rbx*4+0x0],bh
   14000d1d3:	add    al,ah
   14000d1d5:	sub    BYTE PTR [rax],al
   14000d1d7:	add    BYTE PTR [rcx+0x29],bl
   14000d1da:	add    BYTE PTR [rax],al
   14000d1dc:	rex.WR lahf 
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	sub    BYTE PTR [rcx],0x0
   14000d1e3:	add    BYTE PTR [rdi+0x64000029],ch
   14000d1e9:	pushf  
   14000d1ea:	add    BYTE PTR [rax],al
   14000d1ec:	mov    al,0x29
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	out    0x29,al
   14000d1f2:	add    BYTE PTR [rax],al
   14000d1f4:	jo     0x14000d192
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	lock sub DWORD PTR [rax],eax
   14000d1fb:	add    BYTE PTR [rsi],ah
   14000d1fd:	sub    al,BYTE PTR [rax]
   14000d1ff:	add    BYTE PTR [rax-0x61],al
   14000d202:	add    BYTE PTR [rax],al
   14000d204:	xor    BYTE PTR [rdx],ch
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	(bad)  
   14000d209:	sub    al,BYTE PTR [rax]
   14000d20b:	add    BYTE PTR [rax-0x68],cl
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	(bad)  
   14000d211:	sub    al,BYTE PTR [rax]
   14000d213:	add    BYTE PTR [rsi+0x3c00002a],al
   14000d219:	xchg   edi,eax
   14000d21a:	add    BYTE PTR [rax],al
   14000d21c:	nop
   14000d21d:	sub    al,BYTE PTR [rax]
   14000d21f:	add    BYTE PTR [rsi+0x4c00002a],dh
   14000d225:	xchg   edi,eax
   14000d226:	add    BYTE PTR [rax],al
   14000d228:	shr    BYTE PTR [rdx],0x0
   14000d22b:	add    dh,ah
   14000d22d:	sub    al,BYTE PTR [rax]
   14000d22f:	add    BYTE PTR [rdi+rdx*4+0x0],ch
   14000d233:	add    al,dh
   14000d235:	sub    al,BYTE PTR [rax]
   14000d237:	add    BYTE PTR [rsi],dl
   14000d239:	sub    eax,DWORD PTR [rax]
   14000d23b:	add    BYTE PTR [rax],ch
   14000d23d:	xchg   edi,eax
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	and    BYTE PTR [rbx],ch
   14000d242:	add    BYTE PTR [rax],al
   14000d244:	and    ebp,DWORD PTR [rax+rax*1]
   14000d247:	add    al,cl
   14000d249:	movabs al,ds:0x2ca800002c400000
   14000d252:	add    BYTE PTR [rax],al
   14000d254:	fs xchg esp,eax
   14000d256:	add    BYTE PTR [rax],al
   14000d258:	mov    al,0x2c
   14000d25a:	add    BYTE PTR [rax],al
   14000d25c:	adc    eax,0xa000002d
   14000d261:	movabs eax,ds:0x2e1000002d700000
   14000d26a:	add    BYTE PTR [rax],al
   14000d26c:	or     BYTE PTR [rcx+0x2e100000],ah
   14000d272:	add    BYTE PTR [rax],al
   14000d274:	adc    ch,BYTE PTR [rdi]
   14000d276:	add    BYTE PTR [rax],al
   14000d278:	test   BYTE PTR [rbp+0x2f300000],dl
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	xor    DWORD PTR [r8],eax
   14000d283:	add    BYTE PTR [rsp+rbx*4],bl
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	jo     0x14000d2bb
   14000d28a:	add    BYTE PTR [rax],al
   14000d28c:	fwait
   14000d28d:	xor    DWORD PTR [rax],eax
   14000d28f:	add    BYTE PTR [rax],ah
   14000d291:	xchg   esp,eax
   14000d292:	add    BYTE PTR [rax],al
   14000d294:	shl    BYTE PTR [rcx],0x0
   14000d297:	add    BYTE PTR [rdx],dl
   14000d299:	xor    al,BYTE PTR [rax]
   14000d29b:	add    BYTE PTR [rdi+rdx*4],dl
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	and    BYTE PTR [rdx],dh
   14000d2a2:	add    BYTE PTR [rax],al
   14000d2a4:	push   0x32
   14000d2a6:	add    BYTE PTR [rax],al
   14000d2a8:	je     0x14000d240
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	push   0x32
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	xor    BYTE PTR [rdx],0x0
   14000d2b3:	add    BYTE PTR [rsi+rdx*4+0x32800000],al
   14000d2ba:	add    BYTE PTR [rax],al
   14000d2bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d2bd:	xor    al,BYTE PTR [rax]
   14000d2bf:	add    BYTE PTR [rax-0x5affff6a],bl
   14000d2c5:	xor    al,BYTE PTR [rax]
   14000d2c7:	add    BYTE PTR [rdx+rsi*1-0x69540000],bh
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	mov    esp,0xe7000032
   14000d2d5:	xor    al,BYTE PTR [rax]
   14000d2d7:	add    BYTE PTR [rsi+rdx*4+0x32f00000],bh
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	xor    eax,DWORD PTR gs:[rax]
   14000d2e3:	add    BYTE PTR [rax],dl
   14000d2e5:	pushf  
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	jo     0x14000d31d
   14000d2ea:	add    BYTE PTR [rax],al
   14000d2ec:	mov    eax,0x58000033
   14000d2f1:	pushf  
   14000d2f2:	add    BYTE PTR [rax],al
   14000d2f4:	shl    BYTE PTR [rax+rax*1],1
   14000d2f7:	add    bl,ch
   14000d2f9:	xor    al,0x0
   14000d2fb:	add    ah,cl
   14000d2fd:	xchg   esi,eax
   14000d2fe:	add    BYTE PTR [rax],al
   14000d300:	jmp    0x14000d336
   14000d302:	add    BYTE PTR [rax],al
   14000d304:	or     eax,0xd8000035
   14000d309:	xchg   esi,eax
   14000d30a:	add    BYTE PTR [rax],al
   14000d30c:	or     eax,0x28000035
   14000d311:	xor    eax,0x96ec0000
   14000d316:	add    BYTE PTR [rax],al
   14000d318:	xor    BYTE PTR [rip+0x35590000],dh        # 0x17559d31e
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	lods   al,BYTE PTR ds:[rsi]
   14000d321:	movabs eax,ds:0x358b000035600000
   14000d32a:	add    BYTE PTR [rax],al
   14000d32c:	mov    ah,0xa1
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	mov    al,0x35
   14000d332:	add    BYTE PTR [rax],al
   14000d334:	ret    0x35
   14000d337:	add    ah,bh
   14000d339:	xchg   esi,eax
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	shl    BYTE PTR [rip+0x35e20000],1        # 0x175e2d342
   14000d342:	add    BYTE PTR [rax],al
   14000d344:	shl    BYTE PTR [rcx+0x35f00000],0x0
   14000d34b:	add    BYTE PTR [rdx],al
   14000d34d:	add    BYTE PTR ss:[rax],al
   14000d350:	add    al,0x97
   14000d352:	add    BYTE PTR [rax],al
   14000d354:	adc    BYTE PTR [rsi],dh
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	cmp    dh,BYTE PTR [rsi]
   14000d35a:	add    BYTE PTR [rax],al
   14000d35c:	xor    al,0x94
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	rex
   14000d361:	add    BYTE PTR ss:[rax],al
   14000d364:	push   0x36
   14000d366:	add    BYTE PTR [rax],al
   14000d368:	sub    al,0x94
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	xor    BYTE PTR [rsi],0x0
   14000d36f:	add    BYTE PTR [rsi-0x7fffffc9],bl
   14000d375:	xchg   esp,eax
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	shl    BYTE PTR [rdi],0x0
   14000d37b:	add    BYTE PTR [rip+0xffffffff98000039],al        # 0xd800d3ba
   14000d381:	xchg   esp,eax
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	adc    BYTE PTR [rcx],bh
   14000d386:	add    BYTE PTR [rax],al
   14000d388:	adc    bh,BYTE PTR [rdx]
   14000d38a:	add    BYTE PTR [rax],al
   14000d38c:	lods   al,BYTE PTR ds:[rsi]
   14000d38d:	xchg   esp,eax
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	xor    BYTE PTR [rdx],bh
   14000d392:	add    BYTE PTR [rax],al
   14000d394:	push   rdx
   14000d395:	cmp    eax,DWORD PTR [rax]
   14000d397:	add    al,al
   14000d399:	xchg   esp,eax
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	cmp    BYTE PTR [rbx],0x0
   14000d39f:	add    BYTE PTR [rdi-0x2bffffc4],ch
   14000d3a5:	xchg   esp,eax
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	mov    al,0x3c
   14000d3aa:	add    BYTE PTR [rax],al
   14000d3ac:	scas   al,BYTE PTR es:[rdi]
   14000d3ad:	cmp    eax,0x94e40000
   14000d3b2:	add    BYTE PTR [rax],al
   14000d3b4:	mov    al,0x3d
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	sar    DWORD PTR [rip+0xffffffff94180000],1        # 0xd418d3be
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	rex
   14000d3c1:	add    BYTE PTR ds:[rax],al
   14000d3c4:	(bad)  
   14000d3c5:	add    BYTE PTR ds:[rax],al
   14000d3c8:	loopne 0x14000d364
   14000d3ca:	add    BYTE PTR [rax],al
   14000d3cc:	sar    BYTE PTR [rsi],1
   14000d3ce:	add    BYTE PTR [rax],al
   14000d3d0:	in     al,dx
   14000d3d1:	add    BYTE PTR ds:[rax],al
   14000d3d4:	adc    BYTE PTR [rax+rax*1+0x3f1000],dl
   14000d3db:	add    BYTE PTR [rax+0x3f],dl
   14000d3de:	add    BYTE PTR [rax],al
   14000d3e0:	(bad)  
   14000d3e1:	xchg   edi,eax
   14000d3e2:	add    BYTE PTR [rax],al
   14000d3e4:	loopne 0x14000d425
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	(bad)  
   14000d3e9:	add    BYTE PTR [rax],al
   14000d3ec:	and    BYTE PTR [rdi+0x40200000],dl
   14000d3f2:	add    BYTE PTR [rax],al
   14000d3f4:	jmp    0x13c00d439
   14000d3f9:	xchg   esp,eax
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	lock add BYTE PTR [rax],al
   14000d400:	add    BYTE PTR cs:[r8],al
   14000d404:	hlt    
   14000d405:	xchg   esp,eax
   14000d406:	add    BYTE PTR [rax],al
   14000d408:	rex
   14000d409:	add    BYTE PTR [r8],al
   14000d40c:	nop
   14000d40d:	add    BYTE PTR [r8],al
   14000d410:	add    al,0x9c
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	rol    BYTE PTR [rcx+0x0],1
   14000d417:	add    BYTE PTR [rip+0x38000042],dl        # 0x17800d45f
   14000d41d:	cwde   
   14000d41e:	add    BYTE PTR [rax],al
   14000d420:	jo     0x14000d464
   14000d422:	add    BYTE PTR [rax],al
   14000d424:	rol    BYTE PTR [rdx+0x0],cl
   14000d427:	add    BYTE PTR [rax],dh
   14000d429:	xchg   edi,eax
   14000d42a:	add    BYTE PTR [rax],al
   14000d42c:	loopne 0x14000d470
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	sub    eax,0x44000043
   14000d435:	xchg   edi,eax
   14000d436:	add    BYTE PTR [rax],al
   14000d438:	xor    BYTE PTR [rbx+0x0],al
   14000d43b:	add    BYTE PTR [rdx+0x54000043],dl
   14000d441:	xchg   edi,eax
   14000d442:	add    BYTE PTR [rax],al
   14000d444:	lock rex.XB add BYTE PTR [r8],al
   14000d448:	sti    
   14000d449:	add    BYTE PTR [rax],r8b
   14000d44c:	test   al,0x9a
   14000d44e:	add    BYTE PTR [rax],al
   14000d450:	add    BYTE PTR [rbp+0x0],al
   14000d453:	add    BYTE PTR [rcx+0x45],cl
   14000d456:	add    BYTE PTR [rax],al
   14000d458:	(bad)  
   14000d459:	(bad)  
   14000d45a:	add    BYTE PTR [rax],al
   14000d45c:	push   rax
   14000d45d:	add    BYTE PTR [r8],r8b
   14000d460:	cdq    
   14000d461:	add    BYTE PTR [r8],r8b
   14000d464:	cmp    BYTE PTR [rdi+0x45a00000],bl
   14000d46a:	add    BYTE PTR [rax],al
   14000d46c:	jnp    0x14000d4b6
   14000d46e:	add    BYTE PTR [rax],al
   14000d470:	lock (bad) 
   14000d472:	add    BYTE PTR [rax],al
   14000d474:	nop
   14000d475:	rex.W add BYTE PTR [rax],al
   14000d478:	cmp    al,0x49
   14000d47a:	add    BYTE PTR [rax],al
   14000d47c:	xor    BYTE PTR [rbx+0x49500000],bl
   14000d482:	add    BYTE PTR [rax],al
   14000d484:	xchg   ebp,eax
   14000d485:	rex.WRXB add BYTE PTR [r8],r8b
   14000d488:	push   rsp
   14000d489:	cwde   
   14000d48a:	add    BYTE PTR [rax],al
   14000d48c:	movabs al,ds:0x700000503500004f
   14000d495:	xchg   ebp,eax
   14000d496:	add    BYTE PTR [rax],al
   14000d498:	rex push rax
   14000d49a:	add    BYTE PTR [rax],al
   14000d49c:	ja     0x14000d4ee
   14000d49e:	add    BYTE PTR [rax],al
   14000d4a0:	or     BYTE PTR [rbp+0x50770000],dl
   14000d4a6:	add    BYTE PTR [rax],al
   14000d4a8:	stos   DWORD PTR es:[rdi],eax
   14000d4a9:	push   rbx
   14000d4aa:	add    BYTE PTR [rax],al
   14000d4ac:	sbb    BYTE PTR [rbp+0x53ab0000],dl
   14000d4b2:	add    BYTE PTR [rax],al
   14000d4b4:	mov    ecx,0x34000053
   14000d4b9:	xchg   ebp,eax
   14000d4ba:	add    BYTE PTR [rax],al
   14000d4bc:	rcl    BYTE PTR [rbx+0x0],0x0
   14000d4c0:	fcom   DWORD PTR [rax+rax*1+0x0]
   14000d4c4:	rex.R xchg ebp,eax
   14000d4c6:	add    BYTE PTR [rax],al
   14000d4c8:	fcom   DWORD PTR [rax+rax*1+0x0]
   14000d4cc:	in     al,0x55
   14000d4ce:	add    BYTE PTR [rax],al
   14000d4d0:	pop    rsp
   14000d4d1:	xchg   ebp,eax
   14000d4d2:	add    BYTE PTR [rax],al
   14000d4d4:	lock push rbp
   14000d4d6:	add    BYTE PTR [rax],al
   14000d4d8:	xor    eax,0x78000056
   14000d4dd:	xchg   ebp,eax
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	rex push rsi
   14000d4e2:	add    BYTE PTR [rax],al
   14000d4e4:	sub    eax,0xa8000057
   14000d4e9:	fwait
   14000d4ea:	add    BYTE PTR [rax],al
   14000d4ec:	xor    BYTE PTR [rdi+0x0],dl
   14000d4ef:	add    BYTE PTR [rip+0xffffffffbc000058],cl        # 0xfc00d54d
   14000d4f5:	fwait
   14000d4f6:	add    BYTE PTR [rax],al
   14000d4f8:	and    BYTE PTR [rax+0x0],bl
   14000d4fb:	add    BYTE PTR [rax+rbx*2+0x0],bl
   14000d4ff:	add    al,dl
   14000d501:	fwait
   14000d502:	add    BYTE PTR [rax],al
   14000d504:	pop    rsp
   14000d505:	pop    rax
   14000d506:	add    BYTE PTR [rax],al
   14000d508:	leave  
   14000d509:	pop    rax
   14000d50a:	add    BYTE PTR [rax],al
   14000d50c:	fcomp  DWORD PTR [rbx+0x58c90000]
   14000d512:	add    BYTE PTR [rax],al
   14000d514:	rcr    DWORD PTR [rax+0x0],1
   14000d517:	add    ah,ch
   14000d519:	fwait
   14000d51a:	add    BYTE PTR [rax],al
   14000d51c:	adc    BYTE PTR [rcx+0x0],bl
   14000d51f:	add    BYTE PTR [rbx+0x59],dl
   14000d522:	add    BYTE PTR [rax],al
   14000d524:	cld    
   14000d525:	fwait
   14000d526:	add    BYTE PTR [rax],al
   14000d528:	nop
   14000d529:	pop    rcx
   14000d52a:	add    BYTE PTR [rax],al
   14000d52c:	(bad)  
   14000d52d:	pop    rsp
   14000d52e:	add    BYTE PTR [rax],al
   14000d530:	ins    BYTE PTR es:[rdi],dx
   14000d531:	fwait
   14000d532:	add    BYTE PTR [rax],al
   14000d534:	jo     0x14000d592
   14000d536:	add    BYTE PTR [rax],al
   14000d538:	movabs ds:0xa300009b3c00005c,eax
   14000d541:	pop    rsp
   14000d542:	add    BYTE PTR [rax],al
   14000d544:	mov    edi,0x4400005c
   14000d549:	fwait
   14000d54a:	add    BYTE PTR [rax],al
   14000d54c:	mov    edi,0xd700005c
   14000d551:	pop    rsp
   14000d552:	add    BYTE PTR [rax],al
   14000d554:	pop    rax
   14000d555:	fwait
   14000d556:	add    BYTE PTR [rax],al
   14000d558:	adc    BYTE PTR [rbp+0x0],bl
   14000d55b:	add    BYTE PTR [rip+0xffffffffc800005f],bh        # 0x10800d5c0
   14000d561:	xchg   edi,eax
   14000d562:	add    BYTE PTR [rax],al
   14000d564:	push   rax
   14000d565:	pop    rdi
   14000d566:	add    BYTE PTR [rax],al
   14000d568:	xor    ah,BYTE PTR [rcx+0x0]
   14000d56b:	add    BYTE PTR [rax-0x60],dl
   14000d56e:	add    BYTE PTR [rax],al
   14000d570:	mov    BYTE PTR [rcx+0x0],ah
   14000d573:	add    BYTE PTR [rsi+0x30000061],ch
   14000d579:	movabs ds:0x61f9000061b00000,eax
   14000d582:	add    BYTE PTR [rax],al
   14000d584:	rex.R movabs ds:0x6244000061fc0000,eax
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	cmp    BYTE PTR [rbx+0x62440000],ah
   14000d596:	add    BYTE PTR [rax],al
   14000d598:	ja     0x14000d5fc
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	sub    BYTE PTR [rbx+0x63b00000],ah
   14000d5a2:	add    BYTE PTR [rax],al
   14000d5a4:	(bad)  
   14000d5a5:	movsxd eax,DWORD PTR [rax]
   14000d5a7:	add    BYTE PTR [rbx+riz*4+0x64000000],al
   14000d5ae:	add    BYTE PTR [rax],al
   14000d5b0:	mov    al,0x64
   14000d5b2:	add    BYTE PTR [rax],al
   14000d5b4:	pop    rsp
   14000d5b5:	movabs ds:0x64c7000064b00000,eax
   14000d5be:	add    BYTE PTR [rax],al
   14000d5c0:	push   rsp
   14000d5c1:	movabs ds:0x65d60000656c0000,eax
   14000d5ca:	add    BYTE PTR [rax],al
   14000d5cc:	mov    WORD PTR [rbx+0x65d80000],fs
   14000d5d2:	add    BYTE PTR [rax],al
   14000d5d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d5d5:	data16 add BYTE PTR [rax],al
   14000d5d8:	pushf  
   14000d5d9:	movabs ds:0x670b000066a80000,eax
   14000d5e2:	add    BYTE PTR [rax],al
   14000d5e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d5e5:	movabs ds:0x672a000067180000,eax
   14000d5ee:	add    BYTE PTR [rax],al
   14000d5f0:	fsub   QWORD PTR [rbx+0x672c0000]
   14000d5f6:	add    BYTE PTR [rax],al
   14000d5f8:	adc    al,0x69
   14000d5fa:	add    BYTE PTR [rax],al
   14000d5fc:	lods   al,BYTE PTR ds:[rsi]
   14000d5fd:	movabs ds:0x69d90000697c0000,eax
   14000d606:	add    BYTE PTR [rax],al
   14000d608:	in     al,0xa3
   14000d60a:	add    BYTE PTR [rax],al
   14000d60c:	fsubr  QWORD PTR [rcx+0x0]
   14000d60f:	add    al,bh
   14000d611:	imul   eax,DWORD PTR [rax],0xa44400
   14000d617:	add    al,bh
   14000d619:	imul   eax,DWORD PTR [rax],0x6a4200
   14000d61f:	add    BYTE PTR [rsp+riz*4],dl
   14000d622:	add    BYTE PTR [rax],al
   14000d624:	rex.R push 0x0
   14000d627:	add    BYTE PTR [rdx+rbp*2+0x0],bh
   14000d62b:	add    BYTE PTR [rsp+riz*4+0x0],cl
   14000d62f:	add    BYTE PTR [rdx+rbp*2+0x0],bh
   14000d633:	add    BYTE PTR [rbx+0x5400006a],dl
   14000d639:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d63a:	add    BYTE PTR [rax],al
   14000d63c:	adc    BYTE PTR [rbx+0x0],ch
   14000d63f:	add    BYTE PTR [rbp+0x6b],bl
   14000d642:	add    BYTE PTR [rax],al
   14000d644:	pop    rsp
   14000d645:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d646:	add    BYTE PTR [rax],al
   14000d648:	movabs al,ds:0x8800006c4c00006b
   14000d651:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d652:	add    BYTE PTR [rax],al
   14000d654:	pop    rax
   14000d655:	ins    BYTE PTR es:[rdi],dx
   14000d656:	add    BYTE PTR [rax],al
   14000d658:	nop
   14000d659:	ins    BYTE PTR es:[rdi],dx
   14000d65a:	add    BYTE PTR [rax],al
   14000d65c:	xchg   esp,eax
   14000d65d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d65e:	add    BYTE PTR [rax],al
   14000d660:	nop
   14000d661:	ins    BYTE PTR es:[rdi],dx
   14000d662:	add    BYTE PTR [rax],al
   14000d664:	enter  0x6c,0x0
   14000d668:	movabs al,ds:0x7000006d380000a4
   14000d671:	ins    DWORD PTR es:[rdi],dx
   14000d672:	add    BYTE PTR [rax],al
   14000d674:	mov    eax,0x8800009e
   14000d679:	ins    DWORD PTR es:[rdi],dx
   14000d67a:	add    BYTE PTR [rax],al
   14000d67c:	shr    BYTE PTR [rbp+0x0],0x0
   14000d680:	clc    
   14000d681:	popf   
   14000d682:	add    BYTE PTR [rax],al
   14000d684:	fsubr  DWORD PTR [rbp+0x0]
   14000d687:	add    BYTE PTR [rax],dl
   14000d689:	outs   dx,BYTE PTR ds:[rsi]
   14000d68a:	add    BYTE PTR [rax],al
   14000d68c:	cmp    BYTE PTR [rbp+0x6e100000],bl
   14000d692:	add    BYTE PTR [rax],al
   14000d694:	outs   dx,BYTE PTR ss:[rsi]
   14000d696:	add    BYTE PTR [rax],al
   14000d698:	fcomp  DWORD PTR [rdi+0x6e400000]
   14000d69e:	add    BYTE PTR [rax],al
   14000d6a0:	data16 outs dx,BYTE PTR ds:[rsi]
   14000d6a2:	add    BYTE PTR [rax],al
   14000d6a4:	cwde   
   14000d6a5:	lahf   
   14000d6a6:	add    BYTE PTR [rax],al
   14000d6a8:	mov    BYTE PTR [rsi+0x0],ch
   14000d6ab:	add    al,al
   14000d6ad:	outs   dx,BYTE PTR ds:[rsi]
   14000d6ae:	add    BYTE PTR [rax],al
   14000d6b0:	sbb    BYTE PTR [rbx+0x6ee00000],ah
   14000d6b6:	add    BYTE PTR [rax],al
   14000d6b8:	(bad)  
   14000d6b9:	outs   dx,DWORD PTR ds:[rsi]
   14000d6ba:	add    BYTE PTR [rax],al
   14000d6bc:	push   rax
   14000d6bd:	(bad)  
   14000d6be:	add    BYTE PTR [rax],al
   14000d6c0:	rex outs dx,DWORD PTR ds:[rsi]
   14000d6c2:	add    BYTE PTR [rax],al
   14000d6c4:	outs   dx,BYTE PTR ds:[rsi]
   14000d6c5:	outs   dx,DWORD PTR ds:[rsi]
   14000d6c6:	add    BYTE PTR [rax],al
   14000d6c8:	sub    BYTE PTR [rdi+0x6fc00000],bl
   14000d6ce:	add    BYTE PTR [rax],al
   14000d6d0:	loopne 0x14000d741
   14000d6d2:	add    BYTE PTR [rax],al
   14000d6d4:	mov    BYTE PTR [rcx+0x6fe00000],ah
   14000d6da:	add    BYTE PTR [rax],al
   14000d6dc:	and    al,0x70
   14000d6de:	add    BYTE PTR [rax],al
   14000d6e0:	push   rax
   14000d6e1:	xchg   esi,eax
   14000d6e2:	add    BYTE PTR [rax],al
   14000d6e4:	and    al,0x70
   14000d6e6:	add    BYTE PTR [rax],al
   14000d6e8:	(bad)  
   14000d6e9:	jo     0x14000d6eb
   14000d6eb:	add    BYTE PTR [rax-0x6a],ah
   14000d6ee:	add    BYTE PTR [rax],al
   14000d6f0:	div    BYTE PTR [rax+0x0]
   14000d6f3:	add    BYTE PTR [rdi+0x71],bh
   14000d6f6:	add    BYTE PTR [rax],al
   14000d6f8:	rcr    BYTE PTR [rcx+0x717f0000],0x0
   14000d6ff:	add    dh,bl
   14000d701:	jno    0x14000d703
   14000d703:	add    ah,dl
   14000d705:	cdq    
   14000d706:	add    BYTE PTR [rax],al
   14000d708:	rex.R jb 0x14000d70b
   14000d70b:	add    BYTE PTR [rdi+0x72],bl
   14000d70e:	add    BYTE PTR [rax],al
   14000d710:	jl     0x14000d6b5
   14000d712:	add    BYTE PTR [rax],al
   14000d714:	pop    rdi
   14000d715:	jb     0x14000d717
   14000d717:	add    BYTE PTR [rbp+0x72],bh
   14000d71a:	add    BYTE PTR [rax],al
   14000d71c:	(bad)  
   14000d71d:	movabs ds:0x72a90000727d0000,eax
   14000d726:	add    BYTE PTR [rax],al
   14000d728:	or     al,0xa4
   14000d72a:	add    BYTE PTR [rax],al
   14000d72c:	test   eax,0xea000072
   14000d731:	jb     0x14000d733
   14000d733:	add    BYTE PTR [rsp+riz*4],bh
   14000d736:	add    BYTE PTR [rax],al
   14000d738:	lock jb 0x14000d73b
   14000d73b:	add    BYTE PTR [rax],dl
   14000d73d:	jae    0x14000d73f
   14000d73f:	add    BYTE PTR [rax+0x400000a4],al
   14000d745:	jae    0x14000d747
   14000d747:	add    BYTE PTR [rbx+0x73],dl
   14000d74a:	add    BYTE PTR [rax],al
   14000d74c:	and    al,0xa0
   14000d74e:	add    BYTE PTR [rax],al
   14000d750:	push   rbx
   14000d751:	jae    0x14000d753
   14000d753:	add    BYTE PTR [rbx+rsi*2-0x5fd40000],cl
   14000d75a:	add    BYTE PTR [rax],al
   14000d75c:	mov    WORD PTR [rbx+0x0],?
   14000d75f:	add    BYTE PTR [rsi+0x40000073],ch
   14000d765:	movabs al,ds:0x73c3000073b00000
   14000d76e:	add    BYTE PTR [rax],al
   14000d770:	lock lahf 
   14000d772:	add    BYTE PTR [rax],al
   14000d774:	ret    
   14000d775:	jae    0x14000d777
   14000d777:	add    ah,bh
   14000d779:	jae    0x14000d77b
   14000d77b:	add    al,bh
   14000d77d:	lahf   
   14000d77e:	add    BYTE PTR [rax],al
   14000d780:	cld    
   14000d781:	jae    0x14000d783
   14000d783:	add    BYTE PTR [rsi],bl
   14000d785:	je     0x14000d787
   14000d787:	add    BYTE PTR [rax+riz*4],cl
   14000d78a:	add    BYTE PTR [rax],al
   14000d78c:	and    BYTE PTR [rax+rax*1+0x0],dh
   14000d790:	imul   esi,DWORD PTR [rax+rax*1+0x0],0xa34c

Disassembly of section .rsrc:

000000014000e000 <.rsrc>:
	...
   14000e008:	add    al,0x0
   14000e00a:	add    BYTE PTR [rax],al
   14000e00c:	add    BYTE PTR [rax],al
   14000e00e:	add    DWORD PTR [rax],eax
   14000e010:	sbb    BYTE PTR [rax],al
   14000e012:	add    BYTE PTR [rax],al
   14000e014:	sbb    BYTE PTR [rax],al
   14000e016:	add    BYTE PTR [rax+0x0],al
   14000e01c:	add    BYTE PTR [rax],al
   14000e01e:	add    BYTE PTR [rax],al
   14000e020:	add    al,0x0
   14000e022:	add    BYTE PTR [rax],al
   14000e024:	add    BYTE PTR [rax],al
   14000e026:	add    DWORD PTR [rax],eax
   14000e028:	add    DWORD PTR [rax],eax
   14000e02a:	add    BYTE PTR [rax],al
   14000e02c:	xor    BYTE PTR [rax],al
   14000e02e:	add    BYTE PTR [rax+0x0],al
   14000e034:	add    BYTE PTR [rax],al
   14000e036:	add    BYTE PTR [rax],al
   14000e038:	add    al,0x0
   14000e03a:	add    BYTE PTR [rax],al
   14000e03c:	add    BYTE PTR [rax],al
   14000e03e:	add    DWORD PTR [rax],eax
   14000e040:	or     DWORD PTR [rax+rax*1],eax
   14000e043:	add    BYTE PTR [rax+0x0],cl
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	pop    rax
   14000e049:	loopne 0x14000e04b
   14000e04b:	add    BYTE PTR [rdx+0x1],bl
   14000e04e:	add    BYTE PTR [rax],al
   14000e050:	in     al,0x4
   14000e052:	add    BYTE PTR [rax],al
   14000e054:	add    BYTE PTR [rax],al
   14000e056:	add    BYTE PTR [rax],al
   14000e058:	cmp    al,0x61
   14000e05a:	jae    0x14000e0cf
   14000e05c:	gs ins DWORD PTR es:[rdi],dx
   14000e05e:	(bad)  
   14000e05f:	ins    BYTE PTR es:[rdi],dx
   14000e060:	jns    0x14000e082
   14000e062:	js     0x14000e0d1
   14000e064:	ins    BYTE PTR es:[rdi],dx
   14000e065:	outs   dx,BYTE PTR ds:[rsi]
   14000e066:	jae    0x14000e0a5
   14000e068:	and    dh,BYTE PTR [rbp+0x72]
   14000e06b:	outs   dx,BYTE PTR ds:[rsi]
   14000e06c:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e06f:	push   0x73616d65
   14000e074:	sub    eax,0x7263696d
   14000e079:	outs   dx,DWORD PTR ds:[rsi]
   14000e07a:	jae    0x14000e0eb
   14000e07c:	data16 je 0x14000e0ac
   14000e07f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e082:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e085:	ins    DWORD PTR es:[rdi],dx
   14000e086:	cs jbe 0x14000e0ba
   14000e089:	and    ah,BYTE PTR [rax]
   14000e08b:	ins    DWORD PTR es:[rdi],dx
   14000e08c:	(bad)  
   14000e08d:	outs   dx,BYTE PTR ds:[rsi]
   14000e08e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000e095:	jb     0x14000e10a
   14000e097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e09e:	xor    BYTE PTR [rdx],ah
   14000e0a0:	ds or  eax,0x3c20200a
   14000e0a6:	je     0x14000e11a
   14000e0a8:	jne    0x14000e11d
   14000e0aa:	je     0x14000e0f5
   14000e0ac:	outs   dx,BYTE PTR ds:[rsi]
   14000e0ad:	outs   dx,WORD PTR ds:[rsi]
   14000e0af:	and    BYTE PTR [rax+0x6d],bh
   14000e0b2:	ins    BYTE PTR es:[rdi],dx
   14000e0b3:	outs   dx,BYTE PTR ds:[rsi]
   14000e0b4:	jae    0x14000e0f3
   14000e0b6:	and    dh,BYTE PTR [rbp+0x72]
   14000e0b9:	outs   dx,BYTE PTR ds:[rsi]
   14000e0ba:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e0bd:	push   0x73616d65
   14000e0c2:	sub    eax,0x7263696d
   14000e0c7:	outs   dx,DWORD PTR ds:[rsi]
   14000e0c8:	jae    0x14000e139
   14000e0ca:	data16 je 0x14000e0fa
   14000e0cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e0d0:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e0d3:	ins    DWORD PTR es:[rdi],dx
   14000e0d4:	cs jbe 0x14000e10a
   14000e0d7:	and    bh,BYTE PTR [rsi]
   14000e0d9:	or     eax,0x2020200a
   14000e0de:	and    BYTE PTR [rbx+rsi*2],bh
   14000e0e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e0e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000e0ed:	and    BYTE PTR [rax],ah
   14000e0ef:	and    BYTE PTR [rax],ah
   14000e0f1:	cmp    al,0x72
   14000e0f3:	gs jno 0x14000e16b
   14000e0f6:	gs jae 0x14000e16d
   14000e0f9:	gs fs push rax
   14000e0fc:	jb     0x14000e167
   14000e0fe:	jbe    0x14000e169
   14000e100:	ins    BYTE PTR es:[rdi],dx
   14000e101:	gs addr32 gs jae 0x14000e144
   14000e106:	or     eax,0x2020200a
   14000e10b:	and    BYTE PTR [rax],ah
   14000e10d:	and    BYTE PTR [rax],ah
   14000e10f:	and    BYTE PTR [rdx+rsi*2],bh
   14000e112:	gs jno 0x14000e18a
   14000e115:	gs jae 0x14000e18c
   14000e118:	gs fs rex.RB js 0x14000e182
   14000e11d:	movsxd esi,DWORD PTR [rbp+0x74]
   14000e120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000e127:	ins    BYTE PTR es:[rdi],dx
   14000e128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000e12c:	gs ins BYTE PTR es:[rdi],dx
   14000e12e:	cmp    eax,0x49736122
   14000e133:	outs   dx,BYTE PTR ds:[rsi]
   14000e134:	jbe    0x14000e1a5
   14000e136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000e13a:	and    BYTE PTR [rbp+0x69],dh
   14000e13d:	movsxd esp,DWORD PTR [r11+0x65]
   14000e141:	jae    0x14000e1b6
   14000e143:	cmp    eax,0x6c616622
   14000e148:	jae    0x14000e1af
   14000e14a:	and    bh,BYTE PTR [rsi]
   14000e14c:	cmp    al,0x2f
   14000e14e:	jb     0x14000e1b5
   14000e150:	jno    0x14000e1c7
   14000e152:	gs jae 0x14000e1c9
   14000e155:	gs fs rex.RB js 0x14000e1bf
   14000e15a:	movsxd esi,DWORD PTR [rbp+0x74]
   14000e15d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000e164:	ins    BYTE PTR es:[rdi],dx
   14000e165:	ds or  eax,0x2020200a
   14000e16b:	and    BYTE PTR [rax],ah
   14000e16d:	and    BYTE PTR [rdi+rbp*1],bh
   14000e170:	jb     0x14000e1d7
   14000e172:	jno    0x14000e1e9
   14000e174:	gs jae 0x14000e1eb
   14000e177:	gs fs push rax
   14000e17a:	jb     0x14000e1e5
   14000e17c:	jbe    0x14000e1e7
   14000e17e:	ins    BYTE PTR es:[rdi],dx
   14000e17f:	gs addr32 gs jae 0x14000e1c2
   14000e184:	or     eax,0x2020200a
   14000e189:	and    BYTE PTR [rdi+rbp*1],bh
   14000e18c:	jae    0x14000e1f3
   14000e18e:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000e199:	cmp    al,0x2f
   14000e19b:	je     0x14000e20f
   14000e19d:	jne    0x14000e212
   14000e19f:	je     0x14000e1ea
   14000e1a1:	outs   dx,BYTE PTR ds:[rsi]
   14000e1a2:	outs   dx,WORD PTR ds:[rsi]
   14000e1a4:	ds or  eax,0x612f3c0a
   14000e1aa:	jae    0x14000e21f
   14000e1ac:	gs ins DWORD PTR es:[rdi],dx
   14000e1ae:	(bad)  
   14000e1af:	ins    BYTE PTR es:[rdi],dx
   14000e1b0:	jns    0x14000e1f0
   14000e1b2:	push   rax
   14000e1b3:	rex.B
