
597ff38555c0fc36b1502b5f81a4262386621b795efad580687ac8ee879dc829.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	rex push rbx
   140001002:	push   rbp
   140001003:	push   rsi
   140001004:	sub    rsp,0x250
   14000100b:	mov    rbp,rdx
   14000100e:	movsxd rsi,r8d
   140001011:	mov    rdx,rcx
   140001014:	mov    rbx,rcx
   140001017:	mov    r8,rsi
   14000101a:	mov    rcx,rbp
   14000101d:	call   0x140005a10
   140001022:	test   esi,esi
   140001024:	jle    0x140001031
   140001026:	lea    eax,[rsi-0x1]
   140001029:	movsxd r9,eax
   14000102c:	mov    BYTE PTR [r9+rbp*1],0x0
   140001031:	mov    rcx,rbx
   140001034:	call   QWORD PTR [rip+0x12fce]        # 0x140014008
   14000103a:	bt     eax,0xa
   14000103e:	jae    0x14000118f
   140001044:	xor    r9d,r9d
   140001047:	mov    QWORD PTR [rsp+0x30],0x0
   140001050:	mov    DWORD PTR [rsp+0x28],0x2200000
   140001058:	mov    rcx,rbx
   14000105b:	mov    QWORD PTR [rsp+0x278],r14
   140001063:	mov    DWORD PTR [rsp+0x20],0x3
   14000106b:	lea    edx,[r9+0x8]
   14000106f:	lea    r8d,[r9+0x7]
   140001073:	call   QWORD PTR [rip+0x12f87]        # 0x140014000
   140001079:	mov    r14,rax
   14000107c:	test   rax,rax
   14000107f:	je     0x140001178
   140001085:	mov    ecx,0x4000
   14000108a:	mov    QWORD PTR [rsp+0x270],rdi
   140001092:	call   0x140005b7c
   140001097:	mov    rdi,rax
   14000109a:	mov    QWORD PTR [rsp+0x38],0x0
   1400010a3:	lea    rax,[rsp+0x280]
   1400010ab:	mov    DWORD PTR [rsp+0x280],0x0
   1400010b6:	mov    QWORD PTR [rsp+0x30],rax
   1400010bb:	xor    r9d,r9d
   1400010be:	mov    DWORD PTR [rsp+0x28],0x4000
   1400010c6:	xor    r8d,r8d
   1400010c9:	mov    edx,0x900a8
   1400010ce:	mov    QWORD PTR [rsp+0x20],rdi
   1400010d3:	mov    rcx,r14
   1400010d6:	call   QWORD PTR [rip+0x12f44]        # 0x140014020
   1400010dc:	mov    rcx,r14
   1400010df:	mov    ebx,eax
   1400010e1:	call   QWORD PTR [rip+0x12f29]        # 0x140014010
   1400010e7:	test   ebx,ebx
   1400010e9:	je     0x140001166
   1400010eb:	mov    eax,DWORD PTR [rdi]
   1400010ed:	test   eax,eax
   1400010ef:	jns    0x140001166
   1400010f1:	cmp    eax,0xa000000c
   1400010f6:	jne    0x140001166
   1400010f8:	movzx  r9d,WORD PTR [rdi+0x8]
   1400010fd:	shr    r9,1
   140001100:	add    r9,0xa
   140001104:	or     r8,0xffffffffffffffff
   140001108:	lea    r9,[rdi+r9*2]
   14000110c:	nop    DWORD PTR [rax+0x0]
   140001110:	inc    r8
   140001113:	cmp    WORD PTR [r9+r8*2],0x0
   140001119:	jne    0x140001110
   14000111b:	inc    r8
   14000111e:	mov    QWORD PTR [rsp+0x20],0xffffffffffffffff
   140001127:	lea    rdx,[rsp+0x40]
   14000112c:	lea    rcx,[rsp+0x288]
   140001134:	call   0x140006258
   140001139:	mov    edx,0x3a
   14000113e:	lea    rcx,[rsp+0x40]
   140001143:	call   0x140002878
   140001148:	test   rax,rax
   14000114b:	je     0x140001166
   14000114d:	lea    rcx,[rsp+0x40]
   140001152:	cmp    rax,rcx
   140001155:	jbe    0x140001166
   140001157:	lea    rdx,[rax-0x1]
   14000115b:	mov    r8d,esi
   14000115e:	mov    rcx,rbp
   140001161:	call   0x140001310
   140001166:	mov    rcx,rdi
   140001169:	call   0x140005b74
   14000116e:	mov    rdi,QWORD PTR [rsp+0x270]
   140001176:	jmp    0x140001187
   140001178:	mov    rdx,rbx
   14000117b:	lea    rcx,[rip+0x131ae]        # 0x140014330
   140001182:	call   0x140001b60
   140001187:	mov    r14,QWORD PTR [rsp+0x278]
   14000118f:	add    rsp,0x250
   140001196:	pop    rsi
   140001197:	pop    rbp
   140001198:	pop    rbx
   140001199:	ret    
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011a5:	push   rdi
   1400011a6:	sub    rsp,0x20
   1400011aa:	cmp    BYTE PTR [rcx],0x0
   1400011ad:	mov    edi,edx
   1400011af:	mov    rbx,rcx
   1400011b2:	je     0x14000128d
   1400011b8:	lea    rdx,[rip+0x1315d]        # 0x14001431c
   1400011bf:	call   0x140007bc8
   1400011c4:	test   eax,eax
   1400011c6:	je     0x14000128d
   1400011cc:	lea    rdx,[rip+0x1314d]        # 0x140014320
   1400011d3:	mov    rcx,rbx
   1400011d6:	call   0x140007bc8
   1400011db:	test   eax,eax
   1400011dd:	je     0x14000128d
   1400011e3:	or     rcx,0xffffffffffffffff
   1400011e7:	inc    rcx
   1400011ea:	cmp    BYTE PTR [rbx+rcx*1],0x0
   1400011ee:	jne    0x1400011e7
   1400011f0:	lea    edx,[rcx-0x1]
   1400011f3:	movsxd rax,edx
   1400011f6:	movzx  r8d,BYTE PTR [rax+rbx*1]
   1400011fb:	cmp    r8b,0x5c
   1400011ff:	je     0x140001207
   140001201:	cmp    r8b,0x2f
   140001205:	jne    0x140001209
   140001207:	mov    ecx,edx
   140001209:	movsxd rax,ecx
   14000120c:	test   ecx,ecx
   14000120e:	jle    0x14000123b
   140001210:	lea    rdx,[rbx-0x1]
   140001214:	mov    r8d,0x1
   14000121a:	add    rdx,rax
   14000121d:	sub    r8,rbx
   140001220:	movzx  eax,BYTE PTR [rdx]
   140001223:	cmp    al,0x5c
   140001225:	je     0x140001261
   140001227:	cmp    al,0x2f
   140001229:	je     0x140001261
   14000122b:	dec    rdx
   14000122e:	dec    ecx
   140001230:	lea    rax,[r8+rdx*1]
   140001234:	test   rax,rax
   140001237:	jg     0x140001220
   140001239:	test   ecx,ecx
   14000123b:	jne    0x140001280
   14000123d:	mov    r9d,0x5c
   140001243:	lea    r8,[rip+0x130da]        # 0x140014324
   14000124a:	mov    edx,edi
   14000124c:	mov    rcx,rbx
   14000124f:	call   0x1400012a0
   140001254:	mov    al,0x1
   140001256:	mov    rbx,QWORD PTR [rsp+0x30]
   14000125b:	add    rsp,0x20
   14000125f:	pop    rdi
   140001260:	ret    
   140001261:	movsxd rax,ecx
   140001264:	mov    BYTE PTR [rax+rbx*1],0x0
   140001268:	cmp    BYTE PTR [rbx],0x0
   14000126b:	je     0x140001280
   14000126d:	nop    DWORD PTR [rax]
   140001270:	cmp    BYTE PTR [rbx],0x2f
   140001273:	jne    0x140001278
   140001275:	mov    BYTE PTR [rbx],0x5c
   140001278:	inc    rbx
   14000127b:	cmp    BYTE PTR [rbx],0x0
   14000127e:	jne    0x140001270
   140001280:	mov    al,0x1
   140001282:	mov    rbx,QWORD PTR [rsp+0x30]
   140001287:	add    rsp,0x20
   14000128b:	pop    rdi
   14000128c:	ret    
   14000128d:	xor    al,al
   14000128f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001294:	add    rsp,0x20
   140001298:	pop    rdi
   140001299:	ret    
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	mov    QWORD PTR [rsp+0x18],r8
   1400012a5:	mov    QWORD PTR [rsp+0x20],r9
   1400012aa:	push   rbx
   1400012ab:	push   rbp
   1400012ac:	push   rsi
   1400012ad:	push   rdi
   1400012ae:	push   r14
   1400012b0:	sub    rsp,0x30
   1400012b4:	mov    rdi,r8
   1400012b7:	movsxd rsi,edx
   1400012ba:	mov    rbp,rcx
   1400012bd:	lea    r14,[rsp+0x78]
   1400012c2:	call   0x140001350
   1400012c7:	mov    QWORD PTR [rsp+0x28],r14
   1400012cc:	mov    r9,rdi
   1400012cf:	mov    r8,rsi
   1400012d2:	mov    QWORD PTR [rsp+0x20],0x0
   1400012db:	mov    rdx,rbp
   1400012de:	mov    rcx,QWORD PTR [rax]
   1400012e1:	or     rcx,0x1
   1400012e5:	call   0x140005610
   1400012ea:	or     ecx,0xffffffff
   1400012ed:	test   eax,eax
   1400012ef:	cmovs  eax,ecx
   1400012f2:	test   eax,eax
   1400012f4:	jns    0x140001302
   1400012f6:	lea    ecx,[rsi-0x1]
   1400012f9:	mov    eax,esi
   1400012fb:	movsxd rdx,ecx
   1400012fe:	mov    BYTE PTR [rdx+rbp*1],0x0
   140001302:	add    rsp,0x30
   140001306:	pop    r14
   140001308:	pop    rdi
   140001309:	pop    rsi
   14000130a:	pop    rbp
   14000130b:	pop    rbx
   14000130c:	ret    
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	mov    QWORD PTR [rsp+0x8],rbx
   140001315:	push   rdi
   140001316:	sub    rsp,0x20
   14000131a:	movsxd rbx,r8d
   14000131d:	mov    rdi,rcx
   140001320:	mov    r8,rbx
   140001323:	call   0x140005a10
   140001328:	test   ebx,ebx
   14000132a:	jle    0x140001336
   14000132c:	lea    eax,[rbx-0x1]
   14000132f:	movsxd rdx,eax
   140001332:	mov    BYTE PTR [rdx+rdi*1],0x0
   140001336:	mov    rbx,QWORD PTR [rsp+0x30]
   14000133b:	add    rsp,0x20
   14000133f:	pop    rdi
   140001340:	ret    
   140001341:	int3   
   140001342:	int3   
   140001343:	int3   
   140001344:	int3   
   140001345:	int3   
   140001346:	int3   
   140001347:	int3   
   140001348:	int3   
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	lea    rax,[rip+0x1d689]        # 0x14001e9e0
   140001357:	ret    
   140001358:	int3   
   140001359:	int3   
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	mov    QWORD PTR [rsp+0x10],rdx
   140001365:	mov    QWORD PTR [rsp+0x18],r8
   14000136a:	mov    QWORD PTR [rsp+0x20],r9
   14000136f:	push   rbx
   140001370:	push   rsi
   140001371:	push   rdi
   140001372:	sub    rsp,0x30
   140001376:	mov    rdi,rdx
   140001379:	lea    rsi,[rsp+0x60]
   14000137e:	mov    rbx,rcx
   140001381:	call   0x140001350
   140001386:	xor    r9d,r9d
   140001389:	mov    QWORD PTR [rsp+0x20],rsi
   14000138e:	mov    r8,rdi
   140001391:	mov    rdx,rbx
   140001394:	mov    rcx,QWORD PTR [rax]
   140001397:	call   0x140005584
   14000139c:	add    rsp,0x30
   1400013a0:	pop    rdi
   1400013a1:	pop    rsi
   1400013a2:	pop    rbx
   1400013a3:	ret    
   1400013a4:	int3   
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	mov    QWORD PTR [rsp+0x20],r12
   1400013b5:	push   rbp
   1400013b6:	push   r14
   1400013b8:	push   r15
   1400013ba:	lea    rbp,[rsp-0x8c0]
   1400013c2:	sub    rsp,0x9c0
   1400013c9:	mov    r14,rdx
   1400013cc:	mov    r12d,ecx
   1400013cf:	lea    rdx,[rbp+0x480]
   1400013d6:	xor    ecx,ecx
   1400013d8:	mov    r8d,0x104
   1400013de:	call   QWORD PTR [rip+0x12c44]        # 0x140014028
   1400013e4:	cmp    BYTE PTR [rbp+0x480],0x0
   1400013eb:	lea    rax,[rbp+0x480]
   1400013f2:	je     0x140001404
   1400013f4:	cmp    BYTE PTR [rax],0x2f
   1400013f7:	jne    0x1400013fc
   1400013f9:	mov    BYTE PTR [rax],0x5c
   1400013fc:	inc    rax
   1400013ff:	cmp    BYTE PTR [rax],0x0
   140001402:	jne    0x1400013f4
   140001404:	mov    r8d,0x104
   14000140a:	lea    rdx,[rbp+0x480]
   140001411:	lea    rcx,[rbp+0x590]
   140001418:	call   0x140005a10
   14000141d:	mov    edx,0x5c
   140001422:	mov    BYTE PTR [rbp+0x693],0x0
   140001429:	lea    rcx,[rbp+0x590]
   140001430:	call   0x140002904
   140001435:	mov    r15,rax
   140001438:	test   rax,rax
   14000143b:	jne    0x140001467
   14000143d:	lea    ecx,[rax+0x2]
   140001440:	call   0x140003678
   140001445:	mov    r8,QWORD PTR [r14]
   140001448:	lea    r9,[rbp+0x480]
   14000144f:	mov    rcx,rax
   140001452:	lea    rdx,[rip+0x12f27]        # 0x140014380
   140001459:	call   0x140001360
   14000145e:	lea    eax,[r15+0x1]
   140001462:	jmp    0x14000189d
   140001467:	mov    r8d,0x104
   14000146d:	mov    QWORD PTR [rsp+0x9f0],rdi
   140001475:	lea    rdx,[rbp+0x6a0]
   14000147c:	mov    BYTE PTR [rax],0x0
   14000147f:	lea    rcx,[rbp+0x590]
   140001486:	inc    r15
   140001489:	call   0x140001000
   14000148e:	mov    r8d,0x104
   140001494:	lea    rdx,[rbp+0x6a0]
   14000149b:	lea    rcx,[rbp+0x40]
   14000149f:	call   0x140005a10
   1400014a4:	or     rdi,0xffffffffffffffff
   1400014a8:	mov    BYTE PTR [rbp+0x143],0x0
   1400014af:	mov    rdx,rdi
   1400014b2:	lea    rax,[rbp+0x40]
   1400014b6:	inc    rdx
   1400014b9:	cmp    BYTE PTR [rax+rdx*1],0x0
   1400014bd:	jne    0x1400014b6
   1400014bf:	test   edx,edx
   1400014c1:	jle    0x1400014f5
   1400014c3:	lea    eax,[rdx-0x1]
   1400014c6:	movsxd rcx,eax
   1400014c9:	movzx  eax,BYTE PTR [rbp+rcx*1+0x40]
   1400014ce:	cmp    al,0x5c
   1400014d0:	je     0x1400014f5
   1400014d2:	cmp    al,0x2f
   1400014d4:	je     0x1400014f5
   1400014d6:	lea    ecx,[rdx+0x1]
   1400014d9:	cmp    ecx,0x104
   1400014df:	jge    0x140001a8d
   1400014e5:	movsxd rax,edx
   1400014e8:	mov    BYTE PTR [rbp+rax*1+0x40],0x5c
   1400014ed:	movsxd rax,ecx
   1400014f0:	mov    BYTE PTR [rbp+rax*1+0x40],0x0
   1400014f5:	mov    r8d,0x104
   1400014fb:	lea    rdx,[rip+0x12ec6]        # 0x1400143c8
   140001502:	lea    rcx,[rbp+0x40]
   140001506:	call   0x140005860
   14000150b:	cmp    BYTE PTR [rbp+0x40],0x0
   14000150f:	lea    rax,[rbp+0x40]
   140001513:	mov    BYTE PTR [rbp+0x143],0x0
   14000151a:	je     0x140001530
   14000151c:	nop    DWORD PTR [rax+0x0]
   140001520:	cmp    BYTE PTR [rax],0x2f
   140001523:	jne    0x140001528
   140001525:	mov    BYTE PTR [rax],0x5c
   140001528:	inc    rax
   14000152b:	cmp    BYTE PTR [rax],0x0
   14000152e:	jne    0x140001520
   140001530:	mov    r8d,0x104
   140001536:	lea    rdx,[rbp+0x6a0]
   14000153d:	lea    rcx,[rbp+0x150]
   140001544:	call   0x140005a10
   140001549:	lea    rax,[rbp+0x150]
   140001550:	mov    BYTE PTR [rbp+0x253],0x0
   140001557:	mov    rdx,rdi
   14000155a:	nop    WORD PTR [rax+rax*1+0x0]
   140001560:	inc    rdx
   140001563:	cmp    BYTE PTR [rax+rdx*1],0x0
   140001567:	jne    0x140001560
   140001569:	test   edx,edx
   14000156b:	jle    0x1400015a8
   14000156d:	lea    eax,[rdx-0x1]
   140001570:	movsxd rcx,eax
   140001573:	movzx  eax,BYTE PTR [rbp+rcx*1+0x150]
   14000157b:	cmp    al,0x5c
   14000157d:	je     0x1400015a8
   14000157f:	cmp    al,0x2f
   140001581:	je     0x1400015a8
   140001583:	lea    ecx,[rdx+0x1]
   140001586:	cmp    ecx,0x104
   14000158c:	jge    0x140001ab5
   140001592:	movsxd rax,edx
   140001595:	mov    BYTE PTR [rbp+rax*1+0x150],0x5c
   14000159d:	movsxd rax,ecx
   1400015a0:	mov    BYTE PTR [rbp+rax*1+0x150],0x0
   1400015a8:	mov    r8d,0x104
   1400015ae:	lea    rdx,[rip+0x12e23]        # 0x1400143d8
   1400015b5:	lea    rcx,[rbp+0x150]
   1400015bc:	call   0x140005860
   1400015c1:	cmp    BYTE PTR [rbp+0x150],0x0
   1400015c8:	lea    rax,[rbp+0x150]
   1400015cf:	mov    BYTE PTR [rbp+0x253],0x0
   1400015d6:	je     0x1400015e8
   1400015d8:	cmp    BYTE PTR [rax],0x2f
   1400015db:	jne    0x1400015e0
   1400015dd:	mov    BYTE PTR [rax],0x5c
   1400015e0:	inc    rax
   1400015e3:	cmp    BYTE PTR [rax],0x0
   1400015e6:	jne    0x1400015d8
   1400015e8:	xor    edx,edx
   1400015ea:	mov    QWORD PTR [rsp+0x9e0],rbx
   1400015f2:	lea    rcx,[rbp+0x40]
   1400015f6:	call   0x1400066b8
   1400015fb:	test   eax,eax
   1400015fd:	jne    0x140001620
   1400015ff:	xor    edx,edx
   140001601:	lea    rcx,[rbp+0x150]
   140001608:	call   0x1400066b8
   14000160d:	test   eax,eax
   14000160f:	je     0x14000192c
   140001615:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001620:	mov    r8d,0x104
   140001626:	lea    rdx,[rbp+0x6a0]
   14000162d:	lea    rcx,[rsp+0x30]
   140001632:	call   0x140005a10
   140001637:	lea    rax,[rsp+0x30]
   14000163c:	mov    BYTE PTR [rbp+0x33],0x0
   140001640:	mov    rdx,rdi
   140001643:	inc    rdx
   140001646:	cmp    BYTE PTR [rax+rdx*1],0x0
   14000164a:	jne    0x140001643
   14000164c:	test   edx,edx
   14000164e:	jle    0x140001682
   140001650:	lea    eax,[rdx-0x1]
   140001653:	movsxd rcx,eax
   140001656:	movzx  eax,BYTE PTR [rsp+rcx*1+0x30]
   14000165b:	cmp    al,0x5c
   14000165d:	je     0x140001682
   14000165f:	cmp    al,0x2f
   140001661:	je     0x140001682
   140001663:	lea    ecx,[rdx+0x1]
   140001666:	cmp    ecx,0x104
   14000166c:	jge    0x140001ae0
   140001672:	movsxd rax,edx
   140001675:	mov    BYTE PTR [rsp+rax*1+0x30],0x5c
   14000167a:	movsxd rax,ecx
   14000167d:	mov    BYTE PTR [rsp+rax*1+0x30],0x0
   140001682:	mov    r8d,0x104
   140001688:	lea    rdx,[rip+0x12d59]        # 0x1400143e8
   14000168f:	lea    rcx,[rsp+0x30]
   140001694:	call   0x140005860
   140001699:	cmp    BYTE PTR [rsp+0x30],0x0
   14000169e:	lea    rax,[rsp+0x30]
   1400016a3:	mov    BYTE PTR [rbp+0x33],0x0
   1400016a7:	je     0x1400016c0
   1400016a9:	nop    DWORD PTR [rax+0x0]
   1400016b0:	cmp    BYTE PTR [rax],0x2f
   1400016b3:	jne    0x1400016b8
   1400016b5:	mov    BYTE PTR [rax],0x5c
   1400016b8:	inc    rax
   1400016bb:	cmp    BYTE PTR [rax],0x0
   1400016be:	jne    0x1400016b0
   1400016c0:	mov    r8d,0x104
   1400016c6:	lea    rdx,[rsp+0x30]
   1400016cb:	lea    rcx,[rbp+0x260]
   1400016d2:	call   0x140005a10
   1400016d7:	lea    rax,[rbp+0x260]
   1400016de:	mov    BYTE PTR [rbp+0x363],0x0
   1400016e5:	mov    rdx,rdi
   1400016e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400016f0:	inc    rdx
   1400016f3:	cmp    BYTE PTR [rax+rdx*1],0x0
   1400016f7:	jne    0x1400016f0
   1400016f9:	test   edx,edx
   1400016fb:	jle    0x140001738
   1400016fd:	lea    eax,[rdx-0x1]
   140001700:	movsxd rcx,eax
   140001703:	movzx  eax,BYTE PTR [rbp+rcx*1+0x260]
   14000170b:	cmp    al,0x5c
   14000170d:	je     0x140001738
   14000170f:	cmp    al,0x2f
   140001711:	je     0x140001738
   140001713:	lea    ecx,[rdx+0x1]
   140001716:	cmp    ecx,0x104
   14000171c:	jge    0x140001b09
   140001722:	movsxd rax,edx
   140001725:	mov    BYTE PTR [rbp+rax*1+0x260],0x5c
   14000172d:	movsxd rax,ecx
   140001730:	mov    BYTE PTR [rbp+rax*1+0x260],0x0
   140001738:	mov    r8d,0x104
   14000173e:	lea    rdx,[rip+0x12c83]        # 0x1400143c8
   140001745:	lea    rcx,[rbp+0x260]
   14000174c:	call   0x140005860
   140001751:	cmp    BYTE PTR [rbp+0x260],0x0
   140001758:	lea    rax,[rbp+0x260]
   14000175f:	mov    BYTE PTR [rbp+0x363],0x0
   140001766:	je     0x140001778
   140001768:	cmp    BYTE PTR [rax],0x2f
   14000176b:	jne    0x140001770
   14000176d:	mov    BYTE PTR [rax],0x5c
   140001770:	inc    rax
   140001773:	cmp    BYTE PTR [rax],0x0
   140001776:	jne    0x140001768
   140001778:	mov    r8d,0x104
   14000177e:	lea    rdx,[rsp+0x30]
   140001783:	lea    rcx,[rbp+0x370]
   14000178a:	call   0x140005a10
   14000178f:	lea    rax,[rbp+0x370]
   140001796:	mov    BYTE PTR [rbp+0x473],0x0
   14000179d:	mov    rdx,rdi
   1400017a0:	inc    rdx
   1400017a3:	cmp    BYTE PTR [rax+rdx*1],0x0
   1400017a7:	jne    0x1400017a0
   1400017a9:	test   edx,edx
   1400017ab:	jle    0x1400017e8
   1400017ad:	lea    eax,[rdx-0x1]
   1400017b0:	movsxd rcx,eax
   1400017b3:	movzx  eax,BYTE PTR [rbp+rcx*1+0x370]
   1400017bb:	cmp    al,0x5c
   1400017bd:	je     0x1400017e8
   1400017bf:	cmp    al,0x2f
   1400017c1:	je     0x1400017e8
   1400017c3:	lea    ecx,[rdx+0x1]
   1400017c6:	cmp    ecx,0x104
   1400017cc:	jge    0x140001b34
   1400017d2:	movsxd rax,edx
   1400017d5:	mov    BYTE PTR [rbp+rax*1+0x370],0x5c
   1400017dd:	movsxd rax,ecx
   1400017e0:	mov    BYTE PTR [rbp+rax*1+0x370],0x0
   1400017e8:	mov    r8d,0x104
   1400017ee:	lea    rdx,[rip+0x12be3]        # 0x1400143d8
   1400017f5:	lea    rcx,[rbp+0x370]
   1400017fc:	call   0x140005860
   140001801:	cmp    BYTE PTR [rbp+0x370],0x0
   140001808:	lea    rax,[rbp+0x370]
   14000180f:	mov    BYTE PTR [rbp+0x473],0x0
   140001816:	je     0x140001828
   140001818:	cmp    BYTE PTR [rax],0x2f
   14000181b:	jne    0x140001820
   14000181d:	mov    BYTE PTR [rax],0x5c
   140001820:	inc    rax
   140001823:	cmp    BYTE PTR [rax],0x0
   140001826:	jne    0x140001818
   140001828:	xor    edx,edx
   14000182a:	lea    rcx,[rbp+0x260]
   140001831:	call   0x1400066b8
   140001836:	test   eax,eax
   140001838:	jne    0x14000184c
   14000183a:	xor    edx,edx
   14000183c:	lea    rcx,[rbp+0x370]
   140001843:	call   0x1400066b8
   140001848:	test   eax,eax
   14000184a:	je     0x1400018b2
   14000184c:	mov    edx,0x104
   140001851:	lea    rcx,[rbp+0x6a0]
   140001858:	call   0x1400011a0
   14000185d:	test   al,al
   14000185f:	jne    0x140001620
   140001865:	mov    ecx,0x2
   14000186a:	call   0x140003678
   14000186f:	mov    r8,QWORD PTR [r14]
   140001872:	lea    r9,[rbp+0x590]
   140001879:	mov    rcx,rax
   14000187c:	lea    rdx,[rip+0x12b7d]        # 0x140014400
   140001883:	call   0x140001360
   140001888:	mov    eax,0x1
   14000188d:	mov    rbx,QWORD PTR [rsp+0x9e0]
   140001895:	mov    rdi,QWORD PTR [rsp+0x9f0]
   14000189d:	mov    r12,QWORD PTR [rsp+0x9f8]
   1400018a5:	add    rsp,0x9c0
   1400018ac:	pop    r15
   1400018ae:	pop    r14
   1400018b0:	pop    rbp
   1400018b1:	ret    
   1400018b2:	mov    QWORD PTR [rsp+0x9e8],rsi
   1400018ba:	lea    rax,[rsp+0x30]
   1400018bf:	mov    rbx,rdi
   1400018c2:	inc    rbx
   1400018c5:	cmp    BYTE PTR [rax+rbx*1],0x0
   1400018c9:	jne    0x1400018c2
   1400018cb:	lea    rcx,[rip+0x12b82]        # 0x140014454
   1400018d2:	call   0x14000636c
   1400018d7:	mov    rsi,rax
   1400018da:	nop    WORD PTR [rax+rax*1+0x0]
   1400018e0:	inc    rdi
   1400018e3:	cmp    BYTE PTR [rax+rdi*1],0x0
   1400018e7:	jne    0x1400018e0
   1400018e9:	add    edi,0x7
   1400018ec:	add    ebx,edi
   1400018ee:	movsxd rcx,ebx
   1400018f1:	call   0x140001bb4
   1400018f6:	lea    r9,[rsp+0x30]
   1400018fb:	mov    QWORD PTR [rsp+0x20],rsi
   140001900:	lea    r8,[rip+0x12b59]        # 0x140014460
   140001907:	mov    edx,ebx
   140001909:	mov    rcx,rax
   14000190c:	mov    rdi,rax
   14000190f:	call   0x1400012a0
   140001914:	mov    rcx,rdi
   140001917:	call   0x1400066b0
   14000191c:	mov    rcx,rdi
   14000191f:	call   0x140001bbc
   140001924:	mov    rsi,QWORD PTR [rsp+0x9e8]
   14000192c:	lea    rax,[rbp+0x590]
   140001933:	mov    edx,0x2e
   140001938:	sub    r15,rax
   14000193b:	lea    rcx,[rbp+0x480]
   140001942:	add    rcx,r15
   140001945:	call   0x140002878
   14000194a:	test   rax,rax
   14000194d:	jne    0x14000196e
   14000194f:	lea    ecx,[rax+0x2]
   140001952:	call   0x140003678
   140001957:	mov    r8,QWORD PTR [r14]
   14000195a:	lea    rdx,[rip+0x12b0f]        # 0x140014470
   140001961:	mov    rcx,rax
   140001964:	call   0x140001360
   140001969:	jmp    0x140001888
   14000196e:	mov    BYTE PTR [rax],0x0
   140001971:	lea    r9,[rbp+0x480]
   140001978:	lea    rax,[rip+0x12b25]        # 0x1400144a4
   14000197f:	mov    edx,0x104
   140001984:	lea    r8,[rip+0x12b21]        # 0x1400144ac
   14000198b:	mov    QWORD PTR [rsp+0x20],rax
   140001990:	lea    rcx,[rbp+0x7b0]
   140001997:	call   0x1400012a0
   14000199c:	lea    rcx,[rbp+0x7b0]
   1400019a3:	call   QWORD PTR [rip+0x1268f]        # 0x140014038
   1400019a9:	test   rax,rax
   1400019ac:	jne    0x1400019e7
   1400019ae:	call   QWORD PTR [rip+0x12664]        # 0x140014018
   1400019b4:	mov    ecx,0x2
   1400019b9:	mov    ebx,eax
   1400019bb:	call   0x140003678
   1400019c0:	mov    r8,QWORD PTR [r14]
   1400019c3:	lea    r9,[rbp+0x7b0]
   1400019ca:	mov    rcx,rax
   1400019cd:	mov    DWORD PTR [rsp+0x20],ebx
   1400019d1:	lea    rdx,[rip+0x12ae0]        # 0x1400144b8
   1400019d8:	call   0x140001360
   1400019dd:	mov    eax,0x270e
   1400019e2:	jmp    0x14000188d
   1400019e7:	lea    rdx,[rip+0x12b02]        # 0x1400144f0
   1400019ee:	mov    rcx,rax
   1400019f1:	call   QWORD PTR [rip+0x12639]        # 0x140014030
   1400019f7:	test   rax,rax
   1400019fa:	jne    0x140001a33
   1400019fc:	lea    ecx,[rax+0x2]
   1400019ff:	call   0x140003678
   140001a04:	mov    r8,QWORD PTR [r14]
   140001a07:	lea    r9,[rip+0x12ae2]        # 0x1400144f0
   140001a0e:	mov    rcx,rax
   140001a11:	lea    rdx,[rip+0x12ae8]        # 0x140014500
   140001a18:	lea    rax,[rbp+0x7b0]
   140001a1f:	mov    QWORD PTR [rsp+0x20],rax
   140001a24:	call   0x140001360
   140001a29:	mov    eax,0x270d
   140001a2e:	jmp    0x14000188d
   140001a33:	xor    edx,edx
   140001a35:	lea    rcx,[rip+0x12af4]        # 0x140014530
   140001a3c:	call   rax
   140001a3e:	mov    rcx,rax
   140001a41:	test   rax,rax
   140001a44:	jne    0x140001a7d
   140001a46:	lea    ecx,[rax+0x2]
   140001a49:	call   0x140003678
   140001a4e:	mov    r8,QWORD PTR [r14]
   140001a51:	lea    r9,[rip+0x12ad8]        # 0x140014530
   140001a58:	mov    rcx,rax
   140001a5b:	lea    rdx,[rip+0x12ae6]        # 0x140014548
   140001a62:	lea    rax,[rbp+0x7b0]
   140001a69:	mov    QWORD PTR [rsp+0x20],rax
   140001a6e:	call   0x140001360
   140001a73:	mov    eax,0x270c
   140001a78:	jmp    0x14000188d
   140001a7d:	mov    rax,QWORD PTR [rax]
   140001a80:	mov    r8,r14
   140001a83:	mov    edx,r12d
   140001a86:	call   QWORD PTR [rax]
   140001a88:	jmp    0x14000188d
   140001a8d:	mov    ecx,0x2
   140001a92:	call   0x140003678
   140001a97:	mov    rcx,rax
   140001a9a:	lea    r8,[rbp+0x40]
   140001a9e:	lea    rdx,[rip+0x1284b]        # 0x1400142f0
   140001aa5:	call   0x140001360
   140001aaa:	mov    ecx,0x1
   140001aaf:	call   0x140005e2c
   140001ab4:	int3   
   140001ab5:	mov    ecx,0x2
   140001aba:	call   0x140003678
   140001abf:	mov    rcx,rax
   140001ac2:	lea    r8,[rbp+0x150]
   140001ac9:	lea    rdx,[rip+0x12820]        # 0x1400142f0
   140001ad0:	call   0x140001360
   140001ad5:	mov    ecx,0x1
   140001ada:	call   0x140005e2c
   140001adf:	int3   
   140001ae0:	mov    ecx,0x2
   140001ae5:	call   0x140003678
   140001aea:	mov    rcx,rax
   140001aed:	lea    r8,[rsp+0x30]
   140001af2:	lea    rdx,[rip+0x127f7]        # 0x1400142f0
   140001af9:	call   0x140001360
   140001afe:	mov    ecx,0x1
   140001b03:	call   0x140005e2c
   140001b08:	int3   
   140001b09:	mov    ecx,0x2
   140001b0e:	call   0x140003678
   140001b13:	mov    rcx,rax
   140001b16:	lea    r8,[rbp+0x260]
   140001b1d:	lea    rdx,[rip+0x127cc]        # 0x1400142f0
   140001b24:	call   0x140001360
   140001b29:	mov    ecx,0x1
   140001b2e:	call   0x140005e2c
   140001b33:	int3   
   140001b34:	mov    ecx,0x2
   140001b39:	call   0x140003678
   140001b3e:	mov    rcx,rax
   140001b41:	lea    r8,[rbp+0x370]
   140001b48:	lea    rdx,[rip+0x127a1]        # 0x1400142f0
   140001b4f:	call   0x140001360
   140001b54:	mov    ecx,0x1
   140001b59:	call   0x140005e2c
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	mov    QWORD PTR [rsp+0x8],rcx
   140001b65:	mov    QWORD PTR [rsp+0x10],rdx
   140001b6a:	mov    QWORD PTR [rsp+0x18],r8
   140001b6f:	mov    QWORD PTR [rsp+0x20],r9
   140001b74:	push   rbx
   140001b75:	push   rsi
   140001b76:	push   rdi
   140001b77:	sub    rsp,0x30
   140001b7b:	mov    rdi,rcx
   140001b7e:	lea    rsi,[rsp+0x58]
   140001b83:	mov    ecx,0x1
   140001b88:	call   0x140003678
   140001b8d:	mov    rbx,rax
   140001b90:	call   0x140001350
   140001b95:	xor    r9d,r9d
   140001b98:	mov    QWORD PTR [rsp+0x20],rsi
   140001b9d:	mov    r8,rdi
   140001ba0:	mov    rdx,rbx
   140001ba3:	mov    rcx,QWORD PTR [rax]
   140001ba6:	call   0x140005584
   140001bab:	add    rsp,0x30
   140001baf:	pop    rdi
   140001bb0:	pop    rsi
   140001bb1:	pop    rbx
   140001bb2:	ret    
   140001bb3:	int3   
   140001bb4:	jmp    0x140001e38
   140001bb9:	int3   
   140001bba:	int3   
   140001bbb:	int3   
   140001bbc:	jmp    0x140001e74
   140001bc1:	int3   
   140001bc2:	int3   
   140001bc3:	int3   
   140001bc4:	rex push rbx
   140001bc6:	sub    rsp,0x20
   140001bca:	mov    ecx,0x1
   140001bcf:	call   0x1400068b4
   140001bd4:	call   0x1400021d8
   140001bd9:	mov    ecx,eax
   140001bdb:	call   0x140007388
   140001be0:	call   0x1400074f4
   140001be5:	mov    rbx,rax
   140001be8:	call   0x140002380
   140001bed:	mov    ecx,0x1
   140001bf2:	mov    DWORD PTR [rbx],eax
   140001bf4:	call   0x140001f04
   140001bf9:	test   al,al
   140001bfb:	je     0x140001c69
   140001bfd:	call   0x140002420
   140001c02:	lea    rcx,[rip+0x863]        # 0x14000246c
   140001c09:	call   0x14000210c
   140001c0e:	call   0x1400021d0
   140001c13:	mov    ecx,eax
   140001c15:	call   0x140006b74
   140001c1a:	test   eax,eax
   140001c1c:	jne    0x140001c74
   140001c1e:	call   0x1400021e0
   140001c23:	call   0x140002214
   140001c28:	test   eax,eax
   140001c2a:	je     0x140001c38
   140001c2c:	lea    rcx,[rip+0x74d]        # 0x140002380
   140001c33:	call   0x14000692c
   140001c38:	call   0x140002838
   140001c3d:	call   0x140002838
   140001c42:	call   0x140002380
   140001c47:	mov    ecx,eax
   140001c49:	call   0x140007454
   140001c4e:	call   0x140007a3c
   140001c53:	test   al,al
   140001c55:	je     0x140001c5c
   140001c57:	call   0x1400072bc
   140001c5c:	call   0x140002380
   140001c61:	xor    eax,eax
   140001c63:	add    rsp,0x20
   140001c67:	pop    rbx
   140001c68:	ret    
   140001c69:	mov    ecx,0x7
   140001c6e:	call   0x140002238
   140001c73:	int3   
   140001c74:	mov    ecx,0x7
   140001c79:	call   0x140002238
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	sub    rsp,0x28
   140001c84:	call   0x1400021f8
   140001c89:	xor    eax,eax
   140001c8b:	add    rsp,0x28
   140001c8f:	ret    
   140001c90:	sub    rsp,0x28
   140001c94:	call   0x1400023d8
   140001c99:	call   0x140002380
   140001c9e:	mov    ecx,eax
   140001ca0:	add    rsp,0x28
   140001ca4:	jmp    0x1400074c8
   140001ca9:	int3   
   140001caa:	int3   
   140001cab:	int3   
   140001cac:	mov    QWORD PTR [rsp+0x8],rbx
   140001cb1:	mov    QWORD PTR [rsp+0x10],rsi
   140001cb6:	push   rdi
   140001cb7:	sub    rsp,0x30
   140001cbb:	mov    ecx,0x1
   140001cc0:	call   0x140001eb8
   140001cc5:	test   al,al
   140001cc7:	jne    0x140001cd4
   140001cc9:	mov    ecx,0x7
   140001cce:	call   0x140002238
   140001cd3:	int3   
   140001cd4:	xor    sil,sil
   140001cd7:	mov    BYTE PTR [rsp+0x20],sil
   140001cdc:	call   0x140001e7c
   140001ce1:	mov    bl,al
   140001ce3:	mov    ecx,DWORD PTR [rip+0x1cd07]        # 0x14001e9f0
   140001ce9:	cmp    ecx,0x1
   140001cec:	jne    0x140001cf8
   140001cee:	mov    ecx,0x7
   140001cf3:	call   0x140002238
   140001cf8:	test   ecx,ecx
   140001cfa:	jne    0x140001d46
   140001cfc:	mov    DWORD PTR [rip+0x1ccea],0x1        # 0x14001e9f0
   140001d06:	lea    rdx,[rip+0x125a3]        # 0x1400142b0
   140001d0d:	lea    rcx,[rip+0x1256c]        # 0x140014280
   140001d14:	call   0x14000733c
   140001d19:	test   eax,eax
   140001d1b:	je     0x140001d27
   140001d1d:	mov    eax,0xff
   140001d22:	jmp    0x140001e13
   140001d27:	lea    rdx,[rip+0x1254a]        # 0x140014278
   140001d2e:	lea    rcx,[rip+0x12533]        # 0x140014268
   140001d35:	call   0x1400072c4
   140001d3a:	mov    DWORD PTR [rip+0x1ccac],0x2        # 0x14001e9f0
   140001d44:	jmp    0x140001d4e
   140001d46:	mov    sil,0x1
   140001d49:	mov    BYTE PTR [rsp+0x20],sil
   140001d4e:	mov    cl,bl
   140001d50:	call   0x14000206c
   140001d55:	call   0x140002220
   140001d5a:	mov    rbx,rax
   140001d5d:	cmp    QWORD PTR [rax],0x0
   140001d61:	je     0x140001d85
   140001d63:	mov    rcx,rax
   140001d66:	call   0x140001fd0
   140001d6b:	test   al,al
   140001d6d:	je     0x140001d85
   140001d6f:	mov    rbx,QWORD PTR [rbx]
   140001d72:	mov    rcx,rbx
   140001d75:	call   0x1400024b8
   140001d7a:	xor    r8d,r8d
   140001d7d:	lea    edx,[r8+0x2]
   140001d81:	xor    ecx,ecx
   140001d83:	call   rbx
   140001d85:	call   0x140002228
   140001d8a:	mov    rbx,rax
   140001d8d:	cmp    QWORD PTR [rax],0x0
   140001d91:	je     0x140001da7
   140001d93:	mov    rcx,rax
   140001d96:	call   0x140001fd0
   140001d9b:	test   al,al
   140001d9d:	je     0x140001da7
   140001d9f:	mov    rcx,QWORD PTR [rbx]
   140001da2:	call   0x140005de8
   140001da7:	call   0x1400073f8
   140001dac:	mov    rdi,rax
   140001daf:	call   0x1400073f0
   140001db4:	mov    rbx,rax
   140001db7:	call   0x140007298
   140001dbc:	mov    r8,rax
   140001dbf:	mov    rdx,QWORD PTR [rdi]
   140001dc2:	mov    ecx,DWORD PTR [rbx]
   140001dc4:	call   0x1400013b0
   140001dc9:	mov    ebx,eax
   140001dcb:	call   0x140002384
   140001dd0:	test   al,al
   140001dd2:	jne    0x140001ddb
   140001dd4:	mov    ecx,ebx
   140001dd6:	call   0x140005e2c
   140001ddb:	test   sil,sil
   140001dde:	jne    0x140001de5
   140001de0:	call   0x140005dcc
   140001de5:	xor    edx,edx
   140001de7:	mov    cl,0x1
   140001de9:	call   0x140002090
   140001dee:	mov    eax,ebx
   140001df0:	jmp    0x140001e13
   140001df2:	mov    ebx,eax
   140001df4:	call   0x140002384
   140001df9:	test   al,al
   140001dfb:	jne    0x140001e05
   140001dfd:	mov    ecx,ebx
   140001dff:	call   0x140005ddc
   140001e04:	int3   
   140001e05:	cmp    BYTE PTR [rsp+0x20],0x0
   140001e0a:	jne    0x140001e11
   140001e0c:	call   0x140005dbc
   140001e11:	mov    eax,ebx
   140001e13:	mov    rbx,QWORD PTR [rsp+0x40]
   140001e18:	mov    rsi,QWORD PTR [rsp+0x48]
   140001e1d:	add    rsp,0x30
   140001e21:	pop    rdi
   140001e22:	ret    
   140001e23:	int3   
   140001e24:	sub    rsp,0x28
   140001e28:	call   0x140002124
   140001e2d:	add    rsp,0x28
   140001e31:	jmp    0x140001cac
   140001e36:	int3   
   140001e37:	int3   
   140001e38:	rex push rbx
   140001e3a:	sub    rsp,0x20
   140001e3e:	mov    rbx,rcx
   140001e41:	jmp    0x140001e64
   140001e43:	mov    rcx,rbx
   140001e46:	call   0x140007504
   140001e4b:	test   eax,eax
   140001e4d:	jne    0x140001e61
   140001e4f:	cmp    rbx,0xffffffffffffffff
   140001e53:	jne    0x140001e5c
   140001e55:	call   0x140002630
   140001e5a:	jmp    0x140001e61
   140001e5c:	call   0x140002610
   140001e61:	mov    rcx,rbx
   140001e64:	call   0x140005b7c
   140001e69:	test   rax,rax
   140001e6c:	je     0x140001e43
   140001e6e:	add    rsp,0x20
   140001e72:	pop    rbx
   140001e73:	ret    
   140001e74:	jmp    0x140005b74
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	sub    rsp,0x28
   140001e80:	call   0x14000282c
   140001e85:	test   eax,eax
   140001e87:	je     0x140001eaa
   140001e89:	mov    rax,QWORD PTR gs:0x30
   140001e92:	mov    rcx,QWORD PTR [rax+0x8]
   140001e96:	jmp    0x140001e9d
   140001e98:	cmp    rcx,rax
   140001e9b:	je     0x140001eb1
   140001e9d:	xor    eax,eax
   140001e9f:	lock cmpxchg QWORD PTR [rip+0x1cb50],rcx        # 0x14001e9f8
   140001ea8:	jne    0x140001e98
   140001eaa:	xor    al,al
   140001eac:	add    rsp,0x28
   140001eb0:	ret    
   140001eb1:	mov    al,0x1
   140001eb3:	jmp    0x140001eac
   140001eb5:	int3   
   140001eb6:	int3   
   140001eb7:	int3   
   140001eb8:	rex push rbx
   140001eba:	sub    rsp,0x20
   140001ebe:	movzx  eax,BYTE PTR [rip+0x1cb6b]        # 0x14001ea30
   140001ec5:	test   ecx,ecx
   140001ec7:	mov    ebx,0x1
   140001ecc:	cmove  eax,ebx
   140001ecf:	mov    BYTE PTR [rip+0x1cb5b],al        # 0x14001ea30
   140001ed5:	call   0x140002664
   140001eda:	call   0x140002c40
   140001edf:	test   al,al
   140001ee1:	jne    0x140001ee7
   140001ee3:	xor    al,al
   140001ee5:	jmp    0x140001efb
   140001ee7:	call   0x140007b3c
   140001eec:	test   al,al
   140001eee:	jne    0x140001ef9
   140001ef0:	xor    ecx,ecx
   140001ef2:	call   0x140002c74
   140001ef7:	jmp    0x140001ee3
   140001ef9:	mov    al,bl
   140001efb:	add    rsp,0x20
   140001eff:	pop    rbx
   140001f00:	ret    
   140001f01:	int3   
   140001f02:	int3   
   140001f03:	int3   
   140001f04:	mov    QWORD PTR [rsp+0x8],rbx
   140001f09:	push   rbp
   140001f0a:	mov    rbp,rsp
   140001f0d:	sub    rsp,0x40
   140001f11:	mov    ebx,ecx
   140001f13:	cmp    ecx,0x1
   140001f16:	ja     0x140001fc2
   140001f1c:	call   0x14000282c
   140001f21:	test   eax,eax
   140001f23:	je     0x140001f50
   140001f25:	test   ebx,ebx
   140001f27:	jne    0x140001f50
   140001f29:	lea    rcx,[rip+0x1cad0]        # 0x14001ea00
   140001f30:	call   0x14000797c
   140001f35:	test   eax,eax
   140001f37:	je     0x140001f3d
   140001f39:	xor    al,al
   140001f3b:	jmp    0x140001fb7
   140001f3d:	lea    rcx,[rip+0x1cad4]        # 0x14001ea18
   140001f44:	call   0x14000797c
   140001f49:	test   eax,eax
   140001f4b:	sete   al
   140001f4e:	jmp    0x140001fb7
   140001f50:	mov    rdx,QWORD PTR [rip+0x1c0c1]        # 0x14001e018
   140001f57:	or     r8,0xffffffffffffffff
   140001f5b:	mov    eax,edx
   140001f5d:	mov    ecx,0x40
   140001f62:	and    eax,0x3f
   140001f65:	sub    ecx,eax
   140001f67:	mov    al,0x1
   140001f69:	ror    r8,cl
   140001f6c:	xor    r8,rdx
   140001f6f:	mov    QWORD PTR [rbp-0x20],r8
   140001f73:	mov    QWORD PTR [rbp-0x18],r8
   140001f77:	movups xmm0,XMMWORD PTR [rbp-0x20]
   140001f7b:	mov    QWORD PTR [rbp-0x10],r8
   140001f7f:	movsd  xmm1,QWORD PTR [rbp-0x10]
   140001f84:	movups XMMWORD PTR [rip+0x1ca75],xmm0        # 0x14001ea00
   140001f8b:	mov    QWORD PTR [rbp-0x20],r8
   140001f8f:	mov    QWORD PTR [rbp-0x18],r8
   140001f93:	movups xmm0,XMMWORD PTR [rbp-0x20]
   140001f97:	mov    QWORD PTR [rbp-0x10],r8
   140001f9b:	movsd  QWORD PTR [rip+0x1ca6d],xmm1        # 0x14001ea10
   140001fa3:	movsd  xmm1,QWORD PTR [rbp-0x10]
   140001fa8:	movups XMMWORD PTR [rip+0x1ca69],xmm0        # 0x14001ea18
   140001faf:	movsd  QWORD PTR [rip+0x1ca71],xmm1        # 0x14001ea28
   140001fb7:	mov    rbx,QWORD PTR [rsp+0x50]
   140001fbc:	add    rsp,0x40
   140001fc0:	pop    rbp
   140001fc1:	ret    
   140001fc2:	mov    ecx,0x5
   140001fc7:	call   0x140002238
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	sub    rsp,0x18
   140001fd4:	mov    r8,rcx
   140001fd7:	mov    eax,0x5a4d
   140001fdc:	cmp    WORD PTR [rip+0xffffffffffffe01d],ax        # 0x140000000
   140001fe3:	jne    0x14000205e
   140001fe5:	movsxd rax,DWORD PTR [rip+0xffffffffffffe050]        # 0x14000003c
   140001fec:	lea    rdx,[rip+0xffffffffffffe00d]        # 0x140000000
   140001ff3:	lea    rcx,[rax+rdx*1]
   140001ff7:	cmp    DWORD PTR [rcx],0x4550
   140001ffd:	jne    0x14000205e
   140001fff:	mov    eax,0x20b
   140002004:	cmp    WORD PTR [rcx+0x18],ax
   140002008:	jne    0x14000205e
   14000200a:	sub    r8,rdx
   14000200d:	movzx  eax,WORD PTR [rcx+0x14]
   140002011:	lea    rdx,[rcx+0x18]
   140002015:	add    rdx,rax
   140002018:	movzx  eax,WORD PTR [rcx+0x6]
   14000201c:	lea    rcx,[rax+rax*4]
   140002020:	lea    r9,[rdx+rcx*8]
   140002024:	mov    QWORD PTR [rsp],rdx
   140002028:	cmp    rdx,r9
   14000202b:	je     0x140002045
   14000202d:	mov    ecx,DWORD PTR [rdx+0xc]
   140002030:	cmp    r8,rcx
   140002033:	jb     0x14000203f
   140002035:	mov    eax,DWORD PTR [rdx+0x8]
   140002038:	add    eax,ecx
   14000203a:	cmp    r8,rax
   14000203d:	jb     0x140002047
   14000203f:	add    rdx,0x28
   140002043:	jmp    0x140002024
   140002045:	xor    edx,edx
   140002047:	test   rdx,rdx
   14000204a:	jne    0x140002050
   14000204c:	xor    al,al
   14000204e:	jmp    0x140002064
   140002050:	cmp    DWORD PTR [rdx+0x24],0x0
   140002054:	jge    0x14000205a
   140002056:	xor    al,al
   140002058:	jmp    0x140002064
   14000205a:	mov    al,0x1
   14000205c:	jmp    0x140002064
   14000205e:	xor    al,al
   140002060:	jmp    0x140002064
   140002062:	xor    al,al
   140002064:	add    rsp,0x18
   140002068:	ret    
   140002069:	int3   
   14000206a:	int3   
   14000206b:	int3   
   14000206c:	rex push rbx
   14000206e:	sub    rsp,0x20
   140002072:	mov    bl,cl
   140002074:	call   0x14000282c
   140002079:	xor    edx,edx
   14000207b:	test   eax,eax
   14000207d:	je     0x14000208a
   14000207f:	test   bl,bl
   140002081:	jne    0x14000208a
   140002083:	xchg   QWORD PTR [rip+0x1c96e],rdx        # 0x14001e9f8
   14000208a:	add    rsp,0x20
   14000208e:	pop    rbx
   14000208f:	ret    
   140002090:	rex push rbx
   140002092:	sub    rsp,0x20
   140002096:	cmp    BYTE PTR [rip+0x1c993],0x0        # 0x14001ea30
   14000209d:	mov    bl,cl
   14000209f:	je     0x1400020a5
   1400020a1:	test   dl,dl
   1400020a3:	jne    0x1400020b3
   1400020a5:	mov    cl,bl
   1400020a7:	call   0x140007b50
   1400020ac:	mov    cl,bl
   1400020ae:	call   0x140002c74
   1400020b3:	mov    al,0x1
   1400020b5:	add    rsp,0x20
   1400020b9:	pop    rbx
   1400020ba:	ret    
   1400020bb:	int3   
   1400020bc:	rex push rbx
   1400020be:	sub    rsp,0x20
   1400020c2:	mov    rdx,QWORD PTR [rip+0x1bf4f]        # 0x14001e018
   1400020c9:	mov    rbx,rcx
   1400020cc:	mov    ecx,edx
   1400020ce:	xor    rdx,QWORD PTR [rip+0x1c92b]        # 0x14001ea00
   1400020d5:	and    ecx,0x3f
   1400020d8:	ror    rdx,cl
   1400020db:	cmp    rdx,0xffffffffffffffff
   1400020df:	jne    0x1400020eb
   1400020e1:	mov    rcx,rbx
   1400020e4:	call   0x140007930
   1400020e9:	jmp    0x1400020fa
   1400020eb:	mov    rdx,rbx
   1400020ee:	lea    rcx,[rip+0x1c90b]        # 0x14001ea00
   1400020f5:	call   0x1400079bc
   1400020fa:	xor    ecx,ecx
   1400020fc:	test   eax,eax
   1400020fe:	cmove  rcx,rbx
   140002102:	mov    rax,rcx
   140002105:	add    rsp,0x20
   140002109:	pop    rbx
   14000210a:	ret    
   14000210b:	int3   
   14000210c:	sub    rsp,0x28
   140002110:	call   0x1400020bc
   140002115:	neg    rax
   140002118:	sbb    eax,eax
   14000211a:	neg    eax
   14000211c:	dec    eax
   14000211e:	add    rsp,0x28
   140002122:	ret    
   140002123:	int3   
   140002124:	mov    QWORD PTR [rsp+0x20],rbx
   140002129:	push   rbp
   14000212a:	mov    rbp,rsp
   14000212d:	sub    rsp,0x20
   140002131:	and    QWORD PTR [rbp+0x18],0x0
   140002136:	movabs rbx,0x2b992ddfa232
   140002140:	mov    rax,QWORD PTR [rip+0x1bed1]        # 0x14001e018
   140002147:	cmp    rax,rbx
   14000214a:	jne    0x1400021bb
   14000214c:	lea    rcx,[rbp+0x18]
   140002150:	call   QWORD PTR [rip+0x11f02]        # 0x140014058
   140002156:	mov    rax,QWORD PTR [rbp+0x18]
   14000215a:	mov    QWORD PTR [rbp+0x10],rax
   14000215e:	call   QWORD PTR [rip+0x11eec]        # 0x140014050
   140002164:	mov    eax,eax
   140002166:	xor    QWORD PTR [rbp+0x10],rax
   14000216a:	call   QWORD PTR [rip+0x11ed8]        # 0x140014048
   140002170:	mov    eax,eax
   140002172:	lea    rcx,[rbp+0x20]
   140002176:	xor    QWORD PTR [rbp+0x10],rax
   14000217a:	call   QWORD PTR [rip+0x11ec0]        # 0x140014040
   140002180:	mov    eax,DWORD PTR [rbp+0x20]
   140002183:	lea    rcx,[rbp+0x10]
   140002187:	shl    rax,0x20
   14000218b:	xor    rax,QWORD PTR [rbp+0x20]
   14000218f:	xor    rax,QWORD PTR [rbp+0x10]
   140002193:	xor    rax,rcx
   140002196:	movabs rcx,0xffffffffffff
   1400021a0:	and    rax,rcx
   1400021a3:	movabs rcx,0x2b992ddfa233
   1400021ad:	cmp    rax,rbx
   1400021b0:	cmove  rax,rcx
   1400021b4:	mov    QWORD PTR [rip+0x1be5d],rax        # 0x14001e018
   1400021bb:	mov    rbx,QWORD PTR [rsp+0x48]
   1400021c0:	not    rax
   1400021c3:	mov    QWORD PTR [rip+0x1be56],rax        # 0x14001e020
   1400021ca:	add    rsp,0x20
   1400021ce:	pop    rbp
   1400021cf:	ret    
   1400021d0:	mov    eax,0x1
   1400021d5:	ret    
   1400021d6:	int3   
   1400021d7:	int3   
   1400021d8:	mov    eax,0x4000
   1400021dd:	ret    
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	lea    rcx,[rip+0x1c859]        # 0x14001ea40
   1400021e7:	rex.W jmp QWORD PTR [rip+0x11e72]        # 0x140014060
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	lea    rax,[rip+0x1c859]        # 0x14001ea50
   1400021f7:	ret    
   1400021f8:	sub    rsp,0x28
   1400021fc:	call   0x140001350
   140002201:	or     QWORD PTR [rax],0x4
   140002205:	call   0x1400021f0
   14000220a:	or     QWORD PTR [rax],0x2
   14000220e:	add    rsp,0x28
   140002212:	ret    
   140002213:	int3   
   140002214:	xor    eax,eax
   140002216:	cmp    DWORD PTR [rip+0x1bde8],eax        # 0x14001e004
   14000221c:	sete   al
   14000221f:	ret    
   140002220:	lea    rax,[rip+0x1d979]        # 0x14001fba0
   140002227:	ret    
   140002228:	lea    rax,[rip+0x1d969]        # 0x14001fb98
   14000222f:	ret    
   140002230:	and    DWORD PTR [rip+0x1c821],0x0        # 0x14001ea58
   140002237:	ret    
   140002238:	mov    QWORD PTR [rsp+0x8],rbx
   14000223d:	push   rbp
   14000223e:	lea    rbp,[rsp-0x4c0]
   140002246:	sub    rsp,0x5c0
   14000224d:	mov    ebx,ecx
   14000224f:	mov    ecx,0x17
   140002254:	call   0x140002870
   140002259:	test   eax,eax
   14000225b:	je     0x140002261
   14000225d:	mov    ecx,ebx
   14000225f:	int    0x29
   140002261:	and    DWORD PTR [rip+0x1c7f0],0x0        # 0x14001ea58
   140002268:	lea    rcx,[rbp-0x10]
   14000226c:	xor    edx,edx
   14000226e:	mov    r8d,0x4d0
   140002274:	call   0x140002cb0
   140002279:	lea    rcx,[rbp-0x10]
   14000227d:	call   QWORD PTR [rip+0x11de5]        # 0x140014068
   140002283:	mov    rbx,QWORD PTR [rbp+0xe8]
   14000228a:	lea    rdx,[rbp+0x4d8]
   140002291:	mov    rcx,rbx
   140002294:	xor    r8d,r8d
   140002297:	call   QWORD PTR [rip+0x11dd3]        # 0x140014070
   14000229d:	test   rax,rax
   1400022a0:	je     0x1400022de
   1400022a2:	and    QWORD PTR [rsp+0x38],0x0
   1400022a8:	lea    rcx,[rbp+0x4e0]
   1400022af:	mov    rdx,QWORD PTR [rbp+0x4d8]
   1400022b6:	mov    r9,rax
   1400022b9:	mov    QWORD PTR [rsp+0x30],rcx
   1400022be:	mov    r8,rbx
   1400022c1:	lea    rcx,[rbp+0x4e8]
   1400022c8:	mov    QWORD PTR [rsp+0x28],rcx
   1400022cd:	lea    rcx,[rbp-0x10]
   1400022d1:	mov    QWORD PTR [rsp+0x20],rcx
   1400022d6:	xor    ecx,ecx
   1400022d8:	call   QWORD PTR [rip+0x11d9a]        # 0x140014078
   1400022de:	mov    rax,QWORD PTR [rbp+0x4c8]
   1400022e5:	lea    rcx,[rsp+0x50]
   1400022ea:	mov    QWORD PTR [rbp+0xe8],rax
   1400022f1:	xor    edx,edx
   1400022f3:	lea    rax,[rbp+0x4c8]
   1400022fa:	mov    r8d,0x98
   140002300:	add    rax,0x8
   140002304:	mov    QWORD PTR [rbp+0x88],rax
   14000230b:	call   0x140002cb0
   140002310:	mov    rax,QWORD PTR [rbp+0x4c8]
   140002317:	mov    QWORD PTR [rsp+0x60],rax
   14000231c:	mov    DWORD PTR [rsp+0x50],0x40000015
   140002324:	mov    DWORD PTR [rsp+0x54],0x1
   14000232c:	call   QWORD PTR [rip+0x11d4e]        # 0x140014080
   140002332:	cmp    eax,0x1
   140002335:	lea    rax,[rsp+0x50]
   14000233a:	mov    QWORD PTR [rsp+0x40],rax
   14000233f:	lea    rax,[rbp-0x10]
   140002343:	sete   bl
   140002346:	mov    QWORD PTR [rsp+0x48],rax
   14000234b:	xor    ecx,ecx
   14000234d:	call   QWORD PTR [rip+0x11d3d]        # 0x140014090
   140002353:	lea    rcx,[rsp+0x40]
   140002358:	call   QWORD PTR [rip+0x11d2a]        # 0x140014088
   14000235e:	test   eax,eax
   140002360:	jne    0x14000236c
   140002362:	neg    bl
   140002364:	sbb    eax,eax
   140002366:	and    DWORD PTR [rip+0x1c6ec],eax        # 0x14001ea58
   14000236c:	mov    rbx,QWORD PTR [rsp+0x5d0]
   140002374:	add    rsp,0x5c0
   14000237b:	pop    rbp
   14000237c:	ret    
   14000237d:	int3   
   14000237e:	int3   
   14000237f:	int3   
   140002380:	xor    eax,eax
   140002382:	ret    
   140002383:	int3   
   140002384:	sub    rsp,0x28
   140002388:	xor    ecx,ecx
   14000238a:	call   QWORD PTR [rip+0x11d18]        # 0x1400140a8
   140002390:	mov    rcx,rax
   140002393:	test   rax,rax
   140002396:	jne    0x14000239c
   140002398:	xor    al,al
   14000239a:	jmp    0x1400023d3
   14000239c:	mov    eax,0x5a4d
   1400023a1:	cmp    WORD PTR [rcx],ax
   1400023a4:	jne    0x140002398
   1400023a6:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400023aa:	add    rax,rcx
   1400023ad:	cmp    DWORD PTR [rax],0x4550
   1400023b3:	jne    0x140002398
   1400023b5:	mov    ecx,0x20b
   1400023ba:	cmp    WORD PTR [rax+0x18],cx
   1400023be:	jne    0x140002398
   1400023c0:	cmp    DWORD PTR [rax+0x84],0xe
   1400023c7:	jbe    0x140002398
   1400023c9:	cmp    DWORD PTR [rax+0xf8],0x0
   1400023d0:	setne  al
   1400023d3:	add    rsp,0x28
   1400023d7:	ret    
   1400023d8:	lea    rcx,[rip+0x9]        # 0x1400023e8
   1400023df:	rex.W jmp QWORD PTR [rip+0x11caa]        # 0x140014090
   1400023e6:	int3   
   1400023e7:	int3   
   1400023e8:	sub    rsp,0x28
   1400023ec:	mov    rax,QWORD PTR [rcx]
   1400023ef:	cmp    DWORD PTR [rax],0xe06d7363
   1400023f5:	jne    0x140002413
   1400023f7:	cmp    DWORD PTR [rax+0x18],0x4
   1400023fb:	jne    0x140002413
   1400023fd:	mov    ecx,DWORD PTR [rax+0x20]
   140002400:	lea    eax,[rcx-0x19930520]
   140002406:	cmp    eax,0x2
   140002409:	jbe    0x14000241a
   14000240b:	cmp    ecx,0x1994000
   140002411:	je     0x14000241a
   140002413:	xor    eax,eax
   140002415:	add    rsp,0x28
   140002419:	ret    
   14000241a:	call   0x140007b64
   14000241f:	int3   
   140002420:	mov    QWORD PTR [rsp+0x8],rbx
   140002425:	mov    QWORD PTR [rsp+0x10],rsi
   14000242a:	push   rdi
   14000242b:	sub    rsp,0x20
   14000242f:	lea    rbx,[rip+0x1a252]        # 0x14001c688
   140002436:	lea    rsi,[rip+0x1a24b]        # 0x14001c688
   14000243d:	jmp    0x140002455
   14000243f:	mov    rdi,QWORD PTR [rbx]
   140002442:	test   rdi,rdi
   140002445:	je     0x140002451
   140002447:	mov    rcx,rdi
   14000244a:	call   0x1400024b8
   14000244f:	call   rdi
   140002451:	add    rbx,0x8
   140002455:	cmp    rbx,rsi
   140002458:	jb     0x14000243f
   14000245a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000245f:	mov    rsi,QWORD PTR [rsp+0x38]
   140002464:	add    rsp,0x20
   140002468:	pop    rdi
   140002469:	ret    
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	mov    QWORD PTR [rsp+0x8],rbx
   140002471:	mov    QWORD PTR [rsp+0x10],rsi
   140002476:	push   rdi
   140002477:	sub    rsp,0x20
   14000247b:	lea    rbx,[rip+0x1a216]        # 0x14001c698
   140002482:	lea    rsi,[rip+0x1a20f]        # 0x14001c698
   140002489:	jmp    0x1400024a1
   14000248b:	mov    rdi,QWORD PTR [rbx]
   14000248e:	test   rdi,rdi
   140002491:	je     0x14000249d
   140002493:	mov    rcx,rdi
   140002496:	call   0x1400024b8
   14000249b:	call   rdi
   14000249d:	add    rbx,0x8
   1400024a1:	cmp    rbx,rsi
   1400024a4:	jb     0x14000248b
   1400024a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024ab:	mov    rsi,QWORD PTR [rsp+0x38]
   1400024b0:	add    rsp,0x20
   1400024b4:	pop    rdi
   1400024b5:	ret    
   1400024b6:	int3   
   1400024b7:	int3   
   1400024b8:	rex.W jmp QWORD PTR [rip+0x11d99]        # 0x140014258
   1400024bf:	int3   
   1400024c0:	rex push rbx
   1400024c2:	sub    rsp,0x20
   1400024c6:	mov    rbx,rcx
   1400024c9:	mov    rax,rdx
   1400024cc:	lea    rcx,[rip+0x120b5]        # 0x140014588
   1400024d3:	mov    QWORD PTR [rbx],rcx
   1400024d6:	lea    rdx,[rbx+0x8]
   1400024da:	xor    ecx,ecx
   1400024dc:	mov    QWORD PTR [rdx],rcx
   1400024df:	mov    QWORD PTR [rdx+0x8],rcx
   1400024e3:	lea    rcx,[rax+0x8]
   1400024e7:	call   0x140002e50
   1400024ec:	lea    rax,[rip+0x120c5]        # 0x1400145b8
   1400024f3:	mov    QWORD PTR [rbx],rax
   1400024f6:	mov    rax,rbx
   1400024f9:	add    rsp,0x20
   1400024fd:	pop    rbx
   1400024fe:	ret    
   1400024ff:	int3   
   140002500:	xor    eax,eax
   140002502:	mov    QWORD PTR [rcx+0x10],rax
   140002506:	lea    rax,[rip+0x120bb]        # 0x1400145c8
   14000250d:	mov    QWORD PTR [rcx+0x8],rax
   140002511:	lea    rax,[rip+0x120a0]        # 0x1400145b8
   140002518:	mov    QWORD PTR [rcx],rax
   14000251b:	mov    rax,rcx
   14000251e:	ret    
   14000251f:	int3   
   140002520:	rex push rbx
   140002522:	sub    rsp,0x20
   140002526:	mov    rbx,rcx
   140002529:	mov    rax,rdx
   14000252c:	lea    rcx,[rip+0x12055]        # 0x140014588
   140002533:	mov    QWORD PTR [rbx],rcx
   140002536:	lea    rdx,[rbx+0x8]
   14000253a:	xor    ecx,ecx
   14000253c:	mov    QWORD PTR [rdx],rcx
   14000253f:	mov    QWORD PTR [rdx+0x8],rcx
   140002543:	lea    rcx,[rax+0x8]
   140002547:	call   0x140002e50
   14000254c:	lea    rax,[rip+0x1208d]        # 0x1400145e0
   140002553:	mov    QWORD PTR [rbx],rax
   140002556:	mov    rax,rbx
   140002559:	add    rsp,0x20
   14000255d:	pop    rbx
   14000255e:	ret    
   14000255f:	int3   
   140002560:	xor    eax,eax
   140002562:	mov    QWORD PTR [rcx+0x10],rax
   140002566:	lea    rax,[rip+0x12083]        # 0x1400145f0
   14000256d:	mov    QWORD PTR [rcx+0x8],rax
   140002571:	lea    rax,[rip+0x12068]        # 0x1400145e0
   140002578:	mov    QWORD PTR [rcx],rax
   14000257b:	mov    rax,rcx
   14000257e:	ret    
   14000257f:	int3   
   140002580:	rex push rbx
   140002582:	sub    rsp,0x20
   140002586:	mov    rbx,rcx
   140002589:	mov    rax,rdx
   14000258c:	lea    rcx,[rip+0x11ff5]        # 0x140014588
   140002593:	mov    QWORD PTR [rbx],rcx
   140002596:	lea    rdx,[rbx+0x8]
   14000259a:	xor    ecx,ecx
   14000259c:	mov    QWORD PTR [rdx],rcx
   14000259f:	mov    QWORD PTR [rdx+0x8],rcx
   1400025a3:	lea    rcx,[rax+0x8]
   1400025a7:	call   0x140002e50
   1400025ac:	mov    rax,rbx
   1400025af:	add    rsp,0x20
   1400025b3:	pop    rbx
   1400025b4:	ret    
   1400025b5:	int3   
   1400025b6:	int3   
   1400025b7:	int3   
   1400025b8:	lea    rax,[rip+0x11fc9]        # 0x140014588
   1400025bf:	mov    QWORD PTR [rcx],rax
   1400025c2:	add    rcx,0x8
   1400025c6:	jmp    0x140002ee0
   1400025cb:	int3   
   1400025cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400025d1:	push   rdi
   1400025d2:	sub    rsp,0x20
   1400025d6:	lea    rax,[rip+0x11fab]        # 0x140014588
   1400025dd:	mov    rdi,rcx
   1400025e0:	mov    QWORD PTR [rcx],rax
   1400025e3:	mov    ebx,edx
   1400025e5:	add    rcx,0x8
   1400025e9:	call   0x140002ee0
   1400025ee:	test   bl,0x1
   1400025f1:	je     0x140002600
   1400025f3:	mov    edx,0x18
   1400025f8:	mov    rcx,rdi
   1400025fb:	call   0x140001bbc
   140002600:	mov    rax,rdi
   140002603:	mov    rbx,QWORD PTR [rsp+0x30]
   140002608:	add    rsp,0x20
   14000260c:	pop    rdi
   14000260d:	ret    
   14000260e:	int3   
   14000260f:	int3   
   140002610:	sub    rsp,0x48
   140002614:	lea    rcx,[rsp+0x20]
   140002619:	call   0x140002500
   14000261e:	lea    rdx,[rip+0x1af4b]        # 0x14001d570
   140002625:	lea    rcx,[rsp+0x20]
   14000262a:	call   0x140002f08
   14000262f:	int3   
   140002630:	sub    rsp,0x48
   140002634:	lea    rcx,[rsp+0x20]
   140002639:	call   0x140002560
   14000263e:	lea    rdx,[rip+0x1afb3]        # 0x14001d5f8
   140002645:	lea    rcx,[rsp+0x20]
   14000264a:	call   0x140002f08
   14000264f:	int3   
   140002650:	cmp    QWORD PTR [rcx+0x8],0x0
   140002655:	lea    rax,[rip+0x11f3c]        # 0x140014598
   14000265c:	cmovne rax,QWORD PTR [rcx+0x8]
   140002661:	ret    
   140002662:	int3   
   140002663:	int3   
   140002664:	mov    QWORD PTR [rsp+0x10],rbx
   140002669:	mov    QWORD PTR [rsp+0x18],rdi
   14000266e:	push   rbp
   14000266f:	mov    rbp,rsp
   140002672:	sub    rsp,0x20
   140002676:	and    DWORD PTR [rbp-0x18],0x0
   14000267a:	xor    ecx,ecx
   14000267c:	xor    eax,eax
   14000267e:	mov    DWORD PTR [rip+0x1b984],0x2        # 0x14001e00c
   140002688:	cpuid  
   14000268a:	mov    r8d,ecx
   14000268d:	mov    DWORD PTR [rip+0x1b971],0x1        # 0x14001e008
   140002697:	xor    ecx,0x444d4163
   14000269d:	mov    r9d,edx
   1400026a0:	mov    r10d,edx
   1400026a3:	xor    r9d,0x69746e65
   1400026aa:	xor    r10d,0x49656e69
   1400026b1:	xor    r8d,0x6c65746e
   1400026b8:	or     r10d,r8d
   1400026bb:	mov    r11d,ebx
   1400026be:	mov    r8d,DWORD PTR [rip+0x1c397]        # 0x14001ea5c
   1400026c5:	xor    r11d,0x68747541
   1400026cc:	or     r11d,r9d
   1400026cf:	mov    edx,ebx
   1400026d1:	or     r11d,ecx
   1400026d4:	xor    edx,0x756e6547
   1400026da:	xor    ecx,ecx
   1400026dc:	mov    edi,eax
   1400026de:	or     r10d,edx
   1400026e1:	mov    eax,0x1
   1400026e6:	cpuid  
   1400026e8:	mov    DWORD PTR [rbp-0x10],eax
   1400026eb:	mov    r9d,ecx
   1400026ee:	mov    DWORD PTR [rbp-0x8],r9d
   1400026f2:	mov    ecx,eax
   1400026f4:	mov    DWORD PTR [rbp-0xc],ebx
   1400026f7:	mov    DWORD PTR [rbp-0x4],edx
   1400026fa:	test   r10d,r10d
   1400026fd:	jne    0x140002751
   1400026ff:	or     QWORD PTR [rip+0x1b909],0xffffffffffffffff        # 0x14001e010
   140002707:	or     r8d,0x4
   14000270b:	and    eax,0xfff3ff0
   140002710:	mov    DWORD PTR [rip+0x1c345],r8d        # 0x14001ea5c
   140002717:	cmp    eax,0x106c0
   14000271c:	je     0x140002746
   14000271e:	cmp    eax,0x20660
   140002723:	je     0x140002746
   140002725:	cmp    eax,0x20670
   14000272a:	je     0x140002746
   14000272c:	add    eax,0xfffcf9b0
   140002731:	cmp    eax,0x20
   140002734:	ja     0x140002751
   140002736:	movabs rbx,0x100010001
   140002740:	bt     rbx,rax
   140002744:	jae    0x140002751
   140002746:	or     r8d,0x1
   14000274a:	mov    DWORD PTR [rip+0x1c30b],r8d        # 0x14001ea5c
   140002751:	test   r11d,r11d
   140002754:	jne    0x14000276f
   140002756:	and    ecx,0xff00f00
   14000275c:	cmp    ecx,0x600f00
   140002762:	jb     0x14000276f
   140002764:	or     r8d,0x4
   140002768:	mov    DWORD PTR [rip+0x1c2ed],r8d        # 0x14001ea5c
   14000276f:	mov    eax,0x7
   140002774:	mov    DWORD PTR [rbp-0x20],edx
   140002777:	mov    DWORD PTR [rbp-0x1c],r9d
   14000277b:	cmp    edi,eax
   14000277d:	jl     0x1400027a3
   14000277f:	xor    ecx,ecx
   140002781:	cpuid  
   140002783:	mov    DWORD PTR [rbp-0x10],eax
   140002786:	mov    DWORD PTR [rbp-0xc],ebx
   140002789:	mov    DWORD PTR [rbp-0x8],ecx
   14000278c:	mov    DWORD PTR [rbp-0x4],edx
   14000278f:	mov    DWORD PTR [rbp-0x18],ebx
   140002792:	bt     ebx,0x9
   140002796:	jae    0x1400027a3
   140002798:	or     r8d,0x2
   14000279c:	mov    DWORD PTR [rip+0x1c2b9],r8d        # 0x14001ea5c
   1400027a3:	bt     r9d,0x14
   1400027a8:	jae    0x140002818
   1400027aa:	mov    DWORD PTR [rip+0x1b854],0x2        # 0x14001e008
   1400027b4:	mov    DWORD PTR [rip+0x1b84e],0x6        # 0x14001e00c
   1400027be:	bt     r9d,0x1b
   1400027c3:	jae    0x140002818
   1400027c5:	bt     r9d,0x1c
   1400027ca:	jae    0x140002818
   1400027cc:	xor    ecx,ecx
   1400027ce:	xgetbv 
   1400027d1:	shl    rdx,0x20
   1400027d5:	or     rdx,rax
   1400027d8:	mov    QWORD PTR [rbp+0x10],rdx
   1400027dc:	mov    rax,QWORD PTR [rbp+0x10]
   1400027e0:	and    al,0x6
   1400027e2:	cmp    al,0x6
   1400027e4:	jne    0x140002818
   1400027e6:	mov    eax,DWORD PTR [rip+0x1b820]        # 0x14001e00c
   1400027ec:	or     eax,0x8
   1400027ef:	mov    DWORD PTR [rip+0x1b80f],0x3        # 0x14001e008
   1400027f9:	test   BYTE PTR [rbp-0x18],0x20
   1400027fd:	mov    DWORD PTR [rip+0x1b809],eax        # 0x14001e00c
   140002803:	je     0x140002818
   140002805:	or     eax,0x20
   140002808:	mov    DWORD PTR [rip+0x1b7f6],0x5        # 0x14001e008
   140002812:	mov    DWORD PTR [rip+0x1b7f4],eax        # 0x14001e00c
   140002818:	mov    rbx,QWORD PTR [rsp+0x38]
   14000281d:	xor    eax,eax
   14000281f:	mov    rdi,QWORD PTR [rsp+0x40]
   140002824:	add    rsp,0x20
   140002828:	pop    rbp
   140002829:	ret    
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	xor    eax,eax
   14000282e:	cmp    DWORD PTR [rip+0x1d35c],eax        # 0x14001fb90
   140002834:	setne  al
   140002837:	ret    
   140002838:	ret    0x0
   14000283b:	int3   
   14000283c:	rex push rbx
   14000283e:	sub    rsp,0x20
   140002842:	lea    rax,[rip+0x11dc7]        # 0x140014610
   140002849:	mov    rbx,rcx
   14000284c:	mov    QWORD PTR [rcx],rax
   14000284f:	test   dl,0x1
   140002852:	je     0x14000285e
   140002854:	mov    edx,0x18
   140002859:	call   0x140001bbc
   14000285e:	mov    rax,rbx
   140002861:	add    rsp,0x20
   140002865:	pop    rbx
   140002866:	ret    
   140002867:	int3   
   140002868:	int3   
   140002869:	int3   
   14000286a:	int3   
   14000286b:	int3   
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	jmp    QWORD PTR [rip+0x1182a]        # 0x1400140a0
   140002876:	int3   
   140002877:	int3   
   140002878:	sub    rsp,0x18
   14000287c:	movzx  eax,dl
   14000287f:	mov    r8,rcx
   140002882:	mov    r10d,eax
   140002885:	and    r8,0xfffffffffffffff0
   140002889:	shl    r10d,0x8
   14000288d:	and    ecx,0xf
   140002890:	or     r10d,eax
   140002893:	xorps  xmm2,xmm2
   140002896:	or     eax,0xffffffff
   140002899:	xor    r9d,r9d
   14000289c:	shl    eax,cl
   14000289e:	movd   xmm0,r10d
   1400028a3:	pshuflw xmm1,xmm0,0x0
   1400028a8:	movdqa xmm0,xmm2
   1400028ac:	pcmpeqb xmm0,XMMWORD PTR [r8]
   1400028b1:	pshufd xmm3,xmm1,0x0
   1400028b6:	movdqa xmm1,xmm3
   1400028ba:	pcmpeqb xmm1,XMMWORD PTR [r8]
   1400028bf:	por    xmm1,xmm0
   1400028c3:	pmovmskb edx,xmm1
   1400028c7:	and    edx,eax
   1400028c9:	jne    0x1400028ed
   1400028cb:	add    r8,0x10
   1400028cf:	movdqa xmm1,xmm3
   1400028d3:	movdqa xmm0,xmm2
   1400028d7:	pcmpeqb xmm1,XMMWORD PTR [r8]
   1400028dc:	pcmpeqb xmm0,XMMWORD PTR [r8]
   1400028e1:	por    xmm1,xmm0
   1400028e5:	pmovmskb edx,xmm1
   1400028e9:	test   edx,edx
   1400028eb:	je     0x1400028cb
   1400028ed:	bsf    edx,edx
   1400028f0:	add    rdx,r8
   1400028f3:	cmp    BYTE PTR [rdx],r10b
   1400028f6:	cmove  r9,rdx
   1400028fa:	mov    rax,r9
   1400028fd:	add    rsp,0x18
   140002901:	ret    
   140002902:	int3   
   140002903:	int3   
   140002904:	sub    rsp,0x18
   140002908:	xor    r8d,r8d
   14000290b:	mov    r9,rcx
   14000290e:	test   edx,edx
   140002910:	jne    0x14000295a
   140002912:	and    r9d,0xf
   140002916:	mov    rdx,rcx
   140002919:	and    rdx,0xfffffffffffffff0
   14000291d:	mov    ecx,r9d
   140002920:	or     r9d,0xffffffff
   140002924:	xorps  xmm1,xmm1
   140002927:	shl    r9d,cl
   14000292a:	movdqa xmm0,XMMWORD PTR [rdx]
   14000292e:	pcmpeqb xmm0,xmm1
   140002932:	pmovmskb eax,xmm0
   140002936:	and    eax,r9d
   140002939:	jne    0x14000294f
   14000293b:	add    rdx,0x10
   14000293f:	movdqa xmm0,XMMWORD PTR [rdx]
   140002943:	pcmpeqb xmm0,xmm1
   140002947:	pmovmskb eax,xmm0
   14000294b:	test   eax,eax
   14000294d:	je     0x14000293b
   14000294f:	bsf    eax,eax
   140002952:	add    rax,rdx
   140002955:	jmp    0x140002a00
   14000295a:	cmp    DWORD PTR [rip+0x1b6a7],0x2        # 0x14001e008
   140002961:	jge    0x140002a18
   140002967:	movzx  eax,dl
   14000296a:	mov    r10,r9
   14000296d:	and    r9d,0xf
   140002971:	and    r10,0xfffffffffffffff0
   140002975:	mov    ecx,eax
   140002977:	xorps  xmm2,xmm2
   14000297a:	shl    ecx,0x8
   14000297d:	or     ecx,eax
   14000297f:	movd   xmm0,ecx
   140002983:	mov    ecx,r9d
   140002986:	pshuflw xmm1,xmm0,0x0
   14000298b:	or     r9d,0xffffffff
   14000298f:	shl    r9d,cl
   140002992:	movdqa xmm0,xmm2
   140002996:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14000299b:	pmovmskb ecx,xmm0
   14000299f:	pshufd xmm3,xmm1,0x0
   1400029a4:	movdqa xmm0,xmm3
   1400029a8:	pcmpeqb xmm0,XMMWORD PTR [r10]
   1400029ad:	pmovmskb edx,xmm0
   1400029b1:	and    edx,r9d
   1400029b4:	and    ecx,r9d
   1400029b7:	jne    0x1400029e7
   1400029b9:	bsr    ecx,edx
   1400029bc:	movdqa xmm1,xmm2
   1400029c0:	movdqa xmm0,xmm3
   1400029c4:	add    rcx,r10
   1400029c7:	test   edx,edx
   1400029c9:	cmovne r8,rcx
   1400029cd:	add    r10,0x10
   1400029d1:	pcmpeqb xmm1,XMMWORD PTR [r10]
   1400029d6:	pcmpeqb xmm0,XMMWORD PTR [r10]
   1400029db:	pmovmskb ecx,xmm1
   1400029df:	pmovmskb edx,xmm0
   1400029e3:	test   ecx,ecx
   1400029e5:	je     0x1400029b9
   1400029e7:	mov    eax,ecx
   1400029e9:	neg    eax
   1400029eb:	and    eax,ecx
   1400029ed:	dec    eax
   1400029ef:	and    edx,eax
   1400029f1:	bsr    ecx,edx
   1400029f4:	add    rcx,r10
   1400029f7:	test   edx,edx
   1400029f9:	cmovne r8,rcx
   1400029fd:	mov    rax,r8
   140002a00:	add    rsp,0x18
   140002a04:	ret    
   140002a05:	movsx  eax,BYTE PTR [r9]
   140002a09:	cmp    eax,edx
   140002a0b:	cmove  r8,r9
   140002a0f:	cmp    BYTE PTR [r9],0x0
   140002a13:	je     0x1400029fd
   140002a15:	inc    r9
   140002a18:	test   r9b,0xf
   140002a1c:	jne    0x140002a05
   140002a1e:	movzx  eax,dl
   140002a21:	movd   xmm0,eax
   140002a25:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140002a2c:	jae    0x140002a3b
   140002a2e:	movsxd r8,ecx
   140002a31:	add    r8,r9
   140002a34:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140002a3b:	je     0x1400029fd
   140002a3d:	add    r9,0x10
   140002a41:	jmp    0x140002a25
   140002a43:	int3   
   140002a44:	mov    QWORD PTR [rsp+0x8],rbx
   140002a49:	mov    QWORD PTR [rsp+0x10],rbp
   140002a4e:	mov    QWORD PTR [rsp+0x18],rsi
   140002a53:	push   rdi
   140002a54:	push   r12
   140002a56:	push   r13
   140002a58:	push   r14
   140002a5a:	push   r15
   140002a5c:	sub    rsp,0x40
   140002a60:	mov    r12,QWORD PTR [r9+0x8]
   140002a64:	mov    rbp,rcx
   140002a67:	mov    r15,QWORD PTR [r9]
   140002a6a:	mov    rcx,r8
   140002a6d:	mov    rbx,QWORD PTR [r9+0x38]
   140002a71:	sub    r15,r12
   140002a74:	mov    r14,r9
   140002a77:	mov    rdi,r8
   140002a7a:	mov    r13,rdx
   140002a7d:	call   0x140002838
   140002a82:	test   BYTE PTR [rbp+0x4],0x66
   140002a86:	jne    0x140002b6c
   140002a8c:	mov    esi,DWORD PTR [r14+0x48]
   140002a90:	mov    QWORD PTR [rsp+0x30],rbp
   140002a95:	mov    QWORD PTR [rsp+0x38],rdi
   140002a9a:	cmp    esi,DWORD PTR [rbx]
   140002a9c:	jae    0x140002c1c
   140002aa2:	mov    edi,esi
   140002aa4:	add    rdi,rdi
   140002aa7:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   140002aab:	cmp    r15,rax
   140002aae:	jb     0x140002b5e
   140002ab4:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   140002ab8:	cmp    r15,rax
   140002abb:	jae    0x140002b5e
   140002ac1:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   140002ac6:	je     0x140002b5e
   140002acc:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   140002ad1:	je     0x140002aea
   140002ad3:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   140002ad7:	lea    rcx,[rsp+0x30]
   140002adc:	add    rax,r12
   140002adf:	mov    rdx,r13
   140002ae2:	call   rax
   140002ae4:	test   eax,eax
   140002ae6:	js     0x140002b65
   140002ae8:	jle    0x140002b5e
   140002aea:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140002af1:	jne    0x140002b1b
   140002af3:	cmp    QWORD PTR [rip+0x1d0ad],0x0        # 0x14001fba8
   140002afb:	je     0x140002b1b
   140002afd:	lea    rcx,[rip+0x1d0a4]        # 0x14001fba8
   140002b04:	call   0x140013120
   140002b09:	test   eax,eax
   140002b0b:	je     0x140002b1b
   140002b0d:	mov    edx,0x1
   140002b12:	mov    rcx,rbp
   140002b15:	call   QWORD PTR [rip+0x1d08d]        # 0x14001fba8
   140002b1b:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   140002b1f:	mov    r8d,0x1
   140002b25:	add    rcx,r12
   140002b28:	mov    rdx,r13
   140002b2b:	call   0x140003020
   140002b30:	mov    rax,QWORD PTR [r14+0x40]
   140002b34:	mov    r8,rbp
   140002b37:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   140002b3b:	mov    rcx,r13
   140002b3e:	mov    r9d,DWORD PTR [rbp+0x0]
   140002b42:	add    rdx,r12
   140002b45:	mov    QWORD PTR [rsp+0x28],rax
   140002b4a:	mov    rax,QWORD PTR [r14+0x28]
   140002b4e:	mov    QWORD PTR [rsp+0x20],rax
   140002b53:	call   QWORD PTR [rip+0x11557]        # 0x1400140b0
   140002b59:	call   0x140003050
   140002b5e:	inc    esi
   140002b60:	jmp    0x140002a9a
   140002b65:	xor    eax,eax
   140002b67:	jmp    0x140002c21
   140002b6c:	mov    rsi,QWORD PTR [r14+0x20]
   140002b70:	mov    edi,DWORD PTR [r14+0x48]
   140002b74:	sub    rsi,r12
   140002b77:	jmp    0x140002c12
   140002b7c:	mov    ecx,edi
   140002b7e:	add    rcx,rcx
   140002b81:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   140002b85:	cmp    r15,rax
   140002b88:	jb     0x140002c10
   140002b8e:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   140002b92:	cmp    r15,rax
   140002b95:	jae    0x140002c10
   140002b97:	mov    r10d,DWORD PTR [rbp+0x4]
   140002b9b:	and    r10d,0x20
   140002b9f:	je     0x140002be5
   140002ba1:	xor    r9d,r9d
   140002ba4:	test   edx,edx
   140002ba6:	je     0x140002be0
   140002ba8:	mov    r8d,r9d
   140002bab:	add    r8,r8
   140002bae:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   140002bb3:	cmp    rsi,rax
   140002bb6:	jb     0x140002bd8
   140002bb8:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   140002bbd:	cmp    rsi,rax
   140002bc0:	jae    0x140002bd8
   140002bc2:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140002bc6:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   140002bcb:	jne    0x140002bd8
   140002bcd:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   140002bd1:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   140002bd6:	je     0x140002be0
   140002bd8:	inc    r9d
   140002bdb:	cmp    r9d,edx
   140002bde:	jb     0x140002ba8
   140002be0:	cmp    r9d,edx
   140002be3:	jne    0x140002c1c
   140002be5:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140002be9:	test   eax,eax
   140002beb:	je     0x140002bf9
   140002bed:	cmp    rsi,rax
   140002bf0:	jne    0x140002c10
   140002bf2:	test   r10d,r10d
   140002bf5:	jne    0x140002c1c
   140002bf7:	jmp    0x140002c10
   140002bf9:	lea    eax,[rdi+0x1]
   140002bfc:	mov    rdx,r13
   140002bff:	mov    DWORD PTR [r14+0x48],eax
   140002c03:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   140002c08:	mov    cl,0x1
   140002c0a:	add    r8,r12
   140002c0d:	call   r8
   140002c10:	inc    edi
   140002c12:	mov    edx,DWORD PTR [rbx]
   140002c14:	cmp    edi,edx
   140002c16:	jb     0x140002b7c
   140002c1c:	mov    eax,0x1
   140002c21:	lea    r11,[rsp+0x40]
   140002c26:	mov    rbx,QWORD PTR [r11+0x30]
   140002c2a:	mov    rbp,QWORD PTR [r11+0x38]
   140002c2e:	mov    rsi,QWORD PTR [r11+0x40]
   140002c32:	mov    rsp,r11
   140002c35:	pop    r15
   140002c37:	pop    r14
   140002c39:	pop    r13
   140002c3b:	pop    r12
   140002c3d:	pop    rdi
   140002c3e:	ret    
   140002c3f:	int3   
   140002c40:	sub    rsp,0x28
   140002c44:	call   0x140003534
   140002c49:	call   0x1400034a8
   140002c4e:	call   0x1400030d8
   140002c53:	test   al,al
   140002c55:	jne    0x140002c5b
   140002c57:	xor    al,al
   140002c59:	jmp    0x140002c6d
   140002c5b:	call   0x140003074
   140002c60:	test   al,al
   140002c62:	jne    0x140002c6b
   140002c64:	call   0x140003120
   140002c69:	jmp    0x140002c57
   140002c6b:	mov    al,0x1
   140002c6d:	add    rsp,0x28
   140002c71:	ret    
   140002c72:	int3   
   140002c73:	int3   
   140002c74:	sub    rsp,0x28
   140002c78:	test   cl,cl
   140002c7a:	jne    0x140002c8d
   140002c7c:	call   0x1400030b4
   140002c81:	call   0x140003120
   140002c86:	xor    ecx,ecx
   140002c88:	call   0x1400034f4
   140002c8d:	mov    al,0x1
   140002c8f:	add    rsp,0x28
   140002c93:	ret    
   140002c94:	int3   
   140002c95:	int3   
   140002c96:	int3   
   140002c97:	int3   
   140002c98:	int3   
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	int3   
   140002ca1:	int3   
   140002ca2:	int3   
   140002ca3:	int3   
   140002ca4:	int3   
   140002ca5:	int3   
   140002ca6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002cb0:	mov    r11,rcx
   140002cb3:	movzx  edx,dl
   140002cb6:	movabs r9,0x101010101010101
   140002cc0:	imul   r9,rdx
   140002cc4:	cmp    r8,0x10
   140002cc8:	jbe    0x140002dd0
   140002cce:	movq   xmm0,r9
   140002cd3:	punpcklbw xmm0,xmm0
   140002cd7:	cmp    r8,0x80
   140002cde:	jbe    0x140002d60
   140002ce4:	bt     DWORD PTR [rip+0x1bd70],0x1        # 0x14001ea5c
   140002cec:	jae    0x140002d10
   140002cee:	mov    eax,edx
   140002cf0:	mov    rdx,rdi
   140002cf3:	mov    rdi,rcx
   140002cf6:	mov    rcx,r8
   140002cf9:	rep stos BYTE PTR es:[rdi],al
   140002cfb:	mov    rdi,rdx
   140002cfe:	mov    rax,r11
   140002d01:	ret    
   140002d02:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002d10:	movups XMMWORD PTR [rcx],xmm0
   140002d13:	add    r8,rcx
   140002d16:	add    rcx,0x10
   140002d1a:	and    rcx,0xfffffffffffffff0
   140002d1e:	sub    r8,rcx
   140002d21:	mov    r9,r8
   140002d24:	shr    r9,0x7
   140002d28:	je     0x140002d60
   140002d2a:	nop    WORD PTR [rax+rax*1+0x0]
   140002d30:	movaps XMMWORD PTR [rcx],xmm0
   140002d33:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140002d37:	add    rcx,0x80
   140002d3e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140002d42:	movaps XMMWORD PTR [rcx-0x50],xmm0
   140002d46:	dec    r9
   140002d49:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140002d4d:	movaps XMMWORD PTR [rcx-0x30],xmm0
   140002d51:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140002d55:	movapd XMMWORD PTR [rcx-0x10],xmm0
   140002d5a:	jne    0x140002d30
   140002d5c:	and    r8,0x7f
   140002d60:	mov    r9,r8
   140002d63:	shr    r9,0x4
   140002d67:	je     0x140002d7c
   140002d69:	nop    DWORD PTR [rax+0x0]
   140002d70:	movups XMMWORD PTR [rcx],xmm0
   140002d73:	add    rcx,0x10
   140002d77:	dec    r9
   140002d7a:	jne    0x140002d70
   140002d7c:	and    r8,0xf
   140002d80:	je     0x140002d88
   140002d82:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   140002d88:	mov    rax,r11
   140002d8b:	ret    
   140002d8c:	(bad)  
   140002d8d:	sub    eax,0x2dfb0000
   140002d92:	add    BYTE PTR [rax],al
   140002d94:	(bad)  
   140002d95:	add    BYTE PTR cs:[rax],al
   140002d98:	imul   DWORD PTR [rip+0x2e040000]        # 0x16e042d9e
   140002d9e:	add    BYTE PTR [rax],al
   140002da0:	adc    al,0x2e
   140002da2:	add    BYTE PTR [rax],al
   140002da4:	and    al,0x2e
   140002da6:	add    BYTE PTR [rax],al
   140002da8:	hlt    
   140002da9:	sub    eax,0x2e2c0000
   140002dae:	add    BYTE PTR [rax],al
   140002db0:	or     BYTE PTR [rsi],ch
   140002db2:	add    BYTE PTR [rax],al
   140002db4:	rex
   140002db5:	add    BYTE PTR cs:[rax],al
   140002db8:	xor    BYTE PTR [rsi],ch
   140002dba:	add    BYTE PTR [rax],al
   140002dbc:	add    BYTE PTR [rsi],ch
   140002dbe:	add    BYTE PTR [rax],al
   140002dc0:	adc    BYTE PTR [rsi],ch
   140002dc2:	add    BYTE PTR [rax],al
   140002dc4:	and    BYTE PTR [rsi],ch
   140002dc6:	add    BYTE PTR [rax],al
   140002dc8:	lock sub eax,0x2e480000
   140002dce:	add    BYTE PTR [rax],al
   140002dd0:	mov    rdx,r9
   140002dd3:	lea    r9,[rip+0xffffffffffffd226]        # 0x140000000
   140002dda:	mov    eax,DWORD PTR [r9+r8*4+0x2d8c]
   140002de2:	add    r9,rax
   140002de5:	add    rcx,r8
   140002de8:	mov    rax,r11
   140002deb:	jmp    r9
   140002dee:	xchg   ax,ax
   140002df0:	mov    QWORD PTR [rcx-0xf],rdx
   140002df4:	mov    DWORD PTR [rcx-0x7],edx
   140002df7:	mov    WORD PTR [rcx-0x3],dx
   140002dfb:	mov    BYTE PTR [rcx-0x1],dl
   140002dfe:	ret    
   140002dff:	nop
   140002e00:	mov    QWORD PTR [rcx-0xc],rdx
   140002e04:	mov    DWORD PTR [rcx-0x4],edx
   140002e07:	ret    
   140002e08:	mov    QWORD PTR [rcx-0x9],rdx
   140002e0c:	mov    BYTE PTR [rcx-0x1],dl
   140002e0f:	ret    
   140002e10:	mov    QWORD PTR [rcx-0xd],rdx
   140002e14:	mov    DWORD PTR [rcx-0x5],edx
   140002e17:	mov    BYTE PTR [rcx-0x1],dl
   140002e1a:	ret    
   140002e1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002e20:	mov    QWORD PTR [rcx-0xe],rdx
   140002e24:	mov    DWORD PTR [rcx-0x6],edx
   140002e27:	mov    WORD PTR [rcx-0x2],dx
   140002e2b:	ret    
   140002e2c:	mov    QWORD PTR [rax],rdx
   140002e2f:	ret    
   140002e30:	mov    QWORD PTR [rax],rdx
   140002e33:	mov    WORD PTR [rax+0x8],dx
   140002e37:	mov    BYTE PTR [rax+0xa],dl
   140002e3a:	ret    
   140002e3b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002e40:	mov    QWORD PTR [rax],rdx
   140002e43:	mov    WORD PTR [rax+0x8],dx
   140002e47:	ret    
   140002e48:	mov    QWORD PTR [rax],rdx
   140002e4b:	mov    QWORD PTR [rax+0x8],rdx
   140002e4f:	ret    
   140002e50:	mov    QWORD PTR [rsp+0x8],rbx
   140002e55:	mov    QWORD PTR [rsp+0x10],rsi
   140002e5a:	mov    QWORD PTR [rsp+0x18],rdi
   140002e5f:	push   r14
   140002e61:	sub    rsp,0x20
   140002e65:	cmp    BYTE PTR [rcx+0x8],0x0
   140002e69:	mov    r14,rdx
   140002e6c:	mov    rsi,rcx
   140002e6f:	je     0x140002ebd
   140002e71:	mov    rax,QWORD PTR [rcx]
   140002e74:	test   rax,rax
   140002e77:	je     0x140002ebd
   140002e79:	or     rdi,0xffffffffffffffff
   140002e7d:	inc    rdi
   140002e80:	cmp    BYTE PTR [rax+rdi*1],0x0
   140002e84:	jne    0x140002e7d
   140002e86:	lea    rcx,[rdi+0x1]
   140002e8a:	call   0x140005b7c
   140002e8f:	mov    rbx,rax
   140002e92:	test   rax,rax
   140002e95:	je     0x140002eb3
   140002e97:	mov    r8,QWORD PTR [rsi]
   140002e9a:	lea    rdx,[rdi+0x1]
   140002e9e:	mov    rcx,rax
   140002ea1:	call   0x140007d64
   140002ea6:	mov    rax,rbx
   140002ea9:	mov    BYTE PTR [r14+0x8],0x1
   140002eae:	mov    QWORD PTR [r14],rax
   140002eb1:	xor    ebx,ebx
   140002eb3:	mov    rcx,rbx
   140002eb6:	call   0x140005b74
   140002ebb:	jmp    0x140002ec7
   140002ebd:	mov    rax,QWORD PTR [rcx]
   140002ec0:	mov    QWORD PTR [rdx],rax
   140002ec3:	mov    BYTE PTR [rdx+0x8],0x0
   140002ec7:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ecc:	mov    rsi,QWORD PTR [rsp+0x38]
   140002ed1:	mov    rdi,QWORD PTR [rsp+0x40]
   140002ed6:	add    rsp,0x20
   140002eda:	pop    r14
   140002edc:	ret    
   140002edd:	int3   
   140002ede:	int3   
   140002edf:	int3   
   140002ee0:	rex push rbx
   140002ee2:	sub    rsp,0x20
   140002ee6:	cmp    BYTE PTR [rcx+0x8],0x0
   140002eea:	mov    rbx,rcx
   140002eed:	je     0x140002ef7
   140002eef:	mov    rcx,QWORD PTR [rcx]
   140002ef2:	call   0x140005b74
   140002ef7:	mov    BYTE PTR [rbx+0x8],0x0
   140002efb:	and    QWORD PTR [rbx],0x0
   140002eff:	add    rsp,0x20
   140002f03:	pop    rbx
   140002f04:	ret    
   140002f05:	int3   
   140002f06:	int3   
   140002f07:	int3   
   140002f08:	mov    QWORD PTR [rsp+0x10],rbx
   140002f0d:	mov    QWORD PTR [rsp+0x18],rsi
   140002f12:	push   rbp
   140002f13:	push   rdi
   140002f14:	push   r14
   140002f16:	mov    rbp,rsp
   140002f19:	sub    rsp,0x60
   140002f1d:	movaps xmm0,XMMWORD PTR [rip+0x116fc]        # 0x140014620
   140002f24:	mov    rsi,rdx
   140002f27:	movaps xmm1,XMMWORD PTR [rip+0x11702]        # 0x140014630
   140002f2e:	mov    r14,rcx
   140002f31:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140002f35:	movaps xmm0,XMMWORD PTR [rip+0x11704]        # 0x140014640
   140002f3c:	movaps XMMWORD PTR [rbp-0x30],xmm1
   140002f40:	movaps xmm1,XMMWORD PTR [rip+0x11709]        # 0x140014650
   140002f47:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140002f4b:	movaps XMMWORD PTR [rbp-0x10],xmm1
   140002f4f:	test   rdx,rdx
   140002f52:	je     0x140002f76
   140002f54:	test   BYTE PTR [rdx],0x10
   140002f57:	je     0x140002f76
   140002f59:	mov    rdi,QWORD PTR [rcx]
   140002f5c:	mov    rax,QWORD PTR [rdi-0x8]
   140002f60:	mov    rbx,QWORD PTR [rax+0x40]
   140002f64:	mov    rsi,QWORD PTR [rax+0x30]
   140002f68:	mov    rcx,rbx
   140002f6b:	call   0x1400024b8
   140002f70:	lea    rcx,[rdi-0x8]
   140002f74:	call   rbx
   140002f76:	lea    rdx,[rbp+0x20]
   140002f7a:	mov    QWORD PTR [rbp-0x18],r14
   140002f7e:	mov    rcx,rsi
   140002f81:	mov    QWORD PTR [rbp-0x10],rsi
   140002f85:	call   QWORD PTR [rip+0x1112d]        # 0x1400140b8
   140002f8b:	mov    QWORD PTR [rbp+0x20],rax
   140002f8f:	mov    rdx,rax
   140002f92:	mov    QWORD PTR [rbp-0x8],rax
   140002f96:	test   rsi,rsi
   140002f99:	je     0x140002fb6
   140002f9b:	test   BYTE PTR [rsi],0x8
   140002f9e:	mov    ecx,0x1994000
   140002fa3:	je     0x140002faa
   140002fa5:	mov    DWORD PTR [rbp-0x20],ecx
   140002fa8:	jmp    0x140002fb6
   140002faa:	mov    eax,DWORD PTR [rbp-0x20]
   140002fad:	test   rdx,rdx
   140002fb0:	cmove  eax,ecx
   140002fb3:	mov    DWORD PTR [rbp-0x20],eax
   140002fb6:	mov    r8d,DWORD PTR [rbp-0x28]
   140002fba:	lea    r9,[rbp-0x20]
   140002fbe:	mov    edx,DWORD PTR [rbp-0x3c]
   140002fc1:	mov    ecx,DWORD PTR [rbp-0x40]
   140002fc4:	call   QWORD PTR [rip+0x110f6]        # 0x1400140c0
   140002fca:	lea    r11,[rsp+0x60]
   140002fcf:	mov    rbx,QWORD PTR [r11+0x28]
   140002fd3:	mov    rsi,QWORD PTR [r11+0x30]
   140002fd7:	mov    rsp,r11
   140002fda:	pop    r14
   140002fdc:	pop    rdi
   140002fdd:	pop    rbp
   140002fde:	ret    
   140002fdf:	int3   
   140002fe0:	int3   
   140002fe1:	int3   
   140002fe2:	int3   
   140002fe3:	int3   
   140002fe4:	int3   
   140002fe5:	int3   
   140002fe6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002ff0:	sub    rsp,0x4d8
   140002ff7:	xor    r8,r8
   140002ffa:	xor    r9,r9
   140002ffd:	mov    QWORD PTR [rsp+0x20],rsp
   140003002:	mov    QWORD PTR [rsp+0x28],r8
   140003007:	call   0x140013552
   14000300c:	add    rsp,0x4d8
   140003013:	ret    
   140003014:	int3   
   140003015:	int3   
   140003016:	int3   
   140003017:	int3   
   140003018:	int3   
   140003019:	int3   
   14000301a:	nop    WORD PTR [rax+rax*1+0x0]
   140003020:	mov    QWORD PTR [rsp+0x8],rcx
   140003025:	mov    QWORD PTR [rsp+0x18],rdx
   14000302a:	mov    DWORD PTR [rsp+0x10],r8d
   14000302f:	mov    r9,0x19930520
   140003036:	jmp    0x140003040
   140003038:	int3   
   140003039:	int3   
   14000303a:	int3   
   14000303b:	int3   
   14000303c:	int3   
   14000303d:	int3   
   14000303e:	xchg   ax,ax
   140003040:	ret    
   140003041:	int3   
   140003042:	int3   
   140003043:	int3   
   140003044:	int3   
   140003045:	int3   
   140003046:	int3   
   140003047:	nop    WORD PTR [rax+rax*1+0x0]
   140003050:	ret    
   140003051:	int3   
   140003052:	int3   
   140003053:	int3   
   140003054:	sub    rsp,0x28
   140003058:	test   rcx,rcx
   14000305b:	je     0x14000306e
   14000305d:	lea    rax,[rip+0x1b9fc]        # 0x14001ea60
   140003064:	cmp    rcx,rax
   140003067:	je     0x14000306e
   140003069:	call   0x140007cc4
   14000306e:	add    rsp,0x28
   140003072:	ret    
   140003073:	int3   
   140003074:	sub    rsp,0x28
   140003078:	lea    rcx,[rip+0xffffffffffffffd5]        # 0x140003054
   14000307f:	call   0x140003320
   140003084:	mov    DWORD PTR [rip+0x1afa6],eax        # 0x14001e030
   14000308a:	cmp    eax,0xffffffff
   14000308d:	jne    0x140003093
   14000308f:	xor    al,al
   140003091:	jmp    0x1400030ae
   140003093:	lea    rdx,[rip+0x1b9c6]        # 0x14001ea60
   14000309a:	mov    ecx,eax
   14000309c:	call   0x1400033c8
   1400030a1:	test   eax,eax
   1400030a3:	jne    0x1400030ac
   1400030a5:	call   0x1400030b4
   1400030aa:	jmp    0x14000308f
   1400030ac:	mov    al,0x1
   1400030ae:	add    rsp,0x28
   1400030b2:	ret    
   1400030b3:	int3   
   1400030b4:	sub    rsp,0x28
   1400030b8:	mov    ecx,DWORD PTR [rip+0x1af72]        # 0x14001e030
   1400030be:	cmp    ecx,0xffffffff
   1400030c1:	je     0x1400030cf
   1400030c3:	call   0x140003374
   1400030c8:	or     DWORD PTR [rip+0x1af61],0xffffffff        # 0x14001e030
   1400030cf:	mov    al,0x1
   1400030d1:	add    rsp,0x28
   1400030d5:	ret    
   1400030d6:	int3   
   1400030d7:	int3   
   1400030d8:	rex push rbx
   1400030da:	sub    rsp,0x20
   1400030de:	xor    ebx,ebx
   1400030e0:	lea    rdx,[rip+0x1b9f1]        # 0x14001ead8
   1400030e7:	xor    r8d,r8d
   1400030ea:	lea    rcx,[rbx+rbx*4]
   1400030ee:	lea    rcx,[rdx+rcx*8]
   1400030f2:	mov    edx,0xfa0
   1400030f7:	call   0x140003430
   1400030fc:	test   eax,eax
   1400030fe:	je     0x140003111
   140003100:	inc    DWORD PTR [rip+0x1b9fa]        # 0x14001eb00
   140003106:	inc    ebx
   140003108:	cmp    ebx,0x1
   14000310b:	jb     0x1400030e0
   14000310d:	mov    al,0x1
   14000310f:	jmp    0x140003118
   140003111:	call   0x140003120
   140003116:	xor    al,al
   140003118:	add    rsp,0x20
   14000311c:	pop    rbx
   14000311d:	ret    
   14000311e:	int3   
   14000311f:	int3   
   140003120:	rex push rbx
   140003122:	sub    rsp,0x20
   140003126:	mov    ebx,DWORD PTR [rip+0x1b9d4]        # 0x14001eb00
   14000312c:	jmp    0x14000314b
   14000312e:	lea    rax,[rip+0x1b9a3]        # 0x14001ead8
   140003135:	dec    ebx
   140003137:	lea    rcx,[rbx+rbx*4]
   14000313b:	lea    rcx,[rax+rcx*8]
   14000313f:	call   QWORD PTR [rip+0x10f9b]        # 0x1400140e0
   140003145:	dec    DWORD PTR [rip+0x1b9b5]        # 0x14001eb00
   14000314b:	test   ebx,ebx
   14000314d:	jne    0x14000312e
   14000314f:	mov    al,0x1
   140003151:	add    rsp,0x20
   140003155:	pop    rbx
   140003156:	ret    
   140003157:	int3   
   140003158:	mov    QWORD PTR [rsp+0x8],rbx
   14000315d:	mov    QWORD PTR [rsp+0x10],rbp
   140003162:	mov    QWORD PTR [rsp+0x18],rsi
   140003167:	push   rdi
   140003168:	push   r12
   14000316a:	push   r13
   14000316c:	push   r14
   14000316e:	push   r15
   140003170:	sub    rsp,0x20
   140003174:	xor    r15d,r15d
   140003177:	mov    r14d,ecx
   14000317a:	mov    r12,r9
   14000317d:	xor    eax,eax
   14000317f:	mov    rbp,r8
   140003182:	lea    r9,[rip+0xffffffffffffce77]        # 0x140000000
   140003189:	mov    r13,rdx
   14000318c:	lock cmpxchg QWORD PTR [r9+r14*8+0x1eb30],r15
   140003196:	mov    r8,QWORD PTR [rip+0x1ae7b]        # 0x14001e018
   14000319d:	or     rdi,0xffffffffffffffff
   1400031a1:	mov    ecx,r8d
   1400031a4:	mov    rdx,r8
   1400031a7:	and    ecx,0x3f
   1400031aa:	xor    rdx,rax
   1400031ad:	ror    rdx,cl
   1400031b0:	cmp    rdx,rdi
   1400031b3:	je     0x140003301
   1400031b9:	test   rdx,rdx
   1400031bc:	je     0x1400031c6
   1400031be:	mov    rax,rdx
   1400031c1:	jmp    0x140003303
   1400031c6:	cmp    rbp,r12
   1400031c9:	je     0x14000328d
   1400031cf:	mov    esi,DWORD PTR [rbp+0x0]
   1400031d2:	xor    eax,eax
   1400031d4:	lock cmpxchg QWORD PTR [r9+rsi*8+0x1eb10],r15
   1400031de:	mov    rbx,rax
   1400031e1:	je     0x1400031f1
   1400031e3:	cmp    rax,rdi
   1400031e6:	je     0x140003279
   1400031ec:	jmp    0x140003274
   1400031f1:	mov    r15,QWORD PTR [r9+rsi*8+0x14660]
   1400031f9:	xor    edx,edx
   1400031fb:	mov    rcx,r15
   1400031fe:	mov    r8d,0x800
   140003204:	call   QWORD PTR [rip+0x10f0e]        # 0x140014118
   14000320a:	mov    rbx,rax
   14000320d:	test   rax,rax
   140003210:	je     0x140003217
   140003212:	xor    r15d,r15d
   140003215:	jmp    0x14000323b
   140003217:	call   QWORD PTR [rip+0x10dfb]        # 0x140014018
   14000321d:	cmp    eax,0x57
   140003220:	jne    0x140003235
   140003222:	xor    r8d,r8d
   140003225:	xor    edx,edx
   140003227:	mov    rcx,r15
   14000322a:	call   QWORD PTR [rip+0x10ee8]        # 0x140014118
   140003230:	mov    rbx,rax
   140003233:	jmp    0x140003212
   140003235:	xor    r15d,r15d
   140003238:	mov    ebx,r15d
   14000323b:	lea    r9,[rip+0xffffffffffffcdbe]        # 0x140000000
   140003242:	test   rbx,rbx
   140003245:	jne    0x140003254
   140003247:	mov    rax,rdi
   14000324a:	xchg   QWORD PTR [r9+rsi*8+0x1eb10],rax
   140003252:	jmp    0x140003279
   140003254:	mov    rax,rbx
   140003257:	xchg   QWORD PTR [r9+rsi*8+0x1eb10],rax
   14000325f:	test   rax,rax
   140003262:	je     0x140003274
   140003264:	mov    rcx,rbx
   140003267:	call   QWORD PTR [rip+0x10ea3]        # 0x140014110
   14000326d:	lea    r9,[rip+0xffffffffffffcd8c]        # 0x140000000
   140003274:	test   rbx,rbx
   140003277:	jne    0x1400032d6
   140003279:	add    rbp,0x4
   14000327d:	cmp    rbp,r12
   140003280:	jne    0x1400031cf
   140003286:	mov    r8,QWORD PTR [rip+0x1ad8b]        # 0x14001e018
   14000328d:	mov    rbx,r15
   140003290:	test   rbx,rbx
   140003293:	je     0x1400032df
   140003295:	mov    rdx,r13
   140003298:	mov    rcx,rbx
   14000329b:	call   QWORD PTR [rip+0x10d8f]        # 0x140014030
   1400032a1:	mov    r8,QWORD PTR [rip+0x1ad70]        # 0x14001e018
   1400032a8:	test   rax,rax
   1400032ab:	je     0x1400032df
   1400032ad:	mov    ecx,r8d
   1400032b0:	mov    edx,0x40
   1400032b5:	and    ecx,0x3f
   1400032b8:	sub    edx,ecx
   1400032ba:	mov    cl,dl
   1400032bc:	mov    rdx,rax
   1400032bf:	ror    rdx,cl
   1400032c2:	lea    rcx,[rip+0xffffffffffffcd37]        # 0x140000000
   1400032c9:	xor    rdx,r8
   1400032cc:	xchg   QWORD PTR [rcx+r14*8+0x1eb30],rdx
   1400032d4:	jmp    0x140003303
   1400032d6:	mov    r8,QWORD PTR [rip+0x1ad3b]        # 0x14001e018
   1400032dd:	jmp    0x140003290
   1400032df:	mov    ecx,0x40
   1400032e4:	mov    eax,r8d
   1400032e7:	and    eax,0x3f
   1400032ea:	sub    ecx,eax
   1400032ec:	ror    rdi,cl
   1400032ef:	lea    rcx,[rip+0xffffffffffffcd0a]        # 0x140000000
   1400032f6:	xor    rdi,r8
   1400032f9:	xchg   QWORD PTR [rcx+r14*8+0x1eb30],rdi
   140003301:	xor    eax,eax
   140003303:	mov    rbx,QWORD PTR [rsp+0x50]
   140003308:	mov    rbp,QWORD PTR [rsp+0x58]
   14000330d:	mov    rsi,QWORD PTR [rsp+0x60]
   140003312:	add    rsp,0x20
   140003316:	pop    r15
   140003318:	pop    r14
   14000331a:	pop    r13
   14000331c:	pop    r12
   14000331e:	pop    rdi
   14000331f:	ret    
   140003320:	mov    QWORD PTR [rsp+0x8],rbx
   140003325:	push   rdi
   140003326:	sub    rsp,0x20
   14000332a:	mov    rdi,rcx
   14000332d:	lea    r9,[rip+0x11404]        # 0x140014738
   140003334:	mov    ecx,0x4
   140003339:	lea    r8,[rip+0x113f0]        # 0x140014730
   140003340:	lea    rdx,[rip+0x113f1]        # 0x140014738
   140003347:	call   0x140003158
   14000334c:	mov    rbx,rax
   14000334f:	test   rax,rax
   140003352:	je     0x140003363
   140003354:	mov    rcx,rax
   140003357:	call   0x1400024b8
   14000335c:	mov    rcx,rdi
   14000335f:	call   rbx
   140003361:	jmp    0x140003369
   140003363:	call   QWORD PTR [rip+0x10d87]        # 0x1400140f0
   140003369:	mov    rbx,QWORD PTR [rsp+0x30]
   14000336e:	add    rsp,0x20
   140003372:	pop    rdi
   140003373:	ret    
   140003374:	mov    QWORD PTR [rsp+0x8],rbx
   140003379:	push   rdi
   14000337a:	sub    rsp,0x20
   14000337e:	mov    ebx,ecx
   140003380:	lea    r9,[rip+0x113c9]        # 0x140014750
   140003387:	mov    ecx,0x5
   14000338c:	lea    r8,[rip+0x113b5]        # 0x140014748
   140003393:	lea    rdx,[rip+0x113b6]        # 0x140014750
   14000339a:	call   0x140003158
   14000339f:	mov    rdi,rax
   1400033a2:	test   rax,rax
   1400033a5:	je     0x1400033b5
   1400033a7:	mov    rcx,rax
   1400033aa:	call   0x1400024b8
   1400033af:	mov    ecx,ebx
   1400033b1:	call   rdi
   1400033b3:	jmp    0x1400033bd
   1400033b5:	mov    ecx,ebx
   1400033b7:	call   QWORD PTR [rip+0x10d4b]        # 0x140014108
   1400033bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033c2:	add    rsp,0x20
   1400033c6:	pop    rdi
   1400033c7:	ret    
   1400033c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400033cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400033d2:	push   rdi
   1400033d3:	sub    rsp,0x20
   1400033d7:	mov    rbx,rdx
   1400033da:	lea    r9,[rip+0x1138f]        # 0x140014770
   1400033e1:	mov    edi,ecx
   1400033e3:	lea    rdx,[rip+0x11386]        # 0x140014770
   1400033ea:	mov    ecx,0x7
   1400033ef:	lea    r8,[rip+0x11372]        # 0x140014768
   1400033f6:	call   0x140003158
   1400033fb:	mov    rsi,rax
   1400033fe:	test   rax,rax
   140003401:	je     0x140003414
   140003403:	mov    rcx,rax
   140003406:	call   0x1400024b8
   14000340b:	mov    rdx,rbx
   14000340e:	mov    ecx,edi
   140003410:	call   rsi
   140003412:	jmp    0x14000341f
   140003414:	mov    rdx,rbx
   140003417:	mov    ecx,edi
   140003419:	call   QWORD PTR [rip+0x10ce1]        # 0x140014100
   14000341f:	mov    rbx,QWORD PTR [rsp+0x30]
   140003424:	mov    rsi,QWORD PTR [rsp+0x38]
   140003429:	add    rsp,0x20
   14000342d:	pop    rdi
   14000342e:	ret    
   14000342f:	int3   
   140003430:	mov    QWORD PTR [rsp+0x8],rbx
   140003435:	mov    QWORD PTR [rsp+0x10],rbp
   14000343a:	mov    QWORD PTR [rsp+0x18],rsi
   14000343f:	push   rdi
   140003440:	sub    rsp,0x20
   140003444:	mov    ebp,r8d
   140003447:	lea    r9,[rip+0x1133a]        # 0x140014788
   14000344e:	mov    ebx,edx
   140003450:	lea    r8,[rip+0x11329]        # 0x140014780
   140003457:	mov    rdi,rcx
   14000345a:	lea    rdx,[rip+0x11327]        # 0x140014788
   140003461:	mov    ecx,0x8
   140003466:	call   0x140003158
   14000346b:	mov    rsi,rax
   14000346e:	test   rax,rax
   140003471:	je     0x140003487
   140003473:	mov    rcx,rax
   140003476:	call   0x1400024b8
   14000347b:	mov    r8d,ebp
   14000347e:	mov    edx,ebx
   140003480:	mov    rcx,rdi
   140003483:	call   rsi
   140003485:	jmp    0x140003492
   140003487:	mov    edx,ebx
   140003489:	mov    rcx,rdi
   14000348c:	call   QWORD PTR [rip+0x10c56]        # 0x1400140e8
   140003492:	mov    rbx,QWORD PTR [rsp+0x30]
   140003497:	mov    rbp,QWORD PTR [rsp+0x38]
   14000349c:	mov    rsi,QWORD PTR [rsp+0x40]
   1400034a1:	add    rsp,0x20
   1400034a5:	pop    rdi
   1400034a6:	ret    
   1400034a7:	int3   
   1400034a8:	mov    rdx,QWORD PTR [rip+0x1ab69]        # 0x14001e018
   1400034af:	xor    r8d,r8d
   1400034b2:	mov    eax,edx
   1400034b4:	mov    ecx,0x40
   1400034b9:	and    eax,0x3f
   1400034bc:	mov    r9d,r8d
   1400034bf:	sub    ecx,eax
   1400034c1:	lea    rax,[rip+0x1b668]        # 0x14001eb30
   1400034c8:	ror    r9,cl
   1400034cb:	lea    rcx,[rip+0x1b6a6]        # 0x14001eb78
   1400034d2:	xor    r9,rdx
   1400034d5:	cmp    rcx,rax
   1400034d8:	sbb    rcx,rcx
   1400034db:	not    rcx
   1400034de:	and    ecx,0x9
   1400034e1:	inc    r8
   1400034e4:	mov    QWORD PTR [rax],r9
   1400034e7:	lea    rax,[rax+0x8]
   1400034eb:	cmp    r8,rcx
   1400034ee:	jne    0x1400034e1
   1400034f0:	ret    
   1400034f1:	int3   
   1400034f2:	int3   
   1400034f3:	int3   
   1400034f4:	test   cl,cl
   1400034f6:	jne    0x140003531
   1400034f8:	push   rbx
   1400034f9:	sub    rsp,0x20
   1400034fd:	lea    rbx,[rip+0x1b60c]        # 0x14001eb10
   140003504:	mov    rcx,QWORD PTR [rbx]
   140003507:	test   rcx,rcx
   14000350a:	je     0x14000351c
   14000350c:	cmp    rcx,0xffffffffffffffff
   140003510:	je     0x140003518
   140003512:	call   QWORD PTR [rip+0x10bf8]        # 0x140014110
   140003518:	and    QWORD PTR [rbx],0x0
   14000351c:	add    rbx,0x8
   140003520:	lea    rax,[rip+0x1b609]        # 0x14001eb30
   140003527:	cmp    rbx,rax
   14000352a:	jne    0x140003504
   14000352c:	add    rsp,0x20
   140003530:	pop    rbx
   140003531:	ret    
   140003532:	int3   
   140003533:	int3   
   140003534:	mov    rdx,QWORD PTR [rip+0x1aadd]        # 0x14001e018
   14000353b:	mov    ecx,0x40
   140003540:	mov    eax,edx
   140003542:	and    eax,0x3f
   140003545:	sub    ecx,eax
   140003547:	xor    eax,eax
   140003549:	ror    rax,cl
   14000354c:	xor    rax,rdx
   14000354f:	mov    QWORD PTR [rip+0x1b622],rax        # 0x14001eb78
   140003556:	ret    
   140003557:	int3   
   140003558:	mov    rax,rsp
   14000355b:	mov    QWORD PTR [rax+0x8],rbx
   14000355f:	mov    QWORD PTR [rax+0x10],rbp
   140003563:	mov    QWORD PTR [rax+0x18],rsi
   140003567:	mov    QWORD PTR [rax+0x20],rdi
   14000356b:	push   r14
   14000356d:	sub    rsp,0x20
   140003571:	mov    eax,DWORD PTR [rip+0x1b679]        # 0x14001ebf0
   140003577:	xor    ebx,ebx
   140003579:	mov    edi,0x3
   14000357e:	test   eax,eax
   140003580:	jne    0x140003589
   140003582:	mov    eax,0x200
   140003587:	jmp    0x14000358e
   140003589:	cmp    eax,edi
   14000358b:	cmovl  eax,edi
   14000358e:	movsxd rcx,eax
   140003591:	mov    edx,0x8
   140003596:	mov    DWORD PTR [rip+0x1b654],eax        # 0x14001ebf0
   14000359c:	call   0x140007e1c
   1400035a1:	xor    ecx,ecx
   1400035a3:	mov    QWORD PTR [rip+0x1b64e],rax        # 0x14001ebf8
   1400035aa:	call   0x140007cc4
   1400035af:	cmp    QWORD PTR [rip+0x1b642],rbx        # 0x14001ebf8
   1400035b6:	jne    0x1400035e7
   1400035b8:	mov    edx,0x8
   1400035bd:	mov    DWORD PTR [rip+0x1b62d],edi        # 0x14001ebf0
   1400035c3:	mov    rcx,rdi
   1400035c6:	call   0x140007e1c
   1400035cb:	xor    ecx,ecx
   1400035cd:	mov    QWORD PTR [rip+0x1b624],rax        # 0x14001ebf8
   1400035d4:	call   0x140007cc4
   1400035d9:	cmp    QWORD PTR [rip+0x1b618],rbx        # 0x14001ebf8
   1400035e0:	jne    0x1400035e7
   1400035e2:	or     eax,0xffffffff
   1400035e5:	jmp    0x14000365c
   1400035e7:	mov    r14,rbx
   1400035ea:	lea    rsi,[rip+0x1aa67]        # 0x14001e058
   1400035f1:	lea    rbp,[rip+0x1aa48]        # 0x14001e040
   1400035f8:	lea    rcx,[rbp+0x30]
   1400035fc:	xor    r8d,r8d
   1400035ff:	mov    edx,0xfa0
   140003604:	call   0x14000896c
   140003609:	mov    rax,QWORD PTR [rip+0x1b5e8]        # 0x14001ebf8
   140003610:	lea    rdx,[rip+0x1b969]        # 0x14001ef80
   140003617:	mov    rcx,rbx
   14000361a:	and    ecx,0x3f
   14000361d:	shl    rcx,0x6
   140003621:	mov    QWORD PTR [r14+rax*1],rbp
   140003625:	mov    rax,rbx
   140003628:	sar    rax,0x6
   14000362c:	mov    rax,QWORD PTR [rdx+rax*8]
   140003630:	mov    rcx,QWORD PTR [rax+rcx*1+0x28]
   140003635:	add    rcx,0x2
   140003639:	cmp    rcx,0x2
   14000363d:	ja     0x140003645
   14000363f:	mov    DWORD PTR [rsi],0xfffffffe
   140003645:	inc    rbx
   140003648:	add    rbp,0x58
   14000364c:	add    r14,0x8
   140003650:	add    rsi,0x58
   140003654:	sub    rdi,0x1
   140003658:	jne    0x1400035f8
   14000365a:	xor    eax,eax
   14000365c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003661:	mov    rbp,QWORD PTR [rsp+0x38]
   140003666:	mov    rsi,QWORD PTR [rsp+0x40]
   14000366b:	mov    rdi,QWORD PTR [rsp+0x48]
   140003670:	add    rsp,0x20
   140003674:	pop    r14
   140003676:	ret    
   140003677:	int3   
   140003678:	mov    eax,ecx
   14000367a:	lea    rcx,[rip+0x1a9bf]        # 0x14001e040
   140003681:	imul   rax,rax,0x58
   140003685:	add    rax,rcx
   140003688:	ret    
   140003689:	int3   
   14000368a:	int3   
   14000368b:	int3   
   14000368c:	rex push rbx
   14000368e:	sub    rsp,0x20
   140003692:	call   0x140008db8
   140003697:	call   0x140008c40
   14000369c:	xor    ebx,ebx
   14000369e:	mov    rcx,QWORD PTR [rip+0x1b553]        # 0x14001ebf8
   1400036a5:	mov    rcx,QWORD PTR [rbx+rcx*1]
   1400036a9:	call   0x140008ea8
   1400036ae:	mov    rax,QWORD PTR [rip+0x1b543]        # 0x14001ebf8
   1400036b5:	mov    rcx,QWORD PTR [rbx+rax*1]
   1400036b9:	add    rcx,0x30
   1400036bd:	call   QWORD PTR [rip+0x10a1d]        # 0x1400140e0
   1400036c3:	add    rbx,0x8
   1400036c7:	cmp    rbx,0x18
   1400036cb:	jne    0x14000369e
   1400036cd:	mov    rcx,QWORD PTR [rip+0x1b524]        # 0x14001ebf8
   1400036d4:	call   0x140007cc4
   1400036d9:	and    QWORD PTR [rip+0x1b517],0x0        # 0x14001ebf8
   1400036e1:	add    rsp,0x20
   1400036e5:	pop    rbx
   1400036e6:	ret    
   1400036e7:	int3   
   1400036e8:	add    rcx,0x30
   1400036ec:	rex.W jmp QWORD PTR [rip+0x109dd]        # 0x1400140d0
   1400036f3:	int3   
   1400036f4:	add    rcx,0x30
   1400036f8:	rex.W jmp QWORD PTR [rip+0x109d9]        # 0x1400140d8
   1400036ff:	int3   
   140003700:	mov    QWORD PTR [rsp+0x8],rbx
   140003705:	mov    QWORD PTR [rsp+0x20],r9
   14000370a:	push   rdi
   14000370b:	sub    rsp,0x20
   14000370f:	mov    rbx,r9
   140003712:	mov    rdi,r8
   140003715:	mov    rcx,QWORD PTR [rdx]
   140003718:	call   0x1400036e8
   14000371d:	nop
   14000371e:	mov    rcx,rdi
   140003721:	call   0x140003b40
   140003726:	mov    edi,eax
   140003728:	mov    rcx,QWORD PTR [rbx]
   14000372b:	call   0x1400036f4
   140003730:	mov    eax,edi
   140003732:	mov    rbx,QWORD PTR [rsp+0x30]
   140003737:	add    rsp,0x20
   14000373b:	pop    rdi
   14000373c:	ret    
   14000373d:	int3   
   14000373e:	int3   
   14000373f:	int3   
   140003740:	mov    QWORD PTR [rsp+0x8],rbx
   140003745:	mov    QWORD PTR [rsp+0x10],rbp
   14000374a:	mov    QWORD PTR [rsp+0x18],rsi
   14000374f:	push   rdi
   140003750:	sub    rsp,0x20
   140003754:	or     rax,0xffffffffffffffff
   140003758:	mov    rsi,rdx
   14000375b:	xor    edx,edx
   14000375d:	mov    rbp,rcx
   140003760:	div    rsi
   140003763:	and    rax,0xfffffffffffffffe
   140003767:	cmp    rax,0x2
   14000376b:	jae    0x14000377c
   14000376d:	call   0x140008500
   140003772:	mov    DWORD PTR [rax],0xc
   140003778:	xor    al,al
   14000377a:	jmp    0x1400037d7
   14000377c:	add    rsi,rsi
   14000377f:	xor    edi,edi
   140003781:	cmp    QWORD PTR [rcx+0x408],rdi
   140003788:	jne    0x140003797
   14000378a:	cmp    rsi,0x400
   140003791:	ja     0x140003797
   140003793:	mov    al,0x1
   140003795:	jmp    0x1400037d7
   140003797:	cmp    rsi,QWORD PTR [rcx+0x400]
   14000379e:	jbe    0x140003793
   1400037a0:	mov    rcx,rsi
   1400037a3:	call   0x140007d04
   1400037a8:	mov    rbx,rax
   1400037ab:	test   rax,rax
   1400037ae:	je     0x1400037cd
   1400037b0:	mov    rcx,QWORD PTR [rbp+0x408]
   1400037b7:	call   0x140007cc4
   1400037bc:	mov    QWORD PTR [rbp+0x408],rbx
   1400037c3:	mov    dil,0x1
   1400037c6:	mov    QWORD PTR [rbp+0x400],rsi
   1400037cd:	xor    ecx,ecx
   1400037cf:	call   0x140007cc4
   1400037d4:	mov    al,dil
   1400037d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037dc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400037e1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400037e6:	add    rsp,0x20
   1400037ea:	pop    rdi
   1400037eb:	ret    
   1400037ec:	mov    ecx,r8d
   1400037ef:	sub    ecx,0x2
   1400037f2:	je     0x140003818
   1400037f4:	sub    ecx,0x1
   1400037f7:	je     0x140003815
   1400037f9:	cmp    ecx,0x9
   1400037fc:	je     0x140003815
   1400037fe:	cmp    r8d,0xd
   140003802:	je     0x140003818
   140003804:	sub    dl,0x63
   140003807:	test   dl,0xef
   14000380a:	sete   cl
   14000380d:	xor    eax,eax
   14000380f:	test   cl,cl
   140003811:	sete   al
   140003814:	ret    
   140003815:	mov    al,0x1
   140003817:	ret    
   140003818:	xor    al,al
   14000381a:	ret    
   14000381b:	int3   
   14000381c:	mov    QWORD PTR [rsp+0x8],rbx
   140003821:	lea    rax,[rcx+0x58]
   140003825:	mov    r10,rcx
   140003828:	mov    rcx,QWORD PTR [rax+0x408]
   14000382f:	mov    ebx,r8d
   140003832:	test   rcx,rcx
   140003835:	mov    r11d,edx
   140003838:	cmove  rcx,rax
   14000383c:	cmp    QWORD PTR [rax+0x408],0x0
   140003844:	jne    0x14000384d
   140003846:	mov    eax,0x200
   14000384b:	jmp    0x140003857
   14000384d:	mov    rax,QWORD PTR [rax+0x400]
   140003854:	shr    rax,1
   140003857:	lea    r8,[rcx-0x1]
   14000385b:	add    r8,rax
   14000385e:	mov    QWORD PTR [r10+0x48],r8
   140003862:	mov    eax,DWORD PTR [r10+0x38]
   140003866:	test   eax,eax
   140003868:	jg     0x14000386f
   14000386a:	test   r11d,r11d
   14000386d:	je     0x1400038a5
   14000386f:	dec    eax
   140003871:	xor    edx,edx
   140003873:	mov    DWORD PTR [r10+0x38],eax
   140003877:	mov    eax,r11d
   14000387a:	div    ebx
   14000387c:	add    dl,0x30
   14000387f:	mov    r11d,eax
   140003882:	cmp    dl,0x39
   140003885:	jle    0x140003899
   140003887:	mov    al,r9b
   14000388a:	neg    al
   14000388c:	sbb    cl,cl
   14000388e:	and    cl,0xe0
   140003891:	add    cl,0x61
   140003894:	sub    cl,0x3a
   140003897:	add    dl,cl
   140003899:	mov    rax,QWORD PTR [r10+0x48]
   14000389d:	mov    BYTE PTR [rax],dl
   14000389f:	dec    QWORD PTR [r10+0x48]
   1400038a3:	jmp    0x140003862
   1400038a5:	sub    r8d,DWORD PTR [r10+0x48]
   1400038a9:	inc    QWORD PTR [r10+0x48]
   1400038ad:	mov    rbx,QWORD PTR [rsp+0x8]
   1400038b2:	mov    DWORD PTR [r10+0x50],r8d
   1400038b6:	ret    
   1400038b7:	int3   
   1400038b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400038bd:	lea    rax,[rcx+0x58]
   1400038c1:	mov    ebx,r8d
   1400038c4:	mov    r10,rcx
   1400038c7:	mov    r11,rdx
   1400038ca:	mov    rcx,QWORD PTR [rax+0x408]
   1400038d1:	test   rcx,rcx
   1400038d4:	cmove  rcx,rax
   1400038d8:	cmp    QWORD PTR [rax+0x408],0x0
   1400038e0:	jne    0x1400038e9
   1400038e2:	mov    eax,0x200
   1400038e7:	jmp    0x1400038f3
   1400038e9:	mov    rax,QWORD PTR [rax+0x400]
   1400038f0:	shr    rax,1
   1400038f3:	lea    r8,[rcx-0x1]
   1400038f7:	add    r8,rax
   1400038fa:	mov    QWORD PTR [r10+0x48],r8
   1400038fe:	mov    eax,DWORD PTR [r10+0x38]
   140003902:	test   eax,eax
   140003904:	jg     0x14000390b
   140003906:	test   r11,r11
   140003909:	je     0x140003942
   14000390b:	dec    eax
   14000390d:	xor    edx,edx
   14000390f:	mov    DWORD PTR [r10+0x38],eax
   140003913:	mov    rax,r11
   140003916:	div    rbx
   140003919:	add    dl,0x30
   14000391c:	mov    r11,rax
   14000391f:	cmp    dl,0x39
   140003922:	jle    0x140003936
   140003924:	mov    al,r9b
   140003927:	neg    al
   140003929:	sbb    cl,cl
   14000392b:	and    cl,0xe0
   14000392e:	add    cl,0x61
   140003931:	sub    cl,0x3a
   140003934:	add    dl,cl
   140003936:	mov    rax,QWORD PTR [r10+0x48]
   14000393a:	mov    BYTE PTR [rax],dl
   14000393c:	dec    QWORD PTR [r10+0x48]
   140003940:	jmp    0x1400038fe
   140003942:	sub    r8d,DWORD PTR [r10+0x48]
   140003946:	inc    QWORD PTR [r10+0x48]
   14000394a:	mov    rbx,QWORD PTR [rsp+0x8]
   14000394f:	mov    DWORD PTR [r10+0x50],r8d
   140003953:	ret    
   140003954:	test   r8d,r8d
   140003957:	jle    0x1400039d7
   140003959:	mov    rax,rsp
   14000395c:	mov    QWORD PTR [rax+0x8],rbx
   140003960:	mov    QWORD PTR [rax+0x10],rbp
   140003964:	mov    QWORD PTR [rax+0x18],rsi
   140003968:	mov    QWORD PTR [rax+0x20],rdi
   14000396c:	push   r14
   14000396e:	sub    rsp,0x20
   140003972:	mov    rbx,r9
   140003975:	mov    ebp,r8d
   140003978:	mov    r14b,dl
   14000397b:	mov    rsi,rcx
   14000397e:	xor    edi,edi
   140003980:	mov    rax,QWORD PTR [rsi]
   140003983:	mov    ecx,DWORD PTR [rax+0x14]
   140003986:	shr    ecx,0xc
   140003989:	test   cl,0x1
   14000398c:	je     0x140003998
   14000398e:	mov    rax,QWORD PTR [rsi]
   140003991:	cmp    QWORD PTR [rax+0x8],0x0
   140003996:	je     0x1400039a9
   140003998:	mov    rdx,QWORD PTR [rsi]
   14000399b:	movsx  ecx,r14b
   14000399f:	call   0x14000ac0c
   1400039a4:	cmp    eax,0xffffffff
   1400039a7:	je     0x1400039ba
   1400039a9:	inc    DWORD PTR [rbx]
   1400039ab:	mov    eax,DWORD PTR [rbx]
   1400039ad:	cmp    eax,0xffffffff
   1400039b0:	je     0x1400039bd
   1400039b2:	inc    edi
   1400039b4:	cmp    edi,ebp
   1400039b6:	jge    0x1400039bd
   1400039b8:	jmp    0x140003980
   1400039ba:	or     DWORD PTR [rbx],0xffffffff
   1400039bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039c2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400039c7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400039cc:	mov    rdi,QWORD PTR [rsp+0x48]
   1400039d1:	add    rsp,0x20
   1400039d5:	pop    r14
   1400039d7:	ret    
   1400039d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400039dd:	xor    r11d,r11d
   1400039e0:	mov    rbx,rcx
   1400039e3:	test   r8d,r8d
   1400039e6:	jle    0x140003a2d
   1400039e8:	mov    r10,QWORD PTR [rbx]
   1400039eb:	mov    rax,QWORD PTR [r10+0x8]
   1400039ef:	cmp    QWORD PTR [r10+0x10],rax
   1400039f3:	jne    0x140003a07
   1400039f5:	cmp    BYTE PTR [r10+0x18],0x0
   1400039fa:	je     0x140003a01
   1400039fc:	inc    DWORD PTR [r9]
   1400039ff:	jmp    0x140003a1f
   140003a01:	or     DWORD PTR [r9],0xffffffff
   140003a05:	jmp    0x140003a1f
   140003a07:	inc    DWORD PTR [r9]
   140003a0a:	mov    rax,QWORD PTR [rbx]
   140003a0d:	inc    QWORD PTR [rax+0x10]
   140003a11:	mov    rax,QWORD PTR [rbx]
   140003a14:	mov    rcx,QWORD PTR [rax]
   140003a17:	mov    BYTE PTR [rcx],dl
   140003a19:	mov    rax,QWORD PTR [rbx]
   140003a1c:	inc    QWORD PTR [rax]
   140003a1f:	cmp    DWORD PTR [r9],0xffffffff
   140003a23:	je     0x140003a2d
   140003a25:	inc    r11d
   140003a28:	cmp    r11d,r8d
   140003a2b:	jl     0x1400039e8
   140003a2d:	mov    rbx,QWORD PTR [rsp+0x8]
   140003a32:	ret    
   140003a33:	int3   
   140003a34:	rex push rbx
   140003a36:	sub    rsp,0x20
   140003a3a:	mov    rbx,rcx
   140003a3d:	xor    ecx,ecx
   140003a3f:	mov    QWORD PTR [rbx],rcx
   140003a42:	mov    QWORD PTR [rbx+0x8],rcx
   140003a46:	mov    QWORD PTR [rbx+0x18],rcx
   140003a4a:	mov    QWORD PTR [rbx+0x20],rcx
   140003a4e:	mov    QWORD PTR [rbx+0x10],rcx
   140003a52:	mov    QWORD PTR [rbx+0x28],rcx
   140003a56:	mov    QWORD PTR [rbx+0x30],rcx
   140003a5a:	mov    DWORD PTR [rbx+0x38],ecx
   140003a5d:	mov    WORD PTR [rbx+0x40],cx
   140003a61:	mov    DWORD PTR [rbx+0x50],ecx
   140003a64:	mov    BYTE PTR [rbx+0x54],cl
   140003a67:	mov    QWORD PTR [rbx+0x458],rcx
   140003a6e:	mov    QWORD PTR [rbx+0x460],rcx
   140003a75:	mov    rax,QWORD PTR [rdx]
   140003a78:	mov    QWORD PTR [rbx+0x468],rax
   140003a7f:	mov    rax,QWORD PTR [rsp+0x50]
   140003a84:	mov    QWORD PTR [rbx+0x8],rax
   140003a88:	mov    rax,QWORD PTR [rsp+0x58]
   140003a8d:	mov    QWORD PTR [rbx+0x20],rax
   140003a91:	mov    QWORD PTR [rbx],r8
   140003a94:	mov    QWORD PTR [rbx+0x18],r9
   140003a98:	mov    DWORD PTR [rbx+0x470],ecx
   140003a9e:	call   0x140008500
   140003aa3:	mov    QWORD PTR [rbx+0x10],rax
   140003aa7:	mov    rax,rbx
   140003aaa:	add    rsp,0x20
   140003aae:	pop    rbx
   140003aaf:	ret    
   140003ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ab5:	push   rdi
   140003ab6:	sub    rsp,0x20
   140003aba:	mov    BYTE PTR [rcx+0x18],0x0
   140003abe:	mov    rdi,rcx
   140003ac1:	test   rdx,rdx
   140003ac4:	je     0x140003acb
   140003ac6:	movups xmm0,XMMWORD PTR [rdx]
   140003ac9:	jmp    0x140003adc
   140003acb:	mov    eax,DWORD PTR [rip+0x1b2a7]        # 0x14001ed78
   140003ad1:	test   eax,eax
   140003ad3:	jne    0x140003ae3
   140003ad5:	movups xmm0,XMMWORD PTR [rip+0x1a82c]        # 0x14001e308
   140003adc:	movdqu XMMWORD PTR [rcx+0x8],xmm0
   140003ae1:	jmp    0x140003b32
   140003ae3:	call   0x140009d6c
   140003ae8:	mov    QWORD PTR [rdi],rax
   140003aeb:	lea    rdx,[rdi+0x8]
   140003aef:	mov    rcx,QWORD PTR [rax+0x90]
   140003af6:	mov    QWORD PTR [rdx],rcx
   140003af9:	mov    rcx,QWORD PTR [rax+0x88]
   140003b00:	mov    QWORD PTR [rdi+0x10],rcx
   140003b04:	mov    rcx,rax
   140003b07:	call   0x140009f00
   140003b0c:	mov    rcx,QWORD PTR [rdi]
   140003b0f:	lea    rdx,[rdi+0x10]
   140003b13:	call   0x140009f34
   140003b18:	mov    rcx,QWORD PTR [rdi]
   140003b1b:	mov    eax,DWORD PTR [rcx+0x3a8]
   140003b21:	test   al,0x2
   140003b23:	jne    0x140003b32
   140003b25:	or     eax,0x2
   140003b28:	mov    DWORD PTR [rcx+0x3a8],eax
   140003b2e:	mov    BYTE PTR [rdi+0x18],0x1
   140003b32:	mov    rax,rdi
   140003b35:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b3a:	add    rsp,0x20
   140003b3e:	pop    rdi
   140003b3f:	ret    
   140003b40:	mov    QWORD PTR [rsp+0x10],rbx
   140003b45:	mov    QWORD PTR [rsp+0x18],rsi
   140003b4a:	push   rdi
   140003b4b:	sub    rsp,0x4f0
   140003b52:	mov    rax,QWORD PTR [rip+0x1a4bf]        # 0x14001e018
   140003b59:	xor    rax,rsp
   140003b5c:	mov    QWORD PTR [rsp+0x4e0],rax
   140003b64:	mov    rax,QWORD PTR [rcx]
   140003b67:	mov    rbx,rcx
   140003b6a:	mov    rdi,QWORD PTR [rax]
   140003b6d:	mov    rcx,rdi
   140003b70:	call   0x14000ac3c
   140003b75:	mov    rdx,QWORD PTR [rbx+0x8]
   140003b79:	lea    rcx,[rsp+0x38]
   140003b7e:	mov    sil,al
   140003b81:	mov    rdx,QWORD PTR [rdx]
   140003b84:	call   0x140003ab0
   140003b89:	mov    rdx,QWORD PTR [rbx]
   140003b8c:	lea    rax,[rsp+0x40]
   140003b91:	mov    rcx,QWORD PTR [rbx+0x20]
   140003b95:	mov    r9,QWORD PTR [rbx+0x18]
   140003b99:	mov    r8,QWORD PTR [rdx]
   140003b9c:	lea    rdx,[rsp+0x30]
   140003ba1:	mov    rcx,QWORD PTR [rcx]
   140003ba4:	mov    r9,QWORD PTR [r9]
   140003ba7:	mov    QWORD PTR [rsp+0x30],r8
   140003bac:	mov    r8,QWORD PTR [rbx+0x10]
   140003bb0:	mov    QWORD PTR [rsp+0x28],rcx
   140003bb5:	lea    rcx,[rsp+0x60]
   140003bba:	mov    QWORD PTR [rsp+0x20],rax
   140003bbf:	mov    r8,QWORD PTR [r8]
   140003bc2:	call   0x140003a34
   140003bc7:	lea    rcx,[rsp+0x60]
   140003bcc:	call   0x140003d24
   140003bd1:	mov    rcx,QWORD PTR [rsp+0x4c0]
   140003bd9:	mov    ebx,eax
   140003bdb:	call   0x140007cc4
   140003be0:	and    QWORD PTR [rsp+0x4c0],0x0
   140003be9:	cmp    BYTE PTR [rsp+0x50],0x0
   140003bee:	je     0x140003bfc
   140003bf0:	mov    rcx,QWORD PTR [rsp+0x38]
   140003bf5:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140003bfc:	mov    rdx,rdi
   140003bff:	mov    cl,sil
   140003c02:	call   0x14000ad0c
   140003c07:	mov    eax,ebx
   140003c09:	mov    rcx,QWORD PTR [rsp+0x4e0]
   140003c11:	xor    rcx,rsp
   140003c14:	call   0x140013230
   140003c19:	lea    r11,[rsp+0x4f0]
   140003c21:	mov    rbx,QWORD PTR [r11+0x18]
   140003c25:	mov    rsi,QWORD PTR [r11+0x20]
   140003c29:	mov    rsp,r11
   140003c2c:	pop    rdi
   140003c2d:	ret    
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	mov    QWORD PTR [rsp+0x8],rbx
   140003c35:	push   rdi
   140003c36:	sub    rsp,0x20
   140003c3a:	mov    rbx,rcx
   140003c3d:	mov    rdi,rdx
   140003c40:	movsx  ecx,BYTE PTR [rcx]
   140003c43:	call   0x140009350
   140003c48:	cmp    eax,0x65
   140003c4b:	je     0x140003c5c
   140003c4d:	inc    rbx
   140003c50:	movzx  ecx,BYTE PTR [rbx]
   140003c53:	call   0x14000914c
   140003c58:	test   eax,eax
   140003c5a:	jne    0x140003c4d
   140003c5c:	movsx  ecx,BYTE PTR [rbx]
   140003c5f:	call   0x140009350
   140003c64:	cmp    eax,0x78
   140003c67:	jne    0x140003c6d
   140003c69:	add    rbx,0x2
   140003c6d:	mov    rax,QWORD PTR [rdi]
   140003c70:	mov    dl,BYTE PTR [rbx]
   140003c72:	mov    rcx,QWORD PTR [rax+0xf8]
   140003c79:	mov    rax,QWORD PTR [rcx]
   140003c7c:	mov    cl,BYTE PTR [rax]
   140003c7e:	mov    BYTE PTR [rbx],cl
   140003c80:	inc    rbx
   140003c83:	mov    al,BYTE PTR [rbx]
   140003c85:	mov    BYTE PTR [rbx],dl
   140003c87:	mov    dl,al
   140003c89:	mov    al,BYTE PTR [rbx]
   140003c8b:	inc    rbx
   140003c8e:	test   al,al
   140003c90:	jne    0x140003c83
   140003c92:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c97:	add    rsp,0x20
   140003c9b:	pop    rdi
   140003c9c:	ret    
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	mov    rax,rsp
   140003ca3:	mov    QWORD PTR [rax+0x10],rbx
   140003ca7:	mov    QWORD PTR [rax+0x18],rbp
   140003cab:	push   rsi
   140003cac:	push   rdi
   140003cad:	push   r14
   140003caf:	sub    rsp,0x20
   140003cb3:	mov    rsi,QWORD PTR [rcx+0x10]
   140003cb7:	mov    rdi,rcx
   140003cba:	mov    ebp,0x1
   140003cbf:	mov    rbx,rdx
   140003cc2:	lea    rdx,[rax+0x8]
   140003cc6:	mov    r14d,DWORD PTR [rsi]
   140003cc9:	and    DWORD PTR [rsi],0x0
   140003ccc:	lea    r8d,[rbp+0x9]
   140003cd0:	mov    rcx,QWORD PTR [rcx+0x18]
   140003cd4:	and    QWORD PTR [rax+0x8],0x0
   140003cd9:	sub    rcx,rbp
   140003cdc:	call   0x140009390
   140003ce1:	mov    DWORD PTR [rbx],eax
   140003ce3:	mov    rax,QWORD PTR [rdi+0x10]
   140003ce7:	cmp    DWORD PTR [rax],0x22
   140003cea:	je     0x140003cfd
   140003cec:	mov    rax,QWORD PTR [rsp+0x40]
   140003cf1:	cmp    rax,QWORD PTR [rdi+0x18]
   140003cf5:	jb     0x140003cfd
   140003cf7:	mov    QWORD PTR [rdi+0x18],rax
   140003cfb:	jmp    0x140003d00
   140003cfd:	xor    bpl,bpl
   140003d00:	cmp    DWORD PTR [rsi],0x0
   140003d03:	jne    0x140003d0d
   140003d05:	test   r14d,r14d
   140003d08:	je     0x140003d0d
   140003d0a:	mov    DWORD PTR [rsi],r14d
   140003d0d:	mov    rbx,QWORD PTR [rsp+0x48]
   140003d12:	mov    al,bpl
   140003d15:	mov    rbp,QWORD PTR [rsp+0x50]
   140003d1a:	add    rsp,0x20
   140003d1e:	pop    r14
   140003d20:	pop    rdi
   140003d21:	pop    rsi
   140003d22:	ret    
   140003d23:	int3   
   140003d24:	mov    QWORD PTR [rsp+0x8],rbx
   140003d29:	mov    QWORD PTR [rsp+0x10],rbp
   140003d2e:	push   rdi
   140003d2f:	sub    rsp,0x20
   140003d33:	mov    rbx,rcx
   140003d36:	mov    rcx,QWORD PTR [rcx+0x468]
   140003d3d:	test   rcx,rcx
   140003d40:	jne    0x140003d54
   140003d42:	call   0x140008500
   140003d47:	mov    DWORD PTR [rax],0x16
   140003d4d:	call   0x1400083e0
   140003d52:	jmp    0x140003d5d
   140003d54:	call   0x140005194
   140003d59:	test   al,al
   140003d5b:	jne    0x140003d65
   140003d5d:	or     eax,0xffffffff
   140003d60:	jmp    0x140003f0f
   140003d65:	cmp    QWORD PTR [rbx+0x18],0x0
   140003d6a:	je     0x140003d42
   140003d6c:	inc    DWORD PTR [rbx+0x470]
   140003d72:	cmp    DWORD PTR [rbx+0x470],0x2
   140003d79:	je     0x140003f0c
   140003d7f:	or     edi,0xffffffff
   140003d82:	lea    rbp,[rip+0x113a7]        # 0x140015130
   140003d89:	and    DWORD PTR [rbx+0x50],0x0
   140003d8d:	and    DWORD PTR [rbx+0x2c],0x0
   140003d91:	jmp    0x140003ee4
   140003d96:	inc    QWORD PTR [rbx+0x18]
   140003d9a:	cmp    DWORD PTR [rbx+0x28],0x0
   140003d9e:	jl     0x140003ef9
   140003da4:	mov    al,BYTE PTR [rbx+0x41]
   140003da7:	mov    edx,DWORD PTR [rbx+0x2c]
   140003daa:	sub    al,0x20
   140003dac:	cmp    al,0x5a
   140003dae:	ja     0x140003dbf
   140003db0:	movsx  rax,BYTE PTR [rbx+0x41]
   140003db5:	movzx  ecx,BYTE PTR [rax+rbp*1-0x20]
   140003dba:	and    ecx,0xf
   140003dbd:	jmp    0x140003dc1
   140003dbf:	xor    ecx,ecx
   140003dc1:	lea    eax,[rdx+rcx*8]
   140003dc4:	movzx  eax,BYTE PTR [rax+rbp*1]
   140003dc8:	shr    eax,0x4
   140003dcb:	mov    DWORD PTR [rbx+0x2c],eax
   140003dce:	cmp    eax,0x8
   140003dd1:	je     0x140003f1f
   140003dd7:	test   eax,eax
   140003dd9:	je     0x140003ed8
   140003ddf:	sub    eax,0x1
   140003de2:	je     0x140003ebf
   140003de8:	sub    eax,0x1
   140003deb:	je     0x140003e8a
   140003df1:	sub    eax,0x1
   140003df4:	je     0x140003e5e
   140003df6:	sub    eax,0x1
   140003df9:	je     0x140003e55
   140003dfb:	sub    eax,0x1
   140003dfe:	je     0x140003e28
   140003e00:	sub    eax,0x1
   140003e03:	je     0x140003e1b
   140003e05:	cmp    eax,0x1
   140003e08:	jne    0x140003f2f
   140003e0e:	mov    rcx,rbx
   140003e11:	call   0x140004640
   140003e16:	jmp    0x140003ee0
   140003e1b:	mov    rcx,rbx
   140003e1e:	call   0x140004348
   140003e23:	jmp    0x140003ee0
   140003e28:	cmp    BYTE PTR [rbx+0x41],0x2a
   140003e2c:	je     0x140003e3f
   140003e2e:	lea    rdx,[rbx+0x38]
   140003e32:	mov    rcx,rbx
   140003e35:	call   0x140003ca0
   140003e3a:	jmp    0x140003ee0
   140003e3f:	add    QWORD PTR [rbx+0x20],0x8
   140003e44:	mov    rax,QWORD PTR [rbx+0x20]
   140003e48:	mov    ecx,DWORD PTR [rax-0x8]
   140003e4b:	test   ecx,ecx
   140003e4d:	cmovs  ecx,edi
   140003e50:	mov    DWORD PTR [rbx+0x38],ecx
   140003e53:	jmp    0x140003e86
   140003e55:	and    DWORD PTR [rbx+0x38],0x0
   140003e59:	jmp    0x140003ee4
   140003e5e:	cmp    BYTE PTR [rbx+0x41],0x2a
   140003e62:	je     0x140003e6a
   140003e64:	lea    rdx,[rbx+0x34]
   140003e68:	jmp    0x140003e32
   140003e6a:	add    QWORD PTR [rbx+0x20],0x8
   140003e6f:	mov    rax,QWORD PTR [rbx+0x20]
   140003e73:	mov    ecx,DWORD PTR [rax-0x8]
   140003e76:	mov    DWORD PTR [rbx+0x34],ecx
   140003e79:	test   ecx,ecx
   140003e7b:	jns    0x140003e86
   140003e7d:	or     DWORD PTR [rbx+0x30],0x4
   140003e81:	neg    ecx
   140003e83:	mov    DWORD PTR [rbx+0x34],ecx
   140003e86:	mov    al,0x1
   140003e88:	jmp    0x140003ee0
   140003e8a:	mov    al,BYTE PTR [rbx+0x41]
   140003e8d:	cmp    al,0x20
   140003e8f:	je     0x140003eb9
   140003e91:	cmp    al,0x23
   140003e93:	je     0x140003eb3
   140003e95:	cmp    al,0x2b
   140003e97:	je     0x140003ead
   140003e99:	cmp    al,0x2d
   140003e9b:	je     0x140003ea7
   140003e9d:	cmp    al,0x30
   140003e9f:	jne    0x140003ee4
   140003ea1:	or     DWORD PTR [rbx+0x30],0x8
   140003ea5:	jmp    0x140003ee4
   140003ea7:	or     DWORD PTR [rbx+0x30],0x4
   140003eab:	jmp    0x140003ee4
   140003ead:	or     DWORD PTR [rbx+0x30],0x1
   140003eb1:	jmp    0x140003ee4
   140003eb3:	or     DWORD PTR [rbx+0x30],0x20
   140003eb7:	jmp    0x140003ee4
   140003eb9:	or     DWORD PTR [rbx+0x30],0x2
   140003ebd:	jmp    0x140003ee4
   140003ebf:	and    DWORD PTR [rbx+0x34],0x0
   140003ec3:	and    DWORD PTR [rbx+0x30],0x0
   140003ec7:	and    DWORD PTR [rbx+0x3c],0x0
   140003ecb:	mov    BYTE PTR [rbx+0x40],0x0
   140003ecf:	mov    DWORD PTR [rbx+0x38],edi
   140003ed2:	mov    BYTE PTR [rbx+0x54],0x0
   140003ed6:	jmp    0x140003ee4
   140003ed8:	mov    rcx,rbx
   140003edb:	call   0x140004138
   140003ee0:	test   al,al
   140003ee2:	je     0x140003f2f
   140003ee4:	mov    rax,QWORD PTR [rbx+0x18]
   140003ee8:	mov    cl,BYTE PTR [rax]
   140003eea:	mov    BYTE PTR [rbx+0x41],cl
   140003eed:	test   cl,cl
   140003eef:	jne    0x140003d96
   140003ef5:	inc    QWORD PTR [rbx+0x18]
   140003ef9:	inc    DWORD PTR [rbx+0x470]
   140003eff:	cmp    DWORD PTR [rbx+0x470],0x2
   140003f06:	jne    0x140003d89
   140003f0c:	mov    eax,DWORD PTR [rbx+0x28]
   140003f0f:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f14:	mov    rbp,QWORD PTR [rsp+0x38]
   140003f19:	add    rsp,0x20
   140003f1d:	pop    rdi
   140003f1e:	ret    
   140003f1f:	call   0x140008500
   140003f24:	mov    DWORD PTR [rax],0x16
   140003f2a:	call   0x1400083e0
   140003f2f:	mov    eax,edi
   140003f31:	jmp    0x140003f0f
   140003f33:	int3   
   140003f34:	mov    QWORD PTR [rsp+0x8],rbx
   140003f39:	mov    QWORD PTR [rsp+0x10],rbp
   140003f3e:	push   rdi
   140003f3f:	sub    rsp,0x20
   140003f43:	cmp    QWORD PTR [rcx+0x468],0x0
   140003f4b:	mov    rbx,rcx
   140003f4e:	jne    0x140003f68
   140003f50:	call   0x140008500
   140003f55:	mov    DWORD PTR [rax],0x16
   140003f5b:	call   0x1400083e0
   140003f60:	or     eax,0xffffffff
   140003f63:	jmp    0x140004112
   140003f68:	cmp    QWORD PTR [rcx+0x18],0x0
   140003f6d:	je     0x140003f50
   140003f6f:	inc    DWORD PTR [rcx+0x470]
   140003f75:	cmp    DWORD PTR [rcx+0x470],0x2
   140003f7c:	je     0x14000410f
   140003f82:	or     edi,0xffffffff
   140003f85:	lea    rbp,[rip+0x111a4]        # 0x140015130
   140003f8c:	and    DWORD PTR [rbx+0x50],0x0
   140003f90:	and    DWORD PTR [rbx+0x2c],0x0
   140003f94:	jmp    0x1400040e7
   140003f99:	inc    QWORD PTR [rbx+0x18]
   140003f9d:	cmp    DWORD PTR [rbx+0x28],0x0
   140003fa1:	jl     0x1400040fc
   140003fa7:	mov    al,BYTE PTR [rbx+0x41]
   140003faa:	mov    edx,DWORD PTR [rbx+0x2c]
   140003fad:	sub    al,0x20
   140003faf:	cmp    al,0x5a
   140003fb1:	ja     0x140003fc2
   140003fb3:	movsx  rax,BYTE PTR [rbx+0x41]
   140003fb8:	movzx  ecx,BYTE PTR [rax+rbp*1-0x20]
   140003fbd:	and    ecx,0xf
   140003fc0:	jmp    0x140003fc4
   140003fc2:	xor    ecx,ecx
   140003fc4:	lea    eax,[rdx+rcx*8]
   140003fc7:	movzx  eax,BYTE PTR [rax+rbp*1]
   140003fcb:	shr    eax,0x4
   140003fce:	mov    DWORD PTR [rbx+0x2c],eax
   140003fd1:	cmp    eax,0x8
   140003fd4:	je     0x140004122
   140003fda:	test   eax,eax
   140003fdc:	je     0x1400040db
   140003fe2:	sub    eax,0x1
   140003fe5:	je     0x1400040c2
   140003feb:	sub    eax,0x1
   140003fee:	je     0x14000408d
   140003ff4:	sub    eax,0x1
   140003ff7:	je     0x140004061
   140003ff9:	sub    eax,0x1
   140003ffc:	je     0x140004058
   140003ffe:	sub    eax,0x1
   140004001:	je     0x14000402b
   140004003:	sub    eax,0x1
   140004006:	je     0x14000401e
   140004008:	cmp    eax,0x1
   14000400b:	jne    0x140004132
   140004011:	mov    rcx,rbx
   140004014:	call   0x1400048bc
   140004019:	jmp    0x1400040e3
   14000401e:	mov    rcx,rbx
   140004021:	call   0x1400044c4
   140004026:	jmp    0x1400040e3
   14000402b:	cmp    BYTE PTR [rbx+0x41],0x2a
   14000402f:	je     0x140004042
   140004031:	lea    rdx,[rbx+0x38]
   140004035:	mov    rcx,rbx
   140004038:	call   0x140003ca0
   14000403d:	jmp    0x1400040e3
   140004042:	add    QWORD PTR [rbx+0x20],0x8
   140004047:	mov    rax,QWORD PTR [rbx+0x20]
   14000404b:	mov    ecx,DWORD PTR [rax-0x8]
   14000404e:	test   ecx,ecx
   140004050:	cmovs  ecx,edi
   140004053:	mov    DWORD PTR [rbx+0x38],ecx
   140004056:	jmp    0x140004089
   140004058:	and    DWORD PTR [rbx+0x38],0x0
   14000405c:	jmp    0x1400040e7
   140004061:	cmp    BYTE PTR [rbx+0x41],0x2a
   140004065:	je     0x14000406d
   140004067:	lea    rdx,[rbx+0x34]
   14000406b:	jmp    0x140004035
   14000406d:	add    QWORD PTR [rbx+0x20],0x8
   140004072:	mov    rax,QWORD PTR [rbx+0x20]
   140004076:	mov    ecx,DWORD PTR [rax-0x8]
   140004079:	mov    DWORD PTR [rbx+0x34],ecx
   14000407c:	test   ecx,ecx
   14000407e:	jns    0x140004089
   140004080:	or     DWORD PTR [rbx+0x30],0x4
   140004084:	neg    ecx
   140004086:	mov    DWORD PTR [rbx+0x34],ecx
   140004089:	mov    al,0x1
   14000408b:	jmp    0x1400040e3
   14000408d:	mov    al,BYTE PTR [rbx+0x41]
   140004090:	cmp    al,0x20
   140004092:	je     0x1400040bc
   140004094:	cmp    al,0x23
   140004096:	je     0x1400040b6
   140004098:	cmp    al,0x2b
   14000409a:	je     0x1400040b0
   14000409c:	cmp    al,0x2d
   14000409e:	je     0x1400040aa
   1400040a0:	cmp    al,0x30
   1400040a2:	jne    0x1400040e7
   1400040a4:	or     DWORD PTR [rbx+0x30],0x8
   1400040a8:	jmp    0x1400040e7
   1400040aa:	or     DWORD PTR [rbx+0x30],0x4
   1400040ae:	jmp    0x1400040e7
   1400040b0:	or     DWORD PTR [rbx+0x30],0x1
   1400040b4:	jmp    0x1400040e7
   1400040b6:	or     DWORD PTR [rbx+0x30],0x20
   1400040ba:	jmp    0x1400040e7
   1400040bc:	or     DWORD PTR [rbx+0x30],0x2
   1400040c0:	jmp    0x1400040e7
   1400040c2:	and    DWORD PTR [rbx+0x34],0x0
   1400040c6:	and    DWORD PTR [rbx+0x30],0x0
   1400040ca:	and    DWORD PTR [rbx+0x3c],0x0
   1400040ce:	mov    BYTE PTR [rbx+0x40],0x0
   1400040d2:	mov    DWORD PTR [rbx+0x38],edi
   1400040d5:	mov    BYTE PTR [rbx+0x54],0x0
   1400040d9:	jmp    0x1400040e7
   1400040db:	mov    rcx,rbx
   1400040de:	call   0x1400041a8
   1400040e3:	test   al,al
   1400040e5:	je     0x140004132
   1400040e7:	mov    rax,QWORD PTR [rbx+0x18]
   1400040eb:	mov    cl,BYTE PTR [rax]
   1400040ed:	mov    BYTE PTR [rbx+0x41],cl
   1400040f0:	test   cl,cl
   1400040f2:	jne    0x140003f99
   1400040f8:	inc    QWORD PTR [rbx+0x18]
   1400040fc:	inc    DWORD PTR [rbx+0x470]
   140004102:	cmp    DWORD PTR [rbx+0x470],0x2
   140004109:	jne    0x140003f8c
   14000410f:	mov    eax,DWORD PTR [rbx+0x28]
   140004112:	mov    rbx,QWORD PTR [rsp+0x30]
   140004117:	mov    rbp,QWORD PTR [rsp+0x38]
   14000411c:	add    rsp,0x20
   140004120:	pop    rdi
   140004121:	ret    
   140004122:	call   0x140008500
   140004127:	mov    DWORD PTR [rax],0x16
   14000412d:	call   0x1400083e0
   140004132:	mov    eax,edi
   140004134:	jmp    0x140004112
   140004136:	int3   
   140004137:	int3   
   140004138:	rex push rbx
   14000413a:	sub    rsp,0x20
   14000413e:	xor    edx,edx
   140004140:	mov    rbx,rcx
   140004143:	call   0x14000421c
   140004148:	test   al,al
   14000414a:	je     0x14000418f
   14000414c:	mov    rax,QWORD PTR [rbx+0x468]
   140004153:	mov    dl,BYTE PTR [rbx+0x41]
   140004156:	mov    ecx,DWORD PTR [rax+0x14]
   140004159:	shr    ecx,0xc
   14000415c:	test   cl,0x1
   14000415f:	je     0x14000416f
   140004161:	mov    rax,QWORD PTR [rbx+0x468]
   140004168:	cmp    QWORD PTR [rax+0x8],0x0
   14000416d:	je     0x140004188
   14000416f:	movsx  ecx,dl
   140004172:	mov    rdx,QWORD PTR [rbx+0x468]
   140004179:	call   0x14000ac0c
   14000417e:	cmp    eax,0xffffffff
   140004181:	jne    0x140004188
   140004183:	or     DWORD PTR [rbx+0x28],eax
   140004186:	jmp    0x14000418b
   140004188:	inc    DWORD PTR [rbx+0x28]
   14000418b:	mov    al,0x1
   14000418d:	jmp    0x1400041a1
   14000418f:	call   0x140008500
   140004194:	mov    DWORD PTR [rax],0x16
   14000419a:	call   0x1400083e0
   14000419f:	xor    al,al
   1400041a1:	add    rsp,0x20
   1400041a5:	pop    rbx
   1400041a6:	ret    
   1400041a7:	int3   
   1400041a8:	rex push rbx
   1400041aa:	sub    rsp,0x20
   1400041ae:	xor    edx,edx
   1400041b0:	mov    rbx,rcx
   1400041b3:	call   0x1400042b0
   1400041b8:	test   al,al
   1400041ba:	je     0x140004204
   1400041bc:	mov    rcx,QWORD PTR [rbx+0x468]
   1400041c3:	mov    r8b,BYTE PTR [rbx+0x41]
   1400041c7:	mov    rax,QWORD PTR [rcx+0x8]
   1400041cb:	cmp    QWORD PTR [rcx+0x10],rax
   1400041cf:	jne    0x1400041e2
   1400041d1:	cmp    BYTE PTR [rcx+0x18],0x0
   1400041d5:	je     0x1400041dc
   1400041d7:	inc    DWORD PTR [rbx+0x28]
   1400041da:	jmp    0x140004200
   1400041dc:	or     DWORD PTR [rbx+0x28],0xffffffff
   1400041e0:	jmp    0x140004200
   1400041e2:	inc    DWORD PTR [rbx+0x28]
   1400041e5:	inc    QWORD PTR [rcx+0x10]
   1400041e9:	mov    rcx,QWORD PTR [rbx+0x468]
   1400041f0:	mov    rdx,QWORD PTR [rcx]
   1400041f3:	mov    BYTE PTR [rdx],r8b
   1400041f6:	mov    rcx,QWORD PTR [rbx+0x468]
   1400041fd:	inc    QWORD PTR [rcx]
   140004200:	mov    al,0x1
   140004202:	jmp    0x140004216
   140004204:	call   0x140008500
   140004209:	mov    DWORD PTR [rax],0x16
   14000420f:	call   0x1400083e0
   140004214:	xor    al,al
   140004216:	add    rsp,0x20
   14000421a:	pop    rbx
   14000421b:	ret    
   14000421c:	rex push rbx
   14000421e:	sub    rsp,0x20
   140004222:	mov    rax,QWORD PTR [rcx+0x8]
   140004226:	mov    rbx,rcx
   140004229:	movzx  edx,BYTE PTR [rcx+0x41]
   14000422d:	mov    BYTE PTR [rcx+0x54],0x0
   140004231:	mov    ecx,0x8000
   140004236:	mov    rax,QWORD PTR [rax]
   140004239:	mov    rax,QWORD PTR [rax]
   14000423c:	test   WORD PTR [rax+rdx*2],cx
   140004240:	je     0x1400042a6
   140004242:	mov    rax,QWORD PTR [rbx+0x468]
   140004249:	mov    ecx,DWORD PTR [rax+0x14]
   14000424c:	shr    ecx,0xc
   14000424f:	test   cl,0x1
   140004252:	je     0x140004262
   140004254:	mov    rax,QWORD PTR [rbx+0x468]
   14000425b:	cmp    QWORD PTR [rax+0x8],0x0
   140004260:	je     0x14000427b
   140004262:	movsx  ecx,dl
   140004265:	mov    rdx,QWORD PTR [rbx+0x468]
   14000426c:	call   0x14000ac0c
   140004271:	cmp    eax,0xffffffff
   140004274:	jne    0x14000427b
   140004276:	or     DWORD PTR [rbx+0x28],eax
   140004279:	jmp    0x14000427e
   14000427b:	inc    DWORD PTR [rbx+0x28]
   14000427e:	mov    rax,QWORD PTR [rbx+0x18]
   140004282:	mov    cl,BYTE PTR [rax]
   140004284:	inc    rax
   140004287:	mov    BYTE PTR [rbx+0x41],cl
   14000428a:	mov    QWORD PTR [rbx+0x18],rax
   14000428e:	test   cl,cl
   140004290:	jne    0x1400042a6
   140004292:	call   0x140008500
   140004297:	mov    DWORD PTR [rax],0x16
   14000429d:	call   0x1400083e0
   1400042a2:	xor    al,al
   1400042a4:	jmp    0x1400042a8
   1400042a6:	mov    al,0x1
   1400042a8:	add    rsp,0x20
   1400042ac:	pop    rbx
   1400042ad:	ret    
   1400042ae:	int3   
   1400042af:	int3   
   1400042b0:	sub    rsp,0x28
   1400042b4:	mov    rax,QWORD PTR [rcx+0x8]
   1400042b8:	mov    rdx,rcx
   1400042bb:	movzx  r8d,BYTE PTR [rcx+0x41]
   1400042c0:	mov    BYTE PTR [rcx+0x54],0x0
   1400042c4:	mov    ecx,0x8000
   1400042c9:	mov    rax,QWORD PTR [rax]
   1400042cc:	mov    rax,QWORD PTR [rax]
   1400042cf:	test   WORD PTR [rax+r8*2],cx
   1400042d4:	je     0x14000433e
   1400042d6:	mov    rcx,QWORD PTR [rdx+0x468]
   1400042dd:	mov    rax,QWORD PTR [rcx+0x8]
   1400042e1:	cmp    QWORD PTR [rcx+0x10],rax
   1400042e5:	jne    0x1400042f8
   1400042e7:	cmp    BYTE PTR [rcx+0x18],0x0
   1400042eb:	je     0x1400042f2
   1400042ed:	inc    DWORD PTR [rdx+0x28]
   1400042f0:	jmp    0x140004316
   1400042f2:	or     DWORD PTR [rdx+0x28],0xffffffff
   1400042f6:	jmp    0x140004316
   1400042f8:	inc    DWORD PTR [rdx+0x28]
   1400042fb:	inc    QWORD PTR [rcx+0x10]
   1400042ff:	mov    rax,QWORD PTR [rdx+0x468]
   140004306:	mov    rcx,QWORD PTR [rax]
   140004309:	mov    BYTE PTR [rcx],r8b
   14000430c:	mov    rax,QWORD PTR [rdx+0x468]
   140004313:	inc    QWORD PTR [rax]
   140004316:	mov    rax,QWORD PTR [rdx+0x18]
   14000431a:	mov    cl,BYTE PTR [rax]
   14000431c:	inc    rax
   14000431f:	mov    BYTE PTR [rdx+0x41],cl
   140004322:	mov    QWORD PTR [rdx+0x18],rax
   140004326:	test   cl,cl
   140004328:	jne    0x14000433e
   14000432a:	call   0x140008500
   14000432f:	mov    DWORD PTR [rax],0x16
   140004335:	call   0x1400083e0
   14000433a:	xor    al,al
   14000433c:	jmp    0x140004340
   14000433e:	mov    al,0x1
   140004340:	add    rsp,0x28
   140004344:	ret    
   140004345:	int3   
   140004346:	int3   
   140004347:	int3   
   140004348:	sub    rsp,0x28
   14000434c:	mov    al,BYTE PTR [rcx+0x41]
   14000434f:	cmp    al,0x46
   140004351:	jne    0x14000436c
   140004353:	test   BYTE PTR [rcx],0x8
   140004356:	jne    0x1400044bc
   14000435c:	mov    DWORD PTR [rcx+0x2c],0x7
   140004363:	add    rsp,0x28
   140004367:	jmp    0x140004640
   14000436c:	cmp    al,0x4e
   14000436e:	jne    0x140004397
   140004370:	test   BYTE PTR [rcx],0x8
   140004373:	jne    0x1400044bc
   140004379:	mov    DWORD PTR [rcx+0x2c],0x8
   140004380:	call   0x140008500
   140004385:	mov    DWORD PTR [rax],0x16
   14000438b:	call   0x1400083e0
   140004390:	xor    al,al
   140004392:	jmp    0x1400044be
   140004397:	cmp    DWORD PTR [rcx+0x3c],0x0
   14000439b:	jne    0x140004380
   14000439d:	cmp    al,0x49
   14000439f:	je     0x14000445f
   1400043a5:	cmp    al,0x4c
   1400043a7:	je     0x140004456
   1400043ad:	cmp    al,0x54
   1400043af:	je     0x14000444d
   1400043b5:	cmp    al,0x68
   1400043b7:	je     0x14000442b
   1400043b9:	cmp    al,0x6a
   1400043bb:	je     0x14000441f
   1400043bd:	cmp    al,0x6c
   1400043bf:	je     0x1400043f7
   1400043c1:	cmp    al,0x74
   1400043c3:	je     0x1400043eb
   1400043c5:	cmp    al,0x77
   1400043c7:	je     0x1400043df
   1400043c9:	cmp    al,0x7a
   1400043cb:	mov    al,0x1
   1400043cd:	jne    0x1400044be
   1400043d3:	mov    DWORD PTR [rcx+0x3c],0x6
   1400043da:	jmp    0x1400044be
   1400043df:	mov    DWORD PTR [rcx+0x3c],0xc
   1400043e6:	jmp    0x1400044bc
   1400043eb:	mov    DWORD PTR [rcx+0x3c],0x7
   1400043f2:	jmp    0x1400044bc
   1400043f7:	mov    rax,QWORD PTR [rcx+0x18]
   1400043fb:	cmp    BYTE PTR [rax],0x6c
   1400043fe:	jne    0x140004413
   140004400:	inc    rax
   140004403:	mov    DWORD PTR [rcx+0x3c],0x4
   14000440a:	mov    QWORD PTR [rcx+0x18],rax
   14000440e:	jmp    0x1400044bc
   140004413:	mov    DWORD PTR [rcx+0x3c],0x3
   14000441a:	jmp    0x1400044bc
   14000441f:	mov    DWORD PTR [rcx+0x3c],0x5
   140004426:	jmp    0x1400044bc
   14000442b:	mov    rax,QWORD PTR [rcx+0x18]
   14000442f:	cmp    BYTE PTR [rax],0x68
   140004432:	jne    0x140004444
   140004434:	inc    rax
   140004437:	mov    DWORD PTR [rcx+0x3c],0x1
   14000443e:	mov    QWORD PTR [rcx+0x18],rax
   140004442:	jmp    0x1400044bc
   140004444:	mov    DWORD PTR [rcx+0x3c],0x2
   14000444b:	jmp    0x1400044bc
   14000444d:	mov    DWORD PTR [rcx+0x3c],0xd
   140004454:	jmp    0x1400044bc
   140004456:	mov    DWORD PTR [rcx+0x3c],0x8
   14000445d:	jmp    0x1400044bc
   14000445f:	mov    rdx,QWORD PTR [rcx+0x18]
   140004463:	mov    al,BYTE PTR [rdx]
   140004465:	cmp    al,0x33
   140004467:	jne    0x140004480
   140004469:	cmp    BYTE PTR [rdx+0x1],0x32
   14000446d:	jne    0x140004480
   14000446f:	lea    rax,[rdx+0x2]
   140004473:	mov    DWORD PTR [rcx+0x3c],0xa
   14000447a:	mov    QWORD PTR [rcx+0x18],rax
   14000447e:	jmp    0x1400044bc
   140004480:	cmp    al,0x36
   140004482:	jne    0x14000449b
   140004484:	cmp    BYTE PTR [rdx+0x1],0x34
   140004488:	jne    0x14000449b
   14000448a:	lea    rax,[rdx+0x2]
   14000448e:	mov    DWORD PTR [rcx+0x3c],0xb
   140004495:	mov    QWORD PTR [rcx+0x18],rax
   140004499:	jmp    0x1400044bc
   14000449b:	sub    al,0x58
   14000449d:	cmp    al,0x20
   14000449f:	ja     0x1400044bc
   1400044a1:	movsx  rax,al
   1400044a5:	movabs rdx,0x120821001
   1400044af:	bt     rdx,rax
   1400044b3:	jae    0x1400044bc
   1400044b5:	mov    DWORD PTR [rcx+0x3c],0x9
   1400044bc:	mov    al,0x1
   1400044be:	add    rsp,0x28
   1400044c2:	ret    
   1400044c3:	int3   
   1400044c4:	sub    rsp,0x28
   1400044c8:	mov    al,BYTE PTR [rcx+0x41]
   1400044cb:	cmp    al,0x46
   1400044cd:	jne    0x1400044e8
   1400044cf:	test   BYTE PTR [rcx],0x8
   1400044d2:	jne    0x140004638
   1400044d8:	mov    DWORD PTR [rcx+0x2c],0x7
   1400044df:	add    rsp,0x28
   1400044e3:	jmp    0x1400048bc
   1400044e8:	cmp    al,0x4e
   1400044ea:	jne    0x140004513
   1400044ec:	test   BYTE PTR [rcx],0x8
   1400044ef:	jne    0x140004638
   1400044f5:	mov    DWORD PTR [rcx+0x2c],0x8
   1400044fc:	call   0x140008500
   140004501:	mov    DWORD PTR [rax],0x16
   140004507:	call   0x1400083e0
   14000450c:	xor    al,al
   14000450e:	jmp    0x14000463a
   140004513:	cmp    DWORD PTR [rcx+0x3c],0x0
   140004517:	jne    0x1400044fc
   140004519:	cmp    al,0x49
   14000451b:	je     0x1400045db
   140004521:	cmp    al,0x4c
   140004523:	je     0x1400045d2
   140004529:	cmp    al,0x54
   14000452b:	je     0x1400045c9
   140004531:	cmp    al,0x68
   140004533:	je     0x1400045a7
   140004535:	cmp    al,0x6a
   140004537:	je     0x14000459b
   140004539:	cmp    al,0x6c
   14000453b:	je     0x140004573
   14000453d:	cmp    al,0x74
   14000453f:	je     0x140004567
   140004541:	cmp    al,0x77
   140004543:	je     0x14000455b
   140004545:	cmp    al,0x7a
   140004547:	mov    al,0x1
   140004549:	jne    0x14000463a
   14000454f:	mov    DWORD PTR [rcx+0x3c],0x6
   140004556:	jmp    0x14000463a
   14000455b:	mov    DWORD PTR [rcx+0x3c],0xc
   140004562:	jmp    0x140004638
   140004567:	mov    DWORD PTR [rcx+0x3c],0x7
   14000456e:	jmp    0x140004638
   140004573:	mov    rax,QWORD PTR [rcx+0x18]
   140004577:	cmp    BYTE PTR [rax],0x6c
   14000457a:	jne    0x14000458f
   14000457c:	inc    rax
   14000457f:	mov    DWORD PTR [rcx+0x3c],0x4
   140004586:	mov    QWORD PTR [rcx+0x18],rax
   14000458a:	jmp    0x140004638
   14000458f:	mov    DWORD PTR [rcx+0x3c],0x3
   140004596:	jmp    0x140004638
   14000459b:	mov    DWORD PTR [rcx+0x3c],0x5
   1400045a2:	jmp    0x140004638
   1400045a7:	mov    rax,QWORD PTR [rcx+0x18]
   1400045ab:	cmp    BYTE PTR [rax],0x68
   1400045ae:	jne    0x1400045c0
   1400045b0:	inc    rax
   1400045b3:	mov    DWORD PTR [rcx+0x3c],0x1
   1400045ba:	mov    QWORD PTR [rcx+0x18],rax
   1400045be:	jmp    0x140004638
   1400045c0:	mov    DWORD PTR [rcx+0x3c],0x2
   1400045c7:	jmp    0x140004638
   1400045c9:	mov    DWORD PTR [rcx+0x3c],0xd
   1400045d0:	jmp    0x140004638
   1400045d2:	mov    DWORD PTR [rcx+0x3c],0x8
   1400045d9:	jmp    0x140004638
   1400045db:	mov    rdx,QWORD PTR [rcx+0x18]
   1400045df:	mov    al,BYTE PTR [rdx]
   1400045e1:	cmp    al,0x33
   1400045e3:	jne    0x1400045fc
   1400045e5:	cmp    BYTE PTR [rdx+0x1],0x32
   1400045e9:	jne    0x1400045fc
   1400045eb:	lea    rax,[rdx+0x2]
   1400045ef:	mov    DWORD PTR [rcx+0x3c],0xa
   1400045f6:	mov    QWORD PTR [rcx+0x18],rax
   1400045fa:	jmp    0x140004638
   1400045fc:	cmp    al,0x36
   1400045fe:	jne    0x140004617
   140004600:	cmp    BYTE PTR [rdx+0x1],0x34
   140004604:	jne    0x140004617
   140004606:	lea    rax,[rdx+0x2]
   14000460a:	mov    DWORD PTR [rcx+0x3c],0xb
   140004611:	mov    QWORD PTR [rcx+0x18],rax
   140004615:	jmp    0x140004638
   140004617:	sub    al,0x58
   140004619:	cmp    al,0x20
   14000461b:	ja     0x140004638
   14000461d:	movsx  rax,al
   140004621:	movabs rdx,0x120821001
   14000462b:	bt     rdx,rax
   14000462f:	jae    0x140004638
   140004631:	mov    DWORD PTR [rcx+0x3c],0x9
   140004638:	mov    al,0x1
   14000463a:	add    rsp,0x28
   14000463e:	ret    
   14000463f:	int3   
   140004640:	mov    QWORD PTR [rsp+0x10],rbx
   140004645:	mov    QWORD PTR [rsp+0x18],rbp
   14000464a:	mov    QWORD PTR [rsp+0x20],rsi
   14000464f:	push   rdi
   140004650:	push   r14
   140004652:	push   r15
   140004654:	sub    rsp,0x30
   140004658:	movsx  eax,BYTE PTR [rcx+0x41]
   14000465c:	mov    rbx,rcx
   14000465f:	mov    r15d,0x1
   140004665:	cmp    eax,0x64
   140004668:	jg     0x1400046c7
   14000466a:	je     0x140004738
   140004670:	cmp    eax,0x41
   140004673:	je     0x14000474b
   140004679:	cmp    eax,0x43
   14000467c:	je     0x1400046b1
   14000467e:	cmp    eax,0x44
   140004681:	jle    0x140004754
   140004687:	cmp    eax,0x47
   14000468a:	jle    0x14000474b
   140004690:	cmp    eax,0x53
   140004693:	je     0x1400046f4
   140004695:	cmp    eax,0x58
   140004698:	je     0x140004709
   14000469a:	cmp    eax,0x5a
   14000469d:	je     0x1400046bd
   14000469f:	cmp    eax,0x61
   1400046a2:	je     0x14000474b
   1400046a8:	cmp    eax,0x63
   1400046ab:	jne    0x140004754
   1400046b1:	xor    edx,edx
   1400046b3:	call   0x140004dd4
   1400046b8:	jmp    0x140004750
   1400046bd:	call   0x140004b38
   1400046c2:	jmp    0x140004750
   1400046c7:	cmp    eax,0x67
   1400046ca:	jle    0x14000474b
   1400046cc:	cmp    eax,0x69
   1400046cf:	je     0x140004738
   1400046d1:	cmp    eax,0x6e
   1400046d4:	je     0x140004731
   1400046d6:	cmp    eax,0x6f
   1400046d9:	je     0x140004713
   1400046db:	cmp    eax,0x70
   1400046de:	je     0x1400046fb
   1400046e0:	cmp    eax,0x73
   1400046e3:	je     0x1400046f4
   1400046e5:	cmp    eax,0x75
   1400046e8:	je     0x14000473c
   1400046ea:	cmp    eax,0x78
   1400046ed:	jne    0x140004754
   1400046ef:	lea    edx,[rax-0x68]
   1400046f2:	jmp    0x140004741
   1400046f4:	call   0x140005104
   1400046f9:	jmp    0x140004750
   1400046fb:	mov    DWORD PTR [rcx+0x38],0x10
   140004702:	mov    DWORD PTR [rcx+0x3c],0xb
   140004709:	mov    r8b,r15b
   14000470c:	mov    edx,0x10
   140004711:	jmp    0x140004744
   140004713:	mov    ecx,DWORD PTR [rcx+0x30]
   140004716:	mov    eax,ecx
   140004718:	shr    eax,0x5
   14000471b:	test   r15b,al
   14000471e:	je     0x140004727
   140004720:	bts    ecx,0x7
   140004724:	mov    DWORD PTR [rbx+0x30],ecx
   140004727:	mov    edx,0x8
   14000472c:	mov    rcx,rbx
   14000472f:	jmp    0x140004741
   140004731:	call   0x140005028
   140004736:	jmp    0x140004750
   140004738:	or     DWORD PTR [rcx+0x30],0x10
   14000473c:	mov    edx,0xa
   140004741:	xor    r8d,r8d
   140004744:	call   0x140004e88
   140004749:	jmp    0x140004750
   14000474b:	call   0x140004bb8
   140004750:	test   al,al
   140004752:	jne    0x14000475b
   140004754:	xor    al,al
   140004756:	jmp    0x1400048a0
   14000475b:	cmp    BYTE PTR [rbx+0x40],0x0
   14000475f:	jne    0x14000489d
   140004765:	mov    edx,DWORD PTR [rbx+0x30]
   140004768:	xor    eax,eax
   14000476a:	mov    WORD PTR [rsp+0x50],ax
   14000476f:	xor    edi,edi
   140004771:	mov    BYTE PTR [rsp+0x52],al
   140004775:	mov    eax,edx
   140004777:	shr    eax,0x4
   14000477a:	test   r15b,al
   14000477d:	je     0x1400047ad
   14000477f:	mov    eax,edx
   140004781:	shr    eax,0x6
   140004784:	test   r15b,al
   140004787:	je     0x140004790
   140004789:	mov    BYTE PTR [rsp+0x50],0x2d
   14000478e:	jmp    0x1400047aa
   140004790:	test   r15b,dl
   140004793:	je     0x14000479c
   140004795:	mov    BYTE PTR [rsp+0x50],0x2b
   14000479a:	jmp    0x1400047aa
   14000479c:	mov    eax,edx
   14000479e:	shr    eax,1
   1400047a0:	test   r15b,al
   1400047a3:	je     0x1400047ad
   1400047a5:	mov    BYTE PTR [rsp+0x50],0x20
   1400047aa:	mov    rdi,r15
   1400047ad:	mov    cl,BYTE PTR [rbx+0x41]
   1400047b0:	lea    eax,[rcx-0x58]
   1400047b3:	test   al,0xdf
   1400047b5:	jne    0x1400047c6
   1400047b7:	mov    eax,edx
   1400047b9:	shr    eax,0x5
   1400047bc:	test   r15b,al
   1400047bf:	je     0x1400047c6
   1400047c1:	mov    r8b,r15b
   1400047c4:	jmp    0x1400047c9
   1400047c6:	xor    r8b,r8b
   1400047c9:	lea    eax,[rcx-0x41]
   1400047cc:	test   al,0xdf
   1400047ce:	sete   al
   1400047d1:	test   r8b,r8b
   1400047d4:	jne    0x1400047da
   1400047d6:	test   al,al
   1400047d8:	je     0x140004804
   1400047da:	mov    BYTE PTR [rsp+rdi*1+0x50],0x30
   1400047df:	add    rdi,r15
   1400047e2:	cmp    cl,0x58
   1400047e5:	je     0x1400047f0
   1400047e7:	cmp    cl,0x41
   1400047ea:	je     0x1400047f0
   1400047ec:	xor    al,al
   1400047ee:	jmp    0x1400047f3
   1400047f0:	mov    al,r15b
   1400047f3:	neg    al
   1400047f5:	sbb    al,al
   1400047f7:	and    al,0xe0
   1400047f9:	add    al,0x61
   1400047fb:	add    al,0x17
   1400047fd:	mov    BYTE PTR [rsp+rdi*1+0x50],al
   140004801:	add    rdi,r15
   140004804:	mov    esi,DWORD PTR [rbx+0x34]
   140004807:	sub    esi,DWORD PTR [rbx+0x50]
   14000480a:	sub    esi,edi
   14000480c:	test   dl,0xc
   14000480f:	jne    0x140004826
   140004811:	lea    r9,[rbx+0x28]
   140004815:	mov    r8d,esi
   140004818:	lea    rcx,[rbx+0x468]
   14000481f:	mov    dl,0x20
   140004821:	call   0x140003954
   140004826:	mov    rax,QWORD PTR [rbx+0x10]
   14000482a:	lea    rbp,[rbx+0x28]
   14000482e:	lea    r14,[rbx+0x468]
   140004835:	mov    QWORD PTR [rsp+0x20],rax
   14000483a:	mov    r9,rbp
   14000483d:	lea    rdx,[rsp+0x50]
   140004842:	mov    rcx,r14
   140004845:	mov    r8d,edi
   140004848:	call   0x1400053d0
   14000484d:	mov    ecx,DWORD PTR [rbx+0x30]
   140004850:	mov    eax,ecx
   140004852:	shr    eax,0x3
   140004855:	test   r15b,al
   140004858:	je     0x140004872
   14000485a:	shr    ecx,0x2
   14000485d:	test   r15b,cl
   140004860:	jne    0x140004872
   140004862:	mov    r9,rbp
   140004865:	mov    r8d,esi
   140004868:	mov    dl,0x30
   14000486a:	mov    rcx,r14
   14000486d:	call   0x140003954
   140004872:	xor    edx,edx
   140004874:	mov    rcx,rbx
   140004877:	call   0x140005220
   14000487c:	cmp    DWORD PTR [rbp+0x0],0x0
   140004880:	jl     0x14000489d
   140004882:	mov    eax,DWORD PTR [rbx+0x30]
   140004885:	shr    eax,0x2
   140004888:	test   r15b,al
   14000488b:	je     0x14000489d
   14000488d:	mov    r9,rbp
   140004890:	mov    r8d,esi
   140004893:	mov    dl,0x20
   140004895:	mov    rcx,r14
   140004898:	call   0x140003954
   14000489d:	mov    al,r15b
   1400048a0:	mov    rbx,QWORD PTR [rsp+0x58]
   1400048a5:	mov    rbp,QWORD PTR [rsp+0x60]
   1400048aa:	mov    rsi,QWORD PTR [rsp+0x68]
   1400048af:	add    rsp,0x30
   1400048b3:	pop    r15
   1400048b5:	pop    r14
   1400048b7:	pop    rdi
   1400048b8:	ret    
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	mov    QWORD PTR [rsp+0x10],rbx
   1400048c1:	mov    QWORD PTR [rsp+0x18],rbp
   1400048c6:	mov    QWORD PTR [rsp+0x20],rsi
   1400048cb:	push   rdi
   1400048cc:	push   r14
   1400048ce:	push   r15
   1400048d0:	sub    rsp,0x30
   1400048d4:	movsx  eax,BYTE PTR [rcx+0x41]
   1400048d8:	mov    rbx,rcx
   1400048db:	mov    r15d,0x1
   1400048e1:	cmp    eax,0x64
   1400048e4:	jg     0x140004943
   1400048e6:	je     0x1400049b4
   1400048ec:	cmp    eax,0x41
   1400048ef:	je     0x1400049c7
   1400048f5:	cmp    eax,0x43
   1400048f8:	je     0x14000492d
   1400048fa:	cmp    eax,0x44
   1400048fd:	jle    0x1400049d0
   140004903:	cmp    eax,0x47
   140004906:	jle    0x1400049c7
   14000490c:	cmp    eax,0x53
   14000490f:	je     0x140004970
   140004911:	cmp    eax,0x58
   140004914:	je     0x140004985
   140004916:	cmp    eax,0x5a
   140004919:	je     0x140004939
   14000491b:	cmp    eax,0x61
   14000491e:	je     0x1400049c7
   140004924:	cmp    eax,0x63
   140004927:	jne    0x1400049d0
   14000492d:	xor    edx,edx
   14000492f:	call   0x140004dd4
   140004934:	jmp    0x1400049cc
   140004939:	call   0x140004b38
   14000493e:	jmp    0x1400049cc
   140004943:	cmp    eax,0x67
   140004946:	jle    0x1400049c7
   140004948:	cmp    eax,0x69
   14000494b:	je     0x1400049b4
   14000494d:	cmp    eax,0x6e
   140004950:	je     0x1400049ad
   140004952:	cmp    eax,0x6f
   140004955:	je     0x14000498f
   140004957:	cmp    eax,0x70
   14000495a:	je     0x140004977
   14000495c:	cmp    eax,0x73
   14000495f:	je     0x140004970
   140004961:	cmp    eax,0x75
   140004964:	je     0x1400049b8
   140004966:	cmp    eax,0x78
   140004969:	jne    0x1400049d0
   14000496b:	lea    edx,[rax-0x68]
   14000496e:	jmp    0x1400049bd
   140004970:	call   0x140005104
   140004975:	jmp    0x1400049cc
   140004977:	mov    DWORD PTR [rcx+0x38],0x10
   14000497e:	mov    DWORD PTR [rcx+0x3c],0xb
   140004985:	mov    r8b,r15b
   140004988:	mov    edx,0x10
   14000498d:	jmp    0x1400049c0
   14000498f:	mov    ecx,DWORD PTR [rcx+0x30]
   140004992:	mov    eax,ecx
   140004994:	shr    eax,0x5
   140004997:	test   r15b,al
   14000499a:	je     0x1400049a3
   14000499c:	bts    ecx,0x7
   1400049a0:	mov    DWORD PTR [rbx+0x30],ecx
   1400049a3:	mov    edx,0x8
   1400049a8:	mov    rcx,rbx
   1400049ab:	jmp    0x1400049bd
   1400049ad:	call   0x140005028
   1400049b2:	jmp    0x1400049cc
   1400049b4:	or     DWORD PTR [rcx+0x30],0x10
   1400049b8:	mov    edx,0xa
   1400049bd:	xor    r8d,r8d
   1400049c0:	call   0x140004e88
   1400049c5:	jmp    0x1400049cc
   1400049c7:	call   0x140004bb8
   1400049cc:	test   al,al
   1400049ce:	jne    0x1400049d7
   1400049d0:	xor    al,al
   1400049d2:	jmp    0x140004b1c
   1400049d7:	cmp    BYTE PTR [rbx+0x40],0x0
   1400049db:	jne    0x140004b19
   1400049e1:	mov    edx,DWORD PTR [rbx+0x30]
   1400049e4:	xor    eax,eax
   1400049e6:	mov    WORD PTR [rsp+0x50],ax
   1400049eb:	xor    edi,edi
   1400049ed:	mov    BYTE PTR [rsp+0x52],al
   1400049f1:	mov    eax,edx
   1400049f3:	shr    eax,0x4
   1400049f6:	test   r15b,al
   1400049f9:	je     0x140004a29
   1400049fb:	mov    eax,edx
   1400049fd:	shr    eax,0x6
   140004a00:	test   r15b,al
   140004a03:	je     0x140004a0c
   140004a05:	mov    BYTE PTR [rsp+0x50],0x2d
   140004a0a:	jmp    0x140004a26
   140004a0c:	test   r15b,dl
   140004a0f:	je     0x140004a18
   140004a11:	mov    BYTE PTR [rsp+0x50],0x2b
   140004a16:	jmp    0x140004a26
   140004a18:	mov    eax,edx
   140004a1a:	shr    eax,1
   140004a1c:	test   r15b,al
   140004a1f:	je     0x140004a29
   140004a21:	mov    BYTE PTR [rsp+0x50],0x20
   140004a26:	mov    rdi,r15
   140004a29:	mov    cl,BYTE PTR [rbx+0x41]
   140004a2c:	lea    eax,[rcx-0x58]
   140004a2f:	test   al,0xdf
   140004a31:	jne    0x140004a42
   140004a33:	mov    eax,edx
   140004a35:	shr    eax,0x5
   140004a38:	test   r15b,al
   140004a3b:	je     0x140004a42
   140004a3d:	mov    r8b,r15b
   140004a40:	jmp    0x140004a45
   140004a42:	xor    r8b,r8b
   140004a45:	lea    eax,[rcx-0x41]
   140004a48:	test   al,0xdf
   140004a4a:	sete   al
   140004a4d:	test   r8b,r8b
   140004a50:	jne    0x140004a56
   140004a52:	test   al,al
   140004a54:	je     0x140004a80
   140004a56:	mov    BYTE PTR [rsp+rdi*1+0x50],0x30
   140004a5b:	add    rdi,r15
   140004a5e:	cmp    cl,0x58
   140004a61:	je     0x140004a6c
   140004a63:	cmp    cl,0x41
   140004a66:	je     0x140004a6c
   140004a68:	xor    al,al
   140004a6a:	jmp    0x140004a6f
   140004a6c:	mov    al,r15b
   140004a6f:	neg    al
   140004a71:	sbb    al,al
   140004a73:	and    al,0xe0
   140004a75:	add    al,0x61
   140004a77:	add    al,0x17
   140004a79:	mov    BYTE PTR [rsp+rdi*1+0x50],al
   140004a7d:	add    rdi,r15
   140004a80:	mov    esi,DWORD PTR [rbx+0x34]
   140004a83:	sub    esi,DWORD PTR [rbx+0x50]
   140004a86:	sub    esi,edi
   140004a88:	test   dl,0xc
   140004a8b:	jne    0x140004aa2
   140004a8d:	lea    r9,[rbx+0x28]
   140004a91:	mov    r8d,esi
   140004a94:	lea    rcx,[rbx+0x468]
   140004a9b:	mov    dl,0x20
   140004a9d:	call   0x1400039d8
   140004aa2:	mov    rax,QWORD PTR [rbx+0x10]
   140004aa6:	lea    rbp,[rbx+0x28]
   140004aaa:	lea    r14,[rbx+0x468]
   140004ab1:	mov    QWORD PTR [rsp+0x20],rax
   140004ab6:	mov    r9,rbp
   140004ab9:	lea    rdx,[rsp+0x50]
   140004abe:	mov    rcx,r14
   140004ac1:	mov    r8d,edi
   140004ac4:	call   0x1400054c8
   140004ac9:	mov    ecx,DWORD PTR [rbx+0x30]
   140004acc:	mov    eax,ecx
   140004ace:	shr    eax,0x3
   140004ad1:	test   r15b,al
   140004ad4:	je     0x140004aee
   140004ad6:	shr    ecx,0x2
   140004ad9:	test   r15b,cl
   140004adc:	jne    0x140004aee
   140004ade:	mov    r9,rbp
   140004ae1:	mov    r8d,esi
   140004ae4:	mov    dl,0x30
   140004ae6:	mov    rcx,r14
   140004ae9:	call   0x1400039d8
   140004aee:	xor    edx,edx
   140004af0:	mov    rcx,rbx
   140004af3:	call   0x1400052f8
   140004af8:	cmp    DWORD PTR [rbp+0x0],0x0
   140004afc:	jl     0x140004b19
   140004afe:	mov    eax,DWORD PTR [rbx+0x30]
   140004b01:	shr    eax,0x2
   140004b04:	test   r15b,al
   140004b07:	je     0x140004b19
   140004b09:	mov    r9,rbp
   140004b0c:	mov    r8d,esi
   140004b0f:	mov    dl,0x20
   140004b11:	mov    rcx,r14
   140004b14:	call   0x1400039d8
   140004b19:	mov    al,r15b
   140004b1c:	mov    rbx,QWORD PTR [rsp+0x58]
   140004b21:	mov    rbp,QWORD PTR [rsp+0x60]
   140004b26:	mov    rsi,QWORD PTR [rsp+0x68]
   140004b2b:	add    rsp,0x30
   140004b2f:	pop    r15
   140004b31:	pop    r14
   140004b33:	pop    rdi
   140004b34:	ret    
   140004b35:	int3   
   140004b36:	int3   
   140004b37:	int3   
   140004b38:	mov    QWORD PTR [rsp+0x8],rbx
   140004b3d:	mov    QWORD PTR [rsp+0x10],rsi
   140004b42:	push   rdi
   140004b43:	sub    rsp,0x20
   140004b47:	add    QWORD PTR [rcx+0x20],0x8
   140004b4c:	mov    rbx,rcx
   140004b4f:	mov    rax,QWORD PTR [rcx+0x20]
   140004b53:	mov    rdi,QWORD PTR [rax-0x8]
   140004b57:	test   rdi,rdi
   140004b5a:	je     0x140004b8f
   140004b5c:	mov    rsi,QWORD PTR [rdi+0x8]
   140004b60:	test   rsi,rsi
   140004b63:	je     0x140004b8f
   140004b65:	mov    r8d,DWORD PTR [rcx+0x3c]
   140004b69:	mov    dl,BYTE PTR [rcx+0x41]
   140004b6c:	mov    rcx,QWORD PTR [rcx]
   140004b6f:	call   0x1400037ec
   140004b74:	test   al,al
   140004b76:	mov    QWORD PTR [rbx+0x48],rsi
   140004b7a:	movzx  eax,WORD PTR [rdi]
   140004b7d:	je     0x140004b8a
   140004b7f:	shr    eax,1
   140004b81:	mov    DWORD PTR [rbx+0x50],eax
   140004b84:	mov    BYTE PTR [rbx+0x54],0x1
   140004b88:	jmp    0x140004ba5
   140004b8a:	mov    DWORD PTR [rbx+0x50],eax
   140004b8d:	jmp    0x140004ba1
   140004b8f:	lea    rcx,[rip+0x105f6]        # 0x14001518c
   140004b96:	mov    DWORD PTR [rbx+0x50],0x6
   140004b9d:	mov    QWORD PTR [rbx+0x48],rcx
   140004ba1:	mov    BYTE PTR [rbx+0x54],0x0
   140004ba5:	mov    rbx,QWORD PTR [rsp+0x30]
   140004baa:	mov    al,0x1
   140004bac:	mov    rsi,QWORD PTR [rsp+0x38]
   140004bb1:	add    rsp,0x20
   140004bb5:	pop    rdi
   140004bb6:	ret    
   140004bb7:	int3   
   140004bb8:	mov    QWORD PTR [rsp+0x10],rbx
   140004bbd:	push   rdi
   140004bbe:	sub    rsp,0x50
   140004bc2:	or     DWORD PTR [rcx+0x30],0x10
   140004bc6:	mov    rbx,rcx
   140004bc9:	mov    eax,DWORD PTR [rcx+0x38]
   140004bcc:	test   eax,eax
   140004bce:	jns    0x140004be6
   140004bd0:	mov    al,BYTE PTR [rcx+0x41]
   140004bd3:	sub    al,0x41
   140004bd5:	and    al,0xdf
   140004bd7:	neg    al
   140004bd9:	sbb    eax,eax
   140004bdb:	and    eax,0xfffffff9
   140004bde:	add    eax,0xd
   140004be1:	mov    DWORD PTR [rcx+0x38],eax
   140004be4:	jmp    0x140004bf8
   140004be6:	jne    0x140004bf8
   140004be8:	mov    al,BYTE PTR [rcx+0x41]
   140004beb:	sub    al,0x47
   140004bed:	test   al,0xdf
   140004bef:	jne    0x140004bf8
   140004bf1:	mov    DWORD PTR [rcx+0x38],0x1
   140004bf8:	mov    eax,DWORD PTR [rcx+0x38]
   140004bfb:	lea    rdi,[rcx+0x58]
   140004bff:	add    eax,0x15d
   140004c04:	mov    rcx,rdi
   140004c07:	movsxd rdx,eax
   140004c0a:	call   0x140003740
   140004c0f:	mov    r8d,0x200
   140004c15:	test   al,al
   140004c17:	jne    0x140004c3a
   140004c19:	cmp    QWORD PTR [rdi+0x408],0x0
   140004c21:	jne    0x140004c28
   140004c23:	mov    eax,r8d
   140004c26:	jmp    0x140004c32
   140004c28:	mov    rax,QWORD PTR [rdi+0x400]
   140004c2f:	shr    rax,1
   140004c32:	add    eax,0xfffffea3
   140004c37:	mov    DWORD PTR [rbx+0x38],eax
   140004c3a:	mov    rax,QWORD PTR [rdi+0x408]
   140004c41:	test   rax,rax
   140004c44:	cmove  rax,rdi
   140004c48:	mov    QWORD PTR [rbx+0x48],rax
   140004c4c:	xor    eax,eax
   140004c4e:	add    QWORD PTR [rbx+0x20],0x8
   140004c53:	cmp    QWORD PTR [rdi+0x408],0x0
   140004c5b:	mov    QWORD PTR [rsp+0x60],rax
   140004c60:	mov    rax,QWORD PTR [rbx+0x20]
   140004c64:	movsd  xmm0,QWORD PTR [rax-0x8]
   140004c69:	movsd  QWORD PTR [rsp+0x60],xmm0
   140004c6f:	jne    0x140004c76
   140004c71:	mov    r9,r8
   140004c74:	jmp    0x140004c80
   140004c76:	mov    r9,QWORD PTR [rdi+0x400]
   140004c7d:	shr    r9,1
   140004c80:	mov    rcx,QWORD PTR [rdi+0x408]
   140004c87:	test   rcx,rcx
   140004c8a:	jne    0x140004c95
   140004c8c:	lea    r10,[rdi+0x200]
   140004c93:	jmp    0x140004ca2
   140004c95:	mov    r10,QWORD PTR [rdi+0x400]
   140004c9c:	shr    r10,1
   140004c9f:	add    r10,rcx
   140004ca2:	cmp    rcx,0x0
   140004ca6:	je     0x140004cb2
   140004ca8:	mov    r8,QWORD PTR [rdi+0x400]
   140004caf:	shr    r8,1
   140004cb2:	mov    rax,QWORD PTR [rbx+0x8]
   140004cb6:	mov    rdx,rcx
   140004cb9:	mov    QWORD PTR [rsp+0x40],rax
   140004cbe:	test   rcx,rcx
   140004cc1:	mov    rax,QWORD PTR [rbx]
   140004cc4:	movsx  ecx,BYTE PTR [rbx+0x41]
   140004cc8:	cmove  rdx,rdi
   140004ccc:	mov    QWORD PTR [rsp+0x38],rax
   140004cd1:	mov    eax,DWORD PTR [rbx+0x38]
   140004cd4:	mov    DWORD PTR [rsp+0x30],eax
   140004cd8:	mov    DWORD PTR [rsp+0x28],ecx
   140004cdc:	lea    rcx,[rsp+0x60]
   140004ce1:	mov    QWORD PTR [rsp+0x20],r9
   140004ce6:	mov    r9,r10
   140004ce9:	call   0x14000a9a0
   140004cee:	mov    eax,DWORD PTR [rbx+0x30]
   140004cf1:	shr    eax,0x5
   140004cf4:	test   al,0x1
   140004cf6:	je     0x140004d0b
   140004cf8:	cmp    DWORD PTR [rbx+0x38],0x0
   140004cfc:	jne    0x140004d0b
   140004cfe:	mov    rdx,QWORD PTR [rbx+0x8]
   140004d02:	mov    rcx,QWORD PTR [rbx+0x48]
   140004d06:	call   0x140003c30
   140004d0b:	mov    al,BYTE PTR [rbx+0x41]
   140004d0e:	sub    al,0x47
   140004d10:	test   al,0xdf
   140004d12:	jne    0x140004d81
   140004d14:	mov    eax,DWORD PTR [rbx+0x30]
   140004d17:	shr    eax,0x5
   140004d1a:	test   al,0x1
   140004d1c:	jne    0x140004d81
   140004d1e:	mov    rax,QWORD PTR [rbx+0x8]
   140004d22:	mov    rdx,QWORD PTR [rbx+0x48]
   140004d26:	mov    rcx,QWORD PTR [rax]
   140004d29:	mov    rax,QWORD PTR [rcx+0xf8]
   140004d30:	mov    rcx,QWORD PTR [rax]
   140004d33:	mov    r8b,BYTE PTR [rcx]
   140004d36:	jmp    0x140004d40
   140004d38:	cmp    al,r8b
   140004d3b:	je     0x140004d46
   140004d3d:	inc    rdx
   140004d40:	mov    al,BYTE PTR [rdx]
   140004d42:	test   al,al
   140004d44:	jne    0x140004d38
   140004d46:	mov    al,BYTE PTR [rdx]
   140004d48:	inc    rdx
   140004d4b:	test   al,al
   140004d4d:	je     0x140004d81
   140004d4f:	jmp    0x140004d5a
   140004d51:	sub    al,0x45
   140004d53:	test   al,0xdf
   140004d55:	je     0x140004d60
   140004d57:	inc    rdx
   140004d5a:	mov    al,BYTE PTR [rdx]
   140004d5c:	test   al,al
   140004d5e:	jne    0x140004d51
   140004d60:	mov    rcx,rdx
   140004d63:	dec    rdx
   140004d66:	cmp    BYTE PTR [rdx],0x30
   140004d69:	je     0x140004d63
   140004d6b:	cmp    BYTE PTR [rdx],r8b
   140004d6e:	jne    0x140004d73
   140004d70:	dec    rdx
   140004d73:	mov    al,BYTE PTR [rcx]
   140004d75:	inc    rdx
   140004d78:	inc    rcx
   140004d7b:	mov    BYTE PTR [rdx],al
   140004d7d:	test   al,al
   140004d7f:	jne    0x140004d73
   140004d81:	mov    rax,QWORD PTR [rbx+0x48]
   140004d85:	cmp    BYTE PTR [rax],0x2d
   140004d88:	jne    0x140004d95
   140004d8a:	or     DWORD PTR [rbx+0x30],0x40
   140004d8e:	inc    rax
   140004d91:	mov    QWORD PTR [rbx+0x48],rax
   140004d95:	mov    rdx,QWORD PTR [rbx+0x48]
   140004d99:	mov    al,BYTE PTR [rdx]
   140004d9b:	sub    al,0x49
   140004d9d:	cmp    al,0x25
   140004d9f:	ja     0x140004db5
   140004da1:	movabs rcx,0x2100000021
   140004dab:	bt     rcx,rax
   140004daf:	jae    0x140004db5
   140004db1:	mov    BYTE PTR [rbx+0x41],0x73
   140004db5:	or     rcx,0xffffffffffffffff
   140004db9:	inc    rcx
   140004dbc:	cmp    BYTE PTR [rdx+rcx*1],0x0
   140004dc0:	jne    0x140004db9
   140004dc2:	mov    DWORD PTR [rbx+0x50],ecx
   140004dc5:	mov    al,0x1
   140004dc7:	mov    rbx,QWORD PTR [rsp+0x68]
   140004dcc:	add    rsp,0x50
   140004dd0:	pop    rdi
   140004dd1:	ret    
   140004dd2:	int3   
   140004dd3:	int3   
   140004dd4:	mov    QWORD PTR [rsp+0x8],rbx
   140004dd9:	push   rdi
   140004dda:	sub    rsp,0x20
   140004dde:	mov    r8d,DWORD PTR [rcx+0x3c]
   140004de2:	mov    rbx,rcx
   140004de5:	mov    dl,BYTE PTR [rcx+0x41]
   140004de8:	mov    rcx,QWORD PTR [rcx]
   140004deb:	call   0x1400037ec
   140004df0:	lea    rdi,[rbx+0x58]
   140004df4:	test   al,al
   140004df6:	je     0x140004e43
   140004df8:	add    QWORD PTR [rbx+0x20],0x8
   140004dfd:	cmp    QWORD PTR [rdi+0x408],0x0
   140004e05:	mov    rax,QWORD PTR [rbx+0x20]
   140004e09:	jne    0x140004e13
   140004e0b:	mov    r8d,0x200
   140004e11:	jmp    0x140004e1d
   140004e13:	mov    r8,QWORD PTR [rdi+0x400]
   140004e1a:	shr    r8,1
   140004e1d:	mov    rdx,QWORD PTR [rdi+0x408]
   140004e24:	lea    rcx,[rbx+0x50]
   140004e28:	movzx  r9d,WORD PTR [rax-0x8]
   140004e2d:	test   rdx,rdx
   140004e30:	cmove  rdx,rdi
   140004e34:	call   0x140009694
   140004e39:	test   eax,eax
   140004e3b:	je     0x140004e67
   140004e3d:	mov    BYTE PTR [rbx+0x40],0x1
   140004e41:	jmp    0x140004e67
   140004e43:	mov    r8,QWORD PTR [rdi+0x408]
   140004e4a:	test   r8,r8
   140004e4d:	cmove  r8,rdi
   140004e51:	add    QWORD PTR [rbx+0x20],0x8
   140004e56:	mov    rcx,QWORD PTR [rbx+0x20]
   140004e5a:	mov    dl,BYTE PTR [rcx-0x8]
   140004e5d:	mov    BYTE PTR [r8],dl
   140004e60:	mov    DWORD PTR [rbx+0x50],0x1
   140004e67:	mov    rcx,QWORD PTR [rdi+0x408]
   140004e6e:	mov    al,0x1
   140004e70:	test   rcx,rcx
   140004e73:	cmove  rcx,rdi
   140004e77:	mov    QWORD PTR [rbx+0x48],rcx
   140004e7b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e80:	add    rsp,0x20
   140004e84:	pop    rdi
   140004e85:	ret    
   140004e86:	int3   
   140004e87:	int3   
   140004e88:	rex push rbx
   140004e8a:	sub    rsp,0x20
   140004e8e:	mov    r11d,0x8
   140004e94:	mov    rbx,rcx
   140004e97:	mov    ecx,DWORD PTR [rcx+0x3c]
   140004e9a:	mov    r9b,r8b
   140004e9d:	mov    r10d,edx
   140004ea0:	lea    r8d,[r11-0x4]
   140004ea4:	cmp    ecx,0x5
   140004ea7:	jg     0x140004f0e
   140004ea9:	je     0x140004ec3
   140004eab:	test   ecx,ecx
   140004ead:	je     0x140004efb
   140004eaf:	sub    ecx,0x1
   140004eb2:	je     0x140004f07
   140004eb4:	sub    ecx,0x1
   140004eb7:	je     0x140004f00
   140004eb9:	sub    ecx,0x1
   140004ebc:	je     0x140004efb
   140004ebe:	cmp    ecx,0x1
   140004ec1:	jne    0x140004f1f
   140004ec3:	mov    rdx,r11
   140004ec6:	mov    rax,rdx
   140004ec9:	sub    rax,0x1
   140004ecd:	je     0x140004f75
   140004ed3:	sub    rax,0x1
   140004ed7:	je     0x140004f56
   140004ed9:	sub    rax,0x2
   140004edd:	je     0x140004f39
   140004edf:	cmp    rax,r8
   140004ee2:	je     0x140004f23
   140004ee4:	call   0x140008500
   140004ee9:	mov    DWORD PTR [rax],0x16
   140004eef:	call   0x1400083e0
   140004ef4:	xor    al,al
   140004ef6:	jmp    0x140005021
   140004efb:	mov    rdx,r8
   140004efe:	jmp    0x140004ec6
   140004f00:	mov    edx,0x2
   140004f05:	jmp    0x140004ec6
   140004f07:	mov    edx,0x1
   140004f0c:	jmp    0x140004ec6
   140004f0e:	sub    ecx,0x6
   140004f11:	je     0x140004ec3
   140004f13:	sub    ecx,0x1
   140004f16:	je     0x140004ec3
   140004f18:	sub    ecx,0x2
   140004f1b:	je     0x140004ec3
   140004f1d:	jmp    0x140004eb9
   140004f1f:	xor    edx,edx
   140004f21:	jmp    0x140004ec6
   140004f23:	mov    eax,DWORD PTR [rbx+0x30]
   140004f26:	add    QWORD PTR [rbx+0x20],r11
   140004f2a:	shr    eax,0x4
   140004f2d:	test   al,0x1
   140004f2f:	mov    rax,QWORD PTR [rbx+0x20]
   140004f33:	mov    rcx,QWORD PTR [rax-0x8]
   140004f37:	jmp    0x140004f92
   140004f39:	mov    eax,DWORD PTR [rbx+0x30]
   140004f3c:	add    QWORD PTR [rbx+0x20],r11
   140004f40:	shr    eax,0x4
   140004f43:	test   al,0x1
   140004f45:	mov    rax,QWORD PTR [rbx+0x20]
   140004f49:	je     0x140004f51
   140004f4b:	movsxd rcx,DWORD PTR [rax-0x8]
   140004f4f:	jmp    0x140004f92
   140004f51:	mov    ecx,DWORD PTR [rax-0x8]
   140004f54:	jmp    0x140004f92
   140004f56:	mov    eax,DWORD PTR [rbx+0x30]
   140004f59:	add    QWORD PTR [rbx+0x20],r11
   140004f5d:	shr    eax,0x4
   140004f60:	test   al,0x1
   140004f62:	mov    rax,QWORD PTR [rbx+0x20]
   140004f66:	je     0x140004f6f
   140004f68:	movsx  rcx,WORD PTR [rax-0x8]
   140004f6d:	jmp    0x140004f92
   140004f6f:	movzx  ecx,WORD PTR [rax-0x8]
   140004f73:	jmp    0x140004f92
   140004f75:	mov    eax,DWORD PTR [rbx+0x30]
   140004f78:	add    QWORD PTR [rbx+0x20],r11
   140004f7c:	shr    eax,0x4
   140004f7f:	test   al,0x1
   140004f81:	mov    rax,QWORD PTR [rbx+0x20]
   140004f85:	je     0x140004f8e
   140004f87:	movsx  rcx,BYTE PTR [rax-0x8]
   140004f8c:	jmp    0x140004f92
   140004f8e:	movzx  ecx,BYTE PTR [rax-0x8]
   140004f92:	mov    r8d,DWORD PTR [rbx+0x30]
   140004f96:	mov    eax,r8d
   140004f99:	shr    eax,0x4
   140004f9c:	test   al,0x1
   140004f9e:	je     0x140004fb0
   140004fa0:	test   rcx,rcx
   140004fa3:	jns    0x140004fb0
   140004fa5:	neg    rcx
   140004fa8:	or     r8d,0x40
   140004fac:	mov    DWORD PTR [rbx+0x30],r8d
   140004fb0:	cmp    DWORD PTR [rbx+0x38],0x0
   140004fb4:	jge    0x140004fbf
   140004fb6:	mov    DWORD PTR [rbx+0x38],0x1
   140004fbd:	jmp    0x140004fd0
   140004fbf:	and    DWORD PTR [rbx+0x30],0xfffffff7
   140004fc3:	mov    eax,0x200
   140004fc8:	cmp    DWORD PTR [rbx+0x38],eax
   140004fcb:	jle    0x140004fd0
   140004fcd:	mov    DWORD PTR [rbx+0x38],eax
   140004fd0:	test   rcx,rcx
   140004fd3:	jne    0x140004fd9
   140004fd5:	and    DWORD PTR [rbx+0x30],0xffffffdf
   140004fd9:	mov    r8d,r10d
   140004fdc:	cmp    rdx,r11
   140004fdf:	jne    0x140004fee
   140004fe1:	mov    rdx,rcx
   140004fe4:	mov    rcx,rbx
   140004fe7:	call   0x1400038b8
   140004fec:	jmp    0x140004ff8
   140004fee:	mov    edx,ecx
   140004ff0:	mov    rcx,rbx
   140004ff3:	call   0x14000381c
   140004ff8:	mov    eax,DWORD PTR [rbx+0x30]
   140004ffb:	shr    eax,0x7
   140004ffe:	test   al,0x1
   140005000:	je     0x14000501f
   140005002:	cmp    DWORD PTR [rbx+0x50],0x0
   140005006:	je     0x140005011
   140005008:	mov    rcx,QWORD PTR [rbx+0x48]
   14000500c:	cmp    BYTE PTR [rcx],0x30
   14000500f:	je     0x14000501f
   140005011:	dec    QWORD PTR [rbx+0x48]
   140005015:	mov    rcx,QWORD PTR [rbx+0x48]
   140005019:	mov    BYTE PTR [rcx],0x30
   14000501c:	inc    DWORD PTR [rbx+0x50]
   14000501f:	mov    al,0x1
   140005021:	add    rsp,0x20
   140005025:	pop    rbx
   140005026:	ret    
   140005027:	int3   
   140005028:	mov    QWORD PTR [rsp+0x8],rbx
   14000502d:	mov    QWORD PTR [rsp+0x10],rsi
   140005032:	push   rdi
   140005033:	sub    rsp,0x20
   140005037:	mov    ebx,0x8
   14000503c:	mov    rdi,rcx
   14000503f:	add    QWORD PTR [rcx+0x20],rbx
   140005043:	mov    rax,QWORD PTR [rcx+0x20]
   140005047:	mov    rsi,QWORD PTR [rax-0x8]
   14000504b:	call   0x14000ac24
   140005050:	test   eax,eax
   140005052:	jne    0x14000506b
   140005054:	call   0x140008500
   140005059:	mov    DWORD PTR [rax],0x16
   14000505f:	call   0x1400083e0
   140005064:	xor    al,al
   140005066:	jmp    0x1400050f3
   14000506b:	mov    ecx,DWORD PTR [rdi+0x3c]
   14000506e:	mov    edx,0x4
   140005073:	cmp    ecx,0x5
   140005076:	jg     0x1400050a4
   140005078:	je     0x1400050b8
   14000507a:	test   ecx,ecx
   14000507c:	je     0x1400050b5
   14000507e:	sub    ecx,0x1
   140005081:	je     0x14000509d
   140005083:	sub    ecx,0x1
   140005086:	je     0x140005096
   140005088:	sub    ecx,0x1
   14000508b:	je     0x1400050b5
   14000508d:	cmp    ecx,0x1
   140005090:	je     0x1400050b8
   140005092:	xor    ebx,ebx
   140005094:	jmp    0x1400050b8
   140005096:	mov    ebx,0x2
   14000509b:	jmp    0x1400050b8
   14000509d:	mov    ebx,0x1
   1400050a2:	jmp    0x1400050b8
   1400050a4:	sub    ecx,0x6
   1400050a7:	je     0x1400050b8
   1400050a9:	sub    ecx,0x1
   1400050ac:	je     0x1400050b8
   1400050ae:	sub    ecx,0x2
   1400050b1:	je     0x1400050b8
   1400050b3:	jmp    0x140005088
   1400050b5:	mov    rbx,rdx
   1400050b8:	sub    rbx,0x1
   1400050bc:	je     0x1400050e8
   1400050be:	sub    rbx,0x1
   1400050c2:	je     0x1400050df
   1400050c4:	sub    rbx,0x2
   1400050c8:	je     0x1400050d8
   1400050ca:	cmp    rbx,rdx
   1400050cd:	jne    0x140005054
   1400050cf:	movsxd rax,DWORD PTR [rdi+0x28]
   1400050d3:	mov    QWORD PTR [rsi],rax
   1400050d6:	jmp    0x1400050ed
   1400050d8:	mov    eax,DWORD PTR [rdi+0x28]
   1400050db:	mov    DWORD PTR [rsi],eax
   1400050dd:	jmp    0x1400050ed
   1400050df:	movzx  eax,WORD PTR [rdi+0x28]
   1400050e3:	mov    WORD PTR [rsi],ax
   1400050e6:	jmp    0x1400050ed
   1400050e8:	mov    cl,BYTE PTR [rdi+0x28]
   1400050eb:	mov    BYTE PTR [rsi],cl
   1400050ed:	mov    BYTE PTR [rdi+0x40],0x1
   1400050f1:	mov    al,0x1
   1400050f3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400050f8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400050fd:	add    rsp,0x20
   140005101:	pop    rdi
   140005102:	ret    
   140005103:	int3   
   140005104:	mov    QWORD PTR [rsp+0x8],rbx
   140005109:	mov    QWORD PTR [rsp+0x10],rsi
   14000510e:	push   rdi
   14000510f:	sub    rsp,0x20
   140005113:	add    QWORD PTR [rcx+0x20],0x8
   140005118:	mov    rbx,rcx
   14000511b:	mov    rax,QWORD PTR [rcx+0x20]
   14000511f:	mov    esi,DWORD PTR [rcx+0x38]
   140005122:	cmp    esi,0xffffffff
   140005125:	mov    r8d,DWORD PTR [rcx+0x3c]
   140005129:	mov    dl,BYTE PTR [rcx+0x41]
   14000512c:	mov    rdi,QWORD PTR [rax-0x8]
   140005130:	mov    eax,0x7fffffff
   140005135:	mov    QWORD PTR [rcx+0x48],rdi
   140005139:	cmove  esi,eax
   14000513c:	mov    rcx,QWORD PTR [rcx]
   14000513f:	call   0x1400037ec
   140005144:	movsxd rdx,esi
   140005147:	test   al,al
   140005149:	je     0x140005168
   14000514b:	test   rdi,rdi
   14000514e:	mov    BYTE PTR [rbx+0x54],0x1
   140005152:	lea    rcx,[rip+0x1003f]        # 0x140015198
   140005159:	cmovne rcx,rdi
   14000515d:	mov    QWORD PTR [rbx+0x48],rcx
   140005161:	call   0x140009804
   140005166:	jmp    0x14000517f
   140005168:	test   rdi,rdi
   14000516b:	lea    rcx,[rip+0x1001a]        # 0x14001518c
   140005172:	cmovne rcx,rdi
   140005176:	mov    QWORD PTR [rbx+0x48],rcx
   14000517a:	call   0x1400096a8
   14000517f:	mov    rsi,QWORD PTR [rsp+0x38]
   140005184:	mov    DWORD PTR [rbx+0x50],eax
   140005187:	mov    al,0x1
   140005189:	mov    rbx,QWORD PTR [rsp+0x30]
   14000518e:	add    rsp,0x20
   140005192:	pop    rdi
   140005193:	ret    
   140005194:	sub    rsp,0x28
   140005198:	mov    eax,DWORD PTR [rcx+0x14]
   14000519b:	shr    eax,0xc
   14000519e:	test   al,0x1
   1400051a0:	jne    0x140005219
   1400051a2:	call   0x14000abe4
   1400051a7:	movsxd r8,eax
   1400051aa:	lea    rcx,[rip+0x18faf]        # 0x14001e160
   1400051b1:	lea    r9,[rip+0x19dc8]        # 0x14001ef80
   1400051b8:	lea    eax,[r8+0x2]
   1400051bc:	cmp    eax,0x1
   1400051bf:	jbe    0x1400051d8
   1400051c1:	mov    rdx,r8
   1400051c4:	mov    rax,r8
   1400051c7:	and    edx,0x3f
   1400051ca:	sar    rax,0x6
   1400051ce:	shl    rdx,0x6
   1400051d2:	add    rdx,QWORD PTR [r9+rax*8]
   1400051d6:	jmp    0x1400051db
   1400051d8:	mov    rdx,rcx
   1400051db:	cmp    BYTE PTR [rdx+0x39],0x0
   1400051df:	jne    0x140005205
   1400051e1:	lea    eax,[r8+0x2]
   1400051e5:	cmp    eax,0x1
   1400051e8:	jbe    0x1400051ff
   1400051ea:	mov    rcx,r8
   1400051ed:	mov    rax,r8
   1400051f0:	and    ecx,0x3f
   1400051f3:	sar    rax,0x6
   1400051f7:	shl    rcx,0x6
   1400051fb:	add    rcx,QWORD PTR [r9+rax*8]
   1400051ff:	test   BYTE PTR [rcx+0x3d],0x1
   140005203:	je     0x140005219
   140005205:	call   0x140008500
   14000520a:	mov    DWORD PTR [rax],0x16
   140005210:	call   0x1400083e0
   140005215:	xor    al,al
   140005217:	jmp    0x14000521b
   140005219:	mov    al,0x1
   14000521b:	add    rsp,0x28
   14000521f:	ret    
   140005220:	mov    QWORD PTR [rsp+0x10],rbx
   140005225:	mov    QWORD PTR [rsp+0x18],rsi
   14000522a:	push   rdi
   14000522b:	sub    rsp,0x50
   14000522f:	mov    rax,QWORD PTR [rip+0x18de2]        # 0x14001e018
   140005236:	xor    rax,rsp
   140005239:	mov    QWORD PTR [rsp+0x40],rax
   14000523e:	cmp    BYTE PTR [rcx+0x54],0x0
   140005242:	mov    rbx,rcx
   140005245:	je     0x1400052b5
   140005247:	mov    eax,DWORD PTR [rcx+0x50]
   14000524a:	test   eax,eax
   14000524c:	jle    0x1400052b5
   14000524e:	mov    rsi,QWORD PTR [rcx+0x48]
   140005252:	xor    edi,edi
   140005254:	test   eax,eax
   140005256:	je     0x1400052d6
   140005258:	movzx  r9d,WORD PTR [rsi]
   14000525c:	lea    rdx,[rsp+0x34]
   140005261:	and    DWORD PTR [rsp+0x30],0x0
   140005266:	lea    rcx,[rsp+0x30]
   14000526b:	mov    r8d,0x6
   140005271:	lea    rsi,[rsi+0x2]
   140005275:	call   0x140009694
   14000527a:	test   eax,eax
   14000527c:	jne    0x1400052af
   14000527e:	mov    r8d,DWORD PTR [rsp+0x30]
   140005283:	test   r8d,r8d
   140005286:	je     0x1400052af
   140005288:	mov    rax,QWORD PTR [rbx+0x10]
   14000528c:	lea    r9,[rbx+0x28]
   140005290:	lea    rcx,[rbx+0x468]
   140005297:	mov    QWORD PTR [rsp+0x20],rax
   14000529c:	lea    rdx,[rsp+0x34]
   1400052a1:	call   0x1400053d0
   1400052a6:	inc    edi
   1400052a8:	cmp    edi,DWORD PTR [rbx+0x50]
   1400052ab:	jne    0x140005258
   1400052ad:	jmp    0x1400052d6
   1400052af:	or     DWORD PTR [rbx+0x28],0xffffffff
   1400052b3:	jmp    0x1400052d6
   1400052b5:	mov    rax,QWORD PTR [rbx+0x10]
   1400052b9:	lea    r9,[rcx+0x28]
   1400052bd:	mov    r8d,DWORD PTR [rbx+0x50]
   1400052c1:	add    rcx,0x468
   1400052c8:	mov    rdx,QWORD PTR [rbx+0x48]
   1400052cc:	mov    QWORD PTR [rsp+0x20],rax
   1400052d1:	call   0x1400053d0
   1400052d6:	mov    al,0x1
   1400052d8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400052dd:	xor    rcx,rsp
   1400052e0:	call   0x140013230
   1400052e5:	mov    rbx,QWORD PTR [rsp+0x68]
   1400052ea:	mov    rsi,QWORD PTR [rsp+0x70]
   1400052ef:	add    rsp,0x50
   1400052f3:	pop    rdi
   1400052f4:	ret    
   1400052f5:	int3   
   1400052f6:	int3   
   1400052f7:	int3   
   1400052f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400052fd:	mov    QWORD PTR [rsp+0x18],rsi
   140005302:	push   rdi
   140005303:	sub    rsp,0x50
   140005307:	mov    rax,QWORD PTR [rip+0x18d0a]        # 0x14001e018
   14000530e:	xor    rax,rsp
   140005311:	mov    QWORD PTR [rsp+0x40],rax
   140005316:	cmp    BYTE PTR [rcx+0x54],0x0
   14000531a:	mov    rbx,rcx
   14000531d:	je     0x14000538d
   14000531f:	mov    eax,DWORD PTR [rcx+0x50]
   140005322:	test   eax,eax
   140005324:	jle    0x14000538d
   140005326:	mov    rsi,QWORD PTR [rcx+0x48]
   14000532a:	xor    edi,edi
   14000532c:	test   eax,eax
   14000532e:	je     0x1400053ae
   140005330:	movzx  r9d,WORD PTR [rsi]
   140005334:	lea    rdx,[rsp+0x34]
   140005339:	and    DWORD PTR [rsp+0x30],0x0
   14000533e:	lea    rcx,[rsp+0x30]
   140005343:	mov    r8d,0x6
   140005349:	lea    rsi,[rsi+0x2]
   14000534d:	call   0x140009694
   140005352:	test   eax,eax
   140005354:	jne    0x140005387
   140005356:	mov    r8d,DWORD PTR [rsp+0x30]
   14000535b:	test   r8d,r8d
   14000535e:	je     0x140005387
   140005360:	mov    rax,QWORD PTR [rbx+0x10]
   140005364:	lea    r9,[rbx+0x28]
   140005368:	lea    rcx,[rbx+0x468]
   14000536f:	mov    QWORD PTR [rsp+0x20],rax
   140005374:	lea    rdx,[rsp+0x34]
   140005379:	call   0x1400054c8
   14000537e:	inc    edi
   140005380:	cmp    edi,DWORD PTR [rbx+0x50]
   140005383:	jne    0x140005330
   140005385:	jmp    0x1400053ae
   140005387:	or     DWORD PTR [rbx+0x28],0xffffffff
   14000538b:	jmp    0x1400053ae
   14000538d:	mov    rax,QWORD PTR [rbx+0x10]
   140005391:	lea    r9,[rcx+0x28]
   140005395:	mov    r8d,DWORD PTR [rbx+0x50]
   140005399:	add    rcx,0x468
   1400053a0:	mov    rdx,QWORD PTR [rbx+0x48]
   1400053a4:	mov    QWORD PTR [rsp+0x20],rax
   1400053a9:	call   0x1400054c8
   1400053ae:	mov    al,0x1
   1400053b0:	mov    rcx,QWORD PTR [rsp+0x40]
   1400053b5:	xor    rcx,rsp
   1400053b8:	call   0x140013230
   1400053bd:	mov    rbx,QWORD PTR [rsp+0x68]
   1400053c2:	mov    rsi,QWORD PTR [rsp+0x70]
   1400053c7:	add    rsp,0x50
   1400053cb:	pop    rdi
   1400053cc:	ret    
   1400053cd:	int3   
   1400053ce:	int3   
   1400053cf:	int3   
   1400053d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400053d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400053da:	mov    QWORD PTR [rsp+0x18],rsi
   1400053df:	push   rdi
   1400053e0:	push   r14
   1400053e2:	push   r15
   1400053e4:	sub    rsp,0x20
   1400053e8:	mov    rax,QWORD PTR [rcx]
   1400053eb:	mov    rbx,r9
   1400053ee:	mov    r14,rdx
   1400053f1:	mov    rsi,rcx
   1400053f4:	mov    r10d,DWORD PTR [rax+0x14]
   1400053f8:	shr    r10d,0xc
   1400053fc:	test   r10b,0x1
   140005400:	je     0x140005414
   140005402:	mov    rax,QWORD PTR [rcx]
   140005405:	cmp    QWORD PTR [rax+0x8],0x0
   14000540a:	jne    0x140005414
   14000540c:	add    DWORD PTR [r9],r8d
   14000540f:	jmp    0x1400054ac
   140005414:	mov    rdi,QWORD PTR [rsp+0x60]
   140005419:	movsxd rbp,r8d
   14000541c:	add    rbp,rdx
   14000541f:	mov    r15d,DWORD PTR [rdi]
   140005422:	and    DWORD PTR [rdi],0x0
   140005425:	cmp    rdx,rbp
   140005428:	je     0x14000549f
   14000542a:	mov    rax,QWORD PTR [rsi]
   14000542d:	mov    dl,BYTE PTR [r14]
   140005430:	mov    ecx,DWORD PTR [rax+0x14]
   140005433:	shr    ecx,0xc
   140005436:	test   cl,0x1
   140005439:	je     0x140005445
   14000543b:	mov    rax,QWORD PTR [rsi]
   14000543e:	cmp    QWORD PTR [rax+0x8],0x0
   140005443:	je     0x140005459
   140005445:	movsx  ecx,dl
   140005448:	mov    rdx,QWORD PTR [rsi]
   14000544b:	call   0x14000ac0c
   140005450:	cmp    eax,0xffffffff
   140005453:	jne    0x140005459
   140005455:	or     DWORD PTR [rbx],eax
   140005457:	jmp    0x140005462
   140005459:	inc    DWORD PTR [rbx]
   14000545b:	mov    eax,DWORD PTR [rbx]
   14000545d:	cmp    eax,0xffffffff
   140005460:	jne    0x140005497
   140005462:	cmp    DWORD PTR [rdi],0x2a
   140005465:	jne    0x14000549f
   140005467:	mov    rax,QWORD PTR [rsi]
   14000546a:	mov    ecx,DWORD PTR [rax+0x14]
   14000546d:	shr    ecx,0xc
   140005470:	test   cl,0x1
   140005473:	je     0x14000547f
   140005475:	mov    rax,QWORD PTR [rsi]
   140005478:	cmp    QWORD PTR [rax+0x8],0x0
   14000547d:	je     0x140005495
   14000547f:	mov    rdx,QWORD PTR [rsi]
   140005482:	mov    ecx,0x3f
   140005487:	call   0x14000ac0c
   14000548c:	cmp    eax,0xffffffff
   14000548f:	jne    0x140005495
   140005491:	or     DWORD PTR [rbx],eax
   140005493:	jmp    0x140005497
   140005495:	inc    DWORD PTR [rbx]
   140005497:	inc    r14
   14000549a:	cmp    r14,rbp
   14000549d:	jne    0x14000542a
   14000549f:	cmp    DWORD PTR [rdi],0x0
   1400054a2:	jne    0x1400054ac
   1400054a4:	test   r15d,r15d
   1400054a7:	je     0x1400054ac
   1400054a9:	mov    DWORD PTR [rdi],r15d
   1400054ac:	mov    rbx,QWORD PTR [rsp+0x40]
   1400054b1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400054b6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400054bb:	add    rsp,0x20
   1400054bf:	pop    r15
   1400054c1:	pop    r14
   1400054c3:	pop    rdi
   1400054c4:	ret    
   1400054c5:	int3   
   1400054c6:	int3   
   1400054c7:	int3   
   1400054c8:	mov    rax,rsp
   1400054cb:	mov    QWORD PTR [rax+0x8],rbx
   1400054cf:	mov    QWORD PTR [rax+0x10],rbp
   1400054d3:	mov    QWORD PTR [rax+0x18],rsi
   1400054d7:	mov    QWORD PTR [rax+0x20],rdi
   1400054db:	push   r12
   1400054dd:	push   r14
   1400054df:	push   r15
   1400054e1:	sub    rsp,0x20
   1400054e5:	mov    rdi,QWORD PTR [rsp+0x60]
   1400054ea:	mov    r15,rcx
   1400054ed:	mov    rbx,r9
   1400054f0:	movsxd rbp,r8d
   1400054f3:	mov    r14d,DWORD PTR [rdi]
   1400054f6:	and    DWORD PTR [rdi],0x0
   1400054f9:	mov    rcx,QWORD PTR [rcx]
   1400054fc:	mov    rax,QWORD PTR [rcx+0x8]
   140005500:	cmp    QWORD PTR [rcx+0x10],rax
   140005504:	jne    0x140005517
   140005506:	cmp    BYTE PTR [rcx+0x18],0x0
   14000550a:	je     0x140005511
   14000550c:	add    DWORD PTR [r9],ebp
   14000550f:	jmp    0x140005556
   140005511:	or     DWORD PTR [r9],0xffffffff
   140005515:	jmp    0x140005556
   140005517:	sub    rax,QWORD PTR [rcx+0x10]
   14000551b:	mov    rsi,rbp
   14000551e:	mov    rcx,QWORD PTR [rcx]
   140005521:	cmp    rax,rbp
   140005524:	cmovb  rsi,rax
   140005528:	mov    r8,rsi
   14000552b:	call   0x140013570
   140005530:	mov    rax,QWORD PTR [r15]
   140005533:	add    QWORD PTR [rax],rsi
   140005536:	mov    rax,QWORD PTR [r15]
   140005539:	add    QWORD PTR [rax+0x10],rsi
   14000553d:	mov    rax,QWORD PTR [r15]
   140005540:	cmp    BYTE PTR [rax+0x18],0x0
   140005544:	je     0x14000554a
   140005546:	add    DWORD PTR [rbx],ebp
   140005548:	jmp    0x140005556
   14000554a:	cmp    rsi,rbp
   14000554d:	je     0x140005554
   14000554f:	or     DWORD PTR [rbx],0xffffffff
   140005552:	jmp    0x140005556
   140005554:	add    DWORD PTR [rbx],esi
   140005556:	cmp    DWORD PTR [rdi],0x0
   140005559:	jne    0x140005563
   14000555b:	test   r14d,r14d
   14000555e:	je     0x140005563
   140005560:	mov    DWORD PTR [rdi],r14d
   140005563:	mov    rbx,QWORD PTR [rsp+0x40]
   140005568:	mov    rbp,QWORD PTR [rsp+0x48]
   14000556d:	mov    rsi,QWORD PTR [rsp+0x50]
   140005572:	mov    rdi,QWORD PTR [rsp+0x58]
   140005577:	add    rsp,0x20
   14000557b:	pop    r15
   14000557d:	pop    r14
   14000557f:	pop    r12
   140005581:	ret    
   140005582:	int3   
   140005583:	int3   
   140005584:	rex push rbp
   140005586:	mov    rbp,rsp
   140005589:	sub    rsp,0x60
   14000558d:	mov    rax,QWORD PTR [rbp+0x30]
   140005591:	mov    QWORD PTR [rbp-0x40],rax
   140005595:	mov    QWORD PTR [rbp+0x18],r9
   140005599:	mov    QWORD PTR [rbp+0x28],r8
   14000559d:	mov    QWORD PTR [rbp+0x10],rdx
   1400055a1:	mov    QWORD PTR [rbp+0x20],rcx
   1400055a5:	test   rdx,rdx
   1400055a8:	jne    0x1400055bf
   1400055aa:	call   0x140008500
   1400055af:	mov    DWORD PTR [rax],0x16
   1400055b5:	call   0x1400083e0
   1400055ba:	or     eax,0xffffffff
   1400055bd:	jmp    0x140005609
   1400055bf:	test   r8,r8
   1400055c2:	je     0x1400055aa
   1400055c4:	lea    rax,[rbp+0x10]
   1400055c8:	mov    QWORD PTR [rbp-0x38],rdx
   1400055cc:	mov    QWORD PTR [rbp-0x28],rax
   1400055d0:	lea    r9,[rbp-0x38]
   1400055d4:	lea    rax,[rbp+0x18]
   1400055d8:	mov    QWORD PTR [rbp-0x30],rdx
   1400055dc:	mov    QWORD PTR [rbp-0x20],rax
   1400055e0:	lea    r8,[rbp-0x28]
   1400055e4:	lea    rax,[rbp+0x20]
   1400055e8:	mov    QWORD PTR [rbp-0x18],rax
   1400055ec:	lea    rdx,[rbp-0x30]
   1400055f0:	lea    rax,[rbp+0x28]
   1400055f4:	mov    QWORD PTR [rbp-0x10],rax
   1400055f8:	lea    rcx,[rbp+0x30]
   1400055fc:	lea    rax,[rbp-0x40]
   140005600:	mov    QWORD PTR [rbp-0x8],rax
   140005604:	call   0x140003700
   140005609:	add    rsp,0x60
   14000560d:	pop    rbp
   14000560e:	ret    
   14000560f:	int3   
   140005610:	mov    QWORD PTR [rsp+0x8],rbx
   140005615:	mov    QWORD PTR [rsp+0x20],rsi
   14000561a:	push   rbp
   14000561b:	push   rdi
   14000561c:	push   r12
   14000561e:	push   r14
   140005620:	push   r15
   140005622:	lea    rbp,[rsp-0x410]
   14000562a:	sub    rsp,0x510
   140005631:	mov    rax,QWORD PTR [rip+0x189e0]        # 0x14001e018
   140005638:	xor    rax,rsp
   14000563b:	mov    QWORD PTR [rbp+0x400],rax
   140005642:	xor    r12d,r12d
   140005645:	mov    rbx,r9
   140005648:	mov    rdi,r8
   14000564b:	mov    rsi,rdx
   14000564e:	mov    r15,rcx
   140005651:	test   r9,r9
   140005654:	jne    0x14000566e
   140005656:	call   0x140008500
   14000565b:	mov    DWORD PTR [rax],0x16
   140005661:	call   0x1400083e0
   140005666:	or     ebx,0xffffffff
   140005669:	jmp    0x140005816
   14000566e:	test   r8,r8
   140005671:	je     0x140005678
   140005673:	test   rdx,rdx
   140005676:	je     0x140005656
   140005678:	mov    rdx,QWORD PTR [rbp+0x460]
   14000567f:	lea    rcx,[rsp+0x30]
   140005684:	call   0x140003ab0
   140005689:	xor    edx,edx
   14000568b:	lea    rcx,[rsp+0x50]
   140005690:	lea    r8d,[rdx+0x20]
   140005694:	call   0x140002cb0
   140005699:	mov    r14,r15
   14000569c:	mov    QWORD PTR [rsp+0x50],rsi
   1400056a1:	mov    QWORD PTR [rsp+0x58],rdi
   1400056a6:	mov    QWORD PTR [rsp+0x60],r12
   1400056ab:	and    r14d,0x2
   1400056af:	jne    0x1400056bb
   1400056b1:	mov    BYTE PTR [rsp+0x68],r12b
   1400056b6:	test   rsi,rsi
   1400056b9:	jne    0x1400056c0
   1400056bb:	mov    BYTE PTR [rsp+0x68],0x1
   1400056c0:	lea    rax,[rsp+0x50]
   1400056c5:	mov    r9,rbx
   1400056c8:	mov    QWORD PTR [rsp+0x70],rax
   1400056cd:	lea    rdx,[rsp+0x70]
   1400056d2:	mov    rax,QWORD PTR [rbp+0x468]
   1400056d9:	lea    rcx,[rbp-0x80]
   1400056dd:	mov    QWORD PTR [rsp+0x28],rax
   1400056e2:	mov    r8,r15
   1400056e5:	lea    rax,[rsp+0x38]
   1400056ea:	mov    QWORD PTR [rsp+0x20],rax
   1400056ef:	call   0x140003a34
   1400056f4:	lea    rcx,[rbp-0x80]
   1400056f8:	call   0x140003f34
   1400056fd:	movsxd rbx,eax
   140005700:	test   rsi,rsi
   140005703:	jne    0x140005734
   140005705:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14000570c:	call   0x140007cc4
   140005711:	mov    QWORD PTR [rbp+0x3e0],r12
   140005718:	cmp    BYTE PTR [rsp+0x48],r12b
   14000571d:	je     0x140005816
   140005723:	mov    rax,QWORD PTR [rsp+0x30]
   140005728:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14000572f:	jmp    0x140005816
   140005734:	test   r15b,0x1
   140005738:	je     0x140005787
   14000573a:	test   rdi,rdi
   14000573d:	jne    0x140005772
   14000573f:	test   eax,eax
   140005741:	je     0x140005772
   140005743:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14000574a:	call   0x140007cc4
   14000574f:	mov    QWORD PTR [rbp+0x3e0],r12
   140005756:	cmp    BYTE PTR [rsp+0x48],r12b
   14000575b:	je     0x140005666
   140005761:	mov    rax,QWORD PTR [rsp+0x30]
   140005766:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14000576d:	jmp    0x140005666
   140005772:	mov    rax,QWORD PTR [rsp+0x60]
   140005777:	cmp    rax,rdi
   14000577a:	jne    0x1400057ec
   14000577c:	test   ebx,ebx
   14000577e:	js     0x1400057f0
   140005780:	cmp    rbx,rdi
   140005783:	jbe    0x1400057f0
   140005785:	jmp    0x140005743
   140005787:	test   r14,r14
   14000578a:	je     0x1400057ab
   14000578c:	test   rdi,rdi
   14000578f:	je     0x1400057f0
   140005791:	test   eax,eax
   140005793:	jns    0x14000579a
   140005795:	mov    BYTE PTR [rsi],r12b
   140005798:	jmp    0x1400057f0
   14000579a:	mov    rax,QWORD PTR [rsp+0x60]
   14000579f:	cmp    rax,rdi
   1400057a2:	jne    0x1400057ec
   1400057a4:	mov    BYTE PTR [rdi+rsi*1-0x1],r12b
   1400057a9:	jmp    0x1400057f0
   1400057ab:	test   rdi,rdi
   1400057ae:	je     0x140005743
   1400057b0:	mov    rax,QWORD PTR [rsp+0x60]
   1400057b5:	cmp    rax,rdi
   1400057b8:	jne    0x1400057ec
   1400057ba:	mov    rcx,QWORD PTR [rbp+0x3e0]
   1400057c1:	mov    BYTE PTR [rdi+rsi*1-0x1],r12b
   1400057c6:	call   0x140007cc4
   1400057cb:	mov    QWORD PTR [rbp+0x3e0],r12
   1400057d2:	cmp    BYTE PTR [rsp+0x48],r12b
   1400057d7:	je     0x1400057e5
   1400057d9:	mov    rax,QWORD PTR [rsp+0x30]
   1400057de:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   1400057e5:	mov    ebx,0xfffffffe
   1400057ea:	jmp    0x140005816
   1400057ec:	mov    BYTE PTR [rax+rsi*1],r12b
   1400057f0:	mov    rcx,QWORD PTR [rbp+0x3e0]
   1400057f7:	call   0x140007cc4
   1400057fc:	mov    QWORD PTR [rbp+0x3e0],r12
   140005803:	cmp    BYTE PTR [rsp+0x48],r12b
   140005808:	je     0x140005816
   14000580a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000580f:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140005816:	mov    eax,ebx
   140005818:	mov    rcx,QWORD PTR [rbp+0x400]
   14000581f:	xor    rcx,rsp
   140005822:	call   0x140013230
   140005827:	lea    r11,[rsp+0x510]
   14000582f:	mov    rbx,QWORD PTR [r11+0x30]
   140005833:	mov    rsi,QWORD PTR [r11+0x48]
   140005837:	mov    rsp,r11
   14000583a:	pop    r15
   14000583c:	pop    r14
   14000583e:	pop    r12
   140005840:	pop    rdi
   140005841:	pop    rbp
   140005842:	ret    
   140005843:	int3   
   140005844:	int3   
   140005845:	int3   
   140005846:	int3   
   140005847:	int3   
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	int3   
   140005851:	int3   
   140005852:	int3   
   140005853:	int3   
   140005854:	int3   
   140005855:	int3   
   140005856:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005860:	mov    r11,rcx
   140005863:	or     r8,r8
   140005866:	je     0x14000591b
   14000586c:	test   cl,0x7
   14000586f:	je     0x140005880
   140005871:	mov    al,BYTE PTR [rcx]
   140005873:	test   al,al
   140005875:	je     0x1400058f6
   140005877:	inc    rcx
   14000587a:	test   cl,0x7
   14000587d:	jne    0x140005871
   14000587f:	nop
   140005880:	mov    rax,QWORD PTR [rcx]
   140005883:	mov    r10,rax
   140005886:	movabs r9,0x7efefefefefefeff
   140005890:	add    r9,r10
   140005893:	xor    r10,0xffffffffffffffff
   140005897:	xor    r10,r9
   14000589a:	add    rcx,0x8
   14000589e:	movabs r9,0x8101010101010100
   1400058a8:	test   r9,r10
   1400058ab:	je     0x140005880
   1400058ad:	sub    rcx,0x8
   1400058b1:	test   al,al
   1400058b3:	je     0x1400058f6
   1400058b5:	inc    rcx
   1400058b8:	test   ah,ah
   1400058ba:	je     0x1400058f6
   1400058bc:	inc    rcx
   1400058bf:	shr    rax,0x10
   1400058c3:	test   al,al
   1400058c5:	je     0x1400058f6
   1400058c7:	inc    rcx
   1400058ca:	test   ah,ah
   1400058cc:	je     0x1400058f6
   1400058ce:	inc    rcx
   1400058d1:	shr    rax,0x10
   1400058d5:	test   al,al
   1400058d7:	je     0x1400058f6
   1400058d9:	inc    rcx
   1400058dc:	test   ah,ah
   1400058de:	je     0x1400058f6
   1400058e0:	inc    rcx
   1400058e3:	shr    eax,0x10
   1400058e6:	test   al,al
   1400058e8:	je     0x1400058f6
   1400058ea:	inc    rcx
   1400058ed:	test   ah,ah
   1400058ef:	je     0x1400058f6
   1400058f1:	inc    rcx
   1400058f4:	jmp    0x140005880
   1400058f6:	sub    rcx,rdx
   1400058f9:	test   dl,0x7
   1400058fc:	je     0x140005928
   1400058fe:	mov    al,BYTE PTR [rdx]
   140005900:	mov    BYTE PTR [rcx+rdx*1],al
   140005903:	test   al,al
   140005905:	je     0x14000591b
   140005907:	inc    rdx
   14000590a:	dec    r8
   14000590d:	je     0x140005916
   14000590f:	test   dl,0x7
   140005912:	jne    0x1400058fe
   140005914:	jmp    0x140005928
   140005916:	xor    al,al
   140005918:	mov    BYTE PTR [rcx+rdx*1],al
   14000591b:	mov    rax,r11
   14000591e:	ret    
   14000591f:	nop
   140005920:	mov    QWORD PTR [rcx+rdx*1],rax
   140005924:	add    rdx,0x8
   140005928:	mov    rax,QWORD PTR [rdx]
   14000592b:	sub    r8,0x8
   14000592f:	jbe    0x140005957
   140005931:	movabs r9,0x7efefefefefefeff
   14000593b:	add    r9,rax
   14000593e:	mov    r10,rax
   140005941:	xor    r10,0xffffffffffffffff
   140005945:	xor    r10,r9
   140005948:	movabs r9,0x8101010101010100
   140005952:	test   r9,r10
   140005955:	je     0x140005920
   140005957:	add    r8,0x8
   14000595b:	je     0x1400059ec
   140005961:	test   al,al
   140005963:	mov    BYTE PTR [rcx+rdx*1],al
   140005966:	je     0x1400059f1
   14000596c:	inc    rdx
   14000596f:	dec    r8
   140005972:	je     0x1400059ec
   140005974:	test   ah,ah
   140005976:	mov    BYTE PTR [rcx+rdx*1],ah
   140005979:	je     0x1400059f1
   14000597b:	inc    rdx
   14000597e:	dec    r8
   140005981:	je     0x1400059ec
   140005983:	shr    rax,0x10
   140005987:	test   al,al
   140005989:	mov    BYTE PTR [rcx+rdx*1],al
   14000598c:	je     0x1400059f1
   14000598e:	inc    rdx
   140005991:	dec    r8
   140005994:	je     0x1400059ec
   140005996:	test   ah,ah
   140005998:	mov    BYTE PTR [rcx+rdx*1],ah
   14000599b:	je     0x1400059f1
   14000599d:	inc    rdx
   1400059a0:	dec    r8
   1400059a3:	je     0x1400059ec
   1400059a5:	shr    rax,0x10
   1400059a9:	test   al,al
   1400059ab:	mov    BYTE PTR [rcx+rdx*1],al
   1400059ae:	je     0x1400059f1
   1400059b0:	inc    rdx
   1400059b3:	dec    r8
   1400059b6:	je     0x1400059ec
   1400059b8:	test   ah,ah
   1400059ba:	mov    BYTE PTR [rcx+rdx*1],ah
   1400059bd:	je     0x1400059f1
   1400059bf:	inc    rdx
   1400059c2:	dec    r8
   1400059c5:	je     0x1400059ec
   1400059c7:	shr    eax,0x10
   1400059ca:	test   al,al
   1400059cc:	mov    BYTE PTR [rcx+rdx*1],al
   1400059cf:	je     0x1400059f1
   1400059d1:	inc    rdx
   1400059d4:	dec    r8
   1400059d7:	je     0x1400059ec
   1400059d9:	test   ah,ah
   1400059db:	mov    BYTE PTR [rcx+rdx*1],ah
   1400059de:	je     0x1400059f1
   1400059e0:	inc    rdx
   1400059e3:	dec    r8
   1400059e6:	jne    0x140005928
   1400059ec:	xor    al,al
   1400059ee:	mov    BYTE PTR [rcx+rdx*1],al
   1400059f1:	mov    rax,r11
   1400059f4:	ret    
   1400059f5:	int3   
   1400059f6:	int3   
   1400059f7:	int3   
   1400059f8:	int3   
   1400059f9:	int3   
   1400059fa:	int3   
   1400059fb:	int3   
   1400059fc:	int3   
   1400059fd:	int3   
   1400059fe:	int3   
   1400059ff:	int3   
   140005a00:	int3   
   140005a01:	int3   
   140005a02:	int3   
   140005a03:	int3   
   140005a04:	int3   
   140005a05:	int3   
   140005a06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005a10:	mov    r11,rcx
   140005a13:	or     r8,r8
   140005a16:	je     0x140005a3c
   140005a18:	sub    rcx,rdx
   140005a1b:	test   dl,0x7
   140005a1e:	je     0x140005a48
   140005a20:	mov    al,BYTE PTR [rdx]
   140005a22:	test   al,al
   140005a24:	mov    BYTE PTR [rcx+rdx*1],al
   140005a27:	je     0x140005b10
   140005a2d:	inc    rdx
   140005a30:	dec    r8
   140005a33:	je     0x140005a3c
   140005a35:	test   dl,0x7
   140005a38:	jne    0x140005a20
   140005a3a:	jmp    0x140005a48
   140005a3c:	mov    rax,r11
   140005a3f:	ret    
   140005a40:	mov    QWORD PTR [rcx+rdx*1],rax
   140005a44:	add    rdx,0x8
   140005a48:	mov    rax,QWORD PTR [rdx]
   140005a4b:	sub    r8,0x8
   140005a4f:	jbe    0x140005a77
   140005a51:	movabs r9,0x7efefefefefefeff
   140005a5b:	add    r9,rax
   140005a5e:	mov    r10,rax
   140005a61:	xor    r10,0xffffffffffffffff
   140005a65:	xor    r10,r9
   140005a68:	movabs r9,0x8101010101010100
   140005a72:	test   r9,r10
   140005a75:	je     0x140005a40
   140005a77:	add    r8,0x8
   140005a7b:	je     0x140005b0c
   140005a81:	test   al,al
   140005a83:	mov    BYTE PTR [rcx+rdx*1],al
   140005a86:	je     0x140005b10
   140005a8c:	inc    rdx
   140005a8f:	dec    r8
   140005a92:	je     0x140005b0c
   140005a94:	test   ah,ah
   140005a96:	mov    BYTE PTR [rcx+rdx*1],ah
   140005a99:	je     0x140005b10
   140005a9b:	inc    rdx
   140005a9e:	dec    r8
   140005aa1:	je     0x140005b0c
   140005aa3:	shr    rax,0x10
   140005aa7:	test   al,al
   140005aa9:	mov    BYTE PTR [rcx+rdx*1],al
   140005aac:	je     0x140005b10
   140005aae:	inc    rdx
   140005ab1:	dec    r8
   140005ab4:	je     0x140005b0c
   140005ab6:	test   ah,ah
   140005ab8:	mov    BYTE PTR [rcx+rdx*1],ah
   140005abb:	je     0x140005b10
   140005abd:	inc    rdx
   140005ac0:	dec    r8
   140005ac3:	je     0x140005b0c
   140005ac5:	shr    rax,0x10
   140005ac9:	test   al,al
   140005acb:	mov    BYTE PTR [rcx+rdx*1],al
   140005ace:	je     0x140005b10
   140005ad0:	inc    rdx
   140005ad3:	dec    r8
   140005ad6:	je     0x140005b0c
   140005ad8:	test   ah,ah
   140005ada:	mov    BYTE PTR [rcx+rdx*1],ah
   140005add:	je     0x140005b10
   140005adf:	inc    rdx
   140005ae2:	dec    r8
   140005ae5:	je     0x140005b0c
   140005ae7:	shr    eax,0x10
   140005aea:	test   al,al
   140005aec:	mov    BYTE PTR [rcx+rdx*1],al
   140005aef:	je     0x140005b10
   140005af1:	inc    rdx
   140005af4:	dec    r8
   140005af7:	je     0x140005b0c
   140005af9:	test   ah,ah
   140005afb:	mov    BYTE PTR [rcx+rdx*1],ah
   140005afe:	je     0x140005b10
   140005b00:	inc    rdx
   140005b03:	dec    r8
   140005b06:	jne    0x140005a48
   140005b0c:	mov    rax,r11
   140005b0f:	ret    
   140005b10:	add    rcx,rdx
   140005b13:	xor    rdx,rdx
   140005b16:	cmp    r8,0x10
   140005b1a:	jb     0x140005b61
   140005b1c:	test   cl,0x7
   140005b1f:	je     0x140005b2b
   140005b21:	inc    rcx
   140005b24:	mov    BYTE PTR [rcx],dl
   140005b26:	dec    r8
   140005b29:	jmp    0x140005b1c
   140005b2b:	sub    r8,0x20
   140005b2f:	jb     0x140005b4a
   140005b31:	mov    QWORD PTR [rcx],rdx
   140005b34:	mov    QWORD PTR [rcx+0x8],rdx
   140005b38:	mov    QWORD PTR [rcx+0x10],rdx
   140005b3c:	mov    QWORD PTR [rcx+0x18],rdx
   140005b40:	add    rcx,0x20
   140005b44:	sub    r8,0x20
   140005b48:	jae    0x140005b31
   140005b4a:	add    r8,0x20
   140005b4e:	sub    r8,0x8
   140005b52:	jb     0x140005b5d
   140005b54:	mov    QWORD PTR [rcx],rdx
   140005b57:	add    rcx,0x8
   140005b5b:	jmp    0x140005b4e
   140005b5d:	add    r8,0x8
   140005b61:	sub    r8,0x1
   140005b65:	jb     0x140005b6e
   140005b67:	mov    BYTE PTR [rcx],dl
   140005b69:	inc    rcx
   140005b6c:	jmp    0x140005b61
   140005b6e:	mov    rax,r11
   140005b71:	ret    
   140005b72:	int3   
   140005b73:	int3   
   140005b74:	jmp    0x140007cc4
   140005b79:	int3   
   140005b7a:	int3   
   140005b7b:	int3   
   140005b7c:	jmp    0x140007d04
   140005b81:	int3   
   140005b82:	int3   
   140005b83:	int3   
   140005b84:	xor    eax,eax
   140005b86:	cmp    ecx,0xe06d7363
   140005b8c:	sete   al
   140005b8f:	ret    
   140005b90:	mov    rax,rsp
   140005b93:	mov    QWORD PTR [rax+0x8],rbx
   140005b97:	mov    QWORD PTR [rax+0x10],rsi
   140005b9b:	mov    QWORD PTR [rax+0x18],rdi
   140005b9f:	mov    QWORD PTR [rax+0x20],r14
   140005ba3:	push   r15
   140005ba5:	sub    rsp,0x20
   140005ba9:	mov    esi,r8d
   140005bac:	mov    ebx,edx
   140005bae:	mov    r14d,ecx
   140005bb1:	test   r8d,r8d
   140005bb4:	jne    0x140005c00
   140005bb6:	xor    ecx,ecx
   140005bb8:	call   QWORD PTR [rip+0xe4ea]        # 0x1400140a8
   140005bbe:	test   rax,rax
   140005bc1:	je     0x140005c00
   140005bc3:	mov    ecx,0x5a4d
   140005bc8:	cmp    WORD PTR [rax],cx
   140005bcb:	jne    0x140005c00
   140005bcd:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005bd1:	add    rcx,rax
   140005bd4:	cmp    DWORD PTR [rcx],0x4550
   140005bda:	jne    0x140005c00
   140005bdc:	mov    eax,0x20b
   140005be1:	cmp    WORD PTR [rcx+0x18],ax
   140005be5:	jne    0x140005c00
   140005be7:	cmp    DWORD PTR [rcx+0x84],0xe
   140005bee:	jbe    0x140005c00
   140005bf0:	cmp    DWORD PTR [rcx+0xf8],esi
   140005bf6:	je     0x140005c00
   140005bf8:	mov    ecx,r14d
   140005bfb:	call   0x140005d48
   140005c00:	mov    ecx,0x2
   140005c05:	call   0x14000ad90
   140005c0a:	nop
   140005c0b:	cmp    BYTE PTR [rip+0x18ffe],0x0        # 0x14001ec10
   140005c12:	jne    0x140005cca
   140005c18:	mov    r15d,0x1
   140005c1e:	mov    eax,r15d
   140005c21:	xchg   DWORD PTR [rip+0x18fdd],eax        # 0x14001ec04
   140005c27:	test   ebx,ebx
   140005c29:	jne    0x140005c73
   140005c2b:	mov    rdi,QWORD PTR [rip+0x183e6]        # 0x14001e018
   140005c32:	mov    edx,edi
   140005c34:	and    edx,0x3f
   140005c37:	lea    ecx,[rbx+0x40]
   140005c3a:	sub    ecx,edx
   140005c3c:	xor    eax,eax
   140005c3e:	ror    rax,cl
   140005c41:	xor    rax,rdi
   140005c44:	mov    rcx,QWORD PTR [rip+0x18fbd]        # 0x14001ec08
   140005c4b:	cmp    rcx,rax
   140005c4e:	je     0x140005c6a
   140005c50:	xor    rdi,rcx
   140005c53:	mov    ecx,edx
   140005c55:	ror    rdi,cl
   140005c58:	mov    rcx,rdi
   140005c5b:	call   QWORD PTR [rip+0xe5f7]        # 0x140014258
   140005c61:	xor    r8d,r8d
   140005c64:	xor    edx,edx
   140005c66:	xor    ecx,ecx
   140005c68:	call   rdi
   140005c6a:	lea    rcx,[rip+0x1911f]        # 0x14001ed90
   140005c71:	jmp    0x140005c7f
   140005c73:	cmp    ebx,r15d
   140005c76:	jne    0x140005c85
   140005c78:	lea    rcx,[rip+0x19129]        # 0x14001eda8
   140005c7f:	call   0x140007940
   140005c84:	nop
   140005c85:	test   ebx,ebx
   140005c87:	jne    0x140005c9c
   140005c89:	lea    rdx,[rip+0xe648]        # 0x1400142d8
   140005c90:	lea    rcx,[rip+0xe621]        # 0x1400142b8
   140005c97:	call   0x1400072c4
   140005c9c:	lea    rdx,[rip+0xe645]        # 0x1400142e8
   140005ca3:	lea    rcx,[rip+0xe636]        # 0x1400142e0
   140005caa:	call   0x1400072c4
   140005caf:	movzx  eax,BYTE PTR [rip+0x18f5a]        # 0x14001ec10
   140005cb6:	test   esi,esi
   140005cb8:	cmove  eax,r15d
   140005cbc:	mov    BYTE PTR [rip+0x18f4e],al        # 0x14001ec10
   140005cc2:	jmp    0x140005cca
   140005cc4:	call   0x140007b64
   140005cc9:	nop
   140005cca:	mov    ecx,0x2
   140005ccf:	call   0x14000ade4
   140005cd4:	test   esi,esi
   140005cd6:	jne    0x140005ce1
   140005cd8:	mov    ecx,r14d
   140005cdb:	call   0x140005cfc
   140005ce0:	int3   
   140005ce1:	mov    rbx,QWORD PTR [rsp+0x30]
   140005ce6:	mov    rsi,QWORD PTR [rsp+0x38]
   140005ceb:	mov    rdi,QWORD PTR [rsp+0x40]
   140005cf0:	mov    r14,QWORD PTR [rsp+0x48]
   140005cf5:	add    rsp,0x20
   140005cf9:	pop    r15
   140005cfb:	ret    
   140005cfc:	rex push rbx
   140005cfe:	sub    rsp,0x20
   140005d02:	mov    ebx,ecx
   140005d04:	call   0x140008b74
   140005d09:	test   al,al
   140005d0b:	je     0x140005d35
   140005d0d:	mov    rax,QWORD PTR gs:0x60
   140005d16:	mov    edx,DWORD PTR [rax+0xbc]
   140005d1c:	shr    edx,0x8
   140005d1f:	test   dl,0x1
   140005d22:	jne    0x140005d35
   140005d24:	call   QWORD PTR [rip+0xe3f6]        # 0x140014120
   140005d2a:	mov    rcx,rax
   140005d2d:	mov    edx,ebx
   140005d2f:	call   QWORD PTR [rip+0xe3fb]        # 0x140014130
   140005d35:	mov    ecx,ebx
   140005d37:	call   0x140005d48
   140005d3c:	mov    ecx,ebx
   140005d3e:	call   QWORD PTR [rip+0xe3e4]        # 0x140014128
   140005d44:	int3   
   140005d45:	int3   
   140005d46:	int3   
   140005d47:	int3   
   140005d48:	mov    QWORD PTR [rsp+0x8],rbx
   140005d4d:	push   rdi
   140005d4e:	sub    rsp,0x20
   140005d52:	and    QWORD PTR [rsp+0x38],0x0
   140005d58:	lea    r8,[rsp+0x38]
   140005d5d:	mov    edi,ecx
   140005d5f:	lea    rdx,[rip+0xf442]        # 0x1400151a8
   140005d66:	xor    ecx,ecx
   140005d68:	call   QWORD PTR [rip+0xe3ca]        # 0x140014138
   140005d6e:	test   eax,eax
   140005d70:	je     0x140005d99
   140005d72:	mov    rcx,QWORD PTR [rsp+0x38]
   140005d77:	lea    rdx,[rip+0xf442]        # 0x1400151c0
   140005d7e:	call   QWORD PTR [rip+0xe2ac]        # 0x140014030
   140005d84:	mov    rbx,rax
   140005d87:	test   rax,rax
   140005d8a:	je     0x140005d99
   140005d8c:	mov    rcx,rax
   140005d8f:	call   QWORD PTR [rip+0xe4c3]        # 0x140014258
   140005d95:	mov    ecx,edi
   140005d97:	call   rbx
   140005d99:	mov    rcx,QWORD PTR [rsp+0x38]
   140005d9e:	test   rcx,rcx
   140005da1:	je     0x140005da9
   140005da3:	call   QWORD PTR [rip+0xe367]        # 0x140014110
   140005da9:	mov    rbx,QWORD PTR [rsp+0x30]
   140005dae:	add    rsp,0x20
   140005db2:	pop    rdi
   140005db3:	ret    
   140005db4:	mov    QWORD PTR [rip+0x18e4d],rcx        # 0x14001ec08
   140005dbb:	ret    
   140005dbc:	mov    edx,0x2
   140005dc1:	xor    ecx,ecx
   140005dc3:	lea    r8d,[rdx-0x1]
   140005dc7:	jmp    0x140005b90
   140005dcc:	xor    edx,edx
   140005dce:	xor    ecx,ecx
   140005dd0:	lea    r8d,[rdx+0x1]
   140005dd4:	jmp    0x140005b90
   140005dd9:	int3   
   140005dda:	int3   
   140005ddb:	int3   
   140005ddc:	xor    r8d,r8d
   140005ddf:	lea    edx,[r8+0x2]
   140005de3:	jmp    0x140005b90
   140005de8:	sub    rsp,0x28
   140005dec:	mov    r8,QWORD PTR [rip+0x18225]        # 0x14001e018
   140005df3:	mov    rdx,rcx
   140005df6:	mov    eax,r8d
   140005df9:	mov    ecx,0x40
   140005dfe:	and    eax,0x3f
   140005e01:	sub    ecx,eax
   140005e03:	xor    eax,eax
   140005e05:	ror    rax,cl
   140005e08:	xor    rax,r8
   140005e0b:	cmp    QWORD PTR [rip+0x18df6],rax        # 0x14001ec08
   140005e12:	jne    0x140005e26
   140005e14:	ror    rdx,cl
   140005e17:	xor    rdx,r8
   140005e1a:	mov    QWORD PTR [rip+0x18de7],rdx        # 0x14001ec08
   140005e21:	add    rsp,0x28
   140005e25:	ret    
   140005e26:	call   0x140007b64
   140005e2b:	int3   
   140005e2c:	xor    r8d,r8d
   140005e2f:	xor    edx,edx
   140005e31:	jmp    0x140005b90
   140005e36:	int3   
   140005e37:	int3   
   140005e38:	mov    QWORD PTR [rsp+0x20],rbx
   140005e3d:	push   rbp
   140005e3e:	push   rsi
   140005e3f:	push   rdi
   140005e40:	push   r12
   140005e42:	push   r13
   140005e44:	push   r14
   140005e46:	push   r15
   140005e48:	mov    rbp,rsp
   140005e4b:	sub    rsp,0x80
   140005e52:	mov    rax,QWORD PTR [rip+0x181bf]        # 0x14001e018
   140005e59:	xor    rax,rsp
   140005e5c:	mov    QWORD PTR [rbp-0x10],rax
   140005e60:	xor    r12d,r12d
   140005e63:	mov    rsi,r8
   140005e66:	mov    DWORD PTR [rbp-0x40],r12d
   140005e6a:	mov    r14,rdx
   140005e6d:	mov    r15,rcx
   140005e70:	mov    ebx,r12d
   140005e73:	test   rcx,rcx
   140005e76:	je     0x140005e84
   140005e78:	test   r8,r8
   140005e7b:	jne    0x140005e84
   140005e7d:	xor    eax,eax
   140005e7f:	jmp    0x140006143
   140005e84:	test   rdx,rdx
   140005e87:	jne    0x140005ea2
   140005e89:	call   0x140008500
   140005e8e:	mov    DWORD PTR [rax],0x16
   140005e94:	call   0x1400083e0
   140005e99:	or     rax,0xffffffffffffffff
   140005e9d:	jmp    0x140006143
   140005ea2:	mov    rdx,r9
   140005ea5:	lea    rcx,[rbp-0x38]
   140005ea9:	call   0x140003ab0
   140005eae:	test   r15,r15
   140005eb1:	je     0x14000609c
   140005eb7:	mov    rcx,QWORD PTR [rbp-0x30]
   140005ebb:	cmp    QWORD PTR [rcx+0x138],r12
   140005ec2:	jne    0x140005f0b
   140005ec4:	test   rsi,rsi
   140005ec7:	je     0x14000612c
   140005ecd:	mov    ecx,0xff
   140005ed2:	cmp    WORD PTR [r14],cx
   140005ed6:	ja     0x140005efd
   140005ed8:	mov    al,BYTE PTR [r14]
   140005edb:	mov    BYTE PTR [r15+rbx*1],al
   140005edf:	movzx  eax,WORD PTR [r14]
   140005ee3:	add    r14,0x2
   140005ee7:	test   ax,ax
   140005eea:	je     0x14000612c
   140005ef0:	inc    rbx
   140005ef3:	cmp    rbx,rsi
   140005ef6:	jb     0x140005ed2
   140005ef8:	jmp    0x14000612c
   140005efd:	call   0x140008500
   140005f02:	or     rbx,0xffffffffffffffff
   140005f06:	jmp    0x140006126
   140005f0b:	cmp    DWORD PTR [rcx+0x8],0x1
   140005f0f:	jne    0x140005f8b
   140005f11:	test   rsi,rsi
   140005f14:	je     0x140005f43
   140005f16:	mov    rax,r14
   140005f19:	mov    rdx,rsi
   140005f1c:	cmp    WORD PTR [rax],r12w
   140005f20:	je     0x140005f2c
   140005f22:	add    rax,0x2
   140005f26:	sub    rdx,0x1
   140005f2a:	jne    0x140005f1c
   140005f2c:	test   rdx,rdx
   140005f2f:	je     0x140005f43
   140005f31:	cmp    WORD PTR [rax],r12w
   140005f35:	jne    0x140005f43
   140005f37:	mov    rsi,rax
   140005f3a:	sub    rsi,r14
   140005f3d:	sar    rsi,1
   140005f40:	inc    rsi
   140005f43:	mov    ecx,DWORD PTR [rcx+0xc]
   140005f46:	lea    rax,[rbp-0x40]
   140005f4a:	mov    QWORD PTR [rsp+0x38],rax
   140005f4f:	mov    r9d,esi
   140005f52:	mov    QWORD PTR [rsp+0x30],r12
   140005f57:	mov    r8,r14
   140005f5a:	mov    DWORD PTR [rsp+0x28],esi
   140005f5e:	xor    edx,edx
   140005f60:	mov    QWORD PTR [rsp+0x20],r15
   140005f65:	call   QWORD PTR [rip+0xe1d5]        # 0x140014140
   140005f6b:	movsxd rbx,eax
   140005f6e:	test   eax,eax
   140005f70:	je     0x140005efd
   140005f72:	cmp    DWORD PTR [rbp-0x40],r12d
   140005f76:	jne    0x140005efd
   140005f78:	cmp    BYTE PTR [r15+rbx*1-0x1],r12b
   140005f7d:	jne    0x14000612c
   140005f83:	dec    rbx
   140005f86:	jmp    0x14000612c
   140005f8b:	mov    ecx,DWORD PTR [rcx+0xc]
   140005f8e:	lea    rax,[rbp-0x40]
   140005f92:	mov    QWORD PTR [rsp+0x38],rax
   140005f97:	or     rbx,0xffffffffffffffff
   140005f9b:	mov    QWORD PTR [rsp+0x30],r12
   140005fa0:	mov    r9d,ebx
   140005fa3:	mov    DWORD PTR [rsp+0x28],esi
   140005fa7:	mov    r8,r14
   140005faa:	xor    edx,edx
   140005fac:	mov    QWORD PTR [rsp+0x20],r15
   140005fb1:	call   QWORD PTR [rip+0xe189]        # 0x140014140
   140005fb7:	movsxd rdi,eax
   140005fba:	test   eax,eax
   140005fbc:	je     0x140005fd1
   140005fbe:	cmp    DWORD PTR [rbp-0x40],r12d
   140005fc2:	jne    0x140006121
   140005fc8:	lea    rbx,[rdi-0x1]
   140005fcc:	jmp    0x14000612c
   140005fd1:	cmp    DWORD PTR [rbp-0x40],r12d
   140005fd5:	jne    0x140006121
   140005fdb:	call   QWORD PTR [rip+0xe037]        # 0x140014018
   140005fe1:	cmp    eax,0x7a
   140005fe4:	jne    0x140006121
   140005fea:	test   rsi,rsi
   140005fed:	je     0x14000612f
   140005ff3:	lea    r13d,[rax-0x75]
   140005ff7:	mov    rcx,QWORD PTR [rbp-0x30]
   140005ffb:	lea    rdx,[rbp-0x40]
   140005fff:	mov    QWORD PTR [rsp+0x38],rdx
   140006004:	mov    r9d,0x1
   14000600a:	mov    QWORD PTR [rsp+0x30],r12
   14000600f:	mov    r8,r14
   140006012:	mov    eax,DWORD PTR [rcx+0x8]
   140006015:	cmp    eax,r13d
   140006018:	mov    ecx,DWORD PTR [rcx+0xc]
   14000601b:	cmovg  eax,r13d
   14000601f:	xor    edx,edx
   140006021:	mov    DWORD PTR [rsp+0x28],eax
   140006025:	lea    rax,[rbp-0x18]
   140006029:	mov    QWORD PTR [rsp+0x20],rax
   14000602e:	call   QWORD PTR [rip+0xe10c]        # 0x140014140
   140006034:	test   eax,eax
   140006036:	je     0x140006121
   14000603c:	cmp    DWORD PTR [rbp-0x40],r12d
   140006040:	jne    0x140006121
   140006046:	test   eax,eax
   140006048:	js     0x140006121
   14000604e:	movsxd rdx,eax
   140006051:	cmp    rdx,r13
   140006054:	ja     0x140006121
   14000605a:	lea    rax,[rdx+rdi*1]
   14000605e:	cmp    rax,rsi
   140006061:	ja     0x14000612f
   140006067:	mov    rcx,r12
   14000606a:	test   rdx,rdx
   14000606d:	jle    0x14000608a
   14000606f:	mov    al,BYTE PTR [rbp+rcx*1-0x18]
   140006073:	mov    BYTE PTR [r15+rdi*1],al
   140006077:	test   al,al
   140006079:	je     0x14000612f
   14000607f:	inc    rcx
   140006082:	inc    rdi
   140006085:	cmp    rcx,rdx
   140006088:	jl     0x14000606f
   14000608a:	add    r14,0x2
   14000608e:	cmp    rdi,rsi
   140006091:	jae    0x14000612f
   140006097:	jmp    0x140005ff7
   14000609c:	mov    rax,QWORD PTR [rbp-0x30]
   1400060a0:	cmp    QWORD PTR [rax+0x138],r12
   1400060a7:	jne    0x1400060e2
   1400060a9:	movzx  eax,WORD PTR [r14]
   1400060ad:	mov    rdi,r12
   1400060b0:	test   ax,ax
   1400060b3:	je     0x14000612f
   1400060b5:	mov    ecx,0xff
   1400060ba:	cmp    ax,cx
   1400060bd:	ja     0x1400060d1
   1400060bf:	add    r14,0x2
   1400060c3:	inc    rdi
   1400060c6:	movzx  eax,WORD PTR [r14]
   1400060ca:	test   ax,ax
   1400060cd:	jne    0x1400060ba
   1400060cf:	jmp    0x14000612f
   1400060d1:	call   0x140008500
   1400060d6:	or     rdi,0xffffffffffffffff
   1400060da:	mov    DWORD PTR [rax],0x2a
   1400060e0:	jmp    0x14000612f
   1400060e2:	lea    rcx,[rbp-0x40]
   1400060e6:	or     rbx,0xffffffffffffffff
   1400060ea:	mov    QWORD PTR [rsp+0x38],rcx
   1400060ef:	mov    r9d,ebx
   1400060f2:	mov    ecx,DWORD PTR [rax+0xc]
   1400060f5:	mov    r8,r14
   1400060f8:	mov    QWORD PTR [rsp+0x30],r12
   1400060fd:	xor    edx,edx
   1400060ff:	mov    DWORD PTR [rsp+0x28],r12d
   140006104:	mov    QWORD PTR [rsp+0x20],r12
   140006109:	call   QWORD PTR [rip+0xe031]        # 0x140014140
   14000610f:	movsxd rdi,eax
   140006112:	test   eax,eax
   140006114:	je     0x140006121
   140006116:	cmp    DWORD PTR [rbp-0x40],r12d
   14000611a:	jne    0x140006121
   14000611c:	dec    rdi
   14000611f:	jmp    0x14000612f
   140006121:	call   0x140008500
   140006126:	mov    DWORD PTR [rax],0x2a
   14000612c:	mov    rdi,rbx
   14000612f:	cmp    BYTE PTR [rbp-0x20],r12b
   140006133:	je     0x140006140
   140006135:	mov    rcx,QWORD PTR [rbp-0x38]
   140006139:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140006140:	mov    rax,rdi
   140006143:	mov    rcx,QWORD PTR [rbp-0x10]
   140006147:	xor    rcx,rsp
   14000614a:	call   0x140013230
   14000614f:	mov    rbx,QWORD PTR [rsp+0xd8]
   140006157:	add    rsp,0x80
   14000615e:	pop    r15
   140006160:	pop    r14
   140006162:	pop    r13
   140006164:	pop    r12
   140006166:	pop    rdi
   140006167:	pop    rsi
   140006168:	pop    rbp
   140006169:	ret    
   14000616a:	int3   
   14000616b:	int3   
   14000616c:	mov    QWORD PTR [rsp+0x8],rbx
   140006171:	mov    QWORD PTR [rsp+0x10],rsi
   140006176:	mov    QWORD PTR [rsp+0x18],rdi
   14000617b:	push   r14
   14000617d:	sub    rsp,0x20
   140006181:	xor    r14d,r14d
   140006184:	mov    rax,r9
   140006187:	mov    rdi,r8
   14000618a:	mov    rbx,rdx
   14000618d:	mov    rsi,rcx
   140006190:	test   rdx,rdx
   140006193:	je     0x1400061e6
   140006195:	test   r8,r8
   140006198:	je     0x1400061eb
   14000619a:	test   rdx,rdx
   14000619d:	je     0x1400061a2
   14000619f:	mov    BYTE PTR [rdx],r14b
   1400061a2:	test   rcx,rcx
   1400061a5:	je     0x1400061aa
   1400061a7:	and    QWORD PTR [rcx],r14
   1400061aa:	mov    r8,QWORD PTR [rsp+0x50]
   1400061af:	cmp    r8,rdi
   1400061b2:	cmova  r8,rdi
   1400061b6:	cmp    r8,0x7fffffff
   1400061bd:	ja     0x1400061eb
   1400061bf:	mov    r9,QWORD PTR [rsp+0x58]
   1400061c4:	mov    rdx,rax
   1400061c7:	mov    rcx,rbx
   1400061ca:	call   0x140005e38
   1400061cf:	cmp    rax,0xffffffffffffffff
   1400061d3:	jne    0x140006200
   1400061d5:	test   rbx,rbx
   1400061d8:	je     0x1400061dd
   1400061da:	mov    BYTE PTR [rbx],r14b
   1400061dd:	call   0x140008500
   1400061e2:	mov    eax,DWORD PTR [rax]
   1400061e4:	jmp    0x140006242
   1400061e6:	test   r8,r8
   1400061e9:	je     0x14000619a
   1400061eb:	call   0x140008500
   1400061f0:	mov    ebx,0x16
   1400061f5:	mov    DWORD PTR [rax],ebx
   1400061f7:	call   0x1400083e0
   1400061fc:	mov    eax,ebx
   1400061fe:	jmp    0x140006242
   140006200:	inc    rax
   140006203:	test   rbx,rbx
   140006206:	je     0x140006237
   140006208:	cmp    rax,rdi
   14000620b:	jbe    0x140006232
   14000620d:	cmp    QWORD PTR [rsp+0x50],0xffffffffffffffff
   140006213:	je     0x140006229
   140006215:	mov    BYTE PTR [rbx],r14b
   140006218:	cmp    rdi,rax
   14000621b:	ja     0x140006229
   14000621d:	call   0x140008500
   140006222:	mov    ebx,0x22
   140006227:	jmp    0x1400061f5
   140006229:	mov    rax,rdi
   14000622c:	mov    r14d,0x50
   140006232:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   140006237:	test   rsi,rsi
   14000623a:	je     0x14000623f
   14000623c:	mov    QWORD PTR [rsi],rax
   14000623f:	mov    eax,r14d
   140006242:	mov    rbx,QWORD PTR [rsp+0x30]
   140006247:	mov    rsi,QWORD PTR [rsp+0x38]
   14000624c:	mov    rdi,QWORD PTR [rsp+0x40]
   140006251:	add    rsp,0x20
   140006255:	pop    r14
   140006257:	ret    
   140006258:	sub    rsp,0x38
   14000625c:	mov    rax,QWORD PTR [rsp+0x60]
   140006261:	and    QWORD PTR [rsp+0x28],0x0
   140006267:	mov    QWORD PTR [rsp+0x20],rax
   14000626c:	call   0x14000616c
   140006271:	add    rsp,0x38
   140006275:	ret    
   140006276:	int3   
   140006277:	int3   
   140006278:	rex push rbx
   14000627a:	sub    rsp,0x20
   14000627e:	mov    rbx,rcx
   140006281:	xor    eax,eax
   140006283:	test   rcx,rcx
   140006286:	setne  al
   140006289:	test   eax,eax
   14000628b:	jne    0x1400062a1
   14000628d:	call   0x140008500
   140006292:	mov    DWORD PTR [rax],0x16
   140006298:	call   0x1400083e0
   14000629d:	xor    eax,eax
   14000629f:	jmp    0x1400062dd
   1400062a1:	mov    edx,0x7fff
   1400062a6:	call   0x1400096a8
   1400062ab:	xor    ecx,ecx
   1400062ad:	cmp    rax,0x7fff
   1400062b3:	setb   cl
   1400062b6:	test   ecx,ecx
   1400062b8:	je     0x14000628d
   1400062ba:	mov    ecx,0xb
   1400062bf:	call   0x14000ad90
   1400062c4:	nop
   1400062c5:	mov    rcx,rbx
   1400062c8:	call   0x1400062e4
   1400062cd:	mov    rbx,rax
   1400062d0:	mov    ecx,0xb
   1400062d5:	call   0x14000ade4
   1400062da:	mov    rax,rbx
   1400062dd:	add    rsp,0x20
   1400062e1:	pop    rbx
   1400062e2:	ret    
   1400062e3:	int3   
   1400062e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400062e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400062ee:	push   rdi
   1400062ef:	sub    rsp,0x20
   1400062f3:	mov    rsi,rcx
   1400062f6:	call   0x140007250
   1400062fb:	mov    rbx,rax
   1400062fe:	test   rax,rax
   140006301:	je     0x14000635a
   140006303:	test   rsi,rsi
   140006306:	je     0x14000635a
   140006308:	or     rdi,0xffffffffffffffff
   14000630c:	inc    rdi
   14000630f:	cmp    BYTE PTR [rsi+rdi*1],0x0
   140006313:	jne    0x14000630c
   140006315:	cmp    QWORD PTR [rax],0x0
   140006319:	je     0x14000635a
   14000631b:	mov    rcx,QWORD PTR [rbx]
   14000631e:	or     rax,0xffffffffffffffff
   140006322:	inc    rax
   140006325:	cmp    BYTE PTR [rcx+rax*1],0x0
   140006329:	jne    0x140006322
   14000632b:	cmp    rax,rdi
   14000632e:	jbe    0x140006345
   140006330:	cmp    BYTE PTR [rcx+rdi*1],0x3d
   140006334:	jne    0x140006345
   140006336:	mov    r8,rdi
   140006339:	mov    rdx,rsi
   14000633c:	call   0x14000b030
   140006341:	test   eax,eax
   140006343:	je     0x14000634f
   140006345:	add    rbx,0x8
   140006349:	cmp    QWORD PTR [rbx],0x0
   14000634d:	jmp    0x140006319
   14000634f:	mov    rax,QWORD PTR [rbx]
   140006352:	inc    rax
   140006355:	add    rax,rdi
   140006358:	jmp    0x14000635c
   14000635a:	xor    eax,eax
   14000635c:	mov    rbx,QWORD PTR [rsp+0x30]
   140006361:	mov    rsi,QWORD PTR [rsp+0x38]
   140006366:	add    rsp,0x20
   14000636a:	pop    rdi
   14000636b:	ret    
   14000636c:	jmp    0x140006278
   140006371:	int3   
   140006372:	int3   
   140006373:	int3   
   140006374:	mov    QWORD PTR [rsp+0x8],rbx
   140006379:	push   rdi
   14000637a:	sub    rsp,0x20
   14000637e:	mov    rbx,rdx
   140006381:	mov    rdi,rcx
   140006384:	mov    ecx,0xb
   140006389:	call   0x14000ad90
   14000638e:	nop
   14000638f:	mov    rdx,rbx
   140006392:	mov    rcx,rdi
   140006395:	call   0x1400063b4
   14000639a:	mov    ebx,eax
   14000639c:	mov    ecx,0xb
   1400063a1:	call   0x14000ade4
   1400063a6:	mov    eax,ebx
   1400063a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400063ad:	add    rsp,0x20
   1400063b1:	pop    rdi
   1400063b2:	ret    
   1400063b3:	int3   
   1400063b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400063b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400063be:	push   rdi
   1400063bf:	sub    rsp,0x20
   1400063c3:	xor    ebx,ebx
   1400063c5:	mov    rsi,rdx
   1400063c8:	cmp    QWORD PTR [rip+0x18959],rbx        # 0x14001ed28
   1400063cf:	mov    rdi,rcx
   1400063d2:	jne    0x1400063e2
   1400063d4:	cmp    QWORD PTR [rip+0x18955],rbx        # 0x14001ed30
   1400063db:	jne    0x1400063e2
   1400063dd:	or     eax,0xffffffff
   1400063e0:	jmp    0x140006438
   1400063e2:	test   rcx,rcx
   1400063e5:	jne    0x1400063f9
   1400063e7:	call   0x140008500
   1400063ec:	mov    DWORD PTR [rax],0x16
   1400063f2:	call   0x1400083e0
   1400063f7:	jmp    0x1400063dd
   1400063f9:	call   0x140006448
   1400063fe:	test   rax,rax
   140006401:	je     0x14000642c
   140006403:	mov    edx,0x1
   140006408:	mov    rcx,rax
   14000640b:	call   0x14000b908
   140006410:	test   eax,eax
   140006412:	jne    0x14000642c
   140006414:	cmp    QWORD PTR [rip+0x18915],rbx        # 0x14001ed30
   14000641b:	je     0x14000642f
   14000641d:	mov    rdx,rsi
   140006420:	mov    rcx,rdi
   140006423:	call   0x140006588
   140006428:	test   al,al
   14000642a:	jne    0x14000642f
   14000642c:	or     ebx,0xffffffff
   14000642f:	xor    ecx,ecx
   140006431:	call   0x140007cc4
   140006436:	mov    eax,ebx
   140006438:	mov    rbx,QWORD PTR [rsp+0x30]
   14000643d:	mov    rsi,QWORD PTR [rsp+0x38]
   140006442:	add    rsp,0x20
   140006446:	pop    rdi
   140006447:	ret    
   140006448:	mov    rax,rsp
   14000644b:	mov    QWORD PTR [rax+0x8],rbx
   14000644f:	mov    QWORD PTR [rax+0x10],rbp
   140006453:	mov    QWORD PTR [rax+0x18],rsi
   140006457:	mov    QWORD PTR [rax+0x20],rdi
   14000645b:	push   r12
   14000645d:	push   r14
   14000645f:	push   r15
   140006461:	sub    rsp,0x20
   140006465:	xor    edi,edi
   140006467:	mov    rsi,rdx
   14000646a:	mov    rbp,rcx
   14000646d:	test   rdx,rdx
   140006470:	je     0x1400064f7
   140006476:	mov    ebx,0x7fff
   14000647b:	mov    edx,ebx
   14000647d:	call   0x1400096a8
   140006482:	mov    edx,ebx
   140006484:	mov    rcx,rsi
   140006487:	mov    r15,rax
   14000648a:	call   0x1400096a8
   14000648f:	mov    r14,rax
   140006492:	cmp    r15,rbx
   140006495:	jb     0x1400064ae
   140006497:	call   0x140008500
   14000649c:	mov    DWORD PTR [rax],0x16
   1400064a2:	call   0x1400083e0
   1400064a7:	xor    eax,eax
   1400064a9:	jmp    0x140006569
   1400064ae:	cmp    rax,rbx
   1400064b1:	jae    0x140006497
   1400064b3:	lea    r12,[rax+r15*1]
   1400064b7:	mov    edx,0x1
   1400064bc:	lea    rcx,[r12+0x2]
   1400064c1:	call   0x140007e1c
   1400064c6:	mov    rbx,rax
   1400064c9:	test   rax,rax
   1400064cc:	je     0x14000655f
   1400064d2:	mov    r8,rbp
   1400064d5:	lea    rdx,[r12+0x2]
   1400064da:	mov    rcx,rax
   1400064dd:	call   0x140007d64
   1400064e2:	lea    rcx,[r15+0x1]
   1400064e6:	mov    BYTE PTR [rbx+r15*1],0x3d
   1400064eb:	add    rcx,rbx
   1400064ee:	lea    rdx,[r14+0x1]
   1400064f2:	mov    r8,rsi
   1400064f5:	jmp    0x140006557
   1400064f7:	mov    edx,0x3d
   1400064fc:	call   0x140002878
   140006501:	test   rax,rax
   140006504:	je     0x14000652a
   140006506:	mov    rcx,rax
   140006509:	mov    ebx,0x7fff
   14000650e:	sub    rcx,rbp
   140006511:	cmp    rcx,rbx
   140006514:	jge    0x140006497
   140006516:	lea    rcx,[rax+0x1]
   14000651a:	mov    edx,ebx
   14000651c:	call   0x1400096a8
   140006521:	cmp    rax,rbx
   140006524:	jae    0x140006497
   14000652a:	or     rsi,0xffffffffffffffff
   14000652e:	inc    rsi
   140006531:	cmp    BYTE PTR [rsi+rbp*1],dil
   140006535:	jne    0x14000652e
   140006537:	mov    edx,0x1
   14000653c:	lea    rcx,[rsi+0x1]
   140006540:	call   0x140007e1c
   140006545:	mov    rbx,rax
   140006548:	test   rax,rax
   14000654b:	je     0x14000655f
   14000654d:	mov    r8,rbp
   140006550:	lea    rdx,[rsi+0x1]
   140006554:	mov    rcx,rax
   140006557:	call   0x140007d64
   14000655c:	mov    rdi,rbx
   14000655f:	xor    ecx,ecx
   140006561:	call   0x140007cc4
   140006566:	mov    rax,rdi
   140006569:	mov    rbx,QWORD PTR [rsp+0x40]
   14000656e:	mov    rbp,QWORD PTR [rsp+0x48]
   140006573:	mov    rsi,QWORD PTR [rsp+0x50]
   140006578:	mov    rdi,QWORD PTR [rsp+0x58]
   14000657d:	add    rsp,0x20
   140006581:	pop    r15
   140006583:	pop    r14
   140006585:	pop    r12
   140006587:	ret    
   140006588:	mov    rax,rsp
   14000658b:	mov    QWORD PTR [rax+0x8],rbx
   14000658f:	mov    QWORD PTR [rax+0x10],rbp
   140006593:	mov    QWORD PTR [rax+0x18],rsi
   140006597:	mov    QWORD PTR [rax+0x20],rdi
   14000659b:	push   r14
   14000659d:	sub    rsp,0x30
   1400065a1:	xor    edi,edi
   1400065a3:	mov    rbp,rdx
   1400065a6:	mov    r14,rcx
   1400065a9:	mov    DWORD PTR [rax-0x10],edi
   1400065ac:	mov    r8,rcx
   1400065af:	mov    QWORD PTR [rax-0x18],rdi
   1400065b3:	or     r9d,0xffffffff
   1400065b7:	xor    edx,edx
   1400065b9:	xor    ecx,ecx
   1400065bb:	call   QWORD PTR [rip+0xdb87]        # 0x140014148
   1400065c1:	movsxd rsi,eax
   1400065c4:	test   eax,eax
   1400065c6:	jne    0x1400065d8
   1400065c8:	call   0x140008500
   1400065cd:	mov    rsi,rdi
   1400065d0:	mov    DWORD PTR [rax],0x2a
   1400065d6:	jmp    0x140006601
   1400065d8:	test   rbp,rbp
   1400065db:	je     0x140006601
   1400065dd:	mov    DWORD PTR [rsp+0x28],edi
   1400065e1:	or     r9d,0xffffffff
   1400065e5:	mov    r8,rbp
   1400065e8:	mov    QWORD PTR [rsp+0x20],rdi
   1400065ed:	xor    edx,edx
   1400065ef:	xor    ecx,ecx
   1400065f1:	call   QWORD PTR [rip+0xdb51]        # 0x140014148
   1400065f7:	movsxd rcx,eax
   1400065fa:	test   eax,eax
   1400065fc:	je     0x1400065c8
   1400065fe:	add    rsi,rcx
   140006601:	mov    edx,0x2
   140006606:	mov    rcx,rsi
   140006609:	call   0x140007e1c
   14000660e:	mov    rbx,rax
   140006611:	test   rax,rax
   140006614:	je     0x140006689
   140006616:	mov    DWORD PTR [rsp+0x28],esi
   14000661a:	or     r9d,0xffffffff
   14000661e:	mov    r8,r14
   140006621:	mov    QWORD PTR [rsp+0x20],rax
   140006626:	xor    edx,edx
   140006628:	xor    ecx,ecx
   14000662a:	call   QWORD PTR [rip+0xdb18]        # 0x140014148
   140006630:	movsxd rcx,eax
   140006633:	test   eax,eax
   140006635:	jne    0x140006644
   140006637:	call   0x140008500
   14000663c:	mov    DWORD PTR [rax],0x2a
   140006642:	jmp    0x140006689
   140006644:	test   rbp,rbp
   140006647:	je     0x140006676
   140006649:	lea    rax,[rbx+rcx*2]
   14000664d:	mov    edx,0x3d
   140006652:	sub    esi,ecx
   140006654:	mov    WORD PTR [rax-0x2],dx
   140006658:	xor    edx,edx
   14000665a:	mov    DWORD PTR [rsp+0x28],esi
   14000665e:	or     r9d,0xffffffff
   140006662:	mov    QWORD PTR [rsp+0x20],rax
   140006667:	mov    r8,rbp
   14000666a:	xor    ecx,ecx
   14000666c:	call   QWORD PTR [rip+0xdad6]        # 0x140014148
   140006672:	test   eax,eax
   140006674:	je     0x140006637
   140006676:	mov    rcx,rbx
   140006679:	xor    edx,edx
   14000667b:	mov    rbx,rdi
   14000667e:	call   0x14000b910
   140006683:	test   eax,eax
   140006685:	sete   dil
   140006689:	mov    rcx,rbx
   14000668c:	call   0x140007cc4
   140006691:	mov    rbx,QWORD PTR [rsp+0x40]
   140006696:	mov    al,dil
   140006699:	mov    rdi,QWORD PTR [rsp+0x58]
   14000669e:	mov    rbp,QWORD PTR [rsp+0x48]
   1400066a3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400066a8:	add    rsp,0x30
   1400066ac:	pop    r14
   1400066ae:	ret    
   1400066af:	int3   
   1400066b0:	xor    edx,edx
   1400066b2:	jmp    0x140006374
   1400066b7:	int3   
   1400066b8:	sub    rsp,0x28
   1400066bc:	call   0x1400066cc
   1400066c1:	neg    eax
   1400066c3:	sbb    eax,eax
   1400066c5:	add    rsp,0x28
   1400066c9:	ret    
   1400066ca:	int3   
   1400066cb:	int3   
   1400066cc:	rex push rbx
   1400066ce:	sub    rsp,0x20
   1400066d2:	mov    ebx,edx
   1400066d4:	test   rcx,rcx
   1400066d7:	jne    0x1400066e0
   1400066d9:	call   0x14000ba10
   1400066de:	jmp    0x140006713
   1400066e0:	and    QWORD PTR [rsp+0x30],0x0
   1400066e6:	lea    rdx,[rsp+0x30]
   1400066eb:	call   0x14000b918
   1400066f0:	test   eax,eax
   1400066f2:	jne    0x1400066f9
   1400066f4:	or     ebx,0xffffffff
   1400066f7:	jmp    0x140006707
   1400066f9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400066fe:	mov    edx,ebx
   140006700:	call   0x14000ba10
   140006705:	mov    ebx,eax
   140006707:	mov    rcx,QWORD PTR [rsp+0x30]
   14000670c:	call   0x140007cc4
   140006711:	mov    eax,ebx
   140006713:	add    rsp,0x20
   140006717:	pop    rbx
   140006718:	ret    
   140006719:	int3   
   14000671a:	int3   
   14000671b:	int3   
   14000671c:	mov    QWORD PTR [rsp+0x8],rbx
   140006721:	mov    QWORD PTR [rsp+0x10],rbp
   140006726:	mov    QWORD PTR [rsp+0x18],rsi
   14000672b:	push   rdi
   14000672c:	sub    rsp,0x20
   140006730:	mov    rsi,rdx
   140006733:	mov    edi,ecx
   140006735:	call   0x140009e00
   14000673a:	xor    r8d,r8d
   14000673d:	mov    rbx,rax
   140006740:	test   rax,rax
   140006743:	jne    0x14000674c
   140006745:	xor    eax,eax
   140006747:	jmp    0x140006894
   14000674c:	mov    rcx,QWORD PTR [rax]
   14000674f:	mov    rax,rcx
   140006752:	lea    rdx,[rcx+0xc0]
   140006759:	cmp    rcx,rdx
   14000675c:	je     0x14000676b
   14000675e:	cmp    DWORD PTR [rax],edi
   140006760:	je     0x14000676e
   140006762:	add    rax,0x10
   140006766:	cmp    rax,rdx
   140006769:	jne    0x14000675e
   14000676b:	mov    rax,r8
   14000676e:	test   rax,rax
   140006771:	je     0x140006745
   140006773:	mov    rdi,QWORD PTR [rax+0x8]
   140006777:	test   rdi,rdi
   14000677a:	je     0x140006745
   14000677c:	cmp    rdi,0x5
   140006780:	jne    0x14000678e
   140006782:	mov    QWORD PTR [rax+0x8],r8
   140006786:	lea    eax,[rdi-0x4]
   140006789:	jmp    0x140006894
   14000678e:	cmp    rdi,0x1
   140006792:	je     0x140006891
   140006798:	mov    rbp,QWORD PTR [rbx+0x8]
   14000679c:	mov    QWORD PTR [rbx+0x8],rsi
   1400067a0:	mov    esi,DWORD PTR [rax+0x4]
   1400067a3:	cmp    esi,0x8
   1400067a6:	jne    0x14000687c
   1400067ac:	add    rcx,0x30
   1400067b0:	lea    rdx,[rcx+0x90]
   1400067b7:	jmp    0x1400067c1
   1400067b9:	mov    QWORD PTR [rcx+0x8],r8
   1400067bd:	add    rcx,0x10
   1400067c1:	cmp    rcx,rdx
   1400067c4:	jne    0x1400067b9
   1400067c6:	cmp    DWORD PTR [rax],0xc000008d
   1400067cc:	mov    esi,DWORD PTR [rbx+0x10]
   1400067cf:	je     0x14000685d
   1400067d5:	cmp    DWORD PTR [rax],0xc000008e
   1400067db:	je     0x140006854
   1400067dd:	cmp    DWORD PTR [rax],0xc000008f
   1400067e3:	je     0x14000684b
   1400067e5:	cmp    DWORD PTR [rax],0xc0000090
   1400067eb:	je     0x140006842
   1400067ed:	cmp    DWORD PTR [rax],0xc0000091
   1400067f3:	je     0x140006839
   1400067f5:	cmp    DWORD PTR [rax],0xc0000092
   1400067fb:	je     0x140006830
   1400067fd:	cmp    DWORD PTR [rax],0xc0000093
   140006803:	je     0x140006827
   140006805:	cmp    DWORD PTR [rax],0xc00002b4
   14000680b:	je     0x14000681e
   14000680d:	cmp    DWORD PTR [rax],0xc00002b5
   140006813:	jne    0x140006864
   140006815:	mov    DWORD PTR [rbx+0x10],0x8d
   14000681c:	jmp    0x140006864
   14000681e:	mov    DWORD PTR [rbx+0x10],0x8e
   140006825:	jmp    0x140006864
   140006827:	mov    DWORD PTR [rbx+0x10],0x85
   14000682e:	jmp    0x140006864
   140006830:	mov    DWORD PTR [rbx+0x10],0x8a
   140006837:	jmp    0x140006864
   140006839:	mov    DWORD PTR [rbx+0x10],0x84
   140006840:	jmp    0x140006864
   140006842:	mov    DWORD PTR [rbx+0x10],0x81
   140006849:	jmp    0x140006864
   14000684b:	mov    DWORD PTR [rbx+0x10],0x86
   140006852:	jmp    0x140006864
   140006854:	mov    DWORD PTR [rbx+0x10],0x83
   14000685b:	jmp    0x140006864
   14000685d:	mov    DWORD PTR [rbx+0x10],0x82
   140006864:	mov    rcx,rdi
   140006867:	call   QWORD PTR [rip+0xd9eb]        # 0x140014258
   14000686d:	mov    edx,DWORD PTR [rbx+0x10]
   140006870:	mov    ecx,0x8
   140006875:	call   rdi
   140006877:	mov    DWORD PTR [rbx+0x10],esi
   14000687a:	jmp    0x14000688d
   14000687c:	mov    rcx,rdi
   14000687f:	mov    QWORD PTR [rax+0x8],r8
   140006883:	call   QWORD PTR [rip+0xd9cf]        # 0x140014258
   140006889:	mov    ecx,esi
   14000688b:	call   rdi
   14000688d:	mov    QWORD PTR [rbx+0x8],rbp
   140006891:	or     eax,0xffffffff
   140006894:	mov    rbx,QWORD PTR [rsp+0x30]
   140006899:	mov    rbp,QWORD PTR [rsp+0x38]
   14000689e:	mov    rsi,QWORD PTR [rsp+0x40]
   1400068a3:	add    rsp,0x20
   1400068a7:	pop    rdi
   1400068a8:	ret    
   1400068a9:	int3   
   1400068aa:	int3   
   1400068ab:	int3   
   1400068ac:	mov    eax,DWORD PTR [rip+0x18362]        # 0x14001ec14
   1400068b2:	ret    
   1400068b3:	int3   
   1400068b4:	mov    DWORD PTR [rip+0x1835a],ecx        # 0x14001ec14
   1400068ba:	ret    
   1400068bb:	int3   
   1400068bc:	mov    rdx,QWORD PTR [rip+0x17755]        # 0x14001e018
   1400068c3:	mov    ecx,edx
   1400068c5:	xor    rdx,QWORD PTR [rip+0x1834c]        # 0x14001ec18
   1400068cc:	and    ecx,0x3f
   1400068cf:	ror    rdx,cl
   1400068d2:	test   rdx,rdx
   1400068d5:	setne  al
   1400068d8:	ret    
   1400068d9:	int3   
   1400068da:	int3   
   1400068db:	int3   
   1400068dc:	mov    QWORD PTR [rip+0x18335],rcx        # 0x14001ec18
   1400068e3:	ret    
   1400068e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400068e9:	push   rdi
   1400068ea:	sub    rsp,0x20
   1400068ee:	mov    rbx,QWORD PTR [rip+0x17723]        # 0x14001e018
   1400068f5:	mov    rdi,rcx
   1400068f8:	mov    ecx,ebx
   1400068fa:	xor    rbx,QWORD PTR [rip+0x18317]        # 0x14001ec18
   140006901:	and    ecx,0x3f
   140006904:	ror    rbx,cl
   140006907:	test   rbx,rbx
   14000690a:	jne    0x140006910
   14000690c:	xor    eax,eax
   14000690e:	jmp    0x14000691e
   140006910:	mov    rcx,rbx
   140006913:	call   QWORD PTR [rip+0xd93f]        # 0x140014258
   140006919:	mov    rcx,rdi
   14000691c:	call   rbx
   14000691e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006923:	add    rsp,0x20
   140006927:	pop    rdi
   140006928:	ret    
   140006929:	int3   
   14000692a:	int3   
   14000692b:	int3   
   14000692c:	mov    r8,QWORD PTR [rip+0x176e5]        # 0x14001e018
   140006933:	mov    r9,rcx
   140006936:	mov    edx,r8d
   140006939:	mov    ecx,0x40
   14000693e:	and    edx,0x3f
   140006941:	sub    ecx,edx
   140006943:	ror    r9,cl
   140006946:	xor    r9,r8
   140006949:	mov    QWORD PTR [rip+0x182c8],r9        # 0x14001ec18
   140006950:	ret    
   140006951:	int3   
   140006952:	int3   
   140006953:	int3   
   140006954:	mov    rax,rsp
   140006957:	mov    QWORD PTR [rax+0x8],rbx
   14000695b:	mov    QWORD PTR [rax+0x10],rbp
   14000695f:	mov    QWORD PTR [rax+0x18],rsi
   140006963:	mov    QWORD PTR [rax+0x20],rdi
   140006967:	push   r12
   140006969:	push   r14
   14000696b:	push   r15
   14000696d:	sub    rsp,0x20
   140006971:	mov    r15,QWORD PTR [rsp+0x60]
   140006976:	mov    r12,r9
   140006979:	mov    rdi,r8
   14000697c:	mov    r14,rdx
   14000697f:	mov    rbx,rcx
   140006982:	and    QWORD PTR [r15],0x0
   140006986:	mov    QWORD PTR [r9],0x1
   14000698d:	test   rdx,rdx
   140006990:	je     0x140006999
   140006992:	mov    QWORD PTR [rdx],r8
   140006995:	add    r14,0x8
   140006999:	xor    bpl,bpl
   14000699c:	cmp    BYTE PTR [rbx],0x22
   14000699f:	jne    0x1400069b0
   1400069a1:	test   bpl,bpl
   1400069a4:	mov    sil,0x22
   1400069a7:	sete   bpl
   1400069ab:	inc    rbx
   1400069ae:	jmp    0x1400069e7
   1400069b0:	inc    QWORD PTR [r15]
   1400069b3:	test   rdi,rdi
   1400069b6:	je     0x1400069bf
   1400069b8:	mov    al,BYTE PTR [rbx]
   1400069ba:	mov    BYTE PTR [rdi],al
   1400069bc:	inc    rdi
   1400069bf:	movsx  esi,BYTE PTR [rbx]
   1400069c2:	inc    rbx
   1400069c5:	mov    ecx,esi
   1400069c7:	call   0x14000cb6c
   1400069cc:	test   eax,eax
   1400069ce:	je     0x1400069e2
   1400069d0:	inc    QWORD PTR [r15]
   1400069d3:	test   rdi,rdi
   1400069d6:	je     0x1400069df
   1400069d8:	mov    al,BYTE PTR [rbx]
   1400069da:	mov    BYTE PTR [rdi],al
   1400069dc:	inc    rdi
   1400069df:	inc    rbx
   1400069e2:	test   sil,sil
   1400069e5:	je     0x140006a03
   1400069e7:	test   bpl,bpl
   1400069ea:	jne    0x14000699c
   1400069ec:	cmp    sil,0x20
   1400069f0:	je     0x1400069f8
   1400069f2:	cmp    sil,0x9
   1400069f6:	jne    0x14000699c
   1400069f8:	test   rdi,rdi
   1400069fb:	je     0x140006a06
   1400069fd:	mov    BYTE PTR [rdi-0x1],0x0
   140006a01:	jmp    0x140006a06
   140006a03:	dec    rbx
   140006a06:	xor    sil,sil
   140006a09:	cmp    BYTE PTR [rbx],0x0
   140006a0c:	je     0x140006ae4
   140006a12:	cmp    BYTE PTR [rbx],0x20
   140006a15:	je     0x140006a1c
   140006a17:	cmp    BYTE PTR [rbx],0x9
   140006a1a:	jne    0x140006a21
   140006a1c:	inc    rbx
   140006a1f:	jmp    0x140006a12
   140006a21:	cmp    BYTE PTR [rbx],0x0
   140006a24:	je     0x140006ae4
   140006a2a:	test   r14,r14
   140006a2d:	je     0x140006a36
   140006a2f:	mov    QWORD PTR [r14],rdi
   140006a32:	add    r14,0x8
   140006a36:	inc    QWORD PTR [r12]
   140006a3a:	mov    edx,0x1
   140006a3f:	xor    eax,eax
   140006a41:	jmp    0x140006a48
   140006a43:	inc    rbx
   140006a46:	inc    eax
   140006a48:	cmp    BYTE PTR [rbx],0x5c
   140006a4b:	je     0x140006a43
   140006a4d:	cmp    BYTE PTR [rbx],0x22
   140006a50:	jne    0x140006a83
   140006a52:	test   dl,al
   140006a54:	jne    0x140006a6f
   140006a56:	test   sil,sil
   140006a59:	je     0x140006a66
   140006a5b:	cmp    BYTE PTR [rbx+0x1],0x22
   140006a5f:	jne    0x140006a66
   140006a61:	inc    rbx
   140006a64:	jmp    0x140006a6f
   140006a66:	xor    edx,edx
   140006a68:	test   sil,sil
   140006a6b:	sete   sil
   140006a6f:	shr    eax,1
   140006a71:	jmp    0x140006a83
   140006a73:	dec    eax
   140006a75:	test   rdi,rdi
   140006a78:	je     0x140006a80
   140006a7a:	mov    BYTE PTR [rdi],0x5c
   140006a7d:	inc    rdi
   140006a80:	inc    QWORD PTR [r15]
   140006a83:	test   eax,eax
   140006a85:	jne    0x140006a73
   140006a87:	mov    al,BYTE PTR [rbx]
   140006a89:	test   al,al
   140006a8b:	je     0x140006ad1
   140006a8d:	test   sil,sil
   140006a90:	jne    0x140006a9a
   140006a92:	cmp    al,0x20
   140006a94:	je     0x140006ad1
   140006a96:	cmp    al,0x9
   140006a98:	je     0x140006ad1
   140006a9a:	test   edx,edx
   140006a9c:	je     0x140006ac9
   140006a9e:	test   rdi,rdi
   140006aa1:	je     0x140006aa8
   140006aa3:	mov    BYTE PTR [rdi],al
   140006aa5:	inc    rdi
   140006aa8:	movsx  ecx,BYTE PTR [rbx]
   140006aab:	call   0x14000cb6c
   140006ab0:	test   eax,eax
   140006ab2:	je     0x140006ac6
   140006ab4:	inc    QWORD PTR [r15]
   140006ab7:	inc    rbx
   140006aba:	test   rdi,rdi
   140006abd:	je     0x140006ac6
   140006abf:	mov    al,BYTE PTR [rbx]
   140006ac1:	mov    BYTE PTR [rdi],al
   140006ac3:	inc    rdi
   140006ac6:	inc    QWORD PTR [r15]
   140006ac9:	inc    rbx
   140006acc:	jmp    0x140006a3a
   140006ad1:	test   rdi,rdi
   140006ad4:	je     0x140006adc
   140006ad6:	mov    BYTE PTR [rdi],0x0
   140006ad9:	inc    rdi
   140006adc:	inc    QWORD PTR [r15]
   140006adf:	jmp    0x140006a09
   140006ae4:	test   r14,r14
   140006ae7:	je     0x140006aed
   140006ae9:	and    QWORD PTR [r14],0x0
   140006aed:	inc    QWORD PTR [r12]
   140006af1:	mov    rbx,QWORD PTR [rsp+0x40]
   140006af6:	mov    rbp,QWORD PTR [rsp+0x48]
   140006afb:	mov    rsi,QWORD PTR [rsp+0x50]
   140006b00:	mov    rdi,QWORD PTR [rsp+0x58]
   140006b05:	add    rsp,0x20
   140006b09:	pop    r15
   140006b0b:	pop    r14
   140006b0d:	pop    r12
   140006b0f:	ret    
   140006b10:	rex push rbx
   140006b12:	sub    rsp,0x20
   140006b16:	movabs rax,0x1fffffffffffffff
   140006b20:	mov    r9,rdx
   140006b23:	mov    r10,rcx
   140006b26:	cmp    rcx,rax
   140006b29:	jb     0x140006b2f
   140006b2b:	xor    eax,eax
   140006b2d:	jmp    0x140006b6b
   140006b2f:	or     rcx,0xffffffffffffffff
   140006b33:	xor    edx,edx
   140006b35:	mov    rax,rcx
   140006b38:	div    r8
   140006b3b:	cmp    r9,rax
   140006b3e:	jae    0x140006b2b
   140006b40:	shl    r10,0x3
   140006b44:	imul   r9,r8
   140006b48:	sub    rcx,r10
   140006b4b:	cmp    rcx,r9
   140006b4e:	jbe    0x140006b2b
   140006b50:	lea    rcx,[r9+r10*1]
   140006b54:	mov    edx,0x1
   140006b59:	call   0x140007e1c
   140006b5e:	xor    ecx,ecx
   140006b60:	mov    rbx,rax
   140006b63:	call   0x140007cc4
   140006b68:	mov    rax,rbx
   140006b6b:	add    rsp,0x20
   140006b6f:	pop    rbx
   140006b70:	ret    
   140006b71:	int3   
   140006b72:	int3   
   140006b73:	int3   
   140006b74:	mov    QWORD PTR [rsp+0x8],rbx
   140006b79:	push   rbp
   140006b7a:	push   rsi
   140006b7b:	push   rdi
   140006b7c:	push   r14
   140006b7e:	push   r15
   140006b80:	mov    rbp,rsp
   140006b83:	sub    rsp,0x30
   140006b87:	lea    eax,[rcx-0x1]
   140006b8a:	mov    r14d,ecx
   140006b8d:	cmp    eax,0x1
   140006b90:	jbe    0x140006ba8
   140006b92:	call   0x140008500
   140006b97:	mov    edi,0x16
   140006b9c:	mov    DWORD PTR [rax],edi
   140006b9e:	call   0x1400083e0
   140006ba3:	jmp    0x140006cd7
   140006ba8:	call   0x14000c764
   140006bad:	lea    rbx,[rip+0x1806c]        # 0x14001ec20
   140006bb4:	mov    r8d,0x104
   140006bba:	mov    rdx,rbx
   140006bbd:	xor    ecx,ecx
   140006bbf:	call   QWORD PTR [rip+0xd463]        # 0x140014028
   140006bc5:	mov    rsi,QWORD PTR [rip+0x18194]        # 0x14001ed60
   140006bcc:	xor    edi,edi
   140006bce:	mov    QWORD PTR [rip+0x1819b],rbx        # 0x14001ed70
   140006bd5:	test   rsi,rsi
   140006bd8:	je     0x140006bdf
   140006bda:	cmp    BYTE PTR [rsi],dil
   140006bdd:	jne    0x140006be2
   140006bdf:	mov    rsi,rbx
   140006be2:	lea    rax,[rbp+0x48]
   140006be6:	mov    QWORD PTR [rbp+0x40],rdi
   140006bea:	lea    r9,[rbp+0x40]
   140006bee:	mov    QWORD PTR [rsp+0x20],rax
   140006bf3:	xor    r8d,r8d
   140006bf6:	mov    QWORD PTR [rbp+0x48],rdi
   140006bfa:	xor    edx,edx
   140006bfc:	mov    rcx,rsi
   140006bff:	call   0x140006954
   140006c04:	mov    r15,QWORD PTR [rbp+0x40]
   140006c08:	mov    r8d,0x1
   140006c0e:	mov    rdx,QWORD PTR [rbp+0x48]
   140006c12:	mov    rcx,r15
   140006c15:	call   0x140006b10
   140006c1a:	mov    rbx,rax
   140006c1d:	test   rax,rax
   140006c20:	jne    0x140006c33
   140006c22:	call   0x140008500
   140006c27:	lea    edi,[rbx+0xc]
   140006c2a:	mov    DWORD PTR [rax],edi
   140006c2c:	xor    ecx,ecx
   140006c2e:	jmp    0x140006cd2
   140006c33:	lea    r8,[rax+r15*8]
   140006c37:	mov    rdx,rbx
   140006c3a:	lea    rax,[rbp+0x48]
   140006c3e:	mov    rcx,rsi
   140006c41:	lea    r9,[rbp+0x40]
   140006c45:	mov    QWORD PTR [rsp+0x20],rax
   140006c4a:	call   0x140006954
   140006c4f:	cmp    r14d,0x1
   140006c53:	jne    0x140006c69
   140006c55:	mov    eax,DWORD PTR [rbp+0x40]
   140006c58:	dec    eax
   140006c5a:	mov    QWORD PTR [rip+0x180ef],rbx        # 0x14001ed50
   140006c61:	mov    DWORD PTR [rip+0x180e1],eax        # 0x14001ed48
   140006c67:	jmp    0x140006c2c
   140006c69:	lea    rdx,[rbp+0x38]
   140006c6d:	mov    QWORD PTR [rbp+0x38],rdi
   140006c71:	mov    rcx,rbx
   140006c74:	call   0x14000c060
   140006c79:	mov    esi,eax
   140006c7b:	test   eax,eax
   140006c7d:	je     0x140006c98
   140006c7f:	mov    rcx,QWORD PTR [rbp+0x38]
   140006c83:	call   0x140007cc4
   140006c88:	mov    rcx,rbx
   140006c8b:	mov    QWORD PTR [rbp+0x38],rdi
   140006c8f:	call   0x140007cc4
   140006c94:	mov    edi,esi
   140006c96:	jmp    0x140006cd7
   140006c98:	mov    rdx,QWORD PTR [rbp+0x38]
   140006c9c:	mov    rcx,rdi
   140006c9f:	mov    rax,rdx
   140006ca2:	cmp    QWORD PTR [rdx],rdi
   140006ca5:	je     0x140006cb3
   140006ca7:	lea    rax,[rax+0x8]
   140006cab:	inc    rcx
   140006cae:	cmp    QWORD PTR [rax],rdi
   140006cb1:	jne    0x140006ca7
   140006cb3:	mov    DWORD PTR [rip+0x1808f],ecx        # 0x14001ed48
   140006cb9:	xor    ecx,ecx
   140006cbb:	mov    QWORD PTR [rbp+0x38],rdi
   140006cbf:	mov    QWORD PTR [rip+0x1808a],rdx        # 0x14001ed50
   140006cc6:	call   0x140007cc4
   140006ccb:	mov    rcx,rbx
   140006cce:	mov    QWORD PTR [rbp+0x38],rdi
   140006cd2:	call   0x140007cc4
   140006cd7:	mov    eax,edi
   140006cd9:	mov    rbx,QWORD PTR [rsp+0x60]
   140006cde:	add    rsp,0x30
   140006ce2:	pop    r15
   140006ce4:	pop    r14
   140006ce6:	pop    rdi
   140006ce7:	pop    rsi
   140006ce8:	pop    rbp
   140006ce9:	ret    
   140006cea:	int3   
   140006ceb:	int3   
   140006cec:	rex push rbx
   140006cee:	sub    rsp,0x20
   140006cf2:	mov    rax,QWORD PTR [rip+0x1802f]        # 0x14001ed28
   140006cf9:	xor    ebx,ebx
   140006cfb:	test   rax,rax
   140006cfe:	jne    0x140006d2b
   140006d00:	cmp    QWORD PTR [rip+0x18029],rbx        # 0x14001ed30
   140006d07:	jne    0x140006d0d
   140006d09:	xor    eax,eax
   140006d0b:	jmp    0x140006d2b
   140006d0d:	call   0x140006d7c
   140006d12:	test   eax,eax
   140006d14:	jne    0x140006d09
   140006d16:	call   0x140007094
   140006d1b:	mov    rcx,QWORD PTR [rip+0x18006]        # 0x14001ed28
   140006d22:	test   eax,eax
   140006d24:	cmovne rcx,rbx
   140006d28:	mov    rax,rcx
   140006d2b:	add    rsp,0x20
   140006d2f:	pop    rbx
   140006d30:	ret    
   140006d31:	int3   
   140006d32:	int3   
   140006d33:	int3   
   140006d34:	rex push rbx
   140006d36:	sub    rsp,0x20
   140006d3a:	mov    rax,QWORD PTR [rip+0x17fef]        # 0x14001ed30
   140006d41:	xor    ebx,ebx
   140006d43:	test   rax,rax
   140006d46:	jne    0x140006d73
   140006d48:	cmp    QWORD PTR [rip+0x17fd9],rbx        # 0x14001ed28
   140006d4f:	jne    0x140006d55
   140006d51:	xor    eax,eax
   140006d53:	jmp    0x140006d73
   140006d55:	call   0x140006de8
   140006d5a:	test   eax,eax
   140006d5c:	jne    0x140006d51
   140006d5e:	call   0x140007168
   140006d63:	mov    rcx,QWORD PTR [rip+0x17fc6]        # 0x14001ed30
   140006d6a:	test   eax,eax
   140006d6c:	cmovne rcx,rbx
   140006d70:	mov    rax,rcx
   140006d73:	add    rsp,0x20
   140006d77:	pop    rbx
   140006d78:	ret    
   140006d79:	int3   
   140006d7a:	int3   
   140006d7b:	int3   
   140006d7c:	mov    QWORD PTR [rsp+0x8],rbx
   140006d81:	push   rdi
   140006d82:	sub    rsp,0x20
   140006d86:	xor    edi,edi
   140006d88:	cmp    QWORD PTR [rip+0x17f99],rdi        # 0x14001ed28
   140006d8f:	je     0x140006d95
   140006d91:	xor    eax,eax
   140006d93:	jmp    0x140006ddd
   140006d95:	call   0x14000c764
   140006d9a:	call   0x14000cb80
   140006d9f:	mov    rbx,rax
   140006da2:	test   rax,rax
   140006da5:	jne    0x140006dac
   140006da7:	or     edi,0xffffffff
   140006daa:	jmp    0x140006dd3
   140006dac:	mov    rcx,rax
   140006daf:	call   0x140006e50
   140006db4:	test   rax,rax
   140006db7:	jne    0x140006dbe
   140006db9:	or     edi,0xffffffff
   140006dbc:	jmp    0x140006dcc
   140006dbe:	mov    QWORD PTR [rip+0x17f7b],rax        # 0x14001ed40
   140006dc5:	mov    QWORD PTR [rip+0x17f5c],rax        # 0x14001ed28
   140006dcc:	xor    ecx,ecx
   140006dce:	call   0x140007cc4
   140006dd3:	mov    rcx,rbx
   140006dd6:	call   0x140007cc4
   140006ddb:	mov    eax,edi
   140006ddd:	mov    rbx,QWORD PTR [rsp+0x30]
   140006de2:	add    rsp,0x20
   140006de6:	pop    rdi
   140006de7:	ret    
   140006de8:	mov    QWORD PTR [rsp+0x8],rbx
   140006ded:	push   rdi
   140006dee:	sub    rsp,0x20
   140006df2:	xor    edi,edi
   140006df4:	cmp    QWORD PTR [rip+0x17f35],rdi        # 0x14001ed30
   140006dfb:	je     0x140006e01
   140006dfd:	xor    eax,eax
   140006dff:	jmp    0x140006e44
   140006e01:	call   0x14000cc84
   140006e06:	mov    rbx,rax
   140006e09:	test   rax,rax
   140006e0c:	jne    0x140006e13
   140006e0e:	or     edi,0xffffffff
   140006e11:	jmp    0x140006e3a
   140006e13:	mov    rcx,rax
   140006e16:	call   0x140006f4c
   140006e1b:	test   rax,rax
   140006e1e:	jne    0x140006e25
   140006e20:	or     edi,0xffffffff
   140006e23:	jmp    0x140006e33
   140006e25:	mov    QWORD PTR [rip+0x17f0c],rax        # 0x14001ed38
   140006e2c:	mov    QWORD PTR [rip+0x17efd],rax        # 0x14001ed30
   140006e33:	xor    ecx,ecx
   140006e35:	call   0x140007cc4
   140006e3a:	mov    rcx,rbx
   140006e3d:	call   0x140007cc4
   140006e42:	mov    eax,edi
   140006e44:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e49:	add    rsp,0x20
   140006e4d:	pop    rdi
   140006e4e:	ret    
   140006e4f:	int3   
   140006e50:	mov    QWORD PTR [rsp+0x8],rbx
   140006e55:	mov    QWORD PTR [rsp+0x10],rbp
   140006e5a:	mov    QWORD PTR [rsp+0x18],rsi
   140006e5f:	push   rdi
   140006e60:	push   r14
   140006e62:	push   r15
   140006e64:	sub    rsp,0x30
   140006e68:	xor    esi,esi
   140006e6a:	mov    r14,rcx
   140006e6d:	mov    edx,esi
   140006e6f:	jmp    0x140006e8b
   140006e71:	cmp    al,0x3d
   140006e73:	je     0x140006e78
   140006e75:	inc    rdx
   140006e78:	or     rax,0xffffffffffffffff
   140006e7c:	inc    rax
   140006e7f:	cmp    BYTE PTR [rcx+rax*1],sil
   140006e83:	jne    0x140006e7c
   140006e85:	inc    rcx
   140006e88:	add    rcx,rax
   140006e8b:	mov    al,BYTE PTR [rcx]
   140006e8d:	test   al,al
   140006e8f:	jne    0x140006e71
   140006e91:	lea    rcx,[rdx+0x1]
   140006e95:	mov    edx,0x8
   140006e9a:	call   0x140007e1c
   140006e9f:	mov    rbx,rax
   140006ea2:	test   rax,rax
   140006ea5:	je     0x140006f13
   140006ea7:	mov    r15,rax
   140006eaa:	cmp    BYTE PTR [r14],sil
   140006ead:	je     0x140006f10
   140006eaf:	or     rbp,0xffffffffffffffff
   140006eb3:	inc    rbp
   140006eb6:	cmp    BYTE PTR [r14+rbp*1],sil
   140006eba:	jne    0x140006eb3
   140006ebc:	inc    rbp
   140006ebf:	cmp    BYTE PTR [r14],0x3d
   140006ec3:	je     0x140006efa
   140006ec5:	mov    edx,0x1
   140006eca:	mov    rcx,rbp
   140006ecd:	call   0x140007e1c
   140006ed2:	mov    rdi,rax
   140006ed5:	test   rax,rax
   140006ed8:	je     0x140006eff
   140006eda:	mov    r8,r14
   140006edd:	mov    rdx,rbp
   140006ee0:	mov    rcx,rax
   140006ee3:	call   0x140007d64
   140006ee8:	xor    ecx,ecx
   140006eea:	test   eax,eax
   140006eec:	jne    0x140006f36
   140006eee:	mov    QWORD PTR [r15],rdi
   140006ef1:	add    r15,0x8
   140006ef5:	call   0x140007cc4
   140006efa:	add    r14,rbp
   140006efd:	jmp    0x140006eaa
   140006eff:	mov    rcx,rbx
   140006f02:	call   0x140007050
   140006f07:	xor    ecx,ecx
   140006f09:	call   0x140007cc4
   140006f0e:	jmp    0x140006f13
   140006f10:	mov    rsi,rbx
   140006f13:	xor    ecx,ecx
   140006f15:	call   0x140007cc4
   140006f1a:	mov    rbx,QWORD PTR [rsp+0x50]
   140006f1f:	mov    rax,rsi
   140006f22:	mov    rsi,QWORD PTR [rsp+0x60]
   140006f27:	mov    rbp,QWORD PTR [rsp+0x58]
   140006f2c:	add    rsp,0x30
   140006f30:	pop    r15
   140006f32:	pop    r14
   140006f34:	pop    rdi
   140006f35:	ret    
   140006f36:	xor    r9d,r9d
   140006f39:	mov    QWORD PTR [rsp+0x20],rsi
   140006f3e:	xor    r8d,r8d
   140006f41:	xor    edx,edx
   140006f43:	call   0x140008400
   140006f48:	int3   
   140006f49:	int3   
   140006f4a:	int3   
   140006f4b:	int3   
   140006f4c:	mov    QWORD PTR [rsp+0x8],rbx
   140006f51:	mov    QWORD PTR [rsp+0x10],rbp
   140006f56:	mov    QWORD PTR [rsp+0x18],rsi
   140006f5b:	push   rdi
   140006f5c:	push   r14
   140006f5e:	push   r15
   140006f60:	sub    rsp,0x30
   140006f64:	xor    esi,esi
   140006f66:	mov    r14,rcx
   140006f69:	mov    edx,esi
   140006f6b:	jmp    0x140006f8b
   140006f6d:	cmp    ax,0x3d
   140006f71:	je     0x140006f76
   140006f73:	inc    rdx
   140006f76:	or     rax,0xffffffffffffffff
   140006f7a:	inc    rax
   140006f7d:	cmp    WORD PTR [rcx+rax*2],si
   140006f81:	jne    0x140006f7a
   140006f83:	lea    rcx,[rcx+rax*2]
   140006f87:	add    rcx,0x2
   140006f8b:	movzx  eax,WORD PTR [rcx]
   140006f8e:	test   ax,ax
   140006f91:	jne    0x140006f6d
   140006f93:	lea    rcx,[rdx+0x1]
   140006f97:	mov    edx,0x8
   140006f9c:	call   0x140007e1c
   140006fa1:	mov    rbx,rax
   140006fa4:	test   rax,rax
   140006fa7:	je     0x140007019
   140006fa9:	mov    r15,rax
   140006fac:	cmp    WORD PTR [r14],si
   140006fb0:	je     0x140007016
   140006fb2:	or     rbp,0xffffffffffffffff
   140006fb6:	inc    rbp
   140006fb9:	cmp    WORD PTR [r14+rbp*2],si
   140006fbe:	jne    0x140006fb6
   140006fc0:	inc    rbp
   140006fc3:	cmp    WORD PTR [r14],0x3d
   140006fc8:	je     0x140006fff
   140006fca:	mov    edx,0x2
   140006fcf:	mov    rcx,rbp
   140006fd2:	call   0x140007e1c
   140006fd7:	mov    rdi,rax
   140006fda:	test   rax,rax
   140006fdd:	je     0x140007005
   140006fdf:	mov    r8,r14
   140006fe2:	mov    rdx,rbp
   140006fe5:	mov    rcx,rax
   140006fe8:	call   0x14000ae00
   140006fed:	xor    ecx,ecx
   140006fef:	test   eax,eax
   140006ff1:	jne    0x14000703c
   140006ff3:	mov    QWORD PTR [r15],rdi
   140006ff6:	add    r15,0x8
   140006ffa:	call   0x140007cc4
   140006fff:	lea    r14,[r14+rbp*2]
   140007003:	jmp    0x140006fac
   140007005:	mov    rcx,rbx
   140007008:	call   0x140007050
   14000700d:	xor    ecx,ecx
   14000700f:	call   0x140007cc4
   140007014:	jmp    0x140007019
   140007016:	mov    rsi,rbx
   140007019:	xor    ecx,ecx
   14000701b:	call   0x140007cc4
   140007020:	mov    rbx,QWORD PTR [rsp+0x50]
   140007025:	mov    rax,rsi
   140007028:	mov    rsi,QWORD PTR [rsp+0x60]
   14000702d:	mov    rbp,QWORD PTR [rsp+0x58]
   140007032:	add    rsp,0x30
   140007036:	pop    r15
   140007038:	pop    r14
   14000703a:	pop    rdi
   14000703b:	ret    
   14000703c:	xor    r9d,r9d
   14000703f:	mov    QWORD PTR [rsp+0x20],rsi
   140007044:	xor    r8d,r8d
   140007047:	xor    edx,edx
   140007049:	call   0x140008400
   14000704e:	int3   
   14000704f:	int3   
   140007050:	test   rcx,rcx
   140007053:	je     0x140007090
   140007055:	mov    QWORD PTR [rsp+0x8],rbx
   14000705a:	push   rdi
   14000705b:	sub    rsp,0x20
   14000705f:	mov    rax,QWORD PTR [rcx]
   140007062:	mov    rbx,rcx
   140007065:	mov    rdi,rcx
   140007068:	jmp    0x140007079
   14000706a:	mov    rcx,rax
   14000706d:	call   0x140007cc4
   140007072:	lea    rdi,[rdi+0x8]
   140007076:	mov    rax,QWORD PTR [rdi]
   140007079:	test   rax,rax
   14000707c:	jne    0x14000706a
   14000707e:	mov    rcx,rbx
   140007081:	call   0x140007cc4
   140007086:	mov    rbx,QWORD PTR [rsp+0x30]
   14000708b:	add    rsp,0x20
   14000708f:	pop    rdi
   140007090:	ret    
   140007091:	int3   
   140007092:	int3   
   140007093:	int3   
   140007094:	mov    QWORD PTR [rsp+0x8],rbx
   140007099:	mov    QWORD PTR [rsp+0x10],rbp
   14000709e:	push   rsi
   14000709f:	sub    rsp,0x40
   1400070a3:	mov    rsi,QWORD PTR [rip+0x17c86]        # 0x14001ed30
   1400070aa:	test   rsi,rsi
   1400070ad:	jne    0x14000713e
   1400070b3:	or     eax,0xffffffff
   1400070b6:	jmp    0x14000714a
   1400070bb:	and    QWORD PTR [rsp+0x38],0x0
   1400070c1:	or     r9d,0xffffffff
   1400070c5:	and    QWORD PTR [rsp+0x30],0x0
   1400070cb:	xor    edx,edx
   1400070cd:	and    DWORD PTR [rsp+0x28],0x0
   1400070d2:	xor    ecx,ecx
   1400070d4:	mov    r8,QWORD PTR [rsi]
   1400070d7:	and    QWORD PTR [rsp+0x20],0x0
   1400070dd:	call   QWORD PTR [rip+0xd05d]        # 0x140014140
   1400070e3:	movsxd rbp,eax
   1400070e6:	test   eax,eax
   1400070e8:	je     0x1400070b3
   1400070ea:	mov    edx,0x1
   1400070ef:	mov    rcx,rbp
   1400070f2:	call   0x140007e1c
   1400070f7:	mov    rbx,rax
   1400070fa:	test   rax,rax
   1400070fd:	je     0x14000715a
   1400070ff:	and    QWORD PTR [rsp+0x38],0x0
   140007105:	or     r9d,0xffffffff
   140007109:	and    QWORD PTR [rsp+0x30],0x0
   14000710f:	xor    edx,edx
   140007111:	mov    r8,QWORD PTR [rsi]
   140007114:	xor    ecx,ecx
   140007116:	mov    DWORD PTR [rsp+0x28],ebp
   14000711a:	mov    QWORD PTR [rsp+0x20],rax
   14000711f:	call   QWORD PTR [rip+0xd01b]        # 0x140014140
   140007125:	test   eax,eax
   140007127:	je     0x14000715a
   140007129:	xor    edx,edx
   14000712b:	mov    rcx,rbx
   14000712e:	call   0x14000b908
   140007133:	xor    ecx,ecx
   140007135:	call   0x140007cc4
   14000713a:	add    rsi,0x8
   14000713e:	cmp    QWORD PTR [rsi],0x0
   140007142:	jne    0x1400070bb
   140007148:	xor    eax,eax
   14000714a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000714f:	mov    rbp,QWORD PTR [rsp+0x58]
   140007154:	add    rsp,0x40
   140007158:	pop    rsi
   140007159:	ret    
   14000715a:	mov    rcx,rbx
   14000715d:	call   0x140007cc4
   140007162:	jmp    0x1400070b3
   140007167:	int3   
   140007168:	mov    QWORD PTR [rsp+0x8],rbx
   14000716d:	mov    QWORD PTR [rsp+0x10],rbp
   140007172:	push   rsi
   140007173:	sub    rsp,0x30
   140007177:	mov    rsi,QWORD PTR [rip+0x17baa]        # 0x14001ed28
   14000717e:	test   rsi,rsi
   140007181:	jne    0x1400071f3
   140007183:	or     eax,0xffffffff
   140007186:	jmp    0x1400071fb
   140007188:	and    DWORD PTR [rsp+0x28],0x0
   14000718d:	or     r9d,0xffffffff
   140007191:	mov    r8,QWORD PTR [rsi]
   140007194:	xor    edx,edx
   140007196:	and    QWORD PTR [rsp+0x20],0x0
   14000719c:	xor    ecx,ecx
   14000719e:	call   QWORD PTR [rip+0xcfa4]        # 0x140014148
   1400071a4:	movsxd rbp,eax
   1400071a7:	test   eax,eax
   1400071a9:	je     0x140007183
   1400071ab:	mov    edx,0x2
   1400071b0:	mov    rcx,rbp
   1400071b3:	call   0x140007e1c
   1400071b8:	mov    rbx,rax
   1400071bb:	test   rax,rax
   1400071be:	je     0x14000720b
   1400071c0:	mov    r8,QWORD PTR [rsi]
   1400071c3:	or     r9d,0xffffffff
   1400071c7:	mov    DWORD PTR [rsp+0x28],ebp
   1400071cb:	xor    edx,edx
   1400071cd:	xor    ecx,ecx
   1400071cf:	mov    QWORD PTR [rsp+0x20],rax
   1400071d4:	call   QWORD PTR [rip+0xcf6e]        # 0x140014148
   1400071da:	test   eax,eax
   1400071dc:	je     0x14000720b
   1400071de:	xor    edx,edx
   1400071e0:	mov    rcx,rbx
   1400071e3:	call   0x14000b910
   1400071e8:	xor    ecx,ecx
   1400071ea:	call   0x140007cc4
   1400071ef:	add    rsi,0x8
   1400071f3:	cmp    QWORD PTR [rsi],0x0
   1400071f7:	jne    0x140007188
   1400071f9:	xor    eax,eax
   1400071fb:	mov    rbx,QWORD PTR [rsp+0x40]
   140007200:	mov    rbp,QWORD PTR [rsp+0x48]
   140007205:	add    rsp,0x30
   140007209:	pop    rsi
   14000720a:	ret    
   14000720b:	mov    rcx,rbx
   14000720e:	call   0x140007cc4
   140007213:	jmp    0x140007183
   140007218:	sub    rsp,0x28
   14000721c:	mov    rcx,QWORD PTR [rcx]
   14000721f:	cmp    rcx,QWORD PTR [rip+0x17b1a]        # 0x14001ed40
   140007226:	je     0x14000722d
   140007228:	call   0x140007050
   14000722d:	add    rsp,0x28
   140007231:	ret    
   140007232:	int3   
   140007233:	int3   
   140007234:	sub    rsp,0x28
   140007238:	mov    rcx,QWORD PTR [rcx]
   14000723b:	cmp    rcx,QWORD PTR [rip+0x17af6]        # 0x14001ed38
   140007242:	je     0x140007249
   140007244:	call   0x140007050
   140007249:	add    rsp,0x28
   14000724d:	ret    
   14000724e:	int3   
   14000724f:	int3   
   140007250:	jmp    0x140006cec
   140007255:	int3   
   140007256:	int3   
   140007257:	int3   
   140007258:	jmp    0x140006d34
   14000725d:	int3   
   14000725e:	int3   
   14000725f:	int3   
   140007260:	sub    rsp,0x28
   140007264:	lea    rcx,[rip+0x17abd]        # 0x14001ed28
   14000726b:	call   0x140007218
   140007270:	lea    rcx,[rip+0x17ab9]        # 0x14001ed30
   140007277:	call   0x140007234
   14000727c:	mov    rcx,QWORD PTR [rip+0x17abd]        # 0x14001ed40
   140007283:	call   0x140007050
   140007288:	mov    rcx,QWORD PTR [rip+0x17aa9]        # 0x14001ed38
   14000728f:	add    rsp,0x28
   140007293:	jmp    0x140007050
   140007298:	sub    rsp,0x28
   14000729c:	mov    rax,QWORD PTR [rip+0x17a9d]        # 0x14001ed40
   1400072a3:	test   rax,rax
   1400072a6:	jne    0x1400072b4
   1400072a8:	call   0x140006cec
   1400072ad:	mov    QWORD PTR [rip+0x17a8c],rax        # 0x14001ed40
   1400072b4:	add    rsp,0x28
   1400072b8:	ret    
   1400072b9:	int3   
   1400072ba:	int3   
   1400072bb:	int3   
   1400072bc:	jmp    0x140006d7c
   1400072c1:	int3   
   1400072c2:	int3   
   1400072c3:	int3   
   1400072c4:	mov    rax,rsp
   1400072c7:	mov    QWORD PTR [rax+0x8],rbx
   1400072cb:	mov    QWORD PTR [rax+0x10],rbp
   1400072cf:	mov    QWORD PTR [rax+0x18],rsi
   1400072d3:	mov    QWORD PTR [rax+0x20],rdi
   1400072d7:	push   r14
   1400072d9:	sub    rsp,0x20
   1400072dd:	xor    r14d,r14d
   1400072e0:	mov    rdi,rdx
   1400072e3:	sub    rdi,rcx
   1400072e6:	mov    rbx,rcx
   1400072e9:	add    rdi,0x7
   1400072ed:	mov    ebp,r14d
   1400072f0:	shr    rdi,0x3
   1400072f4:	cmp    rcx,rdx
   1400072f7:	cmova  rdi,r14
   1400072fb:	test   rdi,rdi
   1400072fe:	je     0x14000731f
   140007300:	mov    rsi,QWORD PTR [rbx]
   140007303:	test   rsi,rsi
   140007306:	je     0x140007313
   140007308:	mov    rcx,rsi
   14000730b:	call   QWORD PTR [rip+0xcf47]        # 0x140014258
   140007311:	call   rsi
   140007313:	add    rbx,0x8
   140007317:	inc    rbp
   14000731a:	cmp    rbp,rdi
   14000731d:	jne    0x140007300
   14000731f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007324:	mov    rbp,QWORD PTR [rsp+0x38]
   140007329:	mov    rsi,QWORD PTR [rsp+0x40]
   14000732e:	mov    rdi,QWORD PTR [rsp+0x48]
   140007333:	add    rsp,0x20
   140007337:	pop    r14
   140007339:	ret    
   14000733a:	int3   
   14000733b:	int3   
   14000733c:	mov    QWORD PTR [rsp+0x8],rbx
   140007341:	mov    QWORD PTR [rsp+0x10],rsi
   140007346:	push   rdi
   140007347:	sub    rsp,0x20
   14000734b:	mov    rsi,rdx
   14000734e:	mov    rbx,rcx
   140007351:	cmp    rcx,rdx
   140007354:	je     0x140007376
   140007356:	mov    rdi,QWORD PTR [rbx]
   140007359:	test   rdi,rdi
   14000735c:	je     0x14000736d
   14000735e:	mov    rcx,rdi
   140007361:	call   QWORD PTR [rip+0xcef1]        # 0x140014258
   140007367:	call   rdi
   140007369:	test   eax,eax
   14000736b:	jne    0x140007378
   14000736d:	add    rbx,0x8
   140007371:	cmp    rbx,rsi
   140007374:	jmp    0x140007354
   140007376:	xor    eax,eax
   140007378:	mov    rbx,QWORD PTR [rsp+0x30]
   14000737d:	mov    rsi,QWORD PTR [rsp+0x38]
   140007382:	add    rsp,0x20
   140007386:	pop    rdi
   140007387:	ret    
   140007388:	sub    rsp,0x28
   14000738c:	lea    eax,[rcx-0x4000]
   140007392:	test   eax,0xffff3fff
   140007397:	jne    0x1400073ab
   140007399:	cmp    ecx,0xc000
   14000739f:	je     0x1400073ab
   1400073a1:	xchg   DWORD PTR [rip+0x1823d],ecx        # 0x14001f5e4
   1400073a7:	xor    eax,eax
   1400073a9:	jmp    0x1400073c0
   1400073ab:	call   0x140008500
   1400073b0:	mov    DWORD PTR [rax],0x16
   1400073b6:	call   0x1400083e0
   1400073bb:	mov    eax,0x16
   1400073c0:	add    rsp,0x28
   1400073c4:	ret    
   1400073c5:	int3   
   1400073c6:	int3   
   1400073c7:	int3   
   1400073c8:	sub    rsp,0x28
   1400073cc:	call   QWORD PTR [rip+0xcd8e]        # 0x140014160
   1400073d2:	mov    QWORD PTR [rip+0x17987],rax        # 0x14001ed60
   1400073d9:	call   QWORD PTR [rip+0xcd89]        # 0x140014168
   1400073df:	mov    QWORD PTR [rip+0x17982],rax        # 0x14001ed68
   1400073e6:	mov    al,0x1
   1400073e8:	add    rsp,0x28
   1400073ec:	ret    
   1400073ed:	int3   
   1400073ee:	int3   
   1400073ef:	int3   
   1400073f0:	lea    rax,[rip+0x17951]        # 0x14001ed48
   1400073f7:	ret    
   1400073f8:	lea    rax,[rip+0x17951]        # 0x14001ed50
   1400073ff:	ret    
   140007400:	mov    eax,0x1
   140007405:	xchg   DWORD PTR [rip+0x1796d],eax        # 0x14001ed78
   14000740b:	ret    
   14000740c:	rex push rdi
   14000740e:	sub    rsp,0x20
   140007412:	lea    rdi,[rip+0x16d97]        # 0x14001e1b0
   140007419:	cmp    QWORD PTR [rip+0x17f80],rdi        # 0x14001f3a0
   140007420:	je     0x14000744d
   140007422:	mov    ecx,0x4
   140007427:	call   0x14000ad90
   14000742c:	nop
   14000742d:	mov    rdx,rdi
   140007430:	lea    rcx,[rip+0x17f69]        # 0x14001f3a0
   140007437:	call   0x14000d898
   14000743c:	mov    QWORD PTR [rip+0x17f5d],rax        # 0x14001f3a0
   140007443:	mov    ecx,0x4
   140007448:	call   0x14000ade4
   14000744d:	add    rsp,0x20
   140007451:	pop    rdi
   140007452:	ret    
   140007453:	int3   
   140007454:	rex push rbx
   140007456:	sub    rsp,0x20
   14000745a:	mov    ebx,ecx
   14000745c:	call   0x140009d6c
   140007461:	mov    r8d,DWORD PTR [rax+0x3a8]
   140007468:	mov    edx,r8d
   14000746b:	and    dl,0x2
   14000746e:	neg    dl
   140007470:	sbb    ecx,ecx
   140007472:	cmp    ebx,0xffffffff
   140007475:	je     0x1400074ad
   140007477:	test   ebx,ebx
   140007479:	je     0x1400074b4
   14000747b:	cmp    ebx,0x1
   14000747e:	je     0x1400074a0
   140007480:	cmp    ebx,0x2
   140007483:	je     0x14000749a
   140007485:	call   0x140008500
   14000748a:	mov    DWORD PTR [rax],0x16
   140007490:	call   0x1400083e0
   140007495:	or     eax,0xffffffff
   140007498:	jmp    0x1400074b7
   14000749a:	and    r8d,0xfffffffd
   14000749e:	jmp    0x1400074a4
   1400074a0:	or     r8d,0x2
   1400074a4:	mov    DWORD PTR [rax+0x3a8],r8d
   1400074ab:	jmp    0x1400074b4
   1400074ad:	or     DWORD PTR [rip+0x1744c],0xffffffff        # 0x14001e900
   1400074b4:	lea    eax,[rcx+0x2]
   1400074b7:	add    rsp,0x20
   1400074bb:	pop    rbx
   1400074bc:	ret    
   1400074bd:	int3   
   1400074be:	int3   
   1400074bf:	int3   
   1400074c0:	mov    eax,DWORD PTR [rip+0x178b6]        # 0x14001ed7c
   1400074c6:	ret    
   1400074c7:	int3   
   1400074c8:	sub    rsp,0x28
   1400074cc:	cmp    ecx,0x1
   1400074cf:	jbe    0x1400074e6
   1400074d1:	call   0x140008500
   1400074d6:	mov    DWORD PTR [rax],0x16
   1400074dc:	call   0x1400083e0
   1400074e1:	or     eax,0xffffffff
   1400074e4:	jmp    0x1400074ee
   1400074e6:	xchg   DWORD PTR [rip+0x17890],ecx        # 0x14001ed7c
   1400074ec:	mov    eax,ecx
   1400074ee:	add    rsp,0x28
   1400074f2:	ret    
   1400074f3:	int3   
   1400074f4:	lea    rax,[rip+0x17885]        # 0x14001ed80
   1400074fb:	ret    
   1400074fc:	mov    QWORD PTR [rip+0x17885],rcx        # 0x14001ed88
   140007503:	ret    
   140007504:	mov    QWORD PTR [rsp+0x8],rbx
   140007509:	push   rdi
   14000750a:	sub    rsp,0x20
   14000750e:	mov    rdi,rcx
   140007511:	call   0x140007544
   140007516:	mov    rbx,rax
   140007519:	test   rax,rax
   14000751c:	je     0x140007537
   14000751e:	mov    rcx,rax
   140007521:	call   QWORD PTR [rip+0xcd31]        # 0x140014258
   140007527:	mov    rcx,rdi
   14000752a:	call   rbx
   14000752c:	test   eax,eax
   14000752e:	je     0x140007537
   140007530:	mov    eax,0x1
   140007535:	jmp    0x140007539
   140007537:	xor    eax,eax
   140007539:	mov    rbx,QWORD PTR [rsp+0x30]
   14000753e:	add    rsp,0x20
   140007542:	pop    rdi
   140007543:	ret    
   140007544:	rex push rbx
   140007546:	sub    rsp,0x20
   14000754a:	xor    ecx,ecx
   14000754c:	call   0x14000ad90
   140007551:	nop
   140007552:	mov    rbx,QWORD PTR [rip+0x16abf]        # 0x14001e018
   140007559:	mov    ecx,ebx
   14000755b:	and    ecx,0x3f
   14000755e:	xor    rbx,QWORD PTR [rip+0x17823]        # 0x14001ed88
   140007565:	ror    rbx,cl
   140007568:	xor    ecx,ecx
   14000756a:	call   0x14000ade4
   14000756f:	mov    rax,rbx
   140007572:	add    rsp,0x20
   140007576:	pop    rbx
   140007577:	ret    
   140007578:	mov    QWORD PTR [rsp+0x8],rbx
   14000757d:	mov    QWORD PTR [rsp+0x20],r9
   140007582:	push   rdi
   140007583:	sub    rsp,0x20
   140007587:	mov    rbx,r9
   14000758a:	mov    rdi,r8
   14000758d:	mov    ecx,DWORD PTR [rdx]
   14000758f:	call   0x14000ad90
   140007594:	nop
   140007595:	mov    rcx,rdi
   140007598:	call   0x140007754
   14000759d:	mov    edi,eax
   14000759f:	mov    ecx,DWORD PTR [rbx]
   1400075a1:	call   0x14000ade4
   1400075a6:	mov    eax,edi
   1400075a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400075ad:	add    rsp,0x20
   1400075b1:	pop    rdi
   1400075b2:	ret    
   1400075b3:	int3   
   1400075b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400075b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400075be:	mov    QWORD PTR [rsp+0x20],r9
   1400075c3:	push   rdi
   1400075c4:	push   r12
   1400075c6:	push   r13
   1400075c8:	push   r14
   1400075ca:	push   r15
   1400075cc:	sub    rsp,0x40
   1400075d0:	mov    rdi,r9
   1400075d3:	mov    r15,r8
   1400075d6:	mov    ecx,DWORD PTR [rdx]
   1400075d8:	call   0x14000ad90
   1400075dd:	nop
   1400075de:	mov    rax,QWORD PTR [r15]
   1400075e1:	mov    rdx,QWORD PTR [rax]
   1400075e4:	test   rdx,rdx
   1400075e7:	jne    0x1400075f2
   1400075e9:	or     rbx,0xffffffffffffffff
   1400075ed:	jmp    0x140007732
   1400075f2:	mov    rsi,QWORD PTR [rip+0x16a1f]        # 0x14001e018
   1400075f9:	mov    r8d,esi
   1400075fc:	and    r8d,0x3f
   140007600:	mov    rdi,rsi
   140007603:	xor    rdi,QWORD PTR [rdx]
   140007606:	mov    ecx,r8d
   140007609:	ror    rdi,cl
   14000760c:	mov    QWORD PTR [rsp+0x30],rdi
   140007611:	mov    rbx,rsi
   140007614:	xor    rbx,QWORD PTR [rdx+0x8]
   140007618:	ror    rbx,cl
   14000761b:	mov    QWORD PTR [rsp+0x20],rbx
   140007620:	lea    rax,[rdi-0x1]
   140007624:	cmp    rax,0xfffffffffffffffd
   140007628:	ja     0x140007728
   14000762e:	mov    r12,rdi
   140007631:	mov    QWORD PTR [rsp+0x28],rdi
   140007636:	mov    r14,rbx
   140007639:	mov    QWORD PTR [rsp+0x38],rbx
   14000763e:	mov    r13d,0x40
   140007644:	mov    ecx,r13d
   140007647:	sub    ecx,r8d
   14000764a:	xor    eax,eax
   14000764c:	ror    rax,cl
   14000764f:	xor    rax,rsi
   140007652:	sub    rbx,0x8
   140007656:	mov    QWORD PTR [rsp+0x20],rbx
   14000765b:	cmp    rbx,rdi
   14000765e:	jb     0x14000766c
   140007660:	cmp    QWORD PTR [rbx],rax
   140007663:	jne    0x140007667
   140007665:	jmp    0x140007652
   140007667:	cmp    rbx,rdi
   14000766a:	jae    0x1400076b6
   14000766c:	or     rbx,0xffffffffffffffff
   140007670:	cmp    rdi,rbx
   140007673:	je     0x140007684
   140007675:	mov    rcx,rdi
   140007678:	call   0x140007cc4
   14000767d:	mov    rsi,QWORD PTR [rip+0x16994]        # 0x14001e018
   140007684:	mov    eax,esi
   140007686:	and    eax,0x3f
   140007689:	sub    r13d,eax
   14000768c:	mov    ecx,r13d
   14000768f:	xor    edx,edx
   140007691:	ror    rdx,cl
   140007694:	xor    rdx,rsi
   140007697:	mov    rax,QWORD PTR [r15]
   14000769a:	mov    rcx,QWORD PTR [rax]
   14000769d:	mov    QWORD PTR [rcx],rdx
   1400076a0:	mov    rax,QWORD PTR [r15]
   1400076a3:	mov    rcx,QWORD PTR [rax]
   1400076a6:	mov    QWORD PTR [rcx+0x8],rdx
   1400076aa:	mov    rax,QWORD PTR [r15]
   1400076ad:	mov    rcx,QWORD PTR [rax]
   1400076b0:	mov    QWORD PTR [rcx+0x10],rdx
   1400076b4:	jmp    0x140007728
   1400076b6:	mov    ecx,esi
   1400076b8:	and    ecx,0x3f
   1400076bb:	xor    rsi,QWORD PTR [rbx]
   1400076be:	ror    rsi,cl
   1400076c1:	mov    QWORD PTR [rbx],rax
   1400076c4:	mov    rcx,rsi
   1400076c7:	call   QWORD PTR [rip+0xcb8b]        # 0x140014258
   1400076cd:	call   rsi
   1400076cf:	mov    rax,QWORD PTR [r15]
   1400076d2:	mov    rdx,QWORD PTR [rax]
   1400076d5:	mov    rsi,QWORD PTR [rip+0x1693c]        # 0x14001e018
   1400076dc:	mov    r8d,esi
   1400076df:	and    r8d,0x3f
   1400076e3:	mov    r9,rsi
   1400076e6:	xor    r9,QWORD PTR [rdx]
   1400076e9:	mov    ecx,r8d
   1400076ec:	ror    r9,cl
   1400076ef:	mov    rax,QWORD PTR [rdx+0x8]
   1400076f3:	xor    rax,rsi
   1400076f6:	ror    rax,cl
   1400076f9:	cmp    r9,r12
   1400076fc:	jne    0x140007703
   1400076fe:	cmp    rax,r14
   140007701:	je     0x140007723
   140007703:	mov    r12,r9
   140007706:	mov    QWORD PTR [rsp+0x28],r9
   14000770b:	mov    rdi,r9
   14000770e:	mov    QWORD PTR [rsp+0x30],r9
   140007713:	mov    r14,rax
   140007716:	mov    QWORD PTR [rsp+0x38],rax
   14000771b:	mov    rbx,rax
   14000771e:	mov    QWORD PTR [rsp+0x20],rax
   140007723:	jmp    0x140007644
   140007728:	mov    rdi,QWORD PTR [rsp+0x88]
   140007730:	xor    ebx,ebx
   140007732:	mov    ecx,DWORD PTR [rdi]
   140007734:	call   0x14000ade4
   140007739:	mov    eax,ebx
   14000773b:	mov    rbx,QWORD PTR [rsp+0x70]
   140007740:	mov    rsi,QWORD PTR [rsp+0x78]
   140007745:	add    rsp,0x40
   140007749:	pop    r15
   14000774b:	pop    r14
   14000774d:	pop    r13
   14000774f:	pop    r12
   140007751:	pop    rdi
   140007752:	ret    
   140007753:	int3   
   140007754:	mov    rax,rsp
   140007757:	mov    QWORD PTR [rax+0x8],rbx
   14000775b:	mov    QWORD PTR [rax+0x10],rbp
   14000775f:	mov    QWORD PTR [rax+0x18],rsi
   140007763:	mov    QWORD PTR [rax+0x20],rdi
   140007767:	push   r12
   140007769:	push   r14
   14000776b:	push   r15
   14000776d:	sub    rsp,0x20
   140007771:	mov    rax,QWORD PTR [rcx]
   140007774:	xor    esi,esi
   140007776:	mov    r15,rcx
   140007779:	mov    rbx,QWORD PTR [rax]
   14000777c:	test   rbx,rbx
   14000777f:	jne    0x140007789
   140007781:	or     eax,0xffffffff
   140007784:	jmp    0x14000790f
   140007789:	mov    r8,QWORD PTR [rip+0x16888]        # 0x14001e018
   140007790:	mov    r12d,0x40
   140007796:	mov    rbp,QWORD PTR [rbx]
   140007799:	mov    ecx,r8d
   14000779c:	mov    r9,QWORD PTR [rbx+0x8]
   1400077a0:	and    ecx,0x3f
   1400077a3:	mov    rbx,QWORD PTR [rbx+0x10]
   1400077a7:	xor    rbp,r8
   1400077aa:	xor    r9,r8
   1400077ad:	ror    rbp,cl
   1400077b0:	xor    rbx,r8
   1400077b3:	ror    r9,cl
   1400077b6:	ror    rbx,cl
   1400077b9:	cmp    r9,rbx
   1400077bc:	jne    0x140007889
   1400077c2:	sub    rbx,rbp
   1400077c5:	mov    eax,0x200
   1400077ca:	sar    rbx,0x3
   1400077ce:	cmp    rbx,rax
   1400077d1:	mov    rdi,rbx
   1400077d4:	cmova  rdi,rax
   1400077d8:	lea    eax,[r12-0x20]
   1400077dd:	add    rdi,rbx
   1400077e0:	cmove  rdi,rax
   1400077e4:	cmp    rdi,rbx
   1400077e7:	jb     0x140007808
   1400077e9:	lea    r8d,[r12-0x38]
   1400077ee:	mov    rdx,rdi
   1400077f1:	mov    rcx,rbp
   1400077f4:	call   0x14000d900
   1400077f9:	xor    ecx,ecx
   1400077fb:	mov    r14,rax
   1400077fe:	call   0x140007cc4
   140007803:	test   r14,r14
   140007806:	jne    0x140007830
   140007808:	lea    rdi,[rbx+0x4]
   14000780c:	mov    r8d,0x8
   140007812:	mov    rdx,rdi
   140007815:	mov    rcx,rbp
   140007818:	call   0x14000d900
   14000781d:	xor    ecx,ecx
   14000781f:	mov    r14,rax
   140007822:	call   0x140007cc4
   140007827:	test   r14,r14
   14000782a:	je     0x140007781
   140007830:	mov    r8,QWORD PTR [rip+0x167e1]        # 0x14001e018
   140007837:	lea    r9,[r14+rbx*8]
   14000783b:	mov    eax,r8d
   14000783e:	lea    rbx,[r14+rdi*8]
   140007842:	and    eax,0x3f
   140007845:	mov    ecx,r12d
   140007848:	sub    ecx,eax
   14000784a:	mov    rdx,rsi
   14000784d:	ror    rdx,cl
   140007850:	mov    rax,rbx
   140007853:	sub    rax,r9
   140007856:	xor    rdx,r8
   140007859:	add    rax,0x7
   14000785d:	mov    rbp,r14
   140007860:	shr    rax,0x3
   140007864:	mov    rcx,r9
   140007867:	cmp    r9,rbx
   14000786a:	cmova  rax,rsi
   14000786e:	test   rax,rax
   140007871:	je     0x140007889
   140007873:	inc    rsi
   140007876:	mov    QWORD PTR [rcx],rdx
   140007879:	lea    rcx,[rcx+0x8]
   14000787d:	cmp    rsi,rax
   140007880:	jne    0x140007873
   140007882:	mov    r8,QWORD PTR [rip+0x1678f]        # 0x14001e018
   140007889:	mov    eax,r8d
   14000788c:	mov    ecx,r12d
   14000788f:	and    eax,0x3f
   140007892:	sub    ecx,eax
   140007894:	mov    rax,QWORD PTR [r15+0x8]
   140007898:	mov    rdx,QWORD PTR [rax]
   14000789b:	mov    eax,r12d
   14000789e:	ror    rdx,cl
   1400078a1:	xor    rdx,r8
   1400078a4:	lea    r8,[r9+0x8]
   1400078a8:	mov    QWORD PTR [r9],rdx
   1400078ab:	mov    rdx,QWORD PTR [rip+0x16766]        # 0x14001e018
   1400078b2:	mov    ecx,edx
   1400078b4:	and    ecx,0x3f
   1400078b7:	sub    eax,ecx
   1400078b9:	mov    cl,al
   1400078bb:	mov    rax,QWORD PTR [r15]
   1400078be:	ror    rbp,cl
   1400078c1:	xor    rbp,rdx
   1400078c4:	mov    rcx,QWORD PTR [rax]
   1400078c7:	mov    QWORD PTR [rcx],rbp
   1400078ca:	mov    ecx,r12d
   1400078cd:	mov    rdx,QWORD PTR [rip+0x16744]        # 0x14001e018
   1400078d4:	mov    eax,edx
   1400078d6:	and    eax,0x3f
   1400078d9:	sub    ecx,eax
   1400078db:	mov    rax,QWORD PTR [r15]
   1400078de:	ror    r8,cl
   1400078e1:	xor    r8,rdx
   1400078e4:	mov    rdx,QWORD PTR [rax]
   1400078e7:	mov    QWORD PTR [rdx+0x8],r8
   1400078eb:	mov    rdx,QWORD PTR [rip+0x16726]        # 0x14001e018
   1400078f2:	mov    eax,edx
   1400078f4:	and    eax,0x3f
   1400078f7:	sub    r12d,eax
   1400078fa:	mov    rax,QWORD PTR [r15]
   1400078fd:	mov    cl,r12b
   140007900:	ror    rbx,cl
   140007903:	xor    rbx,rdx
   140007906:	mov    rcx,QWORD PTR [rax]
   140007909:	xor    eax,eax
   14000790b:	mov    QWORD PTR [rcx+0x10],rbx
   14000790f:	mov    rbx,QWORD PTR [rsp+0x40]
   140007914:	mov    rbp,QWORD PTR [rsp+0x48]
   140007919:	mov    rsi,QWORD PTR [rsp+0x50]
   14000791e:	mov    rdi,QWORD PTR [rsp+0x58]
   140007923:	add    rsp,0x20
   140007927:	pop    r15
   140007929:	pop    r14
   14000792b:	pop    r12
   14000792d:	ret    
   14000792e:	int3   
   14000792f:	int3   
   140007930:	mov    rdx,rcx
   140007933:	lea    rcx,[rip+0x17456]        # 0x14001ed90
   14000793a:	jmp    0x1400079bc
   14000793f:	int3   
   140007940:	mov    r11,rsp
   140007943:	mov    QWORD PTR [r11+0x8],rcx
   140007947:	sub    rsp,0x38
   14000794b:	lea    rax,[r11+0x8]
   14000794f:	mov    QWORD PTR [r11-0x18],rax
   140007953:	lea    r9,[r11+0x18]
   140007957:	mov    eax,0x2
   14000795c:	lea    r8,[r11-0x18]
   140007960:	lea    rdx,[r11+0x20]
   140007964:	mov    DWORD PTR [rsp+0x50],eax
   140007968:	lea    rcx,[r11+0x10]
   14000796c:	mov    DWORD PTR [rsp+0x58],eax
   140007970:	call   0x1400075b4
   140007975:	add    rsp,0x38
   140007979:	ret    
   14000797a:	int3   
   14000797b:	int3   
   14000797c:	xor    r9d,r9d
   14000797f:	mov    r8,rcx
   140007982:	test   rcx,rcx
   140007985:	jne    0x14000798b
   140007987:	or     eax,0xffffffff
   14000798a:	ret    
   14000798b:	mov    rax,QWORD PTR [rcx+0x10]
   14000798f:	cmp    QWORD PTR [rcx],rax
   140007992:	jne    0x1400079b8
   140007994:	mov    rdx,QWORD PTR [rip+0x1667d]        # 0x14001e018
   14000799b:	mov    ecx,0x40
   1400079a0:	mov    eax,edx
   1400079a2:	and    eax,0x3f
   1400079a5:	sub    ecx,eax
   1400079a7:	ror    r9,cl
   1400079aa:	xor    r9,rdx
   1400079ad:	mov    QWORD PTR [r8],r9
   1400079b0:	mov    QWORD PTR [r8+0x8],r9
   1400079b4:	mov    QWORD PTR [r8+0x10],r9
   1400079b8:	xor    eax,eax
   1400079ba:	ret    
   1400079bb:	int3   
   1400079bc:	mov    QWORD PTR [rsp+0x10],rdx
   1400079c1:	mov    QWORD PTR [rsp+0x8],rcx
   1400079c6:	push   rbp
   1400079c7:	mov    rbp,rsp
   1400079ca:	sub    rsp,0x40
   1400079ce:	lea    rax,[rbp+0x10]
   1400079d2:	mov    QWORD PTR [rbp-0x18],rax
   1400079d6:	lea    r9,[rbp+0x28]
   1400079da:	lea    rax,[rbp+0x18]
   1400079de:	mov    QWORD PTR [rbp-0x10],rax
   1400079e2:	lea    r8,[rbp-0x18]
   1400079e6:	mov    eax,0x2
   1400079eb:	lea    rdx,[rbp-0x20]
   1400079ef:	lea    rcx,[rbp+0x20]
   1400079f3:	mov    DWORD PTR [rbp+0x28],eax
   1400079f6:	mov    DWORD PTR [rbp-0x20],eax
   1400079f9:	call   0x140007578
   1400079fe:	add    rsp,0x40
   140007a02:	pop    rbp
   140007a03:	ret    
   140007a04:	lea    rax,[rip+0x167a5]        # 0x14001e1b0
   140007a0b:	mov    QWORD PTR [rip+0x1798e],rax        # 0x14001f3a0
   140007a12:	mov    al,0x1
   140007a14:	ret    
   140007a15:	int3   
   140007a16:	int3   
   140007a17:	int3   
   140007a18:	sub    rsp,0x28
   140007a1c:	lea    rcx,[rip+0x1736d]        # 0x14001ed90
   140007a23:	call   0x14000797c
   140007a28:	lea    rcx,[rip+0x17379]        # 0x14001eda8
   140007a2f:	call   0x14000797c
   140007a34:	mov    al,0x1
   140007a36:	add    rsp,0x28
   140007a3a:	ret    
   140007a3b:	int3   
   140007a3c:	mov    al,0x1
   140007a3e:	ret    
   140007a3f:	int3   
   140007a40:	sub    rsp,0x28
   140007a44:	call   0x140007260
   140007a49:	mov    al,0x1
   140007a4b:	add    rsp,0x28
   140007a4f:	ret    
   140007a50:	rex push rbx
   140007a52:	sub    rsp,0x20
   140007a56:	mov    rdx,QWORD PTR [rip+0x165bb]        # 0x14001e018
   140007a5d:	mov    ecx,0x40
   140007a62:	mov    eax,edx
   140007a64:	xor    ebx,ebx
   140007a66:	and    eax,0x3f
   140007a69:	sub    ecx,eax
   140007a6b:	ror    rbx,cl
   140007a6e:	xor    rbx,rdx
   140007a71:	mov    rcx,rbx
   140007a74:	call   0x140008330
   140007a79:	mov    rcx,rbx
   140007a7c:	call   0x1400074fc
   140007a81:	mov    rcx,rbx
   140007a84:	call   0x14000db24
   140007a89:	mov    rcx,rbx
   140007a8c:	call   0x1400068dc
   140007a91:	mov    rcx,rbx
   140007a94:	call   0x140005db4
   140007a99:	mov    al,0x1
   140007a9b:	add    rsp,0x20
   140007a9f:	pop    rbx
   140007aa0:	ret    
   140007aa1:	int3   
   140007aa2:	int3   
   140007aa3:	int3   
   140007aa4:	xor    ecx,ecx
   140007aa6:	jmp    0x140002c74
   140007aab:	int3   
   140007aac:	rex push rbx
   140007aae:	sub    rsp,0x20
   140007ab2:	mov    rcx,QWORD PTR [rip+0x16a8f]        # 0x14001e548
   140007ab9:	or     eax,0xffffffff
   140007abc:	lock xadd DWORD PTR [rcx],eax
   140007ac0:	cmp    eax,0x1
   140007ac3:	jne    0x140007ae4
   140007ac5:	mov    rcx,QWORD PTR [rip+0x16a7c]        # 0x14001e548
   140007acc:	lea    rbx,[rip+0x1684d]        # 0x14001e320
   140007ad3:	cmp    rcx,rbx
   140007ad6:	je     0x140007ae4
   140007ad8:	call   0x140007cc4
   140007add:	mov    QWORD PTR [rip+0x16a64],rbx        # 0x14001e548
   140007ae4:	mov    rcx,QWORD PTR [rip+0x178a5]        # 0x14001f390
   140007aeb:	call   0x140007cc4
   140007af0:	mov    rcx,QWORD PTR [rip+0x178a1]        # 0x14001f398
   140007af7:	xor    ebx,ebx
   140007af9:	mov    QWORD PTR [rip+0x17890],rbx        # 0x14001f390
   140007b00:	call   0x140007cc4
   140007b05:	mov    rcx,QWORD PTR [rip+0x17244]        # 0x14001ed50
   140007b0c:	mov    QWORD PTR [rip+0x17885],rbx        # 0x14001f398
   140007b13:	call   0x140007cc4
   140007b18:	mov    rcx,QWORD PTR [rip+0x17239]        # 0x14001ed58
   140007b1f:	mov    QWORD PTR [rip+0x1722a],rbx        # 0x14001ed50
   140007b26:	call   0x140007cc4
   140007b2b:	mov    al,0x1
   140007b2d:	mov    QWORD PTR [rip+0x17224],rbx        # 0x14001ed58
   140007b34:	add    rsp,0x20
   140007b38:	pop    rbx
   140007b39:	ret    
   140007b3a:	int3   
   140007b3b:	int3   
   140007b3c:	lea    rdx,[rip+0xd85d]        # 0x1400153a0
   140007b43:	lea    rcx,[rip+0xd766]        # 0x1400152b0
   140007b4a:	jmp    0x14000d9c8
   140007b4f:	int3   
   140007b50:	lea    rdx,[rip+0xd849]        # 0x1400153a0
   140007b57:	lea    rcx,[rip+0xd752]        # 0x1400152b0
   140007b5e:	jmp    0x14000da5c
   140007b63:	int3   
   140007b64:	rex push rbx
   140007b66:	sub    rsp,0x20
   140007b6a:	call   0x140009d6c
   140007b6f:	mov    rbx,QWORD PTR [rax+0x18]
   140007b73:	test   rbx,rbx
   140007b76:	je     0x140007b85
   140007b78:	mov    rcx,rbx
   140007b7b:	call   QWORD PTR [rip+0xc6d7]        # 0x140014258
   140007b81:	call   rbx
   140007b83:	jmp    0x140007b85
   140007b85:	call   0x140007dc4
   140007b8a:	nop
   140007b8b:	int3   
   140007b8c:	mov    r9,rcx
   140007b8f:	movzx  r8d,BYTE PTR [r9]
   140007b93:	inc    r9
   140007b96:	lea    eax,[r8-0x41]
   140007b9a:	cmp    eax,0x19
   140007b9d:	ja     0x140007ba3
   140007b9f:	add    r8d,0x20
   140007ba3:	movzx  ecx,BYTE PTR [rdx]
   140007ba6:	inc    rdx
   140007ba9:	lea    eax,[rcx-0x41]
   140007bac:	cmp    eax,0x19
   140007baf:	ja     0x140007bb4
   140007bb1:	add    ecx,0x20
   140007bb4:	test   r8d,r8d
   140007bb7:	je     0x140007bbe
   140007bb9:	cmp    r8d,ecx
   140007bbc:	je     0x140007b8f
   140007bbe:	sub    r8d,ecx
   140007bc1:	mov    eax,r8d
   140007bc4:	ret    
   140007bc5:	int3   
   140007bc6:	int3   
   140007bc7:	int3   
   140007bc8:	sub    rsp,0x28
   140007bcc:	mov    eax,DWORD PTR [rip+0x171a6]        # 0x14001ed78
   140007bd2:	test   eax,eax
   140007bd4:	jne    0x140007c03
   140007bd6:	test   rcx,rcx
   140007bd9:	jne    0x140007bf5
   140007bdb:	call   0x140008500
   140007be0:	mov    DWORD PTR [rax],0x16
   140007be6:	call   0x1400083e0
   140007beb:	mov    eax,0x7fffffff
   140007bf0:	add    rsp,0x28
   140007bf4:	ret    
   140007bf5:	test   rdx,rdx
   140007bf8:	je     0x140007bdb
   140007bfa:	add    rsp,0x28
   140007bfe:	jmp    0x140007b8c
   140007c03:	xor    r8d,r8d
   140007c06:	add    rsp,0x28
   140007c0a:	jmp    0x140007c10
   140007c0f:	int3   
   140007c10:	mov    QWORD PTR [rsp+0x8],rbx
   140007c15:	mov    QWORD PTR [rsp+0x10],rsi
   140007c1a:	push   rdi
   140007c1b:	sub    rsp,0x40
   140007c1f:	mov    rdi,rdx
   140007c22:	mov    rsi,rcx
   140007c25:	mov    rdx,r8
   140007c28:	lea    rcx,[rsp+0x20]
   140007c2d:	call   0x140003ab0
   140007c32:	test   rsi,rsi
   140007c35:	je     0x140007c3c
   140007c37:	test   rdi,rdi
   140007c3a:	jne    0x140007c53
   140007c3c:	call   0x140008500
   140007c41:	mov    DWORD PTR [rax],0x16
   140007c47:	call   0x1400083e0
   140007c4c:	mov    ebx,0x7fffffff
   140007c51:	jmp    0x140007c9e
   140007c53:	mov    rax,QWORD PTR [rsp+0x28]
   140007c58:	cmp    QWORD PTR [rax+0x138],0x0
   140007c60:	jne    0x140007c71
   140007c62:	mov    rdx,rdi
   140007c65:	mov    rcx,rsi
   140007c68:	call   0x140007b8c
   140007c6d:	mov    ebx,eax
   140007c6f:	jmp    0x140007c9e
   140007c71:	sub    rsi,rdi
   140007c74:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140007c78:	lea    rdx,[rsp+0x28]
   140007c7d:	call   0x140009210
   140007c82:	movzx  ecx,BYTE PTR [rdi]
   140007c85:	lea    rdx,[rsp+0x28]
   140007c8a:	mov    ebx,eax
   140007c8c:	call   0x140009210
   140007c91:	inc    rdi
   140007c94:	test   ebx,ebx
   140007c96:	je     0x140007c9c
   140007c98:	cmp    ebx,eax
   140007c9a:	je     0x140007c74
   140007c9c:	sub    ebx,eax
   140007c9e:	cmp    BYTE PTR [rsp+0x38],0x0
   140007ca3:	je     0x140007cb1
   140007ca5:	mov    rcx,QWORD PTR [rsp+0x20]
   140007caa:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140007cb1:	mov    rsi,QWORD PTR [rsp+0x58]
   140007cb6:	mov    eax,ebx
   140007cb8:	mov    rbx,QWORD PTR [rsp+0x50]
   140007cbd:	add    rsp,0x40
   140007cc1:	pop    rdi
   140007cc2:	ret    
   140007cc3:	int3   
   140007cc4:	test   rcx,rcx
   140007cc7:	je     0x140007d00
   140007cc9:	push   rbx
   140007cca:	sub    rsp,0x20
   140007cce:	mov    r8,rcx
   140007cd1:	xor    edx,edx
   140007cd3:	mov    rcx,QWORD PTR [rip+0x17916]        # 0x14001f5f0
   140007cda:	call   QWORD PTR [rip+0xc498]        # 0x140014178
   140007ce0:	test   eax,eax
   140007ce2:	jne    0x140007cfb
   140007ce4:	call   0x140008500
   140007ce9:	mov    rbx,rax
   140007cec:	call   QWORD PTR [rip+0xc326]        # 0x140014018
   140007cf2:	mov    ecx,eax
   140007cf4:	call   0x140008448
   140007cf9:	mov    DWORD PTR [rbx],eax
   140007cfb:	add    rsp,0x20
   140007cff:	pop    rbx
   140007d00:	ret    
   140007d01:	int3   
   140007d02:	int3   
   140007d03:	int3   
   140007d04:	rex push rbx
   140007d06:	sub    rsp,0x20
   140007d0a:	mov    rbx,rcx
   140007d0d:	cmp    rcx,0xffffffffffffffe0
   140007d11:	ja     0x140007d4f
   140007d13:	test   rcx,rcx
   140007d16:	mov    eax,0x1
   140007d1b:	cmove  rbx,rax
   140007d1f:	jmp    0x140007d36
   140007d21:	call   0x1400074c0
   140007d26:	test   eax,eax
   140007d28:	je     0x140007d4f
   140007d2a:	mov    rcx,rbx
   140007d2d:	call   0x140007504
   140007d32:	test   eax,eax
   140007d34:	je     0x140007d4f
   140007d36:	mov    rcx,QWORD PTR [rip+0x178b3]        # 0x14001f5f0
   140007d3d:	mov    r8,rbx
   140007d40:	xor    edx,edx
   140007d42:	call   QWORD PTR [rip+0xc438]        # 0x140014180
   140007d48:	test   rax,rax
   140007d4b:	je     0x140007d21
   140007d4d:	jmp    0x140007d5c
   140007d4f:	call   0x140008500
   140007d54:	mov    DWORD PTR [rax],0xc
   140007d5a:	xor    eax,eax
   140007d5c:	add    rsp,0x20
   140007d60:	pop    rbx
   140007d61:	ret    
   140007d62:	int3   
   140007d63:	int3   
   140007d64:	rex push rbx
   140007d66:	sub    rsp,0x20
   140007d6a:	xor    ebx,ebx
   140007d6c:	test   rcx,rcx
   140007d6f:	je     0x140007d7d
   140007d71:	test   rdx,rdx
   140007d74:	je     0x140007d7d
   140007d76:	test   r8,r8
   140007d79:	jne    0x140007d96
   140007d7b:	mov    BYTE PTR [rcx],bl
   140007d7d:	call   0x140008500
   140007d82:	mov    ebx,0x16
   140007d87:	mov    DWORD PTR [rax],ebx
   140007d89:	call   0x1400083e0
   140007d8e:	mov    eax,ebx
   140007d90:	add    rsp,0x20
   140007d94:	pop    rbx
   140007d95:	ret    
   140007d96:	mov    r9,rcx
   140007d99:	sub    r8,rcx
   140007d9c:	mov    al,BYTE PTR [r8+r9*1]
   140007da0:	mov    BYTE PTR [r9],al
   140007da3:	inc    r9
   140007da6:	test   al,al
   140007da8:	je     0x140007db0
   140007daa:	sub    rdx,0x1
   140007dae:	jne    0x140007d9c
   140007db0:	test   rdx,rdx
   140007db3:	jne    0x140007d8e
   140007db5:	mov    BYTE PTR [rcx],bl
   140007db7:	call   0x140008500
   140007dbc:	mov    ebx,0x22
   140007dc1:	jmp    0x140007d87
   140007dc3:	int3   
   140007dc4:	sub    rsp,0x28
   140007dc8:	call   0x14000daf4
   140007dcd:	test   rax,rax
   140007dd0:	je     0x140007ddc
   140007dd2:	mov    ecx,0x16
   140007dd7:	call   0x14000db44
   140007ddc:	test   BYTE PTR [rip+0x1636d],0x2        # 0x14001e150
   140007de3:	je     0x140007e0e
   140007de5:	mov    ecx,0x17
   140007dea:	call   0x140002870
   140007def:	test   eax,eax
   140007df1:	je     0x140007dfa
   140007df3:	mov    ecx,0x7
   140007df8:	int    0x29
   140007dfa:	mov    r8d,0x1
   140007e00:	mov    edx,0x40000015
   140007e05:	lea    ecx,[r8+0x2]
   140007e09:	call   0x1400081d4
   140007e0e:	mov    ecx,0x3
   140007e13:	call   0x140005ddc
   140007e18:	int3   
   140007e19:	int3   
   140007e1a:	int3   
   140007e1b:	int3   
   140007e1c:	rex push rbx
   140007e1e:	sub    rsp,0x20
   140007e22:	mov    r8,rdx
   140007e25:	mov    rbx,rcx
   140007e28:	test   rcx,rcx
   140007e2b:	je     0x140007e3b
   140007e2d:	xor    edx,edx
   140007e2f:	lea    rax,[rdx-0x20]
   140007e33:	div    rbx
   140007e36:	cmp    rax,r8
   140007e39:	jb     0x140007e7e
   140007e3b:	imul   rbx,r8
   140007e3f:	mov    eax,0x1
   140007e44:	test   rbx,rbx
   140007e47:	cmove  rbx,rax
   140007e4b:	jmp    0x140007e62
   140007e4d:	call   0x1400074c0
   140007e52:	test   eax,eax
   140007e54:	je     0x140007e7e
   140007e56:	mov    rcx,rbx
   140007e59:	call   0x140007504
   140007e5e:	test   eax,eax
   140007e60:	je     0x140007e7e
   140007e62:	mov    rcx,QWORD PTR [rip+0x17787]        # 0x14001f5f0
   140007e69:	mov    r8,rbx
   140007e6c:	mov    edx,0x8
   140007e71:	call   QWORD PTR [rip+0xc309]        # 0x140014180
   140007e77:	test   rax,rax
   140007e7a:	je     0x140007e4d
   140007e7c:	jmp    0x140007e8b
   140007e7e:	call   0x140008500
   140007e83:	mov    DWORD PTR [rax],0xc
   140007e89:	xor    eax,eax
   140007e8b:	add    rsp,0x20
   140007e8f:	pop    rbx
   140007e90:	ret    
   140007e91:	int3   
   140007e92:	int3   
   140007e93:	int3   
   140007e94:	test   cl,0x4
   140007e97:	je     0x140007e9c
   140007e99:	mov    al,0x1
   140007e9b:	ret    
   140007e9c:	test   cl,0x1
   140007e9f:	je     0x140007eba
   140007ea1:	and    ecx,0x2
   140007ea4:	je     0x140007eae
   140007ea6:	cmp    edx,0x80000000
   140007eac:	ja     0x140007e99
   140007eae:	test   ecx,ecx
   140007eb0:	jne    0x140007eba
   140007eb2:	cmp    edx,0x7fffffff
   140007eb8:	ja     0x140007e99
   140007eba:	xor    al,al
   140007ebc:	ret    
   140007ebd:	int3   
   140007ebe:	int3   
   140007ebf:	int3   
   140007ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140007ec5:	mov    QWORD PTR [rsp+0x18],rsi
   140007eca:	mov    QWORD PTR [rsp+0x20],rdi
   140007ecf:	push   rbp
   140007ed0:	push   r12
   140007ed2:	push   r13
   140007ed4:	push   r14
   140007ed6:	push   r15
   140007ed8:	mov    rbp,rsp
   140007edb:	sub    rsp,0x40
   140007edf:	cmp    QWORD PTR [rdx],0x0
   140007ee3:	mov    r12b,r9b
   140007ee6:	mov    r15d,r8d
   140007ee9:	mov    rbx,rdx
   140007eec:	jne    0x140007f14
   140007eee:	call   0x140008500
   140007ef3:	mov    DWORD PTR [rax],0x16
   140007ef9:	call   0x1400083e0
   140007efe:	mov    rcx,QWORD PTR [rbx+0x8]
   140007f02:	test   rcx,rcx
   140007f05:	je     0x140007f0d
   140007f07:	mov    rax,QWORD PTR [rbx]
   140007f0a:	mov    QWORD PTR [rcx],rax
   140007f0d:	xor    eax,eax
   140007f0f:	jmp    0x1400081b5
   140007f14:	test   r8d,r8d
   140007f17:	je     0x140007f22
   140007f19:	lea    eax,[r8-0x2]
   140007f1d:	cmp    eax,0x22
   140007f20:	ja     0x140007eee
   140007f22:	mov    rdx,rcx
   140007f25:	lea    rcx,[rbp-0x20]
   140007f29:	call   0x140003ab0
   140007f2e:	mov    r13,QWORD PTR [rbx]
   140007f31:	xor    esi,esi
   140007f33:	mov    rdx,QWORD PTR [rbp-0x18]
   140007f37:	mov    QWORD PTR [rbp+0x38],r13
   140007f3b:	mov    dil,BYTE PTR [r13+0x0]
   140007f3f:	lea    rax,[r13+0x1]
   140007f43:	lea    r13d,[rsi+0x8]
   140007f47:	mov    QWORD PTR [rbx],rax
   140007f4a:	cmp    DWORD PTR [rdx+0x8],0x1
   140007f4e:	movzx  eax,dil
   140007f52:	jle    0x140007f68
   140007f54:	lea    r8,[rbp-0x18]
   140007f58:	mov    edx,r13d
   140007f5b:	mov    ecx,eax
   140007f5d:	call   0x14000dde0
   140007f62:	mov    rdx,QWORD PTR [rbp-0x18]
   140007f66:	jmp    0x140007f75
   140007f68:	mov    rcx,rax
   140007f6b:	mov    rax,QWORD PTR [rdx]
   140007f6e:	movzx  eax,WORD PTR [rax+rcx*2]
   140007f72:	and    eax,r13d
   140007f75:	test   eax,eax
   140007f77:	je     0x140007f84
   140007f79:	mov    rax,QWORD PTR [rbx]
   140007f7c:	mov    dil,BYTE PTR [rax]
   140007f7f:	inc    rax
   140007f82:	jmp    0x140007f47
   140007f84:	xor    r14d,r14d
   140007f87:	test   r12b,r12b
   140007f8a:	setne  r14b
   140007f8e:	cmp    dil,0x2d
   140007f92:	jne    0x140007f9a
   140007f94:	or     r14d,0x2
   140007f98:	jmp    0x140007fa0
   140007f9a:	cmp    dil,0x2b
   140007f9e:	jne    0x140007fac
   140007fa0:	mov    rax,QWORD PTR [rbx]
   140007fa3:	mov    dil,BYTE PTR [rax]
   140007fa6:	inc    rax
   140007fa9:	mov    QWORD PTR [rbx],rax
   140007fac:	mov    r13,QWORD PTR [rbp+0x38]
   140007fb0:	or     r12d,0xffffffff
   140007fb4:	test   r15d,0xffffffef
   140007fbb:	jne    0x140008041
   140007fc1:	lea    eax,[rdi-0x30]
   140007fc4:	cmp    al,0x9
   140007fc6:	ja     0x140007fd1
   140007fc8:	movsx  eax,dil
   140007fcc:	add    eax,0xffffffd0
   140007fcf:	jmp    0x140007ff4
   140007fd1:	lea    eax,[rdi-0x61]
   140007fd4:	cmp    al,0x19
   140007fd6:	ja     0x140007fe1
   140007fd8:	movsx  eax,dil
   140007fdc:	add    eax,0xffffffa9
   140007fdf:	jmp    0x140007ff4
   140007fe1:	lea    eax,[rdi-0x41]
   140007fe4:	cmp    al,0x19
   140007fe6:	ja     0x140007ff1
   140007fe8:	movsx  eax,dil
   140007fec:	add    eax,0xffffffc9
   140007fef:	jmp    0x140007ff4
   140007ff1:	mov    eax,r12d
   140007ff4:	mov    r9d,0x8
   140007ffa:	test   eax,eax
   140007ffc:	je     0x140008009
   140007ffe:	test   r15d,r15d
   140008001:	jne    0x140008047
   140008003:	lea    r15d,[r9+0x2]
   140008007:	jmp    0x140008047
   140008009:	mov    rax,QWORD PTR [rbx]
   14000800c:	mov    dl,BYTE PTR [rax]
   14000800e:	lea    rcx,[rax+0x1]
   140008012:	mov    QWORD PTR [rbx],rcx
   140008015:	lea    eax,[rdx-0x58]
   140008018:	test   al,0xdf
   14000801a:	je     0x140008063
   14000801c:	test   r15d,r15d
   14000801f:	cmove  r15d,r9d
   140008023:	dec    rcx
   140008026:	mov    QWORD PTR [rbx],rcx
   140008029:	test   dl,dl
   14000802b:	je     0x140008047
   14000802d:	cmp    BYTE PTR [rcx],dl
   14000802f:	je     0x140008047
   140008031:	call   0x140008500
   140008036:	mov    DWORD PTR [rax],0x16
   14000803c:	call   0x1400083e0
   140008041:	mov    r9d,0x8
   140008047:	xor    edx,edx
   140008049:	mov    eax,r12d
   14000804c:	div    r15d
   14000804f:	mov    r8d,eax
   140008052:	lea    ecx,[rdi-0x30]
   140008055:	cmp    cl,0x9
   140008058:	ja     0x14000807b
   14000805a:	movsx  ecx,dil
   14000805e:	add    ecx,0xffffffd0
   140008061:	jmp    0x14000809e
   140008063:	mov    dil,BYTE PTR [rcx]
   140008066:	mov    eax,0x10
   14000806b:	test   r15d,r15d
   14000806e:	cmove  r15d,eax
   140008072:	lea    rax,[rcx+0x1]
   140008076:	mov    QWORD PTR [rbx],rax
   140008079:	jmp    0x140008047
   14000807b:	lea    eax,[rdi-0x61]
   14000807e:	cmp    al,0x19
   140008080:	ja     0x14000808b
   140008082:	movsx  ecx,dil
   140008086:	add    ecx,0xffffffa9
   140008089:	jmp    0x14000809e
   14000808b:	lea    eax,[rdi-0x41]
   14000808e:	cmp    al,0x19
   140008090:	ja     0x14000809b
   140008092:	movsx  ecx,dil
   140008096:	add    ecx,0xffffffc9
   140008099:	jmp    0x14000809e
   14000809b:	mov    ecx,r12d
   14000809e:	cmp    ecx,r12d
   1400080a1:	je     0x1400080d0
   1400080a3:	cmp    ecx,r15d
   1400080a6:	jae    0x1400080d0
   1400080a8:	or     r14d,r9d
   1400080ab:	cmp    esi,r8d
   1400080ae:	jb     0x1400080bc
   1400080b0:	jne    0x1400080b6
   1400080b2:	cmp    ecx,edx
   1400080b4:	jbe    0x1400080bc
   1400080b6:	or     r14d,0x4
   1400080ba:	jmp    0x1400080c2
   1400080bc:	imul   esi,r15d
   1400080c0:	add    esi,ecx
   1400080c2:	mov    rax,QWORD PTR [rbx]
   1400080c5:	mov    dil,BYTE PTR [rax]
   1400080c8:	inc    rax
   1400080cb:	mov    QWORD PTR [rbx],rax
   1400080ce:	jmp    0x140008052
   1400080d0:	dec    QWORD PTR [rbx]
   1400080d3:	mov    rax,QWORD PTR [rbx]
   1400080d6:	test   dil,dil
   1400080d9:	je     0x1400080f0
   1400080db:	cmp    BYTE PTR [rax],dil
   1400080de:	je     0x1400080f0
   1400080e0:	call   0x140008500
   1400080e5:	mov    DWORD PTR [rax],0x16
   1400080eb:	call   0x1400083e0
   1400080f0:	test   r14b,0x8
   1400080f4:	jne    0x140008113
   1400080f6:	cmp    BYTE PTR [rbp-0x8],0x0
   1400080fa:	mov    QWORD PTR [rbx],r13
   1400080fd:	je     0x140007efe
   140008103:	mov    rax,QWORD PTR [rbp-0x20]
   140008107:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14000810e:	jmp    0x140007efe
   140008113:	mov    edx,esi
   140008115:	mov    ecx,r14d
   140008118:	call   0x140007e94
   14000811d:	test   al,al
   14000811f:	je     0x14000818b
   140008121:	call   0x140008500
   140008126:	mov    DWORD PTR [rax],0x22
   14000812c:	test   r14b,0x1
   140008130:	jne    0x140008137
   140008132:	mov    esi,r12d
   140008135:	jmp    0x140008193
   140008137:	test   r14b,0x2
   14000813b:	je     0x140008164
   14000813d:	cmp    BYTE PTR [rbp-0x8],0x0
   140008141:	je     0x14000814e
   140008143:	mov    rax,QWORD PTR [rbp-0x20]
   140008147:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14000814e:	mov    rcx,QWORD PTR [rbx+0x8]
   140008152:	test   rcx,rcx
   140008155:	je     0x14000815d
   140008157:	mov    rax,QWORD PTR [rbx]
   14000815a:	mov    QWORD PTR [rcx],rax
   14000815d:	mov    eax,0x80000000
   140008162:	jmp    0x1400081b5
   140008164:	cmp    BYTE PTR [rbp-0x8],0x0
   140008168:	je     0x140008175
   14000816a:	mov    rax,QWORD PTR [rbp-0x20]
   14000816e:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140008175:	mov    rcx,QWORD PTR [rbx+0x8]
   140008179:	test   rcx,rcx
   14000817c:	je     0x140008184
   14000817e:	mov    rax,QWORD PTR [rbx]
   140008181:	mov    QWORD PTR [rcx],rax
   140008184:	mov    eax,0x7fffffff
   140008189:	jmp    0x1400081b5
   14000818b:	test   r14b,0x2
   14000818f:	je     0x140008193
   140008191:	neg    esi
   140008193:	cmp    BYTE PTR [rbp-0x8],0x0
   140008197:	je     0x1400081a4
   140008199:	mov    rcx,QWORD PTR [rbp-0x20]
   14000819d:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   1400081a4:	mov    rax,QWORD PTR [rbx+0x8]
   1400081a8:	test   rax,rax
   1400081ab:	je     0x1400081b3
   1400081ad:	mov    rcx,QWORD PTR [rbx]
   1400081b0:	mov    QWORD PTR [rax],rcx
   1400081b3:	mov    eax,esi
   1400081b5:	lea    r11,[rsp+0x40]
   1400081ba:	mov    rbx,QWORD PTR [r11+0x30]
   1400081be:	mov    rsi,QWORD PTR [r11+0x40]
   1400081c2:	mov    rdi,QWORD PTR [r11+0x48]
   1400081c6:	mov    rsp,r11
   1400081c9:	pop    r15
   1400081cb:	pop    r14
   1400081cd:	pop    r13
   1400081cf:	pop    r12
   1400081d1:	pop    rbp
   1400081d2:	ret    
   1400081d3:	int3   
   1400081d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400081d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400081de:	push   rbp
   1400081df:	push   rdi
   1400081e0:	push   r14
   1400081e2:	lea    rbp,[rsp-0x4f0]
   1400081ea:	sub    rsp,0x5f0
   1400081f1:	mov    rax,QWORD PTR [rip+0x15e20]        # 0x14001e018
   1400081f8:	xor    rax,rsp
   1400081fb:	mov    QWORD PTR [rbp+0x4e0],rax
   140008202:	mov    edi,r8d
   140008205:	mov    esi,edx
   140008207:	mov    ebx,ecx
   140008209:	cmp    ecx,0xffffffff
   14000820c:	je     0x140008213
   14000820e:	call   0x140002230
   140008213:	xor    edx,edx
   140008215:	lea    rcx,[rsp+0x70]
   14000821a:	mov    r8d,0x98
   140008220:	call   0x140002cb0
   140008225:	xor    edx,edx
   140008227:	lea    rcx,[rbp+0x10]
   14000822b:	mov    r8d,0x4d0
   140008231:	call   0x140002cb0
   140008236:	lea    rax,[rsp+0x70]
   14000823b:	mov    QWORD PTR [rsp+0x48],rax
   140008240:	lea    rcx,[rbp+0x10]
   140008244:	lea    rax,[rbp+0x10]
   140008248:	mov    QWORD PTR [rsp+0x50],rax
   14000824d:	call   QWORD PTR [rip+0xbe15]        # 0x140014068
   140008253:	mov    r14,QWORD PTR [rbp+0x108]
   14000825a:	lea    rdx,[rsp+0x40]
   14000825f:	mov    rcx,r14
   140008262:	xor    r8d,r8d
   140008265:	call   QWORD PTR [rip+0xbe05]        # 0x140014070
   14000826b:	test   rax,rax
   14000826e:	je     0x1400082a6
   140008270:	and    QWORD PTR [rsp+0x38],0x0
   140008276:	lea    rcx,[rsp+0x60]
   14000827b:	mov    rdx,QWORD PTR [rsp+0x40]
   140008280:	mov    r9,rax
   140008283:	mov    QWORD PTR [rsp+0x30],rcx
   140008288:	mov    r8,r14
   14000828b:	lea    rcx,[rsp+0x58]
   140008290:	mov    QWORD PTR [rsp+0x28],rcx
   140008295:	lea    rcx,[rbp+0x10]
   140008299:	mov    QWORD PTR [rsp+0x20],rcx
   14000829e:	xor    ecx,ecx
   1400082a0:	call   QWORD PTR [rip+0xbdd2]        # 0x140014078
   1400082a6:	mov    rax,QWORD PTR [rbp+0x508]
   1400082ad:	mov    QWORD PTR [rbp+0x108],rax
   1400082b4:	lea    rax,[rbp+0x508]
   1400082bb:	add    rax,0x8
   1400082bf:	mov    DWORD PTR [rsp+0x70],esi
   1400082c3:	mov    QWORD PTR [rbp+0xa8],rax
   1400082ca:	mov    rax,QWORD PTR [rbp+0x508]
   1400082d1:	mov    QWORD PTR [rbp-0x80],rax
   1400082d5:	mov    DWORD PTR [rsp+0x74],edi
   1400082d9:	call   QWORD PTR [rip+0xbda1]        # 0x140014080
   1400082df:	xor    ecx,ecx
   1400082e1:	mov    edi,eax
   1400082e3:	call   QWORD PTR [rip+0xbda7]        # 0x140014090
   1400082e9:	lea    rcx,[rsp+0x48]
   1400082ee:	call   QWORD PTR [rip+0xbd94]        # 0x140014088
   1400082f4:	test   eax,eax
   1400082f6:	jne    0x140008308
   1400082f8:	test   edi,edi
   1400082fa:	jne    0x140008308
   1400082fc:	cmp    ebx,0xffffffff
   1400082ff:	je     0x140008308
   140008301:	mov    ecx,ebx
   140008303:	call   0x140002230
   140008308:	mov    rcx,QWORD PTR [rbp+0x4e0]
   14000830f:	xor    rcx,rsp
   140008312:	call   0x140013230
   140008317:	lea    r11,[rsp+0x5f0]
   14000831f:	mov    rbx,QWORD PTR [r11+0x28]
   140008323:	mov    rsi,QWORD PTR [r11+0x30]
   140008327:	mov    rsp,r11
   14000832a:	pop    r14
   14000832c:	pop    rdi
   14000832d:	pop    rbp
   14000832e:	ret    
   14000832f:	int3   
   140008330:	mov    QWORD PTR [rip+0x16a89],rcx        # 0x14001edc0
   140008337:	ret    
   140008338:	mov    rax,rsp
   14000833b:	mov    QWORD PTR [rax+0x8],rbx
   14000833f:	mov    QWORD PTR [rax+0x10],rbp
   140008343:	mov    QWORD PTR [rax+0x18],rsi
   140008347:	mov    QWORD PTR [rax+0x20],rdi
   14000834b:	push   r14
   14000834d:	sub    rsp,0x30
   140008351:	mov    edi,r9d
   140008354:	mov    rsi,r8
   140008357:	mov    rbp,rdx
   14000835a:	mov    r14,rcx
   14000835d:	call   0x140009e00
   140008362:	test   rax,rax
   140008365:	je     0x1400083a8
   140008367:	mov    rbx,QWORD PTR [rax+0x3b8]
   14000836e:	test   rbx,rbx
   140008371:	je     0x1400083a8
   140008373:	mov    rcx,rbx
   140008376:	call   QWORD PTR [rip+0xbedc]        # 0x140014258
   14000837c:	mov    r9d,edi
   14000837f:	mov    r8,rsi
   140008382:	mov    rdx,rbp
   140008385:	mov    rcx,r14
   140008388:	mov    rax,rbx
   14000838b:	mov    rbx,QWORD PTR [rsp+0x40]
   140008390:	mov    rbp,QWORD PTR [rsp+0x48]
   140008395:	mov    rsi,QWORD PTR [rsp+0x50]
   14000839a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000839f:	add    rsp,0x30
   1400083a3:	pop    r14
   1400083a5:	rex.W jmp rax
   1400083a8:	mov    rbx,QWORD PTR [rip+0x15c69]        # 0x14001e018
   1400083af:	mov    ecx,ebx
   1400083b1:	xor    rbx,QWORD PTR [rip+0x16a08]        # 0x14001edc0
   1400083b8:	and    ecx,0x3f
   1400083bb:	ror    rbx,cl
   1400083be:	test   rbx,rbx
   1400083c1:	jne    0x140008373
   1400083c3:	mov    rax,QWORD PTR [rsp+0x60]
   1400083c8:	mov    r9d,edi
   1400083cb:	mov    r8,rsi
   1400083ce:	mov    QWORD PTR [rsp+0x20],rax
   1400083d3:	mov    rdx,rbp
   1400083d6:	mov    rcx,r14
   1400083d9:	call   0x140008400
   1400083de:	int3   
   1400083df:	int3   
   1400083e0:	sub    rsp,0x38
   1400083e4:	and    QWORD PTR [rsp+0x20],0x0
   1400083ea:	xor    r9d,r9d
   1400083ed:	xor    r8d,r8d
   1400083f0:	xor    edx,edx
   1400083f2:	xor    ecx,ecx
   1400083f4:	call   0x140008338
   1400083f9:	add    rsp,0x38
   1400083fd:	ret    
   1400083fe:	int3   
   1400083ff:	int3   
   140008400:	sub    rsp,0x28
   140008404:	mov    ecx,0x17
   140008409:	call   0x140002870
   14000840e:	test   eax,eax
   140008410:	je     0x140008419
   140008412:	mov    ecx,0x5
   140008417:	int    0x29
   140008419:	mov    r8d,0x1
   14000841f:	mov    edx,0xc0000417
   140008424:	lea    ecx,[r8+0x1]
   140008428:	call   0x1400081d4
   14000842d:	call   QWORD PTR [rip+0xbced]        # 0x140014120
   140008433:	mov    rcx,rax
   140008436:	mov    edx,0xc0000417
   14000843b:	add    rsp,0x28
   14000843f:	rex.W jmp QWORD PTR [rip+0xbcea]        # 0x140014130
   140008446:	int3   
   140008447:	int3   
   140008448:	xor    eax,eax
   14000844a:	lea    r9,[rip+0xcf4f]        # 0x1400153a0
   140008451:	mov    rdx,r9
   140008454:	lea    r8d,[rax+0x8]
   140008458:	cmp    ecx,DWORD PTR [rdx]
   14000845a:	je     0x140008487
   14000845c:	inc    eax
   14000845e:	add    rdx,r8
   140008461:	cmp    eax,0x2d
   140008464:	jb     0x140008458
   140008466:	lea    eax,[rcx-0x13]
   140008469:	cmp    eax,0x11
   14000846c:	ja     0x140008474
   14000846e:	mov    eax,0xd
   140008473:	ret    
   140008474:	add    ecx,0xffffff44
   14000847a:	mov    eax,0x16
   14000847f:	cmp    ecx,0xe
   140008482:	cmovbe eax,r8d
   140008486:	ret    
   140008487:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14000848c:	ret    
   14000848d:	int3   
   14000848e:	int3   
   14000848f:	int3   
   140008490:	mov    QWORD PTR [rsp+0x8],rbx
   140008495:	push   rdi
   140008496:	sub    rsp,0x20
   14000849a:	mov    edi,ecx
   14000849c:	call   0x140009e00
   1400084a1:	test   rax,rax
   1400084a4:	jne    0x1400084af
   1400084a6:	lea    rax,[rip+0x15cab]        # 0x14001e158
   1400084ad:	jmp    0x1400084b3
   1400084af:	add    rax,0x24
   1400084b3:	mov    DWORD PTR [rax],edi
   1400084b5:	call   0x140009e00
   1400084ba:	lea    rbx,[rip+0x15c93]        # 0x14001e154
   1400084c1:	test   rax,rax
   1400084c4:	je     0x1400084ca
   1400084c6:	lea    rbx,[rax+0x20]
   1400084ca:	mov    ecx,edi
   1400084cc:	call   0x140008448
   1400084d1:	mov    DWORD PTR [rbx],eax
   1400084d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084d8:	add    rsp,0x20
   1400084dc:	pop    rdi
   1400084dd:	ret    
   1400084de:	int3   
   1400084df:	int3   
   1400084e0:	sub    rsp,0x28
   1400084e4:	call   0x140009e00
   1400084e9:	test   rax,rax
   1400084ec:	jne    0x1400084f7
   1400084ee:	lea    rax,[rip+0x15c63]        # 0x14001e158
   1400084f5:	jmp    0x1400084fb
   1400084f7:	add    rax,0x24
   1400084fb:	add    rsp,0x28
   1400084ff:	ret    
   140008500:	sub    rsp,0x28
   140008504:	call   0x140009e00
   140008509:	test   rax,rax
   14000850c:	jne    0x140008517
   14000850e:	lea    rax,[rip+0x15c3f]        # 0x14001e154
   140008515:	jmp    0x14000851b
   140008517:	add    rax,0x20
   14000851b:	add    rsp,0x28
   14000851f:	ret    
   140008520:	mov    QWORD PTR [rsp+0x8],rbx
   140008525:	mov    QWORD PTR [rsp+0x10],rbp
   14000852a:	mov    QWORD PTR [rsp+0x18],rsi
   14000852f:	push   rdi
   140008530:	push   r12
   140008532:	push   r13
   140008534:	push   r14
   140008536:	push   r15
   140008538:	sub    rsp,0x20
   14000853c:	mov    r14d,ecx
   14000853f:	lea    r15,[rip+0xffffffffffff7aba]        # 0x140000000
   140008546:	mov    r12,r9
   140008549:	mov    rbp,r8
   14000854c:	mov    r13,rdx
   14000854f:	mov    rcx,QWORD PTR [r15+r14*8+0x1ee70]
   140008557:	mov    r10,QWORD PTR [rip+0x15aba]        # 0x14001e018
   14000855e:	or     rdi,0xffffffffffffffff
   140008562:	mov    eax,r10d
   140008565:	mov    rdx,r10
   140008568:	xor    rdx,rcx
   14000856b:	and    eax,0x3f
   14000856e:	mov    cl,al
   140008570:	ror    rdx,cl
   140008573:	cmp    rdx,rdi
   140008576:	je     0x1400086a1
   14000857c:	test   rdx,rdx
   14000857f:	je     0x140008589
   140008581:	mov    rax,rdx
   140008584:	jmp    0x1400086a3
   140008589:	cmp    r8,r9
   14000858c:	je     0x140008635
   140008592:	mov    esi,DWORD PTR [rbp+0x0]
   140008595:	mov    rbx,QWORD PTR [r15+rsi*8+0x1edd0]
   14000859d:	test   rbx,rbx
   1400085a0:	je     0x1400085a9
   1400085a2:	cmp    rbx,rdi
   1400085a5:	je     0x140008621
   1400085a7:	jmp    0x14000861c
   1400085a9:	mov    r15,QWORD PTR [r15+rsi*8+0x15510]
   1400085b1:	xor    edx,edx
   1400085b3:	mov    rcx,r15
   1400085b6:	mov    r8d,0x800
   1400085bc:	call   QWORD PTR [rip+0xbb56]        # 0x140014118
   1400085c2:	mov    rbx,rax
   1400085c5:	test   rax,rax
   1400085c8:	jne    0x1400085ea
   1400085ca:	call   QWORD PTR [rip+0xba48]        # 0x140014018
   1400085d0:	cmp    eax,0x57
   1400085d3:	jne    0x1400085e8
   1400085d5:	xor    r8d,r8d
   1400085d8:	xor    edx,edx
   1400085da:	mov    rcx,r15
   1400085dd:	call   QWORD PTR [rip+0xbb35]        # 0x140014118
   1400085e3:	mov    rbx,rax
   1400085e6:	jmp    0x1400085ea
   1400085e8:	xor    ebx,ebx
   1400085ea:	lea    r15,[rip+0xffffffffffff7a0f]        # 0x140000000
   1400085f1:	test   rbx,rbx
   1400085f4:	jne    0x140008603
   1400085f6:	mov    rax,rdi
   1400085f9:	xchg   QWORD PTR [r15+rsi*8+0x1edd0],rax
   140008601:	jmp    0x140008621
   140008603:	mov    rax,rbx
   140008606:	xchg   QWORD PTR [r15+rsi*8+0x1edd0],rax
   14000860e:	test   rax,rax
   140008611:	je     0x14000861c
   140008613:	mov    rcx,rbx
   140008616:	call   QWORD PTR [rip+0xbaf4]        # 0x140014110
   14000861c:	test   rbx,rbx
   14000861f:	jne    0x140008676
   140008621:	add    rbp,0x4
   140008625:	cmp    rbp,r12
   140008628:	jne    0x140008592
   14000862e:	mov    r10,QWORD PTR [rip+0x159e3]        # 0x14001e018
   140008635:	xor    ebx,ebx
   140008637:	test   rbx,rbx
   14000863a:	je     0x140008686
   14000863c:	mov    rdx,r13
   14000863f:	mov    rcx,rbx
   140008642:	call   QWORD PTR [rip+0xb9e8]        # 0x140014030
   140008648:	test   rax,rax
   14000864b:	je     0x14000867f
   14000864d:	mov    r8,QWORD PTR [rip+0x159c4]        # 0x14001e018
   140008654:	mov    edx,0x40
   140008659:	mov    ecx,r8d
   14000865c:	and    ecx,0x3f
   14000865f:	sub    edx,ecx
   140008661:	mov    cl,dl
   140008663:	mov    rdx,rax
   140008666:	ror    rdx,cl
   140008669:	xor    rdx,r8
   14000866c:	xchg   QWORD PTR [r15+r14*8+0x1ee70],rdx
   140008674:	jmp    0x1400086a3
   140008676:	mov    r10,QWORD PTR [rip+0x1599b]        # 0x14001e018
   14000867d:	jmp    0x140008637
   14000867f:	mov    r10,QWORD PTR [rip+0x15992]        # 0x14001e018
   140008686:	mov    eax,r10d
   140008689:	mov    ecx,0x40
   14000868e:	and    eax,0x3f
   140008691:	sub    ecx,eax
   140008693:	ror    rdi,cl
   140008696:	xor    rdi,r10
   140008699:	xchg   QWORD PTR [r15+r14*8+0x1ee70],rdi
   1400086a1:	xor    eax,eax
   1400086a3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400086a8:	mov    rbp,QWORD PTR [rsp+0x58]
   1400086ad:	mov    rsi,QWORD PTR [rsp+0x60]
   1400086b2:	add    rsp,0x20
   1400086b6:	pop    r15
   1400086b8:	pop    r14
   1400086ba:	pop    r13
   1400086bc:	pop    r12
   1400086be:	pop    rdi
   1400086bf:	ret    
   1400086c0:	rex push rbx
   1400086c2:	sub    rsp,0x20
   1400086c6:	lea    r9,[rip+0xd377]        # 0x140015a44
   1400086cd:	xor    ecx,ecx
   1400086cf:	lea    r8,[rip+0xd36a]        # 0x140015a40
   1400086d6:	lea    rdx,[rip+0xd36b]        # 0x140015a48
   1400086dd:	call   0x140008520
   1400086e2:	mov    rbx,rax
   1400086e5:	test   rax,rax
   1400086e8:	je     0x1400086fe
   1400086ea:	mov    rcx,rax
   1400086ed:	call   QWORD PTR [rip+0xbb65]        # 0x140014258
   1400086f3:	mov    rax,rbx
   1400086f6:	add    rsp,0x20
   1400086fa:	pop    rbx
   1400086fb:	rex.W jmp rax
   1400086fe:	mov    eax,0x1
   140008703:	add    rsp,0x20
   140008707:	pop    rbx
   140008708:	ret    
   140008709:	int3   
   14000870a:	int3   
   14000870b:	int3   
   14000870c:	mov    rax,rsp
   14000870f:	mov    QWORD PTR [rax+0x8],rbx
   140008713:	mov    QWORD PTR [rax+0x10],rbp
   140008717:	mov    QWORD PTR [rax+0x18],rsi
   14000871b:	mov    QWORD PTR [rax+0x20],rdi
   14000871f:	push   r14
   140008721:	sub    rsp,0x50
   140008725:	mov    edi,r9d
   140008728:	mov    rsi,r8
   14000872b:	mov    ebp,edx
   14000872d:	lea    r9,[rip+0xd32c]        # 0x140015a60
   140008734:	mov    r14,rcx
   140008737:	lea    r8,[rip+0xd31a]        # 0x140015a58
   14000873e:	lea    rdx,[rip+0xd31b]        # 0x140015a60
   140008745:	mov    ecx,0x1
   14000874a:	call   0x140008520
   14000874f:	mov    rbx,rax
   140008752:	test   rax,rax
   140008755:	je     0x1400087ae
   140008757:	mov    rcx,rax
   14000875a:	call   QWORD PTR [rip+0xbaf8]        # 0x140014258
   140008760:	mov    rcx,QWORD PTR [rsp+0xa0]
   140008768:	mov    r9d,edi
   14000876b:	mov    rax,QWORD PTR [rsp+0x80]
   140008773:	mov    r8,rsi
   140008776:	mov    QWORD PTR [rsp+0x40],rcx
   14000877b:	mov    edx,ebp
   14000877d:	mov    rcx,QWORD PTR [rsp+0x98]
   140008785:	mov    QWORD PTR [rsp+0x38],rcx
   14000878a:	mov    rcx,QWORD PTR [rsp+0x90]
   140008792:	mov    QWORD PTR [rsp+0x30],rcx
   140008797:	mov    ecx,DWORD PTR [rsp+0x88]
   14000879e:	mov    DWORD PTR [rsp+0x28],ecx
   1400087a2:	mov    rcx,r14
   1400087a5:	mov    QWORD PTR [rsp+0x20],rax
   1400087aa:	call   rbx
   1400087ac:	jmp    0x1400087e0
   1400087ae:	xor    edx,edx
   1400087b0:	mov    rcx,r14
   1400087b3:	call   0x140008ad4
   1400087b8:	mov    ecx,eax
   1400087ba:	mov    r9d,edi
   1400087bd:	mov    eax,DWORD PTR [rsp+0x88]
   1400087c4:	mov    r8,rsi
   1400087c7:	mov    DWORD PTR [rsp+0x28],eax
   1400087cb:	mov    edx,ebp
   1400087cd:	mov    rax,QWORD PTR [rsp+0x80]
   1400087d5:	mov    QWORD PTR [rsp+0x20],rax
   1400087da:	call   QWORD PTR [rip+0xb9a8]        # 0x140014188
   1400087e0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400087e5:	mov    rbp,QWORD PTR [rsp+0x68]
   1400087ea:	mov    rsi,QWORD PTR [rsp+0x70]
   1400087ef:	mov    rdi,QWORD PTR [rsp+0x78]
   1400087f4:	add    rsp,0x50
   1400087f8:	pop    r14
   1400087fa:	ret    
   1400087fb:	int3   
   1400087fc:	mov    QWORD PTR [rsp+0x8],rbx
   140008801:	push   rdi
   140008802:	sub    rsp,0x20
   140008806:	mov    rdi,rcx
   140008809:	lea    r9,[rip+0xd268]        # 0x140015a78
   140008810:	mov    ecx,0x3
   140008815:	lea    r8,[rip+0xd254]        # 0x140015a70
   14000881c:	lea    rdx,[rip+0xbf15]        # 0x140014738
   140008823:	call   0x140008520
   140008828:	mov    rbx,rax
   14000882b:	test   rax,rax
   14000882e:	je     0x140008840
   140008830:	mov    rcx,rax
   140008833:	call   QWORD PTR [rip+0xba1f]        # 0x140014258
   140008839:	mov    rcx,rdi
   14000883c:	call   rbx
   14000883e:	jmp    0x140008846
   140008840:	call   QWORD PTR [rip+0xb8aa]        # 0x1400140f0
   140008846:	mov    rbx,QWORD PTR [rsp+0x30]
   14000884b:	add    rsp,0x20
   14000884f:	pop    rdi
   140008850:	ret    
   140008851:	int3   
   140008852:	int3   
   140008853:	int3   
   140008854:	mov    QWORD PTR [rsp+0x8],rbx
   140008859:	push   rdi
   14000885a:	sub    rsp,0x20
   14000885e:	mov    ebx,ecx
   140008860:	lea    r9,[rip+0xd219]        # 0x140015a80
   140008867:	mov    ecx,0x4
   14000886c:	lea    r8,[rip+0xd205]        # 0x140015a78
   140008873:	lea    rdx,[rip+0xbed6]        # 0x140014750
   14000887a:	call   0x140008520
   14000887f:	mov    rdi,rax
   140008882:	test   rax,rax
   140008885:	je     0x140008896
   140008887:	mov    rcx,rax
   14000888a:	call   QWORD PTR [rip+0xb9c8]        # 0x140014258
   140008890:	mov    ecx,ebx
   140008892:	call   rdi
   140008894:	jmp    0x14000889e
   140008896:	mov    ecx,ebx
   140008898:	call   QWORD PTR [rip+0xb86a]        # 0x140014108
   14000889e:	mov    rbx,QWORD PTR [rsp+0x30]
   1400088a3:	add    rsp,0x20
   1400088a7:	pop    rdi
   1400088a8:	ret    
   1400088a9:	int3   
   1400088aa:	int3   
   1400088ab:	int3   
   1400088ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400088b1:	push   rdi
   1400088b2:	sub    rsp,0x20
   1400088b6:	mov    ebx,ecx
   1400088b8:	lea    r9,[rip+0xd1c9]        # 0x140015a88
   1400088bf:	mov    ecx,0x5
   1400088c4:	lea    r8,[rip+0xd1b5]        # 0x140015a80
   1400088cb:	lea    rdx,[rip+0xbe86]        # 0x140014758
   1400088d2:	call   0x140008520
   1400088d7:	mov    rdi,rax
   1400088da:	test   rax,rax
   1400088dd:	je     0x1400088ee
   1400088df:	mov    rcx,rax
   1400088e2:	call   QWORD PTR [rip+0xb970]        # 0x140014258
   1400088e8:	mov    ecx,ebx
   1400088ea:	call   rdi
   1400088ec:	jmp    0x1400088f6
   1400088ee:	mov    ecx,ebx
   1400088f0:	call   QWORD PTR [rip+0xb802]        # 0x1400140f8
   1400088f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400088fb:	add    rsp,0x20
   1400088ff:	pop    rdi
   140008900:	ret    
   140008901:	int3   
   140008902:	int3   
   140008903:	int3   
   140008904:	mov    QWORD PTR [rsp+0x8],rbx
   140008909:	mov    QWORD PTR [rsp+0x10],rsi
   14000890e:	push   rdi
   14000890f:	sub    rsp,0x20
   140008913:	mov    rbx,rdx
   140008916:	lea    r9,[rip+0xd173]        # 0x140015a90
   14000891d:	mov    edi,ecx
   14000891f:	lea    rdx,[rip+0xbe4a]        # 0x140014770
   140008926:	mov    ecx,0x6
   14000892b:	lea    r8,[rip+0xd156]        # 0x140015a88
   140008932:	call   0x140008520
   140008937:	mov    rsi,rax
   14000893a:	test   rax,rax
   14000893d:	je     0x140008951
   14000893f:	mov    rcx,rax
   140008942:	call   QWORD PTR [rip+0xb910]        # 0x140014258
   140008948:	mov    rdx,rbx
   14000894b:	mov    ecx,edi
   14000894d:	call   rsi
   14000894f:	jmp    0x14000895c
   140008951:	mov    rdx,rbx
   140008954:	mov    ecx,edi
   140008956:	call   QWORD PTR [rip+0xb7a4]        # 0x140014100
   14000895c:	mov    rbx,QWORD PTR [rsp+0x30]
   140008961:	mov    rsi,QWORD PTR [rsp+0x38]
   140008966:	add    rsp,0x20
   14000896a:	pop    rdi
   14000896b:	ret    
   14000896c:	mov    QWORD PTR [rsp+0x8],rbx
   140008971:	mov    QWORD PTR [rsp+0x10],rbp
   140008976:	mov    QWORD PTR [rsp+0x18],rsi
   14000897b:	push   rdi
   14000897c:	sub    rsp,0x20
   140008980:	mov    ebp,r8d
   140008983:	lea    r9,[rip+0xd12e]        # 0x140015ab8
   14000898a:	mov    ebx,edx
   14000898c:	lea    r8,[rip+0xd11d]        # 0x140015ab0
   140008993:	mov    rdi,rcx
   140008996:	lea    rdx,[rip+0xbdeb]        # 0x140014788
   14000899d:	mov    ecx,0x14
   1400089a2:	call   0x140008520
   1400089a7:	mov    rsi,rax
   1400089aa:	test   rax,rax
   1400089ad:	je     0x1400089c4
   1400089af:	mov    rcx,rax
   1400089b2:	call   QWORD PTR [rip+0xb8a0]        # 0x140014258
   1400089b8:	mov    r8d,ebp
   1400089bb:	mov    edx,ebx
   1400089bd:	mov    rcx,rdi
   1400089c0:	call   rsi
   1400089c2:	jmp    0x1400089cf
   1400089c4:	mov    edx,ebx
   1400089c6:	mov    rcx,rdi
   1400089c9:	call   QWORD PTR [rip+0xb719]        # 0x1400140e8
   1400089cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400089d4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400089d9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400089de:	add    rsp,0x20
   1400089e2:	pop    rdi
   1400089e3:	ret    
   1400089e4:	mov    rax,rsp
   1400089e7:	mov    QWORD PTR [rax+0x8],rbx
   1400089eb:	mov    QWORD PTR [rax+0x10],rbp
   1400089ef:	mov    QWORD PTR [rax+0x18],rsi
   1400089f3:	mov    QWORD PTR [rax+0x20],rdi
   1400089f7:	push   r14
   1400089f9:	sub    rsp,0x50
   1400089fd:	mov    edi,r9d
   140008a00:	mov    rsi,r8
   140008a03:	mov    ebp,edx
   140008a05:	lea    r9,[rip+0xd0b4]        # 0x140015ac0
   140008a0c:	mov    r14,rcx
   140008a0f:	lea    r8,[rip+0xd0a2]        # 0x140015ab8
   140008a16:	lea    rdx,[rip+0xd0a3]        # 0x140015ac0
   140008a1d:	mov    ecx,0x16
   140008a22:	call   0x140008520
   140008a27:	mov    rbx,rax
   140008a2a:	test   rax,rax
   140008a2d:	je     0x140008a86
   140008a2f:	mov    rcx,rax
   140008a32:	call   QWORD PTR [rip+0xb820]        # 0x140014258
   140008a38:	mov    rcx,QWORD PTR [rsp+0xa0]
   140008a40:	mov    r9d,edi
   140008a43:	mov    rax,QWORD PTR [rsp+0x80]
   140008a4b:	mov    r8,rsi
   140008a4e:	mov    QWORD PTR [rsp+0x40],rcx
   140008a53:	mov    edx,ebp
   140008a55:	mov    rcx,QWORD PTR [rsp+0x98]
   140008a5d:	mov    QWORD PTR [rsp+0x38],rcx
   140008a62:	mov    rcx,QWORD PTR [rsp+0x90]
   140008a6a:	mov    QWORD PTR [rsp+0x30],rcx
   140008a6f:	mov    ecx,DWORD PTR [rsp+0x88]
   140008a76:	mov    DWORD PTR [rsp+0x28],ecx
   140008a7a:	mov    rcx,r14
   140008a7d:	mov    QWORD PTR [rsp+0x20],rax
   140008a82:	call   rbx
   140008a84:	jmp    0x140008ab8
   140008a86:	xor    edx,edx
   140008a88:	mov    rcx,r14
   140008a8b:	call   0x140008ad4
   140008a90:	mov    ecx,eax
   140008a92:	mov    r9d,edi
   140008a95:	mov    eax,DWORD PTR [rsp+0x88]
   140008a9c:	mov    r8,rsi
   140008a9f:	mov    DWORD PTR [rsp+0x28],eax
   140008aa3:	mov    edx,ebp
   140008aa5:	mov    rax,QWORD PTR [rsp+0x80]
   140008aad:	mov    QWORD PTR [rsp+0x20],rax
   140008ab2:	call   QWORD PTR [rip+0xb6d8]        # 0x140014190
   140008ab8:	mov    rbx,QWORD PTR [rsp+0x60]
   140008abd:	mov    rbp,QWORD PTR [rsp+0x68]
   140008ac2:	mov    rsi,QWORD PTR [rsp+0x70]
   140008ac7:	mov    rdi,QWORD PTR [rsp+0x78]
   140008acc:	add    rsp,0x50
   140008ad0:	pop    r14
   140008ad2:	ret    
   140008ad3:	int3   
   140008ad4:	mov    QWORD PTR [rsp+0x8],rbx
   140008ad9:	mov    QWORD PTR [rsp+0x10],rsi
   140008ade:	push   rdi
   140008adf:	sub    rsp,0x20
   140008ae3:	mov    esi,edx
   140008ae5:	lea    r9,[rip+0xcfec]        # 0x140015ad8
   140008aec:	mov    rbx,rcx
   140008aef:	lea    rdx,[rip+0xcfe2]        # 0x140015ad8
   140008af6:	mov    ecx,0x18
   140008afb:	lea    r8,[rip+0xcfce]        # 0x140015ad0
   140008b02:	call   0x140008520
   140008b07:	mov    rdi,rax
   140008b0a:	test   rax,rax
   140008b0d:	je     0x140008b21
   140008b0f:	mov    rcx,rax
   140008b12:	call   QWORD PTR [rip+0xb740]        # 0x140014258
   140008b18:	mov    edx,esi
   140008b1a:	mov    rcx,rbx
   140008b1d:	call   rdi
   140008b1f:	jmp    0x140008b29
   140008b21:	mov    rcx,rbx
   140008b24:	call   0x14000dfb8
   140008b29:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b2e:	mov    rsi,QWORD PTR [rsp+0x38]
   140008b33:	add    rsp,0x20
   140008b37:	pop    rdi
   140008b38:	ret    
   140008b39:	int3   
   140008b3a:	int3   
   140008b3b:	int3   
   140008b3c:	mov    QWORD PTR [rsp+0x8],rdi
   140008b41:	mov    rdx,QWORD PTR [rip+0x154d0]        # 0x14001e018
   140008b48:	lea    rdi,[rip+0x16321]        # 0x14001ee70
   140008b4f:	mov    eax,edx
   140008b51:	mov    ecx,0x40
   140008b56:	and    eax,0x3f
   140008b59:	sub    ecx,eax
   140008b5b:	xor    eax,eax
   140008b5d:	ror    rax,cl
   140008b60:	mov    ecx,0x20
   140008b65:	xor    rax,rdx
   140008b68:	rep stos QWORD PTR es:[rdi],rax
   140008b6b:	mov    rdi,QWORD PTR [rsp+0x8]
   140008b70:	mov    al,0x1
   140008b72:	ret    
   140008b73:	int3   
   140008b74:	mov    QWORD PTR [rsp+0x10],rbx
   140008b79:	push   rdi
   140008b7a:	sub    rsp,0x20
   140008b7e:	mov    eax,DWORD PTR [rip+0x163ec]        # 0x14001ef70
   140008b84:	xor    ebx,ebx
   140008b86:	test   eax,eax
   140008b88:	je     0x140008b92
   140008b8a:	cmp    eax,0x1
   140008b8d:	sete   al
   140008b90:	jmp    0x140008bee
   140008b92:	lea    r9,[rip+0xceff]        # 0x140015a98
   140008b99:	mov    ecx,0x8
   140008b9e:	lea    r8,[rip+0xceeb]        # 0x140015a90
   140008ba5:	lea    rdx,[rip+0xceec]        # 0x140015a98
   140008bac:	call   0x140008520
   140008bb1:	mov    rdi,rax
   140008bb4:	test   rax,rax
   140008bb7:	je     0x140008be1
   140008bb9:	mov    rcx,rax
   140008bbc:	mov    DWORD PTR [rsp+0x30],ebx
   140008bc0:	call   QWORD PTR [rip+0xb692]        # 0x140014258
   140008bc6:	xor    edx,edx
   140008bc8:	lea    rcx,[rsp+0x30]
   140008bcd:	call   rdi
   140008bcf:	cmp    eax,0x7a
   140008bd2:	jne    0x140008be1
   140008bd4:	lea    ecx,[rax-0x79]
   140008bd7:	mov    al,0x1
   140008bd9:	xchg   DWORD PTR [rip+0x16391],ecx        # 0x14001ef70
   140008bdf:	jmp    0x140008bee
   140008be1:	mov    eax,0x2
   140008be6:	xchg   DWORD PTR [rip+0x16384],eax        # 0x14001ef70
   140008bec:	xor    al,al
   140008bee:	mov    rbx,QWORD PTR [rsp+0x38]
   140008bf3:	add    rsp,0x20
   140008bf7:	pop    rdi
   140008bf8:	ret    
   140008bf9:	int3   
   140008bfa:	int3   
   140008bfb:	int3   
   140008bfc:	rex push rbx
   140008bfe:	sub    rsp,0x20
   140008c02:	test   cl,cl
   140008c04:	jne    0x140008c35
   140008c06:	lea    rbx,[rip+0x161c3]        # 0x14001edd0
   140008c0d:	mov    rcx,QWORD PTR [rbx]
   140008c10:	test   rcx,rcx
   140008c13:	je     0x140008c25
   140008c15:	cmp    rcx,0xffffffffffffffff
   140008c19:	je     0x140008c21
   140008c1b:	call   QWORD PTR [rip+0xb4ef]        # 0x140014110
   140008c21:	and    QWORD PTR [rbx],0x0
   140008c25:	add    rbx,0x8
   140008c29:	lea    rax,[rip+0x16240]        # 0x14001ee70
   140008c30:	cmp    rbx,rax
   140008c33:	jne    0x140008c0d
   140008c35:	mov    al,0x1
   140008c37:	add    rsp,0x20
   140008c3b:	pop    rbx
   140008c3c:	ret    
   140008c3d:	int3   
   140008c3e:	int3   
   140008c3f:	int3   
   140008c40:	mov    QWORD PTR [rsp+0x8],rbx
   140008c45:	push   rdi
   140008c46:	sub    rsp,0x30
   140008c4a:	and    DWORD PTR [rsp+0x20],0x0
   140008c4f:	mov    ecx,0x8
   140008c54:	call   0x14000ad90
   140008c59:	nop
   140008c5a:	mov    ebx,0x3
   140008c5f:	mov    DWORD PTR [rsp+0x24],ebx
   140008c63:	cmp    ebx,DWORD PTR [rip+0x15f87]        # 0x14001ebf0
   140008c69:	je     0x140008cd9
   140008c6b:	movsxd rdi,ebx
   140008c6e:	mov    rax,QWORD PTR [rip+0x15f83]        # 0x14001ebf8
   140008c75:	mov    rax,QWORD PTR [rax+rdi*8]
   140008c79:	test   rax,rax
   140008c7c:	jne    0x140008c80
   140008c7e:	jmp    0x140008cd5
   140008c80:	mov    ecx,DWORD PTR [rax+0x14]
   140008c83:	shr    ecx,0xd
   140008c86:	test   cl,0x1
   140008c89:	je     0x140008ca4
   140008c8b:	mov    rcx,QWORD PTR [rip+0x15f66]        # 0x14001ebf8
   140008c92:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140008c96:	call   0x14000e070
   140008c9b:	cmp    eax,0xffffffff
   140008c9e:	je     0x140008ca4
   140008ca0:	inc    DWORD PTR [rsp+0x20]
   140008ca4:	mov    rax,QWORD PTR [rip+0x15f4d]        # 0x14001ebf8
   140008cab:	mov    rcx,QWORD PTR [rax+rdi*8]
   140008caf:	add    rcx,0x30
   140008cb3:	call   QWORD PTR [rip+0xb427]        # 0x1400140e0
   140008cb9:	mov    rcx,QWORD PTR [rip+0x15f38]        # 0x14001ebf8
   140008cc0:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140008cc4:	call   0x140007cc4
   140008cc9:	mov    rax,QWORD PTR [rip+0x15f28]        # 0x14001ebf8
   140008cd0:	and    QWORD PTR [rax+rdi*8],0x0
   140008cd5:	inc    ebx
   140008cd7:	jmp    0x140008c5f
   140008cd9:	mov    ecx,0x8
   140008cde:	call   0x14000ade4
   140008ce3:	mov    eax,DWORD PTR [rsp+0x20]
   140008ce7:	mov    rbx,QWORD PTR [rsp+0x40]
   140008cec:	add    rsp,0x30
   140008cf0:	pop    rdi
   140008cf1:	ret    
   140008cf2:	int3   
   140008cf3:	int3   
   140008cf4:	mov    QWORD PTR [rsp+0x8],rbx
   140008cf9:	mov    QWORD PTR [rsp+0x10],rsi
   140008cfe:	push   rdi
   140008cff:	sub    rsp,0x20
   140008d03:	mov    rbx,rcx
   140008d06:	mov    eax,DWORD PTR [rcx+0x14]
   140008d09:	and    al,0x3
   140008d0b:	cmp    al,0x2
   140008d0d:	jne    0x140008d59
   140008d0f:	mov    eax,DWORD PTR [rcx+0x14]
   140008d12:	test   al,0xc0
   140008d14:	je     0x140008d59
   140008d16:	mov    edi,DWORD PTR [rcx]
   140008d18:	sub    edi,DWORD PTR [rcx+0x8]
   140008d1b:	and    DWORD PTR [rcx+0x10],0x0
   140008d1f:	mov    rsi,QWORD PTR [rcx+0x8]
   140008d23:	mov    QWORD PTR [rcx],rsi
   140008d26:	test   edi,edi
   140008d28:	jle    0x140008d59
   140008d2a:	call   0x14000abe4
   140008d2f:	mov    ecx,eax
   140008d31:	mov    r8d,edi
   140008d34:	mov    rdx,rsi
   140008d37:	call   0x14000e79c
   140008d3c:	cmp    edi,eax
   140008d3e:	je     0x140008d4a
   140008d40:	lock or DWORD PTR [rbx+0x14],0x10
   140008d45:	or     eax,0xffffffff
   140008d48:	jmp    0x140008d5b
   140008d4a:	mov    eax,DWORD PTR [rbx+0x14]
   140008d4d:	shr    eax,0x2
   140008d50:	test   al,0x1
   140008d52:	je     0x140008d59
   140008d54:	lock and DWORD PTR [rbx+0x14],0xfffffffd
   140008d59:	xor    eax,eax
   140008d5b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d60:	mov    rsi,QWORD PTR [rsp+0x38]
   140008d65:	add    rsp,0x20
   140008d69:	pop    rdi
   140008d6a:	ret    
   140008d6b:	int3   
   140008d6c:	rex push rbx
   140008d6e:	sub    rsp,0x20
   140008d72:	mov    rbx,rcx
   140008d75:	test   rcx,rcx
   140008d78:	jne    0x140008d84
   140008d7a:	add    rsp,0x20
   140008d7e:	pop    rbx
   140008d7f:	jmp    0x140008dc4
   140008d84:	call   0x140008cf4
   140008d89:	test   eax,eax
   140008d8b:	je     0x140008d92
   140008d8d:	or     eax,0xffffffff
   140008d90:	jmp    0x140008db1
   140008d92:	mov    eax,DWORD PTR [rbx+0x14]
   140008d95:	shr    eax,0xb
   140008d98:	test   al,0x1
   140008d9a:	je     0x140008daf
   140008d9c:	mov    rcx,rbx
   140008d9f:	call   0x14000abe4
   140008da4:	mov    ecx,eax
   140008da6:	call   0x14000e168
   140008dab:	test   eax,eax
   140008dad:	jne    0x140008d8d
   140008daf:	xor    eax,eax
   140008db1:	add    rsp,0x20
   140008db5:	pop    rbx
   140008db6:	ret    
   140008db7:	int3   
   140008db8:	mov    ecx,0x1
   140008dbd:	jmp    0x140008dc4
   140008dc2:	int3   
   140008dc3:	int3   
   140008dc4:	mov    rax,rsp
   140008dc7:	mov    QWORD PTR [rax+0x8],rbx
   140008dcb:	mov    QWORD PTR [rax+0x18],rsi
   140008dcf:	push   rdi
   140008dd0:	push   r14
   140008dd2:	push   r15
   140008dd4:	sub    rsp,0x40
   140008dd8:	mov    esi,ecx
   140008dda:	and    DWORD PTR [rax-0x34],0x0
   140008dde:	and    DWORD PTR [rax-0x38],0x0
   140008de2:	mov    ecx,0x8
   140008de7:	call   0x14000ad90
   140008dec:	nop
   140008ded:	mov    rdi,QWORD PTR [rip+0x15e04]        # 0x14001ebf8
   140008df4:	movsxd rax,DWORD PTR [rip+0x15df5]        # 0x14001ebf0
   140008dfb:	lea    r14,[rdi+rax*8]
   140008dff:	or     r15d,0xffffffff
   140008e03:	mov    QWORD PTR [rsp+0x28],rdi
   140008e08:	cmp    rdi,r14
   140008e0b:	je     0x140008e7e
   140008e0d:	mov    rbx,QWORD PTR [rdi]
   140008e10:	mov    QWORD PTR [rsp+0x68],rbx
   140008e15:	mov    QWORD PTR [rsp+0x30],rbx
   140008e1a:	test   rbx,rbx
   140008e1d:	jne    0x140008e21
   140008e1f:	jmp    0x140008e78
   140008e21:	mov    rcx,rbx
   140008e24:	call   0x1400036e8
   140008e29:	nop
   140008e2a:	mov    eax,DWORD PTR [rbx+0x14]
   140008e2d:	shr    eax,0xd
   140008e30:	test   al,0x1
   140008e32:	je     0x140008e70
   140008e34:	cmp    esi,0x1
   140008e37:	jne    0x140008e4c
   140008e39:	mov    rcx,rbx
   140008e3c:	call   0x140008d6c
   140008e41:	cmp    eax,r15d
   140008e44:	je     0x140008e70
   140008e46:	inc    DWORD PTR [rsp+0x24]
   140008e4a:	jmp    0x140008e70
   140008e4c:	test   esi,esi
   140008e4e:	jne    0x140008e70
   140008e50:	mov    eax,DWORD PTR [rbx+0x14]
   140008e53:	shr    eax,1
   140008e55:	test   al,0x1
   140008e57:	je     0x140008e70
   140008e59:	mov    rcx,rbx
   140008e5c:	call   0x140008d6c
   140008e61:	mov    edx,DWORD PTR [rsp+0x20]
   140008e65:	cmp    eax,r15d
   140008e68:	cmove  edx,r15d
   140008e6c:	mov    DWORD PTR [rsp+0x20],edx
   140008e70:	mov    rcx,rbx
   140008e73:	call   0x1400036f4
   140008e78:	add    rdi,0x8
   140008e7c:	jmp    0x140008e03
   140008e7e:	mov    ecx,0x8
   140008e83:	call   0x14000ade4
   140008e88:	mov    eax,DWORD PTR [rsp+0x20]
   140008e8c:	cmp    esi,0x1
   140008e8f:	cmove  eax,DWORD PTR [rsp+0x24]
   140008e94:	mov    rbx,QWORD PTR [rsp+0x60]
   140008e99:	mov    rsi,QWORD PTR [rsp+0x70]
   140008e9e:	add    rsp,0x40
   140008ea2:	pop    r15
   140008ea4:	pop    r14
   140008ea6:	pop    rdi
   140008ea7:	ret    
   140008ea8:	rex push rbx
   140008eaa:	sub    rsp,0x20
   140008eae:	mov    rbx,rcx
   140008eb1:	mov    eax,DWORD PTR [rcx+0x14]
   140008eb4:	shr    eax,0xd
   140008eb7:	test   al,0x1
   140008eb9:	je     0x140008ee2
   140008ebb:	mov    eax,DWORD PTR [rcx+0x14]
   140008ebe:	shr    eax,0x6
   140008ec1:	test   al,0x1
   140008ec3:	je     0x140008ee2
   140008ec5:	mov    rcx,QWORD PTR [rcx+0x8]
   140008ec9:	call   0x140007cc4
   140008ece:	lock and DWORD PTR [rbx+0x14],0xfffffebf
   140008ed6:	xor    eax,eax
   140008ed8:	mov    QWORD PTR [rbx+0x8],rax
   140008edc:	mov    QWORD PTR [rbx],rax
   140008edf:	mov    DWORD PTR [rbx+0x10],eax
   140008ee2:	add    rsp,0x20
   140008ee6:	pop    rbx
   140008ee7:	ret    
   140008ee8:	mov    rax,rsp
   140008eeb:	mov    QWORD PTR [rax+0x8],rbx
   140008eef:	mov    QWORD PTR [rax+0x10],rbp
   140008ef3:	mov    QWORD PTR [rax+0x18],rsi
   140008ef7:	mov    QWORD PTR [rax+0x20],rdi
   140008efb:	push   r14
   140008efd:	sub    rsp,0x90
   140008f04:	lea    rcx,[rax-0x78]
   140008f08:	call   QWORD PTR [rip+0xb18a]        # 0x140014098
   140008f0e:	xor    r14d,r14d
   140008f11:	cmp    WORD PTR [rsp+0x62],r14w
   140008f17:	je     0x140008fb5
   140008f1d:	mov    rax,QWORD PTR [rsp+0x68]
   140008f22:	test   rax,rax
   140008f25:	je     0x140008fb5
   140008f2b:	movsxd rbx,DWORD PTR [rax]
   140008f2e:	lea    rsi,[rax+0x4]
   140008f32:	mov    edi,0x2000
   140008f37:	add    rbx,rsi
   140008f3a:	cmp    DWORD PTR [rax],edi
   140008f3c:	cmovl  edi,DWORD PTR [rax]
   140008f3f:	mov    ecx,edi
   140008f41:	call   0x14000ce04
   140008f46:	cmp    edi,DWORD PTR [rip+0x16434]        # 0x14001f380
   140008f4c:	cmovg  edi,DWORD PTR [rip+0x1642d]        # 0x14001f380
   140008f53:	test   edi,edi
   140008f55:	je     0x140008fb5
   140008f57:	mov    ebp,r14d
   140008f5a:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   140008f5e:	je     0x140008fa5
   140008f60:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   140008f64:	je     0x140008fa5
   140008f66:	test   BYTE PTR [rsi],0x1
   140008f69:	je     0x140008fa5
   140008f6b:	test   BYTE PTR [rsi],0x8
   140008f6e:	jne    0x140008f7d
   140008f70:	mov    rcx,QWORD PTR [rbx]
   140008f73:	call   QWORD PTR [rip+0xb21f]        # 0x140014198
   140008f79:	test   eax,eax
   140008f7b:	je     0x140008fa5
   140008f7d:	mov    rcx,rbp
   140008f80:	lea    rdx,[rip+0x15ff9]        # 0x14001ef80
   140008f87:	and    ecx,0x3f
   140008f8a:	mov    rax,rbp
   140008f8d:	sar    rax,0x6
   140008f91:	shl    rcx,0x6
   140008f95:	add    rcx,QWORD PTR [rdx+rax*8]
   140008f99:	mov    rax,QWORD PTR [rbx]
   140008f9c:	mov    QWORD PTR [rcx+0x28],rax
   140008fa0:	mov    al,BYTE PTR [rsi]
   140008fa2:	mov    BYTE PTR [rcx+0x38],al
   140008fa5:	inc    rbp
   140008fa8:	inc    rsi
   140008fab:	add    rbx,0x8
   140008faf:	sub    rdi,0x1
   140008fb3:	jne    0x140008f5a
   140008fb5:	lea    r11,[rsp+0x90]
   140008fbd:	mov    rbx,QWORD PTR [r11+0x10]
   140008fc1:	mov    rbp,QWORD PTR [r11+0x18]
   140008fc5:	mov    rsi,QWORD PTR [r11+0x20]
   140008fc9:	mov    rdi,QWORD PTR [r11+0x28]
   140008fcd:	mov    rsp,r11
   140008fd0:	pop    r14
   140008fd2:	ret    
   140008fd3:	int3   
   140008fd4:	mov    QWORD PTR [rsp+0x8],rbx
   140008fd9:	mov    QWORD PTR [rsp+0x10],rsi
   140008fde:	mov    QWORD PTR [rsp+0x18],rdi
   140008fe3:	push   r14
   140008fe5:	sub    rsp,0x20
   140008fe9:	xor    edi,edi
   140008feb:	xor    r14d,r14d
   140008fee:	movsxd rbx,edi
   140008ff1:	lea    rcx,[rip+0x15f88]        # 0x14001ef80
   140008ff8:	mov    rax,rbx
   140008ffb:	and    ebx,0x3f
   140008ffe:	sar    rax,0x6
   140009002:	shl    rbx,0x6
   140009006:	add    rbx,QWORD PTR [rcx+rax*8]
   14000900a:	mov    rax,QWORD PTR [rbx+0x28]
   14000900e:	add    rax,0x2
   140009012:	cmp    rax,0x1
   140009016:	jbe    0x140009021
   140009018:	or     BYTE PTR [rbx+0x38],0x80
   14000901c:	jmp    0x1400090aa
   140009021:	mov    BYTE PTR [rbx+0x38],0x81
   140009025:	mov    ecx,edi
   140009027:	test   edi,edi
   140009029:	je     0x140009041
   14000902b:	sub    ecx,0x1
   14000902e:	je     0x14000903a
   140009030:	cmp    ecx,0x1
   140009033:	mov    ecx,0xfffffff4
   140009038:	jmp    0x140009046
   14000903a:	mov    ecx,0xfffffff5
   14000903f:	jmp    0x140009046
   140009041:	mov    ecx,0xfffffff6
   140009046:	call   QWORD PTR [rip+0xb104]        # 0x140014150
   14000904c:	mov    rsi,rax
   14000904f:	lea    rcx,[rax+0x1]
   140009053:	cmp    rcx,0x1
   140009057:	jbe    0x140009064
   140009059:	mov    rcx,rax
   14000905c:	call   QWORD PTR [rip+0xb136]        # 0x140014198
   140009062:	jmp    0x140009066
   140009064:	xor    eax,eax
   140009066:	test   eax,eax
   140009068:	je     0x140009087
   14000906a:	movzx  ecx,al
   14000906d:	mov    QWORD PTR [rbx+0x28],rsi
   140009071:	cmp    ecx,0x2
   140009074:	jne    0x14000907c
   140009076:	or     BYTE PTR [rbx+0x38],0x40
   14000907a:	jmp    0x1400090aa
   14000907c:	cmp    ecx,0x3
   14000907f:	jne    0x1400090aa
   140009081:	or     BYTE PTR [rbx+0x38],0x8
   140009085:	jmp    0x1400090aa
   140009087:	or     BYTE PTR [rbx+0x38],0x40
   14000908b:	mov    QWORD PTR [rbx+0x28],0xfffffffffffffffe
   140009093:	mov    rax,QWORD PTR [rip+0x15b5e]        # 0x14001ebf8
   14000909a:	test   rax,rax
   14000909d:	je     0x1400090aa
   14000909f:	mov    rax,QWORD PTR [r14+rax*1]
   1400090a3:	mov    DWORD PTR [rax+0x18],0xfffffffe
   1400090aa:	inc    edi
   1400090ac:	add    r14,0x8
   1400090b0:	cmp    edi,0x3
   1400090b3:	jne    0x140008fee
   1400090b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400090be:	mov    rsi,QWORD PTR [rsp+0x38]
   1400090c3:	mov    rdi,QWORD PTR [rsp+0x40]
   1400090c8:	add    rsp,0x20
   1400090cc:	pop    r14
   1400090ce:	ret    
   1400090cf:	int3   
   1400090d0:	rex push rbx
   1400090d2:	sub    rsp,0x20
   1400090d6:	mov    ecx,0x7
   1400090db:	call   0x14000ad90
   1400090e0:	xor    ebx,ebx
   1400090e2:	xor    ecx,ecx
   1400090e4:	call   0x14000ce04
   1400090e9:	test   eax,eax
   1400090eb:	jne    0x1400090f9
   1400090ed:	call   0x140008ee8
   1400090f2:	call   0x140008fd4
   1400090f7:	mov    bl,0x1
   1400090f9:	mov    ecx,0x7
   1400090fe:	call   0x14000ade4
   140009103:	mov    al,bl
   140009105:	add    rsp,0x20
   140009109:	pop    rbx
   14000910a:	ret    
   14000910b:	int3   
   14000910c:	mov    QWORD PTR [rsp+0x8],rbx
   140009111:	push   rdi
   140009112:	sub    rsp,0x20
   140009116:	xor    ebx,ebx
   140009118:	lea    rdi,[rip+0x15e61]        # 0x14001ef80
   14000911f:	mov    rcx,QWORD PTR [rbx+rdi*1]
   140009123:	test   rcx,rcx
   140009126:	je     0x140009132
   140009128:	call   0x14000cdb4
   14000912d:	and    QWORD PTR [rbx+rdi*1],0x0
   140009132:	add    rbx,0x8
   140009136:	cmp    rbx,0x400
   14000913d:	jb     0x140009118
   14000913f:	mov    al,0x1
   140009141:	mov    rbx,QWORD PTR [rsp+0x30]
   140009146:	add    rsp,0x20
   14000914a:	pop    rdi
   14000914b:	ret    
   14000914c:	rex push rbx
   14000914e:	sub    rsp,0x40
   140009152:	movsxd rbx,ecx
   140009155:	mov    eax,DWORD PTR [rip+0x15c1d]        # 0x14001ed78
   14000915b:	test   eax,eax
   14000915d:	je     0x1400091aa
   14000915f:	xor    edx,edx
   140009161:	lea    rcx,[rsp+0x20]
   140009166:	call   0x140003ab0
   14000916b:	mov    rax,QWORD PTR [rsp+0x28]
   140009170:	cmp    DWORD PTR [rax+0x8],0x1
   140009174:	jle    0x14000918b
   140009176:	lea    r8,[rsp+0x28]
   14000917b:	mov    edx,0x4
   140009180:	mov    ecx,ebx
   140009182:	call   0x14000dde0
   140009187:	mov    edx,eax
   140009189:	jmp    0x140009195
   14000918b:	mov    rax,QWORD PTR [rax]
   14000918e:	movzx  edx,WORD PTR [rax+rbx*2]
   140009192:	and    edx,0x4
   140009195:	cmp    BYTE PTR [rsp+0x38],0x0
   14000919a:	je     0x1400091b8
   14000919c:	mov    rax,QWORD PTR [rsp+0x20]
   1400091a1:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   1400091a8:	jmp    0x1400091b8
   1400091aa:	mov    rax,QWORD PTR [rip+0x14fff]        # 0x14001e1b0
   1400091b1:	movzx  edx,WORD PTR [rax+rbx*2]
   1400091b5:	and    edx,0x4
   1400091b8:	mov    eax,edx
   1400091ba:	add    rsp,0x40
   1400091be:	pop    rbx
   1400091bf:	ret    
   1400091c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400091c5:	push   rdi
   1400091c6:	sub    rsp,0x20
   1400091ca:	movsxd rdi,ecx
   1400091cd:	test   rdx,rdx
   1400091d0:	je     0x1400091f1
   1400091d2:	mov    rax,QWORD PTR [rdx]
   1400091d5:	cmp    DWORD PTR [rax+0x8],0x1
   1400091d9:	jle    0x1400091ec
   1400091db:	mov    r8,rdx
   1400091de:	mov    ecx,edi
   1400091e0:	mov    edx,0x1
   1400091e5:	call   0x14000dde0
   1400091ea:	jmp    0x1400091fd
   1400091ec:	mov    rax,QWORD PTR [rax]
   1400091ef:	jmp    0x1400091f6
   1400091f1:	call   0x14000d310
   1400091f6:	movzx  eax,WORD PTR [rax+rdi*2]
   1400091fa:	and    eax,0x1
   1400091fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140009202:	test   eax,eax
   140009204:	setne  al
   140009207:	add    rsp,0x20
   14000920b:	pop    rdi
   14000920c:	ret    
   14000920d:	int3   
   14000920e:	int3   
   14000920f:	int3   
   140009210:	mov    QWORD PTR [rsp+0x10],rbx
   140009215:	mov    QWORD PTR [rsp+0x20],rsi
   14000921a:	push   rbp
   14000921b:	mov    rbp,rsp
   14000921e:	sub    rsp,0x70
   140009222:	movsxd rbx,ecx
   140009225:	lea    rcx,[rbp-0x20]
   140009229:	call   0x140003ab0
   14000922e:	cmp    ebx,0x100
   140009234:	jae    0x14000926e
   140009236:	lea    rdx,[rbp-0x18]
   14000923a:	mov    ecx,ebx
   14000923c:	call   0x1400091c0
   140009241:	test   al,al
   140009243:	je     0x140009254
   140009245:	mov    rax,QWORD PTR [rbp-0x18]
   140009249:	mov    rcx,QWORD PTR [rax+0x110]
   140009250:	movzx  ebx,BYTE PTR [rcx+rbx*1]
   140009254:	cmp    BYTE PTR [rbp-0x8],0x0
   140009258:	je     0x14000933a
   14000925e:	mov    rax,QWORD PTR [rbp-0x20]
   140009262:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140009269:	jmp    0x14000933a
   14000926e:	xor    eax,eax
   140009270:	mov    WORD PTR [rbp+0x10],ax
   140009274:	mov    BYTE PTR [rbp+0x12],al
   140009277:	mov    rax,QWORD PTR [rbp-0x18]
   14000927b:	cmp    DWORD PTR [rax+0x8],0x1
   14000927f:	jle    0x1400092a9
   140009281:	mov    esi,ebx
   140009283:	lea    rdx,[rbp-0x18]
   140009287:	sar    esi,0x8
   14000928a:	movzx  ecx,sil
   14000928e:	call   0x14000eb6c
   140009293:	test   eax,eax
   140009295:	je     0x1400092a9
   140009297:	mov    BYTE PTR [rbp+0x10],sil
   14000929b:	mov    ecx,0x2
   1400092a0:	mov    BYTE PTR [rbp+0x11],bl
   1400092a3:	mov    BYTE PTR [rbp+0x12],0x0
   1400092a7:	jmp    0x1400092c0
   1400092a9:	call   0x140008500
   1400092ae:	mov    ecx,0x1
   1400092b3:	mov    DWORD PTR [rax],0x2a
   1400092b9:	mov    BYTE PTR [rbp+0x10],bl
   1400092bc:	mov    BYTE PTR [rbp+0x11],0x0
   1400092c0:	mov    rdx,QWORD PTR [rbp-0x18]
   1400092c4:	lea    r9,[rbp+0x10]
   1400092c8:	xor    eax,eax
   1400092ca:	mov    DWORD PTR [rsp+0x40],0x1
   1400092d2:	mov    WORD PTR [rbp+0x20],ax
   1400092d6:	mov    r8d,0x100
   1400092dc:	mov    BYTE PTR [rbp+0x22],al
   1400092df:	mov    eax,DWORD PTR [rdx+0xc]
   1400092e2:	mov    rdx,QWORD PTR [rdx+0x138]
   1400092e9:	mov    DWORD PTR [rsp+0x38],eax
   1400092ed:	lea    rax,[rbp+0x20]
   1400092f1:	mov    DWORD PTR [rsp+0x30],0x3
   1400092f9:	mov    QWORD PTR [rsp+0x28],rax
   1400092fe:	mov    DWORD PTR [rsp+0x20],ecx
   140009302:	lea    rcx,[rbp-0x18]
   140009306:	call   0x14000ef08
   14000930b:	test   eax,eax
   14000930d:	je     0x140009254
   140009313:	movzx  ebx,BYTE PTR [rbp+0x20]
   140009317:	cmp    eax,0x1
   14000931a:	je     0x140009254
   140009320:	movzx  ecx,BYTE PTR [rbp+0x21]
   140009324:	shl    ebx,0x8
   140009327:	or     ebx,ecx
   140009329:	cmp    BYTE PTR [rbp-0x8],0x0
   14000932d:	je     0x14000933a
   14000932f:	mov    rcx,QWORD PTR [rbp-0x20]
   140009333:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14000933a:	lea    r11,[rsp+0x70]
   14000933f:	mov    eax,ebx
   140009341:	mov    rbx,QWORD PTR [r11+0x18]
   140009345:	mov    rsi,QWORD PTR [r11+0x28]
   140009349:	mov    rsp,r11
   14000934c:	pop    rbp
   14000934d:	ret    
   14000934e:	int3   
   14000934f:	int3   
   140009350:	sub    rsp,0x28
   140009354:	mov    eax,DWORD PTR [rip+0x15a1e]        # 0x14001ed78
   14000935a:	test   eax,eax
   14000935c:	je     0x140009369
   14000935e:	xor    edx,edx
   140009360:	call   0x140009210
   140009365:	mov    ecx,eax
   140009367:	jmp    0x140009374
   140009369:	lea    eax,[rcx-0x41]
   14000936c:	cmp    eax,0x19
   14000936f:	ja     0x140009374
   140009371:	add    ecx,0x20
   140009374:	mov    eax,ecx
   140009376:	add    rsp,0x28
   14000937a:	ret    
   14000937b:	int3   
   14000937c:	mov    QWORD PTR [rcx],rdx
   14000937f:	mov    QWORD PTR [rcx+0x8],r8
   140009383:	test   r8,r8
   140009386:	je     0x14000938b
   140009388:	mov    QWORD PTR [r8],rdx
   14000938b:	mov    rax,rcx
   14000938e:	ret    
   14000938f:	int3   
   140009390:	rex push rbx
   140009392:	sub    rsp,0x30
   140009396:	mov    ebx,r8d
   140009399:	mov    r8,rdx
   14000939c:	mov    rdx,rcx
   14000939f:	lea    rcx,[rsp+0x20]
   1400093a4:	call   0x14000937c
   1400093a9:	mov    rdx,rax
   1400093ac:	mov    r9b,0x1
   1400093af:	mov    r8d,ebx
   1400093b2:	xor    ecx,ecx
   1400093b4:	call   0x140007ec0
   1400093b9:	add    rsp,0x30
   1400093bd:	pop    rbx
   1400093be:	ret    
   1400093bf:	int3   
   1400093c0:	mov    rax,rsp
   1400093c3:	mov    QWORD PTR [rax+0x8],rbx
   1400093c7:	mov    QWORD PTR [rax+0x10],rbp
   1400093cb:	mov    QWORD PTR [rax+0x18],rsi
   1400093cf:	mov    QWORD PTR [rax+0x20],rdi
   1400093d3:	push   r14
   1400093d5:	sub    rsp,0x50
   1400093d9:	xor    r14d,r14d
   1400093dc:	mov    rbp,r8
   1400093df:	mov    rsi,rdx
   1400093e2:	mov    rdi,rcx
   1400093e5:	test   rdx,rdx
   1400093e8:	je     0x1400093fd
   1400093ea:	test   r8,r8
   1400093ed:	je     0x1400093fd
   1400093ef:	cmp    BYTE PTR [rdx],r14b
   1400093f2:	jne    0x14000941a
   1400093f4:	test   rcx,rcx
   1400093f7:	je     0x1400093fd
   1400093f9:	mov    WORD PTR [rcx],r14w
   1400093fd:	xor    eax,eax
   1400093ff:	mov    rbx,QWORD PTR [rsp+0x60]
   140009404:	mov    rbp,QWORD PTR [rsp+0x68]
   140009409:	mov    rsi,QWORD PTR [rsp+0x70]
   14000940e:	mov    rdi,QWORD PTR [rsp+0x78]
   140009413:	add    rsp,0x50
   140009417:	pop    r14
   140009419:	ret    
   14000941a:	mov    rdx,r9
   14000941d:	lea    rcx,[rsp+0x30]
   140009422:	call   0x140003ab0
   140009427:	mov    rax,QWORD PTR [rsp+0x38]
   14000942c:	cmp    QWORD PTR [rax+0x138],r14
   140009433:	jne    0x14000944a
   140009435:	test   rdi,rdi
   140009438:	je     0x140009440
   14000943a:	movzx  eax,BYTE PTR [rsi]
   14000943d:	mov    WORD PTR [rdi],ax
   140009440:	mov    ebx,0x1
   140009445:	jmp    0x1400094ee
   14000944a:	movzx  ecx,BYTE PTR [rsi]
   14000944d:	lea    rdx,[rsp+0x38]
   140009452:	call   0x14000eb6c
   140009457:	mov    ebx,0x1
   14000945c:	test   eax,eax
   14000945e:	je     0x1400094b1
   140009460:	mov    rcx,QWORD PTR [rsp+0x38]
   140009465:	mov    r9d,DWORD PTR [rcx+0x8]
   140009469:	cmp    r9d,ebx
   14000946c:	jle    0x14000949d
   14000946e:	cmp    ebp,r9d
   140009471:	jl     0x14000949d
   140009473:	mov    ecx,DWORD PTR [rcx+0xc]
   140009476:	lea    edx,[rbx+0x8]
   140009479:	mov    eax,r14d
   14000947c:	test   rdi,rdi
   14000947f:	mov    r8,rsi
   140009482:	setne  al
   140009485:	mov    DWORD PTR [rsp+0x28],eax
   140009489:	mov    QWORD PTR [rsp+0x20],rdi
   14000948e:	call   QWORD PTR [rip+0xacb4]        # 0x140014148
   140009494:	mov    rcx,QWORD PTR [rsp+0x38]
   140009499:	test   eax,eax
   14000949b:	jne    0x1400094ac
   14000949d:	movsxd rax,DWORD PTR [rcx+0x8]
   1400094a1:	cmp    rbp,rax
   1400094a4:	jb     0x1400094e0
   1400094a6:	cmp    BYTE PTR [rsi+0x1],r14b
   1400094aa:	je     0x1400094e0
   1400094ac:	mov    ebx,DWORD PTR [rcx+0x8]
   1400094af:	jmp    0x1400094ee
   1400094b1:	mov    eax,r14d
   1400094b4:	test   rdi,rdi
   1400094b7:	mov    r9d,ebx
   1400094ba:	mov    r8,rsi
   1400094bd:	setne  al
   1400094c0:	mov    edx,0x9
   1400094c5:	mov    DWORD PTR [rsp+0x28],eax
   1400094c9:	mov    rax,QWORD PTR [rsp+0x38]
   1400094ce:	mov    QWORD PTR [rsp+0x20],rdi
   1400094d3:	mov    ecx,DWORD PTR [rax+0xc]
   1400094d6:	call   QWORD PTR [rip+0xac6c]        # 0x140014148
   1400094dc:	test   eax,eax
   1400094de:	jne    0x1400094ee
   1400094e0:	call   0x140008500
   1400094e5:	or     ebx,0xffffffff
   1400094e8:	mov    DWORD PTR [rax],0x2a
   1400094ee:	cmp    BYTE PTR [rsp+0x48],r14b
   1400094f3:	je     0x140009501
   1400094f5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400094fa:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140009501:	mov    eax,ebx
   140009503:	jmp    0x1400093ff
   140009508:	xor    r9d,r9d
   14000950b:	jmp    0x1400093c0
   140009510:	mov    QWORD PTR [rsp+0x8],rbx
   140009515:	mov    QWORD PTR [rsp+0x18],rsi
   14000951a:	mov    WORD PTR [rsp+0x20],r9w
   140009520:	push   rdi
   140009521:	sub    rsp,0x60
   140009525:	mov    rdi,r8
   140009528:	mov    rsi,rdx
   14000952b:	mov    rbx,rcx
   14000952e:	test   rdx,rdx
   140009531:	jne    0x140009546
   140009533:	test   r8,r8
   140009536:	je     0x140009546
   140009538:	test   rcx,rcx
   14000953b:	je     0x14000953f
   14000953d:	and    DWORD PTR [rcx],edx
   14000953f:	xor    eax,eax
   140009541:	jmp    0x1400095d5
   140009546:	test   rcx,rcx
   140009549:	je     0x14000954e
   14000954b:	or     DWORD PTR [rcx],0xffffffff
   14000954e:	cmp    r8,0x7fffffff
   140009555:	jbe    0x14000956a
   140009557:	call   0x140008500
   14000955c:	mov    ebx,0x16
   140009561:	mov    DWORD PTR [rax],ebx
   140009563:	call   0x1400083e0
   140009568:	jmp    0x1400095d3
   14000956a:	mov    rdx,QWORD PTR [rsp+0x90]
   140009572:	lea    rcx,[rsp+0x40]
   140009577:	call   0x140003ab0
   14000957c:	mov    rax,QWORD PTR [rsp+0x48]
   140009581:	cmp    QWORD PTR [rax+0x138],0x0
   140009589:	jne    0x140009604
   14000958b:	movzx  eax,WORD PTR [rsp+0x88]
   140009593:	mov    ecx,0xff
   140009598:	cmp    ax,cx
   14000959b:	jbe    0x1400095e7
   14000959d:	test   rsi,rsi
   1400095a0:	je     0x1400095b4
   1400095a2:	test   rdi,rdi
   1400095a5:	je     0x1400095b4
   1400095a7:	mov    r8,rdi
   1400095aa:	xor    edx,edx
   1400095ac:	mov    rcx,rsi
   1400095af:	call   0x140002cb0
   1400095b4:	call   0x140008500
   1400095b9:	mov    ebx,0x2a
   1400095be:	mov    DWORD PTR [rax],ebx
   1400095c0:	cmp    BYTE PTR [rsp+0x58],0x0
   1400095c5:	je     0x1400095d3
   1400095c7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400095cc:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   1400095d3:	mov    eax,ebx
   1400095d5:	lea    r11,[rsp+0x60]
   1400095da:	mov    rbx,QWORD PTR [r11+0x10]
   1400095de:	mov    rsi,QWORD PTR [r11+0x20]
   1400095e2:	mov    rsp,r11
   1400095e5:	pop    rdi
   1400095e6:	ret    
   1400095e7:	test   rsi,rsi
   1400095ea:	je     0x1400095f7
   1400095ec:	test   rdi,rdi
   1400095ef:	je     0x14000967e
   1400095f5:	mov    BYTE PTR [rsi],al
   1400095f7:	test   rbx,rbx
   1400095fa:	je     0x140009651
   1400095fc:	mov    DWORD PTR [rbx],0x1
   140009602:	jmp    0x140009651
   140009604:	and    DWORD PTR [rsp+0x78],0x0
   140009609:	lea    rcx,[rsp+0x78]
   14000960e:	mov    QWORD PTR [rsp+0x38],rcx
   140009613:	lea    r8,[rsp+0x88]
   14000961b:	and    QWORD PTR [rsp+0x30],0x0
   140009621:	mov    r9d,0x1
   140009627:	mov    ecx,DWORD PTR [rax+0xc]
   14000962a:	xor    edx,edx
   14000962c:	mov    DWORD PTR [rsp+0x28],edi
   140009630:	mov    QWORD PTR [rsp+0x20],rsi
   140009635:	call   QWORD PTR [rip+0xab05]        # 0x140014140
   14000963b:	test   eax,eax
   14000963d:	je     0x140009658
   14000963f:	cmp    DWORD PTR [rsp+0x78],0x0
   140009644:	jne    0x1400095b4
   14000964a:	test   rbx,rbx
   14000964d:	je     0x140009651
   14000964f:	mov    DWORD PTR [rbx],eax
   140009651:	xor    ebx,ebx
   140009653:	jmp    0x1400095c0
   140009658:	call   QWORD PTR [rip+0xa9ba]        # 0x140014018
   14000965e:	cmp    eax,0x7a
   140009661:	jne    0x1400095b4
   140009667:	test   rsi,rsi
   14000966a:	je     0x14000967e
   14000966c:	test   rdi,rdi
   14000966f:	je     0x14000967e
   140009671:	mov    r8,rdi
   140009674:	xor    edx,edx
   140009676:	mov    rcx,rsi
   140009679:	call   0x140002cb0
   14000967e:	call   0x140008500
   140009683:	mov    ebx,0x22
   140009688:	mov    DWORD PTR [rax],ebx
   14000968a:	call   0x1400083e0
   14000968f:	jmp    0x1400095c0
   140009694:	sub    rsp,0x38
   140009698:	and    QWORD PTR [rsp+0x20],0x0
   14000969e:	call   0x140009510
   1400096a3:	add    rsp,0x38
   1400096a7:	ret    
   1400096a8:	rex push rbp
   1400096aa:	sub    rsp,0x20
   1400096ae:	lea    rbp,[rsp+0x20]
   1400096b3:	and    rbp,0xffffffffffffffe0
   1400096b7:	mov    eax,DWORD PTR [rip+0x1494b]        # 0x14001e008
   1400096bd:	mov    r9,rcx
   1400096c0:	cmp    eax,0x5
   1400096c3:	jl     0x140009755
   1400096c9:	mov    r8,rcx
   1400096cc:	mov    eax,0x20
   1400096d1:	and    r8d,0x1f
   1400096d5:	sub    rax,r8
   1400096d8:	neg    r8
   1400096db:	sbb    r10,r10
   1400096de:	and    r10,rax
   1400096e1:	cmp    rdx,r10
   1400096e4:	cmovb  r10,rdx
   1400096e8:	lea    rax,[r10+rcx*1]
   1400096ec:	jmp    0x1400096f6
   1400096ee:	cmp    BYTE PTR [rcx],0x0
   1400096f1:	je     0x1400096fb
   1400096f3:	inc    rcx
   1400096f6:	cmp    rcx,rax
   1400096f9:	jne    0x1400096ee
   1400096fb:	sub    rcx,r9
   1400096fe:	cmp    rcx,r10
   140009701:	jne    0x1400097f8
   140009707:	mov    r8,rdx
   14000970a:	add    rcx,r9
   14000970d:	sub    r8,r10
   140009710:	mov    rax,r8
   140009713:	and    eax,0x1f
   140009716:	sub    r8,rax
   140009719:	add    r8,rcx
   14000971c:	vxorps ymm2,ymm2,ymm2
   140009720:	jmp    0x140009732
   140009722:	vpcmpeqb ymm1,ymm2,YMMWORD PTR [rcx]
   140009726:	vpmovmskb eax,ymm1
   14000972a:	test   eax,eax
   14000972c:	jne    0x140009737
   14000972e:	add    rcx,0x20
   140009732:	cmp    rcx,r8
   140009735:	jne    0x140009722
   140009737:	lea    rax,[r9+rdx*1]
   14000973b:	jmp    0x140009745
   14000973d:	cmp    BYTE PTR [rcx],0x0
   140009740:	je     0x14000974a
   140009742:	inc    rcx
   140009745:	cmp    rcx,rax
   140009748:	jne    0x14000973d
   14000974a:	sub    rcx,r9
   14000974d:	vzeroupper 
   140009750:	jmp    0x1400097f8
   140009755:	cmp    eax,0x1
   140009758:	jl     0x1400097e2
   14000975e:	and    ecx,0xf
   140009761:	mov    eax,0x10
   140009766:	sub    rax,rcx
   140009769:	neg    rcx
   14000976c:	mov    rcx,r9
   14000976f:	sbb    r10,r10
   140009772:	and    r10,rax
   140009775:	cmp    rdx,r10
   140009778:	cmovb  r10,rdx
   14000977c:	lea    rax,[r10+r9*1]
   140009780:	cmp    r9,rax
   140009783:	je     0x140009792
   140009785:	cmp    BYTE PTR [rcx],0x0
   140009788:	je     0x140009792
   14000978a:	inc    rcx
   14000978d:	cmp    rcx,rax
   140009790:	jne    0x140009785
   140009792:	sub    rcx,r9
   140009795:	cmp    rcx,r10
   140009798:	jne    0x1400097f8
   14000979a:	mov    r8,rdx
   14000979d:	add    rcx,r9
   1400097a0:	sub    r8,r10
   1400097a3:	xorps  xmm1,xmm1
   1400097a6:	mov    rax,r8
   1400097a9:	and    eax,0xf
   1400097ac:	sub    r8,rax
   1400097af:	add    r8,rcx
   1400097b2:	jmp    0x1400097c8
   1400097b4:	movdqa xmm0,xmm1
   1400097b8:	pcmpeqb xmm0,XMMWORD PTR [rcx]
   1400097bc:	pmovmskb eax,xmm0
   1400097c0:	test   eax,eax
   1400097c2:	jne    0x1400097cd
   1400097c4:	add    rcx,0x10
   1400097c8:	cmp    rcx,r8
   1400097cb:	jne    0x1400097b4
   1400097cd:	lea    rax,[r9+rdx*1]
   1400097d1:	jmp    0x1400097db
   1400097d3:	cmp    BYTE PTR [rcx],0x0
   1400097d6:	je     0x1400097f5
   1400097d8:	inc    rcx
   1400097db:	cmp    rcx,rax
   1400097de:	jne    0x1400097d3
   1400097e0:	jmp    0x1400097f5
   1400097e2:	lea    rax,[rcx+rdx*1]
   1400097e6:	jmp    0x1400097f0
   1400097e8:	cmp    BYTE PTR [rcx],0x0
   1400097eb:	je     0x1400097f5
   1400097ed:	inc    rcx
   1400097f0:	cmp    rcx,rax
   1400097f3:	jne    0x1400097e8
   1400097f5:	sub    rcx,r9
   1400097f8:	mov    rax,rcx
   1400097fb:	add    rsp,0x20
   1400097ff:	pop    rbp
   140009800:	ret    
   140009801:	int3   
   140009802:	int3   
   140009803:	int3   
   140009804:	rex push rbp
   140009806:	sub    rsp,0x20
   14000980a:	lea    rbp,[rsp+0x20]
   14000980f:	and    rbp,0xffffffffffffffe0
   140009813:	mov    eax,DWORD PTR [rip+0x147ef]        # 0x14001e008
   140009819:	mov    r10,rdx
   14000981c:	mov    r8,rcx
   14000981f:	cmp    eax,0x5
   140009822:	jl     0x1400098f8
   140009828:	test   cl,0x1
   14000982b:	je     0x140009858
   14000982d:	lea    rax,[rcx+rdx*2]
   140009831:	mov    rdx,rcx
   140009834:	cmp    rcx,rax
   140009837:	je     0x1400099e5
   14000983d:	xor    r9d,r9d
   140009840:	cmp    WORD PTR [rdx],r9w
   140009844:	je     0x1400099e5
   14000984a:	add    rdx,0x2
   14000984e:	cmp    rdx,rax
   140009851:	jne    0x140009840
   140009853:	jmp    0x1400099e5
   140009858:	and    ecx,0x1f
   14000985b:	mov    eax,0x20
   140009860:	sub    rax,rcx
   140009863:	neg    rcx
   140009866:	sbb    r11,r11
   140009869:	and    r11,rax
   14000986c:	shr    r11,1
   14000986f:	cmp    rdx,r11
   140009872:	cmovb  r11,rdx
   140009876:	xor    r9d,r9d
   140009879:	mov    rdx,r8
   14000987c:	lea    rax,[r8+r11*2]
   140009880:	cmp    r8,rax
   140009883:	je     0x140009894
   140009885:	cmp    WORD PTR [rdx],r9w
   140009889:	je     0x140009894
   14000988b:	add    rdx,0x2
   14000988f:	cmp    rdx,rax
   140009892:	jne    0x140009885
   140009894:	sub    rdx,r8
   140009897:	sar    rdx,1
   14000989a:	cmp    rdx,r11
   14000989d:	jne    0x1400099eb
   1400098a3:	mov    rcx,r10
   1400098a6:	lea    rdx,[r8+rdx*2]
   1400098aa:	sub    rcx,r11
   1400098ad:	mov    rax,rcx
   1400098b0:	and    eax,0x1f
   1400098b3:	sub    rcx,rax
   1400098b6:	vxorps ymm2,ymm2,ymm2
   1400098ba:	lea    r11,[rdx+rcx*2]
   1400098be:	jmp    0x1400098d0
   1400098c0:	vpcmpeqw ymm1,ymm2,YMMWORD PTR [rdx]
   1400098c4:	vpmovmskb eax,ymm1
   1400098c8:	test   eax,eax
   1400098ca:	jne    0x1400098d5
   1400098cc:	add    rdx,0x20
   1400098d0:	cmp    rdx,r11
   1400098d3:	jne    0x1400098c0
   1400098d5:	lea    rax,[r8+r10*2]
   1400098d9:	jmp    0x1400098e5
   1400098db:	cmp    WORD PTR [rdx],r9w
   1400098df:	je     0x1400098ea
   1400098e1:	add    rdx,0x2
   1400098e5:	cmp    rdx,rax
   1400098e8:	jne    0x1400098db
   1400098ea:	sub    rdx,r8
   1400098ed:	sar    rdx,1
   1400098f0:	vzeroupper 
   1400098f3:	jmp    0x1400099eb
   1400098f8:	cmp    eax,0x1
   1400098fb:	jl     0x1400099c7
   140009901:	test   cl,0x1
   140009904:	je     0x140009931
   140009906:	lea    rax,[rcx+rdx*2]
   14000990a:	mov    rdx,rcx
   14000990d:	cmp    rcx,rax
   140009910:	je     0x1400099e5
   140009916:	xor    r9d,r9d
   140009919:	cmp    WORD PTR [rdx],r9w
   14000991d:	je     0x1400099e5
   140009923:	add    rdx,0x2
   140009927:	cmp    rdx,rax
   14000992a:	jne    0x140009919
   14000992c:	jmp    0x1400099e5
   140009931:	and    ecx,0xf
   140009934:	mov    eax,0x10
   140009939:	sub    rax,rcx
   14000993c:	neg    rcx
   14000993f:	sbb    r11,r11
   140009942:	and    r11,rax
   140009945:	shr    r11,1
   140009948:	cmp    rdx,r11
   14000994b:	cmovb  r11,rdx
   14000994f:	xor    r9d,r9d
   140009952:	mov    rdx,r8
   140009955:	lea    rax,[r8+r11*2]
   140009959:	cmp    r8,rax
   14000995c:	je     0x14000996d
   14000995e:	cmp    WORD PTR [rdx],r9w
   140009962:	je     0x14000996d
   140009964:	add    rdx,0x2
   140009968:	cmp    rdx,rax
   14000996b:	jne    0x14000995e
   14000996d:	sub    rdx,r8
   140009970:	sar    rdx,1
   140009973:	cmp    rdx,r11
   140009976:	jne    0x1400099eb
   140009978:	mov    rcx,r10
   14000997b:	lea    rdx,[r8+rdx*2]
   14000997f:	sub    rcx,r11
   140009982:	xorps  xmm1,xmm1
   140009985:	mov    rax,rcx
   140009988:	and    eax,0xf
   14000998b:	sub    rcx,rax
   14000998e:	lea    r11,[rdx+rcx*2]
   140009992:	jmp    0x1400099a8
   140009994:	movdqa xmm0,xmm1
   140009998:	pcmpeqw xmm0,XMMWORD PTR [rdx]
   14000999c:	pmovmskb eax,xmm0
   1400099a0:	test   eax,eax
   1400099a2:	jne    0x1400099ad
   1400099a4:	add    rdx,0x10
   1400099a8:	cmp    rdx,r11
   1400099ab:	jne    0x140009994
   1400099ad:	lea    rax,[r8+r10*2]
   1400099b1:	jmp    0x1400099bd
   1400099b3:	cmp    WORD PTR [rdx],r9w
   1400099b7:	je     0x1400099c2
   1400099b9:	add    rdx,0x2
   1400099bd:	cmp    rdx,rax
   1400099c0:	jne    0x1400099b3
   1400099c2:	sub    rdx,r8
   1400099c5:	jmp    0x1400099e8
   1400099c7:	lea    rax,[rcx+rdx*2]
   1400099cb:	mov    rdx,rcx
   1400099ce:	cmp    rcx,rax
   1400099d1:	je     0x1400099e5
   1400099d3:	xor    r9d,r9d
   1400099d6:	cmp    WORD PTR [rdx],r9w
   1400099da:	je     0x1400099e5
   1400099dc:	add    rdx,0x2
   1400099e0:	cmp    rdx,rax
   1400099e3:	jne    0x1400099d6
   1400099e5:	sub    rdx,rcx
   1400099e8:	sar    rdx,1
   1400099eb:	mov    rax,rdx
   1400099ee:	add    rsp,0x20
   1400099f2:	pop    rbp
   1400099f3:	ret    
   1400099f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400099f9:	mov    QWORD PTR [rsp+0x20],r9
   1400099fe:	push   rdi
   1400099ff:	sub    rsp,0x20
   140009a03:	mov    rbx,r9
   140009a06:	mov    rdi,r8
   140009a09:	mov    ecx,DWORD PTR [rdx]
   140009a0b:	call   0x14000ad90
   140009a10:	nop
   140009a11:	mov    rax,QWORD PTR [rdi]
   140009a14:	mov    rcx,QWORD PTR [rax]
   140009a17:	mov    rcx,QWORD PTR [rcx+0x88]
   140009a1e:	test   rcx,rcx
   140009a21:	je     0x140009a41
   140009a23:	or     eax,0xffffffff
   140009a26:	lock xadd DWORD PTR [rcx],eax
   140009a2a:	cmp    eax,0x1
   140009a2d:	jne    0x140009a41
   140009a2f:	lea    rax,[rip+0x148ea]        # 0x14001e320
   140009a36:	cmp    rcx,rax
   140009a39:	je     0x140009a41
   140009a3b:	call   0x140007cc4
   140009a40:	nop
   140009a41:	mov    ecx,DWORD PTR [rbx]
   140009a43:	call   0x14000ade4
   140009a48:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a4d:	add    rsp,0x20
   140009a51:	pop    rdi
   140009a52:	ret    
   140009a53:	int3   
   140009a54:	mov    QWORD PTR [rsp+0x8],rbx
   140009a59:	mov    QWORD PTR [rsp+0x20],r9
   140009a5e:	push   rdi
   140009a5f:	sub    rsp,0x20
   140009a63:	mov    rbx,r9
   140009a66:	mov    rdi,r8
   140009a69:	mov    ecx,DWORD PTR [rdx]
   140009a6b:	call   0x14000ad90
   140009a70:	nop
   140009a71:	mov    rax,QWORD PTR [rdi+0x8]
   140009a75:	mov    rdx,QWORD PTR [rax]
   140009a78:	mov    rcx,QWORD PTR [rdi]
   140009a7b:	mov    rdx,QWORD PTR [rdx]
   140009a7e:	mov    rcx,QWORD PTR [rcx]
   140009a81:	call   0x140009d04
   140009a86:	nop
   140009a87:	mov    ecx,DWORD PTR [rbx]
   140009a89:	call   0x14000ade4
   140009a8e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a93:	add    rsp,0x20
   140009a97:	pop    rdi
   140009a98:	ret    
   140009a99:	int3   
   140009a9a:	int3   
   140009a9b:	int3   
   140009a9c:	mov    QWORD PTR [rsp+0x8],rbx
   140009aa1:	mov    QWORD PTR [rsp+0x20],r9
   140009aa6:	push   rdi
   140009aa7:	sub    rsp,0x20
   140009aab:	mov    rbx,r9
   140009aae:	mov    rdi,r8
   140009ab1:	mov    ecx,DWORD PTR [rdx]
   140009ab3:	call   0x14000ad90
   140009ab8:	nop
   140009ab9:	mov    rax,QWORD PTR [rdi]
   140009abc:	mov    rcx,QWORD PTR [rax]
   140009abf:	mov    rax,QWORD PTR [rcx+0x88]
   140009ac6:	lock inc DWORD PTR [rax]
   140009ac9:	mov    ecx,DWORD PTR [rbx]
   140009acb:	call   0x14000ade4
   140009ad0:	mov    rbx,QWORD PTR [rsp+0x30]
   140009ad5:	add    rsp,0x20
   140009ad9:	pop    rdi
   140009ada:	ret    
   140009adb:	int3   
   140009adc:	mov    QWORD PTR [rsp+0x8],rbx
   140009ae1:	mov    QWORD PTR [rsp+0x20],r9
   140009ae6:	push   rdi
   140009ae7:	sub    rsp,0x20
   140009aeb:	mov    rbx,r9
   140009aee:	mov    rdi,r8
   140009af1:	mov    ecx,DWORD PTR [rdx]
   140009af3:	call   0x14000ad90
   140009af8:	nop
   140009af9:	mov    rcx,QWORD PTR [rdi]
   140009afc:	xor    edx,edx
   140009afe:	mov    rcx,QWORD PTR [rcx]
   140009b01:	call   0x140009d04
   140009b06:	nop
   140009b07:	mov    ecx,DWORD PTR [rbx]
   140009b09:	call   0x14000ade4
   140009b0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009b13:	add    rsp,0x20
   140009b17:	pop    rdi
   140009b18:	ret    
   140009b19:	int3   
   140009b1a:	int3   
   140009b1b:	int3   
   140009b1c:	rex push rbp
   140009b1e:	mov    rbp,rsp
   140009b21:	sub    rsp,0x50
   140009b25:	mov    QWORD PTR [rbp-0x28],rcx
   140009b29:	lea    rax,[rbp-0x28]
   140009b2d:	mov    QWORD PTR [rbp-0x18],rax
   140009b31:	lea    r9,[rbp+0x20]
   140009b35:	mov    edx,0x1
   140009b3a:	lea    r8,[rbp-0x18]
   140009b3e:	mov    eax,0x5
   140009b43:	mov    DWORD PTR [rbp+0x20],eax
   140009b46:	mov    DWORD PTR [rbp+0x28],eax
   140009b49:	lea    rax,[rbp-0x28]
   140009b4d:	mov    QWORD PTR [rbp-0x10],rax
   140009b51:	lea    rax,[rbp-0x20]
   140009b55:	mov    QWORD PTR [rbp-0x8],rax
   140009b59:	mov    eax,0x4
   140009b5e:	mov    DWORD PTR [rbp-0x30],eax
   140009b61:	mov    DWORD PTR [rbp-0x2c],eax
   140009b64:	lea    rax,[rip+0x15835]        # 0x14001f3a0
   140009b6b:	mov    QWORD PTR [rbp-0x20],rax
   140009b6f:	mov    DWORD PTR [rcx+0x28],edx
   140009b72:	lea    rcx,[rip+0xb657]        # 0x1400151d0
   140009b79:	mov    rax,QWORD PTR [rbp-0x28]
   140009b7d:	mov    QWORD PTR [rax],rcx
   140009b80:	lea    rcx,[rip+0x14799]        # 0x14001e320
   140009b87:	mov    rax,QWORD PTR [rbp-0x28]
   140009b8b:	mov    DWORD PTR [rax+0x3a8],edx
   140009b91:	mov    rax,QWORD PTR [rbp-0x28]
   140009b95:	mov    QWORD PTR [rax+0x88],rcx
   140009b9c:	lea    ecx,[rdx+0x42]
   140009b9f:	mov    rax,QWORD PTR [rbp-0x28]
   140009ba3:	lea    rdx,[rbp+0x28]
   140009ba7:	mov    WORD PTR [rax+0xbc],cx
   140009bae:	mov    rax,QWORD PTR [rbp-0x28]
   140009bb2:	mov    WORD PTR [rax+0x1c2],cx
   140009bb9:	lea    rcx,[rbp+0x18]
   140009bbd:	mov    rax,QWORD PTR [rbp-0x28]
   140009bc1:	and    QWORD PTR [rax+0x3a0],0x0
   140009bc9:	call   0x140009a9c
   140009bce:	lea    r9,[rbp-0x30]
   140009bd2:	lea    r8,[rbp-0x10]
   140009bd6:	lea    rdx,[rbp-0x2c]
   140009bda:	lea    rcx,[rbp+0x18]
   140009bde:	call   0x140009a54
   140009be3:	add    rsp,0x50
   140009be7:	pop    rbp
   140009be8:	ret    
   140009be9:	int3   
   140009bea:	int3   
   140009beb:	int3   
   140009bec:	test   rcx,rcx
   140009bef:	je     0x140009c0b
   140009bf1:	push   rbx
   140009bf2:	sub    rsp,0x20
   140009bf6:	mov    rbx,rcx
   140009bf9:	call   0x140009c0c
   140009bfe:	mov    rcx,rbx
   140009c01:	call   0x140007cc4
   140009c06:	add    rsp,0x20
   140009c0a:	pop    rbx
   140009c0b:	ret    
   140009c0c:	rex push rbp
   140009c0e:	mov    rbp,rsp
   140009c11:	sub    rsp,0x40
   140009c15:	lea    rax,[rbp-0x18]
   140009c19:	mov    QWORD PTR [rbp-0x18],rcx
   140009c1d:	mov    QWORD PTR [rbp-0x10],rax
   140009c21:	lea    rdx,[rip+0xb5a8]        # 0x1400151d0
   140009c28:	mov    eax,0x5
   140009c2d:	mov    DWORD PTR [rbp+0x20],eax
   140009c30:	mov    DWORD PTR [rbp+0x28],eax
   140009c33:	lea    rax,[rbp-0x18]
   140009c37:	mov    QWORD PTR [rbp-0x8],rax
   140009c3b:	mov    eax,0x4
   140009c40:	mov    DWORD PTR [rbp-0x20],eax
   140009c43:	mov    DWORD PTR [rbp-0x1c],eax
   140009c46:	mov    rax,QWORD PTR [rcx]
   140009c49:	cmp    rax,rdx
   140009c4c:	je     0x140009c5a
   140009c4e:	mov    rcx,rax
   140009c51:	call   0x140007cc4
   140009c56:	mov    rcx,QWORD PTR [rbp-0x18]
   140009c5a:	mov    rcx,QWORD PTR [rcx+0x70]
   140009c5e:	call   0x140007cc4
   140009c63:	mov    rcx,QWORD PTR [rbp-0x18]
   140009c67:	mov    rcx,QWORD PTR [rcx+0x58]
   140009c6b:	call   0x140007cc4
   140009c70:	mov    rcx,QWORD PTR [rbp-0x18]
   140009c74:	mov    rcx,QWORD PTR [rcx+0x60]
   140009c78:	call   0x140007cc4
   140009c7d:	mov    rcx,QWORD PTR [rbp-0x18]
   140009c81:	mov    rcx,QWORD PTR [rcx+0x68]
   140009c85:	call   0x140007cc4
   140009c8a:	mov    rcx,QWORD PTR [rbp-0x18]
   140009c8e:	mov    rcx,QWORD PTR [rcx+0x48]
   140009c92:	call   0x140007cc4
   140009c97:	mov    rcx,QWORD PTR [rbp-0x18]
   140009c9b:	mov    rcx,QWORD PTR [rcx+0x50]
   140009c9f:	call   0x140007cc4
   140009ca4:	mov    rcx,QWORD PTR [rbp-0x18]
   140009ca8:	mov    rcx,QWORD PTR [rcx+0x78]
   140009cac:	call   0x140007cc4
   140009cb1:	mov    rcx,QWORD PTR [rbp-0x18]
   140009cb5:	mov    rcx,QWORD PTR [rcx+0x80]
   140009cbc:	call   0x140007cc4
   140009cc1:	mov    rcx,QWORD PTR [rbp-0x18]
   140009cc5:	mov    rcx,QWORD PTR [rcx+0x3c0]
   140009ccc:	call   0x140007cc4
   140009cd1:	lea    r9,[rbp+0x20]
   140009cd5:	lea    r8,[rbp-0x10]
   140009cd9:	lea    rdx,[rbp+0x28]
   140009cdd:	lea    rcx,[rbp+0x18]
   140009ce1:	call   0x1400099f4
   140009ce6:	lea    r9,[rbp-0x20]
   140009cea:	lea    r8,[rbp-0x8]
   140009cee:	lea    rdx,[rbp-0x1c]
   140009cf2:	lea    rcx,[rbp+0x18]
   140009cf6:	call   0x140009adc
   140009cfb:	add    rsp,0x40
   140009cff:	pop    rbp
   140009d00:	ret    
   140009d01:	int3   
   140009d02:	int3   
   140009d03:	int3   
   140009d04:	mov    QWORD PTR [rsp+0x8],rbx
   140009d09:	push   rdi
   140009d0a:	sub    rsp,0x20
   140009d0e:	mov    rdi,rcx
   140009d11:	mov    rbx,rdx
   140009d14:	mov    rcx,QWORD PTR [rcx+0x90]
   140009d1b:	test   rcx,rcx
   140009d1e:	je     0x140009d4c
   140009d20:	call   0x14000d780
   140009d25:	mov    rcx,QWORD PTR [rdi+0x90]
   140009d2c:	cmp    rcx,QWORD PTR [rip+0x1566d]        # 0x14001f3a0
   140009d33:	je     0x140009d4c
   140009d35:	lea    rax,[rip+0x14474]        # 0x14001e1b0
   140009d3c:	cmp    rcx,rax
   140009d3f:	je     0x140009d4c
   140009d41:	cmp    DWORD PTR [rcx+0x10],0x0
   140009d45:	jne    0x140009d4c
   140009d47:	call   0x14000d580
   140009d4c:	mov    QWORD PTR [rdi+0x90],rbx
   140009d53:	test   rbx,rbx
   140009d56:	je     0x140009d60
   140009d58:	mov    rcx,rbx
   140009d5b:	call   0x14000d4f4
   140009d60:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d65:	add    rsp,0x20
   140009d69:	pop    rdi
   140009d6a:	ret    
   140009d6b:	int3   
   140009d6c:	mov    QWORD PTR [rsp+0x8],rbx
   140009d71:	push   rdi
   140009d72:	sub    rsp,0x20
   140009d76:	call   QWORD PTR [rip+0xa29c]        # 0x140014018
   140009d7c:	mov    ecx,DWORD PTR [rip+0x1441e]        # 0x14001e1a0
   140009d82:	mov    ebx,eax
   140009d84:	cmp    ecx,0xffffffff
   140009d87:	je     0x140009d96
   140009d89:	call   0x1400088ac
   140009d8e:	mov    rdi,rax
   140009d91:	test   rax,rax
   140009d94:	jne    0x140009dd7
   140009d96:	mov    edx,0x3c8
   140009d9b:	mov    ecx,0x1
   140009da0:	call   0x140007e1c
   140009da5:	mov    rdi,rax
   140009da8:	test   rax,rax
   140009dab:	jne    0x140009db6
   140009dad:	xor    ecx,ecx
   140009daf:	call   0x140007cc4
   140009db4:	jmp    0x140009df2
   140009db6:	mov    ecx,DWORD PTR [rip+0x143e4]        # 0x14001e1a0
   140009dbc:	mov    rdx,rax
   140009dbf:	call   0x140008904
   140009dc4:	mov    rcx,rdi
   140009dc7:	test   eax,eax
   140009dc9:	je     0x140009daf
   140009dcb:	call   0x140009b1c
   140009dd0:	xor    ecx,ecx
   140009dd2:	call   0x140007cc4
   140009dd7:	test   rdi,rdi
   140009dda:	je     0x140009df2
   140009ddc:	mov    ecx,ebx
   140009dde:	call   QWORD PTR [rip+0xa2e4]        # 0x1400140c8
   140009de4:	mov    rbx,QWORD PTR [rsp+0x30]
   140009de9:	mov    rax,rdi
   140009dec:	add    rsp,0x20
   140009df0:	pop    rdi
   140009df1:	ret    
   140009df2:	mov    ecx,ebx
   140009df4:	call   QWORD PTR [rip+0xa2ce]        # 0x1400140c8
   140009dfa:	call   0x140007dc4
   140009dff:	int3   
   140009e00:	mov    QWORD PTR [rsp+0x8],rbx
   140009e05:	mov    QWORD PTR [rsp+0x10],rsi
   140009e0a:	push   rdi
   140009e0b:	sub    rsp,0x20
   140009e0f:	call   QWORD PTR [rip+0xa203]        # 0x140014018
   140009e15:	mov    ecx,DWORD PTR [rip+0x14385]        # 0x14001e1a0
   140009e1b:	xor    esi,esi
   140009e1d:	mov    ebx,eax
   140009e1f:	cmp    ecx,0xffffffff
   140009e22:	je     0x140009e31
   140009e24:	call   0x1400088ac
   140009e29:	mov    rdi,rax
   140009e2c:	test   rax,rax
   140009e2f:	jne    0x140009e72
   140009e31:	mov    edx,0x3c8
   140009e36:	mov    ecx,0x1
   140009e3b:	call   0x140007e1c
   140009e40:	mov    rdi,rax
   140009e43:	test   rax,rax
   140009e46:	jne    0x140009e51
   140009e48:	xor    ecx,ecx
   140009e4a:	call   0x140007cc4
   140009e4f:	jmp    0x140009e77
   140009e51:	mov    ecx,DWORD PTR [rip+0x14349]        # 0x14001e1a0
   140009e57:	mov    rdx,rax
   140009e5a:	call   0x140008904
   140009e5f:	mov    rcx,rdi
   140009e62:	test   eax,eax
   140009e64:	je     0x140009e4a
   140009e66:	call   0x140009b1c
   140009e6b:	xor    ecx,ecx
   140009e6d:	call   0x140007cc4
   140009e72:	test   rdi,rdi
   140009e75:	jne    0x140009e81
   140009e77:	mov    ecx,ebx
   140009e79:	call   QWORD PTR [rip+0xa249]        # 0x1400140c8
   140009e7f:	jmp    0x140009e8c
   140009e81:	mov    ecx,ebx
   140009e83:	call   QWORD PTR [rip+0xa23f]        # 0x1400140c8
   140009e89:	mov    rsi,rdi
   140009e8c:	mov    rbx,QWORD PTR [rsp+0x30]
   140009e91:	mov    rax,rsi
   140009e94:	mov    rsi,QWORD PTR [rsp+0x38]
   140009e99:	add    rsp,0x20
   140009e9d:	pop    rdi
   140009e9e:	ret    
   140009e9f:	int3   
   140009ea0:	sub    rsp,0x28
   140009ea4:	lea    rcx,[rip+0xfffffffffffffd41]        # 0x140009bec
   140009eab:	call   0x1400087fc
   140009eb0:	mov    DWORD PTR [rip+0x142ea],eax        # 0x14001e1a0
   140009eb6:	cmp    eax,0xffffffff
   140009eb9:	jne    0x140009ebf
   140009ebb:	xor    al,al
   140009ebd:	jmp    0x140009ed4
   140009ebf:	call   0x140009e00
   140009ec4:	test   rax,rax
   140009ec7:	jne    0x140009ed2
   140009ec9:	xor    ecx,ecx
   140009ecb:	call   0x140009edc
   140009ed0:	jmp    0x140009ebb
   140009ed2:	mov    al,0x1
   140009ed4:	add    rsp,0x28
   140009ed8:	ret    
   140009ed9:	int3   
   140009eda:	int3   
   140009edb:	int3   
   140009edc:	sub    rsp,0x28
   140009ee0:	mov    ecx,DWORD PTR [rip+0x142ba]        # 0x14001e1a0
   140009ee6:	cmp    ecx,0xffffffff
   140009ee9:	je     0x140009ef7
   140009eeb:	call   0x140008854
   140009ef0:	or     DWORD PTR [rip+0x142a9],0xffffffff        # 0x14001e1a0
   140009ef7:	mov    al,0x1
   140009ef9:	add    rsp,0x28
   140009efd:	ret    
   140009efe:	int3   
   140009eff:	int3   
   140009f00:	rex push rbx
   140009f02:	sub    rsp,0x20
   140009f06:	mov    rax,QWORD PTR [rip+0x15493]        # 0x14001f3a0
   140009f0d:	mov    rbx,rdx
   140009f10:	cmp    QWORD PTR [rdx],rax
   140009f13:	je     0x140009f2b
   140009f15:	mov    eax,DWORD PTR [rcx+0x3a8]
   140009f1b:	test   DWORD PTR [rip+0x149df],eax        # 0x14001e900
   140009f21:	jne    0x140009f2b
   140009f23:	call   0x14000d828
   140009f28:	mov    QWORD PTR [rbx],rax
   140009f2b:	add    rsp,0x20
   140009f2f:	pop    rbx
   140009f30:	ret    
   140009f31:	int3   
   140009f32:	int3   
   140009f33:	int3   
   140009f34:	rex push rbx
   140009f36:	sub    rsp,0x20
   140009f3a:	mov    rax,QWORD PTR [rip+0x14607]        # 0x14001e548
   140009f41:	mov    rbx,rdx
   140009f44:	cmp    QWORD PTR [rdx],rax
   140009f47:	je     0x140009f5f
   140009f49:	mov    eax,DWORD PTR [rcx+0x3a8]
   140009f4f:	test   DWORD PTR [rip+0x149ab],eax        # 0x14001e900
   140009f55:	jne    0x140009f5f
   140009f57:	call   0x14000c78c
   140009f5c:	mov    QWORD PTR [rbx],rax
   140009f5f:	add    rsp,0x20
   140009f63:	pop    rbx
   140009f64:	ret    
   140009f65:	int3   
   140009f66:	int3   
   140009f67:	int3   
   140009f68:	mov    rdx,QWORD PTR [rcx]
   140009f6b:	mov    ecx,0x7ff
   140009f70:	mov    rax,rdx
   140009f73:	shr    rax,0x34
   140009f77:	and    rax,rcx
   140009f7a:	cmp    rax,rcx
   140009f7d:	je     0x140009f82
   140009f7f:	xor    eax,eax
   140009f81:	ret    
   140009f82:	movabs rcx,0xfffffffffffff
   140009f8c:	mov    rax,rdx
   140009f8f:	and    rax,rcx
   140009f92:	jne    0x140009f9a
   140009f94:	mov    eax,0x1
   140009f99:	ret    
   140009f9a:	movabs rcx,0x8000000000000000
   140009fa4:	test   rcx,rdx
   140009fa7:	je     0x140009fbe
   140009fa9:	movabs rcx,0x8000000000000
   140009fb3:	cmp    rax,rcx
   140009fb6:	jne    0x140009fbe
   140009fb8:	mov    eax,0x4
   140009fbd:	ret    
   140009fbe:	shr    rdx,0x33
   140009fc2:	not    edx
   140009fc4:	and    edx,0x1
   140009fc7:	or     edx,0x2
   140009fca:	mov    eax,edx
   140009fcc:	ret    
   140009fcd:	int3   
   140009fce:	int3   
   140009fcf:	int3   
   140009fd0:	mov    rax,rsp
   140009fd3:	mov    QWORD PTR [rax+0x8],rbx
   140009fd7:	mov    QWORD PTR [rax+0x10],rbp
   140009fdb:	mov    QWORD PTR [rax+0x18],rsi
   140009fdf:	mov    QWORD PTR [rax+0x20],rdi
   140009fe3:	push   r12
   140009fe5:	push   r14
   140009fe7:	push   r15
   140009fe9:	sub    rsp,0x70
   140009fed:	mov    ebx,DWORD PTR [rsp+0xb8]
   140009ff4:	xor    r12d,r12d
   140009ff7:	mov    rdi,rdx
   140009ffa:	mov    BYTE PTR [rdx],r12b
   140009ffd:	mov    rdx,QWORD PTR [rsp+0xd0]
   14000a005:	mov    rsi,rcx
   14000a008:	test   ebx,ebx
   14000a00a:	lea    rcx,[rax-0x38]
   14000a00e:	mov    r14,r9
   14000a011:	mov    rbp,r8
   14000a014:	cmovs  ebx,r12d
   14000a018:	call   0x140003ab0
   14000a01d:	lea    eax,[rbx+0xb]
   14000a020:	movsxd rdx,eax
   14000a023:	cmp    rbp,rdx
   14000a026:	ja     0x14000a03e
   14000a028:	call   0x140008500
   14000a02d:	lea    ebx,[r12+0x22]
   14000a032:	mov    DWORD PTR [rax],ebx
   14000a034:	call   0x1400083e0
   14000a039:	jmp    0x14000a2f9
   14000a03e:	mov    rax,QWORD PTR [rsi]
   14000a041:	mov    ecx,0x7ff
   14000a046:	shr    rax,0x34
   14000a04a:	and    rax,rcx
   14000a04d:	cmp    rax,rcx
   14000a050:	jne    0x14000a0c9
   14000a052:	mov    eax,DWORD PTR [rsp+0xc8]
   14000a059:	mov    r9,r14
   14000a05c:	mov    QWORD PTR [rsp+0x40],r12
   14000a061:	mov    r8,rbp
   14000a064:	mov    DWORD PTR [rsp+0x38],eax
   14000a068:	mov    rdx,rdi
   14000a06b:	mov    rax,QWORD PTR [rsp+0xb0]
   14000a073:	mov    rcx,rsi
   14000a076:	mov    BYTE PTR [rsp+0x30],r12b
   14000a07b:	mov    DWORD PTR [rsp+0x28],ebx
   14000a07f:	mov    QWORD PTR [rsp+0x20],rax
   14000a084:	call   0x14000a330
   14000a089:	mov    ebx,eax
   14000a08b:	test   eax,eax
   14000a08d:	je     0x14000a097
   14000a08f:	mov    BYTE PTR [rdi],r12b
   14000a092:	jmp    0x14000a2f9
   14000a097:	mov    edx,0x65
   14000a09c:	mov    rcx,rdi
   14000a09f:	call   0x140002904
   14000a0a4:	test   rax,rax
   14000a0a7:	je     0x14000a2f6
   14000a0ad:	mov    cl,BYTE PTR [rsp+0xc0]
   14000a0b4:	neg    cl
   14000a0b6:	sbb    dl,dl
   14000a0b8:	and    dl,0xe0
   14000a0bb:	add    dl,0x70
   14000a0be:	mov    BYTE PTR [rax],dl
   14000a0c0:	mov    BYTE PTR [rax+0x3],r12b
   14000a0c4:	jmp    0x14000a2f6
   14000a0c9:	movabs rax,0x8000000000000000
   14000a0d3:	test   QWORD PTR [rsi],rax
   14000a0d6:	je     0x14000a0de
   14000a0d8:	mov    BYTE PTR [rdi],0x2d
   14000a0db:	inc    rdi
   14000a0de:	mov    r15b,BYTE PTR [rsp+0xc0]
   14000a0e6:	mov    ebp,0x3ff
   14000a0eb:	mov    al,r15b
   14000a0ee:	mov    r10d,0x30
   14000a0f4:	neg    al
   14000a0f6:	movabs r11,0xfffffffffffff
   14000a100:	movabs rax,0x7ff0000000000000
   14000a10a:	sbb    edx,edx
   14000a10c:	and    edx,0xffffffe0
   14000a10f:	sub    edx,0xffffffd9
   14000a112:	test   QWORD PTR [rsi],rax
   14000a115:	jne    0x14000a131
   14000a117:	mov    BYTE PTR [rdi],r10b
   14000a11a:	inc    rdi
   14000a11d:	mov    rax,QWORD PTR [rsi]
   14000a120:	and    rax,r11
   14000a123:	neg    rax
   14000a126:	sbb    rbp,rbp
   14000a129:	and    ebp,0x3fe
   14000a12f:	jmp    0x14000a137
   14000a131:	mov    BYTE PTR [rdi],0x31
   14000a134:	inc    rdi
   14000a137:	mov    r14,rdi
   14000a13a:	inc    rdi
   14000a13d:	test   ebx,ebx
   14000a13f:	jne    0x14000a146
   14000a141:	mov    BYTE PTR [r14],r12b
   14000a144:	jmp    0x14000a15a
   14000a146:	mov    rax,QWORD PTR [rsp+0x58]
   14000a14b:	mov    rcx,QWORD PTR [rax+0xf8]
   14000a152:	mov    rax,QWORD PTR [rcx]
   14000a155:	mov    cl,BYTE PTR [rax]
   14000a157:	mov    BYTE PTR [r14],cl
   14000a15a:	test   QWORD PTR [rsi],r11
   14000a15d:	jbe    0x14000a1ed
   14000a163:	movzx  r8d,r10w
   14000a167:	movabs r9,0xf000000000000
   14000a171:	test   ebx,ebx
   14000a173:	jle    0x14000a1a3
   14000a175:	mov    rax,QWORD PTR [rsi]
   14000a178:	mov    cl,r8b
   14000a17b:	and    rax,r9
   14000a17e:	and    rax,r11
   14000a181:	shr    rax,cl
   14000a184:	add    ax,r10w
   14000a188:	cmp    ax,0x39
   14000a18c:	jbe    0x14000a191
   14000a18e:	add    ax,dx
   14000a191:	mov    BYTE PTR [rdi],al
   14000a193:	dec    ebx
   14000a195:	inc    rdi
   14000a198:	shr    r9,0x4
   14000a19c:	add    r8w,0xfffc
   14000a1a1:	jns    0x14000a171
   14000a1a3:	test   r8w,r8w
   14000a1a7:	js     0x14000a1ed
   14000a1a9:	mov    rax,QWORD PTR [rsi]
   14000a1ac:	mov    cl,r8b
   14000a1af:	and    rax,r9
   14000a1b2:	and    rax,r11
   14000a1b5:	shr    rax,cl
   14000a1b8:	cmp    ax,0x8
   14000a1bc:	jbe    0x14000a1ed
   14000a1be:	lea    rcx,[rdi-0x1]
   14000a1c2:	mov    al,BYTE PTR [rcx]
   14000a1c4:	sub    al,0x46
   14000a1c6:	test   al,0xdf
   14000a1c8:	jne    0x14000a1d2
   14000a1ca:	mov    BYTE PTR [rcx],r10b
   14000a1cd:	dec    rcx
   14000a1d0:	jmp    0x14000a1c2
   14000a1d2:	cmp    rcx,r14
   14000a1d5:	je     0x14000a1ea
   14000a1d7:	mov    al,BYTE PTR [rcx]
   14000a1d9:	cmp    al,0x39
   14000a1db:	jne    0x14000a1e4
   14000a1dd:	add    dl,0x3a
   14000a1e0:	mov    BYTE PTR [rcx],dl
   14000a1e2:	jmp    0x14000a1ed
   14000a1e4:	inc    al
   14000a1e6:	mov    BYTE PTR [rcx],al
   14000a1e8:	jmp    0x14000a1ed
   14000a1ea:	inc    BYTE PTR [rcx-0x1]
   14000a1ed:	test   ebx,ebx
   14000a1ef:	jle    0x14000a208
   14000a1f1:	mov    r8,rbx
   14000a1f4:	mov    dl,r10b
   14000a1f7:	mov    rcx,rdi
   14000a1fa:	call   0x140002cb0
   14000a1ff:	add    rdi,rbx
   14000a202:	mov    r10d,0x30
   14000a208:	cmp    BYTE PTR [r14],r12b
   14000a20b:	cmove  rdi,r14
   14000a20f:	neg    r15b
   14000a212:	sbb    al,al
   14000a214:	and    al,0xe0
   14000a216:	add    al,0x70
   14000a218:	mov    BYTE PTR [rdi],al
   14000a21a:	mov    rcx,QWORD PTR [rsi]
   14000a21d:	shr    rcx,0x34
   14000a221:	and    ecx,0x7ff
   14000a227:	sub    rcx,rbp
   14000a22a:	js     0x14000a236
   14000a22c:	mov    BYTE PTR [rdi+0x1],0x2b
   14000a230:	add    rdi,0x2
   14000a234:	jmp    0x14000a241
   14000a236:	mov    BYTE PTR [rdi+0x1],0x2d
   14000a23a:	add    rdi,0x2
   14000a23e:	neg    rcx
   14000a241:	mov    BYTE PTR [rdi],r10b
   14000a244:	mov    r8,rdi
   14000a247:	cmp    rcx,0x3e8
   14000a24e:	jl     0x14000a283
   14000a250:	movabs rax,0x20c49ba5e353f7cf
   14000a25a:	imul   rcx
   14000a25d:	sar    rdx,0x7
   14000a261:	mov    rax,rdx
   14000a264:	shr    rax,0x3f
   14000a268:	add    rdx,rax
   14000a26b:	lea    eax,[r10+rdx*1]
   14000a26f:	mov    BYTE PTR [rdi],al
   14000a271:	inc    rdi
   14000a274:	imul   rax,rdx,0xfffffffffffffc18
   14000a27b:	add    rcx,rax
   14000a27e:	cmp    rdi,r8
   14000a281:	jne    0x14000a289
   14000a283:	cmp    rcx,0x64
   14000a287:	jl     0x14000a2b7
   14000a289:	movabs rax,0xa3d70a3d70a3d70b
   14000a293:	imul   rcx
   14000a296:	add    rdx,rcx
   14000a299:	sar    rdx,0x6
   14000a29d:	mov    rax,rdx
   14000a2a0:	shr    rax,0x3f
   14000a2a4:	add    rdx,rax
   14000a2a7:	lea    eax,[r10+rdx*1]
   14000a2ab:	mov    BYTE PTR [rdi],al
   14000a2ad:	inc    rdi
   14000a2b0:	imul   rax,rdx,0xffffffffffffff9c
   14000a2b4:	add    rcx,rax
   14000a2b7:	cmp    rdi,r8
   14000a2ba:	jne    0x14000a2c2
   14000a2bc:	cmp    rcx,0xa
   14000a2c0:	jl     0x14000a2ed
   14000a2c2:	movabs rax,0x6666666666666667
   14000a2cc:	imul   rcx
   14000a2cf:	sar    rdx,0x2
   14000a2d3:	mov    rax,rdx
   14000a2d6:	shr    rax,0x3f
   14000a2da:	add    rdx,rax
   14000a2dd:	lea    eax,[r10+rdx*1]
   14000a2e1:	mov    BYTE PTR [rdi],al
   14000a2e3:	inc    rdi
   14000a2e6:	imul   rax,rdx,0xfffffffffffffff6
   14000a2ea:	add    rcx,rax
   14000a2ed:	add    cl,r10b
   14000a2f0:	mov    BYTE PTR [rdi],cl
   14000a2f2:	mov    BYTE PTR [rdi+0x1],r12b
   14000a2f6:	mov    ebx,r12d
   14000a2f9:	cmp    BYTE PTR [rsp+0x68],r12b
   14000a2fe:	je     0x14000a30c
   14000a300:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a305:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14000a30c:	lea    r11,[rsp+0x70]
   14000a311:	mov    eax,ebx
   14000a313:	mov    rbx,QWORD PTR [r11+0x20]
   14000a317:	mov    rbp,QWORD PTR [r11+0x28]
   14000a31b:	mov    rsi,QWORD PTR [r11+0x30]
   14000a31f:	mov    rdi,QWORD PTR [r11+0x38]
   14000a323:	mov    rsp,r11
   14000a326:	pop    r15
   14000a328:	pop    r14
   14000a32a:	pop    r12
   14000a32c:	ret    
   14000a32d:	int3   
   14000a32e:	int3   
   14000a32f:	int3   
   14000a330:	mov    r11,rsp
   14000a333:	mov    QWORD PTR [r11+0x8],rbx
   14000a337:	mov    QWORD PTR [r11+0x10],rbp
   14000a33b:	mov    QWORD PTR [r11+0x18],rsi
   14000a33f:	push   rdi
   14000a340:	sub    rsp,0x50
   14000a344:	mov    rax,QWORD PTR [rsp+0x80]
   14000a34c:	mov    rsi,r8
   14000a34f:	mov    ebp,DWORD PTR [rsp+0x88]
   14000a356:	lea    r8,[r11-0x18]
   14000a35a:	mov    rcx,QWORD PTR [rcx]
   14000a35d:	mov    rdi,rdx
   14000a360:	mov    QWORD PTR [r11-0x38],rax
   14000a364:	lea    edx,[rbp+0x1]
   14000a367:	call   0x14000f530
   14000a36c:	xor    ecx,ecx
   14000a36e:	lea    r9,[rsp+0x40]
   14000a373:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000a378:	lea    r8d,[rbp+0x1]
   14000a37c:	mov    rdx,rsi
   14000a37f:	sete   cl
   14000a382:	xor    eax,eax
   14000a384:	test   ebp,ebp
   14000a386:	setg   al
   14000a389:	sub    rdx,rax
   14000a38c:	sub    rdx,rcx
   14000a38f:	cmp    rsi,0xffffffffffffffff
   14000a393:	cmove  rdx,rsi
   14000a397:	add    rcx,rax
   14000a39a:	add    rcx,rdi
   14000a39d:	call   0x14000efa0
   14000a3a2:	test   eax,eax
   14000a3a4:	je     0x14000a3ab
   14000a3a6:	mov    BYTE PTR [rdi],0x0
   14000a3a9:	jmp    0x14000a3e8
   14000a3ab:	mov    rax,QWORD PTR [rsp+0xa0]
   14000a3b3:	mov    r8d,ebp
   14000a3b6:	mov    r9b,BYTE PTR [rsp+0x90]
   14000a3be:	mov    rdx,rsi
   14000a3c1:	mov    QWORD PTR [rsp+0x38],rax
   14000a3c6:	mov    rcx,rdi
   14000a3c9:	lea    rax,[rsp+0x40]
   14000a3ce:	mov    BYTE PTR [rsp+0x30],0x0
   14000a3d3:	mov    QWORD PTR [rsp+0x28],rax
   14000a3d8:	mov    eax,DWORD PTR [rsp+0x98]
   14000a3df:	mov    DWORD PTR [rsp+0x20],eax
   14000a3e3:	call   0x14000a400
   14000a3e8:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a3ed:	mov    rbp,QWORD PTR [rsp+0x68]
   14000a3f2:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a3f7:	add    rsp,0x50
   14000a3fb:	pop    rdi
   14000a3fc:	ret    
   14000a3fd:	int3   
   14000a3fe:	int3   
   14000a3ff:	int3   
   14000a400:	mov    rax,rsp
   14000a403:	mov    QWORD PTR [rax+0x8],rbx
   14000a407:	mov    QWORD PTR [rax+0x10],rbp
   14000a40b:	mov    QWORD PTR [rax+0x18],rsi
   14000a40f:	mov    QWORD PTR [rax+0x20],rdi
   14000a413:	push   r15
   14000a415:	sub    rsp,0x50
   14000a419:	xor    eax,eax
   14000a41b:	movsxd rbx,r8d
   14000a41e:	test   r8d,r8d
   14000a421:	mov    r15b,r9b
   14000a424:	mov    rbp,rdx
   14000a427:	mov    rdi,rcx
   14000a42a:	cmovg  eax,ebx
   14000a42d:	add    eax,0x9
   14000a430:	cdqe   
   14000a432:	cmp    rdx,rax
   14000a435:	ja     0x14000a465
   14000a437:	call   0x140008500
   14000a43c:	mov    ebx,0x22
   14000a441:	mov    DWORD PTR [rax],ebx
   14000a443:	call   0x1400083e0
   14000a448:	mov    eax,ebx
   14000a44a:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a44f:	mov    rbp,QWORD PTR [rsp+0x68]
   14000a454:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a459:	mov    rdi,QWORD PTR [rsp+0x78]
   14000a45e:	add    rsp,0x50
   14000a462:	pop    r15
   14000a464:	ret    
   14000a465:	mov    rdx,QWORD PTR [rsp+0x98]
   14000a46d:	lea    rcx,[rsp+0x30]
   14000a472:	call   0x140003ab0
   14000a477:	cmp    BYTE PTR [rsp+0x90],0x0
   14000a47f:	mov    rsi,QWORD PTR [rsp+0x88]
   14000a487:	je     0x14000a4bb
   14000a489:	xor    edx,edx
   14000a48b:	cmp    DWORD PTR [rsi],0x2d
   14000a48e:	sete   dl
   14000a491:	xor    eax,eax
   14000a493:	add    rdx,rdi
   14000a496:	test   ebx,ebx
   14000a498:	setg   al
   14000a49b:	test   eax,eax
   14000a49d:	je     0x14000a4bb
   14000a49f:	or     r8,0xffffffffffffffff
   14000a4a3:	inc    r8
   14000a4a6:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000a4ab:	jne    0x14000a4a3
   14000a4ad:	movsxd rcx,eax
   14000a4b0:	inc    r8
   14000a4b3:	add    rcx,rdx
   14000a4b6:	call   0x140013570
   14000a4bb:	cmp    DWORD PTR [rsi],0x2d
   14000a4be:	mov    rdx,rdi
   14000a4c1:	jne    0x14000a4ca
   14000a4c3:	mov    BYTE PTR [rdi],0x2d
   14000a4c6:	lea    rdx,[rdi+0x1]
   14000a4ca:	test   ebx,ebx
   14000a4cc:	jle    0x14000a4e9
   14000a4ce:	mov    al,BYTE PTR [rdx+0x1]
   14000a4d1:	mov    BYTE PTR [rdx],al
   14000a4d3:	inc    rdx
   14000a4d6:	mov    rax,QWORD PTR [rsp+0x38]
   14000a4db:	mov    rcx,QWORD PTR [rax+0xf8]
   14000a4e2:	mov    rax,QWORD PTR [rcx]
   14000a4e5:	mov    cl,BYTE PTR [rax]
   14000a4e7:	mov    BYTE PTR [rdx],cl
   14000a4e9:	xor    ecx,ecx
   14000a4eb:	lea    r8,[rip+0xb64a]        # 0x140015b3c
   14000a4f2:	cmp    BYTE PTR [rsp+0x90],cl
   14000a4f9:	sete   cl
   14000a4fc:	add    rbx,rdx
   14000a4ff:	add    rbx,rcx
   14000a502:	sub    rdi,rbx
   14000a505:	mov    rcx,rbx
   14000a508:	cmp    rbp,0xffffffffffffffff
   14000a50c:	lea    rdx,[rdi+rbp*1]
   14000a510:	cmove  rdx,rbp
   14000a514:	call   0x140007d64
   14000a519:	test   eax,eax
   14000a51b:	jne    0x14000a5c5
   14000a521:	lea    rcx,[rbx+0x2]
   14000a525:	test   r15b,r15b
   14000a528:	je     0x14000a52d
   14000a52a:	mov    BYTE PTR [rbx],0x45
   14000a52d:	mov    rax,QWORD PTR [rsi+0x8]
   14000a531:	cmp    BYTE PTR [rax],0x30
   14000a534:	je     0x14000a58d
   14000a536:	mov    r8d,DWORD PTR [rsi+0x4]
   14000a53a:	sub    r8d,0x1
   14000a53e:	jns    0x14000a547
   14000a540:	neg    r8d
   14000a543:	mov    BYTE PTR [rbx+0x1],0x2d
   14000a547:	cmp    r8d,0x64
   14000a54b:	jl     0x14000a568
   14000a54d:	mov    eax,0x51eb851f
   14000a552:	imul   r8d
   14000a555:	sar    edx,0x5
   14000a558:	mov    eax,edx
   14000a55a:	shr    eax,0x1f
   14000a55d:	add    edx,eax
   14000a55f:	add    BYTE PTR [rbx+0x2],dl
   14000a562:	imul   eax,edx,0xffffff9c
   14000a565:	add    r8d,eax
   14000a568:	cmp    r8d,0xa
   14000a56c:	jl     0x14000a589
   14000a56e:	mov    eax,0x66666667
   14000a573:	imul   r8d
   14000a576:	sar    edx,0x2
   14000a579:	mov    eax,edx
   14000a57b:	shr    eax,0x1f
   14000a57e:	add    edx,eax
   14000a580:	add    BYTE PTR [rbx+0x3],dl
   14000a583:	imul   eax,edx,0xfffffff6
   14000a586:	add    r8d,eax
   14000a589:	add    BYTE PTR [rbx+0x4],r8b
   14000a58d:	cmp    DWORD PTR [rsp+0x80],0x2
   14000a595:	jne    0x14000a5ab
   14000a597:	cmp    BYTE PTR [rcx],0x30
   14000a59a:	jne    0x14000a5ab
   14000a59c:	lea    rdx,[rcx+0x1]
   14000a5a0:	mov    r8d,0x3
   14000a5a6:	call   0x140013570
   14000a5ab:	cmp    BYTE PTR [rsp+0x48],0x0
   14000a5b0:	je     0x14000a5be
   14000a5b2:	mov    rax,QWORD PTR [rsp+0x30]
   14000a5b7:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14000a5be:	xor    eax,eax
   14000a5c0:	jmp    0x14000a44a
   14000a5c5:	and    QWORD PTR [rsp+0x20],0x0
   14000a5cb:	xor    r9d,r9d
   14000a5ce:	xor    r8d,r8d
   14000a5d1:	xor    edx,edx
   14000a5d3:	xor    ecx,ecx
   14000a5d5:	call   0x140008400
   14000a5da:	int3   
   14000a5db:	int3   
   14000a5dc:	mov    rax,rsp
   14000a5df:	mov    QWORD PTR [rax+0x8],rbx
   14000a5e3:	mov    QWORD PTR [rax+0x10],rbp
   14000a5e7:	mov    QWORD PTR [rax+0x18],rsi
   14000a5eb:	mov    QWORD PTR [rax+0x20],rdi
   14000a5ef:	push   r14
   14000a5f1:	sub    rsp,0x40
   14000a5f5:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a5fa:	mov    rbx,rcx
   14000a5fd:	lea    rcx,[rax-0x28]
   14000a601:	mov    r14,r9
   14000a604:	mov    edi,r8d
   14000a607:	call   0x140003ab0
   14000a60c:	mov    ecx,DWORD PTR [r14+0x4]
   14000a610:	dec    ecx
   14000a612:	cmp    BYTE PTR [rsp+0x70],0x0
   14000a617:	je     0x14000a632
   14000a619:	cmp    ecx,edi
   14000a61b:	jne    0x14000a632
   14000a61d:	xor    eax,eax
   14000a61f:	movsxd rcx,ecx
   14000a622:	cmp    DWORD PTR [r14],0x2d
   14000a626:	sete   al
   14000a629:	add    rax,rbx
   14000a62c:	mov    WORD PTR [rcx+rax*1],0x30
   14000a632:	cmp    DWORD PTR [r14],0x2d
   14000a636:	jne    0x14000a63e
   14000a638:	mov    BYTE PTR [rbx],0x2d
   14000a63b:	inc    rbx
   14000a63e:	or     rsi,0xffffffffffffffff
   14000a642:	cmp    DWORD PTR [r14+0x4],0x0
   14000a647:	jg     0x14000a66d
   14000a649:	mov    r8,rsi
   14000a64c:	inc    r8
   14000a64f:	cmp    BYTE PTR [rbx+r8*1],0x0
   14000a654:	jne    0x14000a64c
   14000a656:	inc    r8
   14000a659:	lea    rcx,[rbx+0x1]
   14000a65d:	mov    rdx,rbx
   14000a660:	call   0x140013570
   14000a665:	mov    BYTE PTR [rbx],0x30
   14000a668:	inc    rbx
   14000a66b:	jmp    0x14000a674
   14000a66d:	movsxd rax,DWORD PTR [r14+0x4]
   14000a671:	add    rbx,rax
   14000a674:	test   edi,edi
   14000a676:	jle    0x14000a6f4
   14000a678:	lea    rbp,[rbx+0x1]
   14000a67c:	mov    r8,rsi
   14000a67f:	inc    r8
   14000a682:	cmp    BYTE PTR [rbx+r8*1],0x0
   14000a687:	jne    0x14000a67f
   14000a689:	inc    r8
   14000a68c:	mov    rdx,rbx
   14000a68f:	mov    rcx,rbp
   14000a692:	call   0x140013570
   14000a697:	mov    rax,QWORD PTR [rsp+0x28]
   14000a69c:	mov    rcx,QWORD PTR [rax+0xf8]
   14000a6a3:	mov    rax,QWORD PTR [rcx]
   14000a6a6:	mov    cl,BYTE PTR [rax]
   14000a6a8:	mov    BYTE PTR [rbx],cl
   14000a6aa:	mov    ecx,DWORD PTR [r14+0x4]
   14000a6ae:	test   ecx,ecx
   14000a6b0:	jns    0x14000a6f4
   14000a6b2:	cmp    BYTE PTR [rsp+0x70],0x0
   14000a6b7:	jne    0x14000a6c1
   14000a6b9:	mov    eax,ecx
   14000a6bb:	neg    eax
   14000a6bd:	cmp    eax,edi
   14000a6bf:	jge    0x14000a6c5
   14000a6c1:	mov    edi,ecx
   14000a6c3:	neg    edi
   14000a6c5:	test   edi,edi
   14000a6c7:	je     0x14000a6e4
   14000a6c9:	inc    rsi
   14000a6cc:	cmp    BYTE PTR [rsi+rbp*1],0x0
   14000a6d0:	jne    0x14000a6c9
   14000a6d2:	movsxd rcx,edi
   14000a6d5:	lea    r8,[rsi+0x1]
   14000a6d9:	add    rcx,rbp
   14000a6dc:	mov    rdx,rbp
   14000a6df:	call   0x140013570
   14000a6e4:	movsxd r8,edi
   14000a6e7:	mov    edx,0x30
   14000a6ec:	mov    rcx,rbp
   14000a6ef:	call   0x140002cb0
   14000a6f4:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a6f9:	je     0x14000a707
   14000a6fb:	mov    rax,QWORD PTR [rsp+0x20]
   14000a700:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14000a707:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a70c:	xor    eax,eax
   14000a70e:	mov    rbp,QWORD PTR [rsp+0x58]
   14000a713:	mov    rsi,QWORD PTR [rsp+0x60]
   14000a718:	mov    rdi,QWORD PTR [rsp+0x68]
   14000a71d:	add    rsp,0x40
   14000a721:	pop    r14
   14000a723:	ret    
   14000a724:	mov    r11,rsp
   14000a727:	mov    QWORD PTR [r11+0x8],rbx
   14000a72b:	mov    QWORD PTR [r11+0x10],rbp
   14000a72f:	mov    QWORD PTR [r11+0x18],rsi
   14000a733:	push   r14
   14000a735:	sub    rsp,0x50
   14000a739:	mov    rcx,QWORD PTR [rcx]
   14000a73c:	xor    eax,eax
   14000a73e:	mov    QWORD PTR [r11-0x18],rax
   14000a742:	mov    rbp,r8
   14000a745:	mov    QWORD PTR [r11-0x10],rax
   14000a749:	lea    r8,[r11-0x18]
   14000a74d:	mov    rax,QWORD PTR [rsp+0x80]
   14000a755:	mov    rsi,rdx
   14000a758:	mov    edx,DWORD PTR [rsp+0x88]
   14000a75f:	mov    QWORD PTR [r11-0x38],rax
   14000a763:	call   0x14000f530
   14000a768:	mov    r14d,DWORD PTR [rsp+0x44]
   14000a76d:	lea    r9,[rsp+0x40]
   14000a772:	mov    r8d,DWORD PTR [rsp+0x88]
   14000a77a:	xor    ecx,ecx
   14000a77c:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000a781:	mov    rdx,rbp
   14000a784:	sete   cl
   14000a787:	dec    r14d
   14000a78a:	sub    rdx,rcx
   14000a78d:	cmp    rbp,0xffffffffffffffff
   14000a791:	lea    rbx,[rcx+rsi*1]
   14000a795:	cmove  rdx,rbp
   14000a799:	mov    rcx,rbx
   14000a79c:	call   0x14000efa0
   14000a7a1:	test   eax,eax
   14000a7a3:	je     0x14000a7ad
   14000a7a5:	mov    BYTE PTR [rsi],0x0
   14000a7a8:	jmp    0x14000a845
   14000a7ad:	mov    eax,DWORD PTR [rsp+0x44]
   14000a7b1:	dec    eax
   14000a7b3:	cmp    r14d,eax
   14000a7b6:	setl   cl
   14000a7b9:	cmp    eax,0xfffffffc
   14000a7bc:	jl     0x14000a803
   14000a7be:	cmp    eax,DWORD PTR [rsp+0x88]
   14000a7c5:	jge    0x14000a803
   14000a7c7:	test   cl,cl
   14000a7c9:	je     0x14000a7d7
   14000a7cb:	mov    al,BYTE PTR [rbx]
   14000a7cd:	inc    rbx
   14000a7d0:	test   al,al
   14000a7d2:	jne    0x14000a7cb
   14000a7d4:	mov    BYTE PTR [rbx-0x2],al
   14000a7d7:	mov    rax,QWORD PTR [rsp+0xa0]
   14000a7df:	lea    r9,[rsp+0x40]
   14000a7e4:	mov    r8d,DWORD PTR [rsp+0x88]
   14000a7ec:	mov    rdx,rbp
   14000a7ef:	mov    QWORD PTR [rsp+0x28],rax
   14000a7f4:	mov    rcx,rsi
   14000a7f7:	mov    BYTE PTR [rsp+0x20],0x1
   14000a7fc:	call   0x14000a5dc
   14000a801:	jmp    0x14000a845
   14000a803:	mov    rax,QWORD PTR [rsp+0xa0]
   14000a80b:	mov    rdx,rbp
   14000a80e:	mov    r9b,BYTE PTR [rsp+0x90]
   14000a816:	mov    rcx,rsi
   14000a819:	mov    r8d,DWORD PTR [rsp+0x88]
   14000a821:	mov    QWORD PTR [rsp+0x38],rax
   14000a826:	lea    rax,[rsp+0x40]
   14000a82b:	mov    BYTE PTR [rsp+0x30],0x1
   14000a830:	mov    QWORD PTR [rsp+0x28],rax
   14000a835:	mov    eax,DWORD PTR [rsp+0x98]
   14000a83c:	mov    DWORD PTR [rsp+0x20],eax
   14000a840:	call   0x14000a400
   14000a845:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a84a:	mov    rbp,QWORD PTR [rsp+0x68]
   14000a84f:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a854:	add    rsp,0x50
   14000a858:	pop    r14
   14000a85a:	ret    
   14000a85b:	int3   
   14000a85c:	rex push rbp
   14000a85e:	lea    rbp,[rsp-0x4f]
   14000a863:	sub    rsp,0xc0
   14000a86a:	mov    rax,QWORD PTR [rip+0x137a7]        # 0x14001e018
   14000a871:	xor    rax,rsp
   14000a874:	mov    QWORD PTR [rbp+0x3f],rax
   14000a878:	mov    r10,r9
   14000a87b:	movzx  eax,dl
   14000a87e:	add    rax,0x4
   14000a882:	mov    r9,r8
   14000a885:	cmp    r10,rax
   14000a888:	jae    0x14000a8a8
   14000a88a:	mov    BYTE PTR [r8],0x0
   14000a88e:	mov    eax,0xc
   14000a893:	mov    rcx,QWORD PTR [rbp+0x3f]
   14000a897:	xor    rcx,rsp
   14000a89a:	call   0x140013230
   14000a89f:	add    rsp,0xc0
   14000a8a6:	pop    rbp
   14000a8a7:	ret    
   14000a8a8:	test   dl,dl
   14000a8aa:	je     0x14000a8ba
   14000a8ac:	inc    r9
   14000a8af:	mov    BYTE PTR [r8],0x2d
   14000a8b3:	dec    r10
   14000a8b6:	mov    BYTE PTR [r9],0x0
   14000a8ba:	neg    BYTE PTR [rbp+0x7f]
   14000a8bd:	lea    rdx,[rip+0xb230]        # 0x140015af4
   14000a8c4:	lea    r8,[rip+0xb22d]        # 0x140015af8
   14000a8cb:	mov    QWORD PTR [rbp-0x21],rdx
   14000a8cf:	lea    rax,[rip+0xb216]        # 0x140015aec
   14000a8d6:	mov    QWORD PTR [rbp-0x19],rdx
   14000a8da:	mov    QWORD PTR [rbp-0x41],rax
   14000a8de:	mov    QWORD PTR [rbp-0x39],rax
   14000a8e2:	lea    rax,[rip+0xb207]        # 0x140015af0
   14000a8e9:	mov    QWORD PTR [rbp-0x31],rax
   14000a8ed:	mov    QWORD PTR [rbp-0x29],rax
   14000a8f1:	lea    rax,[rip+0xb208]        # 0x140015b00
   14000a8f8:	mov    QWORD PTR [rbp-0x1],rax
   14000a8fc:	lea    rax,[rip+0xb20d]        # 0x140015b10
   14000a903:	mov    QWORD PTR [rbp+0xf],rax
   14000a907:	lea    rax,[rip+0xb212]        # 0x140015b20
   14000a90e:	mov    QWORD PTR [rbp+0x1f],rax
   14000a912:	lea    rax,[rip+0xb217]        # 0x140015b30
   14000a919:	mov    QWORD PTR [rbp+0x2f],rax
   14000a91d:	mov    QWORD PTR [rbp+0x7],rdx
   14000a921:	mov    QWORD PTR [rbp+0x27],rdx
   14000a925:	lea    edx,[rcx-0x1]
   14000a928:	sbb    ecx,ecx
   14000a92a:	mov    QWORD PTR [rbp-0x11],r8
   14000a92e:	shl    rdx,0x2
   14000a932:	not    ecx
   14000a934:	and    ecx,0x2
   14000a937:	mov    QWORD PTR [rbp-0x9],r8
   14000a93b:	mov    eax,ecx
   14000a93d:	add    rax,rdx
   14000a940:	mov    QWORD PTR [rbp+0x17],r8
   14000a944:	mov    QWORD PTR [rbp+0x37],r8
   14000a948:	mov    r8,QWORD PTR [rbp+rax*8-0x41]
   14000a94d:	or     rax,0xffffffffffffffff
   14000a951:	inc    rax
   14000a954:	cmp    BYTE PTR [r8+rax*1],0x0
   14000a959:	jne    0x14000a951
   14000a95b:	cmp    r10,rax
   14000a95e:	seta   al
   14000a961:	xor    r8d,r8d
   14000a964:	test   al,al
   14000a966:	sete   r8b
   14000a96a:	add    r8d,ecx
   14000a96d:	mov    rcx,r9
   14000a970:	add    r8,rdx
   14000a973:	mov    rdx,r10
   14000a976:	mov    r8,QWORD PTR [rbp+r8*8-0x41]
   14000a97b:	call   0x140007d64
   14000a980:	test   eax,eax
   14000a982:	je     0x14000a893
   14000a988:	and    QWORD PTR [rsp+0x20],0x0
   14000a98e:	xor    r9d,r9d
   14000a991:	xor    r8d,r8d
   14000a994:	xor    edx,edx
   14000a996:	xor    ecx,ecx
   14000a998:	call   0x140008400
   14000a99d:	int3   
   14000a99e:	int3   
   14000a99f:	int3   
   14000a9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a9a5:	mov    QWORD PTR [rsp+0x10],rbp
   14000a9aa:	mov    QWORD PTR [rsp+0x18],rsi
   14000a9af:	push   rdi
   14000a9b0:	push   r12
   14000a9b2:	push   r13
   14000a9b4:	push   r14
   14000a9b6:	push   r15
   14000a9b8:	sub    rsp,0x60
   14000a9bc:	mov    r13,r9
   14000a9bf:	mov    rbp,r8
   14000a9c2:	mov    rsi,rdx
   14000a9c5:	mov    r15,rcx
   14000a9c8:	test   rdx,rdx
   14000a9cb:	jne    0x14000a9e5
   14000a9cd:	call   0x140008500
   14000a9d2:	mov    ebx,0x16
   14000a9d7:	mov    DWORD PTR [rax],ebx
   14000a9d9:	call   0x1400083e0
   14000a9de:	mov    eax,ebx
   14000a9e0:	jmp    0x14000abc3
   14000a9e5:	test   r8,r8
   14000a9e8:	je     0x14000a9cd
   14000a9ea:	test   r9,r9
   14000a9ed:	je     0x14000a9cd
   14000a9ef:	mov    r12,QWORD PTR [rsp+0xb0]
   14000a9f7:	test   r12,r12
   14000a9fa:	je     0x14000a9cd
   14000a9fc:	mov    ebx,DWORD PTR [rsp+0xb8]
   14000aa03:	cmp    ebx,0x41
   14000aa06:	je     0x14000aa15
   14000aa08:	lea    eax,[rbx-0x45]
   14000aa0b:	cmp    eax,0x2
   14000aa0e:	jbe    0x14000aa15
   14000aa10:	xor    r14b,r14b
   14000aa13:	jmp    0x14000aa18
   14000aa15:	mov    r14b,0x1
   14000aa18:	mov    rdi,QWORD PTR [rsp+0xc8]
   14000aa20:	test   dil,0x8
   14000aa24:	jne    0x14000aa50
   14000aa26:	call   0x140009f68
   14000aa2b:	test   eax,eax
   14000aa2d:	je     0x14000aa50
   14000aa2f:	mov    rdx,QWORD PTR [r15]
   14000aa32:	mov    r9,rbp
   14000aa35:	shr    rdx,0x3f
   14000aa39:	mov    r8,rsi
   14000aa3c:	and    dl,0x1
   14000aa3f:	mov    BYTE PTR [rsp+0x20],r14b
   14000aa44:	mov    ecx,eax
   14000aa46:	call   0x14000a85c
   14000aa4b:	jmp    0x14000abc3
   14000aa50:	shr    rdi,0x4
   14000aa54:	and    edi,0x1
   14000aa57:	or     edi,0x2
   14000aa5a:	sub    ebx,0x41
   14000aa5d:	je     0x14000ab8c
   14000aa63:	sub    ebx,0x4
   14000aa66:	je     0x14000ab53
   14000aa6c:	sub    ebx,0x1
   14000aa6f:	je     0x14000aac9
   14000aa71:	sub    ebx,0x1
   14000aa74:	je     0x14000aa8d
   14000aa76:	sub    ebx,0x1a
   14000aa79:	je     0x14000ab8c
   14000aa7f:	sub    ebx,0x4
   14000aa82:	je     0x14000ab53
   14000aa88:	cmp    ebx,0x1
   14000aa8b:	je     0x14000aac9
   14000aa8d:	mov    rax,QWORD PTR [rsp+0xd0]
   14000aa95:	mov    r9,r13
   14000aa98:	mov    QWORD PTR [rsp+0x40],rax
   14000aa9d:	mov    r8,rbp
   14000aaa0:	mov    eax,DWORD PTR [rsp+0xc0]
   14000aaa7:	mov    rdx,rsi
   14000aaaa:	mov    DWORD PTR [rsp+0x38],edi
   14000aaae:	mov    rcx,r15
   14000aab1:	mov    BYTE PTR [rsp+0x30],r14b
   14000aab6:	mov    DWORD PTR [rsp+0x28],eax
   14000aaba:	mov    QWORD PTR [rsp+0x20],r12
   14000aabf:	call   0x14000a724
   14000aac4:	jmp    0x14000abc3
   14000aac9:	mov    ebx,DWORD PTR [rsp+0xc0]
   14000aad0:	lea    r8,[rsp+0x50]
   14000aad5:	mov    rcx,QWORD PTR [r15]
   14000aad8:	xor    eax,eax
   14000aada:	mov    edx,ebx
   14000aadc:	mov    QWORD PTR [rsp+0x50],rax
   14000aae1:	mov    r9,r13
   14000aae4:	mov    QWORD PTR [rsp+0x58],rax
   14000aae9:	mov    QWORD PTR [rsp+0x20],r12
   14000aaee:	call   0x14000f530
   14000aaf3:	mov    r8d,DWORD PTR [rsp+0x54]
   14000aaf8:	lea    r9,[rsp+0x50]
   14000aafd:	xor    ecx,ecx
   14000aaff:	mov    rdx,rbp
   14000ab02:	cmp    DWORD PTR [rsp+0x50],0x2d
   14000ab07:	sete   cl
   14000ab0a:	add    r8d,ebx
   14000ab0d:	sub    rdx,rcx
   14000ab10:	cmp    rbp,0xffffffffffffffff
   14000ab14:	cmove  rdx,rbp
   14000ab18:	add    rcx,rsi
   14000ab1b:	call   0x14000efa0
   14000ab20:	test   eax,eax
   14000ab22:	je     0x14000ab2c
   14000ab24:	mov    BYTE PTR [rsi],0x0
   14000ab27:	jmp    0x14000abc3
   14000ab2c:	mov    rax,QWORD PTR [rsp+0xd0]
   14000ab34:	lea    r9,[rsp+0x50]
   14000ab39:	mov    QWORD PTR [rsp+0x28],rax
   14000ab3e:	mov    r8d,ebx
   14000ab41:	mov    rdx,rbp
   14000ab44:	mov    BYTE PTR [rsp+0x20],0x0
   14000ab49:	mov    rcx,rsi
   14000ab4c:	call   0x14000a5dc
   14000ab51:	jmp    0x14000abc3
   14000ab53:	mov    rax,QWORD PTR [rsp+0xd0]
   14000ab5b:	mov    r9,r13
   14000ab5e:	mov    QWORD PTR [rsp+0x40],rax
   14000ab63:	mov    r8,rbp
   14000ab66:	mov    eax,DWORD PTR [rsp+0xc0]
   14000ab6d:	mov    rdx,rsi
   14000ab70:	mov    DWORD PTR [rsp+0x38],edi
   14000ab74:	mov    rcx,r15
   14000ab77:	mov    BYTE PTR [rsp+0x30],r14b
   14000ab7c:	mov    DWORD PTR [rsp+0x28],eax
   14000ab80:	mov    QWORD PTR [rsp+0x20],r12
   14000ab85:	call   0x14000a330
   14000ab8a:	jmp    0x14000abc3
   14000ab8c:	mov    rax,QWORD PTR [rsp+0xd0]
   14000ab94:	mov    r9,r13
   14000ab97:	mov    QWORD PTR [rsp+0x40],rax
   14000ab9c:	mov    r8,rbp
   14000ab9f:	mov    eax,DWORD PTR [rsp+0xc0]
   14000aba6:	mov    rdx,rsi
   14000aba9:	mov    DWORD PTR [rsp+0x38],edi
   14000abad:	mov    rcx,r15
   14000abb0:	mov    BYTE PTR [rsp+0x30],r14b
   14000abb5:	mov    DWORD PTR [rsp+0x28],eax
   14000abb9:	mov    QWORD PTR [rsp+0x20],r12
   14000abbe:	call   0x140009fd0
   14000abc3:	lea    r11,[rsp+0x60]
   14000abc8:	mov    rbx,QWORD PTR [r11+0x30]
   14000abcc:	mov    rbp,QWORD PTR [r11+0x38]
   14000abd0:	mov    rsi,QWORD PTR [r11+0x40]
   14000abd4:	mov    rsp,r11
   14000abd7:	pop    r15
   14000abd9:	pop    r14
   14000abdb:	pop    r13
   14000abdd:	pop    r12
   14000abdf:	pop    rdi
   14000abe0:	ret    
   14000abe1:	int3   
   14000abe2:	int3   
   14000abe3:	int3   
   14000abe4:	sub    rsp,0x28
   14000abe8:	test   rcx,rcx
   14000abeb:	jne    0x14000ac02
   14000abed:	call   0x140008500
   14000abf2:	mov    DWORD PTR [rax],0x16
   14000abf8:	call   0x1400083e0
   14000abfd:	or     eax,0xffffffff
   14000ac00:	jmp    0x14000ac05
   14000ac02:	mov    eax,DWORD PTR [rcx+0x18]
   14000ac05:	add    rsp,0x28
   14000ac09:	ret    
   14000ac0a:	int3   
   14000ac0b:	int3   
   14000ac0c:	sub    DWORD PTR [rdx+0x10],0x1
   14000ac10:	js     0x140010a28
   14000ac16:	mov    rax,QWORD PTR [rdx]
   14000ac19:	mov    BYTE PTR [rax],cl
   14000ac1b:	inc    QWORD PTR [rdx]
   14000ac1e:	movzx  eax,cl
   14000ac21:	ret    
   14000ac22:	int3   
   14000ac23:	int3   
   14000ac24:	mov    rcx,QWORD PTR [rip+0x133ed]        # 0x14001e018
   14000ac2b:	xor    eax,eax
   14000ac2d:	or     rcx,0x1
   14000ac31:	cmp    QWORD PTR [rip+0x14750],rcx        # 0x14001f388
   14000ac38:	sete   al
   14000ac3b:	ret    
   14000ac3c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ac41:	push   rdi
   14000ac42:	sub    rsp,0x20
   14000ac46:	mov    rbx,rcx
   14000ac49:	call   0x14000abe4
   14000ac4e:	mov    ecx,eax
   14000ac50:	call   0x140010b10
   14000ac55:	test   eax,eax
   14000ac57:	je     0x14000acfe
   14000ac5d:	mov    ecx,0x1
   14000ac62:	call   0x140003678
   14000ac67:	cmp    rbx,rax
   14000ac6a:	jne    0x14000ac75
   14000ac6c:	lea    rdi,[rip+0x1471d]        # 0x14001f390
   14000ac73:	jmp    0x14000ac8b
   14000ac75:	mov    ecx,0x2
   14000ac7a:	call   0x140003678
   14000ac7f:	cmp    rbx,rax
   14000ac82:	jne    0x14000acfe
   14000ac84:	lea    rdi,[rip+0x1470d]        # 0x14001f398
   14000ac8b:	inc    DWORD PTR [rip+0x13f6f]        # 0x14001ec00
   14000ac91:	mov    eax,DWORD PTR [rbx+0x14]
   14000ac94:	test   eax,0x4c0
   14000ac99:	jne    0x14000acfe
   14000ac9b:	lock or DWORD PTR [rbx+0x14],0x282
   14000aca3:	mov    rax,QWORD PTR [rdi]
   14000aca6:	test   rax,rax
   14000aca9:	jne    0x14000ace4
   14000acab:	mov    ecx,0x1000
   14000acb0:	call   0x140007d04
   14000acb5:	xor    ecx,ecx
   14000acb7:	mov    QWORD PTR [rdi],rax
   14000acba:	call   0x140007cc4
   14000acbf:	mov    rax,QWORD PTR [rdi]
   14000acc2:	test   rax,rax
   14000acc5:	jne    0x14000ace4
   14000acc7:	lea    rcx,[rbx+0x1c]
   14000accb:	mov    DWORD PTR [rbx+0x10],0x2
   14000acd2:	mov    QWORD PTR [rbx+0x8],rcx
   14000acd6:	mov    QWORD PTR [rbx],rcx
   14000acd9:	mov    DWORD PTR [rbx+0x20],0x2
   14000ace0:	mov    al,0x1
   14000ace2:	jmp    0x14000ad00
   14000ace4:	mov    QWORD PTR [rbx+0x8],rax
   14000ace8:	mov    rax,QWORD PTR [rdi]
   14000aceb:	mov    QWORD PTR [rbx],rax
   14000acee:	mov    DWORD PTR [rbx+0x10],0x1000
   14000acf5:	mov    DWORD PTR [rbx+0x20],0x1000
   14000acfc:	jmp    0x14000ace0
   14000acfe:	xor    al,al
   14000ad00:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ad05:	add    rsp,0x20
   14000ad09:	pop    rdi
   14000ad0a:	ret    
   14000ad0b:	int3   
   14000ad0c:	test   cl,cl
   14000ad0e:	je     0x14000ad44
   14000ad10:	push   rbx
   14000ad11:	sub    rsp,0x20
   14000ad15:	mov    rbx,rdx
   14000ad18:	mov    eax,DWORD PTR [rdx+0x14]
   14000ad1b:	shr    eax,0x9
   14000ad1e:	test   al,0x1
   14000ad20:	je     0x14000ad3f
   14000ad22:	mov    rcx,rdx
   14000ad25:	call   0x140008cf4
   14000ad2a:	lock and DWORD PTR [rbx+0x14],0xfffffd7f
   14000ad32:	and    DWORD PTR [rbx+0x20],0x0
   14000ad36:	and    QWORD PTR [rbx+0x8],0x0
   14000ad3b:	and    QWORD PTR [rbx],0x0
   14000ad3f:	add    rsp,0x20
   14000ad43:	pop    rbx
   14000ad44:	ret    
   14000ad45:	int3   
   14000ad46:	int3   
   14000ad47:	int3   
   14000ad48:	rex push rbx
   14000ad4a:	sub    rsp,0x20
   14000ad4e:	xor    ebx,ebx
   14000ad50:	lea    rdx,[rip+0x14659]        # 0x14001f3b0
   14000ad57:	xor    r8d,r8d
   14000ad5a:	lea    rcx,[rbx+rbx*4]
   14000ad5e:	lea    rcx,[rdx+rcx*8]
   14000ad62:	mov    edx,0xfa0
   14000ad67:	call   0x14000896c
   14000ad6c:	test   eax,eax
   14000ad6e:	je     0x14000ad81
   14000ad70:	inc    DWORD PTR [rip+0x14842]        # 0x14001f5b8
   14000ad76:	inc    ebx
   14000ad78:	cmp    ebx,0xd
   14000ad7b:	jb     0x14000ad50
   14000ad7d:	mov    al,0x1
   14000ad7f:	jmp    0x14000ad8a
   14000ad81:	xor    ecx,ecx
   14000ad83:	call   0x14000adac
   14000ad88:	xor    al,al
   14000ad8a:	add    rsp,0x20
   14000ad8e:	pop    rbx
   14000ad8f:	ret    
   14000ad90:	movsxd rax,ecx
   14000ad93:	lea    rcx,[rax+rax*4]
   14000ad97:	lea    rax,[rip+0x14612]        # 0x14001f3b0
   14000ad9e:	lea    rcx,[rax+rcx*8]
   14000ada2:	rex.W jmp QWORD PTR [rip+0x9327]        # 0x1400140d0
   14000ada9:	int3   
   14000adaa:	int3   
   14000adab:	int3   
   14000adac:	rex push rbx
   14000adae:	sub    rsp,0x20
   14000adb2:	mov    ebx,DWORD PTR [rip+0x14800]        # 0x14001f5b8
   14000adb8:	jmp    0x14000add7
   14000adba:	lea    rax,[rip+0x145ef]        # 0x14001f3b0
   14000adc1:	dec    ebx
   14000adc3:	lea    rcx,[rbx+rbx*4]
   14000adc7:	lea    rcx,[rax+rcx*8]
   14000adcb:	call   QWORD PTR [rip+0x930f]        # 0x1400140e0
   14000add1:	dec    DWORD PTR [rip+0x147e1]        # 0x14001f5b8
   14000add7:	test   ebx,ebx
   14000add9:	jne    0x14000adba
   14000addb:	mov    al,0x1
   14000addd:	add    rsp,0x20
   14000ade1:	pop    rbx
   14000ade2:	ret    
   14000ade3:	int3   
   14000ade4:	movsxd rax,ecx
   14000ade7:	lea    rcx,[rax+rax*4]
   14000adeb:	lea    rax,[rip+0x145be]        # 0x14001f3b0
   14000adf2:	lea    rcx,[rax+rcx*8]
   14000adf6:	rex.W jmp QWORD PTR [rip+0x92db]        # 0x1400140d8
   14000adfd:	int3   
   14000adfe:	int3   
   14000adff:	int3   
   14000ae00:	rex push rbx
   14000ae02:	sub    rsp,0x20
   14000ae06:	xor    ebx,ebx
   14000ae08:	test   rcx,rcx
   14000ae0b:	je     0x14000ae1a
   14000ae0d:	test   rdx,rdx
   14000ae10:	je     0x14000ae1a
   14000ae12:	test   r8,r8
   14000ae15:	jne    0x14000ae33
   14000ae17:	mov    WORD PTR [rcx],bx
   14000ae1a:	call   0x140008500
   14000ae1f:	mov    ebx,0x16
   14000ae24:	mov    DWORD PTR [rax],ebx
   14000ae26:	call   0x1400083e0
   14000ae2b:	mov    eax,ebx
   14000ae2d:	add    rsp,0x20
   14000ae31:	pop    rbx
   14000ae32:	ret    
   14000ae33:	mov    r9,rcx
   14000ae36:	sub    r8,rcx
   14000ae39:	movzx  eax,WORD PTR [r8+r9*1]
   14000ae3e:	mov    WORD PTR [r9],ax
   14000ae42:	lea    r9,[r9+0x2]
   14000ae46:	test   ax,ax
   14000ae49:	je     0x14000ae51
   14000ae4b:	sub    rdx,0x1
   14000ae4f:	jne    0x14000ae39
   14000ae51:	test   rdx,rdx
   14000ae54:	jne    0x14000ae2b
   14000ae56:	mov    WORD PTR [rcx],bx
   14000ae59:	call   0x140008500
   14000ae5e:	mov    ebx,0x22
   14000ae63:	jmp    0x14000ae24
   14000ae65:	int3   
   14000ae66:	int3   
   14000ae67:	int3   
   14000ae68:	sub    rsp,0x28
   14000ae6c:	mov    eax,DWORD PTR [rip+0x13f06]        # 0x14001ed78
   14000ae72:	mov    r10,rdx
   14000ae75:	mov    r11,rcx
   14000ae78:	xor    r9d,r9d
   14000ae7b:	test   eax,eax
   14000ae7d:	jne    0x14000aef3
   14000ae7f:	test   rcx,rcx
   14000ae82:	jne    0x14000ae9e
   14000ae84:	call   0x140008500
   14000ae89:	mov    DWORD PTR [rax],0x16
   14000ae8f:	call   0x1400083e0
   14000ae94:	mov    eax,0x7fffffff
   14000ae99:	add    rsp,0x28
   14000ae9d:	ret    
   14000ae9e:	test   rdx,rdx
   14000aea1:	je     0x14000ae84
   14000aea3:	cmp    r8,0x7fffffff
   14000aeaa:	ja     0x14000ae84
   14000aeac:	sub    r11,rdx
   14000aeaf:	movzx  edx,WORD PTR [r11+r10*1]
   14000aeb4:	lea    eax,[rdx-0x41]
   14000aeb7:	cmp    ax,0x19
   14000aebb:	ja     0x14000aec1
   14000aebd:	add    dx,0x20
   14000aec1:	movzx  ecx,WORD PTR [r10]
   14000aec5:	lea    eax,[rcx-0x41]
   14000aec8:	cmp    ax,0x19
   14000aecc:	ja     0x14000aed2
   14000aece:	add    cx,0x20
   14000aed2:	add    r10,0x2
   14000aed6:	sub    r8,0x1
   14000aeda:	je     0x14000aee6
   14000aedc:	test   dx,dx
   14000aedf:	je     0x14000aee6
   14000aee1:	cmp    dx,cx
   14000aee4:	je     0x14000aeaf
   14000aee6:	movzx  ecx,cx
   14000aee9:	movzx  eax,dx
   14000aeec:	sub    eax,ecx
   14000aeee:	add    rsp,0x28
   14000aef2:	ret    
   14000aef3:	add    rsp,0x28
   14000aef7:	jmp    0x14000aefc
   14000aefc:	mov    rax,rsp
   14000aeff:	mov    QWORD PTR [rax+0x8],rbx
   14000af03:	mov    QWORD PTR [rax+0x10],rbp
   14000af07:	mov    QWORD PTR [rax+0x18],rsi
   14000af0b:	mov    QWORD PTR [rax+0x20],rdi
   14000af0f:	push   r14
   14000af11:	sub    rsp,0x50
   14000af15:	xor    ebp,ebp
   14000af17:	mov    rsi,r8
   14000af1a:	mov    rdi,rdx
   14000af1d:	mov    r14,rcx
   14000af20:	test   r8,r8
   14000af23:	jne    0x14000af2c
   14000af25:	xor    eax,eax
   14000af27:	jmp    0x14000b012
   14000af2c:	test   rcx,rcx
   14000af2f:	jne    0x14000af4b
   14000af31:	call   0x140008500
   14000af36:	mov    DWORD PTR [rax],0x16
   14000af3c:	call   0x1400083e0
   14000af41:	mov    eax,0x7fffffff
   14000af46:	jmp    0x14000b012
   14000af4b:	test   rdx,rdx
   14000af4e:	je     0x14000af31
   14000af50:	mov    ebx,0x7fffffff
   14000af55:	cmp    r8,rbx
   14000af58:	jbe    0x14000af6f
   14000af5a:	call   0x140008500
   14000af5f:	mov    DWORD PTR [rax],0x16
   14000af65:	call   0x1400083e0
   14000af6a:	jmp    0x14000b010
   14000af6f:	mov    rdx,r9
   14000af72:	lea    rcx,[rsp+0x30]
   14000af77:	call   0x140003ab0
   14000af7c:	mov    rax,QWORD PTR [rsp+0x38]
   14000af81:	mov    rcx,QWORD PTR [rax+0x130]
   14000af88:	test   rcx,rcx
   14000af8b:	jne    0x14000afd0
   14000af8d:	sub    r14,rdi
   14000af90:	movzx  ecx,WORD PTR [r14+rdi*1]
   14000af95:	lea    eax,[rcx-0x41]
   14000af98:	cmp    ax,0x19
   14000af9c:	ja     0x14000afa2
   14000af9e:	add    cx,0x20
   14000afa2:	movzx  edx,WORD PTR [rdi]
   14000afa5:	lea    eax,[rdx-0x41]
   14000afa8:	cmp    ax,0x19
   14000afac:	ja     0x14000afb2
   14000afae:	add    dx,0x20
   14000afb2:	add    rdi,0x2
   14000afb6:	sub    rsi,0x1
   14000afba:	je     0x14000afc6
   14000afbc:	test   cx,cx
   14000afbf:	je     0x14000afc6
   14000afc1:	cmp    cx,dx
   14000afc4:	je     0x14000af90
   14000afc6:	movzx  eax,dx
   14000afc9:	movzx  ebx,cx
   14000afcc:	sub    ebx,eax
   14000afce:	jmp    0x14000affd
   14000afd0:	mov    DWORD PTR [rsp+0x28],esi
   14000afd4:	mov    r9d,esi
   14000afd7:	mov    r8,r14
   14000afda:	mov    QWORD PTR [rsp+0x20],rdi
   14000afdf:	mov    edx,0x1001
   14000afe4:	call   0x140010b70
   14000afe9:	test   eax,eax
   14000afeb:	jne    0x14000affa
   14000afed:	call   0x140008500
   14000aff2:	mov    DWORD PTR [rax],0x16
   14000aff8:	jmp    0x14000affd
   14000affa:	lea    ebx,[rax-0x2]
   14000affd:	cmp    BYTE PTR [rsp+0x48],bpl
   14000b002:	je     0x14000b010
   14000b004:	mov    rax,QWORD PTR [rsp+0x30]
   14000b009:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14000b010:	mov    eax,ebx
   14000b012:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b017:	mov    rbp,QWORD PTR [rsp+0x68]
   14000b01c:	mov    rsi,QWORD PTR [rsp+0x70]
   14000b021:	mov    rdi,QWORD PTR [rsp+0x78]
   14000b026:	add    rsp,0x50
   14000b02a:	pop    r14
   14000b02c:	ret    
   14000b02d:	int3   
   14000b02e:	int3   
   14000b02f:	int3   
   14000b030:	mov    eax,DWORD PTR [rip+0x13d42]        # 0x14001ed78
   14000b036:	test   eax,eax
   14000b038:	je     0x140010c78
   14000b03e:	xor    r9d,r9d
   14000b041:	jmp    0x14000b048
   14000b046:	int3   
   14000b047:	int3   
   14000b048:	mov    rax,rsp
   14000b04b:	mov    QWORD PTR [rax+0x8],rbx
   14000b04f:	mov    QWORD PTR [rax+0x10],rbp
   14000b053:	mov    QWORD PTR [rax+0x18],rsi
   14000b057:	push   rdi
   14000b058:	sub    rsp,0x60
   14000b05c:	mov    rsi,rdx
   14000b05f:	mov    rbp,rcx
   14000b062:	mov    rdx,r9
   14000b065:	lea    rcx,[rax-0x28]
   14000b069:	mov    rdi,r8
   14000b06c:	call   0x140003ab0
   14000b071:	test   rdi,rdi
   14000b074:	jne    0x14000b07d
   14000b076:	xor    ebx,ebx
   14000b078:	jmp    0x14000b11d
   14000b07d:	test   rbp,rbp
   14000b080:	je     0x14000b087
   14000b082:	test   rsi,rsi
   14000b085:	jne    0x14000b09e
   14000b087:	call   0x140008500
   14000b08c:	mov    DWORD PTR [rax],0x16
   14000b092:	call   0x1400083e0
   14000b097:	mov    ebx,0x7fffffff
   14000b09c:	jmp    0x14000b11d
   14000b09e:	mov    ebx,0x7fffffff
   14000b0a3:	cmp    rdi,rbx
   14000b0a6:	jbe    0x14000b0ba
   14000b0a8:	call   0x140008500
   14000b0ad:	mov    DWORD PTR [rax],0x16
   14000b0b3:	call   0x1400083e0
   14000b0b8:	jmp    0x14000b11d
   14000b0ba:	mov    rax,QWORD PTR [rsp+0x48]
   14000b0bf:	mov    rdx,QWORD PTR [rax+0x130]
   14000b0c6:	test   rdx,rdx
   14000b0c9:	jne    0x14000b0e2
   14000b0cb:	lea    r9,[rsp+0x48]
   14000b0d0:	mov    r8,rdi
   14000b0d3:	mov    rdx,rsi
   14000b0d6:	mov    rcx,rbp
   14000b0d9:	call   0x140010cc8
   14000b0de:	mov    ebx,eax
   14000b0e0:	jmp    0x14000b11d
   14000b0e2:	mov    eax,DWORD PTR [rax+0x14]
   14000b0e5:	lea    rcx,[rsp+0x48]
   14000b0ea:	mov    DWORD PTR [rsp+0x38],eax
   14000b0ee:	mov    r9,rbp
   14000b0f1:	mov    DWORD PTR [rsp+0x30],edi
   14000b0f5:	mov    r8d,0x1001
   14000b0fb:	mov    QWORD PTR [rsp+0x28],rsi
   14000b100:	mov    DWORD PTR [rsp+0x20],edi
   14000b104:	call   0x140011138
   14000b109:	test   eax,eax
   14000b10b:	jne    0x14000b11a
   14000b10d:	call   0x140008500
   14000b112:	mov    DWORD PTR [rax],0x16
   14000b118:	jmp    0x14000b11d
   14000b11a:	lea    ebx,[rax-0x2]
   14000b11d:	cmp    BYTE PTR [rsp+0x58],0x0
   14000b122:	je     0x14000b130
   14000b124:	mov    rax,QWORD PTR [rsp+0x40]
   14000b129:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14000b130:	lea    r11,[rsp+0x60]
   14000b135:	mov    eax,ebx
   14000b137:	mov    rbx,QWORD PTR [r11+0x10]
   14000b13b:	mov    rbp,QWORD PTR [r11+0x18]
   14000b13f:	mov    rsi,QWORD PTR [r11+0x20]
   14000b143:	mov    rsp,r11
   14000b146:	pop    rdi
   14000b147:	ret    
   14000b148:	mov    QWORD PTR [rsp+0x18],rbx
   14000b14d:	mov    DWORD PTR [rsp+0x10],edx
   14000b151:	push   rbp
   14000b152:	push   rsi
   14000b153:	push   rdi
   14000b154:	push   r12
   14000b156:	push   r13
   14000b158:	push   r14
   14000b15a:	push   r15
   14000b15c:	sub    rsp,0x30
   14000b160:	xor    esi,esi
   14000b162:	mov    ebx,edx
   14000b164:	mov    r15,rcx
   14000b167:	test   rcx,rcx
   14000b16a:	jne    0x14000b180
   14000b16c:	call   0x140008500
   14000b171:	mov    DWORD PTR [rax],0x16
   14000b177:	or     rax,0xffffffffffffffff
   14000b17b:	jmp    0x14000b214
   14000b180:	mov    edx,0x3d
   14000b185:	mov    rdi,rcx
   14000b188:	call   0x140002878
   14000b18d:	mov    r13,rax
   14000b190:	test   rax,rax
   14000b193:	je     0x14000b1f3
   14000b195:	cmp    rax,r15
   14000b198:	je     0x14000b1f3
   14000b19a:	cmp    BYTE PTR [rax+0x1],sil
   14000b19e:	mov    r14,QWORD PTR [rip+0x13b83]        # 0x14001ed28
   14000b1a5:	sete   bpl
   14000b1a9:	cmp    r14,QWORD PTR [rip+0x13b90]        # 0x14001ed40
   14000b1b0:	mov    BYTE PTR [rsp+0x70],bpl
   14000b1b5:	jne    0x14000b1c9
   14000b1b7:	mov    rcx,r14
   14000b1ba:	call   0x14000b728
   14000b1bf:	mov    r14,rax
   14000b1c2:	mov    QWORD PTR [rip+0x13b5f],rax        # 0x14001ed28
   14000b1c9:	mov    r12d,0x1
   14000b1cf:	test   r14,r14
   14000b1d2:	jne    0x14000b297
   14000b1d8:	test   ebx,ebx
   14000b1da:	je     0x14000b22c
   14000b1dc:	cmp    QWORD PTR [rip+0x13b4d],rsi        # 0x14001ed30
   14000b1e3:	je     0x14000b22c
   14000b1e5:	call   0x140007250
   14000b1ea:	test   rax,rax
   14000b1ed:	jne    0x14000b28b
   14000b1f3:	call   0x140008500
   14000b1f8:	or     rsi,0xffffffffffffffff
   14000b1fc:	mov    DWORD PTR [rax],0x16
   14000b202:	mov    ebp,esi
   14000b204:	mov    esi,ebp
   14000b206:	mov    ebp,esi
   14000b208:	mov    esi,ebp
   14000b20a:	mov    rcx,rdi
   14000b20d:	call   0x140007cc4
   14000b212:	mov    eax,esi
   14000b214:	mov    rbx,QWORD PTR [rsp+0x80]
   14000b21c:	add    rsp,0x30
   14000b220:	pop    r15
   14000b222:	pop    r14
   14000b224:	pop    r13
   14000b226:	pop    r12
   14000b228:	pop    rdi
   14000b229:	pop    rsi
   14000b22a:	pop    rbp
   14000b22b:	ret    
   14000b22c:	test   bpl,bpl
   14000b22f:	jne    0x14000b202
   14000b231:	mov    edx,0x8
   14000b236:	mov    rcx,r12
   14000b239:	call   0x140007e1c
   14000b23e:	xor    ecx,ecx
   14000b240:	mov    QWORD PTR [rip+0x13ae1],rax        # 0x14001ed28
   14000b247:	call   0x140007cc4
   14000b24c:	mov    r14,QWORD PTR [rip+0x13ad5]        # 0x14001ed28
   14000b253:	test   r14,r14
   14000b256:	jne    0x14000b25e
   14000b258:	or     rbp,0xffffffffffffffff
   14000b25c:	jmp    0x14000b204
   14000b25e:	cmp    QWORD PTR [rip+0x13acb],rsi        # 0x14001ed30
   14000b265:	jne    0x14000b292
   14000b267:	mov    edx,0x8
   14000b26c:	mov    rcx,r12
   14000b26f:	call   0x140007e1c
   14000b274:	xor    ecx,ecx
   14000b276:	mov    QWORD PTR [rip+0x13ab3],rax        # 0x14001ed30
   14000b27d:	call   0x140007cc4
   14000b282:	cmp    QWORD PTR [rip+0x13aa7],rsi        # 0x14001ed30
   14000b289:	je     0x14000b258
   14000b28b:	mov    r14,QWORD PTR [rip+0x13a96]        # 0x14001ed28
   14000b292:	test   r14,r14
   14000b295:	je     0x14000b258
   14000b297:	mov    r12,r13
   14000b29a:	mov    rbx,r14
   14000b29d:	sub    r12,r15
   14000b2a0:	cmp    QWORD PTR [r14],rsi
   14000b2a3:	je     0x14000b2d9
   14000b2a5:	mov    rdx,QWORD PTR [rbx]
   14000b2a8:	mov    r8,r12
   14000b2ab:	mov    rcx,r15
   14000b2ae:	call   0x14000b030
   14000b2b3:	test   eax,eax
   14000b2b5:	jne    0x14000b2c7
   14000b2b7:	mov    rax,QWORD PTR [rbx]
   14000b2ba:	cmp    BYTE PTR [r12+rax*1],0x3d
   14000b2bf:	je     0x14000b2d0
   14000b2c1:	cmp    BYTE PTR [r12+rax*1],sil
   14000b2c5:	je     0x14000b2d0
   14000b2c7:	add    rbx,0x8
   14000b2cb:	cmp    QWORD PTR [rbx],rsi
   14000b2ce:	jmp    0x14000b2a3
   14000b2d0:	sub    rbx,r14
   14000b2d3:	sar    rbx,0x3
   14000b2d7:	jmp    0x14000b2e3
   14000b2d9:	sub    rbx,r14
   14000b2dc:	sar    rbx,0x3
   14000b2e0:	neg    rbx
   14000b2e3:	test   rbx,rbx
   14000b2e6:	js     0x14000b33f
   14000b2e8:	cmp    QWORD PTR [r14],rsi
   14000b2eb:	je     0x14000b33f
   14000b2ed:	mov    rcx,QWORD PTR [r14+rbx*8]
   14000b2f1:	call   0x140007cc4
   14000b2f6:	test   bpl,bpl
   14000b2f9:	jne    0x14000b310
   14000b2fb:	mov    QWORD PTR [r14+rbx*8],r15
   14000b2ff:	jmp    0x14000b399
   14000b304:	mov    rax,QWORD PTR [r14+rbx*8+0x8]
   14000b309:	mov    QWORD PTR [r14+rbx*8],rax
   14000b30d:	inc    rbx
   14000b310:	cmp    QWORD PTR [r14+rbx*8],rsi
   14000b314:	jne    0x14000b304
   14000b316:	mov    r8d,0x8
   14000b31c:	mov    rdx,rbx
   14000b31f:	mov    rcx,r14
   14000b322:	call   0x14000d900
   14000b327:	xor    ecx,ecx
   14000b329:	mov    rbx,rax
   14000b32c:	call   0x140007cc4
   14000b331:	test   rbx,rbx
   14000b334:	je     0x14000b39c
   14000b336:	mov    QWORD PTR [rip+0x139eb],rbx        # 0x14001ed28
   14000b33d:	jmp    0x14000b39c
   14000b33f:	test   bpl,bpl
   14000b342:	jne    0x14000b206
   14000b348:	neg    rbx
   14000b34b:	lea    rdx,[rbx+0x2]
   14000b34f:	cmp    rdx,rbx
   14000b352:	jae    0x14000b35d
   14000b354:	or     rbp,0xffffffffffffffff
   14000b358:	jmp    0x14000b208
   14000b35d:	movabs rax,0x1fffffffffffffff
   14000b367:	cmp    rdx,rax
   14000b36a:	jae    0x14000b354
   14000b36c:	mov    r8d,0x8
   14000b372:	mov    rcx,r14
   14000b375:	call   0x14000d900
   14000b37a:	xor    ecx,ecx
   14000b37c:	mov    r14,rax
   14000b37f:	call   0x140007cc4
   14000b384:	test   r14,r14
   14000b387:	je     0x14000b354
   14000b389:	mov    QWORD PTR [r14+rbx*8],r15
   14000b38d:	mov    QWORD PTR [r14+rbx*8+0x8],rsi
   14000b392:	mov    QWORD PTR [rip+0x1398f],r14        # 0x14001ed28
   14000b399:	mov    rdi,rsi
   14000b39c:	cmp    DWORD PTR [rsp+0x78],esi
   14000b3a0:	je     0x14000b20a
   14000b3a6:	or     rbp,0xffffffffffffffff
   14000b3aa:	mov    r14,rbp
   14000b3ad:	inc    r14
   14000b3b0:	cmp    BYTE PTR [r15+r14*1],sil
   14000b3b4:	jne    0x14000b3ad
   14000b3b6:	mov    edx,0x1
   14000b3bb:	lea    rcx,[r14+0x2]
   14000b3bf:	call   0x140007e1c
   14000b3c4:	mov    rbx,rax
   14000b3c7:	test   rax,rax
   14000b3ca:	je     0x14000b413
   14000b3cc:	mov    r8,r15
   14000b3cf:	lea    rdx,[r14+0x2]
   14000b3d3:	mov    rcx,rax
   14000b3d6:	call   0x140007d64
   14000b3db:	test   eax,eax
   14000b3dd:	jne    0x14000b420
   14000b3df:	mov    rax,rbx
   14000b3e2:	lea    rdx,[r13+0x1]
   14000b3e6:	sub    rax,r15
   14000b3e9:	mov    rcx,rbx
   14000b3ec:	add    rdx,rax
   14000b3ef:	cmp    BYTE PTR [rsp+0x70],sil
   14000b3f4:	mov    BYTE PTR [rdx-0x1],sil
   14000b3f8:	cmovne rdx,rsi
   14000b3fc:	call   QWORD PTR [rip+0x8d9e]        # 0x1400141a0
   14000b402:	test   eax,eax
   14000b404:	jne    0x14000b413
   14000b406:	call   0x140008500
   14000b40b:	mov    esi,ebp
   14000b40d:	mov    DWORD PTR [rax],0x2a
   14000b413:	mov    rcx,rbx
   14000b416:	call   0x140007cc4
   14000b41b:	jmp    0x14000b20a
   14000b420:	xor    r9d,r9d
   14000b423:	mov    QWORD PTR [rsp+0x20],rsi
   14000b428:	xor    r8d,r8d
   14000b42b:	xor    edx,edx
   14000b42d:	xor    ecx,ecx
   14000b42f:	call   0x140008400
   14000b434:	int3   
   14000b435:	int3   
   14000b436:	int3   
   14000b437:	int3   
   14000b438:	mov    QWORD PTR [rsp+0x8],rbx
   14000b43d:	mov    QWORD PTR [rsp+0x10],rbp
   14000b442:	mov    QWORD PTR [rsp+0x18],rsi
   14000b447:	push   rdi
   14000b448:	push   r12
   14000b44a:	push   r13
   14000b44c:	push   r14
   14000b44e:	push   r15
   14000b450:	sub    rsp,0x30
   14000b454:	xor    esi,esi
   14000b456:	mov    ebp,edx
   14000b458:	mov    r15,rcx
   14000b45b:	test   rcx,rcx
   14000b45e:	jne    0x14000b474
   14000b460:	call   0x140008500
   14000b465:	mov    DWORD PTR [rax],0x16
   14000b46b:	or     rax,0xffffffffffffffff
   14000b46f:	jmp    0x14000b505
   14000b474:	mov    edx,0x3d
   14000b479:	mov    rdi,rcx
   14000b47c:	call   0x1400139a8
   14000b481:	mov    r12,rax
   14000b484:	test   rax,rax
   14000b487:	je     0x14000b4e4
   14000b489:	cmp    rax,r15
   14000b48c:	je     0x14000b4e4
   14000b48e:	cmp    WORD PTR [rax+0x2],si
   14000b492:	mov    r14,QWORD PTR [rip+0x13897]        # 0x14001ed30
   14000b499:	sete   r13b
   14000b49d:	cmp    r14,QWORD PTR [rip+0x13894]        # 0x14001ed38
   14000b4a4:	jne    0x14000b4b8
   14000b4a6:	mov    rcx,r14
   14000b4a9:	call   0x14000b814
   14000b4ae:	mov    r14,rax
   14000b4b1:	mov    QWORD PTR [rip+0x13878],rax        # 0x14001ed30
   14000b4b8:	mov    ebx,0x1
   14000b4bd:	test   r14,r14
   14000b4c0:	jne    0x14000b587
   14000b4c6:	mov    rax,QWORD PTR [rip+0x1385b]        # 0x14001ed28
   14000b4cd:	test   ebp,ebp
   14000b4cf:	je     0x14000b522
   14000b4d1:	test   rax,rax
   14000b4d4:	je     0x14000b522
   14000b4d6:	call   0x140007258
   14000b4db:	test   rax,rax
   14000b4de:	jne    0x14000b57b
   14000b4e4:	call   0x140008500
   14000b4e9:	or     rsi,0xffffffffffffffff
   14000b4ed:	mov    DWORD PTR [rax],0x16
   14000b4f3:	mov    ebp,esi
   14000b4f5:	mov    esi,ebp
   14000b4f7:	mov    ebp,esi
   14000b4f9:	mov    esi,ebp
   14000b4fb:	mov    rcx,rdi
   14000b4fe:	call   0x140007cc4
   14000b503:	mov    eax,esi
   14000b505:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b50a:	mov    rbp,QWORD PTR [rsp+0x68]
   14000b50f:	mov    rsi,QWORD PTR [rsp+0x70]
   14000b514:	add    rsp,0x30
   14000b518:	pop    r15
   14000b51a:	pop    r14
   14000b51c:	pop    r13
   14000b51e:	pop    r12
   14000b520:	pop    rdi
   14000b521:	ret    
   14000b522:	test   r13b,r13b
   14000b525:	jne    0x14000b4f3
   14000b527:	test   rax,rax
   14000b52a:	jne    0x14000b560
   14000b52c:	lea    edx,[rax+0x8]
   14000b52f:	mov    rcx,rbx
   14000b532:	call   0x140007e1c
   14000b537:	xor    ecx,ecx
   14000b539:	mov    QWORD PTR [rip+0x137e8],rax        # 0x14001ed28
   14000b540:	call   0x140007cc4
   14000b545:	cmp    QWORD PTR [rip+0x137dc],rsi        # 0x14001ed28
   14000b54c:	jne    0x14000b554
   14000b54e:	or     rbp,0xffffffffffffffff
   14000b552:	jmp    0x14000b4f5
   14000b554:	mov    r14,QWORD PTR [rip+0x137d5]        # 0x14001ed30
   14000b55b:	test   r14,r14
   14000b55e:	jne    0x14000b587
   14000b560:	mov    edx,0x8
   14000b565:	mov    rcx,rbx
   14000b568:	call   0x140007e1c
   14000b56d:	xor    ecx,ecx
   14000b56f:	mov    QWORD PTR [rip+0x137ba],rax        # 0x14001ed30
   14000b576:	call   0x140007cc4
   14000b57b:	mov    r14,QWORD PTR [rip+0x137ae]        # 0x14001ed30
   14000b582:	test   r14,r14
   14000b585:	je     0x14000b54e
   14000b587:	sub    r12,r15
   14000b58a:	mov    rbx,r14
   14000b58d:	sar    r12,1
   14000b590:	cmp    QWORD PTR [r14],rsi
   14000b593:	je     0x14000b5cf
   14000b595:	mov    rdx,QWORD PTR [rbx]
   14000b598:	mov    r8,r12
   14000b59b:	mov    rcx,r15
   14000b59e:	call   0x14000ae68
   14000b5a3:	test   eax,eax
   14000b5a5:	jne    0x14000b5bd
   14000b5a7:	mov    rax,QWORD PTR [rbx]
   14000b5aa:	mov    ecx,0x3d
   14000b5af:	cmp    WORD PTR [rax+r12*2],cx
   14000b5b4:	je     0x14000b5c6
   14000b5b6:	cmp    WORD PTR [rax+r12*2],si
   14000b5bb:	je     0x14000b5c6
   14000b5bd:	add    rbx,0x8
   14000b5c1:	cmp    QWORD PTR [rbx],rsi
   14000b5c4:	jmp    0x14000b593
   14000b5c6:	sub    rbx,r14
   14000b5c9:	sar    rbx,0x3
   14000b5cd:	jmp    0x14000b5d9
   14000b5cf:	sub    rbx,r14
   14000b5d2:	sar    rbx,0x3
   14000b5d6:	neg    rbx
   14000b5d9:	test   rbx,rbx
   14000b5dc:	js     0x14000b635
   14000b5de:	cmp    QWORD PTR [r14],rsi
   14000b5e1:	je     0x14000b635
   14000b5e3:	mov    rcx,QWORD PTR [r14+rbx*8]
   14000b5e7:	call   0x140007cc4
   14000b5ec:	test   r13b,r13b
   14000b5ef:	jne    0x14000b606
   14000b5f1:	mov    QWORD PTR [r14+rbx*8],r15
   14000b5f5:	jmp    0x14000b68f
   14000b5fa:	mov    rax,QWORD PTR [r14+rbx*8+0x8]
   14000b5ff:	mov    QWORD PTR [r14+rbx*8],rax
   14000b603:	inc    rbx
   14000b606:	cmp    QWORD PTR [r14+rbx*8],rsi
   14000b60a:	jne    0x14000b5fa
   14000b60c:	mov    r8d,0x8
   14000b612:	mov    rdx,rbx
   14000b615:	mov    rcx,r14
   14000b618:	call   0x14000d900
   14000b61d:	xor    ecx,ecx
   14000b61f:	mov    rbx,rax
   14000b622:	call   0x140007cc4
   14000b627:	test   rbx,rbx
   14000b62a:	je     0x14000b692
   14000b62c:	mov    QWORD PTR [rip+0x136fd],rbx        # 0x14001ed30
   14000b633:	jmp    0x14000b692
   14000b635:	test   r13b,r13b
   14000b638:	jne    0x14000b4f7
   14000b63e:	neg    rbx
   14000b641:	lea    rdx,[rbx+0x2]
   14000b645:	cmp    rdx,rbx
   14000b648:	jae    0x14000b653
   14000b64a:	or     rbp,0xffffffffffffffff
   14000b64e:	jmp    0x14000b4f9
   14000b653:	movabs rax,0x1fffffffffffffff
   14000b65d:	cmp    rdx,rax
   14000b660:	jae    0x14000b64a
   14000b662:	mov    r8d,0x8
   14000b668:	mov    rcx,r14
   14000b66b:	call   0x14000d900
   14000b670:	xor    ecx,ecx
   14000b672:	mov    r14,rax
   14000b675:	call   0x140007cc4
   14000b67a:	test   r14,r14
   14000b67d:	je     0x14000b64a
   14000b67f:	mov    QWORD PTR [r14+rbx*8],r15
   14000b683:	mov    QWORD PTR [r14+rbx*8+0x8],rsi
   14000b688:	mov    QWORD PTR [rip+0x136a1],r14        # 0x14001ed30
   14000b68f:	mov    rdi,rsi
   14000b692:	test   ebp,ebp
   14000b694:	je     0x14000b4fb
   14000b69a:	or     rbp,0xffffffffffffffff
   14000b69e:	mov    r14,rbp
   14000b6a1:	inc    r14
   14000b6a4:	cmp    WORD PTR [r15+r14*2],si
   14000b6a9:	jne    0x14000b6a1
   14000b6ab:	mov    edx,0x2
   14000b6b0:	add    r14,rdx
   14000b6b3:	mov    rcx,r14
   14000b6b6:	call   0x140007e1c
   14000b6bb:	mov    rbx,rax
   14000b6be:	test   rax,rax
   14000b6c1:	je     0x14000b703
   14000b6c3:	mov    r8,r15
   14000b6c6:	mov    rdx,r14
   14000b6c9:	mov    rcx,rax
   14000b6cc:	call   0x14000ae00
   14000b6d1:	test   eax,eax
   14000b6d3:	jne    0x14000b710
   14000b6d5:	lea    rdx,[r12+0x1]
   14000b6da:	test   r13b,r13b
   14000b6dd:	lea    rdx,[rbx+rdx*2]
   14000b6e1:	mov    rcx,rbx
   14000b6e4:	mov    WORD PTR [rdx-0x2],si
   14000b6e8:	cmovne rdx,rsi
   14000b6ec:	call   QWORD PTR [rip+0x8ab6]        # 0x1400141a8
   14000b6f2:	test   eax,eax
   14000b6f4:	jne    0x14000b703
   14000b6f6:	call   0x140008500
   14000b6fb:	mov    esi,ebp
   14000b6fd:	mov    DWORD PTR [rax],0x2a
   14000b703:	mov    rcx,rbx
   14000b706:	call   0x140007cc4
   14000b70b:	jmp    0x14000b4fb
   14000b710:	xor    r9d,r9d
   14000b713:	mov    QWORD PTR [rsp+0x20],rsi
   14000b718:	xor    r8d,r8d
   14000b71b:	xor    edx,edx
   14000b71d:	xor    ecx,ecx
   14000b71f:	call   0x140008400
   14000b724:	int3   
   14000b725:	int3   
   14000b726:	int3   
   14000b727:	int3   
   14000b728:	mov    QWORD PTR [rsp+0x8],rbx
   14000b72d:	mov    QWORD PTR [rsp+0x10],rsi
   14000b732:	mov    QWORD PTR [rsp+0x18],rdi
   14000b737:	push   r14
   14000b739:	sub    rsp,0x30
   14000b73d:	mov    rdi,rcx
   14000b740:	test   rcx,rcx
   14000b743:	jne    0x14000b74c
   14000b745:	xor    eax,eax
   14000b747:	jmp    0x14000b7da
   14000b74c:	xor    ecx,ecx
   14000b74e:	mov    rax,rdi
   14000b751:	cmp    QWORD PTR [rdi],rcx
   14000b754:	je     0x14000b763
   14000b756:	inc    rcx
   14000b759:	lea    rax,[rax+0x8]
   14000b75d:	cmp    QWORD PTR [rax],0x0
   14000b761:	jne    0x14000b756
   14000b763:	inc    rcx
   14000b766:	mov    edx,0x8
   14000b76b:	call   0x140007e1c
   14000b770:	mov    rbx,rax
   14000b773:	test   rax,rax
   14000b776:	je     0x14000b7f0
   14000b778:	cmp    QWORD PTR [rdi],0x0
   14000b77c:	je     0x14000b7d0
   14000b77e:	mov    r14,rax
   14000b781:	sub    r14,rdi
   14000b784:	mov    rax,QWORD PTR [rdi]
   14000b787:	or     rsi,0xffffffffffffffff
   14000b78b:	inc    rsi
   14000b78e:	cmp    BYTE PTR [rax+rsi*1],0x0
   14000b792:	jne    0x14000b78b
   14000b794:	mov    edx,0x1
   14000b799:	lea    rcx,[rsi+0x1]
   14000b79d:	call   0x140007e1c
   14000b7a2:	xor    ecx,ecx
   14000b7a4:	mov    QWORD PTR [r14+rdi*1],rax
   14000b7a8:	call   0x140007cc4
   14000b7ad:	mov    rcx,QWORD PTR [r14+rdi*1]
   14000b7b1:	test   rcx,rcx
   14000b7b4:	je     0x14000b80c
   14000b7b6:	mov    r8,QWORD PTR [rdi]
   14000b7b9:	lea    rdx,[rsi+0x1]
   14000b7bd:	call   0x140007d64
   14000b7c2:	test   eax,eax
   14000b7c4:	jne    0x14000b7f6
   14000b7c6:	add    rdi,0x8
   14000b7ca:	cmp    QWORD PTR [rdi],0x0
   14000b7ce:	jne    0x14000b784
   14000b7d0:	xor    ecx,ecx
   14000b7d2:	call   0x140007cc4
   14000b7d7:	mov    rax,rbx
   14000b7da:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b7df:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b7e4:	mov    rdi,QWORD PTR [rsp+0x50]
   14000b7e9:	add    rsp,0x30
   14000b7ed:	pop    r14
   14000b7ef:	ret    
   14000b7f0:	call   0x140007dc4
   14000b7f5:	int3   
   14000b7f6:	and    QWORD PTR [rsp+0x20],0x0
   14000b7fc:	xor    r9d,r9d
   14000b7ff:	xor    r8d,r8d
   14000b802:	xor    edx,edx
   14000b804:	xor    ecx,ecx
   14000b806:	call   0x140008400
   14000b80b:	int3   
   14000b80c:	call   0x140007dc4
   14000b811:	int3   
   14000b812:	int3   
   14000b813:	int3   
   14000b814:	mov    rax,rsp
   14000b817:	mov    QWORD PTR [rax+0x8],rbx
   14000b81b:	mov    QWORD PTR [rax+0x10],rbp
   14000b81f:	mov    QWORD PTR [rax+0x18],rsi
   14000b823:	mov    QWORD PTR [rax+0x20],rdi
   14000b827:	push   r14
   14000b829:	sub    rsp,0x30
   14000b82d:	xor    ebp,ebp
   14000b82f:	mov    rdi,rcx
   14000b832:	test   rcx,rcx
   14000b835:	jne    0x14000b83e
   14000b837:	xor    eax,eax
   14000b839:	jmp    0x14000b8ca
   14000b83e:	mov    rcx,rbp
   14000b841:	mov    rax,rdi
   14000b844:	cmp    QWORD PTR [rdi],rbp
   14000b847:	je     0x14000b855
   14000b849:	inc    rcx
   14000b84c:	lea    rax,[rax+0x8]
   14000b850:	cmp    QWORD PTR [rax],rbp
   14000b853:	jne    0x14000b849
   14000b855:	inc    rcx
   14000b858:	mov    edx,0x8
   14000b85d:	call   0x140007e1c
   14000b862:	mov    rbx,rax
   14000b865:	test   rax,rax
   14000b868:	je     0x14000b8e5
   14000b86a:	cmp    QWORD PTR [rdi],rbp
   14000b86d:	je     0x14000b8c0
   14000b86f:	mov    r14,rax
   14000b872:	sub    r14,rdi
   14000b875:	mov    rax,QWORD PTR [rdi]
   14000b878:	or     rsi,0xffffffffffffffff
   14000b87c:	inc    rsi
   14000b87f:	cmp    WORD PTR [rax+rsi*2],bp
   14000b883:	jne    0x14000b87c
   14000b885:	mov    edx,0x2
   14000b88a:	lea    rcx,[rsi+0x1]
   14000b88e:	call   0x140007e1c
   14000b893:	xor    ecx,ecx
   14000b895:	mov    QWORD PTR [r14+rdi*1],rax
   14000b899:	call   0x140007cc4
   14000b89e:	mov    rcx,QWORD PTR [r14+rdi*1]
   14000b8a2:	test   rcx,rcx
   14000b8a5:	je     0x14000b900
   14000b8a7:	mov    r8,QWORD PTR [rdi]
   14000b8aa:	lea    rdx,[rsi+0x1]
   14000b8ae:	call   0x14000ae00
   14000b8b3:	test   eax,eax
   14000b8b5:	jne    0x14000b8eb
   14000b8b7:	add    rdi,0x8
   14000b8bb:	cmp    QWORD PTR [rdi],rbp
   14000b8be:	jne    0x14000b875
   14000b8c0:	xor    ecx,ecx
   14000b8c2:	call   0x140007cc4
   14000b8c7:	mov    rax,rbx
   14000b8ca:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b8cf:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b8d4:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b8d9:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b8de:	add    rsp,0x30
   14000b8e2:	pop    r14
   14000b8e4:	ret    
   14000b8e5:	call   0x140007dc4
   14000b8ea:	int3   
   14000b8eb:	xor    r9d,r9d
   14000b8ee:	mov    QWORD PTR [rsp+0x20],rbp
   14000b8f3:	xor    r8d,r8d
   14000b8f6:	xor    edx,edx
   14000b8f8:	xor    ecx,ecx
   14000b8fa:	call   0x140008400
   14000b8ff:	int3   
   14000b900:	call   0x140007dc4
   14000b905:	int3   
   14000b906:	int3   
   14000b907:	int3   
   14000b908:	jmp    0x14000b148
   14000b90d:	int3   
   14000b90e:	int3   
   14000b90f:	int3   
   14000b910:	jmp    0x14000b438
   14000b915:	int3   
   14000b916:	int3   
   14000b917:	int3   
   14000b918:	mov    QWORD PTR [rsp+0x8],rbx
   14000b91d:	mov    QWORD PTR [rsp+0x10],rbp
   14000b922:	mov    QWORD PTR [rsp+0x18],rsi
   14000b927:	push   rdi
   14000b928:	push   r14
   14000b92a:	push   r15
   14000b92c:	sub    rsp,0x30
   14000b930:	xor    edi,edi
   14000b932:	mov    rsi,rdx
   14000b935:	mov    rbp,rcx
   14000b938:	test   rcx,rcx
   14000b93b:	jne    0x14000b954
   14000b93d:	call   0x140008500
   14000b942:	mov    DWORD PTR [rax],0x16
   14000b948:	call   0x1400083e0
   14000b94d:	xor    eax,eax
   14000b94f:	jmp    0x14000b9f5
   14000b954:	test   rdx,rdx
   14000b957:	je     0x14000b93d
   14000b959:	call   0x1400086c0
   14000b95e:	test   eax,eax
   14000b960:	mov    DWORD PTR [rsp+0x28],edi
   14000b964:	mov    r15d,edi
   14000b967:	mov    QWORD PTR [rsi],rdi
   14000b96a:	sete   r15b
   14000b96e:	mov    QWORD PTR [rsp+0x20],rdi
   14000b973:	mov    ecx,r15d
   14000b976:	or     r9d,0xffffffff
   14000b97a:	mov    r8,rbp
   14000b97d:	xor    edx,edx
   14000b97f:	call   QWORD PTR [rip+0x87c3]        # 0x140014148
   14000b985:	movsxd r14,eax
   14000b988:	test   eax,eax
   14000b98a:	jne    0x14000b99b
   14000b98c:	call   QWORD PTR [rip+0x8686]        # 0x140014018
   14000b992:	mov    ecx,eax
   14000b994:	call   0x140008490
   14000b999:	jmp    0x14000b94d
   14000b99b:	mov    rcx,r14
   14000b99e:	add    rcx,rcx
   14000b9a1:	call   0x140007d04
   14000b9a6:	mov    rbx,rax
   14000b9a9:	test   rax,rax
   14000b9ac:	je     0x14000b9eb
   14000b9ae:	mov    DWORD PTR [rsp+0x28],r14d
   14000b9b3:	or     r9d,0xffffffff
   14000b9b7:	mov    r8,rbp
   14000b9ba:	mov    QWORD PTR [rsp+0x20],rax
   14000b9bf:	xor    edx,edx
   14000b9c1:	mov    ecx,r15d
   14000b9c4:	call   QWORD PTR [rip+0x877e]        # 0x140014148
   14000b9ca:	test   eax,eax
   14000b9cc:	jne    0x14000b9dd
   14000b9ce:	call   QWORD PTR [rip+0x8644]        # 0x140014018
   14000b9d4:	mov    ecx,eax
   14000b9d6:	call   0x140008490
   14000b9db:	jmp    0x14000b9eb
   14000b9dd:	mov    rax,rbx
   14000b9e0:	mov    rbx,rdi
   14000b9e3:	mov    QWORD PTR [rsi],rax
   14000b9e6:	mov    edi,0x1
   14000b9eb:	mov    rcx,rbx
   14000b9ee:	call   0x140007cc4
   14000b9f3:	mov    eax,edi
   14000b9f5:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b9fa:	mov    rbp,QWORD PTR [rsp+0x58]
   14000b9ff:	mov    rsi,QWORD PTR [rsp+0x60]
   14000ba04:	add    rsp,0x30
   14000ba08:	pop    r15
   14000ba0a:	pop    r14
   14000ba0c:	pop    rdi
   14000ba0d:	ret    
   14000ba0e:	int3   
   14000ba0f:	int3   
   14000ba10:	rex push rbx
   14000ba12:	sub    rsp,0x50
   14000ba16:	mov    rax,QWORD PTR [rip+0x125fb]        # 0x14001e018
   14000ba1d:	xor    rax,rsp
   14000ba20:	mov    QWORD PTR [rsp+0x48],rax
   14000ba25:	mov    ebx,edx
   14000ba27:	test   rcx,rcx
   14000ba2a:	jne    0x14000ba49
   14000ba2c:	call   0x1400084e0
   14000ba31:	and    DWORD PTR [rax],0x0
   14000ba34:	call   0x140008500
   14000ba39:	mov    ebx,0x16
   14000ba3e:	mov    DWORD PTR [rax],ebx
   14000ba40:	call   0x1400083e0
   14000ba45:	mov    eax,ebx
   14000ba47:	jmp    0x14000baa7
   14000ba49:	test   edx,0xfffffff9
   14000ba4f:	jne    0x14000ba2c
   14000ba51:	lea    r8,[rsp+0x20]
   14000ba56:	xor    edx,edx
   14000ba58:	call   QWORD PTR [rip+0x8752]        # 0x1400141b0
   14000ba5e:	test   eax,eax
   14000ba60:	jne    0x14000ba78
   14000ba62:	call   QWORD PTR [rip+0x85b0]        # 0x140014018
   14000ba68:	mov    ecx,eax
   14000ba6a:	call   0x140008490
   14000ba6f:	call   0x140008500
   14000ba74:	mov    eax,DWORD PTR [rax]
   14000ba76:	jmp    0x14000baa7
   14000ba78:	test   BYTE PTR [rsp+0x20],0x10
   14000ba7d:	jne    0x14000baa5
   14000ba7f:	test   BYTE PTR [rsp+0x20],0x1
   14000ba84:	je     0x14000baa5
   14000ba86:	shr    ebx,1
   14000ba88:	test   bl,0x1
   14000ba8b:	je     0x14000baa5
   14000ba8d:	call   0x1400084e0
   14000ba92:	mov    DWORD PTR [rax],0x5
   14000ba98:	call   0x140008500
   14000ba9d:	mov    DWORD PTR [rax],0xd
   14000baa3:	jmp    0x14000ba6f
   14000baa5:	xor    eax,eax
   14000baa7:	mov    rcx,QWORD PTR [rsp+0x48]
   14000baac:	xor    rcx,rsp
   14000baaf:	call   0x140013230
   14000bab4:	add    rsp,0x50
   14000bab8:	pop    rbx
   14000bab9:	ret    
   14000baba:	int3   
   14000babb:	int3   
   14000babc:	cmp    rcx,rdx
   14000babf:	jae    0x14000bac5
   14000bac1:	or     eax,0xffffffff
   14000bac4:	ret    
   14000bac5:	xor    eax,eax
   14000bac7:	cmp    rcx,rdx
   14000baca:	seta   al
   14000bacd:	ret    
   14000bace:	int3   
   14000bacf:	int3   
   14000bad0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bad5:	mov    QWORD PTR [rsp+0x10],rdx
   14000bada:	push   rbp
   14000badb:	push   rsi
   14000badc:	push   rdi
   14000badd:	push   r12
   14000badf:	push   r13
   14000bae1:	push   r14
   14000bae3:	push   r15
   14000bae5:	mov    rbp,rsp
   14000bae8:	sub    rsp,0x60
   14000baec:	xor    edi,edi
   14000baee:	mov    rbx,rcx
   14000baf1:	test   rdx,rdx
   14000baf4:	jne    0x14000bb0c
   14000baf6:	call   0x140008500
   14000bafb:	lea    ebx,[rdi+0x16]
   14000bafe:	mov    DWORD PTR [rax],ebx
   14000bb00:	call   0x1400083e0
   14000bb05:	mov    eax,ebx
   14000bb07:	jmp    0x14000bcac
   14000bb0c:	xorps  xmm0,xmm0
   14000bb0f:	mov    QWORD PTR [rdx],rdi
   14000bb12:	cmp    QWORD PTR [rcx],rdi
   14000bb15:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14000bb1a:	mov    QWORD PTR [rbp-0x10],rdi
   14000bb1e:	je     0x14000bb77
   14000bb20:	mov    rcx,QWORD PTR [rbx]
   14000bb23:	lea    rdx,[rbp+0x50]
   14000bb27:	mov    WORD PTR [rbp+0x50],0x3f2a
   14000bb2d:	mov    BYTE PTR [rbp+0x52],dil
   14000bb31:	call   0x1400116a8
   14000bb36:	mov    rcx,QWORD PTR [rbx]
   14000bb39:	test   rax,rax
   14000bb3c:	jne    0x14000bb4e
   14000bb3e:	lea    r9,[rbp-0x20]
   14000bb42:	xor    r8d,r8d
   14000bb45:	xor    edx,edx
   14000bb47:	call   0x14000bcdc
   14000bb4c:	jmp    0x14000bb5a
   14000bb4e:	lea    r8,[rbp-0x20]
   14000bb52:	mov    rdx,rax
   14000bb55:	call   0x14000bdec
   14000bb5a:	mov    r14d,eax
   14000bb5d:	test   eax,eax
   14000bb5f:	jne    0x14000bb6a
   14000bb61:	add    rbx,0x8
   14000bb65:	cmp    QWORD PTR [rbx],rdi
   14000bb68:	jmp    0x14000bb1e
   14000bb6a:	mov    r12,QWORD PTR [rbp-0x18]
   14000bb6e:	mov    rsi,QWORD PTR [rbp-0x20]
   14000bb72:	jmp    0x14000bc70
   14000bb77:	mov    rsi,QWORD PTR [rbp-0x20]
   14000bb7b:	mov    r9,rdi
   14000bb7e:	mov    r12,QWORD PTR [rbp-0x18]
   14000bb82:	mov    rdx,rsi
   14000bb85:	mov    rax,r12
   14000bb88:	mov    QWORD PTR [rbp+0x50],rdi
   14000bb8c:	sub    rax,rsi
   14000bb8f:	mov    r8,rdi
   14000bb92:	mov    r15,rax
   14000bb95:	sar    r15,0x3
   14000bb99:	inc    r15
   14000bb9c:	lea    rcx,[rax+0x7]
   14000bba0:	shr    rcx,0x3
   14000bba4:	cmp    rsi,r12
   14000bba7:	cmova  rcx,rdi
   14000bbab:	or     r14,0xffffffffffffffff
   14000bbaf:	test   rcx,rcx
   14000bbb2:	je     0x14000bbd9
   14000bbb4:	mov    r10,QWORD PTR [rdx]
   14000bbb7:	mov    rax,r14
   14000bbba:	inc    rax
   14000bbbd:	cmp    BYTE PTR [r10+rax*1],dil
   14000bbc1:	jne    0x14000bbba
   14000bbc3:	inc    r9
   14000bbc6:	add    rdx,0x8
   14000bbca:	add    r9,rax
   14000bbcd:	inc    r8
   14000bbd0:	cmp    r8,rcx
   14000bbd3:	jne    0x14000bbb4
   14000bbd5:	mov    QWORD PTR [rbp+0x50],r9
   14000bbd9:	mov    r8d,0x1
   14000bbdf:	mov    rdx,r9
   14000bbe2:	mov    rcx,r15
   14000bbe5:	call   0x140006b10
   14000bbea:	mov    rbx,rax
   14000bbed:	test   rax,rax
   14000bbf0:	je     0x14000bc69
   14000bbf2:	lea    rdx,[rax+r15*8]
   14000bbf6:	mov    r15,rsi
   14000bbf9:	mov    QWORD PTR [rbp-0x28],rdx
   14000bbfd:	mov    rax,rdx
   14000bc00:	mov    QWORD PTR [rbp+0x58],rdx
   14000bc04:	cmp    rsi,r12
   14000bc07:	je     0x14000bc5f
   14000bc09:	mov    rcx,rbx
   14000bc0c:	sub    rcx,rsi
   14000bc0f:	mov    QWORD PTR [rbp-0x30],rcx
   14000bc13:	mov    r8,QWORD PTR [r15]
   14000bc16:	mov    r13,r14
   14000bc19:	inc    r13
   14000bc1c:	cmp    BYTE PTR [r8+r13*1],dil
   14000bc20:	jne    0x14000bc19
   14000bc22:	sub    rdx,rax
   14000bc25:	inc    r13
   14000bc28:	add    rdx,QWORD PTR [rbp+0x50]
   14000bc2c:	mov    r9,r13
   14000bc2f:	mov    rcx,rax
   14000bc32:	call   0x1400115d4
   14000bc37:	test   eax,eax
   14000bc39:	jne    0x14000bcc4
   14000bc3f:	mov    rax,QWORD PTR [rbp+0x58]
   14000bc43:	mov    rcx,QWORD PTR [rbp-0x30]
   14000bc47:	mov    rdx,QWORD PTR [rbp-0x28]
   14000bc4b:	mov    QWORD PTR [rcx+r15*1],rax
   14000bc4f:	add    rax,r13
   14000bc52:	add    r15,0x8
   14000bc56:	mov    QWORD PTR [rbp+0x58],rax
   14000bc5a:	cmp    r15,r12
   14000bc5d:	jne    0x14000bc13
   14000bc5f:	mov    rax,QWORD PTR [rbp+0x48]
   14000bc63:	mov    r14d,edi
   14000bc66:	mov    QWORD PTR [rax],rbx
   14000bc69:	xor    ecx,ecx
   14000bc6b:	call   0x140007cc4
   14000bc70:	mov    rbx,r12
   14000bc73:	mov    r15,rsi
   14000bc76:	sub    rbx,rsi
   14000bc79:	add    rbx,0x7
   14000bc7d:	shr    rbx,0x3
   14000bc81:	cmp    rsi,r12
   14000bc84:	cmova  rbx,rdi
   14000bc88:	test   rbx,rbx
   14000bc8b:	je     0x14000bca1
   14000bc8d:	mov    rcx,QWORD PTR [r15]
   14000bc90:	call   0x140007cc4
   14000bc95:	inc    rdi
   14000bc98:	lea    r15,[r15+0x8]
   14000bc9c:	cmp    rdi,rbx
   14000bc9f:	jne    0x14000bc8d
   14000bca1:	mov    rcx,rsi
   14000bca4:	call   0x140007cc4
   14000bca9:	mov    eax,r14d
   14000bcac:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000bcb4:	add    rsp,0x60
   14000bcb8:	pop    r15
   14000bcba:	pop    r14
   14000bcbc:	pop    r13
   14000bcbe:	pop    r12
   14000bcc0:	pop    rdi
   14000bcc1:	pop    rsi
   14000bcc2:	pop    rbp
   14000bcc3:	ret    
   14000bcc4:	xor    r9d,r9d
   14000bcc7:	mov    QWORD PTR [rsp+0x20],rdi
   14000bccc:	xor    r8d,r8d
   14000bccf:	xor    edx,edx
   14000bcd1:	xor    ecx,ecx
   14000bcd3:	call   0x140008400
   14000bcd8:	int3   
   14000bcd9:	int3   
   14000bcda:	int3   
   14000bcdb:	int3   
   14000bcdc:	mov    rax,rsp
   14000bcdf:	mov    QWORD PTR [rax+0x8],rbx
   14000bce3:	mov    QWORD PTR [rax+0x10],rbp
   14000bce7:	mov    QWORD PTR [rax+0x18],rsi
   14000bceb:	mov    QWORD PTR [rax+0x20],rdi
   14000bcef:	push   r12
   14000bcf1:	push   r14
   14000bcf3:	push   r15
   14000bcf5:	sub    rsp,0x30
   14000bcf9:	or     rax,0xffffffffffffffff
   14000bcfd:	mov    rsi,r9
   14000bd00:	mov    rdi,rax
   14000bd03:	mov    rbp,r8
   14000bd06:	mov    r12,rdx
   14000bd09:	mov    r15,rcx
   14000bd0c:	inc    rdi
   14000bd0f:	cmp    BYTE PTR [rcx+rdi*1],0x0
   14000bd13:	jne    0x14000bd0c
   14000bd15:	mov    edx,0x1
   14000bd1a:	sub    rax,r8
   14000bd1d:	add    rdi,rdx
   14000bd20:	cmp    rdi,rax
   14000bd23:	jbe    0x14000bd47
   14000bd25:	lea    eax,[rdx+0xb]
   14000bd28:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bd2d:	mov    rbp,QWORD PTR [rsp+0x58]
   14000bd32:	mov    rsi,QWORD PTR [rsp+0x60]
   14000bd37:	mov    rdi,QWORD PTR [rsp+0x68]
   14000bd3c:	add    rsp,0x30
   14000bd40:	pop    r15
   14000bd42:	pop    r14
   14000bd44:	pop    r12
   14000bd46:	ret    
   14000bd47:	lea    r14,[r8+0x1]
   14000bd4b:	add    r14,rdi
   14000bd4e:	mov    rcx,r14
   14000bd51:	call   0x140007e1c
   14000bd56:	mov    rbx,rax
   14000bd59:	test   rbp,rbp
   14000bd5c:	je     0x14000bd73
   14000bd5e:	mov    r9,rbp
   14000bd61:	mov    r8,r12
   14000bd64:	mov    rdx,r14
   14000bd67:	mov    rcx,rax
   14000bd6a:	call   0x1400115d4
   14000bd6f:	test   eax,eax
   14000bd71:	jne    0x14000bdc0
   14000bd73:	sub    r14,rbp
   14000bd76:	lea    rcx,[rbx+rbp*1]
   14000bd7a:	mov    rdx,r14
   14000bd7d:	mov    r9,rdi
   14000bd80:	mov    r8,r15
   14000bd83:	call   0x1400115d4
   14000bd88:	test   eax,eax
   14000bd8a:	jne    0x14000bdd6
   14000bd8c:	mov    rcx,rsi
   14000bd8f:	call   0x14000bf98
   14000bd94:	mov    edi,eax
   14000bd96:	test   eax,eax
   14000bd98:	je     0x14000bda4
   14000bd9a:	mov    rcx,rbx
   14000bd9d:	call   0x140007cc4
   14000bda2:	jmp    0x14000bdb2
   14000bda4:	mov    rax,QWORD PTR [rsi+0x8]
   14000bda8:	mov    QWORD PTR [rax],rbx
   14000bdab:	add    QWORD PTR [rsi+0x8],0x8
   14000bdb0:	xor    edi,edi
   14000bdb2:	xor    ecx,ecx
   14000bdb4:	call   0x140007cc4
   14000bdb9:	mov    eax,edi
   14000bdbb:	jmp    0x14000bd28
   14000bdc0:	and    QWORD PTR [rsp+0x20],0x0
   14000bdc6:	xor    r9d,r9d
   14000bdc9:	xor    r8d,r8d
   14000bdcc:	xor    edx,edx
   14000bdce:	xor    ecx,ecx
   14000bdd0:	call   0x140008400
   14000bdd5:	int3   
   14000bdd6:	and    QWORD PTR [rsp+0x20],0x0
   14000bddc:	xor    r9d,r9d
   14000bddf:	xor    r8d,r8d
   14000bde2:	xor    edx,edx
   14000bde4:	xor    ecx,ecx
   14000bde6:	call   0x140008400
   14000bdeb:	int3   
   14000bdec:	mov    QWORD PTR [rsp+0x20],rbx
   14000bdf1:	push   rbp
   14000bdf2:	push   rsi
   14000bdf3:	push   rdi
   14000bdf4:	push   r14
   14000bdf6:	push   r15
   14000bdf8:	sub    rsp,0x180
   14000bdff:	mov    rax,QWORD PTR [rip+0x12212]        # 0x14001e018
   14000be06:	xor    rax,rsp
   14000be09:	mov    QWORD PTR [rsp+0x170],rax
   14000be11:	mov    r14,r8
   14000be14:	mov    rsi,rcx
   14000be17:	movabs rbx,0x200000000801
   14000be21:	cmp    rdx,rcx
   14000be24:	je     0x14000be48
   14000be26:	mov    al,BYTE PTR [rdx]
   14000be28:	sub    al,0x2f
   14000be2a:	cmp    al,0x2d
   14000be2c:	ja     0x14000be38
   14000be2e:	movsx  rax,al
   14000be32:	bt     rbx,rax
   14000be36:	jb     0x14000be48
   14000be38:	mov    rcx,rsi
   14000be3b:	call   0x140011748
   14000be40:	mov    rdx,rax
   14000be43:	cmp    rax,rsi
   14000be46:	jne    0x14000be26
   14000be48:	mov    cl,BYTE PTR [rdx]
   14000be4a:	cmp    cl,0x3a
   14000be4d:	jne    0x14000be6d
   14000be4f:	lea    rax,[rsi+0x1]
   14000be53:	cmp    rdx,rax
   14000be56:	je     0x14000be6d
   14000be58:	mov    r9,r14
   14000be5b:	xor    r8d,r8d
   14000be5e:	xor    edx,edx
   14000be60:	mov    rcx,rsi
   14000be63:	call   0x14000bcdc
   14000be68:	jmp    0x14000beee
   14000be6d:	sub    cl,0x2f
   14000be70:	xor    edi,edi
   14000be72:	cmp    cl,0x2d
   14000be75:	ja     0x14000be84
   14000be77:	movsx  rax,cl
   14000be7b:	bt     rbx,rax
   14000be7f:	lea    eax,[rdi+0x1]
   14000be82:	jb     0x14000be86
   14000be84:	mov    eax,edi
   14000be86:	sub    rdx,rsi
   14000be89:	lea    rcx,[rsp+0x30]
   14000be8e:	inc    rdx
   14000be91:	mov    r8d,0x140
   14000be97:	neg    al
   14000be99:	sbb    r15,r15
   14000be9c:	and    r15,rdx
   14000be9f:	xor    edx,edx
   14000bea1:	call   0x140002cb0
   14000bea6:	xor    r9d,r9d
   14000bea9:	mov    DWORD PTR [rsp+0x28],edi
   14000bead:	lea    r8,[rsp+0x30]
   14000beb2:	mov    QWORD PTR [rsp+0x20],rdi
   14000beb7:	xor    edx,edx
   14000beb9:	mov    rcx,rsi
   14000bebc:	call   QWORD PTR [rip+0x82fe]        # 0x1400141c0
   14000bec2:	mov    rbx,rax
   14000bec5:	cmp    rax,0xffffffffffffffff
   14000bec9:	jne    0x14000bf15
   14000becb:	mov    r9,r14
   14000bece:	xor    r8d,r8d
   14000bed1:	xor    edx,edx
   14000bed3:	mov    rcx,rsi
   14000bed6:	call   0x14000bcdc
   14000bedb:	mov    edi,eax
   14000bedd:	cmp    rbx,0xffffffffffffffff
   14000bee1:	je     0x14000beec
   14000bee3:	mov    rcx,rbx
   14000bee6:	call   QWORD PTR [rip+0x82cc]        # 0x1400141b8
   14000beec:	mov    eax,edi
   14000beee:	mov    rcx,QWORD PTR [rsp+0x170]
   14000bef6:	xor    rcx,rsp
   14000bef9:	call   0x140013230
   14000befe:	mov    rbx,QWORD PTR [rsp+0x1c8]
   14000bf06:	add    rsp,0x180
   14000bf0d:	pop    r15
   14000bf0f:	pop    r14
   14000bf11:	pop    rdi
   14000bf12:	pop    rsi
   14000bf13:	pop    rbp
   14000bf14:	ret    
   14000bf15:	mov    rbp,QWORD PTR [r14+0x8]
   14000bf19:	sub    rbp,QWORD PTR [r14]
   14000bf1c:	sar    rbp,0x3
   14000bf20:	cmp    BYTE PTR [rsp+0x5c],0x2e
   14000bf25:	jne    0x14000bf3a
   14000bf27:	mov    al,BYTE PTR [rsp+0x5d]
   14000bf2b:	test   al,al
   14000bf2d:	je     0x14000bf51
   14000bf2f:	cmp    al,0x2e
   14000bf31:	jne    0x14000bf3a
   14000bf33:	cmp    BYTE PTR [rsp+0x5e],dil
   14000bf38:	je     0x14000bf51
   14000bf3a:	mov    r9,r14
   14000bf3d:	lea    rcx,[rsp+0x5c]
   14000bf42:	mov    r8,r15
   14000bf45:	mov    rdx,rsi
   14000bf48:	call   0x14000bcdc
   14000bf4d:	test   eax,eax
   14000bf4f:	jne    0x14000bedb
   14000bf51:	lea    rdx,[rsp+0x30]
   14000bf56:	mov    rcx,rbx
   14000bf59:	call   QWORD PTR [rip+0x8269]        # 0x1400141c8
   14000bf5f:	test   eax,eax
   14000bf61:	jne    0x14000bf20
   14000bf63:	mov    rax,QWORD PTR [r14]
   14000bf66:	mov    rdx,QWORD PTR [r14+0x8]
   14000bf6a:	sub    rdx,rax
   14000bf6d:	sar    rdx,0x3
   14000bf71:	cmp    rbp,rdx
   14000bf74:	je     0x14000bedd
   14000bf7a:	sub    rdx,rbp
   14000bf7d:	lea    rcx,[rax+rbp*8]
   14000bf81:	lea    r9,[rip+0xfffffffffffffb34]        # 0x14000babc
   14000bf88:	mov    r8d,0x8
   14000bf8e:	call   0x1400112a0
   14000bf93:	jmp    0x14000bedd
   14000bf98:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf9d:	mov    QWORD PTR [rsp+0x10],rbp
   14000bfa2:	mov    QWORD PTR [rsp+0x18],rsi
   14000bfa7:	push   rdi
   14000bfa8:	sub    rsp,0x20
   14000bfac:	mov    rsi,QWORD PTR [rcx+0x10]
   14000bfb0:	mov    rdi,rcx
   14000bfb3:	cmp    QWORD PTR [rcx+0x8],rsi
   14000bfb7:	je     0x14000bfc0
   14000bfb9:	xor    eax,eax
   14000bfbb:	jmp    0x14000c04a
   14000bfc0:	xor    ebx,ebx
   14000bfc2:	cmp    QWORD PTR [rcx],rbx
   14000bfc5:	jne    0x14000bff9
   14000bfc7:	lea    edx,[rbx+0x8]
   14000bfca:	lea    ecx,[rbx+0x4]
   14000bfcd:	call   0x140007e1c
   14000bfd2:	xor    ecx,ecx
   14000bfd4:	mov    QWORD PTR [rdi],rax
   14000bfd7:	call   0x140007cc4
   14000bfdc:	mov    rax,QWORD PTR [rdi]
   14000bfdf:	test   rax,rax
   14000bfe2:	jne    0x14000bfeb
   14000bfe4:	mov    eax,0xc
   14000bfe9:	jmp    0x14000c04a
   14000bfeb:	mov    QWORD PTR [rdi+0x8],rax
   14000bfef:	add    rax,0x20
   14000bff3:	mov    QWORD PTR [rdi+0x10],rax
   14000bff7:	jmp    0x14000bfb9
   14000bff9:	sub    rsi,QWORD PTR [rcx]
   14000bffc:	movabs rax,0x7fffffffffffffff
   14000c006:	sar    rsi,0x3
   14000c00a:	cmp    rsi,rax
   14000c00d:	ja     0x14000bfe4
   14000c00f:	mov    rcx,QWORD PTR [rcx]
   14000c012:	lea    rbp,[rsi+rsi*1]
   14000c016:	mov    rdx,rbp
   14000c019:	mov    r8d,0x8
   14000c01f:	call   0x14000d900
   14000c024:	test   rax,rax
   14000c027:	jne    0x14000c02e
   14000c029:	lea    ebx,[rax+0xc]
   14000c02c:	jmp    0x14000c041
   14000c02e:	lea    rcx,[rax+rsi*8]
   14000c032:	mov    QWORD PTR [rdi],rax
   14000c035:	mov    QWORD PTR [rdi+0x8],rcx
   14000c039:	lea    rcx,[rax+rbp*8]
   14000c03d:	mov    QWORD PTR [rdi+0x10],rcx
   14000c041:	xor    ecx,ecx
   14000c043:	call   0x140007cc4
   14000c048:	mov    eax,ebx
   14000c04a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c04f:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c054:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c059:	add    rsp,0x20
   14000c05d:	pop    rdi
   14000c05e:	ret    
   14000c05f:	int3   
   14000c060:	jmp    0x14000bad0
   14000c065:	int3   
   14000c066:	int3   
   14000c067:	int3   
   14000c068:	mov    QWORD PTR [rsp+0x8],rbx
   14000c06d:	mov    QWORD PTR [rsp+0x20],r9
   14000c072:	push   rdi
   14000c073:	sub    rsp,0x20
   14000c077:	mov    rbx,r9
   14000c07a:	mov    rdi,r8
   14000c07d:	mov    ecx,DWORD PTR [rdx]
   14000c07f:	call   0x14000ad90
   14000c084:	nop
   14000c085:	mov    rcx,rdi
   14000c088:	call   0x14000c0a0
   14000c08d:	nop
   14000c08e:	mov    ecx,DWORD PTR [rbx]
   14000c090:	call   0x14000ade4
   14000c095:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c09a:	add    rsp,0x20
   14000c09e:	pop    rdi
   14000c09f:	ret    
   14000c0a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c0a5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c0aa:	push   rdi
   14000c0ab:	sub    rsp,0x20
   14000c0af:	mov    rax,QWORD PTR [rcx]
   14000c0b2:	mov    rbx,rcx
   14000c0b5:	mov    rdx,QWORD PTR [rax]
   14000c0b8:	mov    rax,QWORD PTR [rdx+0x88]
   14000c0bf:	mov    edx,DWORD PTR [rax+0x4]
   14000c0c2:	mov    DWORD PTR [rip+0x134f4],edx        # 0x14001f5bc
   14000c0c8:	mov    rax,QWORD PTR [rcx]
   14000c0cb:	mov    rdx,QWORD PTR [rax]
   14000c0ce:	mov    rax,QWORD PTR [rdx+0x88]
   14000c0d5:	mov    edx,DWORD PTR [rax+0x8]
   14000c0d8:	mov    DWORD PTR [rip+0x134e2],edx        # 0x14001f5c0
   14000c0de:	mov    rax,QWORD PTR [rcx]
   14000c0e1:	mov    rdx,QWORD PTR [rax]
   14000c0e4:	mov    rax,QWORD PTR [rdx+0x88]
   14000c0eb:	mov    rcx,QWORD PTR [rax+0x220]
   14000c0f2:	mov    QWORD PTR [rip+0x134df],rcx        # 0x14001f5d8
   14000c0f9:	mov    rax,QWORD PTR [rbx]
   14000c0fc:	mov    rcx,QWORD PTR [rax]
   14000c0ff:	mov    rax,QWORD PTR [rcx+0x88]
   14000c106:	add    rax,0xc
   14000c10a:	je     0x14000c123
   14000c10c:	movsd  xmm0,QWORD PTR [rax]
   14000c110:	movsd  QWORD PTR [rip+0x134b0],xmm0        # 0x14001f5c8
   14000c118:	mov    eax,DWORD PTR [rax+0x8]
   14000c11b:	mov    DWORD PTR [rip+0x134af],eax        # 0x14001f5d0
   14000c121:	jmp    0x14000c142
   14000c123:	xor    eax,eax
   14000c125:	mov    QWORD PTR [rip+0x1349c],rax        # 0x14001f5c8
   14000c12c:	mov    DWORD PTR [rip+0x1349e],eax        # 0x14001f5d0
   14000c132:	call   0x140008500
   14000c137:	mov    DWORD PTR [rax],0x16
   14000c13d:	call   0x1400083e0
   14000c142:	mov    rax,QWORD PTR [rbx]
   14000c145:	mov    edi,0x2
   14000c14a:	mov    rcx,QWORD PTR [rax]
   14000c14d:	lea    esi,[rdi+0x7e]
   14000c150:	mov    rax,QWORD PTR [rcx+0x88]
   14000c157:	lea    rcx,[rip+0x124f2]        # 0x14001e650
   14000c15e:	add    rax,0x18
   14000c162:	je     0x14000c1b6
   14000c164:	mov    edx,edi
   14000c166:	movups xmm0,XMMWORD PTR [rax]
   14000c169:	movups XMMWORD PTR [rcx],xmm0
   14000c16c:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000c170:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000c174:	movups xmm0,XMMWORD PTR [rax+0x20]
   14000c178:	movups XMMWORD PTR [rcx+0x20],xmm0
   14000c17c:	movups xmm1,XMMWORD PTR [rax+0x30]
   14000c180:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000c184:	movups xmm0,XMMWORD PTR [rax+0x40]
   14000c188:	movups XMMWORD PTR [rcx+0x40],xmm0
   14000c18c:	movups xmm1,XMMWORD PTR [rax+0x50]
   14000c190:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000c194:	movups xmm0,XMMWORD PTR [rax+0x60]
   14000c198:	movups XMMWORD PTR [rcx+0x60],xmm0
   14000c19c:	add    rcx,rsi
   14000c19f:	movups xmm1,XMMWORD PTR [rax+0x70]
   14000c1a3:	add    rax,rsi
   14000c1a6:	movups XMMWORD PTR [rcx-0x10],xmm1
   14000c1aa:	sub    rdx,0x1
   14000c1ae:	jne    0x14000c166
   14000c1b0:	mov    al,BYTE PTR [rax]
   14000c1b2:	mov    BYTE PTR [rcx],al
   14000c1b4:	jmp    0x14000c1d3
   14000c1b6:	xor    edx,edx
   14000c1b8:	mov    r8d,0x101
   14000c1be:	call   0x140002cb0
   14000c1c3:	call   0x140008500
   14000c1c8:	mov    DWORD PTR [rax],0x16
   14000c1ce:	call   0x1400083e0
   14000c1d3:	mov    rax,QWORD PTR [rbx]
   14000c1d6:	mov    rcx,QWORD PTR [rax]
   14000c1d9:	mov    rax,QWORD PTR [rcx+0x88]
   14000c1e0:	lea    rcx,[rip+0x12579]        # 0x14001e760
   14000c1e7:	add    rax,0x119
   14000c1ed:	je     0x14000c23b
   14000c1ef:	movups xmm0,XMMWORD PTR [rax]
   14000c1f2:	movups XMMWORD PTR [rcx],xmm0
   14000c1f5:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000c1f9:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000c1fd:	movups xmm0,XMMWORD PTR [rax+0x20]
   14000c201:	movups XMMWORD PTR [rcx+0x20],xmm0
   14000c205:	movups xmm1,XMMWORD PTR [rax+0x30]
   14000c209:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000c20d:	movups xmm0,XMMWORD PTR [rax+0x40]
   14000c211:	movups XMMWORD PTR [rcx+0x40],xmm0
   14000c215:	movups xmm1,XMMWORD PTR [rax+0x50]
   14000c219:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000c21d:	movups xmm0,XMMWORD PTR [rax+0x60]
   14000c221:	movups XMMWORD PTR [rcx+0x60],xmm0
   14000c225:	add    rcx,rsi
   14000c228:	movups xmm1,XMMWORD PTR [rax+0x70]
   14000c22c:	add    rax,rsi
   14000c22f:	movups XMMWORD PTR [rcx-0x10],xmm1
   14000c233:	sub    rdi,0x1
   14000c237:	jne    0x14000c1ef
   14000c239:	jmp    0x14000c258
   14000c23b:	xor    edx,edx
   14000c23d:	mov    r8d,0x100
   14000c243:	call   0x140002cb0
   14000c248:	call   0x140008500
   14000c24d:	mov    DWORD PTR [rax],0x16
   14000c253:	call   0x1400083e0
   14000c258:	mov    rcx,QWORD PTR [rip+0x122e9]        # 0x14001e548
   14000c25f:	or     eax,0xffffffff
   14000c262:	lock xadd DWORD PTR [rcx],eax
   14000c266:	cmp    eax,0x1
   14000c269:	jne    0x14000c283
   14000c26b:	mov    rcx,QWORD PTR [rip+0x122d6]        # 0x14001e548
   14000c272:	lea    rax,[rip+0x120a7]        # 0x14001e320
   14000c279:	cmp    rcx,rax
   14000c27c:	je     0x14000c283
   14000c27e:	call   0x140007cc4
   14000c283:	mov    rax,QWORD PTR [rbx]
   14000c286:	mov    rcx,QWORD PTR [rax]
   14000c289:	mov    rax,QWORD PTR [rcx+0x88]
   14000c290:	mov    QWORD PTR [rip+0x122b1],rax        # 0x14001e548
   14000c297:	mov    rax,QWORD PTR [rbx]
   14000c29a:	mov    rcx,QWORD PTR [rax]
   14000c29d:	mov    rax,QWORD PTR [rcx+0x88]
   14000c2a4:	lock inc DWORD PTR [rax]
   14000c2a7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c2ac:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c2b1:	add    rsp,0x20
   14000c2b5:	pop    rdi
   14000c2b6:	ret    
   14000c2b7:	int3   
   14000c2b8:	rex push rbx
   14000c2ba:	sub    rsp,0x40
   14000c2be:	mov    ebx,ecx
   14000c2c0:	xor    edx,edx
   14000c2c2:	lea    rcx,[rsp+0x20]
   14000c2c7:	call   0x140003ab0
   14000c2cc:	and    DWORD PTR [rip+0x13301],0x0        # 0x14001f5d4
   14000c2d3:	cmp    ebx,0xfffffffe
   14000c2d6:	jne    0x14000c2ea
   14000c2d8:	mov    DWORD PTR [rip+0x132f2],0x1        # 0x14001f5d4
   14000c2e2:	call   QWORD PTR [rip+0x7ef0]        # 0x1400141d8
   14000c2e8:	jmp    0x14000c2ff
   14000c2ea:	cmp    ebx,0xfffffffd
   14000c2ed:	jne    0x14000c303
   14000c2ef:	mov    DWORD PTR [rip+0x132db],0x1        # 0x14001f5d4
   14000c2f9:	call   QWORD PTR [rip+0x7e71]        # 0x140014170
   14000c2ff:	mov    ebx,eax
   14000c301:	jmp    0x14000c31a
   14000c303:	cmp    ebx,0xfffffffc
   14000c306:	jne    0x14000c31a
   14000c308:	mov    rax,QWORD PTR [rsp+0x28]
   14000c30d:	mov    DWORD PTR [rip+0x132bd],0x1        # 0x14001f5d4
   14000c317:	mov    ebx,DWORD PTR [rax+0xc]
   14000c31a:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c31f:	je     0x14000c32d
   14000c321:	mov    rcx,QWORD PTR [rsp+0x20]
   14000c326:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14000c32d:	mov    eax,ebx
   14000c32f:	add    rsp,0x40
   14000c333:	pop    rbx
   14000c334:	ret    
   14000c335:	int3   
   14000c336:	int3   
   14000c337:	int3   
   14000c338:	mov    QWORD PTR [rsp+0x8],rbx
   14000c33d:	mov    QWORD PTR [rsp+0x10],rbp
   14000c342:	mov    QWORD PTR [rsp+0x18],rsi
   14000c347:	push   rdi
   14000c348:	sub    rsp,0x20
   14000c34c:	lea    rbx,[rcx+0x18]
   14000c350:	mov    rsi,rcx
   14000c353:	mov    ebp,0x101
   14000c358:	mov    rcx,rbx
   14000c35b:	mov    r8d,ebp
   14000c35e:	xor    edx,edx
   14000c360:	call   0x140002cb0
   14000c365:	xor    eax,eax
   14000c367:	lea    rdi,[rsi+0xc]
   14000c36b:	mov    QWORD PTR [rsi+0x4],rax
   14000c36f:	mov    ecx,0x6
   14000c374:	mov    QWORD PTR [rsi+0x220],rax
   14000c37b:	movzx  eax,ax
   14000c37e:	rep stos WORD PTR es:[rdi],ax
   14000c381:	lea    rdi,[rip+0x11f98]        # 0x14001e320
   14000c388:	sub    rdi,rsi
   14000c38b:	mov    al,BYTE PTR [rdi+rbx*1]
   14000c38e:	mov    BYTE PTR [rbx],al
   14000c390:	inc    rbx
   14000c393:	sub    rbp,0x1
   14000c397:	jne    0x14000c38b
   14000c399:	lea    rcx,[rsi+0x119]
   14000c3a0:	mov    edx,0x100
   14000c3a5:	mov    al,BYTE PTR [rcx+rdi*1]
   14000c3a8:	mov    BYTE PTR [rcx],al
   14000c3aa:	inc    rcx
   14000c3ad:	sub    rdx,0x1
   14000c3b1:	jne    0x14000c3a5
   14000c3b3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c3b8:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c3bd:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c3c2:	add    rsp,0x20
   14000c3c6:	pop    rdi
   14000c3c7:	ret    
   14000c3c8:	mov    QWORD PTR [rsp+0x10],rbx
   14000c3cd:	mov    QWORD PTR [rsp+0x18],rdi
   14000c3d2:	push   rbp
   14000c3d3:	lea    rbp,[rsp-0x680]
   14000c3db:	sub    rsp,0x780
   14000c3e2:	mov    rax,QWORD PTR [rip+0x11c2f]        # 0x14001e018
   14000c3e9:	xor    rax,rsp
   14000c3ec:	mov    QWORD PTR [rbp+0x670],rax
   14000c3f3:	mov    rdi,rcx
   14000c3f6:	lea    rdx,[rsp+0x50]
   14000c3fb:	mov    ecx,DWORD PTR [rcx+0x4]
   14000c3fe:	call   QWORD PTR [rip+0x7ddc]        # 0x1400141e0
   14000c404:	mov    ebx,0x100
   14000c409:	test   eax,eax
   14000c40b:	je     0x14000c547
   14000c411:	xor    eax,eax
   14000c413:	lea    rcx,[rsp+0x70]
   14000c418:	mov    BYTE PTR [rcx],al
   14000c41a:	inc    eax
   14000c41c:	inc    rcx
   14000c41f:	cmp    eax,ebx
   14000c421:	jb     0x14000c418
   14000c423:	mov    al,BYTE PTR [rsp+0x56]
   14000c427:	lea    rdx,[rsp+0x56]
   14000c42c:	mov    BYTE PTR [rsp+0x70],0x20
   14000c431:	jmp    0x14000c455
   14000c433:	movzx  r8d,BYTE PTR [rdx+0x1]
   14000c438:	movzx  ecx,al
   14000c43b:	jmp    0x14000c44a
   14000c43d:	cmp    ecx,ebx
   14000c43f:	jae    0x14000c44f
   14000c441:	mov    eax,ecx
   14000c443:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   14000c448:	inc    ecx
   14000c44a:	cmp    ecx,r8d
   14000c44d:	jbe    0x14000c43d
   14000c44f:	add    rdx,0x2
   14000c453:	mov    al,BYTE PTR [rdx]
   14000c455:	test   al,al
   14000c457:	jne    0x14000c433
   14000c459:	mov    eax,DWORD PTR [rdi+0x4]
   14000c45c:	lea    r8,[rsp+0x70]
   14000c461:	and    DWORD PTR [rsp+0x30],0x0
   14000c466:	mov    r9d,ebx
   14000c469:	mov    DWORD PTR [rsp+0x28],eax
   14000c46d:	mov    edx,0x1
   14000c472:	lea    rax,[rbp+0x270]
   14000c479:	xor    ecx,ecx
   14000c47b:	mov    QWORD PTR [rsp+0x20],rax
   14000c480:	call   0x14000d340
   14000c485:	and    DWORD PTR [rsp+0x40],0x0
   14000c48a:	lea    r9,[rsp+0x70]
   14000c48f:	mov    eax,DWORD PTR [rdi+0x4]
   14000c492:	mov    r8d,ebx
   14000c495:	mov    rdx,QWORD PTR [rdi+0x220]
   14000c49c:	xor    ecx,ecx
   14000c49e:	mov    DWORD PTR [rsp+0x38],eax
   14000c4a2:	lea    rax,[rbp+0x70]
   14000c4a6:	mov    DWORD PTR [rsp+0x30],ebx
   14000c4aa:	mov    QWORD PTR [rsp+0x28],rax
   14000c4af:	mov    DWORD PTR [rsp+0x20],ebx
   14000c4b3:	call   0x14000ef08
   14000c4b8:	and    DWORD PTR [rsp+0x40],0x0
   14000c4bd:	lea    r9,[rsp+0x70]
   14000c4c2:	mov    eax,DWORD PTR [rdi+0x4]
   14000c4c5:	mov    r8d,0x200
   14000c4cb:	mov    rdx,QWORD PTR [rdi+0x220]
   14000c4d2:	xor    ecx,ecx
   14000c4d4:	mov    DWORD PTR [rsp+0x38],eax
   14000c4d8:	lea    rax,[rbp+0x170]
   14000c4df:	mov    DWORD PTR [rsp+0x30],ebx
   14000c4e3:	mov    QWORD PTR [rsp+0x28],rax
   14000c4e8:	mov    DWORD PTR [rsp+0x20],ebx
   14000c4ec:	call   0x14000ef08
   14000c4f1:	lea    r8,[rbp+0x70]
   14000c4f5:	sub    r8,rdi
   14000c4f8:	lea    r9,[rbp+0x170]
   14000c4ff:	sub    r9,rdi
   14000c502:	lea    rdx,[rbp+0x270]
   14000c509:	lea    rcx,[rdi+0x19]
   14000c50d:	test   BYTE PTR [rdx],0x1
   14000c510:	je     0x14000c51c
   14000c512:	or     BYTE PTR [rcx],0x10
   14000c515:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14000c51a:	jmp    0x14000c529
   14000c51c:	test   BYTE PTR [rdx],0x2
   14000c51f:	je     0x14000c531
   14000c521:	or     BYTE PTR [rcx],0x20
   14000c524:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   14000c529:	mov    BYTE PTR [rcx+0x100],al
   14000c52f:	jmp    0x14000c538
   14000c531:	mov    BYTE PTR [rcx+0x100],0x0
   14000c538:	inc    rcx
   14000c53b:	add    rdx,0x2
   14000c53f:	sub    rbx,0x1
   14000c543:	jne    0x14000c50d
   14000c545:	jmp    0x14000c586
   14000c547:	xor    edx,edx
   14000c549:	lea    rcx,[rdi+0x19]
   14000c54d:	lea    r8d,[rdx-0x61]
   14000c551:	lea    eax,[r8+0x20]
   14000c555:	cmp    eax,0x19
   14000c558:	ja     0x14000c562
   14000c55a:	or     BYTE PTR [rcx],0x10
   14000c55d:	lea    eax,[rdx+0x20]
   14000c560:	jmp    0x14000c56e
   14000c562:	cmp    r8d,0x19
   14000c566:	ja     0x14000c576
   14000c568:	or     BYTE PTR [rcx],0x20
   14000c56b:	lea    eax,[rdx-0x20]
   14000c56e:	mov    BYTE PTR [rcx+0x100],al
   14000c574:	jmp    0x14000c57d
   14000c576:	mov    BYTE PTR [rcx+0x100],0x0
   14000c57d:	inc    edx
   14000c57f:	inc    rcx
   14000c582:	cmp    edx,ebx
   14000c584:	jb     0x14000c54d
   14000c586:	mov    rcx,QWORD PTR [rbp+0x670]
   14000c58d:	xor    rcx,rsp
   14000c590:	call   0x140013230
   14000c595:	lea    r11,[rsp+0x780]
   14000c59d:	mov    rbx,QWORD PTR [r11+0x18]
   14000c5a1:	mov    rdi,QWORD PTR [r11+0x20]
   14000c5a5:	mov    rsp,r11
   14000c5a8:	pop    rbp
   14000c5a9:	ret    
   14000c5aa:	int3   
   14000c5ab:	int3   
   14000c5ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000c5b1:	push   rbp
   14000c5b2:	push   rsi
   14000c5b3:	push   rdi
   14000c5b4:	mov    rbp,rsp
   14000c5b7:	sub    rsp,0x40
   14000c5bb:	mov    sil,dl
   14000c5be:	mov    ebx,ecx
   14000c5c0:	call   0x140009d6c
   14000c5c5:	mov    QWORD PTR [rbp-0x18],rax
   14000c5c9:	call   0x14000c78c
   14000c5ce:	mov    ecx,ebx
   14000c5d0:	call   0x14000c2b8
   14000c5d5:	mov    rcx,QWORD PTR [rbp-0x18]
   14000c5d9:	mov    edi,eax
   14000c5db:	mov    r8,QWORD PTR [rcx+0x88]
   14000c5e2:	cmp    eax,DWORD PTR [r8+0x4]
   14000c5e6:	jne    0x14000c5ef
   14000c5e8:	xor    eax,eax
   14000c5ea:	jmp    0x14000c6a7
   14000c5ef:	mov    ecx,0x228
   14000c5f4:	call   0x140007d04
   14000c5f9:	mov    rbx,rax
   14000c5fc:	test   rax,rax
   14000c5ff:	je     0x14000c69a
   14000c605:	mov    rax,QWORD PTR [rbp-0x18]
   14000c609:	mov    edx,0x4
   14000c60e:	mov    rcx,rbx
   14000c611:	mov    rax,QWORD PTR [rax+0x88]
   14000c618:	lea    r8d,[rdx+0x7c]
   14000c61c:	movups xmm0,XMMWORD PTR [rax]
   14000c61f:	movups XMMWORD PTR [rcx],xmm0
   14000c622:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000c626:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000c62a:	movups xmm0,XMMWORD PTR [rax+0x20]
   14000c62e:	movups XMMWORD PTR [rcx+0x20],xmm0
   14000c632:	movups xmm1,XMMWORD PTR [rax+0x30]
   14000c636:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000c63a:	movups xmm0,XMMWORD PTR [rax+0x40]
   14000c63e:	movups XMMWORD PTR [rcx+0x40],xmm0
   14000c642:	movups xmm1,XMMWORD PTR [rax+0x50]
   14000c646:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000c64a:	movups xmm0,XMMWORD PTR [rax+0x60]
   14000c64e:	movups XMMWORD PTR [rcx+0x60],xmm0
   14000c652:	add    rcx,r8
   14000c655:	movups xmm1,XMMWORD PTR [rax+0x70]
   14000c659:	add    rax,r8
   14000c65c:	movups XMMWORD PTR [rcx-0x10],xmm1
   14000c660:	sub    rdx,0x1
   14000c664:	jne    0x14000c61c
   14000c666:	movups xmm0,XMMWORD PTR [rax]
   14000c669:	movups XMMWORD PTR [rcx],xmm0
   14000c66c:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000c670:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000c674:	mov    rax,QWORD PTR [rax+0x20]
   14000c678:	mov    QWORD PTR [rcx+0x20],rax
   14000c67c:	mov    ecx,edi
   14000c67e:	and    DWORD PTR [rbx],edx
   14000c680:	mov    rdx,rbx
   14000c683:	call   0x14000c84c
   14000c688:	mov    edi,eax
   14000c68a:	cmp    eax,0xffffffff
   14000c68d:	jne    0x14000c6b4
   14000c68f:	call   0x140008500
   14000c694:	mov    DWORD PTR [rax],0x16
   14000c69a:	or     edi,0xffffffff
   14000c69d:	mov    rcx,rbx
   14000c6a0:	call   0x140007cc4
   14000c6a5:	mov    eax,edi
   14000c6a7:	mov    rbx,QWORD PTR [rsp+0x60]
   14000c6ac:	add    rsp,0x40
   14000c6b0:	pop    rdi
   14000c6b1:	pop    rsi
   14000c6b2:	pop    rbp
   14000c6b3:	ret    
   14000c6b4:	test   sil,sil
   14000c6b7:	jne    0x14000c6be
   14000c6b9:	call   0x140007400
   14000c6be:	mov    rax,QWORD PTR [rbp-0x18]
   14000c6c2:	mov    rcx,QWORD PTR [rax+0x88]
   14000c6c9:	or     eax,0xffffffff
   14000c6cc:	lock xadd DWORD PTR [rcx],eax
   14000c6d0:	cmp    eax,0x1
   14000c6d3:	jne    0x14000c6f1
   14000c6d5:	mov    rax,QWORD PTR [rbp-0x18]
   14000c6d9:	mov    rcx,QWORD PTR [rax+0x88]
   14000c6e0:	lea    rax,[rip+0x11c39]        # 0x14001e320
   14000c6e7:	cmp    rcx,rax
   14000c6ea:	je     0x14000c6f1
   14000c6ec:	call   0x140007cc4
   14000c6f1:	mov    DWORD PTR [rbx],0x1
   14000c6f7:	mov    rcx,rbx
   14000c6fa:	mov    rax,QWORD PTR [rbp-0x18]
   14000c6fe:	xor    ebx,ebx
   14000c700:	mov    QWORD PTR [rax+0x88],rcx
   14000c707:	mov    rax,QWORD PTR [rbp-0x18]
   14000c70b:	test   BYTE PTR [rax+0x3a8],0x2
   14000c712:	jne    0x14000c69d
   14000c714:	test   BYTE PTR [rip+0x121e5],0x1        # 0x14001e900
   14000c71b:	jne    0x14000c69d
   14000c71d:	lea    rax,[rbp-0x18]
   14000c721:	mov    QWORD PTR [rbp-0x10],rax
   14000c725:	lea    r9,[rbp+0x38]
   14000c729:	lea    eax,[rbx+0x5]
   14000c72c:	lea    r8,[rbp-0x10]
   14000c730:	mov    DWORD PTR [rbp+0x38],eax
   14000c733:	lea    rdx,[rbp-0x20]
   14000c737:	mov    DWORD PTR [rbp-0x20],eax
   14000c73a:	lea    rcx,[rbp+0x30]
   14000c73e:	call   0x14000c068
   14000c743:	mov    rax,QWORD PTR [rip+0x11bc6]        # 0x14001e310
   14000c74a:	test   sil,sil
   14000c74d:	cmovne rax,QWORD PTR [rip+0x11df3]        # 0x14001e548
   14000c755:	mov    QWORD PTR [rip+0x11bb4],rax        # 0x14001e310
   14000c75c:	jmp    0x14000c69d
   14000c761:	int3   
   14000c762:	int3   
   14000c763:	int3   
   14000c764:	sub    rsp,0x28
   14000c768:	cmp    BYTE PTR [rip+0x12e71],0x0        # 0x14001f5e0
   14000c76f:	jne    0x14000c784
   14000c771:	mov    dl,0x1
   14000c773:	mov    ecx,0xfffffffd
   14000c778:	call   0x14000c5ac
   14000c77d:	mov    BYTE PTR [rip+0x12e5c],0x1        # 0x14001f5e0
   14000c784:	mov    al,0x1
   14000c786:	add    rsp,0x28
   14000c78a:	ret    
   14000c78b:	int3   
   14000c78c:	mov    QWORD PTR [rsp+0x10],rbx
   14000c791:	push   rdi
   14000c792:	sub    rsp,0x20
   14000c796:	call   0x140009d6c
   14000c79b:	mov    rdi,rax
   14000c79e:	mov    ecx,DWORD PTR [rip+0x1215c]        # 0x14001e900
   14000c7a4:	test   DWORD PTR [rax+0x3a8],ecx
   14000c7aa:	je     0x14000c7bf
   14000c7ac:	cmp    QWORD PTR [rax+0x90],0x0
   14000c7b4:	je     0x14000c7bf
   14000c7b6:	mov    rbx,QWORD PTR [rax+0x88]
   14000c7bd:	jmp    0x14000c832
   14000c7bf:	mov    ecx,0x5
   14000c7c4:	call   0x14000ad90
   14000c7c9:	nop
   14000c7ca:	mov    rbx,QWORD PTR [rdi+0x88]
   14000c7d1:	mov    QWORD PTR [rsp+0x30],rbx
   14000c7d6:	cmp    rbx,QWORD PTR [rip+0x11d6b]        # 0x14001e548
   14000c7dd:	je     0x14000c828
   14000c7df:	test   rbx,rbx
   14000c7e2:	je     0x14000c806
   14000c7e4:	or     eax,0xffffffff
   14000c7e7:	lock xadd DWORD PTR [rbx],eax
   14000c7eb:	cmp    eax,0x1
   14000c7ee:	jne    0x14000c806
   14000c7f0:	lea    rax,[rip+0x11b29]        # 0x14001e320
   14000c7f7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c7fc:	cmp    rcx,rax
   14000c7ff:	je     0x14000c806
   14000c801:	call   0x140007cc4
   14000c806:	mov    rax,QWORD PTR [rip+0x11d3b]        # 0x14001e548
   14000c80d:	mov    QWORD PTR [rdi+0x88],rax
   14000c814:	mov    rax,QWORD PTR [rip+0x11d2d]        # 0x14001e548
   14000c81b:	mov    QWORD PTR [rsp+0x30],rax
   14000c820:	lock inc DWORD PTR [rax]
   14000c823:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c828:	mov    ecx,0x5
   14000c82d:	call   0x14000ade4
   14000c832:	test   rbx,rbx
   14000c835:	jne    0x14000c83d
   14000c837:	call   0x140007dc4
   14000c83c:	int3   
   14000c83d:	mov    rax,rbx
   14000c840:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c845:	add    rsp,0x20
   14000c849:	pop    rdi
   14000c84a:	ret    
   14000c84b:	int3   
   14000c84c:	mov    QWORD PTR [rsp+0x18],rbx
   14000c851:	mov    QWORD PTR [rsp+0x20],rbp
   14000c856:	push   rsi
   14000c857:	push   rdi
   14000c858:	push   r12
   14000c85a:	push   r14
   14000c85c:	push   r15
   14000c85e:	sub    rsp,0x40
   14000c862:	mov    rax,QWORD PTR [rip+0x117af]        # 0x14001e018
   14000c869:	xor    rax,rsp
   14000c86c:	mov    QWORD PTR [rsp+0x38],rax
   14000c871:	mov    rbx,rdx
   14000c874:	call   0x14000c2b8
   14000c879:	xor    esi,esi
   14000c87b:	mov    edi,eax
   14000c87d:	test   eax,eax
   14000c87f:	jne    0x14000c88e
   14000c881:	mov    rcx,rbx
   14000c884:	call   0x14000c338
   14000c889:	jmp    0x14000cacb
   14000c88e:	lea    r12,[rip+0x11ccb]        # 0x14001e560
   14000c895:	mov    ebp,esi
   14000c897:	mov    rax,r12
   14000c89a:	mov    r15d,0x1
   14000c8a0:	cmp    DWORD PTR [rax],edi
   14000c8a2:	je     0x14000c9d8
   14000c8a8:	add    ebp,r15d
   14000c8ab:	add    rax,0x30
   14000c8af:	cmp    ebp,0x5
   14000c8b2:	jb     0x14000c8a0
   14000c8b4:	lea    eax,[rdi-0xfde8]
   14000c8ba:	cmp    eax,r15d
   14000c8bd:	jbe    0x14000c9d0
   14000c8c3:	movzx  ecx,di
   14000c8c6:	call   QWORD PTR [rip+0x7904]        # 0x1400141d0
   14000c8cc:	test   eax,eax
   14000c8ce:	je     0x14000c9d0
   14000c8d4:	lea    rdx,[rsp+0x20]
   14000c8d9:	mov    ecx,edi
   14000c8db:	call   QWORD PTR [rip+0x78ff]        # 0x1400141e0
   14000c8e1:	test   eax,eax
   14000c8e3:	je     0x14000c9c4
   14000c8e9:	lea    rcx,[rbx+0x18]
   14000c8ed:	xor    edx,edx
   14000c8ef:	mov    r8d,0x101
   14000c8f5:	call   0x140002cb0
   14000c8fa:	mov    DWORD PTR [rbx+0x4],edi
   14000c8fd:	mov    QWORD PTR [rbx+0x220],rsi
   14000c904:	cmp    DWORD PTR [rsp+0x20],r15d
   14000c909:	jbe    0x14000c9ad
   14000c90f:	lea    rcx,[rsp+0x26]
   14000c914:	cmp    BYTE PTR [rsp+0x26],sil
   14000c919:	je     0x14000c94b
   14000c91b:	cmp    BYTE PTR [rcx+0x1],sil
   14000c91f:	je     0x14000c94b
   14000c921:	movzx  eax,BYTE PTR [rcx+0x1]
   14000c925:	movzx  edx,BYTE PTR [rcx]
   14000c928:	cmp    edx,eax
   14000c92a:	ja     0x14000c942
   14000c92c:	sub    eax,edx
   14000c92e:	lea    edi,[rdx+0x1]
   14000c931:	lea    edx,[r15+rax*1]
   14000c935:	or     BYTE PTR [rdi+rbx*1+0x18],0x4
   14000c93a:	add    edi,r15d
   14000c93d:	sub    rdx,r15
   14000c940:	jne    0x14000c935
   14000c942:	add    rcx,0x2
   14000c946:	cmp    BYTE PTR [rcx],sil
   14000c949:	jne    0x14000c91b
   14000c94b:	lea    rax,[rbx+0x1a]
   14000c94f:	mov    ecx,0xfe
   14000c954:	or     BYTE PTR [rax],0x8
   14000c957:	add    rax,r15
   14000c95a:	sub    rcx,r15
   14000c95d:	jne    0x14000c954
   14000c95f:	mov    ecx,DWORD PTR [rbx+0x4]
   14000c962:	sub    ecx,0x3a4
   14000c968:	je     0x14000c999
   14000c96a:	sub    ecx,0x4
   14000c96d:	je     0x14000c990
   14000c96f:	sub    ecx,0xd
   14000c972:	je     0x14000c987
   14000c974:	cmp    ecx,r15d
   14000c977:	je     0x14000c97e
   14000c979:	mov    rax,rsi
   14000c97c:	jmp    0x14000c9a0
   14000c97e:	mov    rax,QWORD PTR [rip+0x9863]        # 0x1400161e8
   14000c985:	jmp    0x14000c9a0
   14000c987:	mov    rax,QWORD PTR [rip+0x9852]        # 0x1400161e0
   14000c98e:	jmp    0x14000c9a0
   14000c990:	mov    rax,QWORD PTR [rip+0x9841]        # 0x1400161d8
   14000c997:	jmp    0x14000c9a0
   14000c999:	mov    rax,QWORD PTR [rip+0x9830]        # 0x1400161d0
   14000c9a0:	mov    QWORD PTR [rbx+0x220],rax
   14000c9a7:	mov    DWORD PTR [rbx+0x8],r15d
   14000c9ab:	jmp    0x14000c9b0
   14000c9ad:	mov    DWORD PTR [rbx+0x8],esi
   14000c9b0:	lea    rdi,[rbx+0xc]
   14000c9b4:	movzx  eax,si
   14000c9b7:	mov    ecx,0x6
   14000c9bc:	rep stos WORD PTR es:[rdi],ax
   14000c9bf:	jmp    0x14000cac3
   14000c9c4:	cmp    DWORD PTR [rip+0x12c0a],esi        # 0x14001f5d4
   14000c9ca:	jne    0x14000c881
   14000c9d0:	or     eax,0xffffffff
   14000c9d3:	jmp    0x14000cacd
   14000c9d8:	lea    rcx,[rbx+0x18]
   14000c9dc:	xor    edx,edx
   14000c9de:	mov    r8d,0x101
   14000c9e4:	call   0x140002cb0
   14000c9e9:	mov    eax,ebp
   14000c9eb:	lea    r9,[r12+0x10]
   14000c9f0:	lea    r14,[rip+0x11b59]        # 0x14001e550
   14000c9f7:	mov    ebp,0x4
   14000c9fc:	lea    r11,[rax+rax*2]
   14000ca00:	shl    r11,0x4
   14000ca04:	add    r9,r11
   14000ca07:	mov    rdx,r9
   14000ca0a:	cmp    BYTE PTR [r9],sil
   14000ca0d:	je     0x14000ca4f
   14000ca0f:	cmp    BYTE PTR [rdx+0x1],sil
   14000ca13:	je     0x14000ca4f
   14000ca15:	movzx  r8d,BYTE PTR [rdx]
   14000ca19:	movzx  eax,BYTE PTR [rdx+0x1]
   14000ca1d:	cmp    r8d,eax
   14000ca20:	ja     0x14000ca46
   14000ca22:	lea    r10d,[r8+0x1]
   14000ca26:	cmp    r10d,0x101
   14000ca2d:	jae    0x14000ca46
   14000ca2f:	mov    al,BYTE PTR [r14]
   14000ca32:	add    r8d,r15d
   14000ca35:	or     BYTE PTR [r10+rbx*1+0x18],al
   14000ca3a:	add    r10d,r15d
   14000ca3d:	movzx  eax,BYTE PTR [rdx+0x1]
   14000ca41:	cmp    r8d,eax
   14000ca44:	jbe    0x14000ca26
   14000ca46:	add    rdx,0x2
   14000ca4a:	cmp    BYTE PTR [rdx],sil
   14000ca4d:	jne    0x14000ca0f
   14000ca4f:	add    r9,0x8
   14000ca53:	add    r14,r15
   14000ca56:	sub    rbp,r15
   14000ca59:	jne    0x14000ca07
   14000ca5b:	mov    DWORD PTR [rbx+0x4],edi
   14000ca5e:	mov    DWORD PTR [rbx+0x8],r15d
   14000ca62:	sub    edi,0x3a4
   14000ca68:	je     0x14000ca94
   14000ca6a:	sub    edi,0x4
   14000ca6d:	je     0x14000ca8b
   14000ca6f:	sub    edi,0xd
   14000ca72:	je     0x14000ca82
   14000ca74:	cmp    edi,r15d
   14000ca77:	jne    0x14000ca9b
   14000ca79:	mov    rsi,QWORD PTR [rip+0x9768]        # 0x1400161e8
   14000ca80:	jmp    0x14000ca9b
   14000ca82:	mov    rsi,QWORD PTR [rip+0x9757]        # 0x1400161e0
   14000ca89:	jmp    0x14000ca9b
   14000ca8b:	mov    rsi,QWORD PTR [rip+0x9746]        # 0x1400161d8
   14000ca92:	jmp    0x14000ca9b
   14000ca94:	mov    rsi,QWORD PTR [rip+0x9735]        # 0x1400161d0
   14000ca9b:	sub    r11,rbx
   14000ca9e:	mov    QWORD PTR [rbx+0x220],rsi
   14000caa5:	lea    rcx,[rbx+0xc]
   14000caa9:	mov    edx,0x6
   14000caae:	lea    rdi,[r11+r12*1]
   14000cab2:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14000cab7:	mov    WORD PTR [rcx],ax
   14000caba:	lea    rcx,[rcx+0x2]
   14000cabe:	sub    rdx,r15
   14000cac1:	jne    0x14000cab2
   14000cac3:	mov    rcx,rbx
   14000cac6:	call   0x14000c3c8
   14000cacb:	xor    eax,eax
   14000cacd:	mov    rcx,QWORD PTR [rsp+0x38]
   14000cad2:	xor    rcx,rsp
   14000cad5:	call   0x140013230
   14000cada:	lea    r11,[rsp+0x40]
   14000cadf:	mov    rbx,QWORD PTR [r11+0x40]
   14000cae3:	mov    rbp,QWORD PTR [r11+0x48]
   14000cae7:	mov    rsp,r11
   14000caea:	pop    r15
   14000caec:	pop    r14
   14000caee:	pop    r12
   14000caf0:	pop    rdi
   14000caf1:	pop    rsi
   14000caf2:	ret    
   14000caf3:	int3   
   14000caf4:	mov    QWORD PTR [rsp+0x8],rbx
   14000caf9:	mov    QWORD PTR [rsp+0x10],rsi
   14000cafe:	push   rdi
   14000caff:	sub    rsp,0x40
   14000cb03:	mov    ebx,edx
   14000cb05:	mov    edi,r9d
   14000cb08:	mov    rdx,rcx
   14000cb0b:	mov    esi,r8d
   14000cb0e:	lea    rcx,[rsp+0x20]
   14000cb13:	call   0x140003ab0
   14000cb18:	mov    rax,QWORD PTR [rsp+0x30]
   14000cb1d:	movzx  edx,bl
   14000cb20:	test   BYTE PTR [rdx+rax*1+0x19],dil
   14000cb25:	jne    0x14000cb41
   14000cb27:	test   esi,esi
   14000cb29:	je     0x14000cb3b
   14000cb2b:	mov    rax,QWORD PTR [rsp+0x28]
   14000cb30:	mov    rcx,QWORD PTR [rax]
   14000cb33:	movzx  eax,WORD PTR [rcx+rdx*2]
   14000cb37:	and    eax,esi
   14000cb39:	jmp    0x14000cb3d
   14000cb3b:	xor    eax,eax
   14000cb3d:	test   eax,eax
   14000cb3f:	je     0x14000cb46
   14000cb41:	mov    eax,0x1
   14000cb46:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cb4b:	je     0x14000cb59
   14000cb4d:	mov    rcx,QWORD PTR [rsp+0x20]
   14000cb52:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14000cb59:	mov    rbx,QWORD PTR [rsp+0x50]
   14000cb5e:	mov    rsi,QWORD PTR [rsp+0x58]
   14000cb63:	add    rsp,0x40
   14000cb67:	pop    rdi
   14000cb68:	ret    
   14000cb69:	int3   
   14000cb6a:	int3   
   14000cb6b:	int3   
   14000cb6c:	mov    edx,ecx
   14000cb6e:	mov    r9d,0x4
   14000cb74:	xor    ecx,ecx
   14000cb76:	xor    r8d,r8d
   14000cb79:	jmp    0x14000caf4
   14000cb7e:	int3   
   14000cb7f:	int3   
   14000cb80:	mov    rax,rsp
   14000cb83:	mov    QWORD PTR [rax+0x8],rbx
   14000cb87:	mov    QWORD PTR [rax+0x10],rbp
   14000cb8b:	mov    QWORD PTR [rax+0x18],rsi
   14000cb8f:	mov    QWORD PTR [rax+0x20],rdi
   14000cb93:	push   r14
   14000cb95:	sub    rsp,0x40
   14000cb99:	call   QWORD PTR [rip+0x7649]        # 0x1400141e8
   14000cb9f:	xor    r14d,r14d
   14000cba2:	mov    rbx,rax
   14000cba5:	test   rax,rax
   14000cba8:	je     0x14000cc54
   14000cbae:	mov    rsi,rax
   14000cbb1:	cmp    WORD PTR [rax],r14w
   14000cbb5:	je     0x14000cbd3
   14000cbb7:	or     rax,0xffffffffffffffff
   14000cbbb:	inc    rax
   14000cbbe:	cmp    WORD PTR [rsi+rax*2],r14w
   14000cbc3:	jne    0x14000cbbb
   14000cbc5:	lea    rsi,[rsi+rax*2]
   14000cbc9:	add    rsi,0x2
   14000cbcd:	cmp    WORD PTR [rsi],r14w
   14000cbd1:	jne    0x14000cbb7
   14000cbd3:	mov    QWORD PTR [rsp+0x38],r14
   14000cbd8:	sub    rsi,rbx
   14000cbdb:	mov    QWORD PTR [rsp+0x30],r14
   14000cbe0:	add    rsi,0x2
   14000cbe4:	sar    rsi,1
   14000cbe7:	mov    r8,rbx
   14000cbea:	mov    r9d,esi
   14000cbed:	mov    DWORD PTR [rsp+0x28],r14d
   14000cbf2:	xor    edx,edx
   14000cbf4:	mov    QWORD PTR [rsp+0x20],r14
   14000cbf9:	xor    ecx,ecx
   14000cbfb:	call   QWORD PTR [rip+0x753f]        # 0x140014140
   14000cc01:	movsxd rbp,eax
   14000cc04:	test   eax,eax
   14000cc06:	je     0x14000cc54
   14000cc08:	mov    rcx,rbp
   14000cc0b:	call   0x140007d04
   14000cc10:	mov    rdi,rax
   14000cc13:	test   rax,rax
   14000cc16:	je     0x14000cc47
   14000cc18:	mov    QWORD PTR [rsp+0x38],r14
   14000cc1d:	mov    r9d,esi
   14000cc20:	mov    QWORD PTR [rsp+0x30],r14
   14000cc25:	mov    r8,rbx
   14000cc28:	mov    DWORD PTR [rsp+0x28],ebp
   14000cc2c:	xor    edx,edx
   14000cc2e:	xor    ecx,ecx
   14000cc30:	mov    QWORD PTR [rsp+0x20],rax
   14000cc35:	call   QWORD PTR [rip+0x7505]        # 0x140014140
   14000cc3b:	test   eax,eax
   14000cc3d:	je     0x14000cc47
   14000cc3f:	mov    rsi,rdi
   14000cc42:	mov    rdi,r14
   14000cc45:	jmp    0x14000cc4a
   14000cc47:	mov    rsi,r14
   14000cc4a:	mov    rcx,rdi
   14000cc4d:	call   0x140007cc4
   14000cc52:	jmp    0x14000cc57
   14000cc54:	mov    rsi,r14
   14000cc57:	test   rbx,rbx
   14000cc5a:	je     0x14000cc65
   14000cc5c:	mov    rcx,rbx
   14000cc5f:	call   QWORD PTR [rip+0x758b]        # 0x1400141f0
   14000cc65:	mov    rbx,QWORD PTR [rsp+0x50]
   14000cc6a:	mov    rax,rsi
   14000cc6d:	mov    rsi,QWORD PTR [rsp+0x60]
   14000cc72:	mov    rbp,QWORD PTR [rsp+0x58]
   14000cc77:	mov    rdi,QWORD PTR [rsp+0x68]
   14000cc7c:	add    rsp,0x40
   14000cc80:	pop    r14
   14000cc82:	ret    
   14000cc83:	int3   
   14000cc84:	mov    QWORD PTR [rsp+0x8],rbx
   14000cc89:	mov    QWORD PTR [rsp+0x10],rbp
   14000cc8e:	mov    QWORD PTR [rsp+0x18],rsi
   14000cc93:	push   rdi
   14000cc94:	sub    rsp,0x20
   14000cc98:	call   QWORD PTR [rip+0x754a]        # 0x1400141e8
   14000cc9e:	xor    esi,esi
   14000cca0:	mov    rbx,rax
   14000cca3:	test   rax,rax
   14000cca6:	je     0x14000cd03
   14000cca8:	jmp    0x14000ccbf
   14000ccaa:	or     rcx,0xffffffffffffffff
   14000ccae:	inc    rcx
   14000ccb1:	cmp    WORD PTR [rax+rcx*2],si
   14000ccb5:	jne    0x14000ccae
   14000ccb7:	lea    rax,[rax+rcx*2]
   14000ccbb:	add    rax,0x2
   14000ccbf:	cmp    WORD PTR [rax],si
   14000ccc2:	jne    0x14000ccaa
   14000ccc4:	sub    rax,rbx
   14000ccc7:	add    rax,0x2
   14000cccb:	sar    rax,1
   14000ccce:	lea    rbp,[rax+rax*1]
   14000ccd2:	mov    rcx,rbp
   14000ccd5:	call   0x140007d04
   14000ccda:	mov    rdi,rax
   14000ccdd:	test   rax,rax
   14000cce0:	je     0x14000ccf3
   14000cce2:	mov    r8,rbp
   14000cce5:	mov    rdx,rbx
   14000cce8:	mov    rcx,rax
   14000cceb:	call   0x140013570
   14000ccf0:	mov    rsi,rdi
   14000ccf3:	xor    ecx,ecx
   14000ccf5:	call   0x140007cc4
   14000ccfa:	mov    rcx,rbx
   14000ccfd:	call   QWORD PTR [rip+0x74ed]        # 0x1400141f0
   14000cd03:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cd08:	mov    rax,rsi
   14000cd0b:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cd10:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cd15:	add    rsp,0x20
   14000cd19:	pop    rdi
   14000cd1a:	ret    
   14000cd1b:	int3   
   14000cd1c:	mov    QWORD PTR [rsp+0x8],rbx
   14000cd21:	mov    QWORD PTR [rsp+0x10],rbp
   14000cd26:	mov    QWORD PTR [rsp+0x18],rsi
   14000cd2b:	push   rdi
   14000cd2c:	sub    rsp,0x20
   14000cd30:	mov    edx,0x40
   14000cd35:	mov    ecx,edx
   14000cd37:	call   0x140007e1c
   14000cd3c:	xor    esi,esi
   14000cd3e:	mov    rbx,rax
   14000cd41:	test   rax,rax
   14000cd44:	je     0x14000cd92
   14000cd46:	lea    rbp,[rax+0x1000]
   14000cd4d:	cmp    rax,rbp
   14000cd50:	je     0x14000cd8f
   14000cd52:	lea    rdi,[rax+0x30]
   14000cd56:	lea    rcx,[rdi-0x30]
   14000cd5a:	xor    r8d,r8d
   14000cd5d:	mov    edx,0xfa0
   14000cd62:	call   0x14000896c
   14000cd67:	or     QWORD PTR [rdi-0x8],0xffffffffffffffff
   14000cd6c:	mov    QWORD PTR [rdi],rsi
   14000cd6f:	mov    DWORD PTR [rdi+0x8],0xa0a0000
   14000cd76:	mov    BYTE PTR [rdi+0xc],0xa
   14000cd7a:	and    BYTE PTR [rdi+0xd],0xf8
   14000cd7e:	mov    BYTE PTR [rdi+0xe],sil
   14000cd82:	lea    rdi,[rdi+0x40]
   14000cd86:	lea    rax,[rdi-0x30]
   14000cd8a:	cmp    rax,rbp
   14000cd8d:	jne    0x14000cd56
   14000cd8f:	mov    rsi,rbx
   14000cd92:	xor    ecx,ecx
   14000cd94:	call   0x140007cc4
   14000cd99:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cd9e:	mov    rax,rsi
   14000cda1:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cda6:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cdab:	add    rsp,0x20
   14000cdaf:	pop    rdi
   14000cdb0:	ret    
   14000cdb1:	int3   
   14000cdb2:	int3   
   14000cdb3:	int3   
   14000cdb4:	test   rcx,rcx
   14000cdb7:	je     0x14000ce03
   14000cdb9:	mov    QWORD PTR [rsp+0x8],rbx
   14000cdbe:	mov    QWORD PTR [rsp+0x10],rsi
   14000cdc3:	push   rdi
   14000cdc4:	sub    rsp,0x20
   14000cdc8:	lea    rsi,[rcx+0x1000]
   14000cdcf:	mov    rbx,rcx
   14000cdd2:	mov    rdi,rcx
   14000cdd5:	cmp    rcx,rsi
   14000cdd8:	je     0x14000cdec
   14000cdda:	mov    rcx,rdi
   14000cddd:	call   QWORD PTR [rip+0x72fd]        # 0x1400140e0
   14000cde3:	add    rdi,0x40
   14000cde7:	cmp    rdi,rsi
   14000cdea:	jne    0x14000cdda
   14000cdec:	mov    rcx,rbx
   14000cdef:	call   0x140007cc4
   14000cdf4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cdf9:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cdfe:	add    rsp,0x20
   14000ce02:	pop    rdi
   14000ce03:	ret    
   14000ce04:	mov    QWORD PTR [rsp+0x8],rbx
   14000ce09:	mov    QWORD PTR [rsp+0x10],rsi
   14000ce0e:	mov    QWORD PTR [rsp+0x18],rdi
   14000ce13:	push   r15
   14000ce15:	sub    rsp,0x30
   14000ce19:	mov    esi,ecx
   14000ce1b:	xor    ebx,ebx
   14000ce1d:	mov    eax,ebx
   14000ce1f:	cmp    ecx,0x2000
   14000ce25:	setb   al
   14000ce28:	test   eax,eax
   14000ce2a:	jne    0x14000ce41
   14000ce2c:	call   0x140008500
   14000ce31:	mov    ebx,0x9
   14000ce36:	mov    DWORD PTR [rax],ebx
   14000ce38:	call   0x1400083e0
   14000ce3d:	mov    eax,ebx
   14000ce3f:	jmp    0x14000cea5
   14000ce41:	mov    ecx,0x7
   14000ce46:	call   0x14000ad90
   14000ce4b:	nop
   14000ce4c:	mov    rdi,rbx
   14000ce4f:	mov    QWORD PTR [rsp+0x20],rbx
   14000ce54:	mov    eax,DWORD PTR [rip+0x12526]        # 0x14001f380
   14000ce5a:	cmp    esi,eax
   14000ce5c:	jl     0x14000ce99
   14000ce5e:	lea    r15,[rip+0x1211b]        # 0x14001ef80
   14000ce65:	cmp    QWORD PTR [r15+rdi*8],rbx
   14000ce69:	je     0x14000ce6d
   14000ce6b:	jmp    0x14000ce8f
   14000ce6d:	call   0x14000cd1c
   14000ce72:	mov    QWORD PTR [r15+rdi*8],rax
   14000ce76:	test   rax,rax
   14000ce79:	jne    0x14000ce80
   14000ce7b:	lea    ebx,[rax+0xc]
   14000ce7e:	jmp    0x14000ce99
   14000ce80:	mov    eax,DWORD PTR [rip+0x124fa]        # 0x14001f380
   14000ce86:	add    eax,0x40
   14000ce89:	mov    DWORD PTR [rip+0x124f1],eax        # 0x14001f380
   14000ce8f:	inc    rdi
   14000ce92:	mov    QWORD PTR [rsp+0x20],rdi
   14000ce97:	jmp    0x14000ce5a
   14000ce99:	mov    ecx,0x7
   14000ce9e:	call   0x14000ade4
   14000cea3:	jmp    0x14000ce3d
   14000cea5:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ceaa:	mov    rsi,QWORD PTR [rsp+0x48]
   14000ceaf:	mov    rdi,QWORD PTR [rsp+0x50]
   14000ceb4:	add    rsp,0x30
   14000ceb8:	pop    r15
   14000ceba:	ret    
   14000cebb:	int3   
   14000cebc:	movsxd rcx,ecx
   14000cebf:	lea    rdx,[rip+0x120ba]        # 0x14001ef80
   14000cec6:	mov    rax,rcx
   14000cec9:	and    ecx,0x3f
   14000cecc:	sar    rax,0x6
   14000ced0:	shl    rcx,0x6
   14000ced4:	add    rcx,QWORD PTR [rdx+rax*8]
   14000ced8:	rex.W jmp QWORD PTR [rip+0x71f1]        # 0x1400140d0
   14000cedf:	int3   
   14000cee0:	movsxd rcx,ecx
   14000cee3:	lea    rdx,[rip+0x12096]        # 0x14001ef80
   14000ceea:	mov    rax,rcx
   14000ceed:	and    ecx,0x3f
   14000cef0:	sar    rax,0x6
   14000cef4:	shl    rcx,0x6
   14000cef8:	add    rcx,QWORD PTR [rdx+rax*8]
   14000cefc:	rex.W jmp QWORD PTR [rip+0x71d5]        # 0x1400140d8
   14000cf03:	int3   
   14000cf04:	mov    QWORD PTR [rsp+0x8],rbx
   14000cf09:	mov    QWORD PTR [rsp+0x10],rsi
   14000cf0e:	mov    QWORD PTR [rsp+0x18],rdi
   14000cf13:	push   r14
   14000cf15:	sub    rsp,0x20
   14000cf19:	movsxd rbx,ecx
   14000cf1c:	test   ecx,ecx
   14000cf1e:	js     0x14000cf92
   14000cf20:	cmp    ebx,DWORD PTR [rip+0x1245a]        # 0x14001f380
   14000cf26:	jae    0x14000cf92
   14000cf28:	mov    rdi,rbx
   14000cf2b:	lea    r14,[rip+0x1204e]        # 0x14001ef80
   14000cf32:	and    edi,0x3f
   14000cf35:	mov    rsi,rbx
   14000cf38:	sar    rsi,0x6
   14000cf3c:	shl    rdi,0x6
   14000cf40:	mov    rax,QWORD PTR [r14+rsi*8]
   14000cf44:	test   BYTE PTR [rax+rdi*1+0x38],0x1
   14000cf49:	je     0x14000cf92
   14000cf4b:	cmp    QWORD PTR [rax+rdi*1+0x28],0xffffffffffffffff
   14000cf51:	je     0x14000cf92
   14000cf53:	call   0x1400068ac
   14000cf58:	cmp    eax,0x1
   14000cf5b:	jne    0x14000cf84
   14000cf5d:	test   ebx,ebx
   14000cf5f:	je     0x14000cf77
   14000cf61:	sub    ebx,eax
   14000cf63:	je     0x14000cf70
   14000cf65:	cmp    ebx,eax
   14000cf67:	jne    0x14000cf84
   14000cf69:	mov    ecx,0xfffffff4
   14000cf6e:	jmp    0x14000cf7c
   14000cf70:	mov    ecx,0xfffffff5
   14000cf75:	jmp    0x14000cf7c
   14000cf77:	mov    ecx,0xfffffff6
   14000cf7c:	xor    edx,edx
   14000cf7e:	call   QWORD PTR [rip+0x7274]        # 0x1400141f8
   14000cf84:	mov    rax,QWORD PTR [r14+rsi*8]
   14000cf88:	or     QWORD PTR [rax+rdi*1+0x28],0xffffffffffffffff
   14000cf8e:	xor    eax,eax
   14000cf90:	jmp    0x14000cfa8
   14000cf92:	call   0x140008500
   14000cf97:	mov    DWORD PTR [rax],0x9
   14000cf9d:	call   0x1400084e0
   14000cfa2:	and    DWORD PTR [rax],0x0
   14000cfa5:	or     eax,0xffffffff
   14000cfa8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cfad:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cfb2:	mov    rdi,QWORD PTR [rsp+0x40]
   14000cfb7:	add    rsp,0x20
   14000cfbb:	pop    r14
   14000cfbd:	ret    
   14000cfbe:	int3   
   14000cfbf:	int3   
   14000cfc0:	sub    rsp,0x28
   14000cfc4:	cmp    ecx,0xfffffffe
   14000cfc7:	jne    0x14000cfde
   14000cfc9:	call   0x1400084e0
   14000cfce:	and    DWORD PTR [rax],0x0
   14000cfd1:	call   0x140008500
   14000cfd6:	mov    DWORD PTR [rax],0x9
   14000cfdc:	jmp    0x14000d02c
   14000cfde:	test   ecx,ecx
   14000cfe0:	js     0x14000d014
   14000cfe2:	cmp    ecx,DWORD PTR [rip+0x12398]        # 0x14001f380
   14000cfe8:	jae    0x14000d014
   14000cfea:	movsxd rdx,ecx
   14000cfed:	lea    rcx,[rip+0x11f8c]        # 0x14001ef80
   14000cff4:	mov    rax,rdx
   14000cff7:	and    edx,0x3f
   14000cffa:	sar    rax,0x6
   14000cffe:	shl    rdx,0x6
   14000d002:	mov    rax,QWORD PTR [rcx+rax*8]
   14000d006:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14000d00b:	je     0x14000d014
   14000d00d:	mov    rax,QWORD PTR [rax+rdx*1+0x28]
   14000d012:	jmp    0x14000d030
   14000d014:	call   0x1400084e0
   14000d019:	and    DWORD PTR [rax],0x0
   14000d01c:	call   0x140008500
   14000d021:	mov    DWORD PTR [rax],0x9
   14000d027:	call   0x1400083e0
   14000d02c:	or     rax,0xffffffffffffffff
   14000d030:	add    rsp,0x28
   14000d034:	ret    
   14000d035:	int3   
   14000d036:	int3   
   14000d037:	int3   
   14000d038:	test   rcx,rcx
   14000d03b:	je     0x14000d141
   14000d041:	push   rbx
   14000d042:	sub    rsp,0x20
   14000d046:	mov    rbx,rcx
   14000d049:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d04d:	cmp    rcx,QWORD PTR [rip+0x11824]        # 0x14001e878
   14000d054:	je     0x14000d05b
   14000d056:	call   0x140007cc4
   14000d05b:	mov    rcx,QWORD PTR [rbx+0x20]
   14000d05f:	cmp    rcx,QWORD PTR [rip+0x1181a]        # 0x14001e880
   14000d066:	je     0x14000d06d
   14000d068:	call   0x140007cc4
   14000d06d:	mov    rcx,QWORD PTR [rbx+0x28]
   14000d071:	cmp    rcx,QWORD PTR [rip+0x11810]        # 0x14001e888
   14000d078:	je     0x14000d07f
   14000d07a:	call   0x140007cc4
   14000d07f:	mov    rcx,QWORD PTR [rbx+0x30]
   14000d083:	cmp    rcx,QWORD PTR [rip+0x11806]        # 0x14001e890
   14000d08a:	je     0x14000d091
   14000d08c:	call   0x140007cc4
   14000d091:	mov    rcx,QWORD PTR [rbx+0x38]
   14000d095:	cmp    rcx,QWORD PTR [rip+0x117fc]        # 0x14001e898
   14000d09c:	je     0x14000d0a3
   14000d09e:	call   0x140007cc4
   14000d0a3:	mov    rcx,QWORD PTR [rbx+0x40]
   14000d0a7:	cmp    rcx,QWORD PTR [rip+0x117f2]        # 0x14001e8a0
   14000d0ae:	je     0x14000d0b5
   14000d0b0:	call   0x140007cc4
   14000d0b5:	mov    rcx,QWORD PTR [rbx+0x48]
   14000d0b9:	cmp    rcx,QWORD PTR [rip+0x117e8]        # 0x14001e8a8
   14000d0c0:	je     0x14000d0c7
   14000d0c2:	call   0x140007cc4
   14000d0c7:	mov    rcx,QWORD PTR [rbx+0x68]
   14000d0cb:	cmp    rcx,QWORD PTR [rip+0x117f6]        # 0x14001e8c8
   14000d0d2:	je     0x14000d0d9
   14000d0d4:	call   0x140007cc4
   14000d0d9:	mov    rcx,QWORD PTR [rbx+0x70]
   14000d0dd:	cmp    rcx,QWORD PTR [rip+0x117ec]        # 0x14001e8d0
   14000d0e4:	je     0x14000d0eb
   14000d0e6:	call   0x140007cc4
   14000d0eb:	mov    rcx,QWORD PTR [rbx+0x78]
   14000d0ef:	cmp    rcx,QWORD PTR [rip+0x117e2]        # 0x14001e8d8
   14000d0f6:	je     0x14000d0fd
   14000d0f8:	call   0x140007cc4
   14000d0fd:	mov    rcx,QWORD PTR [rbx+0x80]
   14000d104:	cmp    rcx,QWORD PTR [rip+0x117d5]        # 0x14001e8e0
   14000d10b:	je     0x14000d112
   14000d10d:	call   0x140007cc4
   14000d112:	mov    rcx,QWORD PTR [rbx+0x88]
   14000d119:	cmp    rcx,QWORD PTR [rip+0x117c8]        # 0x14001e8e8
   14000d120:	je     0x14000d127
   14000d122:	call   0x140007cc4
   14000d127:	mov    rcx,QWORD PTR [rbx+0x90]
   14000d12e:	cmp    rcx,QWORD PTR [rip+0x117bb]        # 0x14001e8f0
   14000d135:	je     0x14000d13c
   14000d137:	call   0x140007cc4
   14000d13c:	add    rsp,0x20
   14000d140:	pop    rbx
   14000d141:	ret    
   14000d142:	int3   
   14000d143:	int3   
   14000d144:	test   rcx,rcx
   14000d147:	je     0x14000d1af
   14000d149:	push   rbx
   14000d14a:	sub    rsp,0x20
   14000d14e:	mov    rbx,rcx
   14000d151:	mov    rcx,QWORD PTR [rcx]
   14000d154:	cmp    rcx,QWORD PTR [rip+0x11705]        # 0x14001e860
   14000d15b:	je     0x14000d162
   14000d15d:	call   0x140007cc4
   14000d162:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d166:	cmp    rcx,QWORD PTR [rip+0x116fb]        # 0x14001e868
   14000d16d:	je     0x14000d174
   14000d16f:	call   0x140007cc4
   14000d174:	mov    rcx,QWORD PTR [rbx+0x10]
   14000d178:	cmp    rcx,QWORD PTR [rip+0x116f1]        # 0x14001e870
   14000d17f:	je     0x14000d186
   14000d181:	call   0x140007cc4
   14000d186:	mov    rcx,QWORD PTR [rbx+0x58]
   14000d18a:	cmp    rcx,QWORD PTR [rip+0x11727]        # 0x14001e8b8
   14000d191:	je     0x14000d198
   14000d193:	call   0x140007cc4
   14000d198:	mov    rcx,QWORD PTR [rbx+0x60]
   14000d19c:	cmp    rcx,QWORD PTR [rip+0x1171d]        # 0x14001e8c0
   14000d1a3:	je     0x14000d1aa
   14000d1a5:	call   0x140007cc4
   14000d1aa:	add    rsp,0x20
   14000d1ae:	pop    rbx
   14000d1af:	ret    
   14000d1b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d1b5:	mov    QWORD PTR [rsp+0x10],rsi
   14000d1ba:	push   rdi
   14000d1bb:	sub    rsp,0x20
   14000d1bf:	xor    edi,edi
   14000d1c1:	lea    rax,[rcx+rdx*8]
   14000d1c5:	mov    rsi,rax
   14000d1c8:	mov    rbx,rcx
   14000d1cb:	sub    rsi,rcx
   14000d1ce:	add    rsi,0x7
   14000d1d2:	shr    rsi,0x3
   14000d1d6:	cmp    rcx,rax
   14000d1d9:	cmova  rsi,rdi
   14000d1dd:	test   rsi,rsi
   14000d1e0:	je     0x14000d1f6
   14000d1e2:	mov    rcx,QWORD PTR [rbx]
   14000d1e5:	call   0x140007cc4
   14000d1ea:	inc    rdi
   14000d1ed:	lea    rbx,[rbx+0x8]
   14000d1f1:	cmp    rdi,rsi
   14000d1f4:	jne    0x14000d1e2
   14000d1f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d1fb:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d200:	add    rsp,0x20
   14000d204:	pop    rdi
   14000d205:	ret    
   14000d206:	int3   
   14000d207:	int3   
   14000d208:	test   rcx,rcx
   14000d20b:	je     0x14000d30f
   14000d211:	mov    QWORD PTR [rsp+0x8],rbx
   14000d216:	mov    QWORD PTR [rsp+0x10],rbp
   14000d21b:	push   rsi
   14000d21c:	sub    rsp,0x20
   14000d220:	mov    ebp,0x7
   14000d225:	mov    rbx,rcx
   14000d228:	mov    edx,ebp
   14000d22a:	call   0x14000d1b0
   14000d22f:	lea    rcx,[rbx+0x38]
   14000d233:	mov    edx,ebp
   14000d235:	call   0x14000d1b0
   14000d23a:	lea    esi,[rbp+0x5]
   14000d23d:	mov    edx,esi
   14000d23f:	lea    rcx,[rbx+0x70]
   14000d243:	call   0x14000d1b0
   14000d248:	lea    rcx,[rbx+0xd0]
   14000d24f:	mov    edx,esi
   14000d251:	call   0x14000d1b0
   14000d256:	lea    rcx,[rbx+0x130]
   14000d25d:	lea    edx,[rbp-0x5]
   14000d260:	call   0x14000d1b0
   14000d265:	mov    rcx,QWORD PTR [rbx+0x140]
   14000d26c:	call   0x140007cc4
   14000d271:	mov    rcx,QWORD PTR [rbx+0x148]
   14000d278:	call   0x140007cc4
   14000d27d:	mov    rcx,QWORD PTR [rbx+0x150]
   14000d284:	call   0x140007cc4
   14000d289:	lea    rcx,[rbx+0x160]
   14000d290:	mov    edx,ebp
   14000d292:	call   0x14000d1b0
   14000d297:	lea    rcx,[rbx+0x198]
   14000d29e:	mov    edx,ebp
   14000d2a0:	call   0x14000d1b0
   14000d2a5:	lea    rcx,[rbx+0x1d0]
   14000d2ac:	mov    edx,esi
   14000d2ae:	call   0x14000d1b0
   14000d2b3:	lea    rcx,[rbx+0x230]
   14000d2ba:	mov    edx,esi
   14000d2bc:	call   0x14000d1b0
   14000d2c1:	lea    rcx,[rbx+0x290]
   14000d2c8:	lea    edx,[rbp-0x5]
   14000d2cb:	call   0x14000d1b0
   14000d2d0:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14000d2d7:	call   0x140007cc4
   14000d2dc:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14000d2e3:	call   0x140007cc4
   14000d2e8:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14000d2ef:	call   0x140007cc4
   14000d2f4:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14000d2fb:	call   0x140007cc4
   14000d300:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d305:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d30a:	add    rsp,0x20
   14000d30e:	pop    rsi
   14000d30f:	ret    
   14000d310:	sub    rsp,0x28
   14000d314:	call   0x140009d6c
   14000d319:	lea    rdx,[rsp+0x30]
   14000d31e:	mov    rcx,QWORD PTR [rax+0x90]
   14000d325:	mov    QWORD PTR [rsp+0x30],rcx
   14000d32a:	mov    rcx,rax
   14000d32d:	call   0x140009f00
   14000d332:	mov    rax,QWORD PTR [rsp+0x30]
   14000d337:	mov    rax,QWORD PTR [rax]
   14000d33a:	add    rsp,0x28
   14000d33e:	ret    
   14000d33f:	int3   
   14000d340:	rex push rbp
   14000d342:	push   r12
   14000d344:	push   r13
   14000d346:	push   r14
   14000d348:	push   r15
   14000d34a:	sub    rsp,0x60
   14000d34e:	lea    rbp,[rsp+0x30]
   14000d353:	mov    QWORD PTR [rbp+0x60],rbx
   14000d357:	mov    QWORD PTR [rbp+0x68],rsi
   14000d35b:	mov    QWORD PTR [rbp+0x70],rdi
   14000d35f:	mov    rax,QWORD PTR [rip+0x10cb2]        # 0x14001e018
   14000d366:	xor    rax,rbp
   14000d369:	mov    QWORD PTR [rbp+0x20],rax
   14000d36d:	mov    r13d,edx
   14000d370:	mov    r15d,r9d
   14000d373:	mov    rdx,rcx
   14000d376:	mov    r12,r8
   14000d379:	lea    rcx,[rbp+0x0]
   14000d37d:	call   0x140003ab0
   14000d382:	mov    esi,DWORD PTR [rbp+0x88]
   14000d388:	test   esi,esi
   14000d38a:	jne    0x14000d393
   14000d38c:	mov    rax,QWORD PTR [rbp+0x8]
   14000d390:	mov    esi,DWORD PTR [rax+0xc]
   14000d393:	neg    DWORD PTR [rbp+0x90]
   14000d399:	mov    r9d,r15d
   14000d39c:	mov    r8,r12
   14000d39f:	mov    ecx,esi
   14000d3a1:	sbb    edx,edx
   14000d3a3:	and    DWORD PTR [rsp+0x28],0x0
   14000d3a8:	and    QWORD PTR [rsp+0x20],0x0
   14000d3ae:	and    edx,0x8
   14000d3b1:	inc    edx
   14000d3b3:	call   QWORD PTR [rip+0x6d8f]        # 0x140014148
   14000d3b9:	movsxd r14,eax
   14000d3bc:	test   eax,eax
   14000d3be:	jne    0x14000d3c7
   14000d3c0:	xor    edi,edi
   14000d3c2:	jmp    0x14000d4b8
   14000d3c7:	mov    rdi,r14
   14000d3ca:	add    rdi,rdi
   14000d3cd:	lea    rcx,[rdi+0x10]
   14000d3d1:	cmp    rdi,rcx
   14000d3d4:	sbb    rax,rax
   14000d3d7:	test   rcx,rax
   14000d3da:	je     0x14000d451
   14000d3dc:	lea    rcx,[rdi+0x10]
   14000d3e0:	cmp    rdi,rcx
   14000d3e3:	sbb    rax,rax
   14000d3e6:	and    rax,rcx
   14000d3e9:	cmp    rax,0x400
   14000d3ef:	lea    rax,[rdi+0x10]
   14000d3f3:	ja     0x14000d42f
   14000d3f5:	cmp    rdi,rax
   14000d3f8:	sbb    rcx,rcx
   14000d3fb:	and    rcx,rax
   14000d3fe:	lea    rax,[rcx+0xf]
   14000d402:	cmp    rax,rcx
   14000d405:	ja     0x14000d411
   14000d407:	movabs rax,0xffffffffffffff0
   14000d411:	and    rax,0xfffffffffffffff0
   14000d415:	call   0x140013500
   14000d41a:	sub    rsp,rax
   14000d41d:	lea    rbx,[rsp+0x30]
   14000d422:	test   rbx,rbx
   14000d425:	je     0x14000d4a0
   14000d427:	mov    DWORD PTR [rbx],0xcccc
   14000d42d:	jmp    0x14000d44b
   14000d42f:	cmp    rdi,rax
   14000d432:	sbb    rcx,rcx
   14000d435:	and    rcx,rax
   14000d438:	call   0x140007d04
   14000d43d:	mov    rbx,rax
   14000d440:	test   rax,rax
   14000d443:	je     0x14000d453
   14000d445:	mov    DWORD PTR [rax],0xdddd
   14000d44b:	add    rbx,0x10
   14000d44f:	jmp    0x14000d453
   14000d451:	xor    ebx,ebx
   14000d453:	test   rbx,rbx
   14000d456:	je     0x14000d4a0
   14000d458:	mov    r8,rdi
   14000d45b:	xor    edx,edx
   14000d45d:	mov    rcx,rbx
   14000d460:	call   0x140002cb0
   14000d465:	mov    r9d,r15d
   14000d468:	mov    DWORD PTR [rsp+0x28],r14d
   14000d46d:	mov    r8,r12
   14000d470:	mov    QWORD PTR [rsp+0x20],rbx
   14000d475:	mov    edx,0x1
   14000d47a:	mov    ecx,esi
   14000d47c:	call   QWORD PTR [rip+0x6cc6]        # 0x140014148
   14000d482:	test   eax,eax
   14000d484:	je     0x14000d4a0
   14000d486:	mov    r9,QWORD PTR [rbp+0x80]
   14000d48d:	mov    r8d,eax
   14000d490:	mov    rdx,rbx
   14000d493:	mov    ecx,r13d
   14000d496:	call   QWORD PTR [rip+0x6d64]        # 0x140014200
   14000d49c:	mov    edi,eax
   14000d49e:	jmp    0x14000d4a2
   14000d4a0:	xor    edi,edi
   14000d4a2:	test   rbx,rbx
   14000d4a5:	je     0x14000d4b8
   14000d4a7:	lea    rcx,[rbx-0x10]
   14000d4ab:	cmp    DWORD PTR [rcx],0xdddd
   14000d4b1:	jne    0x14000d4b8
   14000d4b3:	call   0x140007cc4
   14000d4b8:	cmp    BYTE PTR [rbp+0x18],0x0
   14000d4bc:	je     0x14000d4c9
   14000d4be:	mov    rax,QWORD PTR [rbp+0x0]
   14000d4c2:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14000d4c9:	mov    eax,edi
   14000d4cb:	mov    rcx,QWORD PTR [rbp+0x20]
   14000d4cf:	xor    rcx,rbp
   14000d4d2:	call   0x140013230
   14000d4d7:	mov    rbx,QWORD PTR [rbp+0x60]
   14000d4db:	mov    rsi,QWORD PTR [rbp+0x68]
   14000d4df:	mov    rdi,QWORD PTR [rbp+0x70]
   14000d4e3:	lea    rsp,[rbp+0x30]
   14000d4e7:	pop    r15
   14000d4e9:	pop    r14
   14000d4eb:	pop    r13
   14000d4ed:	pop    r12
   14000d4ef:	pop    rbp
   14000d4f0:	ret    
   14000d4f1:	int3   
   14000d4f2:	int3   
   14000d4f3:	int3   
   14000d4f4:	lock inc DWORD PTR [rcx+0x10]
   14000d4f8:	mov    rax,QWORD PTR [rcx+0xe0]
   14000d4ff:	test   rax,rax
   14000d502:	je     0x14000d507
   14000d504:	lock inc DWORD PTR [rax]
   14000d507:	mov    rax,QWORD PTR [rcx+0xf0]
   14000d50e:	test   rax,rax
   14000d511:	je     0x14000d516
   14000d513:	lock inc DWORD PTR [rax]
   14000d516:	mov    rax,QWORD PTR [rcx+0xe8]
   14000d51d:	test   rax,rax
   14000d520:	je     0x14000d525
   14000d522:	lock inc DWORD PTR [rax]
   14000d525:	mov    rax,QWORD PTR [rcx+0x100]
   14000d52c:	test   rax,rax
   14000d52f:	je     0x14000d534
   14000d531:	lock inc DWORD PTR [rax]
   14000d534:	lea    rax,[rcx+0x38]
   14000d538:	mov    r8d,0x6
   14000d53e:	lea    rdx,[rip+0x10dd3]        # 0x14001e318
   14000d545:	cmp    QWORD PTR [rax-0x10],rdx
   14000d549:	je     0x14000d556
   14000d54b:	mov    rdx,QWORD PTR [rax]
   14000d54e:	test   rdx,rdx
   14000d551:	je     0x14000d556
   14000d553:	lock inc DWORD PTR [rdx]
   14000d556:	cmp    QWORD PTR [rax-0x18],0x0
   14000d55b:	je     0x14000d569
   14000d55d:	mov    rdx,QWORD PTR [rax-0x8]
   14000d561:	test   rdx,rdx
   14000d564:	je     0x14000d569
   14000d566:	lock inc DWORD PTR [rdx]
   14000d569:	add    rax,0x20
   14000d56d:	sub    r8,0x1
   14000d571:	jne    0x14000d53e
   14000d573:	mov    rcx,QWORD PTR [rcx+0x120]
   14000d57a:	jmp    0x14000d6f8
   14000d57f:	int3   
   14000d580:	mov    QWORD PTR [rsp+0x8],rbx
   14000d585:	mov    QWORD PTR [rsp+0x10],rbp
   14000d58a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d58f:	push   rdi
   14000d590:	sub    rsp,0x20
   14000d594:	mov    rax,QWORD PTR [rcx+0xf8]
   14000d59b:	mov    rbx,rcx
   14000d59e:	test   rax,rax
   14000d5a1:	je     0x14000d61c
   14000d5a3:	lea    rcx,[rip+0x112b6]        # 0x14001e860
   14000d5aa:	cmp    rax,rcx
   14000d5ad:	je     0x14000d61c
   14000d5af:	mov    rax,QWORD PTR [rbx+0xe0]
   14000d5b6:	test   rax,rax
   14000d5b9:	je     0x14000d61c
   14000d5bb:	cmp    DWORD PTR [rax],0x0
   14000d5be:	jne    0x14000d61c
   14000d5c0:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000d5c7:	test   rcx,rcx
   14000d5ca:	je     0x14000d5e2
   14000d5cc:	cmp    DWORD PTR [rcx],0x0
   14000d5cf:	jne    0x14000d5e2
   14000d5d1:	call   0x140007cc4
   14000d5d6:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000d5dd:	call   0x14000d038
   14000d5e2:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000d5e9:	test   rcx,rcx
   14000d5ec:	je     0x14000d604
   14000d5ee:	cmp    DWORD PTR [rcx],0x0
   14000d5f1:	jne    0x14000d604
   14000d5f3:	call   0x140007cc4
   14000d5f8:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000d5ff:	call   0x14000d144
   14000d604:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000d60b:	call   0x140007cc4
   14000d610:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000d617:	call   0x140007cc4
   14000d61c:	mov    rax,QWORD PTR [rbx+0x100]
   14000d623:	test   rax,rax
   14000d626:	je     0x14000d66f
   14000d628:	cmp    DWORD PTR [rax],0x0
   14000d62b:	jne    0x14000d66f
   14000d62d:	mov    rcx,QWORD PTR [rbx+0x108]
   14000d634:	sub    rcx,0xfe
   14000d63b:	call   0x140007cc4
   14000d640:	mov    rcx,QWORD PTR [rbx+0x110]
   14000d647:	mov    edi,0x80
   14000d64c:	sub    rcx,rdi
   14000d64f:	call   0x140007cc4
   14000d654:	mov    rcx,QWORD PTR [rbx+0x118]
   14000d65b:	sub    rcx,rdi
   14000d65e:	call   0x140007cc4
   14000d663:	mov    rcx,QWORD PTR [rbx+0x100]
   14000d66a:	call   0x140007cc4
   14000d66f:	mov    rcx,QWORD PTR [rbx+0x120]
   14000d676:	call   0x14000d720
   14000d67b:	lea    rsi,[rbx+0x128]
   14000d682:	mov    ebp,0x6
   14000d687:	lea    rdi,[rbx+0x38]
   14000d68b:	lea    rax,[rip+0x10c86]        # 0x14001e318
   14000d692:	cmp    QWORD PTR [rdi-0x10],rax
   14000d696:	je     0x14000d6b2
   14000d698:	mov    rcx,QWORD PTR [rdi]
   14000d69b:	test   rcx,rcx
   14000d69e:	je     0x14000d6b2
   14000d6a0:	cmp    DWORD PTR [rcx],0x0
   14000d6a3:	jne    0x14000d6b2
   14000d6a5:	call   0x140007cc4
   14000d6aa:	mov    rcx,QWORD PTR [rsi]
   14000d6ad:	call   0x140007cc4
   14000d6b2:	cmp    QWORD PTR [rdi-0x18],0x0
   14000d6b7:	je     0x14000d6cc
   14000d6b9:	mov    rcx,QWORD PTR [rdi-0x8]
   14000d6bd:	test   rcx,rcx
   14000d6c0:	je     0x14000d6cc
   14000d6c2:	cmp    DWORD PTR [rcx],0x0
   14000d6c5:	jne    0x14000d6cc
   14000d6c7:	call   0x140007cc4
   14000d6cc:	add    rsi,0x8
   14000d6d0:	add    rdi,0x20
   14000d6d4:	sub    rbp,0x1
   14000d6d8:	jne    0x14000d68b
   14000d6da:	mov    rcx,rbx
   14000d6dd:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d6e2:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d6e7:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d6ec:	add    rsp,0x20
   14000d6f0:	pop    rdi
   14000d6f1:	jmp    0x140007cc4
   14000d6f6:	int3   
   14000d6f7:	int3   
   14000d6f8:	test   rcx,rcx
   14000d6fb:	je     0x14000d719
   14000d6fd:	lea    rax,[rip+0x844c]        # 0x140015b50
   14000d704:	cmp    rcx,rax
   14000d707:	je     0x14000d719
   14000d709:	mov    eax,0x1
   14000d70e:	lock xadd DWORD PTR [rcx+0x15c],eax
   14000d716:	inc    eax
   14000d718:	ret    
   14000d719:	mov    eax,0x7fffffff
   14000d71e:	ret    
   14000d71f:	int3   
   14000d720:	test   rcx,rcx
   14000d723:	je     0x14000d755
   14000d725:	push   rbx
   14000d726:	sub    rsp,0x20
   14000d72a:	lea    rax,[rip+0x841f]        # 0x140015b50
   14000d731:	mov    rbx,rcx
   14000d734:	cmp    rcx,rax
   14000d737:	je     0x14000d750
   14000d739:	mov    eax,DWORD PTR [rcx+0x15c]
   14000d73f:	test   eax,eax
   14000d741:	jne    0x14000d750
   14000d743:	call   0x14000d208
   14000d748:	mov    rcx,rbx
   14000d74b:	call   0x140007cc4
   14000d750:	add    rsp,0x20
   14000d754:	pop    rbx
   14000d755:	ret    
   14000d756:	int3   
   14000d757:	int3   
   14000d758:	test   rcx,rcx
   14000d75b:	je     0x14000d777
   14000d75d:	lea    rax,[rip+0x83ec]        # 0x140015b50
   14000d764:	cmp    rcx,rax
   14000d767:	je     0x14000d777
   14000d769:	or     eax,0xffffffff
   14000d76c:	lock xadd DWORD PTR [rcx+0x15c],eax
   14000d774:	dec    eax
   14000d776:	ret    
   14000d777:	mov    eax,0x7fffffff
   14000d77c:	ret    
   14000d77d:	int3   
   14000d77e:	int3   
   14000d77f:	int3   
   14000d780:	sub    rsp,0x28
   14000d784:	test   rcx,rcx
   14000d787:	je     0x14000d823
   14000d78d:	or     r9d,0xffffffff
   14000d791:	lock add DWORD PTR [rcx+0x10],r9d
   14000d796:	mov    rax,QWORD PTR [rcx+0xe0]
   14000d79d:	test   rax,rax
   14000d7a0:	je     0x14000d7a6
   14000d7a2:	lock add DWORD PTR [rax],r9d
   14000d7a6:	mov    rax,QWORD PTR [rcx+0xf0]
   14000d7ad:	test   rax,rax
   14000d7b0:	je     0x14000d7b6
   14000d7b2:	lock add DWORD PTR [rax],r9d
   14000d7b6:	mov    rax,QWORD PTR [rcx+0xe8]
   14000d7bd:	test   rax,rax
   14000d7c0:	je     0x14000d7c6
   14000d7c2:	lock add DWORD PTR [rax],r9d
   14000d7c6:	mov    rax,QWORD PTR [rcx+0x100]
   14000d7cd:	test   rax,rax
   14000d7d0:	je     0x14000d7d6
   14000d7d2:	lock add DWORD PTR [rax],r9d
   14000d7d6:	lea    rax,[rcx+0x38]
   14000d7da:	mov    r8d,0x6
   14000d7e0:	lea    rdx,[rip+0x10b31]        # 0x14001e318
   14000d7e7:	cmp    QWORD PTR [rax-0x10],rdx
   14000d7eb:	je     0x14000d7f9
   14000d7ed:	mov    rdx,QWORD PTR [rax]
   14000d7f0:	test   rdx,rdx
   14000d7f3:	je     0x14000d7f9
   14000d7f5:	lock add DWORD PTR [rdx],r9d
   14000d7f9:	cmp    QWORD PTR [rax-0x18],0x0
   14000d7fe:	je     0x14000d80d
   14000d800:	mov    rdx,QWORD PTR [rax-0x8]
   14000d804:	test   rdx,rdx
   14000d807:	je     0x14000d80d
   14000d809:	lock add DWORD PTR [rdx],r9d
   14000d80d:	add    rax,0x20
   14000d811:	sub    r8,0x1
   14000d815:	jne    0x14000d7e0
   14000d817:	mov    rcx,QWORD PTR [rcx+0x120]
   14000d81e:	call   0x14000d758
   14000d823:	add    rsp,0x28
   14000d827:	ret    
   14000d828:	mov    QWORD PTR [rsp+0x8],rbx
   14000d82d:	push   rdi
   14000d82e:	sub    rsp,0x20
   14000d832:	call   0x140009d6c
   14000d837:	mov    rdi,rax
   14000d83a:	mov    ecx,DWORD PTR [rip+0x110c0]        # 0x14001e900
   14000d840:	test   DWORD PTR [rax+0x3a8],ecx
   14000d846:	je     0x14000d854
   14000d848:	mov    rbx,QWORD PTR [rax+0x90]
   14000d84f:	test   rbx,rbx
   14000d852:	jne    0x14000d88a
   14000d854:	mov    ecx,0x4
   14000d859:	call   0x14000ad90
   14000d85e:	nop
   14000d85f:	lea    rcx,[rdi+0x90]
   14000d866:	mov    rdx,QWORD PTR [rip+0x11b33]        # 0x14001f3a0
   14000d86d:	call   0x14000d898
   14000d872:	mov    rbx,rax
   14000d875:	mov    ecx,0x4
   14000d87a:	call   0x14000ade4
   14000d87f:	test   rbx,rbx
   14000d882:	jne    0x14000d88a
   14000d884:	call   0x140007dc4
   14000d889:	int3   
   14000d88a:	mov    rax,rbx
   14000d88d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d892:	add    rsp,0x20
   14000d896:	pop    rdi
   14000d897:	ret    
   14000d898:	mov    QWORD PTR [rsp+0x8],rbx
   14000d89d:	push   rdi
   14000d89e:	sub    rsp,0x20
   14000d8a2:	mov    rdi,rdx
   14000d8a5:	test   rdx,rdx
   14000d8a8:	je     0x14000d8f3
   14000d8aa:	test   rcx,rcx
   14000d8ad:	je     0x14000d8f3
   14000d8af:	mov    rbx,QWORD PTR [rcx]
   14000d8b2:	cmp    rbx,rdx
   14000d8b5:	jne    0x14000d8bc
   14000d8b7:	mov    rax,rdx
   14000d8ba:	jmp    0x14000d8f5
   14000d8bc:	mov    QWORD PTR [rcx],rdx
   14000d8bf:	mov    rcx,rdx
   14000d8c2:	call   0x14000d4f4
   14000d8c7:	test   rbx,rbx
   14000d8ca:	je     0x14000d8ee
   14000d8cc:	mov    rcx,rbx
   14000d8cf:	call   0x14000d780
   14000d8d4:	cmp    DWORD PTR [rbx+0x10],0x0
   14000d8d8:	jne    0x14000d8ee
   14000d8da:	lea    rax,[rip+0x108cf]        # 0x14001e1b0
   14000d8e1:	cmp    rbx,rax
   14000d8e4:	je     0x14000d8ee
   14000d8e6:	mov    rcx,rbx
   14000d8e9:	call   0x14000d580
   14000d8ee:	mov    rax,rdi
   14000d8f1:	jmp    0x14000d8f5
   14000d8f3:	xor    eax,eax
   14000d8f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d8fa:	add    rsp,0x20
   14000d8fe:	pop    rdi
   14000d8ff:	ret    
   14000d900:	jmp    0x14000d908
   14000d905:	int3   
   14000d906:	int3   
   14000d907:	int3   
   14000d908:	mov    QWORD PTR [rsp+0x8],rbx
   14000d90d:	mov    QWORD PTR [rsp+0x10],rbp
   14000d912:	mov    QWORD PTR [rsp+0x18],rsi
   14000d917:	push   rdi
   14000d918:	sub    rsp,0x20
   14000d91c:	mov    rbp,r8
   14000d91f:	mov    rbx,rdx
   14000d922:	mov    rsi,rcx
   14000d925:	test   rdx,rdx
   14000d928:	je     0x14000d947
   14000d92a:	xor    edx,edx
   14000d92c:	lea    rax,[rdx-0x20]
   14000d930:	div    rbx
   14000d933:	cmp    rax,r8
   14000d936:	jae    0x14000d947
   14000d938:	call   0x140008500
   14000d93d:	mov    DWORD PTR [rax],0xc
   14000d943:	xor    eax,eax
   14000d945:	jmp    0x14000d988
   14000d947:	test   rcx,rcx
   14000d94a:	je     0x14000d956
   14000d94c:	call   0x140011800
   14000d951:	mov    rdi,rax
   14000d954:	jmp    0x14000d958
   14000d956:	xor    edi,edi
   14000d958:	imul   rbx,rbp
   14000d95c:	mov    rcx,rsi
   14000d95f:	mov    rdx,rbx
   14000d962:	call   0x14001183c
   14000d967:	mov    rsi,rax
   14000d96a:	test   rax,rax
   14000d96d:	je     0x14000d985
   14000d96f:	cmp    rdi,rbx
   14000d972:	jae    0x14000d985
   14000d974:	sub    rbx,rdi
   14000d977:	lea    rcx,[rax+rdi*1]
   14000d97b:	mov    r8,rbx
   14000d97e:	xor    edx,edx
   14000d980:	call   0x140002cb0
   14000d985:	mov    rax,rsi
   14000d988:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d98d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d992:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d997:	add    rsp,0x20
   14000d99b:	pop    rdi
   14000d99c:	ret    
   14000d99d:	int3   
   14000d99e:	int3   
   14000d99f:	int3   
   14000d9a0:	sub    rsp,0x28
   14000d9a4:	call   QWORD PTR [rip+0x685e]        # 0x140014208
   14000d9aa:	test   rax,rax
   14000d9ad:	mov    QWORD PTR [rip+0x11c3c],rax        # 0x14001f5f0
   14000d9b4:	setne  al
   14000d9b7:	add    rsp,0x28
   14000d9bb:	ret    
   14000d9bc:	and    QWORD PTR [rip+0x11c2c],0x0        # 0x14001f5f0
   14000d9c4:	mov    al,0x1
   14000d9c6:	ret    
   14000d9c7:	int3   
   14000d9c8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d9cd:	mov    QWORD PTR [rsp+0x10],rbp
   14000d9d2:	mov    QWORD PTR [rsp+0x18],rsi
   14000d9d7:	push   rdi
   14000d9d8:	sub    rsp,0x20
   14000d9dc:	mov    rsi,rdx
   14000d9df:	mov    rdi,rcx
   14000d9e2:	cmp    rcx,rdx
   14000d9e5:	jne    0x14000d9eb
   14000d9e7:	mov    al,0x1
   14000d9e9:	jmp    0x14000da47
   14000d9eb:	mov    rbx,rcx
   14000d9ee:	mov    rbp,QWORD PTR [rbx]
   14000d9f1:	test   rbp,rbp
   14000d9f4:	je     0x14000da05
   14000d9f6:	mov    rcx,rbp
   14000d9f9:	call   QWORD PTR [rip+0x6859]        # 0x140014258
   14000d9ff:	call   rbp
   14000da01:	test   al,al
   14000da03:	je     0x14000da0e
   14000da05:	add    rbx,0x10
   14000da09:	cmp    rbx,rsi
   14000da0c:	jne    0x14000d9ee
   14000da0e:	cmp    rbx,rsi
   14000da11:	je     0x14000d9e7
   14000da13:	cmp    rbx,rdi
   14000da16:	je     0x14000da45
   14000da18:	add    rbx,0xfffffffffffffff8
   14000da1c:	cmp    QWORD PTR [rbx-0x8],0x0
   14000da21:	je     0x14000da38
   14000da23:	mov    rsi,QWORD PTR [rbx]
   14000da26:	test   rsi,rsi
   14000da29:	je     0x14000da38
   14000da2b:	mov    rcx,rsi
   14000da2e:	call   QWORD PTR [rip+0x6824]        # 0x140014258
   14000da34:	xor    ecx,ecx
   14000da36:	call   rsi
   14000da38:	sub    rbx,0x10
   14000da3c:	lea    rax,[rbx+0x8]
   14000da40:	cmp    rax,rdi
   14000da43:	jne    0x14000da1c
   14000da45:	xor    al,al
   14000da47:	mov    rbx,QWORD PTR [rsp+0x30]
   14000da4c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000da51:	mov    rsi,QWORD PTR [rsp+0x40]
   14000da56:	add    rsp,0x20
   14000da5a:	pop    rdi
   14000da5b:	ret    
   14000da5c:	mov    QWORD PTR [rsp+0x8],rbx
   14000da61:	mov    QWORD PTR [rsp+0x10],rsi
   14000da66:	push   rdi
   14000da67:	sub    rsp,0x20
   14000da6b:	mov    rsi,rcx
   14000da6e:	cmp    rcx,rdx
   14000da71:	je     0x14000da99
   14000da73:	lea    rbx,[rdx-0x8]
   14000da77:	mov    rdi,QWORD PTR [rbx]
   14000da7a:	test   rdi,rdi
   14000da7d:	je     0x14000da8c
   14000da7f:	mov    rcx,rdi
   14000da82:	call   QWORD PTR [rip+0x67d0]        # 0x140014258
   14000da88:	xor    ecx,ecx
   14000da8a:	call   rdi
   14000da8c:	sub    rbx,0x10
   14000da90:	lea    rax,[rbx+0x8]
   14000da94:	cmp    rax,rsi
   14000da97:	jne    0x14000da77
   14000da99:	mov    rbx,QWORD PTR [rsp+0x30]
   14000da9e:	mov    al,0x1
   14000daa0:	mov    rsi,QWORD PTR [rsp+0x38]
   14000daa5:	add    rsp,0x20
   14000daa9:	pop    rdi
   14000daaa:	ret    
   14000daab:	int3   
   14000daac:	mov    QWORD PTR [rsp+0x8],rbx
   14000dab1:	mov    QWORD PTR [rsp+0x20],r9
   14000dab6:	push   rdi
   14000dab7:	sub    rsp,0x20
   14000dabb:	mov    rdi,r9
   14000dabe:	mov    ecx,DWORD PTR [rdx]
   14000dac0:	call   0x14000ad90
   14000dac5:	nop
   14000dac6:	mov    rbx,QWORD PTR [rip+0x1054b]        # 0x14001e018
   14000dacd:	mov    ecx,ebx
   14000dacf:	and    ecx,0x3f
   14000dad2:	xor    rbx,QWORD PTR [rip+0x11b2f]        # 0x14001f608
   14000dad9:	ror    rbx,cl
   14000dadc:	mov    ecx,DWORD PTR [rdi]
   14000dade:	call   0x14000ade4
   14000dae3:	mov    rax,rbx
   14000dae6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000daeb:	add    rsp,0x20
   14000daef:	pop    rdi
   14000daf0:	ret    
   14000daf1:	int3   
   14000daf2:	int3   
   14000daf3:	int3   
   14000daf4:	mov    r11,rsp
   14000daf7:	sub    rsp,0x28
   14000dafb:	mov    eax,0x3
   14000db00:	lea    r9,[r11+0x10]
   14000db04:	lea    r8,[r11+0x8]
   14000db08:	mov    DWORD PTR [rsp+0x38],eax
   14000db0c:	lea    rdx,[r11+0x18]
   14000db10:	mov    DWORD PTR [rsp+0x40],eax
   14000db14:	lea    rcx,[r11+0x8]
   14000db18:	call   0x14000daac
   14000db1d:	add    rsp,0x28
   14000db21:	ret    
   14000db22:	int3   
   14000db23:	int3   
   14000db24:	mov    QWORD PTR [rip+0x11acd],rcx        # 0x14001f5f8
   14000db2b:	mov    QWORD PTR [rip+0x11ace],rcx        # 0x14001f600
   14000db32:	mov    QWORD PTR [rip+0x11acf],rcx        # 0x14001f608
   14000db39:	mov    QWORD PTR [rip+0x11ad0],rcx        # 0x14001f610
   14000db40:	ret    
   14000db41:	int3   
   14000db42:	int3   
   14000db43:	int3   
   14000db44:	mov    rax,rsp
   14000db47:	push   rbx
   14000db48:	push   rsi
   14000db49:	push   rdi
   14000db4a:	push   r12
   14000db4c:	push   r13
   14000db4e:	push   r15
   14000db50:	sub    rsp,0x48
   14000db54:	mov    edi,ecx
   14000db56:	xor    r13d,r13d
   14000db59:	and    DWORD PTR [rax+0x18],r13d
   14000db5d:	mov    sil,0x1
   14000db60:	mov    BYTE PTR [rsp+0x80],sil
   14000db68:	cmp    ecx,0x2
   14000db6b:	je     0x14000dbff
   14000db71:	cmp    ecx,0x4
   14000db74:	je     0x14000db98
   14000db76:	cmp    ecx,0x6
   14000db79:	je     0x14000dbff
   14000db7f:	cmp    ecx,0x8
   14000db82:	je     0x14000db98
   14000db84:	cmp    ecx,0xb
   14000db87:	je     0x14000db98
   14000db89:	cmp    ecx,0xf
   14000db8c:	je     0x14000dbff
   14000db8e:	lea    eax,[rcx-0x15]
   14000db91:	cmp    eax,0x1
   14000db94:	jbe    0x14000dbff
   14000db96:	jmp    0x14000dbdc
   14000db98:	call   0x140009e00
   14000db9d:	mov    r13,rax
   14000dba0:	test   rax,rax
   14000dba3:	jne    0x14000dbad
   14000dba5:	or     eax,0xffffffff
   14000dba8:	jmp    0x14000ddcf
   14000dbad:	mov    rcx,QWORD PTR [rax]
   14000dbb0:	mov    rdx,QWORD PTR [rip+0x76d9]        # 0x140015290
   14000dbb7:	shl    rdx,0x4
   14000dbbb:	add    rdx,rcx
   14000dbbe:	jmp    0x14000dbc9
   14000dbc0:	cmp    DWORD PTR [rcx+0x4],edi
   14000dbc3:	je     0x14000dbd0
   14000dbc5:	add    rcx,0x10
   14000dbc9:	cmp    rcx,rdx
   14000dbcc:	jne    0x14000dbc0
   14000dbce:	xor    ecx,ecx
   14000dbd0:	xor    eax,eax
   14000dbd2:	test   rcx,rcx
   14000dbd5:	setne  al
   14000dbd8:	test   eax,eax
   14000dbda:	jne    0x14000dbee
   14000dbdc:	call   0x140008500
   14000dbe1:	mov    DWORD PTR [rax],0x16
   14000dbe7:	call   0x1400083e0
   14000dbec:	jmp    0x14000dba5
   14000dbee:	lea    rbx,[rcx+0x8]
   14000dbf2:	xor    sil,sil
   14000dbf5:	mov    BYTE PTR [rsp+0x80],sil
   14000dbfd:	jmp    0x14000dc3e
   14000dbff:	sub    ecx,0x2
   14000dc02:	je     0x14000dc37
   14000dc04:	sub    ecx,0x4
   14000dc07:	je     0x14000dc1c
   14000dc09:	sub    ecx,0x9
   14000dc0c:	je     0x14000dc2e
   14000dc0e:	sub    ecx,0x6
   14000dc11:	je     0x14000dc25
   14000dc13:	cmp    ecx,0x1
   14000dc16:	je     0x14000dc1c
   14000dc18:	xor    ebx,ebx
   14000dc1a:	jmp    0x14000dc3e
   14000dc1c:	lea    rbx,[rip+0x119e5]        # 0x14001f608
   14000dc23:	jmp    0x14000dc3e
   14000dc25:	lea    rbx,[rip+0x119d4]        # 0x14001f600
   14000dc2c:	jmp    0x14000dc3e
   14000dc2e:	lea    rbx,[rip+0x119db]        # 0x14001f610
   14000dc35:	jmp    0x14000dc3e
   14000dc37:	lea    rbx,[rip+0x119ba]        # 0x14001f5f8
   14000dc3e:	and    QWORD PTR [rsp+0x98],0x0
   14000dc47:	test   sil,sil
   14000dc4a:	je     0x14000dc57
   14000dc4c:	mov    ecx,0x3
   14000dc51:	call   0x14000ad90
   14000dc56:	nop
   14000dc57:	test   sil,sil
   14000dc5a:	je     0x14000dc73
   14000dc5c:	mov    rdx,QWORD PTR [rip+0x103b5]        # 0x14001e018
   14000dc63:	mov    ecx,edx
   14000dc65:	and    ecx,0x3f
   14000dc68:	xor    rdx,QWORD PTR [rbx]
   14000dc6b:	ror    rdx,cl
   14000dc6e:	mov    r15,rdx
   14000dc71:	jmp    0x14000dc76
   14000dc73:	mov    r15,QWORD PTR [rbx]
   14000dc76:	cmp    r15,0x1
   14000dc7a:	sete   al
   14000dc7d:	mov    BYTE PTR [rsp+0x88],al
   14000dc84:	test   al,al
   14000dc86:	jne    0x14000dd4b
   14000dc8c:	test   r15,r15
   14000dc8f:	jne    0x14000dca9
   14000dc91:	test   sil,sil
   14000dc94:	je     0x14000dc9f
   14000dc96:	lea    ecx,[r15+0x3]
   14000dc9a:	call   0x14000ade4
   14000dc9f:	mov    ecx,0x3
   14000dca4:	call   0x140005ddc
   14000dca9:	mov    r12d,0x910
   14000dcaf:	cmp    edi,0xb
   14000dcb2:	ja     0x14000dcf4
   14000dcb4:	bt     r12d,edi
   14000dcb8:	jae    0x14000dcf4
   14000dcba:	mov    rax,QWORD PTR [r13+0x8]
   14000dcbe:	mov    QWORD PTR [rsp+0x98],rax
   14000dcc6:	mov    QWORD PTR [rsp+0x30],rax
   14000dccb:	and    QWORD PTR [r13+0x8],0x0
   14000dcd0:	cmp    edi,0x8
   14000dcd3:	jne    0x14000dd2b
   14000dcd5:	call   0x140009d6c
   14000dcda:	mov    eax,DWORD PTR [rax+0x10]
   14000dcdd:	mov    DWORD PTR [rsp+0x90],eax
   14000dce4:	mov    DWORD PTR [rsp+0x20],eax
   14000dce8:	call   0x140009d6c
   14000dced:	mov    DWORD PTR [rax+0x10],0x8c
   14000dcf4:	cmp    edi,0x8
   14000dcf7:	jne    0x14000dd2b
   14000dcf9:	mov    rax,QWORD PTR [rip+0x7598]        # 0x140015298
   14000dd00:	shl    rax,0x4
   14000dd04:	add    rax,QWORD PTR [r13+0x0]
   14000dd08:	mov    rcx,QWORD PTR [rip+0x7591]        # 0x1400152a0
   14000dd0f:	shl    rcx,0x4
   14000dd13:	add    rcx,rax
   14000dd16:	mov    QWORD PTR [rsp+0x28],rax
   14000dd1b:	cmp    rax,rcx
   14000dd1e:	je     0x14000dd51
   14000dd20:	and    QWORD PTR [rax+0x8],0x0
   14000dd25:	add    rax,0x10
   14000dd29:	jmp    0x14000dd16
   14000dd2b:	mov    rdx,QWORD PTR [rip+0x102e6]        # 0x14001e018
   14000dd32:	mov    eax,edx
   14000dd34:	and    eax,0x3f
   14000dd37:	mov    ecx,0x40
   14000dd3c:	sub    ecx,eax
   14000dd3e:	xor    eax,eax
   14000dd40:	ror    rax,cl
   14000dd43:	xor    rax,rdx
   14000dd46:	mov    QWORD PTR [rbx],rax
   14000dd49:	jmp    0x14000dd51
   14000dd4b:	mov    r12d,0x910
   14000dd51:	test   sil,sil
   14000dd54:	je     0x14000dd60
   14000dd56:	mov    ecx,0x3
   14000dd5b:	call   0x14000ade4
   14000dd60:	cmp    BYTE PTR [rsp+0x88],0x0
   14000dd68:	je     0x14000dd6e
   14000dd6a:	xor    eax,eax
   14000dd6c:	jmp    0x14000ddcf
   14000dd6e:	cmp    edi,0x8
   14000dd71:	jne    0x14000dd91
   14000dd73:	call   0x140009d6c
   14000dd78:	mov    rbx,rax
   14000dd7b:	mov    rcx,r15
   14000dd7e:	mov    rdx,QWORD PTR [rip+0x64d3]        # 0x140014258
   14000dd85:	call   rdx
   14000dd87:	mov    edx,DWORD PTR [rbx+0x10]
   14000dd8a:	mov    ecx,edi
   14000dd8c:	call   r15
   14000dd8f:	jmp    0x14000dda2
   14000dd91:	mov    rcx,r15
   14000dd94:	mov    rax,QWORD PTR [rip+0x64bd]        # 0x140014258
   14000dd9b:	call   rax
   14000dd9d:	mov    ecx,edi
   14000dd9f:	call   r15
   14000dda2:	cmp    edi,0xb
   14000dda5:	ja     0x14000dd6a
   14000dda7:	bt     r12d,edi
   14000ddab:	jae    0x14000dd6a
   14000ddad:	mov    rax,QWORD PTR [rsp+0x98]
   14000ddb5:	mov    QWORD PTR [r13+0x8],rax
   14000ddb9:	cmp    edi,0x8
   14000ddbc:	jne    0x14000dd6a
   14000ddbe:	call   0x140009d6c
   14000ddc3:	mov    ecx,DWORD PTR [rsp+0x90]
   14000ddca:	mov    DWORD PTR [rax+0x10],ecx
   14000ddcd:	jmp    0x14000dd6a
   14000ddcf:	add    rsp,0x48
   14000ddd3:	pop    r15
   14000ddd5:	pop    r13
   14000ddd7:	pop    r12
   14000ddd9:	pop    rdi
   14000ddda:	pop    rsi
   14000dddb:	pop    rbx
   14000dddc:	ret    
   14000dddd:	int3   
   14000ddde:	int3   
   14000dddf:	int3   
   14000dde0:	mov    QWORD PTR [rsp+0x10],rsi
   14000dde5:	mov    QWORD PTR [rsp+0x18],rdi
   14000ddea:	mov    QWORD PTR [rsp+0x20],r14
   14000ddef:	push   rbp
   14000ddf0:	mov    rbp,rsp
   14000ddf3:	sub    rsp,0x80
   14000ddfa:	mov    rax,QWORD PTR [rip+0x10217]        # 0x14001e018
   14000de01:	xor    rax,rsp
   14000de04:	mov    QWORD PTR [rbp-0x10],rax
   14000de08:	mov    r14d,edx
   14000de0b:	movsxd rdi,ecx
   14000de0e:	mov    rdx,r8
   14000de11:	lea    rcx,[rbp-0x38]
   14000de15:	call   0x140003ab0
   14000de1a:	lea    eax,[rdi+0x1]
   14000de1d:	cmp    eax,0x100
   14000de22:	ja     0x14000de34
   14000de24:	mov    rax,QWORD PTR [rbp-0x30]
   14000de28:	mov    rcx,QWORD PTR [rax]
   14000de2b:	movzx  eax,WORD PTR [rcx+rdi*2]
   14000de2f:	jmp    0x14000deb6
   14000de34:	mov    esi,edi
   14000de36:	lea    rdx,[rbp-0x30]
   14000de3a:	sar    esi,0x8
   14000de3d:	movzx  ecx,sil
   14000de41:	call   0x14000eb6c
   14000de46:	mov    edx,0x1
   14000de4b:	test   eax,eax
   14000de4d:	je     0x14000de61
   14000de4f:	mov    BYTE PTR [rbp-0x40],sil
   14000de53:	lea    r9d,[rdx+0x1]
   14000de57:	mov    BYTE PTR [rbp-0x3f],dil
   14000de5b:	mov    BYTE PTR [rbp-0x3e],0x0
   14000de5f:	jmp    0x14000de6c
   14000de61:	mov    BYTE PTR [rbp-0x40],dil
   14000de65:	mov    r9d,edx
   14000de68:	mov    BYTE PTR [rbp-0x3f],0x0
   14000de6c:	xor    eax,eax
   14000de6e:	mov    DWORD PTR [rsp+0x30],edx
   14000de72:	mov    DWORD PTR [rbp-0x18],eax
   14000de75:	lea    r8,[rbp-0x40]
   14000de79:	mov    WORD PTR [rbp-0x14],ax
   14000de7d:	mov    rax,QWORD PTR [rbp-0x30]
   14000de81:	mov    ecx,DWORD PTR [rax+0xc]
   14000de84:	lea    rax,[rbp-0x18]
   14000de88:	mov    DWORD PTR [rsp+0x28],ecx
   14000de8c:	lea    rcx,[rbp-0x30]
   14000de90:	mov    QWORD PTR [rsp+0x20],rax
   14000de95:	call   0x14000d340
   14000de9a:	test   eax,eax
   14000de9c:	jne    0x14000deb2
   14000de9e:	cmp    BYTE PTR [rbp-0x20],al
   14000dea1:	je     0x14000deae
   14000dea3:	mov    rax,QWORD PTR [rbp-0x38]
   14000dea7:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14000deae:	xor    eax,eax
   14000deb0:	jmp    0x14000deca
   14000deb2:	movzx  eax,WORD PTR [rbp-0x18]
   14000deb6:	and    eax,r14d
   14000deb9:	cmp    BYTE PTR [rbp-0x20],0x0
   14000debd:	je     0x14000deca
   14000debf:	mov    rcx,QWORD PTR [rbp-0x38]
   14000dec3:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14000deca:	mov    rcx,QWORD PTR [rbp-0x10]
   14000dece:	xor    rcx,rsp
   14000ded1:	call   0x140013230
   14000ded6:	lea    r11,[rsp+0x80]
   14000dede:	mov    rsi,QWORD PTR [r11+0x18]
   14000dee2:	mov    rdi,QWORD PTR [r11+0x20]
   14000dee6:	mov    r14,QWORD PTR [r11+0x28]
   14000deea:	mov    rsp,r11
   14000deed:	pop    rbp
   14000deee:	ret    
   14000deef:	int3   
   14000def0:	mov    rax,rsp
   14000def3:	mov    QWORD PTR [rax+0x8],rbx
   14000def7:	mov    QWORD PTR [rax+0x10],rbp
   14000defb:	mov    QWORD PTR [rax+0x18],rsi
   14000deff:	mov    QWORD PTR [rax+0x20],rdi
   14000df03:	push   r14
   14000df05:	xor    ebp,ebp
   14000df07:	lea    r14,[rip+0xa392]        # 0x1400182a0
   14000df0e:	mov    r10d,ebp
   14000df11:	mov    rsi,rcx
   14000df14:	mov    r11d,0xe3
   14000df1a:	lea    eax,[r11+r10*1]
   14000df1e:	mov    rdi,rsi
   14000df21:	cdq    
   14000df22:	mov    ebx,0x55
   14000df27:	sub    eax,edx
   14000df29:	sar    eax,1
   14000df2b:	movsxd r8,eax
   14000df2e:	mov    rcx,r8
   14000df31:	shl    rcx,0x4
   14000df35:	mov    r9,QWORD PTR [rcx+r14*1]
   14000df39:	sub    rdi,r9
   14000df3c:	movzx  edx,WORD PTR [rdi+r9*1]
   14000df41:	lea    ecx,[rdx-0x41]
   14000df44:	cmp    cx,0x19
   14000df48:	ja     0x14000df4e
   14000df4a:	add    dx,0x20
   14000df4e:	movzx  ecx,WORD PTR [r9]
   14000df52:	lea    eax,[rcx-0x41]
   14000df55:	cmp    ax,0x19
   14000df59:	ja     0x14000df5f
   14000df5b:	add    cx,0x20
   14000df5f:	add    r9,0x2
   14000df63:	sub    rbx,0x1
   14000df67:	je     0x14000df73
   14000df69:	test   dx,dx
   14000df6c:	je     0x14000df73
   14000df6e:	cmp    dx,cx
   14000df71:	je     0x14000df3c
   14000df73:	movzx  eax,cx
   14000df76:	movzx  ecx,dx
   14000df79:	sub    ecx,eax
   14000df7b:	je     0x14000df95
   14000df7d:	test   ecx,ecx
   14000df7f:	jns    0x14000df87
   14000df81:	lea    r11d,[r8-0x1]
   14000df85:	jmp    0x14000df8b
   14000df87:	lea    r10d,[r8+0x1]
   14000df8b:	cmp    r10d,r11d
   14000df8e:	jle    0x14000df1a
   14000df90:	or     eax,0xffffffff
   14000df93:	jmp    0x14000dfa0
   14000df95:	mov    rax,r8
   14000df98:	add    rax,rax
   14000df9b:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14000dfa0:	mov    rbx,QWORD PTR [rsp+0x10]
   14000dfa5:	mov    rbp,QWORD PTR [rsp+0x18]
   14000dfaa:	mov    rsi,QWORD PTR [rsp+0x20]
   14000dfaf:	mov    rdi,QWORD PTR [rsp+0x28]
   14000dfb4:	pop    r14
   14000dfb6:	ret    
   14000dfb7:	int3   
   14000dfb8:	sub    rsp,0x28
   14000dfbc:	test   rcx,rcx
   14000dfbf:	je     0x14000dfe3
   14000dfc1:	call   0x14000def0
   14000dfc6:	test   eax,eax
   14000dfc8:	js     0x14000dfe3
   14000dfca:	cdqe   
   14000dfcc:	cmp    rax,0xe4
   14000dfd2:	jae    0x14000dfe3
   14000dfd4:	add    rax,rax
   14000dfd7:	lea    rcx,[rip+0x8862]        # 0x140016840
   14000dfde:	mov    eax,DWORD PTR [rcx+rax*8]
   14000dfe1:	jmp    0x14000dfe5
   14000dfe3:	xor    eax,eax
   14000dfe5:	add    rsp,0x28
   14000dfe9:	ret    
   14000dfea:	int3   
   14000dfeb:	int3   
   14000dfec:	mov    QWORD PTR [rsp+0x8],rbx
   14000dff1:	push   rdi
   14000dff2:	sub    rsp,0x20
   14000dff6:	mov    rbx,rcx
   14000dff9:	test   rcx,rcx
   14000dffc:	jne    0x14000e013
   14000dffe:	call   0x140008500
   14000e003:	mov    DWORD PTR [rax],0x16
   14000e009:	call   0x1400083e0
   14000e00e:	or     eax,0xffffffff
   14000e011:	jmp    0x14000e064
   14000e013:	or     edi,0xffffffff
   14000e016:	mov    eax,DWORD PTR [rcx+0x14]
   14000e019:	shr    eax,0xd
   14000e01c:	test   al,0x1
   14000e01e:	je     0x14000e05a
   14000e020:	call   0x140008cf4
   14000e025:	mov    rcx,rbx
   14000e028:	mov    edi,eax
   14000e02a:	call   0x140008ea8
   14000e02f:	mov    rcx,rbx
   14000e032:	call   0x14000abe4
   14000e037:	mov    ecx,eax
   14000e039:	call   0x140011934
   14000e03e:	test   eax,eax
   14000e040:	jns    0x14000e047
   14000e042:	or     edi,0xffffffff
   14000e045:	jmp    0x14000e05a
   14000e047:	mov    rcx,QWORD PTR [rbx+0x28]
   14000e04b:	test   rcx,rcx
   14000e04e:	je     0x14000e05a
   14000e050:	call   0x140007cc4
   14000e055:	and    QWORD PTR [rbx+0x28],0x0
   14000e05a:	mov    rcx,rbx
   14000e05d:	call   0x140011a94
   14000e062:	mov    eax,edi
   14000e064:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e069:	add    rsp,0x20
   14000e06d:	pop    rdi
   14000e06e:	ret    
   14000e06f:	int3   
   14000e070:	mov    QWORD PTR [rsp+0x10],rbx
   14000e075:	mov    QWORD PTR [rsp+0x8],rcx
   14000e07a:	push   rdi
   14000e07b:	sub    rsp,0x20
   14000e07f:	mov    rbx,rcx
   14000e082:	xor    eax,eax
   14000e084:	test   rcx,rcx
   14000e087:	setne  al
   14000e08a:	test   eax,eax
   14000e08c:	jne    0x14000e0a3
   14000e08e:	call   0x140008500
   14000e093:	mov    DWORD PTR [rax],0x16
   14000e099:	call   0x1400083e0
   14000e09e:	or     eax,0xffffffff
   14000e0a1:	jmp    0x14000e0ce
   14000e0a3:	mov    eax,DWORD PTR [rcx+0x14]
   14000e0a6:	shr    eax,0xc
   14000e0a9:	test   al,0x1
   14000e0ab:	je     0x14000e0b4
   14000e0ad:	call   0x140011a94
   14000e0b2:	jmp    0x14000e09e
   14000e0b4:	call   0x1400036e8
   14000e0b9:	nop
   14000e0ba:	mov    rcx,rbx
   14000e0bd:	call   0x14000dfec
   14000e0c2:	mov    edi,eax
   14000e0c4:	mov    rcx,rbx
   14000e0c7:	call   0x1400036f4
   14000e0cc:	mov    eax,edi
   14000e0ce:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e0d3:	add    rsp,0x20
   14000e0d7:	pop    rdi
   14000e0d8:	ret    
   14000e0d9:	int3   
   14000e0da:	int3   
   14000e0db:	int3   
   14000e0dc:	mov    QWORD PTR [rsp+0x8],rbx
   14000e0e1:	mov    QWORD PTR [rsp+0x20],r9
   14000e0e6:	push   rdi
   14000e0e7:	sub    rsp,0x20
   14000e0eb:	mov    rdi,r9
   14000e0ee:	mov    rbx,r8
   14000e0f1:	mov    ecx,DWORD PTR [rdx]
   14000e0f3:	call   0x14000cebc
   14000e0f8:	nop
   14000e0f9:	mov    rax,QWORD PTR [rbx]
   14000e0fc:	movsxd rcx,DWORD PTR [rax]
   14000e0ff:	mov    rdx,rcx
   14000e102:	mov    rax,rcx
   14000e105:	sar    rax,0x6
   14000e109:	lea    r8,[rip+0x10e70]        # 0x14001ef80
   14000e110:	and    edx,0x3f
   14000e113:	shl    rdx,0x6
   14000e117:	mov    rax,QWORD PTR [r8+rax*8]
   14000e11b:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14000e120:	je     0x14000e146
   14000e122:	call   0x14000cfc0
   14000e127:	mov    rcx,rax
   14000e12a:	call   QWORD PTR [rip+0x60e0]        # 0x140014210
   14000e130:	xor    ebx,ebx
   14000e132:	test   eax,eax
   14000e134:	jne    0x14000e154
   14000e136:	call   0x1400084e0
   14000e13b:	mov    rbx,rax
   14000e13e:	call   QWORD PTR [rip+0x5ed4]        # 0x140014018
   14000e144:	mov    DWORD PTR [rbx],eax
   14000e146:	call   0x140008500
   14000e14b:	mov    DWORD PTR [rax],0x9
   14000e151:	or     ebx,0xffffffff
   14000e154:	mov    ecx,DWORD PTR [rdi]
   14000e156:	call   0x14000cee0
   14000e15b:	mov    eax,ebx
   14000e15d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e162:	add    rsp,0x20
   14000e166:	pop    rdi
   14000e167:	ret    
   14000e168:	mov    DWORD PTR [rsp+0x8],ecx
   14000e16c:	sub    rsp,0x38
   14000e170:	movsxd rdx,ecx
   14000e173:	cmp    edx,0xfffffffe
   14000e176:	jne    0x14000e185
   14000e178:	call   0x140008500
   14000e17d:	mov    DWORD PTR [rax],0x9
   14000e183:	jmp    0x14000e1f1
   14000e185:	test   ecx,ecx
   14000e187:	js     0x14000e1e1
   14000e189:	cmp    edx,DWORD PTR [rip+0x111f1]        # 0x14001f380
   14000e18f:	jae    0x14000e1e1
   14000e191:	mov    rcx,rdx
   14000e194:	lea    r8,[rip+0x10de5]        # 0x14001ef80
   14000e19b:	and    ecx,0x3f
   14000e19e:	mov    rax,rdx
   14000e1a1:	sar    rax,0x6
   14000e1a5:	shl    rcx,0x6
   14000e1a9:	mov    rax,QWORD PTR [r8+rax*8]
   14000e1ad:	test   BYTE PTR [rax+rcx*1+0x38],0x1
   14000e1b2:	je     0x14000e1e1
   14000e1b4:	lea    rax,[rsp+0x40]
   14000e1b9:	mov    DWORD PTR [rsp+0x50],edx
   14000e1bd:	mov    DWORD PTR [rsp+0x58],edx
   14000e1c1:	lea    r9,[rsp+0x50]
   14000e1c6:	lea    rdx,[rsp+0x58]
   14000e1cb:	mov    QWORD PTR [rsp+0x20],rax
   14000e1d0:	lea    r8,[rsp+0x20]
   14000e1d5:	lea    rcx,[rsp+0x48]
   14000e1da:	call   0x14000e0dc
   14000e1df:	jmp    0x14000e1f4
   14000e1e1:	call   0x140008500
   14000e1e6:	mov    DWORD PTR [rax],0x9
   14000e1ec:	call   0x1400083e0
   14000e1f1:	or     eax,0xffffffff
   14000e1f4:	add    rsp,0x38
   14000e1f8:	ret    
   14000e1f9:	int3   
   14000e1fa:	int3   
   14000e1fb:	int3   
   14000e1fc:	mov    QWORD PTR [rsp+0x8],rbx
   14000e201:	push   rbp
   14000e202:	push   rsi
   14000e203:	push   rdi
   14000e204:	push   r12
   14000e206:	push   r13
   14000e208:	push   r14
   14000e20a:	push   r15
   14000e20c:	mov    rbp,rsp
   14000e20f:	sub    rsp,0x80
   14000e216:	mov    rax,QWORD PTR [rip+0xfdfb]        # 0x14001e018
   14000e21d:	xor    rax,rsp
   14000e220:	mov    QWORD PTR [rbp-0x10],rax
   14000e224:	movsxd rsi,edx
   14000e227:	lea    rax,[rip+0x10d52]        # 0x14001ef80
   14000e22e:	mov    r15,rsi
   14000e231:	mov    r12d,r9d
   14000e234:	sar    r15,0x6
   14000e238:	and    esi,0x3f
   14000e23b:	shl    rsi,0x6
   14000e23f:	mov    r14,r8
   14000e242:	mov    QWORD PTR [rbp-0x28],r8
   14000e246:	mov    rbx,rcx
   14000e249:	add    r12,r8
   14000e24c:	mov    rax,QWORD PTR [rax+r15*8]
   14000e250:	mov    rax,QWORD PTR [rax+rsi*1+0x28]
   14000e255:	mov    QWORD PTR [rbp-0x30],rax
   14000e259:	call   QWORD PTR [rip+0x5fb9]        # 0x140014218
   14000e25f:	xor    edx,edx
   14000e261:	mov    DWORD PTR [rbp-0x34],eax
   14000e264:	mov    QWORD PTR [rbx],rdx
   14000e267:	mov    rdi,r14
   14000e26a:	mov    DWORD PTR [rbx+0x8],edx
   14000e26d:	cmp    r14,r12
   14000e270:	jae    0x14000e3da
   14000e276:	mov    r13b,BYTE PTR [rdi]
   14000e279:	lea    r14,[rip+0x10d00]        # 0x14001ef80
   14000e280:	mov    WORD PTR [rbp-0x40],dx
   14000e284:	mov    rdx,QWORD PTR [r14+r15*8]
   14000e288:	mov    cl,BYTE PTR [rdx+rsi*1+0x3d]
   14000e28c:	test   cl,0x4
   14000e28f:	je     0x14000e2af
   14000e291:	mov    al,BYTE PTR [rdx+rsi*1+0x3e]
   14000e295:	and    cl,0xfb
   14000e298:	mov    BYTE PTR [rdx+rsi*1+0x3d],cl
   14000e29c:	mov    r8d,0x2
   14000e2a2:	lea    rdx,[rbp-0x20]
   14000e2a6:	mov    BYTE PTR [rbp-0x20],al
   14000e2a9:	mov    BYTE PTR [rbp-0x1f],r13b
   14000e2ad:	jmp    0x14000e2f4
   14000e2af:	call   0x14000d310
   14000e2b4:	movzx  ecx,BYTE PTR [rdi]
   14000e2b7:	mov    edx,0x8000
   14000e2bc:	test   WORD PTR [rax+rcx*2],dx
   14000e2c0:	je     0x14000e2eb
   14000e2c2:	cmp    rdi,r12
   14000e2c5:	jae    0x14000e3ba
   14000e2cb:	mov    r8d,0x2
   14000e2d1:	lea    rcx,[rbp-0x40]
   14000e2d5:	mov    rdx,rdi
   14000e2d8:	call   0x140009508
   14000e2dd:	cmp    eax,0xffffffff
   14000e2e0:	je     0x14000e3da
   14000e2e6:	inc    rdi
   14000e2e9:	jmp    0x14000e306
   14000e2eb:	mov    r8d,0x1
   14000e2f1:	mov    rdx,rdi
   14000e2f4:	lea    rcx,[rbp-0x40]
   14000e2f8:	call   0x140009508
   14000e2fd:	cmp    eax,0xffffffff
   14000e300:	je     0x14000e3da
   14000e306:	and    QWORD PTR [rsp+0x38],0x0
   14000e30c:	lea    rax,[rbp-0x18]
   14000e310:	and    QWORD PTR [rsp+0x30],0x0
   14000e316:	lea    r8,[rbp-0x40]
   14000e31a:	mov    ecx,DWORD PTR [rbp-0x34]
   14000e31d:	mov    r9d,0x1
   14000e323:	mov    DWORD PTR [rsp+0x28],0x5
   14000e32b:	xor    edx,edx
   14000e32d:	mov    QWORD PTR [rsp+0x20],rax
   14000e332:	inc    rdi
   14000e335:	call   QWORD PTR [rip+0x5e05]        # 0x140014140
   14000e33b:	mov    r14d,eax
   14000e33e:	test   eax,eax
   14000e340:	je     0x14000e3da
   14000e346:	mov    rcx,QWORD PTR [rbp-0x30]
   14000e34a:	lea    r9,[rbp-0x38]
   14000e34e:	and    QWORD PTR [rsp+0x20],0x0
   14000e354:	lea    rdx,[rbp-0x18]
   14000e358:	mov    r8d,eax
   14000e35b:	call   QWORD PTR [rip+0x5df7]        # 0x140014158
   14000e361:	xor    edx,edx
   14000e363:	test   eax,eax
   14000e365:	je     0x14000e3d2
   14000e367:	mov    ecx,DWORD PTR [rbx+0x8]
   14000e36a:	sub    ecx,DWORD PTR [rbp-0x28]
   14000e36d:	add    ecx,edi
   14000e36f:	mov    DWORD PTR [rbx+0x4],ecx
   14000e372:	cmp    DWORD PTR [rbp-0x38],r14d
   14000e376:	jb     0x14000e3da
   14000e378:	cmp    r13b,0xa
   14000e37c:	jne    0x14000e3b2
   14000e37e:	mov    rcx,QWORD PTR [rbp-0x30]
   14000e382:	lea    eax,[rdx+0xd]
   14000e385:	mov    QWORD PTR [rsp+0x20],rdx
   14000e38a:	lea    r8d,[rdx+0x1]
   14000e38e:	lea    rdx,[rbp-0x3c]
   14000e392:	mov    WORD PTR [rbp-0x3c],ax
   14000e396:	lea    r9,[rbp-0x38]
   14000e39a:	call   QWORD PTR [rip+0x5db8]        # 0x140014158
   14000e3a0:	xor    edx,edx
   14000e3a2:	test   eax,eax
   14000e3a4:	je     0x14000e3d2
   14000e3a6:	cmp    DWORD PTR [rbp-0x38],0x1
   14000e3aa:	jb     0x14000e3da
   14000e3ac:	inc    DWORD PTR [rbx+0x8]
   14000e3af:	inc    DWORD PTR [rbx+0x4]
   14000e3b2:	cmp    rdi,r12
   14000e3b5:	jmp    0x14000e270
   14000e3ba:	mov    al,BYTE PTR [rdi]
   14000e3bc:	mov    rcx,QWORD PTR [r14+r15*8]
   14000e3c0:	mov    BYTE PTR [rcx+rsi*1+0x3e],al
   14000e3c4:	mov    rax,QWORD PTR [r14+r15*8]
   14000e3c8:	or     BYTE PTR [rax+rsi*1+0x3d],0x4
   14000e3cd:	inc    DWORD PTR [rbx+0x4]
   14000e3d0:	jmp    0x14000e3da
   14000e3d2:	call   QWORD PTR [rip+0x5c40]        # 0x140014018
   14000e3d8:	mov    DWORD PTR [rbx],eax
   14000e3da:	mov    rax,rbx
   14000e3dd:	mov    rcx,QWORD PTR [rbp-0x10]
   14000e3e1:	xor    rcx,rsp
   14000e3e4:	call   0x140013230
   14000e3e9:	mov    rbx,QWORD PTR [rsp+0xc0]
   14000e3f1:	add    rsp,0x80
   14000e3f8:	pop    r15
   14000e3fa:	pop    r14
   14000e3fc:	pop    r13
   14000e3fe:	pop    r12
   14000e400:	pop    rdi
   14000e401:	pop    rsi
   14000e402:	pop    rbp
   14000e403:	ret    
   14000e404:	mov    QWORD PTR [rsp+0x8],rbx
   14000e409:	mov    QWORD PTR [rsp+0x18],rbp
   14000e40e:	push   rsi
   14000e40f:	push   rdi
   14000e410:	push   r14
   14000e412:	mov    eax,0x1450
   14000e417:	call   0x140013500
   14000e41c:	sub    rsp,rax
   14000e41f:	mov    rax,QWORD PTR [rip+0xfbf2]        # 0x14001e018
   14000e426:	xor    rax,rsp
   14000e429:	mov    QWORD PTR [rsp+0x1440],rax
   14000e431:	mov    rbx,rcx
   14000e434:	movsxd r10,edx
   14000e437:	mov    rax,r10
   14000e43a:	mov    ebp,r9d
   14000e43d:	sar    rax,0x6
   14000e441:	lea    rcx,[rip+0x10b38]        # 0x14001ef80
   14000e448:	and    r10d,0x3f
   14000e44c:	add    rbp,r8
   14000e44f:	and    DWORD PTR [rbx],0x0
   14000e452:	mov    rsi,r8
   14000e455:	and    DWORD PTR [rbx+0x4],0x0
   14000e459:	mov    rax,QWORD PTR [rcx+rax*8]
   14000e45d:	and    DWORD PTR [rbx+0x8],0x0
   14000e461:	shl    r10,0x6
   14000e465:	mov    r14,QWORD PTR [rax+r10*1+0x28]
   14000e46a:	cmp    r8,rbp
   14000e46d:	jae    0x14000e4de
   14000e46f:	lea    rdi,[rsp+0x40]
   14000e474:	cmp    rsi,rbp
   14000e477:	jae    0x14000e49d
   14000e479:	mov    al,BYTE PTR [rsi]
   14000e47b:	inc    rsi
   14000e47e:	cmp    al,0xa
   14000e480:	jne    0x14000e48b
   14000e482:	inc    DWORD PTR [rbx+0x8]
   14000e485:	mov    BYTE PTR [rdi],0xd
   14000e488:	inc    rdi
   14000e48b:	mov    BYTE PTR [rdi],al
   14000e48d:	inc    rdi
   14000e490:	lea    rax,[rsp+0x143f]
   14000e498:	cmp    rdi,rax
   14000e49b:	jb     0x14000e474
   14000e49d:	and    QWORD PTR [rsp+0x20],0x0
   14000e4a3:	lea    rax,[rsp+0x40]
   14000e4a8:	sub    edi,eax
   14000e4aa:	lea    r9,[rsp+0x30]
   14000e4af:	mov    r8d,edi
   14000e4b2:	lea    rdx,[rsp+0x40]
   14000e4b7:	mov    rcx,r14
   14000e4ba:	call   QWORD PTR [rip+0x5c98]        # 0x140014158
   14000e4c0:	test   eax,eax
   14000e4c2:	je     0x14000e4d6
   14000e4c4:	mov    eax,DWORD PTR [rsp+0x30]
   14000e4c8:	add    DWORD PTR [rbx+0x4],eax
   14000e4cb:	cmp    eax,edi
   14000e4cd:	jb     0x14000e4de
   14000e4cf:	cmp    rsi,rbp
   14000e4d2:	jb     0x14000e46f
   14000e4d4:	jmp    0x14000e4de
   14000e4d6:	call   QWORD PTR [rip+0x5b3c]        # 0x140014018
   14000e4dc:	mov    DWORD PTR [rbx],eax
   14000e4de:	mov    rax,rbx
   14000e4e1:	mov    rcx,QWORD PTR [rsp+0x1440]
   14000e4e9:	xor    rcx,rsp
   14000e4ec:	call   0x140013230
   14000e4f1:	lea    r11,[rsp+0x1450]
   14000e4f9:	mov    rbx,QWORD PTR [r11+0x20]
   14000e4fd:	mov    rbp,QWORD PTR [r11+0x30]
   14000e501:	mov    rsp,r11
   14000e504:	pop    r14
   14000e506:	pop    rdi
   14000e507:	pop    rsi
   14000e508:	ret    
   14000e509:	int3   
   14000e50a:	int3   
   14000e50b:	int3   
   14000e50c:	mov    QWORD PTR [rsp+0x8],rbx
   14000e511:	mov    QWORD PTR [rsp+0x18],rbp
   14000e516:	push   rsi
   14000e517:	push   rdi
   14000e518:	push   r14
   14000e51a:	mov    eax,0x1450
   14000e51f:	call   0x140013500
   14000e524:	sub    rsp,rax
   14000e527:	mov    rax,QWORD PTR [rip+0xfaea]        # 0x14001e018
   14000e52e:	xor    rax,rsp
   14000e531:	mov    QWORD PTR [rsp+0x1440],rax
   14000e539:	mov    rdi,rcx
   14000e53c:	movsxd r10,edx
   14000e53f:	mov    rax,r10
   14000e542:	mov    ebp,r9d
   14000e545:	sar    rax,0x6
   14000e549:	lea    rcx,[rip+0x10a30]        # 0x14001ef80
   14000e550:	and    r10d,0x3f
   14000e554:	add    rbp,r8
   14000e557:	and    DWORD PTR [rdi],0x0
   14000e55a:	mov    rsi,r8
   14000e55d:	and    DWORD PTR [rdi+0x4],0x0
   14000e561:	mov    rax,QWORD PTR [rcx+rax*8]
   14000e565:	and    DWORD PTR [rdi+0x8],0x0
   14000e569:	shl    r10,0x6
   14000e56d:	mov    r14,QWORD PTR [rax+r10*1+0x28]
   14000e572:	cmp    r8,rbp
   14000e575:	jae    0x14000e5fd
   14000e57b:	lea    rbx,[rsp+0x40]
   14000e580:	cmp    rsi,rbp
   14000e583:	jae    0x14000e5b6
   14000e585:	movzx  eax,WORD PTR [rsi]
   14000e588:	add    rsi,0x2
   14000e58c:	cmp    ax,0xa
   14000e590:	jne    0x14000e5a2
   14000e592:	add    DWORD PTR [rdi+0x8],0x2
   14000e596:	mov    ecx,0xd
   14000e59b:	mov    WORD PTR [rbx],cx
   14000e59e:	add    rbx,0x2
   14000e5a2:	mov    WORD PTR [rbx],ax
   14000e5a5:	add    rbx,0x2
   14000e5a9:	lea    rax,[rsp+0x143e]
   14000e5b1:	cmp    rbx,rax
   14000e5b4:	jb     0x14000e580
   14000e5b6:	and    QWORD PTR [rsp+0x20],0x0
   14000e5bc:	lea    rax,[rsp+0x40]
   14000e5c1:	sub    rbx,rax
   14000e5c4:	lea    r9,[rsp+0x30]
   14000e5c9:	sar    rbx,1
   14000e5cc:	lea    rdx,[rsp+0x40]
   14000e5d1:	add    ebx,ebx
   14000e5d3:	mov    rcx,r14
   14000e5d6:	mov    r8d,ebx
   14000e5d9:	call   QWORD PTR [rip+0x5b79]        # 0x140014158
   14000e5df:	test   eax,eax
   14000e5e1:	je     0x14000e5f5
   14000e5e3:	mov    eax,DWORD PTR [rsp+0x30]
   14000e5e7:	add    DWORD PTR [rdi+0x4],eax
   14000e5ea:	cmp    eax,ebx
   14000e5ec:	jb     0x14000e5fd
   14000e5ee:	cmp    rsi,rbp
   14000e5f1:	jb     0x14000e57b
   14000e5f3:	jmp    0x14000e5fd
   14000e5f5:	call   QWORD PTR [rip+0x5a1d]        # 0x140014018
   14000e5fb:	mov    DWORD PTR [rdi],eax
   14000e5fd:	mov    rax,rdi
   14000e600:	mov    rcx,QWORD PTR [rsp+0x1440]
   14000e608:	xor    rcx,rsp
   14000e60b:	call   0x140013230
   14000e610:	lea    r11,[rsp+0x1450]
   14000e618:	mov    rbx,QWORD PTR [r11+0x20]
   14000e61c:	mov    rbp,QWORD PTR [r11+0x30]
   14000e620:	mov    rsp,r11
   14000e623:	pop    r14
   14000e625:	pop    rdi
   14000e626:	pop    rsi
   14000e627:	ret    
   14000e628:	mov    QWORD PTR [rsp+0x8],rbx
   14000e62d:	mov    QWORD PTR [rsp+0x18],rbp
   14000e632:	push   rsi
   14000e633:	push   rdi
   14000e634:	push   r12
   14000e636:	push   r14
   14000e638:	push   r15
   14000e63a:	mov    eax,0x1470
   14000e63f:	call   0x140013500
   14000e644:	sub    rsp,rax
   14000e647:	mov    rax,QWORD PTR [rip+0xf9ca]        # 0x14001e018
   14000e64e:	xor    rax,rsp
   14000e651:	mov    QWORD PTR [rsp+0x1460],rax
   14000e659:	movsxd r10,edx
   14000e65c:	mov    rbx,rcx
   14000e65f:	mov    rax,r10
   14000e662:	mov    r14d,r9d
   14000e665:	sar    rax,0x6
   14000e669:	lea    rcx,[rip+0x10910]        # 0x14001ef80
   14000e670:	and    r10d,0x3f
   14000e674:	add    r14,r8
   14000e677:	shl    r10,0x6
   14000e67b:	mov    r15,r8
   14000e67e:	mov    rdi,r8
   14000e681:	mov    rax,QWORD PTR [rcx+rax*8]
   14000e685:	mov    r12,QWORD PTR [rax+r10*1+0x28]
   14000e68a:	xor    eax,eax
   14000e68c:	and    DWORD PTR [rbx],0x0
   14000e68f:	mov    QWORD PTR [rbx+0x4],rax
   14000e693:	cmp    r8,r14
   14000e696:	jae    0x14000e76b
   14000e69c:	lea    rax,[rsp+0x50]
   14000e6a1:	cmp    rdi,r14
   14000e6a4:	jae    0x14000e6d3
   14000e6a6:	movzx  ecx,WORD PTR [rdi]
   14000e6a9:	add    rdi,0x2
   14000e6ad:	cmp    cx,0xa
   14000e6b1:	jne    0x14000e6bf
   14000e6b3:	mov    edx,0xd
   14000e6b8:	mov    WORD PTR [rax],dx
   14000e6bb:	add    rax,0x2
   14000e6bf:	mov    WORD PTR [rax],cx
   14000e6c2:	add    rax,0x2
   14000e6c6:	lea    rcx,[rsp+0x6f8]
   14000e6ce:	cmp    rax,rcx
   14000e6d1:	jb     0x14000e6a1
   14000e6d3:	and    QWORD PTR [rsp+0x38],0x0
   14000e6d9:	lea    rcx,[rsp+0x50]
   14000e6de:	and    QWORD PTR [rsp+0x30],0x0
   14000e6e4:	lea    r8,[rsp+0x50]
   14000e6e9:	sub    rax,rcx
   14000e6ec:	mov    DWORD PTR [rsp+0x28],0xd55
   14000e6f4:	lea    rcx,[rsp+0x700]
   14000e6fc:	sar    rax,1
   14000e6ff:	mov    QWORD PTR [rsp+0x20],rcx
   14000e704:	mov    r9d,eax
   14000e707:	mov    ecx,0xfde9
   14000e70c:	xor    edx,edx
   14000e70e:	call   QWORD PTR [rip+0x5a2c]        # 0x140014140
   14000e714:	mov    ebp,eax
   14000e716:	test   eax,eax
   14000e718:	je     0x14000e763
   14000e71a:	xor    esi,esi
   14000e71c:	test   eax,eax
   14000e71e:	je     0x14000e753
   14000e720:	and    QWORD PTR [rsp+0x20],0x0
   14000e726:	lea    rdx,[rsp+0x700]
   14000e72e:	mov    ecx,esi
   14000e730:	lea    r9,[rsp+0x40]
   14000e735:	mov    r8d,ebp
   14000e738:	add    rdx,rcx
   14000e73b:	mov    rcx,r12
   14000e73e:	sub    r8d,esi
   14000e741:	call   QWORD PTR [rip+0x5a11]        # 0x140014158
   14000e747:	test   eax,eax
   14000e749:	je     0x14000e763
   14000e74b:	add    esi,DWORD PTR [rsp+0x40]
   14000e74f:	cmp    esi,ebp
   14000e751:	jb     0x14000e720
   14000e753:	mov    eax,edi
   14000e755:	sub    eax,r15d
   14000e758:	mov    DWORD PTR [rbx+0x4],eax
   14000e75b:	cmp    rdi,r14
   14000e75e:	jmp    0x14000e696
   14000e763:	call   QWORD PTR [rip+0x58af]        # 0x140014018
   14000e769:	mov    DWORD PTR [rbx],eax
   14000e76b:	mov    rax,rbx
   14000e76e:	mov    rcx,QWORD PTR [rsp+0x1460]
   14000e776:	xor    rcx,rsp
   14000e779:	call   0x140013230
   14000e77e:	lea    r11,[rsp+0x1470]
   14000e786:	mov    rbx,QWORD PTR [r11+0x30]
   14000e78a:	mov    rbp,QWORD PTR [r11+0x40]
   14000e78e:	mov    rsp,r11
   14000e791:	pop    r15
   14000e793:	pop    r14
   14000e795:	pop    r12
   14000e797:	pop    rdi
   14000e798:	pop    rsi
   14000e799:	ret    
   14000e79a:	int3   
   14000e79b:	int3   
   14000e79c:	mov    QWORD PTR [rsp+0x10],rbx
   14000e7a1:	mov    QWORD PTR [rsp+0x18],rsi
   14000e7a6:	mov    DWORD PTR [rsp+0x8],ecx
   14000e7aa:	push   rdi
   14000e7ab:	push   r12
   14000e7ad:	push   r13
   14000e7af:	push   r14
   14000e7b1:	push   r15
   14000e7b3:	sub    rsp,0x20
   14000e7b7:	mov    r15d,r8d
   14000e7ba:	mov    r12,rdx
   14000e7bd:	movsxd rbx,ecx
   14000e7c0:	cmp    ebx,0xfffffffe
   14000e7c3:	jne    0x14000e7dd
   14000e7c5:	call   0x1400084e0
   14000e7ca:	and    DWORD PTR [rax],0x0
   14000e7cd:	call   0x140008500
   14000e7d2:	mov    DWORD PTR [rax],0x9
   14000e7d8:	jmp    0x14000e86d
   14000e7dd:	test   ecx,ecx
   14000e7df:	js     0x14000e855
   14000e7e1:	cmp    ebx,DWORD PTR [rip+0x10b99]        # 0x14001f380
   14000e7e7:	jae    0x14000e855
   14000e7e9:	mov    rsi,rbx
   14000e7ec:	mov    r14,rbx
   14000e7ef:	sar    r14,0x6
   14000e7f3:	lea    r13,[rip+0x10786]        # 0x14001ef80
   14000e7fa:	and    esi,0x3f
   14000e7fd:	shl    rsi,0x6
   14000e801:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14000e806:	movzx  ecx,BYTE PTR [rax+rsi*1+0x38]
   14000e80b:	and    ecx,0x1
   14000e80e:	je     0x14000e855
   14000e810:	mov    ecx,ebx
   14000e812:	call   0x14000cebc
   14000e817:	or     edi,0xffffffff
   14000e81a:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14000e81f:	test   BYTE PTR [rax+rsi*1+0x38],0x1
   14000e824:	jne    0x14000e83b
   14000e826:	call   0x140008500
   14000e82b:	mov    DWORD PTR [rax],0x9
   14000e831:	call   0x1400084e0
   14000e836:	and    DWORD PTR [rax],0x0
   14000e839:	jmp    0x14000e84a
   14000e83b:	mov    r8d,r15d
   14000e83e:	mov    rdx,r12
   14000e841:	mov    ecx,ebx
   14000e843:	call   0x14000e888
   14000e848:	mov    edi,eax
   14000e84a:	mov    ecx,ebx
   14000e84c:	call   0x14000cee0
   14000e851:	mov    eax,edi
   14000e853:	jmp    0x14000e870
   14000e855:	call   0x1400084e0
   14000e85a:	and    DWORD PTR [rax],0x0
   14000e85d:	call   0x140008500
   14000e862:	mov    DWORD PTR [rax],0x9
   14000e868:	call   0x1400083e0
   14000e86d:	or     eax,0xffffffff
   14000e870:	mov    rbx,QWORD PTR [rsp+0x58]
   14000e875:	mov    rsi,QWORD PTR [rsp+0x60]
   14000e87a:	add    rsp,0x20
   14000e87e:	pop    r15
   14000e880:	pop    r14
   14000e882:	pop    r13
   14000e884:	pop    r12
   14000e886:	pop    rdi
   14000e887:	ret    
   14000e888:	mov    QWORD PTR [rsp+0x20],rbx
   14000e88d:	push   rbp
   14000e88e:	push   rsi
   14000e88f:	push   rdi
   14000e890:	push   r12
   14000e892:	push   r13
   14000e894:	push   r14
   14000e896:	push   r15
   14000e898:	mov    rbp,rsp
   14000e89b:	sub    rsp,0x60
   14000e89f:	xor    edi,edi
   14000e8a1:	mov    r15d,r8d
   14000e8a4:	movsxd r12,ecx
   14000e8a7:	mov    rsi,rdx
   14000e8aa:	test   r8d,r8d
   14000e8ad:	jne    0x14000e8b6
   14000e8af:	xor    eax,eax
   14000e8b1:	jmp    0x14000eb51
   14000e8b6:	test   rdx,rdx
   14000e8b9:	jne    0x14000e8da
   14000e8bb:	call   0x1400084e0
   14000e8c0:	mov    DWORD PTR [rax],edi
   14000e8c2:	call   0x140008500
   14000e8c7:	mov    DWORD PTR [rax],0x16
   14000e8cd:	call   0x1400083e0
   14000e8d2:	or     eax,0xffffffff
   14000e8d5:	jmp    0x14000eb51
   14000e8da:	mov    r14,r12
   14000e8dd:	lea    rax,[rip+0x1069c]        # 0x14001ef80
   14000e8e4:	and    r14d,0x3f
   14000e8e8:	mov    r13,r12
   14000e8eb:	sar    r13,0x6
   14000e8ef:	shl    r14,0x6
   14000e8f3:	mov    QWORD PTR [rbp-0x10],r13
   14000e8f7:	mov    rcx,QWORD PTR [rax+r13*8]
   14000e8fb:	mov    bl,BYTE PTR [rcx+r14*1+0x39]
   14000e900:	lea    eax,[rbx-0x1]
   14000e903:	cmp    al,0x1
   14000e905:	ja     0x14000e910
   14000e907:	mov    eax,r15d
   14000e90a:	not    eax
   14000e90c:	test   al,0x1
   14000e90e:	je     0x14000e8bb
   14000e910:	test   BYTE PTR [rcx+r14*1+0x38],0x20
   14000e916:	je     0x14000e926
   14000e918:	xor    edx,edx
   14000e91a:	mov    ecx,r12d
   14000e91d:	lea    r8d,[rdx+0x2]
   14000e921:	call   0x140011c6c
   14000e926:	mov    ecx,r12d
   14000e929:	mov    QWORD PTR [rbp-0x20],rdi
   14000e92d:	call   0x140010b10
   14000e932:	test   eax,eax
   14000e934:	je     0x14000ea3b
   14000e93a:	lea    rax,[rip+0x1063f]        # 0x14001ef80
   14000e941:	mov    rax,QWORD PTR [rax+r13*8]
   14000e945:	test   BYTE PTR [rax+r14*1+0x38],0x80
   14000e94b:	je     0x14000ea3b
   14000e951:	call   0x140009d6c
   14000e956:	mov    rcx,QWORD PTR [rax+0x90]
   14000e95d:	cmp    QWORD PTR [rcx+0x138],rdi
   14000e964:	jne    0x14000e97c
   14000e966:	lea    rax,[rip+0x10613]        # 0x14001ef80
   14000e96d:	mov    rax,QWORD PTR [rax+r13*8]
   14000e971:	cmp    BYTE PTR [rax+r14*1+0x39],dil
   14000e976:	je     0x14000ea3b
   14000e97c:	lea    rax,[rip+0x105fd]        # 0x14001ef80
   14000e983:	mov    rcx,QWORD PTR [rax+r13*8]
   14000e987:	lea    rdx,[rbp-0x8]
   14000e98b:	mov    rcx,QWORD PTR [rcx+r14*1+0x28]
   14000e990:	call   QWORD PTR [rip+0x588a]        # 0x140014220
   14000e996:	test   eax,eax
   14000e998:	je     0x14000ea3b
   14000e99e:	test   bl,bl
   14000e9a0:	je     0x14000ea1d
   14000e9a2:	dec    bl
   14000e9a4:	cmp    bl,0x1
   14000e9a7:	ja     0x14000ead8
   14000e9ad:	and    DWORD PTR [rbp-0x30],edi
   14000e9b0:	lea    r12,[rsi+r15*1]
   14000e9b4:	xor    ebx,ebx
   14000e9b6:	mov    r15,rsi
   14000e9b9:	mov    DWORD PTR [rbp-0x2c],ebx
   14000e9bc:	cmp    rsi,r12
   14000e9bf:	jae    0x14000eace
   14000e9c5:	movzx  r13d,WORD PTR [r15]
   14000e9c9:	movzx  ecx,r13w
   14000e9cd:	call   0x140011c74
   14000e9d2:	cmp    ax,r13w
   14000e9d6:	jne    0x14000ea0b
   14000e9d8:	add    ebx,0x2
   14000e9db:	mov    DWORD PTR [rbp-0x2c],ebx
   14000e9de:	cmp    r13w,0xa
   14000e9e3:	jne    0x14000ea00
   14000e9e5:	mov    r13d,0xd
   14000e9eb:	mov    ecx,r13d
   14000e9ee:	call   0x140011c74
   14000e9f3:	cmp    ax,r13w
   14000e9f7:	jne    0x14000ea0b
   14000e9f9:	inc    ebx
   14000e9fb:	mov    DWORD PTR [rbp-0x2c],ebx
   14000e9fe:	inc    edi
   14000ea00:	add    r15,0x2
   14000ea04:	cmp    r15,r12
   14000ea07:	jae    0x14000ea14
   14000ea09:	jmp    0x14000e9c5
   14000ea0b:	call   QWORD PTR [rip+0x5607]        # 0x140014018
   14000ea11:	mov    DWORD PTR [rbp-0x30],eax
   14000ea14:	mov    r13,QWORD PTR [rbp-0x10]
   14000ea18:	jmp    0x14000eace
   14000ea1d:	mov    r9d,r15d
   14000ea20:	lea    rcx,[rbp-0x30]
   14000ea24:	mov    r8,rsi
   14000ea27:	mov    edx,r12d
   14000ea2a:	call   0x14000e1fc
   14000ea2f:	movsd  xmm0,QWORD PTR [rax]
   14000ea33:	mov    edi,DWORD PTR [rax+0x8]
   14000ea36:	jmp    0x14000ead3
   14000ea3b:	lea    rax,[rip+0x1053e]        # 0x14001ef80
   14000ea42:	mov    rcx,QWORD PTR [rax+r13*8]
   14000ea46:	test   BYTE PTR [rcx+r14*1+0x38],0x80
   14000ea4c:	je     0x14000ea9b
   14000ea4e:	movsx  ecx,bl
   14000ea51:	test   bl,bl
   14000ea53:	je     0x14000ea87
   14000ea55:	sub    ecx,0x1
   14000ea58:	je     0x14000ea73
   14000ea5a:	cmp    ecx,0x1
   14000ea5d:	jne    0x14000ead8
   14000ea5f:	mov    r9d,r15d
   14000ea62:	lea    rcx,[rbp-0x30]
   14000ea66:	mov    r8,rsi
   14000ea69:	mov    edx,r12d
   14000ea6c:	call   0x14000e50c
   14000ea71:	jmp    0x14000ea2f
   14000ea73:	mov    r9d,r15d
   14000ea76:	lea    rcx,[rbp-0x30]
   14000ea7a:	mov    r8,rsi
   14000ea7d:	mov    edx,r12d
   14000ea80:	call   0x14000e628
   14000ea85:	jmp    0x14000ea2f
   14000ea87:	mov    r9d,r15d
   14000ea8a:	lea    rcx,[rbp-0x30]
   14000ea8e:	mov    r8,rsi
   14000ea91:	mov    edx,r12d
   14000ea94:	call   0x14000e404
   14000ea99:	jmp    0x14000ea2f
   14000ea9b:	mov    rcx,QWORD PTR [rcx+r14*1+0x28]
   14000eaa0:	lea    r9,[rbp-0x2c]
   14000eaa4:	and    DWORD PTR [rbp-0x30],edi
   14000eaa7:	xor    eax,eax
   14000eaa9:	and    QWORD PTR [rsp+0x20],rax
   14000eaae:	mov    r8d,r15d
   14000eab1:	mov    rdx,rsi
   14000eab4:	mov    QWORD PTR [rbp-0x2c],rax
   14000eab8:	call   QWORD PTR [rip+0x569a]        # 0x140014158
   14000eabe:	test   eax,eax
   14000eac0:	jne    0x14000eacb
   14000eac2:	call   QWORD PTR [rip+0x5550]        # 0x140014018
   14000eac8:	mov    DWORD PTR [rbp-0x30],eax
   14000eacb:	mov    edi,DWORD PTR [rbp-0x28]
   14000eace:	movsd  xmm0,QWORD PTR [rbp-0x30]
   14000ead3:	movsd  QWORD PTR [rbp-0x20],xmm0
   14000ead8:	mov    rax,QWORD PTR [rbp-0x20]
   14000eadc:	shr    rax,0x20
   14000eae0:	test   eax,eax
   14000eae2:	jne    0x14000eb4c
   14000eae4:	mov    eax,DWORD PTR [rbp-0x20]
   14000eae7:	test   eax,eax
   14000eae9:	je     0x14000eb18
   14000eaeb:	cmp    eax,0x5
   14000eaee:	jne    0x14000eb0b
   14000eaf0:	call   0x140008500
   14000eaf5:	mov    DWORD PTR [rax],0x9
   14000eafb:	call   0x1400084e0
   14000eb00:	mov    DWORD PTR [rax],0x5
   14000eb06:	jmp    0x14000e8d2
   14000eb0b:	mov    ecx,DWORD PTR [rbp-0x20]
   14000eb0e:	call   0x140008490
   14000eb13:	jmp    0x14000e8d2
   14000eb18:	lea    rax,[rip+0x10461]        # 0x14001ef80
   14000eb1f:	mov    rax,QWORD PTR [rax+r13*8]
   14000eb23:	test   BYTE PTR [rax+r14*1+0x38],0x40
   14000eb29:	je     0x14000eb34
   14000eb2b:	cmp    BYTE PTR [rsi],0x1a
   14000eb2e:	je     0x14000e8af
   14000eb34:	call   0x140008500
   14000eb39:	mov    DWORD PTR [rax],0x1c
   14000eb3f:	call   0x1400084e0
   14000eb44:	and    DWORD PTR [rax],0x0
   14000eb47:	jmp    0x14000e8d2
   14000eb4c:	mov    eax,DWORD PTR [rbp-0x1c]
   14000eb4f:	sub    eax,edi
   14000eb51:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000eb59:	add    rsp,0x60
   14000eb5d:	pop    r15
   14000eb5f:	pop    r14
   14000eb61:	pop    r13
   14000eb63:	pop    r12
   14000eb65:	pop    rdi
   14000eb66:	pop    rsi
   14000eb67:	pop    rbp
   14000eb68:	ret    
   14000eb69:	int3   
   14000eb6a:	int3   
   14000eb6b:	int3   
   14000eb6c:	rex push rbx
   14000eb6e:	sub    rsp,0x40
   14000eb72:	mov    ebx,ecx
   14000eb74:	lea    rcx,[rsp+0x20]
   14000eb79:	call   0x140003ab0
   14000eb7e:	mov    rax,QWORD PTR [rsp+0x28]
   14000eb83:	movzx  edx,bl
   14000eb86:	mov    rcx,QWORD PTR [rax]
   14000eb89:	movzx  eax,WORD PTR [rcx+rdx*2]
   14000eb8d:	and    eax,0x8000
   14000eb92:	cmp    BYTE PTR [rsp+0x38],0x0
   14000eb97:	je     0x14000eba5
   14000eb99:	mov    rcx,QWORD PTR [rsp+0x20]
   14000eb9e:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14000eba5:	add    rsp,0x40
   14000eba9:	pop    rbx
   14000ebaa:	ret    
   14000ebab:	int3   
   14000ebac:	rex push rbp
   14000ebae:	push   r12
   14000ebb0:	push   r13
   14000ebb2:	push   r14
   14000ebb4:	push   r15
   14000ebb6:	sub    rsp,0x60
   14000ebba:	lea    rbp,[rsp+0x50]
   14000ebbf:	mov    QWORD PTR [rbp+0x40],rbx
   14000ebc3:	mov    QWORD PTR [rbp+0x48],rsi
   14000ebc7:	mov    QWORD PTR [rbp+0x50],rdi
   14000ebcb:	mov    rax,QWORD PTR [rip+0xf446]        # 0x14001e018
   14000ebd2:	xor    rax,rbp
   14000ebd5:	mov    QWORD PTR [rbp+0x8],rax
   14000ebd9:	movsxd rbx,DWORD PTR [rbp+0x60]
   14000ebdd:	mov    r15,r9
   14000ebe0:	mov    QWORD PTR [rbp+0x0],rdx
   14000ebe4:	mov    r13d,r8d
   14000ebe7:	mov    rdi,rcx
   14000ebea:	test   ebx,ebx
   14000ebec:	jle    0x14000ec02
   14000ebee:	mov    rdx,rbx
   14000ebf1:	mov    rcx,r9
   14000ebf4:	call   0x140011cd0
   14000ebf9:	cmp    eax,ebx
   14000ebfb:	lea    ebx,[rax+0x1]
   14000ebfe:	jl     0x14000ec02
   14000ec00:	mov    ebx,eax
   14000ec02:	mov    r14d,DWORD PTR [rbp+0x78]
   14000ec06:	test   r14d,r14d
   14000ec09:	jne    0x14000ec12
   14000ec0b:	mov    rax,QWORD PTR [rdi]
   14000ec0e:	mov    r14d,DWORD PTR [rax+0xc]
   14000ec12:	neg    DWORD PTR [rbp+0x80]
   14000ec18:	mov    r9d,ebx
   14000ec1b:	mov    r8,r15
   14000ec1e:	mov    ecx,r14d
   14000ec21:	sbb    edx,edx
   14000ec23:	and    DWORD PTR [rsp+0x28],0x0
   14000ec28:	and    QWORD PTR [rsp+0x20],0x0
   14000ec2e:	and    edx,0x8
   14000ec31:	inc    edx
   14000ec33:	call   QWORD PTR [rip+0x550f]        # 0x140014148
   14000ec39:	movsxd r12,eax
   14000ec3c:	test   eax,eax
   14000ec3e:	je     0x14000eebf
   14000ec44:	mov    rdx,r12
   14000ec47:	movabs r8,0xffffffffffffff0
   14000ec51:	add    rdx,rdx
   14000ec54:	lea    rcx,[rdx+0x10]
   14000ec58:	cmp    rdx,rcx
   14000ec5b:	sbb    rax,rax
   14000ec5e:	test   rcx,rax
   14000ec61:	je     0x14000ecd5
   14000ec63:	lea    rcx,[rdx+0x10]
   14000ec67:	cmp    rdx,rcx
   14000ec6a:	sbb    rax,rax
   14000ec6d:	and    rax,rcx
   14000ec70:	cmp    rax,0x400
   14000ec76:	lea    rax,[rdx+0x10]
   14000ec7a:	ja     0x14000ecb3
   14000ec7c:	cmp    rdx,rax
   14000ec7f:	sbb    rcx,rcx
   14000ec82:	and    rcx,rax
   14000ec85:	lea    rax,[rcx+0xf]
   14000ec89:	cmp    rax,rcx
   14000ec8c:	ja     0x14000ec91
   14000ec8e:	mov    rax,r8
   14000ec91:	and    rax,0xfffffffffffffff0
   14000ec95:	call   0x140013500
   14000ec9a:	sub    rsp,rax
   14000ec9d:	lea    rsi,[rsp+0x50]
   14000eca2:	test   rsi,rsi
   14000eca5:	je     0x14000eea5
   14000ecab:	mov    DWORD PTR [rsi],0xcccc
   14000ecb1:	jmp    0x14000eccf
   14000ecb3:	cmp    rdx,rax
   14000ecb6:	sbb    rcx,rcx
   14000ecb9:	and    rcx,rax
   14000ecbc:	call   0x140007d04
   14000ecc1:	mov    rsi,rax
   14000ecc4:	test   rax,rax
   14000ecc7:	je     0x14000ecd7
   14000ecc9:	mov    DWORD PTR [rax],0xdddd
   14000eccf:	add    rsi,0x10
   14000ecd3:	jmp    0x14000ecd7
   14000ecd5:	xor    esi,esi
   14000ecd7:	test   rsi,rsi
   14000ecda:	je     0x14000eea5
   14000ece0:	mov    DWORD PTR [rsp+0x28],r12d
   14000ece5:	mov    r9d,ebx
   14000ece8:	mov    r8,r15
   14000eceb:	mov    QWORD PTR [rsp+0x20],rsi
   14000ecf0:	mov    edx,0x1
   14000ecf5:	mov    ecx,r14d
   14000ecf8:	call   QWORD PTR [rip+0x544a]        # 0x140014148
   14000ecfe:	test   eax,eax
   14000ed00:	je     0x14000eea5
   14000ed06:	and    QWORD PTR [rsp+0x40],0x0
   14000ed0c:	mov    r9d,r12d
   14000ed0f:	and    QWORD PTR [rsp+0x38],0x0
   14000ed15:	mov    r8,rsi
   14000ed18:	and    QWORD PTR [rsp+0x30],0x0
   14000ed1e:	mov    edx,r13d
   14000ed21:	mov    r15,QWORD PTR [rbp+0x0]
   14000ed25:	and    DWORD PTR [rsp+0x28],0x0
   14000ed2a:	mov    rcx,r15
   14000ed2d:	and    QWORD PTR [rsp+0x20],0x0
   14000ed33:	call   0x1400089e4
   14000ed38:	movsxd rdi,eax
   14000ed3b:	test   eax,eax
   14000ed3d:	je     0x14000eea5
   14000ed43:	mov    r8d,0x400
   14000ed49:	test   r8d,r13d
   14000ed4c:	je     0x14000eda0
   14000ed4e:	mov    eax,DWORD PTR [rbp+0x70]
   14000ed51:	test   eax,eax
   14000ed53:	je     0x14000eea7
   14000ed59:	cmp    edi,eax
   14000ed5b:	jg     0x14000eea5
   14000ed61:	and    QWORD PTR [rsp+0x40],0x0
   14000ed67:	mov    r9d,r12d
   14000ed6a:	and    QWORD PTR [rsp+0x38],0x0
   14000ed70:	mov    r8,rsi
   14000ed73:	and    QWORD PTR [rsp+0x30],0x0
   14000ed79:	mov    edx,r13d
   14000ed7c:	mov    DWORD PTR [rsp+0x28],eax
   14000ed80:	mov    rcx,r15
   14000ed83:	mov    rax,QWORD PTR [rbp+0x68]
   14000ed87:	mov    QWORD PTR [rsp+0x20],rax
   14000ed8c:	call   0x1400089e4
   14000ed91:	mov    edi,eax
   14000ed93:	test   eax,eax
   14000ed95:	jne    0x14000eea7
   14000ed9b:	jmp    0x14000eea5
   14000eda0:	mov    rdx,rdi
   14000eda3:	add    rdx,rdx
   14000eda6:	lea    rcx,[rdx+0x10]
   14000edaa:	cmp    rdx,rcx
   14000edad:	sbb    rax,rax
   14000edb0:	test   rcx,rax
   14000edb3:	je     0x14000ee2b
   14000edb5:	lea    rcx,[rdx+0x10]
   14000edb9:	cmp    rdx,rcx
   14000edbc:	sbb    rax,rax
   14000edbf:	and    rax,rcx
   14000edc2:	cmp    rax,r8
   14000edc5:	lea    rax,[rdx+0x10]
   14000edc9:	ja     0x14000ee09
   14000edcb:	cmp    rdx,rax
   14000edce:	sbb    rcx,rcx
   14000edd1:	and    rcx,rax
   14000edd4:	lea    rax,[rcx+0xf]
   14000edd8:	cmp    rax,rcx
   14000eddb:	ja     0x14000ede7
   14000eddd:	movabs rax,0xffffffffffffff0
   14000ede7:	and    rax,0xfffffffffffffff0
   14000edeb:	call   0x140013500
   14000edf0:	sub    rsp,rax
   14000edf3:	lea    rbx,[rsp+0x50]
   14000edf8:	test   rbx,rbx
   14000edfb:	je     0x14000eea5
   14000ee01:	mov    DWORD PTR [rbx],0xcccc
   14000ee07:	jmp    0x14000ee25
   14000ee09:	cmp    rdx,rax
   14000ee0c:	sbb    rcx,rcx
   14000ee0f:	and    rcx,rax
   14000ee12:	call   0x140007d04
   14000ee17:	mov    rbx,rax
   14000ee1a:	test   rax,rax
   14000ee1d:	je     0x14000ee2d
   14000ee1f:	mov    DWORD PTR [rax],0xdddd
   14000ee25:	add    rbx,0x10
   14000ee29:	jmp    0x14000ee2d
   14000ee2b:	xor    ebx,ebx
   14000ee2d:	test   rbx,rbx
   14000ee30:	je     0x14000eea5
   14000ee32:	and    QWORD PTR [rsp+0x40],0x0
   14000ee38:	mov    r9d,r12d
   14000ee3b:	and    QWORD PTR [rsp+0x38],0x0
   14000ee41:	mov    r8,rsi
   14000ee44:	and    QWORD PTR [rsp+0x30],0x0
   14000ee4a:	mov    edx,r13d
   14000ee4d:	mov    DWORD PTR [rsp+0x28],edi
   14000ee51:	mov    rcx,r15
   14000ee54:	mov    QWORD PTR [rsp+0x20],rbx
   14000ee59:	call   0x1400089e4
   14000ee5e:	test   eax,eax
   14000ee60:	je     0x14000ee94
   14000ee62:	and    QWORD PTR [rsp+0x38],0x0
   14000ee68:	xor    edx,edx
   14000ee6a:	and    QWORD PTR [rsp+0x30],rdx
   14000ee6f:	mov    r9d,edi
   14000ee72:	mov    eax,DWORD PTR [rbp+0x70]
   14000ee75:	mov    r8,rbx
   14000ee78:	mov    ecx,r14d
   14000ee7b:	test   eax,eax
   14000ee7d:	jne    0x14000eee5
   14000ee7f:	and    DWORD PTR [rsp+0x28],edx
   14000ee83:	and    QWORD PTR [rsp+0x20],rdx
   14000ee88:	call   QWORD PTR [rip+0x52b2]        # 0x140014140
   14000ee8e:	mov    edi,eax
   14000ee90:	test   eax,eax
   14000ee92:	jne    0x14000eef4
   14000ee94:	lea    rcx,[rbx-0x10]
   14000ee98:	cmp    DWORD PTR [rcx],0xdddd
   14000ee9e:	jne    0x14000eea5
   14000eea0:	call   0x140007cc4
   14000eea5:	xor    edi,edi
   14000eea7:	test   rsi,rsi
   14000eeaa:	je     0x14000eebd
   14000eeac:	lea    rcx,[rsi-0x10]
   14000eeb0:	cmp    DWORD PTR [rcx],0xdddd
   14000eeb6:	jne    0x14000eebd
   14000eeb8:	call   0x140007cc4
   14000eebd:	mov    eax,edi
   14000eebf:	mov    rcx,QWORD PTR [rbp+0x8]
   14000eec3:	xor    rcx,rbp
   14000eec6:	call   0x140013230
   14000eecb:	mov    rbx,QWORD PTR [rbp+0x40]
   14000eecf:	mov    rsi,QWORD PTR [rbp+0x48]
   14000eed3:	mov    rdi,QWORD PTR [rbp+0x50]
   14000eed7:	lea    rsp,[rbp+0x10]
   14000eedb:	pop    r15
   14000eedd:	pop    r14
   14000eedf:	pop    r13
   14000eee1:	pop    r12
   14000eee3:	pop    rbp
   14000eee4:	ret    
   14000eee5:	mov    DWORD PTR [rsp+0x28],eax
   14000eee9:	mov    rax,QWORD PTR [rbp+0x68]
   14000eeed:	mov    QWORD PTR [rsp+0x20],rax
   14000eef2:	jmp    0x14000ee88
   14000eef4:	lea    rcx,[rbx-0x10]
   14000eef8:	cmp    DWORD PTR [rcx],0xdddd
   14000eefe:	jne    0x14000eea7
   14000ef00:	call   0x140007cc4
   14000ef05:	jmp    0x14000eea7
   14000ef07:	int3   
   14000ef08:	mov    QWORD PTR [rsp+0x8],rbx
   14000ef0d:	mov    QWORD PTR [rsp+0x10],rsi
   14000ef12:	push   rdi
   14000ef13:	sub    rsp,0x70
   14000ef17:	mov    rsi,rdx
   14000ef1a:	mov    rbx,r9
   14000ef1d:	mov    rdx,rcx
   14000ef20:	mov    edi,r8d
   14000ef23:	lea    rcx,[rsp+0x50]
   14000ef28:	call   0x140003ab0
   14000ef2d:	mov    eax,DWORD PTR [rsp+0xc0]
   14000ef34:	lea    rcx,[rsp+0x58]
   14000ef39:	mov    DWORD PTR [rsp+0x40],eax
   14000ef3d:	mov    r9,rbx
   14000ef40:	mov    eax,DWORD PTR [rsp+0xb8]
   14000ef47:	mov    r8d,edi
   14000ef4a:	mov    DWORD PTR [rsp+0x38],eax
   14000ef4e:	mov    rdx,rsi
   14000ef51:	mov    eax,DWORD PTR [rsp+0xb0]
   14000ef58:	mov    DWORD PTR [rsp+0x30],eax
   14000ef5c:	mov    rax,QWORD PTR [rsp+0xa8]
   14000ef64:	mov    QWORD PTR [rsp+0x28],rax
   14000ef69:	mov    eax,DWORD PTR [rsp+0xa0]
   14000ef70:	mov    DWORD PTR [rsp+0x20],eax
   14000ef74:	call   0x14000ebac
   14000ef79:	cmp    BYTE PTR [rsp+0x68],0x0
   14000ef7e:	je     0x14000ef8c
   14000ef80:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ef85:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14000ef8c:	lea    r11,[rsp+0x70]
   14000ef91:	mov    rbx,QWORD PTR [r11+0x10]
   14000ef95:	mov    rsi,QWORD PTR [r11+0x18]
   14000ef99:	mov    rsp,r11
   14000ef9c:	pop    rdi
   14000ef9d:	ret    
   14000ef9e:	int3   
   14000ef9f:	int3   
   14000efa0:	rex push rbx
   14000efa2:	sub    rsp,0x20
   14000efa6:	xor    ebx,ebx
   14000efa8:	test   rcx,rcx
   14000efab:	jne    0x14000efc5
   14000efad:	call   0x140008500
   14000efb2:	mov    ebx,0x16
   14000efb7:	mov    DWORD PTR [rax],ebx
   14000efb9:	call   0x1400083e0
   14000efbe:	mov    eax,ebx
   14000efc0:	jmp    0x14000f059
   14000efc5:	test   rdx,rdx
   14000efc8:	je     0x14000efad
   14000efca:	test   r8d,r8d
   14000efcd:	mov    BYTE PTR [rcx],bl
   14000efcf:	mov    eax,ebx
   14000efd1:	cmovg  eax,r8d
   14000efd5:	inc    eax
   14000efd7:	cdqe   
   14000efd9:	cmp    rdx,rax
   14000efdc:	ja     0x14000efea
   14000efde:	call   0x140008500
   14000efe3:	mov    ebx,0x22
   14000efe8:	jmp    0x14000efb7
   14000efea:	test   r9,r9
   14000efed:	je     0x14000efad
   14000efef:	mov    rdx,QWORD PTR [r9+0x8]
   14000eff3:	lea    rax,[rcx+0x1]
   14000eff7:	mov    BYTE PTR [rcx],0x30
   14000effa:	jmp    0x14000f015
   14000effc:	mov    r10b,BYTE PTR [rdx]
   14000efff:	test   r10b,r10b
   14000f002:	je     0x14000f009
   14000f004:	inc    rdx
   14000f007:	jmp    0x14000f00c
   14000f009:	mov    r10b,0x30
   14000f00c:	mov    BYTE PTR [rax],r10b
   14000f00f:	inc    rax
   14000f012:	dec    r8d
   14000f015:	test   r8d,r8d
   14000f018:	jg     0x14000effc
   14000f01a:	mov    BYTE PTR [rax],bl
   14000f01c:	js     0x14000f032
   14000f01e:	cmp    BYTE PTR [rdx],0x35
   14000f021:	jl     0x14000f032
   14000f023:	jmp    0x14000f028
   14000f025:	mov    BYTE PTR [rax],0x30
   14000f028:	dec    rax
   14000f02b:	cmp    BYTE PTR [rax],0x39
   14000f02e:	je     0x14000f025
   14000f030:	inc    BYTE PTR [rax]
   14000f032:	cmp    BYTE PTR [rcx],0x31
   14000f035:	jne    0x14000f03d
   14000f037:	inc    DWORD PTR [r9+0x4]
   14000f03b:	jmp    0x14000f057
   14000f03d:	or     r8,0xffffffffffffffff
   14000f041:	inc    r8
   14000f044:	cmp    BYTE PTR [rcx+r8*1+0x1],bl
   14000f049:	jne    0x14000f041
   14000f04b:	inc    r8
   14000f04e:	lea    rdx,[rcx+0x1]
   14000f052:	call   0x140013570
   14000f057:	xor    eax,eax
   14000f059:	add    rsp,0x20
   14000f05d:	pop    rbx
   14000f05e:	ret    
   14000f05f:	int3   
   14000f060:	mov    QWORD PTR [rsp+0x10],rdx
   14000f065:	push   rsi
   14000f066:	push   rdi
   14000f067:	sub    rsp,0x248
   14000f06e:	mov    r9d,DWORD PTR [rcx]
   14000f071:	mov    rdi,rdx
   14000f074:	mov    rsi,rcx
   14000f077:	test   r9d,r9d
   14000f07a:	jne    0x14000f088
   14000f07c:	xor    eax,eax
   14000f07e:	add    rsp,0x248
   14000f085:	pop    rdi
   14000f086:	pop    rsi
   14000f087:	ret    
   14000f088:	mov    eax,DWORD PTR [rdx]
   14000f08a:	test   eax,eax
   14000f08c:	je     0x14000f07c
   14000f08e:	mov    QWORD PTR [rsp+0x240],rbx
   14000f096:	dec    r9d
   14000f099:	mov    QWORD PTR [rsp+0x238],rbp
   14000f0a1:	mov    QWORD PTR [rsp+0x230],r12
   14000f0a9:	mov    QWORD PTR [rsp+0x220],r14
   14000f0b1:	mov    QWORD PTR [rsp+0x218],r15
   14000f0b9:	sub    eax,0x1
   14000f0bc:	jne    0x14000f1b4
   14000f0c2:	mov    r15d,DWORD PTR [rdx+0x4]
   14000f0c6:	xor    r14d,r14d
   14000f0c9:	cmp    r15d,0x1
   14000f0cd:	jne    0x14000f0f7
   14000f0cf:	mov    ebx,DWORD PTR [rcx+0x4]
   14000f0d2:	lea    r8,[rsp+0x44]
   14000f0d7:	add    rcx,0x4
   14000f0db:	mov    DWORD PTR [rsi],r14d
   14000f0de:	xor    r9d,r9d
   14000f0e1:	mov    DWORD PTR [rsp+0x40],r14d
   14000f0e6:	mov    edx,0x1cc
   14000f0eb:	call   0x14001089c
   14000f0f0:	mov    eax,ebx
   14000f0f2:	jmp    0x14000f4fc
   14000f0f7:	test   r9d,r9d
   14000f0fa:	jne    0x14000f135
   14000f0fc:	mov    ebx,DWORD PTR [rcx+0x4]
   14000f0ff:	lea    r8,[rsp+0x44]
   14000f104:	mov    DWORD PTR [rcx],r14d
   14000f107:	xor    r9d,r9d
   14000f10a:	add    rcx,0x4
   14000f10e:	mov    DWORD PTR [rsp+0x40],r14d
   14000f113:	mov    edx,0x1cc
   14000f118:	call   0x14001089c
   14000f11d:	xor    edx,edx
   14000f11f:	mov    eax,ebx
   14000f121:	div    r15d
   14000f124:	test   edx,edx
   14000f126:	mov    DWORD PTR [rsi+0x4],edx
   14000f129:	setne  r14b
   14000f12d:	mov    DWORD PTR [rsi],r14d
   14000f130:	jmp    0x14000f4fc
   14000f135:	mov    r12d,0xffffffff
   14000f13b:	mov    rdi,r14
   14000f13e:	mov    rbp,r14
   14000f141:	cmp    r9d,r12d
   14000f144:	je     0x14000f175
   14000f146:	mov    rcx,r15
   14000f149:	nop    DWORD PTR [rax+0x0]
   14000f150:	mov    eax,DWORD PTR [rsi+r9*4+0x4]
   14000f155:	xor    edx,edx
   14000f157:	shl    rbp,0x20
   14000f15b:	add    r9d,r12d
   14000f15e:	or     rax,rbp
   14000f161:	shl    rdi,0x20
   14000f165:	div    rcx
   14000f168:	mov    eax,eax
   14000f16a:	mov    rbp,rdx
   14000f16d:	add    rdi,rax
   14000f170:	cmp    r9d,r12d
   14000f173:	jne    0x14000f150
   14000f175:	xor    r9d,r9d
   14000f178:	mov    DWORD PTR [rsp+0x40],r14d
   14000f17d:	lea    r8,[rsp+0x44]
   14000f182:	mov    DWORD PTR [rsi],r14d
   14000f185:	mov    edx,0x1cc
   14000f18a:	lea    rcx,[rsi+0x4]
   14000f18e:	call   0x14001089c
   14000f193:	mov    rcx,rbp
   14000f196:	mov    DWORD PTR [rsi+0x4],ebp
   14000f199:	shr    rcx,0x20
   14000f19d:	mov    rax,rdi
   14000f1a0:	test   ecx,ecx
   14000f1a2:	mov    DWORD PTR [rsi+0x8],ecx
   14000f1a5:	setne  r14b
   14000f1a9:	inc    r14d
   14000f1ac:	mov    DWORD PTR [rsi],r14d
   14000f1af:	jmp    0x14000f4fc
   14000f1b4:	cmp    eax,r9d
   14000f1b7:	jbe    0x14000f1c0
   14000f1b9:	xor    eax,eax
   14000f1bb:	jmp    0x14000f4fc
   14000f1c0:	mov    r8d,r9d
   14000f1c3:	movsxd rdx,r9d
   14000f1c6:	sub    r8d,eax
   14000f1c9:	mov    QWORD PTR [rsp+0x228],r13
   14000f1d1:	movsxd rbx,r8d
   14000f1d4:	lea    r13d,[rax+0x1]
   14000f1d8:	mov    r10d,r9d
   14000f1db:	cmp    rdx,rbx
   14000f1de:	jl     0x14000f22c
   14000f1e0:	add    rcx,0x4
   14000f1e4:	lea    rax,[rbx*4+0x0]
   14000f1ec:	mov    r11,rdi
   14000f1ef:	sub    r11,rax
   14000f1f2:	sub    r11,rsi
   14000f1f5:	lea    rcx,[rcx+rdx*4]
   14000f1f9:	nop    DWORD PTR [rax+0x0]
   14000f200:	mov    eax,DWORD PTR [rcx]
   14000f202:	cmp    DWORD PTR [r11+rcx*1],eax
   14000f206:	jne    0x14000f219
   14000f208:	dec    r10d
   14000f20b:	dec    rdx
   14000f20e:	sub    rcx,0x4
   14000f212:	cmp    rdx,rbx
   14000f215:	jge    0x14000f200
   14000f217:	jmp    0x14000f22c
   14000f219:	movsxd rax,r10d
   14000f21c:	mov    rcx,rax
   14000f21f:	sub    rcx,rbx
   14000f222:	mov    eax,DWORD PTR [rsi+rax*4+0x4]
   14000f226:	cmp    DWORD PTR [rdi+rcx*4+0x4],eax
   14000f22a:	jae    0x14000f22f
   14000f22c:	inc    r8d
   14000f22f:	test   r8d,r8d
   14000f232:	jne    0x14000f23b
   14000f234:	xor    eax,eax
   14000f236:	jmp    0x14000f4f4
   14000f23b:	lea    eax,[r13-0x1]
   14000f23f:	mov    r11d,0x20
   14000f245:	mov    r10d,DWORD PTR [rdi+rax*4+0x4]
   14000f24a:	lea    eax,[r13-0x2]
   14000f24e:	mov    ebx,DWORD PTR [rdi+rax*4+0x4]
   14000f252:	bsr    eax,r10d
   14000f256:	mov    DWORD PTR [rsp+0x278],ebx
   14000f25d:	je     0x14000f268
   14000f25f:	mov    edx,0x1f
   14000f264:	sub    edx,eax
   14000f266:	jmp    0x14000f26b
   14000f268:	mov    edx,r11d
   14000f26b:	sub    r11d,edx
   14000f26e:	mov    DWORD PTR [rsp+0x270],edx
   14000f275:	mov    DWORD PTR [rsp+0x20],r11d
   14000f27a:	test   edx,edx
   14000f27c:	je     0x14000f2be
   14000f27e:	mov    eax,r10d
   14000f281:	mov    edx,ebx
   14000f283:	mov    ecx,r11d
   14000f286:	shr    edx,cl
   14000f288:	mov    ecx,DWORD PTR [rsp+0x270]
   14000f28f:	mov    r10d,edx
   14000f292:	shl    eax,cl
   14000f294:	mov    edx,ecx
   14000f296:	shl    ebx,cl
   14000f298:	or     r10d,eax
   14000f29b:	mov    DWORD PTR [rsp+0x278],ebx
   14000f2a2:	cmp    r13d,0x2
   14000f2a6:	jbe    0x14000f2be
   14000f2a8:	lea    eax,[r13-0x3]
   14000f2ac:	mov    ecx,r11d
   14000f2af:	mov    eax,DWORD PTR [rdi+rax*4+0x4]
   14000f2b3:	shr    eax,cl
   14000f2b5:	or     ebx,eax
   14000f2b7:	mov    DWORD PTR [rsp+0x278],ebx
   14000f2be:	xor    r14d,r14d
   14000f2c1:	lea    ebx,[r8-0x1]
   14000f2c5:	mov    DWORD PTR [rsp+0x260],ebx
   14000f2cc:	mov    r15d,r14d
   14000f2cf:	test   ebx,ebx
   14000f2d1:	js     0x14000f4b6
   14000f2d7:	mov    eax,r11d
   14000f2da:	lea    edi,[rbx+r13*1]
   14000f2de:	mov    r11d,r10d
   14000f2e1:	mov    r12d,0xffffffff
   14000f2e7:	mov    QWORD PTR [rsp+0x30],r11
   14000f2ec:	mov    QWORD PTR [rsp+0x38],rax
   14000f2f1:	cmp    edi,r9d
   14000f2f4:	ja     0x14000f2fc
   14000f2f6:	mov    ebp,DWORD PTR [rsi+rdi*4+0x4]
   14000f2fa:	jmp    0x14000f2ff
   14000f2fc:	mov    ebp,r14d
   14000f2ff:	lea    eax,[rdi-0x1]
   14000f302:	mov    ecx,DWORD PTR [rsi+rax*4+0x4]
   14000f306:	lea    eax,[rdi-0x2]
   14000f309:	mov    r10d,DWORD PTR [rsi+rax*4+0x4]
   14000f30e:	mov    QWORD PTR [rsp+0x28],rcx
   14000f313:	mov    DWORD PTR [rsp+0x2c],ebp
   14000f317:	test   edx,edx
   14000f319:	je     0x14000f34d
   14000f31b:	mov    rcx,QWORD PTR [rsp+0x38]
   14000f320:	mov    r8d,r10d
   14000f323:	mov    rax,QWORD PTR [rsp+0x28]
   14000f328:	shr    r8,cl
   14000f32b:	mov    ecx,edx
   14000f32d:	shl    rax,cl
   14000f330:	or     r8,rax
   14000f333:	shl    r10d,cl
   14000f336:	cmp    edi,0x3
   14000f339:	jb     0x14000f352
   14000f33b:	mov    ecx,DWORD PTR [rsp+0x20]
   14000f33f:	lea    eax,[rdi-0x3]
   14000f342:	mov    eax,DWORD PTR [rsi+rax*4+0x4]
   14000f346:	shr    eax,cl
   14000f348:	or     r10d,eax
   14000f34b:	jmp    0x14000f352
   14000f34d:	mov    r8,QWORD PTR [rsp+0x28]
   14000f352:	xor    edx,edx
   14000f354:	mov    rax,r8
   14000f357:	div    r11
   14000f35a:	mov    ecx,edx
   14000f35c:	mov    r8,rax
   14000f35f:	cmp    rax,r12
   14000f362:	jbe    0x14000f37b
   14000f364:	movabs rax,0xffffffff00000001
   14000f36e:	add    rax,r8
   14000f371:	mov    r8,r12
   14000f374:	imul   rax,r11
   14000f378:	add    rcx,rax
   14000f37b:	cmp    rcx,r12
   14000f37e:	ja     0x14000f3c4
   14000f380:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f385:	mov    r11d,r10d
   14000f388:	mov    r10d,DWORD PTR [rsp+0x278]
   14000f390:	mov    edx,r10d
   14000f393:	imul   rdx,r8
   14000f397:	neg    r10
   14000f39a:	nop    WORD PTR [rax+rax*1+0x0]
   14000f3a0:	mov    rax,rcx
   14000f3a3:	shl    rax,0x20
   14000f3a7:	or     rax,r11
   14000f3aa:	cmp    rdx,rax
   14000f3ad:	jbe    0x14000f3bd
   14000f3af:	dec    r8
   14000f3b2:	add    rdx,r10
   14000f3b5:	add    rcx,rbx
   14000f3b8:	cmp    rcx,r12
   14000f3bb:	jbe    0x14000f3a0
   14000f3bd:	mov    ebx,DWORD PTR [rsp+0x260]
   14000f3c4:	test   r8,r8
   14000f3c7:	je     0x14000f48d
   14000f3cd:	mov    rcx,r14
   14000f3d0:	test   r13d,r13d
   14000f3d3:	je     0x14000f42d
   14000f3d5:	mov    r9,QWORD PTR [rsp+0x268]
   14000f3dd:	mov    edx,ebx
   14000f3df:	add    r9,0x4
   14000f3e3:	mov    ebx,r13d
   14000f3e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f3f0:	mov    eax,DWORD PTR [r9]
   14000f3f3:	imul   rax,r8
   14000f3f7:	add    rcx,rax
   14000f3fa:	mov    eax,edx
   14000f3fc:	mov    r10d,ecx
   14000f3ff:	shr    rcx,0x20
   14000f403:	lea    r11,[rsi+rax*4]
   14000f407:	mov    eax,DWORD PTR [rsi+rax*4+0x4]
   14000f40b:	cmp    eax,r10d
   14000f40e:	jae    0x14000f413
   14000f410:	inc    rcx
   14000f413:	sub    eax,r10d
   14000f416:	inc    edx
   14000f418:	add    r9,0x4
   14000f41c:	mov    DWORD PTR [r11+0x4],eax
   14000f420:	sub    rbx,0x1
   14000f424:	jne    0x14000f3f0
   14000f426:	mov    ebx,DWORD PTR [rsp+0x260]
   14000f42d:	mov    eax,ebp
   14000f42f:	cmp    rax,rcx
   14000f432:	jae    0x14000f482
   14000f434:	mov    r9d,r14d
   14000f437:	test   r13d,r13d
   14000f43a:	je     0x14000f47f
   14000f43c:	mov    r11,QWORD PTR [rsp+0x268]
   14000f444:	mov    r10d,ebx
   14000f447:	add    r11,0x4
   14000f44b:	mov    ebx,r13d
   14000f44e:	xchg   ax,ax
   14000f450:	mov    eax,r10d
   14000f453:	lea    r11,[r11+0x4]
   14000f457:	mov    edx,DWORD PTR [rsi+rax*4+0x4]
   14000f45b:	lea    rcx,[rsi+rax*4]
   14000f45f:	mov    eax,DWORD PTR [r11-0x4]
   14000f463:	inc    r10d
   14000f466:	add    rdx,rax
   14000f469:	mov    eax,r9d
   14000f46c:	add    rdx,rax
   14000f46f:	mov    r9,rdx
   14000f472:	mov    DWORD PTR [rcx+0x4],edx
   14000f475:	shr    r9,0x20
   14000f479:	sub    rbx,0x1
   14000f47d:	jne    0x14000f450
   14000f47f:	dec    r8
   14000f482:	mov    ebx,DWORD PTR [rsp+0x260]
   14000f489:	lea    r9d,[rdi-0x1]
   14000f48d:	mov    r11,QWORD PTR [rsp+0x30]
   14000f492:	dec    ebx
   14000f494:	mov    edx,DWORD PTR [rsp+0x270]
   14000f49b:	dec    edi
   14000f49d:	shl    r15,0x20
   14000f4a1:	mov    eax,r8d
   14000f4a4:	add    r15,rax
   14000f4a7:	mov    DWORD PTR [rsp+0x260],ebx
   14000f4ae:	test   ebx,ebx
   14000f4b0:	jns    0x14000f2f1
   14000f4b6:	inc    r9d
   14000f4b9:	mov    ecx,r9d
   14000f4bc:	cmp    r9d,DWORD PTR [rsi]
   14000f4bf:	jae    0x14000f4ce
   14000f4c1:	mov    eax,ecx
   14000f4c3:	inc    ecx
   14000f4c5:	mov    DWORD PTR [rsi+rax*4+0x4],r14d
   14000f4ca:	cmp    ecx,DWORD PTR [rsi]
   14000f4cc:	jb     0x14000f4c1
   14000f4ce:	mov    DWORD PTR [rsi],r9d
   14000f4d1:	test   r9d,r9d
   14000f4d4:	je     0x14000f4f1
   14000f4d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f4e0:	mov    edx,DWORD PTR [rsi]
   14000f4e2:	dec    edx
   14000f4e4:	cmp    DWORD PTR [rsi+rdx*4+0x4],r14d
   14000f4e9:	jne    0x14000f4f1
   14000f4eb:	mov    DWORD PTR [rsi],edx
   14000f4ed:	test   edx,edx
   14000f4ef:	jne    0x14000f4e0
   14000f4f1:	mov    rax,r15
   14000f4f4:	mov    r13,QWORD PTR [rsp+0x228]
   14000f4fc:	mov    r14,QWORD PTR [rsp+0x220]
   14000f504:	mov    r12,QWORD PTR [rsp+0x230]
   14000f50c:	mov    rbp,QWORD PTR [rsp+0x238]
   14000f514:	mov    rbx,QWORD PTR [rsp+0x240]
   14000f51c:	mov    r15,QWORD PTR [rsp+0x218]
   14000f524:	add    rsp,0x248
   14000f52b:	pop    rdi
   14000f52c:	pop    rsi
   14000f52d:	ret    
   14000f52e:	int3   
   14000f52f:	int3   
   14000f530:	rex push rbp
   14000f532:	push   rbx
   14000f533:	push   rsi
   14000f534:	push   rdi
   14000f535:	push   r12
   14000f537:	push   r13
   14000f539:	push   r14
   14000f53b:	push   r15
   14000f53d:	lea    rbp,[rsp-0x6d8]
   14000f545:	sub    rsp,0x7d8
   14000f54c:	mov    rax,QWORD PTR [rip+0xeac5]        # 0x14001e018
   14000f553:	xor    rax,rsp
   14000f556:	mov    QWORD PTR [rbp+0x6c0],rax
   14000f55d:	mov    QWORD PTR [rsp+0x38],rcx
   14000f562:	mov    r14,r9
   14000f565:	lea    rcx,[rsp+0x60]
   14000f56a:	mov    QWORD PTR [rsp+0x50],r9
   14000f56f:	mov    r15,r8
   14000f572:	mov    QWORD PTR [rsp+0x70],r8
   14000f577:	mov    esi,edx
   14000f579:	call   0x140011ce8
   14000f57e:	mov    eax,DWORD PTR [rsp+0x60]
   14000f582:	xor    r13d,r13d
   14000f585:	and    eax,0x1f
   14000f588:	cmp    al,0x1f
   14000f58a:	jne    0x14000f593
   14000f58c:	mov    BYTE PTR [rsp+0x68],r13b
   14000f591:	jmp    0x14000f5a2
   14000f593:	lea    rcx,[rsp+0x60]
   14000f598:	call   0x140011d54
   14000f59d:	mov    BYTE PTR [rsp+0x68],0x1
   14000f5a2:	mov    rbx,QWORD PTR [rsp+0x38]
   14000f5a7:	movabs rcx,0x8000000000000000
   14000f5b1:	mov    rax,rbx
   14000f5b4:	mov    QWORD PTR [r15+0x8],r14
   14000f5b8:	and    rax,rcx
   14000f5bb:	mov    edi,0x20
   14000f5c0:	neg    rax
   14000f5c3:	movabs r12,0xfffffffffffff
   14000f5cd:	movabs rax,0x7ff0000000000000
   14000f5d7:	sbb    ecx,ecx
   14000f5d9:	and    ecx,0xd
   14000f5dc:	add    ecx,edi
   14000f5de:	mov    DWORD PTR [r15],ecx
   14000f5e1:	test   rax,rbx
   14000f5e4:	jne    0x14000f612
   14000f5e6:	test   r12,rbx
   14000f5e9:	jne    0x14000f612
   14000f5eb:	mov    rdx,QWORD PTR [rbp+0x740]
   14000f5f2:	lea    r8,[rip+0xaf13]        # 0x14001a50c
   14000f5f9:	mov    rcx,r14
   14000f5fc:	mov    DWORD PTR [r15+0x4],r13d
   14000f600:	call   0x140007d64
   14000f605:	test   eax,eax
   14000f607:	je     0x1400107fe
   14000f60d:	jmp    0x140010832
   14000f612:	lea    rcx,[rsp+0x38]
   14000f617:	call   0x140009f68
   14000f61c:	test   eax,eax
   14000f61e:	je     0x14000f628
   14000f620:	mov    DWORD PTR [r15+0x4],0x1
   14000f628:	sub    eax,0x1
   14000f62b:	je     0x1400107e0
   14000f631:	sub    eax,0x1
   14000f634:	je     0x1400107c1
   14000f63a:	sub    eax,0x1
   14000f63d:	je     0x1400107a2
   14000f643:	cmp    eax,0x1
   14000f646:	je     0x140010783
   14000f64c:	movabs rax,0x7fffffffffffffff
   14000f656:	mov    r9d,0x7ff
   14000f65c:	and    rbx,rax
   14000f65f:	inc    esi
   14000f661:	mov    QWORD PTR [rsp+0x38],rbx
   14000f666:	movsd  xmm0,QWORD PTR [rsp+0x38]
   14000f66c:	movsd  QWORD PTR [rsp+0x58],xmm0
   14000f672:	mov    rdx,QWORD PTR [rsp+0x58]
   14000f677:	mov    r8,rdx
   14000f67a:	mov    DWORD PTR [rsp+0x4c],esi
   14000f67e:	shr    r8,0x34
   14000f682:	test   r9,r8
   14000f685:	sete   cl
   14000f688:	mov    al,cl
   14000f68a:	neg    al
   14000f68c:	movabs rax,0x10000000000000
   14000f696:	sbb    r14,r14
   14000f699:	and    rdx,r12
   14000f69c:	not    r14
   14000f69f:	and    r14,rax
   14000f6a2:	add    r14,rdx
   14000f6a5:	neg    cl
   14000f6a7:	sbb    eax,eax
   14000f6a9:	and    r8d,r9d
   14000f6ac:	neg    eax
   14000f6ae:	inc    eax
   14000f6b0:	lea    ebx,[r8-0x434]
   14000f6b7:	add    ebx,eax
   14000f6b9:	call   0x140011e70
   14000f6be:	call   0x140011da4
   14000f6c3:	cvttsd2si ecx,xmm0
   14000f6c7:	mov    DWORD PTR [rbp-0x7c],r14d
   14000f6cb:	mov    r10d,0x1
   14000f6d1:	lea    eax,[rcx-0x7fffffff]
   14000f6d7:	and    eax,0xfffffffe
   14000f6da:	neg    eax
   14000f6dc:	sbb    r12d,r12d
   14000f6df:	shr    r14,0x20
   14000f6e3:	and    r12d,ecx
   14000f6e6:	mov    DWORD PTR [rbp-0x78],r14d
   14000f6ea:	mov    eax,r14d
   14000f6ed:	mov    DWORD PTR [rsp+0x30],r12d
   14000f6f2:	neg    eax
   14000f6f4:	sbb    edx,edx
   14000f6f6:	neg    edx
   14000f6f8:	add    edx,r10d
   14000f6fb:	mov    DWORD PTR [rbp-0x80],edx
   14000f6fe:	test   ebx,ebx
   14000f700:	js     0x14000f9af
   14000f706:	xor    eax,eax
   14000f708:	mov    DWORD PTR [rbp+0x328],0x100000
   14000f712:	mov    DWORD PTR [rbp+0x324],eax
   14000f718:	lea    esi,[rax+0x2]
   14000f71b:	mov    DWORD PTR [rbp+0x320],esi
   14000f721:	cmp    edx,esi
   14000f723:	jne    0x14000f88a
   14000f729:	mov    r8d,r13d
   14000f72c:	mov    ecx,r8d
   14000f72f:	mov    eax,DWORD PTR [rbp+rcx*4-0x7c]
   14000f733:	cmp    DWORD PTR [rbp+rcx*4+0x324],eax
   14000f73a:	jne    0x14000f88a
   14000f740:	add    r8d,r10d
   14000f743:	cmp    r8d,esi
   14000f746:	jne    0x14000f72c
   14000f748:	lea    r11d,[rbx+0x2]
   14000f74c:	mov    DWORD PTR [rsp+0x38],r13d
   14000f751:	mov    r9d,r11d
   14000f754:	mov    esi,edi
   14000f756:	and    r11d,0x1f
   14000f75a:	shr    r9d,0x5
   14000f75e:	sub    esi,r11d
   14000f761:	mov    rbx,r10
   14000f764:	mov    ecx,esi
   14000f766:	shl    rbx,cl
   14000f769:	sub    ebx,r10d
   14000f76c:	bsr    eax,r14d
   14000f770:	mov    r12d,ebx
   14000f773:	not    r12d
   14000f776:	je     0x14000f77c
   14000f778:	inc    eax
   14000f77a:	jmp    0x14000f77f
   14000f77c:	mov    eax,r13d
   14000f77f:	sub    edi,eax
   14000f781:	lea    eax,[r9+0x2]
   14000f785:	cmp    r11d,edi
   14000f788:	seta   r15b
   14000f78c:	cmp    eax,0x73
   14000f78f:	seta   r8b
   14000f793:	cmp    eax,0x73
   14000f796:	jne    0x14000f7a0
   14000f798:	mov    cl,r10b
   14000f79b:	test   r15b,r15b
   14000f79e:	jne    0x14000f7a3
   14000f7a0:	mov    cl,r13b
   14000f7a3:	or     r13d,0xffffffff
   14000f7a7:	test   r8b,r8b
   14000f7aa:	jne    0x14000f851
   14000f7b0:	test   cl,cl
   14000f7b2:	jne    0x14000f851
   14000f7b8:	mov    r14d,0x72
   14000f7be:	cmp    eax,r14d
   14000f7c1:	cmovb  r14d,eax
   14000f7c5:	cmp    r14d,r13d
   14000f7c8:	je     0x14000f826
   14000f7ca:	mov    r8d,r14d
   14000f7cd:	sub    r8d,r9d
   14000f7d0:	lea    edi,[r8+r9*1]
   14000f7d4:	cmp    edi,r9d
   14000f7d7:	jb     0x14000f820
   14000f7d9:	cmp    r8d,edx
   14000f7dc:	jae    0x14000f7e5
   14000f7de:	mov    r10d,DWORD PTR [rbp+r8*4-0x7c]
   14000f7e3:	jmp    0x14000f7e8
   14000f7e5:	xor    r10d,r10d
   14000f7e8:	lea    eax,[r8-0x1]
   14000f7ec:	cmp    eax,edx
   14000f7ee:	jae    0x14000f7f6
   14000f7f0:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   14000f7f4:	jmp    0x14000f7f8
   14000f7f6:	xor    edx,edx
   14000f7f8:	and    edx,r12d
   14000f7fb:	mov    ecx,esi
   14000f7fd:	shr    edx,cl
   14000f7ff:	add    r8d,r13d
   14000f802:	and    r10d,ebx
   14000f805:	mov    ecx,r11d
   14000f808:	shl    r10d,cl
   14000f80b:	or     edx,r10d
   14000f80e:	lea    eax,[r8+r9*1]
   14000f812:	mov    DWORD PTR [rbp+rdi*4-0x7c],edx
   14000f816:	cmp    eax,r13d
   14000f819:	je     0x14000f820
   14000f81b:	mov    edx,DWORD PTR [rbp-0x80]
   14000f81e:	jmp    0x14000f7d0
   14000f820:	mov    r10d,0x1
   14000f826:	xor    r13d,r13d
   14000f829:	mov    ecx,r13d
   14000f82c:	test   r9d,r9d
   14000f82f:	je     0x14000f840
   14000f831:	mov    eax,ecx
   14000f833:	add    ecx,r10d
   14000f836:	mov    DWORD PTR [rbp+rax*4-0x7c],r13d
   14000f83b:	cmp    ecx,r9d
   14000f83e:	jne    0x14000f831
   14000f840:	test   r15b,r15b
   14000f843:	lea    eax,[r14+0x1]
   14000f847:	cmovne r14d,eax
   14000f84b:	mov    DWORD PTR [rbp-0x80],r14d
   14000f84f:	jmp    0x14000f85b
   14000f851:	xor    r13d,r13d
   14000f854:	mov    r14d,r13d
   14000f857:	mov    DWORD PTR [rbp-0x80],r13d
   14000f85b:	mov    DWORD PTR [rbp+0x154],0x4
   14000f865:	mov    r12d,DWORD PTR [rsp+0x30]
   14000f86a:	mov    r15d,0x1
   14000f870:	mov    DWORD PTR [rbp+0x150],r15d
   14000f877:	mov    DWORD PTR [rbp+0x320],r15d
   14000f87e:	mov    DWORD PTR [rbp+0x328],r13d
   14000f885:	jmp    0x14000fbfe
   14000f88a:	and    DWORD PTR [rsp+0x38],0x0
   14000f88f:	lea    r11d,[rbx+0x1]
   14000f893:	mov    r9d,r11d
   14000f896:	lea    eax,[rdx-0x1]
   14000f899:	and    r11d,0x1f
   14000f89d:	shr    r9d,0x5
   14000f8a1:	mov    r15d,edi
   14000f8a4:	mov    rbx,r10
   14000f8a7:	sub    r15d,r11d
   14000f8aa:	mov    ecx,r15d
   14000f8ad:	shl    rbx,cl
   14000f8b0:	sub    ebx,r10d
   14000f8b3:	mov    ecx,eax
   14000f8b5:	bsr    eax,DWORD PTR [rbp+rax*4-0x7c]
   14000f8ba:	mov    r13d,ebx
   14000f8bd:	not    r13d
   14000f8c0:	je     0x14000f8c6
   14000f8c2:	inc    eax
   14000f8c4:	jmp    0x14000f8c8
   14000f8c6:	xor    eax,eax
   14000f8c8:	sub    edi,eax
   14000f8ca:	lea    eax,[rdx+r9*1]
   14000f8ce:	cmp    r11d,edi
   14000f8d1:	seta   r12b
   14000f8d5:	cmp    eax,0x73
   14000f8d8:	seta   r8b
   14000f8dc:	cmp    eax,0x73
   14000f8df:	jne    0x14000f8eb
   14000f8e1:	test   r12b,r12b
   14000f8e4:	je     0x14000f8eb
   14000f8e6:	mov    cl,r10b
   14000f8e9:	jmp    0x14000f8ed
   14000f8eb:	xor    cl,cl
   14000f8ed:	or     r10d,0xffffffff
   14000f8f1:	test   r8b,r8b
   14000f8f4:	jne    0x14000f99a
   14000f8fa:	test   cl,cl
   14000f8fc:	jne    0x14000f99a
   14000f902:	mov    r14d,0x72
   14000f908:	cmp    eax,r14d
   14000f90b:	cmovb  r14d,eax
   14000f90f:	cmp    r14d,r10d
   14000f912:	je     0x14000f970
   14000f914:	mov    r8d,r14d
   14000f917:	sub    r8d,r9d
   14000f91a:	lea    edi,[r8+r9*1]
   14000f91e:	cmp    edi,r9d
   14000f921:	jb     0x14000f970
   14000f923:	cmp    r8d,edx
   14000f926:	jae    0x14000f92f
   14000f928:	mov    r10d,DWORD PTR [rbp+r8*4-0x7c]
   14000f92d:	jmp    0x14000f932
   14000f92f:	xor    r10d,r10d
   14000f932:	lea    eax,[r8-0x1]
   14000f936:	cmp    eax,edx
   14000f938:	jae    0x14000f940
   14000f93a:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   14000f93e:	jmp    0x14000f942
   14000f940:	xor    edx,edx
   14000f942:	and    r10d,ebx
   14000f945:	mov    ecx,r11d
   14000f948:	shl    r10d,cl
   14000f94b:	and    edx,r13d
   14000f94e:	mov    ecx,r15d
   14000f951:	shr    edx,cl
   14000f953:	or     r10d,edx
   14000f956:	mov    DWORD PTR [rbp+rdi*4-0x7c],r10d
   14000f95b:	or     r10d,0xffffffff
   14000f95f:	add    r8d,r10d
   14000f962:	lea    eax,[r8+r9*1]
   14000f966:	cmp    eax,r10d
   14000f969:	je     0x14000f970
   14000f96b:	mov    edx,DWORD PTR [rbp-0x80]
   14000f96e:	jmp    0x14000f91a
   14000f970:	xor    r13d,r13d
   14000f973:	mov    ecx,r13d
   14000f976:	test   r9d,r9d
   14000f979:	je     0x14000f989
   14000f97b:	mov    eax,ecx
   14000f97d:	inc    ecx
   14000f97f:	mov    DWORD PTR [rbp+rax*4-0x7c],r13d
   14000f984:	cmp    ecx,r9d
   14000f987:	jne    0x14000f97b
   14000f989:	test   r12b,r12b
   14000f98c:	lea    eax,[r14+0x1]
   14000f990:	cmovne r14d,eax
   14000f994:	mov    DWORD PTR [rbp-0x80],r14d
   14000f998:	jmp    0x14000f9a4
   14000f99a:	xor    r13d,r13d
   14000f99d:	mov    r14d,r13d
   14000f9a0:	mov    DWORD PTR [rbp-0x80],r13d
   14000f9a4:	mov    DWORD PTR [rbp+0x154],esi
   14000f9aa:	jmp    0x14000f865
   14000f9af:	cmp    ebx,0xfffffc02
   14000f9b5:	je     0x14000fae7
   14000f9bb:	xor    eax,eax
   14000f9bd:	mov    DWORD PTR [rbp+0x328],0x100000
   14000f9c7:	mov    DWORD PTR [rbp+0x324],eax
   14000f9cd:	lea    esi,[rax+0x2]
   14000f9d0:	mov    DWORD PTR [rbp+0x320],esi
   14000f9d6:	cmp    edx,esi
   14000f9d8:	jne    0x14000fae7
   14000f9de:	mov    r8d,r13d
   14000f9e1:	mov    ecx,r8d
   14000f9e4:	mov    eax,DWORD PTR [rbp+rcx*4-0x7c]
   14000f9e8:	cmp    DWORD PTR [rbp+rcx*4+0x324],eax
   14000f9ef:	jne    0x14000fae7
   14000f9f5:	add    r8d,r10d
   14000f9f8:	cmp    r8d,esi
   14000f9fb:	jne    0x14000f9e1
   14000f9fd:	bsr    eax,r14d
   14000fa01:	mov    DWORD PTR [rsp+0x38],r13d
   14000fa06:	je     0x14000fa0c
   14000fa08:	inc    eax
   14000fa0a:	jmp    0x14000fa0f
   14000fa0c:	mov    eax,r13d
   14000fa0f:	sub    edi,eax
   14000fa11:	mov    ecx,esi
   14000fa13:	cmp    edi,esi
   14000fa15:	setb   r9b
   14000fa19:	or     r13d,0xffffffff
   14000fa1d:	cmp    ecx,edx
   14000fa1f:	jae    0x14000fa2a
   14000fa21:	mov    eax,ecx
   14000fa23:	mov    r8d,DWORD PTR [rbp+rax*4-0x7c]
   14000fa28:	jmp    0x14000fa2d
   14000fa2a:	xor    r8d,r8d
   14000fa2d:	lea    eax,[rcx-0x1]
   14000fa30:	cmp    eax,edx
   14000fa32:	jae    0x14000fa3a
   14000fa34:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   14000fa38:	jmp    0x14000fa3c
   14000fa3a:	xor    edx,edx
   14000fa3c:	mov    eax,r8d
   14000fa3f:	shr    edx,0x1e
   14000fa42:	shl    eax,0x2
   14000fa45:	xor    edx,eax
   14000fa47:	mov    eax,ecx
   14000fa49:	add    ecx,r13d
   14000fa4c:	mov    DWORD PTR [rbp+rax*4-0x7c],edx
   14000fa50:	cmp    ecx,r13d
   14000fa53:	je     0x14000fa5a
   14000fa55:	mov    edx,DWORD PTR [rbp-0x80]
   14000fa58:	jmp    0x14000fa1d
   14000fa5a:	neg    r9b
   14000fa5d:	lea    rcx,[rbp+0x324]
   14000fa64:	sbb    r14d,r14d
   14000fa67:	xor    edx,edx
   14000fa69:	neg    r14d
   14000fa6c:	add    r14d,esi
   14000fa6f:	sub    esi,ebx
   14000fa71:	mov    edi,esi
   14000fa73:	mov    DWORD PTR [rbp-0x80],r14d
   14000fa77:	shr    edi,0x5
   14000fa7a:	mov    ebx,edi
   14000fa7c:	shl    rbx,0x2
   14000fa80:	mov    r8,rbx
   14000fa83:	call   0x140002cb0
   14000fa88:	and    esi,0x1f
   14000fa8b:	lea    r15d,[rdi+0x1]
   14000fa8f:	mov    cl,sil
   14000fa92:	mov    r8d,r15d
   14000fa95:	mov    eax,0x1
   14000fa9a:	shl    r8,0x2
   14000fa9e:	shl    eax,cl
   14000faa0:	mov    DWORD PTR [rbp+rbx*1+0x324],eax
   14000faa7:	xor    r13d,r13d
   14000faaa:	mov    DWORD PTR [rbp+0x150],r15d
   14000fab1:	mov    DWORD PTR [rbp+0x320],r15d
   14000fab8:	test   r8,r8
   14000fabb:	je     0x14000fbfe
   14000fac1:	mov    ebx,0x1cc
   14000fac6:	lea    rcx,[rbp+0x154]
   14000facd:	cmp    r8,rbx
   14000fad0:	ja     0x14000fbdd
   14000fad6:	lea    rdx,[rbp+0x324]
   14000fadd:	call   0x140013570
   14000fae2:	jmp    0x14000fbf7
   14000fae7:	lea    eax,[rdx-0x1]
   14000faea:	mov    DWORD PTR [rsp+0x38],r13d
   14000faef:	mov    ecx,eax
   14000faf1:	bsr    eax,DWORD PTR [rbp+rax*4-0x7c]
   14000faf6:	je     0x14000fafc
   14000faf8:	inc    eax
   14000fafa:	jmp    0x14000faff
   14000fafc:	mov    eax,r13d
   14000faff:	sub    edi,eax
   14000fb01:	cmp    edi,r10d
   14000fb04:	setb   r9b
   14000fb08:	cmp    edx,0x73
   14000fb0b:	seta   cl
   14000fb0e:	cmp    edx,0x73
   14000fb11:	jne    0x14000fb1b
   14000fb13:	mov    al,r10b
   14000fb16:	test   r9b,r9b
   14000fb19:	jne    0x14000fb1e
   14000fb1b:	mov    al,r13b
   14000fb1e:	or     r13d,0xffffffff
   14000fb22:	test   cl,cl
   14000fb24:	jne    0x14000fb8e
   14000fb26:	test   al,al
   14000fb28:	jne    0x14000fb8e
   14000fb2a:	mov    r14d,0x72
   14000fb30:	cmp    edx,r14d
   14000fb33:	cmovb  r14d,edx
   14000fb37:	cmp    r14d,r13d
   14000fb3a:	je     0x14000fb7a
   14000fb3c:	mov    ecx,r14d
   14000fb3f:	cmp    ecx,edx
   14000fb41:	jae    0x14000fb4c
   14000fb43:	mov    eax,ecx
   14000fb45:	mov    r8d,DWORD PTR [rbp+rax*4-0x7c]
   14000fb4a:	jmp    0x14000fb4f
   14000fb4c:	xor    r8d,r8d
   14000fb4f:	lea    eax,[rcx-0x1]
   14000fb52:	cmp    eax,edx
   14000fb54:	jae    0x14000fb5c
   14000fb56:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   14000fb5a:	jmp    0x14000fb5e
   14000fb5c:	xor    edx,edx
   14000fb5e:	shr    edx,0x1f
   14000fb61:	lea    eax,[r8+r8*1]
   14000fb65:	xor    edx,eax
   14000fb67:	mov    eax,ecx
   14000fb69:	add    ecx,r13d
   14000fb6c:	mov    DWORD PTR [rbp+rax*4-0x7c],edx
   14000fb70:	cmp    ecx,r13d
   14000fb73:	je     0x14000fb7a
   14000fb75:	mov    edx,DWORD PTR [rbp-0x80]
   14000fb78:	jmp    0x14000fb3f
   14000fb7a:	xor    r13d,r13d
   14000fb7d:	lea    eax,[r14+0x1]
   14000fb81:	test   r9b,r9b
   14000fb84:	cmovne r14d,eax
   14000fb88:	mov    DWORD PTR [rbp-0x80],r14d
   14000fb8c:	jmp    0x14000fb98
   14000fb8e:	xor    r13d,r13d
   14000fb91:	mov    r14d,r13d
   14000fb94:	mov    DWORD PTR [rbp-0x80],r13d
   14000fb98:	mov    edi,r10d
   14000fb9b:	lea    rcx,[rbp+0x324]
   14000fba2:	sub    edi,ebx
   14000fba4:	xor    edx,edx
   14000fba6:	mov    esi,edi
   14000fba8:	shr    esi,0x5
   14000fbab:	mov    ebx,esi
   14000fbad:	shl    rbx,0x2
   14000fbb1:	mov    r8,rbx
   14000fbb4:	call   0x140002cb0
   14000fbb9:	and    edi,0x1f
   14000fbbc:	lea    r15d,[rsi+0x1]
   14000fbc0:	mov    cl,dil
   14000fbc3:	mov    r8d,r15d
   14000fbc6:	mov    eax,0x1
   14000fbcb:	shl    eax,cl
   14000fbcd:	mov    DWORD PTR [rbp+rbx*1+0x324],eax
   14000fbd4:	shl    r8,0x2
   14000fbd8:	jmp    0x14000faaa
   14000fbdd:	mov    r8,rbx
   14000fbe0:	xor    edx,edx
   14000fbe2:	call   0x140002cb0
   14000fbe7:	call   0x140008500
   14000fbec:	mov    DWORD PTR [rax],0x22
   14000fbf2:	call   0x1400083e0
   14000fbf7:	mov    r15d,DWORD PTR [rbp+0x150]
   14000fbfe:	mov    eax,0xcccccccd
   14000fc03:	test   r12d,r12d
   14000fc06:	js     0x1400100ca
   14000fc0c:	mul    r12d
   14000fc0f:	mov    eax,edx
   14000fc11:	lea    rdx,[rip+0xffffffffffff03e8]        # 0x140000000
   14000fc18:	shr    eax,0x3
   14000fc1b:	mov    DWORD PTR [rsp+0x48],eax
   14000fc1f:	mov    r12d,eax
   14000fc22:	mov    DWORD PTR [rsp+0x40],eax
   14000fc26:	test   eax,eax
   14000fc28:	je     0x140010001
   14000fc2e:	mov    eax,0x26
   14000fc33:	mov    r13d,r12d
   14000fc36:	cmp    r12d,eax
   14000fc39:	cmova  r13d,eax
   14000fc3d:	mov    DWORD PTR [rsp+0x44],r13d
   14000fc42:	lea    eax,[r13-0x1]
   14000fc46:	movzx  ecx,BYTE PTR [rdx+rax*4+0x1a452]
   14000fc4e:	movzx  esi,BYTE PTR [rdx+rax*4+0x1a453]
   14000fc56:	mov    ebx,ecx
   14000fc58:	mov    edi,eax
   14000fc5a:	xor    edx,edx
   14000fc5c:	shl    rbx,0x2
   14000fc60:	mov    r8,rbx
   14000fc63:	lea    eax,[rsi+rcx*1]
   14000fc66:	lea    rcx,[rbp+0x324]
   14000fc6d:	mov    DWORD PTR [rbp+0x320],eax
   14000fc73:	call   0x140002cb0
   14000fc78:	lea    rcx,[rip+0xffffffffffff0381]        # 0x140000000
   14000fc7f:	shl    rsi,0x2
   14000fc83:	movzx  eax,WORD PTR [rcx+rdi*4+0x1a450]
   14000fc8b:	lea    rdx,[rcx+0x19b40]
   14000fc92:	lea    rcx,[rbp+0x324]
   14000fc99:	mov    r8,rsi
   14000fc9c:	add    rcx,rbx
   14000fc9f:	lea    rdx,[rdx+rax*4]
   14000fca3:	call   0x140013570
   14000fca8:	mov    r11d,DWORD PTR [rbp+0x320]
   14000fcaf:	cmp    r11d,0x1
   14000fcb3:	ja     0x14000fd5b
   14000fcb9:	mov    eax,DWORD PTR [rbp+0x324]
   14000fcbf:	test   eax,eax
   14000fcc1:	jne    0x14000fcd2
   14000fcc3:	xor    r15d,r15d
   14000fcc6:	mov    DWORD PTR [rbp+0x150],r15d
   14000fccd:	jmp    0x14000ffdb
   14000fcd2:	cmp    eax,0x1
   14000fcd5:	je     0x14000ffdb
   14000fcdb:	test   r15d,r15d
   14000fcde:	je     0x14000ffdb
   14000fce4:	xor    r8d,r8d
   14000fce7:	mov    r10,rax
   14000fcea:	xor    r9d,r9d
   14000fced:	mov    ecx,DWORD PTR [rbp+r9*4+0x154]
   14000fcf5:	mov    eax,r8d
   14000fcf8:	imul   rcx,r10
   14000fcfc:	add    rcx,rax
   14000fcff:	mov    r8,rcx
   14000fd02:	mov    DWORD PTR [rbp+r9*4+0x154],ecx
   14000fd0a:	shr    r8,0x20
   14000fd0e:	inc    r9d
   14000fd11:	cmp    r9d,r15d
   14000fd14:	jne    0x14000fced
   14000fd16:	test   r8d,r8d
   14000fd19:	je     0x14000fd4f
   14000fd1b:	cmp    DWORD PTR [rbp+0x150],0x73
   14000fd22:	jae    0x14000fd3e
   14000fd24:	mov    eax,DWORD PTR [rbp+0x150]
   14000fd2a:	mov    DWORD PTR [rbp+rax*4+0x154],r8d
   14000fd32:	mov    r15d,DWORD PTR [rbp+0x150]
   14000fd39:	inc    r15d
   14000fd3c:	jmp    0x14000fcc6
   14000fd3e:	xor    r15d,r15d
   14000fd41:	mov    DWORD PTR [rbp+0x150],r15d
   14000fd48:	xor    al,al
   14000fd4a:	jmp    0x14000ffdd
   14000fd4f:	mov    r15d,DWORD PTR [rbp+0x150]
   14000fd56:	jmp    0x14000ffdb
   14000fd5b:	cmp    r15d,0x1
   14000fd5f:	ja     0x14000fe12
   14000fd65:	mov    ebx,DWORD PTR [rbp+0x154]
   14000fd6b:	mov    r8,r11
   14000fd6e:	shl    r8,0x2
   14000fd72:	mov    r15d,r11d
   14000fd75:	mov    DWORD PTR [rbp+0x150],r11d
   14000fd7c:	test   r8,r8
   14000fd7f:	je     0x14000fdc1
   14000fd81:	mov    eax,0x1cc
   14000fd86:	lea    rcx,[rbp+0x154]
   14000fd8d:	cmp    r8,rax
   14000fd90:	ja     0x14000fda0
   14000fd92:	lea    rdx,[rbp+0x324]
   14000fd99:	call   0x140013570
   14000fd9e:	jmp    0x14000fdba
   14000fda0:	mov    r8,rax
   14000fda3:	xor    edx,edx
   14000fda5:	call   0x140002cb0
   14000fdaa:	call   0x140008500
   14000fdaf:	mov    DWORD PTR [rax],0x22
   14000fdb5:	call   0x1400083e0
   14000fdba:	mov    r15d,DWORD PTR [rbp+0x150]
   14000fdc1:	test   ebx,ebx
   14000fdc3:	je     0x14000fcc3
   14000fdc9:	cmp    ebx,0x1
   14000fdcc:	je     0x14000ffdb
   14000fdd2:	test   r15d,r15d
   14000fdd5:	je     0x14000ffdb
   14000fddb:	xor    r8d,r8d
   14000fdde:	mov    r10,rbx
   14000fde1:	xor    r9d,r9d
   14000fde4:	mov    ecx,DWORD PTR [rbp+r9*4+0x154]
   14000fdec:	mov    eax,r8d
   14000fdef:	imul   rcx,r10
   14000fdf3:	add    rcx,rax
   14000fdf6:	mov    r8,rcx
   14000fdf9:	mov    DWORD PTR [rbp+r9*4+0x154],ecx
   14000fe01:	shr    r8,0x20
   14000fe05:	inc    r9d
   14000fe08:	cmp    r9d,r15d
   14000fe0b:	jne    0x14000fde4
   14000fe0d:	jmp    0x14000fd16
   14000fe12:	cmp    r11d,r15d
   14000fe15:	lea    rcx,[rbp+0x154]
   14000fe1c:	mov    r12d,r15d
   14000fe1f:	lea    r13,[rbp+0x324]
   14000fe26:	setb   al
   14000fe29:	lea    rdx,[rbp+0x154]
   14000fe30:	test   al,al
   14000fe32:	cmove  r13,rcx
   14000fe36:	cmovne r12d,r11d
   14000fe3a:	cmovne r11d,r15d
   14000fe3e:	lea    rcx,[rbp+0x324]
   14000fe45:	cmove  rdx,rcx
   14000fe49:	xor    r15d,r15d
   14000fe4c:	xor    r10d,r10d
   14000fe4f:	mov    QWORD PTR [rsp+0x38],rdx
   14000fe54:	mov    DWORD PTR [rbp+0x4f0],r15d
   14000fe5b:	test   r12d,r12d
   14000fe5e:	je     0x14000ff7e
   14000fe64:	mov    esi,DWORD PTR [r13+r10*4+0x0]
   14000fe69:	mov    eax,r10d
   14000fe6c:	test   esi,esi
   14000fe6e:	jne    0x14000fe91
   14000fe70:	cmp    r10d,r15d
   14000fe73:	jne    0x14000ff72
   14000fe79:	and    DWORD PTR [rbp+r10*4+0x4f4],esi
   14000fe81:	lea    r15d,[r10+0x1]
   14000fe85:	mov    DWORD PTR [rbp+0x4f0],r15d
   14000fe8c:	jmp    0x14000ff72
   14000fe91:	xor    ebx,ebx
   14000fe93:	mov    r9d,r10d
   14000fe96:	test   r11d,r11d
   14000fe99:	je     0x14000ff63
   14000fe9f:	mov    edi,r10d
   14000fea2:	neg    edi
   14000fea4:	cmp    r9d,0x73
   14000fea8:	je     0x14000ff11
   14000feaa:	cmp    r9d,r15d
   14000fead:	jne    0x14000feca
   14000feaf:	mov    eax,r9d
   14000feb2:	lea    ecx,[r10+0x1]
   14000feb6:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   14000febe:	lea    eax,[rdi+r9*1]
   14000fec2:	add    ecx,eax
   14000fec4:	mov    DWORD PTR [rbp+0x4f0],ecx
   14000feca:	lea    eax,[rdi+r9*1]
   14000fece:	mov    r8d,r9d
   14000fed1:	mov    edx,DWORD PTR [rdx+rax*4]
   14000fed4:	inc    r9d
   14000fed7:	mov    eax,ebx
   14000fed9:	imul   rdx,rsi
   14000fedd:	add    rdx,rax
   14000fee0:	mov    eax,DWORD PTR [rbp+r8*4+0x4f4]
   14000fee8:	add    rdx,rax
   14000feeb:	lea    eax,[rdi+r9*1]
   14000feef:	mov    rbx,rdx
   14000fef2:	mov    DWORD PTR [rbp+r8*4+0x4f4],edx
   14000fefa:	mov    r15d,DWORD PTR [rbp+0x4f0]
   14000ff01:	shr    rbx,0x20
   14000ff05:	cmp    eax,r11d
   14000ff08:	je     0x14000ff11
   14000ff0a:	mov    rdx,QWORD PTR [rsp+0x38]
   14000ff0f:	jmp    0x14000fea4
   14000ff11:	test   ebx,ebx
   14000ff13:	je     0x14000ff63
   14000ff15:	cmp    r9d,0x73
   14000ff19:	je     0x14001009d
   14000ff1f:	cmp    r9d,r15d
   14000ff22:	jne    0x14000ff39
   14000ff24:	mov    eax,r9d
   14000ff27:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   14000ff2f:	lea    eax,[r9+0x1]
   14000ff33:	mov    DWORD PTR [rbp+0x4f0],eax
   14000ff39:	mov    ecx,r9d
   14000ff3c:	inc    r9d
   14000ff3f:	mov    edx,ebx
   14000ff41:	mov    eax,DWORD PTR [rbp+rcx*4+0x4f4]
   14000ff48:	add    rdx,rax
   14000ff4b:	mov    DWORD PTR [rbp+rcx*4+0x4f4],edx
   14000ff52:	mov    r15d,DWORD PTR [rbp+0x4f0]
   14000ff59:	shr    rdx,0x20
   14000ff5d:	mov    ebx,edx
   14000ff5f:	test   edx,edx
   14000ff61:	jne    0x14000ff15
   14000ff63:	cmp    r9d,0x73
   14000ff67:	je     0x14001009d
   14000ff6d:	mov    rdx,QWORD PTR [rsp+0x38]
   14000ff72:	inc    r10d
   14000ff75:	cmp    r10d,r12d
   14000ff78:	jne    0x14000fe64
   14000ff7e:	mov    r8d,r15d
   14000ff81:	shl    r8,0x2
   14000ff85:	mov    DWORD PTR [rbp+0x150],r15d
   14000ff8c:	test   r8,r8
   14000ff8f:	je     0x14000ffd1
   14000ff91:	mov    eax,0x1cc
   14000ff96:	lea    rcx,[rbp+0x154]
   14000ff9d:	cmp    r8,rax
   14000ffa0:	ja     0x14000ffb0
   14000ffa2:	lea    rdx,[rbp+0x4f4]
   14000ffa9:	call   0x140013570
   14000ffae:	jmp    0x14000ffca
   14000ffb0:	mov    r8,rax
   14000ffb3:	xor    edx,edx
   14000ffb5:	call   0x140002cb0
   14000ffba:	call   0x140008500
   14000ffbf:	mov    DWORD PTR [rax],0x22
   14000ffc5:	call   0x1400083e0
   14000ffca:	mov    r15d,DWORD PTR [rbp+0x150]
   14000ffd1:	mov    r12d,DWORD PTR [rsp+0x40]
   14000ffd6:	mov    r13d,DWORD PTR [rsp+0x44]
   14000ffdb:	mov    al,0x1
   14000ffdd:	test   al,al
   14000ffdf:	je     0x14001009d
   14000ffe5:	sub    r12d,r13d
   14000ffe8:	lea    rdx,[rip+0xffffffffffff0011]        # 0x140000000
   14000ffef:	mov    DWORD PTR [rsp+0x40],r12d
   14000fff4:	jne    0x14000fc2e
   14000fffa:	mov    eax,DWORD PTR [rsp+0x48]
   14000fffe:	xor    r13d,r13d
   140010001:	mov    edi,DWORD PTR [rsp+0x30]
   140010005:	lea    eax,[rax+rax*4]
   140010008:	add    eax,eax
   14001000a:	mov    ecx,edi
   14001000c:	sub    ecx,eax
   14001000e:	je     0x140010533
   140010014:	lea    eax,[rcx-0x1]
   140010017:	mov    eax,DWORD PTR [rdx+rax*4+0x1a4e8]
   14001001e:	test   eax,eax
   140010020:	je     0x1400100af
   140010026:	cmp    eax,0x1
   140010029:	je     0x140010533
   14001002f:	test   r15d,r15d
   140010032:	je     0x140010533
   140010038:	mov    r8d,r13d
   14001003b:	mov    r9d,r13d
   14001003e:	mov    r10d,eax
   140010041:	mov    edx,r9d
   140010044:	inc    r9d
   140010047:	mov    eax,r8d
   14001004a:	mov    ecx,DWORD PTR [rbp+rdx*4+0x154]
   140010051:	imul   rcx,r10
   140010055:	add    rcx,rax
   140010058:	mov    r8,rcx
   14001005b:	mov    DWORD PTR [rbp+rdx*4+0x154],ecx
   140010062:	shr    r8,0x20
   140010066:	cmp    r9d,r15d
   140010069:	jne    0x140010041
   14001006b:	test   r8d,r8d
   14001006e:	je     0x1400100be
   140010070:	cmp    DWORD PTR [rbp+0x150],0x73
   140010077:	jae    0x1400100af
   140010079:	mov    eax,DWORD PTR [rbp+0x150]
   14001007f:	mov    DWORD PTR [rbp+rax*4+0x154],r8d
   140010087:	mov    r15d,DWORD PTR [rbp+0x150]
   14001008e:	inc    r15d
   140010091:	mov    DWORD PTR [rbp+0x150],r15d
   140010098:	jmp    0x140010533
   14001009d:	xor    r13d,r13d
   1400100a0:	mov    r15d,r13d
   1400100a3:	mov    DWORD PTR [rbp+0x150],r13d
   1400100aa:	jmp    0x14001052f
   1400100af:	mov    r15d,r13d
   1400100b2:	mov    DWORD PTR [rbp+0x150],r13d
   1400100b9:	jmp    0x140010533
   1400100be:	mov    r15d,DWORD PTR [rbp+0x150]
   1400100c5:	jmp    0x140010533
   1400100ca:	mov    ecx,r12d
   1400100cd:	neg    ecx
   1400100cf:	mul    ecx
   1400100d1:	mov    DWORD PTR [rsp+0x44],ecx
   1400100d5:	mov    eax,edx
   1400100d7:	lea    rdx,[rip+0xfffffffffffeff22]        # 0x140000000
   1400100de:	shr    eax,0x3
   1400100e1:	mov    DWORD PTR [rsp+0x38],eax
   1400100e5:	mov    r12d,eax
   1400100e8:	mov    DWORD PTR [rsp+0x40],eax
   1400100ec:	test   eax,eax
   1400100ee:	je     0x14001048b
   1400100f4:	mov    eax,0x26
   1400100f9:	mov    r13d,r12d
   1400100fc:	cmp    r12d,eax
   1400100ff:	cmova  r13d,eax
   140010103:	mov    DWORD PTR [rsp+0x48],r13d
   140010108:	lea    eax,[r13-0x1]
   14001010c:	movzx  ecx,BYTE PTR [rdx+rax*4+0x1a452]
   140010114:	movzx  esi,BYTE PTR [rdx+rax*4+0x1a453]
   14001011c:	mov    ebx,ecx
   14001011e:	mov    edi,eax
   140010120:	xor    edx,edx
   140010122:	shl    rbx,0x2
   140010126:	mov    r8,rbx
   140010129:	lea    eax,[rsi+rcx*1]
   14001012c:	lea    rcx,[rbp+0x324]
   140010133:	mov    DWORD PTR [rbp+0x320],eax
   140010139:	call   0x140002cb0
   14001013e:	lea    rcx,[rip+0xfffffffffffefebb]        # 0x140000000
   140010145:	shl    rsi,0x2
   140010149:	movzx  eax,WORD PTR [rcx+rdi*4+0x1a450]
   140010151:	lea    rdx,[rcx+0x19b40]
   140010158:	lea    rcx,[rbp+0x324]
   14001015f:	mov    r8,rsi
   140010162:	add    rcx,rbx
   140010165:	lea    rdx,[rdx+rax*4]
   140010169:	call   0x140013570
   14001016e:	mov    edi,DWORD PTR [rbp+0x320]
   140010174:	cmp    edi,0x1
   140010177:	ja     0x140010204
   14001017d:	mov    eax,DWORD PTR [rbp+0x324]
   140010183:	test   eax,eax
   140010185:	jne    0x140010193
   140010187:	xor    r14d,r14d
   14001018a:	mov    DWORD PTR [rbp-0x80],r14d
   14001018e:	jmp    0x140010461
   140010193:	cmp    eax,0x1
   140010196:	je     0x140010461
   14001019c:	test   r14d,r14d
   14001019f:	je     0x140010461
   1400101a5:	xor    r8d,r8d
   1400101a8:	mov    r10,rax
   1400101ab:	xor    r9d,r9d
   1400101ae:	mov    ecx,DWORD PTR [rbp+r9*4-0x7c]
   1400101b3:	mov    eax,r8d
   1400101b6:	imul   rcx,r10
   1400101ba:	add    rcx,rax
   1400101bd:	mov    r8,rcx
   1400101c0:	mov    DWORD PTR [rbp+r9*4-0x7c],ecx
   1400101c5:	shr    r8,0x20
   1400101c9:	inc    r9d
   1400101cc:	cmp    r9d,r14d
   1400101cf:	jne    0x1400101ae
   1400101d1:	test   r8d,r8d
   1400101d4:	je     0x1400101fb
   1400101d6:	cmp    DWORD PTR [rbp-0x80],0x73
   1400101da:	jae    0x1400101ed
   1400101dc:	mov    eax,DWORD PTR [rbp-0x80]
   1400101df:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   1400101e4:	mov    r14d,DWORD PTR [rbp-0x80]
   1400101e8:	inc    r14d
   1400101eb:	jmp    0x14001018a
   1400101ed:	xor    r14d,r14d
   1400101f0:	mov    DWORD PTR [rbp-0x80],r14d
   1400101f4:	xor    al,al
   1400101f6:	jmp    0x140010463
   1400101fb:	mov    r14d,DWORD PTR [rbp-0x80]
   1400101ff:	jmp    0x140010461
   140010204:	cmp    r14d,0x1
   140010208:	ja     0x1400102a8
   14001020e:	mov    ebx,DWORD PTR [rbp-0x7c]
   140010211:	mov    r8,rdi
   140010214:	shl    r8,0x2
   140010218:	mov    r14d,edi
   14001021b:	mov    DWORD PTR [rbp-0x80],edi
   14001021e:	test   r8,r8
   140010221:	je     0x14001025d
   140010223:	mov    eax,0x1cc
   140010228:	lea    rcx,[rbp-0x7c]
   14001022c:	cmp    r8,rax
   14001022f:	ja     0x14001023f
   140010231:	lea    rdx,[rbp+0x324]
   140010238:	call   0x140013570
   14001023d:	jmp    0x140010259
   14001023f:	mov    r8,rax
   140010242:	xor    edx,edx
   140010244:	call   0x140002cb0
   140010249:	call   0x140008500
   14001024e:	mov    DWORD PTR [rax],0x22
   140010254:	call   0x1400083e0
   140010259:	mov    r14d,DWORD PTR [rbp-0x80]
   14001025d:	test   ebx,ebx
   14001025f:	je     0x140010187
   140010265:	cmp    ebx,0x1
   140010268:	je     0x140010461
   14001026e:	test   r14d,r14d
   140010271:	je     0x140010461
   140010277:	xor    r8d,r8d
   14001027a:	mov    r10,rbx
   14001027d:	xor    r9d,r9d
   140010280:	mov    ecx,DWORD PTR [rbp+r9*4-0x7c]
   140010285:	mov    eax,r8d
   140010288:	imul   rcx,r10
   14001028c:	add    rcx,rax
   14001028f:	mov    r8,rcx
   140010292:	mov    DWORD PTR [rbp+r9*4-0x7c],ecx
   140010297:	shr    r8,0x20
   14001029b:	inc    r9d
   14001029e:	cmp    r9d,r14d
   1400102a1:	jne    0x140010280
   1400102a3:	jmp    0x1400101d1
   1400102a8:	cmp    edi,r14d
   1400102ab:	lea    rcx,[rbp-0x7c]
   1400102af:	mov    r12d,r14d
   1400102b2:	lea    r13,[rbp+0x324]
   1400102b9:	setb   al
   1400102bc:	lea    rdx,[rbp-0x7c]
   1400102c0:	test   al,al
   1400102c2:	cmove  r13,rcx
   1400102c6:	cmovne r12d,edi
   1400102ca:	cmovne edi,r14d
   1400102ce:	lea    rcx,[rbp+0x324]
   1400102d5:	cmove  rdx,rcx
   1400102d9:	xor    r14d,r14d
   1400102dc:	xor    r10d,r10d
   1400102df:	mov    QWORD PTR [rsp+0x58],rdx
   1400102e4:	mov    DWORD PTR [rbp+0x4f0],r14d
   1400102eb:	test   r12d,r12d
   1400102ee:	je     0x14001040d
   1400102f4:	mov    esi,DWORD PTR [r13+r10*4+0x0]
   1400102f9:	mov    eax,r10d
   1400102fc:	test   esi,esi
   1400102fe:	jne    0x140010321
   140010300:	cmp    r10d,r14d
   140010303:	jne    0x140010401
   140010309:	and    DWORD PTR [rbp+r10*4+0x4f4],esi
   140010311:	lea    r14d,[r10+0x1]
   140010315:	mov    DWORD PTR [rbp+0x4f0],r14d
   14001031c:	jmp    0x140010401
   140010321:	xor    ebx,ebx
   140010323:	mov    r9d,r10d
   140010326:	test   edi,edi
   140010328:	je     0x1400103f2
   14001032e:	mov    r11d,r10d
   140010331:	neg    r11d
   140010334:	cmp    r9d,0x73
   140010338:	je     0x1400103a0
   14001033a:	cmp    r9d,r14d
   14001033d:	jne    0x14001035a
   14001033f:	mov    eax,r9d
   140010342:	lea    ecx,[r9+0x1]
   140010346:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   14001034e:	lea    eax,[r10+r11*1]
   140010352:	add    ecx,eax
   140010354:	mov    DWORD PTR [rbp+0x4f0],ecx
   14001035a:	lea    eax,[r11+r9*1]
   14001035e:	mov    r8d,r9d
   140010361:	mov    edx,DWORD PTR [rdx+rax*4]
   140010364:	inc    r9d
   140010367:	imul   rdx,rsi
   14001036b:	mov    eax,DWORD PTR [rbp+r8*4+0x4f4]
   140010373:	add    rdx,rax
   140010376:	mov    eax,ebx
   140010378:	add    rdx,rax
   14001037b:	lea    eax,[r11+r9*1]
   14001037f:	mov    rbx,rdx
   140010382:	mov    DWORD PTR [rbp+r8*4+0x4f4],edx
   14001038a:	mov    r14d,DWORD PTR [rbp+0x4f0]
   140010391:	shr    rbx,0x20
   140010395:	cmp    eax,edi
   140010397:	je     0x1400103a0
   140010399:	mov    rdx,QWORD PTR [rsp+0x58]
   14001039e:	jmp    0x140010334
   1400103a0:	test   ebx,ebx
   1400103a2:	je     0x1400103f2
   1400103a4:	cmp    r9d,0x73
   1400103a8:	je     0x140010505
   1400103ae:	cmp    r9d,r14d
   1400103b1:	jne    0x1400103c8
   1400103b3:	mov    eax,r9d
   1400103b6:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   1400103be:	lea    eax,[r9+0x1]
   1400103c2:	mov    DWORD PTR [rbp+0x4f0],eax
   1400103c8:	mov    ecx,r9d
   1400103cb:	inc    r9d
   1400103ce:	mov    eax,ebx
   1400103d0:	mov    edx,DWORD PTR [rbp+rcx*4+0x4f4]
   1400103d7:	add    rdx,rax
   1400103da:	mov    DWORD PTR [rbp+rcx*4+0x4f4],edx
   1400103e1:	mov    r14d,DWORD PTR [rbp+0x4f0]
   1400103e8:	shr    rdx,0x20
   1400103ec:	mov    ebx,edx
   1400103ee:	test   edx,edx
   1400103f0:	jne    0x1400103a4
   1400103f2:	cmp    r9d,0x73
   1400103f6:	je     0x140010505
   1400103fc:	mov    rdx,QWORD PTR [rsp+0x58]
   140010401:	inc    r10d
   140010404:	cmp    r10d,r12d
   140010407:	jne    0x1400102f4
   14001040d:	mov    r8d,r14d
   140010410:	shl    r8,0x2
   140010414:	mov    DWORD PTR [rbp-0x80],r14d
   140010418:	test   r8,r8
   14001041b:	je     0x140010457
   14001041d:	mov    eax,0x1cc
   140010422:	lea    rcx,[rbp-0x7c]
   140010426:	cmp    r8,rax
   140010429:	ja     0x140010439
   14001042b:	lea    rdx,[rbp+0x4f4]
   140010432:	call   0x140013570
   140010437:	jmp    0x140010453
   140010439:	mov    r8,rax
   14001043c:	xor    edx,edx
   14001043e:	call   0x140002cb0
   140010443:	call   0x140008500
   140010448:	mov    DWORD PTR [rax],0x22
   14001044e:	call   0x1400083e0
   140010453:	mov    r14d,DWORD PTR [rbp-0x80]
   140010457:	mov    r12d,DWORD PTR [rsp+0x40]
   14001045c:	mov    r13d,DWORD PTR [rsp+0x48]
   140010461:	mov    al,0x1
   140010463:	test   al,al
   140010465:	je     0x140010505
   14001046b:	sub    r12d,r13d
   14001046e:	lea    rdx,[rip+0xfffffffffffefb8b]        # 0x140000000
   140010475:	mov    DWORD PTR [rsp+0x40],r12d
   14001047a:	jne    0x1400100f4
   140010480:	mov    ecx,DWORD PTR [rsp+0x44]
   140010484:	xor    r13d,r13d
   140010487:	mov    eax,DWORD PTR [rsp+0x38]
   14001048b:	lea    eax,[rax+rax*4]
   14001048e:	add    eax,eax
   140010490:	sub    ecx,eax
   140010492:	je     0x14001052f
   140010498:	lea    eax,[rcx-0x1]
   14001049b:	mov    eax,DWORD PTR [rdx+rax*4+0x1a4e8]
   1400104a2:	test   eax,eax
   1400104a4:	je     0x140010508
   1400104a6:	cmp    eax,0x1
   1400104a9:	je     0x14001052f
   1400104af:	test   r14d,r14d
   1400104b2:	je     0x14001052f
   1400104b4:	mov    r8d,r13d
   1400104b7:	mov    r9d,r13d
   1400104ba:	mov    r10d,eax
   1400104bd:	mov    edx,r9d
   1400104c0:	inc    r9d
   1400104c3:	mov    eax,r8d
   1400104c6:	mov    ecx,DWORD PTR [rbp+rdx*4-0x7c]
   1400104ca:	imul   rcx,r10
   1400104ce:	add    rcx,rax
   1400104d1:	mov    r8,rcx
   1400104d4:	mov    DWORD PTR [rbp+rdx*4-0x7c],ecx
   1400104d8:	shr    r8,0x20
   1400104dc:	cmp    r9d,r14d
   1400104df:	jne    0x1400104bd
   1400104e1:	test   r8d,r8d
   1400104e4:	je     0x14001052b
   1400104e6:	cmp    DWORD PTR [rbp-0x80],0x73
   1400104ea:	mov    edi,DWORD PTR [rsp+0x30]
   1400104ee:	jae    0x14001051d
   1400104f0:	mov    eax,DWORD PTR [rbp-0x80]
   1400104f3:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   1400104f8:	mov    r14d,DWORD PTR [rbp-0x80]
   1400104fc:	inc    r14d
   1400104ff:	mov    DWORD PTR [rbp-0x80],r14d
   140010503:	jmp    0x140010533
   140010505:	xor    r13d,r13d
   140010508:	mov    rsi,QWORD PTR [rsp+0x50]
   14001050d:	mov    edi,DWORD PTR [rsp+0x30]
   140010511:	mov    rbx,rsi
   140010514:	mov    DWORD PTR [rbp-0x80],r13d
   140010518:	jmp    0x1400105a4
   14001051d:	mov    rsi,QWORD PTR [rsp+0x50]
   140010522:	mov    rbx,rsi
   140010525:	mov    DWORD PTR [rbp-0x80],r13d
   140010529:	jmp    0x1400105a4
   14001052b:	mov    r14d,DWORD PTR [rbp-0x80]
   14001052f:	mov    edi,DWORD PTR [rsp+0x30]
   140010533:	mov    rsi,QWORD PTR [rsp+0x50]
   140010538:	mov    rbx,rsi
   14001053b:	test   r14d,r14d
   14001053e:	je     0x1400105a4
   140010540:	mov    r8d,r13d
   140010543:	mov    r9d,r13d
   140010546:	mov    edx,r9d
   140010549:	inc    r9d
   14001054c:	mov    eax,DWORD PTR [rbp+rdx*4-0x7c]
   140010550:	lea    rcx,[rax+rax*4]
   140010554:	mov    eax,r8d
   140010557:	lea    r8,[rax+rcx*2]
   14001055b:	mov    DWORD PTR [rbp+rdx*4-0x7c],r8d
   140010560:	shr    r8,0x20
   140010564:	cmp    r9d,r14d
   140010567:	jne    0x140010546
   140010569:	test   r8d,r8d
   14001056c:	je     0x1400105a4
   14001056e:	cmp    DWORD PTR [rbp-0x80],0x73
   140010572:	jae    0x140010581
   140010574:	mov    eax,DWORD PTR [rbp-0x80]
   140010577:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   14001057c:	inc    DWORD PTR [rbp-0x80]
   14001057f:	jmp    0x1400105a4
   140010581:	xor    r9d,r9d
   140010584:	mov    DWORD PTR [rbp+0x320],r13d
   14001058b:	lea    r8,[rbp+0x324]
   140010592:	mov    DWORD PTR [rbp-0x80],r13d
   140010596:	mov    edx,0x1cc
   14001059b:	lea    rcx,[rbp-0x7c]
   14001059f:	call   0x14001089c
   1400105a4:	lea    rdx,[rbp+0x150]
   1400105ab:	lea    rcx,[rbp-0x80]
   1400105af:	call   0x14000f060
   1400105b4:	cmp    eax,0xa
   1400105b7:	jne    0x14001064d
   1400105bd:	inc    edi
   1400105bf:	mov    BYTE PTR [rsi],0x31
   1400105c2:	lea    rbx,[rsi+0x1]
   1400105c6:	test   r15d,r15d
   1400105c9:	je     0x14001065d
   1400105cf:	mov    r8d,r13d
   1400105d2:	mov    r9d,r13d
   1400105d5:	mov    edx,r9d
   1400105d8:	inc    r9d
   1400105db:	mov    eax,DWORD PTR [rbp+rdx*4+0x154]
   1400105e2:	lea    rcx,[rax+rax*4]
   1400105e6:	mov    eax,r8d
   1400105e9:	lea    r8,[rax+rcx*2]
   1400105ed:	mov    DWORD PTR [rbp+rdx*4+0x154],r8d
   1400105f5:	shr    r8,0x20
   1400105f9:	cmp    r9d,r15d
   1400105fc:	jne    0x1400105d5
   1400105fe:	test   r8d,r8d
   140010601:	je     0x14001065d
   140010603:	cmp    DWORD PTR [rbp+0x150],0x73
   14001060a:	jae    0x140010622
   14001060c:	mov    eax,DWORD PTR [rbp+0x150]
   140010612:	mov    DWORD PTR [rbp+rax*4+0x154],r8d
   14001061a:	inc    DWORD PTR [rbp+0x150]
   140010620:	jmp    0x14001065d
   140010622:	xor    r9d,r9d
   140010625:	mov    DWORD PTR [rbp+0x320],r13d
   14001062c:	lea    r8,[rbp+0x324]
   140010633:	mov    DWORD PTR [rbp+0x150],r13d
   14001063a:	mov    edx,0x1cc
   14001063f:	lea    rcx,[rbp+0x154]
   140010646:	call   0x14001089c
   14001064b:	jmp    0x14001065d
   14001064d:	test   eax,eax
   14001064f:	jne    0x140010655
   140010651:	dec    edi
   140010653:	jmp    0x14001065d
   140010655:	add    al,0x30
   140010657:	lea    rbx,[rsi+0x1]
   14001065b:	mov    BYTE PTR [rsi],al
   14001065d:	mov    rax,QWORD PTR [rsp+0x70]
   140010662:	mov    ecx,DWORD PTR [rsp+0x4c]
   140010666:	mov    DWORD PTR [rax+0x4],edi
   140010669:	test   edi,edi
   14001066b:	js     0x140010677
   14001066d:	cmp    ecx,0x7fffffff
   140010673:	ja     0x140010677
   140010675:	add    ecx,edi
   140010677:	mov    rax,QWORD PTR [rbp+0x740]
   14001067e:	dec    rax
   140010681:	mov    edi,ecx
   140010683:	cmp    rax,rdi
   140010686:	cmovb  rdi,rax
   14001068a:	add    rdi,rsi
   14001068d:	cmp    rbx,rdi
   140010690:	je     0x14001077e
   140010696:	mov    r14d,0x9
   14001069c:	or     esi,0xffffffff
   14001069f:	mov    r10d,DWORD PTR [rbp-0x80]
   1400106a3:	test   r10d,r10d
   1400106a6:	je     0x14001077e
   1400106ac:	mov    r8d,r13d
   1400106af:	mov    r9d,r13d
   1400106b2:	mov    edx,r9d
   1400106b5:	inc    r9d
   1400106b8:	mov    eax,DWORD PTR [rbp+rdx*4-0x7c]
   1400106bc:	imul   rcx,rax,0x3b9aca00
   1400106c3:	mov    eax,r8d
   1400106c6:	add    rcx,rax
   1400106c9:	mov    r8,rcx
   1400106cc:	mov    DWORD PTR [rbp+rdx*4-0x7c],ecx
   1400106d0:	shr    r8,0x20
   1400106d4:	cmp    r9d,r10d
   1400106d7:	jne    0x1400106b2
   1400106d9:	test   r8d,r8d
   1400106dc:	je     0x140010714
   1400106de:	cmp    DWORD PTR [rbp-0x80],0x73
   1400106e2:	jae    0x1400106f1
   1400106e4:	mov    eax,DWORD PTR [rbp-0x80]
   1400106e7:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   1400106ec:	inc    DWORD PTR [rbp-0x80]
   1400106ef:	jmp    0x140010714
   1400106f1:	xor    r9d,r9d
   1400106f4:	mov    DWORD PTR [rbp+0x320],r13d
   1400106fb:	lea    r8,[rbp+0x324]
   140010702:	mov    DWORD PTR [rbp-0x80],r13d
   140010706:	mov    edx,0x1cc
   14001070b:	lea    rcx,[rbp-0x7c]
   14001070f:	call   0x14001089c
   140010714:	lea    rdx,[rbp+0x150]
   14001071b:	lea    rcx,[rbp-0x80]
   14001071f:	call   0x14000f060
   140010724:	mov    r10d,edi
   140010727:	mov    r8,rax
   14001072a:	sub    r10d,ebx
   14001072d:	mov    r9d,0x8
   140010733:	mov    eax,0xcccccccd
   140010738:	mul    r8d
   14001073b:	shr    edx,0x3
   14001073e:	mov    cl,dl
   140010740:	shl    cl,0x2
   140010743:	lea    eax,[rcx+rdx*1]
   140010746:	add    al,al
   140010748:	sub    r8b,al
   14001074b:	lea    ecx,[r8+0x30]
   14001074f:	mov    r8d,edx
   140010752:	cmp    r10d,r9d
   140010755:	jb     0x14001075d
   140010757:	mov    eax,r9d
   14001075a:	mov    BYTE PTR [rax+rbx*1],cl
   14001075d:	add    r9d,esi
   140010760:	cmp    r9d,esi
   140010763:	jne    0x140010733
   140010765:	mov    rax,rdi
   140010768:	sub    rax,rbx
   14001076b:	cmp    rax,r14
   14001076e:	cmovg  rax,r14
   140010772:	add    rbx,rax
   140010775:	cmp    rbx,rdi
   140010778:	jne    0x14001069f
   14001077e:	mov    BYTE PTR [rbx],r13b
   140010781:	jmp    0x1400107fe
   140010783:	mov    rdx,QWORD PTR [rbp+0x740]
   14001078a:	lea    r8,[rip+0x9d97]        # 0x14001a528
   140010791:	mov    rcx,r14
   140010794:	call   0x140007d64
   140010799:	test   eax,eax
   14001079b:	je     0x1400107fe
   14001079d:	jmp    0x140010847
   1400107a2:	mov    rdx,QWORD PTR [rbp+0x740]
   1400107a9:	lea    r8,[rip+0x9d70]        # 0x14001a520
   1400107b0:	mov    rcx,r14
   1400107b3:	call   0x140007d64
   1400107b8:	test   eax,eax
   1400107ba:	je     0x1400107fe
   1400107bc:	jmp    0x14001085c
   1400107c1:	mov    rdx,QWORD PTR [rbp+0x740]
   1400107c8:	lea    r8,[rip+0x9d49]        # 0x14001a518
   1400107cf:	mov    rcx,r14
   1400107d2:	call   0x140007d64
   1400107d7:	test   eax,eax
   1400107d9:	je     0x1400107fe
   1400107db:	jmp    0x140010871
   1400107e0:	mov    rdx,QWORD PTR [rbp+0x740]
   1400107e7:	lea    r8,[rip+0x9d22]        # 0x14001a510
   1400107ee:	mov    rcx,r14
   1400107f1:	call   0x140007d64
   1400107f6:	test   eax,eax
   1400107f8:	jne    0x140010886
   1400107fe:	cmp    BYTE PTR [rsp+0x68],r13b
   140010803:	je     0x14001080f
   140010805:	lea    rcx,[rsp+0x60]
   14001080a:	call   0x140011d08
   14001080f:	mov    rcx,QWORD PTR [rbp+0x6c0]
   140010816:	xor    rcx,rsp
   140010819:	call   0x140013230
   14001081e:	add    rsp,0x7d8
   140010825:	pop    r15
   140010827:	pop    r14
   140010829:	pop    r13
   14001082b:	pop    r12
   14001082d:	pop    rdi
   14001082e:	pop    rsi
   14001082f:	pop    rbx
   140010830:	pop    rbp
   140010831:	ret    
   140010832:	xor    r9d,r9d
   140010835:	mov    QWORD PTR [rsp+0x20],r13
   14001083a:	xor    r8d,r8d
   14001083d:	xor    edx,edx
   14001083f:	xor    ecx,ecx
   140010841:	call   0x140008400
   140010846:	int3   
   140010847:	xor    r9d,r9d
   14001084a:	mov    QWORD PTR [rsp+0x20],r13
   14001084f:	xor    r8d,r8d
   140010852:	xor    edx,edx
   140010854:	xor    ecx,ecx
   140010856:	call   0x140008400
   14001085b:	int3   
   14001085c:	xor    r9d,r9d
   14001085f:	mov    QWORD PTR [rsp+0x20],r13
   140010864:	xor    r8d,r8d
   140010867:	xor    edx,edx
   140010869:	xor    ecx,ecx
   14001086b:	call   0x140008400
   140010870:	int3   
   140010871:	xor    r9d,r9d
   140010874:	mov    QWORD PTR [rsp+0x20],r13
   140010879:	xor    r8d,r8d
   14001087c:	xor    edx,edx
   14001087e:	xor    ecx,ecx
   140010880:	call   0x140008400
   140010885:	int3   
   140010886:	xor    r9d,r9d
   140010889:	mov    QWORD PTR [rsp+0x20],r13
   14001088e:	xor    r8d,r8d
   140010891:	xor    edx,edx
   140010893:	xor    ecx,ecx
   140010895:	call   0x140008400
   14001089a:	int3   
   14001089b:	int3   
   14001089c:	mov    QWORD PTR [rsp+0x8],rbx
   1400108a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400108a6:	push   rdi
   1400108a7:	sub    rsp,0x20
   1400108ab:	mov    rbx,r9
   1400108ae:	mov    rsi,r8
   1400108b1:	mov    rdi,rdx
   1400108b4:	test   r9,r9
   1400108b7:	jne    0x1400108bd
   1400108b9:	xor    eax,eax
   1400108bb:	jmp    0x140010913
   1400108bd:	test   rcx,rcx
   1400108c0:	jne    0x1400108d7
   1400108c2:	call   0x140008500
   1400108c7:	mov    ebx,0x16
   1400108cc:	mov    DWORD PTR [rax],ebx
   1400108ce:	call   0x1400083e0
   1400108d3:	mov    eax,ebx
   1400108d5:	jmp    0x140010913
   1400108d7:	test   r8,r8
   1400108da:	je     0x1400108ee
   1400108dc:	cmp    rdx,rbx
   1400108df:	jb     0x1400108ee
   1400108e1:	mov    r8,rbx
   1400108e4:	mov    rdx,rsi
   1400108e7:	call   0x140013570
   1400108ec:	jmp    0x1400108b9
   1400108ee:	mov    r8,rdx
   1400108f1:	xor    edx,edx
   1400108f3:	call   0x140002cb0
   1400108f8:	test   rsi,rsi
   1400108fb:	je     0x1400108c2
   1400108fd:	cmp    rdi,rbx
   140010900:	jae    0x14001090e
   140010902:	call   0x140008500
   140010907:	mov    ebx,0x22
   14001090c:	jmp    0x1400108cc
   14001090e:	mov    eax,0x16
   140010913:	mov    rbx,QWORD PTR [rsp+0x30]
   140010918:	mov    rsi,QWORD PTR [rsp+0x38]
   14001091d:	add    rsp,0x20
   140010921:	pop    rdi
   140010922:	ret    
   140010923:	int3   
   140010924:	mov    rax,rsp
   140010927:	mov    QWORD PTR [rax+0x18],rbx
   14001092b:	mov    QWORD PTR [rax+0x20],rsi
   14001092f:	mov    QWORD PTR [rax+0x10],rdx
   140010933:	mov    BYTE PTR [rax+0x8],cl
   140010936:	push   rdi
   140010937:	sub    rsp,0x20
   14001093b:	mov    rcx,rdx
   14001093e:	call   0x14000abe4
   140010943:	mov    rcx,QWORD PTR [rsp+0x38]
   140010948:	movsxd r9,eax
   14001094b:	mov    edx,DWORD PTR [rcx+0x14]
   14001094e:	test   dl,0xc0
   140010951:	je     0x1400109ff
   140010957:	mov    rcx,QWORD PTR [rsp+0x38]
   14001095c:	xor    ebx,ebx
   14001095e:	mov    esi,ebx
   140010960:	mov    rax,QWORD PTR [rcx+0x8]
   140010964:	mov    edi,DWORD PTR [rcx]
   140010966:	inc    rax
   140010969:	sub    edi,DWORD PTR [rcx+0x8]
   14001096c:	mov    QWORD PTR [rcx],rax
   14001096f:	mov    rax,QWORD PTR [rsp+0x38]
   140010974:	mov    ecx,DWORD PTR [rax+0x20]
   140010977:	dec    ecx
   140010979:	mov    DWORD PTR [rax+0x10],ecx
   14001097c:	test   edi,edi
   14001097e:	jle    0x1400109a9
   140010980:	mov    rdx,QWORD PTR [rsp+0x38]
   140010985:	mov    r8d,edi
   140010988:	mov    ecx,r9d
   14001098b:	mov    rdx,QWORD PTR [rdx+0x8]
   14001098f:	call   0x14000e79c
   140010994:	mov    esi,eax
   140010996:	mov    rax,QWORD PTR [rsp+0x38]
   14001099b:	cmp    esi,edi
   14001099d:	mov    rcx,QWORD PTR [rax+0x8]
   1400109a1:	mov    al,BYTE PTR [rsp+0x30]
   1400109a5:	mov    BYTE PTR [rcx],al
   1400109a7:	jmp    0x140010a15
   1400109a9:	lea    eax,[r9+0x2]
   1400109ad:	cmp    eax,0x1
   1400109b0:	jbe    0x1400109d0
   1400109b2:	mov    rcx,r9
   1400109b5:	lea    rdx,[rip+0xe5c4]        # 0x14001ef80
   1400109bc:	and    ecx,0x3f
   1400109bf:	mov    rax,r9
   1400109c2:	sar    rax,0x6
   1400109c6:	shl    rcx,0x6
   1400109ca:	add    rcx,QWORD PTR [rdx+rax*8]
   1400109ce:	jmp    0x1400109d7
   1400109d0:	lea    rcx,[rip+0xd789]        # 0x14001e160
   1400109d7:	test   BYTE PTR [rcx+0x38],0x20
   1400109db:	je     0x140010996
   1400109dd:	xor    edx,edx
   1400109df:	mov    ecx,r9d
   1400109e2:	lea    r8d,[rdx+0x2]
   1400109e6:	call   0x140011c64
   1400109eb:	cmp    rax,0xffffffffffffffff
   1400109ef:	jne    0x140010996
   1400109f1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400109f6:	lock or DWORD PTR [rcx+0x14],0x10
   1400109fb:	mov    al,0x1
   1400109fd:	jmp    0x140010a18
   1400109ff:	mov    r8d,0x1
   140010a05:	lea    rdx,[rsp+0x30]
   140010a0a:	mov    ecx,r9d
   140010a0d:	call   0x14000e79c
   140010a12:	cmp    eax,0x1
   140010a15:	sete   al
   140010a18:	mov    rbx,QWORD PTR [rsp+0x40]
   140010a1d:	mov    rsi,QWORD PTR [rsp+0x48]
   140010a22:	add    rsp,0x20
   140010a26:	pop    rdi
   140010a27:	ret    
   140010a28:	mov    QWORD PTR [rsp+0x8],rbx
   140010a2d:	mov    QWORD PTR [rsp+0x10],rsi
   140010a32:	push   rdi
   140010a33:	sub    rsp,0x20
   140010a37:	mov    edi,ecx
   140010a39:	mov    rbx,rdx
   140010a3c:	mov    rcx,rdx
   140010a3f:	call   0x14000abe4
   140010a44:	mov    r8d,DWORD PTR [rbx+0x14]
   140010a48:	mov    esi,eax
   140010a4a:	test   r8b,0x6
   140010a4e:	jne    0x140010a68
   140010a50:	call   0x140008500
   140010a55:	mov    DWORD PTR [rax],0x9
   140010a5b:	lock or DWORD PTR [rbx+0x14],0x10
   140010a60:	or     eax,0xffffffff
   140010a63:	jmp    0x140010b00
   140010a68:	mov    eax,DWORD PTR [rbx+0x14]
   140010a6b:	shr    eax,0xc
   140010a6e:	mov    ecx,0x1
   140010a73:	test   cl,al
   140010a75:	je     0x140010a84
   140010a77:	call   0x140008500
   140010a7c:	mov    DWORD PTR [rax],0x22
   140010a82:	jmp    0x140010a5b
   140010a84:	mov    eax,DWORD PTR [rbx+0x14]
   140010a87:	test   cl,al
   140010a89:	je     0x140010aa5
   140010a8b:	and    DWORD PTR [rbx+0x10],0x0
   140010a8f:	mov    eax,DWORD PTR [rbx+0x14]
   140010a92:	shr    eax,0x3
   140010a95:	test   cl,al
   140010a97:	je     0x140010a5b
   140010a99:	mov    rax,QWORD PTR [rbx+0x8]
   140010a9d:	mov    QWORD PTR [rbx],rax
   140010aa0:	lock and DWORD PTR [rbx+0x14],0xfffffffe
   140010aa5:	lock or DWORD PTR [rbx+0x14],0x2
   140010aaa:	lock and DWORD PTR [rbx+0x14],0xfffffff7
   140010aaf:	and    DWORD PTR [rbx+0x10],0x0
   140010ab3:	mov    eax,DWORD PTR [rbx+0x14]
   140010ab6:	test   eax,0x4c0
   140010abb:	jne    0x140010ae9
   140010abd:	call   0x140003678
   140010ac2:	cmp    rbx,rax
   140010ac5:	je     0x140010ad6
   140010ac7:	mov    ecx,0x2
   140010acc:	call   0x140003678
   140010ad1:	cmp    rbx,rax
   140010ad4:	jne    0x140010ae1
   140010ad6:	mov    ecx,esi
   140010ad8:	call   0x140010b10
   140010add:	test   eax,eax
   140010adf:	jne    0x140010ae9
   140010ae1:	mov    rcx,rbx
   140010ae4:	call   0x14001241c
   140010ae9:	mov    rdx,rbx
   140010aec:	mov    cl,dil
   140010aef:	call   0x140010924
   140010af4:	test   al,al
   140010af6:	je     0x140010a5b
   140010afc:	movzx  eax,dil
   140010b00:	mov    rbx,QWORD PTR [rsp+0x30]
   140010b05:	mov    rsi,QWORD PTR [rsp+0x38]
   140010b0a:	add    rsp,0x20
   140010b0e:	pop    rdi
   140010b0f:	ret    
   140010b10:	sub    rsp,0x28
   140010b14:	cmp    ecx,0xfffffffe
   140010b17:	jne    0x140010b26
   140010b19:	call   0x140008500
   140010b1e:	mov    DWORD PTR [rax],0x9
   140010b24:	jmp    0x140010b68
   140010b26:	test   ecx,ecx
   140010b28:	js     0x140010b58
   140010b2a:	cmp    ecx,DWORD PTR [rip+0xe850]        # 0x14001f380
   140010b30:	jae    0x140010b58
   140010b32:	movsxd rcx,ecx
   140010b35:	lea    rdx,[rip+0xe444]        # 0x14001ef80
   140010b3c:	mov    rax,rcx
   140010b3f:	and    ecx,0x3f
   140010b42:	sar    rax,0x6
   140010b46:	shl    rcx,0x6
   140010b4a:	mov    rax,QWORD PTR [rdx+rax*8]
   140010b4e:	movzx  eax,BYTE PTR [rax+rcx*1+0x38]
   140010b53:	and    eax,0x40
   140010b56:	jmp    0x140010b6a
   140010b58:	call   0x140008500
   140010b5d:	mov    DWORD PTR [rax],0x9
   140010b63:	call   0x1400083e0
   140010b68:	xor    eax,eax
   140010b6a:	add    rsp,0x28
   140010b6e:	ret    
   140010b6f:	int3   
   140010b70:	mov    rax,rsp
   140010b73:	mov    QWORD PTR [rax+0x8],rbx
   140010b77:	mov    QWORD PTR [rax+0x10],rbp
   140010b7b:	mov    QWORD PTR [rax+0x18],rsi
   140010b7f:	mov    QWORD PTR [rax+0x20],rdi
   140010b83:	push   r14
   140010b85:	sub    rsp,0x50
   140010b89:	movsxd rbx,r9d
   140010b8c:	mov    rsi,r8
   140010b8f:	mov    ebp,edx
   140010b91:	mov    r14,rcx
   140010b94:	test   r9d,r9d
   140010b97:	jle    0x140010ba7
   140010b99:	mov    rdx,rbx
   140010b9c:	mov    rcx,r8
   140010b9f:	call   0x140009804
   140010ba4:	mov    rbx,rax
   140010ba7:	movsxd rax,DWORD PTR [rsp+0x88]
   140010baf:	mov    rdi,QWORD PTR [rsp+0x80]
   140010bb7:	test   eax,eax
   140010bb9:	jle    0x140010bc6
   140010bbb:	mov    rdx,rax
   140010bbe:	mov    rcx,rdi
   140010bc1:	call   0x140009804
   140010bc6:	test   ebx,ebx
   140010bc8:	je     0x140010bfb
   140010bca:	test   eax,eax
   140010bcc:	je     0x140010bfb
   140010bce:	and    QWORD PTR [rsp+0x40],0x0
   140010bd4:	mov    r9d,ebx
   140010bd7:	and    QWORD PTR [rsp+0x38],0x0
   140010bdd:	mov    r8,rsi
   140010be0:	and    QWORD PTR [rsp+0x30],0x0
   140010be6:	mov    edx,ebp
   140010be8:	mov    DWORD PTR [rsp+0x28],eax
   140010bec:	mov    rcx,r14
   140010bef:	mov    QWORD PTR [rsp+0x20],rdi
   140010bf4:	call   0x14000870c
   140010bf9:	jmp    0x140010c12
   140010bfb:	sub    ebx,eax
   140010bfd:	mov    eax,0x3
   140010c02:	lea    ecx,[rax-0x2]
   140010c05:	cmovs  eax,ecx
   140010c08:	test   ebx,ebx
   140010c0a:	mov    ecx,0x2
   140010c0f:	cmove  eax,ecx
   140010c12:	mov    rbx,QWORD PTR [rsp+0x60]
   140010c17:	mov    rbp,QWORD PTR [rsp+0x68]
   140010c1c:	mov    rsi,QWORD PTR [rsp+0x70]
   140010c21:	mov    rdi,QWORD PTR [rsp+0x78]
   140010c26:	add    rsp,0x50
   140010c2a:	pop    r14
   140010c2c:	ret    
   140010c2d:	int3   
   140010c2e:	int3   
   140010c2f:	int3   
   140010c30:	mov    r10,rcx
   140010c33:	test   r8,r8
   140010c36:	je     0x140010c74
   140010c38:	movzx  r9d,BYTE PTR [r10]
   140010c3c:	inc    r10
   140010c3f:	lea    eax,[r9-0x41]
   140010c43:	cmp    eax,0x19
   140010c46:	ja     0x140010c4c
   140010c48:	add    r9d,0x20
   140010c4c:	movzx  ecx,BYTE PTR [rdx]
   140010c4f:	inc    rdx
   140010c52:	lea    eax,[rcx-0x41]
   140010c55:	cmp    eax,0x19
   140010c58:	ja     0x140010c5d
   140010c5a:	add    ecx,0x20
   140010c5d:	sub    r8,0x1
   140010c61:	je     0x140010c6d
   140010c63:	test   r9d,r9d
   140010c66:	je     0x140010c6d
   140010c68:	cmp    r9d,ecx
   140010c6b:	je     0x140010c38
   140010c6d:	sub    r9d,ecx
   140010c70:	mov    eax,r9d
   140010c73:	ret    
   140010c74:	xor    eax,eax
   140010c76:	ret    
   140010c77:	int3   
   140010c78:	sub    rsp,0x28
   140010c7c:	mov    eax,DWORD PTR [rip+0xe0f6]        # 0x14001ed78
   140010c82:	test   eax,eax
   140010c84:	jne    0x140010cbc
   140010c86:	test   rcx,rcx
   140010c89:	jne    0x140010ca5
   140010c8b:	call   0x140008500
   140010c90:	mov    DWORD PTR [rax],0x16
   140010c96:	call   0x1400083e0
   140010c9b:	mov    eax,0x7fffffff
   140010ca0:	add    rsp,0x28
   140010ca4:	ret    
   140010ca5:	test   rdx,rdx
   140010ca8:	je     0x140010c8b
   140010caa:	cmp    r8,0x7fffffff
   140010cb1:	ja     0x140010c8b
   140010cb3:	add    rsp,0x28
   140010cb7:	jmp    0x140010c30
   140010cbc:	xor    r9d,r9d
   140010cbf:	add    rsp,0x28
   140010cc3:	jmp    0x140010cc8
   140010cc8:	mov    rax,rsp
   140010ccb:	mov    QWORD PTR [rax+0x8],rbx
   140010ccf:	mov    QWORD PTR [rax+0x10],rbp
   140010cd3:	mov    QWORD PTR [rax+0x18],rsi
   140010cd7:	push   rdi
   140010cd8:	sub    rsp,0x40
   140010cdc:	mov    rbp,r8
   140010cdf:	mov    rdi,rdx
   140010ce2:	mov    rsi,rcx
   140010ce5:	test   r8,r8
   140010ce8:	je     0x140010d8b
   140010cee:	mov    rdx,r9
   140010cf1:	lea    rcx,[rax-0x28]
   140010cf5:	call   0x140003ab0
   140010cfa:	mov    ebx,0x7fffffff
   140010cff:	test   rsi,rsi
   140010d02:	je     0x140010d0e
   140010d04:	test   rdi,rdi
   140010d07:	je     0x140010d0e
   140010d09:	cmp    rbp,rbx
   140010d0c:	jbe    0x140010d20
   140010d0e:	call   0x140008500
   140010d13:	mov    DWORD PTR [rax],0x16
   140010d19:	call   0x1400083e0
   140010d1e:	jmp    0x140010d74
   140010d20:	mov    rax,QWORD PTR [rsp+0x28]
   140010d25:	cmp    QWORD PTR [rax+0x138],0x0
   140010d2d:	jne    0x140010d41
   140010d2f:	mov    r8,rbp
   140010d32:	mov    rdx,rdi
   140010d35:	mov    rcx,rsi
   140010d38:	call   0x140010c30
   140010d3d:	mov    ebx,eax
   140010d3f:	jmp    0x140010d74
   140010d41:	sub    rsi,rdi
   140010d44:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140010d48:	lea    rdx,[rsp+0x28]
   140010d4d:	call   0x140009210
   140010d52:	movzx  ecx,BYTE PTR [rdi]
   140010d55:	lea    rdx,[rsp+0x28]
   140010d5a:	mov    ebx,eax
   140010d5c:	call   0x140009210
   140010d61:	inc    rdi
   140010d64:	sub    rbp,0x1
   140010d68:	je     0x140010d72
   140010d6a:	test   ebx,ebx
   140010d6c:	je     0x140010d72
   140010d6e:	cmp    ebx,eax
   140010d70:	je     0x140010d44
   140010d72:	sub    ebx,eax
   140010d74:	cmp    BYTE PTR [rsp+0x38],0x0
   140010d79:	je     0x140010d87
   140010d7b:	mov    rax,QWORD PTR [rsp+0x20]
   140010d80:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140010d87:	mov    eax,ebx
   140010d89:	jmp    0x140010d8d
   140010d8b:	xor    eax,eax
   140010d8d:	mov    rbx,QWORD PTR [rsp+0x50]
   140010d92:	mov    rbp,QWORD PTR [rsp+0x58]
   140010d97:	mov    rsi,QWORD PTR [rsp+0x60]
   140010d9c:	add    rsp,0x40
   140010da0:	pop    rdi
   140010da1:	ret    
   140010da2:	int3   
   140010da3:	int3   
   140010da4:	rex push rbp
   140010da6:	push   rbx
   140010da7:	push   rsi
   140010da8:	push   rdi
   140010da9:	push   r12
   140010dab:	push   r13
   140010dad:	push   r14
   140010daf:	push   r15
   140010db1:	sub    rsp,0x88
   140010db8:	lea    rbp,[rsp+0x50]
   140010dbd:	mov    rax,QWORD PTR [rip+0xd254]        # 0x14001e018
   140010dc4:	xor    rax,rbp
   140010dc7:	mov    QWORD PTR [rbp+0x28],rax
   140010dcb:	movsxd rbx,DWORD PTR [rbp+0xa0]
   140010dd2:	xor    r12d,r12d
   140010dd5:	mov    r13,QWORD PTR [rbp+0xa8]
   140010ddc:	mov    r15,r9
   140010ddf:	mov    DWORD PTR [rbp+0x0],r8d
   140010de3:	mov    rdi,rcx
   140010de6:	mov    QWORD PTR [rbp+0x8],rdx
   140010dea:	test   ebx,ebx
   140010dec:	jle    0x140010e17
   140010dee:	mov    rdx,rbx
   140010df1:	mov    rcx,r9
   140010df4:	call   0x140011cd0
   140010df9:	mov    rbx,rax
   140010dfc:	movsxd rsi,DWORD PTR [rbp+0xb0]
   140010e03:	test   esi,esi
   140010e05:	jle    0x140010e23
   140010e07:	mov    rdx,rsi
   140010e0a:	mov    rcx,r13
   140010e0d:	call   0x140011cd0
   140010e12:	mov    rsi,rax
   140010e15:	jmp    0x140010e28
   140010e17:	cmp    ebx,0xffffffff
   140010e1a:	jge    0x140010dfc
   140010e1c:	xor    eax,eax
   140010e1e:	jmp    0x140011119
   140010e23:	cmp    esi,0xffffffff
   140010e26:	jl     0x140010e1c
   140010e28:	mov    r14d,DWORD PTR [rbp+0xb8]
   140010e2f:	test   r14d,r14d
   140010e32:	jne    0x140010e3b
   140010e34:	mov    rax,QWORD PTR [rdi]
   140010e37:	mov    r14d,DWORD PTR [rax+0xc]
   140010e3b:	mov    edi,0x1
   140010e40:	test   ebx,ebx
   140010e42:	je     0x140010e4c
   140010e44:	test   esi,esi
   140010e46:	jne    0x140010ee7
   140010e4c:	cmp    ebx,esi
   140010e4e:	jne    0x140010e5a
   140010e50:	mov    eax,0x2
   140010e55:	jmp    0x140011119
   140010e5a:	cmp    esi,edi
   140010e5c:	jle    0x140010e65
   140010e5e:	mov    eax,edi
   140010e60:	jmp    0x140011119
   140010e65:	cmp    ebx,edi
   140010e67:	jle    0x140010e73
   140010e69:	mov    eax,0x3
   140010e6e:	jmp    0x140011119
   140010e73:	lea    rdx,[rbp+0x10]
   140010e77:	mov    ecx,r14d
   140010e7a:	call   QWORD PTR [rip+0x3360]        # 0x1400141e0
   140010e80:	test   eax,eax
   140010e82:	je     0x140010e1c
   140010e84:	test   ebx,ebx
   140010e86:	jle    0x140010eb3
   140010e88:	cmp    DWORD PTR [rbp+0x10],0x2
   140010e8c:	jb     0x140010e69
   140010e8e:	cmp    BYTE PTR [rbp+0x16],r12b
   140010e92:	lea    rax,[rbp+0x16]
   140010e96:	je     0x140010e69
   140010e98:	cmp    BYTE PTR [rax+0x1],r12b
   140010e9c:	je     0x140010e69
   140010e9e:	mov    cl,BYTE PTR [r15]
   140010ea1:	cmp    cl,BYTE PTR [rax]
   140010ea3:	jb     0x140010eaa
   140010ea5:	cmp    cl,BYTE PTR [rax+0x1]
   140010ea8:	jbe    0x140010e50
   140010eaa:	add    rax,0x2
   140010eae:	cmp    BYTE PTR [rax],r12b
   140010eb1:	jmp    0x140010e96
   140010eb3:	test   esi,esi
   140010eb5:	jle    0x140010ee7
   140010eb7:	cmp    DWORD PTR [rbp+0x10],0x2
   140010ebb:	jb     0x140010e5e
   140010ebd:	cmp    BYTE PTR [rbp+0x16],r12b
   140010ec1:	lea    rax,[rbp+0x16]
   140010ec5:	je     0x140010e5e
   140010ec7:	cmp    BYTE PTR [rax+0x1],r12b
   140010ecb:	je     0x140010e5e
   140010ecd:	mov    cl,BYTE PTR [r13+0x0]
   140010ed1:	cmp    cl,BYTE PTR [rax]
   140010ed3:	jb     0x140010ede
   140010ed5:	cmp    cl,BYTE PTR [rax+0x1]
   140010ed8:	jbe    0x140010e50
   140010ede:	add    rax,0x2
   140010ee2:	cmp    BYTE PTR [rax],r12b
   140010ee5:	jmp    0x140010ec5
   140010ee7:	mov    DWORD PTR [rsp+0x28],r12d
   140010eec:	mov    r9d,ebx
   140010eef:	mov    r8,r15
   140010ef2:	mov    QWORD PTR [rsp+0x20],r12
   140010ef7:	mov    edx,0x9
   140010efc:	mov    ecx,r14d
   140010eff:	call   QWORD PTR [rip+0x3243]        # 0x140014148
   140010f05:	movsxd r12,eax
   140010f08:	test   eax,eax
   140010f0a:	je     0x140010e1c
   140010f10:	mov    rdx,r12
   140010f13:	movabs r8,0xffffffffffffff0
   140010f1d:	add    rdx,rdx
   140010f20:	lea    rcx,[rdx+0x10]
   140010f24:	cmp    rdx,rcx
   140010f27:	sbb    rax,rax
   140010f2a:	test   rcx,rax
   140010f2d:	je     0x140010fa1
   140010f2f:	lea    rcx,[rdx+0x10]
   140010f33:	cmp    rdx,rcx
   140010f36:	sbb    rax,rax
   140010f39:	and    rax,rcx
   140010f3c:	cmp    rax,0x400
   140010f42:	lea    rax,[rdx+0x10]
   140010f46:	ja     0x140010f7f
   140010f48:	cmp    rdx,rax
   140010f4b:	sbb    rcx,rcx
   140010f4e:	and    rcx,rax
   140010f51:	lea    rax,[rcx+0xf]
   140010f55:	cmp    rax,rcx
   140010f58:	ja     0x140010f5d
   140010f5a:	mov    rax,r8
   140010f5d:	and    rax,0xfffffffffffffff0
   140010f61:	call   0x140013500
   140010f66:	sub    rsp,rax
   140010f69:	lea    rdi,[rsp+0x50]
   140010f6e:	test   rdi,rdi
   140010f71:	je     0x1400110ff
   140010f77:	mov    DWORD PTR [rdi],0xcccc
   140010f7d:	jmp    0x140010f9b
   140010f7f:	cmp    rdx,rax
   140010f82:	sbb    rcx,rcx
   140010f85:	and    rcx,rax
   140010f88:	call   0x140007d04
   140010f8d:	mov    rdi,rax
   140010f90:	test   rax,rax
   140010f93:	je     0x140010fa3
   140010f95:	mov    DWORD PTR [rax],0xdddd
   140010f9b:	add    rdi,0x10
   140010f9f:	jmp    0x140010fa3
   140010fa1:	xor    edi,edi
   140010fa3:	test   rdi,rdi
   140010fa6:	je     0x1400110ff
   140010fac:	mov    DWORD PTR [rsp+0x28],r12d
   140010fb1:	mov    r9d,ebx
   140010fb4:	mov    r8,r15
   140010fb7:	mov    QWORD PTR [rsp+0x20],rdi
   140010fbc:	mov    edx,0x1
   140010fc1:	mov    ecx,r14d
   140010fc4:	call   QWORD PTR [rip+0x317e]        # 0x140014148
   140010fca:	test   eax,eax
   140010fcc:	je     0x1400110ff
   140010fd2:	and    DWORD PTR [rsp+0x28],0x0
   140010fd7:	mov    r9d,esi
   140010fda:	and    QWORD PTR [rsp+0x20],0x0
   140010fe0:	mov    r8,r13
   140010fe3:	mov    edx,0x9
   140010fe8:	mov    ecx,r14d
   140010feb:	call   QWORD PTR [rip+0x3157]        # 0x140014148
   140010ff1:	movsxd r15,eax
   140010ff4:	test   eax,eax
   140010ff6:	je     0x1400110ff
   140010ffc:	mov    r8,r15
   140010fff:	add    r8,r8
   140011002:	lea    rdx,[r8+0x10]
   140011006:	cmp    r8,rdx
   140011009:	sbb    rcx,rcx
   14001100c:	test   rdx,rcx
   14001100f:	je     0x14001108a
   140011011:	lea    rcx,[r8+0x10]
   140011015:	cmp    r8,rcx
   140011018:	sbb    rax,rax
   14001101b:	and    rax,rcx
   14001101e:	cmp    rax,0x400
   140011024:	lea    rax,[r8+0x10]
   140011028:	ja     0x140011068
   14001102a:	cmp    r8,rax
   14001102d:	sbb    rcx,rcx
   140011030:	and    rcx,rax
   140011033:	lea    rax,[rcx+0xf]
   140011037:	cmp    rax,rcx
   14001103a:	ja     0x140011046
   14001103c:	movabs rax,0xffffffffffffff0
   140011046:	and    rax,0xfffffffffffffff0
   14001104a:	call   0x140013500
   14001104f:	sub    rsp,rax
   140011052:	lea    rbx,[rsp+0x50]
   140011057:	test   rbx,rbx
   14001105a:	je     0x1400110e5
   140011060:	mov    DWORD PTR [rbx],0xcccc
   140011066:	jmp    0x140011084
   140011068:	cmp    r8,rax
   14001106b:	sbb    rcx,rcx
   14001106e:	and    rcx,rax
   140011071:	call   0x140007d04
   140011076:	mov    rbx,rax
   140011079:	test   rax,rax
   14001107c:	je     0x14001108c
   14001107e:	mov    DWORD PTR [rax],0xdddd
   140011084:	add    rbx,0x10
   140011088:	jmp    0x14001108c
   14001108a:	xor    ebx,ebx
   14001108c:	test   rbx,rbx
   14001108f:	je     0x1400110e5
   140011091:	mov    DWORD PTR [rsp+0x28],r15d
   140011096:	mov    r9d,esi
   140011099:	mov    r8,r13
   14001109c:	mov    QWORD PTR [rsp+0x20],rbx
   1400110a1:	mov    edx,0x1
   1400110a6:	mov    ecx,r14d
   1400110a9:	call   QWORD PTR [rip+0x3099]        # 0x140014148
   1400110af:	test   eax,eax
   1400110b1:	je     0x1400110e5
   1400110b3:	and    QWORD PTR [rsp+0x40],0x0
   1400110b9:	mov    r9d,r12d
   1400110bc:	and    QWORD PTR [rsp+0x38],0x0
   1400110c2:	mov    r8,rdi
   1400110c5:	and    QWORD PTR [rsp+0x30],0x0
   1400110cb:	mov    edx,DWORD PTR [rbp+0x0]
   1400110ce:	mov    rcx,QWORD PTR [rbp+0x8]
   1400110d2:	mov    DWORD PTR [rsp+0x28],r15d
   1400110d7:	mov    QWORD PTR [rsp+0x20],rbx
   1400110dc:	call   0x14000870c
   1400110e1:	mov    esi,eax
   1400110e3:	jmp    0x1400110e7
   1400110e5:	xor    esi,esi
   1400110e7:	test   rbx,rbx
   1400110ea:	je     0x140011101
   1400110ec:	lea    rcx,[rbx-0x10]
   1400110f0:	cmp    DWORD PTR [rcx],0xdddd
   1400110f6:	jne    0x140011101
   1400110f8:	call   0x140007cc4
   1400110fd:	jmp    0x140011101
   1400110ff:	xor    esi,esi
   140011101:	test   rdi,rdi
   140011104:	je     0x140011117
   140011106:	lea    rcx,[rdi-0x10]
   14001110a:	cmp    DWORD PTR [rcx],0xdddd
   140011110:	jne    0x140011117
   140011112:	call   0x140007cc4
   140011117:	mov    eax,esi
   140011119:	mov    rcx,QWORD PTR [rbp+0x28]
   14001111d:	xor    rcx,rbp
   140011120:	call   0x140013230
   140011125:	lea    rsp,[rbp+0x38]
   140011129:	pop    r15
   14001112b:	pop    r14
   14001112d:	pop    r13
   14001112f:	pop    r12
   140011131:	pop    rdi
   140011132:	pop    rsi
   140011133:	pop    rbx
   140011134:	pop    rbp
   140011135:	ret    
   140011136:	int3   
   140011137:	int3   
   140011138:	mov    QWORD PTR [rsp+0x8],rbx
   14001113d:	mov    QWORD PTR [rsp+0x10],rsi
   140011142:	push   rdi
   140011143:	sub    rsp,0x60
   140011147:	mov    rsi,rdx
   14001114a:	mov    rbx,r9
   14001114d:	mov    rdx,rcx
   140011150:	mov    edi,r8d
   140011153:	lea    rcx,[rsp+0x40]
   140011158:	call   0x140003ab0
   14001115d:	mov    eax,DWORD PTR [rsp+0xa8]
   140011164:	lea    rcx,[rsp+0x48]
   140011169:	mov    DWORD PTR [rsp+0x38],eax
   14001116d:	mov    r9,rbx
   140011170:	mov    eax,DWORD PTR [rsp+0xa0]
   140011177:	mov    r8d,edi
   14001117a:	mov    DWORD PTR [rsp+0x30],eax
   14001117e:	mov    rdx,rsi
   140011181:	mov    rax,QWORD PTR [rsp+0x98]
   140011189:	mov    QWORD PTR [rsp+0x28],rax
   14001118e:	mov    eax,DWORD PTR [rsp+0x90]
   140011195:	mov    DWORD PTR [rsp+0x20],eax
   140011199:	call   0x140010da4
   14001119e:	cmp    BYTE PTR [rsp+0x58],0x0
   1400111a3:	je     0x1400111b1
   1400111a5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400111aa:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   1400111b1:	mov    rbx,QWORD PTR [rsp+0x70]
   1400111b6:	mov    rsi,QWORD PTR [rsp+0x78]
   1400111bb:	add    rsp,0x60
   1400111bf:	pop    rdi
   1400111c0:	ret    
   1400111c1:	int3   
   1400111c2:	int3   
   1400111c3:	int3   
   1400111c4:	int3   
   1400111c5:	int3   
   1400111c6:	int3   
   1400111c7:	int3   
   1400111c8:	int3   
   1400111c9:	int3   
   1400111ca:	int3   
   1400111cb:	int3   
   1400111cc:	int3   
   1400111cd:	int3   
   1400111ce:	int3   
   1400111cf:	int3   
   1400111d0:	cmp    rdx,rcx
   1400111d3:	jbe    0x14001129b
   1400111d9:	mov    QWORD PTR [rsp+0x20],rbp
   1400111de:	push   rdi
   1400111df:	push   r14
   1400111e1:	push   r15
   1400111e3:	sub    rsp,0x20
   1400111e7:	mov    QWORD PTR [rsp+0x40],rbx
   1400111ec:	mov    r14,r9
   1400111ef:	mov    QWORD PTR [rsp+0x48],rsi
   1400111f4:	mov    rbp,r8
   1400111f7:	mov    QWORD PTR [rsp+0x50],r12
   1400111fc:	mov    rdi,rdx
   1400111ff:	lea    r12,[rcx+r8*1]
   140011203:	mov    r15,rcx
   140011206:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011210:	mov    rbx,r15
   140011213:	mov    rsi,r12
   140011216:	cmp    r12,rdi
   140011219:	ja     0x140011240
   14001121b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011220:	mov    rcx,r14
   140011223:	call   QWORD PTR [rip+0x302f]        # 0x140014258
   140011229:	mov    rdx,rbx
   14001122c:	mov    rcx,rsi
   14001122f:	call   r14
   140011232:	test   eax,eax
   140011234:	cmovg  rbx,rsi
   140011238:	add    rsi,rbp
   14001123b:	cmp    rsi,rdi
   14001123e:	jbe    0x140011220
   140011240:	mov    r8,rbp
   140011243:	mov    rax,rdi
   140011246:	cmp    rbx,rdi
   140011249:	je     0x140011276
   14001124b:	test   rbp,rbp
   14001124e:	je     0x140011276
   140011250:	sub    rbx,rdi
   140011253:	nop    DWORD PTR [rax+0x0]
   140011257:	nop    WORD PTR [rax+rax*1+0x0]
   140011260:	movzx  ecx,BYTE PTR [rax]
   140011263:	movzx  edx,BYTE PTR [rbx+rax*1]
   140011267:	mov    BYTE PTR [rbx+rax*1],cl
   14001126a:	mov    BYTE PTR [rax],dl
   14001126c:	lea    rax,[rax+0x1]
   140011270:	sub    r8,0x1
   140011274:	jne    0x140011260
   140011276:	sub    rdi,rbp
   140011279:	cmp    rdi,r15
   14001127c:	ja     0x140011210
   14001127e:	mov    r12,QWORD PTR [rsp+0x50]
   140011283:	mov    rsi,QWORD PTR [rsp+0x48]
   140011288:	mov    rbx,QWORD PTR [rsp+0x40]
   14001128d:	mov    rbp,QWORD PTR [rsp+0x58]
   140011292:	add    rsp,0x20
   140011296:	pop    r15
   140011298:	pop    r14
   14001129a:	pop    rdi
   14001129b:	ret    
   14001129c:	int3   
   14001129d:	int3   
   14001129e:	int3   
   14001129f:	int3   
   1400112a0:	rex push rbp
   1400112a2:	push   r12
   1400112a4:	push   r14
   1400112a6:	sub    rsp,0x440
   1400112ad:	mov    rax,QWORD PTR [rip+0xcd64]        # 0x14001e018
   1400112b4:	xor    rax,rsp
   1400112b7:	mov    QWORD PTR [rsp+0x400],rax
   1400112bf:	mov    r14,r9
   1400112c2:	mov    rbp,r8
   1400112c5:	mov    r12,rcx
   1400112c8:	test   rcx,rcx
   1400112cb:	jne    0x1400112e7
   1400112cd:	test   rdx,rdx
   1400112d0:	je     0x1400112e7
   1400112d2:	call   0x140008500
   1400112d7:	mov    DWORD PTR [rax],0x16
   1400112dd:	call   0x1400083e0
   1400112e2:	jmp    0x1400115b7
   1400112e7:	test   r8,r8
   1400112ea:	je     0x1400112d2
   1400112ec:	test   r9,r9
   1400112ef:	je     0x1400112d2
   1400112f1:	cmp    rdx,0x2
   1400112f5:	jb     0x1400115b7
   1400112fb:	mov    QWORD PTR [rsp+0x438],rbx
   140011303:	mov    QWORD PTR [rsp+0x430],rsi
   14001130b:	mov    QWORD PTR [rsp+0x428],rdi
   140011313:	mov    QWORD PTR [rsp+0x420],r13
   14001131b:	mov    QWORD PTR [rsp+0x418],r15
   140011323:	lea    r15,[rdx-0x1]
   140011327:	imul   r15,rbp
   14001132b:	add    r15,rcx
   14001132e:	xor    r13d,r13d
   140011331:	xor    edx,edx
   140011333:	mov    rax,r15
   140011336:	sub    rax,r12
   140011339:	div    rbp
   14001133c:	lea    rsi,[rax+0x1]
   140011340:	cmp    rsi,0x8
   140011344:	ja     0x140011370
   140011346:	mov    r9,r14
   140011349:	mov    r8,rbp
   14001134c:	mov    rdx,r15
   14001134f:	mov    rcx,r12
   140011352:	call   0x1400111d0
   140011357:	sub    r13,0x1
   14001135b:	js     0x14001158f
   140011361:	mov    r12,QWORD PTR [rsp+r13*8+0x20]
   140011366:	mov    r15,QWORD PTR [rsp+r13*8+0x210]
   14001136e:	jmp    0x140011331
   140011370:	shr    rsi,1
   140011373:	mov    rcx,r14
   140011376:	imul   rsi,rbp
   14001137a:	add    rsi,r12
   14001137d:	call   QWORD PTR [rip+0x2ed5]        # 0x140014258
   140011383:	mov    rdx,rsi
   140011386:	mov    rcx,r12
   140011389:	call   r14
   14001138c:	test   eax,eax
   14001138e:	jle    0x1400113b9
   140011390:	mov    r8,rbp
   140011393:	mov    rdx,rsi
   140011396:	cmp    r12,rsi
   140011399:	je     0x1400113b9
   14001139b:	mov    r9,r12
   14001139e:	sub    r9,rsi
   1400113a1:	movzx  eax,BYTE PTR [rdx]
   1400113a4:	movzx  ecx,BYTE PTR [r9+rdx*1]
   1400113a9:	mov    BYTE PTR [r9+rdx*1],al
   1400113ad:	mov    BYTE PTR [rdx],cl
   1400113af:	lea    rdx,[rdx+0x1]
   1400113b3:	sub    r8,0x1
   1400113b7:	jne    0x1400113a1
   1400113b9:	mov    rcx,r14
   1400113bc:	call   QWORD PTR [rip+0x2e96]        # 0x140014258
   1400113c2:	mov    rdx,r15
   1400113c5:	mov    rcx,r12
   1400113c8:	call   r14
   1400113cb:	test   eax,eax
   1400113cd:	jle    0x1400113f8
   1400113cf:	mov    r8,rbp
   1400113d2:	mov    rdx,r15
   1400113d5:	cmp    r12,r15
   1400113d8:	je     0x1400113f8
   1400113da:	mov    r9,r12
   1400113dd:	sub    r9,r15
   1400113e0:	movzx  eax,BYTE PTR [rdx]
   1400113e3:	movzx  ecx,BYTE PTR [r9+rdx*1]
   1400113e8:	mov    BYTE PTR [r9+rdx*1],al
   1400113ec:	mov    BYTE PTR [rdx],cl
   1400113ee:	lea    rdx,[rdx+0x1]
   1400113f2:	sub    r8,0x1
   1400113f6:	jne    0x1400113e0
   1400113f8:	mov    rcx,r14
   1400113fb:	call   QWORD PTR [rip+0x2e57]        # 0x140014258
   140011401:	mov    rdx,r15
   140011404:	mov    rcx,rsi
   140011407:	call   r14
   14001140a:	test   eax,eax
   14001140c:	jle    0x140011438
   14001140e:	mov    r8,rbp
   140011411:	mov    rdx,r15
   140011414:	cmp    rsi,r15
   140011417:	je     0x140011438
   140011419:	mov    r9,rsi
   14001141c:	sub    r9,r15
   14001141f:	nop
   140011420:	movzx  eax,BYTE PTR [rdx]
   140011423:	movzx  ecx,BYTE PTR [r9+rdx*1]
   140011428:	mov    BYTE PTR [r9+rdx*1],al
   14001142c:	mov    BYTE PTR [rdx],cl
   14001142e:	lea    rdx,[rdx+0x1]
   140011432:	sub    r8,0x1
   140011436:	jne    0x140011420
   140011438:	mov    rbx,r12
   14001143b:	mov    rdi,r15
   14001143e:	xchg   ax,ax
   140011440:	cmp    rsi,rbx
   140011443:	jbe    0x140011468
   140011445:	add    rbx,rbp
   140011448:	cmp    rbx,rsi
   14001144b:	jae    0x140011468
   14001144d:	mov    rcx,r14
   140011450:	call   QWORD PTR [rip+0x2e02]        # 0x140014258
   140011456:	mov    rdx,rsi
   140011459:	mov    rcx,rbx
   14001145c:	call   r14
   14001145f:	test   eax,eax
   140011461:	jle    0x140011445
   140011463:	cmp    rsi,rbx
   140011466:	ja     0x140011486
   140011468:	add    rbx,rbp
   14001146b:	cmp    rbx,r15
   14001146e:	ja     0x140011486
   140011470:	mov    rcx,r14
   140011473:	call   QWORD PTR [rip+0x2ddf]        # 0x140014258
   140011479:	mov    rdx,rsi
   14001147c:	mov    rcx,rbx
   14001147f:	call   r14
   140011482:	test   eax,eax
   140011484:	jle    0x140011468
   140011486:	sub    rdi,rbp
   140011489:	cmp    rdi,rsi
   14001148c:	jbe    0x1400114a4
   14001148e:	mov    rcx,r14
   140011491:	call   QWORD PTR [rip+0x2dc1]        # 0x140014258
   140011497:	mov    rdx,rsi
   14001149a:	mov    rcx,rdi
   14001149d:	call   r14
   1400114a0:	test   eax,eax
   1400114a2:	jg     0x140011486
   1400114a4:	cmp    rdi,rbx
   1400114a7:	jb     0x1400114e9
   1400114a9:	mov    r8,rbp
   1400114ac:	mov    rdx,rdi
   1400114af:	cmp    rbx,rdi
   1400114b2:	je     0x1400114d8
   1400114b4:	mov    r9,rbx
   1400114b7:	sub    r9,rdi
   1400114ba:	nop    WORD PTR [rax+rax*1+0x0]
   1400114c0:	movzx  eax,BYTE PTR [rdx]
   1400114c3:	movzx  ecx,BYTE PTR [r9+rdx*1]
   1400114c8:	mov    BYTE PTR [r9+rdx*1],al
   1400114cc:	mov    BYTE PTR [rdx],cl
   1400114ce:	lea    rdx,[rdx+0x1]
   1400114d2:	sub    r8,0x1
   1400114d6:	jne    0x1400114c0
   1400114d8:	cmp    rsi,rdi
   1400114db:	jne    0x140011440
   1400114e1:	mov    rsi,rbx
   1400114e4:	jmp    0x140011440
   1400114e9:	add    rdi,rbp
   1400114ec:	cmp    rsi,rdi
   1400114ef:	jae    0x140011514
   1400114f1:	sub    rdi,rbp
   1400114f4:	cmp    rdi,rsi
   1400114f7:	jbe    0x140011514
   1400114f9:	mov    rcx,r14
   1400114fc:	call   QWORD PTR [rip+0x2d56]        # 0x140014258
   140011502:	mov    rdx,rsi
   140011505:	mov    rcx,rdi
   140011508:	call   r14
   14001150b:	test   eax,eax
   14001150d:	je     0x1400114f1
   14001150f:	cmp    rsi,rdi
   140011512:	jb     0x140011532
   140011514:	sub    rdi,rbp
   140011517:	cmp    rdi,r12
   14001151a:	jbe    0x140011532
   14001151c:	mov    rcx,r14
   14001151f:	call   QWORD PTR [rip+0x2d33]        # 0x140014258
   140011525:	mov    rdx,rsi
   140011528:	mov    rcx,rdi
   14001152b:	call   r14
   14001152e:	test   eax,eax
   140011530:	je     0x140011514
   140011532:	mov    rcx,r15
   140011535:	mov    rax,rdi
   140011538:	sub    rcx,rbx
   14001153b:	sub    rax,r12
   14001153e:	cmp    rax,rcx
   140011541:	jl     0x140011569
   140011543:	cmp    r12,rdi
   140011546:	jae    0x140011558
   140011548:	mov    QWORD PTR [rsp+r13*8+0x20],r12
   14001154d:	mov    QWORD PTR [rsp+r13*8+0x210],rdi
   140011555:	inc    r13
   140011558:	cmp    rbx,r15
   14001155b:	jae    0x140011357
   140011561:	mov    r12,rbx
   140011564:	jmp    0x140011331
   140011569:	cmp    rbx,r15
   14001156c:	jae    0x14001157e
   14001156e:	mov    QWORD PTR [rsp+r13*8+0x20],rbx
   140011573:	mov    QWORD PTR [rsp+r13*8+0x210],r15
   14001157b:	inc    r13
   14001157e:	cmp    r12,rdi
   140011581:	jae    0x140011357
   140011587:	mov    r15,rdi
   14001158a:	jmp    0x140011331
   14001158f:	mov    r13,QWORD PTR [rsp+0x420]
   140011597:	mov    rdi,QWORD PTR [rsp+0x428]
   14001159f:	mov    rsi,QWORD PTR [rsp+0x430]
   1400115a7:	mov    rbx,QWORD PTR [rsp+0x438]
   1400115af:	mov    r15,QWORD PTR [rsp+0x418]
   1400115b7:	mov    rcx,QWORD PTR [rsp+0x400]
   1400115bf:	xor    rcx,rsp
   1400115c2:	call   0x140013230
   1400115c7:	add    rsp,0x440
   1400115ce:	pop    r14
   1400115d0:	pop    r12
   1400115d2:	pop    rbp
   1400115d3:	ret    
   1400115d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400115d9:	push   rdi
   1400115da:	sub    rsp,0x20
   1400115de:	xor    r10d,r10d
   1400115e1:	mov    r11,rdx
   1400115e4:	test   r9,r9
   1400115e7:	jne    0x140011615
   1400115e9:	test   rcx,rcx
   1400115ec:	jne    0x14001161a
   1400115ee:	test   rdx,rdx
   1400115f1:	je     0x140011607
   1400115f3:	call   0x140008500
   1400115f8:	mov    ebx,0x16
   1400115fd:	mov    DWORD PTR [rax],ebx
   1400115ff:	call   0x1400083e0
   140011604:	mov    r10d,ebx
   140011607:	mov    eax,r10d
   14001160a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001160f:	add    rsp,0x20
   140011613:	pop    rdi
   140011614:	ret    
   140011615:	test   rcx,rcx
   140011618:	je     0x1400115f3
   14001161a:	test   rdx,rdx
   14001161d:	je     0x1400115f3
   14001161f:	test   r9,r9
   140011622:	jne    0x140011629
   140011624:	mov    BYTE PTR [rcx],r10b
   140011627:	jmp    0x140011607
   140011629:	test   r8,r8
   14001162c:	jne    0x140011633
   14001162e:	mov    BYTE PTR [rcx],r10b
   140011631:	jmp    0x1400115f3
   140011633:	sub    r8,rcx
   140011636:	mov    rdx,rcx
   140011639:	mov    rbx,r11
   14001163c:	mov    rdi,r9
   14001163f:	cmp    r9,0xffffffffffffffff
   140011643:	jne    0x14001165a
   140011645:	mov    al,BYTE PTR [r8+rdx*1]
   140011649:	mov    BYTE PTR [rdx],al
   14001164b:	inc    rdx
   14001164e:	test   al,al
   140011650:	je     0x14001167b
   140011652:	sub    rbx,0x1
   140011656:	jne    0x140011645
   140011658:	jmp    0x14001167b
   14001165a:	mov    al,BYTE PTR [r8+rdx*1]
   14001165e:	mov    BYTE PTR [rdx],al
   140011660:	inc    rdx
   140011663:	test   al,al
   140011665:	je     0x140011673
   140011667:	sub    rbx,0x1
   14001166b:	je     0x140011673
   14001166d:	sub    rdi,0x1
   140011671:	jne    0x14001165a
   140011673:	test   rdi,rdi
   140011676:	jne    0x14001167b
   140011678:	mov    BYTE PTR [rdx],r10b
   14001167b:	test   rbx,rbx
   14001167e:	jne    0x140011607
   140011680:	cmp    r9,0xffffffffffffffff
   140011684:	jne    0x140011694
   140011686:	mov    BYTE PTR [rcx+r11*1-0x1],r10b
   14001168b:	lea    r10d,[rbx+0x50]
   14001168f:	jmp    0x140011607
   140011694:	mov    BYTE PTR [rcx],r10b
   140011697:	call   0x140008500
   14001169c:	mov    ebx,0x22
   1400116a1:	jmp    0x1400115fd
   1400116a6:	int3   
   1400116a7:	int3   
   1400116a8:	sub    rsp,0x58
   1400116ac:	mov    rax,QWORD PTR [rip+0xc965]        # 0x14001e018
   1400116b3:	xor    rax,rsp
   1400116b6:	mov    QWORD PTR [rsp+0x40],rax
   1400116bb:	xor    eax,eax
   1400116bd:	mov    r9,rdx
   1400116c0:	cmp    rax,0x20
   1400116c4:	mov    r8,rcx
   1400116c7:	jae    0x140011740
   1400116c9:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   1400116ce:	inc    rax
   1400116d1:	cmp    rax,0x20
   1400116d5:	jl     0x1400116c7
   1400116d7:	mov    al,BYTE PTR [rdx]
   1400116d9:	jmp    0x1400116fa
   1400116db:	movzx  edx,al
   1400116de:	shr    rdx,0x3
   1400116e2:	movzx  eax,al
   1400116e5:	and    eax,0x7
   1400116e8:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x20]
   1400116ed:	bts    ecx,eax
   1400116f0:	inc    r9
   1400116f3:	mov    BYTE PTR [rsp+rdx*1+0x20],cl
   1400116f7:	mov    al,BYTE PTR [r9]
   1400116fa:	test   al,al
   1400116fc:	jne    0x1400116db
   1400116fe:	jmp    0x14001171f
   140011700:	movzx  eax,r9b
   140011704:	mov    edx,0x1
   140011709:	movzx  ecx,r9b
   14001170d:	and    ecx,0x7
   140011710:	shr    rax,0x3
   140011714:	shl    edx,cl
   140011716:	test   BYTE PTR [rsp+rax*1+0x20],dl
   14001171a:	jne    0x14001173b
   14001171c:	inc    r8
   14001171f:	mov    r9b,BYTE PTR [r8]
   140011722:	test   r9b,r9b
   140011725:	jne    0x140011700
   140011727:	xor    eax,eax
   140011729:	mov    rcx,QWORD PTR [rsp+0x40]
   14001172e:	xor    rcx,rsp
   140011731:	call   0x140013230
   140011736:	add    rsp,0x58
   14001173a:	ret    
   14001173b:	mov    rax,r8
   14001173e:	jmp    0x140011729
   140011740:	call   0x14001335c
   140011745:	int3   
   140011746:	int3   
   140011747:	int3   
   140011748:	xor    r8d,r8d
   14001174b:	jmp    0x140011750
   140011750:	mov    QWORD PTR [rsp+0x8],rbx
   140011755:	push   rdi
   140011756:	sub    rsp,0x40
   14001175a:	mov    rbx,rdx
   14001175d:	mov    rdi,rcx
   140011760:	test   rcx,rcx
   140011763:	jne    0x140011779
   140011765:	call   0x140008500
   14001176a:	mov    DWORD PTR [rax],0x16
   140011770:	call   0x1400083e0
   140011775:	xor    eax,eax
   140011777:	jmp    0x1400117db
   140011779:	test   rdx,rdx
   14001177c:	je     0x140011765
   14001177e:	cmp    rcx,rdx
   140011781:	jae    0x140011775
   140011783:	mov    rdx,r8
   140011786:	lea    rcx,[rsp+0x20]
   14001178b:	call   0x140003ab0
   140011790:	mov    rcx,QWORD PTR [rsp+0x30]
   140011795:	cmp    DWORD PTR [rcx+0x8],0x0
   140011799:	jne    0x1400117a0
   14001179b:	dec    rbx
   14001179e:	jmp    0x1400117c5
   1400117a0:	lea    rdx,[rbx-0x1]
   1400117a4:	dec    rdx
   1400117a7:	cmp    rdi,rdx
   1400117aa:	ja     0x1400117b6
   1400117ac:	movzx  eax,BYTE PTR [rdx]
   1400117af:	test   BYTE PTR [rax+rcx*1+0x19],0x4
   1400117b4:	jne    0x1400117a4
   1400117b6:	mov    rcx,rbx
   1400117b9:	sub    rcx,rdx
   1400117bc:	and    ecx,0x1
   1400117bf:	sub    rbx,rcx
   1400117c2:	dec    rbx
   1400117c5:	cmp    BYTE PTR [rsp+0x38],0x0
   1400117ca:	je     0x1400117d8
   1400117cc:	mov    rcx,QWORD PTR [rsp+0x20]
   1400117d1:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   1400117d8:	mov    rax,rbx
   1400117db:	mov    rbx,QWORD PTR [rsp+0x50]
   1400117e0:	add    rsp,0x40
   1400117e4:	pop    rdi
   1400117e5:	ret    
   1400117e6:	int3   
   1400117e7:	int3   
   1400117e8:	sub    rsp,0x28
   1400117ec:	call   0x14000c764
   1400117f1:	xor    ecx,ecx
   1400117f3:	test   al,al
   1400117f5:	sete   cl
   1400117f8:	mov    eax,ecx
   1400117fa:	add    rsp,0x28
   1400117fe:	ret    
   1400117ff:	int3   
   140011800:	sub    rsp,0x28
   140011804:	test   rcx,rcx
   140011807:	jne    0x140011822
   140011809:	call   0x140008500
   14001180e:	mov    DWORD PTR [rax],0x16
   140011814:	call   0x1400083e0
   140011819:	or     rax,0xffffffffffffffff
   14001181d:	add    rsp,0x28
   140011821:	ret    
   140011822:	mov    r8,rcx
   140011825:	xor    edx,edx
   140011827:	mov    rcx,QWORD PTR [rip+0xddc2]        # 0x14001f5f0
   14001182e:	add    rsp,0x28
   140011832:	rex.W jmp QWORD PTR [rip+0x29ef]        # 0x140014228
   140011839:	int3   
   14001183a:	int3   
   14001183b:	int3   
   14001183c:	mov    QWORD PTR [rsp+0x8],rbx
   140011841:	push   rdi
   140011842:	sub    rsp,0x20
   140011846:	mov    rbx,rdx
   140011849:	mov    rdi,rcx
   14001184c:	test   rcx,rcx
   14001184f:	jne    0x14001185b
   140011851:	mov    rcx,rdx
   140011854:	call   0x140007d04
   140011859:	jmp    0x1400118b3
   14001185b:	test   rdx,rdx
   14001185e:	jne    0x140011867
   140011860:	call   0x140007cc4
   140011865:	jmp    0x1400118b1
   140011867:	cmp    rdx,0xffffffffffffffe0
   14001186b:	ja     0x1400118a6
   14001186d:	mov    r9,rdx
   140011870:	mov    r8,rcx
   140011873:	jmp    0x140011890
   140011875:	call   0x1400074c0
   14001187a:	test   eax,eax
   14001187c:	je     0x1400118a6
   14001187e:	mov    rcx,rbx
   140011881:	call   0x140007504
   140011886:	test   eax,eax
   140011888:	je     0x1400118a6
   14001188a:	mov    r9,rbx
   14001188d:	mov    r8,rdi
   140011890:	mov    rcx,QWORD PTR [rip+0xdd59]        # 0x14001f5f0
   140011897:	xor    edx,edx
   140011899:	call   QWORD PTR [rip+0x2991]        # 0x140014230
   14001189f:	test   rax,rax
   1400118a2:	je     0x140011875
   1400118a4:	jmp    0x1400118b3
   1400118a6:	call   0x140008500
   1400118ab:	mov    DWORD PTR [rax],0xc
   1400118b1:	xor    eax,eax
   1400118b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400118b8:	add    rsp,0x20
   1400118bc:	pop    rdi
   1400118bd:	ret    
   1400118be:	int3   
   1400118bf:	int3   
   1400118c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400118c5:	mov    QWORD PTR [rsp+0x20],r9
   1400118ca:	push   rdi
   1400118cb:	sub    rsp,0x20
   1400118cf:	mov    rdi,r9
   1400118d2:	mov    rbx,r8
   1400118d5:	mov    ecx,DWORD PTR [rdx]
   1400118d7:	call   0x14000cebc
   1400118dc:	nop
   1400118dd:	mov    rax,QWORD PTR [rbx]
   1400118e0:	movsxd rcx,DWORD PTR [rax]
   1400118e3:	mov    rdx,rcx
   1400118e6:	mov    rax,rcx
   1400118e9:	sar    rax,0x6
   1400118ed:	lea    r8,[rip+0xd68c]        # 0x14001ef80
   1400118f4:	and    edx,0x3f
   1400118f7:	shl    rdx,0x6
   1400118fb:	mov    rax,QWORD PTR [r8+rax*8]
   1400118ff:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   140011904:	je     0x14001190f
   140011906:	call   0x1400119d8
   14001190b:	mov    ebx,eax
   14001190d:	jmp    0x14001191d
   14001190f:	call   0x140008500
   140011914:	mov    DWORD PTR [rax],0x9
   14001191a:	or     ebx,0xffffffff
   14001191d:	mov    ecx,DWORD PTR [rdi]
   14001191f:	call   0x14000cee0
   140011924:	mov    eax,ebx
   140011926:	mov    rbx,QWORD PTR [rsp+0x30]
   14001192b:	add    rsp,0x20
   14001192f:	pop    rdi
   140011930:	ret    
   140011931:	int3   
   140011932:	int3   
   140011933:	int3   
   140011934:	mov    DWORD PTR [rsp+0x8],ecx
   140011938:	sub    rsp,0x38
   14001193c:	movsxd rdx,ecx
   14001193f:	cmp    edx,0xfffffffe
   140011942:	jne    0x140011959
   140011944:	call   0x1400084e0
   140011949:	and    DWORD PTR [rax],0x0
   14001194c:	call   0x140008500
   140011951:	mov    DWORD PTR [rax],0x9
   140011957:	jmp    0x1400119cd
   140011959:	test   ecx,ecx
   14001195b:	js     0x1400119b5
   14001195d:	cmp    edx,DWORD PTR [rip+0xda1d]        # 0x14001f380
   140011963:	jae    0x1400119b5
   140011965:	mov    rcx,rdx
   140011968:	lea    r8,[rip+0xd611]        # 0x14001ef80
   14001196f:	and    ecx,0x3f
   140011972:	mov    rax,rdx
   140011975:	sar    rax,0x6
   140011979:	shl    rcx,0x6
   14001197d:	mov    rax,QWORD PTR [r8+rax*8]
   140011981:	test   BYTE PTR [rax+rcx*1+0x38],0x1
   140011986:	je     0x1400119b5
   140011988:	lea    rax,[rsp+0x40]
   14001198d:	mov    DWORD PTR [rsp+0x50],edx
   140011991:	mov    DWORD PTR [rsp+0x58],edx
   140011995:	lea    r9,[rsp+0x50]
   14001199a:	lea    rdx,[rsp+0x58]
   14001199f:	mov    QWORD PTR [rsp+0x20],rax
   1400119a4:	lea    r8,[rsp+0x20]
   1400119a9:	lea    rcx,[rsp+0x48]
   1400119ae:	call   0x1400118c0
   1400119b3:	jmp    0x1400119d0
   1400119b5:	call   0x1400084e0
   1400119ba:	and    DWORD PTR [rax],0x0
   1400119bd:	call   0x140008500
   1400119c2:	mov    DWORD PTR [rax],0x9
   1400119c8:	call   0x1400083e0
   1400119cd:	or     eax,0xffffffff
   1400119d0:	add    rsp,0x38
   1400119d4:	ret    
   1400119d5:	int3   
   1400119d6:	int3   
   1400119d7:	int3   
   1400119d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400119dd:	push   rdi
   1400119de:	sub    rsp,0x20
   1400119e2:	movsxd rdi,ecx
   1400119e5:	mov    ecx,edi
   1400119e7:	call   0x14000cfc0
   1400119ec:	cmp    rax,0xffffffffffffffff
   1400119f0:	jne    0x1400119f6
   1400119f2:	xor    ebx,ebx
   1400119f4:	jmp    0x140011a4d
   1400119f6:	mov    rax,QWORD PTR [rip+0xd583]        # 0x14001ef80
   1400119fd:	mov    ecx,0x2
   140011a02:	cmp    edi,0x1
   140011a05:	jne    0x140011a10
   140011a07:	test   BYTE PTR [rax+0xb8],dil
   140011a0e:	jne    0x140011a1a
   140011a10:	cmp    edi,ecx
   140011a12:	jne    0x140011a31
   140011a14:	test   BYTE PTR [rax+0x78],0x1
   140011a18:	je     0x140011a31
   140011a1a:	call   0x14000cfc0
   140011a1f:	mov    ecx,0x1
   140011a24:	mov    rbx,rax
   140011a27:	call   0x14000cfc0
   140011a2c:	cmp    rax,rbx
   140011a2f:	je     0x1400119f2
   140011a31:	mov    ecx,edi
   140011a33:	call   0x14000cfc0
   140011a38:	mov    rcx,rax
   140011a3b:	call   QWORD PTR [rip+0x25cf]        # 0x140014010
   140011a41:	test   eax,eax
   140011a43:	jne    0x1400119f2
   140011a45:	call   QWORD PTR [rip+0x25cd]        # 0x140014018
   140011a4b:	mov    ebx,eax
   140011a4d:	mov    ecx,edi
   140011a4f:	call   0x14000cf04
   140011a54:	mov    rdx,rdi
   140011a57:	lea    r8,[rip+0xd522]        # 0x14001ef80
   140011a5e:	and    edx,0x3f
   140011a61:	mov    rcx,rdi
   140011a64:	sar    rcx,0x6
   140011a68:	shl    rdx,0x6
   140011a6c:	mov    rcx,QWORD PTR [r8+rcx*8]
   140011a70:	mov    BYTE PTR [rcx+rdx*1+0x38],0x0
   140011a75:	test   ebx,ebx
   140011a77:	je     0x140011a85
   140011a79:	mov    ecx,ebx
   140011a7b:	call   0x140008490
   140011a80:	or     eax,0xffffffff
   140011a83:	jmp    0x140011a87
   140011a85:	xor    eax,eax
   140011a87:	mov    rbx,QWORD PTR [rsp+0x30]
   140011a8c:	add    rsp,0x20
   140011a90:	pop    rdi
   140011a91:	ret    
   140011a92:	int3   
   140011a93:	int3   
   140011a94:	mov    QWORD PTR [rsp+0x8],rcx
   140011a99:	mov    r11,rsp
   140011a9c:	xor    edx,edx
   140011a9e:	mov    QWORD PTR [rcx],rdx
   140011aa1:	mov    rax,QWORD PTR [r11+0x8]
   140011aa5:	mov    QWORD PTR [rax+0x8],rdx
   140011aa9:	mov    rax,QWORD PTR [r11+0x8]
   140011aad:	mov    DWORD PTR [rax+0x10],edx
   140011ab0:	mov    rax,QWORD PTR [r11+0x8]
   140011ab4:	or     DWORD PTR [rax+0x18],0xffffffff
   140011ab8:	mov    rax,QWORD PTR [r11+0x8]
   140011abc:	mov    DWORD PTR [rax+0x1c],edx
   140011abf:	mov    rax,QWORD PTR [r11+0x8]
   140011ac3:	mov    DWORD PTR [rax+0x20],edx
   140011ac6:	mov    rax,QWORD PTR [r11+0x8]
   140011aca:	mov    QWORD PTR [rax+0x28],rdx
   140011ace:	mov    rax,QWORD PTR [r11+0x8]
   140011ad2:	xchg   DWORD PTR [rax+0x14],edx
   140011ad5:	ret    
   140011ad6:	int3   
   140011ad7:	int3   
   140011ad8:	mov    QWORD PTR [rsp+0x10],rbx
   140011add:	mov    QWORD PTR [rsp+0x18],rsi
   140011ae2:	mov    DWORD PTR [rsp+0x8],ecx
   140011ae6:	push   rdi
   140011ae7:	push   r12
   140011ae9:	push   r13
   140011aeb:	push   r14
   140011aed:	push   r15
   140011aef:	sub    rsp,0x20
   140011af3:	mov    r15d,r8d
   140011af6:	mov    r12,rdx
   140011af9:	movsxd rbx,ecx
   140011afc:	cmp    ebx,0xfffffffe
   140011aff:	jne    0x140011b19
   140011b01:	call   0x1400084e0
   140011b06:	and    DWORD PTR [rax],0x0
   140011b09:	call   0x140008500
   140011b0e:	mov    DWORD PTR [rax],0x9
   140011b14:	jmp    0x140011bac
   140011b19:	test   ecx,ecx
   140011b1b:	js     0x140011b94
   140011b1d:	cmp    ebx,DWORD PTR [rip+0xd85d]        # 0x14001f380
   140011b23:	jae    0x140011b94
   140011b25:	mov    rsi,rbx
   140011b28:	mov    r14,rbx
   140011b2b:	sar    r14,0x6
   140011b2f:	lea    r13,[rip+0xd44a]        # 0x14001ef80
   140011b36:	and    esi,0x3f
   140011b39:	shl    rsi,0x6
   140011b3d:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   140011b42:	movzx  ecx,BYTE PTR [rax+rsi*1+0x38]
   140011b47:	and    ecx,0x1
   140011b4a:	je     0x140011b94
   140011b4c:	mov    ecx,ebx
   140011b4e:	call   0x14000cebc
   140011b53:	or     rdi,0xffffffffffffffff
   140011b57:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   140011b5c:	test   BYTE PTR [rax+rsi*1+0x38],0x1
   140011b61:	jne    0x140011b78
   140011b63:	call   0x140008500
   140011b68:	mov    DWORD PTR [rax],0x9
   140011b6e:	call   0x1400084e0
   140011b73:	and    DWORD PTR [rax],0x0
   140011b76:	jmp    0x140011b88
   140011b78:	mov    r8d,r15d
   140011b7b:	mov    rdx,r12
   140011b7e:	mov    ecx,ebx
   140011b80:	call   0x140011bc8
   140011b85:	mov    rdi,rax
   140011b88:	mov    ecx,ebx
   140011b8a:	call   0x14000cee0
   140011b8f:	mov    rax,rdi
   140011b92:	jmp    0x140011bb0
   140011b94:	call   0x1400084e0
   140011b99:	and    DWORD PTR [rax],0x0
   140011b9c:	call   0x140008500
   140011ba1:	mov    DWORD PTR [rax],0x9
   140011ba7:	call   0x1400083e0
   140011bac:	or     rax,0xffffffffffffffff
   140011bb0:	mov    rbx,QWORD PTR [rsp+0x58]
   140011bb5:	mov    rsi,QWORD PTR [rsp+0x60]
   140011bba:	add    rsp,0x20
   140011bbe:	pop    r15
   140011bc0:	pop    r14
   140011bc2:	pop    r13
   140011bc4:	pop    r12
   140011bc6:	pop    rdi
   140011bc7:	ret    
   140011bc8:	mov    QWORD PTR [rsp+0x8],rbx
   140011bcd:	mov    QWORD PTR [rsp+0x10],rsi
   140011bd2:	push   rdi
   140011bd3:	sub    rsp,0x20
   140011bd7:	movsxd rbx,ecx
   140011bda:	mov    edi,r8d
   140011bdd:	mov    ecx,ebx
   140011bdf:	mov    rsi,rdx
   140011be2:	call   0x14000cfc0
   140011be7:	cmp    rax,0xffffffffffffffff
   140011beb:	jne    0x140011bfe
   140011bed:	call   0x140008500
   140011bf2:	mov    DWORD PTR [rax],0x9
   140011bf8:	or     rax,0xffffffffffffffff
   140011bfc:	jmp    0x140011c51
   140011bfe:	mov    r9d,edi
   140011c01:	lea    r8,[rsp+0x48]
   140011c06:	mov    rdx,rsi
   140011c09:	mov    rcx,rax
   140011c0c:	call   QWORD PTR [rip+0x2626]        # 0x140014238
   140011c12:	test   eax,eax
   140011c14:	jne    0x140011c25
   140011c16:	call   QWORD PTR [rip+0x23fc]        # 0x140014018
   140011c1c:	mov    ecx,eax
   140011c1e:	call   0x140008490
   140011c23:	jmp    0x140011bf8
   140011c25:	mov    rax,QWORD PTR [rsp+0x48]
   140011c2a:	cmp    rax,0xffffffffffffffff
   140011c2e:	je     0x140011bf8
   140011c30:	mov    rdx,rbx
   140011c33:	lea    r8,[rip+0xd346]        # 0x14001ef80
   140011c3a:	and    edx,0x3f
   140011c3d:	mov    rcx,rbx
   140011c40:	sar    rcx,0x6
   140011c44:	shl    rdx,0x6
   140011c48:	mov    rcx,QWORD PTR [r8+rcx*8]
   140011c4c:	and    BYTE PTR [rcx+rdx*1+0x38],0xfd
   140011c51:	mov    rbx,QWORD PTR [rsp+0x30]
   140011c56:	mov    rsi,QWORD PTR [rsp+0x38]
   140011c5b:	add    rsp,0x20
   140011c5f:	pop    rdi
   140011c60:	ret    
   140011c61:	int3   
   140011c62:	int3   
   140011c63:	int3   
   140011c64:	jmp    0x140011ad8
   140011c69:	int3   
   140011c6a:	int3   
   140011c6b:	int3   
   140011c6c:	jmp    0x140011bc8
   140011c71:	int3   
   140011c72:	int3   
   140011c73:	int3   
   140011c74:	mov    WORD PTR [rsp+0x8],cx
   140011c79:	sub    rsp,0x38
   140011c7d:	mov    rcx,QWORD PTR [rip+0xcc8c]        # 0x14001e910
   140011c84:	cmp    rcx,0xfffffffffffffffe
   140011c88:	jne    0x140011c96
   140011c8a:	call   0x140012480
   140011c8f:	mov    rcx,QWORD PTR [rip+0xcc7a]        # 0x14001e910
   140011c96:	cmp    rcx,0xffffffffffffffff
   140011c9a:	jne    0x140011ca3
   140011c9c:	mov    eax,0xffff
   140011ca1:	jmp    0x140011cc8
   140011ca3:	and    QWORD PTR [rsp+0x20],0x0
   140011ca9:	lea    r9,[rsp+0x48]
   140011cae:	mov    r8d,0x1
   140011cb4:	lea    rdx,[rsp+0x40]
   140011cb9:	call   QWORD PTR [rip+0x2581]        # 0x140014240
   140011cbf:	test   eax,eax
   140011cc1:	je     0x140011c9c
   140011cc3:	movzx  eax,WORD PTR [rsp+0x40]
   140011cc8:	add    rsp,0x38
   140011ccc:	ret    
   140011ccd:	int3   
   140011cce:	int3   
   140011ccf:	int3   
   140011cd0:	xor    eax,eax
   140011cd2:	cmp    BYTE PTR [rcx],al
   140011cd4:	je     0x140011ce4
   140011cd6:	cmp    rax,rdx
   140011cd9:	je     0x140011ce4
   140011cdb:	inc    rax
   140011cde:	cmp    BYTE PTR [rax+rcx*1],0x0
   140011ce2:	jne    0x140011cd6
   140011ce4:	ret    
   140011ce5:	int3   
   140011ce6:	int3   
   140011ce7:	int3   
   140011ce8:	rex push rbx
   140011cea:	sub    rsp,0x20
   140011cee:	mov    rbx,rcx
   140011cf1:	call   0x1400124dc
   140011cf6:	mov    DWORD PTR [rbx],eax
   140011cf8:	call   0x1400124f4
   140011cfd:	mov    DWORD PTR [rbx+0x4],eax
   140011d00:	xor    eax,eax
   140011d02:	add    rsp,0x20
   140011d06:	pop    rbx
   140011d07:	ret    
   140011d08:	rex push rbx
   140011d0a:	sub    rsp,0x20
   140011d0e:	and    DWORD PTR [rsp+0x30],0x0
   140011d13:	mov    rbx,rcx
   140011d16:	mov    ecx,DWORD PTR [rcx]
   140011d18:	and    DWORD PTR [rsp+0x34],0x0
   140011d1d:	call   0x140012508
   140011d22:	mov    ecx,DWORD PTR [rbx+0x4]
   140011d25:	call   0x140012514
   140011d2a:	lea    rcx,[rsp+0x30]
   140011d2f:	call   0x140011ce8
   140011d34:	mov    eax,DWORD PTR [rsp+0x30]
   140011d38:	cmp    DWORD PTR [rbx],eax
   140011d3a:	jne    0x140011d49
   140011d3c:	mov    eax,DWORD PTR [rsp+0x34]
   140011d40:	cmp    DWORD PTR [rbx+0x4],eax
   140011d43:	jne    0x140011d49
   140011d45:	xor    eax,eax
   140011d47:	jmp    0x140011d4e
   140011d49:	mov    eax,0x1
   140011d4e:	add    rsp,0x20
   140011d52:	pop    rbx
   140011d53:	ret    
   140011d54:	rex push rbx
   140011d56:	sub    rsp,0x20
   140011d5a:	and    DWORD PTR [rsp+0x38],0x0
   140011d5f:	mov    rbx,rcx
   140011d62:	and    DWORD PTR [rsp+0x3c],0x0
   140011d67:	lea    rcx,[rsp+0x38]
   140011d6c:	call   0x140011ce8
   140011d71:	test   eax,eax
   140011d73:	je     0x140011d7c
   140011d75:	mov    eax,0x1
   140011d7a:	jmp    0x140011d9e
   140011d7c:	mov    rax,QWORD PTR [rsp+0x38]
   140011d81:	lea    rcx,[rsp+0x38]
   140011d86:	or     DWORD PTR [rsp+0x38],0x1f
   140011d8b:	mov    QWORD PTR [rbx],rax
   140011d8e:	call   0x140011d08
   140011d93:	test   eax,eax
   140011d95:	jne    0x140011d75
   140011d97:	call   0x140012564
   140011d9c:	xor    eax,eax
   140011d9e:	add    rsp,0x20
   140011da2:	pop    rbx
   140011da3:	ret    
   140011da4:	xor    r8d,r8d
   140011da7:	movsd  QWORD PTR [rsp+0x8],xmm0
   140011dad:	mov    rdx,QWORD PTR [rsp+0x8]
   140011db2:	movabs rcx,0x7fffffffffffffff
   140011dbc:	mov    rax,rdx
   140011dbf:	and    rax,rcx
   140011dc2:	movabs rcx,0x4340000000000000
   140011dcc:	cmp    rdx,rax
   140011dcf:	setne  r8b
   140011dd3:	cmp    rax,rcx
   140011dd6:	jb     0x140011def
   140011dd8:	movabs rcx,0x7ff0000000000000
   140011de2:	cmp    rax,rcx
   140011de5:	jbe    0x140011e65
   140011de7:	mov    rcx,rdx
   140011dea:	jmp    0x140012af0
   140011def:	movabs rcx,0x3ff0000000000000
   140011df9:	cmp    rax,rcx
   140011dfc:	jae    0x140011e29
   140011dfe:	test   rax,rax
   140011e01:	je     0x140011e65
   140011e03:	test   r8,r8
   140011e06:	je     0x140011e1f
   140011e08:	movabs rax,0x8000000000000000
   140011e12:	mov    QWORD PTR [rsp+0x8],rax
   140011e17:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140011e1d:	jmp    0x140011e65
   140011e1f:	movsd  xmm0,QWORD PTR [rip+0x8709]        # 0x14001a530
   140011e27:	jmp    0x140011e65
   140011e29:	mov    rax,rdx
   140011e2c:	mov    ecx,0x33
   140011e31:	shr    rax,0x34
   140011e35:	sub    cl,al
   140011e37:	mov    eax,0x1
   140011e3c:	shl    rax,cl
   140011e3f:	dec    rax
   140011e42:	not    rax
   140011e45:	and    rax,rdx
   140011e48:	mov    QWORD PTR [rsp+0x8],rax
   140011e4d:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140011e53:	test   r8,r8
   140011e56:	jne    0x140011e65
   140011e58:	cmp    rax,rdx
   140011e5b:	je     0x140011e65
   140011e5d:	addsd  xmm0,QWORD PTR [rip+0x86cb]        # 0x14001a530
   140011e65:	ret    
   140011e66:	int3   
   140011e67:	int3   
   140011e68:	int3   
   140011e69:	int3   
   140011e6a:	int3   
   140011e6b:	int3   
   140011e6c:	int3   
   140011e6d:	int3   
   140011e6e:	int3   
   140011e6f:	int3   
   140011e70:	sub    rsp,0x58
   140011e74:	movdqa XMMWORD PTR [rsp+0x20],xmm6
   140011e7a:	cmp    DWORD PTR [rip+0xd79b],0x0        # 0x14001f61c
   140011e81:	jne    0x140012170
   140011e87:	movapd xmm3,xmm0
   140011e8b:	movapd xmm4,xmm0
   140011e8f:	psrlq  xmm3,0x34
   140011e94:	movq   rax,xmm0
   140011e99:	psubq  xmm3,XMMWORD PTR [rip+0x86df]        # 0x14001a580
   140011ea1:	movapd xmm5,xmm0
   140011ea5:	andpd  xmm5,XMMWORD PTR [rip+0x86a3]        # 0x14001a550
   140011ead:	comisd xmm5,QWORD PTR [rip+0x869b]        # 0x14001a550
   140011eb5:	je     0x140012140
   140011ebb:	movapd xmm2,xmm0
   140011ebf:	cvtdq2pd xmm6,xmm3
   140011ec3:	xorpd  xmm5,xmm5
   140011ec7:	comisd xmm0,xmm5
   140011ecb:	jbe    0x140012100
   140011ed1:	pand   xmm2,XMMWORD PTR [rip+0x86c7]        # 0x14001a5a0
   140011ed9:	subsd  xmm4,QWORD PTR [rip+0x874f]        # 0x14001a630
   140011ee1:	comisd xmm6,QWORD PTR [rip+0x87d7]        # 0x14001a6c0
   140011ee9:	je     0x1400120c7
   140011eef:	andpd  xmm4,XMMWORD PTR [rip+0x8829]        # 0x14001a720
   140011ef7:	mov    r9,rax
   140011efa:	and    rax,QWORD PTR [rip+0x86af]        # 0x14001a5b0
   140011f01:	and    r9,QWORD PTR [rip+0x86b8]        # 0x14001a5c0
   140011f08:	shl    r9,1
   140011f0b:	add    rax,r9
   140011f0e:	movq   xmm1,rax
   140011f13:	comisd xmm4,QWORD PTR [rip+0x87c5]        # 0x14001a6e0
   140011f1b:	jb     0x140012000
   140011f21:	shr    rax,0x2c
   140011f25:	por    xmm2,XMMWORD PTR [rip+0x8713]        # 0x14001a640
   140011f2d:	por    xmm1,XMMWORD PTR [rip+0x870b]        # 0x14001a640
   140011f35:	lea    r9,[rip+0x9884]        # 0x14001b7c0
   140011f3c:	subsd  xmm1,xmm2
   140011f40:	mulsd  xmm1,QWORD PTR [r9+rax*8]
   140011f46:	movapd xmm2,xmm1
   140011f4a:	movapd xmm0,xmm1
   140011f4e:	lea    r9,[rip+0x884b]        # 0x14001a7a0
   140011f55:	movsd  xmm3,QWORD PTR [rip+0x8753]        # 0x14001a6b0
   140011f5d:	movsd  xmm1,QWORD PTR [rip+0x871b]        # 0x14001a680
   140011f65:	mulsd  xmm3,xmm2
   140011f69:	mulsd  xmm1,xmm2
   140011f6d:	mulsd  xmm0,xmm2
   140011f71:	movapd xmm4,xmm0
   140011f75:	addsd  xmm3,QWORD PTR [rip+0x8723]        # 0x14001a6a0
   140011f7d:	addsd  xmm1,QWORD PTR [rip+0x86eb]        # 0x14001a670
   140011f85:	mulsd  xmm4,xmm0
   140011f89:	mulsd  xmm3,xmm2
   140011f8d:	mulsd  xmm1,xmm0
   140011f91:	addsd  xmm3,QWORD PTR [rip+0x86f7]        # 0x14001a690
   140011f99:	addsd  xmm1,xmm2
   140011f9d:	mulsd  xmm3,xmm4
   140011fa1:	addsd  xmm1,xmm3
   140011fa5:	movsd  xmm5,QWORD PTR [rip+0x8663]        # 0x14001a610
   140011fad:	mulsd  xmm1,QWORD PTR [rip+0x861b]        # 0x14001a5d0
   140011fb5:	mulsd  xmm5,xmm6
   140011fb9:	subsd  xmm5,xmm1
   140011fbd:	movsd  xmm0,QWORD PTR [r9+rax*8]
   140011fc3:	lea    rdx,[rip+0x8fe6]        # 0x14001afb0
   140011fca:	movsd  xmm2,QWORD PTR [rdx+rax*8]
   140011fcf:	movsd  xmm4,QWORD PTR [rip+0x8629]        # 0x14001a600
   140011fd7:	mulsd  xmm4,xmm6
   140011fdb:	addsd  xmm0,xmm4
   140011fdf:	addsd  xmm2,xmm5
   140011fe3:	addsd  xmm0,xmm2
   140011fe7:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140011fed:	add    rsp,0x58
   140011ff1:	ret    
   140011ff2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140012000:	movsd  xmm2,QWORD PTR [rip+0x8618]        # 0x14001a620
   140012008:	subsd  xmm0,QWORD PTR [rip+0x8620]        # 0x14001a630
   140012010:	addsd  xmm2,xmm0
   140012014:	movapd xmm1,xmm0
   140012018:	divsd  xmm1,xmm2
   14001201c:	movsd  xmm4,QWORD PTR [rip+0x871c]        # 0x14001a740
   140012024:	movsd  xmm5,QWORD PTR [rip+0x8734]        # 0x14001a760
   14001202c:	movapd xmm6,xmm0
   140012030:	mulsd  xmm6,xmm1
   140012034:	addsd  xmm1,xmm1
   140012038:	movapd xmm2,xmm1
   14001203c:	mulsd  xmm2,xmm1
   140012040:	mulsd  xmm4,xmm2
   140012044:	mulsd  xmm5,xmm2
   140012048:	addsd  xmm4,QWORD PTR [rip+0x86e0]        # 0x14001a730
   140012050:	addsd  xmm5,QWORD PTR [rip+0x86f8]        # 0x14001a750
   140012058:	mulsd  xmm2,xmm1
   14001205c:	mulsd  xmm4,xmm2
   140012060:	mulsd  xmm2,xmm2
   140012064:	mulsd  xmm2,xmm1
   140012068:	mulsd  xmm5,xmm2
   14001206c:	movsd  xmm2,QWORD PTR [rip+0x857c]        # 0x14001a5f0
   140012074:	addsd  xmm4,xmm5
   140012078:	subsd  xmm4,xmm6
   14001207c:	movsd  xmm6,QWORD PTR [rip+0x855c]        # 0x14001a5e0
   140012084:	movapd xmm3,xmm0
   140012088:	pand   xmm3,XMMWORD PTR [rip+0x86e0]        # 0x14001a770
   140012090:	subsd  xmm0,xmm3
   140012094:	addsd  xmm4,xmm0
   140012098:	movapd xmm0,xmm3
   14001209c:	movapd xmm1,xmm4
   1400120a0:	mulsd  xmm4,xmm2
   1400120a4:	mulsd  xmm0,xmm2
   1400120a8:	mulsd  xmm1,xmm6
   1400120ac:	mulsd  xmm3,xmm6
   1400120b0:	addsd  xmm0,xmm4
   1400120b4:	addsd  xmm0,xmm1
   1400120b8:	addsd  xmm0,xmm3
   1400120bc:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400120c2:	add    rsp,0x58
   1400120c6:	ret    
   1400120c7:	por    xmm2,XMMWORD PTR [rip+0x8561]        # 0x14001a630
   1400120cf:	subsd  xmm2,QWORD PTR [rip+0x8559]        # 0x14001a630
   1400120d7:	movsd  xmm5,xmm2
   1400120db:	pand   xmm2,XMMWORD PTR [rip+0x84bd]        # 0x14001a5a0
   1400120e3:	movq   rax,xmm2
   1400120e8:	psrlq  xmm5,0x34
   1400120ed:	psubd  xmm5,XMMWORD PTR [rip+0x85db]        # 0x14001a6d0
   1400120f5:	cvtdq2pd xmm6,xmm5
   1400120f9:	jmp    0x140011eef
   1400120fe:	xchg   ax,ax
   140012100:	jne    0x140012120
   140012102:	movsd  xmm1,QWORD PTR [rip+0x8436]        # 0x14001a540
   14001210a:	mov    r8d,DWORD PTR [rip+0x866f]        # 0x14001a780
   140012111:	call   0x140012b80
   140012116:	jmp    0x140012160
   140012118:	nop    DWORD PTR [rax+rax*1+0x0]
   140012120:	movsd  xmm1,QWORD PTR [rip+0x8438]        # 0x14001a560
   140012128:	mov    r8d,DWORD PTR [rip+0x8655]        # 0x14001a784
   14001212f:	call   0x140012b80
   140012134:	jmp    0x140012160
   140012136:	data16 nop WORD PTR [rax+rax*1+0x0]
   140012140:	cmp    rax,QWORD PTR [rip+0x8409]        # 0x14001a550
   140012147:	je     0x140012160
   140012149:	cmp    rax,QWORD PTR [rip+0x83f0]        # 0x14001a540
   140012150:	je     0x140012120
   140012152:	or     rax,QWORD PTR [rip+0x8417]        # 0x14001a570
   140012159:	movq   xmm0,rax
   14001215e:	xchg   ax,ax
   140012160:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140012166:	add    rsp,0x58
   14001216a:	ret    
   14001216b:	nop    DWORD PTR [rax+rax*1+0x0]
   140012170:	xor    rax,rax
   140012173:	vpsrlq xmm3,xmm0,0x34
   140012178:	vmovq  rax,xmm0
   14001217d:	vpsubq xmm3,xmm3,XMMWORD PTR [rip+0x83fb]        # 0x14001a580
   140012185:	vcvtdq2pd xmm6,xmm3
   140012189:	vpand  xmm5,xmm0,XMMWORD PTR [rip+0x83bf]        # 0x14001a550
   140012191:	vcomisd xmm5,QWORD PTR [rip+0x83b7]        # 0x14001a550
   140012199:	je     0x1400123e0
   14001219f:	vpxor  xmm5,xmm5,xmm5
   1400121a3:	vcomisd xmm0,xmm5
   1400121a7:	jbe    0x140012390
   1400121ad:	vpand  xmm2,xmm0,XMMWORD PTR [rip+0x83eb]        # 0x14001a5a0
   1400121b5:	vsubsd xmm4,xmm0,QWORD PTR [rip+0x8473]        # 0x14001a630
   1400121bd:	vcomisd xmm6,QWORD PTR [rip+0x84fb]        # 0x14001a6c0
   1400121c5:	je     0x140012359
   1400121cb:	vpand  xmm1,xmm0,XMMWORD PTR [rip+0x83dd]        # 0x14001a5b0
   1400121d3:	vpand  xmm3,xmm0,XMMWORD PTR [rip+0x83e5]        # 0x14001a5c0
   1400121db:	vpsllq xmm3,xmm3,0x1
   1400121e0:	vpaddq xmm1,xmm3,xmm1
   1400121e4:	vmovq  rax,xmm1
   1400121e9:	vpand  xmm4,xmm4,XMMWORD PTR [rip+0x852f]        # 0x14001a720
   1400121f1:	vcomisd xmm4,QWORD PTR [rip+0x84e7]        # 0x14001a6e0
   1400121f9:	jb     0x1400122b0
   1400121ff:	shr    rax,0x2c
   140012203:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0x8435]        # 0x14001a640
   14001220b:	vpor   xmm1,xmm1,XMMWORD PTR [rip+0x842d]        # 0x14001a640
   140012213:	lea    r9,[rip+0x95a6]        # 0x14001b7c0
   14001221a:	vsubsd xmm1,xmm1,xmm2
   14001221e:	vmulsd xmm1,xmm1,QWORD PTR [r9+rax*8]
   140012224:	lea    r9,[rip+0x8575]        # 0x14001a7a0
   14001222b:	vmulsd xmm0,xmm1,xmm1
   14001222f:	vmovsd xmm3,QWORD PTR [rip+0x8479]        # 0x14001a6b0
   140012237:	vmovsd xmm5,QWORD PTR [rip+0x8441]        # 0x14001a680
   14001223f:	vfmadd213sd xmm3,xmm1,QWORD PTR [rip+0x8458]        # 0x14001a6a0
   140012248:	vfmadd213sd xmm5,xmm1,QWORD PTR [rip+0x83ef]        # 0x14001a640
   140012251:	movsd  xmm4,xmm0
   140012255:	vfmadd213sd xmm3,xmm1,QWORD PTR [rip+0x8432]        # 0x14001a690
   14001225e:	vmulsd xmm4,xmm0,xmm0
   140012262:	vfmadd231sd xmm1,xmm5,xmm0
   140012267:	vfmadd231sd xmm1,xmm3,xmm4
   14001226c:	vmulsd xmm1,xmm1,QWORD PTR [rip+0x835c]        # 0x14001a5d0
   140012274:	vmovsd xmm5,QWORD PTR [rip+0x8394]        # 0x14001a610
   14001227c:	vfmsub213sd xmm5,xmm6,xmm1
   140012281:	movsd  xmm0,QWORD PTR [r9+rax*8]
   140012287:	lea    rdx,[rip+0x8d22]        # 0x14001afb0
   14001228e:	movsd  xmm2,QWORD PTR [rdx+rax*8]
   140012293:	vaddsd xmm2,xmm2,xmm5
   140012297:	vfmadd231sd xmm0,xmm6,QWORD PTR [rip+0x8360]        # 0x14001a600
   1400122a0:	vaddsd xmm0,xmm0,xmm2
   1400122a4:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400122aa:	add    rsp,0x58
   1400122ae:	ret    
   1400122af:	nop
   1400122b0:	vmovsd xmm2,QWORD PTR [rip+0x8368]        # 0x14001a620
   1400122b8:	vsubsd xmm0,xmm0,QWORD PTR [rip+0x8370]        # 0x14001a630
   1400122c0:	vaddsd xmm2,xmm2,xmm0
   1400122c4:	vdivsd xmm1,xmm0,xmm2
   1400122c8:	vmovsd xmm4,QWORD PTR [rip+0x8470]        # 0x14001a740
   1400122d0:	vmovsd xmm5,QWORD PTR [rip+0x8488]        # 0x14001a760
   1400122d8:	vmulsd xmm6,xmm0,xmm1
   1400122dc:	vaddsd xmm1,xmm1,xmm1
   1400122e0:	vmulsd xmm2,xmm1,xmm1
   1400122e4:	vfmadd213sd xmm4,xmm2,QWORD PTR [rip+0x8443]        # 0x14001a730
   1400122ed:	vfmadd213sd xmm5,xmm2,QWORD PTR [rip+0x845a]        # 0x14001a750
   1400122f6:	vmulsd xmm2,xmm2,xmm1
   1400122fa:	vmulsd xmm4,xmm4,xmm2
   1400122fe:	vmulsd xmm2,xmm2,xmm2
   140012302:	vmulsd xmm2,xmm2,xmm1
   140012306:	vmulsd xmm5,xmm5,xmm2
   14001230a:	vaddsd xmm4,xmm4,xmm5
   14001230e:	vsubsd xmm4,xmm4,xmm6
   140012312:	vpand  xmm3,xmm0,XMMWORD PTR [rip+0x8456]        # 0x14001a770
   14001231a:	vsubsd xmm0,xmm0,xmm3
   14001231e:	vaddsd xmm4,xmm4,xmm0
   140012322:	vmulsd xmm1,xmm4,QWORD PTR [rip+0x82b6]        # 0x14001a5e0
   14001232a:	vmulsd xmm4,xmm4,QWORD PTR [rip+0x82be]        # 0x14001a5f0
   140012332:	vmulsd xmm0,xmm3,QWORD PTR [rip+0x82b6]        # 0x14001a5f0
   14001233a:	vmulsd xmm3,xmm3,QWORD PTR [rip+0x829e]        # 0x14001a5e0
   140012342:	vaddsd xmm0,xmm0,xmm4
   140012346:	vaddsd xmm0,xmm0,xmm1
   14001234a:	vaddsd xmm0,xmm0,xmm3
   14001234e:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140012354:	add    rsp,0x58
   140012358:	ret    
   140012359:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0x82cf]        # 0x14001a630
   140012361:	vsubsd xmm2,xmm2,QWORD PTR [rip+0x82c7]        # 0x14001a630
   140012369:	vpsrlq xmm5,xmm2,0x34
   14001236e:	vpand  xmm2,xmm2,XMMWORD PTR [rip+0x822a]        # 0x14001a5a0
   140012376:	vmovapd xmm0,xmm2
   14001237a:	vpsubd xmm5,xmm5,XMMWORD PTR [rip+0x834e]        # 0x14001a6d0
   140012382:	vcvtdq2pd xmm6,xmm5
   140012386:	jmp    0x1400121cb
   14001238b:	nop    DWORD PTR [rax+rax*1+0x0]
   140012390:	jne    0x1400123c0
   140012392:	vmovsd xmm1,QWORD PTR [rip+0x81a6]        # 0x14001a540
   14001239a:	mov    r8d,DWORD PTR [rip+0x83df]        # 0x14001a780
   1400123a1:	call   0x140012b80
   1400123a6:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400123ac:	add    rsp,0x58
   1400123b0:	ret    
   1400123b1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400123c0:	vmovsd xmm1,QWORD PTR [rip+0x8198]        # 0x14001a560
   1400123c8:	mov    r8d,DWORD PTR [rip+0x83b5]        # 0x14001a784
   1400123cf:	call   0x140012b80
   1400123d4:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400123da:	add    rsp,0x58
   1400123de:	ret    
   1400123df:	nop
   1400123e0:	cmp    rax,QWORD PTR [rip+0x8169]        # 0x14001a550
   1400123e7:	je     0x140012410
   1400123e9:	cmp    rax,QWORD PTR [rip+0x8150]        # 0x14001a540
   1400123f0:	je     0x1400123c0
   1400123f2:	or     rax,QWORD PTR [rip+0x8177]        # 0x14001a570
   1400123f9:	movq   xmm1,rax
   1400123fe:	mov    r8d,DWORD PTR [rip+0x8383]        # 0x14001a788
   140012405:	call   0x140012b80
   14001240a:	jmp    0x140012410
   14001240c:	nop    DWORD PTR [rax+0x0]
   140012410:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140012416:	add    rsp,0x58
   14001241a:	ret    
   14001241b:	int3   
   14001241c:	rex push rbx
   14001241e:	sub    rsp,0x20
   140012422:	inc    DWORD PTR [rip+0xc7d8]        # 0x14001ec00
   140012428:	mov    rbx,rcx
   14001242b:	mov    ecx,0x1000
   140012430:	call   0x140007d04
   140012435:	xor    ecx,ecx
   140012437:	mov    QWORD PTR [rbx+0x8],rax
   14001243b:	call   0x140007cc4
   140012440:	cmp    QWORD PTR [rbx+0x8],0x0
   140012445:	je     0x140012455
   140012447:	lock or DWORD PTR [rbx+0x14],0x40
   14001244c:	mov    DWORD PTR [rbx+0x20],0x1000
   140012453:	jmp    0x14001246c
   140012455:	lock or DWORD PTR [rbx+0x14],0x400
   14001245d:	lea    rax,[rbx+0x1c]
   140012461:	mov    DWORD PTR [rbx+0x20],0x2
   140012468:	mov    QWORD PTR [rbx+0x8],rax
   14001246c:	mov    rax,QWORD PTR [rbx+0x8]
   140012470:	and    DWORD PTR [rbx+0x10],0x0
   140012474:	mov    QWORD PTR [rbx],rax
   140012477:	add    rsp,0x20
   14001247b:	pop    rbx
   14001247c:	ret    
   14001247d:	int3   
   14001247e:	int3   
   14001247f:	int3   
   140012480:	sub    rsp,0x48
   140012484:	and    QWORD PTR [rsp+0x30],0x0
   14001248a:	lea    rcx,[rip+0x82ff]        # 0x14001a790
   140012491:	and    DWORD PTR [rsp+0x28],0x0
   140012496:	mov    r8d,0x3
   14001249c:	xor    r9d,r9d
   14001249f:	mov    DWORD PTR [rsp+0x20],r8d
   1400124a4:	mov    edx,0x40000000
   1400124a9:	call   QWORD PTR [rip+0x1d99]        # 0x140014248
   1400124af:	mov    QWORD PTR [rip+0xc45a],rax        # 0x14001e910
   1400124b6:	add    rsp,0x48
   1400124ba:	ret    
   1400124bb:	int3   
   1400124bc:	sub    rsp,0x28
   1400124c0:	mov    rcx,QWORD PTR [rip+0xc449]        # 0x14001e910
   1400124c7:	lea    rax,[rcx+0x2]
   1400124cb:	cmp    rax,0x1
   1400124cf:	jbe    0x1400124d7
   1400124d1:	call   QWORD PTR [rip+0x1b39]        # 0x140014010
   1400124d7:	add    rsp,0x28
   1400124db:	ret    
   1400124dc:	sub    rsp,0x28
   1400124e0:	xor    edx,edx
   1400124e2:	xor    ecx,ecx
   1400124e4:	call   0x1400125b8
   1400124e9:	and    eax,0x31f
   1400124ee:	add    rsp,0x28
   1400124f2:	ret    
   1400124f3:	int3   
   1400124f4:	sub    rsp,0x28
   1400124f8:	call   0x1400125c4
   1400124fd:	and    eax,0x1f
   140012500:	add    rsp,0x28
   140012504:	ret    
   140012505:	int3   
   140012506:	int3   
   140012507:	int3   
   140012508:	mov    edx,0x8031f
   14001250d:	jmp    0x1400125b8
   140012512:	int3   
   140012513:	int3   
   140012514:	rex push rbx
   140012516:	sub    rsp,0x20
   14001251a:	mov    ebx,ecx
   14001251c:	call   0x140012c50
   140012521:	and    eax,0xffffffc2
   140012524:	xor    ecx,ecx
   140012526:	test   bl,0x1f
   140012529:	je     0x140012558
   14001252b:	mov    dl,bl
   14001252d:	lea    r8d,[rcx+0x1]
   140012531:	and    dl,0x10
   140012534:	cmovne ecx,r8d
   140012538:	test   bl,0x8
   14001253b:	je     0x140012540
   14001253d:	or     ecx,0x4
   140012540:	test   bl,0x4
   140012543:	je     0x140012548
   140012545:	or     ecx,0x8
   140012548:	test   bl,0x2
   14001254b:	je     0x140012550
   14001254d:	or     ecx,0x10
   140012550:	test   r8b,bl
   140012553:	je     0x140012558
   140012555:	or     ecx,0x20
   140012558:	or     ecx,eax
   14001255a:	add    rsp,0x20
   14001255e:	pop    rbx
   14001255f:	jmp    0x140012c60
   140012564:	rex push rbx
   140012566:	sub    rsp,0x20
   14001256a:	call   0x140012c50
   14001256f:	mov    ebx,eax
   140012571:	call   0x140012c6a
   140012576:	xor    eax,eax
   140012578:	test   bl,0x3f
   14001257b:	je     0x1400125b0
   14001257d:	mov    cl,bl
   14001257f:	lea    edx,[rax+0x10]
   140012582:	and    cl,0x1
   140012585:	cmovne eax,edx
   140012588:	test   bl,0x4
   14001258b:	je     0x140012590
   14001258d:	or     eax,0x8
   140012590:	test   bl,0x8
   140012593:	je     0x140012598
   140012595:	or     eax,0x4
   140012598:	test   dl,bl
   14001259a:	je     0x14001259f
   14001259c:	or     eax,0x2
   14001259f:	test   bl,0x20
   1400125a2:	je     0x1400125a7
   1400125a4:	or     eax,0x1
   1400125a7:	test   bl,0x2
   1400125aa:	je     0x1400125b0
   1400125ac:	bts    eax,0x13
   1400125b0:	add    rsp,0x20
   1400125b4:	pop    rbx
   1400125b5:	ret    
   1400125b6:	int3   
   1400125b7:	int3   
   1400125b8:	btr    edx,0x13
   1400125bc:	jmp    0x14001260c
   1400125c1:	int3   
   1400125c2:	int3   
   1400125c3:	int3   
   1400125c4:	stmxcsr DWORD PTR [rsp+0x8]
   1400125c9:	mov    edx,DWORD PTR [rsp+0x8]
   1400125cd:	xor    ecx,ecx
   1400125cf:	test   dl,0x3f
   1400125d2:	je     0x140012609
   1400125d4:	mov    al,dl
   1400125d6:	lea    r8d,[rcx+0x10]
   1400125da:	and    al,0x1
   1400125dc:	cmovne ecx,r8d
   1400125e0:	test   dl,0x4
   1400125e3:	je     0x1400125e8
   1400125e5:	or     ecx,0x8
   1400125e8:	test   dl,0x8
   1400125eb:	je     0x1400125f0
   1400125ed:	or     ecx,0x4
   1400125f0:	test   r8b,dl
   1400125f3:	je     0x1400125f8
   1400125f5:	or     ecx,0x2
   1400125f8:	test   dl,0x20
   1400125fb:	je     0x140012600
   1400125fd:	or     ecx,0x1
   140012600:	test   dl,0x2
   140012603:	je     0x140012609
   140012605:	bts    ecx,0x13
   140012609:	mov    eax,ecx
   14001260b:	ret    
   14001260c:	mov    QWORD PTR [rsp+0x10],rbx
   140012611:	mov    QWORD PTR [rsp+0x18],rsi
   140012616:	mov    QWORD PTR [rsp+0x20],rdi
   14001261b:	push   r12
   14001261d:	push   r14
   14001261f:	push   r15
   140012621:	sub    rsp,0x20
   140012625:	mov    ebx,edx
   140012627:	mov    esi,ecx
   140012629:	and    ebx,0x308031f
   14001262f:	call   0x140012c50
   140012634:	mov    r9d,eax
   140012637:	xor    edi,edi
   140012639:	mov    r8b,al
   14001263c:	mov    r11d,0x80
   140012642:	mov    eax,edi
   140012644:	lea    ecx,[rdi+0x10]
   140012647:	and    r8b,r11b
   14001264a:	cmovne eax,ecx
   14001264d:	mov    r12d,0x200
   140012653:	test   r12d,r9d
   140012656:	je     0x14001265b
   140012658:	or     eax,0x8
   14001265b:	bt     r9d,0xa
   140012660:	jae    0x140012665
   140012662:	or     eax,0x4
   140012665:	mov    r8d,0x800
   14001266b:	test   r8d,r9d
   14001266e:	je     0x140012673
   140012670:	or     eax,0x2
   140012673:	mov    r10d,0x1000
   140012679:	test   r10d,r9d
   14001267c:	je     0x140012681
   14001267e:	or     eax,0x1
   140012681:	mov    r14d,0x100
   140012687:	test   r14d,r9d
   14001268a:	je     0x140012690
   14001268c:	bts    eax,0x13
   140012690:	mov    ecx,r9d
   140012693:	mov    r15d,0x6000
   140012699:	and    ecx,r15d
   14001269c:	je     0x1400126c2
   14001269e:	cmp    ecx,0x2000
   1400126a4:	je     0x1400126bf
   1400126a6:	cmp    ecx,0x4000
   1400126ac:	je     0x1400126ba
   1400126ae:	cmp    ecx,r15d
   1400126b1:	jne    0x1400126c2
   1400126b3:	or     eax,0x300
   1400126b8:	jmp    0x1400126c2
   1400126ba:	or     eax,r12d
   1400126bd:	jmp    0x1400126c2
   1400126bf:	or     eax,r14d
   1400126c2:	mov    edx,0x8040
   1400126c7:	and    r9d,edx
   1400126ca:	sub    r9d,0x40
   1400126ce:	je     0x1400126ec
   1400126d0:	sub    r9d,0x7fc0
   1400126d7:	je     0x1400126e5
   1400126d9:	cmp    r9d,0x40
   1400126dd:	jne    0x1400126f0
   1400126df:	bts    eax,0x18
   1400126e3:	jmp    0x1400126f0
   1400126e5:	or     eax,0x3000000
   1400126ea:	jmp    0x1400126f0
   1400126ec:	bts    eax,0x19
   1400126f0:	mov    ecx,ebx
   1400126f2:	not    ecx
   1400126f4:	and    ecx,eax
   1400126f6:	and    esi,ebx
   1400126f8:	or     ecx,esi
   1400126fa:	cmp    ecx,eax
   1400126fc:	je     0x140012888
   140012702:	mov    al,cl
   140012704:	mov    esi,0x10
   140012709:	mov    ebx,edi
   14001270b:	and    al,sil
   14001270e:	cmovne ebx,r11d
   140012712:	mov    DWORD PTR [rsp+0x40],ebx
   140012716:	test   cl,0x8
   140012719:	je     0x140012722
   14001271b:	or     ebx,r12d
   14001271e:	mov    DWORD PTR [rsp+0x40],ebx
   140012722:	test   cl,0x4
   140012725:	je     0x14001272f
   140012727:	bts    ebx,0xa
   14001272b:	mov    DWORD PTR [rsp+0x40],ebx
   14001272f:	test   cl,0x2
   140012732:	je     0x14001273b
   140012734:	or     ebx,r8d
   140012737:	mov    DWORD PTR [rsp+0x40],ebx
   14001273b:	test   cl,0x1
   14001273e:	je     0x140012747
   140012740:	or     ebx,r10d
   140012743:	mov    DWORD PTR [rsp+0x40],ebx
   140012747:	bt     ecx,0x13
   14001274b:	jae    0x140012754
   14001274d:	or     ebx,r14d
   140012750:	mov    DWORD PTR [rsp+0x40],ebx
   140012754:	mov    eax,ecx
   140012756:	and    eax,0x300
   14001275b:	je     0x140012781
   14001275d:	cmp    eax,r14d
   140012760:	je     0x140012779
   140012762:	cmp    eax,r12d
   140012765:	je     0x140012773
   140012767:	cmp    eax,0x300
   14001276c:	jne    0x140012781
   14001276e:	or     ebx,r15d
   140012771:	jmp    0x14001277d
   140012773:	bts    ebx,0xe
   140012777:	jmp    0x14001277d
   140012779:	bts    ebx,0xd
   14001277d:	mov    DWORD PTR [rsp+0x40],ebx
   140012781:	and    ecx,0x3000000
   140012787:	cmp    ecx,0x1000000
   14001278d:	je     0x1400127aa
   14001278f:	cmp    ecx,0x2000000
   140012795:	je     0x1400127a5
   140012797:	cmp    ecx,0x3000000
   14001279d:	jne    0x1400127b0
   14001279f:	bts    ebx,0xf
   1400127a3:	jmp    0x1400127ac
   1400127a5:	or     ebx,0x40
   1400127a8:	jmp    0x1400127ac
   1400127aa:	or     ebx,edx
   1400127ac:	mov    DWORD PTR [rsp+0x40],ebx
   1400127b0:	cmp    BYTE PTR [rip+0xc161],dil        # 0x14001e918
   1400127b7:	je     0x1400127f5
   1400127b9:	test   bl,0x40
   1400127bc:	je     0x1400127f5
   1400127be:	mov    ecx,ebx
   1400127c0:	call   0x140012c60
   1400127c5:	jmp    0x1400127f3
   1400127c7:	mov    BYTE PTR [rip+0xc14a],0x0        # 0x14001e918
   1400127ce:	mov    ebx,DWORD PTR [rsp+0x40]
   1400127d2:	and    ebx,0xffffffbf
   1400127d5:	mov    ecx,ebx
   1400127d7:	call   0x140012c60
   1400127dc:	xor    edi,edi
   1400127de:	lea    esi,[rdi+0x10]
   1400127e1:	mov    r12d,0x200
   1400127e7:	mov    r14d,0x100
   1400127ed:	mov    r15d,0x6000
   1400127f3:	jmp    0x1400127ff
   1400127f5:	and    ebx,0xffffffbf
   1400127f8:	mov    ecx,ebx
   1400127fa:	call   0x140012c60
   1400127ff:	mov    al,bl
   140012801:	and    al,0x80
   140012803:	cmovne edi,esi
   140012806:	test   r12d,ebx
   140012809:	je     0x14001280e
   14001280b:	or     edi,0x8
   14001280e:	bt     ebx,0xa
   140012812:	jae    0x140012817
   140012814:	or     edi,0x4
   140012817:	bt     ebx,0xb
   14001281b:	jae    0x140012820
   14001281d:	or     edi,0x2
   140012820:	bt     ebx,0xc
   140012824:	jae    0x140012829
   140012826:	or     edi,0x1
   140012829:	test   r14d,ebx
   14001282c:	je     0x140012832
   14001282e:	bts    edi,0x13
   140012832:	mov    eax,ebx
   140012834:	and    eax,r15d
   140012837:	je     0x14001285c
   140012839:	cmp    eax,0x2000
   14001283e:	je     0x140012859
   140012840:	cmp    eax,0x4000
   140012845:	je     0x140012854
   140012847:	cmp    eax,r15d
   14001284a:	jne    0x14001285c
   14001284c:	or     edi,0x300
   140012852:	jmp    0x14001285c
   140012854:	or     edi,r12d
   140012857:	jmp    0x14001285c
   140012859:	or     edi,r14d
   14001285c:	and    ebx,0x8040
   140012862:	sub    ebx,0x40
   140012865:	je     0x140012882
   140012867:	sub    ebx,0x7fc0
   14001286d:	je     0x14001287a
   14001286f:	cmp    ebx,0x40
   140012872:	jne    0x140012886
   140012874:	bts    edi,0x18
   140012878:	jmp    0x140012886
   14001287a:	or     edi,0x3000000
   140012880:	jmp    0x140012886
   140012882:	bts    edi,0x19
   140012886:	mov    eax,edi
   140012888:	mov    rbx,QWORD PTR [rsp+0x48]
   14001288d:	mov    rsi,QWORD PTR [rsp+0x50]
   140012892:	mov    rdi,QWORD PTR [rsp+0x58]
   140012897:	add    rsp,0x20
   14001289b:	pop    r15
   14001289d:	pop    r14
   14001289f:	pop    r12
   1400128a1:	ret    
   1400128a2:	int3   
   1400128a3:	int3   
   1400128a4:	mov    rax,rsp
   1400128a7:	push   rbx
   1400128a8:	sub    rsp,0x50
   1400128ac:	movsd  xmm0,QWORD PTR [rsp+0x80]
   1400128b5:	mov    ebx,ecx
   1400128b7:	movsd  xmm1,QWORD PTR [rsp+0x88]
   1400128c0:	mov    edx,0xffc0
   1400128c5:	mov    DWORD PTR [rax-0x38],ecx
   1400128c8:	mov    rcx,QWORD PTR [rsp+0x90]
   1400128d0:	movsd  QWORD PTR [rax-0x20],xmm0
   1400128d5:	movsd  QWORD PTR [rax-0x18],xmm1
   1400128da:	movsd  QWORD PTR [rax-0x28],xmm3
   1400128df:	mov    QWORD PTR [rax-0x30],r8
   1400128e3:	call   0x140013020
   1400128e8:	lea    rcx,[rsp+0x20]
   1400128ed:	call   0x1400068e4
   1400128f2:	test   eax,eax
   1400128f4:	jne    0x1400128fd
   1400128f6:	mov    ecx,ebx
   1400128f8:	call   0x140012fd0
   1400128fd:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140012903:	add    rsp,0x50
   140012907:	pop    rbx
   140012908:	ret    
   140012909:	int3   
   14001290a:	int3   
   14001290b:	int3   
   14001290c:	mov    QWORD PTR [rsp+0x8],rbx
   140012911:	mov    QWORD PTR [rsp+0x10],rsi
   140012916:	push   rdi
   140012917:	sub    rsp,0x20
   14001291b:	mov    ebx,ecx
   14001291d:	mov    rsi,rdx
   140012920:	and    ebx,0x1f
   140012923:	mov    edi,ecx
   140012925:	test   cl,0x8
   140012928:	je     0x14001293d
   14001292a:	test   dl,dl
   14001292c:	jns    0x14001293d
   14001292e:	mov    ecx,0x1
   140012933:	call   0x14001309c
   140012938:	and    ebx,0xfffffff7
   14001293b:	jmp    0x140012994
   14001293d:	mov    ecx,0x4
   140012942:	test   cl,dil
   140012945:	je     0x140012958
   140012947:	bt     rdx,0x9
   14001294c:	jae    0x140012958
   14001294e:	call   0x14001309c
   140012953:	and    ebx,0xfffffffb
   140012956:	jmp    0x140012994
   140012958:	test   dil,0x1
   14001295c:	je     0x140012974
   14001295e:	bt     rdx,0xa
   140012963:	jae    0x140012974
   140012965:	mov    ecx,0x8
   14001296a:	call   0x14001309c
   14001296f:	and    ebx,0xfffffffe
   140012972:	jmp    0x140012994
   140012974:	test   dil,0x2
   140012978:	je     0x140012994
   14001297a:	bt     rdx,0xb
   14001297f:	jae    0x140012994
   140012981:	test   dil,0x10
   140012985:	je     0x140012991
   140012987:	mov    ecx,0x10
   14001298c:	call   0x14001309c
   140012991:	and    ebx,0xfffffffd
   140012994:	test   dil,0x10
   140012998:	je     0x1400129ae
   14001299a:	bt     rsi,0xc
   14001299f:	jae    0x1400129ae
   1400129a1:	mov    ecx,0x20
   1400129a6:	call   0x14001309c
   1400129ab:	and    ebx,0xffffffef
   1400129ae:	mov    rsi,QWORD PTR [rsp+0x38]
   1400129b3:	xor    eax,eax
   1400129b5:	test   ebx,ebx
   1400129b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400129bc:	sete   al
   1400129bf:	add    rsp,0x20
   1400129c3:	pop    rdi
   1400129c4:	ret    
   1400129c5:	int3   
   1400129c6:	int3   
   1400129c7:	int3   
   1400129c8:	mov    rax,rsp
   1400129cb:	push   rbp
   1400129cc:	push   rbx
   1400129cd:	push   rsi
   1400129ce:	push   rdi
   1400129cf:	push   r14
   1400129d1:	lea    rbp,[rax-0x37]
   1400129d5:	sub    rsp,0xf0
   1400129dc:	movaps XMMWORD PTR [rax-0x38],xmm6
   1400129e0:	mov    rax,QWORD PTR [rip+0xb631]        # 0x14001e018
   1400129e7:	xor    rax,rsp
   1400129ea:	mov    QWORD PTR [rbp-0x11],rax
   1400129ee:	mov    esi,edx
   1400129f0:	mov    r14,rcx
   1400129f3:	mov    edx,0xffc0
   1400129f8:	mov    ecx,0x1f80
   1400129fd:	mov    edi,r9d
   140012a00:	mov    rbx,r8
   140012a03:	call   0x140013020
   140012a08:	mov    ecx,DWORD PTR [rbp+0x5f]
   140012a0b:	mov    QWORD PTR [rsp+0x40],rax
   140012a10:	mov    QWORD PTR [rsp+0x50],rbx
   140012a15:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140012a1b:	mov    rdx,QWORD PTR [rsp+0x40]
   140012a20:	movsd  QWORD PTR [rsp+0x48],xmm0
   140012a26:	call   0x14001290c
   140012a2b:	movsd  xmm6,QWORD PTR [rbp+0x77]
   140012a30:	test   eax,eax
   140012a32:	jne    0x140012a74
   140012a34:	cmp    DWORD PTR [rbp+0x7f],0x2
   140012a38:	jne    0x140012a4b
   140012a3a:	mov    eax,DWORD PTR [rbp-0x41]
   140012a3d:	and    eax,0xffffffe3
   140012a40:	movsd  QWORD PTR [rbp-0x51],xmm6
   140012a45:	or     eax,0x3
   140012a48:	mov    DWORD PTR [rbp-0x41],eax
   140012a4b:	mov    r8d,DWORD PTR [rbp+0x5f]
   140012a4f:	lea    rax,[rsp+0x48]
   140012a54:	mov    QWORD PTR [rsp+0x28],rax
   140012a59:	lea    rdx,[rsp+0x40]
   140012a5e:	lea    rax,[rbp+0x6f]
   140012a62:	mov    r9d,esi
   140012a65:	lea    rcx,[rsp+0x60]
   140012a6a:	mov    QWORD PTR [rsp+0x20],rax
   140012a6f:	call   0x140012ca0
   140012a74:	call   0x1400068bc
   140012a79:	test   al,al
   140012a7b:	je     0x140012ab1
   140012a7d:	test   edi,edi
   140012a7f:	je     0x140012ab1
   140012a81:	mov    rax,QWORD PTR [rsp+0x40]
   140012a86:	mov    r8,r14
   140012a89:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140012a8f:	mov    ecx,edi
   140012a91:	movsd  xmm3,QWORD PTR [rbp+0x6f]
   140012a96:	mov    edx,DWORD PTR [rbp+0x67]
   140012a99:	mov    QWORD PTR [rsp+0x30],rax
   140012a9e:	movsd  QWORD PTR [rsp+0x28],xmm0
   140012aa4:	movsd  QWORD PTR [rsp+0x20],xmm6
   140012aaa:	call   0x1400128a4
   140012aaf:	jmp    0x140012acd
   140012ab1:	mov    ecx,edi
   140012ab3:	call   0x140012fd0
   140012ab8:	mov    rcx,QWORD PTR [rsp+0x40]
   140012abd:	mov    edx,0xffc0
   140012ac2:	call   0x140013020
   140012ac7:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140012acd:	mov    rcx,QWORD PTR [rbp-0x11]
   140012ad1:	xor    rcx,rsp
   140012ad4:	call   0x140013230
   140012ad9:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   140012ae1:	add    rsp,0xf0
   140012ae8:	pop    r14
   140012aea:	pop    rdi
   140012aeb:	pop    rsi
   140012aec:	pop    rbx
   140012aed:	pop    rbp
   140012aee:	ret    
   140012aef:	int3   
   140012af0:	movabs rax,0x8000000000000
   140012afa:	or     rcx,rax
   140012afd:	mov    QWORD PTR [rsp+0x8],rcx
   140012b02:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140012b08:	ret    
   140012b09:	int3   
   140012b0a:	int3   
   140012b0b:	int3   
   140012b0c:	int3   
   140012b0d:	int3   
   140012b0e:	int3   
   140012b0f:	int3   
   140012b10:	rex push rbx
   140012b12:	sub    rsp,0x10
   140012b16:	xor    r8d,r8d
   140012b19:	xor    ecx,ecx
   140012b1b:	mov    DWORD PTR [rip+0xcaf6],r8d        # 0x14001f618
   140012b22:	lea    r9d,[r8+0x1]
   140012b26:	mov    eax,r9d
   140012b29:	cpuid  
   140012b2b:	mov    DWORD PTR [rsp],eax
   140012b2e:	mov    eax,0x18001000
   140012b33:	mov    DWORD PTR [rsp+0x8],ecx
   140012b37:	and    ecx,eax
   140012b39:	mov    DWORD PTR [rsp+0x4],ebx
   140012b3d:	mov    DWORD PTR [rsp+0xc],edx
   140012b41:	cmp    ecx,eax
   140012b43:	jne    0x140012b71
   140012b45:	xor    ecx,ecx
   140012b47:	xgetbv 
   140012b4a:	shl    rdx,0x20
   140012b4e:	or     rdx,rax
   140012b51:	mov    QWORD PTR [rsp+0x20],rdx
   140012b56:	mov    rax,QWORD PTR [rsp+0x20]
   140012b5b:	mov    r8d,DWORD PTR [rip+0xcab6]        # 0x14001f618
   140012b62:	and    al,0x6
   140012b64:	cmp    al,0x6
   140012b66:	cmove  r8d,r9d
   140012b6a:	mov    DWORD PTR [rip+0xcaa7],r8d        # 0x14001f618
   140012b71:	mov    DWORD PTR [rip+0xcaa4],r8d        # 0x14001f61c
   140012b78:	xor    eax,eax
   140012b7a:	add    rsp,0x10
   140012b7e:	pop    rbx
   140012b7f:	ret    
   140012b80:	sub    rsp,0x38
   140012b84:	lea    rax,[rip+0x9445]        # 0x14001bfd0
   140012b8b:	mov    r9d,0x1b
   140012b91:	mov    QWORD PTR [rsp+0x20],rax
   140012b96:	call   0x140012ba0
   140012b9b:	add    rsp,0x38
   140012b9f:	ret    
   140012ba0:	mov    rax,rsp
   140012ba3:	sub    rsp,0x68
   140012ba7:	movaps XMMWORD PTR [rax-0x18],xmm6
   140012bab:	movaps xmm6,xmm1
   140012bae:	mov    edx,r9d
   140012bb1:	movaps xmm3,xmm0
   140012bb4:	sub    r8d,0x1
   140012bb8:	je     0x140012be4
   140012bba:	cmp    r8d,0x1
   140012bbe:	jne    0x140012c29
   140012bc0:	mov    DWORD PTR [rax-0x28],r8d
   140012bc4:	xorps  xmm2,xmm2
   140012bc7:	movsd  QWORD PTR [rax-0x30],xmm2
   140012bcc:	mov    r9d,r8d
   140012bcf:	movsd  QWORD PTR [rax-0x38],xmm0
   140012bd4:	mov    DWORD PTR [rax-0x40],0x21
   140012bdb:	mov    DWORD PTR [rax-0x48],0x8
   140012be2:	jmp    0x140012c11
   140012be4:	mov    DWORD PTR [rsp+0x40],0x1
   140012bec:	xorps  xmm0,xmm0
   140012bef:	movsd  QWORD PTR [rsp+0x38],xmm0
   140012bf5:	mov    r9d,0x2
   140012bfb:	movsd  QWORD PTR [rsp+0x30],xmm3
   140012c01:	mov    DWORD PTR [rsp+0x28],0x22
   140012c09:	mov    DWORD PTR [rsp+0x20],0x4
   140012c11:	mov    rcx,QWORD PTR [rsp+0x90]
   140012c19:	movsd  QWORD PTR [rsp+0x78],xmm1
   140012c1f:	mov    r8,QWORD PTR [rsp+0x78]
   140012c24:	call   0x1400129c8
   140012c29:	movaps xmm0,xmm6
   140012c2c:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140012c31:	add    rsp,0x68
   140012c35:	ret    
   140012c36:	int3   
   140012c37:	int3   
   140012c38:	int3   
   140012c39:	int3   
   140012c3a:	int3   
   140012c3b:	int3   
   140012c3c:	int3   
   140012c3d:	int3   
   140012c3e:	int3   
   140012c3f:	int3   
   140012c40:	int3   
   140012c41:	int3   
   140012c42:	int3   
   140012c43:	int3   
   140012c44:	int3   
   140012c45:	int3   
   140012c46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140012c50:	sub    rsp,0x8
   140012c54:	stmxcsr DWORD PTR [rsp]
   140012c58:	mov    eax,DWORD PTR [rsp]
   140012c5b:	add    rsp,0x8
   140012c5f:	ret    
   140012c60:	mov    DWORD PTR [rsp+0x8],ecx
   140012c64:	ldmxcsr DWORD PTR [rsp+0x8]
   140012c69:	ret    
   140012c6a:	stmxcsr DWORD PTR [rsp+0x8]
   140012c6f:	mov    ecx,0xffffffc0
   140012c74:	and    DWORD PTR [rsp+0x8],ecx
   140012c78:	ldmxcsr DWORD PTR [rsp+0x8]
   140012c7d:	ret    
   140012c7e:	ucomisd xmm0,QWORD PTR [rip+0x935a]        # 0x14001bfe0
   140012c86:	jae    0x140012c9c
   140012c88:	ucomisd xmm0,QWORD PTR [rip+0x9358]        # 0x14001bfe8
   140012c90:	jbe    0x140012c9c
   140012c92:	cvtsd2si rcx,xmm0
   140012c97:	cvtsi2sd xmm0,rcx
   140012c9c:	ret    
   140012c9d:	int3   
   140012c9e:	int3   
   140012c9f:	int3   
   140012ca0:	sub    rsp,0x48
   140012ca4:	and    DWORD PTR [rsp+0x30],0x0
   140012ca9:	mov    rax,QWORD PTR [rsp+0x78]
   140012cae:	mov    QWORD PTR [rsp+0x28],rax
   140012cb3:	mov    rax,QWORD PTR [rsp+0x70]
   140012cb8:	mov    QWORD PTR [rsp+0x20],rax
   140012cbd:	call   0x140012cc8
   140012cc2:	add    rsp,0x48
   140012cc6:	ret    
   140012cc7:	int3   
   140012cc8:	mov    rax,rsp
   140012ccb:	mov    QWORD PTR [rax+0x10],rbx
   140012ccf:	mov    QWORD PTR [rax+0x18],rsi
   140012cd3:	mov    QWORD PTR [rax+0x20],rdi
   140012cd7:	mov    QWORD PTR [rax+0x8],rcx
   140012cdb:	push   rbp
   140012cdc:	mov    rbp,rsp
   140012cdf:	sub    rsp,0x20
   140012ce3:	mov    rbx,rdx
   140012ce6:	mov    esi,r9d
   140012ce9:	xor    edx,edx
   140012ceb:	mov    edi,0xc000000d
   140012cf0:	mov    DWORD PTR [rcx+0x4],edx
   140012cf3:	mov    rax,QWORD PTR [rbp+0x10]
   140012cf7:	mov    DWORD PTR [rax+0x8],edx
   140012cfa:	mov    rax,QWORD PTR [rbp+0x10]
   140012cfe:	mov    DWORD PTR [rax+0xc],edx
   140012d01:	test   r8b,0x10
   140012d05:	je     0x140012d14
   140012d07:	mov    rax,QWORD PTR [rbp+0x10]
   140012d0b:	mov    edi,0xc000008f
   140012d10:	or     DWORD PTR [rax+0x4],0x1
   140012d14:	test   r8b,0x2
   140012d18:	je     0x140012d27
   140012d1a:	mov    rax,QWORD PTR [rbp+0x10]
   140012d1e:	mov    edi,0xc0000093
   140012d23:	or     DWORD PTR [rax+0x4],0x2
   140012d27:	test   r8b,0x1
   140012d2b:	je     0x140012d3a
   140012d2d:	mov    rax,QWORD PTR [rbp+0x10]
   140012d31:	mov    edi,0xc0000091
   140012d36:	or     DWORD PTR [rax+0x4],0x4
   140012d3a:	test   r8b,0x4
   140012d3e:	je     0x140012d4d
   140012d40:	mov    rax,QWORD PTR [rbp+0x10]
   140012d44:	mov    edi,0xc000008e
   140012d49:	or     DWORD PTR [rax+0x4],0x8
   140012d4d:	test   r8b,0x8
   140012d51:	je     0x140012d60
   140012d53:	mov    rax,QWORD PTR [rbp+0x10]
   140012d57:	mov    edi,0xc0000090
   140012d5c:	or     DWORD PTR [rax+0x4],0x10
   140012d60:	mov    rcx,QWORD PTR [rbp+0x10]
   140012d64:	mov    rax,QWORD PTR [rbx]
   140012d67:	shr    rax,0x7
   140012d6b:	shl    eax,0x4
   140012d6e:	not    eax
   140012d70:	xor    eax,DWORD PTR [rcx+0x8]
   140012d73:	and    eax,0x10
   140012d76:	xor    DWORD PTR [rcx+0x8],eax
   140012d79:	mov    rcx,QWORD PTR [rbp+0x10]
   140012d7d:	mov    rax,QWORD PTR [rbx]
   140012d80:	shr    rax,0x9
   140012d84:	shl    eax,0x3
   140012d87:	not    eax
   140012d89:	xor    eax,DWORD PTR [rcx+0x8]
   140012d8c:	and    eax,0x8
   140012d8f:	xor    DWORD PTR [rcx+0x8],eax
   140012d92:	mov    rcx,QWORD PTR [rbp+0x10]
   140012d96:	mov    rax,QWORD PTR [rbx]
   140012d99:	shr    rax,0xa
   140012d9d:	shl    eax,0x2
   140012da0:	not    eax
   140012da2:	xor    eax,DWORD PTR [rcx+0x8]
   140012da5:	and    eax,0x4
   140012da8:	xor    DWORD PTR [rcx+0x8],eax
   140012dab:	mov    rcx,QWORD PTR [rbp+0x10]
   140012daf:	mov    rax,QWORD PTR [rbx]
   140012db2:	shr    rax,0xb
   140012db6:	add    eax,eax
   140012db8:	not    eax
   140012dba:	xor    eax,DWORD PTR [rcx+0x8]
   140012dbd:	and    eax,0x2
   140012dc0:	xor    DWORD PTR [rcx+0x8],eax
   140012dc3:	mov    eax,DWORD PTR [rbx]
   140012dc5:	mov    rcx,QWORD PTR [rbp+0x10]
   140012dc9:	shr    rax,0xc
   140012dcd:	not    eax
   140012dcf:	xor    eax,DWORD PTR [rcx+0x8]
   140012dd2:	and    eax,0x1
   140012dd5:	xor    DWORD PTR [rcx+0x8],eax
   140012dd8:	call   0x1400130bc
   140012ddd:	mov    rdx,rax
   140012de0:	test   al,0x1
   140012de2:	je     0x140012dec
   140012de4:	mov    rcx,QWORD PTR [rbp+0x10]
   140012de8:	or     DWORD PTR [rcx+0xc],0x10
   140012dec:	test   al,0x4
   140012dee:	je     0x140012df8
   140012df0:	mov    rcx,QWORD PTR [rbp+0x10]
   140012df4:	or     DWORD PTR [rcx+0xc],0x8
   140012df8:	test   al,0x8
   140012dfa:	je     0x140012e04
   140012dfc:	mov    rax,QWORD PTR [rbp+0x10]
   140012e00:	or     DWORD PTR [rax+0xc],0x4
   140012e04:	test   dl,0x10
   140012e07:	je     0x140012e11
   140012e09:	mov    rax,QWORD PTR [rbp+0x10]
   140012e0d:	or     DWORD PTR [rax+0xc],0x2
   140012e11:	test   dl,0x20
   140012e14:	je     0x140012e1e
   140012e16:	mov    rax,QWORD PTR [rbp+0x10]
   140012e1a:	or     DWORD PTR [rax+0xc],0x1
   140012e1e:	mov    eax,DWORD PTR [rbx]
   140012e20:	mov    ecx,0x6000
   140012e25:	and    rax,rcx
   140012e28:	je     0x140012e68
   140012e2a:	cmp    rax,0x2000
   140012e30:	je     0x140012e58
   140012e32:	cmp    rax,0x4000
   140012e38:	je     0x140012e48
   140012e3a:	cmp    rax,rcx
   140012e3d:	jne    0x140012e6f
   140012e3f:	mov    rax,QWORD PTR [rbp+0x10]
   140012e43:	or     DWORD PTR [rax],0x3
   140012e46:	jmp    0x140012e6f
   140012e48:	mov    rax,QWORD PTR [rbp+0x10]
   140012e4c:	and    DWORD PTR [rax],0xfffffffe
   140012e4f:	mov    rax,QWORD PTR [rbp+0x10]
   140012e53:	or     DWORD PTR [rax],0x2
   140012e56:	jmp    0x140012e6f
   140012e58:	mov    rax,QWORD PTR [rbp+0x10]
   140012e5c:	and    DWORD PTR [rax],0xfffffffd
   140012e5f:	mov    rax,QWORD PTR [rbp+0x10]
   140012e63:	or     DWORD PTR [rax],0x1
   140012e66:	jmp    0x140012e6f
   140012e68:	mov    rax,QWORD PTR [rbp+0x10]
   140012e6c:	and    DWORD PTR [rax],0xfffffffc
   140012e6f:	mov    rax,QWORD PTR [rbp+0x10]
   140012e73:	and    esi,0xfff
   140012e79:	shl    esi,0x5
   140012e7c:	and    DWORD PTR [rax],0xfffe001f
   140012e82:	mov    rax,QWORD PTR [rbp+0x10]
   140012e86:	or     DWORD PTR [rax],esi
   140012e88:	mov    rax,QWORD PTR [rbp+0x10]
   140012e8c:	mov    rsi,QWORD PTR [rbp+0x38]
   140012e90:	or     DWORD PTR [rax+0x20],0x1
   140012e94:	cmp    DWORD PTR [rbp+0x40],0x0
   140012e98:	je     0x140012ecd
   140012e9a:	mov    rax,QWORD PTR [rbp+0x10]
   140012e9e:	mov    edx,0xffffffe1
   140012ea3:	and    DWORD PTR [rax+0x20],edx
   140012ea6:	mov    rax,QWORD PTR [rbp+0x30]
   140012eaa:	mov    ecx,DWORD PTR [rax]
   140012eac:	mov    rax,QWORD PTR [rbp+0x10]
   140012eb0:	mov    DWORD PTR [rax+0x10],ecx
   140012eb3:	mov    rax,QWORD PTR [rbp+0x10]
   140012eb7:	or     DWORD PTR [rax+0x60],0x1
   140012ebb:	mov    rax,QWORD PTR [rbp+0x10]
   140012ebf:	and    DWORD PTR [rax+0x60],edx
   140012ec2:	mov    rax,QWORD PTR [rbp+0x10]
   140012ec6:	mov    ecx,DWORD PTR [rsi]
   140012ec8:	mov    DWORD PTR [rax+0x50],ecx
   140012ecb:	jmp    0x140012f15
   140012ecd:	mov    rcx,QWORD PTR [rbp+0x10]
   140012ed1:	mov    r8d,0xffffffe3
   140012ed7:	mov    eax,DWORD PTR [rcx+0x20]
   140012eda:	and    eax,r8d
   140012edd:	or     eax,0x2
   140012ee0:	mov    DWORD PTR [rcx+0x20],eax
   140012ee3:	mov    rax,QWORD PTR [rbp+0x30]
   140012ee7:	mov    rcx,QWORD PTR [rax]
   140012eea:	mov    rax,QWORD PTR [rbp+0x10]
   140012eee:	mov    QWORD PTR [rax+0x10],rcx
   140012ef2:	mov    rax,QWORD PTR [rbp+0x10]
   140012ef6:	or     DWORD PTR [rax+0x60],0x1
   140012efa:	mov    rdx,QWORD PTR [rbp+0x10]
   140012efe:	mov    eax,DWORD PTR [rdx+0x60]
   140012f01:	and    eax,r8d
   140012f04:	or     eax,0x2
   140012f07:	mov    DWORD PTR [rdx+0x60],eax
   140012f0a:	mov    rax,QWORD PTR [rbp+0x10]
   140012f0e:	mov    rdx,QWORD PTR [rsi]
   140012f11:	mov    QWORD PTR [rax+0x50],rdx
   140012f15:	call   0x140013000
   140012f1a:	xor    edx,edx
   140012f1c:	lea    r9,[rbp+0x10]
   140012f20:	mov    ecx,edi
   140012f22:	lea    r8d,[rdx+0x1]
   140012f26:	call   QWORD PTR [rip+0x1194]        # 0x1400140c0
   140012f2c:	mov    rcx,QWORD PTR [rbp+0x10]
   140012f30:	test   BYTE PTR [rcx+0x8],0x10
   140012f34:	je     0x140012f3b
   140012f36:	btr    QWORD PTR [rbx],0x7
   140012f3b:	test   BYTE PTR [rcx+0x8],0x8
   140012f3f:	je     0x140012f46
   140012f41:	btr    QWORD PTR [rbx],0x9
   140012f46:	test   BYTE PTR [rcx+0x8],0x4
   140012f4a:	je     0x140012f51
   140012f4c:	btr    QWORD PTR [rbx],0xa
   140012f51:	test   BYTE PTR [rcx+0x8],0x2
   140012f55:	je     0x140012f5c
   140012f57:	btr    QWORD PTR [rbx],0xb
   140012f5c:	test   BYTE PTR [rcx+0x8],0x1
   140012f60:	je     0x140012f67
   140012f62:	btr    QWORD PTR [rbx],0xc
   140012f67:	mov    eax,DWORD PTR [rcx]
   140012f69:	and    eax,0x3
   140012f6c:	je     0x140012f9e
   140012f6e:	sub    eax,0x1
   140012f71:	je     0x140012f92
   140012f73:	sub    eax,0x1
   140012f76:	je     0x140012f86
   140012f78:	cmp    eax,0x1
   140012f7b:	jne    0x140012fa5
   140012f7d:	or     QWORD PTR [rbx],0x6000
   140012f84:	jmp    0x140012fa5
   140012f86:	btr    QWORD PTR [rbx],0xd
   140012f8b:	bts    QWORD PTR [rbx],0xe
   140012f90:	jmp    0x140012fa5
   140012f92:	btr    QWORD PTR [rbx],0xe
   140012f97:	bts    QWORD PTR [rbx],0xd
   140012f9c:	jmp    0x140012fa5
   140012f9e:	and    QWORD PTR [rbx],0xffffffffffff9fff
   140012fa5:	cmp    DWORD PTR [rbp+0x40],0x0
   140012fa9:	je     0x140012fb2
   140012fab:	mov    eax,DWORD PTR [rcx+0x50]
   140012fae:	mov    DWORD PTR [rsi],eax
   140012fb0:	jmp    0x140012fb9
   140012fb2:	mov    rax,QWORD PTR [rcx+0x50]
   140012fb6:	mov    QWORD PTR [rsi],rax
   140012fb9:	mov    rbx,QWORD PTR [rsp+0x38]
   140012fbe:	mov    rsi,QWORD PTR [rsp+0x40]
   140012fc3:	mov    rdi,QWORD PTR [rsp+0x48]
   140012fc8:	add    rsp,0x20
   140012fcc:	pop    rbp
   140012fcd:	ret    
   140012fce:	int3   
   140012fcf:	int3   
   140012fd0:	sub    rsp,0x28
   140012fd4:	cmp    ecx,0x1
   140012fd7:	je     0x140012fee
   140012fd9:	lea    eax,[rcx-0x2]
   140012fdc:	cmp    eax,0x1
   140012fdf:	ja     0x140012ff9
   140012fe1:	call   0x140008500
   140012fe6:	mov    DWORD PTR [rax],0x22
   140012fec:	jmp    0x140012ff9
   140012fee:	call   0x140008500
   140012ff3:	mov    DWORD PTR [rax],0x21
   140012ff9:	add    rsp,0x28
   140012ffd:	ret    
   140012ffe:	int3   
   140012fff:	int3   
   140013000:	rex push rbx
   140013002:	sub    rsp,0x20
   140013006:	call   0x140012c50
   14001300b:	mov    ebx,eax
   14001300d:	and    ebx,0x3f
   140013010:	call   0x140012c6a
   140013015:	mov    eax,ebx
   140013017:	add    rsp,0x20
   14001301b:	pop    rbx
   14001301c:	ret    
   14001301d:	int3   
   14001301e:	int3   
   14001301f:	int3   
   140013020:	mov    QWORD PTR [rsp+0x18],rbx
   140013025:	mov    QWORD PTR [rsp+0x20],rsi
   14001302a:	push   rdi
   14001302b:	sub    rsp,0x20
   14001302f:	mov    rbx,rdx
   140013032:	mov    rdi,rcx
   140013035:	call   0x140012c50
   14001303a:	mov    esi,eax
   14001303c:	mov    DWORD PTR [rsp+0x38],eax
   140013040:	mov    ecx,ebx
   140013042:	not    ecx
   140013044:	or     ecx,0xffff807f
   14001304a:	and    ecx,eax
   14001304c:	and    edi,ebx
   14001304e:	or     ecx,edi
   140013050:	mov    DWORD PTR [rsp+0x30],ecx
   140013054:	cmp    BYTE PTR [rip+0xb8c5],0x0        # 0x14001e920
   14001305b:	je     0x140013082
   14001305d:	test   cl,0x40
   140013060:	je     0x140013082
   140013062:	call   0x140012c60
   140013067:	jmp    0x140013080
   140013069:	mov    BYTE PTR [rip+0xb8b0],0x0        # 0x14001e920
   140013070:	mov    ecx,DWORD PTR [rsp+0x30]
   140013074:	and    ecx,0xffffffbf
   140013077:	call   0x140012c60
   14001307c:	mov    esi,DWORD PTR [rsp+0x38]
   140013080:	jmp    0x14001308a
   140013082:	and    ecx,0xffffffbf
   140013085:	call   0x140012c60
   14001308a:	mov    eax,esi
   14001308c:	mov    rbx,QWORD PTR [rsp+0x40]
   140013091:	mov    rsi,QWORD PTR [rsp+0x48]
   140013096:	add    rsp,0x20
   14001309a:	pop    rdi
   14001309b:	ret    
   14001309c:	rex push rbx
   14001309e:	sub    rsp,0x20
   1400130a2:	mov    rbx,rcx
   1400130a5:	call   0x140012c50
   1400130aa:	and    ebx,0x3f
   1400130ad:	or     eax,ebx
   1400130af:	mov    ecx,eax
   1400130b1:	add    rsp,0x20
   1400130b5:	pop    rbx
   1400130b6:	jmp    0x140012c60
   1400130bb:	int3   
   1400130bc:	sub    rsp,0x28
   1400130c0:	call   0x140012c50
   1400130c5:	and    eax,0x3f
   1400130c8:	add    rsp,0x28
   1400130cc:	ret    
   1400130cd:	int3   
   1400130ce:	int3   
   1400130cf:	int3   
   1400130d0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400130d4:	xor    r9d,r9d
   1400130d7:	add    r8,rcx
   1400130da:	mov    r10,rdx
   1400130dd:	movzx  eax,WORD PTR [r8+0x14]
   1400130e2:	movzx  r11d,WORD PTR [r8+0x6]
   1400130e7:	add    rax,0x18
   1400130eb:	add    rax,r8
   1400130ee:	test   r11d,r11d
   1400130f1:	je     0x140013111
   1400130f3:	mov    edx,DWORD PTR [rax+0xc]
   1400130f6:	cmp    r10,rdx
   1400130f9:	jb     0x140013105
   1400130fb:	mov    ecx,DWORD PTR [rax+0x8]
   1400130fe:	add    ecx,edx
   140013100:	cmp    r10,rcx
   140013103:	jb     0x140013113
   140013105:	inc    r9d
   140013108:	add    rax,0x28
   14001310c:	cmp    r9d,r11d
   14001310f:	jb     0x1400130f3
   140013111:	xor    eax,eax
   140013113:	ret    
   140013114:	int3   
   140013115:	int3   
   140013116:	int3   
   140013117:	int3   
   140013118:	int3   
   140013119:	int3   
   14001311a:	int3   
   14001311b:	int3   
   14001311c:	int3   
   14001311d:	int3   
   14001311e:	int3   
   14001311f:	int3   
   140013120:	mov    QWORD PTR [rsp+0x8],rbx
   140013125:	push   rdi
   140013126:	sub    rsp,0x20
   14001312a:	mov    rbx,rcx
   14001312d:	lea    rdi,[rip+0xfffffffffffececc]        # 0x140000000
   140013134:	mov    rcx,rdi
   140013137:	call   0x140013170
   14001313c:	test   eax,eax
   14001313e:	je     0x140013162
   140013140:	sub    rbx,rdi
   140013143:	mov    rdx,rbx
   140013146:	mov    rcx,rdi
   140013149:	call   0x1400130d0
   14001314e:	test   rax,rax
   140013151:	je     0x140013162
   140013153:	mov    eax,DWORD PTR [rax+0x24]
   140013156:	shr    eax,0x1f
   140013159:	not    eax
   14001315b:	and    eax,0x1
   14001315e:	jmp    0x140013162
   140013160:	xor    eax,eax
   140013162:	mov    rbx,QWORD PTR [rsp+0x30]
   140013167:	add    rsp,0x20
   14001316b:	pop    rdi
   14001316c:	ret    
   14001316d:	int3   
   14001316e:	int3   
   14001316f:	int3   
   140013170:	mov    rax,rcx
   140013173:	mov    ecx,0x5a4d
   140013178:	cmp    WORD PTR [rax],cx
   14001317b:	je     0x140013180
   14001317d:	xor    eax,eax
   14001317f:	ret    
   140013180:	movsxd rcx,DWORD PTR [rax+0x3c]
   140013184:	add    rcx,rax
   140013187:	xor    eax,eax
   140013189:	cmp    DWORD PTR [rcx],0x4550
   14001318f:	jne    0x14001319d
   140013191:	mov    edx,0x20b
   140013196:	cmp    WORD PTR [rcx+0x18],dx
   14001319a:	sete   al
   14001319d:	ret    
   14001319e:	int3   
   14001319f:	int3   
   1400131a0:	sub    rsp,0x28
   1400131a4:	mov    r8,QWORD PTR [r9+0x38]
   1400131a8:	mov    rcx,rdx
   1400131ab:	mov    rdx,r9
   1400131ae:	call   0x1400131c0
   1400131b3:	mov    eax,0x1
   1400131b8:	add    rsp,0x28
   1400131bc:	ret    
   1400131bd:	int3   
   1400131be:	int3   
   1400131bf:	int3   
   1400131c0:	rex push rbx
   1400131c2:	mov    r11d,DWORD PTR [r8]
   1400131c5:	mov    rbx,rdx
   1400131c8:	and    r11d,0xfffffff8
   1400131cc:	mov    r9,rcx
   1400131cf:	test   BYTE PTR [r8],0x4
   1400131d3:	mov    r10,rcx
   1400131d6:	je     0x1400131eb
   1400131d8:	mov    eax,DWORD PTR [r8+0x8]
   1400131dc:	movsxd r10,DWORD PTR [r8+0x4]
   1400131e0:	neg    eax
   1400131e2:	add    r10,rcx
   1400131e5:	movsxd rcx,eax
   1400131e8:	and    r10,rcx
   1400131eb:	movsxd rax,r11d
   1400131ee:	mov    rdx,QWORD PTR [rax+r10*1]
   1400131f2:	mov    rax,QWORD PTR [rbx+0x10]
   1400131f6:	mov    ecx,DWORD PTR [rax+0x8]
   1400131f9:	add    rcx,QWORD PTR [rbx+0x8]
   1400131fd:	test   BYTE PTR [rcx+0x3],0xf
   140013201:	je     0x14001320d
   140013203:	movzx  eax,BYTE PTR [rcx+0x3]
   140013207:	and    eax,0xfffffff0
   14001320a:	add    r9,rax
   14001320d:	xor    r9,rdx
   140013210:	mov    rcx,r9
   140013213:	pop    rbx
   140013214:	jmp    0x140013230
   140013219:	int3   
   14001321a:	int3   
   14001321b:	int3   
   14001321c:	int3   
   14001321d:	int3   
   14001321e:	int3   
   14001321f:	int3   
   140013220:	int3   
   140013221:	int3   
   140013222:	int3   
   140013223:	int3   
   140013224:	int3   
   140013225:	int3   
   140013226:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013230:	cmp    rcx,QWORD PTR [rip+0xade1]        # 0x14001e018
   140013237:	bnd jne 0x14001324c
   14001323a:	rol    rcx,0x10
   14001323e:	test   cx,0xffff
   140013243:	bnd jne 0x140013248
   140013246:	bnd ret 
   140013248:	ror    rcx,0x10
   14001324c:	jmp    0x140013288
   140013251:	int3   
   140013252:	int3   
   140013253:	int3   
   140013254:	rex push rbx
   140013256:	sub    rsp,0x20
   14001325a:	mov    rbx,rcx
   14001325d:	xor    ecx,ecx
   14001325f:	call   QWORD PTR [rip+0xe2b]        # 0x140014090
   140013265:	mov    rcx,rbx
   140013268:	call   QWORD PTR [rip+0xe1a]        # 0x140014088
   14001326e:	call   QWORD PTR [rip+0xeac]        # 0x140014120
   140013274:	mov    rcx,rax
   140013277:	mov    edx,0xc0000409
   14001327c:	add    rsp,0x20
   140013280:	pop    rbx
   140013281:	rex.W jmp QWORD PTR [rip+0xea8]        # 0x140014130
   140013288:	mov    QWORD PTR [rsp+0x8],rcx
   14001328d:	sub    rsp,0x38
   140013291:	mov    ecx,0x17
   140013296:	call   0x140002870
   14001329b:	test   eax,eax
   14001329d:	je     0x1400132a6
   14001329f:	mov    ecx,0x2
   1400132a4:	int    0x29
   1400132a6:	lea    rcx,[rip+0xc413]        # 0x14001f6c0
   1400132ad:	call   0x14001347c
   1400132b2:	mov    rax,QWORD PTR [rsp+0x38]
   1400132b7:	mov    QWORD PTR [rip+0xc4fa],rax        # 0x14001f7b8
   1400132be:	lea    rax,[rsp+0x38]
   1400132c3:	add    rax,0x8
   1400132c7:	mov    QWORD PTR [rip+0xc48a],rax        # 0x14001f758
   1400132ce:	mov    rax,QWORD PTR [rip+0xc4e3]        # 0x14001f7b8
   1400132d5:	mov    QWORD PTR [rip+0xc354],rax        # 0x14001f630
   1400132dc:	mov    rax,QWORD PTR [rsp+0x40]
   1400132e1:	mov    QWORD PTR [rip+0xc458],rax        # 0x14001f740
   1400132e8:	mov    DWORD PTR [rip+0xc32e],0xc0000409        # 0x14001f620
   1400132f2:	mov    DWORD PTR [rip+0xc328],0x1        # 0x14001f624
   1400132fc:	mov    DWORD PTR [rip+0xc332],0x1        # 0x14001f638
   140013306:	mov    eax,0x8
   14001330b:	imul   rax,rax,0x0
   14001330f:	lea    rcx,[rip+0xc32a]        # 0x14001f640
   140013316:	mov    QWORD PTR [rcx+rax*1],0x2
   14001331e:	mov    eax,0x8
   140013323:	imul   rax,rax,0x0
   140013327:	mov    rcx,QWORD PTR [rip+0xacea]        # 0x14001e018
   14001332e:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140013333:	mov    eax,0x8
   140013338:	imul   rax,rax,0x1
   14001333c:	mov    rcx,QWORD PTR [rip+0xacdd]        # 0x14001e020
   140013343:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140013348:	lea    rcx,[rip+0x8ca1]        # 0x14001bff0
   14001334f:	call   0x140013254
   140013354:	add    rsp,0x38
   140013358:	ret    
   140013359:	int3   
   14001335a:	int3   
   14001335b:	int3   
   14001335c:	sub    rsp,0x28
   140013360:	mov    ecx,0x8
   140013365:	call   0x140013370
   14001336a:	add    rsp,0x28
   14001336e:	ret    
   14001336f:	int3   
   140013370:	mov    DWORD PTR [rsp+0x8],ecx
   140013374:	sub    rsp,0x28
   140013378:	mov    ecx,0x17
   14001337d:	call   0x140002870
   140013382:	test   eax,eax
   140013384:	je     0x14001338e
   140013386:	mov    eax,DWORD PTR [rsp+0x30]
   14001338a:	mov    ecx,eax
   14001338c:	int    0x29
   14001338e:	lea    rcx,[rip+0xc32b]        # 0x14001f6c0
   140013395:	call   0x14001340c
   14001339a:	mov    rax,QWORD PTR [rsp+0x28]
   14001339f:	mov    QWORD PTR [rip+0xc412],rax        # 0x14001f7b8
   1400133a6:	lea    rax,[rsp+0x28]
   1400133ab:	add    rax,0x8
   1400133af:	mov    QWORD PTR [rip+0xc3a2],rax        # 0x14001f758
   1400133b6:	mov    rax,QWORD PTR [rip+0xc3fb]        # 0x14001f7b8
   1400133bd:	mov    QWORD PTR [rip+0xc26c],rax        # 0x14001f630
   1400133c4:	mov    DWORD PTR [rip+0xc252],0xc0000409        # 0x14001f620
   1400133ce:	mov    DWORD PTR [rip+0xc24c],0x1        # 0x14001f624
   1400133d8:	mov    DWORD PTR [rip+0xc256],0x1        # 0x14001f638
   1400133e2:	mov    eax,0x8
   1400133e7:	imul   rax,rax,0x0
   1400133eb:	lea    rcx,[rip+0xc24e]        # 0x14001f640
   1400133f2:	mov    edx,DWORD PTR [rsp+0x30]
   1400133f6:	mov    QWORD PTR [rcx+rax*1],rdx
   1400133fa:	lea    rcx,[rip+0x8bef]        # 0x14001bff0
   140013401:	call   0x140013254
   140013406:	add    rsp,0x28
   14001340a:	ret    
   14001340b:	int3   
   14001340c:	mov    QWORD PTR [rsp+0x20],rbx
   140013411:	push   rdi
   140013412:	sub    rsp,0x40
   140013416:	mov    rbx,rcx
   140013419:	call   QWORD PTR [rip+0xc49]        # 0x140014068
   14001341f:	mov    rdi,QWORD PTR [rbx+0xf8]
   140013426:	lea    rdx,[rsp+0x50]
   14001342b:	mov    rcx,rdi
   14001342e:	xor    r8d,r8d
   140013431:	call   QWORD PTR [rip+0xc39]        # 0x140014070
   140013437:	test   rax,rax
   14001343a:	je     0x14001346e
   14001343c:	and    QWORD PTR [rsp+0x38],0x0
   140013442:	lea    rcx,[rsp+0x58]
   140013447:	mov    rdx,QWORD PTR [rsp+0x50]
   14001344c:	mov    r9,rax
   14001344f:	mov    QWORD PTR [rsp+0x30],rcx
   140013454:	mov    r8,rdi
   140013457:	lea    rcx,[rsp+0x60]
   14001345c:	mov    QWORD PTR [rsp+0x28],rcx
   140013461:	xor    ecx,ecx
   140013463:	mov    QWORD PTR [rsp+0x20],rbx
   140013468:	call   QWORD PTR [rip+0xc0a]        # 0x140014078
   14001346e:	mov    rbx,QWORD PTR [rsp+0x68]
   140013473:	add    rsp,0x40
   140013477:	pop    rdi
   140013478:	ret    
   140013479:	int3   
   14001347a:	int3   
   14001347b:	int3   
   14001347c:	rex push rbx
   14001347e:	push   rsi
   14001347f:	push   rdi
   140013480:	sub    rsp,0x40
   140013484:	mov    rbx,rcx
   140013487:	call   QWORD PTR [rip+0xbdb]        # 0x140014068
   14001348d:	mov    rsi,QWORD PTR [rbx+0xf8]
   140013494:	xor    edi,edi
   140013496:	xor    r8d,r8d
   140013499:	lea    rdx,[rsp+0x60]
   14001349e:	mov    rcx,rsi
   1400134a1:	call   QWORD PTR [rip+0xbc9]        # 0x140014070
   1400134a7:	test   rax,rax
   1400134aa:	je     0x1400134e5
   1400134ac:	and    QWORD PTR [rsp+0x38],0x0
   1400134b2:	lea    rcx,[rsp+0x68]
   1400134b7:	mov    rdx,QWORD PTR [rsp+0x60]
   1400134bc:	mov    r9,rax
   1400134bf:	mov    QWORD PTR [rsp+0x30],rcx
   1400134c4:	mov    r8,rsi
   1400134c7:	lea    rcx,[rsp+0x70]
   1400134cc:	mov    QWORD PTR [rsp+0x28],rcx
   1400134d1:	xor    ecx,ecx
   1400134d3:	mov    QWORD PTR [rsp+0x20],rbx
   1400134d8:	call   QWORD PTR [rip+0xb9a]        # 0x140014078
   1400134de:	inc    edi
   1400134e0:	cmp    edi,0x2
   1400134e3:	jl     0x140013496
   1400134e5:	add    rsp,0x40
   1400134e9:	pop    rdi
   1400134ea:	pop    rsi
   1400134eb:	pop    rbx
   1400134ec:	ret    
   1400134ed:	int3   
   1400134ee:	int3   
   1400134ef:	int3   
   1400134f0:	int3   
   1400134f1:	int3   
   1400134f2:	int3   
   1400134f3:	int3   
   1400134f4:	int3   
   1400134f5:	int3   
   1400134f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013500:	sub    rsp,0x10
   140013504:	mov    QWORD PTR [rsp],r10
   140013508:	mov    QWORD PTR [rsp+0x8],r11
   14001350d:	xor    r11,r11
   140013510:	lea    r10,[rsp+0x18]
   140013515:	sub    r10,rax
   140013518:	cmovb  r10,r11
   14001351c:	mov    r11,QWORD PTR gs:0x10
   140013525:	cmp    r10,r11
   140013528:	bnd jae 0x140013542
   14001352b:	and    r10w,0xf000
   140013531:	lea    r11,[r11-0x1000]
   140013538:	mov    BYTE PTR [r11],0x0
   14001353c:	cmp    r10,r11
   14001353f:	bnd jne 0x140013531
   140013542:	mov    r10,QWORD PTR [rsp]
   140013546:	mov    r11,QWORD PTR [rsp+0x8]
   14001354b:	add    rsp,0x10
   14001354f:	bnd ret 
   140013551:	int3   
   140013552:	jmp    QWORD PTR [rip+0xb58]        # 0x1400140b0
   140013558:	int3   
   140013559:	int3   
   14001355a:	int3   
   14001355b:	int3   
   14001355c:	int3   
   14001355d:	int3   
   14001355e:	int3   
   14001355f:	int3   
   140013560:	int3   
   140013561:	int3   
   140013562:	int3   
   140013563:	int3   
   140013564:	int3   
   140013565:	int3   
   140013566:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013570:	mov    r11,rcx
   140013573:	mov    r10,rdx
   140013576:	cmp    r8,0x10
   14001357a:	jbe    0x1400135f0
   140013580:	cmp    r8,0x20
   140013584:	jbe    0x1400135d0
   140013586:	sub    rdx,rcx
   140013589:	jae    0x14001359a
   14001358b:	mov    rax,r10
   14001358e:	add    rax,r8
   140013591:	cmp    rcx,rax
   140013594:	jl     0x1400138d0
   14001359a:	cmp    r8,0x80
   1400135a1:	jbe    0x140013810
   1400135a7:	bt     DWORD PTR [rip+0xb4ad],0x1        # 0x14001ea5c
   1400135af:	jae    0x140013760
   1400135b5:	mov    rax,r11
   1400135b8:	mov    r11,rdi
   1400135bb:	mov    rdi,rcx
   1400135be:	mov    rcx,r8
   1400135c1:	mov    r8,rsi
   1400135c4:	mov    rsi,r10
   1400135c7:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400135c9:	mov    rsi,r8
   1400135cc:	mov    rdi,r11
   1400135cf:	ret    
   1400135d0:	movups xmm0,XMMWORD PTR [rdx]
   1400135d3:	movups xmm1,XMMWORD PTR [r8+rdx*1-0x10]
   1400135d9:	movups XMMWORD PTR [rcx],xmm0
   1400135dc:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm1
   1400135e2:	mov    rax,rcx
   1400135e5:	ret    
   1400135e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400135f0:	mov    rax,rcx
   1400135f3:	lea    r9,[rip+0xfffffffffffeca06]        # 0x140000000
   1400135fa:	mov    ecx,DWORD PTR [r9+r8*4+0x13607]
   140013602:	add    rcx,r9
   140013605:	jmp    rcx
   140013607:	push   rax
   140013608:	add    DWORD PTR ss:[rax],eax
   14001360b:	outs   dx,DWORD PTR ds:[rsi]
   14001360c:	add    DWORD PTR ss:[rax],eax
   14001360f:	push   rcx
   140013610:	add    DWORD PTR ss:[rax],eax
   140013613:	pop    rdi
   140013614:	add    DWORD PTR ss:[rax],eax
   140013617:	fwait
   140013618:	add    DWORD PTR ss:[rax],eax
   14001361b:	movabs al,ds:0xc0000136b0000136
   140013624:	add    DWORD PTR ss:[rax],eax
   140013627:	pop    rax
   140013628:	add    DWORD PTR ss:[rax],eax
   14001362b:	lock add DWORD PTR ss:[rax],eax
   14001362f:	add    BYTE PTR [rdi],dh
   140013631:	add    DWORD PTR [rax],eax
   140013633:	xor    BYTE PTR [rsi],0x1
   140013636:	add    BYTE PTR [rax],dl
   140013638:	(bad)  
   140013639:	add    DWORD PTR [rax],eax
   14001363b:	fdiv   DWORD PTR [rsi]
   14001363d:	add    DWORD PTR [rax],eax
   14001363f:	and    BYTE PTR [rdi],dh
   140013641:	add    DWORD PTR [rax],eax
   140013643:	rex (bad) 
   140013645:	add    DWORD PTR [rax],eax
   140013647:	jne    0x14001367f
   140013649:	add    DWORD PTR [rax],eax
   14001364b:	nop    DWORD PTR [rax+rax*1+0x0]
   140013650:	ret    
   140013651:	movzx  ecx,WORD PTR [rdx]
   140013654:	mov    WORD PTR [rax],cx
   140013657:	ret    
   140013658:	mov    rcx,QWORD PTR [rdx]
   14001365b:	mov    QWORD PTR [rax],rcx
   14001365e:	ret    
   14001365f:	movzx  ecx,WORD PTR [rdx]
   140013662:	movzx  r8d,BYTE PTR [rdx+0x2]
   140013667:	mov    WORD PTR [rax],cx
   14001366a:	mov    BYTE PTR [rax+0x2],r8b
   14001366e:	ret    
   14001366f:	movzx  ecx,BYTE PTR [rdx]
   140013672:	mov    BYTE PTR [rax],cl
   140013674:	ret    
   140013675:	movdqu xmm0,XMMWORD PTR [rdx]
   140013679:	movdqu XMMWORD PTR [rax],xmm0
   14001367d:	ret    
   14001367e:	xchg   ax,ax
   140013680:	mov    r8,QWORD PTR [rdx]
   140013683:	movzx  ecx,WORD PTR [rdx+0x8]
   140013687:	movzx  r9d,BYTE PTR [rdx+0xa]
   14001368c:	mov    QWORD PTR [rax],r8
   14001368f:	mov    WORD PTR [rax+0x8],cx
   140013693:	mov    BYTE PTR [rax+0xa],r9b
   140013697:	mov    rcx,r11
   14001369a:	ret    
   14001369b:	mov    ecx,DWORD PTR [rdx]
   14001369d:	mov    DWORD PTR [rax],ecx
   14001369f:	ret    
   1400136a0:	mov    ecx,DWORD PTR [rdx]
   1400136a2:	movzx  r8d,BYTE PTR [rdx+0x4]
   1400136a7:	mov    DWORD PTR [rax],ecx
   1400136a9:	mov    BYTE PTR [rax+0x4],r8b
   1400136ad:	ret    
   1400136ae:	xchg   ax,ax
   1400136b0:	mov    ecx,DWORD PTR [rdx]
   1400136b2:	movzx  r8d,WORD PTR [rdx+0x4]
   1400136b7:	mov    DWORD PTR [rax],ecx
   1400136b9:	mov    WORD PTR [rax+0x4],r8w
   1400136be:	ret    
   1400136bf:	nop
   1400136c0:	mov    ecx,DWORD PTR [rdx]
   1400136c2:	movzx  r8d,WORD PTR [rdx+0x4]
   1400136c7:	movzx  r9d,BYTE PTR [rdx+0x6]
   1400136cc:	mov    DWORD PTR [rax],ecx
   1400136ce:	mov    WORD PTR [rax+0x4],r8w
   1400136d3:	mov    BYTE PTR [rax+0x6],r9b
   1400136d7:	ret    
   1400136d8:	mov    r8,QWORD PTR [rdx]
   1400136db:	mov    ecx,DWORD PTR [rdx+0x8]
   1400136de:	movzx  r9d,BYTE PTR [rdx+0xc]
   1400136e3:	mov    QWORD PTR [rax],r8
   1400136e6:	mov    DWORD PTR [rax+0x8],ecx
   1400136e9:	mov    BYTE PTR [rax+0xc],r9b
   1400136ed:	ret    
   1400136ee:	xchg   ax,ax
   1400136f0:	mov    r8,QWORD PTR [rdx]
   1400136f3:	movzx  ecx,BYTE PTR [rdx+0x8]
   1400136f7:	mov    QWORD PTR [rax],r8
   1400136fa:	mov    BYTE PTR [rax+0x8],cl
   1400136fd:	ret    
   1400136fe:	xchg   ax,ax
   140013700:	mov    r8,QWORD PTR [rdx]
   140013703:	movzx  ecx,WORD PTR [rdx+0x8]
   140013707:	mov    QWORD PTR [rax],r8
   14001370a:	mov    WORD PTR [rax+0x8],cx
   14001370e:	ret    
   14001370f:	nop
   140013710:	mov    r8,QWORD PTR [rdx]
   140013713:	mov    ecx,DWORD PTR [rdx+0x8]
   140013716:	mov    QWORD PTR [rax],r8
   140013719:	mov    DWORD PTR [rax+0x8],ecx
   14001371c:	ret    
   14001371d:	nop    DWORD PTR [rax]
   140013720:	mov    r8,QWORD PTR [rdx]
   140013723:	mov    ecx,DWORD PTR [rdx+0x8]
   140013726:	movzx  r9d,WORD PTR [rdx+0xc]
   14001372b:	mov    QWORD PTR [rax],r8
   14001372e:	mov    DWORD PTR [rax+0x8],ecx
   140013731:	mov    WORD PTR [rax+0xc],r9w
   140013736:	ret    
   140013737:	nop    WORD PTR [rax+rax*1+0x0]
   140013740:	mov    r8,QWORD PTR [rdx]
   140013743:	mov    ecx,DWORD PTR [rdx+0x8]
   140013746:	movzx  r9d,WORD PTR [rdx+0xc]
   14001374b:	movzx  r10d,BYTE PTR [rdx+0xe]
   140013750:	mov    QWORD PTR [rax],r8
   140013753:	mov    DWORD PTR [rax+0x8],ecx
   140013756:	mov    WORD PTR [rax+0xc],r9w
   14001375b:	mov    BYTE PTR [rax+0xe],r10b
   14001375f:	ret    
   140013760:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140013764:	add    r8,rcx
   140013767:	add    rcx,0x10
   14001376b:	test   r11b,0xf
   14001376f:	je     0x140013784
   140013771:	movaps xmm1,xmm0
   140013774:	and    rcx,0xfffffffffffffff0
   140013778:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14001377c:	add    rcx,0x10
   140013780:	movups XMMWORD PTR [r11],xmm1
   140013784:	sub    r8,rcx
   140013787:	mov    r9,r8
   14001378a:	shr    r9,0x7
   14001378e:	je     0x14001381c
   140013794:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140013798:	cmp    r9,QWORD PTR [rip+0xa871]        # 0x14001e010
   14001379f:	jbe    0x1400137b8
   1400137a1:	jmp    0x140013868
   1400137a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400137b0:	movaps XMMWORD PTR [rcx-0x20],xmm0
   1400137b4:	movaps XMMWORD PTR [rcx-0x10],xmm1
   1400137b8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400137bc:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   1400137c1:	add    rcx,0x80
   1400137c8:	movaps XMMWORD PTR [rcx-0x80],xmm0
   1400137cc:	movaps XMMWORD PTR [rcx-0x70],xmm1
   1400137d0:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   1400137d5:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   1400137da:	dec    r9
   1400137dd:	movaps XMMWORD PTR [rcx-0x60],xmm0
   1400137e1:	movaps XMMWORD PTR [rcx-0x50],xmm1
   1400137e5:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400137ea:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400137ef:	movaps XMMWORD PTR [rcx-0x40],xmm0
   1400137f3:	movaps XMMWORD PTR [rcx-0x30],xmm1
   1400137f7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   1400137fc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140013801:	jne    0x1400137b0
   140013803:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140013807:	and    r8,0x7f
   14001380b:	movaps xmm0,xmm1
   14001380e:	jmp    0x14001381c
   140013810:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140013814:	add    rcx,0x10
   140013818:	sub    r8,0x10
   14001381c:	mov    r9,r8
   14001381f:	shr    r9,0x4
   140013823:	je     0x140013841
   140013825:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013830:	movups XMMWORD PTR [rcx-0x10],xmm0
   140013834:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140013838:	add    rcx,0x10
   14001383c:	dec    r9
   14001383f:	jne    0x140013830
   140013841:	and    r8,0xf
   140013845:	je     0x140013854
   140013847:	lea    rax,[r8+rcx*1]
   14001384b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   140013850:	movups XMMWORD PTR [rax-0x10],xmm1
   140013854:	movups XMMWORD PTR [rcx-0x10],xmm0
   140013858:	mov    rax,r11
   14001385b:	ret    
   14001385c:	nop    DWORD PTR [rax+0x0]
   140013860:	movntps XMMWORD PTR [rcx-0x20],xmm0
   140013864:	movntps XMMWORD PTR [rcx-0x10],xmm1
   140013868:	prefetchnta BYTE PTR [rdx+rcx*1+0x200]
   140013870:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140013874:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   140013879:	add    rcx,0x80
   140013880:	movntps XMMWORD PTR [rcx-0x80],xmm0
   140013884:	movntps XMMWORD PTR [rcx-0x70],xmm1
   140013888:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   14001388d:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   140013892:	dec    r9
   140013895:	movntps XMMWORD PTR [rcx-0x60],xmm0
   140013899:	movntps XMMWORD PTR [rcx-0x50],xmm1
   14001389d:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400138a2:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400138a7:	prefetchnta BYTE PTR [rdx+rcx*1+0x240]
   1400138af:	movntps XMMWORD PTR [rcx-0x40],xmm0
   1400138b3:	movntps XMMWORD PTR [rcx-0x30],xmm1
   1400138b7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   1400138bc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   1400138c1:	jne    0x140013860
   1400138c3:	sfence 
   1400138c6:	jmp    0x140013803
   1400138cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400138d0:	add    rcx,r8
   1400138d3:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   1400138d8:	sub    rcx,0x10
   1400138dc:	sub    r8,0x10
   1400138e0:	test   cl,0xf
   1400138e3:	je     0x1400138fc
   1400138e5:	mov    rax,rcx
   1400138e8:	and    rcx,0xfffffffffffffff0
   1400138ec:	movups xmm1,xmm0
   1400138ef:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400138f3:	movups XMMWORD PTR [rax],xmm1
   1400138f6:	mov    r8,rcx
   1400138f9:	sub    r8,r11
   1400138fc:	mov    r9,r8
   1400138ff:	shr    r9,0x7
   140013903:	je     0x14001396d
   140013905:	movaps XMMWORD PTR [rcx],xmm0
   140013908:	jmp    0x140013917
   14001390a:	nop    WORD PTR [rax+rax*1+0x0]
   140013910:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140013914:	movaps XMMWORD PTR [rcx],xmm1
   140013917:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   14001391c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   140013921:	sub    rcx,0x80
   140013928:	movaps XMMWORD PTR [rcx+0x70],xmm0
   14001392c:	movaps XMMWORD PTR [rcx+0x60],xmm1
   140013930:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   140013935:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   14001393a:	dec    r9
   14001393d:	movaps XMMWORD PTR [rcx+0x50],xmm0
   140013941:	movaps XMMWORD PTR [rcx+0x40],xmm1
   140013945:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   14001394a:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   14001394f:	movaps XMMWORD PTR [rcx+0x30],xmm0
   140013953:	movaps XMMWORD PTR [rcx+0x20],xmm1
   140013957:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   14001395c:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140013960:	jne    0x140013910
   140013962:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140013966:	and    r8,0x7f
   14001396a:	movaps xmm0,xmm1
   14001396d:	mov    r9,r8
   140013970:	shr    r9,0x4
   140013974:	je     0x140013990
   140013976:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013980:	movups XMMWORD PTR [rcx],xmm0
   140013983:	sub    rcx,0x10
   140013987:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14001398b:	dec    r9
   14001398e:	jne    0x140013980
   140013990:	and    r8,0xf
   140013994:	je     0x14001399e
   140013996:	movups xmm1,XMMWORD PTR [r10]
   14001399a:	movups XMMWORD PTR [r11],xmm1
   14001399e:	movups XMMWORD PTR [rcx],xmm0
   1400139a1:	mov    rax,r11
   1400139a4:	ret    
   1400139a5:	int3   
   1400139a6:	int3   
   1400139a7:	int3   
   1400139a8:	sub    rsp,0x18
   1400139ac:	movdqa xmm2,XMMWORD PTR [rsp]
   1400139b1:	mov    r8,rcx
   1400139b4:	movzx  eax,dx
   1400139b7:	xor    r9d,r9d
   1400139ba:	movd   xmm0,eax
   1400139be:	pshuflw xmm1,xmm0,0x0
   1400139c3:	pshufd xmm3,xmm1,0x0
   1400139c8:	mov    rax,r8
   1400139cb:	and    eax,0xfff
   1400139d0:	cmp    rax,0xff0
   1400139d6:	ja     0x140013a04
   1400139d8:	movdqu xmm1,XMMWORD PTR [r8]
   1400139dd:	movdqa xmm0,xmm2
   1400139e1:	pxor   xmm0,xmm2
   1400139e5:	movdqa xmm2,xmm0
   1400139e9:	pcmpeqw xmm2,xmm1
   1400139ed:	pcmpeqw xmm1,xmm3
   1400139f1:	por    xmm2,xmm1
   1400139f5:	pmovmskb eax,xmm2
   1400139f9:	test   eax,eax
   1400139fb:	jne    0x140013a1a
   1400139fd:	mov    eax,0x10
   140013a02:	jmp    0x140013a15
   140013a04:	cmp    WORD PTR [r8],dx
   140013a08:	je     0x140013a31
   140013a0a:	cmp    WORD PTR [r8],r9w
   140013a0e:	je     0x140013a2d
   140013a10:	mov    eax,0x2
   140013a15:	add    r8,rax
   140013a18:	jmp    0x1400139c8
   140013a1a:	bsf    ecx,eax
   140013a1d:	add    r8,rcx
   140013a20:	cmp    WORD PTR [r8],dx
   140013a24:	cmove  r9,r8
   140013a28:	mov    rax,r9
   140013a2b:	jmp    0x140013a34
   140013a2d:	xor    eax,eax
   140013a2f:	jmp    0x140013a34
   140013a31:	mov    rax,r8
   140013a34:	add    rsp,0x18
   140013a38:	ret    
   140013a39:	int3   
   140013a3a:	int3   
   140013a3b:	int3   
   140013a3c:	int3   
   140013a3d:	int3   
   140013a3e:	int3   
   140013a3f:	int3   
   140013a40:	int3   
   140013a41:	int3   
   140013a42:	int3   
   140013a43:	int3   
   140013a44:	int3   
   140013a45:	int3   
   140013a46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013a50:	sub    rdx,rcx
   140013a53:	cmp    r8,0x8
   140013a57:	jb     0x140013a7b
   140013a59:	test   cl,0x7
   140013a5c:	je     0x140013a72
   140013a5e:	xchg   ax,ax
   140013a60:	mov    al,BYTE PTR [rcx]
   140013a62:	cmp    al,BYTE PTR [rdx+rcx*1]
   140013a65:	jne    0x140013a93
   140013a67:	inc    rcx
   140013a6a:	dec    r8
   140013a6d:	test   cl,0x7
   140013a70:	jne    0x140013a60
   140013a72:	mov    r9,r8
   140013a75:	shr    r9,0x3
   140013a79:	jne    0x140013a9a
   140013a7b:	test   r8,r8
   140013a7e:	je     0x140013a8f
   140013a80:	mov    al,BYTE PTR [rcx]
   140013a82:	cmp    al,BYTE PTR [rdx+rcx*1]
   140013a85:	jne    0x140013a93
   140013a87:	inc    rcx
   140013a8a:	dec    r8
   140013a8d:	jne    0x140013a80
   140013a8f:	xor    rax,rax
   140013a92:	ret    
   140013a93:	sbb    eax,eax
   140013a95:	sbb    eax,0xffffffff
   140013a98:	ret    
   140013a99:	nop
   140013a9a:	shr    r9,0x2
   140013a9e:	je     0x140013ad7
   140013aa0:	mov    rax,QWORD PTR [rcx]
   140013aa3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140013aa7:	jne    0x140013b04
   140013aa9:	mov    rax,QWORD PTR [rcx+0x8]
   140013aad:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140013ab2:	jne    0x140013b00
   140013ab4:	mov    rax,QWORD PTR [rcx+0x10]
   140013ab8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   140013abd:	jne    0x140013afc
   140013abf:	mov    rax,QWORD PTR [rcx+0x18]
   140013ac3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140013ac8:	jne    0x140013af8
   140013aca:	add    rcx,0x20
   140013ace:	dec    r9
   140013ad1:	jne    0x140013aa0
   140013ad3:	and    r8,0x1f
   140013ad7:	mov    r9,r8
   140013ada:	shr    r9,0x3
   140013ade:	je     0x140013a7b
   140013ae0:	mov    rax,QWORD PTR [rcx]
   140013ae3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140013ae7:	jne    0x140013b04
   140013ae9:	add    rcx,0x8
   140013aed:	dec    r9
   140013af0:	jne    0x140013ae0
   140013af2:	and    r8,0x7
   140013af6:	jmp    0x140013a7b
   140013af8:	add    rcx,0x8
   140013afc:	add    rcx,0x8
   140013b00:	add    rcx,0x8
   140013b04:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140013b08:	bswap  rax
   140013b0b:	bswap  rcx
   140013b0e:	cmp    rax,rcx
   140013b11:	sbb    eax,eax
   140013b13:	sbb    eax,0xffffffff
   140013b16:	ret    
   140013b17:	int3   
   140013b18:	int3   
   140013b19:	int3   
   140013b1a:	int3   
   140013b1b:	int3   
   140013b1c:	int3   
   140013b1d:	int3   
   140013b1e:	int3   
   140013b1f:	int3   
   140013b20:	int3   
   140013b21:	int3   
   140013b22:	int3   
   140013b23:	int3   
   140013b24:	int3   
   140013b25:	int3   
   140013b26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013b30:	jmp    rax
   140013b32:	int3   
   140013b33:	int3   
   140013b34:	int3   
   140013b35:	int3   
   140013b36:	int3   
   140013b37:	int3   
   140013b38:	int3   
   140013b39:	int3   
   140013b3a:	int3   
   140013b3b:	int3   
   140013b3c:	int3   
   140013b3d:	int3   
   140013b3e:	int3   
   140013b3f:	int3   
   140013b40:	rex push rbp
   140013b42:	sub    rsp,0x20
   140013b46:	mov    rbp,rdx
   140013b49:	mov    rax,QWORD PTR [rcx]
   140013b4c:	mov    rdx,rcx
   140013b4f:	mov    ecx,DWORD PTR [rax]
   140013b51:	call   0x14000671c
   140013b56:	nop
   140013b57:	add    rsp,0x20
   140013b5b:	pop    rbp
   140013b5c:	ret    
   140013b5d:	int3   
   140013b5e:	rex push rbp
   140013b60:	mov    rbp,rdx
   140013b63:	mov    rax,QWORD PTR [rcx]
   140013b66:	xor    ecx,ecx
   140013b68:	cmp    DWORD PTR [rax],0xc0000005
   140013b6e:	sete   cl
   140013b71:	mov    eax,ecx
   140013b73:	pop    rbp
   140013b74:	ret    
   140013b75:	int3   
   140013b76:	rex push rbp
   140013b78:	sub    rsp,0x20
   140013b7c:	mov    rbp,rdx
   140013b7f:	mov    rcx,QWORD PTR [rbp+0x48]
   140013b83:	mov    rcx,QWORD PTR [rcx]
   140013b86:	add    rsp,0x20
   140013b8a:	pop    rbp
   140013b8b:	jmp    0x1400036f4
   140013b90:	int3   
   140013b91:	rex push rbp
   140013b93:	sub    rsp,0x20
   140013b97:	mov    rbp,rdx
   140013b9a:	mov    rax,QWORD PTR [rcx]
   140013b9d:	mov    ecx,DWORD PTR [rax]
   140013b9f:	call   0x140005b84
   140013ba4:	nop
   140013ba5:	add    rsp,0x20
   140013ba9:	pop    rbp
   140013baa:	ret    
   140013bab:	int3   
   140013bac:	rex push rbp
   140013bae:	sub    rsp,0x20
   140013bb2:	mov    rbp,rdx
   140013bb5:	mov    ecx,0x2
   140013bba:	add    rsp,0x20
   140013bbe:	pop    rbp
   140013bbf:	jmp    0x14000ade4
   140013bc4:	int3   
   140013bc5:	rex push rbp
   140013bc7:	sub    rsp,0x20
   140013bcb:	mov    rbp,rdx
   140013bce:	mov    ecx,0xb
   140013bd3:	add    rsp,0x20
   140013bd7:	pop    rbp
   140013bd8:	jmp    0x14000ade4
   140013bdd:	int3   
   140013bde:	rex push rbp
   140013be0:	sub    rsp,0x20
   140013be4:	mov    rbp,rdx
   140013be7:	mov    ecx,0x4
   140013bec:	add    rsp,0x20
   140013bf0:	pop    rbp
   140013bf1:	jmp    0x14000ade4
   140013bf6:	int3   
   140013bf7:	rex push rbp
   140013bf9:	sub    rsp,0x20
   140013bfd:	mov    rbp,rdx
   140013c00:	xor    ecx,ecx
   140013c02:	add    rsp,0x20
   140013c06:	pop    rbp
   140013c07:	jmp    0x14000ade4
   140013c0c:	int3   
   140013c0d:	rex push rbp
   140013c0f:	sub    rsp,0x20
   140013c13:	mov    rbp,rdx
   140013c16:	mov    rax,QWORD PTR [rbp+0x88]
   140013c1d:	mov    ecx,DWORD PTR [rax]
   140013c1f:	add    rsp,0x20
   140013c23:	pop    rbp
   140013c24:	jmp    0x14000ade4
   140013c29:	int3   
   140013c2a:	rex push rbp
   140013c2c:	sub    rsp,0x20
   140013c30:	mov    rbp,rdx
   140013c33:	mov    ecx,0x8
   140013c38:	add    rsp,0x20
   140013c3c:	pop    rbp
   140013c3d:	jmp    0x14000ade4
   140013c42:	int3   
   140013c43:	rex push rbp
   140013c45:	sub    rsp,0x20
   140013c49:	mov    rbp,rdx
   140013c4c:	mov    rcx,QWORD PTR [rbp+0x68]
   140013c50:	call   0x1400036f4
   140013c55:	nop
   140013c56:	add    rsp,0x20
   140013c5a:	pop    rbp
   140013c5b:	ret    
   140013c5c:	int3   
   140013c5d:	rex push rbp
   140013c5f:	sub    rsp,0x20
   140013c63:	mov    rbp,rdx
   140013c66:	mov    ecx,0x8
   140013c6b:	add    rsp,0x20
   140013c6f:	pop    rbp
   140013c70:	jmp    0x14000ade4
   140013c75:	int3   
   140013c76:	rex push rbp
   140013c78:	sub    rsp,0x20
   140013c7c:	mov    rbp,rdx
   140013c7f:	mov    ecx,0x7
   140013c84:	add    rsp,0x20
   140013c88:	pop    rbp
   140013c89:	jmp    0x14000ade4
   140013c8e:	int3   
   140013c8f:	rex push rbp
   140013c91:	sub    rsp,0x20
   140013c95:	mov    rbp,rdx
   140013c98:	mov    rax,QWORD PTR [rbp+0x48]
   140013c9c:	mov    ecx,DWORD PTR [rax]
   140013c9e:	add    rsp,0x20
   140013ca2:	pop    rbp
   140013ca3:	jmp    0x14000ade4
   140013ca8:	int3   
   140013ca9:	rex push rbp
   140013cab:	sub    rsp,0x20
   140013caf:	mov    rbp,rdx
   140013cb2:	mov    ecx,0x5
   140013cb7:	add    rsp,0x20
   140013cbb:	pop    rbp
   140013cbc:	jmp    0x14000ade4
   140013cc1:	int3   
   140013cc2:	rex push rbp
   140013cc4:	sub    rsp,0x20
   140013cc8:	mov    rbp,rdx
   140013ccb:	cmp    BYTE PTR [rbp+0x80],0x0
   140013cd2:	je     0x140013cdf
   140013cd4:	mov    ecx,0x3
   140013cd9:	call   0x14000ade4
   140013cde:	nop
   140013cdf:	add    rsp,0x20
   140013ce3:	pop    rbp
   140013ce4:	ret    
   140013ce5:	int3   
   140013ce6:	rex push rbp
   140013ce8:	sub    rsp,0x20
   140013cec:	mov    rbp,rdx
   140013cef:	mov    rcx,QWORD PTR [rbp+0x30]
   140013cf3:	add    rsp,0x20
   140013cf7:	pop    rbp
   140013cf8:	jmp    0x1400036f4
   140013cfd:	int3   
   140013cfe:	rex push rbp
   140013d00:	sub    rsp,0x20
   140013d04:	mov    rbp,rdx
   140013d07:	mov    ecx,DWORD PTR [rbp+0x50]
   140013d0a:	add    rsp,0x20
   140013d0e:	pop    rbp
   140013d0f:	jmp    0x14000cee0
   140013d14:	int3   
   140013d15:	rex push rbp
   140013d17:	sub    rsp,0x20
   140013d1b:	mov    rbp,rdx
   140013d1e:	mov    rax,QWORD PTR [rbp+0x48]
   140013d22:	mov    ecx,DWORD PTR [rax]
   140013d24:	add    rsp,0x20
   140013d28:	pop    rbp
   140013d29:	jmp    0x14000cee0
   140013d2e:	int3   
   140013d2f:	rex push rbp
   140013d31:	sub    rsp,0x20
   140013d35:	mov    rbp,rdx
   140013d38:	mov    rax,QWORD PTR [rcx]
   140013d3b:	cmp    DWORD PTR [rax],0xc0000005
   140013d41:	je     0x140013d4f
   140013d43:	cmp    DWORD PTR [rax],0xc000001d
   140013d49:	je     0x140013d4f
   140013d4b:	xor    eax,eax
   140013d4d:	jmp    0x140013d54
   140013d4f:	mov    eax,0x1
   140013d54:	add    rsp,0x20
   140013d58:	pop    rbp
   140013d59:	ret    
   140013d5a:	int3   
   140013d5b:	int3   
   140013d5c:	int3   
   140013d5d:	int3   
   140013d5e:	int3   
   140013d5f:	int3   
   140013d60:	rex push rbp
   140013d62:	sub    rsp,0x20
   140013d66:	mov    rbp,rdx
   140013d69:	mov    rax,QWORD PTR [rcx]
   140013d6c:	xor    ecx,ecx
   140013d6e:	cmp    DWORD PTR [rax],0xc0000005
   140013d74:	sete   cl
   140013d77:	mov    eax,ecx
   140013d79:	add    rsp,0x20
   140013d7d:	pop    rbp
   140013d7e:	ret    
   140013d7f:	int3   

Disassembly of section .rdata:

0000000140014000 <.rdata>:
   140014000:	loopne 0x140013fda
   140014002:	add    DWORD PTR [rax],eax
   140014004:	add    BYTE PTR [rax],al
   140014006:	add    BYTE PTR [rax],al
   140014008:	out    dx,al
   140014009:	fadd   DWORD PTR [rcx]
   14001400b:	add    BYTE PTR [rax],al
   14001400d:	add    BYTE PTR [rax],al
   14001400f:	add    BYTE PTR [rcx+rbx*8],al
   140014012:	add    DWORD PTR [rax],eax
   140014014:	add    BYTE PTR [rax],al
   140014016:	add    BYTE PTR [rax],al
   140014018:	adc    bl,cl
   14001401a:	add    DWORD PTR [rax],eax
   14001401c:	add    BYTE PTR [rax],al
   14001401e:	add    BYTE PTR [rax],al
   140014020:	and    bl,cl
   140014022:	add    DWORD PTR [rax],eax
   140014024:	add    BYTE PTR [rax],al
   140014026:	add    BYTE PTR [rax],al
   140014028:	xor    al,0xd9
   14001402a:	add    DWORD PTR [rax],eax
   14001402c:	add    BYTE PTR [rax],al
   14001402e:	add    BYTE PTR [rax],al
   140014030:	rex.WX fld DWORD PTR [rcx]
   140014033:	add    BYTE PTR [rax],al
   140014035:	add    BYTE PTR [rax],al
   140014037:	add    BYTE PTR [rcx+rbx*8+0x1],bl
   14001403b:	add    BYTE PTR [rax],al
   14001403d:	add    BYTE PTR [rax],al
   14001403f:	add    BYTE PTR [rcx+rbx*8+0x1],ch
   140014043:	add    BYTE PTR [rax],al
   140014045:	add    BYTE PTR [rax],al
   140014047:	add    BYTE PTR [rsi+0x1d9],al
   14001404d:	add    BYTE PTR [rax],al
   14001404f:	add    BYTE PTR [rcx+rbx*8+0x1],bl
   140014056:	add    BYTE PTR [rax],al
   140014058:	mov    dl,0xd9
   14001405a:	add    DWORD PTR [rax],eax
   14001405c:	add    BYTE PTR [rax],al
   14001405e:	add    BYTE PTR [rax],al
   140014060:	int3   
   140014061:	fld    DWORD PTR [rcx]
   140014063:	add    BYTE PTR [rax],al
   140014065:	add    BYTE PTR [rax],al
   140014067:	add    dl,ah
   140014069:	fld    DWORD PTR [rcx]
   14001406b:	add    BYTE PTR [rax],al
   14001406d:	add    BYTE PTR [rax],al
   14001406f:	add    dh,dh
   140014071:	fld    DWORD PTR [rcx]
   140014073:	add    BYTE PTR [rax],al
   140014075:	add    BYTE PTR [rax],al
   140014077:	add    BYTE PTR [rax],dl
   140014079:	fiadd  DWORD PTR [rcx]
   14001407b:	add    BYTE PTR [rax],al
   14001407d:	add    BYTE PTR [rax],al
   14001407f:	add    BYTE PTR [rdx+rbx*8],ah
   140014082:	add    DWORD PTR [rax],eax
   140014084:	add    BYTE PTR [rax],al
   140014086:	add    BYTE PTR [rax],al
   140014088:	cmp    dl,bl
   14001408a:	add    DWORD PTR [rax],eax
   14001408c:	add    BYTE PTR [rax],al
   14001408e:	add    BYTE PTR [rax],al
   140014090:	push   rsp
   140014091:	fiadd  DWORD PTR [rcx]
   140014093:	add    BYTE PTR [rax],al
   140014095:	add    BYTE PTR [rax],al
   140014097:	add    BYTE PTR [rdx-0x26],dh
   14001409a:	add    DWORD PTR [rax],eax
   14001409c:	add    BYTE PTR [rax],al
   14001409e:	add    BYTE PTR [rax],al
   1400140a0:	test   dl,bl
   1400140a2:	add    DWORD PTR [rax],eax
   1400140a4:	add    BYTE PTR [rax],al
   1400140a6:	add    BYTE PTR [rax],al
   1400140a8:	movabs al,ds:0xc2000000000001da
   1400140b1:	fiadd  DWORD PTR [rcx]
   1400140b3:	add    BYTE PTR [rax],al
   1400140b5:	add    BYTE PTR [rax],al
   1400140b7:	add    al,dl
   1400140b9:	fiadd  DWORD PTR [rcx]
   1400140bb:	add    BYTE PTR [rax],al
   1400140bd:	add    BYTE PTR [rax],al
   1400140bf:	add    ah,ah
   1400140c1:	fiadd  DWORD PTR [rcx]
   1400140c3:	add    BYTE PTR [rax],al
   1400140c5:	add    BYTE PTR [rax],al
   1400140c7:	add    dh,dh
   1400140c9:	fiadd  DWORD PTR [rcx]
   1400140cb:	add    BYTE PTR [rax],al
   1400140cd:	add    BYTE PTR [rax],al
   1400140cf:	add    BYTE PTR [rsi],al
   1400140d1:	fild   DWORD PTR [rcx]
   1400140d3:	add    BYTE PTR [rax],al
   1400140d5:	add    BYTE PTR [rax],al
   1400140d7:	add    BYTE PTR [rsi],bl
   1400140d9:	fild   DWORD PTR [rcx]
   1400140db:	add    BYTE PTR [rax],al
   1400140dd:	add    BYTE PTR [rax],al
   1400140df:	add    BYTE PTR [rsi],dh
   1400140e1:	fild   DWORD PTR [rcx]
   1400140e3:	add    BYTE PTR [rax],al
   1400140e5:	add    BYTE PTR [rax],al
   1400140e7:	add    BYTE PTR [rsi-0x25],cl
   1400140ea:	add    DWORD PTR [rax],eax
   1400140ec:	add    BYTE PTR [rax],al
   1400140ee:	add    BYTE PTR [rax],al
   1400140f0:	jbe    0x1400140cd
   1400140f2:	add    DWORD PTR [rax],eax
   1400140f4:	add    BYTE PTR [rax],al
   1400140f6:	add    BYTE PTR [rax],al
   1400140f8:	(bad)  
   1400140f9:	fild   DWORD PTR [rcx]
   1400140fb:	add    BYTE PTR [rax],al
   1400140fd:	add    BYTE PTR [rax],al
   1400140ff:	add    BYTE PTR [rax+0x1db],dl
   140014105:	add    BYTE PTR [rax],al
   140014107:	add    BYTE PTR [rsi+0x1db],bl
   14001410d:	add    BYTE PTR [rax],al
   14001410f:	add    BYTE PTR [rax+0x1db],ch
   140014115:	add    BYTE PTR [rax],al
   140014117:	add    BYTE PTR [rsi+0x1db],dh
   14001411d:	add    BYTE PTR [rax],al
   14001411f:	add    al,cl
   140014121:	fild   DWORD PTR [rcx]
   140014123:	add    BYTE PTR [rax],al
   140014125:	add    BYTE PTR [rax],al
   140014127:	add    ah,bl
   140014129:	fild   DWORD PTR [rcx]
   14001412b:	add    BYTE PTR [rax],al
   14001412d:	add    BYTE PTR [rax],al
   14001412f:	add    dl,ch
   140014131:	fild   DWORD PTR [rcx]
   140014133:	add    BYTE PTR [rax],al
   140014135:	add    BYTE PTR [rax],al
   140014137:	add    dh,bh
   140014139:	fild   DWORD PTR [rcx]
   14001413b:	add    BYTE PTR [rax],al
   14001413d:	add    BYTE PTR [rax],al
   14001413f:	add    BYTE PTR [rsp+rbx*8],dl
   140014142:	add    DWORD PTR [rax],eax
   140014144:	add    BYTE PTR [rax],al
   140014146:	add    BYTE PTR [rax],al
   140014148:	sub    bl,ah
   14001414a:	add    DWORD PTR [rax],eax
   14001414c:	add    BYTE PTR [rax],al
   14001414e:	add    BYTE PTR [rax],al
   140014150:	rex fadd QWORD PTR [rcx]
   140014153:	add    BYTE PTR [rax],al
   140014155:	add    BYTE PTR [rax],al
   140014157:	add    BYTE PTR [rax-0x24],dl
   14001415a:	add    DWORD PTR [rax],eax
   14001415c:	add    BYTE PTR [rax],al
   14001415e:	add    BYTE PTR [rax],al
   140014160:	pop    rsp
   140014161:	fadd   QWORD PTR [rcx]
   140014163:	add    BYTE PTR [rax],al
   140014165:	add    BYTE PTR [rax],al
   140014167:	add    BYTE PTR [rsi-0x24],ch
   14001416a:	add    DWORD PTR [rax],eax
   14001416c:	add    BYTE PTR [rax],al
   14001416e:	add    BYTE PTR [rax],al
   140014170:	sbb    ah,0x1
   140014173:	add    BYTE PTR [rax],al
   140014175:	add    BYTE PTR [rax],al
   140014177:	add    BYTE PTR [rdx+0x1dc],cl
   14001417d:	add    BYTE PTR [rax],al
   14001417f:	add    BYTE PTR [rsi+0x1dc],dl
   140014185:	add    BYTE PTR [rax],al
   140014187:	add    BYTE PTR [rdx+0x1dc],ah
   14001418d:	add    BYTE PTR [rax],al
   14001418f:	add    BYTE PTR [rsp+rbx*8+0x1],dh
   140014196:	add    BYTE PTR [rax],al
   140014198:	(bad)  
   140014199:	fadd   QWORD PTR [rcx]
   14001419b:	add    BYTE PTR [rax],al
   14001419d:	add    BYTE PTR [rax],al
   14001419f:	add    dl,dl
   1400141a1:	fadd   QWORD PTR [rcx]
   1400141a3:	add    BYTE PTR [rax],al
   1400141a5:	add    BYTE PTR [rax],al
   1400141a7:	add    ah,ch
   1400141a9:	fadd   QWORD PTR [rcx]
   1400141ab:	add    BYTE PTR [rax],al
   1400141ad:	add    BYTE PTR [rax],al
   1400141af:	add    BYTE PTR [rsi],al
   1400141b1:	fld    QWORD PTR [rcx]
   1400141b3:	add    BYTE PTR [rax],al
   1400141b5:	add    BYTE PTR [rax],al
   1400141b7:	add    BYTE PTR [rsi],bl
   1400141b9:	fld    QWORD PTR [rcx]
   1400141bb:	add    BYTE PTR [rax],al
   1400141bd:	add    BYTE PTR [rax],al
   1400141bf:	add    BYTE PTR [rdx],ch
   1400141c1:	fld    QWORD PTR [rcx]
   1400141c3:	add    BYTE PTR [rax],al
   1400141c5:	add    BYTE PTR [rax],al
   1400141c7:	add    BYTE PTR [rsi],bh
   1400141c9:	fld    QWORD PTR [rcx]
   1400141cb:	add    BYTE PTR [rax],al
   1400141cd:	add    BYTE PTR [rax],al
   1400141cf:	add    BYTE PTR [rsi-0x23],cl
   1400141d2:	add    DWORD PTR [rax],eax
   1400141d4:	add    BYTE PTR [rax],al
   1400141d6:	add    BYTE PTR [rax],al
   1400141d8:	(bad)  
   1400141d9:	fld    QWORD PTR [rcx]
   1400141db:	add    BYTE PTR [rax],al
   1400141dd:	add    BYTE PTR [rax],al
   1400141df:	add    BYTE PTR [rbp+rbx*8+0x1],ch
   1400141e3:	add    BYTE PTR [rax],al
   1400141e5:	add    BYTE PTR [rax],al
   1400141e7:	add    BYTE PTR [rax-0x23],bh
   1400141ea:	add    DWORD PTR [rax],eax
   1400141ec:	add    BYTE PTR [rax],al
   1400141ee:	add    BYTE PTR [rax],al
   1400141f0:	xchg   edx,eax
   1400141f1:	fld    QWORD PTR [rcx]
   1400141f3:	add    BYTE PTR [rax],al
   1400141f5:	add    BYTE PTR [rax],al
   1400141f7:	add    BYTE PTR [rbp+rbx*8+0x1],ch
   1400141fe:	add    BYTE PTR [rax],al
   140014200:	mov    esp,0x1dd
   140014205:	add    BYTE PTR [rax],al
   140014207:	add    dh,cl
   140014209:	fld    QWORD PTR [rcx]
   14001420b:	add    BYTE PTR [rax],al
   14001420d:	add    BYTE PTR [rax],al
   14001420f:	add    al,ah
   140014211:	fld    QWORD PTR [rcx]
   140014213:	add    BYTE PTR [rax],al
   140014215:	add    BYTE PTR [rax],al
   140014217:	add    ah,dh
   140014219:	fld    QWORD PTR [rcx]
   14001421b:	add    BYTE PTR [rax],al
   14001421d:	add    BYTE PTR [rax],al
   14001421f:	add    BYTE PTR [rsi+rbx*8],al
   140014222:	add    DWORD PTR [rax],eax
   140014224:	add    BYTE PTR [rax],al
   140014226:	add    BYTE PTR [rax],al
   140014228:	(bad)  
   140014229:	fiadd  WORD PTR [rcx]
   14001422b:	add    BYTE PTR [rax],al
   14001422d:	add    BYTE PTR [rax],al
   14001422f:	add    BYTE PTR [rdx],ah
   140014231:	fiadd  WORD PTR [rcx]
   140014233:	add    BYTE PTR [rax],al
   140014235:	add    BYTE PTR [rax],al
   140014237:	add    BYTE PTR [rax],dh
   140014239:	fiadd  WORD PTR [rcx]
   14001423b:	add    BYTE PTR [rax],al
   14001423d:	add    BYTE PTR [rax],al
   14001423f:	add    BYTE PTR [rsi+rbx*8+0x1],al
   140014243:	add    BYTE PTR [rax],al
   140014245:	add    BYTE PTR [rax],al
   140014247:	add    BYTE PTR [rsi+rbx*8+0x1],dl
	...
   140014257:	add    BYTE PTR [rax],bh
   140014259:	sub    BYTE PTR [rax],al
   14001425b:	rex add DWORD PTR [rax],eax
   14001425e:	add    BYTE PTR [rax],al
   140014260:	xor    BYTE PTR [rbx],bh
   140014262:	add    DWORD PTR [rax+0x1],eax
	...
   14001426d:	add    BYTE PTR [rax],al
   14001426f:	add    BYTE PTR [rax+0x140001c],dl
	...
   140014285:	add    BYTE PTR [rax],al
   140014287:	add    ah,al
   140014289:	sbb    eax,DWORD PTR [rax]
   14001428b:	rex add DWORD PTR [rax],eax
   14001428e:	add    BYTE PTR [rax],al
   140014290:	sbb    BYTE PTR [rax+rax*1],0x40
   140014294:	add    DWORD PTR [rax],eax
   140014296:	add    BYTE PTR [rax],al
   140014298:	pop    rax
   140014299:	xor    eax,0x14000
   14001429e:	add    BYTE PTR [rax],al
   1400142a0:	call   0x1414143bc
   1400142a5:	add    BYTE PTR [rax],al
   1400142a7:	add    BYTE PTR [rax],dl
   1400142a9:	sub    eax,DWORD PTR [rcx]
   1400142ab:	rex add DWORD PTR [rax],eax
	...
   1400142be:	add    BYTE PTR [rax],al
   1400142c0:	or     al,0x74
   1400142c2:	add    BYTE PTR [rax+0x1],al
   1400142c5:	add    BYTE PTR [rax],al
   1400142c7:	add    BYTE PTR [rsp+0x14001],bh
   1400142ce:	add    BYTE PTR [rax],al
   1400142d0:	mov    WORD PTR [rsi],?
   1400142d2:	add    BYTE PTR [rax+0x1],al
	...
   1400142ed:	add    BYTE PTR [rax],al
   1400142ef:	add    BYTE PTR [rdi+rbp*2+0x63],ch
   1400142f3:	(bad)  
   1400142f4:	ins    BYTE PTR es:[rdi],dx
   1400142f5:	pop    rdi
   1400142f6:	rex.B jo 0x140014369
   1400142f9:	outs   dx,BYTE PTR gs:[rsi]
   1400142fb:	fs push rbx
   1400142fd:	ins    BYTE PTR es:[rdi],dx
   1400142fe:	(bad)  
   1400142ff:	jae    0x140014369
   140014301:	cmp    ah,BYTE PTR [rax]
   140014303:	jb     0x140014366
   140014305:	outs   dx,BYTE PTR ds:[rsi]
   140014306:	and    BYTE PTR [rdi+0x75],ch
   140014309:	je     0x14001432b
   14001430b:	outs   dx,DWORD PTR ds:[rsi]
   14001430c:	data16 and BYTE PTR [rbx+0x70],dh
   140014310:	(bad)  
   140014311:	movsxd esp,DWORD PTR [rbp+0x20]
   140014314:	outs   dx,DWORD PTR ds:[rsi]
   140014315:	outs   dx,BYTE PTR ds:[rsi]
   140014316:	and    BYTE PTR [rip+0x2e73],ah        # 0x14001718f
   14001431c:	cs (bad) 
   14001431e:	add    BYTE PTR [rax],al
   140014320:	cs pop rsp
   140014322:	add    BYTE PTR [rax],al
   140014324:	cs and eax,0x63
   14001432a:	add    BYTE PTR [rax],al
   14001432c:	add    BYTE PTR [rax],al
   14001432e:	add    BYTE PTR [rax],al
   140014330:	push   rdi
   140014331:	(bad)  
   140014332:	jb     0x1400143a2
   140014334:	imul   ebp,DWORD PTR [rsi+0x67],0x6f46203a
   14001433b:	jne    0x1400143ab
   14001433d:	and    BYTE PTR fs:[rcx+0x20],ah
   140014341:	jb     0x1400143a8
   140014343:	jo     0x1400143a6
   140014345:	jb     0x1400143ba
   140014347:	and    BYTE PTR gs:[rax+0x6f],dh
   14001434b:	imul   ebp,DWORD PTR [rsi+0x74],0x746e2820
   140014352:	data16 jae 0x140014375
   140014355:	jae    0x1400143d0
   140014357:	ins    DWORD PTR es:[rdi],dx
   140014358:	ins    BYTE PTR es:[rdi],dx
   140014359:	imul   ebp,DWORD PTR [rsi+0x6b],0x6f662029
   140014360:	jb     0x140014382
   140014362:	and    eax,0x75622073
   140014367:	je     0x140014389
   140014369:	rex.XB jb 0x1400143d1
   14001436c:	(bad)  
   14001436d:	je     0x1400143d4
   14001436f:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x6c696166
   140014378:	gs or  al,BYTE PTR fs:[rax]
   14001437c:	add    BYTE PTR [rax],al
   14001437e:	add    BYTE PTR [rax],al
   140014380:	and    eax,0x62282073
   140014385:	imul   ebp,DWORD PTR [rsi+0x6c],0x636e7561
   14001438c:	push   0x43203a29
   140014391:	(bad)  
   140014392:	outs   dx,BYTE PTR ds:[rsi]
   140014393:	(bad)  
   140014394:	je     0x1400143b6
   140014396:	addr32 gs je 0x1400143ba
   14001439a:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   1400143a1:	and    BYTE PTR gs:[rsi+0x72],ah
   1400143a5:	outs   dx,DWORD PTR ds:[rsi]
   1400143a6:	ins    DWORD PTR es:[rdi],dx
   1400143a7:	and    BYTE PTR [rdi+0x65],al
   1400143aa:	je     0x1400143f9
   1400143ac:	outs   dx,DWORD PTR ds:[rsi]
   1400143ad:	fs jne 0x14001441c
   1400143b0:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x6e],0x20656d61
   1400143ba:	sub    BYTE PTR [rip+0xa2e2973],ah        # 0x14a2f6d33
	...
   1400143c8:	je     0x140014433
   1400143ca:	gs jb  0x1400143fd
   1400143cd:	cs fs ins BYTE PTR es:[rdi],dx
   1400143d0:	ins    BYTE PTR es:[rdi],dx
   1400143d1:	add    BYTE PTR [rax],al
   1400143d3:	add    BYTE PTR [rax],al
   1400143d5:	add    BYTE PTR [rax],al
   1400143d7:	add    BYTE PTR [rsi+0x73],dh
   1400143da:	je     0x140014440
   1400143dc:	ins    BYTE PTR es:[rdi],dx
   1400143dd:	imul   esp,DWORD PTR [rdx+0x2e],0x6c6c64
   1400143e4:	add    BYTE PTR [rax],al
   1400143e6:	add    BYTE PTR [rax],al
   1400143e8:	addr32 (bad) 
   1400143ea:	ins    DWORD PTR es:[rdi],dx
   1400143eb:	gs pop rsp
   1400143ed:	(bad)  
   1400143ee:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   1400143f5:	xor    al,0x0
	...
   1400143ff:	add    BYTE PTR [rip+0x62282073],ah        # 0x1a2296478
   140014405:	imul   ebp,DWORD PTR [rsi+0x6c],0x636e7561
   14001440c:	push   0x55203a29
   140014411:	outs   dx,BYTE PTR ds:[rsi]
   140014412:	(bad)  
   140014413:	(bad)  
   140014414:	ins    BYTE PTR es:[rdi],dx
   140014415:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001441a:	imul   bp,WORD PTR [rsi+0x64],0x6720
   140014420:	(bad)  
   140014421:	ins    DWORD PTR es:[rdi],dx
   140014422:	gs pop rsp
   140014424:	(bad)  
   140014425:	imul   ebp,DWORD PTR [rsi+0x20],0x65726964
   14001442c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014430:	jns    0x140014452
   140014432:	(bad)  
   140014433:	outs   dx,BYTE PTR ds:[rsi]
   140014434:	jns    0x1400144ad
   140014436:	push   0x20657265
   14001443b:	jne    0x1400144ad
   14001443d:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140014441:	and    BYTE PTR [rdx+rsi*2+0x65],dh
   140014445:	and    BYTE PTR gs:[rsi+0x72],ah
   140014449:	outs   dx,DWORD PTR ds:[rsi]
   14001444a:	ins    DWORD PTR es:[rdi],dx
   14001444b:	and    BYTE PTR [rip+0xa2e73],ah        # 0x1400b72c4
   140014451:	add    BYTE PTR [rax],al
   140014453:	add    BYTE PTR [rax+0x41],dl
   140014456:	push   rsp
   140014457:	rex.W add BYTE PTR [rax],al
   14001445a:	add    BYTE PTR [rax],al
   14001445c:	add    BYTE PTR [rax],al
   14001445e:	add    BYTE PTR [rax],al
   140014460:	push   rax
   140014461:	push   r12
   140014463:	cmp    rax,0x253b7325
   140014469:	jae    0x14001446b
   14001446b:	add    BYTE PTR [rax],al
   14001446d:	add    BYTE PTR [rax],al
   14001446f:	add    BYTE PTR [rip+0x62282073],ah        # 0x1a22964e8
   140014475:	imul   ebp,DWORD PTR [rsi+0x6c],0x636e7561
   14001447c:	push   0x4e203a29
   140014481:	outs   dx,DWORD PTR ds:[rsi]
   140014482:	and    BYTE PTR [rdi+rbp*2+0x74],ah
   140014486:	and    BYTE PTR [rbx+0x68],ah
   140014489:	(bad)  
   14001448a:	jb     0x1400144ed
   14001448c:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   140014490:	and    BYTE PTR [rcx+0x6e],ch
   140014493:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140014497:	and    BYTE PTR [rsi+0x69],ah
   14001449a:	ins    BYTE PTR es:[rdi],dx
   14001449b:	outs   dx,BYTE PTR gs:[rsi]
   14001449d:	(bad)  
   14001449e:	ins    DWORD PTR es:[rdi],dx
   14001449f:	gs or  al,BYTE PTR cs:[rax]
   1400144a3:	add    BYTE PTR [rsi],ch
   1400144a5:	fs ins BYTE PTR es:[rdi],dx
   1400144a7:	ins    BYTE PTR es:[rdi],dx
   1400144a8:	add    BYTE PTR [rax],al
   1400144aa:	add    BYTE PTR [rax],al
   1400144ac:	and    eax,0x732573
   1400144b1:	add    BYTE PTR [rax],al
   1400144b3:	add    BYTE PTR [rax],al
   1400144b5:	add    BYTE PTR [rax],al
   1400144b7:	add    BYTE PTR [rip+0x62282073],ah        # 0x1a2296530
   1400144bd:	imul   ebp,DWORD PTR [rsi+0x6c],0x636e7561
   1400144c4:	push   0x55203a29
   1400144c9:	outs   dx,BYTE PTR ds:[rsi]
   1400144ca:	(bad)  
   1400144cb:	(bad)  
   1400144cc:	ins    BYTE PTR es:[rdi],dx
   1400144cd:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   1400144d2:	ins    BYTE PTR es:[rdi],dx
   1400144d3:	outs   dx,DWORD PTR ds:[rsi]
   1400144d4:	(bad)  
   1400144d5:	and    BYTE PTR fs:[rbp+0x6f],ch
   1400144d9:	fs jne 0x140014548
   1400144dc:	and    BYTE PTR gs:[rip+0x65202c73],ah        # 0x1a5217156
   1400144e3:	jb     0x140014557
   1400144e5:	outs   dx,DWORD PTR ds:[rsi]
   1400144e6:	jb     0x140014508
   1400144e8:	and    eax,0xa0a64
   1400144ed:	add    BYTE PTR [rax],al
   1400144ef:	add    BYTE PTR [rbx+0x72],al
   1400144f2:	gs (bad) 
   1400144f4:	je     0x14001455b
   1400144f6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400144f8:	je     0x14001455f
   1400144fa:	jb     0x140014562
   1400144fc:	(bad)  
   1400144fd:	movsxd esp,DWORD PTR [rbp+0x0]
   140014500:	and    eax,0x62282073
   140014505:	imul   ebp,DWORD PTR [rsi+0x6c],0x636e7561
   14001450c:	push   0x43203a29
   140014511:	(bad)  
   140014512:	outs   dx,BYTE PTR ds:[rsi]
   140014513:	(bad)  
   140014514:	je     0x140014536
   140014516:	addr32 gs je 0x14001453a
   14001451a:	data16 jne 0x14001458b
   14001451d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140014521:	outs   dx,BYTE PTR ds:[rsi]
   140014522:	and    BYTE PTR [rip+0x72662073],ah        # 0x1b267659b
   140014528:	outs   dx,DWORD PTR ds:[rsi]
   140014529:	ins    DWORD PTR es:[rdi],dx
   14001452a:	and    BYTE PTR [rip+0xa0a73],ah        # 0x1400b4fa3
   140014530:	ins    BYTE PTR es:[rdi],dx
   140014531:	(bad)  
   140014532:	jne    0x1400145a2
   140014534:	movsxd ebp,DWORD PTR [rax+0x61]
   140014537:	(bad)  
   140014538:	ins    BYTE PTR es:[rdi],dx
   140014539:	gs pop rdi
   14001453b:	fs ins BYTE PTR es:[rdi],dx
   14001453d:	ins    BYTE PTR es:[rdi],dx
   14001453e:	pop    rdi
   14001453f:	xor    DWORD PTR [rax],eax
   140014541:	add    BYTE PTR [rax],al
   140014543:	add    BYTE PTR [rax],al
   140014545:	add    BYTE PTR [rax],al
   140014547:	add    BYTE PTR [rip+0x62282073],ah        # 0x1a22965c0
   14001454d:	imul   ebp,DWORD PTR [rsi+0x6c],0x636e7561
   140014554:	push   0x43203a29
   140014559:	(bad)  
   14001455a:	outs   dx,BYTE PTR ds:[rsi]
   14001455b:	(bad)  
   14001455c:	je     0x14001457e
   14001455e:	addr32 gs je 0x140014582
   140014562:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
   140014569:	movsxd esp,DWORD PTR [rbp+0x20]
   14001456c:	and    eax,0x72662073
   140014571:	outs   dx,DWORD PTR ds:[rsi]
   140014572:	ins    DWORD PTR es:[rdi],dx
   140014573:	and    BYTE PTR [rsi+0x72],ah
   140014576:	outs   dx,DWORD PTR ds:[rsi]
   140014577:	ins    DWORD PTR es:[rdi],dx
   140014578:	and    BYTE PTR [rip+0xa0a73],ah        # 0x1400b4ff1
   14001457e:	add    BYTE PTR [rax],al
   140014580:	clc    
   140014581:	rol    BYTE PTR [rcx],0x40
   140014584:	add    DWORD PTR [rax],eax
   140014586:	add    BYTE PTR [rax],al
   140014588:	int3   
   140014589:	and    eax,0x14000
   14001458e:	add    BYTE PTR [rax],al
   140014590:	push   rax
   140014591:	add    BYTE PTR es:[rax+0x1],al
   140014595:	add    BYTE PTR [rax],al
   140014597:	add    BYTE PTR [rbp+0x6e],dl
   14001459a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001459e:	outs   dx,BYTE PTR ds:[rsi]
   14001459f:	and    BYTE PTR [rbp+0x78],ah
   1400145a2:	movsxd esp,DWORD PTR [rbp+0x70]
   1400145a5:	je     0x140014610
   1400145a7:	outs   dx,DWORD PTR ds:[rsi]
   1400145a8:	outs   dx,BYTE PTR ds:[rsi]
   1400145a9:	add    BYTE PTR [rax],al
   1400145ab:	add    BYTE PTR [rax],al
   1400145ad:	add    BYTE PTR [rax],al
   1400145af:	add    BYTE PTR [rax-0x3f],dh
   1400145b2:	add    DWORD PTR [rax+0x1],eax
   1400145b5:	add    BYTE PTR [rax],al
   1400145b7:	add    ah,cl
   1400145b9:	and    eax,0x14000
   1400145be:	add    BYTE PTR [rax],al
   1400145c0:	push   rax
   1400145c1:	add    BYTE PTR es:[rax+0x1],al
   1400145c5:	add    BYTE PTR [rax],al
   1400145c7:	add    BYTE PTR [rdx+0x61],ah
   1400145ca:	and    BYTE PTR fs:[rcx+0x6c],ah
   1400145ce:	ins    BYTE PTR es:[rdi],dx
   1400145cf:	outs   dx,DWORD PTR ds:[rsi]
   1400145d0:	movsxd esp,DWORD PTR [rcx+0x74]
   1400145d3:	imul   ebp,DWORD PTR [rdi+0x6e],0xc1f00000
   1400145da:	add    DWORD PTR [rax+0x1],eax
   1400145dd:	add    BYTE PTR [rax],al
   1400145df:	add    ah,cl
   1400145e1:	and    eax,0x14000
   1400145e6:	add    BYTE PTR [rax],al
   1400145e8:	push   rax
   1400145e9:	add    BYTE PTR es:[rax+0x1],al
   1400145ed:	add    BYTE PTR [rax],al
   1400145ef:	add    BYTE PTR [rdx+0x61],ah
   1400145f2:	and    BYTE PTR fs:[rcx+0x72],ah
   1400145f6:	jb     0x140014659
   1400145f8:	jns    0x14001461a
   1400145fa:	outs   dx,BYTE PTR ds:[rsi]
   1400145fb:	gs ja  0x14001461e
   1400145fe:	ins    BYTE PTR es:[rdi],dx
   1400145ff:	outs   dx,BYTE PTR gs:[rsi]
   140014601:	addr32 je 0x14001466c
   140014604:	add    BYTE PTR [rax],al
   140014606:	add    BYTE PTR [rax],al
   140014608:	js     0x1400145cc
   14001460a:	add    DWORD PTR [rax+0x1],eax
   14001460d:	add    BYTE PTR [rax],al
   14001460f:	add    BYTE PTR [rax+rbp*1],bh
   140014612:	add    BYTE PTR [rax+0x1],al
	...
   14001461d:	add    BYTE PTR [rax],al
   14001461f:	add    BYTE PTR [rbx+0x73],ah
   140014622:	ins    DWORD PTR es:[rdi],dx
   140014623:	loopne 0x140014626
	...
   140014635:	add    BYTE PTR [rax],al
   140014637:	add    BYTE PTR [rax+rax*1],al
   14001463a:	add    BYTE PTR [rax],al
   14001463c:	add    BYTE PTR [rax],al
   14001463e:	add    BYTE PTR [rax],al
   140014640:	and    BYTE PTR [rip+0x1993],al        # 0x140015fd9
	...
   14001465e:	add    BYTE PTR [rax],al
   140014660:	add    BYTE PTR [rsi+0x1],0x40
   140014664:	add    DWORD PTR [rax],eax
   140014666:	add    BYTE PTR [rax],al
   140014668:	cwde   
   140014669:	rex.RX add DWORD PTR [rax+0x1],r8d
   14001466d:	add    BYTE PTR [rax],al
   14001466f:	add    al,bl
   140014671:	rex.RX add DWORD PTR [rax+0x1],r8d
   140014675:	add    BYTE PTR [rax],al
   140014677:	add    BYTE PTR [rax],bl
   140014679:	rex.RXB add DWORD PTR [r8+0x1],r8d
   14001467d:	add    BYTE PTR [rax],al
   14001467f:	add    BYTE PTR [rcx+0x0],ah
   140014682:	add    BYTE PTR fs:[rsi+0x0],dh
   140014686:	(bad)  
   140014687:	add    BYTE PTR [rax+0x0],dh
   14001468a:	imul   eax,DWORD PTR [rax],0x320033
	...
   140014698:	(bad)  
   140014699:	add    BYTE PTR [rax+0x0],dh
   14001469c:	imul   eax,DWORD PTR [rax],0x6d002d
   1400146a2:	jae    0x1400146a4
   1400146a4:	sub    eax,0x69007700
   1400146a9:	add    BYTE PTR [rsi+0x0],ch
   1400146ac:	sub    eax,0x6f006300
   1400146b1:	add    BYTE PTR [rdx+0x0],dh
   1400146b4:	add    BYTE PTR gs:[rip+0x69006600],ch        # 0x1a901acbb
   1400146bb:	add    BYTE PTR [rdx+0x0],ah
   1400146be:	add    BYTE PTR gs:[rdx+0x0],dh
   1400146c2:	jae    0x1400146c4
   1400146c4:	sub    eax,0x31006c00
   1400146c9:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d0177cf
   1400146cf:	add    BYTE PTR [rcx],dh
   1400146d1:	add    BYTE PTR [rax],al
   1400146d3:	add    BYTE PTR [rax],al
   1400146d5:	add    BYTE PTR [rax],al
   1400146d7:	add    BYTE PTR [rcx+0x0],ah
   1400146da:	jo     0x1400146dc
   1400146dc:	imul   eax,DWORD PTR [rax],0x6d002d
   1400146e2:	jae    0x1400146e4
   1400146e4:	sub    eax,0x69007700
   1400146e9:	add    BYTE PTR [rsi+0x0],ch
   1400146ec:	sub    eax,0x6f006300
   1400146f1:	add    BYTE PTR [rdx+0x0],dh
   1400146f4:	add    BYTE PTR gs:[rip+0x79007300],ch        # 0x1b901b9fb
   1400146fb:	add    BYTE PTR [rsi+0x0],ch
   1400146fe:	movsxd eax,DWORD PTR [rax]
   140014700:	push   0x6c002d00
   140014705:	add    BYTE PTR [rcx],dh
   140014707:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d01790d
   14001470d:	add    BYTE PTR [rax],dh
	...
   140014717:	add    BYTE PTR [rbx+0x0],ch
   14001471a:	add    BYTE PTR gs:[rdx+0x0],dh
   14001471e:	outs   dx,BYTE PTR ds:[rsi]
   14001471f:	add    BYTE PTR [rbp+0x0],ah
   140014722:	ins    BYTE PTR es:[rdi],dx
   140014723:	add    BYTE PTR [rbx],dh
   140014725:	add    BYTE PTR [rdx],dh
	...
   14001472f:	add    BYTE PTR [rcx],al
   140014731:	add    BYTE PTR [rax],al
   140014733:	add    BYTE PTR [rbx],al
   140014735:	add    BYTE PTR [rax],al
   140014737:	add    BYTE PTR [rsi+0x6c],al
   14001473a:	jae    0x14001477d
   14001473c:	ins    BYTE PTR es:[rdi],dx
   14001473d:	ins    BYTE PTR es:[rdi],dx
   14001473e:	outs   dx,DWORD PTR ds:[rsi]
   14001473f:	movsxd eax,DWORD PTR [rax]
   140014741:	add    BYTE PTR [rax],al
   140014743:	add    BYTE PTR [rax],al
   140014745:	add    BYTE PTR [rax],al
   140014747:	add    BYTE PTR [rcx],al
   140014749:	add    BYTE PTR [rax],al
   14001474b:	add    BYTE PTR [rbx],al
   14001474d:	add    BYTE PTR [rax],al
   14001474f:	add    BYTE PTR [rsi+0x6c],al
   140014752:	jae    0x14001479a
   140014754:	jb     0x1400147bb
   140014756:	add    BYTE PTR gs:[rsi+0x6c],al
   14001475a:	jae    0x1400147a3
   14001475c:	gs je  0x1400147b5
   14001475f:	(bad)  
   140014760:	ins    BYTE PTR es:[rdi],dx
   140014761:	jne    0x1400147c8
   140014763:	add    BYTE PTR [rax],al
   140014765:	add    BYTE PTR [rax],al
   140014767:	add    BYTE PTR [rcx],al
   140014769:	add    BYTE PTR [rax],al
   14001476b:	add    BYTE PTR [rbx],al
   14001476d:	add    BYTE PTR [rax],al
   14001476f:	add    BYTE PTR [rsi+0x6c],al
   140014772:	jae    0x1400147c7
   140014774:	gs je  0x1400147cd
   140014777:	(bad)  
   140014778:	ins    BYTE PTR es:[rdi],dx
   140014779:	jne    0x1400147e0
   14001477b:	add    BYTE PTR [rax],al
   14001477d:	add    BYTE PTR [rax],al
   14001477f:	add    BYTE PTR [rdx],al
   140014781:	add    BYTE PTR [rax],al
   140014783:	add    BYTE PTR [rbx],al
   140014785:	add    BYTE PTR [rax],al
   140014787:	add    BYTE PTR [rcx+0x6e],cl
   14001478a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140014792:	rex.XB jb 0x1400147fe
   140014795:	je     0x140014800
   140014797:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001479a:	push   rbx
   14001479b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400147a0:	outs   dx,BYTE PTR ds:[rsi]
   1400147a1:	rex.RB js 0x1400147a4
	...
   1400147b0:	ror    BYTE PTR [rdx+0x1],1
   1400147b3:	rex add DWORD PTR [rax],eax
   1400147b6:	add    BYTE PTR [rax],al
   1400147b8:	loopne 0x140014804
   1400147ba:	add    DWORD PTR [rax+0x1],eax
   1400147bd:	add    BYTE PTR [rax],al
   1400147bf:	add    al,ch
   1400147c1:	rex.WX add QWORD PTR [rax+0x1],rax
   1400147c5:	add    BYTE PTR [rax],al
   1400147c7:	add    al,bh
   1400147c9:	rex.WX add QWORD PTR [rax+0x1],rax
   1400147cd:	add    BYTE PTR [rax],al
   1400147cf:	add    BYTE PTR [rax],cl
   1400147d1:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400147d5:	add    BYTE PTR [rax],al
   1400147d7:	add    BYTE PTR [rax],bl
   1400147d9:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400147dd:	add    BYTE PTR [rax],al
   1400147df:	add    BYTE PTR [rax],ch
   1400147e1:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400147e5:	add    BYTE PTR [rax],al
   1400147e7:	add    BYTE PTR [rax],bh
   1400147e9:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400147ed:	add    BYTE PTR [rax],al
   1400147ef:	add    BYTE PTR [rbx+rcx*2+0x1],al
   1400147f3:	rex add DWORD PTR [rax],eax
   1400147f6:	add    BYTE PTR [rax],al
   1400147f8:	push   rax
   1400147f9:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400147fd:	add    BYTE PTR [rax],al
   1400147ff:	add    BYTE PTR [rax+0x4b],bl
   140014802:	add    DWORD PTR [rax+0x1],eax
   140014805:	add    BYTE PTR [rax],al
   140014807:	add    BYTE PTR [rax+0x4b],ch
   14001480a:	add    DWORD PTR [rax+0x1],eax
   14001480d:	add    BYTE PTR [rax],al
   14001480f:	add    BYTE PTR [rax+0x4b],bh
   140014812:	add    DWORD PTR [rax+0x1],eax
   140014815:	add    BYTE PTR [rax],al
   140014817:	add    BYTE PTR [rdx+0x140014b],al
   14001481d:	add    BYTE PTR [rax],al
   14001481f:	add    BYTE PTR [rbx+rcx*2+0x14001],al
   140014826:	add    BYTE PTR [rax],al
   140014828:	nop
   140014829:	rex.WXB add QWORD PTR [r8+0x1],rax
   14001482d:	add    BYTE PTR [rax],al
   14001482f:	add    BYTE PTR [rax+0x140014b],bl
   140014835:	add    BYTE PTR [rax],al
   140014837:	add    BYTE PTR [rbx+rcx*2+0x14001],bl
   14001483e:	add    BYTE PTR [rax],al
   140014840:	movabs al,ds:0xa40000000140014b
   140014849:	rex.WXB add QWORD PTR [r8+0x1],rax
   14001484d:	add    BYTE PTR [rax],al
   14001484f:	add    BYTE PTR [rax+0x140014b],ch
   140014855:	add    BYTE PTR [rax],al
   140014857:	add    BYTE PTR [rbx+rcx*2+0x14001],ch
   14001485e:	add    BYTE PTR [rax],al
   140014860:	mov    al,0x4b
   140014862:	add    DWORD PTR [rax+0x1],eax
   140014865:	add    BYTE PTR [rax],al
   140014867:	add    BYTE PTR [rax+0x140014b],bh
   14001486d:	add    BYTE PTR [rax],al
   14001486f:	add    ah,al
   140014871:	rex.WXB add QWORD PTR [r8+0x1],rax
   140014875:	add    BYTE PTR [rax],al
   140014877:	add    al,cl
   140014879:	rex.WXB add QWORD PTR [r8+0x1],rax
   14001487d:	add    BYTE PTR [rax],al
   14001487f:	add    ah,cl
   140014881:	rex.WXB add QWORD PTR [r8+0x1],rax
   140014885:	add    BYTE PTR [rax],al
   140014887:	add    al,dl
   140014889:	rex.WXB add QWORD PTR [r8+0x1],rax
   14001488d:	add    BYTE PTR [rax],al
   14001488f:	add    ah,dl
   140014891:	rex.WXB add QWORD PTR [r8+0x1],rax
   140014895:	add    BYTE PTR [rax],al
   140014897:	add    al,bl
   140014899:	rex.WXB add QWORD PTR [r8+0x1],rax
   14001489d:	add    BYTE PTR [rax],al
   14001489f:	add    ah,bl
   1400148a1:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400148a5:	add    BYTE PTR [rax],al
   1400148a7:	add    al,ah
   1400148a9:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400148ad:	add    BYTE PTR [rax],al
   1400148af:	add    ah,ah
   1400148b1:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400148b5:	add    BYTE PTR [rax],al
   1400148b7:	add    al,ch
   1400148b9:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400148bd:	add    BYTE PTR [rax],al
   1400148bf:	add    ah,ch
   1400148c1:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400148c5:	add    BYTE PTR [rax],al
   1400148c7:	add    al,dh
   1400148c9:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400148cd:	add    BYTE PTR [rax],al
   1400148cf:	add    ah,dh
   1400148d1:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400148d5:	add    BYTE PTR [rax],al
   1400148d7:	add    al,bh
   1400148d9:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400148dd:	add    BYTE PTR [rax],al
   1400148df:	add    ah,bh
   1400148e1:	rex.WXB add QWORD PTR [r8+0x1],rax
   1400148e5:	add    BYTE PTR [rax],al
   1400148e7:	add    BYTE PTR [rax],al
   1400148e9:	add    QWORD PTR [rax+0x1],r8
   1400148ed:	add    BYTE PTR [rax],al
   1400148ef:	add    BYTE PTR [rsp+rcx*2],al
   1400148f2:	add    DWORD PTR [rax+0x1],eax
   1400148f5:	add    BYTE PTR [rax],al
   1400148f7:	add    BYTE PTR [rax],cl
   1400148f9:	add    QWORD PTR [rax+0x1],r8
   1400148fd:	add    BYTE PTR [rax],al
   1400148ff:	add    BYTE PTR [rsp+rcx*2],cl
   140014902:	add    DWORD PTR [rax+0x1],eax
   140014905:	add    BYTE PTR [rax],al
   140014907:	add    BYTE PTR [rax],dl
   140014909:	add    QWORD PTR [rax+0x1],r8
   14001490d:	add    BYTE PTR [rax],al
   14001490f:	add    BYTE PTR [rsp+rcx*2],dl
   140014912:	add    DWORD PTR [rax+0x1],eax
   140014915:	add    BYTE PTR [rax],al
   140014917:	add    BYTE PTR [rax],bl
   140014919:	add    QWORD PTR [rax+0x1],r8
   14001491d:	add    BYTE PTR [rax],al
   14001491f:	add    BYTE PTR [rsp+rcx*2],bl
   140014922:	add    DWORD PTR [rax+0x1],eax
   140014925:	add    BYTE PTR [rax],al
   140014927:	add    BYTE PTR [rax],ah
   140014929:	add    QWORD PTR [rax+0x1],r8
   14001492d:	add    BYTE PTR [rax],al
   14001492f:	add    BYTE PTR [rsp+rcx*2],ah
   140014932:	add    DWORD PTR [rax+0x1],eax
   140014935:	add    BYTE PTR [rax],al
   140014937:	add    BYTE PTR [rax],ch
   140014939:	add    QWORD PTR [rax+0x1],r8
   14001493d:	add    BYTE PTR [rax],al
   14001493f:	add    BYTE PTR [rsp+rcx*2],ch
   140014942:	add    DWORD PTR [rax+0x1],eax
   140014945:	add    BYTE PTR [rax],al
   140014947:	add    BYTE PTR [rax],dh
   140014949:	add    QWORD PTR [rax+0x1],r8
   14001494d:	add    BYTE PTR [rax],al
   14001494f:	add    BYTE PTR [rsp+rcx*2],dh
   140014952:	add    DWORD PTR [rax+0x1],eax
   140014955:	add    BYTE PTR [rax],al
   140014957:	add    BYTE PTR [rax],bh
   140014959:	add    QWORD PTR [rax+0x1],r8
   14001495d:	add    BYTE PTR [rax],al
   14001495f:	add    BYTE PTR [rsp+rcx*2],bh
   140014962:	add    DWORD PTR [rax+0x1],eax
   140014965:	add    BYTE PTR [rax],al
   140014967:	add    BYTE PTR [rax+0x4c],al
   14001496a:	add    DWORD PTR [rax+0x1],eax
   14001496d:	add    BYTE PTR [rax],al
   14001496f:	add    BYTE PTR [rax+0x4c],dl
   140014972:	add    DWORD PTR [rax+0x1],eax
   140014975:	add    BYTE PTR [rax],al
   140014977:	add    BYTE PTR [rax+0x4c],ah
   14001497a:	add    DWORD PTR [rax+0x1],eax
   14001497d:	add    BYTE PTR [rax],al
   14001497f:	add    BYTE PTR [rax+0x4c],ch
   140014982:	add    DWORD PTR [rax+0x1],eax
   140014985:	add    BYTE PTR [rax],al
   140014987:	add    BYTE PTR [rax+0x4c],bh
   14001498a:	add    DWORD PTR [rax+0x1],eax
   14001498d:	add    BYTE PTR [rax],al
   14001498f:	add    BYTE PTR [rax+0x140014c],dl
   140014995:	add    BYTE PTR [rax],al
   140014997:	add    BYTE PTR [rax+0x140014c],ah
   14001499d:	add    BYTE PTR [rax],al
   14001499f:	add    BYTE PTR [rax+0x140014c],bh
   1400149a5:	add    BYTE PTR [rax],al
   1400149a7:	add    al,bl
   1400149a9:	add    QWORD PTR [rax+0x1],r8
   1400149ad:	add    BYTE PTR [rax],al
   1400149af:	add    al,bh
   1400149b1:	add    QWORD PTR [rax+0x1],r8
   1400149b5:	add    BYTE PTR [rax],al
   1400149b7:	add    BYTE PTR [rax],bl
   1400149b9:	add    QWORD PTR [r8+0x1],r8
   1400149bd:	add    BYTE PTR [rax],al
   1400149bf:	add    BYTE PTR [rax],bh
   1400149c1:	add    QWORD PTR [r8+0x1],r8
   1400149c5:	add    BYTE PTR [rax],al
   1400149c7:	add    BYTE PTR [rax+0x4d],bl
   1400149ca:	add    DWORD PTR [rax+0x1],eax
   1400149cd:	add    BYTE PTR [rax],al
   1400149cf:	add    BYTE PTR [rax+0x140014d],al
   1400149d5:	add    BYTE PTR [rax],al
   1400149d7:	add    BYTE PTR [rax+0x140014d],ah
   1400149dd:	add    BYTE PTR [rax],al
   1400149df:	add    al,cl
   1400149e1:	add    QWORD PTR [r8+0x1],r8
   1400149e5:	add    BYTE PTR [rax],al
   1400149e7:	add    al,ch
   1400149e9:	add    QWORD PTR [r8+0x1],r8
   1400149ed:	add    BYTE PTR [rax],al
   1400149ef:	add    BYTE PTR [rax],dl
   1400149f1:	rex.WRX add QWORD PTR [rax+0x1],r8
   1400149f5:	add    BYTE PTR [rax],al
   1400149f7:	add    BYTE PTR [rax],dh
   1400149f9:	rex.WRX add QWORD PTR [rax+0x1],r8
   1400149fd:	add    BYTE PTR [rax],al
   1400149ff:	add    BYTE PTR [rax+0x4e],al
   140014a02:	add    DWORD PTR [rax+0x1],eax
   140014a05:	add    BYTE PTR [rax],al
   140014a07:	add    BYTE PTR [rsi+rcx*2+0x1],al
   140014a0b:	rex add DWORD PTR [rax],eax
   140014a0e:	add    BYTE PTR [rax],al
   140014a10:	push   rax
   140014a11:	rex.WRX add QWORD PTR [rax+0x1],r8
   140014a15:	add    BYTE PTR [rax],al
   140014a17:	add    BYTE PTR [rax+0x4e],ah
   140014a1a:	add    DWORD PTR [rax+0x1],eax
   140014a1d:	add    BYTE PTR [rax],al
   140014a1f:	add    BYTE PTR [rsi+rcx*2+0x14001],al
   140014a26:	add    BYTE PTR [rax],al
   140014a28:	nop
   140014a29:	rex.WRX add QWORD PTR [rax+0x1],r8
   140014a2d:	add    BYTE PTR [rax],al
   140014a2f:	add    BYTE PTR [rax+0x140014e],ah
   140014a35:	add    BYTE PTR [rax],al
   140014a37:	add    BYTE PTR [rax+0x140014e],dh
   140014a3d:	add    BYTE PTR [rax],al
   140014a3f:	add    al,dl
   140014a41:	rex.WRX add QWORD PTR [rax+0x1],r8
   140014a45:	add    BYTE PTR [rax],al
   140014a47:	add    al,dh
   140014a49:	rex.WRX add QWORD PTR [rax+0x1],r8
   140014a4d:	add    BYTE PTR [rax],al
   140014a4f:	add    BYTE PTR [rax],bl
   140014a51:	rex.WRXB add QWORD PTR [r8+0x1],r8
   140014a55:	add    BYTE PTR [rax],al
   140014a57:	add    BYTE PTR [rax+0x4f],al
   140014a5a:	add    DWORD PTR [rax+0x1],eax
   140014a5d:	add    BYTE PTR [rax],al
   140014a5f:	add    BYTE PTR [rax+0x4f],ch
   140014a62:	add    DWORD PTR [rax+0x1],eax
   140014a65:	add    BYTE PTR [rax],al
   140014a67:	add    BYTE PTR [rax+0x140014f],bl
   140014a6d:	add    BYTE PTR [rax],al
   140014a6f:	add    BYTE PTR [rax+0x140014f],bh
   140014a75:	add    BYTE PTR [rax],al
   140014a77:	add    al,ah
   140014a79:	rex.WRXB add QWORD PTR [r8+0x1],r8
   140014a7d:	add    BYTE PTR [rax],al
   140014a7f:	add    BYTE PTR [rax],cl
   140014a81:	push   rax
   140014a82:	add    DWORD PTR [rax+0x1],eax
   140014a85:	add    BYTE PTR [rax],al
   140014a87:	add    BYTE PTR [rax],bh
   140014a89:	push   rax
   140014a8a:	add    DWORD PTR [rax+0x1],eax
   140014a8d:	add    BYTE PTR [rax],al
   140014a8f:	add    BYTE PTR [rax+0x50],ch
   140014a92:	add    DWORD PTR [rax+0x1],eax
   140014a95:	add    BYTE PTR [rax],al
   140014a97:	add    BYTE PTR [rax+0x1400150],cl
   140014a9d:	add    BYTE PTR [rax],al
   140014a9f:	add    BYTE PTR [rdx+0x140014b],al
   140014aa5:	add    BYTE PTR [rax],al
   140014aa7:	add    BYTE PTR [rax+0x1400150],bl
   140014aad:	add    BYTE PTR [rax],al
   140014aaf:	add    BYTE PTR [rax+0x1400150],dh
   140014ab5:	add    BYTE PTR [rax],al
   140014ab7:	add    al,dl
   140014ab9:	push   rax
   140014aba:	add    DWORD PTR [rax+0x1],eax
   140014abd:	add    BYTE PTR [rax],al
   140014abf:	add    al,ch
   140014ac1:	push   rax
   140014ac2:	add    DWORD PTR [rax+0x1],eax
   140014ac5:	add    BYTE PTR [rax],al
   140014ac7:	add    BYTE PTR [rax],cl
   140014ac9:	push   rcx
   140014aca:	add    DWORD PTR [rax+0x1],eax
   140014acd:	add    BYTE PTR [rax],al
   140014acf:	add    BYTE PTR [rdi+0x5f],bl
   140014ad2:	(bad)  
   140014ad4:	jae    0x140014b3b
   140014ad6:	sub    BYTE PTR fs:[rax],al
   140014ad9:	add    BYTE PTR [rax],al
   140014adb:	add    BYTE PTR [rax],al
   140014add:	add    BYTE PTR [rax],al
   140014adf:	add    BYTE PTR [rdi+0x5f],bl
   140014ae2:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   140014ae6:	ins    BYTE PTR es:[rdi],dx
   140014ae7:	add    BYTE PTR [rdi+0x5f],bl
   140014aea:	jo     0x140014b4d
   140014aec:	jae    0x140014b51
   140014aee:	(bad)  
   140014aef:	ins    BYTE PTR es:[rdi],dx
	...
   140014af8:	pop    rdi
   140014af9:	pop    rdi
   140014afa:	jae    0x140014b70
   140014afc:	movsxd esp,DWORD PTR fs:[rcx+0x6c]
   140014b00:	ins    BYTE PTR es:[rdi],dx
   140014b01:	add    BYTE PTR [rax],al
   140014b03:	add    BYTE PTR [rax],al
   140014b05:	add    BYTE PTR [rax],al
   140014b07:	add    BYTE PTR [rdi+0x5f],bl
   140014b0a:	je     0x140014b74
   140014b0c:	imul   esi,DWORD PTR [rbx+0x63],0x6c6c61
   140014b13:	add    BYTE PTR [rax],al
   140014b15:	add    BYTE PTR [rax],al
   140014b17:	add    BYTE PTR [rdi+0x5f],bl
   140014b1a:	data16 (bad) 
   140014b1c:	jae    0x140014b92
   140014b1e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014b21:	ins    BYTE PTR es:[rdi],dx
   140014b22:	add    BYTE PTR [rax],al
   140014b24:	add    BYTE PTR [rax],al
   140014b26:	add    BYTE PTR [rax],al
   140014b28:	pop    rdi
   140014b29:	pop    rdi
   140014b2a:	jbe    0x140014b91
   140014b2c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014b30:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014b33:	ins    BYTE PTR es:[rdi],dx
   140014b34:	add    BYTE PTR [rax],al
   140014b36:	add    BYTE PTR [rax],al
   140014b38:	pop    rdi
   140014b39:	pop    rdi
   140014b3a:	movsxd ebp,DWORD PTR [rdx+rsi*2+0x63]
   140014b3e:	(bad)  
   140014b3f:	ins    BYTE PTR es:[rdi],dx
   140014b40:	ins    BYTE PTR es:[rdi],dx
   140014b41:	add    BYTE PTR [rax],al
   140014b43:	add    BYTE PTR [rdi+0x5f],bl
   140014b46:	gs (bad) 
   140014b48:	(bad)  
   140014b49:	imul   eax,DWORD PTR [rax],0x0
   140014b4f:	add    BYTE PTR [rdi+0x5f],bl
   140014b52:	jo     0x140014bc8
   140014b54:	jb     0x140014b8c
   140014b56:	xor    al,0x0
   140014b58:	pop    rdi
   140014b59:	pop    rdi
   140014b5a:	jb     0x140014bc1
   140014b5c:	jae    0x140014bd2
   140014b5e:	jb     0x140014bc9
   140014b60:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140014b64:	add    BYTE PTR [rax],al
   140014b66:	add    BYTE PTR [rax],al
   140014b68:	pop    rdi
   140014b69:	pop    rdi
   140014b6a:	jne    0x140014bda
   140014b6c:	(bad)  
   140014b6d:	ins    BYTE PTR es:[rdi],dx
   140014b6e:	imul   esp,DWORD PTR [rdi+0x6e],0x6465
   140014b75:	add    BYTE PTR [rax],al
   140014b77:	add    BYTE PTR [rdx+0x65],dh
   140014b7a:	jae    0x140014bf0
   140014b7c:	jb     0x140014be7
   140014b7e:	movsxd esi,DWORD PTR [rax+rbp*1+0x0]
   140014b82:	add    BYTE PTR [rax],al
   140014b84:	and    BYTE PTR [rsi+0x65],ch
   140014b87:	ja     0x140014b89
   140014b89:	add    BYTE PTR [rax],al
   140014b8b:	add    BYTE PTR [rax],al
   140014b8d:	add    BYTE PTR [rax],al
   140014b8f:	add    BYTE PTR [rax],ah
   140014b91:	fs gs ins BYTE PTR es:[rdi],dx
   140014b94:	gs je  0x140014bfc
   140014b97:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e014b9d
   140014b9d:	add    BYTE PTR ds:[rax],al
   140014ba0:	cmp    al,0x3c
   140014ba2:	add    BYTE PTR [rax],al
   140014ba4:	and    DWORD PTR [rax],eax
   140014ba6:	add    BYTE PTR [rax],al
   140014ba8:	cmp    eax,0x2100003d
   140014bad:	cmp    eax,0x5d5b0000
   140014bb2:	add    BYTE PTR [rax],al
   140014bb4:	add    BYTE PTR [rax],al
   140014bb6:	add    BYTE PTR [rax],al
   140014bb8:	outs   dx,DWORD PTR ds:[rsi]
   140014bb9:	jo     0x140014c20
   140014bbb:	jb     0x140014c1e
   140014bbd:	je     0x140014c2e
   140014bbf:	jb     0x140014bc1
   140014bc1:	add    BYTE PTR [rax],al
   140014bc3:	add    BYTE PTR [rip+0x2a00003e],ch        # 0x16a014c07
   140014bc9:	add    BYTE PTR [rax],al
   140014bcb:	add    BYTE PTR [rbx],ch
   140014bcd:	sub    eax,DWORD PTR [rax]
   140014bcf:	add    BYTE PTR [rip+0x2d00002d],ch        # 0x16d014c02
   140014bd5:	add    BYTE PTR [rax],al
   140014bd7:	add    BYTE PTR [rbx],ch
   140014bd9:	add    BYTE PTR [rax],al
   140014bdb:	add    BYTE PTR [rsi],ah
   140014bdd:	add    BYTE PTR [rax],al
   140014bdf:	add    BYTE PTR [rip+0x2f002a3e],ch        # 0x16f017623
   140014be5:	add    BYTE PTR [rax],al
   140014be7:	add    BYTE PTR [rip+0x3c000000],ah        # 0x17c014bed
   140014bed:	add    BYTE PTR [rax],al
   140014bef:	add    BYTE PTR [rdi*1+0x3e0000],bh
   140014bf6:	add    BYTE PTR [rax],al
   140014bf8:	ds cmp eax,0x2c0000
   140014bfe:	add    BYTE PTR [rax],al
   140014c00:	sub    BYTE PTR [rcx],ch
   140014c02:	add    BYTE PTR [rax],al
   140014c04:	jle    0x140014c06
   140014c06:	add    BYTE PTR [rax],al
   140014c08:	pop    rsi
   140014c09:	add    BYTE PTR [rax],al
   140014c0b:	add    BYTE PTR [rax+rax*1+0x0],bh
   140014c0f:	add    BYTE PTR [rsi],ah
   140014c11:	add    BYTE PTR es:[rax],al
   140014c14:	jl     0x140014c92
   140014c16:	add    BYTE PTR [rax],al
   140014c18:	sub    bh,BYTE PTR [rip+0x3d2b0000]        # 0x17d2c4c1e
   140014c1e:	add    BYTE PTR [rax],al
   140014c20:	sub    eax,0x2f00003d
   140014c25:	cmp    eax,0x3d250000
   140014c2a:	add    BYTE PTR [rax],al
   140014c2c:	ds ds cmp eax,0x3d3c3c00
   140014c33:	add    BYTE PTR [rsi],ah
   140014c35:	cmp    eax,0x3d7c0000
   140014c3a:	add    BYTE PTR [rax],al
   140014c3c:	pop    rsi
   140014c3d:	cmp    eax,0x76600000
   140014c42:	data16 je 0x140014ca6
   140014c45:	(bad)  
   140014c46:	ins    BYTE PTR es:[rdi],dx
   140014c47:	gs (bad) 
   140014c49:	add    BYTE PTR [rax],al
   140014c4b:	add    BYTE PTR [rax],al
   140014c4d:	add    BYTE PTR [rax],al
   140014c4f:	add    BYTE PTR [rax+0x76],ah
   140014c52:	(bad)  
   140014c53:	je     0x140014cb6
   140014c55:	(bad)  
   140014c56:	ins    BYTE PTR es:[rdi],dx
   140014c57:	gs (bad) 
   140014c59:	add    BYTE PTR [rax],al
   140014c5b:	add    BYTE PTR [rax],al
   140014c5d:	add    BYTE PTR [rax],al
   140014c5f:	add    BYTE PTR [rax+0x76],ah
   140014c62:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014c65:	ins    BYTE PTR es:[rdi],dx
   140014c66:	(bad)  
   140014c67:	add    BYTE PTR [rax+0x74],ah
   140014c6a:	jns    0x140014cdc
   140014c6c:	outs   dx,DWORD PTR gs:[rsi]
   140014c6e:	data16 (bad) 
	...
   140014c78:	(bad)  
   140014c79:	ins    BYTE PTR es:[rdi],dx
   140014c7a:	outs   dx,DWORD PTR ds:[rsi]
   140014c7b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014c7e:	and    BYTE PTR [rbx+0x74],dh
   140014c81:	(bad)  
   140014c82:	je     0x140014ced
   140014c84:	movsxd esp,DWORD PTR [rax]
   140014c86:	addr32 jne 0x140014cea
   140014c89:	jb     0x140014cef
   140014c8b:	(bad)  
   140014c8c:	add    BYTE PTR [rax],al
   140014c8e:	add    BYTE PTR [rax],al
   140014c90:	(bad)  
   140014c91:	jae    0x140014d07
   140014c93:	jb     0x140014cfe
   140014c95:	outs   dx,BYTE PTR ds:[rsi]
   140014c96:	addr32 (bad) 
	...
   140014ca0:	(bad)  
   140014ca1:	jbe    0x140014d05
   140014ca3:	(bad)  
   140014ca4:	jae    0x140014d0b
   140014ca6:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140014caa:	je     0x140014d1e
   140014cac:	jne    0x140014d11
   140014cae:	je     0x140014d1f
   140014cb0:	jb     0x140014cd9
   140014cb2:	add    BYTE PTR [rax],al
   140014cb4:	add    BYTE PTR [rax],al
   140014cb6:	add    BYTE PTR [rax],al
   140014cb8:	(bad)  
   140014cb9:	jbe    0x140014d20
   140014cbb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014cbf:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   140014cc3:	gs je  0x140014d2f
   140014cc6:	outs   dx,BYTE PTR ds:[rsi]
   140014cc7:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   140014ccc:	je     0x140014d40
   140014cce:	jne    0x140014d33
   140014cd0:	je     0x140014d41
   140014cd2:	jb     0x140014cfb
   140014cd4:	add    BYTE PTR [rax],al
   140014cd6:	add    BYTE PTR [rax],al
   140014cd8:	(bad)  
   140014cd9:	fs gs data16 (bad) 
   140014cdd:	jne    0x140014d4b
   140014cdf:	je     0x140014d01
   140014ce1:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140014ce4:	jae    0x140014d5a
   140014ce6:	jb     0x140014d5d
   140014ce8:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014cec:	and    BYTE PTR [rbx+0x6c],ah
   140014cef:	outs   dx,DWORD PTR ds:[rsi]
   140014cf0:	jae    0x140014d67
   140014cf2:	jb     0x140014d59
   140014cf4:	(bad)  
   140014cf5:	add    BYTE PTR [rax],al
   140014cf7:	add    BYTE PTR [rax+0x73],ah
   140014cfa:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014cfd:	(bad)  
   140014cfe:	jb     0x140014d20
   140014d00:	fs gs ins BYTE PTR es:[rdi],dx
   140014d03:	gs je  0x140014d6f
   140014d06:	outs   dx,BYTE PTR ds:[rsi]
   140014d07:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   140014d0c:	je     0x140014d80
   140014d0e:	jne    0x140014d73
   140014d10:	je     0x140014d81
   140014d12:	jb     0x140014d3b
   140014d14:	add    BYTE PTR [rax],al
   140014d16:	add    BYTE PTR [rax],al
   140014d18:	(bad)  
   140014d19:	jbe    0x140014d80
   140014d1b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014d1f:	and    BYTE PTR [rbx+0x6f],ah
   140014d22:	outs   dx,BYTE PTR ds:[rsi]
   140014d23:	jae    0x140014d99
   140014d25:	jb     0x140014d9c
   140014d27:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014d2b:	and    BYTE PTR [rcx+0x74],ch
   140014d2e:	gs jb  0x140014d92
   140014d31:	je     0x140014da2
   140014d33:	jb     0x140014d5c
   140014d35:	add    BYTE PTR [rax],al
   140014d37:	add    BYTE PTR [rax+0x76],ah
   140014d3a:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140014d3f:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140014d43:	je     0x140014db7
   140014d45:	jne    0x140014daa
   140014d47:	je     0x140014db8
   140014d49:	jb     0x140014d6b
   140014d4b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   140014d53:	(bad)  
   140014d54:	add    BYTE PTR [rax],al
   140014d56:	add    BYTE PTR [rax],al
   140014d58:	(bad)  
   140014d59:	jbe    0x140014dc0
   140014d5b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014d5f:	and    BYTE PTR [rsi+0x62],dh
   140014d62:	(bad)  
   140014d63:	jae    0x140014dca
   140014d65:	and    BYTE PTR [rbx+0x6f],ah
   140014d68:	outs   dx,BYTE PTR ds:[rsi]
   140014d69:	jae    0x140014ddf
   140014d6b:	jb     0x140014de2
   140014d6d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014d71:	and    BYTE PTR [rcx+0x74],ch
   140014d74:	gs jb  0x140014dd8
   140014d77:	je     0x140014de8
   140014d79:	jb     0x140014da2
   140014d7b:	add    BYTE PTR [rax],al
   140014d7d:	add    BYTE PTR [rax],al
   140014d7f:	add    BYTE PTR [rax+0x76],ah
   140014d82:	imul   esi,DWORD PTR [rdx+0x74],0x206c6175
   140014d89:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6563616c
   140014d91:	ins    DWORD PTR es:[rdi],dx
   140014d92:	outs   dx,BYTE PTR gs:[rsi]
   140014d94:	je     0x140014db6
   140014d96:	ins    DWORD PTR es:[rdi],dx
   140014d97:	(bad)  
   140014d98:	jo     0x140014dc1
   140014d9a:	add    BYTE PTR [rax],al
   140014d9c:	add    BYTE PTR [rax],al
   140014d9e:	add    BYTE PTR [rax],al
   140014da0:	(bad)  
   140014da1:	gs push 0x63657620
   140014da7:	je     0x140014e18
   140014da9:	jb     0x140014dcb
   140014dab:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140014dae:	jae    0x140014e24
   140014db0:	jb     0x140014e27
   140014db2:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014db6:	and    BYTE PTR [rcx+0x74],ch
   140014db9:	gs jb  0x140014e1d
   140014dbc:	je     0x140014e2d
   140014dbe:	jb     0x140014de7
	...
   140014dc8:	(bad)  
   140014dc9:	gs push 0x63657620
   140014dcf:	je     0x140014e40
   140014dd1:	jb     0x140014df3
   140014dd3:	fs gs jae 0x140014e4b
   140014dd7:	jb     0x140014e4e
   140014dd9:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014ddd:	and    BYTE PTR [rcx+0x74],ch
   140014de0:	gs jb  0x140014e44
   140014de3:	je     0x140014e54
   140014de5:	jb     0x140014e0e
   140014de7:	add    BYTE PTR [rax+0x65],ah
   140014dea:	push   0x63657620
   140014def:	je     0x140014e60
   140014df1:	jb     0x140014e13
   140014df3:	jbe    0x140014e57
   140014df5:	(bad)  
   140014df6:	jae    0x140014e5d
   140014df8:	and    BYTE PTR [rbx+0x6f],ah
   140014dfb:	outs   dx,BYTE PTR ds:[rsi]
   140014dfc:	jae    0x140014e72
   140014dfe:	jb     0x140014e75
   140014e00:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014e04:	and    BYTE PTR [rcx+0x74],ch
   140014e07:	gs jb  0x140014e6b
   140014e0a:	je     0x140014e7b
   140014e0c:	jb     0x140014e35
   140014e0e:	add    BYTE PTR [rax],al
   140014e10:	(bad)  
   140014e11:	movsxd ebp,DWORD PTR [rdi+0x70]
   140014e14:	jns    0x140014e36
   140014e16:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140014e19:	jae    0x140014e8f
   140014e1b:	jb     0x140014e92
   140014e1d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014e21:	and    BYTE PTR [rbx+0x6c],ah
   140014e24:	outs   dx,DWORD PTR ds:[rsi]
   140014e25:	jae    0x140014e9c
   140014e27:	jb     0x140014e8e
   140014e29:	(bad)  
   140014e2a:	add    BYTE PTR [rax],al
   140014e2c:	add    BYTE PTR [rax],al
   140014e2e:	add    BYTE PTR [rax],al
   140014e30:	(bad)  
   140014e31:	jne    0x140014e97
   140014e33:	je     0x140014e55
   140014e35:	jb     0x140014e9c
   140014e37:	je     0x140014eae
   140014e39:	jb     0x140014ea9
   140014e3b:	imul   ebp,DWORD PTR [rsi+0x67],0x45600027
   140014e42:	rex.W add BYTE PTR [rax+0x52],spl
   140014e46:	push   rsp
   140014e47:	push   rsp
   140014e48:	rex.WB add BYTE PTR [r8],al
   140014e4b:	add    BYTE PTR [rax],al
   140014e4d:	add    BYTE PTR [rax],al
   140014e4f:	add    BYTE PTR [rax+0x6c],ah
   140014e52:	outs   dx,DWORD PTR ds:[rsi]
   140014e53:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014e56:	and    BYTE PTR [rsi+0x66],dh
   140014e59:	je     0x140014ebc
   140014e5b:	(bad)  
   140014e5c:	ins    BYTE PTR es:[rdi],dx
   140014e5d:	gs (bad) 
   140014e5f:	add    BYTE PTR [rax+0x6c],ah
   140014e62:	outs   dx,DWORD PTR ds:[rsi]
   140014e63:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014e66:	and    BYTE PTR [rsi+0x66],dh
   140014e69:	je     0x140014ecc
   140014e6b:	(bad)  
   140014e6c:	ins    BYTE PTR es:[rdi],dx
   140014e6d:	and    BYTE PTR gs:[rbx+0x6f],ah
   140014e71:	outs   dx,BYTE PTR ds:[rsi]
   140014e72:	jae    0x140014ee8
   140014e74:	jb     0x140014eeb
   140014e76:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014e7a:	and    BYTE PTR [rbx+0x6c],ah
   140014e7d:	outs   dx,DWORD PTR ds:[rsi]
   140014e7e:	jae    0x140014ef5
   140014e80:	jb     0x140014ee7
   140014e82:	(bad)  
   140014e83:	add    BYTE PTR [rax],ah
   140014e85:	outs   dx,BYTE PTR ds:[rsi]
   140014e86:	gs ja  0x140014ee4
   140014e89:	pop    rbp
   140014e8a:	add    BYTE PTR [rax],al
   140014e8c:	add    BYTE PTR [rax],al
   140014e8e:	add    BYTE PTR [rax],al
   140014e90:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   140014e94:	gs je  0x140014efc
   140014e97:	pop    rbx
   140014e98:	pop    rbp
   140014e99:	add    BYTE PTR [rax],al
   140014e9b:	add    BYTE PTR [rax],al
   140014e9d:	add    BYTE PTR [rax],al
   140014e9f:	add    BYTE PTR [rax+0x6f],ah
   140014ea2:	ins    DWORD PTR es:[rdi],dx
   140014ea3:	outs   dx,BYTE PTR ds:[rsi]
   140014ea4:	imul   esp,DWORD PTR [rax],0x6c6c6163
   140014eaa:	jae    0x140014f15
   140014eac:	addr32 (bad) 
   140014eae:	add    BYTE PTR [rax],al
   140014eb0:	(bad)  
   140014eb1:	jo     0x140014f1f
   140014eb3:	(bad)  
   140014eb4:	movsxd esp,DWORD PTR [rbp+0x6d]
   140014eb7:	outs   dx,BYTE PTR gs:[rsi]
   140014eb9:	je     0x140014edb
   140014ebb:	fs gs ins BYTE PTR es:[rdi],dx
   140014ebe:	gs je  0x140014f26
   140014ec1:	and    BYTE PTR [rbx+0x6c],ah
   140014ec4:	outs   dx,DWORD PTR ds:[rsi]
   140014ec5:	jae    0x140014f3c
   140014ec7:	jb     0x140014f2e
   140014ec9:	(bad)  
   140014eca:	add    BYTE PTR [rax],al
   140014ecc:	add    BYTE PTR [rax],al
   140014ece:	add    BYTE PTR [rax],al
   140014ed0:	(bad)  
   140014ed1:	jo     0x140014f3f
   140014ed3:	(bad)  
   140014ed4:	movsxd esp,DWORD PTR [rbp+0x6d]
   140014ed7:	outs   dx,BYTE PTR gs:[rsi]
   140014ed9:	je     0x140014efb
   140014edb:	fs gs ins BYTE PTR es:[rdi],dx
   140014ede:	gs je  0x140014f46
   140014ee1:	pop    rbx
   140014ee2:	pop    rbp
   140014ee3:	and    BYTE PTR [rbx+0x6c],ah
   140014ee6:	outs   dx,DWORD PTR ds:[rsi]
   140014ee7:	jae    0x140014f5e
   140014ee9:	jb     0x140014f50
   140014eeb:	(bad)  
   140014eec:	add    BYTE PTR [rax],al
   140014eee:	add    BYTE PTR [rax],al
   140014ef0:	(bad)  
   140014ef1:	ins    DWORD PTR es:[rdi],dx
   140014ef2:	(bad)  
   140014ef3:	outs   dx,BYTE PTR ds:[rsi]
   140014ef4:	(bad)  
   140014ef5:	gs and BYTE PTR fs:[esi+0x65],dh
   140014efb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014eff:	and    BYTE PTR [rbx+0x6f],ah
   140014f02:	outs   dx,BYTE PTR ds:[rsi]
   140014f03:	jae    0x140014f79
   140014f05:	jb     0x140014f7c
   140014f07:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014f0b:	and    BYTE PTR [rcx+0x74],ch
   140014f0e:	gs jb  0x140014f72
   140014f11:	je     0x140014f82
   140014f13:	jb     0x140014f3c
   140014f15:	add    BYTE PTR [rax],al
   140014f17:	add    BYTE PTR [rax+0x6d],ah
   140014f1a:	(bad)  
   140014f1b:	outs   dx,BYTE PTR ds:[rsi]
   140014f1c:	(bad)  
   140014f1d:	gs and BYTE PTR fs:[esi+0x65],dh
   140014f23:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014f27:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140014f2b:	je     0x140014f9f
   140014f2d:	jne    0x140014f92
   140014f2f:	je     0x140014fa0
   140014f31:	jb     0x140014f53
   140014f33:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   140014f3b:	(bad)  
   140014f3c:	add    BYTE PTR [rax],al
   140014f3e:	add    BYTE PTR [rax],al
   140014f40:	(bad)  
   140014f41:	gs push 0x63657620
   140014f47:	je     0x140014fb8
   140014f49:	jb     0x140014f6b
   140014f4b:	movsxd ebp,DWORD PTR [rdi+0x70]
   140014f4e:	jns    0x140014f70
   140014f50:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140014f53:	jae    0x140014fc9
   140014f55:	jb     0x140014fcc
   140014f57:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014f5b:	and    BYTE PTR [rcx+0x74],ch
   140014f5e:	gs jb  0x140014fc2
   140014f61:	je     0x140014fd2
   140014f63:	jb     0x140014f8c
   140014f65:	add    BYTE PTR [rax],al
   140014f67:	add    BYTE PTR [rax+0x65],ah
   140014f6a:	push   0x63657620
   140014f6f:	je     0x140014fe0
   140014f71:	jb     0x140014f93
   140014f73:	jbe    0x140014fd7
   140014f75:	(bad)  
   140014f76:	jae    0x140014fdd
   140014f78:	and    BYTE PTR [rbx+0x6f],ah
   140014f7b:	jo     0x140014ff6
   140014f7d:	and    BYTE PTR [rbx+0x6f],ah
   140014f80:	outs   dx,BYTE PTR ds:[rsi]
   140014f81:	jae    0x140014ff7
   140014f83:	jb     0x140014ffa
   140014f85:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014f89:	and    BYTE PTR [rcx+0x74],ch
   140014f8c:	gs jb  0x140014ff0
   140014f8f:	je     0x140015000
   140014f91:	jb     0x140014fba
   140014f93:	add    BYTE PTR [rax],al
   140014f95:	add    BYTE PTR [rax],al
   140014f97:	add    BYTE PTR [rax+0x64],ah
   140014f9a:	jns    0x14001500a
   140014f9c:	(bad)  
   140014f9d:	ins    DWORD PTR es:[rdi],dx
   140014f9e:	imul   esp,DWORD PTR [rbx+0x20],0x74696e69
   140014fa5:	imul   esp,DWORD PTR [rcx+0x6c],0x72657a69
   140014fac:	and    BYTE PTR [rsi+0x6f],ah
   140014faf:	jb     0x140014fd1
   140014fb1:	(bad)  
   140014fb2:	add    BYTE PTR [rax],al
   140014fb4:	add    BYTE PTR [rax],al
   140014fb6:	add    BYTE PTR [rax],al
   140014fb8:	(bad)  
   140014fb9:	fs jns 0x14001502a
   140014fbc:	(bad)  
   140014fbd:	ins    DWORD PTR es:[rdi],dx
   140014fbe:	imul   esp,DWORD PTR [rbx+0x20],0x78657461
   140014fc5:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x72747365
   140014fcd:	jne    0x140015032
   140014fcf:	je     0x140015040
   140014fd1:	jb     0x140014ff3
   140014fd3:	outs   dx,WORD PTR ds:[rsi]
   140014fd5:	jb     0x140014ff7
   140014fd7:	(bad)  
	...
   140014fe0:	(bad)  
   140014fe1:	jbe    0x140015048
   140014fe3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014fe7:	and    BYTE PTR [rbx+0x6f],ah
   140014fea:	jo     0x140015065
   140014fec:	and    BYTE PTR [rbx+0x6f],ah
   140014fef:	outs   dx,BYTE PTR ds:[rsi]
   140014ff0:	jae    0x140015066
   140014ff2:	jb     0x140015069
   140014ff4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140014ff8:	and    BYTE PTR [rcx+0x74],ch
   140014ffb:	gs jb  0x14001505f
   140014ffe:	je     0x14001506f
   140015000:	jb     0x140015029
   140015002:	add    BYTE PTR [rax],al
   140015004:	add    BYTE PTR [rax],al
   140015006:	add    BYTE PTR [rax],al
   140015008:	(bad)  
   140015009:	jbe    0x140015070
   14001500b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14001500f:	and    BYTE PTR [rsi+0x62],dh
   140015012:	(bad)  
   140015013:	jae    0x14001507a
   140015015:	and    BYTE PTR [rbx+0x6f],ah
   140015018:	jo     0x140015093
   14001501a:	and    BYTE PTR [rbx+0x6f],ah
   14001501d:	outs   dx,BYTE PTR ds:[rsi]
   14001501e:	jae    0x140015094
   140015020:	jb     0x140015097
   140015022:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140015026:	and    BYTE PTR [rcx+0x74],ch
   140015029:	gs jb  0x14001508d
   14001502c:	je     0x14001509d
   14001502e:	jb     0x140015057
	...
   140015038:	(bad)  
   140015039:	ins    DWORD PTR es:[rdi],dx
   14001503a:	(bad)  
   14001503b:	outs   dx,BYTE PTR ds:[rsi]
   14001503c:	(bad)  
   14001503d:	gs and BYTE PTR fs:[esi+0x65],dh
   140015043:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140015047:	and    BYTE PTR [rbx+0x6f],ah
   14001504a:	jo     0x1400150c5
   14001504c:	and    BYTE PTR [rbx+0x6f],ah
   14001504f:	outs   dx,BYTE PTR ds:[rsi]
   140015050:	jae    0x1400150c6
   140015052:	jb     0x1400150c9
   140015054:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140015058:	and    BYTE PTR [rcx+0x74],ch
   14001505b:	gs jb  0x1400150bf
   14001505e:	je     0x1400150cf
   140015060:	jb     0x140015089
   140015062:	add    BYTE PTR [rax],al
   140015064:	add    BYTE PTR [rax],al
   140015066:	add    BYTE PTR [rax],al
   140015068:	(bad)  
   140015069:	ins    BYTE PTR es:[rdi],dx
   14001506a:	outs   dx,DWORD PTR ds:[rsi]
   14001506b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001506e:	and    BYTE PTR [rbx+0x74],dh
   140015071:	(bad)  
   140015072:	je     0x1400150dd
   140015074:	movsxd esp,DWORD PTR [rax]
   140015076:	je     0x1400150e0
   140015078:	jb     0x1400150df
   14001507a:	(bad)  
   14001507b:	and    BYTE PTR fs:[rdi+0x75],ah
   14001507f:	(bad)  
   140015080:	jb     0x1400150e6
   140015082:	(bad)  
   140015083:	add    BYTE PTR [rax],al
   140015085:	add    BYTE PTR [rax],al
   140015087:	add    BYTE PTR [rdi+0x70],ch
   14001508a:	gs jb  0x1400150ee
   14001508d:	je     0x1400150fe
   14001508f:	jb     0x1400150b1
   140015091:	and    ah,BYTE PTR [rdx]
   140015093:	and    BYTE PTR [rax],al
   140015095:	add    BYTE PTR [rax],al
   140015097:	add    BYTE PTR [rax],ah
   140015099:	push   rsp
   14001509a:	jns    0x14001510c
   14001509c:	and    BYTE PTR gs:[rbp+riz*2+0x73],al
   1400150a1:	movsxd esi,DWORD PTR [rdx+0x69]
   1400150a4:	jo     0x14001511a
   1400150a6:	outs   dx,DWORD PTR ds:[rsi]
   1400150a7:	jb     0x1400150d0
   1400150a9:	add    BYTE PTR [rax],al
   1400150ab:	add    BYTE PTR [rax],al
   1400150ad:	add    BYTE PTR [rax],al
   1400150af:	add    BYTE PTR [rax],ah
   1400150b1:	rex.X (bad) 
   1400150b3:	jae    0x14001511a
   1400150b5:	and    BYTE PTR [rbx+0x6c],al
   1400150b8:	(bad)  
   1400150b9:	jae    0x14001512e
   1400150bb:	and    BYTE PTR [rbp+riz*2+0x73],al
   1400150bf:	movsxd esi,DWORD PTR [rdx+0x69]
   1400150c2:	jo     0x140015138
   1400150c4:	outs   dx,DWORD PTR ds:[rsi]
   1400150c5:	jb     0x1400150e7
   1400150c7:	(bad)  
   1400150c8:	je     0x1400150ea
   1400150ca:	sub    BYTE PTR [rax],al
   1400150cc:	add    BYTE PTR [rax],al
   1400150ce:	add    BYTE PTR [rax],al
   1400150d0:	and    BYTE PTR [rdx+0x61],al
   1400150d3:	jae    0x14001513a
   1400150d5:	and    BYTE PTR [rbx+0x6c],al
   1400150d8:	(bad)  
   1400150d9:	jae    0x14001514e
   1400150db:	and    BYTE PTR [rcx+0x72],al
   1400150de:	jb     0x140015141
   1400150e0:	jns    0x140015109
   1400150e2:	add    BYTE PTR [rax],al
   1400150e4:	add    BYTE PTR [rax],al
   1400150e6:	add    BYTE PTR [rax],al
   1400150e8:	and    BYTE PTR [rbx+0x6c],al
   1400150eb:	(bad)  
   1400150ec:	jae    0x140015161
   1400150ee:	and    BYTE PTR [rax+0x69],cl
   1400150f1:	gs jb  0x140015155
   1400150f4:	jb     0x140015159
   1400150f6:	push   0x65442079
   1400150fb:	jae    0x140015160
   1400150fd:	jb     0x140015168
   1400150ff:	jo     0x140015175
   140015101:	outs   dx,DWORD PTR ds:[rsi]
   140015102:	jb     0x14001512b
   140015104:	add    BYTE PTR [rax],al
   140015106:	add    BYTE PTR [rax],al
   140015108:	and    BYTE PTR [rbx+0x6f],al
   14001510b:	ins    DWORD PTR es:[rdi],dx
   14001510c:	jo     0x14001517a
   14001510e:	gs je  0x140015176
   140015111:	and    BYTE PTR [rdi+0x62],cl
   140015114:	push   0x65
   140015116:	movsxd esi,DWORD PTR [rax+riz*1+0x4c]
   14001511a:	outs   dx,DWORD PTR ds:[rsi]
   14001511b:	movsxd esp,DWORD PTR [rcx+0x74]
   14001511e:	outs   dx,DWORD PTR ds:[rsi]
   14001511f:	jb     0x140015148
	...
   14001512d:	add    BYTE PTR [rax],al
   14001512f:	add    BYTE PTR [rsi],al
   140015131:	add    BYTE PTR [rax],al
   140015133:	(bad)  
   140015134:	add    BYTE PTR [rcx],al
   140015136:	add    BYTE PTR [rax],al
   140015138:	adc    BYTE PTR [rax],al
   14001513a:	add    eax,DWORD PTR [rsi]
   14001513c:	add    BYTE PTR [rsi],al
   14001513e:	add    dl,BYTE PTR [rax]
   140015140:	add    al,0x45
   140015142:	rex.RB
   140015143:	rex.RB add eax,0x5050505
   140015149:	xor    eax,0x500030
   14001514e:	add    BYTE PTR [rax],al
   140015150:	add    BYTE PTR [rax],ch
   140015152:	and    BYTE PTR [rax],bh
   140015154:	push   rax
   140015155:	pop    rax
   140015156:	(bad)  
   140015157:	or     BYTE PTR [rax],al
   140015159:	(bad)  
   14001515a:	xor    BYTE PTR [rax],dh
   14001515c:	push   rdi
   14001515d:	push   rax
   14001515e:	(bad)  
   14001515f:	add    BYTE PTR [rax],al
   140015161:	and    BYTE PTR [rax],ah
   140015163:	or     BYTE PTR [rdi],al
   140015165:	add    BYTE PTR [rax],al
   140015167:	add    BYTE PTR [rax],cl
   140015169:	(bad)  
   14001516a:	push   0x60606060
   14001516f:	add    BYTE PTR [rax],al
   140015171:	js     0x1400151e3
   140015173:	js     0x1400151ed
   140015175:	js     0x1400151ef
   140015177:	or     BYTE PTR [rdi],al
   140015179:	or     BYTE PTR [rdi],al
   14001517b:	add    BYTE PTR [rdi],al
   14001517d:	add    BYTE PTR [rax],cl
   14001517f:	or     BYTE PTR [rax],cl
   140015181:	add    BYTE PTR [rax],al
   140015183:	or     BYTE PTR [rdi],al
   140015185:	or     BYTE PTR [rax],al
   140015187:	(bad)  
   140015188:	or     BYTE PTR [rax],al
   14001518a:	(bad)  
   14001518b:	add    BYTE PTR [rax],ch
   14001518d:	outs   dx,BYTE PTR ds:[rsi]
   14001518e:	jne    0x1400151fc
   140015190:	ins    BYTE PTR es:[rdi],dx
   140015191:	sub    DWORD PTR [rax],eax
   140015193:	add    BYTE PTR [rax],al
   140015195:	add    BYTE PTR [rax],al
   140015197:	add    BYTE PTR [rax],ch
   140015199:	add    BYTE PTR [rsi+0x0],ch
   14001519c:	jne    0x14001519e
   14001519e:	ins    BYTE PTR es:[rdi],dx
   14001519f:	add    BYTE PTR [rax+rax*1+0x29],ch
   1400151a3:	add    BYTE PTR [rax],al
   1400151a5:	add    BYTE PTR [rax],al
   1400151a7:	add    BYTE PTR [rbp+0x0],ch
   1400151aa:	jae    0x1400151ac
   1400151ac:	movsxd eax,DWORD PTR [rax]
   1400151ae:	outs   dx,DWORD PTR ds:[rsi]
   1400151af:	add    BYTE PTR [rdx+0x0],dh
   1400151b2:	add    BYTE PTR gs:[rbp+0x0],ah
   1400151b6:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400151bb:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400151bf:	add    BYTE PTR [rbx+0x6f],al
   1400151c2:	jb     0x140015209
   1400151c4:	js     0x14001522f
   1400151c6:	je     0x140015218
   1400151c8:	jb     0x140015239
   1400151ca:	movsxd esp,DWORD PTR [rbp+0x73]
   1400151cd:	jae    0x1400151cf
   1400151cf:	add    BYTE PTR [rip+0xbc00000],al        # 0x14bc151d5
	...
   1400151dd:	add    BYTE PTR [rax],al
   1400151df:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c151e5
	...
   1400151ed:	add    BYTE PTR [rax],al
   1400151ef:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   1400151fd:	add    BYTE PTR [rax],al
   1400151ff:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14001520d:	add    BYTE PTR [rax],al
   14001520f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14001521d:	add    BYTE PTR [rax],al
   14001521f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14001522d:	add    BYTE PTR [rax],al
   14001522f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14001523d:	add    BYTE PTR [rax],al
   14001523f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14001524d:	add    BYTE PTR [rax],al
   14001524f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14001525d:	add    BYTE PTR [rax],al
   14001525f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   14001526d:	add    BYTE PTR [rax],al
   14001526f:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   14001527e:	add    BYTE PTR [rax],al
   140015280:	mov    ch,0x2
   140015282:	add    al,al
   140015284:	or     BYTE PTR [rax],al
	...
   14001528e:	add    BYTE PTR [rax],al
   140015290:	or     al,0x0
   140015292:	add    BYTE PTR [rax],al
   140015294:	add    BYTE PTR [rax],al
   140015296:	add    BYTE PTR [rax],al
   140015298:	add    eax,DWORD PTR [rax]
   14001529a:	add    BYTE PTR [rax],al
   14001529c:	add    BYTE PTR [rax],al
   14001529e:	add    BYTE PTR [rax],al
   1400152a0:	or     DWORD PTR [rax],eax
	...
   1400152ae:	add    BYTE PTR [rax],al
   1400152b0:	add    al,0x7a
   1400152b2:	add    BYTE PTR [rax+0x1],al
	...
   1400152bd:	add    BYTE PTR [rax],al
   1400152bf:	add    BYTE PTR [rax+0x7a],dl
   1400152c2:	add    BYTE PTR [rax+0x1],al
	...
   1400152cd:	add    BYTE PTR [rax],al
   1400152cf:	add    BYTE PTR [rbx+rcx*4],bh
   1400152d2:	add    BYTE PTR [rax+0x1],al
   1400152d5:	add    BYTE PTR [rax],al
   1400152d7:	add    ah,bh
   1400152d9:	mov    eax,DWORD PTR [rax]
   1400152db:	rex add DWORD PTR [rax],eax
   1400152de:	add    BYTE PTR [rax],al
   1400152e0:	cmp    al,0x7a
   1400152e2:	add    BYTE PTR [rax+0x1],al
   1400152e5:	add    BYTE PTR [rax],al
   1400152e7:	add    BYTE PTR [rdx+rdi*2],bh
   1400152ea:	add    BYTE PTR [rax+0x1],al
   1400152ed:	add    BYTE PTR [rax],al
   1400152ef:	add    BYTE PTR [rax-0x53],cl
   1400152f2:	add    BYTE PTR [rax+0x1],al
   1400152f5:	add    BYTE PTR [rax],al
   1400152f7:	add    BYTE PTR [rbp+rbp*4+0x14000],ch
   1400152fe:	add    BYTE PTR [rax],al
   140015300:	movabs al,ds:0xbc000000014000d9
   140015309:	fld    DWORD PTR [rax]
   14001530b:	rex add DWORD PTR [rax],eax
	...
   140015316:	add    BYTE PTR [rax],al
   140015318:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015319:	jp     0x14001531b
   14001531b:	rex add DWORD PTR [rax],eax
   14001531e:	add    BYTE PTR [rax],al
   140015320:	movabs al,ds:0xdc0000000140009e
   140015329:	sahf   
   14001532a:	add    BYTE PTR [rax+0x1],al
   14001532d:	add    BYTE PTR [rax],al
   14001532f:	add    al,dl
   140015331:	nop
   140015332:	add    BYTE PTR [rax+0x1],al
   140015335:	add    BYTE PTR [rax],al
   140015337:	add    BYTE PTR [rcx+rdx*4],cl
   14001533a:	add    BYTE PTR [rax+0x1],al
   14001533d:	add    BYTE PTR [rax],al
   14001533f:	add    al,cl
   140015341:	jae    0x140015343
   140015343:	rex add DWORD PTR [rax],eax
   140015346:	add    BYTE PTR [rax],al
   140015348:	cmp    al,0x7a
   14001534a:	add    BYTE PTR [rax+0x1],al
   14001534d:	add    BYTE PTR [rax],al
   14001534f:	add    BYTE PTR [rdi+rax*8+0x0],ah
   140015353:	rex add DWORD PTR [rax],eax
	...
   140015366:	add    BYTE PTR [rax],al
   140015368:	cmp    al,0x7a
   14001536a:	add    BYTE PTR [rax+0x1],al
	...
   140015375:	add    BYTE PTR [rax],al
   140015377:	add    BYTE PTR [rdx+rdi*2+0x14000],ch
   14001537e:	add    BYTE PTR [rax],al
   140015380:	cmp    al,0x7a
   140015382:	add    BYTE PTR [rax+0x1],al
   140015385:	add    BYTE PTR [rax],al
   140015387:	add    BYTE PTR [rax+0x7a],al
   14001538a:	add    BYTE PTR [rax+0x1],al
   14001538d:	add    BYTE PTR [rax],al
   14001538f:	add    BYTE PTR [rax],bl
   140015391:	jp     0x140015393
   140015393:	rex add DWORD PTR [rax],eax
   140015396:	add    BYTE PTR [rax],al
   140015398:	cmp    al,0x7a
   14001539a:	add    BYTE PTR [rax+0x1],al
   14001539d:	add    BYTE PTR [rax],al
   14001539f:	add    BYTE PTR [rcx],al
   1400153a1:	add    BYTE PTR [rax],al
   1400153a3:	add    BYTE PTR [rsi],dl
   1400153a5:	add    BYTE PTR [rax],al
   1400153a7:	add    BYTE PTR [rdx],al
   1400153a9:	add    BYTE PTR [rax],al
   1400153ab:	add    BYTE PTR [rdx],al
   1400153ad:	add    BYTE PTR [rax],al
   1400153af:	add    BYTE PTR [rbx],al
   1400153b1:	add    BYTE PTR [rax],al
   1400153b3:	add    BYTE PTR [rdx],al
   1400153b5:	add    BYTE PTR [rax],al
   1400153b7:	add    BYTE PTR [rax+rax*1],al
   1400153ba:	add    BYTE PTR [rax],al
   1400153bc:	sbb    BYTE PTR [rax],al
   1400153be:	add    BYTE PTR [rax],al
   1400153c0:	add    eax,0xd000000
   1400153c5:	add    BYTE PTR [rax],al
   1400153c7:	add    BYTE PTR [rsi],al
   1400153c9:	add    BYTE PTR [rax],al
   1400153cb:	add    BYTE PTR [rcx],cl
   1400153cd:	add    BYTE PTR [rax],al
   1400153cf:	add    BYTE PTR [rdi],al
   1400153d1:	add    BYTE PTR [rax],al
   1400153d3:	add    BYTE PTR [rax+rax*1],cl
   1400153d6:	add    BYTE PTR [rax],al
   1400153d8:	or     BYTE PTR [rax],al
   1400153da:	add    BYTE PTR [rax],al
   1400153dc:	or     al,0x0
   1400153de:	add    BYTE PTR [rax],al
   1400153e0:	or     DWORD PTR [rax],eax
   1400153e2:	add    BYTE PTR [rax],al
   1400153e4:	or     al,0x0
   1400153e6:	add    BYTE PTR [rax],al
   1400153e8:	or     al,BYTE PTR [rax]
   1400153ea:	add    BYTE PTR [rax],al
   1400153ec:	(bad)  
   1400153ed:	add    BYTE PTR [rax],al
   1400153ef:	add    BYTE PTR [rbx],cl
   1400153f1:	add    BYTE PTR [rax],al
   1400153f3:	add    BYTE PTR [rax],cl
   1400153f5:	add    BYTE PTR [rax],al
   1400153f7:	add    BYTE PTR [rax+rax*1],cl
   1400153fa:	add    BYTE PTR [rax],al
   1400153fc:	(bad)  
   1400153fd:	add    BYTE PTR [rax],al
   1400153ff:	add    BYTE PTR [rip+0x16000000],cl        # 0x156015405
   140015405:	add    BYTE PTR [rax],al
   140015407:	add    BYTE PTR [rdi],cl
   140015409:	add    BYTE PTR [rax],al
   14001540b:	add    BYTE PTR [rdx],al
   14001540d:	add    BYTE PTR [rax],al
   14001540f:	add    BYTE PTR [rax],dl
   140015411:	add    BYTE PTR [rax],al
   140015413:	add    BYTE PTR [rip+0x11000000],cl        # 0x151015419
   140015419:	add    BYTE PTR [rax],al
   14001541b:	add    BYTE PTR [rdx],dl
   14001541d:	add    BYTE PTR [rax],al
   14001541f:	add    BYTE PTR [rdx],dl
   140015421:	add    BYTE PTR [rax],al
   140015423:	add    BYTE PTR [rdx],al
   140015425:	add    BYTE PTR [rax],al
   140015427:	add    BYTE PTR [rcx],ah
   140015429:	add    BYTE PTR [rax],al
   14001542b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175015431
   140015431:	add    BYTE PTR [rax],al
   140015433:	add    BYTE PTR [rdx],al
   140015435:	add    BYTE PTR [rax],al
   140015437:	add    BYTE PTR [rcx+0x0],al
   14001543a:	add    BYTE PTR [rax],al
   14001543c:	or     eax,0x43000000
   140015441:	add    BYTE PTR [rax],al
   140015443:	add    BYTE PTR [rdx],al
   140015445:	add    BYTE PTR [rax],al
   140015447:	add    BYTE PTR [rax+0x0],dl
   14001544a:	add    BYTE PTR [rax],al
   14001544c:	adc    DWORD PTR [rax],eax
   14001544e:	add    BYTE PTR [rax],al
   140015450:	push   rdx
   140015451:	add    BYTE PTR [rax],al
   140015453:	add    BYTE PTR [rip+0x53000000],cl        # 0x193015459
   140015459:	add    BYTE PTR [rax],al
   14001545b:	add    BYTE PTR [rip+0x57000000],cl        # 0x197015461
   140015461:	add    BYTE PTR [rax],al
   140015463:	add    BYTE PTR [rsi],dl
   140015465:	add    BYTE PTR [rax],al
   140015467:	add    BYTE PTR [rcx+0x0],bl
   14001546a:	add    BYTE PTR [rax],al
   14001546c:	or     eax,DWORD PTR [rax]
   14001546e:	add    BYTE PTR [rax],al
   140015470:	ins    BYTE PTR es:[rdi],dx
   140015471:	add    BYTE PTR [rax],al
   140015473:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad015479
   140015479:	add    BYTE PTR [rax],al
   14001547b:	add    BYTE PTR [rax],ah
   14001547d:	add    BYTE PTR [rax],al
   14001547f:	add    BYTE PTR [rax+0x0],dh
   140015482:	add    BYTE PTR [rax],al
   140015484:	sbb    al,0x0
   140015486:	add    BYTE PTR [rax],al
   140015488:	jb     0x14001548a
   14001548a:	add    BYTE PTR [rax],al
   14001548c:	or     DWORD PTR [rax],eax
   14001548e:	add    BYTE PTR [rax],al
   140015490:	(bad)  
   140015491:	add    BYTE PTR [rax],al
   140015493:	add    BYTE PTR [rsi],dl
   140015495:	add    BYTE PTR [rax],al
   140015497:	add    BYTE PTR [rax+0xa000000],al
   14001549d:	add    BYTE PTR [rax],al
   14001549f:	add    BYTE PTR [rcx+0xa000000],al
   1400154a5:	add    BYTE PTR [rax],al
   1400154a7:	add    BYTE PTR [rdx+0x9000000],al
   1400154ad:	add    BYTE PTR [rax],al
   1400154af:	add    BYTE PTR [rbx+0x16000000],al
   1400154b5:	add    BYTE PTR [rax],al
   1400154b7:	add    BYTE PTR [rax+rax*1+0xd0000],al
   1400154be:	add    BYTE PTR [rax],al
   1400154c0:	xchg   ecx,eax
   1400154c1:	add    BYTE PTR [rax],al
   1400154c3:	add    BYTE PTR [rcx],ch
   1400154c5:	add    BYTE PTR [rax],al
   1400154c7:	add    BYTE PTR [rsi+0xd000000],bl
   1400154cd:	add    BYTE PTR [rax],al
   1400154cf:	add    BYTE PTR [rcx+0x2000000],ah
   1400154d5:	add    BYTE PTR [rax],al
   1400154d7:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   1400154de:	add    BYTE PTR [rax],al
   1400154e0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400154e1:	add    BYTE PTR [rax],al
   1400154e3:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf70154e9
   1400154e9:	add    BYTE PTR [rax],al
   1400154eb:	add    BYTE PTR [rcx],dl
   1400154ed:	add    BYTE PTR [rax],al
   1400154ef:	add    dh,cl
   1400154f1:	add    BYTE PTR [rax],al
   1400154f3:	add    BYTE PTR [rdx],al
   1400154f5:	add    BYTE PTR [rax],al
   1400154f7:	add    bh,dl
   1400154f9:	add    BYTE PTR [rax],al
   1400154fb:	add    BYTE PTR [rbx],cl
   1400154fd:	add    BYTE PTR [rax],al
   1400154ff:	add    BYTE PTR [rax],bl
   140015501:	(bad)  
   140015502:	add    BYTE PTR [rax],al
   140015504:	or     al,0x0
	...
   14001550e:	add    BYTE PTR [rax],al
   140015510:	mov    al,0x55
   140015512:	add    DWORD PTR [rax+0x1],eax
   140015515:	add    BYTE PTR [rax],al
   140015517:	add    BYTE PTR [rax],al
   140015519:	push   rsi
   14001551a:	add    DWORD PTR [rax+0x1],eax
   14001551d:	add    BYTE PTR [rax],al
   14001551f:	add    BYTE PTR [rax+0x1400146],bl
   140015525:	add    BYTE PTR [rax],al
   140015527:	add    BYTE PTR [rax+0x56],al
   14001552a:	add    DWORD PTR [rax+0x1],eax
   14001552d:	add    BYTE PTR [rax],al
   14001552f:	add    BYTE PTR [rax+0x1400156],al
   140015535:	add    BYTE PTR [rax],al
   140015537:	add    al,dl
   140015539:	push   rsi
   14001553a:	add    DWORD PTR [rax+0x1],eax
   14001553d:	add    BYTE PTR [rax],al
   14001553f:	add    BYTE PTR [rax],dh
   140015541:	push   rdi
   140015542:	add    DWORD PTR [rax+0x1],eax
   140015545:	add    BYTE PTR [rax],al
   140015547:	add    BYTE PTR [rax+0x1400157],al
   14001554d:	add    BYTE PTR [rax],al
   14001554f:	add    al,bl
   140015551:	rex.RX add DWORD PTR [rax+0x1],r8d
   140015555:	add    BYTE PTR [rax],al
   140015557:	add    al,al
   140015559:	push   rdi
   14001555a:	add    DWORD PTR [rax+0x1],eax
   14001555d:	add    BYTE PTR [rax],al
   14001555f:	add    BYTE PTR [rax],al
   140015561:	pop    rax
   140015562:	add    DWORD PTR [rax+0x1],eax
   140015565:	add    BYTE PTR [rax],al
   140015567:	add    BYTE PTR [rax+0x58],al
   14001556a:	add    DWORD PTR [rax+0x1],eax
   14001556d:	add    BYTE PTR [rax],al
   14001556f:	add    BYTE PTR [rax+0x1400158],al
   140015575:	add    BYTE PTR [rax],al
   140015577:	add    al,dl
   140015579:	pop    rax
   14001557a:	add    DWORD PTR [rax+0x1],eax
   14001557d:	add    BYTE PTR [rax],al
   14001557f:	add    BYTE PTR [rax],dh
   140015581:	pop    rcx
   140015582:	add    DWORD PTR [rax+0x1],eax
   140015585:	add    BYTE PTR [rax],al
   140015587:	add    BYTE PTR [rax+0x1400159],dl
   14001558d:	add    BYTE PTR [rax],al
   14001558f:	add    al,ah
   140015591:	pop    rcx
   140015592:	add    DWORD PTR [rax+0x1],eax
   140015595:	add    BYTE PTR [rax],al
   140015597:	add    BYTE PTR [rax+0x1400146],al
   14001559d:	add    BYTE PTR [rax],al
   14001559f:	add    BYTE PTR [rax],bl
   1400155a1:	rex.RXB add DWORD PTR [r8+0x1],r8d
   1400155a5:	add    BYTE PTR [rax],al
   1400155a7:	add    BYTE PTR [rax],dh
   1400155a9:	pop    rdx
   1400155aa:	add    DWORD PTR [rax+0x1],eax
   1400155ad:	add    BYTE PTR [rax],al
   1400155af:	add    BYTE PTR [rcx+0x0],ah
   1400155b2:	jo     0x1400155b4
   1400155b4:	imul   eax,DWORD PTR [rax],0x6d002d
   1400155ba:	jae    0x1400155bc
   1400155bc:	sub    eax,0x69007700
   1400155c1:	add    BYTE PTR [rsi+0x0],ch
   1400155c4:	sub    eax,0x70006100
   1400155c9:	add    BYTE PTR [rax+0x0],dh
   1400155cc:	ins    DWORD PTR es:[rdi],dx
   1400155cd:	add    BYTE PTR [rdi+0x0],ch
   1400155d0:	add    BYTE PTR fs:[rbp+0x0],ah
   1400155d4:	ins    BYTE PTR es:[rdi],dx
   1400155d5:	add    BYTE PTR [rip+0x75007200],ch        # 0x1b501c7db
   1400155db:	add    BYTE PTR [rsi+0x0],ch
   1400155de:	je     0x1400155e0
   1400155e0:	imul   eax,DWORD PTR [rax],0x65006d
   1400155e6:	sub    eax,0x31006c00
   1400155eb:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d0186f1
   1400155f1:	add    BYTE PTR [rcx],dh
	...
   1400155ff:	add    BYTE PTR [rcx+0x0],ah
   140015602:	jo     0x140015604
   140015604:	imul   eax,DWORD PTR [rax],0x6d002d
   14001560a:	jae    0x14001560c
   14001560c:	sub    eax,0x69007700
   140015611:	add    BYTE PTR [rsi+0x0],ch
   140015614:	sub    eax,0x6f006300
   140015619:	add    BYTE PTR [rdx+0x0],dh
   14001561c:	add    BYTE PTR gs:[rip+0x61006400],ch        # 0x1a101ba23
   140015623:	add    BYTE PTR [rax+rax*1+0x65],dh
   140015627:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001562b:	add    BYTE PTR [rbp+0x0],ch
   14001562e:	add    BYTE PTR gs:[rip+0x31006c00],ch        # 0x17101c235
   140015635:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d01873b
   14001563b:	add    BYTE PTR [rcx],dh
   14001563d:	add    BYTE PTR [rax],al
   14001563f:	add    BYTE PTR [rcx+0x0],ah
   140015642:	jo     0x140015644
   140015644:	imul   eax,DWORD PTR [rax],0x6d002d
   14001564a:	jae    0x14001564c
   14001564c:	sub    eax,0x69007700
   140015651:	add    BYTE PTR [rsi+0x0],ch
   140015654:	sub    eax,0x6f006300
   140015659:	add    BYTE PTR [rdx+0x0],dh
   14001565c:	add    BYTE PTR gs:[rip+0x69006600],ch        # 0x1a901bc63
   140015663:	add    BYTE PTR [rax+rax*1+0x65],ch
   140015667:	add    BYTE PTR [rip+0x32006c00],ch        # 0x17201c26d
   14001566d:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d018773
   140015673:	add    BYTE PTR [rcx],dh
	...
   14001567d:	add    BYTE PTR [rax],al
   14001567f:	add    BYTE PTR [rcx+0x0],ah
   140015682:	jo     0x140015684
   140015684:	imul   eax,DWORD PTR [rax],0x6d002d
   14001568a:	jae    0x14001568c
   14001568c:	sub    eax,0x69007700
   140015691:	add    BYTE PTR [rsi+0x0],ch
   140015694:	sub    eax,0x6f006300
   140015699:	add    BYTE PTR [rdx+0x0],dh
   14001569c:	add    BYTE PTR gs:[rip+0x6f006c00],ch        # 0x1af01c2a3
   1400156a3:	add    BYTE PTR [rbx+0x0],ah
   1400156a6:	(bad)  
   1400156a7:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400156ab:	add    BYTE PTR [rdx+0x0],bh
   1400156ae:	(bad)  
   1400156af:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400156b3:	add    BYTE PTR [rdi+0x0],ch
   1400156b6:	outs   dx,BYTE PTR ds:[rsi]
   1400156b7:	add    BYTE PTR [rip+0x31006c00],ch        # 0x17101c2bd
   1400156bd:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d0188c3
   1400156c3:	add    BYTE PTR [rcx],dh
	...
   1400156cd:	add    BYTE PTR [rax],al
   1400156cf:	add    BYTE PTR [rcx+0x0],ah
   1400156d2:	jo     0x1400156d4
   1400156d4:	imul   eax,DWORD PTR [rax],0x6d002d
   1400156da:	jae    0x1400156dc
   1400156dc:	sub    eax,0x69007700
   1400156e1:	add    BYTE PTR [rsi+0x0],ch
   1400156e4:	sub    eax,0x6f006300
   1400156e9:	add    BYTE PTR [rdx+0x0],dh
   1400156ec:	add    BYTE PTR gs:[rip+0x6f006c00],ch        # 0x1af01c2f3
   1400156f3:	add    BYTE PTR [rbx+0x0],ah
   1400156f6:	(bad)  
   1400156f7:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400156fb:	add    BYTE PTR [rdx+0x0],bh
   1400156fe:	(bad)  
   1400156ff:	add    BYTE PTR [rax+rax*1+0x69],dh
   140015703:	add    BYTE PTR [rdi+0x0],ch
   140015706:	outs   dx,BYTE PTR ds:[rsi]
   140015707:	add    BYTE PTR [rip+0x62006f00],ch        # 0x1a201c60d
   14001570d:	add    BYTE PTR [rbx+0x0],dh
   140015710:	outs   dx,DWORD PTR ds:[rsi]
   140015711:	add    BYTE PTR [rax+rax*1+0x65],ch
   140015715:	add    BYTE PTR [rax+rax*1+0x65],dh
   140015719:	add    BYTE PTR [rip+0x31006c00],ch        # 0x17101c31f
   14001571f:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d018925
   140015725:	add    BYTE PTR [rax],dh
	...
   14001572f:	add    BYTE PTR [rcx+0x0],ah
   140015732:	jo     0x140015734
   140015734:	imul   eax,DWORD PTR [rax],0x6d002d
   14001573a:	jae    0x14001573c
   14001573c:	sub    eax,0x69007700
   140015741:	add    BYTE PTR [rsi+0x0],ch
   140015744:	sub    eax,0x6f006300
   140015749:	add    BYTE PTR [rdx+0x0],dh
   14001574c:	add    BYTE PTR gs:[rip+0x72007000],ch        # 0x1b201c753
   140015753:	add    BYTE PTR [rdi+0x0],ch
   140015756:	movsxd eax,DWORD PTR [rax]
   140015758:	add    BYTE PTR gs:[rbx+0x0],dh
   14001575c:	jae    0x14001575e
   14001575e:	je     0x140015760
   140015760:	push   0x65007200
   140015765:	add    BYTE PTR [rcx+0x0],ah
   140015768:	add    BYTE PTR fs:[rbx+0x0],dh
   14001576c:	sub    eax,0x31006c00
   140015771:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d018877
   140015777:	add    BYTE PTR [rdx],dh
   140015779:	add    BYTE PTR [rax],al
   14001577b:	add    BYTE PTR [rax],al
   14001577d:	add    BYTE PTR [rax],al
   14001577f:	add    BYTE PTR [rcx+0x0],ah
   140015782:	jo     0x140015784
   140015784:	imul   eax,DWORD PTR [rax],0x6d002d
   14001578a:	jae    0x14001578c
   14001578c:	sub    eax,0x69007700
   140015791:	add    BYTE PTR [rsi+0x0],ch
   140015794:	sub    eax,0x6f006300
   140015799:	add    BYTE PTR [rdx+0x0],dh
   14001579c:	add    BYTE PTR gs:[rip+0x74007300],ch        # 0x1b401caa3
   1400157a3:	add    BYTE PTR [rdx+0x0],dh
   1400157a6:	imul   eax,DWORD PTR [rax],0x67006e
   1400157ac:	sub    eax,0x31006c00
   1400157b1:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d0188b7
   1400157b7:	add    BYTE PTR [rax],dh
   1400157b9:	add    BYTE PTR [rax],al
   1400157bb:	add    BYTE PTR [rax],al
   1400157bd:	add    BYTE PTR [rax],al
   1400157bf:	add    BYTE PTR [rcx+0x0],ah
   1400157c2:	jo     0x1400157c4
   1400157c4:	imul   eax,DWORD PTR [rax],0x6d002d
   1400157ca:	jae    0x1400157cc
   1400157cc:	sub    eax,0x69007700
   1400157d1:	add    BYTE PTR [rsi+0x0],ch
   1400157d4:	sub    eax,0x6f006300
   1400157d9:	add    BYTE PTR [rdx+0x0],dh
   1400157dc:	add    BYTE PTR gs:[rip+0x79007300],ch        # 0x1b901cae3
   1400157e3:	add    BYTE PTR [rbx+0x0],dh
   1400157e6:	imul   eax,DWORD PTR [rax],0x66006e
   1400157ec:	outs   dx,DWORD PTR ds:[rsi]
   1400157ed:	add    BYTE PTR [rip+0x31006c00],ch        # 0x17101c3f3
   1400157f3:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d0189f9
   1400157f9:	add    BYTE PTR [rcx],dh
   1400157fb:	add    BYTE PTR [rax],al
   1400157fd:	add    BYTE PTR [rax],al
   1400157ff:	add    BYTE PTR [rcx+0x0],ah
   140015802:	jo     0x140015804
   140015804:	imul   eax,DWORD PTR [rax],0x6d002d
   14001580a:	jae    0x14001580c
   14001580c:	sub    eax,0x69007700
   140015811:	add    BYTE PTR [rsi+0x0],ch
   140015814:	sub    eax,0x6f006300
   140015819:	add    BYTE PTR [rdx+0x0],dh
   14001581c:	add    BYTE PTR gs:[rip+0x69007700],ch        # 0x1a901cf23
   140015823:	add    BYTE PTR [rsi+0x0],ch
   140015826:	jb     0x140015828
   140015828:	je     0x14001582a
   14001582a:	sub    eax,0x31006c00
   14001582f:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d018935
   140015835:	add    BYTE PTR [rax],dh
	...
   14001583f:	add    BYTE PTR [rcx+0x0],ah
   140015842:	jo     0x140015844
   140015844:	imul   eax,DWORD PTR [rax],0x6d002d
   14001584a:	jae    0x14001584c
   14001584c:	sub    eax,0x69007700
   140015851:	add    BYTE PTR [rsi+0x0],ch
   140015854:	sub    eax,0x6f006300
   140015859:	add    BYTE PTR [rdx+0x0],dh
   14001585c:	add    BYTE PTR gs:[rip+0x73007800],ch        # 0x1b301d063
   140015863:	add    BYTE PTR [rax+rax*1+0x61],dh
   140015867:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001586b:	add    BYTE PTR [rip+0x32006c00],ch        # 0x17201c471
   140015871:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d018977
   140015877:	add    BYTE PTR [rax],dh
   140015879:	add    BYTE PTR [rax],al
   14001587b:	add    BYTE PTR [rax],al
   14001587d:	add    BYTE PTR [rax],al
   14001587f:	add    BYTE PTR [rcx+0x0],ah
   140015882:	jo     0x140015884
   140015884:	imul   eax,DWORD PTR [rax],0x6d002d
   14001588a:	jae    0x14001588c
   14001588c:	sub    eax,0x69007700
   140015891:	add    BYTE PTR [rsi+0x0],ch
   140015894:	sub    eax,0x74007200
   140015899:	add    BYTE PTR [rbx+0x0],ah
   14001589c:	outs   dx,DWORD PTR ds:[rsi]
   14001589d:	add    BYTE PTR [rdx+0x0],dh
   1400158a0:	add    BYTE PTR gs:[rip+0x74006e00],ch        # 0x1b401c6a7
   1400158a7:	add    BYTE PTR [rbp+0x0],dh
   1400158aa:	jae    0x1400158ac
   1400158ac:	add    BYTE PTR gs:[rdx+0x0],dh
   1400158b0:	sub    eax,0x69007700
   1400158b5:	add    BYTE PTR [rsi+0x0],ch
   1400158b8:	add    BYTE PTR fs:[rdi+0x0],ch
   1400158bc:	ja     0x1400158be
   1400158be:	sub    eax,0x31006c00
   1400158c3:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d0189c9
   1400158c9:	add    BYTE PTR [rax],dh
   1400158cb:	add    BYTE PTR [rax],al
   1400158cd:	add    BYTE PTR [rax],al
   1400158cf:	add    BYTE PTR [rcx+0x0],ah
   1400158d2:	jo     0x1400158d4
   1400158d4:	imul   eax,DWORD PTR [rax],0x6d002d
   1400158da:	jae    0x1400158dc
   1400158dc:	sub    eax,0x69007700
   1400158e1:	add    BYTE PTR [rsi+0x0],ch
   1400158e4:	sub    eax,0x65007300
   1400158e9:	add    BYTE PTR [rbx+0x0],ah
   1400158ec:	jne    0x1400158ee
   1400158ee:	jb     0x1400158f0
   1400158f0:	imul   eax,DWORD PTR [rax],0x790074
   1400158f6:	sub    eax,0x79007300
   1400158fb:	add    BYTE PTR [rbx+0x0],dh
   1400158fe:	je     0x140015900
   140015900:	add    BYTE PTR gs:[rbp+0x0],ch
   140015904:	data16 add BYTE PTR [rbp+0x0],dh
   140015908:	outs   dx,BYTE PTR ds:[rsi]
   140015909:	add    BYTE PTR [rbx+0x0],ah
   14001590c:	je     0x14001590e
   14001590e:	imul   eax,DWORD PTR [rax],0x6e006f
   140015914:	jae    0x140015916
   140015916:	sub    eax,0x31006c00
   14001591b:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d018a21
   140015921:	add    BYTE PTR [rax],dh
	...
   14001592f:	add    BYTE PTR [rbp+0x0],ah
   140015932:	js     0x140015934
   140015934:	je     0x140015936
   140015936:	sub    eax,0x73006d00
   14001593b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a901d041
   140015941:	add    BYTE PTR [rsi+0x0],ch
   140015944:	sub    eax,0x65006b00
   140015949:	add    BYTE PTR [rdx+0x0],dh
   14001594c:	outs   dx,BYTE PTR ds:[rsi]
   14001594d:	add    BYTE PTR [rbp+0x0],ah
   140015950:	ins    BYTE PTR es:[rdi],dx
   140015951:	add    BYTE PTR [rbx],dh
   140015953:	add    BYTE PTR [rdx],dh
   140015955:	add    BYTE PTR [rip+0x61007000],ch        # 0x1a101c95b
   14001595b:	add    BYTE PTR [rbx+0x0],ah
   14001595e:	imul   eax,DWORD PTR [rax],0x61
   140015961:	add    BYTE PTR [rdi+0x0],ah
   140015964:	add    BYTE PTR gs:[rip+0x75006300],ch        # 0x1b501bc6b
   14001596b:	add    BYTE PTR [rdx+0x0],dh
   14001596e:	jb     0x140015970
   140015970:	add    BYTE PTR gs:[rsi+0x0],ch
   140015974:	je     0x140015976
   140015976:	sub    eax,0x31006c00
   14001597b:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d018a81
   140015981:	add    BYTE PTR [rax],dh
	...
   14001598f:	add    BYTE PTR [rbp+0x0],ah
   140015992:	js     0x140015994
   140015994:	je     0x140015996
   140015996:	sub    eax,0x73006d00
   14001599b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a901d0a1
   1400159a1:	add    BYTE PTR [rsi+0x0],ch
   1400159a4:	sub    eax,0x74006e00
   1400159a9:	add    BYTE PTR [rbp+0x0],dh
   1400159ac:	jae    0x1400159ae
   1400159ae:	add    BYTE PTR gs:[rdx+0x0],dh
   1400159b2:	sub    eax,0x69006400
   1400159b7:	add    BYTE PTR [rcx+0x0],ah
   1400159ba:	ins    BYTE PTR es:[rdi],dx
   1400159bb:	add    BYTE PTR [rdi+0x0],ch
   1400159be:	add    BYTE PTR [edx+0x0],ah
   1400159c2:	outs   dx,DWORD PTR ds:[rsi]
   1400159c3:	add    BYTE PTR [rax+0x0],bh
   1400159c6:	sub    eax,0x31006c00
   1400159cb:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d018ad1
   1400159d1:	add    BYTE PTR [rax],dh
	...
   1400159df:	add    BYTE PTR [rbp+0x0],ah
   1400159e2:	js     0x1400159e4
   1400159e4:	je     0x1400159e6
   1400159e6:	sub    eax,0x73006d00
   1400159eb:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a901d0f1
   1400159f1:	add    BYTE PTR [rsi+0x0],ch
   1400159f4:	sub    eax,0x74006e00
   1400159f9:	add    BYTE PTR [rbp+0x0],dh
   1400159fc:	jae    0x1400159fe
   1400159fe:	add    BYTE PTR gs:[rdx+0x0],dh
   140015a02:	sub    eax,0x69007700
   140015a07:	add    BYTE PTR [rsi+0x0],ch
   140015a0a:	add    BYTE PTR fs:[rdi+0x0],ch
   140015a0e:	ja     0x140015a10
   140015a10:	jae    0x140015a12
   140015a12:	je     0x140015a14
   140015a14:	(bad)  
   140015a15:	add    BYTE PTR [rax+rax*1+0x69],dh
   140015a19:	add    BYTE PTR [rdi+0x0],ch
   140015a1c:	outs   dx,BYTE PTR ds:[rsi]
   140015a1d:	add    BYTE PTR [rip+0x31006c00],ch        # 0x17101c623
   140015a23:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d018b29
   140015a29:	add    BYTE PTR [rax],dh
   140015a2b:	add    BYTE PTR [rax],al
   140015a2d:	add    BYTE PTR [rax],al
   140015a2f:	add    BYTE PTR [rbp+0x0],dh
   140015a32:	jae    0x140015a34
   140015a34:	add    BYTE PTR gs:[rdx+0x0],dh
   140015a38:	xor    eax,DWORD PTR [rax]
   140015a3a:	xor    al,BYTE PTR [rax]
   140015a3c:	add    BYTE PTR [rax],al
   140015a3e:	add    BYTE PTR [rax],al
   140015a40:	adc    al,BYTE PTR [rax]
   140015a42:	add    BYTE PTR [rax],al
   140015a44:	add    BYTE PTR [rax],al
   140015a46:	add    BYTE PTR [rax],al
   140015a48:	rex.B jb 0x140015ab0
   140015a4b:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x41736970
   140015a54:	rex.WRX push rbx
   140015a56:	rex.WB add BYTE PTR [r15],al
   140015a59:	add    BYTE PTR [rax],al
   140015a5b:	add    BYTE PTR [rdx],dl
   140015a5d:	add    BYTE PTR [rax],al
   140015a5f:	add    BYTE PTR [rbx+0x6f],al
   140015a62:	ins    DWORD PTR es:[rdi],dx
   140015a63:	jo     0x140015ac6
   140015a65:	jb     0x140015acc
   140015a67:	push   rbx
   140015a68:	je     0x140015adc
   140015a6a:	imul   ebp,DWORD PTR [rsi+0x67],0x2007845
   140015a71:	add    BYTE PTR [rax],al
   140015a73:	add    BYTE PTR [rdx],dl
   140015a75:	add    BYTE PTR [rax],al
   140015a77:	add    BYTE PTR [rdx],al
   140015a79:	add    BYTE PTR [rax],al
   140015a7b:	add    BYTE PTR [rdx],dl
   140015a7d:	add    BYTE PTR [rax],al
   140015a7f:	add    BYTE PTR [rdx],al
   140015a81:	add    BYTE PTR [rax],al
   140015a83:	add    BYTE PTR [rdx],dl
   140015a85:	add    BYTE PTR [rax],al
   140015a87:	add    BYTE PTR [rdx],al
   140015a89:	add    BYTE PTR [rax],al
   140015a8b:	add    BYTE PTR [rdx],dl
   140015a8d:	add    BYTE PTR [rax],al
   140015a8f:	add    BYTE PTR [rax],al
   140015a91:	add    BYTE PTR [rax],al
   140015a93:	add    BYTE PTR [rsi],cl
   140015a95:	add    BYTE PTR [rax],al
   140015a97:	add    BYTE PTR [rdi+0x65],al
   140015a9a:	je     0x140015adf
   140015a9c:	jne    0x140015b10
   140015a9e:	jb     0x140015b05
   140015aa0:	outs   dx,BYTE PTR ds:[rsi]
   140015aa1:	je     0x140015af3
   140015aa3:	(bad)  
   140015aa4:	movsxd ebp,DWORD PTR [rbx+0x61]
   140015aa7:	addr32 gs rex.WB
   140015aaa:	add    BYTE PTR fs:[rax],al
   140015aad:	add    BYTE PTR [rax],al
   140015aaf:	add    BYTE PTR [rax],cl
   140015ab1:	add    BYTE PTR [rax],al
   140015ab3:	add    BYTE PTR [rdx],dl
   140015ab5:	add    BYTE PTR [rax],al
   140015ab7:	add    BYTE PTR [rax+rax*1],al
   140015aba:	add    BYTE PTR [rax],al
   140015abc:	adc    al,BYTE PTR [rax]
   140015abe:	add    BYTE PTR [rax],al
   140015ac0:	rex.WR
   140015ac1:	rex.XB
   140015ac2:	rex.WRB (bad) 
   140015ac4:	jo     0x140015b19
   140015ac6:	je     0x140015b3a
   140015ac8:	imul   ebp,DWORD PTR [rsi+0x67],0x7845
   140015acf:	add    BYTE PTR [rax+rax*1],al
   140015ad2:	add    BYTE PTR [rax],al
   140015ad4:	adc    al,BYTE PTR [rax]
   140015ad6:	add    BYTE PTR [rax],al
   140015ad8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140015ada:	movsxd esp,DWORD PTR [rcx+0x6c]
   140015add:	gs rex.WRX (bad) 
   140015ae0:	ins    DWORD PTR es:[rdi],dx
   140015ae1:	gs push rsp
   140015ae3:	outs   dx,DWORD PTR ds:[rsi]
   140015ae4:	rex.WR
   140015ae5:	rex.XB
   140015ae6:	rex.WB
   140015ae7:	add    BYTE PTR [rax],r8b
   140015aea:	add    BYTE PTR [rax],al
   140015aec:	rex.WB
   140015aed:	rex.WRX
   140015aee:	rex.RX add BYTE PTR [rcx+0x6e],r13b
   140015af2:	data16 add BYTE PTR [rsi+0x41],cl
   140015af6:	rex.WRX add BYTE PTR [rsi+0x61],r13b
   140015afa:	outs   dx,BYTE PTR ds:[rsi]
   140015afb:	add    BYTE PTR [rax],al
   140015afd:	add    BYTE PTR [rax],al
   140015aff:	add    BYTE PTR [rsi+0x41],cl
   140015b02:	rex.WRX sub BYTE PTR [rbx+0x4e],r10b
   140015b06:	rex.B
   140015b07:	rex.WRX sub QWORD PTR [rax],r8
   140015b0a:	add    BYTE PTR [rax],al
   140015b0c:	add    BYTE PTR [rax],al
   140015b0e:	add    BYTE PTR [rax],al
   140015b10:	outs   dx,BYTE PTR ds:[rsi]
   140015b11:	(bad)  
   140015b12:	outs   dx,BYTE PTR ds:[rsi]
   140015b13:	sub    BYTE PTR [rbx+0x6e],dh
   140015b16:	(bad)  
   140015b17:	outs   dx,BYTE PTR ds:[rsi]
   140015b18:	sub    DWORD PTR [rax],eax
   140015b1a:	add    BYTE PTR [rax],al
   140015b1c:	add    BYTE PTR [rax],al
   140015b1e:	add    BYTE PTR [rax],al
   140015b20:	rex.WRX
   140015b21:	rex.B
   140015b22:	rex.WRX sub BYTE PTR [rcx+0x4e],r9b
   140015b26:	sub    DWORD PTR [rax],r8d
   140015b29:	add    BYTE PTR [rax],al
   140015b2b:	add    BYTE PTR [rax],al
   140015b2d:	add    BYTE PTR [rax],al
   140015b2f:	add    BYTE PTR [rsi+0x61],ch
   140015b32:	outs   dx,BYTE PTR ds:[rsi]
   140015b33:	sub    BYTE PTR [rcx+0x6e],ch
   140015b36:	sub    DWORD PTR fs:[rax],eax
   140015b39:	add    BYTE PTR [rax],al
   140015b3b:	add    BYTE PTR [rbp+0x2b],ah
   140015b3e:	xor    BYTE PTR [rax],dh
   140015b40:	xor    BYTE PTR [rax],al
	...
   140015b4e:	add    BYTE PTR [rax],al
   140015b50:	adc    BYTE PTR [rsi+0x1],bl
   140015b53:	rex add DWORD PTR [rax],eax
   140015b56:	add    BYTE PTR [rax],al
   140015b58:	adc    al,0x5e
   140015b5a:	add    DWORD PTR [rax+0x1],eax
   140015b5d:	add    BYTE PTR [rax],al
   140015b5f:	add    BYTE PTR [rax],bl
   140015b61:	pop    rsi
   140015b62:	add    DWORD PTR [rax+0x1],eax
   140015b65:	add    BYTE PTR [rax],al
   140015b67:	add    BYTE PTR [rsi+rbx*2],bl
   140015b6a:	add    DWORD PTR [rax+0x1],eax
   140015b6d:	add    BYTE PTR [rax],al
   140015b6f:	add    BYTE PTR [rax],ah
   140015b71:	pop    rsi
   140015b72:	add    DWORD PTR [rax+0x1],eax
   140015b75:	add    BYTE PTR [rax],al
   140015b77:	add    BYTE PTR [rsi+rbx*2],ah
   140015b7a:	add    DWORD PTR [rax+0x1],eax
   140015b7d:	add    BYTE PTR [rax],al
   140015b7f:	add    BYTE PTR [rax],ch
   140015b81:	pop    rsi
   140015b82:	add    DWORD PTR [rax+0x1],eax
   140015b85:	add    BYTE PTR [rax],al
   140015b87:	add    BYTE PTR [rsi+rbx*2],ch
   140015b8a:	add    DWORD PTR [rax+0x1],eax
   140015b8d:	add    BYTE PTR [rax],al
   140015b8f:	add    BYTE PTR [rsi+rbx*2],dh
   140015b92:	add    DWORD PTR [rax+0x1],eax
   140015b95:	add    BYTE PTR [rax],al
   140015b97:	add    BYTE PTR [rax+0x5e],al
   140015b9a:	add    DWORD PTR [rax+0x1],eax
   140015b9d:	add    BYTE PTR [rax],al
   140015b9f:	add    BYTE PTR [rax+0x5e],cl
   140015ba2:	add    DWORD PTR [rax+0x1],eax
   140015ba5:	add    BYTE PTR [rax],al
   140015ba7:	add    BYTE PTR [rax+0x5e],bl
   140015baa:	add    DWORD PTR [rax+0x1],eax
   140015bad:	add    BYTE PTR [rax],al
   140015baf:	add    BYTE PTR [rsi+rbx*2+0x1],ah
   140015bb3:	rex add DWORD PTR [rax],eax
   140015bb6:	add    BYTE PTR [rax],al
   140015bb8:	jo     0x140015c18
   140015bba:	add    DWORD PTR [rax+0x1],eax
   140015bbd:	add    BYTE PTR [rax],al
   140015bbf:	add    BYTE PTR [rsi+rbx*2+0x1],bh
   140015bc3:	rex add DWORD PTR [rax],eax
   140015bc6:	add    BYTE PTR [rax],al
   140015bc8:	sbb    BYTE PTR [rsi+0x1],0x40
   140015bcc:	add    DWORD PTR [rax],eax
   140015bce:	add    BYTE PTR [rax],al
   140015bd0:	test   BYTE PTR [rsi+0x1],bl
   140015bd3:	rex add DWORD PTR [rax],eax
   140015bd6:	add    BYTE PTR [rax],al
   140015bd8:	mov    BYTE PTR [rsi+0x1],bl
   140015bdb:	rex add DWORD PTR [rax],eax
   140015bde:	add    BYTE PTR [rax],al
   140015be0:	mov    WORD PTR [rsi+0x1],ds
   140015be3:	rex add DWORD PTR [rax],eax
   140015be6:	add    BYTE PTR [rax],al
   140015be8:	nop
   140015be9:	pop    rsi
   140015bea:	add    DWORD PTR [rax+0x1],eax
   140015bed:	add    BYTE PTR [rax],al
   140015bef:	add    BYTE PTR [rsi+rbx*2+0x14001],dl
   140015bf6:	add    BYTE PTR [rax],al
   140015bf8:	cwde   
   140015bf9:	pop    rsi
   140015bfa:	add    DWORD PTR [rax+0x1],eax
   140015bfd:	add    BYTE PTR [rax],al
   140015bff:	add    BYTE PTR [rsi+rbx*2+0x14001],bl
   140015c06:	add    BYTE PTR [rax],al
   140015c08:	movabs al,ds:0xa40000000140015e
   140015c11:	pop    rsi
   140015c12:	add    DWORD PTR [rax+0x1],eax
   140015c15:	add    BYTE PTR [rax],al
   140015c17:	add    BYTE PTR [rax+0x140015e],ch
   140015c1d:	add    BYTE PTR [rax],al
   140015c1f:	add    BYTE PTR [rax+0x140015e],dh
   140015c25:	add    BYTE PTR [rax],al
   140015c27:	add    BYTE PTR [rax+0x140015e],bh
   140015c2d:	add    BYTE PTR [rax],al
   140015c2f:	add    ah,al
   140015c31:	pop    rsi
   140015c32:	add    DWORD PTR [rax+0x1],eax
   140015c35:	add    BYTE PTR [rax],al
   140015c37:	add    ah,cl
   140015c39:	pop    rsi
   140015c3a:	add    DWORD PTR [rax+0x1],eax
   140015c3d:	add    BYTE PTR [rax],al
   140015c3f:	add    BYTE PTR [rsi+rbx*2+0x14001],cl
   140015c46:	add    BYTE PTR [rax],al
   140015c48:	(bad)  
   140015c49:	pop    rsi
   140015c4a:	add    DWORD PTR [rax+0x1],eax
   140015c4d:	add    BYTE PTR [rax],al
   140015c4f:	add    ah,bl
   140015c51:	pop    rsi
   140015c52:	add    DWORD PTR [rax+0x1],eax
   140015c55:	add    BYTE PTR [rax],al
   140015c57:	add    ah,ah
   140015c59:	pop    rsi
   140015c5a:	add    DWORD PTR [rax+0x1],eax
   140015c5d:	add    BYTE PTR [rax],al
   140015c5f:	add    al,dh
   140015c61:	pop    rsi
   140015c62:	add    DWORD PTR [rax+0x1],eax
   140015c65:	add    BYTE PTR [rax],al
   140015c67:	add    BYTE PTR [rax],al
   140015c69:	pop    rdi
   140015c6a:	add    DWORD PTR [rax+0x1],eax
   140015c6d:	add    BYTE PTR [rax],al
   140015c6f:	add    BYTE PTR [rax],cl
   140015c71:	pop    rdi
   140015c72:	add    DWORD PTR [rax+0x1],eax
   140015c75:	add    BYTE PTR [rax],al
   140015c77:	add    BYTE PTR [rax],bl
   140015c79:	pop    rdi
   140015c7a:	add    DWORD PTR [rax+0x1],eax
   140015c7d:	add    BYTE PTR [rax],al
   140015c7f:	add    BYTE PTR [rdi+rbx*2],ah
   140015c82:	add    DWORD PTR [rax+0x1],eax
   140015c85:	add    BYTE PTR [rax],al
   140015c87:	add    BYTE PTR [rax],ch
   140015c89:	pop    rdi
   140015c8a:	add    DWORD PTR [rax+0x1],eax
   140015c8d:	add    BYTE PTR [rax],al
   140015c8f:	add    BYTE PTR [rax],dh
   140015c91:	pop    rdi
   140015c92:	add    DWORD PTR [rax+0x1],eax
   140015c95:	add    BYTE PTR [rax],al
   140015c97:	add    BYTE PTR [rax+0x5f],al
   140015c9a:	add    DWORD PTR [rax+0x1],eax
   140015c9d:	add    BYTE PTR [rax],al
   140015c9f:	add    BYTE PTR [rax+0x5f],bl
   140015ca2:	add    DWORD PTR [rax+0x1],eax
   140015ca5:	add    BYTE PTR [rax],al
   140015ca7:	add    BYTE PTR [rcx],al
   140015ca9:	add    BYTE PTR [rax],al
   140015cab:	add    BYTE PTR [rax],al
   140015cad:	add    BYTE PTR [rax],al
   140015caf:	add    BYTE PTR [rax+0x5f],ch
   140015cb2:	add    DWORD PTR [rax+0x1],eax
   140015cb5:	add    BYTE PTR [rax],al
   140015cb7:	add    BYTE PTR [rax+0x5f],dh
   140015cba:	add    DWORD PTR [rax+0x1],eax
   140015cbd:	add    BYTE PTR [rax],al
   140015cbf:	add    BYTE PTR [rax+0x5f],bh
   140015cc2:	add    DWORD PTR [rax+0x1],eax
   140015cc5:	add    BYTE PTR [rax],al
   140015cc7:	add    BYTE PTR [rax+0x140015f],al
   140015ccd:	add    BYTE PTR [rax],al
   140015ccf:	add    BYTE PTR [rax+0x140015f],cl
   140015cd5:	add    BYTE PTR [rax],al
   140015cd7:	add    BYTE PTR [rax+0x140015f],dl
   140015cdd:	add    BYTE PTR [rax],al
   140015cdf:	add    BYTE PTR [rax+0x140015f],bl
   140015ce5:	add    BYTE PTR [rax],al
   140015ce7:	add    BYTE PTR [rax+0x140015f],ah
   140015ced:	add    BYTE PTR [rax],al
   140015cef:	add    BYTE PTR [rax+0x140015f],dh
   140015cf5:	add    BYTE PTR [rax],al
   140015cf7:	add    al,al
   140015cf9:	pop    rdi
   140015cfa:	add    DWORD PTR [rax+0x1],eax
   140015cfd:	add    BYTE PTR [rax],al
   140015cff:	add    al,dl
   140015d01:	pop    rdi
   140015d02:	add    DWORD PTR [rax+0x1],eax
   140015d05:	add    BYTE PTR [rax],al
   140015d07:	add    al,ch
   140015d09:	pop    rdi
   140015d0a:	add    DWORD PTR [rax+0x1],eax
   140015d0d:	add    BYTE PTR [rax],al
   140015d0f:	add    BYTE PTR [rax],al
   140015d11:	(bad)  
   140015d12:	add    DWORD PTR [rax+0x1],eax
   140015d15:	add    BYTE PTR [rax],al
   140015d17:	add    BYTE PTR [rax],dl
   140015d19:	(bad)  
   140015d1a:	add    DWORD PTR [rax+0x1],eax
   140015d1d:	add    BYTE PTR [rax],al
   140015d1f:	add    BYTE PTR [rax],ch
   140015d21:	(bad)  
   140015d22:	add    DWORD PTR [rax+0x1],eax
   140015d25:	add    BYTE PTR [rax],al
   140015d27:	add    BYTE PTR [rax],dh
   140015d29:	(bad)  
   140015d2a:	add    DWORD PTR [rax+0x1],eax
   140015d2d:	add    BYTE PTR [rax],al
   140015d2f:	add    BYTE PTR [rax],bh
   140015d31:	(bad)  
   140015d32:	add    DWORD PTR [rax+0x1],eax
   140015d35:	add    BYTE PTR [rax],al
   140015d37:	add    BYTE PTR [rax+0x60],al
   140015d3a:	add    DWORD PTR [rax+0x1],eax
   140015d3d:	add    BYTE PTR [rax],al
   140015d3f:	add    BYTE PTR [rax+0x60],cl
   140015d42:	add    DWORD PTR [rax+0x1],eax
   140015d45:	add    BYTE PTR [rax],al
   140015d47:	add    BYTE PTR [rax+0x60],dl
   140015d4a:	add    DWORD PTR [rax+0x1],eax
   140015d4d:	add    BYTE PTR [rax],al
   140015d4f:	add    BYTE PTR [rax+0x60],bl
   140015d52:	add    DWORD PTR [rax+0x1],eax
   140015d55:	add    BYTE PTR [rax],al
   140015d57:	add    BYTE PTR [rax+0x60],ah
   140015d5a:	add    DWORD PTR [rax+0x1],eax
   140015d5d:	add    BYTE PTR [rax],al
   140015d5f:	add    BYTE PTR [rax+0x60],ch
   140015d62:	add    DWORD PTR [rax+0x1],eax
   140015d65:	add    BYTE PTR [rax],al
   140015d67:	add    BYTE PTR [rax+0x60],dh
   140015d6a:	add    DWORD PTR [rax+0x1],eax
   140015d6d:	add    BYTE PTR [rax],al
   140015d6f:	add    BYTE PTR [rax+0x60],bh
   140015d72:	add    DWORD PTR [rax+0x1],eax
   140015d75:	add    BYTE PTR [rax],al
   140015d77:	add    BYTE PTR [rax+0x1400160],al
   140015d7d:	add    BYTE PTR [rax],al
   140015d7f:	add    BYTE PTR [rax+0x1400160],cl
   140015d85:	add    BYTE PTR [rax],al
   140015d87:	add    BYTE PTR [rax+0x1400160],bl
   140015d8d:	add    BYTE PTR [rax],al
   140015d8f:	add    BYTE PTR [rax+0x1400160],dh
   140015d95:	add    BYTE PTR [rax],al
   140015d97:	add    al,al
   140015d99:	(bad)  
   140015d9a:	add    DWORD PTR [rax+0x1],eax
   140015d9d:	add    BYTE PTR [rax],al
   140015d9f:	add    BYTE PTR [rax+0x60],cl
   140015da2:	add    DWORD PTR [rax+0x1],eax
   140015da5:	add    BYTE PTR [rax],al
   140015da7:	add    al,dl
   140015da9:	(bad)  
   140015daa:	add    DWORD PTR [rax+0x1],eax
   140015dad:	add    BYTE PTR [rax],al
   140015daf:	add    al,ah
   140015db1:	(bad)  
   140015db2:	add    DWORD PTR [rax+0x1],eax
   140015db5:	add    BYTE PTR [rax],al
   140015db7:	add    al,dh
   140015db9:	(bad)  
   140015dba:	add    DWORD PTR [rax+0x1],eax
   140015dbd:	add    BYTE PTR [rax],al
   140015dbf:	add    BYTE PTR [rax],al
   140015dc1:	(bad)  
   140015dc2:	add    DWORD PTR [rax+0x1],eax
   140015dc5:	add    BYTE PTR [rax],al
   140015dc7:	add    BYTE PTR [rax],bl
   140015dc9:	(bad)  
   140015dca:	add    DWORD PTR [rax+0x1],eax
   140015dcd:	add    BYTE PTR [rax],al
   140015dcf:	add    BYTE PTR [rax],ch
   140015dd1:	(bad)  
   140015dd2:	add    DWORD PTR [rax+0x1],eax
   140015dd5:	add    BYTE PTR [rax],al
   140015dd7:	add    BYTE PTR [rax+0x61],al
   140015dda:	add    DWORD PTR [rax+0x1],eax
   140015ddd:	add    BYTE PTR [rax],al
   140015ddf:	add    BYTE PTR [rcx+riz*2+0x1],dl
   140015de3:	rex add DWORD PTR [rax],eax
   140015de6:	add    BYTE PTR [rax],al
   140015de8:	pop    rsp
   140015de9:	(bad)  
   140015dea:	add    DWORD PTR [rax+0x1],eax
   140015ded:	add    BYTE PTR [rax],al
   140015def:	add    BYTE PTR [rax+0x61],ch
   140015df2:	add    DWORD PTR [rax+0x1],eax
   140015df5:	add    BYTE PTR [rax],al
   140015df7:	add    BYTE PTR [rax+0x1400161],al
   140015dfd:	add    BYTE PTR [rax],al
   140015dff:	add    BYTE PTR [rax+0x1400161],ch
   140015e05:	add    BYTE PTR [rax],al
   140015e07:	add    al,al
   140015e09:	(bad)  
   140015e0a:	add    DWORD PTR [rax+0x1],eax
   140015e0d:	add    BYTE PTR [rax],al
   140015e0f:	add    BYTE PTR [rbx+0x75],dl
   140015e12:	outs   dx,BYTE PTR ds:[rsi]
   140015e13:	add    BYTE PTR [rbp+0x6f],cl
   140015e16:	outs   dx,BYTE PTR ds:[rsi]
   140015e17:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   140015e1b:	add    BYTE PTR [rdi+0x65],dl
   140015e1e:	add    BYTE PTR fs:[rax+rbp*2+0x75],dl
   140015e23:	add    BYTE PTR [rsi+0x72],al
   140015e26:	imul   eax,DWORD PTR [rax],0x746153
   140015e2c:	push   rbx
   140015e2d:	jne    0x140015e9d
   140015e2f:	fs (bad) 
   140015e31:	jns    0x140015e33
   140015e33:	add    BYTE PTR [rbp+0x6f],cl
   140015e36:	outs   dx,BYTE PTR ds:[rsi]
   140015e37:	fs (bad) 
   140015e39:	jns    0x140015e3b
   140015e3b:	add    BYTE PTR [rax],al
   140015e3d:	add    BYTE PTR [rax],al
   140015e3f:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   140015e43:	jae    0x140015ea9
   140015e45:	(bad)  
   140015e46:	jns    0x140015e48
   140015e48:	push   rdi
   140015e49:	gs outs dx,BYTE PTR fs:[rsi]
   140015e4c:	gs jae 0x140015eb3
   140015e4f:	(bad)  
   140015e50:	jns    0x140015e52
   140015e52:	add    BYTE PTR [rax],al
   140015e54:	add    BYTE PTR [rax],al
   140015e56:	add    BYTE PTR [rax],al
   140015e58:	push   rsp
   140015e59:	push   0x64737275
   140015e5e:	(bad)  
   140015e5f:	jns    0x140015e61
   140015e61:	add    BYTE PTR [rax],al
   140015e63:	add    BYTE PTR [rsi+0x72],al
   140015e66:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   140015e6e:	add    BYTE PTR [rax],al
   140015e70:	push   rbx
   140015e71:	(bad)  
   140015e72:	je     0x140015ee9
   140015e74:	jb     0x140015eda
   140015e76:	(bad)  
   140015e77:	jns    0x140015e79
   140015e79:	add    BYTE PTR [rax],al
   140015e7b:	add    BYTE PTR [rdx+0x61],cl
   140015e7e:	outs   dx,BYTE PTR ds:[rsi]
   140015e7f:	add    BYTE PTR [rsi+0x65],al
   140015e82:	(bad)  
   140015e83:	add    BYTE PTR [rbp+0x61],cl
   140015e86:	jb     0x140015e88
   140015e88:	rex.B jo 0x140015efd
   140015e8b:	add    BYTE PTR [rbp+0x61],cl
   140015e8e:	jns    0x140015e90
   140015e90:	rex.WX jne 0x140015f01
   140015e93:	add    BYTE PTR [rdx+0x75],cl
   140015e96:	ins    BYTE PTR es:[rdi],dx
   140015e97:	add    BYTE PTR [rcx+0x75],al
   140015e9a:	add    BYTE PTR [ebx+0x65],dl
   140015e9e:	jo     0x140015ea0
   140015ea0:	movsxd r14,DWORD PTR [r8+r8*1+0x4e]
   140015ea5:	outs   dx,DWORD PTR ds:[rsi]
   140015ea6:	jbe    0x140015ea8
   140015ea8:	rex.R
   140015ea9:	movsxd eax,DWORD PTR gs:[rax]
   140015eac:	add    BYTE PTR [rax],al
   140015eae:	add    BYTE PTR [rax],al
   140015eb0:	rex.WX (bad) 
   140015eb2:	outs   dx,BYTE PTR ds:[rsi]
   140015eb3:	jne    0x140015f16
   140015eb5:	jb     0x140015f30
   140015eb7:	add    BYTE PTR [rsi+0x65],al
   140015eba:	(bad)
   140015ebf:	jns    0x140015ec1
   140015ec1:	add    BYTE PTR [rax],al
   140015ec3:	add    BYTE PTR [rbp+0x61],cl
   140015ec6:	jb     0x140015f2b
   140015ec8:	push   0x41000000
   140015ecd:	jo     0x140015f41
   140015ecf:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6e754a00
   140015ed7:	add    BYTE PTR gs:[rax],al
   140015eda:	add    BYTE PTR [rax],al
   140015edc:	rex.WX jne 0x140015f4b
   140015edf:	jns    0x140015ee1
   140015ee1:	add    BYTE PTR [rax],al
   140015ee3:	add    BYTE PTR [rcx+0x75],al
   140015ee6:	addr32 jne 0x140015f5c
   140015ee9:	je     0x140015eeb
   140015eeb:	add    BYTE PTR [rax],al
   140015eed:	add    BYTE PTR [rax],al
   140015eef:	add    BYTE PTR [rbx+0x65],dl
   140015ef2:	jo     0x140015f68
   140015ef4:	gs ins DWORD PTR es:[rdi],dx
   140015ef6:	(bad)  
   140015ef7:	gs jb  0x140015efa
   140015efa:	add    BYTE PTR [rax],al
   140015efc:	add    BYTE PTR [rax],al
   140015efe:	add    BYTE PTR [rax],al
   140015f00:	movsxd r14,DWORD PTR [r15+r13*2+0x62]
   140015f05:	gs jb  0x140015f08
   140015f08:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140015f0a:	jbe    0x140015f71
   140015f0c:	ins    DWORD PTR es:[rdi],dx
   140015f0d:	(bad)  
   140015f0e:	gs jb  0x140015f11
   140015f11:	add    BYTE PTR [rax],al
   140015f13:	add    BYTE PTR [rax],al
   140015f15:	add    BYTE PTR [rax],al
   140015f17:	add    BYTE PTR [rbp+riz*2+0x63],al
   140015f1b:	gs ins DWORD PTR es:[rdi],dx
   140015f1d:	(bad)  
   140015f1e:	gs jb  0x140015f21
   140015f21:	add    BYTE PTR [rax],al
   140015f23:	add    BYTE PTR [rcx+0x4d],al
   140015f26:	add    BYTE PTR [rax],al
   140015f28:	push   rax
   140015f29:	rex.WRB add BYTE PTR [r8],r8b
   140015f2c:	add    BYTE PTR [rax],al
   140015f2e:	add    BYTE PTR [rax],al
   140015f30:	rex.WRB
   140015f31:	rex.WRB (bad) 
   140015f33:	fs fs (bad) 
   140015f36:	jns    0x140015fb1
	...
   140015f40:	fs fs fs fs sub al,0x20
   140015f46:	rex.WRB
   140015f47:	rex.WRB
   140015f48:	rex.WRB
   140015f49:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   140015f4e:	and    BYTE PTR [rcx+0x79],bh
   140015f51:	jns    0x140015fcc
   140015f53:	add    BYTE PTR [rax],al
   140015f55:	add    BYTE PTR [rax],al
   140015f57:	add    BYTE PTR [rax+0x48],cl
   140015f5a:	cmp    ch,BYTE PTR [rbp+0x6d]
   140015f5d:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   140015f68:	push   rbx
   140015f69:	add    BYTE PTR [rbp+0x0],dh
   140015f6c:	outs   dx,BYTE PTR ds:[rsi]
   140015f6d:	add    BYTE PTR [rax],al
   140015f6f:	add    BYTE PTR [rbp+0x0],cl
   140015f72:	outs   dx,DWORD PTR ds:[rsi]
   140015f73:	add    BYTE PTR [rsi+0x0],ch
   140015f76:	add    BYTE PTR [rax],al
   140015f78:	push   rsp
   140015f79:	add    BYTE PTR [rbp+0x0],dh
   140015f7c:	add    BYTE PTR gs:[rax],al
   140015f7f:	add    BYTE PTR [rdi+0x0],dl
   140015f82:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140015f87:	add    BYTE PTR [rax+rax*1+0x68],dl
   140015f8b:	add    BYTE PTR [rbp+0x0],dh
   140015f8e:	add    BYTE PTR [rax],al
   140015f90:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140015f94:	imul   eax,DWORD PTR [rax],0x530000
   140015f9a:	(bad)  
   140015f9b:	add    BYTE PTR [rax+rax*1+0x0],dh
   140015f9f:	add    BYTE PTR [rbx+0x0],dl
   140015fa2:	jne    0x140015fa4
   140015fa4:	outs   dx,BYTE PTR ds:[rsi]
   140015fa5:	add    BYTE PTR [rax+rax*1+0x61],ah
   140015fa9:	add    BYTE PTR [rcx+0x0],bh
   140015fac:	add    BYTE PTR [rax],al
   140015fae:	add    BYTE PTR [rax],al
   140015fb0:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140015fb4:	outs   dx,BYTE PTR ds:[rsi]
   140015fb5:	add    BYTE PTR [rax+rax*1+0x61],ah
   140015fb9:	add    BYTE PTR [rcx+0x0],bh
   140015fbc:	add    BYTE PTR [rax],al
   140015fbe:	add    BYTE PTR [rax],al
   140015fc0:	push   rsp
   140015fc1:	add    BYTE PTR [rbp+0x0],dh
   140015fc4:	add    BYTE PTR gs:[rbx+0x0],dh
   140015fc8:	add    BYTE PTR fs:[rcx+0x0],ah
   140015fcc:	jns    0x140015fce
   140015fce:	add    BYTE PTR [rax],al
   140015fd0:	push   rdi
   140015fd1:	add    BYTE PTR [rbp+0x0],ah
   140015fd4:	add    BYTE PTR fs:[rsi+0x0],ch
   140015fd8:	add    BYTE PTR gs:[rbx+0x0],dh
   140015fdc:	add    BYTE PTR fs:[rcx+0x0],ah
   140015fe0:	jns    0x140015fe2
   140015fe2:	add    BYTE PTR [rax],al
   140015fe4:	add    BYTE PTR [rax],al
   140015fe6:	add    BYTE PTR [rax],al
   140015fe8:	push   rsp
   140015fe9:	add    BYTE PTR [rax+0x0],ch
   140015fec:	jne    0x140015fee
   140015fee:	jb     0x140015ff0
   140015ff0:	jae    0x140015ff2
   140015ff2:	add    BYTE PTR fs:[rcx+0x0],ah
   140015ff6:	jns    0x140015ff8
	...
   140016000:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140016004:	imul   eax,DWORD PTR [rax],0x610064
   14001600a:	jns    0x14001600c
   14001600c:	add    BYTE PTR [rax],al
   14001600e:	add    BYTE PTR [rax],al
   140016010:	push   rbx
   140016011:	add    BYTE PTR [rcx+0x0],ah
   140016014:	je     0x140016016
   140016016:	jne    0x140016018
   140016018:	jb     0x14001601a
   14001601a:	add    BYTE PTR fs:[rcx+0x0],ah
   14001601e:	jns    0x140016020
	...
   140016028:	rex.WX add BYTE PTR [rcx+0x0],spl
   14001602c:	outs   dx,BYTE PTR ds:[rsi]
   14001602d:	add    BYTE PTR [rax],al
   14001602f:	add    BYTE PTR [rsi+0x0],al
   140016032:	add    BYTE PTR gs:[rdx+0x0],ah
   140016036:	add    BYTE PTR [rax],al
   140016038:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14001603c:	jb     0x14001603e
   14001603e:	add    BYTE PTR [rax],al
   140016040:	add    BYTE PTR [r8+0x0],sil
   140016044:	jb     0x140016046
   140016046:	add    BYTE PTR [rax],al
   140016048:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14001604c:	jns    0x14001604e
   14001604e:	add    BYTE PTR [rax],al
   140016050:	rex.WX add BYTE PTR [rbp+0x0],sil
   140016054:	outs   dx,BYTE PTR ds:[rsi]
   140016055:	add    BYTE PTR [rax],al
   140016057:	add    BYTE PTR [rdx+0x0],cl
   14001605a:	jne    0x14001605c
   14001605c:	ins    BYTE PTR es:[rdi],dx
   14001605d:	add    BYTE PTR [rax],al
   14001605f:	add    BYTE PTR [rcx+0x0],al
   140016062:	jne    0x140016064
   140016064:	add    BYTE PTR [eax],al
   140016067:	add    BYTE PTR [rbx+0x0],dl
   14001606a:	add    BYTE PTR gs:[rax+0x0],dh
   14001606e:	add    BYTE PTR [rax],al
   140016070:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   140016074:	je     0x140016076
   140016076:	add    BYTE PTR [rax],al
   140016078:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14001607c:	jbe    0x14001607e
   14001607e:	add    BYTE PTR [rax],al
   140016080:	add    BYTE PTR [rbp+0x0],r12b
   140016084:	movsxd eax,DWORD PTR [rax]
   140016086:	add    BYTE PTR [rax],al
   140016088:	rex.WX add BYTE PTR [rcx+0x0],spl
   14001608c:	outs   dx,BYTE PTR ds:[rsi]
   14001608d:	add    BYTE PTR [rbp+0x0],dh
   140016090:	(bad)  
   140016091:	add    BYTE PTR [rdx+0x0],dh
   140016094:	jns    0x140016096
   140016096:	add    BYTE PTR [rax],al
   140016098:	rex.RX add BYTE PTR [rbp+0x0],r12b
   14001609c:	(bad)  
   14001609d:	add    BYTE PTR [rdx+0x0],dh
   1400160a0:	jne    0x1400160a2
   1400160a2:	(bad)  
   1400160a3:	add    BYTE PTR [rdx+0x0],dh
   1400160a6:	jns    0x1400160a8
	...
   1400160b0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400160b4:	jb     0x1400160b6
   1400160b6:	movsxd eax,DWORD PTR [rax]
   1400160b8:	push   0x0
   1400160bd:	add    BYTE PTR [rax],al
   1400160bf:	add    BYTE PTR [rcx+0x0],al
   1400160c2:	jo     0x1400160c4
   1400160c4:	jb     0x1400160c6
   1400160c6:	imul   eax,DWORD PTR [rax],0x6c
   1400160cc:	add    BYTE PTR [rax],al
   1400160ce:	add    BYTE PTR [rax],al
   1400160d0:	rex.WX add BYTE PTR [rbp+0x0],sil
   1400160d4:	outs   dx,BYTE PTR ds:[rsi]
   1400160d5:	add    BYTE PTR [rbp+0x0],ah
	...
   1400160e0:	rex.WX add BYTE PTR [rbp+0x0],sil
   1400160e4:	ins    BYTE PTR es:[rdi],dx
   1400160e5:	add    BYTE PTR [rcx+0x0],bh
	...
   1400160f0:	add    BYTE PTR [r13+0x0],sil
   1400160f4:	add    BYTE PTR [ebp+0x0],dh
   1400160f8:	jae    0x1400160fa
   1400160fa:	je     0x1400160fc
   1400160fc:	add    BYTE PTR [rax],al
   1400160fe:	add    BYTE PTR [rax],al
   140016100:	push   rbx
   140016101:	add    BYTE PTR [rbp+0x0],ah
   140016104:	jo     0x140016106
   140016106:	je     0x140016108
   140016108:	add    BYTE PTR gs:[rbp+0x0],ch
   14001610c:	(bad)  
   14001610d:	add    BYTE PTR [rbp+0x0],ah
   140016110:	jb     0x140016112
   140016112:	add    BYTE PTR [rax],al
   140016114:	add    BYTE PTR [rax],al
   140016116:	add    BYTE PTR [rax],al
   140016118:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14001611c:	je     0x14001611e
   14001611e:	outs   dx,DWORD PTR ds:[rsi]
   14001611f:	add    BYTE PTR [rdx+0x0],ah
   140016122:	add    BYTE PTR gs:[rdx+0x0],dh
   140016126:	add    BYTE PTR [rax],al
   140016128:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14001612c:	jbe    0x14001612e
   14001612e:	add    BYTE PTR gs:[rbp+0x0],ch
   140016132:	(bad)  
   140016133:	add    BYTE PTR [rbp+0x0],ah
   140016136:	jb     0x140016138
	...
   140016140:	add    BYTE PTR [rbp+0x0],r12b
   140016144:	movsxd eax,DWORD PTR [rax]
   140016146:	add    BYTE PTR gs:[rbp+0x0],ch
   14001614a:	(bad)  
   14001614b:	add    BYTE PTR [rbp+0x0],ah
   14001614e:	jb     0x140016150
   140016150:	add    BYTE PTR [rax],al
   140016152:	add    BYTE PTR [rax],al
   140016154:	add    BYTE PTR [r13+0x0],cl
   140016158:	add    BYTE PTR [rax],al
   14001615a:	add    BYTE PTR [rax],al
   14001615c:	push   rax
   14001615d:	add    BYTE PTR [rbp+0x0],cl
	...
   140016168:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14001616c:	(bad)  
   14001616d:	add    BYTE PTR [rax+rax*1+0x64],ah
   140016171:	add    BYTE PTR [rdi],ch
   140016173:	add    BYTE PTR [rcx+0x0],bh
   140016176:	jns    0x140016178
	...
   140016180:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   140016185:	add    BYTE PTR [rax+rax*1+0x2c],ah
   140016189:	add    BYTE PTR [rax],ah
   14001618b:	add    BYTE PTR [rbp+0x0],cl
   14001618e:	rex.WRB add BYTE PTR [r13+0x0],r9b
   140016192:	rex.WRB add BYTE PTR [r8],r12b
   140016195:	add    BYTE PTR [rax+rax*1+0x64],ah
   140016199:	add    BYTE PTR [rax+rax*1],ch
   14001619c:	and    BYTE PTR [rax],al
   14001619e:	jns    0x1400161a0
   1400161a0:	jns    0x1400161a2
   1400161a2:	jns    0x1400161a4
   1400161a4:	jns    0x1400161a6
   1400161a6:	add    BYTE PTR [rax],al
   1400161a8:	rex.W add BYTE PTR [rax+0x0],cl
   1400161ac:	cmp    al,BYTE PTR [rax]
   1400161ae:	ins    DWORD PTR es:[rdi],dx
   1400161af:	add    BYTE PTR [rbp+0x0],ch
   1400161b2:	cmp    al,BYTE PTR [rax]
   1400161b4:	jae    0x1400161b6
   1400161b6:	jae    0x1400161b8
	...
   1400161c0:	add    BYTE PTR gs:[rsi+0x0],ch
   1400161c4:	sub    eax,0x53005500
   1400161c9:	add    BYTE PTR [rax],al
   1400161cb:	add    BYTE PTR [rax],al
   1400161cd:	add    BYTE PTR [rax],al
   1400161cf:	add    al,dh
   1400161d1:	(bad)  
   1400161d2:	add    DWORD PTR [rax+0x1],eax
   1400161d5:	add    BYTE PTR [rax],al
   1400161d7:	add    BYTE PTR [rax],al
   1400161d9:	(bad)  
   1400161db:	rex add DWORD PTR [rax],eax
   1400161de:	add    BYTE PTR [rax],al
   1400161e0:	adc    BYTE PTR [rdx+0x1],ah
   1400161e3:	rex add DWORD PTR [rax],eax
   1400161e6:	add    BYTE PTR [rax],al
   1400161e8:	and    BYTE PTR [rdx+0x1],ah
   1400161eb:	rex add DWORD PTR [rax],eax
   1400161ee:	add    BYTE PTR [rax],al
   1400161f0:	push   0x0
   1400161f2:	(bad)  
   1400161f3:	add    BYTE PTR [rip+0x50004a00],ch        # 0x19001abf9
   1400161f9:	add    BYTE PTR [rax],al
   1400161fb:	add    BYTE PTR [rax],al
   1400161fd:	add    BYTE PTR [rax],al
   1400161ff:	add    BYTE PTR [rdx+0x0],bh
   140016202:	push   0x43002d00
   140016207:	add    BYTE PTR [rsi+0x0],cl
   14001620a:	add    BYTE PTR [rax],al
   14001620c:	add    BYTE PTR [rax],al
   14001620e:	add    BYTE PTR [rax],al
   140016210:	imul   eax,DWORD PTR [rax],0x6f
   140016213:	add    BYTE PTR [rip+0x52004b00],ch        # 0x19201ad19
   140016219:	add    BYTE PTR [rax],al
   14001621b:	add    BYTE PTR [rax],al
   14001621d:	add    BYTE PTR [rax],al
   14001621f:	add    BYTE PTR [rdx+0x0],bh
   140016222:	push   0x54002d00
   140016227:	add    BYTE PTR [rdi+0x0],dl
	...
   14001632e:	add    BYTE PTR [rax],al
   140016330:	and    BYTE PTR [rax],al
   140016332:	and    BYTE PTR [rax],al
   140016334:	and    BYTE PTR [rax],al
   140016336:	and    BYTE PTR [rax],al
   140016338:	and    BYTE PTR [rax],al
   14001633a:	and    BYTE PTR [rax],al
   14001633c:	and    BYTE PTR [rax],al
   14001633e:	and    BYTE PTR [rax],al
   140016340:	and    BYTE PTR [rax],al
   140016342:	sub    BYTE PTR [rax],al
   140016344:	sub    BYTE PTR [rax],al
   140016346:	sub    BYTE PTR [rax],al
   140016348:	sub    BYTE PTR [rax],al
   14001634a:	sub    BYTE PTR [rax],al
   14001634c:	and    BYTE PTR [rax],al
   14001634e:	and    BYTE PTR [rax],al
   140016350:	and    BYTE PTR [rax],al
   140016352:	and    BYTE PTR [rax],al
   140016354:	and    BYTE PTR [rax],al
   140016356:	and    BYTE PTR [rax],al
   140016358:	and    BYTE PTR [rax],al
   14001635a:	and    BYTE PTR [rax],al
   14001635c:	and    BYTE PTR [rax],al
   14001635e:	and    BYTE PTR [rax],al
   140016360:	and    BYTE PTR [rax],al
   140016362:	and    BYTE PTR [rax],al
   140016364:	and    BYTE PTR [rax],al
   140016366:	and    BYTE PTR [rax],al
   140016368:	and    BYTE PTR [rax],al
   14001636a:	and    BYTE PTR [rax],al
   14001636c:	and    BYTE PTR [rax],al
   14001636e:	and    BYTE PTR [rax],al
   140016370:	rex.W add BYTE PTR [rax],dl
   140016373:	add    BYTE PTR [rax],dl
   140016375:	add    BYTE PTR [rax],dl
   140016377:	add    BYTE PTR [rax],dl
   140016379:	add    BYTE PTR [rax],dl
   14001637b:	add    BYTE PTR [rax],dl
   14001637d:	add    BYTE PTR [rax],dl
   14001637f:	add    BYTE PTR [rax],dl
   140016381:	add    BYTE PTR [rax],dl
   140016383:	add    BYTE PTR [rax],dl
   140016385:	add    BYTE PTR [rax],dl
   140016387:	add    BYTE PTR [rax],dl
   140016389:	add    BYTE PTR [rax],dl
   14001638b:	add    BYTE PTR [rax],dl
   14001638d:	add    BYTE PTR [rax],dl
   14001638f:	add    BYTE PTR [rax+rax*1+0x840084],al
   140016396:	test   BYTE PTR [rax],al
   140016398:	test   BYTE PTR [rax],al
   14001639a:	test   BYTE PTR [rax],al
   14001639c:	test   BYTE PTR [rax],al
   14001639e:	test   BYTE PTR [rax],al
   1400163a0:	test   BYTE PTR [rax],al
   1400163a2:	test   BYTE PTR [rax],al
   1400163a4:	adc    BYTE PTR [rax],al
   1400163a6:	adc    BYTE PTR [rax],al
   1400163a8:	adc    BYTE PTR [rax],al
   1400163aa:	adc    BYTE PTR [rax],al
   1400163ac:	adc    BYTE PTR [rax],al
   1400163ae:	adc    BYTE PTR [rax],al
   1400163b0:	adc    BYTE PTR [rax],al
   1400163b2:	add    DWORD PTR [rax],0x810081
   1400163b8:	add    DWORD PTR [rax],0x810081
   1400163be:	add    DWORD PTR [rax],eax
   1400163c0:	add    DWORD PTR [rax],eax
   1400163c2:	add    DWORD PTR [rax],eax
   1400163c4:	add    DWORD PTR [rax],eax
   1400163c6:	add    DWORD PTR [rax],eax
   1400163c8:	add    DWORD PTR [rax],eax
   1400163ca:	add    DWORD PTR [rax],eax
   1400163cc:	add    DWORD PTR [rax],eax
   1400163ce:	add    DWORD PTR [rax],eax
   1400163d0:	add    DWORD PTR [rax],eax
   1400163d2:	add    DWORD PTR [rax],eax
   1400163d4:	add    DWORD PTR [rax],eax
   1400163d6:	add    DWORD PTR [rax],eax
   1400163d8:	add    DWORD PTR [rax],eax
   1400163da:	add    DWORD PTR [rax],eax
   1400163dc:	add    DWORD PTR [rax],eax
   1400163de:	add    DWORD PTR [rax],eax
   1400163e0:	add    DWORD PTR [rax],eax
   1400163e2:	add    DWORD PTR [rax],eax
   1400163e4:	add    DWORD PTR [rax],eax
   1400163e6:	adc    BYTE PTR [rax],al
   1400163e8:	adc    BYTE PTR [rax],al
   1400163ea:	adc    BYTE PTR [rax],al
   1400163ec:	adc    BYTE PTR [rax],al
   1400163ee:	adc    BYTE PTR [rax],al
   1400163f0:	adc    BYTE PTR [rax],al
   1400163f2:	(bad)  
   1400163f3:	add    BYTE PTR [rdx-0x7dff7e00],al
   1400163f9:	add    BYTE PTR [rdx+0x2008200],al
   1400163ff:	add    BYTE PTR [rdx],al
   140016401:	add    BYTE PTR [rdx],al
   140016403:	add    BYTE PTR [rdx],al
   140016405:	add    BYTE PTR [rdx],al
   140016407:	add    BYTE PTR [rdx],al
   140016409:	add    BYTE PTR [rdx],al
   14001640b:	add    BYTE PTR [rdx],al
   14001640d:	add    BYTE PTR [rdx],al
   14001640f:	add    BYTE PTR [rdx],al
   140016411:	add    BYTE PTR [rdx],al
   140016413:	add    BYTE PTR [rdx],al
   140016415:	add    BYTE PTR [rdx],al
   140016417:	add    BYTE PTR [rdx],al
   140016419:	add    BYTE PTR [rdx],al
   14001641b:	add    BYTE PTR [rdx],al
   14001641d:	add    BYTE PTR [rdx],al
   14001641f:	add    BYTE PTR [rdx],al
   140016421:	add    BYTE PTR [rdx],al
   140016423:	add    BYTE PTR [rdx],al
   140016425:	add    BYTE PTR [rax],dl
   140016427:	add    BYTE PTR [rax],dl
   140016429:	add    BYTE PTR [rax],dl
   14001642b:	add    BYTE PTR [rax],dl
   14001642d:	add    BYTE PTR [rax],ah
	...
   14001652f:	add    BYTE PTR [rax-0x7b7c7d7f],al
   140016535:	test   DWORD PTR [rsi-0x75767779],eax
   14001653b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140016542:	xchg   edx,eax
   140016543:	xchg   ebx,eax
   140016544:	xchg   esp,eax
   140016545:	xchg   ebp,eax
   140016546:	xchg   esi,eax
   140016547:	xchg   edi,eax
   140016548:	cwde   
   140016549:	cdq    
   14001654a:	(bad)  
   14001654b:	fwait
   14001654c:	pushf  
   14001654d:	popf   
   14001654e:	sahf   
   14001654f:	lahf   
   140016550:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140016559:	test   eax,0xadacabaa
   14001655e:	scas   al,BYTE PTR es:[rdi]
   14001655f:	scas   eax,DWORD PTR es:[rdi]
   140016560:	mov    al,0xb1
   140016562:	mov    dl,0xb3
   140016564:	mov    ah,0xb5
   140016566:	mov    dh,0xb7
   140016568:	mov    eax,0xbcbbbab9
   14001656d:	mov    ebp,0xc1c0bfbe
   140016572:	ret    0xc4c3
   140016575:	(bad)
   140016578:	enter  0xcac9,0xcb
   14001657c:	int3   
   14001657d:	int    0xce
   14001657f:	iret   
   140016580:	rcl    cl,1
   140016582:	rcl    bl,cl
   140016584:	(bad)  
   140016585:	(bad)  
   140016586:	(bad)  
   140016587:	xlat   BYTE PTR ds:[rbx]
   140016588:	fcomp  st(1)
   14001658a:	fcmovu st,st(3)
   14001658c:	(bad)  
   14001658e:	(bad)  
   140016590:	loopne 0x140016573
   140016592:	loop   0x140016577
   140016594:	in     al,0xe5
   140016596:	out    0xe7,al
   140016598:	call   0x12ced5086
   14001659d:	in     eax,dx
   14001659e:	out    dx,al
   14001659f:	out    dx,eax
   1400165a0:	lock icebp 
   1400165a2:	repnz repz hlt 
   1400165a5:	cmc    
   1400165a6:	div    bh
   1400165a8:	clc    
   1400165a9:	stc    
   1400165aa:	cli    
   1400165ab:	sti    
   1400165ac:	cld    
   1400165ad:	std    
   1400165ae:	(bad)  
   1400165af:	inc    DWORD PTR [rax]
   1400165b1:	add    DWORD PTR [rdx],eax
   1400165b3:	add    eax,DWORD PTR [rax*1+0x9080706]
   1400165ba:	or     cl,BYTE PTR [rbx]
   1400165bc:	or     al,0xd
   1400165be:	(bad)  
   1400165bf:	movups xmm2,XMMWORD PTR [rcx]
   1400165c2:	adc    dl,BYTE PTR [rbx]
   1400165c4:	adc    al,0x15
   1400165c6:	(bad)  
   1400165c7:	(bad)  
   1400165c8:	sbb    BYTE PTR [rcx],bl
   1400165ca:	sbb    bl,BYTE PTR [rbx]
   1400165cc:	sbb    al,0x1d
   1400165ce:	(bad)  
   1400165cf:	(bad)  
   1400165d0:	and    BYTE PTR [rcx],ah
   1400165d2:	and    ah,BYTE PTR [rbx]
   1400165d4:	and    al,0x25
   1400165d6:	es (bad) 
   1400165d8:	sub    BYTE PTR [rcx],ch
   1400165da:	sub    ch,BYTE PTR [rbx]
   1400165dc:	sub    al,0x2d
   1400165de:	cs (bad) 
   1400165e0:	xor    BYTE PTR [rcx],dh
   1400165e2:	xor    dh,BYTE PTR [rbx]
   1400165e4:	xor    al,0x35
   1400165e6:	ss (bad) 
   1400165e8:	cmp    BYTE PTR [rcx],bh
   1400165ea:	cmp    bh,BYTE PTR [rbx]
   1400165ec:	cmp    al,0x3d
   1400165ee:	ds (bad) 
   1400165f0:	rex (bad) 
   1400165f2:	(bad)
   1400165f7:	addr32 push 0x6c6b6a69
   1400165fd:	ins    DWORD PTR es:[rdi],dx
   1400165fe:	outs   dx,BYTE PTR ds:[rsi]
   1400165ff:	outs   dx,DWORD PTR ds:[rsi]
   140016600:	jo     0x140016673
   140016602:	jb     0x140016677
   140016604:	je     0x14001667b
   140016606:	jbe    0x14001667f
   140016608:	js     0x140016683
   14001660a:	jp     0x140016667
   14001660c:	pop    rsp
   14001660d:	pop    rbp
   14001660e:	pop    rsi
   14001660f:	pop    rdi
   140016610:	(bad)  
   140016611:	(bad)  
   140016612:	(bad)
   140016617:	addr32 push 0x6c6b6a69
   14001661d:	ins    DWORD PTR es:[rdi],dx
   14001661e:	outs   dx,BYTE PTR ds:[rsi]
   14001661f:	outs   dx,DWORD PTR ds:[rsi]
   140016620:	jo     0x140016693
   140016622:	jb     0x140016697
   140016624:	je     0x14001669b
   140016626:	jbe    0x14001669f
   140016628:	js     0x1400166a3
   14001662a:	jp     0x1400166a7
   14001662c:	jl     0x1400166ab
   14001662e:	jle    0x1400166af
   140016630:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140016637:	xchg   DWORD PTR [rax-0x73747577],ecx
   14001663d:	lea    ecx,[rsi-0x6d6e6f71]
   140016643:	xchg   ebx,eax
   140016644:	xchg   esp,eax
   140016645:	xchg   ebp,eax
   140016646:	xchg   esi,eax
   140016647:	xchg   edi,eax
   140016648:	cwde   
   140016649:	cdq    
   14001664a:	(bad)  
   14001664b:	fwait
   14001664c:	pushf  
   14001664d:	popf   
   14001664e:	sahf   
   14001664f:	lahf   
   140016650:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140016659:	test   eax,0xadacabaa
   14001665e:	scas   al,BYTE PTR es:[rdi]
   14001665f:	scas   eax,DWORD PTR es:[rdi]
   140016660:	mov    al,0xb1
   140016662:	mov    dl,0xb3
   140016664:	mov    ah,0xb5
   140016666:	mov    dh,0xb7
   140016668:	mov    eax,0xbcbbbab9
   14001666d:	mov    ebp,0xc1c0bfbe
   140016672:	ret    0xc4c3
   140016675:	(bad)
   140016678:	enter  0xcac9,0xcb
   14001667c:	int3   
   14001667d:	int    0xce
   14001667f:	iret   
   140016680:	rcl    cl,1
   140016682:	rcl    bl,cl
   140016684:	(bad)  
   140016685:	(bad)  
   140016686:	(bad)  
   140016687:	xlat   BYTE PTR ds:[rbx]
   140016688:	fcomp  st(1)
   14001668a:	fcmovu st,st(3)
   14001668c:	(bad)  
   14001668e:	(bad)  
   140016690:	loopne 0x140016673
   140016692:	loop   0x140016677
   140016694:	in     al,0xe5
   140016696:	out    0xe7,al
   140016698:	call   0x12ced5186
   14001669d:	in     eax,dx
   14001669e:	out    dx,al
   14001669f:	out    dx,eax
   1400166a0:	lock icebp 
   1400166a2:	repnz repz hlt 
   1400166a5:	cmc    
   1400166a6:	div    bh
   1400166a8:	clc    
   1400166a9:	stc    
   1400166aa:	cli    
   1400166ab:	sti    
   1400166ac:	cld    
   1400166ad:	std    
   1400166ae:	(bad)  
   1400166af:	inc    DWORD PTR [rax-0x7b7c7d7f]
   1400166b5:	test   DWORD PTR [rsi-0x75767779],eax
   1400166bb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   1400166c2:	xchg   edx,eax
   1400166c3:	xchg   ebx,eax
   1400166c4:	xchg   esp,eax
   1400166c5:	xchg   ebp,eax
   1400166c6:	xchg   esi,eax
   1400166c7:	xchg   edi,eax
   1400166c8:	cwde   
   1400166c9:	cdq    
   1400166ca:	(bad)  
   1400166cb:	fwait
   1400166cc:	pushf  
   1400166cd:	popf   
   1400166ce:	sahf   
   1400166cf:	lahf   
   1400166d0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400166d9:	test   eax,0xadacabaa
   1400166de:	scas   al,BYTE PTR es:[rdi]
   1400166df:	scas   eax,DWORD PTR es:[rdi]
   1400166e0:	mov    al,0xb1
   1400166e2:	mov    dl,0xb3
   1400166e4:	mov    ah,0xb5
   1400166e6:	mov    dh,0xb7
   1400166e8:	mov    eax,0xbcbbbab9
   1400166ed:	mov    ebp,0xc1c0bfbe
   1400166f2:	ret    0xc4c3
   1400166f5:	(bad)
   1400166f8:	enter  0xcac9,0xcb
   1400166fc:	int3   
   1400166fd:	int    0xce
   1400166ff:	iret   
   140016700:	rcl    cl,1
   140016702:	rcl    bl,cl
   140016704:	(bad)  
   140016705:	(bad)  
   140016706:	(bad)  
   140016707:	xlat   BYTE PTR ds:[rbx]
   140016708:	fcomp  st(1)
   14001670a:	fcmovu st,st(3)
   14001670c:	(bad)  
   14001670e:	(bad)  
   140016710:	loopne 0x1400166f3
   140016712:	loop   0x1400166f7
   140016714:	in     al,0xe5
   140016716:	out    0xe7,al
   140016718:	call   0x12ced5206
   14001671d:	in     eax,dx
   14001671e:	out    dx,al
   14001671f:	out    dx,eax
   140016720:	lock icebp 
   140016722:	repnz repz hlt 
   140016725:	cmc    
   140016726:	div    bh
   140016728:	clc    
   140016729:	stc    
   14001672a:	cli    
   14001672b:	sti    
   14001672c:	cld    
   14001672d:	std    
   14001672e:	(bad)  
   14001672f:	inc    DWORD PTR [rax]
   140016731:	add    DWORD PTR [rdx],eax
   140016733:	add    eax,DWORD PTR [rax*1+0x9080706]
   14001673a:	or     cl,BYTE PTR [rbx]
   14001673c:	or     al,0xd
   14001673e:	(bad)  
   14001673f:	movups xmm2,XMMWORD PTR [rcx]
   140016742:	adc    dl,BYTE PTR [rbx]
   140016744:	adc    al,0x15
   140016746:	(bad)  
   140016747:	(bad)  
   140016748:	sbb    BYTE PTR [rcx],bl
   14001674a:	sbb    bl,BYTE PTR [rbx]
   14001674c:	sbb    al,0x1d
   14001674e:	(bad)  
   14001674f:	(bad)  
   140016750:	and    BYTE PTR [rcx],ah
   140016752:	and    ah,BYTE PTR [rbx]
   140016754:	and    al,0x25
   140016756:	es (bad) 
   140016758:	sub    BYTE PTR [rcx],ch
   14001675a:	sub    ch,BYTE PTR [rbx]
   14001675c:	sub    al,0x2d
   14001675e:	cs (bad) 
   140016760:	xor    BYTE PTR [rcx],dh
   140016762:	xor    dh,BYTE PTR [rbx]
   140016764:	xor    al,0x35
   140016766:	ss (bad) 
   140016768:	cmp    BYTE PTR [rcx],bh
   14001676a:	cmp    bh,BYTE PTR [rbx]
   14001676c:	cmp    al,0x3d
   14001676e:	ds (bad) 
   140016770:	rex
   140016771:	rex.B
   140016772:	rex.X
   140016773:	rex.XB
   140016774:	rex.R
   140016775:	rex.RB
   140016776:	rex.RX
   140016777:	rex.RXB
   140016778:	rex.W
   140016779:	rex.WB
   14001677a:	rex.WX
   14001677b:	rex.WXB
   14001677c:	rex.WR
   14001677d:	rex.WRB
   14001677e:	rex.WRX
   14001677f:	rex.WRXB push r8
   140016781:	push   rcx
   140016782:	push   rdx
   140016783:	push   rbx
   140016784:	push   rsp
   140016785:	push   rbp
   140016786:	push   rsi
   140016787:	push   rdi
   140016788:	pop    rax
   140016789:	pop    rcx
   14001678a:	pop    rdx
   14001678b:	pop    rbx
   14001678c:	pop    rsp
   14001678d:	pop    rbp
   14001678e:	pop    rsi
   14001678f:	pop    rdi
   140016790:	(bad)  
   140016791:	rex.B
   140016792:	rex.X
   140016793:	rex.XB
   140016794:	rex.R
   140016795:	rex.RB
   140016796:	rex.RX
   140016797:	rex.RXB
   140016798:	rex.W
   140016799:	rex.WB
   14001679a:	rex.WX
   14001679b:	rex.WXB
   14001679c:	rex.WR
   14001679d:	rex.WRB
   14001679e:	rex.WRX
   14001679f:	rex.WRXB push r8
   1400167a1:	push   rcx
   1400167a2:	push   rdx
   1400167a3:	push   rbx
   1400167a4:	push   rsp
   1400167a5:	push   rbp
   1400167a6:	push   rsi
   1400167a7:	push   rdi
   1400167a8:	pop    rax
   1400167a9:	pop    rcx
   1400167aa:	pop    rdx
   1400167ab:	jnp    0x140016829
   1400167ad:	jge    0x14001682d
   1400167af:	jg     0x140016731
   1400167b1:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   1400167bb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   1400167c2:	xchg   edx,eax
   1400167c3:	xchg   ebx,eax
   1400167c4:	xchg   esp,eax
   1400167c5:	xchg   ebp,eax
   1400167c6:	xchg   esi,eax
   1400167c7:	xchg   edi,eax
   1400167c8:	cwde   
   1400167c9:	cdq    
   1400167ca:	(bad)  
   1400167cb:	fwait
   1400167cc:	pushf  
   1400167cd:	popf   
   1400167ce:	sahf   
   1400167cf:	lahf   
   1400167d0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400167d9:	test   eax,0xadacabaa
   1400167de:	scas   al,BYTE PTR es:[rdi]
   1400167df:	scas   eax,DWORD PTR es:[rdi]
   1400167e0:	mov    al,0xb1
   1400167e2:	mov    dl,0xb3
   1400167e4:	mov    ah,0xb5
   1400167e6:	mov    dh,0xb7
   1400167e8:	mov    eax,0xbcbbbab9
   1400167ed:	mov    ebp,0xc1c0bfbe
   1400167f2:	ret    0xc4c3
   1400167f5:	(bad)
   1400167f8:	enter  0xcac9,0xcb
   1400167fc:	int3   
   1400167fd:	int    0xce
   1400167ff:	iret   
   140016800:	rcl    cl,1
   140016802:	rcl    bl,cl
   140016804:	(bad)  
   140016805:	(bad)  
   140016806:	(bad)  
   140016807:	xlat   BYTE PTR ds:[rbx]
   140016808:	fcomp  st(1)
   14001680a:	fcmovu st,st(3)
   14001680c:	(bad)  
   14001680e:	(bad)  
   140016810:	loopne 0x1400167f3
   140016812:	loop   0x1400167f7
   140016814:	in     al,0xe5
   140016816:	out    0xe7,al
   140016818:	call   0x12ced5306
   14001681d:	in     eax,dx
   14001681e:	out    dx,al
   14001681f:	out    dx,eax
   140016820:	lock icebp 
   140016822:	repnz repz hlt 
   140016825:	cmc    
   140016826:	div    bh
   140016828:	clc    
   140016829:	stc    
   14001682a:	cli    
   14001682b:	sti    
   14001682c:	cld    
   14001682d:	std    
   14001682e:	(bad)  
   14001682f:	push   QWORD PTR [rbp+0x0]
   140016832:	imul   eax,DWORD PTR [rax],0x0
	...
   14001683d:	add    BYTE PTR [rax],al
   14001683f:	add    BYTE PTR [rcx],al
   140016841:	add    BYTE PTR [rax],al
   140016843:	add    BYTE PTR [rax],al
   140016845:	add    BYTE PTR [rax],al
   140016847:	add    BYTE PTR [rax+0x1400176],al
   14001684d:	add    BYTE PTR [rax],al
   14001684f:	add    BYTE PTR [rdx],al
   140016851:	add    BYTE PTR [rax],al
   140016853:	add    BYTE PTR [rax],al
   140016855:	add    BYTE PTR [rax],al
   140016857:	add    BYTE PTR [rax+0x1400176],cl
   14001685d:	add    BYTE PTR [rax],al
   14001685f:	add    BYTE PTR [rbx],al
   140016861:	add    BYTE PTR [rax],al
   140016863:	add    BYTE PTR [rax],al
   140016865:	add    BYTE PTR [rax],al
   140016867:	add    BYTE PTR [rax+0x1400176],dl
   14001686d:	add    BYTE PTR [rax],al
   14001686f:	add    BYTE PTR [rax+rax*1],al
   140016872:	add    BYTE PTR [rax],al
   140016874:	add    BYTE PTR [rax],al
   140016876:	add    BYTE PTR [rax],al
   140016878:	cwde   
   140016879:	jbe    0x14001687c
   14001687b:	rex add DWORD PTR [rax],eax
   14001687e:	add    BYTE PTR [rax],al
   140016880:	add    eax,0x0
   140016885:	add    BYTE PTR [rax],al
   140016887:	add    BYTE PTR [rax+0x1400176],ch
   14001688d:	add    BYTE PTR [rax],al
   14001688f:	add    BYTE PTR [rsi],al
   140016891:	add    BYTE PTR [rax],al
   140016893:	add    BYTE PTR [rax],al
   140016895:	add    BYTE PTR [rax],al
   140016897:	add    BYTE PTR [rax+0x1400176],dh
   14001689d:	add    BYTE PTR [rax],al
   14001689f:	add    BYTE PTR [rdi],al
   1400168a1:	add    BYTE PTR [rax],al
   1400168a3:	add    BYTE PTR [rax],al
   1400168a5:	add    BYTE PTR [rax],al
   1400168a7:	add    BYTE PTR [rax+0x1400176],bh
   1400168ad:	add    BYTE PTR [rax],al
   1400168af:	add    BYTE PTR [rax],cl
   1400168b1:	add    BYTE PTR [rax],al
   1400168b3:	add    BYTE PTR [rax],al
   1400168b5:	add    BYTE PTR [rax],al
   1400168b7:	add    al,al
   1400168b9:	jbe    0x1400168bc
   1400168bb:	rex add DWORD PTR [rax],eax
   1400168be:	add    BYTE PTR [rax],al
   1400168c0:	or     DWORD PTR [rax],eax
   1400168c2:	add    BYTE PTR [rax],al
   1400168c4:	add    BYTE PTR [rax],al
   1400168c6:	add    BYTE PTR [rax],al
   1400168c8:	enter  0x176,0x40
   1400168cc:	add    DWORD PTR [rax],eax
   1400168ce:	add    BYTE PTR [rax],al
   1400168d0:	or     al,BYTE PTR [rax]
   1400168d2:	add    BYTE PTR [rax],al
   1400168d4:	add    BYTE PTR [rax],al
   1400168d6:	add    BYTE PTR [rax],al
   1400168d8:	shl    BYTE PTR [rsi+0x1],1
   1400168db:	rex add DWORD PTR [rax],eax
   1400168de:	add    BYTE PTR [rax],al
   1400168e0:	or     eax,DWORD PTR [rax]
   1400168e2:	add    BYTE PTR [rax],al
   1400168e4:	add    BYTE PTR [rax],al
   1400168e6:	add    BYTE PTR [rax],al
   1400168e8:	fdiv   DWORD PTR [rsi+0x1]
   1400168eb:	rex add DWORD PTR [rax],eax
   1400168ee:	add    BYTE PTR [rax],al
   1400168f0:	or     al,0x0
   1400168f2:	add    BYTE PTR [rax],al
   1400168f4:	add    BYTE PTR [rax],al
   1400168f6:	add    BYTE PTR [rax],al
   1400168f8:	loopne 0x140016970
   1400168fa:	add    DWORD PTR [rax+0x1],eax
   1400168fd:	add    BYTE PTR [rax],al
   1400168ff:	add    BYTE PTR [rip+0x0],cl        # 0x140016905
   140016905:	add    BYTE PTR [rax],al
   140016907:	add    al,ch
   140016909:	jbe    0x14001690c
   14001690b:	rex add DWORD PTR [rax],eax
   14001690e:	add    BYTE PTR [rax],al
   140016910:	(bad)  
   140016911:	add    BYTE PTR [rax],al
   140016913:	add    BYTE PTR [rax],al
   140016915:	add    BYTE PTR [rax],al
   140016917:	add    al,dh
   140016919:	jbe    0x14001691c
   14001691b:	rex add DWORD PTR [rax],eax
   14001691e:	add    BYTE PTR [rax],al
   140016920:	sldt   WORD PTR [rax]
   140016923:	add    BYTE PTR [rax],al
   140016925:	add    BYTE PTR [rax],al
   140016927:	add    al,bh
   140016929:	jbe    0x14001692c
   14001692b:	rex add DWORD PTR [rax],eax
   14001692e:	add    BYTE PTR [rax],al
   140016930:	adc    BYTE PTR [rax],al
   140016932:	add    BYTE PTR [rax],al
   140016934:	add    BYTE PTR [rax],al
   140016936:	add    BYTE PTR [rax],al
   140016938:	add    BYTE PTR [rdi+0x1],dh
   14001693b:	rex add DWORD PTR [rax],eax
   14001693e:	add    BYTE PTR [rax],al
   140016940:	adc    DWORD PTR [rax],eax
   140016942:	add    BYTE PTR [rax],al
   140016944:	add    BYTE PTR [rax],al
   140016946:	add    BYTE PTR [rax],al
   140016948:	or     BYTE PTR [rdi+0x1],dh
   14001694b:	rex add DWORD PTR [rax],eax
   14001694e:	add    BYTE PTR [rax],al
   140016950:	adc    al,BYTE PTR [rax]
   140016952:	add    BYTE PTR [rax],al
   140016954:	add    BYTE PTR [rax],al
   140016956:	add    BYTE PTR [rax],al
   140016958:	adc    BYTE PTR [rdi+0x1],dh
   14001695b:	rex add DWORD PTR [rax],eax
   14001695e:	add    BYTE PTR [rax],al
   140016960:	adc    eax,DWORD PTR [rax]
   140016962:	add    BYTE PTR [rax],al
   140016964:	add    BYTE PTR [rax],al
   140016966:	add    BYTE PTR [rax],al
   140016968:	sbb    BYTE PTR [rdi+0x1],dh
   14001696b:	rex add DWORD PTR [rax],eax
   14001696e:	add    BYTE PTR [rax],al
   140016970:	adc    al,0x0
   140016972:	add    BYTE PTR [rax],al
   140016974:	add    BYTE PTR [rax],al
   140016976:	add    BYTE PTR [rax],al
   140016978:	and    BYTE PTR [rdi+0x1],dh
   14001697b:	rex add DWORD PTR [rax],eax
   14001697e:	add    BYTE PTR [rax],al
   140016980:	adc    eax,0x0
   140016985:	add    BYTE PTR [rax],al
   140016987:	add    BYTE PTR [rax],ch
   140016989:	ja     0x14001698c
   14001698b:	rex add DWORD PTR [rax],eax
   14001698e:	add    BYTE PTR [rax],al
   140016990:	(bad)  
   140016991:	add    BYTE PTR [rax],al
   140016993:	add    BYTE PTR [rax],al
   140016995:	add    BYTE PTR [rax],al
   140016997:	add    BYTE PTR [rax],dh
   140016999:	ja     0x14001699c
   14001699b:	rex add DWORD PTR [rax],eax
   14001699e:	add    BYTE PTR [rax],al
   1400169a0:	sbb    BYTE PTR [rax],al
   1400169a2:	add    BYTE PTR [rax],al
   1400169a4:	add    BYTE PTR [rax],al
   1400169a6:	add    BYTE PTR [rax],al
   1400169a8:	cmp    BYTE PTR [rdi+0x1],dh
   1400169ab:	rex add DWORD PTR [rax],eax
   1400169ae:	add    BYTE PTR [rax],al
   1400169b0:	sbb    DWORD PTR [rax],eax
   1400169b2:	add    BYTE PTR [rax],al
   1400169b4:	add    BYTE PTR [rax],al
   1400169b6:	add    BYTE PTR [rax],al
   1400169b8:	rex ja 0x1400169bc
   1400169bb:	rex add DWORD PTR [rax],eax
   1400169be:	add    BYTE PTR [rax],al
   1400169c0:	sbb    al,BYTE PTR [rax]
   1400169c2:	add    BYTE PTR [rax],al
   1400169c4:	add    BYTE PTR [rax],al
   1400169c6:	add    BYTE PTR [rax],al
   1400169c8:	rex.W ja 0x1400169cc
   1400169cb:	rex add DWORD PTR [rax],eax
   1400169ce:	add    BYTE PTR [rax],al
   1400169d0:	sbb    eax,DWORD PTR [rax]
   1400169d2:	add    BYTE PTR [rax],al
   1400169d4:	add    BYTE PTR [rax],al
   1400169d6:	add    BYTE PTR [rax],al
   1400169d8:	push   rax
   1400169d9:	ja     0x1400169dc
   1400169db:	rex add DWORD PTR [rax],eax
   1400169de:	add    BYTE PTR [rax],al
   1400169e0:	sbb    al,0x0
   1400169e2:	add    BYTE PTR [rax],al
   1400169e4:	add    BYTE PTR [rax],al
   1400169e6:	add    BYTE PTR [rax],al
   1400169e8:	pop    rax
   1400169e9:	ja     0x1400169ec
   1400169eb:	rex add DWORD PTR [rax],eax
   1400169ee:	add    BYTE PTR [rax],al
   1400169f0:	sbb    eax,0x0
   1400169f5:	add    BYTE PTR [rax],al
   1400169f7:	add    BYTE PTR [rax+0x77],ah
   1400169fa:	add    DWORD PTR [rax+0x1],eax
   1400169fd:	add    BYTE PTR [rax],al
   1400169ff:	add    BYTE PTR [rsi],bl
   140016a01:	add    BYTE PTR [rax],al
   140016a03:	add    BYTE PTR [rax],al
   140016a05:	add    BYTE PTR [rax],al
   140016a07:	add    BYTE PTR [rax+0x77],ch
   140016a0a:	add    DWORD PTR [rax+0x1],eax
   140016a0d:	add    BYTE PTR [rax],al
   140016a0f:	add    BYTE PTR [rdi],bl
   140016a11:	add    BYTE PTR [rax],al
   140016a13:	add    BYTE PTR [rax],al
   140016a15:	add    BYTE PTR [rax],al
   140016a17:	add    BYTE PTR [rax+0x77],dh
   140016a1a:	add    DWORD PTR [rax+0x1],eax
   140016a1d:	add    BYTE PTR [rax],al
   140016a1f:	add    BYTE PTR [rax],ah
   140016a21:	add    BYTE PTR [rax],al
   140016a23:	add    BYTE PTR [rax],al
   140016a25:	add    BYTE PTR [rax],al
   140016a27:	add    BYTE PTR [rax+0x77],bh
   140016a2a:	add    DWORD PTR [rax+0x1],eax
   140016a2d:	add    BYTE PTR [rax],al
   140016a2f:	add    BYTE PTR [rcx],ah
   140016a31:	add    BYTE PTR [rax],al
   140016a33:	add    BYTE PTR [rax],al
   140016a35:	add    BYTE PTR [rax],al
   140016a37:	add    BYTE PTR [rax+0x1400177],al
   140016a3d:	add    BYTE PTR [rax],al
   140016a3f:	add    BYTE PTR [rdx],ah
   140016a41:	add    BYTE PTR [rax],al
   140016a43:	add    BYTE PTR [rax],al
   140016a45:	add    BYTE PTR [rax],al
   140016a47:	add    BYTE PTR [rax],dh
   140016a49:	push   0x14001
   140016a4e:	add    BYTE PTR [rax],al
   140016a50:	and    eax,DWORD PTR [rax]
   140016a52:	add    BYTE PTR [rax],al
   140016a54:	add    BYTE PTR [rax],al
   140016a56:	add    BYTE PTR [rax],al
   140016a58:	mov    BYTE PTR [rdi+0x1],dh
   140016a5b:	rex add DWORD PTR [rax],eax
   140016a5e:	add    BYTE PTR [rax],al
   140016a60:	and    al,0x0
   140016a62:	add    BYTE PTR [rax],al
   140016a64:	add    BYTE PTR [rax],al
   140016a66:	add    BYTE PTR [rax],al
   140016a68:	nop
   140016a69:	ja     0x140016a6c
   140016a6b:	rex add DWORD PTR [rax],eax
   140016a6e:	add    BYTE PTR [rax],al
   140016a70:	and    eax,0x0
   140016a75:	add    BYTE PTR [rax],al
   140016a77:	add    BYTE PTR [rax+0x1400177],bl
   140016a7d:	add    BYTE PTR [rax],al
   140016a7f:	add    BYTE PTR [rsi],ah
   140016a81:	add    BYTE PTR [rax],al
   140016a83:	add    BYTE PTR [rax],al
   140016a85:	add    BYTE PTR [rax],al
   140016a87:	add    BYTE PTR [rax+0x1400177],ah
   140016a8d:	add    BYTE PTR [rax],al
   140016a8f:	add    BYTE PTR [rdi],ah
   140016a91:	add    BYTE PTR [rax],al
   140016a93:	add    BYTE PTR [rax],al
   140016a95:	add    BYTE PTR [rax],al
   140016a97:	add    BYTE PTR [rax+0x1400177],ch
   140016a9d:	add    BYTE PTR [rax],al
   140016a9f:	add    BYTE PTR [rcx],ch
   140016aa1:	add    BYTE PTR [rax],al
   140016aa3:	add    BYTE PTR [rax],al
   140016aa5:	add    BYTE PTR [rax],al
   140016aa7:	add    BYTE PTR [rax+0x1400177],dh
   140016aad:	add    BYTE PTR [rax],al
   140016aaf:	add    BYTE PTR [rdx],ch
   140016ab1:	add    BYTE PTR [rax],al
   140016ab3:	add    BYTE PTR [rax],al
   140016ab5:	add    BYTE PTR [rax],al
   140016ab7:	add    BYTE PTR [rax+0x1400177],bh
   140016abd:	add    BYTE PTR [rax],al
   140016abf:	add    BYTE PTR [rbx],ch
   140016ac1:	add    BYTE PTR [rax],al
   140016ac3:	add    BYTE PTR [rax],al
   140016ac5:	add    BYTE PTR [rax],al
   140016ac7:	add    al,al
   140016ac9:	ja     0x140016acc
   140016acb:	rex add DWORD PTR [rax],eax
   140016ace:	add    BYTE PTR [rax],al
   140016ad0:	sub    al,0x0
   140016ad2:	add    BYTE PTR [rax],al
   140016ad4:	add    BYTE PTR [rax],al
   140016ad6:	add    BYTE PTR [rax],al
   140016ad8:	enter  0x177,0x40
   140016adc:	add    DWORD PTR [rax],eax
   140016ade:	add    BYTE PTR [rax],al
   140016ae0:	sub    eax,0x0
   140016ae5:	add    BYTE PTR [rax],al
   140016ae7:	add    al,dl
   140016ae9:	ja     0x140016aec
   140016aeb:	rex add DWORD PTR [rax],eax
   140016aee:	add    BYTE PTR [rax],al
   140016af0:	(bad)  
   140016af1:	add    BYTE PTR [rax],al
   140016af3:	add    BYTE PTR [rax],al
   140016af5:	add    BYTE PTR [rax],al
   140016af7:	add    al,bl
   140016af9:	ja     0x140016afc
   140016afb:	rex add DWORD PTR [rax],eax
   140016afe:	add    BYTE PTR [rax],al
   140016b00:	add    BYTE PTR ss:[rax],al
   140016b03:	add    BYTE PTR [rax],al
   140016b05:	add    BYTE PTR [rax],al
   140016b07:	add    al,ah
   140016b09:	ja     0x140016b0c
   140016b0b:	rex add DWORD PTR [rax],eax
   140016b0e:	add    BYTE PTR [rax],al
   140016b10:	(bad)  
   140016b11:	add    BYTE PTR [rax],al
   140016b13:	add    BYTE PTR [rax],al
   140016b15:	add    BYTE PTR [rax],al
   140016b17:	add    al,ch
   140016b19:	ja     0x140016b1c
   140016b1b:	rex add DWORD PTR [rax],eax
   140016b1e:	add    BYTE PTR [rax],al
   140016b20:	cmp    BYTE PTR [rax],al
   140016b22:	add    BYTE PTR [rax],al
   140016b24:	add    BYTE PTR [rax],al
   140016b26:	add    BYTE PTR [rax],al
   140016b28:	lock ja 0x140016b2c
   140016b2b:	rex add DWORD PTR [rax],eax
   140016b2e:	add    BYTE PTR [rax],al
   140016b30:	cmp    DWORD PTR [rax],eax
   140016b32:	add    BYTE PTR [rax],al
   140016b34:	add    BYTE PTR [rax],al
   140016b36:	add    BYTE PTR [rax],al
   140016b38:	clc    
   140016b39:	ja     0x140016b3c
   140016b3b:	rex add DWORD PTR [rax],eax
   140016b3e:	add    BYTE PTR [rax],al
   140016b40:	add    BYTE PTR ds:[rax],al
   140016b43:	add    BYTE PTR [rax],al
   140016b45:	add    BYTE PTR [rax],al
   140016b47:	add    BYTE PTR [rax],al
   140016b49:	js     0x140016b4c
   140016b4b:	rex add DWORD PTR [rax],eax
   140016b4e:	add    BYTE PTR [rax],al
   140016b50:	(bad)  
   140016b51:	add    BYTE PTR [rax],al
   140016b53:	add    BYTE PTR [rax],al
   140016b55:	add    BYTE PTR [rax],al
   140016b57:	add    BYTE PTR [rax],cl
   140016b59:	js     0x140016b5c
   140016b5b:	rex add DWORD PTR [rax],eax
   140016b5e:	add    BYTE PTR [rax],al
   140016b60:	add    BYTE PTR [rax],al
   140016b63:	add    BYTE PTR [rax],al
   140016b65:	add    BYTE PTR [rax],al
   140016b67:	add    BYTE PTR [rax],dl
   140016b69:	js     0x140016b6c
   140016b6b:	rex add DWORD PTR [rax],eax
   140016b6e:	add    BYTE PTR [rax],al
   140016b70:	add    BYTE PTR [r8],al
   140016b73:	add    BYTE PTR [rax],al
   140016b75:	add    BYTE PTR [rax],al
   140016b77:	add    BYTE PTR [rax],bl
   140016b79:	js     0x140016b7c
   140016b7b:	rex add DWORD PTR [rax],eax
   140016b7e:	add    BYTE PTR [rax],al
   140016b80:	rex.XB add BYTE PTR [r8],al
   140016b83:	add    BYTE PTR [rax],al
   140016b85:	add    BYTE PTR [rax],al
   140016b87:	add    BYTE PTR [rax],ah
   140016b89:	js     0x140016b8c
   140016b8b:	rex add DWORD PTR [rax],eax
   140016b8e:	add    BYTE PTR [rax],al
   140016b90:	add    BYTE PTR [rax],r8b
   140016b93:	add    BYTE PTR [rax],al
   140016b95:	add    BYTE PTR [rax],al
   140016b97:	add    BYTE PTR [rax],ch
   140016b99:	js     0x140016b9c
   140016b9b:	rex add DWORD PTR [rax],eax
   140016b9e:	add    BYTE PTR [rax],al
   140016ba0:	rex.RX add BYTE PTR [rax],r8b
   140016ba3:	add    BYTE PTR [rax],al
   140016ba5:	add    BYTE PTR [rax],al
   140016ba7:	add    BYTE PTR [rax],dh
   140016ba9:	js     0x140016bac
   140016bab:	rex add DWORD PTR [rax],eax
   140016bae:	add    BYTE PTR [rax],al
   140016bb0:	rex.RXB add BYTE PTR [r8],r8b
   140016bb3:	add    BYTE PTR [rax],al
   140016bb5:	add    BYTE PTR [rax],al
   140016bb7:	add    BYTE PTR [rax],bh
   140016bb9:	js     0x140016bbc
   140016bbb:	rex add DWORD PTR [rax],eax
   140016bbe:	add    BYTE PTR [rax],al
   140016bc0:	rex.WB add BYTE PTR [r8],al
   140016bc3:	add    BYTE PTR [rax],al
   140016bc5:	add    BYTE PTR [rax],al
   140016bc7:	add    BYTE PTR [rax+0x78],al
   140016bca:	add    DWORD PTR [rax+0x1],eax
   140016bcd:	add    BYTE PTR [rax],al
   140016bcf:	add    BYTE PTR [rdx+0x0],cl
   140016bd2:	add    BYTE PTR [rax],al
   140016bd4:	add    BYTE PTR [rax],al
   140016bd6:	add    BYTE PTR [rax],al
   140016bd8:	rex.W js 0x140016bdc
   140016bdb:	rex add DWORD PTR [rax],eax
   140016bde:	add    BYTE PTR [rax],al
   140016be0:	rex.WXB add BYTE PTR [r8],al
   140016be3:	add    BYTE PTR [rax],al
   140016be5:	add    BYTE PTR [rax],al
   140016be7:	add    BYTE PTR [rax+0x78],dl
   140016bea:	add    DWORD PTR [rax+0x1],eax
   140016bed:	add    BYTE PTR [rax],al
   140016bef:	add    BYTE PTR [rsi+0x0],cl
   140016bf2:	add    BYTE PTR [rax],al
   140016bf4:	add    BYTE PTR [rax],al
   140016bf6:	add    BYTE PTR [rax],al
   140016bf8:	pop    rax
   140016bf9:	js     0x140016bfc
   140016bfb:	rex add DWORD PTR [rax],eax
   140016bfe:	add    BYTE PTR [rax],al
   140016c00:	rex.WRXB add BYTE PTR [r8],r8b
   140016c03:	add    BYTE PTR [rax],al
   140016c05:	add    BYTE PTR [rax],al
   140016c07:	add    BYTE PTR [rax+0x78],ah
   140016c0a:	add    DWORD PTR [rax+0x1],eax
   140016c0d:	add    BYTE PTR [rax],al
   140016c0f:	add    BYTE PTR [rax+0x0],dl
   140016c12:	add    BYTE PTR [rax],al
   140016c14:	add    BYTE PTR [rax],al
   140016c16:	add    BYTE PTR [rax],al
   140016c18:	push   0x1400178
   140016c1d:	add    BYTE PTR [rax],al
   140016c1f:	add    BYTE PTR [rsi+0x0],dl
   140016c22:	add    BYTE PTR [rax],al
   140016c24:	add    BYTE PTR [rax],al
   140016c26:	add    BYTE PTR [rax],al
   140016c28:	jo     0x140016ca2
   140016c2a:	add    DWORD PTR [rax+0x1],eax
   140016c2d:	add    BYTE PTR [rax],al
   140016c2f:	add    BYTE PTR [rdi+0x0],dl
   140016c32:	add    BYTE PTR [rax],al
   140016c34:	add    BYTE PTR [rax],al
   140016c36:	add    BYTE PTR [rax],al
   140016c38:	js     0x140016cb2
   140016c3a:	add    DWORD PTR [rax+0x1],eax
   140016c3d:	add    BYTE PTR [rax],al
   140016c3f:	add    BYTE PTR [rdx+0x0],bl
   140016c42:	add    BYTE PTR [rax],al
   140016c44:	add    BYTE PTR [rax],al
   140016c46:	add    BYTE PTR [rax],al
   140016c48:	cmp    BYTE PTR [rax+0x1],0x40
   140016c4c:	add    DWORD PTR [rax],eax
   140016c4e:	add    BYTE PTR [rax],al
   140016c50:	add    BYTE PTR gs:[rax],al
   140016c53:	add    BYTE PTR [rax],al
   140016c55:	add    BYTE PTR [rax],al
   140016c57:	add    BYTE PTR [rax+0x1400178],cl
   140016c5d:	add    BYTE PTR [rax],al
   140016c5f:	add    BYTE PTR [rdi+0x0],bh
   140016c62:	add    BYTE PTR [rax],al
   140016c64:	add    BYTE PTR [rax],al
   140016c66:	add    BYTE PTR [rax],al
   140016c68:	nop
   140016c69:	js     0x140016c6c
   140016c6b:	rex add DWORD PTR [rax],eax
   140016c6e:	add    BYTE PTR [rax],al
   140016c70:	add    DWORD PTR [rax+rax*1],eax
   140016c73:	add    BYTE PTR [rax],al
   140016c75:	add    BYTE PTR [rax],al
   140016c77:	add    BYTE PTR [rax+0x1400178],bl
   140016c7d:	add    BYTE PTR [rax],al
   140016c7f:	add    BYTE PTR [rdx],al
   140016c81:	add    al,0x0
   140016c83:	add    BYTE PTR [rax],al
   140016c85:	add    BYTE PTR [rax],al
   140016c87:	add    BYTE PTR [rax+0x1400178],ch
   140016c8d:	add    BYTE PTR [rax],al
   140016c8f:	add    BYTE PTR [rbx],al
   140016c91:	add    al,0x0
   140016c93:	add    BYTE PTR [rax],al
   140016c95:	add    BYTE PTR [rax],al
   140016c97:	add    BYTE PTR [rax+0x1400178],bh
   140016c9d:	add    BYTE PTR [rax],al
   140016c9f:	add    BYTE PTR [rsp+rax*1],al
   140016ca2:	add    BYTE PTR [rax],al
   140016ca4:	add    BYTE PTR [rax],al
   140016ca6:	add    BYTE PTR [rax],al
   140016ca8:	and    BYTE PTR [rdx+0x1],ah
   140016cab:	rex add DWORD PTR [rax],eax
   140016cae:	add    BYTE PTR [rax],al
   140016cb0:	add    eax,0x4
   140016cb5:	add    BYTE PTR [rax],al
   140016cb7:	add    al,cl
   140016cb9:	js     0x140016cbc
   140016cbb:	rex add DWORD PTR [rax],eax
   140016cbe:	add    BYTE PTR [rax],al
   140016cc0:	(bad)  
   140016cc1:	add    al,0x0
   140016cc3:	add    BYTE PTR [rax],al
   140016cc5:	add    BYTE PTR [rax],al
   140016cc7:	add    al,bl
   140016cc9:	js     0x140016ccc
   140016ccb:	rex add DWORD PTR [rax],eax
   140016cce:	add    BYTE PTR [rax],al
   140016cd0:	(bad)  
   140016cd1:	add    al,0x0
   140016cd3:	add    BYTE PTR [rax],al
   140016cd5:	add    BYTE PTR [rax],al
   140016cd7:	add    al,ch
   140016cd9:	js     0x140016cdc
   140016cdb:	rex add DWORD PTR [rax],eax
   140016cde:	add    BYTE PTR [rax],al
   140016ce0:	or     BYTE PTR [rax+rax*1],al
   140016ce3:	add    BYTE PTR [rax],al
   140016ce5:	add    BYTE PTR [rax],al
   140016ce7:	add    al,bh
   140016ce9:	js     0x140016cec
   140016ceb:	rex add DWORD PTR [rax],eax
   140016cee:	add    BYTE PTR [rax],al
   140016cf0:	or     DWORD PTR [rax+rax*1],eax
   140016cf3:	add    BYTE PTR [rax],al
   140016cf5:	add    BYTE PTR [rax],al
   140016cf7:	add    al,al
   140016cf9:	(bad)  
   140016cfa:	add    DWORD PTR [rax+0x1],eax
   140016cfd:	add    BYTE PTR [rax],al
   140016cff:	add    BYTE PTR [rbx],cl
   140016d01:	add    al,0x0
   140016d03:	add    BYTE PTR [rax],al
   140016d05:	add    BYTE PTR [rax],al
   140016d07:	add    BYTE PTR [rax],cl
   140016d09:	jns    0x140016d0c
   140016d0b:	rex add DWORD PTR [rax],eax
   140016d0e:	add    BYTE PTR [rax],al
   140016d10:	or     al,0x4
   140016d12:	add    BYTE PTR [rax],al
   140016d14:	add    BYTE PTR [rax],al
   140016d16:	add    BYTE PTR [rax],al
   140016d18:	sbb    BYTE PTR [rcx+0x1],bh
   140016d1b:	rex add DWORD PTR [rax],eax
   140016d1e:	add    BYTE PTR [rax],al
   140016d20:	or     eax,0x4
   140016d25:	add    BYTE PTR [rax],al
   140016d27:	add    BYTE PTR [rax],ch
   140016d29:	jns    0x140016d2c
   140016d2b:	rex add DWORD PTR [rax],eax
   140016d2e:	add    BYTE PTR [rax],al
   140016d30:	(bad)  
   140016d31:	add    al,0x0
   140016d33:	add    BYTE PTR [rax],al
   140016d35:	add    BYTE PTR [rax],al
   140016d37:	add    BYTE PTR [rax],bh
   140016d39:	jns    0x140016d3c
   140016d3b:	rex add DWORD PTR [rax],eax
   140016d3e:	add    BYTE PTR [rax],al
   140016d40:	(bad)  
   140016d42:	add    BYTE PTR [rax],al
   140016d44:	add    BYTE PTR [rax],al
   140016d46:	add    BYTE PTR [rax],al
   140016d48:	rex.W jns 0x140016d4c
   140016d4b:	rex add DWORD PTR [rax],eax
   140016d4e:	add    BYTE PTR [rax],al
   140016d50:	adc    BYTE PTR [rax+rax*1],al
   140016d53:	add    BYTE PTR [rax],al
   140016d55:	add    BYTE PTR [rax],al
   140016d57:	add    BYTE PTR [rax+0x79],bl
   140016d5a:	add    DWORD PTR [rax+0x1],eax
   140016d5d:	add    BYTE PTR [rax],al
   140016d5f:	add    BYTE PTR [rcx],dl
   140016d61:	add    al,0x0
   140016d63:	add    BYTE PTR [rax],al
   140016d65:	add    BYTE PTR [rax],al
   140016d67:	add    al,dh
   140016d69:	(bad)  
   140016d6a:	add    DWORD PTR [rax+0x1],eax
   140016d6d:	add    BYTE PTR [rax],al
   140016d6f:	add    BYTE PTR [rdx],dl
   140016d71:	add    al,0x0
   140016d73:	add    BYTE PTR [rax],al
   140016d75:	add    BYTE PTR [rax],al
   140016d77:	add    BYTE PTR [rax],dl
   140016d79:	(bad)  
   140016d7b:	rex add DWORD PTR [rax],eax
   140016d7e:	add    BYTE PTR [rax],al
   140016d80:	adc    eax,DWORD PTR [rax+rax*1]
   140016d83:	add    BYTE PTR [rax],al
   140016d85:	add    BYTE PTR [rax],al
   140016d87:	add    BYTE PTR [rax+0x79],ch
   140016d8a:	add    DWORD PTR [rax+0x1],eax
   140016d8d:	add    BYTE PTR [rax],al
   140016d8f:	add    BYTE PTR [rsp+rax*1],dl
   140016d92:	add    BYTE PTR [rax],al
   140016d94:	add    BYTE PTR [rax],al
   140016d96:	add    BYTE PTR [rax],al
   140016d98:	js     0x140016e13
   140016d9a:	add    DWORD PTR [rax+0x1],eax
   140016d9d:	add    BYTE PTR [rax],al
   140016d9f:	add    BYTE PTR [rip+0x4],dl        # 0x140016da9
   140016da5:	add    BYTE PTR [rax],al
   140016da7:	add    BYTE PTR [rax+0x1400179],cl
   140016dad:	add    BYTE PTR [rax],al
   140016daf:	add    BYTE PTR [rsi],dl
   140016db1:	add    al,0x0
   140016db3:	add    BYTE PTR [rax],al
   140016db5:	add    BYTE PTR [rax],al
   140016db7:	add    BYTE PTR [rax+0x1400179],bl
   140016dbd:	add    BYTE PTR [rax],al
   140016dbf:	add    BYTE PTR [rax],bl
   140016dc1:	add    al,0x0
   140016dc3:	add    BYTE PTR [rax],al
   140016dc5:	add    BYTE PTR [rax],al
   140016dc7:	add    BYTE PTR [rax+0x1400179],ch
   140016dcd:	add    BYTE PTR [rax],al
   140016dcf:	add    BYTE PTR [rcx],bl
   140016dd1:	add    al,0x0
   140016dd3:	add    BYTE PTR [rax],al
   140016dd5:	add    BYTE PTR [rax],al
   140016dd7:	add    BYTE PTR [rax+0x1400179],bh
   140016ddd:	add    BYTE PTR [rax],al
   140016ddf:	add    BYTE PTR [rdx],bl
   140016de1:	add    al,0x0
   140016de3:	add    BYTE PTR [rax],al
   140016de5:	add    BYTE PTR [rax],al
   140016de7:	add    al,cl
   140016de9:	jns    0x140016dec
   140016deb:	rex add DWORD PTR [rax],eax
   140016dee:	add    BYTE PTR [rax],al
   140016df0:	sbb    eax,DWORD PTR [rax+rax*1]
   140016df3:	add    BYTE PTR [rax],al
   140016df5:	add    BYTE PTR [rax],al
   140016df7:	add    al,bl
   140016df9:	jns    0x140016dfc
   140016dfb:	rex add DWORD PTR [rax],eax
   140016dfe:	add    BYTE PTR [rax],al
   140016e00:	sbb    al,0x4
   140016e02:	add    BYTE PTR [rax],al
   140016e04:	add    BYTE PTR [rax],al
   140016e06:	add    BYTE PTR [rax],al
   140016e08:	call   0x141416f86
   140016e0d:	add    BYTE PTR [rax],al
   140016e0f:	add    BYTE PTR [rip+0x4],bl        # 0x140016e19
   140016e15:	add    BYTE PTR [rax],al
   140016e17:	add    al,bh
   140016e19:	jns    0x140016e1c
   140016e1b:	rex add DWORD PTR [rax],eax
   140016e1e:	add    BYTE PTR [rax],al
   140016e20:	(bad)  
   140016e21:	add    al,0x0
   140016e23:	add    BYTE PTR [rax],al
   140016e25:	add    BYTE PTR [rax],al
   140016e27:	add    BYTE PTR [rax],cl
   140016e29:	jp     0x140016e2c
   140016e2b:	rex add DWORD PTR [rax],eax
   140016e2e:	add    BYTE PTR [rax],al
   140016e30:	(bad)  
   140016e31:	add    al,0x0
   140016e33:	add    BYTE PTR [rax],al
   140016e35:	add    BYTE PTR [rax],al
   140016e37:	add    BYTE PTR [rax],bl
   140016e39:	jp     0x140016e3c
   140016e3b:	rex add DWORD PTR [rax],eax
   140016e3e:	add    BYTE PTR [rax],al
   140016e40:	and    BYTE PTR [rax+rax*1],al
   140016e43:	add    BYTE PTR [rax],al
   140016e45:	add    BYTE PTR [rax],al
   140016e47:	add    BYTE PTR [rax],ch
   140016e49:	jp     0x140016e4c
   140016e4b:	rex add DWORD PTR [rax],eax
   140016e4e:	add    BYTE PTR [rax],al
   140016e50:	and    DWORD PTR [rax+rax*1],eax
   140016e53:	add    BYTE PTR [rax],al
   140016e55:	add    BYTE PTR [rax],al
   140016e57:	add    BYTE PTR [rax],bh
   140016e59:	jp     0x140016e5c
   140016e5b:	rex add DWORD PTR [rax],eax
   140016e5e:	add    BYTE PTR [rax],al
   140016e60:	and    al,BYTE PTR [rax+rax*1]
   140016e63:	add    BYTE PTR [rax],al
   140016e65:	add    BYTE PTR [rax],al
   140016e67:	add    BYTE PTR [rax+0x7a],cl
   140016e6a:	add    DWORD PTR [rax+0x1],eax
   140016e6d:	add    BYTE PTR [rax],al
   140016e6f:	add    BYTE PTR [rbx],ah
   140016e71:	add    al,0x0
   140016e73:	add    BYTE PTR [rax],al
   140016e75:	add    BYTE PTR [rax],al
   140016e77:	add    BYTE PTR [rax+0x7a],bl
   140016e7a:	add    DWORD PTR [rax+0x1],eax
   140016e7d:	add    BYTE PTR [rax],al
   140016e7f:	add    BYTE PTR [rsp+rax*1],ah
   140016e82:	add    BYTE PTR [rax],al
   140016e84:	add    BYTE PTR [rax],al
   140016e86:	add    BYTE PTR [rax],al
   140016e88:	push   0x140017a
   140016e8d:	add    BYTE PTR [rax],al
   140016e8f:	add    BYTE PTR [rip+0x4],ah        # 0x140016e99
   140016e95:	add    BYTE PTR [rax],al
   140016e97:	add    BYTE PTR [rax+0x7a],bh
   140016e9a:	add    DWORD PTR [rax+0x1],eax
   140016e9d:	add    BYTE PTR [rax],al
   140016e9f:	add    BYTE PTR [rsi],ah
   140016ea1:	add    al,0x0
   140016ea3:	add    BYTE PTR [rax],al
   140016ea5:	add    BYTE PTR [rax],al
   140016ea7:	add    BYTE PTR [rax+0x140017a],cl
   140016ead:	add    BYTE PTR [rax],al
   140016eaf:	add    BYTE PTR [rdi],ah
   140016eb1:	add    al,0x0
   140016eb3:	add    BYTE PTR [rax],al
   140016eb5:	add    BYTE PTR [rax],al
   140016eb7:	add    BYTE PTR [rax+0x140017a],bl
   140016ebd:	add    BYTE PTR [rax],al
   140016ebf:	add    BYTE PTR [rcx],ch
   140016ec1:	add    al,0x0
   140016ec3:	add    BYTE PTR [rax],al
   140016ec5:	add    BYTE PTR [rax],al
   140016ec7:	add    BYTE PTR [rax+0x140017a],ch
   140016ecd:	add    BYTE PTR [rax],al
   140016ecf:	add    BYTE PTR [rdx],ch
   140016ed1:	add    al,0x0
   140016ed3:	add    BYTE PTR [rax],al
   140016ed5:	add    BYTE PTR [rax],al
   140016ed7:	add    BYTE PTR [rax+0x140017a],bh
   140016edd:	add    BYTE PTR [rax],al
   140016edf:	add    BYTE PTR [rbx],ch
   140016ee1:	add    al,0x0
   140016ee3:	add    BYTE PTR [rax],al
   140016ee5:	add    BYTE PTR [rax],al
   140016ee7:	add    al,cl
   140016ee9:	jp     0x140016eec
   140016eeb:	rex add DWORD PTR [rax],eax
   140016eee:	add    BYTE PTR [rax],al
   140016ef0:	sub    al,0x4
   140016ef2:	add    BYTE PTR [rax],al
   140016ef4:	add    BYTE PTR [rax],al
   140016ef6:	add    BYTE PTR [rax],al
   140016ef8:	fdivr  DWORD PTR [rdx+0x1]
   140016efb:	rex add DWORD PTR [rax],eax
   140016efe:	add    BYTE PTR [rax],al
   140016f00:	sub    eax,0x4
   140016f05:	add    BYTE PTR [rax],al
   140016f07:	add    al,dh
   140016f09:	jp     0x140016f0c
   140016f0b:	rex add DWORD PTR [rax],eax
   140016f0e:	add    BYTE PTR [rax],al
   140016f10:	(bad)  
   140016f11:	add    al,0x0
   140016f13:	add    BYTE PTR [rax],al
   140016f15:	add    BYTE PTR [rax],al
   140016f17:	add    BYTE PTR [rax],al
   140016f19:	jnp    0x140016f1c
   140016f1b:	rex add DWORD PTR [rax],eax
   140016f1e:	add    BYTE PTR [rax],al
   140016f20:	xor    al,BYTE PTR [rax+rax*1]
   140016f23:	add    BYTE PTR [rax],al
   140016f25:	add    BYTE PTR [rax],al
   140016f27:	add    BYTE PTR [rax],dl
   140016f29:	jnp    0x140016f2c
   140016f2b:	rex add DWORD PTR [rax],eax
   140016f2e:	add    BYTE PTR [rax],al
   140016f30:	xor    al,0x4
   140016f32:	add    BYTE PTR [rax],al
   140016f34:	add    BYTE PTR [rax],al
   140016f36:	add    BYTE PTR [rax],al
   140016f38:	and    BYTE PTR [rbx+0x1],bh
   140016f3b:	rex add DWORD PTR [rax],eax
   140016f3e:	add    BYTE PTR [rax],al
   140016f40:	xor    eax,0x4
   140016f45:	add    BYTE PTR [rax],al
   140016f47:	add    BYTE PTR [rax],dh
   140016f49:	jnp    0x140016f4c
   140016f4b:	rex add DWORD PTR [rax],eax
   140016f4e:	add    BYTE PTR [rax],al
   140016f50:	ss add al,0x0
   140016f53:	add    BYTE PTR [rax],al
   140016f55:	add    BYTE PTR [rax],al
   140016f57:	add    BYTE PTR [rax+0x7b],al
   140016f5a:	add    DWORD PTR [rax+0x1],eax
   140016f5d:	add    BYTE PTR [rax],al
   140016f5f:	add    BYTE PTR [rdi],dh
   140016f61:	add    al,0x0
   140016f63:	add    BYTE PTR [rax],al
   140016f65:	add    BYTE PTR [rax],al
   140016f67:	add    BYTE PTR [rax+0x7b],dl
   140016f6a:	add    DWORD PTR [rax+0x1],eax
   140016f6d:	add    BYTE PTR [rax],al
   140016f6f:	add    BYTE PTR [rax],bh
   140016f71:	add    al,0x0
   140016f73:	add    BYTE PTR [rax],al
   140016f75:	add    BYTE PTR [rax],al
   140016f77:	add    BYTE PTR [rax+0x7b],ah
   140016f7a:	add    DWORD PTR [rax+0x1],eax
   140016f7d:	add    BYTE PTR [rax],al
   140016f7f:	add    BYTE PTR [rcx],bh
   140016f81:	add    al,0x0
   140016f83:	add    BYTE PTR [rax],al
   140016f85:	add    BYTE PTR [rax],al
   140016f87:	add    BYTE PTR [rax+0x7b],dh
   140016f8a:	add    DWORD PTR [rax+0x1],eax
   140016f8d:	add    BYTE PTR [rax],al
   140016f8f:	add    BYTE PTR [rdx],bh
   140016f91:	add    al,0x0
   140016f93:	add    BYTE PTR [rax],al
   140016f95:	add    BYTE PTR [rax],al
   140016f97:	add    BYTE PTR [rax+0x140017b],al
   140016f9d:	add    BYTE PTR [rax],al
   140016f9f:	add    BYTE PTR [rbx],bh
   140016fa1:	add    al,0x0
   140016fa3:	add    BYTE PTR [rax],al
   140016fa5:	add    BYTE PTR [rax],al
   140016fa7:	add    BYTE PTR [rax+0x140017b],dl
   140016fad:	add    BYTE PTR [rax],al
   140016faf:	add    BYTE PTR [rsi],bh
   140016fb1:	add    al,0x0
   140016fb3:	add    BYTE PTR [rax],al
   140016fb5:	add    BYTE PTR [rax],al
   140016fb7:	add    BYTE PTR [rax+0x140017b],ah
   140016fbd:	add    BYTE PTR [rax],al
   140016fbf:	add    BYTE PTR [rdi],bh
   140016fc1:	add    al,0x0
   140016fc3:	add    BYTE PTR [rax],al
   140016fc5:	add    BYTE PTR [rax],al
   140016fc7:	add    BYTE PTR [rax+0x140017b],dh
   140016fcd:	add    BYTE PTR [rax],al
   140016fcf:	add    BYTE PTR [rax+0x4],al
   140016fd2:	add    BYTE PTR [rax],al
   140016fd4:	add    BYTE PTR [rax],al
   140016fd6:	add    BYTE PTR [rax],al
   140016fd8:	sar    BYTE PTR [rbx+0x1],0x40
   140016fdc:	add    DWORD PTR [rax],eax
   140016fde:	add    BYTE PTR [rax],al
   140016fe0:	rex.B add al,0x0
   140016fe3:	add    BYTE PTR [rax],al
   140016fe5:	add    BYTE PTR [rax],al
   140016fe7:	add    al,dl
   140016fe9:	jnp    0x140016fec
   140016feb:	rex add DWORD PTR [rax],eax
   140016fee:	add    BYTE PTR [rax],al
   140016ff0:	rex.XB add al,0x0
   140016ff3:	add    BYTE PTR [rax],al
   140016ff5:	add    BYTE PTR [rax],al
   140016ff7:	add    al,ah
   140016ff9:	jnp    0x140016ffc
   140016ffb:	rex add DWORD PTR [rax],eax
   140016ffe:	add    BYTE PTR [rax],al
   140017000:	rex.R add al,0x0
   140017003:	add    BYTE PTR [rax],al
   140017005:	add    BYTE PTR [rax],al
   140017007:	add    al,bh
   140017009:	jnp    0x14001700c
   14001700b:	rex add DWORD PTR [rax],eax
   14001700e:	add    BYTE PTR [rax],al
   140017010:	rex.RB add al,0x0
   140017013:	add    BYTE PTR [rax],al
   140017015:	add    BYTE PTR [rax],al
   140017017:	add    BYTE PTR [rax],cl
   140017019:	jl     0x14001701c
   14001701b:	rex add DWORD PTR [rax],eax
   14001701e:	add    BYTE PTR [rax],al
   140017020:	rex.RX add al,0x0
   140017023:	add    BYTE PTR [rax],al
   140017025:	add    BYTE PTR [rax],al
   140017027:	add    BYTE PTR [rax],bl
   140017029:	jl     0x14001702c
   14001702b:	rex add DWORD PTR [rax],eax
   14001702e:	add    BYTE PTR [rax],al
   140017030:	rex.RXB add al,0x0
   140017033:	add    BYTE PTR [rax],al
   140017035:	add    BYTE PTR [rax],al
   140017037:	add    BYTE PTR [rax],ch
   140017039:	jl     0x14001703c
   14001703b:	rex add DWORD PTR [rax],eax
   14001703e:	add    BYTE PTR [rax],al
   140017040:	rex.WB add al,0x0
   140017043:	add    BYTE PTR [rax],al
   140017045:	add    BYTE PTR [rax],al
   140017047:	add    BYTE PTR [rax],bh
   140017049:	jl     0x14001704c
   14001704b:	rex add DWORD PTR [rax],eax
   14001704e:	add    BYTE PTR [rax],al
   140017050:	rex.WX add al,0x0
   140017053:	add    BYTE PTR [rax],al
   140017055:	add    BYTE PTR [rax],al
   140017057:	add    BYTE PTR [rax+0x7c],cl
   14001705a:	add    DWORD PTR [rax+0x1],eax
   14001705d:	add    BYTE PTR [rax],al
   14001705f:	add    BYTE PTR [rbx+0x4],cl
   140017062:	add    BYTE PTR [rax],al
   140017064:	add    BYTE PTR [rax],al
   140017066:	add    BYTE PTR [rax],al
   140017068:	pop    rax
   140017069:	jl     0x14001706c
   14001706b:	rex add DWORD PTR [rax],eax
   14001706e:	add    BYTE PTR [rax],al
   140017070:	rex.WR add al,0x0
   140017073:	add    BYTE PTR [rax],al
   140017075:	add    BYTE PTR [rax],al
   140017077:	add    BYTE PTR [rax+0x7c],ch
   14001707a:	add    DWORD PTR [rax+0x1],eax
   14001707d:	add    BYTE PTR [rax],al
   14001707f:	add    BYTE PTR [rsi+0x4],cl
   140017082:	add    BYTE PTR [rax],al
   140017084:	add    BYTE PTR [rax],al
   140017086:	add    BYTE PTR [rax],al
   140017088:	js     0x140017106
   14001708a:	add    DWORD PTR [rax+0x1],eax
   14001708d:	add    BYTE PTR [rax],al
   14001708f:	add    BYTE PTR [rdi+0x4],cl
   140017092:	add    BYTE PTR [rax],al
   140017094:	add    BYTE PTR [rax],al
   140017096:	add    BYTE PTR [rax],al
   140017098:	mov    BYTE PTR [rcx+rax*1+0x40],bh
   14001709c:	add    DWORD PTR [rax],eax
   14001709e:	add    BYTE PTR [rax],al
   1400170a0:	push   rax
   1400170a1:	add    al,0x0
   1400170a3:	add    BYTE PTR [rax],al
   1400170a5:	add    BYTE PTR [rax],al
   1400170a7:	add    BYTE PTR [rax+0x140017c],bl
   1400170ad:	add    BYTE PTR [rax],al
   1400170af:	add    BYTE PTR [rdx+0x4],dl
   1400170b2:	add    BYTE PTR [rax],al
   1400170b4:	add    BYTE PTR [rax],al
   1400170b6:	add    BYTE PTR [rax],al
   1400170b8:	test   al,0x7c
   1400170ba:	add    DWORD PTR [rax+0x1],eax
   1400170bd:	add    BYTE PTR [rax],al
   1400170bf:	add    BYTE PTR [rsi+0x4],dl
   1400170c2:	add    BYTE PTR [rax],al
   1400170c4:	add    BYTE PTR [rax],al
   1400170c6:	add    BYTE PTR [rax],al
   1400170c8:	mov    eax,0x140017c
   1400170cd:	add    BYTE PTR [rax],al
   1400170cf:	add    BYTE PTR [rdi+0x4],dl
   1400170d2:	add    BYTE PTR [rax],al
   1400170d4:	add    BYTE PTR [rax],al
   1400170d6:	add    BYTE PTR [rax],al
   1400170d8:	enter  0x17c,0x40
   1400170dc:	add    DWORD PTR [rax],eax
   1400170de:	add    BYTE PTR [rax],al
   1400170e0:	pop    rdx
   1400170e1:	add    al,0x0
   1400170e3:	add    BYTE PTR [rax],al
   1400170e5:	add    BYTE PTR [rax],al
   1400170e7:	add    al,bl
   1400170e9:	jl     0x1400170ec
   1400170eb:	rex add DWORD PTR [rax],eax
   1400170ee:	add    BYTE PTR [rax],al
   1400170f0:	gs add al,0x0
   1400170f3:	add    BYTE PTR [rax],al
   1400170f5:	add    BYTE PTR [rax],al
   1400170f7:	add    al,ch
   1400170f9:	jl     0x1400170fc
   1400170fb:	rex add DWORD PTR [rax],eax
   1400170fe:	add    BYTE PTR [rax],al
   140017100:	imul   eax,DWORD PTR [rax+rax*1],0x0
   140017104:	add    BYTE PTR [rax],al
   140017106:	add    BYTE PTR [rax],al
   140017108:	clc    
   140017109:	jl     0x14001710c
   14001710b:	rex add DWORD PTR [rax],eax
   14001710e:	add    BYTE PTR [rax],al
   140017110:	ins    BYTE PTR es:[rdi],dx
   140017111:	add    al,0x0
   140017113:	add    BYTE PTR [rax],al
   140017115:	add    BYTE PTR [rax],al
   140017117:	add    BYTE PTR [rax],cl
   140017119:	jge    0x14001711c
   14001711b:	rex add DWORD PTR [rax],eax
   14001711e:	add    BYTE PTR [rax],al
   140017120:	add    DWORD PTR [rax+rax*1],0x0
   140017127:	add    BYTE PTR [rax],bl
   140017129:	jge    0x14001712c
   14001712b:	rex add DWORD PTR [rax],eax
   14001712e:	add    BYTE PTR [rax],al
   140017130:	add    DWORD PTR [rax],ecx
   140017132:	add    BYTE PTR [rax],al
   140017134:	add    BYTE PTR [rax],al
   140017136:	add    BYTE PTR [rax],al
   140017138:	sub    BYTE PTR [rbp+0x1],bh
   14001713b:	rex add DWORD PTR [rax],eax
   14001713e:	add    BYTE PTR [rax],al
   140017140:	add    al,0x8
   140017142:	add    BYTE PTR [rax],al
   140017144:	add    BYTE PTR [rax],al
   140017146:	add    BYTE PTR [rax],al
   140017148:	add    BYTE PTR [rdx+0x1],ah
   14001714b:	rex add DWORD PTR [rax],eax
   14001714e:	add    BYTE PTR [rax],al
   140017150:	(bad)  
   140017151:	or     BYTE PTR [rax],al
   140017153:	add    BYTE PTR [rax],al
   140017155:	add    BYTE PTR [rax],al
   140017157:	add    BYTE PTR [rax],bh
   140017159:	jge    0x14001715c
   14001715b:	rex add DWORD PTR [rax],eax
   14001715e:	add    BYTE PTR [rax],al
   140017160:	or     DWORD PTR [rax],ecx
   140017162:	add    BYTE PTR [rax],al
   140017164:	add    BYTE PTR [rax],al
   140017166:	add    BYTE PTR [rax],al
   140017168:	rex.W jge 0x14001716c
   14001716b:	rex add DWORD PTR [rax],eax
   14001716e:	add    BYTE PTR [rax],al
   140017170:	or     cl,BYTE PTR [rax]
   140017172:	add    BYTE PTR [rax],al
   140017174:	add    BYTE PTR [rax],al
   140017176:	add    BYTE PTR [rax],al
   140017178:	pop    rax
   140017179:	jge    0x14001717c
   14001717b:	rex add DWORD PTR [rax],eax
   14001717e:	add    BYTE PTR [rax],al
   140017180:	or     al,0x8
   140017182:	add    BYTE PTR [rax],al
   140017184:	add    BYTE PTR [rax],al
   140017186:	add    BYTE PTR [rax],al
   140017188:	push   0x140017d
   14001718d:	add    BYTE PTR [rax],al
   14001718f:	add    BYTE PTR [rax],dl
   140017191:	or     BYTE PTR [rax],al
   140017193:	add    BYTE PTR [rax],al
   140017195:	add    BYTE PTR [rax],al
   140017197:	add    BYTE PTR [rax+0x7d],bh
   14001719a:	add    DWORD PTR [rax+0x1],eax
   14001719d:	add    BYTE PTR [rax],al
   14001719f:	add    BYTE PTR [rbx],dl
   1400171a1:	or     BYTE PTR [rax],al
   1400171a3:	add    BYTE PTR [rax],al
   1400171a5:	add    BYTE PTR [rax],al
   1400171a7:	add    BYTE PTR [rax+0x140017d],cl
   1400171ad:	add    BYTE PTR [rax],al
   1400171af:	add    BYTE PTR [rax+rcx*1],dl
   1400171b2:	add    BYTE PTR [rax],al
   1400171b4:	add    BYTE PTR [rax],al
   1400171b6:	add    BYTE PTR [rax],al
   1400171b8:	cwde   
   1400171b9:	jge    0x1400171bc
   1400171bb:	rex add DWORD PTR [rax],eax
   1400171be:	add    BYTE PTR [rax],al
   1400171c0:	(bad)  
   1400171c1:	or     BYTE PTR [rax],al
   1400171c3:	add    BYTE PTR [rax],al
   1400171c5:	add    BYTE PTR [rax],al
   1400171c7:	add    BYTE PTR [rax+0x140017d],ch
   1400171cd:	add    BYTE PTR [rax],al
   1400171cf:	add    BYTE PTR [rdx],bl
   1400171d1:	or     BYTE PTR [rax],al
   1400171d3:	add    BYTE PTR [rax],al
   1400171d5:	add    BYTE PTR [rax],al
   1400171d7:	add    BYTE PTR [rax+0x140017d],bh
   1400171dd:	add    BYTE PTR [rax],al
   1400171df:	add    BYTE PTR [rip+0x8],bl        # 0x1400171ed
   1400171e5:	add    BYTE PTR [rax],al
   1400171e7:	add    al,dl
   1400171e9:	jge    0x1400171ec
   1400171eb:	rex add DWORD PTR [rax],eax
   1400171ee:	add    BYTE PTR [rax],al
   1400171f0:	sub    al,0x8
   1400171f2:	add    BYTE PTR [rax],al
   1400171f4:	add    BYTE PTR [rax],al
   1400171f6:	add    BYTE PTR [rax],al
   1400171f8:	loopne 0x140017277
   1400171fa:	add    DWORD PTR [rax+0x1],eax
   1400171fd:	add    BYTE PTR [rax],al
   1400171ff:	add    BYTE PTR [rbx],bh
   140017201:	or     BYTE PTR [rax],al
   140017203:	add    BYTE PTR [rax],al
   140017205:	add    BYTE PTR [rax],al
   140017207:	add    al,bh
   140017209:	jge    0x14001720c
   14001720b:	rex add DWORD PTR [rax],eax
   14001720e:	add    BYTE PTR [rax],al
   140017210:	or     BYTE PTR ds:[rax],al
   140017213:	add    BYTE PTR [rax],al
   140017215:	add    BYTE PTR [rax],al
   140017217:	add    BYTE PTR [rax],cl
   140017219:	jle    0x14001721c
   14001721b:	rex add DWORD PTR [rax],eax
   14001721e:	add    BYTE PTR [rax],al
   140017220:	rex.XB or BYTE PTR [r8],al
   140017223:	add    BYTE PTR [rax],al
   140017225:	add    BYTE PTR [rax],al
   140017227:	add    BYTE PTR [rax],bl
   140017229:	jle    0x14001722c
   14001722b:	rex add DWORD PTR [rax],eax
   14001722e:	add    BYTE PTR [rax],al
   140017230:	imul   ecx,DWORD PTR [rax],0x0
   140017233:	add    BYTE PTR [rax],al
   140017235:	add    BYTE PTR [rax],al
   140017237:	add    BYTE PTR [rax],dh
   140017239:	jle    0x14001723c
   14001723b:	rex add DWORD PTR [rax],eax
   14001723e:	add    BYTE PTR [rax],al
   140017240:	add    DWORD PTR [rax+rax*1],ecx
   140017243:	add    BYTE PTR [rax],al
   140017245:	add    BYTE PTR [rax],al
   140017247:	add    BYTE PTR [rax+0x7e],al
   14001724a:	add    DWORD PTR [rax+0x1],eax
   14001724d:	add    BYTE PTR [rax],al
   14001724f:	add    BYTE PTR [rsp+rcx*1],al
   140017252:	add    BYTE PTR [rax],al
   140017254:	add    BYTE PTR [rax],al
   140017256:	add    BYTE PTR [rax],al
   140017258:	push   rax
   140017259:	jle    0x14001725c
   14001725b:	rex add DWORD PTR [rax],eax
   14001725e:	add    BYTE PTR [rax],al
   140017260:	(bad)  
   140017261:	or     al,0x0
   140017263:	add    BYTE PTR [rax],al
   140017265:	add    BYTE PTR [rax],al
   140017267:	add    BYTE PTR [rax+0x7e],ah
   14001726a:	add    DWORD PTR [rax+0x1],eax
   14001726d:	add    BYTE PTR [rax],al
   14001726f:	add    BYTE PTR [rcx],cl
   140017271:	or     al,0x0
   140017273:	add    BYTE PTR [rax],al
   140017275:	add    BYTE PTR [rax],al
   140017277:	add    BYTE PTR [rax+0x7e],dh
   14001727a:	add    DWORD PTR [rax+0x1],eax
   14001727d:	add    BYTE PTR [rax],al
   14001727f:	add    BYTE PTR [rdx],cl
   140017281:	or     al,0x0
   140017283:	add    BYTE PTR [rax],al
   140017285:	add    BYTE PTR [rax],al
   140017287:	add    BYTE PTR [rax+0x140017e],al
   14001728d:	add    BYTE PTR [rax],al
   14001728f:	add    BYTE PTR [rsp+rcx*1],cl
   140017292:	add    BYTE PTR [rax],al
   140017294:	add    BYTE PTR [rax],al
   140017296:	add    BYTE PTR [rax],al
   140017298:	nop
   140017299:	jle    0x14001729c
   14001729b:	rex add DWORD PTR [rax],eax
   14001729e:	add    BYTE PTR [rax],al
   1400172a0:	sbb    cl,BYTE PTR [rax+rax*1]
   1400172a3:	add    BYTE PTR [rax],al
   1400172a5:	add    BYTE PTR [rax],al
   1400172a7:	add    BYTE PTR [rax+0x140017e],ah
   1400172ad:	add    BYTE PTR [rax],al
   1400172af:	add    BYTE PTR [rbx],bh
   1400172b1:	or     al,0x0
   1400172b3:	add    BYTE PTR [rax],al
   1400172b5:	add    BYTE PTR [rax],al
   1400172b7:	add    BYTE PTR [rax+0x140017e],bh
   1400172bd:	add    BYTE PTR [rax],al
   1400172bf:	add    BYTE PTR [rbx+0xc],ch
   1400172c2:	add    BYTE PTR [rax],al
   1400172c4:	add    BYTE PTR [rax],al
   1400172c6:	add    BYTE PTR [rax],al
   1400172c8:	enter  0x17e,0x40
   1400172cc:	add    DWORD PTR [rax],eax
   1400172ce:	add    BYTE PTR [rax],al
   1400172d0:	add    DWORD PTR [rax],edx
   1400172d2:	add    BYTE PTR [rax],al
   1400172d4:	add    BYTE PTR [rax],al
   1400172d6:	add    BYTE PTR [rax],al
   1400172d8:	fdivr  DWORD PTR [rsi+0x1]
   1400172db:	rex add DWORD PTR [rax],eax
   1400172de:	add    BYTE PTR [rax],al
   1400172e0:	add    al,0x10
   1400172e2:	add    BYTE PTR [rax],al
   1400172e4:	add    BYTE PTR [rax],al
   1400172e6:	add    BYTE PTR [rax],al
   1400172e8:	call   0x14141746b
   1400172ed:	add    BYTE PTR [rax],al
   1400172ef:	add    BYTE PTR [rdi],al
   1400172f1:	adc    BYTE PTR [rax],al
   1400172f3:	add    BYTE PTR [rax],al
   1400172f5:	add    BYTE PTR [rax],al
   1400172f7:	add    al,bh
   1400172f9:	jle    0x1400172fc
   1400172fb:	rex add DWORD PTR [rax],eax
   1400172fe:	add    BYTE PTR [rax],al
   140017300:	or     DWORD PTR [rax],edx
   140017302:	add    BYTE PTR [rax],al
   140017304:	add    BYTE PTR [rax],al
   140017306:	add    BYTE PTR [rax],al
   140017308:	or     BYTE PTR [rdi+0x1],bh
   14001730b:	rex add DWORD PTR [rax],eax
   14001730e:	add    BYTE PTR [rax],al
   140017310:	or     dl,BYTE PTR [rax]
   140017312:	add    BYTE PTR [rax],al
   140017314:	add    BYTE PTR [rax],al
   140017316:	add    BYTE PTR [rax],al
   140017318:	sbb    BYTE PTR [rdi+0x1],bh
   14001731b:	rex add DWORD PTR [rax],eax
   14001731e:	add    BYTE PTR [rax],al
   140017320:	or     al,0x10
   140017322:	add    BYTE PTR [rax],al
   140017324:	add    BYTE PTR [rax],al
   140017326:	add    BYTE PTR [rax],al
   140017328:	sub    BYTE PTR [rdi+0x1],bh
   14001732b:	rex add DWORD PTR [rax],eax
   14001732e:	add    BYTE PTR [rax],al
   140017330:	sbb    dl,BYTE PTR [rax]
   140017332:	add    BYTE PTR [rax],al
   140017334:	add    BYTE PTR [rax],al
   140017336:	add    BYTE PTR [rax],al
   140017338:	cmp    BYTE PTR [rdi+0x1],bh
   14001733b:	rex add DWORD PTR [rax],eax
   14001733e:	add    BYTE PTR [rax],al
   140017340:	cmp    edx,DWORD PTR [rax]
   140017342:	add    BYTE PTR [rax],al
   140017344:	add    BYTE PTR [rax],al
   140017346:	add    BYTE PTR [rax],al
   140017348:	rex.W jg 0x14001734c
   14001734b:	rex add DWORD PTR [rax],eax
   14001734e:	add    BYTE PTR [rax],al
   140017350:	add    DWORD PTR [rax+rax*1],edx
   140017353:	add    BYTE PTR [rax],al
   140017355:	add    BYTE PTR [rax],al
   140017357:	add    BYTE PTR [rax+0x7f],bl
   14001735a:	add    DWORD PTR [rax+0x1],eax
   14001735d:	add    BYTE PTR [rax],al
   14001735f:	add    BYTE PTR [rsp+rdx*1],al
   140017362:	add    BYTE PTR [rax],al
   140017364:	add    BYTE PTR [rax],al
   140017366:	add    BYTE PTR [rax],al
   140017368:	push   0x140017f
   14001736d:	add    BYTE PTR [rax],al
   14001736f:	add    BYTE PTR [rdi],al
   140017371:	adc    al,0x0
   140017373:	add    BYTE PTR [rax],al
   140017375:	add    BYTE PTR [rax],al
   140017377:	add    BYTE PTR [rax+0x7f],bh
   14001737a:	add    DWORD PTR [rax+0x1],eax
   14001737d:	add    BYTE PTR [rax],al
   14001737f:	add    BYTE PTR [rcx],cl
   140017381:	adc    al,0x0
   140017383:	add    BYTE PTR [rax],al
   140017385:	add    BYTE PTR [rax],al
   140017387:	add    BYTE PTR [rax+0x140017f],cl
   14001738d:	add    BYTE PTR [rax],al
   14001738f:	add    BYTE PTR [rdx],cl
   140017391:	adc    al,0x0
   140017393:	add    BYTE PTR [rax],al
   140017395:	add    BYTE PTR [rax],al
   140017397:	add    BYTE PTR [rax+0x140017f],bl
   14001739d:	add    BYTE PTR [rax],al
   14001739f:	add    BYTE PTR [rsp+rdx*1],cl
   1400173a2:	add    BYTE PTR [rax],al
   1400173a4:	add    BYTE PTR [rax],al
   1400173a6:	add    BYTE PTR [rax],al
   1400173a8:	test   al,0x7f
   1400173aa:	add    DWORD PTR [rax+0x1],eax
   1400173ad:	add    BYTE PTR [rax],al
   1400173af:	add    BYTE PTR [rdx],bl
   1400173b1:	adc    al,0x0
   1400173b3:	add    BYTE PTR [rax],al
   1400173b5:	add    BYTE PTR [rax],al
   1400173b7:	add    BYTE PTR [rax+0x140017f],bh
   1400173bd:	add    BYTE PTR [rax],al
   1400173bf:	add    BYTE PTR [rbx],bh
   1400173c1:	adc    al,0x0
   1400173c3:	add    BYTE PTR [rax],al
   1400173c5:	add    BYTE PTR [rax],al
   1400173c7:	add    al,dl
   1400173c9:	jg     0x1400173cc
   1400173cb:	rex add DWORD PTR [rax],eax
   1400173ce:	add    BYTE PTR [rax],al
   1400173d0:	add    DWORD PTR [rax],ebx
   1400173d2:	add    BYTE PTR [rax],al
   1400173d4:	add    BYTE PTR [rax],al
   1400173d6:	add    BYTE PTR [rax],al
   1400173d8:	loopne 0x140017459
   1400173da:	add    DWORD PTR [rax+0x1],eax
   1400173dd:	add    BYTE PTR [rax],al
   1400173df:	add    BYTE PTR [rcx],cl
   1400173e1:	sbb    BYTE PTR [rax],al
   1400173e3:	add    BYTE PTR [rax],al
   1400173e5:	add    BYTE PTR [rax],al
   1400173e7:	add    al,dh
   1400173e9:	jg     0x1400173ec
   1400173eb:	rex add DWORD PTR [rax],eax
   1400173ee:	add    BYTE PTR [rax],al
   1400173f0:	or     bl,BYTE PTR [rax]
   1400173f2:	add    BYTE PTR [rax],al
   1400173f4:	add    BYTE PTR [rax],al
   1400173f6:	add    BYTE PTR [rax],al
   1400173f8:	add    BYTE PTR [rax+0x14001],al
   1400173fe:	add    BYTE PTR [rax],al
   140017400:	or     al,0x18
   140017402:	add    BYTE PTR [rax],al
   140017404:	add    BYTE PTR [rax],al
   140017406:	add    BYTE PTR [rax],al
   140017408:	adc    BYTE PTR [rax+0x14001],al
   14001740e:	add    BYTE PTR [rax],al
   140017410:	sbb    bl,BYTE PTR [rax]
   140017412:	add    BYTE PTR [rax],al
   140017414:	add    BYTE PTR [rax],al
   140017416:	add    BYTE PTR [rax],al
   140017418:	and    BYTE PTR [rax+0x14001],al
   14001741e:	add    BYTE PTR [rax],al
   140017420:	cmp    ebx,DWORD PTR [rax]
   140017422:	add    BYTE PTR [rax],al
   140017424:	add    BYTE PTR [rax],al
   140017426:	add    BYTE PTR [rax],al
   140017428:	cmp    BYTE PTR [rax+0x14001],al
   14001742e:	add    BYTE PTR [rax],al
   140017430:	add    DWORD PTR [rax+rax*1],ebx
   140017433:	add    BYTE PTR [rax],al
   140017435:	add    BYTE PTR [rax],al
   140017437:	add    BYTE PTR [rax-0x80],cl
   14001743a:	add    DWORD PTR [rax+0x1],eax
   14001743d:	add    BYTE PTR [rax],al
   14001743f:	add    BYTE PTR [rcx],cl
   140017441:	sbb    al,0x0
   140017443:	add    BYTE PTR [rax],al
   140017445:	add    BYTE PTR [rax],al
   140017447:	add    BYTE PTR [rax-0x80],bl
   14001744a:	add    DWORD PTR [rax+0x1],eax
   14001744d:	add    BYTE PTR [rax],al
   14001744f:	add    BYTE PTR [rdx],cl
   140017451:	sbb    al,0x0
   140017453:	add    BYTE PTR [rax],al
   140017455:	add    BYTE PTR [rax],al
   140017457:	add    BYTE PTR [rax-0x80],ch
   14001745a:	add    DWORD PTR [rax+0x1],eax
   14001745d:	add    BYTE PTR [rax],al
   14001745f:	add    BYTE PTR [rdx],bl
   140017461:	sbb    al,0x0
   140017463:	add    BYTE PTR [rax],al
   140017465:	add    BYTE PTR [rax],al
   140017467:	add    BYTE PTR [rax-0x80],bh
   14001746a:	add    DWORD PTR [rax+0x1],eax
   14001746d:	add    BYTE PTR [rax],al
   14001746f:	add    BYTE PTR [rbx],bh
   140017471:	sbb    al,0x0
   140017473:	add    BYTE PTR [rax],al
   140017475:	add    BYTE PTR [rax],al
   140017477:	add    BYTE PTR [rax+0x1400180],dl
   14001747d:	add    BYTE PTR [rax],al
   14001747f:	add    BYTE PTR [rcx],al
   140017481:	and    BYTE PTR [rax],al
   140017483:	add    BYTE PTR [rax],al
   140017485:	add    BYTE PTR [rax],al
   140017487:	add    BYTE PTR [rax+0x1400180],ah
   14001748d:	add    BYTE PTR [rax],al
   14001748f:	add    BYTE PTR [rcx],cl
   140017491:	and    BYTE PTR [rax],al
   140017493:	add    BYTE PTR [rax],al
   140017495:	add    BYTE PTR [rax],al
   140017497:	add    BYTE PTR [rax+0x1400180],dh
   14001749d:	add    BYTE PTR [rax],al
   14001749f:	add    BYTE PTR [rdx],cl
   1400174a1:	and    BYTE PTR [rax],al
   1400174a3:	add    BYTE PTR [rax],al
   1400174a5:	add    BYTE PTR [rax],al
   1400174a7:	add    al,al
   1400174a9:	add    BYTE PTR [rcx],0x40
   1400174ac:	add    DWORD PTR [rax],eax
   1400174ae:	add    BYTE PTR [rax],al
   1400174b0:	cmp    esp,DWORD PTR [rax]
   1400174b2:	add    BYTE PTR [rax],al
   1400174b4:	add    BYTE PTR [rax],al
   1400174b6:	add    BYTE PTR [rax],al
   1400174b8:	rol    BYTE PTR [rax+0x14001],1
   1400174be:	add    BYTE PTR [rax],al
   1400174c0:	add    DWORD PTR [rax+rax*1],esp
   1400174c3:	add    BYTE PTR [rax],al
   1400174c5:	add    BYTE PTR [rax],al
   1400174c7:	add    al,ah
   1400174c9:	add    BYTE PTR [rcx],0x40
   1400174cc:	add    DWORD PTR [rax],eax
   1400174ce:	add    BYTE PTR [rax],al
   1400174d0:	or     DWORD PTR [rax+rax*1],esp
   1400174d3:	add    BYTE PTR [rax],al
   1400174d5:	add    BYTE PTR [rax],al
   1400174d7:	add    al,dh
   1400174d9:	add    BYTE PTR [rcx],0x40
   1400174dc:	add    DWORD PTR [rax],eax
   1400174de:	add    BYTE PTR [rax],al
   1400174e0:	or     ah,BYTE PTR [rax+rax*1]
   1400174e3:	add    BYTE PTR [rax],al
   1400174e5:	add    BYTE PTR [rax],al
   1400174e7:	add    BYTE PTR [rax],al
   1400174e9:	add    DWORD PTR [rcx],0x140
   1400174ef:	add    BYTE PTR [rbx],bh
   1400174f1:	and    al,0x0
   1400174f3:	add    BYTE PTR [rax],al
   1400174f5:	add    BYTE PTR [rax],al
   1400174f7:	add    BYTE PTR [rax],dl
   1400174f9:	add    DWORD PTR [rcx],0x140
   1400174ff:	add    BYTE PTR [rcx],al
   140017501:	sub    BYTE PTR [rax],al
   140017503:	add    BYTE PTR [rax],al
   140017505:	add    BYTE PTR [rax],al
   140017507:	add    BYTE PTR [rax],ah
   140017509:	add    DWORD PTR [rcx],0x140
   14001750f:	add    BYTE PTR [rcx],cl
   140017511:	sub    BYTE PTR [rax],al
   140017513:	add    BYTE PTR [rax],al
   140017515:	add    BYTE PTR [rax],al
   140017517:	add    BYTE PTR [rax],dh
   140017519:	add    DWORD PTR [rcx],0x140
   14001751f:	add    BYTE PTR [rdx],cl
   140017521:	sub    BYTE PTR [rax],al
   140017523:	add    BYTE PTR [rax],al
   140017525:	add    BYTE PTR [rax],al
   140017527:	add    BYTE PTR [rax-0x7f],al
   14001752a:	add    DWORD PTR [rax+0x1],eax
   14001752d:	add    BYTE PTR [rax],al
   14001752f:	add    BYTE PTR [rcx],al
   140017531:	sub    al,0x0
   140017533:	add    BYTE PTR [rax],al
   140017535:	add    BYTE PTR [rax],al
   140017537:	add    BYTE PTR [rax-0x7f],dl
   14001753a:	add    DWORD PTR [rax+0x1],eax
   14001753d:	add    BYTE PTR [rax],al
   14001753f:	add    BYTE PTR [rcx],cl
   140017541:	sub    al,0x0
   140017543:	add    BYTE PTR [rax],al
   140017545:	add    BYTE PTR [rax],al
   140017547:	add    BYTE PTR [rax-0x7f],ah
   14001754a:	add    DWORD PTR [rax+0x1],eax
   14001754d:	add    BYTE PTR [rax],al
   14001754f:	add    BYTE PTR [rdx],cl
   140017551:	sub    al,0x0
   140017553:	add    BYTE PTR [rax],al
   140017555:	add    BYTE PTR [rax],al
   140017557:	add    BYTE PTR [rax-0x7f],dh
   14001755a:	add    DWORD PTR [rax+0x1],eax
   14001755d:	add    BYTE PTR [rax],al
   14001755f:	add    BYTE PTR [rcx],al
   140017561:	xor    BYTE PTR [rax],al
   140017563:	add    BYTE PTR [rax],al
   140017565:	add    BYTE PTR [rax],al
   140017567:	add    BYTE PTR [rax+0x1400181],al
   14001756d:	add    BYTE PTR [rax],al
   14001756f:	add    BYTE PTR [rcx],cl
   140017571:	xor    BYTE PTR [rax],al
   140017573:	add    BYTE PTR [rax],al
   140017575:	add    BYTE PTR [rax],al
   140017577:	add    BYTE PTR [rax+0x1400181],dl
   14001757d:	add    BYTE PTR [rax],al
   14001757f:	add    BYTE PTR [rdx],cl
   140017581:	xor    BYTE PTR [rax],al
   140017583:	add    BYTE PTR [rax],al
   140017585:	add    BYTE PTR [rax],al
   140017587:	add    BYTE PTR [rax+0x1400181],ah
   14001758d:	add    BYTE PTR [rax],al
   14001758f:	add    BYTE PTR [rcx],al
   140017591:	xor    al,0x0
   140017593:	add    BYTE PTR [rax],al
   140017595:	add    BYTE PTR [rax],al
   140017597:	add    BYTE PTR [rax+0x1400181],dh
   14001759d:	add    BYTE PTR [rax],al
   14001759f:	add    BYTE PTR [rcx],cl
   1400175a1:	xor    al,0x0
   1400175a3:	add    BYTE PTR [rax],al
   1400175a5:	add    BYTE PTR [rax],al
   1400175a7:	add    al,al
   1400175a9:	add    DWORD PTR [rcx],0x140
   1400175af:	add    BYTE PTR [rdx],cl
   1400175b1:	xor    al,0x0
   1400175b3:	add    BYTE PTR [rax],al
   1400175b5:	add    BYTE PTR [rax],al
   1400175b7:	add    al,dl
   1400175b9:	add    DWORD PTR [rcx],0x140
   1400175bf:	add    BYTE PTR [rcx],al
   1400175c1:	cmp    BYTE PTR [rax],al
   1400175c3:	add    BYTE PTR [rax],al
   1400175c5:	add    BYTE PTR [rax],al
   1400175c7:	add    al,ah
   1400175c9:	add    DWORD PTR [rcx],0x140
   1400175cf:	add    BYTE PTR [rdx],cl
   1400175d1:	cmp    BYTE PTR [rax],al
   1400175d3:	add    BYTE PTR [rax],al
   1400175d5:	add    BYTE PTR [rax],al
   1400175d7:	add    al,dh
   1400175d9:	add    DWORD PTR [rcx],0x140
   1400175df:	add    BYTE PTR [rcx],al
   1400175e1:	cmp    al,0x0
   1400175e3:	add    BYTE PTR [rax],al
   1400175e5:	add    BYTE PTR [rax],al
   1400175e7:	add    BYTE PTR [rax],al
   1400175e9:	(bad)  
   1400175ea:	add    DWORD PTR [rax+0x1],eax
   1400175ed:	add    BYTE PTR [rax],al
   1400175ef:	add    BYTE PTR [rdx],cl
   1400175f1:	cmp    al,0x0
   1400175f3:	add    BYTE PTR [rax],al
   1400175f5:	add    BYTE PTR [rax],al
   1400175f7:	add    BYTE PTR [rax],dl
   1400175f9:	(bad)  
   1400175fa:	add    DWORD PTR [rax+0x1],eax
   1400175fd:	add    BYTE PTR [rax],al
   1400175ff:	add    BYTE PTR [rcx],al
   140017601:	add    BYTE PTR [rax],al
   140017604:	add    BYTE PTR [rax],al
   140017606:	add    BYTE PTR [rax],al
   140017608:	and    BYTE PTR [rdx+0x14001],al
   14001760e:	add    BYTE PTR [rax],al
   140017610:	or     al,BYTE PTR [rax+0x0]
   140017613:	add    BYTE PTR [rax],al
   140017615:	add    BYTE PTR [rax],al
   140017617:	add    BYTE PTR [rax],dh
   140017619:	(bad)  
   14001761a:	add    DWORD PTR [rax+0x1],eax
   14001761d:	add    BYTE PTR [rax],al
   14001761f:	add    BYTE PTR [rdx],cl
   140017621:	add    BYTE PTR [rax],r8b
   140017624:	add    BYTE PTR [rax],al
   140017626:	add    BYTE PTR [rax],al
   140017628:	rex (bad) 
   14001762a:	add    DWORD PTR [rax+0x1],eax
   14001762d:	add    BYTE PTR [rax],al
   14001762f:	add    BYTE PTR [rdx],cl
   140017631:	rex.W add BYTE PTR [rax],al
   140017634:	add    BYTE PTR [rax],al
   140017636:	add    BYTE PTR [rax],al
   140017638:	push   rax
   140017639:	(bad)  
   14001763a:	add    DWORD PTR [rax+0x1],eax
   14001763d:	add    BYTE PTR [rax],al
   14001763f:	add    BYTE PTR [rdx],cl
   140017641:	rex.WR add BYTE PTR [rax],r8b
   140017644:	add    BYTE PTR [rax],al
   140017646:	add    BYTE PTR [rax],al
   140017648:	(bad)  
   140017649:	(bad)  
   14001764a:	add    DWORD PTR [rax+0x1],eax
   14001764d:	add    BYTE PTR [rax],al
   14001764f:	add    BYTE PTR [rdx],cl
   140017651:	push   rax
   140017652:	add    BYTE PTR [rax],al
   140017654:	add    BYTE PTR [rax],al
   140017656:	add    BYTE PTR [rax],al
   140017658:	jo     0x1400175dc
   14001765a:	add    DWORD PTR [rax+0x1],eax
   14001765d:	add    BYTE PTR [rax],al
   14001765f:	add    BYTE PTR [rsp+rdi*2],al
   140017662:	add    BYTE PTR [rax],al
   140017664:	add    BYTE PTR [rax],al
   140017666:	add    BYTE PTR [rax],al
   140017668:	add    BYTE PTR [rdx+0x14001],0x0
   14001766f:	add    BYTE PTR [rdx],bl
   140017671:	jl     0x140017673
   140017673:	add    BYTE PTR [rax],al
   140017675:	add    BYTE PTR [rax],al
   140017677:	add    BYTE PTR [rax+0x1400182],dl
   14001767d:	add    BYTE PTR [rax],al
   14001767f:	add    BYTE PTR [rcx+0x0],ah
   140017682:	jb     0x140017684
   140017684:	add    BYTE PTR [rax],al
   140017686:	add    BYTE PTR [rax],al
   140017688:	(bad)  
   140017689:	add    BYTE PTR [rdi+0x0],ah
   14001768c:	add    BYTE PTR [rax],al
   14001768e:	add    BYTE PTR [rax],al
   140017690:	movsxd eax,DWORD PTR [rax]
   140017692:	(bad)  
   140017693:	add    BYTE PTR [rax],al
   140017695:	add    BYTE PTR [rax],al
   140017697:	add    BYTE PTR [rdx+0x0],bh
   14001769a:	push   0x43002d00
   14001769f:	add    BYTE PTR [rax+0x0],cl
   1400176a2:	push   rbx
   1400176a3:	add    BYTE PTR [rax],al
   1400176a5:	add    BYTE PTR [rax],al
   1400176a7:	add    BYTE PTR [rbx+0x0],ah
   1400176aa:	jae    0x1400176ac
   1400176ac:	add    BYTE PTR [rax],al
   1400176ae:	add    BYTE PTR [rax],al
   1400176b0:	add    BYTE PTR fs:[rcx+0x0],ah
   1400176b4:	add    BYTE PTR [rax],al
   1400176b6:	add    BYTE PTR [rax],al
   1400176b8:	add    BYTE PTR fs:[rbp+0x0],ah
   1400176bc:	add    BYTE PTR [rax],al
   1400176be:	add    BYTE PTR [rax],al
   1400176c0:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   1400176c5:	add    BYTE PTR [rax],al
   1400176c7:	add    BYTE PTR [rbp+0x0],ah
   1400176ca:	outs   dx,BYTE PTR ds:[rsi]
   1400176cb:	add    BYTE PTR [rax],al
   1400176cd:	add    BYTE PTR [rax],al
   1400176cf:	add    BYTE PTR [rbp+0x0],ah
   1400176d2:	jae    0x1400176d4
   1400176d4:	add    BYTE PTR [rax],al
   1400176d6:	add    BYTE PTR [rax],al
   1400176d8:	data16 add BYTE PTR [rcx+0x0],ch
   1400176dc:	add    BYTE PTR [rax],al
   1400176de:	add    BYTE PTR [rax],al
   1400176e0:	data16 add BYTE PTR [rdx+0x0],dh
   1400176e4:	add    BYTE PTR [rax],al
   1400176e6:	add    BYTE PTR [rax],al
   1400176e8:	push   0x6500
   1400176ed:	add    BYTE PTR [rax],al
   1400176ef:	add    BYTE PTR [rax+0x0],ch
   1400176f2:	jne    0x1400176f4
   1400176f4:	add    BYTE PTR [rax],al
   1400176f6:	add    BYTE PTR [rax],al
   1400176f8:	imul   eax,DWORD PTR [rax],0x73
   1400176fe:	add    BYTE PTR [rax],al
   140017700:	imul   eax,DWORD PTR [rax],0x74
   140017706:	add    BYTE PTR [rax],al
   140017708:	push   0x0
   14001770a:	(bad)  
   14001770b:	add    BYTE PTR [rax],al
   14001770d:	add    BYTE PTR [rax],al
   14001770f:	add    BYTE PTR [rbx+0x0],ch
   140017712:	outs   dx,DWORD PTR ds:[rsi]
   140017713:	add    BYTE PTR [rax],al
   140017715:	add    BYTE PTR [rax],al
   140017717:	add    BYTE PTR [rsi+0x0],ch
   14001771a:	ins    BYTE PTR es:[rdi],dx
   14001771b:	add    BYTE PTR [rax],al
   14001771d:	add    BYTE PTR [rax],al
   14001771f:	add    BYTE PTR [rsi+0x0],ch
   140017722:	outs   dx,DWORD PTR ds:[rsi]
   140017723:	add    BYTE PTR [rax],al
   140017725:	add    BYTE PTR [rax],al
   140017727:	add    BYTE PTR [rax+0x0],dh
   14001772a:	ins    BYTE PTR es:[rdi],dx
   14001772b:	add    BYTE PTR [rax],al
   14001772d:	add    BYTE PTR [rax],al
   14001772f:	add    BYTE PTR [rax+0x0],dh
   140017732:	je     0x140017734
   140017734:	add    BYTE PTR [rax],al
   140017736:	add    BYTE PTR [rax],al
   140017738:	jb     0x14001773a
   14001773a:	outs   dx,DWORD PTR ds:[rsi]
   14001773b:	add    BYTE PTR [rax],al
   14001773d:	add    BYTE PTR [rax],al
   14001773f:	add    BYTE PTR [rdx+0x0],dh
   140017742:	jne    0x140017744
   140017744:	add    BYTE PTR [rax],al
   140017746:	add    BYTE PTR [rax],al
   140017748:	push   0x7200
   14001774d:	add    BYTE PTR [rax],al
   14001774f:	add    BYTE PTR [rbx+0x0],dh
   140017752:	imul   eax,DWORD PTR [rax],0x0
   140017755:	add    BYTE PTR [rax],al
   140017757:	add    BYTE PTR [rbx+0x0],dh
   14001775a:	jno    0x14001775c
   14001775c:	add    BYTE PTR [rax],al
   14001775e:	add    BYTE PTR [rax],al
   140017760:	jae    0x140017762
   140017762:	jbe    0x140017764
   140017764:	add    BYTE PTR [rax],al
   140017766:	add    BYTE PTR [rax],al
   140017768:	je     0x14001776a
   14001776a:	push   0x0
   14001776f:	add    BYTE PTR [rax+rax*1+0x72],dh
   140017773:	add    BYTE PTR [rax],al
   140017775:	add    BYTE PTR [rax],al
   140017777:	add    BYTE PTR [rbp+0x0],dh
   14001777a:	jb     0x14001777c
   14001777c:	add    BYTE PTR [rax],al
   14001777e:	add    BYTE PTR [rax],al
   140017780:	imul   eax,DWORD PTR [rax],0x64
   140017786:	add    BYTE PTR [rax],al
   140017788:	(bad)  
   140017789:	add    BYTE PTR [rbp+0x0],ah
   14001778c:	add    BYTE PTR [rax],al
   14001778e:	add    BYTE PTR [rax],al
   140017790:	jae    0x140017792
   140017792:	ins    BYTE PTR es:[rdi],dx
   140017793:	add    BYTE PTR [rax],al
   140017795:	add    BYTE PTR [rax],al
   140017797:	add    BYTE PTR [rbp+0x0],ah
   14001779a:	je     0x14001779c
   14001779c:	add    BYTE PTR [rax],al
   14001779e:	add    BYTE PTR [rax],al
   1400177a0:	ins    BYTE PTR es:[rdi],dx
   1400177a1:	add    BYTE PTR [rsi+0x0],dh
   1400177a4:	add    BYTE PTR [rax],al
   1400177a6:	add    BYTE PTR [rax],al
   1400177a8:	ins    BYTE PTR es:[rdi],dx
   1400177a9:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400177ad:	add    BYTE PTR [rax],al
   1400177af:	add    BYTE PTR [rsi+0x0],ah
   1400177b2:	(bad)  
   1400177b3:	add    BYTE PTR [rax],al
   1400177b5:	add    BYTE PTR [rax],al
   1400177b7:	add    BYTE PTR [rsi+0x0],dh
   1400177ba:	imul   eax,DWORD PTR [rax],0x0
   1400177c0:	push   0x7900
   1400177c5:	add    BYTE PTR [rax],al
   1400177c7:	add    BYTE PTR [rcx+0x0],ah
   1400177ca:	jp     0x1400177cc
   1400177cc:	add    BYTE PTR [rax],al
   1400177ce:	add    BYTE PTR [rax],al
   1400177d0:	add    BYTE PTR gs:[rbp+0x0],dh
   1400177d4:	add    BYTE PTR [rax],al
   1400177d6:	add    BYTE PTR [rax],al
   1400177d8:	ins    DWORD PTR es:[rdi],dx
   1400177d9:	add    BYTE PTR [rbx+0x0],ch
   1400177dc:	add    BYTE PTR [rax],al
   1400177de:	add    BYTE PTR [rax],al
   1400177e0:	(bad)  
   1400177e1:	add    BYTE PTR [rsi+0x0],ah
   1400177e4:	add    BYTE PTR [rax],al
   1400177e6:	add    BYTE PTR [rax],al
   1400177e8:	imul   eax,DWORD PTR [rax],0x61
   1400177eb:	add    BYTE PTR [rax],al
   1400177ed:	add    BYTE PTR [rax],al
   1400177ef:	add    BYTE PTR [rsi+0x0],ah
   1400177f2:	outs   dx,DWORD PTR ds:[rsi]
   1400177f3:	add    BYTE PTR [rax],al
   1400177f5:	add    BYTE PTR [rax],al
   1400177f7:	add    BYTE PTR [rax+0x0],ch
   1400177fa:	imul   eax,DWORD PTR [rax],0x0
   140017800:	ins    DWORD PTR es:[rdi],dx
   140017801:	add    BYTE PTR [rbx+0x0],dh
   140017804:	add    BYTE PTR [rax],al
   140017806:	add    BYTE PTR [rax],al
   140017808:	imul   eax,DWORD PTR [rax],0x6b
   14001780b:	add    BYTE PTR [rax],al
   14001780d:	add    BYTE PTR [rax],al
   14001780f:	add    BYTE PTR [rbx+0x0],ch
   140017812:	jns    0x140017814
   140017814:	add    BYTE PTR [rax],al
   140017816:	add    BYTE PTR [rax],al
   140017818:	jae    0x14001781a
   14001781a:	ja     0x14001781c
   14001781c:	add    BYTE PTR [rax],al
   14001781e:	add    BYTE PTR [rax],al
   140017820:	jne    0x140017822
   140017822:	jp     0x140017824
   140017824:	add    BYTE PTR [rax],al
   140017826:	add    BYTE PTR [rax],al
   140017828:	je     0x14001782a
   14001782a:	je     0x14001782c
   14001782c:	add    BYTE PTR [rax],al
   14001782e:	add    BYTE PTR [rax],al
   140017830:	jo     0x140017832
   140017832:	(bad)  
   140017833:	add    BYTE PTR [rax],al
   140017835:	add    BYTE PTR [rax],al
   140017837:	add    BYTE PTR [rdi+0x0],ah
   14001783a:	jne    0x14001783c
   14001783c:	add    BYTE PTR [rax],al
   14001783e:	add    BYTE PTR [rax],al
   140017840:	je     0x140017842
   140017842:	(bad)  
   140017843:	add    BYTE PTR [rax],al
   140017845:	add    BYTE PTR [rax],al
   140017847:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001784b:	add    BYTE PTR [rax],al
   14001784d:	add    BYTE PTR [rax],al
   14001784f:	add    BYTE PTR [rbx+0x0],ch
   140017852:	outs   dx,BYTE PTR ds:[rsi]
   140017853:	add    BYTE PTR [rax],al
   140017855:	add    BYTE PTR [rax],al
   140017857:	add    BYTE PTR [rbp+0x0],ch
   14001785a:	jb     0x14001785c
   14001785c:	add    BYTE PTR [rax],al
   14001785e:	add    BYTE PTR [rax],al
   140017860:	jae    0x140017862
   140017862:	(bad)  
   140017863:	add    BYTE PTR [rax],al
   140017865:	add    BYTE PTR [rax],al
   140017867:	add    BYTE PTR [rbp+0x0],ch
   14001786a:	outs   dx,BYTE PTR ds:[rsi]
   14001786b:	add    BYTE PTR [rax],al
   14001786d:	add    BYTE PTR [rax],al
   14001786f:	add    BYTE PTR [rdi+0x0],ah
   140017872:	ins    BYTE PTR es:[rdi],dx
   140017873:	add    BYTE PTR [rax],al
   140017875:	add    BYTE PTR [rax],al
   140017877:	add    BYTE PTR [rbx+0x0],ch
   14001787a:	outs   dx,DWORD PTR ds:[rsi]
   14001787b:	add    BYTE PTR [rbx+0x0],ch
   14001787e:	add    BYTE PTR [rax],al
   140017880:	jae    0x140017882
   140017882:	jns    0x140017884
   140017884:	jb     0x140017886
   140017886:	add    BYTE PTR [rax],al
   140017888:	add    BYTE PTR fs:[rcx+0x0],ch
   14001788c:	jbe    0x14001788e
	...
   140017896:	add    BYTE PTR [rax],al
   140017898:	(bad)  
   140017899:	add    BYTE PTR [rdx+0x0],dh
   14001789c:	sub    eax,0x41005300
   1400178a1:	add    BYTE PTR [rax],al
   1400178a3:	add    BYTE PTR [rax],al
   1400178a5:	add    BYTE PTR [rax],al
   1400178a7:	add    BYTE PTR [rdx+0x0],ah
   1400178aa:	add    BYTE PTR [eip+0x47004200],ch        # 0x18701bab1
   1400178b1:	add    BYTE PTR [rax],al
   1400178b3:	add    BYTE PTR [rax],al
   1400178b5:	add    BYTE PTR [rax],al
   1400178b7:	add    BYTE PTR [rbx+0x0],ah
   1400178ba:	(bad)  
   1400178bb:	add    BYTE PTR [rip+0x53004500],ch        # 0x19301bdc1
   1400178c1:	add    BYTE PTR [rax],al
   1400178c3:	add    BYTE PTR [rax],al
   1400178c5:	add    BYTE PTR [rax],al
   1400178c7:	add    BYTE PTR [rbx+0x0],ah
   1400178ca:	jae    0x1400178cc
   1400178cc:	sub    eax,0x5a004300
   1400178d1:	add    BYTE PTR [rax],al
   1400178d3:	add    BYTE PTR [rax],al
   1400178d5:	add    BYTE PTR [rax],al
   1400178d7:	add    BYTE PTR [rax+rax*1+0x61],ah
   1400178db:	add    BYTE PTR [rip+0x4b004400],ch        # 0x18b01bce1
   1400178e1:	add    BYTE PTR [rax],al
   1400178e3:	add    BYTE PTR [rax],al
   1400178e5:	add    BYTE PTR [rax],al
   1400178e7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400178eb:	add    BYTE PTR [rip+0x45004400],ch        # 0x18501bcf1
   1400178f1:	add    BYTE PTR [rax],al
   1400178f3:	add    BYTE PTR [rax],al
   1400178f5:	add    BYTE PTR [rax],al
   1400178f7:	add    BYTE PTR [rbp+0x0],ah
   1400178fa:	ins    BYTE PTR es:[rdi],dx
   1400178fb:	add    BYTE PTR [rip+0x52004700],ch        # 0x19201c001
   140017901:	add    BYTE PTR [rax],al
   140017903:	add    BYTE PTR [rax],al
   140017905:	add    BYTE PTR [rax],al
   140017907:	add    BYTE PTR [rsi+0x0],ah
   14001790a:	imul   eax,DWORD PTR [rax],0x46002d
   140017910:	rex.WB add BYTE PTR [r8],al
   140017913:	add    BYTE PTR [rax],al
   140017915:	add    BYTE PTR [rax],al
   140017917:	add    BYTE PTR [rsi+0x0],ah
   14001791a:	jb     0x14001791c
   14001791c:	sub    eax,0x52004600
   140017921:	add    BYTE PTR [rax],al
   140017923:	add    BYTE PTR [rax],al
   140017925:	add    BYTE PTR [rax],al
   140017927:	add    BYTE PTR [rax+0x0],ch
   14001792a:	add    BYTE PTR gs:[rip+0x4c004900],ch        # 0x18c01c231
   140017931:	add    BYTE PTR [rax],al
   140017933:	add    BYTE PTR [rax],al
   140017935:	add    BYTE PTR [rax],al
   140017937:	add    BYTE PTR [rax+0x0],ch
   14001793a:	jne    0x14001793c
   14001793c:	sub    eax,0x55004800
   140017941:	add    BYTE PTR [rax],al
   140017943:	add    BYTE PTR [rax],al
   140017945:	add    BYTE PTR [rax],al
   140017947:	add    BYTE PTR [rcx+0x0],ch
   14001794a:	jae    0x14001794c
   14001794c:	sub    eax,0x53004900
   140017951:	add    BYTE PTR [rax],al
   140017953:	add    BYTE PTR [rax],al
   140017955:	add    BYTE PTR [rax],al
   140017957:	add    BYTE PTR [rcx+0x0],ch
   14001795a:	je     0x14001795c
   14001795c:	sub    eax,0x54004900
   140017961:	add    BYTE PTR [rax],al
   140017963:	add    BYTE PTR [rax],al
   140017965:	add    BYTE PTR [rax],al
   140017967:	add    BYTE PTR [rsi+0x0],ch
   14001796a:	ins    BYTE PTR es:[rdi],dx
   14001796b:	add    BYTE PTR [rip+0x4c004e00],ch        # 0x18c01c771
   140017971:	add    BYTE PTR [rax],al
   140017973:	add    BYTE PTR [rax],al
   140017975:	add    BYTE PTR [rax],al
   140017977:	add    BYTE PTR [rsi+0x0],ch
   14001797a:	(bad)  
   14001797b:	add    BYTE PTR [rip+0x4f004e00],ch        # 0x18f01c781
   140017981:	add    BYTE PTR [rax],al
   140017983:	add    BYTE PTR [rax],al
   140017985:	add    BYTE PTR [rax],al
   140017987:	add    BYTE PTR [rax+0x0],dh
   14001798a:	ins    BYTE PTR es:[rdi],dx
   14001798b:	add    BYTE PTR [rip+0x4c005000],ch        # 0x18c01c991
   140017991:	add    BYTE PTR [rax],al
   140017993:	add    BYTE PTR [rax],al
   140017995:	add    BYTE PTR [rax],al
   140017997:	add    BYTE PTR [rax+0x0],dh
   14001799a:	je     0x14001799c
   14001799c:	sub    eax,0x52004200
   1400179a1:	add    BYTE PTR [rax],al
   1400179a3:	add    BYTE PTR [rax],al
   1400179a5:	add    BYTE PTR [rax],al
   1400179a7:	add    BYTE PTR [rdx+0x0],dh
   1400179aa:	outs   dx,DWORD PTR ds:[rsi]
   1400179ab:	add    BYTE PTR [rip+0x4f005200],ch        # 0x18f01cbb1
   1400179b1:	add    BYTE PTR [rax],al
   1400179b3:	add    BYTE PTR [rax],al
   1400179b5:	add    BYTE PTR [rax],al
   1400179b7:	add    BYTE PTR [rdx+0x0],dh
   1400179ba:	jne    0x1400179bc
   1400179bc:	sub    eax,0x55005200
   1400179c1:	add    BYTE PTR [rax],al
   1400179c3:	add    BYTE PTR [rax],al
   1400179c5:	add    BYTE PTR [rax],al
   1400179c7:	add    BYTE PTR [rax+0x0],ch
   1400179ca:	jb     0x1400179cc
   1400179cc:	sub    eax,0x52004800
   1400179d1:	add    BYTE PTR [rax],al
   1400179d3:	add    BYTE PTR [rax],al
   1400179d5:	add    BYTE PTR [rax],al
   1400179d7:	add    BYTE PTR [rbx+0x0],dh
   1400179da:	imul   eax,DWORD PTR [rax],0x2d
   1400179dd:	add    BYTE PTR [rbx+0x0],dl
   1400179e0:	rex.WXB add BYTE PTR [r8],al
   1400179e3:	add    BYTE PTR [rax],al
   1400179e5:	add    BYTE PTR [rax],al
   1400179e7:	add    BYTE PTR [rbx+0x0],dh
   1400179ea:	jno    0x1400179ec
   1400179ec:	sub    eax,0x4c004100
   1400179f1:	add    BYTE PTR [rax],al
   1400179f3:	add    BYTE PTR [rax],al
   1400179f5:	add    BYTE PTR [rax],al
   1400179f7:	add    BYTE PTR [rbx+0x0],dh
   1400179fa:	jbe    0x1400179fc
   1400179fc:	sub    eax,0x45005300
   140017a01:	add    BYTE PTR [rax],al
   140017a03:	add    BYTE PTR [rax],al
   140017a05:	add    BYTE PTR [rax],al
   140017a07:	add    BYTE PTR [rax+rax*1+0x68],dh
   140017a0b:	add    BYTE PTR [rip+0x48005400],ch        # 0x18801ce11
   140017a11:	add    BYTE PTR [rax],al
   140017a13:	add    BYTE PTR [rax],al
   140017a15:	add    BYTE PTR [rax],al
   140017a17:	add    BYTE PTR [rax+rax*1+0x72],dh
   140017a1b:	add    BYTE PTR [rip+0x52005400],ch        # 0x19201ce21
   140017a21:	add    BYTE PTR [rax],al
   140017a23:	add    BYTE PTR [rax],al
   140017a25:	add    BYTE PTR [rax],al
   140017a27:	add    BYTE PTR [rbp+0x0],dh
   140017a2a:	jb     0x140017a2c
   140017a2c:	sub    eax,0x4b005000
   140017a31:	add    BYTE PTR [rax],al
   140017a33:	add    BYTE PTR [rax],al
   140017a35:	add    BYTE PTR [rax],al
   140017a37:	add    BYTE PTR [rcx+0x0],ch
   140017a3a:	add    BYTE PTR fs:[rip+0x44004900],ch        # 0x18401c341
   140017a41:	add    BYTE PTR [rax],al
   140017a43:	add    BYTE PTR [rax],al
   140017a45:	add    BYTE PTR [rax],al
   140017a47:	add    BYTE PTR [rbp+0x0],dh
   140017a4a:	imul   eax,DWORD PTR [rax],0x2d
   140017a4d:	add    BYTE PTR [rbp+0x0],dl
   140017a50:	add    BYTE PTR [r8],al
   140017a53:	add    BYTE PTR [rax],al
   140017a55:	add    BYTE PTR [rax],al
   140017a57:	add    BYTE PTR [rdx+0x0],ah
   140017a5a:	add    BYTE PTR gs:[rip+0x59004200],ch        # 0x19901bc61
   140017a61:	add    BYTE PTR [rax],al
   140017a63:	add    BYTE PTR [rax],al
   140017a65:	add    BYTE PTR [rax],al
   140017a67:	add    BYTE PTR [rbx+0x0],dh
   140017a6a:	ins    BYTE PTR es:[rdi],dx
   140017a6b:	add    BYTE PTR [rip+0x49005300],ch        # 0x18901cd71
   140017a71:	add    BYTE PTR [rax],al
   140017a73:	add    BYTE PTR [rax],al
   140017a75:	add    BYTE PTR [rax],al
   140017a77:	add    BYTE PTR [rbp+0x0],ah
   140017a7a:	je     0x140017a7c
   140017a7c:	sub    eax,0x45004500
   140017a81:	add    BYTE PTR [rax],al
   140017a83:	add    BYTE PTR [rax],al
   140017a85:	add    BYTE PTR [rax],al
   140017a87:	add    BYTE PTR [rax+rax*1+0x76],ch
   140017a8b:	add    BYTE PTR [rip+0x56004c00],ch        # 0x19601c691
   140017a91:	add    BYTE PTR [rax],al
   140017a93:	add    BYTE PTR [rax],al
   140017a95:	add    BYTE PTR [rax],al
   140017a97:	add    BYTE PTR [rax+rax*1+0x74],ch
   140017a9b:	add    BYTE PTR [rip+0x54004c00],ch        # 0x19401c6a1
   140017aa1:	add    BYTE PTR [rax],al
   140017aa3:	add    BYTE PTR [rax],al
   140017aa5:	add    BYTE PTR [rax],al
   140017aa7:	add    BYTE PTR [rsi+0x0],ah
   140017aaa:	(bad)  
   140017aab:	add    BYTE PTR [rip+0x52004900],ch        # 0x19201c3b1
   140017ab1:	add    BYTE PTR [rax],al
   140017ab3:	add    BYTE PTR [rax],al
   140017ab5:	add    BYTE PTR [rax],al
   140017ab7:	add    BYTE PTR [rsi+0x0],dh
   140017aba:	imul   eax,DWORD PTR [rax],0x56002d
   140017ac0:	rex.WRX add BYTE PTR [rax],r8b
   140017ac3:	add    BYTE PTR [rax],al
   140017ac5:	add    BYTE PTR [rax],al
   140017ac7:	add    BYTE PTR [rax+0x0],ch
   140017aca:	jns    0x140017acc
   140017acc:	sub    eax,0x4d004100
   140017ad1:	add    BYTE PTR [rax],al
   140017ad3:	add    BYTE PTR [rax],al
   140017ad5:	add    BYTE PTR [rax],al
   140017ad7:	add    BYTE PTR [rcx+0x0],ah
   140017ada:	jp     0x140017adc
   140017adc:	sub    eax,0x5a004100
   140017ae1:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a101c6e7
   140017ae7:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140017aeb:	add    BYTE PTR [rax],al
   140017aed:	add    BYTE PTR [rax],al
   140017aef:	add    BYTE PTR [rbp+0x0],ah
   140017af2:	jne    0x140017af4
   140017af4:	sub    eax,0x53004500
   140017af9:	add    BYTE PTR [rax],al
   140017afb:	add    BYTE PTR [rax],al
   140017afd:	add    BYTE PTR [rax],al
   140017aff:	add    BYTE PTR [rbp+0x0],ch
   140017b02:	imul   eax,DWORD PTR [rax],0x2d
   140017b05:	add    BYTE PTR [rbp+0x0],cl
   140017b08:	rex.WXB add BYTE PTR [r8],al
   140017b0b:	add    BYTE PTR [rax],al
   140017b0d:	add    BYTE PTR [rax],al
   140017b0f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140017b13:	add    BYTE PTR [rip+0x41005a00],ch        # 0x18101d519
   140017b19:	add    BYTE PTR [rax],al
   140017b1b:	add    BYTE PTR [rax],al
   140017b1d:	add    BYTE PTR [rax],al
   140017b1f:	add    BYTE PTR [rax+0x0],bh
   140017b22:	push   0x5a002d00
   140017b27:	add    BYTE PTR [rcx+0x0],al
   140017b2a:	add    BYTE PTR [rax],al
   140017b2c:	add    BYTE PTR [rax],al
   140017b2e:	add    BYTE PTR [rax],al
   140017b30:	jp     0x140017b32
   140017b32:	jne    0x140017b34
   140017b34:	sub    eax,0x41005a00
   140017b39:	add    BYTE PTR [rax],al
   140017b3b:	add    BYTE PTR [rax],al
   140017b3d:	add    BYTE PTR [rax],al
   140017b3f:	add    BYTE PTR [rcx+0x0],ah
   140017b42:	data16 add BYTE PTR [rip+0x41005a00],ch        # 0x18101d549
   140017b49:	add    BYTE PTR [rax],al
   140017b4b:	add    BYTE PTR [rax],al
   140017b4d:	add    BYTE PTR [rax],al
   140017b4f:	add    BYTE PTR [rbx+0x0],ch
   140017b52:	(bad)  
   140017b53:	add    BYTE PTR [rip+0x45004700],ch        # 0x18501c259
   140017b59:	add    BYTE PTR [rax],al
   140017b5b:	add    BYTE PTR [rax],al
   140017b5d:	add    BYTE PTR [rax],al
   140017b5f:	add    BYTE PTR [rsi+0x0],ah
   140017b62:	outs   dx,DWORD PTR ds:[rsi]
   140017b63:	add    BYTE PTR [rip+0x4f004600],ch        # 0x18f01c169
   140017b69:	add    BYTE PTR [rax],al
   140017b6b:	add    BYTE PTR [rax],al
   140017b6d:	add    BYTE PTR [rax],al
   140017b6f:	add    BYTE PTR [rax+0x0],ch
   140017b72:	imul   eax,DWORD PTR [rax],0x49002d
   140017b78:	rex.WRX add BYTE PTR [rax],r8b
   140017b7b:	add    BYTE PTR [rax],al
   140017b7d:	add    BYTE PTR [rax],al
   140017b7f:	add    BYTE PTR [rbp+0x0],ch
   140017b82:	je     0x140017b84
   140017b84:	sub    eax,0x54004d00
   140017b89:	add    BYTE PTR [rax],al
   140017b8b:	add    BYTE PTR [rax],al
   140017b8d:	add    BYTE PTR [rax],al
   140017b8f:	add    BYTE PTR [rbx+0x0],dh
   140017b92:	add    BYTE PTR gs:[rip+0x4f004e00],ch        # 0x18f01c999
   140017b99:	add    BYTE PTR [rax],al
   140017b9b:	add    BYTE PTR [rax],al
   140017b9d:	add    BYTE PTR [rax],al
   140017b9f:	add    BYTE PTR [rbp+0x0],ch
   140017ba2:	jae    0x140017ba4
   140017ba4:	sub    eax,0x59004d00
   140017ba9:	add    BYTE PTR [rax],al
   140017bab:	add    BYTE PTR [rax],al
   140017bad:	add    BYTE PTR [rax],al
   140017baf:	add    BYTE PTR [rbx+0x0],ch
   140017bb2:	imul   eax,DWORD PTR [rax],0x2d
   140017bb5:	add    BYTE PTR [rbx+0x0],cl
   140017bb8:	pop    rdx
   140017bb9:	add    BYTE PTR [rax],al
   140017bbb:	add    BYTE PTR [rax],al
   140017bbd:	add    BYTE PTR [rax],al
   140017bbf:	add    BYTE PTR [rbx+0x0],ch
   140017bc2:	jns    0x140017bc4
   140017bc4:	sub    eax,0x47004b00
   140017bc9:	add    BYTE PTR [rax],al
   140017bcb:	add    BYTE PTR [rax],al
   140017bcd:	add    BYTE PTR [rax],al
   140017bcf:	add    BYTE PTR [rbx+0x0],dh
   140017bd2:	ja     0x140017bd4
   140017bd4:	sub    eax,0x45004b00
   140017bd9:	add    BYTE PTR [rax],al
   140017bdb:	add    BYTE PTR [rax],al
   140017bdd:	add    BYTE PTR [rax],al
   140017bdf:	add    BYTE PTR [rbp+0x0],dh
   140017be2:	jp     0x140017be4
   140017be4:	sub    eax,0x5a005500
   140017be9:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a101c7ef
   140017bef:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140017bf3:	add    BYTE PTR [rax],al
   140017bf5:	add    BYTE PTR [rax],al
   140017bf7:	add    BYTE PTR [rax+rax*1+0x74],dh
   140017bfb:	add    BYTE PTR [rip+0x55005200],ch        # 0x19501ce01
   140017c01:	add    BYTE PTR [rax],al
   140017c03:	add    BYTE PTR [rax],al
   140017c05:	add    BYTE PTR [rax],al
   140017c07:	add    BYTE PTR [rdx+0x0],ah
   140017c0a:	outs   dx,BYTE PTR ds:[rsi]
   140017c0b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e01c511
   140017c11:	add    BYTE PTR [rax],al
   140017c13:	add    BYTE PTR [rax],al
   140017c15:	add    BYTE PTR [rax],al
   140017c17:	add    BYTE PTR [rax+0x0],dh
   140017c1a:	(bad)  
   140017c1b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e01c521
   140017c21:	add    BYTE PTR [rax],al
   140017c23:	add    BYTE PTR [rax],al
   140017c25:	add    BYTE PTR [rax],al
   140017c27:	add    BYTE PTR [rdi+0x0],ah
   140017c2a:	jne    0x140017c2c
   140017c2c:	sub    eax,0x4e004900
   140017c31:	add    BYTE PTR [rax],al
   140017c33:	add    BYTE PTR [rax],al
   140017c35:	add    BYTE PTR [rax],al
   140017c37:	add    BYTE PTR [rax+rax*1+0x61],dh
   140017c3b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e01c541
   140017c41:	add    BYTE PTR [rax],al
   140017c43:	add    BYTE PTR [rax],al
   140017c45:	add    BYTE PTR [rax],al
   140017c47:	add    BYTE PTR [rax+rax*1+0x65],dh
   140017c4b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e01c551
   140017c51:	add    BYTE PTR [rax],al
   140017c53:	add    BYTE PTR [rax],al
   140017c55:	add    BYTE PTR [rax],al
   140017c57:	add    BYTE PTR [rbx+0x0],ch
   140017c5a:	outs   dx,BYTE PTR ds:[rsi]
   140017c5b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e01c561
   140017c61:	add    BYTE PTR [rax],al
   140017c63:	add    BYTE PTR [rax],al
   140017c65:	add    BYTE PTR [rax],al
   140017c67:	add    BYTE PTR [rbp+0x0],ch
   140017c6a:	ins    BYTE PTR es:[rdi],dx
   140017c6b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e01c571
   140017c71:	add    BYTE PTR [rax],al
   140017c73:	add    BYTE PTR [rax],al
   140017c75:	add    BYTE PTR [rax],al
   140017c77:	add    BYTE PTR [rbp+0x0],ch
   140017c7a:	jb     0x140017c7c
   140017c7c:	sub    eax,0x4e004900
   140017c81:	add    BYTE PTR [rax],al
   140017c83:	add    BYTE PTR [rax],al
   140017c85:	add    BYTE PTR [rax],al
   140017c87:	add    BYTE PTR [rbx+0x0],dh
   140017c8a:	(bad)  
   140017c8b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e01c591
   140017c91:	add    BYTE PTR [rax],al
   140017c93:	add    BYTE PTR [rax],al
   140017c95:	add    BYTE PTR [rax],al
   140017c97:	add    BYTE PTR [rbp+0x0],ch
   140017c9a:	outs   dx,BYTE PTR ds:[rsi]
   140017c9b:	add    BYTE PTR [rip+0x4e004d00],ch        # 0x18e01c9a1
   140017ca1:	add    BYTE PTR [rax],al
   140017ca3:	add    BYTE PTR [rax],al
   140017ca5:	add    BYTE PTR [rax],al
   140017ca7:	add    BYTE PTR [rbx+0x0],ah
   140017caa:	jns    0x140017cac
   140017cac:	sub    eax,0x42004700
   140017cb1:	add    BYTE PTR [rax],al
   140017cb3:	add    BYTE PTR [rax],al
   140017cb5:	add    BYTE PTR [rax],al
   140017cb7:	add    BYTE PTR [rdi+0x0],ah
   140017cba:	ins    BYTE PTR es:[rdi],dx
   140017cbb:	add    BYTE PTR [rip+0x53004500],ch        # 0x19301c1c1
   140017cc1:	add    BYTE PTR [rax],al
   140017cc3:	add    BYTE PTR [rax],al
   140017cc5:	add    BYTE PTR [rax],al
   140017cc7:	add    BYTE PTR [rbx+0x0],ch
   140017cca:	outs   dx,DWORD PTR ds:[rsi]
   140017ccb:	add    BYTE PTR [rbx+0x0],ch
   140017cce:	sub    eax,0x4e004900
   140017cd3:	add    BYTE PTR [rax],al
   140017cd5:	add    BYTE PTR [rax],al
   140017cd7:	add    BYTE PTR [rbx+0x0],dh
   140017cda:	jns    0x140017cdc
   140017cdc:	jb     0x140017cde
   140017cde:	sub    eax,0x59005300
   140017ce3:	add    BYTE PTR [rax],al
   140017ce5:	add    BYTE PTR [rax],al
   140017ce7:	add    BYTE PTR [rax+rax*1+0x69],ah
   140017ceb:	add    BYTE PTR [rsi+0x0],dh
   140017cee:	sub    eax,0x56004d00
   140017cf3:	add    BYTE PTR [rax],al
   140017cf5:	add    BYTE PTR [rax],al
   140017cf7:	add    BYTE PTR [rcx+0x0],dh
   140017cfa:	jne    0x140017cfc
   140017cfc:	jp     0x140017cfe
   140017cfe:	sub    eax,0x4f004200
   140017d03:	add    BYTE PTR [rax],al
   140017d05:	add    BYTE PTR [rax],al
   140017d07:	add    BYTE PTR [rsi+0x0],ch
   140017d0a:	jae    0x140017d0c
   140017d0c:	sub    eax,0x41005a00
   140017d11:	add    BYTE PTR [rax],al
   140017d13:	add    BYTE PTR [rax],al
   140017d15:	add    BYTE PTR [rax],al
   140017d17:	add    BYTE PTR [rbp+0x0],ch
   140017d1a:	imul   eax,DWORD PTR [rax],0x4e002d
   140017d20:	pop    rdx
   140017d21:	add    BYTE PTR [rax],al
   140017d23:	add    BYTE PTR [rax],al
   140017d25:	add    BYTE PTR [rax],al
   140017d27:	add    BYTE PTR [rcx+0x0],ah
   140017d2a:	jb     0x140017d2c
   140017d2c:	sub    eax,0x51004900
   140017d31:	add    BYTE PTR [rax],al
   140017d33:	add    BYTE PTR [rax],al
   140017d35:	add    BYTE PTR [rax],al
   140017d37:	add    BYTE PTR [rax+rax*1+0x65],ah
   140017d3b:	add    BYTE PTR [rip+0x48004300],ch        # 0x18801c041
   140017d41:	add    BYTE PTR [rax],al
   140017d43:	add    BYTE PTR [rax],al
   140017d45:	add    BYTE PTR [rax],al
   140017d47:	add    BYTE PTR [rbp+0x0],ah
   140017d4a:	outs   dx,BYTE PTR ds:[rsi]
   140017d4b:	add    BYTE PTR [rip+0x42004700],ch        # 0x18201c451
   140017d51:	add    BYTE PTR [rax],al
   140017d53:	add    BYTE PTR [rax],al
   140017d55:	add    BYTE PTR [rax],al
   140017d57:	add    BYTE PTR [rbp+0x0],ah
   140017d5a:	jae    0x140017d5c
   140017d5c:	sub    eax,0x58004d00
   140017d61:	add    BYTE PTR [rax],al
   140017d63:	add    BYTE PTR [rax],al
   140017d65:	add    BYTE PTR [rax],al
   140017d67:	add    BYTE PTR [rsi+0x0],ah
   140017d6a:	jb     0x140017d6c
   140017d6c:	sub    eax,0x45004200
   140017d71:	add    BYTE PTR [rax],al
   140017d73:	add    BYTE PTR [rax],al
   140017d75:	add    BYTE PTR [rax],al
   140017d77:	add    BYTE PTR [rcx+0x0],ch
   140017d7a:	je     0x140017d7c
   140017d7c:	sub    eax,0x48004300
   140017d81:	add    BYTE PTR [rax],al
   140017d83:	add    BYTE PTR [rax],al
   140017d85:	add    BYTE PTR [rax],al
   140017d87:	add    BYTE PTR [rsi+0x0],ch
   140017d8a:	ins    BYTE PTR es:[rdi],dx
   140017d8b:	add    BYTE PTR [rip+0x45004200],ch        # 0x18501bf91
   140017d91:	add    BYTE PTR [rax],al
   140017d93:	add    BYTE PTR [rax],al
   140017d95:	add    BYTE PTR [rax],al
   140017d97:	add    BYTE PTR [rsi+0x0],ch
   140017d9a:	outs   dx,BYTE PTR ds:[rsi]
   140017d9b:	add    BYTE PTR [rip+0x4f004e00],ch        # 0x18f01cba1
   140017da1:	add    BYTE PTR [rax],al
   140017da3:	add    BYTE PTR [rax],al
   140017da5:	add    BYTE PTR [rax],al
   140017da7:	add    BYTE PTR [rax+0x0],dh
   140017daa:	je     0x140017dac
   140017dac:	sub    eax,0x54005000
   140017db1:	add    BYTE PTR [rax],al
   140017db3:	add    BYTE PTR [rax],al
   140017db5:	add    BYTE PTR [rax],al
   140017db7:	add    BYTE PTR [rbx+0x0],dh
   140017dba:	jb     0x140017dbc
   140017dbc:	sub    eax,0x50005300
   140017dc1:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a101c9c7
   140017dc7:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140017dcb:	add    BYTE PTR [rax],al
   140017dcd:	add    BYTE PTR [rax],al
   140017dcf:	add    BYTE PTR [rbx+0x0],dh
   140017dd2:	jbe    0x140017dd4
   140017dd4:	sub    eax,0x49004600
   140017dd9:	add    BYTE PTR [rax],al
   140017ddb:	add    BYTE PTR [rax],al
   140017ddd:	add    BYTE PTR [rax],al
   140017ddf:	add    BYTE PTR [rcx+0x0],ah
   140017de2:	jp     0x140017de4
   140017de4:	sub    eax,0x5a004100
   140017de9:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b901c0ef
   140017def:	add    BYTE PTR [rdx+0x0],dh
   140017df2:	ins    BYTE PTR es:[rdi],dx
   140017df3:	add    BYTE PTR [rax],al
   140017df5:	add    BYTE PTR [rax],al
   140017df7:	add    BYTE PTR [rbx+0x0],dh
   140017dfa:	add    BYTE PTR gs:[rip+0x45005300],ch        # 0x18501d101
   140017e01:	add    BYTE PTR [rax],al
   140017e03:	add    BYTE PTR [rax],al
   140017e05:	add    BYTE PTR [rax],al
   140017e07:	add    BYTE PTR [rbp+0x0],ch
   140017e0a:	jae    0x140017e0c
   140017e0c:	sub    eax,0x4e004200
   140017e11:	add    BYTE PTR [rax],al
   140017e13:	add    BYTE PTR [rax],al
   140017e15:	add    BYTE PTR [rax],al
   140017e17:	add    BYTE PTR [rbp+0x0],dh
   140017e1a:	jp     0x140017e1c
   140017e1c:	sub    eax,0x5a005500
   140017e21:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b901c127
   140017e27:	add    BYTE PTR [rdx+0x0],dh
   140017e2a:	ins    BYTE PTR es:[rdi],dx
   140017e2b:	add    BYTE PTR [rax],al
   140017e2d:	add    BYTE PTR [rax],al
   140017e2f:	add    BYTE PTR [rcx+0x0],dh
   140017e32:	jne    0x140017e34
   140017e34:	jp     0x140017e36
   140017e36:	sub    eax,0x43004500
   140017e3b:	add    BYTE PTR [rax],al
   140017e3d:	add    BYTE PTR [rax],al
   140017e3f:	add    BYTE PTR [rcx+0x0],ah
   140017e42:	jb     0x140017e44
   140017e44:	sub    eax,0x47004500
   140017e49:	add    BYTE PTR [rax],al
   140017e4b:	add    BYTE PTR [rax],al
   140017e4d:	add    BYTE PTR [rax],al
   140017e4f:	add    BYTE PTR [rdx+0x0],bh
   140017e52:	push   0x48002d00
   140017e57:	add    BYTE PTR [rbx+0x0],cl
   140017e5a:	add    BYTE PTR [rax],al
   140017e5c:	add    BYTE PTR [rax],al
   140017e5e:	add    BYTE PTR [rax],al
   140017e60:	add    BYTE PTR fs:[rbp+0x0],ah
   140017e64:	sub    eax,0x54004100
   140017e69:	add    BYTE PTR [rax],al
   140017e6b:	add    BYTE PTR [rax],al
   140017e6d:	add    BYTE PTR [rax],al
   140017e6f:	add    BYTE PTR [rbp+0x0],ah
   140017e72:	outs   dx,BYTE PTR ds:[rsi]
   140017e73:	add    BYTE PTR [rip+0x55004100],ch        # 0x19501bf79
   140017e79:	add    BYTE PTR [rax],al
   140017e7b:	add    BYTE PTR [rax],al
   140017e7d:	add    BYTE PTR [rax],al
   140017e7f:	add    BYTE PTR [rbp+0x0],ah
   140017e82:	jae    0x140017e84
   140017e84:	sub    eax,0x53004500
   140017e89:	add    BYTE PTR [rax],al
   140017e8b:	add    BYTE PTR [rax],al
   140017e8d:	add    BYTE PTR [rax],al
   140017e8f:	add    BYTE PTR [rsi+0x0],ah
   140017e92:	jb     0x140017e94
   140017e94:	sub    eax,0x41004300
   140017e99:	add    BYTE PTR [rax],al
   140017e9b:	add    BYTE PTR [rax],al
   140017e9d:	add    BYTE PTR [rax],al
   140017e9f:	add    BYTE PTR [rbx+0x0],dh
   140017ea2:	jb     0x140017ea4
   140017ea4:	sub    eax,0x50005300
   140017ea9:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b901c1af
   140017eaf:	add    BYTE PTR [rdx+0x0],dh
   140017eb2:	ins    BYTE PTR es:[rdi],dx
   140017eb3:	add    BYTE PTR [rax],al
   140017eb5:	add    BYTE PTR [rax],al
   140017eb7:	add    BYTE PTR [rbx+0x0],dh
   140017eba:	add    BYTE PTR gs:[rip+0x49004600],ch        # 0x18901c4c1
   140017ec1:	add    BYTE PTR [rax],al
   140017ec3:	add    BYTE PTR [rax],al
   140017ec5:	add    BYTE PTR [rax],al
   140017ec7:	add    BYTE PTR [rcx+0x0],dh
   140017eca:	jne    0x140017ecc
   140017ecc:	jp     0x140017ece
   140017ece:	sub    eax,0x45005000
   140017ed3:	add    BYTE PTR [rax],al
   140017ed5:	add    BYTE PTR [rax],al
   140017ed7:	add    BYTE PTR [rcx+0x0],ah
   140017eda:	jb     0x140017edc
   140017edc:	sub    eax,0x59004c00
   140017ee1:	add    BYTE PTR [rax],al
   140017ee3:	add    BYTE PTR [rax],al
   140017ee5:	add    BYTE PTR [rax],al
   140017ee7:	add    BYTE PTR [rdx+0x0],bh
   140017eea:	push   0x53002d00
   140017eef:	add    BYTE PTR [rdi+0x0],al
   140017ef2:	add    BYTE PTR [rax],al
   140017ef4:	add    BYTE PTR [rax],al
   140017ef6:	add    BYTE PTR [rax],al
   140017ef8:	add    BYTE PTR fs:[rbp+0x0],ah
   140017efc:	sub    eax,0x55004c00
   140017f01:	add    BYTE PTR [rax],al
   140017f03:	add    BYTE PTR [rax],al
   140017f05:	add    BYTE PTR [rax],al
   140017f07:	add    BYTE PTR [rbp+0x0],ah
   140017f0a:	outs   dx,BYTE PTR ds:[rsi]
   140017f0b:	add    BYTE PTR [rip+0x41004300],ch        # 0x18101c211
   140017f11:	add    BYTE PTR [rax],al
   140017f13:	add    BYTE PTR [rax],al
   140017f15:	add    BYTE PTR [rax],al
   140017f17:	add    BYTE PTR [rbp+0x0],ah
   140017f1a:	jae    0x140017f1c
   140017f1c:	sub    eax,0x54004700
   140017f21:	add    BYTE PTR [rax],al
   140017f23:	add    BYTE PTR [rax],al
   140017f25:	add    BYTE PTR [rax],al
   140017f27:	add    BYTE PTR [rsi+0x0],ah
   140017f2a:	jb     0x140017f2c
   140017f2c:	sub    eax,0x48004300
   140017f31:	add    BYTE PTR [rax],al
   140017f33:	add    BYTE PTR [rax],al
   140017f35:	add    BYTE PTR [rax],al
   140017f37:	add    BYTE PTR [rax+0x0],ch
   140017f3a:	jb     0x140017f3c
   140017f3c:	sub    eax,0x41004200
   140017f41:	add    BYTE PTR [rax],al
   140017f43:	add    BYTE PTR [rax],al
   140017f45:	add    BYTE PTR [rax],al
   140017f47:	add    BYTE PTR [rbx+0x0],dh
   140017f4a:	ins    DWORD PTR es:[rdi],dx
   140017f4b:	add    BYTE PTR [rdx+0x0],ch
   140017f4e:	sub    eax,0x4f004e00
   140017f53:	add    BYTE PTR [rax],al
   140017f55:	add    BYTE PTR [rax],al
   140017f57:	add    BYTE PTR [rcx+0x0],ah
   140017f5a:	jb     0x140017f5c
   140017f5c:	sub    eax,0x5a004400
   140017f61:	add    BYTE PTR [rax],al
   140017f63:	add    BYTE PTR [rax],al
   140017f65:	add    BYTE PTR [rax],al
   140017f67:	add    BYTE PTR [rdx+0x0],bh
   140017f6a:	push   0x4d002d00
   140017f6f:	add    BYTE PTR [rdi+0x0],cl
   140017f72:	add    BYTE PTR [rax],al
   140017f74:	add    BYTE PTR [rax],al
   140017f76:	add    BYTE PTR [rax],al
   140017f78:	add    BYTE PTR fs:[rbp+0x0],ah
   140017f7c:	sub    eax,0x49004c00
   140017f81:	add    BYTE PTR [rax],al
   140017f83:	add    BYTE PTR [rax],al
   140017f85:	add    BYTE PTR [rax],al
   140017f87:	add    BYTE PTR [rbp+0x0],ah
   140017f8a:	outs   dx,BYTE PTR ds:[rsi]
   140017f8b:	add    BYTE PTR [rip+0x5a004e00],ch        # 0x19a01cd91
   140017f91:	add    BYTE PTR [rax],al
   140017f93:	add    BYTE PTR [rax],al
   140017f95:	add    BYTE PTR [rax],al
   140017f97:	add    BYTE PTR [rbp+0x0],ah
   140017f9a:	jae    0x140017f9c
   140017f9c:	sub    eax,0x52004300
   140017fa1:	add    BYTE PTR [rax],al
   140017fa3:	add    BYTE PTR [rax],al
   140017fa5:	add    BYTE PTR [rax],al
   140017fa7:	add    BYTE PTR [rsi+0x0],ah
   140017faa:	jb     0x140017fac
   140017fac:	sub    eax,0x55004c00
   140017fb1:	add    BYTE PTR [rax],al
   140017fb3:	add    BYTE PTR [rax],al
   140017fb5:	add    BYTE PTR [rax],al
   140017fb7:	add    BYTE PTR [rdx+0x0],ah
   140017fba:	jae    0x140017fbc
   140017fbc:	sub    eax,0x41004200
   140017fc1:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a101cbc7
   140017fc7:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140017fcb:	add    BYTE PTR [rax],al
   140017fcd:	add    BYTE PTR [rax],al
   140017fcf:	add    BYTE PTR [rbx+0x0],dh
   140017fd2:	ins    DWORD PTR es:[rdi],dx
   140017fd3:	add    BYTE PTR [rdx+0x0],ch
   140017fd6:	sub    eax,0x45005300
   140017fdb:	add    BYTE PTR [rax],al
   140017fdd:	add    BYTE PTR [rax],al
   140017fdf:	add    BYTE PTR [rcx+0x0],ah
   140017fe2:	jb     0x140017fe4
   140017fe4:	sub    eax,0x41004d00
   140017fe9:	add    BYTE PTR [rax],al
   140017feb:	add    BYTE PTR [rax],al
   140017fed:	add    BYTE PTR [rax],al
   140017fef:	add    BYTE PTR [rbp+0x0],ah
   140017ff2:	outs   dx,BYTE PTR ds:[rsi]
   140017ff3:	add    BYTE PTR [rip+0x45004900],ch        # 0x18501c8f9
   140017ff9:	add    BYTE PTR [rax],al
   140017ffb:	add    BYTE PTR [rax],al
   140017ffd:	add    BYTE PTR [rax],al
   140017fff:	add    BYTE PTR [rbp+0x0],ah
   140018002:	jae    0x140018004
   140018004:	sub    eax,0x41005000
   140018009:	add    BYTE PTR [rax],al
   14001800b:	add    BYTE PTR [rax],al
   14001800d:	add    BYTE PTR [rax],al
   14001800f:	add    BYTE PTR [rsi+0x0],ah
   140018012:	jb     0x140018014
   140018014:	sub    eax,0x43004d00
   140018019:	add    BYTE PTR [rax],al
   14001801b:	add    BYTE PTR [rax],al
   14001801d:	add    BYTE PTR [rax],al
   14001801f:	add    BYTE PTR [rbx+0x0],dh
   140018022:	jb     0x140018024
   140018024:	sub    eax,0x41004200
   140018029:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a101cc2f
   14001802f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140018033:	add    BYTE PTR [rax],al
   140018035:	add    BYTE PTR [rax],al
   140018037:	add    BYTE PTR [rbx+0x0],dh
   14001803a:	ins    DWORD PTR es:[rdi],dx
   14001803b:	add    BYTE PTR [rcx+0x0],ah
   14001803e:	sub    eax,0x4f004e00
   140018043:	add    BYTE PTR [rax],al
   140018045:	add    BYTE PTR [rax],al
   140018047:	add    BYTE PTR [rcx+0x0],ah
   14001804a:	jb     0x14001804c
   14001804c:	sub    eax,0x4e005400
   140018051:	add    BYTE PTR [rax],al
   140018053:	add    BYTE PTR [rax],al
   140018055:	add    BYTE PTR [rax],al
   140018057:	add    BYTE PTR [rbp+0x0],ah
   14001805a:	outs   dx,BYTE PTR ds:[rsi]
   14001805b:	add    BYTE PTR [rip+0x41005a00],ch        # 0x18101da61
   140018061:	add    BYTE PTR [rax],al
   140018063:	add    BYTE PTR [rax],al
   140018065:	add    BYTE PTR [rax],al
   140018067:	add    BYTE PTR [rbp+0x0],ah
   14001806a:	jae    0x14001806c
   14001806c:	sub    eax,0x4f004400
   140018071:	add    BYTE PTR [rax],al
   140018073:	add    BYTE PTR [rax],al
   140018075:	add    BYTE PTR [rax],al
   140018077:	add    BYTE PTR [rbx+0x0],dh
   14001807a:	jb     0x14001807c
   14001807c:	sub    eax,0x41004200
   140018081:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b901c387
   140018087:	add    BYTE PTR [rdx+0x0],dh
   14001808a:	ins    BYTE PTR es:[rdi],dx
   14001808b:	add    BYTE PTR [rax],al
   14001808d:	add    BYTE PTR [rax],al
   14001808f:	add    BYTE PTR [rbx+0x0],dh
   140018092:	ins    DWORD PTR es:[rdi],dx
   140018093:	add    BYTE PTR [rcx+0x0],ah
   140018096:	sub    eax,0x45005300
   14001809b:	add    BYTE PTR [rax],al
   14001809d:	add    BYTE PTR [rax],al
   14001809f:	add    BYTE PTR [rcx+0x0],ah
   1400180a2:	jb     0x1400180a4
   1400180a4:	sub    eax,0x4d004f00
   1400180a9:	add    BYTE PTR [rax],al
   1400180ab:	add    BYTE PTR [rax],al
   1400180ad:	add    BYTE PTR [rax],al
   1400180af:	add    BYTE PTR [rbp+0x0],ah
   1400180b2:	outs   dx,BYTE PTR ds:[rsi]
   1400180b3:	add    BYTE PTR [rip+0x4d004a00],ch        # 0x18d01cab9
   1400180b9:	add    BYTE PTR [rax],al
   1400180bb:	add    BYTE PTR [rax],al
   1400180bd:	add    BYTE PTR [rax],al
   1400180bf:	add    BYTE PTR [rbp+0x0],ah
   1400180c2:	jae    0x1400180c4
   1400180c4:	sub    eax,0x45005600
   1400180c9:	add    BYTE PTR [rax],al
   1400180cb:	add    BYTE PTR [rax],al
   1400180cd:	add    BYTE PTR [rax],al
   1400180cf:	add    BYTE PTR [rbx+0x0],dh
   1400180d2:	ins    DWORD PTR es:[rdi],dx
   1400180d3:	add    BYTE PTR [rbx+0x0],dh
   1400180d6:	sub    eax,0x49004600
   1400180db:	add    BYTE PTR [rax],al
   1400180dd:	add    BYTE PTR [rax],al
   1400180df:	add    BYTE PTR [rcx+0x0],ah
   1400180e2:	jb     0x1400180e4
   1400180e4:	sub    eax,0x45005900
   1400180e9:	add    BYTE PTR [rax],al
   1400180eb:	add    BYTE PTR [rax],al
   1400180ed:	add    BYTE PTR [rax],al
   1400180ef:	add    BYTE PTR [rbp+0x0],ah
   1400180f2:	outs   dx,BYTE PTR ds:[rsi]
   1400180f3:	add    BYTE PTR [rip+0x42004300],ch        # 0x18201c3f9
   1400180f9:	add    BYTE PTR [rax],al
   1400180fb:	add    BYTE PTR [rax],al
   1400180fd:	add    BYTE PTR [rax],al
   1400180ff:	add    BYTE PTR [rbp+0x0],ah
   140018102:	jae    0x140018104
   140018104:	sub    eax,0x4f004300
   140018109:	add    BYTE PTR [rax],al
   14001810b:	add    BYTE PTR [rax],al
   14001810d:	add    BYTE PTR [rax],al
   14001810f:	add    BYTE PTR [rbx+0x0],dh
   140018112:	ins    DWORD PTR es:[rdi],dx
   140018113:	add    BYTE PTR [rsi+0x0],ch
   140018116:	sub    eax,0x49004600
   14001811b:	add    BYTE PTR [rax],al
   14001811d:	add    BYTE PTR [rax],al
   14001811f:	add    BYTE PTR [rcx+0x0],ah
   140018122:	jb     0x140018124
   140018124:	sub    eax,0x59005300
   140018129:	add    BYTE PTR [rax],al
   14001812b:	add    BYTE PTR [rax],al
   14001812d:	add    BYTE PTR [rax],al
   14001812f:	add    BYTE PTR [rbp+0x0],ah
   140018132:	outs   dx,BYTE PTR ds:[rsi]
   140018133:	add    BYTE PTR [rip+0x5a004200],ch        # 0x19a01c339
   140018139:	add    BYTE PTR [rax],al
   14001813b:	add    BYTE PTR [rax],al
   14001813d:	add    BYTE PTR [rax],al
   14001813f:	add    BYTE PTR [rbp+0x0],ah
   140018142:	jae    0x140018144
   140018144:	sub    eax,0x45005000
   140018149:	add    BYTE PTR [rax],al
   14001814b:	add    BYTE PTR [rax],al
   14001814d:	add    BYTE PTR [rax],al
   14001814f:	add    BYTE PTR [rcx+0x0],ah
   140018152:	jb     0x140018154
   140018154:	sub    eax,0x4f004a00
   140018159:	add    BYTE PTR [rax],al
   14001815b:	add    BYTE PTR [rax],al
   14001815d:	add    BYTE PTR [rax],al
   14001815f:	add    BYTE PTR [rbp+0x0],ah
   140018162:	outs   dx,BYTE PTR ds:[rsi]
   140018163:	add    BYTE PTR [rip+0x54005400],ch        # 0x19401d569
   140018169:	add    BYTE PTR [rax],al
   14001816b:	add    BYTE PTR [rax],al
   14001816d:	add    BYTE PTR [rax],al
   14001816f:	add    BYTE PTR [rbp+0x0],ah
   140018172:	jae    0x140018174
   140018174:	sub    eax,0x52004100
   140018179:	add    BYTE PTR [rax],al
   14001817b:	add    BYTE PTR [rax],al
   14001817d:	add    BYTE PTR [rax],al
   14001817f:	add    BYTE PTR [rcx+0x0],ah
   140018182:	jb     0x140018184
   140018184:	sub    eax,0x42004c00
   140018189:	add    BYTE PTR [rax],al
   14001818b:	add    BYTE PTR [rax],al
   14001818d:	add    BYTE PTR [rax],al
   14001818f:	add    BYTE PTR [rbp+0x0],ah
   140018192:	outs   dx,BYTE PTR ds:[rsi]
   140018193:	add    BYTE PTR [rip+0x57005a00],ch        # 0x19701db99
   140018199:	add    BYTE PTR [rax],al
   14001819b:	add    BYTE PTR [rax],al
   14001819d:	add    BYTE PTR [rax],al
   14001819f:	add    BYTE PTR [rbp+0x0],ah
   1400181a2:	jae    0x1400181a4
   1400181a4:	sub    eax,0x43004500
   1400181a9:	add    BYTE PTR [rax],al
   1400181ab:	add    BYTE PTR [rax],al
   1400181ad:	add    BYTE PTR [rax],al
   1400181af:	add    BYTE PTR [rcx+0x0],ah
   1400181b2:	jb     0x1400181b4
   1400181b4:	sub    eax,0x57004b00
   1400181b9:	add    BYTE PTR [rax],al
   1400181bb:	add    BYTE PTR [rax],al
   1400181bd:	add    BYTE PTR [rax],al
   1400181bf:	add    BYTE PTR [rbp+0x0],ah
   1400181c2:	outs   dx,BYTE PTR ds:[rsi]
   1400181c3:	add    BYTE PTR [rip+0x48005000],ch        # 0x18801d1c9
   1400181c9:	add    BYTE PTR [rax],al
   1400181cb:	add    BYTE PTR [rax],al
   1400181cd:	add    BYTE PTR [rax],al
   1400181cf:	add    BYTE PTR [rbp+0x0],ah
   1400181d2:	jae    0x1400181d4
   1400181d4:	sub    eax,0x4c004300
   1400181d9:	add    BYTE PTR [rax],al
   1400181db:	add    BYTE PTR [rax],al
   1400181dd:	add    BYTE PTR [rax],al
   1400181df:	add    BYTE PTR [rcx+0x0],ah
   1400181e2:	jb     0x1400181e4
   1400181e4:	sub    eax,0x45004100
   1400181e9:	add    BYTE PTR [rax],al
   1400181eb:	add    BYTE PTR [rax],al
   1400181ed:	add    BYTE PTR [rax],al
   1400181ef:	add    BYTE PTR [rbp+0x0],ah
   1400181f2:	jae    0x1400181f4
   1400181f4:	sub    eax,0x59005500
   1400181f9:	add    BYTE PTR [rax],al
   1400181fb:	add    BYTE PTR [rax],al
   1400181fd:	add    BYTE PTR [rax],al
   1400181ff:	add    BYTE PTR [rcx+0x0],ah
   140018202:	jb     0x140018204
   140018204:	sub    eax,0x48004200
   140018209:	add    BYTE PTR [rax],al
   14001820b:	add    BYTE PTR [rax],al
   14001820d:	add    BYTE PTR [rax],al
   14001820f:	add    BYTE PTR [rbp+0x0],ah
   140018212:	jae    0x140018214
   140018214:	sub    eax,0x59005000
   140018219:	add    BYTE PTR [rax],al
   14001821b:	add    BYTE PTR [rax],al
   14001821d:	add    BYTE PTR [rax],al
   14001821f:	add    BYTE PTR [rcx+0x0],ah
   140018222:	jb     0x140018224
   140018224:	sub    eax,0x41005100
   140018229:	add    BYTE PTR [rax],al
   14001822b:	add    BYTE PTR [rax],al
   14001822d:	add    BYTE PTR [rax],al
   14001822f:	add    BYTE PTR [rbp+0x0],ah
   140018232:	jae    0x140018234
   140018234:	sub    eax,0x4f004200
   140018239:	add    BYTE PTR [rax],al
   14001823b:	add    BYTE PTR [rax],al
   14001823d:	add    BYTE PTR [rax],al
   14001823f:	add    BYTE PTR [rbp+0x0],ah
   140018242:	jae    0x140018244
   140018244:	sub    eax,0x56005300
   140018249:	add    BYTE PTR [rax],al
   14001824b:	add    BYTE PTR [rax],al
   14001824d:	add    BYTE PTR [rax],al
   14001824f:	add    BYTE PTR [rbp+0x0],ah
   140018252:	jae    0x140018254
   140018254:	sub    eax,0x4e004800
   140018259:	add    BYTE PTR [rax],al
   14001825b:	add    BYTE PTR [rax],al
   14001825d:	add    BYTE PTR [rax],al
   14001825f:	add    BYTE PTR [rbp+0x0],ah
   140018262:	jae    0x140018264
   140018264:	sub    eax,0x49004e00
   140018269:	add    BYTE PTR [rax],al
   14001826b:	add    BYTE PTR [rax],al
   14001826d:	add    BYTE PTR [rax],al
   14001826f:	add    BYTE PTR [rbp+0x0],ah
   140018272:	jae    0x140018274
   140018274:	sub    eax,0x52005000
   140018279:	add    BYTE PTR [rax],al
   14001827b:	add    BYTE PTR [rax],al
   14001827d:	add    BYTE PTR [rax],al
   14001827f:	add    BYTE PTR [rdx+0x0],bh
   140018282:	push   0x43002d00
   140018287:	add    BYTE PTR [rax+0x0],cl
   14001828a:	push   rsp
   14001828b:	add    BYTE PTR [rax],al
   14001828d:	add    BYTE PTR [rax],al
   14001828f:	add    BYTE PTR [rbx+0x0],dh
   140018292:	jb     0x140018294
	...
   1400182a0:	nop
   1400182a1:	js     0x1400182a4
   1400182a3:	rex add DWORD PTR [rax],eax
   1400182a6:	add    BYTE PTR [rax],al
   1400182a8:	rex.X add BYTE PTR [rax],al
   1400182ab:	add    BYTE PTR [rax],al
   1400182ad:	add    BYTE PTR [rax],al
   1400182af:	add    al,ah
   1400182b1:	ja     0x1400182b4
   1400182b3:	rex add DWORD PTR [rax],eax
   1400182b6:	add    BYTE PTR [rax],al
   1400182b8:	sub    al,0x0
   1400182ba:	add    BYTE PTR [rax],al
   1400182bc:	add    BYTE PTR [rax],al
   1400182be:	add    BYTE PTR [rax],al
   1400182c0:	loopne 0x140018252
   1400182c2:	add    DWORD PTR [rax+0x1],eax
   1400182c5:	add    BYTE PTR [rax],al
   1400182c7:	add    BYTE PTR [rcx+0x0],dh
   1400182ca:	add    BYTE PTR [rax],al
   1400182cc:	add    BYTE PTR [rax],al
   1400182ce:	add    BYTE PTR [rax],al
   1400182d0:	xor    BYTE PTR [rsi+0x1],0x40
   1400182d4:	add    DWORD PTR [rax],eax
	...
   1400182de:	add    BYTE PTR [rax],al
   1400182e0:	lock nop
   1400182e2:	add    DWORD PTR [rax+0x1],eax
   1400182e5:	add    BYTE PTR [rax],al
   1400182e7:	add    al,bl
	...
   1400182f1:	xchg   ecx,eax
   1400182f2:	add    DWORD PTR [rax+0x1],eax
   1400182f5:	add    BYTE PTR [rax],al
   1400182f7:	add    dl,bl
   1400182f9:	add    BYTE PTR [rax],al
   1400182fb:	add    BYTE PTR [rax],al
   1400182fd:	add    BYTE PTR [rax],al
   1400182ff:	add    BYTE PTR [rax],dl
   140018301:	xchg   ecx,eax
   140018302:	add    DWORD PTR [rax+0x1],eax
   140018305:	add    BYTE PTR [rax],al
   140018307:	add    BYTE PTR [rcx+0x0],dh
   14001830d:	add    BYTE PTR [rax],al
   14001830f:	add    BYTE PTR [rax],ah
   140018311:	xchg   ecx,eax
   140018312:	add    DWORD PTR [rax+0x1],eax
   140018315:	add    BYTE PTR [rax],al
   140018317:	add    BYTE PTR [rax+0x0],ah
   14001831d:	add    BYTE PTR [rax],al
   14001831f:	add    BYTE PTR [rax],dh
   140018321:	xchg   ecx,eax
   140018322:	add    DWORD PTR [rax+0x1],eax
   140018325:	add    BYTE PTR [rax],al
   140018327:	add    BYTE PTR [rdi+0x0],cl
   14001832d:	add    BYTE PTR [rax],al
   14001832f:	add    BYTE PTR [rax-0x6f],al
   140018332:	add    DWORD PTR [rax+0x1],eax
   140018335:	add    BYTE PTR [rax],al
   140018337:	add    bh,cl
   140018339:	add    BYTE PTR [rax],al
   14001833b:	add    BYTE PTR [rax],al
   14001833d:	add    BYTE PTR [rax],al
   14001833f:	add    BYTE PTR [rax-0x6f],dl
   140018342:	add    DWORD PTR [rax+0x1],eax
   140018345:	add    BYTE PTR [rax],al
   140018347:	add    ch,dl
   140018349:	add    BYTE PTR [rax],al
   14001834b:	add    BYTE PTR [rax],al
   14001834d:	add    BYTE PTR [rax],al
   14001834f:	add    BYTE PTR [rax-0x6f],ah
   140018352:	add    DWORD PTR [rax+0x1],eax
   140018355:	add    BYTE PTR [rax],al
   140018357:	add    dl,dl
   140018359:	add    BYTE PTR [rax],al
   14001835b:	add    BYTE PTR [rax],al
   14001835d:	add    BYTE PTR [rax],al
   14001835f:	add    BYTE PTR [rax-0x6f],dh
   140018362:	add    DWORD PTR [rax+0x1],eax
   140018365:	add    BYTE PTR [rax],al
   140018367:	add    BYTE PTR [rcx+0x0],ch
   14001836d:	add    BYTE PTR [rax],al
   14001836f:	add    BYTE PTR [rax+0x1400191],al
   140018375:	add    BYTE PTR [rax],al
   140018377:	add    BYTE PTR [rcx+0x0],bh
   14001837d:	add    BYTE PTR [rax],al
   14001837f:	add    BYTE PTR [rax+0x1400191],dl
   140018385:	add    BYTE PTR [rax],al
   140018387:	add    ah,al
   140018389:	add    BYTE PTR [rax],al
   14001838b:	add    BYTE PTR [rax],al
   14001838d:	add    BYTE PTR [rax],al
   14001838f:	add    BYTE PTR [rax+0x1400191],ah
   140018395:	add    BYTE PTR [rax],al
   140018397:	add    ah,bl
   140018399:	add    BYTE PTR [rax],al
   14001839b:	add    BYTE PTR [rax],al
   14001839d:	add    BYTE PTR [rax],al
   14001839f:	add    BYTE PTR [rax+0x1400191],dh
   1400183a5:	add    BYTE PTR [rax],al
   1400183a7:	add    BYTE PTR [rbx+0x0],al
   1400183aa:	add    BYTE PTR [rax],al
   1400183ac:	add    BYTE PTR [rax],al
   1400183ae:	add    BYTE PTR [rax],al
   1400183b0:	rcl    BYTE PTR [rcx+0x14001],0x0
   1400183b7:	add    ah,cl
   1400183b9:	add    BYTE PTR [rax],al
   1400183bb:	add    BYTE PTR [rax],al
   1400183bd:	add    BYTE PTR [rax],al
   1400183bf:	add    al,dl
   1400183c1:	xchg   ecx,eax
   1400183c2:	add    DWORD PTR [rax+0x1],eax
   1400183c5:	add    BYTE PTR [rax],al
   1400183c7:	add    BYTE PTR [rdi+0x0],bh
   1400183cd:	add    BYTE PTR [rax],al
   1400183cf:	add    al,ah
   1400183d1:	xchg   ecx,eax
   1400183d2:	add    DWORD PTR [rax+0x1],eax
   1400183d5:	add    BYTE PTR [rax],al
   1400183d7:	add    al,cl
   1400183d9:	add    BYTE PTR [rax],al
   1400183db:	add    BYTE PTR [rax],al
   1400183dd:	add    BYTE PTR [rax],al
   1400183df:	add    al,cl
   1400183e1:	ja     0x1400183e4
   1400183e3:	rex add DWORD PTR [rax],eax
   1400183e6:	add    BYTE PTR [rax],al
   1400183e8:	sub    DWORD PTR [rax],eax
   1400183ea:	add    BYTE PTR [rax],al
   1400183ec:	add    BYTE PTR [rax],al
   1400183ee:	add    BYTE PTR [rax],al
   1400183f0:	lock xchg ecx,eax
   1400183f2:	add    DWORD PTR [rax+0x1],eax
   1400183f5:	add    BYTE PTR [rax],al
   1400183f7:	add    BYTE PTR [rbx+0x0],bl
   1400183fd:	add    BYTE PTR [rax],al
   1400183ff:	add    BYTE PTR [rax],cl
   140018401:	xchg   edx,eax
   140018402:	add    DWORD PTR [rax+0x1],eax
   140018405:	add    BYTE PTR [rax],al
   140018407:	add    BYTE PTR [rbx+0x0],ch
   14001840a:	add    BYTE PTR [rax],al
   14001840c:	add    BYTE PTR [rax],al
   14001840e:	add    BYTE PTR [rax],al
   140018410:	mov    BYTE PTR [rdi+0x1],dh
   140018413:	rex add DWORD PTR [rax],eax
   140018416:	add    BYTE PTR [rax],al
   140018418:	and    DWORD PTR [rax],eax
   14001841a:	add    BYTE PTR [rax],al
   14001841c:	add    BYTE PTR [rax],al
   14001841e:	add    BYTE PTR [rax],al
   140018420:	and    BYTE PTR [rdx+0x14001],dl
   140018426:	add    BYTE PTR [rax],al
   140018428:	movsxd eax,DWORD PTR [rax]
   14001842a:	add    BYTE PTR [rax],al
   14001842c:	add    BYTE PTR [rax],al
   14001842e:	add    BYTE PTR [rax],al
   140018430:	mov    BYTE PTR [rsi+0x1],dh
   140018433:	rex add DWORD PTR [rax],eax
   140018436:	add    BYTE PTR [rax],al
   140018438:	add    DWORD PTR [rax],eax
   14001843a:	add    BYTE PTR [rax],al
   14001843c:	add    BYTE PTR [rax],al
   14001843e:	add    BYTE PTR [rax],al
   140018440:	xor    BYTE PTR [rdx+0x14001],dl
   140018446:	add    BYTE PTR [rax],al
   140018448:	add    BYTE PTR [rax],r8b
   14001844b:	add    BYTE PTR [rax],al
   14001844d:	add    BYTE PTR [rax],al
   14001844f:	add    BYTE PTR [rax-0x6e],al
   140018452:	add    DWORD PTR [rax+0x1],eax
   140018455:	add    BYTE PTR [rax],al
   140018457:	add    BYTE PTR [rbp+0x0],bh
   14001845a:	add    BYTE PTR [rax],al
   14001845c:	add    BYTE PTR [rax],al
   14001845e:	add    BYTE PTR [rax],al
   140018460:	push   rax
   140018461:	xchg   edx,eax
   140018462:	add    DWORD PTR [rax+0x1],eax
   140018465:	add    BYTE PTR [rax],al
   140018467:	add    BYTE PTR [rdi+0x0],dh
   14001846d:	add    BYTE PTR [rax],al
   14001846f:	add    BYTE PTR [rax+0x1400176],dl
   140018475:	add    BYTE PTR [rax],al
   140018477:	add    BYTE PTR [rdx],al
   140018479:	add    BYTE PTR [rax],al
   14001847b:	add    BYTE PTR [rax],al
   14001847d:	add    BYTE PTR [rax],al
   14001847f:	add    BYTE PTR [rax-0x6e],ch
   140018482:	add    DWORD PTR [rax+0x1],eax
   140018485:	add    BYTE PTR [rax],al
   140018487:	add    BYTE PTR [rbp+0x0],al
   14001848a:	add    BYTE PTR [rax],al
   14001848c:	add    BYTE PTR [rax],al
   14001848e:	add    BYTE PTR [rax],al
   140018490:	test   al,0x76
   140018492:	add    DWORD PTR [rax+0x1],eax
   140018495:	add    BYTE PTR [rax],al
   140018497:	add    BYTE PTR [rax+rax*1],al
   14001849a:	add    BYTE PTR [rax],al
   14001849c:	add    BYTE PTR [rax],al
   14001849e:	add    BYTE PTR [rax],al
   1400184a0:	js     0x140018434
   1400184a2:	add    DWORD PTR [rax+0x1],eax
   1400184a5:	add    BYTE PTR [rax],al
   1400184a7:	add    BYTE PTR [rdi+0x0],al
   1400184aa:	add    BYTE PTR [rax],al
   1400184ac:	add    BYTE PTR [rax],al
   1400184ae:	add    BYTE PTR [rax],al
   1400184b0:	mov    BYTE PTR [rdx+0x14001],dl
   1400184b6:	add    BYTE PTR [rax],al
   1400184b8:	xchg   DWORD PTR [rax],eax
   1400184ba:	add    BYTE PTR [rax],al
   1400184bc:	add    BYTE PTR [rax],al
   1400184be:	add    BYTE PTR [rax],al
   1400184c0:	mov    al,0x76
   1400184c2:	add    DWORD PTR [rax+0x1],eax
   1400184c5:	add    BYTE PTR [rax],al
   1400184c7:	add    BYTE PTR [rip+0x0],al        # 0x1400184cd
   1400184cd:	add    BYTE PTR [rax],al
   1400184cf:	add    BYTE PTR [rax+0x1400192],bl
   1400184d5:	add    BYTE PTR [rax],al
   1400184d7:	add    BYTE PTR [rax+0x0],cl
   1400184da:	add    BYTE PTR [rax],al
   1400184dc:	add    BYTE PTR [rax],al
   1400184de:	add    BYTE PTR [rax],al
   1400184e0:	mov    eax,0x1400176
   1400184e5:	add    BYTE PTR [rax],al
   1400184e7:	add    BYTE PTR [rsi],al
   1400184e9:	add    BYTE PTR [rax],al
   1400184eb:	add    BYTE PTR [rax],al
   1400184ed:	add    BYTE PTR [rax],al
   1400184ef:	add    BYTE PTR [rax+0x1400192],ch
   1400184f5:	add    BYTE PTR [rax],al
   1400184f7:	add    BYTE PTR [rdx+0x0],ah
   1400184fd:	add    BYTE PTR [rax],al
   1400184ff:	add    BYTE PTR [rax+0x1400192],bh
   140018505:	add    BYTE PTR [rax],al
   140018507:	add    BYTE PTR [rcx+0x0],dl
   14001850d:	add    BYTE PTR [rax],al
   14001850f:	add    al,cl
   140018511:	xchg   edx,eax
   140018512:	add    DWORD PTR [rax+0x1],eax
   140018515:	add    BYTE PTR [rax],al
   140018517:	add    BYTE PTR [rcx+0x0],cl
   14001851a:	add    BYTE PTR [rax],al
   14001851c:	add    BYTE PTR [rax],al
   14001851e:	add    BYTE PTR [rax],al
   140018520:	fcom   DWORD PTR [rdx+0x14001]
   140018526:	add    BYTE PTR [rax],al
   140018528:	mov    bl,0x0
   14001852a:	add    BYTE PTR [rax],al
   14001852c:	add    BYTE PTR [rax],al
   14001852e:	add    BYTE PTR [rax],al
   140018530:	call   0x1414186c7
   140018535:	add    BYTE PTR [rax],al
   140018537:	add    BYTE PTR [rbx+0x0],ch
   14001853d:	add    BYTE PTR [rax],al
   14001853f:	add    BYTE PTR [rax+0x1400178],cl
   140018545:	add    BYTE PTR [rax],al
   140018547:	add    BYTE PTR [rcx+0x0],al
   14001854a:	add    BYTE PTR [rax],al
   14001854c:	add    BYTE PTR [rax],al
   14001854e:	add    BYTE PTR [rax],al
   140018550:	clc    
   140018551:	xchg   edx,eax
   140018552:	add    DWORD PTR [rax+0x1],eax
   140018555:	add    BYTE PTR [rax],al
   140018557:	add    BYTE PTR [rbx+0x0],cl
   14001855d:	add    BYTE PTR [rax],al
   14001855f:	add    al,al
   140018561:	jbe    0x140018564
   140018563:	rex add DWORD PTR [rax],eax
   140018566:	add    BYTE PTR [rax],al
   140018568:	(bad)  
   140018569:	add    BYTE PTR [rax],al
   14001856b:	add    BYTE PTR [rax],al
   14001856d:	add    BYTE PTR [rax],al
   14001856f:	add    BYTE PTR [rax],cl
   140018571:	xchg   ebx,eax
   140018572:	add    DWORD PTR [rax+0x1],eax
   140018575:	add    BYTE PTR [rax],al
   140018577:	add    BYTE PTR [rdx+0x0],cl
   14001857a:	add    BYTE PTR [rax],al
   14001857c:	add    BYTE PTR [rax],al
   14001857e:	add    BYTE PTR [rax],al
   140018580:	enter  0x176,0x40
   140018584:	add    DWORD PTR [rax],eax
   140018586:	add    BYTE PTR [rax],al
   140018588:	or     BYTE PTR [rax],al
   14001858a:	add    BYTE PTR [rax],al
   14001858c:	add    BYTE PTR [rax],al
   14001858e:	add    BYTE PTR [rax],al
   140018590:	sbb    BYTE PTR [rbx+0x14001],dl
   140018596:	add    BYTE PTR [rax],al
   140018598:	movabs ds:0x2800000000000000,eax
   1400185a1:	xchg   ebx,eax
   1400185a2:	add    DWORD PTR [rax+0x1],eax
   1400185a5:	add    BYTE PTR [rax],al
   1400185a7:	add    ch,cl
   1400185a9:	add    BYTE PTR [rax],al
   1400185ab:	add    BYTE PTR [rax],al
   1400185ad:	add    BYTE PTR [rax],al
   1400185af:	add    BYTE PTR [rax],bh
   1400185b1:	xchg   ebx,eax
   1400185b2:	add    DWORD PTR [rax+0x1],eax
   1400185b5:	add    BYTE PTR [rax],al
   1400185b7:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400185be:	add    BYTE PTR [rax],al
   1400185c0:	xchg   rbx,rax
   1400185c2:	add    DWORD PTR [rax+0x1],eax
   1400185c5:	add    BYTE PTR [rax],al
   1400185c7:	add    cl,cl
   1400185c9:	add    BYTE PTR [rax],al
   1400185cb:	add    BYTE PTR [rax],al
   1400185cd:	add    BYTE PTR [rax],al
   1400185cf:	add    BYTE PTR [rax-0x6d],bl
   1400185d2:	add    DWORD PTR [rax+0x1],eax
   1400185d5:	add    BYTE PTR [rax],al
   1400185d7:	add    BYTE PTR [rdx+0x0],dl
   1400185dd:	add    BYTE PTR [rax],al
   1400185df:	add    BYTE PTR [rax-0x6d],ch
   1400185e2:	add    DWORD PTR [rax+0x1],eax
   1400185e5:	add    BYTE PTR [rax],al
   1400185e7:	add    BYTE PTR [rdx+0x0],bh
   1400185ed:	add    BYTE PTR [rax],al
   1400185ef:	add    BYTE PTR [rax-0x6d],bh
   1400185f2:	add    DWORD PTR [rax+0x1],eax
   1400185f5:	add    BYTE PTR [rax],al
   1400185f7:	add    ch,al
   1400185f9:	add    BYTE PTR [rax],al
   1400185fb:	add    BYTE PTR [rax],al
   1400185fd:	add    BYTE PTR [rax],al
   1400185ff:	add    BYTE PTR [rax+0x1400193],cl
   140018605:	add    BYTE PTR [rax],al
   140018607:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001860e:	add    BYTE PTR [rax],al
   140018610:	cwde   
   140018611:	xchg   ebx,eax
   140018612:	add    DWORD PTR [rax+0x1],eax
   140018615:	add    BYTE PTR [rax],al
   140018617:	add    dh,dl
   140018619:	add    BYTE PTR [rax],al
   14001861b:	add    BYTE PTR [rax],al
   14001861d:	add    BYTE PTR [rax],al
   14001861f:	add    BYTE PTR [rax+0x1400193],ch
   140018625:	add    BYTE PTR [rax],al
   140018627:	add    al,dl
   140018629:	add    BYTE PTR [rax],al
   14001862b:	add    BYTE PTR [rax],al
   14001862d:	add    BYTE PTR [rax],al
   14001862f:	add    BYTE PTR [rax+0x1400193],bh
   140018635:	add    BYTE PTR [rax],al
   140018637:	add    BYTE PTR [rbx+0x0],cl
   14001863a:	add    BYTE PTR [rax],al
   14001863c:	add    BYTE PTR [rax],al
   14001863e:	add    BYTE PTR [rax],al
   140018640:	enter  0x193,0x40
   140018644:	add    DWORD PTR [rax],eax
   140018646:	add    BYTE PTR [rax],al
   140018648:	rol    BYTE PTR [rax],0x0
   14001864b:	add    BYTE PTR [rax],al
   14001864d:	add    BYTE PTR [rax],al
   14001864f:	add    al,bl
   140018651:	xchg   ebx,eax
   140018652:	add    DWORD PTR [rax+0x1],eax
   140018655:	add    BYTE PTR [rax],al
   140018657:	add    bl,dl
   140018659:	add    BYTE PTR [rax],al
   14001865b:	add    BYTE PTR [rax],al
   14001865d:	add    BYTE PTR [rax],al
   14001865f:	add    al,dl
   140018661:	jbe    0x140018664
   140018663:	rex add DWORD PTR [rax],eax
   140018666:	add    BYTE PTR [rax],al
   140018668:	or     DWORD PTR [rax],eax
   14001866a:	add    BYTE PTR [rax],al
   14001866c:	add    BYTE PTR [rax],al
   14001866e:	add    BYTE PTR [rax],al
   140018670:	call   0x141418808
   140018675:	add    BYTE PTR [rax],al
   140018677:	add    cl,dl
   140018679:	add    BYTE PTR [rax],al
   14001867b:	add    BYTE PTR [rax],al
   14001867d:	add    BYTE PTR [rax],al
   14001867f:	add    al,bh
   140018681:	xchg   ebx,eax
   140018682:	add    DWORD PTR [rax+0x1],eax
   140018685:	add    BYTE PTR [rax],al
   140018687:	add    ch,bl
   140018689:	add    BYTE PTR [rax],al
   14001868b:	add    BYTE PTR [rax],al
   14001868d:	add    BYTE PTR [rax],al
   14001868f:	add    BYTE PTR [rax],cl
   140018691:	xchg   esp,eax
   140018692:	add    DWORD PTR [rax+0x1],eax
   140018695:	add    BYTE PTR [rax],al
   140018697:	add    bh,dl
   140018699:	add    BYTE PTR [rax],al
   14001869b:	add    BYTE PTR [rax],al
   14001869d:	add    BYTE PTR [rax],al
   14001869f:	add    BYTE PTR [rax],bl
   1400186a1:	xchg   esp,eax
   1400186a2:	add    DWORD PTR [rax+0x1],eax
   1400186a5:	add    BYTE PTR [rax],al
   1400186a7:	add    dl,cl
   1400186a9:	add    BYTE PTR [rax],al
   1400186ab:	add    BYTE PTR [rax],al
   1400186ad:	add    BYTE PTR [rax],al
   1400186af:	add    BYTE PTR [rax],ch
   1400186b1:	xchg   esp,eax
   1400186b2:	add    DWORD PTR [rax+0x1],eax
   1400186b5:	add    BYTE PTR [rax],al
   1400186b7:	add    BYTE PTR [rbp+0x0],dh
   1400186bd:	add    BYTE PTR [rax],al
   1400186bf:	add    BYTE PTR [rax],bh
   1400186c1:	xchg   esp,eax
   1400186c2:	add    DWORD PTR [rax+0x1],eax
   1400186c5:	add    BYTE PTR [rax],al
   1400186c7:	add    cl,al
   1400186c9:	add    BYTE PTR [rax],al
   1400186cb:	add    BYTE PTR [rax],al
   1400186cd:	add    BYTE PTR [rax],al
   1400186cf:	add    BYTE PTR [rax-0x6c],cl
   1400186d2:	add    DWORD PTR [rax+0x1],eax
   1400186d5:	add    BYTE PTR [rax],al
   1400186d7:	add    ah,dl
   1400186d9:	add    BYTE PTR [rax],al
   1400186db:	add    BYTE PTR [rax],al
   1400186dd:	add    BYTE PTR [rax],al
   1400186df:	add    BYTE PTR [rax-0x6c],bl
   1400186e2:	add    DWORD PTR [rax+0x1],eax
   1400186e5:	add    BYTE PTR [rax],al
   1400186e7:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400186ee:	add    BYTE PTR [rax],al
   1400186f0:	push   0x1400194
   1400186f5:	add    BYTE PTR [rax],al
   1400186f7:	add    BYTE PTR [rbp+0x0],ch
   1400186fd:	add    BYTE PTR [rax],al
   1400186ff:	add    BYTE PTR [rax-0x6c],bh
   140018702:	add    DWORD PTR [rax+0x1],eax
   140018705:	add    BYTE PTR [rax],al
   140018707:	add    bh,bl
   140018709:	add    BYTE PTR [rax],al
   14001870b:	add    BYTE PTR [rax],al
   14001870d:	add    BYTE PTR [rax],al
   14001870f:	add    BYTE PTR [rax+0x1400194],cl
   140018715:	add    BYTE PTR [rax],al
   140018717:	add    BYTE PTR [rbx+0x0],dl
   14001871d:	add    BYTE PTR [rax],al
   14001871f:	add    BYTE PTR [rax+0x1400194],bl
   140018725:	add    BYTE PTR [rax],al
   140018727:	add    al,ah
   140018729:	add    BYTE PTR [rax],al
   14001872b:	add    BYTE PTR [rax],al
   14001872d:	add    BYTE PTR [rax],al
   14001872f:	add    BYTE PTR [rax+0x1400194],ch
   140018735:	add    BYTE PTR [rax],al
   140018737:	add    BYTE PTR [rbx+0x0],bh
   14001873d:	add    BYTE PTR [rax],al
   14001873f:	add    BYTE PTR [rax+0x1400194],bh
   140018745:	add    BYTE PTR [rax],al
   140018747:	add    dh,cl
   140018749:	add    BYTE PTR [rax],al
   14001874b:	add    BYTE PTR [rax],al
   14001874d:	add    BYTE PTR [rax],al
   14001874f:	add    al,cl
   140018751:	xchg   esp,eax
   140018752:	add    DWORD PTR [rax+0x1],eax
   140018755:	add    BYTE PTR [rax],al
   140018757:	add    cl,ah
   140018759:	add    BYTE PTR [rax],al
   14001875b:	add    BYTE PTR [rax],al
   14001875d:	add    BYTE PTR [rax],al
   14001875f:	add    al,bl
   140018761:	xchg   esp,eax
   140018762:	add    DWORD PTR [rax+0x1],eax
   140018765:	add    BYTE PTR [rax],al
   140018767:	add    bl,bl
   140018769:	add    BYTE PTR [rax],al
   14001876b:	add    BYTE PTR [rax],al
   14001876d:	add    BYTE PTR [rax],al
   14001876f:	add    al,ch
   140018771:	xchg   esp,eax
   140018772:	add    DWORD PTR [rax+0x1],eax
   140018775:	add    BYTE PTR [rax],al
   140018777:	add    dh,bl
   140018779:	add    BYTE PTR [rax],al
   14001877b:	add    BYTE PTR [rax],al
   14001877d:	add    BYTE PTR [rax],al
   14001877f:	add    al,bh
   140018781:	xchg   esp,eax
   140018782:	add    DWORD PTR [rax+0x1],eax
   140018785:	add    BYTE PTR [rax],al
   140018787:	add    cl,bl
   140018789:	add    BYTE PTR [rax],al
   14001878b:	add    BYTE PTR [rax],al
   14001878d:	add    BYTE PTR [rax],al
   14001878f:	add    BYTE PTR [rax],cl
   140018791:	xchg   ebp,eax
   140018792:	add    DWORD PTR [rax+0x1],eax
   140018795:	add    BYTE PTR [rax],al
   140018797:	add    dh,al
   140018799:	add    BYTE PTR [rax],al
   14001879b:	add    BYTE PTR [rax],al
   14001879d:	add    BYTE PTR [rax],al
   14001879f:	add    BYTE PTR [rax+0x1400177],bl
   1400187a5:	add    BYTE PTR [rax],al
   1400187a7:	add    BYTE PTR [rbx],ah
   1400187a9:	add    BYTE PTR [rax],al
   1400187ab:	add    BYTE PTR [rax],al
   1400187ad:	add    BYTE PTR [rax],al
   1400187af:	add    BYTE PTR [rax],bl
   1400187b1:	xchg   ebp,eax
   1400187b2:	add    DWORD PTR [rax+0x1],eax
   1400187b5:	add    BYTE PTR [rax],al
   1400187b7:	add    BYTE PTR [rbp+0x0],ah
   1400187ba:	add    BYTE PTR [rax],al
   1400187bc:	add    BYTE PTR [rax],al
   1400187be:	add    BYTE PTR [rax],al
   1400187c0:	shl    BYTE PTR [rdi+0x1],1
   1400187c3:	rex add DWORD PTR [rax],eax
   1400187c6:	add    BYTE PTR [rax],al
   1400187c8:	sub    al,BYTE PTR [rax]
   1400187ca:	add    BYTE PTR [rax],al
   1400187cc:	add    BYTE PTR [rax],al
   1400187ce:	add    BYTE PTR [rax],al
   1400187d0:	sub    BYTE PTR [rbp+0x14001],dl
   1400187d6:	add    BYTE PTR [rax],al
   1400187d8:	ins    BYTE PTR es:[rdi],dx
   1400187d9:	add    BYTE PTR [rax],al
   1400187db:	add    BYTE PTR [rax],al
   1400187dd:	add    BYTE PTR [rax],al
   1400187df:	add    BYTE PTR [rax+0x1400177],dh
   1400187e5:	add    BYTE PTR [rax],al
   1400187e7:	add    BYTE PTR [rsi],ah
   1400187e9:	add    BYTE PTR [rax],al
   1400187eb:	add    BYTE PTR [rax],al
   1400187ed:	add    BYTE PTR [rax],al
   1400187ef:	add    BYTE PTR [rax],bh
   1400187f1:	xchg   ebp,eax
   1400187f2:	add    DWORD PTR [rax+0x1],eax
   1400187f5:	add    BYTE PTR [rax],al
   1400187f7:	add    BYTE PTR [rax+0x0],ch
   1400187fa:	add    BYTE PTR [rax],al
   1400187fc:	add    BYTE PTR [rax],al
   1400187fe:	add    BYTE PTR [rax],al
   140018800:	fdiv   DWORD PTR [rsi+0x1]
   140018803:	rex add DWORD PTR [rax],eax
   140018806:	add    BYTE PTR [rax],al
   140018808:	or     al,BYTE PTR [rax]
   14001880a:	add    BYTE PTR [rax],al
   14001880c:	add    BYTE PTR [rax],al
   14001880e:	add    BYTE PTR [rax],al
   140018810:	xchg   rbp,rax
   140018812:	add    DWORD PTR [rax+0x1],eax
   140018815:	add    BYTE PTR [rax],al
   140018817:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001881b:	add    BYTE PTR [rax],al
   14001881d:	add    BYTE PTR [rax],al
   14001881f:	add    al,dh
   140018821:	ja     0x140018824
   140018823:	rex add DWORD PTR [rax],eax
   140018826:	add    BYTE PTR [rax],al
   140018828:	add    BYTE PTR cs:[rax],al
   14001882b:	add    BYTE PTR [rax],al
   14001882d:	add    BYTE PTR [rax],al
   14001882f:	add    BYTE PTR [rax-0x6b],bl
   140018832:	add    DWORD PTR [rax+0x1],eax
   140018835:	add    BYTE PTR [rax],al
   140018837:	add    BYTE PTR [rbx+0x0],dh
   14001883a:	add    BYTE PTR [rax],al
   14001883c:	add    BYTE PTR [rax],al
   14001883e:	add    BYTE PTR [rax],al
   140018840:	loopne 0x1400188b8
   140018842:	add    DWORD PTR [rax+0x1],eax
   140018845:	add    BYTE PTR [rax],al
   140018847:	add    BYTE PTR [rbx],cl
   140018849:	add    BYTE PTR [rax],al
   14001884b:	add    BYTE PTR [rax],al
   14001884d:	add    BYTE PTR [rax],al
   14001884f:	add    BYTE PTR [rax-0x6b],ch
   140018852:	add    DWORD PTR [rax+0x1],eax
   140018855:	add    BYTE PTR [rax],al
   140018857:	add    BYTE PTR [rax+rax*1+0x0],dl
   14001885e:	add    BYTE PTR [rax],al
   140018860:	js     0x1400187f7
   140018862:	add    DWORD PTR [rax+0x1],eax
   140018865:	add    BYTE PTR [rax],al
   140018867:	add    BYTE PTR [rbp+0x0],ah
   14001886d:	add    BYTE PTR [rax],al
   14001886f:	add    BYTE PTR [rax+0x1400195],cl
   140018875:	add    BYTE PTR [rax],al
   140018877:	add    BYTE PTR [rsi+0x0],ch
   14001887d:	add    BYTE PTR [rax],al
   14001887f:	add    BYTE PTR [rax+0x1400195],bl
   140018885:	add    BYTE PTR [rax],al
   140018887:	add    BYTE PTR [rbp+0x0],cl
   14001888a:	add    BYTE PTR [rax],al
   14001888c:	add    BYTE PTR [rax],al
   14001888e:	add    BYTE PTR [rax],al
   140018890:	test   al,0x95
   140018892:	add    DWORD PTR [rax+0x1],eax
   140018895:	add    BYTE PTR [rax],al
   140018897:	add    BYTE PTR [rsi+0x0],dh
   14001889d:	add    BYTE PTR [rax],al
   14001889f:	add    BYTE PTR [rax+0x1400195],bh
   1400188a5:	add    BYTE PTR [rax],al
   1400188a7:	add    BYTE PTR [rax+rax*1+0x0],bh
   1400188ae:	add    BYTE PTR [rax],al
   1400188b0:	jo     0x14001892a
   1400188b2:	add    DWORD PTR [rax+0x1],eax
   1400188b5:	add    BYTE PTR [rax],al
   1400188b7:	add    BYTE PTR [rsi],bh
   1400188b9:	add    BYTE PTR [rax],al
   1400188bb:	add    BYTE PTR [rax],al
   1400188bd:	add    BYTE PTR [rax],al
   1400188bf:	add    al,cl
   1400188c1:	xchg   ebp,eax
   1400188c2:	add    DWORD PTR [rax+0x1],eax
   1400188c5:	add    BYTE PTR [rax],al
   1400188c7:	add    BYTE PTR [rax+0x0],cl
   1400188cd:	add    BYTE PTR [rax],al
   1400188cf:	add    BYTE PTR [rax],bh
   1400188d1:	js     0x1400188d4
   1400188d3:	rex add DWORD PTR [rax],eax
   1400188d6:	add    BYTE PTR [rax],al
   1400188d8:	(bad)  
   1400188d9:	add    BYTE PTR [rax],al
   1400188db:	add    BYTE PTR [rax],al
   1400188dd:	add    BYTE PTR [rax],al
   1400188df:	add    al,bl
   1400188e1:	xchg   ebp,eax
   1400188e2:	add    DWORD PTR [rax+0x1],eax
   1400188e5:	add    BYTE PTR [rax],al
   1400188e7:	add    BYTE PTR [rdi+0x0],bh
   1400188ea:	add    BYTE PTR [rax],al
   1400188ec:	add    BYTE PTR [rax],al
   1400188ee:	add    BYTE PTR [rax],al
   1400188f0:	call   0x141418a6b
   1400188f5:	add    BYTE PTR [rax],al
   1400188f7:	add    BYTE PTR [rax+rax*1],cl
   1400188fa:	add    BYTE PTR [rax],al
   1400188fc:	add    BYTE PTR [rax],al
   1400188fe:	add    BYTE PTR [rax],al
   140018900:	call   0x141418a9a
   140018905:	add    BYTE PTR [rax],al
   140018907:	add    BYTE PTR [rsi+0x0],cl
   14001890a:	add    BYTE PTR [rax],al
   14001890c:	add    BYTE PTR [rax],al
   14001890e:	add    BYTE PTR [rax],al
   140018910:	clc    
   140018911:	ja     0x140018914
   140018913:	rex add DWORD PTR [rax],eax
   140018916:	add    BYTE PTR [rax],al
   140018918:	(bad)  
   140018919:	add    BYTE PTR [rax],al
   14001891b:	add    BYTE PTR [rax],al
   14001891d:	add    BYTE PTR [rax],al
   14001891f:	add    al,bh
   140018921:	xchg   ebp,eax
   140018922:	add    DWORD PTR [rax+0x1],eax
   140018925:	add    BYTE PTR [rax],al
   140018927:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001892b:	add    BYTE PTR [rax],al
   14001892d:	add    BYTE PTR [rax],al
   14001892f:	add    BYTE PTR [rax+0x77],cl
   140018932:	add    DWORD PTR [rax+0x1],eax
   140018935:	add    BYTE PTR [rax],al
   140018937:	add    BYTE PTR [rax],bl
   140018939:	add    BYTE PTR [rax],al
   14001893b:	add    BYTE PTR [rax],al
   14001893d:	add    BYTE PTR [rax],al
   14001893f:	add    BYTE PTR [rax],cl
   140018941:	xchg   esi,eax
   140018942:	add    DWORD PTR [rax+0x1],eax
   140018945:	add    BYTE PTR [rax],al
   140018947:	add    BYTE PTR [rdi+0x0],ch
   14001894d:	add    BYTE PTR [rax],al
   14001894f:	add    BYTE PTR [rax],bl
   140018951:	xchg   esi,eax
   140018952:	add    DWORD PTR [rax+0x1],eax
   140018955:	add    BYTE PTR [rax],al
   140018957:	add    BYTE PTR [rdx+0x0],bl
   14001895a:	add    BYTE PTR [rax],al
   14001895c:	add    BYTE PTR [rax],al
   14001895e:	add    BYTE PTR [rax],al
   140018960:	lock jbe 0x140018964
   140018963:	rex add DWORD PTR [rax],eax
   140018966:	add    BYTE PTR [rax],al
   140018968:	or     eax,0x0
   14001896d:	add    BYTE PTR [rax],al
   14001896f:	add    BYTE PTR [rax],ch
   140018971:	xchg   esi,eax
   140018972:	add    DWORD PTR [rax+0x1],eax
   140018975:	add    BYTE PTR [rax],al
   140018977:	add    BYTE PTR [rdi+0x0],cl
   14001897a:	add    BYTE PTR [rax],al
   14001897c:	add    BYTE PTR [rax],al
   14001897e:	add    BYTE PTR [rax],al
   140018980:	shl    BYTE PTR [rdi+0x1],0x40
   140018984:	add    DWORD PTR [rax],eax
   140018986:	add    BYTE PTR [rax],al
   140018988:	sub    BYTE PTR [rax],al
   14001898a:	add    BYTE PTR [rax],al
   14001898c:	add    BYTE PTR [rax],al
   14001898e:	add    BYTE PTR [rax],al
   140018990:	cmp    BYTE PTR [rsi+0x14001],dl
   140018996:	add    BYTE PTR [rax],al
   140018998:	push   0x0
   14001899a:	add    BYTE PTR [rax],al
   14001899c:	add    BYTE PTR [rax],al
   14001899e:	add    BYTE PTR [rax],al
   1400189a0:	xor    BYTE PTR [rdi+0x1],0x40
   1400189a4:	add    DWORD PTR [rax],eax
   1400189a6:	add    BYTE PTR [rax],al
   1400189a8:	(bad)  
   1400189a9:	add    BYTE PTR [rax],al
   1400189ab:	add    BYTE PTR [rax],al
   1400189ad:	add    BYTE PTR [rax],al
   1400189af:	add    BYTE PTR [rax-0x6a],cl
   1400189b2:	add    DWORD PTR [rax+0x1],eax
   1400189b5:	add    BYTE PTR [rax],al
   1400189b7:	add    BYTE PTR [rcx+0x0],ah
   1400189ba:	add    BYTE PTR [rax],al
   1400189bc:	add    BYTE PTR [rax],al
   1400189be:	add    BYTE PTR [rax],al
   1400189c0:	clc    
   1400189c1:	jbe    0x1400189c4
   1400189c3:	rex add DWORD PTR [rax],eax
   1400189c6:	add    BYTE PTR [rax],al
   1400189c8:	(bad)  
   1400189c9:	add    BYTE PTR [rax],al
   1400189cb:	add    BYTE PTR [rax],al
   1400189cd:	add    BYTE PTR [rax],al
   1400189cf:	add    BYTE PTR [rax-0x6a],bl
   1400189d2:	add    DWORD PTR [rax+0x1],eax
   1400189d5:	add    BYTE PTR [rax],al
   1400189d7:	add    BYTE PTR [rax+0x0],dl
   1400189da:	add    BYTE PTR [rax],al
   1400189dc:	add    BYTE PTR [rax],al
   1400189de:	add    BYTE PTR [rax],al
   1400189e0:	add    BYTE PTR [rdi+0x1],dh
   1400189e3:	rex add DWORD PTR [rax],eax
   1400189e6:	add    BYTE PTR [rax],al
   1400189e8:	sldt   WORD PTR [rax]
   1400189eb:	add    BYTE PTR [rax],al
   1400189ed:	add    BYTE PTR [rax],al
   1400189ef:	add    BYTE PTR [rax-0x6a],ch
   1400189f2:	add    DWORD PTR [rax+0x1],eax
   1400189f5:	add    BYTE PTR [rax],al
   1400189f7:	add    BYTE PTR [rbp+0x0],dl
   1400189fd:	add    BYTE PTR [rax],al
   1400189ff:	add    BYTE PTR [rax-0x6a],bh
   140018a02:	add    DWORD PTR [rax+0x1],eax
   140018a05:	add    BYTE PTR [rax],al
   140018a07:	add    BYTE PTR [rcx+0x0],dl
   140018a0a:	add    BYTE PTR [rax],al
   140018a0c:	add    BYTE PTR [rax],al
   140018a0e:	add    BYTE PTR [rax],al
   140018a10:	or     BYTE PTR [rdi+0x1],dh
   140018a13:	rex add DWORD PTR [rax],eax
   140018a16:	add    BYTE PTR [rax],al
   140018a18:	adc    BYTE PTR [rax],al
   140018a1a:	add    BYTE PTR [rax],al
   140018a1c:	add    BYTE PTR [rax],al
   140018a1e:	add    BYTE PTR [rax],al
   140018a20:	mov    BYTE PTR [rsi+0x14001],dl
   140018a26:	add    BYTE PTR [rax],al
   140018a28:	push   rdx
   140018a29:	add    BYTE PTR [rax],al
   140018a2b:	add    BYTE PTR [rax],al
   140018a2d:	add    BYTE PTR [rax],al
   140018a2f:	add    al,ch
   140018a31:	ja     0x140018a34
   140018a33:	rex add DWORD PTR [rax],eax
   140018a36:	add    BYTE PTR [rax],al
   140018a38:	sub    eax,0x0
   140018a3d:	add    BYTE PTR [rax],al
   140018a3f:	add    BYTE PTR [rax+0x1400196],bl
   140018a45:	add    BYTE PTR [rax],al
   140018a47:	add    BYTE PTR [rdx+0x0],dh
   140018a4a:	add    BYTE PTR [rax],al
   140018a4c:	add    BYTE PTR [rax],al
   140018a4e:	add    BYTE PTR [rax],al
   140018a50:	or     BYTE PTR [rax+0x1],bh
   140018a53:	rex add DWORD PTR [rax],eax
   140018a56:	add    BYTE PTR [rax],al
   140018a58:	xor    DWORD PTR [rax],eax
   140018a5a:	add    BYTE PTR [rax],al
   140018a5c:	add    BYTE PTR [rax],al
   140018a5e:	add    BYTE PTR [rax],al
   140018a60:	test   al,0x96
   140018a62:	add    DWORD PTR [rax+0x1],eax
   140018a65:	add    BYTE PTR [rax],al
   140018a67:	add    BYTE PTR [rax+0x0],bh
   140018a6a:	add    BYTE PTR [rax],al
   140018a6c:	add    BYTE PTR [rax],al
   140018a6e:	add    BYTE PTR [rax],al
   140018a70:	push   rax
   140018a71:	js     0x140018a74
   140018a73:	rex add DWORD PTR [rax],eax
   140018a76:	add    BYTE PTR [rax],al
   140018a78:	cmp    al,BYTE PTR [rax]
   140018a7a:	add    BYTE PTR [rax],al
   140018a7c:	add    BYTE PTR [rax],al
   140018a7e:	add    BYTE PTR [rax],al
   140018a80:	mov    eax,0x1400196
   140018a85:	add    BYTE PTR [rax],al
   140018a87:	add    BYTE PTR [rdx+0x0],al
   140018a8d:	add    BYTE PTR [rax],al
   140018a8f:	add    BYTE PTR [rax],dl
   140018a91:	ja     0x140018a94
   140018a93:	rex add DWORD PTR [rax],eax
   140018a96:	add    BYTE PTR [rax],al
   140018a98:	adc    DWORD PTR [rax],eax
   140018a9a:	add    BYTE PTR [rax],al
   140018a9c:	add    BYTE PTR [rax],al
   140018a9e:	add    BYTE PTR [rax],al
   140018aa0:	js     0x140018b1a
   140018aa2:	add    DWORD PTR [rax+0x1],eax
   140018aa5:	add    BYTE PTR [rax],al
   140018aa7:	add    BYTE PTR [rdi],bh
   140018aa9:	add    BYTE PTR [rax],al
   140018aab:	add    BYTE PTR [rax],al
   140018aad:	add    BYTE PTR [rax],al
   140018aaf:	add    al,cl
   140018ab1:	xchg   esi,eax
   140018ab2:	add    DWORD PTR [rax+0x1],eax
   140018ab5:	add    BYTE PTR [rax],al
   140018ab7:	add    BYTE PTR [rcx+0x0],cl
   140018abd:	add    BYTE PTR [rax],al
   140018abf:	add    al,bl
   140018ac1:	xchg   esi,eax
   140018ac2:	add    DWORD PTR [rax+0x1],eax
   140018ac5:	add    BYTE PTR [rax],al
   140018ac7:	add    BYTE PTR [rbx+0x0],dl
   140018aca:	add    BYTE PTR [rax],al
   140018acc:	add    BYTE PTR [rax],al
   140018ace:	add    BYTE PTR [rax],al
   140018ad0:	adc    BYTE PTR [rax+0x1],bh
   140018ad3:	rex add DWORD PTR [rax],eax
   140018ad6:	add    BYTE PTR [rax],al
   140018ad8:	xor    al,BYTE PTR [rax]
   140018ada:	add    BYTE PTR [rax],al
   140018adc:	add    BYTE PTR [rax],al
   140018ade:	add    BYTE PTR [rax],al
   140018ae0:	call   0x141418c7b
   140018ae5:	add    BYTE PTR [rax],al
   140018ae7:	add    BYTE PTR [rcx+0x0],bh
   140018aea:	add    BYTE PTR [rax],al
   140018aec:	add    BYTE PTR [rax],al
   140018aee:	add    BYTE PTR [rax],al
   140018af0:	test   al,0x77
   140018af2:	add    DWORD PTR [rax+0x1],eax
   140018af5:	add    BYTE PTR [rax],al
   140018af7:	add    BYTE PTR [rip+0x0],ah        # 0x140018afd
   140018afd:	add    BYTE PTR [rax],al
   140018aff:	add    al,bh
   140018b01:	xchg   esi,eax
   140018b02:	add    DWORD PTR [rax+0x1],eax
   140018b05:	add    BYTE PTR [rax],al
   140018b07:	add    BYTE PTR [rdi+0x0],ah
   140018b0a:	add    BYTE PTR [rax],al
   140018b0c:	add    BYTE PTR [rax],al
   140018b0e:	add    BYTE PTR [rax],al
   140018b10:	movabs al,ds:0x2400000001400177
   140018b19:	add    BYTE PTR [rax],al
   140018b1b:	add    BYTE PTR [rax],al
   140018b1d:	add    BYTE PTR [rax],al
   140018b1f:	add    BYTE PTR [rax],cl
   140018b21:	xchg   edi,eax
   140018b22:	add    DWORD PTR [rax+0x1],eax
   140018b25:	add    BYTE PTR [rax],al
   140018b27:	add    BYTE PTR [rsi+0x0],ah
   140018b2a:	add    BYTE PTR [rax],al
   140018b2c:	add    BYTE PTR [rax],al
   140018b2e:	add    BYTE PTR [rax],al
   140018b30:	sbb    BYTE PTR [rdi+0x14001],dl
   140018b36:	add    BYTE PTR [rax],al
   140018b38:	mov    es,WORD PTR [rax]
   140018b3a:	add    BYTE PTR [rax],al
   140018b3c:	add    BYTE PTR [rax],al
   140018b3e:	add    BYTE PTR [rax],al
   140018b40:	fdiv   DWORD PTR [rdi+0x1]
   140018b43:	rex add DWORD PTR [rax],eax
   140018b46:	add    BYTE PTR [rax],al
   140018b48:	sub    eax,DWORD PTR [rax]
   140018b4a:	add    BYTE PTR [rax],al
   140018b4c:	add    BYTE PTR [rax],al
   140018b4e:	add    BYTE PTR [rax],al
   140018b50:	sub    BYTE PTR [rdi+0x14001],dl
   140018b56:	add    BYTE PTR [rax],al
   140018b58:	ins    DWORD PTR es:[rdi],dx
   140018b59:	add    BYTE PTR [rax],al
   140018b5b:	add    BYTE PTR [rax],al
   140018b5d:	add    BYTE PTR [rax],al
   140018b5f:	add    BYTE PTR [rax],bh
   140018b61:	xchg   edi,eax
   140018b62:	add    DWORD PTR [rax+0x1],eax
   140018b65:	add    BYTE PTR [rax],al
   140018b67:	add    BYTE PTR [rbx+0x0],al
   140018b6d:	add    BYTE PTR [rax],al
   140018b6f:	add    BYTE PTR [rax+0x78],ch
   140018b72:	add    DWORD PTR [rax+0x1],eax
   140018b75:	add    BYTE PTR [rax],al
   140018b77:	add    BYTE PTR [rip+0x0],bh        # 0x140018b7d
   140018b7d:	add    BYTE PTR [rax],al
   140018b7f:	add    BYTE PTR [rax-0x69],cl
   140018b82:	add    DWORD PTR [rax+0x1],eax
   140018b85:	add    BYTE PTR [rax],al
   140018b87:	add    BYTE PTR [rsi+0x0],al
   140018b8d:	add    BYTE PTR [rax],al
   140018b8f:	add    BYTE PTR [rax+0x78],bl
   140018b92:	add    DWORD PTR [rax+0x1],eax
   140018b95:	add    BYTE PTR [rax],al
   140018b97:	add    BYTE PTR [rbx],bh
   140018b99:	add    BYTE PTR [rax],al
   140018b9b:	add    BYTE PTR [rax],al
   140018b9d:	add    BYTE PTR [rax],al
   140018b9f:	add    BYTE PTR [rax-0x69],bl
   140018ba2:	add    DWORD PTR [rax+0x1],eax
   140018ba5:	add    BYTE PTR [rax],al
   140018ba7:	add    BYTE PTR [rax+rax*1+0x0],al
   140018bae:	add    BYTE PTR [rax],al
   140018bb0:	add    BYTE PTR [rax+0x1],bh
   140018bb3:	rex add DWORD PTR [rax],eax
   140018bb6:	add    BYTE PTR [rax],al
   140018bb8:	xor    BYTE PTR [rax],al
   140018bba:	add    BYTE PTR [rax],al
   140018bbc:	add    BYTE PTR [rax],al
   140018bbe:	add    BYTE PTR [rax],al
   140018bc0:	push   0x1400197
   140018bc5:	add    BYTE PTR [rax],al
   140018bc7:	add    BYTE PTR [rbp+0x0],bl
   140018bcd:	add    BYTE PTR [rax],al
   140018bcf:	add    BYTE PTR [rax-0x69],bh
   140018bd2:	add    DWORD PTR [rax+0x1],eax
   140018bd5:	add    BYTE PTR [rax],al
   140018bd7:	add    BYTE PTR [rdi+0x0],dh
   140018bda:	add    BYTE PTR [rax],al
   140018bdc:	add    BYTE PTR [rax],al
   140018bde:	add    BYTE PTR [rax],al
   140018be0:	mov    BYTE PTR [rdi+0x14001],dl
   140018be6:	add    BYTE PTR [rax],al
   140018be8:	jne    0x140018bea
   140018bea:	add    BYTE PTR [rax],al
   140018bec:	add    BYTE PTR [rax],al
   140018bee:	add    BYTE PTR [rax],al
   140018bf0:	cwde   
   140018bf1:	xchg   edi,eax
   140018bf2:	add    DWORD PTR [rax+0x1],eax
   140018bf5:	add    BYTE PTR [rax],al
   140018bf7:	add    BYTE PTR [rbp+0x0],dl
   140018bfa:	add    BYTE PTR [rax],al
   140018bfc:	add    BYTE PTR [rax],al
   140018bfe:	add    BYTE PTR [rax],al
   140018c00:	sbb    BYTE PTR [rdi+0x1],dh
   140018c03:	rex add DWORD PTR [rax],eax
   140018c06:	add    BYTE PTR [rax],al
   140018c08:	adc    al,BYTE PTR [rax]
   140018c0a:	add    BYTE PTR [rax],al
   140018c0c:	add    BYTE PTR [rax],al
   140018c0e:	add    BYTE PTR [rax],al
   140018c10:	test   al,0x97
   140018c12:	add    DWORD PTR [rax+0x1],eax
   140018c15:	add    BYTE PTR [rax],al
   140018c17:	add    BYTE PTR [rsi+0x0],dl
   140018c1d:	add    BYTE PTR [rax],al
   140018c1f:	add    BYTE PTR [rax+0x1400197],bh
   140018c25:	add    BYTE PTR [rax],al
   140018c27:	add    BYTE PTR [rax+rax*1+0x0],dl
   140018c2b:	add    BYTE PTR [rax],al
   140018c2d:	add    BYTE PTR [rax],al
   140018c2f:	add    al,cl
   140018c31:	xchg   edi,eax
   140018c32:	add    DWORD PTR [rax+0x1],eax
   140018c35:	add    BYTE PTR [rax],al
   140018c37:	add    BYTE PTR [rdi+0x0],dl
   140018c3d:	add    BYTE PTR [rax],al
   140018c3f:	add    BYTE PTR [rax],ah
   140018c41:	ja     0x140018c44
   140018c43:	rex add DWORD PTR [rax],eax
   140018c46:	add    BYTE PTR [rax],al
   140018c48:	adc    eax,DWORD PTR [rax]
   140018c4a:	add    BYTE PTR [rax],al
   140018c4c:	add    BYTE PTR [rax],al
   140018c4e:	add    BYTE PTR [rax],al
   140018c50:	fcom   DWORD PTR [rdi+0x14001]
   140018c56:	add    BYTE PTR [rax],al
   140018c58:	lea    eax,[rax]
   140018c5a:	add    BYTE PTR [rax],al
   140018c5c:	add    BYTE PTR [rax],al
   140018c5e:	add    BYTE PTR [rax],al
   140018c60:	xor    BYTE PTR [rax+0x1],bh
   140018c63:	rex add DWORD PTR [rax],eax
   140018c66:	add    BYTE PTR [rax],al
   140018c68:	add    BYTE PTR ss:[rax],al
   140018c6b:	add    BYTE PTR [rax],al
   140018c6d:	add    BYTE PTR [rax],al
   140018c6f:	add    al,ch
   140018c71:	xchg   edi,eax
   140018c72:	add    DWORD PTR [rax+0x1],eax
   140018c75:	add    BYTE PTR [rax],al
   140018c77:	add    BYTE PTR [rsi+0x0],bh
   140018c7a:	add    BYTE PTR [rax],al
   140018c7c:	add    BYTE PTR [rax],al
   140018c7e:	add    BYTE PTR [rax],al
   140018c80:	sub    BYTE PTR [rdi+0x1],dh
   140018c83:	rex add DWORD PTR [rax],eax
   140018c86:	add    BYTE PTR [rax],al
   140018c88:	adc    al,0x0
   140018c8a:	add    BYTE PTR [rax],al
   140018c8c:	add    BYTE PTR [rax],al
   140018c8e:	add    BYTE PTR [rax],al
   140018c90:	clc    
   140018c91:	xchg   edi,eax
   140018c92:	add    DWORD PTR [rax+0x1],eax
   140018c95:	add    BYTE PTR [rax],al
   140018c97:	add    BYTE PTR [rsi+0x0],dl
   140018c9a:	add    BYTE PTR [rax],al
   140018c9c:	add    BYTE PTR [rax],al
   140018c9e:	add    BYTE PTR [rax],al
   140018ca0:	xor    BYTE PTR [rdi+0x1],dh
   140018ca3:	rex add DWORD PTR [rax],eax
   140018ca6:	add    BYTE PTR [rax],al
   140018ca8:	adc    eax,0x0
   140018cad:	add    BYTE PTR [rax],al
   140018caf:	add    BYTE PTR [rax],cl
   140018cb1:	cwde   
   140018cb2:	add    DWORD PTR [rax+0x1],eax
   140018cb5:	add    BYTE PTR [rax],al
   140018cb7:	add    BYTE PTR [rdi+0x0],dl
   140018cba:	add    BYTE PTR [rax],al
   140018cbc:	add    BYTE PTR [rax],al
   140018cbe:	add    BYTE PTR [rax],al
   140018cc0:	sbb    BYTE PTR [rax+0x14001],bl
   140018cc6:	add    BYTE PTR [rax],al
   140018cc8:	cwde   
   140018cc9:	add    BYTE PTR [rax],al
   140018ccb:	add    BYTE PTR [rax],al
   140018ccd:	add    BYTE PTR [rax],al
   140018ccf:	add    BYTE PTR [rax],ch
   140018cd1:	cwde   
   140018cd2:	add    DWORD PTR [rax+0x1],eax
   140018cd5:	add    BYTE PTR [rax],al
   140018cd7:	add    BYTE PTR [rax+rax*1+0x0],cl
   140018cde:	add    BYTE PTR [rax],al
   140018ce0:	cmp    BYTE PTR [rax+0x14001],bl
   140018ce6:	add    BYTE PTR [rax],al
   140018ce8:	lahf   
   140018ce9:	add    BYTE PTR [rax],al
   140018ceb:	add    BYTE PTR [rax],al
   140018ced:	add    BYTE PTR [rax],al
   140018cef:	add    BYTE PTR [rax-0x68],cl
   140018cf2:	add    DWORD PTR [rax+0x1],eax
   140018cf5:	add    BYTE PTR [rax],al
   140018cf7:	add    BYTE PTR [rax+0x0],ch
   140018cfd:	add    BYTE PTR [rax],al
   140018cff:	add    BYTE PTR [rax],bh
   140018d01:	ja     0x140018d04
   140018d03:	rex add DWORD PTR [rax],eax
   140018d06:	add    BYTE PTR [rax],al
   140018d08:	(bad)  
   140018d09:	add    BYTE PTR [rax],al
   140018d0b:	add    BYTE PTR [rax],al
   140018d0d:	add    BYTE PTR [rax],al
   140018d0f:	add    BYTE PTR [rax-0x68],bl
   140018d12:	add    DWORD PTR [rax+0x1],eax
   140018d15:	add    BYTE PTR [rax],al
   140018d17:	add    BYTE PTR [rax+0x0],bl
   140018d1a:	add    BYTE PTR [rax],al
   140018d1c:	add    BYTE PTR [rax],al
   140018d1e:	add    BYTE PTR [rax],al
   140018d20:	rex ja 0x140018d24
   140018d23:	rex add DWORD PTR [rax],eax
   140018d26:	add    BYTE PTR [rax],al
   140018d28:	(bad)  
   140018d29:	add    BYTE PTR [rax],al
   140018d2b:	add    BYTE PTR [rax],al
   140018d2d:	add    BYTE PTR [rax],al
   140018d2f:	add    BYTE PTR [rax-0x68],ch
   140018d32:	add    DWORD PTR [rax+0x1],eax
   140018d35:	add    BYTE PTR [rax],al
   140018d37:	add    BYTE PTR [rcx+0x0],bl
   140018d3a:	add    BYTE PTR [rax],al
   140018d3c:	add    BYTE PTR [rax],al
   140018d3e:	add    BYTE PTR [rax],al
   140018d40:	(bad)  
   140018d41:	js     0x140018d44
   140018d43:	rex add DWORD PTR [rax],eax
   140018d46:	add    BYTE PTR [rax],al
   140018d48:	cmp    al,0x0
   140018d4a:	add    BYTE PTR [rax],al
   140018d4c:	add    BYTE PTR [rax],al
   140018d4e:	add    BYTE PTR [rax],al
   140018d50:	js     0x140018cea
   140018d52:	add    DWORD PTR [rax+0x1],eax
   140018d55:	add    BYTE PTR [rax],al
   140018d57:	add    BYTE PTR [rbp+0x0],al
   140018d5d:	add    BYTE PTR [rax],al
   140018d5f:	add    BYTE PTR [rax+0x1400198],cl
   140018d65:	add    BYTE PTR [rax],al
   140018d67:	add    BYTE PTR [rdi+0x0],ah
   140018d6d:	add    BYTE PTR [rax],al
   140018d6f:	add    BYTE PTR [rax+0x1400198],bl
   140018d75:	add    BYTE PTR [rax],al
   140018d77:	add    BYTE PTR [rsi+0x0],dh
   140018d7a:	add    BYTE PTR [rax],al
   140018d7c:	add    BYTE PTR [rax],al
   140018d7e:	add    BYTE PTR [rax],al
   140018d80:	test   al,0x98
   140018d82:	add    DWORD PTR [rax+0x1],eax
   140018d85:	add    BYTE PTR [rax],al
   140018d87:	add    BYTE PTR [rax+rax*1+0x0],bl
   140018d8e:	add    BYTE PTR [rax],al
   140018d90:	push   rax
   140018d91:	ja     0x140018d94
   140018d93:	rex add DWORD PTR [rax],eax
   140018d96:	add    BYTE PTR [rax],al
   140018d98:	sbb    DWORD PTR [rax],eax
   140018d9a:	add    BYTE PTR [rax],al
   140018d9c:	add    BYTE PTR [rax],al
   140018d9e:	add    BYTE PTR [rax],al
   140018da0:	mov    eax,0x1400198
   140018da5:	add    BYTE PTR [rax],al
   140018da7:	add    BYTE PTR [rbx+0x0],bl
   140018daa:	add    BYTE PTR [rax],al
   140018dac:	add    BYTE PTR [rax],al
   140018dae:	add    BYTE PTR [rax],al
   140018db0:	nop
   140018db1:	ja     0x140018db4
   140018db3:	rex add DWORD PTR [rax],eax
   140018db6:	add    BYTE PTR [rax],al
   140018db8:	and    al,BYTE PTR [rax]
   140018dba:	add    BYTE PTR [rax],al
   140018dbc:	add    BYTE PTR [rax],al
   140018dbe:	add    BYTE PTR [rax],al
   140018dc0:	enter  0x198,0x40
   140018dc4:	add    DWORD PTR [rax],eax
   140018dc6:	add    BYTE PTR [rax],al
   140018dc8:	add    BYTE PTR fs:[rax],al
   140018dcb:	add    BYTE PTR [rax],al
   140018dcd:	add    BYTE PTR [rax],al
   140018dcf:	add    al,bl
   140018dd1:	cwde   
   140018dd2:	add    DWORD PTR [rax+0x1],eax
   140018dd5:	add    BYTE PTR [rax],al
   140018dd7:	add    BYTE PTR [rsi+0x0],bh
   140018ddd:	add    BYTE PTR [rax],al
   140018ddf:	add    al,ch
   140018de1:	cwde   
   140018de2:	add    DWORD PTR [rax+0x1],eax
   140018de5:	add    BYTE PTR [rax],al
   140018de7:	add    bl,al
   140018de9:	add    BYTE PTR [rax],al
   140018deb:	add    BYTE PTR [rax],al
   140018ded:	add    BYTE PTR [rax],al
   140018def:	add    al,bh
   140018df1:	cwde   
   140018df2:	add    DWORD PTR [rax+0x1],eax
   140018df5:	add    BYTE PTR [rax],al
   140018df7:	add    BYTE PTR [rax+0x0],dh
   140018dfd:	add    BYTE PTR [rax],al
   140018dff:	add    BYTE PTR [rax],cl
   140018e01:	cdq    
   140018e02:	add    DWORD PTR [rax+0x1],eax
   140018e05:	add    BYTE PTR [rax],al
   140018e07:	add    BYTE PTR [rax+0x0],bh
   140018e0d:	add    BYTE PTR [rax],al
   140018e0f:	add    BYTE PTR [rax],bl
   140018e11:	cdq    
   140018e12:	add    DWORD PTR [rax+0x1],eax
   140018e15:	add    BYTE PTR [rax],al
   140018e17:	add    bl,cl
   140018e19:	add    BYTE PTR [rax],al
   140018e1b:	add    BYTE PTR [rax],al
   140018e1d:	add    BYTE PTR [rax],al
   140018e1f:	add    BYTE PTR [rax],ch
   140018e21:	cdq    
   140018e22:	add    DWORD PTR [rax+0x1],eax
   140018e25:	add    BYTE PTR [rax],al
   140018e27:	add    bh,al
   140018e29:	add    BYTE PTR [rax],al
   140018e2b:	add    BYTE PTR [rax],al
   140018e2d:	add    BYTE PTR [rax],al
   140018e2f:	add    BYTE PTR [rax+0x77],bl
   140018e32:	add    DWORD PTR [rax+0x1],eax
   140018e35:	add    BYTE PTR [rax],al
   140018e37:	add    BYTE PTR [rdx],bl
   140018e39:	add    BYTE PTR [rax],al
   140018e3b:	add    BYTE PTR [rax],al
   140018e3d:	add    BYTE PTR [rax],al
   140018e3f:	add    BYTE PTR [rax],bh
   140018e41:	cdq    
   140018e42:	add    DWORD PTR [rax+0x1],eax
   140018e45:	add    BYTE PTR [rax],al
   140018e47:	add    BYTE PTR [rax+rax*1+0x0],bl
   140018e4b:	add    BYTE PTR [rax],al
   140018e4d:	add    BYTE PTR [rax],al
   140018e4f:	add    BYTE PTR [rax+0x1400182],dl
   140018e55:	add    BYTE PTR [rax],al
   140018e57:	add    bl,ah
   140018e59:	add    BYTE PTR [rax],al
   140018e5b:	add    BYTE PTR [rax],al
   140018e5d:	add    BYTE PTR [rax],al
   140018e5f:	add    BYTE PTR [rax-0x67],cl
   140018e62:	add    DWORD PTR [rax+0x1],eax
   140018e65:	add    BYTE PTR [rax],al
   140018e67:	add    dl,al
   140018e69:	add    BYTE PTR [rax],al
   140018e6b:	add    BYTE PTR [rax],al
   140018e6d:	add    BYTE PTR [rax],al
   140018e6f:	add    BYTE PTR [rax-0x67],ah
   140018e72:	add    DWORD PTR [rax+0x1],eax
   140018e75:	add    BYTE PTR [rax],al
   140018e77:	add    BYTE PTR [rbp+0x0],bh
   140018e7d:	add    BYTE PTR [rax],al
   140018e7f:	add    BYTE PTR [rax-0x67],bh
   140018e82:	add    DWORD PTR [rax+0x1],eax
   140018e85:	add    BYTE PTR [rax],al
   140018e87:	add    BYTE PTR [rsi+0x0],ah
   140018e8d:	add    BYTE PTR [rax],al
   140018e8f:	add    BYTE PTR [rax+0x1400199],dl
   140018e95:	add    BYTE PTR [rax],al
   140018e97:	add    BYTE PTR [rcx+0x0],bl
   140018e9d:	add    BYTE PTR [rax],al
   140018e9f:	add    BYTE PTR [rax+0x77],ah
   140018ea2:	add    DWORD PTR [rax+0x1],eax
   140018ea5:	add    BYTE PTR [rax],al
   140018ea7:	add    BYTE PTR [rbx],bl
   140018ea9:	add    BYTE PTR [rax],al
   140018eab:	add    BYTE PTR [rax],al
   140018ead:	add    BYTE PTR [rax],al
   140018eaf:	add    BYTE PTR [rax+0x1400199],ch
   140018eb5:	add    BYTE PTR [rax],al
   140018eb7:	add    BYTE PTR [rdx+0x0],bl
   140018ebd:	add    BYTE PTR [rax],al
   140018ebf:	add    BYTE PTR [rax+0x1400199],bh
   140018ec5:	add    BYTE PTR [rax],al
   140018ec7:	add    BYTE PTR [rbp+0x0],bl
   140018eca:	add    BYTE PTR [rax],al
   140018ecc:	add    BYTE PTR [rax],al
   140018ece:	add    BYTE PTR [rax],al
   140018ed0:	sbb    BYTE PTR [rax+0x1],bh
   140018ed3:	rex add DWORD PTR [rax],eax
   140018ed6:	add    BYTE PTR [rax],al
   140018ed8:	xor    eax,DWORD PTR [rax]
   140018eda:	add    BYTE PTR [rax],al
   140018edc:	add    BYTE PTR [rax],al
   140018ede:	add    BYTE PTR [rax],al
   140018ee0:	enter  0x199,0x40
   140018ee4:	add    DWORD PTR [rax],eax
   140018ee6:	add    BYTE PTR [rax],al
   140018ee8:	jp     0x140018eea
   140018eea:	add    BYTE PTR [rax],al
   140018eec:	add    BYTE PTR [rax],al
   140018eee:	add    BYTE PTR [rax],al
   140018ef0:	cmp    BYTE PTR [rax+0x1],0x40
   140018ef4:	add    DWORD PTR [rax],eax
   140018ef6:	add    BYTE PTR [rax],al
   140018ef8:	add    BYTE PTR [rax],al
   140018efb:	add    BYTE PTR [rax],al
   140018efd:	add    BYTE PTR [rax],al
   140018eff:	add    al,bl
   140018f01:	cdq    
   140018f02:	add    DWORD PTR [rax+0x1],eax
   140018f05:	add    BYTE PTR [rax],al
   140018f07:	add    BYTE PTR [rdx+0x0],cl
   140018f0d:	add    BYTE PTR [rax],al
   140018f0f:	add    BYTE PTR [rax+0x78],al
   140018f12:	add    DWORD PTR [rax+0x1],eax
   140018f15:	add    BYTE PTR [rax],al
   140018f17:	add    BYTE PTR [rax],bh
   140018f19:	add    BYTE PTR [rax],al
   140018f1b:	add    BYTE PTR [rax],al
   140018f1d:	add    BYTE PTR [rax],al
   140018f1f:	add    al,ch
   140018f21:	cdq    
   140018f22:	add    DWORD PTR [rax+0x1],eax
   140018f25:	add    BYTE PTR [rax],al
   140018f27:	add    BYTE PTR [rax+0x0],al
   140018f2d:	add    BYTE PTR [rax],al
   140018f2f:	add    BYTE PTR [rax+0x78],cl
   140018f32:	add    DWORD PTR [rax+0x1],eax
   140018f35:	add    BYTE PTR [rax],al
   140018f37:	add    BYTE PTR [rcx],bh
   140018f39:	add    BYTE PTR [rax],al
   140018f3b:	add    BYTE PTR [rax],al
   140018f3d:	add    BYTE PTR [rax],al
   140018f3f:	add    al,bh
   140018f41:	cdq    
   140018f42:	add    DWORD PTR [rax+0x1],eax
   140018f45:	add    BYTE PTR [rax],al
   140018f47:	add    BYTE PTR [rcx+0x0],al
   140018f4d:	add    BYTE PTR [rax],al
   140018f4f:	add    BYTE PTR [rax+0x77],ch
   140018f52:	add    DWORD PTR [rax+0x1],eax
   140018f55:	add    BYTE PTR [rax],al
   140018f57:	add    BYTE PTR [rax+rax*1],bl
   140018f5a:	add    BYTE PTR [rax],al
   140018f5c:	add    BYTE PTR [rax],al
   140018f5e:	add    BYTE PTR [rax],al
   140018f60:	or     BYTE PTR [rdx+0x14001],bl
   140018f66:	add    BYTE PTR [rax],al
   140018f68:	pop    rsi
   140018f69:	add    BYTE PTR [rax],al
   140018f6b:	add    BYTE PTR [rax],al
   140018f6d:	add    BYTE PTR [rax],al
   140018f6f:	add    BYTE PTR [rax],bl
   140018f71:	(bad)  
   140018f72:	add    DWORD PTR [rax+0x1],eax
   140018f75:	add    BYTE PTR [rax],al
   140018f77:	add    BYTE PTR [rsi+0x0],ch
   140018f7a:	add    BYTE PTR [rax],al
   140018f7c:	add    BYTE PTR [rax],al
   140018f7e:	add    BYTE PTR [rax],al
   140018f80:	jo     0x140018ff9
   140018f82:	add    DWORD PTR [rax+0x1],eax
   140018f85:	add    BYTE PTR [rax],al
   140018f87:	add    BYTE PTR [rip+0x0],bl        # 0x140018f8d
   140018f8d:	add    BYTE PTR [rax],al
   140018f8f:	add    BYTE PTR [rax],ch
   140018f91:	(bad)  
   140018f92:	add    DWORD PTR [rax+0x1],eax
   140018f95:	add    BYTE PTR [rax],al
   140018f97:	add    BYTE PTR [rdi+0x0],bl
   140018f9a:	add    BYTE PTR [rax],al
   140018f9c:	add    BYTE PTR [rax],al
   140018f9e:	add    BYTE PTR [rax],al
   140018fa0:	sub    BYTE PTR [rax+0x1],bh
   140018fa3:	rex add DWORD PTR [rax],eax
   140018fa6:	add    BYTE PTR [rax],al
   140018fa8:	xor    eax,0x0
   140018fad:	add    BYTE PTR [rax],al
   140018faf:	add    BYTE PTR [rax],bh
   140018fb1:	(bad)  
   140018fb2:	add    DWORD PTR [rax+0x1],eax
   140018fb5:	add    BYTE PTR [rax],al
   140018fb7:	add    BYTE PTR [rax+rax*1+0x0],bh
   140018fbb:	add    BYTE PTR [rax],al
   140018fbd:	add    BYTE PTR [rax],al
   140018fbf:	add    BYTE PTR [rax],dh
   140018fc1:	push   0x14001
   140018fc6:	add    BYTE PTR [rax],al
   140018fc8:	and    BYTE PTR [rax],al
   140018fca:	add    BYTE PTR [rax],al
   140018fcc:	add    BYTE PTR [rax],al
   140018fce:	add    BYTE PTR [rax],al
   140018fd0:	rex.W (bad) 
   140018fd2:	add    DWORD PTR [rax+0x1],eax
   140018fd5:	add    BYTE PTR [rax],al
   140018fd7:	add    BYTE PTR [rdx+0x0],ah
   140018fda:	add    BYTE PTR [rax],al
   140018fdc:	add    BYTE PTR [rax],al
   140018fde:	add    BYTE PTR [rax],al
   140018fe0:	js     0x140019059
   140018fe2:	add    DWORD PTR [rax+0x1],eax
   140018fe5:	add    BYTE PTR [rax],al
   140018fe7:	add    BYTE PTR [rsi],bl
   140018fe9:	add    BYTE PTR [rax],al
   140018feb:	add    BYTE PTR [rax],al
   140018fed:	add    BYTE PTR [rax],al
   140018fef:	add    BYTE PTR [rax-0x66],bl
   140018ff2:	add    DWORD PTR [rax+0x1],eax
   140018ff5:	add    BYTE PTR [rax],al
   140018ff7:	add    BYTE PTR [rax+0x0],ah
   140018ffa:	add    BYTE PTR [rax],al
   140018ffc:	add    BYTE PTR [rax],al
   140018ffe:	add    BYTE PTR [rax],al
   140019000:	and    BYTE PTR [rax+0x1],bh
   140019003:	rex add DWORD PTR [rax],eax
   140019006:	add    BYTE PTR [rax],al
   140019008:	xor    al,0x0
   14001900a:	add    BYTE PTR [rax],al
   14001900c:	add    BYTE PTR [rax],al
   14001900e:	add    BYTE PTR [rax],al
   140019010:	push   0x140019a
   140019015:	add    BYTE PTR [rax],al
   140019017:	add    BYTE PTR [rsi+0x0],bl
   14001901d:	add    BYTE PTR [rax],al
   14001901f:	add    BYTE PTR [rax+0x140019a],al
   140019025:	add    BYTE PTR [rax],al
   140019027:	add    BYTE PTR [rbx+0x0],bh
   14001902a:	add    BYTE PTR [rax],al
   14001902c:	add    BYTE PTR [rax],al
   14001902e:	add    BYTE PTR [rax],al
   140019030:	mov    eax,0x1400177
   140019035:	add    BYTE PTR [rax],al
   140019037:	add    BYTE PTR [rdi],ah
   140019039:	add    BYTE PTR [rax],al
   14001903b:	add    BYTE PTR [rax],al
   14001903d:	add    BYTE PTR [rax],al
   14001903f:	add    BYTE PTR [rax+0x140019a],bl
   140019045:	add    BYTE PTR [rax],al
   140019047:	add    BYTE PTR [rcx+0x0],ch
   14001904a:	add    BYTE PTR [rax],al
   14001904c:	add    BYTE PTR [rax],al
   14001904e:	add    BYTE PTR [rax],al
   140019050:	test   al,0x9a
   140019052:	add    DWORD PTR [rax+0x1],eax
   140019055:	add    BYTE PTR [rax],al
   140019057:	add    BYTE PTR [rdi+0x0],ch
   14001905a:	add    BYTE PTR [rax],al
   14001905c:	add    BYTE PTR [rax],al
   14001905e:	add    BYTE PTR [rax],al
   140019060:	mov    eax,0x140019a
   140019065:	add    BYTE PTR [rax],al
   140019067:	add    BYTE PTR [rbx],al
   140019069:	add    BYTE PTR [rax],al
   14001906b:	add    BYTE PTR [rax],al
   14001906d:	add    BYTE PTR [rax],al
   14001906f:	add    al,cl
   140019071:	(bad)  
   140019072:	add    DWORD PTR [rax+0x1],eax
   140019075:	add    BYTE PTR [rax],al
   140019077:	add    dl,ah
   140019079:	add    BYTE PTR [rax],al
   14001907b:	add    BYTE PTR [rax],al
   14001907d:	add    BYTE PTR [rax],al
   14001907f:	add    al,bl
   140019081:	(bad)  
   140019082:	add    DWORD PTR [rax+0x1],eax
   140019085:	add    BYTE PTR [rax],al
   140019087:	add    BYTE PTR [rax+0x0],dl
   14001908d:	add    BYTE PTR [rax],al
   14001908f:	add    al,ch
   140019091:	(bad)  
   140019092:	add    DWORD PTR [rax+0x1],eax
   140019095:	add    BYTE PTR [rax],al
   140019097:	add    BYTE PTR [rcx+0x0],ah
   14001909d:	add    BYTE PTR [rax],al
   14001909f:	add    al,bh
   1400190a1:	(bad)  
   1400190a2:	add    DWORD PTR [rax+0x1],eax
   1400190a5:	add    BYTE PTR [rax],al
   1400190a7:	add    BYTE PTR [rdx+0x0],dh
   1400190ad:	add    BYTE PTR [rax],al
   1400190af:	add    BYTE PTR [rax],cl
   1400190b1:	fwait
   1400190b2:	add    DWORD PTR [rax+0x1],eax
   1400190b5:	add    BYTE PTR [rax],al
   1400190b7:	add    BYTE PTR [rdx+0x0],ch
   1400190bd:	add    BYTE PTR [rax],al
   1400190bf:	add    BYTE PTR [rax],bl
   1400190c1:	fwait
   1400190c2:	add    DWORD PTR [rax+0x1],eax
   1400190c5:	add    BYTE PTR [rax],al
   1400190c7:	add    BYTE PTR [rsi+0x0],al
   1400190ca:	add    BYTE PTR [rax],al
   1400190cc:	add    BYTE PTR [rax],al
   1400190ce:	add    BYTE PTR [rax],al
   1400190d0:	sub    BYTE PTR [rbx+0x14001],bl
   1400190d6:	add    BYTE PTR [rax],al
   1400190d8:	jo     0x1400190da
   1400190da:	add    BYTE PTR [rax],al
   1400190dc:	add    BYTE PTR [rax],al
   1400190de:	add    BYTE PTR [rax],al
   1400190e0:	(bad)  
   1400190e1:	add    BYTE PTR [rsi+0x0],ah
   1400190e4:	sub    eax,0x61007a00
   1400190e9:	add    BYTE PTR [rax],al
   1400190eb:	add    BYTE PTR [rax],al
   1400190ed:	add    BYTE PTR [rax],al
   1400190ef:	add    BYTE PTR [rcx+0x0],ah
   1400190f2:	jb     0x1400190f4
   1400190f4:	sub    eax,0x65006100
   1400190f9:	add    BYTE PTR [rax],al
   1400190fb:	add    BYTE PTR [rax],al
   1400190fd:	add    BYTE PTR [rax],al
   1400190ff:	add    BYTE PTR [rcx+0x0],ah
   140019102:	jb     0x140019104
   140019104:	sub    eax,0x68006200
   140019109:	add    BYTE PTR [rax],al
   14001910b:	add    BYTE PTR [rax],al
   14001910d:	add    BYTE PTR [rax],al
   14001910f:	add    BYTE PTR [rcx+0x0],ah
   140019112:	jb     0x140019114
   140019114:	sub    eax,0x7a006400
   140019119:	add    BYTE PTR [rax],al
   14001911b:	add    BYTE PTR [rax],al
   14001911d:	add    BYTE PTR [rax],al
   14001911f:	add    BYTE PTR [rcx+0x0],ah
   140019122:	jb     0x140019124
   140019124:	sub    eax,0x67006500
   140019129:	add    BYTE PTR [rax],al
   14001912b:	add    BYTE PTR [rax],al
   14001912d:	add    BYTE PTR [rax],al
   14001912f:	add    BYTE PTR [rcx+0x0],ah
   140019132:	jb     0x140019134
   140019134:	sub    eax,0x71006900
   140019139:	add    BYTE PTR [rax],al
   14001913b:	add    BYTE PTR [rax],al
   14001913d:	add    BYTE PTR [rax],al
   14001913f:	add    BYTE PTR [rcx+0x0],ah
   140019142:	jb     0x140019144
   140019144:	sub    eax,0x6f006a00
   140019149:	add    BYTE PTR [rax],al
   14001914b:	add    BYTE PTR [rax],al
   14001914d:	add    BYTE PTR [rax],al
   14001914f:	add    BYTE PTR [rcx+0x0],ah
   140019152:	jb     0x140019154
   140019154:	sub    eax,0x77006b00
   140019159:	add    BYTE PTR [rax],al
   14001915b:	add    BYTE PTR [rax],al
   14001915d:	add    BYTE PTR [rax],al
   14001915f:	add    BYTE PTR [rcx+0x0],ah
   140019162:	jb     0x140019164
   140019164:	sub    eax,0x62006c00
   140019169:	add    BYTE PTR [rax],al
   14001916b:	add    BYTE PTR [rax],al
   14001916d:	add    BYTE PTR [rax],al
   14001916f:	add    BYTE PTR [rcx+0x0],ah
   140019172:	jb     0x140019174
   140019174:	sub    eax,0x79006c00
   140019179:	add    BYTE PTR [rax],al
   14001917b:	add    BYTE PTR [rax],al
   14001917d:	add    BYTE PTR [rax],al
   14001917f:	add    BYTE PTR [rcx+0x0],ah
   140019182:	jb     0x140019184
   140019184:	sub    eax,0x61006d00
   140019189:	add    BYTE PTR [rax],al
   14001918b:	add    BYTE PTR [rax],al
   14001918d:	add    BYTE PTR [rax],al
   14001918f:	add    BYTE PTR [rcx+0x0],ah
   140019192:	jb     0x140019194
   140019194:	sub    eax,0x6d006f00
   140019199:	add    BYTE PTR [rax],al
   14001919b:	add    BYTE PTR [rax],al
   14001919d:	add    BYTE PTR [rax],al
   14001919f:	add    BYTE PTR [rcx+0x0],ah
   1400191a2:	jb     0x1400191a4
   1400191a4:	sub    eax,0x61007100
   1400191a9:	add    BYTE PTR [rax],al
   1400191ab:	add    BYTE PTR [rax],al
   1400191ad:	add    BYTE PTR [rax],al
   1400191af:	add    BYTE PTR [rcx+0x0],ah
   1400191b2:	jb     0x1400191b4
   1400191b4:	sub    eax,0x61007300
   1400191b9:	add    BYTE PTR [rax],al
   1400191bb:	add    BYTE PTR [rax],al
   1400191bd:	add    BYTE PTR [rax],al
   1400191bf:	add    BYTE PTR [rcx+0x0],ah
   1400191c2:	jb     0x1400191c4
   1400191c4:	sub    eax,0x79007300
   1400191c9:	add    BYTE PTR [rax],al
   1400191cb:	add    BYTE PTR [rax],al
   1400191cd:	add    BYTE PTR [rax],al
   1400191cf:	add    BYTE PTR [rcx+0x0],ah
   1400191d2:	jb     0x1400191d4
   1400191d4:	sub    eax,0x6e007400
   1400191d9:	add    BYTE PTR [rax],al
   1400191db:	add    BYTE PTR [rax],al
   1400191dd:	add    BYTE PTR [rax],al
   1400191df:	add    BYTE PTR [rcx+0x0],ah
   1400191e2:	jb     0x1400191e4
   1400191e4:	sub    eax,0x65007900
   1400191e9:	add    BYTE PTR [rax],al
   1400191eb:	add    BYTE PTR [rax],al
   1400191ed:	add    BYTE PTR [rax],al
   1400191ef:	add    BYTE PTR [rcx+0x0],ah
   1400191f2:	jp     0x1400191f4
   1400191f4:	sub    eax,0x7a006100
   1400191f9:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b901f4ff
   1400191ff:	add    BYTE PTR [rdx+0x0],dh
   140019202:	ins    BYTE PTR es:[rdi],dx
   140019203:	add    BYTE PTR [rax],al
   140019205:	add    BYTE PTR [rax],al
   140019207:	add    BYTE PTR [rcx+0x0],ah
   14001920a:	jp     0x14001920c
   14001920c:	sub    eax,0x7a006100
   140019211:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a101fe17
   140019217:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14001921b:	add    BYTE PTR [rax],al
   14001921d:	add    BYTE PTR [rax],al
   14001921f:	add    BYTE PTR [rdx+0x0],ah
   140019222:	add    BYTE PTR gs:[rip+0x79006200],ch        # 0x1b901f429
   140019229:	add    BYTE PTR [rax],al
   14001922b:	add    BYTE PTR [rax],al
   14001922d:	add    BYTE PTR [rax],al
   14001922f:	add    BYTE PTR [rdx+0x0],ah
   140019232:	add    BYTE PTR [eip+0x67006200],ch        # 0x1a701f439
   140019239:	add    BYTE PTR [rax],al
   14001923b:	add    BYTE PTR [rax],al
   14001923d:	add    BYTE PTR [rax],al
   14001923f:	add    BYTE PTR [rdx+0x0],ah
   140019242:	outs   dx,BYTE PTR ds:[rsi]
   140019243:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae01fb49
   140019249:	add    BYTE PTR [rax],al
   14001924b:	add    BYTE PTR [rax],al
   14001924d:	add    BYTE PTR [rax],al
   14001924f:	add    BYTE PTR [rdx+0x0],ah
   140019252:	jae    0x140019254
   140019254:	sub    eax,0x61006200
   140019259:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a101fe5f
   14001925f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140019263:	add    BYTE PTR [rax],al
   140019265:	add    BYTE PTR [rax],al
   140019267:	add    BYTE PTR [rbx+0x0],ah
   14001926a:	(bad)  
   14001926b:	add    BYTE PTR [rip+0x73006500],ch        # 0x1b301f771
   140019271:	add    BYTE PTR [rax],al
   140019273:	add    BYTE PTR [rax],al
   140019275:	add    BYTE PTR [rax],al
   140019277:	add    BYTE PTR [rbx+0x0],ah
   14001927a:	jae    0x14001927c
   14001927c:	sub    eax,0x7a006300
   140019281:	add    BYTE PTR [rax],al
   140019283:	add    BYTE PTR [rax],al
   140019285:	add    BYTE PTR [rax],al
   140019287:	add    BYTE PTR [rbx+0x0],ah
   14001928a:	jns    0x14001928c
   14001928c:	sub    eax,0x62006700
   140019291:	add    BYTE PTR [rax],al
   140019293:	add    BYTE PTR [rax],al
   140019295:	add    BYTE PTR [rax],al
   140019297:	add    BYTE PTR [rax+rax*1+0x61],ah
   14001929b:	add    BYTE PTR [rip+0x6b006400],ch        # 0x1ab01f6a1
   1400192a1:	add    BYTE PTR [rax],al
   1400192a3:	add    BYTE PTR [rax],al
   1400192a5:	add    BYTE PTR [rax],al
   1400192a7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400192ab:	add    BYTE PTR [rip+0x74006100],ch        # 0x1b401f3b1
   1400192b1:	add    BYTE PTR [rax],al
   1400192b3:	add    BYTE PTR [rax],al
   1400192b5:	add    BYTE PTR [rax],al
   1400192b7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400192bb:	add    BYTE PTR [rip+0x68006300],ch        # 0x1a801f5c1
   1400192c1:	add    BYTE PTR [rax],al
   1400192c3:	add    BYTE PTR [rax],al
   1400192c5:	add    BYTE PTR [rax],al
   1400192c7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400192cb:	add    BYTE PTR [rip+0x65006400],ch        # 0x1a501f6d1
   1400192d1:	add    BYTE PTR [rax],al
   1400192d3:	add    BYTE PTR [rax],al
   1400192d5:	add    BYTE PTR [rax],al
   1400192d7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400192db:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a901fee1
   1400192e1:	add    BYTE PTR [rax],al
   1400192e3:	add    BYTE PTR [rax],al
   1400192e5:	add    BYTE PTR [rax],al
   1400192e7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400192eb:	add    BYTE PTR [rip+0x75006c00],ch        # 0x1b501fef1
   1400192f1:	add    BYTE PTR [rax],al
   1400192f3:	add    BYTE PTR [rax],al
   1400192f5:	add    BYTE PTR [rax],al
   1400192f7:	add    BYTE PTR [rax+rax*1+0x69],ah
   1400192fb:	add    BYTE PTR [rsi+0x0],dh
   1400192fe:	sub    eax,0x76006d00
   140019303:	add    BYTE PTR [rax],al
   140019305:	add    BYTE PTR [rax],al
   140019307:	add    BYTE PTR [rbp+0x0],ah
   14001930a:	ins    BYTE PTR es:[rdi],dx
   14001930b:	add    BYTE PTR [rip+0x72006700],ch        # 0x1b201fa11
   140019311:	add    BYTE PTR [rax],al
   140019313:	add    BYTE PTR [rax],al
   140019315:	add    BYTE PTR [rax],al
   140019317:	add    BYTE PTR [rbp+0x0],ah
   14001931a:	outs   dx,BYTE PTR ds:[rsi]
   14001931b:	add    BYTE PTR [rip+0x75006100],ch        # 0x1b501f421
   140019321:	add    BYTE PTR [rax],al
   140019323:	add    BYTE PTR [rax],al
   140019325:	add    BYTE PTR [rax],al
   140019327:	add    BYTE PTR [rbp+0x0],ah
   14001932a:	outs   dx,BYTE PTR ds:[rsi]
   14001932b:	add    BYTE PTR [rip+0x7a006200],ch        # 0x1ba01f531
   140019331:	add    BYTE PTR [rax],al
   140019333:	add    BYTE PTR [rax],al
   140019335:	add    BYTE PTR [rax],al
   140019337:	add    BYTE PTR [rbp+0x0],ah
   14001933a:	outs   dx,BYTE PTR ds:[rsi]
   14001933b:	add    BYTE PTR [rip+0x61006300],ch        # 0x1a101f641
   140019341:	add    BYTE PTR [rax],al
   140019343:	add    BYTE PTR [rax],al
   140019345:	add    BYTE PTR [rax],al
   140019347:	add    BYTE PTR [rbp+0x0],ah
   14001934a:	outs   dx,BYTE PTR ds:[rsi]
   14001934b:	add    BYTE PTR [rip+0x62006300],ch        # 0x1a201f651
   140019351:	add    BYTE PTR [rax],al
   140019353:	add    BYTE PTR [rax],al
   140019355:	add    BYTE PTR [rax],al
   140019357:	add    BYTE PTR [rbp+0x0],ah
   14001935a:	outs   dx,BYTE PTR ds:[rsi]
   14001935b:	add    BYTE PTR [rip+0x62006700],ch        # 0x1a201fa61
   140019361:	add    BYTE PTR [rax],al
   140019363:	add    BYTE PTR [rax],al
   140019365:	add    BYTE PTR [rax],al
   140019367:	add    BYTE PTR [rbp+0x0],ah
   14001936a:	outs   dx,BYTE PTR ds:[rsi]
   14001936b:	add    BYTE PTR [rip+0x65006900],ch        # 0x1a501fc71
   140019371:	add    BYTE PTR [rax],al
   140019373:	add    BYTE PTR [rax],al
   140019375:	add    BYTE PTR [rax],al
   140019377:	add    BYTE PTR [rbp+0x0],ah
   14001937a:	outs   dx,BYTE PTR ds:[rsi]
   14001937b:	add    BYTE PTR [rip+0x6d006a00],ch        # 0x1ad01fd81
   140019381:	add    BYTE PTR [rax],al
   140019383:	add    BYTE PTR [rax],al
   140019385:	add    BYTE PTR [rax],al
   140019387:	add    BYTE PTR [rbp+0x0],ah
   14001938a:	outs   dx,BYTE PTR ds:[rsi]
   14001938b:	add    BYTE PTR [rip+0x7a006e00],ch        # 0x1ba020191
   140019391:	add    BYTE PTR [rax],al
   140019393:	add    BYTE PTR [rax],al
   140019395:	add    BYTE PTR [rax],al
   140019397:	add    BYTE PTR [rbp+0x0],ah
   14001939a:	outs   dx,BYTE PTR ds:[rsi]
   14001939b:	add    BYTE PTR [rip+0x68007000],ch        # 0x1a80203a1
   1400193a1:	add    BYTE PTR [rax],al
   1400193a3:	add    BYTE PTR [rax],al
   1400193a5:	add    BYTE PTR [rax],al
   1400193a7:	add    BYTE PTR [rbp+0x0],ah
   1400193aa:	outs   dx,BYTE PTR ds:[rsi]
   1400193ab:	add    BYTE PTR [rip+0x74007400],ch        # 0x1b40207b1
   1400193b1:	add    BYTE PTR [rax],al
   1400193b3:	add    BYTE PTR [rax],al
   1400193b5:	add    BYTE PTR [rax],al
   1400193b7:	add    BYTE PTR [rbp+0x0],ah
   1400193ba:	outs   dx,BYTE PTR ds:[rsi]
   1400193bb:	add    BYTE PTR [rip+0x73007500],ch        # 0x1b30208c1
   1400193c1:	add    BYTE PTR [rax],al
   1400193c3:	add    BYTE PTR [rax],al
   1400193c5:	add    BYTE PTR [rax],al
   1400193c7:	add    BYTE PTR [rbp+0x0],ah
   1400193ca:	outs   dx,BYTE PTR ds:[rsi]
   1400193cb:	add    BYTE PTR [rip+0x61007a00],ch        # 0x1a1020dd1
   1400193d1:	add    BYTE PTR [rax],al
   1400193d3:	add    BYTE PTR [rax],al
   1400193d5:	add    BYTE PTR [rax],al
   1400193d7:	add    BYTE PTR [rbp+0x0],ah
   1400193da:	outs   dx,BYTE PTR ds:[rsi]
   1400193db:	add    BYTE PTR [rip+0x77007a00],ch        # 0x1b7020de1
   1400193e1:	add    BYTE PTR [rax],al
   1400193e3:	add    BYTE PTR [rax],al
   1400193e5:	add    BYTE PTR [rax],al
   1400193e7:	add    BYTE PTR [rbp+0x0],ah
   1400193ea:	jae    0x1400193ec
   1400193ec:	sub    eax,0x72006100
   1400193f1:	add    BYTE PTR [rax],al
   1400193f3:	add    BYTE PTR [rax],al
   1400193f5:	add    BYTE PTR [rax],al
   1400193f7:	add    BYTE PTR [rbp+0x0],ah
   1400193fa:	jae    0x1400193fc
   1400193fc:	sub    eax,0x6f006200
   140019401:	add    BYTE PTR [rax],al
   140019403:	add    BYTE PTR [rax],al
   140019405:	add    BYTE PTR [rax],al
   140019407:	add    BYTE PTR [rbp+0x0],ah
   14001940a:	jae    0x14001940c
   14001940c:	sub    eax,0x6c006300
   140019411:	add    BYTE PTR [rax],al
   140019413:	add    BYTE PTR [rax],al
   140019415:	add    BYTE PTR [rax],al
   140019417:	add    BYTE PTR [rbp+0x0],ah
   14001941a:	jae    0x14001941c
   14001941c:	sub    eax,0x6f006300
   140019421:	add    BYTE PTR [rax],al
   140019423:	add    BYTE PTR [rax],al
   140019425:	add    BYTE PTR [rax],al
   140019427:	add    BYTE PTR [rbp+0x0],ah
   14001942a:	jae    0x14001942c
   14001942c:	sub    eax,0x72006300
   140019431:	add    BYTE PTR [rax],al
   140019433:	add    BYTE PTR [rax],al
   140019435:	add    BYTE PTR [rax],al
   140019437:	add    BYTE PTR [rbp+0x0],ah
   14001943a:	jae    0x14001943c
   14001943c:	sub    eax,0x6f006400
   140019441:	add    BYTE PTR [rax],al
   140019443:	add    BYTE PTR [rax],al
   140019445:	add    BYTE PTR [rax],al
   140019447:	add    BYTE PTR [rbp+0x0],ah
   14001944a:	jae    0x14001944c
   14001944c:	sub    eax,0x63006500
   140019451:	add    BYTE PTR [rax],al
   140019453:	add    BYTE PTR [rax],al
   140019455:	add    BYTE PTR [rax],al
   140019457:	add    BYTE PTR [rbp+0x0],ah
   14001945a:	jae    0x14001945c
   14001945c:	sub    eax,0x73006500
   140019461:	add    BYTE PTR [rax],al
   140019463:	add    BYTE PTR [rax],al
   140019465:	add    BYTE PTR [rax],al
   140019467:	add    BYTE PTR [rbp+0x0],ah
   14001946a:	jae    0x14001946c
   14001946c:	sub    eax,0x74006700
   140019471:	add    BYTE PTR [rax],al
   140019473:	add    BYTE PTR [rax],al
   140019475:	add    BYTE PTR [rax],al
   140019477:	add    BYTE PTR [rbp+0x0],ah
   14001947a:	jae    0x14001947c
   14001947c:	sub    eax,0x6e006800
   140019481:	add    BYTE PTR [rax],al
   140019483:	add    BYTE PTR [rax],al
   140019485:	add    BYTE PTR [rax],al
   140019487:	add    BYTE PTR [rbp+0x0],ah
   14001948a:	jae    0x14001948c
   14001948c:	sub    eax,0x78006d00
   140019491:	add    BYTE PTR [rax],al
   140019493:	add    BYTE PTR [rax],al
   140019495:	add    BYTE PTR [rax],al
   140019497:	add    BYTE PTR [rbp+0x0],ah
   14001949a:	jae    0x14001949c
   14001949c:	sub    eax,0x69006e00
   1400194a1:	add    BYTE PTR [rax],al
   1400194a3:	add    BYTE PTR [rax],al
   1400194a5:	add    BYTE PTR [rax],al
   1400194a7:	add    BYTE PTR [rbp+0x0],ah
   1400194aa:	jae    0x1400194ac
   1400194ac:	sub    eax,0x61007000
   1400194b1:	add    BYTE PTR [rax],al
   1400194b3:	add    BYTE PTR [rax],al
   1400194b5:	add    BYTE PTR [rax],al
   1400194b7:	add    BYTE PTR [rbp+0x0],ah
   1400194ba:	jae    0x1400194bc
   1400194bc:	sub    eax,0x65007000
   1400194c1:	add    BYTE PTR [rax],al
   1400194c3:	add    BYTE PTR [rax],al
   1400194c5:	add    BYTE PTR [rax],al
   1400194c7:	add    BYTE PTR [rbp+0x0],ah
   1400194ca:	jae    0x1400194cc
   1400194cc:	sub    eax,0x72007000
   1400194d1:	add    BYTE PTR [rax],al
   1400194d3:	add    BYTE PTR [rax],al
   1400194d5:	add    BYTE PTR [rax],al
   1400194d7:	add    BYTE PTR [rbp+0x0],ah
   1400194da:	jae    0x1400194dc
   1400194dc:	sub    eax,0x79007000
   1400194e1:	add    BYTE PTR [rax],al
   1400194e3:	add    BYTE PTR [rax],al
   1400194e5:	add    BYTE PTR [rax],al
   1400194e7:	add    BYTE PTR [rbp+0x0],ah
   1400194ea:	jae    0x1400194ec
   1400194ec:	sub    eax,0x76007300
   1400194f1:	add    BYTE PTR [rax],al
   1400194f3:	add    BYTE PTR [rax],al
   1400194f5:	add    BYTE PTR [rax],al
   1400194f7:	add    BYTE PTR [rbp+0x0],ah
   1400194fa:	jae    0x1400194fc
   1400194fc:	sub    eax,0x79007500
   140019501:	add    BYTE PTR [rax],al
   140019503:	add    BYTE PTR [rax],al
   140019505:	add    BYTE PTR [rax],al
   140019507:	add    BYTE PTR [rbp+0x0],ah
   14001950a:	jae    0x14001950c
   14001950c:	sub    eax,0x65007600
   140019511:	add    BYTE PTR [rax],al
   140019513:	add    BYTE PTR [rax],al
   140019515:	add    BYTE PTR [rax],al
   140019517:	add    BYTE PTR [rbp+0x0],ah
   14001951a:	je     0x14001951c
   14001951c:	sub    eax,0x65006500
   140019521:	add    BYTE PTR [rax],al
   140019523:	add    BYTE PTR [rax],al
   140019525:	add    BYTE PTR [rax],al
   140019527:	add    BYTE PTR [rbp+0x0],ah
   14001952a:	jne    0x14001952c
   14001952c:	sub    eax,0x73006500
   140019531:	add    BYTE PTR [rax],al
   140019533:	add    BYTE PTR [rax],al
   140019535:	add    BYTE PTR [rax],al
   140019537:	add    BYTE PTR [rsi+0x0],ah
   14001953a:	(bad)  
   14001953b:	add    BYTE PTR [rip+0x72006900],ch        # 0x1b201fe41
   140019541:	add    BYTE PTR [rax],al
   140019543:	add    BYTE PTR [rax],al
   140019545:	add    BYTE PTR [rax],al
   140019547:	add    BYTE PTR [rsi+0x0],ah
   14001954a:	imul   eax,DWORD PTR [rax],0x66002d
   140019550:	imul   eax,DWORD PTR [rax],0x0
   140019556:	add    BYTE PTR [rax],al
   140019558:	data16 add BYTE PTR [rdi+0x0],ch
   14001955c:	sub    eax,0x6f006600
   140019561:	add    BYTE PTR [rax],al
   140019563:	add    BYTE PTR [rax],al
   140019565:	add    BYTE PTR [rax],al
   140019567:	add    BYTE PTR [rsi+0x0],ah
   14001956a:	jb     0x14001956c
   14001956c:	sub    eax,0x65006200
   140019571:	add    BYTE PTR [rax],al
   140019573:	add    BYTE PTR [rax],al
   140019575:	add    BYTE PTR [rax],al
   140019577:	add    BYTE PTR [rsi+0x0],ah
   14001957a:	jb     0x14001957c
   14001957c:	sub    eax,0x61006300
   140019581:	add    BYTE PTR [rax],al
   140019583:	add    BYTE PTR [rax],al
   140019585:	add    BYTE PTR [rax],al
   140019587:	add    BYTE PTR [rsi+0x0],ah
   14001958a:	jb     0x14001958c
   14001958c:	sub    eax,0x68006300
   140019591:	add    BYTE PTR [rax],al
   140019593:	add    BYTE PTR [rax],al
   140019595:	add    BYTE PTR [rax],al
   140019597:	add    BYTE PTR [rsi+0x0],ah
   14001959a:	jb     0x14001959c
   14001959c:	sub    eax,0x72006600
   1400195a1:	add    BYTE PTR [rax],al
   1400195a3:	add    BYTE PTR [rax],al
   1400195a5:	add    BYTE PTR [rax],al
   1400195a7:	add    BYTE PTR [rsi+0x0],ah
   1400195aa:	jb     0x1400195ac
   1400195ac:	sub    eax,0x75006c00
   1400195b1:	add    BYTE PTR [rax],al
   1400195b3:	add    BYTE PTR [rax],al
   1400195b5:	add    BYTE PTR [rax],al
   1400195b7:	add    BYTE PTR [rsi+0x0],ah
   1400195ba:	jb     0x1400195bc
   1400195bc:	sub    eax,0x63006d00
   1400195c1:	add    BYTE PTR [rax],al
   1400195c3:	add    BYTE PTR [rax],al
   1400195c5:	add    BYTE PTR [rax],al
   1400195c7:	add    BYTE PTR [rdi+0x0],ah
   1400195ca:	ins    BYTE PTR es:[rdi],dx
   1400195cb:	add    BYTE PTR [rip+0x73006500],ch        # 0x1b301fad1
   1400195d1:	add    BYTE PTR [rax],al
   1400195d3:	add    BYTE PTR [rax],al
   1400195d5:	add    BYTE PTR [rax],al
   1400195d7:	add    BYTE PTR [rdi+0x0],ah
   1400195da:	jne    0x1400195dc
   1400195dc:	sub    eax,0x6e006900
   1400195e1:	add    BYTE PTR [rax],al
   1400195e3:	add    BYTE PTR [rax],al
   1400195e5:	add    BYTE PTR [rax],al
   1400195e7:	add    BYTE PTR [rax+0x0],ch
   1400195ea:	add    BYTE PTR gs:[rip+0x6c006900],ch        # 0x1ac01fef1
   1400195f1:	add    BYTE PTR [rax],al
   1400195f3:	add    BYTE PTR [rax],al
   1400195f5:	add    BYTE PTR [rax],al
   1400195f7:	add    BYTE PTR [rax+0x0],ch
   1400195fa:	imul   eax,DWORD PTR [rax],0x69002d
   140019600:	outs   dx,BYTE PTR ds:[rsi]
   140019601:	add    BYTE PTR [rax],al
   140019603:	add    BYTE PTR [rax],al
   140019605:	add    BYTE PTR [rax],al
   140019607:	add    BYTE PTR [rax+0x0],ch
   14001960a:	jb     0x14001960c
   14001960c:	sub    eax,0x61006200
   140019611:	add    BYTE PTR [rax],al
   140019613:	add    BYTE PTR [rax],al
   140019615:	add    BYTE PTR [rax],al
   140019617:	add    BYTE PTR [rax+0x0],ch
   14001961a:	jb     0x14001961c
   14001961c:	sub    eax,0x72006800
   140019621:	add    BYTE PTR [rax],al
   140019623:	add    BYTE PTR [rax],al
   140019625:	add    BYTE PTR [rax],al
   140019627:	add    BYTE PTR [rax+0x0],ch
   14001962a:	jne    0x14001962c
   14001962c:	sub    eax,0x75006800
   140019631:	add    BYTE PTR [rax],al
   140019633:	add    BYTE PTR [rax],al
   140019635:	add    BYTE PTR [rax],al
   140019637:	add    BYTE PTR [rax+0x0],ch
   14001963a:	jns    0x14001963c
   14001963c:	sub    eax,0x6d006100
   140019641:	add    BYTE PTR [rax],al
   140019643:	add    BYTE PTR [rax],al
   140019645:	add    BYTE PTR [rax],al
   140019647:	add    BYTE PTR [rcx+0x0],ch
   14001964a:	add    BYTE PTR fs:[rip+0x64006900],ch        # 0x1a401ff51
   140019651:	add    BYTE PTR [rax],al
   140019653:	add    BYTE PTR [rax],al
   140019655:	add    BYTE PTR [rax],al
   140019657:	add    BYTE PTR [rcx+0x0],ch
   14001965a:	jae    0x14001965c
   14001965c:	sub    eax,0x73006900
   140019661:	add    BYTE PTR [rax],al
   140019663:	add    BYTE PTR [rax],al
   140019665:	add    BYTE PTR [rax],al
   140019667:	add    BYTE PTR [rcx+0x0],ch
   14001966a:	je     0x14001966c
   14001966c:	sub    eax,0x68006300
   140019671:	add    BYTE PTR [rax],al
   140019673:	add    BYTE PTR [rax],al
   140019675:	add    BYTE PTR [rax],al
   140019677:	add    BYTE PTR [rcx+0x0],ch
   14001967a:	je     0x14001967c
   14001967c:	sub    eax,0x74006900
   140019681:	add    BYTE PTR [rax],al
   140019683:	add    BYTE PTR [rax],al
   140019685:	add    BYTE PTR [rax],al
   140019687:	add    BYTE PTR [rdx+0x0],ch
   14001968a:	(bad)  
   14001968b:	add    BYTE PTR [rip+0x70006a00],ch        # 0x1b0020091
   140019691:	add    BYTE PTR [rax],al
   140019693:	add    BYTE PTR [rax],al
   140019695:	add    BYTE PTR [rax],al
   140019697:	add    BYTE PTR [rbx+0x0],ch
   14001969a:	(bad)  
   14001969b:	add    BYTE PTR [rip+0x65006700],ch        # 0x1a501fda1
   1400196a1:	add    BYTE PTR [rax],al
   1400196a3:	add    BYTE PTR [rax],al
   1400196a5:	add    BYTE PTR [rax],al
   1400196a7:	add    BYTE PTR [rbx+0x0],ch
   1400196aa:	imul   eax,DWORD PTR [rax],0x2d
   1400196ad:	add    BYTE PTR [rbx+0x0],ch
   1400196b0:	jp     0x1400196b2
   1400196b2:	add    BYTE PTR [rax],al
   1400196b4:	add    BYTE PTR [rax],al
   1400196b6:	add    BYTE PTR [rax],al
   1400196b8:	imul   eax,DWORD PTR [rax],0x6e
   1400196bb:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae01ffc1
   1400196c1:	add    BYTE PTR [rax],al
   1400196c3:	add    BYTE PTR [rax],al
   1400196c5:	add    BYTE PTR [rax],al
   1400196c7:	add    BYTE PTR [rbx+0x0],ch
   1400196ca:	outs   dx,DWORD PTR ds:[rsi]
   1400196cb:	add    BYTE PTR [rbx+0x0],ch
   1400196ce:	sub    eax,0x6e006900
   1400196d3:	add    BYTE PTR [rax],al
   1400196d5:	add    BYTE PTR [rax],al
   1400196d7:	add    BYTE PTR [rbx+0x0],ch
   1400196da:	outs   dx,DWORD PTR ds:[rsi]
   1400196db:	add    BYTE PTR [rip+0x72006b00],ch        # 0x1b20201e1
   1400196e1:	add    BYTE PTR [rax],al
   1400196e3:	add    BYTE PTR [rax],al
   1400196e5:	add    BYTE PTR [rax],al
   1400196e7:	add    BYTE PTR [rbx+0x0],ch
   1400196ea:	jns    0x1400196ec
   1400196ec:	sub    eax,0x67006b00
   1400196f1:	add    BYTE PTR [rax],al
   1400196f3:	add    BYTE PTR [rax],al
   1400196f5:	add    BYTE PTR [rax],al
   1400196f7:	add    BYTE PTR [rax+rax*1+0x74],ch
   1400196fb:	add    BYTE PTR [rip+0x74006c00],ch        # 0x1b4020301
   140019701:	add    BYTE PTR [rax],al
   140019703:	add    BYTE PTR [rax],al
   140019705:	add    BYTE PTR [rax],al
   140019707:	add    BYTE PTR [rax+rax*1+0x76],ch
   14001970b:	add    BYTE PTR [rip+0x76006c00],ch        # 0x1b6020311
   140019711:	add    BYTE PTR [rax],al
   140019713:	add    BYTE PTR [rax],al
   140019715:	add    BYTE PTR [rax],al
   140019717:	add    BYTE PTR [rbp+0x0],ch
   14001971a:	imul   eax,DWORD PTR [rax],0x6e002d
   140019720:	jp     0x140019722
   140019722:	add    BYTE PTR [rax],al
   140019724:	add    BYTE PTR [rax],al
   140019726:	add    BYTE PTR [rax],al
   140019728:	ins    DWORD PTR es:[rdi],dx
   140019729:	add    BYTE PTR [rbx+0x0],ch
   14001972c:	sub    eax,0x6b006d00
   140019731:	add    BYTE PTR [rax],al
   140019733:	add    BYTE PTR [rax],al
   140019735:	add    BYTE PTR [rax],al
   140019737:	add    BYTE PTR [rbp+0x0],ch
   14001973a:	ins    BYTE PTR es:[rdi],dx
   14001973b:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae020041
   140019741:	add    BYTE PTR [rax],al
   140019743:	add    BYTE PTR [rax],al
   140019745:	add    BYTE PTR [rax],al
   140019747:	add    BYTE PTR [rbp+0x0],ch
   14001974a:	outs   dx,BYTE PTR ds:[rsi]
   14001974b:	add    BYTE PTR [rip+0x6e006d00],ch        # 0x1ae020451
   140019751:	add    BYTE PTR [rax],al
   140019753:	add    BYTE PTR [rax],al
   140019755:	add    BYTE PTR [rax],al
   140019757:	add    BYTE PTR [rbp+0x0],ch
   14001975a:	jb     0x14001975c
   14001975c:	sub    eax,0x6e006900
   140019761:	add    BYTE PTR [rax],al
   140019763:	add    BYTE PTR [rax],al
   140019765:	add    BYTE PTR [rax],al
   140019767:	add    BYTE PTR [rbp+0x0],ch
   14001976a:	jae    0x14001976c
   14001976c:	sub    eax,0x6e006200
   140019771:	add    BYTE PTR [rax],al
   140019773:	add    BYTE PTR [rax],al
   140019775:	add    BYTE PTR [rax],al
   140019777:	add    BYTE PTR [rbp+0x0],ch
   14001977a:	jae    0x14001977c
   14001977c:	sub    eax,0x79006d00
   140019781:	add    BYTE PTR [rax],al
   140019783:	add    BYTE PTR [rax],al
   140019785:	add    BYTE PTR [rax],al
   140019787:	add    BYTE PTR [rbp+0x0],ch
   14001978a:	je     0x14001978c
   14001978c:	sub    eax,0x74006d00
   140019791:	add    BYTE PTR [rax],al
   140019793:	add    BYTE PTR [rax],al
   140019795:	add    BYTE PTR [rax],al
   140019797:	add    BYTE PTR [rsi+0x0],ch
   14001979a:	(bad)  
   14001979b:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af0205a1
   1400197a1:	add    BYTE PTR [rax],al
   1400197a3:	add    BYTE PTR [rax],al
   1400197a5:	add    BYTE PTR [rax],al
   1400197a7:	add    BYTE PTR [rsi+0x0],ch
   1400197aa:	ins    BYTE PTR es:[rdi],dx
   1400197ab:	add    BYTE PTR [rip+0x65006200],ch        # 0x1a501f9b1
   1400197b1:	add    BYTE PTR [rax],al
   1400197b3:	add    BYTE PTR [rax],al
   1400197b5:	add    BYTE PTR [rax],al
   1400197b7:	add    BYTE PTR [rsi+0x0],ch
   1400197ba:	ins    BYTE PTR es:[rdi],dx
   1400197bb:	add    BYTE PTR [rip+0x6c006e00],ch        # 0x1ac0205c1
   1400197c1:	add    BYTE PTR [rax],al
   1400197c3:	add    BYTE PTR [rax],al
   1400197c5:	add    BYTE PTR [rax],al
   1400197c7:	add    BYTE PTR [rsi+0x0],ch
   1400197ca:	outs   dx,BYTE PTR ds:[rsi]
   1400197cb:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af0205d1
   1400197d1:	add    BYTE PTR [rax],al
   1400197d3:	add    BYTE PTR [rax],al
   1400197d5:	add    BYTE PTR [rax],al
   1400197d7:	add    BYTE PTR [rsi+0x0],ch
   1400197da:	jae    0x1400197dc
   1400197dc:	sub    eax,0x61007a00
   1400197e1:	add    BYTE PTR [rax],al
   1400197e3:	add    BYTE PTR [rax],al
   1400197e5:	add    BYTE PTR [rax],al
   1400197e7:	add    BYTE PTR [rax+0x0],dh
   1400197ea:	(bad)  
   1400197eb:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae0200f1
   1400197f1:	add    BYTE PTR [rax],al
   1400197f3:	add    BYTE PTR [rax],al
   1400197f5:	add    BYTE PTR [rax],al
   1400197f7:	add    BYTE PTR [rax+0x0],dh
   1400197fa:	ins    BYTE PTR es:[rdi],dx
   1400197fb:	add    BYTE PTR [rip+0x6c007000],ch        # 0x1ac020801
   140019801:	add    BYTE PTR [rax],al
   140019803:	add    BYTE PTR [rax],al
   140019805:	add    BYTE PTR [rax],al
   140019807:	add    BYTE PTR [rax+0x0],dh
   14001980a:	je     0x14001980c
   14001980c:	sub    eax,0x72006200
   140019811:	add    BYTE PTR [rax],al
   140019813:	add    BYTE PTR [rax],al
   140019815:	add    BYTE PTR [rax],al
   140019817:	add    BYTE PTR [rax+0x0],dh
   14001981a:	je     0x14001981c
   14001981c:	sub    eax,0x74007000
   140019821:	add    BYTE PTR [rax],al
   140019823:	add    BYTE PTR [rax],al
   140019825:	add    BYTE PTR [rax],al
   140019827:	add    BYTE PTR [rcx+0x0],dh
   14001982a:	jne    0x14001982c
   14001982c:	jp     0x14001982e
   14001982e:	sub    eax,0x6f006200
   140019833:	add    BYTE PTR [rax],al
   140019835:	add    BYTE PTR [rax],al
   140019837:	add    BYTE PTR [rcx+0x0],dh
   14001983a:	jne    0x14001983c
   14001983c:	jp     0x14001983e
   14001983e:	sub    eax,0x63006500
   140019843:	add    BYTE PTR [rax],al
   140019845:	add    BYTE PTR [rax],al
   140019847:	add    BYTE PTR [rcx+0x0],dh
   14001984a:	jne    0x14001984c
   14001984c:	jp     0x14001984e
   14001984e:	sub    eax,0x65007000
   140019853:	add    BYTE PTR [rax],al
   140019855:	add    BYTE PTR [rax],al
   140019857:	add    BYTE PTR [rdx+0x0],dh
   14001985a:	outs   dx,DWORD PTR ds:[rsi]
   14001985b:	add    BYTE PTR [rip+0x6f007200],ch        # 0x1af020a61
   140019861:	add    BYTE PTR [rax],al
   140019863:	add    BYTE PTR [rax],al
   140019865:	add    BYTE PTR [rax],al
   140019867:	add    BYTE PTR [rdx+0x0],dh
   14001986a:	jne    0x14001986c
   14001986c:	sub    eax,0x75007200
   140019871:	add    BYTE PTR [rax],al
   140019873:	add    BYTE PTR [rax],al
   140019875:	add    BYTE PTR [rax],al
   140019877:	add    BYTE PTR [rbx+0x0],dh
   14001987a:	(bad)  
   14001987b:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae020181
   140019881:	add    BYTE PTR [rax],al
   140019883:	add    BYTE PTR [rax],al
   140019885:	add    BYTE PTR [rax],al
   140019887:	add    BYTE PTR [rbx+0x0],dh
   14001988a:	add    BYTE PTR gs:[rip+0x69006600],ch        # 0x1a901fe91
   140019891:	add    BYTE PTR [rax],al
   140019893:	add    BYTE PTR [rax],al
   140019895:	add    BYTE PTR [rax],al
   140019897:	add    BYTE PTR [rbx+0x0],dh
   14001989a:	add    BYTE PTR gs:[rip+0x6f006e00],ch        # 0x1af0206a1
   1400198a1:	add    BYTE PTR [rax],al
   1400198a3:	add    BYTE PTR [rax],al
   1400198a5:	add    BYTE PTR [rax],al
   1400198a7:	add    BYTE PTR [rbx+0x0],dh
   1400198aa:	add    BYTE PTR gs:[rip+0x65007300],ch        # 0x1a5020bb1
   1400198b1:	add    BYTE PTR [rax],al
   1400198b3:	add    BYTE PTR [rax],al
   1400198b5:	add    BYTE PTR [rax],al
   1400198b7:	add    BYTE PTR [rbx+0x0],dh
   1400198ba:	imul   eax,DWORD PTR [rax],0x2d
   1400198bd:	add    BYTE PTR [rbx+0x0],dh
   1400198c0:	imul   eax,DWORD PTR [rax],0x0
   1400198c3:	add    BYTE PTR [rax],al
   1400198c5:	add    BYTE PTR [rax],al
   1400198c7:	add    BYTE PTR [rbx+0x0],dh
   1400198ca:	ins    BYTE PTR es:[rdi],dx
   1400198cb:	add    BYTE PTR [rip+0x69007300],ch        # 0x1a9020bd1
   1400198d1:	add    BYTE PTR [rax],al
   1400198d3:	add    BYTE PTR [rax],al
   1400198d5:	add    BYTE PTR [rax],al
   1400198d7:	add    BYTE PTR [rbx+0x0],dh
   1400198da:	ins    DWORD PTR es:[rdi],dx
   1400198db:	add    BYTE PTR [rcx+0x0],ah
   1400198de:	sub    eax,0x6f006e00
   1400198e3:	add    BYTE PTR [rax],al
   1400198e5:	add    BYTE PTR [rax],al
   1400198e7:	add    BYTE PTR [rbx+0x0],dh
   1400198ea:	ins    DWORD PTR es:[rdi],dx
   1400198eb:	add    BYTE PTR [rcx+0x0],ah
   1400198ee:	sub    eax,0x65007300
   1400198f3:	add    BYTE PTR [rax],al
   1400198f5:	add    BYTE PTR [rax],al
   1400198f7:	add    BYTE PTR [rbx+0x0],dh
   1400198fa:	ins    DWORD PTR es:[rdi],dx
   1400198fb:	add    BYTE PTR [rdx+0x0],ch
   1400198fe:	sub    eax,0x6f006e00
   140019903:	add    BYTE PTR [rax],al
   140019905:	add    BYTE PTR [rax],al
   140019907:	add    BYTE PTR [rbx+0x0],dh
   14001990a:	ins    DWORD PTR es:[rdi],dx
   14001990b:	add    BYTE PTR [rdx+0x0],ch
   14001990e:	sub    eax,0x65007300
   140019913:	add    BYTE PTR [rax],al
   140019915:	add    BYTE PTR [rax],al
   140019917:	add    BYTE PTR [rbx+0x0],dh
   14001991a:	ins    DWORD PTR es:[rdi],dx
   14001991b:	add    BYTE PTR [rsi+0x0],ch
   14001991e:	sub    eax,0x69006600
   140019923:	add    BYTE PTR [rax],al
   140019925:	add    BYTE PTR [rax],al
   140019927:	add    BYTE PTR [rbx+0x0],dh
   14001992a:	ins    DWORD PTR es:[rdi],dx
   14001992b:	add    BYTE PTR [rbx+0x0],dh
   14001992e:	sub    eax,0x69006600
   140019933:	add    BYTE PTR [rax],al
   140019935:	add    BYTE PTR [rax],al
   140019937:	add    BYTE PTR [rbx+0x0],dh
   14001993a:	jno    0x14001993c
   14001993c:	sub    eax,0x6c006100
   140019941:	add    BYTE PTR [rax],al
   140019943:	add    BYTE PTR [rax],al
   140019945:	add    BYTE PTR [rax],al
   140019947:	add    BYTE PTR [rbx+0x0],dh
   14001994a:	jb     0x14001994c
   14001994c:	sub    eax,0x61006200
   140019951:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b901fc57
   140019957:	add    BYTE PTR [rdx+0x0],dh
   14001995a:	ins    BYTE PTR es:[rdi],dx
   14001995b:	add    BYTE PTR [rax],al
   14001995d:	add    BYTE PTR [rax],al
   14001995f:	add    BYTE PTR [rbx+0x0],dh
   140019962:	jb     0x140019964
   140019964:	sub    eax,0x61006200
   140019969:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a102056f
   14001996f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140019973:	add    BYTE PTR [rax],al
   140019975:	add    BYTE PTR [rax],al
   140019977:	add    BYTE PTR [rbx+0x0],dh
   14001997a:	jb     0x14001997c
   14001997c:	sub    eax,0x70007300
   140019981:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b901fc87
   140019987:	add    BYTE PTR [rdx+0x0],dh
   14001998a:	ins    BYTE PTR es:[rdi],dx
   14001998b:	add    BYTE PTR [rax],al
   14001998d:	add    BYTE PTR [rax],al
   14001998f:	add    BYTE PTR [rbx+0x0],dh
   140019992:	jb     0x140019994
   140019994:	sub    eax,0x70007300
   140019999:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a102059f
   14001999f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400199a3:	add    BYTE PTR [rax],al
   1400199a5:	add    BYTE PTR [rax],al
   1400199a7:	add    BYTE PTR [rbx+0x0],dh
   1400199aa:	jbe    0x1400199ac
   1400199ac:	sub    eax,0x69006600
   1400199b1:	add    BYTE PTR [rax],al
   1400199b3:	add    BYTE PTR [rax],al
   1400199b5:	add    BYTE PTR [rax],al
   1400199b7:	add    BYTE PTR [rbx+0x0],dh
   1400199ba:	jbe    0x1400199bc
   1400199bc:	sub    eax,0x65007300
   1400199c1:	add    BYTE PTR [rax],al
   1400199c3:	add    BYTE PTR [rax],al
   1400199c5:	add    BYTE PTR [rax],al
   1400199c7:	add    BYTE PTR [rbx+0x0],dh
   1400199ca:	ja     0x1400199cc
   1400199cc:	sub    eax,0x65006b00
   1400199d1:	add    BYTE PTR [rax],al
   1400199d3:	add    BYTE PTR [rax],al
   1400199d5:	add    BYTE PTR [rax],al
   1400199d7:	add    BYTE PTR [rbx+0x0],dh
   1400199da:	jns    0x1400199dc
   1400199dc:	jb     0x1400199de
   1400199de:	sub    eax,0x79007300
   1400199e3:	add    BYTE PTR [rax],al
   1400199e5:	add    BYTE PTR [rax],al
   1400199e7:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400199eb:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae0202f1
   1400199f1:	add    BYTE PTR [rax],al
   1400199f3:	add    BYTE PTR [rax],al
   1400199f5:	add    BYTE PTR [rax],al
   1400199f7:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400199fb:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae020301
   140019a01:	add    BYTE PTR [rax],al
   140019a03:	add    BYTE PTR [rax],al
   140019a05:	add    BYTE PTR [rax],al
   140019a07:	add    BYTE PTR [rax+rax*1+0x68],dh
   140019a0b:	add    BYTE PTR [rip+0x68007400],ch        # 0x1a8020e11
   140019a11:	add    BYTE PTR [rax],al
   140019a13:	add    BYTE PTR [rax],al
   140019a15:	add    BYTE PTR [rax],al
   140019a17:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140019a1b:	add    BYTE PTR [rip+0x61007a00],ch        # 0x1a1021421
   140019a21:	add    BYTE PTR [rax],al
   140019a23:	add    BYTE PTR [rax],al
   140019a25:	add    BYTE PTR [rax],al
   140019a27:	add    BYTE PTR [rax+rax*1+0x72],dh
   140019a2b:	add    BYTE PTR [rip+0x72007400],ch        # 0x1b2020e31
   140019a31:	add    BYTE PTR [rax],al
   140019a33:	add    BYTE PTR [rax],al
   140019a35:	add    BYTE PTR [rax],al
   140019a37:	add    BYTE PTR [rax+rax*1+0x74],dh
   140019a3b:	add    BYTE PTR [rip+0x75007200],ch        # 0x1b5020c41
   140019a41:	add    BYTE PTR [rax],al
   140019a43:	add    BYTE PTR [rax],al
   140019a45:	add    BYTE PTR [rax],al
   140019a47:	add    BYTE PTR [rbp+0x0],dh
   140019a4a:	imul   eax,DWORD PTR [rax],0x2d
   140019a4d:	add    BYTE PTR [rbp+0x0],dh
   140019a50:	(bad)  
   140019a51:	add    BYTE PTR [rax],al
   140019a53:	add    BYTE PTR [rax],al
   140019a55:	add    BYTE PTR [rax],al
   140019a57:	add    BYTE PTR [rbp+0x0],dh
   140019a5a:	jb     0x140019a5c
   140019a5c:	sub    eax,0x6b007000
   140019a61:	add    BYTE PTR [rax],al
   140019a63:	add    BYTE PTR [rax],al
   140019a65:	add    BYTE PTR [rax],al
   140019a67:	add    BYTE PTR [rbp+0x0],dh
   140019a6a:	jp     0x140019a6c
   140019a6c:	sub    eax,0x7a007500
   140019a71:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b901fd77
   140019a77:	add    BYTE PTR [rdx+0x0],dh
   140019a7a:	ins    BYTE PTR es:[rdi],dx
   140019a7b:	add    BYTE PTR [rax],al
   140019a7d:	add    BYTE PTR [rax],al
   140019a7f:	add    BYTE PTR [rbp+0x0],dh
   140019a82:	jp     0x140019a84
   140019a84:	sub    eax,0x7a007500
   140019a89:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a102068f
   140019a8f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140019a93:	add    BYTE PTR [rax],al
   140019a95:	add    BYTE PTR [rax],al
   140019a97:	add    BYTE PTR [rsi+0x0],dh
   140019a9a:	imul   eax,DWORD PTR [rax],0x76002d
   140019aa0:	outs   dx,BYTE PTR ds:[rsi]
   140019aa1:	add    BYTE PTR [rax],al
   140019aa3:	add    BYTE PTR [rax],al
   140019aa5:	add    BYTE PTR [rax],al
   140019aa7:	add    BYTE PTR [rax+0x0],bh
   140019aaa:	push   0x7a002d00
   140019aaf:	add    BYTE PTR [rcx+0x0],ah
   140019ab2:	add    BYTE PTR [rax],al
   140019ab4:	add    BYTE PTR [rax],al
   140019ab6:	add    BYTE PTR [rax],al
   140019ab8:	jp     0x140019aba
   140019aba:	push   0x63002d00
   140019abf:	add    BYTE PTR [rax+0x0],ch
   140019ac2:	jae    0x140019ac4
   140019ac4:	add    BYTE PTR [rax],al
   140019ac6:	add    BYTE PTR [rax],al
   140019ac8:	jp     0x140019aca
   140019aca:	push   0x63002d00
   140019acf:	add    BYTE PTR [rax+0x0],ch
   140019ad2:	je     0x140019ad4
   140019ad4:	add    BYTE PTR [rax],al
   140019ad6:	add    BYTE PTR [rax],al
   140019ad8:	jp     0x140019ada
   140019ada:	push   0x63002d00
   140019adf:	add    BYTE PTR [rsi+0x0],ch
   140019ae2:	add    BYTE PTR [rax],al
   140019ae4:	add    BYTE PTR [rax],al
   140019ae6:	add    BYTE PTR [rax],al
   140019ae8:	jp     0x140019aea
   140019aea:	push   0x68002d00
   140019aef:	add    BYTE PTR [rbx+0x0],ch
   140019af2:	add    BYTE PTR [rax],al
   140019af4:	add    BYTE PTR [rax],al
   140019af6:	add    BYTE PTR [rax],al
   140019af8:	jp     0x140019afa
   140019afa:	push   0x6d002d00
   140019aff:	add    BYTE PTR [rdi+0x0],ch
   140019b02:	add    BYTE PTR [rax],al
   140019b04:	add    BYTE PTR [rax],al
   140019b06:	add    BYTE PTR [rax],al
   140019b08:	jp     0x140019b0a
   140019b0a:	push   0x73002d00
   140019b0f:	add    BYTE PTR [rdi+0x0],ah
   140019b12:	add    BYTE PTR [rax],al
   140019b14:	add    BYTE PTR [rax],al
   140019b16:	add    BYTE PTR [rax],al
   140019b18:	jp     0x140019b1a
   140019b1a:	push   0x74002d00
   140019b1f:	add    BYTE PTR [rdi+0x0],dh
   140019b22:	add    BYTE PTR [rax],al
   140019b24:	add    BYTE PTR [rax],al
   140019b26:	add    BYTE PTR [rax],al
   140019b28:	jp     0x140019b2a
   140019b2a:	jne    0x140019b2c
   140019b2c:	sub    eax,0x61007a00
	...
   140019b41:	in     al,0xb
   140019b43:	push   rsp
   140019b44:	add    al,BYTE PTR [rax]
   140019b46:	add    BYTE PTR [rax],al
   140019b48:	add    BYTE PTR [rax],al
   140019b4a:	adc    BYTE PTR [rbx+0x2d],ah
   140019b4d:	pop    rsi
   140019b4e:	(bad)  
   140019b4f:	imul   eax,DWORD PTR [rip+0x0],0x0        # 0x140019b56
   140019b56:	add    BYTE PTR [rax-0x16],al
   140019b59:	in     eax,dx
   140019b5a:	je     0x140019ba2
   140019b5c:	rcr    BYTE PTR [rsp+rbp*1+0xc9f],1
   140019b63:	add    BYTE PTR [rax],al
   140019b65:	(bad)  
   140019b66:	cmc    
   140019b67:	mov    ecx,0x5ca4bfab
   140019b6c:	ret    
   140019b6d:	icebp  
   140019b6e:	sub    DWORD PTR [rbx+0x1d],esp
   140019b71:	add    BYTE PTR [rax],al
   140019b73:	add    BYTE PTR [rax],al
   140019b75:	add    BYTE PTR [rbp+rsi*4-0x3],ah
   140019b79:	xor    al,0x5
   140019b7b:	(bad)  
   140019b7c:	rol    BYTE PTR [rdi+0x15f99266],cl
   140019b82:	cmp    ebp,DWORD PTR [rsp+rax*2+0x0]
   140019b86:	add    BYTE PTR [rax],al
   140019b88:	add    BYTE PTR [rax],al
   140019b8a:	add    BYTE PTR [rax],dl
   140019b8c:	fst    DWORD PTR [rax+0x422c9465]
   140019b92:	(bad)  
   140019b93:	xlat   BYTE PTR ds:[rbx]
   140019b94:	add    DWORD PTR [rbp+0x22],eax
   140019b97:	(bad)  
   140019b98:	(bad)  
   140019b99:	es (bad) 
   140019b9b:	rex.WRXB lahf 
   140019b9d:	add    BYTE PTR [rax],al
   140019b9f:	add    BYTE PTR [rax+0x2],al
   140019ba2:	xchg   ebp,eax
   140019ba3:	(bad)  
   140019ba4:	ror    DWORD PTR [rcx-0x58e3dbaa],0xfa
   140019bab:	(bad)
   140019bae:	enter  0xdc73,0x6d
   140019bb2:	lods   eax,DWORD PTR ds:[rsi]
   140019bb3:	jmp    0x140019c27
   140019bb5:	add    DWORD PTR [rax],eax
   140019bb7:	add    BYTE PTR [rax],al
   140019bb9:	add    cl,al
   140019bbb:	(bad)  
   140019bbc:	fs (bad) 
   140019bbe:	movabs ds:0xd17b25efa418ca63,al
   140019bc7:	int    0x70
   140019bc9:	out    dx,eax
   140019bca:	fild   QWORD PTR [rbx+0x1f]
   140019bcd:	ds (bad) 
   140019bcf:	popf   
   140019bd0:	pop    rdi
   140019bd1:	add    eax,DWORD PTR [rax]
   140019bd3:	add    BYTE PTR [rax],al
   140019bd5:	add    BYTE PTR [rax],al
   140019bd7:	in     al,0x6e
   140019bd9:	inc    bl
   140019bdb:	int    0x6a
   140019bdd:	or     al,0xbc
   140019bdf:	data16 xor bl,BYTE PTR [rdi]
   140019be2:	cmp    DWORD PTR [rsi],ebp
   140019be4:	add    eax,DWORD PTR [rdx]
   140019be6:	rex.RB pop r10
   140019be8:	and    eax,0x5671d2f8
   140019bed:	rex.WX ret 0xdac3
   140019bf1:	(bad)  
   140019bf2:	add    BYTE PTR [rax],al
   140019bf4:	adc    BYTE PTR [rdi+0x4308a82e],cl
   140019bfa:	mov    dl,0xaa
   140019bfc:	jl     0x140019c18
   140019bfe:	and    DWORD PTR [rsi-0xc7531c0],ecx
   140019c04:	or     ecx,esi
   140019c06:	(bad)  
   140019c07:	test   BYTE PTR [rdi],ah
   140019c09:	or     ebp,ebx
   140019c0b:	jl     0x140019bd0
   140019c0d:	xchg   esp,eax
   140019c0e:	and    eax,0x1249ad
   140019c13:	add    BYTE PTR [rax],al
   140019c15:	sbb    bl,bpl
   140019c18:	ficom  DWORD PTR [rdi+rbx*4-0x34]
   140019c1c:	mov    edi,0xabdc5961
   140019c21:	stos   DWORD PTR es:[rdi],eax
   140019c22:	pop    rsp
   140019c23:	(bad)  
   140019c24:	or     al,0x44
   140019c26:	add    eax,0xbc1667f5
   140019c2b:	rcl    DWORD PTR [rdx-0x51],1
   140019c2e:	mov    bh,0xfb
   140019c30:	sub    DWORD PTR [rbp+0x2a94608f],ecx
   140019c36:	add    BYTE PTR [rax],al
   140019c38:	add    BYTE PTR [rax],al
   140019c3a:	add    BYTE PTR [rcx],ah
   140019c3c:	or     al,0x8a
   140019c3e:	mov    ebx,0xaf8ea417
   140019c43:	push   rsi
   140019c44:	test   eax,0x3606479f
   140019c49:	mov    dl,0x4b
   140019c4b:	pop    rbp
   140019c4c:	loopne 0x140019cad
   140019c4e:	fadd   QWORD PTR [rax-0xf0155f6]
   140019c54:	rex (bad) [rsi+0x1a80d0a8]
   140019c5b:	imul   esp,DWORD PTR [rbx],0x63
   140019c5e:	add    BYTE PTR [rax],al
   140019c60:	cmp    BYTE PTR fs:[rdx+rsi*1-0x6a],cl
   140019c65:	(bad)  
   140019c66:	push   rdi
   140019c67:	adc    ebp,0x42
   140019c6a:	rex.WX in al,0x61
   140019c6d:	and    ch,BYTE PTR [rcx+0x3c103dd9]
   140019c73:	mov    ebp,0x91e5f372
   140019c78:	je     0x140019c8f
   140019c7a:	pop    rcx
   140019c7b:	ror    BYTE PTR [rip+0x6cec1da6],0xd9        # 0x1acedba28
   140019c82:	sub    dl,BYTE PTR [rax]
   140019c84:	shl    esi,cl
   140019c86:	add    BYTE PTR [rax],al
   140019c88:	add    BYTE PTR [rax],dl
   140019c8a:	test   DWORD PTR [rsi],ebx
   140019c8c:	pop    rbx
   140019c8d:	(bad)  
   140019c8e:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140019c90:	imul   ebp,DWORD PTR [rdx],0xe21c187b
   140019c96:	push   rax
   140019c97:	add    al,0x2b
   140019c99:	xor    al,0xdd
   140019c9b:	(bad)  
   140019c9c:	out    dx,al
   140019c9d:	(bad)  
   140019c9e:	push   rax
   140019c9f:	movsxd ebx,DWORD PTR [rcx+0x16a6c971]
   140019ca5:	jmp    0x16e2a2af4
   140019caa:	or     BYTE PTR [rdi],dl
   140019cac:	outs   dx,DWORD PTR ds:[rsi]
   140019cad:	outs   dx,BYTE PTR ds:[rsi]
   140019cae:	rex.WB sbb bpl,BYTE PTR [r14+0x19]
   140019cb2:	add    al,BYTE PTR [rax]
   140019cb4:	add    BYTE PTR [rax],al
   140019cb6:	xor    spl,BYTE PTR [rsi]
   140019cb9:	rex lods eax,DWORD PTR ds:[rsi]
   140019cbb:	add    al,0x50
   140019cbd:	jb     0x140019cdd
   140019cbf:	stc    
   140019cc0:	(bad)  
   140019cc1:	rcl    DWORD PTR [rcx+rbp*1+0x665bcdbb],1
   140019cc8:	xchg   esi,eax
   140019cc9:	cmp    esp,DWORD PTR cs:[rdx+0x65fa7ddb]
   140019cd0:	lods   al,BYTE PTR ds:[rsi]
   140019cd1:	push   rbx
   140019cd2:	fidiv  WORD PTR [rdi-0x65]
   140019cd5:	movabs ds:0x25abc6bff953b020,al
   140019cde:	xchg   esp,eax
   140019cdf:	rex.WXB
   140019ce0:	rex.WRB jrcxz 0x140019ce7
   140019ce3:	add    BYTE PTR [rcx-0xb043cd3],al
   140019ce9:	shl    BYTE PTR [rdx],1
   140019ceb:	push   rdx
   140019cec:	push   rax
   140019ced:	sub    BYTE PTR [rdi],cl
   140019cef:	mov    bh,0xf3
   140019cf1:	repnz adc edx,DWORD PTR [rdi+0x13]
   140019cf5:	adc    al,0x42
   140019cf7:	fdivr  QWORD PTR [rbp+0x5d]
   140019cfa:	cmp    esi,edx
   140019cfc:	cdq    
   140019cfd:	sbb    DWORD PTR [rcx-0x8],ebx
   140019d00:	sbb    al,0x38
   140019d02:	xchg   edx,eax
   140019d03:	add    dh,dl
   140019d05:	adc    al,0xb3
   140019d07:	xchg   BYTE PTR [rcx+0x617aa577],bh
   140019d0d:	(bad)  
   140019d0e:	mov    bh,0x12
   140019d10:	push   0x61
   140019d12:	or     eax,DWORD PTR [rax]
   140019d14:	add    ah,ah
   140019d16:	adc    DWORD PTR [rip+0x56c3678d],ebx        # 0x196c504a9
   140019d1c:	and    BYTE PTR [rdi],bl
   140019d1e:	xchg   esp,eax
   140019d1f:	cmp    cl,BYTE PTR [rbx+0x89b0936]
   140019d25:	imul   esi,DWORD PTR [rax-0x43],0x207665be
   140019d2c:	jmp    0x140019cf2
   140019d2e:	es fwait
   140019d30:	popf   
   140019d31:	call   0x1496fb29d
   140019d36:	adc    eax,0x32f22b9d
   140019d3b:	jno    0x140019d50
   140019d3d:	push   rcx
   140019d3e:	movabs rsi,0x1a7f5245e5a2ce
   140019d48:	add    BYTE PTR [rax],al
   140019d4a:	adc    BYTE PTR [rbx+0x2f79478],bh
   140019d50:	shl    BYTE PTR [rbx+rbx*1-0x74],0x0
   140019d55:	pop    rbp
   140019d56:	lock mov al,0x75
   140019d59:	(bad)  
   140019d5a:	fld    TBYTE PTR [rcx-0x1d2646ec]
   140019d60:	fbstp  TBYTE PTR [rdx+0xf]
   140019d63:	gs rex.WR
   140019d65:	rex.WXB sub BYTE PTR [r15+0x16],sil
   140019d69:	loopne 0x140019d61
   140019d6b:	ins    DWORD PTR es:[rdi],dx
   140019d6c:	ret    0x4391
   140019d6f:	push   rcx
   140019d70:	iret   
   140019d71:	leave  
   140019d72:	xchg   ebp,eax
   140019d73:	(bad)  
   140019d74:	push   rbp
   140019d75:	stos   DWORD PTR es:[rdi],eax
   140019d76:	loop   0x140019d4e
   140019d78:	(bad)  
   140019d79:	out    0xa8,al
   140019d7b:	pushf  
   140019d7c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019d7d:	mov    cl,0x3d
   140019d7f:	add    BYTE PTR [rax],al
   140019d81:	add    BYTE PTR [rax],al
   140019d83:	rex
   140019d84:	rex.WX shr spl,1
   140019d87:	hlt    
   140019d88:	lock mov BYTE PTR [rbx],ah
   140019d8b:	jg     0x140019d52
   140019d8d:	ins    DWORD PTR es:[rdi],dx
   140019d8e:	or     bl,BYTE PTR [rax+0x6f]
   140019d91:	add    al,0xbf
   140019d93:	rex.XB ret 
   140019d95:	pop    rbp
   140019d96:	sub    eax,0x110848f8
   140019d9b:	out    dx,al
   140019d9c:	sbb    al,0x59
   140019d9e:	movabs al,ds:0x2ea53fcdf4f028fa
   140019da7:	sbb    DWORD PTR [rax-0x7843298f],esp
   140019dad:	imul   r15d,DWORD PTR [rbp+0x1],0x9d10f96e
   140019db5:	push   rsi
   140019db6:	sbb    bh,BYTE PTR [rcx+0x75]
   140019db9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019dba:	pop    QWORD PTR [rax]
   140019dbc:	add    cl,ah
   140019dbe:	mov    dl,0xb9
   140019dc0:	cmp    al,0x75
   140019dc2:	mov    BYTE PTR [rdx-0x32c0e96d],al
   140019dc8:	imul   edi,DWORD PTR [rdx],0xffffffb4
   140019dcb:	mov    esi,ebx
   140019dcd:	xchg   DWORD PTR [rsi+0x4d454608],ebx
   140019dd3:	push   0xfffffffffddba60c
   140019dd8:	xchg   ecx,eax
   140019dd9:	xchg   ebx,eax
   140019dda:	and    al,0xdf
   140019ddc:	adc    ebp,esp
   140019dde:	push   0xffffffffb4442730
   140019de3:	cdq    
   140019de4:	out    dx,al
   140019de5:	xor    DWORD PTR [r14+0x5802cac3],0xd96851f1
   140019df0:	movabs ds:0x14e718d7d7625,al
   140019df9:	add    BYTE PTR [rbx+rdi*8-0x1a],ah
   140019dfd:	sbb    DWORD PTR [rdx-0xe],0xf
   140019e01:	lods   eax,DWORD PTR ds:[rsi]
   140019e02:	push   rdi
   140019e03:	xchg   esp,eax
   140019e04:	adc    DWORD PTR [rbp-0x4a99ff80],esi
   140019e0a:	sub    DWORD PTR [rax],esp
   140019e0c:	iret   
   140019e0d:	rol    ch,cl
   140019e0f:	xlat   BYTE PTR ds:[rbx]
   140019e10:	jge    0x140019e7f
   140019e12:	(bad)  
   140019e13:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019e14:	sbb    al,0x4d
   140019e16:	mov    bh,0xcd
   140019e18:	fidiv  WORD PTR [rax-0x63]
   140019e1b:	fidivr DWORD PTR [rip+0x4eb71641]        # 0x18eb8b462
   140019e21:	retf   0x71d0
   140019e24:	cwde   
   140019e25:	adc    esp,esp
   140019e27:	xlat   BYTE PTR ds:[rbx]
   140019e28:	nop
   140019e29:	cmp    al,BYTE PTR [rax+0x4f]
   140019e2c:	loop   0x140019e6d
   140019e2e:	stos   DWORD PTR es:[rdi],eax
   140019e2f:	stc    
   140019e30:	outs   dx,DWORD PTR ds:[rsi]
   140019e31:	ja     0x140019e80
   140019e33:	es out 0xaf,al
   140019e36:	or     al,BYTE PTR [rbx]
   140019e38:	add    BYTE PTR [rax],al
   140019e3a:	add    BYTE PTR [rax],dl
   140019e3c:	xor    DWORD PTR [rbp-0x55],edx
   140019e3f:	or     edx,edx
   140019e41:	pop    rax
   140019e42:	or     al,0xa6
   140019e44:	retf   
   140019e45:	es (bad) 
   140019e47:	push   rsi
   140019e48:	xchg   DWORD PTR [rbx-0xb3e95e4],eax
   140019e4e:	xchg   DWORD PTR [rbp+0x76],esi
   140019e51:	call   0x187d0ca9a
   140019e56:	movabs al,ds:0xba063ec908059e41
   140019e5f:	movabs al,ds:0xe1fac055e7cfc8e8
   140019e68:	mov    dl,0x44
   140019e6a:	add    edi,ebp
   140019e6c:	mov    al,0x7e
   140019e6e:	and    BYTE PTR [rbx+rsi*2],ah
   140019e71:	and    eax,0xf981d172
   140019e76:	mov    eax,0x1505aee4
   140019e7b:	(bad)  
   140019e7c:	rex (bad) 
   140019e7e:	cmp    edi,DWORD PTR [rdx+0x4f]
   140019e81:	pop    rbp
   140019e82:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019e83:	(bad)  
   140019e84:	xor    eax,DWORD PTR [rcx-0x1e]
   140019e87:	rex.WRXB ins DWORD PTR es:[rdi],dx
   140019e89:	ins    DWORD PTR es:[rdi],dx
   140019e8a:	mov    rdx,db6
   140019e8d:	xor    edx,DWORD PTR [rsi-0x1b]
   140019e90:	push   rsi
   140019e91:	adc    eax,ecx
   140019e93:	and    eax,0x28ebd797
   140019e98:	test   bl,ch
   140019e9a:	xchg   esi,eax
   140019e9b:	shl    DWORD PTR [rdi+0x3b],cl
   140019e9e:	rex.WB (bad) 
   140019ea0:	scas   al,BYTE PTR es:[rdi]
   140019ea1:	sub    eax,0x3820471f
   140019ea6:	lods   eax,DWORD PTR ds:[rsi]
   140019ea7:	xchg   esi,eax
   140019ea8:	ror    esi,1
   140019eaa:	cli    
   140019eab:	mov    bl,bl
   140019ead:	int    0xde
   140019eaf:	rex.WRX xchg al,r8b
   140019eb2:	push   0x695da155
   140019eb7:	mov    dl,0x89
   140019eb9:	cmp    al,0x12
   140019ebb:	and    al,0x71
   140019ebd:	rex.RB jge 0x140019ed0
   140019ec0:	add    BYTE PTR [rax],al
   140019ec2:	rex.B sbb al,0x27
   140019ec5:	rex.WX (bad) 
   140019ec7:	outs   dx,BYTE PTR ds:[rsi]
   140019ec8:	push   rdi
   140019ec9:	scas   al,BYTE PTR es:[rdi]
   140019eca:	(bad)  
   140019ecb:	in     al,dx
   140019ecc:	stos   BYTE PTR es:[rdi],al
   140019ecd:	mov    DWORD PTR [rdx],esp
   140019ecf:	out    dx,eax
   140019ed0:	(bad)  
   140019ed2:	movabs ds:0x66bdf217e1efe4b6,al
   140019edb:	xor    eax,DWORD PTR [rax+0x3e37b488]
   140019ee1:	sub    al,0xb8
   140019ee3:	mov    edi,0x19acde91
   140019ee8:	or     BYTE PTR [rsp+rsi*8-0x2c],ah
   140019eec:	rex.WRX push 0xffffffffffffffff
   140019eef:	xor    eax,0x67566a0e
   140019ef4:	adc    al,0xb9
   140019ef6:	fild   DWORD PTR [rax-0x36]
   140019ef9:	cmp    ebp,DWORD PTR [rdx]
   140019efb:	js     0x140019f65
   140019efd:	fwait
   140019efe:	xor    ch,BYTE PTR [rbx-0x27]
   140019f01:	(bad)
   140019f04:	mov    esp,0x266469
   140019f09:	add    BYTE PTR [rax],al
   140019f0b:	in     al,0xf4
   140019f0d:	pop    rdi
   140019f0e:	cmp    bl,0xaf
   140019f11:	rcl    DWORD PTR [rbp-0x13],1
   140019f14:	test   al,0x20
   140019f16:	rex.WX
   140019f17:	fwait
   140019f18:	clc    
   140019f19:	push   rdi
   140019f1a:	xchg   edi,eax
   140019f1b:	stos   DWORD PTR es:[rdi],eax
   140019f1c:	or     bh,dh
   140019f1e:	scas   al,BYTE PTR es:[rdi]
   140019f1f:	add    DWORD PTR [rbx-0x5a],edi
   140019f22:	sub    al,0x4a
   140019f24:	imul   edx,DWORD PTR [rbp+0x1c291ebf],0xd2aac7c4
   140019f2e:	(bad)  
   140019f2f:	fdiv   DWORD PTR [rsi-0x39]
   140019f32:	ror    DWORD PTR ss:[rdx*2-0x626f6c26],1
   140019f3a:	(bad)  
   140019f3b:	(bad)  
   140019f3c:	test   al,0xcb
   140019f3e:	rex.WXB and rax,0xdf07618
   140019f44:	or     DWORD PTR [rax+0x1074f7a8],ecx
   140019f4a:	(bad)  
   140019f4b:	cmp    bh,ah
   140019f4d:	adc    DWORD PTR [rax-0x1b],ecx
   140019f50:	lods   eax,DWORD PTR ds:[rsi]
   140019f51:	mov    fs,WORD PTR [rbx+0x59]
   140019f54:	adc    bh,ah
   140019f56:	retf   
   140019f57:	xchg   edi,eax
   140019f58:	call   0x17e2876c6
   140019f5d:	jb     0x140019f43
   140019f5f:	mov    ah,0x86
   140019f61:	stos   BYTE PTR es:[rdi],al
   140019f62:	nop
   140019f63:	pop    rbx
   140019f64:	and    bh,BYTE PTR [rcx]
   140019f66:	xor    ebx,DWORD PTR [rbp+rsi*2-0x6eb485f9]
   140019f6d:	jmp    0x13978ccb9
   140019f72:	outs   dx,BYTE PTR ds:[rsi]
   140019f73:	(bad)  
   140019f74:	out    0x40,eax
   140019f76:	or     edx,DWORD PTR [rsi]
   140019f78:	(bad)  
   140019f79:	clc    
   140019f7a:	xchg   edx,eax
   140019f7b:	or     al,0x10
   140019f7d:	lock pop rdi
   140019f7f:	repnz adc DWORD PTR [rbx+rax*8+0x25],ebp
   140019f84:	rex.X mov edi,ecx
   140019f87:	leave  
   140019f88:	popf   
   140019f89:	xchg   ecx,eax
   140019f8a:	or     esi,DWORD PTR [rbx-0x51]
   140019f8d:	jl     0x140019f8e
   140019f8f:	add    eax,0xb0432d85
   140019f94:	imul   esi,DWORD PTR [rbp+0x2b],0x57842c2d
   140019f9b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019f9c:	adc    bh,ch
   140019f9e:	(bad)  
   140019f9f:	rol    BYTE PTR [rax],1
   140019fa1:	rex jp 0x140019f6b
   140019fa4:	in     eax,0x62
   140019fa6:	mov    eax,0xd8886ae8
   140019fab:	adc    ch,ah
   140019fad:	cwde   
   140019fae:	int    0xc8
   140019fb0:	(bad)
   140019fb3:	adc    BYTE PTR [rbp-0x4a],dl
   140019fb6:	pop    rcx
   140019fb7:	rcl    ah,1
   140019fb9:	mov    esi,0x823158fb
   140019fbe:	mov    eax,0x4c451903
   140019fc3:	add    edi,DWORD PTR [rcx]
   140019fc5:	leave  
   140019fc6:	sbb    QWORD PTR [r8+rax*1-0x3f1de03b],r13
   140019fce:	rex.WR jns 0x140019f72
   140019fd1:	or     cl,0x3b
   140019fd4:	shr    DWORD PTR [rip+0x22f8e9b1],1        # 0x162fa898b
   140019fda:	ins    DWORD PTR es:[rdi],dx
   140019fdb:	pop    rsi
   140019fdc:	(bad)  
   140019fdd:	mov    DWORD PTR [rax],edi
   140019fdf:	jnp    0x140019fb9
   140019fe1:	sbb    DWORD PTR [rcx-0x32],edi
   140019fe4:	jb     0x14001a05c
   140019fe6:	(bad)  
   140019fe7:	js     0x140019f88
   140019fe9:	mov    ecx,0x34e79e5
   140019fee:	xchg   esp,eax
   140019fef:	in     al,0x1
   140019ff1:	add    BYTE PTR [rax],al
   140019ff3:	add    BYTE PTR [rax],al
   140019ff5:	add    BYTE PTR [rax],al
   140019ff7:	movabs eax,ds:0x9be47d6f6c5cd4e9
   14001a000:	out    0xd9,eax
   14001a002:	cmp    edi,ecx
   14001a004:	movabs eax,ds:0xe8c68b345177626f
   14001a00d:	pop    rcx
   14001a00e:	sub    ebx,esi
   14001a010:	pop    rax
   14001a011:	fidivr WORD PTR [rdi+rcx*8]
   14001a014:	pop    rax
   14001a015:	inc    DWORD PTR [rsi+0x22]
   14001a018:	adc    eax,0x59a8577c
   14001a01d:	jne    0x14001a006
   14001a01f:	es push rbx
   14001a021:	addr32 ja 0x14001a03b
   14001a024:	movsxd esi,DWORD PTR [rdi+0xa5febe6]
   14001a02a:	std    
   14001a02b:	jrcxz  0x14001a096
   14001a02d:	cmp    eax,ebp
   14001a02f:	xor    esi,DWORD PTR [rip+0xffffffff87a805a0]        # 0xc7a9a5d5
   14001a035:	mov    ecx,0xf43f631
   14001a03a:	(bad)  
   14001a03b:	and    ebx,ebx
   14001a03d:	rex.XB pop r10
   14001a03f:	fcom   DWORD PTR [rsi-0x5d54e40b]
   14001a045:	sbb    DWORD PTR [rdi],edi
   14001a047:	push   0x4
   14001a04c:	fs (bad) 
   14001a04e:	jge    0x14001a00e
   14001a050:	(bad)  
   14001a051:	add    al,0xc9
   14001a053:	rex.WXB mov r8b,0xed
   14001a056:	cmc    
   14001a057:	loope  0x14001a033
   14001a059:	rex.WRX movabs rax,ds:0x4fee9ce409db738f
   14001a063:	addr32 or eax,0xd6a9159f
   14001a069:	mov    ch,0xb5
   14001a06b:	test   BYTE PTR [rsi],0x96
   14001a06e:	cmp    BYTE PTR [rbx-0x6f],dh
   14001a071:	ret    0xeb49
   14001a074:	int3   
   14001a075:	xchg   edi,eax
   14001a076:	sub    ebx,DWORD PTR [rdi-0x6b]
   14001a079:	(bad)  
   14001a07a:	cmp    BYTE PTR [rdi],cl
   14001a07c:	div    BYTE PTR [rbx+0x37142091]
   14001a082:	js     0x14001a055
   14001a084:	fild   WORD PTR [rdx-0x2f]
   14001a087:	rcr    esi,0x22
   14001a08a:	ds adc eax,0x8aafdf57
   14001a090:	pop    rdi
   14001a091:	in     eax,0xf5
   14001a093:	ja     0x14001a020
   14001a095:	retf   0xa3e7
   14001a098:	pop    rbx
   14001a099:	push   rdx
   14001a09a:	(bad)  
   14001a09b:	add    edi,DWORD PTR [rip+0xa42e74f]        # 0x14a4487f0
   14001a0a1:	add    BYTE PTR [rax],al
   14001a0a3:	add    BYTE PTR [rax],al
   14001a0a5:	adc    ch,bl
   14001a0a7:	hlt    
   14001a0a8:	push   rdx
   14001a0a9:	or     DWORD PTR [rbp+0x5d],eax
   14001a0ac:	loope  0x14001a0f0
   14001a0ae:	mov    ah,0xae
   14001a0b0:	cs xor al,0xb3
   14001a0b3:	movabs ds:0xb4287a6e3fcda36f,eax
   14001a0bc:	div    DWORD PTR [rdi-0x3f]
   14001a0bf:	rex.WXB ror r8b,1
   14001a0c2:	shl    BYTE PTR [rdi-0x20],cl
   14001a0c5:	clc    
   14001a0c6:	test   al,0xae
   14001a0c8:	addr32 cmp ecx,ecx
   14001a0cb:	lods   eax,DWORD PTR ds:[rsi]
   14001a0cc:	mov    bl,0x56
   14001a0ce:	enter  0xb6c,0x9d
   14001a0d2:	popf   
   14001a0d3:	xchg   ebp,eax
   14001a0d4:	add    cl,al
   14001a0d6:	rex.W pop rbx
   14001a0d8:	cmp    eax,0xf44abe8a
   14001a0dd:	fst    DWORD PTR ss:[rdx+0x4d]
   14001a0e1:	call   0x161c712c1
   14001a0e6:	sbb    al,0xf9
   14001a0e8:	or     DWORD PTR [rcx-0x2795b5bb],eax
   14001a0ee:	stos   BYTE PTR es:[rdi],al
   14001a0ef:	xlat   BYTE PTR ds:[rbx]
   14001a0f0:	jl     0x14001a13e
   14001a0f2:	loope  0x14001a0fc
   14001a0f4:	pushf  
   14001a0f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a0f6:	fwait
   14001a0f7:	jne    0x14001a0f9
   14001a0f9:	mov    BYTE PTR [rsp+riz*8],bh
   14001a0fc:	(bad)  
   14001a0fd:	add    BYTE PTR [rax],al
   14001a0ff:	add    BYTE PTR [rax],al
   14001a101:	add    BYTE PTR [rax-0x6e],al
   14001a104:	(bad)  
   14001a105:	adc    cl,dh
   14001a107:	add    al,0xbe
   14001a109:	jb     0x14001a16f
   14001a10b:	sbb    BYTE PTR [rcx+rax*8],cl
   14001a10e:	ss xchg ebx,edi
   14001a111:	stos   DWORD PTR es:[rdi],eax
   14001a112:	js     0x14001a128
   14001a114:	sub    DWORD PTR [rdi-0x68c603af],ebp
   14001a11a:	jmp    0x14001a141
   14001a11c:	adc    eax,0xb4c2b30
   14001a121:	(bad)  
   14001a122:	add    esp,DWORD PTR [rcx+0x28fe3c3b]
   14001a128:	mov    edx,0x587788fc
   14001a12d:	rex.XB sahf 
   14001a12f:	mov    eax,0x733de4a4
   14001a134:	ret    0x46f2
   14001a137:	jl     0x14001a0d1
   14001a139:	(bad)  
   14001a13a:	je     0x14001a0cb
   14001a13c:	mov    rcx,db3
   14001a13f:	fld    TBYTE PTR [rsi-0x4dd15c4a]
   14001a145:	adc    al,0x50
   14001a147:	stos   BYTE PTR es:[rdi],al
   14001a148:	lea    ebp,[rbx+0x3442ea39]
   14001a14e:	xchg   esi,eax
   14001a14f:	xchg   edi,eax
   14001a150:	test   eax,0xfe01dfdf
   14001a155:	shl    ebx,cl
   14001a157:	rol    BYTE PTR [rax+0x37a07902],cl
   14001a15d:	add    BYTE PTR [rax],al
   14001a15f:	add    BYTE PTR [rcx],al
   14001a161:	fwait
   14001a162:	pushf  
   14001a163:	push   rax
   14001a164:	icebp  
   14001a165:	lods   eax,DWORD PTR ds:[rsi]
   14001a166:	fadd   st(7),st
   14001a168:	sub    al,0xad
   14001a16a:	cmp    eax,0xc64d3738
   14001a16f:	jae    0x14001a141
   14001a171:	ins    DWORD PTR es:[edi],dx
   14001a173:	(bad)  
   14001a174:	(bad)  
   14001a175:	test   al,0x9b
   14001a177:	push   rcx
   14001a178:	clc    
   14001a179:	repnz add eax,esp
   14001a17c:	movabs ds:0xa9d710233aa052e1,al
   14001a185:	jae    0x14001a10c
   14001a187:	rex.R mov edx,0x3cf12d9
   14001a18d:	sbb    BYTE PTR [rdi-0x23c56490],al
   14001a193:	push   rdx
   14001a194:	call   0x18ee753eb
   14001a199:	sti    
   14001a19a:	(bad)  
   14001a19b:	(bad)  
   14001a19c:	(bad)  
   14001a19d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a19e:	rex.WRB movabs r14,0x8c62ed4f0aabd7e1
   14001a1a8:	jnp    0x14001a196
   14001a1aa:	mov    ecx,0x664021ce
   14001a1af:	(bad)  
   14001a1b0:	add    BYTE PTR [rbx+0x75e6a115],al
   14001a1b6:	jrcxz  0x14001a184
   14001a1b8:	repnz sub DWORD PTR [rdi],ebp
   14001a1bb:	test   BYTE PTR [rcx+0x0],al
   14001a1c1:	in     al,0x17
   14001a1c3:	ja     0x14001a229
   14001a1c5:	sti    
   14001a1c6:	cmc    
   14001a1c7:	shl    DWORD PTR [rcx+0x3d],cl
   14001a1ca:	jbe    0x14001a16c
   14001a1cc:	jmp    0x1a67eb600
   14001a1d1:	rex.WR hlt 
   14001a1d3:	xor    ebp,DWORD PTR [rsi]
   14001a1d5:	icebp  
   14001a1d6:	mov    eax,0xf0d8ef3
   14001a1db:	adc    ebp,DWORD PTR [rcx-0x6c]
   14001a1de:	rex.WR jae 0x14001a189
   14001a1e1:	(bad)  
   14001a1e3:	(bad)  
   14001a1e4:	rex adc eax,DWORD PTR [rcx]
   14001a1e7:	cmp    al,0xa
   14001a1e9:	mov    BYTE PTR [rcx-0x34],dh
   14001a1ec:	and    DWORD PTR [rip+0xffffffffc9ef37a5],ebp        # 0x109f0d997
   14001a1f2:	fimul  DWORD PTR [rdx+0x42bb31b4]
   14001a1f8:	rex.B
   14001a1f9:	rex.WR stc 
   14001a1fb:	(bad)  
   14001a1fc:	ins    BYTE PTR es:[rdi],dx
   14001a1fd:	add    eax,0x1b8c88b
   14001a202:	add    eax,0x97ed7ce2
   14001a207:	push   rdx
   14001a208:	(bad)
   14001a20c:	stos   BYTE PTR es:[rdi],al
   14001a20d:	fcomp  st(2)
   14001a20f:	xchg   esi,ebx
   14001a211:	(bad)  
   14001a212:	xor    edi,DWORD PTR [rax-0x6b0f979f]
   14001a218:	mov    ebp,0x6a13cc9a
   14001a21d:	(bad)  
   14001a21e:	ror    DWORD PTR [rbp+0x12d],0x0
   14001a225:	add    BYTE PTR [rax],dl
   14001a227:	adc    ebp,eax
   14001a229:	ss jp  0x14001a1f2
   14001a22c:	sahf   
   14001a22d:	sub    DWORD PTR [rsi],edx
   14001a22f:	hlt    
   14001a230:	or     bh,BYTE PTR [rdi]
   14001a232:	rex.WB
   14001a233:	repz iret 
   14001a235:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a236:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a237:	ja     0x14001a1dc
   14001a239:	and    edi,DWORD PTR [rsi-0x5da47d5c]
   14001a23f:	int3   
   14001a240:	(bad)  
   14001a241:	jb     0x14001a253
   14001a243:	xor    eax,0xbe9d447f
   14001a248:	mov    eax,0x4ea8c213
   14001a24d:	xor    cl,BYTE PTR [rcx+rcx*8-0x53]
   14001a251:	xor    ebx,DWORD PTR [rsi-0x53014544]
   14001a257:	jbe    0x14001a28b
   14001a259:	and    DWORD PTR [rsi+rbp*1+0x32],ecx
   14001a25d:	int    0x13
   14001a25f:	ds mov ah,0x91
   14001a262:	(bad)  
   14001a263:	jo     0x14001a29b
   14001a265:	fstp   DWORD PTR [rbx+rdi*4-0x7b]
   14001a269:	xchg   edi,eax
   14001a26a:	adc    al,0x42
   14001a26c:	std    
   14001a26d:	sbb    cl,ah
   14001a26f:	rex.RX clc 
   14001a271:	fnstsw WORD PTR [rax]
   14001a273:	out    0xd2,al
   14001a275:	xchg   DWORD PTR [rdi],eax
   14001a277:	imul   edx,DWORD PTR [rdi],0xfe1a02d1
   14001a27d:	icebp  
   14001a27e:	mov    ch,0x3e
   14001a280:	scas   al,BYTE PTR es:[rdi]
   14001a281:	stos   DWORD PTR es:[rdi],eax
   14001a282:	mov    ecx,0x8ee6fc3
   14001a287:	sbb    al,0xbe
   14001a289:	add    al,BYTE PTR [rax]
   14001a28b:	add    BYTE PTR [rax],al
   14001a28d:	add    BYTE PTR [rax],al
   14001a28f:	stos   BYTE PTR es:[rdi],al
   14001a291:	ret    0x8140
   14001a294:	fnstenv [rdi-0x8]
   14001a297:	sub    al,0x3d
   14001a299:	xlat   BYTE PTR ds:[rbx]
   14001a29a:	loope  0x14001a30d
   14001a29c:	cwde   
   14001a29d:	(bad)  
   14001a29e:	out    0xd5,eax
   14001a2a0:	or     DWORD PTR [rbx+0x51],esp
   14001a2a3:	jb     0x14001a282
   14001a2a5:	sbb    DWORD PTR [rax+0x2a5a46af],ebp
   14001a2ab:	(bad)  
   14001a2ac:	(bad)  
   14001a2ad:	fadd   QWORD PTR [rdx]
   14001a2af:	sub    bh,dh
   14001a2b1:	fld    QWORD PTR [rsi-0x32]
   14001a2b4:	lea    esp,[rbx+rdx*1]
   14001a2b7:	(bad)  
   14001a2b8:	lods   eax,DWORD PTR ds:[rsi]
   14001a2b9:	shl    BYTE PTR [rbx],cl
   14001a2bb:	mov    bh,0x19
   14001a2bd:	mov    ebx,0xcc2bc404
   14001a2c2:	(bad)  
   14001a2c3:	mov    bh,0xca
   14001a2c5:	jmp    0x14001a278
   14001a2c7:	rex.RXB fmul QWORD PTR [r11+0x9]
   14001a2cb:	popf   
   14001a2cc:	retf   0xdc02
   14001a2cf:	vsqrtss xmm4,xmm14,xmm6
   14001a2d3:	xor    DWORD PTR [rax-0x57713caa],eax
   14001a2d9:	pop    rax
   14001a2da:	(bad)  
   14001a2db:	xor    al,0x42
   14001a2dd:	(bad)  
   14001a2de:	add    al,0x8b
   14001a2e0:	adc    al,0xe5
   14001a2e2:	mov    edi,0xfffc13fe
   14001a2e7:	add    eax,0x6763790f
   14001a2ec:	std    
   14001a2ed:	ss (bad) 
   14001a2ef:	data16 jbe 0x14001a342
   14001a2f2:	loope  0x14001a2ad
   14001a2f4:	(bad)  
   14001a2f5:	(bad)  
   14001a2f6:	add    BYTE PTR [rax],al
   14001a2f8:	add    BYTE PTR [rcx-0x50],ah
   14001a2fb:	sbb    cl,BYTE PTR [edx]
   14001a2fe:	add    edx,edx
   14001a300:	shl    cl,0x5
   14001a303:	sar    BYTE PTR [rbx],1
   14001a305:	jae    0x14001a319
   14001a307:	fstp   TBYTE PTR [rdi]
   14001a309:	cs lahf 
   14001a30b:	movabs ds:0x2a63dce261b29de2,eax
   14001a314:	mov    esp,0x9b942604
   14001a319:	(bad)  
   14001a31a:	jo     0x14001a37d
   14001a31c:	xchg   esi,eax
   14001a31d:	and    eax,0x75b9c2e3
   14001a322:	or     edx,DWORD PTR [rcx+riz*1]
   14001a325:	sub    al,0x1d
   14001a327:	(bad)  
   14001a328:	(bad)  
   14001a329:	push   0x13
   14001a32b:	mov    eax,0x89d23ba2
   14001a330:	jae    0x14001a3af
   14001a332:	icebp  
   14001a333:	(bad)  
   14001a334:	(bad)  
   14001a336:	retf   0x2bc6
   14001a339:	fild   QWORD PTR [rcx+0x6]
   14001a33c:	(bad)  
   14001a33d:	xchg   DWORD PTR [rax-0x6cf912dc],edi
   14001a343:	data16 jmp 0x14001a3b4
   14001a346:	sbb    QWORD PTR [r15-0x25],rbp
   14001a34a:	lea    edx,[rbx+0x5e748275]
   14001a350:	ss (bad) 
   14001a352:	outs   dx,BYTE PTR ds:[rsi]
   14001a353:	(bad)
   14001a356:	nop
   14001a357:	(bad)
   14001a35b:	enter  0x798e,0xae
   14001a35f:	and    al,0xde
   14001a361:	(bad)  
   14001a362:	add    BYTE PTR [rax],al
   14001a364:	add    BYTE PTR [rax],al
   14001a366:	rcr    DWORD PTR fs:[r10+0x2c99d588],0x43
   14001a36f:	fstp   DWORD PTR [rdx]
   14001a371:	out    0x80,eax
   14001a373:	movabs ds:0x8249793d6bf63d2e,al
   14001a37c:	rex.XB test eax,0xe64a79e7
   14001a382:	std    
   14001a383:	and    bl,BYTE PTR [rdx-0x101f2990]
   14001a389:	iret   
   14001a38a:	retf   0xd705
   14001a38d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a38e:	lea    edi,[rbp-0x1c9bff94]
   14001a394:	mov    bl,0xdc
   14001a396:	rex.WRX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001a398:	outs   dx,BYTE PTR ds:[rsi]
   14001a399:	or     BYTE PTR [rax-0x70ba615f],ch
   14001a39f:	je     0x14001a369
   14001a3a1:	push   rsp
   14001a3a2:	mov    ?,esp
   14001a3a4:	push   rdi
   14001a3a5:	(bad)  
   14001a3a6:	je     0x14001a374
   14001a3a8:	(bad)  
   14001a3a9:	ret    
   14001a3aa:	mov    eax,0xd9636e42
   14001a3af:	push   rdi
   14001a3b0:	int3   
   14001a3b1:	pop    rbx
   14001a3b2:	mov    ch,0x35
   14001a3b4:	jmp    0x1a16db7b7
   14001a3b9:	push   rcx
   14001a3ba:	(bad)  
   14001a3bb:	sbb    bl,bl
   14001a3bd:	mov    edx,0x4e9db595
   14001a3c2:	icebp  
   14001a3c3:	movabs eax,ds:0x7637f71dcf9e750
   14001a3cc:	sub    ebx,DWORD PTR [rdi+0x229dde2f]
   14001a3d2:	add    BYTE PTR [rax],al
   14001a3d4:	add    BYTE PTR [rax],al
   14001a3d6:	add    BYTE PTR [rax],dl
   14001a3d8:	mov    DWORD PTR [rbp+0x37563c5e],edi
   14001a3de:	ja     0x14001a3c3
   14001a3e0:	cmp    BYTE PTR [rbx-0x61b0c235],ah
   14001a3e6:	rol    BYTE PTR [rcx-0x5b0861d4],cl
   14001a3ec:	je     0x14001a3b5
   14001a3ee:	stc    
   14001a3ef:	ret    
   14001a3f0:	xchg   edi,eax
   14001a3f1:	out    0x1c,eax
   14001a3f3:	push   0x38
   14001a3f5:	in     al,0x5f
   14001a3f7:	lods   al,BYTE PTR ds:[rsi]
   14001a3f8:	pushf  
   14001a3f9:	mov    esi,ebx
   14001a3fb:	(bad)  
   14001a3fc:	cli    
   14001a3fd:	in     al,dx
   14001a3fe:	mov    ch,dl
   14001a400:	lods   al,BYTE PTR ds:[rsi]
   14001a401:	rcr    DWORD PTR [rdx+0x3e],0xce
   14001a405:	int3   
   14001a406:	scas   eax,DWORD PTR es:[rdi]
   14001a407:	test   DWORD PTR [rax+0x3f],esi
   14001a40a:	(bad)  
   14001a40b:	popf   
   14001a40c:	shr    DWORD PTR [rbp+0x2d],cl
   14001a40f:	call   0x1577ebc20
   14001a414:	outs   dx,DWORD PTR ds:[rsi]
   14001a415:	xchg   esp,eax
   14001a416:	imul   ebx,DWORD PTR [rsi-0x1f],0x48648e2c
   14001a41d:	cmp    DWORD PTR [rcx+0xfe01195],esp
   14001a423:	xor    al,0x58
   14001a425:	cmp    al,0x17
   14001a427:	mov    ah,0x94
   14001a429:	test   BYTE PTR [rax+0x27],0xbd
   14001a42d:	push   rdi
   14001a42e:	es jl  0x14001a45f
   14001a431:	fimul  DWORD PTR [rbx-0x7f6f5f8b]
   14001a437:	cmp    edx,DWORD PTR [rbx]
   14001a439:	mov    dh,0xdb
   14001a43b:	sub    eax,0x6dcf4890
   14001a440:	jle    0x14001a446
   14001a442:	in     al,0x24
   14001a444:	cdq    
   14001a445:	push   rax
	...
   14001a452:	add    BYTE PTR [rdx],al
   14001a454:	add    al,BYTE PTR [rax]
   14001a456:	add    BYTE PTR [rbx],al
   14001a458:	add    eax,0x9040000
   14001a45d:	add    BYTE PTR [rcx],al
   14001a45f:	add    al,0xd
   14001a461:	add    BYTE PTR [rcx],al
   14001a463:	add    eax,0x6010012
   14001a468:	sbb    BYTE PTR [rax],al
   14001a46a:	add    al,BYTE PTR [rsi]
   14001a46c:	(bad)  
   14001a46d:	add    BYTE PTR [rdx],al
   14001a46f:	(bad)  
   14001a470:	and    eax,0x2d080200
   14001a475:	add    BYTE PTR [rbx],al
   14001a477:	or     BYTE PTR [rip+0x3e090300],dh        # 0x17e0aa77d
   14001a47d:	add    BYTE PTR [rbx],al
   14001a47f:	or     cl,BYTE PTR [rax+0x0]
   14001a482:	add    al,0xa
   14001a484:	push   rdx
   14001a485:	add    BYTE PTR [rbx+rcx*1],al
   14001a488:	pop    rbp
   14001a489:	add    BYTE PTR [rsp+rcx*1],al
   14001a48c:	imul   eax,DWORD PTR [rax],0x750c05
   14001a492:	add    eax,0x500820d
   14001a497:	(bad)  
   14001a498:	nop
   14001a499:	add    BYTE PTR [rip+0x6009f0f],al        # 0x1460243ae
   14001a49f:	fxsave [rax]
   14001a4a2:	(bad)  
   14001a4a3:	adc    BYTE PTR [rsi-0x30eefa00],bh
   14001a4a9:	add    BYTE PTR [rdi],al
   14001a4ab:	adc    eax,esp
   14001a4ad:	add    BYTE PTR [rdi],al
   14001a4af:	adc    dh,dl
   14001a4b1:	add    BYTE PTR [rdi],al
   14001a4b3:	adc    eax,DWORD PTR [rip+0x18130801]        # 0x15814acba
   14001a4b9:	add    DWORD PTR [rax],ecx
   14001a4bb:	adc    eax,0x1608012d
   14001a4c0:	rex.XB add DWORD PTR [r9],ecx
   14001a4c3:	(bad)  
   14001a4c4:	pop    rcx
   14001a4c5:	add    DWORD PTR [rcx],ecx
   14001a4c7:	(bad)  
   14001a4c8:	jo     0x14001a4cb
   14001a4ca:	or     DWORD PTR [rax],ebx
   14001a4cc:	mov    BYTE PTR [rcx],al
   14001a4ce:	or     bl,BYTE PTR [rax]
   14001a4d0:	movabs al,ds:0xd31a0a01b9190a01
   14001a4d9:	add    DWORD PTR [rdx],ecx
   14001a4db:	sbb    ebp,esi
   14001a4dd:	add    DWORD PTR [rbx],ecx
   14001a4df:	sbb    ecx,DWORD PTR [rcx]
   14001a4e1:	add    cl,BYTE PTR [rbx]
   14001a4e3:	sbb    al,0x25
   14001a4e5:	add    cl,BYTE PTR [rbx]
   14001a4e7:	sbb    eax,0xa
   14001a4ec:	add    BYTE PTR fs:[rax],al
   14001a4ef:	add    al,ch
   14001a4f1:	add    eax,DWORD PTR [rax]
   14001a4f3:	add    BYTE PTR [rax],dl
   14001a4f5:	(bad)  
   14001a4f6:	add    BYTE PTR [rax],al
   14001a4f8:	movabs al,ds:0x80000f4240000186
   14001a501:	xchg   esi,eax
   14001a502:	cwde   
   14001a503:	add    BYTE PTR [rax],al
   14001a505:	loope  0x14001a4fc
   14001a507:	add    eax,0x3b9aca00
   14001a50c:	xor    BYTE PTR [rax],al
   14001a50e:	add    BYTE PTR [rax],al
   14001a510:	xor    DWORD PTR [rbx],esp
   14001a512:	rex.WB
   14001a513:	rex.WRX
   14001a514:	rex.RX add BYTE PTR [rax],r8b
   14001a517:	add    BYTE PTR [rcx],dh
   14001a519:	and    edx,DWORD PTR [rcx+0x4e]
   14001a51c:	rex.B
   14001a51d:	rex.WRX add BYTE PTR [rax],r8b
   14001a520:	xor    DWORD PTR [rbx],esp
   14001a522:	push   rbx
   14001a523:	rex.WRX
   14001a524:	rex.B
   14001a525:	rex.WRX add BYTE PTR [rax],r8b
   14001a528:	xor    DWORD PTR [rbx],esp
   14001a52a:	rex.WB
   14001a52b:	rex.WRX
   14001a52c:	add    BYTE PTR [rax],r8b
   14001a52f:	add    BYTE PTR [rax],al
   14001a531:	add    BYTE PTR [rax],al
   14001a533:	add    BYTE PTR [rax],al
   14001a535:	add    al,dh
   14001a537:	(bad)  
	...
   14001a544:	add    BYTE PTR [rax],al
   14001a546:	lock inc DWORD PTR [rax]
	...
   14001a555:	add    al,dh
   14001a557:	jg     0x14001a559
	...
   14001a565:	add    al,bh
   14001a567:	inc    DWORD PTR [rax]
	...
   14001a575:	add    BYTE PTR [rax],cl
	...
   14001a57f:	add    bh,bh
   14001a581:	add    eax,DWORD PTR [rax]
	...
   14001a58f:	add    BYTE PTR [rcx],al
	...
   14001a59d:	add    BYTE PTR [rax],al
   14001a59f:	add    bh,bh
   14001a5a1:	(bad)  
   14001a5a2:	(bad)  
   14001a5a3:	(bad)  
   14001a5a4:	(bad)  
   14001a5a5:	dec    DWORD PTR [rdi]
	...
   14001a5b3:	add    BYTE PTR [rax],al
   14001a5b5:	lock sldt WORD PTR [rax]
	...
   14001a5c5:	or     BYTE PTR [rax],al
	...
   14001a5cf:	add    BYTE PTR [rsi],cl
   14001a5d1:	in     eax,0x26
   14001a5d3:	adc    eax,0x3fdbcb7b
	...
   14001a5e4:	js     0x14001a5b1
   14001a5e6:	fstp   TBYTE PTR [rdi]
	...
   14001a5f0:	xor    eax,0x37287195
   14001a5f5:	test   eax,0x3ea8
	...
   14001a602:	add    BYTE PTR [rax+0x13],dl
   14001a605:	rex.R sar DWORD PTR [rdi],cl
	...
   14001a610:	and    eax,0x3fde623e
   14001a615:	out    dx,eax
   14001a616:	add    edi,DWORD PTR [rsi]
	...
   14001a624:	add    BYTE PTR [rax],al
   14001a626:	add    BYTE PTR [rax+0x0],al
	...
   14001a635:	add    al,dh
   14001a637:	(bad)  
	...
   14001a644:	add    BYTE PTR [rax],al
   14001a646:	loopne 0x14001a687
	...
   14001a650:	add    BYTE PTR [rcx],al
	...
   14001a666:	(bad)  
   14001a667:	(bad)  
	...
   14001a674:	add    BYTE PTR [rax],al
   14001a676:	loopne 0x14001a6b7
	...
   14001a680:	push   rbp
   14001a681:	push   rbp
   14001a682:	push   rbp
   14001a683:	push   rbp
   14001a684:	push   rbp
   14001a685:	push   rbp
   14001a686:	(bad)  
   14001a687:	(bad)  
	...
   14001a694:	add    BYTE PTR [rax],al
   14001a696:	sar    BYTE PTR [rdi],1
	...
   14001a6a0:	(bad)  
   14001a6a1:	cdq    
   14001a6a2:	cdq    
   14001a6a3:	cdq    
   14001a6a4:	cdq    
   14001a6a5:	cdq    
   14001a6a6:	leave  
   14001a6a7:	(bad)  
	...
   14001a6b0:	push   rbp
   14001a6b1:	push   rbp
   14001a6b2:	push   rbp
   14001a6b3:	push   rbp
   14001a6b4:	push   rbp
   14001a6b5:	push   rbp
   14001a6b6:	(bad)
	...
   14001a6c5:	clc    
   14001a6c6:	pop    rax
	...
   14001a6d0:	std    
   14001a6d1:	(bad)  
	...
   14001a6e6:	mov    al,0x3f
	...
   14001a6f4:	add    BYTE PTR [rax],al
   14001a6f6:	out    dx,al
   14001a6f7:	(bad)  
	...
   14001a704:	add    BYTE PTR [rax],al
   14001a706:	icebp  
   14001a707:	(bad)  
	...
   14001a714:	add    BYTE PTR [rax],al
   14001a716:	adc    BYTE PTR [rax],al
	...
   14001a720:	(bad)  
   14001a721:	(bad)  
   14001a722:	(bad)  
   14001a723:	(bad)  
   14001a724:	(bad)  
   14001a725:	(bad)  
   14001a726:	(bad)  
   14001a727:	jg     0x14001a729
   14001a729:	add    BYTE PTR [rax],al
   14001a72b:	add    BYTE PTR [rax],al
   14001a72d:	add    BYTE PTR [rax],al
   14001a72f:	add    dh,ah
   14001a731:	push   rsp
   14001a732:	push   rbp
   14001a733:	push   rbp
   14001a734:	push   rbp
   14001a735:	push   rbp
   14001a736:	mov    ch,0x3f
	...
   14001a740:	(bad)  
   14001a741:	(bad)  
   14001a742:	mov    edx,0x89999999
   14001a747:	(bad)  
	...
   14001a750:	lahf   
   14001a751:	push   rcx
   14001a752:	icebp  
   14001a753:	(bad)  
   14001a754:	and    ecx,DWORD PTR [rcx+0x62]
   14001a757:	(bad)  
	...
   14001a760:	lock call FWORD PTR [rbp-0x38]
   14001a764:	xor    al,0x80
   14001a766:	cmp    al,0x3f
	...
   14001a774:	(bad)  
   14001a775:	(bad)  
   14001a776:	(bad)  
   14001a777:	inc    DWORD PTR [rax]
   14001a779:	add    BYTE PTR [rax],al
   14001a77b:	add    BYTE PTR [rax],al
   14001a77d:	add    BYTE PTR [rax],al
   14001a77f:	add    BYTE PTR [rcx],al
   14001a781:	add    BYTE PTR [rax],al
   14001a783:	add    BYTE PTR [rdx],al
   14001a785:	add    BYTE PTR [rax],al
   14001a787:	add    BYTE PTR [rbx],al
   14001a789:	add    BYTE PTR [rax],al
   14001a78b:	add    BYTE PTR [rax],al
   14001a78d:	add    BYTE PTR [rax],al
   14001a78f:	add    BYTE PTR [rbx+0x0],al
   14001a792:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14001a796:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14001a79a:	push   rsp
   14001a79b:	add    BYTE PTR [rax+rax*1],ah
	...
   14001a7aa:	add    BYTE PTR [rax+0x3f5bbd9e],dl
   14001a7b0:	add    BYTE PTR [rax],al
   14001a7b2:	add    BYTE PTR [rax-0x2c],dh
   14001a7b5:	scas   eax,DWORD PTR es:[rdi]
   14001a7b6:	imul   edi,DWORD PTR [rdi],0x0
   14001a7b9:	add    BYTE PTR [rax],al
   14001a7bb:	(bad)  
   14001a7bc:	xchg   ebp,eax
   14001a7bd:	mov    ecx,0x3f74
   14001a7c2:	add    BYTE PTR [rax+0x3f7b9476],ah
   14001a7c8:	add    BYTE PTR [rax],al
   14001a7ca:	add    BYTE PTR [rax+0x3f81344d],ah
   14001a7d0:	add    BYTE PTR [rax],al
   14001a7d2:	add    BYTE PTR [rax+0x8],dl
   14001a7d5:	fwait
   14001a7d6:	test   BYTE PTR [rdi],bh
   14001a7d8:	add    BYTE PTR [rax],al
   14001a7da:	add    al,al
   14001a7dc:	jno    0x14001a7dc
   14001a7de:	xchg   DWORD PTR [rdi],edi
   14001a7e0:	add    BYTE PTR [rax],al
   14001a7e2:	add    BYTE PTR [rax+0x3f8b5e90],al
   14001a7e8:	add    BYTE PTR [rax],al
   14001a7ea:	add    al,dh
   14001a7ec:	push   0xffffffffffffffbb
   14001a7ee:	mov    ?,WORD PTR [rdi]
   14001a7f0:	add    BYTE PTR [rax],al
   14001a7f2:	add    BYTE PTR [rax+0x3f910a83],ah
   14001a7f8:	add    BYTE PTR [rax],al
   14001a7fa:	add    al,ah
   14001a7fc:	mov    ch,0xb5
   14001a7fe:	xchg   edx,eax
   14001a7ff:	(bad)  
   14001a800:	add    BYTE PTR [rax],al
   14001a802:	add    BYTE PTR [rax+0x4f],dl
   14001a805:	pop    rdi
   14001a806:	xchg   esp,eax
   14001a807:	(bad)  
   14001a808:	add    BYTE PTR [rax],al
   14001a80a:	add    BYTE PTR [rax],al
   14001a80c:	push   rbx
   14001a80d:	(bad)  
   14001a80e:	xchg   esi,eax
   14001a80f:	(bad)  
   14001a810:	add    BYTE PTR [rax],al
   14001a812:	add    al,dl
   14001a814:	ret    
   14001a815:	lods   eax,DWORD PTR ds:[rsi]
   14001a816:	xchg   edi,eax
   14001a817:	(bad)  
   14001a818:	add    BYTE PTR [rax],al
   14001a81a:	add    al,dh
   14001a81c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a81d:	push   rdx
   14001a81e:	cdq    
   14001a81f:	(bad)  
   14001a820:	add    BYTE PTR [rax],al
   14001a822:	add    BYTE PTR [rax],ah
   14001a824:	stc    
   14001a825:	cmc    
   14001a826:	(bad)  
   14001a827:	(bad)  
   14001a828:	add    BYTE PTR [rax],al
   14001a82a:	add    BYTE PTR [rax-0x3d],dh
   14001a82d:	xchg   edi,eax
   14001a82e:	pushf  
   14001a82f:	(bad)  
   14001a830:	add    BYTE PTR [rax],al
   14001a832:	add    BYTE PTR [rax+0x3f9e3806],ah
   14001a838:	add    BYTE PTR [rax],al
   14001a83a:	add    BYTE PTR [rax+0x3f9fd6c5],dh
   14001a840:	add    BYTE PTR [rax],al
   14001a842:	add    BYTE PTR [rax+0x3fa0ba01],ah
   14001a848:	add    BYTE PTR [rax],al
   14001a84a:	add    BYTE PTR [rax],ah
   14001a84c:	loope  0x14001a7d5
   14001a84e:	movabs eax,ds:0xa25502c00000003f
   14001a857:	(bad)  
   14001a858:	add    BYTE PTR [rax],al
   14001a85a:	add    al,al
   14001a85c:	and    DWORD PTR [ebx+0x3f],esp
   14001a863:	nop
   14001a864:	adc    ebp,ebp
   14001a866:	movabs ds:0xa4b801800000003f,eax
   14001a86f:	(bad)  
   14001a870:	add    BYTE PTR [rax],al
   14001a872:	add    al,ah
   14001a874:	cmp    BYTE PTR [rdx+0x3fa5],al
   14001a87a:	add    BYTE PTR [rax],dl
   14001a87c:	mov    ecx,0x3fa64b
   14001a881:	add    BYTE PTR [rax],al
   14001a883:	rex adc DWORD PTR [rdi+riz*4],0x3f
   14001a888:	add    BYTE PTR [rax],al
   14001a88a:	add    al,al
   14001a88c:	cwde   
   14001a88d:	fsub   QWORD PTR [rdi+0x3f]
   14001a893:	sar    dl,1
   14001a895:	movabs ds:0x6aaac00000003fa8,eax
   14001a89e:	test   eax,0x3f
   14001a8a3:	shr    BYTE PTR [rcx+0x3faa30],1
   14001a8a9:	add    BYTE PTR [rax],al
   14001a8ab:	and    cl,bh
   14001a8ad:	cmc    
   14001a8ae:	stos   BYTE PTR es:[rdi],al
   14001a8af:	(bad)  
   14001a8b0:	add    BYTE PTR [rax],al
   14001a8b2:	add    BYTE PTR [rax],al
   14001a8b4:	(bad)  
   14001a8b5:	mov    edx,0x3fab
   14001a8ba:	add    BYTE PTR [rax+0x3fac7e8d],dl
   14001a8c0:	add    BYTE PTR [rax],al
   14001a8c2:	add    BYTE PTR [rax],dl
   14001a8c4:	(bad)  
   14001a8c5:	rex.B lods eax,DWORD PTR ds:[rsi]
   14001a8c7:	(bad)  
   14001a8c8:	add    BYTE PTR [rax],al
   14001a8ca:	add    BYTE PTR [rax+0x3fae0471],ah
   14001a8d0:	add    BYTE PTR [rax],al
   14001a8d2:	add    BYTE PTR [rax+0x64],dh
   14001a8d5:	(bad)  
   14001a8d6:	scas   al,BYTE PTR es:[rdi]
   14001a8d7:	(bad)  
   14001a8d8:	add    BYTE PTR [rax],al
   14001a8da:	add    BYTE PTR [rax+0x3faf87ae],dh
   14001a8e0:	add    BYTE PTR [rax],al
   14001a8e2:	add    al,al
   14001a8e4:	sub    BYTE PTR [rax+rsi*4],ah
   14001a8e7:	(bad)  
   14001a8e8:	add    BYTE PTR [rax],al
   14001a8ea:	add    al,dh
   14001a8ec:	test   BYTE PTR es:[rax+0x3f],dh
   14001a8f3:	nop
   14001a8f4:	shl    bl,cl
   14001a8f6:	mov    al,0x3f
   14001a8f8:	add    BYTE PTR [rax],al
   14001a8fa:	add    BYTE PTR [rax],dh
   14001a8fc:	sub    al,0x43
   14001a8fe:	mov    cl,0x3f
   14001a900:	add    BYTE PTR [rax],al
   14001a902:	add    BYTE PTR [rax+0x34],al
   14001a905:	movabs ds:0xeb600000003fb1,al
   14001a90e:	mov    dl,0x3f
   14001a910:	add    BYTE PTR [rax],al
   14001a912:	add    BYTE PTR [rax],dl
   14001a914:	push   rdx
   14001a915:	pop    rdi
   14001a916:	mov    dl,0x3f
   14001a918:	add    BYTE PTR [rax],al
   14001a91a:	add    al,ah
   14001a91c:	push   0x3fb2bd
   14001a921:	add    BYTE PTR [rax],al
   14001a923:	push   rax
   14001a924:	xor    BYTE PTR [rbx],bl
   14001a926:	mov    bl,0x3f
   14001a928:	add    BYTE PTR [rax],al
   14001a92a:	add    al,ah
   14001a92c:	test   al,0x78
   14001a92e:	mov    bl,0x3f
   14001a930:	add    BYTE PTR [rax],al
   14001a932:	add    BYTE PTR [rax],dh
   14001a934:	rcl    ebp,cl
   14001a936:	mov    bl,0x3f
   14001a938:	add    BYTE PTR [rax],al
   14001a93a:	add    BYTE PTR [rax+0x3fb432af],ah
   14001a940:	add    BYTE PTR [rax],al
   14001a942:	add    al,dl
   14001a944:	ds (bad) 
   14001a946:	mov    ah,0x3f
   14001a948:	add    BYTE PTR [rax],al
   14001a94a:	add    BYTE PTR [rax],ah
   14001a94c:	sub    ebx,0x3fb4
   14001a952:	add    BYTE PTR [rax],dh
   14001a954:	ja     0x14001a99d
   14001a956:	mov    ch,0x3f
   14001a958:	add    BYTE PTR [rax],al
   14001a95a:	add    BYTE PTR [rax+0x21],ah
   14001a95d:	movabs ds:0xfe80400000003fb5,eax
   14001a966:	mov    ch,0x3f
   14001a968:	add    BYTE PTR [rax],al
   14001a96a:	add    BYTE PTR [rax-0x6c],al
   14001a96d:	pop    rcx
   14001a96e:	mov    dh,0x3f
   14001a970:	add    BYTE PTR [rax],al
   14001a972:	add    al,dh
   14001a974:	pop    rbp
   14001a975:	mov    ah,0xb6
   14001a977:	(bad)  
   14001a978:	add    BYTE PTR [rax],al
   14001a97a:	add    BYTE PTR [rax+0x3fb70edd],dh
   14001a980:	add    BYTE PTR [rax],al
   14001a982:	add    BYTE PTR [rax],al
   14001a984:	adc    al,0x69
   14001a986:	mov    bh,0x3f
   14001a988:	add    BYTE PTR [rax],al
   14001a98a:	add    BYTE PTR [rax+0x1],ah
   14001a98d:	ret    
   14001a98e:	mov    bh,0x3f
   14001a990:	add    BYTE PTR [rax],al
   14001a992:	add    BYTE PTR [rax],dh
   14001a994:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a995:	sbb    al,0xb8
   14001a997:	(bad)  
   14001a998:	add    BYTE PTR [rax],al
   14001a99a:	add    BYTE PTR [rax],al
   14001a99c:	add    esi,DWORD PTR [rsi-0x48]
   14001a99f:	(bad)  
   14001a9a0:	add    BYTE PTR [rax],al
   14001a9a2:	add    BYTE PTR [rax],dh
   14001a9a4:	sbb    bh,cl
   14001a9a6:	mov    eax,0x3f
   14001a9ab:	out    0x27,al
   14001a9ae:	mov    ecx,0x3f
   14001a9b3:	nop
   14001a9b4:	ins    DWORD PTR es:[rdi],dx
   14001a9b5:	cmp    BYTE PTR [rcx+0x3f],0xa0
   14001a9bc:	scas   al,BYTE PTR es:[rdi]
   14001a9bd:	fdivr  DWORD PTR [rcx+0x3f]
   14001a9c3:	shr    BYTE PTR [rcx+0x3fba30],1
   14001a9c9:	add    BYTE PTR [rax],al
   14001a9cb:	movabs al,ds:0x700000003fba885f
   14001a9d4:	rcr    bh,1
   14001a9d6:	mov    edx,0x3f
   14001a9db:	mov    al,0xfc
   14001a9dd:	ss mov ebx,0x3f
   14001a9e3:	shl    ah,1
   14001a9e5:	lea    edi,[rbx+0x3f]
   14001a9eb:	xor    BYTE PTR [rcx+0x3fbbe4],cl
   14001a9f1:	add    BYTE PTR [rax],al
   14001a9f3:	rex (bad) 
   14001a9f5:	cmp    bh,BYTE PTR [rdi+rdi*1+0x70000000]
   14001a9fc:	or     BYTE PTR [rcx+0x3fbc],dl
   14001aa02:	add    BYTE PTR [rax],dl
   14001aa04:	in     al,0xe6
   14001aa06:	mov    esp,0x3f
   14001aa0b:	movabs al,ds:0x800000003fbd3c7d
   14001aa14:	(bad)  
   14001aa15:	xchg   ecx,eax
   14001aa16:	mov    ebp,0x3f
   14001aa1b:	add    ah,ch
   14001aa1d:	out    0xbd,al
   14001aa1f:	(bad)  
   14001aa20:	add    BYTE PTR [rax],al
   14001aa22:	add    BYTE PTR [rax+0x3fbe3bc1],ah
   14001aa28:	add    BYTE PTR [rax],al
   14001aa2a:	add    BYTE PTR [rax+0x3fbe9056],dh
   14001aa30:	add    BYTE PTR [rax],al
   14001aa32:	add    BYTE PTR [rax+0x3fbee4ab],ah
   14001aa38:	add    BYTE PTR [rax],al
   14001aa3a:	add    al,al
   14001aa3c:	sar    BYTE PTR [rax],0xbf
   14001aa3f:	(bad)  
   14001aa40:	add    BYTE PTR [rax],al
   14001aa42:	add    BYTE PTR [rax+0x3fbf8c96],al
   14001aa48:	add    BYTE PTR [rax],al
   14001aa4a:	add    BYTE PTR [rax],dh
   14001aa4c:	sub    eax,0x3fbfe0
   14001aa51:	add    BYTE PTR [rax],al
   14001aa53:	movabs al,ds:0x700000003fc019c2
   14001aa5c:	rex.WRXB
   14001aa5d:	rex.XB sar BYTE PTR [r15],0x0
   14001aa61:	add    BYTE PTR [rax],al
   14001aa63:	(bad)  
   14001aa64:	mov    ebp,0x3fc06c
   14001aa69:	add    BYTE PTR [rax],al
   14001aa6b:	or     BYTE PTR [rsi+rdx*4],0xc0
   14001aa6f:	(bad)  
   14001aa70:	add    BYTE PTR [rax],al
   14001aa72:	add    BYTE PTR [rax],al
   14001aa74:	cmp    eax,0x3fc0bf
   14001aa79:	add    BYTE PTR [rax],al
   14001aa7b:	adc    BYTE PTR [rdi-0x18],cl
   14001aa7e:	sar    BYTE PTR [rdi],0x0
   14001aa81:	add    BYTE PTR [rax],al
   14001aa83:	lock rex.X adc ecx,eax
   14001aa87:	(bad)  
   14001aa88:	add    BYTE PTR [rax],al
   14001aa8a:	add    BYTE PTR [rax+0x3fc13a18],ah
   14001aa90:	add    BYTE PTR [rax],al
   14001aa92:	add    BYTE PTR [rax+0x3fc162d0],al
   14001aa98:	add    BYTE PTR [rax],al
   14001aa9a:	add    BYTE PTR [rax+0x3fc18b6a],dl
   14001aaa0:	add    BYTE PTR [rax],al
   14001aaa2:	add    BYTE PTR [rax],dl
   14001aaa4:	out    0xb3,eax
   14001aaa6:	sar    DWORD PTR [rdi],0x0
   14001aaa9:	add    BYTE PTR [rax],al
   14001aaab:	xor    BYTE PTR [rsi-0x24],al
   14001aaae:	sar    DWORD PTR [rdi],0x0
   14001aab1:	add    BYTE PTR [rax],al
   14001aab3:	adc    BYTE PTR [rax+0x3fc204],cl
   14001aab9:	add    BYTE PTR [rax],al
   14001aabb:	loopne 0x14001aa69
   14001aabd:	sub    al,0xc2
   14001aabf:	(bad)  
   14001aac0:	add    BYTE PTR [rax],al
   14001aac2:	add    al,dl
   14001aac4:	mov    ah,0x54
   14001aac6:	ret    0x3f
   14001aac9:	add    BYTE PTR [rax],al
   14001aacb:	lock lahf 
   14001aacd:	jl     0x14001aa91
   14001aacf:	(bad)  
   14001aad0:	add    BYTE PTR [rax],al
   14001aad2:	add    BYTE PTR [rax+0x3fc2a46e],al
   14001aad8:	add    BYTE PTR [rax],al
   14001aada:	add    BYTE PTR [rax+0x3fc2cc20],dh
   14001aae0:	add    BYTE PTR [rax],al
   14001aae2:	add    BYTE PTR [rax+0x3fc2f3b6],dl
   14001aae8:	add    BYTE PTR [rax],al
   14001aaea:	add    BYTE PTR [rax+0x30],dl
   14001aaed:	sbb    eax,ebx
   14001aaef:	(bad)  
   14001aaf0:	add    BYTE PTR [rax],al
   14001aaf2:	add    BYTE PTR [rax],ah
   14001aaf4:	mov    es,WORD PTR [rdx-0x3d]
   14001aaf7:	(bad)  
   14001aaf8:	add    BYTE PTR [rax],al
   14001aafa:	add    BYTE PTR [rax],ah
   14001aafc:	shr    BYTE PTR [rcx-0x3d],1
   14001aaff:	(bad)  
   14001ab00:	add    BYTE PTR [rax],al
   14001ab02:	add    BYTE PTR [rax+0x3fc390f6],al
   14001ab08:	add    BYTE PTR [rax],al
   14001ab0a:	add    BYTE PTR [rax+0x1],ah
   14001ab0d:	mov    eax,0x3fc3
   14001ab12:	add    al,ah
   14001ab14:	lock faddp st(3),st
   14001ab17:	(bad)  
   14001ab18:	add    BYTE PTR [rax],al
   14001ab1a:	add    BYTE PTR [rax],dh
   14001ab1c:	(bad)
   14001ab1f:	(bad)  
   14001ab20:	add    BYTE PTR [rax],al
   14001ab22:	add    BYTE PTR [rax+0x7e],dh
   14001ab25:	sub    al,0xc4
   14001ab27:	(bad)  
   14001ab28:	add    BYTE PTR [rax],al
   14001ab2a:	add    al,dl
   14001ab2c:	sbb    al,0x53
   14001ab2e:	(bad)  
   14001ab2f:	(bad)  
   14001ab30:	add    BYTE PTR [rax],al
   14001ab32:	add    BYTE PTR [rax-0x60],dh
   14001ab35:	jns    0x14001aafb
   14001ab37:	(bad)  
   14001ab38:	add    BYTE PTR [rax],al
   14001ab3a:	add    BYTE PTR [rax+0x9],dh
   14001ab3d:	movabs al,ds:0xc658000000003fc4
   14001ab46:	(bad)  
   14001ab47:	(bad)  
   14001ab48:	add    BYTE PTR [rax],al
   14001ab4a:	add    BYTE PTR [rax],dh
   14001ab4c:	mov    esp,gs
   14001ab4e:	(bad)  
   14001ab4f:	(bad)  
   14001ab50:	add    BYTE PTR [rax],al
   14001ab52:	add    BYTE PTR [rax-0x5a],al
   14001ab55:	adc    al,ch
   14001ab57:	(bad)  
   14001ab58:	add    BYTE PTR [rax],al
   14001ab5a:	add    BYTE PTR [rax],dh
   14001ab5c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ab5d:	cmp    ch,al
   14001ab5f:	(bad)  
   14001ab60:	add    BYTE PTR [rax],al
   14001ab62:	add    BYTE PTR [rax-0x74],dl
   14001ab65:	pop    rsi
   14001ab66:	(bad)
   14001ab69:	add    BYTE PTR [rax],al
   14001ab6b:	nop
   14001ab6c:	pop    rax
   14001ab6d:	test   ch,al
   14001ab6f:	(bad)  
   14001ab70:	add    BYTE PTR [rax],al
   14001ab72:	add    BYTE PTR [rax+0xb],al
   14001ab75:	stos   BYTE PTR es:[rdi],al
   14001ab76:	(bad)
   14001ab79:	add    BYTE PTR [rax],al
   14001ab7b:	jo     0x14001ab21
   14001ab7d:	iret   
   14001ab7e:	(bad)
   14001ab81:	add    BYTE PTR [rax],al
   14001ab83:	and    al,0xf5
   14001ab86:	(bad)
   14001ab89:	add    BYTE PTR [rax],al
   14001ab8b:	ror    BYTE PTR [rdx+0x3fc61a],1
   14001ab91:	add    BYTE PTR [rax],al
   14001ab93:	push   rax
   14001ab94:	fdivr  DWORD PTR [rdi]
   14001ab96:	(bad)  
   14001ab97:	(bad)  
   14001ab98:	add    BYTE PTR [rax],al
   14001ab9a:	add    al,dl
   14001ab9c:	or     al,0x65
   14001ab9e:	(bad)  
   14001ab9f:	(bad)  
   14001aba0:	add    BYTE PTR [rax],al
   14001aba2:	add    BYTE PTR [rax+0x3fc68a28],al
   14001aba8:	add    BYTE PTR [rax],al
   14001abaa:	add    BYTE PTR [rax+0x3fc6af2b],al
   14001abb0:	add    BYTE PTR [rax],al
   14001abb2:	add    al,ah
   14001abb4:	adc    eax,0x3fc6d4
   14001abb9:	add    BYTE PTR [rax],al
   14001abbb:	shl    bh,1
   14001abbd:	clc    
   14001abbe:	(bad)  
   14001abbf:	(bad)  
   14001abc0:	add    BYTE PTR [rax],al
   14001abc2:	add    BYTE PTR [rax-0x5f],dh
   14001abc5:	sbb    eax,0x3fc7
   14001abca:	add    al,ah
   14001abcc:	rex.X
   14001abcd:	rex.X (bad) 
   14001abcf:	(bad)  
   14001abd0:	add    BYTE PTR [rax],al
   14001abd2:	add    BYTE PTR [rax-0x34],al
   14001abd5:	data16 (bad) 
   14001abd7:	(bad)  
   14001abd8:	add    BYTE PTR [rax],al
   14001abda:	add    BYTE PTR [rax+0x3fc78b3d],ah
   14001abe0:	add    BYTE PTR [rax],al
   14001abe2:	add    BYTE PTR [rax],dh
   14001abe4:	xchg   edi,eax
   14001abe5:	scas   eax,DWORD PTR es:[rdi]
   14001abe6:	(bad)  
   14001abe7:	(bad)  
   14001abe8:	add    BYTE PTR [rax],al
   14001abea:	add    BYTE PTR [rax],dl
   14001abec:	(bad)  
   14001abee:	(bad)  
   14001abef:	(bad)  
   14001abf0:	add    BYTE PTR [rax],al
   14001abf2:	add    BYTE PTR [rax+0x3],dl
   14001abf5:	clc    
   14001abf6:	(bad)  
   14001abf7:	(bad)  
   14001abf8:	add    BYTE PTR [rax],al
   14001abfa:	add    BYTE PTR [rax],ah
   14001abfc:	(bad)  
   14001abfd:	sbb    al,0xc8
   14001abff:	(bad)  
   14001ac00:	add    BYTE PTR [rax],al
   14001ac02:	add    BYTE PTR [rax+0x3fc84011],dl
   14001ac08:	add    BYTE PTR [rax],al
   14001ac0a:	add    al,al
   14001ac0c:	cmc    
   14001ac0d:	movsxd ecx,eax
   14001ac0f:	(bad)  
   14001ac10:	add    BYTE PTR [rax],al
   14001ac12:	add    al,ah
   14001ac14:	ret    0xc887
   14001ac17:	(bad)  
   14001ac18:	add    BYTE PTR [rax],al
   14001ac1a:	add    BYTE PTR [rax],al
   14001ac1c:	jns    0x14001abc9
   14001ac1e:	enter  0x3f,0x0
   14001ac22:	add    BYTE PTR [rax],dh
   14001ac24:	sbb    bh,cl
   14001ac26:	enter  0x3f,0x0
   14001ac2a:	add    BYTE PTR [rax+0x3fc8f2a0],ah
   14001ac30:	add    BYTE PTR [rax],al
   14001ac32:	add    BYTE PTR [rax+0x12],dh
   14001ac35:	(bad)  
   14001ac36:	leave  
   14001ac37:	(bad)  
   14001ac38:	add    BYTE PTR [rax],al
   14001ac3a:	add    BYTE PTR [rax+0x3fc9396d],dh
   14001ac40:	add    BYTE PTR [rax],al
   14001ac42:	add    BYTE PTR [rax+0x3fc95cb2],al
   14001ac48:	add    BYTE PTR [rax],al
   14001ac4a:	add    BYTE PTR [rax],al
   14001ac4c:	loope  0x14001accd
   14001ac4e:	leave  
   14001ac4f:	(bad)  
   14001ac50:	add    BYTE PTR [rax],al
   14001ac52:	add    BYTE PTR [rax-0x7],dl
   14001ac55:	movabs ds:0xc5fb700000003fc9,al
   14001ac5e:	leave  
   14001ac5f:	(bad)  
   14001ac60:	add    BYTE PTR [rax],al
   14001ac62:	add    BYTE PTR [rax+0x3fc9e8e7],dh
   14001ac68:	add    BYTE PTR [rax],al
   14001ac6a:	add    al,dh
   14001ac6c:	mov    ebp,0x3fca0b
   14001ac71:	add    BYTE PTR [rax],al
   14001ac73:	cmp    BYTE PTR [rsi+0x2e],0xca
   14001ac77:	(bad)  
   14001ac78:	add    BYTE PTR [rax],al
   14001ac7a:	add    BYTE PTR [rax+0x29],ah
   14001ac7d:	push   rcx
   14001ac7e:	retf   0x3f
   14001ac81:	add    BYTE PTR [rax],al
   14001ac83:	movabs al,ds:0x700000003fca73be
   14001ac8c:	ds xchg esi,eax
   14001ac8e:	retf   0x3f
   14001ac91:	add    BYTE PTR [rax],al
   14001ac93:	lock test al,0xb8
   14001ac96:	retf   0x3f
   14001ac99:	add    BYTE PTR [rax],al
   14001ac9b:	and    dh,bh
   14001ac9d:	fcmove st,st(2)
   14001ac9f:	(bad)  
   14001aca0:	add    BYTE PTR [rax],al
   14001aca2:	add    BYTE PTR [rax],dh
   14001aca4:	ds std 
   14001aca6:	retf   0x3f
   14001aca9:	add    BYTE PTR [rax],al
   14001acab:	xor    BYTE PTR [rcx+0x1f],ch
   14001acae:	retf   
   14001acaf:	(bad)  
   14001acb0:	add    BYTE PTR [rax],al
   14001acb2:	add    BYTE PTR [rax+0x7f],al
   14001acb5:	rex.B retf 
   14001acb7:	(bad)  
   14001acb8:	add    BYTE PTR [rax],al
   14001acba:	add    BYTE PTR [rax-0x80],dh
   14001acbd:	movsxd ecx,ebx
   14001acbf:	(bad)  
   14001acc0:	add    BYTE PTR [rax],al
   14001acc2:	add    al,dh
   14001acc4:	ins    BYTE PTR es:[rdi],dx
   14001acc5:	test   ebx,ecx
   14001acc7:	(bad)  
   14001acc8:	add    BYTE PTR [rax],al
   14001acca:	add    BYTE PTR [rax+0x3fcba744],dh
   14001acd0:	add    BYTE PTR [rax],al
   14001acd2:	add    al,dh
   14001acd4:	(bad)  
   14001acd5:	leave  
   14001acd6:	retf   
   14001acd7:	(bad)  
   14001acd8:	add    BYTE PTR [rax],al
   14001acda:	add    al,al
   14001acdc:	mov    dh,0xea
   14001acde:	retf   
   14001acdf:	(bad)  
   14001ace0:	add    BYTE PTR [rax],al
   14001ace2:	add    BYTE PTR [rax],dh
   14001ace4:	push   rcx
   14001ace5:	or     al,0xcc
   14001ace7:	(bad)  
   14001ace8:	add    BYTE PTR [rax],al
   14001acea:	add    BYTE PTR [rax-0x29],dl
   14001aced:	sub    eax,0x3fcc
   14001acf2:	add    BYTE PTR [rax+0x49],dl
   14001acf5:	rex.WRXB int3 
   14001acf7:	(bad)  
   14001acf8:	add    BYTE PTR [rax],al
   14001acfa:	add    BYTE PTR [rax-0x59],al
   14001acfd:	jo     0x14001accb
   14001acff:	(bad)  
   14001ad00:	add    BYTE PTR [rax],al
   14001ad02:	add    BYTE PTR [rax],dh
   14001ad04:	icebp  
   14001ad05:	xchg   ecx,eax
   14001ad06:	int3   
   14001ad07:	(bad)  
   14001ad08:	add    BYTE PTR [rax],al
   14001ad0a:	add    BYTE PTR [rax+0x27],al
   14001ad0d:	mov    bl,0xcc
   14001ad0f:	(bad)  
   14001ad10:	add    BYTE PTR [rax],al
   14001ad12:	add    BYTE PTR [rax+0x3fccd449],al
   14001ad18:	add    BYTE PTR [rax],al
   14001ad1a:	add    BYTE PTR [rax],dl
   14001ad1c:	pop    rax
   14001ad1d:	cmc    
   14001ad1e:	int3   
   14001ad1f:	(bad)  
   14001ad20:	add    BYTE PTR [rax],al
   14001ad22:	add    BYTE PTR [rax],al
   14001ad24:	push   rbx
   14001ad25:	(bad)  
   14001ad26:	int    0x3f
   14001ad28:	add    BYTE PTR [rax],al
   14001ad2a:	add    BYTE PTR [rax+0x3a],ah
   14001ad2d:	(bad)  
   14001ad2e:	int    0x3f
   14001ad30:	add    BYTE PTR [rax],al
   14001ad32:	add    BYTE PTR [rax+0xe],ah
   14001ad35:	pop    rax
   14001ad36:	int    0x3f
   14001ad38:	add    BYTE PTR [rax],al
   14001ad3a:	add    BYTE PTR [rax],al
   14001ad3c:	iret   
   14001ad3d:	js     0x14001ad0c
   14001ad3f:	(bad)  
   14001ad40:	add    BYTE PTR [rax],al
   14001ad42:	add    BYTE PTR [rax+0x7c],dh
   14001ad45:	cdq    
   14001ad46:	int    0x3f
   14001ad48:	add    BYTE PTR [rax],al
   14001ad4a:	add    BYTE PTR [rax+0x3fcdba16],ah
   14001ad50:	add    BYTE PTR [rax],al
   14001ad52:	add    al,dl
   14001ad54:	popf   
   14001ad55:	fcmove st,st(5)
   14001ad57:	(bad)  
   14001ad58:	add    BYTE PTR [rax],al
   14001ad5a:	add    al,dh
   14001ad5c:	adc    ebx,edi
   14001ad5e:	int    0x3f
   14001ad60:	add    BYTE PTR [rax],al
   14001ad62:	add    BYTE PTR [rax],dh
   14001ad64:	jae    0x14001ad81
   14001ad66:	(bad)  
   14001ad67:	(bad)  
   14001ad68:	add    BYTE PTR [rax],al
   14001ad6a:	add    BYTE PTR [rax+0x3fce3bc1],ah
   14001ad70:	add    BYTE PTR [rax],al
   14001ad72:	add    BYTE PTR [rax-0x3],dl
   14001ad75:	pop    rbx
   14001ad76:	(bad)  
   14001ad77:	(bad)  
   14001ad78:	add    BYTE PTR [rax],al
   14001ad7a:	add    BYTE PTR [rax+0x26],ah
   14001ad7d:	jl     0x14001ad4d
   14001ad7f:	(bad)  
   14001ad80:	add    BYTE PTR [rax],al
   14001ad82:	add    al,ah
   14001ad84:	cmp    al,0x9c
   14001ad86:	(bad)  
   14001ad87:	(bad)  
   14001ad88:	add    BYTE PTR [rax],al
   14001ad8a:	add    al,ah
   14001ad8c:	rex mov esp,0x3fce
   14001ad92:	add    BYTE PTR [rax+0x3fcedc32],al
   14001ad98:	add    BYTE PTR [rax],al
   14001ad9a:	add    al,dl
   14001ad9c:	adc    esp,edi
   14001ad9e:	(bad)  
   14001ad9f:	(bad)  
   14001ada0:	add    BYTE PTR [rax],al
   14001ada2:	add    al,ah
   14001ada4:	ficomp WORD PTR [rbx]
   14001ada6:	iret   
   14001ada7:	(bad)  
   14001ada8:	add    BYTE PTR [rax],al
   14001adaa:	add    al,dl
   14001adac:	cdq    
   14001adad:	cmp    ecx,edi
   14001adaf:	(bad)  
   14001adb0:	add    BYTE PTR [rax],al
   14001adb2:	add    BYTE PTR [rax+0x3fcf5b42],ah
   14001adb8:	add    BYTE PTR [rax],al
   14001adba:	add    BYTE PTR [rax+0x3fcf7ad9],al
   14001adc0:	add    BYTE PTR [rax],al
   14001adc2:	add    BYTE PTR [rax+0x5e],dh
   14001adc5:	(bad)  
   14001adc6:	iret   
   14001adc7:	(bad)  
   14001adc8:	add    BYTE PTR [rax],al
   14001adca:	add    BYTE PTR [rax+0x3fcfb9d1],dl
   14001add0:	add    BYTE PTR [rax],al
   14001add2:	add    al,dh
   14001add4:	xor    bl,cl
   14001add6:	iret   
   14001add7:	(bad)  
   14001add8:	add    BYTE PTR [rax],al
   14001adda:	add    BYTE PTR [rax+0x3fcff882],ah
   14001ade0:	add    BYTE PTR [rax],al
   14001ade2:	add    BYTE PTR [rax-0x20],dl
   14001ade5:	or     edx,eax
   14001ade7:	(bad)  
   14001ade8:	add    BYTE PTR [rax],al
   14001adea:	add    BYTE PTR [rax+0x3fd01b76],ah
   14001adf0:	add    BYTE PTR [rax],al
   14001adf2:	add    BYTE PTR [rax],dh
   14001adf4:	add    al,0x2b
   14001adf6:	sar    BYTE PTR [rdi],1
   14001adf8:	add    BYTE PTR [rax],al
   14001adfa:	add    BYTE PTR [rax],dl
   14001adfc:	mov    DWORD PTR [rdx],edi
   14001adfe:	sar    BYTE PTR [rdi],1
   14001ae00:	add    BYTE PTR [rax],al
   14001ae02:	add    BYTE PTR [rax+0x5],al
   14001ae05:	rex.WX sar BYTE PTR [rdi],1
   14001ae08:	add    BYTE PTR [rax],al
   14001ae0a:	add    al,ah
   14001ae0c:	js     0x14001ae67
   14001ae0e:	sar    BYTE PTR [rdi],1
   14001ae10:	add    BYTE PTR [rax],al
   14001ae12:	add    al,dh
   14001ae14:	jrcxz  0x14001ae7e
   14001ae16:	sar    BYTE PTR [rdi],1
   14001ae18:	add    BYTE PTR [rax],al
   14001ae1a:	add    BYTE PTR [rax+0x46],dh
   14001ae1d:	js     0x14001adef
   14001ae1f:	(bad)  
   14001ae20:	add    BYTE PTR [rax],al
   14001ae22:	add    BYTE PTR [rax+0x3fd087a0],al
   14001ae28:	add    BYTE PTR [rax],al
   14001ae2a:	add    BYTE PTR [rax],dl
   14001ae2c:	repnz xchg esi,eax
   14001ae2e:	sar    BYTE PTR [rdi],1
   14001ae30:	add    BYTE PTR [rax],al
   14001ae32:	add    BYTE PTR [rax],dh
   14001ae34:	cmp    esp,DWORD PTR [rsi+0x3fd0]
   14001ae3a:	add    al,dh
   14001ae3c:	jnp    0x14001adf3
   14001ae3e:	sar    BYTE PTR [rdi],1
   14001ae40:	add    BYTE PTR [rax],al
   14001ae42:	add    BYTE PTR [rax-0x4c],dl
   14001ae45:	(bad)  
   14001ae46:	sar    BYTE PTR [rdi],1
   14001ae48:	add    BYTE PTR [rax],al
   14001ae4a:	add    BYTE PTR [rax-0x1c],ah
   14001ae4d:	rcl    eax,cl
   14001ae4f:	(bad)  
   14001ae50:	add    BYTE PTR [rax],al
   14001ae52:	add    BYTE PTR [rax],dh
   14001ae54:	or     al,0xe3
   14001ae56:	sar    BYTE PTR [rdi],1
   14001ae58:	add    BYTE PTR [rax],al
   14001ae5a:	add    al,al
   14001ae5c:	sub    esi,edx
   14001ae5e:	sar    BYTE PTR [rdi],1
   14001ae60:	add    BYTE PTR [rax],al
   14001ae62:	add    BYTE PTR [rax],dl
   14001ae64:	rex.XB add r9d,edx
   14001ae67:	(bad)  
   14001ae68:	add    BYTE PTR [rax],al
   14001ae6a:	add    BYTE PTR [rax+0x52],al
   14001ae6d:	adc    cl,dl
   14001ae6f:	(bad)  
   14001ae70:	add    BYTE PTR [rax],al
   14001ae72:	add    BYTE PTR [rax+0x59],al
   14001ae75:	(bad)  
   14001ae76:	sar    DWORD PTR [rdi],1
   14001ae78:	add    BYTE PTR [rax],al
   14001ae7a:	add    BYTE PTR [rax],dh
   14001ae7c:	pop    rax
   14001ae7d:	sar    DWORD PTR cs:[rdi],1
   14001ae80:	add    BYTE PTR [rax],al
   14001ae82:	add    BYTE PTR [rax],al
   14001ae84:	rex.WRXB cmp rax,0x3fd1
   14001ae8a:	add    al,dl
   14001ae8c:	cmp    eax,0x3fd14c
   14001ae91:	add    BYTE PTR [rax],al
   14001ae93:	movabs al,ds:0x700000003fd15b24
   14001ae9c:	add    ebp,DWORD PTR [rdx-0x2f]
   14001ae9f:	(bad)  
   14001aea0:	add    BYTE PTR [rax],al
   14001aea2:	add    BYTE PTR [rax-0x26],dl
   14001aea5:	js     0x14001ae78
   14001aea7:	(bad)  
   14001aea8:	add    BYTE PTR [rax],al
   14001aeaa:	add    BYTE PTR [rax-0x57],al
   14001aead:	xchg   ecx,edx
   14001aeaf:	(bad)  
   14001aeb0:	add    BYTE PTR [rax],al
   14001aeb2:	add    BYTE PTR [rax+0x70],ah
   14001aeb5:	xchg   esi,eax
   14001aeb6:	sar    DWORD PTR [rdi],1
   14001aeb8:	add    BYTE PTR [rax],al
   14001aeba:	add    BYTE PTR [rax+0x3fd1a52f],ah
   14001aec0:	add    BYTE PTR [rax],al
   14001aec2:	add    BYTE PTR [rax],dl
   14001aec4:	out    0xb3,eax
   14001aec6:	sar    DWORD PTR [rdi],1
   14001aec8:	add    BYTE PTR [rax],al
   14001aeca:	add    al,al
   14001aecc:	xchg   esi,eax
   14001aecd:	ret    0x3fd1
   14001aed0:	add    BYTE PTR [rax],al
   14001aed2:	add    BYTE PTR [rax+0x3fd1d13e],dh
   14001aed8:	add    BYTE PTR [rax],al
   14001aeda:	add    al,dh
   14001aedc:	(bad)  
   14001aede:	sar    DWORD PTR [rdi],1
   14001aee0:	add    BYTE PTR [rax],al
   14001aee2:	add    BYTE PTR [rax+0x77],dh
   14001aee5:	out    dx,al
   14001aee6:	sar    DWORD PTR [rdi],1
   14001aee8:	add    BYTE PTR [rax],al
   14001aeea:	add    BYTE PTR [rax+0x8],ah
   14001aeed:	std    
   14001aeee:	sar    DWORD PTR [rdi],1
   14001aef0:	add    BYTE PTR [rax],al
   14001aef2:	add    BYTE PTR [rax+0x3fd20b91],ah
   14001aef8:	add    BYTE PTR [rax],al
   14001aefa:	add    BYTE PTR [rax+0x13],dl
   14001aefd:	sbb    dl,dl
   14001aeff:	(bad)  
   14001af00:	add    BYTE PTR [rax],al
   14001af02:	add    BYTE PTR [rax-0x73],dh
   14001af05:	sub    dl,dl
   14001af07:	(bad)  
   14001af08:	add    BYTE PTR [rax],al
   14001af0a:	add    BYTE PTR [rax],dl
   14001af0c:	add    BYTE PTR [rdi],dh
   14001af0e:	sar    BYTE PTR [rdi],cl
   14001af10:	add    BYTE PTR [rax],al
   14001af12:	add    BYTE PTR [rax],dh
   14001af14:	imul   eax,DWORD PTR [rbp-0x2e],0x3f
   14001af18:	add    BYTE PTR [rax],al
   14001af1a:	add    al,dl
   14001af1c:	(bad)  
   14001af1d:	push   rbx
   14001af1e:	sar    BYTE PTR [rdi],cl
   14001af20:	add    BYTE PTR [rax],al
   14001af22:	add    BYTE PTR [rax],al
   14001af24:	sub    esp,DWORD PTR [rdx-0x2e]
   14001af27:	(bad)  
   14001af28:	add    BYTE PTR [rax],al
   14001af2a:	add    al,dl
   14001af2c:	jg     0x14001af9e
   14001af2e:	sar    BYTE PTR [rdi],cl
   14001af30:	add    BYTE PTR [rax],al
   14001af32:	add    BYTE PTR [rax-0x33],al
   14001af35:	jle    0x14001af09
   14001af37:	(bad)  
   14001af38:	add    BYTE PTR [rax],al
   14001af3a:	add    BYTE PTR [rax+0x13],ah
   14001af3d:	(bad)  
   14001af3e:	sar    BYTE PTR [rdi],cl
   14001af40:	add    BYTE PTR [rax],al
   14001af42:	add    BYTE PTR [rax],ah
   14001af44:	push   rdx
   14001af45:	fwait
   14001af46:	sar    BYTE PTR [rdi],cl
   14001af48:	add    BYTE PTR [rax],al
   14001af4a:	add    BYTE PTR [rax+0x3fd2a989],ah
   14001af50:	add    BYTE PTR [rax],al
   14001af52:	add    al,ah
   14001af54:	mov    ecx,0x3fd2b7
   14001af59:	add    BYTE PTR [rax],al
   14001af5b:	loopne 0x14001af3f
   14001af5d:	(bad)
   14001af60:	add    BYTE PTR [rax],al
   14001af62:	add    BYTE PTR [rax+0x3fd2d404],dh
   14001af68:	add    BYTE PTR [rax],al
   14001af6a:	add    BYTE PTR [rax+0x1f],dl
   14001af6d:	loop   0x14001af41
   14001af6f:	(bad)  
   14001af70:	add    BYTE PTR [rax],al
   14001af72:	add    al,al
   14001af74:	xor    dh,al
   14001af76:	sar    BYTE PTR [rdi],cl
   14001af78:	add    BYTE PTR [rax],al
   14001af7a:	add    BYTE PTR [rax],ah
   14001af7c:	(bad)  
   14001af7d:	(bad)  
   14001af7e:	sar    BYTE PTR [rdi],cl
   14001af80:	add    BYTE PTR [rax],al
   14001af82:	add    BYTE PTR [rax+0x44],dh
   14001af85:	or     al,0xd3
   14001af87:	(bad)  
   14001af88:	add    BYTE PTR [rax],al
   14001af8a:	add    BYTE PTR [rax+0x3fd31a42],dh
   14001af90:	add    BYTE PTR [rax],al
   14001af92:	add    al,ah
   14001af94:	cmp    DWORD PTR [rax],ebp
   14001af96:	sar    DWORD PTR [rdi],cl
   14001af98:	add    BYTE PTR [rax],al
   14001af9a:	add    BYTE PTR [rax],dl
   14001af9c:	sub    dh,BYTE PTR [rsi]
   14001af9e:	sar    DWORD PTR [rdi],cl
   14001afa0:	add    BYTE PTR [rax],al
   14001afa2:	add    BYTE PTR [rax+0x13],dl
   14001afa5:	rex.R sar DWORD PTR [rdi],cl
	...
   14001afb8:	(bad)  
   14001afb9:	and    BYTE PTR [rdx-0x4df543de],dh
   14001afbf:	cmp    eax,0x332e0dd4
   14001afc4:	imul   ecx,DWORD PTR [rdi],0xd2573db1
   14001afca:	jle    0x14001afb4
   14001afcc:	or     eax,0x693dce95
   14001afd1:	ins    DWORD PTR es:[rdi],dx
   14001afd2:	(bad)  
   14001afd3:	cmp    eax,DWORD PTR [rbx+rsi*8-0x2d]
   14001afd7:	cmp    eax,0xa5363e57
   14001afdc:	(bad)  
   14001afdd:	pop    rdx
   14001afde:	hlt    
   14001afdf:	cmp    eax,0x3ce1bf0b
   14001afe4:	push   0x113dc443
   14001afe9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001afea:	(bad)  
   14001afeb:	(bad)  
   14001afec:	int    0x89
   14001afee:	stc    
   14001afef:	cmp    eax,0x201f2e9f
   14001aff4:	outs   dx,DWORD PTR ds:[rsi]
   14001aff5:	(bad)  
   14001aff6:	std    
   14001aff7:	cmp    eax,0xb8dabdcd
   14001affc:	mov    ecx,DWORD PTR [rdi-0x17]
   14001afff:	cmp    eax,0xef423015
   14001b004:	fmul   DWORD PTR [rax+0x79ad3e00]
   14001b00a:	sub    esp,DWORD PTR [rsi+0x3e080413]
   14001b010:	(bad)  
   14001b011:	shr    esi,cl
   14001b013:	rcl    BYTE PTR [rdi],0x97
   14001b016:	add    eax,0xd449023e
   14001b01b:	lods   eax,DWORD PTR ds:[rsi]
   14001b01c:	ja     0x14001b068
   14001b01e:	lods   eax,DWORD PTR ds:[rsi]
   14001b01f:	cmp    eax,0xf037300e
   14001b024:	(bad)  
   14001b025:	jbe    0x14001b035
   14001b027:	ds ret 
   14001b029:	test   BYTE PTR [rsi],0x47
   14001b02c:	xlat   BYTE PTR ds:[rbx]
   14001b02d:	(bad)
   14001b032:	rex.WRB (bad) 
   14001b034:	int3   
   14001b035:	add    DWORD PTR [rsi],eax
   14001b037:	ds mov edi,0xe051f6e5
   14001b03d:	repz (bad) 
   14001b03f:	cmp    eax,0x1e1af3eb
   14001b044:	or     edi,DWORD PTR [rdx+0x9]
   14001b047:	mov    DWORD PTR ds:[rdx],0xa38970c0
   14001b04e:	sar    BYTE PTR [rip+0x57c751],0x0        # 0x1405977a6
   14001b055:	adc    BYTE PTR cs:[rsi],bh
   14001b058:	(bad)  
   14001b059:	outs   dx,BYTE PTR ds:[rsi]
   14001b05a:	int    0xee
   14001b05c:	add    BYTE PTR [rbx+0x15],bl
   14001b05f:	ds scas eax,DWORD PTR es:[rdi]
   14001b061:	mov    ch,0x3
   14001b063:	jo     0x14001b08e
   14001b065:	xchg   bh,bl
   14001b067:	cmp    eax,0xb336a36d
   14001b06c:	mov    ecx,0x4f3e1057
   14001b071:	(bad)  
   14001b072:	(bad)  
   14001b073:	rex.WX enter 0x134b,0x3e
   14001b078:	lods   eax,DWORD PTR ds:[rsi]
   14001b079:	mov    esp,0x43da9ea1
   14001b07e:	(bad)  
   14001b07f:	ds sub ch,dl
   14001b082:	div    DWORD PTR [rdi+riz*4-0x10c1e29a]
   14001b089:	cld    
   14001b08a:	idiv   DWORD PTR [rax]
   14001b08c:	loopne 0x14001b040
   14001b08e:	idiv   BYTE PTR [rip+0xffffffffc670f088]        # 0x10672a11c
   14001b094:	push   rsp
   14001b095:	jmp    0x10ab4ee8d
   14001b09a:	cmp    cl,BYTE PTR [rcx]
   14001b09c:	or     DWORD PTR [rdx+0x4],esi
   14001b09f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b0a1:	pop    rbp
   14001b0a2:	(bad)  
   14001b0a3:	out    0x8f,eax
   14001b0a5:	jo     0x14001b0c4
   14001b0a7:	ds out 0xb9,eax
   14001b0aa:	jno    0x14001b123
   14001b0ac:	sahf   
   14001b0ad:	fistp  WORD PTR [rdi]
   14001b0af:	ds (bad) 
   14001b0b1:	(bad)  
   14001b0b2:	or     ah,BYTE PTR [rdi+0x3e0827bf]
   14001b0b8:	adc    al,0xbc
   14001b0ba:	rex.WRB (bad) 
   14001b0bc:	int3   
   14001b0bd:	add    DWORD PTR [rsi],edx
   14001b0bf:	ds pop rbx
   14001b0c1:	pop    rsi
   14001b0c2:	push   0x10
   14001b0c4:	div    BYTE PTR [rdi]
   14001b0c6:	(bad)  
   14001b0c7:	ds rex.WXB (bad) 
   14001b0ca:	jl     0x14001b0bd
   14001b0cc:	adc    ebp,DWORD PTR [rdx+0x12]
   14001b0cf:	cmp    ah,BYTE PTR ds:[rdx-0x80]
   14001b0d3:	(bad)  
   14001b0d4:	mov    dl,0x3e
   14001b0d6:	or     DWORD PTR [rsi],edi
   14001b0d8:	ficom  WORD PTR [rbp+rdx*1+0x1430d1e9]
   14001b0df:	xor    DWORD PTR ds:[rax+0x6b10108f],esp
   14001b0e6:	sbb    eax,0xbaf2413e
   14001b0eb:	or     ebx,DWORD PTR [rdi+rax*4-0x43d4c1ea]
   14001b0f2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0f3:	pop    rsi
   14001b0f4:	add    DWORD PTR [rax],ecx
   14001b0f6:	(bad)  
   14001b0f7:	cmp    eax,0xcdc6676c
   14001b0fc:	cmp    eax,0x2c3e29b6
   14001b101:	stos   DWORD PTR es:[rdi],eax
   14001b102:	(bad)  
   14001b103:	mov    esp,0x3e2b022c
   14001b108:	rex.R
   14001b109:	fnstsw WORD PTR gs:[rbp-0x30]
   14001b10d:	(bad)  
   14001b10e:	stc    
   14001b10f:	cmp    eax,0x5703379e
   14001b114:	(bad)  
   14001b115:	rex adc eax,0x7a1b603e
   14001b11b:	xchg   esp,eax
   14001b11c:	mov    edx,ecx
   14001b11e:	or     al,0x3e
   14001b120:	jle    0x14001b0cb
   14001b122:	jl     0x14001b14b
   14001b124:	lods   eax,DWORD PTR gs:[rsi]
   14001b126:	(bad)  
   14001b127:	ds test eax,0x4dc59f5f
   14001b12d:	mov    BYTE PTR [rcx],dl
   14001b12f:	ds (bad) 
   14001b131:	rol    BYTE PTR [rsi],1
   14001b133:	(bad)  
   14001b134:	(bad)  
   14001b135:	adc    DWORD PTR [rdi],edx
   14001b137:	ds clc 
   14001b139:	or     BYTE PTR [rcx],dh
   14001b13b:	cmp    al,0x2e
   14001b13d:	or     DWORD PTR [rdi],ebp
   14001b13f:	ds cmp ah,cl
   14001b142:	sub    esp,ebx
   14001b144:	(bad)
   14001b147:	ds (bad) 
   14001b149:	rex.WRXB jae 0x14001b149
   14001b14c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b14d:	mov    ebx,0x84833e26
   14001b152:	loopne 0x14001b109
   14001b154:	(bad)  
   14001b155:	hlt    
   14001b156:	std    
   14001b157:	cmp    eax,0xc74d0b95
   14001b15c:	fwait
   14001b15d:	(bad)  
   14001b15e:	and    edi,DWORD PTR [rsi]
   14001b160:	adc    ecx,DWORD PTR [rcx+rdi*2]
   14001b163:	call   0x1ae3faadc
   14001b169:	pop    rax
   14001b16a:	(bad)  
   14001b16b:	or     BYTE PTR [rsp+rcx*8+0x4a983e1e],bh
   14001b172:	push   rdx
   14001b173:	stc    
   14001b174:	jmp    0xf83fd28e
   14001b179:	xor    DWORD PTR [rcx],esi
   14001b17b:	pop    rcx
   14001b17c:	rex (bad) 
   14001b17e:	(bad)  
   14001b17f:	ds xor eax,0x8b256438
   14001b185:	iret   
   14001b186:	sbb    edi,DWORD PTR [rsi]
   14001b188:	sub    ch,0x8b
   14001b18b:	sbb    eax,0x3e1f5fa8
   14001b190:	in     al,0xd9
   14001b192:	sub    ecx,edi
   14001b194:	rex.WRB
   14001b195:	rex.WX and al,0x3e
   14001b198:	xchg   esp,eax
   14001b199:	or     al,0x22
   14001b19b:	fsub   DWORD PTR [rax]
   14001b19d:	cwde   
   14001b19e:	adc    bh,BYTE PTR [rsi]
   14001b1a0:	or     ebx,esp
   14001b1a2:	add    al,0x93
   14001b1a4:	or     rbp,QWORD PTR [rdx]
   14001b1a7:	ds (bad) 
   14001b1a9:	cmps   BYTE PTR gs:[rsi],BYTE PTR es:[rdi]
   14001b1ab:	stos   DWORD PTR es:[rdi],eax
   14001b1ac:	push   rsi
   14001b1ad:	rex.WRB (bad) 
   14001b1af:	movsxd edx,DWORD PTR ds:[rcx+0x36]
   14001b1b3:	sbb    DWORD PTR [rax+0x363e210c],edx
   14001b1b9:	(bad)  
   14001b1ba:	pop    rcx
   14001b1bb:	(bad)  
   14001b1bc:	js     0x14001b1cd
   14001b1be:	clc    
   14001b1bf:	cmp    eax,0x25c81cca
   14001b1c4:	mov    BYTE PTR [rdx+0x10],dl
   14001b1c7:	ds push 0x74
   14001b1ca:	ins    DWORD PTR es:[rdi],dx
   14001b1cb:	jge    0x14001b220
   14001b1cd:	xchg   ebp,eax
   14001b1ce:	loopne 0x14001b20d
   14001b1d0:	(bad)  
   14001b1d1:	(bad)  
   14001b1d2:	or     ah,BYTE PTR [rdi+0x3e1827bf]
   14001b1d8:	cmp    al,0x93
   14001b1da:	rex.RB in al,dx
   14001b1dc:	test   al,0xb0
   14001b1de:	(bad)  
   14001b1df:	ds test eax,0xf81bf5db
   14001b1e5:	pop    rdx
   14001b1e6:	adc    BYTE PTR [rsi],bh
   14001b1e8:	adc    eax,0xfa2655d5
   14001b1ed:	loop   0x14001b206
   14001b1ef:	ds mov edi,0xecbfaee4
   14001b1f5:	pop    rcx
   14001b1f6:	or     eax,0x683fa33e
   14001b1fb:	fisubr DWORD PTR [rdi]
   14001b1fd:	mov    ebx,DWORD PTR [rip+0x3a37373e]        # 0x17a38e941
   14001b203:	std    
   14001b204:	fnstsw WORD PTR [rax+0x12043e24]
   14001b20a:	scas   al,BYTE PTR es:[rdi]
   14001b20b:	(bad)  
   14001b20c:	jle    0x14001b190
   14001b20e:	adc    edi,DWORD PTR [rsi]
   14001b210:	lahf   
   14001b211:	psubsw mm1,QWORD PTR [rcx+0x7b]
   14001b215:	mov    WORD PTR [rsi+rdi*1],gs
   14001b218:	sbb    eax,0xf0159759
   14001b21d:	(bad)  
   14001b21e:	sub    DWORD PTR [rsi],edi
   14001b220:	ss jnp 0x14001b254
   14001b223:	outs   dx,BYTE PTR ds:[rsi]
   14001b224:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b225:	stos   BYTE PTR es:[rdi],al
   14001b226:	sbb    DWORD PTR [rsi],edi
   14001b228:	push   rbp
   14001b229:	(bad)  
   14001b22a:	jb     0x14001b235
   14001b22c:	push   rsi
   14001b22d:	jb     0x14001b25d
   14001b22f:	ds push rsp
   14001b231:	lods   al,BYTE PTR ds:[rsi]
   14001b232:	jp     0x14001b230
   14001b234:	xor    ebx,DWORD PTR [rsi+riz*1]
   14001b237:	ds push rdx
   14001b239:	movabs ds:0x27303e29662bcf61,al
   14001b242:	(bad)  
   14001b243:	adc    eax,ecx
   14001b245:	rex.XB sbb BYTE PTR [r14],dil
   14001b248:	ss retf 
   14001b24a:	pop    rdx
   14001b24b:	or     edi,DWORD PTR [rbx-0x5bc1df9c]
   14001b251:	add    DWORD PTR [rdi],esp
   14001b253:	test   BYTE PTR [rsp+rsi*1],cl
   14001b256:	or     bh,BYTE PTR [rsi]
   14001b258:	(bad)  
   14001b259:	jns    0x14001b1ea
   14001b25b:	mov    ch,0x55
   14001b25d:	mov    ds,WORD PTR [rdx]
   14001b25f:	ds (bad) 
   14001b261:	popf   
   14001b262:	pop    rsi
   14001b263:	pushf  
   14001b264:	and    DWORD PTR [rip+0xfffffffffd6a3de9],ebp        # 0x13d6bf053
   14001b26a:	jg     0x14001b279
   14001b26c:	out    0x63,al
   14001b26e:	(bad)  
   14001b26f:	ds adc al,0x63
   14001b272:	push   rcx
   14001b273:	(bad)  [rsi]
   14001b275:	fwait
   14001b276:	cs ds or al,0x35
   14001b27a:	(bad)  
   14001b27b:	sbb    DWORD PTR [rax-0x7ec1d6dd],edx
   14001b281:	pop    rsi
   14001b282:	js     0x14001b2bc
   14001b284:	mov    BYTE PTR [rdi+0x32],ch
   14001b287:	ds scas eax,DWORD PTR es:[rdi]
   14001b289:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b28a:	stos   DWORD PTR es:[rdi],eax
   14001b28b:	rex.WR push 0x5b
   14001b28e:	cmp    edi,DWORD PTR [rsi]
   14001b290:	sbb    al,0x76
   14001b292:	mov    ds,esp
   14001b294:	push   0x22
   14001b296:	lock cmp eax,0x313a1aed
   14001b29c:	xlat   BYTE PTR ds:[rbx]
   14001b29d:	rex.WX cmp al,0x3e
   14001b2a0:	(bad)  
   14001b2a1:	lea    esi,[rbx+0x7c]
   14001b2a4:	call   0x1583fc80d
   14001b2a9:	data16 mov dh,cl
   14001b2ac:	in     al,dx
   14001b2ad:	(bad)  
   14001b2ae:	xor    edi,DWORD PTR [rsi]
   14001b2b0:	data16 jbe 0x14001b32a
   14001b2b3:	cmc    
   14001b2b4:	sahf   
   14001b2b5:	xchg   edx,eax
   14001b2b6:	cmp    eax,0x8da0b83e
   14001b2bb:	lock cmp ecx,DWORD PTR [rax+0x39]
   14001b2bf:	ds es pop rax
   14001b2c2:	stos   BYTE PTR es:[rdi],al
   14001b2c3:	out    dx,al
   14001b2c4:	(bad)  
   14001b2c5:	fnstsw WORD PTR [rbx]
   14001b2c7:	ds mov edx,0xdd590237
   14001b2cd:	(bad)  
   14001b2ce:	cmp    DWORD PTR [rsi],edi
   14001b2d0:	(bad)  
   14001b2d1:	retf   0xe0eb
   14001b2d4:	jmp    0xec3fcdcc
   14001b2d9:	or     eax,0xce538227
   14001b2de:	xor    eax,0x2ab9ba3e
   14001b2e3:	push   rbx
   14001b2e4:	je     0x14001b335
   14001b2e6:	cmp    DWORD PTR [rsi],edi
   14001b2e8:	push   rsp
   14001b2e9:	xchg   BYTE PTR [rax+0x7342795],cl
   14001b2ef:	ds lock rex.WXB jrcxz 0x14001b2ff
   14001b2f4:	add    BYTE PTR [rdx+0xc],bl
   14001b2f7:	ds (bad) 
   14001b2f9:	rol    BYTE PTR [rsi],1
   14001b2fb:	(bad)  
   14001b2fc:	(bad)  
   14001b2fd:	adc    DWORD PTR [rdi],esp
   14001b2ff:	ds clc 
   14001b301:	mov    ebp,gs
   14001b303:	mov    ah,0x25
   14001b305:	add    BYTE PTR [rip+0xfffffffff2d2a03e],ah        # 0x132d45349
   14001b30b:	(bad)  
   14001b30c:	mov    edx,ecx
   14001b30e:	cs ds push rsp
   14001b311:	jne    0x14001b31d
   14001b313:	or     al,0x2e
   14001b315:	sub    BYTE PTR [rcx],ah
   14001b317:	ds retf 0x59a7
   14001b31b:	xor    esi,ebx
   14001b31d:	jo     0x14001b32c
   14001b31f:	ds and eax,0x7e13a840
   14001b325:	jg     0x14001b352
   14001b327:	ds (bad) 
   14001b329:	mov    DWORD PTR [rcx],esp
   14001b32b:	ret    
   14001b32c:	outs   dx,BYTE PTR ds:[rsi]
   14001b32d:	xor    BYTE PTR [rbx],dh
   14001b32f:	ds push rax
   14001b331:	jne    0x14001b2be
   14001b333:	add    edi,eax
   14001b335:	(bad)  
   14001b336:	(bad)  
   14001b337:	ds fs sbb eax,0xb0358cd7
   14001b33e:	ds ds je 0x14001b2d6
   14001b342:	test   DWORD PTR [rdx],esp
   14001b344:	enter  0x3a76,0x3e
   14001b348:	jrcxz  0x14001b2d0
   14001b34a:	ficom  WORD PTR [rdx-0x3a]
   14001b34d:	(bad)  
   14001b34e:	cmp    eax,0x8658af3e
   14001b353:	loopne 0x14001b321
   14001b355:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b356:	(bad)  
   14001b357:	ds sahf 
   14001b359:	or     al,al
   14001b35b:	shl    BYTE PTR [rdx-0x2ec1c47c],cl
   14001b361:	pop    rbx
   14001b362:	ret    0xb0f2
   14001b365:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b366:	and    BYTE PTR [rsi],bh
   14001b368:	cdq    
   14001b369:	neg    BYTE PTR [rbx+0x22]
   14001b36c:	(bad)  
   14001b36d:	(bad)  
   14001b36e:	cmp    eax,0x9bf0373e
   14001b373:	test   DWORD PTR [rdi],ecx
   14001b375:	mov    cl,0x8
   14001b377:	ds loope 0x14001b345
   14001b37a:	nop
   14001b37b:	mov    ch,0x23
   14001b37d:	mov    BYTE PTR [rsi],bh
   14001b37f:	not    BYTE PTR ds:[rsi+0x1311f31e]
   14001b386:	ss ds (bad) 
   14001b389:	cpuid  
   14001b38b:	pop    rsp
   14001b38c:	xchg   DWORD PTR [rdi],ebx
   14001b38e:	cs movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b391:	mov    ecx,0x95724939
   14001b396:	sub    al,0x3e
   14001b398:	loop   0x14001b3f2
   14001b39a:	ds jp  0x14001b332
   14001b39d:	add    eax,0x3343e38
   14001b3a2:	lahf   
   14001b3a3:	(bad)  
   14001b3a4:	es icebp 
   14001b3a6:	(bad)  
   14001b3a7:	or     DWORD PTR ds:[rsi-0x72],edx
   14001b3ab:	pop    rcx
   14001b3ac:	cmc    
   14001b3ad:	push   rbx
   14001b3ae:	cmp    DWORD PTR [rsi],edi
   14001b3b0:	rex.W (bad) 
   14001b3b2:	push   rsi
   14001b3b3:	clc    
   14001b3b4:	outs   dx,DWORD PTR ds:[rsi]
   14001b3b5:	shl    DWORD PTR [rsi],0x3e
   14001b3b8:	hlt    
   14001b3b9:	(bad)  
   14001b3ba:	repnz mov cr1,rbx
   14001b3be:	and    al,0x3e
   14001b3c0:	movabs ds:0x563e35e120d53d53,al
   14001b3c9:	repnz mov DWORD PTR [rcx+0x7f],esp
   14001b3cd:	push   rdx
   14001b3ce:	cmp    bh,BYTE PTR [rsi]
   14001b3d0:	setl   ah
   14001b3d3:	(bad)  
   14001b3d4:	cld    
   14001b3d5:	push   rsi
   14001b3d6:	cmp    BYTE PTR [rsi],bh
   14001b3d8:	fcmovbe st,st(7)
   14001b3da:	sub    BYTE PTR [rdx+0x3e300c2e],al
   14001b3e0:	loopne 0x14001b3c1
   14001b3e2:	rex.R xchg esp,eax
   14001b3e4:	rcl    BYTE PTR [rbx],1
   14001b3e6:	icebp  
   14001b3e7:	cmp    eax,0xeea59a6
   14001b3ec:	movsxd edx,DWORD PTR [rax]
   14001b3ee:	and    eax,0x32d7113e
   14001b3f3:	vmread QWORD PTR [rsi],rbp
   14001b3f6:	es ds iret 
   14001b3f9:	clc    
   14001b3fa:	adc    BYTE PTR [rdx],bl
   14001b3fc:	fnstcw WORD PTR [rsi]
   14001b3fe:	in     eax,dx
   14001b3ff:	cmp    eax,0x7e4bcd85
   14001b404:	rex.WX
   14001b405:	and    edi,DWORD PTR gs:[rsi]
   14001b408:	and    DWORD PTR [rbp+0x5b784980],ebp
   14001b40e:	add    eax,0xb16e643e
   14001b413:	(bad)  
   14001b414:	sub    eax,0xc3e212f
   14001b419:	cmc    
   14001b41a:	cmp    ecx,ebx
   14001b41c:	lods   eax,DWORD PTR ds:[rsi]
   14001b41d:	(bad)  
   14001b41e:	(bad)  
   14001b41f:	ds cld 
   14001b421:	xor    BYTE PTR [rcx+0x62],0x84
   14001b425:	(bad)  
   14001b426:	sub    BYTE PTR [rsi],bh
   14001b428:	(bad)  
   14001b429:	rex.WB loope 0x14001b3f3
   14001b42c:	(bad)  
   14001b42e:	(bad)  
   14001b42f:	cmp    eax,0x19365163
   14001b434:	nop
   14001b435:	or     al,0x31
   14001b437:	mov    BYTE PTR ds:[rsi-0x5f],dh
   14001b43b:	sub    ecx,DWORD PTR [rbp+0x3c]
   14001b43e:	(bad)  
   14001b43f:	cmp    DWORD PTR ds:[rip+0xffffffffe8a5e0e9],0x21af3e2a        # 0x128a79533
   14001b44a:	(bad)  
   14001b44b:	lock (bad) 
   14001b44d:	mov    al,0x2a
   14001b44f:	ds pop bx
   14001b452:	fnsave [rbx+rcx*4+0x1e]
   14001b456:	xor    BYTE PTR [rsi],bh
   14001b458:	xchg   esp,eax
   14001b459:	push   rsp
   14001b45a:	mov    ebx,0x2d206fec
   14001b45f:	ds add ah,cl
   14001b462:	rex.WRXB jb 0x14001b3f0
   14001b465:	mov    ah,0xf0
   14001b467:	cmp    eax,0xb61e229
   14001b46c:	(bad)  
   14001b46d:	cmp    DWORD PTR [rdi],0x3e
   14001b470:	scas   eax,DWORD PTR es:[rdi]
   14001b471:	mov    esp,0x1a97c407
   14001b476:	clc    
   14001b477:	cmp    eax,0x1ccbb7aa
   14001b47c:	ins    BYTE PTR es:[rdi],dx
   14001b47d:	sub    BYTE PTR [rsi],bh
   14001b47f:	ds xchg ebx,eax
   14001b481:	or     ah,BYTE PTR [rdx]
   14001b483:	or     rsp,QWORD PTR [r11+0x28]
   14001b487:	ds pop rsp
   14001b489:	sub    al,0xa2
   14001b48b:	rcl    DWORD PTR [rip+0x463dff0b],0x9        # 0x1863fb39d
   14001b492:	sbb    al,0xe7
   14001b494:	rex.RB push r12
   14001b496:	xor    eax,0x66d853e
   14001b49b:	clc    
   14001b49c:	xor    dh,ah
   14001b49e:	cmp    edi,DWORD PTR [rsi]
   14001b4a0:	cmp    DWORD PTR [rcx+rbx*8-0x10],ebp
   14001b4a4:	fistp  WORD PTR [rcx-0x4f7ec1db]
   14001b4aa:	(bad)  
   14001b4ab:	mov    cl,0x85
   14001b4ad:	int3   
   14001b4ae:	ss ds enter 0x1ea8,0x0
   14001b4b4:	ins    DWORD PTR es:[rdi],dx
   14001b4b5:	rex.RXB xor al,0x3e
   14001b4b8:	(bad)  
   14001b4b9:	rcl    DWORD PTR [rsi],cl
   14001b4bb:	sahf   
   14001b4bc:	mov    BYTE PTR [rdi],bh
   14001b4be:	(bad)  
   14001b4bf:	xchg   DWORD PTR ds:[rdx],ebp
   14001b4c2:	jns    0x14001b4d1
   14001b4c4:	adc    BYTE PTR [rdi+0x33],dl
   14001b4c7:	test   BYTE PTR ds:[rcx],0x61
   14001b4cb:	scas   al,BYTE PTR es:[rdi]
   14001b4cc:	jns    0x14001b49f
   14001b4ce:	cmp    edi,DWORD PTR [rsi]
   14001b4d0:	loop   0x14001b4c8
   14001b4d2:	ret    
   14001b4d3:	push   rsi
   14001b4d4:	adc    BYTE PTR [rbx+0x8fb3e0c],ah
   14001b4da:	pushf  
   14001b4db:	(bad)  
   14001b4dc:	jo     0x14001b506
   14001b4de:	cmp    eax,0xd2673f3e
   14001b4e3:	cmp    BYTE PTR [rax],0xba
   14001b4e6:	cmp    bh,BYTE PTR [rsi]
   14001b4e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b4e9:	jge    0x14001b514
   14001b4eb:	retf   
   14001b4ec:	xor    esi,DWORD PTR [rsi]
   14001b4ee:	sub    al,0x3e
   14001b4f0:	add    ch,dl
   14001b4f2:	out    dx,eax
   14001b4f3:	cdq    
   14001b4f4:	cmp    BYTE PTR [rcx+riz*1+0x2008e63e],al
   14001b4fb:	popf   
   14001b4fc:	leave  
   14001b4fd:	int3   
   14001b4fe:	cmp    edi,DWORD PTR [rsi]
   14001b500:	push   rax
   14001b501:	sar    DWORD PTR [rbp+0x38000544],cl
   14001b507:	ds loope 0x14001b574
   14001b50a:	(bad)  
   14001b50b:	es ret 0x2b91
   14001b50f:	fild   QWORD PTR ds:[rbx]
   14001b512:	mov    dh,0x26
   14001b514:	fistp  QWORD PTR [rdx+0x2a]
   14001b517:	ds leave 
   14001b519:	outs   dx,BYTE PTR ds:[rsi]
   14001b51a:	(bad)  
   14001b51b:	enter  0x764f,0x18
   14001b51f:	ds lock push 0x4f3de50f
   14001b526:	(bad)  
   14001b527:	ds jrcxz 0x14001b4bf
   14001b52a:	jns    0x14001b5a1
   14001b52c:	retf   0xf760
   14001b52f:	cmp    eax,0xd3805147
   14001b534:	jle    0x14001b59c
   14001b536:	cld    
   14001b537:	cmp    eax,0x196adf6f
   14001b53c:	div    BYTE PTR [rbx]
   14001b53e:	(bad)  
   14001b53f:	imul   eax,DWORD PTR ds:[rbx-0x48ef0cc2],0x2f
   14001b547:	adc    edx,DWORD PTR ds:[rax]
   14001b54a:	fs mov edx,0x3e39886e
   14001b550:	sbb    cl,BYTE PTR [rdi+rbp*4-0x4ac9730]
   14001b557:	cmp    eax,0x1b8d2971
   14001b55c:	imul   ecx,DWORD PTR [rbp+rsi*1+0x6d08fb3e],0xfe946522
   14001b567:	cmp    eax,0x63f0097
   14001b56c:	jle    0x14001b5c6
   14001b56e:	xor    edi,DWORD PTR [rsi]
   14001b570:	sbb    BYTE PTR [rdi+0x18e70212],bl
   14001b576:	ss ds push rsp
   14001b579:	lods   al,BYTE PTR ds:[rsi]
   14001b57a:	jp     0x14001b578
   14001b57c:	xor    ebx,DWORD PTR [rsi+rsi*1]
   14001b57f:	ds rex.WX (bad) 
   14001b582:	or     BYTE PTR [rsi+riz*4+0x213e3f07],al
   14001b589:	push   rsp
   14001b58a:	xchg   esp,eax
   14001b58b:	in     al,0xbf
   14001b58d:	xor    al,0x3c
   14001b58f:	or     esi,DWORD PTR ds:[rax]
   14001b592:	rex.B (bad) 
   14001b594:	lock mov cl,0x38
   14001b597:	movsxd ebx,DWORD PTR ds:[rbx]
   14001b59a:	(bad)  
   14001b59b:	test   BYTE PTR [rdx+0x43],al
   14001b59e:	(bad)  
   14001b59f:	ds ss je 0x14001b5dc
   14001b5a3:	pop    rsi
   14001b5a4:	or     DWORD PTR [rbx+0x3a],esp
   14001b5a7:	ficomp WORD PTR ds:[rcx]
   14001b5aa:	mov    ecx,0x34428656
   14001b5af:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b5b1:	fnstenv [rdx+0x36ca9201]
   14001b5b7:	ds sbb al,0x93
   14001b5ba:	sub    bh,BYTE PTR [rdx]
   14001b5bc:	(bad)  
   14001b5bd:	cmp    BYTE PTR [rdi],ah
   14001b5bf:	xor    BYTE PTR ds:[rdx+0x11880e17],dl
   14001b5c6:	cmp    al,0x3e
   14001b5c8:	(bad)  
   14001b5c9:	push   rdx
   14001b5ca:	ins    DWORD PTR es:[rdi],dx
   14001b5cb:	(bad)  
   14001b5cc:	fdivr  QWORD PTR [rip+0xffffffffe9173e31]        # 0x12918f403
   14001b5d2:	and    cl,BYTE PTR [rcx+0x3e33eed5]
   14001b5d8:	push   rax
   14001b5d9:	(bad)  [rbx-0x7c]
   14001b5dc:	xchg   edx,eax
   14001b5dd:	pop    rcx
   14001b5de:	sub    DWORD PTR [rsi],edi
   14001b5e0:	mov    esp,DWORD PTR [rdi]
   14001b5e2:	cs pop rdi
   14001b5e4:	rex.WRB fisttp DWORD PTR [rip+0x635c43e]        # 0x146377a29
   14001b5eb:	sub    dh,cl
   14001b5ed:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b5ee:	icebp  
   14001b5ef:	cmp    eax,0x882c3c34
   14001b5f4:	lock rex.X
   14001b5f6:	rex.RX
   14001b5f7:	ds pop rsi
   14001b5f9:	rex.RXB mul BYTE PTR [r15+0x3e2aee9b]
   14001b600:	in     al,0x60
   14001b602:	rex.WX cmp QWORD PTR [rdi+0x4b],0x26
   14001b607:	ds cs jns 0x14001b64e
   14001b60b:	loop   0x14001b64f
   14001b60d:	or     eax,0x4f013e29
   14001b612:	adc    ecx,DWORD PTR [rax]
   14001b614:	and    BYTE PTR [rdi],ah
   14001b616:	rex.WR
   14001b617:	ds pop rbx
   14001b619:	iret   
   14001b61a:	(bad)  
   14001b61b:	(bad)  
   14001b61c:	cs js  0x14001b669
   14001b61f:	ds rex.W
   14001b621:	data16 fidivr DWORD PTR [rcx+0x5c]
   14001b625:	push   rax
   14001b626:	rex.R
   14001b627:	ds and ebp,ecx
   14001b62a:	rex.WRB (bad) 
   14001b62c:	(bad)  
   14001b62d:	test   eax,0xd5bc3e4c
   14001b632:	jl     0x14001b696
   14001b634:	cmp    eax,0x133e297d
   14001b639:	stos   BYTE PTR es:[rdi],al
   14001b63a:	mov    esp,0x20b15cf9
   14001b63f:	fnsave ds:[rsi-0x31]
   14001b643:	movsxd esp,DWORD PTR [rax]
   14001b645:	pop    rbx
   14001b646:	xor    DWORD PTR [rsi],edi
   14001b648:	rex.W (bad) 
   14001b64a:	stos   BYTE PTR es:[rdi],al
   14001b64b:	repz out 0x83,al
   14001b64e:	sub    DWORD PTR [rsi],edi
   14001b650:	xchg   esp,eax
   14001b651:	jmp    0x18c66ab55
   14001b656:	(bad)  
   14001b657:	ds cvtps2pd xmm5,xmm0
   14001b65b:	jl     0x14001b617
   14001b65d:	mov    esi,0xa6b83e46
   14001b662:	rex.WRX std 
   14001b664:	imul   ebx,DWORD PTR [rbx+rdi*1+0x5fa4ab3e],0x2b6aa583
   14001b66f:	ds shr ebp,1
   14001b672:	vmwrite rax,rbx
   14001b675:	int3   
   14001b676:	rex.XB
   14001b677:	ds loopne 0x14001b6c9
   14001b67a:	rex (bad) 
   14001b67c:	rex.WR shr BYTE PTR [rcx],0x3e
   14001b680:	popf   
   14001b681:	fdiv   DWORD PTR [rbp+0x7a]
   14001b684:	rex.WXB jae 0x14001b6c7
   14001b687:	adc    dl,BYTE PTR ds:[rsi]
   14001b68a:	loopne 0x14001b650
   14001b68c:	add    al,0x44
   14001b68e:	sbb    edi,DWORD PTR [rsi]
   14001b690:	xchg   esp,eax
   14001b691:	rex.W (bad) 
   14001b693:	ret    0xc565
   14001b696:	rex
   14001b697:	ds int 0x35
   14001b69a:	fld    DWORD PTR [rcx+0x14]
   14001b69d:	(bad)  
   14001b69e:	xor    edi,DWORD PTR [rsi]
   14001b6a0:	rex.WRX cmp r13,QWORD PTR [rbx+0x55]
   14001b6a4:	xchg   edx,eax
   14001b6a5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b6a6:	jb     0x14001b6e5
   14001b6a8:	rex.XB fadd QWORD PTR [r9+0x3]
   14001b6ac:	or     edx,edi
   14001b6ae:	and    BYTE PTR [rsi],bh
   14001b6b0:	hlt    
   14001b6b1:	(bad)  
   14001b6b3:	or     DWORD PTR [rax-0x71],esi
   14001b6b6:	cs mov r8b,BYTE PTR ds:[r11+rcx*4]
   14001b6bc:	neg    BYTE PTR [rbx]
   14001b6be:	rex.WXB
   14001b6bf:	ds push rsi
   14001b6c1:	test   eax,0xee52dffa
   14001b6c6:	ds ds mov ebp,0x900e465
   14001b6cd:	imul   eax,DWORD PTR [rbp+0x3e],0x66
   14001b6d1:	jbe    0x14001b74a
   14001b6d3:	cmc    
   14001b6d4:	sahf   
   14001b6d5:	xchg   edx,eax
   14001b6d6:	rex.WRB
   14001b6d7:	ds (bad) 
   14001b6d9:	loop   0x14001b712
   14001b6db:	xchg   BYTE PTR [rdx-0xfc1b792],ah
   14001b6e1:	movabs ds:0xec743e4665aff10c,al
   14001b6ea:	scas   rax,QWORD PTR es:[rdi]
   14001b6ec:	std    
   14001b6ed:	adc    DWORD PTR [rdi],ebp
   14001b6ef:	ds (bad) 
   14001b6f1:	shl    DWORD PTR [rsi+rax*4+0x3e4cbe1b],1
   14001b6f8:	gs jbe 0x14001b6a3
   14001b6fb:	(bad)  
   14001b6fc:	pop    rbx
   14001b6fd:	mov    al,0x25
   14001b6ff:	ds sbb eax,0xc20a1a4a
   14001b705:	(bad)  
   14001b706:	rex.B
   14001b707:	ds lahf 
   14001b709:	fwait
   14001b70a:	or     bl,BYTE PTR [rdi-0x33]
   14001b70e:	rex.B
   14001b70f:	ds jo  0x14001b762
   14001b712:	es enter 0x3656,0x45
   14001b717:	ds (bad) 
   14001b719:	and    ch,BYTE PTR [rax]
   14001b71b:	xor    eax,0x3e377ed8
   14001b720:	sar    BYTE PTR [rcx+0x17bc3040],cl
   14001b726:	and    al,0x3e
   14001b728:	repnz out dx,eax
   14001b72a:	jns    0x14001b7a7
   14001b72c:	out    dx,eax
   14001b72d:	mov    es,WORD PTR [rax+0x3e]
   14001b730:	jmp    0x1af3b938c
   14001b735:	(bad)  
   14001b736:	rex.WRB
   14001b737:	ds push rdi
   14001b739:	hlt    
   14001b73a:	or     al,0xa7
   14001b73c:	xchg   ebx,eax
   14001b73d:	add    al,0x4c
   14001b73f:	ds or  al,0xa6
   14001b742:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b743:	(bad)  
   14001b744:	(bad)  
   14001b745:	or     DWORD PTR [rdx+0x3e],0xffffffba
   14001b749:	push   rdi
   14001b74a:	(bad)
   14001b74d:	(bad)  
   14001b74e:	xor    BYTE PTR [rsi],bh
   14001b750:	or     bh,BYTE PTR [rbp-0x3693ed18]
   14001b756:	rex.R
   14001b757:	ds adc eax,0x1993e323
   14001b75d:	sub    al,0x3d
   14001b75f:	ds rex.X (bad) 
   14001b762:	pop    rdi
   14001b763:	adc    esp,DWORD PTR [rcx]
   14001b765:	(bad)  
   14001b766:	and    bh,BYTE PTR [rsi]
   14001b768:	jge    0x14001b7de
   14001b76a:	fimul  DWORD PTR [rbp+0x3e]
   14001b76d:	(bad)  
   14001b76e:	(bad)  
   14001b76f:	sub    esp,DWORD PTR ds:[rdi-0x76096bf]
   14001b776:	cld    
   14001b777:	cmp    eax,0x2f10831
   14001b77c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b77d:	and    QWORD PTR [r14],rdi
   14001b780:	(bad)  [rbp-0x7f]
   14001b783:	jl     0x14001b7d0
   14001b785:	lods   eax,DWORD PTR ds:[rsi]
   14001b786:	rex.WRX
   14001b787:	ds or  ah,bh
   14001b78a:	movsxd edi,esi
   14001b78c:	xor    BYTE PTR [rcx+0x4e],ch
   14001b78f:	ds (bad) 
   14001b791:	out    dx,al
   14001b792:	fnstcw WORD PTR [rsi+0x3e41e106]
   14001b798:	xchg   edx,eax
   14001b799:	sbb    al,0xf1
   14001b79b:	(bad)  
   14001b79c:	sub    ebp,DWORD PTR [rax+0x2d]
   14001b79f:	ds jl  0x14001b746
   14001b7a2:	fisttp DWORD PTR [rax+0x3e3a07f1]
   14001b7a8:	div    BYTE PTR [rdx-0x3f]
   14001b7ab:	sub    eax,0x3e40f934
   14001b7b0:	and    eax,0x3fde623e
   14001b7b5:	out    dx,eax
   14001b7b6:	add    edi,DWORD PTR [rsi]
	...
   14001b7c4:	add    BYTE PTR [rax],al
   14001b7c6:	add    BYTE PTR [rax+0x20],al
   14001b7c9:	loopne 0x14001b7ea
   14001b7cb:	loopne 0x14001b7ec
   14001b7cd:	loopne 0x14001b7ce
   14001b7cf:	(bad)  
   14001b7d0:	lock (bad) 
   14001b7d2:	cld    
   14001b7d3:	add    DWORD PTR [rdi-0x40],edi
   14001b7d6:	(bad)  
   14001b7d7:	(bad)  
   14001b7d8:	adc    bh,dl
   14001b7da:	add    DWORD PTR [rdx+0x3fffa11c],ebp
   14001b7e0:	and    al,bh
   14001b7e2:	sbb    DWORD PTR [rdi],0x3fff81f8
   14001b7e8:	mov    ch,0xdb
   14001b7ea:	movabs al,ds:0x4a42713fff6310ac
   14001b7f3:	sahf   
   14001b7f4:	gs rex.R (bad) 
   14001b7f7:	(bad)  
   14001b7f8:	mov    ch,0xa
   14001b7fa:	and    eax,DWORD PTR [rsi+rsi*8+0x25]
   14001b7fe:	(bad)  
   14001b7ff:	(bad)  
   14001b800:	or     BYTE PTR [rdi],bl
   14001b802:	jl     0x14001b7f4
   14001b804:	rol    DWORD PTR [rdi],0xff
   14001b807:	(bad)  
   14001b808:	add    cl,BYTE PTR [rsi-0x163807bb]
   14001b80e:	(bad)  
   14001b80f:	(bad)  
   14001b810:	shr    ah,0x1
   14001b813:	mov    bl,0x7
   14001b815:	int3   
   14001b816:	(bad)  
   14001b817:	(bad)  
   14001b818:	jmp    0x14001b81b
   14001b81a:	mov    edx,0xfeae807a
   14001b81f:	(bad)  
   14001b820:	addr32 mov bh,0xf0
   14001b823:	stos   DWORD PTR es:[rdi],eax
   14001b824:	xor    DWORD PTR [rcx+0x50e43ffe],edx
   14001b82a:	xchg   edi,eax
   14001b82b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b82c:	sbb    dh,BYTE PTR [rsi+rdi*8+0x3f]
   14001b830:	je     0x14001b817
   14001b832:	add    ecx,ecx
   14001b834:	cmp    dl,BYTE PTR [rdi-0x2]
   14001b837:	(bad)  
   14001b838:	jae    0x14001b854
   14001b83a:	fdivr  QWORD PTR [rcx-0x6f]
   14001b83d:	cmp    bh,dh
   14001b83f:	(bad)  
   14001b840:	(bad)  
   14001b841:	(bad)  
   14001b842:	(bad)  
   14001b843:	(bad)  
   14001b844:	(bad)  
   14001b845:	(bad)  
   14001b846:	(bad)  
   14001b847:	(bad)  
   14001b848:	(bad)  
   14001b849:	loopne 0x14001b84c
   14001b84b:	(bad)  
   14001b84c:	loopne 0x14001b84f
   14001b84e:	(bad)  
   14001b84f:	(bad)  
   14001b850:	mov    al,BYTE PTR [rsi-0x1a291c08]
   14001b856:	std    
   14001b857:	(bad)  
   14001b858:	retf   0xa01d
   14001b85b:	fadd   QWORD PTR [rcx]
   14001b85d:	retf   0x3ffd
   14001b860:	fild   DWORD PTR [rcx-0x519f8947]
   14001b866:	std    
   14001b867:	(bad)  
   14001b868:	mov    bh,BYTE PTR [rdi+0x1e]
   14001b86b:	and    esi,edx
   14001b86d:	xchg   edx,eax
   14001b86e:	std    
   14001b86f:	(bad)  
   14001b870:	xor    al,0x2c
   14001b872:	mov    eax,0xfd77b654
   14001b877:	(bad)  
   14001b878:	mov    dl,0x72
   14001b87a:	jne    0x14001b7fc
   14001b87c:	lods   al,BYTE PTR ds:[rsi]
   14001b87d:	pop    rsp
   14001b87e:	std    
   14001b87f:	(bad)  
   14001b880:	sbb    eax,0xd41d41d4
   14001b885:	rex.B std 
   14001b887:	(bad)  
   14001b888:	sbb    bl,BYTE PTR [rbx-0x4]
   14001b88b:	movabs ds:0x8f6ec0743ffd272c,eax
   14001b894:	mov    ch,0xc
   14001b896:	std    
   14001b897:	(bad)  
   14001b898:	(bad)  
   14001b899:	mov    edi,0xf26e5c44
   14001b89e:	cld    
   14001b89f:	(bad)  
   14001b8a0:	or     ebx,DWORD PTR [rbx-0x27a976fd]
   14001b8a6:	cld    
   14001b8a7:	(bad)  
   14001b8a8:	out    0xcb,eax
   14001b8aa:	add    DWORD PTR [rsi+0x3ffcbe6d],edx
   14001b8b0:	xchg   ecx,eax
   14001b8b1:	loope  0x14001b911
   14001b8b3:	add    eax,0x3ffca4b3
   14001b8b8:	rex.X mov dil,bl
   14001b8bb:	pop    rdx
   14001b8bc:	es mov edi,esp
   14001b8bf:	(bad)  
   14001b8c0:	sbb    al,0xc7
   14001b8c2:	jno    0x14001b8e0
   14001b8c4:	(bad)  
   14001b8c5:	jno    0x14001b8c3
   14001b8c7:	(bad)  
   14001b8c8:	xchg   BYTE PTR [rcx+0xd],cl
   14001b8cb:	rcl    DWORD PTR [rax+rbx*2-0x70fc004],1
   14001b8d2:	ret    
   14001b8d3:	add    DWORD PTR [rdi+0x1c3ffc3f],ecx
   14001b8d9:	movabs al,ds:0xc0e03ffc26b5392e
   14001b8e2:	add    DWORD PTR [rbx],0x3ffc0e07
   14001b8e8:	mov    ecx,DWORD PTR [rbp-0xa7c117a]
   14001b8ee:	sti    
   14001b8ef:	(bad)  
   14001b8f0:	test   DWORD PTR [rsi],0xdd2b8994
   14001b8f6:	sti    
   14001b8f7:	(bad)  
   14001b8f8:	jnp    0x14001b938
   14001b8fa:	mov    BYTE PTR [rbp-0x3],ah
   14001b8fd:	(bad)  
   14001b8fe:	sti    
   14001b8ff:	(bad)  
   14001b900:	sar    BYTE PTR [rdx-0x5306eb3f],1
   14001b906:	sti    
   14001b907:	(bad)  
   14001b908:	and    edi,edi
   14001b90a:	sbb    BYTE PTR [rbx],ch
   14001b90c:	(bad)  
   14001b90d:	xchg   ebp,eax
   14001b90e:	sti    
   14001b90f:	(bad)  
   14001b910:	mov    esi,DWORD PTR [rbx]
   14001b912:	fidivr DWORD PTR [rip+0x3ffb7d6c]        # 0x17ffd3684
   14001b918:	add    eax,0xe2e3beee
   14001b91d:	gs sti 
   14001b91f:	(bad)  
   14001b920:	rex.WRXB sbb r13,r8
   14001b923:	mov    ah,0x81
   14001b925:	rex.WRX sti 
   14001b927:	(bad)  
   14001b928:	(bad)  
   14001b929:	(bad)  
   14001b92a:	fmul   DWORD PTR [rdx+0x48]
   14001b92d:	(bad)  
   14001b92e:	sti    
   14001b92f:	(bad)  
   14001b930:	fld    DWORD PTR [rax+0x2036406c]
   14001b936:	sti    
   14001b937:	(bad)  
   14001b938:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b939:	and    bl,cl
   14001b93b:	xor    DWORD PTR [rbx+0x9],ecx
   14001b93e:	sti    
   14001b93f:	(bad)  
   14001b940:	sub    BYTE PTR [rdi-0xd79435f],ch
   14001b946:	cli    
   14001b947:	(bad)  
   14001b948:	pop    rsi
   14001b949:	nop
   14001b94a:	xchg   esp,eax
   14001b94b:	jg     0x14001b935
   14001b94d:	(bad)  
   14001b94f:	(bad)  
   14001b950:	sbb    esi,DWORD PTR [rax-0x3b]
   14001b953:	sbb    dh,BYTE PTR [rax-0x3b]
   14001b956:	cli    
   14001b957:	(bad)  
   14001b958:	std    
   14001b959:	jmp    0x14001b8e2
   14001b95b:	(bad)  
   14001b95c:	sbb    eax,0xbe3ffaaf
   14001b961:	movsxd ebp,DWORD PTR [rdx+0x60]
   14001b964:	out    dx,eax
   14001b965:	cwde   
   14001b966:	cli    
   14001b967:	(bad)  
   14001b968:	pop    rcx
   14001b969:	loope  0x14001b99b
   14001b96b:	push   rcx
   14001b96c:	out    0x82,al
   14001b96e:	cli    
   14001b96f:	(bad)  
   14001b970:	ins    DWORD PTR es:[rdi],dx
   14001b971:	sbb    dl,al
   14001b973:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b974:	add    DWORD PTR [rbp-0x6],ebp
   14001b977:	(bad)  
   14001b978:	rex.WX mov bpl,BYTE PTR [rax+0x7]
   14001b97c:	push   r15
   14001b97e:	cli    
   14001b97f:	(bad)  
   14001b980:	sbb    ah,BYTE PTR [rcx+rax*2-0x5be5be6]
   14001b987:	(bad)  
   14001b988:	movabs al,ds:0x23ffa2c2a87c51c
   14001b991:	rex.WXB jp 0x14001b98d
   14001b994:	rcl    DWORD PTR [rsi],cl
   14001b996:	cli    
   14001b997:	(bad)  
   14001b998:	sbb    ah,BYTE PTR [rax+0x1a01a01]
   14001b99e:	cli    
   14001b99f:	(bad)  
   14001b9a0:	fnstenv [rbx]
   14001b9a2:	adc    BYTE PTR [rbp+0x3ff9ec8e],dl
   14001b9a8:	sub    eax,0x9f176b68
   14001b9ad:	xlat   BYTE PTR ds:[rbx]
   14001b9ae:	stc    
   14001b9af:	(bad)  
   14001b9b0:	add    ah,BYTE PTR [rcx-0x3d2eb11c]
   14001b9b6:	stc    
   14001b9b7:	(bad)  
   14001b9b8:	ficom  DWORD PTR [rax]
   14001b9ba:	push   rbp
   14001b9bb:	(bad)  
   14001b9bc:	and    al,0xae
   14001b9be:	stc    
   14001b9bf:	(bad)  
   14001b9c0:	(bad)  
   14001b9c1:	cdq    
   14001b9c2:	cdq    
   14001b9c3:	cdq    
   14001b9c4:	cdq    
   14001b9c5:	cdq    
   14001b9c6:	stc    
   14001b9c7:	(bad)  
   14001b9c8:	inc    eax
   14001b9ca:	mov    cs,WORD PTR [rip+0x3ff9852f]        # 0x17ffb3eff
   14001b9d0:	jb     0x14001b98a
   14001b9d2:	or     al,0xf8
   14001b9d4:	in     al,0x70
   14001b9d6:	stc    
   14001b9d7:	(bad)  
   14001b9d8:	scas   al,BYTE PTR es:[rdi]
   14001b9d9:	ja     0x14001b9be
   14001b9db:	or     edi,DWORD PTR [rbx-0x1fc006a4]
   14001b9e1:	jmp    0x188b2b6bc
   14001b9e6:	stc    
   14001b9e7:	(bad)  
   14001b9e8:	out    0x2c,al
   14001b9ea:	fwait
   14001b9eb:	jg     0x14001b9b3
   14001b9ed:	xor    al,0xf9
   14001b9ef:	(bad)  
   14001b9f0:	sub    edx,esp
   14001b9f2:	ror    BYTE PTR [rcx-0x5],1
   14001b9f5:	and    cl,bh
   14001b9f7:	(bad)  
   14001b9f8:	(bad)  
   14001b9f9:	nop
   14001b9fa:	add    DWORD PTR [rdx],edx
   14001b9fc:	rex.WRXB or rax,0x18fa3ff9
   14001ba02:	pushf  
   14001ba03:	pop    rcx
   14001ba05:	stc    
   14001ba06:	clc    
   14001ba07:	(bad)  
   14001ba08:	(bad)  
   14001ba09:	(bad)  
   14001ba0a:	icebp  
   14001ba0b:	jp     0x14001ba5f
   14001ba0d:	out    0xf8,al
   14001ba0f:	(bad)  
   14001ba10:	rcr    DWORD PTR [rax],cl
   14001ba12:	xor    BYTE PTR [rbp+0x3ff8d301],cl
   14001ba18:	cmp    bh,bh
   14001ba1a:	(bad)  
   14001ba1b:	or     dh,0xbf
   14001ba1e:	clc    
   14001ba1f:	(bad)  
   14001ba20:	stos   BYTE PTR es:[rdi],al
   14001ba21:	repz imul ecx,DWORD PTR [rdi],0xffffffb9
   14001ba25:	lods   al,BYTE PTR ds:[rsi]
   14001ba26:	clc    
   14001ba27:	(bad)  
   14001ba28:	pushf  
   14001ba29:	mov    DWORD PTR [rcx],eax
   14001ba2b:	test   al,0x99
   14001ba2e:	clc    
   14001ba2f:	(bad)  
   14001ba30:	rex.WX mov al,0xab
   14001ba33:	lock in eax,0x86
   14001ba36:	clc    
   14001ba37:	(bad)  
   14001ba38:	mov    ecx,0x27bcc092
   14001ba3d:	je     0x14001ba37
   14001ba3f:	(bad)  
   14001ba40:	sbb    BYTE PTR [rsi+0x61861861],al
   14001ba46:	clc    
   14001ba47:	(bad)  
   14001ba48:	adc    al,0x6
   14001ba4a:	js     0x14001ba0e
   14001ba4c:	add    BYTE PTR [rdi-0x8],cl
   14001ba4f:	(bad)  
   14001ba50:	fnstsw WORD PTR [rsi+0x3c977ab2]
   14001ba56:	clc    
   14001ba57:	(bad)  
   14001ba58:	movabs al,ds:0x183ff82a4a0182a4
   14001ba61:	sbb    BYTE PTR [rax],bl
   14001ba63:	sbb    BYTE PTR [rax],bl
   14001ba65:	sbb    al,bh
   14001ba67:	(bad)  
   14001ba68:	(bad)  
   14001ba69:	sbb    BYTE PTR [rax-0x80],ah
   14001ba6c:	add    DWORD PTR [rsi],eax
   14001ba6e:	clc    
   14001ba6f:	(bad)  
   14001ba70:	rex jg 0x14001ba74
   14001ba73:	std    
   14001ba74:	add    eax,0x1d3ff7f4
   14001ba79:	rex.WRXB pop r10
   14001ba7b:	push   rcx
   14001ba7c:	and    eax,0xf43ff7e2
   14001ba81:	add    eax,0xd05f417d
   14001ba86:	idiv   DWORD PTR [rdi]
   14001ba88:	jl     0x14001ba8b
   14001ba8a:	cs xchg edx,eax
   14001ba8c:	mov    bl,0xbe
   14001ba8e:	idiv   DWORD PTR [rdi]
   14001ba90:	ret    
   14001ba91:	in     al,dx
   14001ba92:	loopne 0x14001ba9c
   14001ba94:	and    ch,BYTE PTR [rbp+0x398b3ff7]
   14001ba9a:	mov    dh,0x6b
   14001ba9c:	stos   BYTE PTR es:[rdi],al
   14001ba9d:	fwait
   14001ba9e:	idiv   DWORD PTR [rdi]
   14001baa0:	enter  0x78a4,0x81
   14001baa4:	rex.WR mov r14b,dil
   14001baa7:	(bad)  
   14001baa8:	or     eax,0x8119ac6
   14001baad:	jns    0x14001baa6
   14001baaf:	(bad)  
   14001bab0:	mov    cl,0xa9
   14001bab2:	xor    al,0xe4
   14001bab4:	fsub   QWORD PTR [rdi-0x9]
   14001bab7:	(bad)  
   14001bab8:	ins    DWORD PTR es:[rdi],dx
   14001bab9:	jne    0x14001babc
   14001babb:	ret    0x56ca
   14001babe:	idiv   DWORD PTR [rdi]
   14001bac0:	rex.RX (bad) 
   14001bac2:	pop    rbp
   14001bac3:	je     0x14001ba96
   14001bac5:	rex.RB idiv DWORD PTR [r15]
   14001bac8:	(bad)  
   14001bac9:	inc    BYTE PTR [rcx-0x3b]
   14001bacc:	lock xor al,0xf7
   14001bacf:	(bad)  
   14001bad0:	mov    esp,0x287f46de
   14001bad5:	and    al,0xf7
   14001bad7:	(bad)  
   14001bad8:	or     DWORD PTR [rsp+rbx*4+0x6d],edi
   14001badc:	js     0x14001baf1
   14001bade:	idiv   DWORD PTR [rdi]
   14001bae0:	jo     0x14001ba63
   14001bae2:	or     ebx,DWORD PTR [rax+riz*8+0x2]
   14001bae6:	idiv   DWORD PTR [rdi]
   14001bae8:	(bad)  
   14001bae9:	(bad)  
   14001baea:	repnz (bad) 
   14001baec:	(bad)  
   14001baed:	repnz idiv BYTE PTR [rdi]
   14001baf0:	(bad)  
   14001baf1:	(bad)  
   14001baf2:	rex.XB imul esi,r15d,0xffffffe1
   14001baf6:	idiv   BYTE PTR [rdi]
   14001baf8:	(bad)  
   14001baf9:	enter  0x2681,0xa6
   14001bafd:	shl    esi,1
   14001baff:	(bad)  
   14001bb00:	(bad)  
   14001bb01:	ins    BYTE PTR es:[rdi],dx
   14001bb02:	rcl    DWORD PTR [rsi],0x6c
   14001bb05:	shl    esi,0x3f
   14001bb08:	cmp    eax,0x490aa31a
   14001bb0d:	mov    cl,0xf6
   14001bb0f:	(bad)  
   14001bb10:	nop
   14001bb11:	jb     0x14001bb66
   14001bb13:	sar    DWORD PTR [rcx+riz*4],1
   14001bb16:	idiv   BYTE PTR [rdi]
   14001bb18:	rcl    al,0x88
   14001bb1b:	cmp    al,BYTE PTR [rdi-0x6f]
   14001bb1e:	idiv   BYTE PTR [rdi]
   14001bb20:	(bad)  
   14001bb21:	push   0xffffffff81681681
   14001bb26:	idiv   BYTE PTR [rdi]
   14001bb28:	sbb    ah,BYTE PTR [rdi+0x1]
   14001bb2b:	ss lahf 
   14001bb2d:	jno    0x14001bb25
   14001bb2f:	(bad)  
   14001bb30:	stc    
   14001bb31:	and    dl,BYTE PTR [rcx+0x6a]
   14001bb34:	in     al,dx
   14001bb35:	(bad)  
   14001bb36:	idiv   BYTE PTR [rdi]
   14001bb38:	movabs ds:0x643ff6524f853b4a,eax
   14001bb41:	and    DWORD PTR [rbx],ecx
   14001bb43:	pop    rcx
   14001bb44:	enter  0xf642,0x3f
   14001bb48:	faddp  st(0),st
   14001bb4a:	mov    bh,BYTE PTR [rax+0x3ff63356]
   14001bb50:	(bad)
   14001bb56:	idiv   BYTE PTR [rdi]
   14001bb58:	xchg   esp,eax
   14001bb59:	scas   al,BYTE PTR es:[rdi]
   14001bb5a:	xor    DWORD PTR [rax-0x4d],ebp
   14001bb5d:	adc    al,0xf6
   14001bb5f:	(bad)  
   14001bb60:	(bad)  
   14001bb61:	(bad)  
   14001bb62:	pop    rax
   14001bb63:	(bad)  
   14001bb64:	add    DWORD PTR [rip+0x2dfc3ff6],0xf6643429        # 0x16dfdfb64
   14001bb6e:	cmc    
   14001bb6f:	(bad)  
   14001bb70:	out    0x15,eax
   14001bb72:	sar    BYTE PTR [rax+0x3ff5e75b],1
   14001bb78:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bb79:	loop   0x14001bb67
   14001bb7b:	ret    
   14001bb7c:	addr32 fdiv st,st(5)
   14001bb7f:	(bad)  
   14001bb80:	push   rdi
   14001bb81:	adc    BYTE PTR [rbx-0xa3677d5],dl
   14001bb87:	(bad)  
   14001bb88:	xchg   ecx,eax
   14001bb89:	cli    
   14001bb8a:	rex.RXB (bad) 
   14001bb8c:	mov    esp,0xc03ff5ba
   14001bb91:	pop    rdx
   14001bb92:	add    DWORD PTR [rbx+0x5],ebp
   14001bb95:	lods   al,BYTE PTR ds:[rsi]
   14001bb96:	cmc    
   14001bb97:	(bad)  
   14001bb98:	stos   BYTE PTR es:[rdi],al
   14001bb99:	int3   
   14001bb9a:	and    esi,ecx
   14001bb9c:	(bad)  
   14001bb9d:	popf   
   14001bb9e:	cmc    
   14001bb9f:	(bad)  
   14001bba0:	in     eax,dx
   14001bba1:	pop    rax
   14001bba2:	xor    DWORD PTR [rax],0x3ff58ed2
   14001bba8:	(bad)  
   14001bba9:	add    eax,0x80560158
   14001bbae:	cmc    
   14001bbaf:	(bad)  
   14001bbb0:	cmp    ch,BYTE PTR [rbx+0x50]
   14001bbb3:	cmp    al,0xed
   14001bbb5:	jno    0x14001bbac
   14001bbb7:	(bad)  
   14001bbb8:	loop   0x14001bc0c
   14001bbba:	jl     0x14001bb76
   14001bbbc:	xchg   edi,eax
   14001bbbd:	movsxd esi,ebp
   14001bbbf:	(bad)  
   14001bbc0:	push   rbp
   14001bbc1:	push   rbp
   14001bbc2:	push   rbp
   14001bbc3:	push   rbp
   14001bbc4:	push   rbp
   14001bbc5:	push   rbp
   14001bbc6:	cmc    
   14001bbc7:	(bad)  
   14001bbc8:	inc    BYTE PTR [rdx+0x4725e6bb]
   14001bbce:	cmc    
   14001bbcf:	(bad)  
   14001bbd0:	jmp    0x14001bbe1
   14001bbd2:	hlt    
   14001bbd3:	or     QWORD PTR [rcx],rdi
   14001bbd6:	cmc    
   14001bbd7:	(bad)  
   14001bbd8:	rex.WXB add rax,0x2aff56a8
   14001bbde:	cmc    
   14001bbdf:	(bad)  
   14001bbe0:	adc    eax,0x7eae2f8
   14001bbe5:	sbb    eax,0xc4c53ff5
   14001bbea:	adc    ecx,esp
   14001bbec:	and    cl,BYTE PTR [rdi]
   14001bbee:	cmc    
   14001bbef:	(bad)  
   14001bbf0:	adc    eax,0x50150150
   14001bbf5:	add    ebp,esi
   14001bbf7:	(bad)  
   14001bbf8:	rex.WR frstor [rdx-0x71]
   14001bbfd:	repz hlt 
   14001bbff:	(bad)  
   14001bc00:	cmp    DWORD PTR [rip+0xffffffffe5e0a72f],eax        # 0x125e26335
   14001bc06:	hlt    
   14001bc07:	(bad)  
   14001bc08:	rex.WR sub al,0xdc
   14001bc0b:	mov    esi,0x3ff4d843
   14001bc10:	outs   dx,BYTE PTR ds:[rsi]
   14001bc11:	scas   eax,DWORD PTR es:[rdi]
   14001bc12:	and    eax,0xf4cab887
   14001bc17:	(bad)  
   14001bc18:	loope  0x14001bba9
   14001bc1a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bc1b:	fnstsw WORD PTR [rsi]
   14001bc1d:	mov    ebp,0xbf5b3ff4
   14001bc22:	push   rdx
   14001bc23:	movabs al,ds:0xad76014a3ff4afd6
   14001bc2c:	jg     0x14001bbd0
   14001bc2e:	hlt    
   14001bc2f:	(bad)  
   14001bc30:	shl    BYTE PTR [edx-0xb6ac61d],1
   14001bc37:	(bad)  
   14001bc38:	or     BYTE PTR [rax+0x1],0x22
   14001bc3c:	add    eax,0x7b3ff488
   14001bc41:	adc    al,0xae
   14001bc43:	rex.RXB loope 0x14001bcc0
   14001bc46:	hlt    
   14001bc47:	(bad)  
   14001bc48:	data16 (bad) 
   14001bc4a:	pop    rcx
   14001bc4b:	xor    al,0xce
   14001bc4d:	ins    DWORD PTR es:[rdi],dx
   14001bc4e:	hlt    
   14001bc4f:	(bad)  
   14001bc50:	(bad)  
   14001bc51:	iret   
   14001bc52:	cmc    
   14001bc53:	(bad)  
   14001bc54:	retf   
   14001bc55:	(bad)  
   14001bc56:	hlt    
   14001bc57:	(bad)  
   14001bc58:	retf   0xc776
   14001bc5b:	loop   0x14001bc36
   14001bc5d:	push   rbx
   14001bc5e:	hlt    
   14001bc5f:	(bad)  
   14001bc60:	sti    
   14001bc61:	fldenv [rdx+0x65]
   14001bc64:	clc    
   14001bc65:	rex.RX hlt 
   14001bc67:	(bad)  
   14001bc68:	rex.WRB out dx,al
   14001bc6a:	stos   DWORD PTR es:[rdi],eax
   14001bc6b:	xor    BYTE PTR [rdi],ah
   14001bc6d:	cmp    dh,ah
   14001bc6f:	(bad)  
   14001bc70:	xchg   DWORD PTR [rdi],ebx
   14001bc72:	(bad)  
   14001bc73:	and    eax,0x3ff42d66
   14001bc78:	push   rcx
   14001bc79:	pop    rcx
   14001bc7a:	pop    rsi
   14001bc7b:	es mov ch,0x20
   14001bc7e:	hlt    
   14001bc7f:	(bad)  
   14001bc80:	adc    al,0x14
   14001bc82:	adc    al,0x14
   14001bc84:	adc    al,0x14
   14001bc86:	hlt    
   14001bc87:	(bad)  
   14001bc88:	data16 gs (bad) 
   14001bc8b:	rol    DWORD PTR [rdx-0x4c00bf9],1
   14001bc91:	adc    esi,DWORD PTR [rax-0xc04fec1]
   14001bc97:	(bad)  
   14001bc98:	(bad)  
   14001bc99:	scas   eax,DWORD PTR es:[rdi]
   14001bc9a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bc9b:	rex.X (bad) 
   14001bc9d:	out    dx,al
   14001bc9e:	repz (bad) 
   14001bca0:	add    ch,BYTE PTR [rcx-0x1dd3431c]
   14001bca6:	repz (bad) 
   14001bca8:	(bad)  
   14001bca9:	jne    0x14001bc55
   14001bcab:	xchg   ecx,eax
   14001bcac:	(bad)  
   14001bcae:	repz (bad) 
   14001bcb0:	out    0xab,eax
   14001bcb2:	jnp    0x14001bc58
   14001bcb4:	xchg   ebp,eax
   14001bcb5:	leave  
   14001bcb6:	repz (bad) 
   14001bcb8:	push   rbp
   14001bcb9:	sub    DWORD PTR [rbx],esp
   14001bcbb:	fldenv [rax-0x43]
   14001bcbe:	repz (bad) 
   14001bcc0:	adc    al,0x3b
   14001bcc2:	mov    cl,0x13
   14001bcc4:	cmp    esi,DWORD PTR [rcx-0x37ddc00d]
   14001bcca:	jp     0x14001bd04
   14001bccc:	and    al,0xa5
   14001bcce:	repz (bad) 
   14001bcd0:	movsxd edi,DWORD PTR [rdi+0x18]
   14001bcd3:	sub    al,0x1c
   14001bcd5:	cdq    
   14001bcd6:	repz (bad) 
   14001bcd8:	mov    cs,WORD PTR [rax]
   14001bcda:	shl    WORD PTR [rdx],cl
   14001bcdd:	(bad)  
   14001bcde:	repz (bad) 
   14001bce0:	adc    al,0x38
   14001bce2:	adc    DWORD PTR [rbx],0x3ff38138
   14001bce8:	out    dx,al
   14001bce9:	rex.RB leave 
   14001bceb:	rcr    DWORD PTR [rbx+0x75],1
   14001bcee:	repz (bad) 
   14001bcf0:	rex.W (bad) 
   14001bcf2:	fdivrp st(3),st
   14001bcf4:	lea    ebp,[rcx-0xd]
   14001bcf7:	(bad)  
   14001bcf8:	clc    
   14001bcf9:	sub    bl,BYTE PTR [rdi-0xca231a1]
   14001bcff:	(bad)  
   14001bd00:	sar    DWORD PTR [rax+0x2b],0xfb
   14001bd04:	sbb    al,0x52
   14001bd06:	repz (bad) 
   14001bd08:	rex.RX adc r12d,eax
   14001bd0b:	lods   al,BYTE PTR ds:[rsi]
   14001bd0c:	jns    0x14001bd54
   14001bd0e:	repz (bad) 
   14001bd10:	mov    dl,0xbc
   14001bd12:	push   rdi
   14001bd13:	pop    rbx
   14001bd14:	in     al,0x3a
   14001bd16:	repz (bad) 
   14001bd18:	cli    
   14001bd19:	sbb    eax,0x2f5ced6a
   14001bd1e:	repz (bad) 
   14001bd20:	mov    edi,0xe34a2b10
   14001bd25:	and    esi,ebx
   14001bd27:	(bad)  
   14001bd28:	mov    dh,0xeb
   14001bd2a:	jmp    0x1331a3487
   14001bd2f:	(bad)  
   14001bd30:	nop
   14001bd31:	shl    DWORD PTR [rax],1
   14001bd33:	add    DWORD PTR [rcx],ebx
   14001bd35:	or     eax,0x2603ff3
   14001bd3a:	(bad)  
   14001bd3b:	sub    cl,al
   14001bd3d:	add    ebx,esi
   14001bd3f:	(bad)  
   14001bd40:	push   0xffffffff84bda12f
   14001bd45:	div    dl
   14001bd47:	(bad)  
   14001bd48:	rex.WXB sar r14,1
   14001bd4b:	movabs eax,ds:0xc04b80973ff2eb4e
   14001bd54:	and    eax,0xa03ff2e0
   14001bd59:	push   rax
   14001bd5a:	sub    eax,0xf2d50a01
   14001bd5f:	(bad)  
   14001bd60:	movabs al,ds:0x113ff2c9fb4d812c
   14001bd69:	(bad)  
   14001bd6a:	pop    rdx
   14001bd6b:	mov    ?,ecx
   14001bd6d:	mov    esi,0x2b403ff2
   14001bd72:	add    DWORD PTR [rbp+0x3ff2b404],ebp
   14001bd78:	add    eax,0x1c92f3c1
   14001bd7d:	test   eax,0x129e3ff2
   14001bd82:	in     al,0x29
   14001bd84:	rex.B sahf 
   14001bd86:	repnz (bad) 
   14001bd88:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bd89:	add    al,0xb8
   14001bd8b:	pop    rbx
   14001bd8c:	jb     0x14001bd21
   14001bd8e:	repnz (bad) 
   14001bd90:	adc    esi,DWORD PTR [rax-0x774fed78]
   14001bd96:	repnz (bad) 
   14001bd98:	rex.WRB (bad) 
   14001bd9a:	movabs eax,ds:0x8127353ff27dfa38
   14001bda3:	mov    eax,0x3ff27350
   14001bda8:	(bad)  
   14001bda9:	add    esi,edx
   14001bdab:	jl     0x14001bd60
   14001bdad:	push   0xffffffff92f13ff2
   14001bdb2:	xor    BYTE PTR [rax+0x22],0x5e
   14001bdb6:	repnz (bad) 
   14001bdb8:	mov    dl,0x77
   14001bdba:	xchg   ecx,eax
   14001bdbb:	jle    0x14001bd5a
   14001bdbd:	push   rbx
   14001bdbe:	repnz (bad) 
   14001bdc0:	xchg   edx,eax
   14001bdc1:	and    al,0x49
   14001bdc3:	xchg   edx,eax
   14001bdc4:	and    al,0x49
   14001bdc6:	repnz (bad) 
   14001bdc8:	pop    rbx
   14001bdc9:	(bad)  
   14001bdca:	(bad)  
   14001bdcb:	xchg   edi,eax
   14001bdcc:	mov    bh,0x3e
   14001bdce:	repnz (bad) 
   14001bdd0:	fistp  QWORD PTR [rdx+rbx*4-0xdcba988]
   14001bdd7:	(bad)  
   14001bdd8:	sub    dl,BYTE PTR [rdx]
   14001bdda:	movabs al,ds:0x21fb783ff22a0122
   14001bde3:	xor    DWORD PTR [rdi-0x19c00de1],0x79804855
   14001bded:	adc    eax,0xc0d93ff2
   14001bdf2:	addr32 or al,0x47
   14001bdf5:	or     esi,edx
   14001bdf7:	(bad)  
   14001bdf8:	adc    ah,BYTE PTR [rax]
   14001bdfa:	add    DWORD PTR [rdx],edx
   14001bdfc:	and    BYTE PTR [rcx],al
   14001bdfe:	repnz (bad) 
   14001be00:	jo     0x14001be21
   14001be02:	sar    DWORD PTR [rbp+0x4],0xf7
   14001be06:	icebp  
   14001be07:	(bad)  
   14001be08:	rex.WR movabs rax,0xb8743ff1ecf43c7f
   14001be12:	(bad)  
   14001be13:	cmp    ebp,edi
   14001be15:	loop   0x14001be08
   14001be17:	(bad)  
   14001be18:	mov    ebp,0xf5672e4a
   14001be1d:	fdiv   st,st(1)
   14001be1f:	(bad)  
   14001be20:	sbb    eax,0x6ada281
   14001be25:	iret   
   14001be26:	icebp  
   14001be27:	(bad)  
   14001be28:	pop    rcx
   14001be29:	loopne 0x14001be47
   14001be2b:	cld    
   14001be2c:	and    al,ch
   14001be2e:	icebp  
   14001be2f:	(bad)  
   14001be30:	sub    ebp,ebp
   14001be32:	rex.RX
   14001be33:	rex
   14001be34:	rex.WX movabs rbx,0xb17c67f2bae33ff1
   14001be3e:	icebp  
   14001be3f:	(bad)  
   14001be40:	xchg   esi,eax
   14001be41:	jnp    0x14001be5d
   14001be43:	(bad)  
   14001be44:	mov    ecx,0x9e3ff1a7
   14001be49:	adc    eax,esp
   14001be4b:	sbb    DWORD PTR [rcx],eax
   14001be4d:	sahf   
   14001be4e:	icebp  
   14001be4f:	(bad)  
   14001be50:	pushf  
   14001be51:	movabs ds:0x2bdb3ff19453808c,al
   14001be5a:	nop
   14001be5b:	xor    DWORD PTR [rax+0x123ff18a],0x18
   14001be62:	adc    DWORD PTR [rcx],0x3ff18118
   14001be68:	test   dh,dl
   14001be6a:	sbb    ebx,DWORD PTR [rcx]
   14001be6c:	mov    dh,BYTE PTR [rdi-0xf]
   14001be6f:	(bad)  
   14001be70:	jns    0x14001bee5
   14001be72:	rex.X mov DWORD PTR [rsi],eax
   14001be75:	outs   dx,BYTE PTR ds:[rsi]
   14001be76:	icebp  
   14001be77:	(bad)  
   14001be78:	add    DWORD PTR [rdx],esi
   14001be7a:	cld    
   14001be7b:	push   rax
   14001be7c:	lea    esp,[rcx+rsi*8+0x3f]
   14001be80:	or     eax,0x1e5f7527
   14001be85:	pop    rbx
   14001be86:	icebp  
   14001be87:	(bad)  
   14001be88:	leave  
   14001be89:	(bad)  
   14001be8a:	std    
   14001be8b:	movabs ds:0xe0acd3b3ff151b9,eax
   14001be94:	pop    rdi
   14001be95:	rex.W icebp 
   14001be97:	(bad)  
   14001be98:	and    al,0x47
   14001be9a:	xor    al,0x8d
   14001be9c:	(bad)  
   14001be9d:	(bad)  
   14001be9e:	icebp  
   14001be9f:	(bad)  
   14001bea0:	adc    eax,ecx
   14001bea2:	xor    eax,0xf135c811
   14001bea7:	(bad)  
   14001bea8:	lods   al,BYTE PTR ds:[rsi]
   14001bea9:	shr    ch,0x89
   14001beac:	mov    ebp,DWORD PTR [rcx+rsi*8]
   14001beaf:	(bad)  
   14001beb0:	xor    esi,DWORD PTR [rax]
   14001beb2:	pop    rbp
   14001beb3:	out    0x58,eax
   14001beb5:	and    esi,ecx
   14001beb7:	(bad)  
   14001beb8:	cmps   QWORD PTR es:[rsi],QWORD PTR es:[rdi]
   14001bebb:	sbb    DWORD PTR [rax],esi
   14001bebd:	sbb    dh,cl
   14001bebf:	(bad)  
   14001bec0:	adc    DWORD PTR [rcx],edx
   14001bec2:	adc    DWORD PTR [rcx],edx
   14001bec4:	adc    DWORD PTR [rcx],edx
   14001bec6:	icebp  
   14001bec7:	(bad)  
   14001bec8:	adc    BYTE PTR [rax],0x1
   14001becb:	mov    esi,0x3ff107fb
   14001bed0:	adc    eax,esi
   14001bed2:	(bad)  
   14001bed3:	adc    al,dh
   14001bed5:	(bad)  
   14001bed6:	lock (bad) 
   14001bed8:	movabs ds:0x903ff0f5edfab325,al
   14001bee1:	pushf  
   14001bee2:	out    0x6b,al
   14001bee4:	cmc    
   14001bee5:	in     al,dx
   14001bee6:	lock (bad) 
   14001bee8:	adc    DWORD PTR [rax-0x7e],esp
   14001beeb:	push   rbp
   14001beec:	(bad)  
   14001beed:	in     al,0xf0
   14001beef:	(bad)  
   14001bef0:	xchg   esi,eax
   14001bef1:	(bad)
   14001bef6:	lock (bad) 
   14001bef8:	cmp    bl,BYTE PTR [rsi-0x2dbba9cb]
   14001befe:	lock (bad) 
   14001bf00:	cmp    ebx,edx
   14001bf02:	mov    esp,0xf0c9714f
   14001bf07:	(bad)  
   14001bf08:	jno    0x14001bf4b
   14001bf0a:	mov    eax,DWORD PTR [rsi+0x3ff0c0a7]
   14001bf10:	enter  0x259d,0xec
   14001bf14:	out    0xb7,al
   14001bf16:	lock (bad) 
   14001bf18:	mov    ch,0xec
   14001bf1a:	cs jb  0x14001bf4c
   14001bf1d:	scas   eax,DWORD PTR es:[rdi]
   14001bf1e:	lock (bad) 
   14001bf20:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bf21:	adc    BYTE PTR [rax+0xa],ch
   14001bf24:	and    DWORD PTR [rsi-0x7c9fc010],0x9ddba6af
   14001bf2e:	lock (bad) 
   14001bf30:	push   rsp
   14001bf31:	or     DWORD PTR [rcx],eax
   14001bf33:	cmp    DWORD PTR [rdi],edi
   14001bf35:	xchg   ebp,eax
   14001bf36:	lock (bad) 
   14001bf38:	loop   0x14001bf9f
   14001bf3a:	jne    0x14001beef
   14001bf3c:	stos   DWORD PTR es:[rdi],eax
   14001bf3d:	mov    eax,?
   14001bf3f:	(bad)  
   14001bf40:	test   BYTE PTR [rax],dl
   14001bf42:	rex.X or BYTE PTR [rcx],spl
   14001bf45:	test   al,dh
   14001bf47:	(bad)  
   14001bf48:	loop   0x14001bf34
   14001bf4a:	mov    eax,0xf07b9f29
   14001bf4f:	(bad)  
   14001bf50:	(bad)  
   14001bf51:	test   DWORD PTR [rdi+0xa],0x3ff07326
   14001bf58:	sti    
   14001bf59:	adc    bh,BYTE PTR [rcx-0x64]
   14001bf5c:	mov    ch,0x6a
   14001bf5e:	lock (bad) 
   14001bf60:	cld    
   14001bf61:	test   eax,0x624dd2f1
   14001bf66:	lock (bad) 
   14001bf68:	xchg   BYTE PTR [rbp+0x72],dh
   14001bf6b:	movabs al,ds:0xf7d734043ff059ee
   14001bf74:	xchg   edi,eax
   14001bf75:	push   rcx
   14001bf76:	lock (bad) 
   14001bf78:	(bad)
   14001bf7b:	int3   
   14001bf7c:	rex.WB
   14001bf7d:	rex.WB
   14001bf7e:	lock (bad) 
   14001bf80:	adc    BYTE PTR [rcx+rax*2],al
   14001bf83:	adc    BYTE PTR [rcx+rax*2],al
   14001bf86:	lock (bad) 
   14001bf88:	cld    
   14001bf89:	rex.RXB (bad) 
   14001bf8b:	mov    bh,0xc6
   14001bf8d:	cmp    al,dh
   14001bf8f:	(bad)  
   14001bf90:	sbb    bl,BYTE PTR [rsi+0x1f]
   14001bf93:	mov    ch,0x91
   14001bf95:	xor    al,dh
   14001bf97:	(bad)  
   14001bf98:	jmp    0x1a4fe36c6
   14001bf9d:	sub    al,dh
   14001bf9f:	(bad)  
   14001bfa0:	or     BYTE PTR [rdx+rax*1],al
   14001bfa3:	add    DWORD PTR [rax+0x20],0x7a373ff0
   14001bfaa:	push   rcx
   14001bfab:	ss and al,0x18
   14001bfae:	lock (bad) 
   14001bfb0:	adc    BYTE PTR [rax],dl
   14001bfb2:	adc    BYTE PTR [rax],dl
   14001bfb4:	adc    BYTE PTR [rax],dl
   14001bfb6:	lock (bad) 
   14001bfb8:	add    BYTE PTR [rax],0x1
   14001bfbb:	add    al,BYTE PTR [rax+rcx*1]
   14001bfbe:	lock (bad) 
   14001bfc0:	add    BYTE PTR [rax],al
   14001bfc2:	add    BYTE PTR [rax],al
   14001bfc4:	add    BYTE PTR [rax],al
   14001bfc6:	lock (bad) 
	...
   14001bfd0:	ins    BYTE PTR es:[rdi],dx
   14001bfd1:	outs   dx,DWORD PTR ds:[rsi]
   14001bfd2:	xor    DWORD PTR [eax],esi
	...
   14001bfdd:	add    BYTE PTR [rax],al
   14001bfdf:	add    bh,bh
   14001bfe1:	(bad)  
   14001bfe2:	(bad)  
   14001bfe3:	(bad)  
   14001bfe4:	(bad)  
   14001bfe5:	(bad)  
   14001bfe6:	(bad)  
   14001bfe7:	rex.XB (bad) 
   14001bfe9:	(bad)  
   14001bfea:	(bad)  
   14001bfeb:	(bad)  
   14001bfec:	(bad)  
   14001bfed:	(bad)  
   14001bfee:	(bad)  
   14001bfef:	ret    
   14001bff0:	and    dh,dh
   14001bff2:	add    DWORD PTR [rax+0x1],eax
   14001bff5:	add    BYTE PTR [rax],al
   14001bff7:	add    al,al
   14001bff9:	test   BYTE PTR [rcx],0x40
   14001bffc:	add    DWORD PTR [rax],eax
   14001bffe:	add    BYTE PTR [rax],al
   14001c000:	add    BYTE PTR [rax],al
   14001c002:	add    BYTE PTR [rax],al
   14001c004:	cwde   
   14001c005:	fwait
   14001c006:	pop    rsi
   14001c007:	pop    rcx
   14001c008:	add    BYTE PTR [rax],al
   14001c00a:	add    BYTE PTR [rax],al
   14001c00c:	add    al,BYTE PTR [rax]
   14001c00e:	add    BYTE PTR [rax],al
   14001c010:	jb     0x14001c012
   14001c012:	add    BYTE PTR [rax],al
   14001c014:	in     al,dx
   14001c015:	ret    0x1
   14001c018:	in     al,dx
   14001c019:	mov    ah,0x1
   14001c01b:	add    BYTE PTR [rax],al
   14001c01d:	add    BYTE PTR [rax],al
   14001c01f:	add    BYTE PTR [rax+0x595e9b],bl
   14001c025:	add    BYTE PTR [rax],al
   14001c027:	add    BYTE PTR [rax+rax*1],cl
   14001c02a:	add    BYTE PTR [rax],al
   14001c02c:	adc    al,0x0
   14001c02e:	add    BYTE PTR [rax],al
   14001c030:	(bad)  
   14001c031:	ret    
   14001c032:	add    DWORD PTR [rax],eax
   14001c034:	(bad)  
   14001c035:	mov    ch,0x1
   14001c037:	add    BYTE PTR [rax],al
   14001c039:	add    BYTE PTR [rax],al
   14001c03b:	add    BYTE PTR [rax+0x595e9b],bl
   14001c041:	add    BYTE PTR [rax],al
   14001c043:	add    BYTE PTR [rip+0x8000000],cl        # 0x14801c049
   14001c049:	add    eax,DWORD PTR [rax]
   14001c04b:	add    BYTE PTR [rbx+rax*8+0x1],dh
   14001c04f:	add    BYTE PTR [rbp+rsi*4+0x1],dh
	...
   14001c05f:	add    BYTE PTR [rax+rax*1+0x0],dl
	...
   14001c0b6:	add    BYTE PTR [rax],al
   14001c0b8:	sbb    al,ah
   14001c0ba:	add    DWORD PTR [rax+0x1],eax
	...
   14001c0cd:	add    BYTE PTR [rax],al
   14001c0cf:	add    BYTE PTR [rax+0x42],bl
   14001c0d2:	add    DWORD PTR [rax+0x1],eax
   14001c0d5:	add    BYTE PTR [rax],al
   14001c0d7:	add    BYTE PTR [rax+0x42],ah
   14001c0da:	add    DWORD PTR [rax+0x1],eax
	...
   14001c0f1:	add    DWORD PTR [rax],eax
   14001c0f3:	add    BYTE PTR [rax],al
   14001c0f5:	add    BYTE PTR [rax],al
   14001c0f7:	add    BYTE PTR [rcx],al
	...
   14001c101:	add    BYTE PTR [rax],al
   14001c103:	add    BYTE PTR [rax-0x17],ch
   14001c106:	add    DWORD PTR [rax],eax
   14001c108:	and    cl,al
   14001c10a:	add    DWORD PTR [rax],eax
   14001c10c:	clc    
   14001c10d:	rol    BYTE PTR [rcx],0x0
	...
   14001c128:	add    DWORD PTR [rax],eax
   14001c12a:	add    BYTE PTR [rax],al
   14001c12c:	cmp    cl,al
   14001c12e:	add    DWORD PTR [rax],eax
	...
   14001c138:	rol    QWORD PTR [rcx],0x0
	...
   14001c148:	push   0x1e9
   14001c14d:	add    BYTE PTR [rax],al
   14001c14f:	add    BYTE PTR [rax],al
   14001c151:	add    BYTE PTR [rax],al
   14001c153:	add    bh,bh
   14001c155:	(bad)  
   14001c156:	(bad)  
   14001c157:	inc    DWORD PTR [rax]
   14001c159:	add    BYTE PTR [rax],al
   14001c15b:	add    BYTE PTR [rax+0x0],al
   14001c15e:	add    BYTE PTR [rax],al
   14001c160:	and    cl,al
   14001c162:	add    DWORD PTR [rax],eax
	...
   14001c170:	add    DWORD PTR [rax],eax
	...
   14001c17a:	add    BYTE PTR [rax],al
   14001c17c:	rex jmp 0x10199c183
   14001c182:	add    DWORD PTR [rax],eax
   14001c184:	jo     0x14001c147
   14001c186:	add    DWORD PTR [rax],eax
	...
   14001c1a0:	add    al,BYTE PTR [rax]
   14001c1a2:	add    BYTE PTR [rax],al
   14001c1a4:	mov    al,0xc1
   14001c1a6:	add    DWORD PTR [rax],eax
	...
   14001c1b0:	enter  0x1c1,0x0
   14001c1b4:	rol    QWORD PTR [rcx],0x0
	...
   14001c1c8:	rex jmp 0x14002c1cf
   14001c1ce:	add    BYTE PTR [rax],al
   14001c1d0:	add    BYTE PTR [rax],al
   14001c1d2:	add    BYTE PTR [rax],al
   14001c1d4:	(bad)  
   14001c1d5:	(bad)  
   14001c1d6:	(bad)  
   14001c1d7:	inc    DWORD PTR [rax]
   14001c1d9:	add    BYTE PTR [rax],al
   14001c1db:	add    BYTE PTR [rax+0x0],al
   14001c1de:	add    BYTE PTR [rax],al
   14001c1e0:	cwde   
   14001c1e1:	rol    DWORD PTR [rcx],0x0
	...
   14001c1f0:	add    DWORD PTR [rax],eax
	...
   14001c1fa:	add    BYTE PTR [rax],al
   14001c1fc:	nop
   14001c1fd:	jmp    0x10219c203
   14001c202:	add    DWORD PTR [rax],eax
   14001c204:	lock rol DWORD PTR [rcx],0x0
	...
   14001c220:	add    eax,DWORD PTR [rax]
   14001c222:	add    BYTE PTR [rax],al
   14001c224:	xor    dl,al
   14001c226:	add    DWORD PTR [rax],eax
	...
   14001c230:	push   rax
   14001c231:	ret    0x1
   14001c234:	enter  0x1c1,0x0
   14001c238:	rol    QWORD PTR [rcx],0x0
	...
   14001c250:	nop
   14001c251:	jmp    0x14003c257
   14001c256:	add    BYTE PTR [rax],al
   14001c258:	add    BYTE PTR [rax],al
   14001c25a:	add    BYTE PTR [rax],al
   14001c25c:	(bad)  
   14001c25d:	(bad)  
   14001c25e:	(bad)  
   14001c25f:	inc    DWORD PTR [rax]
   14001c261:	add    BYTE PTR [rax],al
   14001c263:	add    BYTE PTR [rax+0x0],al
   14001c266:	add    BYTE PTR [rax],al
   14001c268:	sbb    dl,al
   14001c26a:	add    DWORD PTR [rax],eax
	...
   14001c278:	add    DWORD PTR [rax],eax
	...
   14001c282:	add    BYTE PTR [rax],al
   14001c284:	shr    cl,0x1
   14001c287:	add    BYTE PTR [rax+0x780001c2],ah
   14001c28d:	ret    0x1
	...
   14001c2a8:	add    DWORD PTR [rax],eax
   14001c2aa:	add    BYTE PTR [rax],al
   14001c2ac:	mov    eax,0x1c2
   14001c2b1:	add    BYTE PTR [rax],al
   14001c2b3:	add    BYTE PTR [rax],al
   14001c2b5:	add    BYTE PTR [rax],al
   14001c2b7:	add    al,cl
   14001c2b9:	ret    0x1
	...
   14001c2c8:	shr    cl,0x1
	...
   14001c2d3:	add    bh,bh
   14001c2d5:	(bad)  
   14001c2d6:	(bad)  
   14001c2d7:	inc    DWORD PTR [rax]
   14001c2d9:	add    BYTE PTR [rax],al
   14001c2db:	add    BYTE PTR [rax+0x0],al
   14001c2de:	add    BYTE PTR [rax],al
   14001c2e0:	movabs al,ds:0x1c2
   14001c2e9:	add    BYTE PTR [rax],al
   14001c2eb:	add    BYTE PTR [rdx+0x53],dl
   14001c2ee:	rex.R push rbx
   14001c2f0:	sar    BYTE PTR [rax+0x49879cb],cl
   14001c2f6:	(bad)  
   14001c2f7:	rex.RX
   14001c2f8:	fwait
   14001c2f9:	cli    
   14001c2fa:	cmc    
   14001c2fb:	(bad)  
   14001c2fc:	gs (bad) 
   14001c2fe:	stc    
   14001c2ff:	clc    
   14001c300:	(bad)  
   14001c301:	add    BYTE PTR [rax],al
   14001c303:	add    BYTE PTR [rbx+0x3a],ah
   14001c306:	pop    rsp
   14001c307:	(bad)  
   14001c308:	jne    0x14001c373
   14001c30a:	ins    BYTE PTR es:[rdi],dx
   14001c30b:	fs jae 0x14001c37a
   14001c30e:	(bad)  
   14001c30f:	jbe    0x14001c376
   14001c311:	pop    rsp
   14001c312:	jae    0x14001c383
   14001c314:	jne    0x14001c388
   14001c316:	movsxd esp,DWORD PTR [rbp+0x32]
   14001c319:	pop    rdi
   14001c31a:	outs   dx,DWORD PTR fs:[rsi]
   14001c31c:	je     0x14001c37f
   14001c31e:	pop    rdi
   14001c31f:	jb     0x14001c386
   14001c321:	ins    BYTE PTR es:[rdi],dx
   14001c322:	pop    rdi
   14001c323:	ja     0x14001c38e
   14001c325:	outs   dx,BYTE PTR ds:[rsi]
   14001c326:	ss xor al,0x5c
   14001c329:	(bad)  
   14001c32a:	jne    0x14001c395
   14001c32c:	ins    BYTE PTR es:[rdi],dx
   14001c32d:	fs pop rsp
   14001c32f:	jae    0x14001c3a3
   14001c331:	movsxd ebx,DWORD PTR [rbp+rsi*2+0x74]
   14001c335:	imul   ebp,DWORD PTR [rbx+rsi*2+0x5c],0x6c6e6962
   14001c33d:	(bad)  
   14001c33e:	jne    0x14001c3ae
   14001c340:	movsxd ebp,DWORD PTR [rax+0x5c]
   14001c343:	push   rdx
   14001c344:	gs je  0x14001c3a8
   14001c347:	imul   ebp,DWORD PTR [rsp+rbx*2+0x77],0x34366e69
   14001c34f:	pop    rsp
   14001c350:	(bad)  
   14001c351:	imul   ebp,DWORD PTR [rsi+0x6c],0x636e7561
   14001c358:	push   0x6264702e
   14001c35d:	add    BYTE PTR [rax],al
   14001c35f:	add    BYTE PTR [rax],al
   14001c361:	add    BYTE PTR [rax],al
   14001c363:	add    ah,al
   14001c365:	add    BYTE PTR [rax],al
   14001c367:	add    bl,al
   14001c369:	add    BYTE PTR [rax],al
   14001c36b:	add    BYTE PTR [rax],al
   14001c36d:	add    BYTE PTR [rax],al
   14001c36f:	add    bl,al
	...
   14001c379:	adc    BYTE PTR [rax],al
   14001c37b:	add    BYTE PTR [rax],ah
   14001c37d:	sub    eax,DWORD PTR [rcx]
   14001c37f:	add    BYTE PTR [rsi],ch
   14001c381:	je     0x14001c3e8
   14001c383:	js     0x14001c3f9
   14001c385:	and    al,0x6d
   14001c387:	outs   dx,BYTE PTR ds:[rsi]
   14001c388:	add    BYTE PTR [rax],al
   14001c38a:	add    BYTE PTR [rax],al
   14001c38c:	and    BYTE PTR [rbx],bh
   14001c38e:	add    DWORD PTR [rax],eax
   14001c390:	and    BYTE PTR [rax],al
   14001c392:	add    BYTE PTR [rax],al
   14001c394:	cs je  0x14001c3fc
   14001c397:	js     0x14001c40d
   14001c399:	and    al,0x6d
   14001c39b:	outs   dx,BYTE PTR ds:[rsi]
   14001c39c:	and    al,0x30
   14001c39e:	xor    BYTE PTR [rax],al
   14001c3a0:	rex cmp eax,DWORD PTR [rcx]
   14001c3a3:	add    BYTE PTR [rax+0x2],al
   14001c3a6:	add    BYTE PTR [rax],al
   14001c3a8:	cs je  0x14001c410
   14001c3ab:	js     0x14001c421
   14001c3ad:	and    al,0x78
   14001c3af:	add    BYTE PTR [rax],al
   14001c3b1:	rex add DWORD PTR [rax],eax
   14001c3b4:	pop    rax
   14001c3b5:	add    al,BYTE PTR [rax]
   14001c3b7:	add    BYTE PTR [rsi],ch
   14001c3b9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   14001c3c1:	add    BYTE PTR [rax],al
   14001c3c3:	add    BYTE PTR [rax+0x42],bl
   14001c3c6:	add    DWORD PTR [rax],eax
   14001c3c8:	adc    BYTE PTR [rax],al
   14001c3ca:	add    BYTE PTR [rax],al
   14001c3cc:	xor    BYTE PTR cs:[rax],dh
   14001c3cf:	movsxd esp,DWORD PTR [rsi+0x67]
   14001c3d2:	add    BYTE PTR [rax],al
   14001c3d4:	push   0x8000142
   14001c3d9:	add    BYTE PTR [rax],al
   14001c3db:	add    BYTE PTR [rsi],ch
   14001c3dd:	rex.XB push r10
   14001c3df:	push   rsp
   14001c3e0:	and    al,0x58
   14001c3e2:	rex.XB
   14001c3e3:	add    BYTE PTR [r8],al
   14001c3e6:	add    BYTE PTR [rax],al
   14001c3e8:	jo     0x14001c42c
   14001c3ea:	add    DWORD PTR [rax],eax
   14001c3ec:	or     BYTE PTR [rax],al
   14001c3ee:	add    BYTE PTR [rax],al
   14001c3f0:	cs rex.XB push r10
   14001c3f3:	push   rsp
   14001c3f4:	and    al,0x58
   14001c3f6:	rex.XB
   14001c3f7:	rex.B
   14001c3f8:	add    BYTE PTR [r8],al
   14001c3fb:	add    BYTE PTR [rax+0x42],bh
   14001c3fe:	add    DWORD PTR [rax],eax
   14001c400:	or     BYTE PTR [rax],al
   14001c402:	add    BYTE PTR [rax],al
   14001c404:	cs rex.XB push r10
   14001c407:	push   rsp
   14001c408:	and    al,0x58
   14001c40a:	rex.XB pop r10
   14001c40c:	add    BYTE PTR [rax],al
   14001c40e:	add    BYTE PTR [rax],al
   14001c410:	add    BYTE PTR [rdx+0x1],0x0
   14001c414:	or     BYTE PTR [rax],al
   14001c416:	add    BYTE PTR [rax],al
   14001c418:	cs rex.XB push r10
   14001c41b:	push   rsp
   14001c41c:	and    al,0x58
   14001c41e:	rex.WB
   14001c41f:	add    BYTE PTR [r8],al
   14001c422:	add    BYTE PTR [rax],al
   14001c424:	mov    BYTE PTR [rdx+0x1],al
   14001c427:	add    BYTE PTR [rax],cl
   14001c429:	add    BYTE PTR [rax],al
   14001c42b:	add    BYTE PTR [rsi],ch
   14001c42d:	rex.XB push r10
   14001c42f:	push   rsp
   14001c430:	and    al,0x58
   14001c432:	rex.WB
   14001c433:	rex.B
   14001c434:	add    BYTE PTR [r8],al
   14001c437:	add    BYTE PTR [rax+0x8000142],dl
   14001c43d:	add    BYTE PTR [rax],al
   14001c43f:	add    BYTE PTR [rsi],ch
   14001c441:	rex.XB push r10
   14001c443:	push   rsp
   14001c444:	and    al,0x58
   14001c446:	rex.WB
   14001c447:	rex.B
   14001c448:	rex.XB add BYTE PTR [r8],al
   14001c44b:	add    BYTE PTR [rax+0x18000142],bl
   14001c451:	add    BYTE PTR [rax],al
   14001c453:	add    BYTE PTR [rsi],ch
   14001c455:	rex.XB push r10
   14001c457:	push   rsp
   14001c458:	and    al,0x58
   14001c45a:	rex.WB
   14001c45b:	rex.XB add BYTE PTR [r8],al
   14001c45e:	add    BYTE PTR [rax],al
   14001c460:	mov    al,0x42
   14001c462:	add    DWORD PTR [rax],eax
   14001c464:	or     BYTE PTR [rax],al
   14001c466:	add    BYTE PTR [rax],al
   14001c468:	cs rex.XB push r10
   14001c46b:	push   rsp
   14001c46c:	and    al,0x58
   14001c46e:	rex.WB pop r10
   14001c470:	add    BYTE PTR [rax],al
   14001c472:	add    BYTE PTR [rax],al
   14001c474:	mov    eax,0x8000142
   14001c479:	add    BYTE PTR [rax],al
   14001c47b:	add    BYTE PTR [rsi],ch
   14001c47d:	rex.XB push r10
   14001c47f:	push   rsp
   14001c480:	and    al,0x58
   14001c482:	push   rax
   14001c483:	add    BYTE PTR [r8],al
   14001c486:	add    BYTE PTR [rax],al
   14001c488:	rol    BYTE PTR [rdx+0x1],0x0
   14001c48c:	adc    BYTE PTR [rax],al
   14001c48e:	add    BYTE PTR [rax],al
   14001c490:	cs rex.XB push r10
   14001c493:	push   rsp
   14001c494:	and    al,0x58
   14001c496:	push   rax
   14001c497:	pop    rax
   14001c498:	add    BYTE PTR [rax],al
   14001c49a:	add    BYTE PTR [rax],al
   14001c49c:	rol    BYTE PTR [rdx+0x1],1
   14001c49f:	add    BYTE PTR [rax],cl
   14001c4a1:	add    BYTE PTR [rax],al
   14001c4a3:	add    BYTE PTR [rsi],ch
   14001c4a5:	rex.XB push r10
   14001c4a7:	push   rsp
   14001c4a8:	and    al,0x58
   14001c4aa:	push   rax
   14001c4ab:	pop    rax
   14001c4ac:	add    BYTE PTR [r8],al
   14001c4af:	add    al,bl
   14001c4b1:	rex.X add DWORD PTR [rax],eax
   14001c4b4:	or     BYTE PTR [rax],al
   14001c4b6:	add    BYTE PTR [rax],al
   14001c4b8:	cs rex.XB push r10
   14001c4bb:	push   rsp
   14001c4bc:	and    al,0x58
   14001c4be:	push   rax
   14001c4bf:	pop    rdx
   14001c4c0:	add    BYTE PTR [rax],al
   14001c4c2:	add    BYTE PTR [rax],al
   14001c4c4:	loopne 0x14001c508
   14001c4c6:	add    DWORD PTR [rax],eax
   14001c4c8:	or     BYTE PTR [rax],al
   14001c4ca:	add    BYTE PTR [rax],al
   14001c4cc:	cs rex.XB push r10
   14001c4cf:	push   rsp
   14001c4d0:	and    al,0x58
   14001c4d2:	push   rsp
   14001c4d3:	add    BYTE PTR [r8],al
   14001c4d6:	add    BYTE PTR [rax],al
   14001c4d8:	call   0x14801c61f
   14001c4dd:	add    BYTE PTR [rax],al
   14001c4df:	add    BYTE PTR [rsi],ch
   14001c4e1:	rex.XB push r10
   14001c4e3:	push   rsp
   14001c4e4:	and    al,0x58
   14001c4e6:	push   rsp
   14001c4e7:	pop    rdx
   14001c4e8:	add    BYTE PTR [rax],al
   14001c4ea:	add    BYTE PTR [rax],al
   14001c4ec:	lock rex.X add DWORD PTR [rax],eax
   14001c4f0:	or     BYTE PTR [rsi+0x0],bh
   14001c4f3:	add    BYTE PTR [rsi],ch
   14001c4f5:	jb     0x14001c55b
   14001c4f7:	(bad)  
   14001c4f8:	je     0x14001c55b
   14001c4fa:	add    BYTE PTR [rax],al
   14001c4fc:	clc    
   14001c4fd:	rol    BYTE PTR [rcx],0x0
   14001c500:	hlt    
   14001c501:	add    DWORD PTR [rax],eax
   14001c503:	add    BYTE PTR [rsi],ch
   14001c505:	jb     0x14001c56b
   14001c507:	(bad)  
   14001c508:	je     0x14001c56b
   14001c50a:	and    al,0x72
   14001c50c:	add    BYTE PTR [rax],al
   14001c50e:	add    BYTE PTR [rax],al
   14001c510:	in     al,dx
   14001c511:	ret    0x1
   14001c514:	xchg   esp,eax
   14001c515:	add    eax,DWORD PTR [rax]
   14001c517:	add    BYTE PTR [rsi],ch
   14001c519:	jb     0x14001c57f
   14001c51b:	(bad)  
   14001c51c:	je     0x14001c57f
   14001c51e:	and    al,0x7a
   14001c520:	jp     0x14001c59c
   14001c522:	fs (bad) 
   14001c524:	add    BYTE PTR [eax],al
   14001c527:	add    BYTE PTR [rax+0x80001c6],al
   14001c52d:	add    BYTE PTR [rax],al
   14001c52f:	add    BYTE PTR [rsi],ch
   14001c531:	jb     0x14001c5a7
   14001c533:	movsxd esp,DWORD PTR [rcx+rcx*2]
   14001c536:	rex.B
   14001c537:	add    BYTE PTR [r8],al
   14001c53a:	add    BYTE PTR [rax],al
   14001c53c:	mov    dh,al
   14001c53e:	add    DWORD PTR [rax],eax
   14001c540:	or     BYTE PTR [rax],al
   14001c542:	add    BYTE PTR [rax],al
   14001c544:	cs jb  0x14001c5bb
   14001c547:	movsxd esp,DWORD PTR [rcx+rcx*2]
   14001c54a:	pop    rdx
   14001c54b:	pop    rdx
   14001c54c:	add    BYTE PTR [rax],al
   14001c54e:	add    BYTE PTR [rax],al
   14001c550:	nop
   14001c551:	mov    BYTE PTR [rcx],0x0
   14001c554:	or     BYTE PTR [rax],al
   14001c556:	add    BYTE PTR [rax],al
   14001c558:	cs jb  0x14001c5cf
   14001c55b:	movsxd esp,DWORD PTR [rsp+rdx*2]
   14001c55e:	rex.B
   14001c55f:	add    BYTE PTR [r8],al
   14001c562:	add    BYTE PTR [rax],al
   14001c564:	cwde   
   14001c565:	mov    BYTE PTR [rcx],0x0
   14001c568:	or     BYTE PTR [rax],al
   14001c56a:	add    BYTE PTR [rax],al
   14001c56c:	cs jb  0x14001c5e3
   14001c56f:	movsxd esp,DWORD PTR [rsp+rdx*2]
   14001c572:	pop    rdx
   14001c573:	pop    rdx
   14001c574:	add    BYTE PTR [rax],al
   14001c576:	add    BYTE PTR [rax],al
   14001c578:	movabs al,ds:0x2e00000ed00001c6
   14001c581:	js     0x14001c5e7
   14001c583:	(bad)  
   14001c584:	je     0x14001c5e7
   14001c586:	add    BYTE PTR [rax],al
   14001c588:	jo     0x14001c55f
   14001c58a:	add    DWORD PTR [rax],eax
   14001c58c:	in     al,dx
   14001c58d:	add    BYTE PTR [rax],al
   14001c58f:	add    BYTE PTR [rsi],ch
   14001c591:	js     0x14001c5f7
   14001c593:	(bad)  
   14001c594:	je     0x14001c5f7
   14001c596:	and    al,0x78
   14001c598:	add    BYTE PTR [rax],al
   14001c59a:	add    BYTE PTR [rax],al
   14001c59c:	pop    rsp
   14001c59d:	(bad)  
   14001c59e:	add    DWORD PTR [rax],eax
   14001c5a0:	adc    al,0x0
   14001c5a2:	add    BYTE PTR [rax],al
   14001c5a4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14001c5ad:	add    BYTE PTR [rax],al
   14001c5af:	add    BYTE PTR [rax-0x2a],dh
   14001c5b2:	add    DWORD PTR [rax],eax
   14001c5b4:	sbb    BYTE PTR [rax],al
   14001c5b6:	add    BYTE PTR [rax],al
   14001c5b8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14001c5c1:	add    BYTE PTR [rax],al
   14001c5c3:	add    BYTE PTR [rax+0x580001d6],cl
   14001c5c9:	add    al,BYTE PTR [rax]
   14001c5cb:	add    BYTE PTR [rsi],ch
   14001c5cd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14001c5d5:	add    BYTE PTR [rax],al
   14001c5d7:	add    al,ah
   14001c5d9:	fadd   DWORD PTR [rcx]
   14001c5db:	add    BYTE PTR [rdx+0x2e000005],al
   14001c5e1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14001c5e9:	add    BYTE PTR [rax],al
   14001c5eb:	add    BYTE PTR [rax],al
   14001c5ed:	loopne 0x14001c5f0
   14001c5ef:	add    BYTE PTR [rax+0x9],al
   14001c5f2:	add    BYTE PTR [rax],al
   14001c5f4:	cs fs (bad) 
   14001c5f7:	je     0x14001c65a
   14001c5f9:	add    BYTE PTR [rax],al
   14001c5fb:	add    BYTE PTR [rax-0x17],al
   14001c5fe:	add    DWORD PTR [rax],eax
   14001c600:	movabs al,ds:0x617461642e000000
   14001c609:	and    al,0x72
   14001c60b:	add    al,ah
   14001c60d:	jmp    0x151d1c613
   14001c612:	add    BYTE PTR [rax],al
   14001c614:	cs (bad) 
   14001c617:	jae    0x14001c619
   14001c619:	add    BYTE PTR [rax],al
   14001c61b:	add    BYTE PTR [rax],al
   14001c61d:	add    BYTE PTR [rdx],al
   14001c61f:	add    BYTE PTR [rdx+rdx*1+0x0],ch
   14001c623:	add    BYTE PTR [rsi],ch
   14001c625:	jo     0x14001c68b
   14001c627:	(bad)  
   14001c628:	je     0x14001c68b
   14001c62a:	add    BYTE PTR [rax],al
   14001c62c:	add    BYTE PTR [rax],ah
   14001c62e:	add    al,BYTE PTR [rax]
   14001c630:	add    BYTE PTR [rax],0x0
   14001c633:	add    BYTE PTR [rsi],ch
   14001c635:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14001c63d:	add    BYTE PTR [rax],al
   14001c63f:	add    BYTE PTR [rax+0x3c000220],al
   14001c645:	add    BYTE PTR [rax],al
   14001c647:	add    BYTE PTR [rsi],ch
   14001c649:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x79
   14001c651:	add    BYTE PTR [rax],al
   14001c653:	add    BYTE PTR [rax],al
   14001c655:	xor    BYTE PTR [rdx],al
   14001c657:	add    BYTE PTR [rax+0x0],ah
   14001c65a:	add    BYTE PTR [rax],al
   14001c65c:	cs jb  0x14001c6d2
   14001c65f:	jb     0x14001c6c4
   14001c661:	and    al,0x30
   14001c663:	xor    DWORD PTR [rax],eax
   14001c665:	add    BYTE PTR [rax],al
   14001c667:	add    BYTE PTR [rax+0x30],ah
   14001c66a:	add    al,BYTE PTR [rax]
   14001c66c:	cmp    BYTE PTR [rbx],al
   14001c66e:	add    BYTE PTR [rax],al
   14001c670:	cs jb  0x14001c6e6
   14001c673:	jb     0x14001c6d8
   14001c675:	and    al,0x30
   14001c677:	xor    al,BYTE PTR [rax]
	...
   14001c69d:	add    BYTE PTR [rax],al
   14001c69f:	add    BYTE PTR [rcx],al
   14001c6a1:	(bad)  
   14001c6a2:	add    al,0x0
   14001c6a4:	(bad)  
   14001c6a5:	push   rdx
   14001c6a6:	adc    dh,BYTE PTR [rax+0x11]
   14001c6a9:	(bad)  
   14001c6aa:	adc    BYTE PTR [rax],dh
   14001c6ac:	add    DWORD PTR [rbx],ebx
   14001c6ae:	add    al,0x0
   14001c6b0:	sbb    edx,DWORD PTR [rdx+0x17]
   14001c6b3:	jo     0x14001c6cb
   14001c6b5:	(bad)  
   14001c6b6:	adc    eax,0x6140130
   14001c6bb:	add    BYTE PTR [rdx+rdx*2],dl
   14001c6be:	adc    al,ah
   14001c6c0:	(bad)  
   14001c6c1:	jo     0x14001c6d0
   14001c6c3:	(bad)  
   14001c6c4:	or     al,0x50
   14001c6c6:	or     esi,DWORD PTR [rax]
   14001c6c8:	add    DWORD PTR [rbx],ecx
   14001c6ca:	add    eax,0x4a010b00
   14001c6cf:	add    BYTE PTR [rax+riz*2],al
   14001c6d2:	add    edx,DWORD PTR [rax+0x2]
   14001c6d5:	xor    BYTE PTR [rax],al
   14001c6d7:	add    BYTE PTR [rcx],ah
   14001c6d9:	or     BYTE PTR [rdx],al
   14001c6db:	add    BYTE PTR [rax],cl
   14001c6dd:	in     al,0x4f
   14001c6df:	add    BYTE PTR [rax],al
   14001c6e1:	adc    BYTE PTR [rax],al
   14001c6e3:	add    BYTE PTR [rbx+0x10],bl
   14001c6e6:	add    BYTE PTR [rax],al
   14001c6e8:	enter  0x1c6,0x0
   14001c6ec:	and    DWORD PTR [rax],ecx
   14001c6ee:	add    al,BYTE PTR [rax]
   14001c6f0:	or     BYTE PTR [rsi+rcx*2+0x0],dh
   14001c6f4:	pop    rbx
   14001c6f5:	adc    BYTE PTR [rax],al
   14001c6f7:	add    BYTE PTR [rdx-0x27fffff0],cl
   14001c6fd:	mov    BYTE PTR [rcx],0x0
   14001c700:	and    DWORD PTR [rax],eax
   14001c702:	add    BYTE PTR [rax],al
   14001c704:	pop    rbx
   14001c705:	adc    BYTE PTR [rax],al
   14001c707:	add    BYTE PTR [rdx-0x27fffff0],cl
   14001c70d:	mov    BYTE PTR [rcx],0x0
   14001c710:	and    DWORD PTR [rax],eax
   14001c712:	add    BYTE PTR [rax],al
   14001c714:	add    BYTE PTR [rax],dl
   14001c716:	add    BYTE PTR [rax],al
   14001c718:	pop    rbx
   14001c719:	adc    BYTE PTR [rax],al
   14001c71b:	add    al,cl
   14001c71d:	mov    BYTE PTR [rcx],0x0
   14001c720:	add    DWORD PTR [rcx],ebx
   14001c722:	(bad)  
   14001c723:	add    BYTE PTR [rcx],bl
   14001c725:	(bad)  
   14001c726:	(bad)  
   14001c727:	add    DWORD PTR [rcx],ebx
   14001c729:	add    DWORD PTR [rax],edi
   14001c72b:	add    DWORD PTR [rdx],ecx
   14001c72d:	lock or al,ah
   14001c730:	(bad)  
   14001c731:	push   rax
   14001c732:	add    BYTE PTR [rax],al
   14001c734:	and    DWORD PTR [rax],ecx
   14001c736:	add    al,BYTE PTR [rax]
   14001c738:	or     BYTE PTR [rsi+rdi*1+0x1],dh
   14001c73c:	mov    al,0x13
   14001c73e:	add    BYTE PTR [rax],al
   14001c740:	ins    DWORD PTR es:[rdi],dx
   14001c741:	adc    al,0x0
   14001c743:	add    BYTE PTR [rax],ah
   14001c745:	mov    DWORD PTR [rcx],0x2082100
   14001c74b:	add    BYTE PTR [rax],cl
   14001c74d:	xor    al,0x3c
   14001c74f:	add    DWORD PTR [rbp+0x14],ebp
   14001c752:	add    BYTE PTR [rax],al
   14001c754:	(bad)  
   14001c755:	adc    eax,0xc7340000
   14001c75a:	add    DWORD PTR [rax],eax
   14001c75c:	and    DWORD PTR [rax],eax
   14001c75e:	add    BYTE PTR [rax],al
   14001c760:	mov    al,0x13
   14001c762:	add    BYTE PTR [rax],al
   14001c764:	ins    DWORD PTR es:[rdi],dx
   14001c765:	adc    al,0x0
   14001c767:	add    BYTE PTR [rax],ah
   14001c769:	mov    DWORD PTR [rcx],0x2082100
   14001c76f:	add    BYTE PTR [rax],cl
   14001c771:	fs cmp eax,0x192c01
   14001c777:	add    BYTE PTR [rbp-0x6bffffe6],cl
   14001c77d:	mov    DWORD PTR [rcx],0x2002100
   14001c783:	add    BYTE PTR [rax],al
   14001c785:	je     0x14001c7c5
   14001c787:	add    DWORD PTR [rax+0x6d000013],esi
   14001c78d:	adc    al,0x0
   14001c78f:	add    BYTE PTR [rax],ah
   14001c791:	mov    DWORD PTR [rcx],0x4002100
   14001c797:	add    BYTE PTR [rax],al
   14001c799:	je     0x14001c7d9
   14001c79b:	add    DWORD PTR [rax],eax
   14001c79d:	xor    al,0x3c
   14001c79f:	add    DWORD PTR [rax+0x6d000013],esi
   14001c7a5:	adc    al,0x0
   14001c7a7:	add    BYTE PTR [rax],ah
   14001c7a9:	mov    DWORD PTR [rcx],0x60f0900
   14001c7af:	add    BYTE PTR [rdi],cl
   14001c7b1:	or     DWORD PTR fs:[rax],eax
   14001c7b4:	sysenter 
   14001c7b6:	or     BYTE PTR [rax],al
   14001c7b8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14001c7bb:	jo     0x14001c801
   14001c7bd:	sub    al,BYTE PTR [rax]
   14001c7bf:	add    BYTE PTR [rcx],al
   14001c7c1:	add    BYTE PTR [rax],al
   14001c7c3:	add    ah,bl
   14001c7c5:	sbb    al,0x0
   14001c7c7:	add    dl,dh
   14001c7c9:	sbb    eax,0x3b400000
   14001c7ce:	add    DWORD PTR [rax],eax
   14001c7d0:	repnz sbb eax,0x6010000
   14001c7d6:	add    al,BYTE PTR [rax]
   14001c7d8:	(bad)  
   14001c7d9:	xor    al,BYTE PTR [rdx]
   14001c7db:	xor    BYTE PTR [rcx],cl
   14001c7dd:	add    al,0x1
   14001c7df:	add    BYTE PTR [rdx+riz*1],al
   14001c7e2:	add    BYTE PTR [rax],al
   14001c7e4:	sub    r8b,BYTE PTR [rax]
   14001c7e7:	add    BYTE PTR [rcx],al
   14001c7e9:	add    BYTE PTR [rax],al
   14001c7eb:	add    bh,dl
   14001c7ed:	(bad)  
   14001c7ee:	add    BYTE PTR [rax],al
   14001c7f0:	(bad)  
   14001c7f1:	and    BYTE PTR [rax],al
   14001c7f3:	add    BYTE PTR [rsi+0x3b],bl
   14001c7f6:	add    DWORD PTR [rax],eax
   14001c7f8:	(bad)  
   14001c7f9:	and    BYTE PTR [rax],al
   14001c7fb:	add    BYTE PTR [rcx],al
   14001c7fd:	add    al,BYTE PTR [rcx]
   14001c7ff:	add    BYTE PTR [rdx],al
   14001c801:	push   rax
   14001c802:	add    BYTE PTR [rax],al
   14001c804:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740ec80e
   14001c80a:	or     al,BYTE PTR [rax]
   14001c80c:	or     eax,0x1500672
   14001c811:	or     eax,0x340d0004
   14001c816:	or     DWORD PTR [rax],eax
   14001c818:	or     eax,0x1500632
   14001c81d:	adc    eax,0x34150005
   14001c822:	mov    edx,0xb8011500
   14001c827:	add    BYTE PTR [rsi],al
   14001c829:	push   rax
   14001c82a:	add    BYTE PTR [rax],al
   14001c82c:	add    DWORD PTR [rdx],edx
   14001c82e:	(bad)  
   14001c82f:	add    BYTE PTR [rdx],dl
   14001c831:	je     0x14001c83b
   14001c833:	add    BYTE PTR [rdx],dl
   14001c835:	xor    al,0x7
   14001c837:	add    BYTE PTR [rdx],dl
   14001c839:	xor    cl,BYTE PTR [rbx]
   14001c83b:	push   rax
   14001c83c:	add    BYTE PTR [rax],al
   14001c83e:	add    BYTE PTR [rax],al
   14001c840:	add    DWORD PTR [rax],eax
   14001c842:	add    BYTE PTR [rax],al
   14001c844:	add    DWORD PTR [rcx+rax*1],eax
   14001c847:	add    BYTE PTR [rdx+riz*1],al
   14001c84a:	add    BYTE PTR [rax],al
   14001c84c:	add    DWORD PTR [rsp+rcx*1],ebx
   14001c84f:	add    BYTE PTR [rsp+riz*2],bl
   14001c852:	adc    BYTE PTR [rax],al
   14001c854:	sbb    al,0x54
   14001c856:	ltr    WORD PTR [rsp+rsi*1]
   14001c85a:	(bad)  
   14001c85b:	add    BYTE PTR [rdx+rsi*2],bl
   14001c85e:	sbb    al,dh
   14001c860:	(bad)  
   14001c861:	loopne 0x14001c877
   14001c863:	rcl    BYTE PTR [rdx],1
   14001c865:	rcl    BYTE PTR [rax],0x70
   14001c868:	add    DWORD PTR [rax],eax
   14001c86a:	add    BYTE PTR [rax],al
   14001c86c:	add    DWORD PTR [rip+0x64150008],edx        # 0x1a416c87a
   14001c872:	adc    al,BYTE PTR [rax]
   14001c874:	adc    eax,0x15001134
   14001c879:	mov    dl,0xe
   14001c87b:	loopne 0x14001c889
   14001c87d:	jo     0x14001c88a
   14001c87f:	push   rax
   14001c880:	add    DWORD PTR [rdi],eax
   14001c882:	add    al,BYTE PTR [rax]
   14001c884:	(bad)  
   14001c885:	add    DWORD PTR [rbx+0x100],ebx
   14001c88b:	add    BYTE PTR [rcx],al
   14001c88d:	add    BYTE PTR [rax],al
   14001c88f:	add    BYTE PTR [rcx],al
   14001c891:	add    BYTE PTR [rax],al
   14001c893:	add    BYTE PTR [rcx],al
   14001c895:	or     DWORD PTR [rdx],eax
   14001c897:	add    BYTE PTR [rcx],cl
   14001c899:	xor    al,BYTE PTR [rip+0x2090130]        # 0x1420ac9cf
   14001c89f:	add    BYTE PTR [rcx],cl
   14001c8a1:	mov    dl,0x2
   14001c8a3:	push   rax
   14001c8a4:	sbb    DWORD PTR [rdx],esi
   14001c8a6:	or     eax,DWORD PTR [rax]
   14001c8a8:	and    DWORD PTR [rbx+rbp*4+0x0],esp
   14001c8ac:	and    DWORD PTR [rax+rbp*4],esi
   14001c8af:	add    BYTE PTR [rcx],ah
   14001c8b1:	add    DWORD PTR [rdx+0x10f01200],esp
   14001c8b7:	loopne 0x14001c8c7
   14001c8b9:	ror    BYTE PTR [rax+rsi*2],0xb
   14001c8bd:	push   rax
   14001c8be:	add    BYTE PTR [rax],al
   14001c8c0:	movabs al,ds:0x100000500000131
   14001c8c9:	or     al,BYTE PTR [rax+rax*1]
   14001c8cc:	or     dh,BYTE PTR [rsi+rax*1]
   14001c8cf:	add    BYTE PTR [rdx],cl
   14001c8d1:	xor    al,BYTE PTR [rsi]
   14001c8d3:	jo     0x14001c8d6
   14001c8d5:	sbb    BYTE PTR [rdx],cl
   14001c8d7:	add    BYTE PTR [rax],bl
   14001c8d9:	or     al,BYTE PTR fs:[rax]
   14001c8dc:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14001c8e0:	sbb    BYTE PTR [rax+rcx*1],dh
   14001c8e3:	add    BYTE PTR [rax],bl
   14001c8e5:	xor    dl,BYTE PTR [rax+rsi*8]
   14001c8e8:	adc    ah,al
   14001c8ea:	adc    BYTE PTR [rax+0x1],dh
   14001c8ed:	sbb    BYTE PTR [rdx],cl
   14001c8ef:	add    BYTE PTR [rax],bl
   14001c8f1:	fs or  eax,0xc541800
   14001c8f7:	add    BYTE PTR [rax],bl
   14001c8f9:	xor    al,0xb
   14001c8fb:	add    BYTE PTR [rax],bl
   14001c8fd:	push   rdx
   14001c8fe:	adc    al,0xf0
   14001c900:	adc    ah,al
   14001c902:	adc    BYTE PTR [rax+0x19],dh
   14001c905:	(bad)  
   14001c906:	(bad)  
   14001c907:	add    BYTE PTR [rdi],cl
   14001c909:	fs (bad) 
   14001c90b:	add    BYTE PTR [rdi],cl
   14001c90d:	xor    al,0xd
   14001c90f:	add    BYTE PTR [rdi],cl
   14001c911:	xchg   edx,eax
   14001c912:	or     esi,DWORD PTR [rax-0x60]
   14001c915:	xor    DWORD PTR [rcx],eax
   14001c917:	add    BYTE PTR [rax+0x0],al
   14001c91a:	add    BYTE PTR [rax],al
   14001c91c:	sbb    DWORD PTR [rdi+rax*1],esp
   14001c91f:	add    BYTE PTR [rdx],dl
   14001c921:	movabs fs:0x9e011200a1341200,al
   14001c92b:	add    BYTE PTR [rbx],cl
   14001c92d:	jo     0x14001c92f
   14001c92f:	add    BYTE PTR [rax-0x1ffffecf],ah
   14001c935:	add    al,0x0
   14001c937:	add    BYTE PTR [rcx],al
   14001c939:	clts   
   14001c93b:	add    BYTE PTR [rdi],cl
   14001c93d:	push   rsp
   14001c93e:	(bad)  
   14001c93f:	add    BYTE PTR [rdi],cl
   14001c941:	xor    al,0x6
   14001c943:	add    BYTE PTR [rdi],cl
   14001c945:	xor    cl,BYTE PTR [rbx]
   14001c947:	jo     0x14001c94a
   14001c949:	adc    ecx,DWORD PTR [rax]
   14001c94b:	add    BYTE PTR [rbx],dl
   14001c94d:	push   rsp
   14001c94e:	or     al,BYTE PTR [rax]
   14001c950:	adc    esi,DWORD PTR [rcx+rcx*1]
   14001c953:	add    BYTE PTR [rbx],dl
   14001c955:	xor    cl,BYTE PTR [rdi]
   14001c957:	loopne 0x14001c966
   14001c959:	jo     0x14001c967
   14001c95b:	(bad)  
   14001c95c:	add    DWORD PTR [rdx],ecx
   14001c95e:	add    al,0x0
   14001c960:	or     dh,BYTE PTR [rcx*1+0x6920a00]
   14001c967:	jo     0x14001c96a
   14001c969:	(bad)  
   14001c96a:	or     al,BYTE PTR [rax]
   14001c96c:	(bad)  
   14001c96d:	je     0x14001c978
   14001c96f:	add    BYTE PTR [rsi],bl
   14001c971:	or     BYTE PTR fs:[rax],al
   14001c974:	(bad)  
   14001c975:	push   rsp
   14001c976:	(bad)  
   14001c977:	add    BYTE PTR [rsi],bl
   14001c979:	xor    al,0x6
   14001c97b:	add    BYTE PTR [rsi],bl
   14001c97d:	xor    bl,BYTE PTR [rdx]
   14001c97f:	loopne 0x14001c982
   14001c981:	add    eax,0x34050002
   14001c986:	add    DWORD PTR [rax],eax
   14001c988:	adc    DWORD PTR [rdi],ecx
   14001c98a:	add    al,0x0
   14001c98c:	sysenter 
   14001c98e:	(bad)  
   14001c98f:	add    BYTE PTR [rdi],cl
   14001c991:	xor    cl,BYTE PTR [rbx]
   14001c993:	jo     0x14001c9d9
   14001c995:	sub    al,BYTE PTR [rax]
   14001c997:	add    BYTE PTR [rcx],al
   14001c999:	add    BYTE PTR [rax],al
   14001c99b:	add    BYTE PTR [rsi],bl
   14001c99d:	(bad)  
   14001c99e:	add    BYTE PTR [rax],al
   14001c9a0:	sub    BYTE PTR [rdi],dh
   14001c9a2:	add    BYTE PTR [rax],al
   14001c9a4:	jbe    0x14001c9e1
   14001c9a6:	add    DWORD PTR [rax],eax
	...
   14001c9b0:	add    DWORD PTR [rax],eax
   14001c9b2:	add    BYTE PTR [rax],al
   14001c9b4:	add    BYTE PTR [rax],al
   14001c9b6:	add    BYTE PTR [rax],al
   14001c9b8:	add    DWORD PTR [rax],eax
   14001c9ba:	add    BYTE PTR [rax],al
   14001c9bc:	sbb    DWORD PTR [rcx],ebx
   14001c9be:	or     al,BYTE PTR [rax]
   14001c9c0:	sbb    esp,esp
   14001c9c2:	or     DWORD PTR [rax],eax
   14001c9c4:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   14001c9c8:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   14001c9cc:	sbb    DWORD PTR [rsi+rax*1],esi
   14001c9cf:	add    BYTE PTR [rcx],bl
   14001c9d1:	xor    dl,BYTE PTR [rip+0x2a44f0]        # 0x1402c0ec7
   14001c9d7:	add    BYTE PTR [rdx],al
   14001c9d9:	add    BYTE PTR [rax],al
   14001c9db:	add    BYTE PTR [rdi],ah
   14001c9dd:	pop    rsp
   14001c9de:	add    BYTE PTR [rax],al
   14001c9e0:	test   DWORD PTR [rax+rax*1+0x0],ebx
   14001c9e4:	xchg   ecx,eax
   14001c9e5:	cmp    eax,DWORD PTR [rcx]
   14001c9e7:	add    ah,al
   14001c9e9:	pop    rsp
   14001c9ea:	add    BYTE PTR [rax],al
   14001c9ec:	or     ebx,DWORD PTR [rax+rax*1+0x0]
   14001c9f0:	retf   0x5c
   14001c9f3:	add    BYTE PTR [rbx+rdi*1+0x1],ch
   14001c9fa:	add    BYTE PTR [rax],al
   14001c9fc:	sbb    DWORD PTR [rax],ebp
   14001c9fe:	or     al,BYTE PTR [rax]
   14001ca00:	sbb    dh,BYTE PTR [rbx+rbx*1]
   14001ca03:	add    BYTE PTR [rdx],bl
   14001ca05:	repnz adc al,dh
   14001ca08:	(bad)  
   14001ca09:	loopne 0x14001ca17
   14001ca0b:	ror    BYTE PTR [rdx],1
   14001ca0d:	ror    BYTE PTR [rax],0x70
   14001ca10:	(bad)  
   14001ca11:	(bad)  
   14001ca12:	(bad)  
   14001ca13:	push   rax
   14001ca14:	movabs al,ds:0x1100000070000131
   14001ca1d:	(bad)  
   14001ca1e:	add    al,BYTE PTR [rax]
   14001ca20:	(bad)  
   14001ca21:	xor    al,BYTE PTR [rdx]
   14001ca23:	xor    BYTE PTR [rdx+rbp*1+0x0],al
   14001ca27:	add    BYTE PTR [rcx],al
   14001ca29:	add    BYTE PTR [rax],al
   14001ca2b:	add    ch,al
   14001ca2d:	(bad)  
   14001ca2e:	add    BYTE PTR [rax],al
   14001ca30:	shl    BYTE PTR [rdx+0x0],1
   14001ca33:	add    ch,al
   14001ca35:	cmp    eax,DWORD PTR [rcx]
   14001ca37:	add    BYTE PTR [rax],al
   14001ca39:	add    BYTE PTR [rax],al
   14001ca3b:	add    BYTE PTR [rcx],dl
   14001ca3d:	or     al,BYTE PTR [rax+rax*1]
   14001ca40:	or     dh,BYTE PTR [rsi+rax*1]
   14001ca43:	add    BYTE PTR [rdx],cl
   14001ca45:	xor    al,BYTE PTR [rsi]
   14001ca47:	jo     0x14001ca8d
   14001ca49:	sub    al,BYTE PTR [rax]
   14001ca4b:	add    BYTE PTR [rcx],al
   14001ca4d:	add    BYTE PTR [rax],al
   14001ca4f:	add    BYTE PTR [rdi-0x63ffff9d],cl
   14001ca55:	movsxd eax,DWORD PTR [rax]
   14001ca57:	add    ch,al
   14001ca59:	cmp    eax,DWORD PTR [rcx]
   14001ca5b:	add    BYTE PTR [rax],al
   14001ca5d:	add    BYTE PTR [rax],al
   14001ca5f:	add    BYTE PTR [rcx],al
   14001ca61:	sbb    eax,0x741d000c
   14001ca66:	or     eax,DWORD PTR [rax]
   14001ca68:	sbb    eax,0x1d000a64
   14001ca6d:	push   rsp
   14001ca6e:	or     DWORD PTR [rax],eax
   14001ca70:	sbb    eax,0x1d000834
   14001ca75:	xor    bl,BYTE PTR [rcx]
   14001ca77:	lock (bad) 
   14001ca79:	loopne 0x14001ca90
   14001ca7b:	rol    BYTE PTR [rcx],0x13
   14001ca7e:	or     BYTE PTR [rax],al
   14001ca80:	adc    esi,DWORD PTR [rsp+rcx*1]
   14001ca83:	add    BYTE PTR [rbx],dl
   14001ca85:	push   rdx
   14001ca86:	or     al,0xf0
   14001ca88:	or     ah,al
   14001ca8a:	or     BYTE PTR [rax+0x7],dh
   14001ca8d:	(bad)  
   14001ca8e:	(bad)  
   14001ca8f:	push   rax
   14001ca90:	add    DWORD PTR [rcx+rax*1],eax
   14001ca93:	add    BYTE PTR [rdx+rax*2],al
   14001ca96:	add    BYTE PTR [rax],al
   14001ca98:	add    DWORD PTR [rdi],ecx
   14001ca9a:	add    al,0x0
   14001ca9c:	sysenter 
   14001ca9e:	(bad)  
   14001ca9f:	add    BYTE PTR [rdi],cl
   14001caa1:	xor    cl,BYTE PTR [rbx]
   14001caa3:	jo     0x14001caa6
   14001caa5:	sbb    BYTE PTR [rdx],cl
   14001caa7:	add    BYTE PTR [rax],bl
   14001caa9:	fs or  al,0x0
   14001caac:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   14001cab0:	sbb    BYTE PTR [rdx+rcx*1],dh
   14001cab3:	add    BYTE PTR [rax],bl
   14001cab5:	push   rdx
   14001cab6:	adc    al,0xf0
   14001cab8:	adc    ah,al
   14001caba:	adc    BYTE PTR [rax+0x1],dh
   14001cabd:	clts   
   14001cabf:	add    BYTE PTR [rdi],cl
   14001cac1:	push   rsp
   14001cac2:	or     eax,DWORD PTR [rax]
   14001cac4:	sysenter 
   14001cac6:	or     al,BYTE PTR [rax]
   14001cac8:	(bad)  
   14001caca:	or     esp,DWORD PTR [rax+0x1]
   14001cacd:	clts   
   14001cacf:	add    BYTE PTR [rdi],cl
   14001cad1:	push   rsp
   14001cad2:	or     DWORD PTR [rax],eax
   14001cad4:	sysenter 
   14001cad6:	or     BYTE PTR [rax],al
   14001cad8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14001cadb:	(bad)  
   14001cadc:	add    DWORD PTR [rcx],ebx
   14001cade:	or     al,BYTE PTR [rax]
   14001cae0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14001cae4:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14001cae8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14001caec:	sbb    DWORD PTR [rsi+rax*1],esi
   14001caef:	add    BYTE PTR [rcx],bl
   14001caf1:	xor    dl,BYTE PTR [rip+0x20611e0]        # 0x14207dcd7
   14001caf7:	add    BYTE PTR [rsi],al
   14001caf9:	xor    al,BYTE PTR [rdx]
   14001cafb:	jo     0x14001cb41
   14001cafd:	sub    al,BYTE PTR [rax]
   14001caff:	add    BYTE PTR [rcx],al
   14001cb01:	add    BYTE PTR [rax],al
   14001cb03:	add    BYTE PTR [rip+0x43000074],ch        # 0x18301cb7d
   14001cb09:	je     0x14001cb0b
   14001cb0b:	add    dh,bl
   14001cb0d:	cmp    eax,DWORD PTR [rcx]
   14001cb0f:	add    BYTE PTR [rax],al
   14001cb11:	add    BYTE PTR [rax],al
   14001cb13:	add    BYTE PTR [rcx],dl
   14001cb15:	(bad)  
   14001cb16:	add    al,BYTE PTR [rax]
   14001cb18:	(bad)  
   14001cb19:	xor    al,BYTE PTR [rdx]
   14001cb1b:	xor    BYTE PTR [rdx+rbp*1+0x0],al
   14001cb1f:	add    BYTE PTR [rcx],al
   14001cb21:	add    BYTE PTR [rax],al
   14001cb23:	add    BYTE PTR [rdx+0x75],dl
   14001cb26:	add    BYTE PTR [rax],al
   14001cb28:	push   0xfffffffff7000075
   14001cb2d:	cmp    eax,DWORD PTR [rcx]
   14001cb2f:	add    BYTE PTR [rax],al
   14001cb31:	add    BYTE PTR [rax],al
   14001cb33:	add    BYTE PTR [rcx],al
   14001cb35:	adc    al,BYTE PTR [rdx]
   14001cb37:	add    BYTE PTR [rdx],dl
   14001cb39:	jb     0x14001cb46
   14001cb3b:	push   rax
   14001cb3c:	add    DWORD PTR [rbx],ecx
   14001cb3e:	add    DWORD PTR [rax],eax
   14001cb40:	or     esp,DWORD PTR [rdx+0x0]
   14001cb43:	add    BYTE PTR [rcx],dl
   14001cb45:	(bad)  
   14001cb47:	add    BYTE PTR [rdi],cl
   14001cb49:	xor    al,0x6
   14001cb4b:	add    BYTE PTR [rdi],cl
   14001cb4d:	xor    cl,BYTE PTR [rbx]
   14001cb4f:	jo     0x14001cb95
   14001cb51:	sub    al,BYTE PTR [rax]
   14001cb53:	add    BYTE PTR [rcx],al
   14001cb55:	add    BYTE PTR [rax],al
   14001cb57:	add    BYTE PTR [rbp-0x60ffff8b],dl
   14001cb5d:	jne    0x14001cb5f
   14001cb5f:	add    BYTE PTR [rdi+0x13c],cl
   14001cb65:	add    BYTE PTR [rax],al
   14001cb67:	add    BYTE PTR [rcx],dl
   14001cb69:	sbb    al,0xa
   14001cb6b:	add    BYTE PTR [rsp+riz*2],bl
   14001cb6e:	ltr    WORD PTR [rsp+rsi*1]
   14001cb72:	(bad)  
   14001cb73:	add    BYTE PTR [rdx+rsi*2],bl
   14001cb76:	sbb    al,dh
   14001cb78:	(bad)  
   14001cb79:	loopne 0x14001cb8f
   14001cb7b:	rcl    BYTE PTR [rdx],1
   14001cb7d:	rcl    BYTE PTR [rax],0x70
   14001cb80:	sub    r8b,BYTE PTR [rax]
   14001cb83:	add    BYTE PTR [rcx],al
   14001cb85:	add    BYTE PTR [rax],al
   14001cb87:	add    dh,bl
   14001cb89:	jne    0x14001cb8b
   14001cb8b:	add    BYTE PTR [rdx],dh
   14001cb8d:	ja     0x14001cb8f
   14001cb8f:	add    BYTE PTR [rip+0x13c],cl        # 0x14001ccd1
   14001cb95:	add    BYTE PTR [rax],al
   14001cb97:	add    BYTE PTR [rcx],al
   14001cb99:	(bad)  
   14001cb9a:	add    al,BYTE PTR [rax]
   14001cb9c:	(bad)  
   14001cb9d:	xor    al,BYTE PTR [rdx]
   14001cb9f:	push   rax
   14001cba0:	or     DWORD PTR [rsi],eax
   14001cba2:	add    al,BYTE PTR [rax]
   14001cba4:	(bad)  
   14001cba5:	xor    al,BYTE PTR [rdx]
   14001cba7:	xor    BYTE PTR [rdx+rbp*1+0x0],al
   14001cbab:	add    BYTE PTR [rcx],al
   14001cbad:	add    BYTE PTR [rax],al
   14001cbaf:	add    BYTE PTR [rax+0x7b],bh
   14001cbb2:	add    BYTE PTR [rax],al
   14001cbb4:	test   DWORD PTR [rbx+0x0],edi
   14001cbb7:	add    BYTE PTR [rcx],al
   14001cbb9:	add    BYTE PTR [rax],al
   14001cbbb:	add    BYTE PTR [rbp+0x100007b],al
   14001cbc1:	clts   
   14001cbc3:	add    BYTE PTR [rdi],cl
   14001cbc5:	or     eax,DWORD PTR fs:[rax]
   14001cbc8:	sysenter 
   14001cbca:	or     al,BYTE PTR [rax]
   14001cbcc:	(bad)  
   14001cbce:	or     esi,DWORD PTR [rax+0x1]
   14001cbd1:	(bad)  
   14001cbd2:	or     al,0x0
   14001cbd4:	(bad)  
   14001cbd5:	je     0x14001cbe8
   14001cbd7:	add    BYTE PTR [rdi],bl
   14001cbd9:	adc    BYTE PTR fs:[rax],al
   14001cbdc:	(bad)  
   14001cbdd:	xor    al,0xe
   14001cbdf:	add    BYTE PTR [rdi],bl
   14001cbe1:	jb     0x14001cbfb
   14001cbe3:	lock (bad) 
   14001cbe5:	loopne 0x14001cbfb
   14001cbe7:	rcl    BYTE PTR [rdx],1
   14001cbe9:	rcl    BYTE PTR [rax],0x50
   14001cbec:	sbb    DWORD PTR [rsi],ebp
   14001cbee:	or     DWORD PTR [rax],eax
   14001cbf0:	sbb    eax,0x1d00c464
   14001cbf5:	xor    al,0xc3
   14001cbf7:	add    BYTE PTR [rip+0xe00be01],bl        # 0x14e0289fe
   14001cbfd:	loopne 0x14001cc0b
   14001cbff:	jo     0x14001cc0c
   14001cc01:	push   rax
   14001cc02:	add    BYTE PTR [rax],al
   14001cc04:	movabs al,ds:0x1000005e0000131
   14001cc0d:	add    eax,0x74050002
   14001cc12:	add    DWORD PTR [rax],eax
   14001cc14:	add    DWORD PTR [rdx],ecx
   14001cc16:	add    al,0x0
   14001cc18:	or     dh,BYTE PTR [rdi+rax*1]
   14001cc1b:	add    BYTE PTR [rdx],cl
   14001cc1d:	xor    al,BYTE PTR [rsi]
   14001cc1f:	jo     0x14001cc22
   14001cc21:	sbb    al,0xc
   14001cc23:	add    BYTE PTR [rsp+riz*2],bl
   14001cc26:	or     al,0x0
   14001cc28:	sbb    al,0x54
   14001cc2a:	or     eax,DWORD PTR [rax]
   14001cc2c:	sbb    al,0x34
   14001cc2e:	or     al,BYTE PTR [rax]
   14001cc30:	sbb    al,0x32
   14001cc32:	sbb    al,dh
   14001cc34:	(bad)  
   14001cc35:	loopne 0x14001cc4b
   14001cc37:	rcl    BYTE PTR [rdx],1
   14001cc39:	rcl    BYTE PTR [rax],0x70
   14001cc3c:	adc    DWORD PTR [rdx],ecx
   14001cc3e:	add    al,0x0
   14001cc40:	or     dh,BYTE PTR [rax+rcx*1]
   14001cc43:	add    BYTE PTR [rdx],cl
   14001cc45:	push   rdx
   14001cc46:	(bad)  
   14001cc47:	jo     0x14001cc8d
   14001cc49:	sub    al,BYTE PTR [rax]
   14001cc4b:	add    BYTE PTR [rcx],al
   14001cc4d:	add    BYTE PTR [rax],al
   14001cc4f:	add    BYTE PTR [rdx-0x74],bl
   14001cc52:	add    BYTE PTR [rax],al
   14001cc54:	(bad)  [rax+rax*1+0x13c2a00]
   14001cc5b:	add    BYTE PTR [rax],al
   14001cc5d:	add    BYTE PTR [rax],al
   14001cc5f:	add    BYTE PTR [rcx],dl
   14001cc61:	adc    al,0x8
   14001cc63:	add    BYTE PTR [rsp+riz*2],dl
   14001cc66:	(bad)  
   14001cc67:	add    BYTE PTR [rsp+rsi*1],dl
   14001cc6a:	or     al,0x0
   14001cc6c:	adc    al,0x72
   14001cc6e:	adc    al,dh
   14001cc70:	(bad)  
   14001cc71:	loopne 0x14001cc7f
   14001cc73:	jo     0x14001ccb9
   14001cc75:	sub    al,BYTE PTR [rax]
   14001cc77:	add    BYTE PTR [rdx],al
   14001cc79:	add    BYTE PTR [rax],al
   14001cc7b:	add    BYTE PTR [rdx],ch
   14001cc7d:	mov    es,WORD PTR [rax]
   14001cc7f:	add    BYTE PTR [rax-0x72],dh
   14001cc82:	add    BYTE PTR [rax],al
   14001cc84:	rex.XB cmp al,0x1
   14001cc87:	add    BYTE PTR [rax],al
   14001cc89:	add    BYTE PTR [rax],al
   14001cc8b:	add    ch,ch
   14001cc8d:	lea    eax,[rax]
   14001cc8f:	add    BYTE PTR [rsi-0x72],bh
   14001cc92:	add    BYTE PTR [rax],al
   14001cc94:	pop    rbp
   14001cc95:	cmp    al,0x1
   14001cc97:	add    BYTE PTR [rax],al
   14001cc99:	add    BYTE PTR [rax],al
   14001cc9b:	add    BYTE PTR [rcx],dl
   14001cc9d:	(bad)  
   14001cc9e:	add    al,BYTE PTR [rax]
   14001cca0:	(bad)  
   14001cca1:	xor    al,BYTE PTR [rdx]
   14001cca3:	xor    BYTE PTR [rdx+rbp*1+0x0],al
   14001cca7:	add    BYTE PTR [rcx],al
   14001cca9:	add    BYTE PTR [rax],al
   14001ccab:	add    dl,ah
   14001ccad:	nop
   14001ccae:	add    BYTE PTR [rax],al
   14001ccb0:	stc    
   14001ccb1:	nop
   14001ccb2:	add    BYTE PTR [rax],al
   14001ccb4:	jbe    0x14001ccf2
   14001ccb6:	add    DWORD PTR [rax],eax
   14001ccb8:	add    BYTE PTR [rax],al
   14001ccba:	add    BYTE PTR [rax],al
   14001ccbc:	add    DWORD PTR [rbx+rcx*1],ebx
   14001ccbf:	add    BYTE PTR [rsp+rsi*2],bl
   14001ccc2:	(bad)  
   14001ccc3:	add    BYTE PTR [rsp+riz*2],bl
   14001ccc6:	(bad)  
   14001ccc7:	add    BYTE PTR [rsp+rdx*2],bl
   14001ccca:	adc    eax,0x14341c00
   14001cccf:	add    BYTE PTR [rcx+rax*1],bl
   14001ccd2:	adc    al,BYTE PTR [rax]
   14001ccd4:	adc    eax,0x10000e0
   14001ccd9:	adc    eax,0x74150008
   14001ccde:	or     BYTE PTR [rax],al
   14001cce0:	adc    eax,0x15000764
   14001cce5:	xor    al,0x6
   14001cce7:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e1de1f
   14001cced:	adc    al,BYTE PTR [rsi]
   14001ccef:	add    BYTE PTR [rdx],dl
   14001ccf1:	adc    eax,DWORD PTR fs:[rax]
   14001ccf4:	adc    dh,BYTE PTR [rcx+rdx*1]
   14001ccf7:	add    BYTE PTR [rdx],dl
   14001ccf9:	ror    BYTE PTR [rbx],cl
   14001ccfb:	push   rax
   14001ccfc:	add    DWORD PTR [rsi],eax
   14001ccfe:	add    al,BYTE PTR [rax]
   14001cd00:	(bad)  
   14001cd01:	push   rdx
   14001cd02:	add    dh,BYTE PTR [rax]
   14001cd04:	add    DWORD PTR [rip+0x64150006],edx        # 0x1a416cd10
   14001cd0a:	adc    BYTE PTR [rax],al
   14001cd0c:	adc    eax,0x15000e34
   14001cd11:	mov    dl,0x11
   14001cd13:	jo     0x14001cd16
   14001cd15:	lar    eax,WORD PTR [rax]
   14001cd18:	(bad)  
   14001cd19:	xor    al,BYTE PTR [rdx]
   14001cd1b:	push   rax
   14001cd1c:	add    DWORD PTR [rcx],ecx
   14001cd1e:	add    al,BYTE PTR [rax]
   14001cd20:	or     DWORD PTR [rdx+0x9015002],edx
   14001cd26:	add    al,BYTE PTR [rax]
   14001cd28:	or     DWORD PTR [rdx+0x2],esi
   14001cd2b:	push   rax
   14001cd2c:	adc    DWORD PTR [rdi],ecx
   14001cd2e:	add    al,0x0
   14001cd30:	sysenter 
   14001cd32:	(bad)  
   14001cd33:	add    BYTE PTR [rdi],cl
   14001cd35:	xor    cl,BYTE PTR [rbx]
   14001cd37:	jo     0x14001cd7d
   14001cd39:	sub    al,BYTE PTR [rax]
   14001cd3b:	add    BYTE PTR [rcx],al
   14001cd3d:	add    BYTE PTR [rax],al
   14001cd3f:	add    BYTE PTR [rcx-0x36ffff66],bh
   14001cd45:	(bad)  
   14001cd46:	add    BYTE PTR [rax],al
   14001cd48:	(bad)  
   14001cd49:	cmp    al,0x1
   14001cd4b:	add    BYTE PTR [rax],al
   14001cd4d:	add    BYTE PTR [rax],al
   14001cd4f:	add    BYTE PTR [rcx],dl
   14001cd51:	(bad)  
   14001cd53:	add    BYTE PTR [rdi],cl
   14001cd55:	xor    al,0x6
   14001cd57:	add    BYTE PTR [rdi],cl
   14001cd59:	xor    cl,BYTE PTR [rbx]
   14001cd5b:	jo     0x14001cda1
   14001cd5d:	sub    al,BYTE PTR [rax]
   14001cd5f:	add    BYTE PTR [rcx],al
   14001cd61:	add    BYTE PTR [rax],al
   14001cd63:	add    BYTE PTR [rcx-0x66],dh
   14001cd66:	add    BYTE PTR [rax],al
   14001cd68:	xchg   DWORD PTR [rdx+0x3c8f0000],ebx
   14001cd6e:	add    DWORD PTR [rax],eax
   14001cd70:	add    BYTE PTR [rax],al
   14001cd72:	add    BYTE PTR [rax],al
   14001cd74:	adc    DWORD PTR [rdi],ecx
   14001cd76:	add    al,0x0
   14001cd78:	sysenter 
   14001cd7a:	(bad)  
   14001cd7b:	add    BYTE PTR [rdi],cl
   14001cd7d:	xor    cl,BYTE PTR [rbx]
   14001cd7f:	jo     0x14001cdc5
   14001cd81:	sub    al,BYTE PTR [rax]
   14001cd83:	add    BYTE PTR [rcx],al
   14001cd85:	add    BYTE PTR [rax],al
   14001cd87:	add    BYTE PTR [rcx],dl
   14001cd89:	(bad)  
   14001cd8a:	add    BYTE PTR [rax],al
   14001cd8c:	rex.B (bad) 
   14001cd8e:	add    BYTE PTR [rax],al
   14001cd90:	(bad)  
   14001cd91:	cmp    al,0x1
   14001cd93:	add    BYTE PTR [rax],al
   14001cd95:	add    BYTE PTR [rax],al
   14001cd97:	add    BYTE PTR [rcx],dl
   14001cd99:	(bad)  
   14001cd9b:	add    BYTE PTR [rdi],cl
   14001cd9d:	xor    al,0x6
   14001cd9f:	add    BYTE PTR [rdi],cl
   14001cda1:	xor    cl,BYTE PTR [rbx]
   14001cda3:	jo     0x14001cde9
   14001cda5:	sub    al,BYTE PTR [rax]
   14001cda7:	add    BYTE PTR [rcx],al
   14001cda9:	add    BYTE PTR [rax],al
   14001cdab:	add    cl,bh
   14001cdad:	(bad)  
   14001cdae:	add    BYTE PTR [rax],al
   14001cdb0:	(bad)  
   14001cdb1:	fwait
   14001cdb2:	add    BYTE PTR [rax],al
   14001cdb4:	(bad)  
   14001cdb5:	cmp    al,0x1
   14001cdb7:	add    BYTE PTR [rax],al
   14001cdb9:	add    BYTE PTR [rax],al
   14001cdbb:	add    BYTE PTR [rcx],al
   14001cdbd:	sbb    al,0xc
   14001cdbf:	add    BYTE PTR [rsp+riz*2],bl
   14001cdc2:	adc    al,0x0
   14001cdc4:	sbb    al,0x54
   14001cdc6:	adc    eax,DWORD PTR [rax]
   14001cdc8:	sbb    al,0x34
   14001cdca:	adc    al,BYTE PTR [rax]
   14001cdcc:	sbb    al,0xb2
   14001cdce:	sbb    al,dh
   14001cdd0:	(bad)  
   14001cdd1:	loopne 0x14001cde7
   14001cdd3:	rcl    BYTE PTR [rdx],1
   14001cdd5:	rcl    BYTE PTR [rax],0x70
   14001cdd8:	sbb    DWORD PTR [rbx+rax*1],ebx
   14001cddb:	add    BYTE PTR [rsi],cl
   14001cddd:	add    DWORD PTR [rax],ebx
   14001cddf:	add    BYTE PTR [rdx],al
   14001cde1:	push   rax
   14001cde2:	add    BYTE PTR [rax],al
   14001cde4:	movabs al,ds:0x1000000b0000131
   14001cded:	sbb    DWORD PTR [rdx],ecx
   14001cdef:	add    BYTE PTR [rcx],bl
   14001cdf1:	je     0x14001ce02
   14001cdf3:	add    BYTE PTR [rcx],bl
   14001cdf5:	fs (bad) 
   14001cdf7:	add    BYTE PTR [rcx],bl
   14001cdf9:	push   rsp
   14001cdfa:	or     eax,0xc341900
   14001cdff:	add    BYTE PTR [rcx],bl
   14001ce01:	xchg   edx,eax
   14001ce02:	adc    eax,0x81401f0
   14001ce07:	add    BYTE PTR [rsp+riz*2],dl
   14001ce0a:	(bad)  
   14001ce0b:	add    BYTE PTR [rsp+rdx*2],dl
   14001ce0e:	or     eax,0xc341400
   14001ce13:	add    BYTE PTR [rdx+rdx*4],dl
   14001ce16:	adc    BYTE PTR [rax+0x1],dh
   14001ce19:	sbb    eax,0x741d000c
   14001ce1e:	adc    eax,0x14641d00
   14001ce23:	add    BYTE PTR [rip+0x1d001354],bl        # 0x15d01e17d
   14001ce29:	xor    al,0x12
   14001ce2b:	add    BYTE PTR [rip+0x17f019d2],bl        # 0x157f1e803
   14001ce31:	loopne 0x14001ce48
   14001ce33:	rol    BYTE PTR [rcx],0x19
   14001ce36:	or     al,BYTE PTR [rax]
   14001ce38:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   14001ce3c:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   14001ce40:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   14001ce44:	sbb    DWORD PTR [rdx+rcx*1],esi
   14001ce47:	add    BYTE PTR [rcx],bl
   14001ce49:	jb     0x14001ce60
   14001ce4b:	loopne 0x14001ce4e
   14001ce4d:	adc    eax,0x64150008
   14001ce52:	(bad)  
   14001ce53:	add    BYTE PTR [rip+0x15000d54],dl        # 0x15501dbad
   14001ce59:	xor    al,0xc
   14001ce5b:	add    BYTE PTR [rip+0x1e01192],dl        # 0x141e1dff3
   14001ce61:	sbb    DWORD PTR [rdx],ecx
   14001ce63:	add    BYTE PTR [rcx],bl
   14001ce65:	je     0x14001ce76
   14001ce67:	add    BYTE PTR [rcx],bl
   14001ce69:	fs (bad) 
   14001ce6b:	add    BYTE PTR [rcx],bl
   14001ce6d:	push   rsp
   14001ce6e:	or     eax,0xc341900
   14001ce73:	add    BYTE PTR [rcx],bl
   14001ce75:	xchg   edx,eax
   14001ce76:	adc    eax,0x81401e0
   14001ce7b:	add    BYTE PTR [rsp+riz*2],dl
   14001ce7e:	adc    BYTE PTR [rax],al
   14001ce80:	adc    al,0x54
   14001ce82:	lldt   WORD PTR [rsp+rsi*1]
   14001ce86:	(bad)  
   14001ce87:	add    BYTE PTR [rdx+rsi*4],dl
   14001ce8a:	adc    BYTE PTR [rax+0x1],dh
   14001ce8d:	sbb    BYTE PTR [rdx],cl
   14001ce8f:	add    BYTE PTR [rax],bl
   14001ce91:	xor    al,0x10
   14001ce93:	add    BYTE PTR [rax],bl
   14001ce95:	push   rdx
   14001ce96:	adc    al,0xf0
   14001ce98:	adc    ah,al
   14001ce9a:	adc    al,dl
   14001ce9c:	(bad)  
   14001ce9d:	ror    BYTE PTR [rax+rsi*2],0xb
   14001cea1:	(bad)  
   14001cea2:	or     dl,BYTE PTR [rax+0x1]
   14001cea5:	sbb    al,0xc
   14001cea7:	add    BYTE PTR [rsp+riz*2],bl
   14001ceaa:	(bad)  
   14001ceab:	add    BYTE PTR [rsp+rdx*2],bl
   14001ceae:	or     eax,0xc341c00
   14001ceb3:	add    BYTE PTR [rdx+rdx*2],bl
   14001ceb6:	sbb    al,dh
   14001ceb8:	(bad)  
   14001ceb9:	loopne 0x14001cecf
   14001cebb:	rcl    BYTE PTR [rdx],1
   14001cebd:	rcl    BYTE PTR [rax],0x70
   14001cec0:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b416cece
   14001cec6:	or     al,BYTE PTR [rax]
   14001cec8:	adc    eax,0x15000964
   14001cecd:	xor    al,0x8
   14001cecf:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e1e027
   14001ced5:	sbb    DWORD PTR [rdx],ecx
   14001ced7:	add    BYTE PTR [rcx],bl
   14001ced9:	je     0x14001cee6
   14001cedb:	add    BYTE PTR [rcx],bl
   14001cedd:	or     al,BYTE PTR fs:[rax]
   14001cee0:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14001cee4:	sbb    DWORD PTR [rax+rcx*1],esi
   14001cee7:	add    BYTE PTR [rcx],bl
   14001cee9:	push   rdx
   14001ceea:	adc    eax,0x21519e0
   14001ceef:	add    BYTE PTR [rsi],al
   14001cef1:	xchg   edx,eax
   14001cef2:	add    dh,BYTE PTR [rax]
   14001cef4:	movabs al,ds:0x100000048000131
   14001cefd:	sbb    al,0xa
   14001ceff:	add    BYTE PTR [rsp+rsi*1],bl
   14001cf02:	adc    al,0x0
   14001cf04:	sbb    al,0xb2
   14001cf06:	adc    eax,0x11e013f0
   14001cf0b:	ror    BYTE PTR [rdi],1
   14001cf0d:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b61db84
   14001cf14:	add    DWORD PTR [rax+rcx*1],edx
   14001cf17:	add    BYTE PTR [rsp+riz*2],dl
   14001cf1a:	or     BYTE PTR [rax],al
   14001cf1c:	adc    al,0x54
   14001cf1e:	(bad)  
   14001cf1f:	add    BYTE PTR [rsp+rsi*1],dl
   14001cf22:	(bad)  
   14001cf23:	add    BYTE PTR [rdx+rsi*1],dl
   14001cf26:	adc    BYTE PTR [rax+0x1],dh
   14001cf29:	sbb    eax,0x741d000c
   14001cf2e:	or     eax,0xc641d00
   14001cf33:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d01da8d
   14001cf39:	xor    al,0xa
   14001cf3b:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f1e893
   14001cf41:	loopne 0x14001cf58
   14001cf43:	rcr    BYTE PTR [rcx],0x25
   14001cf46:	or     DWORD PTR [rax],eax
   14001cf48:	adc    esi,DWORD PTR [rcx+rdi*1]
   14001cf4b:	add    BYTE PTR [rbx],dl
   14001cf4d:	add    DWORD PTR [rax],esi
   14001cf4f:	add    BYTE PTR [rax+rsi*8],cl
   14001cf52:	or     ah,al
   14001cf54:	or     BYTE PTR [rax+0x7],dh
   14001cf57:	(bad)  
   14001cf58:	(bad)  
   14001cf59:	push   rax
   14001cf5a:	add    BYTE PTR [rax],al
   14001cf5c:	movabs al,ds:0x1100000170000131
   14001cf65:	or     al,BYTE PTR [rax+rax*1]
   14001cf68:	or     dh,BYTE PTR [rdi+rax*1]
   14001cf6b:	add    BYTE PTR [rdx],cl
   14001cf6d:	xor    al,BYTE PTR [rsi]
   14001cf6f:	jo     0x14001cfb5
   14001cf71:	sub    al,BYTE PTR [rax]
   14001cf73:	add    BYTE PTR [rcx],al
   14001cf75:	add    BYTE PTR [rax],al
   14001cf77:	add    dl,cl
   14001cf79:	mov    DWORD PTR [rax],0xc82800
   14001cf7f:	add    BYTE PTR [rcx+0x13c],ch
   14001cf85:	add    BYTE PTR [rax],al
   14001cf87:	add    BYTE PTR [rcx],bl
   14001cf89:	and    eax,0x5416000a
   14001cf8e:	adc    DWORD PTR [rax],eax
   14001cf90:	(bad)  
   14001cf91:	xor    al,0x10
   14001cf93:	add    BYTE PTR [rsi],dl
   14001cf95:	jb     0x14001cfa9
   14001cf97:	lock adc al,ah
   14001cf9a:	(bad)  
   14001cf9b:	ror    BYTE PTR [rax+rsi*2],0xb
   14001cf9f:	(bad)  
   14001cfa0:	movabs al,ds:0x1900000038000131
   14001cfa9:	sub    eax,DWORD PTR [rdi]
   14001cfab:	add    BYTE PTR [rdx],bl
   14001cfad:	je     0x14001cfa3
   14001cfaf:	add    BYTE PTR [rdx],bl
   14001cfb1:	xor    al,0xf3
   14001cfb3:	add    BYTE PTR [rdx],bl
   14001cfb5:	add    eax,esi
   14001cfb7:	add    BYTE PTR [rbx],cl
   14001cfb9:	push   rax
   14001cfba:	add    BYTE PTR [rax],al
   14001cfbc:	movabs al,ds:0x100000770000131
   14001cfc5:	clts   
   14001cfc7:	add    BYTE PTR [rdi],cl
   14001cfc9:	xor    al,0xc
   14001cfcb:	add    BYTE PTR [rdi],cl
   14001cfcd:	jb     0x14001cfd7
   14001cfcf:	jo     0x14001cfd8
   14001cfd1:	(bad)  
   14001cfd2:	(bad)  
   14001cfd3:	push   rax
   14001cfd4:	adc    DWORD PTR [rdi],ecx
   14001cfd6:	add    al,0x0
   14001cfd8:	sysenter 
   14001cfda:	(bad)  
   14001cfdb:	add    BYTE PTR [rdi],cl
   14001cfdd:	xor    cl,BYTE PTR [rbx]
   14001cfdf:	jo     0x14001d025
   14001cfe1:	sub    al,BYTE PTR [rax]
   14001cfe3:	add    BYTE PTR [rcx],al
   14001cfe5:	add    BYTE PTR [rax],al
   14001cfe7:	add    BYTE PTR [rbp-0x71ffff40],al
   14001cfed:	rol    BYTE PTR [rax],0x0
   14001cff0:	(bad)  
   14001cff1:	cmp    al,0x1
   14001cff3:	add    BYTE PTR [rax],al
   14001cff5:	add    BYTE PTR [rax],al
   14001cff7:	add    BYTE PTR [rcx],al
   14001cff9:	adc    al,0x6
   14001cffb:	add    BYTE PTR [rsp+riz*2],dl
   14001cffe:	(bad)  
   14001cfff:	add    BYTE PTR [rsp+rsi*1],dl
   14001d002:	(bad)  
   14001d003:	add    BYTE PTR [rdx+rsi*1],dl
   14001d006:	adc    BYTE PTR [rax+0x11],dh
   14001d009:	adc    eax,0x74150008
   14001d00e:	or     al,BYTE PTR [rax]
   14001d010:	adc    eax,0x15000964
   14001d015:	xor    al,0x8
   14001d017:	add    BYTE PTR [rip+0x44f01152],dl        # 0x184f1e16f
   14001d01d:	sub    al,BYTE PTR [rax]
   14001d01f:	add    BYTE PTR [rcx],al
   14001d021:	add    BYTE PTR [rax],al
   14001d023:	add    BYTE PTR [rsi+rcx*8+0x0],cl
   14001d027:	add    BYTE PTR [rcx+0x760000ce],bl
   14001d02d:	cmp    al,0x1
   14001d02f:	add    BYTE PTR [rax],al
   14001d031:	add    BYTE PTR [rax],al
   14001d033:	add    BYTE PTR [rcx],al
   14001d035:	(bad)  
   14001d036:	add    al,BYTE PTR [rax]
   14001d038:	(bad)  
   14001d039:	xor    cl,BYTE PTR [rdx]
   14001d03b:	xor    BYTE PTR [rcx],al
   14001d03d:	sbb    BYTE PTR [rsi],al
   14001d03f:	add    BYTE PTR [rax],bl
   14001d041:	push   rsp
   14001d042:	(bad)  
   14001d043:	add    BYTE PTR [rax],bl
   14001d045:	xor    al,0x6
   14001d047:	add    BYTE PTR [rax],bl
   14001d049:	xor    dl,BYTE PTR [rax+riz*2]
   14001d04c:	sbb    DWORD PTR [rip+0x741f350d],ebp        # 0x1b421055f
   14001d052:	adc    al,0x0
   14001d054:	sbb    esp,DWORD PTR [rbx+rdx*1+0x0]
   14001d058:	(bad)  
   14001d059:	xor    al,0x12
   14001d05b:	add    BYTE PTR [rbx],dl
   14001d05d:	xor    ecx,DWORD PTR [rsi]
   14001d05f:	mov    dl,0xa
   14001d061:	lock or al,ah
   14001d064:	(bad)  
   14001d065:	rol    BYTE PTR [rax+rax*8],1
   14001d068:	add    dl,BYTE PTR [rax+0x0]
   14001d06b:	add    BYTE PTR [rax+0x50000131],ah
   14001d071:	add    BYTE PTR [rax],al
   14001d073:	add    BYTE PTR [rcx],al
   14001d075:	or     al,BYTE PTR [rdx]
   14001d077:	add    BYTE PTR [rdx],cl
   14001d079:	xor    al,BYTE PTR [rsi]
   14001d07b:	xor    BYTE PTR [rcx],dl
   14001d07d:	or     al,BYTE PTR [rax+rax*1]
   14001d080:	or     dh,BYTE PTR [rsi+rax*1]
   14001d083:	add    BYTE PTR [rdx],cl
   14001d085:	xor    al,BYTE PTR [rsi]
   14001d087:	jo     0x14001d0cd
   14001d089:	sub    al,BYTE PTR [rax]
   14001d08b:	add    BYTE PTR [rcx],al
   14001d08d:	add    BYTE PTR [rax],al
   14001d08f:	add    BYTE PTR [rdi-0x28],bl
   14001d092:	add    BYTE PTR [rax],al
   14001d094:	jne    0x14001d06e
   14001d096:	add    BYTE PTR [rax],al
   14001d098:	fidivr WORD PTR [rbx]
   14001d09a:	add    DWORD PTR [rax],eax
   14001d09c:	add    BYTE PTR [rax],al
   14001d09e:	add    BYTE PTR [rax],al
   14001d0a0:	add    DWORD PTR [rdi],eax
   14001d0a2:	add    DWORD PTR [rax],eax
   14001d0a4:	(bad)  
   14001d0a5:	rex.X add BYTE PTR [rax],al
   14001d0a8:	adc    DWORD PTR [rax],edx
   14001d0aa:	(bad)  
   14001d0ab:	add    BYTE PTR [rax],dl
   14001d0ad:	(bad)  
   14001d0ae:	or     al,0xf0
   14001d0b0:	or     dl,al
   14001d0b2:	or     al,al
   14001d0b4:	(bad)  
   14001d0b5:	jo     0x14001d0bc
   14001d0b7:	(bad)  
   14001d0b8:	add    al,0x30
   14001d0ba:	add    BYTE PTR [rax],al
   14001d0bc:	sub    r8b,BYTE PTR [rax]
   14001d0bf:	add    BYTE PTR [rcx],al
   14001d0c1:	add    BYTE PTR [rax],al
   14001d0c3:	add    BYTE PTR [rdi-0x24],dl
   14001d0c6:	add    BYTE PTR [rax],al
   14001d0c8:	push   rcx
   14001d0c9:	fld    QWORD PTR [rax]
   14001d0cb:	add    dl,al
   14001d0cd:	cmp    al,0x1
   14001d0cf:	add    BYTE PTR [rax],al
   14001d0d1:	add    BYTE PTR [rax],al
   14001d0d3:	add    BYTE PTR [rcx],dl
   14001d0d5:	(bad)  
   14001d0d7:	add    BYTE PTR [rdi],cl
   14001d0d9:	xor    al,0x6
   14001d0db:	add    BYTE PTR [rdi],cl
   14001d0dd:	xor    cl,BYTE PTR [rbx]
   14001d0df:	jo     0x14001d125
   14001d0e1:	sub    al,BYTE PTR [rax]
   14001d0e3:	add    BYTE PTR [rcx],al
   14001d0e5:	add    BYTE PTR [rax],al
   14001d0e7:	add    dh,al
   14001d0e9:	fiadd  DWORD PTR [rax]
   14001d0eb:	add    ah,bl
   14001d0ed:	fiadd  DWORD PTR [rax]
   14001d0ef:	add    BYTE PTR [rdi+0x13c],cl
   14001d0f5:	add    BYTE PTR [rax],al
   14001d0f7:	add    BYTE PTR [rcx],bl
   14001d0f9:	sub    BYTE PTR [rax],cl
   14001d0fb:	add    BYTE PTR [rdx],bl
   14001d0fd:	in     al,0x15
   14001d0ff:	add    BYTE PTR [rdx],bl
   14001d101:	je     0x14001d117
   14001d103:	add    BYTE PTR [rdx],bl
   14001d105:	adc    eax,DWORD PTR fs:[rax]
   14001d108:	sbb    dh,dl
   14001d10a:	adc    BYTE PTR [rax-0x60],dl
   14001d10d:	xor    DWORD PTR [rcx],eax
   14001d10f:	add    BYTE PTR [rax+0x0],dh
   14001d112:	add    BYTE PTR [rax],al
   14001d114:	add    DWORD PTR [rip+0x74150009],edx        # 0x1b416d123
   14001d11a:	add    eax,0x4641500
   14001d11f:	add    BYTE PTR [rip+0x15000354],dl        # 0x15501d479
   14001d125:	xor    al,0x2
   14001d127:	add    BYTE PTR [rip+0x110000e0],dl        # 0x15101d20d
   14001d12d:	(bad)  
   14001d12f:	add    BYTE PTR [rdi],cl
   14001d131:	xor    al,0x7
   14001d133:	add    BYTE PTR [rdi],cl
   14001d135:	xor    cl,BYTE PTR [rbx]
   14001d137:	jo     0x14001d17d
   14001d139:	sub    al,BYTE PTR [rax]
   14001d13b:	add    BYTE PTR [rcx],al
   14001d13d:	add    BYTE PTR [rax],al
   14001d13f:	add    BYTE PTR [rdx-0x3bffff20],bh
   14001d145:	loopne 0x14001d147
   14001d147:	add    dh,ah
   14001d149:	cmp    al,0x1
   14001d14b:	add    BYTE PTR [rax],al
   14001d14d:	add    BYTE PTR [rax],al
   14001d14f:	add    BYTE PTR [rcx],dl
   14001d151:	(bad)  
   14001d153:	add    BYTE PTR [rdi],cl
   14001d155:	xor    al,0x6
   14001d157:	add    BYTE PTR [rdi],cl
   14001d159:	xor    cl,BYTE PTR [rbx]
   14001d15b:	jo     0x14001d1a1
   14001d15d:	sub    al,BYTE PTR [rax]
   14001d15f:	add    BYTE PTR [rcx],al
   14001d161:	add    BYTE PTR [rax],al
   14001d163:	add    cl,bh
   14001d165:	loopne 0x14001d167
   14001d167:	add    BYTE PTR [rcx+riz*8+0x0],dl
   14001d16b:	add    BYTE PTR [rip+0x13d],dl        # 0x14001d2ae
   14001d171:	add    BYTE PTR [rax],al
   14001d173:	add    BYTE PTR [rcx],dl
   14001d175:	sbb    ecx,DWORD PTR [rdx]
   14001d177:	add    BYTE PTR [rbx],bl
   14001d179:	fs or  al,0x0
   14001d17c:	sbb    esi,DWORD PTR [rbx+rcx*1]
   14001d17f:	add    BYTE PTR [rbx],bl
   14001d181:	xor    dl,BYTE PTR [rdi]
   14001d183:	lock adc eax,0x11d013e0
   14001d189:	ror    BYTE PTR [rdi],0x70
   14001d18c:	sub    r8b,BYTE PTR [rax]
   14001d18f:	add    BYTE PTR [rcx],al
   14001d191:	add    BYTE PTR [rax],al
   14001d193:	add    BYTE PTR [rdx],bl
   14001d195:	call   0x1284bd19a
   14001d19a:	add    BYTE PTR [rax],al
   14001d19c:	(bad)  
   14001d19d:	cmp    al,0x1
   14001d19f:	add    BYTE PTR [rax],al
   14001d1a1:	add    BYTE PTR [rax],al
   14001d1a3:	add    BYTE PTR [rcx],al
   14001d1a5:	(bad)  
   14001d1a6:	or     al,BYTE PTR [rax]
   14001d1a8:	(bad)  
   14001d1a9:	xor    al,0x17
   14001d1ab:	add    BYTE PTR [rdi],dl
   14001d1ad:	mov    dl,0x10
   14001d1af:	lock (bad) 
   14001d1b1:	loopne 0x14001d1bf
   14001d1b3:	ror    BYTE PTR [rdx],1
   14001d1b5:	ror    BYTE PTR [rax],0x70
   14001d1b8:	(bad)  
   14001d1b9:	(bad)  
   14001d1ba:	(bad)  
   14001d1bb:	push   rax
   14001d1bc:	sbb    DWORD PTR [rax],ebp
   14001d1be:	or     al,BYTE PTR [rax]
   14001d1c0:	sbb    dh,BYTE PTR [rax+rbx*1]
   14001d1c3:	add    BYTE PTR [rdx],bl
   14001d1c5:	repnz adc al,dh
   14001d1c8:	(bad)  
   14001d1c9:	loopne 0x14001d1d7
   14001d1cb:	ror    BYTE PTR [rdx],1
   14001d1cd:	ror    BYTE PTR [rax],0x70
   14001d1d0:	(bad)  
   14001d1d1:	(bad)  
   14001d1d2:	(bad)  
   14001d1d3:	push   rax
   14001d1d4:	movabs al,ds:0x1900000070000131
   14001d1dd:	sub    eax,0x541b0009
   14001d1e2:	nop
   14001d1e3:	add    bl,BYTE PTR [rbx]
   14001d1e5:	xor    al,0x8e
   14001d1e7:	add    bl,BYTE PTR [rbx]
   14001d1e9:	add    DWORD PTR [rdx+0xce00e02],ecx
   14001d1ef:	jo     0x14001d1fc
   14001d1f1:	(bad)  
   14001d1f2:	add    BYTE PTR [rax],al
   14001d1f4:	movabs al,ds:0x1900001440000131
   14001d1fd:	xor    DWORD PTR [rbx],ecx
   14001d1ff:	add    BYTE PTR [rdi],bl
   14001d201:	push   rsp
   14001d202:	xchg   esi,eax
   14001d203:	add    bl,BYTE PTR [rdi]
   14001d205:	xor    al,0x94
   14001d207:	add    bl,BYTE PTR [rdi]
   14001d209:	add    DWORD PTR [rsi+0x10f01202],ecx
   14001d20f:	loopne 0x14001d21f
   14001d211:	ror    BYTE PTR [rax+rsi*2],0xb
   14001d215:	(bad)  
   14001d216:	add    BYTE PTR [rax],al
   14001d218:	movabs al,ds:0x100001460000131
   14001d221:	(bad)  
   14001d222:	add    al,BYTE PTR [rax]
   14001d224:	(bad)  
   14001d225:	jb     0x14001d229
   14001d227:	xor    BYTE PTR [rcx],al
   14001d229:	clts   
   14001d22b:	add    BYTE PTR [rdi],cl
   14001d22d:	adc    DWORD PTR fs:[rax],eax
   14001d230:	sysenter 
   14001d232:	adc    BYTE PTR [rax],al
   14001d234:	psrld  mm1,QWORD PTR [rbx]
   14001d237:	jo     0x14001d252
   14001d239:	sub    eax,0x741f550d
   14001d23e:	adc    al,0x0
   14001d240:	sbb    esp,DWORD PTR [rbx+rdx*1+0x0]
   14001d244:	(bad)  
   14001d245:	xor    al,0x12
   14001d247:	add    BYTE PTR [rbx],dl
   14001d249:	push   rbx
   14001d24a:	(bad)  
   14001d24b:	mov    dl,0xa
   14001d24d:	lock or al,ah
   14001d250:	(bad)  
   14001d251:	rol    BYTE PTR [rax+rax*8],1
   14001d254:	add    dl,BYTE PTR [rax+0x0]
   14001d257:	add    BYTE PTR [rax+0x58000131],ah
   14001d25d:	add    BYTE PTR [rax],al
   14001d25f:	add    BYTE PTR [rcx],al
   14001d261:	clts   
   14001d263:	add    BYTE PTR [rdi],cl
   14001d265:	fs (bad) 
   14001d267:	add    BYTE PTR [rdi],cl
   14001d269:	xor    al,0x6
   14001d26b:	add    BYTE PTR [rdi],cl
   14001d26d:	xor    cl,BYTE PTR [rbx]
   14001d26f:	jo     0x14001d28a
   14001d271:	sub    eax,0x11c000a
   14001d276:	sti    
   14001d277:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e1de6d
   14001d27d:	rol    BYTE PTR [rdi],1
   14001d27f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14361d6f6
   14001d286:	add    dl,BYTE PTR [rax-0x60]
   14001d289:	xor    DWORD PTR [rcx],eax
   14001d28b:	add    al,al
   14001d28d:	(bad)  
   14001d28e:	add    BYTE PTR [rax],al
   14001d290:	add    DWORD PTR [rcx+0xe],ebx
   14001d293:	add    BYTE PTR [rcx-0xc],bl
   14001d296:	rex.XB add BYTE PTR [r9-0x1c],dl
   14001d29a:	add    BYTE PTR [rcx-0x3c],r9b
   14001d29e:	rex.RX add BYTE PTR [rcx+0x54],r8b
   14001d2a2:	rex.RXB add BYTE PTR [r14],r14b
   14001d2a5:	xor    al,0x48
   14001d2a7:	add    BYTE PTR [rsi],cl
   14001d2a9:	add    DWORD PTR [rcx+0x0],ecx
   14001d2ac:	(bad)  
   14001d2ad:	jo     0x14001d2b5
   14001d2af:	(bad)  
   14001d2b0:	and    DWORD PTR [rax],ecx
   14001d2b2:	add    al,BYTE PTR [rax]
   14001d2b4:	or     ah,dl
   14001d2b6:	add    BYTE PTR [r8-0x10],r12b
   14001d2ba:	add    BYTE PTR [rax],al
   14001d2bc:	leave  
   14001d2bd:	icebp  
   14001d2be:	add    BYTE PTR [rax],al
   14001d2c0:	nop
   14001d2c1:	rol    BYTE PTR [rcx],cl
   14001d2c3:	add    BYTE PTR [rcx],ah
   14001d2c5:	add    BYTE PTR [rax],al
   14001d2c7:	add    BYTE PTR [rax-0x10],ah
   14001d2ca:	add    BYTE PTR [rax],al
   14001d2cc:	leave  
   14001d2cd:	icebp  
   14001d2ce:	add    BYTE PTR [rax],al
   14001d2d0:	nop
   14001d2d1:	rol    BYTE PTR [rcx],cl
   14001d2d3:	add    BYTE PTR [rcx],al
   14001d2d5:	(bad)  
   14001d2d6:	(bad)  
   14001d2d7:	add    BYTE PTR [rdi],dl
   14001d2d9:	or     DWORD PTR fs:[rax],eax
   14001d2dc:	(bad)  
   14001d2dd:	xor    al,0x8
   14001d2df:	add    BYTE PTR [rdi],dl
   14001d2e1:	xor    dl,BYTE PTR [rbx]
   14001d2e3:	jo     0x14001d2e6
   14001d2e5:	adc    al,0x8
   14001d2e7:	add    BYTE PTR [rsp+riz*2],dl
   14001d2ea:	or     al,0x0
   14001d2ec:	adc    al,0x54
   14001d2ee:	or     eax,DWORD PTR [rax]
   14001d2f0:	adc    al,0x34
   14001d2f2:	or     al,BYTE PTR [rax]
   14001d2f4:	adc    al,0x72
   14001d2f6:	adc    BYTE PTR [rax+0x1],dh
   14001d2f9:	clts   
   14001d2fb:	add    BYTE PTR [rdi],cl
   14001d2fd:	str    WORD PTR fs:[rdi]
   14001d301:	xor    al,0xe
   14001d303:	add    BYTE PTR [rdi],cl
   14001d305:	mov    dl,0xb
   14001d307:	jo     0x14001d322
   14001d309:	(bad)  
   14001d30a:	or     edx,DWORD PTR [rbp+0x19]
   14001d30d:	push   rbx
   14001d30e:	adc    al,0x1
   14001d310:	adc    DWORD PTR [rax],eax
   14001d312:	or     eax,0x9e00bf0
   14001d317:	rol    BYTE PTR [rdi],1
   14001d319:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14361d790
   14001d320:	add    dl,BYTE PTR [rax+0x0]
   14001d323:	add    BYTE PTR [rax+0x78000131],ah
   14001d329:	add    BYTE PTR [rax],al
   14001d32b:	add    BYTE PTR [rcx],bl
   14001d32d:	(bad)  
   14001d32e:	add    eax,0x88010d00
   14001d333:	add    BYTE PTR [rsi],al
   14001d335:	loopne 0x14001d33b
   14001d337:	rol    BYTE PTR [rdx],0x50
   14001d33a:	add    BYTE PTR [rax],al
   14001d33c:	movabs al,ds:0x2100000400000131
   14001d345:	sub    BYTE PTR [rdx],cl
   14001d347:	add    BYTE PTR [rax],ch
   14001d349:	hlt    
   14001d34a:	add    DWORD PTR [rax],0x20
   14001d34d:	(bad)  
   14001d34e:	test   BYTE PTR [rax],al
   14001d350:	sbb    BYTE PTR [rbp+rax*4+0x0],dh
   14001d354:	adc    BYTE PTR [rsi+rax*4+0x0],ah
   14001d358:	or     BYTE PTR [rdi+rax*4],dh
   14001d35b:	add    BYTE PTR [rax-0x4fffeee],ah
   14001d361:	adc    al,BYTE PTR [rcx]
   14001d363:	add    BYTE PTR [rbx+rdx*8],ch
   14001d366:	add    DWORD PTR [rax],eax
   14001d368:	and    DWORD PTR [rax],eax
   14001d36a:	add    BYTE PTR [rax],al
   14001d36c:	movabs al,ds:0x2c000112fb000112
   14001d375:	rol    DWORD PTR [rcx],cl
   14001d377:	add    BYTE PTR [rcx],al
   14001d379:	(bad)  
   14001d37a:	(bad)  
   14001d37b:	add    BYTE PTR [rdi],dl
   14001d37d:	push   rsp
   14001d37e:	or     eax,DWORD PTR [rax]
   14001d380:	(bad)  
   14001d381:	xor    dl,BYTE PTR [rbx]
   14001d383:	lock adc eax,esp
   14001d386:	pshufw mm4,QWORD PTR [rcx],0x15
   14001d38a:	(bad)  
   14001d38b:	add    BYTE PTR [rip+0xd000ac4],dl        # 0x14d01de55
   14001d391:	or     DWORD PTR fs:[rax],eax
   14001d394:	add    eax,0xd0000834
   14001d399:	adc    DWORD PTR [rcx],eax
   14001d39b:	add    bh,ah
   14001d39d:	adc    DWORD PTR [rcx],eax
   14001d39f:	add    BYTE PTR [rax-0x2d],bh
   14001d3a2:	add    DWORD PTR [rax],eax
   14001d3a4:	and    DWORD PTR [rax],eax
   14001d3a6:	add    BYTE PTR [rax],al
   14001d3a8:	rcl    BYTE PTR [rcx],1
   14001d3aa:	add    DWORD PTR [rax],eax
   14001d3ac:	out    0x11,eax
   14001d3ae:	add    DWORD PTR [rax],eax
   14001d3b0:	js     0x14001d385
   14001d3b2:	add    DWORD PTR [rax],eax
   14001d3b4:	sbb    DWORD PTR [rbx],edx
   14001d3b6:	add    DWORD PTR [rax],eax
   14001d3b8:	add    al,0xa2
   14001d3ba:	add    BYTE PTR [rax],al
   14001d3bc:	movabs al,ds:0x100000040000131
   14001d3c5:	or     al,BYTE PTR [rax+rax*1]
   14001d3c8:	or     dh,BYTE PTR [rdx+rcx*1]
   14001d3cb:	add    BYTE PTR [rdx],cl
   14001d3cd:	jb     0x14001d3d5
   14001d3cf:	jo     0x14001d3d2
   14001d3d1:	or     BYTE PTR [rcx],al
   14001d3d3:	add    BYTE PTR [rax],cl
   14001d3d5:	(bad)  
   14001d3d6:	add    BYTE PTR [rax],al
   14001d3d8:	adc    DWORD PTR [rdi],ecx
   14001d3da:	add    al,0x0
   14001d3dc:	sysenter 
   14001d3de:	(bad)  
   14001d3df:	add    BYTE PTR [rdi],cl
   14001d3e1:	xor    cl,BYTE PTR [rbx]
   14001d3e3:	jo     0x14001d429
   14001d3e5:	sub    al,BYTE PTR [rax]
   14001d3e7:	add    BYTE PTR [rcx],al
   14001d3e9:	add    BYTE PTR [rax],al
   14001d3eb:	add    ch,bl
   14001d3ed:	sbb    BYTE PTR [rcx],al
   14001d3ef:	add    BYTE PTR [rip+0x15000119],bl        # 0x15501d50e
   14001d3f5:	cmp    eax,0x1
   14001d3fa:	add    BYTE PTR [rax],al
   14001d3fc:	adc    DWORD PTR [rbx],ebx
   14001d3fe:	or     al,BYTE PTR [rax]
   14001d400:	sbb    esp,DWORD PTR [rsp+rcx*1+0x0]
   14001d404:	sbb    esi,DWORD PTR [rbx+rcx*1]
   14001d407:	add    BYTE PTR [rbx],bl
   14001d409:	xor    dl,BYTE PTR [rdi]
   14001d40b:	lock adc eax,0x11d013e0
   14001d411:	ror    BYTE PTR [rdi],0x70
   14001d414:	sub    r8b,BYTE PTR [rax]
   14001d417:	add    BYTE PTR [rcx],al
   14001d419:	add    BYTE PTR [rax],al
   14001d41b:	add    BYTE PTR [rdi+0x1b],dl
   14001d41e:	add    DWORD PTR [rax],eax
   14001d420:	mov    BYTE PTR [rbx],bl
   14001d422:	add    DWORD PTR [rax],eax
   14001d424:	(bad)  
   14001d425:	cmp    al,0x1
   14001d427:	add    BYTE PTR [rax],al
   14001d429:	add    BYTE PTR [rax],al
   14001d42b:	add    BYTE PTR [rcx],al
   14001d42d:	or     DWORD PTR [rcx],eax
   14001d42f:	add    BYTE PTR [rcx],cl
   14001d431:	(bad)  
   14001d432:	add    BYTE PTR [rax],al
   14001d434:	add    BYTE PTR [rax],al
   14001d436:	add    BYTE PTR [rax],al
   14001d438:	add    DWORD PTR [rdx],ecx
   14001d43a:	add    eax,DWORD PTR [rax]
   14001d43c:	or     ch,BYTE PTR [rax+0x2]
   14001d43f:	add    BYTE PTR [rdx+riz*4],al
   14001d442:	add    BYTE PTR [rax],al
   14001d444:	add    DWORD PTR [rcx+rax*1],eax
   14001d447:	add    BYTE PTR [rdx+rax*4],al
   14001d44a:	add    BYTE PTR [rax],al
   14001d44c:	or     DWORD PTR [rcx],ebx
   14001d44e:	or     al,BYTE PTR [rax]
   14001d450:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   14001d454:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14001d458:	sbb    DWORD PTR [rcx+rcx*1],esi
   14001d45b:	add    BYTE PTR [rcx],bl
   14001d45d:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e1e853
   14001d463:	rol    BYTE PTR [rdx+rbp*1+0x0],0x0
   14001d468:	add    DWORD PTR [rax],eax
   14001d46a:	add    BYTE PTR [rax],al
   14001d46c:	mov    esi,0xc7000127
   14001d471:	(bad)  
   14001d472:	add    DWORD PTR [rax],eax
   14001d474:	(bad)  
   14001d475:	cmp    eax,0x27c70001
   14001d47a:	add    DWORD PTR [rax],eax
   14001d47c:	add    DWORD PTR [rax],ecx
   14001d47e:	add    al,BYTE PTR [rax]
   14001d480:	or     BYTE PTR [rdx+0x26193004],dl
   14001d486:	or     DWORD PTR [rax],eax
   14001d488:	sbb    BYTE PTR [rax+0xe],ch
   14001d48b:	add    BYTE PTR [rcx+rax*1],dl
   14001d48e:	(bad)  
   14001d48f:	add    BYTE PTR [rcx],cl
   14001d491:	loopne 0x14001d49a
   14001d493:	jo     0x14001d49b
   14001d495:	(bad)  
   14001d496:	add    eax,0x500430
   14001d49b:	add    BYTE PTR [rax-0x2ffffecf],ah
   14001d4a1:	add    BYTE PTR [rax],al
   14001d4a3:	add    BYTE PTR [rcx],al
   14001d4a5:	(bad)  
   14001d4a6:	add    al,BYTE PTR [rax]
   14001d4a8:	(bad)  
   14001d4a9:	adc    al,BYTE PTR [rdx]
   14001d4ab:	xor    BYTE PTR [rcx],al
   14001d4ad:	or     eax,DWORD PTR [rbx]
   14001d4af:	add    BYTE PTR [rbx],cl
   14001d4b1:	push   0xffffffffc2070005
   14001d4b6:	add    BYTE PTR [rax],al
   14001d4b8:	add    DWORD PTR [rcx+rax*1],eax
   14001d4bb:	add    BYTE PTR [rdx+riz*2],al
   14001d4be:	add    BYTE PTR [rax],al
   14001d4c0:	add    DWORD PTR [rcx+rax*1],eax
   14001d4c3:	add    BYTE PTR [rdx+rax*1],al
   14001d4c6:	add    BYTE PTR [rax],al
   14001d4c8:	add    DWORD PTR [rbx],ebx
   14001d4ca:	or     BYTE PTR [rax],al
   14001d4cc:	sbb    esi,DWORD PTR [rcx+rcx*1+0x0]
   14001d4d0:	sbb    esp,DWORD PTR [rax+rcx*1+0x0]
   14001d4d4:	sbb    esi,DWORD PTR [rdi+rax*1]
   14001d4d7:	add    BYTE PTR [rbx],bl
   14001d4d9:	xor    dl,BYTE PTR [rax+rdx*2]
   14001d4dc:	or     DWORD PTR [rdi],ecx
   14001d4de:	(bad)  
   14001d4df:	add    BYTE PTR [rdi],cl
   14001d4e1:	or     DWORD PTR fs:[rax],eax
   14001d4e4:	sysenter 
   14001d4e6:	or     BYTE PTR [rax],al
   14001d4e8:	rdmsr  
   14001d4ea:	or     esi,DWORD PTR [rax+0x44]
   14001d4ed:	sub    al,BYTE PTR [rax]
   14001d4ef:	add    BYTE PTR [rcx],al
   14001d4f1:	add    BYTE PTR [rax],al
   14001d4f3:	add    BYTE PTR [rdx+0x30],ah
   14001d4f6:	add    DWORD PTR [rax],eax
   14001d4f8:	imul   esi,DWORD PTR [rax],0x3d2f0001
   14001d4fe:	add    DWORD PTR [rax],eax
   14001d500:	imul   esi,DWORD PTR [rax],0xa090001
   14001d506:	add    al,0x0
   14001d508:	or     dh,BYTE PTR [rsi+rax*1]
   14001d50b:	add    BYTE PTR [rdx],cl
   14001d50d:	xor    al,BYTE PTR [rsi]
   14001d50f:	jo     0x14001d555
   14001d511:	sub    al,BYTE PTR [rax]
   14001d513:	add    BYTE PTR [rcx],al
   14001d515:	add    BYTE PTR [rax],al
   14001d517:	add    BYTE PTR [rip+0x60000131],ch        # 0x1a001d64e
   14001d51d:	xor    DWORD PTR [rcx],eax
   14001d51f:	add    BYTE PTR [rax+0x3d],ah
   14001d522:	add    DWORD PTR [rax],eax
   14001d524:	(bad)  
   14001d525:	xor    DWORD PTR [rcx],eax
   14001d527:	add    BYTE PTR [rcx],al
   14001d529:	add    al,BYTE PTR [rcx]
   14001d52b:	add    BYTE PTR [rdx],al
   14001d52d:	xor    BYTE PTR [rax],al
   14001d52f:	add    BYTE PTR [rcx],al
   14001d531:	add    BYTE PTR [rax],al
   14001d533:	add    BYTE PTR [rcx],al
   14001d535:	or     BYTE PTR [rcx],al
   14001d537:	add    BYTE PTR [rax],cl
   14001d539:	rex.X add BYTE PTR [rax],al
   14001d53c:	add    DWORD PTR [rdx],ecx
   14001d53e:	add    al,0x0
   14001d540:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   14001d547:	jo     0x14001d54a
   14001d549:	or     BYTE PTR [rax+rax*1],al
   14001d54c:	or     BYTE PTR [rdx+0x4],dh
   14001d54f:	jo     0x14001d554
   14001d551:	(bad)  
   14001d552:	add    dh,BYTE PTR [rax]
   14001d554:	add    BYTE PTR [rax],al
   14001d556:	add    BYTE PTR [rax],al
   14001d558:	add    DWORD PTR [rcx+rax*1],eax
   14001d55b:	add    BYTE PTR [rdx+rdx*1],al
   14001d55e:	add    BYTE PTR [rax],al
   14001d560:	add    DWORD PTR [rax],eax
   14001d562:	add    BYTE PTR [rax],al
   14001d564:	add    BYTE PTR [rax],al
   14001d566:	add    BYTE PTR [rax],al
   14001d568:	add    DWORD PTR [rax],eax
	...
   14001d572:	add    BYTE PTR [rax],al
   14001d574:	mov    eax,0x25
   14001d579:	add    BYTE PTR [rax],al
   14001d57b:	add    BYTE PTR [rax+0x1d5],dl
	...
   14001d58d:	add    BYTE PTR [rax],al
   14001d58f:	add    BYTE PTR [rdx],al
   14001d591:	add    BYTE PTR [rax],al
   14001d593:	add    BYTE PTR [rax-0x2ffffe2b],ch
   14001d599:	(bad)  
   14001d59a:	add    DWORD PTR [rax],eax
	...
   14001d5a8:	adc    BYTE PTR [rax],al
   14001d5aa:	add    BYTE PTR [rax],al
   14001d5ac:	rex jmp 0x14001d5b3
   14001d5b2:	add    BYTE PTR [rax],al
   14001d5b4:	(bad)  
   14001d5b5:	(bad)  
   14001d5b6:	(bad)  
   14001d5b7:	inc    DWORD PTR [rax]
   14001d5b9:	add    BYTE PTR [rax],al
   14001d5bb:	add    BYTE PTR [rax],bl
   14001d5bd:	add    BYTE PTR [rax],al
   14001d5bf:	add    al,al
   14001d5c1:	and    al,0x0
	...
   14001d5d3:	add    BYTE PTR [rax-0x17],ch
   14001d5d6:	add    DWORD PTR [rax],eax
   14001d5d8:	add    BYTE PTR [rax],al
   14001d5da:	add    BYTE PTR [rax],al
   14001d5dc:	(bad)  
   14001d5dd:	(bad)  
   14001d5de:	(bad)  
   14001d5df:	inc    DWORD PTR [rax]
   14001d5e1:	add    BYTE PTR [rax],al
   14001d5e3:	add    BYTE PTR [rax],bl
   14001d5e5:	add    BYTE PTR [rax],al
   14001d5e7:	add    BYTE PTR [rax+0x25],al
	...
   14001d5f9:	add    BYTE PTR [rax],al
   14001d5fb:	add    BYTE PTR [rax+0x25],bh
   14001d601:	add    BYTE PTR [rax],al
   14001d603:	add    BYTE PTR [rax],bl
   14001d605:	(bad)  
   14001d606:	add    DWORD PTR [rax],eax
	...
   14001d618:	add    eax,DWORD PTR [rax]
   14001d61a:	add    BYTE PTR [rax],al
   14001d61c:	cmp    dh,dl
   14001d61e:	add    DWORD PTR [rax],eax
   14001d620:	test   al,0xd5
   14001d622:	add    DWORD PTR [rax],eax
   14001d624:	rcl    ch,1
   14001d626:	add    DWORD PTR [rax],eax
	...
   14001d63c:	nop
   14001d63d:	jmp    0x14001d643
   14001d642:	add    BYTE PTR [rax],al
   14001d644:	(bad)  
   14001d645:	(bad)  
   14001d646:	(bad)  
   14001d647:	inc    DWORD PTR [rax]
   14001d649:	add    BYTE PTR [rax],al
   14001d64b:	add    BYTE PTR [rax],bl
   14001d64d:	add    BYTE PTR [rax],al
   14001d64f:	add    BYTE PTR [rax],ah
   14001d651:	and    eax,0x0
   14001d656:	add    BYTE PTR [rax],al
   14001d658:	add    BYTE PTR [rax],al
   14001d65a:	add    BYTE PTR [rax],al
   14001d65c:	mov    dh,dl
   14001d65e:	add    DWORD PTR [rax],eax
	...
   14001d668:	mov    ah,0xda
   14001d66a:	add    DWORD PTR [rax],eax
   14001d66c:	add    BYTE PTR [rax+0x1],al
	...
   14001d687:	add    al,ah
   14001d689:	fadd   DWORD PTR [rcx]
   14001d68b:	add    BYTE PTR [rax],al
   14001d68d:	add    BYTE PTR [rax],al
   14001d68f:	add    dh,ch
   14001d691:	fadd   DWORD PTR [rcx]
   14001d693:	add    BYTE PTR [rax],al
   14001d695:	add    BYTE PTR [rax],al
   14001d697:	add    BYTE PTR [rcx+rbx*8],al
   14001d69a:	add    DWORD PTR [rax],eax
   14001d69c:	add    BYTE PTR [rax],al
   14001d69e:	add    BYTE PTR [rax],al
   14001d6a0:	adc    bl,cl
   14001d6a2:	add    DWORD PTR [rax],eax
   14001d6a4:	add    BYTE PTR [rax],al
   14001d6a6:	add    BYTE PTR [rax],al
   14001d6a8:	and    bl,cl
   14001d6aa:	add    DWORD PTR [rax],eax
   14001d6ac:	add    BYTE PTR [rax],al
   14001d6ae:	add    BYTE PTR [rax],al
   14001d6b0:	xor    al,0xd9
   14001d6b2:	add    DWORD PTR [rax],eax
   14001d6b4:	add    BYTE PTR [rax],al
   14001d6b6:	add    BYTE PTR [rax],al
   14001d6b8:	rex.WX fld DWORD PTR [rcx]
   14001d6bb:	add    BYTE PTR [rax],al
   14001d6bd:	add    BYTE PTR [rax],al
   14001d6bf:	add    BYTE PTR [rcx+rbx*8+0x1],bl
   14001d6c3:	add    BYTE PTR [rax],al
   14001d6c5:	add    BYTE PTR [rax],al
   14001d6c7:	add    BYTE PTR [rcx+rbx*8+0x1],ch
   14001d6cb:	add    BYTE PTR [rax],al
   14001d6cd:	add    BYTE PTR [rax],al
   14001d6cf:	add    BYTE PTR [rsi+0x1d9],al
   14001d6d5:	add    BYTE PTR [rax],al
   14001d6d7:	add    BYTE PTR [rcx+rbx*8+0x1],bl
   14001d6de:	add    BYTE PTR [rax],al
   14001d6e0:	mov    dl,0xd9
   14001d6e2:	add    DWORD PTR [rax],eax
   14001d6e4:	add    BYTE PTR [rax],al
   14001d6e6:	add    BYTE PTR [rax],al
   14001d6e8:	int3   
   14001d6e9:	fld    DWORD PTR [rcx]
   14001d6eb:	add    BYTE PTR [rax],al
   14001d6ed:	add    BYTE PTR [rax],al
   14001d6ef:	add    dl,ah
   14001d6f1:	fld    DWORD PTR [rcx]
   14001d6f3:	add    BYTE PTR [rax],al
   14001d6f5:	add    BYTE PTR [rax],al
   14001d6f7:	add    dh,dh
   14001d6f9:	fld    DWORD PTR [rcx]
   14001d6fb:	add    BYTE PTR [rax],al
   14001d6fd:	add    BYTE PTR [rax],al
   14001d6ff:	add    BYTE PTR [rax],dl
   14001d701:	fiadd  DWORD PTR [rcx]
   14001d703:	add    BYTE PTR [rax],al
   14001d705:	add    BYTE PTR [rax],al
   14001d707:	add    BYTE PTR [rdx+rbx*8],ah
   14001d70a:	add    DWORD PTR [rax],eax
   14001d70c:	add    BYTE PTR [rax],al
   14001d70e:	add    BYTE PTR [rax],al
   14001d710:	cmp    dl,bl
   14001d712:	add    DWORD PTR [rax],eax
   14001d714:	add    BYTE PTR [rax],al
   14001d716:	add    BYTE PTR [rax],al
   14001d718:	push   rsp
   14001d719:	fiadd  DWORD PTR [rcx]
   14001d71b:	add    BYTE PTR [rax],al
   14001d71d:	add    BYTE PTR [rax],al
   14001d71f:	add    BYTE PTR [rdx-0x26],dh
   14001d722:	add    DWORD PTR [rax],eax
   14001d724:	add    BYTE PTR [rax],al
   14001d726:	add    BYTE PTR [rax],al
   14001d728:	test   dl,bl
   14001d72a:	add    DWORD PTR [rax],eax
   14001d72c:	add    BYTE PTR [rax],al
   14001d72e:	add    BYTE PTR [rax],al
   14001d730:	movabs al,ds:0xc2000000000001da
   14001d739:	fiadd  DWORD PTR [rcx]
   14001d73b:	add    BYTE PTR [rax],al
   14001d73d:	add    BYTE PTR [rax],al
   14001d73f:	add    al,dl
   14001d741:	fiadd  DWORD PTR [rcx]
   14001d743:	add    BYTE PTR [rax],al
   14001d745:	add    BYTE PTR [rax],al
   14001d747:	add    ah,ah
   14001d749:	fiadd  DWORD PTR [rcx]
   14001d74b:	add    BYTE PTR [rax],al
   14001d74d:	add    BYTE PTR [rax],al
   14001d74f:	add    dh,dh
   14001d751:	fiadd  DWORD PTR [rcx]
   14001d753:	add    BYTE PTR [rax],al
   14001d755:	add    BYTE PTR [rax],al
   14001d757:	add    BYTE PTR [rsi],al
   14001d759:	fild   DWORD PTR [rcx]
   14001d75b:	add    BYTE PTR [rax],al
   14001d75d:	add    BYTE PTR [rax],al
   14001d75f:	add    BYTE PTR [rsi],bl
   14001d761:	fild   DWORD PTR [rcx]
   14001d763:	add    BYTE PTR [rax],al
   14001d765:	add    BYTE PTR [rax],al
   14001d767:	add    BYTE PTR [rsi],dh
   14001d769:	fild   DWORD PTR [rcx]
   14001d76b:	add    BYTE PTR [rax],al
   14001d76d:	add    BYTE PTR [rax],al
   14001d76f:	add    BYTE PTR [rsi-0x25],cl
   14001d772:	add    DWORD PTR [rax],eax
   14001d774:	add    BYTE PTR [rax],al
   14001d776:	add    BYTE PTR [rax],al
   14001d778:	jbe    0x14001d755
   14001d77a:	add    DWORD PTR [rax],eax
   14001d77c:	add    BYTE PTR [rax],al
   14001d77e:	add    BYTE PTR [rax],al
   14001d780:	(bad)  
   14001d781:	fild   DWORD PTR [rcx]
   14001d783:	add    BYTE PTR [rax],al
   14001d785:	add    BYTE PTR [rax],al
   14001d787:	add    BYTE PTR [rax+0x1db],dl
   14001d78d:	add    BYTE PTR [rax],al
   14001d78f:	add    BYTE PTR [rsi+0x1db],bl
   14001d795:	add    BYTE PTR [rax],al
   14001d797:	add    BYTE PTR [rax+0x1db],ch
   14001d79d:	add    BYTE PTR [rax],al
   14001d79f:	add    BYTE PTR [rsi+0x1db],dh
   14001d7a5:	add    BYTE PTR [rax],al
   14001d7a7:	add    al,cl
   14001d7a9:	fild   DWORD PTR [rcx]
   14001d7ab:	add    BYTE PTR [rax],al
   14001d7ad:	add    BYTE PTR [rax],al
   14001d7af:	add    ah,bl
   14001d7b1:	fild   DWORD PTR [rcx]
   14001d7b3:	add    BYTE PTR [rax],al
   14001d7b5:	add    BYTE PTR [rax],al
   14001d7b7:	add    dl,ch
   14001d7b9:	fild   DWORD PTR [rcx]
   14001d7bb:	add    BYTE PTR [rax],al
   14001d7bd:	add    BYTE PTR [rax],al
   14001d7bf:	add    dh,bh
   14001d7c1:	fild   DWORD PTR [rcx]
   14001d7c3:	add    BYTE PTR [rax],al
   14001d7c5:	add    BYTE PTR [rax],al
   14001d7c7:	add    BYTE PTR [rsp+rbx*8],dl
   14001d7ca:	add    DWORD PTR [rax],eax
   14001d7cc:	add    BYTE PTR [rax],al
   14001d7ce:	add    BYTE PTR [rax],al
   14001d7d0:	sub    bl,ah
   14001d7d2:	add    DWORD PTR [rax],eax
   14001d7d4:	add    BYTE PTR [rax],al
   14001d7d6:	add    BYTE PTR [rax],al
   14001d7d8:	rex fadd QWORD PTR [rcx]
   14001d7db:	add    BYTE PTR [rax],al
   14001d7dd:	add    BYTE PTR [rax],al
   14001d7df:	add    BYTE PTR [rax-0x24],dl
   14001d7e2:	add    DWORD PTR [rax],eax
   14001d7e4:	add    BYTE PTR [rax],al
   14001d7e6:	add    BYTE PTR [rax],al
   14001d7e8:	pop    rsp
   14001d7e9:	fadd   QWORD PTR [rcx]
   14001d7eb:	add    BYTE PTR [rax],al
   14001d7ed:	add    BYTE PTR [rax],al
   14001d7ef:	add    BYTE PTR [rsi-0x24],ch
   14001d7f2:	add    DWORD PTR [rax],eax
   14001d7f4:	add    BYTE PTR [rax],al
   14001d7f6:	add    BYTE PTR [rax],al
   14001d7f8:	sbb    ah,0x1
   14001d7fb:	add    BYTE PTR [rax],al
   14001d7fd:	add    BYTE PTR [rax],al
   14001d7ff:	add    BYTE PTR [rdx+0x1dc],cl
   14001d805:	add    BYTE PTR [rax],al
   14001d807:	add    BYTE PTR [rsi+0x1dc],dl
   14001d80d:	add    BYTE PTR [rax],al
   14001d80f:	add    BYTE PTR [rdx+0x1dc],ah
   14001d815:	add    BYTE PTR [rax],al
   14001d817:	add    BYTE PTR [rsp+rbx*8+0x1],dh
   14001d81e:	add    BYTE PTR [rax],al
   14001d820:	(bad)  
   14001d821:	fadd   QWORD PTR [rcx]
   14001d823:	add    BYTE PTR [rax],al
   14001d825:	add    BYTE PTR [rax],al
   14001d827:	add    dl,dl
   14001d829:	fadd   QWORD PTR [rcx]
   14001d82b:	add    BYTE PTR [rax],al
   14001d82d:	add    BYTE PTR [rax],al
   14001d82f:	add    ah,ch
   14001d831:	fadd   QWORD PTR [rcx]
   14001d833:	add    BYTE PTR [rax],al
   14001d835:	add    BYTE PTR [rax],al
   14001d837:	add    BYTE PTR [rsi],al
   14001d839:	fld    QWORD PTR [rcx]
   14001d83b:	add    BYTE PTR [rax],al
   14001d83d:	add    BYTE PTR [rax],al
   14001d83f:	add    BYTE PTR [rsi],bl
   14001d841:	fld    QWORD PTR [rcx]
   14001d843:	add    BYTE PTR [rax],al
   14001d845:	add    BYTE PTR [rax],al
   14001d847:	add    BYTE PTR [rdx],ch
   14001d849:	fld    QWORD PTR [rcx]
   14001d84b:	add    BYTE PTR [rax],al
   14001d84d:	add    BYTE PTR [rax],al
   14001d84f:	add    BYTE PTR [rsi],bh
   14001d851:	fld    QWORD PTR [rcx]
   14001d853:	add    BYTE PTR [rax],al
   14001d855:	add    BYTE PTR [rax],al
   14001d857:	add    BYTE PTR [rsi-0x23],cl
   14001d85a:	add    DWORD PTR [rax],eax
   14001d85c:	add    BYTE PTR [rax],al
   14001d85e:	add    BYTE PTR [rax],al
   14001d860:	(bad)  
   14001d861:	fld    QWORD PTR [rcx]
   14001d863:	add    BYTE PTR [rax],al
   14001d865:	add    BYTE PTR [rax],al
   14001d867:	add    BYTE PTR [rbp+rbx*8+0x1],ch
   14001d86b:	add    BYTE PTR [rax],al
   14001d86d:	add    BYTE PTR [rax],al
   14001d86f:	add    BYTE PTR [rax-0x23],bh
   14001d872:	add    DWORD PTR [rax],eax
   14001d874:	add    BYTE PTR [rax],al
   14001d876:	add    BYTE PTR [rax],al
   14001d878:	xchg   edx,eax
   14001d879:	fld    QWORD PTR [rcx]
   14001d87b:	add    BYTE PTR [rax],al
   14001d87d:	add    BYTE PTR [rax],al
   14001d87f:	add    BYTE PTR [rbp+rbx*8+0x1],ch
   14001d886:	add    BYTE PTR [rax],al
   14001d888:	mov    esp,0x1dd
   14001d88d:	add    BYTE PTR [rax],al
   14001d88f:	add    dh,cl
   14001d891:	fld    QWORD PTR [rcx]
   14001d893:	add    BYTE PTR [rax],al
   14001d895:	add    BYTE PTR [rax],al
   14001d897:	add    al,ah
   14001d899:	fld    QWORD PTR [rcx]
   14001d89b:	add    BYTE PTR [rax],al
   14001d89d:	add    BYTE PTR [rax],al
   14001d89f:	add    ah,dh
   14001d8a1:	fld    QWORD PTR [rcx]
   14001d8a3:	add    BYTE PTR [rax],al
   14001d8a5:	add    BYTE PTR [rax],al
   14001d8a7:	add    BYTE PTR [rsi+rbx*8],al
   14001d8aa:	add    DWORD PTR [rax],eax
   14001d8ac:	add    BYTE PTR [rax],al
   14001d8ae:	add    BYTE PTR [rax],al
   14001d8b0:	(bad)  
   14001d8b1:	fiadd  WORD PTR [rcx]
   14001d8b3:	add    BYTE PTR [rax],al
   14001d8b5:	add    BYTE PTR [rax],al
   14001d8b7:	add    BYTE PTR [rdx],ah
   14001d8b9:	fiadd  WORD PTR [rcx]
   14001d8bb:	add    BYTE PTR [rax],al
   14001d8bd:	add    BYTE PTR [rax],al
   14001d8bf:	add    BYTE PTR [rax],dh
   14001d8c1:	fiadd  WORD PTR [rcx]
   14001d8c3:	add    BYTE PTR [rax],al
   14001d8c5:	add    BYTE PTR [rax],al
   14001d8c7:	add    BYTE PTR [rsi+rbx*8+0x1],al
   14001d8cb:	add    BYTE PTR [rax],al
   14001d8cd:	add    BYTE PTR [rax],al
   14001d8cf:	add    BYTE PTR [rsi+rbx*8+0x1],dl
	...
   14001d8df:	add    BYTE PTR [rdx+0x65724300],bh
   14001d8e5:	(bad)  
   14001d8e6:	je     0x14001d94d
   14001d8e8:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x47023700
   14001d8f1:	gs je  0x14001d93a
   14001d8f4:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14001d8fc:	(bad)  
   14001d8fd:	jne    0x14001d973
   14001d8ff:	gs jae 0x14001d943
   14001d902:	add    BYTE PTR [rax],al
   14001d904:	jg     0x14001d906
   14001d906:	rex.XB ins BYTE PTR es:[rdi],dx
   14001d908:	outs   dx,DWORD PTR ds:[rsi]
   14001d909:	jae    0x14001d970
   14001d90b:	rex.W (bad) 
   14001d90d:	outs   dx,BYTE PTR ds:[rsi]
   14001d90e:	fs ins BYTE PTR es:[rdi],dx
   14001d910:	add    BYTE PTR gs:[rsi+0x2],dl
   14001d914:	rex.RXB
   14001d915:	gs je  0x14001d964
   14001d918:	(bad)  
   14001d919:	jae    0x14001d98f
   14001d91b:	rex.RB jb 0x14001d990
   14001d91e:	outs   dx,DWORD PTR ds:[rsi]
   14001d91f:	jb     0x14001d921
   14001d921:	add    BYTE PTR [rsi],dl
   14001d923:	add    DWORD PTR [rbp+riz*2+0x76],eax
   14001d927:	imul   esp,DWORD PTR [rbx+0x65],0x6f436f49
   14001d92e:	outs   dx,BYTE PTR ds:[rsi]
   14001d92f:	je     0x14001d9a3
   14001d931:	outs   dx,DWORD PTR ds:[rsi]
   14001d932:	ins    BYTE PTR es:[rdi],dx
   14001d933:	add    BYTE PTR [rax+0x2],ch
   14001d936:	rex.RXB
   14001d937:	gs je  0x14001d987
   14001d93a:	outs   dx,DWORD PTR ds:[rsi]
   14001d93b:	fs jne 0x14001d9aa
   14001d93e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14001d948:	add    BYTE PTR [rax],al
   14001d94a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d94b:	add    al,BYTE PTR [rdi+0x65]
   14001d94e:	je     0x14001d9a0
   14001d950:	jb     0x14001d9c1
   14001d952:	movsxd eax,DWORD PTR [rcx+0x64]
   14001d955:	fs jb  0x14001d9bd
   14001d958:	jae    0x14001d9cd
   14001d95a:	add    BYTE PTR [rax],al
   14001d95c:	test   al,0x3
   14001d95e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001d960:	(bad)  
   14001d961:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   14001d96a:	add    BYTE PTR [rax],al
   14001d96c:	xor    BYTE PTR [rcx+rdx*2],al
   14001d96f:	jne    0x14001d9d6
   14001d971:	jb     0x14001d9ec
   14001d973:	push   rax
   14001d974:	gs jb  0x14001d9dd
   14001d977:	outs   dx,DWORD PTR ds:[rsi]
   14001d978:	jb     0x14001d9e7
   14001d97a:	(bad)  
   14001d97b:	outs   dx,BYTE PTR ds:[rsi]
   14001d97c:	movsxd esp,DWORD PTR [rbp+0x43]
   14001d97f:	outs   dx,DWORD PTR ds:[rsi]
   14001d980:	jne    0x14001d9f0
   14001d982:	je     0x14001d9e9
   14001d984:	jb     0x14001d986
   14001d986:	adc    BYTE PTR [rdx],al
   14001d988:	rex.RXB
   14001d989:	gs je  0x14001d9cf
   14001d98c:	jne    0x14001da00
   14001d98e:	jb     0x14001d9f5
   14001d990:	outs   dx,BYTE PTR ds:[rsi]
   14001d991:	je     0x14001d9e3
   14001d993:	jb     0x14001da04
   14001d995:	movsxd esp,DWORD PTR [rbp+0x73]
   14001d998:	jae    0x14001d9e3
   14001d99a:	add    BYTE PTR fs:[rdx+rax*1],dl
   14001d99e:	rex.RXB
   14001d99f:	gs je  0x14001d9e5
   14001d9a2:	jne    0x14001da16
   14001d9a4:	jb     0x14001da0b
   14001d9a6:	outs   dx,BYTE PTR ds:[rsi]
   14001d9a7:	je     0x14001d9fd
   14001d9a9:	push   0x64616572
   14001d9ae:	rex.WB
   14001d9af:	add    BYTE PTR fs:[rax],al
   14001d9b2:	fld    QWORD PTR [rdx]
   14001d9b4:	rex.RXB
   14001d9b5:	gs je  0x14001da0b
   14001d9b8:	jns    0x14001da2d
   14001d9ba:	je     0x14001da21
   14001d9bc:	ins    DWORD PTR es:[rdi],dx
   14001d9bd:	push   rsp
   14001d9be:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14001d9c5:	ins    BYTE PTR es:[rdi],dx
   14001d9c6:	gs push rsp
   14001d9c8:	imul   ebp,DWORD PTR [rbp+0x65],0x49035400
   14001d9cf:	outs   dx,BYTE PTR ds:[rsi]
   14001d9d0:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001d9d8:	push   rbx
   14001d9d9:	imul   r14,QWORD PTR [rbx+0x74],0x64616548
   14001d9e1:	add    BYTE PTR [rsi+0x6c745204],ch
   14001d9e7:	rex.XB (bad) 
   14001d9e9:	jo     0x14001da5f
   14001d9eb:	jne    0x14001da5f
   14001d9ed:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14001d9f0:	outs   dx,BYTE PTR ds:[rsi]
   14001d9f1:	je     0x14001da58
   14001d9f3:	js     0x14001da69
   14001d9f5:	add    BYTE PTR [rbp+0x6c745204],dh
   14001d9fb:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001d9fd:	outs   dx,DWORD PTR ds:[rsi]
   14001d9fe:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14001da02:	jne    0x14001da72
   14001da04:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001da08:	outs   dx,BYTE PTR ds:[rsi]
   14001da09:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14001da0b:	je     0x14001da7f
   14001da0d:	jns    0x14001da0f
   14001da0f:	add    BYTE PTR [rsp+rax*1+0x566c7452],bh
   14001da16:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14001da1d:	outs   dx,BYTE PTR ds:[rsi]
   14001da1e:	ja     0x14001da89
   14001da20:	outs   dx,BYTE PTR ds:[rsi]
   14001da21:	add    BYTE PTR fs:[rax],al
   14001da24:	push   0x3
   14001da26:	rex.WB jae 0x14001da6d
   14001da29:	gs (bad) 
   14001da2b:	jne    0x14001da94
   14001da2d:	addr32 gs jb 0x14001da81
   14001da31:	jb     0x14001da98
   14001da33:	jae    0x14001da9a
   14001da35:	outs   dx,BYTE PTR ds:[rsi]
   14001da36:	je     0x14001da38
   14001da38:	xchg   edx,eax
   14001da39:	add    eax,0x61686e55
   14001da3e:	outs   dx,BYTE PTR ds:[rsi]
   14001da3f:	fs ins BYTE PTR es:[rdi],dx
   14001da41:	gs fs rex.RB js 0x14001daa9
   14001da46:	gs jo  0x14001dabd
   14001da49:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14001da50:	gs jb  0x14001da53
   14001da53:	add    BYTE PTR [rdx+0x5],dl
   14001da56:	push   rbx
   14001da57:	gs je  0x14001daaf
   14001da5a:	outs   dx,BYTE PTR ds:[rsi]
   14001da5b:	push   0x6c646e61
   14001da60:	gs fs rex.RB js 0x14001dac8
   14001da65:	gs jo  0x14001dadc
   14001da68:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14001da6f:	gs jb  0x14001da72
   14001da72:	(bad)
   14001da75:	gs je  0x14001dacb
   14001da78:	je     0x14001dadb
   14001da7a:	jb     0x14001daf0
   14001da7c:	jne    0x14001daee
   14001da7e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001da80:	outs   dx,WORD PTR ds:[rsi]
   14001da82:	push   rdi
   14001da83:	add    BYTE PTR [rax+0x3],dh
   14001da86:	rex.WB jae 0x14001dad9
   14001da89:	jb     0x14001dafa
   14001da8b:	movsxd esp,DWORD PTR [rbp+0x73]
   14001da8e:	jae    0x14001daff
   14001da90:	jb     0x14001dad8
   14001da92:	gs (bad) 
   14001da94:	je     0x14001db0b
   14001da96:	jb     0x14001dafd
   14001da98:	push   rax
   14001da99:	jb     0x14001db00
   14001da9b:	jae    0x14001db02
   14001da9d:	outs   dx,BYTE PTR ds:[rsi]
   14001da9e:	je     0x14001daa0
   14001daa0:	ins    DWORD PTR es:[rdi],dx
   14001daa1:	add    al,BYTE PTR [rdi+0x65]
   14001daa4:	je     0x14001daf3
   14001daa6:	outs   dx,DWORD PTR ds:[rsi]
   14001daa7:	fs jne 0x14001db16
   14001daaa:	gs rex.W (bad) 
   14001daad:	outs   dx,BYTE PTR ds:[rsi]
   14001daae:	fs ins BYTE PTR es:[rdi],dx
   14001dab0:	gs push rdi
   14001dab2:	add    BYTE PTR [rax],al
   14001dab4:	rex.WXB
   14001dab5:	rex.RB push r10
   14001dab7:	rex.WRX
   14001dab8:	rex.RB
   14001dab9:	xor    r14,QWORD PTR [rdx]
   14001dabc:	cs fs ins BYTE PTR es:[rdi],dx
   14001dabf:	ins    BYTE PTR es:[rdi],dx
   14001dac0:	add    BYTE PTR [rax],al
   14001dac2:	mov    ebx,0x6c745204
   14001dac7:	push   rbp
   14001dac8:	outs   dx,BYTE PTR ds:[rsi]
   14001dac9:	ja     0x14001db34
   14001dacb:	outs   dx,BYTE PTR ds:[rsi]
   14001dacc:	fs rex.RB js 0x14001dad0
   14001dad0:	mov    bh,0x4
   14001dad2:	push   rdx
   14001dad3:	je     0x14001db41
   14001dad5:	push   rax
   14001dad6:	movsxd edx,DWORD PTR [rdi+rbp*2+0x46]
   14001dada:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x65646165
   14001dae2:	jb     0x14001dae4
   14001dae4:	rex.R add al,0x52
   14001dae7:	(bad)  
   14001dae8:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14001daef:	jo     0x14001db65
   14001daf1:	imul   ebp,DWORD PTR [rdi+0x6e],0x5190000
   14001daf8:	push   rbx
   14001daf9:	gs je  0x14001db48
   14001dafc:	(bad)  
   14001dafd:	jae    0x14001db73
   14001daff:	rex.RB jb 0x14001db74
   14001db02:	outs   dx,DWORD PTR ds:[rsi]
   14001db03:	jb     0x14001db05
   14001db05:	add    BYTE PTR [rcx],ch
   14001db07:	add    DWORD PTR [rbp+0x6e],eax
   14001db0a:	je     0x14001db71
   14001db0c:	jb     0x14001db51
   14001db0e:	jb     0x14001db79
   14001db10:	je     0x14001db7b
   14001db12:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001db15:	push   rbx
   14001db16:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001db1b:	outs   dx,BYTE PTR ds:[rsi]
   14001db1c:	add    BYTE PTR [rax],al
   14001db1e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001db1f:	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   14001db23:	jbe    0x14001db8a
   14001db25:	rex.XB jb 0x14001db91
   14001db28:	je     0x14001db93
   14001db2a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001db2d:	push   rbx
   14001db2e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001db33:	outs   dx,BYTE PTR ds:[rsi]
   14001db34:	add    BYTE PTR [rax],al
   14001db36:	(bad)  
   14001db37:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14001db3b:	gs je  0x14001dba3
   14001db3e:	rex.XB jb 0x14001dbaa
   14001db41:	je     0x14001dbac
   14001db43:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001db46:	push   rbx
   14001db47:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001db4c:	outs   dx,BYTE PTR ds:[rsi]
   14001db4d:	add    BYTE PTR [rcx+0x3],dl
   14001db50:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001db52:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001db5a:	rex.XB jb 0x14001dbc6
   14001db5d:	je     0x14001dbc8
   14001db5f:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001db62:	push   rbx
   14001db63:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001db68:	outs   dx,BYTE PTR ds:[rsi]
   14001db69:	rex.B outs dx,BYTE PTR ds:[rsi]
   14001db6b:	fs push rbx
   14001db6d:	jo     0x14001dbd8
   14001db6f:	outs   dx,BYTE PTR ds:[rsi]
   14001db70:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001db72:	jne    0x14001dbe2
   14001db74:	je     0x14001db76
   14001db76:	(bad)  
   14001db77:	add    eax,0x41736c54
   14001db7c:	ins    BYTE PTR es:[rdi],dx
   14001db7d:	ins    BYTE PTR es:[rdi],dx
   14001db7e:	outs   dx,DWORD PTR ds:[rsi]
   14001db7f:	movsxd eax,DWORD PTR [rax]
   14001db81:	add    BYTE PTR [rbp+rax*1+0x47736c54],al
   14001db88:	gs je  0x14001dbe1
   14001db8b:	(bad)  
   14001db8c:	ins    BYTE PTR es:[rdi],dx
   14001db8d:	jne    0x14001dbf4
   14001db8f:	add    BYTE PTR [rbp+0x736c5405],al
   14001db95:	push   rbx
   14001db96:	gs je  0x14001dbef
   14001db99:	(bad)  
   14001db9a:	ins    BYTE PTR es:[rdi],dx
   14001db9b:	jne    0x14001dc02
   14001db9d:	add    BYTE PTR [rbx+0x736c5405],al
   14001dba3:	rex.RX jb 0x14001dc0b
   14001dba6:	add    BYTE PTR gs:[rcx+rax*1+0x65657246],ah
   14001dbae:	imul   r12,QWORD PTR [rdx+0x72],0x797261
   14001dbb6:	stos   BYTE PTR es:[rdi],al
   14001dbb7:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14001dbbb:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14001dbc4:	js     0x14001dc1d
   14001dbc6:	add    BYTE PTR [rax],al
   14001dbc8:	lar    eax,WORD PTR [rdi+0x65]
   14001dbcc:	je     0x14001dc11
   14001dbce:	jne    0x14001dc42
   14001dbd0:	jb     0x14001dc37
   14001dbd2:	outs   dx,BYTE PTR ds:[rsi]
   14001dbd3:	je     0x14001dc25
   14001dbd5:	jb     0x14001dc46
   14001dbd7:	movsxd esp,DWORD PTR [rbp+0x73]
   14001dbda:	jae    0x14001dbdc
   14001dbdc:	push   rdi
   14001dbdd:	add    DWORD PTR [rbp+0x78],eax
   14001dbe0:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   14001dbe8:	jae    0x14001dbea
   14001dbea:	jo     0x14001dbf1
   14001dbec:	push   rsp
   14001dbed:	gs jb  0x14001dc5d
   14001dbf0:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14001dbf7:	outs   dx,DWORD PTR ds:[rsi]
   14001dbf8:	movsxd esp,DWORD PTR [rbp+0x73]
   14001dbfb:	jae    0x14001dbfd
   14001dbfd:	add    BYTE PTR [rdx+rax*1+0x47],ch
   14001dc01:	gs je  0x14001dc51
   14001dc04:	outs   dx,DWORD PTR ds:[rsi]
   14001dc05:	fs jne 0x14001dc74
   14001dc08:	gs rex.W (bad) 
   14001dc0b:	outs   dx,BYTE PTR ds:[rsi]
   14001dc0c:	fs ins BYTE PTR es:[rdi],dx
   14001dc0e:	gs rex.RB js 0x14001dc69
   14001dc12:	add    BYTE PTR [rax],al
   14001dc14:	fld    QWORD PTR [rip+0x65646957]        # 0x1a5664571
   14001dc1a:	rex.XB push 0x6f547261
   14001dc20:	rex.WRB jne 0x14001dc8f
   14001dc23:	je     0x14001dc8e
   14001dc25:	rex.X jns 0x14001dc9c
   14001dc28:	gs add ah,dl
   14001dc2b:	add    ecx,DWORD PTR [rbp+0x75]
   14001dc2e:	ins    BYTE PTR es:[rdi],dx
   14001dc2f:	je     0x14001dc9a
   14001dc31:	rex.X jns 0x14001dca8
   14001dc34:	gs push rsp
   14001dc36:	outs   dx,DWORD PTR ds:[rsi]
   14001dc37:	push   rdi
   14001dc38:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14001dc40:	mov    DWORD PTR [rdx],0x53746547
   14001dc46:	je     0x14001dcac
   14001dc48:	rex.W (bad) 
   14001dc4a:	outs   dx,BYTE PTR ds:[rsi]
   14001dc4b:	fs ins BYTE PTR es:[rdi],dx
   14001dc4d:	add    BYTE PTR gs:[rax],al
   14001dc50:	icebp  
   14001dc51:	add    eax,0x74697257
   14001dc56:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x0],0x654701ce
   14001dc60:	je     0x14001dca5
   14001dc62:	outs   dx,DWORD PTR ds:[rsi]
   14001dc63:	ins    DWORD PTR es:[rdi],dx
   14001dc64:	ins    DWORD PTR es:[rdi],dx
   14001dc65:	(bad)  
   14001dc66:	outs   dx,BYTE PTR ds:[rsi]
   14001dc67:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1cf0041
   14001dc70:	rex.RXB
   14001dc71:	gs je  0x14001dcb7
   14001dc74:	outs   dx,DWORD PTR ds:[rsi]
   14001dc75:	ins    DWORD PTR es:[rdi],dx
   14001dc76:	ins    DWORD PTR es:[rdi],dx
   14001dc77:	(bad)  
   14001dc78:	outs   dx,BYTE PTR ds:[rsi]
   14001dc79:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1aa0057
   14001dc82:	rex.RXB
   14001dc83:	gs je  0x14001dcc7
   14001dc86:	rex.XB push r8
   14001dc88:	add    BYTE PTR [rax],al
   14001dc8a:	cmp    al,0x3
   14001dc8c:	rex.W
   14001dc8d:	gs (bad) 
   14001dc8f:	jo     0x14001dcd7
   14001dc91:	jb     0x14001dcf8
   14001dc93:	add    BYTE PTR gs:[rax],al
   14001dc96:	cmp    BYTE PTR [rbx],al
   14001dc98:	rex.W
   14001dc99:	gs (bad) 
   14001dc9b:	jo     0x14001dcde
   14001dc9d:	ins    BYTE PTR es:[rdi],dx
   14001dc9e:	ins    BYTE PTR es:[rdi],dx
   14001dc9f:	outs   dx,DWORD PTR ds:[rsi]
   14001dca0:	movsxd eax,DWORD PTR [rax]
   14001dca2:	xchg   ebx,eax
   14001dca3:	add    BYTE PTR [rbx+0x6f],al
   14001dca6:	ins    DWORD PTR es:[rdi],dx
   14001dca7:	jo     0x14001dd0a
   14001dca9:	jb     0x14001dd10
   14001dcab:	push   rbx
   14001dcac:	je     0x14001dd20
   14001dcae:	imul   ebp,DWORD PTR [rsi+0x67],0x99000057
   14001dcb5:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   14001dcb9:	(bad)  
   14001dcba:	jo     0x14001dd0f
   14001dcbc:	je     0x14001dd30
   14001dcbe:	imul   ebp,DWORD PTR [rsi+0x67],0x45000057
   14001dcc5:	add    al,BYTE PTR [rdi+0x65]
   14001dcc8:	je     0x14001dd10
   14001dcca:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   14001dcd2:	cld    
   14001dcd3:	add    al,0x53
   14001dcd5:	gs je  0x14001dd1d
   14001dcd8:	outs   dx,BYTE PTR ds:[rsi]
   14001dcd9:	jbe    0x14001dd44
   14001dcdb:	jb     0x14001dd4c
   14001dcdd:	outs   dx,BYTE PTR ds:[rsi]
   14001dcde:	ins    DWORD PTR es:[rdi],dx
   14001dcdf:	outs   dx,BYTE PTR gs:[rsi]
   14001dce1:	je     0x14001dd39
   14001dce3:	(bad)  
   14001dce4:	jb     0x14001dd4f
   14001dce6:	(bad)  
   14001dce7:	(bad)  
   14001dce8:	ins    BYTE PTR es:[rdi],dx
   14001dce9:	gs add r13b,dil
   14001dced:	add    al,0x53
   14001dcef:	gs je  0x14001dd37
   14001dcf2:	outs   dx,BYTE PTR ds:[rsi]
   14001dcf3:	jbe    0x14001dd5e
   14001dcf5:	jb     0x14001dd66
   14001dcf7:	outs   dx,BYTE PTR ds:[rsi]
   14001dcf8:	ins    DWORD PTR es:[rdi],dx
   14001dcf9:	outs   dx,BYTE PTR gs:[rsi]
   14001dcfb:	je     0x14001dd53
   14001dcfd:	(bad)  
   14001dcfe:	jb     0x14001dd69
   14001dd00:	(bad)  
   14001dd01:	(bad)  
   14001dd02:	ins    BYTE PTR es:[rdi],dx
   14001dd03:	gs push rdi
   14001dd05:	add    BYTE PTR [rcx],bh
   14001dd07:	add    al,BYTE PTR [rdi+0x65]
   14001dd0a:	je     0x14001dd52
   14001dd0c:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14001dd14:	(bad)  
   14001dd15:	jne    0x14001dd8b
   14001dd17:	gs jae 0x14001dd5f
   14001dd1a:	js     0x14001dd73
   14001dd1c:	add    BYTE PTR [rax],al
   14001dd1e:	outs   dx,BYTE PTR ds:[rsi]
   14001dd1f:	add    DWORD PTR [rsi+0x69],eax
   14001dd22:	outs   dx,BYTE PTR ds:[rsi]
   14001dd23:	fs rex.XB ins BYTE PTR es:[rdi],dx
   14001dd26:	outs   dx,DWORD PTR ds:[rsi]
   14001dd27:	jae    0x14001dd8e
   14001dd29:	add    BYTE PTR [rbx+0x1],dh
   14001dd2c:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   14001dd34:	je     0x14001dd7c
   14001dd36:	imul   ebp,DWORD PTR [rbp+riz*2+0x45],0x4178
   14001dd3e:	add    DWORD PTR [rcx],0x46
   14001dd41:	imul   ebp,DWORD PTR [rsi+0x64],0x7478654e
   14001dd48:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x49037500
   14001dd51:	jae    0x14001dda9
   14001dd53:	(bad)  
   14001dd54:	ins    BYTE PTR es:[rdi],dx
   14001dd55:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   14001dd5d:	add    BYTE PTR gs:[ebp+0x74654702],cl
   14001dd65:	rex.WRXB
   14001dd66:	rex.RB
   14001dd67:	rex.WRB
   14001dd68:	rex.XB push r8
   14001dd6a:	add    BYTE PTR [rax],al
   14001dd6c:	mov    ecx,0x74654701
   14001dd71:	rex.XB push r8
   14001dd73:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001dd75:	outs   dx,WORD PTR ds:[rsi]
   14001dd77:	add    BYTE PTR [rsi],ch
   14001dd79:	add    al,BYTE PTR [rdi+0x65]
   14001dd7c:	je     0x14001ddc3
   14001dd7e:	outs   dx,BYTE PTR ds:[rsi]
   14001dd7f:	jbe    0x14001ddea
   14001dd81:	jb     0x14001ddf2
   14001dd83:	outs   dx,BYTE PTR ds:[rsi]
   14001dd84:	ins    DWORD PTR es:[rdi],dx
   14001dd85:	outs   dx,BYTE PTR gs:[rsi]
   14001dd87:	je     0x14001dddc
   14001dd89:	je     0x14001ddfd
   14001dd8b:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   14001dd92:	movabs ds:0x766e456565724601,eax
   14001dd9b:	imul   esi,DWORD PTR [rdx+0x6f],0x6e656d6e
   14001dda2:	je     0x14001ddf7
   14001dda4:	je     0x14001de18
   14001dda6:	imul   ebp,DWORD PTR [rsi+0x67],0x30005773
   14001ddad:	add    eax,0x53746553
   14001ddb2:	je     0x14001de18
   14001ddb4:	rex.W (bad) 
   14001ddb6:	outs   dx,BYTE PTR ds:[rsi]
   14001ddb7:	fs ins BYTE PTR es:[rdi],dx
   14001ddb9:	add    BYTE PTR gs:[rax],al
   14001ddbc:	int3   
   14001ddbd:	add    al,BYTE PTR [rdi+0x65]
   14001ddc0:	je     0x14001de15
   14001ddc2:	je     0x14001de36
   14001ddc4:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   14001ddcb:	push   rdi
   14001ddcc:	add    BYTE PTR [rax],al
   14001ddce:	test   eax,0x74654702
   14001ddd3:	push   rax
   14001ddd4:	jb     0x14001de45
   14001ddd6:	movsxd esp,DWORD PTR [rbp+0x73]
   14001ddd9:	jae    0x14001de23
   14001dddb:	gs (bad) 
   14001dddd:	jo     0x14001dddf
   14001dddf:	add    BYTE PTR [rax+0x756c4601],bl
   14001dde5:	jae    0x14001de4f
   14001dde7:	imul   r13d,DWORD PTR [rbp+r12*2+0x42],0x65666675
   14001ddf0:	jb     0x14001de65
   14001ddf2:	add    BYTE PTR [rax],al
   14001ddf4:	loop   0x14001ddf7
   14001ddf6:	rex.RXB
   14001ddf7:	gs je  0x14001de3d
   14001ddfa:	outs   dx,DWORD PTR ds:[rsi]
   14001ddfb:	outs   dx,BYTE PTR ds:[rsi]
   14001ddfc:	jae    0x14001de6d
   14001ddfe:	ins    BYTE PTR es:[rdi],dx
   14001ddff:	gs rex.XB push r8
   14001de02:	add    BYTE PTR [rax],al
   14001de04:	hlt    
   14001de05:	add    DWORD PTR [rdi+0x65],eax
   14001de08:	je     0x14001de4d
   14001de0a:	outs   dx,DWORD PTR ds:[rsi]
   14001de0b:	outs   dx,BYTE PTR ds:[rsi]
   14001de0c:	jae    0x14001de7d
   14001de0e:	ins    BYTE PTR es:[rdi],dx
   14001de0f:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14001de12:	fs add BYTE PTR gs:[rax],al
   14001de16:	add    ecx,DWORD PTR [r8+0x65]
   14001de1a:	(bad)  
   14001de1b:	jo     0x14001de70
   14001de1d:	imul   edi,DWORD PTR [rdx+0x65],0x33f0000
   14001de24:	rex.W
   14001de25:	gs (bad) 
   14001de27:	jo     0x14001de7b
   14001de29:	gs rex.B ins BYTE PTR es:[rdi],dx
   14001de2c:	ins    BYTE PTR es:[rdi],dx
   14001de2d:	outs   dx,DWORD PTR ds:[rsi]
   14001de2e:	movsxd eax,DWORD PTR [rax]
   14001de30:	or     al,0x5
   14001de32:	push   rbx
   14001de33:	gs je  0x14001de7c
   14001de36:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   14001de3e:	gs jb  0x14001de86
   14001de41:	js     0x14001de43
   14001de43:	add    al,dh
   14001de45:	add    eax,0x74697257
   14001de4a:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14001de4d:	outs   dx,BYTE PTR ds:[rsi]
   14001de4e:	jae    0x14001debf
   14001de50:	ins    BYTE PTR es:[rdi],dx
   14001de51:	gs push rdi
   14001de53:	add    dl,al
   14001de55:	add    BYTE PTR [rbx+0x72],al
   14001de58:	gs (bad) 
   14001de5a:	je     0x14001dec1
   14001de5c:	rex.RX
   14001de5d:	.byte 0x69
   14001de5e:	ins    BYTE PTR es:[rdi],dx
   14001de5f:	gs push rdi
	...

Disassembly of section .data:

000000014001e000 <.data>:
   14001e000:	(bad)  
   14001e001:	(bad)  
   14001e002:	(bad)  
   14001e003:	inc    DWORD PTR [rcx]
   14001e005:	add    BYTE PTR [rax],al
   14001e007:	add    BYTE PTR [rcx],al
   14001e009:	add    BYTE PTR [rax],al
   14001e00b:	add    BYTE PTR [rdx],al
   14001e00d:	add    BYTE PTR [rax],al
   14001e00f:	add    BYTE PTR [rdi],ch
   14001e011:	and    BYTE PTR [rax],al
   14001e013:	add    BYTE PTR [rax],al
   14001e015:	add    BYTE PTR [rax],al
   14001e017:	add    BYTE PTR [rdx],dh
   14001e019:	movabs ds:0x5dcd00002b992ddf,al
   14001e022:	and    dl,dl
   14001e024:	data16 (bad) 
   14001e026:	(bad)  
   14001e027:	inc    DWORD PTR [rax]
   14001e029:	add    BYTE PTR [rax],al
   14001e02b:	add    BYTE PTR [rax],al
   14001e02d:	add    BYTE PTR [rax],al
   14001e02f:	add    bh,bh
   14001e031:	(bad)  
   14001e032:	(bad)  
   14001e033:	inc    DWORD PTR [rax]
	...
   14001e051:	add    BYTE PTR [rax],al
   14001e053:	add    BYTE PTR [rcx],al
   14001e055:	and    BYTE PTR [rax],al
	...
   14001e0ab:	add    BYTE PTR [rdx],al
   14001e0ad:	and    BYTE PTR [rax],al
   14001e0af:	add    BYTE PTR [rcx],al
	...
   14001e101:	add    BYTE PTR [rax],al
   14001e103:	add    BYTE PTR [rdx],al
   14001e105:	and    BYTE PTR [rax],al
   14001e107:	add    BYTE PTR [rdx],al
	...
   14001e14d:	add    BYTE PTR [rax],al
   14001e14f:	add    BYTE PTR [rdx],al
   14001e151:	add    BYTE PTR [rax],al
   14001e153:	add    BYTE PTR [rax+rax*1],cl
   14001e156:	add    BYTE PTR [rax],al
   14001e158:	or     BYTE PTR [rax],al
	...
   14001e186:	add    BYTE PTR [rax],al
   14001e188:	(bad)  
   14001e189:	(bad)  
   14001e18a:	(bad)  
   14001e18b:	(bad)  
   14001e18c:	(bad)  
   14001e18d:	(bad)  
   14001e18e:	(bad)  
   14001e18f:	inc    DWORD PTR [rax]
   14001e191:	add    BYTE PTR [rax],al
   14001e193:	add    BYTE PTR [rax],al
   14001e195:	add    BYTE PTR [rax],al
   14001e197:	add    BYTE PTR [rax+0xa0a0a00],al
   14001e19d:	add    BYTE PTR [rax],al
   14001e19f:	add    bh,bh
   14001e1a1:	(bad)  
   14001e1a2:	(bad)  
   14001e1a3:	inc    DWORD PTR [rax]
	...
   14001e1ad:	add    BYTE PTR [rax],al
   14001e1af:	add    BYTE PTR [rax],dh
   14001e1b1:	movsxd eax,DWORD PTR [rcx]
   14001e1b3:	rex add DWORD PTR [rax],eax
   14001e1b6:	add    BYTE PTR [rax],al
   14001e1b8:	add    DWORD PTR [rax],eax
   14001e1ba:	add    BYTE PTR [rax],al
   14001e1bc:	add    BYTE PTR [rax],al
   14001e1be:	add    BYTE PTR [rax],al
   14001e1c0:	add    DWORD PTR [rax],eax
	...
   14001e1ca:	add    BYTE PTR [rax],al
   14001e1cc:	add    DWORD PTR [rax],eax
	...
   14001e1f6:	add    BYTE PTR [rax],al
   14001e1f8:	sbb    bl,ah
   14001e1fa:	add    DWORD PTR [rax+0x1],eax
	...
   14001e215:	add    BYTE PTR [rax],al
   14001e217:	add    BYTE PTR [rax],bl
   14001e219:	jrcxz  0x14001e21c
   14001e21b:	rex add DWORD PTR [rax],eax
	...
   14001e236:	add    BYTE PTR [rax],al
   14001e238:	sbb    bl,ah
   14001e23a:	add    DWORD PTR [rax+0x1],eax
	...
   14001e255:	add    BYTE PTR [rax],al
   14001e257:	add    BYTE PTR [rax],bl
   14001e259:	jrcxz  0x14001e25c
   14001e25b:	rex add DWORD PTR [rax],eax
	...
   14001e276:	add    BYTE PTR [rax],al
   14001e278:	sbb    bl,ah
   14001e27a:	add    DWORD PTR [rax+0x1],eax
	...
   14001e2a5:	add    BYTE PTR [rax],al
   14001e2a7:	add    BYTE PTR [rax-0x18],ah
   14001e2aa:	add    DWORD PTR [rax+0x1],eax
	...
   14001e2bd:	add    BYTE PTR [rax],al
   14001e2bf:	add    BYTE PTR [rax+0x1400165],dh
   14001e2c5:	add    BYTE PTR [rax],al
   14001e2c7:	add    BYTE PTR [rax],dh
   14001e2c9:	add    DWORD PTR [eax+0x1],eax
   14001e2cd:	add    BYTE PTR [rax],al
   14001e2cf:	add    BYTE PTR [rax+0x5b],dl
   14001e2d2:	add    DWORD PTR [rax+0x1],eax
	...
   14001e305:	add    BYTE PTR [rax],al
   14001e307:	add    BYTE PTR [rax+0x14001e1],dh
   14001e30d:	add    BYTE PTR [rax],al
   14001e30f:	add    BYTE PTR [rax],ah
   14001e311:	jrcxz  0x14001e314
   14001e313:	rex add DWORD PTR [rax],eax
   14001e316:	add    BYTE PTR [rax],al
   14001e318:	rex.XB add BYTE PTR [r8],al
	...
   14001e377:	add    BYTE PTR [rax],al
   14001e379:	add    BYTE PTR [rax],dl
   14001e37b:	adc    BYTE PTR [rax],dl
   14001e37d:	adc    BYTE PTR [rax],dl
   14001e37f:	adc    BYTE PTR [rax],dl
   14001e381:	adc    BYTE PTR [rax],dl
   14001e383:	adc    BYTE PTR [rax],dl
   14001e385:	adc    BYTE PTR [rax],dl
   14001e387:	adc    BYTE PTR [rax],dl
   14001e389:	adc    BYTE PTR [rax],dl
   14001e38b:	adc    BYTE PTR [rax],dl
   14001e38d:	adc    BYTE PTR [rax],dl
   14001e38f:	adc    BYTE PTR [rax],dl
   14001e391:	adc    BYTE PTR [rax],dl
   14001e393:	adc    BYTE PTR [rax],al
   14001e395:	add    BYTE PTR [rax],al
   14001e397:	add    BYTE PTR [rax],al
   14001e399:	add    BYTE PTR [rax],ah
   14001e39b:	and    BYTE PTR [rax],ah
   14001e39d:	and    BYTE PTR [rax],ah
   14001e39f:	and    BYTE PTR [rax],ah
   14001e3a1:	and    BYTE PTR [rax],ah
   14001e3a3:	and    BYTE PTR [rax],ah
   14001e3a5:	and    BYTE PTR [rax],ah
   14001e3a7:	and    BYTE PTR [rax],ah
   14001e3a9:	and    BYTE PTR [rax],ah
   14001e3ab:	and    BYTE PTR [rax],ah
   14001e3ad:	and    BYTE PTR [rax],ah
   14001e3af:	and    BYTE PTR [rax],ah
   14001e3b1:	and    BYTE PTR [rax],ah
   14001e3b3:	and    BYTE PTR [rax],al
	...
   14001e479:	add    BYTE PTR [rcx+0x62],ah
   14001e47c:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   14001e480:	addr32 push 0x6c6b6a69
   14001e486:	ins    DWORD PTR es:[rdi],dx
   14001e487:	outs   dx,BYTE PTR ds:[rsi]
   14001e488:	outs   dx,DWORD PTR ds:[rsi]
   14001e489:	jo     0x14001e4fc
   14001e48b:	jb     0x14001e500
   14001e48d:	je     0x14001e504
   14001e48f:	jbe    0x14001e508
   14001e491:	js     0x14001e50c
   14001e493:	jp     0x14001e495
   14001e495:	add    BYTE PTR [rax],al
   14001e497:	add    BYTE PTR [rax],al
   14001e499:	add    BYTE PTR [rcx+0x42],al
   14001e49c:	rex.XB
   14001e49d:	rex.R
   14001e49e:	rex.RB
   14001e49f:	rex.RX
   14001e4a0:	rex.RXB
   14001e4a1:	rex.W
   14001e4a2:	rex.WB
   14001e4a3:	rex.WX
   14001e4a4:	rex.WXB
   14001e4a5:	rex.WR
   14001e4a6:	rex.WRB
   14001e4a7:	rex.WRX
   14001e4a8:	rex.WRXB push r8
   14001e4aa:	push   rcx
   14001e4ab:	push   rdx
   14001e4ac:	push   rbx
   14001e4ad:	push   rsp
   14001e4ae:	push   rbp
   14001e4af:	push   rsi
   14001e4b0:	push   rdi
   14001e4b1:	pop    rax
   14001e4b2:	pop    rcx
   14001e4b3:	pop    rdx
	...
   14001e548:	and    bl,ah
   14001e54a:	add    DWORD PTR [rax+0x1],eax
   14001e54d:	add    BYTE PTR [rax],al
   14001e54f:	add    BYTE PTR [rcx],al
   14001e551:	add    al,BYTE PTR [rax+rcx*1]
	...
   14001e560:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e561:	add    eax,DWORD PTR [rax]
   14001e563:	add    BYTE PTR [rax-0x7e],ah
   14001e566:	jns    0x14001e4ea
   14001e568:	and    DWORD PTR [rax],eax
   14001e56a:	add    BYTE PTR [rax],al
   14001e56c:	add    BYTE PTR [rax],al
   14001e56e:	add    BYTE PTR [rax],al
   14001e570:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e571:	fild   WORD PTR [rax]
   14001e573:	add    BYTE PTR [rax],al
   14001e575:	add    BYTE PTR [rax],al
   14001e577:	add    BYTE PTR [rcx+0xa5],ah
   14001e57d:	add    BYTE PTR [rax],al
   14001e57f:	add    BYTE PTR [rcx+0xfce09f],al
   14001e585:	add    BYTE PTR [rax],al
   14001e587:	add    BYTE PTR [rax+0x7e],al
   14001e58a:	cmp    ah,0x0
   14001e58d:	add    BYTE PTR [rax],al
   14001e58f:	add    BYTE PTR [rax-0x3efffffd],ch
   14001e595:	movabs ds:0x20a3da,eax
	...
   14001e5ae:	add    BYTE PTR [rax],al
   14001e5b0:	cmp    esi,0x0
   14001e5b6:	add    BYTE PTR [rax],al
   14001e5b8:	rex inc BYTE PTR [rax]
   14001e5bb:	add    BYTE PTR [rax],al
   14001e5bd:	add    BYTE PTR [rax],al
   14001e5bf:	add    BYTE PTR [rbp-0x3efffffd],dh
   14001e5c5:	movabs ds:0x20a3da,eax
	...
   14001e5de:	add    BYTE PTR [rax],al
   14001e5e0:	cmp    esi,0x0
   14001e5e6:	add    BYTE PTR [rax],al
   14001e5e8:	inc    BYTE PTR [r8]
   14001e5eb:	add    BYTE PTR [rax],al
   14001e5ed:	add    BYTE PTR [rax],al
   14001e5ef:	add    BYTE PTR [rsi-0x30fffffd],dh
   14001e5f5:	movabs ds:0xa2e8a2e5001aa2e4,al
   14001e5fe:	pop    rbx
	...
   14001e60f:	add    BYTE PTR [rcx+0xfe],al
   14001e615:	add    BYTE PTR [rax],al
   14001e617:	add    BYTE PTR [rax+0x7e],al
   14001e61a:	movabs eax,ds:0x55100000000fe
   14001e623:	add    BYTE PTR [rcx-0x26],dl
   14001e626:	pop    rsi
   14001e627:	fisub  DWORD PTR [rax]
   14001e629:	add    BYTE PTR [rdi-0x26],bl
   14001e62c:	push   0xffffffffffffffda
   14001e62e:	xor    al,BYTE PTR [rax]
	...
   14001e640:	adc    ebx,0xf9e0ded8
   14001e646:	add    BYTE PTR [rax],al
   14001e648:	xor    DWORD PTR [rsi-0x7f],edi
   14001e64b:	inc    BYTE PTR [rax]
	...
   14001e691:	add    BYTE PTR [rax],dl
   14001e693:	adc    BYTE PTR [rax],dl
   14001e695:	adc    BYTE PTR [rax],dl
   14001e697:	adc    BYTE PTR [rax],dl
   14001e699:	adc    BYTE PTR [rax],dl
   14001e69b:	adc    BYTE PTR [rax],dl
   14001e69d:	adc    BYTE PTR [rax],dl
   14001e69f:	adc    BYTE PTR [rax],dl
   14001e6a1:	adc    BYTE PTR [rax],dl
   14001e6a3:	adc    BYTE PTR [rax],dl
   14001e6a5:	adc    BYTE PTR [rax],dl
   14001e6a7:	adc    BYTE PTR [rax],dl
   14001e6a9:	adc    BYTE PTR [rax],dl
   14001e6ab:	adc    BYTE PTR [rax],al
   14001e6ad:	add    BYTE PTR [rax],al
   14001e6af:	add    BYTE PTR [rax],al
   14001e6b1:	add    BYTE PTR [rax],ah
   14001e6b3:	and    BYTE PTR [rax],ah
   14001e6b5:	and    BYTE PTR [rax],ah
   14001e6b7:	and    BYTE PTR [rax],ah
   14001e6b9:	and    BYTE PTR [rax],ah
   14001e6bb:	and    BYTE PTR [rax],ah
   14001e6bd:	and    BYTE PTR [rax],ah
   14001e6bf:	and    BYTE PTR [rax],ah
   14001e6c1:	and    BYTE PTR [rax],ah
   14001e6c3:	and    BYTE PTR [rax],ah
   14001e6c5:	and    BYTE PTR [rax],ah
   14001e6c7:	and    BYTE PTR [rax],ah
   14001e6c9:	and    BYTE PTR [rax],ah
   14001e6cb:	and    BYTE PTR [rax],al
	...
   14001e7a1:	(bad)  
   14001e7a2:	(bad)
   14001e7a7:	addr32 push 0x6c6b6a69
   14001e7ad:	ins    DWORD PTR es:[rdi],dx
   14001e7ae:	outs   dx,BYTE PTR ds:[rsi]
   14001e7af:	outs   dx,DWORD PTR ds:[rsi]
   14001e7b0:	jo     0x14001e823
   14001e7b2:	jb     0x14001e827
   14001e7b4:	je     0x14001e82b
   14001e7b6:	jbe    0x14001e82f
   14001e7b8:	js     0x14001e833
   14001e7ba:	jp     0x14001e7bc
   14001e7bc:	add    BYTE PTR [rax],al
   14001e7be:	add    BYTE PTR [rax],al
   14001e7c0:	add    BYTE PTR [rcx+0x42],al
   14001e7c3:	rex.XB
   14001e7c4:	rex.R
   14001e7c5:	rex.RB
   14001e7c6:	rex.RX
   14001e7c7:	rex.RXB
   14001e7c8:	rex.W
   14001e7c9:	rex.WB
   14001e7ca:	rex.WX
   14001e7cb:	rex.WXB
   14001e7cc:	rex.WR
   14001e7cd:	rex.WRB
   14001e7ce:	rex.WRX
   14001e7cf:	rex.WRXB push r8
   14001e7d1:	push   rcx
   14001e7d2:	push   rdx
   14001e7d3:	push   rbx
   14001e7d4:	push   rsp
   14001e7d5:	push   rbp
   14001e7d6:	push   rsi
   14001e7d7:	push   rdi
   14001e7d8:	pop    rax
   14001e7d9:	pop    rcx
   14001e7da:	pop    rdx
	...
   14001e85f:	add    al,bh
   14001e861:	call   0x140032867
   14001e866:	add    BYTE PTR [rax],al
   14001e868:	call   0x14141ea62
   14001e86d:	add    BYTE PTR [rax],al
   14001e86f:	add    al,ch
   14001e871:	cmc    
   14001e872:	add    DWORD PTR [rax+0x1],eax
   14001e875:	add    BYTE PTR [rax],al
   14001e877:	add    al,ch
   14001e879:	cmc    
   14001e87a:	add    DWORD PTR [rax+0x1],eax
   14001e87d:	add    BYTE PTR [rax],al
   14001e87f:	add    al,ch
   14001e881:	cmc    
   14001e882:	add    DWORD PTR [rax+0x1],eax
   14001e885:	add    BYTE PTR [rax],al
   14001e887:	add    al,ch
   14001e889:	cmc    
   14001e88a:	add    DWORD PTR [rax+0x1],eax
   14001e88d:	add    BYTE PTR [rax],al
   14001e88f:	add    al,ch
   14001e891:	cmc    
   14001e892:	add    DWORD PTR [rax+0x1],eax
   14001e895:	add    BYTE PTR [rax],al
   14001e897:	add    al,ch
   14001e899:	cmc    
   14001e89a:	add    DWORD PTR [rax+0x1],eax
   14001e89d:	add    BYTE PTR [rax],al
   14001e89f:	add    al,ch
   14001e8a1:	cmc    
   14001e8a2:	add    DWORD PTR [rax+0x1],eax
   14001e8a5:	add    BYTE PTR [rax],al
   14001e8a7:	add    al,ch
   14001e8a9:	cmc    
   14001e8aa:	add    DWORD PTR [rax+0x1],eax
   14001e8ad:	add    BYTE PTR [rax],al
   14001e8af:	add    BYTE PTR [rdi+0x7f],bh
   14001e8b2:	jg     0x14001e933
   14001e8b4:	jg     0x14001e935
   14001e8b6:	jg     0x14001e937
   14001e8b8:	cld    
   14001e8b9:	call   0x1400328bf
   14001e8be:	add    BYTE PTR [rax],al
   14001e8c0:	in     al,dx
   14001e8c1:	cmc    
   14001e8c2:	add    DWORD PTR [rax+0x1],eax
   14001e8c5:	add    BYTE PTR [rax],al
   14001e8c7:	add    ah,ch
   14001e8c9:	cmc    
   14001e8ca:	add    DWORD PTR [rax+0x1],eax
   14001e8cd:	add    BYTE PTR [rax],al
   14001e8cf:	add    ah,ch
   14001e8d1:	cmc    
   14001e8d2:	add    DWORD PTR [rax+0x1],eax
   14001e8d5:	add    BYTE PTR [rax],al
   14001e8d7:	add    ah,ch
   14001e8d9:	cmc    
   14001e8da:	add    DWORD PTR [rax+0x1],eax
   14001e8dd:	add    BYTE PTR [rax],al
   14001e8df:	add    ah,ch
   14001e8e1:	cmc    
   14001e8e2:	add    DWORD PTR [rax+0x1],eax
   14001e8e5:	add    BYTE PTR [rax],al
   14001e8e7:	add    ah,ch
   14001e8e9:	cmc    
   14001e8ea:	add    DWORD PTR [rax+0x1],eax
   14001e8ed:	add    BYTE PTR [rax],al
   14001e8ef:	add    ah,ch
   14001e8f1:	cmc    
   14001e8f2:	add    DWORD PTR [rax+0x1],eax
   14001e8f5:	add    BYTE PTR [rax],al
   14001e8f7:	add    BYTE PTR [rsi],ch
   14001e8f9:	add    BYTE PTR [rax],al
   14001e8fb:	add    BYTE PTR [rsi],ch
   14001e8fd:	add    BYTE PTR [rax],al
   14001e8ff:	add    dh,bh
   14001e901:	(bad)  
   14001e902:	(bad)  
   14001e903:	inc    DWORD PTR [rax]
	...
   14001e90d:	add    BYTE PTR [rax],al
   14001e90f:	add    dh,bh
   14001e911:	(bad)  
   14001e912:	(bad)  
   14001e913:	(bad)  
   14001e914:	(bad)  
   14001e915:	(bad)  
   14001e916:	(bad)  
   14001e917:	inc    DWORD PTR [rcx]
   14001e919:	add    BYTE PTR [rax],al
   14001e91b:	add    BYTE PTR [rax],al
   14001e91d:	add    BYTE PTR [rax],al
   14001e91f:	add    BYTE PTR [rcx],al
	...
   14001e92d:	add    BYTE PTR [rax],al
   14001e92f:	add    BYTE PTR [rbp-0x68],dh
	...
   14001e93e:	add    BYTE PTR [rax],al
   14001e940:	adc    BYTE PTR [rsi+0x1],al
   14001e943:	rex add DWORD PTR [rax],eax
	...
   14001e94e:	add    BYTE PTR [rax],al
   14001e950:	cs (bad) 
   14001e952:	push   r14
   14001e954:	(bad)
   14001e959:	ins    BYTE PTR es:[rdi],dx
   14001e95a:	ins    BYTE PTR es:[rdi],dx
   14001e95b:	outs   dx,DWORD PTR ds:[rsi]
   14001e95c:	movsxd eax,DWORD PTR [rax+0x73]
   14001e95f:	je     0x14001e9c5
   14001e961:	rex
   14001e962:	add    BYTE PTR [rax],al
   14001e965:	add    BYTE PTR [rax],al
   14001e967:	add    BYTE PTR [rax],dl
   14001e969:	rex.RX add DWORD PTR [rax+0x1],r8d
	...
   14001e975:	add    BYTE PTR [rax],al
   14001e977:	add    BYTE PTR [rsi],ch
   14001e979:	(bad)  
   14001e97a:	push   r14
   14001e97c:	gs js  0x14001e9e2
   14001e97f:	gs jo  0x14001e9f6
   14001e982:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14001e989:	rex
   14001e98a:	add    BYTE PTR [rax],al
   14001e98d:	add    BYTE PTR [rax],al
   14001e98f:	add    BYTE PTR [rax],dl
   14001e991:	rex.RX add DWORD PTR [rax+0x1],r8d
	...
   14001e99d:	add    BYTE PTR [rax],al
   14001e99f:	add    BYTE PTR [rsi],ch
   14001e9a1:	(bad)  
   14001e9a2:	push   r14
   14001e9a4:	(bad)
   14001e9a9:	jb     0x14001ea1d
   14001e9ab:	(bad)  
   14001e9ac:	jns    0x14001ea0d
   14001e9ae:	outs   dx,BYTE PTR ds:[rsi]
   14001e9af:	gs ja  0x14001ea11
   14001e9b2:	ins    BYTE PTR es:[rdi],dx
   14001e9b3:	outs   dx,BYTE PTR gs:[rsi]
   14001e9b5:	addr32 je 0x14001ea20
   14001e9b8:	rex jae 0x14001ea2f
   14001e9bb:	fs rex
   14001e9bd:	add    BYTE PTR [rax],al
   14001e9c0:	adc    BYTE PTR [rsi+0x1],al
   14001e9c3:	rex add DWORD PTR [rax],eax
	...
   14001e9ce:	add    BYTE PTR [rax],al
   14001e9d0:	cs (bad) 
   14001e9d2:	push   r14
   14001e9d4:	je     0x14001ea4f
   14001e9d6:	jo     0x14001ea3d
   14001e9d8:	pop    rdi
   14001e9d9:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

0000000140020000 <.pdata>:
   140020000:	add    BYTE PTR [rax],dl
   140020002:	add    BYTE PTR [rax],al
   140020004:	pop    rbx
   140020005:	adc    BYTE PTR [rax],al
   140020007:	add    al,cl
   140020009:	mov    BYTE PTR [rcx],0x0
   14002000c:	pop    rbx
   14002000d:	adc    BYTE PTR [rax],al
   14002000f:	add    BYTE PTR [rdx-0x27fffff0],cl
   140020015:	mov    BYTE PTR [rcx],0x0
   140020018:	mov    dl,BYTE PTR [rax]
   14002001a:	add    BYTE PTR [rax],al
   14002001c:	js     0x14002002f
   14002001e:	add    BYTE PTR [rax],al
   140020020:	in     al,dx
   140020021:	mov    BYTE PTR [rcx],0x0
   140020024:	js     0x140020037
   140020026:	add    BYTE PTR [rax],al
   140020028:	(bad)  
   140020029:	adc    DWORD PTR [rax],eax
   14002002b:	add    BYTE PTR [rax],al
   14002002d:	mov    DWORD PTR [rcx],0x118f00
   140020033:	add    BYTE PTR [rdx+0x10000011],bl
   140020039:	mov    DWORD PTR [rcx],0x11a000
   14002003f:	add    BYTE PTR [rdx-0x37ffffee],bl
   140020045:	enter  0x1,0xa0
   140020049:	adc    al,BYTE PTR [rax]
   14002004b:	add    BYTE PTR [rip+0xffffffffb8000013],cl        # 0xf8020064
   140020051:	mov    BYTE PTR [rcx],0x0
   140020054:	adc    BYTE PTR [rbx],dl
   140020056:	add    BYTE PTR [rax],al
   140020058:	adc    eax,DWORD PTR [r8]
   14002005b:	add    al,cl
   14002005d:	enter  0x1,0x60
   140020061:	adc    eax,DWORD PTR [rax]
   140020063:	add    BYTE PTR [rbx+rdx*1-0x39600000],ah
   14002006a:	add    DWORD PTR [rax],eax
   14002006c:	mov    al,0x13
   14002006e:	add    BYTE PTR [rax],al
   140020070:	ins    DWORD PTR es:[rdi],dx
   140020071:	adc    al,0x0
   140020073:	add    BYTE PTR [rax],ah
   140020075:	mov    DWORD PTR [rcx],0x146d00
   14002007b:	add    dl,ch
   14002007d:	adc    eax,0xc7340000
   140020082:	add    DWORD PTR [rax],eax
   140020084:	(bad)  
   140020085:	adc    eax,0x189d0000
   14002008a:	add    BYTE PTR [rax],al
   14002008c:	mov    QWORD PTR [rcx],0x189d00
   140020093:	add    BYTE PTR [rdx+0x5c000018],dh
   140020099:	mov    DWORD PTR [rcx],0x18b200
   14002009f:	add    BYTE PTR [rcx+rbx*1],ch
   1400200a2:	add    BYTE PTR [rax],al
   1400200a4:	ins    BYTE PTR es:[rdi],dx
   1400200a5:	mov    DWORD PTR [rcx],0x192c00
   1400200ab:	add    BYTE PTR [rbp-0x6bffffe6],cl
   1400200b1:	mov    DWORD PTR [rcx],0x1a8d00
   1400200b7:	add    al,ah
   1400200b9:	sbb    al,BYTE PTR [rax]
   1400200bb:	add    BYTE PTR [rax-0x1ffffe39],al
   1400200c1:	sbb    al,BYTE PTR [rax]
   1400200c3:	add    BYTE PTR [rdi+0x1b],bl
   1400200c6:	add    BYTE PTR [rax],al
   1400200c8:	xchg   esp,eax
   1400200c9:	mov    DWORD PTR [rcx],0x1b6000
   1400200cf:	add    BYTE PTR [rbx-0x53ffffe5],dh
   1400200d5:	mov    BYTE PTR [rcx],0x0
   1400200d8:	(bad)  
   1400200d9:	sbb    eax,DWORD PTR [rax]
   1400200db:	add    BYTE PTR [rdi+0x1c],bh
   1400200de:	add    BYTE PTR [rax],al
   1400200e0:	(bad)  
   1400200e1:	mov    DWORD PTR [rcx],0x1c8000
   1400200e7:	add    BYTE PTR [rax-0x6fffffe4],dl
   1400200ed:	retf   0x1
   1400200f0:	nop
   1400200f1:	sbb    al,0x0
   1400200f3:	add    BYTE PTR [rcx-0x6fffffe4],ch
   1400200f9:	retf   0x1
   1400200fc:	lods   al,BYTE PTR ds:[rsi]
   1400200fd:	sbb    al,0x0
   1400200ff:	add    BYTE PTR [rbx],ah
   140020101:	(bad)  
   140020102:	add    BYTE PTR [rax],al
   140020104:	lods   al,BYTE PTR ds:[rsi]
   140020105:	mov    DWORD PTR [rcx],0x1e2400
   14002010b:	add    BYTE PTR [rsi],dh
   14002010d:	(bad)  
   14002010e:	add    BYTE PTR [rax],al
   140020110:	nop
   140020111:	retf   0x1
   140020114:	cmp    BYTE PTR [rsi],bl
   140020116:	add    BYTE PTR [rax],al
   140020118:	je     0x140020138
   14002011a:	add    BYTE PTR [rax],al
   14002011c:	(bad)  
   14002011d:	mov    DWORD PTR [rcx],0x1e7c00
   140020123:	add    BYTE PTR [rbp-0x6fffffe2],dh
   140020129:	retf   0x1
   14002012c:	mov    eax,0x100001e
   140020131:	(bad)  
   140020132:	add    BYTE PTR [rax],al
   140020134:	(bad)  
   140020135:	mov    DWORD PTR [rcx],0x1f0400
   14002013b:	add    ch,cl
   14002013d:	(bad)  
   14002013e:	add    BYTE PTR [rax],al
   140020140:	add    al,0xc8
   140020142:	add    DWORD PTR [rax],eax
   140020144:	rcr    BYTE PTR [rdi],1
   140020146:	add    BYTE PTR [rax],al
   140020148:	imul   esp,DWORD PTR [rax],0xc7dc0000
   14002014e:	add    DWORD PTR [rax],eax
   140020150:	ins    BYTE PTR es:[rdi],dx
   140020151:	and    BYTE PTR [rax],al
   140020153:	add    BYTE PTR [rax-0x2bffffe0],dl
   140020159:	mov    DWORD PTR [rcx],0x209000
   14002015f:	add    BYTE PTR [rbx-0x2bffffe0],bh
   140020165:	mov    DWORD PTR [rcx],0x20bc00
   14002016b:	add    BYTE PTR [rbx],cl
   14002016d:	and    DWORD PTR [rax],eax
   14002016f:	add    ah,dl
   140020171:	mov    DWORD PTR [rcx],0x210c00
   140020177:	add    BYTE PTR [rbx],ah
   140020179:	and    DWORD PTR [rax],eax
   14002017b:	add    BYTE PTR [rax+0x240001ca],dl
   140020181:	and    DWORD PTR [rax],eax
   140020183:	add    al,dl
   140020185:	and    DWORD PTR [rax],eax
   140020187:	add    BYTE PTR [rax],dl
   140020189:	enter  0x1,0xf8
   14002018d:	and    DWORD PTR [rax],eax
   14002018f:	add    BYTE PTR [rbx],dl
   140020191:	and    al,BYTE PTR [rax]
   140020193:	add    BYTE PTR [rax+0x380001ca],dl
   140020199:	and    al,BYTE PTR [rax]
   14002019b:	add    BYTE PTR [rbp+0x23],bh
   14002019e:	add    BYTE PTR [rax],al
   1400201a0:	sbb    al,0xc8
   1400201a2:	add    DWORD PTR [rax],eax
   1400201a4:	test   BYTE PTR [rbx],ah
   1400201a6:	add    BYTE PTR [rax],al
   1400201a8:	fsub   DWORD PTR [rbx]
   1400201aa:	add    BYTE PTR [rax],al
   1400201ac:	nop
   1400201ad:	retf   0x1
   1400201b0:	call   0x1600201d8
   1400201b5:	and    al,0x0
   1400201b7:	add    BYTE PTR [rax+0x200001ca],dl
   1400201bd:	and    al,0x0
   1400201bf:	add    BYTE PTR [rdx+0x24],ch
   1400201c2:	add    BYTE PTR [rax],al
   1400201c4:	(bad)  
   1400201c5:	rol    BYTE PTR [rcx],cl
   1400201c7:	add    BYTE PTR [rsp+0x0],ch
   1400201cb:	add    BYTE PTR [rsi+0x60000024],dh
   1400201d1:	rol    BYTE PTR [rcx],cl
   1400201d3:	add    al,al
   1400201d5:	and    al,0x0
   1400201d7:	add    bh,bh
   1400201d9:	and    al,0x0
   1400201db:	add    ah,dl
   1400201dd:	mov    DWORD PTR [rcx],0x252000
   1400201e3:	add    BYTE PTR [rdi+0x25],bl
   1400201e6:	add    BYTE PTR [rax],al
   1400201e8:	(bad)  
   1400201e9:	mov    DWORD PTR [rcx],0x258000
   1400201ef:	add    BYTE PTR [rbp-0x2bffffdb],dh
   1400201f5:	mov    DWORD PTR [rcx],0x25cc00
   1400201fb:	add    BYTE PTR [rsi],cl
   1400201fd:	add    BYTE PTR es:[rax],al
   140020200:	enter  0x1c8,0x0
   140020204:	adc    BYTE PTR [rsi],ah
   140020206:	add    BYTE PTR [rax],al
   140020208:	xor    BYTE PTR [rsi],ah
   14002020a:	add    BYTE PTR [rax],al
   14002020c:	rex.R (bad) 
   14002020e:	add    DWORD PTR [rax],eax
   140020210:	xor    BYTE PTR [rsi],ah
   140020212:	add    BYTE PTR [rax],al
   140020214:	push   rax
   140020215:	add    BYTE PTR es:[rax],al
   140020218:	rex.R (bad) 
   14002021a:	add    DWORD PTR [rax],eax
   14002021c:	fs add BYTE PTR es:[rax],al
   140020220:	sub    ch,BYTE PTR [rax]
   140020222:	add    BYTE PTR [rax],al
   140020224:	sub    al,0xc8
   140020226:	add    DWORD PTR [rax],eax
   140020228:	cmp    al,0x28
   14002022a:	add    BYTE PTR [rax],al
   14002022c:	sub    BYTE PTR [eax],al
   14002022f:	add    ah,dl
   140020231:	mov    DWORD PTR [rcx],0x287800
   140020237:	add    BYTE PTR [rdx],al
   140020239:	sub    DWORD PTR [rax],eax
   14002023b:	add    BYTE PTR [rax+rcx*8+0x1],al
   14002023f:	add    BYTE PTR [rcx+rbp*1],al
   140020242:	add    BYTE PTR [rax],al
   140020244:	rex.XB sub al,BYTE PTR [r8]
   140020247:	add    BYTE PTR [rax+rcx*8+0x1],al
   14002024b:	add    BYTE PTR [rdx+rbp*1+0x0],al
   14002024f:	add    BYTE PTR [rdi],bh
   140020251:	sub    al,0x0
   140020253:	add    BYTE PTR [rax+rcx*8+0x1],cl
   140020257:	add    BYTE PTR [rax+0x2c],al
   14002025a:	add    BYTE PTR [rax],al
   14002025c:	jb     0x14002028a
   14002025e:	add    BYTE PTR [rax],al
   140020260:	nop
   140020261:	retf   0x1
   140020264:	je     0x140020292
   140020266:	add    BYTE PTR [rax],al
   140020268:	xchg   esp,eax
   140020269:	sub    al,0x0
   14002026b:	add    BYTE PTR [rax-0x4ffffe36],dl
   140020271:	sub    al,0x0
   140020273:	add    BYTE PTR [rax+0x2e],dl
   140020276:	add    BYTE PTR [rax],al
   140020278:	push   0x500001c8
   14002027d:	add    BYTE PTR cs:[rax],al
   140020280:	(bad)  [rsi]
   140020282:	add    BYTE PTR [rax],al
   140020284:	fmul   st,st(4)
   140020286:	add    DWORD PTR [rax],eax
   140020288:	loopne 0x1400202b8
   14002028a:	add    BYTE PTR [rax],al
   14002028c:	add    eax,0xd400002f
   140020291:	mov    DWORD PTR [rcx],0x2f0800
   140020297:	add    bh,bl
   140020299:	(bad)  
   14002029a:	add    BYTE PTR [rax],al
   14002029c:	ins    BYTE PTR es:[rdi],dx
   14002029d:	enter  0x1,0xf0
   1400202a1:	(bad)  
   1400202a2:	add    BYTE PTR [rax],al
   1400202a4:	adc    al,0x30
   1400202a6:	add    BYTE PTR [rax],al
   1400202a8:	or     al,0x1
   1400202ab:	add    BYTE PTR [rax],ah
   1400202ad:	xor    BYTE PTR [rax],al
   1400202af:	add    BYTE PTR [rax],bh
   1400202b1:	xor    BYTE PTR [rax],al
   1400202b3:	add    BYTE PTR [rax+0x400001c8],cl
   1400202b9:	xor    BYTE PTR [rax],al
   1400202bb:	add    BYTE PTR [rcx+0x30],al
   1400202be:	add    BYTE PTR [rax],al
   1400202c0:	mov    eax,cs
   1400202c2:	add    DWORD PTR [rax],eax
   1400202c4:	push   rax
   1400202c5:	xor    BYTE PTR [rax],al
   1400202c7:	add    BYTE PTR [rcx+0x30],dl
   1400202ca:	add    BYTE PTR [rax],al
   1400202cc:	nop
   1400202cd:	enter  0x1,0x54
   1400202d1:	xor    BYTE PTR [rax],al
   1400202d3:	add    BYTE PTR [rbx+0x30],dh
   1400202d6:	add    BYTE PTR [rax],al
   1400202d8:	nop
   1400202d9:	retf   0x1
   1400202dc:	je     0x14002030e
   1400202de:	add    BYTE PTR [rax],al
   1400202e0:	mov    bl,0x30
   1400202e2:	add    BYTE PTR [rax],al
   1400202e4:	nop
   1400202e5:	retf   0x1
   1400202e8:	mov    ah,0x30
   1400202ea:	add    BYTE PTR [rax],al
   1400202ec:	(bad)  
   1400202ed:	xor    BYTE PTR [rax],al
   1400202ef:	add    BYTE PTR [rax-0x27fffe36],dl
   1400202f5:	xor    BYTE PTR [rax],al
   1400202f7:	add    BYTE PTR [rsi],bl
   1400202f9:	xor    DWORD PTR [rax],eax
   1400202fb:	add    ah,dl
   1400202fd:	mov    DWORD PTR [rcx],0x312000
   140020303:	add    BYTE PTR [rdi+0x31],dl
   140020306:	add    BYTE PTR [rax],al
   140020308:	(bad)  
   140020309:	mov    DWORD PTR [rcx],0x315800
   14002030f:	add    BYTE PTR [rax],ah
   140020311:	xor    eax,DWORD PTR [rax]
   140020313:	add    BYTE PTR [rax],ah
   140020315:	int3   
   140020316:	add    DWORD PTR [rax],eax
   140020318:	and    BYTE PTR [rbx],dh
   14002031a:	add    BYTE PTR [rax],al
   14002031c:	je     0x140020351
   14002031e:	add    BYTE PTR [rax],al
   140020320:	enter  0x1c8,0x0
   140020324:	je     0x140020359
   140020326:	add    BYTE PTR [rax],al
   140020328:	enter  0x33,0x0
   14002032c:	enter  0x1c8,0x0
   140020330:	enter  0x33,0x0
   140020334:	(bad)  
   140020335:	xor    al,0x0
   140020337:	add    BYTE PTR [rax-0x2e],ah
   14002033a:	add    DWORD PTR [rax],eax
   14002033c:	xor    BYTE PTR [rax+rax*1],dh
   14002033f:	add    BYTE PTR [rdi+0x14000034],ah
   140020345:	iret   
   140020346:	add    DWORD PTR [rax],eax
   140020348:	hlt    
   140020349:	xor    al,0x0
   14002034b:	add    BYTE PTR [rdx],dh
   14002034d:	xor    eax,0xc8940000
   140020352:	add    DWORD PTR [rax],eax
   140020354:	pop    rax
   140020355:	xor    eax,0x36770000
   14002035a:	add    BYTE PTR [rax],al
   14002035c:	fmul   st(2),st
   14002035e:	add    DWORD PTR [rax],eax
   140020360:	mov    WORD PTR [rsi],?
   140020362:	add    BYTE PTR [rax],al
   140020364:	out    0x36,eax
   140020366:	add    BYTE PTR [rax],al
   140020368:	(bad)  
   140020369:	mov    DWORD PTR [rcx],0x370000
   14002036f:	add    BYTE PTR [rip+0xffffffff88000037],bh        # 0xc80203ac
   140020375:	leave  
   140020376:	add    DWORD PTR [rax],eax
   140020378:	rex (bad) 
   14002037a:	add    BYTE PTR [rax],al
   14002037c:	in     al,dx
   14002037d:	(bad)  
   14002037e:	add    BYTE PTR [rax],al
   140020380:	adc    al,0xcf
   140020382:	add    DWORD PTR [rax],eax
   140020384:	sbb    al,0x38
   140020386:	add    BYTE PTR [rax],al
   140020388:	mov    bh,0x38
   14002038a:	add    BYTE PTR [rax],al
   14002038c:	or     cl,0x1
   14002038f:	add    BYTE PTR [rax+0x54000038],bh
   140020395:	cmp    DWORD PTR [rax],eax
   140020397:	add    BYTE PTR [rax+0x540001c9],al
   14002039d:	cmp    DWORD PTR [rax],eax
   14002039f:	add    al,bl
   1400203a1:	cmp    DWORD PTR [rax],eax
   1400203a3:	add    BYTE PTR [rax-0x37],ch
   1400203a6:	add    DWORD PTR [rax],eax
   1400203a8:	fdivr  DWORD PTR [rcx]
   1400203aa:	add    BYTE PTR [rax],al
   1400203ac:	xor    edi,DWORD PTR [rdx]
   1400203ae:	add    BYTE PTR [rax],al
   1400203b0:	or     cl,0x1
   1400203b3:	add    BYTE PTR [rdx+rdi*1],dh
   1400203b6:	add    BYTE PTR [rax],al
   1400203b8:	mov    al,0x3a
   1400203ba:	add    BYTE PTR [rax],al
   1400203bc:	(bad)  
   1400203bd:	mov    DWORD PTR [rcx],0x3ab000
   1400203c3:	add    BYTE PTR [rax+0x3b],al
   1400203c6:	add    BYTE PTR [rax],al
   1400203c8:	enter  0x1c8,0x0
   1400203cc:	rex cmp eax,DWORD PTR [rax]
   1400203cf:	add    BYTE PTR [rsi],ch
   1400203d1:	cmp    al,0x0
   1400203d3:	add    BYTE PTR [rcx+rcx*8],bl
   1400203d6:	add    DWORD PTR [rax],eax
   1400203d8:	xor    BYTE PTR [rax+rax*1],bh
   1400203db:	add    BYTE PTR [rbp-0x37ffffc4],bl
   1400203e1:	enter  0x1,0xa0
   1400203e5:	cmp    al,0x0
   1400203e7:	add    BYTE PTR [rbx],ah
   1400203e9:	cmp    eax,0xc9480000
   1400203ee:	add    DWORD PTR [rax],eax
   1400203f0:	and    al,0x3d
   1400203f2:	add    BYTE PTR [rax],al
   1400203f4:	xor    edi,DWORD PTR [rdi]
   1400203f6:	add    BYTE PTR [rax],al
   1400203f8:	cmp    cl,cl
   1400203fa:	add    DWORD PTR [rax],eax
   1400203fc:	xor    al,0x3f
   1400203fe:	add    BYTE PTR [rax],al
   140020400:	add    BYTE PTR ss:[r8],al
   140020404:	cmp    cl,cl
   140020406:	add    DWORD PTR [rax],eax
   140020408:	cmp    BYTE PTR [rcx+0x0],al
   14002040b:	add    BYTE PTR [rdi-0x2bffffbf],ah
   140020411:	mov    DWORD PTR [rcx],0x41a800
   140020417:	add    BYTE PTR [rdx+rax*2],bl
   14002041a:	add    BYTE PTR [rax],al
   14002041c:	(bad)  
   14002041d:	mov    DWORD PTR [rcx],0x421c00
   140020423:	add    BYTE PTR [rsi-0x2bffffbe],ch
   140020429:	mov    DWORD PTR [rcx],0x42b000
   14002042f:	add    BYTE PTR [rbp+0x43],al
   140020432:	add    BYTE PTR [rax],al
   140020434:	nop
   140020435:	retf   0x1
   140020438:	rex.W
   140020439:	rex.XB add BYTE PTR [r8],al
   14002043c:	ret    
   14002043d:	add    BYTE PTR [rax],r8b
   140020440:	nop
   140020441:	retf   0x1
   140020444:	(bad)  
   140020445:	add    BYTE PTR [rax],r8b
   140020448:	(bad)  
   140020449:	rex.RX add BYTE PTR [rax],r8b
   14002044c:	nop
   14002044d:	retf   0x1
   140020450:	rex
   140020451:	rex.RX add BYTE PTR [rax],r8b
   140020454:	mov    ecx,0xec000048
   140020459:	enter  0x1,0xbc
   14002045d:	rex.W add BYTE PTR [rax],al
   140020460:	xor    eax,0xec00004b
   140020465:	enter  0x1,0x38
   140020469:	rex.WXB add BYTE PTR [r8],al
   14002046c:	mov    bh,0x4b
   14002046e:	add    BYTE PTR [rax],al
   140020470:	(bad)  
   140020471:	rol    BYTE PTR [rcx],cl
   140020473:	add    BYTE PTR [rax-0x2dffffb5],bh
   140020479:	rex.WRB add BYTE PTR [r8],r8b
   14002047c:	pop    rsp
   14002047d:	leave  
   14002047e:	add    DWORD PTR [rax],eax
   140020480:	(bad)  
   140020481:	rex.WRB add BYTE PTR [r8],r8b
   140020484:	xchg   BYTE PTR [rsi+0x0],cl
   140020487:	add    al,cl
   140020489:	enter  0x1,0x88
   14002048d:	rex.WRX add BYTE PTR [rax],r8b
   140020490:	(bad)  
   140020491:	push   rax
   140020492:	add    BYTE PTR [rax],al
   140020494:	(bad)  
   140020495:	mov    DWORD PTR [rcx],0x502800
   14002049b:	add    BYTE PTR [rbx],al
   14002049d:	push   rcx
   14002049e:	add    BYTE PTR [rax],al
   1400204a0:	(bad)  
   1400204a1:	rol    BYTE PTR [rcx],cl
   1400204a3:	add    BYTE PTR [rcx+rdx*2],al
   1400204a6:	add    BYTE PTR [rax],al
   1400204a8:	xchg   esp,eax
   1400204a9:	push   rcx
   1400204aa:	add    BYTE PTR [rax],al
   1400204ac:	(bad)  
   1400204ad:	rol    BYTE PTR [rcx],cl
   1400204af:	add    BYTE PTR [rcx+rdx*2+0x52200000],dl
   1400204b6:	add    BYTE PTR [rax],al
   1400204b8:	nop
   1400204b9:	retf   0x1
   1400204bc:	and    BYTE PTR [rdx+0x0],dl
   1400204bf:	add    ch,dh
   1400204c1:	push   rdx
   1400204c2:	add    BYTE PTR [rax],al
   1400204c4:	add    al,0xc9
   1400204c6:	add    DWORD PTR [rax],eax
   1400204c8:	clc    
   1400204c9:	push   rdx
   1400204ca:	add    BYTE PTR [rax],al
   1400204cc:	int    0x53
   1400204ce:	add    BYTE PTR [rax],al
   1400204d0:	add    al,0xc9
   1400204d2:	add    DWORD PTR [rax],eax
   1400204d4:	rcl    BYTE PTR [rbx+0x0],1
   1400204d7:	add    ch,al
   1400204d9:	push   rsp
   1400204da:	add    BYTE PTR [rax],al
   1400204dc:	(bad)  
   1400204dd:	enter  0x1,0xc8
   1400204e1:	push   rsp
   1400204e2:	add    BYTE PTR [rax],al
   1400204e4:	(bad)  
   1400204e5:	push   rbp
   1400204e6:	add    BYTE PTR [rax],al
   1400204e8:	(bad)  
   1400204e9:	retf   0x1
   1400204ec:	test   BYTE PTR [rbp+0x0],dl
   1400204ef:	add    BYTE PTR [rdi],cl
   1400204f1:	push   rsi
   1400204f2:	add    BYTE PTR [rax],al
   1400204f4:	pushf  
   1400204f5:	enter  0x1,0x10
   1400204f9:	push   rsi
   1400204fa:	add    BYTE PTR [rax],al
   1400204fc:	rex.XB pop r8
   1400204fe:	add    BYTE PTR [rax],al
   140020500:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020501:	enter  0x1,0x60
   140020505:	pop    rax
   140020506:	add    BYTE PTR [rax],al
   140020508:	cmc    
   140020509:	pop    rcx
   14002050a:	add    BYTE PTR [rax],al
   14002050c:	mov    al,0xc9
   14002050e:	add    DWORD PTR [rax],eax
   140020510:	adc    BYTE PTR [rdx+0x0],bl
   140020513:	add    BYTE PTR [rdx+0x5b],dh
   140020516:	add    BYTE PTR [rax],al
   140020518:	mov    eax,0x900001c9
   14002051d:	pop    rbx
   14002051e:	add    BYTE PTR [rax],al
   140020520:	cld    
   140020521:	pop    rsp
   140020522:	add    BYTE PTR [rax],al
   140020524:	mov    esp,0xfc0001c9
   140020529:	pop    rsp
   14002052a:	add    BYTE PTR [rax],al
   14002052c:	rex.RB pop r13
   14002052e:	add    BYTE PTR [rax],al
   140020530:	(bad)  
   140020531:	mov    DWORD PTR [rcx],0x5d4800
   140020537:	add    BYTE PTR [rbp+rbx*2-0x37380000],dh
   14002053e:	add    DWORD PTR [rax],eax
   140020540:	call   0x16c0205a2
   140020545:	pop    rsi
   140020546:	add    BYTE PTR [rax],al
   140020548:	nop
   140020549:	retf   0x1
   14002054c:	cmp    BYTE PTR [rsi+0x0],bl
   14002054f:	add    BYTE PTR [rdx+0x61],ch
   140020552:	add    BYTE PTR [rax],al
   140020554:	cld    
   140020555:	leave  
   140020556:	add    DWORD PTR [rax],eax
   140020558:	ins    BYTE PTR es:[rdi],dx
   140020559:	(bad)  
   14002055a:	add    BYTE PTR [rax],al
   14002055c:	pop    rax
   14002055d:	(bad)  
   14002055e:	add    BYTE PTR [rax],al
   140020560:	fmul   st,st(4)
   140020562:	add    DWORD PTR [rax],eax
   140020564:	pop    rax
   140020565:	(bad)  
   140020566:	add    BYTE PTR [rax],al
   140020568:	jbe    0x1400205cc
   14002056a:	add    BYTE PTR [rax],al
   14002056c:	mov    eax,0x780001d4
   140020571:	(bad)  
   140020572:	add    BYTE PTR [rax],al
   140020574:	jrcxz  0x1400205d8
   140020576:	add    BYTE PTR [rax],al
   140020578:	sbb    al,0xca
   14002057a:	add    DWORD PTR [rax],eax
   14002057c:	in     al,0x62
   14002057e:	add    BYTE PTR [rax],al
   140020580:	ins    BYTE PTR es:[rdi],dx
   140020581:	movsxd eax,DWORD PTR [rax]
   140020583:	add    BYTE PTR [rax-0x2e],ah
   140020586:	add    DWORD PTR [rax],eax
   140020588:	je     0x1400205ed
   14002058a:	add    BYTE PTR [rax],al
   14002058c:	mov    bl,0x63
   14002058e:	add    BYTE PTR [rax],al
   140020590:	cmp    al,0xca
   140020592:	add    DWORD PTR [rax],eax
   140020594:	mov    ah,0x63
   140020596:	add    BYTE PTR [rax],al
   140020598:	rex.W
   140020599:	add    BYTE PTR fs:[rax],al
   14002059c:	(bad)  
   14002059d:	rol    BYTE PTR [rcx],cl
   14002059f:	add    BYTE PTR [rax+0x64],cl
   1400205a2:	add    BYTE PTR [rax],al
   1400205a4:	mov    BYTE PTR [rbp+0x0],ah
   1400205a7:	add    BYTE PTR [rax-0x36],ah
   1400205aa:	add    DWORD PTR [rax],eax
   1400205ac:	mov    BYTE PTR [rbp+0x0],ah
   1400205af:	add    BYTE PTR [rdi-0x2bffff9a],ch
   1400205b5:	(bad)  
   1400205b6:	add    DWORD PTR [rax],eax
   1400205b8:	mov    eax,0xca000066
   1400205bd:	data16 add BYTE PTR [rax],al
   1400205c0:	nop
   1400205c1:	retf   0x1
   1400205c4:	int3   
   1400205c5:	data16 add BYTE PTR [rax],al
   1400205c8:	sbb    DWORD PTR [rdi+0x0],esp
   1400205cb:	add    ah,dl
   1400205cd:	mov    DWORD PTR [rcx],0x671c00
   1400205d3:	add    BYTE PTR [rcx+0x14000068],ch
   1400205d9:	iret   
   1400205da:	add    DWORD PTR [rax],eax
   1400205dc:	in     al,0x68
   1400205de:	add    BYTE PTR [rax],al
   1400205e0:	sub    DWORD PTR [rcx+0x0],ebp
   1400205e3:	add    al,cl
   1400205e5:	enter  0x1,0x54
   1400205e9:	imul   eax,DWORD PTR [rax],0x6b1000
   1400205ef:	add    BYTE PTR [rax-0x36],ah
   1400205f2:	add    DWORD PTR [rax],eax
   1400205f4:	adc    BYTE PTR [rbx+0x0],ch
   1400205f7:	add    BYTE PTR [rcx+0x6b],dh
   1400205fa:	add    BYTE PTR [rax],al
   1400205fc:	(bad)  
   1400205fd:	mov    DWORD PTR [rcx],0x6b7400
   140020603:	add    dl,ch
   140020605:	ins    BYTE PTR es:[rdi],dx
   140020606:	add    BYTE PTR [rax],al
   140020608:	jl     0x1400205d4
   14002060a:	add    DWORD PTR [rax],eax
   14002060c:	in     al,dx
   14002060d:	ins    BYTE PTR es:[rdi],dx
   14002060e:	add    BYTE PTR [rax],al
   140020610:	xor    DWORD PTR [rbp+0x0],ebp
   140020613:	add    ah,dl
   140020615:	mov    DWORD PTR [rcx],0x6d3400
   14002061b:	add    BYTE PTR [rcx+0x6d],bh
   14002061e:	add    BYTE PTR [rax],al
   140020620:	(bad)  
   140020621:	mov    DWORD PTR [rcx],0x6d7c00
   140020627:	add    al,ch
   140020629:	ins    DWORD PTR es:[rdi],dx
   14002062a:	add    BYTE PTR [rax],al
   14002062c:	enter  0x1c8,0x0
   140020630:	call   0x18f0206a2
   140020635:	outs   dx,BYTE PTR ds:[rsi]
   140020636:	add    BYTE PTR [rax],al
   140020638:	enter  0x1c8,0x0
   14002063c:	push   rax
   14002063d:	outs   dx,BYTE PTR ds:[rsi]
   14002063e:	add    BYTE PTR [rax],al
   140020640:	rex.WB outs dx,DWORD PTR ds:[rsi]
   140020642:	add    BYTE PTR [rax],al
   140020644:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020645:	retf   0x1
   140020648:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14002064a:	add    BYTE PTR [rax],al
   14002064c:	rex.WRXB jo 0x14002064f
   14002064f:	add    BYTE PTR [rdx+rcx*8+0x70500001],ah
   140020656:	add    BYTE PTR [rax],al
   140020658:	xchg   ecx,eax
   140020659:	jo     0x14002065b
   14002065b:	add    BYTE PTR [rax-0x6bfffe36],bl
   140020661:	jo     0x140020663
   140020663:	add    BYTE PTR [rdi+0x71],ah
   140020666:	add    BYTE PTR [rax],al
   140020668:	mov    esp,0x680001ca
   14002066d:	jno    0x14002066f
   14002066f:	add    BYTE PTR [rax],bl
   140020671:	jb     0x140020673
   140020673:	add    ah,cl
   140020675:	retf   0x1
   140020678:	sbb    BYTE PTR [rdx+0x0],dh
   14002067b:	add    BYTE PTR [rdx],dh
   14002067d:	jb     0x14002067f
   14002067f:	add    BYTE PTR [rax+0x340001ca],dl
   140020685:	jb     0x140020687
   140020687:	add    BYTE PTR [rsi+0x72],cl
   14002068a:	add    BYTE PTR [rax],al
   14002068c:	nop
   14002068d:	retf   0x1
   140020690:	(bad)  
   140020691:	jb     0x140020693
   140020693:	add    BYTE PTR [rax-0x6fffff8e],bl
   140020699:	retf   0x1
   14002069c:	cwde   
   14002069d:	jb     0x14002069f
   14002069f:	add    BYTE PTR [rcx-0x6fffff8e],bh
   1400206a5:	retf   0x1
   1400206a8:	(bad)  
   1400206a9:	jb     0x1400206ab
   1400206ab:	add    BYTE PTR [rdx],bh
   1400206ad:	jae    0x1400206af
   1400206af:	add    ah,bl
   1400206b1:	retf   0x1
   1400206b4:	cmp    al,0x73
   1400206b6:	add    BYTE PTR [rax],al
   1400206b8:	mov    BYTE PTR [rbx+0x0],dh
   1400206bb:	add    BYTE PTR [rax-0x2e],ah
   1400206be:	add    DWORD PTR [rax],eax
   1400206c0:	mov    BYTE PTR [rbx+0x0],dh
   1400206c3:	add    ch,al
   1400206c5:	jae    0x1400206c7
   1400206c7:	add    BYTE PTR [rax-0x37fffe36],dl
   1400206cd:	jae    0x1400206cf
   1400206cf:	add    ch,ch
   1400206d1:	jae    0x1400206d3
   1400206d3:	add    BYTE PTR [rax+0xc0001ca],dl
   1400206d9:	je     0x1400206db
   1400206db:	add    BYTE PTR [rbx+0x74],dl
   1400206de:	add    BYTE PTR [rax],al
   1400206e0:	hlt    
   1400206e1:	retf   0x1
   1400206e4:	push   rsp
   1400206e5:	je     0x1400206e7
   1400206e7:	add    BYTE PTR [rbp-0x2bffff8c],bh
   1400206ed:	mov    DWORD PTR [rcx],0x74c800
   1400206f3:	add    bl,dh
   1400206f5:	je     0x1400206f7
   1400206f7:	add    BYTE PTR [rax+0x40001ca],dl
   1400206fd:	jne    0x1400206ff
   1400206ff:	add    BYTE PTR [rbp+rsi*2+0x0],al
   140020703:	add    al,cl
   140020705:	enter  0x1,0x44
   140020709:	jne    0x14002070b
   14002070b:	add    BYTE PTR [rax+0x75],bh
   14002070e:	add    BYTE PTR [rax],al
   140020710:	adc    al,0xcb
   140020712:	add    DWORD PTR [rax],eax
   140020714:	js     0x14002078b
   140020716:	add    BYTE PTR [rax],al
   140020718:	mov    bl,0x75
   14002071a:	add    BYTE PTR [rax],al
   14002071c:	rex.R retf 
   14002071e:	add    DWORD PTR [rax],eax
   140020720:	mov    ah,0x75
   140020722:	add    BYTE PTR [rax],al
   140020724:	push   rbx
   140020725:	ja     0x140020727
   140020727:	add    BYTE PTR [rax-0x35],ch
   14002072a:	add    DWORD PTR [rax],eax
   14002072c:	push   rsp
   14002072d:	ja     0x14002072f
   14002072f:	add    BYTE PTR [rsi],ch
   140020731:	jns    0x140020733
   140020733:	add    BYTE PTR [rax-0x36],ah
   140020736:	add    DWORD PTR [rax],eax
   140020738:	rex jns 0x14002073b
   14002073b:	add    BYTE PTR [rdx+0x79],bh
   14002073e:	add    BYTE PTR [rax],al
   140020740:	cmp    al,0xcb
   140020742:	add    DWORD PTR [rax],eax
   140020744:	mov    esp,0x4000079
   140020749:	jp     0x14002074b
   14002074b:	add    BYTE PTR [rbx+rcx*8],dh
   14002074e:	add    DWORD PTR [rax],eax
   140020750:	sbb    BYTE PTR [rdx+0x0],bh
   140020753:	add    BYTE PTR [rbx],bh
   140020755:	jp     0x140020757
   140020757:	add    BYTE PTR [rax+0x400001ca],dl
   14002075d:	jp     0x14002075f
   14002075f:	add    BYTE PTR [rax+0x7a],dl
   140020762:	add    BYTE PTR [rax],al
   140020764:	nop
   140020765:	retf   0x1
   140020768:	push   rax
   140020769:	jp     0x14002076b
   14002076b:	add    BYTE PTR [rcx-0x2bffff86],ah
   140020771:	mov    DWORD PTR [rcx],0x7aac00
   140020777:	add    BYTE PTR [rdx],bh
   140020779:	jnp    0x14002077b
   14002077b:	add    ah,dl
   14002077d:	mov    DWORD PTR [rcx],0x7b6400
   140020783:	add    BYTE PTR [rbx-0x5fffff85],cl
   140020789:	retf   
   14002078a:	add    DWORD PTR [rax],eax
   14002078c:	enter  0x7b,0x0
   140020790:	(bad)  
   140020792:	add    BYTE PTR [rax],al
   140020794:	nop
   140020795:	retf   0x1
   140020798:	adc    BYTE PTR [rax+rax*1+0x0],bh
   14002079c:	ret    
   14002079d:	jl     0x14002079f
   14002079f:	add    al,al
   1400207a1:	retf   
   1400207a2:	add    DWORD PTR [rax],eax
   1400207a4:	(bad)  
   1400207a5:	jl     0x1400207a7
   1400207a7:	add    BYTE PTR [rcx],al
   1400207a9:	jge    0x1400207ab
   1400207ab:	add    BYTE PTR [rax+rdx*8+0x1],dh
   1400207af:	add    BYTE PTR [rdi*2+0x7d620000],al
   1400207b6:	add    BYTE PTR [rax],al
   1400207b8:	(bad)  
   1400207b9:	mov    DWORD PTR [rcx],0x7d6400
   1400207bf:	add    bl,al
   1400207c1:	jge    0x1400207c3
   1400207c3:	add    ah,dl
   1400207c5:	mov    DWORD PTR [rcx],0x7dc400
   1400207cb:	add    BYTE PTR [rcx],bl
   1400207cd:	jle    0x1400207cf
   1400207cf:	add    BYTE PTR [rax+0x1c0001ca],dl
   1400207d5:	jle    0x1400207d7
   1400207d7:	add    BYTE PTR [rcx-0x2bffff82],dl
   1400207dd:	mov    DWORD PTR [rcx],0x7ec000
   1400207e3:	add    bl,dl
   1400207e5:	add    DWORD PTR [rax],0x1cbd000
   1400207eb:	add    ah,dl
   1400207ed:	add    DWORD PTR [rax],0x832f00
   1400207f3:	add    ah,ch
   1400207f5:	retf   
   1400207f6:	add    DWORD PTR [rax],eax
   1400207f8:	cmp    BYTE PTR [rbx-0x7c210000],al
   1400207fe:	add    BYTE PTR [rax],al
   140020800:	(bad)  
   140020801:	(bad)  
   140020802:	add    DWORD PTR [rax],eax
   140020804:	loopne 0x140020789
   140020806:	add    BYTE PTR [rax],al
   140020808:	inc    BYTE PTR [rbx-0x2b480000]
   14002080e:	add    DWORD PTR [rax],eax
   140020810:	add    BYTE PTR [rax+rax*1+0x844600],al
   140020817:	add    BYTE PTR [rax-0x6ffffe36],dl
   14002081d:	test   BYTE PTR [rax],al
   14002081f:	add    dh,bl
   140020821:	test   BYTE PTR [rax],al
   140020823:	add    al,cl
   140020825:	enter  0x1,0xe0
   140020829:	test   BYTE PTR [rax],al
   14002082b:	add    BYTE PTR [rax],al
   14002082d:	test   DWORD PTR [rax],eax
   14002082f:	add    BYTE PTR [rax+0x1ca],dl
   140020835:	test   DWORD PTR [rax],eax
   140020837:	add    BYTE PTR [rax],ah
   140020839:	test   DWORD PTR [rax],eax
   14002083b:	add    BYTE PTR [rax+0x200001ca],dl
   140020841:	test   DWORD PTR [rax],eax
   140020843:	add    al,al
   140020845:	xchg   BYTE PTR [rax],al
   140020847:	add    BYTE PTR [rax],ah
   140020849:	int3   
   14002084a:	add    DWORD PTR [rax],eax
   14002084c:	rol    BYTE PTR [rsi-0x78f70000],0x0
   140020853:	add    ah,dl
   140020855:	mov    DWORD PTR [rcx],0x870c00
   14002085b:	add    bl,bh
   14002085d:	xchg   DWORD PTR [rax],eax
   14002085f:	add    BYTE PTR [rax-0x32],ah
   140020862:	add    DWORD PTR [rax],eax
   140020864:	cld    
   140020865:	xchg   DWORD PTR [rax],eax
   140020867:	add    BYTE PTR [rcx-0x78],dl
   14002086a:	add    BYTE PTR [rax],al
   14002086c:	enter  0x1c8,0x0
   140020870:	push   rsp
   140020871:	mov    BYTE PTR [rax],al
   140020873:	add    BYTE PTR [rcx-0x37ffff78],ch
   140020879:	enter  0x1,0xac
   14002087d:	mov    BYTE PTR [rax],al
   14002087f:	add    BYTE PTR [rcx],al
   140020881:	mov    DWORD PTR [rax],eax
   140020883:	add    al,cl
   140020885:	enter  0x1,0x4
   140020889:	mov    DWORD PTR [rax],eax
   14002088b:	add    BYTE PTR [rcx+rcx*4+0x0],ch
   14002088f:	add    BYTE PTR [rax-0x2e],ah
   140020892:	add    DWORD PTR [rax],eax
   140020894:	ins    BYTE PTR es:[rdi],dx
   140020895:	mov    DWORD PTR [rax],eax
   140020897:	add    ah,ah
   140020899:	mov    DWORD PTR [rax],eax
   14002089b:	add    BYTE PTR [rdi+rcx*8],dl
   14002089e:	add    DWORD PTR [rax],eax
   1400208a0:	in     al,0x89
   1400208a2:	add    BYTE PTR [rax],al
   1400208a4:	ror    DWORD PTR [rdx-0x31a00000],cl
   1400208aa:	add    DWORD PTR [rax],eax
   1400208ac:	(bad)  
   1400208ad:	mov    al,BYTE PTR [rax]
   1400208af:	add    BYTE PTR [rcx],bh
   1400208b1:	mov    eax,DWORD PTR [rax]
   1400208b3:	add    BYTE PTR [rax-0x2e],ah
   1400208b6:	add    DWORD PTR [rax],eax
   1400208b8:	cmp    al,0x8b
   1400208ba:	add    BYTE PTR [rax],al
   1400208bc:	jae    0x140020849
   1400208be:	add    BYTE PTR [rax],al
   1400208c0:	or     al,0xcc
   1400208c2:	add    DWORD PTR [rax],eax
   1400208c4:	je     0x140020851
   1400208c6:	add    BYTE PTR [rax],al
   1400208c8:	stc    
   1400208c9:	mov    eax,DWORD PTR [rax]
   1400208cb:	add    BYTE PTR [rsp+rcx*8],dl
   1400208ce:	add    DWORD PTR [rax],eax
   1400208d0:	cld    
   1400208d1:	mov    eax,DWORD PTR [rax]
   1400208d3:	add    BYTE PTR [rip+0xffffffffd400008c],bh        # 0x114020965
   1400208d9:	mov    DWORD PTR [rcx],0x8c4000
   1400208df:	add    dl,dh
   1400208e1:	mov    WORD PTR [rax],es
   1400208e3:	add    BYTE PTR [rsp+rcx*8],bh
   1400208e6:	add    DWORD PTR [rax],eax
   1400208e8:	hlt    
   1400208e9:	mov    WORD PTR [rax],es
   1400208eb:	add    BYTE PTR [rbx-0x73],ch
   1400208ee:	add    BYTE PTR [rax],al
   1400208f0:	(bad)  
   1400208f1:	rol    BYTE PTR [rcx],cl
   1400208f3:	add    BYTE PTR [rbp+rcx*4+0x0],ch
   1400208f7:	add    BYTE PTR [rdi-0x2bffff73],dh
   1400208fd:	mov    DWORD PTR [rcx],0x8dc400
   140020903:	add    BYTE PTR [rax+0x6000008e],ch
   140020909:	int3   
   14002090a:	add    DWORD PTR [rax],eax
   14002090c:	test   al,0x8e
   14002090e:	add    BYTE PTR [rax],al
   140020910:	call   0x1140209a3
   140020915:	mov    DWORD PTR [rcx],0x8ee800
   14002091b:	add    bl,dl
   14002091d:	pop    QWORD PTR [rax]
   14002091f:	add    BYTE PTR [rsp+rcx*8-0x702bffff],bh
   140020926:	add    BYTE PTR [rax],al
   140020928:	iret   
   140020929:	nop
   14002092a:	add    BYTE PTR [rax],al
   14002092c:	fmul   st,st(4)
   14002092e:	add    DWORD PTR [rax],eax
   140020930:	rcl    BYTE PTR [rax-0x6ef50000],1
   140020936:	add    BYTE PTR [rax],al
   140020938:	pushf  
   140020939:	int3   
   14002093a:	add    DWORD PTR [rax],eax
   14002093c:	or     al,0x91
   14002093e:	add    BYTE PTR [rax],al
   140020940:	rex.WR xchg rcx,rax
   140020942:	add    BYTE PTR [rax],al
   140020944:	enter  0x1c8,0x0
   140020948:	rex.WR xchg rcx,rax
   14002094a:	add    BYTE PTR [rax],al
   14002094c:	rcl    BYTE PTR [rcx-0x2de00000],0x1
   140020953:	add    al,al
   140020955:	xchg   ecx,eax
   140020956:	add    BYTE PTR [rax],al
   140020958:	or     eax,0xc8000092
   14002095d:	enter  0x1,0x10
   140020961:	xchg   edx,eax
   140020962:	add    BYTE PTR [rax],al
   140020964:	rex.WRX xchg rbx,rax
   140020966:	add    BYTE PTR [rax],al
   140020968:	in     al,dx
   140020969:	int3   
   14002096a:	add    DWORD PTR [rax],eax
   14002096c:	push   rax
   14002096d:	xchg   ebx,eax
   14002096e:	add    BYTE PTR [rax],al
   140020970:	jnp    0x140020905
   140020972:	add    BYTE PTR [rax],al
   140020974:	nop
   140020975:	retf   0x1
   140020978:	nop
   140020979:	xchg   ebx,eax
   14002097a:	add    BYTE PTR [rax],al
   14002097c:	mov    edi,0xfc000093
   140020981:	int3   
   140020982:	add    DWORD PTR [rax],eax
   140020984:	rcl    BYTE PTR [rbx-0x6af80000],0x0
   14002098b:	add    BYTE PTR [rax-0x32],ah
   14002098e:	add    DWORD PTR [rax],eax
   140020990:	adc    BYTE PTR [rbp-0x696c0000],dl
   140020996:	add    BYTE PTR [rax],al
   140020998:	add    al,0xcd
   14002099a:	add    DWORD PTR [rax],eax
   14002099c:	xchg   esp,eax
   14002099d:	xchg   esi,eax
   14002099e:	add    BYTE PTR [rax],al
   1400209a0:	test   al,0x96
   1400209a2:	add    BYTE PTR [rax],al
   1400209a4:	mov    eax,0xa80001d4
   1400209a9:	xchg   esi,eax
   1400209aa:	add    BYTE PTR [rax],al
   1400209ac:	add    DWORD PTR [rax-0x32ec0000],ebx
   1400209b2:	add    DWORD PTR [rax],eax
   1400209b4:	add    al,0x98
   1400209b6:	add    BYTE PTR [rax],al
   1400209b8:	hlt    
   1400209b9:	cdq    
   1400209ba:	add    BYTE PTR [rax],al
   1400209bc:	adc    al,0xcd
   1400209be:	add    DWORD PTR [rax],eax
   1400209c0:	hlt    
   1400209c1:	cdq    
   1400209c2:	add    BYTE PTR [rax],al
   1400209c4:	push   rbx
   1400209c5:	(bad)  
   1400209c6:	add    BYTE PTR [rax],al
   1400209c8:	je     0x140020997
   1400209ca:	add    DWORD PTR [rax],eax
   1400209cc:	push   rsp
   1400209cd:	(bad)  
   1400209ce:	add    BYTE PTR [rax],al
   1400209d0:	cdq    
   1400209d1:	(bad)  
   1400209d2:	add    BYTE PTR [rax],al
   1400209d4:	push   rax
   1400209d5:	int    0x1
   1400209d7:	add    BYTE PTR [rdx+rbx*4-0x65250000],bl
   1400209de:	add    BYTE PTR [rax],al
   1400209e0:	sub    al,0xcd
   1400209e2:	add    DWORD PTR [rax],eax
   1400209e4:	fcomp  QWORD PTR [rdx-0x64e70000]
   1400209ea:	add    BYTE PTR [rax],al
   1400209ec:	cwde   
   1400209ed:	int    0x1
   1400209ef:	add    BYTE PTR [rbx+rbx*4],bl
   1400209f2:	add    BYTE PTR [rax],al
   1400209f4:	jmp    0x15c020a94
   1400209f9:	int    0x1
   1400209fb:	add    ah,ch
   1400209fd:	fwait
   1400209fe:	add    BYTE PTR [rax],al
   140020a00:	or     al,0x9c
   140020a02:	add    BYTE PTR [rax],al
   140020a04:	je     0x1400209d6
   140020a06:	add    DWORD PTR [rax],eax
   140020a08:	or     al,0x9c
   140020a0a:	add    BYTE PTR [rax],al
   140020a0c:	add    DWORD PTR [rbp-0x32dc0000],ebx
   140020a12:	add    DWORD PTR [rax],eax
   140020a14:	add    al,0x9d
   140020a16:	add    BYTE PTR [rax],al
   140020a18:	imul   ebx,DWORD PTR [rbp-0x37380000],0x1
   140020a1f:	add    BYTE PTR [rbp+rbx*4+0x0],ch
   140020a23:	add    BYTE PTR [rax],al
   140020a25:	sahf   
   140020a26:	add    BYTE PTR [rax],al
   140020a28:	enter  0x1c8,0x0
   140020a2c:	add    BYTE PTR [rsi-0x61610000],bl
   140020a32:	add    BYTE PTR [rax],al
   140020a34:	(bad)  
   140020a35:	rol    BYTE PTR [rcx],cl
   140020a37:	add    BYTE PTR [rax-0x26ffff62],ah
   140020a3d:	sahf   
   140020a3e:	add    BYTE PTR [rax],al
   140020a40:	nop
   140020a41:	retf   0x1
   140020a44:	fcomp  QWORD PTR [rsi-0x61020000]
   140020a4a:	add    BYTE PTR [rax],al
   140020a4c:	nop
   140020a4d:	retf   0x1
   140020a50:	add    BYTE PTR [rdi-0x60cf0000],bl
   140020a56:	add    BYTE PTR [rax],al
   140020a58:	(bad)  
   140020a59:	mov    DWORD PTR [rcx],0x9f3400
   140020a5f:	add    BYTE PTR [rbp-0x61],ah
   140020a62:	add    BYTE PTR [rax],al
   140020a64:	(bad)  
   140020a65:	mov    DWORD PTR [rcx],0x9fd000
   140020a6b:	add    BYTE PTR [rip+0x180000a3],ch        # 0x158020b14
   140020a71:	(bad)  
   140020a72:	add    DWORD PTR [rax],eax
   140020a74:	xor    BYTE PTR [rbx-0x5c030000],ah
   140020a7a:	add    BYTE PTR [rax],al
   140020a7c:	add    al,0xce
   140020a7e:	add    DWORD PTR [rax],eax
   140020a80:	add    BYTE PTR [rax+rax*1+0xa5db00],ah
   140020a87:	add    ah,ch
   140020a89:	int    0x1
   140020a8b:	add    ah,bl
   140020a8d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020a8e:	add    BYTE PTR [rax],al
   140020a90:	and    al,0xa7
   140020a92:	add    BYTE PTR [rax],al
   140020a94:	xor    al,0xce
   140020a96:	add    DWORD PTR [rax],eax
   140020a98:	and    al,0xa7
   140020a9a:	add    BYTE PTR [rax],al
   140020a9c:	pop    rbx
   140020a9d:	test   al,0x0
   140020a9f:	add    BYTE PTR [rsi+rcx*8+0x1],cl
   140020aa3:	add    BYTE PTR [rax+rbp*4+0x0],bl
   140020aa7:	add    BYTE PTR [rsi-0x27ffff57],bl
   140020aad:	int    0x1
   140020aaf:	add    BYTE PTR [rax-0x1effff57],ah
   140020ab5:	stos   DWORD PTR es:[rdi],eax
   140020ab6:	add    BYTE PTR [rax],al
   140020ab8:	mov    esp,0xe40001cd
   140020abd:	stos   DWORD PTR es:[rdi],eax
   140020abe:	add    BYTE PTR [rax],al
   140020ac0:	or     ch,BYTE PTR [rax+rax*1+0x1ca9000]
   140020ac7:	add    BYTE PTR [rsp+rbp*4],bh
   140020aca:	add    BYTE PTR [rax],al
   140020acc:	or     ebp,DWORD PTR [rbp-0x37380000]
   140020ad2:	add    DWORD PTR [rax],eax
   140020ad4:	or     al,0xad
   140020ad6:	add    BYTE PTR [rax],al
   140020ad8:	rex.RB lods eax,DWORD PTR ds:[rsi]
   140020ada:	add    BYTE PTR [rax],al
   140020adc:	xchg   esp,eax
   140020add:	enter  0x1,0x48
   140020ae1:	lods   eax,DWORD PTR ds:[rsi]
   140020ae2:	add    BYTE PTR [rax],al
   140020ae4:	nop
   140020ae5:	lods   eax,DWORD PTR ds:[rsi]
   140020ae6:	add    BYTE PTR [rax],al
   140020ae8:	(bad)  
   140020ae9:	mov    DWORD PTR [rcx],0xadac00
   140020aef:	add    bl,ah
   140020af1:	lods   eax,DWORD PTR ds:[rsi]
   140020af2:	add    BYTE PTR [rax],al
   140020af4:	(bad)  
   140020af5:	mov    DWORD PTR [rcx],0xae0000
   140020afb:	add    BYTE PTR [rbp-0x52],ah
   140020afe:	add    BYTE PTR [rax],al
   140020b00:	(bad)  
   140020b01:	mov    DWORD PTR [rcx],0xae6800
   140020b07:	add    ah,bh
   140020b09:	scas   al,BYTE PTR es:[rdi]
   140020b0a:	add    BYTE PTR [rax],al
   140020b0c:	nop
   140020b0d:	retf   0x1
   140020b10:	cld    
   140020b11:	scas   al,BYTE PTR es:[rdi]
   140020b12:	add    BYTE PTR [rax],al
   140020b14:	sub    eax,0x600000b0
   140020b19:	(bad)  
   140020b1a:	add    DWORD PTR [rax],eax
   140020b1c:	rex.W mov al,0x0
   140020b1f:	add    BYTE PTR [rax-0x4f],cl
   140020b22:	add    BYTE PTR [rax],al
   140020b24:	js     0x140020af4
   140020b26:	add    DWORD PTR [rax],eax
   140020b28:	rex.W mov cl,0x0
   140020b2b:	add    BYTE PTR [rip+0xffffffff8c0000b4],dh        # 0xcc020be5
   140020b31:	(bad)  
   140020b32:	add    DWORD PTR [rax],eax
   140020b34:	cmp    BYTE PTR [rax+rax*1+0xb72500],dh
   140020b3b:	add    BYTE PTR [rsi+rcx*8-0x48d7ffff],ah
   140020b42:	add    BYTE PTR [rax],al
   140020b44:	adc    bh,BYTE PTR [rax-0x31400000]
   140020b4a:	add    DWORD PTR [rax],eax
   140020b4c:	adc    al,0xb8
   140020b4e:	add    BYTE PTR [rax],al
   140020b50:	(bad)  
   140020b51:	mov    ecx,0xced40000
   140020b56:	add    DWORD PTR [rax],eax
   140020b58:	sbb    BYTE PTR [rcx-0x45f20000],bh
   140020b5e:	add    BYTE PTR [rax],al
   140020b60:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020b61:	retf   0x1
   140020b64:	adc    BYTE PTR [rdx-0x45460000],bh
   140020b6a:	add    BYTE PTR [rax],al
   140020b6c:	in     al,dx
   140020b6d:	(bad)  
   140020b6e:	add    DWORD PTR [rax],eax
   140020b70:	sar    BYTE PTR [rdx-0x43270000],1
   140020b76:	add    BYTE PTR [rax],al
   140020b78:	cld    
   140020b79:	(bad)  
   140020b7a:	add    DWORD PTR [rax],eax
   140020b7c:	fdivr  QWORD PTR [rax+rax*1+0xbdec00]
   140020b83:	add    BYTE PTR [rax],ch
   140020b85:	iret   
   140020b86:	add    DWORD PTR [rax],eax
   140020b88:	in     al,dx
   140020b89:	mov    ebp,0xbf980000
   140020b8e:	add    BYTE PTR [rax],al
   140020b90:	rex.R iret 
   140020b92:	add    DWORD PTR [rax],eax
   140020b94:	cwde   
   140020b95:	mov    edi,0xc05f0000
   140020b9a:	add    BYTE PTR [rax],al
   140020b9c:	adc    al,0xcf
   140020b9e:	add    DWORD PTR [rax],eax
   140020ba0:	push   0xffffffffa00000c0
   140020ba5:	rol    BYTE PTR [rax],0x0
   140020ba8:	(bad)  
   140020ba9:	iret   
   140020baa:	add    DWORD PTR [rax],eax
   140020bac:	movabs al,ds:0x600000c2b70000c0
   140020bb5:	rol    BYTE PTR [rcx],cl
   140020bb7:	add    BYTE PTR [rax+0x350000c2],bh
   140020bbd:	ret    
   140020bbe:	add    BYTE PTR [rax],al
   140020bc0:	and    dl,dl
   140020bc2:	add    DWORD PTR [rax],eax
   140020bc4:	cmp    bl,al
   140020bc6:	add    BYTE PTR [rax],al
   140020bc8:	enter  0xc3,0x0
   140020bcc:	adc    al,0xcf
   140020bce:	add    DWORD PTR [rax],eax
   140020bd0:	enter  0xc3,0x0
   140020bd4:	stos   BYTE PTR es:[rdi],al
   140020bd5:	(bad)
   140020bd8:	test   al,0xcf
   140020bda:	add    DWORD PTR [rax],eax
   140020bdc:	lods   al,BYTE PTR ds:[rsi]
   140020bdd:	(bad)
   140020be0:	(bad)  
   140020be1:	mov    DWORD PTR [rax],0x1cfc400
   140020be7:	add    BYTE PTR [rdi+rax*8+0x0],ah
   140020beb:	add    BYTE PTR [rbx-0x6fffff39],cl
   140020bf1:	retf   0x1
   140020bf4:	mov    edi,es
   140020bf6:	add    BYTE PTR [rax],al
   140020bf8:	rex.WXB enter 0x0,0x64
   140020bfd:	iret   
   140020bfe:	add    DWORD PTR [rax],eax
   140020c00:	rex.WR enter 0x0,0xf3
   140020c05:	retf   0x0
   140020c08:	mov    bh,cl
   140020c0a:	add    DWORD PTR [rax],eax
   140020c0c:	hlt    
   140020c0d:	retf   0x0
   140020c10:	imul   ecx,ebx,0xcbc00000
   140020c16:	add    DWORD PTR [rax],eax
   140020c18:	or     bl,0x0
   140020c1b:	add    BYTE PTR [rbx+0x340000cc],al
   140020c21:	(bad)  
   140020c22:	add    DWORD PTR [rax],eax
   140020c24:	test   ah,cl
   140020c26:	add    BYTE PTR [rax],al
   140020c28:	sbb    ecx,ebp
   140020c2a:	add    BYTE PTR [rax],al
   140020c2c:	adc    al,0xcf
   140020c2e:	add    DWORD PTR [rax],eax
   140020c30:	sbb    al,0xcd
   140020c32:	add    BYTE PTR [rax],al
   140020c34:	mov    cl,0xcd
   140020c36:	add    BYTE PTR [rax],al
   140020c38:	adc    al,0xcf
   140020c3a:	add    DWORD PTR [rax],eax
   140020c3c:	mov    ah,0xcd
   140020c3e:	add    BYTE PTR [rax],al
   140020c40:	add    al,0xce
   140020c42:	add    BYTE PTR [rax],al
   140020c44:	clc    
   140020c45:	iret   
   140020c46:	add    DWORD PTR [rax],eax
   140020c48:	add    al,0xce
   140020c4a:	add    BYTE PTR [rax],al
   140020c4c:	mov    ebx,0x80000ce
   140020c51:	rol    BYTE PTR [rcx],1
   140020c53:	add    BYTE PTR [rdi+rcx*8],al
   140020c56:	add    BYTE PTR [rax],al
   140020c58:	mov    esi,0xd80000cf
   140020c5d:	int3   
   140020c5e:	add    DWORD PTR [rax],eax
   140020c60:	ror    bh,0x0
   140020c63:	add    BYTE PTR [rip+0xffffffff900000d0],dh        # 0xd0020d39
   140020c69:	retf   0x1
   140020c6c:	cmp    al,dl
   140020c6e:	add    BYTE PTR [rax],al
   140020c70:	rex.X rol DWORD PTR [rax],1
   140020c73:	add    BYTE PTR [rax+rdx*8],dh
   140020c76:	add    DWORD PTR [rax],eax
   140020c78:	rex.R rol DWORD PTR [rax],1
   140020c7b:	add    BYTE PTR [rax+0x740000d1],dh
   140020c81:	rol    BYTE PTR [rcx],1
   140020c83:	add    BYTE PTR [rax+0x60000d1],dh
   140020c89:	rol    BYTE PTR [rax],cl
   140020c8b:	add    BYTE PTR [rax-0x2e],ah
   140020c8e:	add    DWORD PTR [rax],eax
   140020c90:	or     dl,dl
   140020c92:	add    BYTE PTR [rax],al
   140020c94:	adc    bl,dl
   140020c96:	add    BYTE PTR [rax],al
   140020c98:	cmp    al,0xd0
   140020c9a:	add    DWORD PTR [rax],eax
   140020c9c:	adc    bl,dl
   140020c9e:	add    BYTE PTR [rax],al
   140020ca0:	(bad)  
   140020ca1:	rol    DWORD PTR [rax],cl
   140020ca3:	add    BYTE PTR [rax+0x400001ca],dl
   140020ca9:	rol    DWORD PTR [rax],cl
   140020cab:	add    cl,dh
   140020cad:	(bad)  
   140020cae:	add    BYTE PTR [rax],al
   140020cb0:	rex.WR rol BYTE PTR [rcx],1
   140020cb3:	add    BYTE PTR [rax-0x9ffff2b],al
   140020cb9:	(bad)  
   140020cba:	add    BYTE PTR [rax],al
   140020cbc:	adc    al,0xcf
   140020cbe:	add    DWORD PTR [rax],eax
   140020cc0:	and    bh,dl
   140020cc2:	add    BYTE PTR [rax],al
   140020cc4:	push   rsi
   140020cc5:	xlat   BYTE PTR ds:[rbx]
   140020cc6:	add    BYTE PTR [rax],al
   140020cc8:	je     0x140020c9a
   140020cca:	add    DWORD PTR [rax],eax
   140020ccc:	adc    bh,0x0
   140020ccf:	add    BYTE PTR [rax],ch
   140020cd1:	fadd   DWORD PTR [rax]
   140020cd3:	add    BYTE PTR [rax+0x280001ca],dl
   140020cd9:	fadd   DWORD PTR [rax]
   140020cdb:	add    BYTE PTR [rax+0x7c0000d8],bl
   140020ce1:	rol    BYTE PTR [rcx],1
   140020ce3:	add    BYTE PTR [rax+0xd8],bl
   140020ce9:	fld    DWORD PTR [rax]
   140020ceb:	add    al,cl
   140020ced:	enter  0x1,0x8
   140020cf1:	fld    DWORD PTR [rax]
   140020cf3:	add    BYTE PTR [rbp+0x140000d9],bl
   140020cf9:	iret   
   140020cfa:	add    DWORD PTR [rax],eax
   140020cfc:	movabs al,ds:0x900000d9bc0000d9
   140020d05:	retf   0x1
   140020d08:	enter  0xd9,0x0
   140020d0c:	pop    rsp
   140020d0d:	fiadd  DWORD PTR [rax]
   140020d0f:	add    BYTE PTR [rdi+rcx*8],dl
   140020d12:	add    DWORD PTR [rax],eax
   140020d14:	pop    rsp
   140020d15:	fiadd  DWORD PTR [rax]
   140020d17:	add    BYTE PTR [rbx+0x600000da],ch
   140020d1d:	rol    BYTE PTR [rcx],cl
   140020d1f:	add    BYTE PTR [rdx+rbx*8-0x250f0000],ch
   140020d26:	add    BYTE PTR [rax],al
   140020d28:	(bad)  
   140020d29:	rol    BYTE PTR [rcx],1
   140020d2b:	add    ah,dh
   140020d2d:	fiadd  DWORD PTR [rax]
   140020d2f:	add    BYTE PTR [rdx],ah
   140020d31:	fild   DWORD PTR [rax]
   140020d33:	add    BYTE PTR [rax+0x440001d0],ah
   140020d39:	fild   DWORD PTR [rax]
   140020d3b:	add    ch,bl
   140020d3d:	fld    QWORD PTR [rax]
   140020d3f:	add    BYTE PTR [rax-0x1ffffe30],ch
   140020d45:	fld    QWORD PTR [rax]
   140020d47:	add    bh,ch
   140020d49:	fiadd  WORD PTR [rax]
   140020d4b:	add    al,bh
   140020d4d:	rol    BYTE PTR [rcx],1
   140020d4f:	add    al,dh
   140020d51:	fiadd  WORD PTR [rax]
   140020d53:	add    BYTE PTR [rdi+0x140000df],dh
   140020d59:	rol    DWORD PTR [rcx],1
   140020d5b:	add    BYTE PTR [rax-0x15ffff21],bh
   140020d61:	fild   WORD PTR [rax]
   140020d63:	add    BYTE PTR [rax-0x13fffe36],dl
   140020d69:	fild   WORD PTR [rax]
   140020d6b:	add    BYTE PTR [rdi-0x20],ch
   140020d6e:	add    BYTE PTR [rax],al
   140020d70:	enter  0x1c8,0x0
   140020d74:	jo     0x140020d56
   140020d76:	add    BYTE PTR [rax],al
   140020d78:	fchs   
   140020d7a:	add    BYTE PTR [rax],al
   140020d7c:	sub    al,0xd1
   140020d7e:	add    DWORD PTR [rax],eax
   140020d80:	fsubr  st(0),st
   140020d82:	add    BYTE PTR [rax],al
   140020d84:	push   0x500000e1
   140020d89:	rol    DWORD PTR [rcx],1
   140020d8b:	add    BYTE PTR [rax-0x1f],ch
   140020d8e:	add    BYTE PTR [rax],al
   140020d90:	stc    
   140020d91:	loope  0x140020d93
   140020d93:	add    al,dl
   140020d95:	rol    DWORD PTR [rcx],cl
   140020d97:	add    ah,bh
   140020d99:	loope  0x140020d9b
   140020d9b:	add    BYTE PTR [rsp+riz*8],al
   140020d9e:	add    BYTE PTR [rax],al
   140020da0:	mov    esp,0x40001d1
   140020da5:	in     al,0x0
   140020da7:	add    BYTE PTR [rcx],cl
   140020da9:	in     eax,0x0
   140020dab:	add    ah,bl
   140020dad:	rol    DWORD PTR [rcx],1
   140020daf:	add    BYTE PTR [riz*8-0x19d80000],cl
   140020db6:	add    BYTE PTR [rax],al
   140020db8:	(bad)  
   140020dba:	add    DWORD PTR [rax],eax
   140020dbc:	sub    dh,ah
   140020dbe:	add    BYTE PTR [rax],al
   140020dc0:	(bad)  
   140020dc1:	out    0x0,eax
   140020dc3:	add    ah,bh
   140020dc5:	rol    DWORD PTR [rcx],1
   140020dc7:	add    BYTE PTR [rdi+riz*8-0x17780000],bl
   140020dce:	add    BYTE PTR [rax],al
   140020dd0:	je     0x140020da3
   140020dd2:	add    DWORD PTR [rax],eax
   140020dd4:	mov    al,ch
   140020dd6:	add    BYTE PTR [rax],al
   140020dd8:	imul   ebp,ebx,0xd1a40000
   140020dde:	add    DWORD PTR [rax],eax
   140020de0:	ins    BYTE PTR es:[rdi],dx
   140020de1:	jmp    0x140020de3
   140020de3:	add    BYTE PTR [rbx+0x200000eb],ch
   140020de9:	rol    BYTE PTR [rcx],cl
   140020deb:	add    BYTE PTR [rbx+rbp*8-0x10f90000],ch
   140020df2:	add    BYTE PTR [rax],al
   140020df4:	cmp    dl,dl
   140020df6:	add    DWORD PTR [rax],eax
   140020df8:	or     bh,ch
   140020dfa:	add    BYTE PTR [rax],al
   140020dfc:	sahf   
   140020dfd:	out    dx,eax
   140020dfe:	add    BYTE PTR [rax],al
   140020e00:	sub    dl,dl
   140020e02:	add    DWORD PTR [rax],eax
   140020e04:	movabs al,ds:0xd40000f05f0000ef
   140020e0d:	mov    DWORD PTR [rcx],0xf06000
   140020e13:	add    cl,cl
   140020e15:	icebp  
   140020e16:	add    BYTE PTR [rax],al
   140020e18:	nop
   140020e19:	rol    BYTE PTR [rcx],cl
   140020e1b:	add    cl,cl
   140020e1d:	icebp  
   140020e1e:	add    BYTE PTR [rax],al
   140020e20:	cld    
   140020e21:	hlt    
   140020e22:	add    BYTE PTR [rax],al
   140020e24:	mov    al,0xd2
   140020e26:	add    DWORD PTR [rax],eax
   140020e28:	cld    
   140020e29:	hlt    
   140020e2a:	add    BYTE PTR [rax],al
   140020e2c:	cs cmc 
   140020e2e:	add    BYTE PTR [rax],al
   140020e30:	(bad)  
   140020e31:	rol    BYTE PTR [rcx],cl
   140020e33:	add    BYTE PTR [rax],dh
   140020e35:	cmc    
   140020e36:	add    BYTE PTR [rax],al
   140020e38:	fwait
   140020e39:	or     BYTE PTR [rcx],al
   140020e3b:	add    BYTE PTR [rax-0x2e],dh
   140020e3e:	add    DWORD PTR [rax],eax
   140020e40:	pushf  
   140020e41:	or     BYTE PTR [rcx],al
   140020e43:	add    BYTE PTR [rbx],ah
   140020e45:	or     DWORD PTR [rcx],eax
   140020e47:	add    BYTE PTR [rax-0x2e],ah
   140020e4a:	add    DWORD PTR [rax],eax
   140020e4c:	and    al,0x9
   140020e4e:	add    DWORD PTR [rax],eax
   140020e50:	sub    BYTE PTR [rdx],cl
   140020e52:	add    DWORD PTR [rax],eax
   140020e54:	(bad)  
   140020e55:	rol    BYTE PTR [rcx],cl
   140020e57:	add    BYTE PTR [rax],ch
   140020e59:	or     al,BYTE PTR [rcx]
   140020e5b:	add    BYTE PTR [rax],dl
   140020e5d:	or     eax,DWORD PTR [rcx]
   140020e5f:	add    BYTE PTR [rax-0x2e],ah
   140020e62:	add    DWORD PTR [rax],eax
   140020e64:	adc    BYTE PTR [rbx],cl
   140020e66:	add    DWORD PTR [rax],eax
   140020e68:	outs   dx,DWORD PTR ds:[rsi]
   140020e69:	or     eax,DWORD PTR [rcx]
   140020e6b:	add    BYTE PTR [rax+0x700001ca],dl
   140020e71:	or     eax,DWORD PTR [rcx]
   140020e73:	add    BYTE PTR [rip+0x6000010c],ch        # 0x1a0020f85
   140020e79:	(bad)  
   140020e7a:	add    DWORD PTR [rax],eax
   140020e7c:	js     0x140020e8a
   140020e7e:	add    DWORD PTR [rax],eax
   140020e80:	enter  0x10c,0x0
   140020e84:	nop
   140020e85:	retf   0x1
   140020e88:	enter  0x10c,0x0
   140020e8c:	movabs ds:0xa40001d2e400010d,al
   140020e95:	or     eax,0x11360001
   140020e9a:	add    DWORD PTR [rax],eax
   140020e9c:	or     bl,dl
   140020e9e:	add    DWORD PTR [rax],eax
   140020ea0:	cmp    BYTE PTR [rcx],dl
   140020ea2:	add    DWORD PTR [rax],eax
   140020ea4:	rcl    DWORD PTR [rcx],0x1
   140020ea7:	add    al,bh
   140020ea9:	rol    BYTE PTR [rcx],cl
   140020eab:	add    al,dl
   140020ead:	adc    DWORD PTR [rcx],eax
   140020eaf:	add    bh,ah
   140020eb1:	adc    DWORD PTR [rcx],eax
   140020eb3:	add    BYTE PTR [rax-0x2d],bh
   140020eb6:	add    DWORD PTR [rax],eax
   140020eb8:	out    0x11,eax
   140020eba:	add    DWORD PTR [rax],eax
   140020ebc:	fwait
   140020ebd:	adc    al,BYTE PTR [rcx]
   140020ebf:	add    BYTE PTR [rax-0x64fffe2d],cl
   140020ec5:	adc    al,BYTE PTR [rcx]
   140020ec7:	add    BYTE PTR [rdx+rdx*1-0x2c5bffff],bl
   140020ece:	add    DWORD PTR [rax],eax
   140020ed0:	movabs al,ds:0x2c000112fb000112
   140020ed9:	rol    DWORD PTR [rcx],cl
   140020edb:	add    bl,bh
   140020edd:	adc    al,BYTE PTR [rcx]
   140020edf:	add    BYTE PTR [rdi+0x44000115],dh
   140020ee5:	rol    DWORD PTR [rcx],cl
   140020ee7:	add    BYTE PTR [rdi-0x2bfffeeb],dh
   140020eed:	adc    eax,0xd3680001
   140020ef2:	add    DWORD PTR [rax],eax
   140020ef4:	(bad)  
   140020ef5:	adc    eax,0x16a60001
   140020efa:	add    DWORD PTR [rax],eax
   140020efc:	enter  0x1c8,0x0
   140020f00:	test   al,0x16
   140020f02:	add    DWORD PTR [rax],eax
   140020f04:	rex.RX (bad) 
   140020f06:	add    DWORD PTR [rax],eax
   140020f08:	mov    ah,0xd3
   140020f0a:	add    DWORD PTR [rax],eax
   140020f0c:	push   rax
   140020f0d:	(bad)  
   140020f0e:	add    DWORD PTR [rax],eax
   140020f10:	out    0x17,al
   140020f12:	add    DWORD PTR [rax],eax
   140020f14:	(bad)  
   140020f15:	rol    DWORD PTR [rcx],cl
   140020f17:	add    al,ch
   140020f19:	(bad)  
   140020f1a:	add    DWORD PTR [rax],eax
   140020f1c:	call   QWORD PTR [rdi]
   140020f1e:	add    DWORD PTR [rax],eax
   140020f20:	nop
   140020f21:	retf   0x1
   140020f24:	add    BYTE PTR [rax],bl
   140020f26:	add    DWORD PTR [rax],eax
   140020f28:	cmp    DWORD PTR [rax],ebx
   140020f2a:	add    DWORD PTR [rax],eax
   140020f2c:	nop
   140020f2d:	retf   0x1
   140020f30:	cmp    al,0x18
   140020f32:	add    DWORD PTR [rax],eax
   140020f34:	mov    esi,0xc8000118
   140020f39:	enter  0x1,0xc0
   140020f3d:	sbb    BYTE PTR [rcx],al
   140020f3f:	add    BYTE PTR [rcx],dh
   140020f41:	sbb    DWORD PTR [rcx],eax
   140020f43:	add    al,bl
   140020f45:	rol    DWORD PTR [rcx],cl
   140020f47:	add    BYTE PTR [rcx+rbx*1],dh
   140020f4a:	add    DWORD PTR [rax],eax
   140020f4c:	(bad)  
   140020f4d:	sbb    DWORD PTR [rcx],eax
   140020f4f:	add    al,dl
   140020f51:	rol    DWORD PTR [rcx],cl
   140020f53:	add    al,bl
   140020f55:	sbb    DWORD PTR [rcx],eax
   140020f57:	add    BYTE PTR [rdx-0x37fffee6],dl
   140020f5d:	enter  0x1,0xd8
   140020f61:	sbb    al,BYTE PTR [rcx]
   140020f63:	add    al,cl
   140020f65:	sbb    eax,DWORD PTR [rcx]
   140020f67:	add    ah,bh
   140020f69:	rol    DWORD PTR [rcx],cl
   140020f6b:	add    al,cl
   140020f6d:	sbb    eax,DWORD PTR [rcx]
   140020f6f:	add    BYTE PTR [rcx+0x1c],ah
   140020f72:	add    DWORD PTR [rax],eax
   140020f74:	(bad)  
   140020f75:	rol    BYTE PTR [rcx],cl
   140020f77:	add    BYTE PTR [rsp+rbx*1+0x1],dh
   140020f7b:	add    ch,cl
   140020f7d:	sbb    al,0x1
   140020f7f:	add    BYTE PTR [rsp+rdx*8],ch
   140020f82:	add    DWORD PTR [rax],eax
   140020f84:	call   0x1480210a5
   140020f89:	sbb    eax,0xc7d40001
   140020f8e:	add    DWORD PTR [rax],eax
   140020f90:	or     BYTE PTR [rip+0x1d540001],bl        # 0x15d560f97
   140020f96:	add    DWORD PTR [rax],eax
   140020f98:	(bad)  
   140020f99:	mov    DWORD PTR [rcx],0x11d5400
   140020f9f:	add    BYTE PTR [rbp+rbx*1-0x382bffff],ah
   140020fa6:	add    DWORD PTR [rax],eax
   140020fa8:	jo     0x140020fc8
   140020faa:	add    DWORD PTR [rax],eax
   140020fac:	sbb    esp,DWORD PTR [rcx+rax*1]
   140020faf:	add    BYTE PTR [rax],bh
   140020fb1:	(bad)  
   140020fb2:	add    DWORD PTR [rax],eax
   140020fb4:	sbb    al,0x24
   140020fb6:	add    DWORD PTR [rax],eax
   140020fb8:	jge    0x140020fde
   140020fba:	add    DWORD PTR [rax],eax
   140020fbc:	(bad)  
   140020fbd:	mov    DWORD PTR [rcx],0x1248000
   140020fc3:	add    BYTE PTR [rbx+0x44000124],bh
   140020fc9:	(bad)  
   140020fca:	add    DWORD PTR [rax],eax
   140020fcc:	mov    esp,0xdc000124
   140020fd1:	and    al,0x1
   140020fd3:	add    BYTE PTR [rax-0x23fffe36],dl
   140020fd9:	and    al,0x1
   140020fdb:	add    bl,dh
   140020fdd:	and    al,0x1
   140020fdf:	add    BYTE PTR [rax-0xbfffe36],dl
   140020fe5:	and    al,0x1
   140020fe7:	add    BYTE PTR [rip+0xffffffff90000125],al        # 0xd0021112
   140020fed:	retf   0x1
   140020ff0:	adc    al,0x25
   140020ff2:	add    DWORD PTR [rax],eax
   140020ff4:	fs and eax,0xc7d40001
   140020ffa:	add    DWORD PTR [rax],eax
   140020ffc:	fs and eax,0x25b60001
   140021002:	add    DWORD PTR [rax],eax
   140021004:	(bad)  
   140021005:	mov    DWORD PTR [rcx],0x1260c00
   14002100b:	add    BYTE PTR [rdx+0x4c000128],ah
   140021011:	(bad)  
   140021012:	add    DWORD PTR [rax],eax
   140021014:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021015:	sub    BYTE PTR [rcx],al
   140021017:	add    BYTE PTR [rcx],cl
   140021019:	sub    DWORD PTR [rcx],eax
   14002101b:	add    BYTE PTR [rsp+rdx*8+0x1],bh
   14002101f:	add    BYTE PTR [rcx+rbp*1],cl
   140021022:	add    DWORD PTR [rax],eax
   140021024:	(bad)
   140021027:	add    BYTE PTR [rax-0x2e],ah
   14002102a:	add    DWORD PTR [rax],eax
   14002102c:	enter  0x129,0x0
   140021030:	out    dx,eax
   140021031:	sub    al,BYTE PTR [rcx]
   140021033:	add    BYTE PTR [rsp+rdx*8+0x2b100001],al
   14002103a:	add    DWORD PTR [rax],eax
   14002103c:	sub    BYTE PTR [rbx],0x1
   14002103f:	add    BYTE PTR [rsp+rdx*8+0x2b800001],ah
   140021046:	add    DWORD PTR [rax],eax
   140021048:	movabs al,ds:0xa00001d4b800012b
   140021051:	sub    eax,DWORD PTR [rcx]
   140021053:	add    BYTE PTR [rsi],dh
   140021055:	sub    al,0x1
   140021057:	add    BYTE PTR [rsp+rdx*8+0x2c500001],ch
   14002105e:	add    DWORD PTR [rax],eax
   140021060:	(bad)  
   140021061:	sub    al,0x1
   140021063:	add    al,al
   140021065:	(bad)  
   140021066:	add    DWORD PTR [rax],eax
   140021068:	movabs al,ds:0x4400012cc700012c
   140021071:	(bad)  
   140021072:	add    DWORD PTR [rax],eax
   140021074:	enter  0x12c,0x0
   140021078:	(bad)  
   140021079:	(bad)  
   14002107a:	add    DWORD PTR [rax],eax
   14002107c:	enter  0x1d4,0x0
   140021080:	shr    BYTE PTR [rdi],1
   140021082:	add    DWORD PTR [rax],eax
   140021084:	(bad)  
   140021085:	(bad)  
   140021086:	add    DWORD PTR [rax],eax
   140021088:	nop
   140021089:	retf   0x1
   14002108c:	add    BYTE PTR [rax],dh
   14002108e:	add    DWORD PTR [rax],eax
   140021090:	sbb    eax,0xd4000130
   140021095:	mov    DWORD PTR [rcx],0x1302000
   14002109b:	add    BYTE PTR [rax+rsi*1-0x2b23ffff],bl
   1400210a2:	add    DWORD PTR [rax],eax
   1400210a4:	pushf  
   1400210a5:	xor    BYTE PTR [rcx],al
   1400210a7:	add    BYTE PTR [rbx-0x2bfffed0],bh
   1400210ad:	mov    DWORD PTR [rcx],0x130bc00
   1400210b3:	add    ch,cl
   1400210b5:	xor    BYTE PTR [rcx],al
   1400210b7:	add    BYTE PTR [rax+0x200001ca],dl
   1400210bd:	xor    DWORD PTR [rcx],eax
   1400210bf:	add    BYTE PTR [rbp+0x31],ch
   1400210c2:	add    DWORD PTR [rax],eax
   1400210c4:	add    al,0xd5
   1400210c6:	add    DWORD PTR [rax],eax
   1400210c8:	movabs al,ds:0x90000131bd000131
   1400210d1:	retf   0x1
   1400210d4:	shl    BYTE PTR [rcx],0x1
   1400210d7:	add    BYTE PTR [rcx],bl
   1400210d9:	xor    al,BYTE PTR [rcx]
   1400210db:	add    BYTE PTR [rax],ch
   1400210dd:	(bad)  
   1400210de:	add    DWORD PTR [rax],eax
   1400210e0:	xor    BYTE PTR [rdx],dh
   1400210e2:	add    DWORD PTR [rax],eax
   1400210e4:	push   rcx
   1400210e5:	xor    al,BYTE PTR [rcx]
   1400210e7:	add    BYTE PTR [rax],dh
   1400210e9:	(bad)  
   1400210ea:	add    DWORD PTR [rax],eax
   1400210ec:	push   rsp
   1400210ed:	xor    al,BYTE PTR [rcx]
   1400210ef:	add    BYTE PTR [rax-0x2bfffece],cl
   1400210f5:	mov    DWORD PTR [rcx],0x1328800
   1400210fb:	add    BYTE PTR [rcx+0x33],bl
   1400210fe:	add    DWORD PTR [rax],eax
   140021100:	sub    al,0xd4
   140021102:	add    DWORD PTR [rax],eax
   140021104:	pop    rsp
   140021105:	xor    eax,DWORD PTR [rcx]
   140021107:	add    BYTE PTR [rdi+0x33],ch
   14002110a:	add    DWORD PTR [rax],eax
   14002110c:	nop
   14002110d:	retf   0x1
   140021110:	jo     0x140021145
   140021112:	add    DWORD PTR [rax],eax
   140021114:	or     esi,DWORD PTR [rcx+rax*1]
   140021117:	add    BYTE PTR [rdx*8+0x340c0001],dh
   14002111e:	add    DWORD PTR [rax],eax
   140021120:	jns    0x140021156
   140021122:	add    DWORD PTR [rax],eax
   140021124:	cmp    al,0xd5
   140021126:	add    DWORD PTR [rax],eax
   140021128:	jl     0x14002115e
   14002112a:	add    DWORD PTR [rax],eax
   14002112c:	in     eax,dx
   14002112d:	xor    al,0x1
   14002112f:	add    BYTE PTR [rax-0x2b],cl
   140021132:	add    DWORD PTR [rax],eax
   140021134:	add    BYTE PTR [rip+0x35510001],dh        # 0x17553113b
   14002113a:	add    DWORD PTR [rax],eax
   14002113c:	pop    rax
   14002113d:	(bad)  
   14002113e:	add    DWORD PTR [rax],eax
   140021140:	jo     0x140021177
   140021142:	add    DWORD PTR [rax],eax
   140021144:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140021145:	cmp    DWORD PTR [rcx],eax
   140021147:	add    BYTE PTR [rax-0x2b],ah
   14002114a:	add    DWORD PTR [rax],eax
   14002114c:	test   al,0x39
   14002114e:	add    DWORD PTR [rax],eax
   140021150:	cmp    DWORD PTR [rdx],edi
   140021152:	add    DWORD PTR [rax],eax
   140021154:	rex.R enter 0x1,0x50
   140021159:	cmp    al,BYTE PTR [rcx]
   14002115b:	add    BYTE PTR [rdi],dl
   14002115d:	cmp    eax,DWORD PTR [rcx]
   14002115f:	add    BYTE PTR [rax-0x2b],ch
   140021162:	add    DWORD PTR [rax],eax
   140021164:	xor    BYTE PTR [rbx],bh
   140021166:	add    DWORD PTR [rax],eax
   140021168:	xor    bh,BYTE PTR [rbx]
   14002116a:	add    DWORD PTR [rax],eax
   14002116c:	rex enter 0x1,0x40
   140021171:	cmp    eax,DWORD PTR [rcx]
   140021173:	add    BYTE PTR [rsi+0x3b],bl
   140021176:	add    DWORD PTR [rax],eax
   140021178:	cwde   
   140021179:	retf   
   14002117a:	add    DWORD PTR [rax],eax
   14002117c:	pop    rsi
   14002117d:	cmp    eax,DWORD PTR [rcx]
   14002117f:	add    BYTE PTR [rsi+0x3b],dh
   140021182:	add    DWORD PTR [rax],eax
   140021184:	cld    
   140021185:	mov    DWORD PTR [rcx],0x13b7600
   14002118b:	add    BYTE PTR [rcx-0x67fffec5],dl
   140021191:	retf   
   140021192:	add    DWORD PTR [rax],eax
   140021194:	xchg   ecx,eax
   140021195:	cmp    eax,DWORD PTR [rcx]
   140021197:	add    BYTE PTR [rbx+rdi*1-0x3467ffff],ch
   14002119e:	add    DWORD PTR [rax],eax
   1400211a0:	lods   al,BYTE PTR ds:[rsi]
   1400211a1:	cmp    eax,DWORD PTR [rcx]
   1400211a3:	add    ch,al
   1400211a5:	cmp    eax,DWORD PTR [rcx]
   1400211a7:	add    BYTE PTR [rax-0x3afffe35],bl
   1400211ad:	cmp    eax,DWORD PTR [rcx]
   1400211af:	add    dh,bl
   1400211b1:	cmp    eax,DWORD PTR [rcx]
   1400211b3:	add    BYTE PTR [rax-0x21fffe35],bl
   1400211b9:	cmp    eax,DWORD PTR [rcx]
   1400211bb:	add    bh,dh
   1400211bd:	cmp    eax,DWORD PTR [rcx]
   1400211bf:	add    BYTE PTR [rax-0x8fffe35],bl
   1400211c5:	cmp    eax,DWORD PTR [rcx]
   1400211c7:	add    BYTE PTR [rip+0xffffffff9800013c],cl        # 0xd8021309
   1400211cd:	retf   
   1400211ce:	add    DWORD PTR [rax],eax
   1400211d0:	or     eax,0x2a00013c
   1400211d5:	cmp    al,0x1
   1400211d7:	add    BYTE PTR [rax+0x2a0001cb],bl
   1400211dd:	cmp    al,0x1
   1400211df:	add    BYTE PTR [rbx+0x3c],al
   1400211e2:	add    DWORD PTR [rax],eax
   1400211e4:	cwde   
   1400211e5:	retf   
   1400211e6:	add    DWORD PTR [rax],eax
   1400211e8:	rex.XB cmp al,0x1
   1400211eb:	add    BYTE PTR [rbp+0x3c],bl
   1400211ee:	add    DWORD PTR [rax],eax
   1400211f0:	cwde   
   1400211f1:	retf   
   1400211f2:	add    DWORD PTR [rax],eax
   1400211f4:	pop    rbp
   1400211f5:	cmp    al,0x1
   1400211f7:	add    BYTE PTR [rsi+0x3c],dh
   1400211fa:	add    DWORD PTR [rax],eax
   1400211fc:	cwde   
   1400211fd:	retf   
   1400211fe:	add    DWORD PTR [rax],eax
   140021200:	jbe    0x14002123e
   140021202:	add    DWORD PTR [rax],eax
   140021204:	(bad)  
   140021205:	cmp    al,0x1
   140021207:	add    BYTE PTR [rax-0x70fffe35],bl
   14002120d:	cmp    al,0x1
   14002120f:	add    BYTE PTR [rcx-0x67fffec4],ch
   140021215:	retf   
   140021216:	add    DWORD PTR [rax],eax
   140021218:	test   eax,0xc200013c
   14002121d:	cmp    al,0x1
   14002121f:	add    BYTE PTR [rax-0x3dfffe35],bl
   140021225:	cmp    al,0x1
   140021227:	add    dh,ah
   140021229:	cmp    al,0x1
   14002122b:	add    BYTE PTR [rax-0x19fffe35],bl
   140021231:	cmp    al,0x1
   140021233:	add    dh,bh
   140021235:	cmp    al,0x1
   140021237:	add    BYTE PTR [rax-0x1fffe35],bl
   14002123d:	cmp    al,0x1
   14002123f:	add    BYTE PTR [rip+0xffffffff9800013d],dl        # 0xd8021382
   140021245:	retf   
   140021246:	add    DWORD PTR [rax],eax
   140021248:	adc    eax,0x2f00013d
   14002124d:	cmp    eax,0xcb980001
   140021252:	add    DWORD PTR [rax],eax
   140021254:	(bad)  
   140021255:	cmp    eax,0x3d5b0001
   14002125a:	add    DWORD PTR [rax],eax
   14002125c:	cwde   
   14002125d:	retf   
   14002125e:	add    DWORD PTR [rax],eax
   140021260:	(bad)  
   140021261:	cmp    eax,0x3d800001
   140021266:	add    DWORD PTR [rax],eax
   140021268:	cwde   
   140021269:	retf   
   14002126a:	add    DWORD PTR [rax],eax

Disassembly of section .gfids:

0000000140022000 <.gfids>:
   140022000:	cmp    al,0x7a
   140022002:	add    BYTE PTR [rax],al
   140022004:	sbb    BYTE PTR [rdx+0x0],bh
   140022007:	add    BYTE PTR [rax+0x7a],al
   14002200a:	add    BYTE PTR [rax],al
   14002200c:	cmp    al,0x7a
   14002200e:	add    BYTE PTR [rax],al
   140022010:	lods   al,BYTE PTR ds:[rsi]
   140022011:	jp     0x140022013
   140022013:	add    BYTE PTR [rdx+rdi*2],bh
   140022016:	add    BYTE PTR [rax],al
   140022018:	mov    DWORD PTR fs:[rax],0x7a3c00
   14002201f:	add    al,cl
   140022021:	jae    0x140022023
   140022023:	add    BYTE PTR [rcx+rdx*4],cl
   140022026:	add    BYTE PTR [rax],al
   140022028:	rcl    BYTE PTR [rax-0x61240000],1
   14002202e:	add    BYTE PTR [rax],al
   140022030:	movabs al,ds:0xbc00007aa400009e
   140022039:	fld    DWORD PTR [rax]
   14002203b:	add    BYTE PTR [rax-0x53ffff27],ah
   140022041:	lods   eax,DWORD PTR ds:[rsi]
   140022042:	add    BYTE PTR [rax],al
   140022044:	lods   rax,QWORD PTR ds:[rsi]
   140022046:	add    BYTE PTR [rax],al
   140022048:	cmp    al,0x7a
   14002204a:	add    BYTE PTR [rax],al
   14002204c:	cmp    al,0x7a
   14002204e:	add    BYTE PTR [rax],al
   140022050:	cld    
   140022051:	mov    eax,DWORD PTR [rax]
   140022053:	add    BYTE PTR [rbx+rcx*4],bh
   140022056:	add    BYTE PTR [rax],al
   140022058:	push   rax
   140022059:	jp     0x14002205b
   14002205b:	add    BYTE PTR [rdx+rdi*2],al
   14002205e:	add    BYTE PTR [rax],al
   140022060:	pop    rax
   140022061:	xor    eax,0x368c0000
   140022066:	add    BYTE PTR [rax],al
   140022068:	in     al,dx
   140022069:	fwait
   14002206a:	add    BYTE PTR [rax],al
   14002206c:	mov    esp,0xc0000ba
   140022071:	je     0x140022073
   140022073:	add    al,ch
   140022075:	(bad)  
   140022076:	add    DWORD PTR [rax],eax
   140022078:	mov    esp,0x10000124
   14002207d:	sub    eax,DWORD PTR [rcx]
   14002207f:	add    BYTE PTR [rdx],cl
   140022081:	add    BYTE PTR [rax],al
   140022083:	add    BYTE PTR [rip+0x10000000],cl        # 0x150022089
   140022089:	add    BYTE PTR [rax],al
   14002208b:	add    BYTE PTR [rbp+0x0],al
   14002208e:	add    BYTE PTR [rax],al
   140022090:	jb     0x140022092
   140022092:	add    BYTE PTR [rax],al
   140022094:	(bad)  
   140022095:	add    BYTE PTR [rax],al
   140022097:	add    BYTE PTR [rsi+0x0],cl
   14002209a:	add    BYTE PTR [rax],al
   14002209c:	push   rax
   14002209d:	add    BYTE PTR [rax],al
   14002209f:	add    BYTE PTR [rsi+0x0],cl
   1400220a2:	add    BYTE PTR [rax],al
   1400220a4:	push   rdi
   1400220a5:	add    BYTE PTR [rax],al
   1400220a7:	add    BYTE PTR [rsi+0x0],cl
   1400220aa:	add    BYTE PTR [rax],al
   1400220ac:	pop    rbp
   1400220ad:	add    BYTE PTR [rax],al
   1400220af:	add    BYTE PTR [rbx],cl
   1400220b1:	add    BYTE PTR [rax],al
   1400220b3:	add    BYTE PTR [rbx],dl
   1400220b5:	add    BYTE PTR [rax],al
   1400220b7:	add    BYTE PTR [rcx+0x0],bl
	...

Disassembly of section .rsrc:

0000000140023000 <.rsrc>:
	...
   14002300c:	add    BYTE PTR [rax],al
   14002300e:	add    DWORD PTR [rax],eax
   140023010:	sbb    BYTE PTR [rax],al
   140023012:	add    BYTE PTR [rax],al
   140023014:	sbb    BYTE PTR [rax],al
   140023016:	add    BYTE PTR [rax+0x0],al
	...
   140023024:	add    BYTE PTR [rax],al
   140023026:	add    DWORD PTR [rax],eax
   140023028:	add    DWORD PTR [rax],eax
   14002302a:	add    BYTE PTR [rax],al
   14002302c:	xor    BYTE PTR [rax],al
   14002302e:	add    BYTE PTR [rax+0x0],al
	...
   14002303c:	add    BYTE PTR [rax],al
   14002303e:	add    DWORD PTR [rax],eax
   140023040:	or     DWORD PTR [rax+rax*1],eax
   140023043:	add    BYTE PTR [rax+0x0],cl
   140023046:	add    BYTE PTR [rax],al
   140023048:	(bad)  
   140023049:	xor    BYTE PTR [rdx],al
   14002304b:	add    BYTE PTR [rsi],dh
   14002304d:	add    eax,DWORD PTR [rax]
	...
   14002305f:	add    bh,ch
   140023061:	mov    ebx,0x783f3cbf
   140023066:	ins    DWORD PTR es:[rdi],dx
   140023067:	ins    BYTE PTR es:[rdi],dx
   140023068:	and    BYTE PTR [rsi+0x65],dh
   14002306b:	jb     0x1400230e0
   14002306d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140023074:	xor    BYTE PTR [rdx],ah
   140023076:	and    BYTE PTR [rbp+0x6e],ah
   140023079:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002307c:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140023083:	rex.RX sub eax,0x73202238
   140023089:	je     0x1400230ec
   14002308b:	outs   dx,BYTE PTR ds:[rsi]
   14002308c:	fs (bad) 
   14002308e:	ins    BYTE PTR es:[rdi],dx
   14002308f:	outs   dx,DWORD PTR ds:[rsi]
   140023090:	outs   dx,BYTE PTR ds:[rsi]
   140023091:	gs cmp eax,0x73657922
   140023097:	and    bh,BYTE PTR [rdi]
   140023099:	ds or  eax,0x73613c0a
   14002309f:	jae    0x140023106
   1400230a1:	ins    DWORD PTR es:[rdi],dx
   1400230a2:	(bad)  
   1400230a3:	ins    BYTE PTR es:[rdi],dx
   1400230a4:	jns    0x1400230c6
   1400230a6:	js     0x140023115
   1400230a8:	ins    BYTE PTR es:[rdi],dx
   1400230a9:	outs   dx,BYTE PTR ds:[rsi]
   1400230aa:	jae    0x1400230e9
   1400230ac:	and    dh,BYTE PTR [rbp+0x72]
   1400230af:	outs   dx,BYTE PTR ds:[rsi]
   1400230b0:	cmp    dh,BYTE PTR [rbx+0x63]
   1400230b3:	push   0x73616d65
   1400230b8:	sub    eax,0x7263696d
   1400230bd:	outs   dx,DWORD PTR ds:[rsi]
   1400230be:	jae    0x14002312f
   1400230c0:	data16 je 0x1400230f0
   1400230c3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400230c6:	cmp    ah,BYTE PTR [rcx+0x73]
   1400230c9:	ins    DWORD PTR es:[rdi],dx
   1400230ca:	cs jbe 0x1400230fe
   1400230cd:	and    ah,BYTE PTR [rax]
   1400230cf:	ins    DWORD PTR es:[rdi],dx
   1400230d0:	(bad)  
   1400230d1:	outs   dx,BYTE PTR ds:[rsi]
   1400230d2:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400230d9:	jb     0x14002314e
   1400230db:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400230e2:	xor    BYTE PTR [rdx],ah
   1400230e4:	ds cmp al,0x74
   1400230e7:	jb     0x14002315e
   1400230e9:	jae    0x14002315f
   1400230eb:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400230ed:	outs   dx,WORD PTR ds:[rsi]
   1400230ef:	and    BYTE PTR [rax+0x6d],bh
   1400230f2:	ins    BYTE PTR es:[rdi],dx
   1400230f3:	outs   dx,BYTE PTR ds:[rsi]
   1400230f4:	jae    0x140023133
   1400230f6:	and    dh,BYTE PTR [rbp+0x72]
   1400230f9:	outs   dx,BYTE PTR ds:[rsi]
   1400230fa:	cmp    dh,BYTE PTR [rbx+0x63]
   1400230fd:	push   0x73616d65
   140023102:	sub    eax,0x7263696d
   140023107:	outs   dx,DWORD PTR ds:[rsi]
   140023108:	jae    0x140023179
   14002310a:	data16 je 0x14002313a
   14002310d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140023110:	cmp    ah,BYTE PTR [rcx+0x73]
   140023113:	ins    DWORD PTR es:[rdi],dx
   140023114:	cs jbe 0x14002314a
   140023117:	and    bh,BYTE PTR [rsi]
   140023119:	cmp    al,0x73
   14002311b:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14002311f:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x7165723c
   140023127:	jne    0x14002318e
   140023129:	jae    0x14002319f
   14002312b:	gs fs push rax
   14002312e:	jb     0x140023199
   140023130:	jbe    0x14002319b
   140023132:	ins    BYTE PTR es:[rdi],dx
   140023133:	gs addr32 gs jae 0x140023176
   140023138:	cmp    al,0x72
   14002313a:	gs jno 0x1400231b2
   14002313d:	gs jae 0x1400231b4
   140023140:	gs fs rex.RB js 0x1400231aa
   140023145:	movsxd esi,DWORD PTR [rbp+0x74]
   140023148:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14002314f:	ins    BYTE PTR es:[rdi],dx
   140023150:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140023154:	gs ins BYTE PTR es:[rdi],dx
   140023156:	cmp    eax,0x49736122
   14002315b:	outs   dx,BYTE PTR ds:[rsi]
   14002315c:	jbe    0x1400231cd
   14002315e:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140023162:	and    BYTE PTR [rbp+0x69],dh
   140023165:	movsxd esp,DWORD PTR [r11+0x65]
   140023169:	jae    0x1400231de
   14002316b:	cmp    eax,0x6c616622
   140023170:	jae    0x1400231d7
   140023172:	and    bh,BYTE PTR [rsi]
   140023174:	cmp    al,0x2f
   140023176:	jb     0x1400231dd
   140023178:	jno    0x1400231ef
   14002317a:	gs jae 0x1400231f1
   14002317d:	gs fs rex.RB js 0x1400231e7
   140023182:	movsxd esi,DWORD PTR [rbp+0x74]
   140023185:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14002318c:	ins    BYTE PTR es:[rdi],dx
   14002318d:	ds cmp al,0x2f
   140023190:	jb     0x1400231f7
   140023192:	jno    0x140023209
   140023194:	gs jae 0x14002320b
   140023197:	gs fs push rax
   14002319a:	jb     0x140023205
   14002319c:	jbe    0x140023207
   14002319e:	ins    BYTE PTR es:[rdi],dx
   14002319f:	gs addr32 gs jae 0x1400231e2
   1400231a4:	cmp    al,0x2f
   1400231a6:	jae    0x14002320d
   1400231a8:	movsxd esi,DWORD PTR [rbp+0x72]
   1400231ab:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x72742f3c
   1400231b3:	jne    0x140023228
   1400231b5:	je     0x140023200
   1400231b7:	outs   dx,BYTE PTR ds:[rsi]
   1400231b8:	outs   dx,WORD PTR ds:[rsi]
   1400231ba:	ds cmp al,0x63
   1400231bd:	outs   dx,DWORD PTR ds:[rsi]
   1400231be:	ins    DWORD PTR es:[rdi],dx
   1400231bf:	jo     0x140023222
   1400231c1:	je     0x14002322c
   1400231c3:	(bad)  
   1400231c4:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   1400231cc:	ins    BYTE PTR es:[rdi],dx
   1400231cd:	outs   dx,BYTE PTR ds:[rsi]
   1400231ce:	jae    0x14002320d
   1400231d0:	and    dh,BYTE PTR [rbp+0x72]
   1400231d3:	outs   dx,BYTE PTR ds:[rsi]
   1400231d4:	cmp    dh,BYTE PTR [rbx+0x63]
   1400231d7:	push   0x73616d65
   1400231dc:	sub    eax,0x7263696d
   1400231e1:	outs   dx,DWORD PTR ds:[rsi]
   1400231e2:	jae    0x140023253
   1400231e4:	data16 je 0x140023214
   1400231e7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400231ea:	cmp    ah,BYTE PTR [rbx+0x6f]
   1400231ed:	ins    DWORD PTR es:[rdi],dx
   1400231ee:	jo     0x140023251
   1400231f0:	je     0x14002325b
   1400231f2:	(bad)  
   1400231f3:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   1400231fb:	and    bh,BYTE PTR [rsi]
   1400231fd:	cmp    al,0x61
   1400231ff:	jo     0x140023271
   140023201:	ins    BYTE PTR es:[rdi],dx
   140023202:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140023209:	ds cmp al,0x73
   14002320c:	jne    0x14002327e
   14002320e:	jo     0x14002327f
   140023210:	jb     0x140023286
   140023212:	gs fs rex.WRXB push r11
   140023216:	and    BYTE PTR [rcx+0x64],cl
   140023219:	cmp    eax,0x32657b22
   14002321e:	xor    BYTE PTR [rcx],dh
   140023220:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   140023227:	xor    al,0x36
   140023229:	sub    eax,0x35633334
   14002322e:	sub    eax,0x65663561
   140023233:	sub    eax,0x64383030
   140023238:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   14002323f:	xor    BYTE PTR [rbp+0x22],bh
   140023242:	ds cmp al,0x2f
   140023245:	jae    0x1400232bc
   140023247:	jo     0x1400232b9
   140023249:	outs   dx,DWORD PTR ds:[rsi]
   14002324a:	jb     0x1400232c0
   14002324c:	gs fs rex.WRXB push r11
   140023250:	ds cmp al,0x73
   140023253:	jne    0x1400232c5
   140023255:	jo     0x1400232c6
   140023257:	jb     0x1400232cd
   140023259:	gs fs rex.WRXB push r11
   14002325d:	and    BYTE PTR [rcx+0x64],cl
   140023260:	cmp    eax,0x35337b22
   140023265:	xor    DWORD PTR [rbx],esi
   140023267:	cmp    BYTE PTR [rdx+0x39],ah
   14002326a:	(bad)  
   14002326b:	sub    eax,0x36396435
   140023270:	sub    eax,0x64626634
   140023275:	sub    eax,0x64326538
   14002327a:	sub    eax,0x34343261
   14002327f:	xor    BYTE PTR [rdx],dh
   140023281:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a1356bed
   140023287:	jge    0x1400232ab
   140023289:	ds cmp al,0x2f
   14002328c:	jae    0x140023303
   14002328e:	jo     0x140023300
   140023290:	outs   dx,DWORD PTR ds:[rsi]
   140023291:	jb     0x140023307
   140023293:	gs fs rex.WRXB push r11
   140023297:	ds cmp al,0x73
   14002329a:	jne    0x14002330c
   14002329c:	jo     0x14002330d
   14002329e:	jb     0x140023314
   1400232a0:	gs fs rex.WRXB push r11
   1400232a4:	and    BYTE PTR [rcx+0x64],cl
   1400232a7:	cmp    eax,0x61347b22
   1400232ac:	xor    ah,BYTE PTR [rsi+0x32]
   1400232af:	cmp    BYTE PTR [rbp+0x33],ah
   1400232b2:	sub    eax,0x39623335
   1400232b7:	sub    eax,0x31343434
   1400232bc:	sub    eax,0x63396162
   1400232c1:	sub    eax,0x64393664
   1400232c6:	xor    al,0x61
   1400232c8:	xor    al,0x61
   1400232ca:	ss xor edi,DWORD PTR gs:[rax]
   1400232ce:	jge    0x1400232f2
   1400232d0:	ds cmp al,0x2f
   1400232d3:	jae    0x14002334a
   1400232d5:	jo     0x140023347
   1400232d7:	outs   dx,DWORD PTR ds:[rsi]
   1400232d8:	jb     0x14002334e
   1400232da:	gs fs rex.WRXB push r11
   1400232de:	ds cmp al,0x73
   1400232e1:	jne    0x140023353
   1400232e3:	jo     0x140023354
   1400232e5:	jb     0x14002335b
   1400232e7:	gs fs rex.WRXB push r11
   1400232eb:	and    BYTE PTR [rcx+0x64],cl
   1400232ee:	cmp    eax,0x66317b22
   1400232f3:	ss (bad) 
   1400232f5:	movsxd esi,DWORD PTR ss:[rdi]
   1400232f8:	ss sub eax,0x31653038
   1400232fe:	sub    eax,0x39333234
   140023303:	sub    eax,0x62623539
   140023308:	sub    eax,0x30643338
   14002330d:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   140023314:	cmp    BYTE PTR [rbp+0x22],bh
   140023317:	ds cmp al,0x2f
   14002331a:	jae    0x140023391
   14002331c:	jo     0x14002338e
   14002331e:	outs   dx,DWORD PTR ds:[rsi]
   14002331f:	jb     0x140023395
   140023321:	gs fs rex.WRXB push r11
   140023325:	ds cmp al,0x73
   140023328:	jne    0x14002339a
   14002332a:	jo     0x14002339b
   14002332c:	jb     0x1400233a2
   14002332e:	gs fs rex.WRXB push r11
   140023332:	and    BYTE PTR [rcx+0x64],cl
   140023335:	cmp    eax,0x65387b22
   14002333a:	xor    BYTE PTR [rsi+0x37],ah
   14002333d:	(bad)  
   14002333e:	xor    DWORD PTR [rdx],esi
   140023340:	sub    eax,0x33626662
   140023345:	sub    eax,0x38656634
   14002334a:	sub    eax,0x35613962
   14002334f:	sub    eax,0x64663834
   140023354:	xor    eax,0x35316130
   140023359:	(bad)  
   14002335a:	cmp    DWORD PTR [rcx+0x7d],esp
   14002335d:	and    bh,BYTE PTR [rsi]
   14002335f:	cmp    al,0x2f
   140023361:	jae    0x1400233d8
   140023363:	jo     0x1400233d5
   140023365:	outs   dx,DWORD PTR ds:[rsi]
   140023366:	jb     0x1400233dc
   140023368:	gs fs rex.WRXB push r11
   14002336c:	ds cmp al,0x2f
   14002336f:	(bad)  
   140023370:	jo     0x1400233e2
   140023372:	ins    BYTE PTR es:[rdi],dx
   140023373:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14002337a:	ds cmp al,0x2f
   14002337d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140023380:	jo     0x1400233e3
   140023382:	je     0x1400233ed
   140023384:	(bad)  
   140023385:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x2f3c3e79
   14002338d:	(bad)  
   14002338e:	jae    0x140023403
   140023390:	gs ins DWORD PTR es:[rdi],dx
   140023392:	(bad)  
   140023393:	ins    BYTE PTR es:[rdi],dx
   140023394:	jns    0x1400233d4
	...

Disassembly of section .reloc:

0000000140024000 <.reloc>:
   140024000:	add    BYTE PTR [rax+0x1],al
   140024003:	add    BYTE PTR [rcx+rax*1],al
   140024006:	add    BYTE PTR [rax],al
   140024008:	pop    rax
   140024009:	movabs ds:0xa290a288a270a260,al
   140024012:	cwde   
   140024013:	movabs ds:0xa2c8a2c0a2a8a2a0,al
   14002401c:	shl    BYTE PTR [rdx-0x5a775a80],1
   140024022:	nop
   140024023:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024024:	mov    al,0xa5
   140024026:	mov    eax,0xd8a5c0a5
   14002402b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002402c:	loopne 0x140023fd3
   14002402e:	call   0x150a848d8
   140024033:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140024034:	(bad)  
   140024035:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140024036:	push   0x78a670a6
   14002403b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002403c:	mov    al,0xa7
   14002403e:	mov    eax,0xc8a7c0a7
   140024043:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024044:	shl    BYTE PTR [rdi-0x581f5828],1
   14002404a:	call   0x138aa30f6
   14002404f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024050:	add    BYTE PTR [rax-0x57ef57f8],ch
   140024056:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14002405c:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140024062:	rex.W test al,0x50
   140024065:	test   al,0x58
   140024067:	test   al,0x60
   140024069:	test   al,0x68
   14002406b:	test   al,0x70
   14002406d:	test   al,0x78
   14002406f:	test   al,0x80
   140024071:	test   al,0x88
   140024073:	test   al,0x90
   140024075:	test   al,0x98
   140024077:	test   al,0xa0
   140024079:	test   al,0xa8
   14002407b:	test   al,0xb0
   14002407d:	test   al,0xb8
   14002407f:	test   al,0xc0
   140024081:	test   al,0xc8
   140024083:	test   al,0xd0
   140024085:	test   al,0xd8
   140024087:	test   al,0xe0
   140024089:	test   al,0xe8
   14002408b:	test   al,0xf0
   14002408d:	test   al,0xf8
   14002408f:	test   al,0x0
   140024091:	test   eax,0xa910a908
   140024096:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14002409c:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400240a2:	test   rax,0xffffffffa958a950
   1400240a8:	(bad)  
   1400240a9:	test   eax,0xa970a968
   1400240ae:	js     0x140024059
   1400240b0:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400240b7:	test   eax,0xa9a8a9a0
   1400240bc:	mov    al,0xa9
   1400240be:	mov    eax,0xc8a9c0a9
   1400240c3:	test   eax,0xa9d8a9d0
   1400240c8:	loopne 0x140024073
   1400240ca:	call   0x138ac3178
   1400240cf:	test   eax,0xaa08aa00
   1400240d4:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400240da:	sub    BYTE PTR [rdx-0x55c755d0],ch
   1400240e0:	stos   BYTE PTR es:[rdi],al
   1400240e2:	rex.W stos BYTE PTR es:[rdi],al
   1400240e4:	push   rax
   1400240e5:	stos   BYTE PTR es:[rdi],al
   1400240e6:	pop    rax
   1400240e7:	stos   BYTE PTR es:[rdi],al
   1400240e8:	(bad)  
   1400240e9:	stos   BYTE PTR es:[rdi],al
   1400240ea:	push   0x78aa70aa
   1400240ef:	stos   BYTE PTR es:[rdi],al
   1400240f0:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400240f7:	stos   BYTE PTR es:[rdi],al
   1400240f8:	movabs al,ds:0xc0aab8aab0aaa8aa
   140024101:	stos   BYTE PTR es:[rdi],al
   140024102:	enter  0xaa,0x50
   140024106:	add    DWORD PTR [rax],eax
   140024108:	adc    BYTE PTR [rcx],al
   14002410a:	add    BYTE PTR [rax],al
   14002410c:	mov    al,0xa2
   14002410e:	shl    BYTE PTR [rdx-0x5d275d30],0xe0
   140024115:	movabs ds:0xa300a2f8a2f0a2e8,al
   14002411e:	or     BYTE PTR [rbx-0x5cdf5ce8],ah
   140024124:	sub    BYTE PTR [rbx-0x5cc75cd0],ah
   14002412a:	rex movabs ds:0xa378a368a350a348,eax
   140024134:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   14002413b:	movabs ds:0xa528a520a518a510,eax
   140024144:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14002414a:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14002414c:	push   rax
   14002414d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002414e:	pop    rax
   14002414f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024150:	(bad)  
   140024151:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024152:	push   0x78a570a5
   140024157:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024158:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   14002415f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024160:	movabs al,ds:0x60ab58ab50a5a8a5
   140024169:	stos   DWORD PTR es:[rdi],eax
   14002416a:	push   0x78ab70ab
   14002416f:	stos   DWORD PTR es:[rdi],eax
   140024170:	sub    BYTE PTR [rbx-0x546f5478],0x98
   140024177:	stos   DWORD PTR es:[rdi],eax
   140024178:	movabs al,ds:0xc0abb8abb0aba8ab
   140024181:	stos   DWORD PTR es:[rdi],eax
   140024182:	enter  0xd0ab,0xab
   140024186:	fsubr  DWORD PTR [rbx-0x54175420]
   14002418c:	lock stos DWORD PTR es:[rdi],eax
   14002418e:	clc    
   14002418f:	stos   DWORD PTR es:[rdi],eax
   140024190:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   140024197:	lods   al,BYTE PTR ds:[rsi]
   140024198:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14002419f:	lods   al,BYTE PTR ds:[rsi]
   1400241a0:	lods   al,BYTE PTR ds:[rsi]
   1400241a2:	rex.W lods al,BYTE PTR ds:[rsi]
   1400241a4:	push   rax
   1400241a5:	lods   al,BYTE PTR ds:[rsi]
   1400241a6:	pop    rax
   1400241a7:	lods   al,BYTE PTR ds:[rsi]
   1400241a8:	(bad)  
   1400241a9:	lods   al,BYTE PTR ds:[rsi]
   1400241aa:	push   0x78ac70ac
   1400241af:	lods   al,BYTE PTR ds:[rsi]
   1400241b0:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400241b8:	movabs al,ds:0xc8acc0acb8acb0ac
   1400241c1:	lods   al,BYTE PTR ds:[rsi]
   1400241c2:	shr    BYTE PTR [rax+rbx*8-0x17531f54],1
   1400241c9:	lods   al,BYTE PTR ds:[rsi]
   1400241ca:	lock lods al,BYTE PTR ds:[rsi]
   1400241cc:	clc    
   1400241cd:	lods   al,BYTE PTR ds:[rsi]
   1400241ce:	add    BYTE PTR [rbp-0x52ef52f8],ch
   1400241d4:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   1400241da:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   1400241e0:	lods   rax,QWORD PTR ds:[rsi]
   1400241e2:	push   rax
   1400241e3:	lods   eax,DWORD PTR ds:[rsi]
   1400241e4:	pop    rax
   1400241e5:	lods   eax,DWORD PTR ds:[rsi]
   1400241e6:	(bad)  
   1400241e7:	lods   eax,DWORD PTR ds:[rsi]
   1400241e8:	push   0x78ad70ad
   1400241ed:	lods   eax,DWORD PTR ds:[rsi]
   1400241ee:	sub    BYTE PTR [rbp-0x526f5278],0x98
   1400241f5:	lods   eax,DWORD PTR ds:[rsi]
   1400241f6:	movabs al,ds:0xc0adb8adb0ada8ad
   1400241ff:	lods   eax,DWORD PTR ds:[rsi]
   140024200:	enter  0xd0ad,0xad
   140024204:	fsubr  DWORD PTR [rbp-0x52175220]
   14002420a:	lock lods eax,DWORD PTR ds:[rsi]
   14002420c:	clc    
   14002420d:	lods   eax,DWORD PTR ds:[rsi]
   14002420e:	add    BYTE PTR [rsi+0xae08],ch
   140024214:	add    BYTE PTR [rax+0x1],ah
   140024217:	add    BYTE PTR [rax],cl
   140024219:	add    DWORD PTR [rax],eax
   14002421b:	add    al,dl
   14002421d:	movabs eax,ds:0xa848a1e8a1e0a1d8
   140024226:	pop    rax
   140024227:	test   al,0x68
   140024229:	test   al,0x78
   14002422b:	test   al,0x88
   14002422d:	test   al,0x98
   14002422f:	test   al,0xa8
   140024231:	test   al,0xb8
   140024233:	test   al,0xc8
   140024235:	test   al,0xd8
   140024237:	test   al,0xe8
   140024239:	test   al,0xf8
   14002423b:	test   al,0x8
   14002423d:	test   eax,0xa928a918
   140024242:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   140024248:	push   0xffffffff88a978a9
   14002424d:	test   eax,0xa9a8a998
   140024252:	mov    eax,0xd8a9c8a9
   140024257:	test   eax,0xa9f8a9e8
   14002425c:	or     BYTE PTR [rdx-0x55d755e8],ch
   140024262:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   140024268:	push   0xffffffff88aa78aa
   14002426d:	stos   BYTE PTR es:[rdi],al
   14002426e:	cwde   
   14002426f:	stos   BYTE PTR es:[rdi],al
   140024270:	test   al,0xaa
   140024272:	mov    eax,0xd8aac8aa
   140024277:	stos   BYTE PTR es:[rdi],al
   140024278:	call   0x148ad3b27
   14002427d:	stos   DWORD PTR es:[rdi],eax
   14002427e:	sbb    BYTE PTR [rbx-0x54c754d8],ch
   140024284:	stos   QWORD PTR es:[rdi],rax
   140024286:	pop    rax
   140024287:	stos   DWORD PTR es:[rdi],eax
   140024288:	push   0xffffffff88ab78ab
   14002428d:	stos   DWORD PTR es:[rdi],eax
   14002428e:	cwde   
   14002428f:	stos   DWORD PTR es:[rdi],eax
   140024290:	test   al,0xab
   140024292:	mov    eax,0xd8abc8ab
   140024297:	stos   DWORD PTR es:[rdi],eax
   140024298:	call   0x148ae3b48
   14002429d:	lods   al,BYTE PTR ds:[rsi]
   14002429e:	sbb    BYTE PTR [rax+rbp*1+0x48ac38ac],ch
   1400242a5:	lods   al,BYTE PTR ds:[rsi]
   1400242a6:	pop    rax
   1400242a7:	lods   al,BYTE PTR ds:[rsi]
   1400242a8:	push   0xffffffff88ac78ac
   1400242ad:	lods   al,BYTE PTR ds:[rsi]
   1400242ae:	cwde   
   1400242af:	lods   al,BYTE PTR ds:[rsi]
   1400242b0:	test   al,0xac
   1400242b2:	mov    eax,0xd8acc8ac
   1400242b7:	lods   al,BYTE PTR ds:[rsi]
   1400242b8:	call   0x148af3b69
   1400242bd:	lods   eax,DWORD PTR ds:[rsi]
   1400242be:	sbb    BYTE PTR [rbp-0x52c752d8],ch
   1400242c4:	lods   rax,QWORD PTR ds:[rsi]
   1400242c6:	pop    rax
   1400242c7:	lods   eax,DWORD PTR ds:[rsi]
   1400242c8:	push   0xffffffff88ad78ad
   1400242cd:	lods   eax,DWORD PTR ds:[rsi]
   1400242ce:	cwde   
   1400242cf:	lods   eax,DWORD PTR ds:[rsi]
   1400242d0:	test   al,0xad
   1400242d2:	mov    eax,0xd8adc8ad
   1400242d7:	lods   eax,DWORD PTR ds:[rsi]
   1400242d8:	call   0x148b03b8a
   1400242dd:	scas   al,BYTE PTR es:[rdi]
   1400242de:	sbb    BYTE PTR [rsi-0x51c751d8],ch
   1400242e4:	rex.W scas al,BYTE PTR es:[rdi]
   1400242e6:	pop    rax
   1400242e7:	scas   al,BYTE PTR es:[rdi]
   1400242e8:	push   0xffffffff88ae78ae
   1400242ed:	scas   al,BYTE PTR es:[rdi]
   1400242ee:	cwde   
   1400242ef:	scas   al,BYTE PTR es:[rdi]
   1400242f0:	test   al,0xae
   1400242f2:	mov    eax,0xd8aec8ae
   1400242f7:	scas   al,BYTE PTR es:[rdi]
   1400242f8:	call   0x148b13bab
   1400242fd:	scas   eax,DWORD PTR es:[rdi]
   1400242fe:	sbb    BYTE PTR [rdi-0x50c750d8],ch
   140024304:	scas   rax,QWORD PTR es:[rdi]
   140024306:	pop    rax
   140024307:	scas   eax,DWORD PTR es:[rdi]
   140024308:	push   0xffffffff88af78af
   14002430d:	scas   eax,DWORD PTR es:[rdi]
   14002430e:	cwde   
   14002430f:	scas   eax,DWORD PTR es:[rdi]
   140024310:	test   al,0xaf
   140024312:	mov    eax,0xd8afc8af
   140024317:	scas   eax,DWORD PTR es:[rdi]
   140024318:	call   0x140b23bcc
   14002431d:	jo     0x140024320
   14002431f:	add    al,bl
   140024321:	add    BYTE PTR [rax],al
   140024323:	add    BYTE PTR [rax],cl
   140024325:	movabs al,ds:0xa048a038a028a018
   14002432e:	pop    rax
   14002432f:	movabs al,ds:0xa098a088a078a068
   140024338:	test   al,0xa0
   14002433a:	mov    eax,0xd8a0c8a0
   14002433f:	movabs al,ds:0xa118a108a0f8a0e8
   140024348:	sub    BYTE PTR [rcx-0x5eb75ec8],ah
   14002434e:	pop    rax
   14002434f:	movabs eax,ds:0xa198a188a178a168
   140024358:	test   al,0xa1
   14002435a:	mov    eax,0xd8a1c8a1
   14002435f:	movabs eax,ds:0xa218a208a1f8a1e8
   140024368:	sub    BYTE PTR [rdx-0x5db75dc8],ah
   14002436e:	pop    rax
   14002436f:	movabs ds:0xa298a288a278a268,al
   140024378:	test   al,0xa2
   14002437a:	mov    eax,0xd8a2c8a2
   14002437f:	movabs ds:0xa318a308a2f8a2e8,al
   140024388:	sub    BYTE PTR [rbx-0x5cb75cc8],ah
   14002438e:	pop    rax
   14002438f:	movabs ds:0xa398a388a378a368,eax
   140024398:	test   al,0xa3
   14002439a:	mov    eax,0xd8a3c8a3
   14002439f:	movabs ds:0xa418a408a3f8a3e8,eax
   1400243a8:	sub    BYTE PTR [rax+rdi*1+0x58a448a4],ah
   1400243af:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400243b0:	push   0xffffffff88a478a4
   1400243b5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400243b6:	cwde   
   1400243b7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400243b8:	test   al,0xa4
   1400243ba:	mov    eax,0xd8a4c8a4
   1400243bf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400243c0:	call   0x148a73c69
   1400243c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400243c6:	sbb    BYTE PTR [rbp-0x5ac75ad8],ah
   1400243cc:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400243ce:	pop    rax
   1400243cf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400243d0:	push   0xffffffff88a578a5
   1400243d5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400243d6:	cwde   
   1400243d7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400243d8:	test   al,0xa5
   1400243da:	mov    eax,0xd8a5c8a5
   1400243df:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400243e0:	call   0x148a83c8a
   1400243e5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400243e6:	sbb    BYTE PTR [rsi-0x59c759d8],ah
   1400243ec:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400243ee:	pop    rax
   1400243ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400243f0:	push   0xa678a6
   1400243f5:	add    BYTE PTR [rcx],0x0
   1400243f8:	mov    ah,0x1
   1400243fa:	add    BYTE PTR [rax],al
   1400243fc:	movabs al,ds:0xe0a2d0a2c0a2b0a2
   140024405:	movabs ds:0xa320a310a300a2f0,al
   14002440e:	xor    BYTE PTR [rbx-0x5caf5cc0],ah
   140024414:	(bad)  
   140024415:	movabs ds:0xa3a0a390a380a370,eax
   14002441e:	mov    al,0xa3
   140024420:	shl    BYTE PTR [rbx-0x5c1f5c30],0xf0
   140024427:	movabs ds:0xa430a420a410a400,eax
   140024430:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140024432:	push   rax
   140024433:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140024434:	(bad)  
   140024435:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140024436:	jo     0x1400243dc
   140024438:	and    BYTE PTR [rax+rdx*4-0x4f5b5f5c],0xa4
   140024440:	shl    BYTE PTR [rax+rdx*8-0xf5b1f5c],0xa4
   140024448:	add    BYTE PTR [rbp-0x5adf5af0],ah
   14002444e:	xor    BYTE PTR [rbp-0x5aaf5ac0],ah
   140024454:	(bad)  
   140024455:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024456:	jo     0x1400243fd
   140024458:	and    BYTE PTR [rbp-0x5a5f5a70],0xb0
   14002445f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024460:	shl    BYTE PTR [rbp-0x5a1f5a30],0xf0
   140024467:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024468:	add    BYTE PTR [rsi-0x59df59f0],ah
   14002446e:	xor    BYTE PTR [rsi-0x59af59c0],ah
   140024474:	(bad)  
   140024475:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140024476:	jo     0x14002441e
   140024478:	and    BYTE PTR [rsi-0x595f5970],0xb0
   14002447f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140024480:	shl    BYTE PTR [rsi-0x591f5930],0xf0
   140024487:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140024488:	add    BYTE PTR [rdi-0x58df58f0],ah
   14002448e:	xor    BYTE PTR [rdi-0x58af58c0],ah
   140024494:	(bad)  
   140024495:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024496:	jo     0x14002443f
   140024498:	and    BYTE PTR [rdi-0x585f5870],0xb0
   14002449f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400244a0:	shl    BYTE PTR [rdi-0x581f5830],0xf0
   1400244a7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400244a8:	add    BYTE PTR [rax-0x57df57f0],ch
   1400244ae:	xor    BYTE PTR [rax-0x57af57c0],ch
   1400244b4:	(bad)  
   1400244b5:	test   al,0x70
   1400244b7:	test   al,0x80
   1400244b9:	test   al,0x90
   1400244bb:	test   al,0xa0
   1400244bd:	test   al,0xb0
   1400244bf:	test   al,0xc0
   1400244c1:	test   al,0xd0
   1400244c3:	test   al,0xe0
   1400244c5:	test   al,0xf0
   1400244c7:	test   al,0x0
   1400244c9:	test   eax,0xa920a910
   1400244ce:	xor    BYTE PTR [rcx-0x56af56c0],ch
   1400244d4:	(bad)  
   1400244d5:	test   eax,0xa980a970
   1400244da:	nop
   1400244db:	test   eax,0xa9b0a9a0
   1400244e0:	shr    BYTE PTR [rcx-0x561f5630],0xf0
   1400244e7:	test   eax,0xaa10aa00
   1400244ec:	and    BYTE PTR [rdx-0x55bf55d0],ch
   1400244f2:	push   rax
   1400244f3:	stos   BYTE PTR es:[rdi],al
   1400244f4:	(bad)  
   1400244f5:	stos   BYTE PTR es:[rdi],al
   1400244f6:	jo     0x1400244a2
   1400244f8:	sub    BYTE PTR [rdx-0x555f5570],0xb0
   1400244ff:	stos   BYTE PTR es:[rdi],al
   140024500:	shr    BYTE PTR [rdx-0x551f5530],0xf0
   140024507:	stos   BYTE PTR es:[rdi],al
   140024508:	add    BYTE PTR [rbx-0x54df54f0],ch
   14002450e:	xor    BYTE PTR [rbx-0x54af54c0],ch
   140024514:	(bad)  
   140024515:	stos   DWORD PTR es:[rdi],eax
   140024516:	jo     0x1400244c3
   140024518:	sub    BYTE PTR [rbx-0x545f5470],0xb0
   14002451f:	stos   DWORD PTR es:[rdi],eax
   140024520:	shr    BYTE PTR [rbx-0x541f5430],0xf0
   140024527:	stos   DWORD PTR es:[rdi],eax
   140024528:	add    BYTE PTR [rax+rdx*1+0x30ac20ac],ch
   14002452f:	lods   al,BYTE PTR ds:[rsi]
   140024530:	lods   al,BYTE PTR ds:[rsi]
   140024532:	push   rax
   140024533:	lods   al,BYTE PTR ds:[rsi]
   140024534:	(bad)  
   140024535:	lods   al,BYTE PTR ds:[rsi]
   140024536:	jo     0x1400244e4
   140024538:	sub    BYTE PTR [rax+rdx*4-0x4f535f54],0xac
   140024540:	shr    BYTE PTR [rax+rdx*8-0xf531f54],0xac
   140024548:	add    BYTE PTR [rbp-0x52df52f0],ch
   14002454e:	xor    BYTE PTR [rbp-0x52af52c0],ch
   140024554:	(bad)  
   140024555:	lods   eax,DWORD PTR ds:[rsi]
   140024556:	jo     0x140024505
   140024558:	sub    BYTE PTR [rbp-0x525f5270],0xb0
   14002455f:	lods   eax,DWORD PTR ds:[rsi]
   140024560:	shr    BYTE PTR [rbp-0x521f5230],0xf0
   140024567:	lods   eax,DWORD PTR ds:[rsi]
   140024568:	add    BYTE PTR [rsi-0x51df51f0],ch
   14002456e:	xor    BYTE PTR [rsi-0x51af51c0],ch
   140024574:	(bad)  
   140024575:	scas   al,BYTE PTR es:[rdi]
   140024576:	jo     0x140024526
   140024578:	sub    BYTE PTR [rsi-0x515f5170],0xb0
   14002457f:	scas   al,BYTE PTR es:[rdi]
   140024580:	shr    BYTE PTR [rsi-0x511f5130],0xf0
   140024587:	scas   al,BYTE PTR es:[rdi]
   140024588:	add    BYTE PTR [rdi-0x50df50f0],ch
   14002458e:	xor    BYTE PTR [rdi-0x50af50c0],ch
   140024594:	(bad)  
   140024595:	scas   eax,DWORD PTR es:[rdi]
   140024596:	jo     0x140024547
   140024598:	sub    BYTE PTR [rdi-0x505f5070],0xb0
   14002459f:	scas   eax,DWORD PTR es:[rdi]
   1400245a0:	shr    BYTE PTR [rdi-0x501f5030],0xf0
   1400245a7:	scas   eax,DWORD PTR es:[rdi]
   1400245a8:	add    BYTE PTR [rax+0x240001],dl
   1400245ae:	add    BYTE PTR [rax],al
   1400245b0:	add    BYTE PTR [rax-0x5fdf5ff0],ah
   1400245b6:	xor    BYTE PTR [rax-0x5faf5fc0],ah
   1400245bc:	(bad)  
   1400245bd:	movabs al,ds:0xa0a0a090a080a070
   1400245c6:	mov    al,0xa0
   1400245c8:	shl    BYTE PTR [rax-0x4fff5f30],0x1
   1400245cf:	add    BYTE PTR [rax+rax*1],cl
   1400245d2:	add    BYTE PTR [rax],al
   1400245d4:	lock scas eax,DWORD PTR es:[rdi]
   1400245d6:	clc    
   1400245d7:	scas   eax,DWORD PTR es:[rdi]
   1400245d8:	add    al,al
   1400245da:	add    DWORD PTR [rax],eax
   1400245dc:	adc    BYTE PTR [rax],al
   1400245de:	add    BYTE PTR [rax],al
   1400245e0:	mov    eax,0xd8a0d0a0
   1400245e5:	movabs al,ds:0x500001e0000000
   1400245ee:	add    BYTE PTR [rax],al
   1400245f0:	mov    al,0xa1
   1400245f2:	clc    
   1400245f3:	movabs eax,ds:0xa278a258a238a218
   1400245fc:	test   al,0xa2
   1400245fe:	shl    BYTE PTR [rdx-0x5d2f5d38],0x8
   140024605:	movabs ds:0xa868a860a548a310,eax
   14002460e:	jo     0x1400245b8
   140024610:	js     0x1400245ba
   140024612:	sub    BYTE PTR [rax-0x576f5778],0x98
   140024619:	test   al,0xa0
   14002461b:	test   al,0xa8
   14002461d:	test   al,0xb8
   14002461f:	test   al,0xc0
   140024621:	test   al,0xc8
   140024623:	test   al,0xd0
   140024625:	test   al,0xd8
   140024627:	test   al,0xe0
   140024629:	test   al,0xe8
   14002462b:	test   al,0xf0
   14002462d:	test   al,0x40
   14002462f:	test   eax,0xa990a968
   140024634:	.byte 0xc0
   140024635:	.byte 0xa9
	...
