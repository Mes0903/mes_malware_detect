
c4617cd94408d13e68d3dd75920911a56a1b1bae0fb19c035b156ec4a3cdefd5.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x24c65]        # 0x425c80
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x24c66]        # 0x425c90
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x24c69]        # 0x425ca0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x24c2c]        # 0x425c70
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x24a8f]        # 0x425ae0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x24c01]        # 0x425c60
  40105f:	mov    DWORD PTR [rip+0x27fa3],edx        # 0x429008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x419968
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x412a80
  401081:	mov    rdx,QWORD PTR [rip+0x24af8]        # 0x425b80
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x24ade]        # 0x425b70
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x24b54]        # 0x425bf0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x24a7b]        # 0x425b20
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x412660
  4010af:	mov    rax,QWORD PTR [rip+0x249da]        # 0x425a90
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x419968
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x11839]        # 0x412960
  401127:	call   0x412950
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x24ab5]        # 0x425c20
  40116b:	lea    r8,[rip+0x27ea6]        # 0x429018
  401172:	lea    rdx,[rip+0x27ea7]        # 0x429020
  401179:	lea    rcx,[rip+0x27ea8]        # 0x429028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x27e78],eax        # 0x429000
  401188:	lea    rax,[rip+0x27e71]        # 0x429000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x24a45]        # 0x425be0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x419980
  4011a3:	mov    DWORD PTR [rip+0x27e67],eax        # 0x429010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x24a9a]        # 0x425c60
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x2495b]        # 0x425b50
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x2a87a]        # 0x42ba7c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x24937]        # 0x425b60
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x27dba],0x1        # 0x429004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x2486c]        # 0x425ad0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x412c70
  40127d:	lea    rcx,[rip+0x11f8c]        # 0x413210
  401284:	call   QWORD PTR [rip+0x2a7ea]        # 0x42ba74
  40128a:	mov    rdx,QWORD PTR [rip+0x248af]        # 0x425b40
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x413120
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4199b0
  4012a5:	call   0x412a60
  4012aa:	mov    rax,QWORD PTR [rip+0x2482f]        # 0x425ae0
  4012b1:	mov    QWORD PTR [rip+0x29540],rax        # 0x42a7f8
  4012b8:	mov    rax,QWORD PTR [rip+0x24851]        # 0x425b10
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x294d9],rax        # 0x42a7f0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1bcca],eax        # 0x41d000
  401336:	mov    r12d,DWORD PTR [rip+0x27ceb]        # 0x429028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x419888
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x27cc2]        # 0x429020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x419840
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x419888
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x419880
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x27c6a],rbp        # 0x429020
  4013b6:	call   0x412630
  4013bb:	mov    rax,QWORD PTR [rip+0x2472e]        # 0x425af0
  4013c2:	mov    rdx,QWORD PTR [rip+0x27c4f]        # 0x429018
  4013c9:	mov    ecx,DWORD PTR [rip+0x27c59]        # 0x429028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x27c3c]        # 0x429018
  4013dc:	mov    rdx,QWORD PTR [rip+0x27c3d]        # 0x429020
  4013e3:	call   0x419e60
  4013e8:	mov    ecx,DWORD PTR [rip+0x27c1a]        # 0x429008
  4013ee:	mov    DWORD PTR [rip+0x27c18],eax        # 0x42900c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x27c02]        # 0x429004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x419950
  40140b:	mov    eax,DWORD PTR [rip+0x27bfb]        # 0x42900c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x24729]        # 0x425b60
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x419958
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2474d]        # 0x425bb0
  401463:	mov    rcx,QWORD PTR [rip+0x24736]        # 0x425ba0
  40146a:	call   0x419940
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x2a56b]        # 0x42ba04
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x24729]        # 0x425bd0
  4014a7:	mov    rcx,QWORD PTR [rip+0x24712]        # 0x425bc0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x419940
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x419900
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x24785]        # 0x425c60
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x412670
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x24755]        # 0x425c60
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x412670
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x28
  401536:	mov    rbx,r8
  401539:	mov    rsi,r9
  40153c:	call   QWORD PTR [rip+0x2a5a2]        # 0x42bae4
  401542:	lea    rcx,[rax+0x30]
  401546:	mov    r8,rsi
  401549:	mov    rdx,rbx
  40154c:	add    rsp,0x28
  401550:	pop    rbx
  401551:	pop    rsi
  401552:	jmp    0x413ed0
  401557:	nop    WORD PTR [rax+rax*1+0x0]
  401560:	sub    rsp,0x38
  401564:	mov    QWORD PTR [rsp+0x48],rdx
  401569:	lea    rdx,[rsp+0x48]
  40156e:	mov    QWORD PTR [rsp+0x50],r8
  401573:	mov    QWORD PTR [rsp+0x58],r9
  401578:	mov    QWORD PTR [rsp+0x28],rdx
  40157d:	call   0x413f00
  401582:	add    rsp,0x38
  401586:	ret    
  401587:	nop    WORD PTR [rax+rax*1+0x0]
  401590:	sub    rsp,0x38
  401594:	mov    QWORD PTR [rsp+0x50],r8
  401599:	lea    r8,[rsp+0x50]
  40159e:	mov    QWORD PTR [rsp+0x58],r9
  4015a3:	mov    QWORD PTR [rsp+0x28],r8
  4015a8:	call   0x413ed0
  4015ad:	add    rsp,0x38
  4015b1:	ret    
  4015b2:	nop    DWORD PTR [rax+0x0]
  4015b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015c0:	mov    rcx,QWORD PTR [rcx]
  4015c3:	mov    r8,QWORD PTR [rdx]
  4015c6:	mov    eax,DWORD PTR [rcx+0x4]
  4015c9:	mov    edx,DWORD PTR [r8+0x4]
  4015cd:	cmp    eax,edx
  4015cf:	je     0x4015d4
  4015d1:	sub    eax,edx
  4015d3:	ret    
  4015d4:	mov    rdx,QWORD PTR [r8+0x8]
  4015d8:	mov    rcx,QWORD PTR [rcx+0x8]
  4015dc:	jmp    0x419858
  4015e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4015e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015f0:	push   r12
  4015f2:	push   rbp
  4015f3:	push   rdi
  4015f4:	push   rsi
  4015f5:	push   rbx
  4015f6:	sub    rsp,0x440
  4015fd:	mov    ebx,edx
  4015ff:	mov    rsi,rcx
  401602:	mov    rdi,r8
  401605:	mov    rbp,r9
  401608:	lea    r12,[rsp+0x40]
  40160d:	call   0x412300
  401612:	lea    rax,[rip+0x1bab7]        # 0x41d0d0
  401619:	mov    DWORD PTR [rsp+0x28],0x400
  401621:	mov    QWORD PTR [rsp+0x20],r12
  401626:	mov    r9,rbp
  401629:	mov    r8,rdi
  40162c:	mov    edx,ebx
  40162e:	mov    QWORD PTR [rsp+0x30],rax
  401633:	mov    rcx,rsi
  401636:	call   0x4122f8
  40163b:	cmp    ebx,DWORD PTR [rip+0x1ba93]        # 0x41d0d4
  401641:	jg     0x40165f
  401643:	mov    rdx,QWORD PTR [rip+0x27a06]        # 0x429050
  40164a:	mov    rcx,r12
  40164d:	call   0x4198d8
  401652:	mov    rcx,QWORD PTR [rip+0x279f7]        # 0x429050
  401659:	call   0x4198f8
  40165e:	nop
  40165f:	add    rsp,0x440
  401666:	pop    rbx
  401667:	pop    rsi
  401668:	pop    rdi
  401669:	pop    rbp
  40166a:	pop    r12
  40166c:	ret    
  40166d:	nop    DWORD PTR [rax]
  401670:	sub    rsp,0x38
  401674:	mov    QWORD PTR [rsp+0x58],r9
  401679:	lea    r9,[rsp+0x58]
  40167e:	mov    QWORD PTR [rsp+0x28],r9
  401683:	call   0x413f40
  401688:	add    rsp,0x38
  40168c:	ret    
  40168d:	nop    DWORD PTR [rax]
  401690:	push   r13
  401692:	push   r12
  401694:	push   rbp
  401695:	push   rdi
  401696:	push   rsi
  401697:	push   rbx
  401698:	sub    rsp,0x38
  40169c:	test   rcx,rcx
  40169f:	mov    QWORD PTR [rsp+0x28],0x0
  4016a8:	je     0x4017be
  4016ae:	mov    rax,QWORD PTR [rcx+0x28]
  4016b2:	test   rax,rax
  4016b5:	je     0x4017be
  4016bb:	mov    r8d,DWORD PTR [rax+0x38]
  4016bf:	mov    eax,r8d
  4016c2:	and    eax,0xfffffffd
  4016c5:	cmp    eax,0x29
  4016c8:	je     0x4016d9
  4016ca:	cmp    r8d,0x2d
  4016ce:	mov    eax,0xffffffea
  4016d3:	jne    0x401780
  4016d9:	mov    rsi,rdx
  4016dc:	mov    rdx,QWORD PTR [rcx]
  4016df:	mov    rbx,rcx
  4016e2:	lea    rcx,[rip+0x1d91f]        # 0x41f008
  4016e9:	call   0x401560
  4016ee:	cmp    QWORD PTR [rbx+0x90],0x0
  4016f6:	je     0x401790
  4016fc:	lea    r13,[rsp+0x28]
  401701:	xor    edx,edx
  401703:	mov    r8,rsi
  401706:	mov    rcx,rbx
  401709:	mov    r9,r13
  40170c:	call   0x411f58
  401711:	test   eax,eax
  401713:	mov    r12d,eax
  401716:	js     0x4017b0
  40171c:	mov    rdx,QWORD PTR [rsp+0x28]
  401721:	xor    esi,esi
  401723:	xor    ebx,ebx
  401725:	lea    rbp,[rip+0x1d8d4]        # 0x41f000
  40172c:	lea    rdi,[rip+0x1d8cf]        # 0x41f002
  401733:	mov    eax,DWORD PTR [rdx+0x8]
  401736:	test   eax,eax
  401738:	jle    0x401775
  40173a:	nop    WORD PTR [rax+rax*1+0x0]
  401740:	mov    rax,QWORD PTR [rdx]
  401743:	cmp    DWORD PTR [rdx+0xc],ebx
  401746:	lea    rcx,[rip+0x1d918]        # 0x41f065
  40174d:	mov    rdx,rdi
  401750:	mov    r8,QWORD PTR [rax+rsi*1]
  401754:	cmove  rdx,rbp
  401758:	add    ebx,0x1
  40175b:	add    rsi,0x8
  40175f:	mov    r9,QWORD PTR [r8+0x8]
  401763:	mov    r8,QWORD PTR [r8]
  401766:	call   0x401560
  40176b:	mov    rdx,QWORD PTR [rsp+0x28]
  401770:	cmp    DWORD PTR [rdx+0x8],ebx
  401773:	jg     0x401740
  401775:	mov    rcx,r13
  401778:	call   0x411f60
  40177d:	mov    eax,r12d
  401780:	add    rsp,0x38
  401784:	pop    rbx
  401785:	pop    rsi
  401786:	pop    rdi
  401787:	pop    rbp
  401788:	pop    r12
  40178a:	pop    r13
  40178c:	ret    
  40178d:	nop    DWORD PTR [rax]
  401790:	lea    rcx,[rip+0x1d891]        # 0x41f028
  401797:	mov    r12d,0xffffffd8
  40179d:	lea    r13,[rsp+0x28]
  4017a2:	call   0x401560
  4017a7:	jmp    0x401775
  4017a9:	nop    DWORD PTR [rax+0x0]
  4017b0:	lea    rcx,[rip+0x1d898]        # 0x41f04f
  4017b7:	call   0x401560
  4017bc:	jmp    0x401775
  4017be:	mov    eax,0xffffffea
  4017c3:	jmp    0x401780
  4017c5:	nop
  4017c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017d0:	push   r13
  4017d2:	push   r12
  4017d4:	push   rbp
  4017d5:	push   rdi
  4017d6:	push   rsi
  4017d7:	push   rbx
  4017d8:	sub    rsp,0x38
  4017dc:	test   rcx,rcx
  4017df:	mov    QWORD PTR [rsp+0x28],0x0
  4017e8:	je     0x4018fe
  4017ee:	mov    rax,QWORD PTR [rcx+0x38]
  4017f2:	test   rax,rax
  4017f5:	je     0x4018fe
  4017fb:	mov    r8d,DWORD PTR [rax+0x38]
  4017ff:	mov    eax,r8d
  401802:	and    eax,0xfffffffd
  401805:	cmp    eax,0x28
  401808:	je     0x401819
  40180a:	cmp    r8d,0x2c
  40180e:	mov    eax,0xffffffea
  401813:	jne    0x4018c0
  401819:	mov    rsi,rdx
  40181c:	mov    rdx,QWORD PTR [rcx]
  40181f:	mov    rbx,rcx
  401822:	lea    rcx,[rip+0x1d848]        # 0x41f071
  401829:	call   0x401560
  40182e:	cmp    QWORD PTR [rbx+0x90],0x0
  401836:	je     0x4018d0
  40183c:	lea    r13,[rsp+0x28]
  401841:	xor    edx,edx
  401843:	mov    r8,rsi
  401846:	mov    rcx,rbx
  401849:	mov    r9,r13
  40184c:	call   0x411f50
  401851:	test   eax,eax
  401853:	mov    r12d,eax
  401856:	js     0x4018f0
  40185c:	mov    rdx,QWORD PTR [rsp+0x28]
  401861:	xor    esi,esi
  401863:	xor    ebx,ebx
  401865:	lea    rbp,[rip+0x1d794]        # 0x41f000
  40186c:	lea    rdi,[rip+0x1d78f]        # 0x41f002
  401873:	mov    eax,DWORD PTR [rdx+0x8]
  401876:	test   eax,eax
  401878:	jle    0x4018b5
  40187a:	nop    WORD PTR [rax+rax*1+0x0]
  401880:	mov    rax,QWORD PTR [rdx]
  401883:	cmp    DWORD PTR [rdx+0xc],ebx
  401886:	lea    rcx,[rip+0x1d7d8]        # 0x41f065
  40188d:	mov    rdx,rdi
  401890:	mov    r8,QWORD PTR [rax+rsi*1]
  401894:	cmove  rdx,rbp
  401898:	add    ebx,0x1
  40189b:	add    rsi,0x8
  40189f:	mov    r9,QWORD PTR [r8+0x8]
  4018a3:	mov    r8,QWORD PTR [r8]
  4018a6:	call   0x401560
  4018ab:	mov    rdx,QWORD PTR [rsp+0x28]
  4018b0:	cmp    DWORD PTR [rdx+0x8],ebx
  4018b3:	jg     0x401880
  4018b5:	mov    rcx,r13
  4018b8:	call   0x411f60
  4018bd:	mov    eax,r12d
  4018c0:	add    rsp,0x38
  4018c4:	pop    rbx
  4018c5:	pop    rsi
  4018c6:	pop    rdi
  4018c7:	pop    rbp
  4018c8:	pop    r12
  4018ca:	pop    r13
  4018cc:	ret    
  4018cd:	nop    DWORD PTR [rax]
  4018d0:	lea    rcx,[rip+0x1d7b9]        # 0x41f090
  4018d7:	mov    r12d,0xffffffd8
  4018dd:	lea    r13,[rsp+0x28]
  4018e2:	call   0x401560
  4018e7:	jmp    0x4018b5
  4018e9:	nop    DWORD PTR [rax+0x0]
  4018f0:	lea    rcx,[rip+0x1d7be]        # 0x41f0b5
  4018f7:	call   0x401560
  4018fc:	jmp    0x4018b5
  4018fe:	mov    eax,0xffffffea
  401903:	jmp    0x4018c0
  401905:	nop
  401906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401910:	push   r15
  401912:	push   r14
  401914:	push   r13
  401916:	push   r12
  401918:	push   rbp
  401919:	push   rdi
  40191a:	push   rsi
  40191b:	push   rbx
  40191c:	sub    rsp,0x58
  401920:	mov    DWORD PTR [rip+0x2770e],0x0        # 0x429038
  40192a:	mov    QWORD PTR [rsp+0x40],rcx
  40192f:	mov    QWORD PTR [rsp+0x48],rdx
  401934:	call   QWORD PTR [rip+0x2a082]        # 0x42b9bc
  40193a:	lea    rdx,[rip+0x276f7]        # 0x429038
  401941:	mov    rcx,rax
  401944:	call   QWORD PTR [rip+0x2a33a]        # 0x42bc84
  40194a:	test   rax,rax
  40194d:	mov    r12,rax
  401950:	je     0x401a9a
  401956:	mov    eax,DWORD PTR [rip+0x276dc]        # 0x429038
  40195c:	test   eax,eax
  40195e:	jle    0x401a9a
  401964:	mov    rdi,QWORD PTR [rip+0x2a141]        # 0x42baac
  40196b:	mov    rbp,r12
  40196e:	xor    esi,esi
  401970:	xor    ebx,ebx
  401972:	mov    QWORD PTR [rsp+0x38],0x0
  40197b:	mov    QWORD PTR [rsp+0x30],0x0
  401984:	xor    edx,edx
  401986:	mov    DWORD PTR [rsp+0x28],0x0
  40198e:	mov    QWORD PTR [rsp+0x20],0x0
  401997:	mov    r9d,0xffffffff
  40199d:	mov    r8,QWORD PTR [rbp+0x0]
  4019a1:	mov    ecx,0xfde9
  4019a6:	add    ebx,0x1
  4019a9:	call   rdi
  4019ab:	add    esi,eax
  4019ad:	mov    eax,DWORD PTR [rip+0x27685]        # 0x429038
  4019b3:	add    rbp,0x8
  4019b7:	cmp    ebx,eax
  4019b9:	jl     0x401972
  4019bb:	add    eax,0x1
  4019be:	movsxd rdx,esi
  4019c1:	cdqe   
  4019c3:	lea    rcx,[rdx+rax*8]
  4019c7:	call   0x4122c0
  4019cc:	mov    rbp,rax
  4019cf:	mov    QWORD PTR [rip+0x2766a],rax        # 0x429040
  4019d6:	mov    eax,DWORD PTR [rip+0x2765c]        # 0x429038
  4019dc:	lea    r13d,[rax+0x1]
  4019e0:	movsxd r13,r13d
  4019e3:	shl    r13,0x3
  4019e7:	test   rbp,rbp
  4019ea:	je     0x401ab0
  4019f0:	test   eax,eax
  4019f2:	jle    0x401aab
  4019f8:	mov    rdx,rbp
  4019fb:	xor    r15d,r15d
  4019fe:	xor    ebx,ebx
  401a00:	xor    r14d,r14d
  401a03:	jmp    0x401a0c
  401a05:	mov    rdx,QWORD PTR [rip+0x27634]        # 0x429040
  401a0c:	movsxd rax,ebx
  401a0f:	mov    r9d,0xffffffff
  401a15:	mov    ecx,0xfde9
  401a1a:	add    rax,r13
  401a1d:	add    r14d,0x1
  401a21:	add    rax,rbp
  401a24:	mov    QWORD PTR [rdx+r15*1],rax
  401a28:	mov    edx,esi
  401a2a:	mov    r8,QWORD PTR [r12+r15*1]
  401a2e:	sub    edx,ebx
  401a30:	mov    QWORD PTR [rsp+0x38],0x0
  401a39:	mov    QWORD PTR [rsp+0x30],0x0
  401a42:	mov    DWORD PTR [rsp+0x28],edx
  401a46:	mov    QWORD PTR [rsp+0x20],rax
  401a4b:	xor    edx,edx
  401a4d:	add    r15,0x8
  401a51:	call   rdi
  401a53:	add    ebx,eax
  401a55:	cmp    r14d,DWORD PTR [rip+0x275dc]        # 0x429038
  401a5c:	jl     0x401a05
  401a5e:	mov    rbp,QWORD PTR [rip+0x275db]        # 0x429040
  401a65:	movsxd r11,r14d
  401a68:	shl    r11,0x3
  401a6c:	mov    QWORD PTR [rbp+r11*1+0x0],0x0
  401a75:	mov    rcx,r12
  401a78:	call   QWORD PTR [rip+0x29fb6]        # 0x42ba34
  401a7e:	mov    eax,DWORD PTR [rip+0x275b4]        # 0x429038
  401a84:	mov    rdi,QWORD PTR [rsp+0x40]
  401a89:	mov    rsi,QWORD PTR [rsp+0x48]
  401a8e:	mov    DWORD PTR [rdi],eax
  401a90:	mov    rax,QWORD PTR [rip+0x275a9]        # 0x429040
  401a97:	mov    QWORD PTR [rsi],rax
  401a9a:	add    rsp,0x58
  401a9e:	pop    rbx
  401a9f:	pop    rsi
  401aa0:	pop    rdi
  401aa1:	pop    rbp
  401aa2:	pop    r12
  401aa4:	pop    r13
  401aa6:	pop    r14
  401aa8:	pop    r15
  401aaa:	ret    
  401aab:	xor    r11d,r11d
  401aae:	jmp    0x401a6c
  401ab0:	mov    rax,QWORD PTR [rip+0x29f7d]        # 0x42ba34
  401ab7:	mov    rcx,r12
  401aba:	add    rsp,0x58
  401abe:	pop    rbx
  401abf:	pop    rsi
  401ac0:	pop    rdi
  401ac1:	pop    rbp
  401ac2:	pop    r12
  401ac4:	pop    r13
  401ac6:	pop    r14
  401ac8:	pop    r15
  401aca:	rex.W jmp rax
  401acd:	nop    DWORD PTR [rax]
  401ad0:	push   rdi
  401ad1:	push   rsi
  401ad2:	push   rbx
  401ad3:	sub    rsp,0x2c0
  401ada:	lea    rsi,[rip+0x1d657]        # 0x41f138
  401ae1:	mov    ecx,0x4f
  401ae6:	lea    rbx,[rsp+0x40]
  401aeb:	mov    rdi,rbx
  401aee:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  401af1:	movzx  eax,WORD PTR [rsi]
  401af4:	mov    WORD PTR [rdi],ax
  401af7:	jmp    0x401b0c
  401af9:	nop    DWORD PTR [rax+0x0]
  401b00:	mov    ecx,0x2d7e
  401b05:	mov    BYTE PTR [rax+0x2],0x2d
  401b09:	mov    WORD PTR [rax],cx
  401b0c:	lea    rdx,[rip+0x1d5ee]        # 0x41f101
  401b13:	mov    rcx,rbx
  401b16:	call   0x419820
  401b1b:	test   rax,rax
  401b1e:	jne    0x401b00
  401b20:	jmp    0x401b3c
  401b22:	movabs rsi,0x666e6f632d676b70
  401b2c:	mov    edx,0x6769
  401b31:	mov    BYTE PTR [rax+0xa],0x20
  401b35:	mov    QWORD PTR [rax],rsi
  401b38:	mov    WORD PTR [rax+0x8],dx
  401b3c:	lea    rdx,[rip+0x1d5c2]        # 0x41f105
  401b43:	mov    rcx,rbx
  401b46:	call   0x419820
  401b4b:	test   rax,rax
  401b4e:	jne    0x401b22
  401b50:	lea    rdx,[rip+0x1d5ba]        # 0x41f111
  401b57:	mov    rcx,rbx
  401b5a:	call   0x419818
  401b5f:	lea    r9,[rip+0x1d5ad]        # 0x41f113
  401b66:	lea    r8,[rip+0x1d5a9]        # 0x41f116
  401b6d:	xor    ecx,ecx
  401b6f:	mov    edx,0x20
  401b74:	mov    QWORD PTR [rsp+0x38],rax
  401b79:	call   0x412308
  401b7e:	mov    rax,QWORD PTR [rsp+0x38]
  401b83:	test   rax,rax
  401b86:	je     0x401bca
  401b88:	nop    DWORD PTR [rax+rax*1+0x0]
  401b90:	mov    QWORD PTR [rsp+0x28],rax
  401b95:	lea    rax,[rip+0x1d577]        # 0x41f113
  401b9c:	lea    r8,[rip+0x1d586]        # 0x41f129
  401ba3:	xor    ecx,ecx
  401ba5:	mov    edx,0x20
  401baa:	mov    QWORD PTR [rsp+0x20],rax
  401baf:	mov    r9,rax
  401bb2:	call   0x412308
  401bb7:	lea    rdx,[rip+0x1d553]        # 0x41f111
  401bbe:	xor    ecx,ecx
  401bc0:	call   0x419818
  401bc5:	test   rax,rax
  401bc8:	jne    0x401b90
  401bca:	add    rsp,0x2c0
  401bd1:	pop    rbx
  401bd2:	pop    rsi
  401bd3:	pop    rdi
  401bd4:	ret    
  401bd5:	nop
  401bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401be0:	sub    rsp,0x38
  401be4:	lea    r8,[rip+0x1d7c7]        # 0x41f3b2
  401beb:	mov    edx,0x10
  401bf0:	mov    QWORD PTR [rsp+0x58],r9
  401bf5:	lea    r9,[rsp+0x58]
  401bfa:	mov    QWORD PTR [rsp+0x28],r9
  401bff:	call   0x413f40
  401c04:	add    rsp,0x38
  401c08:	ret    
  401c09:	nop    DWORD PTR [rax+0x0]
  401c10:	lea    r8,[rip+0x1d79e]        # 0x41f3b5
  401c17:	lea    rdx,[rip+0x1d79f]        # 0x41f3bd
  401c1e:	lea    rcx,[rip+0x28bdb]        # 0x42a800
  401c25:	xor    r9d,r9d
  401c28:	jmp    0x412428
  401c2d:	nop    DWORD PTR [rax]
  401c30:	sub    rsp,0x28
  401c34:	lea    rcx,[rip+0x28bcd]        # 0x42a808
  401c3b:	call   0x412440
  401c40:	lea    rcx,[rip+0x28bb9]        # 0x42a800
  401c47:	call   0x412440
  401c4c:	lea    rcx,[rip+0x28bbd]        # 0x42a810
  401c53:	call   0x412440
  401c58:	lea    rcx,[rip+0x28bb9]        # 0x42a818
  401c5f:	call   0x412440
  401c64:	lea    rcx,[rip+0x28bb5]        # 0x42a820
  401c6b:	add    rsp,0x28
  401c6f:	jmp    0x412440
  401c74:	xchg   ax,ax
  401c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c80:	mov    rax,QWORD PTR [rip+0x29de5]        # 0x42ba6c
  401c87:	lea    rcx,[rip+0x1d735]        # 0x41f3c3
  401c8e:	rex.W jmp rax
  401c91:	nop    DWORD PTR [rax+rax*1+0x0]
  401c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ca0:	mov    QWORD PTR [rip+0x273a1],rcx        # 0x429048
  401ca7:	ret    
  401ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cb0:	push   rbx
  401cb1:	sub    rsp,0x20
  401cb5:	mov    rax,QWORD PTR [rip+0x2738c]        # 0x429048
  401cbc:	mov    ebx,ecx
  401cbe:	test   rax,rax
  401cc1:	je     0x401cc5
  401cc3:	call   rax
  401cc5:	mov    ecx,ebx
  401cc7:	call   0x419900
  401ccc:	nop
  401ccd:	nop    DWORD PTR [rax]
  401cd0:	push   r15
  401cd2:	push   r14
  401cd4:	push   r13
  401cd6:	push   r12
  401cd8:	push   rbp
  401cd9:	push   rdi
  401cda:	push   rsi
  401cdb:	push   rbx
  401cdc:	sub    rsp,0x4c8
  401ce3:	xor    eax,eax
  401ce5:	cmp    QWORD PTR [rip+0x27363],0x0        # 0x429050
  401ced:	mov    QWORD PTR [rsp+0x510],rcx
  401cf5:	je     0x401d10
  401cf7:	add    rsp,0x4c8
  401cfe:	pop    rbx
  401cff:	pop    rsi
  401d00:	pop    rdi
  401d01:	pop    rbp
  401d02:	pop    r12
  401d04:	pop    r13
  401d06:	pop    r14
  401d08:	pop    r15
  401d0a:	ret    
  401d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d10:	lea    rbx,[rsp+0x78]
  401d15:	mov    rcx,rbx
  401d18:	call   QWORD PTR [rip+0x29e36]        # 0x42bb54
  401d1e:	mov    rcx,rbx
  401d21:	call   QWORD PTR [rip+0x29e15]        # 0x42bb3c
  401d27:	mov    r12,rax
  401d2a:	mov    rax,QWORD PTR [rsp+0x510]
  401d32:	test   rax,rax
  401d35:	je     0x4020b0
  401d3b:	cmp    BYTE PTR [rax],0x0
  401d3e:	je     0x4020b0
  401d44:	xor    ebx,ebx
  401d46:	xor    r15d,r15d
  401d49:	lea    r14,[rsp+0x70]
  401d4e:	lea    r13,[rsp+0x68]
  401d53:	lea    rbp,[rsp+0xc0]
  401d5b:	jmp    0x401db8
  401d5d:	nop    DWORD PTR [rax]
  401d60:	mov    rcx,QWORD PTR [rsp+0x70]
  401d65:	mov    r8d,0xa
  401d6b:	mov    rdx,rbp
  401d6e:	call   0x419810
  401d73:	mov    DWORD PTR [rip+0x1b35b],eax        # 0x41d0d4
  401d79:	mov    rax,QWORD PTR [rsp+0xc0]
  401d81:	cmp    BYTE PTR [rax],0x0
  401d84:	jne    0x4020f4
  401d8a:	mov    rcx,QWORD PTR [rsp+0x70]
  401d8f:	call   0x4123c0
  401d94:	mov    rcx,QWORD PTR [rsp+0x68]
  401d99:	call   0x4123c0
  401d9e:	mov    rax,QWORD PTR [rsp+0x510]
  401da6:	test   rax,rax
  401da9:	je     0x401eb5
  401daf:	cmp    BYTE PTR [rax],0x0
  401db2:	je     0x401eb5
  401db8:	lea    r8,[rip+0x1d60f]        # 0x41f3ce
  401dbf:	lea    rdx,[rip+0x1d60a]        # 0x41f3d0
  401dc6:	lea    rcx,[rsp+0x510]
  401dce:	xor    r9d,r9d
  401dd1:	mov    QWORD PTR [rsp+0x28],r14
  401dd6:	mov    QWORD PTR [rsp+0x20],r13
  401ddb:	call   0x412288
  401de0:	test   eax,eax
  401de2:	mov    r10d,eax
  401de5:	js     0x401e70
  401deb:	mov    rax,QWORD PTR [rsp+0x510]
  401df3:	cmp    BYTE PTR [rax],0x0
  401df6:	je     0x401e04
  401df8:	add    rax,0x1
  401dfc:	mov    QWORD PTR [rsp+0x510],rax
  401e04:	mov    r9,QWORD PTR [rsp+0x68]
  401e09:	lea    rdi,[rip+0x1d5fb]        # 0x41f40b
  401e10:	mov    ecx,0x5
  401e15:	add    ebx,0x1
  401e18:	mov    rsi,r9
  401e1b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401e1d:	je     0x401e50
  401e1f:	lea    rdi,[rip+0x1d5ea]        # 0x41f410
  401e26:	mov    rsi,r9
  401e29:	mov    ecx,0x6
  401e2e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401e30:	je     0x401d60
  401e36:	lea    r8,[rip+0x1d5f4]        # 0x41f431
  401e3d:	mov    edx,0x10
  401e42:	xor    ecx,ecx
  401e44:	call   0x412308
  401e49:	jmp    0x401d8a
  401e4e:	xchg   ax,ax
  401e50:	mov    rcx,r15
  401e53:	call   0x4123c0
  401e58:	mov    r15,QWORD PTR [rsp+0x70]
  401e5d:	xor    ecx,ecx
  401e5f:	mov    QWORD PTR [rsp+0x70],0x0
  401e68:	jmp    0x401d8f
  401e6d:	nop    DWORD PTR [rax]
  401e70:	test   ebx,ebx
  401e72:	je     0x401eb5
  401e74:	lea    rbx,[rsp+0x80]
  401e7c:	lea    rdi,[rsp+0x80]
  401e84:	xor    eax,eax
  401e86:	mov    ecx,0x8
  401e8b:	mov    r8d,0x40
  401e91:	rep stos QWORD PTR es:[rdi],rax
  401e94:	mov    rdx,rbx
  401e97:	mov    ecx,r10d
  401e9a:	call   0x412218
  401e9f:	lea    r8,[rip+0x1d532]        # 0x41f3d8
  401ea6:	mov    r9,rbx
  401ea9:	mov    edx,0x10
  401eae:	xor    ecx,ecx
  401eb0:	call   0x412308
  401eb5:	xor    edx,edx
  401eb7:	mov    r8d,0x1
  401ebd:	mov    rcx,rbp
  401ec0:	lea    rbx,[rip+0x1d4fd]        # 0x41f3c4
  401ec7:	call   0x412480
  401ecc:	test   r15,r15
  401ecf:	cmovne rbx,r15
  401ed3:	mov    rsi,QWORD PTR [rip+0x23de6]        # 0x425cc0
  401eda:	nop    WORD PTR [rax+rax*1+0x0]
  401ee0:	movsx  edx,BYTE PTR [rbx]
  401ee3:	test   edx,edx
  401ee5:	je     0x401fb0
  401eeb:	cmp    edx,0x25
  401eee:	jne    0x401f30
  401ef0:	movsx  edx,BYTE PTR [rbx+0x1]
  401ef4:	lea    rdi,[rbx+0x2]
  401ef8:	test   edx,edx
  401efa:	je     0x401fb0
  401f00:	cmp    dl,0x70
  401f03:	je     0x401f93
  401f09:	cmp    dl,0x74
  401f0c:	je     0x401f44
  401f0e:	cmp    dl,0x25
  401f11:	mov    rbx,rdi
  401f14:	jne    0x401ee0
  401f16:	mov    r8d,0x1
  401f1c:	mov    rcx,rbp
  401f1f:	mov    rbx,rdi
  401f22:	call   0x412498
  401f27:	jmp    0x401ee0
  401f29:	nop    DWORD PTR [rax+0x0]
  401f30:	mov    r8d,0x1
  401f36:	mov    rcx,rbp
  401f39:	add    rbx,0x1
  401f3d:	call   0x412498
  401f42:	jmp    0x401ee0
  401f44:	mov    ecx,DWORD PTR [r12]
  401f48:	mov    edx,DWORD PTR [r12+0x10]
  401f4d:	mov    rbx,rdi
  401f50:	mov    eax,DWORD PTR [r12+0x14]
  401f55:	mov    DWORD PTR [rsp+0x38],ecx
  401f59:	mov    ecx,DWORD PTR [r12+0x4]
  401f5e:	lea    r9d,[rdx+0x1]
  401f62:	lea    r8d,[rax+0x76c]
  401f69:	lea    rdx,[rip+0x1d4e2]        # 0x41f452
  401f70:	mov    DWORD PTR [rsp+0x30],ecx
  401f74:	mov    ecx,DWORD PTR [r12+0x8]
  401f79:	mov    DWORD PTR [rsp+0x28],ecx
  401f7d:	mov    ecx,DWORD PTR [r12+0xc]
  401f82:	mov    DWORD PTR [rsp+0x20],ecx
  401f86:	mov    rcx,rbp
  401f89:	call   0x412478
  401f8e:	jmp    0x401ee0
  401f93:	lea    rdx,[rip+0x1d4b5]        # 0x41f44f
  401f9a:	mov    r8,rsi
  401f9d:	mov    rcx,rbp
  401fa0:	mov    rbx,rdi
  401fa3:	call   0x412478
  401fa8:	jmp    0x401ee0
  401fad:	nop    DWORD PTR [rax]
  401fb0:	mov    rcx,r15
  401fb3:	call   0x4123c0
  401fb8:	mov    eax,DWORD PTR [rsp+0xcc]
  401fbf:	cmp    DWORD PTR [rsp+0xc8],eax
  401fc6:	jae    0x4020d7
  401fcc:	mov    rcx,QWORD PTR [rsp+0xc0]
  401fd4:	lea    rdx,[rip+0x1d4be]        # 0x41f499
  401fdb:	call   0x4198f0
  401fe0:	test   rax,rax
  401fe3:	mov    QWORD PTR [rip+0x27066],rax        # 0x429050
  401fea:	je     0x402071
  401ff0:	lea    rcx,[rip+0xfffffffffffff5f9]        # 0x4015f0
  401ff7:	call   0x4122e0
  401ffc:	mov    rax,QWORD PTR [rsp+0xc0]
  402004:	mov    r9,QWORD PTR [rip+0x23cb5]        # 0x425cc0
  40200b:	lea    r8,[rip+0x1d4ae]        # 0x41f4c0
  402012:	mov    edx,0x20
  402017:	xor    ecx,ecx
  402019:	mov    QWORD PTR [rsp+0x50],rax
  40201e:	mov    eax,DWORD PTR [r12]
  402022:	mov    DWORD PTR [rsp+0x48],eax
  402026:	mov    eax,DWORD PTR [r12+0x4]
  40202b:	mov    DWORD PTR [rsp+0x40],eax
  40202f:	mov    eax,DWORD PTR [r12+0x8]
  402034:	mov    DWORD PTR [rsp+0x38],eax
  402038:	mov    eax,DWORD PTR [r12+0xc]
  40203d:	mov    DWORD PTR [rsp+0x30],eax
  402041:	mov    eax,DWORD PTR [r12+0x10]
  402046:	add    eax,0x1
  402049:	mov    DWORD PTR [rsp+0x28],eax
  40204d:	mov    eax,DWORD PTR [r12+0x14]
  402052:	add    eax,0x76c
  402057:	mov    DWORD PTR [rsp+0x20],eax
  40205b:	call   0x412308
  402060:	xor    edx,edx
  402062:	mov    rcx,rbp
  402065:	call   0x412488
  40206a:	xor    eax,eax
  40206c:	jmp    0x401cf7
  402071:	mov    rsi,QWORD PTR [rip+0x29aac]        # 0x42bb24
  402078:	call   rsi
  40207a:	mov    eax,DWORD PTR [rax]
  40207c:	neg    eax
  40207e:	mov    ebx,eax
  402080:	call   rsi
  402082:	mov    ecx,DWORD PTR [rax]
  402084:	call   0x419848
  402089:	mov    r9,QWORD PTR [rsp+0xc0]
  402091:	lea    r8,[rip+0x1d408]        # 0x41f4a0
  402098:	mov    QWORD PTR [rsp+0x20],rax
  40209d:	mov    edx,0x10
  4020a2:	xor    ecx,ecx
  4020a4:	call   0x412308
  4020a9:	mov    eax,ebx
  4020ab:	jmp    0x401cf7
  4020b0:	lea    rbp,[rsp+0xc0]
  4020b8:	mov    r8d,0x1
  4020be:	xor    edx,edx
  4020c0:	xor    r15d,r15d
  4020c3:	lea    rbx,[rip+0x1d2fa]        # 0x41f3c4
  4020ca:	mov    rcx,rbp
  4020cd:	call   0x412480
  4020d2:	jmp    0x401ed3
  4020d7:	lea    r8,[rip+0x1d392]        # 0x41f470
  4020de:	mov    edx,0x10
  4020e3:	xor    ecx,ecx
  4020e5:	call   0x412308
  4020ea:	mov    eax,0xfffffff4
  4020ef:	jmp    0x401cf7
  4020f4:	lea    r8,[rip+0x1d31b]        # 0x41f416
  4020fb:	xor    ecx,ecx
  4020fd:	mov    edx,0x8
  402102:	call   0x412308
  402107:	mov    ecx,0x1
  40210c:	call   0x401cb0
  402111:	nop
  402112:	nop    DWORD PTR [rax+0x0]
  402116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402120:	push   r15
  402122:	push   r14
  402124:	push   r13
  402126:	push   r12
  402128:	push   rbp
  402129:	push   rdi
  40212a:	push   rsi
  40212b:	push   rbx
  40212c:	sub    rsp,0x38
  402130:	xor    edi,edi
  402132:	xor    ebx,ebx
  402134:	mov    ebp,ecx
  402136:	jmp    0x402143
  402138:	nop    DWORD PTR [rax+rax*1+0x0]
  402140:	add    edi,0x1
  402143:	mov    rcx,rbx
  402146:	call   0x4120b8
  40214b:	test   rax,rax
  40214e:	mov    rbx,rax
  402151:	jne    0x402140
  402153:	mov    r12d,edi
  402156:	mov    edx,0x8
  40215b:	mov    rcx,r12
  40215e:	call   0x412470
  402163:	test   rax,rax
  402166:	mov    QWORD PTR [rsp+0x20],rax
  40216b:	je     0x4023a4
  402171:	xor    esi,esi
  402173:	jmp    0x402183
  402175:	mov    rdx,QWORD PTR [rsp+0x20]
  40217a:	mov    eax,esi
  40217c:	add    esi,0x1
  40217f:	mov    QWORD PTR [rdx+rax*8],rbx
  402183:	mov    rcx,rbx
  402186:	call   0x4120b8
  40218b:	test   rax,rax
  40218e:	mov    rbx,rax
  402191:	jne    0x402175
  402193:	cmp    esi,edi
  402195:	jne    0x4023c1
  40219b:	mov    rcx,QWORD PTR [rsp+0x20]
  4021a0:	lea    r9,[rip+0xfffffffffffff419]        # 0x4015c0
  4021a7:	mov    r8d,0x8
  4021ad:	mov    rdx,r12
  4021b0:	call   0x419870
  4021b5:	lea    rax,[rip+0x1d34b]        # 0x41f507
  4021bc:	lea    rdx,[rip+0x1d34d]        # 0x41f510
  4021c3:	test   ebp,ebp
  4021c5:	lea    rcx,[rip+0x1d36c]        # 0x41f538
  4021cc:	cmovne rdx,rax
  4021d0:	call   0x401560
  4021d5:	test   esi,esi
  4021d7:	je     0x40236f
  4021dd:	mov    rdi,QWORD PTR [rsp+0x20]
  4021e2:	lea    eax,[rsi-0x1]
  4021e5:	lea    r13,[rip+0x1d32d]        # 0x41f519
  4021ec:	lea    rsi,[rip+0x1d328]        # 0x41f51b
  4021f3:	lea    r12,[rip+0x1d323]        # 0x41f51d
  4021fa:	lea    rax,[rdi+rax*8+0x8]
  4021ff:	mov    r14,rdi
  402202:	mov    QWORD PTR [rsp+0x28],rax
  402207:	nop    WORD PTR [rax+rax*1+0x0]
  402210:	mov    rdi,QWORD PTR [r14]
  402213:	xor    r15d,r15d
  402216:	test   ebp,ebp
  402218:	mov    ebx,DWORD PTR [rdi]
  40221a:	jne    0x402320
  402220:	mov    rcx,r15
  402223:	call   0x412128
  402228:	test   rax,rax
  40222b:	mov    r15,rax
  40222e:	je     0x402360
  402234:	cmp    ebx,DWORD PTR [rax+0x14]
  402237:	jne    0x402220
  402239:	mov    rcx,rax
  40223c:	call   0x412138
  402241:	test   eax,eax
  402243:	je     0x402220
  402245:	mov    eax,DWORD PTR [rdi+0x4]
  402248:	mov    edx,0x3f
  40224d:	cmp    eax,0x4
  402250:	ja     0x40225d
  402252:	lea    rdx,[rip+0x1eb60]        # 0x420db9
  402259:	movsx  edx,BYTE PTR [rdx+rax*1]
  40225d:	lea    rcx,[rip+0x1d3ce]        # 0x41f632
  402264:	call   0x401560
  402269:	test   BYTE PTR [r15+0x19],0x10
  40226e:	mov    rcx,rsi
  402271:	cmovne rcx,r13
  402275:	call   0x401560
  40227a:	test   BYTE PTR [r15+0x19],0x20
  40227f:	mov    rcx,rsi
  402282:	cmovne rcx,r12
  402286:	call   0x401560
  40228b:	test   BYTE PTR [r15+0x19],0x2
  402290:	lea    rcx,[rip+0x1d288]        # 0x41f51f
  402297:	cmove  rcx,rsi
  40229b:	call   0x401560
  4022a0:	test   BYTE PTR [r15+0x18],0x1
  4022a5:	lea    rcx,[rip+0x1d275]        # 0x41f521
  4022ac:	cmove  rcx,rsi
  4022b0:	call   0x401560
  4022b5:	test   BYTE PTR [r15+0x18],0x2
  4022ba:	lea    rcx,[rip+0x1d262]        # 0x41f523
  4022c1:	cmove  rcx,rsi
  4022c5:	call   0x401560
  4022ca:	mov    rax,QWORD PTR [r15+0x8]
  4022ce:	mov    rdx,QWORD PTR [r15]
  4022d1:	lea    r8,[rip+0x1d0eb]        # 0x41f3c3
  4022d8:	lea    rcx,[rip+0x1d357]        # 0x41f636
  4022df:	test   rax,rax
  4022e2:	cmovne r8,rax
  4022e6:	call   0x401560
  4022eb:	mov    rbx,QWORD PTR [rdi+0x8]
  4022ef:	mov    rcx,QWORD PTR [r15]
  4022f2:	mov    rdx,rbx
  4022f5:	call   0x419858
  4022fa:	test   eax,eax
  4022fc:	jne    0x402390
  402302:	lea    rcx,[rip+0x1d343]        # 0x41f64c
  402309:	call   0x401560
  40230e:	test   ebp,ebp
  402310:	mov    ebx,DWORD PTR [rdi]
  402312:	je     0x402220
  402318:	nop    DWORD PTR [rax+rax*1+0x0]
  402320:	mov    rcx,r15
  402323:	call   0x412128
  402328:	test   rax,rax
  40232b:	mov    r15,rax
  40232e:	je     0x402360
  402330:	cmp    ebx,DWORD PTR [r15+0x14]
  402334:	jne    0x402320
  402336:	mov    rcx,r15
  402339:	call   0x412130
  40233e:	test   eax,eax
  402340:	jne    0x402245
  402346:	mov    rcx,r15
  402349:	call   0x412128
  40234e:	test   rax,rax
  402351:	mov    r15,rax
  402354:	jne    0x402330
  402356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402360:	add    r14,0x8
  402364:	cmp    r14,QWORD PTR [rsp+0x28]
  402369:	jne    0x402210
  40236f:	mov    rcx,QWORD PTR [rsp+0x20]
  402374:	add    rsp,0x38
  402378:	pop    rbx
  402379:	pop    rsi
  40237a:	pop    rdi
  40237b:	pop    rbp
  40237c:	pop    r12
  40237e:	pop    r13
  402380:	pop    r14
  402382:	pop    r15
  402384:	jmp    0x4123c0
  402389:	nop    DWORD PTR [rax+0x0]
  402390:	lea    rcx,[rip+0x1d2a9]        # 0x41f640
  402397:	mov    rdx,rbx
  40239a:	call   0x401560
  40239f:	jmp    0x402302
  4023a4:	lea    r8,[rip+0x1d17a]        # 0x41f525
  4023ab:	xor    ecx,ecx
  4023ad:	mov    edx,0x10
  4023b2:	call   0x412308
  4023b7:	mov    ecx,0x1
  4023bc:	call   0x401cb0
  4023c1:	call   0x419ba0
  4023c6:	nop
  4023c7:	nop    WORD PTR [rax+rax*1+0x0]
  4023d0:	push   rdi
  4023d1:	push   rsi
  4023d2:	push   rbx
  4023d3:	sub    rsp,0x70
  4023d7:	movaps XMMWORD PTR [rsp+0x50],xmm6
  4023dc:	movaps XMMWORD PTR [rsp+0x60],xmm7
  4023e1:	mov    rsi,rdx
  4023e4:	lea    rdx,[rsp+0x48]
  4023e9:	mov    rdi,rcx
  4023ec:	mov    rcx,rsi
  4023ef:	mov    ebx,r8d
  4023f2:	movapd xmm6,xmm3
  4023f6:	movsd  xmm7,QWORD PTR [rsp+0xb0]
  4023ff:	call   0x4121f8
  402404:	mov    rax,QWORD PTR [rsp+0x48]
  402409:	cmp    BYTE PTR [rax],0x0
  40240c:	jne    0x4024b9
  402412:	ucomisd xmm6,xmm0
  402416:	ja     0x4024b0
  40241c:	ucomisd xmm0,xmm7
  402420:	ja     0x4024b0
  402426:	cmp    ebx,0x400
  40242c:	je     0x402460
  40242e:	add    ebx,0xffffff80
  402431:	jne    0x402447
  402433:	cvttsd2si eax,xmm0
  402437:	pxor   xmm1,xmm1
  40243b:	cvtsi2sd xmm1,eax
  40243f:	ucomisd xmm1,xmm0
  402443:	jp     0x40247f
  402445:	jne    0x40247f
  402447:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  40244c:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  402451:	add    rsp,0x70
  402455:	pop    rbx
  402456:	pop    rsi
  402457:	pop    rdi
  402458:	ret    
  402459:	nop    DWORD PTR [rax+0x0]
  402460:	cvttsd2si rax,xmm0
  402465:	pxor   xmm1,xmm1
  402469:	cvtsi2sd xmm1,rax
  40246e:	ucomisd xmm1,xmm0
  402472:	jp     0x402476
  402474:	je     0x402447
  402476:	lea    r8,[rip+0x1d283]        # 0x41f700
  40247d:	jmp    0x402486
  40247f:	lea    r8,[rip+0x1d2a2]        # 0x41f728
  402486:	movsd  QWORD PTR [rsp+0x30],xmm7
  40248c:	xor    ecx,ecx
  40248e:	mov    QWORD PTR [rsp+0x20],rsi
  402493:	movsd  QWORD PTR [rsp+0x28],xmm6
  402499:	mov    r9,rdi
  40249c:	mov    edx,0x8
  4024a1:	call   0x412308
  4024a6:	mov    ecx,0x1
  4024ab:	call   0x401cb0
  4024b0:	lea    r8,[rip+0x1d211]        # 0x41f6c8
  4024b7:	jmp    0x402486
  4024b9:	lea    r8,[rip+0x1d1e0]        # 0x41f6a0
  4024c0:	jmp    0x402486
  4024c2:	nop    DWORD PTR [rax+0x0]
  4024c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024d0:	push   rdi
  4024d1:	push   rsi
  4024d2:	push   rbx
  4024d3:	sub    rsp,0x30
  4024d7:	mov    rdi,rcx
  4024da:	lea    rcx,[rsp+0x28]
  4024df:	mov    rbx,rdx
  4024e2:	mov    esi,r8d
  4024e5:	call   0x412258
  4024ea:	test   eax,eax
  4024ec:	js     0x4024fb
  4024ee:	mov    rax,QWORD PTR [rsp+0x28]
  4024f3:	add    rsp,0x30
  4024f7:	pop    rbx
  4024f8:	pop    rsi
  4024f9:	pop    rdi
  4024fa:	ret    
  4024fb:	mov    r8d,esi
  4024fe:	mov    rdx,rbx
  402501:	mov    rcx,rdi
  402504:	call   0x419bd5
  402509:	nop
  40250a:	nop    WORD PTR [rax+rax*1+0x0]
  402510:	push   r13
  402512:	push   r12
  402514:	push   rbp
  402515:	push   rdi
  402516:	push   rsi
  402517:	push   rbx
  402518:	sub    rsp,0x68
  40251c:	mov    rax,QWORD PTR [rcx]
  40251f:	mov    r12d,DWORD PTR [rsp+0xc0]
  402527:	mov    rbx,rcx
  40252a:	mov    rdi,rdx
  40252d:	mov    ebp,r8d
  402530:	mov    esi,r9d
  402533:	test   rax,rax
  402536:	je     0x4025e0
  40253c:	test   r12d,r12d
  40253f:	jne    0x402600
  402545:	mov    ecx,0x1
  40254a:	lea    r12,[rsp+0x20]
  40254f:	jmp    0x402561
  402551:	add    rbx,0x28
  402555:	mov    rax,QWORD PTR [rbx]
  402558:	test   rax,rax
  40255b:	je     0x4025e0
  402561:	mov    r8d,DWORD PTR [rbx+0x8]
  402565:	mov    edx,r8d
  402568:	and    edx,ebp
  40256a:	cmp    edx,ebp
  40256c:	jne    0x402551
  40256e:	test   r8d,esi
  402571:	jne    0x402551
  402573:	test   ecx,ecx
  402575:	jne    0x4026a4
  40257b:	mov    r8d,0x40
  402581:	mov    rdx,rax
  402584:	mov    rcx,r12
  402587:	call   0x412200
  40258c:	cmp    QWORD PTR [rbx+0x20],0x0
  402591:	je     0x4025ba
  402593:	lea    rdx,[rip+0x1ca68]        # 0x41f002
  40259a:	mov    r8d,0x40
  4025a0:	mov    rcx,r12
  4025a3:	call   0x412210
  4025a8:	mov    rdx,QWORD PTR [rbx+0x20]
  4025ac:	mov    r8d,0x40
  4025b2:	mov    rcx,r12
  4025b5:	call   0x412210
  4025ba:	mov    r8,QWORD PTR [rbx+0x18]
  4025be:	lea    rcx,[rip+0x1d185]        # 0x41f74a
  4025c5:	add    rbx,0x28
  4025c9:	mov    rdx,r12
  4025cc:	call   0x401560
  4025d1:	mov    rax,QWORD PTR [rbx]
  4025d4:	xor    ecx,ecx
  4025d6:	test   rax,rax
  4025d9:	jne    0x402561
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]
  4025e0:	lea    rcx,[rip+0x1d065]        # 0x41f64c
  4025e7:	call   0x401560
  4025ec:	nop
  4025ed:	add    rsp,0x68
  4025f1:	pop    rbx
  4025f2:	pop    rsi
  4025f3:	pop    rdi
  4025f4:	pop    rbp
  4025f5:	pop    r12
  4025f7:	pop    r13
  4025f9:	ret    
  4025fa:	nop    WORD PTR [rax+rax*1+0x0]
  402600:	mov    r8d,0x1
  402606:	lea    r13,[rsp+0x20]
  40260b:	jmp    0x40261c
  40260d:	nop    DWORD PTR [rax]
  402610:	add    rbx,0x28
  402614:	mov    rax,QWORD PTR [rbx]
  402617:	test   rax,rax
  40261a:	je     0x4025e0
  40261c:	mov    edx,DWORD PTR [rbx+0x8]
  40261f:	mov    ecx,edx
  402621:	and    ecx,ebp
  402623:	cmp    ecx,ebp
  402625:	jne    0x402610
  402627:	test   edx,r12d
  40262a:	je     0x402610
  40262c:	test   edx,esi
  40262e:	jne    0x402610
  402630:	test   r8d,r8d
  402633:	jne    0x402690
  402635:	mov    r8d,0x40
  40263b:	mov    rdx,rax
  40263e:	mov    rcx,r13
  402641:	call   0x412200
  402646:	cmp    QWORD PTR [rbx+0x20],0x0
  40264b:	je     0x402674
  40264d:	lea    rdx,[rip+0x1c9ae]        # 0x41f002
  402654:	mov    r8d,0x40
  40265a:	mov    rcx,r13
  40265d:	call   0x412210
  402662:	mov    rdx,QWORD PTR [rbx+0x20]
  402666:	mov    r8d,0x40
  40266c:	mov    rcx,r13
  40266f:	call   0x412210
  402674:	mov    r8,QWORD PTR [rbx+0x18]
  402678:	lea    rcx,[rip+0x1d0cb]        # 0x41f74a
  40267f:	mov    rdx,r13
  402682:	call   0x401560
  402687:	xor    r8d,r8d
  40268a:	jmp    0x402610
  40268c:	nop    DWORD PTR [rax+0x0]
  402690:	lea    rcx,[rip+0x1d0bf]        # 0x41f756
  402697:	mov    rdx,rdi
  40269a:	call   0x401560
  40269f:	mov    rax,QWORD PTR [rbx]
  4026a2:	jmp    0x402635
  4026a4:	lea    rcx,[rip+0x1d0ab]        # 0x41f756
  4026ab:	mov    rdx,rdi
  4026ae:	call   0x401560
  4026b3:	mov    rax,QWORD PTR [rbx]
  4026b6:	jmp    0x40257b
  4026bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4026c0:	push   r15
  4026c2:	push   r14
  4026c4:	push   r13
  4026c6:	push   r12
  4026c8:	push   rbp
  4026c9:	push   rdi
  4026ca:	push   rsi
  4026cb:	push   rbx
  4026cc:	sub    rsp,0xc8
  4026d3:	cmp    QWORD PTR [rcx+0x10],0x0
  4026d8:	mov    QWORD PTR [rsp+0x110],rcx
  4026e0:	mov    ebp,edx
  4026e2:	je     0x40270d
  4026e4:	lea    rcx,[rsp+0x110]
  4026ec:	mov    r8d,edx
  4026ef:	xor    r9d,r9d
  4026f2:	xor    edx,edx
  4026f4:	call   0x412268
  4026f9:	lea    rcx,[rip+0x1cf4c]        # 0x41f64c
  402700:	call   0x401560
  402705:	mov    rcx,QWORD PTR [rsp+0x110]
  40270d:	lea    rax,[rsp+0x80]
  402715:	mov    QWORD PTR [rsp+0x28],0x0
  40271e:	mov    QWORD PTR [rsp+0x48],rax
  402723:	lea    rax,[rsp+0x88]
  40272b:	mov    QWORD PTR [rsp+0x50],rax
  402730:	lea    rax,[rsp+0x90]
  402738:	mov    QWORD PTR [rsp+0x58],rax
  40273d:	lea    rax,[rsp+0x98]
  402745:	mov    QWORD PTR [rsp+0x60],rax
  40274a:	lea    rax,[rsp+0xa0]
  402752:	mov    QWORD PTR [rsp+0x68],rax
  402757:	lea    rax,[rsp+0xa8]
  40275f:	mov    QWORD PTR [rsp+0x70],rax
  402764:	mov    rdx,QWORD PTR [rsp+0x28]
  402769:	call   0x4122a8
  40276e:	test   rax,rax
  402771:	mov    QWORD PTR [rsp+0x28],rax
  402776:	je     0x402ad7
  40277c:	cmp    QWORD PTR [rax+0x10],0x0
  402781:	mov    QWORD PTR [rsp+0x80],rax
  402789:	mov    rcx,rax
  40278c:	je     0x4027b4
  40278e:	mov    rcx,QWORD PTR [rsp+0x48]
  402793:	xor    r9d,r9d
  402796:	mov    r8d,ebp
  402799:	xor    edx,edx
  40279b:	call   0x412268
  4027a0:	lea    rcx,[rip+0x1cea5]        # 0x41f64c
  4027a7:	call   0x401560
  4027ac:	mov    rcx,QWORD PTR [rsp+0x80]
  4027b4:	lea    rax,[rsp+0xb0]
  4027bc:	mov    QWORD PTR [rsp+0x30],0x0
  4027c5:	mov    QWORD PTR [rsp+0x40],rax
  4027ca:	mov    rdx,QWORD PTR [rsp+0x30]
  4027cf:	call   0x4122a8
  4027d4:	test   rax,rax
  4027d7:	mov    QWORD PTR [rsp+0x30],rax
  4027dc:	je     0x402aca
  4027e2:	cmp    QWORD PTR [rax+0x10],0x0
  4027e7:	mov    QWORD PTR [rsp+0x88],rax
  4027ef:	mov    rcx,rax
  4027f2:	je     0x40281a
  4027f4:	mov    rcx,QWORD PTR [rsp+0x50]
  4027f9:	xor    r9d,r9d
  4027fc:	mov    r8d,ebp
  4027ff:	xor    edx,edx
  402801:	call   0x412268
  402806:	lea    rcx,[rip+0x1ce3f]        # 0x41f64c
  40280d:	call   0x401560
  402812:	mov    rcx,QWORD PTR [rsp+0x88]
  40281a:	lea    rsi,[rsp+0xb8]
  402822:	mov    QWORD PTR [rsp+0x38],0x0
  40282b:	mov    rdx,QWORD PTR [rsp+0x38]
  402830:	call   0x4122a8
  402835:	test   rax,rax
  402838:	mov    QWORD PTR [rsp+0x38],rax
  40283d:	je     0x402abd
  402843:	cmp    QWORD PTR [rax+0x10],0x0
  402848:	mov    QWORD PTR [rsp+0x90],rax
  402850:	mov    rcx,rax
  402853:	je     0x40287b
  402855:	mov    rcx,QWORD PTR [rsp+0x58]
  40285a:	xor    r9d,r9d
  40285d:	mov    r8d,ebp
  402860:	xor    edx,edx
  402862:	call   0x412268
  402867:	lea    rcx,[rip+0x1cdde]        # 0x41f64c
  40286e:	call   0x401560
  402873:	mov    rcx,QWORD PTR [rsp+0x90]
  40287b:	xor    r12d,r12d
  40287e:	mov    rdx,r12
  402881:	call   0x4122a8
  402886:	test   rax,rax
  402889:	mov    r12,rax
  40288c:	je     0x402ab0
  402892:	cmp    QWORD PTR [r12+0x10],0x0
  402898:	mov    QWORD PTR [rsp+0x98],r12
  4028a0:	mov    rcx,r12
  4028a3:	je     0x4028cb
  4028a5:	mov    rcx,QWORD PTR [rsp+0x60]
  4028aa:	xor    r9d,r9d
  4028ad:	mov    r8d,ebp
  4028b0:	xor    edx,edx
  4028b2:	call   0x412268
  4028b7:	lea    rcx,[rip+0x1cd8e]        # 0x41f64c
  4028be:	call   0x401560
  4028c3:	mov    rcx,QWORD PTR [rsp+0x98]
  4028cb:	xor    r13d,r13d
  4028ce:	mov    QWORD PTR [rsp+0x78],r12
  4028d3:	mov    r15,QWORD PTR [rsp+0x40]
  4028d8:	mov    rdx,r13
  4028db:	call   0x4122a8
  4028e0:	test   rax,rax
  4028e3:	mov    r13,rax
  4028e6:	je     0x402a9e
  4028ec:	cmp    QWORD PTR [r13+0x10],0x0
  4028f1:	mov    QWORD PTR [rsp+0xa0],r13
  4028f9:	mov    rcx,r13
  4028fc:	je     0x402924
  4028fe:	mov    rcx,QWORD PTR [rsp+0x68]
  402903:	xor    r9d,r9d
  402906:	mov    r8d,ebp
  402909:	xor    edx,edx
  40290b:	call   0x412268
  402910:	lea    rcx,[rip+0x1cd35]        # 0x41f64c
  402917:	call   0x401560
  40291c:	mov    rcx,QWORD PTR [rsp+0xa0]
  402924:	xor    r14d,r14d
  402927:	mov    rdx,r14
  40292a:	call   0x4122a8
  40292f:	test   rax,rax
  402932:	mov    r14,rax
  402935:	je     0x402a82
  40293b:	cmp    QWORD PTR [r14+0x10],0x0
  402940:	mov    QWORD PTR [rsp+0xa8],r14
  402948:	mov    rcx,r14
  40294b:	je     0x402973
  40294d:	mov    rcx,QWORD PTR [rsp+0x70]
  402952:	xor    r9d,r9d
  402955:	mov    r8d,ebp
  402958:	xor    edx,edx
  40295a:	call   0x412268
  40295f:	lea    rcx,[rip+0x1cce6]        # 0x41f64c
  402966:	call   0x401560
  40296b:	mov    rcx,QWORD PTR [rsp+0xa8]
  402973:	xor    r12d,r12d
  402976:	mov    rdx,r12
  402979:	call   0x4122a8
  40297e:	test   rax,rax
  402981:	mov    r12,rax
  402984:	je     0x402a66
  40298a:	cmp    QWORD PTR [r12+0x10],0x0
  402990:	mov    QWORD PTR [rsp+0xb0],r12
  402998:	mov    rcx,r12
  40299b:	je     0x4029c1
  40299d:	xor    r9d,r9d
  4029a0:	mov    r8d,ebp
  4029a3:	xor    edx,edx
  4029a5:	mov    rcx,r15
  4029a8:	call   0x412268
  4029ad:	lea    rcx,[rip+0x1cc98]        # 0x41f64c
  4029b4:	call   0x401560
  4029b9:	mov    rcx,QWORD PTR [rsp+0xb0]
  4029c1:	xor    edi,edi
  4029c3:	mov    rdx,rdi
  4029c6:	call   0x4122a8
  4029cb:	test   rax,rax
  4029ce:	mov    rdi,rax
  4029d1:	je     0x402a4a
  4029d3:	cmp    QWORD PTR [rdi+0x10],0x0
  4029d8:	mov    QWORD PTR [rsp+0xb8],rdi
  4029e0:	mov    rcx,rdi
  4029e3:	je     0x402a09
  4029e5:	xor    r9d,r9d
  4029e8:	mov    r8d,ebp
  4029eb:	xor    edx,edx
  4029ed:	mov    rcx,rsi
  4029f0:	call   0x412268
  4029f5:	lea    rcx,[rip+0x1cc50]        # 0x41f64c
  4029fc:	call   0x401560
  402a01:	mov    rcx,QWORD PTR [rsp+0xb8]
  402a09:	xor    ebx,ebx
  402a0b:	jmp    0x402a22
  402a0d:	nop    DWORD PTR [rax]
  402a10:	mov    rcx,rbx
  402a13:	mov    edx,ebp
  402a15:	call   0x4026c0
  402a1a:	mov    rcx,QWORD PTR [rsp+0xb8]
  402a22:	mov    rdx,rbx
  402a25:	call   0x4122a8
  402a2a:	test   rax,rax
  402a2d:	mov    rbx,rax
  402a30:	jne    0x402a10
  402a32:	mov    rcx,QWORD PTR [rsp+0xb0]
  402a3a:	mov    rdx,rdi
  402a3d:	call   0x4122a8
  402a42:	test   rax,rax
  402a45:	mov    rdi,rax
  402a48:	jne    0x4029d3
  402a4a:	mov    rcx,QWORD PTR [rsp+0xa8]
  402a52:	mov    rdx,r12
  402a55:	call   0x4122a8
  402a5a:	test   rax,rax
  402a5d:	mov    r12,rax
  402a60:	jne    0x40298a
  402a66:	mov    rcx,QWORD PTR [rsp+0xa0]
  402a6e:	mov    rdx,r14
  402a71:	call   0x4122a8
  402a76:	test   rax,rax
  402a79:	mov    r14,rax
  402a7c:	jne    0x40293b
  402a82:	mov    rcx,QWORD PTR [rsp+0x98]
  402a8a:	mov    rdx,r13
  402a8d:	call   0x4122a8
  402a92:	test   rax,rax
  402a95:	mov    r13,rax
  402a98:	jne    0x4028ec
  402a9e:	mov    r12,QWORD PTR [rsp+0x78]
  402aa3:	mov    rcx,QWORD PTR [rsp+0x90]
  402aab:	jmp    0x40287e
  402ab0:	mov    rcx,QWORD PTR [rsp+0x88]
  402ab8:	jmp    0x40282b
  402abd:	mov    rcx,QWORD PTR [rsp+0x80]
  402ac5:	jmp    0x4027ca
  402aca:	mov    rcx,QWORD PTR [rsp+0x110]
  402ad2:	jmp    0x402764
  402ad7:	add    rsp,0xc8
  402ade:	pop    rbx
  402adf:	pop    rsi
  402ae0:	pop    rdi
  402ae1:	pop    rbp
  402ae2:	pop    r12
  402ae4:	pop    r13
  402ae6:	pop    r14
  402ae8:	pop    r15
  402aea:	ret    
  402aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	push   rdi
  402af1:	push   rsi
  402af2:	push   rbx
  402af3:	sub    rsp,0xa0
  402afa:	mov    rdi,rcx
  402afd:	call   0x412130
  402b02:	mov    rdx,QWORD PTR [rdi+0x8]
  402b06:	lea    r9,[rip+0x1c8b6]        # 0x41f3c3
  402b0d:	mov    r8,QWORD PTR [rdi]
  402b10:	lea    rcx,[rip+0x1cc53]        # 0x41f76a
  402b17:	test   rdx,rdx
  402b1a:	cmovne r9,rdx
  402b1e:	test   eax,eax
  402b20:	lea    rdx,[rip+0x1cc3b]        # 0x41f762
  402b27:	lea    rax,[rip+0x1cc2c]        # 0x41f75a
  402b2e:	cmovne rdx,rax
  402b32:	call   0x401560
  402b37:	cmp    DWORD PTR [rdi+0x10],0x1
  402b3b:	jbe    0x402d00
  402b41:	mov    rbx,QWORD PTR [rdi+0x20]
  402b45:	test   rbx,rbx
  402b48:	je     0x402b86
  402b4a:	lea    rcx,[rip+0x1cc62]        # 0x41f7b3
  402b51:	call   0x401560
  402b56:	mov    edx,DWORD PTR [rbx]
  402b58:	test   edx,edx
  402b5a:	je     0x402b7a
  402b5c:	nop    DWORD PTR [rax+0x0]
  402b60:	mov    r8d,DWORD PTR [rbx+0x4]
  402b64:	lea    rcx,[rip+0x1cc62]        # 0x41f7cd
  402b6b:	add    rbx,0x8
  402b6f:	call   0x401560
  402b74:	mov    edx,DWORD PTR [rbx]
  402b76:	test   edx,edx
  402b78:	jne    0x402b60
  402b7a:	lea    rcx,[rip+0x1cacb]        # 0x41f64c
  402b81:	call   0x401560
  402b86:	mov    rbx,QWORD PTR [rdi+0x28]
  402b8a:	test   rbx,rbx
  402b8d:	je     0x402bcd
  402b8f:	lea    rcx,[rip+0x1cc3e]        # 0x41f7d4
  402b96:	call   0x401560
  402b9b:	mov    ecx,DWORD PTR [rbx]
  402b9d:	cmp    ecx,0xffffffff
  402ba0:	je     0x402bc1
  402ba2:	call   0x412368
  402ba7:	lea    rcx,[rip+0x1cc43]        # 0x41f7f1
  402bae:	add    rbx,0x4
  402bb2:	mov    rdx,rax
  402bb5:	call   0x401560
  402bba:	mov    ecx,DWORD PTR [rbx]
  402bbc:	cmp    ecx,0xffffffff
  402bbf:	jne    0x402ba2
  402bc1:	lea    rcx,[rip+0x1ca84]        # 0x41f64c
  402bc8:	call   0x401560
  402bcd:	mov    rsi,QWORD PTR [rdi+0x30]
  402bd1:	test   rsi,rsi
  402bd4:	je     0x402c2b
  402bd6:	lea    rcx,[rip+0x1cc18]        # 0x41f7f5
  402bdd:	lea    rbx,[rsp+0x20]
  402be2:	call   0x401560
  402be7:	mov    r9d,DWORD PTR [rsi]
  402bea:	test   r9d,r9d
  402bed:	je     0x402c1f
  402bef:	nop
  402bf0:	lea    r8,[rip+0x1c7bb]        # 0x41f3b2
  402bf7:	mov    edx,0x10
  402bfc:	mov    rcx,rbx
  402bff:	add    rsi,0x4
  402c03:	call   0x401be0
  402c08:	lea    rcx,[rip+0x1cbe2]        # 0x41f7f1
  402c0f:	mov    rdx,rbx
  402c12:	call   0x401560
  402c17:	mov    r9d,DWORD PTR [rsi]
  402c1a:	test   r9d,r9d
  402c1d:	jne    0x402bf0
  402c1f:	lea    rcx,[rip+0x1ca26]        # 0x41f64c
  402c26:	call   0x401560
  402c2b:	mov    rbx,QWORD PTR [rdi+0x38]
  402c2f:	test   rbx,rbx
  402c32:	je     0x402c7b
  402c34:	lea    rcx,[rip+0x1cbd6]        # 0x41f811
  402c3b:	call   0x401560
  402c40:	mov    ecx,DWORD PTR [rbx]
  402c42:	cmp    ecx,0xffffffff
  402c45:	je     0x402c6f
  402c47:	nop    WORD PTR [rax+rax*1+0x0]
  402c50:	call   0x412360
  402c55:	lea    rcx,[rip+0x1cb95]        # 0x41f7f1
  402c5c:	add    rbx,0x4
  402c60:	mov    rdx,rax
  402c63:	call   0x401560
  402c68:	mov    ecx,DWORD PTR [rbx]
  402c6a:	cmp    ecx,0xffffffff
  402c6d:	jne    0x402c50
  402c6f:	lea    rcx,[rip+0x1c9d6]        # 0x41f64c
  402c76:	call   0x401560
  402c7b:	mov    rsi,QWORD PTR [rdi+0x40]
  402c7f:	test   rsi,rsi
  402c82:	je     0x402cd7
  402c84:	lea    rcx,[rip+0x1cba5]        # 0x41f830
  402c8b:	lea    rbx,[rsp+0x20]
  402c90:	call   0x401560
  402c95:	mov    r9,QWORD PTR [rsi]
  402c98:	test   r9,r9
  402c9b:	je     0x402ccb
  402c9d:	nop    DWORD PTR [rax]
  402ca0:	xor    r8d,r8d
  402ca3:	mov    edx,0x80
  402ca8:	mov    rcx,rbx
  402cab:	call   0x4123a0
  402cb0:	lea    rcx,[rip+0x1cb3a]        # 0x41f7f1
  402cb7:	add    rsi,0x8
  402cbb:	mov    rdx,rbx
  402cbe:	call   0x401560
  402cc3:	mov    r9,QWORD PTR [rsi]
  402cc6:	test   r9,r9
  402cc9:	jne    0x402ca0
  402ccb:	lea    rcx,[rip+0x1c97a]        # 0x41f64c
  402cd2:	call   0x401560
  402cd7:	mov    rcx,QWORD PTR [rdi+0x50]
  402cdb:	test   rcx,rcx
  402cde:	je     0x402ceb
  402ce0:	mov    edx,0x3
  402ce5:	call   0x4026c0
  402cea:	nop
  402ceb:	add    rsp,0xa0
  402cf2:	pop    rbx
  402cf3:	pop    rsi
  402cf4:	pop    rdi
  402cf5:	ret    
  402cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d00:	lea    rcx,[rip+0x1ca70]        # 0x41f777
  402d07:	call   0x401560
  402d0c:	mov    eax,DWORD PTR [rdi+0x18]
  402d0f:	and    eax,0x3000
  402d14:	cmp    eax,0x2000
  402d19:	je     0x402d62
  402d1b:	cmp    eax,0x3000
  402d20:	je     0x402d54
  402d22:	cmp    eax,0x1000
  402d27:	je     0x402d46
  402d29:	lea    rcx,[rip+0x1ca80]        # 0x41f7b0
  402d30:	call   0x401560
  402d35:	lea    rcx,[rip+0x1c910]        # 0x41f64c
  402d3c:	call   0x401560
  402d41:	jmp    0x402b41
  402d46:	lea    rcx,[rip+0x1ca57]        # 0x41f7a4
  402d4d:	call   0x401560
  402d52:	jmp    0x402d35
  402d54:	lea    rcx,[rip+0x1ca39]        # 0x41f794
  402d5b:	call   0x401560
  402d60:	jmp    0x402d35
  402d62:	lea    rcx,[rip+0x1ca41]        # 0x41f7aa
  402d69:	call   0x401560
  402d6e:	jmp    0x402d35
  402d70:	push   r13
  402d72:	push   r12
  402d74:	push   rbp
  402d75:	push   rdi
  402d76:	push   rsi
  402d77:	push   rbx
  402d78:	sub    rsp,0x38
  402d7c:	test   rcx,rcx
  402d7f:	je     0x402ec7
  402d85:	test   edx,edx
  402d87:	mov    edi,edx
  402d89:	mov    rbp,rcx
  402d8c:	jne    0x402db0
  402d8e:	call   0x4120a8
  402d93:	mov    rbx,rax
  402d96:	test   rbx,rbx
  402d99:	je     0x402dbd
  402d9b:	mov    rcx,rbx
  402d9e:	add    rsp,0x38
  402da2:	pop    rbx
  402da3:	pop    rsi
  402da4:	pop    rdi
  402da5:	pop    rbp
  402da6:	pop    r12
  402da8:	pop    r13
  402daa:	jmp    0x402af0
  402daf:	nop
  402db0:	call   0x412098
  402db5:	mov    rbx,rax
  402db8:	test   rbx,rbx
  402dbb:	jne    0x402d9b
  402dbd:	mov    rcx,rbp
  402dc0:	xor    r12d,r12d
  402dc3:	call   0x4120c0
  402dc8:	test   rax,rax
  402dcb:	mov    r13,rax
  402dce:	je     0x402ea5
  402dd4:	test   edi,edi
  402dd6:	mov    esi,DWORD PTR [r13+0x0]
  402dda:	jne    0x402e20
  402ddc:	nop    DWORD PTR [rax+0x0]
  402de0:	mov    rcx,rbx
  402de3:	call   0x412128
  402de8:	test   rax,rax
  402deb:	mov    rbx,rax
  402dee:	je     0x402e70
  402df4:	cmp    esi,DWORD PTR [rax+0x14]
  402df7:	jne    0x402de0
  402df9:	mov    rcx,rax
  402dfc:	call   0x412138
  402e01:	test   eax,eax
  402e03:	je     0x402de0
  402e05:	mov    rcx,rbx
  402e08:	mov    r12d,0x1
  402e0e:	call   0x402af0
  402e13:	test   edi,edi
  402e15:	mov    esi,DWORD PTR [r13+0x0]
  402e19:	je     0x402de0
  402e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e20:	mov    rcx,rbx
  402e23:	call   0x412128
  402e28:	test   rax,rax
  402e2b:	mov    rbx,rax
  402e2e:	je     0x402e51
  402e30:	cmp    esi,DWORD PTR [rbx+0x14]
  402e33:	jne    0x402e20
  402e35:	mov    rcx,rbx
  402e38:	call   0x412130
  402e3d:	test   eax,eax
  402e3f:	jne    0x402e05
  402e41:	mov    rcx,rbx
  402e44:	call   0x412128
  402e49:	test   rax,rax
  402e4c:	mov    rbx,rax
  402e4f:	jne    0x402e30
  402e51:	test   r12d,r12d
  402e54:	lea    rax,[rip+0x1c9f4]        # 0x41f84f
  402e5b:	je     0x402e7c
  402e5d:	add    rsp,0x38
  402e61:	pop    rbx
  402e62:	pop    rsi
  402e63:	pop    rdi
  402e64:	pop    rbp
  402e65:	pop    r12
  402e67:	pop    r13
  402e69:	ret    
  402e6a:	nop    WORD PTR [rax+rax*1+0x0]
  402e70:	test   r12d,r12d
  402e73:	lea    rax,[rip+0x1c9de]        # 0x41f858
  402e7a:	jne    0x402e98
  402e7c:	lea    r8,[rip+0x1c9fd]        # 0x41f880
  402e83:	mov    QWORD PTR [rsp+0x20],rax
  402e88:	mov    r9,rbp
  402e8b:	mov    edx,0x10
  402e90:	xor    ecx,ecx
  402e92:	call   0x412308
  402e97:	nop
  402e98:	add    rsp,0x38
  402e9c:	pop    rbx
  402e9d:	pop    rsi
  402e9e:	pop    rdi
  402e9f:	pop    rbp
  402ea0:	pop    r12
  402ea2:	pop    r13
  402ea4:	ret    
  402ea5:	lea    r8,[rip+0x1ca5c]        # 0x41f908
  402eac:	mov    r9,rbp
  402eaf:	mov    edx,0x10
  402eb4:	xor    ecx,ecx
  402eb6:	add    rsp,0x38
  402eba:	pop    rbx
  402ebb:	pop    rsi
  402ebc:	pop    rdi
  402ebd:	pop    rbp
  402ebe:	pop    r12
  402ec0:	pop    r13
  402ec2:	jmp    0x412308
  402ec7:	lea    r8,[rip+0x1c993]        # 0x41f861
  402ece:	mov    edx,0x10
  402ed3:	add    rsp,0x38
  402ed7:	pop    rbx
  402ed8:	pop    rsi
  402ed9:	pop    rdi
  402eda:	pop    rbp
  402edb:	pop    r12
  402edd:	pop    r13
  402edf:	jmp    0x412308
  402ee4:	xchg   ax,ax
  402ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ef0:	push   r15
  402ef2:	push   r14
  402ef4:	push   r13
  402ef6:	push   r12
  402ef8:	push   rbp
  402ef9:	push   rdi
  402efa:	push   rsi
  402efb:	push   rbx
  402efc:	sub    rsp,0x98
  402f03:	mov    rbp,rdx
  402f06:	mov    QWORD PTR [rsp+0xe0],rcx
  402f0e:	mov    edx,0x3a
  402f13:	mov    rcx,rbp
  402f16:	mov    r13,r8
  402f19:	mov    rsi,r9
  402f1c:	call   0x419860
  402f21:	test   rax,rax
  402f24:	mov    r14,rax
  402f27:	je     0x403220
  402f2d:	mov    edi,eax
  402f2f:	sub    edi,ebp
  402f31:	mov    r12,QWORD PTR [rsi]
  402f34:	test   r12,r12
  402f37:	je     0x4033a0
  402f3d:	movsxd rdi,edi
  402f40:	mov    rbx,rsi
  402f43:	mov    r15,r12
  402f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f50:	mov    r8,rdi
  402f53:	mov    rdx,r15
  402f56:	mov    rcx,rbp
  402f59:	call   0x419830
  402f5e:	test   eax,eax
  402f60:	jne    0x402f73
  402f62:	mov    rcx,r15
  402f65:	call   0x419840
  402f6a:	cmp    rax,rdi
  402f6d:	je     0x402ff1
  402f73:	add    rbx,0x28
  402f77:	mov    r15,QWORD PTR [rbx]
  402f7a:	test   r15,r15
  402f7d:	jne    0x402f50
  402f7f:	cmp    BYTE PTR [rbp+0x0],0x6e
  402f83:	je     0x4032f0
  402f89:	test   BYTE PTR [rbx+0x8],0x2
  402f8d:	lea    rax,[rip+0x1c99d]        # 0x41f931
  402f94:	cmovne r13,rax
  402f98:	test   r12,r12
  402f9b:	je     0x402fd1
  402f9d:	mov    rbx,rsi
  402fa0:	lea    rsi,[rip+0x1c98e]        # 0x41f935
  402fa7:	mov    rdi,r12
  402faa:	mov    ecx,0x7
  402faf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402fb1:	jne    0x402fc5
  402fb3:	mov    rcx,r12
  402fb6:	call   0x419840
  402fbb:	cmp    rax,0x7
  402fbf:	je     0x4033a8
  402fc5:	add    rbx,0x28
  402fc9:	mov    r12,QWORD PTR [rbx]
  402fcc:	test   r12,r12
  402fcf:	jne    0x402fa0
  402fd1:	lea    r8,[rip+0x1c965]        # 0x41f93d
  402fd8:	mov    r9,rbp
  402fdb:	mov    edx,0x10
  402fe0:	xor    ecx,ecx
  402fe2:	call   0x412308
  402fe7:	mov    eax,0xffffffea
  402fec:	jmp    0x40316d
  402ff1:	mov    edx,DWORD PTR [rbx+0x8]
  402ff4:	test   dl,0x2
  402ff7:	jne    0x4032e0
  402ffd:	test   r13,r13
  403000:	mov    edx,DWORD PTR [rbx+0x8]
  403003:	jne    0x40300e
  403005:	test   dl,0x1
  403008:	jne    0x403377
  40300e:	test   dh,0xc0
  403011:	jne    0x403090
  403013:	mov    eax,edx
  403015:	and    dh,0x80
  403018:	mov    rsi,QWORD PTR [rbx+0x10]
  40301c:	jne    0x4030a7
  403022:	test   al,0x8
  403024:	jne    0x40313f
  40302a:	test   BYTE PTR [rbx+0x8],0x82
  40302e:	jne    0x403181
  403034:	test   ah,0x4
  403037:	jne    0x403230
  40303d:	test   eax,0x10000
  403042:	jne    0x403291
  403048:	test   ah,0x1
  40304b:	jne    0x4031e8
  403051:	test   eax,0x20000
  403056:	jne    0x4032b3
  40305c:	mov    r9,QWORD PTR [rbx+0x10]
  403060:	test   r9,r9
  403063:	je     0x403161
  403069:	mov    r8,r13
  40306c:	mov    rdx,rbp
  40306f:	mov    rcx,QWORD PTR [rsp+0xe0]
  403077:	call   r9
  40307a:	test   eax,eax
  40307c:	mov    esi,eax
  40307e:	js     0x4033b6
  403084:	mov    eax,DWORD PTR [rbx+0x8]
  403087:	jmp    0x403161
  40308c:	nop    DWORD PTR [rax+0x0]
  403090:	mov    rsi,QWORD PTR [rsp+0xe0]
  403098:	mov    eax,edx
  40309a:	add    rsi,QWORD PTR [rbx+0x10]
  40309e:	and    dh,0x80
  4030a1:	je     0x403022
  4030a7:	mov    eax,DWORD PTR [rsi+0x8]
  4030aa:	mov    rcx,QWORD PTR [rsi]
  4030ad:	lea    edi,[rax+0x1]
  4030b0:	cmp    edi,0x7fffffe
  4030b6:	jg     0x403465
  4030bc:	movsxd rdx,edi
  4030bf:	mov    r8d,0x10
  4030c5:	call   0x412240
  4030ca:	test   rax,rax
  4030cd:	mov    r12,rax
  4030d0:	je     0x40341f
  4030d6:	mov    edx,DWORD PTR [rsi+0x8]
  4030d9:	mov    r8d,edi
  4030dc:	sub    r8d,edx
  4030df:	shl    edx,0x4
  4030e2:	shl    r8d,0x4
  4030e6:	movsxd rcx,edx
  4030e9:	xor    edx,edx
  4030eb:	add    rcx,rax
  4030ee:	movsxd r8,r8d
  4030f1:	call   0x419878
  4030f6:	lea    rax,[r14+0x1]
  4030fa:	lea    rcx,[rip+0x1c2c2]        # 0x41f3c3
  403101:	test   r14,r14
  403104:	mov    DWORD PTR [rsi+0x8],edi
  403107:	mov    QWORD PTR [rsi],r12
  40310a:	cmovne rcx,rax
  40310e:	call   0x412220
  403113:	test   rax,rax
  403116:	je     0x403401
  40311c:	movsxd rdx,DWORD PTR [rsi+0x8]
  403120:	mov    rcx,QWORD PTR [rsi]
  403123:	shl    rdx,0x4
  403127:	mov    QWORD PTR [rcx+rdx*1-0x10],rax
  40312c:	mov    rax,QWORD PTR [rsi]
  40312f:	lea    rsi,[rax+rdx*1-0x8]
  403134:	mov    eax,DWORD PTR [rbx+0x8]
  403137:	test   al,0x8
  403139:	je     0x40302a
  40313f:	mov    rcx,r13
  403142:	call   0x412220
  403147:	mov    rcx,rsi
  40314a:	mov    rdi,rax
  40314d:	call   0x4123b8
  403152:	test   rdi,rdi
  403155:	je     0x403401
  40315b:	mov    eax,DWORD PTR [rbx+0x8]
  40315e:	mov    QWORD PTR [rsi],rdi
  403161:	test   ah,0x8
  403164:	jne    0x403418
  40316a:	and    eax,0x1
  40316d:	add    rsp,0x98
  403174:	pop    rbx
  403175:	pop    rsi
  403176:	pop    rdi
  403177:	pop    rbp
  403178:	pop    r12
  40317a:	pop    r13
  40317c:	pop    r14
  40317e:	pop    r15
  403180:	ret    
  403181:	lea    rdx,[rsp+0x50]
  403186:	mov    rcx,r13
  403189:	call   0x4121f8
  40318e:	mov    rax,QWORD PTR [rsp+0x50]
  403193:	cmp    BYTE PTR [rax],0x0
  403196:	jne    0x403530
  40319c:	movsd  xmm1,QWORD PTR [rip+0x1dc44]        # 0x420de8
  4031a4:	ucomisd xmm1,xmm0
  4031a8:	ja     0x40353c
  4031ae:	ucomisd xmm0,QWORD PTR [rip+0x1dc3a]        # 0x420df0
  4031b6:	ja     0x40353c
  4031bc:	cvttsd2si rax,xmm0
  4031c1:	pxor   xmm1,xmm1
  4031c5:	cvtsi2sd xmm1,rax
  4031ca:	ucomisd xmm0,xmm1
  4031ce:	jp     0x403424
  4031d4:	jne    0x403424
  4031da:	cvttsd2si eax,xmm0
  4031de:	mov    DWORD PTR [rsi],eax
  4031e0:	mov    eax,DWORD PTR [rbx+0x8]
  4031e3:	jmp    0x403161
  4031e8:	lea    rdx,[rsp+0x50]
  4031ed:	mov    rcx,r13
  4031f0:	call   0x4121f8
  4031f5:	mov    rax,QWORD PTR [rsp+0x50]
  4031fa:	cmp    BYTE PTR [rax],0x0
  4031fd:	jne    0x4034e8
  403203:	pxor   xmm2,xmm2
  403207:	mov    eax,DWORD PTR [rbx+0x8]
  40320a:	cvtsd2ss xmm2,xmm0
  40320e:	movss  DWORD PTR [rsi],xmm2
  403212:	jmp    0x403161
  403217:	nop    WORD PTR [rax+rax*1+0x0]
  403220:	mov    rcx,rbp
  403223:	call   0x419840
  403228:	mov    edi,eax
  40322a:	jmp    0x402f31
  40322f:	nop
  403230:	lea    rdx,[rsp+0x50]
  403235:	mov    rcx,r13
  403238:	call   0x4121f8
  40323d:	mov    rax,QWORD PTR [rsp+0x50]
  403242:	cmp    BYTE PTR [rax],0x0
  403245:	jne    0x403524
  40324b:	movsd  xmm1,QWORD PTR [rip+0x1dba5]        # 0x420df8
  403253:	ucomisd xmm1,xmm0
  403257:	ja     0x403518
  40325d:	ucomisd xmm0,QWORD PTR [rip+0x1db9b]        # 0x420e00
  403265:	ja     0x403518
  40326b:	cvttsd2si rax,xmm0
  403270:	pxor   xmm1,xmm1
  403274:	cvtsi2sd xmm1,rax
  403279:	ucomisd xmm0,xmm1
  40327d:	jp     0x403493
  403283:	jne    0x403493
  403289:	mov    QWORD PTR [rsi],rax
  40328c:	jmp    0x403084
  403291:	lea    rcx,[rsp+0x50]
  403296:	mov    r8d,0x1
  40329c:	mov    rdx,r13
  40329f:	call   0x412258
  4032a4:	test   eax,eax
  4032a6:	js     0x403482
  4032ac:	mov    rax,QWORD PTR [rsp+0x50]
  4032b1:	jmp    0x403289
  4032b3:	lea    rdx,[rsp+0x50]
  4032b8:	mov    rcx,r13
  4032bb:	call   0x4121f8
  4032c0:	mov    rax,QWORD PTR [rsp+0x50]
  4032c5:	cmp    BYTE PTR [rax],0x0
  4032c8:	jne    0x4034b8
  4032ce:	movsd  QWORD PTR [rsi],xmm0
  4032d2:	mov    eax,DWORD PTR [rbx+0x8]
  4032d5:	jmp    0x403161
  4032da:	nop    WORD PTR [rax+rax*1+0x0]
  4032e0:	lea    r13,[rip+0x1c64a]        # 0x41f931
  4032e7:	jmp    0x40300e
  4032ec:	nop    DWORD PTR [rax+0x0]
  4032f0:	cmp    BYTE PTR [rbp+0x1],0x6f
  4032f4:	jne    0x402f89
  4032fa:	lea    r15,[rbp+0x2]
  4032fe:	mov    edx,0x3a
  403303:	mov    rcx,r15
  403306:	call   0x419860
  40330b:	test   rax,rax
  40330e:	je     0x40340b
  403314:	sub    eax,r15d
  403317:	test   r12,r12
  40331a:	je     0x402fd1
  403320:	cdqe   
  403322:	mov    rbx,rsi
  403325:	mov    rdi,r12
  403328:	mov    QWORD PTR [rsp+0x48],rax
  40332d:	jmp    0x403340
  40332f:	nop
  403330:	add    rbx,0x28
  403334:	mov    rdi,QWORD PTR [rbx]
  403337:	test   rdi,rdi
  40333a:	je     0x402f98
  403340:	mov    r8,QWORD PTR [rsp+0x48]
  403345:	mov    rdx,rdi
  403348:	mov    rcx,r15
  40334b:	call   0x419830
  403350:	test   eax,eax
  403352:	jne    0x403330
  403354:	mov    rcx,rdi
  403357:	call   0x419840
  40335c:	cmp    rax,QWORD PTR [rsp+0x48]
  403361:	jne    0x403330
  403363:	test   BYTE PTR [rbx+0x8],0x2
  403367:	lea    rax,[rip+0x1c5c5]        # 0x41f933
  40336e:	cmovne r13,rax
  403372:	jmp    0x402ffd
  403377:	lea    r8,[rip+0x1c5da]        # 0x41f958
  40337e:	mov    r9,rbp
  403381:	mov    edx,0x10
  403386:	xor    ecx,ecx
  403388:	call   0x412308
  40338d:	mov    eax,0xffffffea
  403392:	jmp    0x40316d
  403397:	nop    WORD PTR [rax+rax*1+0x0]
  4033a0:	mov    rbx,rsi
  4033a3:	jmp    0x402f7f
  4033a8:	test   r12,r12
  4033ab:	jne    0x402ffd
  4033b1:	jmp    0x402fd1
  4033b6:	lea    rbx,[rsp+0x50]
  4033bb:	lea    rdi,[rsp+0x50]
  4033c0:	xor    eax,eax
  4033c2:	mov    ecx,0x8
  4033c7:	mov    r8d,0x40
  4033cd:	rep stos QWORD PTR es:[rdi],rax
  4033d0:	mov    rdx,rbx
  4033d3:	mov    ecx,esi
  4033d5:	call   0x412218
  4033da:	lea    r8,[rip+0x1c5af]        # 0x41f990
  4033e1:	mov    QWORD PTR [rsp+0x28],rbx
  4033e6:	mov    QWORD PTR [rsp+0x20],rbp
  4033eb:	mov    r9,r13
  4033ee:	mov    edx,0x10
  4033f3:	xor    ecx,ecx
  4033f5:	call   0x412308
  4033fa:	mov    eax,esi
  4033fc:	jmp    0x40316d
  403401:	mov    eax,0xfffffff4
  403406:	jmp    0x40316d
  40340b:	mov    rcx,r15
  40340e:	call   0x419840
  403413:	jmp    0x403317
  403418:	xor    ecx,ecx
  40341a:	call   0x401cb0
  40341f:	call   0x419c16
  403424:	lea    r8,[rip+0x1c2d5]        # 0x41f700
  40342b:	movsd  xmm3,QWORD PTR [rip+0x1d9bd]        # 0x420df0
  403433:	movsd  xmm4,QWORD PTR [rip+0x1d9ad]        # 0x420de8
  40343b:	movsd  QWORD PTR [rsp+0x30],xmm3
  403441:	movsd  QWORD PTR [rsp+0x28],xmm4
  403447:	mov    QWORD PTR [rsp+0x20],r13
  40344c:	mov    r9,rbp
  40344f:	xor    ecx,ecx
  403451:	mov    edx,0x8
  403456:	call   0x412308
  40345b:	mov    ecx,0x1
  403460:	call   0x401cb0
  403465:	lea    r8,[rip+0x1c50e]        # 0x41f97a
  40346c:	xor    ecx,ecx
  40346e:	mov    edx,0x10
  403473:	call   0x412308
  403478:	mov    ecx,0x1
  40347d:	call   0x401cb0
  403482:	mov    r8d,0x1
  403488:	mov    rdx,r13
  40348b:	mov    rcx,rbp
  40348e:	call   0x419bd5
  403493:	lea    r8,[rip+0x1c266]        # 0x41f700
  40349a:	movsd  xmm5,QWORD PTR [rip+0x1d95e]        # 0x420e00
  4034a2:	movsd  xmm3,QWORD PTR [rip+0x1d94e]        # 0x420df8
  4034aa:	movsd  QWORD PTR [rsp+0x30],xmm5
  4034b0:	movsd  QWORD PTR [rsp+0x28],xmm3
  4034b6:	jmp    0x403447
  4034b8:	movsd  xmm3,QWORD PTR [rip+0x1d948]        # 0x420e08
  4034c0:	mov    QWORD PTR [rsp+0x20],r13
  4034c5:	movsd  xmm4,QWORD PTR [rip+0x1d943]        # 0x420e10
  4034cd:	mov    r9,rbp
  4034d0:	movsd  QWORD PTR [rsp+0x30],xmm3
  4034d6:	lea    r8,[rip+0x1c1c3]        # 0x41f6a0
  4034dd:	movsd  QWORD PTR [rsp+0x28],xmm4
  4034e3:	jmp    0x40344f
  4034e8:	movsd  xmm4,QWORD PTR [rip+0x1d918]        # 0x420e08
  4034f0:	mov    QWORD PTR [rsp+0x20],r13
  4034f5:	movsd  xmm5,QWORD PTR [rip+0x1d913]        # 0x420e10
  4034fd:	mov    r9,rbp
  403500:	movsd  QWORD PTR [rsp+0x30],xmm4
  403506:	lea    r8,[rip+0x1c193]        # 0x41f6a0
  40350d:	movsd  QWORD PTR [rsp+0x28],xmm5
  403513:	jmp    0x40344f
  403518:	lea    r8,[rip+0x1c1a9]        # 0x41f6c8
  40351f:	jmp    0x40349a
  403524:	lea    r8,[rip+0x1c175]        # 0x41f6a0
  40352b:	jmp    0x40349a
  403530:	lea    r8,[rip+0x1c169]        # 0x41f6a0
  403537:	jmp    0x40342b
  40353c:	lea    r8,[rip+0x1c185]        # 0x41f6c8
  403543:	jmp    0x40342b
  403548:	nop    DWORD PTR [rax+rax*1+0x0]
  403550:	push   r12
  403552:	push   rbp
  403553:	push   rdi
  403554:	push   rsi
  403555:	push   rbx
  403556:	sub    rsp,0x20
  40355a:	mov    rax,QWORD PTR [rip+0x25adf]        # 0x429040
  403561:	mov    rdi,QWORD PTR [rsp+0x70]
  403566:	mov    rbx,rcx
  403569:	mov    DWORD PTR [rsp+0x58],edx
  40356d:	mov    QWORD PTR [rsp+0x60],r8
  403572:	mov    rsi,r9
  403575:	test   rax,rax
  403578:	je     0x4036a8
  40357e:	mov    ecx,DWORD PTR [rip+0x25ab4]        # 0x429038
  403584:	mov    QWORD PTR [rsp+0x60],rax
  403589:	mov    DWORD PTR [rsp+0x58],ecx
  40358d:	test   rdi,rdi
  403590:	je     0x403630
  403596:	mov    r12d,0x1
  40359c:	mov    eax,0x1
  4035a1:	cmp    eax,ecx
  4035a3:	jge    0x4035d4
  4035a5:	mov    r8,QWORD PTR [rsp+0x60]
  4035aa:	lea    ebp,[rax+0x1]
  4035ad:	test   r12d,r12d
  4035b0:	cdqe   
  4035b2:	lea    r10,[rax*8+0x0]
  4035ba:	mov    rdx,QWORD PTR [r8+rax*8]
  4035be:	je     0x4035c5
  4035c0:	cmp    BYTE PTR [rdx],0x2d
  4035c3:	je     0x4035e0
  4035c5:	mov    rcx,rbx
  4035c8:	call   rdi
  4035ca:	mov    ecx,DWORD PTR [rsp+0x58]
  4035ce:	mov    eax,ebp
  4035d0:	cmp    eax,ecx
  4035d2:	jl     0x4035a5
  4035d4:	add    rsp,0x20
  4035d8:	pop    rbx
  4035d9:	pop    rsi
  4035da:	pop    rdi
  4035db:	pop    rbp
  4035dc:	pop    r12
  4035de:	ret    
  4035df:	nop
  4035e0:	movzx  eax,BYTE PTR [rdx+0x1]
  4035e4:	test   al,al
  4035e6:	je     0x4035c5
  4035e8:	cmp    al,0x2d
  4035ea:	jne    0x4035f2
  4035ec:	cmp    BYTE PTR [rdx+0x2],0x0
  4035f0:	je     0x403620
  4035f2:	mov    r8,QWORD PTR [r8+r10*1+0x8]
  4035f7:	add    rdx,0x1
  4035fb:	mov    r9,rsi
  4035fe:	mov    rcx,rbx
  403601:	call   0x402ef0
  403606:	test   eax,eax
  403608:	js     0x4036c0
  40360e:	add    eax,ebp
  403610:	mov    ecx,DWORD PTR [rsp+0x58]
  403614:	mov    r12d,0x1
  40361a:	jmp    0x4035a1
  40361c:	nop    DWORD PTR [rax+0x0]
  403620:	mov    eax,ebp
  403622:	xor    r12d,r12d
  403625:	jmp    0x4035a1
  40362a:	nop    WORD PTR [rax+rax*1+0x0]
  403630:	mov    edx,0x1
  403635:	mov    eax,0x1
  40363a:	jmp    0x403643
  40363c:	nop    DWORD PTR [rax+0x0]
  403640:	movsxd rax,edi
  403643:	cmp    eax,ecx
  403645:	jge    0x4035d4
  403647:	mov    r8,QWORD PTR [rsp+0x60]
  40364c:	test   edx,edx
  40364e:	lea    edi,[rax+0x1]
  403651:	lea    r10,[rax*8+0x0]
  403659:	mov    rax,QWORD PTR [r8+rax*8]
  40365d:	je     0x403640
  40365f:	cmp    BYTE PTR [rax],0x2d
  403662:	mov    edx,0x1
  403667:	jne    0x403640
  403669:	movzx  r9d,BYTE PTR [rax+0x1]
  40366e:	test   r9b,r9b
  403671:	je     0x403640
  403673:	cmp    r9b,0x2d
  403677:	jne    0x40367f
  403679:	cmp    BYTE PTR [rax+0x2],0x0
  40367d:	je     0x4036a4
  40367f:	mov    r8,QWORD PTR [r8+r10*1+0x8]
  403684:	lea    rdx,[rax+0x1]
  403688:	mov    r9,rsi
  40368b:	mov    rcx,rbx
  40368e:	call   0x402ef0
  403693:	test   eax,eax
  403695:	js     0x4036c0
  403697:	add    edi,eax
  403699:	mov    ecx,DWORD PTR [rsp+0x58]
  40369d:	mov    edx,0x1
  4036a2:	jmp    0x403640
  4036a4:	xor    edx,edx
  4036a6:	jmp    0x403640
  4036a8:	lea    rcx,[rsp+0x58]
  4036ad:	lea    rdx,[rsp+0x60]
  4036b2:	call   0x401910
  4036b7:	mov    ecx,DWORD PTR [rsp+0x58]
  4036bb:	jmp    0x40358d
  4036c0:	mov    ecx,0x1
  4036c5:	call   0x401cb0
  4036ca:	nop
  4036cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4036d0:	push   r15
  4036d2:	push   r14
  4036d4:	push   r13
  4036d6:	push   r12
  4036d8:	push   rbp
  4036d9:	push   rdi
  4036da:	push   rsi
  4036db:	push   rbx
  4036dc:	sub    rsp,0xe8
  4036e3:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  4036eb:	movaps XMMWORD PTR [rsp+0xb0],xmm7
  4036f3:	movaps XMMWORD PTR [rsp+0xc0],xmm8
  4036fc:	movaps XMMWORD PTR [rsp+0xd0],xmm9
  403705:	lea    r8,[rip+0x1c2b4]        # 0x41f9c0
  40370c:	xor    ebp,ebp
  40370e:	xor    r12d,r12d
  403711:	mov    rdi,rdx
  403714:	mov    r15,rcx
  403717:	xor    ecx,ecx
  403719:	mov    rax,QWORD PTR [rdx]
  40371c:	mov    rdx,QWORD PTR [rdx+0x8]
  403720:	mov    QWORD PTR [rsp+0x20],rdx
  403725:	mov    r9,QWORD PTR [rax]
  403728:	mov    edx,0x30
  40372d:	call   0x412308
  403732:	mov    eax,DWORD PTR [rdi+0x18]
  403735:	test   eax,eax
  403737:	jle    0x403aa0
  40373d:	lea    rax,[rsp+0x60]
  403742:	movsd  xmm9,QWORD PTR [rip+0x1d6ad]        # 0x420df8
  40374b:	movsd  xmm8,QWORD PTR [rip+0x1d6ac]        # 0x420e00
  403754:	mov    QWORD PTR [rsp+0x40],rax
  403759:	movsd  xmm7,QWORD PTR [rip+0x1d687]        # 0x420de8
  403761:	movsd  xmm6,QWORD PTR [rip+0x1d687]        # 0x420df0
  403769:	jmp    0x4037f7
  40376e:	xchg   ax,ax
  403770:	mov    rsi,r15
  403773:	mov    eax,edx
  403775:	add    rsi,QWORD PTR [rbx+0x10]
  403779:	and    dh,0x80
  40377c:	jne    0x403863
  403782:	test   al,0x8
  403784:	jne    0x40393d
  40378a:	test   BYTE PTR [rbx+0x8],0x82
  40378e:	jne    0x403964
  403794:	test   ah,0x4
  403797:	jne    0x4039c0
  40379d:	test   eax,0x10000
  4037a2:	jne    0x403a20
  4037a8:	test   ah,0x1
  4037ab:	jne    0x403a42
  4037b1:	test   eax,0x20000
  4037b6:	jne    0x403a71
  4037bc:	mov    r9,QWORD PTR [rbx+0x10]
  4037c0:	test   r9,r9
  4037c3:	je     0x4037dc
  4037c5:	mov    r8,r13
  4037c8:	mov    rdx,r14
  4037cb:	mov    rcx,r15
  4037ce:	call   r9
  4037d1:	test   eax,eax
  4037d3:	js     0x403b28
  4037d9:	mov    eax,DWORD PTR [rbx+0x8]
  4037dc:	test   ah,0x8
  4037df:	jne    0x403b81
  4037e5:	add    r12d,0x1
  4037e9:	add    rbp,0x18
  4037ed:	cmp    DWORD PTR [rdi+0x18],r12d
  4037f1:	jle    0x403aa0
  4037f7:	mov    rcx,QWORD PTR [rdi]
  4037fa:	mov    rbx,rbp
  4037fd:	add    rbx,QWORD PTR [rdi+0x10]
  403801:	mov    eax,DWORD PTR [rcx+0x10]
  403804:	mov    rdx,QWORD PTR [rbx]
  403807:	test   eax,eax
  403809:	je     0x403814
  40380b:	test   DWORD PTR [rdx+0x8],eax
  40380e:	je     0x403af0
  403814:	mov    rax,QWORD PTR [rbx+0x10]
  403818:	mov    r9,QWORD PTR [rbx+0x8]
  40381c:	lea    r8,[rip+0x1c29d]        # 0x41fac0
  403823:	xor    ecx,ecx
  403825:	mov    QWORD PTR [rsp+0x28],rax
  40382a:	mov    rax,QWORD PTR [rdx+0x18]
  40382e:	mov    edx,0x30
  403833:	mov    QWORD PTR [rsp+0x20],rax
  403838:	call   0x412308
  40383d:	mov    r13,QWORD PTR [rbx+0x10]
  403841:	mov    r14,QWORD PTR [rbx+0x8]
  403845:	mov    rbx,QWORD PTR [rbx]
  403848:	mov    edx,DWORD PTR [rbx+0x8]
  40384b:	test   dh,0xc0
  40384e:	jne    0x403770
  403854:	mov    eax,edx
  403856:	and    dh,0x80
  403859:	mov    rsi,QWORD PTR [rbx+0x10]
  40385d:	je     0x403782
  403863:	mov    rcx,r14
  403866:	mov    edx,0x3a
  40386b:	call   0x419860
  403870:	mov    r10,rax
  403873:	mov    eax,DWORD PTR [rsi+0x8]
  403876:	mov    rcx,QWORD PTR [rsi]
  403879:	lea    r9d,[rax+0x1]
  40387d:	cmp    r9d,0x7fffffe
  403884:	jg     0x403c09
  40388a:	movsxd rdx,r9d
  40388d:	mov    r8d,0x10
  403893:	mov    QWORD PTR [rsp+0x50],r10
  403898:	mov    DWORD PTR [rsp+0x48],r9d
  40389d:	call   0x412240
  4038a2:	test   rax,rax
  4038a5:	mov    r9d,DWORD PTR [rsp+0x48]
  4038aa:	mov    r10,QWORD PTR [rsp+0x50]
  4038af:	je     0x403ca3
  4038b5:	mov    ecx,DWORD PTR [rsi+0x8]
  4038b8:	mov    r8d,r9d
  4038bb:	xor    edx,edx
  4038bd:	mov    QWORD PTR [rsp+0x58],r10
  4038c2:	mov    DWORD PTR [rsp+0x50],r9d
  4038c7:	mov    QWORD PTR [rsp+0x48],rax
  4038cc:	sub    r8d,ecx
  4038cf:	shl    ecx,0x4
  4038d2:	shl    r8d,0x4
  4038d6:	movsxd rcx,ecx
  4038d9:	add    rcx,rax
  4038dc:	movsxd r8,r8d
  4038df:	call   0x419878
  4038e4:	mov    r10,QWORD PTR [rsp+0x58]
  4038e9:	mov    r9d,DWORD PTR [rsp+0x50]
  4038ee:	lea    rax,[rip+0x1bace]        # 0x41f3c3
  4038f5:	mov    r11,QWORD PTR [rsp+0x48]
  4038fa:	lea    rcx,[r10+0x1]
  4038fe:	test   r10,r10
  403901:	mov    DWORD PTR [rsi+0x8],r9d
  403905:	mov    QWORD PTR [rsi],r11
  403908:	cmove  rcx,rax
  40390c:	call   0x412220
  403911:	test   rax,rax
  403914:	je     0x403b75
  40391a:	movsxd rdx,DWORD PTR [rsi+0x8]
  40391e:	mov    rcx,QWORD PTR [rsi]
  403921:	shl    rdx,0x4
  403925:	mov    QWORD PTR [rcx+rdx*1-0x10],rax
  40392a:	mov    rax,QWORD PTR [rsi]
  40392d:	lea    rsi,[rax+rdx*1-0x8]
  403932:	mov    eax,DWORD PTR [rbx+0x8]
  403935:	test   al,0x8
  403937:	je     0x40378a
  40393d:	mov    rcx,r13
  403940:	call   0x412220
  403945:	mov    rcx,rsi
  403948:	mov    r13,rax
  40394b:	call   0x4123b8
  403950:	test   r13,r13
  403953:	je     0x403b75
  403959:	mov    QWORD PTR [rsi],r13
  40395c:	mov    eax,DWORD PTR [rbx+0x8]
  40395f:	jmp    0x4037dc
  403964:	mov    rdx,QWORD PTR [rsp+0x40]
  403969:	mov    rcx,r13
  40396c:	call   0x4121f8
  403971:	mov    rax,QWORD PTR [rsp+0x60]
  403976:	cmp    BYTE PTR [rax],0x0
  403979:	jne    0x403c00
  40397f:	ucomisd xmm7,xmm0
  403983:	ja     0x403bc9
  403989:	ucomisd xmm0,xmm6
  40398d:	ja     0x403bc9
  403993:	cvttsd2si rax,xmm0
  403998:	pxor   xmm1,xmm1
  40399c:	cvtsi2sd xmm1,rax
  4039a1:	ucomisd xmm0,xmm1
  4039a5:	jp     0x403bf7
  4039ab:	jne    0x403bf7
  4039b1:	cvttsd2si eax,xmm0
  4039b5:	mov    DWORD PTR [rsi],eax
  4039b7:	mov    eax,DWORD PTR [rbx+0x8]
  4039ba:	jmp    0x4037dc
  4039bf:	nop
  4039c0:	mov    rdx,QWORD PTR [rsp+0x40]
  4039c5:	mov    rcx,r13
  4039c8:	call   0x4121f8
  4039cd:	mov    rax,QWORD PTR [rsp+0x60]
  4039d2:	cmp    BYTE PTR [rax],0x0
  4039d5:	jne    0x403bee
  4039db:	ucomisd xmm9,xmm0
  4039e0:	ja     0x403b88
  4039e6:	ucomisd xmm0,xmm8
  4039eb:	ja     0x403b88
  4039f1:	cvttsd2si rax,xmm0
  4039f6:	pxor   xmm1,xmm1
  4039fa:	cvtsi2sd xmm1,rax
  4039ff:	ucomisd xmm0,xmm1
  403a03:	jp     0x403c26
  403a09:	jne    0x403c26
  403a0f:	mov    QWORD PTR [rsi],rax
  403a12:	jmp    0x4037d9
  403a17:	nop    WORD PTR [rax+rax*1+0x0]
  403a20:	mov    rcx,QWORD PTR [rsp+0x40]
  403a25:	mov    r8d,0x1
  403a2b:	mov    rdx,r13
  403a2e:	call   0x412258
  403a33:	test   eax,eax
  403a35:	js     0x403c92
  403a3b:	mov    rax,QWORD PTR [rsp+0x60]
  403a40:	jmp    0x403a0f
  403a42:	mov    rdx,QWORD PTR [rsp+0x40]
  403a47:	mov    rcx,r13
  403a4a:	call   0x4121f8
  403a4f:	mov    rax,QWORD PTR [rsp+0x60]
  403a54:	cmp    BYTE PTR [rax],0x0
  403a57:	jne    0x403c62
  403a5d:	pxor   xmm2,xmm2
  403a61:	mov    eax,DWORD PTR [rbx+0x8]
  403a64:	cvtsd2ss xmm2,xmm0
  403a68:	movss  DWORD PTR [rsi],xmm2
  403a6c:	jmp    0x4037dc
  403a71:	mov    rdx,QWORD PTR [rsp+0x40]
  403a76:	mov    rcx,r13
  403a79:	call   0x4121f8
  403a7e:	mov    rax,QWORD PTR [rsp+0x60]
  403a83:	cmp    BYTE PTR [rax],0x0
  403a86:	jne    0x403c32
  403a8c:	movsd  QWORD PTR [rsi],xmm0
  403a90:	mov    eax,DWORD PTR [rbx+0x8]
  403a93:	jmp    0x4037dc
  403a98:	nop    DWORD PTR [rax+rax*1+0x0]
  403aa0:	lea    r8,[rip+0x1bf41]        # 0x41f9e8
  403aa7:	mov    edx,0x30
  403aac:	xor    ecx,ecx
  403aae:	call   0x412308
  403ab3:	xor    eax,eax
  403ab5:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  403abd:	movaps xmm7,XMMWORD PTR [rsp+0xb0]
  403ac5:	movaps xmm8,XMMWORD PTR [rsp+0xc0]
  403ace:	movaps xmm9,XMMWORD PTR [rsp+0xd0]
  403ad7:	add    rsp,0xe8
  403ade:	pop    rbx
  403adf:	pop    rsi
  403ae0:	pop    rdi
  403ae1:	pop    rbp
  403ae2:	pop    r12
  403ae4:	pop    r13
  403ae6:	pop    r14
  403ae8:	pop    r15
  403aea:	ret    
  403aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  403af0:	mov    rax,QWORD PTR [rdi+0x8]
  403af4:	mov    r9,QWORD PTR [rbx+0x8]
  403af8:	lea    r8,[rip+0x1bf19]        # 0x41fa18
  403aff:	mov    QWORD PTR [rsp+0x30],rax
  403b04:	mov    rax,QWORD PTR [rcx]
  403b07:	xor    ecx,ecx
  403b09:	mov    QWORD PTR [rsp+0x28],rax
  403b0e:	mov    rax,QWORD PTR [rdx+0x18]
  403b12:	mov    edx,0x10
  403b17:	mov    QWORD PTR [rsp+0x20],rax
  403b1c:	call   0x412308
  403b21:	mov    eax,0xffffffea
  403b26:	jmp    0x403ab5
  403b28:	lea    rsi,[rsp+0x60]
  403b2d:	lea    rdi,[rsp+0x60]
  403b32:	mov    ebx,eax
  403b34:	mov    ecx,0x8
  403b39:	xor    eax,eax
  403b3b:	mov    r8d,0x40
  403b41:	rep stos QWORD PTR es:[rdi],rax
  403b44:	mov    rdx,rsi
  403b47:	mov    ecx,ebx
  403b49:	call   0x412218
  403b4e:	lea    r8,[rip+0x1be3b]        # 0x41f990
  403b55:	mov    QWORD PTR [rsp+0x28],rsi
  403b5a:	mov    QWORD PTR [rsp+0x20],r14
  403b5f:	mov    r9,r13
  403b62:	mov    edx,0x10
  403b67:	xor    ecx,ecx
  403b69:	call   0x412308
  403b6e:	mov    eax,ebx
  403b70:	jmp    0x403ab5
  403b75:	mov    ebx,0xfffffff4
  403b7a:	mov    eax,ebx
  403b7c:	jmp    0x403ab5
  403b81:	xor    ecx,ecx
  403b83:	call   0x401cb0
  403b88:	lea    r8,[rip+0x1bb39]        # 0x41f6c8
  403b8f:	movsd  xmm5,QWORD PTR [rip+0x1d269]        # 0x420e00
  403b97:	movsd  xmm3,QWORD PTR [rip+0x1d259]        # 0x420df8
  403b9f:	movsd  QWORD PTR [rsp+0x30],xmm5
  403ba5:	movsd  QWORD PTR [rsp+0x28],xmm3
  403bab:	mov    QWORD PTR [rsp+0x20],r13
  403bb0:	mov    r9,r14
  403bb3:	xor    ecx,ecx
  403bb5:	mov    edx,0x8
  403bba:	call   0x412308
  403bbf:	mov    ecx,0x1
  403bc4:	call   0x401cb0
  403bc9:	lea    r8,[rip+0x1baf8]        # 0x41f6c8
  403bd0:	movsd  xmm3,QWORD PTR [rip+0x1d218]        # 0x420df0
  403bd8:	movsd  xmm4,QWORD PTR [rip+0x1d208]        # 0x420de8
  403be0:	movsd  QWORD PTR [rsp+0x30],xmm3
  403be6:	movsd  QWORD PTR [rsp+0x28],xmm4
  403bec:	jmp    0x403bab
  403bee:	lea    r8,[rip+0x1baab]        # 0x41f6a0
  403bf5:	jmp    0x403b8f
  403bf7:	lea    r8,[rip+0x1bb02]        # 0x41f700
  403bfe:	jmp    0x403bd0
  403c00:	lea    r8,[rip+0x1ba99]        # 0x41f6a0
  403c07:	jmp    0x403bd0
  403c09:	lea    r8,[rip+0x1bd6a]        # 0x41f97a
  403c10:	xor    ecx,ecx
  403c12:	mov    edx,0x10
  403c17:	call   0x412308
  403c1c:	mov    ecx,0x1
  403c21:	call   0x401cb0
  403c26:	lea    r8,[rip+0x1bad3]        # 0x41f700
  403c2d:	jmp    0x403b8f
  403c32:	movsd  xmm3,QWORD PTR [rip+0x1d1ce]        # 0x420e08
  403c3a:	mov    QWORD PTR [rsp+0x20],r13
  403c3f:	movsd  xmm4,QWORD PTR [rip+0x1d1c9]        # 0x420e10
  403c47:	mov    r9,r14
  403c4a:	movsd  QWORD PTR [rsp+0x30],xmm3
  403c50:	lea    r8,[rip+0x1ba49]        # 0x41f6a0
  403c57:	movsd  QWORD PTR [rsp+0x28],xmm4
  403c5d:	jmp    0x403bb3
  403c62:	movsd  xmm4,QWORD PTR [rip+0x1d19e]        # 0x420e08
  403c6a:	mov    QWORD PTR [rsp+0x20],r13
  403c6f:	movsd  xmm5,QWORD PTR [rip+0x1d199]        # 0x420e10
  403c77:	mov    r9,r14
  403c7a:	movsd  QWORD PTR [rsp+0x30],xmm4
  403c80:	lea    r8,[rip+0x1ba19]        # 0x41f6a0
  403c87:	movsd  QWORD PTR [rsp+0x28],xmm5
  403c8d:	jmp    0x403bb3
  403c92:	mov    r8d,0x1
  403c98:	mov    rdx,r13
  403c9b:	mov    rcx,r14
  403c9e:	call   0x419bd5
  403ca3:	call   0x419c16
  403ca8:	nop
  403ca9:	nop    DWORD PTR [rax+0x0]
  403cb0:	push   r15
  403cb2:	push   r14
  403cb4:	push   r13
  403cb6:	push   r12
  403cb8:	push   rbp
  403cb9:	push   rdi
  403cba:	push   rsi
  403cbb:	push   rbx
  403cbc:	sub    rsp,0x48
  403cc0:	cmp    ecx,0x1
  403cc3:	jle    0x403d90
  403cc9:	mov    QWORD PTR [rsp+0x30],r9
  403cce:	mov    QWORD PTR [rsp+0x28],r8
  403cd3:	mov    r14,rdx
  403cd6:	mov    r13d,ecx
  403cd9:	mov    esi,0x1
  403cde:	jmp    0x403cec
  403ce0:	add    esi,0x1
  403ce3:	cmp    r13d,esi
  403ce6:	jle    0x403d90
  403cec:	movsxd rax,esi
  403cef:	mov    r12,QWORD PTR [r14+rax*8]
  403cf3:	cmp    BYTE PTR [r12],0x2d
  403cf8:	jne    0x403ce0
  403cfa:	lea    rbp,[r12+0x1]
  403cff:	mov    edx,0x3a
  403d04:	mov    rcx,rbp
  403d07:	call   0x419860
  403d0c:	test   rax,rax
  403d0f:	je     0x403dc4
  403d15:	sub    eax,ebp
  403d17:	mov    rbx,QWORD PTR [rsp+0x28]
  403d1c:	mov    rdx,QWORD PTR [rbx]
  403d1f:	test   rdx,rdx
  403d22:	mov    QWORD PTR [rsp+0x38],rdx
  403d27:	je     0x403d5b
  403d29:	movsxd rdi,eax
  403d2c:	mov    r15,rdx
  403d2f:	nop
  403d30:	mov    r8,rdi
  403d33:	mov    rdx,r15
  403d36:	mov    rcx,rbp
  403d39:	call   0x419830
  403d3e:	test   eax,eax
  403d40:	jne    0x403d4f
  403d42:	mov    rcx,r15
  403d45:	call   0x419840
  403d4a:	cmp    rax,rdi
  403d4d:	je     0x403da3
  403d4f:	add    rbx,0x28
  403d53:	mov    r15,QWORD PTR [rbx]
  403d56:	test   r15,r15
  403d59:	jne    0x403d30
  403d5b:	cmp    BYTE PTR [r12+0x1],0x6e
  403d61:	je     0x403dd1
  403d63:	mov    rdx,QWORD PTR [rsp+0x30]
  403d68:	mov    rcx,rbp
  403d6b:	call   0x419858
  403d70:	test   eax,eax
  403d72:	je     0x403e60
  403d78:	add    esi,0x1
  403d7b:	add    esi,0x1
  403d7e:	cmp    r13d,esi
  403d81:	jg     0x403cec
  403d87:	nop    WORD PTR [rax+rax*1+0x0]
  403d90:	xor    eax,eax
  403d92:	add    rsp,0x48
  403d96:	pop    rbx
  403d97:	pop    rsi
  403d98:	pop    rdi
  403d99:	pop    rbp
  403d9a:	pop    r12
  403d9c:	pop    r13
  403d9e:	pop    r14
  403da0:	pop    r15
  403da2:	ret    
  403da3:	mov    rdx,r15
  403da6:	mov    rcx,QWORD PTR [rsp+0x30]
  403dab:	call   0x419858
  403db0:	test   eax,eax
  403db2:	je     0x403e60
  403db8:	test   BYTE PTR [rbx+0x8],0x1
  403dbc:	je     0x403ce0
  403dc2:	jmp    0x403d78
  403dc4:	mov    rcx,rbp
  403dc7:	call   0x419840
  403dcc:	jmp    0x403d17
  403dd1:	cmp    BYTE PTR [r12+0x2],0x6f
  403dd7:	jne    0x403d63
  403dd9:	add    r12,0x3
  403ddd:	mov    edx,0x3a
  403de2:	mov    rcx,r12
  403de5:	call   0x419860
  403dea:	test   rax,rax
  403ded:	je     0x403e67
  403def:	mov    edi,eax
  403df1:	sub    edi,r12d
  403df4:	cmp    QWORD PTR [rsp+0x38],0x0
  403dfa:	je     0x403d63
  403e00:	movsxd rdi,edi
  403e03:	mov    rbx,QWORD PTR [rsp+0x28]
  403e08:	jmp    0x403e25
  403e0a:	nop    WORD PTR [rax+rax*1+0x0]
  403e10:	add    rbx,0x28
  403e14:	mov    rax,QWORD PTR [rbx]
  403e17:	test   rax,rax
  403e1a:	mov    QWORD PTR [rsp+0x38],rax
  403e1f:	je     0x403d63
  403e25:	mov    rdx,QWORD PTR [rsp+0x38]
  403e2a:	mov    r8,rdi
  403e2d:	mov    rcx,r12
  403e30:	call   0x419830
  403e35:	test   eax,eax
  403e37:	jne    0x403e10
  403e39:	mov    rcx,QWORD PTR [rsp+0x38]
  403e3e:	call   0x419840
  403e43:	cmp    rax,rdi
  403e46:	jne    0x403e10
  403e48:	mov    rdx,QWORD PTR [rsp+0x38]
  403e4d:	test   rdx,rdx
  403e50:	jne    0x403da6
  403e56:	jmp    0x403d63
  403e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e60:	mov    eax,esi
  403e62:	jmp    0x403d92
  403e67:	mov    rcx,r12
  403e6a:	call   0x419840
  403e6f:	mov    edi,eax
  403e71:	jmp    0x403df4
  403e73:	nop    DWORD PTR [rax]
  403e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e80:	push   r13
  403e82:	push   r12
  403e84:	push   rbp
  403e85:	push   rdi
  403e86:	push   rsi
  403e87:	push   rbx
  403e88:	sub    rsp,0xe8
  403e8f:	lea    rdi,[rip+0x1bc55]        # 0x41faeb
  403e96:	mov    rbx,rdx
  403e99:	mov    rbp,r8
  403e9c:	mov    rsi,rbx
  403e9f:	call   0x412090
  403ea4:	mov    QWORD PTR [rsp+0x30],rax
  403ea9:	call   0x412008
  403eae:	mov    QWORD PTR [rsp+0x38],rax
  403eb3:	call   0x412150
  403eb8:	mov    ecx,0x6
  403ebd:	mov    QWORD PTR [rsp+0x40],rax
  403ec2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403ec4:	je     0x404142
  403eca:	lea    rdi,[rip+0x1bc20]        # 0x41faf1
  403ed1:	mov    ecx,0x7
  403ed6:	mov    rsi,rbx
  403ed9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403edb:	je     0x404142
  403ee1:	mov    edx,0x3a
  403ee6:	mov    rcx,rbx
  403ee9:	call   0x419860
  403eee:	test   rax,rax
  403ef1:	je     0x404320
  403ef7:	sub    rax,rbx
  403efa:	lea    r12,[rsp+0x60]
  403eff:	mov    edx,0x80
  403f04:	lea    r8,[rax+0x1]
  403f08:	lea    rdi,[rsp+0x30]
  403f0d:	mov    rcx,r12
  403f10:	cmp    r8,0x80
  403f17:	cmova  r8,rdx
  403f1b:	mov    rdx,rbx
  403f1e:	call   0x412200
  403f23:	xor    r9d,r9d
  403f26:	xor    r8d,r8d
  403f29:	mov    DWORD PTR [rsp+0x20],0x3
  403f31:	mov    rdx,r12
  403f34:	mov    rcx,rdi
  403f37:	call   0x4122a0
  403f3c:	test   rax,rax
  403f3f:	je     0x403f4c
  403f41:	mov    ecx,DWORD PTR [rax+0x30]
  403f44:	test   ecx,ecx
  403f46:	jne    0x4040a1
  403f4c:	movzx  eax,BYTE PTR [rbx]
  403f4f:	cmp    al,0x61
  403f51:	sete   cl
  403f54:	cmp    al,0x76
  403f56:	sete   dl
  403f59:	or     cl,dl
  403f5b:	jne    0x404073
  403f61:	cmp    al,0x73
  403f63:	je     0x404073
  403f69:	lea    rcx,[rsp+0x38]
  403f6e:	xor    r9d,r9d
  403f71:	xor    r8d,r8d
  403f74:	mov    DWORD PTR [rsp+0x20],0x3
  403f7c:	mov    rdx,rbx
  403f7f:	call   0x4122a0
  403f84:	test   rax,rax
  403f87:	je     0x403f98
  403f89:	mov    r9d,DWORD PTR [rax+0x30]
  403f8d:	xor    edi,edi
  403f8f:	test   r9d,r9d
  403f92:	jne    0x4041c5
  403f98:	call   0x4121b8
  403f9d:	lea    rcx,[rsp+0x48]
  403fa2:	xor    r9d,r9d
  403fa5:	xor    r8d,r8d
  403fa8:	mov    DWORD PTR [rsp+0x20],0x3
  403fb0:	mov    rdx,rbx
  403fb3:	mov    QWORD PTR [rsp+0x48],rax
  403fb8:	call   0x4122a0
  403fbd:	test   rax,rax
  403fc0:	mov    r13,rax
  403fc3:	je     0x403fd0
  403fc5:	mov    eax,DWORD PTR [rax+0x30]
  403fc8:	test   eax,eax
  403fca:	jne    0x404240
  403fd0:	call   0x412180
  403fd5:	lea    rcx,[rsp+0x50]
  403fda:	xor    r9d,r9d
  403fdd:	xor    r8d,r8d
  403fe0:	mov    DWORD PTR [rsp+0x20],0x3
  403fe8:	mov    rdx,rbx
  403feb:	mov    QWORD PTR [rsp+0x50],rax
  403ff0:	call   0x4122a0
  403ff5:	test   rax,rax
  403ff8:	mov    rdi,rax
  403ffb:	je     0x404170
  404001:	mov    r12d,DWORD PTR [rax+0x30]
  404005:	test   r12d,r12d
  404008:	je     0x404170
  40400e:	call   0x412190
  404013:	xor    r9d,r9d
  404016:	mov    r8,rbp
  404019:	mov    rdx,rbx
  40401c:	mov    rcx,rax
  40401f:	mov    QWORD PTR [rsp+0x58],rax
  404024:	call   0x412278
  404029:	lea    rcx,[rsp+0x58]
  40402e:	mov    r12d,eax
  404031:	call   0x412188
  404036:	test   r12d,r12d
  404039:	js     0x404350
  40403f:	mov    esi,DWORD PTR [rdi+0x14]
  404042:	xor    r9d,r9d
  404045:	test   esi,esi
  404047:	jne    0x40405c
  404049:	movzx  eax,BYTE PTR [rbp+0x0]
  40404d:	sub    eax,0x2b
  404050:	and    eax,0xfffffffd
  404053:	cmp    al,0x1
  404055:	sbb    r9d,r9d
  404058:	and    r9d,0x20
  40405c:	lea    rcx,[rip+0x267a5]        # 0x42a808
  404063:	mov    r8,rbp
  404066:	mov    rdx,rbx
  404069:	call   0x412428
  40406e:	jmp    0x404107
  404073:	lea    rdx,[rbx+0x1]
  404077:	xor    r9d,r9d
  40407a:	xor    r8d,r8d
  40407d:	mov    DWORD PTR [rsp+0x20],0x2
  404085:	mov    rcx,rdi
  404088:	call   0x4122a0
  40408d:	test   rax,rax
  404090:	je     0x403f69
  404096:	mov    edx,DWORD PTR [rax+0x30]
  404099:	test   edx,edx
  40409b:	je     0x403f69
  4040a1:	mov    eax,DWORD PTR [rax+0x14]
  4040a4:	xor    r9d,r9d
  4040a7:	test   eax,eax
  4040a9:	je     0x404151
  4040af:	lea    rcx,[rip+0x26762]        # 0x42a818
  4040b6:	mov    r8,rbp
  4040b9:	mov    rdx,rbx
  4040bc:	call   0x412428
  4040c1:	lea    rcx,[rsp+0x38]
  4040c6:	xor    r9d,r9d
  4040c9:	xor    r8d,r8d
  4040cc:	mov    DWORD PTR [rsp+0x20],0x3
  4040d4:	mov    rdx,rbx
  4040d7:	call   0x4122a0
  4040dc:	test   rax,rax
  4040df:	je     0x4040f3
  4040e1:	mov    r8d,DWORD PTR [rax+0x30]
  4040e5:	mov    edi,0x1
  4040ea:	test   r8d,r8d
  4040ed:	jne    0x4041c5
  4040f3:	call   0x4121b8
  4040f8:	mov    QWORD PTR [rsp+0x48],rax
  4040fd:	call   0x412180
  404102:	mov    QWORD PTR [rsp+0x50],rax
  404107:	lea    rcx,[rsp+0x40]
  40410c:	xor    r9d,r9d
  40410f:	xor    r8d,r8d
  404112:	mov    rdx,rbx
  404115:	mov    DWORD PTR [rsp+0x20],0x3
  40411d:	call   0x4122a0
  404122:	xor    edx,edx
  404124:	test   rax,rax
  404127:	je     0x404130
  404129:	mov    edx,DWORD PTR [rax+0x30]
  40412c:	test   edx,edx
  40412e:	jne    0x4041a0
  404130:	mov    eax,edx
  404132:	add    rsp,0xe8
  404139:	pop    rbx
  40413a:	pop    rsi
  40413b:	pop    rdi
  40413c:	pop    rbp
  40413d:	pop    r12
  40413f:	pop    r13
  404141:	ret    
  404142:	mov    ecx,0x30
  404147:	call   0x4122d0
  40414c:	jmp    0x403ee1
  404151:	movzx  eax,BYTE PTR [rbp+0x0]
  404155:	sub    eax,0x2b
  404158:	and    eax,0xfffffffd
  40415b:	cmp    al,0x1
  40415d:	sbb    r9d,r9d
  404160:	and    r9d,0x20
  404164:	jmp    0x4040af
  404169:	nop    DWORD PTR [rax+0x0]
  404170:	lea    rcx,[rsp+0x40]
  404175:	xor    r9d,r9d
  404178:	xor    r8d,r8d
  40417b:	mov    rdx,rbx
  40417e:	mov    DWORD PTR [rsp+0x20],0x3
  404186:	call   0x4122a0
  40418b:	test   rax,rax
  40418e:	mov    edx,0xabafb008
  404193:	je     0x404130
  404195:	mov    ecx,DWORD PTR [rax+0x30]
  404198:	test   ecx,ecx
  40419a:	je     0x404130
  40419c:	nop    DWORD PTR [rax+0x0]
  4041a0:	mov    r10d,DWORD PTR [rax+0x14]
  4041a4:	xor    r9d,r9d
  4041a7:	test   r10d,r10d
  4041aa:	je     0x404220
  4041ac:	lea    rcx,[rip+0x2666d]        # 0x42a820
  4041b3:	mov    rdx,rbx
  4041b6:	mov    r8,rbp
  4041b9:	call   0x412428
  4041be:	xor    edx,edx
  4041c0:	jmp    0x404130
  4041c5:	mov    r11d,DWORD PTR [rax+0x14]
  4041c9:	xor    r9d,r9d
  4041cc:	test   r11d,r11d
  4041cf:	jne    0x4041e4
  4041d1:	movzx  eax,BYTE PTR [rbp+0x0]
  4041d5:	sub    eax,0x2b
  4041d8:	and    eax,0xfffffffd
  4041db:	cmp    al,0x1
  4041dd:	sbb    r9d,r9d
  4041e0:	and    r9d,0x20
  4041e4:	lea    rcx,[rip+0x26625]        # 0x42a810
  4041eb:	mov    r8,rbp
  4041ee:	mov    rdx,rbx
  4041f1:	call   0x412428
  4041f6:	test   edi,edi
  4041f8:	je     0x4040f3
  4041fe:	lea    r8,[rip+0x1b8f3]        # 0x41faf8
  404205:	mov    r9,rbx
  404208:	mov    edx,0x28
  40420d:	xor    ecx,ecx
  40420f:	call   0x412308
  404214:	jmp    0x4040f3
  404219:	nop    DWORD PTR [rax+0x0]
  404220:	movzx  eax,BYTE PTR [rbp+0x0]
  404224:	sub    eax,0x2b
  404227:	and    eax,0xfffffffd
  40422a:	cmp    al,0x1
  40422c:	sbb    r9d,r9d
  40422f:	and    r9d,0x20
  404233:	jmp    0x4041ac
  404238:	nop    DWORD PTR [rax+rax*1+0x0]
  404240:	call   0x4121c8
  404245:	xor    r9d,r9d
  404248:	mov    rsi,rax
  40424b:	mov    r8,rbp
  40424e:	mov    rdx,rbx
  404251:	mov    rcx,rax
  404254:	lea    rdi,[rip+0x1b979]        # 0x41fbd4
  40425b:	call   0x412278
  404260:	mov    rcx,rsi
  404263:	mov    r12d,eax
  404266:	mov    rsi,rbx
  404269:	call   0x4121c0
  40426e:	mov    ecx,0x5
  404273:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404275:	je     0x404330
  40427b:	lea    rdi,[rip+0x1b8a7]        # 0x41fb29
  404282:	mov    ecx,0x5
  404287:	mov    rsi,rbx
  40428a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40428c:	je     0x404330
  404292:	lea    rdi,[rip+0x1b895]        # 0x41fb2e
  404299:	mov    ecx,0x5
  40429e:	mov    rsi,rbx
  4042a1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042a3:	je     0x404330
  4042a9:	lea    rdi,[rip+0x1b883]        # 0x41fb33
  4042b0:	mov    ecx,0x5
  4042b5:	mov    rsi,rbx
  4042b8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042ba:	je     0x404330
  4042bc:	lea    rdi,[rip+0x1b875]        # 0x41fb38
  4042c3:	mov    ecx,0xb
  4042c8:	mov    rsi,rbx
  4042cb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042cd:	je     0x404330
  4042cf:	lea    rdi,[rip+0x1b86d]        # 0x41fb43
  4042d6:	mov    ecx,0xb
  4042db:	mov    rsi,rbx
  4042de:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042e0:	je     0x404330
  4042e2:	test   r12d,r12d
  4042e5:	js     0x404350
  4042e7:	mov    r13d,DWORD PTR [r13+0x14]
  4042eb:	xor    r9d,r9d
  4042ee:	test   r13d,r13d
  4042f1:	jne    0x404306
  4042f3:	movzx  eax,BYTE PTR [rbp+0x0]
  4042f7:	sub    eax,0x2b
  4042fa:	and    eax,0xfffffffd
  4042fd:	cmp    al,0x1
  4042ff:	sbb    r9d,r9d
  404302:	and    r9d,0x20
  404306:	lea    rcx,[rip+0x264f3]        # 0x42a800
  40430d:	mov    r8,rbp
  404310:	mov    rdx,rbx
  404313:	call   0x412428
  404318:	jmp    0x4040fd
  40431d:	nop    DWORD PTR [rax]
  404320:	mov    rcx,rbx
  404323:	call   0x419840
  404328:	add    rax,rbx
  40432b:	jmp    0x403ef7
  404330:	lea    r8,[rip+0x1b819]        # 0x41fb50
  404337:	mov    edx,0x10
  40433c:	xor    ecx,ecx
  40433e:	call   0x412308
  404343:	mov    edx,0xffffffea
  404348:	jmp    0x404130
  40434d:	nop    DWORD PTR [rax]
  404350:	lea    r8,[rip+0x1b863]        # 0x41fbba
  404357:	mov    edx,0x10
  40435c:	mov    r9,rbx
  40435f:	xor    ecx,ecx
  404361:	call   0x412308
  404366:	mov    edx,r12d
  404369:	jmp    0x404130
  40436e:	xchg   ax,ax
  404370:	push   r13
  404372:	push   r12
  404374:	push   rbp
  404375:	push   rdi
  404376:	push   rsi
  404377:	push   rbx
  404378:	sub    rsp,0x28
  40437c:	mov    edx,DWORD PTR [rcx+0x50]
  40437f:	xor    ebp,ebp
  404381:	xor    edi,edi
  404383:	mov    r12,rcx
  404386:	test   edx,edx
  404388:	jle    0x40442d
  40438e:	xchg   ax,ax
  404390:	mov    rsi,rbp
  404393:	add    rsi,QWORD PTR [r12+0x48]
  404398:	xor    ebx,ebx
  40439a:	xor    r13d,r13d
  40439d:	mov    eax,DWORD PTR [rsi+0x10]
  4043a0:	test   eax,eax
  4043a2:	jle    0x404412
  4043a4:	mov    rcx,rbx
  4043a7:	add    rcx,QWORD PTR [rsi+0x8]
  4043ab:	add    r13d,0x1
  4043af:	add    rcx,0x10
  4043b3:	call   0x4123b8
  4043b8:	mov    rcx,rbx
  4043bb:	add    rcx,QWORD PTR [rsi+0x8]
  4043bf:	add    rcx,0x20
  4043c3:	call   0x412440
  4043c8:	mov    rcx,rbx
  4043cb:	add    rcx,QWORD PTR [rsi+0x8]
  4043cf:	add    rcx,0x28
  4043d3:	call   0x412440
  4043d8:	mov    rcx,rbx
  4043db:	add    rcx,QWORD PTR [rsi+0x8]
  4043df:	add    rcx,0x30
  4043e3:	call   0x412440
  4043e8:	mov    rax,rbx
  4043eb:	add    rax,QWORD PTR [rsi+0x8]
  4043ef:	lea    rcx,[rax+0x38]
  4043f3:	call   0x412440
  4043f8:	mov    rax,rbx
  4043fb:	add    rax,QWORD PTR [rsi+0x8]
  4043ff:	add    rbx,0x48
  404403:	lea    rcx,[rax+0x40]
  404407:	call   0x412440
  40440c:	cmp    DWORD PTR [rsi+0x10],r13d
  404410:	jg     0x4043a4
  404412:	lea    rcx,[rsi+0x8]
  404416:	add    edi,0x1
  404419:	add    rbp,0x18
  40441d:	call   0x4123b8
  404422:	cmp    DWORD PTR [r12+0x50],edi
  404427:	jg     0x404390
  40442d:	lea    rcx,[r12+0x48]
  404432:	call   0x4123b8
  404437:	lea    rcx,[r12+0x68]
  40443c:	call   0x4123b8
  404441:	lea    rcx,[r12+0x10]
  404446:	call   0x4123b8
  40444b:	lea    rcx,[rip+0x263b6]        # 0x42a808
  404452:	call   0x412440
  404457:	lea    rcx,[rip+0x263a2]        # 0x42a800
  40445e:	call   0x412440
  404463:	lea    rcx,[rip+0x263a6]        # 0x42a810
  40446a:	call   0x412440
  40446f:	lea    rcx,[rip+0x263a2]        # 0x42a818
  404476:	call   0x412440
  40447b:	lea    rcx,[rip+0x2639e]        # 0x42a820
  404482:	add    rsp,0x28
  404486:	pop    rbx
  404487:	pop    rsi
  404488:	pop    rdi
  404489:	pop    rbp
  40448a:	pop    r12
  40448c:	pop    r13
  40448e:	jmp    0x412440
  404493:	nop    DWORD PTR [rax]
  404496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044a0:	push   r15
  4044a2:	push   r14
  4044a4:	push   r13
  4044a6:	push   r12
  4044a8:	push   rbp
  4044a9:	push   rdi
  4044aa:	push   rsi
  4044ab:	push   rbx
  4044ac:	sub    rsp,0x78
  4044b0:	mov    rax,QWORD PTR [rip+0x24b89]        # 0x429040
  4044b7:	mov    r12,QWORD PTR [rsp+0xe0]
  4044bf:	mov    rbx,rcx
  4044c2:	mov    DWORD PTR [rsp+0xc8],edx
  4044c9:	mov    QWORD PTR [rsp+0xd0],r8
  4044d1:	mov    QWORD PTR [rsp+0xd8],r9
  4044d9:	test   rax,rax
  4044dc:	je     0x404d70
  4044e2:	mov    edx,DWORD PTR [rip+0x24b50]        # 0x429038
  4044e8:	mov    QWORD PTR [rsp+0xd0],rax
  4044f0:	mov    DWORD PTR [rsp+0xc8],edx
  4044f7:	lea    rdi,[rbx+0x8]
  4044fb:	mov    rcx,rbx
  4044fe:	lea    rax,[rbx+0xa8]
  404505:	mov    QWORD PTR [rbx],0x0
  40450c:	and    rdi,0xfffffffffffffff8
  404510:	mov    QWORD PTR [rsp+0x58],rax
  404515:	xor    eax,eax
  404517:	sub    rcx,rdi
  40451a:	mov    QWORD PTR [rbx+0x98],0x0
  404525:	add    ecx,0xa0
  40452b:	shr    ecx,0x3
  40452e:	rep stos QWORD PTR es:[rdi],rax
  404531:	movsxd rax,DWORD PTR [rsp+0xe8]
  404539:	cmp    rax,0x5555554
  40453f:	mov    DWORD PTR [rbx+0x50],eax
  404542:	jbe    0x404560
  404544:	mov    QWORD PTR [rbx+0x48],0x0
  40454c:	mov    ecx,0x1
  404551:	call   0x401cb0
  404556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404560:	lea    rcx,[rax+rax*2]
  404564:	shl    rcx,0x3
  404568:	call   0x4122c0
  40456d:	test   rax,rax
  404570:	mov    QWORD PTR [rbx+0x48],rax
  404574:	je     0x40454c
  404576:	mov    edx,DWORD PTR [rbx+0x50]
  404579:	test   edx,edx
  40457b:	jle    0x4045a1
  40457d:	sub    edx,0x1
  404580:	lea    r8,[rdx+rdx*2+0x3]
  404585:	xor    edx,edx
  404587:	shl    r8,0x3
  40458b:	nop    DWORD PTR [rax+rax*1+0x0]
  404590:	lea    rcx,[r12+rdx*1]
  404594:	mov    QWORD PTR [rax+rdx*1],rcx
  404598:	add    rdx,0x18
  40459c:	cmp    rdx,r8
  40459f:	jne    0x404590
  4045a1:	lea    rax,[rip+0x1c828]        # 0x420dd0
  4045a8:	lea    r8,[rip+0x1ae06]        # 0x41f3b5
  4045af:	lea    rdx,[rip+0x1ae07]        # 0x41f3bd
  4045b6:	xor    r9d,r9d
  4045b9:	mov    ebp,0x1
  4045be:	mov    QWORD PTR [rbx],rax
  4045c1:	lea    rax,[rip+0x1adfb]        # 0x41f3c3
  4045c8:	mov    QWORD PTR [rbx+0x8],rax
  4045cc:	lea    rax,[rip+0x2622d]        # 0x42a800
  4045d3:	mov    rcx,rax
  4045d6:	mov    QWORD PTR [rsp+0x50],rax
  4045db:	call   0x412428
  4045e0:	lea    r8,[rip+0x1b5f2]        # 0x41fbd9
  4045e7:	mov    edx,0x30
  4045ec:	xor    ecx,ecx
  4045ee:	call   0x412308
  4045f3:	lea    rax,[rbx+0x58]
  4045f7:	mov    DWORD PTR [rsp+0x6c],0xfffffffe
  4045ff:	mov    rsi,rax
  404602:	mov    QWORD PTR [rsp+0x48],rax
  404607:	lea    rax,[rbx+0x60]
  40460b:	and    rax,0xfffffffffffffff8
  40460f:	mov    rdi,rax
  404612:	mov    QWORD PTR [rsp+0x60],rax
  404617:	mov    rax,rsi
  40461a:	sub    rax,rdi
  40461d:	add    eax,0x48
  404620:	and    eax,0xfffffff8
  404623:	mov    DWORD PTR [rsp+0x68],eax
  404627:	nop    WORD PTR [rax+rax*1+0x0]
  404630:	cmp    ebp,DWORD PTR [rsp+0xc8]
  404637:	jge    0x40480b
  40463d:	lea    eax,[rbp+0x1]
  404640:	mov    rdx,QWORD PTR [rsp+0xd0]
  404648:	lea    r8,[rip+0x1b5a6]        # 0x41fbf5
  40464f:	xor    ecx,ecx
  404651:	mov    DWORD PTR [rsp+0x30],eax
  404655:	movsxd rax,ebp
  404658:	lea    rsi,[rax*8+0x0]
  404660:	mov    QWORD PTR [rsp+0x38],rsi
  404665:	mov    rsi,QWORD PTR [rdx+rax*8]
  404669:	mov    edx,0x30
  40466e:	mov    r9,rsi
  404671:	call   0x412308
  404676:	cmp    BYTE PTR [rsi],0x2d
  404679:	je     0x404860
  40467f:	mov    r13,QWORD PTR [rbx+0x48]
  404683:	mov    eax,DWORD PTR [r13+0x10]
  404687:	mov    rcx,QWORD PTR [r13+0x8]
  40468b:	lea    edi,[rax+0x1]
  40468e:	cmp    edi,0x1c71c70
  404694:	jg     0x404e66
  40469a:	movsxd rbp,edi
  40469d:	mov    r8d,0x48
  4046a3:	mov    rdx,rbp
  4046a6:	call   0x412240
  4046ab:	test   rax,rax
  4046ae:	mov    r14,rax
  4046b1:	je     0x404e7e
  4046b7:	mov    eax,DWORD PTR [r13+0x10]
  4046bb:	mov    edx,edi
  4046bd:	sub    edx,eax
  4046bf:	lea    ecx,[rax+rax*8]
  4046c2:	lea    r8d,[rdx+rdx*8]
  4046c6:	xor    edx,edx
  4046c8:	shl    ecx,0x3
  4046cb:	shl    r8d,0x3
  4046cf:	movsxd rcx,ecx
  4046d2:	add    rcx,r14
  4046d5:	movsxd r8,r8d
  4046d8:	call   0x419878
  4046dd:	lea    rax,[rbp+rbp*8+0x0]
  4046e2:	mov    DWORD PTR [r13+0x10],edi
  4046e6:	mov    rdx,QWORD PTR [rbx+0x58]
  4046ea:	mov    QWORD PTR [r13+0x8],r14
  4046ee:	mov    rdi,QWORD PTR [rsp+0x50]
  4046f3:	lea    r8,[rip+0x1acbb]        # 0x41f3b5
  4046fa:	lea    rax,[r14+rax*8-0x48]
  4046ff:	xor    r9d,r9d
  404702:	mov    QWORD PTR [rax],rdx
  404705:	mov    rdx,QWORD PTR [rbx+0x60]
  404709:	mov    rcx,rdi
  40470c:	mov    QWORD PTR [rax+0x8],rdx
  404710:	mov    rdx,QWORD PTR [rbx+0x68]
  404714:	mov    QWORD PTR [rax+0x10],rdx
  404718:	mov    rdx,QWORD PTR [rbx+0x70]
  40471c:	mov    QWORD PTR [rax+0x18],rdx
  404720:	mov    rdx,QWORD PTR [rbx+0x78]
  404724:	mov    QWORD PTR [rax+0x20],rdx
  404728:	mov    rdx,QWORD PTR [rbx+0x80]
  40472f:	mov    QWORD PTR [rax+0x28],rdx
  404733:	mov    rdx,QWORD PTR [rbx+0x88]
  40473a:	mov    QWORD PTR [rax+0x8],rsi
  40473e:	mov    QWORD PTR [rax+0x30],rdx
  404742:	mov    rdx,QWORD PTR [r13+0x0]
  404746:	mov    QWORD PTR [rax],rdx
  404749:	mov    rdx,QWORD PTR [rdi]
  40474c:	mov    QWORD PTR [rax+0x38],rdx
  404750:	mov    rdx,QWORD PTR [rip+0x260b1]        # 0x42a808
  404757:	mov    QWORD PTR [rax+0x40],rdx
  40475b:	mov    rdx,QWORD PTR [rip+0x260b6]        # 0x42a818
  404762:	mov    QWORD PTR [rip+0x260ab],0x0        # 0x42a818
  40476d:	mov    QWORD PTR [rax+0x20],rdx
  404771:	mov    rdx,QWORD PTR [rip+0x26098]        # 0x42a810
  404778:	mov    QWORD PTR [rip+0x2608d],0x0        # 0x42a810
  404783:	mov    QWORD PTR [rax+0x28],rdx
  404787:	mov    rdx,QWORD PTR [rip+0x26092]        # 0x42a820
  40478e:	mov    QWORD PTR [rip+0x26087],0x0        # 0x42a820
  404799:	mov    QWORD PTR [rax+0x30],rdx
  40479d:	lea    rdx,[rip+0x1ac19]        # 0x41f3bd
  4047a4:	mov    QWORD PTR [rdi],0x0
  4047ab:	mov    QWORD PTR [rip+0x26052],0x0        # 0x42a808
  4047b6:	call   0x412428
  4047bb:	mov    rax,QWORD PTR [rsp+0x48]
  4047c0:	lea    r8,[rip+0x1b446]        # 0x41fc0d
  4047c7:	mov    edx,0x30
  4047cc:	mov    QWORD PTR [rax],0x0
  4047d3:	mov    rax,QWORD PTR [rsp+0x58]
  4047d8:	mov    QWORD PTR [rax-0x10],0x0
  4047e0:	mov    ecx,DWORD PTR [rsp+0x68]
  4047e4:	xor    eax,eax
  4047e6:	mov    rdi,QWORD PTR [rsp+0x60]
  4047eb:	shr    ecx,0x3
  4047ee:	rep stos QWORD PTR es:[rdi],rax
  4047f1:	mov    r9,QWORD PTR [r12]
  4047f5:	call   0x412308
  4047fa:	mov    ebp,DWORD PTR [rsp+0x30]
  4047fe:	cmp    ebp,DWORD PTR [rsp+0xc8]
  404805:	jl     0x40463d
  40480b:	mov    eax,DWORD PTR [rbx+0x70]
  40480e:	test   eax,eax
  404810:	jne    0x404820
  404812:	cmp    QWORD PTR [rip+0x25ffe],0x0        # 0x42a818
  40481a:	je     0x404d4f
  404820:	lea    r8,[rip+0x1b531]        # 0x41fd58
  404827:	mov    edx,0x18
  40482c:	xor    ecx,ecx
  40482e:	call   0x412308
  404833:	lea    r8,[rip+0x1b556]        # 0x41fd90
  40483a:	mov    edx,0x30
  40483f:	xor    ecx,ecx
  404841:	call   0x412308
  404846:	xor    eax,eax
  404848:	add    rsp,0x78
  40484c:	pop    rbx
  40484d:	pop    rsi
  40484e:	pop    rdi
  40484f:	pop    rbp
  404850:	pop    r12
  404852:	pop    r13
  404854:	pop    r14
  404856:	pop    r15
  404858:	ret    
  404859:	nop    DWORD PTR [rax+0x0]
  404860:	movzx  eax,BYTE PTR [rsi+0x1]
  404864:	cmp    al,0x2d
  404866:	mov    BYTE PTR [rsp+0x47],al
  40486a:	je     0x4049b0
  404870:	cmp    BYTE PTR [rsp+0x47],0x0
  404875:	je     0x40467f
  40487b:	mov    eax,DWORD PTR [rsp+0x6c]
  40487f:	add    eax,0x1
  404882:	cmp    eax,DWORD PTR [rsp+0x30]
  404886:	je     0x40467f
  40488c:	mov    edx,DWORD PTR [rsp+0xe8]
  404893:	lea    rdi,[rsi+0x1]
  404897:	test   edx,edx
  404899:	jle    0x4048e7
  40489b:	xor    r13d,r13d
  40489e:	mov    QWORD PTR [rsp+0xc0],rbx
  4048a6:	mov    r15,r12
  4048a9:	mov    ebx,r13d
  4048ac:	mov    r13d,DWORD PTR [rsp+0xe8]
  4048b4:	mov    rcx,QWORD PTR [r15+0x8]
  4048b8:	mov    r14,r15
  4048bb:	sub    r14,r12
  4048be:	test   rcx,rcx
  4048c1:	je     0x4048d3
  4048c3:	mov    rdx,rdi
  4048c6:	call   0x419858
  4048cb:	test   eax,eax
  4048cd:	je     0x4049d0
  4048d3:	add    ebx,0x1
  4048d6:	add    r15,0x18
  4048da:	cmp    ebx,r13d
  4048dd:	jne    0x4048b4
  4048df:	mov    rbx,QWORD PTR [rsp+0xc0]
  4048e7:	mov    edx,0x3a
  4048ec:	mov    rcx,rdi
  4048ef:	call   0x419860
  4048f4:	test   rax,rax
  4048f7:	je     0x404d42
  4048fd:	sub    eax,edi
  4048ff:	mov    rcx,QWORD PTR [rsp+0xd8]
  404907:	mov    r15,QWORD PTR [rcx]
  40490a:	test   r15,r15
  40490d:	je     0x404944
  40490f:	movsxd r13,eax
  404912:	mov    r14,rcx
  404915:	mov    r8,r13
  404918:	mov    rdx,r15
  40491b:	mov    rcx,rdi
  40491e:	call   0x419830
  404923:	test   eax,eax
  404925:	jne    0x404938
  404927:	mov    rcx,r15
  40492a:	call   0x419840
  40492f:	cmp    rax,r13
  404932:	je     0x404b91
  404938:	add    r14,0x28
  40493c:	mov    r15,QWORD PTR [r14]
  40493f:	test   r15,r15
  404942:	jne    0x404915
  404944:	mov    rcx,QWORD PTR [rsp+0x38]
  404949:	mov    rax,QWORD PTR [rsp+0xd0]
  404951:	mov    r8,QWORD PTR [rax+rcx*1+0x8]
  404956:	lea    r14,[rcx+0x8]
  40495a:	movzx  eax,BYTE PTR [rsp+0x47]
  40495f:	test   r8,r8
  404962:	je     0x404cba
  404968:	xor    ecx,ecx
  40496a:	mov    rdx,rdi
  40496d:	call   0x403e80
  404972:	test   eax,eax
  404974:	js     0x404cab
  40497a:	mov    rax,QWORD PTR [rsp+0xd0]
  404982:	mov    rsi,QWORD PTR [rsp+0x38]
  404987:	lea    r8,[rip+0x1b31a]        # 0x41fca8
  40498e:	mov    r9,rdi
  404991:	mov    edx,0x30
  404996:	xor    ecx,ecx
  404998:	add    ebp,0x2
  40499b:	mov    rax,QWORD PTR [rax+rsi*1+0x8]
  4049a0:	mov    QWORD PTR [rsp+0x20],rax
  4049a5:	call   0x412308
  4049aa:	jmp    0x404630
  4049af:	nop
  4049b0:	cmp    BYTE PTR [rsi+0x2],0x0
  4049b4:	jne    0x40487b
  4049ba:	mov    eax,DWORD PTR [rsp+0x30]
  4049be:	mov    DWORD PTR [rsp+0x6c],eax
  4049c2:	mov    ebp,eax
  4049c4:	jmp    0x404630
  4049c9:	nop    DWORD PTR [rax+0x0]
  4049d0:	mov    r13d,ebx
  4049d3:	mov    rbx,QWORD PTR [rsp+0xc0]
  4049db:	test   r13d,r13d
  4049de:	js     0x4048e7
  4049e4:	mov    rax,QWORD PTR [rsp+0xd0]
  4049ec:	mov    rsi,QWORD PTR [rsp+0x38]
  4049f1:	mov    rsi,QWORD PTR [rax+rsi*1+0x8]
  4049f6:	test   rsi,rsi
  4049f9:	je     0x404d8a
  4049ff:	add    r14,QWORD PTR [rbx+0x48]
  404a03:	mov    eax,DWORD PTR [r14+0x10]
  404a07:	mov    rcx,QWORD PTR [r14+0x8]
  404a0b:	lea    r13d,[rax+0x1]
  404a0f:	cmp    r13d,0x1c71c70
  404a16:	jg     0x404e66
  404a1c:	movsxd rdi,r13d
  404a1f:	mov    r8d,0x48
  404a25:	mov    rdx,rdi
  404a28:	call   0x412240
  404a2d:	test   rax,rax
  404a30:	mov    r9,rax
  404a33:	je     0x404e7e
  404a39:	mov    eax,DWORD PTR [r14+0x10]
  404a3d:	mov    edx,r13d
  404a40:	mov    QWORD PTR [rsp+0x30],r9
  404a45:	add    ebp,0x2
  404a48:	sub    edx,eax
  404a4a:	lea    ecx,[rax+rax*8]
  404a4d:	lea    r8d,[rdx+rdx*8]
  404a51:	xor    edx,edx
  404a53:	shl    ecx,0x3
  404a56:	shl    r8d,0x3
  404a5a:	movsxd rcx,ecx
  404a5d:	add    rcx,r9
  404a60:	movsxd r8,r8d
  404a63:	call   0x419878
  404a68:	mov    r9,QWORD PTR [rsp+0x30]
  404a6d:	lea    rax,[rdi+rdi*8]
  404a71:	mov    DWORD PTR [r14+0x10],r13d
  404a75:	mov    rdx,QWORD PTR [rbx+0x58]
  404a79:	mov    rdi,QWORD PTR [rsp+0x50]
  404a7e:	lea    r8,[rip+0x1a930]        # 0x41f3b5
  404a85:	lea    rax,[r9+rax*8-0x48]
  404a8a:	mov    QWORD PTR [r14+0x8],r9
  404a8e:	xor    r9d,r9d
  404a91:	mov    rcx,rdi
  404a94:	mov    QWORD PTR [rax],rdx
  404a97:	mov    rdx,QWORD PTR [rbx+0x60]
  404a9b:	mov    QWORD PTR [rax+0x8],rdx
  404a9f:	mov    rdx,QWORD PTR [rbx+0x68]
  404aa3:	mov    QWORD PTR [rax+0x10],rdx
  404aa7:	mov    rdx,QWORD PTR [rbx+0x70]
  404aab:	mov    QWORD PTR [rax+0x18],rdx
  404aaf:	mov    rdx,QWORD PTR [rbx+0x78]
  404ab3:	mov    QWORD PTR [rax+0x20],rdx
  404ab7:	mov    rdx,QWORD PTR [rbx+0x80]
  404abe:	mov    QWORD PTR [rax+0x28],rdx
  404ac2:	mov    rdx,QWORD PTR [rbx+0x88]
  404ac9:	mov    QWORD PTR [rax+0x8],rsi
  404acd:	mov    QWORD PTR [rax+0x30],rdx
  404ad1:	mov    rdx,QWORD PTR [r14]
  404ad4:	mov    QWORD PTR [rax],rdx
  404ad7:	mov    rdx,QWORD PTR [rdi]
  404ada:	mov    QWORD PTR [rax+0x38],rdx
  404ade:	mov    rdx,QWORD PTR [rip+0x25d23]        # 0x42a808
  404ae5:	mov    QWORD PTR [rax+0x40],rdx
  404ae9:	mov    rdx,QWORD PTR [rip+0x25d28]        # 0x42a818
  404af0:	mov    QWORD PTR [rip+0x25d1d],0x0        # 0x42a818
  404afb:	mov    QWORD PTR [rax+0x20],rdx
  404aff:	mov    rdx,QWORD PTR [rip+0x25d0a]        # 0x42a810
  404b06:	mov    QWORD PTR [rip+0x25cff],0x0        # 0x42a810
  404b11:	mov    QWORD PTR [rax+0x28],rdx
  404b15:	mov    rdx,QWORD PTR [rip+0x25d04]        # 0x42a820
  404b1c:	mov    QWORD PTR [rax+0x30],rdx
  404b20:	lea    rdx,[rip+0x1a896]        # 0x41f3bd
  404b27:	mov    QWORD PTR [rip+0x25cee],0x0        # 0x42a820
  404b32:	mov    QWORD PTR [rdi],0x0
  404b39:	mov    QWORD PTR [rip+0x25cc4],0x0        # 0x42a808
  404b44:	call   0x412428
  404b49:	mov    rax,QWORD PTR [rsp+0x48]
  404b4e:	lea    r8,[rip+0x1b0f3]        # 0x41fc48
  404b55:	mov    edx,0x30
  404b5a:	mov    QWORD PTR [rax],0x0
  404b61:	mov    rax,QWORD PTR [rsp+0x58]
  404b66:	mov    QWORD PTR [rax-0x10],0x0
  404b6e:	mov    ecx,DWORD PTR [rsp+0x68]
  404b72:	xor    eax,eax
  404b74:	mov    rdi,QWORD PTR [rsp+0x60]
  404b79:	shr    ecx,0x3
  404b7c:	rep stos QWORD PTR es:[rdi],rax
  404b7f:	mov    QWORD PTR [rsp+0x20],rsi
  404b84:	mov    r9,QWORD PTR [r15]
  404b87:	call   0x412308
  404b8c:	jmp    0x404630
  404b91:	mov    eax,DWORD PTR [r14+0x8]
  404b95:	test   ah,0x8
  404b98:	jne    0x404c81
  404b9e:	test   al,0x1
  404ba0:	je     0x404c9f
  404ba6:	lea    esi,[rbp+0x2]
  404ba9:	mov    rdx,QWORD PTR [rsp+0xd0]
  404bb1:	mov    DWORD PTR [rsp+0x30],esi
  404bb5:	mov    rsi,QWORD PTR [rsp+0x38]
  404bba:	mov    rbp,QWORD PTR [rdx+rsi*1+0x8]
  404bbf:	test   rbp,rbp
  404bc2:	je     0x404d8a
  404bc8:	mov    r15,QWORD PTR [rsp+0x48]
  404bcd:	test   ah,0xe0
  404bd0:	cmove  r15,rbx
  404bd4:	mov    eax,DWORD PTR [r15+0x18]
  404bd8:	mov    rcx,QWORD PTR [r15+0x10]
  404bdc:	lea    esi,[rax+0x1]
  404bdf:	cmp    esi,0x5555554
  404be5:	jg     0x404e66
  404beb:	movsxd rax,esi
  404bee:	mov    r8d,0x18
  404bf4:	mov    rdx,rax
  404bf7:	mov    QWORD PTR [rsp+0x38],rax
  404bfc:	call   0x412240
  404c01:	test   rax,rax
  404c04:	mov    r13,rax
  404c07:	je     0x404e7e
  404c0d:	mov    eax,DWORD PTR [r15+0x18]
  404c11:	mov    edx,esi
  404c13:	sub    edx,eax
  404c15:	lea    ecx,[rax+rax*2]
  404c18:	lea    r8d,[rdx+rdx*2]
  404c1c:	xor    edx,edx
  404c1e:	shl    ecx,0x3
  404c21:	shl    r8d,0x3
  404c25:	movsxd rcx,ecx
  404c28:	add    rcx,r13
  404c2b:	movsxd r8,r8d
  404c2e:	call   0x419878
  404c33:	mov    rax,QWORD PTR [rsp+0x38]
  404c38:	mov    DWORD PTR [r15+0x18],esi
  404c3c:	lea    r8,[rip+0x1b02d]        # 0x41fc70
  404c43:	mov    QWORD PTR [r15+0x10],r13
  404c47:	mov    edx,0x30
  404c4c:	xor    ecx,ecx
  404c4e:	lea    rax,[rax+rax*2]
  404c52:	lea    rax,[r13+rax*8-0x18]
  404c57:	mov    QWORD PTR [rax+0x10],rbp
  404c5b:	mov    QWORD PTR [rax],r14
  404c5e:	mov    QWORD PTR [rax+0x8],rdi
  404c62:	mov    QWORD PTR [rsp+0x28],rbp
  404c67:	mov    rax,QWORD PTR [r14+0x18]
  404c6b:	mov    QWORD PTR [rsp+0x20],rax
  404c70:	mov    r9,QWORD PTR [r14]
  404c73:	call   0x412308
  404c78:	mov    ebp,DWORD PTR [rsp+0x30]
  404c7c:	jmp    0x404630
  404c81:	lea    esi,[rbp+0x2]
  404c84:	mov    rdx,QWORD PTR [rsp+0xd0]
  404c8c:	mov    DWORD PTR [rsp+0x30],esi
  404c90:	mov    rsi,QWORD PTR [rsp+0x38]
  404c95:	mov    rbp,QWORD PTR [rdx+rsi*1+0x8]
  404c9a:	jmp    0x404bc8
  404c9f:	lea    rbp,[rip+0x1ac8b]        # 0x41f931
  404ca6:	jmp    0x404bc8
  404cab:	cmp    eax,0xabafb008
  404cb0:	jne    0x404e90
  404cb6:	movzx  eax,BYTE PTR [rsi+0x1]
  404cba:	cmp    al,0x6e
  404cbc:	jne    0x404d22
  404cbe:	cmp    BYTE PTR [rsi+0x2],0x6f
  404cc2:	jne    0x404d22
  404cc4:	lea    rbp,[rsi+0x3]
  404cc8:	mov    edx,0x3a
  404ccd:	mov    rcx,rbp
  404cd0:	call   0x419860
  404cd5:	test   rax,rax
  404cd8:	je     0x404e83
  404cde:	sub    eax,ebp
  404ce0:	mov    rsi,QWORD PTR [rsp+0xd8]
  404ce8:	mov    r13,QWORD PTR [rsi]
  404ceb:	test   r13,r13
  404cee:	je     0x404d22
  404cf0:	movsxd r14,eax
  404cf3:	mov    r8,r14
  404cf6:	mov    rdx,r13
  404cf9:	mov    rcx,rbp
  404cfc:	call   0x419830
  404d01:	test   eax,eax
  404d03:	jne    0x404d16
  404d05:	mov    rcx,r13
  404d08:	call   0x419840
  404d0d:	cmp    rax,r14
  404d10:	je     0x404daa
  404d16:	add    rsi,0x28
  404d1a:	mov    r13,QWORD PTR [rsi]
  404d1d:	test   r13,r13
  404d20:	jne    0x404cf3
  404d22:	lea    r8,[rip+0x1b00e]        # 0x41fd37
  404d29:	mov    r9,rdi
  404d2c:	mov    edx,0x10
  404d31:	xor    ecx,ecx
  404d33:	call   0x412308
  404d38:	mov    eax,0xabafb008
  404d3d:	jmp    0x404848
  404d42:	mov    rcx,rdi
  404d45:	call   0x419840
  404d4a:	jmp    0x4048ff
  404d4f:	cmp    QWORD PTR [rip+0x25ab9],0x0        # 0x42a810
  404d57:	jne    0x404820
  404d5d:	cmp    QWORD PTR [rip+0x25abb],0x0        # 0x42a820
  404d65:	jne    0x404820
  404d6b:	jmp    0x404833
  404d70:	lea    rdx,[rsp+0xd0]
  404d78:	lea    rcx,[rsp+0xc8]
  404d80:	call   0x401910
  404d85:	jmp    0x4044f7
  404d8a:	lea    r8,[rip+0x1ae8f]        # 0x41fc20
  404d91:	mov    r9,rdi
  404d94:	mov    edx,0x10
  404d99:	xor    ecx,ecx
  404d9b:	call   0x412308
  404da0:	mov    eax,0xffffffea
  404da5:	jmp    0x404848
  404daa:	mov    eax,DWORD PTR [rsi+0x8]
  404dad:	test   al,0x2
  404daf:	je     0x404d22
  404db5:	mov    r13,QWORD PTR [rsp+0x48]
  404dba:	test   ah,0xe0
  404dbd:	cmove  r13,rbx
  404dc1:	mov    eax,DWORD PTR [r13+0x18]
  404dc5:	mov    rcx,QWORD PTR [r13+0x10]
  404dc9:	lea    ebp,[rax+0x1]
  404dcc:	cmp    ebp,0x5555554
  404dd2:	jg     0x404e66
  404dd8:	movsxd r15,ebp
  404ddb:	mov    r8d,0x18
  404de1:	mov    rdx,r15
  404de4:	call   0x412240
  404de9:	test   rax,rax
  404dec:	mov    r14,rax
  404def:	je     0x404e7e
  404df5:	mov    eax,DWORD PTR [r13+0x18]
  404df9:	mov    edx,ebp
  404dfb:	sub    edx,eax
  404dfd:	lea    ecx,[rax+rax*2]
  404e00:	lea    r8d,[rdx+rdx*2]
  404e04:	xor    edx,edx
  404e06:	shl    ecx,0x3
  404e09:	shl    r8d,0x3
  404e0d:	movsxd rcx,ecx
  404e10:	add    rcx,r14
  404e13:	movsxd r8,r8d
  404e16:	call   0x419878
  404e1b:	lea    rax,[r15+r15*2]
  404e1f:	mov    DWORD PTR [r13+0x18],ebp
  404e23:	mov    QWORD PTR [r13+0x10],r14
  404e27:	lea    r8,[rip+0x1aeda]        # 0x41fd08
  404e2e:	mov    edx,0x30
  404e33:	xor    ecx,ecx
  404e35:	lea    rax,[r14+rax*8-0x18]
  404e3a:	mov    QWORD PTR [rax+0x8],rdi
  404e3e:	lea    rdi,[rip+0x1aaee]        # 0x41f933
  404e45:	mov    QWORD PTR [rax],rsi
  404e48:	mov    QWORD PTR [rax+0x10],rdi
  404e4c:	mov    rax,QWORD PTR [rsi+0x18]
  404e50:	mov    QWORD PTR [rsp+0x20],rax
  404e55:	mov    r9,QWORD PTR [rsi]
  404e58:	call   0x412308
  404e5d:	mov    ebp,DWORD PTR [rsp+0x30]
  404e61:	jmp    0x404630
  404e66:	lea    r8,[rip+0x1ab0d]        # 0x41f97a
  404e6d:	mov    edx,0x10
  404e72:	xor    ecx,ecx
  404e74:	call   0x412308
  404e79:	jmp    0x40454c
  404e7e:	call   0x419c16
  404e83:	mov    rcx,rbp
  404e86:	call   0x419840
  404e8b:	jmp    0x404ce0
  404e90:	mov    r13,rdi
  404e93:	mov    edi,eax
  404e95:	mov    rax,QWORD PTR [rsp+0xd0]
  404e9d:	lea    r8,[rip+0x1ae34]        # 0x41fcd8
  404ea4:	mov    r9,r13
  404ea7:	mov    edx,0x10
  404eac:	xor    ecx,ecx
  404eae:	mov    rax,QWORD PTR [rax+r14*1]
  404eb2:	mov    QWORD PTR [rsp+0x20],rax
  404eb7:	call   0x412308
  404ebc:	mov    eax,edi
  404ebe:	jmp    0x404848
  404ec3:	nop    DWORD PTR [rax]
  404ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ed0:	push   rbx
  404ed1:	sub    rsp,0x30
  404ed5:	mov    rbx,r8
  404ed8:	call   0x412388
  404edd:	lea    rcx,[rsp+0x2c]
  404ee2:	mov    rdx,rbx
  404ee5:	mov    DWORD PTR [rsp+0x2c],eax
  404ee9:	call   0x412260
  404eee:	test   eax,eax
  404ef0:	js     0x404efd
  404ef2:	mov    ecx,DWORD PTR [rsp+0x2c]
  404ef6:	call   0x412418
  404efb:	xor    eax,eax
  404efd:	add    rsp,0x30
  404f01:	pop    rbx
  404f02:	ret    
  404f03:	nop    DWORD PTR [rax]
  404f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f10:	push   rbp
  404f11:	push   rdi
  404f12:	push   rsi
  404f13:	push   rbx
  404f14:	sub    rsp,0xc8
  404f1b:	lea    rsi,[rip+0x1811e]        # 0x41d040
  404f22:	mov    ecx,0x12
  404f27:	lea    rbp,[rsp+0x30]
  404f2c:	mov    rbx,r8
  404f2f:	mov    rdi,rbp
  404f32:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  404f35:	call   0x4122f0
  404f3a:	lea    rdx,[rip+0x1ae74]        # 0x41fdb5
  404f41:	mov    esi,eax
  404f43:	mov    rcx,rbx
  404f46:	call   0x419820
  404f4b:	mov    ecx,esi
  404f4d:	or     esi,0x1
  404f50:	mov    QWORD PTR [rsp+0x28],rax
  404f55:	and    ecx,0xfffffffe
  404f58:	test   rax,rax
  404f5b:	cmove  ecx,esi
  404f5e:	call   0x4122d8
  404f63:	mov    rax,QWORD PTR [rsp+0x28]
  404f68:	cmp    rax,rbx
  404f6b:	je     0x405080
  404f71:	test   rax,rax
  404f74:	je     0x404f7f
  404f76:	cmp    BYTE PTR [rbx],0x0
  404f79:	je     0x40506c
  404f7f:	mov    rcx,QWORD PTR [rsp+0x30]
  404f84:	mov    rdx,rbx
  404f87:	call   0x419858
  404f8c:	test   eax,eax
  404f8e:	je     0x4050c0
  404f94:	mov    rcx,QWORD PTR [rsp+0x40]
  404f99:	mov    rdx,rbx
  404f9c:	call   0x419858
  404fa1:	test   eax,eax
  404fa3:	je     0x4050c4
  404fa9:	mov    rcx,QWORD PTR [rsp+0x50]
  404fae:	mov    rdx,rbx
  404fb1:	call   0x419858
  404fb6:	test   eax,eax
  404fb8:	je     0x4050d0
  404fbe:	mov    rcx,QWORD PTR [rsp+0x60]
  404fc3:	mov    rdx,rbx
  404fc6:	call   0x419858
  404fcb:	test   eax,eax
  404fcd:	je     0x4050e0
  404fd3:	mov    rcx,QWORD PTR [rsp+0x70]
  404fd8:	mov    rdx,rbx
  404fdb:	call   0x419858
  404fe0:	test   eax,eax
  404fe2:	je     0x4050f0
  404fe8:	mov    rcx,QWORD PTR [rsp+0x80]
  404ff0:	mov    rdx,rbx
  404ff3:	call   0x419858
  404ff8:	test   eax,eax
  404ffa:	je     0x405100
  405000:	mov    rcx,QWORD PTR [rsp+0x90]
  405008:	mov    rdx,rbx
  40500b:	call   0x419858
  405010:	test   eax,eax
  405012:	je     0x405093
  405014:	mov    rcx,QWORD PTR [rsp+0xa0]
  40501c:	mov    rdx,rbx
  40501f:	call   0x419858
  405024:	test   eax,eax
  405026:	je     0x405110
  40502c:	mov    rcx,QWORD PTR [rsp+0xb0]
  405034:	mov    rdx,rbx
  405037:	call   0x419858
  40503c:	test   eax,eax
  40503e:	je     0x405120
  405044:	lea    rdx,[rsp+0x28]
  405049:	mov    rcx,rbx
  40504c:	mov    r8d,0xa
  405052:	call   0x419810
  405057:	mov    ecx,eax
  405059:	mov    rax,QWORD PTR [rsp+0x28]
  40505e:	cmp    BYTE PTR [rax],0x0
  405061:	jne    0x40512a
  405067:	call   0x4122d0
  40506c:	xor    eax,eax
  40506e:	add    rsp,0xc8
  405075:	pop    rbx
  405076:	pop    rsi
  405077:	pop    rdi
  405078:	pop    rbp
  405079:	ret    
  40507a:	nop    WORD PTR [rax+rax*1+0x0]
  405080:	xor    eax,eax
  405082:	cmp    BYTE PTR [rbx+0x6],0x2b
  405086:	sete   al
  405089:	lea    rbx,[rbx+rax*1+0x6]
  40508e:	jmp    0x404f76
  405093:	mov    eax,0x6
  405098:	nop    DWORD PTR [rax+rax*1+0x0]
  4050a0:	shl    rax,0x4
  4050a4:	mov    ecx,DWORD PTR [rsp+rax*1+0x38]
  4050a8:	call   0x4122d0
  4050ad:	xor    eax,eax
  4050af:	add    rsp,0xc8
  4050b6:	pop    rbx
  4050b7:	pop    rsi
  4050b8:	pop    rdi
  4050b9:	pop    rbp
  4050ba:	ret    
  4050bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4050c0:	xor    eax,eax
  4050c2:	jmp    0x4050a0
  4050c4:	mov    eax,0x1
  4050c9:	jmp    0x4050a0
  4050cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4050d0:	mov    eax,0x2
  4050d5:	jmp    0x4050a0
  4050d7:	nop    WORD PTR [rax+rax*1+0x0]
  4050e0:	mov    eax,0x3
  4050e5:	jmp    0x4050a0
  4050e7:	nop    WORD PTR [rax+rax*1+0x0]
  4050f0:	mov    eax,0x4
  4050f5:	jmp    0x4050a0
  4050f7:	nop    WORD PTR [rax+rax*1+0x0]
  405100:	mov    eax,0x5
  405105:	jmp    0x4050a0
  405107:	nop    WORD PTR [rax+rax*1+0x0]
  405110:	mov    eax,0x7
  405115:	jmp    0x4050a0
  405117:	nop    WORD PTR [rax+rax*1+0x0]
  405120:	mov    eax,0x8
  405125:	jmp    0x4050a0
  40512a:	mov    r9,rbx
  40512d:	lea    r8,[rip+0x1ac94]        # 0x41fdc8
  405134:	lea    rbx,[rsp+0xc0]
  40513c:	mov    edx,0x8
  405141:	xor    ecx,ecx
  405143:	call   0x412308
  405148:	mov    r9,QWORD PTR [rbp+0x0]
  40514c:	lea    r8,[rip+0x1ac69]        # 0x41fdbc
  405153:	xor    ecx,ecx
  405155:	mov    edx,0x8
  40515a:	add    rbp,0x10
  40515e:	call   0x412308
  405163:	cmp    rbp,rbx
  405166:	jne    0x405148
  405168:	mov    ecx,0x1
  40516d:	call   0x401cb0
  405172:	nop
  405173:	nop    DWORD PTR [rax]
  405176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405180:	push   r15
  405182:	push   r14
  405184:	push   r13
  405186:	push   r12
  405188:	push   rbp
  405189:	push   rdi
  40518a:	push   rsi
  40518b:	push   rbx
  40518c:	sub    rsp,0x38
  405190:	lea    r9,[rip+0x1ac9c]        # 0x41fe33
  405197:	mov    r13,r8
  40519a:	mov    r14d,ecx
  40519d:	mov    rsi,rdx
  4051a0:	call   0x403cb0
  4051a5:	cmp    QWORD PTR [r13+0x0],0x0
  4051aa:	je     0x4051ce
  4051ac:	mov    rdx,r13
  4051af:	nop
  4051b0:	mov    ecx,DWORD PTR [rdx+0x8]
  4051b3:	test   ch,0x20
  4051b6:	je     0x4051c4
  4051b8:	and    ecx,0xc0000
  4051be:	je     0x4053d7
  4051c4:	add    rdx,0x28
  4051c8:	cmp    QWORD PTR [rdx],0x0
  4051cc:	jne    0x4051b0
  4051ce:	test   eax,eax
  4051d0:	je     0x4053b5
  4051d6:	cdqe   
  4051d8:	mov    r8,QWORD PTR [rsi+rax*8+0x8]
  4051dd:	test   r8,r8
  4051e0:	je     0x4051f0
  4051e2:	lea    rdx,[rip+0x1ac4a]        # 0x41fe33
  4051e9:	xor    ecx,ecx
  4051eb:	call   0x404f10
  4051f0:	lea    r9,[rip+0x1ac6b]        # 0x41fe62
  4051f7:	mov    r8,r13
  4051fa:	mov    rdx,rsi
  4051fd:	mov    ecx,r14d
  405200:	call   0x403cb0
  405205:	lea    rcx,[rip+0x1ac5d]        # 0x41fe69
  40520c:	mov    ebx,eax
  40520e:	call   0x4198b8
  405213:	test   rax,rax
  405216:	jne    0x405250
  405218:	test   ebx,ebx
  40521a:	jne    0x405250
  40521c:	lea    r9,[rip+0x1ac69]        # 0x41fe8c
  405223:	mov    r8,r13
  405226:	mov    rdx,rsi
  405229:	mov    ecx,r14d
  40522c:	call   0x403cb0
  405231:	test   eax,eax
  405233:	je     0x40523f
  405235:	mov    DWORD PTR [rip+0x23df1],0x1        # 0x429030
  40523f:	add    rsp,0x38
  405243:	pop    rbx
  405244:	pop    rsi
  405245:	pop    rdi
  405246:	pop    rbp
  405247:	pop    r12
  405249:	pop    r13
  40524b:	pop    r14
  40524d:	pop    r15
  40524f:	ret    
  405250:	mov    rcx,rax
  405253:	call   0x401cd0
  405258:	mov    rcx,QWORD PTR [rip+0x23df1]        # 0x429050
  40525f:	test   rcx,rcx
  405262:	je     0x40521c
  405264:	lea    rdx,[rip+0x1ac07]        # 0x41fe72
  40526b:	call   0x401590
  405270:	test   r14d,r14d
  405273:	jle    0x4052fd
  405279:	lea    edi,[r14-0x1]
  40527d:	xor    ebx,ebx
  40527f:	mov    r12d,0xa
  405285:	mov    rbp,rdi
  405288:	add    rdi,0x1
  40528c:	nop    DWORD PTR [rax+0x0]
  405290:	mov    r15,QWORD PTR [rsi+rbx*8]
  405294:	movzx  eax,BYTE PTR [r15]
  405298:	test   al,al
  40529a:	je     0x4052ce
  40529c:	mov    rdx,r15
  40529f:	nop
  4052a0:	lea    ecx,[rax-0x2b]
  4052a3:	cmp    cl,0xf
  4052a6:	lea    ecx,[rax-0x40]
  4052a9:	seta   r8b
  4052ad:	cmp    cl,0x1a
  4052b0:	seta   cl
  4052b3:	test   r8b,cl
  4052b6:	je     0x4052c3
  4052b8:	cmp    al,0x5f
  4052ba:	je     0x4052c3
  4052bc:	sub    eax,0x61
  4052bf:	cmp    al,0x19
  4052c1:	ja     0x405310
  4052c3:	add    rdx,0x1
  4052c7:	movzx  eax,BYTE PTR [rdx]
  4052ca:	test   al,al
  4052cc:	jne    0x4052a0
  4052ce:	mov    rdx,QWORD PTR [rip+0x23d7b]        # 0x429050
  4052d5:	mov    rcx,r15
  4052d8:	call   0x4198d8
  4052dd:	mov    rdx,QWORD PTR [rip+0x23d6c]        # 0x429050
  4052e4:	cmp    ebp,ebx
  4052e6:	mov    ecx,0x20
  4052eb:	cmovle ecx,r12d
  4052ef:	add    rbx,0x1
  4052f3:	call   0x4198e0
  4052f8:	cmp    rbx,rdi
  4052fb:	jne    0x405290
  4052fd:	mov    rcx,QWORD PTR [rip+0x23d4c]        # 0x429050
  405304:	call   0x4198f8
  405309:	jmp    0x40521c
  40530e:	xchg   ax,ax
  405310:	mov    rdx,QWORD PTR [rip+0x23d39]        # 0x429050
  405317:	mov    ecx,0x22
  40531c:	call   0x4198e0
  405321:	movzx  r8d,BYTE PTR [r15]
  405325:	test   r8b,r8b
  405328:	jne    0x405350
  40532a:	jmp    0x405385
  40532c:	nop    DWORD PTR [rax+0x0]
  405330:	mov    rcx,QWORD PTR [rip+0x23d19]        # 0x429050
  405337:	lea    rdx,[rip+0x1ab47]        # 0x41fe85
  40533e:	call   0x401590
  405343:	add    r15,0x1
  405347:	movzx  r8d,BYTE PTR [r15]
  40534b:	test   r8b,r8b
  40534e:	je     0x405385
  405350:	lea    eax,[r8-0x22]
  405354:	test   al,0xfd
  405356:	je     0x4053a0
  405358:	lea    eax,[r8-0x5c]
  40535c:	test   al,0xfb
  40535e:	je     0x4053a0
  405360:	lea    eax,[r8-0x20]
  405364:	cmp    al,0x5e
  405366:	ja     0x405330
  405368:	mov    rdx,QWORD PTR [rip+0x23ce1]        # 0x429050
  40536f:	movzx  ecx,r8b
  405373:	add    r15,0x1
  405377:	call   0x4198e0
  40537c:	movzx  r8d,BYTE PTR [r15]
  405380:	test   r8b,r8b
  405383:	jne    0x405350
  405385:	mov    rdx,QWORD PTR [rip+0x23cc4]        # 0x429050
  40538c:	mov    ecx,0x22
  405391:	call   0x4198e0
  405396:	jmp    0x4052dd
  40539b:	nop    DWORD PTR [rax+rax*1+0x0]
  4053a0:	mov    rcx,QWORD PTR [rip+0x23ca9]        # 0x429050
  4053a7:	lea    rdx,[rip+0x1aad3]        # 0x41fe81
  4053ae:	call   0x401590
  4053b3:	jmp    0x405343
  4053b5:	lea    r9,[rip+0x1aaa4]        # 0x41fe60
  4053bc:	mov    r8,r13
  4053bf:	mov    rdx,rsi
  4053c2:	mov    ecx,r14d
  4053c5:	call   0x403cb0
  4053ca:	test   eax,eax
  4053cc:	je     0x4051f0
  4053d2:	jmp    0x4051d6
  4053d7:	lea    rax,[rip+0x19d18]        # 0x41f0f6
  4053de:	lea    r9,[rip+0x1aa5b]        # 0x41fe40
  4053e5:	lea    r8,[rip+0x19cec]        # 0x41f0d8
  4053ec:	xor    edx,edx
  4053ee:	xor    ecx,ecx
  4053f0:	mov    DWORD PTR [rsp+0x28],0x1ee
  4053f8:	mov    QWORD PTR [rsp+0x20],rax
  4053fd:	call   0x412308
  405402:	call   0x419910
  405407:	nop
  405408:	nop    DWORD PTR [rax+rax*1+0x0]
  405410:	xor    ecx,ecx
  405412:	jmp    0x401cd0
  405417:	nop    WORD PTR [rax+rax*1+0x0]
  405420:	push   rbx
  405421:	sub    rsp,0x30
  405425:	mov    rbx,r8
  405428:	lea    rdx,[rsp+0x28]
  40542d:	mov    r8d,0xa
  405433:	mov    rcx,rbx
  405436:	call   0x419810
  40543b:	movsxd rcx,eax
  40543e:	mov    rax,QWORD PTR [rsp+0x28]
  405443:	cmp    BYTE PTR [rax],0x0
  405446:	jne    0x405455
  405448:	call   0x4122b0
  40544d:	xor    eax,eax
  40544f:	add    rsp,0x30
  405453:	pop    rbx
  405454:	ret    
  405455:	lea    r8,[rip+0x1aa3c]        # 0x41fe98
  40545c:	xor    ecx,ecx
  40545e:	mov    r9,rbx
  405461:	mov    edx,0x8
  405466:	call   0x412308
  40546b:	mov    ecx,0x1
  405470:	call   0x401cb0
  405475:	nop
  405476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405480:	sub    rsp,0x28
  405484:	lea    r8,[rip+0x1aa2d]        # 0x41feb8
  40548b:	xor    ecx,ecx
  40548d:	mov    r9,rdx
  405490:	mov    edx,0x18
  405495:	call   0x412308
  40549a:	xor    eax,eax
  40549c:	add    rsp,0x28
  4054a0:	ret    
  4054a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4054a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054b0:	push   rdi
  4054b1:	push   rsi
  4054b2:	push   rbx
  4054b3:	sub    rsp,0xb0
  4054ba:	mov    r8d,0x80
  4054c0:	lea    rbx,[rsp+0x30]
  4054c5:	mov    esi,edx
  4054c7:	mov    rdi,rcx
  4054ca:	mov    ecx,esi
  4054cc:	mov    rdx,rbx
  4054cf:	call   0x412218
  4054d4:	test   eax,eax
  4054d6:	js     0x405500
  4054d8:	lea    r8,[rip+0x1a9f9]        # 0x41fed8
  4054df:	mov    QWORD PTR [rsp+0x20],rbx
  4054e4:	mov    r9,rdi
  4054e7:	mov    edx,0x10
  4054ec:	xor    ecx,ecx
  4054ee:	call   0x412308
  4054f3:	nop
  4054f4:	add    rsp,0xb0
  4054fb:	pop    rbx
  4054fc:	pop    rsi
  4054fd:	pop    rdi
  4054fe:	ret    
  4054ff:	nop
  405500:	neg    esi
  405502:	mov    ecx,esi
  405504:	call   0x419848
  405509:	mov    rbx,rax
  40550c:	jmp    0x4054d8
  40550e:	xchg   ax,ax
  405510:	push   rdi
  405511:	push   rsi
  405512:	push   rbx
  405513:	sub    rsp,0x70
  405517:	lea    r9,[rip+0x1a9c2]        # 0x41fee0
  40551e:	call   0x403cb0
  405523:	or     eax,DWORD PTR [rip+0x23b07]        # 0x429030
  405529:	je     0x405533
  40552b:	add    rsp,0x70
  40552f:	pop    rbx
  405530:	pop    rsi
  405531:	pop    rdi
  405532:	ret    
  405533:	mov    r9,QWORD PTR [rip+0x20786]        # 0x425cc0
  40553a:	lea    r8,[rip+0x1a9a7]        # 0x41fee8
  405541:	xor    ecx,ecx
  405543:	mov    edx,0x20
  405548:	lea    rbx,[rip+0x19be9]        # 0x41f138
  40554f:	call   0x412308
  405554:	mov    rax,QWORD PTR [rip+0x20755]        # 0x425cb0
  40555b:	lea    r8,[rip+0x1a99e]        # 0x41ff00
  405562:	xor    ecx,ecx
  405564:	mov    edx,0x20
  405569:	mov    DWORD PTR [rsp+0x20],0x7e0
  405571:	mov    rsi,rbx
  405574:	mov    r9d,DWORD PTR [rax]
  405577:	call   0x412308
  40557c:	lea    r8,[rip+0x1a0c9]        # 0x41f64c
  405583:	xor    ecx,ecx
  405585:	mov    edx,0x20
  40558a:	call   0x412308
  40558f:	lea    rax,[rip+0x1a9a6]        # 0x41ff3c
  405596:	lea    r9,[rip+0x19b76]        # 0x41f113
  40559d:	lea    r8,[rip+0x1a987]        # 0x41ff2b
  4055a4:	xor    ecx,ecx
  4055a6:	mov    edx,0x20
  4055ab:	mov    QWORD PTR [rsp+0x20],rax
  4055b0:	call   0x412308
  4055b5:	lea    r9,[rip+0x19b57]        # 0x41f113
  4055bc:	lea    r8,[rip+0x1a98d]        # 0x41ff50
  4055c3:	xor    ecx,ecx
  4055c5:	mov    edx,0x20
  4055ca:	call   0x412308
  4055cf:	call   0x4121d8
  4055d4:	mov    ecx,0x27a
  4055d9:	mov    rdi,rax
  4055dc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4055de:	je     0x405619
  4055e0:	mov    edx,DWORD PTR [rip+0x23a4e]        # 0x429034
  4055e6:	test   edx,edx
  4055e8:	je     0x405c60
  4055ee:	mov    QWORD PTR [rsp+0x28],rax
  4055f3:	lea    rax,[rip+0x1ac2c]        # 0x420226
  4055fa:	lea    r9,[rip+0x19b12]        # 0x41f113
  405601:	lea    r8,[rip+0x1ac03]        # 0x42020b
  405608:	mov    edx,0x20
  40560d:	xor    ecx,ecx
  40560f:	mov    QWORD PTR [rsp+0x20],rax
  405614:	call   0x412308
  405619:	call   0x4120e8
  40561e:	mov    rsi,rbx
  405621:	mov    ecx,0x27a
  405626:	mov    rdi,rax
  405629:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40562b:	je     0x405666
  40562d:	mov    edi,DWORD PTR [rip+0x23a01]        # 0x429034
  405633:	test   edi,edi
  405635:	je     0x405cd0
  40563b:	mov    QWORD PTR [rsp+0x28],rax
  405640:	lea    rax,[rip+0x1abe6]        # 0x42022d
  405647:	lea    r9,[rip+0x19ac5]        # 0x41f113
  40564e:	lea    r8,[rip+0x1abb6]        # 0x42020b
  405655:	mov    edx,0x20
  40565a:	xor    ecx,ecx
  40565c:	mov    QWORD PTR [rsp+0x20],rax
  405661:	call   0x412308
  405666:	call   0x412018
  40566b:	mov    rsi,rbx
  40566e:	mov    ecx,0x27a
  405673:	mov    rdi,rax
  405676:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405678:	je     0x4056b3
  40567a:	mov    esi,DWORD PTR [rip+0x239b4]        # 0x429034
  405680:	test   esi,esi
  405682:	je     0x405bf0
  405688:	mov    QWORD PTR [rsp+0x28],rax
  40568d:	lea    rax,[rip+0x1aba1]        # 0x420235
  405694:	lea    r9,[rip+0x19a78]        # 0x41f113
  40569b:	lea    r8,[rip+0x1ab69]        # 0x42020b
  4056a2:	mov    edx,0x20
  4056a7:	xor    ecx,ecx
  4056a9:	mov    QWORD PTR [rsp+0x20],rax
  4056ae:	call   0x412308
  4056b3:	call   0x411f68
  4056b8:	mov    rsi,rbx
  4056bb:	mov    ecx,0x27a
  4056c0:	mov    rdi,rax
  4056c3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4056c5:	je     0x405702
  4056c7:	mov    r11d,DWORD PTR [rip+0x23966]        # 0x429034
  4056ce:	test   r11d,r11d
  4056d1:	je     0x405c93
  4056d7:	mov    QWORD PTR [rsp+0x28],rax
  4056dc:	lea    rax,[rip+0x1ab5b]        # 0x42023e
  4056e3:	lea    r9,[rip+0x19a29]        # 0x41f113
  4056ea:	lea    r8,[rip+0x1ab1a]        # 0x42020b
  4056f1:	mov    edx,0x20
  4056f6:	xor    ecx,ecx
  4056f8:	mov    QWORD PTR [rsp+0x20],rax
  4056fd:	call   0x412308
  405702:	call   0x411fc0
  405707:	mov    rsi,rbx
  40570a:	mov    ecx,0x27a
  40570f:	mov    rdi,rax
  405712:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405714:	je     0x405751
  405716:	mov    r10d,DWORD PTR [rip+0x23917]        # 0x429034
  40571d:	test   r10d,r10d
  405720:	je     0x405c23
  405726:	mov    QWORD PTR [rsp+0x28],rax
  40572b:	lea    rax,[rip+0x1ab15]        # 0x420247
  405732:	lea    r9,[rip+0x199da]        # 0x41f113
  405739:	lea    r8,[rip+0x1aacb]        # 0x42020b
  405740:	mov    edx,0x20
  405745:	xor    ecx,ecx
  405747:	mov    QWORD PTR [rsp+0x20],rax
  40574c:	call   0x412308
  405751:	call   0x412158
  405756:	mov    rsi,rbx
  405759:	mov    ecx,0x27a
  40575e:	mov    rdi,rax
  405761:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405763:	je     0x4057a0
  405765:	mov    r9d,DWORD PTR [rip+0x238c8]        # 0x429034
  40576c:	test   r9d,r9d
  40576f:	je     0x405d03
  405775:	mov    QWORD PTR [rsp+0x28],rax
  40577a:	lea    rax,[rip+0x1aacf]        # 0x420250
  405781:	lea    r9,[rip+0x1998b]        # 0x41f113
  405788:	lea    r8,[rip+0x1aa7c]        # 0x42020b
  40578f:	mov    edx,0x20
  405794:	xor    ecx,ecx
  405796:	mov    QWORD PTR [rsp+0x20],rax
  40579b:	call   0x412308
  4057a0:	call   0x4121a0
  4057a5:	mov    rsi,rbx
  4057a8:	mov    ecx,0x27a
  4057ad:	mov    rdi,rax
  4057b0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4057b2:	je     0x4057ef
  4057b4:	mov    r8d,DWORD PTR [rip+0x23879]        # 0x429034
  4057bb:	test   r8d,r8d
  4057be:	je     0x405d40
  4057c4:	mov    QWORD PTR [rsp+0x28],rax
  4057c9:	lea    rax,[rip+0x1aa8b]        # 0x42025b
  4057d0:	lea    r9,[rip+0x1993c]        # 0x41f113
  4057d7:	lea    r8,[rip+0x1aa2d]        # 0x42020b
  4057de:	mov    edx,0x20
  4057e3:	xor    ecx,ecx
  4057e5:	mov    QWORD PTR [rsp+0x20],rax
  4057ea:	call   0x412308
  4057ef:	call   0x412178
  4057f4:	mov    rsi,rbx
  4057f7:	mov    ecx,0x27a
  4057fc:	mov    rdi,rax
  4057ff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405801:	jne    0x405b75
  405807:	call   0x412168
  40580c:	mov    rsi,rbx
  40580f:	mov    ecx,0x27a
  405814:	mov    rdi,rax
  405817:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405819:	je     0x405854
  40581b:	mov    edx,DWORD PTR [rip+0x23813]        # 0x429034
  405821:	test   edx,edx
  405823:	je     0x405bb3
  405829:	mov    QWORD PTR [rsp+0x28],rax
  40582e:	lea    rax,[rip+0x1aa39]        # 0x42026e
  405835:	lea    r9,[rip+0x198d7]        # 0x41f113
  40583c:	lea    r8,[rip+0x1a9c8]        # 0x42020b
  405843:	mov    edx,0x20
  405848:	xor    ecx,ecx
  40584a:	mov    QWORD PTR [rsp+0x20],rax
  40584f:	call   0x412308
  405854:	call   0x4121d0
  405859:	movzx  edx,al
  40585c:	lea    r9,[rip+0x198b0]        # 0x41f113
  405863:	lea    r8,[rip+0x1aa0e]        # 0x420278
  40586a:	mov    DWORD PTR [rsp+0x50],edx
  40586e:	movzx  edx,ah
  405871:	shr    eax,0x10
  405874:	mov    DWORD PTR [rsp+0x40],eax
  405878:	lea    rax,[rip+0x1a9a7]        # 0x420226
  40587f:	xor    ecx,ecx
  405881:	mov    DWORD PTR [rsp+0x48],edx
  405885:	mov    DWORD PTR [rsp+0x38],0x64
  40588d:	mov    edx,0x20
  405892:	mov    QWORD PTR [rsp+0x20],rax
  405897:	mov    DWORD PTR [rsp+0x30],0x1f
  40589f:	mov    DWORD PTR [rsp+0x28],0x36
  4058a7:	call   0x412308
  4058ac:	call   0x412080
  4058b1:	movzx  edx,al
  4058b4:	lea    r9,[rip+0x19858]        # 0x41f113
  4058bb:	lea    r8,[rip+0x1a9b6]        # 0x420278
  4058c2:	mov    DWORD PTR [rsp+0x50],edx
  4058c6:	movzx  edx,ah
  4058c9:	shr    eax,0x10
  4058cc:	mov    DWORD PTR [rsp+0x40],eax
  4058d0:	lea    rax,[rip+0x1a956]        # 0x42022d
  4058d7:	xor    ecx,ecx
  4058d9:	mov    DWORD PTR [rsp+0x48],edx
  4058dd:	mov    DWORD PTR [rsp+0x38],0x64
  4058e5:	mov    edx,0x20
  4058ea:	mov    QWORD PTR [rsp+0x20],rax
  4058ef:	mov    DWORD PTR [rsp+0x30],0x3c
  4058f7:	mov    DWORD PTR [rsp+0x28],0x38
  4058ff:	call   0x412308
  405904:	call   0x411fd8
  405909:	movzx  edx,al
  40590c:	lea    r9,[rip+0x19800]        # 0x41f113
  405913:	lea    r8,[rip+0x1a95e]        # 0x420278
  40591a:	mov    DWORD PTR [rsp+0x50],edx
  40591e:	movzx  edx,ah
  405921:	shr    eax,0x10
  405924:	mov    DWORD PTR [rsp+0x40],eax
  405928:	lea    rax,[rip+0x1a906]        # 0x420235
  40592f:	xor    ecx,ecx
  405931:	mov    DWORD PTR [rsp+0x48],edx
  405935:	mov    DWORD PTR [rsp+0x38],0x65
  40593d:	mov    edx,0x20
  405942:	mov    QWORD PTR [rsp+0x20],rax
  405947:	mov    DWORD PTR [rsp+0x30],0x28
  40594f:	mov    DWORD PTR [rsp+0x28],0x38
  405957:	call   0x412308
  40595c:	call   0x411f40
  405961:	movzx  edx,al
  405964:	lea    r9,[rip+0x197a8]        # 0x41f113
  40596b:	lea    r8,[rip+0x1a906]        # 0x420278
  405972:	mov    DWORD PTR [rsp+0x50],edx
  405976:	movzx  edx,ah
  405979:	shr    eax,0x10
  40597c:	mov    DWORD PTR [rsp+0x40],eax
  405980:	lea    rax,[rip+0x1a8b7]        # 0x42023e
  405987:	xor    ecx,ecx
  405989:	mov    DWORD PTR [rsp+0x48],edx
  40598d:	mov    DWORD PTR [rsp+0x38],0x64
  405995:	mov    edx,0x20
  40599a:	mov    QWORD PTR [rsp+0x20],rax
  40599f:	mov    DWORD PTR [rsp+0x30],0x4
  4059a7:	mov    DWORD PTR [rsp+0x28],0x38
  4059af:	call   0x412308
  4059b4:	call   0x411f90
  4059b9:	movzx  edx,al
  4059bc:	lea    r9,[rip+0x19750]        # 0x41f113
  4059c3:	lea    r8,[rip+0x1a8ae]        # 0x420278
  4059ca:	mov    DWORD PTR [rsp+0x50],edx
  4059ce:	movzx  edx,ah
  4059d1:	shr    eax,0x10
  4059d4:	mov    DWORD PTR [rsp+0x40],eax
  4059d8:	lea    rax,[rip+0x1a868]        # 0x420247
  4059df:	xor    ecx,ecx
  4059e1:	mov    DWORD PTR [rsp+0x48],edx
  4059e5:	mov    DWORD PTR [rsp+0x38],0x65
  4059ed:	mov    edx,0x20
  4059f2:	mov    QWORD PTR [rsp+0x20],rax
  4059f7:	mov    DWORD PTR [rsp+0x30],0x28
  4059ff:	mov    DWORD PTR [rsp+0x28],0x5
  405a07:	call   0x412308
  405a0c:	call   0x412148
  405a11:	movzx  edx,al
  405a14:	lea    r9,[rip+0x196f8]        # 0x41f113
  405a1b:	lea    r8,[rip+0x1a856]        # 0x420278
  405a22:	mov    DWORD PTR [rsp+0x50],edx
  405a26:	movzx  edx,ah
  405a29:	shr    eax,0x10
  405a2c:	mov    DWORD PTR [rsp+0x40],eax
  405a30:	lea    rax,[rip+0x1a819]        # 0x420250
  405a37:	xor    ecx,ecx
  405a39:	mov    DWORD PTR [rsp+0x48],edx
  405a3d:	mov    DWORD PTR [rsp+0x38],0x0
  405a45:	mov    edx,0x20
  405a4a:	mov    QWORD PTR [rsp+0x20],rax
  405a4f:	mov    DWORD PTR [rsp+0x30],0x1
  405a57:	mov    DWORD PTR [rsp+0x28],0x2
  405a5f:	call   0x412308
  405a64:	call   0x412198
  405a69:	movzx  edx,al
  405a6c:	lea    r9,[rip+0x196a0]        # 0x41f113
  405a73:	lea    r8,[rip+0x1a7fe]        # 0x420278
  405a7a:	mov    DWORD PTR [rsp+0x50],edx
  405a7e:	movzx  edx,ah
  405a81:	shr    eax,0x10
  405a84:	mov    DWORD PTR [rsp+0x40],eax
  405a88:	lea    rax,[rip+0x1a7cc]        # 0x42025b
  405a8f:	xor    ecx,ecx
  405a91:	mov    DWORD PTR [rsp+0x48],edx
  405a95:	mov    DWORD PTR [rsp+0x38],0x65
  405a9d:	mov    edx,0x20
  405aa2:	mov    QWORD PTR [rsp+0x20],rax
  405aa7:	mov    DWORD PTR [rsp+0x30],0x1
  405aaf:	mov    DWORD PTR [rsp+0x28],0x3
  405ab7:	call   0x412308
  405abc:	call   0x412170
  405ac1:	movzx  edx,al
  405ac4:	lea    r9,[rip+0x19648]        # 0x41f113
  405acb:	lea    r8,[rip+0x1a7a6]        # 0x420278
  405ad2:	mov    DWORD PTR [rsp+0x50],edx
  405ad6:	movzx  edx,ah
  405ad9:	shr    eax,0x10
  405adc:	mov    DWORD PTR [rsp+0x40],eax
  405ae0:	lea    rax,[rip+0x1a77c]        # 0x420263
  405ae7:	xor    ecx,ecx
  405ae9:	mov    DWORD PTR [rsp+0x48],edx
  405aed:	mov    DWORD PTR [rsp+0x38],0x65
  405af5:	mov    edx,0x20
  405afa:	mov    QWORD PTR [rsp+0x20],rax
  405aff:	mov    DWORD PTR [rsp+0x30],0x2
  405b07:	mov    DWORD PTR [rsp+0x28],0x1
  405b0f:	call   0x412308
  405b14:	call   0x412160
  405b19:	movzx  edx,al
  405b1c:	lea    r9,[rip+0x195f0]        # 0x41f113
  405b23:	lea    r8,[rip+0x1a74e]        # 0x420278
  405b2a:	mov    DWORD PTR [rsp+0x50],edx
  405b2e:	movzx  edx,ah
  405b31:	shr    eax,0x10
  405b34:	mov    DWORD PTR [rsp+0x40],eax
  405b38:	lea    rax,[rip+0x1a72f]        # 0x42026e
  405b3f:	mov    DWORD PTR [rsp+0x48],edx
  405b43:	mov    DWORD PTR [rsp+0x38],0x64
  405b4b:	mov    DWORD PTR [rsp+0x30],0x3
  405b53:	mov    edx,0x20
  405b58:	mov    DWORD PTR [rsp+0x28],0x35
  405b60:	mov    QWORD PTR [rsp+0x20],rax
  405b65:	xor    ecx,ecx
  405b67:	call   0x412308
  405b6c:	nop
  405b6d:	add    rsp,0x70
  405b71:	pop    rbx
  405b72:	pop    rsi
  405b73:	pop    rdi
  405b74:	ret    
  405b75:	mov    ecx,DWORD PTR [rip+0x234b9]        # 0x429034
  405b7b:	test   ecx,ecx
  405b7d:	je     0x405d73
  405b83:	mov    QWORD PTR [rsp+0x28],rax
  405b88:	lea    rax,[rip+0x1a6d4]        # 0x420263
  405b8f:	lea    r9,[rip+0x1957d]        # 0x41f113
  405b96:	lea    r8,[rip+0x1a66e]        # 0x42020b
  405b9d:	mov    edx,0x20
  405ba2:	xor    ecx,ecx
  405ba4:	mov    QWORD PTR [rsp+0x20],rax
  405ba9:	call   0x412308
  405bae:	jmp    0x405807
  405bb3:	lea    r9,[rip+0x19559]        # 0x41f113
  405bba:	lea    r8,[rip+0x1a61f]        # 0x4201e0
  405bc1:	mov    edx,0x20
  405bc6:	xor    ecx,ecx
  405bc8:	mov    QWORD PTR [rsp+0x68],rax
  405bcd:	call   0x412308
  405bd2:	mov    DWORD PTR [rip+0x23458],0x1        # 0x429034
  405bdc:	mov    rax,QWORD PTR [rsp+0x68]
  405be1:	jmp    0x405829
  405be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405bf0:	lea    r9,[rip+0x1951c]        # 0x41f113
  405bf7:	lea    r8,[rip+0x1a5e2]        # 0x4201e0
  405bfe:	mov    edx,0x20
  405c03:	xor    ecx,ecx
  405c05:	mov    QWORD PTR [rsp+0x68],rax
  405c0a:	call   0x412308
  405c0f:	mov    DWORD PTR [rip+0x2341b],0x1        # 0x429034
  405c19:	mov    rax,QWORD PTR [rsp+0x68]
  405c1e:	jmp    0x405688
  405c23:	lea    r9,[rip+0x194e9]        # 0x41f113
  405c2a:	lea    r8,[rip+0x1a5af]        # 0x4201e0
  405c31:	mov    edx,0x20
  405c36:	xor    ecx,ecx
  405c38:	mov    QWORD PTR [rsp+0x68],rax
  405c3d:	call   0x412308
  405c42:	mov    DWORD PTR [rip+0x233e8],0x1        # 0x429034
  405c4c:	mov    rax,QWORD PTR [rsp+0x68]
  405c51:	jmp    0x405726
  405c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c60:	lea    r9,[rip+0x194ac]        # 0x41f113
  405c67:	lea    r8,[rip+0x1a572]        # 0x4201e0
  405c6e:	mov    edx,0x20
  405c73:	xor    ecx,ecx
  405c75:	mov    QWORD PTR [rsp+0x68],rax
  405c7a:	call   0x412308
  405c7f:	mov    DWORD PTR [rip+0x233ab],0x1        # 0x429034
  405c89:	mov    rax,QWORD PTR [rsp+0x68]
  405c8e:	jmp    0x4055ee
  405c93:	lea    r9,[rip+0x19479]        # 0x41f113
  405c9a:	lea    r8,[rip+0x1a53f]        # 0x4201e0
  405ca1:	mov    edx,0x20
  405ca6:	xor    ecx,ecx
  405ca8:	mov    QWORD PTR [rsp+0x68],rax
  405cad:	call   0x412308
  405cb2:	mov    DWORD PTR [rip+0x23378],0x1        # 0x429034
  405cbc:	mov    rax,QWORD PTR [rsp+0x68]
  405cc1:	jmp    0x4056d7
  405cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cd0:	lea    r9,[rip+0x1943c]        # 0x41f113
  405cd7:	lea    r8,[rip+0x1a502]        # 0x4201e0
  405cde:	mov    edx,0x20
  405ce3:	xor    ecx,ecx
  405ce5:	mov    QWORD PTR [rsp+0x68],rax
  405cea:	call   0x412308
  405cef:	mov    DWORD PTR [rip+0x2333b],0x1        # 0x429034
  405cf9:	mov    rax,QWORD PTR [rsp+0x68]
  405cfe:	jmp    0x40563b
  405d03:	lea    r9,[rip+0x19409]        # 0x41f113
  405d0a:	lea    r8,[rip+0x1a4cf]        # 0x4201e0
  405d11:	mov    edx,0x20
  405d16:	xor    ecx,ecx
  405d18:	mov    QWORD PTR [rsp+0x68],rax
  405d1d:	call   0x412308
  405d22:	mov    DWORD PTR [rip+0x23308],0x1        # 0x429034
  405d2c:	mov    rax,QWORD PTR [rsp+0x68]
  405d31:	jmp    0x405775
  405d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d40:	lea    r9,[rip+0x193cc]        # 0x41f113
  405d47:	lea    r8,[rip+0x1a492]        # 0x4201e0
  405d4e:	mov    edx,0x20
  405d53:	xor    ecx,ecx
  405d55:	mov    QWORD PTR [rsp+0x68],rax
  405d5a:	call   0x412308
  405d5f:	mov    DWORD PTR [rip+0x232cb],0x1        # 0x429034
  405d69:	mov    rax,QWORD PTR [rsp+0x68]
  405d6e:	jmp    0x4057c4
  405d73:	lea    r9,[rip+0x19399]        # 0x41f113
  405d7a:	lea    r8,[rip+0x1a45f]        # 0x4201e0
  405d81:	mov    edx,0x20
  405d86:	xor    ecx,ecx
  405d88:	mov    QWORD PTR [rsp+0x68],rax
  405d8d:	call   0x412308
  405d92:	mov    DWORD PTR [rip+0x23298],0x1        # 0x429034
  405d9c:	mov    rax,QWORD PTR [rsp+0x68]
  405da1:	jmp    0x405b83
  405da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405db0:	sub    rsp,0x68
  405db4:	lea    rcx,[rip+0xffffffffffffb775]        # 0x401530
  405dbb:	call   0x4122e0
  405dc0:	mov    r9,QWORD PTR [rip+0x1fef9]        # 0x425cc0
  405dc7:	lea    r8,[rip+0x1a11a]        # 0x41fee8
  405dce:	xor    ecx,ecx
  405dd0:	mov    edx,0x20
  405dd5:	call   0x412308
  405dda:	mov    rax,QWORD PTR [rip+0x1fecf]        # 0x425cb0
  405de1:	lea    r8,[rip+0x1a118]        # 0x41ff00
  405de8:	xor    ecx,ecx
  405dea:	mov    DWORD PTR [rsp+0x20],0x7e0
  405df2:	mov    edx,0x20
  405df7:	mov    r9d,DWORD PTR [rax]
  405dfa:	call   0x412308
  405dff:	lea    r8,[rip+0x19846]        # 0x41f64c
  405e06:	xor    ecx,ecx
  405e08:	mov    edx,0x20
  405e0d:	call   0x412308
  405e12:	lea    rax,[rip+0x1a123]        # 0x41ff3c
  405e19:	lea    r9,[rip+0x195a3]        # 0x41f3c3
  405e20:	lea    r8,[rip+0x1a104]        # 0x41ff2b
  405e27:	xor    ecx,ecx
  405e29:	mov    edx,0x20
  405e2e:	mov    QWORD PTR [rsp+0x20],rax
  405e33:	call   0x412308
  405e38:	lea    r9,[rip+0x19584]        # 0x41f3c3
  405e3f:	lea    r8,[rip+0x1a10a]        # 0x41ff50
  405e46:	xor    ecx,ecx
  405e48:	mov    edx,0x20
  405e4d:	call   0x412308
  405e52:	call   0x4121d0
  405e57:	movzx  edx,al
  405e5a:	lea    r9,[rip+0x19562]        # 0x41f3c3
  405e61:	lea    r8,[rip+0x1a410]        # 0x420278
  405e68:	mov    DWORD PTR [rsp+0x50],edx
  405e6c:	movzx  edx,ah
  405e6f:	shr    eax,0x10
  405e72:	mov    DWORD PTR [rsp+0x40],eax
  405e76:	lea    rax,[rip+0x1a3a9]        # 0x420226
  405e7d:	xor    ecx,ecx
  405e7f:	mov    DWORD PTR [rsp+0x48],edx
  405e83:	mov    DWORD PTR [rsp+0x38],0x64
  405e8b:	mov    edx,0x20
  405e90:	mov    QWORD PTR [rsp+0x20],rax
  405e95:	mov    DWORD PTR [rsp+0x30],0x1f
  405e9d:	mov    DWORD PTR [rsp+0x28],0x36
  405ea5:	call   0x412308
  405eaa:	call   0x412080
  405eaf:	movzx  edx,al
  405eb2:	lea    r9,[rip+0x1950a]        # 0x41f3c3
  405eb9:	lea    r8,[rip+0x1a3b8]        # 0x420278
  405ec0:	mov    DWORD PTR [rsp+0x50],edx
  405ec4:	movzx  edx,ah
  405ec7:	shr    eax,0x10
  405eca:	mov    DWORD PTR [rsp+0x40],eax
  405ece:	lea    rax,[rip+0x1a358]        # 0x42022d
  405ed5:	xor    ecx,ecx
  405ed7:	mov    DWORD PTR [rsp+0x48],edx
  405edb:	mov    DWORD PTR [rsp+0x38],0x64
  405ee3:	mov    edx,0x20
  405ee8:	mov    QWORD PTR [rsp+0x20],rax
  405eed:	mov    DWORD PTR [rsp+0x30],0x3c
  405ef5:	mov    DWORD PTR [rsp+0x28],0x38
  405efd:	call   0x412308
  405f02:	call   0x411fd8
  405f07:	movzx  edx,al
  405f0a:	lea    r9,[rip+0x194b2]        # 0x41f3c3
  405f11:	lea    r8,[rip+0x1a360]        # 0x420278
  405f18:	mov    DWORD PTR [rsp+0x50],edx
  405f1c:	movzx  edx,ah
  405f1f:	shr    eax,0x10
  405f22:	mov    DWORD PTR [rsp+0x40],eax
  405f26:	lea    rax,[rip+0x1a308]        # 0x420235
  405f2d:	xor    ecx,ecx
  405f2f:	mov    DWORD PTR [rsp+0x48],edx
  405f33:	mov    DWORD PTR [rsp+0x38],0x65
  405f3b:	mov    edx,0x20
  405f40:	mov    QWORD PTR [rsp+0x20],rax
  405f45:	mov    DWORD PTR [rsp+0x30],0x28
  405f4d:	mov    DWORD PTR [rsp+0x28],0x38
  405f55:	call   0x412308
  405f5a:	call   0x411f40
  405f5f:	movzx  edx,al
  405f62:	lea    r9,[rip+0x1945a]        # 0x41f3c3
  405f69:	lea    r8,[rip+0x1a308]        # 0x420278
  405f70:	mov    DWORD PTR [rsp+0x50],edx
  405f74:	movzx  edx,ah
  405f77:	shr    eax,0x10
  405f7a:	mov    DWORD PTR [rsp+0x40],eax
  405f7e:	lea    rax,[rip+0x1a2b9]        # 0x42023e
  405f85:	xor    ecx,ecx
  405f87:	mov    DWORD PTR [rsp+0x48],edx
  405f8b:	mov    DWORD PTR [rsp+0x38],0x64
  405f93:	mov    edx,0x20
  405f98:	mov    QWORD PTR [rsp+0x20],rax
  405f9d:	mov    DWORD PTR [rsp+0x30],0x4
  405fa5:	mov    DWORD PTR [rsp+0x28],0x38
  405fad:	call   0x412308
  405fb2:	call   0x411f90
  405fb7:	movzx  edx,al
  405fba:	lea    r9,[rip+0x19402]        # 0x41f3c3
  405fc1:	lea    r8,[rip+0x1a2b0]        # 0x420278
  405fc8:	mov    DWORD PTR [rsp+0x50],edx
  405fcc:	movzx  edx,ah
  405fcf:	shr    eax,0x10
  405fd2:	mov    DWORD PTR [rsp+0x40],eax
  405fd6:	lea    rax,[rip+0x1a26a]        # 0x420247
  405fdd:	mov    DWORD PTR [rsp+0x48],edx
  405fe1:	xor    ecx,ecx
  405fe3:	mov    edx,0x20
  405fe8:	mov    DWORD PTR [rsp+0x38],0x65
  405ff0:	mov    QWORD PTR [rsp+0x20],rax
  405ff5:	mov    DWORD PTR [rsp+0x30],0x28
  405ffd:	mov    DWORD PTR [rsp+0x28],0x5
  406005:	call   0x412308
  40600a:	call   0x412148
  40600f:	movzx  edx,al
  406012:	lea    r9,[rip+0x193aa]        # 0x41f3c3
  406019:	lea    r8,[rip+0x1a258]        # 0x420278
  406020:	mov    DWORD PTR [rsp+0x50],edx
  406024:	movzx  edx,ah
  406027:	shr    eax,0x10
  40602a:	mov    DWORD PTR [rsp+0x40],eax
  40602e:	lea    rax,[rip+0x1a21b]        # 0x420250
  406035:	xor    ecx,ecx
  406037:	mov    DWORD PTR [rsp+0x48],edx
  40603b:	mov    DWORD PTR [rsp+0x38],0x0
  406043:	mov    edx,0x20
  406048:	mov    QWORD PTR [rsp+0x20],rax
  40604d:	mov    DWORD PTR [rsp+0x30],0x1
  406055:	mov    DWORD PTR [rsp+0x28],0x2
  40605d:	call   0x412308
  406062:	call   0x412198
  406067:	movzx  edx,al
  40606a:	lea    r9,[rip+0x19352]        # 0x41f3c3
  406071:	lea    r8,[rip+0x1a200]        # 0x420278
  406078:	mov    DWORD PTR [rsp+0x50],edx
  40607c:	movzx  edx,ah
  40607f:	shr    eax,0x10
  406082:	mov    DWORD PTR [rsp+0x40],eax
  406086:	lea    rax,[rip+0x1a1ce]        # 0x42025b
  40608d:	xor    ecx,ecx
  40608f:	mov    DWORD PTR [rsp+0x48],edx
  406093:	mov    DWORD PTR [rsp+0x38],0x65
  40609b:	mov    edx,0x20
  4060a0:	mov    QWORD PTR [rsp+0x20],rax
  4060a5:	mov    DWORD PTR [rsp+0x30],0x1
  4060ad:	mov    DWORD PTR [rsp+0x28],0x3
  4060b5:	call   0x412308
  4060ba:	call   0x412170
  4060bf:	movzx  edx,al
  4060c2:	lea    r9,[rip+0x192fa]        # 0x41f3c3
  4060c9:	lea    r8,[rip+0x1a1a8]        # 0x420278
  4060d0:	mov    DWORD PTR [rsp+0x50],edx
  4060d4:	movzx  edx,ah
  4060d7:	shr    eax,0x10
  4060da:	mov    DWORD PTR [rsp+0x40],eax
  4060de:	lea    rax,[rip+0x1a17e]        # 0x420263
  4060e5:	xor    ecx,ecx
  4060e7:	mov    DWORD PTR [rsp+0x48],edx
  4060eb:	mov    DWORD PTR [rsp+0x38],0x65
  4060f3:	mov    edx,0x20
  4060f8:	mov    QWORD PTR [rsp+0x20],rax
  4060fd:	mov    DWORD PTR [rsp+0x30],0x2
  406105:	mov    DWORD PTR [rsp+0x28],0x1
  40610d:	call   0x412308
  406112:	call   0x412160
  406117:	movzx  edx,al
  40611a:	lea    r9,[rip+0x192a2]        # 0x41f3c3
  406121:	lea    r8,[rip+0x1a150]        # 0x420278
  406128:	mov    DWORD PTR [rsp+0x50],edx
  40612c:	movzx  edx,ah
  40612f:	shr    eax,0x10
  406132:	mov    DWORD PTR [rsp+0x40],eax
  406136:	lea    rax,[rip+0x1a131]        # 0x42026e
  40613d:	mov    DWORD PTR [rsp+0x48],edx
  406141:	mov    DWORD PTR [rsp+0x38],0x64
  406149:	mov    DWORD PTR [rsp+0x30],0x3
  406151:	mov    edx,0x20
  406156:	mov    QWORD PTR [rsp+0x20],rax
  40615b:	mov    DWORD PTR [rsp+0x28],0x35
  406163:	xor    ecx,ecx
  406165:	call   0x412308
  40616a:	xor    eax,eax
  40616c:	add    rsp,0x68
  406170:	ret    
  406171:	nop    DWORD PTR [rax+rax*1+0x0]
  406176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406180:	sub    rsp,0x28
  406184:	lea    rcx,[rip+0xffffffffffffb3a5]        # 0x401530
  40618b:	call   0x4122e0
  406190:	call   0x401ad0
  406195:	xor    eax,eax
  406197:	add    rsp,0x28
  40619b:	ret    
  40619c:	nop    DWORD PTR [rax+0x0]
  4061a0:	sub    rsp,0x28
  4061a4:	mov    r9,QWORD PTR [rip+0x1fb15]        # 0x425cc0
  4061ab:	lea    rcx,[rip+0x1a0ee]        # 0x4202a0
  4061b2:	mov    r8,r9
  4061b5:	mov    rdx,r9
  4061b8:	call   0x401560
  4061bd:	xor    eax,eax
  4061bf:	add    rsp,0x28
  4061c3:	ret    
  4061c4:	xchg   ax,ax
  4061c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061d0:	push   r15
  4061d2:	push   r14
  4061d4:	push   r13
  4061d6:	push   r12
  4061d8:	push   rbp
  4061d9:	push   rdi
  4061da:	push   rsi
  4061db:	push   rbx
  4061dc:	sub    rsp,0x38
  4061e0:	lea    rdx,[rip+0x1a306]        # 0x4204ed
  4061e7:	lea    rcx,[rip+0x1a312]        # 0x420500
  4061ee:	lea    rbp,[rip+0x1a2f2]        # 0x4204e7
  4061f5:	lea    r14,[rip+0x18e06]        # 0x41f002
  4061fc:	call   0x401560
  406201:	xor    edi,edi
  406203:	xor    ebx,ebx
  406205:	xor    r12d,r12d
  406208:	xor    r13d,r13d
  40620b:	mov    rcx,r13
  40620e:	call   0x412040
  406213:	test   rax,rax
  406216:	mov    r13,rax
  406219:	je     0x406260
  40621b:	test   rbx,rbx
  40621e:	mov    rsi,QWORD PTR [r13+0x0]
  406222:	je     0x406233
  406224:	mov    rdx,rbx
  406227:	mov    rcx,rsi
  40622a:	call   0x419858
  40622f:	test   eax,eax
  406231:	jns    0x40620b
  406233:	mov    rdx,rbp
  406236:	mov    rcx,rsi
  406239:	call   0x419858
  40623e:	test   eax,eax
  406240:	jle    0x40620b
  406242:	mov    rcx,r13
  406245:	mov    rdi,QWORD PTR [r13+0x8]
  406249:	mov    rbx,rsi
  40624c:	call   0x412040
  406251:	test   rax,rax
  406254:	mov    r12d,0x1
  40625a:	mov    r13,rax
  40625d:	jne    0x40621b
  40625f:	nop
  406260:	xor    r15d,r15d
  406263:	mov    rcx,r15
  406266:	call   0x412048
  40626b:	test   rax,rax
  40626e:	mov    r15,rax
  406271:	je     0x4062a2
  406273:	test   rbx,rbx
  406276:	mov    rsi,QWORD PTR [r15]
  406279:	je     0x4062f0
  40627b:	mov    rdx,rbx
  40627e:	mov    rcx,rsi
  406281:	call   0x419858
  406286:	test   eax,eax
  406288:	js     0x4062f0
  40628a:	jne    0x406263
  40628c:	mov    rcx,r15
  40628f:	mov    r13d,0x1
  406295:	call   0x412048
  40629a:	test   rax,rax
  40629d:	mov    r15,rax
  4062a0:	jne    0x406273
  4062a2:	test   rbx,rbx
  4062a5:	je     0x406312
  4062a7:	test   rdi,rdi
  4062aa:	lea    r8,[rip+0x1a23a]        # 0x4204eb
  4062b1:	lea    rdx,[rip+0x1926b]        # 0x41f523
  4062b8:	cmove  rdi,r14
  4062bc:	test   r12d,r12d
  4062bf:	lea    rcx,[rip+0x1a272]        # 0x420538
  4062c6:	cmove  r8,r14
  4062ca:	test   r13d,r13d
  4062cd:	mov    QWORD PTR [rsp+0x20],rdi
  4062d2:	cmove  rdx,r14
  4062d6:	mov    r9,rbx
  4062d9:	mov    rbp,rbx
  4062dc:	call   0x401560
  4062e1:	jmp    0x406201
  4062e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062f0:	mov    rdx,rbp
  4062f3:	mov    rcx,rsi
  4062f6:	call   0x419858
  4062fb:	test   eax,eax
  4062fd:	jle    0x406263
  406303:	mov    rdi,QWORD PTR [r15+0x8]
  406307:	mov    rbx,rsi
  40630a:	xor    r12d,r12d
  40630d:	jmp    0x40628c
  406312:	xor    eax,eax
  406314:	add    rsp,0x38
  406318:	pop    rbx
  406319:	pop    rsi
  40631a:	pop    rdi
  40631b:	pop    rbp
  40631c:	pop    r12
  40631e:	pop    r13
  406320:	pop    r14
  406322:	pop    r15
  406324:	ret    
  406325:	nop
  406326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406330:	push   r15
  406332:	push   r14
  406334:	push   r13
  406336:	push   r12
  406338:	push   rbp
  406339:	push   rdi
  40633a:	push   rsi
  40633b:	push   rbx
  40633c:	sub    rsp,0x38
  406340:	lea    rdx,[rip+0x1a201]        # 0x420548
  406347:	lea    rcx,[rip+0x1a1b2]        # 0x420500
  40634e:	lea    rbp,[rip+0x1a192]        # 0x4204e7
  406355:	lea    r14,[rip+0x18ca6]        # 0x41f002
  40635c:	call   0x401560
  406361:	xor    edi,edi
  406363:	xor    ebx,ebx
  406365:	xor    r12d,r12d
  406368:	xor    r13d,r13d
  40636b:	nop    DWORD PTR [rax+rax*1+0x0]
  406370:	mov    rcx,r13
  406373:	call   0x412040
  406378:	test   rax,rax
  40637b:	mov    r13,rax
  40637e:	je     0x4063e0
  406380:	mov    rax,QWORD PTR [r13+0x38]
  406384:	test   rax,rax
  406387:	je     0x406370
  406389:	mov    eax,DWORD PTR [rax+0x38]
  40638c:	sub    eax,0x28
  40638f:	cmp    eax,0x5
  406392:	ja     0x406370
  406394:	test   rbx,rbx
  406397:	mov    rsi,QWORD PTR [r13+0x0]
  40639b:	je     0x4063ac
  40639d:	mov    rdx,rbx
  4063a0:	mov    rcx,rsi
  4063a3:	call   0x419858
  4063a8:	test   eax,eax
  4063aa:	jns    0x406370
  4063ac:	mov    rdx,rbp
  4063af:	mov    rcx,rsi
  4063b2:	call   0x419858
  4063b7:	test   eax,eax
  4063b9:	jle    0x406370
  4063bb:	mov    rcx,r13
  4063be:	mov    rdi,QWORD PTR [r13+0x8]
  4063c2:	mov    rbx,rsi
  4063c5:	call   0x412040
  4063ca:	test   rax,rax
  4063cd:	mov    r12d,0x1
  4063d3:	mov    r13,rax
  4063d6:	jne    0x406380
  4063d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4063e0:	xor    r15d,r15d
  4063e3:	mov    rcx,r15
  4063e6:	call   0x412048
  4063eb:	test   rax,rax
  4063ee:	mov    r15,rax
  4063f1:	je     0x406436
  4063f3:	mov    rax,QWORD PTR [r15+0x28]
  4063f7:	test   rax,rax
  4063fa:	je     0x4063e3
  4063fc:	mov    eax,DWORD PTR [rax+0x38]
  4063ff:	sub    eax,0x28
  406402:	cmp    eax,0x5
  406405:	ja     0x4063e3
  406407:	test   rbx,rbx
  40640a:	je     0x406480
  40640c:	mov    rsi,QWORD PTR [r15]
  40640f:	mov    rdx,rbx
  406412:	mov    rcx,rsi
  406415:	call   0x419858
  40641a:	test   eax,eax
  40641c:	js     0x406483
  40641e:	jne    0x4063e3
  406420:	mov    rcx,r15
  406423:	mov    r13d,0x1
  406429:	call   0x412048
  40642e:	test   rax,rax
  406431:	mov    r15,rax
  406434:	jne    0x4063f3
  406436:	test   rbx,rbx
  406439:	je     0x4064a5
  40643b:	test   rdi,rdi
  40643e:	lea    r8,[rip+0x1a0a6]        # 0x4204eb
  406445:	lea    rdx,[rip+0x190d7]        # 0x41f523
  40644c:	cmove  rdi,r14
  406450:	test   r12d,r12d
  406453:	lea    rcx,[rip+0x1a0de]        # 0x420538
  40645a:	cmove  r8,r14
  40645e:	test   r13d,r13d
  406461:	mov    QWORD PTR [rsp+0x20],rdi
  406466:	cmove  rdx,r14
  40646a:	mov    r9,rbx
  40646d:	mov    rbp,rbx
  406470:	call   0x401560
  406475:	jmp    0x406361
  40647a:	nop    WORD PTR [rax+rax*1+0x0]
  406480:	mov    rsi,QWORD PTR [r15]
  406483:	mov    rdx,rbp
  406486:	mov    rcx,rsi
  406489:	call   0x419858
  40648e:	test   eax,eax
  406490:	jle    0x4063e3
  406496:	mov    rdi,QWORD PTR [r15+0x8]
  40649a:	mov    rbx,rsi
  40649d:	xor    r12d,r12d
  4064a0:	jmp    0x406420
  4064a5:	xor    eax,eax
  4064a7:	add    rsp,0x38
  4064ab:	pop    rbx
  4064ac:	pop    rsi
  4064ad:	pop    rdi
  4064ae:	pop    rbp
  4064af:	pop    r12
  4064b1:	pop    r13
  4064b3:	pop    r14
  4064b5:	pop    r15
  4064b7:	ret    
  4064b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4064c0:	push   r15
  4064c2:	push   r14
  4064c4:	push   r13
  4064c6:	push   r12
  4064c8:	push   rbp
  4064c9:	push   rdi
  4064ca:	push   rsi
  4064cb:	push   rbx
  4064cc:	sub    rsp,0x28
  4064d0:	xor    edi,edi
  4064d2:	xor    ebx,ebx
  4064d4:	jmp    0x4064e3
  4064d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064e0:	add    edi,0x1
  4064e3:	mov    rcx,rbx
  4064e6:	call   0x4120b8
  4064eb:	test   rax,rax
  4064ee:	mov    rbx,rax
  4064f1:	jne    0x4064e0
  4064f3:	mov    r12d,edi
  4064f6:	mov    edx,0x8
  4064fb:	mov    rcx,r12
  4064fe:	call   0x412470
  406503:	test   rax,rax
  406506:	mov    rbp,rax
  406509:	je     0x4067e2
  40650f:	xor    esi,esi
  406511:	jmp    0x40651d
  406513:	mov    eax,esi
  406515:	add    esi,0x1
  406518:	mov    QWORD PTR [rbp+rax*8+0x0],rbx
  40651d:	mov    rcx,rbx
  406520:	call   0x4120b8
  406525:	test   rax,rax
  406528:	mov    rbx,rax
  40652b:	jne    0x406513
  40652d:	cmp    esi,edi
  40652f:	jne    0x4067dd
  406535:	lea    r9,[rip+0xffffffffffffb084]        # 0x4015c0
  40653c:	mov    r8d,0x8
  406542:	mov    rdx,r12
  406545:	mov    rcx,rbp
  406548:	call   0x419870
  40654d:	lea    rcx,[rip+0x1a004]        # 0x420558
  406554:	call   0x401560
  406559:	test   esi,esi
  40655b:	je     0x4065a1
  40655d:	lea    eax,[rsi-0x1]
  406560:	lea    r15,[rip+0x18fbc]        # 0x41f523
  406567:	lea    r13,[rip+0x18fad]        # 0x41f51b
  40656e:	mov    rdi,rbp
  406571:	lea    r12,[rbp+rax*8+0x8]
  406576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406580:	mov    rsi,QWORD PTR [rdi]
  406583:	lea    rdx,[rip+0x1a0bb]        # 0x420645
  40658a:	mov    rcx,QWORD PTR [rsi+0x8]
  40658e:	call   0x419820
  406593:	test   rax,rax
  406596:	je     0x4065bc
  406598:	add    rdi,0x8
  40659c:	cmp    rdi,r12
  40659f:	jne    0x406580
  4065a1:	mov    rcx,rbp
  4065a4:	call   0x4123c0
  4065a9:	xor    eax,eax
  4065ab:	add    rsp,0x28
  4065af:	pop    rbx
  4065b0:	pop    rsi
  4065b1:	pop    rdi
  4065b2:	pop    rbp
  4065b3:	pop    r12
  4065b5:	pop    r13
  4065b7:	pop    r14
  4065b9:	pop    r15
  4065bb:	ret    
  4065bc:	lea    rcx,[rip+0x18a3f]        # 0x41f002
  4065c3:	call   0x401560
  4065c8:	mov    ecx,DWORD PTR [rsi]
  4065ca:	call   0x4120b0
  4065cf:	mov    rcx,r13
  4065d2:	test   rax,rax
  4065d5:	cmovne rcx,r15
  4065d9:	call   0x401560
  4065de:	mov    ecx,DWORD PTR [rsi]
  4065e0:	call   0x4120a0
  4065e5:	lea    rcx,[rip+0x19eff]        # 0x4204eb
  4065ec:	test   rax,rax
  4065ef:	cmove  rcx,r13
  4065f3:	call   0x401560
  4065f8:	mov    eax,DWORD PTR [rsi+0x4]
  4065fb:	mov    edx,0x3f
  406600:	cmp    eax,0x4
  406603:	jbe    0x4067cd
  406609:	lea    rcx,[rip+0x1a041]        # 0x420651
  406610:	call   0x401560
  406615:	test   BYTE PTR [rsi+0x18],0x1
  406619:	lea    rcx,[rip+0x19f31]        # 0x420551
  406620:	cmove  rcx,r13
  406624:	call   0x401560
  406629:	test   BYTE PTR [rsi+0x18],0x2
  40662d:	lea    rcx,[rip+0x19f1f]        # 0x420553
  406634:	cmove  rcx,r13
  406638:	call   0x401560
  40663d:	test   BYTE PTR [rsi+0x18],0x4
  406641:	lea    rcx,[rip+0x18ed5]        # 0x41f51d
  406648:	cmove  rcx,r13
  40664c:	call   0x401560
  406651:	mov    rax,QWORD PTR [rsi+0x10]
  406655:	mov    rdx,QWORD PTR [rsi+0x8]
  406659:	lea    r8,[rip+0x18d63]        # 0x41f3c3
  406660:	lea    rcx,[rip+0x18fcf]        # 0x41f636
  406667:	test   rax,rax
  40666a:	cmovne r8,rax
  40666e:	xor    r14d,r14d
  406671:	call   0x401560
  406676:	mov    ebx,DWORD PTR [rsi]
  406678:	nop    DWORD PTR [rax+rax*1+0x0]
  406680:	mov    rcx,r14
  406683:	call   0x412128
  406688:	test   rax,rax
  40668b:	mov    r14,rax
  40668e:	je     0x40671d
  406694:	cmp    ebx,DWORD PTR [r14+0x14]
  406698:	jne    0x406680
  40669a:	mov    rcx,r14
  40669d:	call   0x412138
  4066a2:	test   eax,eax
  4066a4:	je     0x406680
  4066a6:	mov    rdx,QWORD PTR [rsi+0x8]
  4066aa:	mov    rcx,QWORD PTR [r14]
  4066ad:	call   0x419858
  4066b2:	test   eax,eax
  4066b4:	je     0x406676
  4066b6:	lea    rdx,[rip+0x1919b]        # 0x41f858
  4066bd:	lea    rcx,[rip+0x19f90]        # 0x420654
  4066c4:	xor    r14d,r14d
  4066c7:	mov    ebx,DWORD PTR [rsi]
  4066c9:	call   0x401560
  4066ce:	xchg   ax,ax
  4066d0:	mov    rcx,r14
  4066d3:	call   0x412128
  4066d8:	test   rax,rax
  4066db:	mov    r14,rax
  4066de:	je     0x406711
  4066e0:	cmp    ebx,DWORD PTR [r14+0x14]
  4066e4:	jne    0x4066d0
  4066e6:	mov    rcx,r14
  4066e9:	call   0x412138
  4066ee:	test   eax,eax
  4066f0:	je     0x4066d0
  4066f2:	mov    rdx,QWORD PTR [r14]
  4066f5:	lea    rcx,[rip+0x19f5f]        # 0x42065b
  4066fc:	call   0x401560
  406701:	mov    rcx,r14
  406704:	call   0x412128
  406709:	test   rax,rax
  40670c:	mov    r14,rax
  40670f:	jne    0x4066e0
  406711:	lea    rcx,[rip+0x19f47]        # 0x42065f
  406718:	call   0x401560
  40671d:	xor    r14d,r14d
  406720:	mov    ebx,DWORD PTR [rsi]
  406722:	mov    rcx,r14
  406725:	call   0x412128
  40672a:	test   rax,rax
  40672d:	mov    r14,rax
  406730:	je     0x4067bc
  406736:	cmp    ebx,DWORD PTR [r14+0x14]
  40673a:	jne    0x406722
  40673c:	mov    rcx,r14
  40673f:	call   0x412130
  406744:	test   eax,eax
  406746:	je     0x406722
  406748:	mov    rdx,QWORD PTR [rsi+0x8]
  40674c:	mov    rcx,QWORD PTR [r14]
  40674f:	call   0x419858
  406754:	test   eax,eax
  406756:	je     0x406720
  406758:	lea    rdx,[rip+0x190f0]        # 0x41f84f
  40675f:	lea    rcx,[rip+0x19eee]        # 0x420654
  406766:	xor    ebx,ebx
  406768:	mov    esi,DWORD PTR [rsi]
  40676a:	call   0x401560
  40676f:	nop
  406770:	mov    rcx,rbx
  406773:	call   0x412128
  406778:	test   rax,rax
  40677b:	mov    rbx,rax
  40677e:	je     0x4067b0
  406780:	cmp    esi,DWORD PTR [rbx+0x14]
  406783:	jne    0x406770
  406785:	mov    rcx,rbx
  406788:	call   0x412130
  40678d:	test   eax,eax
  40678f:	je     0x406770
  406791:	mov    rdx,QWORD PTR [rbx]
  406794:	lea    rcx,[rip+0x19ec0]        # 0x42065b
  40679b:	call   0x401560
  4067a0:	mov    rcx,rbx
  4067a3:	call   0x412128
  4067a8:	test   rax,rax
  4067ab:	mov    rbx,rax
  4067ae:	jne    0x406780
  4067b0:	lea    rcx,[rip+0x19ea8]        # 0x42065f
  4067b7:	call   0x401560
  4067bc:	lea    rcx,[rip+0x18e89]        # 0x41f64c
  4067c3:	call   0x401560
  4067c8:	jmp    0x406598
  4067cd:	lea    rdx,[rip+0x1a5e5]        # 0x420db9
  4067d4:	movsx  edx,BYTE PTR [rdx+rax*1]
  4067d8:	jmp    0x406609
  4067dd:	call   0x419ba0
  4067e2:	lea    r8,[rip+0x18d3c]        # 0x41f525
  4067e9:	xor    ecx,ecx
  4067eb:	mov    edx,0x10
  4067f0:	call   0x412308
  4067f5:	mov    ecx,0x1
  4067fa:	call   0x401cb0
  4067ff:	nop
  406800:	sub    rsp,0x28
  406804:	xor    ecx,ecx
  406806:	call   0x402120
  40680b:	xor    eax,eax
  40680d:	add    rsp,0x28
  406811:	ret    
  406812:	nop    DWORD PTR [rax+0x0]
  406816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406820:	sub    rsp,0x28
  406824:	mov    ecx,0x1
  406829:	call   0x402120
  40682e:	xor    eax,eax
  406830:	add    rsp,0x28
  406834:	ret    
  406835:	nop
  406836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406840:	push   rbx
  406841:	sub    rsp,0x20
  406845:	lea    rcx,[rip+0x19e15]        # 0x420661
  40684c:	xor    ebx,ebx
  40684e:	call   0x401560
  406853:	jmp    0x406864
  406855:	mov    rdx,QWORD PTR [rbx]
  406858:	lea    rcx,[rip+0x18ef7]        # 0x41f756
  40685f:	call   0x401560
  406864:	mov    rcx,rbx
  406867:	call   0x412140
  40686c:	test   rax,rax
  40686f:	mov    rbx,rax
  406872:	jne    0x406855
  406874:	lea    rcx,[rip+0x18dd1]        # 0x41f64c
  40687b:	call   0x401560
  406880:	xor    eax,eax
  406882:	add    rsp,0x20
  406886:	pop    rbx
  406887:	ret    
  406888:	nop    DWORD PTR [rax+rax*1+0x0]
  406890:	push   rbx
  406891:	sub    rsp,0x30
  406895:	lea    rcx,[rip+0x19ddc]        # 0x420678
  40689c:	mov    QWORD PTR [rsp+0x28],0x0
  4068a5:	lea    rbx,[rsp+0x28]
  4068aa:	call   0x401560
  4068af:	jmp    0x4068c0
  4068b1:	lea    rcx,[rip+0x19de2]        # 0x42069a
  4068b8:	mov    rdx,rax
  4068bb:	call   0x401560
  4068c0:	xor    edx,edx
  4068c2:	mov    rcx,rbx
  4068c5:	call   0x411fd0
  4068ca:	test   rax,rax
  4068cd:	jne    0x4068b1
  4068cf:	lea    rcx,[rip+0x19dca]        # 0x4206a0
  4068d6:	call   0x401560
  4068db:	jmp    0x4068ef
  4068dd:	nop    DWORD PTR [rax]
  4068e0:	lea    rcx,[rip+0x19db3]        # 0x42069a
  4068e7:	mov    rdx,rax
  4068ea:	call   0x401560
  4068ef:	mov    edx,0x1
  4068f4:	mov    rcx,rbx
  4068f7:	call   0x411fd0
  4068fc:	test   rax,rax
  4068ff:	jne    0x4068e0
  406901:	add    rsp,0x30
  406905:	pop    rbx
  406906:	ret    
  406907:	nop    WORD PTR [rax+rax*1+0x0]
  406910:	push   r15
  406912:	push   r14
  406914:	push   r13
  406916:	push   r12
  406918:	push   rbp
  406919:	push   rdi
  40691a:	push   rsi
  40691b:	push   rbx
  40691c:	sub    rsp,0x88
  406923:	lea    rcx,[rip+0x19d86]        # 0x4206b0
  40692a:	xor    r12d,r12d
  40692d:	lea    r14,[rsp+0x40]
  406932:	call   0x401560
  406937:	mov    rcx,r12
  40693a:	lea    rbp,[r14+0x3c]
  40693e:	call   0x411fb0
  406943:	test   rax,rax
  406946:	mov    r12,rax
  406949:	je     0x406a5a
  40694f:	nop
  406950:	mov    rsi,QWORD PTR [r12+0x10]
  406955:	xor    r13d,r13d
  406958:	mov    rdi,r14
  40695b:	test   rsi,rsi
  40695e:	je     0x406a98
  406964:	mov    rbx,rdi
  406967:	jmp    0x40699e
  406969:	nop    DWORD PTR [rax+0x0]
  406970:	cmp    rbx,rbp
  406973:	jae    0x4069b4
  406975:	mov    edx,r15d
  406978:	mov    rcx,rsi
  40697b:	add    rbx,0x1
  40697f:	call   0x411f98
  406984:	mov    edx,eax
  406986:	mov    eax,0x3f
  40698b:	cmp    edx,0x4
  40698e:	ja     0x40699b
  406990:	lea    rax,[rip+0x1a422]        # 0x420db9
  406997:	movzx  eax,BYTE PTR [rax+rdx*1]
  40699b:	mov    BYTE PTR [rbx-0x1],al
  40699e:	mov    r15d,ebx
  4069a1:	mov    rcx,rsi
  4069a4:	sub    r15d,edi
  4069a7:	mov    edx,r15d
  4069aa:	call   0x411fa0
  4069af:	test   rax,rax
  4069b2:	jne    0x406970
  4069b4:	test   r15d,r15d
  4069b7:	jne    0x4069de
  4069b9:	mov    rdi,rbx
  4069bc:	add    rbx,0x1
  4069c0:	test   r13d,r13d
  4069c3:	je     0x406a9f
  4069c9:	mov    eax,DWORD PTR [r12+0x28]
  4069ce:	and    eax,0x2
  4069d1:	cmp    eax,0x1
  4069d4:	sbb    eax,eax
  4069d6:	and    eax,0x2e
  4069d9:	add    eax,0x4e
  4069dc:	mov    BYTE PTR [rdi],al
  4069de:	cmp    r13d,0x1
  4069e2:	jne    0x406a70
  4069e8:	mov    BYTE PTR [rbx],0x0
  4069eb:	cmp    QWORD PTR [r12+0x60],0x1
  4069f1:	mov    eax,DWORD PTR [r12+0x28]
  4069f6:	mov    r9,QWORD PTR [r12]
  4069fa:	mov    r10,QWORD PTR [r12+0x8]
  4069ff:	mov    QWORD PTR [rsp+0x28],r14
  406a04:	mov    edx,eax
  406a06:	sbb    r8d,r8d
  406a09:	mov    QWORD PTR [rsp+0x20],r9
  406a0e:	and    edx,0x4
  406a11:	and    r8d,0xffffffeb
  406a15:	mov    QWORD PTR [rsp+0x30],r10
  406a1a:	cmp    edx,0x1
  406a1d:	lea    r9d,[r8+0x43]
  406a21:	sbb    ecx,ecx
  406a23:	and    eax,0x30000
  406a28:	and    ecx,0xffffffdb
  406a2b:	cmp    eax,0x1
  406a2e:	sbb    edx,edx
  406a30:	lea    r8d,[rcx+0x53]
  406a34:	lea    rcx,[rip+0x19d47]        # 0x420782
  406a3b:	and    edx,0xffffffda
  406a3e:	add    edx,0x54
  406a41:	call   0x401560
  406a46:	mov    rcx,r12
  406a49:	call   0x411fb0
  406a4e:	test   rax,rax
  406a51:	mov    r12,rax
  406a54:	jne    0x406950
  406a5a:	xor    eax,eax
  406a5c:	add    rsp,0x88
  406a63:	pop    rbx
  406a64:	pop    rsi
  406a65:	pop    rdi
  406a66:	pop    rbp
  406a67:	pop    r12
  406a69:	pop    r13
  406a6b:	pop    r14
  406a6d:	pop    r15
  406a6f:	ret    
  406a70:	mov    BYTE PTR [rbx],0x2d
  406a73:	mov    BYTE PTR [rbx+0x1],0x3e
  406a77:	mov    r13d,0x1
  406a7d:	mov    rsi,QWORD PTR [r12+0x18]
  406a82:	lea    rdi,[rbx+0x2]
  406a86:	test   rsi,rsi
  406a89:	jne    0x406964
  406a8f:	add    rbx,0x3
  406a93:	jmp    0x4069c9
  406a98:	lea    rbx,[r14+0x1]
  406a9c:	mov    rdi,r14
  406a9f:	mov    eax,DWORD PTR [r12+0x28]
  406aa4:	and    eax,0x1
  406aa7:	cmp    eax,0x1
  406aaa:	sbb    eax,eax
  406aac:	and    eax,0x2e
  406aaf:	add    eax,0x4e
  406ab2:	jmp    0x4069dc
  406ab7:	nop    WORD PTR [rax+rax*1+0x0]
  406ac0:	push   rsi
  406ac1:	push   rbx
  406ac2:	sub    rsp,0x48
  406ac6:	lea    rdx,[rip+0x19ccd]        # 0x42079a
  406acd:	lea    rcx,[rip+0x19ccb]        # 0x42079f
  406ad4:	xor    ebx,ebx
  406ad6:	lea    rsi,[rsp+0x38]
  406adb:	call   0x401560
  406ae0:	jmp    0x406b0b
  406ae2:	mov    r10,QWORD PTR [rsp+0x38]
  406ae7:	mov    rdx,rax
  406aea:	add    ebx,0x1
  406aed:	movzx  ecx,BYTE PTR [r10+0x2]
  406af2:	movzx  r9d,BYTE PTR [r10+0x1]
  406af7:	movzx  r8d,BYTE PTR [r10]
  406afb:	mov    DWORD PTR [rsp+0x20],ecx
  406aff:	lea    rcx,[rip+0x19ca8]        # 0x4207ae
  406b06:	call   0x401560
  406b0b:	mov    rdx,rsi
  406b0e:	mov    ecx,ebx
  406b10:	call   0x412380
  406b15:	test   rax,rax
  406b18:	jne    0x406ae2
  406b1a:	add    rsp,0x48
  406b1e:	pop    rbx
  406b1f:	pop    rsi
  406b20:	ret    
  406b21:	nop    DWORD PTR [rax+rax*1+0x0]
  406b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b30:	push   r15
  406b32:	push   r14
  406b34:	push   r13
  406b36:	push   r12
  406b38:	push   rbp
  406b39:	push   rdi
  406b3a:	push   rsi
  406b3b:	push   rbx
  406b3c:	sub    rsp,0x68
  406b40:	lea    rcx,[rip+0x19c81]        # 0x4207c8
  406b47:	xor    ebx,ebx
  406b49:	call   0x401560
  406b4e:	jmp    0x406bfa
  406b53:	mov    rcx,rbx
  406b56:	call   0x412250
  406b5b:	mov    rcx,rbx
  406b5e:	mov    r13d,eax
  406b61:	call   0x4123b0
  406b66:	movzx  edx,BYTE PTR [rbx+0xb]
  406b6a:	mov    DWORD PTR [rsp+0x5c],eax
  406b6e:	mov    ecx,r13d
  406b71:	movzx  r15d,BYTE PTR [rbx+0x8]
  406b76:	mov    r14,QWORD PTR [rbx]
  406b79:	mov    eax,edx
  406b7b:	and    eax,0x4
  406b7e:	cmp    al,0x1
  406b80:	mov    eax,edx
  406b82:	sbb    r12d,r12d
  406b85:	and    eax,0x2
  406b88:	and    r12d,0xffffffec
  406b8c:	add    r12d,0x42
  406b90:	cmp    al,0x1
  406b92:	sbb    ebp,ebp
  406b94:	and    edx,0x8
  406b97:	and    ebp,0xffffffde
  406b9a:	add    ebp,0x50
  406b9d:	cmp    dl,0x1
  406ba0:	sbb    edi,edi
  406ba2:	and    edi,0xffffffe6
  406ba5:	call   0x4121a8
  406baa:	add    edi,0x48
  406bad:	cmp    eax,0x1
  406bb0:	mov    ecx,r13d
  406bb3:	sbb    esi,esi
  406bb5:	and    esi,0xffffffdf
  406bb8:	call   0x4121b0
  406bbd:	add    esi,0x4f
  406bc0:	mov    r8d,DWORD PTR [rsp+0x5c]
  406bc5:	cmp    eax,0x1
  406bc8:	sbb    edx,edx
  406bca:	lea    rcx,[rip+0x19cf7]        # 0x4208c8
  406bd1:	mov    DWORD PTR [rsp+0x38],r15d
  406bd6:	and    edx,0xffffffe5
  406bd9:	mov    QWORD PTR [rsp+0x30],r14
  406bde:	mov    DWORD PTR [rsp+0x28],r12d
  406be3:	mov    DWORD PTR [rsp+0x40],r8d
  406be8:	add    edx,0x49
  406beb:	mov    DWORD PTR [rsp+0x20],ebp
  406bef:	mov    r9d,edi
  406bf2:	mov    r8d,esi
  406bf5:	call   0x401560
  406bfa:	mov    rcx,rbx
  406bfd:	call   0x412248
  406c02:	test   rax,rax
  406c05:	mov    rbx,rax
  406c08:	jne    0x406b53
  406c0e:	xor    eax,eax
  406c10:	add    rsp,0x68
  406c14:	pop    rbx
  406c15:	pop    rsi
  406c16:	pop    rdi
  406c17:	pop    rbp
  406c18:	pop    r12
  406c1a:	pop    r13
  406c1c:	pop    r14
  406c1e:	pop    r15
  406c20:	ret    
  406c21:	nop    DWORD PTR [rax+rax*1+0x0]
  406c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c30:	push   r14
  406c32:	push   r13
  406c34:	push   r12
  406c36:	push   rbp
  406c37:	push   rdi
  406c38:	push   rsi
  406c39:	push   rbx
  406c3a:	sub    rsp,0x30
  406c3e:	lea    rcx,[rip+0x19cb3]        # 0x4208f8
  406c45:	xor    ebx,ebx
  406c47:	mov    edi,0x1
  406c4c:	call   0x401560
  406c51:	mov    ecx,ebx
  406c53:	mov    rsi,rdi
  406c56:	shl    rsi,cl
  406c59:	mov    rcx,rsi
  406c5c:	call   0x412398
  406c61:	test   rax,rax
  406c64:	mov    QWORD PTR [rsp+0x28],rax
  406c69:	je     0x406c87
  406c6b:	mov    rcx,rsi
  406c6e:	call   0x4123a8
  406c73:	mov    rdx,QWORD PTR [rsp+0x28]
  406c78:	lea    rcx,[rip+0x19caa]        # 0x420929
  406c7f:	mov    r8,rax
  406c82:	call   0x401560
  406c87:	add    ebx,0x1
  406c8a:	cmp    ebx,0x3f
  406c8d:	jne    0x406c51
  406c8f:	lea    rcx,[rip+0x19ca2]        # 0x420938
  406c96:	lea    r14,[rsp+0x28]
  406c9b:	lea    r13,[rsp+0x20]
  406ca0:	lea    rbp,[rip+0x19c4b]        # 0x4208f2
  406ca7:	lea    rdi,[rip+0x18715]        # 0x41f3c3
  406cae:	xor    r12d,r12d
  406cb1:	call   0x401560
  406cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cc0:	mov    r8,r14
  406cc3:	mov    rdx,r13
  406cc6:	mov    ecx,r12d
  406cc9:	call   0x412350
  406cce:	test   eax,eax
  406cd0:	jne    0x406d47
  406cd2:	mov    rdx,QWORD PTR [rsp+0x28]
  406cd7:	test   rdx,rdx
  406cda:	je     0x406d3e
  406cdc:	lea    rcx,[rip+0x19c8e]        # 0x420971
  406ce3:	mov    esi,0x40
  406ce8:	mov    ebx,0x1
  406ced:	call   0x401560
  406cf2:	jmp    0x406cfc
  406cf4:	add    rbx,rbx
  406cf7:	sub    esi,0x1
  406cfa:	je     0x406d32
  406cfc:	test   QWORD PTR [rsp+0x20],rbx
  406d01:	je     0x406cf4
  406d03:	mov    rcx,rbx
  406d06:	call   0x412398
  406d0b:	mov    r8,rax
  406d0e:	lea    rax,[rbx-0x1]
  406d12:	test   QWORD PTR [rsp+0x20],rax
  406d17:	mov    rdx,rdi
  406d1a:	lea    rcx,[rip+0x19c57]        # 0x420978
  406d21:	cmovne rdx,rbp
  406d25:	add    rbx,rbx
  406d28:	call   0x401560
  406d2d:	sub    esi,0x1
  406d30:	jne    0x406cfc
  406d32:	lea    rcx,[rip+0x18913]        # 0x41f64c
  406d39:	call   0x401560
  406d3e:	add    r12d,0x1
  406d42:	jmp    0x406cc0
  406d47:	xor    eax,eax
  406d49:	add    rsp,0x30
  406d4d:	pop    rbx
  406d4e:	pop    rsi
  406d4f:	pop    rdi
  406d50:	pop    rbp
  406d51:	pop    r12
  406d53:	pop    r13
  406d55:	pop    r14
  406d57:	ret    
  406d58:	nop    DWORD PTR [rax+rax*1+0x0]
  406d60:	push   rsi
  406d61:	push   rbx
  406d62:	sub    rsp,0xa8
  406d69:	mov    ebx,0xffffffff
  406d6e:	lea    rsi,[rsp+0x20]
  406d73:	mov    r8d,ebx
  406d76:	mov    edx,0x80
  406d7b:	mov    rcx,rsi
  406d7e:	call   0x412358
  406d83:	lea    rcx,[rip+0x189cc]        # 0x41f756
  406d8a:	mov    rdx,rax
  406d8d:	add    ebx,0x1
  406d90:	call   0x401560
  406d95:	cmp    ebx,0xa
  406d98:	jne    0x406d73
  406d9a:	xor    eax,eax
  406d9c:	add    rsp,0xa8
  406da3:	pop    rbx
  406da4:	pop    rsi
  406da5:	ret    
  406da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406db0:	push   rbp
  406db1:	push   rdi
  406db2:	push   rsi
  406db3:	push   rbx
  406db4:	sub    rsp,0x38
  406db8:	lea    rcx,[rip+0xffffffffffffa771]        # 0x401530
  406dbf:	mov    rbx,r8
  406dc2:	call   0x4122e0
  406dc7:	lea    rcx,[rip+0x185f5]        # 0x41f3c3
  406dce:	test   rbx,rbx
  406dd1:	cmovne rcx,rbx
  406dd5:	call   0x412220
  406dda:	test   rax,rax
  406ddd:	mov    rbx,rax
  406de0:	mov    QWORD PTR [rsp+0x28],rax
  406de5:	je     0x407228
  406deb:	mov    edx,0x3d
  406df0:	mov    rcx,rax
  406df3:	call   0x419860
  406df8:	test   rax,rax
  406dfb:	je     0x4070b3
  406e01:	lea    rbp,[rax+0x1]
  406e05:	mov    BYTE PTR [rax],0x0
  406e08:	cmp    BYTE PTR [rbx],0x0
  406e0b:	je     0x406fe0
  406e11:	lea    rdi,[rip+0x19b65]        # 0x42097d
  406e18:	mov    ecx,0x8
  406e1d:	mov    rsi,rbx
  406e20:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e22:	je     0x407000
  406e28:	lea    rdi,[rip+0x19b56]        # 0x420985
  406e2f:	mov    ecx,0x8
  406e34:	mov    rsi,rbx
  406e37:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e39:	je     0x407010
  406e3f:	lea    rdi,[rip+0x19b47]        # 0x42098d
  406e46:	mov    ecx,0x8
  406e4b:	mov    rsi,rbx
  406e4e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e50:	je     0x4070c0
  406e56:	lea    rdi,[rip+0x19b7c]        # 0x4209d9
  406e5d:	mov    ecx,0x6
  406e62:	mov    rsi,rbx
  406e65:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e67:	je     0x407020
  406e6d:	lea    rdi,[rip+0x19bed]        # 0x420a61
  406e74:	mov    ecx,0x7
  406e79:	mov    rsi,rbx
  406e7c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e7e:	jne    0x406fe0
  406e84:	mov    rcx,rbp
  406e87:	call   0x411fb8
  406e8c:	test   rbp,rbp
  406e8f:	mov    rsi,rax
  406e92:	je     0x407232
  406e98:	test   rax,rax
  406e9b:	je     0x40720d
  406ea1:	mov    rdx,QWORD PTR [rax]
  406ea4:	lea    rcx,[rip+0x19bee]        # 0x420a99
  406eab:	call   0x401560
  406eb0:	mov    rdx,QWORD PTR [rsi+0x8]
  406eb4:	test   rdx,rdx
  406eb7:	je     0x406ec5
  406eb9:	lea    rcx,[rip+0x197da]        # 0x42069a
  406ec0:	call   0x401560
  406ec5:	test   BYTE PTR [rsi+0x28],0x4
  406ec9:	jne    0x4071e1
  406ecf:	lea    rcx,[rip+0x19bf1]        # 0x420ac7
  406ed6:	xor    ebx,ebx
  406ed8:	call   0x401560
  406edd:	mov    rcx,QWORD PTR [rsi+0x10]
  406ee1:	call   0x411fa8
  406ee6:	test   eax,eax
  406ee8:	mov    ebp,eax
  406eea:	jle    0x406f2b
  406eec:	nop    DWORD PTR [rax+0x0]
  406ef0:	mov    rcx,QWORD PTR [rsi+0x10]
  406ef4:	mov    edx,ebx
  406ef6:	call   0x411f98
  406efb:	mov    ecx,eax
  406efd:	call   0x412378
  406f02:	mov    rcx,QWORD PTR [rsi+0x10]
  406f06:	mov    edx,ebx
  406f08:	mov    rdi,rax
  406f0b:	call   0x411fa0
  406f10:	lea    rcx,[rip+0x19bbd]        # 0x420ad4
  406f17:	mov    edx,ebx
  406f19:	mov    r8,rax
  406f1c:	mov    r9,rdi
  406f1f:	add    ebx,0x1
  406f22:	call   0x401560
  406f27:	cmp    ebx,ebp
  406f29:	jne    0x406ef0
  406f2b:	test   BYTE PTR [rsi+0x28],0x1
  406f2f:	jne    0x4071d0
  406f35:	test   ebp,ebp
  406f37:	je     0x4071a4
  406f3d:	lea    rcx,[rip+0x19bf6]        # 0x420b3a
  406f44:	xor    ebx,ebx
  406f46:	call   0x401560
  406f4b:	mov    rcx,QWORD PTR [rsi+0x18]
  406f4f:	call   0x411fa8
  406f54:	test   eax,eax
  406f56:	mov    ebp,eax
  406f58:	jle    0x406f9b
  406f5a:	nop    WORD PTR [rax+rax*1+0x0]
  406f60:	mov    rcx,QWORD PTR [rsi+0x18]
  406f64:	mov    edx,ebx
  406f66:	call   0x411f98
  406f6b:	mov    ecx,eax
  406f6d:	call   0x412378
  406f72:	mov    rcx,QWORD PTR [rsi+0x18]
  406f76:	mov    edx,ebx
  406f78:	mov    rdi,rax
  406f7b:	call   0x411fa0
  406f80:	lea    rcx,[rip+0x19b4d]        # 0x420ad4
  406f87:	mov    edx,ebx
  406f89:	mov    r8,rax
  406f8c:	mov    r9,rdi
  406f8f:	add    ebx,0x1
  406f92:	call   0x401560
  406f97:	cmp    ebx,ebp
  406f99:	jne    0x406f60
  406f9b:	test   BYTE PTR [rsi+0x28],0x2
  406f9f:	jne    0x4071b5
  406fa5:	test   ebp,ebp
  406fa7:	je     0x407193
  406fad:	mov    rcx,QWORD PTR [rsi+0x20]
  406fb1:	test   rcx,rcx
  406fb4:	je     0x406fc0
  406fb6:	mov    edx,0x10018
  406fbb:	call   0x4026c0
  406fc0:	test   DWORD PTR [rsi+0x28],0x30000
  406fc7:	je     0x406feb
  406fc9:	lea    rcx,[rip+0x19b98]        # 0x420b68
  406fd0:	call   0x401560
  406fd5:	jmp    0x406feb
  406fd7:	nop    WORD PTR [rax+rax*1+0x0]
  406fe0:	mov    rdx,rbp
  406fe3:	mov    rcx,rbx
  406fe6:	call   0x411ea0
  406feb:	lea    rcx,[rsp+0x28]
  406ff0:	call   0x4123b8
  406ff5:	xor    eax,eax
  406ff7:	add    rsp,0x38
  406ffb:	pop    rbx
  406ffc:	pop    rsi
  406ffd:	pop    rdi
  406ffe:	pop    rbp
  406fff:	ret    
  407000:	xor    edx,edx
  407002:	mov    rcx,rbp
  407005:	call   0x402d70
  40700a:	jmp    0x406feb
  40700c:	nop    DWORD PTR [rax+0x0]
  407010:	mov    edx,0x1
  407015:	mov    rcx,rbp
  407018:	call   0x402d70
  40701d:	jmp    0x406feb
  40701f:	nop
  407020:	xor    r8d,r8d
  407023:	xor    edx,edx
  407025:	mov    rcx,rbp
  407028:	call   0x412058
  40702d:	test   rax,rax
  407030:	mov    rbx,rax
  407033:	je     0x4071f2
  407039:	mov    rdx,QWORD PTR [rax]
  40703c:	mov    r8,QWORD PTR [rax+0x8]
  407040:	lea    rcx,[rip+0x19998]        # 0x4209df
  407047:	call   0x401560
  40704c:	mov    rdx,QWORD PTR [rbx+0x18]
  407050:	test   rdx,rdx
  407053:	je     0x407061
  407055:	lea    rcx,[rip+0x19961]        # 0x4209bd
  40705c:	call   0x401560
  407061:	mov    rdx,QWORD PTR [rbx+0x10]
  407065:	test   rdx,rdx
  407068:	je     0x407076
  40706a:	lea    rcx,[rip+0x1997e]        # 0x4209ef
  407071:	call   0x401560
  407076:	mov    ecx,DWORD PTR [rbx+0x24]
  407079:	test   ecx,ecx
  40707b:	jne    0x407170
  407081:	mov    ecx,DWORD PTR [rbx+0x20]
  407084:	test   ecx,ecx
  407086:	jne    0x407143
  40708c:	mov    ecx,DWORD PTR [rbx+0x28]
  40708f:	test   ecx,ecx
  407091:	jne    0x407120
  407097:	mov    rcx,QWORD PTR [rbx+0x38]
  40709b:	test   rcx,rcx
  40709e:	je     0x406feb
  4070a4:	mov    edx,0x1
  4070a9:	call   0x4026c0
  4070ae:	jmp    0x406feb
  4070b3:	xor    ebp,ebp
  4070b5:	jmp    0x406e08
  4070ba:	nop    WORD PTR [rax+rax*1+0x0]
  4070c0:	mov    rcx,rbp
  4070c3:	call   0x412068
  4070c8:	test   rax,rax
  4070cb:	mov    rbx,rax
  4070ce:	je     0x4071f2
  4070d4:	mov    rdx,QWORD PTR [rax]
  4070d7:	mov    r8,QWORD PTR [rax+0x8]
  4070db:	lea    rcx,[rip+0x198c9]        # 0x4209ab
  4070e2:	call   0x401560
  4070e7:	mov    rdx,QWORD PTR [rbx+0x18]
  4070eb:	test   rdx,rdx
  4070ee:	je     0x4070fc
  4070f0:	lea    rcx,[rip+0x198c6]        # 0x4209bd
  4070f7:	call   0x401560
  4070fc:	mov    rcx,QWORD PTR [rbx+0x28]
  407100:	test   rcx,rcx
  407103:	je     0x406feb
  407109:	mov    edx,0x2
  40710e:	call   0x4026c0
  407113:	jmp    0x406feb
  407118:	nop    DWORD PTR [rax+rax*1+0x0]
  407120:	call   0x4120c8
  407125:	test   rax,rax
  407128:	je     0x407097
  40712e:	mov    rdx,QWORD PTR [rax+0x8]
  407132:	lea    rcx,[rip+0x19907]        # 0x420a40
  407139:	call   0x401560
  40713e:	jmp    0x407097
  407143:	call   0x4120c8
  407148:	test   rax,rax
  40714b:	je     0x40708c
  407151:	mov    rdx,QWORD PTR [rax+0x8]
  407155:	lea    rcx,[rip+0x198c5]        # 0x420a21
  40715c:	call   0x401560
  407161:	jmp    0x40708c
  407166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407170:	call   0x4120c8
  407175:	test   rax,rax
  407178:	je     0x407081
  40717e:	mov    rdx,QWORD PTR [rax+0x8]
  407182:	lea    rcx,[rip+0x1987a]        # 0x420a03
  407189:	call   0x401560
  40718e:	jmp    0x407081
  407193:	lea    rcx,[rip+0x199ae]        # 0x420b48
  40719a:	call   0x401560
  40719f:	jmp    0x406fad
  4071a4:	lea    rcx,[rip+0x19971]        # 0x420b1c
  4071ab:	call   0x401560
  4071b0:	jmp    0x406f3d
  4071b5:	lea    rcx,[rip+0x19934]        # 0x420af0
  4071bc:	call   0x401560
  4071c1:	jmp    0x406fad
  4071c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071d0:	lea    rcx,[rip+0x19919]        # 0x420af0
  4071d7:	call   0x401560
  4071dc:	jmp    0x406f3d
  4071e1:	lea    rcx,[rip+0x198c0]        # 0x420aa8
  4071e8:	call   0x401560
  4071ed:	jmp    0x406ecf
  4071f2:	lea    r8,[rip+0x1979c]        # 0x420995
  4071f9:	mov    r9,rbp
  4071fc:	mov    edx,0x10
  407201:	xor    ecx,ecx
  407203:	call   0x412308
  407208:	jmp    0x406feb
  40720d:	lea    r8,[rip+0x1986f]        # 0x420a83
  407214:	mov    r9,rbp
  407217:	mov    edx,0x10
  40721c:	xor    ecx,ecx
  40721e:	call   0x412308
  407223:	jmp    0x406feb
  407228:	mov    eax,0xfffffff4
  40722d:	jmp    0x406ff7
  407232:	lea    r8,[rip+0x1982f]        # 0x420a68
  407239:	mov    edx,0x10
  40723e:	xor    ecx,ecx
  407240:	call   0x412308
  407245:	jmp    0x406feb
  40724a:	nop    WORD PTR [rax+rax*1+0x0]
  407250:	push   rbx
  407251:	sub    rsp,0x20
  407255:	call   0x4198c0
  40725a:	lea    ecx,[rax-0x61]
  40725d:	mov    edx,eax
  40725f:	xor    eax,0x20
  407262:	cmp    ecx,0x19
  407265:	cmova  eax,edx
  407268:	xor    ebx,ebx
  40726a:	cmp    eax,0x59
  40726d:	sete   bl
  407270:	cmp    edx,0xffffffff
  407273:	je     0x40728f
  407275:	cmp    edx,0xa
  407278:	jne    0x407285
  40727a:	jmp    0x40728f
  40727c:	nop    DWORD PTR [rax+0x0]
  407280:	cmp    eax,0xa
  407283:	je     0x40728f
  407285:	call   0x4198c0
  40728a:	cmp    eax,0xffffffff
  40728d:	jne    0x407280
  40728f:	mov    eax,ebx
  407291:	add    rsp,0x20
  407295:	pop    rbx
  407296:	ret    
  407297:	nop    WORD PTR [rax+rax*1+0x0]
  4072a0:	push   r14
  4072a2:	push   r13
  4072a4:	push   r12
  4072a6:	push   rbp
  4072a7:	push   rdi
  4072a8:	push   rsi
  4072a9:	push   rbx
  4072aa:	sub    rsp,0x170
  4072b1:	mov    r12,QWORD PTR [rsp+0x1d0]
  4072b9:	mov    rsi,rcx
  4072bc:	lea    rcx,[rip+0x198f1]        # 0x420bb4
  4072c3:	mov    ebx,r9d
  4072c6:	mov    rdi,rdx
  4072c9:	mov    rbp,r8
  4072cc:	call   0x4198b8
  4072d1:	lea    rcx,[rip+0x198eb]        # 0x420bc3
  4072d8:	mov    r13,rax
  4072db:	mov    QWORD PTR [rsp+0x40],rax
  4072e0:	call   0x4198b8
  4072e5:	mov    QWORD PTR [rsp+0x48],rax
  4072ea:	lea    rax,[rip+0x198d7]        # 0x420bc8
  4072f1:	test   ebx,ebx
  4072f3:	mov    QWORD PTR [rsp+0x50],rax
  4072f8:	jne    0x407510
  4072fe:	lea    r14,[rsp+0x60]
  407303:	xor    ecx,ecx
  407305:	mov    QWORD PTR [rsp+0x50],0x0
  40730e:	call   QWORD PTR [rip+0x246d8]        # 0x42b9ec
  407314:	mov    r8d,0x103
  40731a:	mov    rdx,r14
  40731d:	mov    rcx,rax
  407320:	call   QWORD PTR [rip+0x246be]        # 0x42b9e4
  407326:	test   eax,eax
  407328:	jne    0x407412
  40732e:	mov    rbx,r13
  407331:	xor    r13d,r13d
  407334:	lea    r14,[rsp+0x40]
  407339:	test   rbx,rbx
  40733c:	je     0x4073ec
  407342:	cmp    r13d,0x1
  407346:	je     0x4074b0
  40734c:	lea    rax,[rip+0x18070]        # 0x41f3c3
  407353:	lea    r8,[rip+0x198d8]        # 0x420c32
  40735a:	mov    r9,rbx
  40735d:	mov    rdx,rdi
  407360:	mov    rcx,rsi
  407363:	mov    QWORD PTR [rsp+0x28],rbp
  407368:	mov    QWORD PTR [rsp+0x20],rax
  40736d:	call   0x401670
  407372:	lea    rdx,[rip+0x19898]        # 0x420c11
  407379:	mov    rcx,rsi
  40737c:	call   0x4198f0
  407381:	test   rax,rax
  407384:	sete   dl
  407387:	jne    0x4073ce
  407389:	test   r12,r12
  40738c:	lea    rcx,[rip+0x18030]        # 0x41f3c3
  407393:	je     0x4073ce
  407395:	lea    r8,[rip+0x19882]        # 0x420c1e
  40739c:	mov    QWORD PTR [rsp+0x20],rcx
  4073a1:	mov    r9,rbx
  4073a4:	mov    rdx,rdi
  4073a7:	mov    rcx,rsi
  4073aa:	mov    QWORD PTR [rsp+0x30],rbp
  4073af:	mov    QWORD PTR [rsp+0x28],r12
  4073b4:	call   0x401670
  4073b9:	lea    rdx,[rip+0x19851]        # 0x420c11
  4073c0:	mov    rcx,rsi
  4073c3:	call   0x4198f0
  4073c8:	test   rax,rax
  4073cb:	sete   dl
  4073ce:	add    r13d,0x1
  4073d2:	add    r14,0x8
  4073d6:	test   dl,dl
  4073d8:	je     0x407400
  4073da:	cmp    r13d,0x2
  4073de:	jg     0x407400
  4073e0:	mov    rbx,QWORD PTR [r14]
  4073e3:	test   rbx,rbx
  4073e6:	jne    0x407342
  4073ec:	mov    edx,0x1
  4073f1:	xor    eax,eax
  4073f3:	add    r13d,0x1
  4073f7:	add    r14,0x8
  4073fb:	test   dl,dl
  4073fd:	jne    0x4073da
  4073ff:	nop
  407400:	add    rsp,0x170
  407407:	pop    rbx
  407408:	pop    rsi
  407409:	pop    rdi
  40740a:	pop    rbp
  40740b:	pop    r12
  40740d:	pop    r13
  40740f:	pop    r14
  407411:	ret    
  407412:	mov    r11,r14
  407415:	mov    edx,DWORD PTR [r11]
  407418:	add    r11,0x4
  40741c:	lea    eax,[rdx-0x1010101]
  407422:	not    edx
  407424:	and    eax,edx
  407426:	and    eax,0x80808080
  40742b:	je     0x407415
  40742d:	mov    edx,eax
  40742f:	mov    r10,r14
  407432:	shr    edx,0x10
  407435:	test   eax,0x8080
  40743a:	cmove  eax,edx
  40743d:	lea    rdx,[r11+0x2]
  407441:	cmove  r11,rdx
  407445:	add    al,al
  407447:	sbb    r11,0x3
  40744b:	sub    r11,r14
  40744e:	jmp    0x407454
  407450:	add    r10,0x1
  407454:	lea    rax,[r14+r11*1]
  407458:	cmp    r10,rax
  40745b:	jae    0x407532
  407461:	cmp    BYTE PTR [r10],0x5c
  407465:	jne    0x407450
  407467:	mov    BYTE PTR [r10],0x2f
  40746b:	mov    r11,r14
  40746e:	mov    eax,DWORD PTR [r11]
  407471:	add    r11,0x4
  407475:	lea    ebx,[rax-0x1010101]
  40747b:	not    eax
  40747d:	and    ebx,eax
  40747f:	and    ebx,0x80808080
  407485:	je     0x40746e
  407487:	mov    eax,ebx
  407489:	shr    eax,0x10
  40748c:	test   ebx,0x8080
  407492:	cmove  ebx,eax
  407495:	lea    rax,[r11+0x2]
  407499:	cmove  r11,rax
  40749d:	add    bl,bl
  40749f:	sbb    r11,0x3
  4074a3:	sub    r11,r14
  4074a6:	jmp    0x407450
  4074a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4074b0:	lea    rax,[rip+0x196f4]        # 0x420bab
  4074b7:	lea    r8,[rip+0x19774]        # 0x420c32
  4074be:	mov    r9,rbx
  4074c1:	mov    rdx,rdi
  4074c4:	mov    rcx,rsi
  4074c7:	mov    QWORD PTR [rsp+0x28],rbp
  4074cc:	mov    QWORD PTR [rsp+0x20],rax
  4074d1:	call   0x401670
  4074d6:	lea    rdx,[rip+0x19734]        # 0x420c11
  4074dd:	mov    rcx,rsi
  4074e0:	call   0x4198f0
  4074e5:	test   rax,rax
  4074e8:	sete   dl
  4074eb:	jne    0x4073ce
  4074f1:	test   r12,r12
  4074f4:	lea    rcx,[rip+0x196b0]        # 0x420bab
  4074fb:	jne    0x407395
  407501:	jmp    0x4073ce
  407506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407510:	mov    rdx,rbp
  407513:	mov    rcx,rsi
  407516:	mov    r8,rdi
  407519:	call   0x412200
  40751e:	lea    rdx,[rip+0x196ec]        # 0x420c11
  407525:	mov    rcx,rsi
  407528:	call   0x4198f0
  40752d:	jmp    0x407400
  407532:	mov    edx,0x2f
  407537:	mov    rcx,r14
  40753a:	call   0x419828
  40753f:	test   rax,rax
  407542:	je     0x40732e
  407548:	mov    BYTE PTR [rax],0x0
  40754b:	mov    rdx,r14
  40754e:	mov    ecx,DWORD PTR [rdx]
  407550:	add    rdx,0x4
  407554:	lea    eax,[rcx-0x1010101]
  40755a:	not    ecx
  40755c:	and    eax,ecx
  40755e:	and    eax,0x80808080
  407563:	je     0x40754e
  407565:	mov    ecx,eax
  407567:	shr    ecx,0x10
  40756a:	test   eax,0x8080
  40756f:	cmove  eax,ecx
  407572:	lea    rcx,[rdx+0x2]
  407576:	cmove  rdx,rcx
  40757a:	add    al,al
  40757c:	mov    rax,r14
  40757f:	sbb    rdx,0x3
  407583:	mov    rcx,r14
  407586:	sub    rax,rdx
  407589:	lea    rdx,[rip+0x19683]        # 0x420c13
  407590:	lea    r8,[rax+0x103]
  407597:	call   0x419838
  40759c:	mov    QWORD PTR [rsp+0x50],r14
  4075a1:	jmp    0x40732e
  4075a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4075b0:	push   rsi
  4075b1:	push   rbx
  4075b2:	sub    rsp,0x38
  4075b6:	mov    rbx,rcx
  4075b9:	mov    rsi,r8
  4075bc:	call   0x412000
  4075c1:	test   eax,eax
  4075c3:	js     0x4075d0
  4075c5:	add    rsp,0x38
  4075c9:	pop    rbx
  4075ca:	pop    rsi
  4075cb:	ret    
  4075cc:	nop    DWORD PTR [rax+0x0]
  4075d0:	lea    r8,[rip+0x19671]        # 0x420c48
  4075d7:	mov    r9,rsi
  4075da:	mov    edx,0x10
  4075df:	mov    rcx,rbx
  4075e2:	mov    DWORD PTR [rsp+0x2c],eax
  4075e6:	call   0x412308
  4075eb:	mov    eax,DWORD PTR [rsp+0x2c]
  4075ef:	add    rsp,0x38
  4075f3:	pop    rbx
  4075f4:	pop    rsi
  4075f5:	ret    
  4075f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407600:	push   r15
  407602:	push   r14
  407604:	push   r13
  407606:	push   r12
  407608:	push   rbp
  407609:	push   rdi
  40760a:	push   rsi
  40760b:	push   rbx
  40760c:	sub    rsp,0x68
  407610:	cmp    QWORD PTR [r8+0x10],0x1
  407615:	mov    rbp,QWORD PTR [rsp+0xd0]
  40761d:	mov    r13,rcx
  407620:	mov    DWORD PTR [rsp+0xb8],edx
  407627:	mov    rsi,r8
  40762a:	mov    r12,r9
  40762d:	mov    QWORD PTR [rsp+0x50],0x0
  407636:	sbb    r15d,r15d
  407639:	not    r15d
  40763c:	add    r15d,0xa
  407640:	cmp    QWORD PTR [r8+0x10],0x1
  407645:	sbb    r14d,r14d
  407648:	not    r14d
  40764b:	add    r14d,0x22
  40764f:	cmp    QWORD PTR [r8+0x10],0x1
  407654:	sbb    edi,edi
  407656:	not    edi
  407658:	add    edi,0x12
  40765b:	cmp    QWORD PTR [r8+0x10],0x1
  407660:	sbb    ebx,ebx
  407662:	not    ebx
  407664:	call   0x412090
  407669:	add    ebx,0x2
  40766c:	test   rbp,rbp
  40766f:	mov    QWORD PTR [rsp+0x58],rax
  407674:	je     0x407840
  40767a:	mov    rax,QWORD PTR [r12+0x8]
  40767f:	mov    eax,DWORD PTR [rax+0xc]
  407682:	cmp    eax,0x1
  407685:	je     0x4077e1
  40768b:	cmp    eax,0x3
  40768e:	je     0x4077d4
  407694:	test   eax,eax
  407696:	cmovne edi,ebx
  407699:	cmp    eax,0x1
  40769c:	sbb    eax,eax
  40769e:	and    eax,0x76
  4076a1:	mov    BYTE PTR [rsp+0x4b],al
  4076a5:	lea    rax,[rsp+0x58]
  4076aa:	xor    ebx,ebx
  4076ac:	mov    QWORD PTR [rsp+0x30],rax
  4076b1:	lea    rax,[rsp+0x50]
  4076b6:	mov    QWORD PTR [rsp+0x38],rax
  4076bb:	lea    rax,[rbp+0x50]
  4076bf:	mov    QWORD PTR [rsp+0x40],rax
  4076c4:	lea    rdx,[rip+0x17cf8]        # 0x41f3c3
  4076cb:	mov    r8,rbx
  4076ce:	mov    r9d,0x2
  4076d4:	mov    rcx,r13
  4076d7:	call   0x412438
  4076dc:	test   rax,rax
  4076df:	mov    rbx,rax
  4076e2:	je     0x407860
  4076e8:	mov    r15,QWORD PTR [rbx]
  4076eb:	mov    edx,0x3a
  4076f0:	mov    rcx,r15
  4076f3:	call   0x419860
  4076f8:	test   rax,rax
  4076fb:	mov    r14,rax
  4076fe:	je     0x40772a
  407700:	lea    r15,[rax+0x1]
  407704:	mov    rdx,r12
  407707:	mov    rcx,rsi
  40770a:	mov    r8,r15
  40770d:	call   0x412000
  407712:	test   eax,eax
  407714:	js     0x4077b0
  40771a:	test   eax,eax
  40771c:	je     0x4076c4
  40771e:	cmp    eax,0x1
  407721:	jne    0x4077a0
  407723:	mov    BYTE PTR [r14],0x0
  407727:	mov    r15,QWORD PTR [rbx]
  40772a:	mov    rcx,QWORD PTR [rsp+0x30]
  40772f:	xor    r8d,r8d
  407732:	mov    DWORD PTR [rsp+0x20],0x2
  40773a:	mov    r9d,edi
  40773d:	mov    rdx,r15
  407740:	call   0x4122a0
  407745:	test   rax,rax
  407748:	jne    0x40777a
  40774a:	test   rbp,rbp
  40774d:	je     0x40777a
  40774f:	cmp    QWORD PTR [rbp+0x50],0x0
  407754:	je     0x4077f0
  40775a:	mov    DWORD PTR [rsp+0x20],0x2
  407762:	mov    rcx,QWORD PTR [rsp+0x40]
  407767:	xor    r8d,r8d
  40776a:	mov    rdx,QWORD PTR [rbx]
  40776d:	mov    r9d,edi
  407770:	call   0x4122a0
  407775:	test   rax,rax
  407778:	je     0x4077f0
  40777a:	mov    r8,QWORD PTR [rbx+0x8]
  40777e:	mov    rdx,QWORD PTR [rbx]
  407781:	xor    r9d,r9d
  407784:	mov    rcx,QWORD PTR [rsp+0x38]
  407789:	call   0x412428
  40778e:	test   r14,r14
  407791:	je     0x4076c4
  407797:	mov    BYTE PTR [r14],0x3a
  40779b:	jmp    0x4076c4
  4077a0:	mov    ecx,0x1
  4077a5:	call   0x401cb0
  4077aa:	nop    WORD PTR [rax+rax*1+0x0]
  4077b0:	lea    r8,[rip+0x19491]        # 0x420c48
  4077b7:	mov    r9,r15
  4077ba:	mov    edx,0x10
  4077bf:	mov    rcx,rsi
  4077c2:	mov    DWORD PTR [rsp+0x4c],eax
  4077c6:	call   0x412308
  4077cb:	mov    eax,DWORD PTR [rsp+0x4c]
  4077cf:	jmp    0x40771a
  4077d4:	mov    edi,r14d
  4077d7:	mov    BYTE PTR [rsp+0x4b],0x73
  4077dc:	jmp    0x4076a5
  4077e1:	mov    edi,r15d
  4077e4:	mov    BYTE PTR [rsp+0x4b],0x61
  4077e9:	jmp    0x4076a5
  4077ee:	xchg   ax,ax
  4077f0:	mov    rax,QWORD PTR [rbx]
  4077f3:	movzx  edx,BYTE PTR [rsp+0x4b]
  4077f8:	cmp    dl,BYTE PTR [rax]
  4077fa:	jne    0x40778e
  4077fc:	mov    rcx,QWORD PTR [rsp+0x30]
  407801:	lea    rdx,[rax+0x1]
  407805:	xor    r8d,r8d
  407808:	mov    DWORD PTR [rsp+0x20],0x2
  407810:	mov    r9d,edi
  407813:	call   0x4122a0
  407818:	test   rax,rax
  40781b:	je     0x40778e
  407821:	mov    rax,QWORD PTR [rbx]
  407824:	mov    r8,QWORD PTR [rbx+0x8]
  407828:	xor    r9d,r9d
  40782b:	mov    rcx,QWORD PTR [rsp+0x38]
  407830:	lea    rdx,[rax+0x1]
  407834:	call   0x412428
  407839:	jmp    0x40778e
  40783e:	xchg   ax,ax
  407840:	cmp    QWORD PTR [rsi+0x10],0x0
  407845:	mov    ecx,DWORD PTR [rsp+0xb8]
  40784c:	je     0x407876
  40784e:	call   0x4120a0
  407853:	mov    rbp,rax
  407856:	jmp    0x40767a
  40785b:	nop    DWORD PTR [rax+rax*1+0x0]
  407860:	mov    rax,QWORD PTR [rsp+0x50]
  407865:	add    rsp,0x68
  407869:	pop    rbx
  40786a:	pop    rsi
  40786b:	pop    rdi
  40786c:	pop    rbp
  40786d:	pop    r12
  40786f:	pop    r13
  407871:	pop    r14
  407873:	pop    r15
  407875:	ret    
  407876:	call   0x4120b0
  40787b:	mov    rbp,rax
  40787e:	jmp    0x40767a
  407883:	nop    DWORD PTR [rax]
  407886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407890:	push   r12
  407892:	push   rbp
  407893:	push   rdi
  407894:	push   rsi
  407895:	push   rbx
  407896:	sub    rsp,0x30
  40789a:	mov    eax,DWORD PTR [rcx+0x2c]
  40789d:	test   eax,eax
  40789f:	je     0x407935
  4078a5:	cmp    rax,0xffffffe
  4078ab:	mov    r12,rdx
  4078ae:	mov    rsi,rcx
  4078b1:	jbe    0x4078d3
  4078b3:	lea    r8,[rip+0x193ae]        # 0x420c68
  4078ba:	mov    edx,0x10
  4078bf:	xor    ecx,ecx
  4078c1:	call   0x412308
  4078c6:	xor    eax,eax
  4078c8:	add    rsp,0x30
  4078cc:	pop    rbx
  4078cd:	pop    rsi
  4078ce:	pop    rdi
  4078cf:	pop    rbp
  4078d0:	pop    r12
  4078d2:	ret    
  4078d3:	lea    rcx,[rax*8+0x0]
  4078db:	call   0x4122c0
  4078e0:	test   rax,rax
  4078e3:	mov    rbp,rax
  4078e6:	je     0x4078b3
  4078e8:	mov    eax,DWORD PTR [rsi+0x2c]
  4078eb:	xor    ebx,ebx
  4078ed:	xor    edi,edi
  4078ef:	test   eax,eax
  4078f1:	je     0x407927
  4078f3:	mov    rax,QWORD PTR [rsi+0x30]
  4078f7:	mov    r8,rsi
  4078fa:	mov    rcx,r12
  4078fd:	add    edi,0x1
  407900:	mov    r9,QWORD PTR [rax+rbx*1]
  407904:	mov    rax,QWORD PTR [r9+0x8]
  407908:	mov    edx,DWORD PTR [rax+0x38]
  40790b:	mov    QWORD PTR [rsp+0x20],0x0
  407914:	call   0x407600
  407919:	mov    QWORD PTR [rbp+rbx*1+0x0],rax
  40791e:	add    rbx,0x8
  407922:	cmp    edi,DWORD PTR [rsi+0x2c]
  407925:	jb     0x4078f3
  407927:	mov    rax,rbp
  40792a:	add    rsp,0x30
  40792e:	pop    rbx
  40792f:	pop    rsi
  407930:	pop    rdi
  407931:	pop    rbp
  407932:	pop    r12
  407934:	ret    
  407935:	xor    eax,eax
  407937:	add    rsp,0x30
  40793b:	pop    rbx
  40793c:	pop    rsi
  40793d:	pop    rdi
  40793e:	pop    rbp
  40793f:	pop    r12
  407941:	ret    
  407942:	nop    DWORD PTR [rax+0x0]
  407946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407950:	push   rbp
  407951:	push   rdi
  407952:	push   rsi
  407953:	push   rbx
  407954:	sub    rsp,0x28
  407958:	mov    eax,0x7fffffff
  40795d:	mov    ebx,edx
  40795f:	cdq    
  407960:	mov    rbp,r8
  407963:	idiv   ebx
  407965:	mov    esi,r9d
  407968:	cmp    eax,r9d
  40796b:	jle    0x4079c2
  40796d:	cmp    r9d,DWORD PTR [r8]
  407970:	mov    rax,rcx
  407973:	jg     0x407980
  407975:	add    rsp,0x28
  407979:	pop    rbx
  40797a:	pop    rsi
  40797b:	pop    rdi
  40797c:	pop    rbp
  40797d:	ret    
  40797e:	xchg   ax,ax
  407980:	movsxd rdx,r9d
  407983:	movsxd r8,ebx
  407986:	call   0x412240
  40798b:	test   rax,rax
  40798e:	mov    rdi,rax
  407991:	je     0x4079df
  407993:	mov    ecx,DWORD PTR [rbp+0x0]
  407996:	mov    r8d,esi
  407999:	xor    edx,edx
  40799b:	sub    r8d,ecx
  40799e:	imul   ecx,ebx
  4079a1:	imul   r8d,ebx
  4079a5:	movsxd rcx,ecx
  4079a8:	add    rcx,rax
  4079ab:	movsxd r8,r8d
  4079ae:	call   0x419878
  4079b3:	mov    rax,rdi
  4079b6:	mov    DWORD PTR [rbp+0x0],esi
  4079b9:	add    rsp,0x28
  4079bd:	pop    rbx
  4079be:	pop    rsi
  4079bf:	pop    rdi
  4079c0:	pop    rbp
  4079c1:	ret    
  4079c2:	lea    r8,[rip+0x17fb1]        # 0x41f97a
  4079c9:	xor    ecx,ecx
  4079cb:	mov    edx,0x10
  4079d0:	call   0x412308
  4079d5:	mov    ecx,0x1
  4079da:	call   0x401cb0
  4079df:	call   0x419c16
  4079e4:	nop
  4079e5:	nop
  4079e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079f0:	push   rdi
  4079f1:	push   rsi
  4079f2:	push   rbx
  4079f3:	sub    rsp,0x60
  4079f7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4079fc:	movaps XMMWORD PTR [rsp+0x50],xmm7
  407a01:	lea    rdx,[rip+0x1928c]        # 0x420c94
  407a08:	xor    r9d,r9d
  407a0b:	xor    r8d,r8d
  407a0e:	mov    rbx,rcx
  407a11:	mov    rcx,QWORD PTR [rcx+0x60]
  407a15:	call   0x412438
  407a1a:	xor    r8d,r8d
  407a1d:	mov    rsi,rax
  407a20:	mov    edx,0x5
  407a25:	mov    rcx,rbx
  407a28:	call   0x412028
  407a2d:	test   rsi,rsi
  407a30:	je     0x407a40
  407a32:	mov    r8,QWORD PTR [rsi+0x8]
  407a36:	cmp    BYTE PTR [r8],0x0
  407a3a:	jne    0x407ad2
  407a40:	pxor   xmm6,xmm6
  407a44:	test   rax,rax
  407a47:	jne    0x407b40
  407a4d:	movsd  xmm7,QWORD PTR [rip+0x193db]        # 0x420e30
  407a55:	movapd xmm0,xmm6
  407a59:	divsd  xmm0,xmm7
  407a5d:	addsd  xmm0,QWORD PTR [rip+0x193d3]        # 0x420e38
  407a65:	call   0x413a30
  407a6a:	mulsd  xmm7,xmm0
  407a6e:	subsd  xmm6,xmm7
  407a72:	movsd  xmm7,QWORD PTR [rip+0x193c6]        # 0x420e40
  407a7a:	movapd xmm0,xmm6
  407a7e:	divsd  xmm0,xmm7
  407a82:	call   0x413be0
  407a87:	mulsd  xmm7,xmm0
  407a8b:	movapd xmm0,xmm6
  407a8f:	movsd  xmm1,QWORD PTR [rip+0x193b9]        # 0x420e50
  407a97:	subsd  xmm0,xmm7
  407a9b:	andpd  xmm0,xmm1
  407a9f:	ucomisd xmm0,QWORD PTR [rip+0x193b9]        # 0x420e60
  407aa7:	jbe    0x407abc
  407aa9:	lea    r8,[rip+0x191f0]        # 0x420ca0
  407ab0:	mov    edx,0x18
  407ab5:	xor    ecx,ecx
  407ab7:	call   0x412308
  407abc:	movapd xmm0,xmm6
  407ac0:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  407ac5:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  407aca:	add    rsp,0x60
  407ace:	pop    rbx
  407acf:	pop    rsi
  407ad0:	pop    rdi
  407ad1:	ret    
  407ad2:	lea    rdi,[rip+0x17e5a]        # 0x41f933
  407ad9:	mov    ecx,0x2
  407ade:	mov    rsi,r8
  407ae1:	pxor   xmm6,xmm6
  407ae5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ae7:	seta   cl
  407aea:	setb   dl
  407aed:	cmp    cl,dl
  407aef:	je     0x407a44
  407af5:	lea    rdx,[rsp+0x38]
  407afa:	mov    rcx,r8
  407afd:	mov    QWORD PTR [rsp+0x28],rax
  407b02:	call   0x4121f8
  407b07:	mov    rdx,QWORD PTR [rsp+0x38]
  407b0c:	movapd xmm6,xmm0
  407b10:	mov    rax,QWORD PTR [rsp+0x28]
  407b15:	cmp    BYTE PTR [rdx],0x0
  407b18:	jne    0x407a40
  407b1e:	pxor   xmm0,xmm0
  407b22:	mov    ecx,0x0
  407b27:	ucomisd xmm6,xmm0
  407b2b:	setnp  dl
  407b2e:	cmovne edx,ecx
  407b31:	test   dl,dl
  407b33:	jne    0x407a44
  407b39:	jmp    0x407a4d
  407b3e:	xchg   ax,ax
  407b40:	mov    rcx,rax
  407b43:	call   0x412420
  407b48:	movsd  xmm6,QWORD PTR [rip+0x192d0]        # 0x420e20
  407b50:	xorpd  xmm6,xmm0
  407b54:	jmp    0x407a4d
  407b59:	nop    DWORD PTR [rax+0x0]
  407b60:	push   r13
  407b62:	push   r12
  407b64:	push   rbp
  407b65:	push   rdi
  407b66:	push   rsi
  407b67:	push   rbx
  407b68:	sub    rsp,0x58
  407b6c:	mov    rbx,r8
  407b6f:	mov    QWORD PTR [rsp+0x40],0x0
  407b78:	mov    QWORD PTR [rsp+0x48],0x0
  407b81:	call   0x4122e8
  407b86:	mov    ecx,0x10
  407b8b:	mov    r12d,eax
  407b8e:	call   0x4122d0
  407b93:	test   rbx,rbx
  407b96:	je     0x407cf0
  407b9c:	mov    rcx,rbx
  407b9f:	call   0x412220
  407ba4:	test   rax,rax
  407ba7:	mov    QWORD PTR [rsp+0x40],rax
  407bac:	je     0x407d06
  407bb2:	mov    edx,0x2c
  407bb7:	mov    rcx,rax
  407bba:	call   0x419860
  407bbf:	test   rax,rax
  407bc2:	je     0x407cfc
  407bc8:	cmp    BYTE PTR [rax+0x1],0x0
  407bcc:	mov    BYTE PTR [rax],0x0
  407bcf:	lea    rbp,[rsp+0x48]
  407bd4:	jne    0x407cb0
  407bda:	xor    ebx,ebx
  407bdc:	mov    r13d,0x6
  407be2:	mov    rcx,rbx
  407be5:	call   0x411f88
  407bea:	test   rax,rax
  407bed:	mov    rbx,rax
  407bf0:	je     0x407c40
  407bf2:	mov    rdx,QWORD PTR [rax]
  407bf5:	lea    rdi,[rip+0x191b7]        # 0x420db3
  407bfc:	mov    rcx,r13
  407bff:	mov    rsi,rdx
  407c02:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407c04:	je     0x407be2
  407c06:	mov    rcx,QWORD PTR [rsp+0x40]
  407c0b:	test   rcx,rcx
  407c0e:	je     0x407c19
  407c10:	call   0x4122b8
  407c15:	test   eax,eax
  407c17:	je     0x407be2
  407c19:	mov    rdx,QWORD PTR [rsp+0x48]
  407c1e:	mov    rcx,rbx
  407c21:	call   0x401690
  407c26:	mov    rcx,rbx
  407c29:	call   0x411f88
  407c2e:	test   rax,rax
  407c31:	mov    rbx,rax
  407c34:	jne    0x407bf2
  407c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c40:	mov    rcx,rbx
  407c43:	call   0x411f80
  407c48:	test   rax,rax
  407c4b:	mov    rbx,rax
  407c4e:	je     0x407c83
  407c50:	mov    rcx,QWORD PTR [rsp+0x40]
  407c55:	test   rcx,rcx
  407c58:	je     0x407c66
  407c5a:	mov    rdx,QWORD PTR [rax]
  407c5d:	call   0x4122b8
  407c62:	test   eax,eax
  407c64:	je     0x407c40
  407c66:	mov    rdx,QWORD PTR [rsp+0x48]
  407c6b:	mov    rcx,rbx
  407c6e:	call   0x401690
  407c73:	mov    rcx,rbx
  407c76:	call   0x411f80
  407c7b:	test   rax,rax
  407c7e:	mov    rbx,rax
  407c81:	jne    0x407c50
  407c83:	xor    ebx,ebx
  407c85:	mov    rcx,rbp
  407c88:	call   0x412440
  407c8d:	mov    rcx,QWORD PTR [rsp+0x40]
  407c92:	call   0x4123c0
  407c97:	mov    ecx,r12d
  407c9a:	call   0x4122d0
  407c9f:	mov    eax,ebx
  407ca1:	add    rsp,0x58
  407ca5:	pop    rbx
  407ca6:	pop    rsi
  407ca7:	pop    rdi
  407ca8:	pop    rbp
  407ca9:	pop    r12
  407cab:	pop    r13
  407cad:	ret    
  407cae:	xchg   ax,ax
  407cb0:	lea    rdx,[rax+0x1]
  407cb4:	lea    r9,[rip+0x17713]        # 0x41f3ce
  407cbb:	lea    r8,[rip+0x1770e]        # 0x41f3d0
  407cc2:	mov    DWORD PTR [rsp+0x20],0x0
  407cca:	mov    rcx,rbp
  407ccd:	call   0x412430
  407cd2:	test   eax,eax
  407cd4:	jns    0x407bda
  407cda:	lea    rcx,[rsp+0x40]
  407cdf:	mov    DWORD PTR [rsp+0x3c],eax
  407ce3:	call   0x4123b8
  407ce8:	mov    eax,DWORD PTR [rsp+0x3c]
  407cec:	mov    ebx,eax
  407cee:	jmp    0x407c85
  407cf0:	lea    rcx,[rip+0x19059]        # 0x420d50
  407cf7:	call   0x401560
  407cfc:	lea    rbp,[rsp+0x48]
  407d01:	jmp    0x407bda
  407d06:	mov    ebx,0xfffffff4
  407d0b:	lea    rbp,[rsp+0x48]
  407d10:	jmp    0x407c85
  407d15:	nop
  407d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d20:	push   rdi
  407d21:	push   rsi
  407d22:	push   rbx
  407d23:	sub    rsp,0x50
  407d27:	mov    rbx,r8
  407d2a:	mov    QWORD PTR [rsp+0x40],0x0
  407d33:	mov    QWORD PTR [rsp+0x48],0x0
  407d3c:	call   0x4122e8
  407d41:	mov    ecx,0x10
  407d46:	mov    edi,eax
  407d48:	call   0x4122d0
  407d4d:	test   rbx,rbx
  407d50:	je     0x407e90
  407d56:	mov    rcx,rbx
  407d59:	call   0x412220
  407d5e:	test   rax,rax
  407d61:	mov    QWORD PTR [rsp+0x40],rax
  407d66:	je     0x407ea6
  407d6c:	mov    edx,0x2c
  407d71:	mov    rcx,rax
  407d74:	call   0x419860
  407d79:	test   rax,rax
  407d7c:	je     0x407e9c
  407d82:	cmp    BYTE PTR [rax+0x1],0x0
  407d86:	mov    BYTE PTR [rax],0x0
  407d89:	lea    rsi,[rsp+0x48]
  407d8e:	jne    0x407e50
  407d94:	xor    ebx,ebx
  407d96:	mov    rcx,rbx
  407d99:	call   0x411f78
  407d9e:	test   rax,rax
  407da1:	mov    rbx,rax
  407da4:	je     0x407de0
  407da6:	mov    rcx,QWORD PTR [rsp+0x40]
  407dab:	test   rcx,rcx
  407dae:	je     0x407dbc
  407db0:	mov    rdx,QWORD PTR [rax]
  407db3:	call   0x4122b8
  407db8:	test   eax,eax
  407dba:	je     0x407d96
  407dbc:	mov    rdx,QWORD PTR [rsp+0x48]
  407dc1:	mov    rcx,rbx
  407dc4:	call   0x4017d0
  407dc9:	mov    rcx,rbx
  407dcc:	call   0x411f78
  407dd1:	test   rax,rax
  407dd4:	mov    rbx,rax
  407dd7:	jne    0x407da6
  407dd9:	nop    DWORD PTR [rax+0x0]
  407de0:	mov    rcx,rbx
  407de3:	call   0x411f70
  407de8:	test   rax,rax
  407deb:	mov    rbx,rax
  407dee:	je     0x407e23
  407df0:	mov    rcx,QWORD PTR [rsp+0x40]
  407df5:	test   rcx,rcx
  407df8:	je     0x407e06
  407dfa:	mov    rdx,QWORD PTR [rax]
  407dfd:	call   0x4122b8
  407e02:	test   eax,eax
  407e04:	je     0x407de0
  407e06:	mov    rdx,QWORD PTR [rsp+0x48]
  407e0b:	mov    rcx,rbx
  407e0e:	call   0x4017d0
  407e13:	mov    rcx,rbx
  407e16:	call   0x411f70
  407e1b:	test   rax,rax
  407e1e:	mov    rbx,rax
  407e21:	jne    0x407df0
  407e23:	xor    ebx,ebx
  407e25:	mov    rcx,rsi
  407e28:	call   0x412440
  407e2d:	mov    rcx,QWORD PTR [rsp+0x40]
  407e32:	call   0x4123c0
  407e37:	mov    ecx,edi
  407e39:	call   0x4122d0
  407e3e:	mov    eax,ebx
  407e40:	add    rsp,0x50
  407e44:	pop    rbx
  407e45:	pop    rsi
  407e46:	pop    rdi
  407e47:	ret    
  407e48:	nop    DWORD PTR [rax+rax*1+0x0]
  407e50:	lea    rdx,[rax+0x1]
  407e54:	lea    r9,[rip+0x17573]        # 0x41f3ce
  407e5b:	lea    r8,[rip+0x1756e]        # 0x41f3d0
  407e62:	mov    DWORD PTR [rsp+0x20],0x0
  407e6a:	mov    rcx,rsi
  407e6d:	call   0x412430
  407e72:	test   eax,eax
  407e74:	jns    0x407d94
  407e7a:	lea    rcx,[rsp+0x40]
  407e7f:	mov    DWORD PTR [rsp+0x3c],eax
  407e83:	call   0x4123b8
  407e88:	mov    eax,DWORD PTR [rsp+0x3c]
  407e8c:	mov    ebx,eax
  407e8e:	jmp    0x407e25
  407e90:	lea    rcx,[rip+0x18eb9]        # 0x420d50
  407e97:	call   0x401560
  407e9c:	lea    rsi,[rsp+0x48]
  407ea1:	jmp    0x407d94
  407ea6:	mov    ebx,0xfffffff4
  407eab:	lea    rsi,[rsp+0x48]
  407eb0:	jmp    0x407e25
  407eb5:	nop
  407eb6:	nop
  407eb7:	nop
  407eb8:	nop
  407eb9:	nop
  407eba:	nop
  407ebb:	nop
  407ebc:	nop
  407ebd:	nop
  407ebe:	nop
  407ebf:	nop
  407ec0:	mov    rax,QWORD PTR [rcx+0x8]
  407ec4:	mov    rax,QWORD PTR [rax+0x10]
  407ec8:	ret    
  407ec9:	nop    DWORD PTR [rax+0x0]
  407ed0:	push   rbx
  407ed1:	sub    rsp,0x20
  407ed5:	movsxd rdx,DWORD PTR [rcx+0x2c]
  407ed9:	mov    rbx,rcx
  407edc:	lea    rcx,[rcx+rdx*8]
  407ee0:	test   edx,edx
  407ee2:	mov    rax,rdx
  407ee5:	mov    r8,QWORD PTR [rcx+0x58]
  407ee9:	mov    r8d,DWORD PTR [r8]
  407eec:	je     0x407f03
  407eee:	mov    rcx,QWORD PTR [rcx+0x50]
  407ef2:	mov    ecx,DWORD PTR [rcx]
  407ef4:	cmp    ecx,0xffffffff
  407ef7:	je     0x407f03
  407ef9:	add    DWORD PTR [rbx+rdx*4+0x2c],0x1
  407efe:	cmp    ecx,0xf
  407f01:	je     0x407f24
  407f03:	mov    rdx,QWORD PTR [rbx+0x8]
  407f07:	mov    rdx,QWORD PTR [rdx+0x30]
  407f0b:	test   rdx,rdx
  407f0e:	je     0x407f18
  407f10:	mov    rcx,rbx
  407f13:	call   rdx
  407f15:	mov    eax,DWORD PTR [rbx+0x2c]
  407f18:	sub    eax,0x1
  407f1b:	mov    DWORD PTR [rbx+0x2c],eax
  407f1e:	add    rsp,0x20
  407f22:	pop    rbx
  407f23:	ret    
  407f24:	cmp    r8d,0xd
  407f28:	je     0x407f33
  407f2a:	add    DWORD PTR [rbx+0x28ac],0x1
  407f31:	jmp    0x407f03
  407f33:	add    DWORD PTR [rbx+0x28a8],0x1
  407f3a:	jmp    0x407f03
  407f3c:	nop    DWORD PTR [rax+0x0]
  407f40:	lea    rax,[rip+0x18f39]        # 0x420e80
  407f47:	ret    
  407f48:	nop    DWORD PTR [rax+rax*1+0x0]
  407f50:	mov    rax,rdx
  407f53:	ret    
  407f54:	xchg   ax,ax
  407f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f60:	lea    rax,[rip+0x18f21]        # 0x420e88
  407f67:	ret    
  407f68:	nop    DWORD PTR [rax+rax*1+0x0]
  407f70:	lea    rax,[rip+0x18f19]        # 0x420e90
  407f77:	ret    
  407f78:	nop    DWORD PTR [rax+rax*1+0x0]
  407f80:	lea    rax,[rip+0x18f0d]        # 0x420e94
  407f87:	ret    
  407f88:	nop    DWORD PTR [rax+rax*1+0x0]
  407f90:	lea    rax,[rip+0x18f02]        # 0x420e99
  407f97:	ret    
  407f98:	nop    DWORD PTR [rax+rax*1+0x0]
  407fa0:	lea    rax,[rip+0x18ef6]        # 0x420e9d
  407fa7:	ret    
  407fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  407fb0:	lea    rax,[rip+0x18ef5]        # 0x420eac
  407fb7:	ret    
  407fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  407fc0:	mov    DWORD PTR [rip+0x21372],0x1        # 0x42933c
  407fca:	mov    DWORD PTR [rip+0x21364],0x1        # 0x429338
  407fd4:	xor    eax,eax
  407fd6:	mov    DWORD PTR [rip+0x21354],0x1        # 0x429334
  407fe0:	mov    DWORD PTR [rip+0x21346],0x1        # 0x429330
  407fea:	ret    
  407feb:	nop    DWORD PTR [rax+rax*1+0x0]
  407ff0:	sub    rsp,0x38
  407ff4:	mov    QWORD PTR [rsp+0x48],rdx
  407ff9:	lea    rdx,[rsp+0x48]
  407ffe:	mov    QWORD PTR [rsp+0x50],r8
  408003:	mov    QWORD PTR [rsp+0x58],r9
  408008:	mov    QWORD PTR [rsp+0x28],rdx
  40800d:	call   0x413f00
  408012:	add    rsp,0x38
  408016:	ret    
  408017:	nop    WORD PTR [rax+rax*1+0x0]
  408020:	sub    rsp,0x38
  408024:	movsxd rax,DWORD PTR [rcx+0x2c]
  408028:	mov    eax,DWORD PTR [rcx+rax*4+0x30]
  40802c:	test   eax,eax
  40802e:	je     0x408050
  408030:	lea    rcx,[rip+0x18e71]        # 0x420ea8
  408037:	mov    QWORD PTR [rsp+0x28],r8
  40803c:	mov    QWORD PTR [rsp+0x20],rdx
  408041:	call   0x407ff0
  408046:	mov    r8,QWORD PTR [rsp+0x28]
  40804b:	mov    rdx,QWORD PTR [rsp+0x20]
  408050:	lea    rcx,[rip+0x18e59]        # 0x420eb0
  408057:	add    rsp,0x38
  40805b:	jmp    0x407ff0
  40805d:	nop    DWORD PTR [rax]
  408060:	push   rsi
  408061:	push   rbx
  408062:	sub    rsp,0x28
  408066:	movsxd rdx,DWORD PTR [rcx+0x2c]
  40806a:	mov    rbx,QWORD PTR [rcx+0x18]
  40806e:	test   edx,edx
  408070:	mov    rsi,QWORD PTR [rcx+rdx*8+0x58]
  408075:	jne    0x4080a0
  408077:	mov    edx,DWORD PTR [rbx+0x10]
  40807a:	lea    rax,[rip+0x18e39]        # 0x420eba
  408081:	lea    rcx,[rip+0x18e3c]        # 0x420ec4
  408088:	test   edx,edx
  40808a:	lea    rdx,[rip+0x18e32]        # 0x420ec3
  408091:	cmovne rdx,rax
  408095:	add    rsp,0x28
  408099:	pop    rbx
  40809a:	pop    rsi
  40809b:	jmp    0x407ff0
  4080a0:	mov    eax,DWORD PTR [rbx+0x8]
  4080a3:	test   eax,eax
  4080a5:	jne    0x4080e4
  4080a7:	test   BYTE PTR [rsi+0x10],0x4
  4080ab:	jne    0x4080d9
  4080ad:	mov    eax,DWORD PTR [rbx+0xc]
  4080b0:	lea    rcx,[rip+0x18e1f]        # 0x420ed6
  4080b7:	mov    r8d,0x20
  4080bd:	lea    edx,[rax*4+0x0]
  4080c4:	call   0x407ff0
  4080c9:	mov    rdx,QWORD PTR [rsi+0x8]
  4080cd:	lea    rcx,[rip+0x18e06]        # 0x420eda
  4080d4:	call   0x407ff0
  4080d9:	sub    DWORD PTR [rbx+0xc],0x1
  4080dd:	add    rsp,0x28
  4080e1:	pop    rbx
  4080e2:	pop    rsi
  4080e3:	ret    
  4080e4:	lea    rcx,[rip+0x18de7]        # 0x420ed2
  4080eb:	mov    DWORD PTR [rbx+0x8],0x0
  4080f2:	call   0x407ff0
  4080f7:	sub    DWORD PTR [rbx+0xc],0x1
  4080fb:	add    rsp,0x28
  4080ff:	pop    rbx
  408100:	pop    rsi
  408101:	ret    
  408102:	nop    DWORD PTR [rax+0x0]
  408106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408110:	push   rbp
  408111:	push   rdi
  408112:	push   rsi
  408113:	push   rbx
  408114:	sub    rsp,0x28
  408118:	movsxd rdx,DWORD PTR [rcx+0x2c]
  40811c:	mov    rbx,QWORD PTR [rcx+0x18]
  408120:	mov    rsi,rcx
  408123:	mov    rax,rdx
  408126:	lea    rdx,[rcx+rdx*8]
  40812a:	test   eax,eax
  40812c:	mov    rdi,QWORD PTR [rdx+0x58]
  408130:	je     0x4081c0
  408136:	mov    ecx,DWORD PTR [rbx+0x8]
  408139:	mov    rbp,QWORD PTR [rdx+0x50]
  40813d:	test   ecx,ecx
  40813f:	jne    0x408212
  408145:	mov    eax,DWORD PTR [rdi+0x10]
  408148:	test   al,0x4
  40814a:	jne    0x408205
  408150:	test   rbp,rbp
  408153:	je     0x408174
  408155:	test   BYTE PTR [rbp+0x10],0x1
  408159:	je     0x408174
  40815b:	mov    edx,DWORD PTR [rsi+0x2c]
  40815e:	test   edx,edx
  408160:	je     0x408174
  408162:	sub    edx,0x1
  408165:	movsxd rdx,edx
  408168:	mov    edx,DWORD PTR [rsi+rdx*4+0x30]
  40816c:	test   edx,edx
  40816e:	jne    0x408250
  408174:	mov    ecx,DWORD PTR [rbx+0xc]
  408177:	mov    r8d,0x20
  40817d:	lea    edx,[rcx+0x1]
  408180:	lea    rcx,[rip+0x18d4f]        # 0x420ed6
  408187:	mov    DWORD PTR [rbx+0xc],edx
  40818a:	shl    edx,0x2
  40818d:	test   al,0x2
  40818f:	jne    0x408232
  408195:	call   0x407ff0
  40819a:	mov    rdx,QWORD PTR [rdi+0x8]
  40819e:	lea    rcx,[rip+0x18e0d]        # 0x420fb2
  4081a5:	call   0x407ff0
  4081aa:	mov    DWORD PTR [rbx+0x8],0x1
  4081b1:	add    rsp,0x28
  4081b5:	pop    rbx
  4081b6:	pop    rsi
  4081b7:	pop    rdi
  4081b8:	pop    rbp
  4081b9:	ret    
  4081ba:	nop    WORD PTR [rax+rax*1+0x0]
  4081c0:	lea    rcx,[rip+0x18df1]        # 0x420fb8
  4081c7:	call   0x407ff0
  4081cc:	mov    eax,DWORD PTR [rbx+0x10]
  4081cf:	lea    r8,[rip+0x18ced]        # 0x420ec3
  4081d6:	lea    rcx,[rip+0x18dbd]        # 0x420f9a
  4081dd:	mov    rdx,r8
  4081e0:	test   eax,eax
  4081e2:	lea    rax,[rip+0x18cff]        # 0x420ee8
  4081e9:	cmovne r8,rax
  4081ed:	lea    rax,[rip+0x18cc6]        # 0x420eba
  4081f4:	cmovne rdx,rax
  4081f8:	add    rsp,0x28
  4081fc:	pop    rbx
  4081fd:	pop    rsi
  4081fe:	pop    rdi
  4081ff:	pop    rbp
  408200:	jmp    0x407ff0
  408205:	add    DWORD PTR [rbx+0xc],0x1
  408209:	add    rsp,0x28
  40820d:	pop    rbx
  40820e:	pop    rsi
  40820f:	pop    rdi
  408210:	pop    rbp
  408211:	ret    
  408212:	lea    rcx,[rip+0x18d90]        # 0x420fa9
  408219:	mov    DWORD PTR [rbx+0x8],0x0
  408220:	call   0x407ff0
  408225:	mov    eax,DWORD PTR [rdi+0x10]
  408228:	test   al,0x4
  40822a:	je     0x408150
  408230:	jmp    0x408205
  408232:	call   0x407ff0
  408237:	mov    rdx,QWORD PTR [rdi+0x8]
  40823b:	lea    rcx,[rip+0x18d6a]        # 0x420fac
  408242:	add    rsp,0x28
  408246:	pop    rbx
  408247:	pop    rsi
  408248:	pop    rdi
  408249:	pop    rbp
  40824a:	jmp    0x407ff0
  40824f:	nop
  408250:	lea    rcx,[rip+0x18c53]        # 0x420eaa
  408257:	call   0x407ff0
  40825c:	mov    eax,DWORD PTR [rdi+0x10]
  40825f:	jmp    0x408174
  408264:	xchg   ax,ax
  408266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408270:	push   rbx
  408271:	sub    rsp,0x20
  408275:	movsxd rdx,DWORD PTR [rcx+0x2c]
  408279:	mov    rbx,QWORD PTR [rcx+0x18]
  40827d:	mov    rax,rdx
  408280:	mov    rdx,QWORD PTR [rcx+rdx*8+0x58]
  408285:	test   eax,eax
  408287:	je     0x408300
  408289:	test   BYTE PTR [rdx+0x10],0x2
  40828d:	jne    0x4082c0
  40828f:	mov    rdx,QWORD PTR [rbx+0x18]
  408293:	lea    rcx,[rip+0x18d4c]        # 0x420fe6
  40829a:	call   0x407ff0
  40829f:	mov    eax,DWORD PTR [rbx+0x8]
  4082a2:	lea    edx,[rax-0x1]
  4082a5:	mov    eax,DWORD PTR [rbx+0xc]
  4082a8:	mov    DWORD PTR [rbx+0x8],edx
  4082ab:	test   eax,eax
  4082ad:	je     0x408315
  4082af:	lea    rcx,[rip+0x18d33]        # 0x420fe9
  4082b6:	add    rsp,0x20
  4082ba:	pop    rbx
  4082bb:	jmp    0x407ff0
  4082c0:	lea    rcx,[rip+0x18be3]        # 0x420eaa
  4082c7:	call   0x407ff0
  4082cc:	mov    eax,DWORD PTR [rbx+0x8]
  4082cf:	lea    rcx,[rip+0x18c00]        # 0x420ed6
  4082d6:	mov    r8d,0x20
  4082dc:	lea    edx,[rax-0x1]
  4082df:	mov    DWORD PTR [rbx+0x8],edx
  4082e2:	shl    edx,0x2
  4082e5:	call   0x407ff0
  4082ea:	lea    rcx,[rip+0x18cf3]        # 0x420fe4
  4082f1:	add    rsp,0x20
  4082f5:	pop    rbx
  4082f6:	jmp    0x407ff0
  4082fb:	nop    DWORD PTR [rax+rax*1+0x0]
  408300:	sub    DWORD PTR [rbx+0x8],0x1
  408304:	lea    rcx,[rip+0x18cd5]        # 0x420fe0
  40830b:	add    rsp,0x20
  40830f:	pop    rbx
  408310:	jmp    0x407ff0
  408315:	lea    rcx,[rip+0x18bba]        # 0x420ed6
  40831c:	shl    edx,0x2
  40831f:	mov    r8d,0x20
  408325:	call   0x407ff0
  40832a:	jmp    0x4082af
  40832c:	nop    DWORD PTR [rax+0x0]
  408330:	lea    rcx,[rip+0x18cb4]        # 0x420feb
  408337:	jmp    0x407ff0
  40833c:	nop    DWORD PTR [rax+0x0]
  408340:	movsxd rax,DWORD PTR [rcx+0x2c]
  408344:	mov    r9,r8
  408347:	mov    r8,rdx
  40834a:	shl    rax,0xa
  40834e:	mov    rax,QWORD PTR [rcx+rax*1+0xa8]
  408356:	lea    rcx,[rip+0x18c97]        # 0x420ff4
  40835d:	mov    rdx,rax
  408360:	jmp    0x407ff0
  408365:	nop
  408366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408370:	push   rbp
  408371:	push   rdi
  408372:	push   rsi
  408373:	push   rbx
  408374:	sub    rsp,0x28
  408378:	movsxd rax,DWORD PTR [rcx+0x2c]
  40837c:	mov    rsi,QWORD PTR [rcx+0x18]
  408380:	mov    rbp,rdx
  408383:	mov    rbx,rcx
  408386:	mov    rdi,r8
  408389:	mov    edx,DWORD PTR [rcx+rax*4+0x30]
  40838d:	test   edx,edx
  40838f:	jne    0x4083d0
  408391:	mov    eax,DWORD PTR [rsi+0x14]
  408394:	test   eax,eax
  408396:	jne    0x4083b7
  408398:	movsxd rax,DWORD PTR [rbx+0x2c]
  40839c:	lea    rcx,[rip+0x18c5f]        # 0x421002
  4083a3:	mov    r8,rbp
  4083a6:	shl    rax,0xa
  4083aa:	mov    rdx,QWORD PTR [rbx+rax*1+0xa8]
  4083b2:	call   0x407ff0
  4083b7:	lea    rcx,[rip+0x18c4a]        # 0x421008
  4083be:	mov    rdx,rdi
  4083c1:	add    rsp,0x28
  4083c5:	pop    rbx
  4083c6:	pop    rsi
  4083c7:	pop    rdi
  4083c8:	pop    rbp
  4083c9:	jmp    0x407ff0
  4083ce:	xchg   ax,ax
  4083d0:	movsx  edx,BYTE PTR [rsi+0x10]
  4083d4:	lea    rcx,[rip+0x18c24]        # 0x420fff
  4083db:	call   0x407ff0
  4083e0:	jmp    0x408391
  4083e2:	nop    DWORD PTR [rax+0x0]
  4083e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083f0:	movsxd rdx,DWORD PTR [rcx+0x2c]
  4083f4:	mov    rax,QWORD PTR [rcx+0x18]
  4083f8:	lea    rax,[rax+rdx*4]
  4083fc:	mov    r8d,DWORD PTR [rax+0x30]
  408400:	test   r8d,r8d
  408403:	jne    0x40841a
  408405:	mov    eax,DWORD PTR [rax+0x80]
  40840b:	test   eax,eax
  40840d:	je     0x40841a
  40840f:	mov    rax,QWORD PTR [rcx+rdx*8+0x58]
  408414:	test   BYTE PTR [rax+0x10],0x3
  408418:	je     0x408420
  40841a:	repz ret 
  40841c:	nop    DWORD PTR [rax+0x0]
  408420:	lea    rcx,[rip+0x18a83]        # 0x420eaa
  408427:	jmp    0x407ff0
  40842c:	nop    DWORD PTR [rax+0x0]
  408430:	push   rbx
  408431:	sub    rsp,0x20
  408435:	mov    rax,QWORD PTR [rcx+0x18]
  408439:	mov    rbx,r8
  40843c:	mov    eax,DWORD PTR [rax+0x8]
  40843f:	test   eax,eax
  408441:	jne    0x408465
  408443:	movsxd rax,DWORD PTR [rcx+0x2c]
  408447:	mov    r8,rdx
  40844a:	shl    rax,0xa
  40844e:	mov    rax,QWORD PTR [rcx+rax*1+0xa8]
  408456:	lea    rcx,[rip+0x18ba5]        # 0x421002
  40845d:	mov    rdx,rax
  408460:	call   0x407ff0
  408465:	lea    rcx,[rip+0x18ba1]        # 0x42100d
  40846c:	mov    rdx,rbx
  40846f:	add    rsp,0x20
  408473:	pop    rbx
  408474:	jmp    0x407ff0
  408479:	nop    DWORD PTR [rax+0x0]
  408480:	push   rbx
  408481:	sub    rsp,0x20
  408485:	mov    rax,QWORD PTR [rcx+0x18]
  408489:	mov    rbx,r8
  40848c:	mov    eax,DWORD PTR [rax+0x8]
  40848f:	test   eax,eax
  408491:	jne    0x4084b5
  408493:	movsxd rax,DWORD PTR [rcx+0x2c]
  408497:	mov    r8,rdx
  40849a:	shl    rax,0xa
  40849e:	mov    rax,QWORD PTR [rcx+rax*1+0xa8]
  4084a6:	lea    rcx,[rip+0x18b55]        # 0x421002
  4084ad:	mov    rdx,rax
  4084b0:	call   0x407ff0
  4084b5:	lea    rcx,[rip+0x18b55]        # 0x421011
  4084bc:	mov    rdx,rbx
  4084bf:	add    rsp,0x20
  4084c3:	pop    rbx
  4084c4:	jmp    0x407ff0
  4084c9:	nop    DWORD PTR [rax+0x0]
  4084d0:	sub    rsp,0x48
  4084d4:	mov    rax,QWORD PTR [rcx+0x18]
  4084d8:	movsxd rdx,DWORD PTR [rcx+0x2c]
  4084dc:	mov    r8d,DWORD PTR [rax+0xc]
  4084e0:	mov    rcx,QWORD PTR [rcx+rdx*8+0x58]
  4084e5:	test   r8d,r8d
  4084e8:	jne    0x4084f2
  4084ea:	mov    eax,DWORD PTR [rax+rdx*4+0x10]
  4084ee:	test   eax,eax
  4084f0:	je     0x408500
  4084f2:	add    rsp,0x48
  4084f6:	ret    
  4084f7:	nop    WORD PTR [rax+rax*1+0x0]
  408500:	test   BYTE PTR [rcx+0x10],0x3
  408504:	jne    0x4084f2
  408506:	mov    r10,QWORD PTR [rcx+0x8]
  40850a:	movzx  ecx,BYTE PTR [r10]
  40850e:	test   cl,cl
  408510:	je     0x40856a
  408512:	xor    eax,eax
  408514:	lea    rdx,[rsp+0x20]
  408519:	jmp    0x408526
  40851b:	nop    DWORD PTR [rax+rax*1+0x0]
  408520:	cmp    rax,0x1f
  408524:	je     0x408564
  408526:	movsx  r8d,cl
  40852a:	lea    r9d,[r8-0x61]
  40852e:	cmp    r9d,0x19
  408532:	ja     0x40853b
  408534:	xor    ecx,0x20
  408537:	movsx  r8d,cl
  40853b:	mov    BYTE PTR [rdx+rax*1],r8b
  40853f:	add    rax,0x1
  408543:	movzx  ecx,BYTE PTR [r10+rax*1]
  408548:	test   cl,cl
  40854a:	jne    0x408520
  40854c:	add    rax,rdx
  40854f:	lea    rcx,[rip+0x18ac1]        # 0x421017
  408556:	mov    BYTE PTR [rax],0x0
  408559:	call   0x407ff0
  40855e:	nop
  40855f:	add    rsp,0x48
  408563:	ret    
  408564:	lea    rax,[rdx+0x1f]
  408568:	jmp    0x40854f
  40856a:	lea    rdx,[rsp+0x20]
  40856f:	mov    rax,rdx
  408572:	jmp    0x40854f
  408574:	xchg   ax,ax
  408576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408580:	push   rsi
  408581:	push   rbx
  408582:	sub    rsp,0x28
  408586:	lea    rbx,[rip+0x14c43]        # 0x41d1d0
  40858d:	lea    rsi,[rip+0x15adc]        # 0x41e070
  408594:	mov    rcx,rbx
  408597:	add    rbx,0x60
  40859b:	call   0x412440
  4085a0:	cmp    rbx,rsi
  4085a3:	jne    0x408594
  4085a5:	add    rsp,0x28
  4085a9:	pop    rbx
  4085aa:	pop    rsi
  4085ab:	ret    
  4085ac:	nop    DWORD PTR [rax+0x0]
  4085b0:	push   rbp
  4085b1:	push   rdi
  4085b2:	push   rsi
  4085b3:	push   rbx
  4085b4:	sub    rsp,0x428
  4085bb:	movsxd rax,DWORD PTR [rcx+0x2c]
  4085bf:	mov    rsi,QWORD PTR [rcx+0x18]
  4085c3:	mov    rdi,rdx
  4085c6:	mov    rbx,rcx
  4085c9:	mov    rbp,r8
  4085cc:	mov    edx,DWORD PTR [rcx+rax*4+0x30]
  4085d0:	test   edx,edx
  4085d2:	jne    0x408650
  4085d4:	mov    eax,DWORD PTR [rsi+0x14]
  4085d7:	test   eax,eax
  4085d9:	jne    0x4085fa
  4085db:	movsxd rax,DWORD PTR [rbx+0x2c]
  4085df:	lea    rcx,[rip+0x18a1c]        # 0x421002
  4085e6:	mov    r8,rdi
  4085e9:	shl    rax,0xa
  4085ed:	mov    rdx,QWORD PTR [rbx+rax*1+0xa8]
  4085f5:	call   0x407ff0
  4085fa:	lea    rdi,[rsp+0x20]
  4085ff:	mov    r8d,0xffffffff
  408605:	mov    edx,0x1
  40860a:	mov    rcx,rdi
  40860d:	call   0x412480
  408612:	movsx  r8d,BYTE PTR [rsi+0x10]
  408617:	mov    r9,rbx
  40861a:	mov    rdx,rbp
  40861d:	mov    rcx,rdi
  408620:	call   QWORD PTR [rsi+0x28]
  408623:	lea    rcx,[rip+0x189bc]        # 0x420fe6
  40862a:	mov    rdx,rax
  40862d:	call   0x407ff0
  408632:	xor    edx,edx
  408634:	mov    rcx,rdi
  408637:	call   0x412488
  40863c:	nop
  40863d:	add    rsp,0x428
  408644:	pop    rbx
  408645:	pop    rsi
  408646:	pop    rdi
  408647:	pop    rbp
  408648:	ret    
  408649:	nop    DWORD PTR [rax+0x0]
  408650:	movsx  edx,BYTE PTR [rsi+0x10]
  408654:	lea    rcx,[rip+0x189a4]        # 0x420fff
  40865b:	call   0x407ff0
  408660:	jmp    0x4085d4
  408665:	nop
  408666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408670:	push   r13
  408672:	push   r12
  408674:	push   rbp
  408675:	push   rdi
  408676:	push   rsi
  408677:	push   rbx
  408678:	sub    rsp,0x28
  40867c:	movsxd rsi,DWORD PTR [rcx+0x2c]
  408680:	mov    r13,QWORD PTR [rcx+0x18]
  408684:	mov    rbx,rcx
  408687:	mov    rdx,rsi
  40868a:	shl    rdx,0xa
  40868e:	test   esi,esi
  408690:	lea    rdi,[rcx+rdx*1+0xa8]
  408698:	lea    rdx,[rcx+rsi*8]
  40869c:	mov    rbp,QWORD PTR [rdx+0x58]
  4086a0:	je     0x4087b0
  4086a6:	mov    r12,QWORD PTR [rdx+0x50]
  4086aa:	mov    rcx,rdi
  4086ad:	call   0x412490
  4086b2:	test   r12,r12
  4086b5:	je     0x4087b8
  4086bb:	mov    eax,DWORD PTR [rbx+0x2c]
  4086be:	sub    eax,0x1
  4086c1:	cdqe   
  4086c3:	mov    edx,DWORD PTR [rbx+rax*4+0x30]
  4086c7:	test   edx,edx
  4086c9:	jne    0x4087d0
  4086cf:	shl    rax,0xa
  4086d3:	lea    rdx,[rip+0x1890c]        # 0x420fe6
  4086da:	mov    rcx,rdi
  4086dd:	mov    r8,QWORD PTR [rbx+rax*1+0xa8]
  4086e5:	call   0x412478
  4086ea:	mov    eax,DWORD PTR [r13+0x8]
  4086ee:	test   eax,eax
  4086f0:	je     0x408790
  4086f6:	movsxd rax,DWORD PTR [rbx+0x2c]
  4086fa:	mov    rdx,rsi
  4086fd:	lea    r8,[rip+0x1891a]        # 0x42101e
  408704:	shl    rdx,0xa
  408708:	mov    rcx,rdi
  40870b:	mov    rdx,QWORD PTR [rbx+rdx*1+0xa8]
  408713:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  408718:	cmp    BYTE PTR [rdx],0x0
  40871b:	lea    rdx,[rip+0x18911]        # 0x421033
  408722:	mov    r9,QWORD PTR [rax+0x8]
  408726:	lea    rax,[rip+0x18796]        # 0x420ec3
  40872d:	cmove  r8,rax
  408731:	call   0x412478
  408736:	test   BYTE PTR [r12+0x10],0x2
  40873c:	je     0x408765
  40873e:	cmp    DWORD PTR [r12],0xf
  408743:	je     0x4087f0
  408749:	mov    eax,DWORD PTR [rbx+0x2c]
  40874c:	sub    eax,0x1
  40874f:	cdqe   
  408751:	mov    r8d,DWORD PTR [rbx+rax*4+0x30]
  408756:	lea    rdx,[rip+0x188db]        # 0x421038
  40875d:	mov    rcx,rdi
  408760:	call   0x412478
  408765:	test   BYTE PTR [rbp+0x10],0x3
  408769:	jne    0x40879a
  40876b:	shl    rsi,0xa
  40876f:	lea    rcx,[rip+0x188c6]        # 0x42103c
  408776:	mov    rdx,QWORD PTR [rbx+rsi*1+0xa8]
  40877e:	add    rsp,0x28
  408782:	pop    rbx
  408783:	pop    rsi
  408784:	pop    rdi
  408785:	pop    rbp
  408786:	pop    r12
  408788:	pop    r13
  40878a:	jmp    0x407ff0
  40878f:	nop
  408790:	test   BYTE PTR [rbp+0x10],0x3
  408794:	je     0x4086f6
  40879a:	add    rsp,0x28
  40879e:	pop    rbx
  40879f:	pop    rsi
  4087a0:	pop    rdi
  4087a1:	pop    rbp
  4087a2:	pop    r12
  4087a4:	pop    r13
  4087a6:	ret    
  4087a7:	nop    WORD PTR [rax+rax*1+0x0]
  4087b0:	mov    rcx,rdi
  4087b3:	call   0x412490
  4087b8:	lea    rcx,[rip+0x18861]        # 0x421020
  4087bf:	add    rsp,0x28
  4087c3:	pop    rbx
  4087c4:	pop    rsi
  4087c5:	pop    rdi
  4087c6:	pop    rbp
  4087c7:	pop    r12
  4087c9:	pop    r13
  4087cb:	jmp    0x407ff0
  4087d0:	lea    rcx,[rip+0x186d3]        # 0x420eaa
  4087d7:	call   0x407ff0
  4087dc:	mov    eax,DWORD PTR [rbx+0x2c]
  4087df:	sub    eax,0x1
  4087e2:	cdqe   
  4087e4:	jmp    0x4086cf
  4087e9:	nop    DWORD PTR [rax+0x0]
  4087f0:	mov    r8d,DWORD PTR [rbx+0x28b0]
  4087f7:	jmp    0x408756
  4087fc:	nop    DWORD PTR [rax+0x0]
  408800:	push   r12
  408802:	push   rbp
  408803:	push   rdi
  408804:	push   rsi
  408805:	push   rbx
  408806:	sub    rsp,0x20
  40880a:	mov    rdi,QWORD PTR [rcx+0x18]
  40880e:	mov    rax,rcx
  408811:	movsxd rcx,DWORD PTR [rcx+0x2c]
  408815:	mov    rdx,rcx
  408818:	mov    r8,rcx
  40881b:	lea    rcx,[rax+rcx*8]
  40881f:	shl    r8,0xa
  408823:	test   edx,edx
  408825:	lea    rsi,[rax+r8*1+0xa8]
  40882d:	mov    rbp,QWORD PTR [rcx+0x58]
  408831:	je     0x4088e0
  408837:	mov    r12,QWORD PTR [rcx+0x50]
  40883b:	mov    rcx,rsi
  40883e:	mov    rbx,rax
  408841:	call   0x412490
  408846:	test   r12,r12
  408849:	je     0x4088f2
  40884f:	mov    eax,DWORD PTR [rbx+0x2c]
  408852:	lea    rdx,[rip+0x1878d]        # 0x420fe6
  408859:	mov    rcx,rsi
  40885c:	sub    eax,0x1
  40885f:	cdqe   
  408861:	shl    rax,0xa
  408865:	mov    r8,QWORD PTR [rbx+rax*1+0xa8]
  40886d:	call   0x412478
  408872:	mov    eax,DWORD PTR [rdi+0x14]
  408875:	test   eax,eax
  408877:	jne    0x40887f
  408879:	test   BYTE PTR [rbp+0x10],0x3
  40887d:	jne    0x4088f2
  40887f:	movsxd rax,DWORD PTR [rbx+0x2c]
  408883:	mov    r9,QWORD PTR [rdi+0x8]
  408887:	lea    rdx,[rip+0x187a5]        # 0x421033
  40888e:	mov    rcx,rsi
  408891:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  408896:	mov    r8,QWORD PTR [rax+0x8]
  40889a:	call   0x412478
  40889f:	test   BYTE PTR [r12+0x10],0x2
  4088a5:	je     0x4088f2
  4088a7:	cmp    DWORD PTR [r12],0xf
  4088ac:	je     0x408900
  4088ae:	mov    eax,DWORD PTR [rbx+0x2c]
  4088b1:	sub    eax,0x1
  4088b4:	cdqe   
  4088b6:	mov    r8d,DWORD PTR [rbx+rax*4+0x30]
  4088bb:	mov    r9,QWORD PTR [rdi+0x8]
  4088bf:	lea    rdx,[rip+0x1877c]        # 0x421042
  4088c6:	mov    rcx,rsi
  4088c9:	add    rsp,0x20
  4088cd:	pop    rbx
  4088ce:	pop    rsi
  4088cf:	pop    rdi
  4088d0:	pop    rbp
  4088d1:	pop    r12
  4088d3:	jmp    0x412478
  4088d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4088e0:	mov    rcx,rsi
  4088e3:	add    rsp,0x20
  4088e7:	pop    rbx
  4088e8:	pop    rsi
  4088e9:	pop    rdi
  4088ea:	pop    rbp
  4088eb:	pop    r12
  4088ed:	jmp    0x412490
  4088f2:	add    rsp,0x20
  4088f6:	pop    rbx
  4088f7:	pop    rsi
  4088f8:	pop    rdi
  4088f9:	pop    rbp
  4088fa:	pop    r12
  4088fc:	ret    
  4088fd:	nop    DWORD PTR [rax]
  408900:	mov    r8d,DWORD PTR [rbx+0x28b0]
  408907:	jmp    0x4088bb
  408909:	nop    DWORD PTR [rax+0x0]
  408910:	push   rbp
  408911:	push   rdi
  408912:	push   rsi
  408913:	push   rbx
  408914:	sub    rsp,0x28
  408918:	movsxd rax,DWORD PTR [rcx+0x2c]
  40891c:	mov    rsi,QWORD PTR [rcx+0x18]
  408920:	mov    rbx,rcx
  408923:	lea    rcx,[rcx+rax*8]
  408927:	test   eax,eax
  408929:	mov    rdi,QWORD PTR [rcx+0x58]
  40892d:	je     0x408a05
  408933:	lea    rdx,[rsi+rax*4]
  408937:	shl    rax,0xa
  40893b:	mov    rbp,QWORD PTR [rcx+0x50]
  40893f:	lea    rcx,[rbx+rax*1+0xa8]
  408947:	mov    DWORD PTR [rdx+0x80],0x1
  408951:	mov    DWORD PTR [rdx+0x58],0x0
  408958:	call   0x412490
  40895d:	test   BYTE PTR [rdi+0x10],0x2
  408961:	je     0x408995
  408963:	test   rbp,rbp
  408966:	je     0x40897b
  408968:	movsxd rax,DWORD PTR [rbx+0x2c]
  40896c:	lea    rax,[rsi+rax*4]
  408970:	mov    edx,DWORD PTR [rax+0x54]
  408973:	test   edx,edx
  408975:	jne    0x408a32
  40897b:	mov    eax,DWORD PTR [rsi+0x18]
  40897e:	test   eax,eax
  408980:	je     0x40898c
  408982:	test   BYTE PTR [rdi+0x10],0x3
  408986:	je     0x408a50
  40898c:	add    rsp,0x28
  408990:	pop    rbx
  408991:	pop    rsi
  408992:	pop    rdi
  408993:	pop    rbp
  408994:	ret    
  408995:	test   rbp,rbp
  408998:	je     0x40897b
  40899a:	test   BYTE PTR [rbp+0x10],0x3
  40899e:	jne    0x40897b
  4089a0:	movsxd rdx,DWORD PTR [rbx+0x2c]
  4089a4:	lea    rcx,[rsi+rdx*4]
  4089a8:	mov    rax,rdx
  4089ab:	sub    eax,0x1
  4089ae:	mov    DWORD PTR [rcx+0x30],0x1
  4089b5:	mov    DWORD PTR [rcx+0x54],0x1
  4089bc:	cdqe   
  4089be:	mov    r9,QWORD PTR [rdi+0x40]
  4089c2:	test   r9,r9
  4089c5:	cmove  r9,QWORD PTR [rdi+0x8]
  4089ca:	shl    rax,0xa
  4089ce:	shl    rdx,0xa
  4089d2:	mov    r8,QWORD PTR [rbx+rax*1+0xa8]
  4089da:	lea    rcx,[rbx+rdx*1+0xa8]
  4089e2:	lea    rdx,[rip+0x1865e]        # 0x421047
  4089e9:	call   0x412478
  4089ee:	movsxd rax,DWORD PTR [rbx+0x2c]
  4089f2:	lea    rax,[rbx+rax*4]
  4089f6:	mov    edx,DWORD PTR [rax+0x2c]
  4089f9:	mov    DWORD PTR [rax+0x30],edx
  4089fc:	add    rsp,0x28
  408a00:	pop    rbx
  408a01:	pop    rsi
  408a02:	pop    rdi
  408a03:	pop    rbp
  408a04:	ret    
  408a05:	lea    rcx,[rbx+0xa8]
  408a0c:	mov    DWORD PTR [rsi+0x80],0x1
  408a16:	mov    DWORD PTR [rsi+0x58],0x0
  408a1d:	call   0x412490
  408a22:	mov    eax,DWORD PTR [rsi+0x18]
  408a25:	test   eax,eax
  408a27:	jne    0x408982
  408a2d:	jmp    0x40898c
  408a32:	lea    rcx,[rip+0x18471]        # 0x420eaa
  408a39:	mov    DWORD PTR [rax+0x7c],0x0
  408a40:	call   0x407ff0
  408a45:	jmp    0x40897b
  408a4a:	nop    WORD PTR [rax+rax*1+0x0]
  408a50:	movsx  r8d,BYTE PTR [rsi+0x10]
  408a55:	mov    rdx,QWORD PTR [rdi+0x8]
  408a59:	lea    rcx,[rip+0x185ed]        # 0x42104d
  408a60:	add    rsp,0x28
  408a64:	pop    rbx
  408a65:	pop    rsi
  408a66:	pop    rdi
  408a67:	pop    rbp
  408a68:	jmp    0x407ff0
  408a6d:	nop    DWORD PTR [rax]
  408a70:	push   rbp
  408a71:	push   rdi
  408a72:	push   rsi
  408a73:	push   rbx
  408a74:	sub    rsp,0x48
  408a78:	movsxd rax,DWORD PTR [rcx+0x2c]
  408a7c:	mov    rdi,QWORD PTR [rcx+0x18]
  408a80:	mov    rsi,rcx
  408a83:	lea    rcx,[rcx+rax*8]
  408a87:	test   eax,eax
  408a89:	mov    rbx,QWORD PTR [rcx+0x58]
  408a8d:	je     0x408b70
  408a93:	mov    rbp,QWORD PTR [rcx+0x50]
  408a97:	shl    rax,0xa
  408a9b:	lea    rcx,[rsi+rax*1+0xa8]
  408aa3:	call   0x412490
  408aa8:	test   rbp,rbp
  408aab:	je     0x408b51
  408ab1:	test   BYTE PTR [rbp+0x10],0x3
  408ab5:	jne    0x408b51
  408abb:	mov    rdx,QWORD PTR [rbx+0x40]
  408abf:	movsxd rbp,DWORD PTR [rsi+0x2c]
  408ac3:	lea    r9,[rsp+0x20]
  408ac8:	test   rdx,rdx
  408acb:	cmove  rdx,QWORD PTR [rbx+0x8]
  408ad0:	xor    eax,eax
  408ad2:	mov    DWORD PTR [rdi+rbp*4+0x10],0x1
  408ada:	mov    rcx,rbp
  408add:	movzx  r8d,BYTE PTR [rdx]
  408ae1:	test   r8b,r8b
  408ae4:	jne    0x408afa
  408ae6:	jmp    0x408c06
  408aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  408af0:	cmp    rax,0x1f
  408af4:	je     0x408bf0
  408afa:	movsx  r10d,r8b
  408afe:	lea    r11d,[r10-0x61]
  408b02:	cmp    r11d,0x19
  408b06:	ja     0x408b10
  408b08:	xor    r8d,0x20
  408b0c:	movsx  r10d,r8b
  408b10:	mov    BYTE PTR [r9+rax*1],r10b
  408b14:	add    rax,0x1
  408b18:	movzx  r8d,BYTE PTR [rdx+rax*1]
  408b1d:	test   r8b,r8b
  408b20:	jne    0x408af0
  408b22:	add    rax,r9
  408b25:	mov    BYTE PTR [rax],0x0
  408b28:	lea    eax,[rcx-0x1]
  408b2b:	shl    rbp,0xa
  408b2f:	lea    rcx,[rsi+rbp*1+0xa8]
  408b37:	lea    rdx,[rip+0x18509]        # 0x421047
  408b3e:	cdqe   
  408b40:	shl    rax,0xa
  408b44:	mov    r8,QWORD PTR [rsi+rax*1+0xa8]
  408b4c:	call   0x412478
  408b51:	mov    edx,DWORD PTR [rdi+0xc]
  408b54:	test   edx,edx
  408b56:	jne    0x408b64
  408b58:	movsxd rax,DWORD PTR [rsi+0x2c]
  408b5c:	mov    eax,DWORD PTR [rdi+rax*4+0x10]
  408b60:	test   eax,eax
  408b62:	je     0x408b80
  408b64:	add    rsp,0x48
  408b68:	pop    rbx
  408b69:	pop    rsi
  408b6a:	pop    rdi
  408b6b:	pop    rbp
  408b6c:	ret    
  408b6d:	nop    DWORD PTR [rax]
  408b70:	lea    rcx,[rsi+0xa8]
  408b77:	call   0x412490
  408b7c:	jmp    0x408b51
  408b7e:	xchg   ax,ax
  408b80:	test   BYTE PTR [rbx+0x10],0x3
  408b84:	jne    0x408b64
  408b86:	mov    r10,QWORD PTR [rbx+0x8]
  408b8a:	movzx  edx,BYTE PTR [r10]
  408b8e:	test   dl,dl
  408b90:	je     0x408c0e
  408b92:	xor    eax,eax
  408b94:	lea    r9,[rsp+0x20]
  408b99:	jmp    0x408ba6
  408b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  408ba0:	cmp    rax,0x1f
  408ba4:	je     0x408c00
  408ba6:	movsx  ecx,dl
  408ba9:	lea    r8d,[rcx-0x61]
  408bad:	cmp    r8d,0x19
  408bb1:	ja     0x408bb9
  408bb3:	xor    edx,0x20
  408bb6:	movsx  ecx,dl
  408bb9:	mov    BYTE PTR [r9+rax*1],cl
  408bbd:	add    rax,0x1
  408bc1:	movzx  edx,BYTE PTR [r10+rax*1]
  408bc6:	test   dl,dl
  408bc8:	jne    0x408ba0
  408bca:	add    rax,r9
  408bcd:	lea    rcx,[rip+0x18468]        # 0x42103c
  408bd4:	mov    rdx,r9
  408bd7:	mov    BYTE PTR [rax],0x0
  408bda:	call   0x407ff0
  408bdf:	nop
  408be0:	add    rsp,0x48
  408be4:	pop    rbx
  408be5:	pop    rsi
  408be6:	pop    rdi
  408be7:	pop    rbp
  408be8:	ret    
  408be9:	nop    DWORD PTR [rax+0x0]
  408bf0:	lea    rax,[r9+0x1f]
  408bf4:	jmp    0x408b25
  408bf9:	nop    DWORD PTR [rax+0x0]
  408c00:	lea    rax,[r9+0x1f]
  408c04:	jmp    0x408bcd
  408c06:	mov    rax,r9
  408c09:	jmp    0x408b25
  408c0e:	lea    r9,[rsp+0x20]
  408c13:	mov    rax,r9
  408c16:	jmp    0x408bcd
  408c18:	nop    DWORD PTR [rax+rax*1+0x0]
  408c20:	push   rbp
  408c21:	push   rdi
  408c22:	push   rsi
  408c23:	push   rbx
  408c24:	sub    rsp,0x28
  408c28:	lea    rsi,[rip+0x1843d]        # 0x42106c
  408c2f:	mov    rbp,rdx
  408c32:	mov    rdi,rcx
  408c35:	movzx  ebx,BYTE PTR [rbp+0x0]
  408c39:	test   bl,bl
  408c3b:	je     0x408c8e
  408c3d:	nop    DWORD PTR [rax]
  408c40:	lea    eax,[rbx-0x8]
  408c43:	cmp    al,0x54
  408c45:	ja     0x408c66
  408c47:	movzx  eax,al
  408c4a:	movsxd rax,DWORD PTR [rsi+rax*4]
  408c4e:	add    rax,rsi
  408c51:	jmp    rax
  408c53:	mov    r8d,0x1
  408c59:	mov    edx,0x5c
  408c5e:	mov    rcx,rdi
  408c61:	call   0x412498
  408c66:	cmp    bl,0x1f
  408c69:	ja     0x408d40
  408c6f:	lea    rdx,[rip+0x183eb]        # 0x421061
  408c76:	movsx  r8d,bl
  408c7a:	mov    rcx,rdi
  408c7d:	call   0x412478
  408c82:	add    rbp,0x1
  408c86:	movzx  ebx,BYTE PTR [rbp+0x0]
  408c8a:	test   bl,bl
  408c8c:	jne    0x408c40
  408c8e:	mov    rax,QWORD PTR [rdi]
  408c91:	add    rsp,0x28
  408c95:	pop    rbx
  408c96:	pop    rsi
  408c97:	pop    rdi
  408c98:	pop    rbp
  408c99:	ret    
  408c9a:	nop    WORD PTR [rax+rax*1+0x0]
  408ca0:	lea    r8,[rip+0x183b7]        # 0x42105e
  408ca7:	lea    rdx,[rip+0x18338]        # 0x420fe6
  408cae:	mov    rcx,rdi
  408cb1:	call   0x412478
  408cb6:	jmp    0x408c82
  408cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408cc0:	lea    r8,[rip+0x1838b]        # 0x421052
  408cc7:	lea    rdx,[rip+0x18318]        # 0x420fe6
  408cce:	mov    rcx,rdi
  408cd1:	call   0x412478
  408cd6:	jmp    0x408c82
  408cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  408ce0:	lea    r8,[rip+0x1836e]        # 0x421055
  408ce7:	lea    rdx,[rip+0x182f8]        # 0x420fe6
  408cee:	mov    rcx,rdi
  408cf1:	call   0x412478
  408cf6:	jmp    0x408c82
  408cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  408d00:	lea    r8,[rip+0x18351]        # 0x421058
  408d07:	lea    rdx,[rip+0x182d8]        # 0x420fe6
  408d0e:	mov    rcx,rdi
  408d11:	call   0x412478
  408d16:	jmp    0x408c82
  408d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d20:	lea    r8,[rip+0x18334]        # 0x42105b
  408d27:	lea    rdx,[rip+0x182b8]        # 0x420fe6
  408d2e:	mov    rcx,rdi
  408d31:	call   0x412478
  408d36:	jmp    0x408c82
  408d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d40:	movsx  edx,bl
  408d43:	mov    r8d,0x1
  408d49:	mov    rcx,rdi
  408d4c:	call   0x412498
  408d51:	jmp    0x408c82
  408d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d60:	push   rdi
  408d61:	push   rsi
  408d62:	push   rbx
  408d63:	sub    rsp,0x420
  408d6a:	lea    rbx,[rsp+0x20]
  408d6f:	mov    rdi,rdx
  408d72:	mov    rsi,r8
  408d75:	mov    edx,0x1
  408d7a:	mov    r8d,0xffffffff
  408d80:	mov    rcx,rbx
  408d83:	call   0x412480
  408d88:	mov    rdx,rdi
  408d8b:	mov    rcx,rbx
  408d8e:	call   0x408c20
  408d93:	lea    rcx,[rip+0x18426]        # 0x4211c0
  408d9a:	mov    rdx,rax
  408d9d:	call   0x407ff0
  408da2:	mov    rcx,rbx
  408da5:	call   0x412490
  408daa:	mov    rdx,rsi
  408dad:	mov    rcx,rbx
  408db0:	call   0x408c20
  408db5:	lea    rcx,[rip+0x18251]        # 0x42100d
  408dbc:	mov    rdx,rax
  408dbf:	call   0x407ff0
  408dc4:	xor    edx,edx
  408dc6:	mov    rcx,rbx
  408dc9:	call   0x412488
  408dce:	nop
  408dcf:	add    rsp,0x420
  408dd6:	pop    rbx
  408dd7:	pop    rsi
  408dd8:	pop    rdi
  408dd9:	ret    
  408dda:	nop    WORD PTR [rax+rax*1+0x0]
  408de0:	push   rdi
  408de1:	push   rsi
  408de2:	push   rbx
  408de3:	sub    rsp,0x420
  408dea:	movsxd rax,DWORD PTR [rcx+0x2c]
  408dee:	mov    rsi,rdx
  408df1:	lea    rdi,[rsp+0x20]
  408df6:	mov    rbx,r8
  408df9:	shl    rax,0xa
  408dfd:	mov    rdx,QWORD PTR [rcx+rax*1+0xa8]
  408e05:	lea    rcx,[rip+0x181da]        # 0x420fe6
  408e0c:	call   0x407ff0
  408e11:	mov    r8d,0xffffffff
  408e17:	mov    edx,0x1
  408e1c:	mov    rcx,rdi
  408e1f:	call   0x412480
  408e24:	movzx  eax,BYTE PTR [rsi]
  408e27:	test   al,al
  408e29:	jne    0x408e4c
  408e2b:	jmp    0x408e80
  408e2d:	nop    DWORD PTR [rax]
  408e30:	movsx  edx,al
  408e33:	add    rsi,0x1
  408e37:	mov    r8d,0x1
  408e3d:	mov    rcx,rdi
  408e40:	call   0x412498
  408e45:	movzx  eax,BYTE PTR [rsi]
  408e48:	test   al,al
  408e4a:	je     0x408e80
  408e4c:	lea    edx,[rax-0x30]
  408e4f:	cmp    dl,0x9
  408e52:	jbe    0x408e30
  408e54:	mov    edx,eax
  408e56:	and    edx,0xffffffdf
  408e59:	sub    edx,0x41
  408e5c:	cmp    dl,0x19
  408e5f:	jbe    0x408e30
  408e61:	add    rsi,0x1
  408e65:	mov    r8d,0x1
  408e6b:	mov    edx,0x5f
  408e70:	mov    rcx,rdi
  408e73:	call   0x412498
  408e78:	movzx  eax,BYTE PTR [rsi]
  408e7b:	test   al,al
  408e7d:	jne    0x408e4c
  408e7f:	nop
  408e80:	mov    rdx,QWORD PTR [rsp+0x20]
  408e85:	lea    rcx,[rip+0x18334]        # 0x4211c0
  408e8c:	call   0x407ff0
  408e91:	mov    rcx,rdi
  408e94:	call   0x412490
  408e99:	movsx  edx,BYTE PTR [rbx]
  408e9c:	test   dl,dl
  408e9e:	jne    0x408edb
  408ea0:	jmp    0x408f10
  408ea2:	cmp    dl,0x5c
  408ea5:	je     0x408fc0
  408eab:	cmp    dl,0x60
  408eae:	je     0x408fa0
  408eb4:	cmp    dl,0x24
  408eb7:	je     0x408f80
  408ebd:	mov    r8d,0x1
  408ec3:	mov    rcx,rdi
  408ec6:	call   0x412498
  408ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ed0:	add    rbx,0x1
  408ed4:	movsx  edx,BYTE PTR [rbx]
  408ed7:	test   dl,dl
  408ed9:	je     0x408f10
  408edb:	cmp    dl,0x22
  408ede:	je     0x408f40
  408ee0:	jg     0x408ea2
  408ee2:	cmp    dl,0xa
  408ee5:	je     0x408f60
  408ee7:	cmp    dl,0xd
  408eea:	jne    0x408ebd
  408eec:	lea    rdx,[rip+0x180f3]        # 0x420fe6
  408ef3:	lea    r8,[rip+0x18161]        # 0x42105b
  408efa:	add    rbx,0x1
  408efe:	mov    rcx,rdi
  408f01:	call   0x412478
  408f06:	movsx  edx,BYTE PTR [rbx]
  408f09:	test   dl,dl
  408f0b:	jne    0x408edb
  408f0d:	nop    DWORD PTR [rax]
  408f10:	mov    rdx,QWORD PTR [rsp+0x20]
  408f15:	lea    rcx,[rip+0x182a8]        # 0x4211c4
  408f1c:	call   0x407ff0
  408f21:	xor    edx,edx
  408f23:	mov    rcx,rdi
  408f26:	call   0x412488
  408f2b:	nop
  408f2c:	add    rsp,0x420
  408f33:	pop    rbx
  408f34:	pop    rsi
  408f35:	pop    rdi
  408f36:	ret    
  408f37:	nop    WORD PTR [rax+rax*1+0x0]
  408f40:	lea    r8,[rip+0x18286]        # 0x4211cd
  408f47:	lea    rdx,[rip+0x18098]        # 0x420fe6
  408f4e:	mov    rcx,rdi
  408f51:	call   0x412478
  408f56:	jmp    0x408ed0
  408f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  408f60:	lea    r8,[rip+0x180f1]        # 0x421058
  408f67:	lea    rdx,[rip+0x18078]        # 0x420fe6
  408f6e:	mov    rcx,rdi
  408f71:	call   0x412478
  408f76:	jmp    0x408ed0
  408f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  408f80:	lea    r8,[rip+0x1824c]        # 0x4211d3
  408f87:	lea    rdx,[rip+0x18058]        # 0x420fe6
  408f8e:	mov    rcx,rdi
  408f91:	call   0x412478
  408f96:	jmp    0x408ed0
  408f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  408fa0:	lea    r8,[rip+0x18229]        # 0x4211d0
  408fa7:	lea    rdx,[rip+0x18038]        # 0x420fe6
  408fae:	mov    rcx,rdi
  408fb1:	call   0x412478
  408fb6:	jmp    0x408ed0
  408fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  408fc0:	lea    r8,[rip+0x18203]        # 0x4211ca
  408fc7:	lea    rdx,[rip+0x18018]        # 0x420fe6
  408fce:	mov    rcx,rdi
  408fd1:	call   0x412478
  408fd6:	jmp    0x408ed0
  408fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  408fe0:	push   rdi
  408fe1:	push   rsi
  408fe2:	push   rbx
  408fe3:	sub    rsp,0x20
  408fe7:	movzx  eax,BYTE PTR [rdx]
  408fea:	mov    rsi,rcx
  408fed:	mov    rbx,rdx
  408ff0:	mov    edi,r8d
  408ff3:	test   al,al
  408ff5:	jne    0x409031
  408ff7:	jmp    0x409064
  408ff9:	nop    DWORD PTR [rax+0x0]
  409000:	cmp    al,0x8
  409002:	je     0x4090b0
  409008:	cmp    al,0xa
  40900a:	jne    0x409090
  409010:	lea    r8,[rip+0x18041]        # 0x421058
  409017:	lea    rdx,[rip+0x17fc8]        # 0x420fe6
  40901e:	mov    rcx,rsi
  409021:	call   0x412478
  409026:	add    rbx,0x1
  40902a:	movzx  eax,BYTE PTR [rbx]
  40902d:	test   al,al
  40902f:	je     0x409064
  409031:	cmp    al,0xc
  409033:	je     0x409070
  409035:	jle    0x409000
  409037:	cmp    al,0xd
  409039:	je     0x4090d0
  40903f:	cmp    al,0x5c
  409041:	jne    0x409090
  409043:	lea    r8,[rip+0x18180]        # 0x4211ca
  40904a:	lea    rdx,[rip+0x17f95]        # 0x420fe6
  409051:	add    rbx,0x1
  409055:	mov    rcx,rsi
  409058:	call   0x412478
  40905d:	movzx  eax,BYTE PTR [rbx]
  409060:	test   al,al
  409062:	jne    0x409031
  409064:	mov    rax,QWORD PTR [rsi]
  409067:	add    rsp,0x20
  40906b:	pop    rbx
  40906c:	pop    rsi
  40906d:	pop    rdi
  40906e:	ret    
  40906f:	nop
  409070:	lea    r8,[rip+0x17fde]        # 0x421055
  409077:	lea    rdx,[rip+0x17f68]        # 0x420fe6
  40907e:	mov    rcx,rsi
  409081:	call   0x412478
  409086:	jmp    0x409026
  409088:	nop    DWORD PTR [rax+rax*1+0x0]
  409090:	cmp    al,dil
  409093:	je     0x4090f0
  409095:	movsx  edx,al
  409098:	mov    r8d,0x1
  40909e:	mov    rcx,rsi
  4090a1:	call   0x412498
  4090a6:	jmp    0x409026
  4090ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4090b0:	lea    r8,[rip+0x17f9b]        # 0x421052
  4090b7:	lea    rdx,[rip+0x17f28]        # 0x420fe6
  4090be:	mov    rcx,rsi
  4090c1:	call   0x412478
  4090c6:	jmp    0x409026
  4090cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4090d0:	lea    r8,[rip+0x17f84]        # 0x42105b
  4090d7:	lea    rdx,[rip+0x17f08]        # 0x420fe6
  4090de:	mov    rcx,rsi
  4090e1:	call   0x412478
  4090e6:	jmp    0x409026
  4090eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4090f0:	mov    r8d,0x1
  4090f6:	mov    edx,0x5c
  4090fb:	mov    rcx,rsi
  4090fe:	call   0x412498
  409103:	movzx  eax,BYTE PTR [rbx]
  409106:	jmp    0x409095
  409108:	nop    DWORD PTR [rax+rax*1+0x0]
  409110:	push   rdi
  409111:	push   rsi
  409112:	sub    rsp,0x38
  409116:	mov    rax,QWORD PTR [rip+0x201db]        # 0x4292f8
  40911d:	test   rax,rax
  409120:	jne    0x40914c
  409122:	lea    rdi,[rip+0x18102]        # 0x42122b
  409129:	mov    rsi,rdx
  40912c:	mov    ecx,0x2
  409131:	lea    rax,[rip+0x1809e]        # 0x4211d6
  409138:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40913a:	cmove  rdx,rax
  40913e:	mov    QWORD PTR [rip+0x201b3],rdx        # 0x4292f8
  409145:	add    rsp,0x38
  409149:	pop    rsi
  40914a:	pop    rdi
  40914b:	ret    
  40914c:	lea    r8,[rip+0x1808d]        # 0x4211e0
  409153:	mov    r9,rdx
  409156:	xor    ecx,ecx
  409158:	mov    QWORD PTR [rsp+0x20],rax
  40915d:	mov    edx,0x10
  409162:	call   0x412308
  409167:	mov    ecx,0x1
  40916c:	call   0x401cb0
  409171:	nop
  409172:	nop    DWORD PTR [rax+0x0]
  409176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409180:	sub    rsp,0x38
  409184:	mov    QWORD PTR [rsp+0x58],r9
  409189:	lea    r9,[rsp+0x58]
  40918e:	mov    QWORD PTR [rsp+0x28],r9
  409193:	call   0x413f40
  409198:	add    rsp,0x38
  40919c:	ret    
  40919d:	nop    DWORD PTR [rax]
  4091a0:	push   rdi
  4091a1:	push   rsi
  4091a2:	push   rbx
  4091a3:	sub    rsp,0x30
  4091a7:	mov    rbx,rdx
  4091aa:	lea    rdx,[rsp+0x20]
  4091af:	mov    rsi,rcx
  4091b2:	mov    rcx,rbx
  4091b5:	mov    BYTE PTR [rsp+0x20],r8b
  4091ba:	mov    BYTE PTR [rsp+0x21],0x22
  4091bf:	mov    BYTE PTR [rsp+0x22],0xa
  4091c4:	mov    BYTE PTR [rsp+0x23],0xd
  4091c9:	mov    BYTE PTR [rsp+0x24],0x0
  4091ce:	call   0x419850
  4091d3:	cmp    BYTE PTR [rbx+rax*1],0x0
  4091d7:	setne  dil
  4091db:	jne    0x409250
  4091dd:	movzx  eax,BYTE PTR [rbx]
  4091e0:	test   al,al
  4091e2:	jne    0x40920c
  4091e4:	jmp    0x40923d
  4091e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091f0:	movsx  edx,BYTE PTR [rbx]
  4091f3:	mov    r8d,0x1
  4091f9:	add    rbx,0x1
  4091fd:	mov    rcx,rsi
  409200:	call   0x412498
  409205:	movzx  eax,BYTE PTR [rbx]
  409208:	test   al,al
  40920a:	je     0x409225
  40920c:	cmp    al,0x22
  40920e:	jne    0x4091f0
  409210:	mov    r8d,0x1
  409216:	mov    edx,0x22
  40921b:	mov    rcx,rsi
  40921e:	call   0x412498
  409223:	jmp    0x4091f0
  409225:	test   dil,dil
  409228:	je     0x40923d
  40922a:	mov    r8d,0x1
  409230:	mov    edx,0x22
  409235:	mov    rcx,rsi
  409238:	call   0x412498
  40923d:	mov    rax,QWORD PTR [rsi]
  409240:	add    rsp,0x30
  409244:	pop    rbx
  409245:	pop    rsi
  409246:	pop    rdi
  409247:	ret    
  409248:	nop    DWORD PTR [rax+rax*1+0x0]
  409250:	mov    r8d,0x1
  409256:	mov    edx,0x22
  40925b:	mov    rcx,rsi
  40925e:	call   0x412498
  409263:	movzx  eax,BYTE PTR [rbx]
  409266:	test   al,al
  409268:	jne    0x40920c
  40926a:	jmp    0x40922a
  40926c:	nop    DWORD PTR [rax+0x0]
  409270:	push   rdi
  409271:	push   rsi
  409272:	push   rbx
  409273:	sub    rsp,0x20
  409277:	movsxd rax,DWORD PTR [rcx+0x2c]
  40927b:	mov    rsi,rdx
  40927e:	mov    rbx,rcx
  409281:	mov    rdi,r8
  409284:	mov    rax,QWORD PTR [rcx+rax*8+0x58]
  409289:	mov    edx,DWORD PTR [rax+0x58]
  40928c:	test   edx,edx
  40928e:	jne    0x4092a7
  409290:	mov    rcx,QWORD PTR [rax+0x50]
  409294:	xor    r9d,r9d
  409297:	xor    r8d,r8d
  40929a:	mov    rdx,rsi
  40929d:	call   0x412438
  4092a2:	test   rax,rax
  4092a5:	je     0x4092c0
  4092a7:	mov    rax,QWORD PTR [rbx+0x8]
  4092ab:	mov    r8,rdi
  4092ae:	mov    rdx,rsi
  4092b1:	mov    rcx,rbx
  4092b4:	call   QWORD PTR [rax+0x38]
  4092b7:	movsxd rax,DWORD PTR [rbx+0x2c]
  4092bb:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  4092c0:	add    rsp,0x20
  4092c4:	pop    rbx
  4092c5:	pop    rsi
  4092c6:	pop    rdi
  4092c7:	ret    
  4092c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4092d0:	push   rsi
  4092d1:	push   rbx
  4092d2:	sub    rsp,0x28
  4092d6:	mov    rdx,QWORD PTR [rcx]
  4092d9:	test   rdx,rdx
  4092dc:	je     0x409356
  4092de:	mov    rax,QWORD PTR [rdx+0x8]
  4092e2:	mov    rsi,rcx
  4092e5:	mov    rax,QWORD PTR [rax+0x20]
  4092e9:	test   rax,rax
  4092ec:	je     0x4092f6
  4092ee:	mov    rcx,rdx
  4092f1:	call   rax
  4092f3:	mov    rdx,QWORD PTR [rsi]
  4092f6:	xor    ebx,ebx
  4092f8:	nop    DWORD PTR [rax+rax*1+0x0]
  409300:	movsxd rax,ebx
  409303:	add    ebx,0x1
  409306:	shl    rax,0xa
  40930a:	lea    rcx,[rdx+rax*1+0xa8]
  409312:	xor    edx,edx
  409314:	call   0x412488
  409319:	cmp    ebx,0xa
  40931c:	mov    rdx,QWORD PTR [rsi]
  40931f:	jne    0x409300
  409321:	mov    rax,QWORD PTR [rdx+0x8]
  409325:	cmp    QWORD PTR [rax],0x0
  409329:	je     0x409337
  40932b:	mov    rcx,QWORD PTR [rdx+0x18]
  40932f:	call   0x412298
  409334:	mov    rdx,QWORD PTR [rsi]
  409337:	lea    rcx,[rdx+0x18]
  40933b:	call   0x4123b8
  409340:	mov    rcx,QWORD PTR [rsi]
  409343:	call   0x412298
  409348:	mov    rcx,rsi
  40934b:	add    rsp,0x28
  40934f:	pop    rbx
  409350:	pop    rsi
  409351:	jmp    0x4123b8
  409356:	add    rsp,0x28
  40935a:	pop    rbx
  40935b:	pop    rsi
  40935c:	ret    
  40935d:	nop    DWORD PTR [rax]
  409360:	xor    eax,eax
  409362:	test   rdx,rdx
  409365:	jne    0x40937a
  409367:	mov    rdx,QWORD PTR [rcx+0x8]
  40936b:	test   rdx,rdx
  40936e:	je     0x40937a
  409370:	cmp    QWORD PTR [rdx],0x0
  409374:	je     0x40937a
  409376:	mov    rax,QWORD PTR [rcx+0x18]
  40937a:	repz ret 
  40937c:	nop    DWORD PTR [rax+0x0]
  409380:	sub    rsp,0x28
  409384:	movsxd r8,DWORD PTR [rcx+0x2c]
  409388:	lea    eax,[r8+0x1]
  40938c:	cmp    eax,0x9
  40938f:	mov    DWORD PTR [rcx+0x2c],eax
  409392:	jg     0x409453
  409398:	test   eax,eax
  40939a:	je     0x409400
  40939c:	lea    r8,[rcx+r8*8]
  4093a0:	cdqe   
  4093a2:	mov    r9,QWORD PTR [r8+0x58]
  4093a6:	mov    r9d,DWORD PTR [r9]
  4093a9:	mov    DWORD PTR [rcx+rax*4+0x30],0x0
  4093b1:	movsxd rax,edx
  4093b4:	lea    rax,[rax+rax*2]
  4093b8:	shl    rax,0x5
  4093bc:	add    rax,QWORD PTR [rcx+0x20]
  4093c0:	cmp    edx,0xf
  4093c3:	mov    QWORD PTR [r8+0x60],rax
  4093c7:	je     0x409433
  4093c9:	cmp    r9d,0xf
  4093cd:	jne    0x40941f
  4093cf:	cmp    edx,0xd
  4093d2:	mov    eax,DWORD PTR [rcx+0x28ac]
  4093d8:	cmove  eax,DWORD PTR [rcx+0x28a8]
  4093df:	mov    DWORD PTR [rcx+0x28b0],eax
  4093e5:	mov    rax,QWORD PTR [rcx+0x8]
  4093e9:	mov    rax,QWORD PTR [rax+0x28]
  4093ed:	test   rax,rax
  4093f0:	jne    0x40942c
  4093f2:	add    rsp,0x28
  4093f6:	ret    
  4093f7:	nop    WORD PTR [rax+rax*1+0x0]
  409400:	movsxd rax,edx
  409403:	mov    DWORD PTR [rcx+0x30],0x0
  40940a:	lea    rax,[rax+rax*2]
  40940e:	shl    rax,0x5
  409412:	add    rax,QWORD PTR [rcx+0x20]
  409416:	cmp    edx,0xf
  409419:	mov    QWORD PTR [rcx+0x58],rax
  40941d:	je     0x409433
  40941f:	mov    rax,QWORD PTR [rcx+0x8]
  409423:	mov    rax,QWORD PTR [rax+0x28]
  409427:	test   rax,rax
  40942a:	je     0x4093f2
  40942c:	add    rsp,0x28
  409430:	rex.W jmp rax
  409433:	mov    DWORD PTR [rcx+0x28b0],0x0
  40943d:	mov    DWORD PTR [rcx+0x28ac],0x0
  409447:	mov    DWORD PTR [rcx+0x28a8],0x0
  409451:	jmp    0x40941f
  409453:	call   0x419e29
  409458:	nop
  409459:	nop    DWORD PTR [rax+0x0]
  409460:	push   rbx
  409461:	sub    rsp,0x20
  409465:	mov    rcx,r8
  409468:	mov    rbx,r8
  40946b:	call   0x412068
  409470:	test   rax,rax
  409473:	mov    QWORD PTR [rip+0x1fe76],rax        # 0x4292f0
  40947a:	je     0x409484
  40947c:	xor    eax,eax
  40947e:	add    rsp,0x20
  409482:	pop    rbx
  409483:	ret    
  409484:	lea    r8,[rip+0x17f66]        # 0x4213f1
  40948b:	mov    r9,rbx
  40948e:	mov    edx,0x10
  409493:	xor    ecx,ecx
  409495:	call   0x412308
  40949a:	mov    eax,0xffffffea
  40949f:	jmp    0x40947e
  4094a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4094a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094b0:	push   r13
  4094b2:	push   r12
  4094b4:	push   rbp
  4094b5:	push   rdi
  4094b6:	push   rsi
  4094b7:	push   rbx
  4094b8:	sub    rsp,0x458
  4094bf:	mov    rsi,rcx
  4094c2:	mov    ecx,0x28c8
  4094c7:	mov    rdi,rdx
  4094ca:	mov    r12,r8
  4094cd:	call   0x4122c0
  4094d2:	test   rax,rax
  4094d5:	mov    rbx,rax
  4094d8:	mov    QWORD PTR [rsi],rax
  4094db:	je     0x4096b8
  4094e1:	movsxd rcx,DWORD PTR [rdi+0x8]
  4094e5:	call   0x4122c0
  4094ea:	test   rax,rax
  4094ed:	mov    QWORD PTR [rbx+0x18],rax
  4094f1:	je     0x4096b8
  4094f7:	mov    rax,QWORD PTR [rsi]
  4094fa:	lea    rdx,[rip+0x1b83f]        # 0x424d40
  409501:	mov    QWORD PTR [rax],rdx
  409504:	mov    rax,QWORD PTR [rsi]
  409507:	lea    rdx,[rip+0x13c72]        # 0x41d180
  40950e:	mov    QWORD PTR [rax+0x8],rdi
  409512:	mov    rax,QWORD PTR [rsi]
  409515:	mov    QWORD PTR [rax+0x20],rdx
  409519:	mov    rcx,QWORD PTR [rsi]
  40951c:	mov    DWORD PTR [rax+0x2c],0xffffffff
  409523:	mov    DWORD PTR [rcx+0x28],0x27
  40952a:	call   0x412270
  40952f:	mov    rax,QWORD PTR [rdi]
  409532:	test   rax,rax
  409535:	je     0x409546
  409537:	mov    rdx,QWORD PTR [rsi]
  40953a:	mov    rcx,QWORD PTR [rdx+0x18]
  40953e:	mov    QWORD PTR [rcx],rax
  409541:	call   0x412270
  409546:	test   r12,r12
  409549:	je     0x4095d7
  40954f:	lea    rbp,[rsp+0x50]
  409554:	lea    r9,[rip+0x17eb0]        # 0x42140b
  40955b:	lea    r8,[rip+0x17eab]        # 0x42140d
  409562:	mov    DWORD PTR [rsp+0x20],0x0
  40956a:	mov    rdx,r12
  40956d:	mov    QWORD PTR [rsp+0x50],0x0
  409576:	mov    rcx,rbp
  409579:	xor    ebx,ebx
  40957b:	call   0x412430
  409580:	test   eax,eax
  409582:	jns    0x4095ad
  409584:	jmp    0x40975a
  409589:	nop    DWORD PTR [rax+0x0]
  409590:	mov    r8,QWORD PTR [rbx+0x8]
  409594:	mov    rdx,QWORD PTR [rbx]
  409597:	mov    r9d,0x1
  40959d:	mov    rcx,QWORD PTR [rsi]
  4095a0:	call   0x412278
  4095a5:	test   eax,eax
  4095a7:	js     0x409725
  4095ad:	mov    rcx,QWORD PTR [rsp+0x50]
  4095b2:	lea    rdx,[rip+0x1790a]        # 0x420ec3
  4095b9:	mov    r8,rbx
  4095bc:	mov    r9d,0x2
  4095c2:	call   0x412438
  4095c7:	test   rax,rax
  4095ca:	mov    rbx,rax
  4095cd:	jne    0x409590
  4095cf:	mov    rcx,rbp
  4095d2:	call   0x412440
  4095d7:	mov    r9,QWORD PTR [rsi]
  4095da:	xor    eax,eax
  4095dc:	or     rcx,0xffffffffffffffff
  4095e0:	mov    rdx,QWORD PTR [r9+0x28b8]
  4095e7:	mov    QWORD PTR [rsp+0x48],rdx
  4095ec:	mov    rdi,rdx
  4095ef:	repnz scas al,BYTE PTR es:[rdi]
  4095f1:	cmp    BYTE PTR [rdx],0x0
  4095f4:	not    rcx
  4095f7:	lea    rbp,[rdx+rcx*1-0x1]
  4095fc:	je     0x4096dd
  409602:	mov    rdi,rdx
  409605:	lea    r13,[rsp+0x48]
  40960a:	lea    r12,[rsp+0x44]
  40960f:	jmp    0x409622
  409611:	mov    rdi,QWORD PTR [rsp+0x48]
  409616:	mov    r9,QWORD PTR [rsi]
  409619:	cmp    BYTE PTR [rdi],0x0
  40961c:	je     0x4096dd
  409622:	mov    r9d,DWORD PTR [r9+0x28c0]
  409629:	mov    r8,rbp
  40962c:	mov    rdx,r13
  40962f:	mov    rcx,r12
  409632:	call   0x4121e0
  409637:	test   eax,eax
  409639:	mov    ebx,eax
  40963b:	jns    0x409611
  40963d:	lea    rbp,[rsp+0x50]
  409642:	xor    edx,edx
  409644:	mov    r8d,0x1
  40964a:	mov    rcx,rbp
  40964d:	call   0x412480
  409652:	mov    r12,QWORD PTR [rsp+0x48]
  409657:	lea    rdx,[rip+0x17e38]        # 0x421496
  40965e:	mov    rcx,rbp
  409661:	call   0x412478
  409666:	cmp    r12,rdi
  409669:	je     0x40968c
  40966b:	nop    DWORD PTR [rax+rax*1+0x0]
  409670:	movzx  r8d,BYTE PTR [rdi]
  409674:	lea    rdx,[rip+0x17e67]        # 0x4214e2
  40967b:	mov    rcx,rbp
  40967e:	add    rdi,0x1
  409682:	call   0x412478
  409687:	cmp    rdi,r12
  40968a:	jne    0x409670
  40968c:	mov    rax,QWORD PTR [rsi]
  40968f:	mov    r9,QWORD PTR [rsp+0x50]
  409694:	lea    r8,[rip+0x17e05]        # 0x4214a0
  40969b:	mov    edx,0x10
  4096a0:	mov    rcx,rsi
  4096a3:	mov    rax,QWORD PTR [rax+0x28b8]
  4096aa:	mov    QWORD PTR [rsp+0x20],rax
  4096af:	call   0x412308
  4096b4:	mov    eax,ebx
  4096b6:	jmp    0x4096cd
  4096b8:	mov    eax,0xfffffff4
  4096bd:	mov    rcx,rsi
  4096c0:	mov    DWORD PTR [rsp+0x3c],eax
  4096c4:	call   0x4092d0
  4096c9:	mov    eax,DWORD PTR [rsp+0x3c]
  4096cd:	add    rsp,0x458
  4096d4:	pop    rbx
  4096d5:	pop    rsi
  4096d6:	pop    rdi
  4096d7:	pop    rbp
  4096d8:	pop    r12
  4096da:	pop    r13
  4096dc:	ret    
  4096dd:	xor    ebx,ebx
  4096df:	jmp    0x4096e4
  4096e1:	mov    r9,QWORD PTR [rsi]
  4096e4:	movsxd rax,ebx
  4096e7:	mov    r8d,0xffffffff
  4096ed:	mov    edx,0x1
  4096f2:	shl    rax,0xa
  4096f6:	add    ebx,0x1
  4096f9:	lea    rcx,[r9+rax*1+0xa8]
  409701:	call   0x412480
  409706:	cmp    ebx,0xa
  409709:	jne    0x4096e1
  40970b:	mov    rcx,QWORD PTR [rsi]
  40970e:	mov    rax,QWORD PTR [rcx+0x8]
  409712:	mov    rax,QWORD PTR [rax+0x18]
  409716:	test   rax,rax
  409719:	je     0x409721
  40971b:	call   rax
  40971d:	test   eax,eax
  40971f:	js     0x4096bd
  409721:	xor    eax,eax
  409723:	jmp    0x4096cd
  409725:	mov    rdx,QWORD PTR [rbx+0x8]
  409729:	mov    rcx,QWORD PTR [rsi]
  40972c:	lea    r8,[rip+0x17d1d]        # 0x421450
  409733:	mov    DWORD PTR [rsp+0x3c],eax
  409737:	mov    QWORD PTR [rsp+0x20],rdx
  40973c:	mov    r9,QWORD PTR [rbx]
  40973f:	mov    edx,0x10
  409744:	call   0x412308
  409749:	mov    rcx,rbp
  40974c:	call   0x412440
  409751:	mov    eax,DWORD PTR [rsp+0x3c]
  409755:	jmp    0x4096bd
  40975a:	mov    rcx,QWORD PTR [rsi]
  40975d:	lea    r8,[rip+0x17cac]        # 0x421410
  409764:	mov    r9,r12
  409767:	mov    edx,0x10
  40976c:	mov    DWORD PTR [rsp+0x3c],eax
  409770:	call   0x412308
  409775:	mov    rcx,rbp
  409778:	call   0x412440
  40977d:	mov    eax,DWORD PTR [rsp+0x3c]
  409781:	jmp    0x4096bd
  409786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409790:	push   rbp
  409791:	push   rdi
  409792:	push   rsi
  409793:	push   rbx
  409794:	sub    rsp,0x58
  409798:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40979d:	lea    rax,[rip+0x1b8aa]        # 0x42504e
  4097a4:	mov    rdi,rcx
  4097a7:	mov    rbx,QWORD PTR [rdx+0x8]
  4097ab:	mov    r8,QWORD PTR [rdx]
  4097ae:	cmp    rbx,rax
  4097b1:	mov    r9,r8
  4097b4:	je     0x409904
  4097ba:	pxor   xmm6,xmm6
  4097be:	lea    rsi,[rip+0x176fe]        # 0x420ec3
  4097c5:	cvtsi2sd xmm6,r8
  4097ca:	mov    r8d,DWORD PTR [rip+0x1fb67]        # 0x429338
  4097d1:	test   r8d,r8d
  4097d4:	je     0x4098a0
  4097da:	ucomisd xmm6,QWORD PTR [rip+0x1bac6]        # 0x4252a8
  4097e2:	jbe    0x409950
  4097e8:	lea    rax,[rip+0x1b857]        # 0x425046
  4097ef:	xor    ebp,ebp
  4097f1:	cmp    rbx,rax
  4097f4:	je     0x409961
  4097fa:	movapd xmm0,xmm6
  4097fe:	call   0x419890
  409803:	cvttsd2si rcx,xmm0
  409808:	movabs rdx,0x5555555555555556
  409812:	pxor   xmm1,xmm1
  409816:	movsd  xmm0,QWORD PTR [rip+0x1ba82]        # 0x4252a0
  40981e:	mov    rax,rcx
  409821:	sar    rcx,0x3f
  409825:	imul   rdx
  409828:	mov    eax,0x5
  40982d:	sub    rdx,rcx
  409830:	cmp    edx,0x5
  409833:	cmovg  edx,eax
  409836:	mov    al,0x0
  409838:	test   edx,edx
  40983a:	cmovs  edx,eax
  40983d:	movsxd rsi,edx
  409840:	lea    rax,[rsi+rsi*2]
  409844:	cvtsi2sd xmm1,rax
  409849:	call   0x414120
  40984e:	divsd  xmm6,xmm0
  409852:	lea    rax,[rip+0x1b807]        # 0x425060
  409859:	mov    rsi,QWORD PTR [rax+rsi*8]
  40985d:	cvttsd2si rax,xmm6
  409862:	test   ebp,ebp
  409864:	mov    r9,rax
  409867:	jne    0x40987a
  409869:	pxor   xmm0,xmm0
  40986d:	cvtsi2sd xmm0,rax
  409872:	ucomisd xmm6,xmm0
  409876:	jp     0x40987a
  409878:	je     0x4098a0
  40987a:	movapd xmm3,xmm6
  40987e:	movq   r9,xmm6
  409883:	lea    r8,[rip+0x17c6c]        # 0x4214f6
  40988a:	mov    edx,0x80
  40988f:	mov    rcx,rdi
  409892:	call   0x409180
  409897:	jmp    0x4098b4
  409899:	nop    DWORD PTR [rax+0x0]
  4098a0:	lea    r8,[rip+0x17761]        # 0x421008
  4098a7:	mov    edx,0x80
  4098ac:	mov    rcx,rdi
  4098af:	call   0x409180
  4098b4:	mov    edx,DWORD PTR [rip+0x1fa82]        # 0x42933c
  4098ba:	lea    r9,[rip+0x175e7]        # 0x420ea8
  4098c1:	test   edx,edx
  4098c3:	jne    0x4098d4
  4098c5:	cmp    BYTE PTR [rsi],0x0
  4098c8:	lea    rbx,[rip+0x175f4]        # 0x420ec3
  4098cf:	jne    0x4098d4
  4098d1:	mov    r9,rbx
  4098d4:	lea    r8,[rip+0x17c1e]        # 0x4214f9
  4098db:	mov    QWORD PTR [rsp+0x28],rbx
  4098e0:	mov    QWORD PTR [rsp+0x20],rsi
  4098e5:	mov    edx,0x80
  4098ea:	mov    rcx,rdi
  4098ed:	call   0x412208
  4098f2:	nop
  4098f3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4098f8:	mov    rax,rdi
  4098fb:	add    rsp,0x58
  4098ff:	pop    rbx
  409900:	pop    rsi
  409901:	pop    rdi
  409902:	pop    rbp
  409903:	ret    
  409904:	mov    r9d,DWORD PTR [rip+0x1fa25]        # 0x429330
  40990b:	mov    QWORD PTR [rsp+0x38],r8
  409910:	movsd  xmm6,QWORD PTR [rsp+0x38]
  409916:	test   r9d,r9d
  409919:	jne    0x4099d4
  40991f:	mov    eax,DWORD PTR [rip+0x1fa13]        # 0x429338
  409925:	test   eax,eax
  409927:	je     0x40993c
  409929:	ucomisd xmm6,QWORD PTR [rip+0x1b977]        # 0x4252a8
  409931:	mov    ebp,0x1
  409936:	ja     0x4097fa
  40993c:	lea    rsi,[rip+0x17580]        # 0x420ec3
  409943:	jmp    0x40987a
  409948:	nop    DWORD PTR [rax+rax*1+0x0]
  409950:	lea    rsi,[rip+0x1756c]        # 0x420ec3
  409957:	cvttsd2si rax,xmm6
  40995c:	jmp    0x409869
  409961:	mov    ecx,DWORD PTR [rip+0x1f9cd]        # 0x429334
  409967:	test   ecx,ecx
  409969:	je     0x4097fa
  40996f:	movapd xmm0,xmm6
  409973:	call   0x414020
  409978:	cvttsd2si rcx,xmm0
  40997d:	movabs rdx,0x6666666666666667
  409987:	pxor   xmm0,xmm0
  40998b:	mov    rax,rcx
  40998e:	sar    rcx,0x3f
  409992:	imul   rdx
  409995:	mov    eax,0x5
  40999a:	sar    rdx,0x2
  40999e:	sub    rdx,rcx
  4099a1:	cmp    edx,0x5
  4099a4:	cmovle eax,edx
  4099a7:	test   eax,eax
  4099a9:	cmovs  eax,ebp
  4099ac:	movsxd rsi,eax
  4099af:	lea    rax,[rsi+rsi*4]
  4099b3:	add    rax,rax
  4099b6:	cvtsi2sd xmm0,rax
  4099bb:	call   0x413fa0
  4099c0:	lea    rax,[rip+0x1b6d9]        # 0x4250a0
  4099c7:	divsd  xmm6,xmm0
  4099cb:	mov    rsi,QWORD PTR [rax+rsi*8]
  4099cf:	jmp    0x40985d
  4099d4:	cvttsd2si r9d,xmm6
  4099d9:	mov    r8d,0x88888889
  4099df:	pxor   xmm0,xmm0
  4099e3:	mov    eax,r9d
  4099e6:	imul   r8d
  4099e9:	lea    ecx,[rdx+r9*1]
  4099ed:	sar    r9d,0x1f
  4099f1:	sar    ecx,0x5
  4099f4:	sub    ecx,r9d
  4099f7:	mov    eax,ecx
  4099f9:	imul   r8d
  4099fc:	mov    eax,ecx
  4099fe:	lea    r8,[rip+0x17ae2]        # 0x4214e7
  409a05:	sar    eax,0x1f
  409a08:	lea    r9d,[rdx+rcx*1]
  409a0c:	mov    edx,0x80
  409a11:	sar    r9d,0x5
  409a15:	sub    r9d,eax
  409a18:	imul   eax,ecx,0x3c
  409a1b:	cvtsi2sd xmm0,eax
  409a1f:	imul   eax,r9d,0x3c
  409a23:	sub    ecx,eax
  409a25:	mov    DWORD PTR [rsp+0x20],ecx
  409a29:	mov    rcx,rdi
  409a2c:	subsd  xmm6,xmm0
  409a30:	movsd  QWORD PTR [rsp+0x28],xmm6
  409a36:	call   0x409180
  409a3b:	jmp    0x4098f3
  409a40:	push   r15
  409a42:	push   r14
  409a44:	push   r13
  409a46:	push   r12
  409a48:	push   rbp
  409a49:	push   rdi
  409a4a:	push   rsi
  409a4b:	push   rbx
  409a4c:	sub    rsp,0x48
  409a50:	lea    rdi,[rip+0x13729]        # 0x41d180
  409a57:	movsxd rax,ecx
  409a5a:	mov    rsi,r8
  409a5d:	lea    rax,[rax+rax*2]
  409a61:	shl    rax,0x5
  409a65:	test   edx,edx
  409a67:	mov    DWORD PTR [rdi+rax*1+0x58],edx
  409a6b:	je     0x409c5e
  409a71:	lea    rax,[rdi+rax*1+0x10]
  409a76:	mov    ebx,edx
  409a78:	lea    rdx,[rax+0x4]
  409a7c:	movsxd rax,DWORD PTR [rax+0x4]
  409a80:	mov    QWORD PTR [rsp+0x20],rdx
  409a85:	cmp    eax,0xffffffff
  409a88:	je     0x409c4d
  409a8e:	lea    rax,[rax+rax*2]
  409a92:	shl    rax,0x5
  409a96:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409a9a:	lea    rax,[rdi+rax*1+0x10]
  409a9f:	lea    rdx,[rax+0x4]
  409aa3:	movsxd rax,DWORD PTR [rax+0x4]
  409aa7:	mov    QWORD PTR [rsp+0x28],rdx
  409aac:	cmp    eax,0xffffffff
  409aaf:	je     0x409c36
  409ab5:	lea    rax,[rax+rax*2]
  409ab9:	shl    rax,0x5
  409abd:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409ac1:	lea    rax,[rdi+rax*1+0x10]
  409ac6:	lea    rdx,[rax+0x4]
  409aca:	movsxd rax,DWORD PTR [rax+0x4]
  409ace:	mov    QWORD PTR [rsp+0x30],rdx
  409ad3:	cmp    eax,0xffffffff
  409ad6:	je     0x409c1f
  409adc:	lea    rax,[rax+rax*2]
  409ae0:	shl    rax,0x5
  409ae4:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409ae8:	lea    rax,[rdi+rax*1+0x10]
  409aed:	lea    rdx,[rax+0x4]
  409af1:	movsxd rax,DWORD PTR [rax+0x4]
  409af5:	mov    QWORD PTR [rsp+0x38],rdx
  409afa:	cmp    eax,0xffffffff
  409afd:	je     0x409c08
  409b03:	lea    rax,[rax+rax*2]
  409b07:	shl    rax,0x5
  409b0b:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409b0f:	lea    rax,[rdi+rax*1+0x10]
  409b14:	lea    r14,[rax+0x4]
  409b18:	movsxd rax,DWORD PTR [rax+0x4]
  409b1c:	cmp    eax,0xffffffff
  409b1f:	je     0x409bf1
  409b25:	lea    rax,[rax+rax*2]
  409b29:	shl    rax,0x5
  409b2d:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409b31:	lea    rax,[rdi+rax*1+0x10]
  409b36:	lea    r15,[rax+0x4]
  409b3a:	movsxd rax,DWORD PTR [rax+0x4]
  409b3e:	cmp    eax,0xffffffff
  409b41:	je     0x409be1
  409b47:	lea    rax,[rax+rax*2]
  409b4b:	shl    rax,0x5
  409b4f:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409b53:	lea    rax,[rdi+rax*1+0x10]
  409b58:	lea    r12,[rax+0x4]
  409b5c:	movsxd rax,DWORD PTR [rax+0x4]
  409b60:	cmp    eax,0xffffffff
  409b63:	je     0x409bd1
  409b65:	lea    rax,[rax+rax*2]
  409b69:	shl    rax,0x5
  409b6d:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409b71:	lea    rax,[rdi+rax*1+0x10]
  409b76:	lea    rbp,[rax+0x4]
  409b7a:	movsxd rax,DWORD PTR [rax+0x4]
  409b7e:	cmp    eax,0xffffffff
  409b81:	je     0x409bc4
  409b83:	lea    rax,[rax+rax*2]
  409b87:	shl    rax,0x5
  409b8b:	lea    rdx,[rdi+rax*1+0x10]
  409b90:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409b94:	mov    ecx,DWORD PTR [rdx+0x4]
  409b97:	lea    r13,[rdx+0x4]
  409b9b:	cmp    ecx,0xffffffff
  409b9e:	je     0x409bb7
  409ba0:	add    r13,0x4
  409ba4:	mov    r8,rsi
  409ba7:	mov    edx,ebx
  409ba9:	call   0x409a40
  409bae:	mov    ecx,DWORD PTR [r13+0x0]
  409bb2:	cmp    ecx,0xffffffff
  409bb5:	jne    0x409ba0
  409bb7:	add    rbp,0x4
  409bbb:	movsxd rax,DWORD PTR [rbp+0x0]
  409bbf:	cmp    eax,0xffffffff
  409bc2:	jne    0x409b83
  409bc4:	add    r12,0x4
  409bc8:	movsxd rax,DWORD PTR [r12]
  409bcc:	cmp    eax,0xffffffff
  409bcf:	jne    0x409b65
  409bd1:	add    r15,0x4
  409bd5:	movsxd rax,DWORD PTR [r15]
  409bd8:	cmp    eax,0xffffffff
  409bdb:	jne    0x409b47
  409be1:	add    r14,0x4
  409be5:	movsxd rax,DWORD PTR [r14]
  409be8:	cmp    eax,0xffffffff
  409beb:	jne    0x409b25
  409bf1:	add    QWORD PTR [rsp+0x38],0x4
  409bf7:	mov    rax,QWORD PTR [rsp+0x38]
  409bfc:	movsxd rax,DWORD PTR [rax]
  409bff:	cmp    eax,0xffffffff
  409c02:	jne    0x409b03
  409c08:	add    QWORD PTR [rsp+0x30],0x4
  409c0e:	mov    rax,QWORD PTR [rsp+0x30]
  409c13:	movsxd rax,DWORD PTR [rax]
  409c16:	cmp    eax,0xffffffff
  409c19:	jne    0x409adc
  409c1f:	add    QWORD PTR [rsp+0x28],0x4
  409c25:	mov    rax,QWORD PTR [rsp+0x28]
  409c2a:	movsxd rax,DWORD PTR [rax]
  409c2d:	cmp    eax,0xffffffff
  409c30:	jne    0x409ab5
  409c36:	add    QWORD PTR [rsp+0x20],0x4
  409c3c:	mov    rax,QWORD PTR [rsp+0x20]
  409c41:	movsxd rax,DWORD PTR [rax]
  409c44:	cmp    eax,0xffffffff
  409c47:	jne    0x409a8e
  409c4d:	add    rsp,0x48
  409c51:	pop    rbx
  409c52:	pop    rsi
  409c53:	pop    rdi
  409c54:	pop    rbp
  409c55:	pop    r12
  409c57:	pop    r13
  409c59:	pop    r14
  409c5b:	pop    r15
  409c5d:	ret    
  409c5e:	lea    rcx,[rdi+rax*1+0x50]
  409c63:	xor    r8d,r8d
  409c66:	mov    rdx,rsi
  409c69:	add    rsp,0x48
  409c6d:	pop    rbx
  409c6e:	pop    rsi
  409c6f:	pop    rdi
  409c70:	pop    rbp
  409c71:	pop    r12
  409c73:	pop    r13
  409c75:	pop    r14
  409c77:	pop    r15
  409c79:	jmp    0x412448
  409c7e:	xchg   ax,ax
  409c80:	push   rdi
  409c81:	push   rsi
  409c82:	push   rbx
  409c83:	sub    rsp,0x70
  409c87:	mov    r9d,DWORD PTR [rcx]
  409c8a:	lea    r8,[rip+0x17871]        # 0x421502
  409c91:	mov    rbx,rcx
  409c94:	xor    ecx,ecx
  409c96:	mov    esi,edx
  409c98:	call   0x412308
  409c9d:	mov    r9d,DWORD PTR [rbx+0x18]
  409ca1:	test   r9d,r9d
  409ca4:	je     0x409d62
  409caa:	mov    rax,QWORD PTR [rbx+0x8]
  409cae:	movabs rdx,0x8000000000000000
  409cb8:	mov    QWORD PTR [rsp+0x50],0x0
  409cc1:	mov    QWORD PTR [rsp+0x58],0x0
  409cca:	mov    QWORD PTR [rsp+0x60],0x0
  409cd3:	mov    QWORD PTR [rsp+0x68],0x0
  409cdc:	cmp    rax,rdx
  409cdf:	je     0x409e60
  409ce5:	pxor   xmm0,xmm0
  409ce9:	lea    rdi,[rsp+0x50]
  409cee:	lea    r8,[rip+0x17819]        # 0x42150e
  409cf5:	mov    edx,0x20
  409cfa:	mov    rcx,rdi
  409cfd:	cvtsi2sd xmm0,rax
  409d02:	mulsd  xmm0,QWORD PTR [rip+0x1b5a6]        # 0x4252b0
  409d0a:	movapd xmm3,xmm0
  409d0e:	movq   r9,xmm0
  409d13:	call   0x409180
  409d18:	mov    r8d,DWORD PTR [rbx+0x20]
  409d1c:	lea    rax,[rip+0x171a0]        # 0x420ec3
  409d23:	lea    r9,[rip+0x177d6]        # 0x421500
  409d2a:	mov    QWORD PTR [rsp+0x20],rdi
  409d2f:	mov    edx,esi
  409d31:	test   r8d,r8d
  409d34:	lea    r8,[rip+0x177d8]        # 0x421513
  409d3b:	cmove  r9,rax
  409d3f:	xor    ecx,ecx
  409d41:	call   0x412308
  409d46:	mov    ecx,DWORD PTR [rbx+0x1c]
  409d49:	test   ecx,ecx
  409d4b:	jne    0x409d79
  409d4d:	lea    r8,[rip+0x177e4]        # 0x421538
  409d54:	mov    edx,esi
  409d56:	xor    ecx,ecx
  409d58:	call   0x412308
  409d5d:	jmp    0x409e2c
  409d62:	lea    r8,[rip+0x177b6]        # 0x42151f
  409d69:	xor    ecx,ecx
  409d6b:	mov    edx,esi
  409d6d:	call   0x412308
  409d72:	mov    ecx,DWORD PTR [rbx+0x1c]
  409d75:	test   ecx,ecx
  409d77:	je     0x409d4d
  409d79:	mov    eax,DWORD PTR [rbx+0x24]
  409d7c:	lea    r9,[rip+0x1777d]        # 0x421500
  409d83:	lea    r8,[rip+0x177a0]        # 0x42152a
  409d8a:	mov    edx,esi
  409d8c:	test   eax,eax
  409d8e:	lea    rax,[rip+0x1712e]        # 0x420ec3
  409d95:	cmove  r9,rax
  409d99:	xor    ecx,ecx
  409d9b:	call   0x412308
  409da0:	mov    edx,DWORD PTR [rbx+0x28]
  409da3:	test   edx,edx
  409da5:	jne    0x409e45
  409dab:	mov    rax,QWORD PTR [rbx+0x10]
  409daf:	movabs rdx,0x8000000000000000
  409db9:	mov    QWORD PTR [rsp+0x30],0x0
  409dc2:	mov    QWORD PTR [rsp+0x38],0x0
  409dcb:	mov    QWORD PTR [rsp+0x40],0x0
  409dd4:	mov    QWORD PTR [rsp+0x48],0x0
  409ddd:	cmp    rax,rdx
  409de0:	je     0x409e80
  409de6:	pxor   xmm0,xmm0
  409dea:	lea    rbx,[rsp+0x30]
  409def:	lea    r8,[rip+0x17718]        # 0x42150e
  409df6:	mov    edx,0x20
  409dfb:	mov    rcx,rbx
  409dfe:	cvtsi2sd xmm0,rax
  409e03:	mulsd  xmm0,QWORD PTR [rip+0x1b4a5]        # 0x4252b0
  409e0b:	movapd xmm3,xmm0
  409e0f:	movq   r9,xmm0
  409e14:	call   0x409180
  409e19:	lea    r8,[rip+0x171c6]        # 0x420fe6
  409e20:	mov    r9,rbx
  409e23:	mov    edx,esi
  409e25:	xor    ecx,ecx
  409e27:	call   0x412308
  409e2c:	lea    r8,[rip+0x17077]        # 0x420eaa
  409e33:	mov    edx,esi
  409e35:	xor    ecx,ecx
  409e37:	call   0x412308
  409e3c:	nop
  409e3d:	add    rsp,0x70
  409e41:	pop    rbx
  409e42:	pop    rsi
  409e43:	pop    rdi
  409e44:	ret    
  409e45:	mov    r9,QWORD PTR [rbx+0x10]
  409e49:	lea    r8,[rip+0x176e2]        # 0x421532
  409e50:	mov    edx,esi
  409e52:	xor    ecx,ecx
  409e54:	call   0x412308
  409e59:	jmp    0x409e2c
  409e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  409e60:	lea    rdi,[rsp+0x50]
  409e65:	lea    r8,[rip+0x1769c]        # 0x421508
  409e6c:	mov    edx,0x20
  409e71:	mov    rcx,rdi
  409e74:	call   0x409180
  409e79:	jmp    0x409d18
  409e7e:	xchg   ax,ax
  409e80:	lea    rbx,[rsp+0x30]
  409e85:	lea    r8,[rip+0x1767c]        # 0x421508
  409e8c:	mov    edx,0x20
  409e91:	mov    rcx,rbx
  409e94:	call   0x409180
  409e99:	jmp    0x409e19
  409e9e:	xchg   ax,ax
  409ea0:	push   r15
  409ea2:	push   r14
  409ea4:	push   r13
  409ea6:	push   r12
  409ea8:	push   rbp
  409ea9:	push   rdi
  409eaa:	push   rsi
  409eab:	push   rbx
  409eac:	sub    rsp,0x68
  409eb0:	mov    rcx,r8
  409eb3:	call   0x412220
  409eb8:	test   rax,rax
  409ebb:	mov    QWORD PTR [rsp+0x48],rax
  409ec0:	mov    rdx,rax
  409ec3:	je     0x40a24c
  409ec9:	movzx  eax,BYTE PTR [rax]
  409ecc:	test   al,al
  409ece:	je     0x40a23d
  409ed4:	xor    ecx,ecx
  409ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ee0:	cmp    al,0x2c
  409ee2:	sete   al
  409ee5:	add    rdx,0x1
  409ee9:	movzx  eax,al
  409eec:	add    ecx,eax
  409eee:	movzx  eax,BYTE PTR [rdx]
  409ef1:	test   al,al
  409ef3:	jne    0x409ee0
  409ef5:	lea    ebx,[rcx+0x1]
  409ef8:	cmp    ebx,0x2aaaaa9
  409efe:	jle    0x409f30
  409f00:	mov    QWORD PTR [rip+0x1f405],0x0        # 0x429310
  409f0b:	mov    r13d,0xfffffff4
  409f11:	mov    rcx,QWORD PTR [rsp+0x48]
  409f16:	call   0x4123c0
  409f1b:	mov    eax,r13d
  409f1e:	add    rsp,0x68
  409f22:	pop    rbx
  409f23:	pop    rsi
  409f24:	pop    rdi
  409f25:	pop    rbp
  409f26:	pop    r12
  409f28:	pop    r13
  409f2a:	pop    r14
  409f2c:	pop    r15
  409f2e:	ret    
  409f2f:	nop
  409f30:	movsxd rax,ebx
  409f33:	lea    rcx,[rax+rax*2]
  409f37:	shl    rcx,0x4
  409f3b:	call   0x4122c8
  409f40:	test   rax,rax
  409f43:	mov    QWORD PTR [rip+0x1f3c6],rax        # 0x429310
  409f4a:	je     0x40a286
  409f50:	lea    rax,[rsp+0x58]
  409f55:	mov    DWORD PTR [rip+0x1f3ad],ebx        # 0x429308
  409f5b:	mov    rbp,QWORD PTR [rsp+0x48]
  409f60:	xor    esi,esi
  409f62:	xor    edi,edi
  409f64:	mov    QWORD PTR [rsp+0x40],rax
  409f69:	jmp    0x40a045
  409f6e:	xchg   ax,ax
  409f70:	mov    edx,0x25
  409f75:	mov    rcx,rax
  409f78:	call   0x419860
  409f7d:	test   rax,rax
  409f80:	je     0x40a0e0
  409f86:	mov    BYTE PTR [rax],0x0
  409f89:	movzx  r13d,BYTE PTR [r15]
  409f8d:	lea    r14,[rax+0x1]
  409f91:	test   r13b,r13b
  409f94:	jne    0x40a0e3
  409f9a:	mov    DWORD PTR [rbx+0x18],0x0
  409fa1:	xor    r13d,r13d
  409fa4:	test   r14,r14
  409fa7:	je     0x40a0d0
  409fad:	movzx  eax,BYTE PTR [r14]
  409fb1:	test   al,al
  409fb3:	je     0x40a0d0
  409fb9:	cmp    al,0x2b
  409fbb:	mov    DWORD PTR [rbx+0x1c],0x1
  409fc2:	je     0x40a165
  409fc8:	mov    DWORD PTR [rbx+0x24],0x0
  409fcf:	mov    rcx,QWORD PTR [rsp+0x40]
  409fd4:	mov    r8d,0x1
  409fda:	mov    rdx,r14
  409fdd:	call   0x412258
  409fe2:	mov    r13d,eax
  409fe5:	mov    rax,QWORD PTR [rsp+0x58]
  409fea:	test   r13d,r13d
  409fed:	js     0x40a180
  409ff3:	mov    QWORD PTR [rbx+0x10],rax
  409ff7:	mov    rcx,r15
  409ffa:	call   0x4123c0
  409fff:	lea    r8,[rip+0x17648]        # 0x42164e
  40a006:	xor    ecx,ecx
  40a008:	mov    edx,0x28
  40a00d:	add    esi,0x1
  40a010:	call   0x412308
  40a015:	mov    rcx,rdi
  40a018:	add    rcx,QWORD PTR [rip+0x1f2f1]        # 0x429310
  40a01f:	mov    edx,0x28
  40a024:	add    rdi,0x30
  40a028:	call   0x409c80
  40a02d:	test   r12,r12
  40a030:	je     0x40a1b0
  40a036:	cmp    esi,DWORD PTR [rip+0x1f2cc]        # 0x429308
  40a03c:	jge    0x40a256
  40a042:	mov    rbp,r12
  40a045:	mov    edx,0x2c
  40a04a:	mov    rcx,rbp
  40a04d:	call   0x419860
  40a052:	test   rax,rax
  40a055:	je     0x40a140
  40a05b:	lea    r12,[rax+0x1]
  40a05f:	mov    BYTE PTR [rax],0x0
  40a062:	mov    rbx,rdi
  40a065:	add    rbx,QWORD PTR [rip+0x1f2a4]        # 0x429310
  40a06c:	mov    rcx,rbp
  40a06f:	mov    DWORD PTR [rbx],esi
  40a071:	call   0x412220
  40a076:	test   rax,rax
  40a079:	mov    r15,rax
  40a07c:	je     0x40a232
  40a082:	movzx  r13d,BYTE PTR [rax]
  40a086:	test   r13b,r13b
  40a089:	jne    0x409f70
  40a08f:	lea    r8,[rip+0x174c2]        # 0x421558
  40a096:	mov    edx,0x10
  40a09b:	xor    ecx,ecx
  40a09d:	mov    r13d,0xffffffea
  40a0a3:	call   0x412308
  40a0a8:	mov    rcx,r15
  40a0ab:	call   0x4123c0
  40a0b0:	lea    r8,[rip+0x17571]        # 0x421628
  40a0b7:	mov    QWORD PTR [rsp+0x20],rbp
  40a0bc:	mov    r9d,esi
  40a0bf:	mov    edx,0x10
  40a0c4:	xor    ecx,ecx
  40a0c6:	call   0x412308
  40a0cb:	jmp    0x409f11
  40a0d0:	mov    DWORD PTR [rbx+0x1c],0x0
  40a0d7:	jmp    0x409ff7
  40a0dc:	nop    DWORD PTR [rax+0x0]
  40a0e0:	xor    r14d,r14d
  40a0e3:	cmp    r13b,0x2b
  40a0e7:	mov    DWORD PTR [rbx+0x18],0x1
  40a0ee:	je     0x40a150
  40a0f0:	mov    DWORD PTR [rbx+0x20],0x0
  40a0f7:	mov    QWORD PTR [rsp+0x38],r15
  40a0fc:	mov    rdx,r15
  40a0ff:	lea    rcx,[rbx+0x8]
  40a103:	mov    r8d,0x1
  40a109:	call   0x412258
  40a10e:	test   eax,eax
  40a110:	mov    r13d,eax
  40a113:	jns    0x409fa4
  40a119:	mov    r9,QWORD PTR [rsp+0x38]
  40a11e:	lea    r8,[rip+0x1745b]        # 0x421580
  40a125:	mov    edx,0x10
  40a12a:	xor    ecx,ecx
  40a12c:	call   0x412308
  40a131:	jmp    0x40a0a8
  40a136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a140:	xor    r12d,r12d
  40a143:	jmp    0x40a062
  40a148:	nop    DWORD PTR [rax+rax*1+0x0]
  40a150:	lea    rax,[r15+0x1]
  40a154:	mov    DWORD PTR [rbx+0x20],0x1
  40a15b:	mov    QWORD PTR [rsp+0x38],rax
  40a160:	mov    rdx,rax
  40a163:	jmp    0x40a0ff
  40a165:	mov    DWORD PTR [rbx+0x24],0x1
  40a16c:	cmp    BYTE PTR [r14+0x1],0x23
  40a171:	lea    rax,[r14+0x1]
  40a175:	je     0x40a1e0
  40a177:	mov    r14,rax
  40a17a:	jmp    0x409fcf
  40a17f:	nop
  40a180:	lea    r8,[rip+0x17469]        # 0x4215f0
  40a187:	mov    r9,r14
  40a18a:	mov    edx,0x10
  40a18f:	xor    ecx,ecx
  40a191:	call   0x412308
  40a196:	mov    rcx,r15
  40a199:	call   0x4123c0
  40a19e:	test   r13d,r13d
  40a1a1:	jns    0x409fff
  40a1a7:	jmp    0x40a0b0
  40a1ac:	nop    DWORD PTR [rax+0x0]
  40a1b0:	cmp    DWORD PTR [rip+0x1f152],esi        # 0x429308
  40a1b6:	je     0x409f11
  40a1bc:	lea    rax,[rip+0x17224]        # 0x4213e7
  40a1c3:	mov    DWORD PTR [rsp+0x28],0xbb9
  40a1cb:	lea    r9,[rip+0x17491]        # 0x421663
  40a1d2:	mov    QWORD PTR [rsp+0x20],rax
  40a1d7:	jmp    0x40a271
  40a1dc:	nop    DWORD PTR [rax+0x0]
  40a1e0:	mov    rdx,QWORD PTR [rsp+0x40]
  40a1e5:	add    r14,0x2
  40a1e9:	mov    DWORD PTR [rbx+0x28],0x1
  40a1f0:	mov    r8d,0xa
  40a1f6:	mov    rcx,r14
  40a1f9:	call   0x413c70
  40a1fe:	mov    rdx,rax
  40a201:	shr    rdx,0x3f
  40a205:	test   dl,dl
  40a207:	jne    0x40a217
  40a209:	mov    rdx,QWORD PTR [rsp+0x58]
  40a20e:	cmp    BYTE PTR [rdx],0x0
  40a211:	je     0x409ff3
  40a217:	lea    r8,[rip+0x17392]        # 0x4215b0
  40a21e:	mov    r9,r14
  40a221:	mov    edx,0x10
  40a226:	xor    ecx,ecx
  40a228:	call   0x412308
  40a22d:	jmp    0x40a196
  40a232:	mov    r13d,0xfffffff4
  40a238:	jmp    0x40a0b0
  40a23d:	mov    ecx,0x30
  40a242:	mov    ebx,0x1
  40a247:	jmp    0x409f3b
  40a24c:	mov    eax,0xfffffff4
  40a251:	jmp    0x409f1e
  40a256:	lea    rax,[rip+0x1718a]        # 0x4213e7
  40a25d:	lea    r9,[rip+0x172dd]        # 0x421541
  40a264:	mov    DWORD PTR [rsp+0x28],0xba9
  40a26c:	mov    QWORD PTR [rsp+0x20],rax
  40a271:	lea    r8,[rip+0x17151]        # 0x4213c9
  40a278:	xor    edx,edx
  40a27a:	xor    ecx,ecx
  40a27c:	call   0x412308
  40a281:	call   0x419910
  40a286:	mov    r13d,0xfffffff4
  40a28c:	jmp    0x409f11
  40a291:	nop    DWORD PTR [rax+rax*1+0x0]
  40a296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2a0:	push   r15
  40a2a2:	push   r14
  40a2a4:	push   r13
  40a2a6:	push   r12
  40a2a8:	push   rbp
  40a2a9:	push   rdi
  40a2aa:	push   rsi
  40a2ab:	push   rbx
  40a2ac:	sub    rsp,0x38
  40a2b0:	lea    rsi,[rip+0x12ec9]        # 0x41d180
  40a2b7:	movsxd rax,ecx
  40a2ba:	lea    rax,[rax+rax*2]
  40a2be:	shl    rax,0x5
  40a2c2:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a2ca:	lea    rax,[rsi+rax*1+0x10]
  40a2cf:	lea    rdi,[rax+0x4]
  40a2d3:	movsxd rax,DWORD PTR [rax+0x4]
  40a2d7:	mov    QWORD PTR [rsp+0x20],rdi
  40a2dc:	cmp    eax,0xffffffff
  40a2df:	je     0x40a4aa
  40a2e5:	lea    rax,[rax+rax*2]
  40a2e9:	shl    rax,0x5
  40a2ed:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a2f5:	lea    rax,[rsi+rax*1+0x10]
  40a2fa:	lea    rdi,[rax+0x4]
  40a2fe:	movsxd rax,DWORD PTR [rax+0x4]
  40a302:	mov    QWORD PTR [rsp+0x28],rdi
  40a307:	cmp    eax,0xffffffff
  40a30a:	je     0x40a493
  40a310:	lea    rax,[rax+rax*2]
  40a314:	shl    rax,0x5
  40a318:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a320:	lea    rax,[rsi+rax*1+0x10]
  40a325:	lea    r12,[rax+0x4]
  40a329:	movsxd rax,DWORD PTR [rax+0x4]
  40a32d:	cmp    eax,0xffffffff
  40a330:	je     0x40a47c
  40a336:	lea    rax,[rax+rax*2]
  40a33a:	shl    rax,0x5
  40a33e:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a346:	lea    rax,[rsi+rax*1+0x10]
  40a34b:	lea    r13,[rax+0x4]
  40a34f:	movsxd rax,DWORD PTR [rax+0x4]
  40a353:	cmp    eax,0xffffffff
  40a356:	je     0x40a46b
  40a35c:	lea    rax,[rax+rax*2]
  40a360:	shl    rax,0x5
  40a364:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a36c:	lea    rax,[rsi+rax*1+0x10]
  40a371:	lea    r14,[rax+0x4]
  40a375:	movsxd rax,DWORD PTR [rax+0x4]
  40a379:	cmp    eax,0xffffffff
  40a37c:	je     0x40a45a
  40a382:	lea    rax,[rax+rax*2]
  40a386:	shl    rax,0x5
  40a38a:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a392:	lea    rax,[rsi+rax*1+0x10]
  40a397:	lea    r15,[rax+0x4]
  40a39b:	movsxd rax,DWORD PTR [rax+0x4]
  40a39f:	cmp    eax,0xffffffff
  40a3a2:	je     0x40a44a
  40a3a8:	lea    rax,[rax+rax*2]
  40a3ac:	shl    rax,0x5
  40a3b0:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a3b8:	lea    rax,[rsi+rax*1+0x10]
  40a3bd:	lea    rdi,[rax+0x4]
  40a3c1:	movsxd rax,DWORD PTR [rax+0x4]
  40a3c5:	cmp    eax,0xffffffff
  40a3c8:	je     0x40a43a
  40a3ca:	lea    rax,[rax+rax*2]
  40a3ce:	shl    rax,0x5
  40a3d2:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a3da:	lea    rax,[rsi+rax*1+0x10]
  40a3df:	lea    rbx,[rax+0x4]
  40a3e3:	movsxd rax,DWORD PTR [rax+0x4]
  40a3e7:	cmp    eax,0xffffffff
  40a3ea:	je     0x40a42e
  40a3ec:	nop    DWORD PTR [rax+0x0]
  40a3f0:	lea    rax,[rax+rax*2]
  40a3f4:	shl    rax,0x5
  40a3f8:	lea    rdx,[rsi+rax*1+0x10]
  40a3fd:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a405:	mov    ecx,DWORD PTR [rdx+0x4]
  40a408:	lea    rbp,[rdx+0x4]
  40a40c:	cmp    ecx,0xffffffff
  40a40f:	je     0x40a422
  40a411:	add    rbp,0x4
  40a415:	call   0x40a2a0
  40a41a:	mov    ecx,DWORD PTR [rbp+0x0]
  40a41d:	cmp    ecx,0xffffffff
  40a420:	jne    0x40a411
  40a422:	add    rbx,0x4
  40a426:	movsxd rax,DWORD PTR [rbx]
  40a429:	cmp    eax,0xffffffff
  40a42c:	jne    0x40a3f0
  40a42e:	add    rdi,0x4
  40a432:	movsxd rax,DWORD PTR [rdi]
  40a435:	cmp    eax,0xffffffff
  40a438:	jne    0x40a3ca
  40a43a:	add    r15,0x4
  40a43e:	movsxd rax,DWORD PTR [r15]
  40a441:	cmp    eax,0xffffffff
  40a444:	jne    0x40a3a8
  40a44a:	add    r14,0x4
  40a44e:	movsxd rax,DWORD PTR [r14]
  40a451:	cmp    eax,0xffffffff
  40a454:	jne    0x40a382
  40a45a:	add    r13,0x4
  40a45e:	movsxd rax,DWORD PTR [r13+0x0]
  40a462:	cmp    eax,0xffffffff
  40a465:	jne    0x40a35c
  40a46b:	add    r12,0x4
  40a46f:	movsxd rax,DWORD PTR [r12]
  40a473:	cmp    eax,0xffffffff
  40a476:	jne    0x40a336
  40a47c:	add    QWORD PTR [rsp+0x28],0x4
  40a482:	mov    rax,QWORD PTR [rsp+0x28]
  40a487:	movsxd rax,DWORD PTR [rax]
  40a48a:	cmp    eax,0xffffffff
  40a48d:	jne    0x40a310
  40a493:	add    QWORD PTR [rsp+0x20],0x4
  40a499:	mov    rax,QWORD PTR [rsp+0x20]
  40a49e:	movsxd rax,DWORD PTR [rax]
  40a4a1:	cmp    eax,0xffffffff
  40a4a4:	jne    0x40a2e5
  40a4aa:	add    rsp,0x38
  40a4ae:	pop    rbx
  40a4af:	pop    rsi
  40a4b0:	pop    rdi
  40a4b1:	pop    rbp
  40a4b2:	pop    r12
  40a4b4:	pop    r13
  40a4b6:	pop    r14
  40a4b8:	pop    r15
  40a4ba:	ret    
  40a4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a4c0:	push   rbx
  40a4c1:	sub    rsp,0x20
  40a4c5:	mov    ecx,DWORD PTR [rip+0x137a9]        # 0x41dc74
  40a4cb:	mov    DWORD PTR [rip+0x137e3],0x1        # 0x41dcb8
  40a4d5:	lea    rbx,[rip+0x13798]        # 0x41dc74
  40a4dc:	cmp    ecx,0xffffffff
  40a4df:	je     0x40a4f1
  40a4e1:	add    rbx,0x4
  40a4e5:	call   0x40a2a0
  40a4ea:	mov    ecx,DWORD PTR [rbx]
  40a4ec:	cmp    ecx,0xffffffff
  40a4ef:	jne    0x40a4e1
  40a4f1:	xor    eax,eax
  40a4f3:	add    rsp,0x20
  40a4f7:	pop    rbx
  40a4f8:	ret    
  40a4f9:	nop    DWORD PTR [rax+0x0]
  40a500:	push   rbx
  40a501:	sub    rsp,0x20
  40a505:	mov    ecx,DWORD PTR [rip+0x137c9]        # 0x41dcd4
  40a50b:	mov    DWORD PTR [rip+0x13803],0x1        # 0x41dd18
  40a515:	lea    rbx,[rip+0x137b8]        # 0x41dcd4
  40a51c:	cmp    ecx,0xffffffff
  40a51f:	je     0x40a531
  40a521:	add    rbx,0x4
  40a525:	call   0x40a2a0
  40a52a:	mov    ecx,DWORD PTR [rbx]
  40a52c:	cmp    ecx,0xffffffff
  40a52f:	jne    0x40a521
  40a531:	xor    eax,eax
  40a533:	add    rsp,0x20
  40a537:	pop    rbx
  40a538:	ret    
  40a539:	nop    DWORD PTR [rax+0x0]
  40a540:	push   rbx
  40a541:	sub    rsp,0x20
  40a545:	mov    ecx,DWORD PTR [rip+0x13909]        # 0x41de54
  40a54b:	mov    DWORD PTR [rip+0x13943],0x1        # 0x41de98
  40a555:	lea    rbx,[rip+0x138f8]        # 0x41de54
  40a55c:	cmp    ecx,0xffffffff
  40a55f:	je     0x40a571
  40a561:	add    rbx,0x4
  40a565:	call   0x40a2a0
  40a56a:	mov    ecx,DWORD PTR [rbx]
  40a56c:	cmp    ecx,0xffffffff
  40a56f:	jne    0x40a561
  40a571:	xor    eax,eax
  40a573:	add    rsp,0x20
  40a577:	pop    rbx
  40a578:	ret    
  40a579:	nop    DWORD PTR [rax+0x0]
  40a580:	push   rbx
  40a581:	sub    rsp,0x20
  40a585:	mov    ecx,DWORD PTR [rip+0x12cc9]        # 0x41d254
  40a58b:	mov    DWORD PTR [rip+0x12d03],0x1        # 0x41d298
  40a595:	lea    rbx,[rip+0x12cb8]        # 0x41d254
  40a59c:	cmp    ecx,0xffffffff
  40a59f:	je     0x40a5b1
  40a5a1:	add    rbx,0x4
  40a5a5:	call   0x40a2a0
  40a5aa:	mov    ecx,DWORD PTR [rbx]
  40a5ac:	cmp    ecx,0xffffffff
  40a5af:	jne    0x40a5a1
  40a5b1:	xor    eax,eax
  40a5b3:	add    rsp,0x20
  40a5b7:	pop    rbx
  40a5b8:	ret    
  40a5b9:	nop    DWORD PTR [rax+0x0]
  40a5c0:	push   rbx
  40a5c1:	sub    rsp,0x20
  40a5c5:	mov    ecx,DWORD PTR [rip+0x12e69]        # 0x41d434
  40a5cb:	mov    DWORD PTR [rip+0x12ea3],0x1        # 0x41d478
  40a5d5:	lea    rbx,[rip+0x12e58]        # 0x41d434
  40a5dc:	cmp    ecx,0xffffffff
  40a5df:	je     0x40a5f1
  40a5e1:	add    rbx,0x4
  40a5e5:	call   0x40a2a0
  40a5ea:	mov    ecx,DWORD PTR [rbx]
  40a5ec:	cmp    ecx,0xffffffff
  40a5ef:	jne    0x40a5e1
  40a5f1:	xor    eax,eax
  40a5f3:	add    rsp,0x20
  40a5f7:	pop    rbx
  40a5f8:	ret    
  40a5f9:	nop    DWORD PTR [rax+0x0]
  40a600:	push   rbx
  40a601:	sub    rsp,0x20
  40a605:	mov    ecx,DWORD PTR [rip+0x12ca9]        # 0x41d2b4
  40a60b:	mov    DWORD PTR [rip+0x12ce3],0x1        # 0x41d2f8
  40a615:	lea    rbx,[rip+0x12c98]        # 0x41d2b4
  40a61c:	cmp    ecx,0xffffffff
  40a61f:	je     0x40a631
  40a621:	add    rbx,0x4
  40a625:	call   0x40a2a0
  40a62a:	mov    ecx,DWORD PTR [rbx]
  40a62c:	cmp    ecx,0xffffffff
  40a62f:	jne    0x40a621
  40a631:	xor    eax,eax
  40a633:	add    rsp,0x20
  40a637:	pop    rbx
  40a638:	ret    
  40a639:	nop    DWORD PTR [rax+0x0]
  40a640:	push   rbx
  40a641:	sub    rsp,0x20
  40a645:	mov    ecx,DWORD PTR [rip+0x13089]        # 0x41d6d4
  40a64b:	mov    DWORD PTR [rip+0x130c3],0x1        # 0x41d718
  40a655:	lea    rbx,[rip+0x13078]        # 0x41d6d4
  40a65c:	cmp    ecx,0xffffffff
  40a65f:	je     0x40a671
  40a661:	add    rbx,0x4
  40a665:	call   0x40a2a0
  40a66a:	mov    ecx,DWORD PTR [rbx]
  40a66c:	cmp    ecx,0xffffffff
  40a66f:	jne    0x40a661
  40a671:	xor    eax,eax
  40a673:	add    rsp,0x20
  40a677:	pop    rbx
  40a678:	ret    
  40a679:	nop    DWORD PTR [rax+0x0]
  40a680:	push   rbx
  40a681:	sub    rsp,0x20
  40a685:	mov    ecx,DWORD PTR [rip+0x12c89]        # 0x41d314
  40a68b:	mov    DWORD PTR [rip+0x12cc3],0x1        # 0x41d358
  40a695:	lea    rbx,[rip+0x12c78]        # 0x41d314
  40a69c:	cmp    ecx,0xffffffff
  40a69f:	je     0x40a6b1
  40a6a1:	add    rbx,0x4
  40a6a5:	call   0x40a2a0
  40a6aa:	mov    ecx,DWORD PTR [rbx]
  40a6ac:	cmp    ecx,0xffffffff
  40a6af:	jne    0x40a6a1
  40a6b1:	xor    eax,eax
  40a6b3:	add    rsp,0x20
  40a6b7:	pop    rbx
  40a6b8:	ret    
  40a6b9:	nop    DWORD PTR [rax+0x0]
  40a6c0:	push   rbx
  40a6c1:	sub    rsp,0x20
  40a6c5:	mov    ecx,DWORD PTR [rip+0x12f49]        # 0x41d614
  40a6cb:	mov    DWORD PTR [rip+0x12f83],0x1        # 0x41d658
  40a6d5:	lea    rbx,[rip+0x12f38]        # 0x41d614
  40a6dc:	cmp    ecx,0xffffffff
  40a6df:	je     0x40a6f1
  40a6e1:	add    rbx,0x4
  40a6e5:	call   0x40a2a0
  40a6ea:	mov    ecx,DWORD PTR [rbx]
  40a6ec:	cmp    ecx,0xffffffff
  40a6ef:	jne    0x40a6e1
  40a6f1:	xor    eax,eax
  40a6f3:	add    rsp,0x20
  40a6f7:	pop    rbx
  40a6f8:	ret    
  40a6f9:	nop    DWORD PTR [rax+0x0]
  40a700:	push   rbx
  40a701:	sub    rsp,0x20
  40a705:	mov    ecx,DWORD PTR [rip+0x132c9]        # 0x41d9d4
  40a70b:	mov    DWORD PTR [rip+0x13303],0x1        # 0x41da18
  40a715:	lea    rbx,[rip+0x132b8]        # 0x41d9d4
  40a71c:	cmp    ecx,0xffffffff
  40a71f:	je     0x40a731
  40a721:	add    rbx,0x4
  40a725:	call   0x40a2a0
  40a72a:	mov    ecx,DWORD PTR [rbx]
  40a72c:	cmp    ecx,0xffffffff
  40a72f:	jne    0x40a721
  40a731:	xor    eax,eax
  40a733:	add    rsp,0x20
  40a737:	pop    rbx
  40a738:	ret    
  40a739:	nop    DWORD PTR [rax+0x0]
  40a740:	push   r15
  40a742:	push   r14
  40a744:	push   r13
  40a746:	push   r12
  40a748:	push   rbp
  40a749:	push   rdi
  40a74a:	push   rsi
  40a74b:	push   rbx
  40a74c:	sub    rsp,0x868
  40a753:	lea    r13,[rsp+0x60]
  40a758:	mov    r12,r8
  40a75b:	mov    QWORD PTR [rsp+0x8b8],rdx
  40a763:	mov    r8d,0xffffffff
  40a769:	xor    edx,edx
  40a76b:	mov    rsi,rcx
  40a76e:	mov    rcx,r13
  40a771:	call   0x412480
  40a776:	mov    rcx,r12
  40a779:	call   0x419840
  40a77e:	add    rax,r12
  40a781:	cmp    BYTE PTR [r12],0x0
  40a786:	mov    QWORD PTR [rsp+0x58],r12
  40a78b:	mov    QWORD PTR [rsp+0x38],rax
  40a790:	je     0x40a803
  40a792:	lea    rax,[rsp+0x54]
  40a797:	lea    r15,[rsp+0x58]
  40a79c:	lea    rdi,[rsp+0x460]
  40a7a4:	mov    rbx,r12
  40a7a7:	mov    DWORD PTR [rsp+0x4c],0x0
  40a7af:	mov    QWORD PTR [rsp+0x40],rax
  40a7b4:	mov    r9d,DWORD PTR [rsi+0x28c0]
  40a7bb:	mov    r8,QWORD PTR [rsp+0x38]
  40a7c0:	mov    rdx,r15
  40a7c3:	mov    rcx,QWORD PTR [rsp+0x40]
  40a7c8:	call   0x4121e0
  40a7cd:	test   eax,eax
  40a7cf:	js     0x40a810
  40a7d1:	mov    r8d,DWORD PTR [rsp+0x58]
  40a7d6:	mov    rdx,rbx
  40a7d9:	mov    rcx,r13
  40a7dc:	sub    r8d,ebx
  40a7df:	call   0x4124a8
  40a7e4:	mov    rbx,QWORD PTR [rsp+0x58]
  40a7e9:	cmp    BYTE PTR [rbx],0x0
  40a7ec:	jne    0x40a7b4
  40a7ee:	mov    eax,DWORD PTR [rsp+0x4c]
  40a7f2:	test   eax,eax
  40a7f4:	je     0x40a803
  40a7f6:	cmp    DWORD PTR [rsi+0x28b4],0x1
  40a7fd:	je     0x40a902
  40a803:	xor    ebx,ebx
  40a805:	jmp    0x40a8dc
  40a80a:	nop    WORD PTR [rax+rax*1+0x0]
  40a810:	xor    edx,edx
  40a812:	mov    r8d,0x1
  40a818:	mov    rcx,rdi
  40a81b:	call   0x412480
  40a820:	mov    rbp,QWORD PTR [rsp+0x58]
  40a825:	lea    rdx,[rip+0x16c6a]        # 0x421496
  40a82c:	mov    rcx,rdi
  40a82f:	mov    r14,rbx
  40a832:	call   0x412478
  40a837:	cmp    rbp,rbx
  40a83a:	je     0x40a85c
  40a83c:	nop    DWORD PTR [rax+0x0]
  40a840:	movzx  r8d,BYTE PTR [r14]
  40a844:	lea    rdx,[rip+0x16c97]        # 0x4214e2
  40a84b:	mov    rcx,rdi
  40a84e:	add    r14,0x1
  40a852:	call   0x412478
  40a857:	cmp    r14,rbp
  40a85a:	jne    0x40a840
  40a85c:	mov    r9,QWORD PTR [rsp+0x460]
  40a864:	lea    r8,[rip+0x16e15]        # 0x421680
  40a86b:	mov    QWORD PTR [rsp+0x20],r12
  40a870:	mov    edx,0x30
  40a875:	mov    rcx,rsi
  40a878:	call   0x412308
  40a87d:	mov    eax,DWORD PTR [rsi+0x28b4]
  40a883:	add    DWORD PTR [rsp+0x4c],0x1
  40a888:	test   eax,eax
  40a88a:	je     0x40a8c0
  40a88c:	cmp    eax,0x1
  40a88f:	jne    0x40a8ad
  40a891:	mov    r8,QWORD PTR [rsi+0x28b8]
  40a898:	lea    rdx,[rip+0x16747]        # 0x420fe6
  40a89f:	mov    rcx,r13
  40a8a2:	call   0x412478
  40a8a7:	mov    eax,DWORD PTR [rsi+0x28b4]
  40a8ad:	cmp    eax,0x2
  40a8b0:	jne    0x40a7e4
  40a8b6:	jmp    0x40a7d1
  40a8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8c0:	lea    r8,[rip+0x16de9]        # 0x4216b0
  40a8c7:	mov    r9,r12
  40a8ca:	mov    edx,0x10
  40a8cf:	mov    rcx,rsi
  40a8d2:	mov    ebx,0xbebbb1b7
  40a8d7:	call   0x412308
  40a8dc:	mov    rdx,QWORD PTR [rsp+0x8b8]
  40a8e4:	mov    rcx,r13
  40a8e7:	call   0x412488
  40a8ec:	mov    eax,ebx
  40a8ee:	add    rsp,0x868
  40a8f5:	pop    rbx
  40a8f6:	pop    rsi
  40a8f7:	pop    rdi
  40a8f8:	pop    rbp
  40a8f9:	pop    r12
  40a8fb:	pop    r13
  40a8fd:	pop    r14
  40a8ff:	pop    r15
  40a901:	ret    
  40a902:	mov    rax,QWORD PTR [rsi+0x28b8]
  40a909:	mov    r9d,DWORD PTR [rsp+0x4c]
  40a90e:	lea    r8,[rip+0x16dcb]        # 0x4216e0
  40a915:	mov    QWORD PTR [rsp+0x20],r12
  40a91a:	mov    edx,0x18
  40a91f:	mov    rcx,rsi
  40a922:	xor    ebx,ebx
  40a924:	mov    QWORD PTR [rsp+0x28],rax
  40a929:	call   0x412308
  40a92e:	jmp    0x40a8dc
  40a930:	push   rdi
  40a931:	push   rsi
  40a932:	push   rbx
  40a933:	sub    rsp,0x20
  40a937:	movsxd rax,DWORD PTR [rcx+0x2c]
  40a93b:	mov    rsi,rdx
  40a93e:	mov    rbx,rcx
  40a941:	mov    rdi,r8
  40a944:	mov    rax,QWORD PTR [rcx+rax*8+0x58]
  40a949:	mov    edx,DWORD PTR [rax+0x58]
  40a94c:	test   edx,edx
  40a94e:	je     0x40a973
  40a950:	mov    rax,QWORD PTR [rbx+0x8]
  40a954:	mov    r8,rdi
  40a957:	mov    rdx,rsi
  40a95a:	mov    rcx,rbx
  40a95d:	call   QWORD PTR [rax+0x48]
  40a960:	movsxd rax,DWORD PTR [rbx+0x2c]
  40a964:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40a969:	xor    eax,eax
  40a96b:	add    rsp,0x20
  40a96f:	pop    rbx
  40a970:	pop    rsi
  40a971:	pop    rdi
  40a972:	ret    
  40a973:	mov    rcx,QWORD PTR [rax+0x50]
  40a977:	xor    r9d,r9d
  40a97a:	xor    r8d,r8d
  40a97d:	mov    rdx,rsi
  40a980:	call   0x412438
  40a985:	test   rax,rax
  40a988:	jne    0x40a950
  40a98a:	jmp    0x40a969
  40a98c:	nop    DWORD PTR [rax+0x0]
  40a990:	push   r15
  40a992:	push   r14
  40a994:	push   r13
  40a996:	push   r12
  40a998:	push   rbp
  40a999:	push   rdi
  40a99a:	push   rsi
  40a99b:	push   rbx
  40a99c:	sub    rsp,0x428
  40a9a3:	xor    r14d,r14d
  40a9a6:	mov    ebp,0x2e
  40a9ab:	lea    rsi,[rsp+0x20]
  40a9b0:	mov    QWORD PTR [rsp+0x470],rcx
  40a9b8:	mov    QWORD PTR [rsp+0x478],rdx
  40a9c0:	mov    r12,r8
  40a9c3:	xor    edx,edx
  40a9c5:	mov    r8d,0xffffffff
  40a9cb:	mov    rcx,rsi
  40a9ce:	mov    r13d,r9d
  40a9d1:	call   0x412480
  40a9d6:	lea    rdx,[rip+0x164cd]        # 0x420eaa
  40a9dd:	mov    rcx,rsi
  40a9e0:	call   0x412478
  40a9e5:	test   r13d,r13d
  40a9e8:	je     0x40aaea
  40a9ee:	xchg   ax,ax
  40a9f0:	lea    rdx,[rip+0x16d30]        # 0x421727
  40a9f7:	mov    r8d,r14d
  40a9fa:	mov    rcx,rsi
  40a9fd:	mov    edi,0x10
  40aa02:	call   0x412478
  40aa07:	cmp    r13d,0x10
  40aa0b:	cmovle edi,r13d
  40aa0f:	test   edi,edi
  40aa11:	jle    0x40ab23
  40aa17:	movzx  r8d,BYTE PTR [r12]
  40aa1c:	lea    rdx,[rip+0x16d0b]        # 0x42172e
  40aa23:	mov    rcx,rsi
  40aa26:	lea    rbx,[r12+0x1]
  40aa2b:	xor    r15d,r15d
  40aa2e:	call   0x412478
  40aa33:	jmp    0x40aa39
  40aa35:	add    rbx,0x1
  40aa39:	add    r15d,0x1
  40aa3d:	cmp    r15d,edi
  40aa40:	je     0x40aa70
  40aa42:	movzx  r8d,BYTE PTR [rbx]
  40aa46:	lea    rdx,[rip+0x16ce1]        # 0x42172e
  40aa4d:	mov    rcx,rsi
  40aa50:	call   0x412478
  40aa55:	test   r15b,0x1
  40aa59:	je     0x40aa35
  40aa5b:	lea    rdx,[rip+0x16446]        # 0x420ea8
  40aa62:	mov    rcx,rsi
  40aa65:	call   0x412478
  40aa6a:	jmp    0x40aa35
  40aa6c:	nop    DWORD PTR [rax+0x0]
  40aa70:	mov    eax,edi
  40aa72:	mov    edx,edi
  40aa74:	mov    rcx,rsi
  40aa77:	shr    eax,0x1f
  40aa7a:	neg    edx
  40aa7c:	mov    r15,r12
  40aa7f:	add    eax,edi
  40aa81:	sar    eax,1
  40aa83:	neg    eax
  40aa85:	lea    r8d,[rax+rdx*2+0x29]
  40aa8a:	mov    edx,0x20
  40aa8f:	call   0x412498
  40aa94:	lea    edx,[rdi-0x1]
  40aa97:	lea    rbx,[r12+rdx*1+0x1]
  40aa9c:	nop    DWORD PTR [rax+0x0]
  40aaa0:	movzx  ecx,BYTE PTR [r15]
  40aaa4:	mov    r8d,0x1
  40aaaa:	mov    edx,ecx
  40aaac:	sub    ecx,0x20
  40aaaf:	cmp    ecx,0x5e
  40aab2:	movsx  edx,dl
  40aab5:	mov    rcx,rsi
  40aab8:	cmova  edx,ebp
  40aabb:	add    r15,0x1
  40aabf:	call   0x412498
  40aac4:	cmp    r15,rbx
  40aac7:	jne    0x40aaa0
  40aac9:	lea    rdx,[rip+0x163da]        # 0x420eaa
  40aad0:	mov    rcx,rsi
  40aad3:	add    r14d,edi
  40aad6:	call   0x412478
  40aadb:	movsxd rax,edi
  40aade:	add    r12,rax
  40aae1:	sub    r13d,edi
  40aae4:	jne    0x40a9f0
  40aaea:	mov    r8,QWORD PTR [rsp+0x20]
  40aaef:	mov    rdx,QWORD PTR [rsp+0x478]
  40aaf7:	mov    rcx,QWORD PTR [rsp+0x470]
  40aaff:	call   0x40a930
  40ab04:	xor    edx,edx
  40ab06:	mov    rcx,rsi
  40ab09:	call   0x412488
  40ab0e:	nop
  40ab0f:	add    rsp,0x428
  40ab16:	pop    rbx
  40ab17:	pop    rsi
  40ab18:	pop    rdi
  40ab19:	pop    rbp
  40ab1a:	pop    r12
  40ab1c:	pop    r13
  40ab1e:	pop    r14
  40ab20:	pop    r15
  40ab22:	ret    
  40ab23:	mov    r8d,0x29
  40ab29:	mov    edx,0x20
  40ab2e:	mov    rcx,rsi
  40ab31:	call   0x412498
  40ab36:	jmp    0x40aac9
  40ab38:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab40:	push   rsi
  40ab41:	push   rbx
  40ab42:	sub    rsp,0x428
  40ab49:	mov    r8d,0xffffffff
  40ab4f:	mov    edx,0x1
  40ab54:	lea    rsi,[rsp+0x20]
  40ab59:	mov    rbx,rcx
  40ab5c:	mov    rcx,rsi
  40ab5f:	call   0x412480
  40ab64:	mov    rcx,rbx
  40ab67:	mov    edx,0x1d
  40ab6c:	call   0x409380
  40ab71:	lea    r8,[rip+0x16bbb]        # 0x421733
  40ab78:	lea    rdx,[rip+0x16bbb]        # 0x42173a
  40ab7f:	mov    rcx,rbx
  40ab82:	call   0x40a930
  40ab87:	mov    rcx,rsi
  40ab8a:	call   0x412490
  40ab8f:	lea    rdx,[rip+0x16bb2]        # 0x421748
  40ab96:	mov    r9d,0x7e0
  40ab9c:	mov    rcx,rsi
  40ab9f:	mov    r8d,0x7d7
  40aba5:	call   0x412478
  40abaa:	mov    r8,QWORD PTR [rsp+0x20]
  40abaf:	lea    rdx,[rip+0x16bbc]        # 0x421772
  40abb6:	mov    rcx,rbx
  40abb9:	call   0x40a930
  40abbe:	lea    r8,[rip+0x16bb7]        # 0x42177c
  40abc5:	lea    rdx,[rip+0x16bc0]        # 0x42178c
  40abcc:	mov    rcx,rbx
  40abcf:	call   0x40a930
  40abd4:	lea    r8,[rip+0x16bc5]        # 0x4217a0
  40abdb:	lea    rdx,[rip+0x16e38]        # 0x421a1a
  40abe2:	mov    rcx,rbx
  40abe5:	call   0x40a930
  40abea:	mov    rcx,rbx
  40abed:	call   0x407ed0
  40abf2:	xor    edx,edx
  40abf4:	mov    rcx,rsi
  40abf7:	call   0x412488
  40abfc:	nop
  40abfd:	add    rsp,0x428
  40ac04:	pop    rbx
  40ac05:	pop    rsi
  40ac06:	ret    
  40ac07:	nop    WORD PTR [rax+rax*1+0x0]
  40ac10:	push   rdi
  40ac11:	push   rsi
  40ac12:	push   rbx
  40ac13:	sub    rsp,0x20
  40ac17:	movsxd rax,DWORD PTR [rcx+0x2c]
  40ac1b:	mov    r9,QWORD PTR [rcx+rax*8+0x58]
  40ac20:	mov    rax,QWORD PTR [rcx+0x8]
  40ac24:	test   BYTE PTR [rax+0x50],0x1
  40ac28:	je     0x40ac50
  40ac2a:	mov    rsi,rdx
  40ac2d:	mov    edx,DWORD PTR [r9+0x58]
  40ac31:	mov    rdi,r8
  40ac34:	mov    rbx,rcx
  40ac37:	test   edx,edx
  40ac39:	je     0x40ac60
  40ac3b:	mov    r8,rdi
  40ac3e:	mov    rdx,rsi
  40ac41:	mov    rcx,rbx
  40ac44:	call   QWORD PTR [rax+0x48]
  40ac47:	movsxd rax,DWORD PTR [rbx+0x2c]
  40ac4b:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40ac50:	xor    eax,eax
  40ac52:	add    rsp,0x20
  40ac56:	pop    rbx
  40ac57:	pop    rsi
  40ac58:	pop    rdi
  40ac59:	ret    
  40ac5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac60:	mov    rcx,QWORD PTR [r9+0x50]
  40ac64:	xor    r8d,r8d
  40ac67:	xor    r9d,r9d
  40ac6a:	mov    rdx,rsi
  40ac6d:	call   0x412438
  40ac72:	test   rax,rax
  40ac75:	je     0x40ac50
  40ac77:	mov    rax,QWORD PTR [rbx+0x8]
  40ac7b:	jmp    0x40ac3b
  40ac7d:	nop    DWORD PTR [rax]
  40ac80:	push   rdi
  40ac81:	push   rsi
  40ac82:	sub    rsp,0x38
  40ac86:	mov    rax,QWORD PTR [rip+0x1e66b]        # 0x4292f8
  40ac8d:	test   rax,rax
  40ac90:	jne    0x40acbe
  40ac92:	lea    rdi,[rip+0x16592]        # 0x42122b
  40ac99:	mov    rsi,r8
  40ac9c:	mov    ecx,0x2
  40aca1:	lea    rax,[rip+0x1652e]        # 0x4211d6
  40aca8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40acaa:	cmove  r8,rax
  40acae:	xor    eax,eax
  40acb0:	mov    QWORD PTR [rip+0x1e641],r8        # 0x4292f8
  40acb7:	add    rsp,0x38
  40acbb:	pop    rsi
  40acbc:	pop    rdi
  40acbd:	ret    
  40acbe:	mov    r9,r8
  40acc1:	lea    r8,[rip+0x16518]        # 0x4211e0
  40acc8:	xor    ecx,ecx
  40acca:	mov    QWORD PTR [rsp+0x20],rax
  40accf:	mov    edx,0x10
  40acd4:	call   0x412308
  40acd9:	mov    ecx,0x1
  40acde:	call   0x401cb0
  40ace3:	nop
  40ace4:	xchg   ax,ax
  40ace6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40acf0:	push   r15
  40acf2:	push   r14
  40acf4:	push   r13
  40acf6:	push   r12
  40acf8:	push   rbp
  40acf9:	push   rdi
  40acfa:	push   rsi
  40acfb:	push   rbx
  40acfc:	sub    rsp,0x28
  40ad00:	lea    rbx,[rip+0x12479]        # 0x41d180
  40ad07:	movsxd rcx,ecx
  40ad0a:	lea    rax,[rcx+rcx*2]
  40ad0e:	shl    rax,0x5
  40ad12:	lea    rdx,[rbx+rax*1]
  40ad16:	mov    r14d,DWORD PTR [rdx+0x58]
  40ad1a:	test   r14d,r14d
  40ad1d:	jne    0x40ad30
  40ad1f:	cmp    QWORD PTR [rdx+0x50],0x0
  40ad24:	je     0x40ad50
  40ad26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad30:	mov    r14d,0x1
  40ad36:	mov    eax,r14d
  40ad39:	add    rsp,0x28
  40ad3d:	pop    rbx
  40ad3e:	pop    rsi
  40ad3f:	pop    rdi
  40ad40:	pop    rbp
  40ad41:	pop    r12
  40ad43:	pop    r13
  40ad45:	pop    r14
  40ad47:	pop    r15
  40ad49:	ret    
  40ad4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ad50:	lea    rax,[rbx+rax*1+0x10]
  40ad55:	lea    r12,[rax+0x4]
  40ad59:	movsxd rax,DWORD PTR [rax+0x4]
  40ad5d:	cmp    eax,0xffffffff
  40ad60:	je     0x40ad36
  40ad62:	lea    rdx,[rax+rax*2]
  40ad66:	shl    rdx,0x5
  40ad6a:	add    rdx,rbx
  40ad6d:	mov    r14d,DWORD PTR [rdx+0x58]
  40ad71:	test   r14d,r14d
  40ad74:	jne    0x40ad30
  40ad76:	cmp    QWORD PTR [rdx+0x50],0x0
  40ad7b:	jne    0x40ad30
  40ad7d:	mov    r13,rbx
  40ad80:	lea    rax,[rax+rax*2]
  40ad84:	shl    rax,0x5
  40ad88:	lea    rax,[rbx+rax*1+0x10]
  40ad8d:	lea    rbp,[rax+0x4]
  40ad91:	movsxd rax,DWORD PTR [rax+0x4]
  40ad95:	cmp    eax,0xffffffff
  40ad98:	je     0x40af20
  40ad9e:	lea    rdx,[rax+rax*2]
  40ada2:	shl    rdx,0x5
  40ada6:	add    rdx,r13
  40ada9:	mov    r11d,DWORD PTR [rdx+0x58]
  40adad:	test   r11d,r11d
  40adb0:	jne    0x40ad30
  40adb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40adc0:	cmp    QWORD PTR [rdx+0x50],0x0
  40adc5:	jne    0x40ad30
  40adcb:	lea    rax,[rax+rax*2]
  40adcf:	shl    rax,0x5
  40add3:	lea    rax,[rbx+rax*1+0x10]
  40add8:	lea    rdi,[rax+0x4]
  40addc:	movsxd rax,DWORD PTR [rax+0x4]
  40ade0:	cmp    eax,0xffffffff
  40ade3:	je     0x40aef0
  40ade9:	lea    rdx,[rax+rax*2]
  40aded:	shl    rdx,0x5
  40adf1:	add    rdx,r13
  40adf4:	mov    r9d,DWORD PTR [rdx+0x58]
  40adf8:	test   r9d,r9d
  40adfb:	jne    0x40ad30
  40ae01:	cmp    QWORD PTR [rdx+0x50],0x0
  40ae06:	jne    0x40ad30
  40ae0c:	lea    rax,[rax+rax*2]
  40ae10:	shl    rax,0x5
  40ae14:	lea    rax,[rbx+rax*1+0x10]
  40ae19:	movsxd rdx,DWORD PTR [rax+0x4]
  40ae1d:	lea    rsi,[rax+0x4]
  40ae21:	cmp    edx,0xffffffff
  40ae24:	je     0x40aec0
  40ae2a:	lea    rax,[rdx+rdx*2]
  40ae2e:	shl    rax,0x5
  40ae32:	add    rax,r13
  40ae35:	mov    ecx,DWORD PTR [rax+0x58]
  40ae38:	test   ecx,ecx
  40ae3a:	jne    0x40ad30
  40ae40:	cmp    QWORD PTR [rax+0x50],0x0
  40ae45:	jne    0x40ad30
  40ae4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae50:	lea    rax,[rdx+rdx*2]
  40ae54:	shl    rax,0x5
  40ae58:	lea    rax,[rbx+rax*1+0x10]
  40ae5d:	mov    ecx,DWORD PTR [rax+0x4]
  40ae60:	lea    r15,[rax+0x4]
  40ae64:	cmp    ecx,0xffffffff
  40ae67:	jne    0x40ae7c
  40ae69:	jmp    0x40ae90
  40ae6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae70:	add    r15,0x4
  40ae74:	mov    ecx,DWORD PTR [r15]
  40ae77:	cmp    ecx,0xffffffff
  40ae7a:	je     0x40ae90
  40ae7c:	call   0x40acf0
  40ae81:	test   eax,eax
  40ae83:	je     0x40ae70
  40ae85:	jmp    0x40ad30
  40ae8a:	nop    WORD PTR [rax+rax*1+0x0]
  40ae90:	add    rsi,0x4
  40ae94:	movsxd rdx,DWORD PTR [rsi]
  40ae97:	cmp    edx,0xffffffff
  40ae9a:	je     0x40aec0
  40ae9c:	lea    rcx,[rdx+rdx*2]
  40aea0:	shl    rcx,0x5
  40aea4:	add    rcx,rbx
  40aea7:	mov    eax,DWORD PTR [rcx+0x58]
  40aeaa:	test   eax,eax
  40aeac:	jne    0x40ad30
  40aeb2:	cmp    QWORD PTR [rcx+0x50],0x0
  40aeb7:	jne    0x40ad30
  40aebd:	jmp    0x40ae50
  40aebf:	nop
  40aec0:	add    rdi,0x4
  40aec4:	movsxd rax,DWORD PTR [rdi]
  40aec7:	cmp    eax,0xffffffff
  40aeca:	je     0x40aef0
  40aecc:	lea    rdx,[rax+rax*2]
  40aed0:	shl    rdx,0x5
  40aed4:	add    rdx,rbx
  40aed7:	mov    r8d,DWORD PTR [rdx+0x58]
  40aedb:	test   r8d,r8d
  40aede:	je     0x40ae01
  40aee4:	jmp    0x40ad30
  40aee9:	nop    DWORD PTR [rax+0x0]
  40aef0:	add    rbp,0x4
  40aef4:	movsxd rax,DWORD PTR [rbp+0x0]
  40aef8:	cmp    eax,0xffffffff
  40aefb:	je     0x40af20
  40aefd:	lea    rdx,[rax+rax*2]
  40af01:	shl    rdx,0x5
  40af05:	add    rdx,rbx
  40af08:	mov    r10d,DWORD PTR [rdx+0x58]
  40af0c:	test   r10d,r10d
  40af0f:	je     0x40adc0
  40af15:	jmp    0x40ad30
  40af1a:	nop    WORD PTR [rax+rax*1+0x0]
  40af20:	add    r12,0x4
  40af24:	movsxd rax,DWORD PTR [r12]
  40af28:	cmp    eax,0xffffffff
  40af2b:	je     0x40ad36
  40af31:	lea    rdx,[rax+rax*2]
  40af35:	shl    rdx,0x5
  40af39:	add    rdx,rbx
  40af3c:	mov    esi,DWORD PTR [rdx+0x58]
  40af3f:	test   esi,esi
  40af41:	jne    0x40ad30
  40af47:	cmp    QWORD PTR [rdx+0x50],0x0
  40af4c:	jne    0x40ad30
  40af52:	jmp    0x40ad80
  40af57:	nop    WORD PTR [rax+rax*1+0x0]
  40af60:	push   r15
  40af62:	push   r14
  40af64:	push   r13
  40af66:	push   r12
  40af68:	push   rbp
  40af69:	push   rdi
  40af6a:	push   rsi
  40af6b:	push   rbx
  40af6c:	sub    rsp,0x78
  40af70:	lea    r14,[rip+0x12209]        # 0x41d180
  40af77:	movsxd rdi,ecx
  40af7a:	mov    esi,edx
  40af7c:	lea    rbx,[rdi+rdi*2]
  40af80:	lea    ebp,[rsi*4+0x0]
  40af87:	shl    rbx,0x5
  40af8b:	add    rbx,r14
  40af8e:	mov    eax,DWORD PTR [rbx+0x10]
  40af91:	mov    edx,eax
  40af93:	and    edx,0x4
  40af96:	cmp    edx,0x1
  40af99:	mov    edx,eax
  40af9b:	sbb    r8d,r8d
  40af9e:	and    edx,0x2
  40afa1:	and    r8d,0xffffffd8
  40afa5:	cmp    edx,0x1
  40afa8:	sbb    ecx,ecx
  40afaa:	and    eax,0x1
  40afad:	lea    r9d,[r8+0x56]
  40afb1:	and    ecx,0xffffffed
  40afb4:	cmp    eax,0x1
  40afb7:	sbb    edx,edx
  40afb9:	lea    r8d,[rcx+0x41]
  40afbd:	lea    rcx,[rip+0x16a64]        # 0x421a28
  40afc4:	and    edx,0xffffffd7
  40afc7:	add    edx,0x57
  40afca:	call   0x407ff0
  40afcf:	mov    r9,QWORD PTR [rbx+0x8]
  40afd3:	lea    rcx,[rip+0x16a55]        # 0x421a2f
  40afda:	mov    edx,ebp
  40afdc:	mov    r8d,0x20
  40afe2:	call   0x407ff0
  40afe7:	mov    rdx,QWORD PTR [rbx+0x48]
  40afeb:	test   rdx,rdx
  40afee:	je     0x40affc
  40aff0:	lea    rcx,[rip+0x16a40]        # 0x421a37
  40aff7:	call   0x407ff0
  40affc:	lea    rcx,[rip+0x15ea7]        # 0x420eaa
  40b003:	call   0x407ff0
  40b008:	lea    rax,[rdi+rdi*2]
  40b00c:	shl    rax,0x5
  40b010:	lea    rax,[r14+rax*1+0x10]
  40b015:	movsxd rbx,DWORD PTR [rax+0x4]
  40b019:	lea    rdi,[rax+0x4]
  40b01d:	mov    QWORD PTR [rsp+0x28],rdi
  40b022:	cmp    ebx,0xffffffff
  40b025:	je     0x40b67d
  40b02b:	lea    eax,[rbp+0x4]
  40b02e:	lea    ebp,[rsi+0x9]
  40b031:	lea    r13d,[rsi*4+0x1c]
  40b039:	lea    r12d,[rsi*4+0x20]
  40b041:	mov    DWORD PTR [rsp+0x60],eax
  40b045:	lea    eax,[rsi*4+0x8]
  40b04c:	mov    DWORD PTR [rsp+0x5c],eax
  40b050:	lea    eax,[rsi*4+0xc]
  40b057:	mov    DWORD PTR [rsp+0x58],eax
  40b05b:	lea    eax,[rsi*4+0x10]
  40b062:	mov    DWORD PTR [rsp+0x6c],eax
  40b066:	lea    eax,[rsi*4+0x14]
  40b06d:	mov    DWORD PTR [rsp+0x68],eax
  40b071:	lea    eax,[rsi*4+0x18]
  40b078:	mov    DWORD PTR [rsp+0x64],eax
  40b07c:	mov    eax,ebp
  40b07e:	mov    ebp,r13d
  40b081:	mov    r13d,eax
  40b084:	lea    rsi,[rbx+rbx*2]
  40b088:	shl    rsi,0x5
  40b08c:	add    rsi,r14
  40b08f:	mov    eax,DWORD PTR [rsi+0x10]
  40b092:	mov    edx,eax
  40b094:	and    edx,0x4
  40b097:	cmp    edx,0x1
  40b09a:	mov    edx,eax
  40b09c:	sbb    r8d,r8d
  40b09f:	and    edx,0x2
  40b0a2:	and    r8d,0xffffffd8
  40b0a6:	cmp    edx,0x1
  40b0a9:	sbb    ecx,ecx
  40b0ab:	and    eax,0x1
  40b0ae:	lea    r9d,[r8+0x56]
  40b0b2:	and    ecx,0xffffffed
  40b0b5:	cmp    eax,0x1
  40b0b8:	sbb    edx,edx
  40b0ba:	lea    r8d,[rcx+0x41]
  40b0be:	lea    rcx,[rip+0x16963]        # 0x421a28
  40b0c5:	and    edx,0xffffffd7
  40b0c8:	add    edx,0x57
  40b0cb:	call   0x407ff0
  40b0d0:	mov    edx,DWORD PTR [rsp+0x60]
  40b0d4:	mov    r9,QWORD PTR [rsi+0x8]
  40b0d8:	lea    rcx,[rip+0x16950]        # 0x421a2f
  40b0df:	mov    r8d,0x20
  40b0e5:	call   0x407ff0
  40b0ea:	mov    rdx,QWORD PTR [rsi+0x48]
  40b0ee:	test   rdx,rdx
  40b0f1:	je     0x40b0ff
  40b0f3:	lea    rcx,[rip+0x1693d]        # 0x421a37
  40b0fa:	call   0x407ff0
  40b0ff:	lea    rcx,[rip+0x15da4]        # 0x420eaa
  40b106:	call   0x407ff0
  40b10b:	lea    rax,[rbx+rbx*2]
  40b10f:	shl    rax,0x5
  40b113:	lea    rax,[r14+rax*1+0x10]
  40b118:	movsxd rbx,DWORD PTR [rax+0x4]
  40b11c:	lea    rsi,[rax+0x4]
  40b120:	mov    QWORD PTR [rsp+0x30],rsi
  40b125:	cmp    ebx,0xffffffff
  40b128:	je     0x40b666
  40b12e:	lea    rsi,[rbx+rbx*2]
  40b132:	shl    rsi,0x5
  40b136:	add    rsi,r14
  40b139:	mov    eax,DWORD PTR [rsi+0x10]
  40b13c:	mov    edx,eax
  40b13e:	and    edx,0x4
  40b141:	cmp    edx,0x1
  40b144:	mov    edx,eax
  40b146:	sbb    r8d,r8d
  40b149:	and    edx,0x2
  40b14c:	and    r8d,0xffffffd8
  40b150:	cmp    edx,0x1
  40b153:	sbb    ecx,ecx
  40b155:	and    eax,0x1
  40b158:	lea    r9d,[r8+0x56]
  40b15c:	and    ecx,0xffffffed
  40b15f:	cmp    eax,0x1
  40b162:	sbb    edx,edx
  40b164:	lea    r8d,[rcx+0x41]
  40b168:	lea    rcx,[rip+0x168b9]        # 0x421a28
  40b16f:	and    edx,0xffffffd7
  40b172:	add    edx,0x57
  40b175:	call   0x407ff0
  40b17a:	mov    edx,DWORD PTR [rsp+0x5c]
  40b17e:	mov    r9,QWORD PTR [rsi+0x8]
  40b182:	lea    rcx,[rip+0x168a6]        # 0x421a2f
  40b189:	mov    r8d,0x20
  40b18f:	call   0x407ff0
  40b194:	mov    rdx,QWORD PTR [rsi+0x48]
  40b198:	test   rdx,rdx
  40b19b:	je     0x40b1a9
  40b19d:	lea    rcx,[rip+0x16893]        # 0x421a37
  40b1a4:	call   0x407ff0
  40b1a9:	lea    rcx,[rip+0x15cfa]        # 0x420eaa
  40b1b0:	call   0x407ff0
  40b1b5:	lea    rax,[rbx+rbx*2]
  40b1b9:	shl    rax,0x5
  40b1bd:	lea    rax,[r14+rax*1+0x10]
  40b1c2:	movsxd rbx,DWORD PTR [rax+0x4]
  40b1c6:	lea    rsi,[rax+0x4]
  40b1ca:	mov    QWORD PTR [rsp+0x38],rsi
  40b1cf:	cmp    ebx,0xffffffff
  40b1d2:	je     0x40b64f
  40b1d8:	lea    rsi,[rbx+rbx*2]
  40b1dc:	shl    rsi,0x5
  40b1e0:	add    rsi,r14
  40b1e3:	mov    eax,DWORD PTR [rsi+0x10]
  40b1e6:	mov    edx,eax
  40b1e8:	and    edx,0x4
  40b1eb:	cmp    edx,0x1
  40b1ee:	mov    edx,eax
  40b1f0:	sbb    r8d,r8d
  40b1f3:	and    edx,0x2
  40b1f6:	and    r8d,0xffffffd8
  40b1fa:	cmp    edx,0x1
  40b1fd:	sbb    ecx,ecx
  40b1ff:	and    eax,0x1
  40b202:	lea    r9d,[r8+0x56]
  40b206:	and    ecx,0xffffffed
  40b209:	cmp    eax,0x1
  40b20c:	sbb    edx,edx
  40b20e:	lea    r8d,[rcx+0x41]
  40b212:	lea    rcx,[rip+0x1680f]        # 0x421a28
  40b219:	and    edx,0xffffffd7
  40b21c:	add    edx,0x57
  40b21f:	call   0x407ff0
  40b224:	mov    edx,DWORD PTR [rsp+0x58]
  40b228:	mov    r9,QWORD PTR [rsi+0x8]
  40b22c:	lea    rcx,[rip+0x167fc]        # 0x421a2f
  40b233:	mov    r8d,0x20
  40b239:	call   0x407ff0
  40b23e:	mov    rdx,QWORD PTR [rsi+0x48]
  40b242:	test   rdx,rdx
  40b245:	je     0x40b253
  40b247:	lea    rcx,[rip+0x167e9]        # 0x421a37
  40b24e:	call   0x407ff0
  40b253:	lea    rcx,[rip+0x15c50]        # 0x420eaa
  40b25a:	call   0x407ff0
  40b25f:	lea    rax,[rbx+rbx*2]
  40b263:	shl    rax,0x5
  40b267:	lea    rax,[r14+rax*1+0x10]
  40b26c:	movsxd rbx,DWORD PTR [rax+0x4]
  40b270:	lea    rsi,[rax+0x4]
  40b274:	mov    QWORD PTR [rsp+0x40],rsi
  40b279:	cmp    ebx,0xffffffff
  40b27c:	je     0x40b638
  40b282:	lea    rsi,[rbx+rbx*2]
  40b286:	shl    rsi,0x5
  40b28a:	add    rsi,r14
  40b28d:	mov    eax,DWORD PTR [rsi+0x10]
  40b290:	mov    edx,eax
  40b292:	and    edx,0x4
  40b295:	cmp    edx,0x1
  40b298:	mov    edx,eax
  40b29a:	sbb    r8d,r8d
  40b29d:	and    edx,0x2
  40b2a0:	and    r8d,0xffffffd8
  40b2a4:	cmp    edx,0x1
  40b2a7:	sbb    ecx,ecx
  40b2a9:	and    eax,0x1
  40b2ac:	lea    r9d,[r8+0x56]
  40b2b0:	and    ecx,0xffffffed
  40b2b3:	cmp    eax,0x1
  40b2b6:	sbb    edx,edx
  40b2b8:	lea    r8d,[rcx+0x41]
  40b2bc:	lea    rcx,[rip+0x16765]        # 0x421a28
  40b2c3:	and    edx,0xffffffd7
  40b2c6:	add    edx,0x57
  40b2c9:	call   0x407ff0
  40b2ce:	mov    edx,DWORD PTR [rsp+0x6c]
  40b2d2:	mov    r9,QWORD PTR [rsi+0x8]
  40b2d6:	lea    rcx,[rip+0x16752]        # 0x421a2f
  40b2dd:	mov    r8d,0x20
  40b2e3:	call   0x407ff0
  40b2e8:	mov    rdx,QWORD PTR [rsi+0x48]
  40b2ec:	test   rdx,rdx
  40b2ef:	je     0x40b2fd
  40b2f1:	lea    rcx,[rip+0x1673f]        # 0x421a37
  40b2f8:	call   0x407ff0
  40b2fd:	lea    rcx,[rip+0x15ba6]        # 0x420eaa
  40b304:	call   0x407ff0
  40b309:	lea    rax,[rbx+rbx*2]
  40b30d:	shl    rax,0x5
  40b311:	lea    rax,[r14+rax*1+0x10]
  40b316:	movsxd rbx,DWORD PTR [rax+0x4]
  40b31a:	lea    rsi,[rax+0x4]
  40b31e:	mov    QWORD PTR [rsp+0x48],rsi
  40b323:	cmp    ebx,0xffffffff
  40b326:	je     0x40b621
  40b32c:	lea    rsi,[rbx+rbx*2]
  40b330:	shl    rsi,0x5
  40b334:	add    rsi,r14
  40b337:	mov    eax,DWORD PTR [rsi+0x10]
  40b33a:	mov    edx,eax
  40b33c:	and    edx,0x4
  40b33f:	cmp    edx,0x1
  40b342:	mov    edx,eax
  40b344:	sbb    r8d,r8d
  40b347:	and    edx,0x2
  40b34a:	and    r8d,0xffffffd8
  40b34e:	cmp    edx,0x1
  40b351:	sbb    ecx,ecx
  40b353:	and    eax,0x1
  40b356:	lea    r9d,[r8+0x56]
  40b35a:	and    ecx,0xffffffed
  40b35d:	cmp    eax,0x1
  40b360:	sbb    edx,edx
  40b362:	lea    r8d,[rcx+0x41]
  40b366:	lea    rcx,[rip+0x166bb]        # 0x421a28
  40b36d:	and    edx,0xffffffd7
  40b370:	add    edx,0x57
  40b373:	call   0x407ff0
  40b378:	mov    edx,DWORD PTR [rsp+0x68]
  40b37c:	mov    r9,QWORD PTR [rsi+0x8]
  40b380:	lea    rcx,[rip+0x166a8]        # 0x421a2f
  40b387:	mov    r8d,0x20
  40b38d:	call   0x407ff0
  40b392:	mov    rdx,QWORD PTR [rsi+0x48]
  40b396:	test   rdx,rdx
  40b399:	je     0x40b3a7
  40b39b:	lea    rcx,[rip+0x16695]        # 0x421a37
  40b3a2:	call   0x407ff0
  40b3a7:	lea    rcx,[rip+0x15afc]        # 0x420eaa
  40b3ae:	call   0x407ff0
  40b3b3:	lea    rax,[rbx+rbx*2]
  40b3b7:	shl    rax,0x5
  40b3bb:	lea    rax,[r14+rax*1+0x10]
  40b3c0:	movsxd rbx,DWORD PTR [rax+0x4]
  40b3c4:	lea    rsi,[rax+0x4]
  40b3c8:	mov    QWORD PTR [rsp+0x50],rsi
  40b3cd:	cmp    ebx,0xffffffff
  40b3d0:	je     0x40b60a
  40b3d6:	lea    rsi,[rbx+rbx*2]
  40b3da:	shl    rsi,0x5
  40b3de:	add    rsi,r14
  40b3e1:	mov    eax,DWORD PTR [rsi+0x10]
  40b3e4:	mov    edx,eax
  40b3e6:	and    edx,0x4
  40b3e9:	cmp    edx,0x1
  40b3ec:	mov    edx,eax
  40b3ee:	sbb    r8d,r8d
  40b3f1:	and    edx,0x2
  40b3f4:	and    r8d,0xffffffd8
  40b3f8:	cmp    edx,0x1
  40b3fb:	sbb    ecx,ecx
  40b3fd:	and    eax,0x1
  40b400:	lea    r9d,[r8+0x56]
  40b404:	and    ecx,0xffffffed
  40b407:	cmp    eax,0x1
  40b40a:	sbb    edx,edx
  40b40c:	lea    r8d,[rcx+0x41]
  40b410:	lea    rcx,[rip+0x16611]        # 0x421a28
  40b417:	and    edx,0xffffffd7
  40b41a:	add    edx,0x57
  40b41d:	call   0x407ff0
  40b422:	mov    edx,DWORD PTR [rsp+0x64]
  40b426:	mov    r9,QWORD PTR [rsi+0x8]
  40b42a:	lea    rcx,[rip+0x165fe]        # 0x421a2f
  40b431:	mov    r8d,0x20
  40b437:	call   0x407ff0
  40b43c:	mov    rdx,QWORD PTR [rsi+0x48]
  40b440:	test   rdx,rdx
  40b443:	je     0x40b451
  40b445:	lea    rcx,[rip+0x165eb]        # 0x421a37
  40b44c:	call   0x407ff0
  40b451:	lea    rcx,[rip+0x15a52]        # 0x420eaa
  40b458:	call   0x407ff0
  40b45d:	lea    rax,[rbx+rbx*2]
  40b461:	shl    rax,0x5
  40b465:	lea    rax,[r14+rax*1+0x10]
  40b46a:	movsxd rbx,DWORD PTR [rax+0x4]
  40b46e:	lea    rsi,[rax+0x4]
  40b472:	cmp    ebx,0xffffffff
  40b475:	je     0x40b5f3
  40b47b:	lea    rdi,[rbx+rbx*2]
  40b47f:	shl    rdi,0x5
  40b483:	add    rdi,r14
  40b486:	mov    eax,DWORD PTR [rdi+0x10]
  40b489:	mov    edx,eax
  40b48b:	and    edx,0x4
  40b48e:	cmp    edx,0x1
  40b491:	mov    edx,eax
  40b493:	sbb    r8d,r8d
  40b496:	and    edx,0x2
  40b499:	and    r8d,0xffffffd8
  40b49d:	cmp    edx,0x1
  40b4a0:	sbb    ecx,ecx
  40b4a2:	and    eax,0x1
  40b4a5:	lea    r9d,[r8+0x56]
  40b4a9:	and    ecx,0xffffffed
  40b4ac:	cmp    eax,0x1
  40b4af:	sbb    edx,edx
  40b4b1:	lea    r8d,[rcx+0x41]
  40b4b5:	lea    rcx,[rip+0x1656c]        # 0x421a28
  40b4bc:	and    edx,0xffffffd7
  40b4bf:	add    edx,0x57
  40b4c2:	call   0x407ff0
  40b4c7:	mov    r9,QWORD PTR [rdi+0x8]
  40b4cb:	lea    rcx,[rip+0x1655d]        # 0x421a2f
  40b4d2:	mov    edx,ebp
  40b4d4:	mov    r8d,0x20
  40b4da:	call   0x407ff0
  40b4df:	mov    rdx,QWORD PTR [rdi+0x48]
  40b4e3:	test   rdx,rdx
  40b4e6:	je     0x40b4f4
  40b4e8:	lea    rcx,[rip+0x16548]        # 0x421a37
  40b4ef:	call   0x407ff0
  40b4f4:	lea    rcx,[rip+0x159af]        # 0x420eaa
  40b4fb:	call   0x407ff0
  40b500:	lea    rax,[rbx+rbx*2]
  40b504:	shl    rax,0x5
  40b508:	lea    rax,[r14+rax*1+0x10]
  40b50d:	movsxd rbx,DWORD PTR [rax+0x4]
  40b511:	lea    rdi,[rax+0x4]
  40b515:	cmp    ebx,0xffffffff
  40b518:	je     0x40b5e3
  40b51e:	xchg   ax,ax
  40b520:	lea    r15,[rbx+rbx*2]
  40b524:	shl    r15,0x5
  40b528:	add    r15,r14
  40b52b:	mov    eax,DWORD PTR [r15+0x10]
  40b52f:	mov    edx,eax
  40b531:	and    edx,0x4
  40b534:	cmp    edx,0x1
  40b537:	mov    edx,eax
  40b539:	sbb    r8d,r8d
  40b53c:	and    edx,0x2
  40b53f:	and    r8d,0xffffffd8
  40b543:	cmp    edx,0x1
  40b546:	sbb    ecx,ecx
  40b548:	and    eax,0x1
  40b54b:	lea    r9d,[r8+0x56]
  40b54f:	and    ecx,0xffffffed
  40b552:	cmp    eax,0x1
  40b555:	sbb    edx,edx
  40b557:	lea    r8d,[rcx+0x41]
  40b55b:	lea    rcx,[rip+0x164c6]        # 0x421a28
  40b562:	and    edx,0xffffffd7
  40b565:	add    edx,0x57
  40b568:	call   0x407ff0
  40b56d:	mov    r9,QWORD PTR [r15+0x8]
  40b571:	lea    rcx,[rip+0x164b7]        # 0x421a2f
  40b578:	mov    edx,r12d
  40b57b:	mov    r8d,0x20
  40b581:	call   0x407ff0
  40b586:	mov    rdx,QWORD PTR [r15+0x48]
  40b58a:	test   rdx,rdx
  40b58d:	je     0x40b59b
  40b58f:	lea    rcx,[rip+0x164a1]        # 0x421a37
  40b596:	call   0x407ff0
  40b59b:	lea    rcx,[rip+0x15908]        # 0x420eaa
  40b5a2:	call   0x407ff0
  40b5a7:	lea    rax,[rbx+rbx*2]
  40b5ab:	shl    rax,0x5
  40b5af:	lea    rax,[r14+rax*1+0x10]
  40b5b4:	mov    ecx,DWORD PTR [rax+0x4]
  40b5b7:	lea    rbx,[rax+0x4]
  40b5bb:	cmp    ecx,0xffffffff
  40b5be:	je     0x40b5d3
  40b5c0:	add    rbx,0x4
  40b5c4:	mov    edx,r13d
  40b5c7:	call   0x40af60
  40b5cc:	mov    ecx,DWORD PTR [rbx]
  40b5ce:	cmp    ecx,0xffffffff
  40b5d1:	jne    0x40b5c0
  40b5d3:	add    rdi,0x4
  40b5d7:	movsxd rbx,DWORD PTR [rdi]
  40b5da:	cmp    ebx,0xffffffff
  40b5dd:	jne    0x40b520
  40b5e3:	add    rsi,0x4
  40b5e7:	movsxd rbx,DWORD PTR [rsi]
  40b5ea:	cmp    ebx,0xffffffff
  40b5ed:	jne    0x40b47b
  40b5f3:	add    QWORD PTR [rsp+0x50],0x4
  40b5f9:	mov    rax,QWORD PTR [rsp+0x50]
  40b5fe:	movsxd rbx,DWORD PTR [rax]
  40b601:	cmp    ebx,0xffffffff
  40b604:	jne    0x40b3d6
  40b60a:	add    QWORD PTR [rsp+0x48],0x4
  40b610:	mov    rax,QWORD PTR [rsp+0x48]
  40b615:	movsxd rbx,DWORD PTR [rax]
  40b618:	cmp    ebx,0xffffffff
  40b61b:	jne    0x40b32c
  40b621:	add    QWORD PTR [rsp+0x40],0x4
  40b627:	mov    rax,QWORD PTR [rsp+0x40]
  40b62c:	movsxd rbx,DWORD PTR [rax]
  40b62f:	cmp    ebx,0xffffffff
  40b632:	jne    0x40b282
  40b638:	add    QWORD PTR [rsp+0x38],0x4
  40b63e:	mov    rax,QWORD PTR [rsp+0x38]
  40b643:	movsxd rbx,DWORD PTR [rax]
  40b646:	cmp    ebx,0xffffffff
  40b649:	jne    0x40b1d8
  40b64f:	add    QWORD PTR [rsp+0x30],0x4
  40b655:	mov    rax,QWORD PTR [rsp+0x30]
  40b65a:	movsxd rbx,DWORD PTR [rax]
  40b65d:	cmp    ebx,0xffffffff
  40b660:	jne    0x40b12e
  40b666:	add    QWORD PTR [rsp+0x28],0x4
  40b66c:	mov    rax,QWORD PTR [rsp+0x28]
  40b671:	movsxd rbx,DWORD PTR [rax]
  40b674:	cmp    ebx,0xffffffff
  40b677:	jne    0x40b084
  40b67d:	add    rsp,0x78
  40b681:	pop    rbx
  40b682:	pop    rsi
  40b683:	pop    rdi
  40b684:	pop    rbp
  40b685:	pop    r12
  40b687:	pop    r13
  40b689:	pop    r14
  40b68b:	pop    r15
  40b68d:	ret    
  40b68e:	xchg   ax,ax
  40b690:	push   rbx
  40b691:	sub    rsp,0x20
  40b695:	lea    rcx,[rip+0x163a4]        # 0x421a40
  40b69c:	call   0x407ff0
  40b6a1:	mov    eax,DWORD PTR [rip+0x12689]        # 0x41dd30
  40b6a7:	mov    edx,eax
  40b6a9:	and    edx,0x4
  40b6ac:	cmp    edx,0x1
  40b6af:	mov    edx,eax
  40b6b1:	sbb    r8d,r8d
  40b6b4:	and    edx,0x2
  40b6b7:	and    r8d,0xffffffd8
  40b6bb:	cmp    edx,0x1
  40b6be:	sbb    ecx,ecx
  40b6c0:	and    eax,0x1
  40b6c3:	lea    r9d,[r8+0x56]
  40b6c7:	and    ecx,0xffffffed
  40b6ca:	cmp    eax,0x1
  40b6cd:	sbb    edx,edx
  40b6cf:	lea    r8d,[rcx+0x41]
  40b6d3:	lea    rcx,[rip+0x1634e]        # 0x421a28
  40b6da:	and    edx,0xffffffd7
  40b6dd:	add    edx,0x57
  40b6e0:	call   0x407ff0
  40b6e5:	mov    r9,QWORD PTR [rip+0x1263c]        # 0x41dd28
  40b6ec:	lea    rcx,[rip+0x1633c]        # 0x421a2f
  40b6f3:	xor    edx,edx
  40b6f5:	mov    r8d,0x20
  40b6fb:	call   0x407ff0
  40b700:	mov    rdx,QWORD PTR [rip+0x12661]        # 0x41dd68
  40b707:	test   rdx,rdx
  40b70a:	je     0x40b718
  40b70c:	lea    rcx,[rip+0x16324]        # 0x421a37
  40b713:	call   0x407ff0
  40b718:	lea    rcx,[rip+0x1578b]        # 0x420eaa
  40b71f:	lea    rbx,[rip+0x1260e]        # 0x41dd34
  40b726:	call   0x407ff0
  40b72b:	mov    ecx,DWORD PTR [rip+0x12603]        # 0x41dd34
  40b731:	cmp    ecx,0xffffffff
  40b734:	je     0x40b755
  40b736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b740:	add    rbx,0x4
  40b744:	mov    edx,0x1
  40b749:	call   0x40af60
  40b74e:	mov    ecx,DWORD PTR [rbx]
  40b750:	cmp    ecx,0xffffffff
  40b753:	jne    0x40b740
  40b755:	xor    eax,eax
  40b757:	add    rsp,0x20
  40b75b:	pop    rbx
  40b75c:	ret    
  40b75d:	nop    DWORD PTR [rax]
  40b760:	push   rdi
  40b761:	push   rsi
  40b762:	push   rbx
  40b763:	sub    rsp,0x20
  40b767:	movsxd rax,DWORD PTR [rcx+0x2c]
  40b76b:	test   r8,r8
  40b76e:	mov    rbx,rcx
  40b771:	mov    rdi,rdx
  40b774:	mov    rsi,r8
  40b777:	jne    0x40b7b0
  40b779:	mov    rdx,QWORD PTR [rcx+rax*8+0x58]
  40b77e:	mov    rax,QWORD PTR [rcx+0x8]
  40b782:	test   BYTE PTR [rax+0x50],0x1
  40b786:	je     0x40b7a8
  40b788:	mov    ecx,DWORD PTR [rdx+0x58]
  40b78b:	test   ecx,ecx
  40b78d:	je     0x40b7e0
  40b78f:	lea    r8,[rip+0x1639d]        # 0x421b33
  40b796:	mov    rdx,rdi
  40b799:	mov    rcx,rbx
  40b79c:	call   QWORD PTR [rax+0x48]
  40b79f:	movsxd rax,DWORD PTR [rbx+0x2c]
  40b7a3:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40b7a8:	add    rsp,0x20
  40b7ac:	pop    rbx
  40b7ad:	pop    rsi
  40b7ae:	pop    rdi
  40b7af:	ret    
  40b7b0:	mov    rax,QWORD PTR [rcx+rax*8+0x58]
  40b7b5:	mov    edx,DWORD PTR [rax+0x58]
  40b7b8:	test   edx,edx
  40b7ba:	je     0x40b800
  40b7bc:	mov    rax,QWORD PTR [rbx+0x8]
  40b7c0:	mov    r8,rsi
  40b7c3:	mov    rdx,rdi
  40b7c6:	mov    rcx,rbx
  40b7c9:	call   QWORD PTR [rax+0x38]
  40b7cc:	movsxd rax,DWORD PTR [rbx+0x2c]
  40b7d0:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40b7d5:	add    rsp,0x20
  40b7d9:	pop    rbx
  40b7da:	pop    rsi
  40b7db:	pop    rdi
  40b7dc:	ret    
  40b7dd:	nop    DWORD PTR [rax]
  40b7e0:	mov    rcx,QWORD PTR [rdx+0x50]
  40b7e4:	xor    r9d,r9d
  40b7e7:	xor    r8d,r8d
  40b7ea:	mov    rdx,rdi
  40b7ed:	call   0x412438
  40b7f2:	test   rax,rax
  40b7f5:	je     0x40b7a8
  40b7f7:	mov    rax,QWORD PTR [rbx+0x8]
  40b7fb:	jmp    0x40b78f
  40b7fd:	nop    DWORD PTR [rax]
  40b800:	mov    rcx,QWORD PTR [rax+0x50]
  40b804:	xor    r9d,r9d
  40b807:	xor    r8d,r8d
  40b80a:	mov    rdx,rdi
  40b80d:	call   0x412438
  40b812:	test   rax,rax
  40b815:	jne    0x40b7bc
  40b817:	jmp    0x40b7a8
  40b819:	nop    DWORD PTR [rax+0x0]
  40b820:	push   rdi
  40b821:	push   rsi
  40b822:	push   rbx
  40b823:	sub    rsp,0x20
  40b827:	movabs rax,0x8000000000000000
  40b831:	cmp    r8,rax
  40b834:	mov    rbx,rcx
  40b837:	mov    rdi,rdx
  40b83a:	mov    rsi,r8
  40b83d:	movsxd rax,DWORD PTR [rcx+0x2c]
  40b841:	je     0x40b874
  40b843:	mov    rax,QWORD PTR [rcx+rax*8+0x58]
  40b848:	mov    edx,DWORD PTR [rax+0x58]
  40b84b:	test   edx,edx
  40b84d:	je     0x40b8d0
  40b853:	mov    rax,QWORD PTR [rbx+0x8]
  40b857:	mov    r8,rsi
  40b85a:	mov    rdx,rdi
  40b85d:	mov    rcx,rbx
  40b860:	call   QWORD PTR [rax+0x38]
  40b863:	movsxd rax,DWORD PTR [rbx+0x2c]
  40b867:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40b86c:	add    rsp,0x20
  40b870:	pop    rbx
  40b871:	pop    rsi
  40b872:	pop    rdi
  40b873:	ret    
  40b874:	mov    rdx,QWORD PTR [rcx+rax*8+0x58]
  40b879:	mov    rax,QWORD PTR [rcx+0x8]
  40b87d:	test   BYTE PTR [rax+0x50],0x1
  40b881:	je     0x40b8a3
  40b883:	mov    ecx,DWORD PTR [rdx+0x58]
  40b886:	test   ecx,ecx
  40b888:	je     0x40b8b0
  40b88a:	lea    r8,[rip+0x162a2]        # 0x421b33
  40b891:	mov    rdx,rdi
  40b894:	mov    rcx,rbx
  40b897:	call   QWORD PTR [rax+0x48]
  40b89a:	movsxd rax,DWORD PTR [rbx+0x2c]
  40b89e:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40b8a3:	add    rsp,0x20
  40b8a7:	pop    rbx
  40b8a8:	pop    rsi
  40b8a9:	pop    rdi
  40b8aa:	ret    
  40b8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8b0:	mov    rcx,QWORD PTR [rdx+0x50]
  40b8b4:	xor    r9d,r9d
  40b8b7:	xor    r8d,r8d
  40b8ba:	mov    rdx,rdi
  40b8bd:	call   0x412438
  40b8c2:	test   rax,rax
  40b8c5:	je     0x40b8a3
  40b8c7:	mov    rax,QWORD PTR [rbx+0x8]
  40b8cb:	jmp    0x40b88a
  40b8cd:	nop    DWORD PTR [rax]
  40b8d0:	mov    rcx,QWORD PTR [rax+0x50]
  40b8d4:	xor    r9d,r9d
  40b8d7:	xor    r8d,r8d
  40b8da:	mov    rdx,rdi
  40b8dd:	call   0x412438
  40b8e2:	test   rax,rax
  40b8e5:	jne    0x40b853
  40b8eb:	jmp    0x40b8a3
  40b8ed:	nop    DWORD PTR [rax]
  40b8f0:	push   r14
  40b8f2:	push   r13
  40b8f4:	push   r12
  40b8f6:	push   rbp
  40b8f7:	push   rdi
  40b8f8:	push   rsi
  40b8f9:	push   rbx
  40b8fa:	sub    rsp,0x420
  40b901:	movsxd rax,DWORD PTR [rcx+0x2c]
  40b905:	mov    rbx,QWORD PTR [rcx+0x18]
  40b909:	mov    rdi,rdx
  40b90c:	mov    r14,r8
  40b90f:	mov    edx,DWORD PTR [rcx+rax*4+0x30]
  40b913:	test   edx,edx
  40b915:	jne    0x40ba30
  40b91b:	mov    eax,DWORD PTR [rbx+0xc]
  40b91e:	test   eax,eax
  40b920:	jne    0x40b93a
  40b922:	mov    edx,DWORD PTR [rbx+0x8]
  40b925:	lea    rcx,[rip+0x155aa]        # 0x420ed6
  40b92c:	mov    r8d,0x20
  40b932:	shl    edx,0x2
  40b935:	call   0x407ff0
  40b93a:	lea    r12,[rsp+0x20]
  40b93f:	mov    r8d,0xffffffff
  40b945:	mov    edx,0x1
  40b94a:	lea    r13,[rip+0x16f15]        # 0x422866
  40b951:	mov    rcx,r12
  40b954:	call   0x412480
  40b959:	movzx  esi,BYTE PTR [rdi]
  40b95c:	test   sil,sil
  40b95f:	jne    0x40b99e
  40b961:	jmp    0x40b9e0
  40b963:	mov    r8d,0x1
  40b969:	mov    edx,0x5c
  40b96e:	mov    rcx,r12
  40b971:	call   0x412498
  40b976:	lea    rax,[rip+0x16ee1]        # 0x42285e
  40b97d:	sub    rbx,r13
  40b980:	mov    r8d,0x1
  40b986:	mov    rcx,r12
  40b989:	movsx  edx,BYTE PTR [rax+rbx*1]
  40b98d:	call   0x412498
  40b992:	add    rdi,0x1
  40b996:	movzx  esi,BYTE PTR [rdi]
  40b999:	test   sil,sil
  40b99c:	je     0x40b9e0
  40b99e:	movsx  ebp,sil
  40b9a2:	lea    rcx,[rip+0x16ebd]        # 0x422866
  40b9a9:	mov    edx,ebp
  40b9ab:	call   0x419860
  40b9b0:	test   rax,rax
  40b9b3:	mov    rbx,rax
  40b9b6:	jne    0x40b963
  40b9b8:	cmp    sil,0x1f
  40b9bc:	ja     0x40ba11
  40b9be:	lea    rdx,[rip+0x1617d]        # 0x421b42
  40b9c5:	add    rdi,0x1
  40b9c9:	movzx  r8d,bpl
  40b9cd:	mov    rcx,r12
  40b9d0:	call   0x412478
  40b9d5:	movzx  esi,BYTE PTR [rdi]
  40b9d8:	test   sil,sil
  40b9db:	jne    0x40b99e
  40b9dd:	nop    DWORD PTR [rax]
  40b9e0:	mov    rdx,QWORD PTR [rsp+0x20]
  40b9e5:	lea    rcx,[rip+0x1614b]        # 0x421b37
  40b9ec:	mov    r8,r14
  40b9ef:	call   0x407ff0
  40b9f4:	xor    edx,edx
  40b9f6:	mov    rcx,r12
  40b9f9:	call   0x412488
  40b9fe:	nop
  40b9ff:	add    rsp,0x420
  40ba06:	pop    rbx
  40ba07:	pop    rsi
  40ba08:	pop    rdi
  40ba09:	pop    rbp
  40ba0a:	pop    r12
  40ba0c:	pop    r13
  40ba0e:	pop    r14
  40ba10:	ret    
  40ba11:	mov    r8d,0x1
  40ba17:	mov    edx,ebp
  40ba19:	mov    rcx,r12
  40ba1c:	call   0x412498
  40ba21:	jmp    0x40b992
  40ba26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba30:	mov    rdx,QWORD PTR [rbx+0x10]
  40ba34:	lea    rcx,[rip+0x155ab]        # 0x420fe6
  40ba3b:	call   0x407ff0
  40ba40:	jmp    0x40b91b
  40ba45:	nop
  40ba46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba50:	push   r14
  40ba52:	push   r13
  40ba54:	push   r12
  40ba56:	push   rbp
  40ba57:	push   rdi
  40ba58:	push   rsi
  40ba59:	push   rbx
  40ba5a:	sub    rsp,0x420
  40ba61:	mov    r8d,0xffffffff
  40ba67:	lea    r14,[rip+0x16df8]        # 0x422866
  40ba6e:	lea    rsi,[rsp+0x20]
  40ba73:	mov    r12,rcx
  40ba76:	mov    rbp,rdx
  40ba79:	mov    edx,0x1
  40ba7e:	mov    rcx,rsi
  40ba81:	call   0x412480
  40ba86:	movzx  edi,BYTE PTR [r12]
  40ba8b:	test   dil,dil
  40ba8e:	jne    0x40bad2
  40ba90:	jmp    0x40bb20
  40ba95:	mov    r8d,0x1
  40ba9b:	mov    edx,0x5c
  40baa0:	mov    rcx,rsi
  40baa3:	call   0x412498
  40baa8:	lea    rax,[rip+0x16daf]        # 0x42285e
  40baaf:	sub    rbx,r14
  40bab2:	mov    r8d,0x1
  40bab8:	mov    rcx,rsi
  40babb:	movsx  edx,BYTE PTR [rax+rbx*1]
  40babf:	call   0x412498
  40bac4:	add    r12,0x1
  40bac8:	movzx  edi,BYTE PTR [r12]
  40bacd:	test   dil,dil
  40bad0:	je     0x40bb20
  40bad2:	movsx  r13d,dil
  40bad6:	lea    rcx,[rip+0x16d89]        # 0x422866
  40badd:	mov    edx,r13d
  40bae0:	call   0x419860
  40bae5:	test   rax,rax
  40bae8:	mov    rbx,rax
  40baeb:	jne    0x40ba95
  40baed:	cmp    dil,0x1f
  40baf1:	ja     0x40bc00
  40baf7:	lea    rdx,[rip+0x16044]        # 0x421b42
  40bafe:	add    r12,0x1
  40bb02:	movzx  r8d,r13b
  40bb06:	mov    rcx,rsi
  40bb09:	call   0x412478
  40bb0e:	movzx  edi,BYTE PTR [r12]
  40bb13:	test   dil,dil
  40bb16:	jne    0x40bad2
  40bb18:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb20:	mov    rdx,QWORD PTR [rsp+0x20]
  40bb25:	lea    rcx,[rip+0x1601f]        # 0x421b4b
  40bb2c:	lea    r13,[rip+0x16d33]        # 0x422866
  40bb33:	call   0x407ff0
  40bb38:	mov    rcx,rsi
  40bb3b:	call   0x412490
  40bb40:	movzx  edi,BYTE PTR [rbp+0x0]
  40bb44:	test   dil,dil
  40bb47:	jne    0x40bb8c
  40bb49:	jmp    0x40bbd0
  40bb4e:	xchg   ax,ax
  40bb50:	mov    r8d,0x1
  40bb56:	mov    edx,0x5c
  40bb5b:	mov    rcx,rsi
  40bb5e:	call   0x412498
  40bb63:	lea    rax,[rip+0x16cf4]        # 0x42285e
  40bb6a:	sub    rbx,r13
  40bb6d:	mov    r8d,0x1
  40bb73:	mov    rcx,rsi
  40bb76:	movsx  edx,BYTE PTR [rax+rbx*1]
  40bb7a:	call   0x412498
  40bb7f:	add    rbp,0x1
  40bb83:	movzx  edi,BYTE PTR [rbp+0x0]
  40bb87:	test   dil,dil
  40bb8a:	je     0x40bbd0
  40bb8c:	movsx  r12d,dil
  40bb90:	lea    rcx,[rip+0x16ccf]        # 0x422866
  40bb97:	mov    edx,r12d
  40bb9a:	call   0x419860
  40bb9f:	test   rax,rax
  40bba2:	mov    rbx,rax
  40bba5:	jne    0x40bb50
  40bba7:	cmp    dil,0x1f
  40bbab:	ja     0x40bc20
  40bbad:	lea    rdx,[rip+0x15f8e]        # 0x421b42
  40bbb4:	add    rbp,0x1
  40bbb8:	movzx  r8d,r12b
  40bbbc:	mov    rcx,rsi
  40bbbf:	call   0x412478
  40bbc4:	movzx  edi,BYTE PTR [rbp+0x0]
  40bbc8:	test   dil,dil
  40bbcb:	jne    0x40bb8c
  40bbcd:	nop    DWORD PTR [rax]
  40bbd0:	mov    rdx,QWORD PTR [rsp+0x20]
  40bbd5:	lea    rcx,[rip+0x15f75]        # 0x421b51
  40bbdc:	call   0x407ff0
  40bbe1:	xor    edx,edx
  40bbe3:	mov    rcx,rsi
  40bbe6:	call   0x412488
  40bbeb:	nop
  40bbec:	add    rsp,0x420
  40bbf3:	pop    rbx
  40bbf4:	pop    rsi
  40bbf5:	pop    rdi
  40bbf6:	pop    rbp
  40bbf7:	pop    r12
  40bbf9:	pop    r13
  40bbfb:	pop    r14
  40bbfd:	ret    
  40bbfe:	xchg   ax,ax
  40bc00:	mov    r8d,0x1
  40bc06:	mov    edx,r13d
  40bc09:	mov    rcx,rsi
  40bc0c:	call   0x412498
  40bc11:	jmp    0x40bac4
  40bc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc20:	mov    r8d,0x1
  40bc26:	mov    edx,r12d
  40bc29:	mov    rcx,rsi
  40bc2c:	call   0x412498
  40bc31:	jmp    0x40bb7f
  40bc36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc40:	push   rdi
  40bc41:	push   rsi
  40bc42:	push   rbx
  40bc43:	sub    rsp,0x20
  40bc47:	movsxd rax,DWORD PTR [rcx+0x2c]
  40bc4b:	mov    rbx,QWORD PTR [rcx+0x18]
  40bc4f:	mov    rsi,rdx
  40bc52:	mov    rdi,r8
  40bc55:	mov    edx,DWORD PTR [rcx+rax*4+0x30]
  40bc59:	test   edx,edx
  40bc5b:	jne    0x40bc90
  40bc5d:	mov    eax,DWORD PTR [rbx+0xc]
  40bc60:	test   eax,eax
  40bc62:	jne    0x40bc7c
  40bc64:	mov    edx,DWORD PTR [rbx+0x8]
  40bc67:	lea    rcx,[rip+0x15268]        # 0x420ed6
  40bc6e:	mov    r8d,0x20
  40bc74:	shl    edx,0x2
  40bc77:	call   0x407ff0
  40bc7c:	mov    rdx,rdi
  40bc7f:	mov    rcx,rsi
  40bc82:	add    rsp,0x20
  40bc86:	pop    rbx
  40bc87:	pop    rsi
  40bc88:	pop    rdi
  40bc89:	jmp    0x40ba50
  40bc8e:	xchg   ax,ax
  40bc90:	mov    rdx,QWORD PTR [rbx+0x10]
  40bc94:	lea    rcx,[rip+0x1534b]        # 0x420fe6
  40bc9b:	call   0x407ff0
  40bca0:	jmp    0x40bc5d
  40bca2:	nop    DWORD PTR [rax+0x0]
  40bca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bcb0:	push   r15
  40bcb2:	push   r14
  40bcb4:	push   r13
  40bcb6:	push   r12
  40bcb8:	push   rbp
  40bcb9:	push   rdi
  40bcba:	push   rsi
  40bcbb:	push   rbx
  40bcbc:	sub    rsp,0x438
  40bcc3:	movsxd rdx,DWORD PTR [rcx+0x2c]
  40bcc7:	mov    r12,QWORD PTR [rcx+0x18]
  40bccb:	mov    QWORD PTR [rsp+0x28],0x0
  40bcd4:	mov    rax,rdx
  40bcd7:	lea    rdx,[rcx+rdx*8]
  40bcdb:	test   eax,eax
  40bcdd:	mov    r13,QWORD PTR [rdx+0x58]
  40bce1:	je     0x40bcfd
  40bce3:	sub    eax,0x1
  40bce6:	mov    rdi,QWORD PTR [rdx+0x50]
  40bcea:	cdqe   
  40bcec:	mov    edx,DWORD PTR [rcx+rax*4+0x30]
  40bcf0:	mov    QWORD PTR [rsp+0x28],rdi
  40bcf5:	test   edx,edx
  40bcf7:	jne    0x40bea0
  40bcfd:	test   BYTE PTR [r13+0x10],0x1
  40bd02:	jne    0x40be70
  40bd08:	lea    rdi,[rsp+0x30]
  40bd0d:	mov    r8d,0xffffffff
  40bd13:	mov    edx,0x1
  40bd18:	lea    rbp,[rip+0x16b47]        # 0x422866
  40bd1f:	mov    rcx,rdi
  40bd22:	call   0x412480
  40bd27:	mov    rsi,QWORD PTR [r13+0x8]
  40bd2b:	movzx  r14d,BYTE PTR [rsi]
  40bd2f:	test   r14b,r14b
  40bd32:	jne    0x40bd7c
  40bd34:	jmp    0x40bdc1
  40bd39:	nop    DWORD PTR [rax+0x0]
  40bd40:	mov    r8d,0x1
  40bd46:	mov    edx,0x5c
  40bd4b:	mov    rcx,rdi
  40bd4e:	call   0x412498
  40bd53:	lea    rax,[rip+0x16b04]        # 0x42285e
  40bd5a:	sub    rbx,rbp
  40bd5d:	mov    r8d,0x1
  40bd63:	mov    rcx,rdi
  40bd66:	movsx  edx,BYTE PTR [rax+rbx*1]
  40bd6a:	call   0x412498
  40bd6f:	add    rsi,0x1
  40bd73:	movzx  r14d,BYTE PTR [rsi]
  40bd77:	test   r14b,r14b
  40bd7a:	je     0x40bdc1
  40bd7c:	movsx  r15d,r14b
  40bd80:	lea    rcx,[rip+0x16adf]        # 0x422866
  40bd87:	mov    edx,r15d
  40bd8a:	call   0x419860
  40bd8f:	test   rax,rax
  40bd92:	mov    rbx,rax
  40bd95:	jne    0x40bd40
  40bd97:	cmp    r14b,0x1f
  40bd9b:	ja     0x40be50
  40bda1:	lea    rdx,[rip+0x15d9a]        # 0x421b42
  40bda8:	add    rsi,0x1
  40bdac:	movzx  r8d,r15b
  40bdb0:	mov    rcx,rdi
  40bdb3:	call   0x412478
  40bdb8:	movzx  r14d,BYTE PTR [rsi]
  40bdbc:	test   r14b,r14b
  40bdbf:	jne    0x40bd7c
  40bdc1:	mov    eax,DWORD PTR [r12+0x8]
  40bdc6:	lea    rcx,[rip+0x15109]        # 0x420ed6
  40bdcd:	mov    r8d,0x20
  40bdd3:	lea    edx,[rax*4+0x0]
  40bdda:	call   0x407ff0
  40bddf:	add    DWORD PTR [r12+0x8],0x1
  40bde5:	test   BYTE PTR [r13+0x10],0x2
  40bdea:	jne    0x40be84
  40bdf0:	mov    rax,QWORD PTR [rsp+0x28]
  40bdf5:	test   rax,rax
  40bdf8:	je     0x40bef3
  40bdfe:	test   BYTE PTR [rax+0x10],0x2
  40be02:	je     0x40beb1
  40be08:	mov    rdx,QWORD PTR [r12+0x18]
  40be0d:	lea    rcx,[rip+0x15d68]        # 0x421b7c
  40be14:	call   0x407ff0
  40be19:	mov    rax,QWORD PTR [rsp+0x28]
  40be1e:	cmp    DWORD PTR [rax],0xf
  40be21:	je     0x40bed0
  40be27:	xor    edx,edx
  40be29:	mov    rcx,rdi
  40be2c:	call   0x412488
  40be31:	nop
  40be32:	add    rsp,0x438
  40be39:	pop    rbx
  40be3a:	pop    rsi
  40be3b:	pop    rdi
  40be3c:	pop    rbp
  40be3d:	pop    r12
  40be3f:	pop    r13
  40be41:	pop    r14
  40be43:	pop    r15
  40be45:	ret    
  40be46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be50:	mov    r8d,0x1
  40be56:	mov    edx,r15d
  40be59:	mov    rcx,rdi
  40be5c:	call   0x412498
  40be61:	jmp    0x40bd6f
  40be66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be70:	lea    rcx,[rip+0x15ce0]        # 0x421b57
  40be77:	call   0x407ff0
  40be7c:	add    DWORD PTR [r12+0x8],0x1
  40be82:	jmp    0x40be32
  40be84:	mov    rdx,QWORD PTR [rsp+0x30]
  40be89:	lea    rcx,[rip+0x15cca]        # 0x421b5a
  40be90:	call   0x407ff0
  40be95:	jmp    0x40be27
  40be97:	nop    WORD PTR [rax+rax*1+0x0]
  40bea0:	lea    rcx,[rip+0x14ffe]        # 0x420ea5
  40bea7:	call   0x407ff0
  40beac:	jmp    0x40bcfd
  40beb1:	mov    r8,QWORD PTR [r12+0x18]
  40beb6:	mov    rdx,QWORD PTR [rsp+0x30]
  40bebb:	lea    rcx,[rip+0x15ca1]        # 0x421b63
  40bec2:	call   0x407ff0
  40bec7:	jmp    0x40be27
  40becc:	nop    DWORD PTR [rax+0x0]
  40bed0:	mov    eax,DWORD PTR [r12+0xc]
  40bed5:	test   eax,eax
  40bed7:	je     0x40bf09
  40bed9:	mov    rdx,QWORD PTR [r13+0x8]
  40bedd:	mov    r8,QWORD PTR [r12+0x10]
  40bee2:	lea    rcx,[rip+0x15c84]        # 0x421b6d
  40bee9:	call   0x407ff0
  40beee:	jmp    0x40be27
  40bef3:	mov    rdx,QWORD PTR [r12+0x18]
  40bef8:	lea    rcx,[rip+0x15c7d]        # 0x421b7c
  40beff:	call   0x407ff0
  40bf04:	jmp    0x40be27
  40bf09:	mov    eax,DWORD PTR [r12+0x8]
  40bf0e:	lea    rcx,[rip+0x14fc1]        # 0x420ed6
  40bf15:	mov    r8d,0x20
  40bf1b:	lea    edx,[rax*4+0x0]
  40bf22:	call   0x407ff0
  40bf27:	jmp    0x40bed9
  40bf29:	nop    DWORD PTR [rax+0x0]
  40bf30:	push   rdi
  40bf31:	push   rsi
  40bf32:	push   rbx
  40bf33:	sub    rsp,0x430
  40bf3a:	mov    r8d,0x1
  40bf40:	lea    rsi,[rsp+0x30]
  40bf45:	mov    rbx,rcx
  40bf48:	mov    rdi,rdx
  40bf4b:	xor    edx,edx
  40bf4d:	mov    rcx,rsi
  40bf50:	call   0x412480
  40bf55:	mov    rax,rdi
  40bf58:	lea    rdx,[rip+0x15c21]        # 0x421b80
  40bf5f:	mov    rcx,rsi
  40bf62:	sar    rax,0x20
  40bf66:	mov    r9d,0x2f
  40bf6c:	mov    r8d,edi
  40bf6f:	mov    DWORD PTR [rsp+0x20],eax
  40bf73:	call   0x412478
  40bf78:	movsxd rax,DWORD PTR [rbx+0x2c]
  40bf7c:	mov    rsi,QWORD PTR [rsp+0x30]
  40bf81:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40bf86:	mov    edx,DWORD PTR [rax+0x58]
  40bf89:	test   edx,edx
  40bf8b:	je     0x40bfb5
  40bf8d:	mov    rax,QWORD PTR [rbx+0x8]
  40bf91:	mov    r8,rsi
  40bf94:	lea    rdx,[rip+0x15bec]        # 0x421b87
  40bf9b:	mov    rcx,rbx
  40bf9e:	call   QWORD PTR [rax+0x48]
  40bfa1:	movsxd rax,DWORD PTR [rbx+0x2c]
  40bfa5:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40bfaa:	add    rsp,0x430
  40bfb1:	pop    rbx
  40bfb2:	pop    rsi
  40bfb3:	pop    rdi
  40bfb4:	ret    
  40bfb5:	mov    rcx,QWORD PTR [rax+0x50]
  40bfb9:	lea    rdx,[rip+0x15bc7]        # 0x421b87
  40bfc0:	xor    r9d,r9d
  40bfc3:	xor    r8d,r8d
  40bfc6:	call   0x412438
  40bfcb:	test   rax,rax
  40bfce:	jne    0x40bf8d
  40bfd0:	jmp    0x40bfaa
  40bfd2:	nop    DWORD PTR [rax+0x0]
  40bfd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bfe0:	push   r15
  40bfe2:	push   r14
  40bfe4:	push   r13
  40bfe6:	push   r12
  40bfe8:	push   rbp
  40bfe9:	push   rdi
  40bfea:	push   rsi
  40bfeb:	push   rbx
  40bfec:	sub    rsp,0x98
  40bff3:	cmp    BYTE PTR [r8],0x0
  40bff7:	mov    QWORD PTR [rsp+0x80],r8
  40bfff:	je     0x40c47e
  40c005:	lea    rax,[rsp+0x80]
  40c00d:	lea    r15,[rip+0x1116c]        # 0x41d180
  40c014:	mov    QWORD PTR [rsp+0x68],rdx
  40c019:	mov    QWORD PTR [rsp+0x58],rax
  40c01e:	mov    rcx,QWORD PTR [rsp+0x58]
  40c023:	lea    rdx,[rip+0x15b67]        # 0x421b91
  40c02a:	mov    QWORD PTR [rsp+0x88],0x0
  40c036:	call   0x412348
  40c03b:	test   rax,rax
  40c03e:	mov    r12,rax
  40c041:	je     0x40c45c
  40c047:	mov    rax,QWORD PTR [rsp+0x80]
  40c04f:	lea    rdi,[rsp+0x88]
  40c057:	mov    DWORD PTR [rsp+0x60],0x1
  40c05f:	mov    QWORD PTR [rsp+0x50],rdi
  40c064:	cmp    BYTE PTR [rax],0x3d
  40c067:	je     0x40c3d2
  40c06d:	lea    r13,[rip+0x11154]        # 0x41d1c8
  40c074:	mov    rbx,QWORD PTR [rsp+0x88]
  40c07c:	xor    ebp,ebp
  40c07e:	mov    DWORD PTR [rsp+0x64],ebp
  40c082:	mov    rbp,r12
  40c085:	mov    r12,r13
  40c088:	mov    rsi,QWORD PTR [r12-0x40]
  40c08d:	mov    rcx,rbp
  40c090:	mov    rdx,rsi
  40c093:	call   0x419858
  40c098:	test   eax,eax
  40c09a:	je     0x40c3c2
  40c0a0:	mov    rsi,QWORD PTR [r12]
  40c0a4:	test   rsi,rsi
  40c0a7:	je     0x40c32a
  40c0ad:	mov    rdx,rsi
  40c0b0:	mov    rcx,rbp
  40c0b3:	call   0x419858
  40c0b8:	test   eax,eax
  40c0ba:	jne    0x40c32a
  40c0c0:	lea    r8,[rip+0x15b39]        # 0x421c00
  40c0c7:	xor    ecx,ecx
  40c0c9:	mov    QWORD PTR [rsp+0x20],rsi
  40c0ce:	mov    r9,rbp
  40c0d1:	mov    edx,0x30
  40c0d6:	call   0x412308
  40c0db:	movsxd rax,DWORD PTR [r12-0x48]
  40c0e0:	mov    edi,DWORD PTR [rsp+0x60]
  40c0e4:	add    DWORD PTR [rsp+0x64],0x1
  40c0e9:	lea    rax,[rax+rax*2]
  40c0ed:	shl    rax,0x5
  40c0f1:	test   edi,edi
  40c0f3:	mov    DWORD PTR [r15+rax*1+0x58],edi
  40c0f8:	lea    rdi,[rip+0x11081]        # 0x41d180
  40c0ff:	je     0x40c31a
  40c105:	lea    rax,[rdi+rax*1+0x10]
  40c10a:	lea    rdi,[rax+0x4]
  40c10e:	movsxd rax,DWORD PTR [rax+0x4]
  40c112:	mov    QWORD PTR [rsp+0x38],rdi
  40c117:	cmp    eax,0xffffffff
  40c11a:	je     0x40c32a
  40c120:	mov    QWORD PTR [rsp+0x70],rbp
  40c125:	mov    QWORD PTR [rsp+0x78],r12
  40c12a:	lea    rax,[rax+rax*2]
  40c12e:	shl    rax,0x5
  40c132:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c13b:	lea    rax,[r15+rax*1+0x10]
  40c140:	lea    rdi,[rax+0x4]
  40c144:	movsxd rax,DWORD PTR [rax+0x4]
  40c148:	mov    QWORD PTR [rsp+0x40],rdi
  40c14d:	cmp    eax,0xffffffff
  40c150:	je     0x40c2f7
  40c156:	lea    rax,[rax+rax*2]
  40c15a:	shl    rax,0x5
  40c15e:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c167:	lea    rax,[r15+rax*1+0x10]
  40c16c:	lea    rdi,[rax+0x4]
  40c170:	movsxd rax,DWORD PTR [rax+0x4]
  40c174:	mov    QWORD PTR [rsp+0x48],rdi
  40c179:	cmp    eax,0xffffffff
  40c17c:	je     0x40c2e0
  40c182:	lea    rax,[rax+rax*2]
  40c186:	shl    rax,0x5
  40c18a:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c193:	lea    rax,[r15+rax*1+0x10]
  40c198:	lea    rbp,[rax+0x4]
  40c19c:	movsxd rax,DWORD PTR [rax+0x4]
  40c1a0:	cmp    eax,0xffffffff
  40c1a3:	je     0x40c2c9
  40c1a9:	lea    rax,[rax+rax*2]
  40c1ad:	shl    rax,0x5
  40c1b1:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c1ba:	lea    rax,[r15+rax*1+0x10]
  40c1bf:	lea    r12,[rax+0x4]
  40c1c3:	movsxd rax,DWORD PTR [rax+0x4]
  40c1c7:	cmp    eax,0xffffffff
  40c1ca:	je     0x40c2b8
  40c1d0:	lea    rax,[rax+rax*2]
  40c1d4:	shl    rax,0x5
  40c1d8:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c1e1:	lea    rax,[r15+rax*1+0x10]
  40c1e6:	lea    r13,[rax+0x4]
  40c1ea:	movsxd rax,DWORD PTR [rax+0x4]
  40c1ee:	cmp    eax,0xffffffff
  40c1f1:	je     0x40c2a7
  40c1f7:	lea    rax,[rax+rax*2]
  40c1fb:	shl    rax,0x5
  40c1ff:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c208:	lea    rax,[r15+rax*1+0x10]
  40c20d:	lea    rdi,[rax+0x4]
  40c211:	movsxd rax,DWORD PTR [rax+0x4]
  40c215:	cmp    eax,0xffffffff
  40c218:	je     0x40c296
  40c21a:	nop    WORD PTR [rax+rax*1+0x0]
  40c220:	lea    rax,[rax+rax*2]
  40c224:	shl    rax,0x5
  40c228:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c231:	lea    rax,[r15+rax*1+0x10]
  40c236:	lea    rsi,[rax+0x4]
  40c23a:	movsxd rax,DWORD PTR [rax+0x4]
  40c23e:	cmp    eax,0xffffffff
  40c241:	je     0x40c28a
  40c243:	lea    rax,[rax+rax*2]
  40c247:	shl    rax,0x5
  40c24b:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c254:	lea    rax,[r15+rax*1+0x10]
  40c259:	mov    ecx,DWORD PTR [rax+0x4]
  40c25c:	lea    r14,[rax+0x4]
  40c260:	cmp    ecx,0xffffffff
  40c263:	je     0x40c27e
  40c265:	add    r14,0x4
  40c269:	mov    r8,rbx
  40c26c:	mov    edx,0x1
  40c271:	call   0x409a40
  40c276:	mov    ecx,DWORD PTR [r14]
  40c279:	cmp    ecx,0xffffffff
  40c27c:	jne    0x40c265
  40c27e:	add    rsi,0x4
  40c282:	movsxd rax,DWORD PTR [rsi]
  40c285:	cmp    eax,0xffffffff
  40c288:	jne    0x40c243
  40c28a:	add    rdi,0x4
  40c28e:	movsxd rax,DWORD PTR [rdi]
  40c291:	cmp    eax,0xffffffff
  40c294:	jne    0x40c220
  40c296:	add    r13,0x4
  40c29a:	movsxd rax,DWORD PTR [r13+0x0]
  40c29e:	cmp    eax,0xffffffff
  40c2a1:	jne    0x40c1f7
  40c2a7:	add    r12,0x4
  40c2ab:	movsxd rax,DWORD PTR [r12]
  40c2af:	cmp    eax,0xffffffff
  40c2b2:	jne    0x40c1d0
  40c2b8:	add    rbp,0x4
  40c2bc:	movsxd rax,DWORD PTR [rbp+0x0]
  40c2c0:	cmp    eax,0xffffffff
  40c2c3:	jne    0x40c1a9
  40c2c9:	add    QWORD PTR [rsp+0x48],0x4
  40c2cf:	mov    rax,QWORD PTR [rsp+0x48]
  40c2d4:	movsxd rax,DWORD PTR [rax]
  40c2d7:	cmp    eax,0xffffffff
  40c2da:	jne    0x40c182
  40c2e0:	add    QWORD PTR [rsp+0x40],0x4
  40c2e6:	mov    rax,QWORD PTR [rsp+0x40]
  40c2eb:	movsxd rax,DWORD PTR [rax]
  40c2ee:	cmp    eax,0xffffffff
  40c2f1:	jne    0x40c156
  40c2f7:	add    QWORD PTR [rsp+0x38],0x4
  40c2fd:	mov    rax,QWORD PTR [rsp+0x38]
  40c302:	movsxd rax,DWORD PTR [rax]
  40c305:	cmp    eax,0xffffffff
  40c308:	jne    0x40c12a
  40c30e:	mov    rbp,QWORD PTR [rsp+0x70]
  40c313:	mov    r12,QWORD PTR [rsp+0x78]
  40c318:	jmp    0x40c32a
  40c31a:	lea    rcx,[rdi+rax*1+0x50]
  40c31f:	xor    r8d,r8d
  40c322:	mov    rdx,rbx
  40c325:	call   0x412448
  40c32a:	lea    rax,[rip+0x11d37]        # 0x41e068
  40c331:	add    r12,0x60
  40c335:	cmp    r12,rax
  40c338:	jne    0x40c088
  40c33e:	mov    r12,rbp
  40c341:	mov    ebp,DWORD PTR [rsp+0x64]
  40c345:	test   ebp,ebp
  40c347:	je     0x40c381
  40c349:	mov    rcx,QWORD PTR [rsp+0x50]
  40c34e:	call   0x412440
  40c353:	mov    rcx,r12
  40c356:	call   0x4123c0
  40c35b:	mov    rax,QWORD PTR [rsp+0x80]
  40c363:	cmp    BYTE PTR [rax],0x0
  40c366:	je     0x40c374
  40c368:	add    rax,0x1
  40c36c:	mov    QWORD PTR [rsp+0x80],rax
  40c374:	cmp    BYTE PTR [rax],0x0
  40c377:	jne    0x40c01e
  40c37d:	mov    eax,ebp
  40c37f:	jmp    0x40c3ae
  40c381:	lea    r8,[rip+0x158a4]        # 0x421c2c
  40c388:	mov    r9,r12
  40c38b:	mov    edx,0x10
  40c390:	xor    ecx,ecx
  40c392:	call   0x412308
  40c397:	mov    rcx,QWORD PTR [rsp+0x50]
  40c39c:	call   0x412440
  40c3a1:	mov    rcx,r12
  40c3a4:	call   0x4123c0
  40c3a9:	mov    eax,0xffffffea
  40c3ae:	add    rsp,0x98
  40c3b5:	pop    rbx
  40c3b6:	pop    rsi
  40c3b7:	pop    rdi
  40c3b8:	pop    rbp
  40c3b9:	pop    r12
  40c3bb:	pop    r13
  40c3bd:	pop    r14
  40c3bf:	pop    r15
  40c3c1:	ret    
  40c3c2:	mov    rax,QWORD PTR [r12]
  40c3c6:	test   rax,rax
  40c3c9:	cmovne rsi,rax
  40c3cd:	jmp    0x40c0c0
  40c3d2:	add    rax,0x1
  40c3d6:	mov    QWORD PTR [rsp+0x80],rax
  40c3de:	movzx  eax,BYTE PTR [rax]
  40c3e1:	cmp    al,0x3a
  40c3e3:	je     0x40c485
  40c3e9:	test   al,al
  40c3eb:	je     0x40c485
  40c3f1:	mov    rcx,QWORD PTR [rsp+0x58]
  40c3f6:	lea    rdx,[rip+0x157c1]        # 0x421bbe
  40c3fd:	call   0x412348
  40c402:	test   rax,rax
  40c405:	mov    rbx,rax
  40c408:	je     0x40c485
  40c40a:	lea    r8,[rip+0x157b7]        # 0x421bc8
  40c411:	mov    r9,rax
  40c414:	xor    ecx,ecx
  40c416:	mov    edx,0x28
  40c41b:	mov    QWORD PTR [rsp+0x20],r12
  40c420:	call   0x412308
  40c425:	mov    rcx,QWORD PTR [rsp+0x50]
  40c42a:	lea    r8,[rip+0x14a92]        # 0x420ec3
  40c431:	mov    rdx,rbx
  40c434:	mov    r9d,0x4
  40c43a:	call   0x412428
  40c43f:	mov    rdx,QWORD PTR [rsp+0x80]
  40c447:	movzx  eax,BYTE PTR [rdx]
  40c44a:	cmp    al,0x2c
  40c44c:	jne    0x40c3e1
  40c44e:	lea    rax,[rdx+0x1]
  40c452:	mov    QWORD PTR [rsp+0x80],rax
  40c45a:	jmp    0x40c3de
  40c45c:	mov    r9,QWORD PTR [rsp+0x68]
  40c461:	lea    r8,[rip+0x15730]        # 0x421b98
  40c468:	mov    edx,0x10
  40c46d:	xor    ecx,ecx
  40c46f:	call   0x412308
  40c474:	mov    eax,0xffffffea
  40c479:	jmp    0x40c3ae
  40c47e:	xor    eax,eax
  40c480:	jmp    0x40c3ae
  40c485:	mov    DWORD PTR [rsp+0x60],0x0
  40c48d:	jmp    0x40c06d
  40c492:	nop    DWORD PTR [rax+0x0]
  40c496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4a0:	push   rbp
  40c4a1:	push   rdi
  40c4a2:	push   rsi
  40c4a3:	push   rbx
  40c4a4:	sub    rsp,0x38
  40c4a8:	mov    rbp,rcx
  40c4ab:	lea    rcx,[rip+0x15795]        # 0x421c47
  40c4b2:	mov    rdi,rdx
  40c4b5:	mov    rdx,r8
  40c4b8:	mov    rsi,r8
  40c4bb:	call   0x4124b0
  40c4c0:	test   rax,rax
  40c4c3:	mov    rbx,rax
  40c4c6:	je     0x40c510
  40c4c8:	lea    r8,[rip+0x15789]        # 0x421c58
  40c4cf:	mov    r9,rdi
  40c4d2:	mov    QWORD PTR [rsp+0x20],rsi
  40c4d7:	mov    edx,0x18
  40c4dc:	xor    ecx,ecx
  40c4de:	call   0x412308
  40c4e3:	mov    r8,rbx
  40c4e6:	mov    rdx,rdi
  40c4e9:	mov    rcx,rbp
  40c4ec:	call   0x40bfe0
  40c4f1:	mov    rcx,rbx
  40c4f4:	mov    esi,eax
  40c4f6:	call   0x4123c0
  40c4fb:	mov    eax,esi
  40c4fd:	add    rsp,0x38
  40c501:	pop    rbx
  40c502:	pop    rsi
  40c503:	pop    rdi
  40c504:	pop    rbp
  40c505:	ret    
  40c506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c510:	mov    eax,0xfffffff4
  40c515:	jmp    0x40c4fd
  40c517:	nop    WORD PTR [rax+rax*1+0x0]
  40c520:	push   rdi
  40c521:	push   rsi
  40c522:	push   rbx
  40c523:	sub    rsp,0xb0
  40c52a:	movabs rax,0x8000000000000000
  40c534:	cmp    r8,rax
  40c537:	mov    rbx,rcx
  40c53a:	mov    rsi,rdx
  40c53d:	je     0x40c5a0
  40c53f:	pxor   xmm1,xmm1
  40c543:	lea    rdi,[rsp+0x30]
  40c548:	lea    rax,[rip+0x18aff]        # 0x42504e
  40c54f:	pxor   xmm2,xmm2
  40c553:	lea    rdx,[rsp+0x20]
  40c558:	pxor   xmm0,xmm0
  40c55c:	mov    rcx,rdi
  40c55f:	cvtsi2sd xmm1,DWORD PTR [r9]
  40c564:	cvtsi2sd xmm2,DWORD PTR [r9+0x4]
  40c56a:	divsd  xmm1,xmm2
  40c56e:	mov    QWORD PTR [rsp+0x28],rax
  40c573:	cvtsi2sd xmm0,r8
  40c578:	mulsd  xmm0,xmm1
  40c57c:	movq   QWORD PTR [rsp+0x20],xmm0
  40c582:	call   0x409790
  40c587:	movsxd rax,DWORD PTR [rbx+0x2c]
  40c58b:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40c590:	mov    edx,DWORD PTR [rax+0x58]
  40c593:	test   edx,edx
  40c595:	je     0x40c600
  40c597:	mov    rax,QWORD PTR [rbx+0x8]
  40c59b:	mov    r8,rdi
  40c59e:	jmp    0x40c5c1
  40c5a0:	movsxd rax,DWORD PTR [rcx+0x2c]
  40c5a4:	mov    rdx,QWORD PTR [rcx+rax*8+0x58]
  40c5a9:	mov    rax,QWORD PTR [rcx+0x8]
  40c5ad:	test   BYTE PTR [rax+0x50],0x1
  40c5b1:	je     0x40c5d3
  40c5b3:	mov    ecx,DWORD PTR [rdx+0x58]
  40c5b6:	test   ecx,ecx
  40c5b8:	je     0x40c5e0
  40c5ba:	lea    r8,[rip+0x15572]        # 0x421b33
  40c5c1:	mov    rdx,rsi
  40c5c4:	mov    rcx,rbx
  40c5c7:	call   QWORD PTR [rax+0x48]
  40c5ca:	movsxd rax,DWORD PTR [rbx+0x2c]
  40c5ce:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40c5d3:	add    rsp,0xb0
  40c5da:	pop    rbx
  40c5db:	pop    rsi
  40c5dc:	pop    rdi
  40c5dd:	ret    
  40c5de:	xchg   ax,ax
  40c5e0:	mov    rcx,QWORD PTR [rdx+0x50]
  40c5e4:	xor    r9d,r9d
  40c5e7:	xor    r8d,r8d
  40c5ea:	mov    rdx,rsi
  40c5ed:	call   0x412438
  40c5f2:	test   rax,rax
  40c5f5:	je     0x40c5d3
  40c5f7:	mov    rax,QWORD PTR [rbx+0x8]
  40c5fb:	jmp    0x40c5ba
  40c5fd:	nop    DWORD PTR [rax]
  40c600:	mov    rcx,QWORD PTR [rax+0x50]
  40c604:	xor    r9d,r9d
  40c607:	xor    r8d,r8d
  40c60a:	mov    rdx,rsi
  40c60d:	call   0x412438
  40c612:	test   rax,rax
  40c615:	jne    0x40c597
  40c617:	jmp    0x40c5d3
  40c619:	nop    DWORD PTR [rax+0x0]
  40c620:	push   rdi
  40c621:	push   rsi
  40c622:	push   rbx
  40c623:	sub    rsp,0xb0
  40c62a:	mov    eax,DWORD PTR [rsp+0xf0]
  40c631:	mov    rbx,rcx
  40c634:	mov    rsi,rdx
  40c637:	test   eax,eax
  40c639:	jne    0x40c64a
  40c63b:	movabs rdx,0x8000000000000000
  40c645:	cmp    r8,rdx
  40c648:	je     0x40c653
  40c64a:	test   eax,eax
  40c64c:	je     0x40c695
  40c64e:	test   r8,r8
  40c651:	jne    0x40c695
  40c653:	movsxd rax,DWORD PTR [rbx+0x2c]
  40c657:	mov    rdx,QWORD PTR [rbx+rax*8+0x58]
  40c65c:	mov    rax,QWORD PTR [rbx+0x8]
  40c660:	test   BYTE PTR [rax+0x50],0x1
  40c664:	je     0x40c68a
  40c666:	mov    ecx,DWORD PTR [rdx+0x58]
  40c669:	test   ecx,ecx
  40c66b:	je     0x40c700
  40c671:	lea    r8,[rip+0x154bb]        # 0x421b33
  40c678:	mov    rdx,rsi
  40c67b:	mov    rcx,rbx
  40c67e:	call   QWORD PTR [rax+0x48]
  40c681:	movsxd rax,DWORD PTR [rbx+0x2c]
  40c685:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40c68a:	add    rsp,0xb0
  40c691:	pop    rbx
  40c692:	pop    rsi
  40c693:	pop    rdi
  40c694:	ret    
  40c695:	pxor   xmm1,xmm1
  40c699:	lea    rdi,[rsp+0x30]
  40c69e:	pxor   xmm2,xmm2
  40c6a2:	lea    rax,[rip+0x189a5]        # 0x42504e
  40c6a9:	pxor   xmm0,xmm0
  40c6ad:	lea    rdx,[rsp+0x20]
  40c6b2:	cvtsi2sd xmm1,DWORD PTR [r9]
  40c6b7:	mov    rcx,rdi
  40c6ba:	cvtsi2sd xmm2,DWORD PTR [r9+0x4]
  40c6c0:	divsd  xmm1,xmm2
  40c6c4:	mov    QWORD PTR [rsp+0x28],rax
  40c6c9:	cvtsi2sd xmm0,r8
  40c6ce:	mulsd  xmm0,xmm1
  40c6d2:	movq   QWORD PTR [rsp+0x20],xmm0
  40c6d8:	call   0x409790
  40c6dd:	movsxd rax,DWORD PTR [rbx+0x2c]
  40c6e1:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40c6e6:	mov    edx,DWORD PTR [rax+0x58]
  40c6e9:	test   edx,edx
  40c6eb:	je     0x40c724
  40c6ed:	mov    rax,QWORD PTR [rbx+0x8]
  40c6f1:	mov    r8,rdi
  40c6f4:	jmp    0x40c678
  40c6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c700:	mov    rcx,QWORD PTR [rdx+0x50]
  40c704:	xor    r9d,r9d
  40c707:	xor    r8d,r8d
  40c70a:	mov    rdx,rsi
  40c70d:	call   0x412438
  40c712:	test   rax,rax
  40c715:	je     0x40c68a
  40c71b:	mov    rax,QWORD PTR [rbx+0x8]
  40c71f:	jmp    0x40c671
  40c724:	mov    rcx,QWORD PTR [rax+0x50]
  40c728:	xor    r9d,r9d
  40c72b:	xor    r8d,r8d
  40c72e:	mov    rdx,rsi
  40c731:	call   0x412438
  40c736:	test   rax,rax
  40c739:	jne    0x40c6ed
  40c73b:	jmp    0x40c68a
  40c740:	push   r13
  40c742:	push   r12
  40c744:	push   rbp
  40c745:	push   rdi
  40c746:	push   rsi
  40c747:	push   rbx
  40c748:	sub    rsp,0x428
  40c74f:	movsxd rax,DWORD PTR [rcx+0x2c]
  40c753:	mov    r13,QWORD PTR [rcx+0x18]
  40c757:	lea    rdi,[rsp+0x20]
  40c75c:	mov    rsi,rcx
  40c75f:	mov    rbp,rdx
  40c762:	mov    rbx,r8
  40c765:	mov    edx,0x1
  40c76a:	mov    r8d,0xffffffff
  40c770:	mov    r12,QWORD PTR [rcx+rax*8+0x58]
  40c775:	mov    rcx,rdi
  40c778:	call   0x412480
  40c77d:	test   BYTE PTR [r12+0x10],0x4
  40c783:	jne    0x40c8e1
  40c789:	movsxd rax,DWORD PTR [rsi+0x2c]
  40c78d:	mov    eax,DWORD PTR [rsi+rax*4+0x30]
  40c791:	test   eax,eax
  40c793:	jne    0x40c8d0
  40c799:	movzx  r8d,BYTE PTR [rbx]
  40c79d:	lea    rsi,[rip+0x15538]        # 0x421cdc
  40c7a4:	test   r8b,r8b
  40c7a7:	je     0x40c7fd
  40c7a9:	nop    DWORD PTR [rax+0x0]
  40c7b0:	lea    eax,[r8-0x22]
  40c7b4:	cmp    al,0x1c
  40c7b6:	ja     0x40c8b0
  40c7bc:	movzx  eax,al
  40c7bf:	movsxd rax,DWORD PTR [rsi+rax*4]
  40c7c3:	add    rax,rsi
  40c7c6:	jmp    rax
  40c7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c7d0:	lea    r8,[rip+0x154db]        # 0x421cb2
  40c7d7:	lea    rdx,[rip+0x14808]        # 0x420fe6
  40c7de:	mov    rcx,rdi
  40c7e1:	call   0x412478
  40c7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7f0:	add    rbx,0x1
  40c7f4:	movzx  r8d,BYTE PTR [rbx]
  40c7f8:	test   r8b,r8b
  40c7fb:	jne    0x40c7b0
  40c7fd:	mov    r8,QWORD PTR [rsp+0x20]
  40c802:	lea    rcx,[rip+0x154cb]        # 0x421cd4
  40c809:	mov    rdx,rbp
  40c80c:	call   0x407ff0
  40c811:	xor    edx,edx
  40c813:	mov    rcx,rdi
  40c816:	call   0x412488
  40c81b:	nop
  40c81c:	add    rsp,0x428
  40c823:	pop    rbx
  40c824:	pop    rsi
  40c825:	pop    rdi
  40c826:	pop    rbp
  40c827:	pop    r12
  40c829:	pop    r13
  40c82b:	ret    
  40c82c:	nop    DWORD PTR [rax+0x0]
  40c830:	lea    r8,[rip+0x15476]        # 0x421cad
  40c837:	lea    rdx,[rip+0x147a8]        # 0x420fe6
  40c83e:	mov    rcx,rdi
  40c841:	call   0x412478
  40c846:	jmp    0x40c7f0
  40c848:	nop    DWORD PTR [rax+rax*1+0x0]
  40c850:	lea    r8,[rip+0x15467]        # 0x421cbe
  40c857:	lea    rdx,[rip+0x14788]        # 0x420fe6
  40c85e:	mov    rcx,rdi
  40c861:	call   0x412478
  40c866:	jmp    0x40c7f0
  40c868:	nop    DWORD PTR [rax+rax*1+0x0]
  40c870:	lea    r8,[rip+0x15430]        # 0x421ca7
  40c877:	lea    rdx,[rip+0x14768]        # 0x420fe6
  40c87e:	mov    rcx,rdi
  40c881:	call   0x412478
  40c886:	jmp    0x40c7f0
  40c88b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c890:	lea    r8,[rip+0x15420]        # 0x421cb7
  40c897:	lea    rdx,[rip+0x14748]        # 0x420fe6
  40c89e:	mov    rcx,rdi
  40c8a1:	call   0x412478
  40c8a6:	jmp    0x40c7f0
  40c8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40c8b0:	movsx  edx,r8b
  40c8b4:	mov    rcx,rdi
  40c8b7:	mov    r8d,0x1
  40c8bd:	call   0x412498
  40c8c2:	jmp    0x40c7f0
  40c8c7:	nop    WORD PTR [rax+rax*1+0x0]
  40c8d0:	lea    rcx,[rip+0x145d1]        # 0x420ea8
  40c8d7:	call   0x407ff0
  40c8dc:	jmp    0x40c799
  40c8e1:	mov    edx,DWORD PTR [r13+0xc]
  40c8e5:	lea    rcx,[rip+0x145ea]        # 0x420ed6
  40c8ec:	mov    r8d,0x20
  40c8f2:	lea    rsi,[rip+0x15457]        # 0x421d50
  40c8f9:	shl    edx,0x2
  40c8fc:	call   0x407ff0
  40c901:	movsx  edx,BYTE PTR [rbp+0x0]
  40c905:	test   dl,dl
  40c907:	je     0x40c95c
  40c909:	nop    DWORD PTR [rax+0x0]
  40c910:	lea    eax,[rdx-0x22]
  40c913:	cmp    al,0x1c
  40c915:	ja     0x40cb03
  40c91b:	movzx  eax,al
  40c91e:	movsxd rax,DWORD PTR [rsi+rax*4]
  40c922:	add    rax,rsi
  40c925:	jmp    rax
  40c927:	nop    WORD PTR [rax+rax*1+0x0]
  40c930:	lea    r8,[rip+0x1537b]        # 0x421cb2
  40c937:	lea    rdx,[rip+0x146a8]        # 0x420fe6
  40c93e:	mov    rcx,rdi
  40c941:	call   0x412478
  40c946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c950:	add    rbp,0x1
  40c954:	movsx  edx,BYTE PTR [rbp+0x0]
  40c958:	test   dl,dl
  40c95a:	jne    0x40c910
  40c95c:	mov    rdx,QWORD PTR [r12+0x40]
  40c961:	mov    r8,QWORD PTR [rsp+0x20]
  40c966:	lea    rcx,[rip+0x1532d]        # 0x421c9a
  40c96d:	lea    rsi,[rip+0x15450]        # 0x421dc4
  40c974:	call   0x407ff0
  40c979:	mov    rcx,rdi
  40c97c:	call   0x412490
  40c981:	movsx  edx,BYTE PTR [rbx]
  40c984:	test   dl,dl
  40c986:	je     0x40ca5f
  40c98c:	nop    DWORD PTR [rax+0x0]
  40c990:	lea    eax,[rdx-0x22]
  40c993:	cmp    al,0x1c
  40c995:	ja     0x40caf0
  40c99b:	movzx  eax,al
  40c99e:	movsxd rax,DWORD PTR [rsi+rax*4]
  40c9a2:	add    rax,rsi
  40c9a5:	jmp    rax
  40c9a7:	nop    WORD PTR [rax+rax*1+0x0]
  40c9b0:	lea    r8,[rip+0x152f6]        # 0x421cad
  40c9b7:	lea    rdx,[rip+0x14628]        # 0x420fe6
  40c9be:	mov    rcx,rdi
  40c9c1:	call   0x412478
  40c9c6:	jmp    0x40c950
  40c9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c9d0:	lea    r8,[rip+0x152e7]        # 0x421cbe
  40c9d7:	lea    rdx,[rip+0x14608]        # 0x420fe6
  40c9de:	mov    rcx,rdi
  40c9e1:	call   0x412478
  40c9e6:	jmp    0x40c950
  40c9eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c9f0:	lea    r8,[rip+0x152b0]        # 0x421ca7
  40c9f7:	lea    rdx,[rip+0x145e8]        # 0x420fe6
  40c9fe:	mov    rcx,rdi
  40ca01:	call   0x412478
  40ca06:	jmp    0x40c950
  40ca0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca10:	lea    r8,[rip+0x152a0]        # 0x421cb7
  40ca17:	lea    rdx,[rip+0x145c8]        # 0x420fe6
  40ca1e:	mov    rcx,rdi
  40ca21:	call   0x412478
  40ca26:	jmp    0x40c950
  40ca2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca30:	lea    r8,[rip+0x1527b]        # 0x421cb2
  40ca37:	lea    rdx,[rip+0x145a8]        # 0x420fe6
  40ca3e:	mov    rcx,rdi
  40ca41:	call   0x412478
  40ca46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca50:	add    rbx,0x1
  40ca54:	movsx  edx,BYTE PTR [rbx]
  40ca57:	test   dl,dl
  40ca59:	jne    0x40c990
  40ca5f:	mov    rdx,QWORD PTR [rsp+0x20]
  40ca64:	lea    rcx,[rip+0x1525a]        # 0x421cc5
  40ca6b:	call   0x407ff0
  40ca70:	jmp    0x40c811
  40ca75:	lea    r8,[rip+0x15231]        # 0x421cad
  40ca7c:	lea    rdx,[rip+0x14563]        # 0x420fe6
  40ca83:	mov    rcx,rdi
  40ca86:	call   0x412478
  40ca8b:	jmp    0x40ca50
  40ca8d:	nop    DWORD PTR [rax]
  40ca90:	lea    r8,[rip+0x15227]        # 0x421cbe
  40ca97:	lea    rdx,[rip+0x14548]        # 0x420fe6
  40ca9e:	mov    rcx,rdi
  40caa1:	call   0x412478
  40caa6:	jmp    0x40ca50
  40caa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cab0:	lea    r8,[rip+0x151f0]        # 0x421ca7
  40cab7:	lea    rdx,[rip+0x14528]        # 0x420fe6
  40cabe:	mov    rcx,rdi
  40cac1:	call   0x412478
  40cac6:	jmp    0x40ca50
  40cac8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cad0:	lea    r8,[rip+0x151e0]        # 0x421cb7
  40cad7:	lea    rdx,[rip+0x14508]        # 0x420fe6
  40cade:	mov    rcx,rdi
  40cae1:	call   0x412478
  40cae6:	jmp    0x40ca50
  40caeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40caf0:	mov    r8d,0x1
  40caf6:	mov    rcx,rdi
  40caf9:	call   0x412498
  40cafe:	jmp    0x40ca50
  40cb03:	mov    r8d,0x1
  40cb09:	mov    rcx,rdi
  40cb0c:	call   0x412498
  40cb11:	jmp    0x40c950
  40cb16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb20:	push   r15
  40cb22:	push   r14
  40cb24:	push   r13
  40cb26:	push   r12
  40cb28:	push   rbp
  40cb29:	push   rdi
  40cb2a:	push   rsi
  40cb2b:	push   rbx
  40cb2c:	sub    rsp,0x38
  40cb30:	movsxd rax,DWORD PTR [rip+0x1113d]        # 0x41dc74
  40cb37:	lea    rdi,[rip+0x11136]        # 0x41dc74
  40cb3e:	mov    DWORD PTR [rip+0x11170],0x1        # 0x41dcb8
  40cb48:	lea    rbx,[rip+0x10631]        # 0x41d180
  40cb4f:	mov    QWORD PTR [rsp+0x20],rdi
  40cb54:	cmp    eax,0xffffffff
  40cb57:	je     0x40cd1e
  40cb5d:	lea    rax,[rax+rax*2]
  40cb61:	shl    rax,0x5
  40cb65:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cb6d:	lea    rax,[rbx+rax*1+0x10]
  40cb72:	lea    rdi,[rax+0x4]
  40cb76:	movsxd rax,DWORD PTR [rax+0x4]
  40cb7a:	mov    QWORD PTR [rsp+0x28],rdi
  40cb7f:	cmp    eax,0xffffffff
  40cb82:	je     0x40cd07
  40cb88:	lea    rax,[rax+rax*2]
  40cb8c:	shl    rax,0x5
  40cb90:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cb98:	lea    rax,[rbx+rax*1+0x10]
  40cb9d:	lea    r12,[rax+0x4]
  40cba1:	movsxd rax,DWORD PTR [rax+0x4]
  40cba5:	cmp    eax,0xffffffff
  40cba8:	je     0x40ccf0
  40cbae:	lea    rax,[rax+rax*2]
  40cbb2:	shl    rax,0x5
  40cbb6:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cbbe:	lea    rax,[rbx+rax*1+0x10]
  40cbc3:	lea    r13,[rax+0x4]
  40cbc7:	movsxd rax,DWORD PTR [rax+0x4]
  40cbcb:	cmp    eax,0xffffffff
  40cbce:	je     0x40ccdf
  40cbd4:	lea    rax,[rax+rax*2]
  40cbd8:	shl    rax,0x5
  40cbdc:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cbe4:	lea    rax,[rbx+rax*1+0x10]
  40cbe9:	lea    r14,[rax+0x4]
  40cbed:	movsxd rax,DWORD PTR [rax+0x4]
  40cbf1:	cmp    eax,0xffffffff
  40cbf4:	je     0x40ccce
  40cbfa:	lea    rax,[rax+rax*2]
  40cbfe:	shl    rax,0x5
  40cc02:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cc0a:	lea    rax,[rbx+rax*1+0x10]
  40cc0f:	lea    r15,[rax+0x4]
  40cc13:	movsxd rax,DWORD PTR [rax+0x4]
  40cc17:	cmp    eax,0xffffffff
  40cc1a:	je     0x40ccbe
  40cc20:	lea    rax,[rax+rax*2]
  40cc24:	shl    rax,0x5
  40cc28:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cc30:	lea    rax,[rbx+rax*1+0x10]
  40cc35:	lea    rdi,[rax+0x4]
  40cc39:	movsxd rax,DWORD PTR [rax+0x4]
  40cc3d:	cmp    eax,0xffffffff
  40cc40:	je     0x40ccae
  40cc42:	lea    rax,[rax+rax*2]
  40cc46:	shl    rax,0x5
  40cc4a:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cc52:	lea    rax,[rbx+rax*1+0x10]
  40cc57:	lea    rsi,[rax+0x4]
  40cc5b:	movsxd rax,DWORD PTR [rax+0x4]
  40cc5f:	cmp    eax,0xffffffff
  40cc62:	je     0x40cca2
  40cc64:	lea    rax,[rax+rax*2]
  40cc68:	shl    rax,0x5
  40cc6c:	lea    rdx,[rbx+rax*1+0x10]
  40cc71:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cc79:	mov    ecx,DWORD PTR [rdx+0x4]
  40cc7c:	lea    rbp,[rdx+0x4]
  40cc80:	cmp    ecx,0xffffffff
  40cc83:	je     0x40cc96
  40cc85:	add    rbp,0x4
  40cc89:	call   0x40a2a0
  40cc8e:	mov    ecx,DWORD PTR [rbp+0x0]
  40cc91:	cmp    ecx,0xffffffff
  40cc94:	jne    0x40cc85
  40cc96:	add    rsi,0x4
  40cc9a:	movsxd rax,DWORD PTR [rsi]
  40cc9d:	cmp    eax,0xffffffff
  40cca0:	jne    0x40cc64
  40cca2:	add    rdi,0x4
  40cca6:	movsxd rax,DWORD PTR [rdi]
  40cca9:	cmp    eax,0xffffffff
  40ccac:	jne    0x40cc42
  40ccae:	add    r15,0x4
  40ccb2:	movsxd rax,DWORD PTR [r15]
  40ccb5:	cmp    eax,0xffffffff
  40ccb8:	jne    0x40cc20
  40ccbe:	add    r14,0x4
  40ccc2:	movsxd rax,DWORD PTR [r14]
  40ccc5:	cmp    eax,0xffffffff
  40ccc8:	jne    0x40cbfa
  40ccce:	add    r13,0x4
  40ccd2:	movsxd rax,DWORD PTR [r13+0x0]
  40ccd6:	cmp    eax,0xffffffff
  40ccd9:	jne    0x40cbd4
  40ccdf:	add    r12,0x4
  40cce3:	movsxd rax,DWORD PTR [r12]
  40cce7:	cmp    eax,0xffffffff
  40ccea:	jne    0x40cbae
  40ccf0:	add    QWORD PTR [rsp+0x28],0x4
  40ccf6:	mov    rax,QWORD PTR [rsp+0x28]
  40ccfb:	movsxd rax,DWORD PTR [rax]
  40ccfe:	cmp    eax,0xffffffff
  40cd01:	jne    0x40cb88
  40cd07:	add    QWORD PTR [rsp+0x20],0x4
  40cd0d:	mov    rax,QWORD PTR [rsp+0x20]
  40cd12:	movsxd rax,DWORD PTR [rax]
  40cd15:	cmp    eax,0xffffffff
  40cd18:	jne    0x40cb5d
  40cd1e:	movsxd rax,DWORD PTR [rip+0x1088f]        # 0x41d5b4
  40cd25:	lea    rdi,[rip+0x10888]        # 0x41d5b4
  40cd2c:	mov    DWORD PTR [rip+0x108c2],0x1        # 0x41d5f8
  40cd36:	lea    rbx,[rip+0x10443]        # 0x41d180
  40cd3d:	mov    QWORD PTR [rsp+0x20],rdi
  40cd42:	cmp    eax,0xffffffff
  40cd45:	je     0x40cf0c
  40cd4b:	lea    rax,[rax+rax*2]
  40cd4f:	shl    rax,0x5
  40cd53:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cd5b:	lea    rax,[rbx+rax*1+0x10]
  40cd60:	lea    rdi,[rax+0x4]
  40cd64:	movsxd rax,DWORD PTR [rax+0x4]
  40cd68:	mov    QWORD PTR [rsp+0x28],rdi
  40cd6d:	cmp    eax,0xffffffff
  40cd70:	je     0x40cef5
  40cd76:	lea    rax,[rax+rax*2]
  40cd7a:	shl    rax,0x5
  40cd7e:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cd86:	lea    rax,[rbx+rax*1+0x10]
  40cd8b:	lea    r12,[rax+0x4]
  40cd8f:	movsxd rax,DWORD PTR [rax+0x4]
  40cd93:	cmp    eax,0xffffffff
  40cd96:	je     0x40cede
  40cd9c:	lea    rax,[rax+rax*2]
  40cda0:	shl    rax,0x5
  40cda4:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cdac:	lea    rax,[rbx+rax*1+0x10]
  40cdb1:	lea    r13,[rax+0x4]
  40cdb5:	movsxd rax,DWORD PTR [rax+0x4]
  40cdb9:	cmp    eax,0xffffffff
  40cdbc:	je     0x40cecd
  40cdc2:	lea    rax,[rax+rax*2]
  40cdc6:	shl    rax,0x5
  40cdca:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cdd2:	lea    rax,[rbx+rax*1+0x10]
  40cdd7:	lea    r14,[rax+0x4]
  40cddb:	movsxd rax,DWORD PTR [rax+0x4]
  40cddf:	cmp    eax,0xffffffff
  40cde2:	je     0x40cebc
  40cde8:	lea    rax,[rax+rax*2]
  40cdec:	shl    rax,0x5
  40cdf0:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cdf8:	lea    rax,[rbx+rax*1+0x10]
  40cdfd:	lea    r15,[rax+0x4]
  40ce01:	movsxd rax,DWORD PTR [rax+0x4]
  40ce05:	cmp    eax,0xffffffff
  40ce08:	je     0x40ceac
  40ce0e:	lea    rax,[rax+rax*2]
  40ce12:	shl    rax,0x5
  40ce16:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40ce1e:	lea    rax,[rbx+rax*1+0x10]
  40ce23:	lea    rdi,[rax+0x4]
  40ce27:	movsxd rax,DWORD PTR [rax+0x4]
  40ce2b:	cmp    eax,0xffffffff
  40ce2e:	je     0x40ce9c
  40ce30:	lea    rax,[rax+rax*2]
  40ce34:	shl    rax,0x5
  40ce38:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40ce40:	lea    rax,[rbx+rax*1+0x10]
  40ce45:	lea    rsi,[rax+0x4]
  40ce49:	movsxd rax,DWORD PTR [rax+0x4]
  40ce4d:	cmp    eax,0xffffffff
  40ce50:	je     0x40ce90
  40ce52:	lea    rax,[rax+rax*2]
  40ce56:	shl    rax,0x5
  40ce5a:	lea    rdx,[rbx+rax*1+0x10]
  40ce5f:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40ce67:	mov    ecx,DWORD PTR [rdx+0x4]
  40ce6a:	lea    rbp,[rdx+0x4]
  40ce6e:	cmp    ecx,0xffffffff
  40ce71:	je     0x40ce84
  40ce73:	add    rbp,0x4
  40ce77:	call   0x40a2a0
  40ce7c:	mov    ecx,DWORD PTR [rbp+0x0]
  40ce7f:	cmp    ecx,0xffffffff
  40ce82:	jne    0x40ce73
  40ce84:	add    rsi,0x4
  40ce88:	movsxd rax,DWORD PTR [rsi]
  40ce8b:	cmp    eax,0xffffffff
  40ce8e:	jne    0x40ce52
  40ce90:	add    rdi,0x4
  40ce94:	movsxd rax,DWORD PTR [rdi]
  40ce97:	cmp    eax,0xffffffff
  40ce9a:	jne    0x40ce30
  40ce9c:	add    r15,0x4
  40cea0:	movsxd rax,DWORD PTR [r15]
  40cea3:	cmp    eax,0xffffffff
  40cea6:	jne    0x40ce0e
  40ceac:	add    r14,0x4
  40ceb0:	movsxd rax,DWORD PTR [r14]
  40ceb3:	cmp    eax,0xffffffff
  40ceb6:	jne    0x40cde8
  40cebc:	add    r13,0x4
  40cec0:	movsxd rax,DWORD PTR [r13+0x0]
  40cec4:	cmp    eax,0xffffffff
  40cec7:	jne    0x40cdc2
  40cecd:	add    r12,0x4
  40ced1:	movsxd rax,DWORD PTR [r12]
  40ced5:	cmp    eax,0xffffffff
  40ced8:	jne    0x40cd9c
  40cede:	add    QWORD PTR [rsp+0x28],0x4
  40cee4:	mov    rax,QWORD PTR [rsp+0x28]
  40cee9:	movsxd rax,DWORD PTR [rax]
  40ceec:	cmp    eax,0xffffffff
  40ceef:	jne    0x40cd76
  40cef5:	add    QWORD PTR [rsp+0x20],0x4
  40cefb:	mov    rax,QWORD PTR [rsp+0x20]
  40cf00:	movsxd rax,DWORD PTR [rax]
  40cf03:	cmp    eax,0xffffffff
  40cf06:	jne    0x40cd4b
  40cf0c:	xor    eax,eax
  40cf0e:	add    rsp,0x38
  40cf12:	pop    rbx
  40cf13:	pop    rsi
  40cf14:	pop    rdi
  40cf15:	pop    rbp
  40cf16:	pop    r12
  40cf18:	pop    r13
  40cf1a:	pop    r14
  40cf1c:	pop    r15
  40cf1e:	ret    
  40cf1f:	nop
  40cf20:	push   rbp
  40cf21:	push   rdi
  40cf22:	push   rsi
  40cf23:	push   rbx
  40cf24:	sub    rsp,0x438
  40cf2b:	mov    r8d,0xffffffff
  40cf31:	lea    rdi,[rsp+0x30]
  40cf36:	mov    rbx,rcx
  40cf39:	mov    rsi,rdx
  40cf3c:	mov    edx,0x1
  40cf41:	mov    rcx,rdi
  40cf44:	call   0x412480
  40cf49:	movsxd rdx,DWORD PTR [rbx+0x2c]
  40cf4d:	lea    eax,[rdx+0x1]
  40cf50:	cmp    eax,0x9
  40cf53:	mov    DWORD PTR [rbx+0x2c],eax
  40cf56:	jg     0x40d32c
  40cf5c:	test   eax,eax
  40cf5e:	je     0x40d230
  40cf64:	lea    rcx,[rbx+rdx*8]
  40cf68:	mov    rdx,QWORD PTR [rcx+0x58]
  40cf6c:	mov    r8d,DWORD PTR [rdx]
  40cf6f:	movsxd rdx,eax
  40cf72:	mov    DWORD PTR [rbx+rdx*4+0x30],0x0
  40cf7a:	mov    rdx,QWORD PTR [rbx+0x20]
  40cf7e:	add    rdx,0xe40
  40cf85:	cmp    r8d,0xf
  40cf89:	mov    QWORD PTR [rcx+0x60],rdx
  40cf8d:	jne    0x40cf9b
  40cf8f:	mov    edx,DWORD PTR [rbx+0x28ac]
  40cf95:	mov    DWORD PTR [rbx+0x28b0],edx
  40cf9b:	mov    rdx,QWORD PTR [rbx+0x8]
  40cf9f:	mov    rdx,QWORD PTR [rdx+0x28]
  40cfa3:	test   rdx,rdx
  40cfa6:	je     0x40cfb0
  40cfa8:	mov    rcx,rbx
  40cfab:	call   rdx
  40cfad:	mov    eax,DWORD PTR [rbx+0x2c]
  40cfb0:	cdqe   
  40cfb2:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40cfb7:	mov    ebp,DWORD PTR [rax+0x58]
  40cfba:	test   ebp,ebp
  40cfbc:	je     0x40d263
  40cfc2:	mov    rax,QWORD PTR [rbx+0x8]
  40cfc6:	lea    r8,[rip+0x14e6b]        # 0x421e38
  40cfcd:	lea    rdx,[rip+0x14e6d]        # 0x421e41
  40cfd4:	mov    rcx,rbx
  40cfd7:	call   QWORD PTR [rax+0x48]
  40cfda:	movsxd rax,DWORD PTR [rbx+0x2c]
  40cfde:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40cfe3:	mov    rbp,QWORD PTR [rsi+0x18]
  40cfe7:	movabs rdx,0x8000000000000000
  40cff1:	cmp    rbp,rdx
  40cff4:	je     0x40d030
  40cff6:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40cffb:	mov    r10d,DWORD PTR [rax+0x58]
  40cfff:	test   r10d,r10d
  40d002:	je     0x40d2c0
  40d008:	mov    rax,QWORD PTR [rbx+0x8]
  40d00c:	mov    r8,rbp
  40d00f:	lea    rdx,[rip+0x14e36]        # 0x421e4c
  40d016:	mov    rcx,rbx
  40d019:	call   QWORD PTR [rax+0x38]
  40d01c:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d020:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40d025:	mov    rbp,QWORD PTR [rsi+0x18]
  40d029:	jmp    0x40d06d
  40d02b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d030:	mov    rdx,QWORD PTR [rbx+rax*8+0x58]
  40d035:	mov    rax,QWORD PTR [rbx+0x8]
  40d039:	test   BYTE PTR [rax+0x50],0x1
  40d03d:	je     0x40d06d
  40d03f:	mov    r11d,DWORD PTR [rdx+0x58]
  40d043:	test   r11d,r11d
  40d046:	je     0x40d290
  40d04c:	lea    r8,[rip+0x14ae0]        # 0x421b33
  40d053:	lea    rdx,[rip+0x14df2]        # 0x421e4c
  40d05a:	mov    rcx,rbx
  40d05d:	call   QWORD PTR [rax+0x48]
  40d060:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d064:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40d069:	mov    rbp,QWORD PTR [rsi+0x18]
  40d06d:	lea    r9,[rsp+0x20]
  40d072:	lea    rdx,[rip+0x14dd7]        # 0x421e50
  40d079:	mov    r8,rbp
  40d07c:	mov    rcx,rbx
  40d07f:	mov    DWORD PTR [rsp+0x20],0x1
  40d087:	mov    DWORD PTR [rsp+0x24],0xf4240
  40d08f:	call   0x40c520
  40d094:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d098:	movzx  ebp,WORD PTR [rsi]
  40d09b:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40d0a0:	mov    r9d,DWORD PTR [rax+0x58]
  40d0a4:	test   r9d,r9d
  40d0a7:	jne    0x40d0c8
  40d0a9:	mov    rcx,QWORD PTR [rax+0x50]
  40d0ad:	lea    rdx,[rip+0x14da5]        # 0x421e59
  40d0b4:	xor    r9d,r9d
  40d0b7:	xor    r8d,r8d
  40d0ba:	call   0x412438
  40d0bf:	test   rax,rax
  40d0c2:	je     0x40d310
  40d0c8:	mov    rax,QWORD PTR [rbx+0x8]
  40d0cc:	mov    r8,rbp
  40d0cf:	lea    rdx,[rip+0x14d83]        # 0x421e59
  40d0d6:	mov    rcx,rbx
  40d0d9:	call   QWORD PTR [rax+0x38]
  40d0dc:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d0e0:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40d0e5:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40d0ea:	mov    ebp,DWORD PTR [rsi+0x4]
  40d0ed:	mov    r8d,DWORD PTR [rax+0x58]
  40d0f1:	test   r8d,r8d
  40d0f4:	jne    0x40d115
  40d0f6:	mov    rcx,QWORD PTR [rax+0x50]
  40d0fa:	lea    rdx,[rip+0x14d5f]        # 0x421e60
  40d101:	xor    r9d,r9d
  40d104:	xor    r8d,r8d
  40d107:	call   0x412438
  40d10c:	test   rax,rax
  40d10f:	je     0x40d2f0
  40d115:	mov    rax,QWORD PTR [rbx+0x8]
  40d119:	mov    r8,rbp
  40d11c:	lea    rdx,[rip+0x14d3d]        # 0x421e60
  40d123:	mov    rcx,rbx
  40d126:	call   QWORD PTR [rax+0x38]
  40d129:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d12d:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40d132:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40d137:	mov    ebp,DWORD PTR [rsi+0x8]
  40d13a:	mov    ecx,DWORD PTR [rax+0x58]
  40d13d:	test   ecx,ecx
  40d13f:	jne    0x40d160
  40d141:	mov    rcx,QWORD PTR [rax+0x50]
  40d145:	lea    rdx,[rip+0x14d27]        # 0x421e73
  40d14c:	xor    r9d,r9d
  40d14f:	xor    r8d,r8d
  40d152:	call   0x412438
  40d157:	test   rax,rax
  40d15a:	je     0x40d300
  40d160:	mov    rax,QWORD PTR [rbx+0x8]
  40d164:	mov    r8,rbp
  40d167:	lea    rdx,[rip+0x14d05]        # 0x421e73
  40d16e:	mov    rcx,rbx
  40d171:	call   QWORD PTR [rax+0x38]
  40d174:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d178:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40d17d:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40d182:	mov    esi,DWORD PTR [rsi+0xc]
  40d185:	mov    edx,DWORD PTR [rax+0x58]
  40d188:	test   edx,edx
  40d18a:	jne    0x40d1ab
  40d18c:	mov    rcx,QWORD PTR [rax+0x50]
  40d190:	lea    rdx,[rip+0x14ced]        # 0x421e84
  40d197:	xor    r9d,r9d
  40d19a:	xor    r8d,r8d
  40d19d:	call   0x412438
  40d1a2:	test   rax,rax
  40d1a5:	je     0x40d2e4
  40d1ab:	mov    rax,QWORD PTR [rbx+0x8]
  40d1af:	lea    rdx,[rip+0x14cce]        # 0x421e84
  40d1b6:	mov    r8,rsi
  40d1b9:	mov    rcx,rbx
  40d1bc:	call   QWORD PTR [rax+0x38]
  40d1bf:	movsxd rdx,DWORD PTR [rbx+0x2c]
  40d1c3:	add    DWORD PTR [rbx+rdx*4+0x30],0x1
  40d1c8:	mov    rax,rdx
  40d1cb:	lea    rcx,[rbx+rdx*8]
  40d1cf:	test   eax,eax
  40d1d1:	mov    r8,QWORD PTR [rcx+0x58]
  40d1d5:	mov    r8d,DWORD PTR [r8]
  40d1d8:	je     0x40d1ef
  40d1da:	mov    rcx,QWORD PTR [rcx+0x50]
  40d1de:	mov    ecx,DWORD PTR [rcx]
  40d1e0:	cmp    ecx,0xffffffff
  40d1e3:	je     0x40d1ef
  40d1e5:	add    DWORD PTR [rbx+rdx*4+0x2c],0x1
  40d1ea:	cmp    ecx,0xf
  40d1ed:	je     0x40d250
  40d1ef:	mov    rdx,QWORD PTR [rbx+0x8]
  40d1f3:	mov    rdx,QWORD PTR [rdx+0x30]
  40d1f7:	test   rdx,rdx
  40d1fa:	je     0x40d204
  40d1fc:	mov    rcx,rbx
  40d1ff:	call   rdx
  40d201:	mov    eax,DWORD PTR [rbx+0x2c]
  40d204:	sub    eax,0x1
  40d207:	xor    edx,edx
  40d209:	mov    rcx,rdi
  40d20c:	mov    DWORD PTR [rbx+0x2c],eax
  40d20f:	call   0x412488
  40d214:	call   QWORD PTR [rip+0x1e8ca]        # 0x42bae4
  40d21a:	lea    rcx,[rax+0x30]
  40d21e:	call   0x4198f8
  40d223:	nop
  40d224:	add    rsp,0x438
  40d22b:	pop    rbx
  40d22c:	pop    rsi
  40d22d:	pop    rdi
  40d22e:	pop    rbp
  40d22f:	ret    
  40d230:	mov    rcx,QWORD PTR [rbx+0x20]
  40d234:	mov    DWORD PTR [rbx+0x30],0x0
  40d23b:	lea    rdx,[rcx+0xe40]
  40d242:	mov    QWORD PTR [rbx+0x58],rdx
  40d246:	jmp    0x40cf9b
  40d24b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d250:	cmp    r8d,0xd
  40d254:	je     0x40d320
  40d25a:	add    DWORD PTR [rbx+0x28ac],0x1
  40d261:	jmp    0x40d1ef
  40d263:	mov    rcx,QWORD PTR [rax+0x50]
  40d267:	lea    rdx,[rip+0x14bd3]        # 0x421e41
  40d26e:	xor    r9d,r9d
  40d271:	xor    r8d,r8d
  40d274:	call   0x412438
  40d279:	test   rax,rax
  40d27c:	jne    0x40cfc2
  40d282:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d286:	jmp    0x40cfe3
  40d28b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d290:	mov    rcx,QWORD PTR [rdx+0x50]
  40d294:	lea    rdx,[rip+0x14bb1]        # 0x421e4c
  40d29b:	xor    r9d,r9d
  40d29e:	xor    r8d,r8d
  40d2a1:	call   0x412438
  40d2a6:	test   rax,rax
  40d2a9:	je     0x40d069
  40d2af:	mov    rax,QWORD PTR [rbx+0x8]
  40d2b3:	jmp    0x40d04c
  40d2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2c0:	mov    rcx,QWORD PTR [rax+0x50]
  40d2c4:	lea    rdx,[rip+0x14b81]        # 0x421e4c
  40d2cb:	xor    r9d,r9d
  40d2ce:	xor    r8d,r8d
  40d2d1:	call   0x412438
  40d2d6:	test   rax,rax
  40d2d9:	jne    0x40d008
  40d2df:	jmp    0x40d069
  40d2e4:	movsxd rdx,DWORD PTR [rbx+0x2c]
  40d2e8:	mov    rax,rdx
  40d2eb:	jmp    0x40d1cb
  40d2f0:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d2f4:	jmp    0x40d132
  40d2f9:	nop    DWORD PTR [rax+0x0]
  40d300:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d304:	jmp    0x40d17d
  40d309:	nop    DWORD PTR [rax+0x0]
  40d310:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d314:	jmp    0x40d0e5
  40d319:	nop    DWORD PTR [rax+0x0]
  40d320:	add    DWORD PTR [rbx+0x28a8],0x1
  40d327:	jmp    0x40d1ef
  40d32c:	call   0x419e29
  40d331:	nop
  40d332:	nop    DWORD PTR [rax+0x0]
  40d336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d340:	push   r15
  40d342:	push   r14
  40d344:	push   r13
  40d346:	push   r12
  40d348:	push   rbp
  40d349:	push   rdi
  40d34a:	push   rsi
  40d34b:	push   rbx
  40d34c:	sub    rsp,0xcc8
  40d353:	lea    rax,[rsp+0xc0]
  40d35b:	mov    r15,rcx
  40d35e:	mov    rbx,rdx
  40d361:	mov    rsi,r8
  40d364:	mov    edx,0x1
  40d369:	mov    r8d,0xffffffff
  40d36f:	mov    rcx,rax
  40d372:	mov    QWORD PTR [rsp+0x58],rax
  40d377:	mov    rbp,r9
  40d37a:	call   0x412480
  40d37f:	movsxd rdx,DWORD PTR [r15+0x2c]
  40d383:	lea    eax,[rdx+0x1]
  40d386:	cmp    eax,0x9
  40d389:	mov    DWORD PTR [r15+0x2c],eax
  40d38d:	jg     0x40e74e
  40d393:	test   eax,eax
  40d395:	je     0x40d890
  40d39b:	lea    rdx,[r15+rdx*8]
  40d39f:	cdqe   
  40d3a1:	mov    rcx,QWORD PTR [rdx+0x58]
  40d3a5:	mov    ecx,DWORD PTR [rcx]
  40d3a7:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  40d3b0:	mov    rax,QWORD PTR [r15+0x20]
  40d3b4:	add    rax,0x240
  40d3ba:	cmp    ecx,0xf
  40d3bd:	mov    QWORD PTR [rdx+0x60],rax
  40d3c1:	jne    0x40d3d1
  40d3c3:	mov    eax,DWORD PTR [r15+0x28ac]
  40d3ca:	mov    DWORD PTR [r15+0x28b0],eax
  40d3d1:	mov    rax,QWORD PTR [r15+0x8]
  40d3d5:	mov    rax,QWORD PTR [rax+0x28]
  40d3d9:	test   rax,rax
  40d3dc:	je     0x40d3e3
  40d3de:	mov    rcx,r15
  40d3e1:	call   rax
  40d3e3:	mov    rax,QWORD PTR [rsi+0x8]
  40d3e7:	mov    ecx,DWORD PTR [rax+0xc]
  40d3ea:	call   0x412378
  40d3ef:	test   rax,rax
  40d3f2:	mov    r8,rax
  40d3f5:	je     0x40e624
  40d3fb:	lea    rdx,[rip+0x14a3f]        # 0x421e41
  40d402:	mov    rcx,r15
  40d405:	call   0x40a930
  40d40a:	movsxd rax,DWORD PTR [r15+0x2c]
  40d40e:	movsxd rdi,DWORD PTR [rsi]
  40d411:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d416:	mov    r13d,DWORD PTR [rax+0x58]
  40d41a:	test   r13d,r13d
  40d41d:	jne    0x40d43e
  40d41f:	mov    rcx,QWORD PTR [rax+0x50]
  40d423:	lea    rdx,[rip+0x14a6c]        # 0x421e96
  40d42a:	xor    r9d,r9d
  40d42d:	xor    r8d,r8d
  40d430:	call   0x412438
  40d435:	test   rax,rax
  40d438:	je     0x40e333
  40d43e:	mov    rax,QWORD PTR [r15+0x8]
  40d442:	mov    r8,rdi
  40d445:	lea    rdx,[rip+0x14a4a]        # 0x421e96
  40d44c:	mov    rcx,r15
  40d44f:	call   QWORD PTR [rax+0x38]
  40d452:	movsxd rax,DWORD PTR [r15+0x2c]
  40d456:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d45c:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d461:	movsxd rdi,DWORD PTR [rbx+0x78]
  40d465:	mov    r12d,DWORD PTR [rax+0x58]
  40d469:	test   r12d,r12d
  40d46c:	jne    0x40d489
  40d46e:	mov    rcx,QWORD PTR [rax+0x50]
  40d472:	lea    rdx,[rip+0x14a2a]        # 0x421ea3
  40d479:	xor    r9d,r9d
  40d47c:	xor    r8d,r8d
  40d47f:	call   0x412438
  40d484:	test   rax,rax
  40d487:	je     0x40d4a7
  40d489:	mov    rax,QWORD PTR [r15+0x8]
  40d48d:	mov    r8,rdi
  40d490:	lea    rdx,[rip+0x14a0c]        # 0x421ea3
  40d497:	mov    rcx,r15
  40d49a:	call   QWORD PTR [rax+0x38]
  40d49d:	movsxd rax,DWORD PTR [r15+0x2c]
  40d4a1:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d4a7:	mov    r8,QWORD PTR [rbx+0xd0]
  40d4ae:	lea    rdx,[rip+0x149f8]        # 0x421ead
  40d4b5:	mov    rcx,r15
  40d4b8:	lea    rdi,[rsi+0x30]
  40d4bc:	call   0x40b820
  40d4c1:	mov    r8,QWORD PTR [rbx+0xd0]
  40d4c8:	lea    rdx,[rip+0x149e6]        # 0x421eb5
  40d4cf:	mov    r9,rdi
  40d4d2:	mov    rcx,r15
  40d4d5:	call   0x40c520
  40d4da:	mov    r8,QWORD PTR [rbx+0xd8]
  40d4e1:	lea    rdx,[rip+0x149da]        # 0x421ec2
  40d4e8:	mov    rcx,r15
  40d4eb:	call   0x40b820
  40d4f0:	mov    r8,QWORD PTR [rbx+0xd8]
  40d4f7:	lea    rdx,[rip+0x149cc]        # 0x421eca
  40d4fe:	mov    r9,rdi
  40d501:	mov    rcx,r15
  40d504:	call   0x40c520
  40d509:	mov    rcx,rbx
  40d50c:	call   0x412400
  40d511:	lea    rdx,[rip+0x149bf]        # 0x421ed7
  40d518:	mov    r8,rax
  40d51b:	mov    rcx,r15
  40d51e:	call   0x40b820
  40d523:	mov    rcx,rbx
  40d526:	call   0x412400
  40d52b:	lea    rdx,[rip+0x149bb]        # 0x421eed
  40d532:	mov    r9,rdi
  40d535:	mov    r8,rax
  40d538:	mov    rcx,r15
  40d53b:	call   0x40c520
  40d540:	mov    rcx,rbx
  40d543:	call   0x4123e0
  40d548:	test   rax,rax
  40d54b:	mov    rdi,rax
  40d54e:	jne    0x40e180
  40d554:	lea    r8,[rip+0x145d8]        # 0x421b33
  40d55b:	lea    rdx,[rip+0x149a6]        # 0x421f08
  40d562:	mov    rcx,r15
  40d565:	call   0x40ac10
  40d56a:	mov    rcx,rbx
  40d56d:	call   0x4123e0
  40d572:	test   rax,rax
  40d575:	jne    0x40e0c0
  40d57b:	lea    r8,[rip+0x145b1]        # 0x421b33
  40d582:	lea    rdx,[rip+0x1498c]        # 0x421f15
  40d589:	mov    rcx,r15
  40d58c:	call   0x40ac10
  40d591:	mov    rcx,rbx
  40d594:	call   0x4123d8
  40d599:	cmp    rax,0xffffffffffffffff
  40d59d:	je     0x40e137
  40d5a3:	mov    rdi,QWORD PTR [rsp+0x58]
  40d5a8:	mov    rcx,rdi
  40d5ab:	call   0x412490
  40d5b0:	mov    rcx,rbx
  40d5b3:	call   0x4123d8
  40d5b8:	lea    rdx,[rip+0x13a49]        # 0x421008
  40d5bf:	mov    r8,rax
  40d5c2:	mov    rcx,rdi
  40d5c5:	call   0x412478
  40d5ca:	mov    r8,QWORD PTR [rsp+0xc0]
  40d5d2:	lea    rdx,[rip+0x1494e]        # 0x421f27
  40d5d9:	mov    rcx,r15
  40d5dc:	call   0x40a930
  40d5e1:	mov    rcx,rbx
  40d5e4:	call   0x4123d0
  40d5e9:	cmp    eax,0xffffffff
  40d5ec:	je     0x40e15e
  40d5f2:	mov    rdi,QWORD PTR [rsp+0x58]
  40d5f7:	mov    rcx,rdi
  40d5fa:	call   0x412490
  40d5ff:	mov    rcx,rbx
  40d602:	call   0x4123d0
  40d607:	lea    rdx,[rip+0x14921]        # 0x421f2f
  40d60e:	mov    r8d,eax
  40d611:	mov    rcx,rdi
  40d614:	call   0x412478
  40d619:	movsxd rax,DWORD PTR [r15+0x2c]
  40d61d:	mov    rdi,QWORD PTR [rsp+0xc0]
  40d625:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d62a:	mov    r10d,DWORD PTR [rax+0x58]
  40d62e:	test   r10d,r10d
  40d631:	je     0x40e600
  40d637:	mov    rax,QWORD PTR [r15+0x8]
  40d63b:	mov    r8,rdi
  40d63e:	lea    rdx,[rip+0x148ed]        # 0x421f32
  40d645:	mov    rcx,r15
  40d648:	call   QWORD PTR [rax+0x48]
  40d64b:	movsxd rax,DWORD PTR [r15+0x2c]
  40d64f:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d655:	mov    rax,QWORD PTR [rsi+0x8]
  40d659:	mov    eax,DWORD PTR [rax+0xc]
  40d65c:	test   eax,eax
  40d65e:	je     0x40de20
  40d664:	cmp    eax,0x1
  40d667:	je     0x40d8b0
  40d66d:	mov    esi,DWORD PTR [rip+0x1bcd5]        # 0x429348
  40d673:	test   esi,esi
  40d675:	jne    0x40d9b0
  40d67b:	mov    eax,DWORD PTR [r15+0x2c]
  40d67f:	mov    r9d,DWORD PTR [rbx+0x228]
  40d686:	test   r9d,r9d
  40d689:	je     0x40de10
  40d68f:	lea    edx,[rax+0x1]
  40d692:	cmp    edx,0x9
  40d695:	mov    DWORD PTR [r15+0x2c],edx
  40d699:	jg     0x40e74e
  40d69f:	test   edx,edx
  40d6a1:	jne    0x40dca0
  40d6a7:	mov    rax,QWORD PTR [r15+0x20]
  40d6ab:	mov    DWORD PTR [r15+0x30],0x0
  40d6b3:	add    rax,0x360
  40d6b9:	mov    QWORD PTR [r15+0x58],rax
  40d6bd:	mov    rax,QWORD PTR [r15+0x8]
  40d6c1:	mov    rax,QWORD PTR [rax+0x28]
  40d6c5:	test   rax,rax
  40d6c8:	je     0x40d6d3
  40d6ca:	mov    rcx,r15
  40d6cd:	call   rax
  40d6cf:	mov    edx,DWORD PTR [r15+0x2c]
  40d6d3:	mov    r8d,DWORD PTR [rbx+0x228]
  40d6da:	test   r8d,r8d
  40d6dd:	jle    0x40dd40
  40d6e3:	mov    rax,QWORD PTR [rbx+0x220]
  40d6ea:	mov    rdi,QWORD PTR [rax]
  40d6ed:	lea    eax,[rdx+0x1]
  40d6f0:	cmp    eax,0x9
  40d6f3:	mov    DWORD PTR [r15+0x2c],eax
  40d6f7:	jg     0x40e74e
  40d6fd:	xor    esi,esi
  40d6ff:	lea    rbp,[rip+0x14788]        # 0x421e8e
  40d706:	jmp    0x40d86d
  40d70b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d710:	movsxd rdx,edx
  40d713:	cdqe   
  40d715:	mov    rdx,QWORD PTR [r15+rdx*8+0x58]
  40d71a:	mov    ecx,DWORD PTR [rdx]
  40d71c:	mov    rdx,QWORD PTR [r15+0x20]
  40d720:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  40d729:	add    rdx,0x3c0
  40d730:	cmp    ecx,0xf
  40d733:	mov    QWORD PTR [r15+rax*8+0x58],rdx
  40d738:	jne    0x40d748
  40d73a:	mov    eax,DWORD PTR [r15+0x28ac]
  40d741:	mov    DWORD PTR [r15+0x28b0],eax
  40d748:	mov    rax,QWORD PTR [r15+0x8]
  40d74c:	mov    rax,QWORD PTR [rax+0x28]
  40d750:	test   rax,rax
  40d753:	je     0x40d75a
  40d755:	mov    rcx,r15
  40d758:	call   rax
  40d75a:	mov    ecx,DWORD PTR [rdi]
  40d75c:	call   0x4123c8
  40d761:	test   rax,rax
  40d764:	cmove  rax,rbp
  40d768:	mov    r12,rax
  40d76b:	movsxd rax,DWORD PTR [r15+0x2c]
  40d76f:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d774:	mov    ecx,DWORD PTR [rax+0x58]
  40d777:	test   ecx,ecx
  40d779:	je     0x40dd00
  40d77f:	mov    rax,QWORD PTR [r15+0x8]
  40d783:	mov    r8,r12
  40d786:	lea    rdx,[rip+0x14868]        # 0x421ff5
  40d78d:	mov    rcx,r15
  40d790:	call   QWORD PTR [rax+0x48]
  40d793:	movsxd rax,DWORD PTR [r15+0x2c]
  40d797:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d79d:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d7a2:	movsxd r12,DWORD PTR [rdi+0x10]
  40d7a6:	mov    edx,DWORD PTR [rax+0x58]
  40d7a9:	test   edx,edx
  40d7ab:	jne    0x40d7c8
  40d7ad:	mov    rcx,QWORD PTR [rax+0x50]
  40d7b1:	lea    rdx,[rip+0x1484c]        # 0x422004
  40d7b8:	xor    r9d,r9d
  40d7bb:	xor    r8d,r8d
  40d7be:	call   0x412438
  40d7c3:	test   rax,rax
  40d7c6:	je     0x40d7e6
  40d7c8:	mov    rax,QWORD PTR [r15+0x8]
  40d7cc:	mov    r8,r12
  40d7cf:	lea    rdx,[rip+0x1482e]        # 0x422004
  40d7d6:	mov    rcx,r15
  40d7d9:	call   QWORD PTR [rax+0x38]
  40d7dc:	movsxd rax,DWORD PTR [r15+0x2c]
  40d7e0:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d7e6:	cmp    DWORD PTR [rdi],0x6
  40d7e9:	jne    0x40d7f5
  40d7eb:	cmp    DWORD PTR [rdi+0x10],0x23
  40d7ef:	jg     0x40e753
  40d7f5:	movsxd rdx,DWORD PTR [r15+0x2c]
  40d7f9:	lea    rcx,[r15+rdx*8]
  40d7fd:	test   edx,edx
  40d7ff:	mov    rax,rdx
  40d802:	mov    r8,QWORD PTR [rcx+0x58]
  40d806:	mov    r8d,DWORD PTR [r8]
  40d809:	je     0x40d825
  40d80b:	mov    rcx,QWORD PTR [rcx+0x50]
  40d80f:	mov    ecx,DWORD PTR [rcx]
  40d811:	cmp    ecx,0xffffffff
  40d814:	je     0x40d825
  40d816:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  40d81c:	cmp    ecx,0xf
  40d81f:	je     0x40dce4
  40d825:	mov    rdx,QWORD PTR [r15+0x8]
  40d829:	mov    rdx,QWORD PTR [rdx+0x30]
  40d82d:	test   rdx,rdx
  40d830:	je     0x40d83b
  40d832:	mov    rcx,r15
  40d835:	call   rdx
  40d837:	mov    eax,DWORD PTR [r15+0x2c]
  40d83b:	lea    ecx,[rsi+0x1]
  40d83e:	cmp    DWORD PTR [rbx+0x228],ecx
  40d844:	lea    edx,[rax-0x1]
  40d847:	mov    DWORD PTR [r15+0x2c],edx
  40d84b:	jle    0x40dd40
  40d851:	mov    rcx,QWORD PTR [rbx+0x220]
  40d858:	add    rsi,0x1
  40d85c:	cmp    eax,0x9
  40d85f:	mov    rdi,QWORD PTR [rcx+rsi*8]
  40d863:	mov    DWORD PTR [r15+0x2c],eax
  40d867:	jg     0x40e74e
  40d86d:	test   eax,eax
  40d86f:	jne    0x40d710
  40d875:	mov    rax,QWORD PTR [r15+0x20]
  40d879:	mov    DWORD PTR [r15+0x30],0x0
  40d881:	add    rax,0x3c0
  40d887:	mov    QWORD PTR [r15+0x58],rax
  40d88b:	jmp    0x40d748
  40d890:	mov    rax,QWORD PTR [r15+0x20]
  40d894:	mov    DWORD PTR [r15+0x30],0x0
  40d89c:	add    rax,0x240
  40d8a2:	mov    QWORD PTR [r15+0x58],rax
  40d8a6:	jmp    0x40d3d1
  40d8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d8b0:	mov    ecx,DWORD PTR [rbx+0x74]
  40d8b3:	call   0x412360
  40d8b8:	test   rax,rax
  40d8bb:	mov    r8,rax
  40d8be:	je     0x40e677
  40d8c4:	lea    rdx,[rip+0x146fc]        # 0x421fc7
  40d8cb:	mov    rcx,r15
  40d8ce:	call   0x40a930
  40d8d3:	movsxd rax,DWORD PTR [r15+0x2c]
  40d8d7:	movsxd rsi,DWORD PTR [rbx+0x70]
  40d8db:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d8e0:	mov    ebp,DWORD PTR [rax+0x58]
  40d8e3:	test   ebp,ebp
  40d8e5:	je     0x40e1e0
  40d8eb:	mov    rax,QWORD PTR [r15+0x8]
  40d8ef:	mov    r8,rsi
  40d8f2:	lea    rdx,[rip+0x146d9]        # 0x421fd2
  40d8f9:	mov    rcx,r15
  40d8fc:	call   QWORD PTR [rax+0x38]
  40d8ff:	movsxd rax,DWORD PTR [r15+0x2c]
  40d903:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d909:	mov    rcx,rbx
  40d90c:	call   0x4123f0
  40d911:	movsxd rsi,eax
  40d914:	movsxd rax,DWORD PTR [r15+0x2c]
  40d918:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d91d:	mov    edi,DWORD PTR [rax+0x58]
  40d920:	test   edi,edi
  40d922:	je     0x40e2d0
  40d928:	mov    rax,QWORD PTR [r15+0x8]
  40d92c:	mov    r8,rsi
  40d92f:	lea    rdx,[rip+0x146a7]        # 0x421fdd
  40d936:	mov    rcx,r15
  40d939:	call   QWORD PTR [rax+0x38]
  40d93c:	movsxd rax,DWORD PTR [r15+0x2c]
  40d940:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d946:	mov    rcx,rbx
  40d949:	call   0x4123f8
  40d94e:	test   rax,rax
  40d951:	je     0x40e2b0
  40d957:	mov    rdi,QWORD PTR [rsp+0x58]
  40d95c:	mov    rcx,rdi
  40d95f:	call   0x412490
  40d964:	mov    rcx,rbx
  40d967:	call   0x4123f8
  40d96c:	mov    rcx,rbx
  40d96f:	mov    rsi,rax
  40d972:	call   0x4123f0
  40d977:	mov    r8,rsi
  40d97a:	mov    edx,eax
  40d97c:	mov    rcx,rdi
  40d97f:	call   0x4124a0
  40d984:	mov    r8,QWORD PTR [rsp+0xc0]
  40d98c:	lea    rdx,[rip+0x14653]        # 0x421fe6
  40d993:	mov    rcx,r15
  40d996:	call   0x40a930
  40d99b:	mov    esi,DWORD PTR [rip+0x1b9a7]        # 0x429348
  40d9a1:	test   esi,esi
  40d9a3:	je     0x40d67b
  40d9a9:	nop    DWORD PTR [rax+0x0]
  40d9b0:	mov    rcx,rbx
  40d9b3:	call   0x4123e8
  40d9b8:	test   rax,rax
  40d9bb:	mov    QWORD PTR [rsp+0x68],rax
  40d9c0:	je     0x40d67b
  40d9c6:	movsxd rdx,DWORD PTR [r15+0x2c]
  40d9ca:	lea    eax,[rdx+0x1]
  40d9cd:	cmp    eax,0x9
  40d9d0:	mov    DWORD PTR [r15+0x2c],eax
  40d9d4:	jg     0x40e74e
  40d9da:	test   eax,eax
  40d9dc:	je     0x40e318
  40d9e2:	lea    rdx,[r15+rdx*8]
  40d9e6:	cdqe   
  40d9e8:	mov    rcx,QWORD PTR [rdx+0x58]
  40d9ec:	mov    ecx,DWORD PTR [rcx]
  40d9ee:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  40d9f7:	mov    rax,QWORD PTR [r15+0x20]
  40d9fb:	add    rax,0x300
  40da01:	cmp    ecx,0xf
  40da04:	mov    QWORD PTR [rdx+0x60],rax
  40da08:	jne    0x40da18
  40da0a:	mov    eax,DWORD PTR [r15+0x28ac]
  40da11:	mov    DWORD PTR [r15+0x28b0],eax
  40da18:	mov    rax,QWORD PTR [r15+0x8]
  40da1c:	mov    rax,QWORD PTR [rax+0x28]
  40da20:	test   rax,rax
  40da23:	je     0x40da2a
  40da25:	mov    rcx,r15
  40da28:	call   rax
  40da2a:	lea    rax,[rsp+0x4c0]
  40da32:	lea    r13,[rsp+0x8c0]
  40da3a:	xor    ebp,ebp
  40da3c:	mov    QWORD PTR [rsp+0xd18],rbx
  40da44:	mov    QWORD PTR [rsp+0x30],rax
  40da49:	lea    rax,[rsp+0xa8]
  40da51:	mov    QWORD PTR [rsp+0x78],rax
  40da56:	lea    rax,[rsp+0xb0]
  40da5e:	mov    QWORD PTR [rsp+0x80],rax
  40da66:	lea    rax,[rsp+0xb8]
  40da6e:	mov    QWORD PTR [rsp+0x40],rax
  40da73:	lea    rax,[rsp+0xa4]
  40da7b:	mov    QWORD PTR [rsp+0x48],rax
  40da80:	mov    rcx,QWORD PTR [rsp+0x68]
  40da85:	lea    rdx,[rip+0x13437]        # 0x420ec3
  40da8c:	mov    r8,rbp
  40da8f:	mov    r9d,0x2
  40da95:	call   0x412438
  40da9a:	test   rax,rax
  40da9d:	mov    rbp,rax
  40daa0:	je     0x40e63f
  40daa6:	mov    rax,QWORD PTR [rbp+0x8]
  40daaa:	mov    rsi,QWORD PTR [rbp+0x0]
  40daae:	mov    QWORD PTR [rsp+0x50],rax
  40dab3:	movsxd rax,DWORD PTR [r15+0x2c]
  40dab7:	mov    r14,QWORD PTR [r15+rax*8+0x58]
  40dabc:	mov    ebx,DWORD PTR [r14+0x58]
  40dac0:	test   ebx,ebx
  40dac2:	je     0x40e4c0
  40dac8:	mov    rcx,QWORD PTR [rsp+0x30]
  40dacd:	xor    edx,edx
  40dacf:	mov    r8d,0xffffffff
  40dad5:	mov    QWORD PTR [rsp+0xa8],0x0
  40dae1:	mov    QWORD PTR [rsp+0xb0],0x0
  40daed:	mov    rbx,rsi
  40daf0:	call   0x412480
  40daf5:	mov    rcx,rsi
  40daf8:	call   0x419840
  40dafd:	mov    QWORD PTR [rsp+0xb8],rsi
  40db05:	add    rax,rsi
  40db08:	cmp    BYTE PTR [rsi],0x0
  40db0b:	mov    QWORD PTR [rsp+0x38],rax
  40db10:	mov    DWORD PTR [rsp+0x60],0x0
  40db18:	je     0x40db7a
  40db1a:	mov    r9d,DWORD PTR [r15+0x28c0]
  40db21:	mov    r8,QWORD PTR [rsp+0x38]
  40db26:	mov    rdx,QWORD PTR [rsp+0x40]
  40db2b:	mov    rcx,QWORD PTR [rsp+0x48]
  40db30:	call   0x4121e0
  40db35:	test   eax,eax
  40db37:	js     0x40e340
  40db3d:	mov    r8d,DWORD PTR [rsp+0xb8]
  40db45:	mov    rcx,QWORD PTR [rsp+0x30]
  40db4a:	mov    rdx,rbx
  40db4d:	sub    r8d,ebx
  40db50:	call   0x4124a8
  40db55:	mov    rbx,QWORD PTR [rsp+0xb8]
  40db5d:	cmp    BYTE PTR [rbx],0x0
  40db60:	jne    0x40db1a
  40db62:	mov    r11d,DWORD PTR [rsp+0x60]
  40db67:	test   r11d,r11d
  40db6a:	je     0x40db7a
  40db6c:	cmp    DWORD PTR [r15+0x28b4],0x1
  40db74:	je     0x40e6ba
  40db7a:	mov    rbx,QWORD PTR [rsp+0x30]
  40db7f:	mov    rdx,QWORD PTR [rsp+0x78]
  40db84:	mov    rcx,rbx
  40db87:	call   0x412488
  40db8c:	xor    edx,edx
  40db8e:	mov    rcx,rbx
  40db91:	mov    r8d,0xffffffff
  40db97:	call   0x412480
  40db9c:	mov    rbx,QWORD PTR [rsp+0x50]
  40dba1:	mov    rcx,rbx
  40dba4:	call   0x419840
  40dba9:	mov    QWORD PTR [rsp+0xb8],rbx
  40dbb1:	add    rax,rbx
  40dbb4:	cmp    BYTE PTR [rbx],0x0
  40dbb7:	mov    rdi,rax
  40dbba:	mov    DWORD PTR [rsp+0x38],0x0
  40dbc2:	je     0x40dc42
  40dbc4:	mov    QWORD PTR [rsp+0x88],rbp
  40dbcc:	mov    r12,QWORD PTR [rsp+0x48]
  40dbd1:	mov    rbp,QWORD PTR [rsp+0x40]
  40dbd6:	mov    QWORD PTR [rsp+0x60],rsi
  40dbdb:	mov    QWORD PTR [rsp+0x70],r14
  40dbe0:	mov    r9d,DWORD PTR [r15+0x28c0]
  40dbe7:	mov    r8,rdi
  40dbea:	mov    rdx,rbp
  40dbed:	mov    rcx,r12
  40dbf0:	call   0x4121e0
  40dbf5:	test   eax,eax
  40dbf7:	js     0x40e4e0
  40dbfd:	mov    r8d,DWORD PTR [rsp+0xb8]
  40dc05:	mov    rcx,QWORD PTR [rsp+0x30]
  40dc0a:	mov    rdx,rbx
  40dc0d:	sub    r8d,ebx
  40dc10:	call   0x4124a8
  40dc15:	mov    rbx,QWORD PTR [rsp+0xb8]
  40dc1d:	cmp    BYTE PTR [rbx],0x0
  40dc20:	jne    0x40dbe0
  40dc22:	mov    r10d,DWORD PTR [rsp+0x38]
  40dc27:	mov    rbp,QWORD PTR [rsp+0x88]
  40dc2f:	test   r10d,r10d
  40dc32:	je     0x40dc42
  40dc34:	cmp    DWORD PTR [r15+0x28b4],0x1
  40dc3c:	je     0x40e71a
  40dc42:	mov    rdx,QWORD PTR [rsp+0x80]
  40dc4a:	mov    rcx,QWORD PTR [rsp+0x30]
  40dc4f:	call   0x412488
  40dc54:	mov    rax,QWORD PTR [r15+0x8]
  40dc58:	mov    r8,QWORD PTR [rsp+0xb0]
  40dc60:	mov    rcx,r15
  40dc63:	mov    rdx,QWORD PTR [rsp+0xa8]
  40dc6b:	call   QWORD PTR [rax+0x48]
  40dc6e:	mov    rcx,QWORD PTR [rsp+0xa8]
  40dc76:	call   0x4123c0
  40dc7b:	mov    rcx,QWORD PTR [rsp+0xb0]
  40dc83:	call   0x4123c0
  40dc88:	movsxd rax,DWORD PTR [r15+0x2c]
  40dc8c:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40dc92:	jmp    0x40da80
  40dc97:	nop    WORD PTR [rax+rax*1+0x0]
  40dca0:	cdqe   
  40dca2:	lea    rcx,[r15+rax*8]
  40dca6:	mov    rax,QWORD PTR [rcx+0x58]
  40dcaa:	mov    r8d,DWORD PTR [rax]
  40dcad:	movsxd rax,edx
  40dcb0:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  40dcb9:	mov    rax,QWORD PTR [r15+0x20]
  40dcbd:	add    rax,0x360
  40dcc3:	cmp    r8d,0xf
  40dcc7:	mov    QWORD PTR [rcx+0x60],rax
  40dccb:	jne    0x40d6bd
  40dcd1:	mov    eax,DWORD PTR [r15+0x28ac]
  40dcd8:	mov    DWORD PTR [r15+0x28b0],eax
  40dcdf:	jmp    0x40d6bd
  40dce4:	cmp    r8d,0xd
  40dce8:	je     0x40dd30
  40dcea:	add    DWORD PTR [r15+0x28ac],0x1
  40dcf2:	jmp    0x40d825
  40dcf7:	nop    WORD PTR [rax+rax*1+0x0]
  40dd00:	mov    rcx,QWORD PTR [rax+0x50]
  40dd04:	lea    rdx,[rip+0x142ea]        # 0x421ff5
  40dd0b:	xor    r9d,r9d
  40dd0e:	xor    r8d,r8d
  40dd11:	call   0x412438
  40dd16:	test   rax,rax
  40dd19:	jne    0x40d77f
  40dd1f:	movsxd rax,DWORD PTR [r15+0x2c]
  40dd23:	jmp    0x40d79d
  40dd28:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd30:	add    DWORD PTR [r15+0x28a8],0x1
  40dd38:	jmp    0x40d825
  40dd3d:	nop    DWORD PTR [rax]
  40dd40:	movsxd rax,edx
  40dd43:	test   edx,edx
  40dd45:	lea    rcx,[r15+rax*8]
  40dd49:	mov    r8,QWORD PTR [rcx+0x58]
  40dd4d:	mov    r8d,DWORD PTR [r8]
  40dd50:	je     0x40dd6c
  40dd52:	mov    rcx,QWORD PTR [rcx+0x50]
  40dd56:	mov    ecx,DWORD PTR [rcx]
  40dd58:	cmp    ecx,0xffffffff
  40dd5b:	je     0x40dd6c
  40dd5d:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  40dd63:	cmp    ecx,0xf
  40dd66:	je     0x40e5e0
  40dd6c:	mov    rax,QWORD PTR [r15+0x8]
  40dd70:	xor    r8d,r8d
  40dd73:	mov    rax,QWORD PTR [rax+0x30]
  40dd77:	test   rax,rax
  40dd7a:	je     0x40dd8d
  40dd7c:	mov    rcx,r15
  40dd7f:	call   rax
  40dd81:	mov    rax,QWORD PTR [r15+0x8]
  40dd85:	mov    edx,DWORD PTR [r15+0x2c]
  40dd89:	mov    r8,QWORD PTR [rax+0x30]
  40dd8d:	lea    eax,[rdx-0x1]
  40dd90:	mov    DWORD PTR [r15+0x2c],eax
  40dd94:	movsxd rdx,eax
  40dd97:	test   eax,eax
  40dd99:	lea    rcx,[r15+rdx*8]
  40dd9d:	mov    r9,QWORD PTR [rcx+0x58]
  40dda1:	mov    r9d,DWORD PTR [r9]
  40dda4:	je     0x40ddc0
  40dda6:	mov    rcx,QWORD PTR [rcx+0x50]
  40ddaa:	mov    ecx,DWORD PTR [rcx]
  40ddac:	cmp    ecx,0xffffffff
  40ddaf:	je     0x40ddc0
  40ddb1:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  40ddb7:	cmp    ecx,0xf
  40ddba:	je     0x40e1c0
  40ddc0:	test   r8,r8
  40ddc3:	je     0x40ddcf
  40ddc5:	mov    rcx,r15
  40ddc8:	call   r8
  40ddcb:	mov    eax,DWORD PTR [r15+0x2c]
  40ddcf:	mov    rcx,QWORD PTR [rsp+0x58]
  40ddd4:	sub    eax,0x1
  40ddd7:	xor    edx,edx
  40ddd9:	mov    DWORD PTR [r15+0x2c],eax
  40dddd:	call   0x412488
  40dde2:	call   QWORD PTR [rip+0x1dcfc]        # 0x42bae4
  40dde8:	lea    rcx,[rax+0x30]
  40ddec:	call   0x4198f8
  40ddf1:	nop
  40ddf2:	add    rsp,0xcc8
  40ddf9:	pop    rbx
  40ddfa:	pop    rsi
  40ddfb:	pop    rdi
  40ddfc:	pop    rbp
  40ddfd:	pop    r12
  40ddff:	pop    r13
  40de01:	pop    r14
  40de03:	pop    r15
  40de05:	ret    
  40de06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de10:	mov    rdx,QWORD PTR [r15+0x8]
  40de14:	mov    r8,QWORD PTR [rdx+0x30]
  40de18:	jmp    0x40dd94
  40de1d:	nop    DWORD PTR [rax]
  40de20:	movsxd rax,DWORD PTR [r15+0x2c]
  40de24:	movsxd rdi,DWORD PTR [rbx+0x68]
  40de28:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40de2d:	mov    r9d,DWORD PTR [rax+0x58]
  40de31:	test   r9d,r9d
  40de34:	je     0x40e284
  40de3a:	mov    rax,QWORD PTR [r15+0x8]
  40de3e:	mov    r8,rdi
  40de41:	lea    rdx,[rip+0x140f3]        # 0x421f3b
  40de48:	mov    rcx,r15
  40de4b:	call   QWORD PTR [rax+0x38]
  40de4e:	movsxd rax,DWORD PTR [r15+0x2c]
  40de52:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40de58:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40de5d:	movsxd rdi,DWORD PTR [rbx+0x6c]
  40de61:	mov    r8d,DWORD PTR [rax+0x58]
  40de65:	test   r8d,r8d
  40de68:	je     0x40e260
  40de6e:	mov    rax,QWORD PTR [r15+0x8]
  40de72:	mov    r8,rdi
  40de75:	lea    rdx,[rip+0x140c5]        # 0x421f41
  40de7c:	mov    rcx,r15
  40de7f:	call   QWORD PTR [rax+0x38]
  40de82:	movsxd rax,DWORD PTR [r15+0x2c]
  40de86:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40de8c:	mov    ecx,DWORD PTR [rbx+0x74]
  40de8f:	call   0x412368
  40de94:	test   rax,rax
  40de97:	mov    r8,rax
  40de9a:	je     0x40e692
  40dea0:	lea    rdx,[rip+0x140a1]        # 0x421f48
  40dea7:	mov    rcx,r15
  40deaa:	call   0x40a930
  40deaf:	mov    rdx,rsi
  40deb2:	mov    r8,rbx
  40deb5:	mov    rcx,rbp
  40deb8:	call   0x412050
  40debd:	test   eax,eax
  40debf:	mov    rsi,rax
  40dec2:	jne    0x40e204
  40dec8:	lea    r8,[rip+0x13c64]        # 0x421b33
  40decf:	lea    rdx,[rip+0x1407a]        # 0x421f50
  40ded6:	mov    rcx,r15
  40ded9:	call   0x40ac10
  40dede:	mov    rdi,QWORD PTR [rsp+0x58]
  40dee3:	mov    rcx,rdi
  40dee6:	call   0x412490
  40deeb:	mov    ecx,DWORD PTR [rbx+0x7c]
  40deee:	call   0x412370
  40def3:	lea    rdx,[rip+0x13105]        # 0x420fff
  40defa:	movsx  r8d,al
  40defe:	mov    rcx,rdi
  40df01:	call   0x412478
  40df06:	mov    r8,QWORD PTR [rsp+0xc0]
  40df0e:	lea    rdx,[rip+0x1404f]        # 0x421f64
  40df15:	mov    rcx,r15
  40df18:	call   0x40a930
  40df1d:	movsxd rax,DWORD PTR [r15+0x2c]
  40df21:	movsxd rsi,DWORD PTR [rbx+0xe0]
  40df28:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40df2d:	mov    ecx,DWORD PTR [rax+0x58]
  40df30:	test   ecx,ecx
  40df32:	jne    0x40df53
  40df34:	mov    rcx,QWORD PTR [rax+0x50]
  40df38:	lea    rdx,[rip+0x1402f]        # 0x421f6e
  40df3f:	xor    r9d,r9d
  40df42:	xor    r8d,r8d
  40df45:	call   0x412438
  40df4a:	test   rax,rax
  40df4d:	je     0x40e711
  40df53:	mov    rax,QWORD PTR [r15+0x8]
  40df57:	mov    r8,rsi
  40df5a:	lea    rdx,[rip+0x1400d]        # 0x421f6e
  40df61:	mov    rcx,r15
  40df64:	call   QWORD PTR [rax+0x38]
  40df67:	movsxd rax,DWORD PTR [r15+0x2c]
  40df6b:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40df71:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40df76:	movsxd rsi,DWORD PTR [rbx+0xe4]
  40df7d:	mov    edx,DWORD PTR [rax+0x58]
  40df80:	test   edx,edx
  40df82:	jne    0x40dfa3
  40df84:	mov    rcx,QWORD PTR [rax+0x50]
  40df88:	lea    rdx,[rip+0x13ff4]        # 0x421f83
  40df8f:	xor    r9d,r9d
  40df92:	xor    r8d,r8d
  40df95:	call   0x412438
  40df9a:	test   rax,rax
  40df9d:	je     0x40e708
  40dfa3:	mov    rax,QWORD PTR [r15+0x8]
  40dfa7:	mov    r8,rsi
  40dfaa:	lea    rdx,[rip+0x13fd2]        # 0x421f83
  40dfb1:	mov    rcx,r15
  40dfb4:	call   QWORD PTR [rax+0x38]
  40dfb7:	movsxd rax,DWORD PTR [r15+0x2c]
  40dfbb:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40dfc1:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40dfc6:	movsxd rsi,DWORD PTR [rbx+0x188]
  40dfcd:	mov    r14d,DWORD PTR [rax+0x58]
  40dfd1:	test   r14d,r14d
  40dfd4:	jne    0x40dff5
  40dfd6:	mov    rcx,QWORD PTR [rax+0x50]
  40dfda:	lea    rdx,[rip+0x13fb9]        # 0x421f9a
  40dfe1:	xor    r9d,r9d
  40dfe4:	xor    r8d,r8d
  40dfe7:	call   0x412438
  40dfec:	test   rax,rax
  40dfef:	je     0x40e6ff
  40dff5:	mov    rax,QWORD PTR [r15+0x8]
  40dff9:	mov    r8,rsi
  40dffc:	lea    rdx,[rip+0x13f97]        # 0x421f9a
  40e003:	mov    rcx,r15
  40e006:	call   QWORD PTR [rax+0x38]
  40e009:	movsxd rax,DWORD PTR [r15+0x2c]
  40e00d:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40e013:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40e018:	movsxd rsi,DWORD PTR [rbx+0x18c]
  40e01f:	mov    r13d,DWORD PTR [rax+0x58]
  40e023:	test   r13d,r13d
  40e026:	jne    0x40e047
  40e028:	mov    rcx,QWORD PTR [rax+0x50]
  40e02c:	lea    rdx,[rip+0x13f78]        # 0x421fab
  40e033:	xor    r9d,r9d
  40e036:	xor    r8d,r8d
  40e039:	call   0x412438
  40e03e:	test   rax,rax
  40e041:	je     0x40e6e9
  40e047:	mov    rax,QWORD PTR [r15+0x8]
  40e04b:	mov    r8,rsi
  40e04e:	lea    rdx,[rip+0x13f56]        # 0x421fab
  40e055:	mov    rcx,r15
  40e058:	call   QWORD PTR [rax+0x38]
  40e05b:	movsxd rax,DWORD PTR [r15+0x2c]
  40e05f:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40e065:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40e06a:	movsxd rsi,DWORD PTR [rbx+0x184]
  40e071:	mov    r12d,DWORD PTR [rax+0x58]
  40e075:	test   r12d,r12d
  40e078:	jne    0x40e099
  40e07a:	mov    rcx,QWORD PTR [rax+0x50]
  40e07e:	lea    rdx,[rip+0x13f36]        # 0x421fbb
  40e085:	xor    r9d,r9d
  40e088:	xor    r8d,r8d
  40e08b:	call   0x412438
  40e090:	test   rax,rax
  40e093:	je     0x40d66d
  40e099:	mov    rax,QWORD PTR [r15+0x8]
  40e09d:	mov    r8,rsi
  40e0a0:	lea    rdx,[rip+0x13f14]        # 0x421fbb
  40e0a7:	mov    rcx,r15
  40e0aa:	call   QWORD PTR [rax+0x38]
  40e0ad:	movsxd rax,DWORD PTR [r15+0x2c]
  40e0b1:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40e0b7:	jmp    0x40d66d
  40e0bc:	nop    DWORD PTR [rax+0x0]
  40e0c0:	pxor   xmm1,xmm1
  40e0c4:	lea    rdi,[rsp+0x8c0]
  40e0cc:	pxor   xmm2,xmm2
  40e0d0:	lea    rdx,[rsp+0x90]
  40e0d8:	pxor   xmm0,xmm0
  40e0dc:	mov    rcx,rdi
  40e0df:	cvtsi2sd xmm1,DWORD PTR [rsi+0x30]
  40e0e4:	cvtsi2sd xmm2,DWORD PTR [rsi+0x34]
  40e0e9:	divsd  xmm1,xmm2
  40e0ed:	cvtsi2sd xmm0,rax
  40e0f2:	lea    rax,[rip+0x16f55]        # 0x42504e
  40e0f9:	mov    QWORD PTR [rsp+0x98],rax
  40e101:	mulsd  xmm0,xmm1
  40e105:	movq   QWORD PTR [rsp+0x90],xmm0
  40e10e:	call   0x409790
  40e113:	lea    rdx,[rip+0x13dfb]        # 0x421f15
  40e11a:	mov    r8,rdi
  40e11d:	mov    rcx,r15
  40e120:	call   0x40a930
  40e125:	mov    rcx,rbx
  40e128:	call   0x4123d8
  40e12d:	cmp    rax,0xffffffffffffffff
  40e131:	jne    0x40d5a3
  40e137:	lea    r8,[rip+0x139f5]        # 0x421b33
  40e13e:	lea    rdx,[rip+0x13de2]        # 0x421f27
  40e145:	mov    rcx,r15
  40e148:	call   0x40ac10
  40e14d:	mov    rcx,rbx
  40e150:	call   0x4123d0
  40e155:	cmp    eax,0xffffffff
  40e158:	jne    0x40d5f2
  40e15e:	lea    r8,[rip+0x139ce]        # 0x421b33
  40e165:	lea    rdx,[rip+0x13dc6]        # 0x421f32
  40e16c:	mov    rcx,r15
  40e16f:	call   0x40ac10
  40e174:	jmp    0x40d655
  40e179:	nop    DWORD PTR [rax+0x0]
  40e180:	movsxd rax,DWORD PTR [r15+0x2c]
  40e184:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40e189:	mov    r11d,DWORD PTR [rax+0x58]
  40e18d:	test   r11d,r11d
  40e190:	je     0x40e2f4
  40e196:	mov    rax,QWORD PTR [r15+0x8]
  40e19a:	mov    r8,rdi
  40e19d:	lea    rdx,[rip+0x13d64]        # 0x421f08
  40e1a4:	mov    rcx,r15
  40e1a7:	call   QWORD PTR [rax+0x38]
  40e1aa:	movsxd rax,DWORD PTR [r15+0x2c]
  40e1ae:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40e1b4:	jmp    0x40d56a
  40e1b9:	nop    DWORD PTR [rax+0x0]
  40e1c0:	cmp    r9d,0xd
  40e1c4:	je     0x40e653
  40e1ca:	add    DWORD PTR [r15+0x28ac],0x1
  40e1d2:	jmp    0x40ddc0
  40e1d7:	nop    WORD PTR [rax+rax*1+0x0]
  40e1e0:	mov    rcx,QWORD PTR [rax+0x50]
  40e1e4:	lea    rdx,[rip+0x13de7]        # 0x421fd2
  40e1eb:	xor    r9d,r9d
  40e1ee:	xor    r8d,r8d
  40e1f1:	call   0x412438
  40e1f6:	test   rax,rax
  40e1f9:	jne    0x40d8eb
  40e1ff:	jmp    0x40d909
  40e204:	lea    rdi,[rsp+0x8c0]
  40e20c:	mov    rbp,rax
  40e20f:	xor    edx,edx
  40e211:	mov    r8d,0x1
  40e217:	sar    rbp,0x20
  40e21b:	mov    rcx,rdi
  40e21e:	call   0x412480
  40e223:	lea    rdx,[rip+0x13956]        # 0x421b80
  40e22a:	mov    r8d,esi
  40e22d:	mov    rcx,rdi
  40e230:	mov    DWORD PTR [rsp+0x20],ebp
  40e234:	mov    r9d,0x3a
  40e23a:	call   0x412478
  40e23f:	mov    r8,QWORD PTR [rsp+0x8c0]
  40e247:	lea    rdx,[rip+0x13d02]        # 0x421f50
  40e24e:	mov    rcx,r15
  40e251:	call   0x40a930
  40e256:	jmp    0x40dede
  40e25b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e260:	mov    rcx,QWORD PTR [rax+0x50]
  40e264:	lea    rdx,[rip+0x13cd6]        # 0x421f41
  40e26b:	xor    r9d,r9d
  40e26e:	xor    r8d,r8d
  40e271:	call   0x412438
  40e276:	test   rax,rax
  40e279:	jne    0x40de6e
  40e27f:	jmp    0x40de8c
  40e284:	mov    rcx,QWORD PTR [rax+0x50]
  40e288:	lea    rdx,[rip+0x13cac]        # 0x421f3b
  40e28f:	xor    r9d,r9d
  40e292:	xor    r8d,r8d
  40e295:	call   0x412438
  40e29a:	test   rax,rax
  40e29d:	jne    0x40de3a
  40e2a3:	movsxd rax,DWORD PTR [r15+0x2c]
  40e2a7:	jmp    0x40de58
  40e2ac:	nop    DWORD PTR [rax+0x0]
  40e2b0:	lea    r8,[rip+0x13bd7]        # 0x421e8e
  40e2b7:	lea    rdx,[rip+0x13d28]        # 0x421fe6
  40e2be:	mov    rcx,r15
  40e2c1:	call   0x40ac10
  40e2c6:	jmp    0x40d66d
  40e2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e2d0:	mov    rcx,QWORD PTR [rax+0x50]
  40e2d4:	lea    rdx,[rip+0x13d02]        # 0x421fdd
  40e2db:	xor    r9d,r9d
  40e2de:	xor    r8d,r8d
  40e2e1:	call   0x412438
  40e2e6:	test   rax,rax
  40e2e9:	jne    0x40d928
  40e2ef:	jmp    0x40d946
  40e2f4:	mov    rcx,QWORD PTR [rax+0x50]
  40e2f8:	lea    rdx,[rip+0x13c09]        # 0x421f08
  40e2ff:	xor    r9d,r9d
  40e302:	xor    r8d,r8d
  40e305:	call   0x412438
  40e30a:	test   rax,rax
  40e30d:	jne    0x40e196
  40e313:	jmp    0x40d56a
  40e318:	mov    rax,QWORD PTR [r15+0x20]
  40e31c:	mov    DWORD PTR [r15+0x30],0x0
  40e324:	add    rax,0x300
  40e32a:	mov    QWORD PTR [r15+0x58],rax
  40e32e:	jmp    0x40da18
  40e333:	movsxd rax,DWORD PTR [r15+0x2c]
  40e337:	jmp    0x40d45c
  40e33c:	nop    DWORD PTR [rax+0x0]
  40e340:	xor    edx,edx
  40e342:	mov    r8d,0x1
  40e348:	mov    rcx,r13
  40e34b:	call   0x412480
  40e350:	mov    rdi,QWORD PTR [rsp+0xb8]
  40e358:	lea    rdx,[rip+0x13137]        # 0x421496
  40e35f:	mov    rcx,r13
  40e362:	mov    r12,rbx
  40e365:	call   0x412478
  40e36a:	cmp    rdi,rbx
  40e36d:	je     0x40e38d
  40e36f:	nop
  40e370:	movzx  r8d,BYTE PTR [r12]
  40e375:	lea    rdx,[rip+0x13166]        # 0x4214e2
  40e37c:	mov    rcx,r13
  40e37f:	add    r12,0x1
  40e383:	call   0x412478
  40e388:	cmp    r12,rdi
  40e38b:	jne    0x40e370
  40e38d:	mov    r9,QWORD PTR [rsp+0x8c0]
  40e395:	lea    r8,[rip+0x132e4]        # 0x421680
  40e39c:	mov    QWORD PTR [rsp+0x20],rsi
  40e3a1:	mov    edx,0x30
  40e3a6:	mov    rcx,r15
  40e3a9:	call   0x412308
  40e3ae:	mov    eax,DWORD PTR [r15+0x28b4]
  40e3b5:	add    DWORD PTR [rsp+0x60],0x1
  40e3ba:	test   eax,eax
  40e3bc:	je     0x40e3f0
  40e3be:	cmp    eax,0x1
  40e3c1:	jne    0x40e3e2
  40e3c3:	mov    r8,QWORD PTR [r15+0x28b8]
  40e3ca:	mov    rcx,QWORD PTR [rsp+0x30]
  40e3cf:	lea    rdx,[rip+0x12c10]        # 0x420fe6
  40e3d6:	call   0x412478
  40e3db:	mov    eax,DWORD PTR [r15+0x28b4]
  40e3e2:	cmp    eax,0x2
  40e3e5:	jne    0x40db55
  40e3eb:	jmp    0x40db3d
  40e3f0:	lea    r8,[rip+0x132b9]        # 0x4216b0
  40e3f7:	mov    edx,0x10
  40e3fc:	mov    rcx,r15
  40e3ff:	mov    r9,rsi
  40e402:	mov    rbx,QWORD PTR [rsp+0xd18]
  40e40a:	call   0x412308
  40e40f:	mov    rcx,QWORD PTR [rsp+0x30]
  40e414:	lea    rdx,[rsp+0xa8]
  40e41c:	call   0x412488
  40e421:	mov    rax,QWORD PTR [r14+0x48]
  40e425:	lea    r8,[rip+0x13bec]        # 0x422018
  40e42c:	mov    edx,0x10
  40e431:	mov    r9,rsi
  40e434:	mov    rcx,r15
  40e437:	mov    QWORD PTR [rsp+0x28],rax
  40e43c:	mov    rax,QWORD PTR [rsp+0x50]
  40e441:	mov    QWORD PTR [rsp+0x20],rax
  40e446:	call   0x412308
  40e44b:	mov    rcx,QWORD PTR [rsp+0xa8]
  40e453:	call   0x4123c0
  40e458:	mov    rcx,QWORD PTR [rsp+0xb0]
  40e460:	call   0x4123c0
  40e465:	movsxd rdx,DWORD PTR [r15+0x2c]
  40e469:	add    DWORD PTR [r15+rdx*4+0x30],0x1
  40e46f:	mov    rax,rdx
  40e472:	lea    rcx,[r15+rdx*8]
  40e476:	test   eax,eax
  40e478:	mov    r8,QWORD PTR [rcx+0x58]
  40e47c:	mov    r8d,DWORD PTR [r8]
  40e47f:	je     0x40e49b
  40e481:	mov    rcx,QWORD PTR [rcx+0x50]
  40e485:	mov    ecx,DWORD PTR [rcx]
  40e487:	cmp    ecx,0xffffffff
  40e48a:	je     0x40e49b
  40e48c:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  40e492:	cmp    ecx,0xf
  40e495:	je     0x40e660
  40e49b:	mov    rdx,QWORD PTR [r15+0x8]
  40e49f:	mov    rdx,QWORD PTR [rdx+0x30]
  40e4a3:	test   rdx,rdx
  40e4a6:	je     0x40e4b1
  40e4a8:	mov    rcx,r15
  40e4ab:	call   rdx
  40e4ad:	mov    eax,DWORD PTR [r15+0x2c]
  40e4b1:	sub    eax,0x1
  40e4b4:	mov    DWORD PTR [r15+0x2c],eax
  40e4b8:	jmp    0x40d67f
  40e4bd:	nop    DWORD PTR [rax]
  40e4c0:	mov    rcx,QWORD PTR [r14+0x50]
  40e4c4:	xor    r9d,r9d
  40e4c7:	xor    r8d,r8d
  40e4ca:	mov    rdx,rsi
  40e4cd:	call   0x412438
  40e4d2:	test   rax,rax
  40e4d5:	jne    0x40dac8
  40e4db:	jmp    0x40da80
  40e4e0:	xor    edx,edx
  40e4e2:	mov    r8d,0x1
  40e4e8:	mov    rcx,r13
  40e4eb:	call   0x412480
  40e4f0:	mov    rsi,QWORD PTR [rsp+0xb8]
  40e4f8:	lea    rdx,[rip+0x12f97]        # 0x421496
  40e4ff:	mov    rcx,r13
  40e502:	mov    r14,rbx
  40e505:	call   0x412478
  40e50a:	cmp    rsi,rbx
  40e50d:	je     0x40e52c
  40e50f:	nop
  40e510:	movzx  r8d,BYTE PTR [r14]
  40e514:	lea    rdx,[rip+0x12fc7]        # 0x4214e2
  40e51b:	mov    rcx,r13
  40e51e:	add    r14,0x1
  40e522:	call   0x412478
  40e527:	cmp    r14,rsi
  40e52a:	jne    0x40e510
  40e52c:	mov    rax,QWORD PTR [rsp+0x50]
  40e531:	mov    r9,QWORD PTR [rsp+0x8c0]
  40e539:	lea    r8,[rip+0x13140]        # 0x421680
  40e540:	mov    edx,0x30
  40e545:	mov    rcx,r15
  40e548:	mov    QWORD PTR [rsp+0x20],rax
  40e54d:	call   0x412308
  40e552:	mov    eax,DWORD PTR [r15+0x28b4]
  40e559:	add    DWORD PTR [rsp+0x38],0x1
  40e55e:	test   eax,eax
  40e560:	je     0x40e594
  40e562:	cmp    eax,0x1
  40e565:	jne    0x40e586
  40e567:	mov    r8,QWORD PTR [r15+0x28b8]
  40e56e:	mov    rcx,QWORD PTR [rsp+0x30]
  40e573:	lea    rdx,[rip+0x12a6c]        # 0x420fe6
  40e57a:	call   0x412478
  40e57f:	mov    eax,DWORD PTR [r15+0x28b4]
  40e586:	cmp    eax,0x2
  40e589:	jne    0x40dc15
  40e58f:	jmp    0x40dbfd
  40e594:	mov    r9,QWORD PTR [rsp+0x50]
  40e599:	lea    r8,[rip+0x13110]        # 0x4216b0
  40e5a0:	mov    rcx,r15
  40e5a3:	mov    edx,0x10
  40e5a8:	mov    rsi,QWORD PTR [rsp+0x60]
  40e5ad:	mov    r14,QWORD PTR [rsp+0x70]
  40e5b2:	mov    rbx,QWORD PTR [rsp+0xd18]
  40e5ba:	call   0x412308
  40e5bf:	mov    rcx,QWORD PTR [rsp+0x30]
  40e5c4:	lea    rdx,[rsp+0xb0]
  40e5cc:	call   0x412488
  40e5d1:	jmp    0x40e421
  40e5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e5e0:	cmp    r8d,0xd
  40e5e4:	je     0x40e6ad
  40e5ea:	add    DWORD PTR [r15+0x28ac],0x1
  40e5f2:	jmp    0x40dd6c
  40e5f7:	nop    WORD PTR [rax+rax*1+0x0]
  40e600:	mov    rcx,QWORD PTR [rax+0x50]
  40e604:	lea    rdx,[rip+0x13927]        # 0x421f32
  40e60b:	xor    r9d,r9d
  40e60e:	xor    r8d,r8d
  40e611:	call   0x412438
  40e616:	test   rax,rax
  40e619:	jne    0x40d637
  40e61f:	jmp    0x40d655
  40e624:	lea    r8,[rip+0x13863]        # 0x421e8e
  40e62b:	lea    rdx,[rip+0x1380f]        # 0x421e41
  40e632:	mov    rcx,r15
  40e635:	call   0x40ac10
  40e63a:	jmp    0x40d40a
  40e63f:	movsxd rdx,DWORD PTR [r15+0x2c]
  40e643:	mov    rbx,QWORD PTR [rsp+0xd18]
  40e64b:	mov    rax,rdx
  40e64e:	jmp    0x40e472
  40e653:	add    DWORD PTR [r15+0x28a8],0x1
  40e65b:	jmp    0x40ddc0
  40e660:	cmp    r8d,0xd
  40e664:	je     0x40e6f2
  40e66a:	add    DWORD PTR [r15+0x28ac],0x1
  40e672:	jmp    0x40e49b
  40e677:	lea    r8,[rip+0x13810]        # 0x421e8e
  40e67e:	lea    rdx,[rip+0x13942]        # 0x421fc7
  40e685:	mov    rcx,r15
  40e688:	call   0x40ac10
  40e68d:	jmp    0x40d8d3
  40e692:	lea    r8,[rip+0x137f5]        # 0x421e8e
  40e699:	lea    rdx,[rip+0x138a8]        # 0x421f48
  40e6a0:	mov    rcx,r15
  40e6a3:	call   0x40ac10
  40e6a8:	jmp    0x40deaf
  40e6ad:	add    DWORD PTR [r15+0x28a8],0x1
  40e6b5:	jmp    0x40dd6c
  40e6ba:	mov    rax,QWORD PTR [r15+0x28b8]
  40e6c1:	mov    r9d,DWORD PTR [rsp+0x60]
  40e6c6:	lea    r8,[rip+0x13013]        # 0x4216e0
  40e6cd:	mov    QWORD PTR [rsp+0x20],rsi
  40e6d2:	mov    edx,0x18
  40e6d7:	mov    rcx,r15
  40e6da:	mov    QWORD PTR [rsp+0x28],rax
  40e6df:	call   0x412308
  40e6e4:	jmp    0x40db7a
  40e6e9:	movsxd rax,DWORD PTR [r15+0x2c]
  40e6ed:	jmp    0x40e065
  40e6f2:	add    DWORD PTR [r15+0x28a8],0x1
  40e6fa:	jmp    0x40e49b
  40e6ff:	movsxd rax,DWORD PTR [r15+0x2c]
  40e703:	jmp    0x40e013
  40e708:	movsxd rax,DWORD PTR [r15+0x2c]
  40e70c:	jmp    0x40dfc1
  40e711:	movsxd rax,DWORD PTR [r15+0x2c]
  40e715:	jmp    0x40df71
  40e71a:	mov    rax,QWORD PTR [r15+0x28b8]
  40e721:	mov    r9d,DWORD PTR [rsp+0x38]
  40e726:	lea    r8,[rip+0x12fb3]        # 0x4216e0
  40e72d:	mov    edx,0x18
  40e732:	mov    rcx,r15
  40e735:	mov    QWORD PTR [rsp+0x28],rax
  40e73a:	mov    rax,QWORD PTR [rsp+0x50]
  40e73f:	mov    QWORD PTR [rsp+0x20],rax
  40e744:	call   0x412308
  40e749:	jmp    0x40dc42
  40e74e:	call   0x419e29
  40e753:	call   0x419910
  40e758:	nop
  40e759:	nop    DWORD PTR [rax+0x0]
  40e760:	push   r15
  40e762:	push   r14
  40e764:	push   r13
  40e766:	push   r12
  40e768:	push   rbp
  40e769:	push   rdi
  40e76a:	push   rsi
  40e76b:	push   rbx
  40e76c:	sub    rsp,0xa18
  40e773:	mov    r10d,DWORD PTR [r8+0x1c]
  40e777:	mov    rax,QWORD PTR [r8+0x10]
  40e77b:	mov    r13,rcx
  40e77e:	mov    r15,rdx
  40e781:	mov    QWORD PTR [rsp+0xa70],r8
  40e789:	mov    QWORD PTR [rsp+0xa78],r9
  40e791:	mov    QWORD PTR [rsp+0xa8],0x0
  40e79d:	test   r10d,r10d
  40e7a0:	mov    QWORD PTR [rsp+0x60],rax
  40e7a5:	mov    DWORD PTR [rsp+0x4c],0x0
  40e7ad:	je     0x40e7bf
  40e7af:	mov    r9d,DWORD PTR [r8+0x24]
  40e7b3:	xor    eax,eax
  40e7b5:	test   r9d,r9d
  40e7b8:	sete   al
  40e7bb:	mov    DWORD PTR [rsp+0x4c],eax
  40e7bf:	lea    r14,[rsp+0xd0]
  40e7c7:	mov    rcx,r14
  40e7ca:	call   0x412100
  40e7cf:	lea    r8,[rip+0x1387c]        # 0x422052
  40e7d6:	xor    ecx,ecx
  40e7d8:	mov    edx,0x28
  40e7dd:	call   0x412308
  40e7e2:	mov    rcx,QWORD PTR [rsp+0xa70]
  40e7ea:	mov    edx,0x28
  40e7ef:	call   0x409c80
  40e7f4:	mov    rax,QWORD PTR [rsp+0xa70]
  40e7fc:	mov    r8d,DWORD PTR [rax+0x18]
  40e800:	test   r8d,r8d
  40e803:	je     0x40fa47
  40e809:	mov    ecx,DWORD PTR [rax+0x20]
  40e80c:	test   ecx,ecx
  40e80e:	jne    0x40eca0
  40e814:	mov    rax,QWORD PTR [rsp+0xa70]
  40e81c:	mov    rbx,QWORD PTR [rax+0x8]
  40e820:	movabs rax,0x8000000000000000
  40e82a:	mov    QWORD PTR [rsp+0xb0],0x0
  40e836:	mov    QWORD PTR [rsp+0xb8],0x0
  40e842:	cmp    rbx,rax
  40e845:	mov    QWORD PTR [rsp+0xc0],0x0
  40e851:	mov    QWORD PTR [rsp+0xc8],0x0
  40e85d:	je     0x40fa78
  40e863:	pxor   xmm0,xmm0
  40e867:	lea    rsi,[rsp+0xb0]
  40e86f:	lea    r8,[rip+0x12c98]        # 0x42150e
  40e876:	mov    edx,0x20
  40e87b:	mov    rcx,rsi
  40e87e:	cvtsi2sd xmm0,rbx
  40e883:	mulsd  xmm0,QWORD PTR [rip+0x16a25]        # 0x4252b0
  40e88b:	movapd xmm3,xmm0
  40e88f:	movq   r9,xmm0
  40e894:	call   0x409180
  40e899:	lea    r8,[rip+0x13820]        # 0x4220c0
  40e8a0:	xor    ecx,ecx
  40e8a2:	mov    r9,rsi
  40e8a5:	mov    edx,0x28
  40e8aa:	call   0x412308
  40e8af:	movabs rax,0x7fffffffffffffff
  40e8b9:	mov    DWORD PTR [rsp+0x28],0x0
  40e8c1:	mov    r9,rbx
  40e8c4:	mov    QWORD PTR [rsp+0x20],rax
  40e8c9:	movabs r8,0x8000000000000001
  40e8d3:	mov    edx,0xffffffff
  40e8d8:	mov    rcx,r15
  40e8db:	call   0x411fe0
  40e8e0:	test   eax,eax
  40e8e2:	mov    DWORD PTR [rsp+0x54],eax
  40e8e6:	js     0x40fa99
  40e8ec:	call   0x412410
  40e8f1:	test   rax,rax
  40e8f4:	mov    QWORD PTR [rsp+0xa8],rax
  40e8fc:	je     0x40f9d1
  40e902:	movabs rax,0x8000000000000001
  40e90c:	lea    rbp,[rsp+0x210]
  40e914:	lea    r12,[rsp+0x610]
  40e91c:	mov    QWORD PTR [rsp+0x68],rax
  40e921:	lea    rax,[rsp+0x130]
  40e929:	mov    QWORD PTR [rsp+0x40],r14
  40e92e:	mov    DWORD PTR [rsp+0x50],0x0
  40e936:	mov    r14,rbp
  40e939:	mov    DWORD PTR [rsp+0x58],0x0
  40e941:	mov    QWORD PTR [rsp+0x38],rax
  40e946:	lea    rax,[rsp+0x90]
  40e94e:	mov    rbp,r12
  40e951:	mov    r12,QWORD PTR [rsp+0xa70]
  40e959:	mov    QWORD PTR [rsp+0x70],rax
  40e95e:	lea    rax,[rsp+0x6d0]
  40e966:	mov    QWORD PTR [rsp+0x78],rax
  40e96b:	jmp    0x40e9ac
  40e96d:	nop    DWORD PTR [rax]
  40e970:	cmp    r10d,0x3
  40e974:	je     0x40ecf0
  40e97a:	test   r10d,r10d
  40e97d:	je     0x40ecd0
  40e983:	cmp    eax,0x0
  40e986:	mov    edx,0x0
  40e98b:	cmovle edx,eax
  40e98e:	movsxd rcx,edx
  40e991:	add    QWORD PTR [rsp+0x148],rcx
  40e999:	sub    eax,edx
  40e99b:	mov    DWORD PTR [rsp+0x150],eax
  40e9a2:	mov    rcx,QWORD PTR [rsp+0x40]
  40e9a7:	call   0x412120
  40e9ac:	mov    rdx,QWORD PTR [rsp+0x40]
  40e9b1:	mov    rcx,r15
  40e9b4:	call   0x412038
  40e9b9:	test   eax,eax
  40e9bb:	jne    0x40f31c
  40e9c1:	mov    edx,DWORD PTR [r15+0x2c]
  40e9c5:	cmp    edx,DWORD PTR [rip+0x1a915]        # 0x4292e0
  40e9cb:	ja     0x40edc5
  40e9d1:	movsxd rax,DWORD PTR [rsp+0xf4]
  40e9d9:	mov    rdx,QWORD PTR [rip+0x1a8e8]        # 0x4292c8
  40e9e0:	mov    edx,DWORD PTR [rdx+rax*4]
  40e9e3:	test   edx,edx
  40e9e5:	je     0x40e9a2
  40e9e7:	mov    rdx,QWORD PTR [r15+0x30]
  40e9eb:	mov    rcx,QWORD PTR [rsp+0xd8]
  40e9f3:	lea    rsi,[rax*8+0x0]
  40e9fb:	mov    rbx,QWORD PTR [rdx+rax*8]
  40e9ff:	movabs rax,0x8000000000000000
  40ea09:	cmp    rcx,rax
  40ea0c:	mov    rdx,QWORD PTR [rbx+0x30]
  40ea10:	je     0x40ea2c
  40ea12:	movabs r8,0xf424000000001
  40ea1c:	call   0x412228
  40ea21:	mov    rdi,QWORD PTR [rsp+0xa78]
  40ea29:	mov    QWORD PTR [rdi],rax
  40ea2c:	mov    eax,DWORD PTR [rsp+0x50]
  40ea30:	test   eax,eax
  40ea32:	jne    0x40ea5f
  40ea34:	mov    rax,QWORD PTR [rsp+0xa78]
  40ea3c:	movabs rdx,0x8000000000000000
  40ea46:	mov    rax,QWORD PTR [rax]
  40ea49:	cmp    rax,rdx
  40ea4c:	je     0x40ed10
  40ea52:	mov    QWORD PTR [rsp+0x68],rax
  40ea57:	mov    DWORD PTR [rsp+0x50],0x1
  40ea5f:	cmp    DWORD PTR [rsp+0x4c],0x1
  40ea64:	je     0x40ed10
  40ea6a:	mov    eax,DWORD PTR [r12+0x24]
  40ea6f:	test   eax,eax
  40ea71:	je     0x40eea2
  40ea77:	mov    rax,QWORD PTR [r12+0x10]
  40ea7c:	mov    rdi,QWORD PTR [rsp+0x68]
  40ea81:	add    rdi,rax
  40ea84:	mov    QWORD PTR [rsp+0x60],rdi
  40ea89:	mov    edi,DWORD PTR [r12+0x28]
  40ea8e:	test   edi,edi
  40ea90:	je     0x40ed71
  40ea96:	mov    DWORD PTR [rsp+0x4c],0x1
  40ea9e:	movsxd rdx,DWORD PTR [rsp+0x58]
  40eaa3:	cmp    rdx,rax
  40eaa6:	jge    0x40f31c
  40eaac:	nop    DWORD PTR [rax+0x0]
  40eab0:	mov    r8d,DWORD PTR [rip+0x1a8d5]        # 0x42938c
  40eab7:	add    DWORD PTR [rsp+0x58],0x1
  40eabc:	test   r8d,r8d
  40eabf:	je     0x40eada
  40eac1:	mov    ecx,DWORD PTR [rip+0x1a8b1]        # 0x429378
  40eac7:	test   ecx,ecx
  40eac9:	jne    0x40eeb0
  40eacf:	add    rsi,QWORD PTR [rip+0x1a802]        # 0x4292d8
  40ead6:	add    QWORD PTR [rsi],0x1
  40eada:	mov    r10d,DWORD PTR [rip+0x1a8af]        # 0x429390
  40eae1:	test   r10d,r10d
  40eae4:	je     0x40e9a2
  40eaea:	mov    rax,QWORD PTR [rsp+0xd0]
  40eaf2:	mov    QWORD PTR [rsp+0x130],rax
  40eafa:	mov    rax,QWORD PTR [rsp+0xd8]
  40eb02:	mov    QWORD PTR [rsp+0x138],rax
  40eb0a:	mov    rax,QWORD PTR [rsp+0xe0]
  40eb12:	mov    QWORD PTR [rsp+0x140],rax
  40eb1a:	mov    rax,QWORD PTR [rsp+0xe8]
  40eb22:	mov    QWORD PTR [rsp+0x148],rax
  40eb2a:	mov    rax,QWORD PTR [rsp+0xf0]
  40eb32:	mov    QWORD PTR [rsp+0x150],rax
  40eb3a:	mov    rax,QWORD PTR [rsp+0xf8]
  40eb42:	mov    QWORD PTR [rsp+0x158],rax
  40eb4a:	mov    rax,QWORD PTR [rsp+0x100]
  40eb52:	mov    QWORD PTR [rsp+0x160],rax
  40eb5a:	mov    rax,QWORD PTR [rsp+0x108]
  40eb62:	mov    QWORD PTR [rsp+0x168],rax
  40eb6a:	mov    rax,QWORD PTR [rsp+0x110]
  40eb72:	mov    QWORD PTR [rsp+0x170],rax
  40eb7a:	mov    rax,QWORD PTR [rsp+0x118]
  40eb82:	mov    QWORD PTR [rsp+0x178],rax
  40eb8a:	mov    rax,QWORD PTR [rsp+0x120]
  40eb92:	mov    QWORD PTR [rsp+0x180],rax
  40eb9a:	mov    rax,QWORD PTR [rsp+0x128]
  40eba2:	mov    QWORD PTR [rsp+0x188],rax
  40ebaa:	mov    eax,DWORD PTR [rsp+0x150]
  40ebb1:	test   eax,eax
  40ebb3:	je     0x40e9a2
  40ebb9:	movsxd rcx,DWORD PTR [rsp+0x154]
  40ebc1:	mov    rdx,QWORD PTR [r15+0x30]
  40ebc5:	mov    rsi,QWORD PTR [rsp+0xa8]
  40ebcd:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40ebd1:	mov    rbx,QWORD PTR [rdx+0x8]
  40ebd5:	mov    DWORD PTR [rsp+0x210],0x0
  40ebe0:	cmp    QWORD PTR [rbx+0x10],0x0
  40ebe5:	je     0x40ed40
  40ebeb:	mov    r10d,DWORD PTR [rbx+0xc]
  40ebef:	cmp    r10d,0x1
  40ebf3:	jne    0x40e970
  40ebf9:	mov    r9,QWORD PTR [rsp+0x38]
  40ebfe:	mov    r8,r14
  40ec01:	mov    rdx,rsi
  40ec04:	mov    rcx,rbx
  40ec07:	call   0x4120e0
  40ec0c:	test   eax,eax
  40ec0e:	js     0x40e9a2
  40ec14:	mov    edx,DWORD PTR [rsp+0x150]
  40ec1b:	mov    ecx,DWORD PTR [rsp+0x210]
  40ec22:	cmp    eax,edx
  40ec24:	cmovg  eax,edx
  40ec27:	sub    edx,eax
  40ec29:	movsxd r8,eax
  40ec2c:	add    QWORD PTR [rsp+0x148],r8
  40ec34:	test   ecx,ecx
  40ec36:	mov    DWORD PTR [rsp+0x150],edx
  40ec3d:	je     0x40e9a2
  40ec43:	cmp    DWORD PTR [rbx+0xc],0x3
  40ec47:	movsxd rax,DWORD PTR [rsp+0x154]
  40ec4f:	mov    rdx,QWORD PTR [rip+0x1a67a]        # 0x4292d0
  40ec56:	mov    r9d,DWORD PTR [rip+0x1a71f]        # 0x42937c
  40ec5d:	sete   r8b
  40ec61:	add    QWORD PTR [rdx+rax*8],0x1
  40ec66:	test   r9d,r9d
  40ec69:	je     0x40ed30
  40ec6f:	test   r8b,r8b
  40ec72:	je     0x40eda3
  40ec78:	mov    rdx,rbp
  40ec7b:	mov    rcx,r13
  40ec7e:	call   0x40cf20
  40ec83:	mov    rcx,rbp
  40ec86:	call   0x412078
  40ec8b:	mov    ecx,DWORD PTR [rsp+0x210]
  40ec92:	test   ecx,ecx
  40ec94:	jg     0x40ebaa
  40ec9a:	jmp    0x40e9a2
  40ec9f:	nop
  40eca0:	mov    rax,QWORD PTR [rsp+0xa78]
  40eca8:	mov    rbx,QWORD PTR [rax]
  40ecab:	movabs rax,0x8000000000000000
  40ecb5:	cmp    rbx,rax
  40ecb8:	je     0x40fb0c
  40ecbe:	mov    rax,QWORD PTR [rsp+0xa70]
  40ecc6:	add    rbx,QWORD PTR [rax+0x8]
  40ecca:	jmp    0x40e820
  40eccf:	nop
  40ecd0:	mov    r9,QWORD PTR [rsp+0x38]
  40ecd5:	mov    r8,r14
  40ecd8:	mov    rdx,rsi
  40ecdb:	mov    rcx,rbx
  40ecde:	call   0x4120d0
  40ece3:	jmp    0x40ec0c
  40ece8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ecf0:	mov    r9,QWORD PTR [rsp+0x38]
  40ecf5:	mov    r8,r14
  40ecf8:	mov    rdx,rbp
  40ecfb:	mov    rcx,rbx
  40ecfe:	call   0x4120d8
  40ed03:	jmp    0x40ec0c
  40ed08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed10:	mov    r11d,DWORD PTR [r12+0x24]
  40ed15:	test   r11d,r11d
  40ed18:	je     0x40ed63
  40ed1a:	mov    r10d,DWORD PTR [r12+0x28]
  40ed1f:	test   r10d,r10d
  40ed22:	je     0x40ed63
  40ed24:	mov    rax,QWORD PTR [r12+0x10]
  40ed29:	jmp    0x40ea9e
  40ed2e:	xchg   ax,ax
  40ed30:	test   r8b,r8b
  40ed33:	je     0x40ec92
  40ed39:	jmp    0x40ec83
  40ed3e:	xchg   ax,ax
  40ed40:	test   eax,eax
  40ed42:	mov    edx,0x0
  40ed47:	cmovle edx,eax
  40ed4a:	sub    eax,edx
  40ed4c:	movsxd rcx,edx
  40ed4f:	add    QWORD PTR [rsp+0x148],rcx
  40ed57:	mov    DWORD PTR [rsp+0x150],eax
  40ed5e:	jmp    0x40e9a2
  40ed63:	mov    r9d,DWORD PTR [rsp+0x4c]
  40ed68:	test   r9d,r9d
  40ed6b:	je     0x40eab0
  40ed71:	mov    rax,QWORD PTR [rsp+0xa78]
  40ed79:	mov    rax,QWORD PTR [rax]
  40ed7c:	cmp    rax,QWORD PTR [rsp+0x60]
  40ed81:	jl     0x40ed96
  40ed83:	movabs rdx,0x8000000000000000
  40ed8d:	cmp    rax,rdx
  40ed90:	jne    0x40f31c
  40ed96:	mov    DWORD PTR [rsp+0x4c],0x1
  40ed9e:	jmp    0x40eab0
  40eda3:	mov    rdx,QWORD PTR [r15+0x30]
  40eda7:	mov    rcx,r13
  40edaa:	mov    r9,r15
  40edad:	mov    r8,QWORD PTR [rdx+rax*8]
  40edb1:	mov    rdx,rsi
  40edb4:	call   0x40d340
  40edb9:	mov    ecx,DWORD PTR [rsp+0x210]
  40edc0:	jmp    0x40ec92
  40edc5:	lea    rcx,[rip+0x1a504]        # 0x4292d0
  40edcc:	mov    r8d,0x8
  40edd2:	call   0x412238
  40edd7:	test   eax,eax
  40edd9:	mov    DWORD PTR [rsp+0x54],eax
  40eddd:	js     0x40f9d9
  40ede3:	movsxd rax,DWORD PTR [rip+0x1a4f6]        # 0x4292e0
  40edea:	mov    rdx,QWORD PTR [rip+0x1a4df]        # 0x4292d0
  40edf1:	mov    r8d,DWORD PTR [r15+0x2c]
  40edf5:	lea    rcx,[rdx+rax*8]
  40edf9:	sub    r8d,eax
  40edfc:	xor    edx,edx
  40edfe:	shl    r8,0x3
  40ee02:	call   0x419878
  40ee07:	mov    edx,DWORD PTR [r15+0x2c]
  40ee0b:	lea    rcx,[rip+0x1a4c6]        # 0x4292d8
  40ee12:	mov    r8d,0x8
  40ee18:	call   0x412238
  40ee1d:	test   eax,eax
  40ee1f:	mov    DWORD PTR [rsp+0x54],eax
  40ee23:	js     0x40f9d9
  40ee29:	movsxd rax,DWORD PTR [rip+0x1a4b0]        # 0x4292e0
  40ee30:	mov    rdx,QWORD PTR [rip+0x1a4a1]        # 0x4292d8
  40ee37:	mov    r8d,DWORD PTR [r15+0x2c]
  40ee3b:	lea    rcx,[rdx+rax*8]
  40ee3f:	sub    r8d,eax
  40ee42:	xor    edx,edx
  40ee44:	shl    r8,0x3
  40ee48:	call   0x419878
  40ee4d:	mov    edx,DWORD PTR [r15+0x2c]
  40ee51:	lea    rcx,[rip+0x1a470]        # 0x4292c8
  40ee58:	mov    r8d,0x4
  40ee5e:	call   0x412238
  40ee63:	test   eax,eax
  40ee65:	mov    DWORD PTR [rsp+0x54],eax
  40ee69:	js     0x40f9d9
  40ee6f:	movsxd rax,DWORD PTR [rip+0x1a46a]        # 0x4292e0
  40ee76:	mov    rdx,QWORD PTR [rip+0x1a44b]        # 0x4292c8
  40ee7d:	mov    r8d,DWORD PTR [r15+0x2c]
  40ee81:	lea    rcx,[rdx+rax*4]
  40ee85:	sub    r8d,eax
  40ee88:	xor    edx,edx
  40ee8a:	shl    r8,0x2
  40ee8e:	call   0x419878
  40ee93:	mov    eax,DWORD PTR [r15+0x2c]
  40ee97:	mov    DWORD PTR [rip+0x1a443],eax        # 0x4292e0
  40ee9d:	jmp    0x40e9d1
  40eea2:	mov    DWORD PTR [rsp+0x4c],0x0
  40eeaa:	jmp    0x40eab0
  40eeaf:	nop
  40eeb0:	mov    edx,0x1
  40eeb5:	mov    r8d,0xffffffff
  40eebb:	mov    rcx,r14
  40eebe:	call   0x412480
  40eec3:	movsxd rdx,DWORD PTR [r13+0x2c]
  40eec7:	lea    eax,[rdx+0x1]
  40eeca:	cmp    eax,0x9
  40eecd:	mov    DWORD PTR [r13+0x2c],eax
  40eed1:	jg     0x40fb2c
  40eed7:	test   eax,eax
  40eed9:	je     0x40f2d5
  40eedf:	lea    rdx,[r13+rdx*8+0x0]
  40eee4:	cdqe   
  40eee6:	mov    rcx,QWORD PTR [rdx+0x58]
  40eeea:	mov    ecx,DWORD PTR [rcx]
  40eeec:	mov    DWORD PTR [r13+rax*4+0x30],0x0
  40eef5:	mov    rax,QWORD PTR [r13+0x20]
  40eef9:	add    rax,0x4e0
  40eeff:	cmp    ecx,0xf
  40ef02:	mov    QWORD PTR [rdx+0x60],rax
  40ef06:	jne    0x40ef16
  40ef08:	mov    eax,DWORD PTR [r13+0x28a8]
  40ef0f:	mov    DWORD PTR [r13+0x28b0],eax
  40ef16:	mov    rax,QWORD PTR [r13+0x8]
  40ef1a:	mov    rax,QWORD PTR [rax+0x28]
  40ef1e:	test   rax,rax
  40ef21:	je     0x40ef28
  40ef23:	mov    rcx,r13
  40ef26:	call   rax
  40ef28:	mov    rax,QWORD PTR [rbx+0x8]
  40ef2c:	mov    ecx,DWORD PTR [rax+0xc]
  40ef2f:	call   0x412378
  40ef34:	test   rax,rax
  40ef37:	mov    r8,rax
  40ef3a:	je     0x40fa10
  40ef40:	lea    rdx,[rip+0x131ce]        # 0x422115
  40ef47:	mov    rcx,r13
  40ef4a:	call   0x40a930
  40ef4f:	movsxd rax,DWORD PTR [r13+0x2c]
  40ef53:	movsxd rsi,DWORD PTR [rsp+0xf4]
  40ef5b:	mov    rax,QWORD PTR [r13+rax*8+0x58]
  40ef60:	mov    edx,DWORD PTR [rax+0x58]
  40ef63:	test   edx,edx
  40ef65:	jne    0x40ef82
  40ef67:	mov    rcx,QWORD PTR [rax+0x50]
  40ef6b:	lea    rdx,[rip+0x12f24]        # 0x421e96
  40ef72:	xor    r9d,r9d
  40ef75:	xor    r8d,r8d
  40ef78:	call   0x412438
  40ef7d:	test   rax,rax
  40ef80:	je     0x40efa0
  40ef82:	mov    rax,QWORD PTR [r13+0x8]
  40ef86:	mov    r8,rsi
  40ef89:	lea    rdx,[rip+0x12f06]        # 0x421e96
  40ef90:	mov    rcx,r13
  40ef93:	call   QWORD PTR [rax+0x38]
  40ef96:	movsxd rax,DWORD PTR [r13+0x2c]
  40ef9a:	add    DWORD PTR [r13+rax*4+0x30],0x1
  40efa0:	mov    r8,QWORD PTR [rsp+0xd8]
  40efa8:	lea    rdx,[rip+0x12e9d]        # 0x421e4c
  40efaf:	mov    rcx,r13
  40efb2:	add    rbx,0x30
  40efb6:	call   0x40b820
  40efbb:	mov    r8,QWORD PTR [rsp+0xd8]
  40efc3:	lea    rdx,[rip+0x12e86]        # 0x421e50
  40efca:	mov    r9,rbx
  40efcd:	mov    rcx,r13
  40efd0:	call   0x40c520
  40efd5:	mov    r8,QWORD PTR [rsp+0xe0]
  40efdd:	lea    rdx,[rip+0x1313c]        # 0x422120
  40efe4:	mov    rcx,r13
  40efe7:	call   0x40b820
  40efec:	mov    r8,QWORD PTR [rsp+0xe0]
  40eff4:	lea    rdx,[rip+0x13129]        # 0x422124
  40effb:	mov    r9,rbx
  40effe:	mov    rcx,r13
  40f001:	call   0x40c520
  40f006:	movsxd r8,DWORD PTR [rsp+0x10c]
  40f00e:	lea    rdx,[rip+0x13118]        # 0x42212d
  40f015:	mov    rcx,r13
  40f018:	call   0x40b760
  40f01d:	movsxd r8,DWORD PTR [rsp+0x10c]
  40f025:	lea    rdx,[rip+0x1310a]        # 0x422136
  40f02c:	mov    r9,rbx
  40f02f:	mov    rcx,r13
  40f032:	mov    DWORD PTR [rsp+0x20],0x1
  40f03a:	call   0x40c620
  40f03f:	mov    r8,QWORD PTR [rsp+0x128]
  40f047:	lea    rdx,[rip+0x130f6]        # 0x422144
  40f04e:	mov    rcx,r13
  40f051:	call   0x40b760
  40f056:	mov    r8,QWORD PTR [rsp+0x128]
  40f05e:	lea    rdx,[rip+0x130f4]        # 0x422159
  40f065:	mov    r9,rbx
  40f068:	mov    rcx,r13
  40f06b:	mov    DWORD PTR [rsp+0x20],0x1
  40f073:	call   0x40c620
  40f078:	movsxd rax,DWORD PTR [rsp+0xf0]
  40f080:	mov    rdx,QWORD PTR [rsp+0x70]
  40f085:	lea    rcx,[rsp+0x190]
  40f08d:	mov    QWORD PTR [rsp+0x90],rax
  40f095:	lea    rax,[rip+0x15faa]        # 0x425046
  40f09c:	mov    QWORD PTR [rsp+0x98],rax
  40f0a4:	call   0x409790
  40f0a9:	lea    rdx,[rip+0x130c3]        # 0x422173
  40f0b0:	mov    r8,rax
  40f0b3:	mov    rcx,r13
  40f0b6:	call   0x40a930
  40f0bb:	cmp    QWORD PTR [rsp+0x120],0xffffffffffffffff
  40f0c4:	je     0x40f93f
  40f0ca:	mov    rcx,r14
  40f0cd:	call   0x412490
  40f0d2:	mov    r8,QWORD PTR [rsp+0x120]
  40f0da:	lea    rdx,[rip+0x11f27]        # 0x421008
  40f0e1:	mov    rcx,r14
  40f0e4:	call   0x412478
  40f0e9:	mov    r8,QWORD PTR [rsp+0x210]
  40f0f1:	lea    rdx,[rip+0x13080]        # 0x422178
  40f0f8:	mov    rcx,r13
  40f0fb:	call   0x40a930
  40f100:	mov    rcx,r14
  40f103:	call   0x412490
  40f108:	mov    eax,DWORD PTR [rsp+0xf8]
  40f10f:	lea    rdx,[rip+0x11ee9]        # 0x420fff
  40f116:	mov    rcx,r14
  40f119:	and    eax,0x1
  40f11c:	cmp    eax,0x1
  40f11f:	sbb    r8d,r8d
  40f122:	and    r8d,0x14
  40f126:	add    r8d,0x4b
  40f12a:	call   0x412478
  40f12f:	mov    r8,QWORD PTR [rsp+0x210]
  40f137:	lea    rdx,[rip+0x1303e]        # 0x42217c
  40f13e:	mov    rcx,r13
  40f141:	call   0x40a930
  40f146:	mov    eax,DWORD PTR [rsp+0x108]
  40f14d:	test   eax,eax
  40f14f:	jne    0x40f562
  40f155:	mov    ebx,DWORD PTR [rip+0x1a20d]        # 0x429368
  40f15b:	test   ebx,ebx
  40f15d:	je     0x40f17e
  40f15f:	mov    r9d,DWORD PTR [rsp+0xf0]
  40f167:	mov    r8,QWORD PTR [rsp+0xe8]
  40f16f:	lea    rdx,[rip+0x13029]        # 0x42219f
  40f176:	mov    rcx,r13
  40f179:	call   0x40a990
  40f17e:	xor    eax,eax
  40f180:	mov    ecx,0x18
  40f185:	mov    rdi,rbp
  40f188:	rep stos QWORD PTR es:[rdi],rax
  40f18b:	mov    rcx,QWORD PTR [rip+0x1a156]        # 0x4292e8
  40f192:	mov    esi,DWORD PTR [rsp+0xf0]
  40f199:	mov    rbx,QWORD PTR [rsp+0xe8]
  40f1a1:	test   rcx,rcx
  40f1a4:	je     0x40f310
  40f1aa:	call   0x412320
  40f1af:	mov    rcx,QWORD PTR [rip+0x1a132]        # 0x4292e8
  40f1b6:	mov    r8d,esi
  40f1b9:	mov    rdx,rbx
  40f1bc:	call   0x412310
  40f1c1:	mov    rcx,QWORD PTR [rip+0x1a120]        # 0x4292e8
  40f1c8:	call   0x412328
  40f1cd:	lea    r8,[rip+0x12fd0]        # 0x4221a4
  40f1d4:	mov    edx,0xc0
  40f1d9:	mov    r9,rax
  40f1dc:	mov    rcx,rbp
  40f1df:	call   0x409180
  40f1e4:	mov    rdx,rbp
  40f1e7:	mov    ecx,DWORD PTR [rdx]
  40f1e9:	add    rdx,0x4
  40f1ed:	lea    eax,[rcx-0x1010101]
  40f1f3:	not    ecx
  40f1f5:	and    eax,ecx
  40f1f7:	and    eax,0x80808080
  40f1fc:	je     0x40f1e7
  40f1fe:	mov    ecx,eax
  40f200:	mov    r8d,DWORD PTR [rsp+0x78]
  40f205:	shr    ecx,0x10
  40f208:	test   eax,0x8080
  40f20d:	cmove  eax,ecx
  40f210:	lea    rcx,[rdx+0x2]
  40f214:	cmove  rdx,rcx
  40f218:	add    al,al
  40f21a:	mov    rcx,QWORD PTR [rip+0x1a0c7]        # 0x4292e8
  40f221:	sbb    rdx,0x3
  40f225:	sub    r8d,edx
  40f228:	call   0x412338
  40f22d:	movsxd rax,DWORD PTR [r13+0x2c]
  40f231:	mov    rax,QWORD PTR [r13+rax*8+0x58]
  40f236:	mov    r11d,DWORD PTR [rax+0x58]
  40f23a:	test   r11d,r11d
  40f23d:	je     0x40f2f0
  40f243:	mov    rax,QWORD PTR [r13+0x8]
  40f247:	lea    rdx,[rip+0x12f5a]        # 0x4221a8
  40f24e:	mov    r8,rbp
  40f251:	mov    rcx,r13
  40f254:	call   QWORD PTR [rax+0x48]
  40f257:	movsxd rdx,DWORD PTR [r13+0x2c]
  40f25b:	add    DWORD PTR [r13+rdx*4+0x30],0x1
  40f261:	mov    rax,rdx
  40f264:	lea    rcx,[r13+rdx*8+0x0]
  40f269:	test   eax,eax
  40f26b:	mov    r8,QWORD PTR [rcx+0x58]
  40f26f:	mov    r8d,DWORD PTR [r8]
  40f272:	je     0x40f28e
  40f274:	mov    rcx,QWORD PTR [rcx+0x50]
  40f278:	mov    ecx,DWORD PTR [rcx]
  40f27a:	cmp    ecx,0xffffffff
  40f27d:	je     0x40f28e
  40f27f:	add    DWORD PTR [r13+rdx*4+0x2c],0x1
  40f285:	cmp    ecx,0xf
  40f288:	je     0x40f928
  40f28e:	mov    rdx,QWORD PTR [r13+0x8]
  40f292:	mov    rdx,QWORD PTR [rdx+0x30]
  40f296:	test   rdx,rdx
  40f299:	je     0x40f2a4
  40f29b:	mov    rcx,r13
  40f29e:	call   rdx
  40f2a0:	mov    eax,DWORD PTR [r13+0x2c]
  40f2a4:	sub    eax,0x1
  40f2a7:	xor    edx,edx
  40f2a9:	mov    rcx,r14
  40f2ac:	mov    DWORD PTR [r13+0x2c],eax
  40f2b0:	call   0x412488
  40f2b5:	call   QWORD PTR [rip+0x1c829]        # 0x42bae4
  40f2bb:	lea    rcx,[rax+0x30]
  40f2bf:	call   0x4198f8
  40f2c4:	movsxd rsi,DWORD PTR [rsp+0xf4]
  40f2cc:	shl    rsi,0x3
  40f2d0:	jmp    0x40eacf
  40f2d5:	mov    rax,QWORD PTR [r13+0x20]
  40f2d9:	mov    DWORD PTR [r13+0x30],0x0
  40f2e1:	add    rax,0x4e0
  40f2e7:	mov    QWORD PTR [r13+0x58],rax
  40f2eb:	jmp    0x40ef16
  40f2f0:	mov    rcx,QWORD PTR [rax+0x50]
  40f2f4:	lea    rdx,[rip+0x12ead]        # 0x4221a8
  40f2fb:	xor    r9d,r9d
  40f2fe:	xor    r8d,r8d
  40f301:	call   0x412438
  40f306:	test   rax,rax
  40f309:	jne    0x40f243
  40f30f:	nop
  40f310:	movsxd rdx,DWORD PTR [r13+0x2c]
  40f314:	mov    rax,rdx
  40f317:	jmp    0x40f264
  40f31c:	mov    r14,QWORD PTR [rsp+0x40]
  40f321:	mov    rcx,r14
  40f324:	call   0x412100
  40f329:	mov    eax,DWORD PTR [r15+0x2c]
  40f32d:	mov    QWORD PTR [rsp+0xe8],0x0
  40f339:	mov    DWORD PTR [rsp+0xf0],0x0
  40f344:	test   eax,eax
  40f346:	je     0x40f3f8
  40f34c:	xor    ebx,ebx
  40f34e:	lea    rsi,[rsp+0x210]
  40f356:	lea    rdi,[rsp+0x610]
  40f35e:	jmp    0x40f370
  40f360:	add    ebx,0x1
  40f363:	cmp    ebx,eax
  40f365:	jae    0x40f3f8
  40f36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f370:	mov    ecx,DWORD PTR [rip+0x1a01a]        # 0x429390
  40f376:	mov    DWORD PTR [rsp+0xf4],ebx
  40f37d:	test   ecx,ecx
  40f37f:	je     0x40f360
  40f381:	movsxd rax,ebx
  40f384:	mov    rdx,QWORD PTR [r15+0x30]
  40f388:	mov    r12,QWORD PTR [rsp+0xa8]
  40f390:	mov    rax,QWORD PTR [rdx+rax*8]
  40f394:	mov    rbp,QWORD PTR [rax+0x8]
  40f398:	mov    DWORD PTR [rsp+0x210],0x0
  40f3a3:	cmp    QWORD PTR [rbp+0x10],0x0
  40f3a8:	je     0x40f510
  40f3ae:	mov    eax,DWORD PTR [rbp+0xc]
  40f3b1:	cmp    eax,0x1
  40f3b4:	je     0x40f420
  40f3b6:	cmp    eax,0x3
  40f3b9:	je     0x40f4e0
  40f3bf:	test   eax,eax
  40f3c1:	je     0x40f4c0
  40f3c7:	mov    eax,DWORD PTR [rsp+0xf0]
  40f3ce:	xor    edx,edx
  40f3d0:	cmp    edx,eax
  40f3d2:	cmovg  edx,eax
  40f3d5:	movsxd rcx,edx
  40f3d8:	add    QWORD PTR [rsp+0xe8],rcx
  40f3e0:	sub    eax,edx
  40f3e2:	mov    DWORD PTR [rsp+0xf0],eax
  40f3e9:	mov    eax,DWORD PTR [r15+0x2c]
  40f3ed:	add    ebx,0x1
  40f3f0:	cmp    ebx,eax
  40f3f2:	jb     0x40f370
  40f3f8:	lea    rcx,[rsp+0xa8]
  40f400:	call   0x412408
  40f405:	mov    eax,DWORD PTR [rsp+0x54]
  40f409:	add    rsp,0xa18
  40f410:	pop    rbx
  40f411:	pop    rsi
  40f412:	pop    rdi
  40f413:	pop    rbp
  40f414:	pop    r12
  40f416:	pop    r13
  40f418:	pop    r14
  40f41a:	pop    r15
  40f41c:	ret    
  40f41d:	nop    DWORD PTR [rax]
  40f420:	mov    r9,r14
  40f423:	mov    r8,rsi
  40f426:	mov    rdx,r12
  40f429:	mov    rcx,rbp
  40f42c:	call   0x4120e0
  40f431:	test   eax,eax
  40f433:	js     0x40f3e9
  40f435:	mov    edx,DWORD PTR [rsp+0xf0]
  40f43c:	mov    ecx,DWORD PTR [rsp+0x210]
  40f443:	cmp    eax,edx
  40f445:	cmovg  eax,edx
  40f448:	sub    edx,eax
  40f44a:	movsxd r8,eax
  40f44d:	add    QWORD PTR [rsp+0xe8],r8
  40f455:	test   ecx,ecx
  40f457:	mov    DWORD PTR [rsp+0xf0],edx
  40f45e:	je     0x40f3e9
  40f460:	cmp    DWORD PTR [rbp+0xc],0x3
  40f464:	movsxd rax,DWORD PTR [rsp+0xf4]
  40f46c:	mov    rdx,QWORD PTR [rip+0x19e5d]        # 0x4292d0
  40f473:	sete   r8b
  40f477:	add    QWORD PTR [rdx+rax*8],0x1
  40f47c:	mov    edx,DWORD PTR [rip+0x19efa]        # 0x42937c
  40f482:	test   edx,edx
  40f484:	je     0x40f500
  40f486:	test   r8b,r8b
  40f489:	je     0x40f540
  40f48f:	mov    rdx,rdi
  40f492:	mov    rcx,r13
  40f495:	call   0x40cf20
  40f49a:	mov    rcx,rdi
  40f49d:	call   0x412078
  40f4a2:	mov    ecx,DWORD PTR [rsp+0x210]
  40f4a9:	test   ecx,ecx
  40f4ab:	jle    0x40f3e9
  40f4b1:	movsxd rax,DWORD PTR [rsp+0xf4]
  40f4b9:	jmp    0x40f384
  40f4be:	xchg   ax,ax
  40f4c0:	mov    r9,r14
  40f4c3:	mov    r8,rsi
  40f4c6:	mov    rdx,r12
  40f4c9:	mov    rcx,rbp
  40f4cc:	call   0x4120d0
  40f4d1:	jmp    0x40f431
  40f4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f4e0:	mov    r9,r14
  40f4e3:	mov    r8,rsi
  40f4e6:	mov    rdx,rdi
  40f4e9:	mov    rcx,rbp
  40f4ec:	call   0x4120d8
  40f4f1:	jmp    0x40f431
  40f4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f500:	test   r8b,r8b
  40f503:	je     0x40f4a9
  40f505:	jmp    0x40f49a
  40f507:	nop    WORD PTR [rax+rax*1+0x0]
  40f510:	mov    eax,DWORD PTR [rsp+0xf0]
  40f517:	mov    edx,0x0
  40f51c:	test   eax,eax
  40f51e:	cmovle edx,eax
  40f521:	sub    eax,edx
  40f523:	movsxd rcx,edx
  40f526:	add    QWORD PTR [rsp+0xe8],rcx
  40f52e:	mov    DWORD PTR [rsp+0xf0],eax
  40f535:	jmp    0x40f3e9
  40f53a:	nop    WORD PTR [rax+rax*1+0x0]
  40f540:	mov    rdx,QWORD PTR [r15+0x30]
  40f544:	mov    rcx,r13
  40f547:	mov    r9,r15
  40f54a:	mov    r8,QWORD PTR [rdx+rax*8]
  40f54e:	mov    rdx,r12
  40f551:	call   0x40d340
  40f556:	mov    ecx,DWORD PTR [rsp+0x210]
  40f55d:	jmp    0x40f4a9
  40f562:	movsxd rcx,DWORD PTR [r13+0x2c]
  40f566:	lea    edx,[rcx+0x1]
  40f569:	cmp    edx,0x9
  40f56c:	mov    DWORD PTR [r13+0x2c],edx
  40f570:	jg     0x40fb2c
  40f576:	test   edx,edx
  40f578:	je     0x40fa2b
  40f57e:	lea    rcx,[r13+rcx*8+0x0]
  40f583:	mov    rdi,QWORD PTR [r13+0x20]
  40f587:	movsxd rdx,edx
  40f58a:	mov    r8,QWORD PTR [rcx+0x58]
  40f58e:	mov    r8d,DWORD PTR [r8]
  40f591:	mov    DWORD PTR [r13+rdx*4+0x30],0x0
  40f59a:	lea    rdx,[rdi+0x600]
  40f5a1:	mov    QWORD PTR [rcx+0x60],rdx
  40f5a5:	cmp    r8d,0xf
  40f5a9:	jne    0x40f5b9
  40f5ab:	mov    edx,DWORD PTR [r13+0x28ac]
  40f5b2:	mov    DWORD PTR [r13+0x28b0],edx
  40f5b9:	mov    rdx,QWORD PTR [r13+0x8]
  40f5bd:	mov    rdx,QWORD PTR [rdx+0x28]
  40f5c1:	test   rdx,rdx
  40f5c4:	je     0x40f5d2
  40f5c6:	mov    rcx,r13
  40f5c9:	call   rdx
  40f5cb:	mov    eax,DWORD PTR [rsp+0x108]
  40f5d2:	xor    edi,edi
  40f5d4:	test   eax,eax
  40f5d6:	mov    DWORD PTR [rsp+0x5c],0x0
  40f5de:	jle    0x40faf6
  40f5e4:	mov    QWORD PTR [rsp+0xa68],r15
  40f5ec:	mov    QWORD PTR [rsp+0x80],r14
  40f5f4:	mov    r15,r13
  40f5f7:	mov    QWORD PTR [rsp+0xa70],r12
  40f5ff:	mov    r14,rdi
  40f602:	jmp    0x40f75a
  40f607:	nop    WORD PTR [rax+rax*1+0x0]
  40f610:	lea    rcx,[r15+rcx*8]
  40f614:	mov    rax,QWORD PTR [rcx+0x58]
  40f618:	mov    r8d,DWORD PTR [rax]
  40f61b:	movsxd rax,edx
  40f61e:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  40f627:	mov    rax,QWORD PTR [r15+0x20]
  40f62b:	add    rax,0x660
  40f631:	cmp    r8d,0xf
  40f635:	mov    QWORD PTR [rcx+0x60],rax
  40f639:	jne    0x40f649
  40f63b:	mov    eax,DWORD PTR [r15+0x28ac]
  40f642:	mov    DWORD PTR [r15+0x28b0],eax
  40f649:	mov    rax,QWORD PTR [r15+0x8]
  40f64d:	mov    rax,QWORD PTR [rax+0x28]
  40f651:	test   rax,rax
  40f654:	je     0x40f65f
  40f656:	mov    rcx,r15
  40f659:	call   rax
  40f65b:	mov    edx,DWORD PTR [r15+0x2c]
  40f65f:	lea    rax,[rip+0x12828]        # 0x421e8e
  40f666:	test   rbx,rbx
  40f669:	movsxd rdx,edx
  40f66c:	cmove  rbx,rax
  40f670:	mov    rax,QWORD PTR [r15+rdx*8+0x58]
  40f675:	mov    r12d,DWORD PTR [rax+0x58]
  40f679:	test   r12d,r12d
  40f67c:	je     0x40f900
  40f682:	mov    rax,QWORD PTR [r15+0x8]
  40f686:	mov    r8,rbx
  40f689:	lea    rdx,[rip+0x12965]        # 0x421ff5
  40f690:	mov    rcx,r15
  40f693:	call   QWORD PTR [rax+0x48]
  40f696:	movsxd rax,DWORD PTR [r15+0x2c]
  40f69a:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40f6a0:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40f6a5:	movsxd rbx,DWORD PTR [rsi+0x8]
  40f6a9:	mov    edi,DWORD PTR [rax+0x58]
  40f6ac:	test   edi,edi
  40f6ae:	jne    0x40f6cb
  40f6b0:	mov    rcx,QWORD PTR [rax+0x50]
  40f6b4:	lea    rdx,[rip+0x12949]        # 0x422004
  40f6bb:	xor    r9d,r9d
  40f6be:	xor    r8d,r8d
  40f6c1:	call   0x412438
  40f6c6:	test   rax,rax
  40f6c9:	je     0x40f6e9
  40f6cb:	mov    rax,QWORD PTR [r15+0x8]
  40f6cf:	mov    r8,rbx
  40f6d2:	lea    rdx,[rip+0x1292b]        # 0x422004
  40f6d9:	mov    rcx,r15
  40f6dc:	call   QWORD PTR [rax+0x38]
  40f6df:	movsxd rax,DWORD PTR [r15+0x2c]
  40f6e3:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40f6e9:	cmp    DWORD PTR [rsi+0xc],0x5
  40f6ed:	je     0x40f7b0
  40f6f3:	movsxd rdx,DWORD PTR [r15+0x2c]
  40f6f7:	mov    rax,rdx
  40f6fa:	lea    rcx,[r15+rdx*8]
  40f6fe:	test   eax,eax
  40f700:	mov    r8,QWORD PTR [rcx+0x58]
  40f704:	mov    r8d,DWORD PTR [r8]
  40f707:	je     0x40f723
  40f709:	mov    rcx,QWORD PTR [rcx+0x50]
  40f70d:	mov    ecx,DWORD PTR [rcx]
  40f70f:	cmp    ecx,0xffffffff
  40f712:	je     0x40f723
  40f714:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  40f71a:	cmp    ecx,0xf
  40f71d:	je     0x40f8e0
  40f723:	mov    rdx,QWORD PTR [r15+0x8]
  40f727:	mov    rdx,QWORD PTR [rdx+0x30]
  40f72b:	test   rdx,rdx
  40f72e:	je     0x40f739
  40f730:	mov    rcx,r15
  40f733:	call   rdx
  40f735:	mov    eax,DWORD PTR [r15+0x2c]
  40f739:	add    DWORD PTR [rsp+0x5c],0x1
  40f73e:	sub    eax,0x1
  40f741:	add    r14,0x10
  40f745:	mov    edi,DWORD PTR [rsp+0x5c]
  40f749:	cmp    edi,DWORD PTR [rsp+0x108]
  40f750:	mov    DWORD PTR [r15+0x2c],eax
  40f754:	jge    0x40f95a
  40f75a:	mov    rsi,r14
  40f75d:	add    rsi,QWORD PTR [rsp+0x100]
  40f765:	mov    ecx,DWORD PTR [rsi+0xc]
  40f768:	call   0x4120f8
  40f76d:	movsxd rcx,DWORD PTR [r15+0x2c]
  40f771:	mov    rbx,rax
  40f774:	lea    edx,[rcx+0x1]
  40f777:	cmp    edx,0x9
  40f77a:	mov    DWORD PTR [r15+0x2c],edx
  40f77e:	jg     0x40fb2c
  40f784:	test   edx,edx
  40f786:	jne    0x40f610
  40f78c:	mov    rax,QWORD PTR [r15+0x20]
  40f790:	mov    DWORD PTR [r15+0x30],0x0
  40f798:	add    rax,0x660
  40f79e:	mov    QWORD PTR [r15+0x58],rax
  40f7a2:	jmp    0x40f649
  40f7a7:	nop    WORD PTR [rax+rax*1+0x0]
  40f7b0:	cmp    DWORD PTR [rsi+0x8],0x23
  40f7b4:	jle    0x40f6f3
  40f7ba:	mov    r8d,0xffffffff
  40f7c0:	xor    edx,edx
  40f7c2:	mov    rcx,rbp
  40f7c5:	mov    r13,QWORD PTR [rsi]
  40f7c8:	mov    edi,0x9
  40f7cd:	call   0x412480
  40f7d2:	lea    rdx,[rip+0x116d1]        # 0x420eaa
  40f7d9:	mov    rcx,rbp
  40f7dc:	call   0x412478
  40f7e1:	xor    eax,eax
  40f7e3:	mov    QWORD PTR [rsp+0x88],rsi
  40f7eb:	mov    rsi,r13
  40f7ee:	mov    r13d,eax
  40f7f1:	lea    rdx,[rip+0x11f2f]        # 0x421727
  40f7f8:	mov    r8d,r13d
  40f7fb:	mov    rcx,rbp
  40f7fe:	mov    r12d,0x3
  40f804:	call   0x412478
  40f809:	cmp    edi,0x3
  40f80c:	cmovle r12d,edi
  40f810:	test   r12d,r12d
  40f813:	jle    0x40f83e
  40f815:	lea    edx,[r12-0x1]
  40f81a:	lea    rbx,[rsi+rdx*4+0x4]
  40f81f:	nop
  40f820:	mov    r8d,DWORD PTR [rsi]
  40f823:	lea    rdx,[rip+0x12958]        # 0x422182
  40f82a:	mov    rcx,rbp
  40f82d:	add    rsi,0x4
  40f831:	call   0x412478
  40f836:	cmp    rsi,rbx
  40f839:	jne    0x40f820
  40f83b:	sub    edi,r12d
  40f83e:	lea    rdx,[rip+0x11665]        # 0x420eaa
  40f845:	mov    rcx,rbp
  40f848:	add    r13d,0x1
  40f84c:	call   0x412478
  40f851:	test   edi,edi
  40f853:	jne    0x40f7f1
  40f855:	mov    r8,QWORD PTR [rsp+0x610]
  40f85d:	mov    rsi,QWORD PTR [rsp+0x88]
  40f865:	lea    rdx,[rip+0x1291c]        # 0x422188
  40f86c:	mov    rcx,r15
  40f86f:	call   0x40a930
  40f874:	xor    edx,edx
  40f876:	mov    rcx,rbp
  40f879:	call   0x412488
  40f87e:	mov    rcx,QWORD PTR [rsi]
  40f881:	call   0x412420
  40f886:	movsxd rax,DWORD PTR [r15+0x2c]
  40f88a:	cvttsd2si rbx,xmm0
  40f88f:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40f894:	mov    esi,DWORD PTR [rax+0x58]
  40f897:	test   esi,esi
  40f899:	jne    0x40f8ba
  40f89b:	mov    rcx,QWORD PTR [rax+0x50]
  40f89f:	lea    rdx,[rip+0x128f0]        # 0x422196
  40f8a6:	xor    r9d,r9d
  40f8a9:	xor    r8d,r8d
  40f8ac:	call   0x412438
  40f8b1:	test   rax,rax
  40f8b4:	je     0x40f6f3
  40f8ba:	mov    rax,QWORD PTR [r15+0x8]
  40f8be:	lea    rdx,[rip+0x128d1]        # 0x422196
  40f8c5:	mov    r8,rbx
  40f8c8:	mov    rcx,r15
  40f8cb:	call   QWORD PTR [rax+0x38]
  40f8ce:	movsxd rdx,DWORD PTR [r15+0x2c]
  40f8d2:	mov    rax,rdx
  40f8d5:	add    DWORD PTR [r15+rdx*4+0x30],0x1
  40f8db:	jmp    0x40f6fa
  40f8e0:	cmp    r8d,0xd
  40f8e4:	je     0x40f9c4
  40f8ea:	add    DWORD PTR [r15+0x28ac],0x1
  40f8f2:	jmp    0x40f723
  40f8f7:	nop    WORD PTR [rax+rax*1+0x0]
  40f900:	mov    rcx,QWORD PTR [rax+0x50]
  40f904:	lea    rdx,[rip+0x126ea]        # 0x421ff5
  40f90b:	xor    r9d,r9d
  40f90e:	xor    r8d,r8d
  40f911:	call   0x412438
  40f916:	test   rax,rax
  40f919:	jne    0x40f682
  40f91f:	movsxd rax,DWORD PTR [r15+0x2c]
  40f923:	jmp    0x40f6a0
  40f928:	cmp    r8d,0xd
  40f92c:	je     0x40fa6b
  40f932:	add    DWORD PTR [r13+0x28ac],0x1
  40f93a:	jmp    0x40f28e
  40f93f:	lea    r8,[rip+0x121ed]        # 0x421b33
  40f946:	lea    rdx,[rip+0x1282b]        # 0x422178
  40f94d:	mov    rcx,r13
  40f950:	call   0x40ac10
  40f955:	jmp    0x40f100
  40f95a:	mov    r13,r15
  40f95d:	mov    r12,QWORD PTR [rsp+0xa70]
  40f965:	mov    r15,QWORD PTR [rsp+0xa68]
  40f96d:	mov    r14,QWORD PTR [rsp+0x80]
  40f975:	movsxd rdx,eax
  40f978:	test   eax,eax
  40f97a:	lea    rcx,[r13+rdx*8+0x0]
  40f97f:	mov    r8,QWORD PTR [rcx+0x58]
  40f983:	mov    r8d,DWORD PTR [r8]
  40f986:	je     0x40f9a2
  40f988:	mov    rcx,QWORD PTR [rcx+0x50]
  40f98c:	mov    ecx,DWORD PTR [rcx]
  40f98e:	cmp    ecx,0xffffffff
  40f991:	je     0x40f9a2
  40f993:	add    DWORD PTR [r13+rdx*4+0x2c],0x1
  40f999:	cmp    ecx,0xf
  40f99c:	je     0x40fa54
  40f9a2:	mov    rdx,QWORD PTR [r13+0x8]
  40f9a6:	mov    rdx,QWORD PTR [rdx+0x30]
  40f9aa:	test   rdx,rdx
  40f9ad:	je     0x40f9b8
  40f9af:	mov    rcx,r13
  40f9b2:	call   rdx
  40f9b4:	mov    eax,DWORD PTR [r13+0x2c]
  40f9b8:	sub    eax,0x1
  40f9bb:	mov    DWORD PTR [r13+0x2c],eax
  40f9bf:	jmp    0x40f155
  40f9c4:	add    DWORD PTR [r15+0x28a8],0x1
  40f9cc:	jmp    0x40f723
  40f9d1:	mov    DWORD PTR [rsp+0x54],0xfffffff4
  40f9d9:	lea    rcx,[rsp+0xa8]
  40f9e1:	call   0x412408
  40f9e6:	lea    r8,[rip+0x127cb]        # 0x4221b8
  40f9ed:	xor    ecx,ecx
  40f9ef:	mov    edx,0x10
  40f9f4:	call   0x412308
  40f9f9:	mov    rcx,QWORD PTR [rsp+0xa70]
  40fa01:	mov    edx,0x10
  40fa06:	call   0x409c80
  40fa0b:	jmp    0x40f405
  40fa10:	lea    r8,[rip+0x12477]        # 0x421e8e
  40fa17:	lea    rdx,[rip+0x126f7]        # 0x422115
  40fa1e:	mov    rcx,r13
  40fa21:	call   0x40ac10
  40fa26:	jmp    0x40ef4f
  40fa2b:	mov    rdi,QWORD PTR [r13+0x20]
  40fa2f:	mov    DWORD PTR [r13+0x30],0x0
  40fa37:	lea    rdx,[rdi+0x600]
  40fa3e:	mov    QWORD PTR [r13+0x58],rdx
  40fa42:	jmp    0x40f5b9
  40fa47:	mov    DWORD PTR [rsp+0x54],0x0
  40fa4f:	jmp    0x40e8ec
  40fa54:	cmp    r8d,0xd
  40fa58:	je     0x40faff
  40fa5e:	add    DWORD PTR [r13+0x28ac],0x1
  40fa66:	jmp    0x40f9a2
  40fa6b:	add    DWORD PTR [r13+0x28a8],0x1
  40fa73:	jmp    0x40f28e
  40fa78:	lea    rsi,[rsp+0xb0]
  40fa80:	lea    r8,[rip+0x11a81]        # 0x421508
  40fa87:	mov    edx,0x20
  40fa8c:	mov    rcx,rsi
  40fa8f:	call   0x409180
  40fa94:	jmp    0x40e899
  40fa99:	lea    rdi,[rsp+0x610]
  40faa1:	xor    eax,eax
  40faa3:	mov    ecx,0x8
  40faa8:	lea    rbx,[rsp+0x610]
  40fab0:	mov    r8d,0x40
  40fab6:	rep stos QWORD PTR es:[rdi],rax
  40fab9:	mov    ecx,DWORD PTR [rsp+0x54]
  40fabd:	mov    rdx,rbx
  40fac0:	call   0x412218
  40fac5:	mov    rax,QWORD PTR [rsp+0xa70]
  40facd:	lea    r8,[rip+0x1261c]        # 0x4220f0
  40fad4:	mov    edx,0x10
  40fad9:	xor    ecx,ecx
  40fadb:	mov    rax,QWORD PTR [rax+0x8]
  40fadf:	mov    QWORD PTR [rsp+0x20],rbx
  40fae4:	mov    r9,rax
  40fae7:	mov    QWORD PTR [rsp+0x38],rax
  40faec:	call   0x412308
  40faf1:	jmp    0x40f9d9
  40faf6:	mov    eax,DWORD PTR [r13+0x2c]
  40fafa:	jmp    0x40f975
  40faff:	add    DWORD PTR [r13+0x28a8],0x1
  40fb07:	jmp    0x40f9a2
  40fb0c:	lea    r8,[rip+0x1255d]        # 0x422070
  40fb13:	mov    edx,0x10
  40fb18:	xor    ecx,ecx
  40fb1a:	call   0x412308
  40fb1f:	mov    DWORD PTR [rsp+0x54],0xffffffea
  40fb27:	jmp    0x40f9d9
  40fb2c:	call   0x419e29
  40fb31:	nop
  40fb32:	nop    DWORD PTR [rax+0x0]
  40fb36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb40:	push   r15
  40fb42:	push   r14
  40fb44:	push   r13
  40fb46:	push   r12
  40fb48:	push   rbp
  40fb49:	push   rdi
  40fb4a:	push   rsi
  40fb4b:	push   rbx
  40fb4c:	sub    rsp,0xd68
  40fb53:	mov    rax,QWORD PTR [rdx+0x30]
  40fb57:	movsxd rsi,r8d
  40fb5a:	mov    r15,rcx
  40fb5d:	mov    rdi,rdx
  40fb60:	mov    r8d,0xffffffff
  40fb66:	mov    edx,0x1
  40fb6b:	mov    DWORD PTR [rsp+0xdc8],r9d
  40fb73:	mov    r14,QWORD PTR [rax+rsi*8]
  40fb77:	lea    rax,[rsp+0x160]
  40fb7f:	mov    rcx,rax
  40fb82:	mov    QWORD PTR [rsp+0x60],rax
  40fb87:	call   0x412480
  40fb8c:	cmp    DWORD PTR [rsp+0xdc8],0x1
  40fb94:	movsxd rcx,DWORD PTR [r15+0x2c]
  40fb98:	sbb    rdx,rdx
  40fb9b:	lea    eax,[rcx+0x1]
  40fb9e:	and    edx,0x1e0
  40fba4:	add    rdx,0xa20
  40fbab:	cmp    eax,0x9
  40fbae:	mov    DWORD PTR [r15+0x2c],eax
  40fbb2:	jg     0x411e93
  40fbb8:	test   eax,eax
  40fbba:	je     0x40fe40
  40fbc0:	lea    rcx,[r15+rcx*8]
  40fbc4:	add    rdx,QWORD PTR [r15+0x20]
  40fbc8:	movsxd r9,eax
  40fbcb:	mov    r8,QWORD PTR [rcx+0x58]
  40fbcf:	mov    r8d,DWORD PTR [r8]
  40fbd2:	mov    DWORD PTR [r15+r9*4+0x30],0x0
  40fbdb:	mov    QWORD PTR [rcx+0x60],rdx
  40fbdf:	cmp    r8d,0xf
  40fbe3:	jne    0x40fbf3
  40fbe5:	mov    edx,DWORD PTR [r15+0x28ac]
  40fbec:	mov    DWORD PTR [r15+0x28b0],edx
  40fbf3:	mov    rdx,QWORD PTR [r15+0x8]
  40fbf7:	mov    rdx,QWORD PTR [rdx+0x28]
  40fbfb:	test   rdx,rdx
  40fbfe:	je     0x40fc09
  40fc00:	mov    rcx,r15
  40fc03:	call   rdx
  40fc05:	mov    eax,DWORD PTR [r15+0x2c]
  40fc09:	cdqe   
  40fc0b:	movsxd rbx,DWORD PTR [r14]
  40fc0e:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40fc13:	mov    r11d,DWORD PTR [rax+0x58]
  40fc17:	test   r11d,r11d
  40fc1a:	jne    0x40fc37
  40fc1c:	mov    rcx,QWORD PTR [rax+0x50]
  40fc20:	lea    rdx,[rip+0x125b5]        # 0x4221dc
  40fc27:	xor    r9d,r9d
  40fc2a:	xor    r8d,r8d
  40fc2d:	call   0x412438
  40fc32:	test   rax,rax
  40fc35:	je     0x40fc55
  40fc37:	mov    rax,QWORD PTR [r15+0x8]
  40fc3b:	mov    r8,rbx
  40fc3e:	lea    rdx,[rip+0x12597]        # 0x4221dc
  40fc45:	mov    rcx,r15
  40fc48:	call   QWORD PTR [rax+0x38]
  40fc4b:	movsxd rax,DWORD PTR [r15+0x2c]
  40fc4f:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40fc55:	mov    rbx,QWORD PTR [r14+0x8]
  40fc59:	test   rbx,rbx
  40fc5c:	je     0x411c76
  40fc62:	mov    r12,QWORD PTR [rbx+0x10]
  40fc66:	test   r12,r12
  40fc69:	je     0x410e5f
  40fc6f:	mov    r8,QWORD PTR [r12]
  40fc73:	lea    rdx,[rip+0x12568]        # 0x4221e2
  40fc7a:	mov    rcx,r15
  40fc7d:	call   0x40a930
  40fc82:	mov    r10d,DWORD PTR [rip+0x19713]        # 0x42939c
  40fc89:	test   r10d,r10d
  40fc8c:	je     0x40fe55
  40fc92:	mov    edx,DWORD PTR [rbx+0x3b4]
  40fc98:	mov    rcx,r12
  40fc9b:	call   0x412108
  40fca0:	test   rax,rax
  40fca3:	je     0x410eb4
  40fca9:	lea    rdx,[rip+0x1254d]        # 0x4221fd
  40fcb0:	mov    r8,rax
  40fcb3:	mov    rcx,r15
  40fcb6:	call   0x40a930
  40fcbb:	mov    ecx,DWORD PTR [rbx+0xc]
  40fcbe:	call   0x412378
  40fcc3:	test   rax,rax
  40fcc6:	mov    r8,rax
  40fcc9:	je     0x410ede
  40fccf:	lea    rdx,[rip+0x1243f]        # 0x422115
  40fcd6:	mov    rcx,r15
  40fcd9:	call   0x40a930
  40fcde:	lea    rbp,[rsp+0x960]
  40fce6:	mov    r12d,DWORD PTR [rbx+0x84]
  40fced:	mov    r13d,DWORD PTR [rbx+0x88]
  40fcf4:	xor    edx,edx
  40fcf6:	mov    r8d,0x1
  40fcfc:	mov    rcx,rbp
  40fcff:	call   0x412480
  40fd04:	lea    rdx,[rip+0x11e75]        # 0x421b80
  40fd0b:	mov    r9d,0x2f
  40fd11:	mov    r8d,r12d
  40fd14:	mov    DWORD PTR [rsp+0x20],r13d
  40fd19:	mov    rcx,rbp
  40fd1c:	lea    r12,[rsp+0xe0]
  40fd24:	call   0x412478
  40fd29:	mov    r8,QWORD PTR [rsp+0x960]
  40fd31:	lea    rdx,[rip+0x124cd]        # 0x422205
  40fd38:	mov    rcx,r15
  40fd3b:	call   0x40a930
  40fd40:	mov    r8d,DWORD PTR [rbx+0x3c]
  40fd44:	mov    edx,0x80
  40fd49:	mov    rcx,r12
  40fd4c:	call   0x412110
  40fd51:	lea    rdx,[rip+0x124bd]        # 0x422215
  40fd58:	mov    r8,r12
  40fd5b:	mov    rcx,r15
  40fd5e:	call   0x40a930
  40fd63:	mov    r13,QWORD PTR [rsp+0x60]
  40fd68:	mov    rcx,r13
  40fd6b:	call   0x412490
  40fd70:	mov    r8d,DWORD PTR [rbx+0x3c]
  40fd74:	lea    rdx,[rip+0x124ab]        # 0x422226
  40fd7b:	mov    rcx,r13
  40fd7e:	call   0x412478
  40fd83:	mov    r8,QWORD PTR [rsp+0x160]
  40fd8b:	lea    rdx,[rip+0x1249b]        # 0x42222d
  40fd92:	mov    rcx,r15
  40fd95:	call   0x40a930
  40fd9a:	mov    eax,DWORD PTR [rbx+0xc]
  40fd9d:	cmp    eax,0x1
  40fda0:	je     0x410f7f
  40fda6:	cmp    eax,0x3
  40fda9:	je     0x40fe77
  40fdaf:	test   eax,eax
  40fdb1:	je     0x41109f
  40fdb7:	mov    rax,QWORD PTR [rbx+0x10]
  40fdbb:	test   rax,rax
  40fdbe:	je     0x40ff10
  40fdc4:	cmp    QWORD PTR [rax+0x50],0x0
  40fdc9:	je     0x40ff10
  40fdcf:	mov    r10d,DWORD PTR [rip+0xe24a]        # 0x41e020
  40fdd6:	test   r10d,r10d
  40fdd9:	je     0x40ff10
  40fddf:	xor    r12d,r12d
  40fde2:	mov    rcx,QWORD PTR [rbx+0x48]
  40fde6:	mov    rdx,r12
  40fde9:	call   0x412280
  40fdee:	test   rax,rax
  40fdf1:	mov    r12,rax
  40fdf4:	je     0x40ff10
  40fdfa:	mov    r9d,DWORD PTR [r12+0x30]
  40fdff:	test   r9d,r9d
  40fe02:	jne    0x40fde2
  40fe04:	mov    rcx,QWORD PTR [rbx+0x48]
  40fe08:	mov    rdx,QWORD PTR [r12]
  40fe0c:	xor    r8d,r8d
  40fe0f:	mov    r9,rbp
  40fe12:	call   0x412290
  40fe17:	test   eax,eax
  40fe19:	js     0x40fde2
  40fe1b:	mov    r8,QWORD PTR [rsp+0x960]
  40fe23:	mov    rdx,QWORD PTR [r12]
  40fe27:	mov    rcx,r15
  40fe2a:	call   0x40a930
  40fe2f:	mov    rcx,QWORD PTR [rsp+0x960]
  40fe37:	call   0x4123c0
  40fe3c:	jmp    0x40fde2
  40fe3e:	xchg   ax,ax
  40fe40:	add    rdx,QWORD PTR [r15+0x20]
  40fe44:	mov    DWORD PTR [r15+0x30],0x0
  40fe4c:	mov    QWORD PTR [r15+0x58],rdx
  40fe50:	jmp    0x40fbf3
  40fe55:	mov    r8,QWORD PTR [r12+0x8]
  40fe5a:	test   r8,r8
  40fe5d:	je     0x411cf6
  40fe63:	lea    rdx,[rip+0x12383]        # 0x4221ed
  40fe6a:	mov    rcx,r15
  40fe6d:	call   0x40a930
  40fe72:	jmp    0x40fc92
  40fe77:	mov    eax,DWORD PTR [rbx+0x94]
  40fe7d:	test   eax,eax
  40fe7f:	jne    0x41143a
  40fe85:	lea    r8,[rip+0x11ca7]        # 0x421b33
  40fe8c:	lea    rdx,[rip+0x120a8]        # 0x421f3b
  40fe93:	mov    rcx,r15
  40fe96:	call   0x40ac10
  40fe9b:	mov    eax,DWORD PTR [rbx+0x98]
  40fea1:	test   eax,eax
  40fea3:	je     0x41149a
  40fea9:	movsxd r12,eax
  40feac:	movsxd rax,DWORD PTR [r15+0x2c]
  40feb0:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40feb5:	mov    r11d,DWORD PTR [rax+0x58]
  40feb9:	test   r11d,r11d
  40febc:	jne    0x40fedd
  40febe:	mov    rcx,QWORD PTR [rax+0x50]
  40fec2:	lea    rdx,[rip+0x12078]        # 0x421f41
  40fec9:	xor    r9d,r9d
  40fecc:	xor    r8d,r8d
  40fecf:	call   0x412438
  40fed4:	test   rax,rax
  40fed7:	je     0x40fdb7
  40fedd:	mov    rax,QWORD PTR [r15+0x8]
  40fee1:	mov    r8,r12
  40fee4:	lea    rdx,[rip+0x12056]        # 0x421f41
  40feeb:	mov    rcx,r15
  40feee:	call   QWORD PTR [rax+0x38]
  40fef1:	movsxd rax,DWORD PTR [r15+0x2c]
  40fef5:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40fefb:	mov    rax,QWORD PTR [rbx+0x10]
  40feff:	test   rax,rax
  40ff02:	jne    0x40fdc4
  40ff08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff10:	mov    rax,QWORD PTR [rdi+0x8]
  40ff14:	test   BYTE PTR [rax+0x10],0x8
  40ff18:	je     0x410c00
  40ff1e:	mov    rdi,QWORD PTR [rsp+0x60]
  40ff23:	mov    rcx,rdi
  40ff26:	call   0x412490
  40ff2b:	mov    r8d,DWORD PTR [r14+0x4]
  40ff2f:	lea    rdx,[rip+0x123b3]        # 0x4222e9
  40ff36:	mov    rcx,rdi
  40ff39:	call   0x412478
  40ff3e:	mov    r8,QWORD PTR [rsp+0x160]
  40ff46:	lea    rdx,[rip+0x123a1]        # 0x4222ee
  40ff4d:	mov    rcx,r15
  40ff50:	call   0x40a930
  40ff55:	mov    edi,DWORD PTR [r14+0x1e0]
  40ff5c:	mov    r12d,DWORD PTR [r14+0x1e4]
  40ff63:	xor    edx,edx
  40ff65:	mov    r8d,0x1
  40ff6b:	mov    rcx,rbp
  40ff6e:	call   0x412480
  40ff73:	lea    rdx,[rip+0x11c06]        # 0x421b80
  40ff7a:	mov    r9d,0x2f
  40ff80:	mov    r8d,edi
  40ff83:	mov    DWORD PTR [rsp+0x20],r12d
  40ff88:	mov    rcx,rbp
  40ff8b:	call   0x412478
  40ff90:	mov    r8,QWORD PTR [rsp+0x960]
  40ff98:	lea    rdx,[rip+0x12352]        # 0x4222f1
  40ff9f:	mov    rcx,r15
  40ffa2:	call   0x40a930
  40ffa7:	mov    edi,DWORD PTR [r14+0x68]
  40ffab:	mov    r12d,DWORD PTR [r14+0x6c]
  40ffaf:	xor    edx,edx
  40ffb1:	mov    r8d,0x1
  40ffb7:	mov    rcx,rbp
  40ffba:	call   0x412480
  40ffbf:	lea    rdx,[rip+0x11bba]        # 0x421b80
  40ffc6:	mov    r9d,0x2f
  40ffcc:	mov    r8d,edi
  40ffcf:	mov    DWORD PTR [rsp+0x20],r12d
  40ffd4:	mov    rcx,rbp
  40ffd7:	call   0x412478
  40ffdc:	mov    r8,QWORD PTR [rsp+0x960]
  40ffe4:	lea    rdx,[rip+0x12313]        # 0x4222fe
  40ffeb:	mov    rcx,r15
  40ffee:	call   0x40a930
  40fff3:	mov    edi,DWORD PTR [r14+0x30]
  40fff7:	mov    r12d,DWORD PTR [r14+0x34]
  40fffb:	xor    edx,edx
  40fffd:	mov    r8d,0x1
  410003:	mov    rcx,rbp
  410006:	call   0x412480
  41000b:	lea    rdx,[rip+0x11b6e]        # 0x421b80
  410012:	mov    r9d,0x2f
  410018:	mov    r8d,edi
  41001b:	mov    rcx,rbp
  41001e:	mov    DWORD PTR [rsp+0x20],r12d
  410023:	lea    rdi,[r14+0x30]
  410027:	call   0x412478
  41002c:	mov    r8,QWORD PTR [rsp+0x960]
  410034:	lea    rdx,[rip+0x11b4c]        # 0x421b87
  41003b:	mov    rcx,r15
  41003e:	call   0x40a930
  410043:	mov    r8,QWORD PTR [r14+0x38]
  410047:	lea    rdx,[rip+0x122bf]        # 0x42230d
  41004e:	mov    rcx,r15
  410051:	call   0x40b820
  410056:	mov    r8,QWORD PTR [r14+0x38]
  41005a:	lea    rdx,[rip+0x122b6]        # 0x422317
  410061:	mov    r9,rdi
  410064:	mov    rcx,r15
  410067:	call   0x40c520
  41006c:	mov    r8,QWORD PTR [r14+0x40]
  410070:	lea    rdx,[rip+0x122ab]        # 0x422322
  410077:	mov    rcx,r15
  41007a:	call   0x40b820
  41007f:	mov    r8,QWORD PTR [r14+0x40]
  410083:	lea    rdx,[rip+0x120a3]        # 0x42212d
  41008a:	mov    r9,rdi
  41008d:	mov    rcx,r15
  410090:	call   0x40c520
  410095:	movsxd rax,DWORD PTR [rbx+0x60]
  410099:	test   eax,eax
  41009b:	jle    0x410f4f
  4100a1:	mov    QWORD PTR [rsp+0xa0],rax
  4100a9:	lea    rdx,[rsp+0xa0]
  4100b1:	lea    rax,[rip+0x14f88]        # 0x425040
  4100b8:	lea    rcx,[rsp+0xe0]
  4100c0:	mov    QWORD PTR [rsp+0xa8],rax
  4100c8:	call   0x409790
  4100cd:	lea    rdx,[rip+0x1225a]        # 0x42232e
  4100d4:	mov    r8,rax
  4100d7:	mov    rcx,r15
  4100da:	call   0x40a930
  4100df:	movsxd rax,DWORD PTR [rbx+0x268]
  4100e6:	test   eax,eax
  4100e8:	jle    0x410f10
  4100ee:	mov    QWORD PTR [rsp+0xa0],rax
  4100f6:	lea    rdx,[rsp+0xa0]
  4100fe:	lea    rax,[rip+0x14f3b]        # 0x425040
  410105:	lea    rcx,[rsp+0xe0]
  41010d:	mov    QWORD PTR [rsp+0xa8],rax
  410115:	call   0x409790
  41011a:	lea    rdx,[rip+0x12216]        # 0x422337
  410121:	mov    rcx,r15
  410124:	mov    r8,rax
  410127:	call   0x40a930
  41012c:	mov    ecx,DWORD PTR [rbx+0x374]
  410132:	test   ecx,ecx
  410134:	jle    0x410f34
  41013a:	mov    rdi,QWORD PTR [rsp+0x60]
  41013f:	mov    rcx,rdi
  410142:	call   0x412490
  410147:	mov    r8d,DWORD PTR [rbx+0x374]
  41014e:	lea    rdx,[rip+0x11dda]        # 0x421f2f
  410155:	mov    rcx,rdi
  410158:	call   0x412478
  41015d:	mov    r8,QWORD PTR [rsp+0x160]
  410165:	lea    rdx,[rip+0x121d8]        # 0x422344
  41016c:	mov    rcx,r15
  41016f:	call   0x40a930
  410174:	cmp    QWORD PTR [r14+0x48],0x0
  410179:	je     0x410be0
  41017f:	mov    rdi,QWORD PTR [rsp+0x60]
  410184:	mov    rcx,rdi
  410187:	call   0x412490
  41018c:	mov    r8,QWORD PTR [r14+0x48]
  410190:	lea    rdx,[rip+0x10e71]        # 0x421008
  410197:	mov    rcx,rdi
  41019a:	call   0x412478
  41019f:	mov    r8,QWORD PTR [rsp+0x160]
  4101a7:	lea    rdx,[rip+0x121aa]        # 0x422358
  4101ae:	mov    rcx,r15
  4101b1:	call   0x40a930
  4101b6:	mov    rax,QWORD PTR [rip+0x19113]        # 0x4292d0
  4101bd:	cmp    QWORD PTR [rax+rsi*8],0x0
  4101c2:	je     0x410bc3
  4101c8:	mov    rdi,QWORD PTR [rsp+0x60]
  4101cd:	mov    rcx,rdi
  4101d0:	call   0x412490
  4101d5:	mov    rax,QWORD PTR [rip+0x190f4]        # 0x4292d0
  4101dc:	lea    rdx,[rip+0x1217f]        # 0x422362
  4101e3:	mov    rcx,rdi
  4101e6:	mov    r8,QWORD PTR [rax+rsi*8]
  4101ea:	call   0x412478
  4101ef:	mov    r8,QWORD PTR [rsp+0x160]
  4101f7:	lea    rdx,[rip+0x12169]        # 0x422367
  4101fe:	mov    rcx,r15
  410201:	call   0x40a930
  410206:	mov    rax,QWORD PTR [rip+0x190cb]        # 0x4292d8
  41020d:	cmp    QWORD PTR [rax+rsi*8],0x0
  410212:	je     0x410b80
  410218:	mov    rdi,QWORD PTR [rsp+0x60]
  41021d:	mov    rcx,rdi
  410220:	call   0x412490
  410225:	mov    rax,QWORD PTR [rip+0x190ac]        # 0x4292d8
  41022c:	lea    rdx,[rip+0x1212f]        # 0x422362
  410233:	mov    rcx,rdi
  410236:	mov    r8,QWORD PTR [rax+rsi*8]
  41023a:	call   0x412478
  41023f:	movsxd rax,DWORD PTR [r15+0x2c]
  410243:	mov    rsi,QWORD PTR [rsp+0x160]
  41024b:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410250:	mov    edx,DWORD PTR [rax+0x58]
  410253:	test   edx,edx
  410255:	je     0x411c17
  41025b:	mov    rax,QWORD PTR [r15+0x8]
  41025f:	mov    r8,rsi
  410262:	lea    rdx,[rip+0x1210d]        # 0x422376
  410269:	mov    rcx,r15
  41026c:	call   QWORD PTR [rax+0x48]
  41026f:	movsxd rax,DWORD PTR [r15+0x2c]
  410273:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410279:	mov    eax,DWORD PTR [rip+0x190e9]        # 0x429368
  41027f:	test   eax,eax
  410281:	jne    0x410ba4
  410287:	xor    eax,eax
  410289:	mov    ecx,0x18
  41028e:	mov    rdi,rbp
  410291:	mov    esi,DWORD PTR [rbx+0x80]
  410297:	mov    rbx,QWORD PTR [rbx+0x78]
  41029b:	rep stos QWORD PTR es:[rdi],rax
  41029e:	mov    rcx,QWORD PTR [rip+0x19043]        # 0x4292e8
  4102a5:	test   rcx,rcx
  4102a8:	je     0x410345
  4102ae:	call   0x412320
  4102b3:	mov    rcx,QWORD PTR [rip+0x1902e]        # 0x4292e8
  4102ba:	mov    r8d,esi
  4102bd:	mov    rdx,rbx
  4102c0:	call   0x412310
  4102c5:	mov    rcx,QWORD PTR [rip+0x1901c]        # 0x4292e8
  4102cc:	call   0x412328
  4102d1:	lea    r8,[rip+0x11ecc]        # 0x4221a4
  4102d8:	mov    edx,0xc0
  4102dd:	mov    r9,rax
  4102e0:	mov    rcx,rbp
  4102e3:	call   0x409180
  4102e8:	mov    rdx,rbp
  4102eb:	mov    ecx,DWORD PTR [rdx]
  4102ed:	add    rdx,0x4
  4102f1:	lea    eax,[rcx-0x1010101]
  4102f7:	not    ecx
  4102f9:	and    eax,ecx
  4102fb:	and    eax,0x80808080
  410300:	je     0x4102eb
  410302:	mov    ecx,eax
  410304:	lea    r8,[rbp+0xc0]
  41030b:	shr    ecx,0x10
  41030e:	test   eax,0x8080
  410313:	cmove  eax,ecx
  410316:	lea    rcx,[rdx+0x2]
  41031a:	cmove  rdx,rcx
  41031e:	add    al,al
  410320:	mov    rcx,QWORD PTR [rip+0x18fc1]        # 0x4292e8
  410327:	sbb    rdx,0x3
  41032b:	sub    r8d,edx
  41032e:	call   0x412338
  410333:	lea    rdx,[rip+0x12056]        # 0x422390
  41033a:	mov    r8,rbp
  41033d:	mov    rcx,r15
  410340:	call   0x40a930
  410345:	mov    eax,DWORD PTR [rip+0x19021]        # 0x42936c
  41034b:	test   eax,eax
  41034d:	jne    0x4106e5
  410353:	mov    eax,DWORD PTR [r15+0x2c]
  410357:	mov    r12d,DWORD PTR [rip+0x18fe2]        # 0x429340
  41035e:	test   r12d,r12d
  410361:	je     0x410650
  410367:	cmp    DWORD PTR [rsp+0xdc8],0x1
  41036f:	mov    rdi,QWORD PTR [r14+0x60]
  410373:	mov    QWORD PTR [rsp+0x70],rdi
  410378:	sbb    rdx,rdx
  41037b:	and    edx,0x420
  410381:	add    rdx,0x900
  410388:	test   rdi,rdi
  41038b:	je     0x410650
  410391:	lea    ecx,[rax+0x1]
  410394:	cmp    ecx,0x9
  410397:	mov    DWORD PTR [r15+0x2c],ecx
  41039b:	jg     0x411e93
  4103a1:	test   ecx,ecx
  4103a3:	jne    0x4113fc
  4103a9:	add    rdx,QWORD PTR [r15+0x20]
  4103ad:	mov    DWORD PTR [r15+0x30],0x0
  4103b5:	mov    QWORD PTR [r15+0x58],rdx
  4103b9:	mov    rax,QWORD PTR [r15+0x8]
  4103bd:	mov    rax,QWORD PTR [rax+0x28]
  4103c1:	test   rax,rax
  4103c4:	je     0x4103cb
  4103c6:	mov    rcx,r15
  4103c9:	call   rax
  4103cb:	lea    rax,[rsp+0x560]
  4103d3:	xor    r13d,r13d
  4103d6:	mov    QWORD PTR [rsp+0x78],r14
  4103db:	mov    QWORD PTR [rsp+0x38],rax
  4103e0:	lea    rax,[rsp+0xc8]
  4103e8:	mov    QWORD PTR [rsp+0x88],rax
  4103f0:	lea    rax,[rsp+0xd0]
  4103f8:	mov    QWORD PTR [rsp+0x90],rax
  410400:	lea    rax,[rsp+0xd8]
  410408:	mov    QWORD PTR [rsp+0x48],rax
  41040d:	lea    rax,[rsp+0xbc]
  410415:	mov    QWORD PTR [rsp+0x50],rax
  41041a:	mov    rcx,QWORD PTR [rsp+0x70]
  41041f:	lea    rdx,[rip+0x10a9d]        # 0x420ec3
  410426:	mov    r8,r13
  410429:	mov    r9d,0x2
  41042f:	call   0x412438
  410434:	test   rax,rax
  410437:	mov    r13,rax
  41043a:	je     0x411b86
  410440:	mov    rax,QWORD PTR [r13+0x8]
  410444:	mov    rbx,QWORD PTR [r13+0x0]
  410448:	mov    QWORD PTR [rsp+0x58],rax
  41044d:	movsxd rax,DWORD PTR [r15+0x2c]
  410451:	mov    r12,QWORD PTR [r15+rax*8+0x58]
  410456:	mov    edi,DWORD PTR [r12+0x58]
  41045b:	test   edi,edi
  41045d:	je     0x4119c5
  410463:	mov    rcx,QWORD PTR [rsp+0x38]
  410468:	xor    edx,edx
  41046a:	mov    r8d,0xffffffff
  410470:	mov    QWORD PTR [rsp+0xc8],0x0
  41047c:	mov    QWORD PTR [rsp+0xd0],0x0
  410488:	mov    rsi,rbx
  41048b:	call   0x412480
  410490:	mov    rcx,rbx
  410493:	call   0x419840
  410498:	mov    QWORD PTR [rsp+0xd8],rbx
  4104a0:	add    rax,rbx
  4104a3:	cmp    BYTE PTR [rbx],0x0
  4104a6:	mov    QWORD PTR [rsp+0x40],rax
  4104ab:	mov    DWORD PTR [rsp+0x68],0x0
  4104b3:	je     0x410513
  4104b5:	mov    r9d,DWORD PTR [r15+0x28c0]
  4104bc:	mov    r8,QWORD PTR [rsp+0x40]
  4104c1:	mov    rdx,QWORD PTR [rsp+0x48]
  4104c6:	mov    rcx,QWORD PTR [rsp+0x50]
  4104cb:	call   0x4121e0
  4104d0:	test   eax,eax
  4104d2:	js     0x411830
  4104d8:	mov    r8d,DWORD PTR [rsp+0xd8]
  4104e0:	mov    rcx,QWORD PTR [rsp+0x38]
  4104e5:	mov    rdx,rsi
  4104e8:	sub    r8d,esi
  4104eb:	call   0x4124a8
  4104f0:	mov    rsi,QWORD PTR [rsp+0xd8]
  4104f8:	cmp    BYTE PTR [rsi],0x0
  4104fb:	jne    0x4104b5
  4104fd:	mov    esi,DWORD PTR [rsp+0x68]
  410501:	test   esi,esi
  410503:	je     0x410513
  410505:	cmp    DWORD PTR [r15+0x28b4],0x1
  41050d:	je     0x411d2c
  410513:	mov    rdi,QWORD PTR [rsp+0x38]
  410518:	mov    rdx,QWORD PTR [rsp+0x88]
  410520:	mov    rcx,rdi
  410523:	call   0x412488
  410528:	xor    edx,edx
  41052a:	mov    rcx,rdi
  41052d:	mov    r8d,0xffffffff
  410533:	call   0x412480
  410538:	mov    rdi,QWORD PTR [rsp+0x58]
  41053d:	mov    rcx,rdi
  410540:	mov    rsi,rdi
  410543:	call   0x419840
  410548:	mov    QWORD PTR [rsp+0xd8],rdi
  410550:	add    rax,rdi
  410553:	cmp    BYTE PTR [rdi],0x0
  410556:	mov    DWORD PTR [rsp+0x40],0x0
  41055e:	je     0x4105f2
  410564:	mov    QWORD PTR [rsp+0x98],r13
  41056c:	mov    r14,QWORD PTR [rsp+0x50]
  410571:	mov    rdi,rax
  410574:	mov    r13,QWORD PTR [rsp+0x48]
  410579:	mov    QWORD PTR [rsp+0x68],rbx
  41057e:	mov    QWORD PTR [rsp+0x80],r12
  410586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410590:	mov    r9d,DWORD PTR [r15+0x28c0]
  410597:	mov    r8,rdi
  41059a:	mov    rdx,r13
  41059d:	mov    rcx,r14
  4105a0:	call   0x4121e0
  4105a5:	test   eax,eax
  4105a7:	js     0x411a20
  4105ad:	mov    r8d,DWORD PTR [rsp+0xd8]
  4105b5:	mov    rcx,QWORD PTR [rsp+0x38]
  4105ba:	mov    rdx,rsi
  4105bd:	sub    r8d,esi
  4105c0:	call   0x4124a8
  4105c5:	mov    rsi,QWORD PTR [rsp+0xd8]
  4105cd:	cmp    BYTE PTR [rsi],0x0
  4105d0:	jne    0x410590
  4105d2:	mov    r11d,DWORD PTR [rsp+0x40]
  4105d7:	mov    r13,QWORD PTR [rsp+0x98]
  4105df:	test   r11d,r11d
  4105e2:	je     0x4105f2
  4105e4:	cmp    DWORD PTR [r15+0x28b4],0x1
  4105ec:	je     0x411e5f
  4105f2:	mov    rdx,QWORD PTR [rsp+0x90]
  4105fa:	mov    rcx,QWORD PTR [rsp+0x38]
  4105ff:	call   0x412488
  410604:	mov    rax,QWORD PTR [r15+0x8]
  410608:	mov    r8,QWORD PTR [rsp+0xd0]
  410610:	mov    rcx,r15
  410613:	mov    rdx,QWORD PTR [rsp+0xc8]
  41061b:	call   QWORD PTR [rax+0x48]
  41061e:	mov    rcx,QWORD PTR [rsp+0xc8]
  410626:	call   0x4123c0
  41062b:	mov    rcx,QWORD PTR [rsp+0xd0]
  410633:	call   0x4123c0
  410638:	movsxd rax,DWORD PTR [r15+0x2c]
  41063c:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410642:	jmp    0x41041a
  410647:	nop    WORD PTR [rax+rax*1+0x0]
  410650:	mov    DWORD PTR [rsp+0x48],0x0
  410658:	mov    r10d,DWORD PTR [r14+0xd8]
  41065f:	test   r10d,r10d
  410662:	jne    0x410c50
  410668:	mov    rdx,QWORD PTR [r15+0x8]
  41066c:	mov    r8,QWORD PTR [rdx+0x30]
  410670:	movsxd rdx,eax
  410673:	test   eax,eax
  410675:	lea    rcx,[r15+rdx*8]
  410679:	mov    r9,QWORD PTR [rcx+0x58]
  41067d:	mov    r9d,DWORD PTR [r9]
  410680:	je     0x41069c
  410682:	mov    rcx,QWORD PTR [rcx+0x50]
  410686:	mov    ecx,DWORD PTR [rcx]
  410688:	cmp    ecx,0xffffffff
  41068b:	je     0x41069c
  41068d:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  410693:	cmp    ecx,0xf
  410696:	je     0x410ef9
  41069c:	test   r8,r8
  41069f:	je     0x4106ab
  4106a1:	mov    rcx,r15
  4106a4:	call   r8
  4106a7:	mov    eax,DWORD PTR [r15+0x2c]
  4106ab:	mov    rcx,QWORD PTR [rsp+0x60]
  4106b0:	sub    eax,0x1
  4106b3:	xor    edx,edx
  4106b5:	mov    DWORD PTR [r15+0x2c],eax
  4106b9:	call   0x412488
  4106be:	call   QWORD PTR [rip+0x1b420]        # 0x42bae4
  4106c4:	lea    rcx,[rax+0x30]
  4106c8:	call   0x4198f8
  4106cd:	mov    eax,DWORD PTR [rsp+0x48]
  4106d1:	add    rsp,0xd68
  4106d8:	pop    rbx
  4106d9:	pop    rsi
  4106da:	pop    rdi
  4106db:	pop    rbp
  4106dc:	pop    r12
  4106de:	pop    r13
  4106e0:	pop    r14
  4106e2:	pop    r15
  4106e4:	ret    
  4106e5:	cmp    DWORD PTR [rsp+0xdc8],0x1
  4106ed:	movsxd rcx,DWORD PTR [r15+0x2c]
  4106f1:	sbb    rdx,rdx
  4106f4:	lea    eax,[rcx+0x1]
  4106f7:	and    edx,0x3c0
  4106fd:	add    rdx,0x8a0
  410704:	cmp    eax,0x9
  410707:	mov    DWORD PTR [r15+0x2c],eax
  41070b:	jg     0x411e93
  410711:	test   eax,eax
  410713:	je     0x410f6a
  410719:	lea    rcx,[r15+rcx*8]
  41071d:	add    rdx,QWORD PTR [r15+0x20]
  410721:	movsxd r9,eax
  410724:	mov    r8,QWORD PTR [rcx+0x58]
  410728:	mov    r8d,DWORD PTR [r8]
  41072b:	mov    DWORD PTR [r15+r9*4+0x30],0x0
  410734:	mov    QWORD PTR [rcx+0x60],rdx
  410738:	cmp    r8d,0xf
  41073c:	jne    0x410750
  41073e:	mov    edx,DWORD PTR [r15+0x28ac]
  410745:	mov    DWORD PTR [r15+0x28b0],edx
  41074c:	nop    DWORD PTR [rax+0x0]
  410750:	mov    rdx,QWORD PTR [r15+0x8]
  410754:	mov    rdx,QWORD PTR [rdx+0x28]
  410758:	test   rdx,rdx
  41075b:	je     0x410766
  41075d:	mov    rcx,r15
  410760:	call   rdx
  410762:	mov    eax,DWORD PTR [r15+0x2c]
  410766:	cdqe   
  410768:	mov    r8d,DWORD PTR [r14+0x50]
  41076c:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410771:	mov    ebx,r8d
  410774:	mov    r13d,DWORD PTR [rax+0x58]
  410778:	and    ebx,0x1
  41077b:	test   r13d,r13d
  41077e:	jne    0x41079f
  410780:	mov    rcx,QWORD PTR [rax+0x50]
  410784:	lea    rdx,[rip+0x106f5]        # 0x420e80
  41078b:	xor    r9d,r9d
  41078e:	xor    r8d,r8d
  410791:	call   0x412438
  410796:	test   rax,rax
  410799:	je     0x411dc1
  41079f:	mov    rax,QWORD PTR [r15+0x8]
  4107a3:	mov    r8,rbx
  4107a6:	lea    rdx,[rip+0x106d3]        # 0x420e80
  4107ad:	mov    rcx,r15
  4107b0:	call   QWORD PTR [rax+0x38]
  4107b3:	movsxd rax,DWORD PTR [r15+0x2c]
  4107b7:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4107bd:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4107c2:	mov    r8d,DWORD PTR [r14+0x50]
  4107c6:	mov    r12d,DWORD PTR [rax+0x58]
  4107ca:	shr    r8d,1
  4107cd:	mov    ebx,r8d
  4107d0:	and    ebx,0x1
  4107d3:	test   r12d,r12d
  4107d6:	jne    0x4107f7
  4107d8:	mov    rcx,QWORD PTR [rax+0x50]
  4107dc:	lea    rdx,[rip+0x11bbc]        # 0x42239f
  4107e3:	xor    r9d,r9d
  4107e6:	xor    r8d,r8d
  4107e9:	call   0x412438
  4107ee:	test   rax,rax
  4107f1:	je     0x411dca
  4107f7:	mov    rax,QWORD PTR [r15+0x8]
  4107fb:	mov    r8,rbx
  4107fe:	lea    rdx,[rip+0x11b9a]        # 0x42239f
  410805:	mov    rcx,r15
  410808:	call   QWORD PTR [rax+0x38]
  41080b:	movsxd rax,DWORD PTR [r15+0x2c]
  41080f:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410815:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41081a:	mov    r8d,DWORD PTR [r14+0x50]
  41081e:	mov    edi,DWORD PTR [rax+0x58]
  410821:	shr    r8d,0x2
  410825:	mov    ebx,r8d
  410828:	and    ebx,0x1
  41082b:	test   edi,edi
  41082d:	jne    0x41084e
  41082f:	mov    rcx,QWORD PTR [rax+0x50]
  410833:	lea    rdx,[rip+0x11b69]        # 0x4223a3
  41083a:	xor    r9d,r9d
  41083d:	xor    r8d,r8d
  410840:	call   0x412438
  410845:	test   rax,rax
  410848:	je     0x411ddf
  41084e:	mov    rax,QWORD PTR [r15+0x8]
  410852:	mov    r8,rbx
  410855:	lea    rdx,[rip+0x11b47]        # 0x4223a3
  41085c:	mov    rcx,r15
  41085f:	call   QWORD PTR [rax+0x38]
  410862:	movsxd rax,DWORD PTR [r15+0x2c]
  410866:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41086c:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410871:	mov    r8d,DWORD PTR [r14+0x50]
  410875:	mov    esi,DWORD PTR [rax+0x58]
  410878:	shr    r8d,0x3
  41087c:	mov    ebx,r8d
  41087f:	and    ebx,0x1
  410882:	test   esi,esi
  410884:	jne    0x4108a5
  410886:	mov    rcx,QWORD PTR [rax+0x50]
  41088a:	lea    rdx,[rip+0x11b1b]        # 0x4223ac
  410891:	xor    r9d,r9d
  410894:	xor    r8d,r8d
  410897:	call   0x412438
  41089c:	test   rax,rax
  41089f:	je     0x411de8
  4108a5:	mov    rax,QWORD PTR [r15+0x8]
  4108a9:	mov    r8,rbx
  4108ac:	lea    rdx,[rip+0x11af9]        # 0x4223ac
  4108b3:	mov    rcx,r15
  4108b6:	call   QWORD PTR [rax+0x38]
  4108b9:	movsxd rax,DWORD PTR [r15+0x2c]
  4108bd:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4108c3:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4108c8:	mov    r8d,DWORD PTR [r14+0x50]
  4108cc:	mov    r11d,DWORD PTR [rax+0x58]
  4108d0:	shr    r8d,0x4
  4108d4:	mov    ebx,r8d
  4108d7:	and    ebx,0x1
  4108da:	test   r11d,r11d
  4108dd:	jne    0x4108fe
  4108df:	mov    rcx,QWORD PTR [rax+0x50]
  4108e3:	lea    rdx,[rip+0x11aca]        # 0x4223b4
  4108ea:	xor    r9d,r9d
  4108ed:	xor    r8d,r8d
  4108f0:	call   0x412438
  4108f5:	test   rax,rax
  4108f8:	je     0x411df1
  4108fe:	mov    rax,QWORD PTR [r15+0x8]
  410902:	mov    r8,rbx
  410905:	lea    rdx,[rip+0x11aa8]        # 0x4223b4
  41090c:	mov    rcx,r15
  41090f:	call   QWORD PTR [rax+0x38]
  410912:	movsxd rax,DWORD PTR [r15+0x2c]
  410916:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41091c:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410921:	mov    r8d,DWORD PTR [r14+0x50]
  410925:	mov    r10d,DWORD PTR [rax+0x58]
  410929:	shr    r8d,0x5
  41092d:	mov    ebx,r8d
  410930:	and    ebx,0x1
  410933:	test   r10d,r10d
  410936:	jne    0x410957
  410938:	mov    rcx,QWORD PTR [rax+0x50]
  41093c:	lea    rdx,[rip+0x11a78]        # 0x4223bb
  410943:	xor    r9d,r9d
  410946:	xor    r8d,r8d
  410949:	call   0x412438
  41094e:	test   rax,rax
  410951:	je     0x411dfa
  410957:	mov    rax,QWORD PTR [r15+0x8]
  41095b:	mov    r8,rbx
  41095e:	lea    rdx,[rip+0x11a56]        # 0x4223bb
  410965:	mov    rcx,r15
  410968:	call   QWORD PTR [rax+0x38]
  41096b:	movsxd rax,DWORD PTR [r15+0x2c]
  41096f:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410975:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41097a:	mov    r8d,DWORD PTR [r14+0x50]
  41097e:	mov    r9d,DWORD PTR [rax+0x58]
  410982:	shr    r8d,0x6
  410986:	mov    ebx,r8d
  410989:	and    ebx,0x1
  41098c:	test   r9d,r9d
  41098f:	jne    0x4109b0
  410991:	mov    rcx,QWORD PTR [rax+0x50]
  410995:	lea    rdx,[rip+0x11a27]        # 0x4223c3
  41099c:	xor    r9d,r9d
  41099f:	xor    r8d,r8d
  4109a2:	call   0x412438
  4109a7:	test   rax,rax
  4109aa:	je     0x411e03
  4109b0:	mov    rax,QWORD PTR [r15+0x8]
  4109b4:	mov    r8,rbx
  4109b7:	lea    rdx,[rip+0x11a05]        # 0x4223c3
  4109be:	mov    rcx,r15
  4109c1:	call   QWORD PTR [rax+0x38]
  4109c4:	movsxd rax,DWORD PTR [r15+0x2c]
  4109c8:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4109ce:	mov    r8d,DWORD PTR [r14+0x50]
  4109d2:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4109d7:	shr    r8d,0x7
  4109db:	mov    ebx,r8d
  4109de:	mov    r8d,DWORD PTR [rax+0x58]
  4109e2:	and    ebx,0x1
  4109e5:	test   r8d,r8d
  4109e8:	jne    0x410a09
  4109ea:	mov    rcx,QWORD PTR [rax+0x50]
  4109ee:	lea    rdx,[rip+0x119d5]        # 0x4223ca
  4109f5:	xor    r9d,r9d
  4109f8:	xor    r8d,r8d
  4109fb:	call   0x412438
  410a00:	test   rax,rax
  410a03:	je     0x411e0c
  410a09:	mov    rax,QWORD PTR [r15+0x8]
  410a0d:	mov    r8,rbx
  410a10:	lea    rdx,[rip+0x119b3]        # 0x4223ca
  410a17:	mov    rcx,r15
  410a1a:	call   QWORD PTR [rax+0x38]
  410a1d:	movsxd rax,DWORD PTR [r15+0x2c]
  410a21:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410a27:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410a2c:	mov    r8d,DWORD PTR [r14+0x50]
  410a30:	mov    ecx,DWORD PTR [rax+0x58]
  410a33:	shr    r8d,0x8
  410a37:	mov    ebx,r8d
  410a3a:	and    ebx,0x1
  410a3d:	test   ecx,ecx
  410a3f:	jne    0x410a60
  410a41:	mov    rcx,QWORD PTR [rax+0x50]
  410a45:	lea    rdx,[rip+0x1198f]        # 0x4223db
  410a4c:	xor    r9d,r9d
  410a4f:	xor    r8d,r8d
  410a52:	call   0x412438
  410a57:	test   rax,rax
  410a5a:	je     0x411e15
  410a60:	mov    rax,QWORD PTR [r15+0x8]
  410a64:	mov    r8,rbx
  410a67:	lea    rdx,[rip+0x1196d]        # 0x4223db
  410a6e:	mov    rcx,r15
  410a71:	call   QWORD PTR [rax+0x38]
  410a74:	movsxd rax,DWORD PTR [r15+0x2c]
  410a78:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410a7e:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410a83:	mov    r8d,DWORD PTR [r14+0x50]
  410a87:	mov    edx,DWORD PTR [rax+0x58]
  410a8a:	shr    r8d,0x9
  410a8e:	mov    ebx,r8d
  410a91:	and    ebx,0x1
  410a94:	test   edx,edx
  410a96:	jne    0x410ab7
  410a98:	mov    rcx,QWORD PTR [rax+0x50]
  410a9c:	lea    rdx,[rip+0x11948]        # 0x4223eb
  410aa3:	xor    r9d,r9d
  410aa6:	xor    r8d,r8d
  410aa9:	call   0x412438
  410aae:	test   rax,rax
  410ab1:	je     0x411db8
  410ab7:	mov    rax,QWORD PTR [r15+0x8]
  410abb:	mov    r8,rbx
  410abe:	lea    rdx,[rip+0x11926]        # 0x4223eb
  410ac5:	mov    rcx,r15
  410ac8:	call   QWORD PTR [rax+0x38]
  410acb:	movsxd rax,DWORD PTR [r15+0x2c]
  410acf:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410ad5:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410ada:	mov    r8d,DWORD PTR [r14+0x50]
  410ade:	mov    r13d,DWORD PTR [rax+0x58]
  410ae2:	shr    r8d,0xa
  410ae6:	mov    ebx,r8d
  410ae9:	and    ebx,0x1
  410aec:	test   r13d,r13d
  410aef:	jne    0x410b10
  410af1:	mov    rcx,QWORD PTR [rax+0x50]
  410af5:	lea    rdx,[rip+0x118fd]        # 0x4223f9
  410afc:	xor    r9d,r9d
  410aff:	xor    r8d,r8d
  410b02:	call   0x412438
  410b07:	test   rax,rax
  410b0a:	je     0x411dd3
  410b10:	mov    rax,QWORD PTR [r15+0x8]
  410b14:	lea    rdx,[rip+0x118de]        # 0x4223f9
  410b1b:	mov    r8,rbx
  410b1e:	mov    rcx,r15
  410b21:	call   QWORD PTR [rax+0x38]
  410b24:	movsxd rdx,DWORD PTR [r15+0x2c]
  410b28:	add    DWORD PTR [r15+rdx*4+0x30],0x1
  410b2e:	mov    rax,rdx
  410b31:	lea    rcx,[r15+rdx*8]
  410b35:	test   eax,eax
  410b37:	mov    r8,QWORD PTR [rcx+0x58]
  410b3b:	mov    r8d,DWORD PTR [r8]
  410b3e:	je     0x410b5a
  410b40:	mov    rcx,QWORD PTR [rcx+0x50]
  410b44:	mov    ecx,DWORD PTR [rcx]
  410b46:	cmp    ecx,0xffffffff
  410b49:	je     0x410b5a
  410b4b:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  410b51:	cmp    ecx,0xf
  410b54:	je     0x411b9f
  410b5a:	mov    rdx,QWORD PTR [r15+0x8]
  410b5e:	mov    rdx,QWORD PTR [rdx+0x30]
  410b62:	test   rdx,rdx
  410b65:	je     0x410b70
  410b67:	mov    rcx,r15
  410b6a:	call   rdx
  410b6c:	mov    eax,DWORD PTR [r15+0x2c]
  410b70:	sub    eax,0x1
  410b73:	mov    DWORD PTR [r15+0x2c],eax
  410b77:	jmp    0x410357
  410b7c:	nop    DWORD PTR [rax+0x0]
  410b80:	lea    r8,[rip+0x10fac]        # 0x421b33
  410b87:	lea    rdx,[rip+0x117e8]        # 0x422376
  410b8e:	mov    rcx,r15
  410b91:	call   0x40ac10
  410b96:	mov    eax,DWORD PTR [rip+0x187cc]        # 0x429368
  410b9c:	test   eax,eax
  410b9e:	je     0x410287
  410ba4:	mov    r9d,DWORD PTR [rbx+0x80]
  410bab:	mov    r8,QWORD PTR [rbx+0x78]
  410baf:	lea    rdx,[rip+0x117d0]        # 0x422386
  410bb6:	mov    rcx,r15
  410bb9:	call   0x40a990
  410bbe:	jmp    0x410287
  410bc3:	lea    r8,[rip+0x10f69]        # 0x421b33
  410bca:	lea    rdx,[rip+0x11796]        # 0x422367
  410bd1:	mov    rcx,r15
  410bd4:	call   0x40ac10
  410bd9:	jmp    0x410206
  410bde:	xchg   ax,ax
  410be0:	lea    r8,[rip+0x10f4c]        # 0x421b33
  410be7:	lea    rdx,[rip+0x1176a]        # 0x422358
  410bee:	mov    rcx,r15
  410bf1:	call   0x40ac10
  410bf6:	jmp    0x4101b6
  410bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  410c00:	movsxd rax,DWORD PTR [r15+0x2c]
  410c04:	mov    rdx,QWORD PTR [r15+rax*8+0x58]
  410c09:	mov    rax,QWORD PTR [r15+0x8]
  410c0d:	test   BYTE PTR [rax+0x50],0x1
  410c11:	je     0x40ff55
  410c17:	mov    r8d,DWORD PTR [rdx+0x58]
  410c1b:	test   r8d,r8d
  410c1e:	je     0x411bef
  410c24:	lea    r8,[rip+0x10f08]        # 0x421b33
  410c2b:	lea    rdx,[rip+0x116bc]        # 0x4222ee
  410c32:	mov    rcx,r15
  410c35:	call   QWORD PTR [rax+0x48]
  410c38:	movsxd rax,DWORD PTR [r15+0x2c]
  410c3c:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410c42:	jmp    0x40ff55
  410c47:	nop    WORD PTR [rax+rax*1+0x0]
  410c50:	lea    edx,[rax+0x1]
  410c53:	cmp    edx,0x9
  410c56:	mov    DWORD PTR [r15+0x2c],edx
  410c5a:	jg     0x411e93
  410c60:	test   edx,edx
  410c62:	jne    0x4113b8
  410c68:	mov    rax,QWORD PTR [r15+0x20]
  410c6c:	mov    DWORD PTR [r15+0x30],0x0
  410c74:	add    rax,0xd80
  410c7a:	mov    QWORD PTR [r15+0x58],rax
  410c7e:	mov    rax,QWORD PTR [r15+0x8]
  410c82:	mov    rax,QWORD PTR [rax+0x28]
  410c86:	test   rax,rax
  410c89:	je     0x410c90
  410c8b:	mov    rcx,r15
  410c8e:	call   rax
  410c90:	mov    r9d,DWORD PTR [r14+0xd8]
  410c97:	xor    eax,eax
  410c99:	mov    DWORD PTR [rsp+0x38],0x0
  410ca1:	test   r9d,r9d
  410ca4:	jle    0x411b17
  410caa:	mov    QWORD PTR [rsp+0x40],r14
  410caf:	mov    r14,rax
  410cb2:	jmp    0x410e0e
  410cb7:	nop    WORD PTR [rax+rax*1+0x0]
  410cc0:	lea    rcx,[r15+rcx*8]
  410cc4:	mov    rax,QWORD PTR [rcx+0x58]
  410cc8:	mov    r8d,DWORD PTR [rax]
  410ccb:	movsxd rax,edx
  410cce:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  410cd7:	mov    rax,QWORD PTR [r15+0x20]
  410cdb:	add    rax,0xde0
  410ce1:	cmp    r8d,0xf
  410ce5:	mov    QWORD PTR [rcx+0x60],rax
  410ce9:	jne    0x410cf9
  410ceb:	mov    eax,DWORD PTR [r15+0x28ac]
  410cf2:	mov    DWORD PTR [r15+0x28b0],eax
  410cf9:	mov    rax,QWORD PTR [r15+0x8]
  410cfd:	mov    rax,QWORD PTR [rax+0x28]
  410d01:	test   rax,rax
  410d04:	je     0x410d0f
  410d06:	mov    rcx,r15
  410d09:	call   rax
  410d0b:	mov    edx,DWORD PTR [r15+0x2c]
  410d0f:	movsxd rdx,edx
  410d12:	lea    rax,[rip+0x11175]        # 0x421e8e
  410d19:	test   rbx,rbx
  410d1c:	mov    rdx,QWORD PTR [r15+rdx*8+0x58]
  410d21:	cmove  rbx,rax
  410d25:	mov    r8d,DWORD PTR [rdx+0x58]
  410d29:	test   r8d,r8d
  410d2c:	je     0x4119f0
  410d32:	mov    rax,QWORD PTR [r15+0x8]
  410d36:	mov    r8,rbx
  410d39:	lea    rdx,[rip+0x112b5]        # 0x421ff5
  410d40:	mov    rcx,r15
  410d43:	call   QWORD PTR [rax+0x48]
  410d46:	movsxd rax,DWORD PTR [r15+0x2c]
  410d4a:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410d50:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410d55:	movsxd rbx,DWORD PTR [rsi+0x8]
  410d59:	mov    ecx,DWORD PTR [rax+0x58]
  410d5c:	test   ecx,ecx
  410d5e:	jne    0x410d7b
  410d60:	mov    rcx,QWORD PTR [rax+0x50]
  410d64:	lea    rdx,[rip+0x11299]        # 0x422004
  410d6b:	xor    r9d,r9d
  410d6e:	xor    r8d,r8d
  410d71:	call   0x412438
  410d76:	test   rax,rax
  410d79:	je     0x410d99
  410d7b:	mov    rax,QWORD PTR [r15+0x8]
  410d7f:	mov    r8,rbx
  410d82:	lea    rdx,[rip+0x1127b]        # 0x422004
  410d89:	mov    rcx,r15
  410d8c:	call   QWORD PTR [rax+0x38]
  410d8f:	movsxd rax,DWORD PTR [r15+0x2c]
  410d93:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410d99:	cmp    DWORD PTR [rsi+0xc],0x5
  410d9d:	je     0x4116e0
  410da3:	movsxd rdx,DWORD PTR [r15+0x2c]
  410da7:	mov    rax,rdx
  410daa:	lea    rcx,[r15+rdx*8]
  410dae:	test   eax,eax
  410db0:	mov    r8,QWORD PTR [rcx+0x58]
  410db4:	mov    r8d,DWORD PTR [r8]
  410db7:	je     0x410dd3
  410db9:	mov    rcx,QWORD PTR [rcx+0x50]
  410dbd:	mov    ecx,DWORD PTR [rcx]
  410dbf:	cmp    ecx,0xffffffff
  410dc2:	je     0x410dd3
  410dc4:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  410dca:	cmp    ecx,0xf
  410dcd:	je     0x411810
  410dd3:	mov    rdx,QWORD PTR [r15+0x8]
  410dd7:	mov    rdx,QWORD PTR [rdx+0x30]
  410ddb:	test   rdx,rdx
  410dde:	je     0x410de9
  410de0:	mov    rcx,r15
  410de3:	call   rdx
  410de5:	mov    eax,DWORD PTR [r15+0x2c]
  410de9:	mov    rbx,QWORD PTR [rsp+0x40]
  410dee:	add    DWORD PTR [rsp+0x38],0x1
  410df3:	sub    eax,0x1
  410df6:	mov    edi,DWORD PTR [rsp+0x38]
  410dfa:	add    r14,0x10
  410dfe:	mov    DWORD PTR [r15+0x2c],eax
  410e02:	cmp    DWORD PTR [rbx+0xd8],edi
  410e08:	jle    0x411b20
  410e0e:	mov    rax,QWORD PTR [rsp+0x40]
  410e13:	mov    rsi,r14
  410e16:	add    rsi,QWORD PTR [rax+0xd0]
  410e1d:	mov    ecx,DWORD PTR [rsi+0xc]
  410e20:	call   0x4120f8
  410e25:	movsxd rcx,DWORD PTR [r15+0x2c]
  410e29:	mov    rbx,rax
  410e2c:	lea    edx,[rcx+0x1]
  410e2f:	cmp    edx,0x9
  410e32:	mov    DWORD PTR [r15+0x2c],edx
  410e36:	jg     0x411e93
  410e3c:	test   edx,edx
  410e3e:	jne    0x410cc0
  410e44:	mov    rax,QWORD PTR [r15+0x20]
  410e48:	mov    DWORD PTR [r15+0x30],0x0
  410e50:	add    rax,0xde0
  410e56:	mov    QWORD PTR [r15+0x58],rax
  410e5a:	jmp    0x410cf9
  410e5f:	mov    ecx,DWORD PTR [rbx+0x38]
  410e62:	call   0x4120c8
  410e67:	test   rax,rax
  410e6a:	mov    r12,rax
  410e6d:	je     0x411e1e
  410e73:	mov    r8,QWORD PTR [rax+0x8]
  410e77:	lea    rdx,[rip+0x11364]        # 0x4221e2
  410e7e:	mov    rcx,r15
  410e81:	call   0x40ac10
  410e86:	mov    r9d,DWORD PTR [rip+0x1850f]        # 0x42939c
  410e8d:	test   r9d,r9d
  410e90:	jne    0x410eb4
  410e92:	mov    rax,QWORD PTR [r12+0x10]
  410e97:	lea    r8,[rip+0x10ff0]        # 0x421e8e
  410e9e:	lea    rdx,[rip+0x11348]        # 0x4221ed
  410ea5:	mov    rcx,r15
  410ea8:	test   rax,rax
  410eab:	cmovne r8,rax
  410eaf:	call   0x40ac10
  410eb4:	lea    r8,[rip+0x10fd3]        # 0x421e8e
  410ebb:	lea    rdx,[rip+0x1133b]        # 0x4221fd
  410ec2:	mov    rcx,r15
  410ec5:	call   0x40ac10
  410eca:	mov    ecx,DWORD PTR [rbx+0xc]
  410ecd:	call   0x412378
  410ed2:	test   rax,rax
  410ed5:	mov    r8,rax
  410ed8:	jne    0x40fccf
  410ede:	lea    r8,[rip+0x10fa9]        # 0x421e8e
  410ee5:	lea    rdx,[rip+0x11229]        # 0x422115
  410eec:	mov    rcx,r15
  410eef:	call   0x40ac10
  410ef4:	jmp    0x40fcde
  410ef9:	cmp    r9d,0xd
  410efd:	je     0x411c69
  410f03:	add    DWORD PTR [r15+0x28ac],0x1
  410f0b:	jmp    0x41069c
  410f10:	lea    r8,[rip+0x10c1c]        # 0x421b33
  410f17:	lea    rdx,[rip+0x11419]        # 0x422337
  410f1e:	mov    rcx,r15
  410f21:	call   0x40ac10
  410f26:	mov    ecx,DWORD PTR [rbx+0x374]
  410f2c:	test   ecx,ecx
  410f2e:	jg     0x41013a
  410f34:	lea    r8,[rip+0x10bf8]        # 0x421b33
  410f3b:	lea    rdx,[rip+0x11402]        # 0x422344
  410f42:	mov    rcx,r15
  410f45:	call   0x40ac10
  410f4a:	jmp    0x410174
  410f4f:	lea    r8,[rip+0x10bdd]        # 0x421b33
  410f56:	lea    rdx,[rip+0x113d1]        # 0x42232e
  410f5d:	mov    rcx,r15
  410f60:	call   0x40ac10
  410f65:	jmp    0x4100df
  410f6a:	add    rdx,QWORD PTR [r15+0x20]
  410f6e:	mov    DWORD PTR [r15+0x30],0x0
  410f76:	mov    QWORD PTR [r15+0x58],rdx
  410f7a:	jmp    0x410750
  410f7f:	mov    ecx,DWORD PTR [rbx+0x1d8]
  410f85:	call   0x412360
  410f8a:	test   rax,rax
  410f8d:	mov    r8,rax
  410f90:	je     0x411d11
  410f96:	lea    rdx,[rip+0x1102a]        # 0x421fc7
  410f9d:	mov    rcx,r15
  410fa0:	call   0x40a930
  410fa5:	movsxd rax,DWORD PTR [rbx+0x1d0]
  410fac:	lea    rdx,[rsp+0xa0]
  410fb4:	mov    rcx,r12
  410fb7:	mov    QWORD PTR [rsp+0xa0],rax
  410fbf:	lea    rax,[rip+0x14085]        # 0x42504b
  410fc6:	mov    QWORD PTR [rsp+0xa8],rax
  410fce:	call   0x409790
  410fd3:	lea    rdx,[rip+0x112f3]        # 0x4222cd
  410fda:	mov    rcx,r15
  410fdd:	mov    r8,rax
  410fe0:	call   0x40a930
  410fe5:	movsxd rax,DWORD PTR [r15+0x2c]
  410fe9:	movsxd r12,DWORD PTR [rbx+0x1d4]
  410ff0:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410ff5:	mov    ecx,DWORD PTR [rax+0x58]
  410ff8:	test   ecx,ecx
  410ffa:	je     0x4114b5
  411000:	mov    rax,QWORD PTR [r15+0x8]
  411004:	mov    r8,r12
  411007:	lea    rdx,[rip+0x10fcf]        # 0x421fdd
  41100e:	mov    rcx,r15
  411011:	call   QWORD PTR [rax+0x38]
  411014:	movsxd rax,DWORD PTR [r15+0x2c]
  411018:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41101e:	cmp    QWORD PTR [rbx+0x1f0],0x0
  411026:	jne    0x4116a0
  41102c:	lea    r8,[rip+0x10e5b]        # 0x421e8e
  411033:	lea    rdx,[rip+0x10fac]        # 0x421fe6
  41103a:	mov    rcx,r15
  41103d:	call   0x40ac10
  411042:	mov    ecx,DWORD PTR [rbx+0x38]
  411045:	call   0x412118
  41104a:	movsxd r12,eax
  41104d:	movsxd rax,DWORD PTR [r15+0x2c]
  411051:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411056:	mov    edx,DWORD PTR [rax+0x58]
  411059:	test   edx,edx
  41105b:	jne    0x41107c
  41105d:	mov    rcx,QWORD PTR [rax+0x50]
  411061:	lea    rdx,[rip+0x11271]        # 0x4222d9
  411068:	xor    r9d,r9d
  41106b:	xor    r8d,r8d
  41106e:	call   0x412438
  411073:	test   rax,rax
  411076:	je     0x40fdb7
  41107c:	mov    rax,QWORD PTR [r15+0x8]
  411080:	mov    r8,r12
  411083:	lea    rdx,[rip+0x1124f]        # 0x4222d9
  41108a:	mov    rcx,r15
  41108d:	call   QWORD PTR [rax+0x38]
  411090:	movsxd rax,DWORD PTR [r15+0x2c]
  411094:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41109a:	jmp    0x40fdb7
  41109f:	movsxd rax,DWORD PTR [r15+0x2c]
  4110a3:	movsxd r12,DWORD PTR [rbx+0x94]
  4110aa:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4110af:	mov    ecx,DWORD PTR [rax+0x58]
  4110b2:	test   ecx,ecx
  4110b4:	je     0x411670
  4110ba:	mov    rax,QWORD PTR [r15+0x8]
  4110be:	mov    r8,r12
  4110c1:	lea    rdx,[rip+0x10e73]        # 0x421f3b
  4110c8:	mov    rcx,r15
  4110cb:	call   QWORD PTR [rax+0x38]
  4110ce:	movsxd rax,DWORD PTR [r15+0x2c]
  4110d2:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4110d8:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4110dd:	movsxd r12,DWORD PTR [rbx+0x98]
  4110e4:	mov    edx,DWORD PTR [rax+0x58]
  4110e7:	test   edx,edx
  4110e9:	je     0x411640
  4110ef:	mov    rax,QWORD PTR [r15+0x8]
  4110f3:	mov    r8,r12
  4110f6:	lea    rdx,[rip+0x10e44]        # 0x421f41
  4110fd:	mov    rcx,r15
  411100:	call   QWORD PTR [rax+0x38]
  411103:	movsxd rax,DWORD PTR [r15+0x2c]
  411107:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41110d:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411112:	movsxd r12,DWORD PTR [rbx+0x9c]
  411119:	mov    r13d,DWORD PTR [rax+0x58]
  41111d:	test   r13d,r13d
  411120:	je     0x411610
  411126:	mov    rax,QWORD PTR [r15+0x8]
  41112a:	mov    r8,r12
  41112d:	lea    rdx,[rip+0x11103]        # 0x422237
  411134:	mov    rcx,r15
  411137:	call   QWORD PTR [rax+0x38]
  41113a:	movsxd rax,DWORD PTR [r15+0x2c]
  41113e:	add    DWORD PTR [r15+rax*4+0x30],0x1
  411144:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411149:	movsxd r12,DWORD PTR [rbx+0xa0]
  411150:	mov    r11d,DWORD PTR [rax+0x58]
  411154:	test   r11d,r11d
  411157:	je     0x4115e0
  41115d:	mov    rax,QWORD PTR [r15+0x8]
  411161:	mov    r8,r12
  411164:	lea    rdx,[rip+0x110d8]        # 0x422243
  41116b:	mov    rcx,r15
  41116e:	call   QWORD PTR [rax+0x38]
  411171:	movsxd rax,DWORD PTR [r15+0x2c]
  411175:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41117b:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411180:	movsxd r12,DWORD PTR [rbx+0xd4]
  411187:	mov    r10d,DWORD PTR [rax+0x58]
  41118b:	test   r10d,r10d
  41118e:	je     0x4115b3
  411194:	mov    rax,QWORD PTR [r15+0x8]
  411198:	mov    r8,r12
  41119b:	lea    rdx,[rip+0x110ae]        # 0x422250
  4111a2:	mov    rcx,r15
  4111a5:	call   QWORD PTR [rax+0x38]
  4111a8:	movsxd rax,DWORD PTR [r15+0x2c]
  4111ac:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4111b2:	xor    r8d,r8d
  4111b5:	mov    rdx,r14
  4111b8:	mov    rcx,rdi
  4111bb:	call   0x412050
  4111c0:	mov    r13,rax
  4111c3:	mov    r12,rax
  4111c6:	sar    r13,0x20
  4111ca:	test   r13d,r13d
  4111cd:	jne    0x4114e0
  4111d3:	lea    r8,[rip+0x10959]        # 0x421b33
  4111da:	lea    rdx,[rip+0x10d6f]        # 0x421f50
  4111e1:	mov    rcx,r15
  4111e4:	call   0x40ac10
  4111e9:	lea    r8,[rip+0x10943]        # 0x421b33
  4111f0:	lea    rdx,[rip+0x11066]        # 0x42225d
  4111f7:	mov    rcx,r15
  4111fa:	call   0x40ac10
  4111ff:	mov    ecx,DWORD PTR [rbx+0xa8]
  411205:	call   0x412368
  41120a:	test   rax,rax
  41120d:	mov    r8,rax
  411210:	je     0x411d83
  411216:	lea    rdx,[rip+0x10d2b]        # 0x421f48
  41121d:	mov    rcx,r15
  411220:	call   0x40a930
  411225:	movsxd rax,DWORD PTR [r15+0x2c]
  411229:	movsxd r12,DWORD PTR [rbx+0x3b8]
  411230:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411235:	mov    r9d,DWORD PTR [rax+0x58]
  411239:	test   r9d,r9d
  41123c:	jne    0x411259
  41123e:	mov    rcx,QWORD PTR [rax+0x50]
  411242:	lea    rdx,[rip+0x11029]        # 0x422272
  411249:	xor    r9d,r9d
  41124c:	xor    r8d,r8d
  41124f:	call   0x412438
  411254:	test   rax,rax
  411257:	je     0x411277
  411259:	mov    rax,QWORD PTR [r15+0x8]
  41125d:	mov    r8,r12
  411260:	lea    rdx,[rip+0x1100b]        # 0x422272
  411267:	mov    rcx,r15
  41126a:	call   QWORD PTR [rax+0x38]
  41126d:	movsxd rax,DWORD PTR [r15+0x2c]
  411271:	add    DWORD PTR [r15+rax*4+0x30],0x1
  411277:	mov    ecx,DWORD PTR [rbx+0x1c0]
  41127d:	test   ecx,ecx
  41127f:	je     0x411bb6
  411285:	call   0x412458
  41128a:	lea    rdx,[rip+0x10fe7]        # 0x422278
  411291:	mov    r8,rax
  411294:	mov    rcx,r15
  411297:	call   0x40a930
  41129c:	mov    ecx,DWORD PTR [rbx+0x1bc]
  4112a2:	call   0x412390
  4112a7:	test   rax,rax
  4112aa:	mov    r8,rax
  4112ad:	je     0x411d68
  4112b3:	lea    rdx,[rip+0x10fca]        # 0x422284
  4112ba:	mov    rcx,r15
  4112bd:	call   0x40a930
  4112c2:	mov    ecx,DWORD PTR [rbx+0x1b8]
  4112c8:	cmp    ecx,0x2
  4112cb:	je     0x411cd5
  4112d1:	call   0x412450
  4112d6:	lea    rdx,[rip+0x10fb3]        # 0x422290
  4112dd:	mov    r8,rax
  4112e0:	mov    rcx,r15
  4112e3:	call   0x40a930
  4112e8:	mov    ecx,DWORD PTR [rbx+0x1b4]
  4112ee:	cmp    ecx,0x2
  4112f1:	je     0x411cb4
  4112f7:	call   0x412460
  4112fc:	lea    rdx,[rip+0x10f9c]        # 0x42229f
  411303:	mov    r8,rax
  411306:	mov    rcx,r15
  411309:	call   0x40a930
  41130e:	mov    ecx,DWORD PTR [rbx+0x1c4]
  411314:	test   ecx,ecx
  411316:	je     0x411bd1
  41131c:	call   0x412468
  411321:	lea    rdx,[rip+0x10f87]        # 0x4222af
  411328:	mov    r8,rax
  41132b:	mov    rcx,r15
  41132e:	call   0x40a930
  411333:	mov    rdx,QWORD PTR [rbx+0x2b0]
  41133a:	test   rdx,rdx
  41133d:	js     0x411c99
  411343:	mov    rcx,rbp
  411346:	call   0x4121e8
  41134b:	lea    rdx,[rip+0x10f6d]        # 0x4222bf
  411352:	mov    r8,rbp
  411355:	mov    rcx,r15
  411358:	call   0x40a930
  41135d:	movsxd rax,DWORD PTR [r15+0x2c]
  411361:	movsxd r12,DWORD PTR [rbx+0x1a0]
  411368:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41136d:	mov    r8d,DWORD PTR [rax+0x58]
  411371:	test   r8d,r8d
  411374:	jne    0x411395
  411376:	mov    rcx,QWORD PTR [rax+0x50]
  41137a:	lea    rdx,[rip+0x10f47]        # 0x4222c8
  411381:	xor    r9d,r9d
  411384:	xor    r8d,r8d
  411387:	call   0x412438
  41138c:	test   rax,rax
  41138f:	je     0x40fdb7
  411395:	mov    rax,QWORD PTR [r15+0x8]
  411399:	mov    r8,r12
  41139c:	lea    rdx,[rip+0x10f25]        # 0x4222c8
  4113a3:	mov    rcx,r15
  4113a6:	call   QWORD PTR [rax+0x38]
  4113a9:	movsxd rax,DWORD PTR [r15+0x2c]
  4113ad:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4113b3:	jmp    0x40fdb7
  4113b8:	cdqe   
  4113ba:	movsxd rdx,edx
  4113bd:	lea    rcx,[r15+rax*8]
  4113c1:	mov    rax,QWORD PTR [rcx+0x58]
  4113c5:	mov    r8d,DWORD PTR [rax]
  4113c8:	mov    rax,QWORD PTR [r15+0x20]
  4113cc:	mov    DWORD PTR [r15+rdx*4+0x30],0x0
  4113d5:	add    rax,0xd80
  4113db:	cmp    r8d,0xf
  4113df:	mov    QWORD PTR [rcx+0x60],rax
  4113e3:	jne    0x410c7e
  4113e9:	mov    eax,DWORD PTR [r15+0x28ac]
  4113f0:	mov    DWORD PTR [r15+0x28b0],eax
  4113f7:	jmp    0x410c7e
  4113fc:	cdqe   
  4113fe:	add    rdx,QWORD PTR [r15+0x20]
  411402:	movsxd rcx,ecx
  411405:	lea    rax,[r15+rax*8]
  411409:	mov    r8,QWORD PTR [rax+0x58]
  41140d:	mov    r8d,DWORD PTR [r8]
  411410:	mov    DWORD PTR [r15+rcx*4+0x30],0x0
  411419:	mov    QWORD PTR [rax+0x60],rdx
  41141d:	cmp    r8d,0xf
  411421:	jne    0x4103b9
  411427:	mov    eax,DWORD PTR [r15+0x28ac]
  41142e:	mov    DWORD PTR [r15+0x28b0],eax
  411435:	jmp    0x4103b9
  41143a:	movsxd r12,eax
  41143d:	movsxd rax,DWORD PTR [r15+0x2c]
  411441:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411446:	mov    r13d,DWORD PTR [rax+0x58]
  41144a:	test   r13d,r13d
  41144d:	jne    0x41146e
  41144f:	mov    rcx,QWORD PTR [rax+0x50]
  411453:	lea    rdx,[rip+0x10ae1]        # 0x421f3b
  41145a:	xor    r9d,r9d
  41145d:	xor    r8d,r8d
  411460:	call   0x412438
  411465:	test   rax,rax
  411468:	je     0x40fe9b
  41146e:	mov    rax,QWORD PTR [r15+0x8]
  411472:	mov    r8,r12
  411475:	lea    rdx,[rip+0x10abf]        # 0x421f3b
  41147c:	mov    rcx,r15
  41147f:	call   QWORD PTR [rax+0x38]
  411482:	movsxd rax,DWORD PTR [r15+0x2c]
  411486:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41148c:	mov    eax,DWORD PTR [rbx+0x98]
  411492:	test   eax,eax
  411494:	jne    0x40fea9
  41149a:	lea    r8,[rip+0x10692]        # 0x421b33
  4114a1:	lea    rdx,[rip+0x10a99]        # 0x421f41
  4114a8:	mov    rcx,r15
  4114ab:	call   0x40ac10
  4114b0:	jmp    0x40fdb7
  4114b5:	mov    rcx,QWORD PTR [rax+0x50]
  4114b9:	lea    rdx,[rip+0x10b1d]        # 0x421fdd
  4114c0:	xor    r9d,r9d
  4114c3:	xor    r8d,r8d
  4114c6:	call   0x412438
  4114cb:	test   rax,rax
  4114ce:	jne    0x411000
  4114d4:	jmp    0x41101e
  4114d9:	nop    DWORD PTR [rax+0x0]
  4114e0:	xor    edx,edx
  4114e2:	mov    rcx,rbp
  4114e5:	mov    r8d,0x1
  4114eb:	call   0x412480
  4114f0:	lea    rdx,[rip+0x10689]        # 0x421b80
  4114f7:	mov    DWORD PTR [rsp+0x20],r13d
  4114fc:	mov    r9d,0x3a
  411502:	mov    r8d,r12d
  411505:	mov    rcx,rbp
  411508:	call   0x412478
  41150d:	mov    r8,QWORD PTR [rsp+0x960]
  411515:	lea    rdx,[rip+0x10a34]        # 0x421f50
  41151c:	mov    rcx,r15
  41151f:	call   0x40a930
  411524:	mov    r9d,DWORD PTR [rbx+0x98]
  41152b:	mov    r8d,DWORD PTR [rbx+0x94]
  411532:	lea    rcx,[rsp+0xc0]
  41153a:	mov    QWORD PTR [rsp+0x20],0x100000
  411543:	lea    rdx,[rcx+0x4]
  411547:	imul   r9d,r13d
  41154b:	imul   r8d,r12d
  41154f:	movsxd r9,r9d
  411552:	movsxd r8,r8d
  411555:	call   0x412230
  41155a:	mov    r12d,DWORD PTR [rsp+0xc0]
  411562:	mov    r13d,DWORD PTR [rsp+0xc4]
  41156a:	xor    edx,edx
  41156c:	mov    rcx,rbp
  41156f:	mov    r8d,0x1
  411575:	call   0x412480
  41157a:	lea    rdx,[rip+0x105ff]        # 0x421b80
  411581:	mov    r8d,r12d
  411584:	mov    rcx,rbp
  411587:	mov    DWORD PTR [rsp+0x20],r13d
  41158c:	mov    r9d,0x3a
  411592:	call   0x412478
  411597:	mov    r8,QWORD PTR [rsp+0x960]
  41159f:	lea    rdx,[rip+0x10cb7]        # 0x42225d
  4115a6:	mov    rcx,r15
  4115a9:	call   0x40a930
  4115ae:	jmp    0x4111ff
  4115b3:	mov    rcx,QWORD PTR [rax+0x50]
  4115b7:	lea    rdx,[rip+0x10c92]        # 0x422250
  4115be:	xor    r9d,r9d
  4115c1:	xor    r8d,r8d
  4115c4:	call   0x412438
  4115c9:	test   rax,rax
  4115cc:	jne    0x411194
  4115d2:	jmp    0x4111b2
  4115d7:	nop    WORD PTR [rax+rax*1+0x0]
  4115e0:	mov    rcx,QWORD PTR [rax+0x50]
  4115e4:	lea    rdx,[rip+0x10c58]        # 0x422243
  4115eb:	xor    r9d,r9d
  4115ee:	xor    r8d,r8d
  4115f1:	call   0x412438
  4115f6:	test   rax,rax
  4115f9:	jne    0x41115d
  4115ff:	movsxd rax,DWORD PTR [r15+0x2c]
  411603:	jmp    0x41117b
  411608:	nop    DWORD PTR [rax+rax*1+0x0]
  411610:	mov    rcx,QWORD PTR [rax+0x50]
  411614:	lea    rdx,[rip+0x10c1c]        # 0x422237
  41161b:	xor    r9d,r9d
  41161e:	xor    r8d,r8d
  411621:	call   0x412438
  411626:	test   rax,rax
  411629:	jne    0x411126
  41162f:	movsxd rax,DWORD PTR [r15+0x2c]
  411633:	jmp    0x411144
  411638:	nop    DWORD PTR [rax+rax*1+0x0]
  411640:	mov    rcx,QWORD PTR [rax+0x50]
  411644:	lea    rdx,[rip+0x108f6]        # 0x421f41
  41164b:	xor    r9d,r9d
  41164e:	xor    r8d,r8d
  411651:	call   0x412438
  411656:	test   rax,rax
  411659:	jne    0x4110ef
  41165f:	movsxd rax,DWORD PTR [r15+0x2c]
  411663:	jmp    0x41110d
  411668:	nop    DWORD PTR [rax+rax*1+0x0]
  411670:	mov    rcx,QWORD PTR [rax+0x50]
  411674:	lea    rdx,[rip+0x108c0]        # 0x421f3b
  41167b:	xor    r9d,r9d
  41167e:	xor    r8d,r8d
  411681:	call   0x412438
  411686:	test   rax,rax
  411689:	jne    0x4110ba
  41168f:	movsxd rax,DWORD PTR [r15+0x2c]
  411693:	jmp    0x4110d8
  411698:	nop    DWORD PTR [rax+rax*1+0x0]
  4116a0:	mov    r13,QWORD PTR [rsp+0x60]
  4116a5:	mov    rcx,r13
  4116a8:	call   0x412490
  4116ad:	mov    edx,DWORD PTR [rbx+0x1d4]
  4116b3:	mov    r8,QWORD PTR [rbx+0x1f0]
  4116ba:	mov    rcx,r13
  4116bd:	call   0x4124a0
  4116c2:	mov    r8,QWORD PTR [rsp+0x160]
  4116ca:	lea    rdx,[rip+0x10915]        # 0x421fe6
  4116d1:	mov    rcx,r15
  4116d4:	call   0x40a930
  4116d9:	jmp    0x411042
  4116de:	xchg   ax,ax
  4116e0:	cmp    DWORD PTR [rsi+0x8],0x23
  4116e4:	jle    0x410da3
  4116ea:	mov    r8d,0xffffffff
  4116f0:	xor    edx,edx
  4116f2:	mov    rcx,rbp
  4116f5:	mov    r13,QWORD PTR [rsi]
  4116f8:	mov    edi,0x9
  4116fd:	call   0x412480
  411702:	lea    rdx,[rip+0xf7a1]        # 0x420eaa
  411709:	mov    rcx,rbp
  41170c:	call   0x412478
  411711:	xor    eax,eax
  411713:	mov    QWORD PTR [rsp+0x50],rsi
  411718:	mov    rsi,r13
  41171b:	mov    r13d,eax
  41171e:	xchg   ax,ax
  411720:	lea    rdx,[rip+0x10000]        # 0x421727
  411727:	mov    r8d,r13d
  41172a:	mov    rcx,rbp
  41172d:	mov    r12d,0x3
  411733:	call   0x412478
  411738:	cmp    edi,0x3
  41173b:	cmovle r12d,edi
  41173f:	test   r12d,r12d
  411742:	jle    0x41176e
  411744:	lea    edx,[r12-0x1]
  411749:	lea    rbx,[rsi+rdx*4+0x4]
  41174e:	xchg   ax,ax
  411750:	mov    r8d,DWORD PTR [rsi]
  411753:	lea    rdx,[rip+0x10a28]        # 0x422182
  41175a:	mov    rcx,rbp
  41175d:	add    rsi,0x4
  411761:	call   0x412478
  411766:	cmp    rsi,rbx
  411769:	jne    0x411750
  41176b:	sub    edi,r12d
  41176e:	lea    rdx,[rip+0xf735]        # 0x420eaa
  411775:	mov    rcx,rbp
  411778:	add    r13d,0x1
  41177c:	call   0x412478
  411781:	test   edi,edi
  411783:	jne    0x411720
  411785:	mov    r8,QWORD PTR [rsp+0x960]
  41178d:	mov    rsi,QWORD PTR [rsp+0x50]
  411792:	lea    rdx,[rip+0x109ef]        # 0x422188
  411799:	mov    rcx,r15
  41179c:	call   0x40a930
  4117a1:	xor    edx,edx
  4117a3:	mov    rcx,rbp
  4117a6:	call   0x412488
  4117ab:	mov    rcx,QWORD PTR [rsi]
  4117ae:	call   0x412420
  4117b3:	movsxd rax,DWORD PTR [r15+0x2c]
  4117b7:	cvttsd2si rbx,xmm0
  4117bc:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4117c1:	mov    edx,DWORD PTR [rax+0x58]
  4117c4:	test   edx,edx
  4117c6:	jne    0x4117e7
  4117c8:	mov    rcx,QWORD PTR [rax+0x50]
  4117cc:	lea    rdx,[rip+0x109c3]        # 0x422196
  4117d3:	xor    r9d,r9d
  4117d6:	xor    r8d,r8d
  4117d9:	call   0x412438
  4117de:	test   rax,rax
  4117e1:	je     0x410da3
  4117e7:	mov    rax,QWORD PTR [r15+0x8]
  4117eb:	lea    rdx,[rip+0x109a4]        # 0x422196
  4117f2:	mov    r8,rbx
  4117f5:	mov    rcx,r15
  4117f8:	call   QWORD PTR [rax+0x38]
  4117fb:	movsxd rdx,DWORD PTR [r15+0x2c]
  4117ff:	mov    rax,rdx
  411802:	add    DWORD PTR [r15+rdx*4+0x30],0x1
  411808:	jmp    0x410daa
  41180d:	nop    DWORD PTR [rax]
  411810:	cmp    r8d,0xd
  411814:	je     0x411b79
  41181a:	add    DWORD PTR [r15+0x28ac],0x1
  411822:	jmp    0x410dd3
  411827:	nop    WORD PTR [rax+rax*1+0x0]
  411830:	xor    edx,edx
  411832:	mov    r8d,0x1
  411838:	mov    rcx,rbp
  41183b:	call   0x412480
  411840:	mov    rdi,QWORD PTR [rsp+0xd8]
  411848:	lea    rdx,[rip+0xfc47]        # 0x421496
  41184f:	mov    rcx,rbp
  411852:	mov    r14,rsi
  411855:	call   0x412478
  41185a:	cmp    rdi,rsi
  41185d:	je     0x41188f
  41185f:	mov    rax,rbx
  411862:	mov    rbx,rdi
  411865:	mov    rdi,rax
  411868:	nop    DWORD PTR [rax+rax*1+0x0]
  411870:	movzx  r8d,BYTE PTR [r14]
  411874:	lea    rdx,[rip+0xfc67]        # 0x4214e2
  41187b:	mov    rcx,rbp
  41187e:	add    r14,0x1
  411882:	call   0x412478
  411887:	cmp    r14,rbx
  41188a:	jne    0x411870
  41188c:	mov    rbx,rdi
  41188f:	mov    r9,QWORD PTR [rsp+0x960]
  411897:	lea    r8,[rip+0xfde2]        # 0x421680
  41189e:	mov    QWORD PTR [rsp+0x20],rbx
  4118a3:	mov    edx,0x30
  4118a8:	mov    rcx,r15
  4118ab:	call   0x412308
  4118b0:	mov    eax,DWORD PTR [r15+0x28b4]
  4118b7:	add    DWORD PTR [rsp+0x68],0x1
  4118bc:	test   eax,eax
  4118be:	je     0x4118f2
  4118c0:	cmp    eax,0x1
  4118c3:	jne    0x4118e4
  4118c5:	mov    r8,QWORD PTR [r15+0x28b8]
  4118cc:	mov    rcx,QWORD PTR [rsp+0x38]
  4118d1:	lea    rdx,[rip+0xf70e]        # 0x420fe6
  4118d8:	call   0x412478
  4118dd:	mov    eax,DWORD PTR [r15+0x28b4]
  4118e4:	cmp    eax,0x2
  4118e7:	jne    0x4104f0
  4118ed:	jmp    0x4104d8
  4118f2:	lea    r8,[rip+0xfdb7]        # 0x4216b0
  4118f9:	mov    edx,0x10
  4118fe:	mov    rcx,r15
  411901:	mov    r9,rbx
  411904:	mov    r14,QWORD PTR [rsp+0x78]
  411909:	call   0x412308
  41190e:	mov    rcx,QWORD PTR [rsp+0x38]
  411913:	lea    rdx,[rsp+0xc8]
  41191b:	call   0x412488
  411920:	mov    rax,QWORD PTR [r12+0x48]
  411925:	lea    r8,[rip+0x106ec]        # 0x422018
  41192c:	mov    edx,0x10
  411931:	mov    r9,rbx
  411934:	mov    rcx,r15
  411937:	mov    QWORD PTR [rsp+0x28],rax
  41193c:	mov    rax,QWORD PTR [rsp+0x58]
  411941:	mov    QWORD PTR [rsp+0x20],rax
  411946:	call   0x412308
  41194b:	mov    rcx,QWORD PTR [rsp+0xc8]
  411953:	call   0x4123c0
  411958:	mov    rcx,QWORD PTR [rsp+0xd0]
  411960:	call   0x4123c0
  411965:	movsxd rdx,DWORD PTR [r15+0x2c]
  411969:	mov    DWORD PTR [rsp+0x48],0xbebbb1b7
  411971:	add    DWORD PTR [r15+rdx*4+0x30],0x1
  411977:	mov    rax,rdx
  41197a:	lea    rcx,[r15+rdx*8]
  41197e:	test   eax,eax
  411980:	mov    r8,QWORD PTR [rcx+0x58]
  411984:	mov    r8d,DWORD PTR [r8]
  411987:	je     0x4119a3
  411989:	mov    rcx,QWORD PTR [rcx+0x50]
  41198d:	mov    ecx,DWORD PTR [rcx]
  41198f:	cmp    ecx,0xffffffff
  411992:	je     0x4119a3
  411994:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  41199a:	cmp    ecx,0xf
  41199d:	je     0x411c3b
  4119a3:	mov    rdx,QWORD PTR [r15+0x8]
  4119a7:	mov    rdx,QWORD PTR [rdx+0x30]
  4119ab:	test   rdx,rdx
  4119ae:	je     0x4119b9
  4119b0:	mov    rcx,r15
  4119b3:	call   rdx
  4119b5:	mov    eax,DWORD PTR [r15+0x2c]
  4119b9:	sub    eax,0x1
  4119bc:	mov    DWORD PTR [r15+0x2c],eax
  4119c0:	jmp    0x410658
  4119c5:	mov    rcx,QWORD PTR [r12+0x50]
  4119ca:	xor    r9d,r9d
  4119cd:	xor    r8d,r8d
  4119d0:	mov    rdx,rbx
  4119d3:	call   0x412438
  4119d8:	test   rax,rax
  4119db:	jne    0x410463
  4119e1:	jmp    0x41041a
  4119e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4119f0:	mov    rcx,QWORD PTR [rdx+0x50]
  4119f4:	lea    rdx,[rip+0x105fa]        # 0x421ff5
  4119fb:	xor    r9d,r9d
  4119fe:	xor    r8d,r8d
  411a01:	call   0x412438
  411a06:	test   rax,rax
  411a09:	jne    0x410d32
  411a0f:	movsxd rax,DWORD PTR [r15+0x2c]
  411a13:	jmp    0x410d50
  411a18:	nop    DWORD PTR [rax+rax*1+0x0]
  411a20:	xor    edx,edx
  411a22:	mov    r8d,0x1
  411a28:	mov    rcx,rbp
  411a2b:	call   0x412480
  411a30:	mov    rbx,QWORD PTR [rsp+0xd8]
  411a38:	lea    rdx,[rip+0xfa57]        # 0x421496
  411a3f:	mov    rcx,rbp
  411a42:	mov    r12,rsi
  411a45:	call   0x412478
  411a4a:	cmp    rbx,rsi
  411a4d:	je     0x411a6d
  411a4f:	nop
  411a50:	movzx  r8d,BYTE PTR [r12]
  411a55:	lea    rdx,[rip+0xfa86]        # 0x4214e2
  411a5c:	mov    rcx,rbp
  411a5f:	add    r12,0x1
  411a63:	call   0x412478
  411a68:	cmp    r12,rbx
  411a6b:	jne    0x411a50
  411a6d:	mov    rax,QWORD PTR [rsp+0x58]
  411a72:	mov    r9,QWORD PTR [rsp+0x960]
  411a7a:	lea    r8,[rip+0xfbff]        # 0x421680
  411a81:	mov    edx,0x30
  411a86:	mov    rcx,r15
  411a89:	mov    QWORD PTR [rsp+0x20],rax
  411a8e:	call   0x412308
  411a93:	mov    eax,DWORD PTR [r15+0x28b4]
  411a9a:	add    DWORD PTR [rsp+0x40],0x1
  411a9f:	test   eax,eax
  411aa1:	je     0x411ad5
  411aa3:	cmp    eax,0x1
  411aa6:	jne    0x411ac7
  411aa8:	mov    r8,QWORD PTR [r15+0x28b8]
  411aaf:	mov    rcx,QWORD PTR [rsp+0x38]
  411ab4:	lea    rdx,[rip+0xf52b]        # 0x420fe6
  411abb:	call   0x412478
  411ac0:	mov    eax,DWORD PTR [r15+0x28b4]
  411ac7:	cmp    eax,0x2
  411aca:	jne    0x4105c5
  411ad0:	jmp    0x4105ad
  411ad5:	mov    r9,QWORD PTR [rsp+0x58]
  411ada:	lea    r8,[rip+0xfbcf]        # 0x4216b0
  411ae1:	mov    rcx,r15
  411ae4:	mov    edx,0x10
  411ae9:	mov    r14,QWORD PTR [rsp+0x78]
  411aee:	mov    rbx,QWORD PTR [rsp+0x68]
  411af3:	mov    r12,QWORD PTR [rsp+0x80]
  411afb:	call   0x412308
  411b00:	mov    rcx,QWORD PTR [rsp+0x38]
  411b05:	lea    rdx,[rsp+0xd0]
  411b0d:	call   0x412488
  411b12:	jmp    0x411920
  411b17:	mov    eax,DWORD PTR [r15+0x2c]
  411b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  411b20:	movsxd rdx,eax
  411b23:	test   eax,eax
  411b25:	lea    rcx,[r15+rdx*8]
  411b29:	mov    r8,QWORD PTR [rcx+0x58]
  411b2d:	mov    r8d,DWORD PTR [r8]
  411b30:	je     0x411b4c
  411b32:	mov    rcx,QWORD PTR [rcx+0x50]
  411b36:	mov    ecx,DWORD PTR [rcx]
  411b38:	cmp    ecx,0xffffffff
  411b3b:	je     0x411b4c
  411b3d:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  411b43:	cmp    ecx,0xf
  411b46:	je     0x411c52
  411b4c:	mov    rdx,QWORD PTR [r15+0x8]
  411b50:	xor    r8d,r8d
  411b53:	mov    rdx,QWORD PTR [rdx+0x30]
  411b57:	test   rdx,rdx
  411b5a:	je     0x411b6d
  411b5c:	mov    rcx,r15
  411b5f:	call   rdx
  411b61:	mov    rdx,QWORD PTR [r15+0x8]
  411b65:	mov    eax,DWORD PTR [r15+0x2c]
  411b69:	mov    r8,QWORD PTR [rdx+0x30]
  411b6d:	sub    eax,0x1
  411b70:	mov    DWORD PTR [r15+0x2c],eax
  411b74:	jmp    0x410670
  411b79:	add    DWORD PTR [r15+0x28a8],0x1
  411b81:	jmp    0x410dd3
  411b86:	movsxd rdx,DWORD PTR [r15+0x2c]
  411b8a:	mov    r14,QWORD PTR [rsp+0x78]
  411b8f:	mov    DWORD PTR [rsp+0x48],0x0
  411b97:	mov    rax,rdx
  411b9a:	jmp    0x41197a
  411b9f:	cmp    r8d,0xd
  411ba3:	je     0x411d5b
  411ba9:	add    DWORD PTR [r15+0x28ac],0x1
  411bb1:	jmp    0x410b5a
  411bb6:	lea    r8,[rip+0xff76]        # 0x421b33
  411bbd:	lea    rdx,[rip+0x106b4]        # 0x422278
  411bc4:	mov    rcx,r15
  411bc7:	call   0x40ac10
  411bcc:	jmp    0x41129c
  411bd1:	xor    ecx,ecx
  411bd3:	call   0x412468
  411bd8:	lea    rdx,[rip+0x106d0]        # 0x4222af
  411bdf:	mov    r8,rax
  411be2:	mov    rcx,r15
  411be5:	call   0x40ac10
  411bea:	jmp    0x411333
  411bef:	mov    rcx,QWORD PTR [rdx+0x50]
  411bf3:	lea    rdx,[rip+0x106f4]        # 0x4222ee
  411bfa:	xor    r9d,r9d
  411bfd:	xor    r8d,r8d
  411c00:	call   0x412438
  411c05:	test   rax,rax
  411c08:	je     0x40ff55
  411c0e:	mov    rax,QWORD PTR [r15+0x8]
  411c12:	jmp    0x410c24
  411c17:	mov    rcx,QWORD PTR [rax+0x50]
  411c1b:	lea    rdx,[rip+0x10754]        # 0x422376
  411c22:	xor    r9d,r9d
  411c25:	xor    r8d,r8d
  411c28:	call   0x412438
  411c2d:	test   rax,rax
  411c30:	jne    0x41025b
  411c36:	jmp    0x410279
  411c3b:	cmp    r8d,0xd
  411c3f:	je     0x411dab
  411c45:	add    DWORD PTR [r15+0x28ac],0x1
  411c4d:	jmp    0x4119a3
  411c52:	cmp    r8d,0xd
  411c56:	je     0x411d9e
  411c5c:	add    DWORD PTR [r15+0x28ac],0x1
  411c64:	jmp    0x411b4c
  411c69:	add    DWORD PTR [r15+0x28a8],0x1
  411c71:	jmp    0x41069c
  411c76:	lea    r8,[rip+0x10211]        # 0x421e8e
  411c7d:	lea    rdx,[rip+0x10491]        # 0x422115
  411c84:	mov    rcx,r15
  411c87:	lea    rbp,[rsp+0x960]
  411c8f:	call   0x40ac10
  411c94:	jmp    0x40fdb7
  411c99:	lea    r8,[rip+0xfe93]        # 0x421b33
  411ca0:	lea    rdx,[rip+0x10618]        # 0x4222bf
  411ca7:	mov    rcx,r15
  411caa:	call   0x40ac10
  411caf:	jmp    0x41135d
  411cb4:	mov    ecx,0x2
  411cb9:	call   0x412460
  411cbe:	lea    rdx,[rip+0x105da]        # 0x42229f
  411cc5:	mov    r8,rax
  411cc8:	mov    rcx,r15
  411ccb:	call   0x40ac10
  411cd0:	jmp    0x41130e
  411cd5:	mov    ecx,0x2
  411cda:	call   0x412450
  411cdf:	lea    rdx,[rip+0x105aa]        # 0x422290
  411ce6:	mov    r8,rax
  411ce9:	mov    rcx,r15
  411cec:	call   0x40ac10
  411cf1:	jmp    0x4112e8
  411cf6:	lea    r8,[rip+0x10191]        # 0x421e8e
  411cfd:	lea    rdx,[rip+0x104e9]        # 0x4221ed
  411d04:	mov    rcx,r15
  411d07:	call   0x40ac10
  411d0c:	jmp    0x40fc92
  411d11:	lea    r8,[rip+0x10176]        # 0x421e8e
  411d18:	lea    rdx,[rip+0x102a8]        # 0x421fc7
  411d1f:	mov    rcx,r15
  411d22:	call   0x40ac10
  411d27:	jmp    0x410fa5
  411d2c:	mov    rax,QWORD PTR [r15+0x28b8]
  411d33:	mov    r9d,DWORD PTR [rsp+0x68]
  411d38:	lea    r8,[rip+0xf9a1]        # 0x4216e0
  411d3f:	mov    QWORD PTR [rsp+0x20],rbx
  411d44:	mov    edx,0x18
  411d49:	mov    rcx,r15
  411d4c:	mov    QWORD PTR [rsp+0x28],rax
  411d51:	call   0x412308
  411d56:	jmp    0x410513
  411d5b:	add    DWORD PTR [r15+0x28a8],0x1
  411d63:	jmp    0x410b5a
  411d68:	lea    r8,[rip+0x1011f]        # 0x421e8e
  411d6f:	lea    rdx,[rip+0x1050e]        # 0x422284
  411d76:	mov    rcx,r15
  411d79:	call   0x40ac10
  411d7e:	jmp    0x4112c2
  411d83:	lea    r8,[rip+0x10104]        # 0x421e8e
  411d8a:	lea    rdx,[rip+0x101b7]        # 0x421f48
  411d91:	mov    rcx,r15
  411d94:	call   0x40ac10
  411d99:	jmp    0x411225
  411d9e:	add    DWORD PTR [r15+0x28a8],0x1
  411da6:	jmp    0x411b4c
  411dab:	add    DWORD PTR [r15+0x28a8],0x1
  411db3:	jmp    0x4119a3
  411db8:	movsxd rax,DWORD PTR [r15+0x2c]
  411dbc:	jmp    0x410ad5
  411dc1:	movsxd rax,DWORD PTR [r15+0x2c]
  411dc5:	jmp    0x4107bd
  411dca:	movsxd rax,DWORD PTR [r15+0x2c]
  411dce:	jmp    0x410815
  411dd3:	movsxd rdx,DWORD PTR [r15+0x2c]
  411dd7:	mov    rax,rdx
  411dda:	jmp    0x410b31
  411ddf:	movsxd rax,DWORD PTR [r15+0x2c]
  411de3:	jmp    0x41086c
  411de8:	movsxd rax,DWORD PTR [r15+0x2c]
  411dec:	jmp    0x4108c3
  411df1:	movsxd rax,DWORD PTR [r15+0x2c]
  411df5:	jmp    0x41091c
  411dfa:	movsxd rax,DWORD PTR [r15+0x2c]
  411dfe:	jmp    0x410975
  411e03:	movsxd rax,DWORD PTR [r15+0x2c]
  411e07:	jmp    0x4109ce
  411e0c:	movsxd rax,DWORD PTR [r15+0x2c]
  411e10:	jmp    0x410a27
  411e15:	movsxd rax,DWORD PTR [r15+0x2c]
  411e19:	jmp    0x410a7e
  411e1e:	lea    r8,[rip+0x10069]        # 0x421e8e
  411e25:	lea    rdx,[rip+0x103b6]        # 0x4221e2
  411e2c:	mov    rcx,r15
  411e2f:	call   0x40ac10
  411e34:	mov    r8d,DWORD PTR [rip+0x17561]        # 0x42939c
  411e3b:	test   r8d,r8d
  411e3e:	jne    0x410eb4
  411e44:	lea    r8,[rip+0x10043]        # 0x421e8e
  411e4b:	lea    rdx,[rip+0x1039b]        # 0x4221ed
  411e52:	mov    rcx,r15
  411e55:	call   0x40ac10
  411e5a:	jmp    0x410eb4
  411e5f:	mov    rax,QWORD PTR [r15+0x28b8]
  411e66:	mov    r9d,DWORD PTR [rsp+0x40]
  411e6b:	lea    r8,[rip+0xf86e]        # 0x4216e0
  411e72:	mov    edx,0x18
  411e77:	mov    rcx,r15
  411e7a:	mov    QWORD PTR [rsp+0x28],rax
  411e7f:	mov    rax,QWORD PTR [rsp+0x58]
  411e84:	mov    QWORD PTR [rsp+0x20],rax
  411e89:	call   0x412308
  411e8e:	jmp    0x4105f2
  411e93:	call   0x419e29
  411e98:	nop
  411e99:	nop    DWORD PTR [rax+0x0]
  411ea0:	sub    rsp,0x38
  411ea4:	lea    rcx,[rip+0xfffffffffffef685]        # 0x401530
  411eab:	call   0x4122e0
  411eb0:	lea    r8,[rip+0x10551]        # 0x422408
  411eb7:	xor    ecx,ecx
  411eb9:	mov    edx,0x20
  411ebe:	call   0x412308
  411ec3:	lea    r9,[rip+0x133ce]        # 0x425298
  411eca:	lea    r8,[rip+0x1055f]        # 0x422430
  411ed1:	xor    ecx,ecx
  411ed3:	mov    edx,0x20
  411ed8:	call   0x412308
  411edd:	lea    r8,[rip+0xefc6]        # 0x420eaa
  411ee4:	xor    ecx,ecx
  411ee6:	mov    edx,0x20
  411eeb:	call   0x412308
  411ef0:	mov    rcx,QWORD PTR [rip+0x17409]        # 0x429300
  411ef7:	lea    rdx,[rip+0x10554]        # 0x422452
  411efe:	xor    r9d,r9d
  411f01:	xor    r8d,r8d
  411f04:	mov    DWORD PTR [rsp+0x20],0x0
  411f0c:	call   0x402510
  411f11:	lea    rcx,[rip+0xef92]        # 0x420eaa
  411f18:	call   0x407ff0
  411f1d:	call   0x412008
  411f22:	mov    edx,0x2
  411f27:	mov    rcx,rax
  411f2a:	add    rsp,0x38
  411f2e:	jmp    0x4026c0
  411f33:	nop
  411f34:	nop
  411f35:	nop
  411f36:	nop
  411f37:	nop
  411f38:	nop
  411f39:	nop
  411f3a:	nop
  411f3b:	nop
  411f3c:	nop
  411f3d:	nop
  411f3e:	nop
  411f3f:	nop
  411f40:	jmp    QWORD PTR [rip+0x19e6e]        # 0x42bdb4
  411f46:	nop
  411f47:	nop
  411f48:	jmp    QWORD PTR [rip+0x19e5e]        # 0x42bdac
  411f4e:	nop
  411f4f:	nop
  411f50:	jmp    QWORD PTR [rip+0x19e4e]        # 0x42bda4
  411f56:	nop
  411f57:	nop
  411f58:	jmp    QWORD PTR [rip+0x19e3e]        # 0x42bd9c
  411f5e:	nop
  411f5f:	nop
  411f60:	jmp    QWORD PTR [rip+0x19e2e]        # 0x42bd94
  411f66:	nop
  411f67:	nop
  411f68:	jmp    QWORD PTR [rip+0x19e1e]        # 0x42bd8c
  411f6e:	nop
  411f6f:	nop
  411f70:	jmp    QWORD PTR [rip+0x19e0e]        # 0x42bd84
  411f76:	nop
  411f77:	nop
  411f78:	jmp    QWORD PTR [rip+0x19dfe]        # 0x42bd7c
  411f7e:	nop
  411f7f:	nop
  411f80:	jmp    QWORD PTR [rip+0x19dee]        # 0x42bd74
  411f86:	nop
  411f87:	nop
  411f88:	jmp    QWORD PTR [rip+0x19dde]        # 0x42bd6c
  411f8e:	nop
  411f8f:	nop
  411f90:	jmp    QWORD PTR [rip+0x19e5e]        # 0x42bdf4
  411f96:	nop
  411f97:	nop
  411f98:	jmp    QWORD PTR [rip+0x19e4e]        # 0x42bdec
  411f9e:	nop
  411f9f:	nop
  411fa0:	jmp    QWORD PTR [rip+0x19e3e]        # 0x42bde4
  411fa6:	nop
  411fa7:	nop
  411fa8:	jmp    QWORD PTR [rip+0x19e2e]        # 0x42bddc
  411fae:	nop
  411faf:	nop
  411fb0:	jmp    QWORD PTR [rip+0x19e1e]        # 0x42bdd4
  411fb6:	nop
  411fb7:	nop
  411fb8:	jmp    QWORD PTR [rip+0x19e0e]        # 0x42bdcc
  411fbe:	nop
  411fbf:	nop
  411fc0:	jmp    QWORD PTR [rip+0x19dfe]        # 0x42bdc4
  411fc6:	nop
  411fc7:	nop
  411fc8:	jmp    QWORD PTR [rip+0x19ede]        # 0x42beac
  411fce:	nop
  411fcf:	nop
  411fd0:	jmp    QWORD PTR [rip+0x19ece]        # 0x42bea4
  411fd6:	nop
  411fd7:	nop
  411fd8:	jmp    QWORD PTR [rip+0x19ebe]        # 0x42be9c
  411fde:	nop
  411fdf:	nop
  411fe0:	jmp    QWORD PTR [rip+0x19eae]        # 0x42be94
  411fe6:	nop
  411fe7:	nop
  411fe8:	jmp    QWORD PTR [rip+0x19e9e]        # 0x42be8c
  411fee:	nop
  411fef:	nop
  411ff0:	jmp    QWORD PTR [rip+0x19e8e]        # 0x42be84
  411ff6:	nop
  411ff7:	nop
  411ff8:	jmp    QWORD PTR [rip+0x19e7e]        # 0x42be7c
  411ffe:	nop
  411fff:	nop
  412000:	jmp    QWORD PTR [rip+0x19e6e]        # 0x42be74
  412006:	nop
  412007:	nop
  412008:	jmp    QWORD PTR [rip+0x19e5e]        # 0x42be6c
  41200e:	nop
  41200f:	nop
  412010:	jmp    QWORD PTR [rip+0x19e4e]        # 0x42be64
  412016:	nop
  412017:	nop
  412018:	jmp    QWORD PTR [rip+0x19e3e]        # 0x42be5c
  41201e:	nop
  41201f:	nop
  412020:	jmp    QWORD PTR [rip+0x19e2e]        # 0x42be54
  412026:	nop
  412027:	nop
  412028:	jmp    QWORD PTR [rip+0x19e1e]        # 0x42be4c
  41202e:	nop
  41202f:	nop
  412030:	jmp    QWORD PTR [rip+0x19e0e]        # 0x42be44
  412036:	nop
  412037:	nop
  412038:	jmp    QWORD PTR [rip+0x19dfe]        # 0x42be3c
  41203e:	nop
  41203f:	nop
  412040:	jmp    QWORD PTR [rip+0x19dee]        # 0x42be34
  412046:	nop
  412047:	nop
  412048:	jmp    QWORD PTR [rip+0x19dde]        # 0x42be2c
  41204e:	nop
  41204f:	nop
  412050:	jmp    QWORD PTR [rip+0x19dce]        # 0x42be24
  412056:	nop
  412057:	nop
  412058:	jmp    QWORD PTR [rip+0x19dbe]        # 0x42be1c
  41205e:	nop
  41205f:	nop
  412060:	jmp    QWORD PTR [rip+0x19dae]        # 0x42be14
  412066:	nop
  412067:	nop
  412068:	jmp    QWORD PTR [rip+0x19d9e]        # 0x42be0c
  41206e:	nop
  41206f:	nop
  412070:	jmp    QWORD PTR [rip+0x19d8e]        # 0x42be04
  412076:	nop
  412077:	nop
  412078:	jmp    QWORD PTR [rip+0x19cde]        # 0x42bd5c
  41207e:	nop
  41207f:	nop
  412080:	jmp    QWORD PTR [rip+0x19cce]        # 0x42bd54
  412086:	nop
  412087:	nop
  412088:	jmp    QWORD PTR [rip+0x19cbe]        # 0x42bd4c
  41208e:	nop
  41208f:	nop
  412090:	jmp    QWORD PTR [rip+0x19cae]        # 0x42bd44
  412096:	nop
  412097:	nop
  412098:	jmp    QWORD PTR [rip+0x19c9e]        # 0x42bd3c
  41209e:	nop
  41209f:	nop
  4120a0:	jmp    QWORD PTR [rip+0x19c8e]        # 0x42bd34
  4120a6:	nop
  4120a7:	nop
  4120a8:	jmp    QWORD PTR [rip+0x19c7e]        # 0x42bd2c
  4120ae:	nop
  4120af:	nop
  4120b0:	jmp    QWORD PTR [rip+0x19c6e]        # 0x42bd24
  4120b6:	nop
  4120b7:	nop
  4120b8:	jmp    QWORD PTR [rip+0x19c5e]        # 0x42bd1c
  4120be:	nop
  4120bf:	nop
  4120c0:	jmp    QWORD PTR [rip+0x19c4e]        # 0x42bd14
  4120c6:	nop
  4120c7:	nop
  4120c8:	jmp    QWORD PTR [rip+0x19c3e]        # 0x42bd0c
  4120ce:	nop
  4120cf:	nop
  4120d0:	jmp    QWORD PTR [rip+0x19c2e]        # 0x42bd04
  4120d6:	nop
  4120d7:	nop
  4120d8:	jmp    QWORD PTR [rip+0x19c1e]        # 0x42bcfc
  4120de:	nop
  4120df:	nop
  4120e0:	jmp    QWORD PTR [rip+0x19c0e]        # 0x42bcf4
  4120e6:	nop
  4120e7:	nop
  4120e8:	jmp    QWORD PTR [rip+0x19bfe]        # 0x42bcec
  4120ee:	nop
  4120ef:	nop
  4120f0:	jmp    QWORD PTR [rip+0x19bee]        # 0x42bce4
  4120f6:	nop
  4120f7:	nop
  4120f8:	jmp    QWORD PTR [rip+0x19bde]        # 0x42bcdc
  4120fe:	nop
  4120ff:	nop
  412100:	jmp    QWORD PTR [rip+0x19bce]        # 0x42bcd4
  412106:	nop
  412107:	nop
  412108:	jmp    QWORD PTR [rip+0x19bbe]        # 0x42bccc
  41210e:	nop
  41210f:	nop
  412110:	jmp    QWORD PTR [rip+0x19bae]        # 0x42bcc4
  412116:	nop
  412117:	nop
  412118:	jmp    QWORD PTR [rip+0x19b9e]        # 0x42bcbc
  41211e:	nop
  41211f:	nop
  412120:	jmp    QWORD PTR [rip+0x19b8e]        # 0x42bcb4
  412126:	nop
  412127:	nop
  412128:	jmp    QWORD PTR [rip+0x19b7e]        # 0x42bcac
  41212e:	nop
  41212f:	nop
  412130:	jmp    QWORD PTR [rip+0x19b6e]        # 0x42bca4
  412136:	nop
  412137:	nop
  412138:	jmp    QWORD PTR [rip+0x19b5e]        # 0x42bc9c
  41213e:	nop
  41213f:	nop
  412140:	jmp    QWORD PTR [rip+0x19b4e]        # 0x42bc94
  412146:	nop
  412147:	nop
  412148:	jmp    QWORD PTR [rip+0x19d7e]        # 0x42becc
  41214e:	nop
  41214f:	nop
  412150:	jmp    QWORD PTR [rip+0x19d6e]        # 0x42bec4
  412156:	nop
  412157:	nop
  412158:	jmp    QWORD PTR [rip+0x19d5e]        # 0x42bebc
  41215e:	nop
  41215f:	nop
  412160:	jmp    QWORD PTR [rip+0x1a06e]        # 0x42c1d4
  412166:	nop
  412167:	nop
  412168:	jmp    QWORD PTR [rip+0x1a05e]        # 0x42c1cc
  41216e:	nop
  41216f:	nop
  412170:	jmp    QWORD PTR [rip+0x1a08e]        # 0x42c204
  412176:	nop
  412177:	nop
  412178:	jmp    QWORD PTR [rip+0x1a07e]        # 0x42c1fc
  41217e:	nop
  41217f:	nop
  412180:	jmp    QWORD PTR [rip+0x1a06e]        # 0x42c1f4
  412186:	nop
  412187:	nop
  412188:	jmp    QWORD PTR [rip+0x1a05e]        # 0x42c1ec
  41218e:	nop
  41218f:	nop
  412190:	jmp    QWORD PTR [rip+0x1a04e]        # 0x42c1e4
  412196:	nop
  412197:	nop
  412198:	jmp    QWORD PTR [rip+0x1a0a6]        # 0x42c244
  41219e:	nop
  41219f:	nop
  4121a0:	jmp    QWORD PTR [rip+0x1a096]        # 0x42c23c
  4121a6:	nop
  4121a7:	nop
  4121a8:	jmp    QWORD PTR [rip+0x1a086]        # 0x42c234
  4121ae:	nop
  4121af:	nop
  4121b0:	jmp    QWORD PTR [rip+0x1a076]        # 0x42c22c
  4121b6:	nop
  4121b7:	nop
  4121b8:	jmp    QWORD PTR [rip+0x1a066]        # 0x42c224
  4121be:	nop
  4121bf:	nop
  4121c0:	jmp    QWORD PTR [rip+0x1a056]        # 0x42c21c
  4121c6:	nop
  4121c7:	nop
  4121c8:	jmp    QWORD PTR [rip+0x1a046]        # 0x42c214
  4121ce:	nop
  4121cf:	nop
  4121d0:	jmp    QWORD PTR [rip+0x19fe6]        # 0x42c1bc
  4121d6:	nop
  4121d7:	nop
  4121d8:	jmp    QWORD PTR [rip+0x19fd6]        # 0x42c1b4
  4121de:	nop
  4121df:	nop
  4121e0:	jmp    QWORD PTR [rip+0x19fc6]        # 0x42c1ac
  4121e6:	nop
  4121e7:	nop
  4121e8:	jmp    QWORD PTR [rip+0x19fb6]        # 0x42c1a4
  4121ee:	nop
  4121ef:	nop
  4121f0:	jmp    QWORD PTR [rip+0x19fa6]        # 0x42c19c
  4121f6:	nop
  4121f7:	nop
  4121f8:	jmp    QWORD PTR [rip+0x19f96]        # 0x42c194
  4121fe:	nop
  4121ff:	nop
  412200:	jmp    QWORD PTR [rip+0x19f86]        # 0x42c18c
  412206:	nop
  412207:	nop
  412208:	jmp    QWORD PTR [rip+0x19f76]        # 0x42c184
  41220e:	nop
  41220f:	nop
  412210:	jmp    QWORD PTR [rip+0x19f66]        # 0x42c17c
  412216:	nop
  412217:	nop
  412218:	jmp    QWORD PTR [rip+0x19f56]        # 0x42c174
  41221e:	nop
  41221f:	nop
  412220:	jmp    QWORD PTR [rip+0x19f46]        # 0x42c16c
  412226:	nop
  412227:	nop
  412228:	jmp    QWORD PTR [rip+0x19f36]        # 0x42c164
  41222e:	nop
  41222f:	nop
  412230:	jmp    QWORD PTR [rip+0x19f26]        # 0x42c15c
  412236:	nop
  412237:	nop
  412238:	jmp    QWORD PTR [rip+0x19f16]        # 0x42c154
  41223e:	nop
  41223f:	nop
  412240:	jmp    QWORD PTR [rip+0x19f06]        # 0x42c14c
  412246:	nop
  412247:	nop
  412248:	jmp    QWORD PTR [rip+0x19ef6]        # 0x42c144
  41224e:	nop
  41224f:	nop
  412250:	jmp    QWORD PTR [rip+0x19ee6]        # 0x42c13c
  412256:	nop
  412257:	nop
  412258:	jmp    QWORD PTR [rip+0x19ed6]        # 0x42c134
  41225e:	nop
  41225f:	nop
  412260:	jmp    QWORD PTR [rip+0x19ec6]        # 0x42c12c
  412266:	nop
  412267:	nop
  412268:	jmp    QWORD PTR [rip+0x19eb6]        # 0x42c124
  41226e:	nop
  41226f:	nop
  412270:	jmp    QWORD PTR [rip+0x19ea6]        # 0x42c11c
  412276:	nop
  412277:	nop
  412278:	jmp    QWORD PTR [rip+0x19e96]        # 0x42c114
  41227e:	nop
  41227f:	nop
  412280:	jmp    QWORD PTR [rip+0x19e86]        # 0x42c10c
  412286:	nop
  412287:	nop
  412288:	jmp    QWORD PTR [rip+0x19e76]        # 0x42c104
  41228e:	nop
  41228f:	nop
  412290:	jmp    QWORD PTR [rip+0x19e66]        # 0x42c0fc
  412296:	nop
  412297:	nop
  412298:	jmp    QWORD PTR [rip+0x19e56]        # 0x42c0f4
  41229e:	nop
  41229f:	nop
  4122a0:	jmp    QWORD PTR [rip+0x19e46]        # 0x42c0ec
  4122a6:	nop
  4122a7:	nop
  4122a8:	jmp    QWORD PTR [rip+0x19e36]        # 0x42c0e4
  4122ae:	nop
  4122af:	nop
  4122b0:	jmp    QWORD PTR [rip+0x19e26]        # 0x42c0dc
  4122b6:	nop
  4122b7:	nop
  4122b8:	jmp    QWORD PTR [rip+0x19e16]        # 0x42c0d4
  4122be:	nop
  4122bf:	nop
  4122c0:	jmp    QWORD PTR [rip+0x19e06]        # 0x42c0cc
  4122c6:	nop
  4122c7:	nop
  4122c8:	jmp    QWORD PTR [rip+0x19df6]        # 0x42c0c4
  4122ce:	nop
  4122cf:	nop
  4122d0:	jmp    QWORD PTR [rip+0x19de6]        # 0x42c0bc
  4122d6:	nop
  4122d7:	nop
  4122d8:	jmp    QWORD PTR [rip+0x19dd6]        # 0x42c0b4
  4122de:	nop
  4122df:	nop
  4122e0:	jmp    QWORD PTR [rip+0x19dc6]        # 0x42c0ac
  4122e6:	nop
  4122e7:	nop
  4122e8:	jmp    QWORD PTR [rip+0x19db6]        # 0x42c0a4
  4122ee:	nop
  4122ef:	nop
  4122f0:	jmp    QWORD PTR [rip+0x19da6]        # 0x42c09c
  4122f6:	nop
  4122f7:	nop
  4122f8:	jmp    QWORD PTR [rip+0x19d96]        # 0x42c094
  4122fe:	nop
  4122ff:	nop
  412300:	jmp    QWORD PTR [rip+0x19d86]        # 0x42c08c
  412306:	nop
  412307:	nop
  412308:	jmp    QWORD PTR [rip+0x19d76]        # 0x42c084
  41230e:	nop
  41230f:	nop
  412310:	jmp    QWORD PTR [rip+0x19d66]        # 0x42c07c
  412316:	nop
  412317:	nop
  412318:	jmp    QWORD PTR [rip+0x19d56]        # 0x42c074
  41231e:	nop
  41231f:	nop
  412320:	jmp    QWORD PTR [rip+0x19d46]        # 0x42c06c
  412326:	nop
  412327:	nop
  412328:	jmp    QWORD PTR [rip+0x19d36]        # 0x42c064
  41232e:	nop
  41232f:	nop
  412330:	jmp    QWORD PTR [rip+0x19d26]        # 0x42c05c
  412336:	nop
  412337:	nop
  412338:	jmp    QWORD PTR [rip+0x19d16]        # 0x42c054
  41233e:	nop
  41233f:	nop
  412340:	jmp    QWORD PTR [rip+0x19d06]        # 0x42c04c
  412346:	nop
  412347:	nop
  412348:	jmp    QWORD PTR [rip+0x19cf6]        # 0x42c044
  41234e:	nop
  41234f:	nop
  412350:	jmp    QWORD PTR [rip+0x19ce6]        # 0x42c03c
  412356:	nop
  412357:	nop
  412358:	jmp    QWORD PTR [rip+0x19cd6]        # 0x42c034
  41235e:	nop
  41235f:	nop
  412360:	jmp    QWORD PTR [rip+0x19cc6]        # 0x42c02c
  412366:	nop
  412367:	nop
  412368:	jmp    QWORD PTR [rip+0x19cb6]        # 0x42c024
  41236e:	nop
  41236f:	nop
  412370:	jmp    QWORD PTR [rip+0x19ca6]        # 0x42c01c
  412376:	nop
  412377:	nop
  412378:	jmp    QWORD PTR [rip+0x19c96]        # 0x42c014
  41237e:	nop
  41237f:	nop
  412380:	jmp    QWORD PTR [rip+0x19c86]        # 0x42c00c
  412386:	nop
  412387:	nop
  412388:	jmp    QWORD PTR [rip+0x19c76]        # 0x42c004
  41238e:	nop
  41238f:	nop
  412390:	jmp    QWORD PTR [rip+0x19c66]        # 0x42bffc
  412396:	nop
  412397:	nop
  412398:	jmp    QWORD PTR [rip+0x19c56]        # 0x42bff4
  41239e:	nop
  41239f:	nop
  4123a0:	jmp    QWORD PTR [rip+0x19c46]        # 0x42bfec
  4123a6:	nop
  4123a7:	nop
  4123a8:	jmp    QWORD PTR [rip+0x19c36]        # 0x42bfe4
  4123ae:	nop
  4123af:	nop
  4123b0:	jmp    QWORD PTR [rip+0x19c26]        # 0x42bfdc
  4123b6:	nop
  4123b7:	nop
  4123b8:	jmp    QWORD PTR [rip+0x19c16]        # 0x42bfd4
  4123be:	nop
  4123bf:	nop
  4123c0:	jmp    QWORD PTR [rip+0x19c06]        # 0x42bfcc
  4123c6:	nop
  4123c7:	nop
  4123c8:	jmp    QWORD PTR [rip+0x19bf6]        # 0x42bfc4
  4123ce:	nop
  4123cf:	nop
  4123d0:	jmp    QWORD PTR [rip+0x19be6]        # 0x42bfbc
  4123d6:	nop
  4123d7:	nop
  4123d8:	jmp    QWORD PTR [rip+0x19bd6]        # 0x42bfb4
  4123de:	nop
  4123df:	nop
  4123e0:	jmp    QWORD PTR [rip+0x19bc6]        # 0x42bfac
  4123e6:	nop
  4123e7:	nop
  4123e8:	jmp    QWORD PTR [rip+0x19bb6]        # 0x42bfa4
  4123ee:	nop
  4123ef:	nop
  4123f0:	jmp    QWORD PTR [rip+0x19ba6]        # 0x42bf9c
  4123f6:	nop
  4123f7:	nop
  4123f8:	jmp    QWORD PTR [rip+0x19b96]        # 0x42bf94
  4123fe:	nop
  4123ff:	nop
  412400:	jmp    QWORD PTR [rip+0x19b86]        # 0x42bf8c
  412406:	nop
  412407:	nop
  412408:	jmp    QWORD PTR [rip+0x19b76]        # 0x42bf84
  41240e:	nop
  41240f:	nop
  412410:	jmp    QWORD PTR [rip+0x19b66]        # 0x42bf7c
  412416:	nop
  412417:	nop
  412418:	jmp    QWORD PTR [rip+0x19b56]        # 0x42bf74
  41241e:	nop
  41241f:	nop
  412420:	jmp    QWORD PTR [rip+0x19b46]        # 0x42bf6c
  412426:	nop
  412427:	nop
  412428:	jmp    QWORD PTR [rip+0x19b36]        # 0x42bf64
  41242e:	nop
  41242f:	nop
  412430:	jmp    QWORD PTR [rip+0x19b26]        # 0x42bf5c
  412436:	nop
  412437:	nop
  412438:	jmp    QWORD PTR [rip+0x19b16]        # 0x42bf54
  41243e:	nop
  41243f:	nop
  412440:	jmp    QWORD PTR [rip+0x19b06]        # 0x42bf4c
  412446:	nop
  412447:	nop
  412448:	jmp    QWORD PTR [rip+0x19af6]        # 0x42bf44
  41244e:	nop
  41244f:	nop
  412450:	jmp    QWORD PTR [rip+0x19ae6]        # 0x42bf3c
  412456:	nop
  412457:	nop
  412458:	jmp    QWORD PTR [rip+0x19ad6]        # 0x42bf34
  41245e:	nop
  41245f:	nop
  412460:	jmp    QWORD PTR [rip+0x19ac6]        # 0x42bf2c
  412466:	nop
  412467:	nop
  412468:	jmp    QWORD PTR [rip+0x19ab6]        # 0x42bf24
  41246e:	nop
  41246f:	nop
  412470:	jmp    QWORD PTR [rip+0x19aa6]        # 0x42bf1c
  412476:	nop
  412477:	nop
  412478:	jmp    QWORD PTR [rip+0x19a96]        # 0x42bf14
  41247e:	nop
  41247f:	nop
  412480:	jmp    QWORD PTR [rip+0x19a86]        # 0x42bf0c
  412486:	nop
  412487:	nop
  412488:	jmp    QWORD PTR [rip+0x19a76]        # 0x42bf04
  41248e:	nop
  41248f:	nop
  412490:	jmp    QWORD PTR [rip+0x19a66]        # 0x42befc
  412496:	nop
  412497:	nop
  412498:	jmp    QWORD PTR [rip+0x19a56]        # 0x42bef4
  41249e:	nop
  41249f:	nop
  4124a0:	jmp    QWORD PTR [rip+0x19a46]        # 0x42beec
  4124a6:	nop
  4124a7:	nop
  4124a8:	jmp    QWORD PTR [rip+0x19a36]        # 0x42bee4
  4124ae:	nop
  4124af:	nop
  4124b0:	jmp    QWORD PTR [rip+0x19a26]        # 0x42bedc
  4124b6:	nop
  4124b7:	nop
  4124b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4124c0:	push   rbx
  4124c1:	sub    rsp,0x30
  4124c5:	mov    rbx,rcx
  4124c8:	mov    rcx,QWORD PTR [rip+0x18359]        # 0x42a828
  4124cf:	call   0x412a70
  4124d4:	cmp    rax,0xffffffffffffffff
  4124d8:	mov    QWORD PTR [rsp+0x20],rax
  4124dd:	je     0x412555
  4124df:	mov    ecx,0x8
  4124e4:	call   0x419930
  4124e9:	mov    rcx,QWORD PTR [rip+0x18338]        # 0x42a828
  4124f0:	call   0x412a70
  4124f5:	mov    rcx,QWORD PTR [rip+0x18334]        # 0x42a830
  4124fc:	mov    QWORD PTR [rsp+0x20],rax
  412501:	call   0x412a70
  412506:	lea    rdx,[rsp+0x20]
  41250b:	lea    r8,[rsp+0x28]
  412510:	mov    rcx,rbx
  412513:	mov    QWORD PTR [rsp+0x28],rax
  412518:	call   0x419988
  41251d:	mov    rcx,QWORD PTR [rsp+0x20]
  412522:	mov    rbx,rax
  412525:	call   0x412a80
  41252a:	mov    rcx,QWORD PTR [rsp+0x28]
  41252f:	mov    QWORD PTR [rip+0x182f2],rax        # 0x42a828
  412536:	call   0x412a80
  41253b:	mov    ecx,0x8
  412540:	mov    QWORD PTR [rip+0x182e9],rax        # 0x42a830
  412547:	call   0x419918
  41254c:	mov    rax,rbx
  41254f:	add    rsp,0x30
  412553:	pop    rbx
  412554:	ret    
  412555:	mov    rax,QWORD PTR [rip+0x135d4]        # 0x425b30
  41255c:	mov    rcx,rbx
  41255f:	call   QWORD PTR [rax]
  412561:	add    rsp,0x30
  412565:	pop    rbx
  412566:	ret    
  412567:	nop    WORD PTR [rax+rax*1+0x0]
  412570:	sub    rsp,0x28
  412574:	call   0x4124c0
  412579:	test   rax,rax
  41257c:	sete   al
  41257f:	movzx  eax,al
  412582:	neg    eax
  412584:	add    rsp,0x28
  412588:	ret    
  412589:	nop
  41258a:	nop
  41258b:	nop
  41258c:	nop
  41258d:	nop
  41258e:	nop
  41258f:	nop
  412590:	sub    rsp,0x28
  412594:	mov    rax,QWORD PTR [rip+0xbaa5]        # 0x41e040
  41259b:	mov    rax,QWORD PTR [rax]
  41259e:	test   rax,rax
  4125a1:	je     0x4125c0
  4125a3:	call   rax
  4125a5:	mov    rax,QWORD PTR [rip+0xba94]        # 0x41e040
  4125ac:	lea    rdx,[rax+0x8]
  4125b0:	mov    rax,QWORD PTR [rax+0x8]
  4125b4:	mov    QWORD PTR [rip+0xba85],rdx        # 0x41e040
  4125bb:	test   rax,rax
  4125be:	jne    0x4125a3
  4125c0:	add    rsp,0x28
  4125c4:	ret    
  4125c5:	nop
  4125c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4125d0:	push   rsi
  4125d1:	push   rbx
  4125d2:	sub    rsp,0x28
  4125d6:	mov    rsi,QWORD PTR [rip+0x134c3]        # 0x425aa0
  4125dd:	mov    rax,QWORD PTR [rsi]
  4125e0:	cmp    eax,0xffffffff
  4125e3:	mov    ebx,eax
  4125e5:	je     0x412610
  4125e7:	test   ebx,ebx
  4125e9:	je     0x4125fa
  4125eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4125f0:	mov    eax,ebx
  4125f2:	call   QWORD PTR [rsi+rax*8]
  4125f5:	sub    ebx,0x1
  4125f8:	jne    0x4125f0
  4125fa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x412590
  412601:	add    rsp,0x28
  412605:	pop    rbx
  412606:	pop    rsi
  412607:	jmp    0x412570
  41260c:	nop    DWORD PTR [rax+0x0]
  412610:	xor    ebx,ebx
  412612:	jmp    0x412616
  412614:	mov    ebx,eax
  412616:	lea    edx,[rbx+0x1]
  412619:	cmp    QWORD PTR [rsi+rdx*8],0x0
  41261e:	mov    rax,rdx
  412621:	jne    0x412614
  412623:	jmp    0x4125e7
  412625:	nop
  412626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412630:	mov    eax,DWORD PTR [rip+0x16d8a]        # 0x4293c0
  412636:	test   eax,eax
  412638:	je     0x412640
  41263a:	repz ret 
  41263c:	nop    DWORD PTR [rax+0x0]
  412640:	mov    DWORD PTR [rip+0x16d76],0x1        # 0x4293c0
  41264a:	jmp    0x4125d0
  41264c:	nop
  41264d:	nop
  41264e:	nop
  41264f:	nop
  412650:	mov    rax,QWORD PTR [rip+0x19495]        # 0x42baec
  412657:	rex.W jmp rax
  41265a:	nop
  41265b:	nop
  41265c:	nop
  41265d:	nop
  41265e:	nop
  41265f:	nop
  412660:	xor    eax,eax
  412662:	ret    
  412663:	nop
  412664:	nop
  412665:	nop
  412666:	nop
  412667:	nop
  412668:	nop
  412669:	nop
  41266a:	nop
  41266b:	nop
  41266c:	nop
  41266d:	nop
  41266e:	nop
  41266f:	nop
  412670:	push   r12
  412672:	push   rbp
  412673:	push   rdi
  412674:	push   rsi
  412675:	push   rbx
  412676:	sub    rsp,0x40
  41267a:	mov    rbx,QWORD PTR [rip+0xba5f]        # 0x41e0e0
  412681:	movabs rax,0x2b992ddfa232
  41268b:	mov    QWORD PTR [rsp+0x20],0x0
  412694:	cmp    rbx,rax
  412697:	je     0x4126b0
  412699:	not    rbx
  41269c:	mov    QWORD PTR [rip+0xba4d],rbx        # 0x41e0f0
  4126a3:	add    rsp,0x40
  4126a7:	pop    rbx
  4126a8:	pop    rsi
  4126a9:	pop    rdi
  4126aa:	pop    rbp
  4126ab:	pop    r12
  4126ad:	ret    
  4126ae:	xchg   ax,ax
  4126b0:	lea    rcx,[rsp+0x20]
  4126b5:	call   QWORD PTR [rip+0x19351]        # 0x42ba0c
  4126bb:	mov    r12,QWORD PTR [rsp+0x20]
  4126c0:	call   QWORD PTR [rip+0x19306]        # 0x42b9cc
  4126c6:	mov    ebp,eax
  4126c8:	call   QWORD PTR [rip+0x19306]        # 0x42b9d4
  4126ce:	mov    edi,eax
  4126d0:	call   QWORD PTR [rip+0x1933e]        # 0x42ba14
  4126d6:	lea    rcx,[rsp+0x30]
  4126db:	mov    esi,eax
  4126dd:	call   QWORD PTR [rip+0x19361]        # 0x42ba44
  4126e3:	xor    r12,QWORD PTR [rsp+0x30]
  4126e8:	mov    edx,edi
  4126ea:	movabs rax,0xffffffffffff
  4126f4:	xor    rbp,r12
  4126f7:	mov    rdi,rbp
  4126fa:	xor    rdi,rdx
  4126fd:	mov    edx,esi
  4126ff:	xor    rdi,rdx
  412702:	mov    rsi,rdi
  412705:	and    rsi,rax
  412708:	cmp    rsi,rbx
  41270b:	je     0x412730
  41270d:	mov    rax,rsi
  412710:	not    rax
  412713:	mov    QWORD PTR [rip+0xb9c6],rsi        # 0x41e0e0
  41271a:	mov    QWORD PTR [rip+0xb9cf],rax        # 0x41e0f0
  412721:	add    rsp,0x40
  412725:	pop    rbx
  412726:	pop    rsi
  412727:	pop    rdi
  412728:	pop    rbp
  412729:	pop    r12
  41272b:	ret    
  41272c:	nop    DWORD PTR [rax+0x0]
  412730:	movabs rax,0xffffd466d2205dcc
  41273a:	movabs rsi,0x2b992ddfa233
  412744:	jmp    0x412713
  412746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412750:	push   rbp
  412751:	push   rsi
  412752:	push   rbx
  412753:	mov    rbp,rsp
  412756:	sub    rsp,0x70
  41275a:	mov    rsi,rcx
  41275d:	lea    rcx,[rip+0x16c9c]        # 0x429400
  412764:	call   QWORD PTR [rip+0x192ea]        # 0x42ba54
  41276a:	mov    rbx,QWORD PTR [rip+0x16d87]        # 0x4294f8
  412771:	xor    r8d,r8d
  412774:	lea    rdx,[rbp-0x28]
  412778:	mov    rcx,rbx
  41277b:	call   QWORD PTR [rip+0x192db]        # 0x42ba5c
  412781:	test   rax,rax
  412784:	mov    r9,rax
  412787:	je     0x412830
  41278d:	lea    rax,[rbp-0x20]
  412791:	mov    QWORD PTR [rsp+0x38],0x0
  41279a:	mov    r8,rbx
  41279d:	mov    rdx,QWORD PTR [rbp-0x28]
  4127a1:	xor    ecx,ecx
  4127a3:	mov    QWORD PTR [rsp+0x30],rax
  4127a8:	lea    rax,[rbp-0x18]
  4127ac:	mov    QWORD PTR [rsp+0x28],rax
  4127b1:	lea    rax,[rip+0x16c48]        # 0x429400
  4127b8:	mov    QWORD PTR [rsp+0x20],rax
  4127bd:	call   QWORD PTR [rip+0x192a1]        # 0x42ba64
  4127c3:	mov    rax,QWORD PTR [rip+0x16d2e]        # 0x4294f8
  4127ca:	xor    ecx,ecx
  4127cc:	mov    QWORD PTR [rip+0x16cad],rsi        # 0x429480
  4127d3:	mov    DWORD PTR [rip+0x17123],0xc0000409        # 0x429900
  4127dd:	mov    DWORD PTR [rip+0x1711d],0x1        # 0x429904
  4127e7:	mov    QWORD PTR [rip+0x17122],rax        # 0x429910
  4127ee:	mov    rax,QWORD PTR [rip+0xb8eb]        # 0x41e0e0
  4127f5:	mov    QWORD PTR [rbp-0x10],rax
  4127f9:	mov    rax,QWORD PTR [rip+0xb8f0]        # 0x41e0f0
  412800:	mov    QWORD PTR [rbp-0x8],rax
  412804:	call   QWORD PTR [rip+0x1926a]        # 0x42ba74
  41280a:	lea    rcx,[rip+0x12aaf]        # 0x4252c0
  412811:	call   QWORD PTR [rip+0x1927d]        # 0x42ba94
  412817:	call   QWORD PTR [rip+0x191a7]        # 0x42b9c4
  41281d:	mov    edx,0xc0000409
  412822:	mov    rcx,rax
  412825:	call   QWORD PTR [rip+0x19259]        # 0x42ba84
  41282b:	call   0x419910
  412830:	mov    rax,QWORD PTR [rbp+0x18]
  412834:	mov    QWORD PTR [rip+0x16cbd],rax        # 0x4294f8
  41283b:	lea    rax,[rbp+0x8]
  41283f:	mov    QWORD PTR [rip+0x16c52],rax        # 0x429498
  412846:	jmp    0x4127c3
  41284b:	nop
  41284c:	nop
  41284d:	nop
  41284e:	nop
  41284f:	nop
  412850:	sub    rsp,0x28
  412854:	test   edx,edx
  412856:	je     0x412870
  412858:	cmp    edx,0x3
  41285b:	je     0x412870
  41285d:	mov    eax,0x1
  412862:	add    rsp,0x28
  412866:	ret    
  412867:	nop    WORD PTR [rax+rax*1+0x0]
  412870:	call   0x413560
  412875:	mov    eax,0x1
  41287a:	add    rsp,0x28
  41287e:	ret    
  41287f:	nop
  412880:	push   rsi
  412881:	push   rbx
  412882:	sub    rsp,0x28
  412886:	mov    rax,QWORD PTR [rip+0x131f3]        # 0x425a80
  41288d:	cmp    DWORD PTR [rax],0x2
  412890:	je     0x412898
  412892:	mov    DWORD PTR [rax],0x2
  412898:	cmp    edx,0x2
  41289b:	je     0x4128b0
  41289d:	cmp    edx,0x1
  4128a0:	je     0x4128e2
  4128a2:	mov    eax,0x1
  4128a7:	add    rsp,0x28
  4128ab:	pop    rbx
  4128ac:	pop    rsi
  4128ad:	ret    
  4128ae:	xchg   ax,ax
  4128b0:	lea    rbx,[rip+0x1b7a9]        # 0x42e060
  4128b7:	lea    rsi,[rip+0x1b7a2]        # 0x42e060
  4128be:	cmp    rbx,rsi
  4128c1:	je     0x4128a2
  4128c3:	mov    rax,QWORD PTR [rbx]
  4128c6:	test   rax,rax
  4128c9:	je     0x4128cd
  4128cb:	call   rax
  4128cd:	add    rbx,0x8
  4128d1:	cmp    rbx,rsi
  4128d4:	jne    0x4128c3
  4128d6:	mov    eax,0x1
  4128db:	add    rsp,0x28
  4128df:	pop    rbx
  4128e0:	pop    rsi
  4128e1:	ret    
  4128e2:	call   0x413560
  4128e7:	jmp    0x4128a2
  4128e9:	nop    DWORD PTR [rax+0x0]
  4128f0:	xor    eax,eax
  4128f2:	ret    
  4128f3:	nop
  4128f4:	nop
  4128f5:	nop
  4128f6:	nop
  4128f7:	nop
  4128f8:	nop
  4128f9:	nop
  4128fa:	nop
  4128fb:	nop
  4128fc:	nop
  4128fd:	nop
  4128fe:	nop
  4128ff:	nop
  412900:	sub    rsp,0x58
  412904:	mov    rax,QWORD PTR [rip+0x170d5]        # 0x4299e0
  41290b:	test   rax,rax
  41290e:	je     0x41293c
  412910:	movsd  xmm0,QWORD PTR [rsp+0x80]
  412919:	mov    DWORD PTR [rsp+0x20],ecx
  41291d:	lea    rcx,[rsp+0x20]
  412922:	mov    QWORD PTR [rsp+0x28],rdx
  412927:	movsd  QWORD PTR [rsp+0x30],xmm2
  41292d:	movsd  QWORD PTR [rsp+0x38],xmm3
  412933:	movsd  QWORD PTR [rsp+0x40],xmm0
  412939:	call   rax
  41293b:	nop
  41293c:	add    rsp,0x58
  412940:	ret    
  412941:	nop    DWORD PTR [rax+rax*1+0x0]
  412946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412950:	mov    QWORD PTR [rip+0x17089],rcx        # 0x4299e0
  412957:	jmp    0x419960
  41295c:	nop    DWORD PTR [rax+0x0]
  412960:	push   rsi
  412961:	push   rbx
  412962:	sub    rsp,0x78
  412966:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41296b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  412970:	movaps XMMWORD PTR [rsp+0x60],xmm8
  412976:	cmp    DWORD PTR [rcx],0x6
  412979:	ja     0x412a50
  41297f:	mov    edx,DWORD PTR [rcx]
  412981:	lea    rax,[rip+0x12a7c]        # 0x425404
  412988:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41298c:	add    rax,rdx
  41298f:	jmp    rax
  412991:	lea    rbx,[rip+0x12948]        # 0x4252e0
  412998:	nop    DWORD PTR [rax+rax*1+0x0]
  4129a0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4129a6:	mov    rsi,QWORD PTR [rcx+0x8]
  4129aa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4129af:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4129b4:	call   0x419978
  4129b9:	movsd  QWORD PTR [rsp+0x30],xmm8
  4129c0:	lea    rcx,[rax+0x60]
  4129c4:	lea    rdx,[rip+0x12a0d]        # 0x4253d8
  4129cb:	movsd  QWORD PTR [rsp+0x28],xmm7
  4129d1:	mov    r9,rsi
  4129d4:	mov    r8,rbx
  4129d7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4129dd:	call   0x4198e8
  4129e2:	nop
  4129e3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4129e8:	xor    eax,eax
  4129ea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4129ef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4129f5:	add    rsp,0x78
  4129f9:	pop    rbx
  4129fa:	pop    rsi
  4129fb:	ret    
  4129fc:	nop    DWORD PTR [rax+0x0]
  412a00:	lea    rbx,[rip+0x128f8]        # 0x4252ff
  412a07:	jmp    0x4129a0
  412a09:	nop    DWORD PTR [rax+0x0]
  412a10:	lea    rbx,[rip+0x12909]        # 0x425320
  412a17:	jmp    0x4129a0
  412a19:	nop    DWORD PTR [rax+0x0]
  412a20:	lea    rbx,[rip+0x12969]        # 0x425390
  412a27:	jmp    0x4129a0
  412a2c:	nop    DWORD PTR [rax+0x0]
  412a30:	lea    rbx,[rip+0x12931]        # 0x425368
  412a37:	jmp    0x4129a0
  412a3c:	nop    DWORD PTR [rax+0x0]
  412a40:	lea    rbx,[rip+0x128f9]        # 0x425340
  412a47:	jmp    0x4129a0
  412a4c:	nop    DWORD PTR [rax+0x0]
  412a50:	lea    rbx,[rip+0x1296f]        # 0x4253c6
  412a57:	jmp    0x4129a0
  412a5c:	nop
  412a5d:	nop
  412a5e:	nop
  412a5f:	nop
  412a60:	fninit 
  412a62:	ret    
  412a63:	nop
  412a64:	nop
  412a65:	nop
  412a66:	nop
  412a67:	nop
  412a68:	nop
  412a69:	nop
  412a6a:	nop
  412a6b:	nop
  412a6c:	nop
  412a6d:	nop
  412a6e:	nop
  412a6f:	nop
  412a70:	mov    rax,rcx
  412a73:	ret    
  412a74:	xchg   ax,ax
  412a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a80:	mov    rax,rcx
  412a83:	ret    
  412a84:	nop
  412a85:	nop
  412a86:	nop
  412a87:	nop
  412a88:	nop
  412a89:	nop
  412a8a:	nop
  412a8b:	nop
  412a8c:	nop
  412a8d:	nop
  412a8e:	nop
  412a8f:	nop
  412a90:	push   rsi
  412a91:	push   rbx
  412a92:	sub    rsp,0x38
  412a96:	lea    rax,[rsp+0x58]
  412a9b:	mov    rbx,rcx
  412a9e:	mov    QWORD PTR [rsp+0x58],rdx
  412aa3:	mov    QWORD PTR [rsp+0x60],r8
  412aa8:	mov    QWORD PTR [rsp+0x68],r9
  412aad:	mov    QWORD PTR [rsp+0x28],rax
  412ab2:	call   0x419978
  412ab7:	lea    rcx,[rip+0x12962]        # 0x425420
  412abe:	lea    r9,[rax+0x60]
  412ac2:	mov    r8d,0x1b
  412ac8:	mov    edx,0x1
  412acd:	call   0x4198c8
  412ad2:	mov    rsi,QWORD PTR [rsp+0x28]
  412ad7:	call   0x419978
  412adc:	lea    rcx,[rax+0x60]
  412ae0:	mov    rdx,rbx
  412ae3:	mov    r8,rsi
  412ae6:	call   0x419808
  412aeb:	call   0x419910
  412af0:	nop
  412af1:	nop    DWORD PTR [rax+rax*1+0x0]
  412af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b00:	push   r13
  412b02:	push   r12
  412b04:	push   rbp
  412b05:	push   rdi
  412b06:	push   rsi
  412b07:	push   rbx
  412b08:	sub    rsp,0x58
  412b0c:	movsxd rbp,DWORD PTR [rip+0x16ef1]        # 0x429a04
  412b13:	mov    rbx,rcx
  412b16:	mov    rsi,rdx
  412b19:	mov    rdi,r8
  412b1c:	test   ebp,ebp
  412b1e:	jle    0x412c1a
  412b24:	mov    rax,QWORD PTR [rip+0x16edd]        # 0x429a08
  412b2b:	xor    r9d,r9d
  412b2e:	add    rax,0x8
  412b32:	mov    r10,QWORD PTR [rax]
  412b35:	cmp    rbx,r10
  412b38:	jb     0x412b4e
  412b3a:	mov    rdx,QWORD PTR [rax+0x8]
  412b3e:	mov    r11d,DWORD PTR [rdx+0x8]
  412b42:	add    r10,r11
  412b45:	cmp    rbx,r10
  412b48:	jb     0x412c00
  412b4e:	add    r9d,0x1
  412b52:	add    rax,0x18
  412b56:	cmp    r9d,ebp
  412b59:	jne    0x412b32
  412b5b:	mov    rcx,rbx
  412b5e:	call   0x413770
  412b63:	test   rax,rax
  412b66:	mov    r12,rax
  412b69:	je     0x412c52
  412b6f:	lea    rbp,[rbp+rbp*2+0x0]
  412b74:	shl    rbp,0x3
  412b78:	mov    r13,rbp
  412b7b:	add    r13,QWORD PTR [rip+0x16e86]        # 0x429a08
  412b82:	mov    QWORD PTR [r13+0x10],rax
  412b86:	mov    DWORD PTR [r13+0x0],0x0
  412b8e:	call   0x413890
  412b93:	mov    edx,DWORD PTR [r12+0xc]
  412b98:	mov    r8d,0x30
  412b9e:	add    rax,rdx
  412ba1:	lea    rdx,[rsp+0x20]
  412ba6:	mov    QWORD PTR [r13+0x8],rax
  412baa:	mov    rax,QWORD PTR [rip+0x16e57]        # 0x429a08
  412bb1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  412bb6:	call   QWORD PTR [rip+0x18ee8]        # 0x42baa4
  412bbc:	test   rax,rax
  412bbf:	je     0x412c35
  412bc1:	mov    eax,DWORD PTR [rsp+0x44]
  412bc5:	lea    edx,[rax-0x4]
  412bc8:	and    edx,0xfffffffb
  412bcb:	je     0x412bf9
  412bcd:	sub    eax,0x40
  412bd0:	and    eax,0xffffffbf
  412bd3:	je     0x412bf9
  412bd5:	mov    r9,rbp
  412bd8:	add    r9,QWORD PTR [rip+0x16e29]        # 0x429a08
  412bdf:	mov    r8d,0x40
  412be5:	mov    rdx,QWORD PTR [rsp+0x38]
  412bea:	mov    rcx,QWORD PTR [rsp+0x20]
  412bef:	call   QWORD PTR [rip+0x18ea7]        # 0x42ba9c
  412bf5:	test   eax,eax
  412bf7:	je     0x412c21
  412bf9:	add    DWORD PTR [rip+0x16e04],0x1        # 0x429a04
  412c00:	mov    r8,rdi
  412c03:	mov    rdx,rsi
  412c06:	mov    rcx,rbx
  412c09:	add    rsp,0x58
  412c0d:	pop    rbx
  412c0e:	pop    rsi
  412c0f:	pop    rdi
  412c10:	pop    rbp
  412c11:	pop    r12
  412c13:	pop    r13
  412c15:	jmp    0x419880
  412c1a:	xor    ebp,ebp
  412c1c:	jmp    0x412b5b
  412c21:	call   QWORD PTR [rip+0x18db5]        # 0x42b9dc
  412c27:	lea    rcx,[rip+0x1286a]        # 0x425498
  412c2e:	mov    edx,eax
  412c30:	call   0x412a90
  412c35:	mov    rax,QWORD PTR [rip+0x16dcc]        # 0x429a08
  412c3c:	mov    edx,DWORD PTR [r12+0x8]
  412c41:	lea    rcx,[rip+0x12818]        # 0x425460
  412c48:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  412c4d:	call   0x412a90
  412c52:	lea    rcx,[rip+0x127e7]        # 0x425440
  412c59:	mov    rdx,rbx
  412c5c:	call   0x412a90
  412c61:	nop
  412c62:	nop    DWORD PTR [rax+0x0]
  412c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412c70:	push   rbp
  412c71:	push   r14
  412c73:	push   r13
  412c75:	push   r12
  412c77:	push   rdi
  412c78:	push   rsi
  412c79:	push   rbx
  412c7a:	mov    rbp,rsp
  412c7d:	sub    rsp,0x60
  412c81:	mov    ebx,DWORD PTR [rip+0x16d79]        # 0x429a00
  412c87:	test   ebx,ebx
  412c89:	je     0x412ca0
  412c8b:	mov    rsp,rbp
  412c8e:	pop    rbx
  412c8f:	pop    rsi
  412c90:	pop    rdi
  412c91:	pop    r12
  412c93:	pop    r13
  412c95:	pop    r14
  412c97:	pop    rbp
  412c98:	ret    
  412c99:	nop    DWORD PTR [rax+0x0]
  412ca0:	mov    DWORD PTR [rip+0x16d56],0x1        # 0x429a00
  412caa:	call   0x4137c0
  412caf:	cdqe   
  412cb1:	lea    rax,[rax+rax*2]
  412cb5:	lea    rax,[rax*8+0x1e]
  412cbd:	and    rax,0xfffffffffffffff0
  412cc1:	call   0x4139f0
  412cc6:	mov    rsi,QWORD PTR [rip+0x12de3]        # 0x425ab0
  412ccd:	mov    rbx,QWORD PTR [rip+0x12dec]        # 0x425ac0
  412cd4:	sub    rsp,rax
  412cd7:	mov    DWORD PTR [rip+0x16d23],0x0        # 0x429a04
  412ce1:	lea    rax,[rsp+0x20]
  412ce6:	mov    QWORD PTR [rip+0x16d1b],rax        # 0x429a08
  412ced:	mov    rax,rsi
  412cf0:	sub    rax,rbx
  412cf3:	cmp    rax,0x7
  412cf7:	jle    0x412c8b
  412cf9:	cmp    rax,0xb
  412cfd:	jle    0x412d25
  412cff:	mov    r11d,DWORD PTR [rbx]
  412d02:	test   r11d,r11d
  412d05:	jne    0x412e50
  412d0b:	mov    r10d,DWORD PTR [rbx+0x4]
  412d0f:	test   r10d,r10d
  412d12:	jne    0x412e50
  412d18:	mov    r9d,DWORD PTR [rbx+0x8]
  412d1c:	test   r9d,r9d
  412d1f:	jne    0x412d3c
  412d21:	add    rbx,0xc
  412d25:	mov    r8d,DWORD PTR [rbx]
  412d28:	test   r8d,r8d
  412d2b:	jne    0x412e50
  412d31:	mov    ecx,DWORD PTR [rbx+0x4]
  412d34:	test   ecx,ecx
  412d36:	jne    0x412e50
  412d3c:	mov    edx,DWORD PTR [rbx+0x8]
  412d3f:	cmp    edx,0x1
  412d42:	jne    0x412f5c
  412d48:	add    rbx,0xc
  412d4c:	cmp    rbx,rsi
  412d4f:	jae    0x412c8b
  412d55:	mov    r12,QWORD PTR [rip+0x12d84]        # 0x425ae0
  412d5c:	lea    r13,[rbp-0x30]
  412d60:	movabs r14,0xffffffff00000000
  412d6a:	mov    ecx,DWORD PTR [rbx+0x4]
  412d6d:	mov    eax,DWORD PTR [rbx]
  412d6f:	movzx  edx,BYTE PTR [rbx+0x8]
  412d73:	add    rax,r12
  412d76:	add    rcx,r12
  412d79:	cmp    edx,0x10
  412d7c:	mov    r8,QWORD PTR [rax]
  412d7f:	je     0x412ec6
  412d85:	jbe    0x412e8d
  412d8b:	cmp    edx,0x20
  412d8e:	je     0x412f0f
  412d94:	cmp    edx,0x40
  412d97:	jne    0x412efb
  412d9d:	sub    r8,rax
  412da0:	mov    rdx,r13
  412da3:	mov    rdi,r13
  412da6:	mov    rax,r8
  412da9:	add    rax,QWORD PTR [rcx]
  412dac:	mov    r8d,0x8
  412db2:	mov    QWORD PTR [rbp-0x30],rax
  412db6:	call   0x412b00
  412dbb:	add    rbx,0xc
  412dbf:	cmp    rbx,rsi
  412dc2:	jb     0x412d6a
  412dc4:	mov    eax,DWORD PTR [rip+0x16c3a]        # 0x429a04
  412dca:	xor    ebx,ebx
  412dcc:	xor    esi,esi
  412dce:	test   eax,eax
  412dd0:	jle    0x412c8b
  412dd6:	mov    r14,QWORD PTR [rip+0x18cc7]        # 0x42baa4
  412ddd:	lea    r13,[rbp-0x34]
  412de1:	mov    r12,QWORD PTR [rip+0x18cb4]        # 0x42ba9c
  412de8:	jmp    0x412e03
  412dea:	nop    WORD PTR [rax+rax*1+0x0]
  412df0:	add    esi,0x1
  412df3:	add    rbx,0x18
  412df7:	cmp    esi,DWORD PTR [rip+0x16c07]        # 0x429a04
  412dfd:	jge    0x412c8b
  412e03:	mov    rax,rbx
  412e06:	add    rax,QWORD PTR [rip+0x16bfb]        # 0x429a08
  412e0d:	mov    edx,DWORD PTR [rax]
  412e0f:	test   edx,edx
  412e11:	je     0x412df0
  412e13:	mov    rcx,QWORD PTR [rax+0x8]
  412e17:	mov    r8d,0x30
  412e1d:	mov    rdx,rdi
  412e20:	call   r14
  412e23:	test   rax,rax
  412e26:	je     0x412f3e
  412e2c:	mov    rax,QWORD PTR [rip+0x16bd5]        # 0x429a08
  412e33:	mov    r9,r13
  412e36:	mov    rdx,QWORD PTR [rbp-0x18]
  412e3a:	mov    rcx,QWORD PTR [rbp-0x30]
  412e3e:	mov    r8d,DWORD PTR [rax+rbx*1]
  412e42:	call   r12
  412e45:	jmp    0x412df0
  412e47:	nop    WORD PTR [rax+rax*1+0x0]
  412e50:	cmp    rbx,rsi
  412e53:	jae    0x412c8b
  412e59:	mov    r12,QWORD PTR [rip+0x12c80]        # 0x425ae0
  412e60:	lea    rdi,[rbp-0x30]
  412e64:	mov    ecx,DWORD PTR [rbx+0x4]
  412e67:	mov    eax,DWORD PTR [rbx]
  412e69:	mov    r8d,0x4
  412e6f:	mov    rdx,rdi
  412e72:	add    rbx,0x8
  412e76:	add    rcx,r12
  412e79:	add    eax,DWORD PTR [rcx]
  412e7b:	mov    DWORD PTR [rbp-0x30],eax
  412e7e:	call   0x412b00
  412e83:	cmp    rbx,rsi
  412e86:	jb     0x412e64
  412e88:	jmp    0x412dc4
  412e8d:	cmp    edx,0x8
  412e90:	jne    0x412efb
  412e92:	movzx  edx,BYTE PTR [rcx]
  412e95:	mov    rdi,r13
  412e98:	mov    r10,rdx
  412e9b:	or     r10,0xffffffffffffff00
  412ea2:	test   dl,dl
  412ea4:	cmovs  rdx,r10
  412ea8:	sub    rdx,rax
  412eab:	lea    rax,[r8+rdx*1]
  412eaf:	mov    r8d,0x1
  412eb5:	mov    rdx,r13
  412eb8:	mov    QWORD PTR [rbp-0x30],rax
  412ebc:	call   0x412b00
  412ec1:	jmp    0x412dbb
  412ec6:	movzx  edx,WORD PTR [rcx]
  412ec9:	mov    rdi,r13
  412ecc:	mov    r10,rdx
  412ecf:	or     r10,0xffffffffffff0000
  412ed6:	test   dx,dx
  412ed9:	cmovs  rdx,r10
  412edd:	sub    rdx,rax
  412ee0:	lea    rax,[r8+rdx*1]
  412ee4:	mov    r8d,0x2
  412eea:	mov    rdx,r13
  412eed:	mov    QWORD PTR [rbp-0x30],rax
  412ef1:	call   0x412b00
  412ef6:	jmp    0x412dbb
  412efb:	lea    rcx,[rip+0x125f6]        # 0x4254f8
  412f02:	mov    QWORD PTR [rbp-0x30],0x0
  412f0a:	call   0x412a90
  412f0f:	mov    edx,DWORD PTR [rcx]
  412f11:	mov    rdi,r13
  412f14:	mov    r10,rdx
  412f17:	or     r10,r14
  412f1a:	test   edx,edx
  412f1c:	cmovs  rdx,r10
  412f20:	sub    rdx,rax
  412f23:	lea    rax,[r8+rdx*1]
  412f27:	mov    r8d,0x4
  412f2d:	mov    rdx,r13
  412f30:	mov    QWORD PTR [rbp-0x30],rax
  412f34:	call   0x412b00
  412f39:	jmp    0x412dbb
  412f3e:	add    rbx,QWORD PTR [rip+0x16ac3]        # 0x429a08
  412f45:	lea    rcx,[rip+0x12514]        # 0x425460
  412f4c:	mov    rax,QWORD PTR [rbx+0x10]
  412f50:	mov    r8,QWORD PTR [rbx+0x8]
  412f54:	mov    edx,DWORD PTR [rax+0x8]
  412f57:	call   0x412a90
  412f5c:	lea    rcx,[rip+0x1255d]        # 0x4254c0
  412f63:	call   0x412a90
  412f68:	nop
  412f69:	nop
  412f6a:	nop
  412f6b:	nop
  412f6c:	nop
  412f6d:	nop
  412f6e:	nop
  412f6f:	nop
  412f70:	sub    rsp,0x28
  412f74:	mov    eax,DWORD PTR [rcx]
  412f76:	cmp    eax,0xc0000091
  412f7b:	ja     0x412fe0
  412f7d:	cmp    eax,0xc000008d
  412f82:	jae    0x412fff
  412f84:	cmp    eax,0xc0000008
  412f89:	je     0x4130a0
  412f8f:	ja     0x413070
  412f95:	cmp    eax,0x80000002
  412f9a:	je     0x4130a0
  412fa0:	cmp    eax,0xc0000005
  412fa5:	jne    0x41307e
  412fab:	xor    edx,edx
  412fad:	mov    ecx,0xb
  412fb2:	call   0x419868
  412fb7:	cmp    rax,0x1
  412fbb:	je     0x413100
  412fc1:	test   rax,rax
  412fc4:	je     0x4130e0
  412fca:	mov    ecx,0xb
  412fcf:	call   rax
  412fd1:	xor    eax,eax
  412fd3:	add    rsp,0x28
  412fd7:	ret    
  412fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  412fe0:	cmp    eax,0xc0000094
  412fe5:	je     0x4130b0
  412feb:	ja     0x413030
  412fed:	cmp    eax,0xc0000092
  412ff2:	je     0x4130a0
  412ff8:	cmp    eax,0xc0000093
  412ffd:	jne    0x41307e
  412fff:	xor    edx,edx
  413001:	mov    ecx,0x8
  413006:	call   0x419868
  41300b:	cmp    rax,0x1
  41300f:	mov    rdx,rax
  413012:	je     0x413088
  413014:	test   rdx,rdx
  413017:	mov    eax,0x1
  41301c:	je     0x412fd3
  41301e:	mov    ecx,0x8
  413023:	call   rdx
  413025:	xor    eax,eax
  413027:	add    rsp,0x28
  41302b:	ret    
  41302c:	nop    DWORD PTR [rax+0x0]
  413030:	cmp    eax,0xc0000095
  413035:	je     0x4130a0
  413037:	cmp    eax,0xc0000096
  41303c:	jne    0x41307e
  41303e:	xor    edx,edx
  413040:	mov    ecx,0x4
  413045:	call   0x419868
  41304a:	cmp    rax,0x1
  41304e:	je     0x4130ea
  413054:	test   rax,rax
  413057:	je     0x4130e0
  41305d:	mov    ecx,0x4
  413062:	call   rax
  413064:	xor    eax,eax
  413066:	jmp    0x412fd3
  41306b:	nop    DWORD PTR [rax+rax*1+0x0]
  413070:	cmp    eax,0xc000001d
  413075:	je     0x41303e
  413077:	cmp    eax,0xc000008c
  41307c:	je     0x4130a0
  41307e:	mov    eax,0x1
  413083:	add    rsp,0x28
  413087:	ret    
  413088:	mov    edx,0x1
  41308d:	mov    ecx,0x8
  413092:	call   0x419868
  413097:	call   0x412a60
  41309c:	nop    DWORD PTR [rax+0x0]
  4130a0:	xor    eax,eax
  4130a2:	add    rsp,0x28
  4130a6:	ret    
  4130a7:	nop    WORD PTR [rax+rax*1+0x0]
  4130b0:	xor    edx,edx
  4130b2:	mov    ecx,0x8
  4130b7:	call   0x419868
  4130bc:	cmp    rax,0x1
  4130c0:	mov    rdx,rax
  4130c3:	jne    0x413014
  4130c9:	mov    edx,0x1
  4130ce:	mov    ecx,0x8
  4130d3:	call   0x419868
  4130d8:	xor    eax,eax
  4130da:	jmp    0x412fd3
  4130df:	nop
  4130e0:	mov    eax,0x4
  4130e5:	add    rsp,0x28
  4130e9:	ret    
  4130ea:	mov    edx,0x1
  4130ef:	mov    ecx,0x4
  4130f4:	call   0x419868
  4130f9:	xor    eax,eax
  4130fb:	jmp    0x412fd3
  413100:	mov    edx,0x1
  413105:	mov    ecx,0xb
  41310a:	call   0x419868
  41310f:	xor    eax,eax
  413111:	jmp    0x412fd3
  413116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413120:	push   r12
  413122:	push   rbp
  413123:	push   rdi
  413124:	push   rsi
  413125:	push   rbx
  413126:	sub    rsp,0x20
  41312a:	call   0x413890
  41312f:	mov    rbp,rax
  413132:	mov    eax,DWORD PTR [rip+0x16910]        # 0x429a48
  413138:	test   eax,eax
  41313a:	jne    0x413161
  41313c:	test   rbp,rbp
  41313f:	je     0x413161
  413141:	lea    rcx,[rip+0x123e8]        # 0x425530
  413148:	mov    DWORD PTR [rip+0x168f6],0x1        # 0x429a48
  413152:	call   0x4136d0
  413157:	test   rax,rax
  41315a:	je     0x413170
  41315c:	mov    eax,0x1
  413161:	add    rsp,0x20
  413165:	pop    rbx
  413166:	pop    rsi
  413167:	pop    rdi
  413168:	pop    rbp
  413169:	pop    r12
  41316b:	ret    
  41316c:	nop    DWORD PTR [rax+0x0]
  413170:	lea    rbx,[rip+0x16a09]        # 0x429b80
  413177:	mov    ecx,0x30
  41317c:	lea    rdx,[rip+0x168fd]        # 0x429a80
  413183:	lea    r12,[rip+0xfffffffffffffde6]        # 0x412f70
  41318a:	xor    esi,esi
  41318c:	mov    rdi,rbx
  41318f:	rep stos QWORD PTR es:[rdi],rax
  413192:	mov    rdi,rdx
  413195:	sub    r12,rbp
  413198:	mov    cl,0x20
  41319a:	rep stos QWORD PTR es:[rdi],rax
  41319d:	mov    rdi,rdx
  4131a0:	jmp    0x4131d0
  4131a2:	mov    BYTE PTR [rdi],0x9
  4131a5:	mov    DWORD PTR [rdi+0x4],r12d
  4131a9:	add    rsi,0x1
  4131ad:	mov    edx,DWORD PTR [rax+0xc]
  4131b0:	add    rbx,0xc
  4131b4:	mov    DWORD PTR [rbx-0xc],edx
  4131b7:	add    edx,DWORD PTR [rax+0x8]
  4131ba:	mov    rax,rdi
  4131bd:	sub    rax,rbp
  4131c0:	add    rdi,0x8
  4131c4:	mov    DWORD PTR [rbx-0x4],eax
  4131c7:	mov    DWORD PTR [rbx-0x8],edx
  4131ca:	cmp    rsi,0x20
  4131ce:	je     0x413205
  4131d0:	mov    rcx,rsi
  4131d3:	call   0x413800
  4131d8:	test   rax,rax
  4131db:	jne    0x4131a2
  4131dd:	test   rsi,rsi
  4131e0:	je     0x41315c
  4131e6:	mov    edx,esi
  4131e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4131f0:	mov    r8,rbp
  4131f3:	lea    rcx,[rip+0x16986]        # 0x429b80
  4131fa:	call   QWORD PTR [rip+0x1884c]        # 0x42ba4c
  413200:	jmp    0x41315c
  413205:	mov    edx,0x20
  41320a:	jmp    0x4131f0
  41320c:	nop    DWORD PTR [rax+0x0]
  413210:	push   rbx
  413211:	sub    rsp,0x20
  413215:	mov    rdx,QWORD PTR [rcx]
  413218:	mov    eax,DWORD PTR [rdx]
  41321a:	mov    r8d,eax
  41321d:	and    r8d,0x20ffffff
  413224:	cmp    r8d,0x20474343
  41322b:	je     0x413330
  413231:	cmp    eax,0xc0000091
  413236:	mov    rbx,rcx
  413239:	ja     0x4132c0
  41323f:	cmp    eax,0xc000008d
  413244:	jae    0x4132d7
  41324a:	cmp    eax,0xc0000008
  41324f:	je     0x413283
  413251:	ja     0x413290
  413253:	cmp    eax,0x80000002
  413258:	je     0x413283
  41325a:	cmp    eax,0xc0000005
  41325f:	jne    0x4132a2
  413261:	xor    edx,edx
  413263:	mov    ecx,0xb
  413268:	call   0x419868
  41326d:	cmp    rax,0x1
  413271:	je     0x4133a0
  413277:	test   rax,rax
  41327a:	je     0x4132a2
  41327c:	mov    ecx,0xb
  413281:	call   rax
  413283:	mov    eax,0xffffffff
  413288:	add    rsp,0x20
  41328c:	pop    rbx
  41328d:	ret    
  41328e:	xchg   ax,ax
  413290:	cmp    eax,0xc000001d
  413295:	je     0x413356
  41329b:	cmp    eax,0xc000008c
  4132a0:	je     0x413283
  4132a2:	mov    rax,QWORD PTR [rip+0x16797]        # 0x429a40
  4132a9:	test   rax,rax
  4132ac:	je     0x413288
  4132ae:	mov    rcx,rbx
  4132b1:	add    rsp,0x20
  4132b5:	pop    rbx
  4132b6:	rex.W jmp rax
  4132b9:	nop    DWORD PTR [rax+0x0]
  4132c0:	cmp    eax,0xc0000094
  4132c5:	je     0x413302
  4132c7:	ja     0x413340
  4132c9:	cmp    eax,0xc0000092
  4132ce:	je     0x413283
  4132d0:	cmp    eax,0xc0000093
  4132d5:	jne    0x4132a2
  4132d7:	xor    edx,edx
  4132d9:	mov    ecx,0x8
  4132de:	call   0x419868
  4132e3:	cmp    rax,0x1
  4132e7:	jne    0x413314
  4132e9:	mov    edx,0x1
  4132ee:	mov    ecx,0x8
  4132f3:	call   0x419868
  4132f8:	call   0x412a60
  4132fd:	jmp    0x413283
  413302:	xor    edx,edx
  413304:	mov    ecx,0x8
  413309:	call   0x419868
  41330e:	cmp    rax,0x1
  413312:	je     0x413382
  413314:	test   rax,rax
  413317:	je     0x4132a2
  413319:	mov    ecx,0x8
  41331e:	call   rax
  413320:	mov    eax,0xffffffff
  413325:	jmp    0x413288
  41332a:	nop    WORD PTR [rax+rax*1+0x0]
  413330:	test   BYTE PTR [rdx+0x4],0x1
  413334:	jne    0x413231
  41333a:	jmp    0x413283
  41333f:	nop
  413340:	cmp    eax,0xc0000095
  413345:	je     0x413283
  41334b:	cmp    eax,0xc0000096
  413350:	jne    0x4132a2
  413356:	xor    edx,edx
  413358:	mov    ecx,0x4
  41335d:	call   0x419868
  413362:	cmp    rax,0x1
  413366:	je     0x4133b4
  413368:	test   rax,rax
  41336b:	je     0x4132a2
  413371:	mov    ecx,0x4
  413376:	call   rax
  413378:	mov    eax,0xffffffff
  41337d:	jmp    0x413288
  413382:	mov    edx,0x1
  413387:	mov    ecx,0x8
  41338c:	call   0x419868
  413391:	jmp    0x413283
  413396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4133a0:	mov    edx,0x1
  4133a5:	mov    ecx,0xb
  4133aa:	call   0x419868
  4133af:	jmp    0x413283
  4133b4:	mov    edx,0x1
  4133b9:	mov    ecx,0x4
  4133be:	call   0x419868
  4133c3:	jmp    0x413283
  4133c8:	nop
  4133c9:	nop
  4133ca:	nop
  4133cb:	nop
  4133cc:	nop
  4133cd:	nop
  4133ce:	nop
  4133cf:	nop
  4133d0:	push   rbp
  4133d1:	push   rdi
  4133d2:	push   rsi
  4133d3:	push   rbx
  4133d4:	sub    rsp,0x28
  4133d8:	lea    rcx,[rip+0x16941]        # 0x429d20
  4133df:	call   QWORD PTR [rip+0x185cf]        # 0x42b9b4
  4133e5:	mov    rbx,QWORD PTR [rip+0x16914]        # 0x429d00
  4133ec:	test   rbx,rbx
  4133ef:	je     0x413424
  4133f1:	mov    rbp,QWORD PTR [rip+0x18694]        # 0x42ba8c
  4133f8:	mov    rdi,QWORD PTR [rip+0x185dd]        # 0x42b9dc
  4133ff:	nop
  413400:	mov    ecx,DWORD PTR [rbx]
  413402:	call   rbp
  413404:	mov    rsi,rax
  413407:	call   rdi
  413409:	test   eax,eax
  41340b:	jne    0x41341b
  41340d:	test   rsi,rsi
  413410:	je     0x41341b
  413412:	mov    rax,QWORD PTR [rbx+0x8]
  413416:	mov    rcx,rsi
  413419:	call   rax
  41341b:	mov    rbx,QWORD PTR [rbx+0x10]
  41341f:	test   rbx,rbx
  413422:	jne    0x413400
  413424:	mov    rax,QWORD PTR [rip+0x18601]        # 0x42ba2c
  41342b:	lea    rcx,[rip+0x168ee]        # 0x429d20
  413432:	add    rsp,0x28
  413436:	pop    rbx
  413437:	pop    rsi
  413438:	pop    rdi
  413439:	pop    rbp
  41343a:	rex.W jmp rax
  41343d:	nop    DWORD PTR [rax]
  413440:	push   rdi
  413441:	push   rsi
  413442:	push   rbx
  413443:	sub    rsp,0x20
  413447:	mov    eax,DWORD PTR [rip+0x168bb]        # 0x429d08
  41344d:	test   eax,eax
  41344f:	jne    0x413460
  413451:	add    rsp,0x20
  413455:	pop    rbx
  413456:	pop    rsi
  413457:	pop    rdi
  413458:	ret    
  413459:	nop    DWORD PTR [rax+0x0]
  413460:	mov    rsi,rdx
  413463:	mov    edi,ecx
  413465:	mov    edx,0x18
  41346a:	mov    ecx,0x1
  41346f:	call   0x419908
  413474:	test   rax,rax
  413477:	mov    rbx,rax
  41347a:	je     0x4134b8
  41347c:	mov    DWORD PTR [rax],edi
  41347e:	mov    QWORD PTR [rax+0x8],rsi
  413482:	lea    rcx,[rip+0x16897]        # 0x429d20
  413489:	call   QWORD PTR [rip+0x18525]        # 0x42b9b4
  41348f:	mov    rax,QWORD PTR [rip+0x1686a]        # 0x429d00
  413496:	lea    rcx,[rip+0x16883]        # 0x429d20
  41349d:	mov    QWORD PTR [rip+0x1685c],rbx        # 0x429d00
  4134a4:	mov    QWORD PTR [rbx+0x10],rax
  4134a8:	call   QWORD PTR [rip+0x1857e]        # 0x42ba2c
  4134ae:	xor    eax,eax
  4134b0:	add    rsp,0x20
  4134b4:	pop    rbx
  4134b5:	pop    rsi
  4134b6:	pop    rdi
  4134b7:	ret    
  4134b8:	mov    eax,0xffffffff
  4134bd:	jmp    0x413451
  4134bf:	nop
  4134c0:	push   rbx
  4134c1:	sub    rsp,0x20
  4134c5:	mov    eax,DWORD PTR [rip+0x1683d]        # 0x429d08
  4134cb:	test   eax,eax
  4134cd:	jne    0x4134e0
  4134cf:	xor    eax,eax
  4134d1:	add    rsp,0x20
  4134d5:	pop    rbx
  4134d6:	ret    
  4134d7:	nop    WORD PTR [rax+rax*1+0x0]
  4134e0:	mov    ebx,ecx
  4134e2:	lea    rcx,[rip+0x16837]        # 0x429d20
  4134e9:	call   QWORD PTR [rip+0x184c5]        # 0x42b9b4
  4134ef:	mov    rdx,QWORD PTR [rip+0x1680a]        # 0x429d00
  4134f6:	test   rdx,rdx
  4134f9:	je     0x413517
  4134fb:	mov    eax,DWORD PTR [rdx]
  4134fd:	cmp    eax,ebx
  4134ff:	jne    0x41350e
  413501:	jmp    0x41354f
  413503:	mov    r8d,DWORD PTR [rax]
  413506:	cmp    r8d,ebx
  413509:	je     0x413530
  41350b:	mov    rdx,rax
  41350e:	mov    rax,QWORD PTR [rdx+0x10]
  413512:	test   rax,rax
  413515:	jne    0x413503
  413517:	lea    rcx,[rip+0x16802]        # 0x429d20
  41351e:	call   QWORD PTR [rip+0x18508]        # 0x42ba2c
  413524:	xor    eax,eax
  413526:	add    rsp,0x20
  41352a:	pop    rbx
  41352b:	ret    
  41352c:	nop    DWORD PTR [rax+0x0]
  413530:	mov    rcx,rax
  413533:	mov    rax,QWORD PTR [rax+0x10]
  413537:	mov    QWORD PTR [rdx+0x10],rax
  41353b:	call   0x4198d0
  413540:	lea    rcx,[rip+0x167d9]        # 0x429d20
  413547:	call   QWORD PTR [rip+0x184df]        # 0x42ba2c
  41354d:	jmp    0x413524
  41354f:	mov    rax,QWORD PTR [rdx+0x10]
  413553:	mov    rcx,rdx
  413556:	mov    QWORD PTR [rip+0x167a3],rax        # 0x429d00
  41355d:	jmp    0x41353b
  41355f:	nop
  413560:	push   rbx
  413561:	sub    rsp,0x20
  413565:	cmp    edx,0x1
  413568:	je     0x413600
  41356e:	jb     0x4135a0
  413570:	cmp    edx,0x2
  413573:	je     0x413590
  413575:	cmp    edx,0x3
  413578:	jne    0x413595
  41357a:	mov    eax,DWORD PTR [rip+0x16788]        # 0x429d08
  413580:	test   eax,eax
  413582:	je     0x413595
  413584:	call   0x4133d0
  413589:	jmp    0x413595
  41358b:	nop    DWORD PTR [rax+rax*1+0x0]
  413590:	call   0x412a60
  413595:	mov    eax,0x1
  41359a:	add    rsp,0x20
  41359e:	pop    rbx
  41359f:	ret    
  4135a0:	mov    eax,DWORD PTR [rip+0x16762]        # 0x429d08
  4135a6:	test   eax,eax
  4135a8:	jne    0x413630
  4135ae:	mov    eax,DWORD PTR [rip+0x16754]        # 0x429d08
  4135b4:	cmp    eax,0x1
  4135b7:	jne    0x413595
  4135b9:	mov    rcx,QWORD PTR [rip+0x16740]        # 0x429d00
  4135c0:	test   rcx,rcx
  4135c3:	je     0x4135d6
  4135c5:	mov    rbx,QWORD PTR [rcx+0x10]
  4135c9:	call   0x4198d0
  4135ce:	test   rbx,rbx
  4135d1:	mov    rcx,rbx
  4135d4:	jne    0x4135c5
  4135d6:	lea    rcx,[rip+0x16743]        # 0x429d20
  4135dd:	mov    QWORD PTR [rip+0x16718],0x0        # 0x429d00
  4135e8:	mov    DWORD PTR [rip+0x16716],0x0        # 0x429d08
  4135f2:	call   QWORD PTR [rip+0x183b4]        # 0x42b9ac
  4135f8:	jmp    0x413595
  4135fa:	nop    WORD PTR [rax+rax*1+0x0]
  413600:	mov    eax,DWORD PTR [rip+0x16702]        # 0x429d08
  413606:	test   eax,eax
  413608:	je     0x413620
  41360a:	mov    eax,0x1
  41360f:	mov    DWORD PTR [rip+0x166ef],0x1        # 0x429d08
  413619:	add    rsp,0x20
  41361d:	pop    rbx
  41361e:	ret    
  41361f:	nop
  413620:	lea    rcx,[rip+0x166f9]        # 0x429d20
  413627:	call   QWORD PTR [rip+0x183ef]        # 0x42ba1c
  41362d:	jmp    0x41360a
  41362f:	nop
  413630:	call   0x4133d0
  413635:	jmp    0x4135ae
  41363a:	nop
  41363b:	nop
  41363c:	nop
  41363d:	nop
  41363e:	nop
  41363f:	nop
  413640:	movsxd rax,DWORD PTR [rcx+0x3c]
  413644:	add    rcx,rax
  413647:	xor    eax,eax
  413649:	cmp    DWORD PTR [rcx],0x4550
  41364f:	je     0x413653
  413651:	repz ret 
  413653:	xor    eax,eax
  413655:	cmp    WORD PTR [rcx+0x18],0x20b
  41365b:	sete   al
  41365e:	ret    
  41365f:	nop
  413660:	cmp    WORD PTR [rcx],0x5a4d
  413665:	je     0x413670
  413667:	xor    eax,eax
  413669:	ret    
  41366a:	nop    WORD PTR [rax+rax*1+0x0]
  413670:	jmp    0x413640
  413672:	nop    DWORD PTR [rax+0x0]
  413676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413680:	movsxd rax,DWORD PTR [rcx+0x3c]
  413684:	add    rcx,rax
  413687:	movzx  eax,WORD PTR [rcx+0x14]
  41368b:	lea    rax,[rcx+rax*1+0x18]
  413690:	movzx  ecx,WORD PTR [rcx+0x6]
  413694:	test   ecx,ecx
  413696:	je     0x4136c1
  413698:	sub    ecx,0x1
  41369b:	lea    rcx,[rcx+rcx*4]
  41369f:	lea    r9,[rax+rcx*8+0x28]
  4136a4:	mov    r8d,DWORD PTR [rax+0xc]
  4136a8:	cmp    r8,rdx
  4136ab:	mov    rcx,r8
  4136ae:	ja     0x4136b8
  4136b0:	add    ecx,DWORD PTR [rax+0x8]
  4136b3:	cmp    rdx,rcx
  4136b6:	jb     0x4136c3
  4136b8:	add    rax,0x28
  4136bc:	cmp    rax,r9
  4136bf:	jne    0x4136a4
  4136c1:	xor    eax,eax
  4136c3:	repz ret 
  4136c5:	nop
  4136c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4136d0:	push   rdi
  4136d1:	push   rsi
  4136d2:	push   rbx
  4136d3:	sub    rsp,0x20
  4136d7:	mov    rsi,rcx
  4136da:	call   0x419840
  4136df:	cmp    rax,0x8
  4136e3:	ja     0x413700
  4136e5:	mov    rbx,QWORD PTR [rip+0x123f4]        # 0x425ae0
  4136ec:	xor    edi,edi
  4136ee:	cmp    WORD PTR [rbx],0x5a4d
  4136f3:	je     0x413710
  4136f5:	mov    rax,rdi
  4136f8:	add    rsp,0x20
  4136fc:	pop    rbx
  4136fd:	pop    rsi
  4136fe:	pop    rdi
  4136ff:	ret    
  413700:	xor    edi,edi
  413702:	mov    rax,rdi
  413705:	add    rsp,0x20
  413709:	pop    rbx
  41370a:	pop    rsi
  41370b:	pop    rdi
  41370c:	ret    
  41370d:	nop    DWORD PTR [rax]
  413710:	mov    rcx,rbx
  413713:	call   0x413640
  413718:	test   eax,eax
  41371a:	je     0x4136f5
  41371c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  413720:	add    rdx,rbx
  413723:	movzx  eax,WORD PTR [rdx+0x14]
  413727:	lea    rbx,[rdx+rax*1+0x18]
  41372c:	movzx  eax,WORD PTR [rdx+0x6]
  413730:	test   eax,eax
  413732:	je     0x4136f5
  413734:	sub    eax,0x1
  413737:	lea    rax,[rax+rax*4]
  41373b:	lea    rdi,[rbx+rax*8+0x28]
  413740:	jmp    0x41374b
  413742:	add    rbx,0x28
  413746:	cmp    rbx,rdi
  413749:	je     0x413700
  41374b:	mov    r8d,0x8
  413751:	mov    rdx,rsi
  413754:	mov    rcx,rbx
  413757:	call   0x419830
  41375c:	test   eax,eax
  41375e:	jne    0x413742
  413760:	mov    rdi,rbx
  413763:	mov    rax,rdi
  413766:	add    rsp,0x20
  41376a:	pop    rbx
  41376b:	pop    rsi
  41376c:	pop    rdi
  41376d:	ret    
  41376e:	xchg   ax,ax
  413770:	push   rsi
  413771:	push   rbx
  413772:	sub    rsp,0x28
  413776:	mov    rbx,QWORD PTR [rip+0x12363]        # 0x425ae0
  41377d:	cmp    WORD PTR [rbx],0x5a4d
  413782:	je     0x413790
  413784:	xor    eax,eax
  413786:	add    rsp,0x28
  41378a:	pop    rbx
  41378b:	pop    rsi
  41378c:	ret    
  41378d:	nop    DWORD PTR [rax]
  413790:	mov    rsi,rcx
  413793:	mov    rcx,rbx
  413796:	call   0x413640
  41379b:	test   eax,eax
  41379d:	je     0x413784
  41379f:	sub    rsi,rbx
  4137a2:	mov    rcx,rbx
  4137a5:	mov    rdx,rsi
  4137a8:	add    rsp,0x28
  4137ac:	pop    rbx
  4137ad:	pop    rsi
  4137ae:	jmp    0x413680
  4137b3:	nop    DWORD PTR [rax]
  4137b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4137c0:	push   rbx
  4137c1:	sub    rsp,0x20
  4137c5:	mov    rbx,QWORD PTR [rip+0x12314]        # 0x425ae0
  4137cc:	xor    eax,eax
  4137ce:	cmp    WORD PTR [rbx],0x5a4d
  4137d3:	je     0x4137e0
  4137d5:	add    rsp,0x20
  4137d9:	pop    rbx
  4137da:	ret    
  4137db:	nop    DWORD PTR [rax+rax*1+0x0]
  4137e0:	mov    rcx,rbx
  4137e3:	call   0x413640
  4137e8:	test   eax,eax
  4137ea:	je     0x4137d5
  4137ec:	movsxd rax,DWORD PTR [rbx+0x3c]
  4137f0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4137f5:	add    rsp,0x20
  4137f9:	pop    rbx
  4137fa:	ret    
  4137fb:	nop    DWORD PTR [rax+rax*1+0x0]
  413800:	push   rdi
  413801:	push   rsi
  413802:	push   rbx
  413803:	sub    rsp,0x20
  413807:	mov    rsi,QWORD PTR [rip+0x122d2]        # 0x425ae0
  41380e:	xor    edi,edi
  413810:	mov    rbx,rcx
  413813:	cmp    WORD PTR [rsi],0x5a4d
  413818:	je     0x413825
  41381a:	mov    rax,rdi
  41381d:	add    rsp,0x20
  413821:	pop    rbx
  413822:	pop    rsi
  413823:	pop    rdi
  413824:	ret    
  413825:	mov    rcx,rsi
  413828:	call   0x413640
  41382d:	test   eax,eax
  41382f:	je     0x41381a
  413831:	movsxd rax,DWORD PTR [rsi+0x3c]
  413835:	add    rsi,rax
  413838:	movzx  eax,WORD PTR [rsi+0x14]
  41383c:	lea    rdx,[rsi+rax*1+0x18]
  413841:	movzx  eax,WORD PTR [rsi+0x6]
  413845:	test   eax,eax
  413847:	je     0x41381a
  413849:	sub    eax,0x1
  41384c:	lea    rax,[rax+rax*4]
  413850:	lea    rax,[rdx+rax*8+0x28]
  413855:	test   BYTE PTR [rdx+0x27],0x20
  413859:	je     0x413864
  41385b:	test   rbx,rbx
  41385e:	je     0x413880
  413860:	sub    rbx,0x1
  413864:	add    rdx,0x28
  413868:	cmp    rdx,rax
  41386b:	jne    0x413855
  41386d:	xor    edi,edi
  41386f:	mov    rax,rdi
  413872:	add    rsp,0x20
  413876:	pop    rbx
  413877:	pop    rsi
  413878:	pop    rdi
  413879:	ret    
  41387a:	nop    WORD PTR [rax+rax*1+0x0]
  413880:	mov    rdi,rdx
  413883:	mov    rax,rdi
  413886:	add    rsp,0x20
  41388a:	pop    rbx
  41388b:	pop    rsi
  41388c:	pop    rdi
  41388d:	ret    
  41388e:	xchg   ax,ax
  413890:	push   rsi
  413891:	push   rbx
  413892:	sub    rsp,0x28
  413896:	mov    rsi,QWORD PTR [rip+0x12243]        # 0x425ae0
  41389d:	xor    ebx,ebx
  41389f:	cmp    WORD PTR [rsi],0x5a4d
  4138a4:	je     0x4138b0
  4138a6:	mov    rax,rbx
  4138a9:	add    rsp,0x28
  4138ad:	pop    rbx
  4138ae:	pop    rsi
  4138af:	ret    
  4138b0:	mov    rcx,rsi
  4138b3:	call   0x413640
  4138b8:	test   eax,eax
  4138ba:	cmovne rbx,rsi
  4138be:	mov    rax,rbx
  4138c1:	add    rsp,0x28
  4138c5:	pop    rbx
  4138c6:	pop    rsi
  4138c7:	ret    
  4138c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4138d0:	push   rsi
  4138d1:	push   rbx
  4138d2:	sub    rsp,0x28
  4138d6:	mov    rbx,QWORD PTR [rip+0x12203]        # 0x425ae0
  4138dd:	xor    eax,eax
  4138df:	cmp    WORD PTR [rbx],0x5a4d
  4138e4:	je     0x4138f0
  4138e6:	add    rsp,0x28
  4138ea:	pop    rbx
  4138eb:	pop    rsi
  4138ec:	ret    
  4138ed:	nop    DWORD PTR [rax]
  4138f0:	mov    rsi,rcx
  4138f3:	mov    rcx,rbx
  4138f6:	call   0x413640
  4138fb:	test   eax,eax
  4138fd:	je     0x4138e6
  4138ff:	sub    rsi,rbx
  413902:	mov    rcx,rbx
  413905:	mov    rdx,rsi
  413908:	call   0x413680
  41390d:	test   rax,rax
  413910:	je     0x413921
  413912:	mov    eax,DWORD PTR [rax+0x24]
  413915:	not    eax
  413917:	shr    eax,0x1f
  41391a:	add    rsp,0x28
  41391e:	pop    rbx
  41391f:	pop    rsi
  413920:	ret    
  413921:	xor    eax,eax
  413923:	jmp    0x4138e6
  413925:	nop
  413926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413930:	push   rbp
  413931:	push   rdi
  413932:	push   rsi
  413933:	push   rbx
  413934:	sub    rsp,0x28
  413938:	mov    rdi,QWORD PTR [rip+0x121a1]        # 0x425ae0
  41393f:	xor    ebp,ebp
  413941:	mov    esi,ecx
  413943:	cmp    WORD PTR [rdi],0x5a4d
  413948:	je     0x413960
  41394a:	mov    rax,rbp
  41394d:	add    rsp,0x28
  413951:	pop    rbx
  413952:	pop    rsi
  413953:	pop    rdi
  413954:	pop    rbp
  413955:	ret    
  413956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413960:	mov    rcx,rdi
  413963:	call   0x413640
  413968:	test   eax,eax
  41396a:	je     0x41394a
  41396c:	movsxd rax,DWORD PTR [rdi+0x3c]
  413970:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  413977:	test   edx,edx
  413979:	je     0x41394a
  41397b:	mov    ebx,edx
  41397d:	mov    rcx,rdi
  413980:	mov    rdx,rbx
  413983:	call   0x413680
  413988:	test   rax,rax
  41398b:	je     0x41394a
  41398d:	add    rbx,rdi
  413990:	mov    rdx,rbx
  413993:	jne    0x4139a7
  413995:	jmp    0x41394a
  413997:	nop    WORD PTR [rax+rax*1+0x0]
  4139a0:	sub    esi,0x1
  4139a3:	add    rdx,0x14
  4139a7:	mov    ecx,DWORD PTR [rdx+0x4]
  4139aa:	test   ecx,ecx
  4139ac:	jne    0x4139b5
  4139ae:	mov    eax,DWORD PTR [rdx+0xc]
  4139b1:	test   eax,eax
  4139b3:	je     0x4139d0
  4139b5:	test   esi,esi
  4139b7:	jg     0x4139a0
  4139b9:	mov    ebp,DWORD PTR [rdx+0xc]
  4139bc:	add    rbp,rdi
  4139bf:	mov    rax,rbp
  4139c2:	add    rsp,0x28
  4139c6:	pop    rbx
  4139c7:	pop    rsi
  4139c8:	pop    rdi
  4139c9:	pop    rbp
  4139ca:	ret    
  4139cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4139d0:	xor    ebp,ebp
  4139d2:	mov    rax,rbp
  4139d5:	add    rsp,0x28
  4139d9:	pop    rbx
  4139da:	pop    rsi
  4139db:	pop    rdi
  4139dc:	pop    rbp
  4139dd:	ret    
  4139de:	nop
  4139df:	nop
  4139e0:	jmp    QWORD PTR [rip+0x1829e]        # 0x42bc84
  4139e6:	nop
  4139e7:	nop
  4139e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139f0:	push   rcx
  4139f1:	push   rax
  4139f2:	cmp    rax,0x1000
  4139f8:	lea    rcx,[rsp+0x18]
  4139fd:	jb     0x413a18
  4139ff:	sub    rcx,0x1000
  413a06:	or     QWORD PTR [rcx],0x0
  413a0a:	sub    rax,0x1000
  413a10:	cmp    rax,0x1000
  413a16:	ja     0x4139ff
  413a18:	sub    rcx,rax
  413a1b:	or     QWORD PTR [rcx],0x0
  413a1f:	pop    rax
  413a20:	pop    rcx
  413a21:	ret    
  413a22:	nop
  413a23:	nop
  413a24:	nop
  413a25:	nop
  413a26:	nop
  413a27:	nop
  413a28:	nop
  413a29:	nop
  413a2a:	nop
  413a2b:	nop
  413a2c:	nop
  413a2d:	nop
  413a2e:	nop
  413a2f:	nop
  413a30:	push   rbx
  413a31:	sub    rsp,0x10
  413a35:	movsd  QWORD PTR [rsp+0x8],xmm0
  413a3b:	mov    r9,QWORD PTR [rsp+0x8]
  413a40:	mov    rdx,r9
  413a43:	mov    r10d,r9d
  413a46:	shr    rdx,0x20
  413a4a:	mov    eax,edx
  413a4c:	mov    r11d,edx
  413a4f:	sar    eax,0x14
  413a52:	and    eax,0x7ff
  413a57:	lea    r8d,[rax-0x3ff]
  413a5e:	cmp    r8d,0x33
  413a62:	jle    0x413a80
  413a64:	cmp    r8d,0x400
  413a6b:	je     0x413b45
  413a71:	add    rsp,0x10
  413a75:	pop    rbx
  413a76:	ret    
  413a77:	nop    WORD PTR [rax+rax*1+0x0]
  413a80:	cmp    r8d,0x13
  413a84:	jg     0x413af0
  413a86:	test   r8d,r8d
  413a89:	js     0x413b50
  413a8f:	mov    eax,0xfffff
  413a94:	mov    ecx,r8d
  413a97:	shr    eax,cl
  413a99:	test   r9d,r9d
  413a9c:	jne    0x413aa2
  413a9e:	test   eax,edx
  413aa0:	je     0x413a71
  413aa2:	movsd  xmm1,QWORD PTR [rip+0x11a96]        # 0x425540
  413aaa:	xorpd  xmm2,xmm2
  413aae:	addsd  xmm1,xmm0
  413ab2:	ucomisd xmm2,xmm1
  413ab6:	jae    0x413a71
  413ab8:	xor    r9d,r9d
  413abb:	test   edx,edx
  413abd:	jns    0x413acb
  413abf:	mov    r9d,0x100000
  413ac5:	mov    ecx,r8d
  413ac8:	sar    r9d,cl
  413acb:	add    edx,r9d
  413ace:	not    eax
  413ad0:	and    eax,edx
  413ad2:	shl    rax,0x20
  413ad6:	mov    QWORD PTR [rsp+0x8],rax
  413adb:	movsd  xmm0,QWORD PTR [rsp+0x8]
  413ae1:	add    rsp,0x10
  413ae5:	pop    rbx
  413ae6:	ret    
  413ae7:	nop    WORD PTR [rax+rax*1+0x0]
  413af0:	lea    ecx,[rax-0x413]
  413af6:	mov    ebx,0xffffffff
  413afb:	shr    ebx,cl
  413afd:	test   ebx,r9d
  413b00:	je     0x413a71
  413b06:	movsd  xmm1,QWORD PTR [rip+0x11a32]        # 0x425540
  413b0e:	xorpd  xmm2,xmm2
  413b12:	addsd  xmm1,xmm0
  413b16:	ucomisd xmm2,xmm1
  413b1a:	jae    0x413a71
  413b20:	test   edx,edx
  413b22:	js     0x413bb0
  413b28:	not    ebx
  413b2a:	shl    r11,0x20
  413b2e:	and    r10d,ebx
  413b31:	or     r11,r10
  413b34:	mov    QWORD PTR [rsp+0x8],r11
  413b39:	movsd  xmm0,QWORD PTR [rsp+0x8]
  413b3f:	add    rsp,0x10
  413b43:	pop    rbx
  413b44:	ret    
  413b45:	addsd  xmm0,xmm0
  413b49:	add    rsp,0x10
  413b4d:	pop    rbx
  413b4e:	ret    
  413b4f:	nop
  413b50:	movsd  xmm2,QWORD PTR [rip+0x119e8]        # 0x425540
  413b58:	xorpd  xmm1,xmm1
  413b5c:	addsd  xmm2,xmm0
  413b60:	ucomisd xmm2,xmm1
  413b64:	jbe    0x413a71
  413b6a:	test   edx,edx
  413b6c:	js     0x413b80
  413b6e:	movapd xmm0,xmm1
  413b72:	jmp    0x413a71
  413b77:	nop    WORD PTR [rax+rax*1+0x0]
  413b80:	and    edx,0x7fffffff
  413b86:	or     edx,r9d
  413b89:	je     0x413a71
  413b8f:	movabs rax,0xbff0000000000000
  413b99:	mov    QWORD PTR [rsp+0x8],rax
  413b9e:	movsd  xmm0,QWORD PTR [rsp+0x8]
  413ba4:	jmp    0x413a71
  413ba9:	nop    DWORD PTR [rax+0x0]
  413bb0:	cmp    r8d,0x14
  413bb4:	je     0x413bcf
  413bb6:	mov    ecx,0x433
  413bbb:	mov    r10d,0x1
  413bc1:	sub    ecx,eax
  413bc3:	shl    r10d,cl
  413bc6:	add    r10d,r9d
  413bc9:	jae    0x413b28
  413bcf:	lea    r11d,[rdx+0x1]
  413bd3:	jmp    0x413b28
  413bd8:	nop
  413bd9:	nop
  413bda:	nop
  413bdb:	nop
  413bdc:	nop
  413bdd:	nop
  413bde:	nop
  413bdf:	nop
  413be0:	sub    rsp,0x48
  413be4:	movaps XMMWORD PTR [rsp+0x20],xmm6
  413be9:	movaps XMMWORD PTR [rsp+0x30],xmm7
  413bee:	movapd xmm6,xmm0
  413bf2:	ucomisd xmm0,QWORD PTR [rip+0x11956]        # 0x425550
  413bfa:	jb     0x413c30
  413bfc:	call   0x414710
  413c01:	movapd xmm1,xmm0
  413c05:	subsd  xmm0,xmm6
  413c09:	ucomisd xmm0,QWORD PTR [rip+0x11947]        # 0x425558
  413c11:	jbe    0x413c1b
  413c13:	subsd  xmm1,QWORD PTR [rip+0x11945]        # 0x425560
  413c1b:	movapd xmm0,xmm1
  413c1f:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  413c24:	movaps xmm7,XMMWORD PTR [rsp+0x30]
  413c29:	add    rsp,0x48
  413c2d:	ret    
  413c2e:	xchg   ax,ax
  413c30:	movsd  xmm7,QWORD PTR [rip+0x11938]        # 0x425570
  413c38:	xorpd  xmm0,xmm7
  413c3c:	call   0x414710
  413c41:	addsd  xmm6,xmm0
  413c45:	ucomisd xmm6,QWORD PTR [rip+0x1190b]        # 0x425558
  413c4d:	jbe    0x413c57
  413c4f:	subsd  xmm0,QWORD PTR [rip+0x11909]        # 0x425560
  413c57:	movapd xmm1,xmm0
  413c5b:	xorpd  xmm1,xmm7
  413c5f:	jmp    0x413c1b
  413c61:	nop
  413c62:	nop
  413c63:	nop
  413c64:	nop
  413c65:	nop
  413c66:	nop
  413c67:	nop
  413c68:	nop
  413c69:	nop
  413c6a:	nop
  413c6b:	nop
  413c6c:	nop
  413c6d:	nop
  413c6e:	nop
  413c6f:	nop
  413c70:	push   r15
  413c72:	push   r14
  413c74:	push   r13
  413c76:	push   r12
  413c78:	push   rbp
  413c79:	push   rdi
  413c7a:	push   rsi
  413c7b:	push   rbx
  413c7c:	sub    rsp,0x28
  413c80:	test   rdx,rdx
  413c83:	mov    rsi,rcx
  413c86:	mov    r12,rdx
  413c89:	mov    edi,r8d
  413c8c:	je     0x413c92
  413c8e:	mov    QWORD PTR [r12],rcx
  413c92:	cmp    edi,0x24
  413c95:	ja     0x413d73
  413c9b:	cmp    edi,0x1
  413c9e:	jne    0x413ca9
  413ca0:	jmp    0x413d73
  413ca5:	add    rsi,0x1
  413ca9:	movsx  ecx,BYTE PTR [rsi]
  413cac:	mov    ebx,ecx
  413cae:	call   0x4198a8
  413cb3:	test   eax,eax
  413cb5:	jne    0x413ca5
  413cb7:	lea    edx,[rbx-0x2b]
  413cba:	mov    rcx,rsi
  413cbd:	mov    eax,ebx
  413cbf:	and    edx,0xfd
  413cc5:	jne    0x413ccf
  413cc7:	movzx  eax,BYTE PTR [rcx+0x1]
  413ccb:	add    rsi,0x1
  413ccf:	test   edi,edi
  413cd1:	jne    0x413e11
  413cd7:	cmp    al,0x30
  413cd9:	mov    dil,0xa
  413cdc:	je     0x413e62
  413ce2:	movsx  r15d,al
  413ce6:	lea    edx,[r15-0x30]
  413cea:	cmp    edx,0x9
  413ced:	ja     0x413de0
  413cf3:	movsx  ecx,al
  413cf6:	sub    ecx,0x30
  413cf9:	cmp    edi,ecx
  413cfb:	jle    0x413e90
  413d01:	mov    eax,ecx
  413d03:	shr    eax,0x1f
  413d06:	test   al,al
  413d08:	jne    0x413e90
  413d0e:	lea    r14,[rsi+0x1]
  413d12:	movsxd r15,ecx
  413d15:	xor    r13d,r13d
  413d18:	movsxd rsi,edi
  413d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  413d20:	movsx  ebp,BYTE PTR [r14]
  413d24:	lea    r9d,[rbp-0x30]
  413d28:	cmp    r9d,0x9
  413d2c:	mov    ecx,r9d
  413d2f:	jbe    0x413d94
  413d31:	mov    ecx,ebp
  413d33:	call   0x4198a0
  413d38:	test   eax,eax
  413d3a:	lea    ecx,[rbp-0x37]
  413d3d:	jne    0x413d94
  413d3f:	mov    ecx,ebp
  413d41:	call   0x4198b0
  413d46:	test   eax,eax
  413d48:	jne    0x413d91
  413d4a:	test   r12,r12
  413d4d:	je     0x413d53
  413d4f:	mov    QWORD PTR [r12],r14
  413d53:	cmp    bl,0x2d
  413d56:	je     0x413e40
  413d5c:	test   r15,r15
  413d5f:	js     0x413eb0
  413d65:	test   r13d,r13d
  413d68:	jne    0x413eb0
  413d6e:	mov    rax,r15
  413d71:	jmp    0x413d80
  413d73:	call   0x419948
  413d78:	mov    DWORD PTR [rax],0x21
  413d7e:	xor    eax,eax
  413d80:	add    rsp,0x28
  413d84:	pop    rbx
  413d85:	pop    rsi
  413d86:	pop    rdi
  413d87:	pop    rbp
  413d88:	pop    r12
  413d8a:	pop    r13
  413d8c:	pop    r14
  413d8e:	pop    r15
  413d90:	ret    
  413d91:	lea    ecx,[rbp-0x57]
  413d94:	cmp    edi,ecx
  413d96:	jle    0x413d4a
  413d98:	test   ecx,ecx
  413d9a:	js     0x413d4a
  413d9c:	movabs rax,0x7fffffffffffffff
  413da6:	cqo    
  413da8:	idiv   rsi
  413dab:	add    rax,0x2
  413daf:	cmp    r15,rax
  413db2:	ja     0x413dd0
  413db4:	imul   r15,rsi
  413db8:	movsxd rcx,ecx
  413dbb:	add    r15,rcx
  413dbe:	add    r14,0x1
  413dc2:	jmp    0x413d20
  413dc7:	nop    WORD PTR [rax+rax*1+0x0]
  413dd0:	mov    r13d,0x1
  413dd6:	jmp    0x413dbe
  413dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  413de0:	mov    ecx,r15d
  413de3:	call   0x4198a0
  413de8:	test   eax,eax
  413dea:	lea    ecx,[r15-0x37]
  413dee:	jne    0x413cf9
  413df4:	mov    ecx,r15d
  413df7:	call   0x4198b0
  413dfc:	mov    edx,eax
  413dfe:	xor    eax,eax
  413e00:	test   edx,edx
  413e02:	je     0x413d80
  413e08:	lea    ecx,[r15-0x57]
  413e0c:	jmp    0x413cf9
  413e11:	cmp    edi,0x10
  413e14:	jne    0x413ce2
  413e1a:	cmp    al,0x30
  413e1c:	jne    0x413ce2
  413e22:	movzx  eax,BYTE PTR [rsi+0x1]
  413e26:	and    eax,0xffffffdf
  413e29:	cmp    al,0x58
  413e2b:	je     0x413e75
  413e2d:	mov    eax,0x30
  413e32:	jmp    0x413cf3
  413e37:	nop    WORD PTR [rax+rax*1+0x0]
  413e40:	movabs rbx,0x8000000000000000
  413e4a:	cmp    r15,rbx
  413e4d:	jbe    0x413ea0
  413e4f:	call   0x419948
  413e54:	mov    DWORD PTR [rax],0x22
  413e5a:	mov    rax,rbx
  413e5d:	jmp    0x413d80
  413e62:	movzx  edx,BYTE PTR [rsi+0x1]
  413e66:	mov    dil,0x8
  413e69:	and    edx,0xffffffdf
  413e6c:	cmp    dl,0x58
  413e6f:	jne    0x413ce2
  413e75:	movzx  eax,BYTE PTR [rsi+0x2]
  413e79:	mov    edi,0x10
  413e7e:	add    rsi,0x2
  413e82:	jmp    0x413ce2
  413e87:	nop    WORD PTR [rax+rax*1+0x0]
  413e90:	xor    eax,eax
  413e92:	jmp    0x413d80
  413e97:	nop    WORD PTR [rax+rax*1+0x0]
  413ea0:	test   r13d,r13d
  413ea3:	jne    0x413e4f
  413ea5:	mov    rax,r15
  413ea8:	neg    rax
  413eab:	jmp    0x413d80
  413eb0:	call   0x419948
  413eb5:	mov    DWORD PTR [rax],0x22
  413ebb:	movabs rax,0x7fffffffffffffff
  413ec5:	jmp    0x413d80
  413eca:	nop
  413ecb:	nop
  413ecc:	nop
  413ecd:	nop
  413ece:	nop
  413ecf:	nop
  413ed0:	sub    rsp,0x38
  413ed4:	mov    r9,rdx
  413ed7:	mov    QWORD PTR [rsp+0x20],r8
  413edc:	mov    rdx,rcx
  413edf:	xor    r8d,r8d
  413ee2:	mov    ecx,0x6000
  413ee7:	call   0x416320
  413eec:	add    rsp,0x38
  413ef0:	ret    
  413ef1:	nop
  413ef2:	nop
  413ef3:	nop
  413ef4:	nop
  413ef5:	nop
  413ef6:	nop
  413ef7:	nop
  413ef8:	nop
  413ef9:	nop
  413efa:	nop
  413efb:	nop
  413efc:	nop
  413efd:	nop
  413efe:	nop
  413eff:	nop
  413f00:	push   rsi
  413f01:	push   rbx
  413f02:	sub    rsp,0x38
  413f06:	mov    rbx,rcx
  413f09:	mov    rsi,rdx
  413f0c:	call   0x419978
  413f11:	lea    rdx,[rax+0x30]
  413f15:	mov    QWORD PTR [rsp+0x20],rsi
  413f1a:	mov    r9,rbx
  413f1d:	xor    r8d,r8d
  413f20:	mov    ecx,0x6000
  413f25:	call   0x416320
  413f2a:	add    rsp,0x38
  413f2e:	pop    rbx
  413f2f:	pop    rsi
  413f30:	ret    
  413f31:	nop
  413f32:	nop
  413f33:	nop
  413f34:	nop
  413f35:	nop
  413f36:	nop
  413f37:	nop
  413f38:	nop
  413f39:	nop
  413f3a:	nop
  413f3b:	nop
  413f3c:	nop
  413f3d:	nop
  413f3e:	nop
  413f3f:	nop
  413f40:	push   rsi
  413f41:	push   rbx
  413f42:	sub    rsp,0x38
  413f46:	test   rdx,rdx
  413f49:	mov    rsi,rcx
  413f4c:	je     0x413f80
  413f4e:	lea    rbx,[rdx-0x1]
  413f52:	mov    QWORD PTR [rsp+0x20],r9
  413f57:	mov    rdx,rcx
  413f5a:	mov    r9,r8
  413f5d:	xor    ecx,ecx
  413f5f:	mov    r8d,ebx
  413f62:	call   0x416320
  413f67:	cmp    eax,ebx
  413f69:	cmovle ebx,eax
  413f6c:	movsxd rbx,ebx
  413f6f:	mov    BYTE PTR [rsi+rbx*1],0x0
  413f73:	add    rsp,0x38
  413f77:	pop    rbx
  413f78:	pop    rsi
  413f79:	ret    
  413f7a:	nop    WORD PTR [rax+rax*1+0x0]
  413f80:	mov    QWORD PTR [rsp+0x20],r9
  413f85:	mov    rdx,rcx
  413f88:	mov    r9,r8
  413f8b:	xor    ecx,ecx
  413f8d:	xor    r8d,r8d
  413f90:	call   0x416320
  413f95:	add    rsp,0x38
  413f99:	pop    rbx
  413f9a:	pop    rsi
  413f9b:	ret    
  413f9c:	nop
  413f9d:	nop
  413f9e:	nop
  413f9f:	nop
  413fa0:	sub    rsp,0x18
  413fa4:	movsd  QWORD PTR [rsp],xmm0
  413fa9:	fld    QWORD PTR [rsp]
  413fac:	fxam   
  413fae:	fstsw  ax
  413fb1:	mov    dh,0x45
  413fb3:	and    dh,ah
  413fb5:	cmp    dh,0x5
  413fb8:	je     0x413ff8
  413fba:	fld    st(0)
  413fbc:	sub    rsp,0x8
  413fc0:	fnstcw WORD PTR [rsp+0x4]
  413fc4:	movzx  eax,WORD PTR [rsp+0x4]
  413fc9:	or     ah,0xc
  413fcc:	mov    WORD PTR [rsp],ax
  413fd0:	fldcw  WORD PTR [rsp]
  413fd3:	frndint 
  413fd5:	fldcw  WORD PTR [rsp+0x4]
  413fd9:	add    rsp,0x8
  413fdd:	fsub   st(1),st
  413fdf:	fxch   st(1)
  413fe1:	f2xm1  
  413fe3:	fld1   
  413fe5:	faddp  st(1),st
  413fe7:	fscale 
  413fe9:	fstp   st(1)
  413feb:	fstp   QWORD PTR [rsp]
  413fee:	movsd  xmm0,QWORD PTR [rsp]
  413ff3:	add    rsp,0x18
  413ff7:	ret    
  413ff8:	test   eax,0x200
  413ffd:	je     0x414003
  413fff:	fstp   st(0)
  414001:	fldz   
  414003:	fstp   QWORD PTR [rsp]
  414006:	movsd  xmm0,QWORD PTR [rsp]
  41400b:	add    rsp,0x18
  41400f:	ret    
  414010:	add    BYTE PTR [rax],al
  414012:	add    BYTE PTR [rax],al
  414014:	add    BYTE PTR [rax],al
  414016:	lock (bad) 
  414018:	pop    rdx
  41401a:	cmc    
  41401b:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  41401f:	(bad)  
  414020:	movsd  QWORD PTR [rsp-0x10],xmm0
  414026:	fld    QWORD PTR [rip+0xffffffffffffffe4]        # 0x414010
  41402c:	fld    QWORD PTR [rsp-0x10]
  414030:	fxam   
  414032:	fnstsw ax
  414034:	fld    st(0)
  414036:	sahf   
  414037:	jb     0x41406a
  414039:	fsub   st,st(2)
  41403b:	fld    st(0)
  41403d:	fabs   
  41403f:	fcomp  QWORD PTR [rip+0xffffffffffffffd3]        # 0x414018
  414045:	fnstsw ax
  414047:	and    ah,0x45
  41404a:	je     0x41405b
  41404c:	fstp   st(1)
  41404e:	fyl2xp1 
  414050:	fstp   QWORD PTR [rsp-0x10]
  414054:	movsd  xmm0,QWORD PTR [rsp-0x10]
  41405a:	ret    
  41405b:	fstp   st(0)
  41405d:	fyl2x  
  41405f:	fstp   QWORD PTR [rsp-0x10]
  414063:	movsd  xmm0,QWORD PTR [rsp-0x10]
  414069:	ret    
  41406a:	jp     0x414039
  41406c:	fstp   st(1)
  41406e:	fstp   st(1)
  414070:	fstp   QWORD PTR [rsp-0x10]
  414074:	movsd  xmm0,QWORD PTR [rsp-0x10]
  41407a:	ret    
  41407b:	nop
  41407c:	nop
  41407d:	nop
  41407e:	nop
  41407f:	nop
  414080:	sub    rsp,0x28
  414084:	movsd  QWORD PTR [rsp+0x8],xmm0
  41408a:	fld    QWORD PTR [rsp+0x8]
  41408e:	push   rax
  41408f:	sub    rsp,0x8
  414093:	fnstcw WORD PTR [rsp+0x4]
  414097:	movzx  eax,WORD PTR [rsp+0x4]
  41409c:	or     ah,0xc
  41409f:	mov    WORD PTR [rsp],ax
  4140a3:	fldcw  WORD PTR [rsp]
  4140a6:	frndint 
  4140a8:	fldcw  WORD PTR [rsp+0x4]
  4140ac:	add    rsp,0x8
  4140b0:	pop    rax
  4140b1:	test   rdx,rdx
  4140b4:	fstp   QWORD PTR [rsp+0x8]
  4140b8:	je     0x4140c4
  4140ba:	movsd  xmm2,QWORD PTR [rsp+0x8]
  4140c0:	movsd  QWORD PTR [rdx],xmm2
  4140c4:	movsd  QWORD PTR [rsp+0x18],xmm0
  4140ca:	mov    eax,DWORD PTR [rsp+0x1c]
  4140ce:	mov    ecx,eax
  4140d0:	and    eax,0x7ff00000
  4140d5:	and    ecx,0xfffff
  4140db:	or     ecx,DWORD PTR [rsp+0x18]
  4140df:	mov    edx,ecx
  4140e1:	or     edx,eax
  4140e3:	sete   r8b
  4140e7:	test   eax,eax
  4140e9:	sete   dl
  4140ec:	or     edx,r8d
  4140ef:	xor    edx,0x1
  4140f2:	cmp    eax,0x7ff00000
  4140f7:	sete   al
  4140fa:	and    edx,eax
  4140fc:	test   ecx,ecx
  4140fe:	setne  al
  414101:	cmp    dl,al
  414103:	jbe    0x414110
  414105:	pxor   xmm0,xmm0
  414109:	add    rsp,0x28
  41410d:	ret    
  41410e:	xchg   ax,ax
  414110:	subsd  xmm0,QWORD PTR [rsp+0x8]
  414116:	add    rsp,0x28
  41411a:	ret    
  41411b:	nop    DWORD PTR [rax+rax*1+0x0]
  414120:	push   rdi
  414121:	push   rsi
  414122:	push   rbx
  414123:	sub    rsp,0xc0
  41412a:	movaps XMMWORD PTR [rsp+0x80],xmm6
  414132:	movaps XMMWORD PTR [rsp+0x90],xmm7
  41413a:	movaps XMMWORD PTR [rsp+0xa0],xmm8
  414143:	movaps XMMWORD PTR [rsp+0xb0],xmm9
  41414c:	mov    ecx,0x4000
  414151:	movsd  QWORD PTR [rsp+0x70],xmm0
  414157:	movapd xmm8,xmm0
  41415c:	mov    eax,DWORD PTR [rsp+0x74]
  414160:	movapd xmm7,xmm1
  414164:	mov    edx,eax
  414166:	and    eax,0x7ff00000
  41416b:	and    edx,0xfffff
  414171:	or     edx,DWORD PTR [rsp+0x70]
  414175:	mov    edi,edx
  414177:	or     edi,eax
  414179:	je     0x414187
  41417b:	test   eax,eax
  41417d:	mov    cx,0x4400
  414181:	jne    0x414281
  414187:	movsd  QWORD PTR [rsp+0x78],xmm7
  41418d:	mov    eax,DWORD PTR [rsp+0x7c]
  414191:	movsd  xmm0,QWORD PTR [rip+0x11417]        # 0x4255b0
  414199:	mov    edx,eax
  41419b:	and    eax,0x7ff00000
  4141a0:	and    edx,0xfffff
  4141a6:	or     edx,DWORD PTR [rsp+0x78]
  4141aa:	mov    esi,edx
  4141ac:	or     esi,eax
  4141ae:	je     0x414223
  4141b0:	test   eax,eax
  4141b2:	jne    0x414250
  4141b8:	mov    r8d,0x4400
  4141be:	movsd  xmm6,QWORD PTR [rip+0x113ea]        # 0x4255b0
  4141c6:	ucomisd xmm8,xmm6
  4141cb:	jp     0x4141cf
  4141cd:	je     0x41421f
  4141cf:	cmp    ecx,0x100
  4141d5:	jne    0x4142b0
  4141db:	movq   rax,xmm8
  4141e0:	shr    rax,0x20
  4141e4:	test   eax,eax
  4141e6:	js     0x414490
  4141ec:	movsd  xmm6,QWORD PTR [rip+0x1139c]        # 0x425590
  4141f4:	call   0x419948
  4141f9:	mov    DWORD PTR [rax],0x21
  4141ff:	movsd  QWORD PTR [rsp+0x20],xmm6
  414205:	movapd xmm3,xmm7
  414209:	movapd xmm2,xmm8
  41420e:	lea    rdx,[rip+0x1136b]        # 0x425580
  414215:	mov    ecx,0x1
  41421a:	call   0x412900
  41421f:	movapd xmm0,xmm6
  414223:	movaps xmm6,XMMWORD PTR [rsp+0x80]
  41422b:	movaps xmm7,XMMWORD PTR [rsp+0x90]
  414233:	movaps xmm8,XMMWORD PTR [rsp+0xa0]
  41423c:	movaps xmm9,XMMWORD PTR [rsp+0xb0]
  414245:	add    rsp,0xc0
  41424c:	pop    rbx
  41424d:	pop    rsi
  41424e:	pop    rdi
  41424f:	ret    
  414250:	cmp    eax,0x7ff00000
  414255:	mov    r8d,0x400
  41425b:	jne    0x4141be
  414261:	test   edx,edx
  414263:	mov    r8w,0x500
  414268:	je     0x4141be
  41426e:	ucomisd xmm8,xmm0
  414273:	jp     0x4141db
  414279:	jne    0x4141db
  41427f:	jmp    0x414223
  414281:	cmp    eax,0x7ff00000
  414286:	mov    cx,0x400
  41428a:	jne    0x414187
  414290:	cmp    edx,0x1
  414293:	sbb    ecx,ecx
  414295:	and    ecx,0x400
  41429b:	add    ecx,0x100
  4142a1:	jmp    0x414187
  4142a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142b0:	cmp    ecx,0x4000
  4142b6:	je     0x414350
  4142bc:	cmp    r8d,0x500
  4142c3:	je     0x414320
  4142c5:	cmp    ecx,0x500
  4142cb:	jne    0x4143a2
  4142d1:	movq   rax,xmm8
  4142d6:	shr    rax,0x20
  4142da:	test   eax,eax
  4142dc:	js     0x4145c0
  4142e2:	movapd xmm0,xmm7
  4142e6:	mov    edx,0xffffffff
  4142eb:	call   0x416df0
  4142f0:	lea    rdx,[rsp+0x68]
  4142f5:	call   0x414080
  4142fa:	movq   rax,xmm7
  4142ff:	shr    rax,0x20
  414303:	test   eax,eax
  414305:	pxor   xmm9,xmm9
  41430a:	js     0x414398
  414310:	movsd  xmm0,QWORD PTR [rip+0x11290]        # 0x4255a8
  414318:	jmp    0x414223
  41431d:	nop    DWORD PTR [rax]
  414320:	cmp    ecx,0x500
  414326:	je     0x4142fa
  414328:	movq   rax,xmm8
  41432d:	shr    rax,0x20
  414331:	test   eax,eax
  414333:	js     0x414630
  414339:	movq   rax,xmm7
  41433e:	shr    rax,0x20
  414342:	ucomisd xmm8,xmm6
  414347:	ja     0x414303
  414349:	jmp    0x41438b
  41434b:	nop    DWORD PTR [rax+rax*1+0x0]
  414350:	cmp    r8d,0x500
  414357:	je     0x414382
  414359:	movq   rax,xmm8
  41435e:	shr    rax,0x20
  414362:	test   eax,eax
  414364:	js     0x414524
  41436a:	movapd xmm0,xmm7
  41436e:	mov    edx,0xffffffff
  414373:	call   0x416df0
  414378:	lea    rdx,[rsp+0x68]
  41437d:	call   0x414080
  414382:	movq   rax,xmm7
  414387:	shr    rax,0x20
  41438b:	test   eax,eax
  41438d:	pxor   xmm9,xmm9
  414392:	js     0x414310
  414398:	movapd xmm0,xmm9
  41439d:	jmp    0x414223
  4143a2:	lea    rbx,[rsp+0x68]
  4143a7:	pxor   xmm9,xmm9
  4143ac:	movapd xmm0,xmm7
  4143b0:	mov    rdx,rbx
  4143b3:	call   0x414080
  4143b8:	ucomisd xmm0,xmm9
  4143bd:	jp     0x4144a0
  4143c3:	jne    0x4144a0
  4143c9:	movsd  xmm0,QWORD PTR [rsp+0x68]
  4143cf:	movsd  xmm1,QWORD PTR [rip+0x11201]        # 0x4255d8
  4143d7:	ucomisd xmm1,xmm0
  4143db:	jb     0x4143eb
  4143dd:	ucomisd xmm0,QWORD PTR [rip+0x1120b]        # 0x4255f0
  4143e5:	jae    0x4146d0
  4143eb:	movsd  xmm0,QWORD PTR [rip+0x111ed]        # 0x4255e0
  4143f3:	lea    rsi,[rsp+0x50]
  4143f8:	lea    rdi,[rsp+0x40]
  4143fd:	andpd  xmm0,xmm8
  414402:	mov    rdx,rdi
  414405:	mov    rcx,rsi
  414408:	movsd  QWORD PTR [rsp+0x30],xmm0
  41440e:	fld    QWORD PTR [rsp+0x30]
  414412:	fstp   TBYTE PTR [rsp+0x40]
  414416:	call   0x416f00
  41441b:	mov    rdx,rdi
  41441e:	mov    rcx,rsi
  414421:	movsd  QWORD PTR [rsp+0x30],xmm7
  414427:	fld    TBYTE PTR [rsp+0x50]
  41442b:	fld    QWORD PTR [rsp+0x30]
  41442f:	fmulp  st(1),st
  414431:	fstp   TBYTE PTR [rsp+0x40]
  414435:	call   0x416d80
  41443a:	movq   rax,xmm8
  41443f:	fld    TBYTE PTR [rsp+0x50]
  414443:	shr    rax,0x20
  414447:	test   eax,eax
  414449:	fstp   QWORD PTR [rsp+0x38]
  41444d:	movsd  xmm6,QWORD PTR [rsp+0x38]
  414453:	jns    0x41421f
  414459:	movapd xmm0,xmm7
  41445d:	mov    edx,0xffffffff
  414462:	call   0x416df0
  414467:	mov    rdx,rbx
  41446a:	call   0x414080
  41446f:	ucomisd xmm0,xmm9
  414474:	jp     0x41447c
  414476:	je     0x41421f
  41447c:	movsd  xmm4,QWORD PTR [rip+0x1113c]        # 0x4255c0
  414484:	xorpd  xmm6,xmm4
  414488:	jmp    0x41421f
  41448d:	nop    DWORD PTR [rax]
  414490:	movsd  xmm6,QWORD PTR [rip+0x110f0]        # 0x425588
  414498:	jmp    0x4141f4
  41449d:	nop    DWORD PTR [rax]
  4144a0:	movq   rax,xmm8
  4144a5:	shr    rax,0x20
  4144a9:	test   eax,eax
  4144ab:	js     0x4146e3
  4144b1:	ucomisd xmm7,QWORD PTR [rip+0x11117]        # 0x4255d0
  4144b9:	jp     0x4144c1
  4144bb:	je     0x414610
  4144c1:	movsd  xmm0,QWORD PTR [rip+0x11117]        # 0x4255e0
  4144c9:	lea    rbx,[rsp+0x50]
  4144ce:	lea    rsi,[rsp+0x40]
  4144d3:	andpd  xmm8,xmm0
  4144d8:	mov    rdx,rsi
  4144db:	mov    rcx,rbx
  4144de:	movsd  QWORD PTR [rsp+0x30],xmm8
  4144e5:	fld    QWORD PTR [rsp+0x30]
  4144e9:	fstp   TBYTE PTR [rsp+0x40]
  4144ed:	call   0x416f00
  4144f2:	mov    rdx,rsi
  4144f5:	mov    rcx,rbx
  4144f8:	movsd  QWORD PTR [rsp+0x30],xmm7
  4144fe:	fld    TBYTE PTR [rsp+0x50]
  414502:	fld    QWORD PTR [rsp+0x30]
  414506:	fmulp  st(1),st
  414508:	fstp   TBYTE PTR [rsp+0x40]
  41450c:	call   0x416d80
  414511:	fld    TBYTE PTR [rsp+0x50]
  414515:	fstp   QWORD PTR [rsp+0x38]
  414519:	movsd  xmm0,QWORD PTR [rsp+0x38]
  41451f:	jmp    0x414223
  414524:	lea    rbx,[rsp+0x68]
  414529:	pxor   xmm9,xmm9
  41452e:	movapd xmm0,xmm7
  414532:	mov    rdx,rbx
  414535:	call   0x414080
  41453a:	ucomisd xmm0,xmm9
  41453f:	jp     0x414543
  414541:	je     0x41456f
  414543:	movq   rax,xmm7
  414548:	shr    rax,0x20
  41454c:	test   eax,eax
  41454e:	jns    0x414398
  414554:	movsd  xmm0,QWORD PTR [rip+0x11064]        # 0x4255c0
  41455c:	xorpd  xmm8,xmm0
  414561:	divsd  xmm6,xmm8
  414566:	movapd xmm0,xmm6
  41456a:	jmp    0x414223
  41456f:	movapd xmm0,xmm7
  414573:	mov    edx,0xffffffff
  414578:	call   0x416df0
  41457d:	mov    rdx,rbx
  414580:	call   0x414080
  414585:	ucomisd xmm0,xmm9
  41458a:	mov    edx,0x1
  41458f:	setp   al
  414592:	cmove  edx,eax
  414595:	movq   rax,xmm7
  41459a:	shr    rax,0x20
  41459e:	test   eax,eax
  4145a0:	js     0x4146fb
  4145a6:	test   dl,dl
  4145a8:	je     0x414398
  4145ae:	movsd  xmm0,QWORD PTR [rip+0x10fe2]        # 0x425598
  4145b6:	jmp    0x414223
  4145bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4145c0:	lea    rbx,[rsp+0x68]
  4145c5:	pxor   xmm9,xmm9
  4145ca:	movapd xmm0,xmm7
  4145ce:	mov    rdx,rbx
  4145d1:	call   0x414080
  4145d6:	ucomisd xmm0,xmm9
  4145db:	jp     0x4145df
  4145dd:	je     0x414653
  4145df:	movq   rax,xmm7
  4145e4:	shr    rax,0x20
  4145e8:	test   eax,eax
  4145ea:	js     0x414554
  4145f0:	movsd  xmm4,QWORD PTR [rip+0x10fc8]        # 0x4255c0
  4145f8:	movapd xmm0,xmm8
  4145fd:	xorpd  xmm0,xmm4
  414601:	jmp    0x414223
  414606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414610:	movsd  QWORD PTR [rsp+0x30],xmm8
  414617:	fld    QWORD PTR [rsp+0x30]
  41461b:	fsqrt  
  41461d:	fstp   QWORD PTR [rsp+0x30]
  414621:	movsd  xmm0,QWORD PTR [rsp+0x30]
  414627:	jmp    0x414223
  41462c:	nop    DWORD PTR [rax+0x0]
  414630:	movsd  xmm0,QWORD PTR [rip+0x10f88]        # 0x4255c0
  414638:	xorpd  xmm8,xmm0
  41463d:	ucomisd xmm8,xmm6
  414642:	jp     0x414339
  414648:	je     0x41421f
  41464e:	jmp    0x414339
  414653:	movapd xmm0,xmm7
  414657:	mov    edx,0xffffffff
  41465c:	call   0x416df0
  414661:	mov    rdx,rbx
  414664:	call   0x414080
  414669:	ucomisd xmm0,xmm9
  41466e:	mov    edx,0x1
  414673:	setp   al
  414676:	cmove  edx,eax
  414679:	movq   rax,xmm7
  41467e:	shr    rax,0x20
  414682:	mov    ecx,eax
  414684:	shr    ecx,0x1f
  414687:	cmp    cl,dl
  414689:	ja     0x414398
  41468f:	not    eax
  414691:	shr    eax,0x1f
  414694:	test   dl,dl
  414696:	je     0x4146a8
  414698:	test   al,al
  41469a:	movsd  xmm0,QWORD PTR [rip+0x10efe]        # 0x4255a0
  4146a2:	jne    0x414223
  4146a8:	cmp    al,dl
  4146aa:	ja     0x414310
  4146b0:	test   cl,cl
  4146b2:	jne    0x4145a6
  4146b8:	test   dl,dl
  4146ba:	movsd  xmm0,QWORD PTR [rip+0x10ede]        # 0x4255a0
  4146c2:	jne    0x414223
  4146c8:	jmp    0x414310
  4146cd:	nop    DWORD PTR [rax]
  4146d0:	cvttsd2si edx,xmm7
  4146d4:	movapd xmm0,xmm8
  4146d9:	call   0x4147f0
  4146de:	jmp    0x414223
  4146e3:	call   0x419948
  4146e8:	movsd  xmm6,QWORD PTR [rip+0x10e98]        # 0x425588
  4146f0:	mov    DWORD PTR [rax],0x21
  4146f6:	jmp    0x4141ff
  4146fb:	test   dl,dl
  4146fd:	je     0x414310
  414703:	movsd  xmm0,QWORD PTR [rip+0x10e95]        # 0x4255a0
  41470b:	jmp    0x414223
  414710:	movq   rax,xmm0
  414715:	mov    rcx,rax
  414718:	sar    rcx,0x34
  41471c:	and    ecx,0x7ff
  414722:	sub    ecx,0x3ff
  414728:	cmp    ecx,0x33
  41472b:	jg     0x4147d0
  414731:	test   rax,rax
  414734:	je     0x4147e0
  41473a:	test   ecx,ecx
  41473c:	js     0x414790
  41473e:	movabs rdx,0xfffffffffffff
  414748:	sar    rdx,cl
  41474b:	test   rdx,rax
  41474e:	je     0x4147e0
  414754:	addsd  xmm0,QWORD PTR [rip+0x10ea4]        # 0x425600
  41475c:	ucomisd xmm0,QWORD PTR [rip+0x10ea4]        # 0x425608
  414764:	jbe    0x414781
  414766:	test   rax,rax
  414769:	jle    0x41477b
  41476b:	movabs r8,0x10000000000000
  414775:	shr    r8,cl
  414778:	add    rax,r8
  41477b:	not    rdx
  41477e:	and    rax,rdx
  414781:	movq   xmm0,rax
  414786:	ret    
  414787:	nop    WORD PTR [rax+rax*1+0x0]
  414790:	addsd  xmm0,QWORD PTR [rip+0x10e68]        # 0x425600
  414798:	ucomisd xmm0,QWORD PTR [rip+0x10e68]        # 0x425608
  4147a0:	jbe    0x4147c0
  4147a2:	test   rax,rax
  4147a5:	movabs rdx,0x3ff0000000000000
  4147af:	movabs rax,0x8000000000000000
  4147b9:	cmovns rax,rdx
  4147bd:	nop    DWORD PTR [rax]
  4147c0:	movq   xmm0,rax
  4147c5:	ret    
  4147c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4147d0:	cmp    ecx,0x400
  4147d6:	je     0x4147e2
  4147d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4147e0:	repz ret 
  4147e2:	addsd  xmm0,xmm0
  4147e6:	ret    
  4147e7:	nop
  4147e8:	nop
  4147e9:	nop
  4147ea:	nop
  4147eb:	nop
  4147ec:	nop
  4147ed:	nop
  4147ee:	nop
  4147ef:	nop
  4147f0:	sub    rsp,0x78
  4147f4:	movaps XMMWORD PTR [rsp+0x50],xmm6
  4147f9:	movaps XMMWORD PTR [rsp+0x60],xmm7
  4147fe:	movsd  QWORD PTR [rsp+0x48],xmm0
  414804:	movapd xmm7,xmm0
  414808:	mov    eax,DWORD PTR [rsp+0x4c]
  41480c:	mov    ecx,eax
  41480e:	and    eax,0x7ff00000
  414813:	and    ecx,0xfffff
  414819:	or     ecx,DWORD PTR [rsp+0x48]
  41481d:	mov    r9d,ecx
  414820:	or     r9d,eax
  414823:	je     0x4148c0
  414829:	cmp    eax,0x7ff00000
  41482e:	je     0x414923
  414834:	movsd  xmm1,QWORD PTR [rip+0x10dec]        # 0x425628
  41483c:	mov    ecx,0x0
  414841:	ucomisd xmm0,xmm1
  414845:	setnp  al
  414848:	cmovne eax,ecx
  41484b:	test   al,al
  41484d:	jne    0x414910
  414853:	test   edx,edx
  414855:	je     0x414910
  41485b:	movsd  xmm0,QWORD PTR [rip+0x10ded]        # 0x425650
  414863:	test   edx,edx
  414865:	mov    eax,edx
  414867:	andpd  xmm0,xmm7
  41486b:	js     0x4149b0
  414871:	cmp    eax,0x1
  414874:	je     0x4148a0
  414876:	test   al,0x1
  414878:	movapd xmm3,xmm1
  41487c:	jne    0x4149c3
  414882:	movapd xmm2,xmm0
  414886:	movapd xmm0,xmm3
  41488a:	shr    eax,1
  41488c:	nop    DWORD PTR [rax+0x0]
  414890:	test   al,0x1
  414892:	mulsd  xmm2,xmm2
  414896:	je     0x41489c
  414898:	mulsd  xmm0,xmm2
  41489c:	shr    eax,1
  41489e:	jne    0x414890
  4148a0:	and    edx,0x1
  4148a3:	je     0x414914
  4148a5:	movq   rax,xmm7
  4148aa:	test   rax,rax
  4148ad:	jns    0x414914
  4148af:	movsd  xmm2,QWORD PTR [rip+0x10da9]        # 0x425660
  4148b7:	xorpd  xmm0,xmm2
  4148bb:	jmp    0x414914
  4148bd:	nop    DWORD PTR [rax]
  4148c0:	movsd  xmm1,QWORD PTR [rip+0x10d60]        # 0x425628
  4148c8:	mov    ecx,0x0
  4148cd:	ucomisd xmm0,xmm1
  4148d1:	setnp  al
  4148d4:	cmovne eax,ecx
  4148d7:	test   al,al
  4148d9:	jne    0x414910
  4148db:	test   edx,edx
  4148dd:	je     0x414910
  4148df:	mov    eax,edx
  4148e1:	and    eax,0x1
  4148e4:	test   edx,edx
  4148e6:	js     0x414a20
  4148ec:	test   eax,eax
  4148ee:	je     0x414901
  4148f0:	movq   rax,xmm7
  4148f5:	shr    rax,0x20
  4148f9:	test   eax,eax
  4148fb:	js     0x414a60
  414901:	pxor   xmm0,xmm0
  414905:	jmp    0x414914
  414907:	nop    WORD PTR [rax+rax*1+0x0]
  414910:	movapd xmm0,xmm1
  414914:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  414919:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  41491e:	add    rsp,0x78
  414922:	ret    
  414923:	test   ecx,ecx
  414925:	je     0x4149d0
  41492b:	movsd  xmm1,QWORD PTR [rip+0x10cf5]        # 0x425628
  414933:	mov    ecx,0x0
  414938:	ucomisd xmm0,xmm1
  41493c:	setnp  al
  41493f:	cmovne eax,ecx
  414942:	test   al,al
  414944:	jne    0x414910
  414946:	test   edx,edx
  414948:	je     0x414910
  41494a:	movq   rax,xmm7
  41494f:	shr    rax,0x20
  414953:	test   eax,eax
  414955:	js     0x414a70
  41495b:	movsd  xmm6,QWORD PTR [rip+0x10cbd]        # 0x425620
  414963:	mov    DWORD PTR [rsp+0x3c],edx
  414967:	call   0x419948
  41496c:	mov    edx,DWORD PTR [rsp+0x3c]
  414970:	pxor   xmm3,xmm3
  414974:	mov    DWORD PTR [rax],0x21
  41497a:	movapd xmm2,xmm7
  41497e:	movsd  QWORD PTR [rsp+0x20],xmm6
  414984:	mov    ecx,0x1
  414989:	cvtsi2sd xmm3,edx
  41498d:	lea    rdx,[rip+0x10c7c]        # 0x425610
  414994:	call   0x412900
  414999:	movapd xmm0,xmm6
  41499d:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  4149a2:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  4149a7:	add    rsp,0x78
  4149ab:	ret    
  4149ac:	nop    DWORD PTR [rax+0x0]
  4149b0:	movapd xmm4,xmm1
  4149b4:	neg    eax
  4149b6:	divsd  xmm4,xmm0
  4149ba:	movapd xmm0,xmm4
  4149be:	jmp    0x414871
  4149c3:	movapd xmm3,xmm0
  4149c7:	jmp    0x414882
  4149cc:	nop    DWORD PTR [rax+0x0]
  4149d0:	movsd  xmm1,QWORD PTR [rip+0x10c50]        # 0x425628
  4149d8:	mov    r8d,edx
  4149db:	and    r8d,0x1
  4149df:	mov    ecx,0x0
  4149e4:	ucomisd xmm0,xmm1
  4149e8:	setnp  al
  4149eb:	cmovne eax,ecx
  4149ee:	test   al,al
  4149f0:	jne    0x414910
  4149f6:	test   edx,edx
  4149f8:	je     0x414910
  4149fe:	movq   rax,xmm7
  414a03:	shr    rax,0x20
  414a07:	test   eax,eax
  414a09:	js     0x414a80
  414a0b:	test   edx,edx
  414a0d:	movsd  xmm0,QWORD PTR [rip+0x10c2b]        # 0x425640
  414a15:	jns    0x414914
  414a1b:	jmp    0x414901
  414a20:	test   eax,eax
  414a22:	je     0x414ae0
  414a28:	movq   rax,xmm7
  414a2d:	movsd  xmm0,QWORD PTR [rip+0x10c0b]        # 0x425640
  414a35:	shr    rax,0x20
  414a39:	test   eax,eax
  414a3b:	jns    0x414914
  414a41:	movsd  xmm0,QWORD PTR [rip+0x10bef]        # 0x425638
  414a49:	jmp    0x414914
  414a4e:	xchg   ax,ax
  414a50:	test   r8d,r8d
  414a53:	pxor   xmm0,xmm0
  414a57:	je     0x414914
  414a5d:	nop    DWORD PTR [rax]
  414a60:	movsd  xmm0,QWORD PTR [rip+0x10bc8]        # 0x425630
  414a68:	jmp    0x414914
  414a6d:	nop    DWORD PTR [rax]
  414a70:	movsd  xmm6,QWORD PTR [rip+0x10ba0]        # 0x425618
  414a78:	jmp    0x414963
  414a7d:	nop    DWORD PTR [rax]
  414a80:	mov    eax,r8d
  414a83:	mov    ecx,edx
  414a85:	xor    eax,0x1
  414a88:	shr    ecx,0x1f
  414a8b:	and    eax,0x1
  414a8e:	je     0x414a9c
  414a90:	test   cl,cl
  414a92:	pxor   xmm0,xmm0
  414a96:	jne    0x414914
  414a9c:	not    edx
  414a9e:	shr    edx,0x1f
  414aa1:	test   r8d,r8d
  414aa4:	je     0x414ab6
  414aa6:	test   dl,dl
  414aa8:	movsd  xmm0,QWORD PTR [rip+0x10b88]        # 0x425638
  414ab0:	jne    0x414914
  414ab6:	test   al,al
  414ab8:	je     0x414aca
  414aba:	test   dl,dl
  414abc:	movsd  xmm0,QWORD PTR [rip+0x10b7c]        # 0x425640
  414ac4:	jne    0x414914
  414aca:	test   cl,cl
  414acc:	jne    0x414a50
  414ace:	test   r8d,r8d
  414ad1:	movsd  xmm0,QWORD PTR [rip+0x10b5f]        # 0x425638
  414ad9:	jne    0x414914
  414adf:	nop
  414ae0:	movsd  xmm0,QWORD PTR [rip+0x10b58]        # 0x425640
  414ae8:	jmp    0x414914
  414aed:	nop
  414aee:	nop
  414aef:	nop
  414af0:	sub    rsp,0x58
  414af4:	mov    rax,QWORD PTR [rdx]
  414af7:	mov    r11,rdx
  414afa:	mov    edx,DWORD PTR [rdx+0x8]
  414afd:	mov    r10,rdx
  414b00:	and    r10w,0x7fff
  414b06:	jne    0x414b24
  414b08:	mov    rdx,rax
  414b0b:	shr    rdx,0x20
  414b0f:	or     eax,edx
  414b11:	jne    0x414b90
  414b13:	mov    DWORD PTR [rsp+0x44],0x0
  414b1b:	movzx  eax,WORD PTR [r11+0x8]
  414b20:	xor    edx,edx
  414b22:	jmp    0x414b4b
  414b24:	cmp    r10w,0x7fff
  414b2a:	je     0x414bb0
  414b30:	movzx  eax,WORD PTR [r11+0x8]
  414b35:	mov    DWORD PTR [rsp+0x44],0x1
  414b3d:	mov    edx,eax
  414b3f:	and    edx,0x7fff
  414b45:	sub    edx,0x403e
  414b4b:	and    eax,0x8000
  414b50:	mov    r10,QWORD PTR [rsp+0x80]
  414b58:	mov    DWORD PTR [r10],eax
  414b5b:	lea    rax,[rsp+0x48]
  414b60:	mov    QWORD PTR [rsp+0x30],r9
  414b65:	mov    DWORD PTR [rsp+0x20],ecx
  414b69:	lea    r9,[rsp+0x44]
  414b6e:	lea    rcx,[rip+0x951b]        # 0x41e090
  414b75:	mov    DWORD PTR [rsp+0x28],r8d
  414b7a:	mov    QWORD PTR [rsp+0x38],rax
  414b7f:	mov    r8,r11
  414b82:	call   0x417180
  414b87:	add    rsp,0x58
  414b8b:	ret    
  414b8c:	nop    DWORD PTR [rax+0x0]
  414b90:	test   edx,edx
  414b92:	js     0x414b30
  414b94:	mov    DWORD PTR [rsp+0x44],0x2
  414b9c:	movzx  eax,WORD PTR [r11+0x8]
  414ba1:	mov    edx,0xffffbfc3
  414ba6:	jmp    0x414b4b
  414ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  414bb0:	mov    rdx,rax
  414bb3:	shr    rdx,0x20
  414bb7:	and    edx,0x7fffffff
  414bbd:	or     edx,eax
  414bbf:	jne    0x414bd5
  414bc1:	mov    DWORD PTR [rsp+0x44],0x3
  414bc9:	movzx  eax,WORD PTR [r11+0x8]
  414bce:	xor    edx,edx
  414bd0:	jmp    0x414b4b
  414bd5:	mov    DWORD PTR [rsp+0x44],0x4
  414bdd:	xor    edx,edx
  414bdf:	xor    eax,eax
  414be1:	jmp    0x414b50
  414be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414bf0:	push   rbx
  414bf1:	sub    rsp,0x20
  414bf5:	mov    rbx,rdx
  414bf8:	mov    edx,DWORD PTR [rdx+0x8]
  414bfb:	test   dh,0x40
  414bfe:	jne    0x414c08
  414c00:	mov    eax,DWORD PTR [rbx+0x24]
  414c03:	cmp    DWORD PTR [rbx+0x28],eax
  414c06:	jle    0x414c1a
  414c08:	and    dh,0x20
  414c0b:	jne    0x414c30
  414c0d:	movsxd rax,DWORD PTR [rbx+0x24]
  414c11:	mov    rdx,QWORD PTR [rbx]
  414c14:	mov    BYTE PTR [rdx+rax*1],cl
  414c17:	mov    eax,DWORD PTR [rbx+0x24]
  414c1a:	add    eax,0x1
  414c1d:	mov    DWORD PTR [rbx+0x24],eax
  414c20:	add    rsp,0x20
  414c24:	pop    rbx
  414c25:	ret    
  414c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414c30:	mov    rdx,QWORD PTR [rbx]
  414c33:	call   0x4198e0
  414c38:	mov    eax,DWORD PTR [rbx+0x24]
  414c3b:	add    eax,0x1
  414c3e:	mov    DWORD PTR [rbx+0x24],eax
  414c41:	add    rsp,0x20
  414c45:	pop    rbx
  414c46:	ret    
  414c47:	nop    WORD PTR [rax+rax*1+0x0]
  414c50:	push   r14
  414c52:	push   r13
  414c54:	push   r12
  414c56:	push   rbp
  414c57:	push   rdi
  414c58:	push   rsi
  414c59:	push   rbx
  414c5a:	sub    rsp,0x40
  414c5e:	lea    r14,[rsp+0x2c]
  414c63:	lea    r13,[rsp+0x30]
  414c68:	mov    ebx,edx
  414c6a:	mov    rsi,r8
  414c6d:	xor    edx,edx
  414c6f:	mov    r12,rcx
  414c72:	mov    r8,r14
  414c75:	mov    rcx,r13
  414c78:	call   0x419660
  414c7d:	mov    ebp,DWORD PTR [rsi+0x10]
  414c80:	cmp    ebp,ebx
  414c82:	jge    0x414d29
  414c88:	test   ebp,ebp
  414c8a:	js     0x414d29
  414c90:	mov    eax,DWORD PTR [rsi+0xc]
  414c93:	cmp    ebp,eax
  414c95:	jge    0x414d36
  414c9b:	sub    eax,ebp
  414c9d:	test   eax,eax
  414c9f:	mov    DWORD PTR [rsi+0xc],eax
  414ca2:	jle    0x414cb0
  414ca4:	test   BYTE PTR [rsi+0x9],0x4
  414ca8:	je     0x414d42
  414cae:	xchg   ax,ax
  414cb0:	test   ebp,ebp
  414cb2:	jle    0x414d0d
  414cb4:	add    r12,0x2
  414cb8:	movzx  edx,WORD PTR [r12-0x2]
  414cbe:	mov    r8,r14
  414cc1:	mov    rcx,r13
  414cc4:	call   0x419660
  414cc9:	test   eax,eax
  414ccb:	jle    0x414d0d
  414ccd:	sub    eax,0x1
  414cd0:	mov    rbx,r13
  414cd3:	lea    rdi,[r13+rax*1+0x1]
  414cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  414ce0:	add    rbx,0x1
  414ce4:	movsx  ecx,BYTE PTR [rbx-0x1]
  414ce8:	mov    rdx,rsi
  414ceb:	call   0x414bf0
  414cf0:	cmp    rbx,rdi
  414cf3:	jne    0x414ce0
  414cf5:	sub    ebp,0x1
  414cf8:	jmp    0x414cb0
  414cfa:	nop    WORD PTR [rax+rax*1+0x0]
  414d00:	mov    rdx,rsi
  414d03:	mov    ecx,0x20
  414d08:	call   0x414bf0
  414d0d:	mov    eax,DWORD PTR [rsi+0xc]
  414d10:	lea    edx,[rax-0x1]
  414d13:	test   eax,eax
  414d15:	mov    DWORD PTR [rsi+0xc],edx
  414d18:	jg     0x414d00
  414d1a:	add    rsp,0x40
  414d1e:	pop    rbx
  414d1f:	pop    rsi
  414d20:	pop    rdi
  414d21:	pop    rbp
  414d22:	pop    r12
  414d24:	pop    r13
  414d26:	pop    r14
  414d28:	ret    
  414d29:	mov    eax,DWORD PTR [rsi+0xc]
  414d2c:	mov    ebp,ebx
  414d2e:	cmp    ebp,eax
  414d30:	jl     0x414c9b
  414d36:	mov    DWORD PTR [rsi+0xc],0xffffffff
  414d3d:	jmp    0x414cb0
  414d42:	sub    eax,0x1
  414d45:	mov    DWORD PTR [rsi+0xc],eax
  414d48:	nop    DWORD PTR [rax+rax*1+0x0]
  414d50:	mov    rdx,rsi
  414d53:	mov    ecx,0x20
  414d58:	call   0x414bf0
  414d5d:	mov    eax,DWORD PTR [rsi+0xc]
  414d60:	lea    edx,[rax-0x1]
  414d63:	test   eax,eax
  414d65:	mov    DWORD PTR [rsi+0xc],edx
  414d68:	jne    0x414d50
  414d6a:	jmp    0x414cb0
  414d6f:	nop
  414d70:	push   rdi
  414d71:	push   rsi
  414d72:	push   rbx
  414d73:	sub    rsp,0x20
  414d77:	mov    edi,DWORD PTR [r8+0x10]
  414d7b:	mov    rsi,rcx
  414d7e:	mov    rbx,r8
  414d81:	cmp    edi,edx
  414d83:	jge    0x414e00
  414d85:	test   edi,edi
  414d87:	js     0x414e00
  414d89:	mov    eax,DWORD PTR [rbx+0xc]
  414d8c:	cmp    edi,eax
  414d8e:	jge    0x414e09
  414d90:	sub    eax,edi
  414d92:	test   eax,eax
  414d94:	mov    DWORD PTR [rbx+0xc],eax
  414d97:	jle    0x414e62
  414d9d:	test   BYTE PTR [rbx+0x9],0x4
  414da1:	jne    0x414e30
  414da7:	sub    eax,0x1
  414daa:	mov    DWORD PTR [rbx+0xc],eax
  414dad:	nop    DWORD PTR [rax]
  414db0:	mov    rdx,rbx
  414db3:	mov    ecx,0x20
  414db8:	call   0x414bf0
  414dbd:	mov    eax,DWORD PTR [rbx+0xc]
  414dc0:	mov    edx,eax
  414dc2:	sub    eax,0x1
  414dc5:	test   edx,edx
  414dc7:	mov    DWORD PTR [rbx+0xc],eax
  414dca:	jne    0x414db0
  414dcc:	test   edi,edi
  414dce:	lea    edx,[rdi-0x1]
  414dd1:	je     0x414e50
  414dd3:	lea    rdi,[rsi+rdx*1+0x1]
  414dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  414de0:	add    rsi,0x1
  414de4:	movsx  ecx,BYTE PTR [rsi-0x1]
  414de8:	mov    rdx,rbx
  414deb:	call   0x414bf0
  414df0:	cmp    rsi,rdi
  414df3:	jne    0x414de0
  414df5:	jmp    0x414e4d
  414df7:	nop    WORD PTR [rax+rax*1+0x0]
  414e00:	mov    eax,DWORD PTR [rbx+0xc]
  414e03:	mov    edi,edx
  414e05:	cmp    edi,eax
  414e07:	jl     0x414d90
  414e09:	test   edi,edi
  414e0b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  414e12:	lea    edx,[rdi-0x1]
  414e15:	jne    0x414dd3
  414e17:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  414e1e:	add    rsp,0x20
  414e22:	pop    rbx
  414e23:	pop    rsi
  414e24:	pop    rdi
  414e25:	ret    
  414e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e30:	test   edi,edi
  414e32:	lea    edx,[rdi-0x1]
  414e35:	jne    0x414dd3
  414e37:	sub    eax,0x1
  414e3a:	mov    DWORD PTR [rbx+0xc],eax
  414e3d:	nop    DWORD PTR [rax]
  414e40:	mov    rdx,rbx
  414e43:	mov    ecx,0x20
  414e48:	call   0x414bf0
  414e4d:	mov    eax,DWORD PTR [rbx+0xc]
  414e50:	lea    edx,[rax-0x1]
  414e53:	test   eax,eax
  414e55:	mov    DWORD PTR [rbx+0xc],edx
  414e58:	jg     0x414e40
  414e5a:	add    rsp,0x20
  414e5e:	pop    rbx
  414e5f:	pop    rsi
  414e60:	pop    rdi
  414e61:	ret    
  414e62:	test   edi,edi
  414e64:	lea    edx,[rdi-0x1]
  414e67:	jne    0x414dd3
  414e6d:	sub    eax,0x1
  414e70:	mov    DWORD PTR [rbx+0xc],eax
  414e73:	jmp    0x414e1e
  414e75:	nop
  414e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e80:	sub    rsp,0x38
  414e84:	test   ecx,ecx
  414e86:	mov    DWORD PTR [r8+0x10],0xffffffff
  414e8e:	je     0x414ed4
  414e90:	lea    rcx,[rsp+0x20]
  414e95:	mov    r11d,DWORD PTR [r8+0x8]
  414e99:	mov    BYTE PTR [rsp+0x20],0x2d
  414e9e:	lea    r10,[rcx+0x1]
  414ea2:	and    r11d,0x20
  414ea6:	xor    r9d,r9d
  414ea9:	movzx  eax,BYTE PTR [rdx+r9*1]
  414eae:	and    eax,0xffffffdf
  414eb1:	or     eax,r11d
  414eb4:	mov    BYTE PTR [r10+r9*1],al
  414eb8:	add    r9,0x1
  414ebc:	cmp    r9,0x3
  414ec0:	jne    0x414ea9
  414ec2:	lea    rdx,[r10+0x3]
  414ec6:	sub    rdx,rcx
  414ec9:	call   0x414d70
  414ece:	nop
  414ecf:	add    rsp,0x38
  414ed3:	ret    
  414ed4:	mov    r11d,DWORD PTR [r8+0x8]
  414ed8:	test   r11d,0x100
  414edf:	je     0x414ef1
  414ee1:	lea    rcx,[rsp+0x20]
  414ee6:	mov    BYTE PTR [rsp+0x20],0x2b
  414eeb:	lea    r10,[rcx+0x1]
  414eef:	jmp    0x414ea2
  414ef1:	test   r11b,0x40
  414ef5:	je     0x414f10
  414ef7:	lea    rcx,[rsp+0x20]
  414efc:	mov    BYTE PTR [rsp+0x20],0x20
  414f01:	lea    r10,[rcx+0x1]
  414f05:	jmp    0x414ea2
  414f07:	nop    WORD PTR [rax+rax*1+0x0]
  414f10:	lea    rcx,[rsp+0x20]
  414f15:	mov    r10,rcx
  414f18:	jmp    0x414ea2
  414f1a:	nop    WORD PTR [rax+rax*1+0x0]
  414f20:	push   rbp
  414f21:	push   r12
  414f23:	push   rdi
  414f24:	push   rsi
  414f25:	push   rbx
  414f26:	mov    rbp,rsp
  414f29:	sub    rsp,0x30
  414f2d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  414f31:	mov    rsi,rcx
  414f34:	je     0x414fd0
  414f3a:	movzx  edx,WORD PTR [rcx+0x18]
  414f3e:	test   dx,dx
  414f41:	je     0x414fa2
  414f43:	movsxd rax,DWORD PTR [rsi+0x14]
  414f47:	mov    r12,rsp
  414f4a:	add    rax,0xf
  414f4e:	and    rax,0xfffffffffffffff0
  414f52:	call   0x4139f0
  414f57:	sub    rsp,rax
  414f5a:	lea    r8,[rbp-0x4]
  414f5e:	mov    DWORD PTR [rbp-0x4],0x0
  414f65:	lea    rbx,[rsp+0x20]
  414f6a:	mov    rcx,rbx
  414f6d:	call   0x419660
  414f72:	test   eax,eax
  414f74:	jle    0x414fc0
  414f76:	sub    eax,0x1
  414f79:	lea    rdi,[rbx+rax*1+0x1]
  414f7e:	xchg   ax,ax
  414f80:	add    rbx,0x1
  414f84:	movsx  ecx,BYTE PTR [rbx-0x1]
  414f88:	mov    rdx,rsi
  414f8b:	call   0x414bf0
  414f90:	cmp    rbx,rdi
  414f93:	jne    0x414f80
  414f95:	mov    rsp,r12
  414f98:	mov    rsp,rbp
  414f9b:	pop    rbx
  414f9c:	pop    rsi
  414f9d:	pop    rdi
  414f9e:	pop    r12
  414fa0:	pop    rbp
  414fa1:	ret    
  414fa2:	mov    rdx,rsi
  414fa5:	mov    ecx,0x2e
  414faa:	call   0x414bf0
  414faf:	nop
  414fb0:	mov    rsp,rbp
  414fb3:	pop    rbx
  414fb4:	pop    rsi
  414fb5:	pop    rdi
  414fb6:	pop    r12
  414fb8:	pop    rbp
  414fb9:	ret    
  414fba:	nop    WORD PTR [rax+rax*1+0x0]
  414fc0:	mov    rdx,rsi
  414fc3:	mov    ecx,0x2e
  414fc8:	call   0x414bf0
  414fcd:	jmp    0x414f95
  414fcf:	nop
  414fd0:	mov    DWORD PTR [rbp-0x4],0x0
  414fd7:	call   0x419898
  414fdc:	mov    rdx,QWORD PTR [rax]
  414fdf:	lea    rcx,[rbp-0x6]
  414fe3:	lea    r9,[rbp-0x4]
  414fe7:	mov    r8d,0x10
  414fed:	call   0x4193e0
  414ff2:	test   eax,eax
  414ff4:	jle    0x415006
  414ff6:	movzx  edx,WORD PTR [rbp-0x6]
  414ffa:	mov    WORD PTR [rsi+0x18],dx
  414ffe:	mov    DWORD PTR [rsi+0x14],eax
  415001:	jmp    0x414f3e
  415006:	movzx  edx,WORD PTR [rsi+0x18]
  41500a:	jmp    0x414ffe
  41500c:	nop    DWORD PTR [rax+0x0]
  415010:	push   r12
  415012:	push   rbp
  415013:	push   rdi
  415014:	push   rsi
  415015:	push   rbx
  415016:	sub    rsp,0x20
  41501a:	mov    esi,r8d
  41501d:	mov    ebp,ecx
  41501f:	mov    rdi,rdx
  415022:	test   esi,esi
  415024:	mov    rbx,r9
  415027:	mov    r8d,DWORD PTR [r9+0xc]
  41502b:	jle    0x415202
  415031:	cmp    esi,r8d
  415034:	jg     0x415170
  41503a:	sub    r8d,esi
  41503d:	mov    DWORD PTR [r9+0xc],r8d
  415041:	test   r8d,r8d
  415044:	js     0x415170
  41504a:	mov    eax,DWORD PTR [rbx+0x10]
  41504d:	cmp    eax,r8d
  415050:	jge    0x415170
  415056:	sub    r8d,eax
  415059:	test   r8d,r8d
  41505c:	mov    DWORD PTR [rbx+0xc],r8d
  415060:	jle    0x41517d
  415066:	test   eax,eax
  415068:	jle    0x4152b5
  41506e:	sub    r8d,0x1
  415072:	test   esi,esi
  415074:	mov    DWORD PTR [rbx+0xc],r8d
  415078:	jle    0x415084
  41507a:	test   BYTE PTR [rbx+0x9],0x10
  41507e:	jne    0x41518f
  415084:	test   r8d,r8d
  415087:	jle    0x4150cd
  415089:	test   ebp,ebp
  41508b:	jne    0x41509b
  41508d:	mov    eax,DWORD PTR [rbx+0x8]
  415090:	test   eax,0x1c0
  415095:	je     0x415295
  41509b:	sub    r8d,0x1
  41509f:	test   r8d,r8d
  4150a2:	mov    DWORD PTR [rbx+0xc],r8d
  4150a6:	jle    0x4150cd
  4150a8:	test   DWORD PTR [rbx+0x8],0x600
  4150af:	jne    0x4150cd
  4150b1:	jmp    0x4150c0
  4150b3:	mov    rdx,rbx
  4150b6:	mov    ecx,0x20
  4150bb:	call   0x414bf0
  4150c0:	mov    eax,DWORD PTR [rbx+0xc]
  4150c3:	lea    edx,[rax-0x1]
  4150c6:	test   eax,eax
  4150c8:	mov    DWORD PTR [rbx+0xc],edx
  4150cb:	jg     0x4150b3
  4150cd:	test   ebp,ebp
  4150cf:	jne    0x4151f0
  4150d5:	mov    eax,DWORD PTR [rbx+0x8]
  4150d8:	test   ah,0x1
  4150db:	jne    0x415220
  4150e1:	test   al,0x40
  4150e3:	jne    0x4152a3
  4150e9:	mov    edx,DWORD PTR [rbx+0xc]
  4150ec:	test   edx,edx
  4150ee:	jle    0x415103
  4150f0:	mov    eax,DWORD PTR [rbx+0x8]
  4150f3:	and    eax,0x600
  4150f8:	cmp    eax,0x200
  4150fd:	je     0x415232
  415103:	test   esi,esi
  415105:	jle    0x415262
  41510b:	lea    r12,[rbx+0x20]
  41510f:	mov    ebp,0x55555556
  415114:	movzx  eax,BYTE PTR [rdi]
  415117:	mov    ecx,0x30
  41511c:	test   al,al
  41511e:	je     0x415127
  415120:	add    rdi,0x1
  415124:	movsx  ecx,al
  415127:	mov    rdx,rbx
  41512a:	call   0x414bf0
  41512f:	sub    esi,0x1
  415132:	je     0x415350
  415138:	test   BYTE PTR [rbx+0x9],0x10
  41513c:	je     0x415114
  41513e:	cmp    WORD PTR [rbx+0x20],0x0
  415143:	je     0x415114
  415145:	mov    eax,esi
  415147:	imul   ebp
  415149:	mov    eax,esi
  41514b:	sar    eax,0x1f
  41514e:	sub    edx,eax
  415150:	lea    eax,[rdx+rdx*2]
  415153:	cmp    esi,eax
  415155:	jne    0x415114
  415157:	mov    r8,rbx
  41515a:	mov    edx,0x1
  41515f:	mov    rcx,r12
  415162:	call   0x414c50
  415167:	jmp    0x415114
  415169:	nop    DWORD PTR [rax+0x0]
  415170:	mov    DWORD PTR [rbx+0xc],0xffffffff
  415177:	mov    r8d,0xffffffff
  41517d:	test   esi,esi
  41517f:	jle    0x4150cd
  415185:	test   BYTE PTR [rbx+0x9],0x10
  415189:	je     0x4150cd
  41518f:	cmp    WORD PTR [rbx+0x20],0x0
  415194:	je     0x415084
  41519a:	lea    ecx,[rsi+0x2]
  41519d:	mov    edx,0x55555556
  4151a2:	mov    eax,ecx
  4151a4:	sar    ecx,0x1f
  4151a7:	imul   edx
  4151a9:	sub    edx,ecx
  4151ab:	cmp    edx,0x1
  4151ae:	jle    0x415084
  4151b4:	test   r8d,r8d
  4151b7:	jle    0x4150cd
  4151bd:	mov    eax,r8d
  4151c0:	sub    eax,edx
  4151c2:	add    eax,0x1
  4151c5:	jmp    0x4151d9
  4151c7:	nop    WORD PTR [rax+rax*1+0x0]
  4151d0:	test   r8d,r8d
  4151d3:	je     0x415344
  4151d9:	sub    r8d,0x1
  4151dd:	cmp    r8d,eax
  4151e0:	jne    0x4151d0
  4151e2:	mov    DWORD PTR [rbx+0xc],r8d
  4151e6:	jmp    0x415084
  4151eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4151f0:	mov    rdx,rbx
  4151f3:	mov    ecx,0x2d
  4151f8:	call   0x414bf0
  4151fd:	jmp    0x4150e9
  415202:	test   r8d,r8d
  415205:	jle    0x415041
  41520b:	sub    r8d,0x1
  41520f:	mov    DWORD PTR [r9+0xc],r8d
  415213:	jmp    0x41504a
  415218:	nop    DWORD PTR [rax+rax*1+0x0]
  415220:	mov    rdx,rbx
  415223:	mov    ecx,0x2b
  415228:	call   0x414bf0
  41522d:	jmp    0x4150e9
  415232:	sub    edx,0x1
  415235:	mov    DWORD PTR [rbx+0xc],edx
  415238:	nop    DWORD PTR [rax+rax*1+0x0]
  415240:	mov    rdx,rbx
  415243:	mov    ecx,0x30
  415248:	call   0x414bf0
  41524d:	mov    eax,DWORD PTR [rbx+0xc]
  415250:	lea    edx,[rax-0x1]
  415253:	test   eax,eax
  415255:	mov    DWORD PTR [rbx+0xc],edx
  415258:	jg     0x415240
  41525a:	test   esi,esi
  41525c:	jg     0x41510b
  415262:	mov    rdx,rbx
  415265:	mov    ecx,0x30
  41526a:	call   0x414bf0
  41526f:	mov    eax,DWORD PTR [rbx+0x10]
  415272:	test   eax,eax
  415274:	jg     0x4152e2
  415276:	test   BYTE PTR [rbx+0x9],0x8
  41527a:	jne    0x4152e2
  41527c:	test   esi,esi
  41527e:	jne    0x415326
  415284:	sub    eax,0x1
  415287:	mov    DWORD PTR [rbx+0x10],eax
  41528a:	add    rsp,0x20
  41528e:	pop    rbx
  41528f:	pop    rsi
  415290:	pop    rdi
  415291:	pop    rbp
  415292:	pop    r12
  415294:	ret    
  415295:	test   ah,0x6
  415298:	je     0x4150c0
  41529e:	jmp    0x4150d8
  4152a3:	mov    rdx,rbx
  4152a6:	mov    ecx,0x20
  4152ab:	call   0x414bf0
  4152b0:	jmp    0x4150e9
  4152b5:	mov    eax,DWORD PTR [rbx+0x8]
  4152b8:	test   ah,0x8
  4152bb:	jne    0x41506e
  4152c1:	test   esi,esi
  4152c3:	jle    0x415089
  4152c9:	test   ah,0x10
  4152cc:	je     0x415089
  4152d2:	cmp    WORD PTR [rbx+0x20],0x0
  4152d7:	jne    0x41519a
  4152dd:	jmp    0x415089
  4152e2:	mov    rcx,rbx
  4152e5:	call   0x414f20
  4152ea:	test   esi,esi
  4152ec:	je     0x41530b
  4152ee:	jmp    0x415323
  4152f0:	movzx  eax,BYTE PTR [rdi]
  4152f3:	mov    ecx,0x30
  4152f8:	test   al,al
  4152fa:	je     0x415303
  4152fc:	add    rdi,0x1
  415300:	movsx  ecx,al
  415303:	mov    rdx,rbx
  415306:	call   0x414bf0
  41530b:	mov    eax,DWORD PTR [rbx+0x10]
  41530e:	lea    edx,[rax-0x1]
  415311:	test   eax,eax
  415313:	mov    DWORD PTR [rbx+0x10],edx
  415316:	jg     0x4152f0
  415318:	add    rsp,0x20
  41531c:	pop    rbx
  41531d:	pop    rsi
  41531e:	pop    rdi
  41531f:	pop    rbp
  415320:	pop    r12
  415322:	ret    
  415323:	mov    eax,DWORD PTR [rbx+0x10]
  415326:	add    eax,esi
  415328:	mov    DWORD PTR [rbx+0x10],eax
  41532b:	nop    DWORD PTR [rax+rax*1+0x0]
  415330:	mov    rdx,rbx
  415333:	mov    ecx,0x30
  415338:	call   0x414bf0
  41533d:	add    esi,0x1
  415340:	jne    0x415330
  415342:	jmp    0x41530b
  415344:	mov    DWORD PTR [rbx+0xc],0x0
  41534b:	jmp    0x4150cd
  415350:	mov    eax,DWORD PTR [rbx+0x10]
  415353:	test   eax,eax
  415355:	jle    0x415361
  415357:	mov    rcx,rbx
  41535a:	call   0x414f20
  41535f:	jmp    0x41530b
  415361:	test   BYTE PTR [rbx+0x9],0x8
  415365:	jne    0x415357
  415367:	jmp    0x415284
  41536c:	nop    DWORD PTR [rax+0x0]
  415370:	push   rsi
  415371:	push   rbx
  415372:	sub    rsp,0x68
  415376:	mov    r8d,DWORD PTR [rdx+0x10]
  41537a:	fld    TBYTE PTR [rcx]
  41537c:	mov    rbx,rdx
  41537f:	test   r8d,r8d
  415382:	js     0x415420
  415388:	lea    rdx,[rsp+0x30]
  41538d:	lea    r9,[rsp+0x4c]
  415392:	mov    ecx,0x3
  415397:	fstp   TBYTE PTR [rsp+0x50]
  41539b:	mov    rax,QWORD PTR [rsp+0x50]
  4153a0:	mov    QWORD PTR [rsp+0x30],rax
  4153a5:	mov    rax,QWORD PTR [rsp+0x58]
  4153aa:	mov    QWORD PTR [rsp+0x38],rax
  4153af:	lea    rax,[rsp+0x48]
  4153b4:	mov    QWORD PTR [rsp+0x20],rax
  4153b9:	call   0x414af0
  4153be:	mov    r8d,DWORD PTR [rsp+0x4c]
  4153c3:	mov    rsi,rax
  4153c6:	cmp    r8d,0xffff8000
  4153cd:	je     0x415432
  4153cf:	mov    ecx,DWORD PTR [rsp+0x48]
  4153d3:	mov    rdx,rax
  4153d6:	mov    r9,rbx
  4153d9:	call   0x415010
  4153de:	mov    eax,DWORD PTR [rbx+0xc]
  4153e1:	lea    edx,[rax-0x1]
  4153e4:	test   eax,eax
  4153e6:	mov    DWORD PTR [rbx+0xc],edx
  4153e9:	jle    0x41540e
  4153eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4153f0:	mov    rdx,rbx
  4153f3:	mov    ecx,0x20
  4153f8:	call   0x414bf0
  4153fd:	mov    r8d,DWORD PTR [rbx+0xc]
  415401:	lea    r9d,[r8-0x1]
  415405:	test   r8d,r8d
  415408:	mov    DWORD PTR [rbx+0xc],r9d
  41540c:	jg     0x4153f0
  41540e:	mov    rcx,rsi
  415411:	call   0x416fe0
  415416:	nop
  415417:	add    rsp,0x68
  41541b:	pop    rbx
  41541c:	pop    rsi
  41541d:	ret    
  41541e:	xchg   ax,ax
  415420:	mov    DWORD PTR [rdx+0x10],0x6
  415427:	mov    r8d,0x6
  41542d:	jmp    0x415388
  415432:	mov    ecx,DWORD PTR [rsp+0x48]
  415436:	mov    r8,rbx
  415439:	mov    rdx,rax
  41543c:	call   0x414e80
  415441:	mov    rcx,rsi
  415444:	call   0x416fe0
  415449:	nop
  41544a:	add    rsp,0x68
  41544e:	pop    rbx
  41544f:	pop    rsi
  415450:	ret    
  415451:	nop    DWORD PTR [rax+rax*1+0x0]
  415456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415460:	push   rbp
  415461:	push   r13
  415463:	push   r12
  415465:	push   rdi
  415466:	push   rsi
  415467:	push   rbx
  415468:	sub    rsp,0x28
  41546c:	lea    rbp,[rsp+0x80]
  415474:	mov    ebx,DWORD PTR [rdx+0x10]
  415477:	mov    r11d,DWORD PTR [rdx+0x8]
  41547b:	mov    r8d,0x0
  415481:	mov    rsi,rdx
  415484:	test   ebx,ebx
  415486:	cmovns r8d,ebx
  41548a:	add    r8d,0x17
  41548e:	test   r11d,0x1000
  415495:	je     0x4154a2
  415497:	cmp    WORD PTR [rdx+0x20],0x0
  41549c:	jne    0x415692
  4154a2:	movsxd r13,DWORD PTR [rsi+0xc]
  4154a6:	movsxd rax,r8d
  4154a9:	cmp    r8d,r13d
  4154ac:	cmovl  rax,r13
  4154b0:	add    rax,0x1e
  4154b4:	and    rax,0xfffffffffffffff0
  4154b8:	call   0x4139f0
  4154bd:	sub    rsp,rax
  4154c0:	test   r11b,0x80
  4154c4:	lea    r12,[rsp+0x20]
  4154c9:	je     0x4154dc
  4154cb:	test   rcx,rcx
  4154ce:	js     0x415720
  4154d4:	and    r11b,0x7f
  4154d8:	mov    DWORD PTR [rsi+0x8],r11d
  4154dc:	test   rcx,rcx
  4154df:	je     0x415728
  4154e5:	mov    r10d,r11d
  4154e8:	mov    r8,r12
  4154eb:	movabs r9,0xcccccccccccccccd
  4154f5:	and    r10d,0x1000
  4154fc:	jmp    0x415533
  4154fe:	xchg   ax,ax
  415500:	cmp    r12,rdi
  415503:	je     0x415530
  415505:	test   r10d,r10d
  415508:	je     0x415530
  41550a:	cmp    WORD PTR [rsi+0x20],0x0
  41550f:	je     0x415530
  415511:	mov    rax,rdi
  415514:	sub    rax,r12
  415517:	cqo    
  415519:	shr    rdx,0x3e
  41551d:	add    rax,rdx
  415520:	and    eax,0x3
  415523:	sub    rax,rdx
  415526:	cmp    rax,0x3
  41552a:	je     0x415670
  415530:	mov    r8,rdi
  415533:	mov    rax,rcx
  415536:	lea    rdi,[r8+0x1]
  41553a:	mul    r9
  41553d:	shr    rdx,0x3
  415541:	lea    rax,[rdx+rdx*4]
  415545:	add    rax,rax
  415548:	sub    rcx,rax
  41554b:	add    ecx,0x30
  41554e:	test   rdx,rdx
  415551:	mov    BYTE PTR [r8],cl
  415554:	mov    rcx,rdx
  415557:	jne    0x415500
  415559:	test   ebx,ebx
  41555b:	jle    0x415595
  41555d:	mov    rax,r12
  415560:	sub    rax,rdi
  415563:	add    eax,ebx
  415565:	test   eax,eax
  415567:	jle    0x415595
  415569:	sub    eax,0x1
  41556c:	mov    rdx,rax
  41556f:	lea    rcx,[rdi+rax*1+0x1]
  415574:	mov    rax,rdi
  415577:	nop    WORD PTR [rax+rax*1+0x0]
  415580:	add    rax,0x1
  415584:	mov    BYTE PTR [rax-0x1],0x30
  415588:	cmp    rax,rcx
  41558b:	jne    0x415580
  41558d:	movsxd rax,edx
  415590:	lea    rdi,[rdi+rax*1+0x1]
  415595:	cmp    r12,rdi
  415598:	jne    0x4155a5
  41559a:	test   ebx,ebx
  41559c:	je     0x4155a5
  41559e:	mov    BYTE PTR [rdi],0x30
  4155a1:	add    rdi,0x1
  4155a5:	test   r13d,r13d
  4155a8:	jle    0x41560e
  4155aa:	mov    rax,r12
  4155ad:	sub    rax,rdi
  4155b0:	add    r13d,eax
  4155b3:	test   r13d,r13d
  4155b6:	mov    DWORD PTR [rsi+0xc],r13d
  4155ba:	jle    0x41560e
  4155bc:	test   r11d,0x1c0
  4155c3:	je     0x4155cd
  4155c5:	sub    r13d,0x1
  4155c9:	mov    DWORD PTR [rsi+0xc],r13d
  4155cd:	test   ebx,ebx
  4155cf:	js     0x4156d0
  4155d5:	test   r11d,0x400
  4155dc:	jne    0x41560e
  4155de:	mov    eax,DWORD PTR [rsi+0xc]
  4155e1:	lea    edx,[rax-0x1]
  4155e4:	test   eax,eax
  4155e6:	mov    DWORD PTR [rsi+0xc],edx
  4155e9:	jle    0x41560e
  4155eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4155f0:	mov    rdx,rsi
  4155f3:	mov    ecx,0x20
  4155f8:	call   0x414bf0
  4155fd:	mov    eax,DWORD PTR [rsi+0xc]
  415600:	lea    edx,[rax-0x1]
  415603:	test   eax,eax
  415605:	mov    DWORD PTR [rsi+0xc],edx
  415608:	jg     0x4155f0
  41560a:	mov    r11d,DWORD PTR [rsi+0x8]
  41560e:	test   r11b,0x80
  415612:	je     0x415680
  415614:	lea    rbx,[rdi+0x1]
  415618:	mov    BYTE PTR [rdi],0x2d
  41561b:	cmp    r12,rbx
  41561e:	jae    0x41564e
  415620:	sub    rbx,0x1
  415624:	movsx  ecx,BYTE PTR [rbx]
  415627:	mov    rdx,rsi
  41562a:	call   0x414bf0
  41562f:	cmp    rbx,r12
  415632:	jne    0x415620
  415634:	mov    eax,DWORD PTR [rsi+0xc]
  415637:	lea    edx,[rax-0x1]
  41563a:	test   eax,eax
  41563c:	mov    DWORD PTR [rsi+0xc],edx
  41563f:	jle    0x41565b
  415641:	mov    rdx,rsi
  415644:	mov    ecx,0x20
  415649:	call   0x414bf0
  41564e:	mov    eax,DWORD PTR [rsi+0xc]
  415651:	lea    edx,[rax-0x1]
  415654:	test   eax,eax
  415656:	mov    DWORD PTR [rsi+0xc],edx
  415659:	jg     0x415641
  41565b:	lea    rsp,[rbp-0x58]
  41565f:	pop    rbx
  415660:	pop    rsi
  415661:	pop    rdi
  415662:	pop    r12
  415664:	pop    r13
  415666:	pop    rbp
  415667:	ret    
  415668:	nop    DWORD PTR [rax+rax*1+0x0]
  415670:	lea    rdi,[r8+0x2]
  415674:	mov    BYTE PTR [r8+0x1],0x2c
  415679:	jmp    0x415530
  41567e:	xchg   ax,ax
  415680:	test   r11d,0x100
  415687:	je     0x4156b0
  415689:	lea    rbx,[rdi+0x1]
  41568d:	mov    BYTE PTR [rdi],0x2b
  415690:	jmp    0x41561b
  415692:	mov    eax,r8d
  415695:	mov    edx,0x55555556
  41569a:	imul   edx
  41569c:	mov    eax,r8d
  41569f:	sar    eax,0x1f
  4156a2:	sub    edx,eax
  4156a4:	add    r8d,edx
  4156a7:	jmp    0x4154a2
  4156ac:	nop    DWORD PTR [rax+0x0]
  4156b0:	and    r11d,0x40
  4156b4:	mov    rbx,rdi
  4156b7:	je     0x41561b
  4156bd:	add    rbx,0x1
  4156c1:	mov    BYTE PTR [rdi],0x20
  4156c4:	jmp    0x41561b
  4156c9:	nop    DWORD PTR [rax+0x0]
  4156d0:	mov    eax,r11d
  4156d3:	and    eax,0x600
  4156d8:	cmp    eax,0x200
  4156dd:	jne    0x4155d5
  4156e3:	mov    eax,DWORD PTR [rsi+0xc]
  4156e6:	lea    ecx,[rax-0x1]
  4156e9:	test   eax,eax
  4156eb:	mov    DWORD PTR [rsi+0xc],ecx
  4156ee:	jle    0x41560e
  4156f4:	lea    rdx,[rdi+rcx*1+0x1]
  4156f9:	mov    rax,rdi
  4156fc:	nop    DWORD PTR [rax+0x0]
  415700:	add    rax,0x1
  415704:	mov    BYTE PTR [rax-0x1],0x30
  415708:	cmp    rax,rdx
  41570b:	jne    0x415700
  41570d:	lea    rdi,[rdi+rcx*1+0x1]
  415712:	mov    DWORD PTR [rsi+0xc],0xffffffff
  415719:	jmp    0x41560e
  41571e:	xchg   ax,ax
  415720:	neg    rcx
  415723:	jmp    0x4154dc
  415728:	mov    rdi,r12
  41572b:	jmp    0x415559
  415730:	push   rdi
  415731:	push   rsi
  415732:	push   rbx
  415733:	sub    rsp,0x20
  415737:	mov    rsi,r9
  41573a:	lea    r9d,[r8-0x1]
  41573e:	mov    r8d,0x66666667
  415744:	mov    r10,rdx
  415747:	mov    eax,r9d
  41574a:	movsxd rbx,r9d
  41574d:	sar    r9d,0x1f
  415751:	imul   r8d
  415754:	sar    edx,0x2
  415757:	mov    r8d,edx
  41575a:	sub    r8d,r9d
  41575d:	mov    r9d,0x1
  415763:	je     0x41578b
  415765:	mov    r11d,0x66666667
  41576b:	nop    DWORD PTR [rax+rax*1+0x0]
  415770:	mov    eax,r8d
  415773:	sar    r8d,0x1f
  415777:	add    r9d,0x1
  41577b:	imul   r11d
  41577e:	mov    eax,edx
  415780:	sar    eax,0x2
  415783:	sub    eax,r8d
  415786:	mov    r8d,eax
  415789:	jne    0x415770
  41578b:	mov    edi,DWORD PTR [rsi+0x2c]
  41578e:	mov    eax,DWORD PTR [rsi+0xc]
  415791:	cmp    r9d,edi
  415794:	cmovge edi,r9d
  415798:	lea    edx,[rdi+0x2]
  41579b:	cmp    eax,edx
  41579d:	jg     0x4157f2
  41579f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  4157a6:	mov    r9,rsi
  4157a9:	mov    rdx,r10
  4157ac:	mov    r8d,0x1
  4157b2:	call   0x415010
  4157b7:	mov    ecx,DWORD PTR [rsi+0x8]
  4157ba:	mov    eax,DWORD PTR [rsi+0x2c]
  4157bd:	mov    rdx,rsi
  4157c0:	mov    DWORD PTR [rsi+0x10],eax
  4157c3:	mov    eax,ecx
  4157c5:	and    ecx,0x20
  4157c8:	or     eax,0x1c0
  4157cd:	or     ecx,0x45
  4157d0:	mov    DWORD PTR [rsi+0x8],eax
  4157d3:	call   0x414bf0
  4157d8:	lea    r9d,[rdi+0x1]
  4157dc:	add    DWORD PTR [rsi+0xc],r9d
  4157e0:	mov    rdx,rsi
  4157e3:	mov    rcx,rbx
  4157e6:	add    rsp,0x20
  4157ea:	pop    rbx
  4157eb:	pop    rsi
  4157ec:	pop    rdi
  4157ed:	jmp    0x415460
  4157f2:	sub    eax,edx
  4157f4:	mov    DWORD PTR [rsi+0xc],eax
  4157f7:	jmp    0x4157a6
  4157f9:	nop    DWORD PTR [rax+0x0]
  415800:	push   rsi
  415801:	push   rbx
  415802:	sub    rsp,0x68
  415806:	mov    eax,DWORD PTR [rdx+0x10]
  415809:	fld    TBYTE PTR [rcx]
  41580b:	mov    rbx,rdx
  41580e:	test   eax,eax
  415810:	lea    r8d,[rax+0x1]
  415814:	js     0x415880
  415816:	lea    rdx,[rsp+0x30]
  41581b:	lea    r9,[rsp+0x4c]
  415820:	mov    ecx,0x2
  415825:	fstp   TBYTE PTR [rsp+0x50]
  415829:	mov    rax,QWORD PTR [rsp+0x50]
  41582e:	mov    QWORD PTR [rsp+0x30],rax
  415833:	mov    rax,QWORD PTR [rsp+0x58]
  415838:	mov    QWORD PTR [rsp+0x38],rax
  41583d:	lea    rax,[rsp+0x48]
  415842:	mov    QWORD PTR [rsp+0x20],rax
  415847:	call   0x414af0
  41584c:	mov    r8d,DWORD PTR [rsp+0x4c]
  415851:	mov    rsi,rax
  415854:	cmp    r8d,0xffff8000
  41585b:	je     0x415890
  41585d:	mov    ecx,DWORD PTR [rsp+0x48]
  415861:	mov    r9,rbx
  415864:	mov    rdx,rax
  415867:	call   0x415730
  41586c:	mov    rcx,rsi
  41586f:	call   0x416fe0
  415874:	nop
  415875:	add    rsp,0x68
  415879:	pop    rbx
  41587a:	pop    rsi
  41587b:	ret    
  41587c:	nop    DWORD PTR [rax+0x0]
  415880:	mov    DWORD PTR [rdx+0x10],0x6
  415887:	mov    r8d,0x7
  41588d:	jmp    0x415816
  41588f:	nop
  415890:	mov    ecx,DWORD PTR [rsp+0x48]
  415894:	mov    r8,rbx
  415897:	mov    rdx,rax
  41589a:	call   0x414e80
  41589f:	mov    rcx,rsi
  4158a2:	call   0x416fe0
  4158a7:	nop
  4158a8:	add    rsp,0x68
  4158ac:	pop    rbx
  4158ad:	pop    rsi
  4158ae:	ret    
  4158af:	nop
  4158b0:	push   rsi
  4158b1:	push   rbx
  4158b2:	sub    rsp,0x78
  4158b6:	mov    r8d,DWORD PTR [rdx+0x10]
  4158ba:	fld    TBYTE PTR [rcx]
  4158bc:	mov    rbx,rdx
  4158bf:	test   r8d,r8d
  4158c2:	js     0x415a00
  4158c8:	je     0x4159e0
  4158ce:	lea    rdx,[rsp+0x40]
  4158d3:	lea    r9,[rsp+0x5c]
  4158d8:	mov    ecx,0x2
  4158dd:	fstp   TBYTE PTR [rsp+0x60]
  4158e1:	mov    rax,QWORD PTR [rsp+0x60]
  4158e6:	mov    QWORD PTR [rsp+0x40],rax
  4158eb:	mov    rax,QWORD PTR [rsp+0x68]
  4158f0:	mov    QWORD PTR [rsp+0x48],rax
  4158f5:	lea    rax,[rsp+0x58]
  4158fa:	mov    QWORD PTR [rsp+0x20],rax
  4158ff:	call   0x414af0
  415904:	mov    r8d,DWORD PTR [rsp+0x5c]
  415909:	mov    rsi,rax
  41590c:	cmp    r8d,0xffff8000
  415913:	je     0x415a20
  415919:	cmp    r8d,0xfffffffd
  41591d:	jl     0x4159a0
  415923:	mov    eax,DWORD PTR [rbx+0x10]
  415926:	cmp    r8d,eax
  415929:	jg     0x4159a0
  41592b:	test   BYTE PTR [rbx+0x9],0x8
  41592f:	jne    0x415a12
  415935:	mov    rcx,rsi
  415938:	mov    DWORD PTR [rsp+0x3c],r8d
  41593d:	call   0x419840
  415942:	mov    r8d,DWORD PTR [rsp+0x3c]
  415947:	sub    eax,r8d
  41594a:	test   eax,eax
  41594c:	mov    DWORD PTR [rbx+0x10],eax
  41594f:	js     0x415a31
  415955:	mov    ecx,DWORD PTR [rsp+0x58]
  415959:	mov    rdx,rsi
  41595c:	mov    r9,rbx
  41595f:	call   0x415010
  415964:	mov    eax,DWORD PTR [rbx+0xc]
  415967:	lea    edx,[rax-0x1]
  41596a:	test   eax,eax
  41596c:	mov    DWORD PTR [rbx+0xc],edx
  41596f:	jle    0x4159cd
  415971:	mov    rdx,rbx
  415974:	mov    ecx,0x20
  415979:	call   0x414bf0
  41597e:	mov    r8d,DWORD PTR [rbx+0xc]
  415982:	lea    r9d,[r8-0x1]
  415986:	test   r8d,r8d
  415989:	mov    DWORD PTR [rbx+0xc],r9d
  41598d:	jg     0x415971
  41598f:	mov    rcx,rsi
  415992:	call   0x416fe0
  415997:	nop
  415998:	add    rsp,0x78
  41599c:	pop    rbx
  41599d:	pop    rsi
  41599e:	ret    
  41599f:	nop
  4159a0:	test   BYTE PTR [rbx+0x9],0x8
  4159a4:	jne    0x4159f2
  4159a6:	mov    rcx,rsi
  4159a9:	mov    DWORD PTR [rsp+0x3c],r8d
  4159ae:	call   0x419840
  4159b3:	mov    r8d,DWORD PTR [rsp+0x3c]
  4159b8:	sub    eax,0x1
  4159bb:	mov    DWORD PTR [rbx+0x10],eax
  4159be:	mov    ecx,DWORD PTR [rsp+0x58]
  4159c2:	mov    r9,rbx
  4159c5:	mov    rdx,rsi
  4159c8:	call   0x415730
  4159cd:	mov    rcx,rsi
  4159d0:	call   0x416fe0
  4159d5:	nop
  4159d6:	add    rsp,0x78
  4159da:	pop    rbx
  4159db:	pop    rsi
  4159dc:	ret    
  4159dd:	nop    DWORD PTR [rax]
  4159e0:	mov    DWORD PTR [rdx+0x10],0x1
  4159e7:	mov    r8d,0x1
  4159ed:	jmp    0x4158ce
  4159f2:	sub    DWORD PTR [rbx+0x10],0x1
  4159f6:	jmp    0x4159be
  4159f8:	nop    DWORD PTR [rax+rax*1+0x0]
  415a00:	mov    DWORD PTR [rdx+0x10],0x6
  415a07:	mov    r8d,0x6
  415a0d:	jmp    0x4158ce
  415a12:	sub    eax,r8d
  415a15:	mov    DWORD PTR [rbx+0x10],eax
  415a18:	jmp    0x415955
  415a1d:	nop    DWORD PTR [rax]
  415a20:	mov    ecx,DWORD PTR [rsp+0x58]
  415a24:	mov    r8,rbx
  415a27:	mov    rdx,rax
  415a2a:	call   0x414e80
  415a2f:	jmp    0x4159cd
  415a31:	mov    edx,DWORD PTR [rbx+0xc]
  415a34:	test   edx,edx
  415a36:	jle    0x415955
  415a3c:	add    eax,edx
  415a3e:	mov    DWORD PTR [rbx+0xc],eax
  415a41:	jmp    0x415955
  415a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415a50:	push   rbp
  415a51:	push   r14
  415a53:	push   r13
  415a55:	push   r12
  415a57:	push   rdi
  415a58:	push   rsi
  415a59:	push   rbx
  415a5a:	mov    rbp,rsp
  415a5d:	sub    rsp,0x20
  415a61:	mov    r10d,0x12
  415a67:	mov    eax,0x18
  415a6c:	cmp    ecx,0x6f
  415a6f:	mov    rbx,r8
  415a72:	mov    r8d,DWORD PTR [r8+0x10]
  415a76:	mov    r11d,ecx
  415a79:	setne  cl
  415a7c:	mov    edi,DWORD PTR [rbx+0x8]
  415a7f:	movzx  ecx,cl
  415a82:	cmovne eax,r10d
  415a86:	mov    r10b,0x0
  415a89:	add    ecx,0x3
  415a8c:	test   r8d,r8d
  415a8f:	mov    r9,rdx
  415a92:	cmovns r10d,r8d
  415a96:	add    r10d,eax
  415a99:	test   edi,0x1000
  415a9f:	je     0x415aac
  415aa1:	cmp    WORD PTR [rbx+0x20],0x0
  415aa6:	jne    0x415c73
  415aac:	movsxd r12,DWORD PTR [rbx+0xc]
  415ab0:	movsxd rax,r10d
  415ab3:	cmp    r10d,r12d
  415ab6:	cmovl  rax,r12
  415aba:	add    rax,0x1e
  415abe:	and    rax,0xfffffffffffffff0
  415ac2:	call   0x4139f0
  415ac7:	xor    edx,edx
  415ac9:	sub    rsp,rax
  415acc:	cmp    r11d,0x6f
  415ad0:	lea    rsi,[rsp+0x20]
  415ad5:	setne  dl
  415ad8:	test   r9,r9
  415adb:	lea    edx,[rdx*8+0x7]
  415ae2:	mov    r10,rsi
  415ae5:	je     0x415d92
  415aeb:	mov    r13d,r11d
  415aee:	and    r13d,0x20
  415af2:	jmp    0x415b00
  415af4:	shr    r9,cl
  415af7:	mov    BYTE PTR [r10-0x1],r14b
  415afb:	test   r9,r9
  415afe:	je     0x415b25
  415b00:	mov    eax,edx
  415b02:	add    r10,0x1
  415b06:	and    eax,r9d
  415b09:	lea    r14d,[rax+0x30]
  415b0d:	cmp    r14b,0x39
  415b11:	jbe    0x415af4
  415b13:	add    eax,0x37
  415b16:	shr    r9,cl
  415b19:	or     eax,r13d
  415b1c:	test   r9,r9
  415b1f:	mov    BYTE PTR [r10-0x1],al
  415b23:	jne    0x415b00
  415b25:	cmp    rsi,r10
  415b28:	je     0x415d92
  415b2e:	test   r8d,r8d
  415b31:	jle    0x415cf2
  415b37:	mov    rax,rsi
  415b3a:	sub    rax,r10
  415b3d:	add    eax,r8d
  415b40:	test   eax,eax
  415b42:	jle    0x415cf2
  415b48:	sub    eax,0x1
  415b4b:	mov    rdx,rax
  415b4e:	lea    rcx,[r10+rax*1+0x1]
  415b53:	mov    rax,r10
  415b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415b60:	add    rax,0x1
  415b64:	mov    BYTE PTR [rax-0x1],0x30
  415b68:	cmp    rax,rcx
  415b6b:	jne    0x415b60
  415b6d:	movsxd rax,edx
  415b70:	lea    r10,[r10+rax*1+0x1]
  415b75:	cmp    rsi,r10
  415b78:	jne    0x415b90
  415b7a:	test   r8d,r8d
  415b7d:	je     0x415b90
  415b7f:	mov    BYTE PTR [r10],0x30
  415b83:	add    r10,0x1
  415b87:	nop    WORD PTR [rax+rax*1+0x0]
  415b90:	mov    rax,r10
  415b93:	sub    rax,rsi
  415b96:	cmp    r12d,eax
  415b99:	jle    0x415cc0
  415b9f:	sub    r12d,eax
  415ba2:	test   r12d,r12d
  415ba5:	mov    DWORD PTR [rbx+0xc],r12d
  415ba9:	jle    0x415df7
  415baf:	cmp    r11d,0x6f
  415bb3:	mov    edx,DWORD PTR [rbx+0x8]
  415bb6:	je     0x415d80
  415bbc:	test   dh,0x8
  415bbf:	je     0x415d40
  415bc5:	lea    r13d,[r12-0x2]
  415bca:	test   r13d,r13d
  415bcd:	jle    0x415bd8
  415bcf:	test   r8d,r8d
  415bd2:	js     0x415c8d
  415bd8:	test   r13d,r13d
  415bdb:	mov    BYTE PTR [r10],r11b
  415bde:	lea    rdi,[r10+0x2]
  415be2:	mov    BYTE PTR [r10+0x1],0x30
  415be7:	jle    0x415ce8
  415bed:	and    dh,0x4
  415bf0:	jne    0x415d13
  415bf6:	lea    r14d,[r13-0x1]
  415bfa:	mov    r12d,r14d
  415bfd:	nop    DWORD PTR [rax]
  415c00:	sub    r12d,0x1
  415c04:	mov    rdx,rbx
  415c07:	mov    ecx,0x20
  415c0c:	call   0x414bf0
  415c11:	lea    eax,[r12+0x1]
  415c16:	test   eax,eax
  415c18:	jg     0x415c00
  415c1a:	test   r14d,r14d
  415c1d:	lea    r13d,[r14-0x1]
  415c21:	mov    r12d,0x0
  415c27:	cmovns r12d,r14d
  415c2b:	sub    r13d,r12d
  415c2e:	cmp    rsi,rdi
  415c31:	jb     0x415d20
  415c37:	nop    WORD PTR [rax+rax*1+0x0]
  415c40:	test   r13d,r13d
  415c43:	lea    esi,[r13-0x1]
  415c47:	jle    0x415c65
  415c49:	nop    DWORD PTR [rax+0x0]
  415c50:	mov    rdx,rbx
  415c53:	mov    ecx,0x20
  415c58:	sub    esi,0x1
  415c5b:	call   0x414bf0
  415c60:	cmp    esi,0xffffffff
  415c63:	jne    0x415c50
  415c65:	mov    rsp,rbp
  415c68:	pop    rbx
  415c69:	pop    rsi
  415c6a:	pop    rdi
  415c6b:	pop    r12
  415c6d:	pop    r13
  415c6f:	pop    r14
  415c71:	pop    rbp
  415c72:	ret    
  415c73:	mov    eax,r10d
  415c76:	mov    edx,0x55555556
  415c7b:	imul   edx
  415c7d:	mov    eax,r10d
  415c80:	sar    eax,0x1f
  415c83:	sub    edx,eax
  415c85:	add    r10d,edx
  415c88:	jmp    0x415aac
  415c8d:	mov    eax,edx
  415c8f:	and    eax,0x600
  415c94:	cmp    eax,0x200
  415c99:	je     0x415da0
  415c9f:	mov    r12d,r13d
  415ca2:	test   dh,0x8
  415ca5:	mov    r13d,r12d
  415ca8:	mov    rdi,r10
  415cab:	je     0x415bed
  415cb1:	mov    r13d,r12d
  415cb4:	jmp    0x415bd8
  415cb9:	nop    DWORD PTR [rax+0x0]
  415cc0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  415cc7:	mov    r13d,0xffffffff
  415ccd:	cmp    r11d,0x6f
  415cd1:	je     0x415ce5
  415cd3:	mov    edx,DWORD PTR [rbx+0x8]
  415cd6:	mov    eax,edx
  415cd8:	and    eax,0x800
  415cdd:	test   eax,eax
  415cdf:	jne    0x415bd8
  415ce5:	mov    rdi,r10
  415ce8:	cmp    rsi,rdi
  415ceb:	jb     0x415d20
  415ced:	jmp    0x415c65
  415cf2:	cmp    r11d,0x6f
  415cf6:	jne    0x415b75
  415cfc:	test   BYTE PTR [rbx+0x9],0x8
  415d00:	je     0x415b75
  415d06:	mov    BYTE PTR [r10],0x30
  415d0a:	add    r10,0x1
  415d0e:	jmp    0x415b75
  415d13:	cmp    rsi,rdi
  415d16:	jae    0x415dff
  415d1c:	nop    DWORD PTR [rax+0x0]
  415d20:	sub    rdi,0x1
  415d24:	movsx  ecx,BYTE PTR [rdi]
  415d27:	mov    rdx,rbx
  415d2a:	call   0x414bf0
  415d2f:	cmp    rsi,rdi
  415d32:	jb     0x415d20
  415d34:	jmp    0x415c40
  415d39:	nop    DWORD PTR [rax+0x0]
  415d40:	test   r8d,r8d
  415d43:	jns    0x415ca2
  415d49:	mov    eax,edx
  415d4b:	and    eax,0x600
  415d50:	cmp    eax,0x200
  415d55:	je     0x415dee
  415d5b:	cmp    r11d,0x6f
  415d5f:	jne    0x415ca2
  415d65:	and    dh,0x4
  415d68:	jne    0x415d8a
  415d6a:	lea    r14d,[r12-0x1]
  415d6f:	mov    rdi,r10
  415d72:	jmp    0x415bfa
  415d77:	nop    WORD PTR [rax+rax*1+0x0]
  415d80:	test   r8d,r8d
  415d83:	js     0x415d49
  415d85:	and    dh,0x4
  415d88:	je     0x415d6a
  415d8a:	mov    rdi,r10
  415d8d:	mov    r13d,r12d
  415d90:	jmp    0x415d2f
  415d92:	and    edi,0xfffff7ff
  415d98:	mov    DWORD PTR [rbx+0x8],edi
  415d9b:	jmp    0x415b2e
  415da0:	lea    r8d,[r12-0x3]
  415da5:	mov    r12d,r8d
  415da8:	mov    eax,r12d
  415dab:	lea    rcx,[r10+rax*1+0x1]
  415db0:	mov    rax,r10
  415db3:	add    rax,0x1
  415db7:	mov    BYTE PTR [rax-0x1],0x30
  415dbb:	cmp    rax,rcx
  415dbe:	jne    0x415db3
  415dc0:	movsxd rax,r8d
  415dc3:	cmp    r11d,0x6f
  415dc7:	lea    r10,[r10+rax*1+0x1]
  415dcc:	je     0x415de0
  415dce:	mov    eax,edx
  415dd0:	mov    r13d,0xffffffff
  415dd6:	and    eax,0x800
  415ddb:	jmp    0x415cdd
  415de0:	mov    rdi,r10
  415de3:	mov    r13d,0xffffffff
  415de9:	jmp    0x415ce8
  415dee:	sub    r12d,0x1
  415df2:	mov    r8d,r12d
  415df5:	jmp    0x415da8
  415df7:	mov    r13d,r12d
  415dfa:	jmp    0x415ccd
  415dff:	lea    esi,[r13-0x1]
  415e03:	jmp    0x415c50
  415e08:	nop    DWORD PTR [rax+rax*1+0x0]
  415e10:	push   r13
  415e12:	push   r12
  415e14:	push   rbp
  415e15:	push   rdi
  415e16:	push   rsi
  415e17:	push   rbx
  415e18:	sub    rsp,0x68
  415e1c:	mov    r9,QWORD PTR [rcx]
  415e1f:	mov    r10d,DWORD PTR [rcx+0x8]
  415e23:	mov    rbx,rdx
  415e26:	mov    rax,r9
  415e29:	mov    QWORD PTR [rsp+0x30],r9
  415e2e:	mov    DWORD PTR [rsp+0x38],r10d
  415e33:	shr    rax,0x20
  415e37:	mov    r8,r10
  415e3a:	and    eax,0x7fffffff
  415e3f:	or     r9d,eax
  415e42:	lea    eax,[r10+r10*1]
  415e46:	mov    edx,r9d
  415e49:	neg    edx
  415e4b:	and    eax,0xfffe
  415e50:	or     edx,r9d
  415e53:	shr    edx,0x1f
  415e56:	or     edx,eax
  415e58:	mov    eax,0xfffe
  415e5d:	sub    eax,edx
  415e5f:	sar    eax,0x10
  415e62:	test   eax,eax
  415e64:	jne    0x416250
  415e6a:	movzx  esi,WORD PTR [rsp+0x38]
  415e6f:	mov    ecx,esi
  415e71:	and    ecx,0x8000
  415e77:	je     0x415e80
  415e79:	or     DWORD PTR [rbx+0x8],0x80
  415e80:	and    r8w,0x7fff
  415e86:	cmp    r8w,0x7fff
  415e8c:	jne    0x415eb0
  415e8e:	test   r9d,r9d
  415e91:	jne    0x415eb0
  415e93:	lea    rdx,[rip+0xf7da]        # 0x425674
  415e9a:	mov    r8,rbx
  415e9d:	call   0x414e80
  415ea2:	jmp    0x416225
  415ea7:	nop    WORD PTR [rax+rax*1+0x0]
  415eb0:	and    si,0x7fff
  415eb5:	jne    0x415fe0
  415ebb:	mov    rax,QWORD PTR [rsp+0x30]
  415ec0:	test   rax,rax
  415ec3:	jne    0x41626f
  415ec9:	mov    r9d,DWORD PTR [rbx+0x10]
  415ecd:	cmp    r9d,0xe
  415ed1:	jbe    0x4162ec
  415ed7:	xor    esi,esi
  415ed9:	mov    r8d,DWORD PTR [rbx+0x8]
  415edd:	lea    rbp,[rsp+0x40]
  415ee2:	test   r9d,r9d
  415ee5:	jle    0x4162fc
  415eeb:	lea    rax,[rbp+0x1]
  415eef:	mov    BYTE PTR [rsp+0x40],0x2e
  415ef4:	mov    r10d,DWORD PTR [rbx+0xc]
  415ef8:	lea    rdi,[rax+0x1]
  415efc:	mov    BYTE PTR [rax],0x30
  415eff:	mov    r12d,0x2
  415f05:	test   r10d,r10d
  415f08:	jg     0x41610c
  415f0e:	xchg   ax,ax
  415f10:	test   r8b,0x80
  415f14:	jne    0x4161d0
  415f1a:	test   r8d,0x100
  415f21:	jne    0x4162c0
  415f27:	and    r8d,0x40
  415f2b:	jne    0x4162d2
  415f31:	mov    rdx,rbx
  415f34:	mov    ecx,0x30
  415f39:	call   0x414bf0
  415f3e:	mov    ecx,DWORD PTR [rbx+0x8]
  415f41:	mov    rdx,rbx
  415f44:	and    ecx,0x20
  415f47:	or     ecx,0x58
  415f4a:	call   0x414bf0
  415f4f:	mov    eax,DWORD PTR [rbx+0xc]
  415f52:	test   eax,eax
  415f54:	jle    0x415f7c
  415f56:	test   BYTE PTR [rbx+0x9],0x2
  415f5a:	je     0x415f7c
  415f5c:	sub    eax,0x1
  415f5f:	mov    DWORD PTR [rbx+0xc],eax
  415f62:	mov    rdx,rbx
  415f65:	mov    ecx,0x30
  415f6a:	call   0x414bf0
  415f6f:	mov    eax,DWORD PTR [rbx+0xc]
  415f72:	lea    edx,[rax-0x1]
  415f75:	test   eax,eax
  415f77:	mov    DWORD PTR [rbx+0xc],edx
  415f7a:	jg     0x415f62
  415f7c:	cmp    rdi,rbp
  415f7f:	lea    r13,[rsp+0x2e]
  415f84:	ja     0x415fb9
  415f86:	jmp    0x4161ef
  415f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  415f90:	movzx  eax,WORD PTR [rbx+0x20]
  415f94:	test   ax,ax
  415f97:	mov    WORD PTR [rsp+0x2e],ax
  415f9c:	je     0x415fb0
  415f9e:	mov    r8,rbx
  415fa1:	mov    edx,0x1
  415fa6:	mov    rcx,r13
  415fa9:	call   0x414c50
  415fae:	xchg   ax,ax
  415fb0:	cmp    rdi,rbp
  415fb3:	je     0x4161ef
  415fb9:	sub    rdi,0x1
  415fbd:	movsx  ecx,BYTE PTR [rdi]
  415fc0:	cmp    ecx,0x2e
  415fc3:	je     0x416232
  415fc9:	cmp    ecx,0x2c
  415fcc:	je     0x415f90
  415fce:	mov    rdx,rbx
  415fd1:	call   0x414bf0
  415fd6:	jmp    0x415fb0
  415fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  415fe0:	mov    r9d,DWORD PTR [rbx+0x10]
  415fe4:	sub    si,0x3fff
  415fe9:	mov    rax,QWORD PTR [rsp+0x30]
  415fee:	cmp    r9d,0xe
  415ff2:	ja     0x41629d
  415ff8:	test   rax,rax
  415ffb:	js     0x416005
  415ffd:	nop    DWORD PTR [rax]
  416000:	add    rax,rax
  416003:	jns    0x416000
  416005:	mov    ecx,0xe
  41600a:	mov    edx,0x4
  41600f:	shr    rax,1
  416012:	sub    ecx,r9d
  416015:	shl    ecx,0x2
  416018:	shl    rdx,cl
  41601b:	add    rax,rdx
  41601e:	js     0x4162e4
  416024:	add    rax,rax
  416027:	mov    ecx,0xf
  41602c:	sub    ecx,r9d
  41602f:	shl    ecx,0x2
  416032:	shr    rax,cl
  416035:	mov    r8d,DWORD PTR [rbx+0x8]
  416039:	lea    rbp,[rsp+0x40]
  41603e:	mov    rdi,rbp
  416041:	mov    r11d,r8d
  416044:	mov    r10d,r8d
  416047:	and    r11d,0x800
  41604e:	and    r10d,0x20
  416052:	jmp    0x416083
  416054:	mov    ecx,DWORD PTR [rbx+0x10]
  416057:	test   ecx,ecx
  416059:	jle    0x416061
  41605b:	sub    ecx,0x1
  41605e:	mov    DWORD PTR [rbx+0x10],ecx
  416061:	shr    rax,0x4
  416065:	mov    r9,rdi
  416068:	test   edx,edx
  41606a:	je     0x4160d4
  41606c:	cmp    edx,0x9
  41606f:	lea    rdi,[r9+0x1]
  416073:	jle    0x4160e7
  416075:	add    edx,0x37
  416078:	or     edx,r10d
  41607b:	mov    BYTE PTR [r9],dl
  41607e:	test   rax,rax
  416081:	je     0x4160f0
  416083:	mov    edx,eax
  416085:	and    edx,0xf
  416088:	cmp    edx,eax
  41608a:	jne    0x416054
  41608c:	cmp    rdi,rbp
  41608f:	ja     0x4160a2
  416091:	test   r11d,r11d
  416094:	jne    0x4160a2
  416096:	mov    r12d,DWORD PTR [rbx+0x10]
  41609a:	mov    r9,rdi
  41609d:	test   r12d,r12d
  4160a0:	jle    0x4160a9
  4160a2:	lea    r9,[rdi+0x1]
  4160a6:	mov    BYTE PTR [rdi],0x2e
  4160a9:	cmp    rax,0x1
  4160ad:	jbe    0x4162b9
  4160b3:	lea    ecx,[rsi-0x1]
  4160b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4160c0:	shr    rax,1
  4160c3:	mov    esi,ecx
  4160c5:	cmp    rax,0x1
  4160c9:	lea    ecx,[rsi-0x1]
  4160cc:	jne    0x4160c0
  4160ce:	xor    al,al
  4160d0:	test   edx,edx
  4160d2:	jne    0x41606c
  4160d4:	cmp    r9,rbp
  4160d7:	ja     0x4160e3
  4160d9:	mov    ecx,DWORD PTR [rbx+0x10]
  4160dc:	mov    rdi,r9
  4160df:	test   ecx,ecx
  4160e1:	js     0x41607e
  4160e3:	lea    rdi,[r9+0x1]
  4160e7:	add    edx,0x30
  4160ea:	jmp    0x41607b
  4160ec:	nop    DWORD PTR [rax+0x0]
  4160f0:	cmp    rdi,rbp
  4160f3:	je     0x4162f3
  4160f9:	mov    r10d,DWORD PTR [rbx+0xc]
  4160fd:	mov    r12d,0x2
  416103:	test   r10d,r10d
  416106:	jle    0x415f10
  41610c:	mov    edx,DWORD PTR [rbx+0x10]
  41610f:	mov    rax,rdi
  416112:	movsx  r11d,si
  416116:	sub    rax,rbp
  416119:	lea    ecx,[rdx+rax*1]
  41611c:	test   edx,edx
  41611e:	mov    edx,r8d
  416121:	cmovg  eax,ecx
  416124:	and    edx,0x1c0
  41612a:	mov    ecx,0x66666667
  41612f:	cmp    edx,0x1
  416132:	sbb    edx,edx
  416134:	lea    r9d,[rax+rdx*1+0x6]
  416139:	mov    eax,r11d
  41613c:	imul   ecx
  41613e:	mov    eax,r11d
  416141:	sar    eax,0x1f
  416144:	mov    ecx,edx
  416146:	sar    ecx,0x2
  416149:	sub    ecx,eax
  41614b:	je     0x416170
  41614d:	mov    r11d,0x66666667
  416153:	mov    eax,ecx
  416155:	sar    ecx,0x1f
  416158:	add    r9d,0x1
  41615c:	imul   r11d
  41615f:	add    r12d,0x1
  416163:	sar    edx,0x2
  416166:	sub    edx,ecx
  416168:	mov    ecx,edx
  41616a:	jne    0x416153
  41616c:	movsx  r12d,r12w
  416170:	cmp    r10d,r9d
  416173:	jle    0x416240
  416179:	sub    r10d,r9d
  41617c:	test   r8d,0x600
  416183:	jne    0x4162b0
  416189:	lea    eax,[r10-0x1]
  41618d:	test   r10d,r10d
  416190:	mov    DWORD PTR [rbx+0xc],eax
  416193:	jle    0x415f10
  416199:	nop    DWORD PTR [rax+0x0]
  4161a0:	mov    rdx,rbx
  4161a3:	mov    ecx,0x20
  4161a8:	call   0x414bf0
  4161ad:	mov    eax,DWORD PTR [rbx+0xc]
  4161b0:	lea    edx,[rax-0x1]
  4161b3:	test   eax,eax
  4161b5:	mov    DWORD PTR [rbx+0xc],edx
  4161b8:	jg     0x4161a0
  4161ba:	mov    r8d,DWORD PTR [rbx+0x8]
  4161be:	test   r8b,0x80
  4161c2:	je     0x415f1a
  4161c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4161d0:	mov    rdx,rbx
  4161d3:	mov    ecx,0x2d
  4161d8:	call   0x414bf0
  4161dd:	jmp    0x415f31
  4161e2:	mov    rdx,rbx
  4161e5:	mov    ecx,0x30
  4161ea:	call   0x414bf0
  4161ef:	mov    eax,DWORD PTR [rbx+0x10]
  4161f2:	lea    edx,[rax-0x1]
  4161f5:	test   eax,eax
  4161f7:	mov    DWORD PTR [rbx+0x10],edx
  4161fa:	jg     0x4161e2
  4161fc:	mov    ecx,DWORD PTR [rbx+0x8]
  4161ff:	mov    rdx,rbx
  416202:	and    ecx,0x20
  416205:	or     ecx,0x50
  416208:	call   0x414bf0
  41620d:	add    DWORD PTR [rbx+0xc],r12d
  416211:	or     DWORD PTR [rbx+0x8],0x1c0
  416218:	movsx  rcx,si
  41621c:	mov    rdx,rbx
  41621f:	call   0x415460
  416224:	nop
  416225:	add    rsp,0x68
  416229:	pop    rbx
  41622a:	pop    rsi
  41622b:	pop    rdi
  41622c:	pop    rbp
  41622d:	pop    r12
  41622f:	pop    r13
  416231:	ret    
  416232:	mov    rcx,rbx
  416235:	call   0x414f20
  41623a:	jmp    0x415fb0
  41623f:	nop
  416240:	mov    DWORD PTR [rbx+0xc],0xffffffff
  416247:	jmp    0x415f10
  41624c:	nop    DWORD PTR [rax+0x0]
  416250:	lea    rdx,[rip+0xf419]        # 0x425670
  416257:	mov    r8,rbx
  41625a:	xor    ecx,ecx
  41625c:	call   0x414e80
  416261:	nop
  416262:	add    rsp,0x68
  416266:	pop    rbx
  416267:	pop    rsi
  416268:	pop    rdi
  416269:	pop    rbp
  41626a:	pop    r12
  41626c:	pop    r13
  41626e:	ret    
  41626f:	js     0x416311
  416275:	mov    edx,0xffffc001
  41627a:	nop    WORD PTR [rax+rax*1+0x0]
  416280:	mov    esi,edx
  416282:	sub    edx,0x1
  416285:	add    rax,rax
  416288:	jns    0x416280
  41628a:	mov    r9d,DWORD PTR [rbx+0x10]
  41628e:	cmp    r9d,0xe
  416292:	jbe    0x416005
  416298:	jmp    0x416035
  41629d:	test   rax,rax
  4162a0:	jne    0x416035
  4162a6:	jmp    0x415ed9
  4162ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4162b0:	mov    DWORD PTR [rbx+0xc],r10d
  4162b4:	jmp    0x415f10
  4162b9:	xor    eax,eax
  4162bb:	jmp    0x416068
  4162c0:	mov    rdx,rbx
  4162c3:	mov    ecx,0x2b
  4162c8:	call   0x414bf0
  4162cd:	jmp    0x415f31
  4162d2:	mov    rdx,rbx
  4162d5:	mov    ecx,0x20
  4162da:	call   0x414bf0
  4162df:	jmp    0x415f31
  4162e4:	add    esi,0x1
  4162e7:	jmp    0x416027
  4162ec:	xor    eax,eax
  4162ee:	jmp    0x416000
  4162f3:	mov    r9d,DWORD PTR [rbx+0x10]
  4162f7:	jmp    0x415ee2
  4162fc:	test   r8d,0x800
  416303:	mov    rax,rbp
  416306:	je     0x415ef4
  41630c:	jmp    0x415eeb
  416311:	mov    esi,0xffffc002
  416316:	jmp    0x41628a
  41631b:	nop    DWORD PTR [rax+rax*1+0x0]
  416320:	push   r15
  416322:	push   r14
  416324:	push   r13
  416326:	push   r12
  416328:	push   rbp
  416329:	push   rdi
  41632a:	push   rsi
  41632b:	push   rbx
  41632c:	sub    rsp,0xb8
  416333:	mov    r13,QWORD PTR [rsp+0x120]
  41633b:	mov    r15d,ecx
  41633e:	mov    rdi,rdx
  416341:	mov    esi,r8d
  416344:	mov    rbx,r9
  416347:	and    r15d,0x6000
  41634e:	call   0x419948
  416353:	mov    eax,DWORD PTR [rax]
  416355:	lea    rcx,[rip+0xf331]        # 0x42568d
  41635c:	xor    edx,edx
  41635e:	mov    QWORD PTR [rsp+0x80],rdi
  416366:	mov    DWORD PTR [rsp+0x88],r15d
  41636e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  416379:	mov    DWORD PTR [rsp+0x90],0xffffffff
  416384:	mov    DWORD PTR [rsp+0x34],eax
  416388:	xor    eax,eax
  41638a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  416395:	mov    WORD PTR [rsp+0x98],ax
  41639d:	mov    DWORD PTR [rsp+0x9c],0x0
  4163a8:	mov    WORD PTR [rsp+0xa0],dx
  4163b0:	mov    DWORD PTR [rsp+0xa4],0x0
  4163bb:	mov    DWORD PTR [rsp+0xa8],esi
  4163c2:	call   0x4198b8
  4163c7:	test   rax,rax
  4163ca:	je     0x4163dc
  4163cc:	movsx  edx,BYTE PTR [rax]
  4163cf:	mov    eax,0x2
  4163d4:	sub    edx,0x30
  4163d7:	cmp    edx,0x2
  4163da:	jbe    0x4163e9
  4163dc:	call   0x419a80
  4163e1:	and    eax,0x1
  4163e4:	neg    eax
  4163e6:	add    eax,0x3
  4163e9:	lea    rdi,[rsp+0x70]
  4163ee:	mov    DWORD PTR [rsp+0xac],eax
  4163f5:	movzx  eax,BYTE PTR [rbx]
  4163f8:	lea    rsi,[rsp+0x6e]
  4163fd:	lea    r12,[rsp+0x80]
  416405:	lea    rbp,[rip+0xf298]        # 0x4256a4
  41640c:	mov    QWORD PTR [rsp+0x28],rdi
  416411:	lea    rdi,[rsp+0x50]
  416416:	mov    QWORD PTR [rsp+0x38],rsi
  41641b:	mov    QWORD PTR [rsp+0x20],rdi
  416420:	mov    edi,r15d
  416423:	or     edi,0x200
  416429:	mov    DWORD PTR [rsp+0x48],edi
  41642d:	nop    DWORD PTR [rax]
  416430:	movsx  ecx,al
  416433:	lea    rsi,[rbx+0x1]
  416437:	test   ecx,ecx
  416439:	je     0x4164ba
  41643b:	cmp    ecx,0x25
  41643e:	jne    0x4164a0
  416440:	movzx  eax,BYTE PTR [rbx+0x1]
  416444:	xor    r10d,r10d
  416447:	xor    r14d,r14d
  41644a:	mov    DWORD PTR [rsp+0x88],r15d
  416452:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41645d:	mov    rdi,rsi
  416460:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41646b:	lea    r11,[r12+0xc]
  416470:	test   al,al
  416472:	je     0x41661b
  416478:	lea    edx,[rax-0x20]
  41647b:	lea    rbx,[rdi+0x1]
  41647f:	movsx  ecx,al
  416482:	cmp    dl,0x5a
  416485:	ja     0x416a90
  41648b:	movzx  edx,dl
  41648e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  416493:	add    rdx,rbp
  416496:	jmp    rdx
  416498:	nop    DWORD PTR [rax+rax*1+0x0]
  4164a0:	mov    rdx,r12
  4164a3:	call   0x414bf0
  4164a8:	movzx  eax,BYTE PTR [rbx+0x1]
  4164ac:	mov    rbx,rsi
  4164af:	lea    rsi,[rbx+0x1]
  4164b3:	movsx  ecx,al
  4164b6:	test   ecx,ecx
  4164b8:	jne    0x41643b
  4164ba:	mov    eax,DWORD PTR [rsp+0xa4]
  4164c1:	add    rsp,0xb8
  4164c8:	pop    rbx
  4164c9:	pop    rsi
  4164ca:	pop    rdi
  4164cb:	pop    rbp
  4164cc:	pop    r12
  4164ce:	pop    r13
  4164d0:	pop    r14
  4164d2:	pop    r15
  4164d4:	ret    
  4164d5:	sub    r10d,0x2
  4164d9:	mov    rax,r13
  4164dc:	cmp    r10d,0x1
  4164e0:	jbe    0x416ad3
  4164e6:	mov    rsi,QWORD PTR [rax]
  4164e9:	add    r13,0x8
  4164ed:	test   rsi,rsi
  4164f0:	je     0x4165b5
  4164f6:	mov    rcx,rsi
  4164f9:	call   0x419840
  4164fe:	mov    edx,eax
  416500:	mov    r8,r12
  416503:	mov    rcx,rsi
  416506:	call   0x414d70
  41650b:	nop    DWORD PTR [rax+rax*1+0x0]
  416510:	movzx  eax,BYTE PTR [rbx]
  416513:	jmp    0x416430
  416518:	nop    DWORD PTR [rax+rax*1+0x0]
  416520:	test   r14d,r14d
  416523:	jne    0x416533
  416525:	cmp    DWORD PTR [rsp+0x88],r15d
  41652d:	je     0x416c9b
  416533:	mov    rdx,QWORD PTR [r13+0x0]
  416537:	lea    rsi,[r13+0x8]
  41653b:	mov    r8,r12
  41653e:	mov    ecx,0x78
  416543:	mov    QWORD PTR [rsp+0x78],0x0
  41654c:	mov    r13,rsi
  41654f:	mov    QWORD PTR [rsp+0x70],rdx
  416554:	call   0x415a50
  416559:	jmp    0x416510
  41655b:	nop    DWORD PTR [rax+rax*1+0x0]
  416560:	cmp    r10d,0x5
  416564:	mov    rax,QWORD PTR [r13+0x0]
  416568:	je     0x416bda
  41656e:	cmp    r10d,0x1
  416572:	je     0x416c64
  416578:	cmp    r10d,0x2
  41657c:	je     0x416588
  41657e:	cmp    r10d,0x3
  416582:	je     0x416d0c
  416588:	mov    edx,DWORD PTR [rsp+0xa4]
  41658f:	add    r13,0x8
  416593:	mov    DWORD PTR [rax],edx
  416595:	jmp    0x416510
  41659a:	nop    WORD PTR [rax+rax*1+0x0]
  4165a0:	mov    ecx,DWORD PTR [rsp+0x34]
  4165a4:	call   0x419848
  4165a9:	test   rax,rax
  4165ac:	mov    rsi,rax
  4165af:	jne    0x4164f6
  4165b5:	mov    edx,0x6
  4165ba:	lea    rsi,[rip+0xf0c5]        # 0x425686
  4165c1:	jmp    0x416500
  4165c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4165d0:	movzx  eax,BYTE PTR [rdi+0x1]
  4165d4:	mov    r10d,0x2
  4165da:	mov    r14d,0x4
  4165e0:	cmp    al,0x6c
  4165e2:	jne    0x416610
  4165e4:	lea    rbx,[rdi+0x2]
  4165e8:	movzx  eax,BYTE PTR [rdi+0x2]
  4165ec:	mov    r10d,0x3
  4165f2:	mov    r14d,0x4
  4165f8:	jmp    0x416610
  4165fa:	nop    WORD PTR [rax+rax*1+0x0]
  416600:	movzx  eax,BYTE PTR [rdi+0x1]
  416604:	mov    r10d,0x3
  41660a:	mov    r14d,0x4
  416610:	test   al,al
  416612:	mov    rdi,rbx
  416615:	jne    0x416478
  41661b:	mov    rbx,rdi
  41661e:	jmp    0x416430
  416623:	mov    eax,DWORD PTR [rsp+0x88]
  41662a:	mov    rdx,r13
  41662d:	add    r13,0x8
  416631:	or     eax,0x20
  416634:	test   al,0x4
  416636:	mov    DWORD PTR [rsp+0x88],eax
  41663d:	je     0x41689b
  416643:	mov    rax,QWORD PTR [rdx]
  416646:	mov    rcx,QWORD PTR [rsp+0x20]
  41664b:	mov    rdx,r12
  41664e:	fld    TBYTE PTR [rax]
  416650:	fstp   TBYTE PTR [rsp+0x50]
  416654:	call   0x4158b0
  416659:	jmp    0x416510
  41665e:	xchg   ax,ax
  416660:	movzx  eax,BYTE PTR [rdi+0x1]
  416664:	mov    r10d,0x1
  41666a:	mov    r14d,0x4
  416670:	cmp    al,0x68
  416672:	jne    0x416610
  416674:	lea    rbx,[rdi+0x2]
  416678:	movzx  eax,BYTE PTR [rdi+0x2]
  41667c:	mov    r10d,0x5
  416682:	mov    r14d,0x4
  416688:	jmp    0x416610
  41668a:	nop    WORD PTR [rax+rax*1+0x0]
  416690:	mov    eax,DWORD PTR [rsp+0x88]
  416697:	mov    rdx,r13
  41669a:	add    r13,0x8
  41669e:	or     eax,0x20
  4166a1:	test   al,0x4
  4166a3:	mov    DWORD PTR [rsp+0x88],eax
  4166aa:	je     0x4168c9
  4166b0:	mov    rax,QWORD PTR [rdx]
  4166b3:	mov    rcx,QWORD PTR [rsp+0x20]
  4166b8:	mov    rdx,r12
  4166bb:	fld    TBYTE PTR [rax]
  4166bd:	fstp   TBYTE PTR [rsp+0x50]
  4166c1:	call   0x415370
  4166c6:	jmp    0x416510
  4166cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4166d0:	mov    eax,DWORD PTR [rsp+0x88]
  4166d7:	mov    rdx,r13
  4166da:	add    r13,0x8
  4166de:	or     eax,0x20
  4166e1:	test   al,0x4
  4166e3:	mov    DWORD PTR [rsp+0x88],eax
  4166ea:	je     0x4168f7
  4166f0:	mov    rax,QWORD PTR [rdx]
  4166f3:	mov    rcx,QWORD PTR [rsp+0x20]
  4166f8:	mov    rdx,r12
  4166fb:	fld    TBYTE PTR [rax]
  4166fd:	fstp   TBYTE PTR [rsp+0x50]
  416701:	call   0x415800
  416706:	jmp    0x416510
  41670b:	nop    DWORD PTR [rax+rax*1+0x0]
  416710:	cmp    r10d,0x3
  416714:	je     0x416bec
  41671a:	cmp    r10d,0x2
  41671e:	je     0x416c89
  416724:	mov    eax,DWORD PTR [r13+0x0]
  416728:	cmp    r10d,0x1
  41672c:	lea    rdx,[r13+0x8]
  416730:	mov    QWORD PTR [rsp+0x70],rax
  416735:	je     0x416ccb
  41673b:	cmp    r10d,0x5
  41673f:	mov    r13,rdx
  416742:	je     0x416d20
  416748:	cmp    ecx,0x75
  41674b:	je     0x416c2c
  416751:	mov    r8,r12
  416754:	mov    rdx,rax
  416757:	call   0x415a50
  41675c:	jmp    0x416510
  416761:	sub    r10d,0x2
  416765:	mov    rax,r13
  416768:	mov    DWORD PTR [rsp+0x90],0xffffffff
  416773:	cmp    r10d,0x1
  416777:	jbe    0x41691b
  41677d:	mov    eax,DWORD PTR [rax]
  41677f:	mov    rcx,QWORD PTR [rsp+0x28]
  416784:	mov    r8,r12
  416787:	mov    edx,0x1
  41678c:	add    r13,0x8
  416790:	mov    BYTE PTR [rsp+0x70],al
  416794:	call   0x414d70
  416799:	jmp    0x416510
  41679e:	xchg   ax,ax
  4167a0:	mov    eax,DWORD PTR [rsp+0x88]
  4167a7:	mov    rdx,r13
  4167aa:	add    r13,0x8
  4167ae:	or     eax,0x20
  4167b1:	test   al,0x4
  4167b3:	mov    DWORD PTR [rsp+0x88],eax
  4167ba:	je     0x416958
  4167c0:	mov    rax,QWORD PTR [rdx]
  4167c3:	mov    rcx,QWORD PTR [rsp+0x20]
  4167c8:	mov    rdx,r12
  4167cb:	fld    TBYTE PTR [rax]
  4167cd:	fstp   TBYTE PTR [rsp+0x50]
  4167d1:	call   0x415e10
  4167d6:	jmp    0x416510
  4167db:	nop    DWORD PTR [rax+rax*1+0x0]
  4167e0:	or     DWORD PTR [rsp+0x88],0x80
  4167eb:	cmp    r10d,0x3
  4167ef:	je     0x416bc8
  4167f5:	cmp    r10d,0x2
  4167f9:	je     0x416c77
  4167ff:	movsxd rcx,DWORD PTR [r13+0x0]
  416803:	cmp    r10d,0x1
  416807:	lea    rax,[r13+0x8]
  41680b:	mov    QWORD PTR [rsp+0x70],rcx
  416810:	je     0x416cdd
  416816:	cmp    r10d,0x5
  41681a:	mov    r13,rax
  41681d:	je     0x416d2f
  416823:	mov    rax,rcx
  416826:	mov    rdx,r12
  416829:	sar    rax,0x3f
  41682d:	mov    QWORD PTR [rsp+0x78],rax
  416832:	call   0x415460
  416837:	jmp    0x416510
  41683c:	nop    DWORD PTR [rax+0x0]
  416840:	or     DWORD PTR [rsp+0x88],0x4
  416848:	movzx  eax,BYTE PTR [rdi+0x1]
  41684c:	mov    r14d,0x4
  416852:	jmp    0x416610
  416857:	nop    WORD PTR [rax+rax*1+0x0]
  416860:	movzx  eax,BYTE PTR [rdi+0x1]
  416864:	cmp    al,0x36
  416866:	je     0x416ba8
  41686c:	cmp    al,0x33
  41686e:	je     0x416c3c
  416874:	mov    r10d,0x3
  41687a:	mov    r14d,0x4
  416880:	jmp    0x416610
  416885:	mov    eax,DWORD PTR [rsp+0x88]
  41688c:	mov    rdx,r13
  41688f:	add    r13,0x8
  416893:	test   al,0x4
  416895:	jne    0x416643
  41689b:	mov    rcx,QWORD PTR [rsp+0x20]
  4168a0:	fld    QWORD PTR [rdx]
  4168a2:	mov    rdx,r12
  4168a5:	fstp   TBYTE PTR [rsp+0x50]
  4168a9:	call   0x4158b0
  4168ae:	jmp    0x416510
  4168b3:	mov    eax,DWORD PTR [rsp+0x88]
  4168ba:	mov    rdx,r13
  4168bd:	add    r13,0x8
  4168c1:	test   al,0x4
  4168c3:	jne    0x4166b0
  4168c9:	mov    rcx,QWORD PTR [rsp+0x20]
  4168ce:	fld    QWORD PTR [rdx]
  4168d0:	mov    rdx,r12
  4168d3:	fstp   TBYTE PTR [rsp+0x50]
  4168d7:	call   0x415370
  4168dc:	jmp    0x416510
  4168e1:	mov    eax,DWORD PTR [rsp+0x88]
  4168e8:	mov    rdx,r13
  4168eb:	add    r13,0x8
  4168ef:	test   al,0x4
  4168f1:	jne    0x4166f0
  4168f7:	mov    rcx,QWORD PTR [rsp+0x20]
  4168fc:	fld    QWORD PTR [rdx]
  4168fe:	mov    rdx,r12
  416901:	fstp   TBYTE PTR [rsp+0x50]
  416905:	call   0x415800
  41690a:	jmp    0x416510
  41690f:	nop
  416910:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41691b:	mov    eax,DWORD PTR [r13+0x0]
  41691f:	mov    rcx,QWORD PTR [rsp+0x28]
  416924:	lea    rsi,[r13+0x8]
  416928:	mov    r8,r12
  41692b:	mov    edx,0x1
  416930:	mov    r13,rsi
  416933:	mov    WORD PTR [rsp+0x70],ax
  416938:	call   0x414c50
  41693d:	jmp    0x416510
  416942:	mov    eax,DWORD PTR [rsp+0x88]
  416949:	mov    rdx,r13
  41694c:	add    r13,0x8
  416950:	test   al,0x4
  416952:	jne    0x4167c0
  416958:	mov    rcx,QWORD PTR [rsp+0x20]
  41695d:	fld    QWORD PTR [rdx]
  41695f:	mov    rdx,r12
  416962:	fstp   TBYTE PTR [rsp+0x50]
  416966:	call   0x415e10
  41696b:	jmp    0x416510
  416970:	test   r14d,r14d
  416973:	jne    0x416b10
  416979:	or     DWORD PTR [rsp+0x88],0x200
  416984:	movzx  eax,BYTE PTR [rdi+0x1]
  416988:	jmp    0x416610
  41698d:	nop    DWORD PTR [rax]
  416990:	cmp    r14d,0x1
  416994:	jbe    0x416bfe
  41699a:	movzx  eax,BYTE PTR [rdi+0x1]
  41699e:	mov    r14d,0x4
  4169a4:	jmp    0x416610
  4169a9:	nop    DWORD PTR [rax+0x0]
  4169b0:	test   r14d,r14d
  4169b3:	jne    0x416a39
  4169b9:	or     DWORD PTR [rsp+0x88],0x400
  4169c4:	movzx  eax,BYTE PTR [rdi+0x1]
  4169c8:	jmp    0x416610
  4169cd:	nop    DWORD PTR [rax]
  4169d0:	test   r14d,r14d
  4169d3:	jne    0x416a39
  4169d5:	or     DWORD PTR [rsp+0x88],0x100
  4169e0:	movzx  eax,BYTE PTR [rdi+0x1]
  4169e4:	jmp    0x416610
  4169e9:	nop    DWORD PTR [rax+0x0]
  4169f0:	test   r14d,r14d
  4169f3:	jne    0x416a39
  4169f5:	or     DWORD PTR [rsp+0x88],0x800
  416a00:	movzx  eax,BYTE PTR [rdi+0x1]
  416a04:	jmp    0x416610
  416a09:	nop    DWORD PTR [rax+0x0]
  416a10:	test   r14d,r14d
  416a13:	jne    0x416a39
  416a15:	or     DWORD PTR [rsp+0x88],0x40
  416a1d:	movzx  eax,BYTE PTR [rdi+0x1]
  416a21:	jmp    0x416610
  416a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a30:	test   r14d,r14d
  416a33:	je     0x416b42
  416a39:	movzx  eax,BYTE PTR [rdi+0x1]
  416a3d:	jmp    0x416610
  416a42:	mov    rdx,r12
  416a45:	call   0x414bf0
  416a4a:	jmp    0x416510
  416a4f:	nop
  416a50:	test   r11,r11
  416a53:	je     0x41699a
  416a59:	test   r14d,0xfffffffd
  416a60:	jne    0x416b30
  416a66:	mov    eax,DWORD PTR [r13+0x0]
  416a6a:	lea    rdx,[r13+0x8]
  416a6e:	test   eax,eax
  416a70:	mov    DWORD PTR [r11],eax
  416a73:	js     0x416cf0
  416a79:	movzx  eax,BYTE PTR [rdi+0x1]
  416a7d:	mov    r13,rdx
  416a80:	xor    r11d,r11d
  416a83:	jmp    0x416610
  416a88:	nop    DWORD PTR [rax+rax*1+0x0]
  416a90:	sub    eax,0x30
  416a93:	cmp    al,0x9
  416a95:	ja     0x416cb6
  416a9b:	cmp    r14d,0x3
  416a9f:	ja     0x416cb6
  416aa5:	test   r14d,r14d
  416aa8:	jne    0x416b1a
  416aaa:	mov    r14d,0x1
  416ab0:	test   r11,r11
  416ab3:	je     0x416a39
  416ab5:	mov    eax,DWORD PTR [r11]
  416ab8:	test   eax,eax
  416aba:	js     0x416c1d
  416ac0:	lea    eax,[rax+rax*4]
  416ac3:	lea    eax,[rcx+rax*2-0x30]
  416ac7:	mov    DWORD PTR [r11],eax
  416aca:	movzx  eax,BYTE PTR [rdi+0x1]
  416ace:	jmp    0x416610
  416ad3:	mov    rsi,QWORD PTR [r13+0x0]
  416ad7:	lea    rax,[rip+0xeb9a]        # 0x425678
  416ade:	lea    rdi,[r13+0x8]
  416ae2:	mov    r13,rdi
  416ae5:	test   rsi,rsi
  416ae8:	cmove  rsi,rax
  416aec:	mov    rcx,rsi
  416aef:	call   0x419800
  416af4:	mov    r8,r12
  416af7:	mov    edx,eax
  416af9:	mov    rcx,rsi
  416afc:	call   0x414c50
  416b01:	jmp    0x416510
  416b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b10:	cmp    r14d,0x3
  416b14:	ja     0x416cb6
  416b1a:	cmp    r14d,0x2
  416b1e:	mov    eax,0x3
  416b23:	cmove  r14d,eax
  416b27:	jmp    0x416ab0
  416b29:	nop    DWORD PTR [rax+0x0]
  416b30:	movzx  eax,BYTE PTR [rdi+0x1]
  416b34:	xor    r11d,r11d
  416b37:	mov    r14d,0x4
  416b3d:	jmp    0x416610
  416b42:	mov    DWORD PTR [rsp+0x4c],r10d
  416b47:	mov    QWORD PTR [rsp+0x40],r11
  416b4c:	or     DWORD PTR [rsp+0x88],0x1000
  416b57:	mov    DWORD PTR [rsp+0x70],0x0
  416b5f:	call   0x419898
  416b64:	mov    r9,QWORD PTR [rsp+0x28]
  416b69:	mov    rdx,QWORD PTR [rax+0x8]
  416b6d:	mov    r8d,0x10
  416b73:	mov    rcx,QWORD PTR [rsp+0x38]
  416b78:	call   0x4193e0
  416b7d:	test   eax,eax
  416b7f:	mov    r11,QWORD PTR [rsp+0x40]
  416b84:	mov    r10d,DWORD PTR [rsp+0x4c]
  416b89:	jle    0x416b98
  416b8b:	movzx  edx,WORD PTR [rsp+0x6e]
  416b90:	mov    WORD PTR [rsp+0xa0],dx
  416b98:	mov    DWORD PTR [rsp+0x9c],eax
  416b9f:	movzx  eax,BYTE PTR [rdi+0x1]
  416ba3:	jmp    0x416610
  416ba8:	cmp    BYTE PTR [rdi+0x2],0x34
  416bac:	je     0x416d3f
  416bb2:	mov    eax,0x36
  416bb7:	mov    r10d,0x3
  416bbd:	mov    r14d,0x4
  416bc3:	jmp    0x416610
  416bc8:	mov    rcx,QWORD PTR [r13+0x0]
  416bcc:	add    r13,0x8
  416bd0:	mov    QWORD PTR [rsp+0x70],rcx
  416bd5:	jmp    0x416823
  416bda:	mov    edx,DWORD PTR [rsp+0xa4]
  416be1:	add    r13,0x8
  416be5:	mov    BYTE PTR [rax],dl
  416be7:	jmp    0x416510
  416bec:	mov    rax,QWORD PTR [r13+0x0]
  416bf0:	add    r13,0x8
  416bf4:	mov    QWORD PTR [rsp+0x70],rax
  416bf9:	jmp    0x416748
  416bfe:	mov    DWORD PTR [rsp+0x90],0x0
  416c09:	movzx  eax,BYTE PTR [rdi+0x1]
  416c0d:	lea    r11,[r12+0x10]
  416c12:	mov    r14d,0x2
  416c18:	jmp    0x416610
  416c1d:	sub    ecx,0x30
  416c20:	movzx  eax,BYTE PTR [rdi+0x1]
  416c24:	mov    DWORD PTR [r11],ecx
  416c27:	jmp    0x416610
  416c2c:	mov    rdx,r12
  416c2f:	mov    rcx,rax
  416c32:	call   0x415460
  416c37:	jmp    0x416510
  416c3c:	cmp    BYTE PTR [rdi+0x2],0x32
  416c40:	mov    eax,0x33
  416c45:	jne    0x416874
  416c4b:	lea    rbx,[rdi+0x3]
  416c4f:	movzx  eax,BYTE PTR [rdi+0x3]
  416c53:	mov    r10d,0x2
  416c59:	mov    r14d,0x4
  416c5f:	jmp    0x416610
  416c64:	mov    edx,DWORD PTR [rsp+0xa4]
  416c6b:	add    r13,0x8
  416c6f:	mov    WORD PTR [rax],dx
  416c72:	jmp    0x416510
  416c77:	movsxd rcx,DWORD PTR [r13+0x0]
  416c7b:	add    r13,0x8
  416c7f:	mov    QWORD PTR [rsp+0x70],rcx
  416c84:	jmp    0x416823
  416c89:	mov    eax,DWORD PTR [r13+0x0]
  416c8d:	add    r13,0x8
  416c91:	mov    QWORD PTR [rsp+0x70],rax
  416c96:	jmp    0x416748
  416c9b:	mov    eax,DWORD PTR [rsp+0x48]
  416c9f:	mov    DWORD PTR [rsp+0x90],0x10
  416caa:	mov    DWORD PTR [rsp+0x88],eax
  416cb1:	jmp    0x416533
  416cb6:	mov    rdx,r12
  416cb9:	mov    ecx,0x25
  416cbe:	mov    rbx,rsi
  416cc1:	call   0x414bf0
  416cc6:	jmp    0x416510
  416ccb:	movzx  eax,WORD PTR [rsp+0x70]
  416cd0:	mov    r13,rdx
  416cd3:	mov    QWORD PTR [rsp+0x70],rax
  416cd8:	jmp    0x416748
  416cdd:	movsx  rcx,WORD PTR [rsp+0x70]
  416ce3:	mov    r13,rax
  416ce6:	mov    QWORD PTR [rsp+0x70],rcx
  416ceb:	jmp    0x416823
  416cf0:	test   r14d,r14d
  416cf3:	jne    0x416d58
  416cf5:	or     DWORD PTR [rsp+0x88],0x400
  416d00:	neg    DWORD PTR [rsp+0x8c]
  416d07:	jmp    0x416a79
  416d0c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  416d14:	add    r13,0x8
  416d18:	mov    QWORD PTR [rax],rdx
  416d1b:	jmp    0x416510
  416d20:	movzx  eax,BYTE PTR [rsp+0x70]
  416d25:	mov    QWORD PTR [rsp+0x70],rax
  416d2a:	jmp    0x416748
  416d2f:	movsx  rcx,BYTE PTR [rsp+0x70]
  416d35:	mov    QWORD PTR [rsp+0x70],rcx
  416d3a:	jmp    0x416823
  416d3f:	lea    rbx,[rdi+0x3]
  416d43:	movzx  eax,BYTE PTR [rdi+0x3]
  416d47:	mov    r10d,0x3
  416d4d:	mov    r14d,0x4
  416d53:	jmp    0x416610
  416d58:	mov    DWORD PTR [rsp+0x90],0xffffffff
  416d63:	movzx  eax,BYTE PTR [rdi+0x1]
  416d67:	mov    r13,rdx
  416d6a:	xor    r11d,r11d
  416d6d:	jmp    0x416610
  416d72:	nop
  416d73:	nop
  416d74:	nop
  416d75:	nop
  416d76:	nop
  416d77:	nop
  416d78:	nop
  416d79:	nop
  416d7a:	nop
  416d7b:	nop
  416d7c:	nop
  416d7d:	nop
  416d7e:	nop
  416d7f:	nop
  416d80:	fld    TBYTE PTR [rdx]
  416d82:	fxam   
  416d84:	fstsw  ax
  416d87:	mov    dh,0x45
  416d89:	and    dh,ah
  416d8b:	cmp    dh,0x5
  416d8e:	je     0x416dcf
  416d90:	fld    st(0)
  416d92:	sub    rsp,0x8
  416d96:	fnstcw WORD PTR [rsp+0x4]
  416d9a:	movzx  eax,WORD PTR [rsp+0x4]
  416d9f:	or     ah,0xc
  416da2:	mov    WORD PTR [rsp],ax
  416da6:	fldcw  WORD PTR [rsp]
  416da9:	frndint 
  416dab:	fldcw  WORD PTR [rsp+0x4]
  416daf:	add    rsp,0x8
  416db3:	fsub   st(1),st
  416db5:	fxch   st(1)
  416db7:	f2xm1  
  416db9:	fld1   
  416dbb:	faddp  st(1),st
  416dbd:	fscale 
  416dbf:	fstp   st(1)
  416dc1:	mov    rax,rcx
  416dc4:	mov    QWORD PTR [rcx+0x8],0x0
  416dcc:	fstp   TBYTE PTR [rcx]
  416dce:	ret    
  416dcf:	test   eax,0x200
  416dd4:	je     0x416dda
  416dd6:	fstp   st(0)
  416dd8:	fldz   
  416dda:	mov    rax,rcx
  416ddd:	mov    QWORD PTR [rcx+0x8],0x0
  416de5:	fstp   TBYTE PTR [rcx]
  416de7:	ret    
  416de8:	nop
  416de9:	nop
  416dea:	nop
  416deb:	nop
  416dec:	nop
  416ded:	nop
  416dee:	nop
  416def:	nop
  416df0:	sub    rsp,0x48
  416df4:	movsd  QWORD PTR [rsp+0x30],xmm0
  416dfa:	mov    eax,DWORD PTR [rsp+0x34]
  416dfe:	movapd xmm1,xmm0
  416e02:	mov    ecx,eax
  416e04:	and    ecx,0x7ff00000
  416e0a:	cmp    ecx,0x7ff00000
  416e10:	sete   r8b
  416e14:	and    eax,0xfffff
  416e19:	or     eax,ecx
  416e1b:	or     eax,DWORD PTR [rsp+0x30]
  416e1f:	sete   r9b
  416e23:	test   ecx,ecx
  416e25:	sete   al
  416e28:	or     eax,r9d
  416e2b:	cmp    r8b,al
  416e2e:	ja     0x416ec9
  416e34:	pxor   xmm2,xmm2
  416e38:	ucomisd xmm0,xmm2
  416e3c:	jp     0x416e48
  416e3e:	movapd xmm1,xmm0
  416e42:	je     0x416ec9
  416e48:	pxor   xmm3,xmm3
  416e4c:	movsd  QWORD PTR [rsp+0x20],xmm0
  416e52:	fld    QWORD PTR [rsp+0x20]
  416e56:	cvtsi2sd xmm3,edx
  416e5a:	movsd  QWORD PTR [rsp+0x28],xmm3
  416e60:	fld    QWORD PTR [rsp+0x28]
  416e64:	fxch   st(1)
  416e66:	fscale 
  416e68:	fstp   st(1)
  416e6a:	fstp   QWORD PTR [rsp+0x20]
  416e6e:	movsd  xmm4,QWORD PTR [rsp+0x20]
  416e74:	movsd  QWORD PTR [rsp+0x38],xmm4
  416e7a:	mov    eax,DWORD PTR [rsp+0x3c]
  416e7e:	mov    edx,eax
  416e80:	and    edx,0x7ff00000
  416e86:	cmp    edx,0x7ff00000
  416e8c:	sete   cl
  416e8f:	and    eax,0xfffff
  416e94:	or     eax,edx
  416e96:	or     eax,DWORD PTR [rsp+0x38]
  416e9a:	sete   r8b
  416e9e:	test   edx,edx
  416ea0:	sete   al
  416ea3:	or     eax,r8d
  416ea6:	cmp    cl,al
  416ea8:	ja     0x416eb8
  416eaa:	movsd  xmm5,QWORD PTR [rsp+0x20]
  416eb0:	ucomisd xmm5,xmm2
  416eb4:	jp     0x416ed2
  416eb6:	jne    0x416ed2
  416eb8:	call   0x419948
  416ebd:	movsd  xmm1,QWORD PTR [rsp+0x20]
  416ec3:	mov    DWORD PTR [rax],0x22
  416ec9:	movapd xmm0,xmm1
  416ecd:	add    rsp,0x48
  416ed1:	ret    
  416ed2:	movsd  xmm1,QWORD PTR [rsp+0x20]
  416ed8:	movapd xmm0,xmm1
  416edc:	add    rsp,0x48
  416ee0:	ret    
  416ee1:	nop
  416ee2:	nop
  416ee3:	nop
  416ee4:	nop
  416ee5:	nop
  416ee6:	nop
  416ee7:	nop
  416ee8:	nop
  416ee9:	nop
  416eea:	nop
  416eeb:	nop
  416eec:	nop
  416eed:	nop
  416eee:	nop
  416eef:	nop
  416ef0:	add    BYTE PTR [rax],al
  416ef2:	add    BYTE PTR [rax],al
  416ef4:	add    BYTE PTR [rax],al
  416ef6:	lock (bad) 
  416ef8:	pop    rdx
  416efa:	cmc    
  416efb:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  416eff:	(bad)  
  416f00:	fld    QWORD PTR [rip+0xffffffffffffffea]        # 0x416ef0
  416f06:	fld    TBYTE PTR [rdx]
  416f08:	fxam   
  416f0a:	fnstsw ax
  416f0c:	fld    st(0)
  416f0e:	sahf   
  416f0f:	jb     0x416f48
  416f11:	fsub   st,st(2)
  416f13:	fld    st(0)
  416f15:	fabs   
  416f17:	fcomp  QWORD PTR [rip+0xffffffffffffffdb]        # 0x416ef8
  416f1d:	fnstsw ax
  416f1f:	and    ah,0x45
  416f22:	je     0x416f36
  416f24:	fstp   st(1)
  416f26:	fyl2xp1 
  416f28:	mov    rax,rcx
  416f2b:	mov    QWORD PTR [rcx+0x8],0x0
  416f33:	fstp   TBYTE PTR [rcx]
  416f35:	ret    
  416f36:	fstp   st(0)
  416f38:	fyl2x  
  416f3a:	mov    rax,rcx
  416f3d:	mov    QWORD PTR [rcx+0x8],0x0
  416f45:	fstp   TBYTE PTR [rcx]
  416f47:	ret    
  416f48:	jp     0x416f11
  416f4a:	fstp   st(1)
  416f4c:	fstp   st(1)
  416f4e:	mov    rax,rcx
  416f51:	mov    QWORD PTR [rcx+0x8],0x0
  416f59:	fstp   TBYTE PTR [rcx]
  416f5b:	ret    
  416f5c:	nop
  416f5d:	nop
  416f5e:	nop
  416f5f:	nop
  416f60:	push   rbx
  416f61:	sub    rsp,0x20
  416f65:	xor    ebx,ebx
  416f67:	cmp    ecx,0x1b
  416f6a:	jle    0x416f7d
  416f6c:	mov    eax,0x4
  416f71:	add    eax,eax
  416f73:	add    ebx,0x1
  416f76:	lea    edx,[rax+0x17]
  416f79:	cmp    edx,ecx
  416f7b:	jl     0x416f71
  416f7d:	mov    ecx,ebx
  416f7f:	call   0x418850
  416f84:	mov    DWORD PTR [rax],ebx
  416f86:	add    rax,0x4
  416f8a:	add    rsp,0x20
  416f8e:	pop    rbx
  416f8f:	ret    
  416f90:	push   rsi
  416f91:	push   rbx
  416f92:	sub    rsp,0x28
  416f96:	mov    rbx,rcx
  416f99:	mov    ecx,r8d
  416f9c:	mov    rsi,rdx
  416f9f:	call   0x416f60
  416fa4:	movzx  ecx,BYTE PTR [rbx]
  416fa7:	lea    r8,[rbx+0x1]
  416fab:	test   cl,cl
  416fad:	mov    BYTE PTR [rax],cl
  416faf:	mov    rcx,rax
  416fb2:	je     0x416fc9
  416fb4:	add    r8,0x1
  416fb8:	movzx  r9d,BYTE PTR [r8-0x1]
  416fbd:	add    rcx,0x1
  416fc1:	test   r9b,r9b
  416fc4:	mov    BYTE PTR [rcx],r9b
  416fc7:	jne    0x416fb4
  416fc9:	test   rsi,rsi
  416fcc:	je     0x416fd1
  416fce:	mov    QWORD PTR [rsi],rcx
  416fd1:	add    rsp,0x28
  416fd5:	pop    rbx
  416fd6:	pop    rsi
  416fd7:	ret    
  416fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  416fe0:	mov    edx,0x1
  416fe5:	mov    rax,rcx
  416fe8:	mov    ecx,DWORD PTR [rcx-0x4]
  416feb:	shl    edx,cl
  416fed:	mov    DWORD PTR [rax+0x4],ecx
  416ff0:	lea    rcx,[rax-0x4]
  416ff4:	mov    DWORD PTR [rax+0x8],edx
  416ff7:	jmp    0x418960
  416ffc:	nop    DWORD PTR [rax+0x0]
  417000:	push   r15
  417002:	push   r14
  417004:	push   r13
  417006:	push   r12
  417008:	push   rbp
  417009:	push   rdi
  41700a:	push   rsi
  41700b:	push   rbx
  41700c:	sub    rsp,0x38
  417010:	xor    eax,eax
  417012:	mov    edi,DWORD PTR [rdx+0x14]
  417015:	cmp    edi,DWORD PTR [rcx+0x14]
  417018:	mov    r15,rdx
  41701b:	jg     0x417169
  417021:	sub    edi,0x1
  417024:	lea    rbx,[rdx+0x18]
  417028:	lea    r12,[rcx+0x18]
  41702c:	movsxd r13,edi
  41702f:	xor    edx,edx
  417031:	shl    r13,0x2
  417035:	lea    rbp,[rbx+r13*1]
  417039:	add    r13,r12
  41703c:	mov    eax,DWORD PTR [rbp+0x0]
  41703f:	lea    r8d,[rax+0x1]
  417043:	mov    eax,DWORD PTR [r13+0x0]
  417047:	div    r8d
  41704a:	test   eax,eax
  41704c:	mov    r14d,eax
  41704f:	mov    DWORD PTR [rsp+0x2c],eax
  417053:	je     0x4170e7
  417059:	mov    edx,eax
  41705b:	mov    rsi,rbx
  41705e:	mov    r11,r12
  417061:	xor    eax,eax
  417063:	xor    r10d,r10d
  417066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417070:	add    rsi,0x4
  417074:	mov    r8d,DWORD PTR [rsi-0x4]
  417078:	mov    r9d,DWORD PTR [r11]
  41707b:	add    r11,0x4
  41707f:	imul   r8,rdx
  417083:	add    r8,rax
  417086:	mov    rax,r8
  417089:	mov    r8d,r8d
  41708c:	sub    r9,r8
  41708f:	shr    rax,0x20
  417093:	sub    r9,r10
  417096:	mov    r10,r9
  417099:	mov    DWORD PTR [r11-0x4],r9d
  41709d:	shr    r10,0x20
  4170a1:	and    r10d,0x1
  4170a5:	cmp    rbp,rsi
  4170a8:	jae    0x417070
  4170aa:	mov    r11d,DWORD PTR [r13+0x0]
  4170ae:	test   r11d,r11d
  4170b1:	jne    0x4170e7
  4170b3:	lea    rax,[r13-0x4]
  4170b7:	cmp    r12,rax
  4170ba:	jae    0x4170e4
  4170bc:	mov    r10d,DWORD PTR [r13-0x4]
  4170c0:	test   r10d,r10d
  4170c3:	je     0x4170d8
  4170c5:	jmp    0x4170e4
  4170c7:	nop    WORD PTR [rax+rax*1+0x0]
  4170d0:	mov    r9d,DWORD PTR [rax]
  4170d3:	test   r9d,r9d
  4170d6:	jne    0x4170e4
  4170d8:	sub    rax,0x4
  4170dc:	sub    edi,0x1
  4170df:	cmp    r12,rax
  4170e2:	jb     0x4170d0
  4170e4:	mov    DWORD PTR [rcx+0x14],edi
  4170e7:	mov    rdx,r15
  4170ea:	mov    rsi,rcx
  4170ed:	call   0x418e80
  4170f2:	test   eax,eax
  4170f4:	js     0x417165
  4170f6:	lea    eax,[r14+0x1]
  4170fa:	mov    rcx,r12
  4170fd:	xor    edx,edx
  4170ff:	mov    DWORD PTR [rsp+0x2c],eax
  417103:	add    rbx,0x4
  417107:	mov    eax,DWORD PTR [rcx]
  417109:	mov    r8d,DWORD PTR [rbx-0x4]
  41710d:	add    rcx,0x4
  417111:	sub    rax,r8
  417114:	sub    rax,rdx
  417117:	mov    rdx,rax
  41711a:	mov    DWORD PTR [rcx-0x4],eax
  41711d:	shr    rdx,0x20
  417121:	and    edx,0x1
  417124:	cmp    rbp,rbx
  417127:	jae    0x417103
  417129:	movsxd rax,edi
  41712c:	lea    rdx,[r12+rax*4]
  417130:	mov    r8d,DWORD PTR [rdx]
  417133:	test   r8d,r8d
  417136:	jne    0x417165
  417138:	lea    rax,[rdx-0x4]
  41713c:	cmp    r12,rax
  41713f:	jae    0x417162
  417141:	mov    ecx,DWORD PTR [rdx-0x4]
  417144:	test   ecx,ecx
  417146:	je     0x417156
  417148:	jmp    0x417162
  41714a:	nop    WORD PTR [rax+rax*1+0x0]
  417150:	mov    edx,DWORD PTR [rax]
  417152:	test   edx,edx
  417154:	jne    0x417162
  417156:	sub    rax,0x4
  41715a:	sub    edi,0x1
  41715d:	cmp    r12,rax
  417160:	jb     0x417150
  417162:	mov    DWORD PTR [rsi+0x14],edi
  417165:	mov    eax,DWORD PTR [rsp+0x2c]
  417169:	add    rsp,0x38
  41716d:	pop    rbx
  41716e:	pop    rsi
  41716f:	pop    rdi
  417170:	pop    rbp
  417171:	pop    r12
  417173:	pop    r13
  417175:	pop    r14
  417177:	pop    r15
  417179:	ret    
  41717a:	nop
  41717b:	nop
  41717c:	nop
  41717d:	nop
  41717e:	nop
  41717f:	nop
  417180:	push   r15
  417182:	push   r14
  417184:	push   r13
  417186:	push   r12
  417188:	push   rbp
  417189:	push   rdi
  41718a:	push   rsi
  41718b:	push   rbx
  41718c:	sub    rsp,0xb8
  417193:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  41719b:	mov    r12d,DWORD PTR [r9]
  41719e:	mov    eax,r12d
  4171a1:	and    eax,0xffffffcf
  4171a4:	mov    DWORD PTR [r9],eax
  4171a7:	mov    eax,r12d
  4171aa:	and    eax,0x7
  4171ad:	cmp    eax,0x4
  4171b0:	ja     0x4185e3
  4171b6:	mov    r13d,edx
  4171b9:	lea    rdx,[rip+0xe660]        # 0x425820
  4171c0:	mov    QWORD PTR [rsp+0x28],r9
  4171c5:	mov    r15,r8
  4171c8:	mov    rbp,rcx
  4171cb:	movsxd rax,DWORD PTR [rdx+rax*4]
  4171cf:	add    rdx,rax
  4171d2:	jmp    rdx
  4171d4:	mov    edi,DWORD PTR [rcx]
  4171d6:	xor    ecx,ecx
  4171d8:	cmp    edi,0x20
  4171db:	jle    0x4171eb
  4171dd:	mov    eax,0x20
  4171e2:	add    eax,eax
  4171e4:	add    ecx,0x1
  4171e7:	cmp    edi,eax
  4171e9:	jg     0x4171e2
  4171eb:	call   0x418850
  4171f0:	mov    rsi,rax
  4171f3:	lea    eax,[rdi-0x1]
  4171f6:	lea    r9,[rsi+0x18]
  4171fa:	sar    eax,0x5
  4171fd:	cdqe   
  4171ff:	mov    rdx,r9
  417202:	lea    r11,[r15+rax*4]
  417206:	mov    rax,r15
  417209:	nop    DWORD PTR [rax+0x0]
  417210:	mov    ecx,DWORD PTR [rax]
  417212:	add    rax,0x4
  417216:	add    rdx,0x4
  41721a:	cmp    r11,rax
  41721d:	mov    DWORD PTR [rdx-0x4],ecx
  417220:	jae    0x417210
  417222:	sub    rdx,r9
  417225:	sar    rdx,0x2
  417229:	mov    r14d,edx
  41722c:	movsxd rdx,edx
  41722f:	lea    rax,[r9+rdx*4-0x4]
  417234:	jmp    0x41724f
  417236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417240:	sub    rax,0x4
  417244:	test   edx,edx
  417246:	mov    r14d,edx
  417249:	je     0x417750
  41724f:	mov    r8d,DWORD PTR [rax]
  417252:	lea    edx,[r14-0x1]
  417256:	test   r8d,r8d
  417259:	je     0x417240
  41725b:	movsxd rdx,edx
  41725e:	mov    DWORD PTR [rsi+0x14],r14d
  417262:	shl    r14d,0x5
  417266:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  41726b:	xor    eax,0x1f
  41726e:	sub    r14d,eax
  417271:	mov    rcx,rsi
  417274:	call   0x4186f0
  417279:	test   eax,eax
  41727b:	mov    DWORD PTR [rsp+0x9c],eax
  417282:	mov    r11d,r13d
  417285:	jne    0x417760
  41728b:	mov    ecx,DWORD PTR [rsi+0x14]
  41728e:	test   ecx,ecx
  417290:	jne    0x417340
  417296:	mov    rcx,rsi
  417299:	call   0x418960
  41729e:	mov    rax,QWORD PTR [rsp+0x130]
  4172a6:	mov    rdx,QWORD PTR [rsp+0x138]
  4172ae:	lea    rcx,[rip+0xe568]        # 0x42581d
  4172b5:	mov    r8d,0x1
  4172bb:	mov    DWORD PTR [rax],0x1
  4172c1:	call   0x416f90
  4172c6:	nop
  4172c7:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  4172cf:	add    rsp,0xb8
  4172d6:	pop    rbx
  4172d7:	pop    rsi
  4172d8:	pop    rdi
  4172d9:	pop    rbp
  4172da:	pop    r12
  4172dc:	pop    r13
  4172de:	pop    r14
  4172e0:	pop    r15
  4172e2:	ret    
  4172e3:	mov    rax,QWORD PTR [rsp+0x130]
  4172eb:	mov    rdx,QWORD PTR [rsp+0x138]
  4172f3:	lea    rcx,[rip+0xe51f]        # 0x425819
  4172fa:	mov    r8d,0x3
  417300:	mov    DWORD PTR [rax],0xffff8000
  417306:	call   0x416f90
  41730b:	jmp    0x4172c7
  41730d:	nop    DWORD PTR [rax]
  417310:	mov    rax,QWORD PTR [rsp+0x130]
  417318:	mov    rdx,QWORD PTR [rsp+0x138]
  417320:	lea    rcx,[rip+0xe4e9]        # 0x425810
  417327:	mov    r8d,0x8
  41732d:	mov    DWORD PTR [rax],0xffff8000
  417333:	call   0x416f90
  417338:	jmp    0x4172c7
  41733a:	nop    WORD PTR [rax+rax*1+0x0]
  417340:	lea    rdx,[rsp+0x9c]
  417348:	mov    rcx,rsi
  41734b:	mov    DWORD PTR [rsp+0x30],r11d
  417350:	call   0x419010
  417355:	movq   rdx,xmm0
  41735a:	movq   r9,xmm0
  41735f:	mov    r11d,DWORD PTR [rsp+0x30]
  417364:	pxor   xmm0,xmm0
  417368:	shr    rdx,0x20
  41736c:	mov    r9d,r9d
  41736f:	and    edx,0xfffff
  417375:	lea    ecx,[r11+r14*1-0x1]
  41737a:	or     edx,0x3ff00000
  417380:	mov    rax,rdx
  417383:	cvtsi2sd xmm0,ecx
  417387:	shl    rax,0x20
  41738b:	mov    ebx,ecx
  41738d:	or     r9,rax
  417390:	sar    ebx,0x1f
  417393:	mov    QWORD PTR [rsp+0x30],r9
  417398:	mov    eax,ebx
  41739a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  4173a0:	xor    eax,ecx
  4173a2:	sub    eax,ebx
  4173a4:	subsd  xmm1,QWORD PTR [rip+0xe48c]        # 0x425838
  4173ac:	sub    eax,0x435
  4173b1:	test   eax,eax
  4173b3:	mulsd  xmm0,QWORD PTR [rip+0xe495]        # 0x425850
  4173bb:	mulsd  xmm1,QWORD PTR [rip+0xe47d]        # 0x425840
  4173c3:	addsd  xmm1,QWORD PTR [rip+0xe47d]        # 0x425848
  4173cb:	addsd  xmm1,xmm0
  4173cf:	jle    0x4173e5
  4173d1:	pxor   xmm0,xmm0
  4173d5:	cvtsi2sd xmm0,eax
  4173d9:	mulsd  xmm0,QWORD PTR [rip+0xe477]        # 0x425858
  4173e1:	addsd  xmm1,xmm0
  4173e5:	cvttsd2si eax,xmm1
  4173e9:	pxor   xmm6,xmm6
  4173ed:	ucomisd xmm6,xmm1
  4173f1:	mov    DWORD PTR [rsp+0x30],eax
  4173f5:	ja     0x417c83
  4173fb:	mov    eax,ecx
  4173fd:	mov    r9d,r9d
  417400:	mov    DWORD PTR [rsp+0x6c],0x1
  417408:	shl    eax,0x14
  41740b:	add    eax,edx
  41740d:	shl    rax,0x20
  417411:	or     r9,rax
  417414:	cmp    DWORD PTR [rsp+0x30],0x16
  417419:	mov    QWORD PTR [rsp+0x80],r9
  417421:	ja     0x417450
  417423:	movsxd rax,DWORD PTR [rsp+0x30]
  417428:	mov    rdx,QWORD PTR [rip+0xe761]        # 0x425b90
  41742f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  417434:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  41743d:	jbe    0x4177a0
  417443:	sub    DWORD PTR [rsp+0x30],0x1
  417448:	mov    DWORD PTR [rsp+0x6c],0x0
  417450:	mov    eax,r14d
  417453:	mov    DWORD PTR [rsp+0x50],0x0
  41745b:	sub    eax,ecx
  41745d:	sub    eax,0x1
  417460:	mov    DWORD PTR [rsp+0x40],eax
  417464:	js     0x417c70
  41746a:	mov    eax,DWORD PTR [rsp+0x30]
  41746e:	test   eax,eax
  417470:	js     0x417c50
  417476:	add    DWORD PTR [rsp+0x40],eax
  41747a:	mov    DWORD PTR [rsp+0x88],eax
  417481:	mov    DWORD PTR [rsp+0x58],0x0
  417489:	cmp    DWORD PTR [rsp+0x120],0x9
  417491:	ja     0x417780
  417497:	cmp    DWORD PTR [rsp+0x120],0x5
  41749f:	jle    0x41778b
  4174a5:	sub    DWORD PTR [rsp+0x120],0x4
  4174ad:	xor    eax,eax
  4174af:	cmp    DWORD PTR [rsp+0x120],0x3
  4174b7:	je     0x417e44
  4174bd:	jle    0x417ba3
  4174c3:	cmp    DWORD PTR [rsp+0x120],0x4
  4174cb:	mov    DWORD PTR [rsp+0x60],0x1
  4174d3:	je     0x4177b0
  4174d9:	cmp    DWORD PTR [rsp+0x120],0x5
  4174e1:	jne    0x417bb9
  4174e7:	mov    ebx,DWORD PTR [rsp+0x30]
  4174eb:	add    ebx,DWORD PTR [rsp+0x128]
  4174f2:	mov    DWORD PTR [rsp+0x8c],ebx
  4174f9:	add    ebx,0x1
  4174fc:	test   ebx,ebx
  4174fe:	mov    DWORD PTR [rsp+0x68],ebx
  417502:	mov    ecx,ebx
  417504:	jle    0x418080
  41750a:	cmp    ebx,0xe
  41750d:	mov    DWORD PTR [rsp+0x9c],ebx
  417514:	setbe  bl
  417517:	and    ebx,eax
  417519:	mov    QWORD PTR [rsp+0x78],r9
  41751e:	mov    DWORD PTR [rsp+0x70],r11d
  417523:	call   0x416f60
  417528:	mov    QWORD PTR [rsp+0x48],rax
  41752d:	mov    eax,DWORD PTR [rbp+0xc]
  417530:	mov    r11d,DWORD PTR [rsp+0x70]
  417535:	mov    r9,QWORD PTR [rsp+0x78]
  41753a:	sub    eax,0x1
  41753d:	mov    DWORD PTR [rsp+0x38],eax
  417541:	je     0x417568
  417543:	mov    ecx,DWORD PTR [rsp+0x38]
  417547:	mov    eax,0x2
  41754c:	test   ecx,ecx
  41754e:	cmovns eax,ecx
  417551:	and    r12d,0x8
  417555:	mov    DWORD PTR [rsp+0x38],eax
  417559:	je     0x417568
  41755b:	mov    eax,0x3
  417560:	sub    eax,DWORD PTR [rsp+0x38]
  417564:	mov    DWORD PTR [rsp+0x38],eax
  417568:	test   bl,bl
  41756a:	je     0x417860
  417570:	mov    eax,DWORD PTR [rsp+0x38]
  417574:	or     eax,DWORD PTR [rsp+0x30]
  417578:	jne    0x417860
  41757e:	mov    eax,DWORD PTR [rsp+0x6c]
  417582:	mov    DWORD PTR [rsp+0x9c],0x0
  41758d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  417596:	test   eax,eax
  417598:	je     0x4175ac
  41759a:	movsd  xmm0,QWORD PTR [rip+0xe2c6]        # 0x425868
  4175a2:	ucomisd xmm0,xmm4
  4175a6:	ja     0x4183db
  4175ac:	movapd xmm0,xmm4
  4175b0:	mov    r12d,DWORD PTR [rsp+0x68]
  4175b5:	addsd  xmm0,xmm4
  4175b9:	addsd  xmm0,QWORD PTR [rip+0xe2bf]        # 0x425880
  4175c1:	movq   rdx,xmm0
  4175c6:	movq   rax,xmm0
  4175cb:	shr    rdx,0x20
  4175cf:	mov    eax,eax
  4175d1:	sub    edx,0x3400000
  4175d7:	shl    rdx,0x20
  4175db:	or     rax,rdx
  4175de:	test   r12d,r12d
  4175e1:	je     0x417817
  4175e7:	mov    r9d,DWORD PTR [rsp+0x68]
  4175ec:	movapd xmm0,xmm4
  4175f0:	xor    ecx,ecx
  4175f2:	mov    ebx,DWORD PTR [rsp+0x60]
  4175f6:	lea    edx,[r9-0x1]
  4175fa:	movsxd rdx,edx
  4175fd:	test   ebx,ebx
  4175ff:	je     0x418123
  417605:	mov    r10,QWORD PTR [rip+0xe584]        # 0x425b90
  41760c:	movsd  xmm1,QWORD PTR [rip+0xe28c]        # 0x4258a0
  417614:	mov    QWORD PTR [rsp+0x38],rax
  417619:	cvttsd2si eax,xmm0
  41761d:	pxor   xmm2,xmm2
  417621:	mov    DWORD PTR [rsp+0x9c],0x0
  41762c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  417632:	mov    rdx,QWORD PTR [rsp+0x48]
  417637:	mov    rbx,rdx
  41763a:	add    rbx,0x1
  41763e:	cvtsi2sd xmm2,eax
  417642:	add    eax,0x30
  417645:	mov    BYTE PTR [rdx],al
  417647:	movsd  xmm5,QWORD PTR [rsp+0x38]
  41764d:	subsd  xmm0,xmm2
  417651:	subsd  xmm1,xmm5
  417655:	ucomisd xmm1,xmm0
  417659:	ja     0x4176f4
  41765f:	movsd  xmm5,QWORD PTR [rip+0xe201]        # 0x425868
  417667:	movapd xmm2,xmm5
  41766b:	subsd  xmm2,xmm0
  41766f:	ucomisd xmm1,xmm2
  417673:	ja     0x4181f7
  417679:	mov    eax,DWORD PTR [rsp+0x9c]
  417680:	movsd  xmm3,QWORD PTR [rip+0xe1e8]        # 0x425870
  417688:	add    eax,0x1
  41768b:	cmp    r9d,eax
  41768e:	mov    DWORD PTR [rsp+0x9c],eax
  417695:	jg     0x4176cc
  417697:	jmp    0x41784e
  41769c:	nop    DWORD PTR [rax+0x0]
  4176a0:	movapd xmm2,xmm5
  4176a4:	subsd  xmm2,xmm0
  4176a8:	ucomisd xmm1,xmm2
  4176ac:	ja     0x4181f7
  4176b2:	mov    eax,DWORD PTR [rsp+0x9c]
  4176b9:	add    eax,0x1
  4176bc:	cmp    r9d,eax
  4176bf:	mov    DWORD PTR [rsp+0x9c],eax
  4176c6:	jle    0x41784e
  4176cc:	mulsd  xmm0,xmm3
  4176d0:	add    rbx,0x1
  4176d4:	pxor   xmm2,xmm2
  4176d8:	mulsd  xmm1,xmm3
  4176dc:	cvttsd2si eax,xmm0
  4176e0:	cvtsi2sd xmm2,eax
  4176e4:	add    eax,0x30
  4176e7:	mov    BYTE PTR [rbx-0x1],al
  4176ea:	subsd  xmm0,xmm2
  4176ee:	ucomisd xmm1,xmm0
  4176f2:	jbe    0x4176a0
  4176f4:	ucomisd xmm0,xmm6
  4176f8:	lea    ebp,[rcx+0x1]
  4176fb:	jp     0x417703
  4176fd:	je     0x418057
  417703:	mov    r15d,0x10
  417709:	nop    DWORD PTR [rax+0x0]
  417710:	mov    rcx,rsi
  417713:	call   0x418960
  417718:	cmp    QWORD PTR [rsp+0x138],0x0
  417721:	mov    rax,QWORD PTR [rsp+0x130]
  417729:	mov    BYTE PTR [rbx],0x0
  41772c:	mov    DWORD PTR [rax],ebp
  41772e:	je     0x41773b
  417730:	mov    rax,QWORD PTR [rsp+0x138]
  417738:	mov    QWORD PTR [rax],rbx
  41773b:	mov    rax,QWORD PTR [rsp+0x28]
  417740:	or     DWORD PTR [rax],r15d
  417743:	mov    rax,QWORD PTR [rsp+0x48]
  417748:	jmp    0x4172c7
  41774d:	nop    DWORD PTR [rax]
  417750:	mov    DWORD PTR [rsi+0x14],0x0
  417757:	jmp    0x417271
  41775c:	nop    DWORD PTR [rax+0x0]
  417760:	mov    edx,eax
  417762:	mov    rcx,rsi
  417765:	call   0x4185f0
  41776a:	mov    eax,DWORD PTR [rsp+0x9c]
  417771:	lea    r11d,[r13+rax*1+0x0]
  417776:	sub    r14d,eax
  417779:	jmp    0x41728b
  41777e:	xchg   ax,ax
  417780:	mov    DWORD PTR [rsp+0x120],0x0
  41778b:	add    ecx,0x3fe
  417791:	cmp    ecx,0x7f7
  417797:	setbe  al
  41779a:	jmp    0x4174af
  41779f:	nop
  4177a0:	mov    DWORD PTR [rsp+0x6c],0x0
  4177a8:	jmp    0x417450
  4177ad:	nop    DWORD PTR [rax]
  4177b0:	mov    edx,DWORD PTR [rsp+0x128]
  4177b7:	test   edx,edx
  4177b9:	jle    0x41806b
  4177bf:	cmp    DWORD PTR [rsp+0x128],0xe
  4177c7:	setbe  bl
  4177ca:	mov    ecx,DWORD PTR [rsp+0x128]
  4177d1:	and    ebx,eax
  4177d3:	mov    DWORD PTR [rsp+0x9c],ecx
  4177da:	mov    DWORD PTR [rsp+0x8c],ecx
  4177e1:	mov    DWORD PTR [rsp+0x68],ecx
  4177e5:	jmp    0x417519
  4177ea:	movapd xmm0,xmm4
  4177ee:	addsd  xmm0,xmm4
  4177f2:	addsd  xmm0,QWORD PTR [rip+0xe086]        # 0x425880
  4177fa:	movq   rdx,xmm0
  4177ff:	movq   rax,xmm0
  417804:	shr    rdx,0x20
  417808:	mov    eax,eax
  41780a:	sub    edx,0x3400000
  417810:	shl    rdx,0x20
  417814:	or     rax,rdx
  417817:	movapd xmm1,xmm4
  41781b:	mov    QWORD PTR [rsp+0x38],rax
  417820:	movsd  xmm0,QWORD PTR [rsp+0x38]
  417826:	subsd  xmm1,QWORD PTR [rip+0xe05a]        # 0x425888
  41782e:	ucomisd xmm1,xmm0
  417832:	ja     0x418114
  417838:	movsd  xmm2,QWORD PTR [rip+0xe050]        # 0x425890
  417840:	xorpd  xmm0,xmm2
  417844:	ucomisd xmm0,xmm1
  417848:	ja     0x417c2d
  41784e:	movq   r9,xmm4
  417853:	mov    DWORD PTR [rsp+0x38],0x0
  41785b:	nop    DWORD PTR [rax+rax*1+0x0]
  417860:	test   r11d,r11d
  417863:	js     0x417902
  417869:	movsxd rax,DWORD PTR [rsp+0x30]
  41786e:	cmp    eax,DWORD PTR [rbp+0x14]
  417871:	jg     0x417902
  417877:	mov    ebx,DWORD PTR [rsp+0x68]
  41787b:	mov    rdx,QWORD PTR [rip+0xe30e]        # 0x425b90
  417882:	test   ebx,ebx
  417884:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  417889:	jg     0x417f93
  41788f:	mov    eax,DWORD PTR [rsp+0x128]
  417896:	shr    eax,0x1f
  417899:	test   al,al
  41789b:	je     0x417f93
  4178a1:	test   ebx,ebx
  4178a3:	jne    0x417c2d
  4178a9:	mulsd  xmm2,QWORD PTR [rip+0xdfd7]        # 0x425888
  4178b1:	mov    QWORD PTR [rsp+0x38],r9
  4178b6:	movsd  xmm5,QWORD PTR [rsp+0x38]
  4178bc:	ucomisd xmm2,xmm5
  4178c0:	jae    0x417c2d
  4178c6:	mov    ebp,DWORD PTR [rsp+0x30]
  4178ca:	xor    r12d,r12d
  4178cd:	xor    edi,edi
  4178cf:	add    ebp,0x2
  4178d2:	mov    rax,QWORD PTR [rsp+0x48]
  4178d7:	mov    r15d,0x20
  4178dd:	lea    rbx,[rax+0x1]
  4178e1:	mov    BYTE PTR [rax],0x31
  4178e4:	mov    rcx,r12
  4178e7:	call   0x418960
  4178ec:	test   rdi,rdi
  4178ef:	je     0x417710
  4178f5:	mov    rcx,rdi
  4178f8:	call   0x418960
  4178fd:	jmp    0x417710
  417902:	mov    r9d,DWORD PTR [rsp+0x60]
  417907:	test   r9d,r9d
  41790a:	je     0x417e10
  417910:	mov    edx,DWORD PTR [rbp+0x4]
  417913:	sub    edi,r14d
  417916:	mov    ecx,r11d
  417919:	lea    eax,[rdi+0x1]
  41791c:	sub    ecx,edi
  41791e:	cmp    ecx,edx
  417920:	mov    DWORD PTR [rsp+0x9c],eax
  417927:	jge    0x41795c
  417929:	mov    ebx,DWORD PTR [rsp+0x120]
  417930:	lea    ecx,[rbx-0x3]
  417933:	and    ecx,0xfffffffd
  417936:	je     0x41795c
  417938:	mov    ebx,DWORD PTR [rsp+0x68]
  41793c:	sub    r11d,edx
  41793f:	lea    eax,[r11+0x1]
  417943:	test   ebx,ebx
  417945:	mov    DWORD PTR [rsp+0x9c],eax
  41794c:	setg   cl
  41794f:	cmp    ebx,eax
  417951:	setl   dl
  417954:	test   cl,dl
  417956:	je     0x41809f
  41795c:	cmp    DWORD PTR [rsp+0x120],0x1
  417964:	jle    0x41809f
  41796a:	mov    ebx,DWORD PTR [rsp+0x58]
  41796e:	mov    eax,DWORD PTR [rsp+0x68]
  417972:	mov    r12d,ebx
  417975:	sub    eax,0x1
  417978:	sub    r12d,eax
  41797b:	cmp    ebx,eax
  41797d:	jge    0x417993
  41797f:	mov    edx,eax
  417981:	sub    edx,DWORD PTR [rsp+0x58]
  417985:	xor    r12d,r12d
  417988:	add    DWORD PTR [rsp+0x88],edx
  41798f:	mov    DWORD PTR [rsp+0x58],eax
  417993:	mov    eax,DWORD PTR [rsp+0x68]
  417997:	test   eax,eax
  417999:	js     0x418332
  41799f:	mov    ebx,DWORD PTR [rsp+0x50]
  4179a3:	mov    DWORD PTR [rsp+0x9c],eax
  4179aa:	mov    ecx,0x1
  4179af:	add    DWORD PTR [rsp+0x50],eax
  4179b3:	add    DWORD PTR [rsp+0x40],eax
  4179b7:	call   0x418a90
  4179bc:	mov    rdi,rax
  4179bf:	mov    ecx,DWORD PTR [rsp+0x40]
  4179c3:	test   ecx,ecx
  4179c5:	mov    eax,ecx
  4179c7:	jle    0x4179e5
  4179c9:	test   ebx,ebx
  4179cb:	jle    0x4179e5
  4179cd:	cmp    ecx,ebx
  4179cf:	cmovg  eax,ebx
  4179d2:	sub    DWORD PTR [rsp+0x50],eax
  4179d6:	sub    ecx,eax
  4179d8:	mov    DWORD PTR [rsp+0x9c],eax
  4179df:	sub    ebx,eax
  4179e1:	mov    DWORD PTR [rsp+0x40],ecx
  4179e5:	mov    r8d,DWORD PTR [rsp+0x58]
  4179ea:	test   r8d,r8d
  4179ed:	jle    0x417a3b
  4179ef:	mov    ecx,DWORD PTR [rsp+0x60]
  4179f3:	test   ecx,ecx
  4179f5:	je     0x417e30
  4179fb:	test   r12d,r12d
  4179fe:	jle    0x417a2e
  417a00:	mov    rcx,rdi
  417a03:	mov    edx,r12d
  417a06:	call   0x418bf0
  417a0b:	mov    rdx,rsi
  417a0e:	mov    rcx,rax
  417a11:	mov    rdi,rax
  417a14:	call   0x418ac0
  417a19:	mov    rcx,rsi
  417a1c:	mov    QWORD PTR [rsp+0x70],rax
  417a21:	call   0x418960
  417a26:	mov    rax,QWORD PTR [rsp+0x70]
  417a2b:	mov    rsi,rax
  417a2e:	mov    edx,DWORD PTR [rsp+0x58]
  417a32:	sub    edx,r12d
  417a35:	jne    0x417e34
  417a3b:	mov    ecx,0x1
  417a40:	call   0x418a90
  417a45:	mov    r12,rax
  417a48:	mov    eax,DWORD PTR [rsp+0x88]
  417a4f:	test   eax,eax
  417a51:	jle    0x417b80
  417a57:	mov    rcx,r12
  417a5a:	mov    edx,eax
  417a5c:	call   0x418bf0
  417a61:	cmp    DWORD PTR [rsp+0x120],0x1
  417a69:	mov    r12,rax
  417a6c:	jg     0x417a78
  417a6e:	cmp    r14d,0x1
  417a72:	je     0x417b3c
  417a78:	xor    ebp,ebp
  417a7a:	mov    eax,DWORD PTR [r12+0x14]
  417a7f:	sub    eax,0x1
  417a82:	cdqe   
  417a84:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  417a8a:	xor    eax,0x1f
  417a8d:	sub    eax,DWORD PTR [rsp+0x40]
  417a91:	mov    edx,DWORD PTR [rsp+0x50]
  417a95:	sub    eax,0x4
  417a98:	and    eax,0x1f
  417a9b:	add    edx,eax
  417a9d:	mov    r13d,eax
  417aa0:	mov    DWORD PTR [rsp+0x9c],eax
  417aa7:	test   edx,edx
  417aa9:	mov    ecx,eax
  417aab:	jle    0x417abf
  417aad:	mov    rcx,rsi
  417ab0:	call   0x418d60
  417ab5:	mov    ecx,DWORD PTR [rsp+0x9c]
  417abc:	mov    rsi,rax
  417abf:	mov    edx,DWORD PTR [rsp+0x40]
  417ac3:	add    edx,ecx
  417ac5:	test   edx,edx
  417ac7:	jle    0x417ad4
  417ac9:	mov    rcx,r12
  417acc:	call   0x418d60
  417ad1:	mov    r12,rax
  417ad4:	mov    eax,DWORD PTR [rsp+0x6c]
  417ad8:	test   eax,eax
  417ada:	jne    0x417e51
  417ae0:	mov    r14d,DWORD PTR [rsp+0x68]
  417ae5:	test   r14d,r14d
  417ae8:	jg     0x417ca1
  417aee:	cmp    DWORD PTR [rsp+0x120],0x2
  417af6:	jle    0x417ca1
  417afc:	mov    r11d,DWORD PTR [rsp+0x68]
  417b01:	test   r11d,r11d
  417b04:	jne    0x417c32
  417b0a:	xor    r8d,r8d
  417b0d:	mov    rcx,r12
  417b10:	mov    edx,0x5
  417b15:	call   0x4189d0
  417b1a:	mov    rcx,rsi
  417b1d:	mov    rdx,rax
  417b20:	mov    r12,rax
  417b23:	call   0x418e80
  417b28:	test   eax,eax
  417b2a:	jle    0x417c32
  417b30:	mov    ebp,DWORD PTR [rsp+0x30]
  417b34:	add    ebp,0x2
  417b37:	jmp    0x4178d2
  417b3c:	mov    eax,DWORD PTR [rbp+0x4]
  417b3f:	add    eax,0x1
  417b42:	cmp    r13d,eax
  417b45:	jle    0x417a78
  417b4b:	add    DWORD PTR [rsp+0x50],0x1
  417b50:	add    DWORD PTR [rsp+0x40],0x1
  417b55:	mov    ebp,0x1
  417b5a:	nop    WORD PTR [rax+rax*1+0x0]
  417b60:	mov    edx,DWORD PTR [rsp+0x88]
  417b67:	mov    eax,0x1f
  417b6c:	test   edx,edx
  417b6e:	je     0x417a8d
  417b74:	jmp    0x417a7a
  417b79:	nop    DWORD PTR [rax+0x0]
  417b80:	cmp    DWORD PTR [rsp+0x120],0x1
  417b88:	jg     0x417b90
  417b8a:	cmp    r14d,0x1
  417b8e:	je     0x417b94
  417b90:	xor    ebp,ebp
  417b92:	jmp    0x417b60
  417b94:	mov    eax,DWORD PTR [rbp+0x4]
  417b97:	xor    ebp,ebp
  417b99:	add    eax,0x1
  417b9c:	cmp    r13d,eax
  417b9f:	jle    0x417b60
  417ba1:	jmp    0x417b4b
  417ba3:	cmp    DWORD PTR [rsp+0x120],0x2
  417bab:	mov    DWORD PTR [rsp+0x60],0x0
  417bb3:	je     0x4177b0
  417bb9:	pxor   xmm0,xmm0
  417bbd:	mov    QWORD PTR [rsp+0x60],r9
  417bc2:	mov    DWORD PTR [rsp+0x68],r11d
  417bc7:	cvtsi2sd xmm0,edi
  417bcb:	mulsd  xmm0,QWORD PTR [rip+0xdc8d]        # 0x425860
  417bd3:	cvttsd2si ecx,xmm0
  417bd7:	add    ecx,0x3
  417bda:	mov    DWORD PTR [rsp+0x9c],ecx
  417be1:	call   0x416f60
  417be6:	mov    QWORD PTR [rsp+0x48],rax
  417beb:	mov    eax,DWORD PTR [rbp+0xc]
  417bee:	mov    r11d,DWORD PTR [rsp+0x68]
  417bf3:	mov    r9,QWORD PTR [rsp+0x60]
  417bf8:	sub    eax,0x1
  417bfb:	mov    DWORD PTR [rsp+0x38],eax
  417bff:	jne    0x4180ad
  417c05:	mov    eax,0xffffffff
  417c0a:	mov    DWORD PTR [rsp+0x60],0x1
  417c12:	mov    DWORD PTR [rsp+0x128],0x0
  417c1d:	mov    DWORD PTR [rsp+0x8c],eax
  417c24:	mov    DWORD PTR [rsp+0x68],eax
  417c28:	jmp    0x417860
  417c2d:	xor    r12d,r12d
  417c30:	xor    edi,edi
  417c32:	mov    ebp,DWORD PTR [rsp+0x128]
  417c39:	mov    rbx,QWORD PTR [rsp+0x48]
  417c3e:	mov    r15d,0x10
  417c44:	neg    ebp
  417c46:	jmp    0x4178e4
  417c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  417c50:	mov    eax,DWORD PTR [rsp+0x30]
  417c54:	sub    DWORD PTR [rsp+0x50],eax
  417c58:	mov    DWORD PTR [rsp+0x88],0x0
  417c63:	neg    eax
  417c65:	mov    DWORD PTR [rsp+0x58],eax
  417c69:	jmp    0x417489
  417c6e:	xchg   ax,ax
  417c70:	neg    eax
  417c72:	mov    DWORD PTR [rsp+0x40],0x0
  417c7a:	mov    DWORD PTR [rsp+0x50],eax
  417c7e:	jmp    0x41746a
  417c83:	pxor   xmm0,xmm0
  417c87:	cvtsi2sd xmm0,eax
  417c8b:	ucomisd xmm0,xmm1
  417c8f:	jp     0x417c97
  417c91:	je     0x4173fb
  417c97:	sub    DWORD PTR [rsp+0x30],0x1
  417c9c:	jmp    0x4173fb
  417ca1:	mov    r10d,DWORD PTR [rsp+0x60]
  417ca6:	test   r10d,r10d
  417ca9:	je     0x417eb0
  417caf:	lea    edx,[rbx+r13*1]
  417cb3:	test   edx,edx
  417cb5:	jle    0x417cc2
  417cb7:	mov    rcx,rdi
  417cba:	call   0x418d60
  417cbf:	mov    rdi,rax
  417cc2:	test   ebp,ebp
  417cc4:	mov    r13,rdi
  417cc7:	jne    0x418365
  417ccd:	mov    DWORD PTR [rsp+0x9c],0x1
  417cd8:	mov    rbx,QWORD PTR [rsp+0x48]
  417cdd:	mov    QWORD PTR [rsp+0x40],r12
  417ce2:	mov    QWORD PTR [rsp+0x50],r15
  417ce7:	jmp    0x417dae
  417cec:	nop    DWORD PTR [rax+0x0]
  417cf0:	mov    rcx,r8
  417cf3:	call   0x418960
  417cf8:	mov    eax,r12d
  417cfb:	or     eax,DWORD PTR [rsp+0x120]
  417d02:	jne    0x417d1a
  417d04:	mov    ecx,DWORD PTR [rsp+0x38]
  417d08:	test   ecx,ecx
  417d0a:	jne    0x417d1a
  417d0c:	mov    rax,QWORD PTR [rsp+0x50]
  417d11:	test   BYTE PTR [rax],0x1
  417d14:	je     0x4184d5
  417d1a:	test   r14d,r14d
  417d1d:	js     0x418230
  417d23:	or     r14d,DWORD PTR [rsp+0x120]
  417d2b:	jne    0x417d3b
  417d2d:	mov    rax,QWORD PTR [rsp+0x50]
  417d32:	test   BYTE PTR [rax],0x1
  417d35:	je     0x418230
  417d3b:	test   r12d,r12d
  417d3e:	jle    0x417d4b
  417d40:	cmp    DWORD PTR [rsp+0x38],0x2
  417d45:	jne    0x41843f
  417d4b:	add    rbx,0x1
  417d4f:	mov    BYTE PTR [rbx-0x1],bpl
  417d53:	mov    eax,DWORD PTR [rsp+0x68]
  417d57:	cmp    DWORD PTR [rsp+0x9c],eax
  417d5e:	je     0x4183cb
  417d64:	xor    r8d,r8d
  417d67:	mov    rcx,rsi
  417d6a:	mov    edx,0xa
  417d6f:	call   0x4189d0
  417d74:	xor    r8d,r8d
  417d77:	cmp    rdi,r13
  417d7a:	mov    rsi,rax
  417d7d:	mov    edx,0xa
  417d82:	mov    rcx,rdi
  417d85:	je     0x417e20
  417d8b:	call   0x4189d0
  417d90:	mov    rcx,r13
  417d93:	xor    r8d,r8d
  417d96:	mov    edx,0xa
  417d9b:	mov    rdi,rax
  417d9e:	call   0x4189d0
  417da3:	mov    r13,rax
  417da6:	add    DWORD PTR [rsp+0x9c],0x1
  417dae:	mov    r12,QWORD PTR [rsp+0x40]
  417db3:	mov    rcx,rsi
  417db6:	mov    rdx,r12
  417db9:	call   0x417000
  417dbe:	mov    rdx,rdi
  417dc1:	mov    rcx,rsi
  417dc4:	mov    r15d,eax
  417dc7:	lea    ebp,[rax+0x30]
  417dca:	call   0x418e80
  417dcf:	mov    rcx,r12
  417dd2:	mov    rdx,r13
  417dd5:	mov    r14d,eax
  417dd8:	call   0x418ed0
  417ddd:	mov    r9d,DWORD PTR [rax+0x10]
  417de1:	mov    r8,rax
  417de4:	mov    r12d,0x1
  417dea:	test   r9d,r9d
  417ded:	jne    0x417cf0
  417df3:	mov    rdx,rax
  417df6:	mov    rcx,rsi
  417df9:	mov    QWORD PTR [rsp+0x58],rax
  417dfe:	call   0x418e80
  417e03:	mov    r8,QWORD PTR [rsp+0x58]
  417e08:	mov    r12d,eax
  417e0b:	jmp    0x417cf0
  417e10:	mov    r12d,DWORD PTR [rsp+0x58]
  417e15:	mov    ebx,DWORD PTR [rsp+0x50]
  417e19:	xor    edi,edi
  417e1b:	jmp    0x4179bf
  417e20:	call   0x4189d0
  417e25:	mov    rdi,rax
  417e28:	mov    r13,rax
  417e2b:	jmp    0x417da6
  417e30:	mov    edx,DWORD PTR [rsp+0x58]
  417e34:	mov    rcx,rsi
  417e37:	call   0x418bf0
  417e3c:	mov    rsi,rax
  417e3f:	jmp    0x417a3b
  417e44:	mov    DWORD PTR [rsp+0x60],0x0
  417e4c:	jmp    0x4174e7
  417e51:	mov    rdx,r12
  417e54:	mov    rcx,rsi
  417e57:	call   0x418e80
  417e5c:	test   eax,eax
  417e5e:	jns    0x417ae0
  417e64:	xor    r8d,r8d
  417e67:	mov    rcx,rsi
  417e6a:	mov    edx,0xa
  417e6f:	sub    DWORD PTR [rsp+0x30],0x1
  417e74:	call   0x4189d0
  417e79:	mov    rsi,rax
  417e7c:	mov    eax,DWORD PTR [rsp+0x60]
  417e80:	test   eax,eax
  417e82:	jne    0x418548
  417e88:	mov    eax,DWORD PTR [rsp+0x8c]
  417e8f:	test   eax,eax
  417e91:	jg     0x417ea5
  417e93:	cmp    DWORD PTR [rsp+0x120],0x2
  417e9b:	mov    DWORD PTR [rsp+0x68],eax
  417e9f:	jg     0x417afc
  417ea5:	mov    eax,DWORD PTR [rsp+0x8c]
  417eac:	mov    DWORD PTR [rsp+0x68],eax
  417eb0:	mov    DWORD PTR [rsp+0x9c],0x1
  417ebb:	mov    rbx,QWORD PTR [rsp+0x48]
  417ec0:	mov    r13d,DWORD PTR [rsp+0x68]
  417ec5:	jmp    0x417eeb
  417ec7:	nop    WORD PTR [rax+rax*1+0x0]
  417ed0:	mov    rcx,rsi
  417ed3:	xor    r8d,r8d
  417ed6:	mov    edx,0xa
  417edb:	call   0x4189d0
  417ee0:	add    DWORD PTR [rsp+0x9c],0x1
  417ee8:	mov    rsi,rax
  417eeb:	mov    rdx,r12
  417eee:	mov    rcx,rsi
  417ef1:	add    rbx,0x1
  417ef5:	call   0x417000
  417efa:	lea    ebp,[rax+0x30]
  417efd:	mov    BYTE PTR [rbx-0x1],bpl
  417f01:	cmp    DWORD PTR [rsp+0x9c],r13d
  417f09:	jl     0x417ed0
  417f0b:	xor    r14d,r14d
  417f0e:	mov    eax,DWORD PTR [rsp+0x38]
  417f12:	test   eax,eax
  417f14:	je     0x4182dc
  417f1a:	cmp    eax,0x2
  417f1d:	je     0x41830c
  417f23:	cmp    DWORD PTR [rsi+0x14],0x1
  417f27:	jle    0x4184a3
  417f2d:	movzx  edx,BYTE PTR [rbx-0x1]
  417f31:	mov    rcx,QWORD PTR [rsp+0x48]
  417f36:	jmp    0x417f50
  417f38:	nop    DWORD PTR [rax+rax*1+0x0]
  417f40:	cmp    rax,rcx
  417f43:	je     0x4180fc
  417f49:	movzx  edx,BYTE PTR [rax-0x1]
  417f4d:	mov    rbx,rax
  417f50:	cmp    dl,0x39
  417f53:	lea    rax,[rbx-0x1]
  417f57:	je     0x417f40
  417f59:	add    edx,0x1
  417f5c:	mov    r15d,0x20
  417f62:	mov    BYTE PTR [rax],dl
  417f64:	mov    rcx,r12
  417f67:	call   0x418960
  417f6c:	test   rdi,rdi
  417f6f:	je     0x41805f
  417f75:	cmp    r14,rdi
  417f78:	je     0x417f87
  417f7a:	test   r14,r14
  417f7d:	je     0x417f87
  417f7f:	mov    rcx,r14
  417f82:	call   0x418960
  417f87:	mov    ebp,DWORD PTR [rsp+0x30]
  417f8b:	add    ebp,0x1
  417f8e:	jmp    0x4178f5
  417f93:	mov    QWORD PTR [rsp+0x40],r9
  417f98:	mov    rdi,QWORD PTR [rsp+0x48]
  417f9d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  417fa3:	mov    DWORD PTR [rsp+0x9c],0x1
  417fae:	movapd xmm1,xmm0
  417fb2:	mov    rbx,rdi
  417fb5:	add    rbx,0x1
  417fb9:	divsd  xmm1,xmm2
  417fbd:	cvttsd2si eax,xmm1
  417fc1:	pxor   xmm1,xmm1
  417fc5:	cvtsi2sd xmm1,eax
  417fc9:	lea    edx,[rax+0x30]
  417fcc:	mov    BYTE PTR [rdi],dl
  417fce:	mulsd  xmm1,xmm2
  417fd2:	subsd  xmm0,xmm1
  417fd6:	ucomisd xmm0,xmm6
  417fda:	jp     0x417fde
  417fdc:	je     0x418050
  417fde:	mov    edx,DWORD PTR [rsp+0x9c]
  417fe5:	cmp    DWORD PTR [rsp+0x68],edx
  417fe9:	je     0x4180d7
  417fef:	movsd  xmm3,QWORD PTR [rip+0xd879]        # 0x425870
  417ff7:	movapd xmm4,xmm6
  417ffb:	mov    ecx,DWORD PTR [rsp+0x68]
  417fff:	jmp    0x418010
  418001:	mov    edx,DWORD PTR [rsp+0x9c]
  418008:	cmp    ecx,edx
  41800a:	je     0x4180d7
  418010:	mulsd  xmm0,xmm3
  418014:	add    edx,0x1
  418017:	add    rbx,0x1
  41801b:	mov    DWORD PTR [rsp+0x9c],edx
  418022:	movapd xmm1,xmm0
  418026:	divsd  xmm1,xmm2
  41802a:	cvttsd2si eax,xmm1
  41802e:	pxor   xmm1,xmm1
  418032:	cvtsi2sd xmm1,eax
  418036:	lea    edx,[rax+0x30]
  418039:	mov    BYTE PTR [rbx-0x1],dl
  41803c:	mulsd  xmm1,xmm2
  418040:	subsd  xmm0,xmm1
  418044:	ucomisd xmm0,xmm6
  418048:	jp     0x418001
  41804a:	ucomisd xmm0,xmm4
  41804e:	jne    0x418001
  418050:	mov    ebp,DWORD PTR [rsp+0x30]
  418054:	add    ebp,0x1
  418057:	xor    r15d,r15d
  41805a:	jmp    0x417710
  41805f:	mov    ebp,DWORD PTR [rsp+0x30]
  418063:	add    ebp,0x1
  418066:	jmp    0x417710
  41806b:	mov    ebx,0x1
  418070:	mov    DWORD PTR [rsp+0x128],0x1
  41807b:	jmp    0x4177ca
  418080:	cmp    DWORD PTR [rsp+0x68],0xe
  418085:	mov    DWORD PTR [rsp+0x9c],0x1
  418090:	mov    ecx,0x1
  418095:	setbe  bl
  418098:	and    ebx,eax
  41809a:	jmp    0x417519
  41809f:	mov    r12d,DWORD PTR [rsp+0x58]
  4180a4:	mov    ebx,DWORD PTR [rsp+0x50]
  4180a8:	jmp    0x4179aa
  4180ad:	mov    eax,0xffffffff
  4180b2:	xor    ebx,ebx
  4180b4:	mov    DWORD PTR [rsp+0x60],0x1
  4180bc:	mov    DWORD PTR [rsp+0x8c],eax
  4180c3:	mov    DWORD PTR [rsp+0x68],eax
  4180c7:	mov    DWORD PTR [rsp+0x128],0x0
  4180d2:	jmp    0x417543
  4180d7:	mov    r10d,DWORD PTR [rsp+0x38]
  4180dc:	test   r10d,r10d
  4180df:	je     0x41839e
  4180e5:	cmp    DWORD PTR [rsp+0x38],0x1
  4180ea:	je     0x418491
  4180f0:	mov    ebp,DWORD PTR [rsp+0x30]
  4180f4:	add    ebp,0x1
  4180f7:	jmp    0x417703
  4180fc:	mov    rax,QWORD PTR [rsp+0x48]
  418101:	add    DWORD PTR [rsp+0x30],0x1
  418106:	mov    r15d,0x20
  41810c:	mov    BYTE PTR [rax],0x31
  41810f:	jmp    0x417f64
  418114:	mov    ebp,0x2
  418119:	xor    r12d,r12d
  41811c:	xor    edi,edi
  41811e:	jmp    0x4178d2
  418123:	mov    r10,QWORD PTR [rip+0xda66]        # 0x425b90
  41812a:	mov    QWORD PTR [rsp+0x38],rax
  41812f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  418135:	mov    DWORD PTR [rsp+0x9c],0x1
  418140:	mov    rbx,QWORD PTR [rsp+0x48]
  418145:	movsd  xmm1,QWORD PTR [rip+0xd723]        # 0x425870
  41814d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  418153:	jmp    0x418163
  418155:	mulsd  xmm0,xmm1
  418159:	add    edx,0x1
  41815c:	mov    DWORD PTR [rsp+0x9c],edx
  418163:	cvttsd2si eax,xmm0
  418167:	test   eax,eax
  418169:	je     0x418177
  41816b:	pxor   xmm2,xmm2
  41816f:	cvtsi2sd xmm2,eax
  418173:	subsd  xmm0,xmm2
  418177:	add    rbx,0x1
  41817b:	add    eax,0x30
  41817e:	mov    BYTE PTR [rbx-0x1],al
  418181:	mov    edx,DWORD PTR [rsp+0x9c]
  418188:	cmp    edx,r9d
  41818b:	jne    0x418155
  41818d:	movsd  xmm1,QWORD PTR [rip+0xd70b]        # 0x4258a0
  418195:	movapd xmm2,xmm3
  418199:	addsd  xmm2,xmm1
  41819d:	ucomisd xmm0,xmm2
  4181a1:	ja     0x4181f7
  4181a3:	subsd  xmm1,xmm3
  4181a7:	ucomisd xmm1,xmm0
  4181ab:	jbe    0x41784e
  4181b1:	ucomisd xmm0,xmm6
  4181b5:	jp     0x41853d
  4181bb:	jne    0x41853d
  4181c1:	xor    r15d,r15d
  4181c4:	jmp    0x4181d7
  4181c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4181d0:	movzx  eax,BYTE PTR [rbx-0x2]
  4181d4:	mov    rbx,rdx
  4181d7:	cmp    al,0x30
  4181d9:	lea    rdx,[rbx-0x1]
  4181dd:	je     0x4181d0
  4181df:	lea    ebp,[rcx+0x1]
  4181e2:	jmp    0x417710
  4181e7:	test   al,0x1
  4181e9:	mov    ecx,DWORD PTR [rsp+0x30]
  4181ed:	movzx  eax,BYTE PTR [rbx-0x1]
  4181f1:	je     0x41853d
  4181f7:	mov    r8,QWORD PTR [rsp+0x48]
  4181fc:	jmp    0x418210
  4181fe:	xchg   ax,ax
  418200:	cmp    rdx,r8
  418203:	je     0x41834c
  418209:	movzx  eax,BYTE PTR [rdx-0x1]
  41820d:	mov    rbx,rdx
  418210:	cmp    al,0x39
  418212:	lea    rdx,[rbx-0x1]
  418216:	je     0x418200
  418218:	mov    QWORD PTR [rsp+0x48],r8
  41821d:	add    eax,0x1
  418220:	mov    BYTE PTR [rdx],al
  418222:	lea    ebp,[rcx+0x1]
  418225:	mov    r15d,0x20
  41822b:	jmp    0x417710
  418230:	mov    edx,DWORD PTR [rsp+0x38]
  418234:	mov    eax,r12d
  418237:	mov    r14d,ebp
  41823a:	mov    r12,QWORD PTR [rsp+0x40]
  41823f:	test   edx,edx
  418241:	je     0x418471
  418247:	cmp    DWORD PTR [rsi+0x14],0x1
  41824b:	jle    0x418467
  418251:	cmp    DWORD PTR [rsp+0x38],0x2
  418256:	jne    0x4182a7
  418258:	jmp    0x418486
  41825d:	nop    DWORD PTR [rax]
  418260:	add    rbx,0x1
  418264:	xor    r8d,r8d
  418267:	mov    rcx,r13
  41826a:	mov    BYTE PTR [rbx-0x1],r14b
  41826e:	mov    edx,0xa
  418273:	call   0x4189d0
  418278:	cmp    rdi,r13
  41827b:	mov    rcx,rsi
  41827e:	mov    edx,0xa
  418283:	cmove  rdi,rax
  418287:	xor    r8d,r8d
  41828a:	mov    rbp,rax
  41828d:	call   0x4189d0
  418292:	mov    rdx,r12
  418295:	mov    rcx,rax
  418298:	mov    rsi,rax
  41829b:	call   0x417000
  4182a0:	lea    r14d,[rax+0x30]
  4182a4:	mov    r13,rbp
  4182a7:	mov    rdx,r13
  4182aa:	mov    rcx,r12
  4182ad:	call   0x418e80
  4182b2:	test   eax,eax
  4182b4:	jg     0x418260
  4182b6:	cmp    r14d,0x39
  4182ba:	je     0x4184b6
  4182c0:	add    r14d,0x1
  4182c4:	mov    r15d,0x20
  4182ca:	mov    BYTE PTR [rbx],r14b
  4182cd:	mov    r14,rdi
  4182d0:	add    rbx,0x1
  4182d4:	mov    rdi,r13
  4182d7:	jmp    0x417f64
  4182dc:	mov    rcx,rsi
  4182df:	mov    edx,0x1
  4182e4:	call   0x418d60
  4182e9:	mov    rdx,r12
  4182ec:	mov    rcx,rax
  4182ef:	mov    rsi,rax
  4182f2:	call   0x418e80
  4182f7:	cmp    eax,0x0
  4182fa:	jg     0x417f2d
  418300:	jne    0x41830c
  418302:	and    bpl,0x1
  418306:	jne    0x417f2d
  41830c:	cmp    DWORD PTR [rsi+0x14],0x1
  418310:	mov    r15d,0x10
  418316:	jg     0x418323
  418318:	jmp    0x4185ad
  41831d:	nop    DWORD PTR [rax]
  418320:	mov    rbx,rax
  418323:	cmp    BYTE PTR [rbx-0x1],0x30
  418327:	lea    rax,[rbx-0x1]
  41832b:	je     0x418320
  41832d:	jmp    0x417f64
  418332:	mov    ebx,DWORD PTR [rsp+0x50]
  418336:	mov    DWORD PTR [rsp+0x9c],0x0
  418341:	xor    eax,eax
  418343:	sub    ebx,DWORD PTR [rsp+0x68]
  418347:	jmp    0x4179aa
  41834c:	mov    QWORD PTR [rsp+0x48],r8
  418351:	add    ecx,0x1
  418354:	mov    BYTE PTR [r8],0x30
  418358:	mov    rdx,r8
  41835b:	mov    eax,0x31
  418360:	jmp    0x418220
  418365:	mov    ecx,DWORD PTR [rdi+0x8]
  418368:	call   0x418850
  41836d:	lea    rcx,[rax+0x10]
  418371:	mov    rbx,rax
  418374:	movsxd rax,DWORD PTR [rdi+0x14]
  418378:	lea    rdx,[rdi+0x10]
  41837c:	lea    r8,[rax*4+0x8]
  418384:	call   0x419880
  418389:	mov    edx,0x1
  41838e:	mov    rcx,rbx
  418391:	call   0x418d60
  418396:	mov    r13,rax
  418399:	jmp    0x417ccd
  41839e:	addsd  xmm0,xmm0
  4183a2:	ucomisd xmm0,xmm2
  4183a6:	ja     0x418491
  4183ac:	ucomisd xmm2,xmm0
  4183b0:	jp     0x4183b8
  4183b2:	je     0x4181e7
  4183b8:	movzx  eax,BYTE PTR [rbx-0x1]
  4183bc:	mov    ecx,DWORD PTR [rsp+0x30]
  4183c0:	mov    r15d,0x10
  4183c6:	jmp    0x4181d7
  4183cb:	mov    r14,rdi
  4183ce:	mov    r12,QWORD PTR [rsp+0x40]
  4183d3:	mov    rdi,r13
  4183d6:	jmp    0x417f0e
  4183db:	mov    eax,DWORD PTR [rsp+0x68]
  4183df:	test   eax,eax
  4183e1:	je     0x4177ea
  4183e7:	mov    r9d,DWORD PTR [rsp+0x8c]
  4183ef:	test   r9d,r9d
  4183f2:	jle    0x41784e
  4183f8:	movsd  xmm0,QWORD PTR [rip+0xd470]        # 0x425870
  418400:	mov    ecx,0xffffffff
  418405:	movsd  xmm1,QWORD PTR [rip+0xd46b]        # 0x425878
  41840d:	mulsd  xmm0,xmm4
  418411:	mulsd  xmm1,xmm0
  418415:	addsd  xmm1,QWORD PTR [rip+0xd463]        # 0x425880
  41841d:	movq   rdx,xmm1
  418422:	movq   rax,xmm1
  418427:	shr    rdx,0x20
  41842b:	mov    eax,eax
  41842d:	sub    edx,0x3400000
  418433:	shl    rdx,0x20
  418437:	or     rax,rdx
  41843a:	jmp    0x4175f2
  41843f:	cmp    ebp,0x39
  418442:	mov    r12,QWORD PTR [rsp+0x40]
  418447:	mov    rax,rbx
  41844a:	je     0x4184b9
  41844c:	add    ebp,0x1
  41844f:	mov    r14,rdi
  418452:	add    rbx,0x1
  418456:	mov    BYTE PTR [rax],bpl
  418459:	mov    rdi,r13
  41845c:	mov    r15d,0x20
  418462:	jmp    0x417f64
  418467:	cmp    DWORD PTR [rsi+0x18],0x0
  41846b:	jne    0x418251
  418471:	test   eax,eax
  418473:	jg     0x418509
  418479:	xor    r15d,r15d
  41847c:	cmp    DWORD PTR [rsi+0x14],0x1
  418480:	jle    0x418588
  418486:	mov    r15d,0x10
  41848c:	jmp    0x4182ca
  418491:	movzx  eax,BYTE PTR [rbx-0x1]
  418495:	mov    ecx,DWORD PTR [rsp+0x30]
  418499:	mov    r8,QWORD PTR [rsp+0x48]
  41849e:	jmp    0x418210
  4184a3:	mov    eax,DWORD PTR [rsi+0x18]
  4184a6:	test   eax,eax
  4184a8:	jne    0x417f2d
  4184ae:	xor    r15d,r15d
  4184b1:	jmp    0x418323
  4184b6:	mov    rax,rbx
  4184b9:	mov    r14,rdi
  4184bc:	add    rbx,0x1
  4184c0:	mov    rdi,r13
  4184c3:	mov    BYTE PTR [rax],0x39
  4184c6:	mov    edx,0x39
  4184cb:	mov    rcx,QWORD PTR [rsp+0x48]
  4184d0:	jmp    0x417f50
  4184d5:	cmp    ebp,0x39
  4184d8:	mov    r12,QWORD PTR [rsp+0x40]
  4184dd:	mov    rax,rbx
  4184e0:	je     0x4184b6
  4184e2:	test   r14d,r14d
  4184e5:	jle    0x4185c0
  4184eb:	mov    ebp,r15d
  4184ee:	mov    r15d,0x20
  4184f4:	add    ebp,0x31
  4184f7:	mov    r14,rdi
  4184fa:	add    rbx,0x1
  4184fe:	mov    BYTE PTR [rax],bpl
  418501:	mov    rdi,r13
  418504:	jmp    0x417f64
  418509:	mov    rcx,rsi
  41850c:	mov    edx,0x1
  418511:	call   0x418d60
  418516:	mov    rdx,r12
  418519:	mov    rcx,rax
  41851c:	mov    rsi,rax
  41851f:	call   0x418e80
  418524:	cmp    eax,0x0
  418527:	jle    0x41859a
  418529:	cmp    ebp,0x39
  41852c:	je     0x4184b6
  41852e:	lea    r14d,[rbp+0x1]
  418532:	mov    r15d,0x20
  418538:	jmp    0x41847c
  41853d:	mov    r15d,0x10
  418543:	jmp    0x4181d7
  418548:	xor    r8d,r8d
  41854b:	mov    rcx,rdi
  41854e:	mov    edx,0xa
  418553:	call   0x4189d0
  418558:	mov    rdi,rax
  41855b:	mov    eax,DWORD PTR [rsp+0x8c]
  418562:	test   eax,eax
  418564:	jg     0x418578
  418566:	cmp    DWORD PTR [rsp+0x120],0x2
  41856e:	mov    DWORD PTR [rsp+0x68],eax
  418572:	jg     0x417afc
  418578:	mov    eax,DWORD PTR [rsp+0x8c]
  41857f:	mov    DWORD PTR [rsp+0x68],eax
  418583:	jmp    0x417caf
  418588:	cmp    DWORD PTR [rsi+0x18],0x0
  41858c:	mov    eax,0x10
  418591:	cmovne r15d,eax
  418595:	jmp    0x4182ca
  41859a:	jne    0x4185a2
  41859c:	test   bpl,0x1
  4185a0:	jne    0x418529
  4185a2:	mov    r15d,0x20
  4185a8:	jmp    0x41847c
  4185ad:	cmp    DWORD PTR [rsi+0x18],0x1
  4185b1:	sbb    r15d,r15d
  4185b4:	not    r15d
  4185b7:	and    r15d,0x10
  4185bb:	jmp    0x418323
  4185c0:	cmp    DWORD PTR [rsi+0x14],0x1
  4185c4:	mov    r15d,0x10
  4185ca:	jg     0x4184f7
  4185d0:	cmp    DWORD PTR [rsi+0x18],0x1
  4185d4:	sbb    r15d,r15d
  4185d7:	not    r15d
  4185da:	and    r15d,0x10
  4185de:	jmp    0x4184f7
  4185e3:	xor    eax,eax
  4185e5:	jmp    0x4172c7
  4185ea:	nop
  4185eb:	nop
  4185ec:	nop
  4185ed:	nop
  4185ee:	nop
  4185ef:	nop
  4185f0:	push   rbp
  4185f1:	push   rdi
  4185f2:	push   rsi
  4185f3:	push   rbx
  4185f4:	mov    rsi,rcx
  4185f7:	lea    r10,[rcx+0x18]
  4185fb:	movsxd rcx,DWORD PTR [rcx+0x14]
  4185ff:	mov    eax,edx
  418601:	sar    eax,0x5
  418604:	cmp    eax,ecx
  418606:	jge    0x418690
  41860c:	cdqe   
  41860e:	and    edx,0x1f
  418611:	lea    rbx,[r10+rcx*4]
  418615:	lea    rdi,[r10+rax*4]
  418619:	je     0x4186a3
  41861f:	mov    r9d,DWORD PTR [rdi]
  418622:	lea    r8,[rdi+0x4]
  418626:	mov    ebp,0x20
  41862b:	mov    ecx,edx
  41862d:	sub    ebp,edx
  41862f:	shr    r9d,cl
  418632:	cmp    rbx,r8
  418635:	jbe    0x4186e8
  41863b:	mov    r11,r10
  41863e:	xchg   ax,ax
  418640:	mov    eax,DWORD PTR [r8]
  418643:	mov    ecx,ebp
  418645:	add    r11,0x4
  418649:	add    r8,0x4
  41864d:	shl    eax,cl
  41864f:	mov    ecx,edx
  418651:	or     eax,r9d
  418654:	mov    DWORD PTR [r11-0x4],eax
  418658:	mov    r9d,DWORD PTR [r8-0x4]
  41865c:	shr    r9d,cl
  41865f:	cmp    rbx,r8
  418662:	ja     0x418640
  418664:	sub    rbx,rdi
  418667:	lea    rax,[rbx-0x5]
  41866b:	shr    rax,0x2
  41866f:	lea    rax,[r10+rax*4+0x4]
  418674:	test   r9d,r9d
  418677:	mov    DWORD PTR [rax],r9d
  41867a:	je     0x418680
  41867c:	add    rax,0x4
  418680:	sub    rax,r10
  418683:	shr    rax,0x2
  418687:	jmp    0x4186dc
  418689:	nop    DWORD PTR [rax+0x0]
  418690:	mov    DWORD PTR [rsi+0x14],0x0
  418697:	mov    DWORD PTR [rsi+0x18],0x0
  41869e:	pop    rbx
  41869f:	pop    rsi
  4186a0:	pop    rdi
  4186a1:	pop    rbp
  4186a2:	ret    
  4186a3:	cmp    rbx,rdi
  4186a6:	mov    rdx,r10
  4186a9:	mov    rax,rdi
  4186ac:	jbe    0x418690
  4186ae:	xchg   ax,ax
  4186b0:	add    rax,0x4
  4186b4:	mov    r8d,DWORD PTR [rax-0x4]
  4186b8:	add    rdx,0x4
  4186bc:	cmp    rbx,rax
  4186bf:	mov    DWORD PTR [rdx-0x4],r8d
  4186c3:	ja     0x4186b0
  4186c5:	not    rdi
  4186c8:	lea    rax,[rdi+rbx*1]
  4186cc:	shr    rax,0x2
  4186d0:	lea    rax,[rax*4+0x4]
  4186d8:	shr    rax,0x2
  4186dc:	test   eax,eax
  4186de:	mov    DWORD PTR [rsi+0x14],eax
  4186e1:	je     0x418697
  4186e3:	pop    rbx
  4186e4:	pop    rsi
  4186e5:	pop    rdi
  4186e6:	pop    rbp
  4186e7:	ret    
  4186e8:	mov    rax,r10
  4186eb:	jmp    0x418674
  4186ed:	nop    DWORD PTR [rax]
  4186f0:	movsxd rax,DWORD PTR [rcx+0x14]
  4186f4:	lea    rdx,[rcx+0x18]
  4186f8:	lea    r8,[rdx+rax*4]
  4186fc:	cmp    rdx,r8
  4186ff:	jae    0x41872b
  418701:	mov    ecx,DWORD PTR [rcx+0x18]
  418704:	xor    eax,eax
  418706:	test   ecx,ecx
  418708:	je     0x418716
  41870a:	jmp    0x418724
  41870c:	nop    DWORD PTR [rax+0x0]
  418710:	mov    ecx,DWORD PTR [rdx]
  418712:	test   ecx,ecx
  418714:	jne    0x418724
  418716:	add    rdx,0x4
  41871a:	add    eax,0x20
  41871d:	cmp    r8,rdx
  418720:	ja     0x418710
  418722:	repz ret 
  418724:	tzcnt  ecx,ecx
  418728:	add    eax,ecx
  41872a:	ret    
  41872b:	xor    eax,eax
  41872d:	ret    
  41872e:	nop
  41872f:	nop
  418730:	push   rsi
  418731:	push   rbx
  418732:	sub    rsp,0x28
  418736:	mov    eax,DWORD PTR [rip+0x11fd4]        # 0x42a710
  41873c:	movsxd rsi,ecx
  41873f:	cmp    eax,0x2
  418742:	je     0x4187ad
  418744:	test   eax,eax
  418746:	je     0x418772
  418748:	cmp    eax,0x1
  41874b:	jne    0x41876b
  41874d:	mov    rbx,QWORD PTR [rip+0x13328]        # 0x42ba7c
  418754:	mov    ecx,0x1
  418759:	call   rbx
  41875b:	mov    eax,DWORD PTR [rip+0x11faf]        # 0x42a710
  418761:	cmp    eax,0x1
  418764:	je     0x418754
  418766:	cmp    eax,0x2
  418769:	je     0x4187ad
  41876b:	add    rsp,0x28
  41876f:	pop    rbx
  418770:	pop    rsi
  418771:	ret    
  418772:	mov    al,0x1
  418774:	xchg   DWORD PTR [rip+0x11f96],eax        # 0x42a710
  41877a:	test   eax,eax
  41877c:	jne    0x4187d0
  41877e:	lea    rcx,[rip+0x11fbb]        # 0x42a740
  418785:	mov    rbx,QWORD PTR [rip+0x13290]        # 0x42ba1c
  41878c:	call   rbx
  41878e:	lea    rcx,[rip+0x11fd3]        # 0x42a768
  418795:	call   rbx
  418797:	lea    rcx,[rip+0x62]        # 0x418800
  41879e:	call   0x412570
  4187a3:	mov    DWORD PTR [rip+0x11f63],0x2        # 0x42a710
  4187ad:	lea    rdx,[rsi+rsi*4]
  4187b1:	lea    rax,[rip+0x11f88]        # 0x42a740
  4187b8:	lea    rcx,[rax+rdx*8]
  4187bc:	mov    rax,QWORD PTR [rip+0x131f1]        # 0x42b9b4
  4187c3:	add    rsp,0x28
  4187c7:	pop    rbx
  4187c8:	pop    rsi
  4187c9:	rex.W jmp rax
  4187cc:	nop    DWORD PTR [rax+0x0]
  4187d0:	cmp    eax,0x2
  4187d3:	je     0x4187f0
  4187d5:	mov    eax,DWORD PTR [rip+0x11f35]        # 0x42a710
  4187db:	cmp    eax,0x1
  4187de:	je     0x41874d
  4187e4:	jmp    0x418766
  4187e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4187f0:	mov    DWORD PTR [rip+0x11f16],0x2        # 0x42a710
  4187fa:	jmp    0x4187ad
  4187fc:	nop    DWORD PTR [rax+0x0]
  418800:	push   rbx
  418801:	sub    rsp,0x20
  418805:	mov    eax,0x3
  41880a:	xchg   DWORD PTR [rip+0x11f00],eax        # 0x42a710
  418810:	cmp    eax,0x2
  418813:	je     0x418820
  418815:	add    rsp,0x20
  418819:	pop    rbx
  41881a:	ret    
  41881b:	nop    DWORD PTR [rax+rax*1+0x0]
  418820:	mov    rbx,QWORD PTR [rip+0x13185]        # 0x42b9ac
  418827:	lea    rcx,[rip+0x11f12]        # 0x42a740
  41882e:	call   rbx
  418830:	lea    rcx,[rip+0x11f31]        # 0x42a768
  418837:	mov    rax,rbx
  41883a:	add    rsp,0x20
  41883e:	pop    rbx
  41883f:	rex.W jmp rax
  418842:	nop    DWORD PTR [rax+0x0]
  418846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418850:	push   rdi
  418851:	push   rsi
  418852:	push   rbx
  418853:	sub    rsp,0x20
  418857:	mov    ebx,ecx
  418859:	xor    ecx,ecx
  41885b:	call   0x418730
  418860:	cmp    ebx,0x9
  418863:	jg     0x4188a0
  418865:	lea    rdx,[rip+0x11e54]        # 0x42a6c0
  41886c:	movsxd rcx,ebx
  41886f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  418873:	test   rdi,rdi
  418876:	je     0x418900
  41887c:	cmp    DWORD PTR [rip+0x11e8d],0x2        # 0x42a710
  418883:	mov    r8,QWORD PTR [rdi]
  418886:	mov    QWORD PTR [rdx+rcx*8],r8
  41888a:	jne    0x4188e6
  41888c:	lea    rcx,[rip+0x11ead]        # 0x42a740
  418893:	call   QWORD PTR [rip+0x13193]        # 0x42ba2c
  418899:	jmp    0x4188e6
  41889b:	nop    DWORD PTR [rax+rax*1+0x0]
  4188a0:	mov    eax,0x1
  4188a5:	mov    ecx,ebx
  4188a7:	shl    eax,cl
  4188a9:	mov    esi,eax
  4188ab:	lea    eax,[rax-0x1]
  4188ae:	cdqe   
  4188b0:	lea    rdx,[rax*4+0x27]
  4188b8:	shr    rdx,0x3
  4188bc:	mov    edx,edx
  4188be:	lea    rcx,[rdx*8+0x0]
  4188c6:	call   0x419888
  4188cb:	test   rax,rax
  4188ce:	mov    rdi,rax
  4188d1:	je     0x41895a
  4188d7:	cmp    DWORD PTR [rip+0x11e32],0x2        # 0x42a710
  4188de:	mov    DWORD PTR [rdi+0x8],ebx
  4188e1:	mov    DWORD PTR [rdi+0xc],esi
  4188e4:	je     0x41888c
  4188e6:	mov    DWORD PTR [rdi+0x14],0x0
  4188ed:	mov    DWORD PTR [rdi+0x10],0x0
  4188f4:	mov    rax,rdi
  4188f7:	add    rsp,0x20
  4188fb:	pop    rbx
  4188fc:	pop    rsi
  4188fd:	pop    rdi
  4188fe:	ret    
  4188ff:	nop
  418900:	mov    ecx,ebx
  418902:	mov    eax,0x1
  418907:	mov    rdi,QWORD PTR [rip+0x57a2]        # 0x41e0b0
  41890e:	shl    eax,cl
  418910:	lea    rcx,[rip+0x114a9]        # 0x429dc0
  418917:	lea    edx,[rax-0x1]
  41891a:	mov    esi,eax
  41891c:	mov    rax,rdi
  41891f:	movsxd rdx,edx
  418922:	sub    rax,rcx
  418925:	lea    rdx,[rdx*4+0x27]
  41892d:	mov    rcx,rax
  418930:	sar    rcx,0x3
  418934:	shr    rdx,0x3
  418938:	mov    edx,edx
  41893a:	add    rcx,rdx
  41893d:	cmp    rcx,0x120
  418944:	ja     0x4188be
  41894a:	lea    rdx,[rdi+rdx*8]
  41894e:	mov    QWORD PTR [rip+0x575b],rdx        # 0x41e0b0
  418955:	jmp    0x4188d7
  41895a:	xor    eax,eax
  41895c:	jmp    0x4188f7
  41895e:	xchg   ax,ax
  418960:	push   rbx
  418961:	sub    rsp,0x20
  418965:	test   rcx,rcx
  418968:	je     0x418999
  41896a:	cmp    DWORD PTR [rcx+0x8],0x9
  41896e:	jg     0x4189a0
  418970:	mov    rbx,rcx
  418973:	xor    ecx,ecx
  418975:	call   0x418730
  41897a:	movsxd rdx,DWORD PTR [rbx+0x8]
  41897e:	lea    rax,[rip+0x11d3b]        # 0x42a6c0
  418985:	cmp    DWORD PTR [rip+0x11d84],0x2        # 0x42a710
  41898c:	mov    rcx,QWORD PTR [rax+rdx*8]
  418990:	mov    QWORD PTR [rax+rdx*8],rbx
  418994:	mov    QWORD PTR [rbx],rcx
  418997:	je     0x4189b0
  418999:	add    rsp,0x20
  41899d:	pop    rbx
  41899e:	ret    
  41899f:	nop
  4189a0:	add    rsp,0x20
  4189a4:	pop    rbx
  4189a5:	jmp    0x4198d0
  4189aa:	nop    WORD PTR [rax+rax*1+0x0]
  4189b0:	mov    rax,QWORD PTR [rip+0x13075]        # 0x42ba2c
  4189b7:	lea    rcx,[rip+0x11d82]        # 0x42a740
  4189be:	add    rsp,0x20
  4189c2:	pop    rbx
  4189c3:	rex.W jmp rax
  4189c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4189d0:	push   rbp
  4189d1:	push   rdi
  4189d2:	push   rsi
  4189d3:	push   rbx
  4189d4:	sub    rsp,0x28
  4189d8:	mov    esi,DWORD PTR [rcx+0x14]
  4189db:	xor    r9d,r9d
  4189de:	lea    r10,[rcx+0x18]
  4189e2:	mov    rdi,rcx
  4189e5:	movsxd rbx,r8d
  4189e8:	movsxd rdx,edx
  4189eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4189f0:	mov    eax,DWORD PTR [r10+r9*4]
  4189f4:	imul   rax,rdx
  4189f8:	add    rax,rbx
  4189fb:	mov    rbx,rax
  4189fe:	mov    DWORD PTR [r10+r9*4],eax
  418a02:	add    r9,0x1
  418a06:	shr    rbx,0x20
  418a0a:	cmp    esi,r9d
  418a0d:	jg     0x4189f0
  418a0f:	test   rbx,rbx
  418a12:	mov    rax,rdi
  418a15:	je     0x418a2c
  418a17:	cmp    esi,DWORD PTR [rdi+0xc]
  418a1a:	jge    0x418a35
  418a1c:	movsxd rax,esi
  418a1f:	add    esi,0x1
  418a22:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  418a26:	mov    DWORD PTR [rdi+0x14],esi
  418a29:	mov    rax,rdi
  418a2c:	add    rsp,0x28
  418a30:	pop    rbx
  418a31:	pop    rsi
  418a32:	pop    rdi
  418a33:	pop    rbp
  418a34:	ret    
  418a35:	mov    eax,DWORD PTR [rdi+0x8]
  418a38:	lea    ecx,[rax+0x1]
  418a3b:	call   0x418850
  418a40:	test   rax,rax
  418a43:	mov    rbp,rax
  418a46:	je     0x418a7e
  418a48:	lea    rcx,[rax+0x10]
  418a4c:	movsxd rax,DWORD PTR [rdi+0x14]
  418a50:	lea    rdx,[rdi+0x10]
  418a54:	lea    r8,[rax*4+0x8]
  418a5c:	call   0x419880
  418a61:	mov    rcx,rdi
  418a64:	mov    rdi,rbp
  418a67:	call   0x418960
  418a6c:	movsxd rax,esi
  418a6f:	add    esi,0x1
  418a72:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  418a76:	mov    DWORD PTR [rdi+0x14],esi
  418a79:	mov    rax,rdi
  418a7c:	jmp    0x418a2c
  418a7e:	xor    eax,eax
  418a80:	jmp    0x418a2c
  418a82:	nop    DWORD PTR [rax+0x0]
  418a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418a90:	push   rbx
  418a91:	sub    rsp,0x20
  418a95:	mov    ebx,ecx
  418a97:	mov    ecx,0x1
  418a9c:	call   0x418850
  418aa1:	test   rax,rax
  418aa4:	je     0x418ab0
  418aa6:	mov    DWORD PTR [rax+0x18],ebx
  418aa9:	mov    DWORD PTR [rax+0x14],0x1
  418ab0:	add    rsp,0x20
  418ab4:	pop    rbx
  418ab5:	ret    
  418ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ac0:	push   r14
  418ac2:	push   r13
  418ac4:	push   r12
  418ac6:	push   rbp
  418ac7:	push   rdi
  418ac8:	push   rsi
  418ac9:	push   rbx
  418aca:	sub    rsp,0x20
  418ace:	movsxd r13,DWORD PTR [rcx+0x14]
  418ad2:	movsxd rbx,DWORD PTR [rdx+0x14]
  418ad6:	mov    r12,rcx
  418ad9:	mov    r14,rdx
  418adc:	cmp    r13d,ebx
  418adf:	jl     0x418be1
  418ae5:	mov    eax,ebx
  418ae7:	movsxd rbx,r13d
  418aea:	movsxd r13,eax
  418aed:	xor    eax,eax
  418aef:	lea    esi,[rbx+r13*1]
  418af3:	cmp    esi,DWORD PTR [r12+0xc]
  418af8:	setg   al
  418afb:	add    eax,DWORD PTR [r12+0x8]
  418b00:	mov    ecx,eax
  418b02:	call   0x418850
  418b07:	test   rax,rax
  418b0a:	je     0x418bec
  418b10:	lea    rdi,[rax+0x18]
  418b14:	movsxd rdx,esi
  418b17:	lea    rbp,[rdi+rdx*4]
  418b1b:	mov    r8,rdi
  418b1e:	cmp    rdi,rbp
  418b21:	jae    0x418b33
  418b23:	mov    DWORD PTR [r8],0x0
  418b2a:	add    r8,0x4
  418b2e:	cmp    rbp,r8
  418b31:	ja     0x418b23
  418b33:	lea    rdx,[r14+0x18]
  418b37:	add    r12,0x18
  418b3b:	lea    rbx,[r12+rbx*4]
  418b3f:	lea    r13,[rdx+r13*4]
  418b43:	cmp    rdx,r13
  418b46:	jae    0x418ba9
  418b48:	nop    DWORD PTR [rax+rax*1+0x0]
  418b50:	add    rdx,0x4
  418b54:	mov    r11d,DWORD PTR [rdx-0x4]
  418b58:	test   r11d,r11d
  418b5b:	je     0x418ba0
  418b5d:	mov    r9,rdi
  418b60:	mov    r8,r12
  418b63:	xor    r10d,r10d
  418b66:	jmp    0x418b73
  418b68:	nop    DWORD PTR [rax+rax*1+0x0]
  418b70:	mov    r9,r14
  418b73:	add    r8,0x4
  418b77:	mov    ecx,DWORD PTR [r8-0x4]
  418b7b:	mov    r14d,DWORD PTR [r9]
  418b7e:	imul   rcx,r11
  418b82:	add    rcx,r14
  418b85:	lea    r14,[r9+0x4]
  418b89:	add    rcx,r10
  418b8c:	mov    r10,rcx
  418b8f:	mov    DWORD PTR [r14-0x4],ecx
  418b93:	shr    r10,0x20
  418b97:	cmp    rbx,r8
  418b9a:	ja     0x418b70
  418b9c:	mov    DWORD PTR [r9+0x4],r10d
  418ba0:	add    rdi,0x4
  418ba4:	cmp    r13,rdx
  418ba7:	ja     0x418b50
  418ba9:	test   esi,esi
  418bab:	jle    0x418bcf
  418bad:	mov    r8d,DWORD PTR [rbp-0x4]
  418bb1:	lea    rdx,[rbp-0x4]
  418bb5:	test   r8d,r8d
  418bb8:	je     0x418bca
  418bba:	jmp    0x418bcf
  418bbc:	nop    DWORD PTR [rax+0x0]
  418bc0:	sub    rdx,0x4
  418bc4:	mov    ecx,DWORD PTR [rdx]
  418bc6:	test   ecx,ecx
  418bc8:	jne    0x418bcf
  418bca:	sub    esi,0x1
  418bcd:	jne    0x418bc0
  418bcf:	mov    DWORD PTR [rax+0x14],esi
  418bd2:	add    rsp,0x20
  418bd6:	pop    rbx
  418bd7:	pop    rsi
  418bd8:	pop    rdi
  418bd9:	pop    rbp
  418bda:	pop    r12
  418bdc:	pop    r13
  418bde:	pop    r14
  418be0:	ret    
  418be1:	mov    r12,rdx
  418be4:	mov    r14,rcx
  418be7:	jmp    0x418aed
  418bec:	xor    eax,eax
  418bee:	jmp    0x418bd2
  418bf0:	push   rbp
  418bf1:	push   rdi
  418bf2:	push   rsi
  418bf3:	push   rbx
  418bf4:	sub    rsp,0x28
  418bf8:	mov    eax,edx
  418bfa:	mov    rbp,rcx
  418bfd:	mov    ebx,edx
  418bff:	and    eax,0x3
  418c02:	jne    0x418c90
  418c08:	sar    ebx,0x2
  418c0b:	mov    rax,rbp
  418c0e:	test   ebx,ebx
  418c10:	je     0x418c5c
  418c12:	mov    rdi,QWORD PTR [rip+0x11167]        # 0x429d80
  418c19:	test   rdi,rdi
  418c1c:	jne    0x418c32
  418c1e:	jmp    0x418cdd
  418c23:	sar    ebx,1
  418c25:	je     0x418c59
  418c27:	mov    rsi,QWORD PTR [rdi]
  418c2a:	test   rsi,rsi
  418c2d:	je     0x418c65
  418c2f:	mov    rdi,rsi
  418c32:	test   bl,0x1
  418c35:	je     0x418c23
  418c37:	mov    rdx,rdi
  418c3a:	mov    rcx,rbp
  418c3d:	call   0x418ac0
  418c42:	test   rax,rax
  418c45:	mov    rsi,rax
  418c48:	je     0x418cb3
  418c4a:	mov    rcx,rbp
  418c4d:	mov    rbp,rsi
  418c50:	call   0x418960
  418c55:	sar    ebx,1
  418c57:	jne    0x418c27
  418c59:	mov    rax,rbp
  418c5c:	add    rsp,0x28
  418c60:	pop    rbx
  418c61:	pop    rsi
  418c62:	pop    rdi
  418c63:	pop    rbp
  418c64:	ret    
  418c65:	mov    ecx,0x1
  418c6a:	call   0x418730
  418c6f:	mov    rsi,QWORD PTR [rdi]
  418c72:	test   rsi,rsi
  418c75:	je     0x418cbe
  418c77:	cmp    DWORD PTR [rip+0x11a92],0x2        # 0x42a710
  418c7e:	jne    0x418c2f
  418c80:	lea    rcx,[rip+0x11ae1]        # 0x42a768
  418c87:	call   QWORD PTR [rip+0x12d9f]        # 0x42ba2c
  418c8d:	jmp    0x418c2f
  418c8f:	nop
  418c90:	sub    eax,0x1
  418c93:	lea    rdx,[rip+0xcc26]        # 0x4258c0
  418c9a:	xor    r8d,r8d
  418c9d:	cdqe   
  418c9f:	mov    edx,DWORD PTR [rdx+rax*4]
  418ca2:	call   0x4189d0
  418ca7:	test   rax,rax
  418caa:	mov    rbp,rax
  418cad:	jne    0x418c08
  418cb3:	xor    eax,eax
  418cb5:	add    rsp,0x28
  418cb9:	pop    rbx
  418cba:	pop    rsi
  418cbb:	pop    rdi
  418cbc:	pop    rbp
  418cbd:	ret    
  418cbe:	mov    rdx,rdi
  418cc1:	mov    rcx,rdi
  418cc4:	call   0x418ac0
  418cc9:	test   rax,rax
  418ccc:	mov    rsi,rax
  418ccf:	mov    QWORD PTR [rdi],rax
  418cd2:	je     0x418cb3
  418cd4:	mov    QWORD PTR [rax],0x0
  418cdb:	jmp    0x418c77
  418cdd:	mov    ecx,0x1
  418ce2:	call   0x418730
  418ce7:	mov    rdi,QWORD PTR [rip+0x11092]        # 0x429d80
  418cee:	test   rdi,rdi
  418cf1:	je     0x418d12
  418cf3:	cmp    DWORD PTR [rip+0x11a16],0x2        # 0x42a710
  418cfa:	jne    0x418c32
  418d00:	lea    rcx,[rip+0x11a61]        # 0x42a768
  418d07:	call   QWORD PTR [rip+0x12d1f]        # 0x42ba2c
  418d0d:	jmp    0x418c32
  418d12:	mov    ecx,0x1
  418d17:	call   0x418850
  418d1c:	test   rax,rax
  418d1f:	mov    rdi,rax
  418d22:	je     0x418d42
  418d24:	mov    DWORD PTR [rax+0x18],0x271
  418d2b:	mov    DWORD PTR [rax+0x14],0x1
  418d32:	mov    QWORD PTR [rip+0x11047],rax        # 0x429d80
  418d39:	mov    QWORD PTR [rax],0x0
  418d40:	jmp    0x418cf3
  418d42:	mov    QWORD PTR [rip+0x11033],0x0        # 0x429d80
  418d4d:	xor    eax,eax
  418d4f:	jmp    0x418cb5
  418d54:	xchg   ax,ax
  418d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418d60:	push   r13
  418d62:	push   r12
  418d64:	push   rbp
  418d65:	push   rdi
  418d66:	push   rsi
  418d67:	push   rbx
  418d68:	sub    rsp,0x28
  418d6c:	mov    rdi,rcx
  418d6f:	mov    ebp,edx
  418d71:	mov    esi,edx
  418d73:	mov    r12d,DWORD PTR [rdi+0x14]
  418d77:	sar    ebp,0x5
  418d7a:	mov    eax,DWORD PTR [rdi+0xc]
  418d7d:	mov    ecx,DWORD PTR [rcx+0x8]
  418d80:	add    r12d,ebp
  418d83:	lea    ebx,[r12+0x1]
  418d88:	cmp    ebx,eax
  418d8a:	jle    0x418d99
  418d8c:	nop    DWORD PTR [rax+0x0]
  418d90:	add    eax,eax
  418d92:	add    ecx,0x1
  418d95:	cmp    ebx,eax
  418d97:	jg     0x418d90
  418d99:	call   0x418850
  418d9e:	test   rax,rax
  418da1:	mov    r13,rax
  418da4:	je     0x418e6f
  418daa:	test   ebp,ebp
  418dac:	lea    r8,[rax+0x18]
  418db0:	jle    0x418e67
  418db6:	lea    eax,[rbp-0x1]
  418db9:	lea    r9,[r8+rax*4+0x4]
  418dbe:	xchg   ax,ax
  418dc0:	add    r8,0x4
  418dc4:	mov    DWORD PTR [r8-0x4],0x0
  418dcc:	cmp    r8,r9
  418dcf:	jne    0x418dc0
  418dd1:	movsxd rax,DWORD PTR [rdi+0x14]
  418dd5:	lea    r8,[rdi+0x18]
  418dd9:	mov    edx,esi
  418ddb:	and    edx,0x1f
  418dde:	lea    rbp,[r8+rax*4]
  418de2:	je     0x418e50
  418de4:	mov    eax,0x20
  418de9:	xor    r11d,r11d
  418dec:	sub    eax,edx
  418dee:	jmp    0x418df3
  418df0:	mov    r9,rsi
  418df3:	mov    r10d,DWORD PTR [r8]
  418df6:	mov    ecx,edx
  418df8:	lea    rsi,[r9+0x4]
  418dfc:	add    r8,0x4
  418e00:	shl    r10d,cl
  418e03:	mov    ecx,eax
  418e05:	or     r10d,r11d
  418e08:	mov    DWORD PTR [rsi-0x4],r10d
  418e0c:	mov    r11d,DWORD PTR [r8-0x4]
  418e10:	shr    r11d,cl
  418e13:	cmp    rbp,r8
  418e16:	ja     0x418df0
  418e18:	add    r12d,0x2
  418e1c:	test   r11d,r11d
  418e1f:	mov    DWORD PTR [r9+0x4],r11d
  418e23:	cmovne ebx,r12d
  418e27:	sub    ebx,0x1
  418e2a:	mov    rcx,rdi
  418e2d:	mov    DWORD PTR [r13+0x14],ebx
  418e31:	call   0x418960
  418e36:	mov    rax,r13
  418e39:	add    rsp,0x28
  418e3d:	pop    rbx
  418e3e:	pop    rsi
  418e3f:	pop    rdi
  418e40:	pop    rbp
  418e41:	pop    r12
  418e43:	pop    r13
  418e45:	ret    
  418e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e50:	add    r8,0x4
  418e54:	mov    edx,DWORD PTR [r8-0x4]
  418e58:	add    r9,0x4
  418e5c:	cmp    rbp,r8
  418e5f:	mov    DWORD PTR [r9-0x4],edx
  418e63:	ja     0x418e50
  418e65:	jmp    0x418e27
  418e67:	mov    r9,r8
  418e6a:	jmp    0x418dd1
  418e6f:	xor    eax,eax
  418e71:	jmp    0x418e39
  418e73:	nop    DWORD PTR [rax]
  418e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e80:	movsxd r8,DWORD PTR [rdx+0x14]
  418e84:	mov    eax,DWORD PTR [rcx+0x14]
  418e87:	sub    eax,r8d
  418e8a:	test   eax,eax
  418e8c:	jne    0x418ec2
  418e8e:	shl    r8,0x2
  418e92:	add    rcx,0x18
  418e96:	lea    rax,[rcx+r8*1]
  418e9a:	lea    rdx,[rdx+r8*1+0x18]
  418e9f:	jmp    0x418ea6
  418ea1:	cmp    rcx,rax
  418ea4:	jae    0x418ec0
  418ea6:	sub    rdx,0x4
  418eaa:	sub    rax,0x4
  418eae:	mov    r9d,DWORD PTR [rdx]
  418eb1:	cmp    DWORD PTR [rax],r9d
  418eb4:	je     0x418ea1
  418eb6:	sbb    eax,eax
  418eb8:	or     eax,0x1
  418ebb:	ret    
  418ebc:	nop    DWORD PTR [rax+0x0]
  418ec0:	xor    eax,eax
  418ec2:	repz ret 
  418ec4:	xchg   ax,ax
  418ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ed0:	push   rdi
  418ed1:	push   rsi
  418ed2:	push   rbx
  418ed3:	sub    rsp,0x20
  418ed7:	mov    rsi,rcx
  418eda:	mov    rdi,rdx
  418edd:	call   0x418e80
  418ee2:	test   eax,eax
  418ee4:	je     0x418fd0
  418eea:	mov    ebx,0x0
  418eef:	js     0x418ff2
  418ef5:	mov    ecx,DWORD PTR [rsi+0x8]
  418ef8:	call   0x418850
  418efd:	test   rax,rax
  418f00:	je     0x419002
  418f06:	movsxd rdx,DWORD PTR [rsi+0x14]
  418f0a:	lea    rcx,[rsi+0x18]
  418f0e:	mov    DWORD PTR [rax+0x10],ebx
  418f11:	lea    r10,[rdi+0x18]
  418f15:	xor    r9d,r9d
  418f18:	mov    rbx,rdx
  418f1b:	lea    rsi,[rcx+rdx*4]
  418f1f:	movsxd rdx,DWORD PTR [rdi+0x14]
  418f23:	lea    rdi,[r10+rdx*4]
  418f27:	lea    rdx,[rax+0x18]
  418f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  418f30:	add    rcx,0x4
  418f34:	add    r10,0x4
  418f38:	mov    r11d,DWORD PTR [r10-0x4]
  418f3c:	mov    r8d,DWORD PTR [rcx-0x4]
  418f40:	add    rdx,0x4
  418f44:	sub    r8,r11
  418f47:	sub    r8,r9
  418f4a:	mov    r9,r8
  418f4d:	mov    r11d,r8d
  418f50:	mov    DWORD PTR [rdx-0x4],r8d
  418f54:	shr    r9,0x20
  418f58:	and    r9d,0x1
  418f5c:	cmp    rdi,r10
  418f5f:	ja     0x418f30
  418f61:	cmp    rsi,rcx
  418f64:	mov    rdi,rdx
  418f67:	mov    r10,rcx
  418f6a:	jbe    0x418fa6
  418f6c:	nop    DWORD PTR [rax+0x0]
  418f70:	add    rcx,0x4
  418f74:	mov    r8d,DWORD PTR [rcx-0x4]
  418f78:	add    rdx,0x4
  418f7c:	sub    r8,r9
  418f7f:	mov    r9,r8
  418f82:	mov    r11d,r8d
  418f85:	mov    DWORD PTR [rdx-0x4],r8d
  418f89:	shr    r9,0x20
  418f8d:	and    r9d,0x1
  418f91:	cmp    rsi,rcx
  418f94:	ja     0x418f70
  418f96:	not    r10
  418f99:	lea    rdx,[r10+rsi*1]
  418f9d:	shr    rdx,0x2
  418fa1:	lea    rdx,[rdi+rdx*4+0x4]
  418fa6:	sub    rdx,0x4
  418faa:	test   r11d,r11d
  418fad:	jne    0x418fbd
  418faf:	nop
  418fb0:	sub    rdx,0x4
  418fb4:	mov    ecx,DWORD PTR [rdx]
  418fb6:	sub    ebx,0x1
  418fb9:	test   ecx,ecx
  418fbb:	je     0x418fb0
  418fbd:	mov    DWORD PTR [rax+0x14],ebx
  418fc0:	add    rsp,0x20
  418fc4:	pop    rbx
  418fc5:	pop    rsi
  418fc6:	pop    rdi
  418fc7:	ret    
  418fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  418fd0:	xor    ecx,ecx
  418fd2:	call   0x418850
  418fd7:	test   rax,rax
  418fda:	je     0x419002
  418fdc:	mov    DWORD PTR [rax+0x14],0x1
  418fe3:	mov    DWORD PTR [rax+0x18],0x0
  418fea:	add    rsp,0x20
  418fee:	pop    rbx
  418fef:	pop    rsi
  418ff0:	pop    rdi
  418ff1:	ret    
  418ff2:	mov    rax,rsi
  418ff5:	mov    bl,0x1
  418ff7:	mov    rsi,rdi
  418ffa:	mov    rdi,rax
  418ffd:	jmp    0x418ef5
  419002:	xor    eax,eax
  419004:	jmp    0x418fc0
  419006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419010:	push   rsi
  419011:	push   rbx
  419012:	sub    rsp,0x18
  419016:	movsxd rax,DWORD PTR [rcx+0x14]
  41901a:	lea    r10,[rcx+0x18]
  41901e:	mov    ecx,0x20
  419023:	lea    r9,[r10+rax*4]
  419027:	mov    eax,DWORD PTR [r9-0x4]
  41902b:	lea    rbx,[r9-0x4]
  41902f:	bsr    r8d,eax
  419033:	xor    r8d,0x1f
  419037:	sub    ecx,r8d
  41903a:	cmp    r8d,0xa
  41903e:	mov    DWORD PTR [rdx],ecx
  419040:	jg     0x419090
  419042:	mov    ecx,0xb
  419047:	mov    r11d,eax
  41904a:	xor    esi,esi
  41904c:	sub    ecx,r8d
  41904f:	shr    r11d,cl
  419052:	or     r11d,0x3ff00000
  419059:	shl    r11,0x20
  41905d:	cmp    r10,rbx
  419060:	jae    0x419068
  419062:	mov    esi,DWORD PTR [r9-0x8]
  419066:	shr    esi,cl
  419068:	lea    ecx,[r8+0x15]
  41906c:	shl    eax,cl
  41906e:	mov    edx,eax
  419070:	mov    eax,esi
  419072:	or     eax,edx
  419074:	or     rax,r11
  419077:	mov    QWORD PTR [rsp+0x8],rax
  41907c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  419082:	add    rsp,0x18
  419086:	pop    rbx
  419087:	pop    rsi
  419088:	ret    
  419089:	nop    DWORD PTR [rax+0x0]
  419090:	cmp    r10,rbx
  419093:	jae    0x4190f0
  419095:	mov    r11d,r8d
  419098:	lea    rsi,[r9-0x8]
  41909c:	mov    edx,DWORD PTR [r9-0x8]
  4190a0:	sub    r11d,0xb
  4190a4:	je     0x419112
  4190a6:	mov    ebx,0x2b
  4190ab:	mov    ecx,r11d
  4190ae:	sub    ebx,r8d
  4190b1:	shl    eax,cl
  4190b3:	mov    r8d,edx
  4190b6:	mov    ecx,ebx
  4190b8:	shr    r8d,cl
  4190bb:	or     eax,r8d
  4190be:	xor    r8d,r8d
  4190c1:	or     eax,0x3ff00000
  4190c6:	shl    rax,0x20
  4190ca:	cmp    r10,rsi
  4190cd:	jae    0x4190d6
  4190cf:	mov    r8d,DWORD PTR [r9-0xc]
  4190d3:	shr    r8d,cl
  4190d6:	mov    ecx,r11d
  4190d9:	shl    edx,cl
  4190db:	or     r8d,edx
  4190de:	movabs rdx,0xffffffff00000000
  4190e8:	and    rax,rdx
  4190eb:	or     rax,r8
  4190ee:	jmp    0x419077
  4190f0:	mov    r11d,r8d
  4190f3:	sub    r11d,0xb
  4190f7:	je     0x419110
  4190f9:	mov    ecx,r11d
  4190fc:	xor    r8d,r8d
  4190ff:	xor    edx,edx
  419101:	shl    eax,cl
  419103:	or     eax,0x3ff00000
  419108:	shl    rax,0x20
  41910c:	jmp    0x4190d6
  41910e:	xchg   ax,ax
  419110:	xor    edx,edx
  419112:	or     eax,0x3ff00000
  419117:	shl    rax,0x20
  41911b:	or     rax,rdx
  41911e:	jmp    0x419077
  419123:	nop    DWORD PTR [rax]
  419126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419130:	push   rdi
  419131:	push   rsi
  419132:	push   rbx
  419133:	sub    rsp,0x20
  419137:	mov    ecx,0x1
  41913c:	movq   rbx,xmm0
  419141:	mov    rdi,rdx
  419144:	mov    rsi,r8
  419147:	call   0x418850
  41914c:	test   rax,rax
  41914f:	je     0x419235
  419155:	mov    r9,rbx
  419158:	shr    r9,0x20
  41915c:	mov    r10d,r9d
  41915f:	and    r9d,0x7fffffff
  419166:	and    r10d,0xfffff
  41916d:	shr    r9d,0x14
  419171:	mov    edx,r10d
  419174:	or     edx,0x100000
  41917a:	test   r9d,r9d
  41917d:	cmovne r10d,edx
  419181:	test   ebx,ebx
  419183:	jne    0x4191c4
  419185:	xor    ecx,ecx
  419187:	mov    DWORD PTR [rax+0x14],0x1
  41918e:	mov    edx,0x1
  419193:	tzcnt  ecx,r10d
  419198:	shr    r10d,cl
  41919b:	test   r9d,r9d
  41919e:	lea    r11d,[rcx+0x20]
  4191a2:	mov    DWORD PTR [rax+0x18],r10d
  4191a6:	je     0x419203
  4191a8:	lea    edx,[r11+r9*1-0x433]
  4191b0:	mov    DWORD PTR [rdi],edx
  4191b2:	mov    edx,0x35
  4191b7:	sub    edx,r11d
  4191ba:	mov    DWORD PTR [rsi],edx
  4191bc:	add    rsp,0x20
  4191c0:	pop    rbx
  4191c1:	pop    rsi
  4191c2:	pop    rdi
  4191c3:	ret    
  4191c4:	xor    r11d,r11d
  4191c7:	tzcnt  r11d,ebx
  4191cc:	mov    ecx,r11d
  4191cf:	shr    ebx,cl
  4191d1:	test   r11d,r11d
  4191d4:	je     0x419230
  4191d6:	mov    ecx,0x20
  4191db:	mov    edx,r10d
  4191de:	sub    ecx,r11d
  4191e1:	shl    edx,cl
  4191e3:	mov    ecx,r11d
  4191e6:	or     ebx,edx
  4191e8:	shr    r10d,cl
  4191eb:	mov    DWORD PTR [rax+0x18],ebx
  4191ee:	cmp    r10d,0x1
  4191f2:	mov    DWORD PTR [rax+0x1c],r10d
  4191f6:	sbb    edx,edx
  4191f8:	add    edx,0x2
  4191fb:	test   r9d,r9d
  4191fe:	mov    DWORD PTR [rax+0x14],edx
  419201:	jne    0x4191a8
  419203:	movsxd rcx,edx
  419206:	shl    edx,0x5
  419209:	sub    r11d,0x432
  419210:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  419215:	mov    DWORD PTR [rdi],r11d
  419218:	xor    ecx,0x1f
  41921b:	sub    edx,ecx
  41921d:	mov    DWORD PTR [rsi],edx
  41921f:	add    rsp,0x20
  419223:	pop    rbx
  419224:	pop    rsi
  419225:	pop    rdi
  419226:	ret    
  419227:	nop    WORD PTR [rax+rax*1+0x0]
  419230:	mov    DWORD PTR [rax+0x18],ebx
  419233:	jmp    0x4191ee
  419235:	xor    eax,eax
  419237:	jmp    0x4191bc
  419239:	nop    DWORD PTR [rax+0x0]
  419240:	mov    rax,rcx
  419243:	lea    rcx,[rdx+0x1]
  419247:	movzx  edx,BYTE PTR [rdx]
  41924a:	test   dl,dl
  41924c:	mov    BYTE PTR [rax],dl
  41924e:	je     0x419262
  419250:	add    rcx,0x1
  419254:	movzx  edx,BYTE PTR [rcx-0x1]
  419258:	add    rax,0x1
  41925c:	test   dl,dl
  41925e:	mov    BYTE PTR [rax],dl
  419260:	jne    0x419250
  419262:	repz ret 
  419264:	nop
  419265:	nop
  419266:	nop
  419267:	nop
  419268:	nop
  419269:	nop
  41926a:	nop
  41926b:	nop
  41926c:	nop
  41926d:	nop
  41926e:	nop
  41926f:	nop
  419270:	push   rbp
  419271:	push   rdi
  419272:	push   rsi
  419273:	push   rbx
  419274:	sub    rsp,0x48
  419278:	test   rdx,rdx
  41927b:	je     0x4193a3
  419281:	test   r8,r8
  419284:	je     0x4193b0
  41928a:	mov    eax,DWORD PTR [r9]
  41928d:	mov    DWORD PTR [r9],0x0
  419294:	mov    DWORD PTR [rsp+0x30],eax
  419298:	movzx  eax,BYTE PTR [rdx]
  41929b:	test   al,al
  41929d:	je     0x419340
  4192a3:	cmp    DWORD PTR [rsp+0x98],0x1
  4192ab:	mov    rsi,r9
  4192ae:	mov    rdi,r8
  4192b1:	mov    rbx,rdx
  4192b4:	mov    rbp,rcx
  4192b7:	jbe    0x419320
  4192b9:	cmp    BYTE PTR [rsp+0x30],0x0
  4192be:	jne    0x419350
  4192c4:	movzx  edx,al
  4192c7:	mov    ecx,DWORD PTR [rsp+0x90]
  4192ce:	call   QWORD PTR [rip+0x12750]        # 0x42ba24
  4192d4:	test   eax,eax
  4192d6:	je     0x419320
  4192d8:	cmp    rdi,0x1
  4192dc:	jbe    0x4193cc
  4192e2:	mov    DWORD PTR [rsp+0x28],0x1
  4192ea:	mov    QWORD PTR [rsp+0x20],rbp
  4192ef:	mov    r9d,0x2
  4192f5:	mov    r8,rbx
  4192f8:	mov    edx,0x8
  4192fd:	mov    ecx,DWORD PTR [rsp+0x90]
  419304:	call   QWORD PTR [rip+0x12732]        # 0x42ba3c
  41930a:	test   eax,eax
  41930c:	je     0x4193b7
  419312:	mov    eax,0x2
  419317:	add    rsp,0x48
  41931b:	pop    rbx
  41931c:	pop    rsi
  41931d:	pop    rdi
  41931e:	pop    rbp
  41931f:	ret    
  419320:	mov    eax,DWORD PTR [rsp+0x90]
  419327:	test   eax,eax
  419329:	jne    0x419370
  41932b:	movzx  eax,BYTE PTR [rbx]
  41932e:	mov    WORD PTR [rbp+0x0],ax
  419332:	mov    eax,0x1
  419337:	add    rsp,0x48
  41933b:	pop    rbx
  41933c:	pop    rsi
  41933d:	pop    rdi
  41933e:	pop    rbp
  41933f:	ret    
  419340:	xor    edx,edx
  419342:	xor    eax,eax
  419344:	mov    WORD PTR [rcx],dx
  419347:	add    rsp,0x48
  41934b:	pop    rbx
  41934c:	pop    rsi
  41934d:	pop    rdi
  41934e:	pop    rbp
  41934f:	ret    
  419350:	mov    BYTE PTR [rsp+0x31],al
  419354:	mov    DWORD PTR [rsp+0x28],0x1
  41935c:	mov    r9d,0x2
  419362:	mov    QWORD PTR [rsp+0x20],rcx
  419367:	lea    r8,[rsp+0x30]
  41936c:	jmp    0x4192f8
  41936e:	xchg   ax,ax
  419370:	mov    DWORD PTR [rsp+0x28],0x1
  419378:	mov    QWORD PTR [rsp+0x20],rbp
  41937d:	mov    r9d,0x1
  419383:	mov    r8,rbx
  419386:	mov    edx,0x8
  41938b:	mov    ecx,DWORD PTR [rsp+0x90]
  419392:	call   QWORD PTR [rip+0x126a4]        # 0x42ba3c
  419398:	test   eax,eax
  41939a:	je     0x4193b7
  41939c:	mov    eax,0x1
  4193a1:	jmp    0x419347
  4193a3:	xor    eax,eax
  4193a5:	add    rsp,0x48
  4193a9:	pop    rbx
  4193aa:	pop    rsi
  4193ab:	pop    rdi
  4193ac:	pop    rbp
  4193ad:	ret    
  4193ae:	xchg   ax,ax
  4193b0:	mov    eax,0xfffffffe
  4193b5:	jmp    0x419347
  4193b7:	call   0x419948
  4193bc:	mov    DWORD PTR [rax],0x2a
  4193c2:	mov    eax,0xffffffff
  4193c7:	jmp    0x419347
  4193cc:	movzx  eax,BYTE PTR [rbx]
  4193cf:	mov    BYTE PTR [rsi],al
  4193d1:	mov    eax,0xfffffffe
  4193d6:	jmp    0x419347
  4193db:	nop    DWORD PTR [rax+rax*1+0x0]
  4193e0:	push   rbp
  4193e1:	push   rdi
  4193e2:	push   rsi
  4193e3:	push   rbx
  4193e4:	sub    rsp,0x58
  4193e8:	xor    eax,eax
  4193ea:	mov    WORD PTR [rsp+0x4e],ax
  4193ef:	lea    rax,[rsp+0x4e]
  4193f4:	test   rcx,rcx
  4193f7:	mov    rbx,rcx
  4193fa:	mov    rsi,r9
  4193fd:	mov    rdi,rdx
  419400:	cmove  rbx,rax
  419404:	mov    rax,QWORD PTR [rip+0xc6f5]        # 0x425b00
  41940b:	mov    QWORD PTR [rsp+0x38],r8
  419410:	mov    rax,QWORD PTR [rax]
  419413:	mov    ebp,DWORD PTR [rax]
  419415:	call   0x419990
  41941a:	mov    r8,QWORD PTR [rsp+0x38]
  41941f:	lea    r9,[rip+0x113a2]        # 0x42a7c8
  419426:	test   rsi,rsi
  419429:	mov    DWORD PTR [rsp+0x28],ebp
  41942d:	mov    DWORD PTR [rsp+0x20],eax
  419431:	mov    rdx,rdi
  419434:	cmovne r9,rsi
  419438:	mov    rcx,rbx
  41943b:	call   0x419270
  419440:	cdqe   
  419442:	add    rsp,0x58
  419446:	pop    rbx
  419447:	pop    rsi
  419448:	pop    rdi
  419449:	pop    rbp
  41944a:	ret    
  41944b:	nop    DWORD PTR [rax+rax*1+0x0]
  419450:	push   r15
  419452:	push   r14
  419454:	push   r13
  419456:	push   r12
  419458:	push   rbp
  419459:	push   rdi
  41945a:	push   rsi
  41945b:	push   rbx
  41945c:	sub    rsp,0x48
  419460:	lea    rax,[rip+0x1135d]        # 0x42a7c4
  419467:	test   r9,r9
  41946a:	mov    rdi,r9
  41946d:	mov    r13,rdx
  419470:	cmove  rdi,rax
  419474:	mov    r14,rcx
  419477:	mov    rsi,r8
  41947a:	call   0x419990
  41947f:	mov    r12d,eax
  419482:	mov    rax,QWORD PTR [rip+0xc677]        # 0x425b00
  419489:	test   r13,r13
  41948c:	mov    rax,QWORD PTR [rax]
  41948f:	mov    ebp,DWORD PTR [rax]
  419491:	je     0x419515
  419497:	mov    rdx,QWORD PTR [r13+0x0]
  41949b:	test   rdx,rdx
  41949e:	je     0x419515
  4194a0:	test   r14,r14
  4194a3:	je     0x419520
  4194a5:	xor    ebx,ebx
  4194a7:	test   rsi,rsi
  4194aa:	jne    0x4194ca
  4194ac:	jmp    0x419515
  4194ae:	xchg   ax,ax
  4194b0:	movsxd r10,eax
  4194b3:	add    r14,0x2
  4194b7:	mov    rdx,r10
  4194ba:	add    rdx,QWORD PTR [r13+0x0]
  4194be:	add    rbx,r10
  4194c1:	cmp    rsi,rbx
  4194c4:	mov    QWORD PTR [r13+0x0],rdx
  4194c8:	jbe    0x419510
  4194ca:	mov    r8,rsi
  4194cd:	mov    DWORD PTR [rsp+0x28],ebp
  4194d1:	mov    DWORD PTR [rsp+0x20],r12d
  4194d6:	sub    r8,rbx
  4194d9:	mov    r9,rdi
  4194dc:	mov    rcx,r14
  4194df:	call   0x419270
  4194e4:	cmp    eax,0x0
  4194e7:	jg     0x4194b0
  4194e9:	jne    0x419510
  4194eb:	cmp    rbx,rsi
  4194ee:	jae    0x419510
  4194f0:	mov    QWORD PTR [r13+0x0],0x0
  4194f8:	mov    rax,rbx
  4194fb:	add    rsp,0x48
  4194ff:	pop    rbx
  419500:	pop    rsi
  419501:	pop    rdi
  419502:	pop    rbp
  419503:	pop    r12
  419505:	pop    r13
  419507:	pop    r14
  419509:	pop    r15
  41950b:	ret    
  41950c:	xor    ebx,ebx
  41950e:	xchg   ax,ax
  419510:	mov    rax,rbx
  419513:	jmp    0x4194fb
  419515:	xor    eax,eax
  419517:	jmp    0x4194fb
  419519:	nop    DWORD PTR [rax+0x0]
  419520:	xor    eax,eax
  419522:	test   rsi,rsi
  419525:	mov    WORD PTR [rsp+0x3e],ax
  41952a:	je     0x41950c
  41952c:	mov    r15d,ebp
  41952f:	xor    ebx,ebx
  419531:	lea    r14,[rsp+0x3e]
  419536:	jmp    0x419555
  419538:	nop    DWORD PTR [rax+rax*1+0x0]
  419540:	cdqe   
  419542:	mov    rdx,rax
  419545:	add    rdx,QWORD PTR [r13+0x0]
  419549:	add    rbx,rax
  41954c:	cmp    rsi,rbx
  41954f:	mov    QWORD PTR [r13+0x0],rdx
  419553:	jbe    0x419510
  419555:	mov    DWORD PTR [rsp+0x28],ebp
  419559:	mov    DWORD PTR [rsp+0x20],r12d
  41955e:	mov    r9,rdi
  419561:	mov    r8,r15
  419564:	mov    rcx,r14
  419567:	call   0x419270
  41956c:	test   eax,eax
  41956e:	jg     0x419540
  419570:	jmp    0x419510
  419572:	nop    DWORD PTR [rax+0x0]
  419576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419580:	push   rbp
  419581:	push   rdi
  419582:	push   rsi
  419583:	push   rbx
  419584:	sub    rsp,0x48
  419588:	xor    eax,eax
  41958a:	mov    WORD PTR [rsp+0x3e],ax
  41958f:	mov    rax,QWORD PTR [rip+0xc56a]        # 0x425b00
  419596:	mov    rbx,r8
  419599:	mov    rsi,rcx
  41959c:	mov    rdi,rdx
  41959f:	mov    rax,QWORD PTR [rax]
  4195a2:	mov    ebp,DWORD PTR [rax]
  4195a4:	call   0x419990
  4195a9:	lea    r9,[rip+0x11210]        # 0x42a7c0
  4195b0:	test   rbx,rbx
  4195b3:	lea    rcx,[rsp+0x3e]
  4195b8:	mov    DWORD PTR [rsp+0x28],ebp
  4195bc:	mov    DWORD PTR [rsp+0x20],eax
  4195c0:	mov    r8,rdi
  4195c3:	cmovne r9,rbx
  4195c7:	mov    rdx,rsi
  4195ca:	call   0x419270
  4195cf:	cdqe   
  4195d1:	add    rsp,0x48
  4195d5:	pop    rbx
  4195d6:	pop    rsi
  4195d7:	pop    rdi
  4195d8:	pop    rbp
  4195d9:	ret    
  4195da:	nop
  4195db:	nop
  4195dc:	nop
  4195dd:	nop
  4195de:	nop
  4195df:	nop
  4195e0:	sub    rsp,0x58
  4195e4:	test   r8d,r8d
  4195e7:	mov    eax,r8d
  4195ea:	mov    WORD PTR [rsp+0x68],dx
  4195ef:	jne    0x419604
  4195f1:	cmp    dx,0xff
  4195f6:	ja     0x41964a
  4195f8:	mov    BYTE PTR [rcx],dl
  4195fa:	mov    eax,0x1
  4195ff:	add    rsp,0x58
  419603:	ret    
  419604:	lea    rdx,[rsp+0x4c]
  419609:	mov    DWORD PTR [rsp+0x28],r9d
  41960e:	mov    QWORD PTR [rsp+0x20],rcx
  419613:	mov    DWORD PTR [rsp+0x4c],0x0
  41961b:	mov    QWORD PTR [rsp+0x30],0x0
  419624:	mov    r9d,0x1
  41962a:	mov    QWORD PTR [rsp+0x38],rdx
  41962f:	lea    r8,[rsp+0x68]
  419634:	xor    edx,edx
  419636:	mov    ecx,eax
  419638:	call   QWORD PTR [rip+0x1246e]        # 0x42baac
  41963e:	test   eax,eax
  419640:	je     0x41964a
  419642:	mov    edx,DWORD PTR [rsp+0x4c]
  419646:	test   edx,edx
  419648:	je     0x4195ff
  41964a:	call   0x419948
  41964f:	mov    DWORD PTR [rax],0x2a
  419655:	mov    eax,0xffffffff
  41965a:	add    rsp,0x58
  41965e:	ret    
  41965f:	nop
  419660:	push   rdi
  419661:	push   rsi
  419662:	push   rbx
  419663:	sub    rsp,0x30
  419667:	lea    rax,[rsp+0x20]
  41966c:	test   rcx,rcx
  41966f:	mov    rbx,rcx
  419672:	mov    esi,edx
  419674:	cmove  rbx,rax
  419678:	mov    rax,QWORD PTR [rip+0xc481]        # 0x425b00
  41967f:	mov    rax,QWORD PTR [rax]
  419682:	mov    edi,DWORD PTR [rax]
  419684:	call   0x419990
  419689:	movzx  edx,si
  41968c:	mov    r8d,eax
  41968f:	mov    rcx,rbx
  419692:	mov    r9d,edi
  419695:	call   0x4195e0
  41969a:	cdqe   
  41969c:	add    rsp,0x30
  4196a0:	pop    rbx
  4196a1:	pop    rsi
  4196a2:	pop    rdi
  4196a3:	ret    
  4196a4:	xchg   ax,ax
  4196a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196b0:	push   r14
  4196b2:	push   r13
  4196b4:	push   r12
  4196b6:	push   rbp
  4196b7:	push   rdi
  4196b8:	push   rsi
  4196b9:	push   rbx
  4196ba:	sub    rsp,0x30
  4196be:	mov    r13,rdx
  4196c1:	mov    rbx,rcx
  4196c4:	mov    rdi,r8
  4196c7:	call   0x419990
  4196cc:	mov    ebp,eax
  4196ce:	mov    rax,QWORD PTR [rip+0xc42b]        # 0x425b00
  4196d5:	mov    r14,QWORD PTR [r13+0x0]
  4196d9:	mov    rax,QWORD PTR [rax]
  4196dc:	test   r14,r14
  4196df:	mov    r12d,DWORD PTR [rax]
  4196e2:	je     0x4197d0
  4196e8:	xor    esi,esi
  4196ea:	test   rbx,rbx
  4196ed:	je     0x419780
  4196f3:	test   rdi,rdi
  4196f6:	jne    0x419718
  4196f8:	jmp    0x419744
  4196fa:	nop    WORD PTR [rax+rax*1+0x0]
  419700:	movsxd r10,eax
  419703:	add    rbx,r10
  419706:	add    rsi,r10
  419709:	cmp    BYTE PTR [rbx-0x1],0x0
  41970d:	je     0x419760
  41970f:	add    r14,0x2
  419713:	cmp    rdi,rsi
  419716:	jbe    0x419744
  419718:	movzx  edx,WORD PTR [r14]
  41971c:	mov    r9d,r12d
  41971f:	mov    r8d,ebp
  419722:	mov    rcx,rbx
  419725:	call   0x4195e0
  41972a:	test   eax,eax
  41972c:	jg     0x419700
  41972e:	mov    rax,0xffffffffffffffff
  419735:	add    rsp,0x30
  419739:	pop    rbx
  41973a:	pop    rsi
  41973b:	pop    rdi
  41973c:	pop    rbp
  41973d:	pop    r12
  41973f:	pop    r13
  419741:	pop    r14
  419743:	ret    
  419744:	mov    rax,rsi
  419747:	mov    QWORD PTR [r13+0x0],r14
  41974b:	add    rsp,0x30
  41974f:	pop    rbx
  419750:	pop    rsi
  419751:	pop    rdi
  419752:	pop    rbp
  419753:	pop    r12
  419755:	pop    r13
  419757:	pop    r14
  419759:	ret    
  41975a:	nop    WORD PTR [rax+rax*1+0x0]
  419760:	lea    rax,[rsi-0x1]
  419764:	mov    QWORD PTR [r13+0x0],0x0
  41976c:	add    rsp,0x30
  419770:	pop    rbx
  419771:	pop    rsi
  419772:	pop    rdi
  419773:	pop    rbp
  419774:	pop    r12
  419776:	pop    r13
  419778:	pop    r14
  41977a:	ret    
  41977b:	nop    DWORD PTR [rax+rax*1+0x0]
  419780:	test   rdi,rdi
  419783:	lea    rbx,[rsp+0x20]
  419788:	jne    0x4197ab
  41978a:	jmp    0x4197e1
  41978c:	nop    DWORD PTR [rax+0x0]
  419790:	movsxd rdx,eax
  419793:	sub    eax,0x1
  419796:	cdqe   
  419798:	add    rsi,rdx
  41979b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  4197a0:	je     0x4197e9
  4197a2:	add    r14,0x2
  4197a6:	cmp    rdi,rsi
  4197a9:	jbe    0x4197e1
  4197ab:	movzx  edx,WORD PTR [r14]
  4197af:	mov    r9d,r12d
  4197b2:	mov    r8d,ebp
  4197b5:	mov    rcx,rbx
  4197b8:	call   0x4195e0
  4197bd:	test   eax,eax
  4197bf:	jg     0x419790
  4197c1:	jmp    0x41972e
  4197c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197d0:	xor    eax,eax
  4197d2:	add    rsp,0x30
  4197d6:	pop    rbx
  4197d7:	pop    rsi
  4197d8:	pop    rdi
  4197d9:	pop    rbp
  4197da:	pop    r12
  4197dc:	pop    r13
  4197de:	pop    r14
  4197e0:	ret    
  4197e1:	mov    rax,rsi
  4197e4:	jmp    0x419735
  4197e9:	lea    rax,[rsi-0x1]
  4197ed:	jmp    0x419735
  4197f2:	nop
  4197f3:	nop
  4197f4:	nop
  4197f5:	nop
  4197f6:	nop
  4197f7:	nop
  4197f8:	nop
  4197f9:	nop
  4197fa:	nop
  4197fb:	nop
  4197fc:	nop
  4197fd:	nop
  4197fe:	nop
  4197ff:	nop
  419800:	jmp    QWORD PTR [rip+0x1246e]        # 0x42bc74
  419806:	nop
  419807:	nop
  419808:	jmp    QWORD PTR [rip+0x1245e]        # 0x42bc6c
  41980e:	nop
  41980f:	nop
  419810:	jmp    QWORD PTR [rip+0x1244e]        # 0x42bc64
  419816:	nop
  419817:	nop
  419818:	jmp    QWORD PTR [rip+0x1243e]        # 0x42bc5c
  41981e:	nop
  41981f:	nop
  419820:	jmp    QWORD PTR [rip+0x1242e]        # 0x42bc54
  419826:	nop
  419827:	nop
  419828:	jmp    QWORD PTR [rip+0x1241e]        # 0x42bc4c
  41982e:	nop
  41982f:	nop
  419830:	jmp    QWORD PTR [rip+0x1240e]        # 0x42bc44
  419836:	nop
  419837:	nop
  419838:	jmp    QWORD PTR [rip+0x123fe]        # 0x42bc3c
  41983e:	nop
  41983f:	nop
  419840:	jmp    QWORD PTR [rip+0x123ee]        # 0x42bc34
  419846:	nop
  419847:	nop
  419848:	jmp    QWORD PTR [rip+0x123de]        # 0x42bc2c
  41984e:	nop
  41984f:	nop
  419850:	jmp    QWORD PTR [rip+0x123ce]        # 0x42bc24
  419856:	nop
  419857:	nop
  419858:	jmp    QWORD PTR [rip+0x123be]        # 0x42bc1c
  41985e:	nop
  41985f:	nop
  419860:	jmp    QWORD PTR [rip+0x123ae]        # 0x42bc14
  419866:	nop
  419867:	nop
  419868:	jmp    QWORD PTR [rip+0x1239e]        # 0x42bc0c
  41986e:	nop
  41986f:	nop
  419870:	jmp    QWORD PTR [rip+0x1238e]        # 0x42bc04
  419876:	nop
  419877:	nop
  419878:	jmp    QWORD PTR [rip+0x1237e]        # 0x42bbfc
  41987e:	nop
  41987f:	nop
  419880:	jmp    QWORD PTR [rip+0x1236e]        # 0x42bbf4
  419886:	nop
  419887:	nop
  419888:	jmp    QWORD PTR [rip+0x1235e]        # 0x42bbec
  41988e:	nop
  41988f:	nop
  419890:	jmp    QWORD PTR [rip+0x1234e]        # 0x42bbe4
  419896:	nop
  419897:	nop
  419898:	jmp    QWORD PTR [rip+0x1233e]        # 0x42bbdc
  41989e:	nop
  41989f:	nop
  4198a0:	jmp    QWORD PTR [rip+0x1232e]        # 0x42bbd4
  4198a6:	nop
  4198a7:	nop
  4198a8:	jmp    QWORD PTR [rip+0x1231e]        # 0x42bbcc
  4198ae:	nop
  4198af:	nop
  4198b0:	jmp    QWORD PTR [rip+0x1230e]        # 0x42bbc4
  4198b6:	nop
  4198b7:	nop
  4198b8:	jmp    QWORD PTR [rip+0x122fe]        # 0x42bbbc
  4198be:	nop
  4198bf:	nop
  4198c0:	jmp    QWORD PTR [rip+0x122ee]        # 0x42bbb4
  4198c6:	nop
  4198c7:	nop
  4198c8:	jmp    QWORD PTR [rip+0x122de]        # 0x42bbac
  4198ce:	nop
  4198cf:	nop
  4198d0:	jmp    QWORD PTR [rip+0x122ce]        # 0x42bba4
  4198d6:	nop
  4198d7:	nop
  4198d8:	jmp    QWORD PTR [rip+0x122be]        # 0x42bb9c
  4198de:	nop
  4198df:	nop
  4198e0:	jmp    QWORD PTR [rip+0x122ae]        # 0x42bb94
  4198e6:	nop
  4198e7:	nop
  4198e8:	jmp    QWORD PTR [rip+0x1229e]        # 0x42bb8c
  4198ee:	nop
  4198ef:	nop
  4198f0:	jmp    QWORD PTR [rip+0x1228e]        # 0x42bb84
  4198f6:	nop
  4198f7:	nop
  4198f8:	jmp    QWORD PTR [rip+0x1227e]        # 0x42bb7c
  4198fe:	nop
  4198ff:	nop
  419900:	jmp    QWORD PTR [rip+0x1226e]        # 0x42bb74
  419906:	nop
  419907:	nop
  419908:	jmp    QWORD PTR [rip+0x1225e]        # 0x42bb6c
  41990e:	nop
  41990f:	nop
  419910:	jmp    QWORD PTR [rip+0x1224e]        # 0x42bb64
  419916:	nop
  419917:	nop
  419918:	jmp    QWORD PTR [rip+0x1223e]        # 0x42bb5c
  41991e:	nop
  41991f:	nop
  419920:	jmp    QWORD PTR [rip+0x1222e]        # 0x42bb54
  419926:	nop
  419927:	nop
  419928:	jmp    QWORD PTR [rip+0x1221e]        # 0x42bb4c
  41992e:	nop
  41992f:	nop
  419930:	jmp    QWORD PTR [rip+0x1220e]        # 0x42bb44
  419936:	nop
  419937:	nop
  419938:	jmp    QWORD PTR [rip+0x121fe]        # 0x42bb3c
  41993e:	nop
  41993f:	nop
  419940:	jmp    QWORD PTR [rip+0x121ee]        # 0x42bb34
  419946:	nop
  419947:	nop
  419948:	jmp    QWORD PTR [rip+0x121d6]        # 0x42bb24
  41994e:	nop
  41994f:	nop
  419950:	jmp    QWORD PTR [rip+0x121c6]        # 0x42bb1c
  419956:	nop
  419957:	nop
  419958:	jmp    QWORD PTR [rip+0x121b6]        # 0x42bb14
  41995e:	nop
  41995f:	nop
  419960:	jmp    QWORD PTR [rip+0x1219e]        # 0x42bb04
  419966:	nop
  419967:	nop
  419968:	jmp    QWORD PTR [rip+0x1218e]        # 0x42bafc
  41996e:	nop
  41996f:	nop
  419970:	jmp    QWORD PTR [rip+0x12176]        # 0x42baec
  419976:	nop
  419977:	nop
  419978:	jmp    QWORD PTR [rip+0x12166]        # 0x42bae4
  41997e:	nop
  41997f:	nop
  419980:	jmp    QWORD PTR [rip+0x1214e]        # 0x42bad4
  419986:	nop
  419987:	nop
  419988:	jmp    QWORD PTR [rip+0x1213e]        # 0x42bacc
  41998e:	nop
  41998f:	nop
  419990:	jmp    QWORD PTR [rip+0x1212e]        # 0x42bac4
  419996:	nop
  419997:	nop
  419998:	jmp    QWORD PTR [rip+0x1211e]        # 0x42babc
  41999e:	nop
  41999f:	nop
  4199a0:	mov    rax,QWORD PTR [rip+0x10e29]        # 0x42a7d0
  4199a7:	ret    
  4199a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4199b0:	mov    rax,rcx
  4199b3:	xchg   QWORD PTR [rip+0x10e16],rax        # 0x42a7d0
  4199ba:	ret    
  4199bb:	nop
  4199bc:	nop
  4199bd:	nop
  4199be:	nop
  4199bf:	nop
  4199c0:	mov    eax,DWORD PTR [rip+0x10e1a]        # 0x42a7e0
  4199c6:	ret    
  4199c7:	nop    WORD PTR [rax+rax*1+0x0]
  4199d0:	mov    eax,ecx
  4199d2:	xchg   DWORD PTR [rip+0x10e08],eax        # 0x42a7e0
  4199d8:	ret    
  4199d9:	nop    DWORD PTR [rax+0x0]
  4199e0:	push   rbx
  4199e1:	sub    rsp,0x20
  4199e5:	mov    ebx,ecx
  4199e7:	lea    rcx,[rip+0xc052]        # 0x425a40
  4199ee:	call   QWORD PTR [rip+0x12000]        # 0x42b9f4
  4199f4:	lea    rdx,[rip+0xc05b]        # 0x425a56
  4199fb:	mov    rcx,rax
  4199fe:	call   QWORD PTR [rip+0x11ff8]        # 0x42b9fc
  419a04:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x4199d0
  419a0b:	test   rax,rax
  419a0e:	mov    ecx,ebx
  419a10:	cmove  rax,rdx
  419a14:	mov    QWORD PTR [rip+0x46bd],rax        # 0x41e0d8
  419a1b:	add    rsp,0x20
  419a1f:	pop    rbx
  419a20:	rex.W jmp rax
  419a23:	nop    DWORD PTR [rax]
  419a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a30:	sub    rsp,0x28
  419a34:	lea    rcx,[rip+0xc005]        # 0x425a40
  419a3b:	call   QWORD PTR [rip+0x11fb3]        # 0x42b9f4
  419a41:	lea    rdx,[rip+0xc021]        # 0x425a69
  419a48:	mov    rcx,rax
  419a4b:	call   QWORD PTR [rip+0x11fab]        # 0x42b9fc
  419a51:	lea    rdx,[rip+0xffffffffffffff68]        # 0x4199c0
  419a58:	test   rax,rax
  419a5b:	cmove  rax,rdx
  419a5f:	mov    QWORD PTR [rip+0x466a],rax        # 0x41e0d0
  419a66:	add    rsp,0x28
  419a6a:	rex.W jmp rax
  419a6d:	nop    DWORD PTR [rax]
  419a70:	mov    rax,QWORD PTR [rip+0x4661]        # 0x41e0d8
  419a77:	rex.W jmp rax
  419a7a:	nop    WORD PTR [rax+rax*1+0x0]
  419a80:	mov    rax,QWORD PTR [rip+0x4649]        # 0x41e0d0
  419a87:	rex.W jmp rax
  419a8a:	nop
  419a8b:	nop
  419a8c:	nop
  419a8d:	nop
  419a8e:	nop
  419a8f:	nop
  419a90:	jmp    QWORD PTR [rip+0x12016]        # 0x42baac
  419a96:	nop
  419a97:	nop
  419a98:	jmp    QWORD PTR [rip+0x12006]        # 0x42baa4
  419a9e:	nop
  419a9f:	nop
  419aa0:	jmp    QWORD PTR [rip+0x11ff6]        # 0x42ba9c
  419aa6:	nop
  419aa7:	nop
  419aa8:	jmp    QWORD PTR [rip+0x11fe6]        # 0x42ba94
  419aae:	nop
  419aaf:	nop
  419ab0:	jmp    QWORD PTR [rip+0x11fd6]        # 0x42ba8c
  419ab6:	nop
  419ab7:	nop
  419ab8:	jmp    QWORD PTR [rip+0x11fc6]        # 0x42ba84
  419abe:	nop
  419abf:	nop
  419ac0:	jmp    QWORD PTR [rip+0x11fb6]        # 0x42ba7c
  419ac6:	nop
  419ac7:	nop
  419ac8:	jmp    QWORD PTR [rip+0x11fa6]        # 0x42ba74
  419ace:	nop
  419acf:	nop
  419ad0:	jmp    QWORD PTR [rip+0x11f96]        # 0x42ba6c
  419ad6:	nop
  419ad7:	nop
  419ad8:	jmp    QWORD PTR [rip+0x11f86]        # 0x42ba64
  419ade:	nop
  419adf:	nop
  419ae0:	jmp    QWORD PTR [rip+0x11f76]        # 0x42ba5c
  419ae6:	nop
  419ae7:	nop
  419ae8:	jmp    QWORD PTR [rip+0x11f66]        # 0x42ba54
  419aee:	nop
  419aef:	nop
  419af0:	jmp    QWORD PTR [rip+0x11f56]        # 0x42ba4c
  419af6:	nop
  419af7:	nop
  419af8:	jmp    QWORD PTR [rip+0x11f46]        # 0x42ba44
  419afe:	nop
  419aff:	nop
  419b00:	jmp    QWORD PTR [rip+0x11f36]        # 0x42ba3c
  419b06:	nop
  419b07:	nop
  419b08:	jmp    QWORD PTR [rip+0x11f26]        # 0x42ba34
  419b0e:	nop
  419b0f:	nop
  419b10:	jmp    QWORD PTR [rip+0x11f16]        # 0x42ba2c
  419b16:	nop
  419b17:	nop
  419b18:	jmp    QWORD PTR [rip+0x11f06]        # 0x42ba24
  419b1e:	nop
  419b1f:	nop
  419b20:	jmp    QWORD PTR [rip+0x11ef6]        # 0x42ba1c
  419b26:	nop
  419b27:	nop
  419b28:	jmp    QWORD PTR [rip+0x11ee6]        # 0x42ba14
  419b2e:	nop
  419b2f:	nop
  419b30:	jmp    QWORD PTR [rip+0x11ed6]        # 0x42ba0c
  419b36:	nop
  419b37:	nop
  419b38:	jmp    QWORD PTR [rip+0x11ec6]        # 0x42ba04
  419b3e:	nop
  419b3f:	nop
  419b40:	jmp    QWORD PTR [rip+0x11eb6]        # 0x42b9fc
  419b46:	nop
  419b47:	nop
  419b48:	jmp    QWORD PTR [rip+0x11ea6]        # 0x42b9f4
  419b4e:	nop
  419b4f:	nop
  419b50:	jmp    QWORD PTR [rip+0x11e96]        # 0x42b9ec
  419b56:	nop
  419b57:	nop
  419b58:	jmp    QWORD PTR [rip+0x11e86]        # 0x42b9e4
  419b5e:	nop
  419b5f:	nop
  419b60:	jmp    QWORD PTR [rip+0x11e76]        # 0x42b9dc
  419b66:	nop
  419b67:	nop
  419b68:	jmp    QWORD PTR [rip+0x11e66]        # 0x42b9d4
  419b6e:	nop
  419b6f:	nop
  419b70:	jmp    QWORD PTR [rip+0x11e56]        # 0x42b9cc
  419b76:	nop
  419b77:	nop
  419b78:	jmp    QWORD PTR [rip+0x11e46]        # 0x42b9c4
  419b7e:	nop
  419b7f:	nop
  419b80:	jmp    QWORD PTR [rip+0x11e36]        # 0x42b9bc
  419b86:	nop
  419b87:	nop
  419b88:	jmp    QWORD PTR [rip+0x11e26]        # 0x42b9b4
  419b8e:	nop
  419b8f:	nop
  419b90:	jmp    QWORD PTR [rip+0x11e16]        # 0x42b9ac
  419b96:	nop
  419b97:	nop
  419b98:	nop    DWORD PTR [rax+rax*1+0x0]
  419ba0:	sub    rsp,0x38
  419ba4:	lea    rax,[rip+0x554b]        # 0x41f0f6
  419bab:	lea    r9,[rip+0x5517]        # 0x41f0c9
  419bb2:	lea    r8,[rip+0x551f]        # 0x41f0d8
  419bb9:	xor    edx,edx
  419bbb:	xor    ecx,ecx
  419bbd:	mov    DWORD PTR [rsp+0x28],0x58d
  419bc5:	mov    QWORD PTR [rsp+0x20],rax
  419bca:	call   0x412308
  419bcf:	call   0x419910
  419bd4:	nop
  419bd5:	sub    rsp,0x38
  419bd9:	lea    rax,[rip+0x5a77]        # 0x41f657
  419be0:	lea    r9,[rip+0x5a67]        # 0x41f64e
  419be7:	test   r8d,r8d
  419bea:	lea    r8,[rip+0x5a6f]        # 0x41f660
  419bf1:	mov    QWORD PTR [rsp+0x28],rdx
  419bf6:	mov    QWORD PTR [rsp+0x20],rcx
  419bfb:	cmove  r9,rax
  419bff:	mov    edx,0x8
  419c04:	xor    ecx,ecx
  419c06:	call   0x412308
  419c0b:	mov    ecx,0x1
  419c10:	call   0x401cb0
  419c15:	nop
  419c16:	sub    rsp,0x28
  419c1a:	lea    r8,[rip+0x5a64]        # 0x41f685
  419c21:	xor    ecx,ecx
  419c23:	mov    edx,0x10
  419c28:	call   0x412308
  419c2d:	mov    ecx,0x1
  419c32:	call   0x401cb0
  419c37:	nop
  419c38:	nop
  419c39:	nop
  419c3a:	nop
  419c3b:	nop
  419c3c:	nop
  419c3d:	nop
  419c3e:	nop
  419c3f:	nop
  419c40:	mov    rax,QWORD PTR [rcx+0x18]
  419c44:	lea    r8,[rip+0x725a]        # 0x420ea5
  419c4b:	lea    rdx,[rip+0x7250]        # 0x420ea2
  419c52:	mov    ecx,DWORD PTR [rax+0xc]
  419c55:	test   ecx,ecx
  419c57:	lea    rcx,[rip+0x724c]        # 0x420eaa
  419c5e:	cmove  rdx,r8
  419c62:	mov    QWORD PTR [rax+0x10],rdx
  419c66:	lea    rdx,[rip+0x723b]        # 0x420ea8
  419c6d:	cmove  rdx,rcx
  419c71:	mov    QWORD PTR [rax+0x18],rdx
  419c75:	xor    eax,eax
  419c77:	ret    
  419c78:	push   rdi
  419c79:	sub    rsp,0x20
  419c7d:	mov    rdx,QWORD PTR [rcx+0x18]
  419c81:	xor    eax,eax
  419c83:	mov    r8,rcx
  419c86:	or     rcx,0xffffffffffffffff
  419c8a:	mov    r9,QWORD PTR [rdx+0x8]
  419c8e:	mov    rdi,r9
  419c91:	repnz scas al,BYTE PTR es:[rdi]
  419c93:	cmp    rcx,0xfffffffffffffffd
  419c97:	je     0x419cb4
  419c99:	mov    rcx,r8
  419c9c:	lea    r8,[rip+0x758d]        # 0x421230
  419ca3:	mov    edx,0x10
  419ca8:	call   0x412308
  419cad:	mov    eax,0xffffffea
  419cb2:	jmp    0x419cbc
  419cb4:	mov    al,BYTE PTR [r9]
  419cb7:	mov    BYTE PTR [rdx+0x10],al
  419cba:	xor    eax,eax
  419cbc:	add    rsp,0x20
  419cc0:	pop    rdi
  419cc1:	ret    
  419cc2:	push   rbp
  419cc3:	push   rdi
  419cc4:	push   rsi
  419cc5:	push   rbx
  419cc6:	sub    rsp,0x28
  419cca:	mov    rbx,QWORD PTR [rcx+0x18]
  419cce:	xor    eax,eax
  419cd0:	mov    rbp,rcx
  419cd3:	or     rcx,0xffffffffffffffff
  419cd7:	mov    r9,QWORD PTR [rbx+0x8]
  419cdb:	mov    rdi,r9
  419cde:	repnz scas al,BYTE PTR es:[rdi]
  419ce0:	cmp    rcx,0xfffffffffffffffd
  419ce4:	je     0x419d04
  419ce6:	lea    r8,[rip+0x7543]        # 0x421230
  419ced:	mov    edx,0x10
  419cf2:	mov    rcx,rbp
  419cf5:	call   0x412308
  419cfa:	mov    eax,0xffffffea
  419cff:	jmp    0x419d8a
  419d04:	mov    al,BYTE PTR [r9]
  419d07:	mov    rsi,QWORD PTR [rbx+0x20]
  419d0b:	lea    rdx,[rip+0x7562]        # 0x421274
  419d12:	mov    BYTE PTR [rbx+0x10],al
  419d15:	mov    rcx,rsi
  419d18:	call   0x419858
  419d1d:	test   eax,eax
  419d1f:	jne    0x419d2e
  419d21:	lea    rdx,[rip+0xfffffffffffee228]        # 0x407f50
  419d28:	mov    QWORD PTR [rbx+0x28],rdx
  419d2c:	jmp    0x419d8a
  419d2e:	lea    rdx,[rip+0x7544]        # 0x421279
  419d35:	mov    rcx,rsi
  419d38:	call   0x419858
  419d3d:	test   eax,eax
  419d3f:	jne    0x419d4e
  419d41:	lea    rdx,[rip+0xfffffffffffef298]        # 0x408fe0
  419d48:	mov    QWORD PTR [rbx+0x28],rdx
  419d4c:	jmp    0x419d8a
  419d4e:	lea    rdx,[rip+0x713b]        # 0x420e90
  419d55:	mov    rcx,rsi
  419d58:	call   0x419858
  419d5d:	test   eax,eax
  419d5f:	jne    0x419d6e
  419d61:	lea    rdi,[rip+0xfffffffffffef438]        # 0x4091a0
  419d68:	mov    QWORD PTR [rbx+0x28],rdi
  419d6c:	jmp    0x419d8a
  419d6e:	lea    r8,[rip+0x7506]        # 0x42127b
  419d75:	mov    r9,rsi
  419d78:	mov    edx,0x10
  419d7d:	mov    rcx,rbp
  419d80:	call   0x412308
  419d85:	mov    eax,0xffffffea
  419d8a:	add    rsp,0x28
  419d8e:	pop    rbx
  419d8f:	pop    rsi
  419d90:	pop    rdi
  419d91:	pop    rbp
  419d92:	ret    
  419d93:	sub    rsp,0x38
  419d97:	mov    rax,QWORD PTR [rcx+0x18]
  419d9b:	cmp    DWORD PTR [rax+0x14],0x0
  419d9f:	jne    0x419da5
  419da1:	xor    eax,eax
  419da3:	jmp    0x419e24
  419da5:	cmp    DWORD PTR [rip+0x4274],0x0        # 0x41e020
  419dac:	mov    DWORD PTR [rax+0x10],0x1
  419db3:	lea    rax,[rip+0x74db]        # 0x421295
  419dba:	jne    0x419dcc
  419dbc:	cmp    DWORD PTR [rip+0xf579],0x0        # 0x42933c
  419dc3:	je     0x419dec
  419dc5:	lea    rax,[rip+0x755f]        # 0x42132b
  419dcc:	lea    r8,[rip+0x74cd]        # 0x4212a0
  419dd3:	mov    QWORD PTR [rsp+0x20],rax
  419dd8:	mov    r9,rax
  419ddb:	mov    edx,0x10
  419de0:	call   0x412308
  419de5:	mov    eax,0xffffffea
  419dea:	jmp    0x419e24
  419dec:	cmp    DWORD PTR [rip+0xf545],0x0        # 0x429338
  419df3:	lea    rax,[rip+0x7536]        # 0x421330
  419dfa:	jne    0x419dcc
  419dfc:	cmp    DWORD PTR [rip+0xf579],0x0        # 0x42937c
  419e03:	je     0x419da1
  419e05:	cmp    DWORD PTR [rip+0xf56c],0x0        # 0x429378
  419e0c:	je     0x419da1
  419e0e:	lea    r8,[rip+0x7523]        # 0x421338
  419e15:	mov    edx,0x10
  419e1a:	call   0x412308
  419e1f:	mov    eax,0xffffffea
  419e24:	add    rsp,0x38
  419e28:	ret    
  419e29:	sub    rsp,0x38
  419e2d:	lea    rax,[rip+0x75b3]        # 0x4213e7
  419e34:	lea    r9,[rip+0x757d]        # 0x4213b8
  419e3b:	lea    r8,[rip+0x7587]        # 0x4213c9
  419e42:	xor    edx,edx
  419e44:	xor    ecx,ecx
  419e46:	mov    DWORD PTR [rsp+0x28],0x200
  419e4e:	mov    QWORD PTR [rsp+0x20],rax
  419e53:	call   0x412308
  419e58:	call   0x419910
  419e5d:	nop
  419e5e:	nop
  419e5f:	nop
  419e60:	push   r15
  419e62:	push   r14
  419e64:	push   r13
  419e66:	push   r12
  419e68:	push   rbp
  419e69:	push   rdi
  419e6a:	push   rsi
  419e6b:	push   rbx
  419e6c:	sub    rsp,0x168
  419e73:	mov    rsi,rdx
  419e76:	mov    ebx,ecx
  419e78:	call   0x412630
  419e7d:	call   0x401c80
  419e82:	mov    ecx,0x1
  419e87:	call   0x4122d8
  419e8c:	lea    rcx,[rip+0xfffffffffffee6ed]        # 0x408580
  419e93:	call   0x401ca0
  419e98:	lea    rax,[rip+0x92e1]        # 0x423180
  419e9f:	mov    rdx,rsi
  419ea2:	mov    ecx,ebx
  419ea4:	mov    r8,rax
  419ea7:	mov    QWORD PTR [rip+0xf452],rax        # 0x429300
  419eae:	call   0x405180
  419eb3:	call   0x412030
  419eb8:	call   0x411ff0
  419ebd:	call   0x401c10
  419ec2:	call   0x411f48
  419ec7:	mov    r8,QWORD PTR [rip+0xf432]        # 0x429300
  419ece:	mov    rdx,rsi
  419ed1:	mov    ecx,ebx
  419ed3:	call   0x405510
  419ed8:	lea    rax,[rip+0xfffffffffffef231]        # 0x409110
  419edf:	mov    r9,QWORD PTR [rip+0xf41a]        # 0x429300
  419ee6:	xor    ecx,ecx
  419ee8:	mov    r8,rsi
  419eeb:	mov    edx,ebx
  419eed:	mov    QWORD PTR [rsp+0x20],rax
  419ef2:	call   0x403550
  419ef7:	mov    ecx,0x2
  419efc:	call   0x40acf0
  419f01:	test   eax,eax
  419f03:	je     0x419f0f
  419f05:	mov    DWORD PTR [rip+0xf479],0x1        # 0x429388
  419f0f:	mov    ecx,0x3
  419f14:	call   0x40acf0
  419f19:	test   eax,eax
  419f1b:	je     0x419f27
  419f1d:	mov    DWORD PTR [rip+0xf45d],0x1        # 0x429384
  419f27:	mov    ecx,0x4
  419f2c:	call   0x40acf0
  419f31:	test   eax,eax
  419f33:	je     0x419f3f
  419f35:	mov    DWORD PTR [rip+0xf441],0x1        # 0x429380
  419f3f:	mov    ecx,0x7
  419f44:	call   0x40acf0
  419f49:	test   eax,eax
  419f4b:	je     0x419f57
  419f4d:	mov    DWORD PTR [rip+0xf425],0x1        # 0x42937c
  419f57:	mov    ecx,0xc
  419f5c:	call   0x40acf0
  419f61:	test   eax,eax
  419f63:	je     0x419f6f
  419f65:	mov    DWORD PTR [rip+0xf3f1],0x1        # 0x429360
  419f6f:	mov    ecx,0xe
  419f74:	call   0x40acf0
  419f79:	test   eax,eax
  419f7b:	je     0x419f87
  419f7d:	mov    DWORD PTR [rip+0xf3f1],0x1        # 0x429378
  419f87:	mov    ecx,0x16
  419f8c:	call   0x40acf0
  419f91:	test   eax,eax
  419f93:	je     0x419f9f
  419f95:	mov    DWORD PTR [rip+0xf3bd],0x1        # 0x42935c
  419f9f:	mov    ecx,0x13
  419fa4:	call   0x40acf0
  419fa9:	test   eax,eax
  419fab:	je     0x419fb7
  419fad:	mov    DWORD PTR [rip+0xf3a1],0x1        # 0x429358
  419fb7:	mov    ecx,0x15
  419fbc:	call   0x40acf0
  419fc1:	test   eax,eax
  419fc3:	je     0x419fcf
  419fc5:	mov    DWORD PTR [rip+0xf385],0x1        # 0x429354
  419fcf:	mov    ecx,0x1d
  419fd4:	call   0x40acf0
  419fd9:	test   eax,eax
  419fdb:	je     0x419fe7
  419fdd:	mov    DWORD PTR [rip+0xf37d],0x1        # 0x429364
  419fe7:	mov    ecx,0x1e
  419fec:	call   0x40acf0
  419ff1:	test   eax,eax
  419ff3:	je     0x419fff
  419ff5:	mov    DWORD PTR [rip+0xf375],0x1        # 0x429374
  419fff:	mov    ecx,0x22
  41a004:	call   0x40acf0
  41a009:	test   eax,eax
  41a00b:	je     0x41a017
  41a00d:	mov    DWORD PTR [rip+0xf359],0x1        # 0x429370
  41a017:	mov    ecx,0x21
  41a01c:	call   0x40acf0
  41a021:	test   eax,eax
  41a023:	je     0x41a02f
  41a025:	mov    DWORD PTR [rip+0xf33d],0x1        # 0x42936c
  41a02f:	mov    ecx,0x17
  41a034:	call   0x40acf0
  41a039:	test   eax,eax
  41a03b:	je     0x41a047
  41a03d:	mov    DWORD PTR [rip+0xf325],0x1        # 0x42936c
  41a047:	mov    ecx,0x1
  41a04c:	call   0x40acf0
  41a051:	test   eax,eax
  41a053:	je     0x41a05f
  41a055:	mov    DWORD PTR [rip+0xf2f1],0x1        # 0x429350
  41a05f:	mov    ecx,0x5
  41a064:	call   0x40acf0
  41a069:	test   eax,eax
  41a06b:	je     0x41a077
  41a06d:	mov    DWORD PTR [rip+0xf2d5],0x1        # 0x42934c
  41a077:	mov    ecx,0x8
  41a07c:	call   0x40acf0
  41a081:	test   eax,eax
  41a083:	je     0x41a08f
  41a085:	mov    DWORD PTR [rip+0xf2b9],0x1        # 0x429348
  41a08f:	mov    ecx,0x1c
  41a094:	call   0x40acf0
  41a099:	test   eax,eax
  41a09b:	je     0x41a0a7
  41a09d:	mov    DWORD PTR [rip+0xf29d],0x1        # 0x429344
  41a0a7:	mov    ecx,0x23
  41a0ac:	call   0x40acf0
  41a0b1:	test   eax,eax
  41a0b3:	je     0x41a0bf
  41a0b5:	mov    DWORD PTR [rip+0xf281],0x1        # 0x429340
  41a0bf:	mov    ecx,DWORD PTR [rip+0xf2d7]        # 0x42939c
  41a0c5:	test   ecx,ecx
  41a0c7:	je     0x41a15f
  41a0cd:	mov    edx,DWORD PTR [rip+0xf291]        # 0x429364
  41a0d3:	test   edx,edx
  41a0d5:	jne    0x41a0e0
  41a0d7:	cmp    DWORD PTR [rip+0xf282],0x0        # 0x429360
  41a0de:	je     0x41a15f
  41a0e0:	lea    r8,[rip+0x8379]        # 0x422460
  41a0e7:	mov    edx,0x10
  41a0ec:	xor    ecx,ecx
  41a0ee:	mov    esi,0xffffffea
  41a0f3:	call   0x412308
  41a0f8:	lea    rcx,[rip+0xf229]        # 0x429328
  41a0ff:	lea    rbx,[rip+0x30ca]        # 0x41d1d0
  41a106:	lea    rdi,[rip+0x3f63]        # 0x41e070
  41a10d:	call   0x4123b8
  41a112:	lea    rcx,[rip+0xf1f7]        # 0x429310
  41a119:	call   0x4123b8
  41a11e:	lea    rcx,[rip+0xf1c3]        # 0x4292e8
  41a125:	call   0x412330
  41a12a:	call   0x401c30
  41a12f:	nop
  41a130:	mov    rcx,rbx
  41a133:	add    rbx,0x60
  41a137:	call   0x412440
  41a13c:	cmp    rbx,rdi
  41a13f:	jne    0x41a130
  41a141:	call   0x411ff8
  41a146:	mov    eax,esi
  41a148:	shr    eax,0x1f
  41a14b:	add    rsp,0x168
  41a152:	pop    rbx
  41a153:	pop    rsi
  41a154:	pop    rdi
  41a155:	pop    rbp
  41a156:	pop    r12
  41a158:	pop    r13
  41a15a:	pop    r14
  41a15c:	pop    r15
  41a15e:	ret    
  41a15f:	cmp    DWORD PTR [rip+0xef1e],0x0        # 0x429084
  41a166:	jne    0x41a262
  41a16c:	mov    edx,DWORD PTR [rip+0xef0e]        # 0x429080
  41a172:	mov    DWORD PTR [rip+0xef08],0x1        # 0x429084
  41a17c:	cmp    edx,0x40
  41a17f:	je     0x41a262
  41a185:	lea    r8d,[rdx+0x1]
  41a189:	lea    rax,[rip+0xef30]        # 0x4290c0
  41a190:	lea    rsi,[rip+0xa8e9]        # 0x424a80
  41a197:	movsxd rcx,edx
  41a19a:	cmp    r8d,0x40
  41a19e:	mov    DWORD PTR [rip+0xeedb],r8d        # 0x429080
  41a1a5:	mov    QWORD PTR [rax+rcx*8],rsi
  41a1a9:	je     0x41a1de
  41a1ab:	lea    ecx,[rdx+0x2]
  41a1ae:	lea    rsi,[rip+0xa58b]        # 0x424740
  41a1b5:	movsxd r8,r8d
  41a1b8:	cmp    ecx,0x40
  41a1bb:	mov    DWORD PTR [rip+0xeebf],ecx        # 0x429080
  41a1c1:	mov    QWORD PTR [rax+r8*8],rsi
  41a1c5:	je     0x41a242
  41a1c7:	lea    rsi,[rip+0xa1b2]        # 0x424380
  41a1ce:	add    edx,0x3
  41a1d1:	movsxd rcx,ecx
  41a1d4:	mov    DWORD PTR [rip+0xeea6],edx        # 0x429080
  41a1da:	mov    QWORD PTR [rax+rcx*8],rsi
  41a1de:	mov    edx,DWORD PTR [rip+0xee9c]        # 0x429080
  41a1e4:	cmp    edx,0x40
  41a1e7:	je     0x41a262
  41a1e9:	lea    r8d,[rdx+0x1]
  41a1ed:	lea    rsi,[rip+0x9f4c]        # 0x424140
  41a1f4:	movsxd rcx,edx
  41a1f7:	cmp    r8d,0x40
  41a1fb:	mov    DWORD PTR [rip+0xee7e],r8d        # 0x429080
  41a202:	mov    QWORD PTR [rax+rcx*8],rsi
  41a206:	je     0x41a262
  41a208:	lea    ecx,[rdx+0x2]
  41a20b:	lea    rax,[rip+0xeeae]        # 0x4290c0
  41a212:	lea    rsi,[rip+0x9d27]        # 0x423f40
  41a219:	movsxd r8,r8d
  41a21c:	cmp    ecx,0x40
  41a21f:	mov    DWORD PTR [rip+0xee5b],ecx        # 0x429080
  41a225:	mov    QWORD PTR [rax+r8*8],rsi
  41a229:	je     0x41a262
  41a22b:	lea    rsi,[rip+0x9b4e]        # 0x423d80
  41a232:	add    edx,0x3
  41a235:	movsxd rcx,ecx
  41a238:	mov    DWORD PTR [rip+0xee42],edx        # 0x429080
  41a23e:	mov    QWORD PTR [rax+rcx*8],rsi
  41a242:	movsxd rdx,DWORD PTR [rip+0xee37]        # 0x429080
  41a249:	cmp    edx,0x40
  41a24c:	je     0x41a262
  41a24e:	lea    ecx,[rdx+0x1]
  41a251:	lea    rsi,[rip+0x2ea8]        # 0x41d100
  41a258:	mov    DWORD PTR [rip+0xee22],ecx        # 0x429080
  41a25e:	mov    QWORD PTR [rax+rdx*8],rsi
  41a262:	mov    rcx,QWORD PTR [rip+0xf0bf]        # 0x429328
  41a269:	test   rcx,rcx
  41a26c:	je     0x41b271
  41a272:	lea    rdx,[rip+0x7194]        # 0x42140d
  41a279:	lea    r8,[rsp+0xc0]
  41a281:	call   0x4121f0
  41a286:	mov    rdx,QWORD PTR [rip+0xf08b]        # 0x429318
  41a28d:	mov    rdi,rax
  41a290:	mov    rbp,QWORD PTR [rsp+0xc0]
  41a298:	test   rdx,rdx
  41a29b:	je     0x41a2b3
  41a29d:	lea    rcx,[rip+0xf044]        # 0x4292e8
  41a2a4:	call   0x412340
  41a2a9:	test   eax,eax
  41a2ab:	mov    esi,eax
  41a2ad:	js     0x41a5c5
  41a2b3:	mov    rbx,QWORD PTR [rip+0xee06]        # 0x4290c0
  41a2ba:	test   rbx,rbx
  41a2bd:	je     0x41a629
  41a2c3:	lea    rsi,[rip+0xedfe]        # 0x4290c8
  41a2ca:	jmp    0x41a2e1
  41a2cc:	nop    DWORD PTR [rax+0x0]
  41a2d0:	add    rsi,0x8
  41a2d4:	mov    rbx,QWORD PTR [rsi-0x8]
  41a2d8:	test   rbx,rbx
  41a2db:	je     0x41a629
  41a2e1:	mov    rcx,QWORD PTR [rbx+0x10]
  41a2e5:	mov    rdx,rdi
  41a2e8:	call   0x419858
  41a2ed:	test   eax,eax
  41a2ef:	jne    0x41a2d0
  41a2f1:	lea    r15,[rsp+0xb8]
  41a2f9:	mov    r8,rbp
  41a2fc:	mov    rdx,rbx
  41a2ff:	mov    rcx,r15
  41a302:	call   0x4094b0
  41a307:	test   eax,eax
  41a309:	mov    esi,eax
  41a30b:	js     0x41a0f8
  41a311:	lea    rax,[rip+0x2de8]        # 0x41d100
  41a318:	mov    rcx,QWORD PTR [rsp+0xb8]
  41a320:	cmp    rbx,rax
  41a323:	je     0x41b32d
  41a329:	mov    edx,0x1f
  41a32e:	call   0x409380
  41a333:	cmp    DWORD PTR [rip+0xf02a],0x0        # 0x429364
  41a33a:	jne    0x41a689
  41a340:	cmp    DWORD PTR [rip+0xf019],0x0        # 0x429360
  41a347:	jne    0x41ab5b
  41a34d:	cmp    DWORD PTR [rip+0xf008],0x0        # 0x42935c
  41a354:	jne    0x41a69b
  41a35a:	mov    r12,QWORD PTR [rip+0xef97]        # 0x4292f8
  41a361:	test   r12,r12
  41a364:	je     0x41b339
  41a36a:	cmp    DWORD PTR [rip+0xf00b],0x0        # 0x42937c
  41a371:	mov    rbx,QWORD PTR [rsp+0xb8]
  41a379:	mov    eax,0x1
  41a37e:	mov    QWORD PTR [rsp+0xc8],0x0
  41a38a:	jne    0x41a398
  41a38c:	xor    eax,eax
  41a38e:	cmp    DWORD PTR [rip+0xf003],0x0        # 0x429398
  41a395:	setne  al
  41a398:	cmp    DWORD PTR [rip+0xefd9],0x0        # 0x429378
  41a39f:	mov    DWORD PTR [rip+0xefeb],eax        # 0x429390
  41a3a5:	mov    eax,0x1
  41a3aa:	jne    0x41a3b8
  41a3ac:	xor    eax,eax
  41a3ae:	cmp    DWORD PTR [rip+0xefdf],0x0        # 0x429394
  41a3b5:	setne  al
  41a3b8:	mov    rdi,QWORD PTR [rip+0xb881]        # 0x425c40
  41a3bf:	lea    rdx,[rip+0x82f2]        # 0x4226b8
  41a3c6:	xor    r8d,r8d
  41a3c9:	mov    r9d,0x1
  41a3cf:	mov    DWORD PTR [rip+0xefb7],eax        # 0x42938c
  41a3d5:	mov    QWORD PTR [rsp+0xd0],0x0
  41a3e1:	mov    rcx,QWORD PTR [rdi]
  41a3e4:	call   0x412438
  41a3e9:	test   rax,rax
  41a3ec:	je     0x41b470
  41a3f2:	lea    rax,[rsp+0xd0]
  41a3fa:	mov    r8,QWORD PTR [rip+0xeeef]        # 0x4292f0
  41a401:	mov    r9,rdi
  41a404:	mov    rdx,r12
  41a407:	mov    rcx,rax
  41a40a:	mov    QWORD PTR [rsp+0x38],rax
  41a40f:	call   0x411fe8
  41a414:	test   eax,eax
  41a416:	mov    esi,eax
  41a418:	js     0x41b419
  41a41e:	mov    rax,QWORD PTR [rsp+0xd0]
  41a426:	mov    QWORD PTR [rsp+0xc8],rax
  41a42e:	mov    rcx,QWORD PTR [rdi]
  41a431:	lea    rdx,[rip+0x6a8b]        # 0x420ec3
  41a438:	xor    r8d,r8d
  41a43b:	mov    r9d,0x2
  41a441:	call   0x412438
  41a446:	test   rax,rax
  41a449:	jne    0x41b450
  41a44f:	mov    rbp,QWORD PTR [rip+0xb7da]        # 0x425c30
  41a456:	mov    rcx,QWORD PTR [rsp+0xd0]
  41a45e:	mov    rdx,QWORD PTR [rbp+0x0]
  41a462:	call   0x407890
  41a467:	mov    rcx,QWORD PTR [rsp+0xd0]
  41a46f:	mov    rdx,rax
  41a472:	mov    QWORD PTR [rsp+0xd8],rax
  41a47a:	mov    edi,DWORD PTR [rcx+0x2c]
  41a47d:	call   0x412010
  41a482:	mov    esi,eax
  41a484:	test   edi,edi
  41a486:	jle    0x41a4ae
  41a488:	lea    eax,[rdi-0x1]
  41a48b:	xor    edi,edi
  41a48d:	lea    r13,[rax*8+0x8]
  41a495:	mov    rcx,rdi
  41a498:	add    rcx,QWORD PTR [rsp+0xd8]
  41a4a0:	add    rdi,0x8
  41a4a4:	call   0x412440
  41a4a9:	cmp    rdi,r13
  41a4ac:	jne    0x41a495
  41a4ae:	lea    rax,[rsp+0xd8]
  41a4b6:	mov    rcx,rax
  41a4b9:	mov    QWORD PTR [rsp+0x30],rax
  41a4be:	call   0x4123b8
  41a4c3:	test   esi,esi
  41a4c5:	js     0x41b419
  41a4cb:	mov    rcx,QWORD PTR [rsp+0xd0]
  41a4d3:	xor    r9d,r9d
  41a4d6:	xor    edx,edx
  41a4d8:	mov    r8,r12
  41a4db:	call   0x412070
  41a4e0:	mov    rax,QWORD PTR [rsp+0xd0]
  41a4e8:	cmp    DWORD PTR [rax+0x2c],0x0
  41a4ec:	je     0x41b045
  41a4f2:	xor    edi,edi
  41a4f4:	xor    esi,esi
  41a4f6:	lea    r12,[rsp+0xe0]
  41a4fe:	jmp    0x41a591
  41a503:	call   0x4120b0
  41a508:	mov    r14,rax
  41a50b:	mov    rax,QWORD PTR [r13+0x8]
  41a50f:	test   r14,r14
  41a512:	je     0x41a649
  41a518:	mov    edx,DWORD PTR [rax+0x38]
  41a51b:	mov    r8,QWORD PTR [rsp+0xd0]
  41a523:	mov    r9,r13
  41a526:	mov    QWORD PTR [rsp+0x20],r14
  41a52b:	mov    rcx,QWORD PTR [rbp+0x0]
  41a52f:	call   0x407600
  41a534:	mov    QWORD PTR [rsp+0xe0],rax
  41a53c:	mov    rcx,QWORD PTR [r13+0x8]
  41a540:	mov    r8,r12
  41a543:	mov    rdx,r14
  41a546:	call   0x412088
  41a54b:	test   eax,eax
  41a54d:	js     0x41a66d
  41a553:	mov    rcx,QWORD PTR [rsp+0xe0]
  41a55b:	lea    rdx,[rip+0x6961]        # 0x420ec3
  41a562:	xor    r8d,r8d
  41a565:	mov    r9d,0x2
  41a56b:	call   0x412438
  41a570:	test   rax,rax
  41a573:	jne    0x41b428
  41a579:	mov    rax,QWORD PTR [rsp+0xd0]
  41a581:	add    esi,0x1
  41a584:	add    rdi,0x8
  41a588:	cmp    esi,DWORD PTR [rax+0x2c]
  41a58b:	jae    0x41b045
  41a591:	mov    rax,QWORD PTR [rax+0x30]
  41a595:	mov    r13,QWORD PTR [rax+rdi*1]
  41a599:	mov    rax,QWORD PTR [r13+0x8]
  41a59d:	mov    ecx,DWORD PTR [rax+0x38]
  41a5a0:	cmp    ecx,0x19000
  41a5a6:	jne    0x41a503
  41a5ac:	mov    r9d,DWORD PTR [r13+0x0]
  41a5b0:	lea    r8,[rip+0x8129]        # 0x4226e0
  41a5b7:	mov    edx,0x18
  41a5bc:	xor    ecx,ecx
  41a5be:	call   0x412308
  41a5c3:	jmp    0x41a579
  41a5c5:	cmp    eax,0xffffffea
  41a5c8:	jne    0x41a0f8
  41a5ce:	mov    r9,QWORD PTR [rip+0xed43]        # 0x429318
  41a5d5:	lea    r8,[rip+0x7edc]        # 0x4224b8
  41a5dc:	mov    edx,0x10
  41a5e1:	xor    ecx,ecx
  41a5e3:	xor    ebx,ebx
  41a5e5:	call   0x412308
  41a5ea:	jmp    0x41a602
  41a5ec:	lea    r8,[rip+0x7ef3]        # 0x4224e6
  41a5f3:	mov    edx,0x10
  41a5f8:	xor    ecx,ecx
  41a5fa:	add    ebx,0x1
  41a5fd:	call   0x412308
  41a602:	mov    ecx,ebx
  41a604:	call   0x412318
  41a609:	test   rax,rax
  41a60c:	mov    r9,rax
  41a60f:	jne    0x41a5ec
  41a611:	lea    r8,[rip+0x6892]        # 0x420eaa
  41a618:	mov    edx,0x10
  41a61d:	xor    ecx,ecx
  41a61f:	call   0x412308
  41a624:	jmp    0x41a0f8
  41a629:	lea    r8,[rip+0x8208]        # 0x422838
  41a630:	mov    r9,rdi
  41a633:	mov    edx,0x10
  41a638:	xor    ecx,ecx
  41a63a:	mov    esi,0xffffffea
  41a63f:	call   0x412308
  41a644:	jmp    0x41a0f8
  41a649:	mov    r9d,DWORD PTR [rax+0x38]
  41a64d:	mov    eax,DWORD PTR [r13+0x0]
  41a651:	lea    r8,[rip+0x80b8]        # 0x422710
  41a658:	mov    edx,0x18
  41a65d:	xor    ecx,ecx
  41a65f:	mov    DWORD PTR [rsp+0x20],eax
  41a663:	call   0x412308
  41a668:	jmp    0x41a579
  41a66d:	mov    r9d,DWORD PTR [r13+0x0]
  41a671:	lea    r8,[rip+0x80d0]        # 0x422748
  41a678:	mov    edx,0x18
  41a67d:	xor    ecx,ecx
  41a67f:	call   0x412308
  41a684:	jmp    0x41a553
  41a689:	mov    rcx,QWORD PTR [rsp+0xb8]
  41a691:	call   0x40ab40
  41a696:	jmp    0x41a340
  41a69b:	mov    rbx,QWORD PTR [rsp+0xb8]
  41a6a3:	mov    edx,0x16
  41a6a8:	xor    edi,edi
  41a6aa:	mov    rcx,rbx
  41a6ad:	call   0x409380
  41a6b2:	jmp    0x41a819
  41a6b7:	lea    rdx,[rbx+rdx*8]
  41a6bb:	cdqe   
  41a6bd:	mov    rcx,QWORD PTR [rdx+0x58]
  41a6c1:	mov    ecx,DWORD PTR [rcx]
  41a6c3:	mov    DWORD PTR [rbx+rax*4+0x30],0x0
  41a6cb:	mov    rax,QWORD PTR [rbx+0x20]
  41a6cf:	add    rax,0x6c0
  41a6d5:	cmp    ecx,0xf
  41a6d8:	mov    QWORD PTR [rdx+0x60],rax
  41a6dc:	jne    0x41a6ea
  41a6de:	mov    eax,DWORD PTR [rbx+0x28ac]
  41a6e4:	mov    DWORD PTR [rbx+0x28b0],eax
  41a6ea:	mov    rax,QWORD PTR [rbx+0x8]
  41a6ee:	mov    rax,QWORD PTR [rax+0x28]
  41a6f2:	test   rax,rax
  41a6f5:	je     0x41a6fc
  41a6f7:	mov    rcx,rbx
  41a6fa:	call   rax
  41a6fc:	mov    r8,QWORD PTR [rdi]
  41a6ff:	lea    rdx,[rip+0x7dee]        # 0x4224f4
  41a706:	mov    rcx,rbx
  41a709:	call   0x40a930
  41a70e:	movsxd rax,DWORD PTR [rbx+0x2c]
  41a712:	movzx  ebp,BYTE PTR [rdi+0x8]
  41a716:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  41a71b:	cmp    DWORD PTR [rax+0x58],0x0
  41a71f:	jne    0x41a73c
  41a721:	mov    rcx,QWORD PTR [rax+0x50]
  41a725:	lea    rdx,[rip+0x7ea5]        # 0x4225d1
  41a72c:	xor    r9d,r9d
  41a72f:	xor    r8d,r8d
  41a732:	call   0x412438
  41a737:	test   rax,rax
  41a73a:	je     0x41a759
  41a73c:	mov    rax,QWORD PTR [rbx+0x8]
  41a740:	mov    r8,rbp
  41a743:	lea    rdx,[rip+0x7e87]        # 0x4225d1
  41a74a:	mov    rcx,rbx
  41a74d:	call   QWORD PTR [rax+0x38]
  41a750:	movsxd rax,DWORD PTR [rbx+0x2c]
  41a754:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  41a759:	cmp    BYTE PTR [rdi+0x8],0x2
  41a75d:	jbe    0x41a769
  41a75f:	test   BYTE PTR [rdi+0xb],0x20
  41a763:	je     0x41a9d7
  41a769:	lea    r8,[rip+0x73c3]        # 0x421b33
  41a770:	lea    rdx,[rip+0x7e68]        # 0x4225df
  41a777:	mov    rcx,rbx
  41a77a:	call   0x40ac10
  41a77f:	lea    r8,[rip+0x73ad]        # 0x421b33
  41a786:	lea    rdx,[rip+0x7e60]        # 0x4225ed
  41a78d:	mov    rcx,rbx
  41a790:	call   0x40ac10
  41a795:	mov    rcx,rdi
  41a798:	call   0x4123b0
  41a79d:	test   eax,eax
  41a79f:	je     0x41a862
  41a7a5:	lea    rdx,[rip+0x7e4f]        # 0x4225fb
  41a7ac:	movsxd r8,eax
  41a7af:	mov    rcx,rbx
  41a7b2:	call   0x409270
  41a7b7:	cmp    DWORD PTR [rip+0xeb9a],0x0        # 0x429358
  41a7be:	jne    0x41a87d
  41a7c4:	cmp    DWORD PTR [rip+0xeb89],0x0        # 0x429354
  41a7cb:	je     0x41a7d7
  41a7cd:	cmp    BYTE PTR [rdi+0x8],0x0
  41a7d1:	jne    0x41aa04
  41a7d7:	movsxd rax,DWORD PTR [rbx+0x2c]
  41a7db:	lea    rcx,[rbx+rax*8]
  41a7df:	test   eax,eax
  41a7e1:	mov    r8,QWORD PTR [rcx+0x58]
  41a7e5:	mov    r8d,DWORD PTR [r8]
  41a7e8:	je     0x41a803
  41a7ea:	mov    rdx,QWORD PTR [rcx+0x50]
  41a7ee:	mov    edx,DWORD PTR [rdx]
  41a7f0:	cmp    edx,0xffffffff
  41a7f3:	je     0x41a803
  41a7f5:	add    DWORD PTR [rbx+rax*4+0x2c],0x1
  41a7fa:	cmp    edx,0xf
  41a7fd:	je     0x41a9c1
  41a803:	mov    rax,QWORD PTR [rbx+0x8]
  41a807:	mov    rax,QWORD PTR [rax+0x30]
  41a80b:	test   rax,rax
  41a80e:	je     0x41a815
  41a810:	mov    rcx,rbx
  41a813:	call   rax
  41a815:	sub    DWORD PTR [rbx+0x2c],0x1
  41a819:	mov    rcx,rdi
  41a81c:	call   0x412248
  41a821:	test   rax,rax
  41a824:	mov    rdi,rax
  41a827:	je     0x41ab4e
  41a82d:	movsxd rdx,DWORD PTR [rbx+0x2c]
  41a831:	lea    eax,[rdx+0x1]
  41a834:	cmp    eax,0x9
  41a837:	mov    DWORD PTR [rbx+0x2c],eax
  41a83a:	jg     0x41b63f
  41a840:	test   eax,eax
  41a842:	jne    0x41a6b7
  41a848:	mov    rax,QWORD PTR [rbx+0x20]
  41a84c:	mov    DWORD PTR [rbx+0x30],0x0
  41a853:	add    rax,0x6c0
  41a859:	mov    QWORD PTR [rbx+0x58],rax
  41a85d:	jmp    0x41a6ea
  41a862:	lea    r8,[rip+0x72ca]        # 0x421b33
  41a869:	lea    rdx,[rip+0x7d8b]        # 0x4225fb
  41a870:	mov    rcx,rbx
  41a873:	call   0x40ac10
  41a878:	jmp    0x41a7b7
  41a87d:	movsxd rdx,DWORD PTR [rbx+0x2c]
  41a881:	lea    eax,[rdx+0x1]
  41a884:	cmp    eax,0x9
  41a887:	mov    DWORD PTR [rbx+0x2c],eax
  41a88a:	jg     0x41b63f
  41a890:	test   eax,eax
  41a892:	je     0x41ab34
  41a898:	lea    rdx,[rbx+rdx*8]
  41a89c:	cdqe   
  41a89e:	mov    rcx,QWORD PTR [rdx+0x58]
  41a8a2:	mov    ecx,DWORD PTR [rcx]
  41a8a4:	mov    DWORD PTR [rbx+rax*4+0x30],0x0
  41a8ac:	mov    rax,QWORD PTR [rbx+0x20]
  41a8b0:	add    rax,0x720
  41a8b6:	cmp    ecx,0xf
  41a8b9:	mov    QWORD PTR [rdx+0x60],rax
  41a8bd:	jne    0x41a8cb
  41a8bf:	mov    eax,DWORD PTR [rbx+0x28ac]
  41a8c5:	mov    DWORD PTR [rbx+0x28b0],eax
  41a8cb:	mov    rax,QWORD PTR [rbx+0x8]
  41a8cf:	mov    rax,QWORD PTR [rax+0x28]
  41a8d3:	test   rax,rax
  41a8d6:	je     0x41a8dd
  41a8d8:	mov    rcx,rbx
  41a8db:	call   rax
  41a8dd:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a8e2:	lea    rdx,[rip+0x7d21]        # 0x42260a
  41a8e9:	mov    rcx,rbx
  41a8ec:	and    r8d,0x1
  41a8f0:	call   0x409270
  41a8f5:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a8fa:	lea    rdx,[rip+0x7d14]        # 0x422615
  41a901:	mov    rcx,rbx
  41a904:	shr    r8b,1
  41a907:	and    r8d,0x1
  41a90b:	call   0x409270
  41a910:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a915:	lea    rdx,[rip+0x7d01]        # 0x42261d
  41a91c:	mov    rcx,rbx
  41a91f:	shr    r8b,0x2
  41a923:	and    r8d,0x1
  41a927:	call   0x409270
  41a92c:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a931:	lea    rdx,[rip+0x7cef]        # 0x422627
  41a938:	mov    rcx,rbx
  41a93b:	shr    r8b,0x3
  41a93f:	and    r8d,0x1
  41a943:	call   0x409270
  41a948:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a94d:	lea    rdx,[rip+0x7cdb]        # 0x42262f
  41a954:	mov    rcx,rbx
  41a957:	shr    r8b,0x4
  41a95b:	and    r8d,0x1
  41a95f:	call   0x409270
  41a964:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a969:	lea    rdx,[rip+0x7cc6]        # 0x422636
  41a970:	mov    rcx,rbx
  41a973:	shr    r8b,0x5
  41a977:	and    r8d,0x1
  41a97b:	call   0x409270
  41a980:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a985:	lea    rdx,[rip+0x7cae]        # 0x42263a
  41a98c:	mov    rcx,rbx
  41a98f:	shr    r8b,0x6
  41a993:	and    r8d,0x1
  41a997:	call   0x409270
  41a99c:	movsx  r8,BYTE PTR [rdi+0xb]
  41a9a1:	lea    rdx,[rip+0x7c9c]        # 0x422644
  41a9a8:	mov    rcx,rbx
  41a9ab:	shr    r8,0x3f
  41a9af:	call   0x409270
  41a9b4:	mov    rcx,rbx
  41a9b7:	call   0x407ed0
  41a9bc:	jmp    0x41a7c4
  41a9c1:	cmp    r8d,0xd
  41a9c5:	je     0x41b265
  41a9cb:	add    DWORD PTR [rbx+0x28ac],0x1
  41a9d2:	jmp    0x41a803
  41a9d7:	movzx  r8d,BYTE PTR [rdi+0x9]
  41a9dc:	lea    rdx,[rip+0x7bfc]        # 0x4225df
  41a9e3:	mov    rcx,rbx
  41a9e6:	call   0x409270
  41a9eb:	movzx  r8d,BYTE PTR [rdi+0xa]
  41a9f0:	lea    rdx,[rip+0x7bf6]        # 0x4225ed
  41a9f7:	mov    rcx,rbx
  41a9fa:	call   0x409270
  41a9ff:	jmp    0x41a795
  41aa04:	mov    edx,0x15
  41aa09:	mov    rcx,rbx
  41aa0c:	xor    ebp,ebp
  41aa0e:	call   0x409380
  41aa13:	movzx  eax,BYTE PTR [rdi+0x8]
  41aa17:	movsxd r12,ebp
  41aa1a:	cmp    ebp,eax
  41aa1c:	jge    0x41ab27
  41aa22:	movsxd rdx,DWORD PTR [rbx+0x2c]
  41aa26:	lea    eax,[rdx+0x1]
  41aa29:	cmp    eax,0x9
  41aa2c:	mov    DWORD PTR [rbx+0x2c],eax
  41aa2f:	jg     0x41b63f
  41aa35:	test   eax,eax
  41aa37:	je     0x41aafa
  41aa3d:	lea    rdx,[rbx+rdx*8]
  41aa41:	cdqe   
  41aa43:	mov    rcx,QWORD PTR [rdx+0x58]
  41aa47:	mov    ecx,DWORD PTR [rcx]
  41aa49:	mov    DWORD PTR [rbx+rax*4+0x30],0x0
  41aa51:	mov    rax,QWORD PTR [rbx+0x20]
  41aa55:	add    rax,0x780
  41aa5b:	cmp    ecx,0xf
  41aa5e:	mov    QWORD PTR [rdx+0x60],rax
  41aa62:	jne    0x41aa70
  41aa64:	mov    eax,DWORD PTR [rbx+0x28ac]
  41aa6a:	mov    DWORD PTR [rbx+0x28b0],eax
  41aa70:	mov    rax,QWORD PTR [rbx+0x8]
  41aa74:	mov    rax,QWORD PTR [rax+0x28]
  41aa78:	test   rax,rax
  41aa7b:	je     0x41aa82
  41aa7d:	mov    rcx,rbx
  41aa80:	call   rax
  41aa82:	add    rbp,0x1
  41aa86:	lea    rdx,[rip+0x774f]        # 0x4221dc
  41aa8d:	mov    rcx,rbx
  41aa90:	mov    r8,rbp
  41aa93:	call   0x409270
  41aa98:	movzx  eax,BYTE PTR [rdi+r12*2+0xd]
  41aa9e:	lea    rdx,[rip+0x7ba5]        # 0x42264a
  41aaa5:	mov    rcx,rbx
  41aaa8:	shr    al,0x3
  41aaab:	and    eax,0xf
  41aaae:	lea    r8,[rax+0x1]
  41aab2:	call   0x409270
  41aab7:	movsxd rax,DWORD PTR [rbx+0x2c]
  41aabb:	lea    rcx,[rbx+rax*8]
  41aabf:	test   eax,eax
  41aac1:	mov    r8,QWORD PTR [rcx+0x58]
  41aac5:	mov    r8d,DWORD PTR [r8]
  41aac8:	je     0x41aadf
  41aaca:	mov    rdx,QWORD PTR [rcx+0x50]
  41aace:	mov    edx,DWORD PTR [rdx]
  41aad0:	cmp    edx,0xffffffff
  41aad3:	je     0x41aadf
  41aad5:	add    DWORD PTR [rbx+rax*4+0x2c],0x1
  41aada:	cmp    edx,0xf
  41aadd:	je     0x41ab14
  41aadf:	mov    rax,QWORD PTR [rbx+0x8]
  41aae3:	mov    rax,QWORD PTR [rax+0x30]
  41aae7:	test   rax,rax
  41aaea:	je     0x41aaf1
  41aaec:	mov    rcx,rbx
  41aaef:	call   rax
  41aaf1:	sub    DWORD PTR [rbx+0x2c],0x1
  41aaf5:	jmp    0x41aa13
  41aafa:	mov    rax,QWORD PTR [rbx+0x20]
  41aafe:	mov    DWORD PTR [rbx+0x30],0x0
  41ab05:	add    rax,0x780
  41ab0b:	mov    QWORD PTR [rbx+0x58],rax
  41ab0f:	jmp    0x41aa70
  41ab14:	cmp    r8d,0xd
  41ab18:	je     0x41b40d
  41ab1e:	add    DWORD PTR [rbx+0x28ac],0x1
  41ab25:	jmp    0x41aadf
  41ab27:	mov    rcx,rbx
  41ab2a:	call   0x407ed0
  41ab2f:	jmp    0x41a7d7
  41ab34:	mov    rax,QWORD PTR [rbx+0x20]
  41ab38:	mov    DWORD PTR [rbx+0x30],0x0
  41ab3f:	add    rax,0x720
  41ab45:	mov    QWORD PTR [rbx+0x58],rax
  41ab49:	jmp    0x41a8cb
  41ab4e:	mov    rcx,rbx
  41ab51:	call   0x407ed0
  41ab56:	jmp    0x41a35a
  41ab5b:	mov    rbx,QWORD PTR [rsp+0xb8]
  41ab63:	mov    edx,0xc
  41ab68:	mov    rcx,rbx
  41ab6b:	call   0x409380
  41ab70:	call   0x4121d0
  41ab75:	mov    rcx,rbx
  41ab78:	mov    edx,0xb
  41ab7d:	mov    edi,eax
  41ab7f:	call   0x409380
  41ab84:	lea    r8,[rip+0x795f]        # 0x4224ea
  41ab8b:	lea    rdx,[rip+0x7962]        # 0x4224f4
  41ab92:	mov    rcx,rbx
  41ab95:	call   0x40a930
  41ab9a:	lea    rdx,[rip+0x7958]        # 0x4224f9
  41aba1:	mov    rcx,rbx
  41aba4:	mov    r8d,0x36
  41abaa:	call   0x409270
  41abaf:	lea    rdx,[rip+0x7949]        # 0x4224ff
  41abb6:	mov    rcx,rbx
  41abb9:	mov    r8d,0x1f
  41abbf:	call   0x409270
  41abc4:	lea    rdx,[rip+0x793a]        # 0x422505
  41abcb:	mov    rcx,rbx
  41abce:	mov    r8d,0x64
  41abd4:	call   0x409270
  41abd9:	lea    rdx,[rip+0x6b5a]        # 0x42173a
  41abe0:	mov    r8d,edi
  41abe3:	mov    rcx,rbx
  41abe6:	call   0x409270
  41abeb:	lea    r8,[rip+0x7919]        # 0x42250b
  41abf2:	lea    rdx,[rip+0x7920]        # 0x422519
  41abf9:	mov    rcx,rbx
  41abfc:	call   0x40a930
  41ac01:	mov    rcx,rbx
  41ac04:	call   0x407ed0
  41ac09:	call   0x412080
  41ac0e:	mov    rcx,rbx
  41ac11:	mov    edx,0xb
  41ac16:	mov    edi,eax
  41ac18:	call   0x409380
  41ac1d:	lea    r8,[rip+0x78fb]        # 0x42251f
  41ac24:	lea    rdx,[rip+0x78c9]        # 0x4224f4
  41ac2b:	mov    rcx,rbx
  41ac2e:	call   0x40a930
  41ac33:	lea    rdx,[rip+0x78bf]        # 0x4224f9
  41ac3a:	mov    rcx,rbx
  41ac3d:	mov    r8d,0x38
  41ac43:	call   0x409270
  41ac48:	lea    rdx,[rip+0x78b0]        # 0x4224ff
  41ac4f:	mov    rcx,rbx
  41ac52:	mov    r8d,0x3c
  41ac58:	call   0x409270
  41ac5d:	lea    rdx,[rip+0x78a1]        # 0x422505
  41ac64:	mov    rcx,rbx
  41ac67:	mov    r8d,0x64
  41ac6d:	call   0x409270
  41ac72:	lea    rdx,[rip+0x6ac1]        # 0x42173a
  41ac79:	mov    r8d,edi
  41ac7c:	mov    rcx,rbx
  41ac7f:	call   0x409270
  41ac84:	lea    r8,[rip+0x789f]        # 0x42252a
  41ac8b:	lea    rdx,[rip+0x7887]        # 0x422519
  41ac92:	mov    rcx,rbx
  41ac95:	call   0x40a930
  41ac9a:	mov    rcx,rbx
  41ac9d:	call   0x407ed0
  41aca2:	call   0x411fd8
  41aca7:	mov    rcx,rbx
  41acaa:	mov    edx,0xb
  41acaf:	mov    edi,eax
  41acb1:	call   0x409380
  41acb6:	lea    r8,[rip+0x787b]        # 0x422538
  41acbd:	lea    rdx,[rip+0x7830]        # 0x4224f4
  41acc4:	mov    rcx,rbx
  41acc7:	call   0x40a930
  41accc:	lea    rdx,[rip+0x7826]        # 0x4224f9
  41acd3:	mov    rcx,rbx
  41acd6:	mov    r8d,0x38
  41acdc:	call   0x409270
  41ace1:	lea    rdx,[rip+0x7817]        # 0x4224ff
  41ace8:	mov    rcx,rbx
  41aceb:	mov    r8d,0x28
  41acf1:	call   0x409270
  41acf6:	lea    rdx,[rip+0x7808]        # 0x422505
  41acfd:	mov    rcx,rbx
  41ad00:	mov    r8d,0x65
  41ad06:	call   0x409270
  41ad0b:	lea    rdx,[rip+0x6a28]        # 0x42173a
  41ad12:	mov    r8d,edi
  41ad15:	mov    rcx,rbx
  41ad18:	call   0x409270
  41ad1d:	lea    r8,[rip+0x7820]        # 0x422544
  41ad24:	lea    rdx,[rip+0x77ee]        # 0x422519
  41ad2b:	mov    rcx,rbx
  41ad2e:	call   0x40a930
  41ad33:	mov    rcx,rbx
  41ad36:	call   0x407ed0
  41ad3b:	call   0x411f40
  41ad40:	mov    rcx,rbx
  41ad43:	mov    edx,0xb
  41ad48:	mov    edi,eax
  41ad4a:	call   0x409380
  41ad4f:	lea    r8,[rip+0x77fc]        # 0x422552
  41ad56:	lea    rdx,[rip+0x7797]        # 0x4224f4
  41ad5d:	mov    rcx,rbx
  41ad60:	call   0x40a930
  41ad65:	lea    rdx,[rip+0x778d]        # 0x4224f9
  41ad6c:	mov    rcx,rbx
  41ad6f:	mov    r8d,0x38
  41ad75:	call   0x409270
  41ad7a:	lea    rdx,[rip+0x777e]        # 0x4224ff
  41ad81:	mov    rcx,rbx
  41ad84:	mov    r8d,0x4
  41ad8a:	call   0x409270
  41ad8f:	lea    rdx,[rip+0x776f]        # 0x422505
  41ad96:	mov    rcx,rbx
  41ad99:	mov    r8d,0x64
  41ad9f:	call   0x409270
  41ada4:	lea    rdx,[rip+0x698f]        # 0x42173a
  41adab:	mov    r8d,edi
  41adae:	mov    rcx,rbx
  41adb1:	call   0x409270
  41adb6:	lea    r8,[rip+0x77a1]        # 0x42255e
  41adbd:	lea    rdx,[rip+0x7755]        # 0x422519
  41adc4:	mov    rcx,rbx
  41adc7:	call   0x40a930
  41adcc:	mov    rcx,rbx
  41adcf:	call   0x407ed0
  41add4:	call   0x411f90
  41add9:	mov    rcx,rbx
  41addc:	mov    edx,0xb
  41ade1:	mov    edi,eax
  41ade3:	call   0x409380
  41ade8:	lea    r8,[rip+0x777c]        # 0x42256b
  41adef:	lea    rdx,[rip+0x76fe]        # 0x4224f4
  41adf6:	mov    rcx,rbx
  41adf9:	call   0x40a930
  41adfe:	lea    rdx,[rip+0x76f4]        # 0x4224f9
  41ae05:	mov    rcx,rbx
  41ae08:	mov    r8d,0x5
  41ae0e:	call   0x409270
  41ae13:	lea    rdx,[rip+0x76e5]        # 0x4224ff
  41ae1a:	mov    rcx,rbx
  41ae1d:	mov    r8d,0x28
  41ae23:	call   0x409270
  41ae28:	lea    rdx,[rip+0x76d6]        # 0x422505
  41ae2f:	mov    rcx,rbx
  41ae32:	mov    r8d,0x65
  41ae38:	call   0x409270
  41ae3d:	lea    rdx,[rip+0x68f6]        # 0x42173a
  41ae44:	mov    r8d,edi
  41ae47:	mov    rcx,rbx
  41ae4a:	call   0x409270
  41ae4f:	lea    r8,[rip+0x7721]        # 0x422577
  41ae56:	lea    rdx,[rip+0x76bc]        # 0x422519
  41ae5d:	mov    rcx,rbx
  41ae60:	call   0x40a930
  41ae65:	mov    rcx,rbx
  41ae68:	call   0x407ed0
  41ae6d:	call   0x412198
  41ae72:	mov    rcx,rbx
  41ae75:	mov    edx,0xb
  41ae7a:	mov    edi,eax
  41ae7c:	call   0x409380
  41ae81:	lea    r8,[rip+0x76fd]        # 0x422585
  41ae88:	lea    rdx,[rip+0x7665]        # 0x4224f4
  41ae8f:	mov    rcx,rbx
  41ae92:	call   0x40a930
  41ae97:	lea    rdx,[rip+0x765b]        # 0x4224f9
  41ae9e:	mov    rcx,rbx
  41aea1:	mov    r8d,0x3
  41aea7:	call   0x409270
  41aeac:	lea    rdx,[rip+0x764c]        # 0x4224ff
  41aeb3:	mov    rcx,rbx
  41aeb6:	mov    r8d,0x1
  41aebc:	call   0x409270
  41aec1:	lea    rdx,[rip+0x763d]        # 0x422505
  41aec8:	mov    rcx,rbx
  41aecb:	mov    r8d,0x65
  41aed1:	call   0x409270
  41aed6:	lea    rdx,[rip+0x685d]        # 0x42173a
  41aedd:	mov    r8d,edi
  41aee0:	mov    rcx,rbx
  41aee3:	call   0x409270
  41aee8:	lea    r8,[rip+0x76a1]        # 0x422590
  41aeef:	lea    rdx,[rip+0x7623]        # 0x422519
  41aef6:	mov    rcx,rbx
  41aef9:	call   0x40a930
  41aefe:	mov    rcx,rbx
  41af01:	call   0x407ed0
  41af06:	call   0x412170
  41af0b:	mov    rcx,rbx
  41af0e:	mov    edx,0xb
  41af13:	mov    edi,eax
  41af15:	call   0x409380
  41af1a:	lea    r8,[rip+0x767a]        # 0x42259b
  41af21:	lea    rdx,[rip+0x75cc]        # 0x4224f4
  41af28:	mov    rcx,rbx
  41af2b:	call   0x40a930
  41af30:	lea    rdx,[rip+0x75c2]        # 0x4224f9
  41af37:	mov    rcx,rbx
  41af3a:	mov    r8d,0x1
  41af40:	call   0x409270
  41af45:	lea    rdx,[rip+0x75b3]        # 0x4224ff
  41af4c:	mov    rcx,rbx
  41af4f:	mov    r8d,0x2
  41af55:	call   0x409270
  41af5a:	lea    rdx,[rip+0x75a4]        # 0x422505
  41af61:	mov    rcx,rbx
  41af64:	mov    r8d,0x65
  41af6a:	call   0x409270
  41af6f:	lea    rdx,[rip+0x67c4]        # 0x42173a
  41af76:	mov    r8d,edi
  41af79:	mov    rcx,rbx
  41af7c:	call   0x409270
  41af81:	lea    r8,[rip+0x7621]        # 0x4225a9
  41af88:	lea    rdx,[rip+0x758a]        # 0x422519
  41af8f:	mov    rcx,rbx
  41af92:	call   0x40a930
  41af97:	mov    rcx,rbx
  41af9a:	call   0x407ed0
  41af9f:	call   0x412160
  41afa4:	mov    rcx,rbx
  41afa7:	mov    edx,0xb
  41afac:	mov    edi,eax
  41afae:	call   0x409380
  41afb3:	lea    r8,[rip+0x75fa]        # 0x4225b4
  41afba:	lea    rdx,[rip+0x7533]        # 0x4224f4
  41afc1:	mov    rcx,rbx
  41afc4:	call   0x40a930
  41afc9:	lea    rdx,[rip+0x7529]        # 0x4224f9
  41afd0:	mov    rcx,rbx
  41afd3:	mov    r8d,0x35
  41afd9:	call   0x409270
  41afde:	lea    rdx,[rip+0x751a]        # 0x4224ff
  41afe5:	mov    rcx,rbx
  41afe8:	mov    r8d,0x3
  41afee:	call   0x409270
  41aff3:	lea    rdx,[rip+0x750b]        # 0x422505
  41affa:	mov    rcx,rbx
  41affd:	mov    r8d,0x64
  41b003:	call   0x409270
  41b008:	lea    rdx,[rip+0x672b]        # 0x42173a
  41b00f:	mov    r8d,edi
  41b012:	mov    rcx,rbx
  41b015:	call   0x409270
  41b01a:	lea    r8,[rip+0x759f]        # 0x4225c0
  41b021:	lea    rdx,[rip+0x74f1]        # 0x422519
  41b028:	mov    rcx,rbx
  41b02b:	call   0x40a930
  41b030:	mov    rcx,rbx
  41b033:	call   0x407ed0
  41b038:	mov    rcx,rbx
  41b03b:	call   0x407ed0
  41b040:	jmp    0x41a34d
  41b045:	mov    edx,DWORD PTR [rax+0x2c]
  41b048:	lea    rcx,[rip+0xe281]        # 0x4292d0
  41b04f:	mov    r8d,0x8
  41b055:	mov    QWORD PTR [rsp+0xc8],rax
  41b05d:	mov    DWORD PTR [rip+0xe27d],edx        # 0x4292e0
  41b063:	call   0x412238
  41b068:	test   eax,eax
  41b06a:	mov    esi,eax
  41b06c:	js     0x41b1cb
  41b072:	mov    rax,QWORD PTR [rsp+0xc8]
  41b07a:	mov    rcx,QWORD PTR [rip+0xe24f]        # 0x4292d0
  41b081:	xor    edx,edx
  41b083:	mov    r8d,DWORD PTR [rax+0x2c]
  41b087:	shl    r8,0x3
  41b08b:	call   0x419878
  41b090:	mov    rax,QWORD PTR [rsp+0xc8]
  41b098:	lea    rcx,[rip+0xe239]        # 0x4292d8
  41b09f:	mov    r8d,0x8
  41b0a5:	mov    edx,DWORD PTR [rax+0x2c]
  41b0a8:	call   0x412238
  41b0ad:	test   eax,eax
  41b0af:	mov    esi,eax
  41b0b1:	js     0x41b1cb
  41b0b7:	mov    rax,QWORD PTR [rsp+0xc8]
  41b0bf:	mov    rcx,QWORD PTR [rip+0xe212]        # 0x4292d8
  41b0c6:	xor    edx,edx
  41b0c8:	mov    r8d,DWORD PTR [rax+0x2c]
  41b0cc:	shl    r8,0x3
  41b0d0:	call   0x419878
  41b0d5:	mov    rax,QWORD PTR [rsp+0xc8]
  41b0dd:	lea    rcx,[rip+0xe1e4]        # 0x4292c8
  41b0e4:	mov    r8d,0x4
  41b0ea:	mov    edx,DWORD PTR [rax+0x2c]
  41b0ed:	call   0x412238
  41b0f2:	test   eax,eax
  41b0f4:	mov    esi,eax
  41b0f6:	js     0x41b1cb
  41b0fc:	mov    rax,QWORD PTR [rsp+0xc8]
  41b104:	mov    rcx,QWORD PTR [rip+0xe1bd]        # 0x4292c8
  41b10b:	xor    edx,edx
  41b10d:	xor    edi,edi
  41b10f:	mov    r8d,DWORD PTR [rax+0x2c]
  41b113:	shl    r8,0x2
  41b117:	call   0x419878
  41b11c:	mov    rbp,QWORD PTR [rsp+0xc8]
  41b124:	mov    eax,esi
  41b126:	mov    rcx,rbp
  41b129:	jmp    0x41b158
  41b12b:	mov    rax,QWORD PTR [rcx+0x30]
  41b12f:	mov    rdx,QWORD PTR [rax+rdi*8]
  41b133:	call   0x412000
  41b138:	test   eax,eax
  41b13a:	js     0x41b638
  41b140:	mov    rdx,QWORD PTR [rip+0xe181]        # 0x4292c8
  41b147:	mov    rcx,QWORD PTR [rsp+0xc8]
  41b14f:	mov    DWORD PTR [rdx+rdi*4],eax
  41b152:	xor    eax,eax
  41b154:	add    rdi,0x1
  41b158:	cmp    DWORD PTR [rcx+0x2c],edi
  41b15b:	jbe    0x41b4e5
  41b161:	mov    r8,QWORD PTR [rip+0xe1b8]        # 0x429320
  41b168:	test   r8,r8
  41b16b:	jne    0x41b12b
  41b16d:	mov    rdx,QWORD PTR [rip+0xe154]        # 0x4292c8
  41b174:	mov    DWORD PTR [rdx+rdi*4],0x1
  41b17b:	jmp    0x41b154
  41b17d:	mov    edx,0x22
  41b182:	mov    rcx,rbx
  41b185:	xor    esi,esi
  41b187:	call   0x409380
  41b18c:	xor    edi,edi
  41b18e:	mov    eax,esi
  41b190:	jmp    0x41b196
  41b192:	add    rdi,0x1
  41b196:	cmp    DWORD PTR [rbp+0x2c],edi
  41b199:	jbe    0x41bb5f
  41b19f:	mov    rdx,QWORD PTR [rip+0xe122]        # 0x4292c8
  41b1a6:	cmp    DWORD PTR [rdx+rdi*4],0x0
  41b1aa:	je     0x41b192
  41b1ac:	xor    r9d,r9d
  41b1af:	mov    r8d,edi
  41b1b2:	mov    rdx,rbp
  41b1b5:	mov    rcx,rbx
  41b1b8:	call   0x40fb40
  41b1bd:	test   eax,eax
  41b1bf:	jns    0x41b192
  41b1c1:	mov    rcx,rbx
  41b1c4:	mov    esi,eax
  41b1c6:	call   0x407ed0
  41b1cb:	mov    rbp,QWORD PTR [rsp+0xc8]
  41b1d3:	test   rbp,rbp
  41b1d6:	je     0x41b29a
  41b1dc:	xor    edi,edi
  41b1de:	xor    ebx,ebx
  41b1e0:	cmp    DWORD PTR [rbp+0x2c],0x0
  41b1e4:	jne    0x41b1fc
  41b1e6:	jmp    0x41b216
  41b1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b1f0:	add    ebx,0x1
  41b1f3:	add    rdi,0x8
  41b1f7:	cmp    ebx,DWORD PTR [rbp+0x2c]
  41b1fa:	jae    0x41b216
  41b1fc:	mov    rax,QWORD PTR [rbp+0x30]
  41b200:	mov    rax,QWORD PTR [rax+rdi*1]
  41b204:	mov    rcx,QWORD PTR [rax+0x8]
  41b208:	mov    eax,DWORD PTR [rcx+0x38]
  41b20b:	test   eax,eax
  41b20d:	je     0x41b1f0
  41b20f:	call   0x4120f0
  41b214:	jmp    0x41b1f0
  41b216:	lea    rcx,[rsp+0xc8]
  41b21e:	call   0x412020
  41b223:	lea    rcx,[rip+0xe0a6]        # 0x4292d0
  41b22a:	call   0x4123b8
  41b22f:	lea    rcx,[rip+0xe0a2]        # 0x4292d8
  41b236:	call   0x4123b8
  41b23b:	lea    rcx,[rip+0xe086]        # 0x4292c8
  41b242:	call   0x4123b8
  41b247:	test   esi,esi
  41b249:	js     0x41b2be
  41b24b:	mov    rcx,QWORD PTR [rsp+0xb8]
  41b253:	call   0x407ed0
  41b258:	mov    rcx,r15
  41b25b:	call   0x4092d0
  41b260:	jmp    0x41a0f8
  41b265:	add    DWORD PTR [rbx+0x28a8],0x1
  41b26c:	jmp    0x41a803
  41b271:	lea    rcx,[rip+0x5c08]        # 0x420e80
  41b278:	mov    esi,0xfffffff4
  41b27d:	call   0x412220
  41b282:	test   rax,rax
  41b285:	mov    rcx,rax
  41b288:	mov    QWORD PTR [rip+0xe099],rax        # 0x429328
  41b28f:	je     0x41a0f8
  41b295:	jmp    0x41a272
  41b29a:	lea    rcx,[rip+0xe02f]        # 0x4292d0
  41b2a1:	call   0x4123b8
  41b2a6:	lea    rcx,[rip+0xe02b]        # 0x4292d8
  41b2ad:	call   0x4123b8
  41b2b2:	lea    rcx,[rip+0xe00f]        # 0x4292c8
  41b2b9:	call   0x4123b8
  41b2be:	cmp    DWORD PTR [rip+0xe0bf],0x0        # 0x429384
  41b2c5:	je     0x41b24b
  41b2c7:	lea    rbx,[rsp+0xe0]
  41b2cf:	mov    r8d,0x80
  41b2d5:	mov    ecx,esi
  41b2d7:	mov    rdi,QWORD PTR [rsp+0xb8]
  41b2df:	mov    rdx,rbx
  41b2e2:	call   0x412218
  41b2e7:	test   eax,eax
  41b2e9:	js     0x41b674
  41b2ef:	mov    rcx,rdi
  41b2f2:	mov    edx,0x3
  41b2f7:	call   0x409380
  41b2fc:	lea    rdx,[rip+0x7529]        # 0x42282c
  41b303:	movsxd r8,esi
  41b306:	mov    rcx,rdi
  41b309:	call   0x409270
  41b30e:	lea    rdx,[rip+0x751c]        # 0x422831
  41b315:	mov    rcx,rdi
  41b318:	mov    r8,rbx
  41b31b:	call   0x40a930
  41b320:	mov    rcx,rdi
  41b323:	call   0x407ed0
  41b328:	jmp    0x41b24b
  41b32d:	or     DWORD PTR [rcx+0x28c0],0x8
  41b334:	jmp    0x41a329
  41b339:	cmp    DWORD PTR [rip+0xe040],0x0        # 0x429380
  41b340:	jne    0x41b396
  41b342:	cmp    DWORD PTR [rip+0xe02b],0x0        # 0x429374
  41b349:	jne    0x41b396
  41b34b:	cmp    DWORD PTR [rip+0xe01e],0x0        # 0x429370
  41b352:	jne    0x41b396
  41b354:	cmp    DWORD PTR [rip+0xe02d],0x0        # 0x429388
  41b35b:	jne    0x41b396
  41b35d:	cmp    DWORD PTR [rip+0xe014],0x0        # 0x429378
  41b364:	jne    0x41b396
  41b366:	cmp    DWORD PTR [rip+0xe017],0x0        # 0x429384
  41b36d:	jne    0x41b396
  41b36f:	cmp    DWORD PTR [rip+0xdfee],0x0        # 0x429364
  41b376:	jne    0x41b24b
  41b37c:	cmp    DWORD PTR [rip+0xdfdd],0x0        # 0x429360
  41b383:	jne    0x41b24b
  41b389:	cmp    DWORD PTR [rip+0xdfcc],0x0        # 0x42935c
  41b390:	jne    0x41b24b
  41b396:	lea    r8,[rip+0x706b]        # 0x422408
  41b39d:	mov    edx,0x20
  41b3a2:	xor    ecx,ecx
  41b3a4:	mov    esi,0xffffffea
  41b3a9:	call   0x412308
  41b3ae:	lea    r9,[rip+0x9ee3]        # 0x425298
  41b3b5:	lea    r8,[rip+0x7074]        # 0x422430
  41b3bc:	mov    edx,0x20
  41b3c1:	xor    ecx,ecx
  41b3c3:	call   0x412308
  41b3c8:	lea    r8,[rip+0x5adb]        # 0x420eaa
  41b3cf:	mov    edx,0x20
  41b3d4:	xor    ecx,ecx
  41b3d6:	call   0x412308
  41b3db:	lea    r8,[rip+0x7276]        # 0x422658
  41b3e2:	mov    edx,0x10
  41b3e7:	xor    ecx,ecx
  41b3e9:	call   0x412308
  41b3ee:	lea    r9,[rip+0x9ea3]        # 0x425298
  41b3f5:	lea    r8,[rip+0x7284]        # 0x422680
  41b3fc:	mov    edx,0x10
  41b401:	xor    ecx,ecx
  41b403:	call   0x412308
  41b408:	jmp    0x41b24b
  41b40d:	add    DWORD PTR [rbx+0x28a8],0x1
  41b414:	jmp    0x41aadf
  41b419:	mov    edx,esi
  41b41b:	mov    rcx,r12
  41b41e:	call   0x4054b0
  41b423:	jmp    0x41b1cb
  41b428:	mov    edx,DWORD PTR [r13+0x0]
  41b42c:	lea    r8,[rip+0x7345]        # 0x422778
  41b433:	xor    ecx,ecx
  41b435:	mov    esi,0xabafb008
  41b43a:	mov    DWORD PTR [rsp+0x20],edx
  41b43e:	mov    r9,QWORD PTR [rax]
  41b441:	mov    edx,0x10
  41b446:	call   0x412308
  41b44b:	jmp    0x41b1cb
  41b450:	mov    r9,QWORD PTR [rax]
  41b453:	lea    r8,[rip+0x726e]        # 0x4226c8
  41b45a:	mov    edx,0x10
  41b45f:	xor    ecx,ecx
  41b461:	mov    esi,0xabafb008
  41b466:	call   0x412308
  41b46b:	jmp    0x41b1cb
  41b470:	lea    r8,[rip+0x724f]        # 0x4226c6
  41b477:	lea    rdx,[rip+0x723a]        # 0x4226b8
  41b47e:	mov    r9d,0x10
  41b484:	mov    rcx,rdi
  41b487:	call   0x412428
  41b48c:	lea    rax,[rsp+0xd0]
  41b494:	mov    r8,QWORD PTR [rip+0xde55]        # 0x4292f0
  41b49b:	mov    r9,rdi
  41b49e:	mov    rdx,r12
  41b4a1:	mov    rcx,rax
  41b4a4:	mov    QWORD PTR [rsp+0x38],rax
  41b4a9:	call   0x411fe8
  41b4ae:	test   eax,eax
  41b4b0:	mov    esi,eax
  41b4b2:	js     0x41b419
  41b4b8:	mov    rax,QWORD PTR [rsp+0xd0]
  41b4c0:	lea    rdx,[rip+0x71f1]        # 0x4226b8
  41b4c7:	mov    r9d,0x1
  41b4cd:	xor    r8d,r8d
  41b4d0:	mov    rcx,rdi
  41b4d3:	mov    QWORD PTR [rsp+0xc8],rax
  41b4db:	call   0x412428
  41b4e0:	jmp    0x41a42e
  41b4e5:	cmp    DWORD PTR [rip+0xdea4],0x0        # 0x429390
  41b4ec:	mov    esi,eax
  41b4ee:	mov    rbp,rcx
  41b4f1:	jne    0x41b500
  41b4f3:	cmp    DWORD PTR [rip+0xde92],0x0        # 0x42938c
  41b4fa:	je     0x41b5bb
  41b500:	cmp    DWORD PTR [rip+0xde75],0x0        # 0x42937c
  41b507:	je     0x41b621
  41b50d:	cmp    DWORD PTR [rip+0xde64],0x0        # 0x429378
  41b514:	mov    edx,0x7
  41b519:	je     0x41b530
  41b51b:	mov    rax,QWORD PTR [rbx+0x8]
  41b51f:	mov    eax,DWORD PTR [rax+0x50]
  41b522:	and    eax,0x2
  41b525:	cmp    eax,0x1
  41b528:	sbb    edx,edx
  41b52a:	and    edx,0xfffffff8
  41b52d:	add    edx,0xf
  41b530:	mov    rcx,rbx
  41b533:	call   0x409380
  41b538:	mov    rbp,QWORD PTR [rsp+0xc8]
  41b540:	cmp    DWORD PTR [rip+0xddc1],0x0        # 0x429308
  41b547:	mov    rax,QWORD PTR [rbp+0x438]
  41b54e:	mov    QWORD PTR [rsp+0xd8],rax
  41b556:	je     0x41b644
  41b55c:	xor    esi,esi
  41b55e:	xor    edi,edi
  41b560:	mov    eax,esi
  41b562:	jmp    0x41b587
  41b564:	imul   r8,rdi,0x30
  41b568:	mov    r9,QWORD PTR [rsp+0x30]
  41b56d:	mov    rdx,rbp
  41b570:	add    r8,QWORD PTR [rip+0xdd99]        # 0x429310
  41b577:	mov    rcx,rbx
  41b57a:	add    rdi,0x1
  41b57e:	call   0x40e760
  41b583:	test   eax,eax
  41b585:	js     0x41b58f
  41b587:	cmp    DWORD PTR [rip+0xdd7b],edi        # 0x429308
  41b58d:	jg     0x41b564
  41b58f:	mov    esi,eax
  41b591:	cmp    DWORD PTR [rip+0xdde4],0x0        # 0x42937c
  41b598:	jne    0x41b5a3
  41b59a:	cmp    DWORD PTR [rip+0xddd7],0x0        # 0x429378
  41b5a1:	je     0x41b5ab
  41b5a3:	mov    rcx,rbx
  41b5a6:	call   0x407ed0
  41b5ab:	test   esi,esi
  41b5ad:	js     0x41b1cb
  41b5b3:	mov    rbp,QWORD PTR [rsp+0xc8]
  41b5bb:	cmp    DWORD PTR [rip+0xddb2],0x0        # 0x429374
  41b5c2:	jne    0x41bb76
  41b5c8:	cmp    DWORD PTR [rip+0xdda1],0x0        # 0x429370
  41b5cf:	jne    0x41b17d
  41b5d5:	cmp    DWORD PTR [rip+0xddac],0x0        # 0x429388
  41b5dc:	jne    0x41c22d
  41b5e2:	cmp    DWORD PTR [rip+0xdd97],0x0        # 0x429380
  41b5e9:	jne    0x41b685
  41b5ef:	test   rbp,rbp
  41b5f2:	jne    0x41b1dc
  41b5f8:	lea    rcx,[rip+0xdcd1]        # 0x4292d0
  41b5ff:	call   0x4123b8
  41b604:	lea    rcx,[rip+0xdccd]        # 0x4292d8
  41b60b:	call   0x4123b8
  41b610:	lea    rcx,[rip+0xdcb1]        # 0x4292c8
  41b617:	call   0x4123b8
  41b61c:	jmp    0x41b24b
  41b621:	cmp    DWORD PTR [rip+0xdd50],0x0        # 0x429378
  41b628:	je     0x41b540
  41b62e:	mov    edx,0xe
  41b633:	jmp    0x41b530
  41b638:	mov    esi,eax
  41b63a:	jmp    0x41b1cb
  41b63f:	call   0x419e29
  41b644:	lea    rdi,[rsp+0xe0]
  41b64c:	mov    r9,QWORD PTR [rsp+0x30]
  41b651:	xor    eax,eax
  41b653:	mov    ecx,0xc
  41b658:	lea    r8,[rsp+0xe0]
  41b660:	mov    rdx,rbp
  41b663:	rep stos DWORD PTR es:[rdi],eax
  41b665:	mov    rcx,rbx
  41b668:	call   0x40e760
  41b66d:	mov    esi,eax
  41b66f:	jmp    0x41b591
  41b674:	mov    ecx,esi
  41b676:	neg    ecx
  41b678:	call   0x419848
  41b67d:	mov    rbx,rax
  41b680:	jmp    0x41b2ef
  41b685:	mov    rcx,QWORD PTR [rbp+0x20]
  41b689:	or     rdi,0xffffffffffffffff
  41b68d:	test   rcx,rcx
  41b690:	je     0x41b69a
  41b692:	call   0x411fc8
  41b697:	mov    rdi,rax
  41b69a:	mov    edx,0x4
  41b69f:	mov    rcx,rbx
  41b6a2:	lea    r12,[rbp+0x38]
  41b6a6:	call   0x409380
  41b6ab:	movsxd rax,DWORD PTR [rbx+0x2c]
  41b6af:	mov    rsi,QWORD PTR [rbx+rax*8+0x58]
  41b6b4:	cmp    DWORD PTR [rsi+0x58],0x0
  41b6b8:	je     0x41b913
  41b6be:	mov    rdx,QWORD PTR [rsp+0x30]
  41b6c3:	lea    r8,[rip+0x7124]        # 0x4227ee
  41b6ca:	mov    rcx,rbx
  41b6cd:	mov    QWORD PTR [rsp+0xd8],0x0
  41b6d9:	mov    QWORD PTR [rsp+0xe0],0x0
  41b6e5:	call   0x40a740
  41b6ea:	test   eax,eax
  41b6ec:	js     0x41b8e5
  41b6f2:	lea    rdx,[rsp+0xe0]
  41b6fa:	mov    r8,r12
  41b6fd:	mov    rcx,rbx
  41b700:	call   0x40a740
  41b705:	test   eax,eax
  41b707:	js     0x41b8e5
  41b70d:	mov    rax,QWORD PTR [rbx+0x8]
  41b711:	mov    r8,QWORD PTR [rsp+0xe0]
  41b719:	mov    rcx,rbx
  41b71c:	mov    rdx,QWORD PTR [rsp+0xd8]
  41b724:	call   QWORD PTR [rax+0x48]
  41b727:	mov    rcx,QWORD PTR [rsp+0xd8]
  41b72f:	call   0x4123c0
  41b734:	mov    rcx,QWORD PTR [rsp+0xe0]
  41b73c:	call   0x4123c0
  41b741:	movsxd rax,DWORD PTR [rbx+0x2c]
  41b745:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  41b74a:	mov    r8d,DWORD PTR [rbp+0x2c]
  41b74e:	lea    rdx,[rip+0x7063]        # 0x4227b8
  41b755:	mov    rcx,rbx
  41b758:	call   0x409270
  41b75d:	mov    r8d,DWORD PTR [rbp+0x46c]
  41b764:	lea    rdx,[rip+0x708c]        # 0x4227f7
  41b76b:	mov    rcx,rbx
  41b76e:	call   0x409270
  41b773:	mov    rax,QWORD PTR [rbp+0x8]
  41b777:	lea    rdx,[rip+0x7085]        # 0x422803
  41b77e:	mov    rcx,rbx
  41b781:	mov    r8,QWORD PTR [rax]
  41b784:	call   0x40a930
  41b789:	cmp    DWORD PTR [rip+0xdc0c],0x0        # 0x42939c
  41b790:	jne    0x41b7b2
  41b792:	mov    rax,QWORD PTR [rbp+0x8]
  41b796:	mov    r8,QWORD PTR [rax+0x8]
  41b79a:	test   r8,r8
  41b79d:	je     0x41c68f
  41b7a3:	lea    rdx,[rip+0x7065]        # 0x42280f
  41b7aa:	mov    rcx,rbx
  41b7ad:	call   0x40a930
  41b7b2:	mov    r8,QWORD PTR [rbp+0x438]
  41b7b9:	lea    r9,[rsp+0xb0]
  41b7c1:	lea    rdx,[rip+0x6b4f]        # 0x422317
  41b7c8:	mov    rcx,rbx
  41b7cb:	mov    DWORD PTR [rsp+0xb0],0x1
  41b7d6:	mov    DWORD PTR [rsp+0xb4],0xf4240
  41b7e1:	call   0x40c520
  41b7e6:	mov    r8,QWORD PTR [rbp+0x440]
  41b7ed:	lea    r9,[rsp+0xa0]
  41b7f5:	lea    rdx,[rip+0x6931]        # 0x42212d
  41b7fc:	mov    rcx,rbx
  41b7ff:	mov    DWORD PTR [rsp+0xa0],0x1
  41b80a:	mov    DWORD PTR [rsp+0xa4],0xf4240
  41b815:	call   0x40c520
  41b81a:	test   rdi,rdi
  41b81d:	js     0x41bb44
  41b823:	lea    rax,[rip+0x981c]        # 0x425046
  41b82a:	lea    rdx,[rsp+0x70]
  41b82f:	lea    rcx,[rsp+0xe0]
  41b837:	mov    QWORD PTR [rsp+0x70],rdi
  41b83c:	mov    QWORD PTR [rsp+0x78],rax
  41b841:	call   0x409790
  41b846:	lea    rdx,[rip+0x6926]        # 0x422173
  41b84d:	mov    r8,rax
  41b850:	mov    rcx,rbx
  41b853:	call   0x40a930
  41b858:	movsxd rax,DWORD PTR [rbp+0x448]
  41b85f:	test   eax,eax
  41b861:	jle    0x41bb29
  41b867:	mov    QWORD PTR [rsp+0x70],rax
  41b86c:	lea    rdx,[rsp+0x70]
  41b871:	lea    rax,[rip+0x97c8]        # 0x425040
  41b878:	lea    rcx,[rsp+0xe0]
  41b880:	mov    QWORD PTR [rsp+0x78],rax
  41b885:	call   0x409790
  41b88a:	lea    rdx,[rip+0x6a9d]        # 0x42232e
  41b891:	mov    r8,rax
  41b894:	mov    rcx,rbx
  41b897:	call   0x40a930
  41b89c:	mov    rcx,rbp
  41b89f:	xor    esi,esi
  41b8a1:	call   0x412060
  41b8a6:	lea    rdx,[rip+0x6f73]        # 0x422820
  41b8ad:	movsxd r8,eax
  41b8b0:	mov    rcx,rbx
  41b8b3:	call   0x409270
  41b8b8:	cmp    DWORD PTR [rip+0xda8d],0x0        # 0x42934c
  41b8bf:	jne    0x41b937
  41b8c1:	mov    rcx,rbx
  41b8c4:	call   0x407ed0
  41b8c9:	call   QWORD PTR [rip+0x10215]        # 0x42bae4
  41b8cf:	lea    rcx,[rax+0x30]
  41b8d3:	call   0x4198f8
  41b8d8:	mov    rbp,QWORD PTR [rsp+0xc8]
  41b8e0:	jmp    0x41b5ef
  41b8e5:	mov    rax,QWORD PTR [rsi+0x48]
  41b8e9:	lea    r9,[rip+0x6efe]        # 0x4227ee
  41b8f0:	lea    r8,[rip+0x6721]        # 0x422018
  41b8f7:	mov    QWORD PTR [rsp+0x20],r12
  41b8fc:	mov    edx,0x10
  41b901:	mov    rcx,rbx
  41b904:	mov    QWORD PTR [rsp+0x28],rax
  41b909:	call   0x412308
  41b90e:	jmp    0x41b727
  41b913:	mov    rcx,QWORD PTR [rsi+0x50]
  41b917:	lea    rdx,[rip+0x6ed0]        # 0x4227ee
  41b91e:	xor    r9d,r9d
  41b921:	xor    r8d,r8d
  41b924:	call   0x412438
  41b929:	test   rax,rax
  41b92c:	jne    0x41b6be
  41b932:	jmp    0x41b74a
  41b937:	mov    r13,QWORD PTR [rbp+0x498]
  41b93e:	test   r13,r13
  41b941:	je     0x41b8c1
  41b947:	movsxd rdx,DWORD PTR [rbx+0x2c]
  41b94b:	lea    eax,[rdx+0x1]
  41b94e:	cmp    eax,0x9
  41b951:	mov    DWORD PTR [rbx+0x2c],eax
  41b954:	jg     0x41b63f
  41b95a:	test   eax,eax
  41b95c:	je     0x41ba70
  41b962:	lea    rdx,[rbx+rdx*8]
  41b966:	cdqe   
  41b968:	mov    rcx,QWORD PTR [rdx+0x58]
  41b96c:	mov    ecx,DWORD PTR [rcx]
  41b96e:	mov    DWORD PTR [rbx+rax*4+0x30],0x0
  41b976:	mov    rax,QWORD PTR [rbx+0x20]
  41b97a:	add    rax,0x1e0
  41b980:	cmp    ecx,0xf
  41b983:	mov    QWORD PTR [rdx+0x60],rax
  41b987:	jne    0x41b995
  41b989:	mov    eax,DWORD PTR [rbx+0x28ac]
  41b98f:	mov    DWORD PTR [rbx+0x28b0],eax
  41b995:	mov    rax,QWORD PTR [rbx+0x8]
  41b999:	mov    rax,QWORD PTR [rax+0x28]
  41b99d:	test   rax,rax
  41b9a0:	je     0x41b9a7
  41b9a2:	mov    rcx,rbx
  41b9a5:	call   rax
  41b9a7:	xor    esi,esi
  41b9a9:	xor    edi,edi
  41b9ab:	lea    rdx,[rip+0x5511]        # 0x420ec3
  41b9b2:	mov    r8,rdi
  41b9b5:	mov    r9d,0x2
  41b9bb:	mov    rcx,r13
  41b9be:	call   0x412438
  41b9c3:	test   rax,rax
  41b9c6:	mov    rdi,rax
  41b9c9:	je     0x41bad2
  41b9cf:	movsxd rax,DWORD PTR [rbx+0x2c]
  41b9d3:	mov    r12,QWORD PTR [rdi+0x8]
  41b9d7:	mov    rbp,QWORD PTR [rdi]
  41b9da:	mov    r14,QWORD PTR [rbx+rax*8+0x58]
  41b9df:	cmp    DWORD PTR [r14+0x58],0x0
  41b9e4:	je     0x41bb07
  41b9ea:	mov    rdx,QWORD PTR [rsp+0x38]
  41b9ef:	mov    r8,rbp
  41b9f2:	mov    rcx,rbx
  41b9f5:	mov    QWORD PTR [rsp+0xd0],0x0
  41ba01:	mov    QWORD PTR [rsp+0xd8],0x0
  41ba0d:	call   0x40a740
  41ba12:	test   eax,eax
  41ba14:	mov    esi,eax
  41ba16:	js     0x41ba8a
  41ba18:	mov    rdx,QWORD PTR [rsp+0x30]
  41ba1d:	mov    r8,r12
  41ba20:	mov    rcx,rbx
  41ba23:	call   0x40a740
  41ba28:	test   eax,eax
  41ba2a:	mov    esi,eax
  41ba2c:	js     0x41ba8a
  41ba2e:	mov    rax,QWORD PTR [rbx+0x8]
  41ba32:	mov    r8,QWORD PTR [rsp+0xd8]
  41ba3a:	mov    rcx,rbx
  41ba3d:	mov    rdx,QWORD PTR [rsp+0xd0]
  41ba45:	call   QWORD PTR [rax+0x48]
  41ba48:	mov    rcx,QWORD PTR [rsp+0xd0]
  41ba50:	call   0x4123c0
  41ba55:	mov    rcx,QWORD PTR [rsp+0xd8]
  41ba5d:	call   0x4123c0
  41ba62:	movsxd rax,DWORD PTR [rbx+0x2c]
  41ba66:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  41ba6b:	jmp    0x41b9ab
  41ba70:	mov    rax,QWORD PTR [rbx+0x20]
  41ba74:	mov    DWORD PTR [rbx+0x30],0x0
  41ba7b:	add    rax,0x1e0
  41ba81:	mov    QWORD PTR [rbx+0x58],rax
  41ba85:	jmp    0x41b995
  41ba8a:	mov    rax,QWORD PTR [r14+0x48]
  41ba8e:	lea    r8,[rip+0x6583]        # 0x422018
  41ba95:	mov    r9,rbp
  41ba98:	mov    edx,0x10
  41ba9d:	mov    rcx,rbx
  41baa0:	mov    QWORD PTR [rsp+0x20],r12
  41baa5:	mov    QWORD PTR [rsp+0x28],rax
  41baaa:	call   0x412308
  41baaf:	mov    rcx,QWORD PTR [rsp+0xd0]
  41bab7:	call   0x4123c0
  41babc:	mov    rcx,QWORD PTR [rsp+0xd8]
  41bac4:	call   0x4123c0
  41bac9:	movsxd rax,DWORD PTR [rbx+0x2c]
  41bacd:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  41bad2:	mov    rcx,rbx
  41bad5:	call   0x407ed0
  41bada:	mov    rcx,rbx
  41badd:	call   0x407ed0
  41bae2:	call   QWORD PTR [rip+0xfffc]        # 0x42bae4
  41bae8:	lea    rcx,[rax+0x30]
  41baec:	call   0x4198f8
  41baf1:	mov    rbp,QWORD PTR [rsp+0xc8]
  41baf9:	test   rbp,rbp
  41bafc:	jne    0x41b1dc
  41bb02:	jmp    0x41b223
  41bb07:	mov    rcx,QWORD PTR [r14+0x50]
  41bb0b:	xor    r9d,r9d
  41bb0e:	xor    r8d,r8d
  41bb11:	mov    rdx,rbp
  41bb14:	xor    esi,esi
  41bb16:	call   0x412438
  41bb1b:	test   rax,rax
  41bb1e:	jne    0x41b9ea
  41bb24:	jmp    0x41b9ab
  41bb29:	lea    r8,[rip+0x6003]        # 0x421b33
  41bb30:	lea    rdx,[rip+0x67f7]        # 0x42232e
  41bb37:	mov    rcx,rbx
  41bb3a:	call   0x40ac10
  41bb3f:	jmp    0x41b89c
  41bb44:	lea    r8,[rip+0x5fe8]        # 0x421b33
  41bb4b:	lea    rdx,[rip+0x6621]        # 0x422173
  41bb52:	mov    rcx,rbx
  41bb55:	call   0x40ac10
  41bb5a:	jmp    0x41b858
  41bb5f:	mov    rcx,rbx
  41bb62:	mov    esi,eax
  41bb64:	call   0x407ed0
  41bb69:	mov    rbp,QWORD PTR [rsp+0xc8]
  41bb71:	jmp    0x41b5d5
  41bb76:	mov    edx,0x1e
  41bb7b:	mov    rcx,rbx
  41bb7e:	xor    r14d,r14d
  41bb81:	call   0x409380
  41bb86:	lea    rax,[rsp+0x90]
  41bb8e:	mov    QWORD PTR [rsp+0x48],r15
  41bb93:	xor    esi,esi
  41bb95:	mov    r15,rbx
  41bb98:	mov    QWORD PTR [rsp+0x58],rax
  41bb9d:	lea    rax,[rsp+0x80]
  41bba5:	mov    QWORD PTR [rsp+0x60],rax
  41bbaa:	lea    rax,[rsp+0xe0]
  41bbb2:	mov    QWORD PTR [rsp+0x68],rax
  41bbb7:	cmp    DWORD PTR [rbp+0x46c],r14d
  41bbbe:	jbe    0x41c6aa
  41bbc4:	mov    rax,QWORD PTR [rbp+0x470]
  41bbcb:	mov    rdi,QWORD PTR [rax+r14*8]
  41bbcf:	test   rdi,rdi
  41bbd2:	je     0x41bf80
  41bbd8:	movsxd rdx,DWORD PTR [r15+0x2c]
  41bbdc:	lea    eax,[rdx+0x1]
  41bbdf:	cmp    eax,0x9
  41bbe2:	mov    DWORD PTR [r15+0x2c],eax
  41bbe6:	jg     0x41b63f
  41bbec:	test   eax,eax
  41bbee:	je     0x41bf89
  41bbf4:	lea    rdx,[r15+rdx*8]
  41bbf8:	cdqe   
  41bbfa:	mov    rcx,QWORD PTR [rdx+0x58]
  41bbfe:	mov    ecx,DWORD PTR [rcx]
  41bc00:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  41bc09:	mov    rax,QWORD PTR [r15+0x20]
  41bc0d:	add    rax,0x960
  41bc13:	cmp    ecx,0xf
  41bc16:	mov    QWORD PTR [rdx+0x60],rax
  41bc1a:	jne    0x41bc2a
  41bc1c:	mov    eax,DWORD PTR [r15+0x28ac]
  41bc23:	mov    DWORD PTR [r15+0x28b0],eax
  41bc2a:	mov    rax,QWORD PTR [r15+0x8]
  41bc2e:	mov    rax,QWORD PTR [rax+0x28]
  41bc32:	test   rax,rax
  41bc35:	je     0x41bc3c
  41bc37:	mov    rcx,r15
  41bc3a:	call   rax
  41bc3c:	movsxd rax,DWORD PTR [r15+0x2c]
  41bc40:	mov    ebx,DWORD PTR [rdi]
  41bc42:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41bc47:	cmp    DWORD PTR [rax+0x58],0x0
  41bc4b:	jne    0x41bc68
  41bc4d:	mov    rcx,QWORD PTR [rax+0x50]
  41bc51:	lea    rdx,[rip+0x6b49]        # 0x4227a1
  41bc58:	xor    r9d,r9d
  41bc5b:	xor    r8d,r8d
  41bc5e:	call   0x412438
  41bc63:	test   rax,rax
  41bc66:	je     0x41bc86
  41bc68:	mov    rax,QWORD PTR [r15+0x8]
  41bc6c:	movsxd r8,ebx
  41bc6f:	lea    rdx,[rip+0x6b2b]        # 0x4227a1
  41bc76:	mov    rcx,r15
  41bc79:	call   QWORD PTR [rax+0x38]
  41bc7c:	movsxd rax,DWORD PTR [r15+0x2c]
  41bc80:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41bc86:	movsxd rax,DWORD PTR [r15+0x2c]
  41bc8a:	mov    ebx,DWORD PTR [rdi+0x28]
  41bc8d:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41bc92:	cmp    DWORD PTR [rax+0x58],0x0
  41bc96:	jne    0x41bcb3
  41bc98:	mov    rcx,QWORD PTR [rax+0x50]
  41bc9c:	lea    rdx,[rip+0x6b09]        # 0x4227ac
  41bca3:	xor    r9d,r9d
  41bca6:	xor    r8d,r8d
  41bca9:	call   0x412438
  41bcae:	test   rax,rax
  41bcb1:	je     0x41bcd1
  41bcb3:	mov    rax,QWORD PTR [r15+0x8]
  41bcb7:	movsxd r8,ebx
  41bcba:	lea    rdx,[rip+0x6aeb]        # 0x4227ac
  41bcc1:	mov    rcx,r15
  41bcc4:	call   QWORD PTR [rax+0x38]
  41bcc7:	movsxd rax,DWORD PTR [r15+0x2c]
  41bccb:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41bcd1:	movsxd rax,DWORD PTR [r15+0x2c]
  41bcd5:	mov    ebx,DWORD PTR [rdi+0x18]
  41bcd8:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41bcdd:	cmp    DWORD PTR [rax+0x58],0x0
  41bce1:	jne    0x41bcfe
  41bce3:	mov    rcx,QWORD PTR [rax+0x50]
  41bce7:	lea    rdx,[rip+0x6aca]        # 0x4227b8
  41bcee:	xor    r9d,r9d
  41bcf1:	xor    r8d,r8d
  41bcf4:	call   0x412438
  41bcf9:	test   rax,rax
  41bcfc:	je     0x41bd1c
  41bcfe:	mov    rax,QWORD PTR [r15+0x8]
  41bd02:	mov    r8d,ebx
  41bd05:	lea    rdx,[rip+0x6aac]        # 0x4227b8
  41bd0c:	mov    rcx,r15
  41bd0f:	call   QWORD PTR [rax+0x38]
  41bd12:	movsxd rax,DWORD PTR [r15+0x2c]
  41bd16:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41bd1c:	movsxd rax,DWORD PTR [r15+0x2c]
  41bd20:	mov    ebx,DWORD PTR [rdi+0x2c]
  41bd23:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41bd28:	cmp    DWORD PTR [rax+0x58],0x0
  41bd2c:	jne    0x41bd49
  41bd2e:	mov    rcx,QWORD PTR [rax+0x50]
  41bd32:	lea    rdx,[rip+0x6a8a]        # 0x4227c3
  41bd39:	xor    r9d,r9d
  41bd3c:	xor    r8d,r8d
  41bd3f:	call   0x412438
  41bd44:	test   rax,rax
  41bd47:	je     0x41bd67
  41bd49:	mov    rax,QWORD PTR [r15+0x8]
  41bd4d:	movsxd r8,ebx
  41bd50:	lea    rdx,[rip+0x6a6c]        # 0x4227c3
  41bd57:	mov    rcx,r15
  41bd5a:	call   QWORD PTR [rax+0x38]
  41bd5d:	movsxd rax,DWORD PTR [r15+0x2c]
  41bd61:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41bd67:	movsxd rax,DWORD PTR [r15+0x2c]
  41bd6b:	mov    ebx,DWORD PTR [rdi+0x30]
  41bd6e:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41bd73:	cmp    DWORD PTR [rax+0x58],0x0
  41bd77:	jne    0x41bd94
  41bd79:	mov    rcx,QWORD PTR [rax+0x50]
  41bd7d:	lea    rdx,[rip+0x6a47]        # 0x4227cb
  41bd84:	xor    r9d,r9d
  41bd87:	xor    r8d,r8d
  41bd8a:	call   0x412438
  41bd8f:	test   rax,rax
  41bd92:	je     0x41bdb2
  41bd94:	mov    rax,QWORD PTR [r15+0x8]
  41bd98:	movsxd r8,ebx
  41bd9b:	lea    rdx,[rip+0x6a29]        # 0x4227cb
  41bda2:	mov    rcx,r15
  41bda5:	call   QWORD PTR [rax+0x38]
  41bda8:	movsxd rax,DWORD PTR [r15+0x2c]
  41bdac:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41bdb2:	mov    r8,QWORD PTR [rdi+0x38]
  41bdb6:	lea    rdx,[rip+0x6550]        # 0x42230d
  41bdbd:	mov    rcx,r15
  41bdc0:	xor    esi,esi
  41bdc2:	call   0x40b820
  41bdc7:	mov    r9,QWORD PTR [rsp+0x58]
  41bdcc:	mov    r8,QWORD PTR [rdi+0x38]
  41bdd0:	lea    rdx,[rip+0x6540]        # 0x422317
  41bdd7:	mov    rcx,r15
  41bdda:	mov    DWORD PTR [rsp+0x90],0x1
  41bde5:	mov    DWORD PTR [rsp+0x94],0xf4240
  41bdf0:	call   0x40c520
  41bdf5:	mov    r8,QWORD PTR [rdi+0x40]
  41bdf9:	lea    rdx,[rip+0x69d3]        # 0x4227d3
  41be00:	mov    rcx,r15
  41be03:	call   0x40b820
  41be08:	mov    r9,QWORD PTR [rsp+0x60]
  41be0d:	mov    r8,QWORD PTR [rdi+0x40]
  41be11:	lea    rdx,[rip+0x69c3]        # 0x4227db
  41be18:	mov    rcx,r15
  41be1b:	mov    DWORD PTR [rsp+0x80],0x1
  41be26:	mov    DWORD PTR [rsp+0x84],0xf4240
  41be31:	call   0x40c520
  41be36:	cmp    DWORD PTR [rip+0xd507],0x0        # 0x429344
  41be3d:	jne    0x41bfb8
  41be43:	movsxd rdx,DWORD PTR [r15+0x2c]
  41be47:	lea    eax,[rdx+0x1]
  41be4a:	cmp    eax,0x9
  41be4d:	mov    DWORD PTR [r15+0x2c],eax
  41be51:	jg     0x41b63f
  41be57:	test   eax,eax
  41be59:	je     0x41c1db
  41be5f:	lea    rdx,[r15+rdx*8]
  41be63:	cdqe   
  41be65:	mov    rcx,QWORD PTR [rdx+0x58]
  41be69:	mov    ecx,DWORD PTR [rcx]
  41be6b:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  41be74:	mov    rax,QWORD PTR [r15+0x20]
  41be78:	add    rax,0x9c0
  41be7e:	cmp    ecx,0xf
  41be81:	mov    QWORD PTR [rdx+0x60],rax
  41be85:	jne    0x41be95
  41be87:	mov    eax,DWORD PTR [r15+0x28ac]
  41be8e:	mov    DWORD PTR [r15+0x28b0],eax
  41be95:	mov    rax,QWORD PTR [r15+0x8]
  41be99:	mov    rax,QWORD PTR [rax+0x28]
  41be9d:	test   rax,rax
  41bea0:	je     0x41bea7
  41bea2:	mov    rcx,r15
  41bea5:	call   rax
  41bea7:	xor    ebx,ebx
  41bea9:	mov    eax,esi
  41beab:	jmp    0x41beb1
  41bead:	add    rbx,0x1
  41beb1:	cmp    DWORD PTR [rdi+0x18],ebx
  41beb4:	jbe    0x41bee4
  41beb6:	mov    r8,QWORD PTR [rdi+0x10]
  41beba:	mov    r9,QWORD PTR [rip+0xd407]        # 0x4292c8
  41bec1:	mov    r10d,DWORD PTR [r8+rbx*4]
  41bec5:	cmp    DWORD PTR [r9+r10*4],0x0
  41beca:	mov    r8,r10
  41becd:	je     0x41bead
  41becf:	mov    r9d,0x1
  41bed5:	mov    rdx,rbp
  41bed8:	mov    rcx,r15
  41bedb:	call   0x40fb40
  41bee0:	test   eax,eax
  41bee2:	jns    0x41bead
  41bee4:	mov    esi,eax
  41bee6:	movsxd rax,DWORD PTR [r15+0x2c]
  41beea:	lea    rdx,[r15+rax*8]
  41beee:	test   eax,eax
  41bef0:	mov    r8,QWORD PTR [rdx+0x58]
  41bef4:	mov    r8d,DWORD PTR [r8]
  41bef7:	je     0x41bf21
  41bef9:	mov    rdx,QWORD PTR [rdx+0x50]
  41befd:	mov    edx,DWORD PTR [rdx]
  41beff:	cmp    edx,0xffffffff
  41bf02:	je     0x41bf21
  41bf04:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  41bf0a:	cmp    edx,0xf
  41bf0d:	jne    0x41bf21
  41bf0f:	cmp    r8d,0xd
  41bf13:	je     0x41c1f6
  41bf19:	add    DWORD PTR [r15+0x28ac],0x1
  41bf21:	mov    rax,QWORD PTR [r15+0x8]
  41bf25:	mov    rax,QWORD PTR [rax+0x30]
  41bf29:	test   rax,rax
  41bf2c:	je     0x41bf33
  41bf2e:	mov    rcx,r15
  41bf31:	call   rax
  41bf33:	sub    DWORD PTR [r15+0x2c],0x1
  41bf38:	movsxd rax,DWORD PTR [r15+0x2c]
  41bf3c:	lea    rdx,[r15+rax*8]
  41bf40:	test   eax,eax
  41bf42:	mov    r8,QWORD PTR [rdx+0x58]
  41bf46:	mov    r8d,DWORD PTR [r8]
  41bf49:	je     0x41bf61
  41bf4b:	mov    rdx,QWORD PTR [rdx+0x50]
  41bf4f:	mov    edx,DWORD PTR [rdx]
  41bf51:	cmp    edx,0xffffffff
  41bf54:	je     0x41bf61
  41bf56:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  41bf5c:	cmp    edx,0xf
  41bf5f:	je     0x41bfa4
  41bf61:	mov    rax,QWORD PTR [r15+0x8]
  41bf65:	mov    rax,QWORD PTR [rax+0x30]
  41bf69:	test   rax,rax
  41bf6c:	je     0x41bf73
  41bf6e:	mov    rcx,r15
  41bf71:	call   rax
  41bf73:	sub    DWORD PTR [r15+0x2c],0x1
  41bf78:	test   esi,esi
  41bf7a:	js     0x41c6c7
  41bf80:	add    r14,0x1
  41bf84:	jmp    0x41bbb7
  41bf89:	mov    rax,QWORD PTR [r15+0x20]
  41bf8d:	mov    DWORD PTR [r15+0x30],0x0
  41bf95:	add    rax,0x960
  41bf9b:	mov    QWORD PTR [r15+0x58],rax
  41bf9f:	jmp    0x41bc2a
  41bfa4:	cmp    r8d,0xd
  41bfa8:	je     0x41c213
  41bfae:	add    DWORD PTR [r15+0x28ac],0x1
  41bfb6:	jmp    0x41bf61
  41bfb8:	mov    rax,QWORD PTR [rdi+0x20]
  41bfbc:	test   rax,rax
  41bfbf:	mov    QWORD PTR [rsp+0x50],rax
  41bfc4:	je     0x41be43
  41bfca:	movsxd rdx,DWORD PTR [r15+0x2c]
  41bfce:	lea    eax,[rdx+0x1]
  41bfd1:	cmp    eax,0x9
  41bfd4:	mov    DWORD PTR [r15+0x2c],eax
  41bfd8:	jg     0x41b63f
  41bfde:	test   eax,eax
  41bfe0:	je     0x41c1c0
  41bfe6:	lea    rdx,[r15+rdx*8]
  41bfea:	cdqe   
  41bfec:	mov    rcx,QWORD PTR [rdx+0x58]
  41bff0:	mov    ecx,DWORD PTR [rcx]
  41bff2:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  41bffb:	mov    rax,QWORD PTR [r15+0x20]
  41bfff:	add    rax,0xa80
  41c005:	cmp    ecx,0xf
  41c008:	mov    QWORD PTR [rdx+0x60],rax
  41c00c:	jne    0x41c01c
  41c00e:	mov    eax,DWORD PTR [r15+0x28ac]
  41c015:	mov    DWORD PTR [r15+0x28b0],eax
  41c01c:	mov    rax,QWORD PTR [r15+0x8]
  41c020:	mov    rax,QWORD PTR [rax+0x28]
  41c024:	test   rax,rax
  41c027:	je     0x41c02e
  41c029:	mov    rcx,r15
  41c02c:	call   rax
  41c02e:	xor    esi,esi
  41c030:	xor    r12d,r12d
  41c033:	mov    rcx,QWORD PTR [rsp+0x50]
  41c038:	lea    rdx,[rip+0x4e84]        # 0x420ec3
  41c03f:	mov    r8,r12
  41c042:	mov    r9d,0x2
  41c048:	call   0x412438
  41c04d:	test   rax,rax
  41c050:	mov    r12,rax
  41c053:	je     0x41c173
  41c059:	mov    rax,QWORD PTR [r12+0x8]
  41c05e:	mov    r13,QWORD PTR [r12]
  41c062:	mov    QWORD PTR [rsp+0x40],rax
  41c067:	movsxd rax,DWORD PTR [r15+0x2c]
  41c06b:	mov    rbx,QWORD PTR [r15+rax*8+0x58]
  41c070:	cmp    DWORD PTR [rbx+0x58],0x0
  41c074:	je     0x41c103
  41c07a:	mov    rdx,QWORD PTR [rsp+0x30]
  41c07f:	mov    r8,r13
  41c082:	mov    rcx,r15
  41c085:	mov    QWORD PTR [rsp+0xd8],0x0
  41c091:	mov    QWORD PTR [rsp+0xe0],0x0
  41c09d:	call   0x40a740
  41c0a2:	test   eax,eax
  41c0a4:	mov    esi,eax
  41c0a6:	js     0x41c125
  41c0a8:	mov    r8,QWORD PTR [rsp+0x40]
  41c0ad:	mov    rdx,QWORD PTR [rsp+0x68]
  41c0b2:	mov    rcx,r15
  41c0b5:	call   0x40a740
  41c0ba:	test   eax,eax
  41c0bc:	mov    esi,eax
  41c0be:	js     0x41c125
  41c0c0:	mov    rax,QWORD PTR [r15+0x8]
  41c0c4:	mov    r8,QWORD PTR [rsp+0xe0]
  41c0cc:	mov    rcx,r15
  41c0cf:	mov    rdx,QWORD PTR [rsp+0xd8]
  41c0d7:	call   QWORD PTR [rax+0x48]
  41c0da:	mov    rcx,QWORD PTR [rsp+0xd8]
  41c0e2:	call   0x4123c0
  41c0e7:	mov    rcx,QWORD PTR [rsp+0xe0]
  41c0ef:	call   0x4123c0
  41c0f4:	movsxd rax,DWORD PTR [r15+0x2c]
  41c0f8:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c0fe:	jmp    0x41c033
  41c103:	mov    rcx,QWORD PTR [rbx+0x50]
  41c107:	xor    r9d,r9d
  41c10a:	xor    r8d,r8d
  41c10d:	mov    rdx,r13
  41c110:	xor    esi,esi
  41c112:	call   0x412438
  41c117:	test   rax,rax
  41c11a:	jne    0x41c07a
  41c120:	jmp    0x41c033
  41c125:	mov    rax,QWORD PTR [rbx+0x48]
  41c129:	lea    r8,[rip+0x5ee8]        # 0x422018
  41c130:	mov    r9,r13
  41c133:	mov    edx,0x10
  41c138:	mov    rcx,r15
  41c13b:	mov    QWORD PTR [rsp+0x28],rax
  41c140:	mov    rax,QWORD PTR [rsp+0x40]
  41c145:	mov    QWORD PTR [rsp+0x20],rax
  41c14a:	call   0x412308
  41c14f:	mov    rcx,QWORD PTR [rsp+0xd8]
  41c157:	call   0x4123c0
  41c15c:	mov    rcx,QWORD PTR [rsp+0xe0]
  41c164:	call   0x4123c0
  41c169:	movsxd rax,DWORD PTR [r15+0x2c]
  41c16d:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c173:	movsxd rax,DWORD PTR [r15+0x2c]
  41c177:	lea    rdx,[r15+rax*8]
  41c17b:	test   eax,eax
  41c17d:	mov    r8,QWORD PTR [rdx+0x58]
  41c181:	mov    r8d,DWORD PTR [r8]
  41c184:	je     0x41c19c
  41c186:	mov    rdx,QWORD PTR [rdx+0x50]
  41c18a:	mov    edx,DWORD PTR [rdx]
  41c18c:	cmp    edx,0xffffffff
  41c18f:	je     0x41c19c
  41c191:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  41c197:	cmp    edx,0xf
  41c19a:	je     0x41c203
  41c19c:	mov    rax,QWORD PTR [r15+0x8]
  41c1a0:	mov    rax,QWORD PTR [rax+0x30]
  41c1a4:	test   rax,rax
  41c1a7:	je     0x41c1ae
  41c1a9:	mov    rcx,r15
  41c1ac:	call   rax
  41c1ae:	sub    DWORD PTR [r15+0x2c],0x1
  41c1b3:	test   esi,esi
  41c1b5:	js     0x41bf38
  41c1bb:	jmp    0x41be43
  41c1c0:	mov    rax,QWORD PTR [r15+0x20]
  41c1c4:	mov    DWORD PTR [r15+0x30],0x0
  41c1cc:	add    rax,0xa80
  41c1d2:	mov    QWORD PTR [r15+0x58],rax
  41c1d6:	jmp    0x41c01c
  41c1db:	mov    rax,QWORD PTR [r15+0x20]
  41c1df:	mov    DWORD PTR [r15+0x30],0x0
  41c1e7:	add    rax,0x9c0
  41c1ed:	mov    QWORD PTR [r15+0x58],rax
  41c1f1:	jmp    0x41be95
  41c1f6:	add    DWORD PTR [r15+0x28a8],0x1
  41c1fe:	jmp    0x41bf21
  41c203:	cmp    r8d,0xd
  41c207:	je     0x41c220
  41c209:	add    DWORD PTR [r15+0x28ac],0x1
  41c211:	jmp    0x41c19c
  41c213:	add    DWORD PTR [r15+0x28a8],0x1
  41c21b:	jmp    0x41bf61
  41c220:	add    DWORD PTR [r15+0x28a8],0x1
  41c228:	jmp    0x41c19c
  41c22d:	mov    edx,0x2
  41c232:	mov    rcx,rbx
  41c235:	xor    r12d,r12d
  41c238:	call   0x409380
  41c23d:	lea    rax,[rsp+0xe0]
  41c245:	mov    QWORD PTR [rsp+0x50],r15
  41c24a:	xor    esi,esi
  41c24c:	mov    r15,rbx
  41c24f:	mov    QWORD PTR [rsp+0x48],rax
  41c254:	jmp    0x41c3d5
  41c259:	lea    rdx,[r15+rdx*8]
  41c25d:	cdqe   
  41c25f:	mov    rcx,QWORD PTR [rdx+0x58]
  41c263:	mov    ecx,DWORD PTR [rcx]
  41c265:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  41c26e:	mov    rax,QWORD PTR [r15+0x20]
  41c272:	cmp    ecx,0xf
  41c275:	mov    QWORD PTR [rdx+0x60],rax
  41c279:	jne    0x41c289
  41c27b:	mov    eax,DWORD PTR [r15+0x28ac]
  41c282:	mov    DWORD PTR [r15+0x28b0],eax
  41c289:	mov    rax,QWORD PTR [r15+0x8]
  41c28d:	mov    rax,QWORD PTR [rax+0x28]
  41c291:	test   rax,rax
  41c294:	je     0x41c29b
  41c296:	mov    rcx,r15
  41c299:	call   rax
  41c29b:	movsxd rax,DWORD PTR [r15+0x2c]
  41c29f:	mov    edi,DWORD PTR [rbx]
  41c2a1:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41c2a6:	cmp    DWORD PTR [rax+0x58],0x0
  41c2aa:	jne    0x41c2c7
  41c2ac:	mov    rcx,QWORD PTR [rax+0x50]
  41c2b0:	lea    rdx,[rip+0x6037]        # 0x4222ee
  41c2b7:	xor    r9d,r9d
  41c2ba:	xor    r8d,r8d
  41c2bd:	call   0x412438
  41c2c2:	test   rax,rax
  41c2c5:	je     0x41c2e5
  41c2c7:	mov    rax,QWORD PTR [r15+0x8]
  41c2cb:	movsxd r8,edi
  41c2ce:	lea    rdx,[rip+0x6019]        # 0x4222ee
  41c2d5:	mov    rcx,r15
  41c2d8:	call   QWORD PTR [rax+0x38]
  41c2db:	movsxd rax,DWORD PTR [r15+0x2c]
  41c2df:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c2e5:	mov    rdx,QWORD PTR [rbx+0x4]
  41c2e9:	mov    rcx,r15
  41c2ec:	call   0x40bf30
  41c2f1:	movsxd rax,DWORD PTR [r15+0x2c]
  41c2f5:	mov    rdi,QWORD PTR [rbx+0x10]
  41c2f9:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41c2fe:	cmp    DWORD PTR [rax+0x58],0x0
  41c302:	jne    0x41c31f
  41c304:	mov    rcx,QWORD PTR [rax+0x50]
  41c308:	lea    rdx,[rip+0x64d5]        # 0x4227e4
  41c30f:	xor    r9d,r9d
  41c312:	xor    r8d,r8d
  41c315:	call   0x412438
  41c31a:	test   rax,rax
  41c31d:	je     0x41c33d
  41c31f:	mov    rax,QWORD PTR [r15+0x8]
  41c323:	mov    r8,rdi
  41c326:	lea    rdx,[rip+0x64b7]        # 0x4227e4
  41c32d:	mov    rcx,r15
  41c330:	call   QWORD PTR [rax+0x38]
  41c333:	movsxd rax,DWORD PTR [r15+0x2c]
  41c337:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c33d:	lea    rdi,[rbx+0x4]
  41c341:	mov    r8,QWORD PTR [rbx+0x10]
  41c345:	lea    rdx,[rip+0x5fcb]        # 0x422317
  41c34c:	mov    rcx,r15
  41c34f:	mov    r9,rdi
  41c352:	call   0x40c520
  41c357:	mov    r8,QWORD PTR [rbx+0x18]
  41c35b:	lea    rdx,[rip+0x6488]        # 0x4227ea
  41c362:	mov    rcx,r15
  41c365:	call   0x409270
  41c36a:	mov    r8,QWORD PTR [rbx+0x18]
  41c36e:	lea    rdx,[rip+0x6466]        # 0x4227db
  41c375:	mov    r9,rdi
  41c378:	mov    rcx,r15
  41c37b:	call   0x40c520
  41c380:	cmp    DWORD PTR [rip+0xcfc9],0x0        # 0x429350
  41c387:	jne    0x41c41e
  41c38d:	movsxd rax,DWORD PTR [r15+0x2c]
  41c391:	lea    rdx,[r15+rax*8]
  41c395:	test   eax,eax
  41c397:	mov    r8,QWORD PTR [rdx+0x58]
  41c39b:	mov    r8d,DWORD PTR [r8]
  41c39e:	je     0x41c3ba
  41c3a0:	mov    rdx,QWORD PTR [rdx+0x50]
  41c3a4:	mov    edx,DWORD PTR [rdx]
  41c3a6:	cmp    edx,0xffffffff
  41c3a9:	je     0x41c3ba
  41c3ab:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  41c3b1:	cmp    edx,0xf
  41c3b4:	je     0x41c626
  41c3ba:	mov    rax,QWORD PTR [r15+0x8]
  41c3be:	mov    rax,QWORD PTR [rax+0x30]
  41c3c2:	test   rax,rax
  41c3c5:	je     0x41c3cc
  41c3c7:	mov    rcx,r15
  41c3ca:	call   rax
  41c3cc:	sub    DWORD PTR [r15+0x2c],0x1
  41c3d1:	add    r12,0x1
  41c3d5:	cmp    DWORD PTR [rbp+0x48c],r12d
  41c3dc:	jbe    0x41c66a
  41c3e2:	movsxd rdx,DWORD PTR [r15+0x2c]
  41c3e6:	mov    rax,QWORD PTR [rbp+0x490]
  41c3ed:	mov    rbx,QWORD PTR [rax+r12*8]
  41c3f1:	lea    eax,[rdx+0x1]
  41c3f4:	cmp    eax,0x9
  41c3f7:	mov    DWORD PTR [r15+0x2c],eax
  41c3fb:	jg     0x41b63f
  41c401:	test   eax,eax
  41c403:	jne    0x41c259
  41c409:	mov    rax,QWORD PTR [r15+0x20]
  41c40d:	mov    DWORD PTR [r15+0x30],0x0
  41c415:	mov    QWORD PTR [r15+0x58],rax
  41c419:	jmp    0x41c289
  41c41e:	mov    rax,QWORD PTR [rbx+0x20]
  41c422:	test   rax,rax
  41c425:	mov    QWORD PTR [rsp+0x40],rax
  41c42a:	je     0x41c649
  41c430:	movsxd rdx,DWORD PTR [r15+0x2c]
  41c434:	lea    eax,[rdx+0x1]
  41c437:	cmp    eax,0x9
  41c43a:	mov    DWORD PTR [r15+0x2c],eax
  41c43e:	jg     0x41b63f
  41c444:	test   eax,eax
  41c446:	je     0x41c60d
  41c44c:	lea    rdx,[r15+rdx*8]
  41c450:	cdqe   
  41c452:	mov    rcx,QWORD PTR [rdx+0x58]
  41c456:	mov    ecx,DWORD PTR [rcx]
  41c458:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  41c461:	mov    rax,QWORD PTR [r15+0x20]
  41c465:	add    rax,0x60
  41c469:	cmp    ecx,0xf
  41c46c:	mov    QWORD PTR [rdx+0x60],rax
  41c470:	jne    0x41c480
  41c472:	mov    eax,DWORD PTR [r15+0x28ac]
  41c479:	mov    DWORD PTR [r15+0x28b0],eax
  41c480:	mov    rax,QWORD PTR [r15+0x8]
  41c484:	mov    rax,QWORD PTR [rax+0x28]
  41c488:	test   rax,rax
  41c48b:	je     0x41c492
  41c48d:	mov    rcx,r15
  41c490:	call   rax
  41c492:	xor    esi,esi
  41c494:	xor    edi,edi
  41c496:	mov    rcx,QWORD PTR [rsp+0x40]
  41c49b:	lea    rdx,[rip+0x4a21]        # 0x420ec3
  41c4a2:	mov    r8,rdi
  41c4a5:	mov    r9d,0x2
  41c4ab:	call   0x412438
  41c4b0:	test   rax,rax
  41c4b3:	mov    rdi,rax
  41c4b6:	je     0x41c5a6
  41c4bc:	movsxd rax,DWORD PTR [r15+0x2c]
  41c4c0:	mov    r14,QWORD PTR [rdi+0x8]
  41c4c4:	mov    r13,QWORD PTR [rdi]
  41c4c7:	mov    rbx,QWORD PTR [r15+rax*8+0x58]
  41c4cc:	cmp    DWORD PTR [rbx+0x58],0x0
  41c4d0:	je     0x41c5eb
  41c4d6:	mov    rdx,QWORD PTR [rsp+0x30]
  41c4db:	mov    r8,r13
  41c4de:	mov    rcx,r15
  41c4e1:	mov    QWORD PTR [rsp+0xd8],0x0
  41c4ed:	mov    QWORD PTR [rsp+0xe0],0x0
  41c4f9:	call   0x40a740
  41c4fe:	test   eax,eax
  41c500:	mov    esi,eax
  41c502:	js     0x41c55d
  41c504:	mov    rdx,QWORD PTR [rsp+0x48]
  41c509:	mov    r8,r14
  41c50c:	mov    rcx,r15
  41c50f:	call   0x40a740
  41c514:	test   eax,eax
  41c516:	mov    esi,eax
  41c518:	js     0x41c55d
  41c51a:	mov    rax,QWORD PTR [r15+0x8]
  41c51e:	mov    r8,QWORD PTR [rsp+0xe0]
  41c526:	mov    rcx,r15
  41c529:	mov    rdx,QWORD PTR [rsp+0xd8]
  41c531:	call   QWORD PTR [rax+0x48]
  41c534:	mov    rcx,QWORD PTR [rsp+0xd8]
  41c53c:	call   0x4123c0
  41c541:	mov    rcx,QWORD PTR [rsp+0xe0]
  41c549:	call   0x4123c0
  41c54e:	movsxd rax,DWORD PTR [r15+0x2c]
  41c552:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c558:	jmp    0x41c496
  41c55d:	mov    rax,QWORD PTR [rbx+0x48]
  41c561:	lea    r8,[rip+0x5ab0]        # 0x422018
  41c568:	mov    r9,r13
  41c56b:	mov    edx,0x10
  41c570:	mov    rcx,r15
  41c573:	mov    QWORD PTR [rsp+0x20],r14
  41c578:	mov    QWORD PTR [rsp+0x28],rax
  41c57d:	call   0x412308
  41c582:	mov    rcx,QWORD PTR [rsp+0xd8]
  41c58a:	call   0x4123c0
  41c58f:	mov    rcx,QWORD PTR [rsp+0xe0]
  41c597:	call   0x4123c0
  41c59c:	movsxd rax,DWORD PTR [r15+0x2c]
  41c5a0:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c5a6:	movsxd rax,DWORD PTR [r15+0x2c]
  41c5aa:	lea    rdx,[r15+rax*8]
  41c5ae:	test   eax,eax
  41c5b0:	mov    r8,QWORD PTR [rdx+0x58]
  41c5b4:	mov    r8d,DWORD PTR [r8]
  41c5b7:	je     0x41c5cf
  41c5b9:	mov    rdx,QWORD PTR [rdx+0x50]
  41c5bd:	mov    edx,DWORD PTR [rdx]
  41c5bf:	cmp    edx,0xffffffff
  41c5c2:	je     0x41c5cf
  41c5c4:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  41c5ca:	cmp    edx,0xf
  41c5cd:	je     0x41c639
  41c5cf:	mov    rax,QWORD PTR [r15+0x8]
  41c5d3:	mov    rax,QWORD PTR [rax+0x30]
  41c5d7:	test   rax,rax
  41c5da:	je     0x41c5e1
  41c5dc:	mov    rcx,r15
  41c5df:	call   rax
  41c5e1:	sub    DWORD PTR [r15+0x2c],0x1
  41c5e6:	jmp    0x41c38d
  41c5eb:	mov    rcx,QWORD PTR [rbx+0x50]
  41c5ef:	xor    r9d,r9d
  41c5f2:	xor    r8d,r8d
  41c5f5:	mov    rdx,r13
  41c5f8:	xor    esi,esi
  41c5fa:	call   0x412438
  41c5ff:	test   rax,rax
  41c602:	jne    0x41c4d6
  41c608:	jmp    0x41c496
  41c60d:	mov    rax,QWORD PTR [r15+0x20]
  41c611:	mov    DWORD PTR [r15+0x30],0x0
  41c619:	add    rax,0x60
  41c61d:	mov    QWORD PTR [r15+0x58],rax
  41c621:	jmp    0x41c480
  41c626:	cmp    r8d,0xd
  41c62a:	je     0x41c650
  41c62c:	add    DWORD PTR [r15+0x28ac],0x1
  41c634:	jmp    0x41c3ba
  41c639:	cmp    r8d,0xd
  41c63d:	je     0x41c65d
  41c63f:	add    DWORD PTR [r15+0x28ac],0x1
  41c647:	jmp    0x41c5cf
  41c649:	xor    esi,esi
  41c64b:	jmp    0x41c38d
  41c650:	add    DWORD PTR [r15+0x28a8],0x1
  41c658:	jmp    0x41c3ba
  41c65d:	add    DWORD PTR [r15+0x28a8],0x1
  41c665:	jmp    0x41c5cf
  41c66a:	mov    rbx,r15
  41c66d:	mov    r15,QWORD PTR [rsp+0x50]
  41c672:	mov    rcx,rbx
  41c675:	call   0x407ed0
  41c67a:	test   esi,esi
  41c67c:	js     0x41b1cb
  41c682:	mov    rbp,QWORD PTR [rsp+0xc8]
  41c68a:	jmp    0x41b5e2
  41c68f:	lea    r8,[rip+0x57f8]        # 0x421e8e
  41c696:	lea    rdx,[rip+0x6172]        # 0x42280f
  41c69d:	mov    rcx,rbx
  41c6a0:	call   0x40ac10
  41c6a5:	jmp    0x41b7b2
  41c6aa:	mov    rbx,r15
  41c6ad:	mov    r15,QWORD PTR [rsp+0x48]
  41c6b2:	mov    rcx,rbx
  41c6b5:	call   0x407ed0
  41c6ba:	mov    rbp,QWORD PTR [rsp+0xc8]
  41c6c2:	jmp    0x41b5c8
  41c6c7:	mov    rbx,r15
  41c6ca:	mov    r15,QWORD PTR [rsp+0x48]
  41c6cf:	mov    rcx,rbx
  41c6d2:	call   0x407ed0
  41c6d7:	jmp    0x41b1cb
  41c6dc:	nop
  41c6dd:	nop
  41c6de:	nop
  41c6df:	nop
  41c6e0:	(bad)  
  41c6e1:	(bad)  
  41c6e2:	(bad)  
  41c6e3:	(bad)  
  41c6e4:	(bad)  
  41c6e5:	(bad)  
  41c6e6:	(bad)  
  41c6e7:	inc    DWORD PTR [rax]
  41c6e9:	add    BYTE PTR [rax],al
  41c6eb:	add    BYTE PTR [rax],al
  41c6ed:	add    BYTE PTR [rax],al
  41c6ef:	add    bh,bh
  41c6f1:	(bad)  
  41c6f2:	(bad)  
  41c6f3:	(bad)  
  41c6f4:	(bad)  
  41c6f5:	(bad)  
  41c6f6:	(bad)  
  41c6f7:	inc    DWORD PTR [rax]
  41c6f9:	add    BYTE PTR [rax],al
  41c6fb:	add    BYTE PTR [rax],al
  41c6fd:	add    BYTE PTR [rax],al
	...
